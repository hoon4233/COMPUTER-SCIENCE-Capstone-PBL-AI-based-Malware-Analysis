sbb
add
inc
cs
stc
xchg
lds
xor
cmp
leave
pop
retf
ja
sbb
jb
(bad)
pop
inc
lods
std
(bad)
(bad)
mov
sub
cli
aaa
nop
push
fwait
pop
cmp
mov
test
call
cmp
movs
cli
fadd
shr
xor
push
ficom
fsub
ficomp
inc
cwde
imul
push
stc
adc
add
dec
push
test
je
jmp
scas
mov
dec
ins
pop
paddw
rep
stos
mov
(bad)
ficom
mov
cmp
pop
fist
les
xchg
or
and
jle
fdiv
or
xor
scas
and
stos
pusha
xor
mov
cmps
bound
mov
data16
push
and
cmp
rol
fs
jge
mov
add
and
mov
dec
hlt
je
add
sub
lock
lea
xlat
inc
sbb
pop
mov
fld
sub
xor
and
and
xor
dec
pop
push
push
jmp
dec
add
inc
or
sti
xchg
retf
out
sbb
pop
xchg
pop
pop
pop
frstor
in
mov
mov
call
scas
adc
ror
dec
fisttp
movs
mov
pushf
call
lods
sub
fcomp
in
xchg
pop
sbb
xchg
repnz
(bad)
mov
jbe
shl
cmp
adc
out
mov
out
call
repnz
add
stos
pop
out
mov
rcl
rol
dec
and
inc
gs
push
or
mov
fs
xchg
xchg
jecxz
dec
out
mov
sbb
es
int
dec
retf
outs
adc
(bad)
mov
mov
ja
clc
ds
stos
sbb
sbb
cs
mov
inc
sub
movs
inc
xor
cmc
and
out
(bad)
outs
add
sbb
mov
iret
or
jle
or
cdq
sbb
cmp
loope
and
ja
fcomp
mov
imul
and
movs
mov
xacquire
fnstsw
jecxz
rcl
lods
pop
popf
mov
int
ret
js
movs
leave
lods
cmps
fisub
jae
fs
mov
ret
aaa
es
add
xlat
lods
push
es
xchg
loope
out
mov
je
xor
mov
add
and
push
sahf
out
push
call
test
xor
bound
adc
cmp
das
add
rcr
push
jmp
jle
push
arpl
inc
cmp
push
aad
xor
in
xchg
mov
xor
pop
xor
mov
repnz
xor
push
mov
js
out
fwait
into
cmp
int
push
xchg
xchg
sub
cmp
cwde
jg
in
mov
and
stos
ss
push
sub
(bad)
mov
mov
dec
add
cmp
mov
loop
bound
mov
xchg
retf
add
loop
jecxz
xchg
push
xchg
stc
add
scas
cmps
fistp
pop
add
popa
ret
jb
mov
int3
sbb
lahf
mov
call
es
push
leave
mov
ret
push
cmp
jmp
jo
sub
in
inc
nop
sti
jp
cld
mov
addr16
call
rcr
in
dec
and
aas
cmc
inc
push
ret
dec
xchg
lods
add
and
mov
add
(bad)
push
aam
add
aad
fwait
pusha
add
cmp
iret
push
mov
sbb
xor
(bad)
jge
push
mov
stc
(bad)
fisubr
and
out
rcl
ja
pop
push
sbb
jg
stos
cdq
mov
(bad)
fidivr
jle
das
stc
xor
push
(bad)
add
push
and
xor
ja
dec
sbb
push
rep
cmps
dec
call
(bad)
mov
in
mov
xlat
scas
pop
push
xchg
pop
sub
mov
cmps
loopne
imul
mov
push
xchg
aad
jge
pusha
stc
(bad)
cmp
ins
dec
je
retf
jns
xchg
jp
std
xchg
cld
push
loopne
popa
xor
pushf
and
aas
ins
fsub
pop
shl
push
ficom
jns
jle
je
pop
jg
xchg
repz
jnp
xchg
call
daa
add
or
mov
stos
cmps
mov
les
aam
add
les
mov
sbb
daa
stc
mov
jmp
fwait
sbb
iret
(bad)
aam
fsub
jmp
jmp
mov
inc
jle
push
das
(bad)
adc
retf
push
ds
sbb
sbb
fwait
loopne
add
cs
add
out
xlat
dec
imul
xchg
mov
mov
fwait
pop
adc
lods
test
add
add
or
sub
fs
loop
pusha
scas
fstp
cmp
jl
test
jno
(bad)
mov
xor
test
mov
jo
mov
xchg
fnstcw
lods
lock
mov
jge
xchg
mov
lods
and
mov
les
lds
aas
(bad)
or
dec
ins
and
imul
test
push
retf
inc
test
mov
push
neg
in
clc
es
clc
scas
enter
add
pop
jae
add
call
mov
inc
stc
mov
aas
test
nop
outs
sbb
lahf
fstp
push
mov
or
sahf
jae
xchg
stc
mov
mov
adc
outs
pop
cmp
pushf
xor
mov
and
xor
cmc
cmp
mov
dec
fst
fs
jp
je
xchg
ss
je
out
and
inc
sbb
mov
inc
inc
and
xchg
inc
ret
mov
sbb
sub
jo
dec
enter
add
ss
loope
adc
add
mov
mov
jmp
out
inc
in
int
clc
popf
add
push
outs
push
fsubrp
sar
lock
(bad)
loop
stc
xor
inc
push
sub
mov
and
push
add
std
sub
jle
xor
mov
pop
and
mov
and
cmp
call
mov
nop
xor
jo
idiv
mov
cmp
inc
or
push
add
xchg
adc
mov
sub
cmp
stc
call
or
push
in
cli
sub
ds
repnz
push
sahf
iret
xor
cmp
jnp
iret
inc
xor
mov
pop
mov
sub
push
out
dec
xor
sub
fbstp
cmps
xchg
loope
xchg
fild
mov
mov
in
sub
lods
mov
sbb
clc
add
jno
lds
xchg
ss
jmp
add
(bad)
hlt
cmp
lea
add
push
sbb
cwde
push
stc
or
and
movs
dec
mov
pop
dec
in
jmp
xchg
push
mov
lods
jne
jle
cdq
dec
jb
cmps
mov
inc
add
sbb
and
sub
inc
dec
scas
add
mov
loopne
and
fwait
test
(bad)
xchg
or
xor
movs
dec
scas
push
xchg
movs
cmps
(bad)
(bad)
pushf
adc
mov
mov
xchg
pop
cmc
or
les
stos
nop
xchg
bound
adc
push
push
sar
pop
jnp
(bad)
mov
mov
inc
cld
ret
into
cmps
xchg
cmp
pop
and
outs
xchg
(bad)
loopne
fisttp
sbb
pushf
sar
mov
pop
mov
fs
push
cmp
(bad)
loop
or
(bad)
ins
iret
cmc
scas
call
mov
out
xor
inc
jnp
xchg
scas
iret
cmp
mov
js
xor
inc
call
cmp
jne
cmp
fsub
ror
pop
fsubrp
aam
sar
or
(bad)
and
mov
push
fiadd
imul
and
mov
mov
daa
aaa
or
les
add
sbb
mov
test
jge
or
arpl
pop
or
(bad)
fcomp
push
adc
out
mov
arpl
mov
pushf
push
inc
push
sub
out
push
aaa
mov
add
xchg
jbe
nop
daa
cmc
std
es
imul
lahf
stc
leave
xor
repnz
and
push
cli
imul
lds
(bad)
mov
xor
jecxz
sbb
aad
jo
in
sub
adc
mov
add
and
leave
ja
sub
mov
stc
scas
jecxz
and
dec
pop
hlt
mov
mov
stc
cwde
mov
or
sub
sub
stos
movs
add
push
into
jo
dec
dec
and
xor
mov
pushf
imul
ins
xchg
cwde
das
fcmove
int3
das
in
arpl
pop
xor
mov
sub
outs
xor
mov
cmc
std
and
mov
retf
cmp
icebp
pop
adc
dec
pop
hlt
pop
cmp
mov
fist
sbb
fimul
rol
scas
jg
into
(bad)
xchg
and
jmp
jecxz
xor
int
push
push
les
cli
push
xor
movs
test
test
jno
jbe
pushf
fwait
stos
or
xchg
push
pusha
push
div
mov
jne
aad
in
cli
add
jns
pop
div
imul
sbb
das
xchg
mov
enter
push
leave
xchg
inc
mov
int
sub
sahf
(bad)
pop
pop
mov
imul
popa
adc
cs
add
mov
js
mov
dec
sti
es
add
es
bound
push
ror
sbb
cli
(bad)
mov
inc
xor
jae
mov
nop
mov
(bad)
fstp
xchg
iret
call
mov
and
mov
mov
or
mov
out
in
outs
or
add
test
cmp
jp
js
test
cs
pop
cld
fnstenv
inc
sbb
and
in
into
sub
stos
(bad)
dec
cmps
pop
das
sbb
in
cmps
mov
int3
cmc
push
cmp
test
cwde
push
push
xor
int
mov
jge
(bad)
pop
mov
test
and
xor
jl
pushf
das
push
(bad)
into
into
iret
pop
mov
mov
in
iret
es
jb
aad
adc
mov
test
sub
adc
jg
lods
xchg
jmp
sbb
pop
sbb
neg
or
or
icebp
cs
call
in
cmc
test
sub
cld
mov
aaa
std
popf
lock
xchg
cmp
xchg
adc
jb
stos
jp
mov
nop
mov
mov
jle
pop
aad
js
lahf
les
cmps
adc
fstp
pop
cwde
lds
iret
shr
adc
les
ror
sub
mov
push
dec
push
dec
adc
inc
add
das
in
dec
sbb
aas
into
(bad)
jecxz
sub
test
cs
mov
push
int3
jnp
gs
hlt
push
es
pop
test
sub
sahf
mov
push
arpl
scas
pop
jl
ss
mov
fsubr
xor
cdq
pop
retf
and
sub
cli
jne
enter
bound
or
mov
xchg
sbb
adc
stos
(bad)
in
ss
lods
es
daa
mov
stc
dec
outs
mov
and
adc
loopne
sub
and
jb
or
push
mov
shr
ja
cmp
pushf
mov
adc
aam
adc
xor
or
adc
repnz
xchg
test
xchg
mov
and
lods
rcl
xchg
out
into
fwait
out
les
jno
pusha
jle
mov
or
or
and
es
jo
add
clc
sbb
imul
stos
outs
mov
mov
and
imul
mov
sahf
lods
cdq
pop
loope
dec
pop
test
(bad)
xchg
sbb
mov
ja
xor
gs
and
or
movs
and
sbb
pop
cmps
dec
outs
sahf
mov
fstp
test
das
xchg
add
icebp
dec
adc
repnz
inc
iret
push
pop
pop
sub
pop
test
ins
aas
dec
imul
daa
jns
cld
pop
mov
cmps
fcmovnu
sbb
sar
pop
mov
sub
das
sub
jae
jl
xchg
dec
sti
fs
call
in
mov
test
mov
push
(bad)
cld
push
das
lock
inc
(bad)
jg
call
in
dec
or
sub
jle
pop
sub
xchg
fdiv
jmp
push
mov
pushf
in
stc
xchg
inc
dec
jb
aaa
xor
rcr
push
int3
pop
add
jno
add
xchg
xor
rcl
jmp
or
repnz
adc
fnsave
xor
add
xor
popa
repz
int3
push
mov
xor
xchg
out
jns
lea
mov
popa
add
out
cmp
lea
xchg
cmp
call
dec
stos
dec
jg
mov
or
mov
or
push
mov
imul
cli
iret
mov
add
test
push
mov
movs
mov
arpl
iret
popf
dec
cdq
aad
mov
xor
call
push
inc
cli
je
popa
fs
outs
push
xchg
shl
cld
adc
cmp
push
pop
cmp
mov
js
push
sbb
jno
loopne
and
mov
jb
xchg
cmp
sar
mov
or
cmp
jecxz
cmp
inc
mov
sahf
or
stos
add
push
aam
jecxz
or
stos
jno
dec
push
xchg
mov
lock
and
jecxz
in
sbb
pop
mov
imul
and
fisttp
jb
sub
sbb
add
fnstcw
add
pop
pop
call
out
push
js
outs
adc
movs
mov
sbb
je
mov
out
loopne
or
xchg
aad
xor
lock
outs
inc
mov
pop
out
or
push
in
mov
jbe
sub
test
and
fadd
xor
xor
xor
mov
jns
mov
fwait
inc
mov
js
or
cmp
dec
push
into
cld
sbb
adc
mov
sub
mov
mov
es
sbb
jl
jp
mov
push
sbb
pop
inc
add
sahf
test
inc
and
sub
jae
adc
rol
test
stc
pusha
shr
mov
(bad)
lea
nop
jmp
out
je
push
dec
fwait
xchg
icebp
inc
ins
imul
jg
mov
push
lock
in
loop
pushf
nop
jecxz
xchg
cmp
aam
popa
in
repz
mov
xchg
cwde
add
lds
add
loope
xor
mov
fiadd
mov
cmps
mov
repnz
nop
inc
ds
pop
bound
inc
cmps
sub
fs
and
push
sti
pop
gs
inc
(bad)
fistp
inc
or
ret
add
dec
aaa
sub
out
or
loop
xchg
(bad)
loopne
xchg
std
lahf
daa
or
int
sahf
xchg
js
hlt
cmps
repnz
cmp
into
fwait
sbb
hlt
out
and
cmc
push
dec
mov
push
lods
push
int3
ror
imul
and
lea
mov
(bad)
in
hlt
jmp
test
rcr
xchg
mov
mov
lahf
push
cmp
cmp
ror
pop
jmp
inc
sbb
sahf
pop
out
ficom
int3
inc
mov
stc
nop
adc
outs
sbb
cmps
adc
inc
sbb
xor
addr16
cld
iret
fnsetpm(287
shl
pop
mov
xor
(bad)
fcomp
xchg
fwait
sti
add
cwde
fcmovu
adc
(bad)
and
dec
shl
mov
fldenv
iret
mov
sbb
test
sub
dec
sbb
add
not
lods
jg
out
adc
cwde
repnz
addr16
bound
mov
or
enter
icebp
loope
mov
dec
jmp
or
pop
jl
mov
cmp
mov
cwde
dec
adc
outs
and
jnp
fwait
std
mov
and
je
and
or
jae
push
fwait
or
icebp
iret
jne
std
dec
lods
ror
xor
mov
enter
add
nop
ja
add
and
daa
repz
jnp
pop
pop
push
shr
or
mov
ror
cwde
cmc
in
mov
stos
mov
and
xchg
and
sub
outs
jmp
leave
xor
cmp
shr
clc
out
fist
inc
mov
cld
xchg
test
scas
add
dec
pop
nop
call
jbe
mov
imul
outs
cwde
iret
adc
add
add
and
test
lods
push
add
scas
or
adc
mov
push
scas
mov
dec
pop
enter
scas
mov
mov
sub
fwait
xchg
xchg
push
xor
scas
jbe
out
outs
add
adc
scas
stos
push
jne
cwde
add
hlt
(bad)
mov
mov
jae
push
movs
jae
xchg
jg
bound
pop
imul
cmc
sbb
fsub
daa
jb
xchg
pop
lahf
test
mov
adc
mov
cmc
out
out
leave
stc
cmp
xchg
or
(bad)
jl
mov
es
jae
repz
test
xor
in
jae
aad
fs
or
out
sub
shl
popa
cmp
aaa
psubb
sbb
(bad)
rcr
int3
push
push
loope
sbb
enter
les
jbe
sbb
xlat
cli
inc
inc
in
xor
sub
repnz
mov
jp
sbb
fbld
push
icebp
mov
sub
mov
push
int3
pop
popf
test
dec
mov
and
mov
lahf
push
push
fsub
sbb
xchg
fwait
pushf
int3
ds
fwait
inc
scas
mov
addr16
and
add
retf
sar
popa
outs
xchg
out
xor
mov
(bad)
loop
mov
inc
outs
add
scas
retf
das
loopne
ficom
inc
mov
cmp
call
ror
pushf
fdivr
bound
xor
rol
mov
test
add
mov
mov
and
or
loop
pop
mov
ret
loope
jae
fsubr
mov
(bad)
js
jne
aaa
shl
mov
jg
cmp
mov
inc
cs
sbb
ret
inc
fst
int3
xor
sbb
pop
int3
iret
aam
add
fwait
xlat
push
inc
loopne
and
mov
dec
mov
and
mov
jmp
mov
xchg
out
jns
sbb
(bad)
ja
xlat
xor
gs
pop
and
mov
mov
add
shl
lea
(bad)
jge
test
(bad)
scas
ja
sub
scas
jne
cmc
shl
ret
xor
enter
sub
cmc
sar
sahf
and
mov
and
xor
mov
jbe
dec
add
in
mov
sahf
pop
aas
xor
test
in
xchg
and
in
or
sbb
or
ret
ds
sbb
call
pop
movs
jge
adc
cld
cmp
sub
or
cld
enter
jno
je
shr
or
ret
adc
out
enter
imul
cmps
test
es
ror
push
xchg
movs
xor
xor
sbb
(bad)
push
dec
pop
mov
ror
aam
(bad)
outs
ds
outs
je
loopne
xor
pop
sahf
in
inc
xor
push
pop
add
sub
inc
arpl
pop
out
aam
sbb
shl
cli
arpl
xor
jmp
jecxz
push
(bad)
dec
and
xor
cmp
jne
adc
fs
push
push
push
jecxz
push
retf
jmp
mov
stos
inc
jns
and
lods
lds
or
pusha
sbb
retf
dec
sub
aad
repz
cmp
clc
mov
daa
(bad)
jnp
jecxz
mov
ss
aad
lea
lock
fadd
push
(bad)
cmp
int3
xor
pop
iret
out
inc
or
mov
or
and
sub
or
pusha
cld
aad
mov
rol
dec
dec
jbe
inc
inc
dec
mov
popa
push
nop
outs
mov
lds
push
dec
pop
ret
je
xchg
and
push
call
or
dec
stos
push
loop
jmp
jne
push
dec
aad
pop
mov
sbb
push
ins
push
test
mov
ret
push
pop
ret
popa
popa
mov
shl
xchg
adc
pop
mov
mov
jbe
inc
inc
jp
(bad)
jbe
mov
mov
retf
outs
and
mov
aam
xor
arpl
sbb
push
mov
xchg
xor
ins
cmc
push
sti
xchg
std
add
pop
ins
adc
cmps
dec
push
xor
pop
fcmovnbe
cli
cld
dec
or
pop
je
mov
ror
add
js
sbb
clc
imul
mov
int
mov
cli
les
mov
push
mov
push
js
dec
sub
add
pop
mov
test
test
iret
imul
push
mov
add
add
jbe
call
rcr
pop
jg
cmp
mov
(bad)
jg
ins
retf
push
adc
rcr
mov
sbb
pop
xor
or
sti
and
or
ins
cli
jg
pop
pop
sar
sub
pop
mov
sub
sbb
aam
clc
push
mov
popf
ror
scas
clc
xor
xchg
push
les
push
push
mov
mov
jno
imul
ins
sti
xchg
fwait
bnd
jg
sti
popa
lahf
jp
pushf
mov
dec
sbb
jae
jp
jge
stos
jle
cmp
out
loopne
(bad)
sbb
jge
adc
pop
dec
xor
enter
test
adc
sbb
sbb
loop
jmp
call
sub
add
jge
shr
cmc
jns
cmp
push
fisub
movs
addr16
pop
lds
mov
dec
or
sbb
pushf
and
mov
lds
jge
jmp
adc
inc
lock
cmp
fwait
xchg
jb
outs
pop
inc
sbb
mov
mov
cmp
sbb
enter
dec
mov
adc
test
mov
das
enter
sub
cmps
sub
inc
idiv
inc
in
loope
in
stos
adc
out
daa
fild
scas
pop
in
loopne
sbb
test
fwait
jmp
ret
fistp
and
mov
ret
push
xor
nop
loope
mov
cld
ret
sub
mov
movs
inc
cmp
add
loope
jge
sub
cdq
pushf
movs
dec
jp
adc
lods
daa
sub
inc
jns
call
inc
aad
js
mov
imul
lods
mov
(bad)
push
mov
ret
xchg
retf
pop
icebp
jmp
lods
xchg
scas
pop
mov
jbe
jge
ins
fisub
les
outs
jecxz
fist
push
sar
cmp
fnstcw
pop
sub
and
pop
xchg
cmc
push
sub
adc
add
loop
nop
xor
dec
xchg
fs
push
dec
dec
jne
in
cli
fidivr
into
jp
ja
xchg
stc
ins
sbb
add
pop
mov
push
(bad)
loopne
xor
rol
les
jge
mov
imul
push
ret
loop
xchg
cmp
xchg
(bad)
repnz
inc
mov
ret
outs
fbld
dec
test
inc
push
sbb
fild
lock
mov
sub
or
addr16
ja
pop
sub
pop
imul
test
mov
xchg
(bad)
jnp
fbstp
movs
mov
xchg
iret
cmp
xchg
adc
fwait
jnp
movs
pusha
mov
cmp
(bad)
cmp
xchg
ins
pop
daa
cli
mov
sub
adc
push
sti
clc
inc
aaa
fidiv
scas
mov
xchg
and
aad
jae
jle
mov
push
dec
sar
push
lods
(bad)
or
and
xlat
jge
adc
sbb
dec
jb
cld
push
pop
repnz
jecxz
add
inc
push
scas
pop
outs
popa
xor
out
xlat
in
out
sbb
jmp
add
stc
cmp
int3
push
cmp
out
or
sbb
call
push
enter
test
sub
lods
outs
jne
mov
sub
mov
out
shr
mov
xchg
or
repz
sub
shl
loope
pop
ror
mov
setae
cs
mov
iret
stc
inc
mov
jge
xchg
hlt
cmp
mov
call
jo
ficomp
sub
adc
arpl
xchg
xchg
shr
mov
jo
sbb
in
push
jmp
cld
jge
mov
cmp
or
ret
fistp
mov
imul
enter
loop
fisub
inc
sbb
xchg
pop
scas
in
pop
adc
loope
xchg
sahf
aad
mov
jmp
inc
pushf
fabs
cdq
pusha
mov
sub
sbb
shl
sbb
jbe
adc
imul
dec
push
ins
dec
add
xchg
mov
bound
adc
dec
jecxz
push
sub
fwait
mov
push
repnz
push
pop
mov
and
cmp
call
and
adc
xchg
test
mov
jecxz
pop
sbb
lahf
dec
(bad)
push
ret
cwde
mov
xor
mov
mov
push
cdq
push
outs
daa
(bad)
ins
sbb
mov
and
mov
jnp
mov
mov
adc
lock
adc
add
push
jb
outs
call
xor
dec
push
outs
and
ins
cli
test
jbe
cmp
add
push
or
or
sub
cmp
add
add
jle
push
jl
sbb
jb
arpl
mov
mov
adc
dec
push
lock
test
in
jl
and
pop
clc
fisttp
jle
mov
nop
sbb
faddp
pop
mov
cmp
xor
mov
jnp
xchg
test
stos
mov
and
push
jnp
pop
sub
mov
mov
and
cmp
mov
loop
scas
xlat
ins
sub
pop
jne
cmp
add
pushf
inc
push
mov
mov
out
mov
inc
daa
aam
inc
jmp
sahf
xor
mov
push
add
sahf
push
adc
push
push
pop
pop
xchg
out
loop
sahf
mov
lods
mov
jns
push
adc
mov
lds
or
icebp
mov
in
dec
push
ja
push
fbld
sub
aad
test
mov
in
aas
cwde
xchg
aas
xchg
popf
pop
mov
jge
dec
mov
mov
or
mov
mov
pushf
xchg
sbb
cmps
adc
push
jbe
push
sub
dec
ja
sub
inc
sbb
pop
cmc
push
fiadd
adc
and
dec
mov
sbb
mov
mov
or
cld
mov
mov
add
sbb
in
xor
adc
mov
outs
pop
pop
mov
ds
je
pop
fild
xchg
call
and
add
cmps
into
dec
inc
jmp
fist
ret
rcl
add
dec
add
push
clc
and
and
push
inc
sbb
push
adc
popa
std
(bad)
jne
xchg
fdivr
aad
inc
ja
mov
cmc
sbb
fmul
pop
mov
retf
push
in
gs
popa
cmp
mov
ret
sub
pop
xor
or
int
jne
test
bnd
in
ret
dec
(bad)
dec
outs
bound
and
es
mov
daa
test
ss
test
mov
sbb
xchg
popa
ins
xchg
hlt
movs
adc
(bad)
dec
or
inc
push
shl
cdq
repnz
or
jb
push
jno
mov
sbb
xchg
data16
adc
mov
cs
cmp
outs
pushf
adc
dec
mov
add
mov
mov
mov
fs
out
pop
cmps
shr
ja
cwde
(bad)
(bad)
aad
repnz
stos
cmp
(bad)
dec
fsubr
sub
push
xchg
inc
sbb
retf
push
add
push
sub
xchg
jno
sbb
dec
sbb
sub
mov
(bad)
int3
add
xlat
into
std
or
dec
retf
test
scas
xchg
stos
adc
mov
retf
cmp
cmps
sbb
jmp
xchg
(bad)
retf
fisub
pop
xor
lock
push
cmp
and
fnsave
mov
adc
and
mov
out
mov
test
mov
dec
inc
jb
dec
xchg
sti
(bad)
cld
and
and
hlt
add
sbb
xor
int
jb
test
inc
adc
fs
adc
stos
dec
jl
and
out
or
xchg
sbb
aad
or
xchg
dec
mov
xor
mov
mov
mov
and
cmp
pop
lods
jmp
sub
mov
(bad)
sbb
inc
es
clc
cmp
and
nop
(bad)
rcl
scas
ret
cld
sbb
iret
retf
pushf
sub
jecxz
int
or
adc
xor
leave
ret
out
add
mov
dec
mov
addr16
int
inc
movs
std
cmp
inc
fcomp
pop
ins
inc
jl
clc
mov
in
(bad)
jno
or
push
add
pop
clc
daa
cmp
pop
adc
xchg
or
jge
out
pop
jns
fdivr
lds
mov
mov
shr
jns
out
or
mov
xor
(bad)
cmp
shl
dec
ja
(bad)
fwait
jp
push
jmp
dec
ret
icebp
xchg
xor
mov
repnz
popf
inc
mov
mov
inc
jecxz
(bad)
pop
push
(bad)
mov
add
and
adc
cmp
loop
xchg
push
pop
or
jbe
outs
push
icebp
scas
xchg
int
jmp
jne
cmp
push
mov
or
jbe
and
mov
mov
xchg
test
out
inc
sahf
pop
xchg
xchg
and
push
sbb
sar
(bad)
inc
sub
cmps
fisubr
aad
jmp
cwde
cld
mov
cmp
mov
fsubr
or
scas
mov
(bad)
ror
cmp
enter
jns
push
push
push
scas
cmp
jle
sub
in
addr16
arpl
sub
sub
lods
push
mov
cmp
dec
pop
mov
jl
call
out
push
jnp
clc
adc
cmp
pop
rol
or
push
das
mov
mov
cmp
inc
jmp
hlt
pop
pop
movs
in
jno
add
push
xchg
sub
test
jo
stos
sbb
stc
outs
inc
lock
aad
xor
addr16
daa
xor
xchg
ret
imul
nop
sar
mov
ins
jmp
cld
call
lea
mov
or
and
scas
add
ja
add
cmp
out
daa
repz
aad
mov
xor
pusha
and
mov
dec
xchg
imul
mov
out
mov
ret
fadd
movs
and
push
mov
ins
mov
pop
or
push
stos
inc
sahf
fist
pop
aad
rcl
pop
dec
test
or
ja
or
(bad)
fdiv
xchg
icebp
push
nop
idiv
test
inc
jns
or
int3
jns
and
loopne
lahf
popa
addr16
jns
scas
pop
iret
add
sub
mov
mov
icebp
mov
outs
push
push
sbb
aas
mov
dec
adc
aaa
dec
jp
bound
stc
xchg
jne
xchg
jmp
je
fcmovnbe
adc
sub
stos
push
and
sub
sbb
jns
or
(bad)
push
xchg
jne
dec
dec
add
cmp
or
scas
pop
les
loop
add
iret
jl
mov
ds
jo
mov
sub
xchg
lods
aas
test
jns
imul
daa
jbe
inc
(bad)
fstp
movs
add
pushf
add
popa
sbb
in
aam
mov
in
das
in
add
cmps
mov
imul
mov
jmp
cmps
xchg
mov
in
movs
mov
movs
arpl
push
inc
dec
xor
ret
test
dec
sbb
out
mov
or
shr
or
xchg
bound
das
push
pop
push
mov
imul
cmp
cmp
stc
and
or
in
dec
into
jg
jno
add
sub
cld
jg
test
jb
jl
and
subps
push
aad
movs
out
sbb
scas
out
into
cmp
cwde
test
fmul
fiadd
sti
ret
fstp
test
and
(bad)
mov
dec
jo
fs
or
lods
inc
arpl
enter
lock
push
fidivr
nop
sub
rcr
and
or
clc
sbb
mov
(bad)
xor
jle
adc
int3
xor
dec
inc
adc
dec
dec
xor
mov
aam
loope
pop
adc
daa
ja
inc
xchg
js
arpl
push
ja
mov
ret
adc
jae
push
mov
xor
fistp
js
and
mov
data16
fwait
call
imul
retf
jmp
dec
and
rcr
jb
in
(bad)
mov
inc
jmp
xor
sbb
out
loope
sbb
call
push
jno
and
jle
mov
pop
cdq
stos
out
push
into
or
push
cmp
mov
mov
in
ja
xor
jnp
xor
ds
pusha
rcl
jp
xchg
mov
mov
popf
bound
cmp
pop
sbb
dec
fcomp
push
pop
lahf
in
pop
adc
jns
jo
adc
das
mov
stos
mov
jmp
adc
sbb
loopne
push
sub
push
ja
cmp
iret
fs
ins
in
pop
adc
je
leave
sti
sub
stos
sbb
repnz
pop
bound
mov
aas
jp
mov
jo
or
jae
add
cmps
xor
push
dec
dec
(bad)
jge
push
repz
imul
pop
call
hlt
adc
leave
jnp
or
lods
leave
dec
push
pop
inc
dec
push
pushf
rol
ds
lock
clc
push
or
xchg
pushf
repnz
cld
sahf
mov
pop
mov
stc
jp
fidivr
pop
jns
xchg
mov
xlat
sbb
(bad)
in
sbb
repnz
mov
mov
ss
pushf
jae
stos
dec
adc
inc
pop
mov
(bad)
xchg
mov
ja
(bad)
sub
push
adc
cmp
mov
xor
inc
bound
gs
retf
dec
or
inc
call
fstp
jg
or
xchg
push
cmps
sbb
jle
lahf
es
sub
fdivr
stos
inc
dec
lods
test
movs
stos
enter
neg
xor
shr
ror
data16
jg
cmp
push
ss
in
mov
outs
sbb
fdiv
xchg
shl
scas
jmp
lods
imul
push
popf
jle
sub
out
lock
adc
or
ror
dec
push
sub
(bad)
jns
sar
adc
push
add
xor
jp
cmp
loop
sub
clc
ret
(bad)
pop
stc
sbb
cdq
push
xor
and
cmp
jg
mov
xor
mov
mov
dec
fidiv
adc
movs
pop
add
add
push
pop
pop
ds
cmp
int
data16
es
and
std
dec
mov
inc
sbb
mov
test
or
fs
jnp
fwait
xchg
xchg
pop
sbb
pop
or
xchg
sub
loope
lahf
and
mov
in
retf
test
jecxz
call
mov
mov
psadbw
ror
stos
into
test
sub
in
mov
xor
push
jo
pop
retf
mov
js
pusha
shr
test
sub
pop
mov
sub
jae
sahf
aam
fst
daa
xchg
push
dec
clc
inc
jecxz
push
xchg
mov
aaa
cs
mov
jp
cmp
neg
idiv
int
stc
popf
dec
ins
pop
in
mov
mov
out
jns
les
mov
fbld
sub
mov
cmp
test
pop
loope
fidiv
in
adc
inc
outs
xchg
adc
lahf
jae
mov
push
repnz
icebp
jo
and
sub
and
sbb
jp
sahf
and
or
rcr
mov
movs
push
out
ds
jb
mul
les
into
inc
add
add
lods
les
dec
add
adc
ficom
ja
and
push
popf
sub
ds
bswap
and
adc
jnp
pop
ss
add
sar
int3
jge
cld
mov
pop
mov
xor
or
test
jae
inc
dec
pop
mov
(bad)
mov
mov
or
aaa
sbb
mov
ins
add
cmp
mov
repnz
loope
pop
stc
test
test
retf
and
fbld
add
mov
mov
mov
ja
or
mov
jnp
xor
ins
mov
test
sub
sub
das
xor
or
jo
xor
out
mov
push
xlat
pop
push
ret
jmp
retf
sub
adc
push
dec
adc
cdq
adc
and
fsub
push
mov
add
test
mov
sbb
push
sub
jp
add
loope
sahf
sbb
and
pop
inc
sbb
in
xchg
dec
xchg
pop
outs
stos
add
out
mov
jns
lea
mov
dec
retf
mov
je
pop
ss
arpl
jb
int3
cmp
inc
pop
push
or
pop
dec
scas
sub
push
mov
fs
pop
pop
fbstp
dec
jl
ja
hlt
mul
mov
sbb
inc
xchg
inc
mov
call
jne
imul
int
push
aad
mov
test
push
pop
push
xlat
into
fcomp
mov
fld
je
int
inc
lods
sahf
mov
mov
aas
out
sbb
js
fwait
push
fldz
aaa
xchg
jmp
sbb
inc
xchg
test
mov
xor
pop
mov
xor
jmp
adc
dec
cmp
jl
xchg
icebp
fucom
(bad)
mov
bound
ja
xor
idiv
jp
mov
adc
(bad)
into
shl
xchg
sbb
push
jae
cld
scas
(bad)
inc
dec
push
out
xchg
mov
xchg
sub
push
cmp
mov
cmp
fmulp
je
(bad)
aaa
adc
xchg
bound
and
mov
push
loope
push
push
js
xchg
inc
xor
mov
inc
cdq
dec
in
pop
mov
inc
xchg
jge
dec
sbb
(bad)
push
daa
sub
test
jae
test
sti
lock
aam
aaa
dec
loope
push
push
adc
je
cmps
cli
push
pop
inc
sbb
nop
jb
push
mov
in
out
aad
cmp
lock
jnp
add
dec
aad
int3
icebp
mov
(bad)
nop
mov
test
jo
xor
shr
imul
cmp
jge
sbb
loopne
mov
mov
das
xchg
leave
pop
lea
ret
lea
enter
(bad)
adc
(bad)
xlat
sub
cli
imul
bound
es
add
jno
jle
shl
jecxz
fidivr
out
mov
xor
fsubr
fldcw
and
sti
sar
cmc
adc
test
add
push
(bad)
xchg
iret
cmps
mov
or
popf
arpl
push
push
mov
mov
mov
jmp
adc
dec
jg
push
pop
add
movs
pop
repz
adc
faddp
inc
jg
jae
push
cmps
lods
mov
aaa
mov
add
add
imul
mov
jp
jl
retf
inc
add
sbb
gs
push
jmp
mov
cmp
push
xor
shr
aad
xor
imul
jp
mov
push
imul
test
data16
in
rcl
(bad)
imul
iret
sahf
repnz
je
lock
push
jge
or
add
mov
shl
mov
push
mov
dec
cmc
loopne
adc
arpl
jle
lods
xor
dec
nop
mov
sar
into
loope
movs
cs
pop
and
pop
mov
in
mov
movs
pusha
pop
xlat
inc
mov
push
sbb
push
mov
inc
inc
loop
ror
pop
lods
jmp
arpl
sub
in
fcmovnb
cmp
push
xchg
out
aad
mov
mov
dec
mov
rcr
cmps
dec
aas
test
lds
out
ins
daa
retf
jp
dec
and
addr16
fwait
int
std
push
mov
addr16
shl
mov
jo
test
bnd
test
lds
xchg
push
in
sub
mov
add
outs
call
fsubr
sbb
into
jecxz
pop
cmc
sbb
cmc
mov
test
pop
iret
shr
fdiv
daa
(bad)
shl
jno
iret
fst
int3
loopne
mov
jge
punpckhwd
add
icebp
arpl
jno
gs
rol
fadd
jecxz
mov
inc
push
cmc
adc
xchg
les
sub
inc
pop
xor
ret
xchg
cwde
(bad)
mov
jno
mov
nop
sub
push
das
fisub
scas
ret
(bad)
jne
gs
push
sub
sbb
xadd
movs
cmp
popf
call
sbb
out
call
fst
out
jae
movs
test
lock
xlat
pop
add
pop
sbb
and
int3
pop
les
call
jp
mov
into
and
fst
inc
mov
cmp
mov
push
cmp
jg
into
mov
fcomp
test
add
out
dec
repz
aaa
iret
xchg
loopne
push
mov
loope
pop
add
sbb
push
inc
arpl
rcl
cmp
or
mov
cdq
or
or
dec
mov
xor
out
ret
outs
and
imul
push
adc
sbb
repz
ja
adc
sub
leave
ss
dec
adc
lds
sahf
or
adc
mov
jp
in
mov
int
dec
mov
lea
adc
adc
call
and
int
inc
repnz
adc
ja
sbb
push
enter
jo
test
and
inc
out
clc
movs
sbb
xchg
jmp
mov
xor
int3
jl
mov
ficom
inc
aad
pop
(bad)
or
jbe
push
outs
push
popf
dec
add
inc
xor
(bad)
xchg
push
sbb
sahf
iret
lods
aam
adc
inc
or
mov
sub
jg
mov
xchg
rcr
jl
cmp
dec
arpl
mov
sahf
mov
or
out
nop
xor
(bad)
jg
dec
mov
mov
cmp
jne
hlt
mov
test
mov
sbb
and
xchg
xor
cli
pop
cmps
inc
add
out
mov
add
cmp
push
rcr
dec
loop
fadd
cmc
push
sahf
sti
sub
dec
shl
shr
mov
cmp
xchg
aas
push
or
xchg
loope
ret
outs
cmc
aad
push
push
adc
cmp
pop
ret
popa
or
pop
mov
lock
adc
and
pop
call
jno
int3
fcmovb
lea
dec
(bad)
jmp
jo
rcr
lods
loopne
pop
mov
or
sbb
retf
jb
pushf
out
mov
xor
pop
das
mov
test
fdiv
mov
cmp
scas
jnp
mov
hlt
add
add
add
inc
clc
div
and
xor
pop
sub
jle
js
idiv
mov
retf
jl
in
or
adc
dec
or
sar
mov
inc
cmps
jae
scas
inc
out
push
fisttp
add
mov
mov
jmp
cld
xchg
int3
je
sbb
xor
pop
popf
xchg
mov
xchg
jns
int
push
mov
and
cld
fcmovu
add
xchg
sub
jb
inc
dec
test
(bad)
dec
enter
jecxz
inc
ins
mov
inc
mov
cld
sub
lds
mov
inc
test
jg
in
mov
lds
fimul
test
movs
leave
adc
sbb
not
or
push
mov
fs
out
adc
div
into
inc
mov
imul
lock
fs
sub
inc
cmp
cmps
inc
mov
scas
xor
repnz
loope
out
jecxz
push
(bad)
fadd
repnz
das
mov
movs
hlt
pop
popa
mov
aad
fadd
jo
inc
call
stc
popf
mov
cwde
in
bound
jl
inc
movs
test
lahf
into
pop
mov
mov
or
sub
xor
jmp
repnz
dec
test
sbb
mov
sub
fiadd
pop
loope
mov
lds
cwde
pop
lods
pop
or
lea
add
xchg
jg
jns
jge
jnp
cmp
fild
sub
cmp
fcmovne
out
cmps
xor
repnz
push
test
xchg
cdq
jge
inc
enter
push
sbb
jb
mov
std
test
xchg
sub
imul
jae
add
push
jmp
neg
stos
xor
mov
neg
int3
mov
daa
dec
(bad)
out
push
test
inc
mov
dec
push
repz
cmp
cwde
inc
outs
sahf
fisttp
in
dec
and
lea
sahf
mov
loope
mov
push
mov
add
jne
jge
pop
loop
pop
enter
add
ds
leave
in
hlt
jne
adc
jle
leave
in
mov
cld
stos
aad
rcl
out
aad
inc
inc
mov
adc
outs
gs
sub
xchg
sbb
inc
xor
add
mov
or
cmp
dec
loopne
and
inc
arpl
(bad)
scas
repz
je
dec
stos
hlt
dec
push
in
outs
pop
adc
push
jecxz
push
sub
dec
jns
shl
sbb
xor
add
fimul
adc
sbb
add
fbstp
cmps
movs
or
sbb
clc
inc
jb
push
jle
pop
mov
les
aad
add
jp
fldcw
mov
movs
loope
push
mov
add
clc
movs
xor
mov
es
aad
jne
or
pop
clc
shl
push
pop
xchg
adc
dec
leave
add
xor
mov
stc
scas
and
hlt
sahf
(bad)
out
xor
(bad)
sub
into
lods
or
jnp
dec
(bad)
pop
xchg
mov
stos
mov
test
stos
push
call
test
out
lahf
add
or
mov
push
push
jo
cmps
cmp
xor
or
rcr
hlt
rol
daa
adc
ret
sbb
or
inc
add
and
hlt
mov
sub
je
adc
ret
dec
pushf
cmp
add
icebp
das
data16
adc
shl
clc
test
push
mov
push
lock
sar
push
cmp
sub
jmp
imul
mov
dec
lock
test
fcom
ds
leave
jecxz
test
push
jnp
sub
fld
sub
sar
cld
popf
lods
out
jae
xchg
test
fwait
mov
cmp
add
cmp
xchg
mov
push
and
fwait
mov
imul
dec
push
scas
repz
mov
adc
push
sub
outs
dec
xor
fisub
push
popf
clc
pushf
pop
shr
push
adc
das
fisttp
mov
push
xchg
sti
out
mov
rcl
aas
outs
inc
cmp
inc
mov
shl
lea
push
jp
dec
mov
dec
dec
mov
dec
pop
pop
sbb
mov
sub
cli
push
add
jle
add
xor
out
dec
out
(bad)
fdivr
mov
add
pop
sbb
sub
xor
add
pop
xor
scas
leave
add
jmp
es
inc
or
pop
adc
sti
inc
add
(bad)
scas
dec
xor
mov
push
icebp
(bad)
sbb
cdq
pop
cmp
int3
or
jle
shl
sub
es
mov
pop
sbb
aam
fwait
jp
mov
(bad)
adc
outs
lods
mov
add
ret
mov
sbb
cdq
cmp
add
lea
jns
outs
add
adc
push
aad
xchg
mov
jmp
jnp
imul
movs
xchg
sub
or
push
adc
mov
mov
jnp
dec
jmp
mov
inc
cdq
cld
call
mov
mov
sub
push
int3
outs
cmp
lds
mov
xchg
popa
or
mov
xchg
sub
jb
mov
pop
push
pop
push
sahf
add
enter
les
imul
scas
or
gs
in
es
jle
daa
mov
add
xchg
fbld
jne
jno
retf
xor
in
test
cmp
jno
mov
out
and
dec
sbb
repnz
adc
iret
adc
cmp
jb
mov
adc
lahf
(bad)
fild
out
dec
jp
bnd
shl
push
inc
mov
sbb
mov
fcom
fild
jne
lahf
pop
loop
loope
push
scas
daa
repnz
xchg
cmp
mov
jns
mov
mov
jmp
into
dec
fucomi
push
addr16
shr
stc
mov
sti
jmp
lods
int
dec
shl
movs
dec
mov
pop
repnz
frstpm(287
sbb
dec
in
lods
cmp
in
dec
je
movs
bnd
aaa
fmul
push
int
mov
push
adc
jmp
int
in
cmp
mov
test
or
jmp
lods
cld
es
push
(bad)
pop
rcr
xor
mov
dec
fldl2t
shl
xor
fnsave
jge
sbb
into
cmp
dec
sub
out
sub
dec
sub
inc
or
or
pop
leave
fistp
dec
push
jmp
ror
mov
cmp
les
icebp
push
out
cmp
shr
sub
imul
push
xor
mov
fiadd
inc
inc
lea
jnp
fmulp
xchg
retf
push
mov
sbb
stos
movs
add
dec
jmp
inc
pop
sbb
ret
xor
in
je
adc
div
sbb
int3
loope
lock
mov
test
ja
pop
sub
ins
pusha
pop
mov
mov
enter
dec
cmps
cld
xor
icebp
sar
dec
mov
inc
inc
pop
mov
jl
and
shl
sar
leave
lahf
mov
in
and
inc
add
aam
popf
sbb
rcl
jmp
out
jne
icebp
push
jecxz
ins
ins
and
test
mov
movs
(bad)
aam
out
pop
mov
mov
leave
or
inc
(bad)
out
adc
(bad)
loope
mov
mov
test
retf
adc
fcomp
push
bound
jg
cmc
push
or
lds
cmps
popw
sub
pushf
popa
(bad)
pop
stc
or
bound
xor
dec
(bad)
jno
shl
inc
inc
jns
jno
xor
jg
inc
sub
std
xchg
enter
adc
xchg
fdivr
ret
pop
push
jae
es
mov
mov
shr
test
xor
inc
sub
mov
sbb
sbb
js
jnp
fidiv
arpl
push
in
pop
pushf
xchg
pop
sbb
(bad)
sub
xor
leave
push
xchg
sar
jnp
push
cmps
jp
xor
push
int3
sub
cmps
xlat
aaa
xor
aam
pop
pushf
sahf
mov
fstp
cmc
repnz
pop
push
xchg
xchg
imul
sub
inc
stc
dec
lea
(bad)
jp
(bad)
jmp
mov
callw
lock
das
stos
ret
call
add
sbb
inc
pop
push
daa
sub
cdq
jge
(bad)
loopne
mov
jb
ret
mov
push
popa
fwait
jp
jo
in
cmp
xchg
pop
imul
push
jbe
mov
in
sub
int
pop
add
jg
mov
or
scas
and
mov
add
or
xchg
mov
retf
cli
sub
push
inc
not
test
dec
outs
mov
xchg
inc
arpl
adc
xlat
sti
and
xchg
push
bound
add
cmps
mov
ss
cdq
ror
(bad)
dec
lock
hlt
stos
lods
and
xchg
sub
mov
ffreep
or
mov
fist
adc
cmp
jbe
iret
xchg
dec
retf
adc
ss
sbb
xchg
xchg
aaa
lock
retf
sbb
es
sub
adc
mov
jmp
push
or
jno
mov
mov
cli
mov
(bad)
stos
rol
fdiv
mov
cmp
shl
clc
fwait
popf
out
aaa
cmps
rol
adc
mov
in
sbb
sbb
jne
sbb
repnz
pop
cmp
(bad)
cld
hlt
dec
inc
or
xor
mov
jle
mov
imul
adc
xor
cdq
dec
hlt
ss
aam
dec
xor
fstp
inc
stos
call
sub
shl
scas
inc
xchg
mov
sbb
mov
mov
fsub
add
push
jne
popf
popa
mov
je
mov
dec
scas
mov
inc
sti
sub
xchg
xchg
(bad)
icebp
dec
jl
xchg
mov
ficom
jne
jno
pushf
jmp
out
out
cli
test
retf
jne
xchg
sub
xor
aaa
repnz
cwde
adc
fidiv
cmc
inc
sbb
aad
dec
enter
pop
dec
sub
loope
xor
and
cmp
jl
aad
mov
dec
pop
xchg
adc
xor
fadd
sahf
cli
add
test
fnstenv
sub
jne
and
mov
push
pop
pop
cmp
jns
sbb
add
fsubr
or
outs
and
clc
add
popa
mov
and
test
adc
ins
sub
push
jno
enter
out
mov
jp
out
dec
add
jbe
jmp
sub
inc
mov
dec
and
fld
xlat
dec
mov
pusha
(bad)
test
fidiv
sub
xchg
arpl
sbb
cdq
fst
pop
call
fwait
bnd
sahf
jle
mov
inc
test
out
dec
out
mov
ror
es
stos
or
push
outs
(bad)
push
jl
lods
shl
jg
pop
add
mov
imul
adc
xchg
mov
popa
in
mov
inc
test
das
xchg
adc
pop
inc
mov
loope
mov
loopne
aam
fisubr
movs
add
xchg
movs
sahf
addr16
jmp
xchg
outs
mov
and
je
je
mov
mov
in
stc
sbb
vmread
jg
cmp
in
f2xm1
ss
repnz
push
loope
mov
sbb
mov
in
pop
(bad)
xor
cld
in
fnstcw
push
inc
out
shl
mov
div
rol
clc
jl
les
mov
stos
pop
and
mov
sbb
test
(bad)
retf
mov
push
push
cli
mov
pop
ja
jbe
xchg
mov
fwait
jg
pop
mov
sbb
rol
out
cmp
jle
ja
jge
xchg
jle
push
ds
jp
imul
and
out
cld
rcl
inc
pop
cmp
sbb
lds
xchg
add
mov
test
adc
xor
aad
je
lea
fst
popw
inc
scas
mov
xor
scas
sbb
loopne
and
push
sbb
stc
xor
frstpm(287
jbe
out
or
adc
pop
inc
dec
out
and
mov
push
add
inc
inc
mov
(bad)
fmul
xchg
inc
dec
pop
in
pop
ret
in
jae
mov
std
and
add
lds
(bad)
scas
fcom
sbb
add
aam
popa
fmul
adc
sti
mov
sub
in
lods
jno
sbb
aam
cli
aas
out
mov
popa
xlat
pop
loop
xchg
jp
repnz
sti
daa
ds
push
ja
jb
inc
test
in
je
cmp
sbb
mov
mov
and
xlat
mov
jmp
sub
imul
dec
(bad)
fdiv
loopne
in
dec
inc
jns
jno
test
dec
movs
xchg
ins
cmp
adc
add
xchg
dec
xchg
mov
xor
xchg
pop
or
mov
xor
xchg
arpl
outs
or
sahf
push
and
add
out
ja
popa
cld
mov
js
adc
ret
mov
stos
repnz
mov
jae
data16
pop
jns
dec
dec
hlt
push
mul
fild
div
sub
mov
pushf
nop
push
jb
cmp
jns
fldenv
dec
mov
mov
or
xchg
mov
pop
mov
stos
push
inc
retf
lock
pusha
retf
mov
js
mov
mov
mov
int3
(bad)
ss
das
pop
sbb
pop
dec
shl
lds
fcom
aaa
test
add
push
inc
jo
dec
js
fst
ror
fist
test
repz
in
sub
nop
das
nop
fwait
push
xchg
mov
retf
cwde
outs
in
out
enter
leave
(bad)
in
push
add
jno
xchg
mov
out
mov
loopne
das
in
ret
mov
verw
sub
out
retf
sbb
mov
sbb
inc
stos
popa
and
cmp
ss
inc
imul
out
gs
enter
outs
adc
addr16
arpl
push
xchg
pop
popf
xor
cmps
retf
arpl
into
and
test
call
mov
mov
in
les
es
cmp
stc
or
mov
int3
jge
jl
mov
adc
cmp
inc
std
inc
xor
mov
int
jmp
mov
dec
add
leave
cmp
xor
or
cli
push
cld
xchg
add
jp
cld
jae
inc
adc
cld
or
jl
mov
add
dec
ret
(bad)
mov
push
mov
push
out
sbb
mov
xchg
pop
retf
loop
(bad)
dec
and
xlat
pop
rcr
mov
sbb
add
pop
and
jo
cwde
push
aad
and
mov
push
sti
xchg
push
jmp
push
pop
or
jmp
jnp
stos
or
jb
jle
lock
push
sbb
pop
shr
jecxz
inc
jne
scas
addr16
sub
xor
(bad)
out
inc
imul
adc
test
xchg
dec
daa
fiadd
cmps
jge
or
in
mov
jno
lea
es
arpl
sbb
jb
dec
push
cmp
pop
add
inc
test
cwde
mov
pop
push
dec
push
push
shl
jg
ret
pop
dec
sti
test
mov
dec
dec
(bad)
mov
xchg
xchg
xor
out
retf
pop
push
add
adc
and
movs
test
lods
js
icebp
jmp
and
push
scas
jge
and
xchg
lea
jge
retf
jae
push
cmp
in
push
cmp
retf
es
fisub
repnz
mov
cmp
mov
daa
lds
dec
sti
push
cs
cld
inc
popa
ja
repnz
pop
retfw
(bad)
dec
stos
outs
mov
loop
xor
je
pop
test
mov
adc
retf
out
mov
xchg
shl
clc
(bad)
fidivr
leave
mov
ss
mov
test
cmp
and
nop
sbb
test
cwde
pop
loopne
sbb
mov
je
leave
pop
pop
leave
pop
sub
(bad)
dec
xchg
pop
mov
push
sub
jl
mov
xchg
fistp
mov
call
mov
push
push
js
(bad)
xor
in
jmp
ds
inc
lods
push
dec
xor
push
jae
dec
out
pop
fadd
push
mov
loop
scas
mov
xor
cmp
bound
mov
js
mov
mov
jle
xor
shr
test
xor
data16
out
push
loopne
jb
push
es
jmp
jnp
sub
xor
(bad)
test
add
shr
(bad)
mov
fld
stc
int3
add
lahf
jle
adc
imul
aaa
push
je
es
xchg
arpl
(bad)
inc
mov
dec
mov
not
push
imul
sbb
push
and
fisubr
jl
and
sub
pop
int3
dec
jae
int3
jecxz
lea
lahf
cmps
sbb
xchg
xor
enter
jae
add
(bad)
mov
daa
xchg
fidivr
call
(bad)
mov
arpl
sbb
enter
outs
pop
lods
js
imul
dec
mov
ret
mov
cmp
pop
fadd
xchg
sub
jne
and
sub
fwait
or
xor
addr16
jne
aaa
popa
and
dec
gs
stos
jmp
xor
ins
scas
stos
shl
(bad)
cmp
jmp
push
outs
jmp
dec
gs
leave
imul
adc
mov
idiv
movs
gs
xor
xchg
lock
rcl
and
lods
pusha
mov
xor
adc
push
mov
jmp
inc
shr
int3
and
outs
add
cdq
ret
xor
and
out
xchg
fmul
sahf
or
cdq
xchg
je
test
jmp
mov
push
fnsave
cmps
push
loop
xor
call
add
xchg
stc
mov
xchg
mov
add
loope
jo
mov
mov
push
arpl
pop
inc
pop
add
inc
xchg
mov
jge
xor
cmp
jne
mov
or
push
xor
mov
aaa
adc
jmp
push
adc
nop
push
pusha
stos
jp
mov
add
das
fidivr
jae
pop
jo
mov
mov
test
push
fstp
pop
add
dec
fwait
test
out
repz
inc
rcr
and
int3
sub
mov
test
mov
dec
ins
sar
aas
outs
xchg
addr16
cs
pop
mov
(bad)
cs
cs
xor
jno
jnp
mov
test
ficomp
xchg
ret
mov
inc
jmp
mov
scas
xor
jnp
daa
jbe
jle
sbb
mov
push
inc
inc
mov
shl
push
sbb
xor
sub
add
aam
xchg
dec
mov
cs
xchg
dec
lahf
jl
mov
shl
mov
dec
and
aaa
outs
dec
mov
leave
mov
bound
fild
stc
je
icebp
jae
push
ins
mov
bound
mov
gs
aam
fstp
mov
int
imul
test
call
movs
jmp
pop
push
mov
xchg
rcl
fcom
sub
mov
jbe
cs
jno
cmp
adc
mov
dec
sub
mov
stos
fs
cmps
xchg
inc
inc
sbb
mov
shl
stos
adc
fidiv
loop
sti
xchg
pushf
call
js
ss
push
cmp
in
inc
pop
xor
mov
mov
mov
jp
test
push
mov
push
mov
push
push
popf
stc
dec
xor
adc
jbe
mov
or
mov
pusha
push
std
daa
dec
mov
(bad)
jp
pop
sbb
popf
imul
jmp
mov
pop
dec
sbb
cs
lods
addr16
and
sbb
aam
jle
inc
mov
lods
mov
sbb
out
or
call
cmps
mov
cmp
lahf
and
or
es
xlat
jae
mov
cmp
inc
out
sub
ins
test
mov
std
mov
jg
leave
(bad)
pushf
into
push
sbb
mov
cmp
xor
or
mov
xchg
mov
sub
mov
js
inc
dec
sahf
mov
rcl
(bad)
cmp
mov
mov
ins
sub
add
out
push
xor
test
cmps
test
(bad)
cmp
cli
sub
sbb
or
mov
dec
retf
push
or
pusha
or
popa
mov
xchg
inc
xlat
stos
outs
rcl
or
test
fs
adc
in
(bad)
stos
loope
xor
cmc
cmc
imul
fs
test
xor
out
pop
scas
loop
push
adc
inc
in
cli
add
mov
and
fnstenv
(bad)
js
int3
adc
(bad)
imul
or
mov
ins
sbb
cmp
mov
out
gs
fisttp
adc
xchg
dec
push
sub
fsubr
shl
mov
push
xchg
jb
push
shl
lahf
outs
(bad)
(bad)
push
mov
mov
into
call
and
jnp
(bad)
pushf
in
xchg
(bad)
daa
xor
ins
lahf
fstp
pop
in
cmp
ja
int
repz
inc
add
call
aas
rol
dec
and
cmps
sub
test
lods
mov
mov
(bad)
fsubr
out
cmc
fnstcw
enter
ins
pop
jno
cmps
cli
int
push
push
sub
mov
jnp
jae
xor
push
add
imul
mov
scas
call
push
mov
adc
xchg
in
iret
ret
xchg
cwde
jl
xchg
and
xchg
jae
mov
mov
addr16
lods
sbb
mov
fdivr
retf
shr
mov
push
ins
leave
cmp
mov
popa
mov
loop
call
cmp
pop
out
jge
idiv
jl
jle
loop
adc
mov
(bad)
rcr
adc
push
stos
dec
loop
mov
push
adc
mov
ss
stos
ror
xchg
fadd
and
add
add
dec
adc
repnz
cmp
addr16
shl
push
aad
and
jbe
jbe
xchg
(bad)
rol
sub
adc
jp
add
mov
cmp
push
push
mov
dec
shl
gs
pop
enter
std
test
pop
stos
movs
shl
pop
aam
lea
jnp
add
(bad)
and
cdq
test
and
jmp
sbb
stc
jp
cdq
cld
cs
int
xchg
pop
sub
stos
ss
inc
loope
movs
jmp
push
lahf
mov
inc
push
test
xchg
add
cmp
je
retf
popa
xchg
mov
sub
adc
jg
jns
aad
in
lods
xor
cmp
in
mov
out
add
cmps
jbe
fistp
lock
popf
fsubp
outs
ss
iret
aad
movs
cmp
cmp
shl
and
lds
jb
fwait
add
iret
dec
cmp
aad
mov
lods
pop
sub
push
mov
pop
fisttp
dec
outs
sti
icebp
repz
or
fsubr
cmp
and
fisttp
xchg
cmps
loop
or
inc
inc
(bad)
push
mov
cmps
fild
mov
jge
jmp
jl
adc
(bad)
pop
xchg
retf
sbb
or
xchg
xor
and
enter
repz
sbb
stos
pop
pushf
cmp
sbb
ficomp
jmp
and
fsubr
cmp
adc
ret
aam
(bad)
pusha
stos
mov
repnz
xchg
out
xchg
in
sbb
fldenv
lea
fs
sbb
inc
or
pusha
push
inc
xchg
sub
out
add
movs
lds
popf
dec
(bad)
(bad)
push
cmp
cmps
cmp
rcr
(bad)
test
cmps
sbb
or
ins
daa
mov
popf
jnp
jl
popa
jl
sub
push
push
xchg
xchg
mov
outs
or
(bad)
hlt
jb
xor
fdivr
xchg
mov
pop
shl
lock
js
inc
in
addr16
inc
push
sub
add
cmps
and
je
mov
and
sbb
sbb
push
hlt
jl
lahf
pop
movs
or
mov
adc
out
jns
sub
or
push
mov
popf
or
mov
lods
fst
data16
xor
(bad)
scas
cmp
sub
xlat
dec
xor
push
adc
inc
iret
push
scas
adc
enter
or
cli
hlt
inc
outs
pop
aam
hlt
xor
fcomp
cmp
retf
sahf
add
and
(bad)
xlat
jb
cs
push
inc
sub
push
add
cdq
int3
loop
pop
into
lea
(bad)
daa
hlt
pop
popa
add
xchg
fsub
cmp
mov
(bad)
sub
jmp
repnz
movs
mov
imul
or
loopne
leave
neg
jmp
cs
push
pop
into
cmc
xor
cmp
xor
test
and
iret
inc
scas
mov
ss
in
or
push
int
stos
cmp
dec
add
mov
or
aad
ja
jb
addr16
or
push
jns
pop
lea
adc
and
mov
add
int
adc
push
aad
jl
or
and
into
mov
scas
adc
fistp
adc
jle
sahf
movs
xlat
adc
or
xor
jmp
jl
mov
stos
cwde
int3
loope
dec
stos
pop
loop
sub
push
inc
iret
repnz
or
into
sbb
dec
pop
mov
hlt
xor
inc
sbb
jo
inc
and
sbb
jp
(bad)
mov
dec
sbb
stos
aaa
mov
xor
and
gs
inc
sbb
sti
xlat
mov
daa
add
mov
mov
hlt
inc
test
mov
xor
pushf
icebp
dec
out
or
in
mov
fcmovnb
fwait
cmc
cmp
pop
mov
add
jae
pop
retf
test
inc
dec
sub
in
mov
jp
in
retf
xor
call
movs
jns
jno
lahf
lods
int3
inc
(bad)
mov
nop
cmp
test
imul
pop
fldcw
fnsave
ss
data16
mov
mov
cmp
jae
call
and
movs
adc
jmp
mov
push
dec
sbb
fs
xchg
lock
pop
pop
test
in
aad
outs
js
dec
push
cmp
mov
ss
icebp
cmp
or
mov
ins
sti
(bad)
dec
addr16
mov
push
imul
std
mov
mov
xchg
mov
lahf
xor
sti
jo
add
mov
lds
(bad)
in
jmp
pop
xchg
xchg
stos
test
ss
jne
repz
loop
(bad)
in
inc
or
shr
lea
mov
nop
push
xor
mov
loop
cld
mov
lock
sbb
out
jg
into
pop
arpl
pop
pop
in
ins
pop
retf
mov
sti
xchg
sbb
push
std
jne
stos
cmp
in
stos
test
and
mov
cmp
test
dec
mov
sbb
mov
dec
or
faddp
push
jmp
in
out
inc
test
and
jne
outs
cmp
lds
xor
mov
popa
mov
(bad)
out
jnp
push
or
pop
push
(bad)
enter
imul
jnp
cmp
dec
push
sbb
push
daa
in
mov
(bad)
fisub
loope
jnp
aaa
push
adc
xor
aas
and
ret
call
ins
lds
in
fstp
xchg
bound
out
inc
inc
aam
mov
lock
jle
cmp
retf
adc
in
repz
loop
and
out
lds
loop
fsubr
in
jb
push
(bad)
cli
mov
loopne
js
stos
mov
fs
in
imul
jmp
jg
cmps
adc
mov
popa
push
rol
push
pop
push
push
xchg
dec
push
push
inc
loopne
adc
std
add
mov
in
loope
pop
mov
inc
addr16
jle
add
fs
enter
pop
sbb
inc
xor
mov
jnp
sbb
stc
sub
retf
je
inc
dec
jmp
jp
fisttp
(bad)
mov
mov
inc
aaa
jmp
test
outs
ss
loopne
add
adc
das
lock
inc
cmp
std
mov
shl
sub
adc
pop
pop
add
xchg
enter
das
lds
push
mov
mov
xchg
movs
and
sub
test
or
and
movs
jae
push
mov
es
add
ins
add
loope
add
dec
mov
pop
add
mov
add
and
pop
repnz
xor
dec
and
fcom
out
fldcw
jp
ins
popf
dec
ins
js
xor
inc
fs
sub
retf
jmp
xor
xchg
pop
cwde
loop
mov
scas
stos
xchg
scas
add
dec
out
mov
(bad)
clc
and
pop
jno
jmp
and
jo
xlat
cmps
call
retf
mov
fist
icebp
sbb
add
push
scas
and
lods
stc
xor
jne
iret
loopne
out
mov
and
retf
mov
sub
mov
shr
and
es
xor
neg
sbb
repnz
rcl
mov
ror
sbb
cs
mov
imul
imul
push
sbb
retf
lock
imul
and
jle
or
fadd
fild
dec
mov
jmp
xor
repnz
(bad)
cmp
in
aad
add
(bad)
enter
pushf
mov
cdq
mov
mov
shr
repz
pushf
outs
lock
fnsave
mov
dec
js
add
popf
nop
pushf
clc
lea
push
xchg
es
inc
xlat
mov
movs
ret
inc
sar
adc
lahf
mov
popf
test
cmps
scas
sar
adc
out
sar
xlat
repnz
add
xlat
inc
repz
imul
push
test
das
mov
jno
mov
sbb
push
sbb
lods
out
aad
cmp
mov
fistp
call
push
push
aad
(bad)
rol
inc
in
or
cmc
ds
cld
int
cmp
shl
fstp
xchg
fdiv
push
jge
les
outs
fimul
mov
(bad)
cmps
jns
cld
sti
cs
dec
aaa
jl
stc
sub
sub
stc
mov
jnp
sub
or
cmps
imul
(bad)
je
jne
mov
loopne
je
mov
cmp
cmps
test
shr
rcl
inc
(bad)
gs
jnp
aad
sbb
mov
pop
jo
push
mov
imul
dec
xor
pop
push
dec
rcr
cmp
and
push
frstpm(287
loopne
dec
xor
(bad)
xchg
imul
pop
into
mov
cdq
push
sbb
add
pop
mov
pushf
call
(bad)
out
mov
fs
mov
pop
push
ins
mov
mov
xchg
movs
jno
mov
jl
inc
jnp
bswap
in
mov
xor
adc
mov
mov
pop
fcomp
mov
sub
dec
cld
xor
xor
xor
push
jae
dec
and
rcr
dec
push
inc
popa
cld
jne
jno
call
(bad)
iret
js
int
popf
push
out
test
cs
or
sti
ss
sbb
push
retw
or
shr
scas
mov
les
and
pusha
jno
rcl
jne
jns
jo
daa
xor
mov
aam
loopne
mov
out
dec
jns
shl
sub
dec
push
dec
or
xchg
push
mov
and
xchg
jae
mov
push
shl
sbb
sub
out
imul
sub
cld
es
int
mov
sub
inc
xlat
push
mov
push
(bad)
in
iret
enter
inc
popf
cli
(bad)
fldenv
cmp
loop
es
inc
into
push
jmp
hlt
and
test
out
cld
pop
icebp
mov
fimul
cdq
in
add
adc
pop
mov
xchg
mov
mov
xchg
je
sub
adc
outs
shl
and
retf
mov
push
xor
mov
retf
je
mov
pop
clc
mov
cdq
or
loopne
lods
sub
dec
addr16
xor
shr
shr
xchg
mov
and
adc
popf
mov
and
inc
mov
stc
dec
sti
inc
mov
adc
pop
cmp
call
ss
adc
(bad)
and
es
es
(bad)
and
sub
sub
xchg
mov
and
sbb
out
add
inc
bound
mov
xchg
(bad)
cmp
mov
pop
test
(bad)
jmp
pop
lock
aas
enter
fs
repnz
xchg
cmp
(bad)
rcl
pop
push
mov
rcl
push
daa
test
sahf
aad
mov
lods
movs
fst
mov
dec
in
sbb
retf
add
inc
hlt
aad
fisttp
or
mov
test
into
inc
mov
and
fist
mov
push
push
and
push
mov
(bad)
aad
jge
add
mov
movs
test
je
rcr
lea
lea
push
jno
stos
mov
icebp
call
and
or
js
adc
mov
stos
sub
stos
out
jg
and
hlt
rol
mov
jmp
fsubr
mov
mov
sbb
xor
fadd
dec
lds
fild
or
gs
sub
das
mov
cmp
clc
add
dec
out
mov
movs
cvttps2pi
xchg
mov
pushf
xor
push
mov
aaa
pop
fnstsw
jmp
lea
and
les
pop
clc
add
data16
or
cmps
inc
cdq
cmp
pop
test
out
add
scas
push
or
(bad)
pop
dec
movs
jae
pop
pop
xor
push
imul
inc
or
push
repz
retf
lods
push
jo
cld
mov
inc
xchg
icebp
cdq
mov
pop
pop
aam
ror
and
pop
pop
or
mov
inc
push
sub
rol
jmp
shl
cdq
pop
(bad)
int3
and
aaa
sub
lea
push
lahf
mov
movs
push
cdq
ja
cmp
jbe
test
idiv
icebp
and
popf
adc
push
scas
mov
dec
add
sbb
cmp
push
adc
scas
cli
loopne
retf
sbb
aad
cmp
xor
shl
xor
push
mov
stos
lea
push
cmp
pop
cs
mov
dec
jno
ja
ret
jo
sub
push
js
jo
lahf
aas
fstp
mov
sbb
push
rcl
pusha
mov
xchg
xchg
les
lahf
mov
nop
cpuid
adc
mov
(bad)
mov
cmc
mov
or
fnstcw
scas
rol
into
mov
jle
inc
and
dec
dec
jns
test
mov
xor
js
(bad)
fimul
aad
add
adc
not
push
pminub
call
(bad)
cmp
xor
lds
ds
sbb
sti
inc
or
in
xor
sub
mov
push
xchg
lea
sub
aad
xchg
pushf
pop
je
es
xchg
xor
dec
pushf
call
or
fs
fwait
les
lds
dec
adc
setae
leave
pop
vmovups
ja
jmp
scas
push
aam
(bad)
push
xchg
sub
jb
push
push
cmp
mov
retf
or
pop
mov
jmp
cs
mov
adc
push
sbb
mov
popf
data16
mov
and
cmp
sahf
sbb
jbe
add
jp
retf
shl
xlat
sub
add
fwait
int
inc
add
cmp
ror
xor
ins
jecxz
test
xor
and
xchg
jb
outs
test
ja
cmc
fucom
and
xchg
sub
hlt
fstp
ret
dec
cmp
(bad)
fadd
or
call
mov
imul
unpcklps
fsub
and
push
fistp
enter
mov
int
dec
(bad)
lds
(bad)
sbb
add
ins
xchg
adc
je
push
inc
inc
add
or
sar
add
(bad)
jne
mov
push
push
dec
shl
stc
xchg
aas
les
mov
xchg
sub
inc
jecxz
sub
cmp
out
fsub
iret
inc
add
pop
stos
push
iret
pop
pop
dec
imul
ret
rol
sub
add
ins
rcl
pop
add
push
push
rcr
sti
adc
(bad)
push
bswap
cmp
adc
ret
mov
call
mov
inc
fimul
and
inc
scas
push
sbb
pop
mov
pushf
stc
jmp
loopne
lahf
xor
jnp
jmp
into
mov
lods
lea
and
jle
(bad)
cdq
xchg
aam
cwde
retf
push
stos
call
jns
cmc
xchg
add
std
cmp
test
xchg
push
loop
jae
dec
mov
or
adc
daa
rol
out
push
jg
mov
pop
pushf
mov
adc
xor
pop
mov
bound
jae
mov
mov
(bad)
jns
add
lods
jb
bound
ret
adc
lods
inc
loopne
das
or
ret
cmp
add
bound
push
sbb
mov
adc
cmp
(bad)
in
lods
or
int
and
out
pop
sbb
into
gs
int
xchg
(bad)
shl
xor
mov
ret
xor
jmp
cmp
int
sub
inc
jp
aas
test
push
push
sbb
popf
arpl
inc
nop
jb
pop
mov
sahf
aas
(bad)
out
adc
loopne
js
scas
xchg
mov
(bad)
arpl
dec
imul
fsub
aaa
outs
outs
xchg
test
mov
jns
lds
pushf
sbb
out
retf
mov
cmovs
pusha
sbb
or
xchg
leave
stc
mov
jmp
cli
pop
pop
movs
jns
mov
pop
(bad)
dec
mov
mov
sbb
lea
mov
sbb
mov
repz
mov
cmp
ja
in
mov
in
push
je
inc
adc
(bad)
sbb
inc
and
ja
sub
inc
es
dec
dec
pusha
movs
sub
pop
icebp
dec
test
cmp
je
adc
sar
pop
repz
mov
addr16
sub
dec
fs
(bad)
imul
test
push
rcr
xor
push
sbb
pop
and
sar
std
sbb
repnz
cli
stc
pop
mov
in
fdivr
inc
xchg
push
mov
pop
loope
pop
and
fsubr
cmp
popa
mov
or
pushf
sub
ret
push
retf
test
cwde
repnz
fidivr
je
jl
add
jmp
(bad)
pop
mov
cs
mov
or
mov
inc
add
pop
push
rol
jmp
ds
sbb
mov
mov
pop
add
stos
sti
(bad)
sahf
inc
sub
xchg
mov
cli
jmp
adc
out
jnp
test
pop
or
cwde
mov
jg
adc
inc
jmp
and
cmps
aas
xchg
into
aas
and
sub
fmul
and
bnd
jle
dec
in
jl
sbb
pushf
in
data16
into
pop
add
ins
mov
xchg
stc
call
push
div
sti
inc
jge
mov
push
int3
xchg
jns
pop
dec
xor
jl
xor
js
and
jmp
pop
frstor
or
mov
hlt
inc
dec
cmp
jno
stos
xchg
fdiv
jns
in
cli
repnz
add
lods
add
push
dec
popf
xchg
rcl
fidiv
stos
ins
pop
scas
add
mov
test
push
ret
cli
jg
push
ret
retf
push
pusha
in
jecxz
sbb
(bad)
test
jmp
jge
adc
mov
cld
(bad)
std
loopne
call
xor
add
mov
and
daa
add
mov
inc
adc
inc
sub
lds
sub
sub
adc
mov
jmp
push
cmp
jle
jne
fisttp
outs
daa
xlat
inc
ja
inc
mov
sub
leave
and
mov
xchg
mov
sub
scas
outs
(bad)
pop
scas
xchg
jle
fs
sbb
dec
dec
jnp
jbe
pushf
mov
jno
cmp
adc
test
fldenv
adc
jbe
mov
leave
or
xchg
ja
leave
jecxz
fdivr
adc
inc
dec
inc
jae
dec
imul
mov
jge
cdq
out
sub
add
xchg
and
mov
lods
mov
push
cmp
mov
push
int
test
enter
push
add
je
jno
mov
scas
sar
xchg
daa
fcom
repnz
shl
sbb
inc
pushf
xchg
in
mov
sti
jne
fmul
and
hlt
movs
mov
add
hlt
add
arpl
fist
xlat
push
jnp
jno
out
mov
in
cmp
outs
aam
nop
aaa
mov
jecxz
and
sub
mov
ret
pop
lods
fcmove
loop
pop
or
xchg
or
(bad)
cmc
jae
push
push
xchg
pop
pop
xor
es
leave
ins
ins
jno
sti
lea
iret
ret
push
das
imul
cmp
aaa
pusha
lods
xor
push
or
cdq
pop
cmp
xchg
int
cwde
outs
pop
jg
sbb
in
mov
jb
out
ds
inc
jo
push
dec
loope
push
aam
adc
ror
lods
or
daa
bound
arpl
jns
leave
adc
data16
icebp
inc
stos
lahf
push
jae
jbe
or
fcomi
popf
xchg
std
lock
mov
loopne
inc
into
dec
or
cmp
pop
sbb
aaa
cmps
push
cmp
mov
and
and
(bad)
movs
jno
mov
sbb
lahf
test
mov
loopne
xchg
fdivp
inc
jle
mov
in
inc
icebp
xchg
and
push
adc
stos
mov
xchg
or
movs
shl
les
jl
dec
xor
dec
fwait
out
icebp
gs
js
mov
cli
mov
lock
scas
mov
mov
aas
and
sub
std
xchg
es
cs
and
inc
repnz
out
mov
xchg
xor
aaa
fsub
push
popf
xlat
add
mov
fstp
sbb
in
shr
enter
sar
sub
jle
and
movs
test
pop
push
cmp
sub
(bad)
(bad)
cli
aas
loopne
call
call
out
pop
cmp
ss
(bad)
and
push
mov
repz
push
and
or
xchg
jecxz
stc
stos
xchg
inc
data16
mov
outs
outs
js
cmp
fist
into
or
pushf
push
mov
fisttp
xchg
pop
fst
(bad)
adc
dec
jno
add
gs
arpl
sub
and
cmp
jae
cld
pusha
jge
test
pop
jae
stos
inc
mov
mov
pop
add
mov
sahf
test
test
inc
rcl
cmp
cmp
in
inc
mov
or
push
ret
ret
loope
mov
inc
pop
ror
inc
sahf
enter
wrmsr
adc
cmc
loope
mov
dec
adc
or
es
sub
jmp
daa
mov
popa
inc
retf
sub
and
aam
xchg
mov
icebp
pop
lods
dec
xor
lock
sbb
mov
sub
pop
dec
pop
outs
mov
sahf
lods
mov
les
mov
xor
rol
fs
fisttp
xchg
in
test
loope
xor
pop
or
imul
popf
mov
and
aas
test
jb
ret
mov
popa
mov
lods
push
adc
test
pop
push
jae
mov
int3
imul
pop
call
sbb
mov
pop
inc
loop
mov
cli
retf
dec
out
inc
jmp
push
not
icebp
mov
inc
in
inc
add
pusha
xor
xchg
and
and
dec
in
aaa
cmp
out
inc
sub
or
jbe
out
mov
fiadd
xor
add
scas
jbe
or
xor
add
ret
aad
sub
ja
jmp
jo
dec
push
cli
sbb
test
jne
sub
push
mov
xor
sbb
(bad)
xchg
sub
rol
sbb
and
imul
push
ret
sub
pop
jmp
pop
xchg
and
dec
outs
dec
movs
and
in
jge
(bad)
mov
or
mov
cmp
inc
dec
fs
or
out
and
xchg
and
add
stos
fld
xchg
std
xchg
enter
fneni(8087
pop
cmc
xchg
add
inc
imul
mov
stc
inc
cdq
lea
dec
xor
adc
cmps
popf
xchg
cmp
push
lea
out
les
jmp
aaa
stc
std
test
xor
loope
mov
and
(bad)
cmp
pop
in
jns
xor
xchg
scas
mov
scas
aad
daa
jno
jmp
js
push
mov
inc
stos
mov
push
sbb
dec
cmp
inc
imul
fdivr
int3
inc
pop
fwait
mov
pop
(bad)
sbb
xor
xchg
shl
xor
fist
pop
stos
jno
adc
cmc
dec
and
clc
add
add
stos
xor
leave
scas
xor
test
fcomp
sbb
shl
push
mov
dec
lahf
lahf
mov
push
mov
enter
jge
or
xor
stc
xchg
popf
test
adc
sbb
dec
test
jmp
jne
shl
fisubr
adc
aam
jecxz
out
and
mov
cli
arpl
add
pop
mov
sbb
pop
mov
sub
sbb
aam
mov
sbb
mov
sbb
ja
add
int
ins
(bad)
inc
add
pop
dec
jbe
jbe
jg
leave
stos
mov
sbb
dec
push
lahf
jl
pop
mov
pop
jo
dec
lock
or
test
inc
mov
adc
jne
cmps
push
mov
push
icebp
iret
mov
jge
mov
cmp
out
pushf
mov
outs
out
nop
xchg
adc
and
cmp
push
(bad)
pushf
xchg
fsubr
mov
sbb
arpl
int
stos
xchg
jge
jb
mov
movsx
xor
mov
outs
mov
stos
outs
popf
loope
sub
(bad)
jmp
in
jnp
or
jmp
mov
jns
out
mov
inc
push
data16
xor
out
pop
push
push
lock
cmp
push
cmp
dec
dec
jne
mov
inc
pop
xchg
inc
data16
xor
adc
cmp
jmp
retf
pop
lea
push
jecxz
xchg
sahf
push
shl
shl
mov
call
mov
arpl
jne
into
aam
and
dec
cmp
xor
add
outs
mov
xchg
lock
jp
mov
out
ja
dec
mov
js
jne
cdq
jb
and
sbb
fs
jecxz
add
fcom
cmp
iret
dec
mov
mov
ds
fistp
mov
icebp
rcl
mov
push
pop
shl
or
jbe
jle
sti
xchg
sub
call
dec
xor
push
imul
sub
jnp
and
ja
xor
dec
shr
fstp
sbb
lods
mov
sbb
dec
or
test
leave
(bad)
shr
jae
sahf
push
in
test
sub
jns
xor
test
cli
add
cmps
loop
jae
add
add
cli
iret
xor
adc
jno
inc
frstor
nop
fbstp
add
outs
adc
inc
mov
scas
sub
sti
cmp
inc
movs
adc
lock
or
clc
mov
jmp
mov
xor
jmp
pop
inc
mov
fwait
mov
mov
(bad)
imul
lods
sub
outs
inc
lahf
push
inc
scas
gs
jb
mov
aas
cwde
mov
bound
and
shl
sbb
and
push
sub
call
xchg
sbb
shl
clc
(bad)
retf
mov
sub
sub
xchg
mov
pop
dec
(bad)
sti
stos
dec
scas
movs
adc
mov
xor
mov
int3
test
pop
(bad)
imul
rcl
aam
stc
mov
daa
mov
ret
ins
sub
aad
mov
or
test
pop
ins
jno
inc
mov
retf
cli
dec
repz
imul
xor
and
mov
loope
pop
test
sahf
jmp
xlat
(bad)
sub
ja
add
cdq
xor
or
das
in
fnstsw
cwde
sub
inc
sub
inc
mov
cmp
lock
stos
sub
push
xchg
cmp
mov
xchg
icebp
das
movs
pop
push
cmp
mov
pop
ja
pop
inc
fild
cdq
movs
je
mov
fwait
and
inc
mov
mov
aam
inc
fmul
xor
shl
fs
cmps
daa
jp
outs
test
xchg
shl
lock
mov
or
in
pop
aaa
sbb
or
mov
mov
and
loopne
in
add
push
mov
xchg
push
cld
movs
test
bound
hlt
lea
pop
fwait
int3
xor
loopne
push
mov
outs
xor
aad
xchg
and
and
or
fnsave
jne
and
xchg
adc
das
rcr
pop
mov
enter
cmp
jle
jae
jo
xor
dec
xor
mov
cwde
stc
or
mov
ret
xchg
mov
pop
addr16
or
out
js
outs
pop
repz
mov
xor
xlat
pop
(bad)
sar
or
inc
cs
call
cwde
cmps
in
push
mov
das
movs
(bad)
(bad)
(bad)
push
cld
pop
aam
push
test
or
rcl
pop
cmp
mov
test
sar
lahf
jae
lea
das
pushf
jmp
sub
dec
add
clc
cli
adc
xchg
jo
sub
xlat
hlt
imul
mov
mov
xchg
(bad)
div
mov
jecxz
push
(bad)
fmul
sub
xchg
les
mov
pop
call
jmp
push
ja
cmp
shr
ret
mov
loopne
(bad)
or
xchg
aad
shl
jnp
xor
sbb
lock
fstp
mov
scas
hlt
sbb
inc
and
add
or
ja
or
jae
mov
jbe
sti
xor
dec
push
xchg
repz
sub
mov
mov
lods
dec
push
mov
out
retf
(bad)
sbb
into
add
xor
stc
pop
imul
xor
dec
push
ret
popa
xchg
retf
xchg
aad
mov
in
inc
imul
jmp
pushf
call
xchg
add
push
retf
cmp
cmp
ins
and
sbb
in
jnp
sahf
(bad)
jbe
cmc
cmc
cmp
out
pop
xor
call
dec
or
jle
lock
shl
push
pusha
or
xchg
into
movs
call
xor
add
mov
(bad)
push
push
sub
and
and
push
setne
imul
jmp
dec
xchg
dec
jns
sub
pop
pop
xor
and
add
sub
mov
cmp
cmps
add
or
pop
sbb
or
adc
xchg
out
mov
icebp
je
scas
dec
adc
mov
retf
loope
(bad)
arpl
pop
pop
pop
pop
adc
lahf
mov
mov
fcomp
loope
rcl
mov
jae
adc
mov
add
fs
(bad)
jmp
or
pop
(bad)
pop
cmp
mov
jle
jmp
aad
xchg
cmp
fwait
mov
sar
jo
dec
bnd
imul
sbb
jbe
push
jmp
mov
inc
jge
cmp
cmps
mov
jecxz
rol
and
int3
xor
inc
jl
jo
shl
cmc
clc
pop
jne
enter
addr16
fst
ror
mov
or
out
rcr
xchg
addr16
dec
add
adc
out
inc
sbb
dec
lods
cld
das
and
cmps
or
out
xlat
loopne
(bad)
aas
xor
add
xor
iret
sbb
xchg
cdq
adc
clc
mov
xor
inc
sbb
dec
adc
(bad)
jb
pop
bound
xchg
mov
sbb
dec
pop
inc
sbb
dec
sbb
bound
aas
in
fst
cmp
mov
cld
mov
inc
add
or
add
fisttp
scas
stos
inc
sub
jp
and
cdq
add
call
push
popf
mov
pushw
sahf
cwde
scas
mov
adc
cs
xor
xor
jg
mov
jbe
movs
fadd
cmp
or
jnp
jne
je
mov
jne
icebp
add
pop
mov
dec
jns
and
mov
repnz
cmp
fmul
bound
add
push
into
repnz
cwde
pop
inc
lock
or
and
pop
mov
repz
in
loopne
test
mov
cdq
rol
nop
arpl
sub
movs
imul
je
shl
jnp
ror
cmc
lea
js
jb
push
lods
lahf
inc
aam
mov
push
fnstsw
in
inc
and
mov
cmps
xchg
and
inc
cdq
ins
cmp
(bad)
xchg
lock
daa
fcomp
xor
inc
cmp
call
xchg
ficomp
jle
out
xor
jae
pop
mov
stos
xor
ret
add
jp
jno
test
adc
js
fnsave
jge
loopne
out
push
and
xlat
sti
sub
inc
not
out
jle
retf
mov
xlat
test
adc
xor
cmp
cmps
test
jmp
jp
retf
sbb
repnz
jp
fcomp
iret
xor
stos
push
or
aad
add
mov
push
jge
xor
hlt
xchg
xchg
inc
cmp
push
cmp
(bad)
mov
leave
mov
xchg
inc
loopne
cmp
and
daa
enter
mov
xor
cs
jb
xor
or
(bad)
push
or
(bad)
sbb
shl
sbb
push
loopne
or
pusha
push
cmps
jne
xor
in
dec
add
xchg
and
pushf
cmp
test
jg
mov
scas
icebp
shl
lds
pop
sbb
mov
add
test
jmp
jl
mov
sbb
scas
sub
xor
frstor
cmp
outs
cli
retf
int
mov
pop
xlat
out
ficomp
out
inc
jp
jnp
pop
xchg
or
in
repnz
mov
movs
pop
sub
cmp
xchg
cli
sub
inc
mov
(bad)
mov
dec
loopne
in
mov
add
or
sub
cmp
aaa
or
mov
daa
jmp
mov
cmp
cld
lahf
mov
call
sub
fidivr
addr16
xor
sub
sbb
leave
sub
inc
in
jl
imul
cli
std
push
arpl
inc
jp
dec
inc
xchg
add
and
push
add
addr16
jnp
sbb
push
jmp
repz
cmp
leave
cmp
add
sbb
in
dec
mov
repnz
hlt
jp
or
arpl
sub
lds
pop
sub
push
dec
in
mov
push
add
sub
cdq
xchg
test
or
pop
and
inc
pop
jbe
cmp
cmp
mov
mov
loopne
cmp
push
mov
int3
std
sbb
adc
or
jmp
xor
dec
dec
and
(bad)
mov
xchg
cmp
(bad)
pusha
dec
icebp
xchg
and
push
xlat
add
push
or
enter
jns
sti
jae
ror
or
call
imul
js
fisubr
cmc
mov
xor
inc
icebp
jae
in
cmps
push
and
sub
mov
dec
and
test
jae
sbb
(bad)
aas
inc
jle
pop
add
lea
or
lds
jg
mov
nop
cmp
ds
imul
call
add
cmps
sub
lock
imul
rol
dec
pop
push
retf
fnsave
cmp
and
ret
and
cld
outs
lods
dec
xchg
push
ret
sar
and
and
jbe
mov
pop
fs
rcr
sub
enter
movs
mov
xor
sbb
sbb
in
(bad)
jmp
and
jne
mov
xchg
pop
popf
test
pop
imul
cld
push
cmp
jg
add
jmp
loope
dec
popa
pusha
sub
dec
icebp
sahf
mov
sar
stos
mov
pop
(bad)
imul
inc
or
push
cwde
test
mov
and
cmp
sub
(bad)
mov
dec
sbb
imul
into
enter
dec
mov
in
shl
nop
inc
cmp
cmc
fcmovnb
xlat
xor
mov
in
mov
movs
vmovntps
fild
push
pop
push
dec
pop
or
cmp
ret
jo
inc
into
inc
gs
in
jle
int
call
push
push
jl
mov
pop
push
dec
daa
pop
xlat
mov
scas
aam
jg
cmp
pop
or
xor
mov
dec
(bad)
out
in
mov
mov
hlt
fwait
data16
arpl
addr16
into
cmp
hlt
push
push
dec
lea
das
push
or
pop
mov
mov
dec
xor
add
dec
(bad)
nop
int
mov
retf
(bad)
adc
jecxz
cmc
xchg
sbb
popa
dec
ja
cwde
outs
pop
clc
pushf
(bad)
ja
jmp
fisub
call
pop
xchg
push
test
fst
popa
fucom
bnd
(bad)
add
out
shl
mov
iret
xor
and
push
mov
js
shr
es
inc
neg
das
mov
imul
aad
push
mov
(bad)
ss
adc
hlt
inc
lds
popa
je
mul
xchg
jb
out
les
cmp
fbld
push
out
fsubr
imul
stc
mov
cmp
lock
pop
jecxz
pop
gs
imul
shl
in
shl
pop
dec
xor
and
cdq
stc
outs
iret
shl
stos
je
sbb
xchg
jmp
jno
movs
out
(bad)
ja
sbb
leave
les
mov
xchg
mov
out
xchg
stos
cmp
nop
fcmovu
xchg
add
add
mov
xchg
adc
mov
loope
jge
into
sub
mov
xor
clc
mov
or
outs
(bad)
(bad)
cld
call
cmps
pop
inc
xor
sub
icebp
in
std
and
pop
popa
dec
ins
mov
aad
mov
jge
mov
xor
dec
xor
ja
push
popa
mov
ror
inc
stc
arpl
jp
into
add
jmp
jmp
(bad)
loope
fbstp
(bad)
xor
scas
pop
int3
jge
gs
pushf
hlt
mov
jle
in
and
xor
add
ds
mov
test
add
mov
addr16
(bad)
xor
or
jns
mov
dec
dec
lds
and
leave
xor
hlt
push
mov
dec
xchg
dec
mov
ds
rcl
cdq
sbb
daa
sti
adc
in
jb
add
mov
sbb
(bad)
cli
pop
fldenv
xchg
ins
mov
sbb
pop
jbe
aam
call
dec
push
adc
pop
movs
std
inc
clc
rol
push
inc
push
xchg
xor
ins
int
add
jbe
dec
cmps
cmp
xchg
popa
mov
mov
sti
out
jg
pusha
sahf
lea
xchg
enter
sub
fwait
ss
mov
(bad)
fmul
outs
pop
inc
xor
mov
hlt
int
dec
xchg
lock
and
cs
cmp
fucomip
jle
xchg
jmp
mov
mov
adc
and
retf
cld
das
into
aad
mov
adc
jp
test
jmp
shl
cmp
or
push
adc
jp
test
inc
rol
imul
test
fcomp
xor
xchg
aaa
sub
in
sub
scas
and
cs
fidiv
test
cmp
and
aad
sbb
xor
adc
imul
xchg
int3
xchg
and
stos
cwde
repz
jae
mul
mov
jb
dec
cmp
shl
fisubr
pop
or
push
add
leave
jne
ja
mov
fldenv
pop
mov
cmp
push
or
lds
imul
call
sbb
sub
ds
cmp
jp
call
cmps
aam
rep
imul
cmc
inc
add
test
push
(bad)
movs
pop
out
cmp
adc
xchg
rol
loop
dec
ins
jae
call
and
fimul
shl
and
das
jnp
mov
icebp
daa
pusha
adc
iret
xor
inc
sbb
nop
mov
mov
add
mov
stos
std
scas
or
mov
mov
inc
ret
imul
movs
xor
xchg
mov
iret
gs
sub
or
inc
or
rcr
leave
mov
adc
jmp
in
pop
dec
mov
jl
(bad)
in
int3
rol
push
sti
mov
mov
mov
lods
lock
ins
shl
out
xchg
lsl
or
mov
popa
pop
rcl
xor
pop
and
(bad)
sub
aad
test
xchg
cmp
mov
repnz
mov
add
pusha
mov
xchg
push
mov
fsub
mov
out
pusha
push
aas
xlat
jge
push
and
sbb
xchg
adc
out
retf
cmp
mov
inc
xchg
inc
inc
into
add
shl
and
lods
jo
es
inc
mov
add
sub
push
jno
scas
push
adc
add
jmp
js
inc
or
jmp
ret
sbb
pop
push
inc
adc
adc
test
or
test
sbb
mov
adc
mov
jns
mov
xchg
(bad)
mov
push
in
out
sub
cmc
dec
ss
sub
xchg
xchg
xchg
add
test
aaa
popa
xlat
in
nop
mov
xchg
xor
fild
adc
push
std
loop
cdq
inc
repz
and
mov
mov
and
jle
(bad)
fadd
push
ja
sub
into
lods
retf
jle
hlt
add
in
repnz
mov
adc
cmp
sbb
retf
cmp
jmp
mov
push
inc
add
nop
dec
sbb
ins
add
fs
ins
aad
mov
cmp
jae
inc
mov
stc
clc
xor
int
xchg
or
adc
lea
in
jl
or
adc
ins
pop
fstp
cmp
repz
mov
jnp
ret
or
cmp
jmp
cmp
cdq
push
shl
sub
sub
js
pop
mov
mov
test
test
aas
push
mov
sbb
int3
int3
loopne
sub
popa
mov
shl
dec
xchg
ins
ins
movs
(bad)
mov
neg
cmp
pop
cld
push
and
add
and
or
mov
push
into
jl
cli
adc
inc
mov
mov
loope
xchg
mov
aad
jmp
jge
int
adc
ins
cld
(bad)
mov
sbb
jle
iret
push
jecxz
lahf
push
xchg
aaa
in
jmp
add
das
(bad)
in
stos
mov
scas
stos
add
cdq
fs
int
inc
xchg
and
sbb
sahf
adc
je
jno
call
sub
cmc
ins
sbb
aas
mov
mov
outs
add
repnz
adc
imul
and
lock
inc
pop
sbb
lock
mov
inc
adc
inc
jns
mov
cmp
push
enter
scas
pop
sbb
xor
test
je
rol
dec
dec
inc
fld
loop
dec
jg
fs
ret
js
jmp
cmp
mov
xchg
ins
pop
inc
and
cmp
popa
dec
xor
xor
pushf
mov
pop
mov
jg
fmul
aas
pop
sbb
outs
push
mov
sbb
stos
movs
clc
retf
aas
fwait
(bad)
and
dec
movs
cmp
sbb
cwde
stc
mov
arpl
ds
dec
sbb
out
cmp
sbb
pop
out
data16
jns
fisttp
jg
das
shl
repz
das
(bad)
lods
inc
std
fst
inc
mov
xchg
mov
shr
rcr
xchg
aad
pop
leave
cs
ret
jmp
hlt
dec
leave
pop
ins
(bad)
aas
xchg
xor
or
test
push
fisub
cwde
repz
arpl
sub
retf
std
dec
dec
xor
dec
cmps
pop
retf
adc
jle
outs
cmps
cld
sbb
or
push
mov
fsubr
mov
shl
inc
cmp
push
in
mov
sub
cmps
cmp
jne
fs
push
push
loopne
jb
and
fdiv
out
dec
inc
mov
sub
fst
dec
test
mov
mov
cmp
sbb
sub
inc
daa
mov
repnz
cmp
sub
xchg
nop
inc
icebp
aas
(bad)
retf
call
mov
enter
adc
test
sub
pop
lock
sbb
inc
jnp
cmp
sub
push
ss
outs
or
aas
mov
xchg
and
cmps
retf
xlat
mov
push
aam
aaa
jbe
rol
push
sbb
xchg
les
pop
into
adc
(bad)
adc
shl
shl
push
xchg
mov
icebp
pop
cdq
jg
adc
arpl
inc
mov
in
jnp
test
jecxz
add
sub
(bad)
aam
data16
cmc
cmp
in
pusha
lahf
loopne
out
imul
lods
scas
xchg
and
mov
aad
gs
push
out
pop
mov
jae
push
adc
mov
jno
adc
mov
inc
ss
int
xchg
xchg
jns
mov
cmp
fisubr
add
pop
dec
int3
xor
es
pop
sbb
and
dec
arpl
and
pop
es
sbb
call
add
hlt
leave
or
push
add
lods
cmp
inc
arpl
adc
and
cwde
mov
je
jge
stos
dec
sub
cmps
shl
fstp
std
clc
or
fdivr
orps
mov
jl
(bad)
or
or
mov
idiv
dec
loope
mov
xchg
jno
aam
sbb
into
(bad)
jl
xchg
(bad)
imul
jg
xchg
scas
shl
mov
xor
std
pop
mov
sbb
push
xchg
sub
cwde
add
add
in
div
sub
add
mov
sti
clc
shl
and
inc
push
push
adc
or
mov
cmp
retf
dec
pop
jnp
imul
cmc
mov
cmp
imul
gs
or
fadd
mov
or
aam
test
sub
mov
mov
sbb
clc
repz
fnstcw
adc
repz
mov
or
pop
xor
data16
mov
repnz
les
sbb
iret
js
stos
repz
mov
aas
and
aaa
sub
aad
mov
jo
sub
mov
movs
aam
push
dec
ins
shr
sub
and
adc
push
rol
mov
inc
dec
fldenv
(bad)
mov
data16
repnz
inc
mov
mov
jae
adc
cdq
pop
xchg
outs
sbb
call
sub
jg
push
mov
dec
push
fcom
repnz
push
jne
pop
loope
add
loop
fisubr
jnp
sahf
sub
out
sar
fbstp
retf
dec
retf
inc
in
xor
xchg
jns
jmp
push
lock
fadd
adc
mov
xchg
xchg
add
cmp
cmp
hlt
popa
pop
adc
jl
sbb
inc
jno
sub
sbb
push
popa
in
mov
pop
mov
ror
imul
fcomp
cmp
cmp
out
retf
mov
pop
loope
outs
add
call
cdq
(bad)
scas
xchg
test
xor
jg
mov
add
push
jmp
xchg
addr16
pop
cmps
aas
mov
xchg
cmp
push
imul
cli
fsubp
fs
mov
push
push
dec
push
xor
push
ins
jo
push
xchg
jo
jno
les
retf
add
iret
push
mov
jmp
lods
loop
xor
push
sub
mov
inc
dec
mov
je
xor
rcl
add
jge
stos
lds
sub
or
mov
in
movs
mov
(bad)
mov
or
pusha
fcomp
dec
jge
in
inc
loope
and
adc
push
fsub
add
sub
in
shr
push
sub
add
sbb
(bad)
mov
mov
mov
leave
push
jl
or
adc
or
bound
rcl
in
scas
lds
jp
pop
pop
imul
sub
cs
jmp
lods
sbb
lahf
scas
test
pop
adc
adc
out
aad
push
lds
xor
jae
sub
daa
cmps
mov
sub
jg
jne
push
adc
jg
repz
mov
shl
mov
dec
scas
mov
out
jge
das
and
into
and
fnstenv
adc
cdq
pop
dec
sub
add
adc
dec
repnz
movs
or
cli
add
adc
out
or
cmc
ins
jge
pop
sub
pop
cmp
xor
xchg
xor
mov
je
add
or
fmul
test
cmp
add
or
stc
dec
pcmpeqd
pop
ins
jb
sub
sbb
sbb
jmp
scas
pushf
mov
inc
imul
fisttp
sub
push
inc
pop
stos
fisttp
sbb
and
bound
ds
dec
jae
dec
xor
adc
pop
(bad)
out
cmp
push
lods
ds
ds
pop
sti
xchg
add
pop
ins
dec
aaa
rol
mov
dec
fidiv
clc
test
loope
mov
(bad)
push
xchg
repz
xchg
pop
iret
adc
fs
xlat
push
mov
lds
and
or
popa
movs
cmc
pop
jnp
fucomip
fcomp
xor
push
add
fwait
call
call
repz
int3
popf
daa
stos
cmp
bound
jecxz
sbb
ins
jp
mov
sub
or
leave
dec
popa
adc
sbb
aas
add
retf
mov
call
xlat
fs
jl
xchg
loopne
cmp
pop
push
jle
ret
retf
mov
or
cmp
xchg
inc
mov
jno
inc
cmp
lea
and
sbb
outs
call
fmul
je
retf
mov
lea
cmp
mov
test
mov
adc
fisubr
scas
call
aaa
test
inc
imul
imul
add
add
cmps
push
cmc
adc
test
fstp
jmp
or
pop
lea
add
ror
pop
sti
out
push
cmp
in
xchg
jo
dec
sbb
mov
das
loope
or
std
(bad)
das
and
or
in
retf
cwde
test
movs
cdq
mov
lea
add
mov
lds
jae
mov
dec
xchg
sub
mov
add
test
les
add
dec
(bad)
mov
in
sbb
dec
pop
stos
jmp
gs
ins
arpl
and
int
inc
mov
popf
das
xor
daa
dec
loop
pop
dec
hlt
ds
push
fwait
adc
movs
iret
rol
xchg
mov
outs
cmp
ficom
cmps
xor
or
scas
jle
imul
movs
imul
push
rcr
int3
and
mov
in
jg
test
pop
imul
mov
test
scas
in
jno
sbb
iret
stos
test
outs
pop
pushf
stos
popa
adc
xchg
xchg
dec
inc
pop
jae
push
ret
mov
jge
cmps
sub
and
mov
add
cli
lds
or
fwait
neg
rcl
jae
fidiv
inc
ret
rcl
dec
xchg
sub
call
push
(bad)
and
btr
sub
dec
add
ret
jl
enter
jg
out
ds
inc
out
clc
aad
(bad)
mov
adc
xchg
inc
xchg
aad
test
sbb
sbb
ror
jbe
push
add
adc
out
jns
lods
jl
test
cli
mov
dec
stos
in
scas
mov
mov
push
loop
test
inc
jmp
fist
ins
or
add
adc
call
mov
loop
mov
sbb
repz
dec
sbb
repnz
sbb
or
dec
dec
jmp
aad
xchg
xor
dec
add
jmp
jle
nop
push
jnp
xchg
(bad)
lods
shl
es
aas
sbb
in
int
cli
mov
mov
scas
or
push
scas
rcr
mov
(bad)
retf
repnz
jmp
push
add
sub
dec
leave
retf
dec
jmp
adc
push
aad
ins
fadd
(bad)
sar
mov
push
pop
pop
add
ret
ret
xor
fild
or
retf
cmp
shr
push
outs
add
stos
mov
addr16
nop
int
adc
fmul
xor
fst
jmp
and
sbb
(bad)
pop
mov
pop
ins
xchg
jecxz
xor
imul
daa
or
inc
daa
std
xchg
mov
or
push
das
jecxz
aas
jns
out
out
or
pusha
cmp
outs
mov
lods
imul
movs
or
inc
(bad)
js
jmp
shr
push
push
mov
mov
xchg
sahf
push
in
cmp
inc
pop
mov
jne
or
stos
add
inc
out
pushf
je
xlat
add
cmp
mov
test
out
test
dec
mul
retf
out
or
jo
or
push
(bad)
jbe
imul
pop
push
push
imul
dec
lods
arpl
lods
jae
das
imul
(bad)
fwait
sbb
add
or
icebp
sbb
stos
ds
lea
ret
jmp
adc
adc
jnp
xchg
mov
push
xchg
shl
sub
push
data16
or
mov
cli
aam
ins
and
pop
test
movs
(bad)
xor
nop
jo
dec
into
mov
dec
call
mov
xlat
xchg
sub
xor
xor
cdq
clc
scas
or
adc
push
ficomp
mov
mov
mov
adc
repnz
adc
xor
dec
add
ret
inc
pop
xor
cmp
xchg
jo
cmp
mov
xor
cld
fs
movs
jmp
add
inc
push
cmps
lods
add
or
add
jmp
pop
lahf
(bad)
jmp
xrelease
cdq
xor
push
out
lock
rcr
push
xchg
ret
stos
sub
aam
frstor
sti
cmp
inc
js
lds
cmps
or
(bad)
adc
sub
int
je
push
std
fsubp
or
xor
arpl
xchg
push
adc
push
mov
retf
mov
fld
sbb
sub
and
scas
xchg
mov
adc
mov
mov
gs
lods
sbb
int
sbb
pushf
scas
xor
mov
mov
adc
inc
retf
dec
xchg
movs
out
test
sub
inc
xchg
xchg
(bad)
shr
sbb
push
xor
movs
clc
push
lock
lahf
cmp
pop
xchg
jnp
fisubr
or
add
int3
or
adc
jp
icebp
adc
call
fnstcw
sti
sub
retf
fsub
pop
push
out
lahf
pop
mov
repz
pop
push
ret
mov
jmp
cwde
xchg
add
in
add
push
jnp
add
lods
mov
mov
push
pop
les
jb
xchg
sti
lock
in
dec
ret
and
daa
pop
xchg
std
aas
push
push
les
in
xor
dec
add
mov
lods
test
mov
jecxz
lea
xchg
adc
jns
mov
push
aas
(bad)
into
sbb
pusha
fst
out
aam
sbb
dec
(bad)
cli
cmps
push
or
mov
(bad)
cmc
add
xchg
jne
mov
arpl
and
mov
(bad)
or
(bad)
and
push
lods
mov
and
mov
cdq
dec
dec
test
stc
inc
cmc
(bad)
cmps
(bad)
aad
mov
shl
dec
js
jae
ret
pop
test
add
pop
(bad)
pop
rcl
xor
in
jp
dec
dec
xchg
mov
mov
xchg
or
loope
cmp
xlat
hlt
outs
ins
jge
pop
mov
mov
jge
pusha
push
pop
push
mov
stc
add
sbb
or
pop
adc
mov
inc
sub
test
add
xchg
xchg
jbe
push
sar
mov
pop
aam
test
adc
add
fist
ret
dec
xor
ds
jmp
adc
mov
pop
push
sub
in
push
enter
jo
dec
cmp
test
sbb
out
cmp
paddsw
out
pop
ins
xchg
sub
fwait
push
xor
fist
xlat
push
inc
dec
adc
out
push
scas
retf
retf
call
ret
clc
rcl
and
pop
or
scas
xor
sbb
iret
rcr
ins
imul
push
jp
call
push
mov
movs
mov
out
xchg
in
sbb
pop
lds
jns
sbb
lods
mov
aas
xchg
mov
es
lahf
sahf
arpl
xor
ins
call
movs
or
loope
xor
push
jae
xor
jno
icebp
jp
sub
sti
sbb
sar
xor
into
jge
sti
dec
push
fwait
push
and
mov
jmp
fild
jae
mov
mov
or
mov
add
jb
xchg
xchg
stc
stos
pop
dec
sbb
jbe
mov
lds
lahf
sub
(bad)
aas
mov
aas
dec
xor
cmps
(bad)
sbb
xchg
sar
aas
mov
add
clc
mov
xlat
push
and
sub
sbb
cwde
push
rol
push
sahf
push
mov
lods
or
cmp
retf
inc
mov
int
xchg
les
adc
test
sub
enter
add
mov
in
add
pusha
push
mov
dec
jnp
ss
sub
jmp
add
(bad)
out
fmul
pop
cdq
popf
dec
test
mov
aad
call
mov
jge
mov
mov
dec
aad
mov
dec
std
cli
inc
inc
(bad)
adc
add
inc
and
mov
xor
cs
outs
jae
call
cmp
pusha
cli
add
jle
and
or
mov
xchg
outs
jb
adc
xor
dec
xchg
pop
push
outs
sahf
cli
bound
aam
sahf
ret
call
pop
cmp
jp
xor
sahf
inc
xchg
mov
sub
in
dec
arpl
or
out
outs
add
xchg
mov
lds
enter
jecxz
mov
pop
outs
adc
les
pop
enter
daa
jl
jmp
test
dec
outs
adc
test
bound
popa
xor
pop
in
pop
jl
and
cmps
arpl
loop
inc
sbb
xchg
push
repnz
cmp
lods
movs
mov
jge
inc
jb
jo
iret
jmp
sti
pop
xor
dec
push
sub
and
enter
loop
push
cmp
ds
jecxz
inc
je
shl
mov
push
cs
fldenv
dec
mov
(bad)
ins
xlat
es
xor
cmps
push
test
sbb
and
scas
add
cmp
fldcw
in
dec
mov
inc
or
data16
pop
cmp
dec
dec
pslld
lds
movs
mov
sti
(bad)
pop
push
inc
(bad)
leave
cld
stos
mov
xchg
js
(bad)
adc
cmp
mov
sbb
ret
mov
cs
mov
push
add
into
loopne
adc
pop
leave
xchg
retf
push
cli
cmps
icebp
fwait
sbb
fs
sbb
nop
add
pop
push
arpl
retf
aam
push
cmps
inc
jle
mov
add
icebp
inc
int
and
dec
push
test
adc
ja
(bad)
cdq
(bad)
push
enter
loope
scas
ror
push
in
or
pop
fimul
and
retf
jb
cmp
xchg
mov
mov
cmp
sub
adc
push
and
ins
into
jmp
lock
cmp
xchg
mov
into
add
dec
and
pop
call
add
lods
loopne
cmp
push
push
add
mov
jmp
pop
idiv
aaa
or
xchg
dec
(bad)
div
xchg
std
cmc
popa
aaa
xchg
stos
icebp
mov
call
jecxz
ins
mov
pop
loop
push
mov
cmp
movs
sti
mov
mov
ins
jo
shl
(bad)
xchg
js
xor
or
inc
inc
fmul
js
ss
addr16
cmp
or
popa
adc
stos
repnz
mov
or
std
push
mov
scas
cwde
jmp
jne
sbb
dec
dec
movs
sahf
and
(bad)
mov
push
jg
rcr
pop
fiadd
bound
xchg
dec
loope
and
lods
adc
int
pop
out
push
mov
sbb
and
jle
mov
mov
leave
mov
add
test
jns
dec
push
xor
xbegin
or
call
jns
stc
and
adc
mov
inc
movs
and
sahf
sub
aad
mov
jb
sub
adc
out
mov
jae
int
in
lock
push
and
jns
sti
fmulp
je
mov
cmp
dec
sbb
mov
std
adc
test
fbstp
xchg
aad
fcmovnbe
dec
(bad)
outs
push
xor
jae
push
mov
das
shl
jmp
push
mov
mov
adc
jns
inc
mov
mov
mov
fistp
test
mov
sub
xor
add
into
push
fild
mov
pop
js
push
jns
sub
fstp
fdivr
cmc
jmp
jbe
cmp
(bad)
ss
cwde
jno
xor
xor
xchg
jnp
adc
add
(bad)
fldcw
mov
mov
push
data16
movs
fucomip
mov
scas
mov
shl
ins
or
je
cmp
xor
cli
test
inc
dec
(bad)
in
dec
add
loopne
pop
push
adc
aas
adc
nop
cli
push
mov
ss
outs
mov
hlt
mov
dec
das
cmps
add
or
sbb
dec
sbb
(bad)
mov
loop
push
or
loopne
dec
push
sahf
test
(bad)
sub
push
out
add
js
mov
inc
jns
pop
or
mov
dec
into
pop
mov
mov
ror
shr
les
sbb
(bad)
fwait
mov
sbb
in
int3
stc
mov
mov
jle
mov
in
rol
pop
pusha
mov
mov
call
les
inc
pop
clc
les
ret
fisub
sahf
(bad)
das
mov
sub
mov
fmul
add
or
mov
fistp
dec
xlat
retf
jae
bound
popf
pop
das
(bad)
repz
jg
into
dec
or
imul
adc
add
enter
fcom
dec
push
mov
jno
mov
adc
mov
jo
scas
add
mov
fld
into
test
sbb
dec
jl
fisttp
shr
ds
repnz
cmps
dec
arpl
dec
mov
push
leavew
sub
js
mov
dec
dec
xlat
test
nop
mov
xchg
jb
lds
int
mov
dec
or
shr
sbb
sbb
cmps
xor
pop
jbe
push
shl
stc
das
jge
push
ds
xor
scas
dec
xchg
add
mov
xor
in
inc
mov
or
jmp
ret
je
pop
out
movs
dec
inc
cwde
or
adc
mov
push
push
cmp
arpl
push
push
mov
leave
xor
das
lods
cs
mov
clc
sbb
out
add
cdq
add
push
dec
fcomip
or
out
sbb
gs
cmp
cmps
push
add
inc
mov
xchg
idiv
fsubp
cld
mov
sub
xlat
inc
cmovp
push
jp
sar
(bad)
pop
dec
add
cwde
(bad)
jge
sbb
jb
lods
sti
jnp
cmp
jo
dec
and
mov
call
xchg
fucom
ret
std
fcmovne
fadd
cld
inc
gs
adc
ror
(bad)
adc
sbb
nop
jge
jno
mov
fwait
(bad)
scas
mov
(bad)
mul
add
ret
fprem1
inc
pop
sub
cld
lahf
daa
add
cmp
or
cli
cmp
add
rol
add
adc
imul
ja
inc
(bad)
xchg
(bad)
cmps
or
pop
retf
jns
pop
xlat
movs
lods
sbb
inc
jmp
stos
sti
sbb
sbb
sub
test
xchg
or
ins
imul
sahf
pop
jno
sub
addr16
out
push
pop
sub
adc
shl
sti
test
in
test
jg
cmp
(bad)
jle
add
xchg
mov
dec
mov
or
aaa
sbb
fs
xor
sbb
pop
sub
icebp
ret
ret
or
and
inc
pop
es
loopne
jbe
push
push
lods
fwait
push
cli
xor
ret
cmp
es
ret
call
jno
into
pop
sub
push
(bad)
mov
mov
lahf
fadd
leave
mov
sahf
test
sbb
bound
mov
dec
lahf
mov
sti
push
add
dec
and
sbb
fstp
jbe
loope
cmp
outs
or
push
mov
and
xor
dec
pop
in
xchg
xor
push
xchg
leave
xlat
xchg
sub
mov
xor
clc
sahf
out
cli
cmp
add
cmp
(bad)
fwait
push
hlt
in
mov
out
mov
jle
test
dec
int
test
rol
movs
fbld
jno
icebp
mov
lahf
outs
das
rcl
cmp
test
repz
push
dec
mov
add
pop
or
out
or
sub
inc
jns
jns
cmp
add
mov
(bad)
mov
std
out
fidiv
sbb
add
push
and
dec
pushf
or
sbb
mov
xor
dec
in
fisttp
adc
cmps
jo
push
stos
pop
bound
js
jle
push
jno
pop
daa
(bad)
rcr
add
pop
mov
addsubps
pop
cmp
xor
xchg
mov
lock
ja
lods
sub
repz
or
dec
aaa
pushf
sbb
mov
scas
add
add
test
cmp
and
jmp
(bad)
repz
cmp
inc
or
mov
mov
fstp
sbb
lock
pop
and
adc
test
sbb
xor
pop
dec
fisub
adc
or
leave
push
sub
push
sub
stos
mov
test
push
mov
mov
or
cmps
repz
das
adc
and
das
xlat
out
retfw
add
adc
rol
bound
add
aaa
shr
mov
and
aas
xchg
shl
push
inc
jp
mov
sbb
cmp
loopne
(bad)
pop
ret
enter
xchg
xchg
cmp
add
add
shl
pop
aad
retf
jmp
xchg
(bad)
loopne
sbb
iret
pop
jnp
mov
and
iret
ds
xchg
cld
ror
dec
and
bound
loopne
popf
dec
rcl
jmp
inc
cld
js
in
shl
adc
xor
cmc
mov
jge
call
into
add
pop
ret
jb
shl
lods
ds
jmp
mov
fwait
push
(bad)
das
scas
into
stc
pop
ss
mov
daa
stc
pop
cmps
mov
jne
cli
les
add
loop
neg
rol
xchg
dec
jecxz
lahf
jge
or
mov
sbb
jo
mov
add
test
pop
sub
clc
jae
jo
xchg
call
push
popf
imul
or
or
imul
and
push
dec
lea
xchg
(bad)
cmp
loope
cmc
in
adc
jl
shr
(bad)
aad
cdq
and
test
test
lods
shr
stos
push
dec
mov
jnp
fild
push
shl
mov
mov
imul
adc
push
ret
aaa
adc
test
call
jo
pop
mov
aaa
adc
cmps
xor
jmp
mov
inc
pop
shl
and
adc
dec
lock
in
rcr
dec
call
inc
lock
not
pop
repz
outs
in
hlt
cmp
cmp
sbb
adc
add
dec
and
(bad)
(bad)
retf
xchg
inc
out
sub
mov
add
push
fwait
mov
or
sub
retf
xor
daa
ja
or
mov
inc
(bad)
fst
mov
jle
xor
jmp
jbe
adc
popa
xchg
or
xor
mov
add
mov
and
in
test
push
push
mov
pushf
lods
repz
sahf
pop
or
mov
retf
jbe
fwait
stc
lahf
mov
mov
clc
pop
repz
pop
inc
push
mov
cmp
stos
xchg
fs
jl
and
sub
pop
repnz
movs
push
jmp
cmps
mov
stc
retf
in
pop
push
cmps
(bad)
mov
pop
xor
das
in
cmp
and
jae
fwait
(bad)
rcr
sub
iret
jae
adc
lahf
xchg
out
ds
shr
xor
mul
test
pop
mov
lods
jb
adc
or
pop
inc
adc
or
ins
pop
push
div
(bad)
adc
shr
mov
inc
jnp
push
ja
xchg
and
pop
movs
xchg
das
fmul
movs
rcr
scas
idiv
jmp
daa
jno
sbb
ja
adc
shr
jecxz
out
jle
aad
inc
jl
aaa
lods
push
mov
sub
sub
sti
neg
sub
jge
cmp
mov
cmps
lea
push
repz
cmc
mov
mov
retf
pushf
xchg
inc
fiadd
ret
lods
and
xor
jecxz
jo
(bad)
(bad)
mov
jmp
mov
sti
dec
pop
dec
mov
ins
push
pop
pop
mov
add
pushf
shl
and
or
mov
test
push
pop
inc
dec
int3
dec
call
jno
imul
xchg
aas
cwde
sbb
fbstp
movaps
mov
inc
and
xchg
dec
outs
cmps
pop
(bad)
push
in
push
jmp
ins
push
cwde
aas
xchg
leave
out
sub
popa
jns
mov
clc
aam
xor
test
stc
sub
mov
sbb
sub
rcr
push
adc
or
add
or
cli
call
sar
fld
pop
jae
cmps
mov
jb
adc
mov
jbe
dec
jge
ret
je
pop
adc
das
into
retf
cmp
sub
and
mov
jp
cli
das
scas
call
int
fcom
mov
and
mov
test
jbe
add
dec
cmp
gs
jne
fild
push
lahf
cmp
inc
xchg
or
test
mov
imul
inc
push
sbb
xor
mov
retf
xchg
mov
lock
mov
nop
mov
fisttp
in
shl
dec
add
es
or
in
dec
cmp
jns
fcom
xchg
inc
or
push
(bad)
jmp
call
xchg
sub
dec
xor
cmps
idiv
mov
hlt
fimul
xchg
pusha
cdq
inc
bnd
pop
leave
retf
push
cwde
xchg
out
sub
add
mov
push
movs
mov
lods
ja
(bad)
adc
inc
fsub
cmp
(bad)
and
mov
sbb
inc
adc
sub
(bad)
jmp
movs
div
sti
xchg
outs
inc
imul
add
outs
repnz
in
movs
leave
xchg
(bad)
(bad)
jns
push
adc
jae
cmps
inc
cmp
cmp
or
lahf
out
inc
repz
and
stos
xor
adc
repz
jle
repnz
dec
int
nop
adc
imul
sbb
loope
mov
loop
fstp
test
retf
pushf
mov
sbb
adc
rol
pop
movs
push
ret
ins
mov
pushf
cmp
xchg
jmp
int
int
mov
imul
icebp
xchg
cmp
in
cs
lock
xchg
mov
scas
inc
push
or
in
js
pusha
and
push
aaa
xchg
addr16
outs
add
add
and
sbb
add
xchg
pusha
shl
mov
pusha
aas
mov
jno
mov
in
ins
or
(bad)
sti
mov
sysenter
xchg
jbe
adc
std
pop
pop
inc
ds
nop
retf
xor
in
adc
outs
push
aad
repnz
adc
or
adc
je
pop
outs
xchg
push
cmp
dec
xchg
test
fistp
js
das
fs
sbb
push
and
aaa
shr
sbb
sub
or
push
test
leave
movs
cmps
jne
push
(bad)
mov
and
sbb
mov
push
dec
leave
js
jle
cmp
xchg
dec
cmp
fcomp
test
out
jle
mov
ret
rol
cmps
fimul
sbb
pop
xchg
add
imul
in
aad
lods
jb
cmp
or
sbb
mov
pop
xor
inc
cmp
aad
cld
mov
or
fcomp
int3
push
sbb
sbb
lock
mov
pusha
data16
outs
fs
in
mov
sub
sub
jbe
pop
leave
enter
mul
adc
popa
gs
jecxz
and
push
mov
das
jae
lahf
cmp
cmp
scas
adc
fisub
push
push
outs
push
fs
inc
mov
adc
cmp
fnstsw
jns
jp
popa
add
int3
jmp
mov
cmps
inc
adc
iret
inc
in
mov
push
pop
push
stos
xchg
xchg
cmp
ins
mov
fadd
cmp
jecxz
and
mov
push
mov
sbb
push
jns
(bad)
std
dec
mov
jg
(bad)
push
fwait
mov
rcl
mul
inc
adc
prefetch
xor
push
imul
idiv
test
out
inc
arpl
test
mov
add
jb
movs
sub
sbb
enter
ja
fstp
push
test
xchg
cmp
mov
add
test
mov
aas
mov
and
push
mov
push
push
inc
xor
or
pushf
pop
sub
and
daa
cmc
cld
add
mov
and
rcl
dec
(bad)
lock
pop
pop
int
sbb
js
mov
jl
ins
jmp
push
cs
pop
jne
cmp
sub
mov
outs
ficom
fs
addr16
pop
and
icebp
adc
jae
xchg
xchg
dec
or
xchg
xor
dec
int
sub
icebp
shl
movs
or
inc
ficom
das
mov
or
sahf
push
or
sbb
jo
sar
xchg
xchg
and
mov
jecxz
jo
jge
cmp
ficomp
mov
mov
popa
je
inc
mov
dec
xlat
jmp
shl
leave
mov
push
cmc
xor
inc
mov
sbb
(bad)
ins
test
cmp
jne
(bad)
loopne
or
xchg
xchg
pop
scas
es
out
jg
imul
test
nop
outs
jmp
or
repz
ret
sbb
push
mov
lea
stos
dec
add
aad
shl
arpl
cmp
in
or
dec
cli
clc
cs
cmc
xor
(bad)
sub
xchg
add
and
jno
shr
or
sub
loope
cmc
push
ror
push
sbb
(bad)
push
into
call
in
popf
test
pusha
xchg
dec
fsub
mov
sub
mov
mov
inc
cmp
jmp
dec
sbb
jmp
cmp
dec
jnp
pop
jno
fisubr
dec
xchg
add
jge
daa
cmps
aam
rcl
adc
leave
leave
loopne
int3
adc
xlat
mov
adc
push
add
jg
push
or
dec
dec
add
jae
push
out
fcom
cld
xchg
jae
xchg
mov
mov
ficomp
mov
imul
out
sub
(bad)
and
retf
xchg
mov
mov
sar
sbb
jg
js
bound
cld
test
pop
scas
shl
into
mov
pop
xchg
pop
(bad)
in
jl
loopne
cmps
pop
cmc
clc
pop
xor
mov
jmp
fild
mov
mov
mov
cwde
cwde
cld
add
scas
inc
out
fadd
xchg
sti
push
xchg
xor
cmp
xchg
add
je
scas
leave
sti
ja
inc
das
xchg
mov
or
cdq
mov
test
fst
and
push
xchg
and
jo
fdiv
cmp
adc
mov
mov
pusha
mov
imul
push
clc
mov
test
jecxz
adc
push
aam
fwait
add
pop
(bad)
les
loope
ror
pop
sub
and
inc
inc
scas
pusha
xchg
xor
call
mov
and
xchg
shr
or
mov
pop
fadd
in
je
inc
jle
push
aad
fnstenv
add
sti
outs
out
cs
(bad)
lock
movs
mov
sub
push
push
and
push
pusha
cwde
xor
out
push
aas
jge
pop
jle
rol
mov
push
push
pop
retf
inc
loopne
mov
push
retf
shr
mov
mov
fisttp
inc
cdq
out
dec
jae
cld
fmul
ja
push
mov
or
push
in
(bad)
jns
xchg
inc
jns
mov
mov
mov
or
xchg
pop
fld
inc
or
mov
in
outs
cli
cld
jle
inc
ror
outs
fistp
ins
pop
ins
xor
les
in
lods
rcl
inc
arpl
dec
add
jg
imul
stos
jmp
add
cdq
mov
xchg
lock
repz
add
pop
clc
repz
sti
mov
lds
popf
adc
loop
inc
pop
ficomp
(bad)
cmp
inc
jb
in
add
mov
mov
push
jge
ins
ficomp
and
xor
dec
test
pop
xchg
inc
sub
sbb
movzx
lea
and
jmp
popf
(bad)
xchg
xchg
sti
mov
lea
sbb
les
ret
and
dec
daa
and
xor
xchg
loop
out
rcr
xchg
loope
xchg
adc
(bad)
bound
dec
sbb
imul
fnstcw
rcr
pusha
call
xchg
(bad)
mov
cdq
js
dec
dec
out
dec
dec
ins
or
add
or
xchg
jp
xchg
mov
sub
daa
int
std
retf
push
mov
out
xchg
shl
lds
cmp
jecxz
jno
hlt
xchg
aas
je
or
scas
mov
inc
arpl
xor
inc
add
adc
nop
sbb
push
pop
push
sbb
push
mov
pop
mov
add
lods
push
pop
adc
fmulp
jae
daa
xchg
or
mov
jmp
stc
inc
rol
xor
inc
mov
xchg
mov
int
mov
and
pop
retf
mov
mov
cld
(bad)
and
or
dec
enter
ret
lds
and
psadbw
or
ins
jge
ret
mov
inc
push
push
xchg
mov
or
lods
or
dec
inc
xchg
rol
lods
outs
sbb
repnz
in
ror
sub
mov
pop
sbb
sbb
clc
mov
iret
mov
xchg
ds
and
sub
inc
jo
loopne
fwait
loope
jle
lds
movs
data16
inc
jo
ins
and
std
int
and
rol
jae
fnstenv
aad
sub
fmul
jo
cmp
mov
stos
mov
sar
fs
out
dec
jo
lock
lock
cmc
clc
push
and
nop
sti
(bad)
popf
cmps
sbb
lods
out
adc
inc
or
inc
cmps
inc
inc
push
lahf
call
adc
and
pop
push
inc
int
(bad)
call
xchg
mov
loope
jb
xor
sub
mov
cmp
cmp
inc
ds
cmp
fucom
mov
push
imul
mov
gs
stos
je
pop
xor
imul
imul
jno
(bad)
sar
jno
in
ds
outs
pop
scas
scas
push
xlat
mov
push
cmps
out
shr
push
xchg
and
shl
or
mov
cmc
mov
xor
add
fs
xor
mov
cmp
ss
ror
xor
push
mov
push
test
imul
mov
mov
test
mov
stos
jle
mov
add
test
pop
jns
repz
dec
vpmaxub
xchg
add
adc
pushf
add
fwait
int
push
(bad)
mov
cmp
inc
sbb
ja
mov
adc
mov
retf
popa
movs
adc
xor
pusha
cli
loope
cmp
mov
cmps
xchg
xlat
repz
mov
push
ss
xchg
cmp
mov
fild
rcl
xchg
leave
jge
mov
mov
jo
push
dec
push
sbb
sbb
mov
xchg
xchg
jmp
add
fcomp
push
push
add
sub
dec
adc
nop
or
sub
xor
jae
jmp
aam
arpl
daa
lds
mov
xchg
std
sbb
and
adc
adc
xchg
inc
mov
call
xor
scas
xchg
adc
mov
(bad)
mov
ret
sub
sbb
inc
inc
pop
xchg
xchg
fsubr
int
push
rcr
xor
add
sbb
jmp
cli
mov
sbb
pusha
jmp
jne
sbb
mov
ss
ins
dec
dec
push
jne
sub
lea
adc
mov
pop
loop
and
xchg
or
popf
(bad)
adc
int
mov
aad
inc
and
outs
fsubp
adc
dec
xlat
xchg
test
cwde
inc
test
jp
sub
ins
fidiv
dec
cmp
cmps
xchg
aad
mov
int3
ins
shl
data16
jae
pop
fidivr
cmp
sub
ret
jno
fnstsw
sub
push
sbb
inc
fcmovnu
out
add
cwde
fimul
sbb
pop
(bad)
pop
push
hlt
xlat
mov
mov
dec
lods
pop
(bad)
xchg
cmp
popa
mov
fistp
out
ffreep
xor
adc
pop
inc
stos
into
into
and
inc
shl
mov
xor
lods
nop
inc
rcr
into
cmp
push
loop
cmp
mov
imul
add
ficomp
retf
mov
mov
sbb
adc
popf
mov
push
ins
pop
mov
dec
cmp
movs
sub
dec
ror
cmp
sub
fistp
mov
pop
mov
pop
popf
xchg
das
lods
outs
jns
cmp
mov
movs
and
dec
and
mov
dec
jae
out
inc
ja
pop
ss
dec
add
inc
clc
mov
adc
xor
(bad)
jmp
jmp
lahf
in
imul
dec
xor
jmp
push
js
add
enter
in
shl
lea
or
dec
and
push
lods
(bad)
sub
loopne
cmc
test
out
js
mov
scas
(bad)
pop
jg
fisubr
jmp
add
mov
test
daa
mov
hlt
pop
push
xchg
cmp
aas
cmp
jmp
jno
add
ss
cld
ror
cld
mov
imul
push
add
sub
cwde
in
sbb
add
cmc
rcl
cmps
(bad)
sub
add
mov
lods
leave
fistp
mov
not
inc
xlat
xchg
pop
retf
pop
inc
es
gs
pop
sbb
test
xor
test
loopne
jns
mov
cmp
pusha
loope
call
pop
loopne
add
scas
movs
pop
fiadd
dec
sub
mov
pop
lock
mov
stos
sbb
retf
pop
retf
push
add
dec
mov
push
inc
jl
jno
push
jmp
inc
mov
pop
sar
and
xchg
inc
sub
push
xchg
test
and
or
ror
cmp
stos
sub
add
out
nop
jns
bswap
cmp
pop
mov
test
call
popf
jnp
or
out
push
sbb
loopne
in
retf
jecxz
xchg
ror
leave
inc
mov
stos
mov
test
inc
shl
cmp
adc
mov
fwait
mov
push
scas
(bad)
daa
stos
mov
push
sbb
jmp
mov
mov
bnd
les
(bad)
rcr
in
sub
mov
sahf
and
sub
loopne
mov
inc
out
movs
sub
(bad)
fiadd
pop
sbb
leave
xchg
sbb
mov
fild
pop
cmp
dec
and
xchg
jo
mov
sub
cdq
repz
aam
sbb
jns
pop
push
xchg
adc
or
scas
stos
loop
ffree
daa
add
imul
movs
adc
in
inc
and
pusha
jae
idiv
mov
test
jbe
and
addr16
in
popf
nop
adc
add
xchg
add
mov
rcr
adc
sar
push
sbb
les
fild
into
cwde
jle
int
jnp
pop
fwait
leave
and
cmps
adc
rcr
mov
push
mov
pop
hlt
loopne
dec
push
mov
xchg
fwait
mov
icebp
pusha
cmp
addr16
lods
loopne
inc
clc
jecxz
sub
in
inc
xor
(bad)
mov
(bad)
jg
adc
fdivr
ins
test
sub
jle
jae
jbe
inc
inc
pop
or
loop
cdq
and
jecxz
mov
push
add
add
adc
popa
or
mov
cs
leave
(bad)
in
dec
and
push
or
sbb
sti
push
inc
(bad)
cmp
mov
not
push
xchg
sub
scas
xchg
jge
add
jnp
push
sub
fistp
outs
or
or
fs
nop
cli
mov
mov
xor
sub
sub
xor
icebp
mov
sub
mov
pop
and
pop
jb
int3
add
in
sbb
add
jbe
loop
rcl
rol
fidivr
mov
mov
sbb
dec
int3
repz
jne
mov
ds
sub
fsub
shl
js
outs
inc
push
mov
mov
dec
pusha
imul
xchg
je
sahf
dec
in
add
push
stos
vpunpckhwd
add
xchg
inc
mov
xchg
add
pushf
ss
dec
rol
out
jmp
and
lahf
or
fld
pop
test
lahf
hlt
pop
pop
and
push
mov
jle
inc
mov
fdivr
inc
mov
mov
es
add
xor
sar
retf
push
stc
or
push
in
inc
add
imul
icebp
rcl
loope
daa
not
(bad)
pusha
arpl
push
xchg
addr16
loope
fs
dec
xchg
cs
popf
psrlq
hlt
ss
in
adc
aas
(bad)
in
ins
or
pop
sub
add
lahf
cmps
(bad)
xchg
lods
js
movs
div
push
loopne
cmp
mov
mov
fucomp
add
cmp
sub
sbb
jb
es
xor
mov
mov
inc
cmp
sbb
js
pop
arpl
inc
out
aas
enter
pop
in
ins
or
out
fstp
pop
adc
mov
sub
adc
mov
xor
bound
(bad)
ja
shr
pop
inc
xor
lea
or
add
loope
jmp
mov
or
mov
cmc
sbb
dec
mov
lock
icebp
mov
arpl
adc
push
ror
xor
stos
fdivr
sbb
push
lods
and
push
jg
ds
inc
add
int3
fmul
shl
aas
shr
daa
cld
sbb
jmp
or
fimul
xchg
push
xlat
sub
out
loope
inc
adc
test
and
or
add
jo
das
add
and
addr16
cmc
cmps
sub
add
dec
adc
movs
mov
inc
add
cld
fstp
mov
cdq
shl
adc
or
test
je
jbe
inc
jp
cmps
sub
scas
sahf
inc
push
or
push
lea
ret
push
or
cwde
mov
fimul
(bad)
mov
popf
icebp
cmp
lock
xchg
mov
or
sbb
xchg
cmp
popa
shl
movs
inc
js
or
int
addr16
stc
stc
xor
fisttp
push
mov
jmp
test
inc
mov
or
jne
ret
fnstcw
inc
and
iret
clc
inc
aas
clc
ins
and
add
arpl
loop
not
jo
cmp
and
jne
or
push
dec
add
std
stc
repnz
mov
ret
inc
(bad)
mov
dec
loope
dec
imul
call
lds
outs
cdq
(bad)
call
xor
sub
push
scas
sbb
retf
xchg
stos
pop
fstp
mov
pop
data16
mov
and
push
lods
ret
jns
lea
lods
pusha
pop
xchg
bound
cmp
mov
ins
xchg
xchg
pop
sbb
mov
pop
add
rcl
sahf
imul
push
push
xchg
push
jge
js
shl
clc
(bad)
inc
push
jg
cmp
nop
inc
test
repz
xor
outs
pushf
mov
loope
outs
repnz
in
stc
pop
sub
xchg
js
jle
std
push
mov
push
xchg
jmp
(bad)
(bad)
jmp
mov
mov
fistp
movs
add
adc
add
stc
xchg
jnp
add
adc
push
cmp
in
xor
push
pop
hlt
repnz
dec
fs
ja
rcr
fcmovbe
or
int
out
mov
outs
pop
mov
sbb
out
push
fwait
fwait
adc
lods
mov
inc
xor
dec
xchg
or
and
js
push
jno
out
sbb
ficom
mov
sbb
(bad)
std
mov
jmp
in
mov
xchg
fdivr
cdq
outs
stc
mov
loope
push
test
ret
cmovbe
je
in
push
sub
or
xchg
sbb
and
ret
or
and
mov
test
cmp
aam
mov
xor
dec
jp
push
mov
scas
fcom
mov
inc
ret
cld
push
inc
mov
enter
das
dec
mov
push
rcr
pop
loopne
jo
sbb
xor
adc
cmp
pop
movs
dec
aad
inc
in
out
jecxz
div
push
or
lods
cmc
stc
ret
repnz
loope
xchg
jno
int3
mov
sub
shr
xchg
repz
push
cmp
ficom
addr16
and
push
or
cmp
push
jae
repz
sub
dec
ja
fmulp
or
movs
adc
out
dec
fidiv
xchg
sub
mov
rcl
jb
neg
pusha
and
out
test
inc
and
sub
popa
scas
rol
cmps
ins
jns
mov
test
inc
jmp
adc
jmp
cmp
lock
push
xlat
jnp
sub
xor
inc
adc
neg
outs
sbb
push
scas
push
cmp
enter
fmul
pop
scas
fndisi(8087
sar
xor
xchg
xchg
outs
(bad)
js
cmp
lods
pop
jge
loopne
ins
mov
and
test
pop
iret
add
call
fistp
sub
xchg
jmp
adc
push
aas
mov
in
shl
in
dec
imul
cmps
popf
neg
(bad)
adc
cld
aas
scas
repz
mov
push
jmp
mov
pop
hlt
fwait
xor
test
in
test
in
aad
mov
out
pop
push
sbb
fninit
mov
stc
sbb
inc
xchg
jp
and
add
adc
sbb
push
mov
call
mov
lods
ret
push
mov
mov
and
add
(bad)
shl
pop
sti
push
xchg
sub
or
jecxz
sti
push
sbb
mov
frstor
(bad)
fwait
addr16
jbe
ins
js
xor
(bad)
arpl
jp
push
addr16
mov
jo
cmp
aaa
aad
retf
scas
cs
repnz
sub
call
cmps
mov
mov
mov
aaa
jmp
inc
xor
mov
push
push
ror
xchg
repnz
shr
dec
mov
mov
jge
jmp
in
retf
lahf
or
pop
or
mov
pop
push
sub
or
test
cdq
daa
or
sbb
push
ret
inc
stc
xor
ret
push
fld
sub
(bad)
xor
out
out
(bad)
adc
addr16
stos
scas
pop
fdivp
add
js
xor
subps
mov
jecxz
mov
out
fwait
adc
push
ds
mov
jne
in
adc
cs
cmp
inc
ds
xchg
dec
adc
sbb
cs
push
fld
push
retf
add
add
add
test
lock
mov
cld
in
cmp
inc
loopne
mov
sub
xlat
arpl
adc
call
pop
inc
push
xor
mov
jno
or
push
pop
push
mov
fistp
sub
scas
dec
adc
stos
dec
mov
and
jbe
(bad)
mov
or
leave
fild
cli
inc
dec
fdivr
retf
jp
sbb
mov
gs
cmps
scas
in
mov
add
test
scas
imul
add
fisubr
scas
ins
je
xchg
shl
pusha
rcl
(bad)
sahf
xlat
idiv
clc
(bad)
in
repz
adc
(bad)
dec
adc
pop
subps
pop
pop
and
or
mov
adc
mov
push
int
push
das
jo
sbb
ret
jecxz
add
jg
mov
inc
out
in
call
push
sbb
retf
xchg
out
popf
test
sbb
call
lock
fcomp
inc
mov
test
mov
sbb
dec
(bad)
addr16
xchg
in
mov
sti
push
sbb
rcl
jmp
int
scas
push
mov
pop
rol
fldenv
mov
stc
lahf
xor
js
aaa
jl
fcom
mov
sar
les
and
popf
out
jg
popa
push
mov
pop
loop
leave
(bad)
clc
mov
sub
add
mov
inc
repz
add
push
(bad)
jnp
clc
scas
imul
imul
cs
cmps
js
aaa
test
and
int3
pop
sub
ss
ins
xlat
nop
add
enter
js
pop
pushf
lods
(bad)
jno
add
mov
xor
pop
push
jnp
adc
sub
xlat
hlt
cld
xchg
mov
jo
ja
(bad)
out
fwait
add
out
int3
jb
aaa
aad
pop
ficom
xor
enter
sar
sbb
adc
push
sbb
pop
es
fmulp
dec
es
jmp
(bad)
dec
mov
push
in
(bad)
push
aas
ret
ret
add
cli
mov
fmul
stos
test
ror
clc
iret
movs
push
pop
adc
bound
pushf
rcl
push
or
xchg
push
dec
cmp
mov
call
in
sub
inc
aam
jb
xchg
xchg
add
sbb
enter
leave
cmp
xor
in
sbb
outs
idiv
daa
ja
into
pop
mov
mov
data16
int3
and
adc
fisttp
nop
lea
pop
xchg
sbb
adc
mov
ret
rol
fsub
(bad)
pop
dec
rol
lods
or
mov
push
and
cmp
aas
loop
rcr
mov
call
xchg
(bad)
aas
das
push
sub
xchg
cld
pop
jp
cmp
cwde
xchg
les
adc
ffree
xor
mov
pusha
sub
jg
dec
stos
adc
aaa
or
fnstenv
pop
rol
inc
xchg
cdq
dec
sub
out
shr
rcr
and
or
mov
push
cmps
sbb
jp
les
inc
mov
scas
xor
mov
add
in
cmp
xor
fs
push
int3
mov
shl
cmp
sbb
sbb
js
ins
push
dec
mov
push
jmp
dec
lods
sub
mov
xchg
inc
aad
jl
xor
repz
mov
mov
lea
xchg
arpl
(bad)
push
cdq
or
mov
ret
out
cdq
sbb
test
ret
or
push
dec
cwde
mov
stos
outs
pop
bound
pop
bound
dec
adc
push
outs
and
pop
xor
scas
ins
mov
call
and
test
rcr
and
cmc
movs
adc
(bad)
int3
shrd
pushf
mov
popf
sub
enter
mov
xor
gs
or
pop
lods
push
out
add
js
cmp
jnp
push
popa
jle
jns
push
mov
mov
mov
dec
or
(bad)
outs
not
and
pop
pop
add
pop
movs
xchg
dec
xor
push
dec
dec
and
idiv
std
mov
popa
into
outs
jmp
sbb
and
xor
adc
adc
mov
in
pusha
cmp
fsubr
xor
imul
popf
aaa
pop
cmp
xchg
loope
mov
jo
add
xor
mov
and
je
mov
fcmovnb
imul
add
cmps
pop
ss
sbb
dec
add
clc
int
mul
fsubr
and
es
lds
lahf
mov
inc
mov
push
gs
and
into
jb
aam
loop
stos
je
aad
push
mov
cmps
cmovne
retf
mov
or
dec
mov
mov
iret
fwait
xor
push
sub
jb
xor
ins
sbb
pop
adc
fwait
inc
mov
inc
add
jge
fwait
pop
lods
test
xor
imul
mov
retf
stc
sbb
sbb
out
mov
(bad)
sbb
dec
enter
in
addr16
sub
test
int3
shr
std
xor
add
cmp
push
jmp
fild
mov
and
dec
addr16
cmps
or
hlt
pop
fnstsw
fisub
mov
mov
cdq
inc
jp
dec
jp
adc
ds
push
inc
jge
mov
add
cli
mov
aaa
mov
add
add
adc
xor
sbb
and
push
les
std
rol
mov
or
add
int
add
xor
jmp
push
rcl
(bad)
shl
lods
inc
arpl
shl
cdq
scas
xor
aaa
aad
dec
pop
(bad)
(bad)
jbe
push
out
mov
and
mov
ret
pop
mov
inc
cmp
lahf
loope
or
test
adc
add
sub
loope
dec
les
xchg
sbb
cmps
outs
cmp
aad
fabs
test
fs
add
mov
leave
cmp
lahf
aam
mov
xchg
pop
lods
ret
sub
shl
jmp
fisttp
lods
add
retf
fistp
(bad)
sbb
adc
lock
jns
mov
or
push
dec
loop
jns
popf
shr
inc
xchg
cs
add
jbe
lods
dec
jl
fbld
dec
repnz
out
dec
ja
push
stc
inc
stos
adc
push
cdq
in
sub
dec
int3
sti
xchg
cmc
cwde
pop
sub
inc
mov
fnstenv
adc
sbb
sub
int3
(bad)
sbb
xchg
test
nop
pop
int
pop
jmp
mov
mov
imul
loope
pusha
mov
out
arpl
cmp
outs
les
fnstenv
call
inc
dec
cmp
loop
add
adc
inc
es
pushf
lods
xor
jl
jmp
mov
ret
and
mov
inc
loop
shl
push
je
jp
xchg
adc
retf
loope
fcom
fimul
cmp
cdq
cwde
nop
in
mov
mov
scas
mov
cdq
test
inc
mov
scas
add
or
out
fdiv
sub
jp
sahf
int
neg
into
cmp
rsqrtps
fidivr
mov
and
adc
xchg
and
shr
in
clc
jmp
popf
and
cmp
sub
es
and
not
or
loop
cli
loopne
mov
xor
pop
ret
ins
idiv
nop
imul
jecxz
fbld
cmp
test
jb
push
das
and
clc
outs
push
inc
adc
push
push
jmp
push
push
add
mov
sub
es
daa
in
dec
int
inc
xor
popf
sub
mov
cmps
idiv
adc
cmp
push
adc
movs
repnz
push
int3
dec
xchg
dec
mov
mov
into
mov
aam
icebp
imul
push
mov
adc
ins
retf
cmp
fwait
adc
stc
and
div
or
cs
loop
mov
push
ins
sbb
sti
push
xor
outs
into
push
xor
cmp
xchg
stos
ins
sub
adc
or
add
xor
es
add
test
jg
jbe
and
jo
add
cmps
jg
pop
sub
ret
sub
xor
inc
mov
into
js
push
mov
fadd
shl
mov
cmp
push
ficomp
sub
jnp
push
in
outs
push
scas
inc
dec
adc
add
jl
rep
xchg
gs
dec
pop
je
lock
jecxz
sub
shl
arpl
int3
cmc
mov
ins
aam
cmps
inc
rol
jp
cmp
mov
push
(bad)
jae
enter
out
test
(bad)
push
cdq
xor
dec
ss
inc
test
shl
sbb
adc
sub
inc
cmps
fmul
mov
leave
fwait
sub
inc
mov
into
scas
lock
int3
bound
jne
add
hlt
xchg
lock
sbb
jle
out
jp
in
clc
jp
fld
nop
(bad)
add
fwait
xor
inc
xor
xor
into
pop
mov
mov
mov
lock
push
and
cs
stos
add
jmp
pop
mov
mov
mov
mov
in
mov
mov
mov
js
cmp
aas
or
xchg
movs
aas
mov
loop
mov
cwde
dec
mov
out
sbb
jae
addr16
les
movs
fisubr
cld
or
sbb
addr16
sbb
cmp
mov
cmc
sbb
mov
bound
ror
jae
loop
inc
mov
fwait
pop
out
into
sar
push
inc
xor
test
cmp
dec
scas
adc
(bad)
mov
neg
or
inc
cmp
fist
jns
xor
lahf
in
dec
shl
push
mov
icebp
sub
push
idiv
call
lods
pusha
mov
push
and
cmc
stc
test
test
xchg
adc
rcl
push
xchg
mov
push
xchg
sub
jg
das
add
ins
push
and
mov
movs
mov
pop
test
arpl
movs
adc
fst
imul
ins
inc
xor
in
in
jge
popa
sub
xor
xor
lods
pusha
aad
pop
sub
mov
mov
into
arpl
mov
xor
mov
dec
xor
fcom
adc
pop
aaa
dec
xor
mov
or
jle
and
int3
and
pop
jle
add
dec
idiv
jmp
push
scas
daa
adc
push
or
xlat
(bad)
loopne
ins
(bad)
and
sub
or
mov
cmp
int3
dec
lds
mov
mov
add
pop
(bad)
mov
xlat
gs
sbb
push
fisubr
stc
xor
sbb
xor
xchg
or
ins
outs
cmps
mov
xchg
or
retf
out
mov
xchg
cmps
push
ins
(bad)
loope
rep
(bad)
xlat
mov
test
test
sub
mov
into
mov
movs
popa
outs
dec
dec
shr
sbb
xor
fadd
retf
ss
xchg
(bad)
fdivr
pop
icebp
(bad)
push
loopne
aas
mov
or
cmps
inc
inc
mov
add
ins
jmp
bound
xor
push
(bad)
and
outs
repz
push
inc
mov
cmp
imul
push
sub
add
je
sbb
cmps
xor
loop
repnz
retf
repnz
inc
in
repz
inc
in
inc
sub
xchg
mov
aaa
stos
addr16
push
jg
jae
stc
pop
div
xor
fimul
inc
cli
adc
fdiv
dec
loope
int3
sbb
aaa
sahf
mov
(bad)
sti
xchg
ja
push
pop
outs
xor
loopne
sbb
xchg
lds
pop
mov
dec
into
scas
push
push
repnz
mov
popa
cmp
cwde
add
(bad)
retf
sub
adc
enter
push
fsubr
push
idiv
jmp
cdq
jmp
or
sbb
aad
call
add
retf
mov
and
sbb
jg
sbb
sbb
cmp
and
ret
mov
test
mov
mov
pop
jle
mov
stos
or
outs
gs
sub
les
xchg
outs
mov
dec
or
push
lock
fistp
xor
mov
xchg
cwde
rcl
in
aaa
add
jecxz
cmp
jg
fstp
dec
in
imul
inc
into
sub
cmp
jmp
loope
shl
pop
loopne
push
in
and
aam
xor
leave
icebp
push
shl
push
(bad)
lahf
aad
cmp
test
push
jp
or
mov
adc
mov
inc
lods
mov
pushf
outs
xchg
xor
daa
jmp
loopne
cmp
push
repz
xor
xlat
icebp
inc
ss
in
cld
or
inc
rcr
mov
stos
fisubr
push
xor
popf
test
cmovne
loop
lahf
cmps
or
or
xor
daa
sbb
mov
fst
mov
xor
mov
arpl
js
fcomp
sub
scas
test
addr16
pop
hlt
inc
retf
arpl
and
dec
popf
jne
cli
sbb
imul
outs
(bad)
push
movs
jo
scas
loopne
adc
xchg
or
mov
loop
sbb
jmp
xor
mov
mov
xor
xor
or
mov
cli
mov
jo
mul
enter
and
sbb
lock
pushf
mov
mov
imul
es
stos
pop
mov
mov
addr16
push
loopne
(bad)
xchg
xor
push
inc
sub
jp
dec
std
mov
xchg
mov
jnp
mov
(bad)
xlat
sbb
retf
dec
xchg
idiv
les
dec
out
ret
pushf
mov
(bad)
cld
mov
leave
leave
inc
jp
sub
dec
loopne
pmaxsw
push
gs
cld
inc
pushf
bound
xor
(bad)
jns
pop
mov
xchg
stos
movs
mov
outs
sbb
(bad)
mov
pop
dec
mov
sbb
sub
scas
js
push
int
cmps
and
xor
adc
jno
pop
mov
daa
push
lods
add
mov
enter
xchg
cmc
aad
or
into
pop
and
adc
inc
adc
les
pop
cmp
sbb
mov
ja
xchg
or
aam
add
sub
push
pop
or
sti
cdq
xchg
adc
and
std
stos
stos
retf
or
(bad)
daa
xchg
pop
or
sub
mov
and
fnsave
stos
icebp
jg
mov
jecxz
add
vpaddw
clc
jae
not
or
mov
inc
mov
(bad)
lea
ds
jno
mov
test
xchg
xor
inc
inc
(bad)
sar
cwde
xchg
aaa
ficomp
cmps
(bad)
enter
sbb
sbb
jmp
aaa
aaa
bound
push
in
lods
jle
jmp
jns
lea
bound
inc
daa
out
loope
sbb
sbb
in
add
xor
outs
cmp
inc
ins
jle
pop
mov
sti
push
(bad)
in
inc
add
fcomp
scas
outs
xlat
push
fild
mov
not
jmp
add
shl
adc
dec
mov
in
imul
sti
ror
ja
es
fadd
fistp
mov
jl
repz
clc
hlt
jge
pop
test
shl
xchg
xor
data16
sbb
sbb
mov
in
cmp
imul
adc
cli
das
lods
mov
xchg
jo
sahf
push
inc
jb
sub
sub
scas
retf
into
adc
in
inc
or
mov
(bad)
xor
sahf
add
mov
lea
fisub
(bad)
std
sbb
lea
arpl
ud0
add
pop
aad
add
cmp
ret
push
scas
dec
xchg
fsub
mov
xchg
sub
pop
leave
jge
mov
mov
sbb
fsubr
mov
add
adc
jbe
fwait
aaa
mov
xlat
shl
es
jnp
mov
cdq
xchg
retf
jnp
call
pop
inc
jae
and
int
mov
jl
sahf
add
sub
ret
(bad)
mov
push
loopne
mov
mov
hlt
sbb
and
iret
pop
gs
pop
cmc
bound
mov
inc
xor
jne
and
push
xchg
std
lods
in
imul
xchg
not
rcr
add
xchg
pop
mov
jae
mov
test
dec
jbe
jo
dec
(bad)
push
int3
inc
fcom
ret
pushf
push
(bad)
ja
inc
add
call
or
dec
push
inc
in
mov
mov
jne
add
dec
adc
or
test
inc
jle
xchg
pop
or
sbb
adc
inc
dec
adc
fcom
ja
mov
and
mov
mov
out
mov
jmp
mov
je
nop
jae
jbe
repnz
and
xor
mov
lods
inc
xor
sub
rol
mov
sbb
cmps
adc
xor
sbb
add
arpl
stc
mov
mov
xor
and
repz
mov
xchg
stos
pop
pop
popa
mov
sbb
outs
bound
xor
xor
cmp
leave
(bad)
lods
mov
pusha
int3
cdq
sahf
(bad)
push
scas
ror
outs
inc
scas
(bad)
jl
jae
or
je
rcr
icebp
xchg
mov
push
mov
test
adc
add
jle
xlat
nop
mov
(bad)
test
imul
mov
pop
into
cmps
mov
dec
sahf
inc
push
arpl
pushf
mov
dec
add
and
dec
jmp
mov
lock
out
mov
fwait
mov
inc
stc
(bad)
(bad)
popf
push
retf
sub
xchg
xchg
lea
loop
inc
cmps
aas
xchg
bound
stos
scas
sub
(bad)
dec
jnp
xor
jmp
mov
push
sub
mov
clc
sar
lock
in
test
or
ja
hlt
dec
xchg
(bad)
daa
rol
dec
inc
lock
adc
retf
xchg
xor
add
pop
cmps
loope
rcl
inc
mov
mov
ja
dec
rcl
js
xor
enter
jns
add
jne
or
push
adc
test
cmp
xchg
mov
mov
cmps
stos
push
popf
jle
icebp
mov
(bad)
ss
lock
sub
(bad)
movs
pop
xchg
addr16
xchg
into
mov
rol
add
adc
xchg
mov
mov
xchg
into
jmp
fucomp
retf
cmp
pop
dec
push
fnsave
(bad)
sub
das
xchg
add
mov
call
inc
push
int3
pop
pop
xor
scas
fucom
mov
(bad)
leave
mov
fucomip
jge
and
ins
lea
add
xchg
mov
lock
sub
adc
xchg
repz
gs
fdivr
mov
jle
fmul
daa
fwait
xor
les
outs
lods
push
nop
cmpxchg
ja
xor
sbb
cmp
jnp
mov
clc
pop
rcr
push
mov
sub
(bad)
repnz
xchg
jno
jmp
ds
loopne
push
mov
imul
sub
int
xchg
popf
pop
loop
enter
test
sub
scas
and
daa
jnp
sbb
mov
mov
in
pop
mov
call
xchg
call
mov
jl
pop
movs
int
retf
int
call
(bad)
mov
dec
adc
sub
movs
fndisi(8087
pop
arpl
es
dec
push
mov
dec
mov
ja
mov
pusha
sub
jns
jmp
mov
inc
jg
(bad)
in
inc
test
xor
push
cdq
mov
sub
adc
sbb
rcl
sbb
bnd
adc
loope
ror
jns
es
aam
xchg
sti
or
xlat
sbb
xor
xlat
sub
sub
or
cmps
fwait
loope
cmps
lds
std
mov
jnp
push
(bad)
ret
cmp
test
scas
rcl
and
(bad)
adc
fcomi
(bad)
xchg
jge
outs
fsubr
(bad)
retf
sub
pop
sahf
jne
push
xor
sbb
int3
xchg
gs
stos
jge
lock
outs
adc
aad
xchg
(bad)
(bad)
jmp
(bad)
push
pop
fst
sbb
int
aam
scas
sub
push
jle
shl
shr
push
or
sti
mov
mov
or
iret
adc
sbb
mov
iret
out
inc
(bad)
cmp
(bad)
out
movs
xchg
xor
jl
adc
mov
xor
int3
jge
and
cdq
dec
jp
ds
push
xchg
imul
dec
adc
mov
sbb
or
call
dec
and
(bad)
sbb
outs
cmp
aaa
daa
pusha
and
sub
mov
shl
js
mov
jge
jmp
std
inc
pop
xlat
inc
pop
cwde
pop
fistp
sbb
xchg
push
mov
push
mul
mov
sbb
mov
xor
fimul
mov
mov
(bad)
add
movs
out
dec
mov
in
pop
inc
xor
popa
vpackssdw
cmp
popa
popf
mov
(bad)
(bad)
daa
mov
inc
xor
inc
cmps
or
std
xor
pop
mov
sub
div
xlat
or
lahf
sbb
cwde
aas
mov
inc
add
not
or
mov
cmp
rcl
ror
cmc
ds
xor
out
add
mov
add
jmp
dec
jle
pop
xor
cmp
ins
imul
loop
cmc
stc
std
mov
adc
jmp
mov
ins
in
adc
push
scas
xor
dec
imul
xor
jno
dec
jp
(bad)
dec
nop
mov
call
adc
fisubr
adc
sbb
sub
stos
jno
sub
and
cmp
push
retf
imul
sub
sbb
outs
iret
sar
inc
loope
movs
push
sbb
enter
adc
add
push
movs
test
inc
test
mov
cmps
sub
cwde
adc
loop
test
sub
sbb
out
dec
cmp
pop
pusha
add
cmp
f2xm1
pop
xchg
lahf
mov
inc
lods
imul
shl
shl
push
(bad)
jno
ins
cld
lock
std
jl
stc
in
sub
cs
push
cmp
pop
adc
inc
fisubr
test
jbe
xor
out
jnp
xchg
pop
retf
ins
imul
(bad)
jmp
cs
adc
adc
(bad)
ds
dec
lds
sbb
lods
fs
mov
jo
jmp
ret
ss
xchg
scas
dec
sbb
mov
ins
dec
stc
inc
xchg
ins
test
out
(bad)
stos
lds
in
dec
imul
int
(bad)
xor
outs
(bad)
pop
sub
outs
mov
repnz
sti
leave
repz
sbb
jmp
int3
and
aaa
mov
mov
mov
out
(bad)
arpl
cmp
jmp
std
fdiv
xor
mov
pop
adc
bound
cmp
fdiv
xchg
dec
xchg
(bad)
pushf
sub
cmps
mov
out
and
mov
adc
or
fistp
adc
jbe
push
imul
push
(bad)
mov
sahf
sub
xchg
cmc
outs
outs
push
stos
in
push
outs
gs
sti
repz
addr16
out
add
mov
pop
nop
shl
fs
fwait
retf
mov
sub
icebp
dec
xlat
adc
pop
in
jmp
jne
sbb
jmp
in
es
fisttp
in
aad
push
inc
push
test
mov
cmp
mov
mov
popf
cmps
pop
fdiv
aad
stos
and
sub
sbb
jmp
ins
mov
add
dec
xor
fimul
cmp
dec
jg
xor
dec
xchg
dec
and
xchg
icebp
call
fisub
and
push
fisubr
stos
les
xchg
mov
mov
add
nop
mov
pop
stos
out
lods
push
sub
dec
inc
cmps
pusha
sbb
xchg
inc
add
imul
test
add
dec
mov
and
push
cwde
mov
jno
push
add
loop
sub
loopne
push
cmp
mov
push
sub
das
jns
div
push
aaa
pop
cli
jmp
and
xchg
fisub
mov
dec
mov
inc
jmp
fs
je
adc
call
sahf
cmp
fmul
xchg
sub
mov
nop
push
(bad)
test
loope
sbb
dec
je
lods
mov
loopne
pop
sbb
pop
jns
rcl
repnz
sub
cmp
cmps
outs
adc
out
jae
xchg
cli
mov
cli
xlat
cli
das
xchg
xor
pop
xor
mov
lds
retf
and
dec
shrd
mov
mov
mov
arpl
aad
mov
or
or
jl
iret
push
arpl
cmp
push
sub
(bad)
(bad)
out
adc
in
xchg
mov
imul
lock
mov
pop
js
sbb
or
aaa
test
scas
or
mov
add
or
cmps
sub
mov
xor
test
jno
add
xor
push
adc
fs
cs
dec
or
push
mov
js
mov
fwait
sbb
stc
sbb
std
push
ret
leave
inc
mov
stos
test
dec
cmc
std
adc
loopne
pop
cdq
xchg
pop
jb
clc
push
adc
in
jmp
jmp
stos
xchg
out
loope
fs
jmp
fcom
jmp
dec
mov
(bad)
fld
popa
dec
ficom
or
enter
mov
call
mov
pop
popf
pop
jnp
repz
push
loop
sbb
xchg
cwde
(bad)
adc
jbe
inc
push
jae
fcomp
mov
imul
cmp
test
lahf
dec
jp
les
leave
adc
jns
ficom
jb
pop
push
inc
(bad)
stc
repnz
sbb
sub
push
shl
pop
xor
or
test
cmps
(bad)
cs
xor
popa
push
pop
sar
or
mov
clc
lahf
xchg
and
mov
adc
jne
mov
jae
sub
mov
pop
(bad)
push
pop
add
fdivr
cmp
and
cmp
jle
retf
mov
adc
and
cli
aas
repnz
(bad)
pop
loop
lock
xchg
mov
inc
ret
test
mul
jmp
rcl
inc
movs
inc
das
pop
shl
stos
(bad)
jnp
scas
add
test
retf
movs
xor
sub
lds
mov
mov
mov
mov
pop
or
inc
imul
nop
cmp
jnp
fidivr
js
sbb
iret
sub
sbb
test
mov
dec
xor
mov
stc
leave
adc
push
xchg
loop
es
cmp
sti
scas
xchg
in
jmp
add
mov
fiadd
xor
fsincos
gs
push
pop
mov
mov
add
dec
dec
cmps
mov
cmp
cmp
test
push
loope
mov
(bad)
das
inc
pop
mov
dec
dec
mov
jns
cdq
sub
push
fadd
cli
sbb
pushf
imul
loopne
push
cmp
and
or
mov
push
daa
adc
mov
and
ret
imul
shl
jmp
sbb
cmc
mov
xchg
and
mov
cmp
cli
mov
icebp
cmps
jle
adc
fisttp
dec
retf
movs
div
sahf
add
sar
add
(bad)
lock
inc
das
and
pop
popa
add
iret
fimul
and
imul
lahf
aam
iret
xor
sbb
leave
mov
sub
retf
(bad)
mov
or
loope
jmp
dec
ja
and
lea
dec
cld
fucomp
call
xchg
outs
mov
mov
fadd
stc
pop
xchg
xchg
rcl
add
mov
or
push
inc
cmps
stos
std
aaa
jae
dec
add
mov
retf
mov
pop
or
xor
arpl
or
retf
iret
(bad)
loopne
cmp
mov
add
or
(bad)
and
dec
ds
out
aam
jge
ficomp
xchg
out
add
jl
pop
jl
shl
lea
push
jle
pushaw
sbb
and
xlat
mov
repz
iret
dec
repz
pop
scas
xchg
mov
jae
xchg
ss
xlat
dec
push
inc
xchg
inc
loope
mov
das
jge
sub
repz
xchg
dec
test
idiv
pushf
outs
push
inc
addr16
inc
xor
cli
pop
xchg
stos
mov
(bad)
jbe
pop
(bad)
jle
cmp
mov
add
stos
mov
inc
adc
shl
ret
out
dec
out
shl
pop
fst
mov
idiv
inc
xchg
(bad)
jne
push
(bad)
jecxz
sbb
add
lods
cdq
xor
jnp
cmp
pop
fst
and
add
xor
cmp
test
pop
stos
les
pushf
jmp
pop
cdq
dec
adc
add
mov
out
stc
push
push
inc
sub
mov
add
adc
xor
je
or
mov
dec
sub
xor
aas
jo
mov
sbb
mov
fisub
xchg
ret
sub
mov
ja
std
icebp
fild
mov
(bad)
arpl
sub
pushf
and
pop
pop
outs
fs
loope
and
or
fimul
stos
fldcw
sub
call
add
icebp
and
xlat
pop
push
iret
mov
push
and
sbb
xchg
data16
loop
mov
dec
icebp
ror
out
nop
dec
mov
(bad)
(bad)
in
lods
mov
(bad)
sub
push
push
clc
mov
xchg
sti
pushf
jp
ja
mov
mov
or
push
pop
xchg
hlt
pop
xor
pop
add
daa
dec
in
sbb
xchg
cmp
cmp
icebp
cld
pop
aad
rcl
inc
clc
int3
aam
push
mov
push
daa
leave
push
mov
lds
xor
jle
sar
mov
cmc
push
fst
sbb
test
int3
shr
(bad)
or
and
imul
(bad)
mov
popa
(bad)
or
(bad)
loop
push
jo
cmp
movs
adc
movs
imul
retf
or
xchg
xor
adc
stc
sbb
enter
adc
jl
into
xor
mov
dec
or
cmps
cwde
jmp
mov
lock
fucomp
mov
dec
jnp
jo
xchg
loop
sbb
push
inc
out
data16
xor
push
add
mov
test
push
adc
jp
daa
aad
lahf
pop
faddp
xchg
sbb
sub
jno
push
mov
aam
outs
pop
pushf
repnz
js
dec
or
mov
repz
(bad)
jp
jp
cmp
dec
sub
inc
jmp
cmp
icebp
jge
out
adc
jge
(bad)
sbb
push
jb
push
es
or
mov
mov
es
in
or
mov
loopne
pop
pop
or
inc
push
fbld
inc
jae
lods
sar
and
das
cmp
jno
pop
test
ja
sub
or
not
add
mov
outs
push
jae
popf
jb
in
test
fnstcw
pusha
jge
dec
mov
outs
jmp
jnp
int3
mov
loop
ins
pop
retf
sbb
js
nop
pop
adc
aaa
mov
ds
add
cwde
pop
add
ret
mov
retf
daa
popa
call
pop
aaa
ins
add
sub
in
ss
mov
mov
push
rol
xor
jmp
push
stos
jg
push
or
test
mov
fmul
or
inc
sbb
jmp
daa
test
enter
test
push
push
pop
outs
jnp
and
retf
inc
pmaddwd
lock
lods
stos
sub
sbb
scas
push
pop
iret
dec
jns
sbb
lods
sar
clc
inc
cmps
in
xchg
enter
arpl
out
stos
cli
pop
ret
mov
enter
and
adc
aaa
xchg
sbb
mov
cmp
fcmovu
mov
hlt
mul
(bad)
add
push
xchg
pop
push
push
cmps
gs
sub
xchg
jge
sub
aam
add
iret
dec
push
dec
fstp
fsubr
push
inc
dec
ja
and
stc
scas
jge
bnd
int3
pop
and
aad
mov
cmps
dec
retf
(bad)
cld
jb
(bad)
stos
push
and
loope
test
jecxz
fwait
dec
fist
ror
call
mov
sbb
jl
loop
call
fst
and
add
sbb
xchg
jge
neg
push
daa
pop
dec
daa
out
fbstp
inc
call
xchg
mov
pop
cmc
mov
clc
push
xor
fnstenv
(bad)
shr
cdq
fistp
ret
or
push
mov
gs
ins
mov
fwait
and
cmp
in
push
aad
mov
xchg
pop
data16
or
les
hlt
sar
sbb
mov
js
ror
xchg
retf
(bad)
push
sahf
(bad)
popa
imul
xchg
inc
mov
cmp
retf
je
cli
sub
xor
xor
or
sbb
dec
ret
call
or
jp
push
(bad)
sub
ins
add
push
and
dec
int
es
jp
sti
mov
enter
es
jge
mov
and
xchg
and
mov
int
mov
dec
ins
mov
fst
sahf
sub
fisub
push
jmp
int
into
ret
loopne
(bad)
mov
imul
ja
push
xor
cmp
cwde
cld
scas
push
or
push
inc
shl
addr16
ja
xor
lock
ja
cmp
mov
out
fs
or
or
cmps
lahf
ins
ins
adc
sbb
mov
push
cld
mov
out
add
test
cmps
jae
je
xor
jne
retf
pop
stos
mov
imul
xor
pop
scas
stc
mov
test
sti
push
inc
xor
mov
inc
icebp
loop
add
stc
inc
dec
push
loope
dec
mov
push
mov
push
add
stos
inc
leave
cmp
xor
or
(bad)
xor
dec
pop
ret
or
push
push
push
push
les
inc
adc
aad
or
out
push
ret
cwde
and
inc
iret
scas
sbb
ret
jne
push
aas
test
mov
iret
into
ja
pop
push
inc
mov
mov
inc
adc
mov
inc
int
daa
ins
jb
mov
jbe
pop
aad
dec
push
sar
push
clc
bound
imul
daa
push
push
cs
inc
jns
pop
in
jp
xlat
test
jp
enter
test
add
outs
sbb
je
mov
mov
mov
sbb
cmps
dec
dec
js
dec
fsubp
mov
in
xchg
jle
into
test
fldcw
push
mov
cli
(bad)
int3
scas
sbb
mov
test
sub
repnz
push
add
push
test
inc
fbld
mov
mov
shl
ins
cmps
inc
jmp
push
int3
repz
mov
cmp
cmp
and
call
rcr
and
mov
fist
jae
nop
and
push
jl
bound
fidiv
add
pop
xor
pop
pop
and
hlt
ds
mov
push
xchg
nop
nop
push
jge
cdq
std
popf
mov
hlt
outs
popa
pop
(bad)
and
(bad)
imul
rcr
int3
xor
jl
xor
sub
aas
(bad)
js
test
xchg
int
hlt
test
int3
in
clc
pop
push
push
(bad)
xchg
xor
mov
xor
adc
mov
mov
jbe
aam
int3
pop
and
mov
jg
movs
out
jle
das
rcr
adc
rol
aaa
ja
cs
and
fwait
sbb
retf
sbb
jle
outs
inc
xor
dec
movs
mov
mov
sbb
xlat
addr16
ins
(bad)
jle
mov
lods
daa
(bad)
icebp
outs
mov
mov
gs
(bad)
sti
in
leave
lahf
xlat
jae
lahf
lds
in
clc
mov
add
mov
pop
movs
scas
cmp
xor
hlt
lahf
bound
(bad)
es
lea
imul
repz
add
push
mov
jmp
adc
int3
pushf
sbb
mov
shr
je
add
sbb
xchg
mov
lahf
data16
sar
ficom
inc
push
sbb
call
loop
add
dec
ficomp
mov
mov
repnz
adc
leave
pop
push
stc
jns
clc
pop
push
adc
leave
pushf
sbb
ret
pop
jno
into
adc
and
and
shl
push
sub
mov
adc
int3
cwde
inc
ficom
inc
mov
lods
(bad)
fcom
xchg
in
stc
push
pop
and
mov
shr
les
sub
xchg
push
jmp
push
stc
push
xlat
inc
add
or
mov
aam
ja
loop
imul
adc
mov
lods
mov
push
add
adc
cmp
inc
ret
ss
dec
mov
(bad)
int3
jbe
cdq
arpl
mov
cdq
repnz
(bad)
jg
mov
test
lds
daa
stc
push
jl
push
out
jno
stos
icebp
mov
mov
mov
inc
mov
int
in
push
cmp
lock
sahf
lods
jl
scas
or
push
es
fsubr
out
out
dec
loopne
ffreep
outs
mov
loopne
cdq
cmp
repz
dec
dec
cwde
ja
cmps
sub
ds
je
gs
rcl
inc
in
hlt
shl
in
je
jo
or
mov
int
movs
sti
and
or
aam
ds
and
sub
pop
add
add
jge
lock
sub
and
mov
dec
push
dec
mov
icebp
iret
movs
xor
inc
(bad)
sti
and
pop
imul
retfw
inc
jbe
cld
pop
mov
test
test
or
sahf
fmul
sub
sti
movs
push
imul
fstp
sub
dec
outs
or
out
adc
bound
cwde
out
push
ds
sbb
lods
popa
movs
jo
or
lods
adc
dec
push
fs
sbb
push
sub
mov
outs
sub
outs
movs
add
mov
popf
outs
ins
mov
sbb
mov
fidivr
in
(bad)
imul
or
cli
(bad)
test
pop
and
or
sar
pop
mov
inc
cdq
pop
js
adc
pop
inc
out
(bad)
dec
or
push
out
dec
push
push
cmp
mov
adc
aam
or
jae
jg
clc
jl
lods
xchg
mov
fidiv
pop
loop
xchg
adc
add
inc
xor
sub
ret
jns
inc
test
(bad)
or
hlt
mov
leave
rcl
aaa
push
inc
jp
iret
jmp
cmps
cli
and
ja
lock
sbb
dec
jecxz
test
jmp
imul
xchg
in
jne
in
or
adc
mov
stc
cmps
imul
pop
das
aas
lods
cmp
or
out
ret
ret
sub
or
jmp
adc
(bad)
sbb
outs
out
mov
scas
push
pop
and
or
aam
popa
ja
xor
icebp
outs
ror
pop
test
mov
es
(bad)
addr16
and
xchg
arpl
xor
jle
stc
adc
mov
shl
adc
xor
fnstsw
lods
ja
cmps
jbe
(bad)
nop
in
enter
or
ror
xchg
mov
addr16
int3
mov
pop
js
push
out
in
dec
dec
mov
pop
xor
pop
in
stc
push
ins
test
ret
xlat
daa
leave
aam
fs
cs
icebp
(bad)
and
xor
or
pop
mov
(bad)
(bad)
sar
(bad)
and
or
idiv
repz
pop
xor
leave
push
out
in
xor
pop
pop
adc
bnd
add
pop
cmp
dec
add
cmp
inc
xlat
cmps
scas
mov
cmp
mov
sub
movs
dec
rcl
adc
mov
daa
push
outs
add
lea
push
sar
cwde
cdq
push
hlt
(bad)
mov
inc
mov
or
int3
popf
icebp
jnp
jnp
sub
scas
inc
cwde
jg
(bad)
adc
enter
pop
adc
or
leave
sbb
repz
add
pop
hlt
out
sub
push
mov
repz
mov
mov
mov
rol
dec
js
dec
mov
clc
and
dec
cmp
xor
add
mov
es
add
(bad)
movzx
fisubr
clc
xchg
jmp
adc
dec
nop
mov
sti
sbb
xor
or
cmp
push
cli
icebp
cmp
sti
cmp
and
neg
xor
sub
(bad)
push
xchg
nop
jne
sbb
les
pushf
fsub
out
frstor
jl
pop
ret
jmp
ror
outs
in
je
iret
sbb
rol
mov
cs
xor
in
pop
cmc
fadd
xchg
mov
aas
into
in
inc
cmc
test
jns
pop
jmp
xlat
(bad)
stc
call
push
or
lock
mov
xchg
and
push
lock
lea
inc
not
mov
ja
mov
pop
fdivr
jnp
mov
int3
push
mov
inc
les
inc
cmp
sbb
js
pop
call
xchg
xor
pop
add
pop
daa
inc
dec
inc
je
sub
gs
jge
(bad)
es
push
xchg
jne
push
adc
jae
stos
jp
cli
jne
popa
dec
sti
jb
fucom
sti
int
imul
pop
aam
xor
xor
mov
xchg
daa
test
sbb
neg
gs
std
add
dec
cmp
push
jmp
test
xchg
pop
mov
out
xchg
add
retf
int3
jb
shl
test
inc
scas
fisub
xor
btr
int3
xchg
sbb
fld
addr16
fstp
aad
repz
xchg
clc
mov
mov
pop
or
popf
loope
push
mov
push
retf
adc
ds
pop
jecxz
dec
adc
pusha
pop
in
nop
repz
sbb
push
retf
mov
fucomi
mov
sbb
mov
lea
xlat
jb
xchg
sub
and
mov
fst
call
mov
lods
inc
int3
cwde
stos
and
or
test
fcmovb
call
and
daa
test
dec
push
sbb
ins
pop
mov
push
jmp
xchg
and
stc
mov
pminsw
sbb
mov
into
xor
and
sbb
test
fild
inc
mov
bound
xor
pop
sbb
bound
retf
push
cdq
(bad)
pushf
push
cs
out
std
mov
pop
mov
das
pop
adc
in
sbb
and
inc
jg
int
out
fdiv
cmp
not
lahf
mov
mov
or
js
cmp
test
je
dec
jmp
enter
add
fnstcw
xchg
fmul
xchg
pop
jne
mov
aas
sti
mov
fmul
repnz
jnp
sbb
fwait
test
les
retf
rol
jns
pusha
fcomp
clc
je
stos
fs
jmp
jb
cmps
mov
jmp
inc
and
push
mov
rcr
add
lock
xor
sbb
ret
inc
adc
sar
ins
jo
loope
jge
ins
pop
jmp
inc
(bad)
jl
enter
dec
rcr
test
inc
movs
sbb
inc
ror
(bad)
stc
mov
popa
call
sub
mov
repz
aas
test
in
or
retf
sub
xchg
dec
push
jmp
sti
pop
inc
movs
in
popa
inc
sbb
push
arpl
clc
lds
es
jbe
add
(bad)
lods
les
inc
xchg
(bad)
out
sbb
jp
jp
stc
adc
dec
inc
test
push
shl
mov
xlat
je
mov
in
sub
fcmovu
jmp
test
push
idiv
shl
test
in
jo
mov
mov
scas
cmp
enter
inc
std
dec
imul
or
call
nop
adc
add
loopne
inc
sahf
out
or
aam
inc
jmp
(bad)
jmp
sub
aaa
dec
xor
lds
sti
ja
(bad)
dec
in
adc
data16
verr
push
js
sbb
ja
movs
pusha
and
jne
pop
push
jle
jae
mov
out
cli
push
fmulp
test
or
jns
pop
lods
push
dec
lds
stos
or
fldcw
pop
fst
ret
cdq
lods
sahf
cs
sbb
hlt
sub
movs
out
call
push
daa
pop
or
mov
adc
jle
dec
adc
leave
jnp
sar
pop
(bad)
dec
loop
and
mov
jle
inc
vfnmadd132ss
(bad)
std
dec
and
and
xor
xchg
fstp
test
add
(bad)
stc
xchg
lds
std
test
out
xchg
lock
es
jo
xlat
sbb
xchg
ins
stos
xlat
xor
ins
popa
loop
or
dec
mov
fldenv
xor
or
jne
daa
pushf
imul
sub
rol
xor
adc
je
sti
mov
test
or
imul
jne
rcl
in
or
cmp
ss
lahf
push
xchg
xor
push
jle
cmps
mov
test
test
push
lock
pop
sub
pop
jge
icebp
xchg
mov
dec
push
jecxz
mov
ins
and
or
ret
jnp
sbb
sub
xor
push
ror
int
mov
lea
jae
jnp
mov
gs
js
sar
test
je
xchg
(bad)
adc
sub
or
aaa
fnstenv
adc
pop
out
jnp
(bad)
fcmovne
sub
fwait
and
fistp
arpl
lock
cmp
clc
retf
jne
jbe
lahf
xchg
jns
fisttp
dec
(bad)
rol
mov
sbb
push
or
gs
repnz
jb
stos
addr16
shrd
outs
lods
in
bound
daa
xchg
aaa
inc
int3
bound
xchg
mov
jmp
xchg
dec
(bad)
shl
add
add
pushf
mov
repnz
fs
ret
in
xchg
push
sbb
movs
add
repz
xchg
in
fild
dec
loopne
sub
imul
jmp
inc
or
(bad)
xor
dec
jae
(bad)
js
xor
jbe
(bad)
clc
pop
repz
sub
jae
add
stc
sbb
xor
stc
fiadd
xor
xchg
out
fwait
movs
out
lods
jne
jns
ds
pop
sub
push
das
ins
idiv
stos
das
push
pop
mov
mov
jmp
outs
icebp
retf
inc
dec
dec
cmp
enter
xchg
shr
rcr
push
std
jae
jns
xchg
cmps
scas
scas
gs
push
mov
dec
dec
fimul
xchg
sbb
xor
mov
mov
inc
mov
dec
movs
stos
adc
test
pop
fadd
or
jno
in
add
loope
adc
jb
push
cmp
fnstenv
or
ins
ds
mov
mov
xchg
repz
repnz
sub
lahf
add
inc
add
scas
sbb
aaa
adc
pop
idiv
mov
out
adc
sub
add
pop
les
push
(bad)
cli
in
adc
xchg
in
push
dec
cmp
push
call
pop
imul
and
ret
xor
dec
inc
inc
jge
push
fdivr
sbb
push
xor
(bad)
cmp
(bad)
sub
pop
ins
jo
fcmovb
scas
rcr
int
test
xor
mov
and
pusha
and
shl
stc
mov
push
les
and
jge
add
push
jle
fmul
rol
mov
sbb
sub
inc
arpl
jmp
inc
sbb
and
mov
loope
shl
aam
sbb
shr
jecxz
dec
int3
mov
mov
pop
test
pop
shl
sar
enter
or
adc
hlt
cmp
mov
mov
add
adc
jg
mov
int
bound
mov
lahf
and
scas
sbb
mov
inc
mov
and
mov
loop
jg
les
mov
mov
cmp
int3
scas
popf
sbb
lds
aam
outs
cmp
fmul
add
cmp
fdiv
and
(bad)
das
xchg
pop
lahf
inc
dec
xchg
iret
jmp
es
jb
or
call
and
enter
sub
pop
mov
fdiv
fist
loop
inc
leave
mov
lahf
shl
in
std
jb
adc
lock
mov
rcl
xor
and
lds
sub
pop
call
mov
aam
aam
or
jmp
push
mov
xlat
les
push
in
cld
push
mov
jo
int3
add
xchg
add
dec
mov
lahf
in
add
adc
loop
jno
pop
je
push
mov
inc
cmc
mov
inc
push
bnd
test
xor
cmp
leave
jmp
pop
jbe
out
das
fld
mov
scas
aaa
call
clc
jge
jno
into
jmp
or
lods
sbb
push
adc
movaps
jmp
jo
es
int3
sub
inc
pushf
sbb
aaa
xor
mov
adc
or
inc
(bad)
pop
xchg
sub
iret
cmc
je
cs
loope
stc
sbb
out
sbb
lods
ds
jle
int3
fnstsw
aad
and
push
fisttp
scas
mov
jae
repnz
dec
mov
scas
mov
cli
cmps
das
add
cmp
add
nop
jns
or
lods
ret
dec
std
fidivr
pop
pop
xlat
out
imul
inc
jp
movs
mov
rcr
aad
mov
in
add
or
sbb
push
xor
retf
into
push
mov
pop
push
xchg
int3
push
inc
shl
xor
ss
push
mov
outs
add
movs
push
ficomp
movs
stos
sub
fstp
cmps
add
call
es
lods
loopne
mov
mov
adc
cwde
aaa
mov
repnz
adc
mov
cmp
daa
mov
xchg
add
add
dec
mov
xor
int
mov
sbb
xor
aam
mov
lods
jns
add
push
movs
scas
add
test
xchg
lods
xchg
aas
loope
(bad)
mov
clc
push
inc
je
or
cmp
lahf
adc
push
inc
and
aas
xchg
dec
out
mov
outs
test
ds
push
xor
out
push
out
sar
(bad)
js
mov
js
mov
pop
iret
add
call
xchg
inc
fmul
lock
dec
mov
add
(bad)
lahf
stos
jmp
iret
xchg
ror
leave
movs
xchg
fld
ss
pop
aad
ror
jecxz
xlat
xchg
mov
cmp
cmps
aaa
adc
mov
out
add
cwde
push
mov
xchg
pop
mov
rol
jnp
out
popf
push
das
or
jp
(bad)
stos
push
(bad)
movs
or
xchg
mov
jp
mov
mov
pop
xchg
shl
aas
dec
jno
enter
and
jnp
dec
lock
inc
aas
lds
mov
addr16
mov
jmp
gs
add
jecxz
mov
nop
and
mov
outs
popa
xlat
int
sahf
jecxz
dec
mov
sbb
inc
jp
sti
push
mov
int
adc
ins
pop
jp
mov
or
sti
(bad)
sbb
clc
int3
push
mov
cmp
loope
mov
xchg
popa
ins
inc
lahf
xchg
mov
mov
ret
stc
cmp
loope
mov
sub
mov
not
dec
lods
xor
repz
lds
in
mov
sub
dec
jg
push
cs
xor
inc
adc
push
jmp
adc
push
inc
popa
or
and
lea
clc
sbb
xor
lock
fwait
jmp
sbb
not
arpl
test
jae
adc
dec
nop
xchg
jg
push
cmp
sub
mov
and
inc
sbb
pushf
(bad)
aad
std
out
mov
mov
and
jnp
pop
(bad)
(bad)
test
inc
xlat
cmps
xor
fwait
xor
jb
sub
cmp
jmp
or
clc
leave
push
lahf
xchg
push
js
aam
iret
lock
jnp
sbb
mov
stos
push
test
xor
sub
xchg
or
xchg
popa
in
inc
dec
mov
mov
cld
mov
push
mov
das
ror
xor
(bad)
sbb
(bad)
inc
leave
fiadd
and
xchg
xchg
push
cmp
mov
add
test
mov
lock
in
ret
push
rcr
jns
int3
mov
sub
retf
xchg
aam
xchg
and
out
push
lods
xchg
stos
jnp
adc
out
aas
fdivr
lahf
mov
movs
dec
add
add
dec
ja
in
fbstp
and
repnz
stos
adc
aas
mov
adc
xor
adc
out
sbb
dec
out
mov
jle
inc
mov
fidiv
cs
ins
xchg
imul
inc
push
push
(bad)
out
dec
div
pop
cli
jbe
pop
xor
int3
cmp
out
and
loop
cli
jo
inc
mov
out
inc
jae
mov
retf
jg
outs
test
addr16
cmp
sbb
push
pop
jmp
fwait
mov
stos
icebp
fisttp
fwait
cmps
adc
inc
and
pop
test
jo
push
or
adc
arpl
jns
std
je
push
or
fcomp
mov
xor
enter
xor
lods
mov
ret
inc
jbe
cmp
xor
sub
push
jl
sbb
ins
cmp
mov
or
mov
adc
dec
sub
scas
retf
sahf
arpl
gs
jp
lea
lods
bound
push
dec
(bad)
sti
sbb
(bad)
mov
adc
push
js
mov
(bad)
pop
mov
mov
xor
cld
push
loope
mov
in
js
push
jbe
sbb
cmc
in
sub
sbb
clc
leave
call
mov
xchg
or
inc
sbb
das
sbb
ficomp
fucomp
pop
push
or
std
scas
dec
mov
mov
push
sbb
ret
push
jmp
push
aas
jmp
sti
mov
jp
retf
popa
sbb
test
jmp
mov
in
adc
movs
add
retf
je
frstor
in
outs
push
and
add
sub
mov
outs
xchg
sub
dec
(bad)
rol
ror
in
mov
xlat
cmp
nop
sbb
js
pop
sub
jns
int
fnsave
aaa
pushf
test
jg
pop
sbb
add
mov
inc
xchg
lds
mov
inc
ss
pop
not
cmp
push
hlt
add
add
mov
in
popf
mov
ret
pop
cld
inc
xchg
dec
jg
cmp
ins
loop
sub
xchg
dec
mov
xor
fmul
sub
mov
(bad)
cmp
out
lods
mov
in
push
xor
lods
cs
and
rcr
fsubr
arpl
and
and
push
aaa
fidivr
mov
pop
mov
loopne
(bad)
jmp
icebp
stos
jbe
xchg
dec
fcomip
cwde
pop
inc
dec
add
into
outs
xchg
inc
jno
jmp
leave
out
aas
or
mov
jno
push
sub
or
xlat
jo
or
(bad)
jbe
lods
mov
stos
dec
add
dec
int
push
loop
call
cmp
shr
pop
leave
dec
movs
push
add
sbb
inc
mov
cmp
mov
cwde
std
jmp
sbb
shl
(bad)
std
lods
adc
addr16
xor
jb
adc
in
push
xlat
out
inc
in
cwde
and
fs
mov
mov
xchg
or
lahf
lahf
ds
mov
shr
push
mov
(bad)
sahf
imul
hlt
ficomp
cmps
cwde
sub
mov
or
mov
xor
shr
hlt
(bad)
pop
cld
pop
jl
and
and
mov
push
xchg
adc
mov
out
mov
mov
lahf
pop
lahf
push
adc
ds
fld
cmc
ins
aas
in
cli
(bad)
push
(bad)
xchg
cmp
jnp
lods
inc
ins
imul
or
sub
int
enter
in
out
cmp
addr16
cli
(bad)
push
inc
retf
dec
jmp
and
cmps
mov
iret
mov
pop
add
or
stos
sbb
inc
sbb
rol
dec
test
sbb
mov
push
and
ret
push
lock
push
repnz
(bad)
out
movs
cmp
inc
into
xor
cmp
(bad)
rcl
or
scas
jae
les
cmp
cmp
dec
mov
outs
mov
push
mov
enter
mov
jg
pop
ins
mov
cli
xchg
pop
stos
adc
daa
scas
fcmovbe
mov
fild
push
jecxz
pop
mov
cmp
add
pop
jae
dec
mul
push
sub
or
or
sbb
sbb
pop
or
and
ds
in
mov
cmp
into
jb
push
lods
xchg
ffree
call
call
push
hlt
cmc
inc
xchg
push
push
inc
fst
or
test
and
xchg
mov
dec
ja
ins
aas
push
(bad)
mov
xor
(bad)
xchg
sti
stos
lods
pop
hlt
ret
inc
xor
repz
add
fimul
gs
xor
and
ror
jns
dec
push
ins
fsubrp
sub
and
sub
pop
or
add
mov
pop
dec
in
mov
(bad)
pop
dec
add
add
out
xor
out
and
outs
into
scas
xor
(bad)
pop
xchg
mov
sbb
dec
in
dec
(bad)
fnstenv
in
fs
add
mov
mov
xor
imul
or
(bad)
imul
jno
jbe
adc
xchg
pusha
fcomp
xlat
shr
jae
cmc
pop
dec
mov
mov
movs
sub
add
sbb
cmp
xchg
test
pop
push
retf
iret
sub
cmps
sar
jo
int3
xchg
dec
mov
xor
push
mov
pop
imul
ss
jge
icebp
mov
loopne
and
nop
loopne
mov
inc
push
ret
inc
push
or
(bad)
sub
int3
jl
mov
cld
push
daa
out
jg
dec
mov
lahf
cmp
test
std
shl
shl
mov
pop
add
repz
data16
mov
and
or
aam
sub
cmp
stos
sbb
test
movs
popf
imul
stc
scas
lahf
pop
cmps
imul
jp
xchg
ins
adc
pop
aam
cli
or
dec
leave
sub
cmps
cdq
mov
addr16
add
push
xchg
dec
sbb
daa
aaa
in
cmc
into
mov
add
push
mov
mov
xor
bound
mov
cmp
pop
retf
iret
js
test
inc
or
dec
(bad)
iret
stos
int
and
repnz
cmp
mov
or
inc
loopne
xor
adc
dec
or
push
call
dec
mov
loop
jno
je
shr
outs
jg
mov
push
test
pop
test
lock
shr
sahf
mov
or
xor
fbstp
lea
adc
pop
clc
mov
leave
out
lea
lea
mov
dec
and
inc
xchg
adc
pop
aaa
pop
xchg
arpl
out
push
ins
push
push
jp
jbe
xchg
pop
mov
adc
xor
or
add
sahf
imul
inc
int
es
pop
fcmovnb
sbb
ret
add
cmc
add
dec
xor
pop
mov
aaa
jge
fdiv
mov
mov
pop
xchg
out
inc
sti
retf
pusha
and
push
int3
or
sbb
jge
add
cmp
loopne
jo
or
sub
dec
mov
jmp
jg
test
popa
lods
cdq
in
sub
dec
or
repnz
sbb
popf
test
cmp
repnz
fist
xor
mov
outs
add
dec
sar
or
mov
ins
jg
sub
es
jl
cwde
mov
ret
inc
loop
jmp
mov
fcom
xchg
loop
fstp
sbb
rcr
inc
cmp
xor
je
sar
fwait
pop
div
sub
inc
enter
test
adc
mov
icebp
scas
fdivr
rol
mov
in
and
xchg
out
adc
mov
mov
mov
loopne
icebp
xor
jge
or
(bad)
sub
mov
mov
xor
dec
clc
idiv
mov
mov
movs
or
loopne
adc
fistp
mov
out
imul
pop
inc
xchg
(bad)
cmp
fst
lahf
lods
add
enter
sbb
adc
jecxz
int3
add
inc
jmp
sub
push
mov
push
in
adc
pop
scas
movs
call
pop
xor
add
dec
dec
push
and
(bad)
push
imul
std
daa
aaa
fimul
push
sbb
test
call
cmp
mov
scas
imul
pop
mov
fidiv
aaa
mov
stos
jns
inc
shl
test
xchg
dec
icebp
push
sahf
(bad)
ds
and
popf
add
sub
scas
dec
sbb
imul
test
arpl
cmp
push
rcr
daa
(bad)
jo
sub
dec
aad
mov
jle
jnp
movs
xor
mov
call
push
aaa
hlt
stos
jbe
jno
adc
dec
or
in
ja
(bad)
popf
sbb
inc
adc
jmp
scas
lock
hlt
push
js
mov
pop
push
pop
mov
and
inc
outs
add
jmp
lds
(bad)
add
repnz
add
ficomp
out
retf
dec
pusha
sub
ins
pop
retf
sub
fnstcw
jno
dec
sbb
dec
test
or
jmp
std
into
jns
dec
pop
fnstsw
cmps
retf
call
adc
adc
shl
cli
lahf
std
clc
fsubr
int3
mov
lods
pop
push
std
cwde
(bad)
ins
sbb
in
pop
mov
xor
mov
loope
push
mov
test
jae
cmp
repnz
gs
popa
sar
xchg
mov
pop
repz
cwde
ins
hlt
movs
adc
das
jle
movs
jmp
dec
jne
add
daa
retf
dec
imul
push
aam
loope
test
fsub
dec
adc
push
icebp
fstp
add
scas
imul
in
fld
push
hlt
leave
cmp
in
ret
cmp
ret
loopne
pop
sub
mov
pop
or
xchg
clc
fbld
fdiv
cmp
stc
sub
sti
cmp
icebp
pop
inc
scas
es
mov
ret
les
popf
addr16
and
into
sbb
(bad)
pusha
repnz
test
stos
dec
dec
sbb
dec
sub
xor
pop
mov
shl
mov
sub
das
movs
pop
lds
cdq
pop
scas
push
aaa
cmp
out
fsubr
iret
out
add
cs
outs
fsincos
shl
das
cld
jmp
cmps
(bad)
out
xor
mov
aas
cmp
adc
dec
sub
jns
mov
and
mov
scas
dec
jns
(bad)
out
mov
mov
dec
lods
cmp
daa
sbb
mov
in
mov
mov
mov
push
les
mov
dec
pop
pop
sub
in
arpl
cmps
mov
int
xor
push
test
jmp
jo
imul
cwde
sahf
sbb
jbe
adc
fs
inc
test
dec
jo
inc
cs
in
test
push
ret
stc
mov
loope
dec
ins
pop
mov
inc
mov
or
mov
mov
adc
push
icebp
mov
dec
enter
mov
mov
aad
push
xchg
jbe
maxps
dec
sahf
jl
adc
dec
or
jbe
jmp
inc
mov
pop
inc
stos
and
cmp
fiadd
mov
es
sub
dec
xor
dec
mov
dec
outs
sub
sub
mov
inc
in
and
dec
call
ins
in
lock
cmp
jb
and
adc
sbb
fnsave
xchg
sbb
inc
in
scas
sbb
inc
shl
inc
and
out
mov
xlat
xor
or
icebp
jle
movs
enter
call
scas
jmp
imul
pop
int
enter
pushf
and
(bad)
jo
in
aam
scas
repnz
cmp
cwde
jno
out
jne
sub
or
cmp
popa
lock
mov
lds
fwait
sub
fadd
in
int
imul
jo
and
iret
movs
xor
inc
and
pop
cli
sub
jecxz
cli
daa
or
dec
inc
mov
inc
into
pop
cmps
pop
arpl
(bad)
int
enter
nop
test
(bad)
sti
(bad)
mov
pop
push
adc
sub
and
pop
movs
mov
mov
dec
out
clc
call
fistp
jmp
gs
test
les
xor
mov
call
int3
xchg
js
push
iret
je
popa
and
adc
stos
retf
jg
sbb
cmp
and
test
(bad)
loop
clc
mov
fisubr
pop
retf
push
cdq
les
jl
jmp
cmp
add
outs
mov
xchg
ins
mov
push
mov
ror
dec
sbb
pop
mov
test
call
lods
inc
in
mov
and
aad
into
arpl
xor
add
or
and
mov
mov
test
retf
add
(bad)
ds
cmp
ins
add
imul
stos
fs
(bad)
shr
mov
adc
out
mov
xchg
xchg
icebp
movs
in
sub
mov
rcl
mov
jp
js
ds
jmp
cdq
and
sub
dec
jne
aaa
add
loopne
push
test
pusha
add
sub
dec
sbb
jnp
inc
int3
test
mov
and
fs
pop
xor
push
push
retf
and
mov
movs
pop
daa
cli
outs
fist
icebp
int
aas
test
mov
sbb
push
adc
stos
or
lods
fild
jnp
in
jg
movs
xchg
sub
sub
dec
ret
into
call
(bad)
int
int3
mov
or
sar
add
adc
cmp
aam
mov
mov
scas
inc
das
and
aaa
sub
lds
stc
das
mov
iret
mov
xchg
add
test
sub
sub
sub
pop
int3
sbb
xchg
inc
push
jnp
mov
hlt
push
dec
or
cmps
dec
lods
mov
add
and
add
stos
repnz
(bad)
sub
push
je
pushf
(bad)
dec
mov
mov
arpl
(bad)
mov
jo
pop
push
imul
adc
mov
jge
js
call
int
mov
and
in
mov
cmc
nop
ret
sbb
fild
clc
xor
dec
mov
xor
rol
jmp
outs
cwde
fcomp
enter
cs
or
std
cmp
xor
push
mov
inc
inc
pop
mov
stos
mov
ds
aam
(bad)
dec
sub
mov
mov
test
pop
mov
pop
enter
aaa
inc
enter
scas
inc
leave
add
enter
or
adc
push
and
cmps
jl
retf
je
(bad)
aad
ret
std
jg
cli
clc
add
jmp
scas
push
into
imul
cmp
mov
int3
mov
inc
(bad)
sar
inc
mov
(bad)
mov
cdq
mov
mov
fistp
ss
fiadd
jmp
pavgb
cmp
pop
push
sbb
data16
aam
and
fidiv
push
lds
movs
les
(bad)
pop
ret
pusha
hlt
in
jns
and
push
(bad)
cmp
add
push
sbb
ss
movs
out
or
lods
jp
mov
sub
cwde
ins
or
sbb
mov
jge
push
dec
movs
es
add
mov
mov
mov
sbb
fidiv
jnp
dec
mov
push
and
retf
fwait
cld
and
adc
cld
imul
ret
adc
dec
(bad)
xor
aas
push
cmps
(bad)
es
push
loope
mov
ja
popa
dec
lods
inc
mov
dec
hlt
mov
pop
sbb
mov
loop
fdivr
and
xor
bt
cdq
in
sbb
stc
sub
inc
test
shl
or
pop
cmp
in
cmp
ret
imul
push
aad
mov
test
stos
mov
and
push
sub
xchg
hlt
mov
mov
add
mov
rcl
test
in
add
cmps
xchg
stos
ja
pop
clc
fmul
mov
jge
jns
and
pop
mov
cmps
retf
in
and
jnp
cmp
out
retf
mov
lods
int
js
ret
imul
jne
cli
cwde
and
packsswb
sbb
push
dec
push
adc
mov
push
mov
movs
push
pop
sti
sbb
push
lea
mov
movs
sub
fsubr
outs
push
sbb
daa
dec
jo
popa
push
ret
adc
inc
xchg
and
adc
push
ret
xchg
sahf
push
jno
add
daa
mov
(bad)
fsub
cmp
push
xchg
sahf
mov
sahf
push
jmp
mov
jb
sub
movs
cmps
xor
or
ins
loopne
sub
fstp
retf
cmp
pop
std
lods
jbe
jmp
inc
mov
dec
aas
push
dec
test
push
and
push
mov
dec
jg
pop
out
cmc
jecxz
and
mov
jb
mov
sub
dec
lods
ja
and
xchg
scas
sbb
(bad)
jns
cli
jmp
sbb
jns
jo
inc
sti
cdq
pop
dec
mov
sbb
and
push
xchg
popa
dec
cli
(bad)
xor
xchg
mov
ret
xchg
and
out
adc
and
push
scas
sub
inc
mov
mov
mov
dec
lea
dec
mov
xchg
dec
mov
ins
sub
mov
mov
mov
sub
jmp
inc
(bad)
(bad)
push
pop
hlt
jae
ret
es
out
dec
add
inc
(bad)
jmp
push
sub
push
imul
or
lea
xchg
fwait
push
mov
mov
lea
in
push
sub
fisub
push
pusha
retf
int
xchg
jp
fld
lock
in
ret
push
outs
adc
gs
std
pop
mov
inc
cmps
push
(bad)
call
mov
cmps
cdq
test
leave
rol
repz
xor
cmp
sub
dec
repz
lahf
pop
xor
std
scas
imul
test
xchg
xchg
fwait
movs
jns
cmp
and
pop
xchg
in
movs
sub
inc
push
ins
xor
lods
fstp
int
xchg
int
inc
jmp
jo
and
lds
mov
pop
xchg
mov
lds
es
out
in
(bad)
mov
mov
ja
pop
xor
pop
sbb
add
js
scas
sub
or
das
ret
jmp
cmp
xchg
mov
aas
ins
jne
inc
sub
mov
xchg
xor
pop
xor
fcom
mul
jne
mov
mov
sbb
jg
add
jmp
jmp
xor
or
jge
retf
shl
rcl
or
mov
jle
sub
pusha
retf
stos
not
cmp
push
fcomp
and
sub
jne
pop
mov
in
sbb
push
and
add
xor
call
jno
lods
push
nop
mov
ret
jne
mov
sar
fcomp
or
lahf
mov
jmp
push
cmp
gs
pushf
sbb
sub
rcr
xchg
jb
out
cmp
pop
daa
popf
mov
and
jbe
mov
sahf
or
xchg
adc
sbb
sbb
and
adc
fdivr
sbb
movs
dec
out
dec
xchg
fs
call
xchg
loope
imul
or
sub
ins
sub
mov
in
cmp
or
aad
into
mov
in
or
in
pop
cmp
dec
int
aam
aas
stos
lahf
adc
lahf
xchg
test
and
adc
push
fcomip
outs
sub
push
mov
and
ja
mov
dec
or
adc
cmc
iret
mov
mov
sbb
ror
cmp
loop
loopne
adc
lods
ins
sub
push
mov
out
dec
inc
push
sub
mov
das
add
sbb
mov
in
jae
adc
psllq
or
xor
and
rcr
std
jge
pop
mov
call
and
cwde
shr
add
sbb
xchg
or
inc
mov
sbb
jnp
push
shl
popa
loope
hlt
movs
scas
and
lock
ja
lahf
sar
lea
sub
pop
sub
ret
mov
cmp
ret
icebp
xor
cdq
(bad)
push
or
stos
jnp
mov
(bad)
push
add
and
push
jns
js
out
gs
jno
(bad)
arpl
ret
aaa
nop
(bad)
fld
xchg
push
imul
outs
xchg
xor
scas
sahf
push
jecxz
push
imul
dec
sub
adc
out
outs
fild
sbb
ret
cmp
in
aad
lds
or
jmp
lods
mov
adc
cmp
addr16
push
popf
scas
cmp
mov
out
movs
outs
and
or
add
jnp
jge
mov
outs
mov
retf
mov
repnz
dec
jl
inc
adc
push
adc
pop
push
sbb
cmp
sub
call
push
push
in
ficom
neg
imul
mov
lods
cld
ret
pop
scas
xchg
adc
jbe
cmp
sub
sbb
jo
mov
mov
add
shl
mov
jle
sbb
fbstp
mov
mov
jno
adc
sbb
fild
pop
push
js
dec
sahf
sub
mov
and
add
cmp
into
jmp
fstp
xor
sbb
jl
clc
popf
movs
adc
lahf
mov
sub
mov
ins
pop
xchg
or
mov
gs
rcr
jae
and
test
xor
mov
push
xor
sub
ss
test
cli
mov
sbb
jbe
jmp
sub
nop
test
sbb
das
outs
xchg
adc
pop
push
mov
sbb
cmc
cmps
xchg
sti
pusha
sti
jae
jae
call
sar
pop
pop
(bad)
je
stc
movs
(bad)
mov
fstp
scas
dec
jno
out
(bad)
push
aam
cmp
mov
arpl
or
mov
mov
cmp
popa
push
in
add
jge
loope
ja
cmp
xor
xor
ins
in
cdq
xor
pop
cmps
pop
xor
ficom
dec
(bad)
not
adc
es
out
dec
leave
ss
loop
mov
xlat
sub
test
test
retf
push
jns
into
pop
hlt
(bad)
imul
sbb
pop
lods
fstp
cmp
(bad)
out
shl
test
fistp
sti
adc
retf
or
jno
popa
imul
(bad)
cmps
mov
dec
xchg
jae
sahf
xor
mov
lea
sar
leave
adc
pusha
(bad)
pop
movs
das
test
lea
xchg
xlat
mov
and
push
mov
pop
js
out
sbb
icebp
loopne
push
call
push
add
cmp
cwde
out
pop
repz
add
shr
shl
jmp
mov
lock
jmp
and
xor
sub
aaa
ds
cmp
adc
mov
ins
or
fwait
lds
rol
loopne
(bad)
mov
scas
push
lock
pop
movs
inc
fmul
mov
cmps
popf
adc
sti
add
popa
in
sbb
outs
sub
xor
ins
pop
pop
in
std
xchg
cmp
push
aas
call
push
movs
add
iret
js
and
push
dec
fcom
cmps
int
sbb
and
fistp
lods
outs
fsubr
iret
iret
jge
mov
sbb
ror
mov
or
leave
outs
pop
aad
xor
push
lea
pop
dec
in
push
cmps
popf
xchg
js
or
shr
add
sub
fsubp
mul
xchg
pop
xchg
es
dec
xchg
dec
int3
aam
inc
popf
mov
add
rcr
cmp
ret
mov
pop
or
cmps
fcom
xor
inc
mov
jmp
pop
sub
mul
scas
adc
int
ficomp
imul
push
in
xor
pop
daa
aas
pop
add
ret
dec
and
push
or
xor
arpl
or
in
stos
dec
adc
mov
cdq
mov
dec
and
test
cmps
adc
or
loopne
ss
inc
push
mov
sub
stc
(bad)
jmp
sub
cmp
in
fisub
sar
jl
jg
sbb
push
sbb
shl
aas
lods
mov
ror
sub
xor
ja
or
push
inc
push
push
and
dec
push
jmp
sbb
js
movs
push
push
or
sub
test
push
add
mov
into
xchg
lahf
test
inc
jmp
iret
jl
adc
shl
xor
mov
or
aas
add
mov
stos
and
cdq
stos
in
jecxz
mov
and
or
test
mov
add
out
mov
aaa
rcr
ja
(bad)
adc
rcr
std
popf
lds
out
in
out
dec
sahf
popa
mov
jge
ret
lods
mov
inc
pop
in
push
nop
leave
ins
sbb
idiv
enter
push
into
cld
xor
out
inc
jbe
out
jb
shr
cmp
pop
sub
xor
jp
scas
ja
sub
popa
dec
xor
cmp
scas
out
sbb
popf
mov
leave
push
cmp
aad
push
push
stc
pop
loope
in
mov
cmc
(bad)
retf
xor
test
mov
int
push
mov
sub
xlat
retf
repnz
dec
out
ins
iret
and
ds
lock
fimul
and
and
arpl
test
adc
or
ins
ret
mov
call
cwde
lea
cld
or
push
and
aaa
cmp
xlat
xchg
ret
clc
pusha
jnp
cs
pop
sbb
and
add
pushf
out
cmp
ds
adc
stos
xchg
outs
bound
cmps
pusha
adc
arpl
lods
mov
cwde
fist
fdivr
lods
mov
sub
in
int
add
fst
loope
lods
ficom
cmp
or
xor
xchg
inc
mov
push
cld
xor
scas
jno
call
push
aas
imul
adc
fistp
mov
ret
mov
enter
nop
dec
daa
jne
xor
push
pusha
cmp
shl
mov
and
rcr
je
or
outs
aaa
ins
cmp
ja
pop
sub
jbe
cmps
es
inc
cli
fsub
xchg
mov
sub
fsub
sub
xchg
push
dec
sub
pop
fwait
push
sub
in
nop
cmp
xchg
sti
cli
adc
lds
lahf
ja
push
mov
push
dec
adc
mov
call
sub
or
in
aad
hlt
add
jns
pop
jmp
xchg
adc
fnstsw
aam
pop
test
fst
pop
pop
mov
pop
dec
jmp
adc
cdq
push
push
xor
and
add
out
adc
pushf
mov
pop
pusha
inc
add
shl
jmp
sbb
int3
sub
jmp
iret
rcr
movs
(bad)
cmp
scas
test
shl
(bad)
lock
lock
sub
leave
cli
out
jg
out
jo
xchg
fwait
(bad)
inc
lock
dec
mov
fcom
aaa
jae
jno
mov
cmp
xchg
and
ror
aad
push
jno
les
retf
xchg
inc
push
push
cmp
or
ss
imul
xor
in
inc
adc
jbe
pop
adc
addr16
add
mov
stos
scas
inc
push
shl
lods
sub
ja
cmp
xchg
mov
ficom
fwait
add
aaa
mov
inc
out
jl
push
(bad)
pop
mov
outs
mov
jge
mov
pop
cli
out
pop
sub
fwait
clc
jns
add
(bad)
mov
pop
xchg
cmc
adc
jbe
mov
fs
sub
ror
stos
jg
sub
cmp
fimul
sbb
jmp
loope
mov
dec
add
lahf
adc
inc
fsubr
jl
xchg
rcr
daa
mov
dec
jecxz
push
fstp
(bad)
and
fst
sbb
les
and
nop
pusha
pop
lahf
mov
jle
sub
mov
imul
push
add
mov
adc
xchg
sar
cmps
jle
ds
test
adc
mov
add
mov
inc
cmp
sub
jne
jno
out
jmp
gs
xchg
mov
and
(bad)
inc
(bad)
fcmove
call
add
sbb
pop
or
cmp
pop
sbb
scas
lock
sahf
(bad)
loop
and
pop
mov
shl
mov
mov
enter
lea
xor
outs
xchg
jge
xchg
xchg
jo
out
push
sti
xor
mov
add
push
and
fimul
fisub
or
jns
mov
jne
push
cld
icebp
sbb
sub
jp
out
pop
mov
sub
cmp
adc
lea
mov
es
mov
sbb
sub
mov
mov
(bad)
lock
scas
out
int
fisub
(bad)
lock
dec
shl
dec
cmc
(bad)
pop
ret
mov
inc
or
fs
pop
push
loopne
cmc
adc
jecxz
dec
je
loope
test
dec
push
jecxz
dec
sub
cmp
mov
ret
cmp
adc
repz
cmp
xchg
mov
xchg
sub
fs
jns
pop
out
adc
mov
xor
xor
cmp
fnstcw
mov
ins
xlat
mov
shl
fwait
xchg
(bad)
push
and
icebp
shl
sbb
xchg
or
cmp
addr16
test
ret
and
es
mov
inc
sbb
xchg
cmp
mov
ficom
mov
xchg
sub
shl
and
push
add
in
fs
int
(bad)
and
push
sbb
cmp
dec
xor
jmp
jmp
sub
mov
mov
ds
sub
(bad)
repnz
out
mov
call
cs
mov
(bad)
fadd
sub
sbb
jp
loopne
loope
repnz
mov
lock
outs
neg
js
inc
out
(bad)
mov
test
push
aaa
add
cmp
xchg
mov
lods
repnz
xchg
je
mov
icebp
sbb
sbb
xchg
stc
dec
pop
test
lds
push
add
sub
mov
test
mov
sbb
or
fwait
retf
sub
pop
jb
in
add
inc
xchg
fmul
push
in
add
push
test
xchg
adc
xchg
jno
sbb
cld
(bad)
fidiv
std
and
in
dec
and
add
or
push
or
cmp
dec
xchg
ds
stos
leave
add
retf
rol
mov
pushf
call
imul
sub
push
mov
and
stos
adc
mov
loop
jno
into
xor
xlat
fistp
xor
dec
lods
jmp
inc
sub
shr
cmp
mov
pop
add
movs
cmps
push
fnstsw
or
test
gs
mov
clc
cmp
pop
sysexit
leave
mov
mov
sbb
out
xor
sbb
idiv
adc
and
inc
push
out
mov
lahf
mov
pop
ds
daa
mov
in
rol
iret
sbb
inc
sbb
inc
pop
inc
addr16
inc
lahf
xchg
imul
sti
outs
and
pusha
aam
adc
sahf
imul
push
xor
sub
call
sub
pop
jne
(bad)
into
mov
push
cmp
and
int
fcomp
rol
fmulp
not
nop
add
push
cwde
fcomp
fidiv
mov
sub
jl
imul
fs
xchg
xor
xor
jle
jns
mov
push
sub
fnstenv
(bad)
and
xor
add
mov
pop
js
fldenv
mov
xor
je
xor
mov
dec
mov
imul
(bad)
mov
stos
(bad)
gs
mov
sbb
jmp
in
jmp
outs
pop
xor
lahf
push
cs
movs
scas
fwait
pop
rol
sub
ja
xlat
sub
mov
cmp
outs
popf
add
adc
bound
lock
ja
dec
mov
lds
push
(bad)
(bad)
stos
xchg
dec
in
lods
sahf
cmp
repnz
das
mov
xchg
int3
dec
and
mov
sub
call
adc
out
mov
pushf
xchg
or
jnp
sar
mov
jmp
jmp
mov
dec
push
mov
jmp
nop
dec
jecxz
in
clc
jae
stos
push
dec
mov
inc
pop
aam
cmp
cmp
sub
inc
adc
fistp
sub
ret
out
mov
lds
mov
push
dec
out
sti
ins
repnz
add
int
inc
pushf
outs
inc
jbe
sub
pop
ja
mov
dec
ja
out
and
rcl
test
bound
in
retf
mov
pop
fwait
ret
lods
inc
movs
sub
js
pushf
jo
sbb
ret
int3
xchg
outs
retf
sub
push
pusha
dec
cmp
pop
fs
outs
fnstcw
rcr
sbb
test
push
popa
xchg
sub
out
mov
xchg
sub
out
cmp
inc
call
and
jl
ins
out
movs
or
into
add
cmp
cmc
xor
not
dec
push
cmovnp
(bad)
mov
and
daa
inc
xchg
aaa
mov
aaa
adc
aas
xor
mov
out
jg
stos
jbe
pop
fsubrp
jmp
test
ret
aam
ret
sub
fwait
mov
xchg
mov
sti
aaa
jmp
movs
fnstenv
jl
cmp
pop
or
ret
sub
xlat
test
xchg
lods
out
mov
sbb
xor
add
xchg
movs
lods
sahf
xchg
iret
mov
gs
sbb
out
mov
stos
and
mov
or
push
xchg
sub
jae
cdq
test
sbb
mov
sub
jo
jge
lea
mov
dec
mov
sub
adc
adc
lahf
mov
fsub
xchg
ds
inc
imul
sti
jg
mov
bound
repz
inc
or
adc
or
mov
inc
call
mov
(bad)
xchg
arpl
xchg
xor
shr
mov
std
dec
(bad)
inc
push
arpl
or
imul
adc
adc
(bad)
sbb
(bad)
fnstcw
frstor
mov
int3
inc
push
xor
xlat
lock
add
xor
jecxz
mov
fwait
scas
ins
ins
inc
fdiv
arpl
push
ja
push
lahf
adc
mov
sbb
sbb
movs
jle
pop
pop
sbb
dec
call
inc
shr
mov
dec
fcomp
and
xor
jl
push
into
(bad)
jne
or
xor
sbb
int3
and
dec
cdq
shl
dec
mov
(bad)
adc
imul
lods
jp
mov
mov
xor
sbb
dec
les
mov
mov
ins
push
aas
ins
cwde
jl
xchg
into
loopne
or
xchg
dec
retf
mov
or
add
test
cmp
inc
dec
sar
outs
out
mov
mov
jmp
test
inc
loope
cld
mov
pop
mov
icebp
pop
inc
pop
popa
and
jno
sar
adc
sub
rcr
mov
adc
push
cmp
fs
mov
cli
pop
popf
iret
sbb
inc
mov
add
xor
into
aam
loope
or
add
xor
clc
test
in
dec
jg
inc
pushf
jg
pop
fsubr
leave
and
sti
sbb
jae
fs
add
cs
sbb
or
(bad)
int
cli
inc
mov
jmp
jle
pop
xchg
(bad)
mov
retf
and
loop
jno
mov
and
hlt
push
sbb
push
or
pop
imul
mov
push
out
pop
out
inc
inc
shl
sub
mov
mov
imul
dec
xchg
icebp
mov
jae
test
inc
sbb
(bad)
mov
mov
and
mov
ret
push
adc
xlat
mov
(bad)
pop
cmps
into
jg
outs
dec
sbb
pushf
sub
loope
in
ja
les
sbb
cmps
add
push
sub
pop
sar
pop
sbb
call
stos
cmp
push
jb
mov
add
stos
sub
xchg
dec
(bad)
dec
xchg
sub
stos
dec
pop
(bad)
fwait
sub
jecxz
adc
xchg
or
cli
inc
inc
les
jne
jo
add
movs
jp
les
sbb
jecxz
and
xlat
rol
scas
icebp
jp
enter
aas
inc
and
push
jns
lods
in
or
push
mov
mov
lea
mov
mul
stos
scas
cli
(bad)
ret
adc
xor
jmp
retf
pop
mov
movs
shl
mov
dec
std
mov
iret
(bad)
std
stos
outs
and
or
repz
push
aam
ss
push
jnp
xor
leave
ins
lods
dec
add
mov
ffree
stc
hlt
sub
aad
mov
dec
sbb
(bad)
jmp
arpl
mov
pop
xchg
test
call
cld
mov
aas
bound
fistp
pusha
(bad)
xchg
sub
mov
mov
add
sahf
adc
pop
lods
ins
mov
inc
push
pop
xor
xor
jp
int
rol
into
cmp
outs
xor
pop
xchg
lahf
ret
ret
cmp
aaa
push
aaa
lahf
stc
imul
add
mov
dec
pop
xchg
cld
loope
or
fs
gs
xor
dec
jno
jae
xlat
inc
xor
dec
outs
out
enter
mov
int3
sub
dec
dec
retf
pop
cmp
xchg
adc
adc
cmp
mov
mov
mov
clc
add
mov
gs
xcrypt-ctr
cmps
pop
fdiv
loopne
jmp
pusha
cs
leave
xor
pop
ja
lds
or
jae
mov
dec
sub
mov
mov
xchg
shr
mov
pop
pop
xchg
push
mov
test
retf
popf
add
sbb
xor
in
jmp
inc
cmp
arpl
cwde
push
dec
test
sahf
inc
inc
out
xor
xchg
into
aad
inc
dec
std
add
je
scas
fld
shl
(bad)
dec
pop
dec
mov
cwde
and
mov
fcom
mov
cmp
add
fisttp
push
loop
dec
sub
(bad)
enter
xchg
icebp
add
mov
inc
pop
push
push
cmp
(bad)
xchg
xchg
mov
inc
lea
bndstx
add
(bad)
jno
out
push
mov
jmp
push
int3
mov
push
fmul
lahf
rol
pop
imul
pop
(bad)
enter
push
inc
add
push
inc
inc
mov
mov
adc
int3
dec
(bad)
xor
cld
cmp
sbb
sub
adc
shl
ins
cwde
pop
pop
mov
jmp
cmp
cmp
push
iret
bound
sub
loop
mov
pop
out
fdiv
mov
cmps
popa
fs
push
mov
loop
into
outs
sub
rol
pushf
cmps
fwait
mov
push
leave
add
bound
std
test
add
inc
div
outs
retf
sbb
fdiv
mov
sub
paddd
test
ins
sahf
fisttp
xor
ss
into
xor
popf
das
test
dec
and
rcr
mov
fs
jle
sub
es
div
cmp
xchg
(bad)
cdq
iret
pushf
cwde
int
or
xchg
stc
in
addr16
ins
retf
adc
mov
out
jns
(bad)
fmul
mov
stos
xlat
cdq
(bad)
xchg
adc
lods
push
jb
jb
xchg
out
addr16
adc
mov
push
mov
dec
(bad)
adc
or
repz
and
jbe
xor
ret
cdq
push
jg
sbb
test
outs
mov
sub
push
jl
inc
dec
ds
in
add
cmp
test
rol
pop
ret
gs
xor
adc
or
pusha
into
lods
jle
inc
rol
ins
mov
pop
(bad)
adc
sbb
jmp
fidivr
mov
add
push
pop
aam
jmp
push
lea
jl
add
retf
ins
mov
push
or
jns
cmp
call
inc
in
and
imul
jg
xchg
out
sub
(bad)
(bad)
xchg
pushf
bound
dec
aaa
xchg
enter
mov
and
lods
retf
and
mov
out
rcl
sub
neg
jo
call
dec
xchg
lods
mov
rol
push
not
bound
cmps
push
sbb
neg
mov
ss
shl
jle
fiadd
inc
jne
and
mov
(bad)
rcl
rep
iret
mov
cmc
popw
pop
pop
mov
dec
jae
out
mov
adc
jo
push
push
cld
mov
iret
pop
cwde
arpl
inc
mov
retf
loopne
cmps
imul
push
imul
push
lods
adc
sbb
mov
pop
cmp
or
repnz
xor
dec
outs
fcmove
sbb
(bad)
(bad)
mov
outs
je
(bad)
cmp
(bad)
ret
mov
mov
pop
push
outs
ins
push
xchg
lds
(bad)
sbb
call
and
int
enter
jmp
leave
mov
pop
(bad)
frstor
adc
ficom
inc
jl
mov
jno
ins
leave
jmp
and
jo
in
test
pushf
retf
cmp
jno
jmp
and
ret
jecxz
or
mov
mov
test
into
xor
jmp
add
aaa
dec
push
jg
retf
outs
cmp
test
xchg
cmp
enter
fist
leave
rcr
sub
sysenter
push
ja
cmp
mov
pop
(bad)
push
pop
popf
out
imul
aaa
adc
rcl
lods
add
dec
out
mov
fdiv
sbb
add
movs
push
(bad)
fistp
aad
sbb
iret
das
outs
mov
jno
fstp
mov
in
or
add
add
(bad)
add
dec
cmps
repnz
icebp
and
cld
test
xchg
loopne
mov
pop
test
cmp
push
inc
push
mov
int
mov
or
jae
or
adc
(bad)
fwait
sub
jbe
sub
push
pinsrw
push
js
int
jl
push
cmp
inc
out
xor
aam
fwait
ins
add
mov
ror
xchg
cdq
repnz
arpl
sbb
mov
or
jne
sbb
pop
jb
sti
cmp
fxch
inc
mov
jp
cdq
pop
in
push
dec
mov
xchg
pop
sti
push
xchg
inc
icebp
push
stos
fidivr
jo
aam
fiadd
jecxz
scas
imul
test
sbb
retf
lahf
rcl
lea
fbstp
push
jle
retf
mov
out
sbb
outs
mov
push
mov
and
jno
cmps
push
leave
jo
push
mov
loopne
cmps
mov
jl
cmp
jl
(bad)
in
or
std
enter
and
imul
test
jmp
test
or
scas
cmps
or
dec
inc
sbb
sub
pop
jbe
ret
mov
pop
mov
sub
cmp
icebp
adc
popf
repz
stos
mov
inc
shl
shl
lahf
cmp
lock
gs
add
ins
mov
pop
cmp
outs
cmp
call
pop
or
outs
sub
sub
add
push
dec
in
daa
test
(bad)
cmp
clc
repz
ror
cld
xchg
adc
or
add
jecxz
ds
pop
fstp
test
out
mov
jae
sub
lock
and
out
sub
push
retf
mov
xor
mov
and
je
inc
mov
cld
jle
sbb
adc
inc
mov
aam
mov
mov
shr
es
gs
fs
adc
lods
push
xor
call
out
retf
pusha
in
cld
sar
mov
jb
imul
add
dec
fwait
push
lods
xor
adc
outs
js
repz
mov
sbb
rol
in
(bad)
lock
inc
test
mov
sbb
pop
push
sbb
ret
out
out
sub
cdq
in
and
jl
mov
nop
and
mov
dec
hlt
fcomp
or
lods
sbb
fwait
or
jl
cwde
push
push
leave
sbb
fwait
sbb
pop
dec
(bad)
(bad)
mov
loopne
xor
mov
cmp
arpl
sub
sub
push
in
mov
cmp
pop
ret
inc
aad
dec
mov
sbb
pop
sar
shr
push
loopne
hlt
(bad)
cmc
jnp
test
lock
xchg
cmp
gs
lahf
mov
push
mov
movs
cmp
jecxz
ss
(bad)
jle
in
jg
fdivr
push
jmp
daa
or
popf
scas
pop
mov
push
cmps
in
jns
rol
adc
push
scas
push
and
or
or
mov
in
aam
bound
sub
adc
xor
sub
pop
xor
(bad)
stos
and
jbe
xchg
mov
jnp
lahf
mov
sbb
mov
xchg
jp
int3
jbe
or
mov
jecxz
xor
xchg
leave
inc
lods
sub
fucompp
in
andnps
iret
push
mov
inc
cmp
icebp
in
sub
pop
or
stos
cmp
rcr
loop
int
mov
sbb
shl
dec
add
ret
mov
ret
(bad)
mov
add
cmp
xchg
les
cmp
or
sub
fiadd
jp
sbb
dec
in
and
clc
dec
call
fcomp
stc
int
movs
scas
dec
call
cmps
test
outs
mov
adc
sbb
adc
sbb
jno
in
dec
mov
loope
loop
clc
adc
rcr
pop
retf
stos
push
dec
out
test
jb
(bad)
rcr
mov
cmp
add
std
loopne
jmp
lock
fs
(bad)
pop
ficom
call
in
mov
leave
ror
fst
pushf
cmp
test
mov
fmul
ds
mov
in
ror
call
cmp
repz
aas
cdq
repz
cmps
push
mov
pop
pop
jecxz
pushf
xchg
dec
jb
shr
sub
push
mov
gs
scas
(bad)
jp
out
jge
inc
dec
xchg
idiv
(bad)
push
xor
mov
mov
cmp
scas
inc
mov
in
movs
cmps
in
mov
add
retf
clc
retf
cmp
sub
aas
mov
pusha
pop
hlt
int
scas
cli
mov
je
xor
mov
xor
adc
or
add
pop
into
out
add
add
mov
xor
lods
out
je
test
cld
rcl
push
jge
dec
push
push
adc
and
mov
mov
xlat
push
pop
jp
sbb
adc
cmps
bound
aam
push
sbb
iret
stos
pop
sbb
gs
loope
cmps
arpl
iret
sbb
adc
jnp
icebp
cmps
xchg
push
cdq
adc
je
call
pop
sub
xor
inc
jge
xchg
sub
icebp
inc
pop
lock
ds
mov
push
mov
lock
lock
cli
cwde
sbb
push
cmc
movs
adc
or
push
test
sbb
push
repz
mov
cmc
jge
adc
mov
xor
jmp
mov
cmp
pop
shl
push
mov
push
lock
adc
es
or
push
(bad)
outs
jg
std
int3
sbb
or
xor
sub
and
movs
mov
out
popa
sbb
ret
xchg
(bad)
jmp
inc
xor
bound
(bad)
daa
pop
adc
call
test
xchg
sbb
add
adc
(bad)
cmp
mov
iret
sub
imul
and
daa
pusha
push
pop
js
pushf
xor
jo
pop
aaa
push
je
pop
lahf
xor
xchg
stos
sbb
and
mov
(bad)
scas
mov
fcom
aas
push
jmp
and
xchg
dec
test
xor
arpl
lock
inc
mov
out
mov
xor
dec
sub
sahf
inc
add
pushf
in
cmp
fs
xchg
xchg
into
push
out
inc
ins
push
popf
data16
sub
les
cli
pop
cmp
test
and
xchg
adc
cmp
fs
repnz
lods
push
js
dec
int
int3
adc
int
mov
out
test
mov
inc
mov
mov
cld
in
stos
pop
fisub
cmp
and
mov
aad
popf
std
call
repnz
loop
pop
inc
xchg
add
imul
adc
inc
out
or
push
push
pop
shr
mov
dec
(bad)
jg
int
pushf
or
inc
sub
stc
xchg
sub
inc
cmc
mov
(bad)
nop
lods
push
pop
mov
push
push
ds
jmp
dec
(bad)
push
cli
(bad)
std
dec
gs
fmul
xor
sub
mov
in
outs
shr
mov
mov
xor
jbe
cmc
cmp
ror
out
popf
push
sbb
repz
scas
push
jns
mov
xchg
fucom
xor
add
xor
or
mov
in
cmp
jg
push
mov
push
fldenv
(bad)
xchg
cmp
je
popf
or
jbe
xchg
mov
inc
push
jmp
outs
mov
sbb
fcmovbe
in
add
es
and
lock
jmp
and
mov
sub
daa
xor
sub
(bad)
fcomp
icebp
pop
pop
sar
and
test
ffree
xor
xchg
data16
push
aaa
mov
xor
les
sbb
pop
sbb
jg
sub
mov
and
call
xchg
mov
jo
push
out
pop
scas
cmps
cld
ss
shl
add
xor
aad
jo
mov
popf
not
sub
pop
jecxz
cmp
pop
rcl
aad
xchg
mov
or
xlat
or
push
dec
mov
inc
out
dec
push
push
xchg
lea
mov
lahf
hlt
dec
out
in
inc
xor
mov
fcomp
inc
nop
mov
or
inc
dec
fs
dec
fs
inc
gs
addr16
daa
dec
icebp
push
inc
push
repz
inc
push
sbb
jg
pop
movs
pop
cmps
jecxz
(bad)
push
mov
adc
mov
inc
hlt
ror
adc
js
lds
push
pushf
aas
or
clc
test
imul
xchg
cmp
or
add
push
inc
shl
xor
in
jmp
popa
scas
fnstcw
or
jns
dec
lock
jmp
ret
jae
or
jmp
arpl
mov
imul
inc
push
dec
test
in
and
jns
in
sbb
dec
mov
push
arpl
fmul
jb
arpl
sbb
sub
push
jns
mov
xchg
jecxz
mov
sbb
enter
cs
rcl
lahf
pop
dec
or
jle
pop
mov
ss
loopne
iret
imul
daa
jno
aas
push
movs
sub
imul
adc
mov
adc
dec
bound
call
ins
loopne
int
rcr
in
pop
cmp
cwde
xor
jno
retf
jle
mov
fmul
mov
std
out
rcr
inc
sahf
div
xlat
pusha
mov
bound
push
mov
sbb
popa
xlat
or
iret
pushf
adc
(bad)
stc
or
jp
sbb
xchg
mov
fwait
cli
lahf
les
pop
jg
je
sbb
(bad)
sti
gs
enter
cmp
and
and
sbb
es
xor
call
fs
jg
addr16
inc
ss
add
pop
push
popa
or
loope
jmp
mov
aaa
inc
loopne
scas
lds
aas
mov
movs
push
adc
fiadd
sub
sbb
inc
lea
popf
push
push
mov
pop
sbb
sbb
test
xchg
rcl
inc
clc
movs
mov
cdq
dec
or
test
mov
cmp
or
(bad)
cmp
fisub
pop
ins
iret
dec
mov
ret
cmp
int
fnstsw
cmp
lods
jmp
outs
ret
popa
mov
(bad)
mov
pop
out
sar
xchg
push
sbb
cmps
inc
aad
(bad)
dec
(bad)
cld
inc
loope
push
iret
xchg
aam
mov
jmp
xchg
xchg
fs
adc
inc
outs
pop
or
sbb
add
cmp
xacquire
std
jo
jg
rol
sub
popa
lds
adc
pop
jo
jno
sahf
fcmovu
ror
frstor
movs
nop
mov
push
jb
adc
sub
jle
cwde
mov
mov
lahf
xor
mov
cmps
adc
mov
les
shl
jb
cwde
jle
push
fdiv
stc
nop
enter
mov
fistp
mov
pop
inc
cmovne
fxsave
inc
cmp
mov
aaa
gs
mov
je
ror
gs
call
adc
in
cmp
xor
mov
cmp
or
inc
dec
push
jl
sub
js
lods
cdq
fistp
add
mov
dec
ret
cmp
stos
repz
addr16
icebp
pop
(bad)
mov
sbb
mov
push
mov
xchg
call
sub
dec
repz
xor
inc
loope
lods
ja
popa
adc
jae
and
xchg
mov
outs
mov
jge
jg
xchg
jecxz
inc
rcl
and
or
xchg
sub
inc
imul
out
sahf
fmul
adc
setge
xor
gs
es
cmps
cmp
sahf
jmp
les
jae
add
fdiv
mov
imul
push
test
adc
xor
sahf
jmp
push
sbb
mov
ds
xor
pop
call
ret
and
repz
mov
xor
dec
aam
inc
aaa
lock
mov
mov
pop
inc
and
test
mov
imul
dec
mov
stc
in
jne
and
mov
xchg
jg
jle
sub
sti
lds
jmp
xchg
out
call
add
or
shr
inc
sysenter
cmc
pop
jge
icebp
das
imul
ds
sub
sub
pusha
adc
and
pushf
in
ds
and
outs
fcom
popf
cmp
(bad)
ret
iret
jns
add
xchg
sbb
(bad)
les
mov
cmp
je
jnp
cmp
imul
in
jge
fdiv
cmc
cmp
mov
push
add
shl
aad
inc
jbe
cmp
fst
repz
sbb
xchg
data16
jmp
iret
mov
inc
dec
out
iret
add
dec
mov
mov
sbb
(bad)
push
jae
xor
mov
dec
xchg
pop
jge
daa
add
cmp
or
daa
xchg
jb
cmp
or
js
outs
dec
sub
mov
or
dec
call
adc
mov
pop
sub
xor
neg
out
sbb
dec
icebp
enter
jno
imul
(bad)
popa
ret
dec
ins
inc
ins
mov
std
add
jb
jge
cmp
mov
(bad)
aad
icebp
dec
jbe
je
push
pop
push
js
in
add
add
jno
pop
ret
inc
movs
stos
and
sub
add
sbb
leave
mov
adc
push
sub
test
cs
pop
daa
cmp
pop
call
push
or
lods
dec
ja
xchg
mov
lods
loop
push
xlat
inc
shl
dec
sbb
dec
mov
pop
lods
fwait
outs
pop
lock
outs
xchg
data16
mov
mov
shl
jns
xchg
push
jmp
push
ror
in
or
jne
rdtsc
leave
leave
xor
cld
xchg
xor
jp
lods
push
and
lods
sub
je
xor
jl
mov
cmps
loop
stos
lods
pop
dec
push
sub
fwait
push
lods
std
pop
cld
shl
sub
mov
push
ss
pop
(bad)
cmp
lock
cld
and
hlt
mov
lods
pop
pop
sbb
sub
jecxz
mov
nop
pop
or
inc
cmps
jno
jecxz
jns
sbb
mov
xchg
xchg
or
mov
addr16
ja
clc
std
dec
int3
or
add
fidiv
sar
xchg
mov
mov
xor
mov
(bad)
xlat
inc
inc
dec
nop
push
ret
cmp
daa
(bad)
std
jmp
add
mov
sahf
scas
push
pusha
sbb
stc
iret
je
mov
or
add
and
call
les
es
pop
test
jg
jns
cmp
outs
inc
aaa
retf
shl
sbb
ror
and
mov
aaa
mov
int
ficomp
pop
test
mov
rcr
out
(bad)
pop
and
data16
dec
and
sbb
push
xchg
mov
cs
sbb
rcl
mov
repz
in
test
jae
pop
mov
inc
cmp
lock
iret
push
ss
jp
sbb
xchg
inc
(bad)
fstp
jle
(bad)
in
shr
aas
imul
or
jge
mov
jmp
or
ror
cmps
daa
popa
push
aad
mov
or
adc
loopne
sub
loop
cs
jo
popf
aad
xchg
push
pop
ss
in
and
bswap
mov
shl
retf
pop
push
call
push
div
jo
add
jnp
and
lods
loopne
sbb
xchg
inc
test
inc
addr16
in
cmp
out
(bad)
mov
shl
jecxz
pop
mov
mov
jne
(bad)
jb
fwait
test
xchg
shl
aaa
push
add
mov
call
aas
adc
(bad)
cmc
mov
stos
test
cmp
mov
loopne
adc
push
xchg
mov
pop
clc
retf
mov
sub
loopne
dec
repnz
pop
sbb
mov
inc
and
push
and
mov
pop
and
dec
ror
mov
stos
test
cmp
dec
push
or
pop
or
push
ret
and
jne
adc
clc
mov
rcr
ret
add
aaa
adc
ss
imul
cmp
push
jnp
xor
jg
mov
sub
mov
push
cmp
hlt
(bad)
cmp
dec
cwde
ret
mov
ror
scas
xchg
jmp
sbb
pop
(bad)
shr
fcomp
add
jmp
mov
sbb
mov
aas
or
aas
mov
push
sbb
mov
dec
outs
rcl
adc
icebp
imul
loop
cmps
(bad)
retf
push
shl
and
jae
inc
mov
mov
(bad)
shr
imul
pusha
ret
cmp
xchg
hlt
loopne
push
icebp
sahf
inc
retf
out
mov
jecxz
bound
daa
retf
jno
out
loop
inc
cmp
movs
and
mov
daa
imul
aam
stc
shl
call
pop
div
push
push
ins
push
pop
pop
sbb
mov
movs
stos
add
fidiv
add
stos
fldenv
lods
iret
mov
cli
mul
and
mov
inc
cmp
sbb
mov
mov
in
stos
(bad)
shr
xchg
(bad)
fidiv
sub
sub
xchg
sbb
sbb
scas
and
into
je
dec
fs
call
cli
not
push
mov
in
mov
add
lds
cmp
cmc
pusha
push
push
lea
psubq
jle
in
in
arpl
cmc
xor
les
addr16
inc
int3
addr16
inc
scas
pop
and
xor
(bad)
iret
mov
fs
mov
cmp
mov
sbb
sub
fwait
icebp
(bad)
aad
push
imul
push
sub
adc
add
mov
leave
xchg
xchg
repnz
leave
sbb
out
in
and
test
cmp
cmp
sub
(bad)
and
sub
pop
jnp
mov
aad
fwait
sbb
outs
xchg
xor
add
lock
xor
mov
jnp
mov
stos
(bad)
(bad)
mov
cmps
sub
retf
mov
xchg
inc
imul
popf
test
pushf
pop
scas
icebp
(bad)
test
xchg
hlt
rcr
pop
(bad)
js
and
sbb
mov
aam
sub
sbb
pushf
cmp
call
popf
or
in
cmp
push
mov
(bad)
sbb
ret
stos
xlat
adc
div
aad
pop
pusha
clc
mov
nop
mov
inc
sub
(bad)
mov
add
hlt
jge
std
cld
cwde
movs
dec
sub
push
push
sti
iret
xor
push
cmp
imul
mov
ja
sub
cmp
or
mov
mov
rol
adc
fwait
scas
xchg
dec
mov
mov
stc
cwde
sbb
mov
pop
inc
adc
pop
xor
fsub
sbb
jns
idiv
sahf
test
jp
jp
xor
mov
cmp
add
cmp
inc
in
push
dec
push
fimul
mov
sbb
fstp
mov
ret
and
lods
lahf
or
loop
inc
nop
mov
add
sahf
or
out
push
out
lea
push
je
and
dec
adc
daa
int3
mov
mov
cmp
in
and
xor
jg
popf
cmp
stc
pop
out
adc
out
sub
ret
jne
popa
sbb
lock
(bad)
mov
lock
mov
mov
mov
imul
adc
fcom
xchg
add
in
aam
mov
icebp
(bad)
mov
cmp
inc
shl
sub
out
sbb
add
pop
in
(bad)
loopne
in
xor
(bad)
and
pop
push
sbb
sbb
mov
bound
les
repnz
pop
pop
jge
outs
clc
shr
and
add
ja
or
xchg
cmp
js
fwait
push
aam
xchg
(bad)
ss
xchg
adc
mov
mov
sbb
xor
xor
lea
out
ja
mov
scas
adc
icebp
push
pop
adc
in
or
rcl
aam
arpl
sbb
mov
add
in
(bad)
xchg
call
mov
arpl
ds
inc
inc
pop
call
pop
xor
test
(bad)
push
inc
pop
es
shl
js
pop
push
jo
push
and
or
add
je
cdq
(bad)
push
pop
psubusw
xchg
cmp
imul
arpl
mov
cmp
nop
mov
leave
adc
inc
scas
jae
mov
cwde
add
shl
shl
fsubr
je
setp
cmps
jg
and
(bad)
outs
pop
(bad)
mov
arpl
cmp
and
or
js
push
mov
and
repnz
mov
aam
mov
add
stc
jae
pop
dec
mov
sbb
inc
imul
pop
cli
jns
fsub
push
jnp
push
jl
push
mov
jmp
mov
(bad)
(bad)
ins
or
cwde
xor
pop
jns
ins
shr
inc
outs
push
and
stos
jae
ret
test
and
xor
(bad)
cmps
jne
pop
jae
sti
imul
fimul
cld
ror
lods
push
call
mov
cmovb
inc
aaa
mov
ss
hlt
daa
jl
outs
data16
hlt
cmps
xchg
(bad)
shl
push
in
iret
and
xor
enter
fisub
pop
lock
lock
xor
ds
bound
xor
jo
pop
sub
cmp
mov
push
jle
xchg
outs
and
mov
pop
pop
mov
cmp
das
movs
xlat
data16
add
sub
sub
es
push
mov
mov
into
jmp
cmp
push
adc
xchg
int
(bad)
pop
rcr
shr
frstor
cli
fsubrp
shr
mov
xlat
mov
and
sahf
sbb
arpl
pop
and
mov
clc
xor
retf
popa
push
mov
test
pop
jp
stos
jnp
(bad)
sub
adc
lods
(bad)
mov
lea
fsub
xlat
mov
das
xchg
hlt
call
loopne
retf
and
out
scas
cmp
mov
hlt
jl
test
adc
mov
rcr
repz
pop
iret
mov
test
bound
int3
dec
mov
call
sbb
mov
(bad)
pop
cmps
fisubr
cmp
fwait
pop
aaa
pop
xchg
jmp
fs
ins
mov
mov
fcom
pop
or
xlat
icebp
sub
push
push
into
das
cmp
push
in
pop
test
cli
and
push
pop
mov
stos
nop
test
loop
xchg
call
fcmovbe
dec
aas
les
out
shr
mov
repnz
fdiv
(bad)
rol
inc
mov
inc
ja
and
in
(bad)
loope
aas
mov
js
xchg
fucomip
inc
or
in
xchg
sub
xchg
xor
xchg
arpl
jnp
mov
test
jmp
xchg
and
mov
daa
sub
cwde
xchg
xchg
push
xchg
xor
imul
inc
repz
movs
mov
or
dec
imul
dec
pop
das
jb
nop
sbb
mov
jp
imul
adc
mov
pop
dec
jge
bound
fbld
pop
cld
xchg
push
scas
xchg
lds
cmp
(bad)
add
xor
xchg
outs
arpl
(bad)
ret
cmc
xlat
inc
mov
rcr
je
sub
fcmovnu
pop
pop
and
and
sahf
mov
or
fistp
into
sbb
lahf
outs
pop
outs
sub
loopne
add
inc
mov
pop
pop
cmp
mov
sub
scas
stos
lods
(bad)
mov
mul
xor
outs
or
mov
cmp
jmp
jg
lods
sbb
repnz
fdivrp
les
clc
adc
cs
jle
jmp
mov
mov
scas
ret
push
jbe
push
in
and
fdivr
cdq
or
jmp
dec
arpl
outs
inc
xchg
mov
popf
xchg
call
imul
dec
xor
add
scas
pop
jmp
fcom
dec
fisub
punpckhbw
sbb
adc
inc
inc
lahf
daa
add
and
pop
pop
aaa
pop
push
xchg
or
dec
jbe
dec
aam
gs
ret
jno
dec
into
loope
daa
or
repz
jecxz
ins
mov
and
call
push
cmp
pop
into
sahf
add
sub
sar
jmp
loope
mov
push
stos
cmp
and
stos
push
mov
xor
loopne
mov
jno
rcl
dec
or
jne
inc
test
sub
js
sub
mov
pop
mov
lods
ins
xchg
mov
fild
adc
sti
call
fdiv
in
push
xor
lds
lahf
iret
or
dec
mov
adc
pop
frstor
inc
pop
dec
push
je
mov
push
jg
inc
jmp
fwait
movs
idiv
pop
outs
test
dec
loop
push
fcmovne
adc
je
mov
imul
pop
(bad)
rol
jle
dec
aaa
sbb
push
nop
push
cld
cmp
bound
jbe
mov
jmp
addr16
push
dec
pop
adc
jle
pop
dec
and
test
(bad)
in
bound
push
inc
mov
adc
push
dec
rcr
(bad)
mov
or
into
dec
sbb
and
clc
in
push
xor
(bad)
jge
mov
xchg
xor
repnz
fistp
ins
add
loope
push
add
cmp
rol
sbb
xor
(bad)
ins
(bad)
pop
xor
jp
cmc
movs
call
jge
mov
pop
dec
push
add
xchg
sahf
daa
sbb
pushf
aaa
je
mov
or
daa
imul
icebp
mov
jae
stos
xchg
push
clc
stos
sbb
ret
mov
xchg
xor
pop
pop
mov
aaa
xor
push
inc
push
push
lahf
aaa
mov
dec
jno
dec
push
mov
mov
fisttp
call
test
clc
add
mov
aam
dec
mov
repnz
cmc
and
sub
xlat
xchg
pop
in
mov
dec
leave
adc
or
aaa
bound
lock
and
cmp
fwait
add
push
sub
mov
repz
jp
mov
or
aad
sub
mov
lea
mov
aam
mov
mov
mov
xor
dec
push
mov
jb
jo
bound
inc
inc
mov
cmp
jp
mov
(bad)
cmp
ret
mov
mov
jl
test
in
pop
sbb
lods
inc
inc
pop
fs
fist
mov
or
std
rol
sub
xchg
pop
hlt
and
mov
iret
(bad)
call
pop
je
fsub
loopne
push
sbb
push
ins
add
ffreep
cmp
mov
js
test
outs
jne
jno
ror
js
rol
shr
mov
aad
xlat
jmp
xlat
push
enter
scas
push
add
lds
rol
loop
addr16
mov
sahf
in
popa
sahf
fist
js
ret
xadd
jl
cmps
std
adc
repz
push
(bad)
fisub
xor
dec
mov
mov
or
xchg
xor
ja
(bad)
clc
popa
dec
gs
dec
ds
aam
jle
test
cwde
loope
push
aam
push
sbb
into
add
rep
and
cmp
lods
add
bnd
test
sar
scas
test
pop
adc
sbb
jns
inc
fimul
mov
adc
jmp
push
fisttp
sub
arpl
add
test
(bad)
in
or
xchg
pop
or
ja
movs
inc
cwde
lods
fsqrt
outs
call
pop
movs
arpl
pusha
xor
sub
sbb
mov
dec
aas
sub
out
call
lods
mov
div
mov
xchg
pop
inc
xor
push
call
or
ins
mov
mov
push
ds
mov
push
mov
scas
inc
sbb
adc
xchg
ja
dec
push
cmp
mov
xchg
out
inc
xchg
gs
aaa
ror
and
icebp
pop
add
adc
ret
mov
dec
mov
outs
mov
jno
push
clc
scas
addr16
mov
aam
les
sahf
cwde
add
sbb
add
test
cmp
cmp
mov
scas
fbstp
gs
jmp
adc
jmp
sub
pushf
aas
repnz
je
mov
add
kandnb
mov
sbb
push
and
retf
mov
xor
jns
dec
pop
(bad)
mov
mov
add
push
or
or
mov
and
push
call
push
retf
into
rcl
out
xor
adc
cmp
les
imul
imul
pop
push
and
sahf
in
mov
jg
pop
mov
push
jp
leave
stos
les
aam
daa
outs
call
inc
jl
inc
cmp
pop
jne
jne
rol
jmp
mov
jecxz
sbb
xor
mov
cmp
cmp
xchg
push
jnp
fcmovb
xor
sar
pop
cmp
jno
(bad)
icebp
lahf
mov
mov
outs
outs
cmps
add
or
out
rcl
sbb
aam
pop
add
mov
call
sahf
inc
inc
push
cmc
ret
jb
pop
jecxz
aad
mov
mov
out
ja
dec
int3
pusha
pusha
mov
lock
(bad)
dec
mov
mov
out
icebp
daa
in
mov
fcomp
dec
(bad)
push
inc
shl
push
add
xor
fldcw
xchg
jl
rol
cli
mov
jae
hlt
data16
out
jl
jne
ficom
es
leave
repnz
lods
mov
jno
adc
bound
add
pop
mov
call
lds
out
adc
fptan
jp
iret
dec
adc
cmps
cwde
faddp
std
rcr
clc
enter
out
rol
xchg
ficomp
xor
fcomi
inc
jmp
outs
ds
ins
jmp
pop
or
fucomp
int
sbb
lahf
add
or
xor
jbe
adc
(bad)
lock
ins
sbb
push
je
dec
mov
test
sbb
mov
pop
xchg
push
neg
xchg
aaa
hlt
xchg
xor
shl
cmps
xchg
mov
aam
jns
sbb
inc
push
popa
jmp
fwait
add
or
pop
ja
std
add
lods
rcr
xchg
cmp
push
sub
sbb
das
cmp
ins
outs
and
ror
pop
fild
icebp
and
(bad)
mov
push
cmp
(bad)
popa
lock
jnp
test
sub
in
mov
dec
mov
jmp
stos
xchg
mov
lds
mov
mov
pop
xor
adc
mov
xchg
retf
cmp
xchg
xor
popa
or
mov
inc
out
or
lods
dec
test
xor
pusha
cmps
cwde
jne
cli
xchg
mov
push
pop
xchg
jo
ficomp
xchg
pop
cmps
es
loopne
call
push
add
and
mov
arpl
xchg
xchg
out
out
out
bound
xor
ins
sub
rcr
scas
pop
icebp
inc
call
fcmovne
test
call
push
popf
mov
mov
test
jmp
je
or
mov
cmps
cmp
sub
pop
(bad)
mov
inc
mov
inc
or
cmp
rcr
in
jns
iret
stc
arpl
shr
outs
retf
outs
jmp
jne
mov
mov
pushf
inc
push
inc
retf
pop
rol
popa
dec
sub
mov
neg
pop
add
mov
js
push
add
or
pop
sbb
repnz
ficom
and
jns
out
add
ror
loop
int3
shl
gs
in
dec
inc
sub
js
push
imul
test
icebp
lahf
dec
xchg
push
int3
fcomp
mov
add
imul
ds
sbb
(bad)
sbb
add
out
idiv
stos
imul
xchg
sub
(bad)
int
aaa
push
sahf
lods
pop
cli
or
sub
pusha
dec
mov
inc
imul
mov
xor
adc
loope
ret
sbb
int3
sbb
mov
stc
mov
idiv
(bad)
cmp
adc
(bad)
sub
or
jl
arpl
aad
xchg
mov
mov
xor
loopne
jp
ret
and
or
push
neg
(bad)
out
adc
xchg
retf
push
es
jecxz
xor
sub
and
adc
dec
mov
cdq
add
adc
jle
push
addr16
ds
add
das
sub
lods
xchg
sub
sti
test
ror
fimul
fdiv
neg
push
fcmovu
movs
dec
sub
or
inc
sbb
mov
dec
mov
pop
gs
repz
daa
pop
int
cmc
inc
aam
mov
call
pop
ret
shl
jne
scas
mov
out
and
jnp
stos
pop
(bad)
sti
fcom
jmp
push
imul
ret
call
mov
mov
xchg
clc
fld
loop
inc
xlat
or
and
dec
arpl
bswap
test
push
add
(bad)
jge
dec
adc
and
std
push
lods
mov
add
imul
mov
add
inc
dec
popa
pop
sub
inc
adc
and
or
mov
mov
dec
inc
call
pop
pop
loop
xlat
ror
add
test
into
mov
out
inc
pop
dec
cmp
sub
sahf
adc
pop
inc
mov
and
das
std
mov
shl
xchg
cmp
call
loop
pop
mov
mov
shl
sub
fistp
repnz
adc
and
and
cmps
lock
cmp
inc
pop
(bad)
lods
das
fimul
outs
adc
sub
jbe
shl
stc
cdq
mov
xor
inc
fidivr
dec
push
shr
mov
out
push
mov
int3
les
jecxz
stos
push
test
test
test
adc
add
cmp
xchg
and
cli
mov
jmp
lea
cmp
mov
out
jmp
(bad)
jns
and
cmp
xor
movs
sub
sub
pop
mov
sahf
jg
mov
cld
shl
mov
retf
out
mov
popa
mov
pop
xchg
clc
and
ret
xchg
jae
pop
jo
es
mov
inc
fs
and
ret
jmp
dec
mov
cli
fnsave
push
(bad)
xchg
pushf
ret
mov
mov
adc
movs
popf
movs
icebp
stos
jmp
mov
mov
cmp
xlat
mov
lods
xchg
cmps
inc
repnz
mov
test
in
and
int3
xchg
push
mov
and
push
sbb
stos
jmp
cli
scas
push
mov
(bad)
mov
in
push
mov
mov
leave
not
loop
xchg
das
cmps
and
outs
mov
jp
ret
and
xor
xor
jbe
push
sub
push
mov
push
mov
dec
cmp
fdivr
push
movs
repnz
scas
(bad)
jno
jp
movs
jge
addr16
mov
and
movs
popa
out
call
call
nop
jno
push
dec
daa
shr
call
sbb
ins
or
sbb
rcr
ja
loope
push
or
retf
or
retf
call
icebp
outs
sub
add
sub
pop
sbb
test
cmp
lea
adc
sar
mov
dec
cmp
jne
ins
pop
cli
cmp
jne
pop
mov
(bad)
mov
dec
div
dec
push
push
mov
out
out
das
adc
das
push
inc
sti
bound
out
inc
movs
push
sub
pop
and
in
lahf
jmp
lea
js
inc
push
inc
nop
mov
leave
lock
and
sub
pop
jge
fsubr
inc
push
fsubr
inc
aaa
mov
add
adc
shl
dec
test
addr16
fild
cmp
je
dec
mov
fsubrp
test
mov
dec
xor
xlat
dec
cmp
dec
and
xor
mov
or
ret
add
add
cs
mov
out
scas
xchg
push
iret
daa
xchg
jmp
xor
pushf
popa
xchg
xchg
into
rcr
and
mov
(bad)
in
call
lods
fdiv
stc
push
(bad)
sahf
dec
and
push
push
or
call
mov
push
in
lock
imul
iret
fwait
ja
cmp
sub
cmc
mov
cld
jp
inc
(bad)
jle
sbb
sbb
aam
dec
pop
sar
imul
add
jge
nop
ret
xor
fnsave
or
lock
call
lahf
push
pop
xor
mov
mov
push
(bad)
int3
jmp
aam
inc
sub
jp
xchg
pop
addr16
jae
jb
iret
jmp
dec
pop
popa
push
push
data16
ins
adc
icebp
adc
sub
scas
imul
jbe
out
lods
add
inc
in
mov
and
xchg
jp
retf
mov
shr
add
adc
jo
mov
add
scas
in
clc
xchg
or
pop
paddsw
jge
(bad)
fadd
push
add
lods
into
int3
mov
pop
pop
push
jcxz
dec
and
push
popf
not
dec
and
sbb
sar
mov
xchg
mov
fs
push
retf
add
cmp
inc
dec
das
mov
jecxz
and
cli
outs
test
arpl
movs
hlt
xchg
(bad)
pop
jbe
data16
push
fistp
std
scas
sbb
push
mov
mov
lods
retf
jnp
pop
push
push
xchg
cmp
push
sbb
(bad)
jmp
js
shl
mov
test
(bad)
mov
add
cmps
jb
mov
and
xor
pop
fiadd
nop
add
inc
and
xchg
test
xor
adc
icebp
pop
test
frstor
push
repnz
movs
mov
and
adc
jno
jl
xchg
xchg
test
dec
mov
jns
icebp
xchg
movs
or
and
cdq
into
and
push
cmp
cmps
popf
(bad)
ss
dec
ins
test
cwde
cmc
xchg
adc
inc
std
sub
mov
push
pop
xor
hlt
outs
mov
loope
imul
pop
mov
scas
in
(bad)
andps
lea
adc
jle
arpl
leave
loopne
mov
imul
or
mov
pop
sti
add
mov
(bad)
ja
adc
cmp
mov
aad
sbb
(bad)
adc
fadd
stos
add
(bad)
shl
mov
sbb
push
mov
loop
out
mov
mov
mov
imul
ja
in
div
loope
cmps
push
mov
add
in
push
push
ja
mov
in
das
xchg
(bad)
mov
sub
xor
push
ds
sub
mov
sub
neg
ja
sub
xor
adc
pop
push
cmp
sub
mov
adc
dec
test
inc
fsub
pusha
push
(bad)
in
jo
mov
mov
pusha
in
add
add
ret
ret
adc
rcl
(bad)
call
cwde
hlt
xchg
mov
stc
mov
and
(bad)
push
sub
and
aas
stos
inc
rcr
aas
xchg
aad
lahf
mov
jp
jmp
adc
fnstenv
jecxz
(bad)
dec
cmp
sub
ror
fsub
mov
add
mov
jbe
xchg
mov
push
cmp
into
gs
nop
inc
inc
xchg
scas
clc
loopne
mov
popf
icebp
and
xchg
fimul
cmp
out
inc
movs
pop
xor
cmps
or
mov
leave
(bad)
cli
xchg
jmp
int
out
sbb
(bad)
bound
mov
stos
sar
dec
div
leave
stos
mov
mov
xchg
cli
nop
sub
cmp
mov
and
test
outs
mul
fwait
xor
mov
xor
adc
retf
aam
jb
push
inc
not
into
mov
ret
xor
std
(bad)
sub
jmp
and
xchg
outs
cld
cld
les
test
jnp
dec
sbb
sbb
jno
jp
jae
call
pop
add
add
into
cmps
outs
push
add
xor
mov
imul
jns
sub
or
sti
into
xchg
sub
mov
pop
cmp
add
iret
enter
mov
cdq
rol
lods
xlat
xchg
bound
ins
in
sub
adc
jno
stos
int
(bad)
shl
stos
ds
mov
and
or
iret
dec
gs
stc
pop
mov
loop
scas
jno
and
ja
sbb
outs
cli
push
(bad)
hlt
push
push
lock
cs
xchg
dec
add
xor
or
xor
enter
loope
std
inc
movs
pushf
jecxz
and
mov
movs
push
jbe
dec
dec
and
test
aas
ror
cdq
ja
inc
mov
mov
outs
nop
pop
fwait
test
push
fadd
sbb
add
ror
mov
outs
inc
stc
pop
cmps
mov
repz
or
adc
inc
xor
add
mov
mov
adc
outs
mov
loop
(bad)
push
jle
dec
push
aas
sbb
pop
or
xchg
mov
std
imul
cdq
push
sbb
xor
and
sbb
adc
mov
ins
cmp
lods
(bad)
dec
push
mov
pop
jp
hlt
loopne
or
fbld
aad
movs
sar
mov
jle
popf
mov
(bad)
test
cmp
lods
sbb
mov
or
fdivr
adc
outs
cli
xlat
jne
jno
clc
mov
mov
mov
mov
std
mov
push
mov
shr
cmp
xchg
in
fst
xchg
xor
mov
inc
or
mov
jno
jns
xchg
(bad)
rcl
jle
jbe
repnz
imul
mov
jbe
pop
retf
js
popa
jae
mov
repz
or
and
pusha
push
sbb
daa
std
xor
int3
rcr
ins
cmp
adc
inc
mov
rcl
sub
pop
test
or
jnp
pop
cdq
sbb
add
jmp
jl
jns
icebp
fild
xor
scas
mov
dec
mov
out
mov
pop
or
outs
pop
add
cmc
xor
pop
sub
cmp
retf
pop
lea
pop
rcl
xchg
sahf
ret
and
or
add
aad
push
xchg
jnp
xchg
or
inc
outs
or
xor
fwait
pop
xchg
dec
sub
ds
sbb
lea
dec
dec
je
add
and
out
jbe
sub
sti
push
js
(bad)
and
sub
mov
and
pop
mov
xor
ds
lods
mov
xor
mov
(bad)
loop
out
or
ins
rcl
popa
jg
push
jae
(bad)
dec
mov
jmp
mov
movs
sbb
(bad)
scas
in
(bad)
pop
jno
cmps
xchg
jo
sbb
cld
inc
cmp
arpl
pop
inc
xor
dec
ret
test
mov
pusha
retf
ret
js
pop
sahf
pop
ins
je
pushf
loopne
cmp
fs
inc
or
mov
cmps
mov
mov
scas
addr16
call
and
gs
fcomp
push
xor
dec
mov
adc
sub
out
pop
fadd
cmp
imul
adc
fisttp
lods
(bad)
add
aaa
push
loope
jnp
sbb
es
and
cmp
push
cmp
(bad)
jl
xlat
std
pop
mov
push
sti
mov
call
inc
out
pop
pop
mov
in
sbb
cld
mov
xchg
repnz
sahf
inc
push
mov
xchg
cmp
test
mov
adc
out
pop
xchg
out
fcmovnbe
pop
dec
push
fld
lods
cmc
adc
je
cli
test
dec
test
loop
mov
icebp
loop
dec
sub
aaa
mov
mov
stos
cmp
jns
cmp
xor
sbb
inc
and
xchg
pop
in
add
inc
mov
inc
push
stos
push
jne
aad
call
loop
or
loopne
mov
test
pop
popf
sahf
mov
mov
mov
push
push
jle
in
rcr
jmp
and
(bad)
(bad)
repnz
sbb
in
repnz
cwde
dec
mov
int
repnz
int
pop
jmp
les
mov
push
mov
mov
stos
add
jnp
(bad)
pop
movs
popf
pop
xchg
or
adc
loope
push
xchg
inc
inc
mov
mov
push
test
cmp
les
aam
and
mov
icebp
fld
in
imul
dec
jns
out
push
fmulp
sub
cmp
div
lea
test
jae
cmc
idiv
sub
fs
push
or
mov
mov
(bad)
mov
mov
adc
loopne
retf
add
mov
sahf
arpl
inc
push
pop
and
loope
sahf
pushf
jmp
cmp
and
retf
dec
adc
shl
mov
test
dec
add
je
jb
jle
inc
add
fmulp
jmp
cmc
js
fstp
adc
data16
loopne
adc
lea
pushf
sub
sbb
push
dec
in
push
jnp
in
ret
ss
sbb
fild
mov
push
add
push
adc
cmp
retf
ret
inc
inc
fisubr
fld
int3
sbb
pop
jl
dec
loop
test
xchg
lock
and
sbb
cli
cmp
xchg
push
imul
xchg
(bad)
add
inc
clc
sub
ins
pop
xor
int3
and
ins
sub
jle
movs
jecxz
retf
xchg
add
jns
test
lahf
push
jbe
cmp
(bad)
xchg
(bad)
or
js
cmp
ja
jmp
inc
sub
daa
dec
mov
retf
dec
mov
call
repnz
in
jb
iret
inc
pop
inc
xor
out
dec
lds
add
pop
pop
add
(bad)
and
(bad)
jmp
inc
fwait
mov
dec
enter
jmp
jmp
les
lea
popa
xchg
jnp
js
aaa
leave
movs
fneni(8087
sub
inc
repz
or
jmp
xor
xor
fst
inc
scas
movsx
in
jmp
mov
movs
cdq
inc
mov
jmp
lock
xchg
add
inc
sar
inc
sbb
add
fidiv
or
imul
cmp
inc
fldenv
stc
xor
lods
test
mov
cmp
fist
in
cli
jnp
xor
dec
mov
mov
cmp
jb
mov
test
inc
push
mov
hlt
mov
lods
lods
adc
or
leave
lahf
test
sub
clts
fwait
jmp
stos
mov
add
push
ficomp
push
imul
dec
pop
inc
loop
fisubr
pusha
(bad)
mov
je
cwde
data16
aas
imul
call
xchg
mov
movs
xchg
push
retf
sub
adc
add
push
mov
push
aam
dec
add
xor
mov
push
dec
sub
retf
cmp
std
and
mov
cld
xor
cmps
dec
xchg
cmp
lods
adc
fimul
mov
retf
out
popa
add
mov
js
mov
mov
or
xchg
bound
(bad)
fwait
in
push
sbb
jmp
sbb
dec
push
ret
(bad)
(bad)
pop
mov
push
in
mov
adc
shr
test
ins
loop
jl
mov
jmp
nop
inc
je
outs
lahf
les
pop
xor
dec
mov
mov
mov
mov
jmp
sbb
ins
sti
pop
jecxz
sub
sbb
xor
fbld
sar
pop
and
ret
xor
retw
mov
daa
mov
out
clc
add
stos
jmp
pop
retf
jae
(bad)
call
dec
mov
outs
xchg
or
mov
or
sti
ror
cs
sub
rcl
int
aaa
es
ja
ins
jg
cmp
xchg
imul
stos
daa
sbb
fs
out
repz
xchg
inc
call
pop
add
mov
and
ins
fadd
movs
pop
add
pop
dec
dec
add
pop
cwde
push
mov
mov
ss
and
ins
fnstcw
mov
mov
cmp
push
mov
pop
cmp
test
xor
popf
addr16
cmp
stos
sbb
scas
and
cmp
inc
jae
xchg
mov
mov
movs
nop
popa
mov
dec
sbb
sbb
xor
fsubr
xor
jno
mov
rol
pusha
xchg
push
mov
xor
cmp
rcl
in
popf
inc
mov
call
cwde
jl
jno
pop
xor
cli
jno
pop
mov
cmp
mov
inc
sbb
sub
adc
jns
hlt
pop
(bad)
rcl
out
xchg
ja
dec
lods
and
sub
popa
(bad)
jl
xchg
es
in
test
dec
add
and
test
int
test
lock
ficomp
ss
(bad)
xchg
or
push
pop
daa
push
cmps
repnz
jmp
sub
cli
jo
outs
xor
bound
xor
test
inc
and
push
cwde
dec
(bad)
cmc
mov
ds
xchg
pop
icebp
test
dec
add
das
sbb
xor
ds
mov
jge
outs
cwde
fld
movs
fs
popa
mov
sbb
in
pop
push
cmp
inc
or
and
push
inc
cld
mov
cmp
bnd
and
into
jbe
push
xcrypt-ctr
cmps
ficom
and
jge
mov
and
(bad)
and
pusha
shl
mov
cli
and
test
jle
popa
dec
outs
xchg
xor
imul
inc
inc
jnp
retf
and
shl
xchg
lock
push
in
mov
div
fist
push
popa
push
and
xchg
jl
cwde
retf
xchg
mov
mov
cli
lock
dec
dec
inc
outs
mov
mov
lea
mov
ja
mov
fsub
not
iret
ins
fidivr
out
inc
aam
(bad)
mov
call
sub
(bad)
push
into
stc
aad
xchg
inc
pop
xchg
push
push
cli
je
adc
fist
mov
inc
(bad)
neg
dec
jns
mov
cmp
dec
or
sub
sbb
dec
mov
adc
fdivr
loope
cmp
cmps
jb
cmp
cmp
push
mov
inc
and
dec
sbb
pop
fiadd
cmp
movs
pop
pop
add
mov
add
dec
add
adc
movs
pop
mov
add
lea
pop
cdq
add
test
int3
dec
in
push
ret
test
cdq
movs
adc
mov
push
sbb
mov
dec
xor
test
inc
lahf
jp
adc
mov
mov
dec
scas
dec
xchg
(bad)
mov
jecxz
fwait
loope
or
push
lea
fwait
ss
push
and
lods
push
adc
or
lods
iret
mov
sbb
xlat
les
mov
bound
inc
jmp
ror
fld
pop
inc
lods
neg
ror
das
les
add
or
inc
in
jmp
into
std
push
xchg
push
jnp
loop
mov
xor
add
std
es
adc
ds
or
call
cmp
push
cmp
outs
in
retf
cmps
rol
jb
dec
cmp
sbb
cmps
cwde
test
xor
cli
mov
push
repz
data16
adc
pusha
and
iret
retf
in
call
and
retf
adc
cmps
imul
or
mov
mov
mov
stos
in
stos
mov
mov
pusha
mov
pusha
xlat
pop
movs
push
mov
xlat
ss
in
inc
ja
rcr
sub
inc
adc
or
iret
inc
cmp
mov
jae
xor
imul
mov
arpl
push
xchg
out
rcl
imul
push
xor
mov
adc
inc
addr16
xor
cld
rol
jns
movs
mov
in
jne
xchg
mov
xor
cmps
jl
xor
pop
xchg
jmp
or
dec
jl
or
inc
cmps
sar
leave
xchg
xor
xchg
pop
sub
pop
sbb
repz
pushf
in
leave
dec
cli
add
test
ds
call
int
and
repz
inc
xchg
std
aad
cdq
sbb
jbe
xchg
and
mov
imul
xchg
test
cmps
test
mov
popf
add
fcomp
xchg
inc
out
push
sar
test
stos
mov
out
mov
into
sbb
adc
inc
enter
cli
ret
scas
xchg
sar
ror
sbb
push
dec
call
cmp
jb
sbb
pop
push
adc
fst
psubd
xor
rol
call
icebp
fidiv
or
ja
inc
or
cld
inc
retf
in
sahf
arpl
ret
push
dec
pop
hlt
dec
shr
adc
lahf
and
push
dec
lahf
js
pushf
dec
arpl
neg
and
rcr
inc
add
and
pop
pop
add
daa
mov
out
sti
bound
adc
das
scas
or
cmp
test
xchg
ret
daa
aas
(bad)
xchg
inc
or
data16
push
iret
mov
cmps
inc
xchg
push
idiv
xchg
fstp
int
or
in
out
mov
pushf
cmc
cmc
adc
and
hlt
sub
push
cmp
xchg
jmp
mov
call
pop
push
popa
mov
xor
pushf
fistp
sbb
aaa
lahf
cmp
cmc
xchg
adc
repnz
xchg
mov
lock
add
mov
popa
add
lea
inc
sbb
cmps
pop
shr
jne
popa
jnp
call
sub
jns
test
call
pusha
inc
not
jg
inc
adc
mov
push
mov
mov
aam
and
les
cmps
jmp
mov
mov
(bad)
(bad)
pop
jle
cwde
adc
std
call
dec
aaa
xor
pop
cs
dec
cmp
in
pop
leave
add
ror
jge
mov
gs
mov
push
lds
ficom
jno
adc
jle
dec
xchg
xchg
xor
add
mov
fimul
int3
mov
dec
out
and
scas
dec
sbb
in
mov
loopne
mov
push
lea
and
lahf
es
xchg
call
push
(bad)
pop
ret
imul
sub
test
sbb
dec
mov
addr16
inc
xor
add
lods
mov
jbe
mov
hlt
mov
or
dec
adc
pop
or
sar
xor
fs
jg
pop
stos
fisubr
outs
loope
and
dec
push
jle
ror
inc
in
je
jl
xchg
jno
mov
cmps
in
push
or
(bad)
(bad)
and
jno
push
jle
cld
jbe
int3
push
jnp
xor
sub
xor
jns
push
pop
je
shl
data16
(bad)
mov
fcom
jmp
mov
stos
dec
aad
mov
retf
cmp
xor
add
inc
cli
into
push
xchg
push
cmps
(bad)
cmp
hlt
jnp
outs
sti
xchg
mov
mov
out
xlat
dec
sub
or
and
mov
push
jg
add
enter
xchg
or
sahf
jg
cmpxchg
and
std
out
sbb
and
cld
daa
mov
popf
adc
mov
inc
xchg
xchg
mov
mov
fild
xchg
movs
fwait
mov
shl
popa
dec
(bad)
ja
into
outs
adc
ror
and
pop
test
ficomp
sbb
pushf
xor
pusha
test
mov
movs
and
mov
retf
and
aaa
inc
cs
in
or
xchg
cmp
loope
enter
or
push
sahf
fistp
jl
mov
in
dec
dec
cmp
shl
(bad)
(bad)
adc
jmp
xchg
pop
hlt
or
mov
mov
xchg
pop
cmp
xchg
sbb
jecxz
and
xor
xchg
ja
mov
sbb
popf
hlt
imul
(bad)
fld
sub
(bad)
ja
ror
ja
loop
dec
sub
stos
sbb
int3
das
add
mov
push
test
or
test
outs
aas
test
test
push
mov
ret
setns
gs
stos
call
mov
mov
cmp
sub
jb
xor
in
push
sahf
mov
sub
call
popf
shr
jns
adc
arpl
lea
out
dec
jmp
iret
pop
les
push
inc
mov
stc
sbb
pop
int3
inc
dec
popf
div
repnz
daa
add
out
fwait
call
inc
outs
sbb
push
js
ror
pop
stos
rol
pop
pop
test
imul
xor
fisub
sub
ds
(bad)
mov
push
(bad)
push
ds
sbb
sbb
fiadd
rcr
shl
cwde
or
push
outs
add
jmp
test
retf
lods
mov
inc
jp
adc
sub
nop
mov
test
dec
pop
push
adc
jp
clc
int3
rcr
xlat
adc
cmc
sar
aam
daa
lahf
inc
push
mov
and
mov
jecxz
mov
outs
imul
leave
dec
retf
jmp
(bad)
xor
mov
inc
pop
repnz
jno
push
loopne
cmp
add
(bad)
std
fidiv
lea
xchg
xchg
enter
cmp
ret
call
sbb
mov
push
add
pop
cwde
sub
out
jg
adc
ja
sub
and
rcr
inc
xchg
pop
or
dec
xor
jge
adc
xchg
stos
xchg
dec
lods
sahf
hlt
cwde
xor
sbb
inc
pushf
adc
sahf
or
cmps
adc
fild
loopne
jl
mov
arpl
push
fcmovnbe
(bad)
push
add
loopne
and
or
sub
lea
dec
pop
movs
fld
fucomi
mov
inc
out
jne
in
xchg
repz
xchg
pusha
or
dec
out
movs
push
fild
xchg
cdq
adc
fldenv
or
movs
mov
mov
(bad)
movs
or
xchg
mov
sahf
test
shl
out
(bad)
jne
dec
bound
sub
(bad)
int3
cmps
hlt
movs
and
jmp
sbb
ret
cmp
inc
iret
iret
mov
(bad)
popa
mov
packsswb
dec
int3
add
leave
mov
mov
sbb
movs
push
ficomp
pop
test
ret
cmp
jle
add
or
jns
dec
and
xor
jmp
sub
or
xchg
mov
ret
and
inc
cli
sti
stos
icebp
push
gs
mov
cmps
hlt
inc
(bad)
xor
adc
cmps
push
aaa
cmp
xchg
mov
mov
out
add
std
sbb
adc
pop
movs
cmps
mov
inc
inc
or
dec
and
push
push
lahf
push
es
inc
pop
and
cmp
pop
jp
scas
push
pop
fdiv
jns
sahf
jg
inc
mov
push
loope
jo
xlat
sub
dec
jns
mov
jae
pop
cmp
mov
cli
inc
call
mov
cmps
cmp
mov
imul
add
sub
dec
or
ret
xchg
shr
or
adc
sbb
ror
xchg
aaa
xchg
cmc
adc
dec
jmp
pop
jp
push
sahf
or
mov
cmp
cmp
cld
les
lock
retf
movs
cmp
aas
inc
adc
sub
cmps
out
sbb
(bad)
inc
jge
out
mov
pop
mov
and
cwde
adc
in
push
sbb
add
dec
shl
das
aas
jae
pop
outs
mov
test
mov
retf
aaa
xor
jmp
sbb
add
test
mov
inc
push
cmp
xor
ds
jne
(bad)
jns
inc
int
dec
xchg
jmp
jg
xor
inc
retf
pop
sub
push
sti
or
cmp
stos
jle
add
pop
out
jb
je
cwde
fiadd
fild
jmp
push
adc
icebp
stos
bound
adc
fsub
neg
stc
pmulhw
je
ss
ret
cmp
jb
dec
pusha
push
sub
inc
cmp
cmps
mov
xchg
cmp
mov
fdiv
mov
add
cmp
lock
(bad)
mov
aaa
jp
jg
mov
(bad)
test
jno
push
sbb
mov
cdq
hlt
mov
mov
adc
dec
add
pop
popa
dec
xchg
xchg
(bad)
prefetch
pusha
dec
xor
mov
mov
shl
ss
sub
inc
(bad)
(bad)
pusha
pop
movs
inc
sbb
sbb
mov
mov
pop
mov
push
xor
push
sub
loope
push
mov
lahf
pusha
dec
adc
dec
add
jmp
mov
in
push
iret
xchg
mov
xchg
mov
fs
push
xor
lds
call
ret
cmp
dec
jns
push
fsub
repz
mov
in
dec
scas
aam
fwait
jle
or
out
jg
adc
inc
jnp
mov
dec
jo
pop
adc
dec
inc
cmp
retf
mov
add
and
xor
in
xor
inc
fadd
aad
sti
lock
xor
add
lods
fs
sbb
fisttp
inc
mov
cmp
inc
xchg
dec
test
in
pop
mov
mov
cdq
adc
lods
leave
xchg
and
ss
jg
and
(bad)
pop
xchg
fstp
dec
out
daa
jp
js
add
xchg
pop
loopne
sahf
(bad)
xor
fistp
or
jg
and
fst
and
and
div
cld
iret
push
je
cs
xor
push
mov
jge
jle
mov
adc
or
sbb
ret
pop
cmps
jge
adc
mov
jmp
xor
in
pop
iret
loopne
mov
es
iret
xchg
aam
icebp
iret
sbb
xlat
sub
dec
and
jg
mov
and
cmp
sti
jecxz
(bad)
cld
xor
xchg
daa
and
add
add
mov
jo
adc
mov
cmp
fdivr
pushf
stos
lds
icebp
cs
icebp
mov
int
scas
ret
pop
sub
pop
pop
or
nop
cld
add
push
stc
cmps
aad
add
add
nop
mov
xchg
lods
adc
sub
adc
aas
pop
mov
cmp
(bad)
adc
dec
gs
mov
ins
faddp
mov
sahf
push
mov
push
mov
jp
push
add
in
push
mov
dec
es
in
pop
dec
jg
inc
jns
aaa
cmps
clc
and
xchg
lds
mov
in
jno
inc
dec
inc
aas
pop
test
in
xchg
push
call
shl
jo
arpl
(bad)
pop
leave
or
aaa
mov
cmp
dec
mov
cli
lds
xchg
mov
retf
das
dec
sahf
inc
cmps
mov
xchg
mov
out
aam
lahf
xor
mov
cmc
retf
stos
fwait
xor
push
loop
sti
popf
ins
stos
cmp
pop
xor
push
mov
or
xchg
xor
pop
test
mov
fcomp
mov
mov
inc
lds
pop
xor
or
mov
fisttp
ret
dec
fdivr
xor
es
lea
add
jo
jecxz
add
movs
cmps
mov
test
dec
popf
hlt
mov
add
mov
(bad)
or
add
shr
retf
fidiv
pop
cwde
mov
movs
imul
xor
sbb
mov
inc
out
mov
or
outs
pop
and
sbb
daa
push
sub
retf
cmp
adc
cs
dec
cmp
repz
add
cmps
call
cmp
adc
retf
push
mov
loopne
mov
inc
stos
mov
xchg
adc
sbb
sbb
pop
mov
adc
push
jmp
xor
in
inc
out
xchg
daa
xor
add
cmp
or
cmp
pop
fcomp
in
aaa
fcom
adc
mov
mov
add
out
or
inc
fdiv
aas
sahf
jo
pop
or
pop
rcr
mov
push
sub
mov
inc
or
ret
jnp
enter
pusha
outs
pop
or
mov
out
loopne
and
xchg
sbb
jns
(bad)
test
add
sub
push
sub
inc
cmps
callw
inc
pop
pop
iret
std
loopne
mov
cmps
push
fcomi
jae
stc
mov
fbstp
ss
popf
and
aas
rcr
pop
mov
inc
jmp
lds
pop
(bad)
cld
lods
push
aam
add
jcxz
dec
ret
dec
jo
sbb
inc
xor
into
lock
fnsave
out
mov
push
pop
es
(bad)
popfw
jl
scas
inc
loope
mov
lods
call
pop
add
push
jb
mov
and
pop
in
sti
push
dec
(bad)
in
adc
dec
jp
pop
ret
jae
xor
push
fadd
and
fdivr
jmp
dec
pop
(bad)
(bad)
cmp
mov
les
push
hlt
and
xchg
inc
inc
xor
test
jle
mov
lahf
cmc
mov
loop
sahf
jnp
ret
leave
jb
sar
nop
and
in
icebp
int3
and
dec
fsubr
dec
lea
and
cmps
and
aas
sub
call
add
pop
push
retf
xor
pop
or
push
jmp
pop
scas
int
sbb
dec
xchg
mov
(bad)
mov
xchg
mov
fsubr
xor
add
mov
inc
les
push
push
push
ret
jmp
and
pop
test
out
sar
inc
xor
or
mov
add
add
add
push
sbb
scas
and
jae
inc
clc
add
add
lods
jmp
pop
daa
or
cdq
cmc
jl
cs
inc
cmp
push
mov
clc
dec
cld
sub
call
mov
push
push
sar
jmp
fcom
cmp
(bad)
fild
and
adc
lds
stos
cmps
call
push
out
fst
fistp
sbb
fbstp
add
mov
and
mov
out
loopne
jmp
ja
imul
jmp
js
push
add
xchg
(bad)
mov
sbb
and
jnp
mov
xchg
ss
out
xchg
adc
mov
aas
lahf
or
test
out
dec
iret
jo
or
mov
loop
js
aaa
je
pop
sbb
popa
inc
lods
or
imul
stos
(bad)
retf
inc
cld
cmp
loope
mov
test
es
arpl
pushf
or
(bad)
push
pop
sbb
mov
out
pop
ds
popf
dec
or
stos
in
shl
inc
jl
movs
test
pop
jnp
sbb
sahf
xchg
xchg
sub
arpl
jbe
sti
pop
or
fsubrp
into
popf
cmps
out
(bad)
imul
jne
mov
ins
and
shr
aaa
add
mov
addr16
in
xchg
mov
cmp
fwait
jbe
dec
hlt
jne
mov
push
fldenv
jne
icebp
jns
or
out
xchg
je
xchg
sub
xor
mov
cdq
push
das
pop
xchg
call
cld
xchg
sahf
dec
fidiv
dec
pxor
xor
push
cmps
shr
inc
cmc
cld
pop
mov
jnp
and
and
sti
shl
xchg
movs
sahf
mov
cmps
test
cwde
into
mov
fsub
xchg
and
retf
fisubr
add
mov
(bad)
xchg
aaa
shl
pop
movs
xchg
sbb
pop
ds
xchg
(bad)
dec
mov
fucomip
jb
into
jbe
jbe
mov
mov
fsub
imul
jne
cmps
add
sti
xchg
adc
loop
div
adc
retf
add
cmps
fstp
or
jo
mov
xchg
add
xchg
cli
aam
(bad)
call
cmp
pop
adc
dec
stos
ret
xchg
inc
mov
or
punpckldq
ss
or
or
pop
popa
sti
sub
loop
jmp
aad
data16
xchg
mov
pop
pop
ins
mov
push
lods
sbb
ins
in
mov
lods
push
push
pop
das
adc
mov
ja
jnp
jg
ss
leave
cli
pop
pop
outs
dec
push
out
pop
daa
cmp
and
mov
jge
fisttp
lock
stos
ins
test
mov
mov
mov
call
inc
dec
out
mov
pop
sub
mov
jnp
addr16
fcom
push
adc
jle
sbb
pop
or
out
push
mov
outs
mov
lgs
lods
fwait
mov
jp
and
ds
mov
adc
pop
jae
push
sbb
xor
pop
cmp
jl
and
jno
sbb
cdq
mov
jecxz
nop
and
pop
cmp
into
sub
rcl
movs
inc
push
sar
loop
push
mov
dec
inc
push
pop
dec
push
sar
call
cli
cs
fcmovnu
movs
mov
sbb
jbe
sar
(bad)
mov
cdq
mov
ins
push
cmp
movhlps
inc
xchg
enter
jno
push
popf
adc
popa
js
shr
and
test
cmps
jo
sub
mov
xchg
sahf
mov
jnp
xor
adc
clc
jmp
stos
xchg
lods
pop
xor
or
cmp
sbb
push
hlt
cs
adc
lods
jns
sub
mov
bound
sbb
sbb
(bad)
movs
inc
das
push
or
pop
mov
mov
add
sbb
mov
cld
mov
cmps
mov
adc
push
es
xchg
mov
xor
jg
add
xlat
xor
pusha
loope
and
bound
leave
ss
(bad)
mul
icebp
cmps
dec
mov
frndint
push
pop
aaa
repz
adc
push
jmp
loopne
sbb
xchg
sbb
outs
and
adc
inc
(bad)
push
and
daa
push
ss
push
scas
repz
repnz
pop
push
stc
mov
les
xchg
es
inc
mov
repnz
lahf
pminub
repnz
inc
jae
cmps
mov
ds
cmp
test
repnz
jae
push
rol
mov
xchg
nop
out
test
mov
popf
cdq
bound
mov
mov
dec
cmp
test
std
adc
sbb
or
ret
cs
adc
into
adc
push
jne
cmps
loop
sbb
sbb
xchg
iret
push
xor
jecxz
sub
das
loopne
jbe
xor
(bad)
jo
jo
lahf
sbb
es
jle
cmp
aaa
push
add
mov
dec
mov
fnstsw
add
imul
mov
in
ja
push
shr
add
ret
mov
xchg
sar
jae
xor
iret
mov
pop
in
sub
push
add
cmps
add
mov
out
dec
push
mov
cmps
out
fst
movs
movs
adc
add
loope
retf
xor
sub
and
sti
pusha
xor
push
test
sub
cmps
jne
ret
push
mov
inc
out
xor
int
jae
jp
jo
dec
cli
rol
mov
add
jle
push
inc
fist
imul
dec
ins
fwait
and
xchg
(bad)
mov
push
loopne
jge
or
out
jno
dec
mov
fdivr
popf
and
scas
jmp
test
fst
sub
jecxz
pop
xchg
fdiv
add
mov
or
add
ret
jmp
outs
pmaxsw
mov
mov
loopne
sbb
push
or
push
and
aam
cmovnp
call
mov
xchg
ins
mov
rcr
cmp
dec
mov
cmps
adc
ins
cmp
lock
mov
scas
adc
sbb
test
pusha
or
push
and
push
jmp
cmps
(bad)
push
dec
in
mov
jl
sbb
int
fidivr
test
adc
dec
cwde
jae
pop
ds
cli
sahf
pop
call
idiv
sub
(bad)
jns
sahf
pop
or
jbe
xchg
into
sbb
sub
mov
dec
mov
jo
cmp
cwde
xchg
les
cwd
outs
out
dec
cmps
mov
push
loopne
out
fsubp
jmp
adc
adc
pop
jecxz
call
ins
mov
lods
popf
pop
push
add
xchg
rol
addr16
aad
push
jb
or
cmp
iret
add
js
enter
not
das
sbb
inc
dec
push
sub
mov
mov
xchg
out
clc
pop
cld
and
push
push
call
sub
ins
imul
rep
jnp
fisttp
popf
push
xchg
(bad)
cli
in
es
mov
inc
out
inc
adc
repz
clc
out
dec
add
and
addr16
cld
je
jns
ret
jns
cdq
lock
cmc
cmc
fild
jp
inc
xchg
ret
pushf
add
cmps
sbb
in
in
popf
pusha
mov
dec
rol
or
lds
rcl
cmps
jns
ds
neg
nop
es
jp
in
movs
cmovae
cmp
into
(bad)
or
cld
out
inc
add
mov
loopne
loop
xchg
movs
nop
fidivr
out
push
xchg
mov
les
and
dec
sbb
test
jecxz
pop
es
pusha
in
into
sbb
dec
fbstp
jecxz
cld
xor
(bad)
pop
je
enter
loopne
mov
xchg
lahf
adc
clc
hlt
mov
lods
xchg
push
sub
lahf
call
call
pop
mov
mov
shr
xor
inc
call
mov
cmp
lahf
cmp
inc
loop
imul
loope
mov
mov
aad
outs
jle
out
mov
(bad)
cs
jle
fsub
jl
push
mov
leave
jno
fwait
sub
mov
es
mov
dec
arpl
fisttp
stos
jbe
lods
je
dec
cdq
in
xchg
ins
mov
aaa
mov
in
pop
test
sti
bound
or
mov
or
sbb
js
pop
fbstp
popf
inc
lock
arpl
cmp
mov
icebp
cmp
pop
fisub
stos
or
mov
mov
je
adc
nop
out
mov
push
sub
sti
mov
mov
lods
repnz
cmp
cmp
jmp
sub
dec
test
sbb
add
scas
or
out
and
ror
cwde
icebp
aaa
or
adc
out
mov
push
es
pop
jl
pop
fsubrp
test
ret
out
inc
rcl
cmp
jo
mov
test
add
cmp
push
or
xor
cmp
das
loopne
dec
pop
sub
ret
jg
out
xchg
xchg
out
mov
or
stc
xchg
or
es
sbb
push
ds
outs
out
loope
ins
push
fcom
js
jp
inc
sar
cs
loope
and
or
push
pop
sub
cli
mov
cdq
pushf
push
repnz
es
adc
push
(bad)
pop
inc
das
stos
mov
dec
aam
and
out
jbe
sub
sbb
jle
fstp
dec
or
inc
out
mov
lds
call
xor
pusha
(bad)
lods
ret
sub
adc
fiadd
xor
pop
xchg
fadd
bound
aaa
xlat
mov
fwait
out
jo
scas
and
mov
mov
pop
push
mov
push
das
(bad)
jae
std
or
push
imul
clc
(bad)
fistp
mov
mov
adc
mov
add
mov
pop
dec
movs
scas
xor
mov
movs
add
pop
xchg
icebp
or
pop
into
xchg
jbe
or
xchg
jp
stc
add
es
sub
sbb
sub
sub
aaa
xor
sbb
test
fstp
push
mov
in
inc
(bad)
shr
aas
pop
dec
fistp
das
jae
jae
sahf
pop
mov
xor
test
out
adc
movs
arpl
fwait
rcr
adc
ins
cmp
mov
adc
cmps
push
popf
lods
lods
mov
out
jp
sbb
or
ret
jns
pop
jnp
jbe
into
fistp
movs
repz
jne
dec
add
push
push
(bad)
gs
push
dec
fcomp
loopne
pop
mov
adc
loope
push
cmp
push
mov
stos
mov
add
(bad)
enter
shr
jnp
fwait
push
(bad)
mov
lock
mov
jge
sub
aas
or
jnp
xlat
mov
add
xlat
nop
loopne
sbb
lock
cmp
loop
mov
cmp
es
test
ds
xor
jmp
adc
test
mov
inc
push
cmps
mov
xchg
add
add
cli
call
jno
(bad)
out
popa
pop
loope
jbe
pop
add
pop
and
dec
test
stos
push
push
cmps
fsubp
std
sub
xchg
mov
lahf
aaa
pushf
jb
xor
imul
imul
pusha
fiadd
mov
in
inc
and
retf
out
adc
sbb
int3
rcr
jmp
mov
out
push
push
sbb
data16
pop
jmp
scas
inc
pop
call
and
int
sbb
jo
out
popa
mov
jg
shl
mov
sub
retf
sti
dec
imul
pop
(bad)
dec
xor
xchg
cld
jmp
add
in
je
das
(bad)
mov
jno
les
mov
or
mov
mov
rcr
adc
pop
mov
stos
dec
xlat
sbb
aaa
into
adc
scas
out
pop
xchg
pop
xor
loop
fwait
jmp
xchg
and
xor
pop
cmp
jge
popf
imul
jmp
pop
xchg
inc
xchg
cwde
int
pushf
(bad)
jbe
stc
sbb
inc
das
out
iret
dec
push
cdq
lea
adc
pop
xor
inc
jge
jmp
shl
or
ret
movs
xchg
jae
pmuludq
dec
shl
cmc
jecxz
adc
lock
mov
sub
cmp
ror
popf
cwde
test
cdq
ja
xchg
out
pop
pop
addr16
jae
sbb
mov
jnp
loop
cmc
inc
leave
jae
jecxz
mov
xchg
(bad)
stos
sub
push
test
dec
inc
not
xor
and
jge
mov
add
pop
std
push
dec
test
int
addr16
fnstenv
mov
sbb
dec
and
mov
cmps
sahf
lock
sbb
inc
(bad)
imul
inc
mov
addr16
jmp
out
inc
push
stos
test
jmp
not
mov
or
scas
inc
mov
arpl
repnz
or
(bad)
mov
sbb
inc
fidivr
push
int3
fstp
xchg
and
adc
popf
push
into
adc
not
loopne
mov
cli
inc
in
mov
out
lock
and
adc
cmp
dec
ds
fcomi
pop
cmp
js
cmps
push
and
pop
or
dec
aas
lods
jo
ret
mov
cmp
push
push
sahf
daa
lea
arpl
test
adc
cmp
lahf
push
rol
mov
mov
popf
mov
enter
or
cmps
in
sub
push
repz
add
aas
(bad)
call
retf
js
inc
jge
jbe
and
shl
movs
dec
(bad)
inc
outs
dec
repnz
enter
shl
jg
inc
pop
dec
push
stos
inc
dec
xchg
loop
call
aad
std
jmp
mov
jmp
and
cmp
out
dec
les
pop
or
sbb
pop
xchg
ficom
sbb
hlt
mov
inc
int3
cmp
and
enter
cmp
add
inc
jns
push
xor
mov
sub
push
into
pusha
and
sbb
add
ins
outs
fdiv
or
jecxz
pop
sbb
iret
movs
repnz
inc
mov
cld
mov
ficom
mov
sbb
in
mov
xchg
xchg
pop
push
mov
stos
sbb
xor
inc
xchg
xor
stos
push
out
cdq
adc
stc
adc
xlat
popa
mov
xlat
fldcw
leave
pop
jecxz
push
sbb
outs
mov
mov
fst
pop
mov
push
(bad)
stc
outs
enter
out
inc
fnsave
test
(bad)
es
jle
cwde
sbb
mov
sub
out
sub
xor
pop
pop
leave
fistp
xchg
cdq
and
inc
jecxz
add
out
pop
or
aas
call
in
out
push
pop
hlt
ffree
in
ret
test
dec
xor
jp
shr
jmp
scas
not
mov
clc
lods
repz
sbb
sbb
retf
xchg
cmp
mov
cmp
out
inc
mov
add
xor
sahf
adc
pop
rol
cmp
fwait
mov
pushf
shl
(bad)
les
jp
call
adc
pop
movs
or
push
pop
add
retf
jmp
jg
not
jb
int
jbe
mov
inc
bound
repnz
std
aaa
mov
into
icebp
retf
pop
pop
fisttp
outs
add
mov
cmp
(bad)
call
inc
repnz
andnps
xor
xor
jno
shr
movs
in
adc
inc
lahf
aad
sbb
repz
outs
dec
call
shl
aad
dec
cdq
xchg
lods
iret
cmc
imul
daa
icebp
push
mov
arpl
stc
mov
cmc
sub
movs
sahf
ds
fwait
or
xor
push
ror
mov
adc
sub
fadd
and
pop
mov
sbb
sub
ja
xchg
add
inc
pop
xchg
and
mov
sub
sbb
mul
ins
lahf
mov
inc
lahf
(bad)
call
mov
xchg
sar
les
cdq
jp
sbb
and
adc
lods
int3
fadd
leave
stos
inc
imul
cli
outs
xchg
out
dec
cwde
push
dec
enter
adc
push
repz
push
dec
cld
cmp
int
shl
les
or
adc
cwde
cmp
fwait
and
aas
mov
xchg
mov
jne
push
(bad)
dec
out
je
aam
test
mov
int3
mov
sar
out
pop
mov
cmc
sbb
mov
jge
call
pop
xchg
inc
xchg
shl
aam
int
and
xchg
push
sbb
cmp
inc
push
loopne
mov
jne
add
std
mov
fucomi
cli
out
pushf
jbe
lods
clc
adc
xor
mov
adc
inc
call
scas
cmp
in
lods
adc
shl
dec
jnp
aam
fsubr
inc
repz
push
dec
(bad)
fsub
cmp
push
or
pop
and
pop
cdq
fstp
popf
pusha
pop
(bad)
sbb
lods
stos
lea
push
retf
mov
sar
pop
test
sub
jmp
mov
pop
aaa
mov
std
fcmovb
pop
popf
push
retf
dec
les
gs
fisttp
std
xor
sub
inc
xchg
push
lods
addr16
mov
mov
jbe
out
leave
imul
push
jp
mov
dec
sub
adc
ds
mov
xlat
sahf
int
(bad)
repnz
comiss
fcom
jge
outs
frstor
jp
scas
out
and
aam
pop
dec
xor
pop
sbb
les
sub
push
into
sbb
dec
xchg
das
inc
mov
push
ret
xor
adc
jno
repnz
pop
inc
addr16
ret
out
nop
pop
add
or
call
shl
pop
sub
adc
cmp
push
jno
and
sbb
pop
push
out
fisub
mov
jbe
lods
mov
xchg
inc
mov
ss
push
xor
lahf
xor
push
xor
dec
or
and
out
movs
dec
xchg
xor
cmp
jae
pop
(bad)
rol
adc
mov
pop
(bad)
in
js
outs
test
mov
xor
outs
fmul
pop
popa
jle
jne
pop
aaa
aaa
sbb
pop
out
push
enter
cmp
mov
(bad)
xor
iret
into
sub
sub
ret
push
nop
outs
ss
add
test
mov
jp
push
(bad)
mov
sahf
inc
imul
xchg
retf
xchg
sub
mov
and
jo
adc
fs
call
pop
pop
add
ss
jbe
bound
or
xchg
mov
std
cmp
jae
jge
fnsave
addr16
sbb
dec
stos
pop
(bad)
mov
or
ins
dec
or
or
fld
pop
hlt
fdiv
fidiv
sbb
mov
fisubr
stos
push
cmp
and
out
mov
sbb
out
iret
mov
int
into
sub
repz
ud2
je
pop
imul
imul
movs
in
add
xor
sub
(bad)
jne
add
dec
movs
cmp
fucom
test
cmp
dec
or
add
jge
and
pop
mov
mov
dec
ror
and
cmp
sbb
xlat
imul
xchg
and
jle
mov
fimul
fisttp
cmp
sub
ror
add
cmc
add
mov
add
jl
les
add
out
int3
xchg
fisttp
cld
movs
jp
or
ret
jns
sbb
adc
xchg
push
mov
xchg
sbb
lods
sub
push
and
dec
or
add
jbe
out
adc
mov
hlt
sub
add
jo
sub
sub
or
push
pop
jbe
add
lea
cdq
icebp
mov
xor
es
popf
push
fistp
ret
and
rcl
sub
inc
imul
xchg
xchg
cwde
add
jo
in
test
arpl
mov
std
ficomp
mov
mov
sar
xchg
push
cdq
sbb
shr
and
retf
movs
sub
stc
gs
test
call
rol
dec
or
arpl
pop
ins
movs
push
scas
pop
mov
ds
push
inc
cli
push
frstor
mov
cdq
sub
dec
sahf
pextrw
mov
and
push
scas
mul
aad
adc
stos
xor
lods
jns
das
jno
sbb
dec
inc
lds
add
aas
add
and
in
call
call
jno
push
add
(bad)
mul
shl
daa
(bad)
pushf
lahf
repnz
sub
mov
test
jg
cwde
stos
stos
les
hlt
or
ret
lahf
xchg
xchg
sub
xor
and
(bad)
jg
stos
cmp
in
jmp
mov
pop
fprem1
sti
or
pop
cmp
imul
loopne
mov
inc
push
aas
ins
aaa
xor
gs
js
repz
xor
mov
sub
push
cmp
xor
rcr
adc
cmc
(bad)
pop
call
sbb
dec
dec
and
call
call
(bad)
inc
stc
sub
lods
test
hlt
inc
sbb
stos
cmp
imul
hlt
xor
jge
repz
sub
clc
test
mov
test
std
push
fs
ss
lea
push
(bad)
xchg
pop
mov
test
pushf
and
imul
aam
ss
dec
dec
stos
inc
adc
and
ins
(bad)
sti
mov
inc
lods
jo
fsub
rcl
mov
lock
popa
push
mov
dec
mov
push
xchg
loop
jbe
pop
cmp
fld
std
jmp
jnp
addr16
pop
push
leave
cmp
pop
pusha
(bad)
sub
push
sub
dec
xlat
mov
pop
fstp
gs
sahf
neg
aam
enter
sub
aas
xlat
inc
push
adc
in
push
je
es
repz
pop
ret
mov
push
out
cwde
dec
mov
xor
outs
fimul
jmp
out
leavew
lahf
xor
div
pop
ss
mov
sub
(bad)
cs
rcl
mov
shl
push
mov
xor
jo
aad
lahf
sbb
mul
std
test
fild
inc
retf
cmp
adc
(bad)
rol
stc
aad
inc
sub
call
bound
loopne
data16
ret
aad
add
dec
(bad)
call
ds
push
pushf
adc
or
rcl
inc
fsubr
sbb
push
inc
psllw
and
lahf
push
gs
mov
lods
cld
jmp
(bad)
xchg
cli
sbb
ja
xchg
popf
xor
sbb
jnp
popa
jbe
sbb
adc
aad
cli
dec
pop
sti
data16
cld
ja
(bad)
mov
shr
mov
cmp
or
cs
pop
rol
arpl
mov
dec
adc
int3
sar
sub
jge
sub
dec
rcr
push
lods
sub
(bad)
fist
inc
push
cmps
dec
jae
pop
ret
out
and
inc
in
stc
retf
stos
fbld
push
pop
mov
xchg
pop
cmp
mov
sahf
lock
sahf
sbb
adc
out
sbb
xchg
push
pop
push
popa
hlt
sub
xor
dec
push
ja
cli
sub
pop
inc
mov
add
imul
ds
mov
ret
out
mov
and
sbb
out
pusha
fist
sub
inc
mov
inc
and
(bad)
xchg
adc
jmp
faddp
mov
or
push
adc
pop
dec
fwait
pop
dec
sbb
fdivr
inc
js
popa
in
ja
mov
pop
jp
mov
cmps
sub
je
cdq
mov
xor
or
inc
jb
pop
push
(bad)
out
ins
(bad)
cmc
push
(bad)
jns
jnp
or
dec
push
sub
fs
mov
mul
test
dec
mov
cli
pop
mov
xor
test
sti
add
jns
xchg
sbb
or
dec
mov
xchg
not
jl
mov
rcr
sub
ret
js
in
in
pop
push
push
push
jb
shr
lock
lahf
ins
jmp
fcomp
retf
mov
cmp
or
mov
stos
push
mov
je
add
pop
and
icebp
aam
in
fwait
dec
or
xchg
loop
adc
retf
xchg
add
mov
xchg
dec
pusha
(bad)
in
mov
cmp
xchg
and
jnp
imul
jmp
sub
movs
fdivr
mov
pop
inc
pop
es
jle
fsqrt
in
jb
scas
out
add
test
test
xor
adc
or
mov
and
jbe
pop
bound
loope
aam
wbinvd
dec
mov
pop
jo
lock
xchg
fbstp
mov
fucomi
push
sar
lods
cmp
js
add
dec
cdq
leave
ror
push
sub
mov
mov
loope
jmp
iret
movs
pop
dec
ror
jno
sub
aaa
repz
cmp
inc
loop
adc
sub
dec
or
lds
lods
xchg
inc
fwait
dec
jb
lods
sar
call
daa
xchg
mov
cld
pusha
and
loope
arpl
dec
in
and
mov
fdivr
loope
and
in
sbb
ins
mov
int3
ja
fwait
add
sbb
cli
mov
gs
dec
inc
dec
sti
cmp
sub
jo
(bad)
sub
fistp
mov
addr16
jle
ja
lods
cdq
lock
mov
mov
pop
cmp
repnz
int3
in
neg
push
mov
mov
int3
jae
dec
into
pop
dec
sub
pop
retf
pop
or
mov
push
pop
pop
arpl
adc
or
dec
and
cs
loopne
jg
sub
adc
xor
mov
xor
fnstsw
cmp
xchg
adc
imul
ror
jp
in
push
outs
dec
jo
arpl
sbb
clc
ins
fild
ss
ins
xchg
mov
push
lods
push
mov
xchg
fiadd
in
fwait
out
outs
in
jno
inc
jns
push
call
mov
sub
xchg
sub
fisub
ret
or
mov
sub
jl
int
xchg
add
sub
loope
mov
mov
lahf
mov
int3
popf
loopne
in
call
mov
cwde
sub
das
fsubr
adc
repz
mov
(bad)
out
jge
xchg
adc
jno
jnp
fsub
shl
mov
mov
dec
and
cli
dec
sar
add
pop
adc
fcomp
xor
test
mov
movs
jb
or
js
push
inc
sbb
mov
pusha
sbb
les
fs
dec
outs
xor
pop
dec
cmp
std
mov
xchg
lock
sub
fwait
cmp
xchg
imul
aaa
sbb
pushf
idiv
repnz
mov
mov
popa
push
inc
(bad)
xchg
leave
sub
xor
mov
cdq
jle
push
test
mov
adc
inc
pusha
hlt
out
push
shl
stos
es
(bad)
das
mov
(bad)
xchg
les
xchg
adc
mov
and
stc
jle
inc
push
cmp
lahf
cmp
mov
push
stos
fcmove
mov
repnz
mov
std
hlt
out
sbb
mov
add
inc
repnz
push
ret
(bad)
scas
repnz
push
aad
and
mov
movs
(bad)
out
xchg
sub
shr
pop
ins
mov
sahf
inc
aam
adc
lods
sbb
and
xor
mov
dec
sti
dec
inc
jmp
sub
push
test
clc
idiv
repnz
push
jo
cdq
out
retf
mov
in
jge
jmp
imul
out
cmp
sbb
pusha
pushf
pop
sar
pop
jno
hlt
sahf
test
adc
arpl
xchg
sbb
ja
push
xchg
out
push
fadd
add
dec
lea
ficomp
shr
dec
out
cmp
sub
adc
mov
and
or
push
xchg
nop
ret
jnp
or
mov
fistp
mov
pushf
ds
inc
shr
rcr
xchg
push
mov
lods
xchg
ds
adc
adc
ds
mov
fisubr
mov
xor
add
(bad)
jnp
out
sbb
or
cmp
xchg
cmp
bnd
clc
les
fdiv
cld
dec
dec
mov
or
sbb
mov
aad
(bad)
popa
mov
add
int
(bad)
lock
mov
cmps
test
pop
pusha
jmp
fstp
test
jge
ret
jns
sbb
std
movs
into
pop
cli
popa
pop
xchg
or
jecxz
sub
das
jb
push
ficomp
ins
imul
aam
pop
xor
mov
and
add
push
add
movs
pop
inc
gs
inc
or
push
into
sbb
push
jno
std
inc
add
pop
pusha
sub
push
arpl
leave
add
pop
mov
adc
inc
mov
aad
repnz
fwait
movs
stos
addr16
or
and
pop
dec
push
or
ds
out
call
pop
push
xor
push
stc
pop
jp
sub
xor
pop
xchg
add
mov
xchg
xor
add
and
push
push
aam
adc
jmp
ja
je
xor
loopne
test
test
ins
popa
xchg
mov
xchg
fld
movs
or
test
dec
(bad)
(bad)
int
outs
jp
xor
xor
push
mov
mov
xor
pop
mov
and
sbb
xor
pop
mov
fst
jb
jle
xor
dec
dec
pop
mov
sbb
hlt
push
hlt
rcl
push
cmp
lods
and
xchg
mov
push
inc
iret
pop
cmp
shl
pop
xchg
pop
jecxz
dec
pop
xlat
je
sbb
repz
in
dec
pop
xor
ss
stos
ins
jg
arpl
adc
fs
adc
imul
lods
pop
inc
xlat
in
jg
stos
int3
mov
shl
scas
sbb
les
cmp
mul
sbb
jns
cld
movs
inc
sahf
xor
jae
leave
and
aas
lahf
cmp
test
xchg
jae
shr
xor
out
push
xchg
pushf
outs
addr16
jg
mov
pop
mov
mov
js
pop
lahf
mov
enter
xchg
adc
add
out
loop
bnd
in
(bad)
data16
sbb
call
cmc
push
jns
stos
sbb
and
pop
in
and
cmp
sub
cmc
pop
add
mov
push
jnp
sti
cmps
pop
push
push
dec
pop
push
xor
shr
sub
add
hlt
(bad)
(bad)
call
loop
lods
cmp
lds
and
cwde
inc
cmps
int
xchg
repnz
in
push
test
dec
in
jmp
push
test
fs
adc
mov
adc
(bad)
dec
fmul
call
mov
int3
and
mov
popa
mov
out
jp
pop
imul
daa
and
push
push
push
xchg
push
dec
(bad)
xchg
into
adc
shl
inc
les
add
push
xor
out
adc
jle
adc
icebp
mov
mov
adc
sti
dec
stc
mov
jecxz
pop
mov
or
mov
xlat
push
cmp
dec
aad
cmp
retf
cmp
sahf
pop
ret
cmp
inc
xor
jge
jg
cdq
mov
mov
mov
loop
mov
add
test
std
push
sub
pop
cmp
add
xchg
pop
icebp
out
movs
add
imul
sub
fcom
xchg
sar
iret
or
or
sub
xchg
ds
mov
sub
sub
cmp
mov
mov
push
es
repnz
fisubr
iret
mov
sahf
cwde
xor
push
add
push
xchg
xchg
lock
arpl
xor
adc
mov
push
repnz
sub
push
and
outs
shl
push
das
leave
fs
iret
pop
mov
daa
pop
mov
xor
daa
sbb
sub
sub
mov
retf
ins
lock
test
mov
stos
add
ins
jae
call
ins
mov
mov
stos
pusha
mov
jo
inc
leave
pop
mov
adc
adc
push
lock
mov
push
push
push
xchg
dec
icebp
push
dec
das
gs
clc
pop
cmps
sub
sub
mov
rcl
test
adc
inc
sbb
mov
add
clc
push
ja
test
and
dec
(bad)
stc
inc
fst
jae
call
adc
adc
aad
mov
xchg
or
ja
sbb
push
out
push
cmp
sbb
sbb
addr16
and
outs
int3
jecxz
aad
or
xor
sbb
jecxz
mov
adc
out
rol
(bad)
xchg
dec
and
sub
bound
push
pop
shl
out
or
inc
je
adc
bound
or
mov
fisttp
pop
push
sbb
in
test
jb
mov
dec
hlt
mov
dec
int
xor
(bad)
in
adc
cmp
add
push
cwde
mov
(bad)
sti
std
scas
xor
add
and
int3
or
sub
je
add
into
dec
cmp
mov
cs
dec
inc
popf
sbb
mov
out
jno
shl
mov
das
and
inc
xor
out
sub
mov
or
scas
push
add
mov
sbb
ins
push
popf
xchg
mov
dec
into
mov
fst
lahf
jno
shl
or
sub
mov
mov
add
and
cmp
xchg
adc
dec
push
sti
cli
rcl
push
mov
pop
push
adc
test
sbb
xchg
je
xor
inc
add
je
push
hlt
sub
in
in
fidiv
cld
dec
in
xor
test
or
cmp
sahf
pop
repz
sti
stos
imul
mov
push
cmps
cld
fisubr
xor
or
mov
seta
cmp
aaa
repnz
int
cmp
mov
in
mov
sti
mov
pop
and
dec
mov
out
or
add
jmp
sbb
pop
pop
div
push
pop
sbb
repz
inc
mov
add
rcl
push
cmps
mov
adc
(bad)
cmc
cmp
out
mov
sbb
pop
push
inc
xchg
mov
stos
and
fcmove
cmp
jp
xor
adc
adc
(bad)
jno
ret
jle
pop
aam
stos
lock
addps
int3
jecxz
lds
mov
pusha
(bad)
xor
lods
addr16
enter
xchg
xchg
ret
dec
cmp
add
pop
loop
mov
aas
sbb
cmc
lahf
mov
movs
mov
sar
xchg
inc
pop
jo
leave
jns
add
push
das
inc
dec
sbb
out
dec
pushf
outs
sbb
pop
mov
les
out
shl
or
cmp
cmps
fidivr
enter
not
pop
sahf
mov
test
jne
clc
xor
leave
loopne
push
mov
jg
movs
add
mov
xor
sub
lods
clc
cmp
add
add
test
xor
mov
jnp
test
cmp
cmovb
push
cmp
sbb
je
xor
xchg
fwait
ret
call
jno
fadd
mov
fprem1
mov
ret
sub
push
cdq
xor
test
mov
arpl
push
loopne
mov
sub
rol
and
ins
push
popa
imul
pop
mov
mov
pushf
test
mov
inc
arpl
aaa
xchg
out
test
xor
pop
mov
data16
icebp
jp
xor
popa
out
fcom
inc
in
mov
xchg
cmc
retf
fdiv
stc
fsubr
idiv
not
sbb
icebp
(bad)
cmp
call
mov
sbb
out
jge
mov
stc
sub
push
mov
loopne
jnp
adc
and
test
loop
jne
and
std
and
(bad)
xchg
jecxz
mov
imul
in
jo
adc
mov
lahf
mov
(bad)
sbb
pop
or
or
inc
dec
xor
les
inc
ror
inc
movs
adc
hlt
repnz
xchg
sub
sbb
mov
push
push
xchg
jns
jmp
retf
ss
mov
(bad)
test
dec
fdivr
jbe
push
ja
push
stc
mov
mov
inc
dec
adc
adc
outs
fist
imul
popf
xor
jmp
mov
mov
sub
aad
dec
sahf
or
mov
mov
adc
push
imul
setno
mov
xor
in
repz
sbb
sub
add
pop
(bad)
push
jo
jnp
push
cmc
mov
push
test
pop
sti
add
stos
push
ins
cmps
out
pushf
add
int
hlt
pop
dec
in
mov
pop
jnp
sti
xor
inc
out
and
pusha
daa
adc
adc
pop
std
xchg
movs
dec
imul
mov
call
xchg
aaa
adc
mov
mov
cmp
cwde
(bad)
cmc
adc
outs
mov
push
scas
stc
push
shr
in
test
xchg
fstp
loope
jl
cli
jns
cld
ins
ins
out
mov
mov
mov
mov
and
sahf
and
out
clc
cld
inc
mov
shl
push
(bad)
mov
fdiv
scas
xor
clc
fcomi
(bad)
mov
sti
icebp
mov
xchg
clc
scas
mov
adc
sub
xchg
stc
stc
loop
iret
outs
outs
xor
or
pop
cdq
pop
fs
or
daa
dec
push
jbe
iret
les
xor
das
cld
push
jmp
mov
sub
xchg
add
(bad)
add
push
popf
jmp
bnd
sbb
test
imul
ror
arpl
sub
mul
pop
xor
call
cmc
test
xor
in
inc
xchg
mov
rol
lahf
xchg
retf
mov
or
mov
xchg
ficomp
push
inc
outs
mov
(bad)
adc
or
scas
sub
jne
push
mov
lods
and
xchg
or
ret
mov
and
cmp
das
scas
or
push
iret
inc
popa
shr
push
hlt
pusha
xor
out
and
add
popf
pop
push
xchg
nop
ror
cmp
cld
mov
adc
xlat
adc
aas
imul
jecxz
pop
cmp
push
add
loopne
shr
jmp
fstp
jne
mov
stc
call
mov
loop
lods
cmp
adc
pop
popa
add
inc
movs
stos
bound
sub
adc
pop
(bad)
fild
cmp
loope
sar
mov
mov
in
mov
dec
je
xchg
shr
ret
test
push
fucom
popa
inc
xlat
aas
ins
fcomp
cmp
and
xor
adc
jg
sbb
retf
into
cmps
(bad)
aad
fidiv
xchg
arpl
xchg
mov
cmp
call
data16
pop
je
aam
adc
inc
xor
xor
aas
sbb
cld
aad
stc
int
jle
test
(bad)
loop
call
and
mov
mov
pop
add
ins
inc
ins
adc
adc
pop
aam
scas
movs
add
xlat
das
ins
jmp
leave
jmp
push
ror
loop
cmp
mov
dec
xchg
mov
in
aad
sub
pop
imul
cmp
pusha
and
call
inc
adc
push
push
cmc
call
rcr
popa
cmp
icebp
cmp
push
ja
test
scas
test
call
mov
jbe
add
not
jnp
or
scas
arpl
js
adc
(bad)
js
clc
sbb
push
in
scas
jge
jmp
stc
sti
mov
sbb
pusha
adc
fs
xchg
cmp
inc
mov
outs
sbb
or
int3
mov
jmp
or
pop
inc
lods
mov
std
je
and
push
in
sbb
movs
jl
imul
(bad)
mov
mov
loopne
dec
adc
std
das
je
xor
jbe
lods
outs
mov
cs
adc
imul
lahf
add
push
jns
jecxz
pop
test
(bad)
stc
call
jl
xchg
aas
outs
inc
fistp
fidiv
cmps
mov
adc
push
movs
mov
les
out
out
out
enter
retf
shl
jnp
push
ret
or
xchg
cwde
mov
sbb
mov
fstp
xor
rcl
jbe
and
out
push
pop
push
xor
xor
xchg
addr16
and
add
ds
add
cmp
push
inc
out
scas
pop
nop
in
push
rcl
xchg
loopne
loopne
sti
sbb
std
ja
repz
pop
les
ret
popa
sbb
cmps
int3
mov
inc
adc
cmp
ss
adc
arpl
outs
dec
jl
pop
shr
xor
pop
sbb
call
fst
or
or
and
sub
and
adc
mov
pop
mov
scas
pop
loope
sbb
dec
cmp
rcr
or
push
mov
fcomp
cmp
les
ss
push
rol
outs
inc
add
(bad)
pop
or
cmp
xor
pop
xor
and
bound
inc
cli
mov
aas
fadd
in
fstp
test
fistp
mov
push
xchg
jb
add
jns
inc
cmp
daa
out
jge
dec
or
push
and
sub
cdq
or
sub
adc
add
ret
mov
ret
aam
imul
push
fisttp
mov
movs
sub
dec
mov
fstp
sbb
fisub
aad
jge
add
sub
xchg
es
jl
hlt
push
addr16
dec
and
jmp
adc
cmp
fldenv
dec
or
dec
mov
int3
aam
adc
int
fsubr
jae
out
sbb
push
jns
add
mov
pushf
mov
pop
nop
sbb
mov
cli
push
sbb
out
dec
addr16
sti
or
mov
shl
xlat
push
mov
inc
sar
lods
sbb
cmp
jb
enter
mov
mov
mov
fsub
out
ins
xor
(bad)
shl
push
mov
nop
stos
or
lods
and
push
add
fistp
add
and
pop
outs
sub
inc
hlt
or
adc
and
clc
cmp
lock
or
dec
inc
mov
mov
sub
push
jbe
cmp
inc
xchg
dec
mov
stc
jmp
push
sbb
push
shl
ja
retf
mov
sub
pusha
call
and
std
das
xor
jno
shl
push
mov
jge
fimul
idiv
or
adc
loop
xchg
repnz
push
ds
int
nop
std
(bad)
hlt
mov
(bad)
pop
in
xchg
jge
xor
mov
push
movups
ret
push
cdq
test
or
outs
sbb
inc
fdiv
ret
mov
and
js
mov
mov
test
mov
or
jns
stc
sub
pop
(bad)
push
scas
mov
push
(bad)
cdq
in
mov
and
jo
mov
jle
mov
ss
cmp
sbb
outs
movs
daa
cmc
mov
(bad)
and
mov
mov
cmp
clc
into
jp
jb
cmp
inc
xchg
and
adc
fwait
or
mov
mov
xchg
sub
push
(bad)
repz
and
pop
loope
mov
pop
stc
pop
xchg
push
pushf
cmp
hlt
push
data16
and
xchg
shl
repz
ja
jl
out
xor
and
mov
movs
test
enter
scas
stc
push
sbb
push
jle
jo
sahf
adc
mov
xchg
je
mov
mov
add
pop
inc
jno
dec
xchg
xchg
pop
adc
cmc
fwait
daa
retf
adc
retf
lods
push
mov
push
test
movs
aad
dec
xchg
cmp
lds
(bad)
cmp
sbb
addr16
bswap
jmp
in
mov
cmp
mov
dec
cmp
adc
mov
or
mov
mov
ins
das
movs
xor
adc
pop
and
cmp
xchg
retf
sbb
jecxz
sti
retf
(bad)
sbb
jo
pop
xchg
cmc
adc
inc
loop
jmp
mov
or
ror
xor
scas
js
add
fstp
inc
hlt
out
inc
cdq
(bad)
jbe
mov
sbb
mov
sbb
cmc
(bad)
xchg
and
int3
cmp
sub
or
ins
xor
cld
push
adc
popa
jbe
xor
cmp
mov
ror
outs
push
mov
std
add
mov
rcr
je
pop
mov
and
adc
ins
test
in
xchg
inc
jno
cvtps2pd
inc
scas
mov
mov
pop
xor
repnz
call
loopne
loope
rol
mov
pop
psllw
movs
sub
nop
test
inc
lods
call
mov
mov
add
xor
adc
pop
enter
retf
xor
push
popa
loop
push
inc
fsub
xchg
cld
sar
lea
aas
mov
fdecstp
std
daa
dec
dec
sub
shl
inc
inc
pop
lods
sub
sub
adc
sub
(bad)
xchg
shr
out
in
cmc
push
and
neg
fsubrp
sti
jb
cdq
sbb
cdq
imul
cmc
mov
ins
fstp
jo
push
mov
por
fistp
inc
xor
push
shl
pop
sahf
fcom
add
outs
bound
xor
xchg
fbstp
adc
jae
dec
pop
js
imul
cmp
scas
ds
(bad)
jecxz
rcl
repz
rcl
repnz
inc
mov
test
cmps
dec
das
scas
add
cmp
fwait
cmc
inc
dec
stos
scas
pop
repz
shl
ror
inc
pushf
ss
push
mov
(bad)
das
mov
fldcw
fiadd
add
data16
fdivr
cmp
pop
fdiv
call
scas
ins
daa
mov
push
cmc
sar
sar
mov
xchg
(bad)
jg
add
xor
cmc
jb
mov
bound
jl
add
jle
jl
pop
push
mov
(bad)
push
sahf
test
dec
jae
ds
enter
mov
in
and
pop
loop
push
push
rol
push
retf
or
adc
popa
push
aad
add
and
xchg
mov
inc
fsubr
jg
sbb
and
push
pop
sub
test
test
sbb
stc
mov
test
iret
aaa
call
xchg
lock
std
pop
je
mov
scas
add
pop
arpl
push
add
xchg
(bad)
vmread
inc
xor
inc
pop
fcomp
mov
gs
jno
pop
push
xor
mov
loope
inc
dec
cmp
inc
out
into
rcl
xchg
push
ja
mov
mov
pop
loope
add
mov
mov
aas
mov
or
jae
pop
mov
cmp
pop
xchg
push
cmp
mov
fnsave
sti
in
jo
jmp
sub
sub
dec
pop
pop
and
imul
xlat
push
scas
pusha
mov
adc
mov
mov
or
mov
push
ficom
push
rcl
nop
bound
mov
bound
lods
mov
pop
(bad)
mov
or
hlt
cli
les
movs
jne
daa
cli
test
je
outs
push
shl
test
or
pop
clc
adc
adc
ret
adc
fucom
cmp
test
xchg
fisubr
imul
mov
outs
out
test
outs
mov
in
in
xchg
out
adc
icebp
adc
inc
addr16
and
iret
outs
cmp
sub
popf
xrelease
push
jecxz
add
push
pop
xchg
pusha
mov
jbe
mov
mov
push
sti
cld
cmp
xchg
call
mov
cwde
sub
std
fcom
sub
(bad)
fdivr
mov
dec
lds
push
fdivr
daa
jo
sub
mov
or
fmul
jg
mov
sub
xor
cmp
fwait
shr
push
mov
inc
cmc
lds
push
cwde
adc
push
std
sub
dec
popa
xchg
ret
cmp
scas
leave
cmp
into
sub
add
leave
sti
fnstsw
mov
mov
in
mov
sub
icebp
mov
add
mov
dec
dec
or
emms
fcomp
fcmovnb
mov
or
jno
jo
add
pop
cli
ins
in
pop
jmp
movs
out
pop
enter
xchg
and
pushf
into
fistp
push
xchg
and
mov
fdivr
mov
push
add
dec
adc
int3
mov
fwait
xchg
inc
xchg
rol
adc
(bad)
sahf
mov
dec
gs
mov
cmp
(bad)
dec
(bad)
pushf
stos
pop
fwait
mov
xchg
add
loope
mov
cmps
pop
adc
or
add
xchg
xchg
fdiv
mov
xor
dec
and
dec
inc
push
test
pop
in
ins
push
iret
pop
pop
daa
push
pop
fidivr
inc
inc
std
inc
add
adc
pop
in
mov
jmp
pop
push
test
int3
fisubr
mov
mov
fdivr
pop
bound
out
xor
pusha
dec
and
xor
pop
aaa
push
nop
into
repz
inc
(bad)
mov
sub
bound
sbb
test
mov
or
sbb
hlt
and
jns
sti
stc
or
cli
xchg
sbb
xchg
cmc
and
sub
stos
xor
mov
mov
pop
cmp
pusha
fadd
add
mov
inc
adc
outs
xchg
push
mov
jecxz
mov
std
wbinvd
mov
daa
dec
dec
ja
mov
adc
test
arpl
and
mov
call
inc
jl
loope
inc
pop
loopne
movs
shr
dec
xor
inc
push
xor
or
mov
mov
sub
pop
loopne
fs
inc
in
int3
sub
ss
sbb
out
aas
ds
mov
or
fsub
pop
jae
mov
inc
sub
das
jge
ins
and
cmp
push
in
ret
add
xor
loope
push
test
dec
outs
pop
call
mov
sti
sub
test
fcomp
ja
or
dec
retf
lods
scas
scas
jmp
ins
cdq
das
test
out
(bad)
dec
cmp
push
int3
pop
in
xchg
mov
outs
cmp
not
mov
shl
ror
test
add
jle
icebp
pop
les
and
(bad)
nop
cmps
repz
mov
stos
or
ror
mov
jae
mov
mov
fmul
in
out
push
psllw
jg
ret
jle
mov
push
inc
cmp
inc
shl
cmp
push
cmc
cld
sub
dec
ss
cs
retf
cmp
sbb
inc
push
pop
retf
and
(bad)
ror
cmp
cmps
mov
jecxz
mov
xchg
cs
(bad)
mov
jle
es
pop
fisubr
xor
int3
xlat
repnz
je
ds
out
mov
pop
or
ins
dec
sar
inc
mul
clc
and
and
add
mov
push
dec
cmps
push
adc
movs
jnp
cmp
cmps
or
jecxz
jmp
push
scas
gs
cmp
ret
shl
mov
xchg
ret
mov
mov
push
or
cmp
sbb
and
jnp
mov
addr16
xor
rcr
inc
inc
sahf
data16
mov
jmp
mov
mov
(bad)
dec
loopne
es
in
mov
pop
push
jp
or
xchg
shl
mul
sbb
and
stos
inc
ds
mov
mov
mov
mov
mov
mov
jmp
or
xor
xacquire
jmp
cmp
ficomp
adc
cmp
dec
mov
pop
(bad)
in
xor
jae
das
jle
je
ds
ins
js
cmp
out
jmp
es
loop
fcom
xchg
mov
mov
call
jbe
les
mov
lods
jnp
adc
push
lods
add
mov
imul
cmp
(bad)
push
sub
push
imul
stc
into
mov
out
push
and
push
hlt
mov
adc
sub
cmps
repz
shr
sti
sbb
(bad)
mov
adc
or
in
ret
fs
(bad)
mov
or
xor
adc
int3
fistp
mov
sub
imul
out
and
rcl
call
test
pop
adc
xchg
fwait
adc
pop
gs
jbe
mov
sub
or
fs
hlt
out
fisttp
out
stc
jae
loope
cli
test
scas
sbb
in
popa
(bad)
clc
push
jecxz
mov
and
push
pop
and
cmp
mov
outs
mov
sbb
xchg
out
push
or
or
std
outs
cwde
push
push
inc
mul
xor
sub
mov
scas
dec
repz
dec
or
jg
test
cmp
jno
xchg
xchg
dec
aam
inc
dec
imul
pop
mov
mov
and
jmp
pop
imul
adc
xchg
pop
cmp
xor
popa
dec
mov
cwde
sub
pop
pop
out
loop
ins
cmp
push
imul
sbb
and
ret
inc
jbe
dec
ss
pop
js
xor
aad
add
jecxz
aam
inc
xor
jbe
jnp
loope
mov
pop
jbe
add
cmp
jns
iret
mov
cmp
xor
cmp
push
xor
lds
scas
jg
and
(bad)
cmp
mov
cmps
xchg
sbb
inc
jge
fucomp
fsubr
(bad)
or
push
xchg
sbb
jl
jmp
jp
sti
xor
sub
ins
sahf
lods
jmp
(bad)
icebp
(bad)
fcomp
jbe
mov
aas
loope
pop
mov
popa
dec
lods
ret
pushf
jo
add
aam
mov
stos
xor
push
lea
mov
hlt
push
fbld
pop
xchg
bound
push
xor
jns
mov
jo
(bad)
jmp
dec
xor
inc
idiv
imul
test
pushf
and
add
ret
rol
push
shl
mov
adc
enter
(bad)
scas
fisubr
addr16
inc
inc
jmp
das
inc
popa
test
mov
ret
add
jnp
mov
mov
sar
jmp
mov
xor
sub
jg
jb
jbe
mov
jp
mov
mov
loopne
adc
sahf
scas
push
add
test
xor
sbb
ins
push
push
imul
mov
lock
xor
push
gs
add
out
cmps
movs
rcr
sub
aas
aam
dec
stos
leave
adc
sbb
mov
mov
das
pop
lods
jecxz
mov
push
scas
lods
sti
adc
sub
pop
pop
and
mov
arpl
fdivr
jmp
inc
sub
jne
test
cmps
jp
stos
add
push
iret
mov
stos
mov
mov
in
cs
stos
cwde
and
or
inc
fcom
sub
ja
jp
adc
lds
mov
xchg
mov
gs
je
mov
push
xchg
aam
scas
dec
push
sbb
lahf
add
fbld
and
xchg
inc
jbe
cmps
loopne
jbe
hlt
inc
retf
shl
xchg
dec
fs
imul
adc
push
mov
cmp
int
dec
push
in
rol
fistp
sub
popa
xor
inc
xchg
xor
popa
push
sub
fsubr
lods
xchg
loopne
xor
dec
mov
sbb
fcomp
pop
jmp
js
push
pop
sub
movs
cwde
stos
dec
and
mov
push
lods
sub
push
sub
xlat
xchg
shl
(bad)
out
sbb
jo
fdiv
mov
mov
jp
xchg
push
jo
xor
mov
idiv
lock
xor
and
or
nop
cmps
cmps
xor
pop
nop
cli
sub
les
lods
nop
push
pusha
test
retf
and
and
addr16
cs
sar
daa
or
xchg
mov
add
pop
shl
xchg
mov
shl
ds
movs
out
push
xor
mov
xor
stc
pop
ins
and
mov
xor
dec
jecxz
jg
gs
arpl
fidivr
rcr
push
add
or
shr
outs
and
scas
push
mov
leave
in
test
mov
add
rcl
in
pop
movs
idiv
sub
imul
mov
inc
xor
fisttp
adc
shr
pushf
jb
push
jp
jg
cmps
inc
mov
mov
sub
sub
stos
push
or
adc
inc
loope
xlat
mov
jecxz
repz
shr
or
clc
and
jo
push
mov
mov
ins
jbe
adc
mov
mov
dec
pop
(bad)
(bad)
das
out
fidivr
loope
shr
mov
mov
jns
mov
(bad)
call
sbb
push
cmp
repnz
pop
cmp
inc
or
stc
and
and
popf
sbb
iret
ror
cli
stc
or
jmp
push
cmp
(bad)
in
ds
lods
jae
sub
dec
daa
imul
jp
cs
sub
fmul
popf
inc
shl
mov
adc
rol
rcr
sub
pop
adc
bound
pop
mov
je
sub
repnz
push
jno
cmp
test
aad
mov
add
repnz
aaa
push
push
fldcw
xchg
(bad)
repz
add
mov
pusha
mov
cmp
(bad)
and
imul
in
nop
push
icebp
bound
(bad)
sbb
jbe
pop
stc
or
inc
cmc
cmps
mov
mov
sbb
add
test
inc
js
inc
cld
leave
test
jmp
je
scas
ins
int
pop
test
xor
xor
and
jmp
sahf
xor
mov
in
or
xchg
push
mov
out
adc
mov
inc
cmp
ss
pop
ret
shr
pop
ds
mov
lea
push
jg
and
pop
sahf
jge
in
shr
into
scas
ss
cmp
or
(bad)
jnp
add
jecxz
lahf
movs
bnd
and
xor
add
mov
mul
aad
stos
push
adc
movs
mov
push
mov
mov
ret
jecxz
je
mov
jl
xchg
pop
call
into
gs
or
ficom
xor
fidivr
loopne
mov
push
pop
xlat
jmp
jnp
push
rcl
mov
(bad)
mov
enter
xor
ror
shl
mov
xor
clc
adc
(bad)
mov
fwait
lahf
sti
stc
out
pusha
cmps
fadd
mov
(bad)
es
clc
dec
pop
push
out
test
sahf
and
mov
mov
add
dec
and
lahf
inc
repz
cmp
mov
aad
dec
add
bnd
inc
(bad)
dec
loope
dec
test
add
cmp
jg
cs
xchg
daa
xchg
push
dec
stc
push
shl
mov
xchg
cmc
loop
call
fisubr
cvtps2pd
lods
ret
adc
sub
ret
pop
inc
xor
pop
mov
cmp
or
xchg
aas
push
outs
fldenv
bound
jo
jbe
int
cmp
or
push
jmp
test
or
je
xor
pusha
in
sar
out
push
pop
(bad)
push
imul
mov
daa
xlat
jmp
mov
in
clc
iret
fistp
ss
sub
xchg
addr16
(bad)
jns
stos
mov
fild
push
xchg
ficom
and
(bad)
jmp
in
stos
outs
cmc
mov
test
movs
neg
out
inc
sbb
call
jnp
dec
pop
push
jbe
push
or
outs
lods
cmp
adc
daa
pop
das
pop
xchg
push
pop
scas
data16
mov
or
mov
mov
retf
sahf
adc
xchg
sbb
int
fsubr
jle
hlt
in
cdq
add
sahf
in
xlat
push
ins
dec
popa
fmul
fdiv
adc
mov
mov
aaa
adc
add
jge
or
sbb
nop
arpl
lock
inc
sub
shl
ins
add
or
fmul
inc
mov
(bad)
jb
push
push
inc
outs
loopne
mov
cmps
(bad)
sahf
je
pop
call
clts
mov
add
cmps
xor
xor
sar
ret
pop
pusha
cld
sbb
and
add
mov
retf
mov
pop
jae
cmp
test
xchg
or
arpl
sub
pop
into
in
gs
out
xor
out
jle
jno
aad
add
lock
mov
inc
cmp
push
add
(bad)
adc
or
inc
stos
in
js
cmp
ret
cmp
loopne
fdivr
inc
outs
cwde
xor
mov
je
jns
or
lahf
outs
addr16
popf
ret
push
sub
mov
aaa
cmp
and
xchg
adc
loopne
js
jmp
push
outs
xor
inc
xchg
mov
mov
(bad)
adc
(bad)
mov
sub
stc
ja
mov
test
cli
xlat
mov
sar
inc
push
mov
gs
loopne
xor
adc
pop
mov
jbe
xchg
not
cmp
xlat
lods
fist
push
mov
out
stos
pop
out
mov
shl
call
dec
popf
push
mov
out
pop
adc
sub
jl
and
pop
xor
dec
test
stos
(bad)
rcl
push
ret
sub
sbb
lods
loop
ja
inc
daa
or
fldenv
inc
dec
push
adc
int3
into
mov
cmps
mov
and
cld
add
aas
out
aad
mov
icebp
add
ins
mov
out
xor
enter
ja
test
adc
jo
hlt
pop
push
out
(bad)
sbb
jle
imul
inc
not
inc
jl
jno
enter
(bad)
push
ds
out
fstp
mov
mov
je
(bad)
repz
pop
cmp
mov
push
mov
shl
mov
scas
imul
jge
test
adc
or
adc
aam
push
in
pop
and
mov
sbb
sub
fstp
ins
lds
mov
push
mov
xor
push
push
jnp
js
pop
adc
mov
jl
and
xchg
pop
or
xchg
(bad)
xlat
fwait
pop
pop
sbb
out
cli
push
cmp
iret
jecxz
push
lea
xor
rcr
enter
bound
inc
mov
aam
mov
jmp
inc
je
pop
jo
call
dec
rcr
fcmovbe
jmp
dec
or
dec
div
add
lea
in
lea
mov
popf
jo
nop
loop
mov
pop
lds
std
test
sbb
and
add
jl
mov
mov
iret
cmps
push
and
stos
aas
dec
add
pop
outs
(bad)
int
pop
ret
xchg
or
mov
adc
not
jge
rdpmc
out
dec
mov
push
mov
cwde
jge
add
or
or
pop
out
test
ret
mov
cmp
xor
adc
movs
dec
push
mov
push
(bad)
jns
dec
loop
xchg
mov
cmp
add
jp
cmps
lods
xchg
jb
mov
ins
and
pop
mov
or
xchg
cld
(bad)
mov
test
int3
es
push
pushf
and
pushw
or
push
lods
xlat
jle
imul
ds
cmps
push
xor
sub
in
test
or
repnz
push
bnd
test
jmp
push
cmp
sub
xchg
add
pusha
sub
pop
or
scas
outs
and
pop
inc
shl
clc
mov
and
(bad)
adc
or
inc
cmp
iret
inc
repnz
stc
retf
cmp
xor
mov
xor
out
into
fucomip
cmp
js
fdivrp
ret
and
retf
mov
ret
xchg
pop
push
ins
xchg
pop
pop
cmp
mov
xor
mov
fldenv
xlat
call
lods
fdiv
add
int3
adc
and
or
pop
push
loop
jne
test
pop
imul
adc
(bad)
ret
lock
outs
imul
popf
add
mov
push
pop
mov
xchg
pusha
sub
pop
fldcw
mov
cwde
into
stos
das
dec
xor
push
retf
push
mov
rol
or
aaa
sahf
xchg
shl
sbb
mov
std
fst
mov
jle
(bad)
stc
and
sub
xchg
imul
repnz
(bad)
cld
test
or
std
fiadd
pop
fild
stos
and
in
lds
xchg
data16
bound
pushf
data16
jo
and
mov
fsubp
jp
movs
out
push
dec
add
repnz
test
movs
xchg
sbb
icebp
xor
pop
out
call
in
aas
mov
fld
sti
fnsave
jecxz
mov
mov
std
add
add
mov
imul
lock
push
fwait
cmps
and
adc
jmp
and
lea
mov
cmp
scas
out
cmps
int
lahf
jl
cmp
add
(bad)
adc
mov
aas
lahf
(bad)
pop
pop
jmp
cmp
fcomi
hlt
popf
es
daa
outs
adc
adc
push
mov
fs
les
xchg
adc
or
pushf
xchg
or
enter
data16
clc
xchg
sbb
jne
and
aaa
movs
sub
push
and
jns
jo
pop
inc
(bad)
loop
vandnpd
and
mov
jmp
inc
cwde
cdq
shl
aam
mov
ins
jmp
or
mov
test
jle
or
mov
xchg
fld
pop
sub
aad
fdiv
aam
sub
lds
pop
cmp
popa
loopne
mov
cmp
test
push
xchg
out
icebp
adc
scas
add
cmp
adc
mov
lock
push
mov
cmc
fsubr
pop
sub
push
(bad)
xor
aaa
xor
mov
cmp
ins
aam
xchg
cmp
mov
repnz
pop
sbb
scas
mov
loopne
addr16
mov
inc
inc
call
leave
cli
(bad)
(bad)
add
pop
and
xchg
mov
pop
push
scas
outs
xor
scas
push
mov
cmp
imul
and
out
loop
mov
(bad)
and
pop
dec
outs
mov
push
lahf
xchg
push
dec
pop
cmp
pop
scas
xchg
arpl
push
ds
push
aaa
mov
or
sar
(bad)
jmp
dec
call
inc
cs
inc
or
push
dec
xor
xchg
aad
js
pop
or
mov
std
mov
cmp
clc
pushf
sahf
jecxz
add
mov
repz
fstp
xor
xchg
mov
out
sub
test
cmps
retf
inc
rcr
pop
cli
cdq
iret
hlt
xor
dec
jle
test
cmp
popa
mov
jnp
aad
push
mov
fdivr
retf
jne
mul
idiv
lock
(bad)
and
imul
(bad)
scas
lock
out
dec
pop
mov
lods
mov
xor
jl
pushf
mov
sbb
imul
cmps
fst
popf
mov
push
ja
ds
xchg
inc
adc
sbb
fdivrp
inc
mov
sbb
jae
movs
sahf
(bad)
int3
cmp
dec
jmp
xchg
pop
jecxz
jns
adc
pushf
and
hlt
das
popa
dec
gs
jno
push
mov
shl
xlat
inc
cmp
jmp
arpl
sbb
mov
push
mov
int3
je
popa
gs
add
add
out
mov
cld
mov
cmps
cmps
loopne
sub
mov
xor
xchg
cli
cli
xchg
sub
(bad)
sbb
cmp
mov
sbb
ret
stc
xchg
loop
shl
lods
cdq
ror
mov
adc
cmp
rcl
inc
(bad)
jl
outs
jo
out
jmp
sbb
hlt
sbb
cdq
outs
lds
fnstenv
mov
add
mov
push
pop
or
cmp
xchg
cmp
(bad)
xchg
call
cmp
xor
fimul
xchg
mov
or
aam
loope
fwait
inc
inc
(bad)
pop
stc
es
xchg
jecxz
mov
nop
inc
mov
cmp
adc
not
lock
enter
pop
cld
mov
out
pop
push
cmp
and
dec
test
jmp
sbb
mov
cmc
test
test
hlt
in
idiv
push
xor
js
stc
in
jle
push
or
inc
ss
in
mov
ins
(bad)
retf
mov
je
mov
(bad)
fcmovnb
in
pop
xor
iret
add
scas
or
imul
xchg
je
int
and
pop
pop
popa
popf
vpsubq
ret
push
push
pop
xchg
lahf
jp
in
xchg
xchg
sti
jnp
mov
and
(bad)
fdivr
cmp
sub
inc
add
cmc
adc
test
fstp
not
mov
movs
push
jbe
push
or
xchg
push
leave
test
mov
(bad)
ds
dec
das
sbb
push
jb
leave
out
iret
or
push
scas
in
sub
lock
mov
inc
push
cmp
mov
push
jnp
pop
push
iret
pop
dec
clc
xchg
jne
test
test
push
jge
add
(bad)
jb
cli
data16
retf
(bad)
je
std
pop
jl
jnp
ror
outs
sbb
data16
cmp
aas
bound
mov
popa
aaa
(bad)
dec
pushf
xor
jo
push
fcmovnu
call
xchg
adc
push
xchg
dec
push
cmc
es
push
jle
adc
mov
mov
sar
sbb
push
mov
xchg
loopne
mov
add
push
hlt
sbb
ss
(bad)
jmp
ss
aad
stos
aad
dec
jbe
push
adc
mov
xchg
dec
xchg
rcl
ja
cmp
cmp
psraw
ss
les
sbb
test
leave
sub
lahf
cli
ret
lock
sbb
movs
test
lahf
jae
sti
int
mov
pop
loop
cmp
xor
cmp
psllq
dec
mov
sub
bnd
adc
pop
inc
(bad)
lahf
or
hlt
jo
push
add
sub
cwde
fs
call
lods
loop
in
sub
jno
push
add
test
inc
in
and
mov
dec
in
iret
mov
mov
vmwrite
in
frstor
mov
dec
clc
inc
scas
mov
and
stos
lea
jbe
fisub
jne
sbb
xchg
call
not
test
out
in
pop
sbb
or
cmc
push
pop
pushf
push
dec
pop
mov
sti
into
and
xor
jmp
sub
in
adc
cmps
imul
(bad)
in
outs
cmp
mov
fisttp
(bad)
mov
movs
or
scas
and
in
adc
mov
nop
jmp
mov
in
mov
push
xlat
clc
mov
sbb
shl
clc
out
adc
cmc
mov
and
test
pop
mov
in
sub
lods
cs
pop
xchg
jnp
push
and
sbb
out
daa
retf
or
dec
adc
push
int
cld
jb
mov
mov
jle
mov
push
jbe
adc
les
sbb
ds
fsubr
jecxz
rcl
test
xor
dec
mov
inc
xchg
pop
and
and
or
fucomp
repz
sub
imul
lods
add
cmp
sub
push
(bad)
or
sbb
and
add
pushf
gs
add
frstor
cdq
lds
fs
inc
loope
call
sbb
movs
jmp
int
adc
retf
jp
int
xchg
sub
mov
fstp
(bad)
es
cmp
and
pushf
dec
dec
rol
fs
and
outs
pop
cmp
and
xchg
jb
inc
sbb
sbb
fcomp
rcl
mov
arpl
pop
jns
mov
pop
mov
fwait
addr16
popf
cmp
and
out
es
icebp
jno
xor
or
jnp
cmp
mov
mov
(bad)
(bad)
xor
js
inc
imul
std
loop
clc
paddq
mov
jge
imul
adc
push
das
mov
xor
add
loopne
mov
dec
aas
ins
jge
mov
stos
or
mov
dec
adc
jle
mov
dec
out
daa
mov
lea
adc
js
shl
sti
lds
cmp
mov
imul
mov
je
daa
mov
push
aas
fild
xchg
sub
push
dec
push
lods
sbb
ficomp
outs
dec
pop
cli
xor
push
rcl
mov
lods
mov
in
(bad)
pusha
push
xchg
or
js
dec
(bad)
push
rol
pop
movs
inc
je
sbb
fisubr
adc
lods
pop
jmp
adc
dec
inc
jmp
cmps
std
push
adc
out
ds
xor
jmp
punpcklbw
jo
in
xchg
mov
mov
adc
dec
adc
loop
cmp
cmps
ins
jl
pushf
push
(bad)
jno
mov
ins
mov
shr
cmp
or
mov
and
pop
into
aam
dec
cmps
sub
inc
call
sub
int
push
out
int
les
adc
pop
push
(bad)
(bad)
or
mov
pop
mov
(bad)
pusha
mov
enter
(bad)
mov
call
repz
in
fdivrp
mov
int3
pop
push
movs
pop
and
xchg
test
cmp
cld
jp
js
dec
push
loopne
inc
retf
push
jne
push
pop
cmp
push
rcl
clc
push
mov
add
std
cmp
adc
ja
mov
dec
push
sar
or
test
(bad)
mov
movs
pusha
(bad)
pop
(bad)
(bad)
retf
jnp
fs
dec
xor
lods
mov
enter
sub
sub
pop
shl
jl
fdivr
pusha
lods
ja
dec
cmc
daa
adc
xchg
mov
xchg
pop
lds
mov
outs
sbb
ret
push
jp
push
jno
jp
cmc
sbb
leave
int3
xchg
add
sub
stos
xchg
lods
jp
or
in
outs
sti
cmps
sbb
jecxz
xchg
lods
or
push
pop
addr16
mov
clc
xchg
lods
add
icebp
sbb
shr
hlt
std
cld
xor
xor
push
(bad)
fcmovb
mov
in
and
add
scas
lahf
push
xchg
adc
xchg
push
aaa
loop
ror
mov
add
(bad)
mov
loop
lods
push
push
mov
dec
fcomp
push
ja
out
lods
lahf
mov
inc
dec
(bad)
icebp
fiadd
and
cdq
pop
jne
mov
fnsave
mov
vpmaddwd
adc
dec
movs
pop
shl
cmc
or
popf
inc
pop
fld
test
inc
jge
(bad)
inc
adc
nop
stos
outs
push
mov
xchg
push
or
pop
jnp
cmp
scas
and
jbe
test
(bad)
jns
ror
pop
xlat
or
push
or
pushf
push
pushf
cmps
sbb
push
ficomp
mov
jl
daa
idiv
call
push
adc
or
popf
clc
push
rcr
pop
inc
out
mov
retf
mov
jge
sti
mov
xlat
push
es
aam
nop
daa
fild
cmp
aam
jmp
dec
mov
imul
loopne
xchg
fld
push
xchg
mov
mov
adc
fcomp
aas
dec
iret
psrlw
inc
and
cmc
clc
fs
mov
xchg
outs
cmp
hlt
jmp
or
shl
xor
inc
push
shl
dec
(bad)
mov
ins
push
fcomp
or
outs
fild
fwait
and
arpl
dec
aam
loope
loop
and
not
pop
xor
inc
add
std
adc
enter
mov
xor
popa
movs
nop
mov
sub
loop
(bad)
add
es
dec
into
jbe
mov
pushf
mov
test
xor
or
xor
mov
arpl
mov
mov
outs
mov
into
dec
xchg
mov
inc
imul
cwde
adc
xchg
mul
rcr
jbe
hlt
rcr
pushf
movs
jmp
mov
lea
popf
and
pop
xchg
xchg
test
xor
xor
pusha
movs
neg
setns
in
mov
adc
cs
fst
adc
sbb
dec
dec
adc
cmp
mov
add
stos
sbb
sub
dec
mov
fnstcw
or
adc
and
sub
nop
test
cmps
sbb
ficomp
adc
(bad)
mov
add
mov
dec
cs
sub
jne
or
inc
ja
rol
shl
jp
imul
mov
sahf
mov
mov
adc
call
loope
adc
cmc
cld
xchg
(bad)
push
dec
mov
rol
cmp
(bad)
pop
xchg
into
and
and
dec
jnp
or
in
sbb
mov
psubusw
add
repz
adc
inc
call
int3
xor
mov
mov
inc
mov
je
xchg
retf
(bad)
xor
test
movs
add
cmp
inc
lock
bound
and
ret
mov
jns
mov
and
pushf
ss
cld
sub
outs
sbb
cmc
cld
jmp
inc
pop
mov
fist
fisttp
push
or
stos
retf
mov
xor
lods
scas
cmp
dec
sub
(bad)
mov
bound
nop
inc
jle
pop
shr
or
lods
repz
add
xchg
jp
mov
ja
dec
retf
push
out
fwait
jecxz
jmp
mov
scas
mov
es
scas
jmp
cmps
add
adc
cmp
mov
cli
fild
push
jg
inc
pop
push
retf
sub
push
jmp
push
sub
popf
pushf
retf
sbb
jae
lea
shl
xchg
jne
in
xchg
sahf
pop
mov
cmp
loope
stos
test
cmp
xor
jnp
enter
or
lods
and
pushf
jo
shl
fild
repz
pusha
inc
js
dec
mov
mov
test
pop
dec
daa
xchg
push
cmp
and
xchg
mov
dec
int3
jmp
xchg
cwde
fwait
ins
loop
clc
call
mul
jno
jo
daa
repz
in
sbb
stc
mov
ds
int
f2xm1
imul
xor
mov
mov
(bad)
cli
cmps
xor
sahf
in
xor
out
mov
sahf
inc
test
(bad)
das
in
dec
(bad)
jp
mov
pop
test
dec
in
sbb
int3
cwde
int3
jno
jns
test
stos
sub
dec
and
inc
adc
movs
inc
scas
sbb
push
adc
push
call
inc
stc
les
in
pop
add
push
mov
push
mov
out
pop
xchg
and
les
jg
mov
pop
and
xchg
xchg
or
add
xor
lods
out
mov
add
pushf
test
inc
pop
aam
daa
data16
sub
fnstenv
xchg
add
js
sub
lods
cs
mov
adc
loope
movs
push
stos
xchg
inc
mov
or
imul
arpl
mov
mov
mov
pop
inc
and
cmp
add
adc
ds
cwde
add
mov
cmps
sub
jnp
retf
mov
push
(bad)
call
jp
adc
or
nop
lods
add
sbb
pushf
fcmovb
xchg
xor
dec
mov
add
jb
xchg
es
adc
and
mov
hlt
push
xor
jno
cs
and
mov
dec
push
imul
jae
lods
mov
popf
xor
loope
or
add
mov
leave
dec
retf
cmp
and
jns
jmp
xchg
jo
xchg
sbb
xchg
mov
sbb
mov
sbb
sub
fnstsw
popf
sub
jnp
retf
fstp
push
out
sbb
imul
loopne
and
sub
out
imul
iret
mov
dec
cmps
(bad)
jnp
mov
loope
sbb
mov
mov
pop
inc
fimul
call
sbb
sub
jns
dec
dec
and
ficom
outs
mov
int3
jae
mov
(bad)
into
and
not
jle
repnz
add
cmp
xchg
lods
jbe
sub
or
loope
jnp
ins
inc
push
lock
adc
mov
lods
cmp
nop
sbb
sub
nop
add
and
cmp
push
xchg
or
imul
nop
bound
sub
and
ror
xor
(bad)
int3
xor
mov
scas
xor
je
in
sub
adc
mov
fs
and
fsub
sbb
das
cmps
cmovbe
idiv
jle
jo
or
lock
add
cmp
clc
push
loopne
ds
inc
jge
aam
pop
jne
fist
aam
aam
repnz
lds
popf
test
xlat
ret
mov
pop
jp
sub
xlat
popa
mov
push
jns
pushf
jno
mov
dec
enter
pushf
push
fsubr
iret
stos
in
loope
movs
sbb
inc
(bad)
jp
jmp
jne
sub
lahf
shl
stos
mov
movs
int
and
mov
out
fadd
mov
push
call
ds
adc
arpl
sub
add
repz
mov
cmps
cmc
bound
xor
xor
jle
push
sub
retf
adc
jp
sub
push
(bad)
loopne
adc
dec
sbb
push
das
fs
mov
(bad)
mov
jmp
fild
dec
lds
mov
cmps
fucomi
les
jle
lgs
adc
mov
(bad)
out
xchg
popf
and
sbb
test
dec
(bad)
fadd
stc
push
cld
jl
int
mov
aaa
adc
fwait
xlat
push
add
mov
sahf
xor
mov
and
pop
pop
lods
add
cmps
add
mov
jge
pop
std
and
bound
leave
rcl
call
push
mov
retf
cld
nop
aad
ret
addr16
dec
pop
jmp
imul
or
in
(bad)
retf
in
icebp
inc
add
ficom
jp
fwait
ror
scas
enter
mov
mov
jge
loope
movs
pop
pop
bound
xchg
mov
int
xor
das
out
add
cmp
iret
sbb
mov
lods
dec
pop
lods
push
test
repz
std
stc
retf
vpmuludq
mov
adc
mov
xchg
es
xor
ret
cmps
xor
adc
mov
jns
pop
sar
popa
inc
test
ins
push
iret
push
in
pop
add
jg
shl
cmp
lods
bound
inc
push
pop
push
xor
xor
call
cwde
pop
lods
or
shr
add
jmp
addr16
dec
mov
dec
sub
and
movs
mov
adc
dec
(bad)
push
pop
scas
popf
add
push
and
fadd
add
rcr
fnsave
fst
mov
out
cmp
jmp
sub
adc
ds
iret
aad
repz
jg
push
(bad)
fisubr
rcr
gs
sub
sub
rep
sub
mov
stos
sti
loopne
inc
cmps
dec
retf
test
in
outs
xchg
mov
xor
cmps
jmp
mov
sub
pop
mov
fcom
pop
jb
adc
cmp
mov
add
call
pop
(bad)
pusha
pop
dec
mov
test
sti
in
stc
push
xor
mov
in
mov
jp
and
inc
pop
lahf
repnz
loopne
lea
mov
inc
or
lods
(bad)
scas
out
movs
mov
and
xchg
(bad)
movs
cmp
push
lahf
push
inc
stc
fcomp
(bad)
cmps
jo
sahf
or
hlt
out
rcl
shl
ss
jl
dec
setl
xor
out
in
jg
xchg
sub
ficom
jle
or
sub
scas
ja
je
or
jmp
adc
mov
fisttp
dec
fstp
inc
mov
mov
std
mov
shl
inc
stc
test
xor
xor
lods
xor
and
cli
mov
lahf
ins
or
enter
pop
(bad)
pushf
inc
pusha
jl
dec
arpl
mov
stos
out
jp
mov
add
nop
inc
pop
or
shl
adc
dec
out
enter
call
stos
call
out
jge
xchg
sub
push
(bad)
mov
push
test
cmps
rcl
popf
sahf
cmps
test
jecxz
jns
fcmovnbe
add
sti
in
mov
ins
pop
pop
bound
in
pop
cli
leave
jnp
cwde
or
in
mov
dec
pop
adc
aad
lods
xchg
xchg
mov
dec
scas
mov
stos
xor
jecxz
xchg
(bad)
sar
dec
add
sub
sub
xchg
(bad)
xor
or
sti
mov
retf
mov
xchg
add
cmp
push
in
mov
add
jb
fs
inc
cmps
jp
(bad)
repnz
push
push
je
imul
mov
or
inc
neg
test
xchg
call
and
cmp
clc
or
sub
sbb
lods
mov
adc
data16
jo
hlt
in
mov
das
ins
xor
mov
or
aas
idiv
or
push
fisttp
gs
add
xor
pop
test
inc
(bad)
sahf
loopne
jno
jo
aad
inc
outs
outs
fcom
inc
pop
retf
movs
lods
mov
push
mov
pop
jmp
retf
sbb
jp
lock
and
mov
and
aaa
pop
xor
leave
xor
fldcw
jb
stc
mov
mov
jl
xchg
mov
out
es
inc
cs
call
adc
push
cdq
or
cs
inc
mov
push
pushf
dec
xor
stc
xchg
cmp
imul
or
in
movs
out
add
jge
stos
sti
cmc
pusha
mov
xchg
and
xor
xchg
ins
stos
push
or
in
shl
pusha
sbb
add
mov
hlt
out
add
adc
imul
mul
pop
stos
dec
lahf
jmp
mov
mov
dec
pop
mov
xchg
or
mov
fs
fdiv
outs
outs
rol
ror
movs
adc
in
das
out
cmps
shl
ins
jl
fidiv
and
sti
es
mov
jnp
aad
mov
cmp
retf
test
mov
lock
ror
inc
call
xor
cmp
bound
jl
call
sub
ret
(bad)
lods
jmp
inc
jge
hlt
fild
push
sbb
cmps
int
mov
dec
mov
xchg
es
mov
sub
sbb
jns
(bad)
xor
mov
or
inc
scas
fs
fcomi
lea
xchg
xor
mov
sub
sub
aam
pusha
pushf
and
ja
dec
push
cmps
enter
test
shufps
jnp
jge
push
mov
out
movs
sbb
xor
pop
jbe
cmp
jns
into
cmp
mov
jle
lds
or
outs
push
xchg
jmp
shl
ds
cmc
sbb
int
(bad)
loop
add
loopne
popf
cmps
inc
sub
xor
pop
ror
mov
std
add
jbe
bound
mov
mov
pop
pusha
xchg
ror
xchg
and
dec
pop
mov
jmp
es
ret
scas
push
fnstsw
cmc
add
frstor
cdq
out
imul
and
lods
or
(bad)
jne
xor
lds
test
and
aas
ret
je
mov
add
lds
sbb
mov
cmp
pop
xor
jle
cli
test
lea
push
add
retf
scas
fsubr
call
clc
mov
cmp
neg
cld
fnstsw
sbb
movs
push
sub
jns
xchg
movs
and
call
xchg
mov
sar
call
nop
mov
sub
adc
stos
adc
mov
stc
cmp
sahf
(bad)
cli
mov
mov
xor
imul
div
sbb
test
jns
adc
fdivr
sbb
es
sti
push
sbb
fisubr
sar
dec
jnp
sti
lahf
lea
adc
int
push
in
mov
dec
dec
pushf
sbb
repnz
inc
aas
in
mov
cmps
stc
and
xor
shl
inc
push
movs
adc
jge
out
fstp
sub
jge
adc
mov
mov
ror
out
mov
pop
sub
sbb
pop
(bad)
(bad)
jbe
push
mov
imul
or
das
jmp
dec
sbb
int3
retf
fcomp
int3
popf
adc
jae
jp
imul
mov
or
push
or
xlat
fdiv
jo
sub
jno
mov
scas
aad
(bad)
pop
xchg
imul
cmps
shl
mov
mov
sub
mov
jnp
mov
and
pop
and
ds
push
dec
hlt
pop
push
mov
call
es
data16
push
add
shr
jo
xchg
xchg
test
aam
sar
sbb
add
push
inc
cli
cmp
clc
xor
arpl
stos
push
(bad)
lods
cdq
mov
sbb
retf
push
xor
mov
mov
push
daa
cmp
jmp
fild
inc
jecxz
mov
std
sbb
jmp
in
(bad)
out
jge
test
div
sub
cmp
gs
pop
test
push
adc
lods
mov
(bad)
mov
ror
addr16
cwde
pop
ret
xchg
fs
and
pop
pop
jge
and
repnz
mov
cmps
xchg
mov
jo
dec
jp
jmp
gs
out
inc
mov
bswap
cdq
bound
int3
mov
mov
repz
pop
fsubrp
adc
lahf
or
dec
pusha
jo
out
adc
jb
or
jecxz
ret
outs
hlt
sub
xchg
movs
repz
pop
ret
xchg
cmc
push
(bad)
jg
jmp
push
mov
mov
call
lods
js
and
mov
jb
xchg
sbb
shl
not
popf
cli
mov
jmp
sub
sub
jecxz
idiv
sbb
sbb
xchg
enter
ret
mov
hlt
cli
xor
mov
leave
xor
mov
push
add
add
push
push
dec
add
hlt
mov
fs
leave
inc
xchg
fidivr
or
shl
xchg
mov
cmp
jno
pop
aas
pop
adc
loope
dec
and
(bad)
(bad)
hlt
test
test
shl
jbe
mov
repnz
inc
fcomp
xor
aad
popf
iret
sub
adc
sbb
imul
lods
jg
jl
stos
(bad)
xchg
add
add
dec
xor
mov
xchg
into
ss
hlt
in
fwait
div
mov
cmp
ds
and
popf
sbb
cmps
push
loop
in
scas
mov
repnz
mov
inc
fdivr
test
sahf
retf
dec
mov
loope
outs
mov
mov
add
in
jbe
idiv
xor
stos
ret
test
inc
jge
inc
imul
int
add
xor
in
add
sub
cmp
mov
inc
mov
sti
xor
clc
dec
out
rol
call
or
int
aas
jle
stos
pop
int3
pop
cmp
frstor
inc
cmps
inc
pop
add
xchg
mov
ss
jmp
scas
fcom
fnop
xor
fisttp
inc
dec
jno
arpl
inc
jno
lahf
adc
pop
or
xor
cdq
and
jle
or
xchg
cdq
sbb
das
ror
jmp
or
mov
mov
dec
(bad)
je
adc
fidivr
popf
sub
mov
xchg
xor
xchg
shl
pop
fwait
dec
in
add
mov
add
int
dec
sub
jae
xor
lock
shl
stos
(bad)
unpcklps
sub
push
sbb
inc
xchg
lods
pop
jbe
mov
push
mov
inc
or
add
enter
sbb
sub
or
icebp
fwait
mov
xor
sub
jmp
mov
pop
adc
fist
mov
xchg
cs
in
sbb
in
and
fsubr
inc
push
mov
add
int3
loopne
aas
outs
fxch
add
iret
(bad)
push
and
inc
bound
test
pop
push
aad
mov
jg
xchg
add
add
jns
inc
loopne
int
pop
call
mov
pop
dec
lods
jnp
xchg
out
aad
movs
sbb
in
inc
jne
and
add
imul
sub
scas
hlt
fistp
fnstsw
jmp
sti
push
les
imul
ja
mov
add
and
inc
cdq
mov
mov
cmp
nop
mov
xchg
jecxz
ja
jae
jbe
push
mov
movs
test
cmp
pop
xor
jno
mov
ins
mov
jae
inc
arpl
ror
mov
and
inc
(bad)
jae
push
push
mov
popa
das
movs
aaa
clc
mov
inc
add
cs
push
push
nop
and
mov
jge
dec
adc
cmps
(bad)
ret
out
dec
adc
in
fdivr
pop
pusha
xor
mov
inc
xchg
jnp
jmp
push
jp
cs
mov
sub
cmp
leave
add
xchg
jbe
push
dec
call
adc
scas
mov
sbb
inc
ins
pop
fsincos
cdq
test
sub
mov
mov
imul
push
jmp
mov
popa
xor
sbb
fsubr
and
push
(bad)
xchg
add
les
fistp
mov
mov
mov
adc
and
mov
cwde
cmps
loop
in
xchg
repnz
xlat
xor
mov
jp
call
nop
adc
(bad)
int
in
ret
inc
mov
dec
enter
jmp
push
mov
pop
adc
add
mov
cli
test
sbb
gs
stc
xchg
imul
icebp
aam
mov
(bad)
sbb
dec
out
scas
ret
gs
sbb
mov
jno
mov
cmp
dec
dec
cmp
retf
lds
in
call
mov
or
cwde
pop
jne
lock
repnz
jno
stos
sub
lock
popa
jle
lea
imul
or
out
dec
retf
xor
jle
nop
sbb
add
dec
jno
push
mov
test
jnp
xchg
addr16
xchg
sbb
cmp
retf
scas
add
sub
(bad)
addr16
fadd
stc
fdiv
pop
jno
arpl
int3
push
dec
pop
lock
rcr
push
xchg
dec
shl
daa
jno
(bad)
xor
push
test
loopne
shr
retf
add
mov
shr
and
add
and
rcl
movs
in
dec
loop
repz
imul
pop
mov
popf
(bad)
test
lock
dec
mov
dec
call
and
sbb
add
in
pop
test
iret
mov
or
inc
cmp
xchg
retf
mov
clts
out
and
shl
mov
add
sar
retf
add
in
xor
cmp
and
sbb
jne
iret
push
dec
cmp
rcl
fild
leave
lahf
pop
(bad)
jo
pop
cmp
fisub
out
sbb
add
imul
inc
mov
dec
lea
add
xchg
retf
imul
enter
xchg
pusha
xor
xchg
mov
adc
(bad)
and
sub
aad
aaa
add
xor
iret
mov
aam
fimul
stc
jmp
(bad)
xchg
jns
adc
(bad)
jp
pop
das
nop
sub
enter
push
daa
mov
ret
das
retf
xchg
dec
in
sbb
jne
jb
mov
mov
in
add
pop
stc
repz
mov
sub
sahf
test
sub
in
ja
mov
movs
data16
inc
xor
or
out
cmp
sbb
data16
aad
sbb
call
pop
jnp
cdq
jo
mov
mov
in
sbb
icebp
cs
xchg
xchg
imul
loopne
add
mov
dec
push
mov
data16
or
mov
(bad)
cs
or
outs
bound
lea
push
sbb
rcl
or
cmp
jle
sbb
mov
lock
fucompp
pop
test
test
mov
scas
fst
iret
cmps
mov
xor
xchg
lock
ds
fidiv
add
dec
mov
cmp
mov
mov
inc
fistp
les
xlat
mov
lock
jmp
xor
popf
rcr
sbb
sbb
pusha
aaa
sub
adc
mov
je
icebp
jg
inc
sar
sub
mov
jl
cs
shl
fst
sub
mov
fcom
lock
(bad)
enter
jge
scas
sub
in
or
test
push
test
cmp
int
ins
jb
outs
aaa
sbb
pop
xor
retf
mov
jb
test
add
inc
mov
sahf
arpl
sbb
imul
cmp
sub
pop
inc
and
jmp
xor
mov
std
fwait
mov
inc
cld
lahf
adc
fcmove
call
jno
je
gs
pop
pop
pusha
repz
mov
movs
sar
inc
xor
fimul
stc
or
jecxz
sahf
ja
dec
shl
xor
dec
sub
pop
rcr
hlt
and
push
cmp
stos
das
cmp
imul
mov
stos
adc
leave
fsubr
cmp
sbb
stc
mov
xor
adc
xchg
push
dec
cmp
mov
test
mov
iret
pop
ins
ret
mov
div
call
test
(bad)
cmps
pop
repz
pop
in
int3
pop
jne
cmp
ror
movs
pop
call
mov
xchg
mov
es
xor
aaa
mov
loop
push
out
daa
jge
mov
cdq
push
ret
jb
dec
fistp
fisttp
push
out
mov
in
ja
and
gs
out
or
cmp
imul
mov
xor
addr16
in
pop
sub
out
imul
and
xor
xchg
and
jb
inc
gs
push
xor
loope
sbb
out
jmp
scas
xor
dec
neg
jno
scas
test
mov
sbb
(bad)
ficom
mov
std
call
inc
pop
xchg
(bad)
out
mov
xchg
cmc
aas
push
and
in
xchg
ret
and
shl
pop
cdq
push
stos
mov
cmp
ds
adc
jmp
or
test
xor
or
xor
in
or
(bad)
jecxz
mov
dec
jne
or
into
rcr
shl
pop
sar
(bad)
dec
jmp
pop
jle
retf
jle
mov
xchg
test
test
jle
in
inc
cmp
xchg
fist
aaa
mov
fstp
push
enter
mov
sbb
dec
xchg
cmps
dec
ror
lods
loopne
pop
ret
rol
fwait
jmp
mov
xor
pop
push
sub
or
push
leave
lahf
push
(bad)
xchg
arpl
jns
test
cmp
xchg
ins
add
pop
and
xchg
push
pop
bnd
jmp
and
sub
add
call
popf
retf
cld
je
push
sbb
(bad)
mov
pop
or
dec
jmp
mov
(bad)
jmp
mov
and
std
cmp
and
ja
add
jb
xchg
pop
jg
and
xlat
mov
popa
ret
pop
sti
into
(bad)
mov
adc
fst
rol
jecxz
jno
sbb
pop
or
fsubr
in
mov
mov
lahf
or
test
shl
aaa
mov
xor
loop
es
retf
(bad)
or
sbb
fwait
mov
mov
adc
fistp
repz
push
aam
shl
push
scas
push
jae
sub
fst
mov
js
movs
clc
cwde
test
push
and
fidivr
loopne
dec
mov
or
add
(bad)
sar
mov
mov
stos
repz
out
and
sar
loopne
mov
lea
add
mov
mov
mov
xchg
sub
or
int3
data16
rcl
sbb
add
enter
xchg
test
daa
cmp
fidivr
push
mov
pop
and
or
nop
rcl
xor
pop
das
dec
or
lds
cli
(bad)
cli
int
xor
repz
loop
and
add
and
fst
pusha
pop
jg
xor
xchg
mov
cmc
out
jmp
mov
mov
xlat
pop
mov
sbb
or
sub
or
scas
xchg
xlat
sbb
push
sahf
in
test
arpl
jo
ficom
pusha
and
int
ja
clc
cmps
mov
addr16
cmps
jle
fcmovu
mov
jb
test
cmp
fimul
mov
out
ins
jo
nop
clc
retf
sbb
sub
jecxz
outs
jns
ror
leave
mov
fsub
mov
les
(bad)
push
push
inc
or
adc
dec
sub
mov
push
loop
lea
push
out
inc
push
movs
retf
mov
ror
or
lock
lds
test
mov
sub
dec
and
jbe
aas
mov
cmp
sub
adc
imul
fwait
neg
test
shl
push
add
mov
ja
push
add
ss
push
js
pop
dec
add
or
inc
cmp
pop
ss
rcl
xchg
cmp
enter
cmp
test
nop
and
or
adc
pop
mov
inc
pmaxub
ficom
retf
xor
idiv
or
(bad)
loope
es
adc
ins
and
rcl
sub
out
jp
jo
xchg
cwde
xor
add
adc
adc
fsubr
pop
clc
xor
mov
and
cli
xchg
dec
out
jo
mov
loopne
out
inc
xchg
inc
or
mov
jne
(bad)
mov
je
sbb
mov
mov
out
mov
cmp
mov
std
stc
test
mov
mov
dec
pop
mov
enter
loope
inc
loope
cmps
pop
fcom
dec
out
dec
push
jo
ins
mov
add
mov
dec
loope
mov
jge
jg
sub
test
xlat
idiv
jmp
and
adc
sbb
cdq
leave
mov
add
std
test
test
call
xor
xchg
out
arpl
or
std
jg
cmps
fidivr
scas
adc
xor
jge
fxam
fld
push
shl
mov
(bad)
loopne
xor
(bad)
aas
xchg
cmp
mov
or
adc
out
cmp
and
inc
inc
aas
sbb
pop
clc
je
sahf
xlat
sbb
dec
in
das
xchg
inc
sbb
mov
paddq
cmp
mov
cdq
mov
and
add
mov
pop
test
lahf
dec
jo
xor
or
cdq
cmps
dec
daa
mov
push
cmps
js
cli
xchg
sti
out
cmps
xchg
mov
fs
aam
mov
jmp
cwde
loop
mov
adc
xor
rol
add
or
(bad)
in
dec
jno
outs
xor
fwait
mov
push
sbb
cmps
loope
lahf
inc
enter
out
mov
pop
retf
pop
inc
mov
mov
jl
int
hlt
neg
push
sar
sub
jae
pop
cmp
aaa
sbb
add
stos
popf
cld
or
stc
push
sbb
das
sub
(bad)
mov
mov
sub
jae
js
push
(bad)
call
jbe
jecxz
cs
pop
mov
and
dec
mov
xchg
dec
es
mov
mov
push
sbb
and
add
scas
jg
and
xchg
stos
loopne
fidivr
iret
mov
jl
rol
xchg
adc
mov
mov
adc
push
jbe
jnp
pop
jno
imul
mov
call
std
mov
jle
xchg
inc
push
imul
leave
retf
or
cmp
retf
pop
call
add
add
adc
pop
scas
inc
xlat
pop
jbe
adc
cmps
ds
inc
push
cmp
sbb
push
or
push
add
imul
cmp
sub
add
das
and
adc
push
ficom
or
es
pusha
hlt
cmps
add
jo
sti
mov
ror
add
mov
les
jmp
or
sub
addr16
pop
xchg
inc
mov
shr
add
icebp
jle
xchg
in
mov
fisub
and
cmp
stos
jle
bswap
call
and
or
fimul
fidiv
hlt
fldenv
adc
add
cmp
push
sub
and
mov
(bad)
fld
sbb
rcl
push
cmc
jno
in
jle
mov
call
pop
stos
mov
push
call
leave
xor
mov
bound
xchg
stos
add
out
int
and
mov
ficomp
sbb
(bad)
push
in
push
jne
jb
mov
pop
ret
outs
repz
mov
lods
inc
jns
sub
push
pop
jbe
js
cmp
add
mov
mov
shr
mov
int3
cmps
mov
or
mov
mov
xor
aas
cmp
xlat
push
jbe
pop
push
in
out
lock
mov
int
cmp
add
outs
xchg
adc
in
movs
or
pushf
push
aad
sub
pop
stc
push
pop
call
pop
scas
and
add
inc
mov
loop
jns
jmp
cwde
ds
jge
push
les
aas
clc
gs
or
xlat
cmp
add
je
sbb
or
pop
mov
mov
pop
and
pusha
ss
icebp
push
mov
push
push
loope
fist
loope
pop
or
ret
mov
and
cmp
add
cmp
stos
dec
popf
ret
int
xchg
out
aaa
mov
adc
fdiv
pushf
inc
adc
leave
aam
dec
ss
xchg
in
int3
mov
imul
add
cld
int3
mov
fbld
enter
cmps
int
push
adc
cwde
dec
fist
xchg
in
ds
retf
test
inc
je
dec
sub
imul
scas
mov
cmp
cmp
lock
pop
test
push
int3
adc
in
out
jmp
sub
out
or
add
xor
push
push
mov
int3
ror
pop
lods
scas
xchg
push
test
retf
sar
adc
mov
int
pop
inc
push
push
mov
loop
inc
stos
outs
das
push
jbe
jecxz
stos
adc
ss
mov
mov
dec
rol
hlt
test
int3
inc
mov
ins
arpl
in
push
movs
div
mov
cwde
dec
push
jbe
or
arpl
xchg
jle
aas
push
loop
push
test
xor
mov
aad
sbb
movs
jecxz
xor
jb
cmps
test
xor
jae
adc
fdivr
popa
shl
dec
loopne
fwait
arpl
dec
dec
mov
mov
pushf
fucomip
ins
lahf
pop
loope
xor
shl
cmp
xchg
mov
aam
inc
xchg
bt
sbb
retf
jmp
inc
call
shl
jmp
xor
jne
movs
xchg
mov
out
pop
(bad)
mov
dec
sub
addr16
sub
sti
xchg
dec
inc
arpl
retf
scas
scas
and
pop
and
adc
mov
mov
repz
and
push
out
push
popa
push
push
adc
lea
aam
or
std
jno
pop
imul
mov
push
adc
in
jns
scas
and
stc
xor
sub
sub
out
in
pop
test
imul
xor
or
pop
sbb
adc
mov
(bad)
js
mov
jecxz
(bad)
mov
sub
lods
pop
call
(bad)
xchg
call
movs
add
(bad)
cmp
push
nop
rcl
fcos
sub
dec
mov
jl
cli
mov
xchg
loope
fwait
test
test
cld
cli
cmp
cld
(bad)
cmp
dec
hlt
push
cmp
pop
leave
push
xlat
pop
jae
imul
clc
mov
jmp
popf
(bad)
lahf
mov
add
sbb
pop
adc
jmp
pop
mov
inc
xlat
adc
pop
ja
push
add
cwde
or
jge
add
mov
(bad)
push
int3
pop
mov
xchg
xor
cld
or
pop
push
cs
jl
sub
dec
or
aam
loop
pop
mov
push
and
js
into
or
and
idiv
js
add
mov
stc
push
cdq
mov
jg
mov
js
aad
outs
sahf
sub
mov
dec
cmp
lds
xor
cmp
sbb
leave
ins
into
mov
aaa
sub
test
mov
dec
jmp
mov
scas
and
jl
leave
adc
fdivr
adc
adc
mov
push
fsubr
xchg
neg
ja
pop
out
es
scas
cwde
adc
add
fwait
sub
pop
arpl
(bad)
jne
cmc
loope
xchg
mov
js
je
adc
ficom
push
and
outs
and
sahf
push
push
test
iret
adc
mov
rol
sub
xchg
mov
xor
lea
gs
stos
retf
stos
jmp
scas
xchg
adc
pop
stc
mov
sahf
stos
mov
or
add
jmp
int3
add
mov
shr
fcmove
std
call
jmp
call
jns
test
dec
icebp
iret
cdq
dec
cwde
or
cmp
mov
hlt
shr
xchg
xchg
inc
out
pop
(bad)
add
xor
cmc
sbb
xor
push
adc
mov
sub
jge
add
stos
sbb
push
cmp
inc
add
cli
test
pop
imul
xor
jl
inc
or
mov
(bad)
mov
mov
pop
ds
pop
mov
sbb
mov
retf
cmps
pop
dec
sbb
jl
mov
in
dec
dec
mov
pop
mov
push
inc
adc
adc
lds
fnstenv
sub
xchg
mov
mov
outs
rcr
cmp
push
cmp
sub
push
retf
mov
mov
cld
je
mov
in
stos
push
test
outs
inc
mov
mov
out
bound
lock
icebp
(bad)
retf
adc
loop
fist
add
pop
xchg
outs
jo
push
push
sahf
jecxz
jl
mov
loop
out
push
jp
sub
fs
inc
out
mov
imul
dec
(bad)
pop
mov
add
jb
pop
push
sub
(bad)
sub
fist
and
jne
mov
stc
cmc
mov
jne
sti
xchg
adc
into
lods
arpl
pop
fstp
push
lods
aas
mov
fidivr
mov
mov
aam
mov
dec
pop
loope
sub
xor
rcl
xor
ss
sub
fnsave
push
cwde
xor
loope
xor
add
icebp
repz
stos
out
in
imul
ins
mov
inc
cli
and
xchg
aaa
inc
sbb
and
inc
sti
into
jmp
push
rcr
icebp
inc
jmp
and
sbb
rcl
aaa
out
lea
cmc
push
mov
dec
je
push
xchg
pushf
gs
inc
cmp
xchg
mov
cwde
fcomip
adc
retf
js
cmp
mov
loope
jno
add
cdq
jecxz
mov
mov
sahf
aas
add
in
mov
sub
add
push
(bad)
aam
js
pop
cmp
lea
or
jo
fisub
jne
pop
fwait
jg
jnp
xor
sub
push
clc
push
cmps
inc
push
inc
push
pop
mov
xor
mov
ss
fs
jmp
jns
sub
std
xchg
fcmovnu
add
add
xchg
mov
inc
mov
adc
xchg
ss
adc
fstenv
or
test
push
jmp
xlat
and
xor
aaa
adc
push
aam
scas
cmp
pop
retf
mov
test
sbb
mov
dec
rep
cli
mov
xor
cli
xor
shl
dec
test
jno
imul
dec
mov
mov
or
fnsave
add
inc
(bad)
dec
pop
dec
scas
add
mov
mov
jge
mov
bound
in
mov
push
add
pop
adc
sbb
mov
mov
sub
sbb
push
movs
or
dec
data16
or
es
mov
fsubr
xchg
mov
or
lahf
iret
icebp
xchg
aad
push
and
pop
and
sbb
cmc
fwait
mov
lock
cmp
cdq
mov
(bad)
out
mov
lds
jg
mov
push
(bad)
xlat
and
cmp
sahf
push
jecxz
into
mov
pop
xchg
push
inc
rol
jg
vpexpandq
ret
mov
mov
lahf
mov
mov
push
call
pop
cdq
jmp
push
les
sub
out
mov
repnz
mov
bound
sbb
fs
imul
and
cmp
sar
fidivr
out
inc
mov
jnp
fst
xchg
and
cmp
les
shl
into
arpl
add
fcmovb
push
stc
inc
sbb
adc
push
or
out
ins
or
adc
shl
je
jmp
add
cs
cmp
data16
daa
dec
xchg
sub
jns
aad
out
movs
stos
call
into
pop
std
clc
enter
inc
mov
pop
lds
movs
adc
fnsave
jmp
ja
adc
out
fist
sub
xchg
imul
call
pop
add
push
mov
mov
and
rcl
ret
mov
mov
cmp
aas
and
daa
fistp
jo
mov
sbb
imul
data16
push
jne
mov
sub
sbb
cwde
add
arpl
fisub
mov
mov
push
fistp
mov
test
or
jb
retf
out
pop
mov
into
fnstenv
stos
and
or
loopne
cmp
add
sbb
push
push
pusha
pop
jns
repnz
cmp
retf
js
iret
stos
scas
add
shl
adc
pusha
arpl
daa
xchg
in
cld
cwde
fnstsw
mov
sar
xchg
cmp
movs
stos
mov
adc
pop
mov
inc
out
adc
sar
pop
daa
adc
int
cmp
imul
in
jbe
das
inc
(bad)
sti
outs
arpl
pop
test
(bad)
scas
imul
mov
addr16
inc
movs
hlt
jne
sub
cmps
pop
in
les
mov
push
adc
div
das
push
jl
pop
mov
pop
inc
mov
pop
inc
imul
pop
cmp
jnp
adc
dec
jecxz
adc
dec
iret
pop
and
jge
mov
iret
int
loopne
fwait
adc
and
das
inc
push
imul
xchg
(bad)
mov
shr
mov
test
idiv
xchg
sub
dec
xchg
mov
sbb
cmp
pop
or
cmp
rol
in
sahf
int
xor
and
and
jp
pop
jp
ins
leave
cmps
es
pop
lods
lahf
xchg
idiv
stos
rcl
sbb
mov
lea
push
add
cwde
jle
jbe
xor
xchg
sub
test
loop
(bad)
(bad)
icebp
stos
ret
stos
int
movs
dec
push
mov
sub
and
jp
cmp
enter
imul
sub
and
popa
mov
xchg
(bad)
bound
fld
inc
mov
data16
loope
inc
mov
push
call
push
pop
retf
jmp
popa
fld
rcr
in
mov
or
stos
add
cmps
pop
xchg
mov
mov
mov
cli
mul
xchg
aam
outs
mov
cmp
mov
cmps
jmp
pop
inc
cmps
fcmove
push
ds
les
(bad)
ret
cwde
push
mov
popf
push
aaa
inc
cdq
xlat
inc
or
js
mov
jle
push
aaa
sti
jmp
aas
data16
shl
add
mov
aam
stc
sbb
rcr
das
leave
fimul
jno
xlat
mov
and
or
aad
rcr
pusha
jns
sbb
pop
loopne
bound
add
xchg
fmul
push
loope
mov
pop
out
in
mov
or
jle
scas
add
inc
sbb
jnp
jle
jb
xchg
pop
scas
mov
je
scas
jbe
(bad)
js
or
jnp
cwde
dec
cmp
ret
xchg
xor
retf
rcr
fwait
jecxz
test
ds
mov
cli
or
test
repnz
mov
mov
rcl
cwde
sub
jns
sbb
stos
ret
dec
sub
dec
jmp
movs
enter
imul
jne
ins
push
sub
cmp
shl
shl
jne
mov
mov
imul
jl
daa
(bad)
cmc
jmp
je
dec
xchg
jle
xor
int
or
pop
adc
test
dec
sub
jp
mov
adc
xchg
mov
jl
scas
in
clc
aam
movs
push
mov
retf
imul
jo
lock
ins
out
test
dec
test
or
cs
pop
jo
mov
jmp
pop
stc
dec
xchg
movs
out
lahf
mov
pop
das
mov
cmps
cld
xchg
fstp
mov
and
(bad)
or
push
jbe
mov
mov
(bad)
es
mov
stos
daa
add
xchg
xor
mov
das
icebp
int
push
imul
enter
cmp
cmps
mov
adc
fld
pop
and
sub
lea
xor
lea
dec
push
pushf
(bad)
fcom
jno
cmp
cwde
mov
sahf
jmp
xor
scas
xor
push
xchg
pop
es
lock
icebp
rcl
into
pop
pop
cmp
in
jmp
movs
cmp
pushf
and
fmul
dec
mov
gs
leave
dec
ret
test
mov
into
xor
loope
not
loopne
cwde
push
repz
sub
jp
lds
das
mov
mov
add
jge
loop
ror
mov
or
dec
jge
clc
pop
inc
mov
mov
mov
cmc
movs
call
fsubp
vsqrtpd
cdq
in
cmp
or
repz
sub
or
push
jbe
dec
inc
test
popa
div
dec
pop
out
dec
add
cwde
push
inc
pop
fabs
enter
push
push
mov
inc
xchg
mov
aas
sbb
push
inc
repnz
xor
jbe
mov
ret
and
ins
xor
call
jmp
add
push
lock
ret
push
xchg
mov
fstp
mov
(bad)
dec
xor
popf
jae
mov
jecxz
loopne
out
js
iret
mov
ret
sub
cmp
enter
scas
scas
jl
xchg
or
aaa
mov
sbb
ins
bound
test
adc
(bad)
iret
add
inc
jns
xor
inc
push
jle
cmp
adc
ins
sub
cmp
cli
imul
xor
and
mov
sbb
xor
mov
or
lds
xor
dec
and
data16
push
fsubr
inc
mov
jl
dec
leave
int
mov
push
adc
fxch
test
icebp
mov
cli
lds
ret
lahf
ja
and
mov
out
and
lods
out
sub
xchg
mov
push
xor
jle
popf
cmp
xchg
cmovae
enter
pop
sahf
rcl
sub
push
outs
int3
fcmovbe
fsubr
clc
movs
cwde
jmp
int3
mov
dec
test
loop
fimul
pusha
adc
or
mov
mov
pusha
test
ins
and
pop
cld
out
stos
shl
ret
retf
sahf
jns
push
adc
lea
or
or
call
pop
lea
push
fnsave
cdq
jo
mov
cwde
js
loopne
ds
scas
in
dec
xchg
sub
(bad)
loopne
and
mov
jmp
rol
mov
fdivr
neg
test
retf
test
outs
jge
add
aad
or
jno
clc
popf
pop
push
std
bound
dec
in
scas
inc
add
inc
pop
outs
(bad)
cli
lock
js
or
push
adc
outs
pop
xor
add
inc
xor
jmp
sub
ins
dec
or
lods
mov
loopne
sub
test
in
repz
mov
push
clc
mov
xor
test
and
adc
call
imul
mov
and
push
mov
mov
inc
push
cmps
std
jmp
cli
mov
fdiv
xor
push
jg
sti
push
into
add
std
sbb
jmp
je
cmps
xor
dec
sub
test
clc
pop
push
cmp
lods
xchg
popf
cs
out
cmp
loop
leave
push
push
into
ficom
adc
adc
sti
mov
aad
or
mov
ins
sub
pop
enter
cmp
sbb
jae
mov
mov
outs
aaa
cmp
int
data16
or
mov
mov
dec
adc
adc
mov
and
push
in
ror
loopne
mov
dec
movs
mov
adc
(bad)
mov
scas
or
mov
shl
stos
inc
jne
xchg
fistp
mov
jmp
xor
rcl
enter
xor
aam
mov
fisttp
jecxz
fmul
inc
arpl
stos
neg
sbb
or
mov
inc
and
pop
jg
pop
(bad)
stos
aaa
sbb
ret
dec
repnz
out
(bad)
hlt
add
sub
fsubr
and
ds
pop
mov
aad
push
push
jmp
inc
lahf
inc
and
add
sub
sbb
outs
mov
mov
dec
fdivr
arpl
inc
inc
inc
push
jge
aam
push
jb
cmps
mov
lods
sub
pop
jnp
inc
jp
sbb
(bad)
push
ins
jne
daa
in
in
lods
mov
xor
xor
mov
sahf
dec
inc
es
call
loope
push
das
outs
or
arpl
dec
add
test
stc
lea
out
jle
or
bound
loop
dec
int3
ins
add
adc
cwde
hlt
inc
stc
mov
dec
pop
cs
xchg
bound
iret
or
enter
stos
push
or
pop
ret
bound
add
or
mov
adc
sbb
sub
lea
cld
test
push
movs
adc
pop
inc
ffreep
add
in
scas
imul
dec
dec
dec
lods
imul
fs
retw
loopne
outs
pop
shr
popa
lahf
xor
mov
aad
hlt
lahf
ror
out
addr16
and
cld
pop
clc
lahf
sub
daa
mov
outs
mov
mov
out
out
stc
jl
movs
retf
jae
ja
or
test
cmp
jb
mov
push
lds
ja
jns
das
(bad)
xor
ret
mov
test
repnz
cwde
xchg
mov
in
(bad)
or
inc
cmp
cmp
xor
movs
test
(bad)
mov
jge
cmp
xor
mov
repz
dec
push
inc
dec
or
movs
dec
dec
icebp
jmp
ficomp
cs
icebp
mov
pop
call
retf
in
jp
push
sbb
nop
xor
divps
and
fiadd
int3
repz
call
dec
(bad)
scas
push
mov
scas
pop
(bad)
push
push
mov
or
data16
pop
pop
out
push
mov
call
leave
call
pop
(bad)
je
xchg
inc
dec
imul
repz
fadd
sahf
xor
shr
movs
dec
push
ins
jg
rcl
data16
sub
or
aam
jmp
mov
dec
xor
lds
arpl
sbb
and
sar
mov
xor
dec
in
inc
sbb
mov
mov
imul
pop
mov
adc
mov
cmps
dec
cmp
mov
dec
sbb
mov
pop
or
sub
inc
cmp
test
xchg
dec
(bad)
cmc
not
fiadd
and
inc
aam
out
xor
inc
jp
dec
bound
add
add
adc
imul
pop
mov
push
mov
into
(bad)
and
outs
jmp
popf
add
shl
jns
cli
mov
sbb
(bad)
retf
shl
(bad)
out
mov
movs
in
xchg
pop
dec
cmc
call
ret
adc
sub
mov
adc
dec
mov
cmp
rol
inc
mov
mov
or
shr
push
jmp
and
or
iret
std
das
retf
int
push
cmps
dec
in
out
fsubr
repnz
fldenv
cli
ficomp
cmp
or
test
loopne
hlt
hlt
mov
outs
popf
cmp
or
mov
jmp
sub
mov
fdivr
push
add
loopne
jp
and
ins
or
adc
stos
loopne
and
(bad)
stc
pop
ficomp
add
dec
push
jmp
(bad)
push
cmp
and
lds
mov
aad
adc
pop
repz
add
or
and
out
ret
inc
push
push
adc
dec
movs
in
xchg
cmp
out
ins
xchg
mov
fs
and
jo
sahf
arpl
fprem
jmp
(bad)
nop
lods
jo
(bad)
loope
mov
cmp
ds
pop
out
stos
dec
int3
out
cmp
jb
and
repz
icebp
rcl
outs
loopne
xor
lea
sub
movs
jle
out
fstp
xchg
je
stc
adc
fwait
sub
and
call
dec
icebp
iret
push
call
neg
ins
push
mov
loop
call
pop
aaa
add
(bad)
jle
popf
(bad)
cdq
mov
inc
int
xchg
push
jns
addr16
add
and
xchg
or
mov
mov
(bad)
lods
jge
dec
aas
leave
jmp
aad
jmp
cmp
out
inc
fisub
test
inc
movs
fsubr
mov
loop
rol
aas
gs
dec
or
push
pop
mov
pop
fsub
pop
push
ret
xchg
in
imul
adc
ror
jp
push
add
sbb
enter
fidiv
loop
fsub
imul
mov
data16
inc
in
adc
add
dec
jmp
loope
inc
or
xchg
jmp
inc
iret
aam
xor
or
cld
pop
out
pop
sbb
addr16
mov
ins
out
xor
hlt
jmp
pop
mov
xchg
jb
pop
pop
jmp
xchg
loope
push
push
sti
cs
mov
arpl
dec
sub
or
add
and
jno
jnp
add
mov
push
sub
cli
pop
stos
(bad)
cs
dec
push
out
ficomp
nop
sar
outs
lahf
sbb
loopne
hlt
jne
sub
sar
retf
mov
push
push
sbb
jmp
push
push
inc
repz
adc
jnp
jp
cmp
inc
cmc
sbb
ret
cmp
push
imul
dec
int3
inc
push
mov
fldz
add
xrelease
sub
adc
nop
jg
jne
retf
ins
pop
cwde
cmp
ret
out
neg
mov
jne
sbb
or
cmp
ss
cli
pop
lods
push
and
mov
lea
inc
pop
mov
push
(bad)
movs
mov
enter
fcmovb
push
jo
mov
push
cmp
mov
iret
dec
jecxz
fcmove
out
test
(bad)
cmp
xor
loop
test
ins
mov
push
shr
and
adc
nop
cmp
mov
add
mov
or
push
adc
inc
movs
ds
out
jmp
jmp
sbb
or
mov
jl
pop
push
mov
mov
arpl
xchg
sar
xchg
mov
jecxz
pop
sbb
push
arpl
add
icebp
mov
loop
push
mov
fwait
cmp
cmp
mov
sub
cld
loope
movs
mov
xchg
fisttp
inc
dec
adc
jl
adc
add
xchg
pusha
sub
lods
ja
push
mov
push
xchg
add
in
sbb
mov
pushf
inc
adc
adc
dec
jmp
jmp
mov
movs
mov
cs
stos
push
sub
jg
sub
jbe
jns
imul
(bad)
dec
gs
test
scas
push
js
mov
jbe
fs
shl
out
or
mov
ds
outs
push
pop
not
pusha
jle
stos
daa
mov
push
(bad)
push
push
dec
fisub
xor
inc
jns
sbb
xchg
dec
aaa
mov
stos
mov
js
outs
cdq
imul
xor
pop
aad
adc
adc
xchg
mov
sub
stc
in
or
repnz
pop
jbe
push
sub
and
adc
and
add
push
js
pop
sub
sbb
xor
imul
sub
in
les
push
cmp
mov
(bad)
cmc
enter
cmp
xor
pop
and
(bad)
hlt
adc
jnp
ins
cdq
add
data16
xor
fadd
int3
dec
jo
mov
xlat
push
movs
sti
push
push
test
cmp
imul
sbb
(bad)
clc
clc
pop
sub
sbb
test
pop
retf
into
and
fwait
jns
lea
adc
jb
mov
mov
adc
leave
pop
sahf
pop
pushf
add
ins
movs
(bad)
call
mov
mov
imul
imul
xor
and
les
mov
stos
test
fiadd
fs
pop
or
push
out
call
(bad)
fmul
fstp
xchg
gs
cwde
scas
xor
cmp
loop
push
cmp
ins
loopne
mov
and
in
mov
mov
enter
inc
lds
jle
retf
mov
popf
fstp
cs
add
mov
cmp
leave
pusha
into
or
push
jp
scas
sahf
push
inc
popf
xor
jnp
mov
arpl
mov
and
xchg
inc
cwde
mov
stos
pusha
cmp
js
aaa
mov
test
xchg
retf
call
inc
sbb
aas
call
push
lods
xor
jbe
popa
xchg
or
es
in
out
dec
icebp
aad
aam
rcl
scas
jne
fdivr
xchg
mov
scas
push
call
lea
jmp
sbb
sbb
adc
in
cmps
pop
repnz
lahf
leave
into
or
xchg
or
mov
mov
shl
pusha
adc
pop
(bad)
sub
dec
mov
push
xor
sub
aas
inc
add
ret
adc
pop
enter
sti
mov
push
adc
pop
loop
dec
mov
popa
add
out
add
push
int
pop
push
push
sub
in
cmps
cmps
pop
es
pop
stc
repz
int3
adc
pushf
repnz
inc
jno
or
cmp
xor
clc
dec
mov
sbb
stc
icebp
fs
and
stc
mov
cmps
mov
pop
xor
sub
stos
push
mov
xchg
sbb
fldenv
cmp
cmc
retf
sub
loop
or
shr
xlat
mov
(bad)
int3
fs
ins
scas
xor
pop
dec
std
enter
push
fisubr
mov
adc
lahf
jg
mov
lods
jns
xchg
add
int3
inc
jp
mov
mov
dec
ucomiss
pop
mov
mov
std
lods
(bad)
in
mov
adc
(bad)
or
push
adc
xchg
(bad)
lahf
xor
dec
sbb
jae
jbe
sub
sbb
int3
jmp
sub
inc
aas
pusha
push
xchg
sbb
mov
mov
repnz
mov
jmp
pushw
cmp
sbb
or
(bad)
or
bound
ins
jle
mov
cmps
mul
mov
stos
xchg
add
addr16
inc
fwait
sbb
dec
daa
jl
out
in
and
jle
ja
pusha
popa
and
lock
gs
movs
add
mov
mov
mov
cdq
xlat
or
mov
mov
ss
jmp
aam
xor
fmulp
inc
sub
jmp
ret
push
jmp
fld
mov
push
loop
out
int3
xchg
ror
jno
jae
and
dec
adc
cmp
add
adc
inc
fisub
fmul
inc
cmps
imul
pusha
adc
(bad)
retf
xor
(bad)
aas
inc
mov
dec
push
test
in
mov
push
movs
test
jb
mov
inc
gs
sub
and
out
xchg
scas
repz
pop
inc
sti
test
cmp
sub
outs
cdq
pusha
push
je
es
xor
sbb
in
leave
fnsave
aam
jmp
imul
mov
int3
in
movs
test
add
mov
ret
xchg
ins
stc
fwait
inc
add
mov
pushf
aam
adc
or
ret
scas
pop
or
sti
push
lds
inc
xchg
adc
in
test
push
lods
jns
mov
mov
mov
adc
jg
clc
fcomp
cmp
jp
and
ror
ss
push
adc
inc
and
xchg
aam
jmp
retf
inc
pushf
mul
push
hlt
clc
(bad)
adc
inc
pop
add
mov
or
movs
fst
and
xor
leave
enter
xchg
inc
xor
arpl
retf
xor
push
out
lods
inc
fisttp
pusha
repz
ror
xor
iret
int3
call
in
jae
add
push
or
pop
cdq
cmp
js
xor
push
pop
(bad)
sub
repnz
xchg
xchg
or
test
cmp
jns
or
cmp
data16
add
mov
and
hlt
push
push
pop
(bad)
sbb
sub
ja
pop
inc
mov
aam
xchg
in
mov
test
repz
inc
(bad)
inc
data16
icebp
loop
out
lds
into
mov
pop
xor
imul
mov
xor
fwait
cs
jns
addr16
mov
or
cld
sbb
mov
bound
jnp
std
jne
cmp
nop
cmc
mov
das
xchg
mov
sbb
push
stos
cdq
jb
stc
fwait
stc
ins
mov
rcr
(bad)
out
shl
xchg
jle
sub
enter
call
dec
dec
pushf
sub
int3
enter
ins
xor
and
bound
inc
shl
in
or
push
jno
fwait
mov
xor
jns
gs
jae
pop
and
xchg
sub
in
push
xor
mov
sub
add
mov
icebp
in
xlat
pop
in
jno
inc
xor
arpl
push
sub
mov
in
ret
in
mov
sub
addr16
rcr
fld
jmp
sub
cmp
pop
adc
popa
fdiv
push
lds
shr
sub
scas
shr
jg
xchg
rcl
stos
xchg
out
bound
mov
add
adc
mov
movs
xchg
sbb
mov
and
pop
retf
xchg
inc
pop
cmps
pop
push
dec
gs
rcr
push
push
lods
arpl
sub
sub
jae
add
inc
xchg
int
add
fiadd
mov
fcmovu
call
xor
sbb
les
jl
and
cs
and
xor
fdiv
jbe
add
mov
ret
mov
sahf
mov
or
jl
rol
mov
pusha
jnp
test
push
cdq
loop
pop
shr
xor
pop
imul
out
xchg
call
loopne
sub
pop
jae
jnp
in
loope
sti
mov
cmp
ret
xchg
enter
pop
(bad)
retf
hlt
fdivr
push
das
jle
jae
movs
cmp
push
cmp
enter
shr
jl
(bad)
pop
or
mov
xchg
xchg
pop
inc
retf
pcmpeqb
xor
mov
outs
xor
mov
pop
fs
xor
aas
stos
cmps
cmp
pop
leave
pop
jbe
fwait
xchg
bound
xchg
repnz
jae
inc
xchg
inc
lods
sti
scas
push
jmp
ds
jbe
imul
repz
mov
les
aaa
fldl2t
sbb
push
into
enter
jmp
mov
pop
and
mov
nop
gs
inc
arpl
scas
sub
out
jae
mov
not
imul
sub
mul
sub
popf
(bad)
xchg
or
aad
fmul
les
iret
cwde
gs
jmp
pop
out
xlat
push
shl
xor
stc
fst
pop
add
icebp
clc
les
push
xor
call
sub
cli
pop
pop
pusha
inc
ds
mov
inc
bound
popf
pushf
cmp
or
cmc
arpl
mov
in
std
cmp
ret
add
movs
ret
clc
test
ror
cwde
cmp
or
push
dec
shl
ins
mov
push
mov
inc
movs
adc
rcl
inc
es
mov
cdq
bound
test
pop
xlat
jnp
push
(bad)
fsin
cmp
mov
inc
mov
loop
movs
nop
ds
xchg
ret
aam
stos
iret
test
shr
(bad)
rcl
ss
xor
aam
ss
rcr
pop
mov
mov
and
push
pop
sbb
pusha
sar
sub
jle
cmp
sub
loopne
dec
inc
push
in
xor
cld
(bad)
popf
(bad)
jb
into
aad
adc
ins
jae
cmp
fwait
sub
mov
or
pusha
inc
retf
xchg
movs
or
pop
ins
call
add
inc
and
inc
push
lds
adc
xor
inc
popa
dec
xor
cmp
lahf
pop
ror
jmp
bound
fimul
cs
mov
out
sbb
(bad)
inc
out
cmp
int
(bad)
pop
mov
hlt
movs
in
jp
(bad)
retf
cmp
inc
neg
aaa
inc
xchg
into
xor
pop
fldenv
mov
cmpps
pop
into
or
mov
nop
dec
ret
sub
sbb
in
cld
cwde
xchg
jbe
mov
adc
sub
xchg
jge
lods
jnp
aaa
fwait
retf
std
adc
jno
mov
fld
push
stos
dec
pop
test
loop
jbe
mov
jnp
jo
loope
lea
lock
or
jo
rol
mov
mov
(bad)
cli
loope
push
mov
fcomp
mov
mov
add
and
pop
add
push
pop
sub
jne
and
sbb
adc
sbb
mov
mov
xchg
inc
push
jle
jl
loope
pop
jne
cmps
js
fnsave
mov
scas
jae
ss
shl
shl
retf
movs
pushf
in
pop
xor
sti
out
sbb
mov
(bad)
repnz
dec
and
or
mul
jmp
sub
shl
cli
xor
add
inc
pop
cmp
cdq
pop
or
sub
adc
out
xchg
movs
xchg
mov
xlat
pusha
inc
repz
and
sub
sub
test
sbb
xor
aaa
mov
adc
mov
icebp
dec
dec
add
(bad)
stc
mov
pop
ja
or
sub
jae
jle
mov
test
xor
jnp
xchg
(bad)
(bad)
sahf
xchg
jecxz
rol
sbb
mov
jmp
out
ds
or
mov
imul
add
retf
test
sbb
(bad)
or
ja
jno
mov
sbb
stos
sar
add
lods
aas
and
loope
pop
scas
mov
mov
inc
pop
xor
test
pop
out
cmps
or
das
push
mov
push
unpckhps
int
pop
ret
fwait
xor
clc
and
xchg
pop
in
pop
fsubrp
jmp
adc
rol
mov
mov
out
and
ins
and
cmp
jl
arpl
mov
inc
jno
not
fcom
retf
or
sahf
mov
ret
lods
jo
scas
fild
call
pop
lea
or
mov
sub
xchg
out
shr
data16
jle
xor
bound
ficomp
and
add
jne
inc
inc
(bad)
(bad)
lods
inc
jbe
(bad)
shr
jbe
jbe
or
jmp
icebp
test
push
cwde
sahf
dec
int
call
sub
aad
cld
(bad)
cld
lods
fsub
fwait
xlat
dec
jnp
sub
out
or
pop
retf
mov
pushf
repnz
leave
sub
fst
test
(bad)
call
out
xchg
inc
sub
(bad)
iret
cmc
pop
mov
sub
das
call
push
out
icebp
not
lock
mov
out
test
mov
ja
mov
fcomp
dec
test
xor
jmp
lods
dec
sbb
imul
inc
aaa
test
adc
mov
int3
xor
adc
mov
adc
xor
fnstcw
mov
std
bnd
out
repnz
fist
mov
mov
iret
pop
dec
xor
or
xor
sub
aas
outs
mov
bound
movs
daa
sub
jb
pop
(bad)
fs
xchg
nop
mov
lods
mov
retf
les
imul
xor
adc
sub
sbb
hlt
icebp
inc
or
mov
pop
mov
mov
popf
pop
inc
jnp
xor
in
out
xor
ret
jb
sub
fwait
daa
fdivr
fsubr
jmp
and
adc
call
(bad)
cli
mul
movs
mov
and
mov
neg
cmps
add
mov
arpl
add
cmp
aaa
xchg
or
cmps
or
or
adc
scas
inc
xchg
aad
rcr
gs
push
inc
test
movs
xchg
dec
movs
scas
data16
mov
push
mov
cwde
or
sbb
sahf
movs
pop
ds
ror
sahf
rcr
cdq
add
ins
push
inc
ret
dec
test
or
mov
lods
adc
cmp
fcmovb
ds
retf
popa
and
sbb
jl
outs
in
movs
imul
cmp
stos
sub
mov
push
or
pop
pop
test
jne
add
ins
dec
pop
mov
fcomp
loopne
adc
popa
mov
xchg
ins
aaa
cmp
enter
mov
mov
pop
mov
(bad)
ror
pop
dec
pop
test
test
cmp
mov
pop
mov
popf
mov
xor
dec
cmp
scas
mov
iret
fdivp
scas
or
inc
cdq
cmp
cmp
inc
ret
retf
sahf
lods
mov
jo
sar
jbe
sbb
int3
inc
movs
mov
rep
icebp
cli
dec
(bad)
xlat
mov
stos
add
arpl
adc
in
in
and
jne
movs
fmul
sti
frstor
adc
(bad)
cli
jg
dec
xor
ja
or
or
xchg
inc
mov
shl
pop
cmp
adc
mov
ins
inc
call
xchg
aaa
mov
test
cmp
add
pop
cmp
mov
mov
jb
xlat
div
pop
rcl
stos
push
xor
xlat
and
adc
jno
retf
cmp
iret
jae
test
xchg
jae
sbb
cmp
mov
or
out
or
call
sub
bound
mov
cmp
mov
adc
test
push
push
inc
scas
xor
pop
(bad)
mov
sbb
scas
pop
js
push
fadd
in
xchg
dec
mov
dec
fisttp
mov
cmp
adc
jbe
push
and
or
or
cmp
mov
dec
sahf
scas
ds
retf
jae
repz
ins
inc
xor
lock
sbb
cmp
jmp
sub
ja
add
mov
pop
push
iret
out
and
mov
push
fcom
cs
mov
enter
push
shr
mov
or
ret
int3
or
xor
sbb
aad
sbb
mov
test
mov
push
inc
jl
sub
cld
loopne
jbe
jle
je
bound
fcom
loopne
loopne
and
mov
popa
sub
adc
sbb
fsub
mov
and
imul
mov
push
dec
push
mov
rol
push
or
pop
adc
mov
mov
push
dec
fdivr
stos
cmp
and
iret
loope
dec
enter
fstp
add
rcr
lea
inc
rcr
neg
aas
jno
std
aad
mov
mov
xchg
je
push
xor
ret
sahf
jl
jmp
loopne
pusha
std
inc
stos
daa
fwait
movhps
jns
ror
and
xor
push
sbb
ins
out
cdq
jae
les
fisttp
add
loopne
pushf
adc
xchg
sbb
cmp
and
leave
inc
sbb
cmps
scas
outs
pop
or
lds
ret
or
cdq
adc
jno
clc
sub
stc
adc
push
push
push
mov
ret
mov
add
xlat
ret
mov
sub
std
fldenv
sub
es
and
push
sbb
push
repnz
and
jmp
clc
xchg
test
out
aaa
mov
(bad)
pusha
mov
jnp
xchg
push
sbb
sbb
(bad)
push
fdivr
in
fimul
fs
inc
jmp
xchg
mov
es
and
xchg
mov
cmc
push
mov
and
sbb
mov
mov
(bad)
mov
adc
push
adc
ins
push
xor
mov
jl
jb
pop
movs
cmc
mov
and
pop
das
pop
jmp
jo
pusha
repz
push
aam
fs
push
lahf
push
xor
ins
cld
das
mov
add
pop
jle
cdq
adc
movs
jl
mov
ins
adc
inc
push
sbb
mov
cmp
test
sub
mov
(bad)
fcomp
jmp
test
cmp
cld
std
ss
retf
aam
xor
pusha
mov
pop
int
dec
cmp
mov
pop
imul
outs
push
test
test
es
call
add
daa
call
cmc
daa
nop
jns
daa
add
movs
and
push
adc
inc
jg
mov
push
into
int
push
push
call
rcl
dec
shl
fxch
and
arpl
mov
xchg
xchg
push
cwde
dec
mov
aaa
fstp
cwde
sub
sub
clc
clc
pop
or
enter
cmp
push
sub
pop
push
lods
mov
retf
int
pop
push
ins
push
cmovb
fs
cmps
push
mov
pop
cmp
dec
and
(bad)
jmp
jle
pusha
add
cmp
ret
pop
aaa
push
and
pop
jae
je
jbe
mov
pushf
fs
loopne
xchg
dec
sbb
or
mov
shr
sub
ss
jge
pushf
cmp
stc
sbb
(bad)
push
cmp
enter
xchg
xchg
cs
xor
or
sbb
push
(bad)
(bad)
xchg
sar
sbb
jecxz
repz
cmps
mov
xchg
and
leave
ja
jmp
test
bound
push
cwde
dec
loope
scas
ins
inc
shr
sti
push
js
stos
fldcw
ret
(bad)
sub
mov
shl
retf
mov
iret
shr
(bad)
xchg
je
imul
add
add
sub
test
push
xor
xchg
mov
pop
iret
adc
cli
push
mov
fistp
xchg
or
mov
aaa
popa
add
and
mov
movs
dec
and
ja
xchg
fiadd
ret
pop
test
repz
popf
xor
push
add
pushf
out
and
repnz
sub
leave
lahf
dec
in
scas
pop
jns
push
ds
in
mov
mov
pop
test
retf
std
xchg
mov
fs
call
sbb
push
in
inc
xlat
mov
mov
add
and
movs
add
xor
out
and
or
mov
jb
cs
push
rol
into
jo
(bad)
imul
loopne
das
xchg
retf
xchg
ss
test
mov
push
xchg
dec
push
sub
dec
pop
jbe
cmps
repnz
fs
xlat
jp
lods
js
dec
(bad)
adc
movs
or
dec
xchg
sbb
mov
pop
test
add
mov
xchg
adc
dec
sub
es
outs
stc
popa
call
inc
adc
push
or
retf
dec
dec
pop
fcomip
icebp
lods
mov
xchg
addr16
jae
repnz
jbe
sbb
cdq
dec
retf
mov
fidivr
adc
fdiv
add
or
sbb
mov
stos
mov
mov
inc
inc
ss
ds
jg
and
iret
pop
arpl
inc
sub
adc
test
lds
add
mov
or
and
mov
sub
dec
or
btr
and
cmps
sbb
ret
push
xchg
fild
cmc
xchg
lods
retf
mov
and
add
sbb
lods
fldenv
xor
xchg
adc
sub
mov
in
add
or
inc
add
enter
mov
sbb
call
loopne
xchg
jnp
mov
enter
bound
inc
test
js
push
int3
test
aam
add
mov
sbb
into
xor
push
test
sbb
fidivr
call
out
push
xor
(bad)
inc
add
movs
fld
into
int3
repnz
aas
pop
sahf
mov
push
adc
cdq
loop
(bad)
xor
je
stos
adc
in
xchg
jecxz
inc
in
jl
scas
movs
jge
adc
mov
push
sbb
push
jle
leave
or
xchg
call
aad
mov
mov
shl
icebp
jp
imul
mov
cs
xor
or
jecxz
jmp
xchg
xor
ja
mov
(bad)
addr16
or
push
leave
loopne
je
push
scas
sbb
mov
push
fmul
es
scas
xchg
mov
pop
add
fstp
pop
mov
jne
jne
adc
mov
xchg
stos
cmp
inc
lock
repz
sub
in
and
lods
(bad)
pop
or
cmp
es
stos
fdiv
ret
les
sbb
cdq
mov
nop
and
sbb
sub
mov
push
daa
into
clc
call
stos
inc
cli
fnstenv
mov
cmp
xchg
jo
nop
test
ficom
adc
inc
(bad)
loopne
(bad)
out
out
or
xor
out
and
dec
loope
sub
nop
in
mov
sub
fisttp
xchg
push
jae
pushf
pop
fdiv
xor
les
mov
pop
mov
sbb
mov
add
jg
pop
(bad)
mov
test
pop
icebp
scas
xor
dec
daa
mov
ror
(bad)
call
cld
(bad)
pop
push
call
lock
sbb
test
int
lahf
mov
ret
lods
cmp
in
lock
inc
shl
inc
mov
test
push
sub
icebp
push
leave
(bad)
lock
lods
ss
sub
cs
mov
cs
scas
lods
sbb
push
cld
and
aaa
cs
jne
pop
lods
push
loopne
aas
nop
imul
loope
jnp
and
or
inc
in
out
or
in
ret
cmc
mov
pusha
cmps
das
scas
cmps
adc
pop
(bad)
scas
xchg
pop
xor
inc
jo
fisub
xchg
sbb
dec
retf
mov
inc
mov
jle
aam
ins
stos
push
hlt
jb
and
daa
js
test
stos
stc
or
push
ror
pusha
pop
ins
enter
push
retf
bound
(bad)
adc
pop
ss
loopne
xor
cmp
ins
and
rol
(bad)
add
and
adc
lds
pop
xor
pop
mov
mov
sar
(bad)
mov
dec
pop
leave
or
stc
retf
mov
mov
jmp
xchg
ins
hlt
jecxz
lahf
push
les
jae
jmp
add
inc
call
dec
jp
pop
and
xchg
gs
push
fnstsw
imul
outs
sub
mov
dec
gs
add
mov
out
push
loop
aam
pop
fdivr
jge
mov
loopne
call
(bad)
mov
mov
scas
leave
ror
std
dec
call
cdq
cmps
es
ficom
mov
gs
jl
jne
(bad)
jge
fucom
mov
jl
push
retf
lds
repnz
rcr
dec
inc
pop
or
hlt
mov
mov
jle
rcl
xor
fcmove
mov
clc
push
ds
pop
ret
int
repz
out
nop
fild
xor
mov
cmp
sbb
jecxz
xor
mov
mov
add
dec
and
mov
mov
sub
and
push
fbld
loope
inc
inc
clc
pop
repz
outs
test
jp
and
dec
jmp
mov
ds
sahf
inc
mov
(bad)
fld
aad
xchg
jo
xor
repz
rol
mov
int3
add
jae
cli
daa
lods
mov
jmp
cmp
leave
repz
lahf
mov
push
icebp
xchg
std
inc
popf
imul
pop
mov
icebp
ins
push
cli
or
les
or
scas
xchg
call
shr
mov
adc
sub
ja
adc
ud0
xchg
mov
shld
popf
scas
xor
jmp
(bad)
jns
lds
pusha
mov
nop
sbb
add
add
jecxz
out
fadd
fmul
adc
dec
shl
(bad)
in
std
int
retf
mov
inc
cdq
jecxz
push
movs
retf
retf
pop
adc
fs
loope
mov
xor
clc
sub
inc
cmp
fidivr
inc
push
jecxz
dec
cmp
icebp
imul
and
cmp
ret
(bad)
mov
jns
aad
dec
(bad)
mov
sbb
dec
mov
mov
mov
xchg
cmp
lods
pop
pop
popa
pusha
push
pusha
mov
shl
add
outs
push
popa
imul
retf
scas
or
(bad)
fild
in
jns
jge
loop
push
scas
xor
int
int
fdiv
cld
loop
in
xchg
lds
inc
mov
push
inc
lahf
ins
ret
xlat
xchg
sbb
mov
sbb
lods
xlat
mov
mov
adc
sub
mov
sub
leave
xchg
xchg
sbb
inc
lods
mov
repz
and
es
js
mov
les
fwait
cmps
cmc
out
ret
adc
jmp
stos
enter
cmps
leave
int3
mov
(bad)
hlt
xchg
inc
aam
xchg
push
movs
call
jnp
push
addr16
or
pop
pusha
fisub
arpl
mov
xor
or
cwde
mov
pop
jle
scas
pop
jne
push
xor
aad
inc
and
fadd
repnz
les
sub
and
mov
rcl
shl
cwde
cmps
or
popa
mov
xor
iret
retf
mov
test
add
out
mov
jmp
mov
mov
xchg
ja
mov
mov
test
int
(bad)
jp
ret
pop
mov
test
jnp
inc
or
leave
add
sbb
fs
out
aas
add
stos
xchg
mov
cmp
mov
add
jno
lds
scas
and
add
cmp
div
scas
pop
jmp
or
or
shl
addr16
push
hlt
fst
or
inc
gs
scas
inc
cmp
push
popf
inc
in
add
and
inc
add
mov
xor
pop
xor
xor
adc
xchg
data16
xor
enter
cli
movs
pop
dec
daa
add
inc
(bad)
xor
scas
dec
lock
retf
cmp
or
fnstsw
xchg
mov
mov
push
jb
jge
test
cmps
ret
mov
jmp
cwde
pushf
cmc
sub
mov
mov
pop
jg
pop
sub
lods
xchg
fadd
pop
xchg
scas
(bad)
call
or
jae
xor
mov
pop
add
retf
push
cmps
stos
shr
adc
dec
out
or
(bad)
jns
outs
ins
pop
mov
(bad)
into
cdq
out
fnstenv
xor
mov
mov
ins
push
adc
call
jns
jns
test
dec
rcl
call
jae
lods
adc
xchg
xchg
inc
std
loope
shl
cmps
popa
mov
outs
gs
(bad)
mov
cli
add
mov
jns
push
fcmovnb
xchg
add
fdivr
pop
outs
aam
and
or
push
sub
les
gs
sbb
ficom
dec
xor
hlt
jl
cld
pop
cmp
sbb
push
mov
movs
dec
adc
scas
xchg
adc
rol
cmp
lahf
or
not
cmp
push
popf
aas
pop
mov
not
add
fs
sbb
jb
pushf
mov
pusha
daa
int
loope
sub
dec
add
sbb
adc
jnp
jmp
adc
xor
dec
in
lods
push
cli
xchg
and
scas
imul
dec
pop
sub
mov
add
mov
jne
mov
pushf
sub
dec
or
push
or
dec
xchg
retf
fs
fisubr
in
loope
sub
aad
or
sbb
(bad)
in
pusha
sub
stc
popf
mov
retf
and
fucomp
xchg
jg
bound
lds
cdq
inc
lea
arpl
ja
or
dec
inc
inc
sub
pushf
ret
mov
je
call
or
xchg
adc
xchg
adc
mulps
dec
das
pop
fldenv
push
mov
repnz
sbb
push
jl
sar
(bad)
fsub
and
jns
adc
neg
or
leave
dec
mov
lods
test
xchg
lea
pop
sub
add
aas
ins
jmp
jp
add
push
test
fisub
arpl
dec
js
cmp
ret
push
pop
ror
loop
in
es
inc
(bad)
and
in
aad
xor
rcl
jge
popf
xchg
mov
enter
mov
ret
lahf
stc
add
inc
jae
sub
or
and
sbb
mov
ins
popa
outs
dec
mov
mov
ret
ret
and
lahf
mov
push
xor
movs
(bad)
test
pusha
fild
int
fdiv
mov
pop
pop
fwait
push
mov
f2xm1
mov
jmp
rcl
or
push
aad
push
or
sbb
jb
sub
rcr
push
arpl
iret
cmc
or
test
(bad)
fcmovnbe
neg
ds
adc
(bad)
imul
ror
inc
or
add
(bad)
sbb
jbe
sub
xor
add
std
icebp
retf
jg
jl
sub
pop
mov
adc
and
cmc
inc
push
sub
xchg
push
shr
retf
sub
inc
mov
inc
pop
sbb
shr
repz
pop
xchg
pop
retf
sbb
(bad)
push
mov
xchg
aaa
and
loope
loopne
loopne
mov
push
mov
pop
clc
imul
jp
sbb
retf
stos
and
out
je
mov
movs
dec
lods
(bad)
icebp
out
xor
inc
je
(bad)
fdivr
adc
jbe
dec
inc
cmp
and
fwait
dec
jg
call
xchg
sti
mov
cmps
in
xor
push
mov
add
pop
bound
dec
mov
push
lahf
cs
pop
cmp
jae
les
xor
jp
sbb
retf
mov
ret
fsub
retf
jns
mov
cmp
repz
xchg
leave
rcl
call
test
clc
xor
add
and
arpl
and
in
push
int
shl
fnclex
pop
jp
movd
xor
ins
pop
mov
pop
cmc
out
cmp
repz
push
push
pop
and
mov
leave
lds
movs
lock
es
scas
add
pop
dec
adc
sub
and
fcomp
jmp
loope
pop
fdivr
dec
push
(bad)
jg
mul
dec
jle
cmp
cmp
push
or
inc
pop
ss
jno
push
int3
test
xchg
jb
mov
dec
or
mov
adc
das
pop
jge
js
mov
jg
push
(bad)
call
adc
sahf
retf
jb
jg
popa
add
hlt
add
and
test
test
movs
enter
or
mov
(bad)
mov
jbe
cmp
pop
sub
mov
mov
add
inc
jns
jle
mov
(bad)
jae
cmp
adc
loop
retf
push
add
shr
xor
cmp
(bad)
cdq
fdivr
aad
hlt
icebp
(bad)
and
loope
sbb
or
mov
adc
imul
jmp
dec
mov
ds
mov
ds
icebp
mov
loop
cli
rol
lock
add
(bad)
cmps
int3
jno
mov
xchg
xor
jns
xor
inc
movs
out
std
stos
sub
rol
(bad)
in
xchg
(bad)
mov
sub
ins
jle
mov
daa
pop
fdivr
xlat
inc
or
ss
jbe
scas
xlat
xor
and
sub
(bad)
ins
jl
add
xchg
add
mov
sahf
test
push
adc
leave
sahf
ja
enter
sbb
xchg
shl
xor
je
pushf
lahf
cmp
adc
push
int
dec
adc
adc
mov
repnz
cmc
je
jl
(bad)
sti
cwde
dec
cli
lods
nop
sbb
jp
clc
sbb
ror
and
mov
pop
adc
mov
in
(bad)
push
or
mov
dec
dec
xchg
push
mov
dec
xor
data16
push
cmp
rcr
fisttp
shl
mov
jp
add
sbb
aas
jecxz
push
push
rcl
xor
ret
div
mov
xchg
popf
jns
fnstcw
cmp
aad
inc
mov
mov
(bad)
fstp
retf
dec
inc
xlat
add
jb
mov
pop
inc
sbb
jecxz
add
movs
mov
in
and
inc
jge
cld
ret
ja
je
push
jns
daa
and
or
sbb
ss
dec
jge
xor
adc
leave
loop
jmp
ret
movs
mov
xchg
ror
popf
cdq
icebp
mov
loope
inc
xor
test
retf
jo
mov
or
imul
lds
aam
int
ins
(bad)
pop
mov
cmc
fs
lods
les
xchg
or
cmps
test
retf
sbb
adc
adc
ret
jge
dec
jne
in
inc
xlat
cwde
hlt
fnstenv
jmp
mov
mov
outs
jne
scas
enter
and
add
stos
ins
popa
adc
and
sahf
mov
jno
clc
sahf
xchg
in
into
or
adc
jmp
adc
dec
pop
imul
pop
sub
clc
pop
retf
inc
adc
sbb
test
repnz
cmp
or
pop
jns
sbb
ins
mov
movs
sub
cmp
test
xchg
fcomp
pop
xchg
aaa
fisubr
ins
lods
jp
outs
inc
push
lods
dec
ins
mov
bound
or
data16
jns
dec
cmp
js
repnz
retf
fsubr
pop
pop
cdq
outs
pop
loope
rol
sbb
mov
add
cmp
mov
in
xchg
mov
stos
xchg
shl
repz
push
mov
push
pop
mov
add
frstor
mov
shr
add
mov
sbb
sbb
fs
inc
adc
push
iret
mov
mov
(bad)
xor
fs
mov
(bad)
rcl
mov
lea
fstp
call
jae
adc
out
cmp
dec
push
push
sar
inc
outs
scas
or
loope
and
stos
ins
pop
addr16
add
or
out
or
idiv
xchg
mov
cli
push
lock
xchg
lahf
mov
mov
jmp
sar
out
das
stos
push
push
adc
fwait
scas
sub
cmp
popf
les
ss
push
aam
pop
mov
int
gs
sti
adc
mov
jno
push
rcr
cmps
pop
shl
test
loop
jae
xor
pop
mov
into
lods
jo
or
nop
std
(bad)
mov
es
or
adc
in
push
push
xchg
and
dec
inc
mov
(bad)
(bad)
clc
mov
pop
sub
inc
add
add
jo
cs
hlt
xchg
into
movs
fnstsw
mov
push
sbb
add
and
push
in
dec
xor
dec
xor
jle
or
mov
addr16
push
shl
pop
rcl
push
dec
jp
sub
retf
popf
movs
pop
retf
fcmovnb
loope
inc
lahf
int
mov
dec
(bad)
int
aam
mov
ss
adc
xor
iret
ins
cmp
mov
ss
cmp
int3
push
or
push
mov
test
call
sub
push
out
sbb
inc
in
cmps
xchg
sbb
cmc
push
ins
inc
and
and
mov
addr16
inc
movs
xchg
dec
or
add
idiv
sbb
sub
and
leave
stos
cmp
adc
pushf
sbb
loop
out
jecxz
dec
mov
or
add
ins
cli
cmp
sub
inc
imul
fiadd
or
jl
ja
push
mov
ins
jge
xchg
inc
pushf
repnz
ja
sub
inc
xchg
mov
cmc
rcr
scas
pop
lods
xchg
xchg
test
scas
leave
add
jb
inc
or
add
bound
dec
pop
imul
lock
dec
mov
lds
clc
in
retf
and
xchg
icebp
inc
mov
test
ds
in
sbb
cmp
and
inc
lahf
lock
jmp
bound
xor
xchg
addr16
jb
push
pop
out
push
sub
or
popa
jmp
jecxz
jo
(bad)
in
call
pop
mov
das
push
lock
popa
pushf
pop
pop
add
and
out
xor
mov
jno
xor
xor
push
fisttp
call
fild
(bad)
inc
mov
adc
fistp
retf
call
mov
loopne
retf
sub
push
movs
arpl
xchg
stos
pop
lds
inc
push
push
mov
mov
int3
mov
enter
pop
addr16
hlt
jg
movs
mov
xchg
pop
push
cdq
ja
cwde
outs
pop
les
adc
inc
nop
mov
push
mov
cmp
pusha
in
in
out
in
add
xchg
push
jmp
clc
ins
mov
shl
jg
arpl
das
xor
adc
mov
sub
cmp
aaa
test
popf
jae
nop
mov
fcomi
call
call
xchg
popa
push
mov
pop
sub
add
jne
add
or
loopne
daa
pop
pop
xchg
inc
fistp
cwde
(bad)
aad
jae
outs
dec
pop
pop
sbb
(bad)
or
sub
adc
ins
out
dec
je
loope
xchg
repz
dec
cmps
addr16
stos
(bad)
stos
(bad)
sub
or
inc
sub
push
das
cs
daa
mov
push
mov
mov
sub
in
xor
test
mov
lods
push
sbb
adc
clc
inc
xor
sub
jns
mov
mov
xchg
stos
xor
retf
inc
addr16
push
scas
mov
test
in
sbb
sti
in
sbb
fs
fsubp
aaa
call
ins
or
in
pop
shr
pop
cwde
push
mov
mov
ret
inc
in
out
jle
iret
loop
ins
inc
aaa
sbb
inc
sub
popf
mov
es
pushf
test
and
rcr
jne
adc
push
sub
loop
add
or
dec
dec
enter
mov
daa
jae
ss
pop
or
cmp
imul
and
(bad)
mov
shr
(bad)
test
jmp
xchg
or
sub
sub
jns
cmp
jae
push
inc
movs
inc
or
ja
mov
mov
ret
cmps
jle
leave
ret
push
pop
outs
sbb
jae
test
and
call
sbb
push
js
mov
sbb
fsubr
fucom
mov
and
(bad)
sbb
mov
int
jb
sub
pusha
xor
mov
mov
pop
cli
mov
out
cmp
js
dec
loop
and
jnp
sub
mov
dec
ja
xchg
mov
dec
in
cmp
fwait
adc
nop
in
aam
loop
xor
pusha
retf
mov
lea
push
sub
scas
jg
xor
or
xor
ss
test
in
mov
retf
leave
cmp
xlat
cmp
dec
rcr
movs
sbb
push
sub
mov
sbb
sbb
jo
dec
dec
xor
and
hlt
pop
pop
xor
adc
pop
into
imul
sahf
xchg
inc
push
ins
(bad)
mov
scas
sbb
sub
jle
repz
cwde
mov
fwait
ins
out
xor
jp
push
mov
dec
add
arpl
sbb
inc
push
or
test
jmp
out
add
dec
call
repz
pop
outs
lahf
mov
pop
loope
mov
pop
push
out
test
pushf
pusha
push
sahf
rcl
sub
add
jnp
outs
pop
push
xchg
and
cmp
test
fcomp
bound
sbb
fs
mov
sub
cdq
or
(bad)
jne
outs
inc
xor
jl
cmp
outs
sub
cwde
sub
ins
icebp
sub
push
aaa
push
xor
jns
inc
rcl
sub
push
loopne
out
dec
xchg
xchg
in
xchg
jmp
xchg
push
(bad)
adc
movs
ret
dec
xlat
int3
push
and
jae
pop
sub
sub
ja
fsubr
or
cmc
in
jnp
push
mov
loope
gs
ja
jecxz
repnz
cwde
and
je
mov
push
jl
push
daa
stc
arpl
jo
cli
sub
repnz
stc
fwait
popa
inc
cmc
mov
imul
mov
dec
mov
cmp
dec
dec
xor
ins
mov
mov
in
scas
dec
scas
lea
cmp
xor
jo
xor
das
jns
loope
cmp
cs
iret
jmp
loop
mov
or
rep
sahf
jecxz
shl
add
int3
enter
je
push
enter
test
dec
mov
pusha
jno
ror
xchg
pop
sub
push
mov
hlt
mov
mov
jo
cmp
movs
mov
ja
or
jo
lods
mov
push
sti
xchg
xor
lahf
in
xor
push
scas
xchg
jnp
lock
les
sub
int3
sbb
dec
jo
addr16
mov
fcomp
stos
sub
xchg
imul
pop
cmps
inc
fs
loope
fcomp
fdivr
stos
sbb
fnsave
pop
or
sahf
pop
cmp
or
scas
sahf
pop
mov
sbb
lods
mov
inc
imul
dec
and
dec
(bad)
xor
sbb
pop
mov
outs
jle
or
xor
sub
int3
dec
adc
icebp
movs
lea
sti
sbb
popf
cmp
add
(bad)
push
and
js
mov
cmp
mov
in
fnstenv
stos
into
inc
lods
in
push
stc
pop
ror
mov
jmp
dec
jb
aas
sbb
xlat
adc
push
add
shl
imul
push
jne
clc
pusha
out
adc
sbb
(bad)
out
retf
pop
pusha
jmp
push
shl
push
stos
jae
es
fmul
in
mov
push
push
out
lock
cmp
adc
mov
mov
or
sub
mov
xchg
iret
jnp
mov
xchg
mov
or
sbb
cwde
push
pop
mov
and
inc
xchg
jb
and
fwait
inc
int
push
mov
mov
cmp
ret
mov
mov
loope
loop
mov
ret
aam
xchg
sub
sbb
jmp
pop
sbb
addr16
xchg
cmp
ja
ins
adc
jo
sub
push
aaa
and
pop
outs
sbb
add
push
dec
sbb
inc
mov
cmp
mov
imul
jmp
fldcw
add
push
fdiv
stos
daa
mov
leave
inc
push
ins
int
or
xchg
mov
pop
mov
xor
sbb
push
mul
cmp
sub
(bad)
cmp
das
sub
adc
adc
or
jno
not
ds
les
xchg
sub
and
xchg
mov
add
mov
mov
cdq
imul
dec
ret
popa
stos
jbe
ficom
int
mov
jle
scas
cld
mov
test
dec
xor
xor
ds
or
adc
jne
push
clc
daa
mov
add
dec
aam
xchg
pop
fnstenv
ret
sbb
mov
xor
pop
pop
push
push
test
lds
loopne
sbb
(bad)
and
jnp
not
pop
xchg
inc
pop
lock
adc
jns
dec
ds
ficomp
sub
sub
int
push
cdq
sbb
retf
popa
out
inc
scas
setl
call
add
mov
out
mov
or
je
sbb
sti
jbe
mov
jmp
add
int
lds
xor
and
jae
sub
and
hlt
bound
jecxz
adc
or
add
adc
aad
push
inc
inc
stc
jo
jmp
imul
mov
in
std
dec
or
mov
add
sub
repz
mov
fist
push
nop
pop
dec
sbb
jmp
lods
cmp
xchg
xor
lahf
inc
ss
mov
(bad)
adc
xchg
or
test
mov
out
sbb
loope
lods
sahf
rol
into
ja
(bad)
and
enter
pop
cmp
mov
iret
rol
add
or
jecxz
or
cmps
pop
sub
jns
cmp
sub
nop
or
arpl
mov
int
popf
sbb
shl
xchg
pop
mov
xchg
retf
dec
mov
xchg
jg
ja
movs
dec
or
fwait
mov
xchg
(bad)
cmp
xchg
inc
fistp
add
imul
stc
scas
push
pop
daa
or
dec
mov
push
xor
sbb
push
xor
shl
pushf
test
push
xchg
aaa
ss
sbb
ret
jns
(bad)
mov
push
std
outs
cmp
daa
imul
div
push
and
mov
jne
cmc
cli
jp
aaa
sahf
jge
lock
sub
mov
pop
clc
lods
enter
inc
enter
push
setl
into
jl
cmps
lahf
mov
adc
pop
(bad)
sbb
xchg
frstor
mov
jmp
pop
call
jl
xchg
sti
addr16
push
push
inc
jle
mov
lea
adc
retf
or
retf
xchg
imul
cmp
sub
or
cmp
mov
jns
sar
lods
enter
xchg
cmc
les
xchg
mov
pop
xchg
mov
cld
ins
lods
fdivp
lods
sbb
push
mov
test
jle
sub
in
(bad)
pop
bound
into
inc
gs
inc
repz
(bad)
std
inc
sub
mov
mov
add
jge
pop
lock
faddp
dec
push
inc
xchg
push
sub
xor
outs
mov
test
sub
cmc
or
xchg
mov
aas
and
jae
call
mov
ja
cli
in
cdq
fistp
fst
pusha
retf
or
and
dec
cmp
inc
(bad)
fcomp
and
imul
sbb
jb
and
ins
mov
movs
mov
sti
call
popa
sbb
popa
mov
(bad)
repz
daa
(bad)
sbb
cli
xor
jecxz
jmp
sbb
cs
cwde
xor
cli
adc
(bad)
ins
bound
mov
jno
std
dec
inc
imul
xchg
jns
mov
repz
mov
(bad)
fbstp
nop
pop
adc
ss
out
mov
pop
and
(bad)
nop
dec
sbb
fwait
sysenter
fcmove
aas
call
mov
out
mov
leave
xchg
pop
stc
sbb
ret
jp
mov
fst
cld
jae
stc
cmps
fs
dec
(bad)
imul
movs
xor
imul
or
out
lds
scas
sub
mov
adc
or
xor
cli
jb
lods
aad
into
out
div
mov
int
gs
lods
adc
test
bound
xchg
push
or
sbb
aas
shr
mov
sub
aas
sbb
xor
push
add
or
mov
iret
jge
dec
push
adc
dec
xchg
out
cmps
xchg
cwde
push
jl
sub
mov
or
mov
or
jns
test
pop
mov
adc
cmp
jecxz
mov
mov
mov
jae
adc
scas
test
pop
repnz
mov
push
push
rcr
mov
inc
out
add
je
push
sbb
clc
dec
popa
sub
in
pop
fwait
sbb
mov
cwde
fldenv
int
test
cmp
mov
popf
(bad)
mov
mov
inc
xchg
xchg
add
mov
mov
out
jne
lods
sub
(bad)
pop
add
mov
jl
(bad)
clc
(bad)
loope
push
pop
inc
jge
cmp
cdq
jmp
dec
lock
mov
mov
out
add
add
mov
adc
out
mov
xor
and
mov
sbb
(bad)
fucom
aaa
sbb
and
cwde
sahf
push
inc
int3
sub
jns
dec
push
mov
push
pop
lock
ja
shr
sbb
jle
lds
push
sub
pop
ds
inc
fnsave
sub
pushf
enter
or
aad
pop
lahf
cmp
ins
(bad)
cmp
push
inc
(bad)
mov
cs
pop
in
mov
ror
cmp
sub
aas
adc
sahf
cwde
push
adc
shr
ss
out
inc
pop
mov
or
test
pushf
push
cmp
cld
or
sub
dec
(bad)
idiv
aaa
mov
dec
dec
and
and
pop
push
outs
mov
movs
mov
pop
sbb
div
stos
in
inc
lds
imul
sbb
clc
addr16
jle
test
xchg
pop
fs
fidiv
cmp
icebp
fs
je
(bad)
pop
cmp
push
push
rol
xlat
sub
sub
stos
mov
sbb
stos
add
jo
push
cmp
jle
fs
movs
test
enter
mov
retf
xchg
mov
ja
fs
inc
fild
cwde
int
pushf
sub
and
add
cdq
pop
fisubr
cmp
push
addr16
jbe
mov
nop
fdivr
aas
movs
pushf
sbb
into
xor
imul
js
pushf
sub
pop
pop
mov
std
repz
push
push
sahf
mov
fist
out
cld
(bad)
inc
cmp
or
sti
mov
add
sub
sbb
or
push
mov
cmp
ds
sbb
cmp
or
push
fwait
stos
mov
outs
mov
arpl
xchg
mov
push
dec
pushf
mov
aas
in
cmp
dec
sbb
into
js
(bad)
sti
xor
stos
js
rcr
scas
xlat
push
jmp
mov
clc
cmp
sahf
out
leave
cmp
inc
out
push
jnp
ins
es
dec
dec
mov
imul
jmp
repz
add
jb
add
fsubp
xchg
push
xchg
jecxz
and
outs
adc
adc
adc
xchg
call
inc
fwait
scas
push
out
or
or
ror
mov
retf
push
xchg
sub
je
jg
jmp
stc
pop
add
pusha
mov
push
xchg
inc
cmps
sbb
add
mov
in
push
dec
cmp
cmp
leave
sbb
pop
adc
pop
xchg
mov
pop
shl
call
sbb
imul
ret
mov
aam
pop
out
call
adc
(bad)
push
cmp
ins
aam
ret
mov
inc
pcmpgtw
cmp
and
jmp
add
es
in
pushf
mov
pop
mov
sbb
jge
sub
and
lods
enter
(bad)
out
adc
adc
fdivr
loope
mov
dec
jp
ss
add
sbb
dec
add
pop
fild
outs
or
sbb
fild
inc
jbe
or
sub
sbb
dec
out
cwde
cmps
sbb
gs
push
popa
mov
not
ficom
sub
adc
loop
mov
mov
push
cmp
and
fdiv
into
mov
(bad)
outs
retf
(bad)
out
mov
or
pop
in
lds
cmp
inc
pop
lock
iret
mov
cmp
xor
fs
aas
(bad)
mov
stos
daa
cmp
scas
mov
jmp
mov
and
xchg
loope
mov
jo
adc
push
in
push
icebp
sub
aad
mov
sbb
inc
test
movs
stos
sar
push
out
xchg
sahf
add
movs
or
stos
out
mov
(bad)
aas
jnp
push
fdiv
idiv
icebp
add
or
xchg
mov
jge
scas
cmps
pop
xor
nop
mov
cs
push
mov
out
shr
in
div
mov
mov
js
mov
fnstenv
mov
enter
shrd
imul
cmps
int
pop
mul
ds
scas
fild
adc
add
adc
test
cmc
cmp
jne
jmp
cmps
dec
(bad)
fsubr
jg
mov
rcr
in
cwde
push
in
hlt
cdq
sbb
hlt
or
movs
sbb
lods
mov
lea
push
pop
jg
mov
shl
les
xchg
mov
xchg
inc
dec
xor
or
mov
nop
lods
enter
add
or
cmp
inc
mov
push
shl
gs
push
sbb
pop
stos
shl
xor
xor
dec
fiadd
call
sar
shl
sar
stc
xchg
xor
jb
mov
sbb
test
add
scas
movs
stos
pop
sbb
push
and
movs
jnp
xchg
sbb
lods
push
jbe
aaa
loopne
neg
add
mov
fstp
faddp
fucomip
fist
inc
data16
(bad)
out
jbe
sub
pop
pusha
dec
movs
add
mov
sbb
cmp
fidivr
imul
shl
mov
daa
mov
pop
pop
(bad)
mov
xchg
inc
pop
or
lock
jae
push
dec
jb
or
fdivr
jl
inc
cli
xor
test
jg
mov
dec
xchg
mov
into
push
dec
std
sbb
(bad)
xchg
dec
gs
imul
daa
addr16
jmp
xchg
or
sub
mov
cmc
inc
test
and
iret
arpl
jno
push
jl
les
gs
fisttp
out
call
cmp
repnz
jno
mov
push
or
jnp
dec
out
push
mov
sbb
cli
int3
out
sub
daa
sub
pop
pop
cld
pop
faddp
adc
fs
cli
xchg
cs
sub
aam
mov
lahf
jmp
xchg
xchg
add
lods
movs
adc
aam
adc
xor
or
cmp
popf
sub
sbb
jnp
adc
loope
or
jp
xchg
xchg
das
jg
(bad)
pop
movs
jl
ds
mov
sar
retf
xchg
inc
jns
sbb
jge
and
mov
xchg
sub
repnz
popa
inc
call
dec
int3
xchg
lods
das
cs
int3
xor
loope
out
aam
(bad)
lock
sahf
or
xchg
cmp
or
cdq
pop
fcmovbe
cmp
lds
nop
mov
outs
ins
sbb
add
ss
popa
not
mov
fwait
in
mov
cs
and
fiadd
mov
xor
or
call
jl
adc
dec
setg
mov
fs
popa
mov
out
pop
xchg
stos
std
repz
nop
shl
loope
or
mov
(bad)
(bad)
fiadd
inc
push
cmp
push
mov
add
repz
stos
mov
daa
dec
out
fwait
scas
ss
js
fisttp
xchg
pop
xor
sub
pop
sub
jno
es
(bad)
jmp
pop
xchg
pop
push
inc
idiv
scas
scas
jmp
fistp
or
jp
mov
(bad)
pop
and
aad
push
neg
mov
fwait
lock
add
mov
cwde
(bad)
xchg
mov
pop
ins
sbb
enter
in
sbb
dec
popa
(bad)
mov
jmp
mov
test
mov
adc
mov
repnz
jne
xchg
add
and
repnz
mov
sahf
int
push
unpckhps
cmp
and
pop
xor
test
xchg
cdq
add
push
mov
sbb
outs
call
fadd
or
in
loope
fsub
std
mov
scas
ror
dec
test
sub
push
pop
into
add
enter
daa
xor
retf
sbb
int3
lods
daa
inc
fsub
xor
push
cmp
xor
xchg
pop
icebp
leave
dec
popf
mov
xchg
fs
mov
or
add
adc
frstor
mov
cmp
mov
cmps
ret
dec
daa
sub
mul
mov
push
outs
test
cli
mov
push
jecxz
cs
enter
xchg
cmp
out
sub
movs
sahf
lahf
push
jg
push
pop
or
jmp
out
dec
xor
add
mov
(bad)
sbb
xor
in
sbb
xchg
xlat
inc
js
sahf
stc
xchg
xchg
cmp
mov
stc
jg
dec
cmp
mul
mov
cmp
int
mov
mov
retf
inc
inc
iret
pop
push
leave
xor
adc
mov
icebp
outs
inc
adc
jb
jmp
dec
ja
inc
inc
xchg
inc
add
std
div
inc
sub
cmps
in
jmp
push
adc
jo
xor
fist
retf
add
in
ret
ins
ret
sub
scas
int3
enter
shl
test
ret
cmp
movs
int3
cli
lods
or
sbb
aaa
dec
cmps
cmp
pop
push
jg
scas
retf
xor
sub
push
cmps
and
(bad)
mov
dec
ds
mov
imul
icebp
out
or
mul
iret
(bad)
sbb
and
mov
sbb
dec
fistp
and
pushf
inc
cmp
xor
movs
stos
mov
dec
jg
sbb
jmp
inc
sub
xchg
mov
mov
aas
std
fcomi
std
out
fidiv
push
loop
inc
repnz
dec
gs
sahf
sbb
dec
hlt
shr
pop
adc
mov
mov
fcmovnbe
test
jmp
push
xor
in
fcmovbe
push
mov
sbb
ror
dec
cmc
(bad)
jp
test
dec
shl
adc
and
cmp
dec
fbld
cmp
adc
add
mov
call
repz
pop
cmp
mov
mov
lods
dec
dec
outs
push
jge
jecxz
pop
inc
push
jge
fwait
aas
sar
inc
pop
mov
xchg
nop
lods
aad
pop
jmp
mov
lea
mov
cs
jge
jmp
in
and
fld
inc
stos
add
cmc
mov
daa
hlt
sbb
dec
mov
and
jae
mov
movs
inc
push
cs
je
jg
test
sbb
outs
jo
cmp
cmp
dec
jne
outs
xor
sbb
scas
gs
mov
sti
mov
icebp
sub
(bad)
mov
push
fstp
mov
inc
jge
les
add
ins
stos
and
lds
das
or
sbb
cli
cmps
(bad)
mov
popf
cwde
ja
xor
fmulp
cmp
cmp
mov
sahf
outs
je
rcl
mov
jo
hlt
cld
cdq
cwde
jb
(bad)
das
in
popf
cmps
es
pminsw
mov
movs
jg
pop
jge
jmp
lods
cmps
cmp
adc
mov
mov
mov
pop
xchg
loope
ja
push
xchg
cmp
ror
cld
addr16
aas
xor
cmp
pusha
push
stc
push
push
cmp
xchg
jo
outs
inc
sub
repz
jg
scas
or
push
(bad)
repz
sub
sbb
and
repz
mov
lahf
push
jns
outs
pushf
cs
ss
cld
xchg
dec
pop
cld
pop
not
pop
js
mov
adc
js
or
fnstcw
inc
out
pushf
sbb
cdq
adc
test
or
fdiv
imul
shl
std
(bad)
fs
dec
xor
add
mov
shr
inc
and
cld
aaa
adc
mov
loop
and
or
cmp
mov
nop
cmp
dec
inc
popf
sub
add
cmp
fiadd
js
adc
idiv
push
frstor
add
jecxz
add
xchg
js
or
sub
xor
or
stos
ror
movs
adc
xor
add
in
mov
push
jbe
push
and
push
mov
frstor
add
push
mov
stos
lds
xchg
jb
cmp
add
xor
out
scas
pop
pusha
cmps
cs
addr16
stc
stos
add
sbb
iret
add
das
call
push
mov
mov
imul
add
test
(bad)
mov
es
(bad)
xchg
rcr
xor
xlat
inc
outs
xchg
fwait
retf
enter
adc
inc
jg
data16
int3
dec
jmp
mov
xor
outs
sti
popf
or
add
mov
lods
sbb
inc
xor
ja
jnp
repnz
xchg
icebp
jae
lods
mov
js
adc
loop
inc
(bad)
pop
mov
pop
xchg
push
add
jb
imul
je
outs
sbb
fnstcw
addr16
jge
push
test
popa
or
hlt
clc
das
or
pop
xchg
mov
movs
ja
leave
je
std
jl
pop
in
pop
pop
aad
sbb
add
iret
fisttp
fistp
je
call
int3
jns
repz
fld
int3
callw
leave
mov
cmps
mov
int3
in
ins
pop
popf
pop
xor
mov
cmp
or
pop
call
sbb
jno
cmp
push
mov
mov
(bad)
pushw
pop
movups
(bad)
repnz
aas
mov
stos
xchg
stos
dec
mov
es
xor
ins
mov
enter
mov
jmp
pop
daa
repz
movs
push
inc
int
(bad)
cmps
test
js
rcl
pop
sub
pop
inc
ficom
shr
scas
pop
cs
movs
shr
fimul
bnd
mov
sbb
out
jnp
xchg
pop
(bad)
sub
ds
lea
dec
xor
ins
rcr
add
mov
sub
push
jecxz
call
mov
mov
in
add
aad
arpl
mov
inc
(bad)
xor
aas
pop
lahf
arpl
xor
jno
inc
ds
mov
push
bound
out
daa
xchg
cld
bound
adc
add
call
test
mov
inc
hlt
fisubr
xchg
scas
fldcw
test
lods
dec
das
movs
imul
push
cmp
jb
mov
cmps
jmp
sahf
cmps
popf
mov
loopne
lods
sbb
jmp
sub
add
out
repz
adc
into
cdq
or
bound
jo
stc
inc
daa
fwait
push
inc
adc
ret
inc
repnz
loopne
into
inc
pminsw
int3
imul
or
xchg
ficomp
leave
jns
cmp
stos
lds
lods
rol
mov
jg
push
dec
jl
sar
stc
xor
arpl
xchg
pop
ds
push
call
sub
shl
movs
ret
push
fidiv
xor
adc
pushf
pop
pop
or
int
sbb
daa
mov
or
(bad)
movs
pop
mov
mov
push
scas
cmp
adc
(bad)
dec
out
aam
popf
ins
mov
out
cmps
push
push
cdq
test
or
cmps
dec
retf
in
adc
cmp
push
cmps
lock
outs
add
sub
cwde
jmp
jg
sub
jge
sbb
xchg
sbb
xor
cmp
push
enter
(bad)
cld
in
mov
(bad)
jmp
mov
push
int
push
xchg
(bad)
and
xlat
inc
lock
out
in
push
jns
xchg
dec
xchg
xchg
push
xor
pop
jmp
push
xchg
imul
repz
loope
add
push
les
push
jbe
dec
nop
inc
jo
xchg
xchg
dec
leave
dec
jbe
sbb
pop
mov
das
push
call
leave
push
mov
xor
ins
or
(bad)
cwde
mov
xchg
or
fld
cmp
test
pop
or
ror
imul
test
mov
int3
aaa
push
xor
gs
mov
(bad)
xchg
div
test
ins
or
mov
cmp
dec
add
wrmsr
cmps
outs
inc
jge
lock
ret
clc
pop
adc
mov
jbe
ins
retf
sub
push
xor
in
retf
cmps
jl
push
lahf
(bad)
pushf
cli
dec
xor
push
lock
addr16
cmp
jmp
sub
dec
and
lds
into
cmp
xchg
aam
cmp
sub
jae
pop
xor
retf
mov
xor
dec
add
push
iret
pop
adc
mov
mov
pop
sub
icebp
pop
jns
cmps
ror
cmps
and
mov
add
xchg
adc
xchg
push
push
push
and
adc
xchg
inc
adc
es
push
addr16
or
or
outs
out
leave
and
(bad)
std
xchg
push
adc
lods
inc
pop
repnz
jg
mov
stos
fild
adc
retf
in
push
movs
inc
inc
iret
nop
and
pop
pop
and
cmps
pop
sub
mov
and
mov
lods
cmp
(bad)
or
outs
sbb
fbld
mov
jae
xchg
sbb
and
je
mov
bound
ss
hlt
mov
or
jb
or
jno
and
jp
inc
xchg
jmp
sar
push
leave
scas
call
pop
xchg
inc
call
adc
lock
out
mov
popa
pushf
cmps
inc
aad
ja
mov
gs
dec
ret
mov
mov
cmp
inc
or
adc
pop
test
mov
out
mov
sbb
(bad)
not
std
outs
(bad)
add
pop
or
mov
pop
jno
daa
mov
adc
push
sub
lahf
cmp
leave
xchg
push
inc
add
mov
scas
mov
(bad)
cmps
pop
jecxz
jle
outs
xlat
hlt
test
sti
pop
xchg
add
sti
in
aam
sbb
dec
rcr
test
jne
fld
call
dec
bnd
mov
repz
inc
and
es
aas
nop
and
push
cmps
pop
xchg
add
inc
xchg
sub
pop
push
mov
daa
sub
popa
fldcw
fadd
test
or
loope
ss
(bad)
and
in
int
jl
aad
int3
mov
retf
stc
cmp
stos
xor
loop
retf
pop
outs
mov
fwait
add
sbb
add
push
or
shl
movs
pop
mov
leave
xor
adc
xor
xor
out
jp
mov
cmps
js
ss
sar
pop
pop
jle
mov
sbb
mov
aaa
push
push
(bad)
pop
outs
adc
bound
imul
loope
ret
jge
xchg
clc
adc
mov
movs
cmc
repz
mov
inc
out
dec
call
js
and
pop
in
data16
jmp
jp
dec
mov
mov
loop
inc
mov
dec
jns
push
jbe
repz
sub
ret
xor
mov
push
mov
retf
rcr
mov
sbb
rcr
sahf
and
sahf
test
mov
pop
dec
dec
dec
cmps
adc
xchg
jecxz
test
leave
inc
add
loopne
pop
add
mov
sbb
inc
jmp
mov
pop
call
inc
dec
stos
inc
stos
enter
sbb
adc
pushf
mov
cmp
dec
adc
sub
inc
pop
addr16
inc
push
dec
call
sbb
push
jnp
add
mov
sub
pop
xor
adc
sti
xor
fsub
xchg
mov
ficom
and
push
(bad)
mov
inc
sub
add
jae
fnstsw
mov
sub
fst
jns
push
sbb
adc
rcl
int3
das
scas
mov
jg
daa
push
das
adc
nop
add
cmp
xchg
arpl
rcl
loope
in
dec
fist
cmp
dec
(bad)
fidiv
pop
add
mov
and
jne
pop
bnd
mov
pusha
jo
jnp
and
cmp
cmp
inc
or
push
cwde
jnp
sahf
or
loope
jmp
out
inc
push
xchg
stos
jl
xchg
sbb
lods
sbb
mov
jo
movs
push
in
mov
pop
fld
mov
jecxz
mov
mov
out
xchg
mov
or
bound
in
jae
jl
mov
cmp
fild
or
pop
enter
xor
movs
cdq
(bad)
ins
cmp
mov
xor
mov
movs
sub
and
sbb
jno
loop
imul
scas
cmp
popa
mov
out
out
xlat
and
mov
xchg
jle
pop
adc
inc
imul
fucomi
test
sub
sub
out
jmp
pop
push
xchg
inc
out
pop
mov
jae
pop
imul
sub
shr
pushf
dec
sub
lar
mov
pop
dec
iret
mov
in
xchg
adc
inc
sbb
rcr
into
sar
aas
mov
cli
sub
sub
adc
cs
std
and
cmp
push
inc
xchg
iret
add
sub
adc
mov
scas
cwde
sar
sbb
cmp
aad
inc
dec
mov
loope
fs
sub
es
gs
cwde
jp
pop
pop
pushf
dec
pop
dec
repz
xchg
cmp
mov
ror
fisub
jg
push
mov
mov
jmp
pushf
loop
sar
mov
test
dec
adc
ja
mov
in
lods
test
mov
popf
lds
rcpps
in
mov
je
mov
jle
cli
in
mov
es
cmp
push
cmp
or
not
out
rcr
push
inc
xchg
and
fsubr
pop
jns
fucomp
scas
adc
push
inc
mov
int
sub
enter
jbe
rcl
test
mov
xchg
mov
std
jp
jmp
push
aad
add
xchg
shl
mov
lea
cs
mov
ds
ret
stos
cmp
jnp
in
mov
inc
loopne
inc
inc
ins
push
sbb
sub
pop
lods
lods
jae
inc
xchg
xchg
dec
mov
scas
mov
in
lock
call
pusha
cmp
inc
repz
adc
sub
data16
pop
out
mov
push
in
hlt
arpl
test
jle
pop
mov
les
fdiv
(bad)
sub
pop
mov
inc
(bad)
loop
lods
xor
gs
push
sub
cmps
dec
nop
mov
sub
int
adc
scas
(bad)
in
add
cmps
scas
test
icebp
xchg
rcl
out
add
retf
lea
(bad)
sar
cmp
sub
xchg
jecxz
xchg
dec
sbb
cmp
lahf
(bad)
js
shl
dec
sbb
xchg
push
fcomp
into
fisubr
std
push
pop
mov
movs
cmp
sub
popa
and
gs
jmp
mov
fsubr
mov
lahf
adc
jp
enter
sub
and
mov
mov
and
inc
jnp
push
imul
popf
sub
outs
fs
and
mov
inc
push
iret
aad
sub
adc
test
sbb
outs
sti
xchg
add
ins
xor
dec
mov
fidivr
movs
es
sti
xchg
jmp
stos
idiv
adc
cwde
push
icebp
sub
push
sub
test
push
mov
in
push
mov
leave
pop
outs
clc
xchg
mov
pusha
aad
jp
iret
push
shl
repnz
jecxz
inc
fldenv
xchg
into
mov
fsub
test
mov
mov
xor
or
outs
push
pushf
inc
stos
fcmovnb
out
outs
xchg
jmp
mov
xor
sbb
adc
int3
out
retf
loop
xchg
js
mov
std
push
or
dec
adc
call
dec
sub
in
jo
(bad)
jmp
stc
dec
neg
inc
gs
aas
adc
push
inc
repnz
and
push
jne
movs
stos
mov
push
lds
dec
gs
imul
pop
xor
cmps
pop
xor
push
loope
loopne
stos
test
rcr
rol
or
sahf
sbb
adc
inc
cmps
(bad)
fdiv
mov
sub
loop
cmp
stc
daa
rcl
mov
mov
jp
in
aad
adc
je
mov
xchg
pop
(bad)
xlat
or
adc
(bad)
fmul
dec
pop
inc
inc
stos
mov
adc
gs
dec
inc
outs
jmp
mov
add
jno
xchg
add
xchg
xor
mov
ret
xor
mov
test
push
cmp
dec
inc
pop
push
stos
cmps
pop
jle
test
retf
js
ja
xchg
sbb
sbb
xchg
lea
add
sub
std
dec
mov
dec
stc
arpl
push
jg
in
xor
add
xchg
scas
cmp
xchg
dec
mov
lea
push
jecxz
in
pushf
mov
aaa
aaa
and
jg
in
xchg
push
shr
jne
push
and
xchg
out
movs
jbe
mov
les
scas
mov
pop
xor
pop
pop
inc
cmp
dec
push
stos
bswap
push
jecxz
adc
sub
inc
mov
adc
pop
pop
push
xchg
pop
pop
bound
out
cs
cmc
and
sub
sub
hlt
xchg
or
movs
xchg
push
sbb
mov
sahf
push
call
dec
sar
and
mov
and
and
jns
(bad)
aam
shl
mov
dec
js
sub
jno
mov
mov
inc
mov
inc
mov
pusha
xor
mov
push
rcr
es
add
push
shl
inc
adc
mov
pop
push
cmp
pop
mov
inc
add
test
popf
ins
das
aad
cmp
xchg
lds
inc
mov
add
mov
sets
stos
xor
inc
nop
mov
inc
test
jae
enter
dec
jmp
inc
mov
mov
out
sar
rol
adc
cmp
arpl
int
test
into
iret
sub
fcmove
iret
jle
repz
sar
shr
call
mov
in
ja
mov
sub
dec
es
sbb
mov
(bad)
ins
inc
xor
xchg
push
xchg
pusha
sbb
inc
dec
loope
adc
(bad)
cdq
jle
dec
loope
or
clc
and
jge
lahf
addr16
cmp
out
inc
mov
aam
in
popa
fmulp
es
fadd
push
push
sub
jne
cmp
imul
shr
mov
xor
adc
push
xchg
jns
pop
mov
or
jo
fsub
leave
and
add
stc
test
dec
adc
xchg
sub
pop
into
popf
inc
adc
jo
sub
js
xchg
add
fsubr
add
and
ret
int3
sar
(bad)
push
ins
add
bound
cmp
popaw
out
fisttp
test
dec
rcr
popa
mov
scas
jmp
adc
sahf
inc
gs
(bad)
sbb
xchg
jbe
xchg
dec
retf
xchg
or
inc
stos
inc
jle
cmp
xchg
inc
(bad)
(bad)
fcmove
test
mov
dec
sub
div
mov
and
gs
sbb
xor
test
(bad)
sbb
lahf
aas
inc
rcr
push
cmp
fsub
and
pusha
mov
ficomp
or
cwde
pushf
mov
enter
dec
xor
sti
jbe
xchg
pop
cmp
cli
add
push
aad
test
and
aas
hlt
or
repnz
jo
jne
ror
xchg
outs
push
movs
fcmovu
lea
call
push
xor
data16
jnp
cmp
jno
adc
retf
jg
ds
cmp
fs
iret
neg
sbb
mov
mov
repz
ficomp
fsubr
into
dec
jns
pop
push
and
movs
cmp
repnz
mov
and
lds
sbb
aam
movs
sbb
xchg
mov
lods
pusha
mov
mov
pop
clc
aaa
or
sti
sbb
aad
shl
loop
(bad)
loop
or
jnp
pop
jg
loop
(bad)
in
xlat
je
mov
das
inc
sahf
ret
dec
push
movs
push
adc
jo
push
xor
nop
aad
cmp
xlat
sbb
add
clc
mov
ins
pop
aaa
sbb
nop
imul
outs
sbb
and
fisubr
js
test
sbb
neg
add
add
cmp
adc
mov
gs
xchg
dec
mov
inc
adc
test
ins
lahf
ret
mov
xchg
xor
and
enter
std
ja
pushf
mov
jecxz
call
mov
push
mov
mov
sar
cmc
mov
xchg
mov
aad
stos
int
mov
sbb
mov
in
js
rcr
lahf
ins
out
sub
in
jl
or
mov
sub
xor
std
jl
mov
push
call
aaa
arpl
mov
stos
fsubr
daa
push
cmc
rol
sbb
mov
and
cdq
jno
aas
add
mov
pop
ins
xchg
lods
lock
mov
push
aad
shl
aaa
sbb
test
test
cli
or
cmps
push
jb
aad
jmp
add
cmp
mov
mov
iret
call
retf
adc
popf
dec
popf
(bad)
xchg
jnp
(bad)
xor
std
add
mov
mov
shl
push
bound
pusha
idiv
(bad)
mov
xchg
lods
(bad)
xlat
stos
movs
(bad)
pop
add
hlt
xchg
pop
inc
gs
xchg
xor
mov
mov
stc
cmps
push
shl
fwait
lds
(bad)
out
and
dec
iret
call
mov
pop
xchg
sub
ret
xchg
jmp
call
ss
adc
inc
mov
adc
dec
not
xchg
and
push
push
dec
iretw
inc
mov
push
rol
cld
dec
inc
mov
mov
lds
jae
mov
out
sub
add
mov
lahf
add
xorps
xor
ins
cmc
stos
not
rol
mov
xor
pop
rcl
stc
inc
lahf
adc
and
mov
push
and
inc
xchg
jae
cdq
inc
jmp
retf
or
sbb
lods
(bad)
and
rcl
mov
ds
out
daa
pop
int
rol
frstor
fcom
mov
sub
inc
lds
cmp
add
mov
push
mov
jmp
(bad)
std
xor
push
push
mov
fdiv
lea
stos
into
repnz
jo
pop
or
inc
push
push
ss
nop
push
(bad)
fimul
pushf
ret
stos
mov
push
pop
ins
es
(bad)
sub
pop
or
int3
test
pop
lods
xor
push
sahf
popa
sub
mov
dec
push
mov
mov
jg
sti
pop
test
or
add
sti
and
or
mov
jl
push
adc
sbb
les
and
sti
icebp
inc
sbb
loope
ret
outs
fdiv
xlat
popa
push
and
inc
push
push
inc
ins
sub
cvtdq2ps
and
push
inc
and
cmp
loopne
pop
fisubr
or
mov
jne
imul
mov
loopne
pop
xchg
mov
and
in
push
push
in
push
push
jle
out
pop
inc
in
add
inc
jl
cdq
mov
aas
daa
xchg
xchg
inc
cmps
mov
repz
test
(bad)
movs
adc
fprem1
loop
fnsave
loope
test
dec
push
cmp
ret
scas
pop
icebp
mov
daa
jecxz
lea
jb
sub
sbb
pop
xlat
and
mov
cmps
movs
pop
xor
or
rcl
inc
arpl
cs
loope
jg
jns
cli
push
leave
aad
std
hlt
add
cmps
test
add
mov
sar
add
push
daa
in
sbb
retf
cmp
adc
xor
mov
mov
retf
inc
jno
mov
adc
push
fdiv
sbb
rcl
fisubr
movs
or
pop
adc
rol
aas
xlat
jecxz
cmps
dec
clc
xchg
xchg
pusha
and
in
xor
or
call
mov
lods
mov
xchg
mov
dec
jne
out
rcl
lock
aam
push
jae
sub
add
in
sub
stos
fwait
jb
nop
mov
cs
ret
sbb
add
xchg
xor
sub
aaa
popf
xor
int3
retf
movs
loop
mov
jnp
test
pop
mov
jg
pop
ins
dec
mul
fs
and
aam
xor
mov
addr16
outs
loopne
jecxz
aam
dec
inc
lods
add
jns
fnstcw
jae
rcr
mov
push
fistp
repz
xchg
rcl
mov
mov
xor
cmp
push
cmps
cmps
add
pushf
mov
sahf
dec
por
leave
cmp
pop
ss
lock
pop
rol
into
xchg
xlat
xchg
dec
inc
aam
stos
jb
mov
xor
ret
add
test
inc
xchg
push
into
mov
jo
cmp
aam
pop
cmps
sbb
movs
ror
ret
adc
push
xor
pop
sub
push
(bad)
retf
in
(bad)
mov
mov
and
xor
mov
fcomp
imul
cmc
mov
and
dec
cmp
lock
arpl
mov
sti
stos
xor
test
daa
adc
jne
xor
pop
mov
fnstcw
xchg
mov
adc
stc
movs
ret
mov
mov
xor
inc
mov
aad
imul
cld
mul
imul
fdivr
scas
in
in
lods
cmc
stc
out
(bad)
(bad)
jmp
aam
add
mov
jmp
sub
jecxz
mov
xchg
pop
mov
popa
popf
cli
ret
adc
jl
ret
pop
(bad)
out
inc
xor
mov
dec
lods
mov
or
in
xor
clc
test
rcl
shr
add
fcomi
sahf
mov
mov
dec
scas
shl
jecxz
dec
test
out
loop
(bad)
and
inc
fucomi
lods
push
icebp
stos
aaa
les
imul
or
fs
fild
push
push
inc
or
inc
gs
div
lods
xchg
or
repz
push
pusha
(bad)
(bad)
call
test
pop
test
ins
lods
jne
cli
arpl
pop
push
xchg
(bad)
jne
xor
sbb
push
ins
fwait
stc
xchg
dec
jns
mov
aas
scas
mov
out
jne
add
jmp
js
loopne
jmp
push
cmp
or
test
push
mov
pop
jbe
or
cmp
xchg
cld
inc
mov
fld
push
addr16
(bad)
fst
sahf
xor
movs
(bad)
dec
pushf
ret
xchg
jl
mov
add
pop
xchg
sbb
cmovo
test
loopne
xchg
inc
mov
mov
ss
stc
rcl
sbb
fs
lods
bound
jnp
sub
call
lds
iret
and
inc
loope
es
in
and
fsubp
icebp
idiv
xchg
sbb
(bad)
das
sti
js
mov
xor
xchg
lea
(bad)
dec
inc
test
jbe
adc
stos
mov
mov
dec
xlat
leave
div
shl
sbb
sub
int
loop
call
jne
jb
aad
aam
cdq
fxch
push
(bad)
jno
mov
pop
neg
imul
xchg
add
xchg
inc
pop
inc
pop
mov
mov
mov
push
ds
jmp
mov
outs
mov
je
push
sahf
inc
dec
xor
sbb
dec
cmp
cmc
mov
jnp
in
add
int
cs
call
mov
sub
add
adc
inc
pop
shl
adc
or
adc
sub
scas
jge
push
dec
ins
fdiv
inc
retf
int3
ret
push
dec
and
mov
mov
aam
outs
(bad)
cmp
or
xor
jecxz
jmp
hlt
aad
bound
inc
dec
push
ret
aam
cmp
and
and
push
xchg
sub
xchg
movs
mov
sti
adc
inc
or
push
inc
mov
mov
inc
scas
not
xor
(bad)
jmp
jne
sbb
jae
pop
stos
call
jecxz
in
lock
rcr
loop
mov
aad
mov
push
xchg
mov
sbb
(bad)
or
shl
sbb
dec
mov
imul
ins
fiadd
push
or
leave
inc
sub
retf
mov
inc
fimul
sbb
js
mov
jmp
or
xchg
dec
mov
cmp
outs
jmp
push
push
out
sbb
inc
and
ja
out
mov
push
push
fcomi
cwde
(bad)
dec
and
aaa
sahf
call
ins
fs
cmps
sbb
mov
fmul
aaa
daa
xor
mov
(bad)
aaa
aas
add
jle
lahf
out
add
hlt
push
jg
add
pop
clc
nop
adc
fdecstp
shl
icebp
pop
fiadd
xchg
dec
rcr
shr
mov
leave
sti
jno
fsub
xchg
xor
jbe
pop
or
and
push
lahf
xchg
cwde
repz
dec
div
sub
mov
jp
jbe
rol
jmp
push
(bad)
aas
sbb
or
lods
sbb
pushf
scas
int3
push
mov
imul
enter
sbb
cmp
adc
xchg
add
mov
mov
div
sbb
mov
xchg
(bad)
ficom
mov
mov
mov
ja
cmp
mov
add
dec
xchg
arpl
ret
sub
or
mov
fs
add
xor
jge
jge
lock
into
pop
sbb
pop
add
push
add
addr16
paddsb
int3
mov
mov
or
popf
sub
(bad)
paddq
or
pop
cli
inc
pop
lea
sbb
cmps
lods
imul
pop
mov
icebp
cli
leave
inc
mov
daa
aaa
shr
cmp
out
(bad)
daa
rcl
jns
add
retf
cld
mov
push
jmp
sahf
jne
aam
stos
ins
shl
xchg
push
sbb
shl
push
dec
stos
xchg
dec
sbb
mov
dec
mov
(bad)
cs
in
adc
fimul
xchg
mov
xor
dec
mov
adc
les
call
fdivr
fnsave
(bad)
ds
jg
xchg
sbb
inc
inc
jb
xchg
xchg
ins
or
mov
fadd
data16
lea
nop
retf
sbb
jnp
(bad)
not
pop
jbe
mov
cmp
jo
jecxz
adc
sub
xor
dec
jecxz
pushf
jecxz
pop
lods
sbb
out
cli
xor
sbb
push
leave
adc
out
rcr
out
mov
test
add
call
shl
xlat
loop
push
pinsrw
mov
push
call
adc
jmp
lea
jmp
inc
inc
loop
jg
in
cmc
out
shl
sbb
mov
ret
mov
sub
sar
leave
in
gs
aaa
arpl
pusha
stc
pop
int3
add
test
jo
int
nop
ins
add
xor
sahf
mov
addr16
or
das
jae
lea
push
sub
sub
dec
xchg
inc
ins
jmp
xor
cmp
out
mov
sub
add
mov
lds
cmp
mov
jns
call
xlat
sub
pop
cmp
push
push
ins
dec
push
cwde
jp
add
sbb
sub
xchg
jle
pop
out
xor
jl
xor
add
adc
shl
or
data16
jnp
adc
or
cmp
bnd
xchg
in
fild
rcl
ins
mov
imul
jl
or
push
or
cld
inc
jmp
loop
sahf
xor
xchg
inc
xchg
jg
je
sbb
jne
cmp
sar
imul
int
bound
call
int
adc
pop
add
sahf
mov
enter
or
arpl
(bad)
xchg
fist
ret
dec
dec
es
pop
sub
aad
inc
pop
out
cmp
es
mov
aad
enter
xchg
unpcklps
xor
sbb
(bad)
xchg
xor
push
ins
(bad)
ins
leavew
xchg
and
imul
call
leave
cmps
arpl
or
ds
cmps
sbb
cdq
mov
pop
retfw
nop
leave
push
sbb
outs
sub
shl
pop
popa
xor
mov
inc
test
mov
(bad)
repz
in
jmp
(bad)
imul
not
pop
mov
retf
pop
stc
mov
jb
je
jo
stos
jbe
mov
cld
out
mov
or
push
adc
int
adc
push
cmp
cld
pop
ins
int
enter
shl
xor
ss
cmp
sub
mov
or
dec
push
repnz
rol
out
jp
arpl
pop
adc
ret
into
cmp
fiadd
shl
shl
iret
push
stos
xor
ss
pop
pop
jb
test
(bad)
pusha
rol
call
imul
loope
push
stos
aad
popa
push
stos
jmp
lods
loopne
sti
pushf
add
or
test
loop
aaa
test
cmp
lds
clc
pop
jl
call
mov
jne
sbb
or
(bad)
js
ds
xchg
aaa
pop
stos
out
movs
cmc
int
push
dec
sub
sbb
sbb
sbb
lock
mov
inc
test
ret
mov
sub
xchg
jecxz
or
(bad)
jmp
xchg
push
or
pop
jbe
(bad)
adc
or
mov
xchg
scas
or
pushf
ror
push
neg
pop
in
les
xor
mov
mov
mov
push
add
popf
or
sbb
sub
jg
jnp
xor
and
mov
xlat
in
test
inc
leave
fstp
loope
jmp
push
or
pusha
push
std
lea
jns
repz
daa
test
adc
pop
mov
xchg
xor
call
jecxz
bound
shr
sbb
daa
outs
mov
cs
jb
pop
jbe
sbb
cmp
je
fist
jae
arpl
outs
mov
aad
cmp
dec
call
dec
loopne
pushf
cmp
popf
push
repz
test
pop
pop
cld
add
jne
jmp
lahf
dec
pop
sar
or
sti
in
adc
gs
test
cmp
cmp
xchg
mov
movs
xor
addr16
jno
xchg
inc
pop
(bad)
out
mov
dec
loope
icebp
dec
in
fcmovbe
cmp
rcl
jbe
imul
pop
adc
out
jne
jmp
ss
scas
aad
jne
test
cdq
addr16
enter
int
cld
lods
dec
or
mov
xchg
mov
xor
out
(bad)
and
loopne
inc
jmp
js
xchg
mov
lahf
jge
mov
mov
fcomp
fdivr
push
inc
inc
mov
pop
fiadd
add
call
sbb
cmp
test
mov
fwait
mov
mov
aas
dec
dec
or
dec
push
push
ficomp
add
or
fdivr
gs
cmp
or
and
mov
hlt
pop
int3
mov
sahf
jl
jge
push
jne
xchg
push
mov
or
push
mov
and
into
inc
call
jecxz
adc
inc
in
pop
pop
fimul
shl
fsubr
stos
adc
shr
ud2
xor
inc
xor
jle
lods
popf
mov
sub
or
test
test
mov
dec
inc
out
mov
imul
jae
mov
xor
dec
xchg
ins
fidiv
test
xor
ror
add
sbb
cmp
jo
jnp
fcomp
or
cmp
mov
mov
(bad)
jp
adc
add
shl
cs
lods
mov
sbb
arpl
push
dec
fst
xlat
loope
in
(bad)
xor
pop
js
pushf
rol
sub
add
and
push
and
out
js
push
mov
repz
fistp
lods
js
sbb
add
xchg
cmp
mov
stos
iret
dec
mov
sub
cmp
stc
add
sbb
es
pusha
jno
je
sub
ret
(bad)
cmc
(bad)
ret
in
retf
inc
add
mov
scas
push
aas
repnz
mov
pushf
ja
mov
pop
mov
add
clc
xor
lods
call
fild
arpl
and
pop
repnz
mov
cmps
inc
sbb
jbe
dec
loopne
adc
rol
jbe
ss
push
xchg
mov
fwait
loope
in
std
mov
dec
push
test
dec
add
mov
arpl
js
xchg
push
inc
add
push
xchg
in
sti
xor
adc
xchg
push
jp
data16
lds
sub
cmps
fiadd
add
int3
cmps
loop
dec
mov
adc
and
scas
cdq
test
das
add
add
retf
aas
pop
hlt
dec
test
push
mov
adc
pusha
dec
dec
mov
pop
aad
out
dec
mov
cld
aad
pushf
or
push
jmp
jns
mov
cmp
mov
lods
sub
mov
inc
jae
(bad)
(bad)
stc
shl
inc
jg
ret
outs
aaa
rol
outs
imul
mov
aam
in
lods
push
(bad)
pusha
fstp
mov
jle
fldcw
pop
or
sub
jmp
push
iret
lock
cdq
add
sub
or
xchg
sbb
popa
dec
push
(bad)
rcl
xor
xchg
inc
mov
(bad)
or
iret
daa
push
pop
stc
add
aam
sub
mov
jno
ffreep
sbb
and
imul
shr
cmp
and
stos
push
dec
cdq
add
and
stos
inc
fadd
test
movs
in
mov
push
pop
je
cwde
scas
xchg
add
add
jbe
or
pusha
mov
out
cmps
rcr
leave
add
aam
dec
mov
push
jno
pusha
jmp
cmp
sbb
(bad)
xchg
jmp
cmp
inc
mov
in
cmp
sbb
pop
jecxz
jo
adc
in
xchg
cmp
in
out
inc
pop
(bad)
cmp
xor
cdq
sti
je
mov
inc
inc
stos
push
out
ret
cmp
pop
cmp
mov
rcl
frstor
mov
in
outs
out
jns
adc
(bad)
lock
into
ret
rol
push
mov
jb
jae
sbb
and
ins
mov
xor
fucomp
lahf
dec
mov
push
jle
xchg
push
out
mov
fwait
int
rcl
sbb
and
adc
sbb
imul
out
dec
test
push
xor
xor
dec
mov
call
leave
jo
dec
xchg
iret
loope
push
dec
(bad)
xor
jo
or
add
fld
cli
(bad)
push
pop
jl
mov
cmp
stos
ret
sbb
or
out
fistp
adc
mov
scas
sbb
mov
mov
adc
sbb
in
(bad)
pop
xor
frstor
jae
pusha
jo
mov
sub
or
rcl
call
out
jno
fldcw
nop
adc
jg
mov
jne
popf
das
js
jl
(bad)
mov
(bad)
enter
mov
rcl
dec
arpl
ffreep
push
xchg
pop
aaa
in
mov
add
in
add
test
sbb
push
stos
neg
or
in
test
(bad)
pop
inc
fild
icebp
rol
jle
mov
add
in
push
push
fdivr
xchg
fcomp
pop
fstp
mov
jo
push
xchg
xor
and
sbb
sahf
cmp
inc
pushf
std
mov
adc
daa
fadd
xchg
outs
out
adc
xor
enter
sbb
sub
xor
jbe
fstp
jl
retf
in
xchg
into
les
pop
ret
pop
xor
jb
call
push
imul
sub
or
jns
rcr
imul
xchg
jl
sub
sbb
pop
frstor
xlat
or
and
test
outs
sar
add
push
mov
or
aas
imul
push
xlat
and
or
or
stos
cmp
inc
ss
mov
out
pop
cmps
mov
(bad)
cmp
je
pushf
test
repz
mov
call
add
pushf
cdq
in
sub
jle
and
cs
ret
test
cwde
js
hlt
mov
pusha
std
pop
sub
mov
add
ss
inc
mov
inc
nop
in
and
shl
pop
mov
popa
and
inc
xor
sbb
mov
inc
inc
push
stos
pushf
mov
cmc
inc
les
call
sti
dec
mov
or
push
cwde
dec
stos
xor
xchg
popf
addr16
jecxz
sbb
xor
push
arpl
push
popf
xchg
hlt
out
icebp
pop
daa
out
xchg
inc
stc
das
pop
je
sbb
mov
cmps
call
add
cmp
test
adc
icebp
dec
push
(bad)
sti
adc
lahf
push
mov
call
pop
std
jb
sub
add
dec
rcl
aas
cmovp
mov
adc
int
sti
fcomp
inc
popf
iret
in
fs
in
add
into
mov
shl
dec
es
es
xchg
mov
xchg
ss
cmp
add
adc
and
or
push
popa
and
pop
mov
cmp
dec
sub
icebp
push
dec
xchg
xchg
mov
jmp
loope
and
push
inc
das
jno
add
xor
push
mov
mov
dec
mov
mov
movs
stos
rcl
ds
fwait
mov
push
dec
outs
ror
aam
add
movs
xchg
mov
sbb
jnp
and
inc
ja
and
push
push
adc
push
adc
jmp
push
sbb
ror
mov
xchg
movs
push
pop
adc
adc
dec
aam
retf
push
sub
mov
sub
in
push
addr16
maxps
div
xchg
mov
xchg
(bad)
cmp
inc
mov
sbb
and
call
mov
push
or
jo
fbstp
imul
daa
dec
xor
dec
outs
(bad)
dec
movs
sbb
mov
push
movs
xchg
gs
repnz
cdq
je
adc
inc
xchg
or
xor
jmp
mov
imul
cmp
sbb
mov
xlat
mov
sbb
inc
mov
mov
inc
mov
mov
pusha
lods
add
scas
out
rcr
dec
mov
rol
mul
mov
icebp
mov
and
xor
aaa
add
test
fild
fdiv
dec
push
push
sub
inc
pop
int3
fdivr
mov
sahf
gs
jbe
fisubr
xchg
or
push
and
in
jno
dec
(bad)
mov
mov
cmc
lods
pop
outs
scas
jmp
nop
movs
push
iret
cld
push
mov
push
push
shl
test
call
jbe
or
inc
leave
xchg
pop
aam
aaa
stos
out
or
retf
pop
push
xor
ret
nop
fldcw
adc
cmp
into
or
xor
aaa
sti
psubusw
sbb
ret
repnz
xor
push
xchg
dec
xchg
shl
mov
sub
inc
cmp
dec
and
sub
jno
fdivr
jo
xor
adc
jmp
inc
xchg
call
or
xor
mov
push
lahf
jo
cmp
loop
pop
stos
jmp
pop
jmp
jmp
and
mov
xchg
cmp
or
fisubr
mov
pop
adc
inc
cmps
test
cmc
aam
mov
push
loop
lock
test
mov
jecxz
je
mov
and
add
lds
jno
clc
repz
and
jb
ds
nop
mov
or
(bad)
popa
mov
cmp
popa
mov
imul
cmps
xor
mov
adc
jae
jne
inc
and
dec
fdiv
jb
xor
js
mov
or
stc
pop
dec
ror
pushf
dec
ins
pushf
std
int
loope
ror
push
xor
out
push
loopne
xchg
or
fiadd
mov
dec
mov
cli
pop
nop
(bad)
push
test
leave
sbb
pop
mov
cmp
lods
sbb
shl
cmp
xchg
out
das
mov
scas
push
add
mul
inc
fstp
ret
add
test
shld
and
pop
daa
ins
mov
(bad)
aaa
or
into
jle
(bad)
fnsetpm(287
cmp
jnp
pop
(bad)
jo
clc
inc
sahf
div
test
inc
mov
dec
ss
push
xchg
xchg
inc
addr16
mov
cld
idiv
jbe
jecxz
aad
adc
jbe
cmps
jne
add
retf
push
pop
scas
das
stos
xlat
mov
or
or
pop
inc
jp
out
fisub
shr
cli
loopne
push
sti
(bad)
sub
dec
jbe
mov
dec
(bad)
mov
sbb
ds
fs
cli
jl
int3
call
xchg
daa
fdivr
add
stos
lds
mov
in
fimul
push
and
shr
xor
test
in
xchg
test
mov
dec
sub
pop
push
push
shl
add
sub
xor
(bad)
(bad)
jnp
push
outs
lods
dec
cs
inc
xor
xchg
loopne
mov
inc
repz
sbb
mov
xchg
fild
out
inc
or
call
sub
and
sub
icebp
movs
mov
sbb
clc
push
sbb
cdq
inc
aaa
mov
ss
daa
call
and
scas
mov
sub
mov
sbb
jnp
mov
in
sar
rcr
dec
mov
and
dec
loopne
arpl
mov
mov
in
out
rcl
sub
pop
push
js
imul
in
inc
out
mov
movs
(bad)
out
push
das
sub
test
outs
cmp
xor
and
cmc
cmps
dec
dec
ja
fisub
push
lea
xchg
sbb
push
mov
rcr
test
pop
pop
xchg
mov
cwde
and
adc
ud1
or
jl
movs
es
in
pop
test
mov
sub
add
in
inc
jp
cmp
adc
daa
xor
cld
adc
sar
push
into
jp
add
add
pushf
adc
xlat
push
fsub
adc
xor
ror
es
dec
shr
push
push
ins
sar
or
mov
jmp
lods
mov
pop
(bad)
or
popa
test
mov
pusha
ret
or
mov
test
jns
lea
es
fstp
shl
dec
pop
iret
js
add
adc
icebp
test
xchg
cmp
popa
mov
fdiv
push
pop
mov
or
dec
test
mov
xchg
imul
sahf
jnp
pop
pusha
imul
das
les
xchg
fs
mov
(bad)
retf
js
push
push
xchg
pop
and
mov
mov
out
jecxz
jg
nop
out
jbe
pushf
in
push
jp
test
aaa
ins
dec
aam
push
mov
mul
jmp
sub
aam
xchg
cld
bound
cmp
js
scas
jne
pop
rcl
jb
jecxz
retf
push
sub
push
mov
test
ja
add
xor
xchg
pop
mov
add
les
jle
mov
mov
pop
and
push
xchg
push
rcr
mov
mov
pop
dec
mov
push
in
aas
faddp
xor
xchg
(bad)
jns
add
in
ins
adc
dec
pop
jle
ds
xor
xchg
push
(bad)
xlat
pop
popf
test
popf
adc
fwait
push
jne
(bad)
sbb
push
fdiv
dec
repnz
and
xor
jg
test
fdivr
add
adc
imul
jmp
xchg
shr
aas
jl
and
xchg
out
into
add
ins
sub
leave
sar
in
push
ror
xchg
jbe
push
test
jl
adc
jne
lahf
stos
pop
xor
(bad)
out
fs
or
or
shr
leave
xchg
mov
cmps
push
cld
ja
fisubr
xor
jns
push
mov
mov
ds
mov
mov
mov
add
sbb
in
shr
mov
dec
cmps
and
mov
test
cmc
cmps
and
sahf
inc
addr16
movs
in
sti
jno
fs
pop
aas
sub
push
das
std
pop
pop
sub
and
sub
pop
popf
into
ss
add
cli
dec
cmp
loopne
(bad)
lods
fist
inc
xlat
inc
not
cdq
inc
in
mov
in
push
cmp
mov
std
mov
xchg
mov
in
std
repz
cli
ret
test
and
dec
lahf
test
mov
cmps
sub
inc
ins
popa
or
std
mov
cmp
pop
sub
adc
push
pop
xor
lock
jo
loop
add
fsubr
repnz
cmp
cmp
rcl
adc
int3
inc
in
sbb
push
xchg
(bad)
mov
aad
fmul
push
cmp
sahf
mov
dec
icebp
(bad)
test
fdiv
xor
sub
jo
pop
scas
enter
jmp
pop
xchg
mov
and
ror
rcl
gs
add
stc
out
ja
into
dec
pop
push
jnp
jno
mov
gs
loope
pop
cmp
add
cdq
or
xchg
lods
sub
jno
aaa
or
(bad)
nop
mov
popa
loopne
cmc
add
fucom
cmp
xchg
add
scas
inc
mov
push
test
nop
sbb
ins
inc
xchg
mov
sbb
xchg
ror
inc
lahf
cmp
adc
fdiv
inc
test
leave
pusha
push
or
neg
iret
or
cmps
mov
push
movs
sahf
mov
push
pop
shl
push
cli
mov
jmp
jo
fidivr
adc
lea
rol
xor
ret
fisttp
iret
push
jne
out
mov
xchg
add
push
mov
adc
dec
stc
push
mov
cmp
movs
cwde
inc
into
mov
inc
repz
stos
jecxz
and
cmp
xlat
xchg
jns
jge
call
cwde
dec
test
xor
pop
sub
add
idiv
outs
mov
mov
and
jne
ret
sbb
enter
xor
sbb
add
xor
pop
fucomp
cmp
pop
std
sbb
mov
pusha
shl
pop
and
jb
mov
mov
sbb
pop
or
mov
cwde
jl
shl
xor
mov
inc
ror
lea
shr
mov
fwait
sahf
pop
not
mov
xor
test
inc
fs
ja
mov
inc
or
sub
outs
rol
bswap
push
out
pop
or
test
or
imul
jno
inc
adc
ret
jnp
xchg
mov
mov
loope
call
in
sbb
call
sub
nop
outs
dec
ja
mov
pop
jns
clc
test
call
call
jmp
rcl
dec
mov
sub
and
push
ret
adc
call
dec
add
xor
mul
aaa
and
sahf
sub
xlat
retf
and
adc
inc
int
xchg
shl
or
imul
xor
pusha
xlat
jae
cmp
mov
leave
dec
out
sbb
(bad)
in
addr16
arpl
jb
pop
mov
test
out
jbe
mov
pop
stc
(bad)
ss
and
ret
or
js
push
outs
movs
std
mov
ret
cmp
sti
or
(bad)
sub
(bad)
and
adc
lea
jo
int3
imul
jl
and
loopne
mov
loopne
cmps
jg
xor
sar
dec
push
xor
sub
inc
(bad)
mov
mov
inc
mov
push
and
xchg
and
pop
jecxz
loopne
dec
ja
lds
xor
ret
xlat
sbb
xlat
loopne
push
or
cli
fcmovbe
mov
cmp
imul
pop
scas
sti
or
pop
popa
or
mov
xchg
mov
scas
leave
movs
out
mov
add
out
add
xchg
mov
fisub
sti
xchg
sahf
push
cmps
mov
xor
dec
ret
outs
add
hlt
dec
popf
sbb
pop
pop
cld
pop
push
jnp
or
push
push
test
or
dec
lods
and
push
mov
mov
rol
mov
test
or
cmp
sahf
mov
push
jno
or
or
jmp
data16
dec
or
cmp
dec
jecxz
into
fsubr
pusha
aas
aas
retf
jnp
dec
fist
lds
push
int3
imul
adc
jge
cmp
jge
(bad)
movs
lods
sahf
mov
and
test
inc
daa
rcr
ror
mov
dec
jmp
fsubr
xchg
inc
or
inc
(bad)
out
jb
ins
test
test
dec
je
jne
jmp
cmp
dec
(bad)
pushf
fistp
push
jns
movs
cmp
sbb
push
fisubr
push
loope
pop
lock
or
sub
mov
ss
cmps
mov
fnstsw
push
mov
inc
mov
xor
leave
xor
rcr
mov
xor
shr
ins
loope
dec
ret
xor
mov
fldcw
js
xor
inc
push
jne
call
inc
clc
xlat
nop
jmp
mov
dec
int3
inc
ins
mov
in
in
mov
cli
fist
test
mov
enter
popa
and
call
sub
test
sub
scas
(bad)
out
fistp
xchg
call
mov
sub
mov
push
mov
xchg
add
pop
sbb
xchg
push
push
or
dec
sub
dec
mov
rcl
outs
push
out
imul
shl
sub
mov
push
cwde
sub
mov
test
(bad)
lods
or
inc
popa
ret
pop
ja
ins
push
jl
xor
daa
mov
out
es
iret
aaa
(bad)
div
xor
dec
mov
or
push
pop
cld
push
push
es
cmp
into
push
outs
xlat
push
jno
xchg
scas
pushf
jae
loope
mov
mov
adc
cmc
sub
push
aas
into
sar
addr16
push
jmp
dec
sbb
xchg
or
jnp
loop
mov
cmp
iret
dec
or
jo
fs
in
cmp
add
rcl
inc
mov
inc
add
jmp
(bad)
fcmovnb
test
xchg
aas
adc
aaa
ins
(bad)
scas
hlt
inc
xchg
adc
inc
mov
xchg
push
outs
enter
xor
inc
lds
jo
dec
push
inc
mov
les
cmp
add
sahf
xor
jge
sti
dec
pop
push
scas
sub
fwait
dec
push
ja
cs
or
pop
cwde
setns
fnstenv
fild
inc
mov
fsub
scas
es
loop
retf
js
(bad)
cli
xor
mov
xor
pop
sti
int3
pop
adc
sub
test
ins
sbb
jle
and
sti
aam
xchg
xchg
iret
std
arpl
dec
xor
add
in
xchg
cmp
mov
push
popf
sub
adc
xchg
jo
cmp
sbb
xor
retf
sub
fist
hlt
js
shr
movs
mov
jmp
and
jnp
enter
pop
xor
in
repnz
jae
and
enter
and
cmp
jbe
(bad)
nop
and
f2xm1
mov
mov
stos
or
dec
int
(bad)
fbld
mov
cdq
and
mov
cwde
fld
data16
imul
sub
das
xchg
mov
aas
add
mov
sub
mov
adc
outs
xchg
cs
and
rcr
push
arpl
scas
scas
and
dec
jbe
xor
mov
inc
daa
icebp
aad
sbb
jp
and
sbb
loop
inc
shl
mov
jge
pop
jno
inc
dec
pop
jnp
add
jo
call
ds
test
out
adc
push
leave
mov
adc
lods
mov
cld
in
in
les
xchg
stos
fs
stc
mov
mov
cmp
ins
add
xchg
push
fnstenv
mov
aas
add
mov
mov
jbe
addr16
test
adc
or
stos
mov
out
(bad)
fisub
adc
mov
mov
stos
xor
and
lahf
xlat
lods
sbb
xchg
sub
push
cmp
mov
jne
cli
stos
shl
xchg
iret
rcl
jle
fdivr
jbe
add
out
mov
jae
sub
mov
xchg
and
mov
(bad)
mov
mov
cdq
(bad)
mov
xchg
out
ret
stos
push
loopne
mov
icebp
adc
jg
jmp
dec
cs
add
pop
mov
arpl
ror
mov
mov
movs
aam
push
loopne
jo
test
and
fisttp
jmp
ja
lds
outs
jp
nop
cmp
pop
popa
xchg
lahf
xchg
cld
sbb
and
mov
movs
adc
mov
pop
add
es
call
nop
pop
sbb
dec
add
lds
sbb
loope
aam
mov
mov
jl
sbb
aaa
push
xor
cmp
aam
jmp
sar
inc
push
jnp
pop
mov
shr
popf
(bad)
rcr
pop
pushf
push
jbe
pop
mov
mov
int3
xchg
sub
call
ss
sbb
or
lds
pop
sar
inc
pop
shrd
jns
sbb
(bad)
sar
into
xchg
iret
hlt
fdivr
dec
mov
(bad)
mov
fistp
pop
outs
pop
or
mov
xor
xchg
or
cli
xchg
mov
xchg
and
retf
push
jp
enter
imul
dec
xchg
xor
sti
jns
cmp
pop
test
and
cmp
sbb
cmp
cs
dec
outs
por
pop
aad
cwde
push
ficom
cmp
pop
pop
xchg
xchg
es
aaa
and
xchg
xchg
pop
jmp
cdq
push
lahf
xchg
and
inc
jno
or
xor
adc
adc
add
sub
add
jnp
jl
mov
leave
pop
mov
fwait
mov
cdq
rcl
out
inc
pop
cmp
adc
jg
mov
cwde
cwde
out
inc
sti
loopne
xchg
jno
push
mov
clc
xor
or
add
shl
loop
add
inc
sbb
jmp
cmp
test
mov
(bad)
nop
mov
fs
shr
stc
(bad)
data16
in
mov
fisub
movs
cmp
mov
int3
xchg
jle
(bad)
and
ins
adc
pop
adc
scas
popa
dec
xchg
stos
inc
aad
leave
ret
or
ret
adc
(bad)
adc
push
mov
jo
adc
push
ja
fisttp
cmps
pop
sbb
(bad)
mov
addr16
jmp
jmp
and
arpl
data16
hlt
hlt
inc
lock
mov
fimul
or
fdiv
sub
loopne
clc
push
dec
lds
retf
xor
retf
inc
cdq
and
and
xchg
rcr
jbe
out
cdq
fadd
inc
inc
test
inc
xor
test
sbb
addr16
xchg
push
dec
lods
xor
sbb
push
scas
out
add
xor
jmp
mov
ret
and
and
rcl
test
pop
or
xchg
hlt
fadd
xchg
cmps
ds
addr16
jle
mov
sub
cmps
out
arpl
rcl
push
or
js
mov
call
test
sbb
fnstenv
aad
sub
mov
xchg
mov
cmp
inc
rcr
(bad)
cmc
and
push
xlat
hlt
xchg
add
rcr
retf
dec
mov
dec
test
mov
movs
mov
cmps
add
into
jno
mov
sbb
lock
mov
sbb
jbe
jbe
call
(bad)
xchg
mov
add
mov
ins
mov
movzx
lds
sbb
push
retf
cmps
xchg
(bad)
stos
fwait
sbb
sbb
adc
cmc
daa
(bad)
lods
lea
sub
or
stos
(bad)
ins
jmp
sub
mov
push
dec
inc
mov
mov
mov
sub
and
lods
mov
fld
cld
push
into
mov
or
loopne
std
mov
(bad)
in
cs
add
mov
and
in
not
int3
push
aaa
pop
push
pop
sar
fcom
iret
test
or
mov
inc
pop
or
jge
or
xor
push
push
dec
or
cwde
add
push
lods
xor
ds
mov
dec
in
cmp
addr16
pop
imul
sub
mov
xor
mov
dec
div
xlat
push
jmp
inc
and
mov
xor
in
outs
mov
or
pop
mov
imul
cmc
mov
jle
cmp
fcomp
mov
xor
pop
xor
in
and
rcr
dec
lock
pcmpeqw
pop
dec
inc
pop
sub
pop
adc
mov
adc
enter
ds
fisubr
iret
inc
clc
scas
ss
ds
lods
dec
pop
fldenv
add
in
js
sub
sbb
add
or
mov
xor
setae
das
sub
xchg
push
sub
adc
pop
and
jne
mov
dec
fistp
and
and
mov
push
mov
shl
hlt
pushf
add
mov
pusha
push
add
pop
in
enter
movs
xchg
xchg
sbb
imul
imul
in
push
mov
adc
outs
add
dec
fdivrp
jno
sub
jecxz
stos
hlt
dec
cmc
and
and
inc
sub
das
or
push
popa
lods
or
sub
retf
mov
gs
mov
dec
and
pop
(bad)
lods
fstp
add
sbb
loopne
les
pop
stos
xchg
cs
cmp
aam
push
mov
mov
and
cmp
cmp
xchg
push
add
(bad)
stos
int
add
xchg
fs
loop
cmp
cmp
and
pop
loopne
es
jmp
mov
fistp
inc
ret
out
in
xlat
xchg
mov
ds
test
jae
imul
add
inc
in
jbe
cmp
xchg
sub
in
xchg
pop
jb
aas
sbb
dec
fdivr
and
push
rcr
dec
mov
or
(bad)
xchg
int
push
imul
jl
xchg
test
(bad)
pusha
out
(bad)
push
lods
ss
push
adc
ret
mov
iret
lods
loope
ret
fadd
out
or
jne
jge
arpl
push
add
sbb
sbb
(bad)
pusha
dec
mov
jns
jle
out
(bad)
imul
test
ja
ins
adc
pop
cmp
(bad)
gs
mov
js
out
jp
jmp
pop
leave
cmp
fldcw
bound
push
inc
jb
jo
jmp
je
lahf
loope
pusha
xchg
dec
mov
test
or
sub
pop
pop
bound
push
push
and
or
pop
icebp
mov
mov
mov
idiv
cmp
mov
fcomip
mov
mul
hlt
mov
repz
outs
call
dec
jno
cmc
mov
push
mov
int
jecxz
pusha
enter
enter
gs
test
jne
pop
add
or
daa
xchg
mov
loopne
rol
fmul
mov
pop
popa
add
ror
push
jmp
(bad)
jmp
mov
ret
call
mov
xor
adc
mov
jbe
int3
imul
retf
sbb
(bad)
call
shl
or
in
call
mov
xchg
mov
out
(bad)
xor
icebp
xor
xchg
jmp
scas
fldcw
adc
out
lods
dec
fcmove
sub
pop
jl
dec
jl
sub
imul
aad
cdq
xor
mov
in
mov
dec
out
jg
movs
mov
mov
push
or
jmp
jo
pusha
push
cmc
jmp
sbb
dec
jecxz
cmp
popa
popf
leave
shl
outs
cmc
cmp
xchg
fstp
sahf
(bad)
retf
test
ret
mov
xchg
popa
mov
std
mov
pop
test
pop
mov
ins
hlt
pop
xchg
pusha
or
out
cmp
ror
rol
sahf
adc
clc
mov
mov
or
imul
jns
leave
sub
jmp
xchg
hlt
movs
push
jo
cmps
xchg
xchg
or
leave
pop
or
or
cli
push
add
movs
mov
(bad)
clc
mov
dec
ret
pop
push
pop
scas
(bad)
sti
cs
iret
dec
mov
daa
test
test
outs
(bad)
mov
dec
fdiv
inc
cvtps2pd
mov
test
iret
push
xchg
in
cmps
jle
rcl
jmp
mov
mov
sbb
loop
pop
sbb
sbb
es
retf
lods
cmp
lahf
push
push
pop
and
iret
add
jl
aaa
enter
aad
ins
sub
adc
jno
aas
fstp
adc
sbb
mov
(bad)
aam
mov
and
mov
adc
jg
test
ds
sub
or
call
mov
and
lods
pop
pushf
nop
stos
bound
and
sbb
(bad)
movs
add
dec
jne
pop
jno
xlat
jbe
mov
movs
add
pusha
pop
mov
jmp
loopne
cmps
cs
je
aaa
stos
cmp
daa
jo
mov
jmp
jbe
sub
fdiv
or
push
sahf
and
or
cmp
pop
sbb
rcr
xor
inc
popa
out
rol
or
(bad)
hlt
sub
fcom
inc
lea
test
(bad)
and
sbb
pop
adc
mov
cmp
mov
arpl
sub
loop
mov
ficom
xor
into
mov
jns
xchg
movs
lods
adc
cmp
lods
stos
das
mov
data16
mov
mov
jmp
cmp
div
push
int3
xor
lock
cmp
rcl
jmp
add
inc
push
fadd
mov
push
inc
adc
xchg
add
or
pop
adc
ret
push
scas
pop
outs
leave
and
fwait
out
or
sbb
dec
mov
lock
call
enter
or
les
repz
dec
jmp
xor
mov
and
sbb
(bad)
push
clc
call
scas
fwait
aad
imul
out
(bad)
mul
inc
jg
scas
cmc
in
sbb
sub
cld
dec
stos
loop
add
jl
arpl
sbb
inc
dec
in
inc
sub
mov
cld
sub
imul
lahf
dec
add
jne
sbb
jp
xchg
ins
push
pop
xchg
sub
pop
cmp
mov
out
test
je
or
pop
xchg
lahf
sbb
sub
pop
push
or
xchg
cmc
test
jo
dec
cmp
ds
adc
rcl
je
fdivr
stos
sbb
add
jge
lea
adc
xor
cmp
mov
sub
pop
mov
out
xor
sub
lods
inc
stos
jnp
adc
jmp
cwde
dec
cmps
out
movs
arpl
outs
rcr
shl
mov
sbb
cmp
jb
mov
fdivp
aad
push
popf
stc
outs
inc
mov
pop
jl
call
leave
call
mov
pop
lock
sbb
add
sbb
(bad)
(bad)
movs
es
inc
cmp
stc
and
sti
dec
mov
cmp
(bad)
scas
fcmovnb
out
(bad)
ret
arpl
movs
jne
arpl
cli
jbe
fbstp
inc
out
jb
and
mov
inc
cmp
pop
adc
jmp
or
rcl
xlat
nop
pop
adc
inc
push
jne
sti
lahf
xor
sbb
scas
sar
sbb
push
adc
les
jo
xor
repnz
xchg
xor
mov
nop
mov
dec
ds
lods
sbb
ds
sbb
xor
shr
or
rcr
sub
push
pop
push
cmp
call
test
mov
mov
test
xlat
push
clc
mov
lea
cmp
pop
shl
dec
nop
push
outs
rol
(bad)
inc
std
lods
push
or
cld
mov
aad
fwait
mov
aaa
mov
push
fwait
outs
push
or
les
mov
sbb
aad
movs
inc
inc
cmp
jns
pop
(bad)
and
cmp
xor
push
repnz
inc
leave
cmp
in
pushf
mov
mov
or
mov
das
sbb
mov
mov
cmps
dec
cmp
js
ret
mov
push
mov
pop
inc
xchg
jecxz
xchg
inc
xor
dec
jnp
inc
gs
or
cmc
cmp
stos
(bad)
mov
push
in
repnz
clc
fistp
(bad)
ins
and
mov
test
inc
pushf
(bad)
mov
out
in
aas
nop
adc
popa
dec
jmp
mov
push
and
js
stos
xor
adc
(bad)
repz
sahf
inc
int
aaa
fstp
jge
or
mov
inc
cmp
into
or
mov
jmp
xchg
xchg
std
push
cs
sti
xor
inc
inc
jmp
jecxz
mov
mov
call
test
bound
inc
int3
pop
shl
in
imul
ror
push
in
loop
fwait
adc
ror
mov
cld
fsub
sbb
push
mov
mov
inc
cmc
loop
sbb
call
int3
adc
out
push
jmp
fild
sahf
mov
cmps
mov
jb
ins
lods
jo
pop
fadd
add
pop
pop
jge
scas
in
add
push
push
in
sub
leave
xor
push
enter
mov
adc
icebp
xor
into
cmps
adc
in
and
into
(bad)
(bad)
retf
cmps
mov
push
sub
das
push
pop
cdq
fmulp
outs
pop
es
loope
ins
(bad)
call
fdiv
fwait
adc
and
out
pop
dec
les
pop
es
je
sbb
arpl
and
push
push
pop
jns
sti
mov
into
mov
popa
push
pop
stos
xor
xor
xor
mov
lea
das
sub
mov
adc
add
add
sti
sub
mov
and
mov
jg
call
mov
jae
mov
sahf
out
push
lds
jl
ins
push
jnp
ins
pushf
mov
ins
jmp
mov
lock
inc
retf
xchg
cmp
arpl
mov
jb
mov
clc
adc
push
sbb
repz
add
jge
jbe
mov
imul
cmp
cmp
jg
dec
mov
inc
dec
je
ins
mov
mov
push
js
clc
enter
push
addr16
add
xor
mov
inc
and
pusha
mov
and
lahf
jg
fldenv
pop
mov
and
(bad)
cwde
mov
dec
or
jnp
dec
dec
lods
sub
shl
enter
into
dec
sub
and
scas
adc
dec
mov
(bad)
fs
nop
popa
push
add
dec
je
dec
popa
mov
or
aas
frndint
pop
sub
es
scas
inc
lahf
jl
or
(bad)
aaa
fadd
mov
add
push
jle
(bad)
nop
inc
cmps
popa
in
ins
dec
scas
scas
add
cmps
xchg
mov
icebp
xchg
xor
cld
adc
jp
jne
xchg
push
jnp
loop
lods
xchg
out
leave
mov
repz
out
push
sbb
pop
scas
jnp
mov
push
sub
and
jae
add
test
pop
out
out
ror
dec
inc
inc
sar
inc
in
stos
(bad)
retf
out
scas
dec
cmps
sub
push
xchg
div
push
cdq
lds
xchg
sub
std
rcr
sar
retf
jnp
sub
cmp
sub
and
cmps
and
jmp
iret
pop
mov
test
clc
rcl
and
adc
mov
pushf
sub
mov
mov
adc
add
ja
into
call
pop
ja
hlt
pop
pop
test
neg
enter
shr
outs
pop
mov
nop
aad
cmps
push
jle
pushf
loopne
ja
mov
nop
out
mov
loope
adc
xor
push
imul
sahf
loope
aas
mov
xchg
jp
and
xchg
std
sbb
fsub
jne
pop
xchg
pusha
das
mov
jno
mov
aas
xor
mov
nop
inc
cmp
push
sbb
ret
sti
jmp
movs
inc
arpl
lds
int3
je
stos
out
das
ins
call
ds
inc
mov
sub
inc
adc
xor
dec
inc
or
cmp
inc
cli
ret
sub
sar
mov
jno
adc
test
pushf
sbb
xchg
or
in
outs
xchg
push
hlt
dec
aaa
push
pop
push
mov
jge
leave
sahf
loop
stos
add
jmp
popf
mov
inc
js
sar
and
sar
jae
movs
lock
outs
popf
stos
lods
cli
add
rcl
dec
pop
bound
loope
ror
dec
mov
aam
pusha
clc
cmp
jle
push
xor
mov
pop
stos
xchg
call
stc
jmp
dec
adc
in
cmps
ins
and
push
dec
fisubr
xlat
mov
test
inc
pop
cwde
sbb
push
xor
xchg
jbe
hlt
addr16
sub
and
out
adc
call
mov
test
dec
mov
cmp
and
movs
mov
(bad)
iret
mov
pop
shl
sbb
mov
pop
cmp
or
add
loop
sbb
add
clc
int3
jecxz
cmc
cdq
not
bound
test
mov
movs
nop
clc
mov
and
jae
push
sub
or
ret
je
jae
nop
cmp
cmps
outs
push
dec
or
cmp
push
lods
pop
mov
jg
sbb
mov
fldenv
data16
cdq
or
inc
loop
es
daa
scas
lahf
std
mov
sub
inc
or
xchg
cwde
lea
icebp
xchg
adc
sbb
pushf
jl
jmp
daa
xchg
xchg
or
outs
mov
call
movs
inc
dec
enter
adc
in
xchg
xor
das
xor
add
dec
gs
add
(bad)
adc
cmp
inc
es
sbb
out
mov
mov
test
rcl
sbb
sbb
mov
inc
sub
pop
cmp
out
stos
sub
call
shr
cmps
mov
mov
push
(bad)
mov
cmps
mov
test
add
into
and
sub
std
int3
xor
cli
test
jbe
popf
sbb
dec
fsub
add
mov
ss
mov
loopne
lahf
ret
outs
cmp
mov
sti
sbb
jmp
je
push
ret
out
dec
mov
into
inc
push
and
dec
outs
jle
movs
outs
repz
shl
movs
ins
dec
jno
cpuid
pop
sub
inc
mov
jmp
cmp
ja
loop
imul
dec
sahf
push
mov
call
aas
imul
ss
mov
jo
xor
cmp
push
xor
mov
cmps
nop
pop
cmp
mov
cmp
mov
cld
xchg
mov
sbb
or
nop
xchg
or
leave
out
hlt
hlt
mov
imul
jne
outs
add
xchg
stc
adc
add
leave
xchg
or
sbb
mov
das
enter
std
ss
nop
dec
lea
call
stos
mov
in
das
mov
xor
movs
and
inc
jg
mov
(bad)
loop
or
div
pop
outs
xor
ds
dec
sbb
push
push
pop
cvtdq2ps
fld
aad
xor
cmp
test
fcom
add
mov
(bad)
xor
pop
test
lock
inc
fstp
mov
(bad)
mov
jne
sub
push
inc
arpl
mov
in
xchg
fcom
push
xor
jecxz
shl
cmp
mov
popa
jbe
and
sbb
les
cmp
retf
fist
mov
stos
inc
aas
pavgw
jae
jo
add
adc
sbb
cmc
enter
and
les
xchg
sar
dec
js
in
mov
loop
mov
cmps
sti
jae
pushf
inc
idiv
mov
in
xchg
test
pop
sbb
mov
add
dec
sbb
xor
inc
xchg
leave
xor
adc
sbb
mov
repnz
push
mov
into
ret
jmp
fwait
fs
repnz
jmp
push
popf
and
jo
mov
pop
popa
xchg
paddusw
sbb
js
pop
cmp
pop
push
jae
ja
jecxz
lock
xor
test
cmp
mov
data16
mov
shl
jnp
xchg
idiv
retf
xchg
jmp
sti
ins
outs
adc
dec
frstor
jae
fadd
mov
pusha
jp
cmps
in
sub
repnz
lods
sbb
sub
cmp
lods
sub
fst
mov
push
ret
jo
push
and
pavgw
outs
xor
int3
xor
push
cmp
mov
inc
ds
das
add
mov
mov
test
dec
lods
inc
xchg
mov
bound
adc
int
push
retf
(bad)
mov
loop
jb
sahf
push
call
shl
adc
xchg
pop
jmp
fst
mov
adc
jg
sub
and
mov
js
push
lods
outs
pop
adc
add
sub
mov
push
add
mov
xchg
imul
pop
or
xor
iret
rcr
js
inc
pusha
push
loopne
sahf
mov
call
and
add
push
sbb
pop
rcl
lea
sbb
sar
in
mov
jns
retf
fisubr
mov
stos
ret
retf
out
adc
cli
inc
sti
mov
lods
inc
ret
pop
inc
dec
inc
lds
or
xchg
sbb
cmps
cdq
xchg
mov
imul
mul
xor
xchg
sub
addr16
clc
movs
sti
push
adc
pop
std
inc
arpl
pop
mov
or
and
popf
ret
cmp
int3
xchg
and
sub
imul
loope
xchg
(bad)
into
jbe
mov
repz
retf
mov
nop
popa
std
push
jmp
cmc
rcr
or
jo
sbb
test
jle
je
push
ss
pop
aaa
dec
or
xchg
bound
mov
dec
test
pop
ins
fld
test
push
mov
mov
adc
mov
cli
mov
mov
pop
mov
dec
xor
mov
outs
sahf
add
in
cmc
rcl
dec
pushf
mov
daa
mov
out
or
jge
sbb
mov
add
(bad)
in
mov
jnp
jl
(bad)
mov
addr16
mov
jmp
cmp
xor
push
cmp
nop
or
cmp
xlat
xor
dec
inc
sbb
(bad)
mov
sub
add
jno
jae
out
cmp
sti
add
jecxz
inc
daa
sub
cmp
dec
push
movs
mov
lock
jnp
fld
mov
push
jmp
cwde
dec
inc
dec
fimul
and
jecxz
pop
(bad)
mov
shl
add
lahf
add
xor
arpl
and
out
mov
jg
sub
jmp
dec
ret
jge
cs
cwde
push
pop
imul
jecxz
stc
idiv
(bad)
cmp
dec
das
pop
xchg
imul
pop
stc
shl
push
paddusw
jge
sbb
lahf
cmp
pop
mov
xchg
std
mov
ds
mov
pushf
cmp
xchg
gs
sahf
retf
mov
inc
push
mov
pop
mov
aam
les
dec
or
pop
xor
jbe
and
ret
into
push
cmp
popa
bound
jecxz
js
cld
pop
xchg
xchg
adc
ins
push
inc
jp
into
add
xchg
cdq
pop
xor
mov
out
xchg
adc
retf
sub
mov
retf
jnp
dec
adc
movs
sar
adc
dec
outs
dec
xchg
test
inc
fiadd
shl
xchg
add
adc
cmp
jb
mov
enter
adc
bsr
icebp
in
inc
mov
inc
mov
sub
in
test
dec
xor
mov
inc
mov
xchg
adc
adc
jmp
daa
pop
pushf
dec
mov
mov
in
fs
jmp
mov
sub
(bad)
fidivr
cmp
ret
adc
pop
pop
sub
(bad)
pushf
dec
mov
gs
ds
sub
imul
outs
outs
(bad)
push
jno
dec
add
sub
mov
or
outs
or
or
shr
div
jge
jp
sbb
stos
fmul
das
or
xchg
(bad)
shr
sahf
sub
xor
or
xchg
aam
ds
mov
leave
mov
aas
jne
add
mov
out
lahf
cmc
(bad)
int
fdivp
idiv
dec
and
mov
out
test
js
ins
push
mov
in
or
mov
nop
xchg
arpl
adc
int
push
mov
sub
mov
addr16
cmp
sub
xchg
(bad)
stc
iret
stos
jne
dec
xchg
dec
push
pop
(bad)
cdq
loope
xchg
(bad)
retf
and
int
push
sub
add
inc
in
test
or
dec
push
neg
jno
call
imul
mov
jmp
lods
ja
sbb
fstp
and
aas
sahf
jns
(bad)
fsub
xchg
pop
or
inc
data16
sbb
mov
mov
pop
xor
(bad)
sar
jb
bound
dec
xchg
sbb
jge
sub
cmp
and
push
scas
jo
jb
xor
add
mov
lea
stos
xor
outs
jmp
ret
sub
inc
daa
imul
mov
add
push
and
add
lahf
outs
sub
movs
and
inc
popf
outs
mov
sub
ret
push
call
fadd
scas
xchg
fldenv
push
aad
loop
mov
and
xchg
add
cli
data16
inc
rcr
fnsave
adc
loopne
pop
xchg
adc
imul
(bad)
sbb
mov
dec
lahf
mov
(bad)
repz
arpl
stc
retf
push
ja
and
vpshufd
xor
into
push
cdq
dec
call
or
sub
xor
sub
mov
imul
(bad)
sbb
mov
xor
jecxz
inc
rol
xchg
bound
fdiv
std
sbb
jnp
xchg
push
mov
lahf
jbe
call
test
cmps
(bad)
push
dec
mov
out
inc
dec
loope
out
jnp
adc
jg
test
mov
mov
iret
push
ror
jo
lock
pop
retf
mov
dec
ja
and
inc
outs
mov
(bad)
mov
sti
fs
int3
push
pop
fwait
sub
cmp
out
cmps
shl
fstp
pop
pop
stc
fidiv
jo
into
pop
pop
loope
adc
rol
imul
inc
jbe
test
cmc
clc
ja
div
xor
inc
fist
lods
(bad)
cdq
fidiv
clc
pushf
dec
pop
aaa
enter
xchg
mov
ja
mov
ins
add
push
mov
add
adc
retf
inc
imul
jle
sub
mov
cmc
std
inc
mov
mov
add
and
cs
xor
jno
mov
cmp
or
lea
les
out
shl
pop
leave
icebp
jmp
fcomp
and
outs
push
jo
lds
and
jp
add
cmps
ja
pop
pushf
cmp
cmps
xor
mov
mov
jmp
outs
(bad)
add
data16
fs
push
adc
or
out
fwait
xchg
xchg
mov
cmp
mov
lods
mov
and
repz
out
adc
and
fld
cmps
pop
mov
iret
xor
sbb
outs
test
xor
or
xchg
lods
mov
gs
cmps
add
movs
out
into
sub
shl
icebp
add
cmp
ja
cld
push
mov
cmp
xor
jg
xor
iret
popa
pop
dec
add
in
iret
xor
ins
ins
fldenv
arpl
retf
xchg
sub
push
add
sub
inc
or
sbb
int3
stc
std
out
ins
out
scas
or
out
loope
xchg
cmp
aaa
xchg
rcl
sbb
jl
test
sbb
dec
push
pop
cmp
(bad)
imul
cld
cmc
sbb
mov
lea
std
sbb
dec
sbb
outs
push
scas
scas
mov
pop
xchg
inc
xor
inc
sbb
into
(bad)
in
xor
add
popa
test
pop
or
ret
js
int
jno
fstp
(bad)
ficom
xchg
jbe
jp
imul
test
sub
cld
test
(bad)
(bad)
aam
push
stc
push
out
shl
leave
lock
mov
mov
adc
mov
sub
mov
sbb
cmp
sbb
dec
gs
jb
in
or
xchg
adc
ins
xchg
iret
mov
push
mov
outs
sbb
call
(bad)
(bad)
xchg
jmp
stc
fisub
loopne
add
fucom
int3
push
in
xchg
into
scas
pop
pop
sub
dec
mov
push
add
aad
xor
pusha
push
shr
add
mov
ror
sbb
ds
rol
test
cmps
leave
sbb
xchg
outs
xor
mov
add
jae
aad
push
push
adc
sbb
and
dec
push
dec
pop
sub
retf
xor
jb
data16
cmp
mov
jge
into
out
mov
jmp
(bad)
(bad)
in
xchg
push
sub
(bad)
out
in
push
xor
lods
dec
xchg
and
mov
xchg
dec
or
jnp
in
push
popf
sbb
rol
cmp
jae
(bad)
pop
xor
mov
add
loop
ja
int3
icebp
cmp
aaa
dec
clc
iret
dec
stos
mov
loop
bound
je
push
adc
adc
fst
xor
jne
mov
xchg
in
cmps
ss
cdq
inc
push
and
frstor
sub
test
jbe
imul
pop
std
mov
fcomp
test
pop
push
repnz
adc
sub
imul
in
ret
pop
popf
daa
sub
in
pop
in
inc
aas
retf
aas
aad
mov
cs
imul
(bad)
cmp
cmp
pop
out
or
cmp
push
shl
call
sahf
aas
dec
iret
addr16
mov
shl
xchg
lods
test
shr
cmps
mov
jmp
mov
cmp
add
inc
mov
test
mov
cld
adc
lea
aas
js
inc
std
push
cwde
fwait
and
jecxz
xchg
mov
and
(bad)
mov
clc
sbb
fcom
call
cmp
and
jo
mov
mov
mov
ror
push
test
mov
aaa
movs
clc
(bad)
(bad)
cmp
in
mov
xchg
and
dec
shl
ja
sbb
or
jno
ds
inc
xor
or
and
sbb
rcl
xlat
jecxz
mov
mov
movs
shl
mov
push
cdq
xchg
or
pop
cld
out
mov
cmp
and
ficomp
or
sbb
int3
ret
xor
push
mov
mov
adc
stos
iret
loop
fdivp
retf
cwde
(bad)
push
add
dec
icebp
xor
jmp
repz
cmp
pop
hlt
faddp
fld
mov
and
xchg
test
cmc
ins
mov
movs
push
xchg
fistp
(bad)
push
icebp
stos
cmp
push
xchg
pop
inc
scas
push
jbe
xor
sbb
cmp
mov
es
dec
fs
out
imul
xor
repz
fbstp
cmc
cmp
cli
sub
hlt
lock
call
loope
xor
cmc
ret
cmps
mov
fiadd
pusha
sub
aas
pushf
out
cli
adc
xor
jp
scas
jecxz
dec
(bad)
aam
cld
xor
and
(bad)
repnz
stos
sub
add
xchg
inc
addr16
sub
push
cmc
jle
jno
mov
fisub
add
repnz
mov
loopne
xor
mov
mov
pop
xchg
lods
dec
push
mov
ret
out
(bad)
dec
push
add
jno
xchg
sbb
out
mov
mov
(bad)
into
retf
popf
cwde
inc
daa
mov
cmp
test
je
xchg
(bad)
xor
cmp
cmps
bound
or
fwait
pop
xchg
sub
fnop
dec
fnstcw
or
pop
push
mov
or
mov
cmp
and
add
mov
ret
sub
xor
or
adc
mov
(bad)
push
pop
add
(bad)
mov
(bad)
adc
div
cmp
sbb
mov
and
pop
pop
retf
jnp
cmp
mov
add
cld
loope
xor
pop
gs
xor
mov
add
ins
sub
out
jecxz
rcr
aad
movs
cmp
fs
rol
jb
addr16
mov
shl
push
mov
lea
cmp
cdq
sbb
dec
xchg
stos
loope
cmp
(bad)
out
adc
fcmovbe
inc
shl
test
mov
loop
add
or
mov
and
xor
xchg
ds
cmp
or
fist
adc
stc
mov
sub
mov
stos
pop
inc
xchg
std
or
dec
pop
adc
cmp
jo
pop
call
repz
das
sub
mov
iret
out
xchg
std
jmp
js
or
cmp
cmp
mov
mov
sbb
push
pop
cs
ret
mov
and
push
xor
ss
mov
bound
and
sub
rol
hlt
add
jmp
and
in
mov
stos
cdq
cdq
cs
push
popf
push
cs
cmc
cmp
shl
mov
mov
jmp
rcr
gs
imul
cld
and
mov
mov
xor
mov
call
ja
xor
(bad)
pop
fcomp
iret
or
lds
add
and
lahf
xor
(bad)
pop
xchg
clc
js
icebp
xor
cli
or
seto
mov
mov
dec
pop
cmps
ins
or
and
pop
enter
jbe
fwait
aam
xchg
das
mov
int
inc
movs
push
push
test
cli
dec
mul
adc
cmps
dec
loopne
jmp
xor
jge
xchg
adc
xor
dec
push
ss
adc
sahf
sub
lods
cmp
mov
nop
sub
ss
loope
js
ss
xchg
lods
sub
add
dec
popa
fxch
repz
pop
aam
cld
mov
mov
sub
or
cmp
cmp
pop
mov
pop
xchg
dec
push
xor
out
add
(bad)
popf
test
pusha
xchg
in
ret
jmp
daa
std
out
and
call
add
cdq
shl
outs
fadd
xchg
fbld
inc
imul
mov
inc
fisubr
arpl
push
clc
addr16
mov
cwde
aam
(bad)
cdq
and
and
jge
pop
cld
or
sbb
or
inc
and
aad
adc
std
mov
cmp
add
je
sbb
ins
(bad)
stos
fistp
mov
aad
enter
movs
cmps
adc
shl
sahf
imul
ds
mov
js
cs
mov
lahf
adc
cmps
xchg
mov
dec
jge
push
jmp
mov
(bad)
retf
jmp
loope
xchg
mov
test
out
xor
test
inc
stos
and
mov
ds
lods
sub
imul
push
aaa
pop
out
dec
repnz
or
icebp
push
xchg
xchg
rcl
aam
int3
mov
popa
aad
(bad)
cmp
(bad)
jmp
mov
mov
dec
movs
fbstp
jbe
or
nop
out
inc
mov
cmc
shl
pop
mov
xlat
imul
lods
arpl
stos
sar
scas
cmp
mov
push
mov
call
jp
cmps
mov
loop
pop
mov
enter
or
xchg
scas
ret
fnstenv
div
inc
or
lea
mov
test
add
push
add
sub
sahf
or
cmp
jge
adc
mov
xor
cmp
lds
(bad)
in
addr16
mov
xor
jp
inc
push
fwait
movs
imul
mov
cmp
jp
jbe
repz
data16
pop
adc
jo
ds
popf
stos
add
addr16
mov
and
les
shl
sbb
sbb
push
add
dec
mov
mov
xor
mov
add
movs
std
out
in
call
movs
repz
movs
mov
mov
(bad)
jo
out
idiv
dec
in
inc
jl
adc
xchg
movs
mov
leave
mov
xchg
scas
fs
mov
hlt
dec
sub
icebp
shl
fst
ss
xor
push
popf
ins
inc
mov
sbb
(bad)
add
mov
cs
rol
ss
dec
rol
adc
scas
data16
out
pop
imul
pop
repz
aad
push
sbb
mov
cmp
add
(bad)
and
ror
ret
mov
es
(bad)
pop
cld
xlat
inc
ss
pop
test
shr
test
jmp
pop
movs
adc
push
or
jno
jl
adc
lods
mov
mov
or
clc
dec
sbb
add
jns
fnsave
add
jno
mov
enter
ret
add
and
add
(bad)
lahf
push
sub
dec
(bad)
test
sbb
push
popf
popa
cli
cmp
add
nop
repz
sbb
sbb
xchg
popf
xor
push
repnz
sub
data16
cmps
mov
xchg
mov
mov
adc
popa
das
shl
push
mov
mov
jmp
dec
or
imul
clc
pop
mov
addr16
mov
jg
mov
ins
(bad)
shl
hlt
scas
dec
iret
test
mov
loop
pop
paddsb
ja
hlt
test
xor
das
pop
cmp
scas
cmc
pusha
repnz
test
js
xor
xor
loope
test
call
cmp
movs
adc
test
xchg
jmp
aad
mov
add
adc
rcr
loopne
lds
mov
xor
mov
pop
cs
pop
fstp
fisub
aad
jnp
sub
inc
popf
mov
inc
stc
add
fsubr
popf
or
(bad)
addr16
std
(bad)
leave
fwait
inc
xor
dec
test
aas
add
xor
sub
cld
arpl
dec
push
xor
sbb
sub
pop
jno
push
or
mov
pop
aad
ins
cmp
sbb
xor
dec
stos
and
xchg
xchg
sahf
imul
je
dec
pop
and
xchg
pop
lods
cmps
icebp
mov
push
cmp
jecxz
add
cmp
add
sti
outs
aad
retf
xor
test
cmc
jmp
lock
in
stos
cld
mov
mov
cdq
sub
sub
dec
or
adc
or
(bad)
jae
pop
push
lahf
(bad)
mov
mov
push
or
(bad)
sbb
and
sbb
inc
out
icebp
pop
xchg
or
cmp
mov
call
xchg
(bad)
imul
neg
test
stos
mov
xor
adc
push
xor
mov
and
add
mov
jmp
mov
dec
or
pop
out
cmp
pop
fistp
xchg
add
in
push
enter
loop
jb
mov
stos
xor
inc
imul
jmp
xchg
push
mov
pop
jns
movs
fsubr
repnz
jge
rcr
jl
fs
repz
(bad)
sbb
test
loop
mov
mov
jmp
xor
aam
int3
ror
leave
pop
dec
dec
or
inc
(bad)
jns
pusha
sub
mov
arpl
movs
out
test
jbe
nop
mov
fldcw
or
dec
call
std
mov
jmp
fwait
add
cwde
shl
sbb
adc
xor
and
adc
gs
cdq
imul
pop
and
jg
push
test
jecxz
test
mov
inc
les
icebp
inc
enter
dec
sbb
xor
ins
mov
out
js
and
mov
sub
nop
push
ds
jmp
imul
ins
ret
shl
out
sbb
int
jmp
iret
xor
cmp
sbb
push
or
nop
scas
aaa
xchg
push
in
imul
inc
mov
out
ror
(bad)
(bad)
sub
xlat
hlt
pop
cmp
cmp
jg
test
out
aad
lods
pop
push
jnp
ds
ss
jns
mov
pop
sub
sti
repz
push
push
push
hlt
pop
call
mul
jnp
cmp
add
data16
push
loop
mov
inc
cmp
dec
inc
sar
aad
add
push
mov
jmp
mov
dec
les
push
cmc
inc
pusha
iret
jecxz
mov
sbb
(bad)
xlat
xchg
dec
(bad)
imul
cmps
jp
pusha
fimul
push
stc
ss
pusha
inc
shr
pop
js
repnz
sahf
and
inc
sbb
out
pop
inc
pop
xchg
xor
mov
and
dec
fdivr
clc
adc
push
int3
test
mov
(bad)
shl
sub
pop
pcmpgtb
add
pop
aaa
into
fwait
cmc
imul
test
nop
add
mov
movs
pop
mov
pop
jp
lea
jbe
add
aam
inc
out
cmps
fld
jl
int
xchg
mul
mov
ins
lock
inc
in
cli
and
dec
push
cld
fsubr
addr16
lods
ret
in
inc
xor
xchg
sub
pop
imul
mov
stos
pop
cmp
adc
pop
sub
sub
pop
adc
dec
xchg
jbe
data16
push
(bad)
mov
jecxz
rcr
push
rcl
mov
jb
cdq
fadd
adc
inc
mov
sub
sar
mov
inc
aam
mov
icebp
(bad)
xchg
hlt
sar
in
inc
mov
daa
inc
mov
(bad)
jmp
aam
dec
in
dec
mov
mov
dec
std
sub
sysexit
push
mov
xchg
and
push
cwde
xchg
(bad)
into
pop
cmp
and
shl
push
pushf
test
mov
cmc
push
aam
mov
es
mov
dec
xlat
inc
addr16
ins
pop
add
rol
shl
mov
or
xchg
push
stc
aad
xor
adc
repnz
call
sbb
inc
xchg
scas
lahf
push
outs
dec
or
aad
mov
sbb
push
or
ficomp
fstp
fs
lods
sub
pop
dec
add
(bad)
shr
ins
inc
pop
pusha
(bad)
push
rcl
cmp
retf
aad
dec
pop
push
lods
stos
cmps
jno
push
dec
mov
popa
sub
sahf
cmp
rcr
pop
mov
sub
test
xchg
fldenv
and
in
fsub
call
cmp
push
sub
mov
xchg
sbb
cwde
sbb
popa
repnz
sub
cmp
mov
and
int
lea
sub
in
or
mov
cmp
adc
mov
mul
sar
mov
cld
test
push
dec
dec
push
cli
stos
mov
sub
and
or
dec
repz
movs
sbb
sub
lock
outs
xor
test
mov
lahf
(bad)
shl
and
cs
jecxz
fstp
add
jae
fisubr
mov
call
mov
imul
fwait
mov
ins
hlt
push
into
aaa
in
and
lds
or
jecxz
mov
int3
adc
mov
lods
push
fisttp
mov
(bad)
mov
fwait
rcr
fmul
push
push
mov
inc
add
mov
(bad)
push
inc
mov
adc
aad
call
add
sub
cmp
add
ins
xor
and
adc
scas
mov
mov
fist
xlat
lock
inc
sahf
fisttp
push
stc
inc
mov
xor
pop
push
popf
js
test
mov
outs
jno
lock
popf
or
stos
mov
loop
add
mov
rol
sar
xor
push
test
(bad)
cmps
in
push
xchg
mov
sub
int3
jnp
mov
mov
in
inc
pop
repnz
lahf
repz
push
push
xchg
jmp
out
into
mov
data16
ins
mov
(bad)
and
retf
mov
ds
sbb
dec
push
out
ds
jns
dec
pop
dec
mov
data16
cmp
add
loop
xchg
fdiv
push
fld
stos
fs
mov
std
sti
in
or
jmp
jb
loop
pop
aad
stc
xchg
inc
sbb
stos
daa
sub
arpl
movs
jb
scas
mov
shl
push
jmp
pop
pop
and
pop
shl
cmp
mov
test
add
aas
(bad)
dec
pusha
rcl
mov
cmps
xor
mov
xchg
call
test
pop
adc
stos
mov
ret
jo
mov
and
enter
and
stos
sbb
push
inc
inc
retf
and
ins
xor
push
cmp
pop
stos
enter
in
adc
adc
cli
icebp
stos
mov
xchg
popa
arpl
xchg
push
gs
adc
retf
sub
inc
or
push
jle
and
cld
clc
cli
aad
loope
leave
push
mov
mov
jmp
sbb
leave
and
(bad)
ret
dec
sub
sub
mov
or
(bad)
or
jp
icebp
inc
xchg
ja
push
add
or
xor
loope
pop
aaa
push
xchg
inc
jbe
add
push
test
cmp
outs
je
mov
xchg
inc
arpl
fisub
sub
lods
int
pop
jo
or
aam
fmul
loope
mov
adc
pop
mov
adc
into
sub
pop
(bad)
push
push
imul
lock
adc
stos
sbb
cmp
lock
mov
pop
fs
push
call
int3
sub
or
movs
mov
push
ja
into
and
push
cmc
mov
ret
cmp
mov
cmp
(bad)
(bad)
cmp
pusha
outs
inc
cmovb
jmp
test
and
arpl
push
es
retf
in
jmp
outs
stc
repnz
adc
push
into
sub
push
xor
pushf
lea
adc
xor
shr
pop
fs
xlat
sub
xchg
add
mov
xor
cdq
inc
mov
xchg
out
mov
arpl
je
dec
retf
mov
stc
xor
xor
imul
fst
daa
es
inc
mov
hlt
inc
mov
inc
or
dec
outs
scas
ss
div
(bad)
outs
imul
inc
push
das
sub
xor
dec
mov
adc
arpl
xor
jl
neg
fdivr
into
adc
pop
jge
stos
lds
sub
lods
outs
mov
xor
jno
fisttp
push
mov
push
add
dec
pusha
or
pop
in
pusha
or
aaa
inc
ja
test
sbb
fidiv
retf
ret
push
popf
call
sub
and
mov
(bad)
int
jmp
in
je
sbb
xor
js
loopne
gs
(bad)
mov
retf
mov
pop
inc
sub
stos
cmp
xor
cmp
sbb
dec
aad
cmps
xor
mov
std
out
dec
pop
sbb
jno
mov
mov
jmp
cli
ret
mov
add
ja
mov
mov
gs
add
imul
mov
ins
or
push
pop
sub
(bad)
int
inc
mov
sbb
adc
cmp
xchg
mov
test
loopne
lods
int3
cmp
jle
add
(bad)
mov
pop
out
mov
push
jnp
add
xchg
outs
lock
pop
inc
jg
fcomi
ret
inc
sub
push
mov
jo
rol
xor
sbb
fs
and
jmp
inc
dec
sbb
pop
mov
jmp
pop
cmc
push
loopne
movs
inc
not
add
into
(bad)
sbb
jne
cmps
hlt
repnz
hlt
add
loopne
push
inc
dec
add
ficomp
shl
mov
lods
push
aam
push
test
das
or
jb
out
dec
and
push
iret
popa
in
add
(bad)
and
ja
div
cmp
dec
div
xchg
jl
ins
ficomp
dec
ror
popa
and
inc
jecxz
add
and
mov
or
mov
pop
iret
xchg
xor
jmp
aad
sbb
pop
and
jo
std
retf
mov
dec
xor
movs
fcomp
call
ins
sbb
repz
es
fstp
xor
pop
ins
nop
lea
jne
jo
fcmovnu
pop
mov
adc
adc
stos
push
stc
mov
imul
sahf
ja
push
int3
in
xchg
mov
iret
ret
sbb
sbb
sub
icebp
sbb
jmp
sbb
(bad)
sub
sub
push
and
scas
movs
aaa
(bad)
jg
or
repnz
or
hlt
mov
(bad)
fwait
out
jne
cmps
arpl
or
lea
scas
push
call
fisubr
xchg
jmp
popf
and
shl
js
popf
mov
sbb
push
rol
xlat
int3
bound
aaa
push
dec
mov
inc
out
push
mov
add
imul
dec
add
push
cmp
scas
dec
mov
call
cmp
xchg
cld
sub
fstp
push
or
and
fwait
xor
cli
or
into
fist
out
retf
dec
imul
sbb
xchg
ss
inc
ins
imul
cwde
dec
mov
mov
mov
scas
call
or
sub
cmp
retf
cmp
cmp
cli
cmp
or
jl
stc
sub
(bad)
fld
cs
pop
ins
aas
repz
xor
gs
ins
mov
push
inc
sub
ins
(bad)
mov
or
jmp
shl
pop
push
mov
je
int
nop
xor
mov
stos
mov
je
xchg
dec
movsx
outs
mov
add
js
and
popa
push
clc
inc
adc
scas
retf
cmp
jo
in
pop
in
mov
cld
mov
cmp
cmp
dec
sub
mov
sahf
jbe
push
cmps
in
clc
pop
push
(bad)
jb
push
adc
scas
cdq
xor
fsubr
leave
cli
cwde
mov
mul
leave
cmp
fcom
jl
mov
push
cld
sbb
shr
movs
pop
inc
adc
push
movs
pop
cmc
lea
sbb
sbb
(bad)
retf
adc
push
neg
inc
mov
lea
jae
gs
mov
jmp
ret
pop
add
cmps
push
enter
dec
je
mov
test
cmc
rcl
jecxz
popf
sub
cld
add
aad
mov
and
aaa
pop
sub
mov
adc
or
pop
or
fnsave
inc
mov
clc
jno
fild
enter
and
jbe
in
mov
mov
sbb
jo
fisub
imul
push
mov
sub
xchg
aad
retf
in
jecxz
not
jne
xchg
daa
loop
aad
out
in
and
mov
imul
sub
mov
scas
cdq
sub
mov
stos
cmp
mov
data16
push
ja
push
xchg
push
push
pop
(bad)
stos
sbb
js
jb
loop
cmp
call
add
or
mov
shl
inc
loopne
aaa
jmp
inc
jmp
or
mov
mov
xor
mov
dec
xor
test
mov
xchg
loope
jae
retf
retf
mov
add
ror
pop
outs
sub
leave
pop
xchg
sub
mov
mov
retf
or
mov
es
cwde
lock
movs
repz
push
dec
js
retf
xchg
lock
xchg
xchg
dec
sub
out
(bad)
(bad)
and
jmp
xchg
sub
inc
daa
popf
xlat
pop
cmc
mov
sbb
add
jne
and
fucom
out
ja
mov
clc
stc
adc
adc
movs
ret
push
call
adc
add
jge
adc
and
dec
into
push
push
mov
test
aad
scas
call
arpl
stos
shl
pop
cmp
sub
icebp
ja
stos
in
inc
ret
add
lahf
pushf
sbb
sbb
push
dec
pop
mov
and
out
cmps
sar
cmp
and
and
test
es
popa
jnp
repnz
xor
or
dec
xchg
fld
aad
fnsave
imul
stos
mov
fstp
(bad)
test
(bad)
mov
int3
push
jle
xchg
xor
sub
jge
sub
imul
add
push
mov
cmp
cld
inc
push
into
fist
adc
mov
sbb
std
push
out
xor
es
cmp
call
and
fs
mov
and
idiv
in
or
dec
dec
adc
jge
jg
or
inc
jg
lahf
push
sahf
cld
add
fdivr
adc
test
jne
jle
jle
pop
sub
not
sti
in
movs
ja
inc
cmp
cmp
mov
mov
sbb
ror
sbb
cmps
or
ja
jo
lock
outs
xchg
cmps
mov
jns
retf
arpl
mov
(bad)
aad
adc
push
mov
or
retf
lds
(bad)
sbb
fnstenv
ficomp
and
mov
rcr
ins
add
cmps
movs
(bad)
push
or
in
dec
stc
and
js
gs
call
mov
repz
ss
pop
bound
fsub
sahf
std
jno
jl
pop
mov
cdq
mov
in
inc
jge
lds
in
dec
jae
inc
loopne
rol
arpl
outs
ja
mov
movs
dec
push
punpckldq
ins
in
inc
leave
ret
pusha
lods
arpl
push
pushf
loope
test
inc
popf
pop
cmp
ins
push
in
imul
or
retf
jmp
or
(bad)
iret
sub
inc
loope
cmps
push
or
jmp
ins
xchg
clc
(bad)
mov
fsub
fadd
popa
repz
pop
rcl
or
popf
pushf
iret
push
push
cmp
and
(bad)
retf
mov
lahf
(bad)
sbb
sbb
ret
sbb
out
mov
mov
(bad)
jbe
out
cmp
pop
iret
and
ror
rcl
pop
pop
jbe
call
adc
outs
xchg
out
xor
sbb
test
push
jmp
sbb
inc
adc
lods
xchg
or
daa
outs
iret
retf
and
es
adc
xor
sbb
pop
dec
daa
cmp
dec
in
dec
inc
cmp
pop
test
ss
sub
cmps
sub
or
and
sbb
sbb
or
in
sbb
adc
arpl
or
mov
cmps
rcl
shl
mov
pop
pop
je
shr
pxor
aad
dec
pushf
adc
push
shr
sbb
cwde
clc
mov
(bad)
xor
or
shl
mov
dec
int3
mov
mov
inc
fwait
out
jge
aas
cmp
imul
(bad)
fs
adc
dec
ja
lea
and
add
or
dec
cmp
jg
jmp
push
dec
aaa
sbb
das
mov
mov
or
adc
pusha
je
fcomp
dec
jmp
pop
gs
les
cli
xchg
mov
mov
ret
mov
adc
dec
xchg
or
jnp
stos
cmova
pop
icebp
enter
xchg
mov
enter
fimul
jbe
or
sbb
mov
out
and
and
jmp
push
jmp
cld
cmps
out
cmp
bound
or
(bad)
aas
je
adc
xadd
loop
test
mov
push
outs
enter
inc
mov
and
pushf
ret
stos
dec
pop
(bad)
hlt
pop
xor
mov
ror
test
sub
call
cmp
cmc
mov
jne
fldenv
adc
add
jbe
lds
sub
mov
sub
out
cmp
jmp
push
aam
xchg
and
inc
mov
pop
mov
ret
mov
cmp
mov
add
test
icebp
push
stos
rcr
xchg
(bad)
jo
retf
daa
jno
lock
sbb
stos
jns
jno
jne
xchg
repz
push
cmc
aas
and
loope
or
dec
in
sub
and
xor
add
sbb
sub
mov
cmps
jne
or
aas
ret
bound
ror
ficom
js
lahf
lea
cmp
pop
pusha
sahf
retf
jbe
popa
nop
shr
mov
iret
js
shr
and
rcr
mov
jno
shr
fs
out
retf
push
daa
outs
push
jb
push
or
out
xlat
mov
(bad)
xchg
test
jb
shl
sub
gs
cmp
(bad)
outs
pop
lods
in
dec
xchg
inc
push
iret
lds
push
addr16
or
outs
adc
xchg
mov
idiv
sbb
scas
xor
inc
inc
ja
inc
xacquire
jb
stos
pop
scas
dec
stos
aam
retf
frstor
rcl
xchg
fsub
mov
jecxz
xor
adc
mov
out
int
in
push
lds
aaa
cwde
add
stc
add
frstor
shl
dec
mov
loopne
cli
daa
jbe
jns
enter
push
ins
iret
ins
test
mov
dec
(bad)
push
int3
leave
lahf
xor
push
(bad)
div
push
cmp
mov
or
lds
add
into
out
xor
jp
stc
cmp
and
sub
push
inc
aas
ins
ja
mov
jg
in
sub
fwait
adc
imul
xor
and
cmc
into
stos
pop
push
daa
cmps
xchg
lods
fidivr
hlt
adc
fwait
pop
ins
outs
pusha
cmp
call
aas
in
retf
sbb
mov
add
loope
xchg
cmp
in
fstp
sub
jp
mov
jne
push
jb
mov
lds
push
test
adc
pushf
inc
shr
sub
leave
push
xchg
leave
cmp
pop
int3
and
ret
(bad)
dec
icebp
out
cmp
add
int
sub
jecxz
lods
mov
ret
dec
pop
mov
pop
les
jae
ret
and
mov
jne
mov
inc
xchg
test
retf
pop
pop
push
sbb
pop
ja
aas
add
dec
gs
popa
xlat
push
mov
lock
lea
or
int3
mov
add
scas
dec
cmps
jbe
mov
mov
loopne
and
xchg
pop
scas
mov
out
out
iret
stos
sub
xor
retf
push
(bad)
int
sbb
lds
xchg
rcl
mov
or
push
xor
sbb
cmp
jbe
xchg
repz
and
idiv
xor
(bad)
outs
pusha
mov
rcr
xchg
push
jne
push
(bad)
dec
mov
aaa
fcom
adc
sub
dec
xchg
mov
repnz
xlat
dec
call
aam
pusha
sbb
adc
js
nop
test
mov
jns
ret
ror
sti
sub
mov
aad
daa
inc
sub
les
xor
xor
lock
or
pslld
sahf
dec
iret
push
das
movs
leave
pop
pop
adc
inc
lods
aam
movs
scas
sbb
gs
scas
add
cmps
leave
push
pop
sbb
sub
pop
xchg
or
and
repz
sub
pop
xor
and
xor
ss
out
call
lock
mov
test
gs
loopne
cmp
int3
adc
fcmovnu
data16
cwde
loopne
mov
in
push
jns
inc
push
arpl
popa
push
dec
jecxz
xor
stos
or
xor
gs
mov
unpckhps
in
add
ja
dec
repz
mov
inc
mov
xor
in
or
ins
outs
add
inc
mov
pop
ret
jno
shl
mov
xchg
mov
add
mov
daa
sub
ss
add
rcr
inc
shr
jmp
pushf
mov
fld
inc
mov
test
call
jae
in
add
mov
pop
inc
pop
mov
cs
sub
je
sar
ror
mov
mov
ficom
pop
adc
add
and
sti
in
xor
clc
push
lahf
ret
ja
dec
lea
push
retf
add
ficom
mov
call
adc
rcl
mov
jno
repnz
and
lahf
mov
jnp
les
cmp
stos
aas
gs
inc
push
pop
outs
fs
xlat
jns
xchg
popf
mov
cmps
lea
and
pop
or
sub
and
sbb
mov
sub
push
ret
in
cmc
jmp
xchg
xor
shl
test
sub
push
jo
and
mov
imul
out
mov
inc
mov
sub
arpl
inc
cmp
(bad)
inc
lock
push
iret
aad
or
fs
jle
sub
lock
stc
jl
dec
xchg
loop
sbb
std
cmps
inc
sub
(bad)
cmp
rol
add
xchg
scas
dec
int3
les
pop
fldenv
or
into
ror
dec
mov
rcl
ds
in
mov
pop
addr16
cmc
movs
adc
mov
sbb
inc
and
cmp
std
sub
or
push
xor
xchg
idiv
sbb
lea
sti
xchg
mov
clc
outs
lds
addr16
cmps
mov
pop
cmps
test
push
sbb
adc
addr16
inc
xchg
cmp
add
mov
sbb
jecxz
pop
not
scas
in
sbb
add
push
xchg
pop
xlat
or
ror
rcr
xchg
popf
js
ins
xchg
cdq
dec
int
push
push
xchg
sub
jns
fld
mov
dec
jle
dec
add
cld
loop
ds
loopne
(bad)
jl
mov
rcl
aas
xor
call
push
add
repnz
xchg
adc
sbb
sbb
pop
fisubr
push
pop
sahf
cld
mov
lods
push
scas
or
cmps
inc
adc
xchg
inc
gs
cmp
adc
stos
(bad)
imul
jle
ins
cmp
cmc
stos
inc
shr
cmp
lods
xchg
sar
lahf
ja
ror
ja
sub
dec
push
xchg
(bad)
sbb
add
xor
push
pop
jnp
or
push
add
mov
xor
(bad)
ja
dec
inc
dec
repz
popf
push
lds
jmp
push
gs
push
idiv
fcom
cmps
cmps
imul
shl
clc
pop
or
into
mov
mov
enter
inc
push
pop
leave
daa
vmovupd
addr16
mov
out
add
dec
in
fwait
sbb
leave
or
jg
fxch
call
(bad)
lahf
or
fldenv
scas
and
pop
fsub
pop
dec
xchg
js
clc
retf
sub
cmps
daa
stos
fbstp
inc
push
cmp
or
(bad)
mov
fstp
mov
push
stc
and
ins
popf
mov
aam
neg
movs
xor
pop
sbb
pop
pop
dec
pop
int3
aam
neg
fisttp
pop
mov
and
jle
inc
fistp
sub
shr
adc
fsub
jecxz
jno
repz
jno
es
gs
mov
jno
iret
mov
add
test
or
or
mov
test
xor
in
add
mov
add
aad
mov
leave
push
cmp
hlt
test
loop
mov
inc
mov
xor
push
out
sub
inc
jno
mov
call
sar
sbb
jbe
in
fwait
sbb
pop
mov
inc
not
outs
fistp
xor
and
data16
jl
es
inc
mov
push
pop
or
fsub
int
cmp
push
or
push
inc
dec
ss
cmp
inc
imul
jb
ja
cli
out
mov
pop
and
add
data16
mov
or
push
sbb
xchg
ret
ins
sub
or
push
in
idiv
(bad)
movs
jecxz
in
frstor
dec
dec
mov
outs
jnp
js
out
ds
test
daa
mov
xchg
sbb
mov
jl
mov
adc
pop
jne
dec
push
jmp
sahf
imul
mov
inc
icebp
cs
adc
pop
sub
int3
icebp
add
arpl
sbb
ret
push
mov
sar
iret
gs
jge
in
js
sub
xchg
jp
or
inc
xlat
cmp
lods
mov
xor
push
adc
pop
dec
add
xchg
cld
jmp
and
scas
outs
inc
inc
add
push
sar
(bad)
xor
loope
imul
nop
out
xor
lock
push
pop
sbb
dec
loopne
or
sub
cmp
outs
fmul
call
cmc
inc
and
xor
mov
jbe
retf
push
(bad)
sbb
mov
out
dec
pop
test
jge
mov
lods
loop
mov
inc
test
cmp
adc
in
test
int3
sbb
jbe
push
call
aaa
jmp
cld
or
push
xor
(bad)
mov
and
rcl
push
cmps
(bad)
mov
xor
lock
xchg
fwait
gs
sahf
enter
loope
cmovle
aaa
fidivr
jns
xchg
jne
sub
int
(bad)
push
loope
jae
clc
lock
fwait
enter
inc
and
pop
mov
sub
test
ret
mov
movs
inc
cmp
sbb
or
pop
call
call
adc
sbb
popf
mov
enter
mov
aaa
aas
inc
cmp
dec
inc
pop
cmovno
lods
pop
outs
shl
inc
mov
ficomp
cmp
repnz
dec
xlat
cli
mov
pop
rcr
mov
(bad)
sub
test
popf
jb
call
jmp
mov
cwde
daa
jp
ins
mov
aam
mov
ret
(bad)
dec
sub
xchg
jbe
xchg
sbb
fild
sub
pop
mov
fstp
add
xchg
call
push
cmp
jo
sbb
lods
xlat
repz
mov
jp
mov
sub
imul
push
popf
xchg
jns
lods
mov
out
js
stc
jno
mov
loop
dec
push
mul
add
clc
xchg
out
sub
test
xor
mov
not
cmp
push
shl
cmps
jmp
sbb
or
jno
inc
inc
lock
xor
les
in
movs
xlat
js
mov
cmp
dec
jmp
add
fadd
jae
dec
push
dec
scas
stc
fidiv
cwde
test
retf
jae
push
push
cld
mov
lods
mov
sbb
leave
rol
xor
out
xor
push
repnz
xchg
push
test
ss
es
cli
aaa
(bad)
jp
mov
test
cmp
sahf
push
push
adc
xchg
jno
jo
push
das
adc
dec
pop
je
aam
aas
out
call
scas
sub
gs
jne
adc
push
fsub
stc
ds
mov
mov
outs
pusha
mov
push
sbb
inc
(bad)
jle
pop
inc
add
pushf
nop
mov
jnp
jo
cmc
add
jge
enter
or
cmp
push
push
mov
jb
stos
push
int
xchg
gs
adc
int3
push
iret
xchg
push
xor
repnz
push
add
xor
jle
mov
mov
ja
in
sbb
sar
outs
ins
and
repnz
cmp
xchg
dec
mov
lock
dec
push
dec
lahf
jmp
cmps
mov
loopne
dec
sub
pop
addr16
inc
ret
mov
lods
push
not
(bad)
jmp
sar
xchg
arpl
jge
adc
push
fistp
leave
imul
vpunpckhwd
xchg
xchg
fimul
jmp
mov
cwde
or
mov
lahf
fisub
test
push
jbe
mov
inc
jl
setl
sbb
mov
pop
pop
adc
into
dec
cdq
fld
mov
jne
push
or
jp
inc
rcl
jl
call
outs
ins
shl
sbb
xchg
and
and
ror
pop
adc
xchg
pop
xor
(bad)
dec
xchg
pop
stos
mov
lahf
xchg
lods
jbe
add
mov
push
test
leave
mov
and
(bad)
aaa
sub
scas
cmp
(bad)
add
add
mov
mov
(bad)
sbb
mov
jne
icebp
cmp
std
in
in
cld
jle
or
(bad)
dec
cmp
jecxz
pop
pop
push
push
cmp
mov
pop
push
loopne
js
push
mov
lahf
ss
sbb
imul
cmps
push
mov
xchg
fstp
fistp
mov
add
add
aam
xchg
fdiv
jle
mov
in
xchg
call
js
jle
jne
outs
jb
and
out
out
push
push
adc
sar
icebp
aas
(bad)
jmp
and
mov
mov
fsub
pop
ss
retf
fsubr
stos
sahf
(bad)
(bad)
loopne
in
xor
das
ds
outs
push
pusha
push
and
movs
std
push
mov
push
outs
ins
sti
jnp
sbb
adc
ins
repz
adc
sbb
imul
cmp
or
test
mov
and
mov
jg
jbe
push
or
ror
movs
jge
sbb
lods
lea
mov
outs
cs
inc
imul
jmp
movs
mov
pop
cmp
dec
out
fdivr
rcr
sub
iret
(bad)
cmp
pusha
xchg
dec
adc
stos
xor
xor
dec
cmps
retf
test
aas
inc
inc
pop
jno
lods
cs
repz
lods
aaa
xchg
cmp
jnp
xchg
(bad)
xchg
fst
imul
aad
xor
mov
sub
jno
dec
movs
xchg
test
inc
pusha
lods
xchg
jle
jge
or
xor
pushf
or
pushf
fsub
sub
mov
and
aaa
sbb
cmps
popf
add
lea
ror
out
cmp
xchg
pop
and
add
xor
cmp
sub
mov
movs
not
fstp
(bad)
iret
lock
dec
bound
je
fisubr
out
std
inc
js
dec
ror
mov
or
ror
(bad)
test
imul
repnz
jle
xchg
jmp
or
pop
xrstor
xor
push
mov
loope
jae
lahf
call
xor
movs
mov
pop
inc
dec
xchg
aaa
bound
pop
add
(bad)
mov
mov
in
js
cmps
push
jle
out
out
retf
retf
sub
nop
and
mov
icebp
or
stos
mov
fst
mov
or
fst
fwait
cmp
jmp
pop
retf
inc
int
fisub
xlat
inc
imul
and
lock
out
fsubr
rcl
loope
in
dec
out
xor
cmps
mov
mov
xchg
lock
jge
outs
sub
mov
inc
mov
mov
mov
inc
shr
ds
jg
movs
sahf
mov
sbb
sub
rcr
inc
sbb
mov
pop
jmp
div
out
inc
aam
aam
icebp
pusha
or
jne
in
mov
ret
stc
leave
push
cmp
mov
ins
cmps
movs
jp
call
pop
inc
scas
sub
stos
mov
retf
stc
push
popa
jmp
cmp
pop
ficomp
and
fmul
ja
sbb
lea
or
or
clc
lds
xlat
(bad)
(bad)
mov
mov
mov
sbb
jns
outs
push
retf
mov
pop
ret
adc
(bad)
(bad)
cwde
rol
mov
mov
jecxz
je
pop
jp
push
(bad)
(bad)
sub
dec
pop
jg
pop
retf
sbb
ret
stc
push
repz
add
mov
jge
add
jge
fdivrp
xchg
pop
dec
loop
stos
(bad)
call
ds
inc
scas
xchg
jl
out
xchg
mov
cmp
imul
ficom
mov
outs
and
out
stos
xchg
xor
out
nop
xchg
mov
add
(bad)
cli
add
sub
loope
lock
(bad)
mul
mov
sub
sub
cmps
cwde
pop
add
movs
inc
sub
push
aam
xor
aas
retw
aas
cmp
pop
aam
jno
inc
jmp
add
pop
(bad)
pop
adc
fs
push
mov
pop
(bad)
and
daa
inc
xchg
cmp
loop
rcl
lods
shl
mov
out
popf
jecxz
(bad)
out
mov
mov
and
sub
popf
int3
call
sub
mov
jl
or
adc
lods
lods
lock
scas
add
outs
call
stc
xchg
rcr
mov
bound
jne
inc
jne
sbb
sar
or
mov
xchg
dec
sub
sbb
out
xchg
sbb
rcl
pop
adc
mov
jmp
push
jle
mov
xchg
xchg
sbb
jmp
mov
push
xlat
adc
pop
adc
xor
cdq
adc
(bad)
bound
jnp
adc
retf
push
pop
jne
cwde
pushf
(bad)
shl
les
js
dec
daa
into
jge
fimul
pop
push
sbb
mov
leave
mov
popf
pop
sub
push
and
sub
push
push
jecxz
mov
jo
call
jnp
rcr
sub
xchg
jge
jno
xor
jmp
out
or
xor
out
xor
mov
inc
jp
lds
loope
in
out
cvttps2pi
mov
das
pop
aad
adc
and
inc
pop
xor
xchg
mov
jp
out
popa
ja
or
enter
mov
cmps
popf
xchg
adc
and
pushf
ror
(bad)
repz
arpl
jo
add
or
ins
int
and
in
sbb
pop
mov
and
ret
imul
fldenv
retf
inc
inc
inc
pop
sbb
rol
imul
sub
dec
add
xor
rol
ret
adc
les
hlt
aad
jo
or
dec
je
dec
jne
aam
inc
retf
mov
cmp
adc
xchg
movs
xchg
in
in
aad
cmc
add
sub
mov
inc
dec
mov
stc
inc
aas
push
mov
movs
add
lea
jg
cmp
test
mov
outs
mov
leave
ss
cmp
adc
mov
dec
jb
dec
(bad)
jmp
dec
lods
arpl
xchg
add
add
repnz
mov
cmps
scas
inc
sar
jge
(bad)
adc
jmp
gs
sti
test
jge
lea
mov
inc
xchg
adc
or
scas
sbb
fiadd
or
cwde
mov
mov
ror
mov
add
aam
sbb
bnd
xor
and
imul
test
arpl
dec
out
ss
out
(bad)
mov
xor
jae
push
call
dec
icebp
fstp
mov
pop
sbb
clc
mov
je
lods
out
fwait
adc
movs
leave
aas
aaa
cmp
inc
div
imul
pop
inc
mov
inc
in
mov
jne
push
cmps
ins
mov
pop
mov
cdq
cs
fadd
jle
(bad)
ror
scas
mov
jbe
xor
pop
push
div
add
scas
out
rol
sbb
inc
add
movs
sub
push
and
ds
sti
ss
mov
sbb
add
leave
fs
js
jp
fwait
or
int3
aad
jp
jge
sbb
add
cmp
sub
ret
jl
mov
jg
in
mov
int3
or
cs
jne
cmp
mov
push
fucomp
pop
mov
mov
call
jg
pop
in
xchg
aam
push
cs
cmp
push
mov
js
stc
dec
inc
xor
stos
mov
xor
fisub
or
dec
hlt
jge
mov
xchg
cmc
push
push
push
mov
les
fsub
in
imul
into
push
jns
xchg
jg
aaa
bound
repnz
or
jmp
mov
jg
jp
shl
popf
mov
or
xchg
ret
es
push
sub
pop
repz
cmp
enter
loop
and
adc
inc
cs
jl
xchg
icebp
test
pop
shl
jmp
cld
mov
lods
cwde
and
pop
fstp
xor
(bad)
mov
rcr
inc
mov
xor
bound
sti
inc
jmp
cmp
movs
inc
ja
mov
xor
sub
inc
arpl
cmp
xchg
gs
aas
cmp
pop
(bad)
xchg
and
je
out
aas
loop
not
enter
pusha
retf
jmp
aad
cs
sbb
sbb
jg
daa
rol
jp
jmp
add
jo
mov
lahf
or
leave
into
sub
add
ret
or
hlt
fucomip
js
shl
jbe
and
ror
popf
test
out
test
stos
sbb
push
and
dec
mov
ins
test
rcr
nop
outs
sbb
popa
push
in
mov
xlat
imul
jecxz
test
xor
rol
xchg
sbb
pop
adc
mov
lds
pop
push
push
jno
jne
sbb
dec
in
dec
into
add
mov
mov
jge
mov
mov
sar
dec
sbb
data16
fsubr
fidiv
push
xchg
jge
cli
sbb
ret
mov
push
and
fs
arpl
scas
pusha
shl
je
mov
loope
xlat
int
dec
daa
mov
cmp
fldenv
hlt
imul
adc
xchg
ins
sub
test
jne
imul
mov
push
repz
jne
bound
push
outs
into
loopne
retf
cwde
les
push
das
shl
mov
call
sub
mov
adc
add
sub
mov
call
add
xchg
clc
pop
shl
inc
ja
loop
fstp
xchg
icebp
push
in
jmp
or
pop
push
fst
and
or
inc
pop
cmp
mov
jmp
pop
add
shr
fild
push
(bad)
jne
and
adc
mov
fwait
push
stos
or
enter
test
(bad)
out
xor
popa
xor
stos
and
pop
dec
in
push
cmp
sub
(bad)
cdq
push
(bad)
push
jo
bound
movs
sub
bound
shl
mov
daa
in
inc
scas
aad
imul
cmp
cmc
sbb
jae
push
and
repnz
shl
pop
cmp
mov
or
jae
push
and
add
mov
mov
xchg
xchg
data16
sub
push
dec
sbb
repnz
jg
ja
retf
xchg
mov
push
adc
sub
push
cmp
inc
dec
ins
or
bound
pop
gs
xchg
ret
call
cld
icebp
mov
(bad)
call
loopne
inc
aam
fisttp
aaa
xor
pop
jnp
xor
daa
mov
or
mov
and
repnz
inc
cld
add
xchg
neg
mov
enter
adc
dec
in
mov
(bad)
or
push
leave
push
lods
mov
(bad)
not
sub
push
sbb
fisttp
icebp
mov
clc
popa
pop
push
xchg
jle
fcmovu
outs
and
imul
sar
fdivr
mov
(bad)
stos
xor
sbb
xchg
pop
cmp
sbb
ss
add
mov
mov
add
imul
pop
lahf
les
ret
pop
fs
retf
leave
imul
push
mov
mov
call
test
push
ins
xchg
adc
stc
inc
stos
mov
pop
mov
ret
mov
scas
xchg
mov
mov
shl
inc
mov
repz
mov
int
jmp
push
jl
loope
out
and
mov
cwde
clc
sub
inc
xchg
iret
iret
xchg
scas
sbb
adc
jg
shl
jl
jae
(bad)
sahf
jle
data16
adc
mov
mov
sub
popf
mov
pop
clc
cdq
cmp
daa
adc
in
xchg
scas
rcr
mov
mov
push
scas
cmp
inc
xor
inc
stos
push
xor
xor
aad
fcom
pushf
mov
jp
adc
mov
mov
(bad)
cli
pop
pop
jg
cmps
fmul
jmp
cmp
sub
dec
ja
jmp
test
pop
add
das
xor
push
movs
cld
sar
or
loop
pop
repz
xor
sbb
or
xor
add
jle
into
sub
push
into
pop
xchg
test
ins
aam
(bad)
out
mov
add
dec
or
xchg
popf
retf
cmp
loope
test
fsubp
jae
dec
jns
scas
mov
mov
stos
int3
int
and
lea
sub
mov
dec
jmp
mov
dec
pop
stc
inc
ret
inc
push
adc
mov
mov
stc
pop
dec
(bad)
cld
xor
test
imul
test
jle
jmp
mov
div
push
adc
loopne
push
imul
inc
xor
les
or
pop
xchg
xor
(bad)
bnd
cmp
mul
stos
stc
mov
jno
scas
adc
mov
call
xor
lahf
adc
jl
push
mov
mov
pop
inc
xchg
adc
enter
pop
push
mov
pusha
pop
mov
inc
xchg
mov
shl
fnstenv
sub
jb
fwait
in
iret
pop
mov
and
pop
mov
and
mov
cmp
(bad)
je
icebp
iret
lea
jl
jns
(bad)
mov
dec
mov
repnz
xchg
dec
fstp
adc
jmp
(bad)
cmp
sub
xlat
pop
or
push
mov
dec
dec
das
cmp
sar
pop
aad
sub
cmp
rcr
or
sub
jle
arpl
jle
ficom
stos
(bad)
pop
mov
adc
sbb
lds
nop
sbb
dec
xchg
jp
push
fst
bound
adc
inc
push
test
dec
jmp
jnp
and
mov
retf
inc
(bad)
sbb
out
cmp
dec
sub
pushf
jle
inc
xchg
retf
or
sub
popa
(bad)
sbb
mov
inc
or
popf
mov
mov
(bad)
mov
in
and
in
push
bound
or
and
ins
loope
sbb
std
pop
push
mov
call
xlat
test
movs
mov
pop
push
ror
aas
fcom
in
sub
mov
xchg
push
arpl
or
in
sti
jne
test
push
(bad)
xor
inc
cmps
jnp
inc
pushf
push
dec
dec
or
out
test
inc
mov
cmps
cdq
loope
sub
test
mov
sub
xchg
sub
pushf
fmul
mov
mov
inc
ret
sub
push
movs
in
jp
mov
stos
xor
jge
inc
ja
and
mov
mov
popa
out
mov
sbb
sbb
push
(bad)
xchg
add
inc
cmp
mov
cmp
call
sbb
fisub
scas
push
sub
mov
push
les
push
aas
jnp
pop
add
push
xor
add
pop
xchg
shr
cmp
mov
mov
mov
inc
js
rcl
movs
mov
out
add
out
mov
xor
adc
shr
cmps
lods
push
cmp
popa
retf
aaa
into
test
pslld
push
(bad)
sti
jnp
fiadd
push
inc
je
pop
gs
jnp
pop
leave
mov
sbb
cdq
imul
(bad)
cmp
jg
out
jo
in
fisub
outs
fistp
ret
leave
add
in
ins
xchg
sub
sub
push
fcmovb
cmp
add
movs
cld
jnp
lods
sbb
xchg
mov
in
push
out
stos
mov
pop
fwait
mov
mov
stos
mov
mov
out
(bad)
and
(bad)
out
and
ins
cmp
mov
lock
xor
ins
mov
pop
sbb
out
aaa
mov
movs
pop
mov
aam
dec
cmp
jo
xchg
push
cmp
cmp
mov
jle
mov
popf
mov
pop
loope
sahf
pop
adc
push
cmps
shl
mov
dec
(bad)
in
cld
mov
icebp
push
ins
shl
jge
daa
out
pop
addr16
mov
mov
ficomp
aad
cli
pop
pop
lea
jmp
ins
jae
dec
retf
shr
cmps
xchg
cwde
mov
lahf
(bad)
push
es
sbb
adc
mov
bound
retf
inc
push
call
sbb
adc
push
jl
xor
jo
add
aaa
xchg
fisttp
cwde
sbb
jge
xchg
lds
clc
sub
scas
das
aas
in
repnz
hlt
std
je
mov
or
add
js
stos
fbld
or
retf
push
cs
cmp
in
xchg
js
sbb
push
not
pop
and
jmp
int3
cmovl
or
icebp
mov
scas
jmp
xor
out
xlat
adc
cdq
jbe
push
mov
adc
cmps
or
outs
pusha
adc
arpl
mov
xchg
stos
adc
ja
js
and
fisttp
int3
bound
lods
inc
ins
lods
inc
mov
fadd
loop
sti
xchg
push
pop
mov
imul
leave
add
lahf
sbb
out
stc
push
inc
stc
shl
dec
and
ror
mov
dec
in
push
xchg
jbe
ins
out
push
rol
mov
dec
inc
fnstenv
push
and
stos
jns
outs
push
sbb
push
dec
xor
push
xor
ins
lods
mov
mov
push
dec
jo
adc
xor
cmps
(bad)
dec
dec
lods
push
xchg
mov
(bad)
or
jecxz
outs
sbb
in
neg
fwait
test
or
nop/reserved
xor
pop
and
out
clc
call
xchg
mov
pop
xchg
pop
rcr
icebp
pop
xchg
cdq
loope
adc
adc
cmp
mov
jnp
inc
pop
stos
(bad)
dec
mul
dec
mov
cmp
pop
clc
mov
(bad)
xchg
ins
jp
xchg
loope
pop
rcr
sub
xlat
movs
pop
adc
mov
outs
pop
pop
sub
or
inc
mov
dec
repnz
jp
ins
jo
cmp
jno
lds
call
retf
xchg
stos
mov
jns
fidiv
cdq
jmp
leave
mov
xchg
push
sbb
jo
lds
fisttp
jp
sahf
sub
push
push
xor
pop
sbb
jns
add
or
cmp
mov
sub
outs
inc
fst
or
push
dec
lea
lock
dec
sbb
xchg
repz
xchg
pop
das
pop
in
jge
mov
push
mov
cmp
inc
dec
icebp
xchg
mov
jae
sub
movs
mov
aas
rcl
jae
fdiv
and
dec
add
in
or
pop
sbb
aaa
push
js
in
xchg
lea
xchg
push
sahf
push
jmp
sub
jmp
jmp
loop
ffreep
cs
jl
push
jle
sub
pushw
push
mov
(bad)
and
(bad)
fistp
sub
lods
mov
loop
xor
sub
jp
ret
stc
mov
(bad)
jmp
pop
inc
enter
cmp
das
jae
jle
stc
scas
add
stc
xor
in
movs
xchg
sub
sti
sub
or
icebp
retf
shl
aad
adc
dec
fld
cmp
push
xchg
dec
movs
adc
aam
pusha
ja
jmp
sbb
add
in
or
mov
mov
lock
ja
inc
stos
cli
sti
fistp
mov
add
cmps
adc
jle
mov
jbe
and
lock
pop
cmp
inc
pusha
imul
pop
mov
add
das
mov
jl
jg
mov
js
dec
dec
cmp
arpl
adc
mov
mov
and
sbb
lahf
sub
(bad)
cmp
data16
sbb
retf
imul
fcomp
mov
adc
stos
in
mov
ins
in
cli
ins
pop
dec
arpl
jb
sbb
mov
mov
and
(bad)
leave
pop
and
ficomp
in
add
stos
ins
mov
cmp
mov
adc
sti
jg
addr16
push
pop
loope
and
xor
cdq
pop
out
or
jae
inc
push
jb
adc
pop
in
sar
cli
inc
std
dec
mov
and
call
jmp
pop
dec
addr16
jb
xchg
push
or
pop
sbb
fisttp
ret
ret
lahf
movs
mov
mov
pop
not
shr
jl
sub
out
xor
cli
adc
mov
xchg
xor
test
jg
sub
pop
xor
fld
pop
xor
neg
sub
pop
lahf
shl
stc
or
pop
and
jne
ret
jmp
jle
ret
inc
fs
sub
ja
in
call
mov
jmp
test
mov
ds
pop
add
scas
leave
dec
rcr
dec
cdq
dec
rcl
inc
inc
mov
push
fisttp
jns
mov
pushf
data16
sbb
out
dec
std
or
pop
js
lods
xlat
adc
mov
cmp
push
jmp
out
and
call
jno
mov
stos
push
mul
cmc
inc
arpl
pop
push
xor
and
fild
pop
fwait
or
dec
inc
dec
inc
push
sub
sub
test
xchg
adc
int
(bad)
adc
dec
or
aaa
mov
dec
clc
adc
(bad)
(bad)
mov
ret
or
imul
sub
repz
movs
mov
clc
mov
mov
data16
sub
mov
inc
cmp
or
into
icebp
cmp
push
(bad)
cmp
pop
mov
test
dec
jb
cld
dec
and
mov
mov
mov
xchg
sahf
je
js
das
ss
pushf
jns
lods
inc
pop
inc
arpl
xor
call
popf
xlat
dec
pop
stos
adc
in
fsubr
mov
ret
lods
mov
ja
push
mov
retf
mov
stos
scas
and
nop
inc
pop
cli
(bad)
dec
sub
pavgb
push
dec
je
dec
sbb
cmp
or
stos
sbb
imul
sar
das
fidiv
(bad)
inc
sub
test
int3
sbb
(bad)
mov
sub
outs
sub
iret
lods
sahf
mov
scas
aad
add
test
push
daa
outs
or
or
je
add
cmp
jae
and
out
push
xchg
mov
into
xchg
sub
mov
repz
jno
inc
aam
mov
sub
cmps
mov
mov
mov
mov
fsub
cmp
or
pop
dec
pop
test
sar
adc
ins
mov
or
push
xchg
gs
cmps
cld
mov
mov
mov
call
test
scas
imul
adc
cmp
push
push
push
add
mov
sub
jns
mov
cmps
dec
add
jg
idiv
add
cli
or
pushf
out
or
xor
mov
retf
sbb
mov
repz
sbb
add
sbb
mov
and
daa
jmp
ins
jecxz
sbb
push
popf
sub
ror
cmp
out
cmp
mov
mov
inc
jp
hlt
adc
jae
add
arpl
movs
hlt
aas
pusha
ja
inc
dec
loop
inc
popa
fmul
sbb
pushf
ja
push
mov
inc
adc
out
mov
or
lods
push
test
daa
jmp
push
and
ins
mov
xchg
push
(bad)
and
mov
sub
mov
outs
movs
(bad)
jo
imul
dec
mov
sub
(bad)
popa
inc
lods
jns
ficomp
push
add
jnp
mov
ja
shl
dec
sub
fimul
iret
push
int
stos
ror
test
mov
add
add
mov
imul
jmp
js
mov
jle
mov
test
outs
pusha
sub
shl
fwait
dec
jle
mov
in
ja
test
in
shr
std
mov
xchg
(bad)
std
xor
push
xor
mov
mov
pop
out
or
fadd
cmp
call
int3
jae
movs
stc
mov
jp
xchg
in
outs
fdivr
mov
cmp
int3
adc
or
cmps
clc
cwde
jmp
push
mov
clc
jp
call
mov
popa
sahf
add
scas
mov
loope
inc
pand
loopne
aas
outs
xor
fisubr
ror
in
xlat
scas
mov
sub
fimul
sub
sbb
cmps
into
call
sub
inc
ret
push
enter
rcl
push
cwde
add
mov
aaa
add
mov
aad
dec
test
add
lods
sub
fdivr
mov
ror
stos
jg
mov
shl
xchg
loopne
and
xor
or
lods
call
adc
ret
fs
ret
mov
repz
jp
(bad)
mov
adc
cmc
push
(bad)
cli
cmps
out
jmp
xchg
jl
mov
(bad)
iret
mov
and
pusha
scas
xchg
or
mov
ins
ds
xor
sub
and
aam
xor
inc
pop
ds
ins
add
(bad)
out
pop
hlt
out
push
into
stos
jae
sub
sbb
mov
mov
(bad)
aas
cmp
cmps
push
mov
les
jo
imul
popa
repnz
pop
outs
push
out
(bad)
(bad)
(bad)
mov
test
leave
mul
cld
mov
xor
movs
jle
mov
push
cwde
out
sbb
xor
push
rcl
jp
daa
popa
out
adc
cmp
das
add
fdivr
sub
ins
inc
(bad)
push
iret
fstp
out
lods
push
sbb
fucomi
xor
jnp
jmp
enter
sti
adc
stos
popf
inc
dec
xchg
repnz
(bad)
in
fmul
inc
fbstp
sbb
outs
xor
and
pop
stos
out
push
or
imul
xchg
mov
shl
adc
and
and
pop
and
ficom
clc
add
or
cdq
ds
cmps
test
jl
jo
jl
dec
and
sub
ins
adc
lea
lds
ror
ds
mov
jnp
stc
pop
sub
fwait
mov
fcmovnb
into
push
scas
add
sahf
push
inc
jno
jns
cli
sub
mov
js
outs
test
test
cmp
(bad)
dec
(bad)
imul
retf
scas
inc
je
xchg
dec
fnsave
mov
dec
sub
(bad)
out
jmp
rcr
adc
sbb
mov
or
in
xor
inc
jle
mov
mov
es
or
dec
or
adc
js
shr
out
xlat
cmp
test
imul
out
gs
inc
jne
xchg
jmp
mov
mov
ret
sahf
xor
shl
in
mov
aaa
jb
push
cs
ret
clc
adc
push
cmp
cmc
jb
aad
lods
and
and
pop
adc
xor
in
adc
pop
in
xchg
mov
push
mov
ffreep
adc
sti
fist
sbb
adc
out
ja
inc
loop
shl
inc
jbe
test
in
(bad)
mov
(bad)
sbb
sti
(bad)
push
push
jb
aam
jmp
into
cmp
pop
add
dec
sub
cmp
shl
dec
jne
imul
and
movs
popf
or
push
and
and
inc
cli
cwde
fsubr
loope
dec
fdiv
test
xchg
leave
and
pop
das
push
sbb
and
push
sbb
add
cmc
sar
shr
enter
gs
data16
in
test
js
xchg
or
pop
dec
out
add
jns
loop
dec
ficomp
out
js
xchg
jne
aas
lods
out
add
mov
pop
mov
cmps
dec
out
pop
hlt
mov
push
sbb
inc
bound
cmp
or
pop
mov
icebp
pop
xor
mov
cld
call
and
jl
pop
or
adc
inc
(bad)
cmp
cmp
aad
jge
inc
add
and
aaa
add
fwait
mov
add
xchg
xor
xor
mov
cmp
lock
push
movs
inc
lea
inc
iret
imul
mov
jns
loope
aaa
ret
xor
inc
dec
test
stos
adc
mov
and
and
xor
jb
ja
loop
cmp
je
push
push
scas
xor
aaa
movhps
loope
push
pop
loopne
mov
and
shl
add
xchg
mov
mov
ja
lods
push
mov
fdiv
mov
push
mov
popa
das
std
jo
adc
mov
jns
ins
fstp
push
data16
mov
xchg
and
adc
jle
mov
cmp
and
aas
jbe
jmp
adc
push
inc
das
pop
xor
mov
dec
xchg
lods
push
cmps
(bad)
test
sbb
arpl
stc
movs
xchg
aas
xor
and
ds
nop
in
ret
rcr
cmp
add
div
les
in
ins
std
clc
mov
push
inc
(bad)
(bad)
lock
(bad)
xchg
xchg
adc
data16
je
cs
clc
fistp
(bad)
and
cmp
xchg
les
mov
es
pushf
out
fidivr
dec
pop
adc
fisubr
imul
jbe
out
std
mov
scas
adc
sub
repnz
loop
inc
lahf
cld
push
aas
cwde
pusha
adc
fwait
pop
mov
push
push
push
gs
push
cld
pop
push
push
xor
sub
push
ja
out
ret
icebp
repz
sbb
pop
aas
ja
or
loop
lods
jb
mov
xchg
fnstsw
mov
lods
aam
(bad)
imul
mov
(bad)
jl
div
mov
icebp
ret
aam
sub
sub
ins
pop
je
mov
sub
mov
stos
cmp
pop
dec
stc
call
test
gs
test
ds
pop
jne
adc
ss
mov
add
frstor
push
ret
iret
out
adc
es
and
add
mov
cmps
stos
jo
dec
test
cmp
lods
sti
(bad)
test
(bad)
mov
xor
movs
fmul
popa
arpl
dec
ret
ins
fidiv
lods
lock
or
inc
jnp
mov
fnstsw
cmp
push
ror
push
sbb
jmp
loope
xor
fsubr
bswap
cmp
lods
mov
jp
and
inc
mov
sbb
xor
jb
rcl
jp
pop
daa
pop
daa
fisub
aad
jl
stc
das
cld
mov
pop
cmc
ins
push
and
inc
adc
scas
xchg
inc
fiadd
aas
lahf
dec
inc
shl
and
lahf
adc
add
lahf
in
adc
pop
dec
and
imul
retf
cmp
fst
retf
sub
push
and
jne
lea
add
and
(bad)
out
add
outs
enter
frstor
add
ins
mov
xchg
inc
call
pop
rcl
add
pop
add
mov
mov
push
mov
mov
test
cmp
scas
adc
fist
add
das
stos
cmp
mov
(bad)
fsubrp
ja
js
ss
ret
pop
ret
jne
retf
data16
jge
clc
xchg
mov
sbb
sub
stos
and
cdq
test
cwde
push
cwde
ror
scas
pusha
outs
jno
push
mov
xchg
inc
call
(bad)
add
loop
mov
test
rcr
in
and
inc
nop
test
fbld
and
add
(bad)
pop
push
mov
scas
mov
mov
sbb
xchg
and
ja
jle
les
and
xor
cmc
out
sub
mov
shl
mov
ds
inc
(bad)
mov
cmp
jp
xor
inc
dec
push
stos
xor
js
pop
fld
arpl
in
rcr
inc
add
or
out
retf
and
in
jge
push
aad
mov
sar
ins
inc
cmp
mov
adc
sbb
cmps
jge
or
mov
mov
fcom
nop
inc
je
test
shl
and
jb
or
jecxz
(bad)
cld
push
adc
adc
or
in
sar
xchg
sbb
cmp
in
cmps
rcl
in
(bad)
cmp
ja
test
popa
repnz
aaa
out
cmp
retf
sahf
out
sbb
mov
xor
jb
movs
into
stos
xor
dec
lahf
leave
dec
fiadd
adc
pushf
xchg
imul
push
fs
jb
call
mov
std
fsub
int3
aaa
repz
inc
or
adc
fistp
es
dec
js
push
push
or
jae
cdq
and
imul
jmp
inc
out
repz
pop
or
loope
mov
pop
call
sub
cmps
push
push
lea
xor
mov
bound
cmps
shl
mov
pusha
mov
cmp
mov
int
pop
cld
mul
xchg
sbb
into
das
mov
stos
sbb
imul
ret
xor
xor
in
daa
jne
aas
push
mov
adc
fild
xlat
mov
in
jne
cs
movs
mov
pop
setbe
(bad)
jns
push
out
out
lea
xlat
mov
ins
in
mov
add
jl
clc
aad
xchg
out
imul
jmp
into
sub
mov
push
xor
les
cmp
dec
mov
mov
mov
cmp
jo
mov
pop
loope
jb
adc
ja
push
out
sbb
loop
enter
aad
lds
jecxz
loopne
mov
imul
scas
bound
and
mov
pop
popa
add
movs
cdq
inc
stos
push
xchg
sub
test
test
retf
repnz
ds
cmc
or
jmp
fisub
pop
dec
addr16
out
leave
(bad)
bound
ja
dec
bound
imul
mov
pop
fyl2x
pop
call
fstp
fisubr
fmul
(bad)
mov
or
inc
inc
or
jge
push
call
mov
jmp
jb
mov
lea
jnp
fcmovu
xor
sub
into
clc
call
js
mov
dec
out
mov
ins
mov
dec
inc
inc
add
(bad)
(bad)
hlt
push
ins
inc
xchg
mov
xlat
clc
dec
stc
pop
mov
dec
das
and
scas
dec
mov
mov
sub
(bad)
mov
imul
pop
cdq
jbe
add
or
xchg
mov
jmp
mov
int3
es
add
mov
or
sub
adc
push
push
fld
mov
stc
inc
push
(bad)
iret
stos
rcr
ins
enter
cmp
lock
leave
das
retf
mov
mov
inc
mov
push
or
fsub
lahf
lock
test
shr
push
fst
leave
inc
jae
pop
mov
repnz
ja
stos
mov
bound
cli
dec
mov
test
retf
inc
inc
jp
test
clc
repz
(bad)
fisttp
les
fiadd
outs
push
sti
call
sti
iret
cld
fisub
or
push
push
mov
jbe
sbb
jge
adc
pushf
stos
shl
out
in
dec
mov
jecxz
push
add
inc
sbb
neg
and
and
pextrw
xchg
and
shl
es
adc
mov
loop
cmps
pop
shr
rcl
jg
cs
add
mov
dec
popa
adc
stos
jb
push
gs
fidiv
push
mov
mov
mov
int
hlt
jno
nop
sub
dec
fisubr
fmul
sub
mov
shl
mov
out
in
test
out
stos
and
das
sbb
scas
add
outs
sbb
mov
rcl
mov
in
xor
mov
or
lods
sub
sbb
xchg
xchg
jge
mov
cdq
popa
ja
sti
mov
xchg
cmp
shl
int
adc
mul
pop
mov
addr16
(bad)
sbb
pop
cmp
out
ja
loopne
jge
leave
push
jg
xchg
dec
ret
mov
rcr
jnp
repz
push
and
pop
jo
(bad)
ds
in
xchg
mov
fstp
js
je
cld
les
(bad)
call
int
daa
test
dec
push
mov
test
aaa
mov
scas
mov
or
(bad)
push
cli
xlat
sub
push
or
xor
sbb
pop
ins
and
inc
sbb
lods
inc
repnz
aas
pop
inc
or
dec
shl
loope
mov
stos
sub
lahf
mov
push
sub
sahf
add
xchg
inc
test
jae
rcr
jg
call
ficomp
sbb
push
dec
or
xor
adc
xor
xor
xor
retf
(bad)
sub
xchg
jp
imul
arpl
ds
and
xor
mov
adc
int3
cmp
adc
push
loop
call
aas
ds
sbb
mov
call
mov
jmp
jg
xor
fiadd
mov
cli
ret
test
sub
xor
not
lock
mov
adc
mov
inc
fprem1
cmc
div
pop
push
cmp
call
test
mov
sbb
std
inc
mov
imul
cdq
loop
add
pusha
(bad)
(bad)
inc
fisttp
rol
test
pop
cmp
mov
mov
dec
loop
mov
shl
arpl
cmp
mov
inc
adc
mov
dec
ret
aas
jl
adc
rol
sub
xchg
cwde
fwait
pop
jmp
dec
es
(bad)
cmp
dec
ss
sbb
and
cmp
jnp
cs
mov
lods
cdq
dec
out
clc
mov
or
push
mov
stos
adc
push
je
push
iret
stos
mov
cwde
(bad)
sub
aad
movs
je
and
push
nop
(bad)
and
mov
add
xchg
lahf
push
cmp
ret
fcmovu
jo
in
inc
adc
je
out
xor
std
cmc
popa
stos
cmp
mov
xor
sub
mov
fwait
mov
fcomp
mov
pop
mov
and
add
or
xchg
lahf
cmps
aam
(bad)
jle
mov
jecxz
mov
sub
shl
ins
add
into
adc
push
pop
xchg
in
jb
or
test
test
pop
mov
popa
push
push
push
or
cs
xor
int3
stos
in
test
xor
aam
pop
adc
popf
jo
bound
pop
ds
inc
stos
xchg
sar
xor
mov
dec
add
xchg
cmp
sbb
das
push
sbb
mov
push
pusha
(bad)
lahf
mov
fwait
cmp
scas
sbb
(bad)
sub
xchg
mov
mov
movs
xchg
mov
pop
xor
mov
pop
leave
xor
mov
mov
(bad)
inc
xlat
mov
popf
inc
mov
inc
lock
xor
pop
scas
or
xor
cmp
sbb
dec
pop
data16
pop
ret
movlhps
inc
jle
mov
xchg
aam
inc
mov
sbb
mov
cmp
shl
mov
gs
xchg
xor
mov
cld
aam
stos
dec
adc
pop
mov
rcl
jbe
sbb
jg
and
push
pop
jp
xchg
outs
in
pop
mov
push
jne
nop
sti
xor
mov
hlt
push
int
cmp
xchg
push
ret
sbb
call
imul
inc
sub
sbb
inc
popf
outs
jnp
out
xchg
push
fidiv
mov
cli
leave
xor
pop
lahf
xor
imul
push
in
sbb
cmp
fwait
mov
(bad)
adc
inc
adc
fisttp
nop
aaa
sub
push
pushf
imul
inc
and
xor
adc
fwait
mov
outs
test
inc
mov
daa
aas
cmps
sub
pusha
mov
push
pop
stc
cmp
outs
test
jbe
pop
enter
cmp
lea
hlt
mov
lahf
dec
adc
xchg
sbb
push
scas
icebp
cmc
push
dec
push
xor
fdivr
pop
sbb
ds
loop
out
dec
stos
repz
mov
imul
and
imul
xlat
lock
push
pop
imul
adc
arpl
push
dec
push
fisubr
imul
punpcklwd
inc
sbb
aaa
fistp
xchg
sbb
loopne
out
test
out
arpl
outs
aas
test
out
nop
dec
retf
fwait
leave
mov
cmp
jnp
rcr
push
clc
aaa
cmp
mov
clc
mov
mov
adc
cmp
test
pop
mov
mov
jle
adc
sbb
leave
fucomi
xor
xchg
retf
sub
fimul
std
in
pop
xchg
in
clc
test
adc
cmc
loop
fst
call
pushaw
dec
stos
arpl
iret
push
or
jg
pop
sbb
mov
cli
add
jp
aas
cmp
(bad)
cmp
outs
sahf
pushf
mov
inc
sbb
f2xm1
dec
add
mov
xlat
mov
iret
fstp
pop
xor
repnz
mov
out
test
dec
add
test
push
aaa
test
dec
dec
adc
sub
clc
(bad)
pushf
dec
(bad)
jnp
cmp
lds
in
out
and
adc
ret
data16
xor
jnp
xchg
xor
mov
mov
xlat
repz
sti
lahf
sahf
push
leave
xchg
iret
ficomp
rcl
sti
psadbw
out
jp
mov
mov
shr
adc
jne
test
retf
pop
lods
sbb
int3
jp
sbb
mov
jmp
aaa
mov
jno
pushf
and
test
pop
arpl
dec
jne
sub
mov
clc
sbb
adc
pcmpgtw
mov
inc
and
or
dec
stos
mov
cdq
inc
sub
cmps
jmp
xchg
stc
in
xchg
dec
retf
jne
(bad)
iret
fucomip
outs
cli
int
adc
xchg
es
sahf
popa
inc
pop
and
cmc
inc
in
retf
or
push
dec
daa
push
loop
adc
aaa
movs
jmp
push
fcmovnb
ins
jmp
lods
in
inc
mov
inc
jbe
call
retf
sub
dec
cmp
movs
pop
aas
sti
push
int
and
cli
xchg
push
lahf
xchg
xchg
loopne
push
jle
addr16
call
or
fsubr
xchg
inc
test
cmp
out
jne
dec
or
test
cmp
mov
das
loope
push
push
sbb
push
neg
mov
inc
mov
fcmovnbe
(bad)
sbb
mov
mov
sbb
int3
int
jmp
dec
sub
aam
jmp
(bad)
lea
sbb
jne
fwait
or
cdq
sub
pop
out
mov
mov
jmp
mov
xchg
loop
test
xor
mov
and
mov
xchg
mov
aaa
loope
lahf
and
nop
and
inc
pop
fiadd
pop
cmp
xor
icebp
test
push
cs
push
xchg
data16
push
cmp
adc
fdivr
and
jecxz
gs
test
push
dec
push
dec
pop
nop
mov
dec
mov
sub
fadd
or
mov
test
mov
loopne
mov
loop
sub
bound
jle
pusha
ins
pusha
adc
mov
call
jmp
outs
dec
xlat
retf
jl
pop
jmp
jmp
mov
aam
shl
add
pop
icebp
pop
xchg
loop
ja
in
sbb
inc
fcom
cmp
mov
push
jecxz
daa
es
or
cs
hlt
sbb
or
dec
pop
jmp
in
and
mov
aad
popa
sub
(bad)
div
jg
psubq
cmp
inc
xor
xchg
mov
cs
(bad)
jmp
cwde
push
std
sbb
call
fucomip
and
sub
dec
repnz
mov
cmp
xor
shr
ja
xchg
sbb
retf
sbb
mov
mov
mov
xor
out
aaa
or
imul
sti
out
jle
ins
sub
iret
jmp
sti
mov
adc
pop
adc
pop
in
cmp
cmc
bnd
or
outs
lock
inc
sub
repz
test
pop
mov
sbb
lahf
ret
add
mov
push
(bad)
cmc
popf
ror
and
pop
pop
lock
int3
movs
rol
and
loope
adc
aam
xlat
iret
shr
cmp
mov
push
push
xchg
mov
jns
cdq
push
lds
jmp
jae
repz
jns
xchg
in
sahf
daa
inc
sub
mov
pop
lods
stos
xor
inc
cdq
out
add
ins
jbe
mov
add
cmp
mov
cmp
jmp
loopne
(bad)
mov
sbb
xor
xor
push
inc
or
pop
mov
out
cdq
sbb
mov
push
sub
out
mov
sbb
pop
out
aaa
rcl
inc
and
ror
push
enter
sti
push
int3
inc
pop
lods
out
pop
mov
adc
jecxz
es
fisubr
(bad)
push
in
xlat
cmp
push
imul
jbe
arpl
sbb
fistp
jl
(bad)
in
inc
adc
lock
addr16
jl
sbb
adc
popf
mov
sti
(bad)
stc
int3
xchg
mov
sub
in
sub
sub
dec
jmp
dec
push
add
push
rol
popf
sub
cdq
pop
retf
xor
stos
addr16
mov
(bad)
mov
jmp
mov
iret
(bad)
lds
xchg
adc
dec
cdq
add
sub
mov
in
pop
aam
pushf
movs
scas
xor
punpckhbw
fild
sub
sbb
pop
push
add
pop
lock
hlt
adc
mov
adc
pop
aaa
and
ins
test
fdivp
adc
scas
mov
mov
mov
add
mov
or
ins
wrmsr
xor
and
(bad)
mov
adc
mov
push
cmp
dec
js
repz
pop
jecxz
aaa
ret
jle
jmp
mov
les
dec
aam
stos
stc
outs
sub
push
test
jnp
fild
jmp
sub
ret
cmc
cmp
dec
out
lock
shl
xchg
xor
mov
adc
dec
nop
cdq
sti
js
out
test
outs
jmp
adc
sub
cmp
inc
cs
mov
aaa
rcr
dec
xchg
cmps
retf
into
pop
mov
mov
push
push
or
jo
fidivr
lock
sbb
add
loope
mov
xor
cmp
sbb
xchg
js
add
movs
in
nop
mov
sbb
xlat
(bad)
jmp
dec
pop
adc
enter
mov
add
rol
pop
mov
in
lea
xor
dec
inc
xor
xchg
lods
pop
or
inc
fdiv
lods
inc
icebp
in
test
mov
addr16
pop
ficom
rol
ss
xchg
or
jp
fnstenv
scas
bound
mov
bound
retf
repz
push
les
sti
into
xchg
iret
retf
jo
(bad)
xor
mov
cmp
mov
sbb
mov
push
cld
ins
dec
pinsrw
out
inc
test
das
imul
fdiv
out
inc
inc
add
mov
xchg
out
dec
mov
jp
adc
xchg
add
call
aas
daa
pushf
out
lea
dec
hlt
popa
ins
pushf
repnz
dec
call
cli
pushf
lahf
vpunpckhdq
cmovg
mov
mov
jg
inc
movs
jle
inc
clc
jp
out
and
loope
push
addr16
cmp
fisub
repnz
scas
scas
in
imul
nop
in
test
das
sub
mov
cld
cmp
les
sbb
iret
dec
nop
dec
mov
cdq
test
mov
push
ret
sbb
jmp
retf
sti
js
dec
ja
(bad)
push
ins
cmp
fisub
out
pushf
fyl2xp1
fsubr
loopne
xor
add
xchg
rcl
(bad)
mov
bound
sbb
les
bound
sub
pop
loop
cld
sub
test
sub
or
int
pushf
sub
pop
cmp
sbb
add
or
mov
sbb
adc
ret
mov
jnp
mov
mov
mov
cmp
ds
and
mov
outs
sti
not
fisub
add
or
pop
sub
sub
call
pop
push
std
cmp
pop
fbld
pop
test
ja
lock
sbb
mov
mov
and
scas
into
fwait
mov
adc
fnstcw
jl
xchg
mov
ds
sbb
mov
xor
es
cwde
int3
dec
push
test
dec
push
inc
sub
ficomp
loope
inc
mov
cmps
(bad)
mov
popf
add
jmp
mov
inc
popf
lahf
pushf
push
les
cmp
ret
pop
rcr
sti
push
mov
push
jl
mov
jp
lock
mov
ror
sahf
mov
stos
pushf
ins
imul
mov
mov
xlat
xor
hlt
jmp
xlat
mov
test
mov
out
lods
inc
dec
add
loopne
aas
test
retf
into
adc
or
imul
xchg
cmp
rcl
mov
cwde
push
(bad)
xor
jo
push
into
dec
sub
fild
sub
jnp
gs
jge
leave
imul
and
fadd
push
leave
mov
inc
jp
sub
cmps
lods
stos
popf
lahf
daa
jmp
or
rcl
daa
lock
cmp
xchg
jne
adc
lods
pop
div
into
mov
int
(bad)
mov
inc
test
into
sub
pushfw
das
cli
or
xchg
movs
ret
and
pop
movs
test
add
mov
sub
(bad)
and
cmps
jl
ret
ror
shl
mov
fimul
sbb
jge
cwde
fwait
push
hlt
test
adc
xor
ret
pop
push
add
loope
std
enter
xor
mov
repnz
fisub
jle
adc
aam
data16
adc
ins
lods
xchg
mov
test
cmp
popf
lock
stc
or
jb
jmp
rcr
push
retf
rcr
lods
aas
in
jl
jle
or
sub
movs
popa
jb
and
pop
mov
dec
add
mov
pop
test
cmp
mov
retf
fsubr
sahf
dec
or
and
dec
in
sub
sbb
dec
jnp
out
shr
cmps
ret
aaa
adc
sahf
push
mov
push
sub
into
inc
fmul
test
push
ret
jp
xchg
sbb
iret
xor
out
fcmovnbe
imul
xchg
ja
fs
lahf
imul
movs
sbb
mov
ret
xor
pop
pusha
out
jno
sar
pop
cmps
mov
lahf
fadd
adc
adc
pop
adc
scas
inc
ret
xor
jne
jae
jne
add
daa
pop
xchg
stos
stos
sbb
retf
sub
shr
shr
xor
push
stc
and
loope
pop
dec
push
push
xor
sub
pusha
inc
adc
in
xchg
es
cdq
(bad)
repz
data16
pushf
or
(bad)
cld
aaa
mov
xor
push
aaa
push
xchg
mov
xor
mov
sub
jo
(bad)
jl
rcl
jo
movs
int3
ins
mov
adc
cmps
pop
pop
mov
ja
in
push
push
push
cld
xchg
mov
dec
or
out
je
or
ret
ret
sub
ds
sub
pop
and
jae
sbb
mov
adc
and
jb
inc
push
adc
iret
imul
in
xor
gs
arpl
sub
mov
inc
enter
jge
cld
mov
adc
popf
xchg
add
sbb
rcpps
movs
sub
fist
sbb
or
inc
or
or
shr
mov
jmp
dec
inc
xor
shr
or
dec
retf
inc
imul
jbe
rol
lea
lods
iret
jmp
cdq
dec
ja
jnp
test
mov
mov
inc
test
loop
mov
mov
xor
mov
mov
cmp
pop
or
or
push
dec
push
outs
imul
cmps
jnp
(bad)
push
push
rcl
sbb
mov
and
add
add
(bad)
dec
rcr
dec
fst
or
mov
jp
xchg
int
xchg
(bad)
fdivr
fnsave
add
arpl
push
mov
xor
or
cmp
fsub
popa
xchg
ror
mov
sub
and
popa
mov
dec
stos
dec
fist
mov
mov
fiadd
clc
mov
dec
pop
ror
retf
mov
fisttp
cmps
jmp
mov
call
ficom
add
aam
int
(bad)
call
je
out
push
add
jl
mov
add
fsub
ret
push
mov
inc
xchg
or
mov
clc
mov
rcl
mov
and
daa
mov
test
out
adc
mov
pushf
jmp
call
cmp
pop
jo
mov
jae
sbb
jge
(bad)
lock
or
int3
xchg
sub
mov
xchg
aas
stos
iret
and
icebp
inc
or
scas
jmp
and
imul
into
iret
cmp
data16
out
clc
test
cmp
scas
das
push
sub
jo
pop
daa
sbb
iret
xor
cmovo
leave
fstp
imul
popa
add
loope
or
shr
sub
sbb
cmps
call
lahf
dec
out
add
xor
jno
inc
mov
scas
in
xor
test
jo
push
js
(bad)
icebp
mov
loopne
inc
xor
imul
mov
pop
rcl
dec
push
push
das
lods
dec
sbb
push
pop
mov
and
pop
dec
rcl
mov
jl
cvttps2pi
(bad)
mov
mov
std
jge
inc
adc
push
cs
gs
or
add
add
mov
sbb
stos
pop
inc
mov
fild
ds
dec
fcmovbe
push
inc
inc
dec
(bad)
jl
jmp
cmp
(bad)
lock
xchg
sub
div
inc
xor
mov
psrlq
add
mov
in
and
or
pop
(bad)
dec
repnz
shl
idiv
dec
inc
rcr
pop
xchg
jle
in
imul
sub
imul
dec
sub
push
pop
adc
push
dec
add
mov
mov
sbb
push
push
iret
pop
or
add
xor
js
mov
sti
loopne
inc
xchg
test
push
xchg
call
cli
jge
loope
dec
jecxz
in
adc
sub
pushf
scas
test
and
mov
inc
xchg
das
jge
mov
pop
fidivr
mov
cs
rcl
mov
sub
(bad)
out
jmp
xchg
mov
sti
and
xlat
cmova
hlt
pop
or
iret
inc
lock
cwde
shr
(bad)
mov
push
pop
add
jno
mov
pop
xor
jmp
repz
add
retf
and
test
cwde
jb
(bad)
xchg
dec
jbe
jo
mov
(bad)
in
(bad)
jno
and
pop
(bad)
or
push
sbb
bsr
xchg
lds
add
jmp
arpl
(bad)
stc
mov
adc
push
icebp
das
scas
or
ins
add
jmp
fcmovb
mov
(bad)
repnz
cmp
lds
mov
cwde
and
lea
fiadd
gs
jmp
sub
scas
mov
dec
lock
movs
mov
lods
inc
in
xor
test
scas
lds
mov
mov
dec
xor
or
xchg
cmp
jp
or
cmp
dec
fst
(bad)
sbb
in
out
hlt
inc
jmp
sbb
jns
inc
stc
data16
mov
test
cdq
pop
(bad)
fcmovb
(bad)
es
xchg
les
outs
inc
xor
xor
sbb
das
jo
mov
imul
pushf
dec
add
fs
aaa
inc
movs
cmps
cmp
cmp
add
mov
ret
es
cdq
jg
test
call
inc
je
dec
jmp
sbb
mov
xchg
stos
mov
nop
pop
(bad)
or
cmp
dec
inc
scas
(bad)
rol
pop
leave
mov
paddw
sub
jge
dec
loope
push
xor
xchg
repz
repz
into
arpl
cmp
outs
inc
or
add
jmp
jne
dec
fldenv
fisub
rcr
aam
adc
add
push
sti
push
mov
fidivr
int
data16
das
out
stos
push
xchg
add
fsubr
int3
movntq
xchg
(bad)
outs
(bad)
ins
shl
das
sub
fucom
jnp
cld
inc
push
cwde
int3
mov
icebp
adc
retf
test
mov
dec
cmp
lods
cmc
push
push
leave
in
retf
fwait
jge
mov
jmp
adc
and
and
pop
sbb
xor
aaa
sar
dec
imul
pop
jns
ror
fsub
mov
mov
fild
cmp
push
repz
mov
fsub
(bad)
scas
add
add
mov
or
jg
push
inc
xchg
stos
jg
rcl
inc
(bad)
push
cmp
daa
fisttp
or
pop
mov
dec
jo
jp
jbe
lods
scas
sti
pop
or
xchg
rol
cmp
rol
mov
pop
cdq
enter
pop
xor
sbb
adc
pop
div
shl
mov
fnstsw
aad
jmp
test
iret
sbb
cmp
add
imul
aaa
shr
push
int
stc
out
jge
push
addr16
inc
xor
xchg
pop
lods
dec
cmp
jge
xlat
test
jnp
outs
test
push
add
pop
adc
rol
push
scas
mov
sbb
adc
(bad)
mov
push
aaa
push
addr16
inc
add
gs
dec
clc
mov
std
push
add
popf
out
int3
add
push
mov
pop
inc
sub
enter
mov
xchg
scas
jp
pusha
fs
or
and
dec
mov
push
adc
jbe
or
hlt
outs
dec
cmp
jecxz
jg
or
aaa
mov
pusha
mov
push
mov
test
ins
test
mov
rol
in
mov
xchg
test
and
adc
dec
xor
jmp
nop
pushf
retf
push
mov
lods
call
or
cmp
pusha
adc
jno
cmp
sbb
(bad)
xlat
lds
hlt
(bad)
sbb
addr16
xor
push
xor
add
neg
cs
in
cmc
outs
aas
or
movs
inc
cmps
and
pop
jnp
lds
pop
rol
jns
xor
push
sbb
(bad)
xchg
add
js
mov
jo
sub
sub
les
out
hlt
loope
xor
loopne
mov
dec
loop
pop
xchg
rcr
add
pop
scas
test
pop
mov
cmp
jnp
dec
rcl
jns
pusha
mov
ror
ds
inc
mov
adc
fs
scas
add
dec
jnp
jmp
inc
adc
dec
loope
and
les
shl
lahf
popa
push
fwait
mov
mov
in
and
outs
jne
hlt
int3
xchg
sub
xlat
lea
pusha
sbb
nop
mov
xchg
fwait
pop
pop
adc
fnstcw
das
mov
push
mov
sub
push
push
bound
mov
retf
jo
inc
mov
ss
out
shl
lods
cmp
in
pushf
scas
xor
shr
sbb
add
into
jecxz
sbb
iret
rcl
or
push
jge
adc
mov
mov
xor
call
xor
add
call
inc
dec
sub
out
inc
add
sub
call
and
ret
jne
sar
or
sbb
push
ss
mov
ret
dec
fdivr
(bad)
retf
sub
loopne
xor
xchg
add
test
adc
sub
lahf
jnp
les
xchg
jmp
imul
(bad)
mov
fst
into
cld
dec
lahf
or
dec
push
mov
jnp
xor
add
retf
test
dec
sub
movs
call
or
or
lea
jg
push
xor
inc
dec
icebp
es
adc
cld
int
dec
(bad)
int
das
mov
sub
or
xor
inc
lods
pop
mov
add
mov
mov
lea
xor
test
ret
bound
outs
movs
mov
xchg
in
icebp
xor
cwde
inc
(bad)
clc
arpl
call
test
jb
(bad)
mov
fbld
fwait
mov
rol
add
inc
cmp
popf
cmp
loope
dec
jb
and
inc
xor
sbb
ins
push
test
and
cli
ficomp
call
adc
stc
out
adc
mov
pop
mov
movs
mov
aad
and
shr
out
xchg
inc
cmp
and
cli
add
std
enter
cld
fs
movs
xchg
jb
stos
push
loope
mov
mov
ror
push
xchg
inc
in
retf
int
sub
sbb
cs
mov
cmps
pop
pop
xor
adc
mov
cld
iret
ins
(bad)
cmc
xchg
sbb
push
adc
repnz
stos
push
std
das
cmp
and
das
jb
sub
add
fisub
sahf
int3
adc
jmp
jnp
mov
mov
sti
arpl
fst
xchg
jbe
leave
xchg
push
loop
mov
add
mov
pusha
test
fldenv
or
mov
xor
sbb
call
inc
outs
aad
or
mov
mov
hlt
mov
or
les
jmp
scas
gs
sbb
lock
mov
dec
test
ss
fsub
retf
mov
jo
push
lahf
xor
cs
outs
or
pusha
cmp
sahf
mov
push
sbb
mov
pop
push
cmp
mov
push
ins
out
test
(bad)
fdivr
xchg
leave
push
cmp
fs
sub
push
push
std
jle
(bad)
out
push
pop
add
inc
dec
retf
jmp
push
hlt
retf
mov
pusha
mov
cmps
retf
call
lods
ret
xchg
xor
mov
inc
(bad)
movs
push
repz
stos
add
clc
sti
imul
jns
cmps
es
test
aad
es
sub
jne
loope
jae
pop
push
sahf
sahf
lock
fadd
jo
cld
std
outs
mov
inc
add
test
adc
push
(bad)
sbb
xor
int3
ja
mov
mov
pop
and
lods
retf
test
ja
shl
inc
dec
xor
dec
xchg
mov
dec
into
test
iret
cli
sub
(bad)
fwait
and
cmp
shr
out
push
in
pop
inc
mov
and
int
pop
cmp
ins
imul
hlt
xlat
xor
mov
mov
shr
push
sub
cmp
pop
pop
or
imul
sub
sub
int
cmp
scas
(bad)
or
xor
jne
mov
cdq
pop
push
pop
mov
(bad)
in
xchg
call
retf
cmp
lahf
sub
rcr
cmp
xchg
mov
movs
jmp
push
ficom
pop
or
(bad)
out
add
shl
into
and
push
sbb
(bad)
rcr
xchg
mov
in
lds
pop
xchg
xchg
cdq
xor
sub
cli
sub
xchg
sbb
out
dec
shl
out
test
fcmovu
mov
add
ins
xchg
fld
fwait
stos
stos
xor
(bad)
sbb
inc
shl
call
fcmovbe
cmp
out
(bad)
dec
stos
adc
xor
mov
cwde
xor
loope
shr
imul
cwde
inc
cmc
push
mov
jg
inc
mov
sub
imul
and
add
dec
jecxz
sbb
ror
fnstenv
rcr
(bad)
jp
push
pop
movs
imul
std
cpuid
sar
and
push
addr16
push
ret
or
aaa
sub
sub
xor
aad
dec
cdq
rcl
out
js
xchg
xor
out
sbb
push
and
mov
aad
mov
pop
mov
outs
adc
adc
test
mov
test
add
gs
iret
mov
or
outs
nop
xor
add
addr16
jmp
pop
mov
sbb
cwde
jmp
cdq
mov
enter
dec
mov
lods
xchg
cmps
mov
jo
add
cmp
mov
paddq
or
loopne
clc
ins
adc
add
mov
cli
jmp
jmp
fwait
outs
outs
push
inc
mov
fst
ret
mov
aaa
or
cmp
pop
xchg
push
fwait
gs
outs
xor
sbb
stc
ds
adc
mov
pop
jmp
retf
lods
or
sub
jae
xor
mov
mov
test
rol
out
pusha
idiv
push
jns
mov
xor
scas
jnp
popa
das
(bad)
dec
je
cmps
data16
mov
fwait
imul
cmp
xchg
pop
jae
mov
and
cmp
iret
test
jbe
xchg
lock
jnp
cs
sbb
cmp
adc
add
or
adc
fucomip
mov
add
inc
jg
inc
sbb
dec
mov
stos
push
xlat
outs
ds
(bad)
push
sbb
xor
leave
mov
mov
repz
dec
push
std
cmc
das
mov
push
jo
xor
mov
fcom
lds
arpl
inc
push
cmc
cmc
cmps
cdq
push
mov
cmps
and
stos
push
pop
push
mov
sbb
jle
(bad)
lsl
je
xlat
mov
lock
stos
shr
lea
jmp
dec
push
sbb
(bad)
jge
pop
push
sbb
pop
in
out
js
push
xchg
mov
movs
lahf
mov
xchg
pushf
mov
pop
dec
sub
stos
mov
add
int3
ins
jae
xor
fidivr
daa
ret
js
inc
push
loope
add
nop
inc
(bad)
dec
outs
sub
out
icebp
jecxz
dec
add
cli
sahf
cmc
and
movs
push
clc
loop
sub
clc
push
call
mov
cmps
push
in
or
pop
mov
pop
and
push
(bad)
xor
jns
jb
stc
adc
push
mov
inc
sbb
retfw
(bad)
ja
int3
or
xchg
xor
pop
fwait
call
rol
lock
or
stos
sub
xchg
xor
(bad)
dec
arpl
gs
test
sub
sub
loop
lods
shr
(bad)
ret
iret
mov
mov
pop
aam
aam
pop
add
cmp
inc
xchg
add
int3
aad
mov
inc
mov
fidivr
jl
mov
icebp
sbb
retf
xor
adc
dec
call
lahf
pop
jns
xchg
mov
pop
in
cmp
dec
push
push
push
bound
mov
das
jle
ins
(bad)
push
rcl
sub
dec
(bad)
dec
aam
rcl
rol
leave
xchg
xor
dec
les
rcr
in
ret
outs
mov
jl
repz
dec
mov
xor
inc
test
sub
jns
shl
(bad)
das
xchg
rcl
cmp
or
out
fwait
xchg
adc
pop
jle
movs
jmp
pop
sar
jmp
jb
push
mul
(bad)
retf
sub
addr16
or
dec
icebp
inc
add
jp
add
inc
and
mov
movs
mov
mov
stos
bound
int
scas
jge
xlat
ret
clc
call
mov
push
pop
mov
inc
es
outs
push
ja
and
rcl
movs
mov
movs
xor
loopne
cmp
inc
jb
ss
mov
fs
mov
sub
mov
adc
in
sbb
cmp
xchg
mov
movs
inc
stos
(bad)
xor
out
nop
cwde
sbb
mov
inc
enter
mov
cwde
dec
dec
shl
pop
(bad)
xor
pop
out
dec
jb
js
mov
call
cld
pop
push
shl
lods
pushf
popf
(bad)
dec
push
jno
add
inc
cld
xor
push
jnp
inc
pop
int3
shl
sub
push
clc
sti
mov
out
scas
out
in
aas
xchg
pushf
out
mov
and
dec
mov
mov
xlat
mov
sub
dec
and
aam
test
xor
add
adc
adc
cmp
sub
scas
jmp
cmps
ret
mov
sar
and
sbb
cmp
mov
inc
sub
sub
jmp
inc
in
ins
bound
sub
inc
ds
push
mov
jb
jmp
jl
and
xor
mov
dec
hlt
pop
pop
adc
mov
push
mov
mov
or
xchg
mov
xchg
cmp
les
xor
out
xor
in
jne
mov
into
xor
bnd
sub
cli
out
pop
test
cmc
arpl
jo
jg
or
clc
lock
cmps
and
jns
int
out
mov
bound
pop
inc
mov
push
cmc
inc
sbb
mov
out
cmps
cwde
fisubr
retf
adc
icebp
dec
or
popf
mov
inc
daa
and
sar
push
jmp
mov
popa
cmp
in
fld
int
mov
push
in
pushf
ret
clc
aam
or
call
loopne
adc
aaa
jmp
popa
push
cdq
jmp
push
add
mov
ret
es
xor
ins
mov
jecxz
nop
(bad)
mov
aad
sub
outs
iret
push
stos
addr16
(bad)
xor
push
jl
jge
xchg
sbb
lock
popa
pand
and
jge
fmul
fwait
sub
xchg
sub
sub
jno
sub
inc
cmp
stos
mov
jle
mov
mul
clc
call
mov
xor
xor
les
ret
push
mov
imul
dec
(bad)
(bad)
into
sbb
imul
dec
push
je
xchg
js
push
jge
shl
fst
dec
or
(bad)
sbb
pop
sub
cwde
test
and
sub
je
dec
xor
into
enter
mov
(bad)
mov
sbb
addr16
sub
mov
jb
ret
pop
cmp
ja
and
xchg
outs
jmp
pop
fldenv
aas
scas
ja
call
aad
hlt
jecxz
stos
std
aad
or
inc
pop
mov
out
mov
mov
mov
jno
ficomp
inc
push
ret
xor
dec
pop
mov
cmp
dec
xor
fdivp
add
js
fsubr
aam
cmp
sub
mov
xchg
pop
xchg
jp
ss
shl
shl
pop
scas
cmp
clc
call
sti
sub
xor
out
rol
cmp
in
fild
push
repnz
or
cdq
mov
xchg
cmp
test
jmp
xor
shl
mov
or
(bad)
or
(bad)
ss
mov
int
rcr
xor
popa
nop
les
cld
test
pop
mov
jae
xchg
cld
cmps
sar
pop
gs
lds
add
mov
sbb
jle
add
(bad)
mov
mov
or
pop
jl
cld
sbb
clc
or
enter
outs
push
repnz
inc
cdq
cmp
mov
adc
sbb
cli
loopne
pop
jae
pop
mov
shl
lods
cwde
bound
test
idiv
jmp
xchg
mov
mov
icebp
daa
popf
leave
add
cmp
scas
enter
push
sub
aad
mov
pop
pop
jb
sbb
ret
push
sbb
xor
add
jne
push
sbb
hlt
icebp
and
push
gs
sahf
dec
cli
cmp
pushf
in
dec
fsubrp
stc
mov
mov
lock
imul
or
test
sub
push
out
or
(bad)
mov
cwde
jle
inc
mov
inc
inc
mov
shl
lock
ins
cdq
push
dec
leave
jo
or
mov
fcmove
(bad)
mov
mov
in
call
inc
pushf
and
pop
into
dec
xchg
mov
jp
neg
bound
in
push
es
cmps
rol
inc
and
mov
out
movs
shl
sub
fsubr
(bad)
xlat
xchg
jbe
push
je
bound
movs
sbb
or
sbb
mov
mov
mov
jmp
aam
dec
in
(bad)
add
inc
(bad)
scas
(bad)
mov
cmps
sbb
mov
cmps
stos
ins
jnp
mov
rol
aas
stc
add
dec
xor
dec
mov
mov
cmp
inc
and
mov
lock
gs
adc
into
nop
(bad)
jns
adc
imul
dec
popf
sbb
stc
mov
sbb
loopne
out
mov
imul
mov
imul
movs
retf
out
mov
data16
(bad)
jp
sub
inc
faddp
and
mov
cmps
in
outs
sbb
ja
cmc
addr16
mov
inc
jbe
neg
sub
pop
jecxz
sub
cmps
jle
popa
push
add
ret
jo
idiv
fsubr
out
rcl
sti
adc
jle
lds
retf
xor
and
je
pop
push
jne
aad
dec
popf
scas
mov
pop
inc
lahf
mov
sub
stos
xchg
jmp
dec
cmc
loope
sti
and
data16
sbb
push
out
and
xlat
outs
jno
nop
movs
and
jbe
push
xlat
aam
or
or
leave
xchg
aas
fmulp
adc
stos
in
fmul
out
sar
push
pop
popf
cwde
arpl
(bad)
int
xor
aam
sub
pop
int
jg
add
out
push
movs
icebp
xor
cmp
cmps
push
push
dec
sahf
xchg
adc
xchg
mov
add
(bad)
jg
push
adc
aaa
and
adc
js
daa
sahf
dec
mov
mov
retf
test
mov
mov
ins
mov
sti
fisubr
mov
jns
mov
sbb
fist
ja
mov
push
push
jnp
adc
pop
mov
xchg
imul
cmp
and
push
mov
jo
(bad)
pop
dec
data16
jnp
add
inc
js
in
sbb
mov
or
enter
fcom
or
in
cli
push
sub
jecxz
dec
(bad)
cld
test
lods
sbb
jns
mov
xchg
pop
fs
enter
(bad)
mov
popf
ffreep
std
cmp
mov
mov
rcl
mov
sbb
sbb
mov
aam
test
xchg
push
call
popa
xchg
mov
test
xchg
jbe
neg
add
sti
sub
in
xchg
xor
dec
fnsave
add
ins
mov
sbb
inc
stos
dec
add
aam
inc
cmp
pop
js
gs
callw
jns
pop
rol
mov
scas
sub
push
push
call
fdiv
std
xchg
adc
cld
and
scas
fdivp
pop
rcl
in
mov
push
(bad)
jecxz
or
adc
out
ins
jmp
add
and
mov
clc
and
pop
fdiv
xor
pusha
into
adc
push
push
stc
cmp
leave
fs
daa
sub
sbb
cmovg
mov
inc
dec
sbb
or
jbe
and
div
or
je
mov
sub
movs
pop
lahf
lods
fcom
loop
pop
mov
mov
add
outs
pop
xor
jmp
imul
add
mov
(bad)
xlat
push
add
inc
popf
pop
xchg
(bad)
adc
dec
enter
mov
jne
jl
jmp
pushf
inc
jns
xchg
mov
xor
popa
in
clc
xor
mov
enter
push
(bad)
aam
pop
xlat
mov
push
ja
sbb
ret
xor
popf
mov
and
ja
call
fisttp
mov
cmps
adc
pop
add
fcom
pusha
inc
mov
dec
outs
pop
xor
ja
mov
aad
repnz
mov
je
mov
aam
mov
ret
pushf
and
gs
mov
or
push
push
push
dec
in
mov
dec
pushf
shl
repnz
jl
pop
adc
dec
mov
outs
call
rcl
xchg
sti
fistp
es
js
dec
dec
xchg
clc
xchg
push
iret
shl
outs
xchg
test
(bad)
mov
scas
and
test
adc
inc
jmp
fcmovb
add
and
xor
jo
and
dec
cli
or
(bad)
icebp
mov
or
cmp
and
scas
das
test
ret
inc
xor
cs
xor
int
xchg
lahf
push
sbb
lds
push
fs
jge
xchg
push
dec
stc
mov
jns
imul
lea
dec
xchg
xor
(bad)
clc
shl
aas
or
dec
test
loopne
mov
mov
sti
push
or
sub
pop
loope
xchg
xor
adc
imul
adc
nop
adc
dec
add
outs
mov
sbb
mov
ss
mov
data16
xor
xor
cli
push
out
jbe
shr
cmp
push
ins
cmp
adc
fwait
sti
iret
int3
pop
into
xchg
retf
xchg
sub
sbb
pusha
scas
js
pop
mov
movs
jecxz
or
mov
in
sbb
cmp
not
cli
adc
mov
dec
mov
push
inc
sub
xlat
enter
jnp
sub
or
dec
jbe
daa
sub
out
cli
mov
(bad)
in
nop
rol
or
call
std
dec
jge
xor
icebp
jnp
push
cmps
jb
daa
or
stos
cmp
adc
xor
mov
jae
fistp
loop
cmp
mov
mov
or
pop
cli
jns
ins
jb
ss
retf
nop
(bad)
xor
stc
mov
jne
in
adc
jo
jle
xchg
cmp
mov
inc
sbb
inc
mov
(bad)
mov
icebp
jmp
sbb
clc
sub
pop
mov
adc
test
xchg
or
xor
fisubr
pop
mov
jl
retf
aad
lea
jo
cmc
inc
mov
mov
dec
jo
push
pop
popf
fisubr
mov
in
pextrw
mov
pop
xlat
xor
mov
ins
pop
or
mov
mov
pop
js
push
inc
repz
out
xchg
sti
stos
xchg
xchg
loopne
hlt
jb
lods
mov
mov
xchg
bound
add
mov
mov
pop
mov
push
mov
clc
jecxz
icebp
int3
add
push
and
xor
xchg
stos
lea
fnstcw
ret
sub
stos
std
xchg
repnz
call
cmp
out
pop
fsubr
or
or
mov
dec
xchg
(bad)
adc
lods
into
outs
jl
ret
clc
scas
push
xchg
add
sbb
cwde
lahf
mov
or
nop
inc
pop
mov
and
icebp
jle
add
iret
cmp
icebp
push
popa
sub
ins
das
loop
out
dec
ficom
test
(bad)
popa
ficomp
mov
mov
inc
xchg
cdq
stos
inc
cmps
jmp
push
retf
jno
xor
mov
mov
retf
stos
add
scas
icebp
mov
and
add
xchg
cs
fist
ja
ds
or
mov
addr16
aaa
cmp
cmps
shr
outs
jmp
aam
push
and
mov
fisub
frstor
xchg
adc
js
inc
hlt
jne
and
addr16
das
mov
pop
jmp
into
cs
cmp
in
and
push
push
xchg
pop
xchg
stc
rcr
aad
add
or
sub
sbb
and
cmp
jno
xchg
adc
mov
out
bound
fst
into
(bad)
sub
xor
pop
fisttp
cmps
cmp
add
push
popa
mov
push
ror
aam
retf
fsubr
pop
sbb
stc
repz
push
(bad)
push
fsub
lods
mov
scas
add
(bad)
sbb
mov
pop
aaa
outs
jmp
icebp
in
adc
cmp
cdq
fiadd
add
add
mov
jmp
or
jge
cmps
sahf
cmp
loop
stos
adc
iret
or
sbb
cld
dec
and
fnsave
ins
fisubr
lods
fimul
jo
lahf
(bad)
sbb
pop
mov
xor
mov
aam
dec
popf
adc
mov
(bad)
jg
stc
sub
inc
jle
imul
fst
loopne
adc
outs
fisttp
cmp
and
ins
into
push
mov
imul
mov
movs
sti
ja
push
(bad)
std
aam
hlt
inc
lahf
jle
retf
lods
cli
iret
jae
out
jae
xchg
dec
mov
adc
or
mov
fcomp
lds
outs
mov
bound
mov
sub
dec
cwde
mov
jns
cli
ret
mov
inc
fbstp
mov
aaa
dec
mov
dec
call
lock
jno
xchg
add
shr
dec
loop
jnp
outs
cld
xor
(bad)
loope
xchg
push
cmp
jge
shl
retf
sbb
adc
inc
cs
sbb
and
mov
sbb
mov
mov
pusha
imul
fs
cmp
jle
mov
cmc
inc
daa
shl
cmps
xchg
inc
nop
fdivp
mov
and
dec
xlat
jg
inc
mov
dec
(bad)
call
ror
push
fsubr
scas
sbb
ror
or
movs
sub
adc
mov
push
aaa
loopne
pop
shl
mov
or
lea
cmps
lods
call
sbb
ins
adc
pop
inc
pusha
mov
dec
inc
pop
or
lods
out
xchg
dec
mov
lahf
mov
jno
xchg
push
sbb
daa
(bad)
imul
mov
jb
inc
fucomp
into
movs
nop
in
sub
fist
lock
gs
cmp
fdivrp
mov
es
call
cli
loope
cli
nop
ror
cmc
or
add
test
dec
fcomp
fild
xchg
popf
pop
xchg
cli
sub
adc
or
push
cmps
xchg
push
xchg
xchg
imul
pop
inc
ficom
sbb
jno
loopne
fisubr
cmp
stos
mov
stos
cs
mov
test
sub
stos
out
mov
clc
pop
retf
loopne
xchg
push
jmp
mov
out
and
cmp
lds
aas
xor
(bad)
(bad)
mov
test
push
out
sbb
or
pop
dec
xchg
xlat
adc
mov
dec
mov
hlt
mov
mov
mov
xchg
xor
arpl
dec
popa
push
nop
mov
pop
das
stos
dec
sub
xlat
cmps
cld
in
sub
xor
ds
pop
inc
loop
xlat
lfs
mov
push
hlt
add
rcl
add
repz
jo
mov
out
dec
xor
mov
out
add
out
inc
hlt
idiv
je
push
fsub
rcr
mov
sbb
mov
dec
pop
xchg
jp
loope
sahf
xchg
sahf
fidiv
and
ss
jmp
jmp
out
inc
push
inc
sub
dec
add
rcr
in
add
jge
lahf
sbb
xor
repnz
lods
jmp
mov
es
mov
add
stos
movs
jnp
rcr
aad
push
adc
push
data16
mov
pop
mov
test
pop
iret
cmps
push
clc
arpl
mov
pop
loopne
ss
mov
mov
or
rcl
mov
pop
cs
das
add
rcr
add
mov
cmc
dec
adc
bound
retf
lods
or
ds
add
loopne
inc
mov
scas
stc
mov
outs
jmp
dec
dec
mov
dec
test
push
aam
in
sub
pop
js
push
jg
xlat
xchg
push
pop
pxor
int
sbb
scas
js
add
mov
data16
push
shr
jne
cmp
imul
xor
pop
add
or
pop
or
imul
cmp
(bad)
fidivr
sub
push
jp
sahf
sub
(bad)
out
push
out
arpl
cmp
(bad)
and
adc
fstp
add
jle
jns
push
pop
(bad)
cmp
(bad)
sar
ins
mov
jnp
loopne
lahf
mov
dec
cwde
xchg
push
cmp
push
inc
cld
mov
xchg
mov
pop
cli
xor
lds
mov
aad
rcr
jle
mov
sub
in
ret
test
mov
sub
mov
push
adc
mov
inc
xchg
test
test
vmwrite
xor
inc
mov
nop
inc
mov
call
packuswb
jnp
pop
out
(bad)
jnp
(bad)
and
aad
pop
adc
lock
fmul
jmp
test
pop
push
out
jbe
inc
(bad)
pop
out
dec
xchg
outs
push
cld
dec
cs
fwait
dec
sub
cmovae
jns
mov
mov
aas
adc
sbb
retf
sub
pop
aam
sub
ret
inc
into
gs
dec
add
cdq
pop
mov
dec
fnsave
fdivr
sbb
cmc
xor
cmp
ins
imul
lods
add
fdivr
and
leave
gs
lock
pop
push
aad
sbb
shr
xchg
pop
xor
test
into
int
pop
and
inc
enter
xchg
pop
retf
sahf
xlat
js
adc
dec
xor
shl
sar
(bad)
aad
mov
sbb
dec
dec
sub
inc
xor
xchg
xchg
xor
lahf
jae
add
xor
adc
push
rcr
div
inc
cmp
jge
adc
dec
cmp
inc
and
cmps
mov
pushf
pop
add
jne
fisttp
cmp
add
ss
adc
or
movs
mov
push
push
xor
out
sub
mov
pop
sub
into
loope
and
mov
jo
xchg
imul
data16
out
sbb
jne
rol
mov
in
mov
cdq
jnp
rol
push
xor
adc
push
fsubr
and
pop
xor
cmps
jmp
std
jnp
ficom
inc
xchg
add
push
mov
mov
mov
rcl
pushf
rol
or
push
dec
xor
adc
outs
cmp
(bad)
sar
in
ficom
add
sbb
in
adc
push
mov
jmp
in
push
sti
dec
and
cs
adc
xlat
sbb
or
(bad)
cmp
sbb
clc
call
(bad)
arpl
fsub
fcmovu
loop
cmp
add
lock
mov
sbb
pop
xor
push
lds
into
lock
pop
xor
inc
dec
js
jno
in
cwde
sbb
add
div
call
ds
inc
jns
loope
or
out
mov
mul
lods
test
(bad)
mov
je
sahf
mov
lock
or
push
mov
daa
and
xchg
adc
retf
sbb
aas
jb
lods
adc
mov
cwde
in
cmp
cmps
cmc
cmps
mov
push
mov
mov
sbb
xor
loope
jno
add
push
(bad)
retf
pop
scas
and
in
test
jmp
cmc
jno
push
cmc
cdq
cmps
pop
movs
(bad)
cmp
in
dec
div
xor
aaa
mov
cmps
mov
sub
push
xchg
xchg
cmp
cdq
lahf
add
sar
cmps
lock
out
aad
mov
mov
(bad)
lods
xchg
inc
test
aaa
outs
add
sub
dec
sbb
cmp
sub
add
into
cmp
imul
jmp
mov
mov
sub
in
jnp
out
push
sbb
jp
nop
jg
jb
jno
jmp
cli
sbb
or
pop
cs
and
lahf
or
out
js
hlt
pop
dec
jmp
cmp
mov
cmp
adc
adc
cli
dec
lods
jno
lock
in
mov
int
or
push
pop
fs
mov
push
xor
adc
popa
call
inc
cmp
push
fisttp
sar
dec
fadd
xor
push
push
add
enter
test
repz
addr16
scas
or
daa
xchg
push
fwait
push
mov
push
add
sub
stc
clc
ss
bound
dec
ins
loop
add
pop
test
mov
in
cdq
sub
adc
pop
cmp
nop
sbb
es
les
sbb
call
push
ror
aad
mov
addr16
shr
jbe
pop
(bad)
mov
pop
mov
sub
and
ins
xor
adc
(bad)
sbb
aas
in
mov
xor
(bad)
fimul
out
jecxz
in
dec
je
sbb
gs
jb
sub
xchg
dec
test
ret
jmp
jle
(bad)
hlt
test
jg
pop
mov
sub
adc
add
lea
sub
sbb
sahf
outs
shl
daa
test
xor
sub
jae
sbb
adc
xchg
(bad)
fistp
jmp
in
mov
sub
jecxz
popa
in
push
pop
pop
xor
cmp
push
fwait
jge
fmul
pop
push
push
mov
mov
and
pop
push
out
add
jnp
movs
jbe
hlt
stc
bound
push
dec
and
jmp
fisub
and
cmp
push
fwait
test
push
js
inc
pop
pop
(bad)
fldln2
mov
xlat
inc
inc
mov
loope
and
xor
inc
sub
sub
xchg
dec
ror
loop
(bad)
and
and
add
jbe
mov
shl
int3
ss
loop
stos
add
not
add
pop
fs
lds
dec
cmovae
icebp
js
rol
add
mov
xchg
call
hlt
test
and
sbb
js
stos
aam
mov
cs
inc
test
das
add
sbb
add
and
push
mov
dec
shufps
jno
mov
dec
sbb
xor
mov
and
out
clc
std
mov
fmulp
jle
mov
pop
pop
retf
mov
(bad)
sub
inc
out
(bad)
fnstcw
jecxz
out
dec
outs
jmp
cdq
pop
push
jno
jmp
ja
daa
mov
jno
xor
inc
push
in
shl
rcr
xchg
add
(bad)
sbb
adc
or
popf
in
repz
sbb
(bad)
into
sbb
push
xchg
jno
ret
push
fs
and
xchg
adc
lods
ds
je
pop
jg
hlt
dec
and
dec
jns
sar
dec
adc
pop
or
mov
js
or
adc
pop
mov
rcr
mov
bound
dec
retf
(bad)
inc
cwde
xor
mov
(bad)
mov
adc
jmp
aad
repnz
adc
loope
xchg
sub
push
and
dec
jmp
addr16
add
test
inc
lods
shr
mov
mov
stos
xchg
adc
jns
mov
mov
bound
jb
pusha
call
adc
sbb
and
mov
adc
outs
sub
pop
test
jecxz
in
fimul
cmp
pusha
dec
outs
outs
retf
sbb
scas
adc
rcr
mov
fbld
mov
into
jmp
cmps
or
leave
call
pop
add
dec
lahf
mov
loop
ja
iret
enter
sbb
add
rol
stos
push
aas
add
call
mov
and
je
inc
sbb
xchg
(bad)
hlt
aad
sub
jnp
movs
inc
imul
(bad)
xor
scas
push
imul
pop
shr
dec
mov
adc
push
push
xchg
and
jmp
js
test
mov
(bad)
push
jmp
sbb
imul
bound
push
mov
sbb
pop
in
mov
or
call
movs
fwait
mov
jo
mov
gs
mov
sbb
sbb
mov
sub
pushf
test
push
movs
mov
les
mov
or
inc
enter
je
mov
sbb
repz
dec
sti
xor
cmc
fsub
in
and
adc
rcl
cmp
add
mov
pop
and
mov
sbb
je
adc
sub
lahf
add
or
repz
mov
test
dec
add
add
dec
dec
nop
aaa
pushf
pop
adc
push
cmc
xor
clc
or
mov
repnz
leave
out
pop
inc
mov
jne
fmul
xor
pop
test
imul
xchg
iret
adc
mov
cs
sbb
gs
cdq
xchg
std
xchg
xchg
into
and
push
stc
sub
(bad)
mov
repz
cmp
sbb
(bad)
adc
jecxz
push
imul
pop
cmp
shr
ds
out
sbb
test
cwde
stos
sub
fcmovnb
pop
fidiv
leave
lea
or
inc
pop
outs
ja
mov
and
data16
push
leave
loop
loop
jns
in
ficomp
sub
pmullw
pop
call
popa
mov
mov
pop
mov
int
cmps
add
int
les
lock
ins
xchg
or
loopne
pop
and
jge
ja
in
or
inc
add
pop
jne
pop
fidivr
jle
test
push
and
mov
xchg
loop
or
mov
jmp
cwde
sub
sbb
dec
sbb
dec
mov
jo
mov
dec
pusha
adc
push
jmp
movs
pop
cmps
test
xor
mov
inc
mov
jo
or
out
ret
xchg
aaa
pop
push
adc
mov
push
mov
xchg
jge
in
pop
movs
xor
lock
xor
or
mov
pushf
test
scas
aas
lahf
out
cmps
and
dec
leave
mov
pushf
push
nop
dec
in
fwait
or
outs
adc
jmp
mov
dec
ret
sub
jg
rol
mov
shr
jg
pop
mov
mov
jmp
aaa
xchg
nop
or
out
loopne
shl
test
jae
test
pop
inc
dec
outs
sub
retf
add
test
or
xor
add
push
jecxz
pop
cmp
adc
loopne
call
jne
gs
push
xor
call
prefetchwt1
or
mov
mov
fild
fwait
shl
mov
sbb
pop
jb
jecxz
xchg
sub
ins
in
inc
xor
iret
gs
rcl
and
and
(bad)
dec
out
adc
js
movs
fwait
push
pop
push
mov
sub
mov
es
sbb
xor
fs
int
xchg
call
and
mov
scas
xor
jg
fndisi(8087
popa
inc
(bad)
pop
xchg
std
adc
and
mov
std
dec
xor
daa
xor
dec
(bad)
retf
or
push
inc
fiadd
pop
cld
mov
dec
mov
and
test
cmp
rcl
sbb
scas
jg
add
repz
jmp
jg
dec
nop
pop
xchg
inc
mov
shl
lahf
push
ret
cwde
push
add
push
test
jnp
adc
lahf
or
call
fcom
push
jle
pop
add
jne
in
push
aaa
(bad)
cmp
inc
repz
pop
dec
sbb
mov
je
sub
retf
mov
xchg
push
enter
mov
sub
ins
movs
stc
repnz
pop
scas
sahf
xor
fwait
cdq
push
mov
dec
inc
sub
mov
and
aaa
sbb
std
fidiv
or
lock
pop
cmp
sbb
int3
test
pop
mov
(bad)
cwde
cmc
sbb
mov
je
add
cmps
mov
das
jns
mov
into
jge
ret
mov
xchg
cld
dec
call
mov
xor
shr
inc
jmp
aam
lods
retf
adc
ins
ret
adc
xor
add
jbe
jae
test
stos
xor
aad
mov
and
sar
sub
xchg
sbb
lahf
mov
js
rol
mov
out
das
cli
ins
stc
cmp
in
outs
push
lock
mov
dec
mov
(bad)
cmp
fsubr
jmp
bound
add
push
or
mov
inc
and
ins
hlt
into
xchg
push
pushf
movs
push
cmp
xchg
ins
jmp
pop
aad
ss
test
pop
jb
sub
(bad)
xchg
sti
pop
retf
ja
cdq
jmp
jge
std
xchg
fwait
xor
ins
out
sar
popa
xor
cmp
jae
jne
jle
sahf
inc
test
mul
sbb
add
push
in
out
imul
jmp
call
aaa
enter
add
dec
and
xor
mov
fbstp
mov
and
push
cmps
mov
dec
mov
mov
call
ja
sub
cmp
mov
jp
xchg
into
jmp
xor
push
loopne
retf
mov
xchg
fsubr
loope
cmp
(bad)
push
in
mov
and
mov
(bad)
fisttp
shl
leave
push
mov
or
sbb
push
in
mov
lock
jns
out
sub
mov
xor
xchg
outs
mov
repnz
pop
jle
shl
movs
data16
outs
std
push
push
sbb
test
and
ins
cmp
and
mov
rcl
ds
(bad)
es
(bad)
int3
in
jecxz
into
test
push
fcmovbe
sti
xchg
inc
push
xchg
movs
mov
or
nop
pop
ins
es
aam
(bad)
fucomi
mov
sti
(bad)
pop
sar
loop
xor
fdivrp
daa
dec
fcomi
(bad)
or
out
fucomi
mov
das
lds
sub
pop
mov
repz
pop
fwait
mov
mov
popf
or
clc
loopne
dec
stc
adc
push
ds
fdecstp
in
fimul
mov
adc
sub
(bad)
jecxz
jmp
cmp
int
pavgw
dec
into
xchg
repz
jl
into
je
lahf
dec
retf
nop
and
adc
pop
dec
inc
les
ss
cmps
jne
test
mov
mov
in
jno
repnz
pop
xchg
or
mov
outs
cmps
adc
push
enter
rol
jb
loopne
mov
iret
push
jmp
jg
inc
adc
mov
inc
and
pushf
push
dec
adc
cli
mov
jecxz
in
mov
pop
in
cmp
das
mov
mov
stos
or
(bad)
xlat
fimul
or
loope
and
ror
mov
jecxz
shl
add
fadd
rol
outs
rol
jne
in
mov
sbb
adc
and
loopne
mov
ins
push
and
xchg
out
es
add
inc
inc
lea
jmp
sbb
add
add
popf
or
adc
or
mov
pop
or
loopne
stos
lahf
and
das
lds
imul
dec
pop
je
adc
call
mov
inc
dec
ja
jmp
in
add
test
or
repnz
sub
pop
mov
stos
xchg
xchg
stos
or
pop
or
ss
sbb
cmps
shr
dec
xchg
mov
cmps
or
mov
retf
mov
test
push
push
mov
out
enter
mov
sbb
jae
adc
sbb
imul
add
cmp
nop
mov
sti
jo
fcom
cmp
fnstcw
mov
push
cli
cmp
push
push
add
std
dec
sub
test
add
adc
test
mov
je
xchg
fwait
and
out
mov
mov
inc
mov
out
push
addr16
dec
xor
aas
cmps
mov
or
mov
adc
jmp
scas
rcl
cmp
jp
test
push
leave
xchg
or
jbe
xchg
sbb
shl
das
ret
sub
xchg
cmp
jmp
sbb
aas
loopne
in
mov
xlat
std
mov
sbb
pop
push
inc
rcl
mov
mov
cwde
mov
popa
pop
pusha
fimul
ror
jl
ret
scas
xchg
call
mov
xor
out
xchg
xchg
or
mov
call
adc
(bad)
xchg
adc
dec
imul
xchg
xchg
les
jbe
dec
movs
pop
outs
pop
sbb
(bad)
dec
popa
or
mov
jmp
and
jge
push
jnp
out
arpl
fs
ins
stos
retf
rsqrtps
sub
cld
lods
rcl
cmps
sbb
adc
imul
popf
stc
test
sti
cmp
jne
mov
rol
adc
ja
xor
out
mov
scas
mov
pop
fiadd
xchg
aad
jae
xchg
inc
push
jns
pop
mov
xchg
in
sbb
les
push
in
rol
cmp
push
dec
call
cmp
cmp
or
and
stos
mov
sub
cld
das
(bad)
adc
psrlw
inc
call
cwde
mov
aas
imul
or
(bad)
inc
fstp
or
dec
mov
sbb
mov
outs
add
(bad)
aad
cmps
sbb
mov
addr16
ss
popa
sbb
fs
xchg
or
jae
dec
and
cdq
rcl
jp
or
pop
inc
sub
mov
call
xchg
adc
mov
sub
je
ficom
movs
adc
std
ror
mov
push
imul
jnp
cmps
jnp
xchg
jmp
dec
inc
inc
call
addr16
retf
mov
popf
shl
sbb
sbb
mov
push
loope
cs
nop
bound
mov
sbb
add
mov
ffreep
ret
lds
loopne
out
mov
and
sbb
add
test
(bad)
(bad)
push
mov
(bad)
or
std
jb
push
mov
cmp
jns
retf
inc
cmp
mov
push
ja
xchg
lea
adc
cmp
xor
mov
fstp
ins
cs
scas
les
shr
sbb
aad
add
add
pop
xchg
movs
xor
xor
and
mov
outs
arpl
(bad)
lock
and
cs
adc
jo
and
lods
xchg
add
mov
(bad)
xor
es
ja
fcomi
pusha
fwait
or
test
aas
gs
xchg
sbb
push
push
stos
jnp
arpl
xor
sub
sbb
gs
jb
cli
(bad)
adc
mov
mov
jns
and
jmp
movs
mov
lods
call
repnz
mov
jmp
jo
repz
imul
mov
in
mov
in
ins
dec
pop
and
pushf
mov
mov
mov
fnsave
addr16
dec
lock
dec
push
mov
jnp
dec
inc
or
jecxz
call
call
enter
jge
daa
adc
fbld
jmp
jmp
rol
push
xor
fimul
push
mov
ret
into
sti
pop
fs
in
add
cmp
or
push
les
push
sub
xchg
aas
xor
xor
pop
call
xor
or
dec
dec
pop
test
ds
sub
mov
retf
push
aas
idiv
(bad)
jp
xchg
dec
adc
pop
cli
bound
(bad)
mov
sub
mov
mov
and
or
sbb
ds
fidivr
out
ss
or
ret
test
aaa
test
mov
jp
cwde
mov
cs
pop
repz
dec
icebp
cwde
ud2
int3
mov
mov
xchg
mov
inc
and
xor
loop
inc
jmp
fild
add
(bad)
pop
mov
cmp
add
dec
retf
mov
mov
stos
neg
repz
cwde
inc
adc
(bad)
xlat
mov
imul
push
and
int3
pop
jns
xor
fwait
ins
and
lahf
xchg
mov
ds
dec
in
rcl
scas
cmp
test
xchg
fxch
aad
sar
(bad)
jg
sub
push
xchg
fidivr
sbb
test
sub
call
pop
inc
mov
xor
and
ss
retf
mov
jg
test
lds
mov
(bad)
mov
or
xchg
push
mov
cdq
popa
mov
mov
xor
fld
scas
out
xchg
mov
cmps
push
aad
cdq
mov
pop
outs
cdq
jle
jl
enter
movs
arpl
sbb
(bad)
lock
adc
adc
dec
xor
or
aas
sub
(bad)
jo
sbb
push
mov
popf
hlt
push
xbegin
or
dec
mov
lods
xchg
or
pop
(bad)
int
cmp
push
and
inc
sub
movs
lds
pop
dec
cmp
push
in
sbb
test
push
xchg
and
pop
xor
push
ss
add
call
or
mov
jbe
or
fwait
call
cmp
mov
mov
lock
cmps
push
retf
add
inc
pop
add
push
pop
xor
fs
xor
dec
mov
mov
pop
out
mov
inc
add
shl
into
les
iret
push
stc
push
jo
push
jg
cs
or
sti
or
jno
mov
outs
pop
and
xor
in
jmp
dec
xchg
in
repz
ror
mov
rol
ja
imul
sbb
mov
push
xchg
adc
adc
aam
cmp
mov
addr16
mov
inc
popa
clc
loop
movs
into
jmp
push
cmp
ret
fsubr
cmp
push
mov
sbb
xchg
call
push
xchg
push
retf
xor
jne
xchg
outs
inc
pop
sub
mov
test
jg
or
fld
stos
push
jg
cmp
pop
mov
cmps
push
lds
jmp
dec
push
int
lods
sbb
or
sub
inc
mov
cmc
xchg
out
xor
push
sub
imul
xchg
out
sub
jne
mov
mov
loop
nop
or
loop
pop
jmp
add
adc
add
fidivr
data16
cmp
lock
adc
xor
dec
rcl
test
out
xchg
in
pop
pop
dec
push
or
push
fisubr
mov
rcr
or
gs
jg
aad
js
sbb
movs
inc
aad
mov
cmp
sub
lahf
cmps
fnstenv
movs
or
mov
push
retf
mov
push
out
(bad)
xchg
and
test
fs
dec
xchg
adc
loopne
push
and
pop
mov
inc
xchg
sub
pmulhuw
fcmove
xor
or
fistp
es
arpl
mov
popf
out
mov
in
mov
arpl
fisttp
xchg
(bad)
bound
mov
fwait
mov
pop
adc
shl
ss
push
pop
dec
or
mov
jo
icebp
pushf
mov
pop
hlt
iret
int
pushf
sbb
push
cmc
push
jmp
or
idiv
out
popaw
(bad)
inc
clc
pop
inc
add
dec
mov
cmp
out
pop
xchg
push
push
xor
dec
add
movs
sahf
shr
hlt
cdq
fcom
cmp
dec
or
popf
xchg
jmp
cmp
inc
jmp
mov
das
fsubr
mov
sbb
scas
(bad)
cdq
int3
sub
jmp
call
mov
pandn
cs
retf
sub
cmps
outs
setg
(bad)
adc
mov
fprem1
icebp
fwait
aaa
push
ds
std
jns
jmp
in
sbb
adc
jo
add
cli
in
stos
push
jl
retf
pop
out
dec
movs
test
nop
mov
addr16
fild
or
dec
rcr
movs
int3
imul
xor
xor
pop
jb
hlt
sbb
outs
mov
imul
lds
or
or
push
icebp
shl
gs
jbe
hlt
xchg
inc
add
(bad)
addr16
inc
test
cli
fsubr
lea
mov
sbb
movs
and
sub
in
xchg
fcmovbe
sbb
add
adc
les
and
jmp
sbb
scas
mov
or
inc
mov
loop
or
push
jo
out
(bad)
cmp
mov
lds
repz
inc
jl
data16
or
pusha
jle
js
adc
sub
jne
pop
adc
sbb
mov
lock
jns
stc
sbb
push
out
pop
dec
or
sub
sbb
cmp
jo
jp
adc
lods
xchg
mov
fwait
lods
(bad)
push
(bad)
(bad)
cwde
cmp
in
cwde
imul
cs
add
push
retf
xlat
es
shr
test
jg
lahf
bound
sti
cmp
jno
adc
jg
(bad)
out
fst
adc
popa
shr
or
xor
adc
push
gs
jmp
mov
imul
sbb
cmp
dec
mov
add
loop
mov
mov
inc
push
sub
movs
gs
cmp
jnp
mov
and
lea
pop
pop
dec
jmp
jne
sar
repz
ret
cmp
xor
fld
cmps
retf
adc
add
pusha
ror
and
pop
in
mov
dec
inc
xor
mov
call
je
test
mov
repnz
mov
cmp
rcr
xor
cmps
mov
mov
rcr
mov
dec
sar
cdq
adc
jle
rcl
and
nop
lock
fnstsw
jo
enter
jb
mov
nop
xlat
outs
bound
test
gs
sbb
xchg
scas
mov
sbb
mov
cmps
sbb
test
stos
jnp
div
inc
adc
mov
(bad)
xchg
data16
test
add
xlat
pop
push
inc
repz
daa
sub
icebp
(bad)
clc
inc
push
mov
push
or
cmp
pusha
fadd
push
mov
adc
jnp
cmp
push
mov
leave
iret
bswap
test
xchg
nop
mov
(bad)
jmp
jo
sbb
loopne
lahf
push
mov
push
lar
fxch
lea
mov
sbb
cmp
sbb
push
or
cmp
mov
repnz
jge
sbb
xor
pop
lock
xor
popf
jno
cmp
push
dec
sti
cwde
not
jge
mov
mov
add
cmp
fldenv
test
jle
retf
pop
dec
cmp
pop
mov
test
push
mov
or
jnp
push
aaa
cmps
iret
outs
cmp
cmp
cmp
test
cli
lods
dec
mov
push
test
cli
inc
nop
and
jnp
inc
add
pop
sub
mov
call
or
pushf
pop
jmp
call
shl
mov
retf
dec
push
and
adc
pushf
mov
imul
adc
sar
adc
sahf
xchg
ret
js
fwait
xchg
sbb
fs
cdq
jecxz
add
(bad)
sbb
test
int3
jmp
out
xchg
xchg
xor
push
jp
dec
mov
push
(bad)
js
cmp
gs
bound
xor
mov
and
iret
repnz
rol
jge
shr
and
add
mov
pop
fld
leave
icebp
iret
sub
lahf
and
aam
inc
push
inc
lock
add
cdq
(bad)
mov
popf
data16
mov
mov
mov
cwde
lock
aas
cwde
dec
push
hlt
mov
fldcw
es
push
es
fs
add
and
int3
aaa
sar
jbe
sbb
jg
sbb
sbb
mov
cmp
mov
ins
gs
das
cmp
aas
mov
call
push
xchg
xor
cmp
cld
es
mov
push
cs
out
bound
sar
sti
ror
xchg
dec
(bad)
or
and
fmul
xor
icebp
cmc
mov
and
stc
pop
fistp
mov
(bad)
enter
pop
daa
dec
fcmovnb
push
stc
xchg
(bad)
hlt
(bad)
scas
int
xchg
fwait
push
jmp
pop
mov
outs
(bad)
cmp
xchg
mov
ror
(bad)
ror
add
adc
in
jo
fwait
sub
mov
sub
mov
clc
sti
jo
stos
dec
mov
or
aad
and
adc
(bad)
sti
pop
adc
inc
sub
xchg
aam
push
jg
mov
movs
leave
outs
fiadd
out
es
inc
mov
inc
popf
ja
jo
lock
outs
dec
add
xor
adc
call
(bad)
mov
in
jne
xchg
mov
pop
pop
inc
out
hlt
push
mov
jmp
ja
mov
pop
popa
aad
push
leave
test
les
sub
ror
out
sub
(bad)
or
cdq
xchg
dec
(bad)
cmp
loop
cli
push
sbb
scas
test
dec
push
cli
cmp
pop
mov
arpl
pushf
daa
add
cmp
data16
rcr
add
mov
pop
push
rcr
cmp
dec
jns
mov
mov
bound
or
test
adc
cs
jmp
pop
and
mov
and
in
lahf
aas
cmc
mov
out
xchg
push
(bad)
xor
cli
div
fmul
xchg
sti
cmp
sahf
mov
into
push
mov
sbb
pop
cdq
loop
cli
xchg
test
inc
mov
leave
inc
xchg
fdivr
mov
jecxz
pop
ret
test
push
pop
mov
add
cmp
jecxz
and
fwait
dec
jmp
jne
push
mov
xor
ja
cmps
add
mov
shr
jns
pop
inc
cmp
mov
cmp
push
stos
std
xchg
loop
pop
test
or
and
(bad)
stos
dec
xor
imul
sar
ds
mov
dec
fadd
lahf
(bad)
adc
pop
loopne
pop
call
iret
ret
movs
outs
je
ds
enter
(bad)
outs
les
cmps
inc
(bad)
call
jp
sbb
stc
imul
data16
cmps
js
aad
popa
jnp
mov
xchg
in
into
and
sbb
dec
mov
or
pushf
or
gs
push
mov
nop
lds
outs
mov
mov
daa
cmc
popa
sbb
cmp
dec
push
outs
imul
mov
mov
mov
xor
cs
popa
cmc
jmp
dec
cmp
sbb
ins
test
inc
push
sub
push
imul
and
sbb
test
aaa
mov
mov
mov
mov
push
adc
xor
cmp
out
out
pop
mov
jns
outs
test
mov
scas
push
xlat
push
jmp
xor
fneni(8087
xchg
sbb
mov
loop
sbb
adc
jg
in
(bad)
adc
jg
push
(bad)
xor
das
outs
dec
jecxz
pop
(bad)
mov
xlat
in
out
shl
fdivr
xor
pop
jecxz
pop
dec
cmps
je
fldenv
js
jne
push
inc
or
(bad)
in
nop
fnstcw
xchg
neg
xor
hlt
leave
outs
jbe
cmp
cmp
mov
push
jl
jmp
fwait
in
in
test
rol
jae
inc
shr
push
jp
add
stc
ret
xchg
shl
dec
fcomp
adc
retf
arpl
adc
adc
inc
jle
aam
jmp
cvtsi2sd
jb
mov
cs
push
fwait
jae
or
test
push
jge
sbb
imul
cmp
into
jmp
xor
(bad)
sbb
icebp
mov
cmps
stc
or
sbb
call
mov
retf
jae
cmps
popf
mov
cmp
data16
aas
lock
arpl
mov
neg
cmp
pop
out
mov
mov
(bad)
(bad)
setno
and
retf
clc
int
dec
inc
fiadd
into
cmp
mov
stos
fisttp
dec
sub
xor
hlt
test
test
ins
sub
mov
sbb
pop
cmps
xchg
sahf
sbb
jge
mov
push
bound
les
xchg
(bad)
jnp
xlat
bound
xor
xor
stos
shl
mov
pop
xchg
clc
add
daa
scas
jecxz
(bad)
mov
ror
out
in
adc
mov
daa
icebp
mov
rcr
jae
jns
pop
adc
call
jae
loopne
rcl
mov
sbb
push
mov
fwait
mov
mov
out
js
inc
pushf
xchg
and
jnp
inc
leave
sub
int
mov
leave
je
(bad)
pop
mov
icebp
(bad)
mov
sbb
sub
cmp
sub
addr16
fistp
push
fdivr
sub
fcomp
mov
retf
add
sar
arpl
mov
xor
lds
clc
mov
je
add
mov
inc
lock
call
xchg
fs
add
dec
sbb
push
shl
mov
pop
das
push
les
pop
xchg
sbb
iret
jmp
je
repz
popa
js
mov
and
test
xor
enter
int3
dec
pop
xor
inc
adc
add
mov
mov
js
pop
push
sbb
out
stc
test
add
push
inc
adc
push
fs
popa
popf
lock
mov
into
aas
les
popa
xor
jmp
jle
sbb
dec
ror
pop
retf
lea
(bad)
imul
mov
adc
mov
repnz
daa
vmptrst
jge
mov
mov
imul
loop
jp
cmp
jp
mov
dec
sbb
mov
sub
mov
xchg
mov
or
adc
add
add
add
test
add
std
push
mov
mov
sar
cmp
pop
cmp
add
gs
dec
sub
fnsave
ror
xchg
mov
push
mov
ins
imul
stc
and
jmp
and
daa
(bad)
into
std
fwait
cmp
sbb
fwait
cld
retf
mov
lods
inc
lods
je
daa
add
add
or
repz
mov
scas
fs
mov
jl
jp
rol
sub
fucomip
pop
jmp
cmp
cld
call
mov
pop
adc
inc
sar
mov
mov
cmps
or
and
jl
push
outs
pop
ret
mov
hlt
sti
(bad)
mov
jg
repnz
test
sbb
add
cld
jle
fisttp
inc
adc
fs
(bad)
enter
scas
dec
push
push
push
and
xchg
lea
adc
stos
mov
movs
in
cmp
sub
dec
test
rcl
lea
test
jecxz
jl
mov
jns
sub
mov
adc
xchg
push
inc
ja
idiv
pushf
rcr
clc
adc
ja
pop
sub
stc
mov
xchg
daa
xchg
cmp
add
nop
out
je
sahf
es
scas
(bad)
dec
xchg
xlat
shl
test
in
pop
dec
pop
and
adc
or
fnsave
popa
jp
push
pop
lahf
fdiv
jg
shufps
and
(bad)
jmp
pop
or
xchg
push
sub
and
sbb
cld
or
and
out
inc
sub
sub
adc
and
mov
add
(bad)
int3
pop
inc
cmp
xor
fwait
hlt
clc
or
(bad)
leave
mov
ss
call
sbb
cmp
jg
and
inc
inc
shl
push
or
sub
int
mov
pop
add
outs
leave
fdiv
xchg
jp
vmovaps
inc
sbb
push
mov
jl
xchg
sub
cmps
inc
jmp
pop
or
xlat
je
jns
xor
(bad)
out
cmp
pop
and
retf
mov
je
jae
or
pop
fcmovnu
rcr
mov
dec
ss
mov
shl
xor
pop
jno
jle
sub
lea
out
pop
mov
call
stos
cli
push
icebp
pop
mov
in
fsub
push
fs
mov
retf
std
jge
rcr
sti
pop
dec
xchg
mov
fst
jnp
sti
adc
cmp
mov
pop
cs
daa
aaa
pushf
inc
repnz
repz
cwde
out
cmp
cli
sbb
fs
enter
adc
repz
ror
lods
mov
popa
pop
sub
movs
jne
sar
loopne
in
iret
pop
jae
cmp
test
pusha
jmp
pushf
xor
aam
int
dec
push
mov
xlat
jne
xor
andnps
inc
mov
sbb
cwde
aas
fisubr
push
pushf
push
push
or
outs
dec
leave
pop
outs
movs
xor
cmp
sub
xor
sbb
sahf
std
out
nop
cs
js
rcl
adc
mov
test
jb
and
jbe
or
mov
mov
sbb
shr
mov
lods
nop
xor
cmp
xor
dec
sbb
shl
xchg
pop
test
aaa
pop
data16
ins
mov
call
fs
push
imul
sub
inc
ficom
and
repz
cli
sbb
aas
mul
add
loopne
and
dec
sbb
daa
popf
outs
push
aam
xor
dec
nop
je
mov
mov
sbb
lds
inc
into
and
not
ret
mov
addr16
repnz
mov
sub
and
xor
gs
mov
mov
test
or
ror
stos
mov
and
and
jno
sahf
and
bound
in
mov
(bad)
adc
sub
mov
mov
mov
pop
pop
in
lods
sub
ret
js
jne
xchg
mov
sub
cmp
jmp
pop
xchg
jno
bound
leave
mov
imul
call
cdq
dec
inc
xchg
push
in
leave
in
cmps
sub
call
mov
mov
out
jae
and
add
push
jl
xchg
pop
push
push
jl
add
fcmovu
lock
das
or
or
inc
idiv
sbb
sbb
mov
push
outs
pop
int3
outs
xchg
in
push
and
ins
stos
ret
adc
or
xchg
inc
icebp
jo
outs
aas
je
gs
xor
leave
cmp
jge
in
out
cdq
loop
clc
ror
in
(bad)
repnz
nop
dec
xlat
inc
cwde
pop
inc
push
jae
jl
dec
sbb
adc
mov
adc
inc
xor
mul
ret
push
mov
cmp
pusha
pop
pop
loope
or
dec
dec
ins
es
aas
cmps
sub
loope
and
mov
inc
aam
ja
mov
dec
xor
xchg
dec
lods
cmp
das
test
(bad)
jne
mov
into
or
pop
popa
or
mov
or
mov
icebp
daa
in
adc
or
clc
test
mov
dec
mov
test
xchg
xchg
inc
stc
stos
jecxz
sub
mov
jge
fisub
xchg
xor
pop
in
add
xor
inc
push
ins
outs
or
inc
jbe
test
imul
mov
fwait
inc
in
cmps
test
inc
cdq
mov
sar
imul
hlt
ds
lods
jmp
(bad)
and
sbb
xor
jno
popf
popf
xor
jmp
retf
sbb
cwde
mov
cs
fisub
mov
mov
xor
mul
sub
xor
inc
shl
xchg
out
cmp
and
div
xchg
xchg
push
inc
xchg
jmp
xchg
loopne
dec
rcl
push
mov
aas
push
pop
cmc
retf
loope
sub
cmps
sub
out
adc
cmp
adc
mov
jae
jne
rol
arpl
adc
pop
in
add
inc
loope
daa
in
cmps
pop
or
pusha
test
dec
xchg
enter
pop
aad
stc
push
repnz
outs
jle
retf
rcl
ret
ds
repnz
xchg
or
xchg
out
sbb
(bad)
call
cmps
mov
fdivr
mov
mov
stos
inc
sub
hlt
test
sbb
arpl
pop
sub
sahf
xchg
ds
jbe
arpl
cmc
loopne
sub
data16
and
xor
dec
add
xchg
loopne
xchg
adc
xchg
jp
enter
pushf
dec
mov
jno
mov
xchg
xchg
ror
cmc
add
xor
cwde
dec
mov
fistp
test
out
dec
jnp
push
jecxz
shr
call
clc
jge
cs
jp
xor
push
mov
ss
inc
lds
loope
outs
dec
mov
mov
pop
sub
sub
jp
dec
mov
aam
mov
rol
out
das
jne
pop
pop
int3
push
cli
sbb
(bad)
xchg
ins
mov
push
push
mov
cmc
add
sbb
iret
push
xor
mov
lea
cmp
cmp
arpl
add
mov
scas
adc
xor
in
dec
xor
es
mov
inc
cmp
xchg
add
sahf
mov
es
xchg
mov
je
and
push
xchg
jmp
rcl
mov
in
out
les
(bad)
cmp
xchg
push
mov
sbb
push
scas
sbb
pop
add
sbb
sub
or
mov
fs
cdq
dec
or
xchg
(bad)
pop
lahf
sbb
fsubp
adc
sahf
enter
stos
push
inc
push
push
in
fldcw
xchg
rcl
sub
jne
jae
pop
inc
dec
jge
dec
cli
je
popf
sub
adc
enter
int3
sahf
je
mov
pop
xchg
jmp
adc
add
test
mov
sbb
nop
dec
sub
sbb
outs
sbb
jl
mov
dec
std
xor
addr16
nop
dec
push
or
sahf
push
scas
cmp
sub
jne
jb
mov
sbb
xchg
aad
add
je
scas
dec
popa
or
ret
inc
fwait
ja
dec
(bad)
mov
jnp
adc
adc
arpl
push
add
in
dec
pusha
addr16
mov
add
jmp
push
jge
or
call
adc
rol
xchg
push
ins
or
pushf
pusha
mov
mov
popf
add
mov
sub
and
inc
ror
push
test
test
jle
jb
add
xlat
sub
cli
std
add
shl
sbb
cmp
cvtps2pd
out
jbe
scas
ins
mov
adc
xchg
xchg
fldcw
pop
in
test
lods
pop
dec
ins
arpl
imul
retf
mov
retf
scas
cmps
in
aam
or
mov
leave
sbb
xor
loop
(bad)
outs
or
pop
sbb
shl
data16
xor
stos
dec
xchg
push
or
xchg
xor
add
inc
in
popa
jmp
movs
sbb
and
push
shl
and
or
push
fnstenv
xor
adc
xor
xchg
fs
fstp
push
adc
mov
jnp
je
pushf
scas
shl
js
test
add
adc
xor
pop
xchg
sub
aad
(bad)
push
aad
push
mov
clc
ds
movs
ja
xchg
pop
add
dec
and
dec
jp
xchg
push
xchg
fistp
push
aad
push
mov
loope
mov
pop
lods
adc
pop
inc
imul
inc
xchg
inc
push
(bad)
pop
arpl
lods
fimul
shl
pusha
xor
add
enter
pop
popa
retf
stc
shl
xchg
mov
push
mov
lods
adc
jno
sbb
retf
fwait
lds
rcr
and
int
xchg
call
retf
xchg
and
pop
test
retf
repnz
cmps
and
ret
mov
jmp
bound
mov
ins
jns
inc
aas
(bad)
xchg
mov
mov
call
enter
add
sbb
cmp
fs
mov
or
mov
repnz
repnz
cmp
ret
mov
pop
das
pop
mov
sub
pushf
loope
dec
sti
(bad)
int
gs
pushf
mov
(bad)
fidivr
fld
xor
ss
leave
push
push
xchg
adc
ss
es
inc
cmp
sub
out
jmp
inc
popf
aam
or
xor
inc
imul
pop
adc
sub
sti
ficomp
int
sub
adc
adc
int
xchg
mov
ss
std
xchg
pushf
neg
lea
retf
adc
pop
and
fwait
mov
jo
(bad)
cld
jmp
test
sbb
xchg
out
adc
dec
mov
call
xor
out
adc
in
stos
inc
dec
dec
fcomp
push
dec
sub
inc
and
fistp
or
jno
push
jbe
outs
sbb
inc
(bad)
test
outs
mov
and
fimul
push
mov
xor
stc
cli
ds
xor
add
out
jecxz
jle
repz
test
pop
and
add
jno
rcl
and
xchg
jb
ins
(bad)
enter
movs
or
test
out
and
cmp
cs
pop
pop
jl
mov
mov
xchg
iret
mov
fs
cwde
or
jp
sub
fchs
ds
mov
cmp
jl
add
sbb
stc
in
jae
xor
aad
cmps
push
push
scas
call
das
sbb
data16
xchg
std
aaa
jno
lea
lea
jp
ja
sub
inc
sbb
ds
mov
mov
call
push
adc
movs
sub
mov
xor
sub
and
mov
push
sahf
ffreep
(bad)
je
out
leave
jno
jmp
repnz
lods
adc
xchg
ds
xor
or
xor
lods
or
pushf
xor
push
sub
push
xor
push
pop
iret
fidivr
add
and
xlat
jl
inc
jnp
cmp
mov
hlt
lods
test
jnp
movd
mov
sbb
and
ficomp
dec
dec
out
cmp
mov
sub
sub
sbb
fdiv
dec
pop
out
ins
sub
out
pop
repz
fsincos
pop
js
adc
addr16
stos
xchg
jmp
add
imul
or
mov
mov
std
cmp
adc
repnz
mov
scas
dec
pop
jg
sub
fwait
adc
ret
inc
mov
xor
cli
inc
xchg
xor
jo
mov
jbe
push
push
adc
fld
mov
or
cdq
in
xor
inc
sbb
lods
aam
mov
or
and
popf
data16
dec
or
push
xchg
ret
sbb
(bad)
adc
pusha
hlt
stc
jl
mov
std
(bad)
push
dec
mov
mov
call
ret
xor
ss
test
push
or
mov
adc
ret
(bad)
mov
adc
(bad)
sti
and
test
ins
fadd
add
mov
mov
icebp
dec
repnz
sub
or
mov
jge
xor
and
cmp
iret
inc
xchg
adc
in
mov
(bad)
mov
and
fs
jae
les
dec
or
push
les
ret
in
lahf
scas
inc
sub
bnd
push
push
mov
in
inc
fdivp
clc
and
dec
idiv
retf
ins
lock
imul
xor
neg
dec
mov
adc
rcr
(bad)
jp
lock
dec
and
dec
push
rcl
cs
adc
ret
or
sar
mov
jns
dec
and
and
push
lods
hlt
mov
and
sti
sub
in
sbb
xor
add
rcl
fiadd
cmp
push
pop
jnp
hlt
dec
or
or
pop
inc
dec
push
dec
xchg
inc
enter
mov
cli
or
and
jle
aad
dec
xchg
test
int3
in
aas
mov
adc
sbb
xchg
and
setb
or
call
loop
int3
out
adc
cli
ds
push
add
jno
and
xchg
sahf
enter
mov
stc
mov
sar
arpl
icebp
adc
pushf
daa
cli
adc
iret
and
ret
test
inc
daa
xchg
loopne
push
iret
mov
stos
cmp
test
std
movs
(bad)
inc
shr
pop
jbe
addr16
pusha
or
pop
add
into
jb
adc
xchg
cmp
lods
add
push
gs
xchg
ret
dec
adc
enter
lds
cs
push
retf
dec
icebp
add
or
lds
adc
push
xlat
cld
fs
bound
loop
test
mov
xchg
adc
test
pop
inc
mov
xchg
cwde
jnp
(bad)
ret
push
push
btr
add
ss
cmp
jne
inc
es
add
pop
xchg
in
sub
add
inc
lods
sbb
mov
ja
fiadd
mov
jg
jecxz
dec
shl
adc
call
add
mov
daa
loop
loope
ins
xchg
cmps
jae
jl
int
cmp
xchg
cld
(bad)
retf
adc
sti
fdiv
leave
cmps
inc
xchg
bound
pusha
jno
sub
out
clc
mov
nop
mov
pop
cld
xchg
sbb
fild
ja
dec
rcl
push
stc
jle
xlat
rcr
loopne
iret
mov
rcl
mov
xor
and
inc
push
push
ss
sar
(bad)
pop
dec
and
pop
cdq
mov
stc
(bad)
popf
xor
mov
stc
bound
or
push
iret
xor
pusha
outs
sahf
cmps
inc
bound
ficomp
cdq
shr
imul
sub
mov
rcl
test
mov
pop
mov
add
stos
sub
or
nop
cmp
in
addr16
or
mul
stos
jbe
pop
jnp
sbb
popa
pop
mov
jns
addr16
adc
call
bound
mov
stc
mov
push
jae
cwde
add
aam
mov
or
sahf
iret
xchg
je
cmp
loopne
mov
jb
out
popf
loope
mov
retf
sbb
cli
bound
and
scas
cmp
cs
loopne
cmp
scas
mov
dec
je
sahf
cmc
ds
dec
mov
mov
mov
retf
rcr
mov
sbb
rcr
xchg
xor
jae
lock
jbe
cmp
mov
fld
mov
and
mov
movntps
push
jo
dec
push
cld
xchg
push
cmp
fimul
std
cmp
add
repz
fcom
mov
hlt
cmp
(bad)
je
mov
cmp
pop
add
and
in
imul
dec
mov
ficomp
retf
add
cdq
jo
xchg
adc
data16
push
dec
lds
mov
not
or
xchg
push
sbb
push
add
and
xor
mov
jb
jg
push
dec
mov
add
enter
std
sub
lods
and
pop
sahf
jp
cmps
hlt
sbb
test
in
iret
xchg
and
mov
mov
mov
pop
mov
mov
mov
ret
push
mov
and
addr16
cmps
retf
xchg
imul
(bad)
sub
and
cli
repnz
fstp
dec
and
sub
in
gs
pop
sbb
dec
(bad)
test
fcmovne
sbb
test
clc
or
ja
imul
adc
sbb
and
mov
enter
pop
jle
push
inc
js
out
popf
cmp
cld
and
add
les
stc
mov
mov
jnp
dec
mov
retf
mov
sub
ja
mov
leave
mov
lods
dec
dec
xchg
push
or
sbb
mov
xor
cs
loop
mov
mov
jge
fs
sahf
adc
push
inc
out
lahf
sub
dec
(bad)
loop
fnsave
out
push
jmp
sahf
xlat
mov
icebp
cmp
stos
sbb
pop
jae
pusha
(bad)
jmp
mov
mov
or
inc
js
sub
push
xchg
fnsave
xchg
shl
inc
cmp
bound
in
push
cmp
retf
push
xor
pop
in
out
mov
retf
cmp
xchg
test
jmp
cld
addr16
and
add
sbb
xor
iret
push
push
add
mov
or
mov
in
aas
cmc
test
jge
sub
add
lock
fdiv
fmul
lock
cs
test
movs
jp
cmp
(bad)
fst
add
mov
or
mov
retf
aam
sub
jno
pop
ret
lds
pop
int3
push
les
pop
push
jnp
(bad)
out
and
xor
lods
fistp
movs
loope
pop
clc
xor
jl
into
inc
mov
sbb
dec
jp
inc
mov
jbe
js
out
inc
imul
sbb
ins
(bad)
enter
(bad)
cld
stos
sar
ror
shl
ss
gs
adc
jne
jmp
mov
push
cmps
fidivr
dec
sub
(bad)
out
dec
cs
aas
stos
pop
sub
sbb
adc
lock
retf
pop
out
and
jge
cmp
out
popf
dec
sahf
(bad)
mov
or
ret
or
imul
cld
push
pop
scas
rcr
das
sbb
sub
inc
mov
lods
pop
stc
movs
lock
pushf
gs
outs
pop
adc
cmp
daa
mov
clc
sbb
clc
ins
fsub
sbb
ret
pop
sbb
es
pop
rol
dec
(bad)
sub
sbb
cwde
es
push
daa
outs
in
loope
sub
movs
lahf
add
cmp
add
out
lahf
sub
inc
pop
call
(bad)
cmp
mov
mov
cmp
mov
loope
jmp
cmc
sub
mov
test
adc
dec
cmps
or
xchg
mov
lock
clc
xor
and
sahf
ds
nop
mov
aaa
(bad)
sahf
out
in
mov
mov
mov
inc
and
and
jecxz
mov
sti
jne
mov
scas
call
push
adc
and
jg
movs
jnp
mov
inc
mov
je
xor
ja
(bad)
bound
lahf
mov
or
iret
in
mov
add
mov
and
jecxz
push
dec
cmps
and
(bad)
lods
(bad)
stos
cdq
xor
fsubr
mov
outs
out
in
loope
mov
(bad)
pushf
inc
mov
sbb
mov
jbe
ins
ins
ret
je
(bad)
mov
cmp
push
mov
icebp
pop
in
jge
movs
push
outs
inc
addr16
pop
jecxz
mov
call
cmp
rcl
lock
loopne
loope
xor
add
(bad)
ds
dec
sub
sub
cld
data16
fdiv
stc
add
inc
aam
add
add
loop
lea
xor
fnstenv
mov
in
xchg
outs
and
outs
and
mov
rcr
mov
mov
cmps
sub
sub
loopne
inc
in
xchg
xchg
mov
aam
pop
rol
or
ss
call
xchg
imul
pushf
cmp
cmc
pop
mov
(bad)
and
aas
mov
fst
and
stos
pop
xchg
xchg
push
mov
daa
push
push
xlat
mov
daa
inc
sti
mov
mov
cmc
cmp
mov
hlt
pop
cmp
imul
and
push
inc
push
and
sbb
or
cmp
or
jno
cld
adc
sbb
mov
stos
pop
dec
push
or
loop
jmp
fbstp
pusha
lds
in
xchg
retf
pushf
lock
adc
or
and
sbb
mov
xchg
mov
rep
lahf
lahf
mov
call
fs
(bad)
xlat
sub
push
cmp
nop
jno
dec
mov
cmp
in
jno
retf
push
inc
sub
leave
aas
dec
jb
js
cli
lods
jb
(bad)
or
test
stos
sbb
pusha
hlt
pop
test
jb
push
aaa
sbb
dec
push
mov
pop
xor
dec
cmp
adc
(bad)
or
jns
dec
(bad)
js
mov
push
cmp
mov
pop
pop
or
adc
sub
clc
jle
test
rcr
sbb
mov
sub
xchg
lock
cwde
stos
mov
ds
sahf
call
cdq
cmps
mov
mov
jmp
mov
repnz
pop
add
mov
xor
retf
mov
jb
mov
push
retf
xrstor
int
add
sub
aas
lds
or
mov
sub
xlat
out
xchg
mov
mov
lods
and
jno
xor
mov
mov
xchg
lock
repnz
mov
xor
cmps
push
mov
fdivr
out
lock
pop
adc
retf
cmp
lods
jecxz
mov
stos
mov
loope
daa
popa
sar
retf
test
lahf
push
push
mov
das
arpl
aad
jo
cmps
clc
cmp
hlt
retf
add
mov
fsubr
movs
data16
sub
(bad)
leave
push
fcom
mov
rcr
jbe
xchg
add
adc
or
inc
aaa
stc
add
scas
(bad)
scas
adc
mov
jns
aad
lahf
stos
std
loop
xchg
push
pop
push
leave
mov
adc
mov
(bad)
xor
scas
xchg
cmp
lods
xlat
push
dec
in
stc
mov
cmp
push
jno
movs
push
into
or
push
sub
sbb
shl
xchg
sub
cdq
dec
repnz
inc
jmp
lea
aam
popf
and
cmp
mov
xchg
cs
sub
adc
xlat
jbe
movs
push
sti
pop
idiv
sbb
fisttp
xlat
stos
and
adc
sub
add
out
push
push
adc
(bad)
mov
mov
jne
cli
jb
dec
in
nop
mul
daa
add
ss
push
jnp
sub
or
jle
sub
xor
push
jle
push
fldcw
std
outs
pop
out
into
mov
and
pop
popf
call
add
inc
std
out
mov
dec
lock
mov
enter
cmc
hlt
or
jge
shl
xor
js
mov
mov
inc
(bad)
shr
popa
rcr
loope
fidivr
dec
in
jp
call
int3
xchg
retf
or
fld
dec
sub
adc
test
mov
xchg
imul
fistp
mov
cmc
push
adc
mov
popf
cmps
into
cmp
(bad)
(bad)
fnstsw
rcr
les
sahf
pop
aas
jmp
cli
idiv
int3
mov
mov
fstp
test
adc
stc
into
not
xchg
cmp
cdq
cli
jmp
jecxz
sub
sub
add
xchg
pop
test
lea
test
pop
lods
mov
mov
(bad)
(bad)
in
sbb
das
jo
lds
cmp
pop
fs
cmp
dec
xchg
adc
xor
stos
jle
jg
jo
arpl
call
dec
pusha
mov
mov
mov
pop
scas
mov
inc
neg
push
les
(bad)
cli
rol
fnstenv
and
inc
in
jg
fistp
push
or
cmp
jecxz
mov
clc
mov
ror
dec
cmp
cmp
or
dec
cwde
dec
in
sbb
shl
and
addr16
out
add
sbb
stos
push
mov
loope
xchg
stc
cmps
add
ja
push
dec
jno
jne
not
jg
push
popf
lods
lock
jle
push
(bad)
xor
mov
movs
inc
and
arpl
push
aas
pcmpgtd
jecxz
lds
ds
aaa
nop
mov
mov
sub
add
bound
jno
cmps
neg
xor
push
fadd
movs
icebp
adc
cmp
retf
icebp
fld
in
aas
inc
mov
out
cmps
xor
rol
and
xchg
ds
stos
out
add
fist
ret
call
test
and
inc
inc
out
std
mov
cdq
jecxz
and
enter
je
popf
cmps
or
popf
add
dec
fcomp
and
lods
dec
int
inc
mov
add
ds
idiv
sbb
lods
push
xchg
adc
add
scas
popf
lea
lea
daa
jle
pop
bound
xchg
icebp
fucomip
jecxz
mov
cmp
dec
pop
call
in
sub
jne
xchg
data16
jp
test
mov
jmp
call
mov
push
pop
inc
push
push
jae
jnp
outs
pop
push
mov
inc
ror
pop
and
add
movs
iret
pusha
inc
out
add
pop
sbb
leave
inc
sahf
jge
jnp
test
popf
repnz
test
data16
scas
adc
sub
cwde
mov
add
inc
mov
(bad)
out
or
loope
or
cmp
rcl
mov
jecxz
outs
call
mov
(bad)
fld
ret
sbb
push
pop
jno
loope
push
retf
icebp
cmc
fisubr
in
xchg
add
mov
je
int3
int3
outs
cld
add
ja
call
pop
(bad)
push
ja
or
xor
xchg
mov
inc
adc
stc
push
lahf
and
stc
repz
leave
fsubr
jecxz
shl
xchg
retf
aaa
push
adc
mov
shl
test
jmp
mov
pop
cmp
cwde
loop
in
mov
jecxz
jbe
pop
mov
mov
mov
pop
xchg
fbld
adc
mov
mov
cmc
sub
enter
jnp
fstp
jnp
mov
and
adc
push
cli
or
and
imul
ror
sbb
sbb
dec
and
es
mov
mov
aaa
cdq
icebp
in
mov
out
pop
pop
test
dec
xlat
addr16
test
pop
cmp
aad
sub
js
pushf
loope
cmp
jl
cmc
loope
call
add
fwait
jnp
(bad)
imul
and
leave
stc
scas
push
or
jmp
repz
push
mov
lea
hlt
mov
sti
in
fadd
jae
popa
push
mov
repnz
rcl
or
adc
scas
jbe
(bad)
mov
ins
dec
retf
aad
push
rcl
aad
ja
push
fwait
sbb
shr
cmp
fsubr
adc
loop
js
mov
mov
daa
mov
jmp
dec
sbb
adc
or
in
sub
xchg
push
push
adc
pop
xchg
adc
pop
push
out
pop
sub
mov
arpl
jnp
js
pop
(bad)
push
mov
xchg
iret
scas
in
movs
xchg
in
push
mov
nop
mov
cmp
and
test
movs
enter
std
cmps
retf
mov
sbb
pop
lock
in
or
inc
jecxz
or
std
sub
push
push
push
jge
mov
cwde
out
das
sbb
mov
pop
xor
pop
ja
mov
jno
stos
jecxz
js
push
lock
jge
sbb
cmp
fcmovnu
out
fwait
xor
nop
mov
xlat
mov
scas
clc
out
jl
sbb
test
xchg
test
adc
jne
fisttp
retf
xor
add
or
add
lods
pop
inc
xchg
stos
je
rol
and
xchg
nop
jmp
pop
lods
push
rcl
cdq
rcr
test
or
or
scas
push
out
mov
stos
jae
adc
movs
sub
add
movs
mov
cmps
call
(bad)
lds
inc
bound
nop
mov
sub
sbb
iret
dec
xchg
mov
or
or
ds
xlat
arpl
xchg
out
pop
ja
mov
jno
stos
repz
lahf
pop
and
xor
sub
xchg
clc
outs
mov
aad
xor
fist
ja
cld
and
mov
int
sbb
arpl
adc
nop
xchg
mov
data16
daa
jl
jbe
daa
xlat
lds
loop
imul
pop
add
cwde
out
xlat
repz
xchg
(bad)
popf
pop
lods
in
ss
jmp
sub
hlt
jnp
(bad)
xor
mov
mov
inc
cmp
or
(bad)
iret
xor
xchg
out
cli
mov
or
pop
jno
xchg
outs
(bad)
sysret
call
push
sbb
xchg
or
sub
es
pop
clc
sub
lds
inc
into
lods
xchg
mov
or
pop
adc
pop
mov
movs
xor
std
sbb
cmc
add
pop
dec
rcr
dec
scas
sti
into
inc
les
clc
stos
or
push
dec
and
inc
not
sar
sbb
lods
mov
add
leave
lock
inc
mov
repnz
ror
sub
pop
pop
ins
inc
pop
cmp
xchg
inc
pusha
sti
cmps
clc
les
icebp
popf
and
inc
ret
enter
out
dec
xchg
mov
sbb
neg
ins
stos
mov
push
adc
push
call
and
aam
loopne
bound
mov
int3
imul
gs
and
nop
shl
mov
jmp
xlat
dec
add
into
ds
mov
mov
fmul
xchg
xor
xor
add
ja
ret
icebp
clc
push
xchg
mov
(bad)
or
push
sub
imul
jb
(bad)
push
scas
push
mov
dec
jle
add
xchg
jl
not
outs
xchg
call
jbe
int
mov
shr
jmp
test
sub
xor
ins
push
out
mov
xchg
xchg
rcl
inc
fnstcw
push
or
cmp
jle
pushf
imul
(bad)
arpl
mov
jae
mov
mov
(bad)
lock
arpl
lods
mov
adc
les
ins
cld
popa
xchg
(bad)
adc
cmps
mov
mov
test
rol
fstp
mov
outs
xchg
shr
and
out
mov
lods
dec
retf
adc
in
push
jl
jbe
inc
sub
js
inc
xchg
xchg
fwait
les
ss
inc
fadd
and
movs
dec
dec
sub
add
mov
das
mov
stos
sub
iret
mov
sbb
pop
sbb
repnz
and
mov
cs
dec
pop
mov
push
pop
mov
cmp
retf
add
or
scas
dec
add
into
jecxz
cmp
adc
cmp
jmp
icebp
jns
in
(bad)
cwde
fidivr
in
icebp
fdiv
retf
dec
xor
pushf
int
mov
dec
mov
pushf
inc
dec
dec
sub
cld
aam
fistp
adc
fucomi
mov
adc
xchg
ins
sbb
jb
pop
int3
push
inc
movs
xchg
scas
lds
sbb
mov
mov
pop
or
mov
mov
fwait
imul
sar
daa
fstp
adc
neg
(bad)
push
inc
js
mov
pop
add
or
xchg
jbe
fstp
xchg
xchg
xchg
movs
pop
loopne
hlt
jl
pop
adc
lahf
ins
out
sbb
mov
dec
cld
sahf
or
xchg
out
test
mov
aad
lea
out
pushf
adc
(bad)
mov
mov
cli
sub
js
pop
jno
mov
retf
pusha
(bad)
daa
lahf
pop
mov
ins
call
fsubp
mov
test
xchg
xchg
stc
xchg
adc
aad
sahf
jno
sar
add
pushf
jnp
js
outs
push
push
test
mov
sbb
call
dec
nop
rcr
inc
sar
xchg
and
mov
sbb
push
fmul
mov
and
inc
jne
jo
xchg
jl
mov
clc
cmp
out
inc
mov
pop
mov
fwait
sbb
pop
les
enter
imul
ret
add
jbe
sbb
jecxz
xchg
data16
sub
ins
aad
int3
int3
sti
xlat
movs
sub
in
je
aad
sti
dec
mov
imul
call
sub
sbb
lahf
pop
or
pop
lahf
ins
dec
jecxz
dec
add
std
ficom
sub
inc
adc
call
cwde
js
inc
jne
dec
daa
nop
inc
pusha
mov
fwait
(bad)
je
call
mov
cmp
add
aaa
cmp
test
sbb
movs
sar
jmp
xchg
je
adc
dec
std
je
outs
cmp
jmp
popa
ins
xor
cmps
dec
cmps
push
xchg
call
sub
adc
leave
sub
add
push
mov
jno
dec
test
jno
arpl
inc
jnp
inc
jg
loope
adc
out
ins
sbb
sub
arpl
rcr
jns
jb
retf
dec
aas
not
dec
stos
dec
stos
cs
push
test
fisubr
fwait
push
sbb
into
mov
ins
mov
adc
jmp
dec
ss
into
cdq
mov
mov
inc
in
xlat
scas
push
test
sahf
sbb
shl
outs
pusha
push
ret
sbb
sbb
imul
push
jle
push
loop
xor
out
pop
sbb
icebp
sahf
pusha
aaa
and
nop
sub
jg
pop
mov
repz
mov
icebp
push
pop
std
ror
adc
jmp
addr16
das
xor
sti
jmp
push
(bad)
pop
push
xor
dec
sub
dec
and
ss
imul
daa
xchg
lahf
add
jge
mov
cmps
aad
xor
dec
jae
push
cmps
stc
inc
ja
sub
gs
push
es
mov
jmp
aam
jne
adc
add
sbb
adc
jp
or
gs
dec
sbb
mov
test
push
xor
fs
into
icebp
push
pop
inc
call
icebp
pop
adc
(bad)
daa
or
push
mov
push
lods
mov
sbb
push
inc
jg
xor
rcr
or
jmp
xor
push
push
and
(bad)
stos
clc
popa
cmp
xchg
retf
mov
in
(bad)
jge
pop
aaa
sbb
inc
dec
daa
adc
mov
pushf
imul
lahf
inc
out
das
push
mov
mov
fs
mov
int
jno
jl
ror
mov
or
inc
jmp
jg
inc
or
imul
inc
aaa
ret
mov
popf
cmp
lahf
sbb
cwde
pop
lock
jns
out
inc
(bad)
ret
jmp
xchg
int
cmp
in
es
(bad)
in
out
dec
int3
xor
adc
aaa
ret
bound
push
jle
mov
mov
(bad)
mov
mov
(bad)
push
gs
sub
leave
bound
mov
fisub
repnz
fnstenv
enter
mov
pop
sub
or
fmul
mul
push
or
ret
dec
popf
nop
mov
sbb
sbb
ret
sbb
sbb
sar
fst
cmc
sub
or
call
fs
(bad)
xchg
ins
and
xlat
lds
retf
(bad)
mov
pop
sbb
daa
xchg
or
xor
jae
(bad)
push
inc
ja
or
gs
add
movs
fsubp
cmp
inc
xlat
push
retf
cmp
call
cmp
fisubr
sahf
in
add
call
push
pop
pop
ss
hlt
loope
dec
movs
xor
add
int
or
(bad)
adc
cmp
repz
enter
pop
xor
ss
pop
(bad)
loopne
test
addr16
leave
dec
in
in
add
shl
pop
bound
retf
inc
push
int3
in
dec
daa
and
inc
(bad)
mov
mov
jl
add
lds
fs
rol
mov
dec
adc
test
xchg
xlat
nop
cld
mov
or
leave
loop
retf
pop
or
fsubr
add
out
lea
pop
dec
and
push
mov
inc
mov
jp
push
sub
xchg
or
xchg
retf
cmp
in
dec
mov
cmp
xor
jecxz
fidiv
pop
inc
xor
xchg
cmp
lock
and
gs
push
bound
sbb
sub
popf
gs
sub
pop
jne
sub
scas
das
jl
dec
test
add
arpl
xor
(bad)
fmul
call
dec
sbb
fwait
mov
jo
push
xchg
sub
movs
xchg
dec
lods
jge
mov
jbe
pop
out
add
inc
ficomp
js
or
popa
in
mov
mov
add
repnz
movs
aad
jno
mov
push
xor
aad
adc
hlt
or
sub
mov
cmp
inc
movs
cmp
ss
xchg
outs
jmp
fsub
or
test
sbb
push
jg
movs
push
push
mov
dec
mov
sti
or
jbe
xchg
mov
loopne
push
mov
ins
movs
jno
test
mov
sahf
xor
mov
pop
mov
aam
cmc
ret
sub
add
jo
jne
ja
inc
enter
cmp
test
jg
and
or
adc
jb
sbb
mov
xlat
in
test
movs
push
cmp
arpl
hlt
dec
stc
cmp
test
ds
push
outs
cdq
and
not
xchg
(bad)
pop
ss
lods
sbb
push
retf
cs
jp
mov
enter
(bad)
adc
in
sbb
rcr
xchg
stos
fild
dec
xor
jp
int
pop
mov
mov
mov
icebp
push
or
and
inc
int3
jae
pop
sbb
inc
pop
sbb
jbe
stos
add
stos
sbb
scas
pop
aam
(bad)
scas
stc
jge
cmps
push
outs
das
add
ror
push
aad
xchg
lea
cmp
pop
ds
aaa
cld
push
ins
leave
push
pushf
pop
lahf
mov
fst
out
les
add
mov
push
scas
mov
into
jbe
int
cmp
and
xor
sti
ret
or
leave
sbb
sahf
or
(bad)
leave
add
inc
arpl
int3
addr16
cmp
sti
adc
jp
shl
inc
jo
dec
sahf
mov
push
adc
adc
call
xchg
cmp
dec
mov
retf
sbb
dec
das
add
xor
pop
out
(bad)
dec
pop
stos
jae
jne
adc
mov
or
cmp
ins
(bad)
push
jp
inc
xchg
loopne
repnz
imul
sub
(bad)
fs
ins
pop
fidivr
add
(bad)
cmovns
aas
scas
cs
fwait
jnp
loopne
hlt
cmps
push
js
and
mov
out
addr16
mov
mov
mov
movlps
adc
cdq
sbb
ret
popf
icebp
mov
or
fimul
sbb
rol
ret
add
fiadd
adc
fsubr
dec
out
leavew
mov
sub
hlt
in
mov
hlt
fnstsw
pop
cmp
(bad)
mov
outs
jge
int3
loopne
jmp
jmp
add
jg
xor
lock
xchg
bound
push
fdiv
int
(bad)
loope
ror
jne
(bad)
and
ins
daa
gs
retf
jb
or
sahf
jmp
mov
lods
jno
or
inc
inc
ins
push
fmul
out
enter
add
dec
clc
mov
rol
jmp
mov
sub
stc
cmp
mov
xchg
push
xlat
xlat
and
imul
cmp
adc
int
add
loopne
fdivr
sbb
mov
mov
jp
cmp
retf
(bad)
cmp
icebp
pushf
inc
sahf
clc
mov
test
fsubr
xchg
cmp
cmp
and
lds
js
and
repz
fist
fcom
push
gs
sub
clc
xor
sbb
sbb
pop
jp
pusha
mov
int
inc
xor
stos
rol
and
(bad)
adc
pop
dec
pop
add
mov
popf
and
aas
lahf
pop
add
cmp
sub
in
push
jmp
or
nop
sub
push
ror
mov
inc
cwde
push
retf
adc
cmp
mov
adc
lods
sbb
add
scas
inc
pop
scas
sub
sbb
push
retf
push
jbe
repz
add
imul
in
adc
mov
xchg
xchg
adc
add
out
hlt
aad
sahf
lds
and
lds
mov
sbb
pop
in
dec
inc
int
adc
mov
jge
push
mov
jns
dec
outs
dec
(bad)
popa
push
and
adc
in
xchg
jl
fwait
aaa
hlt
aaa
popa
iret
out
data16
fldcw
arpl
cmc
adc
popf
push
mov
call
test
and
push
fstp
mov
call
or
cmp
xchg
lds
leave
adc
js
adc
xchg
mov
aam
pop
leave
xchg
cmp
xchg
ror
test
cmp
mov
and
push
int
mov
push
ds
jg
sti
or
rcl
imul
cmps
fnstenv
push
pop
test
das
jmp
leave
lods
pop
or
add
and
imul
(bad)
inc
mov
cli
and
mov
and
sub
xor
nop
(bad)
pop
ins
or
ret
ret
pop
mov
mov
mov
pop
adc
retf
pop
call
jmp
sub
mov
hlt
mov
cdq
test
jecxz
jle
pusha
xchg
les
mov
lods
adc
xchg
retf
out
adc
es
inc
push
out
gs
fs
aad
lds
ja
add
jno
dec
cmp
out
push
jo
aaa
xchg
ret
push
cmp
xchg
mov
movs
jle
cmovne
out
imul
retf
movs
cmps
jbe
adc
push
stos
mov
fwait
in
pop
mov
shr
cmp
cmc
shl
xor
push
nop
enter
jbe
pop
rcl
adc
repnz
add
dec
data16
dec
mov
lahf
inc
sbb
mov
sub
cmp
push
rcr
pop
inc
nop
ins
xchg
pop
or
mov
mov
jmp
gs
xchg
jbe
fwait
aad
mov
xlat
arpl
popa
cmps
mov
jg
add
and
in
jecxz
movs
(bad)
test
cs
pushf
mov
mov
and
or
ret
fdiv
sub
mov
into
sbb
jne
jecxz
inc
mov
fisubr
xchg
adc
mov
in
retf
repz
(bad)
mov
xor
xor
aas
mov
call
stc
das
in
pop
into
fbld
sub
jmp
xchg
fsubr
sbb
in
mov
dec
mov
or
mov
mov
and
(bad)
xchg
or
retf
or
add
rcl
mov
add
mov
repz
dec
pop
jo
dec
push
sbb
hlt
loop
mov
jl
jno
mov
movs
sub
add
test
pop
lahf
outs
stos
mov
cmc
ins
(bad)
sbb
xchg
jnp
add
aad
inc
pop
leave
inc
push
sub
ror
xchg
add
mov
push
cmc
rcl
icebp
mov
mov
sbb
xchg
sbb
add
sub
ss
sar
mov
mov
mov
arpl
dec
push
add
int3
mov
pop
add
push
hlt
test
dec
pop
(bad)
mov
sar
push
push
adc
jbe
and
push
mov
or
retf
cmp
cmc
movs
outs
or
repz
jmp
jae
push
pop
aad
or
icebp
out
push
es
movs
lock
push
push
enter
sbb
xchg
adc
fwait
fwait
aas
xchg
sub
xchg
movs
iret
retf
(bad)
cmp
fbld
jb
or
push
js
mov
ds
mov
in
ja
cmp
int
cdq
sar
dec
ret
call
add
in
bnd
loopne
push
and
ret
fsub
inc
lahf
xchg
dec
dec
retf
pushf
jl
ins
jne
iret
xchg
mov
movs
pop
std
in
sub
dec
jmp
cld
not
and
inc
pushaw
jmp
mov
cmp
rol
and
xchg
mov
mov
jno
cmc
loope
clc
(bad)
fnsave
ss
cmps
je
aas
push
xchg
addr16
inc
scas
jecxz
cvttsd2si
(bad)
push
jge
xor
in
les
movs
mov
mov
shl
pop
add
test
push
or
inc
xor
pusha
ret
pop
sub
sar
outs
call
inc
scas
pop
scas
jno
xor
imul
std
stos
(bad)
out
jae
pop
jnp
ss
rcr
popf
xor
pushf
mov
fist
frstor
adc
add
(bad)
lods
pop
(bad)
xlat
mov
stc
fwait
jno
out
fiadd
popf
jg
test
test
je
dec
xchg
xchg
jp
sbb
jno
adc
out
ja
mov
or
push
shl
in
fstp
lahf
fistp
jmp
adc
call
mov
cmp
mov
sub
test
into
inc
sub
or
xor
xor
les
fidiv
sahf
inc
sbb
fdivr
pop
imul
and
lds
scas
jae
and
cvtpi2ps
mov
movs
arpl
xor
xchg
add
add
stos
mov
stc
xor
xor
and
xchg
jnp
stos
sub
and
push
cmp
fs
loop
sti
jnp
inc
ret
mov
jns
adc
je
mov
into
test
icebp
mov
ret
into
sti
sbb
lock
mov
or
xchg
mov
sbb
loopne
xor
or
mov
mov
ficomp
mov
push
(bad)
pop
test
fiadd
sbb
iret
fistp
(bad)
push
repnz
adc
xor
iret
mov
lahf
sub
aas
xor
pop
xor
aad
mov
sahf
ret
push
cld
lock
pop
ret
repz
(bad)
jnp
call
mov
in
jbe
in
mov
push
cmc
push
xor
cmc
fs
mov
retf
movs
scas
inc
fnsave
mov
xchg
adc
sbb
jo
aaa
mov
(bad)
pop
fsubr
gs
mov
scas
adc
fcmovbe
push
into
stos
test
mov
or
fcomp
in
and
mov
sub
sbb
out
in
out
cmp
loope
xchg
add
test
mov
jge
lock
in
push
inc
push
pop
fbstp
push
cmp
dec
jle
fstp
imul
or
or
mov
push
mov
jno
xor
jo
pop
push
(bad)
fidivr
dec
xchg
jecxz
mov
stc
push
popf
movs
mov
sbb
add
mov
xchg
enter
and
xor
dec
sub
imul
js
fdivr
popf
test
push
mov
dec
adc
mov
xor
gs
fwait
mov
jmp
push
es
xor
mul
jbe
sub
shl
mov
add
inc
jne
fld
sahf
js
int
bound
dec
xchg
mov
(bad)
xlat
xor
popw
movs
fdiv
inc
cmp
jge
out
ins
data16
jnp
pop
and
jae
shl
push
mov
sub
lea
pop
test
call
scas
inc
mov
shl
je
stos
mov
ja
cmp
pandn
icebp
(bad)
pop
cmc
(bad)
cmps
push
retf
xor
and
dec
gs
jbe
xchg
xchg
repnz
dec
push
fld
or
pushw
ret
stos
aad
inc
pop
pop
jb
xchg
adc
loopne
pop
popf
outs
pop
mov
xchg
push
inc
iret
icebp
cli
aad
ret
jno
(bad)
pop
aas
(bad)
clc
push
imul
je
push
inc
in
and
sbb
jl
cmp
pop
mov
sub
adc
imul
push
and
std
js
lahf
les
shr
cmp
test
in
in
inc
inc
and
xchg
js
xchg
ja
jecxz
shl
fdivr
add
adc
icebp
jno
mov
adc
pop
inc
in
jmp
cwde
pop
or
es
cmps
sti
in
inc
sub
mov
arpl
mov
xor
(bad)
sbb
mov
add
ja
jmp
xor
xchg
dec
push
cmovo
pop
cmp
cmp
and
cs
fdecstp
leave
sub
dec
int
dec
ins
sbb
pop
popa
sar
fcom
adc
pop
jle
dec
fsubr
xchg
(bad)
mov
xor
inc
jmp
or
icebp
jge
add
outs
adc
nop
xchg
inc
scas
jae
inc
jmp
jo
clc
dec
shl
stc
(bad)
std
fwait
lods
retf
sub
xor
xlat
pop
and
jl
mov
shr
ror
pop
test
daa
cli
mul
lods
fdiv
add
sbb
and
in
push
leave
repnz
mov
sub
push
cli
retf
in
add
sbb
je
push
mov
imul
or
jecxz
jge
dec
xchg
(bad)
mov
or
aas
ss
inc
or
dec
or
and
xchg
dec
outs
ficomp
jae
(bad)
cwde
or
retf
ret
jp
aam
jmp
in
nop
stc
mov
pop
scas
imul
dec
sub
adc
and
or
pop
ins
lock
rol
add
cmp
or
jle
xchg
pop
call
push
in
enter
jle
adc
dec
loopne
mov
add
movs
add
clc
mov
adc
and
xacquire
jo
(bad)
jmp
push
sub
imul
cmp
das
es
pop
stos
inc
add
call
test
ret
ins
xchg
jge
dec
fld
mov
popf
js
lods
mov
adc
sahf
and
cmp
adc
and
dec
fnstsw
ret
fsub
call
dec
scas
xlat
add
sbb
(bad)
fiadd
mov
loopne
call
clc
nop
xor
cmp
into
or
push
movd
in
push
pop
adc
cmp
shl
fst
and
dec
cwde
sub
xchg
in
repnz
icebp
imul
jae
sbb
retf
push
int
rol
clc
cli
lods
sbb
sub
cmp
dec
add
fcom
jecxz
stc
or
mov
(bad)
fld
mov
mov
mov
into
jp
push
in
stos
pop
arpl
jecxz
xlat
jle
push
cmps
ja
push
push
sbb
cmp
mov
out
mov
fsubr
jmp
xchg
xchg
mov
ins
dec
xchg
cmp
xlat
data16
es
jmp
ror
dec
mov
adc
lods
pop
push
cmp
xchg
or
push
xor
push
std
inc
adc
xchg
leave
adc
mov
dec
mov
lods
adc
mov
outs
ins
test
fsubr
fdivrp
out
cmp
jo
repnz
into
clc
cmp
jl
jb
movs
enter
loop
adc
mov
ins
xor
pop
xor
ja
cmp
rcl
ins
dec
xor
adc
rcr
mov
repz
add
and
xchg
cld
ret
(bad)
mov
data16
adc
push
push
xchg
xchg
into
mov
mov
les
rcl
adc
in
stos
mov
sbb
mov
gs
add
cld
js
push
dec
inc
repnz
push
fsub
dec
sahf
in
mov
lds
scas
neg
sahf
mov
sbb
jns
outs
imul
jns
cmc
cdq
arpl
in
inc
shl
pop
add
jne
fiadd
mov
cmp
inc
fdiv
fiadd
mov
sbb
fild
xlat
ins
dec
enter
add
adc
shl
arpl
mov
pop
loopne
or
xchg
shl
cmc
adc
in
sbb
(bad)
test
js
lea
mov
ja
push
jg
pusha
imul
gs
and
xor
ret
lahf
jmp
jmp
retf
cmps
addr16
or
nop
cmps
xchg
push
adc
into
scas
lods
add
jnp
adc
enter
inc
inc
mov
mov
sub
mov
clc
adc
scas
leave
repnz
outs
mov
jmp
xor
dec
lahf
fidiv
icebp
repnz
ss
div
push
popa
lods
xor
push
xor
or
idiv
dec
(bad)
push
cmps
scas
not
or
pusha
pop
push
jg
in
adc
or
or
mov
pop
xor
ins
je
call
outs
push
rol
out
fisub
(bad)
data16
arpl
adc
not
enter
cdq
gs
inc
jmp
dec
inc
vmulsd
adc
mov
cmp
or
movs
sub
and
in
jae
in
mov
scas
outs
pop
jp
fucomp
dec
push
pop
push
pop
fdivr
add
push
xchg
fldcw
jmp
jg
jae
ror
jge
sbb
shl
(bad)
pusha
or
test
cmp
daa
mov
xor
push
pop
mov
pop
adc
lahf
dec
pushf
bound
or
movs
sub
cmp
xor
sub
cld
(bad)
push
inc
int
inc
push
xchg
jb
sbb
jecxz
pop
popa
cmp
leave
arpl
out
enter
(bad)
sub
mov
adc
sub
popa
mov
repnz
push
xor
mov
inc
push
xchg
bound
mov
ja
fidivr
jae
cmp
xchg
sub
sbb
scas
push
wbinvd
jge
or
nop
(bad)
enter
pop
into
in
pop
lods
push
mov
push
sub
retf
jns
test
dec
icebp
scas
jns
push
dec
xchg
push
jge
or
in
dec
sub
push
imul
push
add
pop
pop
xor
and
pop
aad
mov
adc
(bad)
mov
adc
shr
pop
push
ja
fs
hlt
mov
mov
jbe
loopne
leave
push
pop
pop
lea
mov
test
mov
mov
inc
retf
rol
push
in
out
out
xor
dec
dec
ret
inc
fdivr
pop
test
jo
dec
sbb
inc
js
enter
fdivr
dec
mov
sub
out
cmp
cli
sub
jne
jmp
sahf
sub
iret
or
mov
int
cmp
xchg
in
test
fisub
sbb
lds
imul
aad
cld
push
or
jl
cwde
jo
and
sub
(bad)
add
and
lahf
inc
and
jne
dec
nop
jb
xor
mov
xor
dec
aaa
push
and
mov
movs
pop
adc
mov
out
mov
dec
sbb
mov
or
inc
push
adc
fsub
pop
ret
int
inc
retf
cmps
inc
iret
sbb
adc
mov
push
pop
sub
or
pushf
and
bswap
data16
sub
mov
inc
dec
je
or
dec
jle
sub
gs
push
push
push
mul
aam
fst
(bad)
addr16
xchg
es
mul
mov
mov
clc
inc
in
jo
cmc
idiv
clc
inc
rol
inc
rol
mov
jno
adc
xor
inc
mov
div
jmp
or
js
sbb
popa
cmc
and
xchg
or
cmp
stos
imul
aaa
sub
add
jo
retf
adc
push
push
jle
mov
dec
mov
or
sbb
mov
cmp
push
jmp
stos
out
lods
mov
mov
mov
cli
mov
loop
mov
int3
mov
(bad)
xor
and
popf
mov
add
mov
hlt
cmp
in
cli
ja
sti
enter
xchg
pop
std
das
call
jmp
pop
fs
aad
xor
(bad)
scas
call
sub
add
shl
dec
scas
cli
jmp
or
test
in
lds
ret
shl
cwde
jae
mov
ret
mov
sub
popa
cdq
frstor
movs
loop
mov
inc
pusha
(bad)
sar
out
inc
or
loopne
psllq
call
xor
ror
pop
out
leave
jmp
mov
test
imul
sbb
inc
inc
iret
sbb
movs
clc
xor
xchg
pop
and
inc
frstor
mov
sub
adc
mov
and
pop
int3
push
cmc
jbe
mov
jno
nop
jne
jae
sti
add
add
in
scas
ficomp
sbb
(bad)
das
mov
add
mov
mov
cld
mov
mov
lea
(bad)
mov
test
out
dec
aaa
cmp
sub
mov
call
or
jle
(bad)
xchg
pop
(bad)
lods
mov
loope
iret
iret
sahf
test
mov
jl
arpl
inc
outs
inc
int3
(bad)
lock
cmp
test
test
dec
mov
leave
xor
int
hlt
scas
jae
dec
(bad)
call
popa
pop
jle
test
out
mov
mov
ins
int
push
imul
dec
sub
push
clc
call
(bad)
or
bound
or
xor
push
push
stc
and
in
inc
mov
adc
lea
dec
into
or
jmp
(bad)
cdq
fsubrp
addr16
add
dec
push
cmp
push
jo
push
sbb
mov
and
pushf
enter
imul
and
cmps
xchg
lea
scas
xor
mov
sub
fs
or
repz
jb
mov
push
ficom
mov
ret
sbb
jp
cwde
dec
mov
adc
mov
pop
jae
adc
and
sub
mov
push
sub
ficom
test
dec
shl
pop
(bad)
in
js
push
stc
and
cmp
add
fidivr
add
xchg
sbb
aad
outs
push
mov
push
arpl
in
sub
retf
lods
mov
adc
mov
mov
hlt
fwait
xchg
ftst
or
repz
mov
jmp
inc
dec
pop
jae
(bad)
adc
scas
in
mov
pop
movs
mov
jno
fwait
ret
pop
cmp
daa
mov
aam
mov
or
push
xchg
push
inc
jb
sbb
inc
mov
bound
and
inc
or
xlat
es
mov
cmp
int
cs
sub
pop
fisubr
or
sbb
(bad)
adc
xor
xchg
inc
mov
cmp
sub
add
pushf
loopne
xchg
xchg
movs
mov
(bad)
call
pop
(bad)
arpl
push
bound
or
ins
mov
out
or
cmp
sub
jo
mov
jnp
xchg
mov
lods
popf
pushf
mov
retf
inc
(bad)
jmp
sub
ja
je
sbb
repnz
xor
jl
int
pop
inc
imul
push
and
sub
ror
inc
(bad)
and
pop
not
adc
mov
shl
dec
les
cld
push
jne
adc
jnp
rol
push
push
and
or
sbb
es
dec
sub
adc
push
mov
ins
push
ss
les
mov
mov
hlt
jmp
and
mov
out
loop
jle
pushf
fadd
aam
dec
mov
(bad)
xlat
jmp
mov
aaa
push
dec
ret
mov
push
loopne
les
dec
cmps
inc
test
or
(bad)
adc
mov
hlt
mov
ffree
push
lods
js
pop
lea
adc
outs
sti
es
jecxz
lock
mov
imul
sbb
je
jnp
(bad)
int3
adc
adc
(bad)
out
xor
xchg
call
sbb
aam
js
mov
xchg
adc
es
and
cmp
imul
call
mov
call
scas
shl
stos
inc
pop
sbb
jecxz
pushf
mov
pop
mov
mov
and
jge
mov
sub
and
push
mov
repnz
and
sub
mov
xor
(bad)
enter
and
or
sub
add
add
jo
push
mov
jecxz
out
or
(bad)
push
inc
movs
dec
pop
jecxz
jno
jecxz
mul
lods
ins
mov
pop
loope
lahf
jmp
dec
pop
sbb
stos
mov
fs
and
add
mov
stos
cwde
mov
les
xchg
push
lock
mov
jmp
jge
stc
ins
movs
pop
dec
cmp
cmc
dec
sub
pop
repz
mov
cmp
sar
adc
push
push
inc
popa
xor
sbb
shr
jl
adc
push
in
shr
mov
cli
lds
mov
mov
xchg
daa
add
scas
out
adc
jnp
xor
add
out
sub
mov
loope
adc
push
mov
mov
fnstcw
pop
sbb
lds
mov
out
test
fs
mov
jl
fsubr
stos
mov
adc
repnz
sbb
sub
test
or
sbb
or
(bad)
pop
sbb
xchg
mov
sbb
xchg
push
lock
xchg
xchg
call
xor
retf
sub
lea
mov
sahf
push
out
mov
pop
repz
dec
xchg
mov
ror
(bad)
jnp
mov
xchg
sahf
inc
inc
gs
add
sub
aad
push
(bad)
or
fisttp
pop
or
adc
(bad)
jecxz
xchg
push
ins
or
push
push
call
cdq
sbb
add
dec
dec
sub
or
jp
pop
mov
arpl
and
(bad)
fmul
retf
mov
push
fadd
hlt
sub
and
cmp
xor
(bad)
adc
out
inc
fstp
add
xlat
fldcw
pop
mov
pusha
(bad)
rol
mov
cli
(bad)
(bad)
sub
inc
sub
xchg
ficomp
div
sahf
xor
mov
ret
add
ret
fmul
push
xchg
adc
ret
repz
outs
add
lea
jmp
mov
enter
xchg
call
js
sub
call
dec
addr16
dec
push
push
inc
mov
mov
mov
adc
mov
push
adc
aaa
mov
imul
mov
xor
mov
dec
jp
stc
dec
jp
fcmovne
sbb
cli
enter
jp
cs
(bad)
push
stos
mov
fdiv
fisubr
daa
rcl
loopne
or
xchg
push
pop
je
add
call
pushf
cwde
pop
arpl
mov
mov
inc
mov
mov
call
add
stos
push
push
mov
imul
sbb
lock
cmp
push
pop
addr16
jo
mov
cld
inc
push
jge
scas
ds
daa
push
mov
add
pop
ins
retf
push
push
fmul
movs
daa
and
cmp
lock
push
(bad)
adc
outs
cwde
jae
mov
jmp
mov
inc
jge
inc
or
mov
sbb
mov
lods
pop
cwde
cmps
or
mov
cmp
fwait
aam
fs
push
add
jmp
outs
(bad)
dec
in
xor
js
push
int3
pop
pop
fwait
mov
mov
adc
mov
xchg
pop
mov
inc
mov
cmps
mov
or
mov
sbb
mov
jnp
ret
loopne
xchg
and
pop
mov
inc
dec
mov
inc
loopne
mov
mov
mov
inc
iret
stc
das
and
sti
movs
sub
inc
dec
cmp
jmp
je
jmp
mov
mov
in
mov
test
sahf
add
cmps
sub
outs
addr16
shl
test
xor
and
xchg
repz
lahf
shr
das
lods
add
not
or
dec
mov
push
imul
hlt
xchg
in
mov
inc
inc
xor
add
mov
fldcw
test
push
sub
stc
mov
push
xchg
(bad)
xchg
ret
mov
adc
pop
mov
jmp
enter
pop
push
jo
scas
out
ja
daa
cmps
cdq
ja
cmp
inc
fs
bound
and
adc
(bad)
hlt
xor
daa
adc
test
je
fadd
inc
xlat
sub
sahf
lods
imul
push
jle
icebp
scas
out
shl
sbb
push
das
call
clc
sub
(bad)
pop
mov
retf
cmps
out
mov
jb
pop
mov
xchg
loope
add
adc
pop
or
mov
and
push
ret
xchg
xor
mov
jmp
and
das
pop
push
in
daa
cmp
fcmove
lahf
xchg
cmp
mov
xor
sub
cdq
add
(bad)
sbb
push
dec
push
fsub
and
adc
and
and
sub
mov
inc
rcl
clc
dec
xchg
pop
cdq
rol
arpl
push
push
xor
pop
cld
cli
mov
cmc
pop
jle
ds
inc
jbe
pop
cmp
loop
dec
jbe
sti
mov
sbb
loop
xor
xchg
jae
jg
xor
mov
lock
popf
mov
mov
scas
nop
ins
in
sbb
ja
cwde
add
adc
inc
leave
jo
in
mov
(bad)
and
jns
mov
cmc
sahf
out
xchg
icebp
pop
push
into
cmp
mov
cld
xchg
shl
stc
fst
inc
mov
mov
add
and
repnz
push
in
push
fisttp
loop
ds
push
gs
cmp
ins
imul
gs
and
aaa
fist
leave
call
call
cs
sbb
shl
push
or
mov
xor
jae
scas
push
xor
add
push
test
dec
push
rcr
and
in
aaa
rol
icebp
lock
enter
ja
mov
in
cmps
pop
mov
or
push
sbb
imul
out
test
mov
inc
fist
aas
xchg
test
cmp
add
(bad)
sub
mov
add
(bad)
xor
imul
ins
pusha
pop
cmc
mov
inc
push
ficomp
rcr
call
outs
fs
xchg
lock
pop
test
fcom
sub
mov
pop
lea
xchg
div
xor
(bad)
mov
(bad)
out
sbb
and
(bad)
jecxz
or
cld
xor
jnp
popf
fld
pop
enter
out
in
test
mov
or
js
retf
lahf
popa
neg
jge
mov
cs
inc
ja
mov
cli
jb
jno
int3
ret
lea
(bad)
dec
adc
pop
ror
out
xchg
push
and
out
out
aad
adc
sbb
rcl
xchg
ror
sbb
pop
iret
(bad)
pop
in
movs
fstp
push
movs
cs
mov
daa
retf
pusha
out
adc
(bad)
dec
lods
inc
mov
test
out
dec
pop
xor
xor
dec
add
inc
movs
ja
inc
mov
mov
ja
fistp
jb
add
jp
iret
sbb
(bad)
pushf
mov
sti
int3
and
test
movs
mov
xchg
mov
push
jle
mov
xchg
in
or
xchg
jb
adc
or
xchg
sbb
ja
aad
sbb
(bad)
into
shr
(bad)
inc
hlt
sbb
setg
fisubr
and
and
jae
or
mov
push
sbb
adc
dec
jp
jns
outs
mov
pop
or
sub
int
pop
cmp
sub
(bad)
test
xchg
mov
inc
adc
mov
test
jnp
(bad)
adc
(bad)
fisttp
retf
sbb
cmp
or
pusha
pop
ret
retf
and
imul
push
dec
aaa
inc
inc
or
lea
push
aad
ret
xchg
jmp
mov
dec
clc
sub
jae
in
int3
imul
cli
call
test
ror
sar
ficom
into
arpl
xor
nop
mov
scas
pop
jle
daa
call
outs
(bad)
mov
jne
or
or
lods
xchg
cmp
add
sar
loope
hlt
mov
fwait
or
push
out
inc
push
mov
sbb
xchg
fnsave
ins
xchg
gs
jae
mov
cmp
xor
add
out
pop
pop
movs
dec
mov
inc
stos
fiadd
jo
sub
push
push
sbb
mov
pop
pop
xor
jo
test
cdq
fcomi
idiv
in
xchg
xchg
sti
shr
push
shl
mov
xor
jmp
test
cld
cld
scas
sti
cmp
xor
in
push
pop
mov
xor
jle
push
lods
ret
push
stc
xor
in
pusha
mov
xor
jecxz
jecxz
jb
mov
mov
mov
mov
jle
dec
pop
or
dec
pop
or
jns
or
cmc
(bad)
adc
pop
movs
cli
and
or
adc
cmp
outs
push
div
push
test
sbb
loope
aam
clc
pop
test
popa
and
lods
test
mov
inc
(bad)
push
adc
repnz
inc
aad
pop
inc
push
sub
jno
inc
std
(bad)
stos
jp
into
out
ror
push
or
stc
sbb
inc
xchg
push
pop
dec
sbb
aam
loopne
lds
push
imul
sahf
xchg
pop
imul
xor
outs
or
push
pop
lods
adc
lods
dec
push
inc
mov
out
xchg
dec
mov
pop
mov
daa
stos
pop
rcr
cdq
movs
mov
and
call
out
fsub
mov
fidiv
dec
dec
aad
push
add
add
enter
pusha
sbb
outs
cs
mov
mov
mov
fwait
push
sub
cmp
je
push
imul
mov
and
mov
mov
push
aaa
push
mov
jmp
retf
fwait
or
addr16
sbb
fcom
rcr
iret
fist
div
dec
js
jl
mov
adc
xchg
rol
in
nop
sbb
xor
xor
fucomip
sbb
push
cmc
loop
aaa
push
int3
push
push
dec
enter
in
push
stc
outs
pop
adc
jns
xor
adc
out
push
mov
cmp
call
jecxz
xor
(bad)
out
popa
lahf
mov
mov
dec
cdq
sbb
in
or
fsub
mov
fstp
enter
xor
and
ss
rol
les
add
stos
jle
loopne
jne
sbb
dec
int
stos
mov
mov
adc
add
scas
sar
cmc
jge
pushf
sub
sub
loope
dec
mov
lds
push
jo
mov
cmp
mov
jecxz
shl
imul
aas
xor
sbb
outs
ja
cmp
xchg
inc
ret
test
ins
sub
jg
mov
das
stos
arpl
mov
mov
sbb
ja
in
push
xchg
push
jae
fsubr
jb
out
(bad)
popa
ins
scas
lods
mov
xor
or
aas
or
dec
mov
adc
stos
ss
push
add
je
jo
stc
movs
xchg
pop
ficomp
aaa
sbb
ins
mov
bound
dec
(bad)
stc
cmp
xchg
cdq
sti
mov
loop
jge
xlat
push
outs
jp
ins
mov
into
scas
mov
lods
mov
pop
andps
inc
fimul
inc
std
jmp
xlat
pop
les
adc
loop
sbb
and
mov
and
pop
push
cmp
sub
cmp
push
inc
rcr
cmp
mov
cmp
push
add
mov
add
mov
popa
mov
or
mov
lahf
in
push
je
fs
fwait
pop
nop
push
out
aaa
or
aaa
mov
cli
test
mov
xlat
pusha
mov
sub
inc
daa
inc
jnp
pop
mov
mov
push
add
mov
fcom
or
ins
jmp
and
call
mov
pop
mov
pop
test
arpl
sbb
sbb
mov
loopne
mov
retf
ds
jp
add
adc
dec
in
lahf
xor
inc
std
lds
iret
mov
call
iret
(bad)
dec
and
adc
pop
mov
std
and
lock
pop
inc
add
std
cld
pop
mov
pop
pushf
je
xchg
cmps
hlt
sbb
jle
jg
sub
mov
cmc
aad
mov
sub
sahf
out
jl
in
mov
cmp
gs
or
ja
cmp
enter
shl
add
outs
and
push
sti
jns
hlt
ds
mov
push
mov
(bad)
repnz
pop
mov
add
cmp
xor
cmp
shl
jne
mov
lea
xor
cmps
mov
and
stc
sar
jns
call
fistp
add
aas
lea
pop
or
adc
push
stos
daa
pop
sti
loope
sbb
jae
pushf
jbe
pop
pop
and
or
fstp
jmp
in
push
or
mov
push
in
fidiv
pushf
jnp
out
repnz
out
pop
adc
adc
mov
sahf
cwde
push
mov
push
add
jl
or
inc
or
sub
and
leave
sbb
xor
std
inc
(bad)
xchg
xor
mov
mov
out
pop
ins
cmp
mov
fs
int
adc
mov
les
jp
mov
cvttps2pi
adc
xor
scas
mov
je
cmps
push
pop
mov
popf
(bad)
call
addr16
inc
out
pop
mov
push
adc
test
int3
shr
cwde
or
pop
push
into
test
cmp
add
pop
in
les
imul
cmp
les
add
mov
in
xchg
pushf
jg
xchg
cs
jp
jmp
xchg
dec
pop
cmps
mov
pop
push
stos
push
fisubr
leave
dec
dec
adc
cmps
nop
(bad)
(bad)
(bad)
adc
sbb
jle
mov
cwde
ret
and
xor
es
dec
pop
adc
(bad)
jmp
mov
mov
pushf
or
call
es
sbb
dec
mov
sub
test
pop
push
mov
pop
call
stos
cwde
adc
mov
add
dec
inc
mov
cmp
sbb
ret
dec
xor
movs
out
inc
lahf
mov
retf
in
ret
jno
sbb
dec
ficom
mov
pop
push
sbb
pop
test
or
mov
clc
inc
fsubp
pushf
fs
inc
data16
cmp
shr
call
or
rol
call
aam
scas
cwde
or
mov
shl
push
xor
and
ror
adc
pop
or
dec
jmp
into
xchg
sub
pop
mul
arpl
xchg
lods
ins
pop
pop
out
iret
imul
rcr
repz
fs
mov
loopne
mov
jmp
(bad)
lods
fisttp
(bad)
retf
add
das
aaa
jmp
dec
jae
mov
mov
repz
pop
mov
jge
(bad)
hlt
aam
add
ins
pop
pop
inc
outs
leave
sub
xor
lea
movs
(bad)
mov
je
add
ror
ret
push
push
xchg
loope
pusha
cs
xchg
or
dec
xchg
loopne
adc
sub
pop
jno
push
shr
icebp
cmps
es
mov
int
xchg
mov
push
dec
hlt
add
jg
out
ins
syscall
mov
scas
stc
fnstsw
mov
cmp
add
lds
mov
jno
shl
dec
fist
rcr
dec
fs
cli
push
fs
mov
mul
or
push
jae
arpl
mov
mov
(bad)
sti
lods
retf
popa
mov
xlat
adc
loope
inc
or
push
sbb
dec
sbb
cmps
inc
and
retf
iret
rcl
mov
fwait
repz
cmp
mov
pop
sbb
je
pop
mov
sub
push
and
cmp
icebp
fst
movs
inc
ds
movs
and
scas
(bad)
jmp
icebp
adc
out
push
cs
jne
dec
mov
std
ins
inc
(bad)
pop
in
add
sub
push
mov
shl
int3
in
pop
push
sub
dec
and
cmp
fild
(bad)
repz
jge
or
pop
mov
xchg
in
ins
jbe
addr16
adc
sub
shl
out
fild
inc
lds
data16
xor
popa
ret
aad
out
pop
popf
or
jl
dec
in
mov
add
das
inc
ret
adc
cmc
pop
xchg
rcr
cmp
push
pop
sbb
adc
sar
icebp
adc
loop
xor
sub
sbb
push
retf
xor
(bad)
clc
pop
outs
mov
retf
jle
add
sbb
push
out
push
jecxz
or
lods
in
inc
add
xor
pop
sbb
cmps
pop
ret
inc
pushf
imul
dec
push
xor
movs
outs
add
outs
mov
adc
xchg
mov
jb
ds
push
adc
sbb
push
gs
xor
fdivr
lods
into
or
jnp
fisttp
cmc
xchg
sbb
out
mov
test
aam
test
ins
imul
adc
mov
push
mov
(bad)
pop
loopne
(bad)
sub
mov
leave
jg
sti
fwait
nop
(bad)
ror
push
movs
push
mov
lods
ret
pop
push
aad
or
adc
sbb
mov
jbe
mov
jl
in
cld
xor
dec
xchg
fsubr
and
rcr
inc
mov
pop
es
xlat
psrlq
cmps
push
add
ss
ins
(bad)
mov
pop
nop
mov
xchg
jo
test
aam
and
cld
add
sub
popf
push
imul
iret
sbb
fnstenv
mov
cmps
inc
sti
out
mov
pop
mov
les
fnstcw
push
mov
ror
aaa
mov
out
lods
jmp
movs
push
xchg
xchg
popf
cmp
iret
xchg
jae
imul
test
clc
leave
or
cmc
cmp
add
int
iret
adc
idiv
adc
push
fwait
(bad)
int3
adc
shr
jmp
test
repnz
stos
xchg
out
hlt
xor
or
mov
pop
adc
dec
addr16
inc
sbb
movs
and
mov
pcmpeqd
movups
adc
gs
pop
stos
push
loop
push
in
jo
out
mov
inc
xchg
jl
leave
jg
mov
pop
jge
push
fcomip
test
xchg
call
fdiv
inc
mov
xchg
neg
psrad
sub
fmul
icebp
pop
stos
dec
call
push
jecxz
fcomp
cmps
mov
cmp
jle
stos
add
xor
stos
test
xchg
xor
cmp
std
arpl
add
mov
push
fidiv
stos
push
das
ret
stos
aaa
aam
call
(bad)
lea
dec
xchg
inc
sbb
fadd
adc
bnd
ret
ins
out
xchg
shrd
xor
(bad)
dec
push
push
mov
fsub
xchg
dec
sbb
pop
in
mov
xor
lahf
popf
jge
mov
call
repnz
xchg
sbb
and
cld
push
cmp
in
inc
outs
cld
inc
(bad)
repz
sbb
(bad)
icebp
push
sub
jecxz
or
sbb
ja
push
rcr
sub
das
movs
loopne
sub
sbb
(bad)
rcr
rol
cdq
jge
retf
push
test
mov
in
data16
jb
xchg
iret
cmp
punpckhbw
int3
inc
movs
inc
stos
ret
fmul
xchg
ins
fadd
jne
xchg
daa
mov
push
cvtps2pd
bound
sub
aas
pop
dec
jmp
xor
repnz
mov
cmps
stc
sub
fwait
push
jno
cmc
inc
lods
addr16
(bad)
fidiv
xchg
or
xchg
mov
mov
out
and
add
popf
adc
out
add
int3
add
mov
pop
pop
xchg
cmp
mov
lods
push
inc
mov
xor
out
popf
ret
test
sbb
mov
jmp
cdq
sub
jo
fnsave
rcl
dec
sbb
mov
sar
mov
mov
popa
pop
hlt
pop
scas
rep
(bad)
movs
ret
stc
js
dec
pop
cmp
mov
mov
scas
retf
mov
cld
retf
lds
add
scas
xor
add
adc
out
test
dec
aaa
shr
stos
fnstenv
push
idiv
aad
pusha
pop
pop
mov
shl
test
mov
icebp
and
cwde
ss
and
and
mov
jmp
pop
in
mov
dec
ret
sbb
xor
ret
mov
out
mov
popf
loop
push
aaa
scas
aam
jge
xchg
push
jl
sub
xchg
retf
mov
rcl
retf
cmc
lods
xchg
pop
push
pop
aas
or
shl
push
adc
dec
jb
outs
cmps
adc
loopne
outs
ficom
inc
mov
cmp
test
xchg
icebp
or
out
inc
ficomp
popf
lods
sbb
add
mov
and
jo
mov
loopne
imul
fwait
push
std
clc
pop
jge
scas
sahf
clc
add
sub
pop
call
std
in
leave
jne
test
mov
pop
inc
inc
nop
push
dec
cwde
jge
pop
sub
push
in
add
pop
sbb
and
(bad)
xor
mov
mov
xor
cmp
enter
jg
mov
dec
std
js
jbe
and
movs
jmp
les
enter
repnz
mov
jne
bound
cmps
hlt
jmp
pop
or
neg
jne
es
aad
test
dec
fldenv
sub
xchg
pop
inc
test
add
ror
fs
ins
enter
xor
mov
sbb
or
test
lods
pushf
jnp
popf
in
sub
fscale
pop
push
ss
nop
enter
test
push
inc
in
fwait
sub
inc
fs
pop
out
nop
cmp
mov
out
lea
sbb
xlat
outs
mov
sub
movs
stos
xor
mov
icebp
test
cmps
imul
xchg
push
(bad)
add
xor
iret
ins
imul
in
sub
jmp
xlat
out
inc
sub
adc
cmc
fld
retf
popa
cmp
pop
aad
jl
loop
daa
add
pusha
dec
cld
test
or
dec
adc
jb
scas
mul
clc
mov
cmp
int
sub
pushf
lods
js
mov
repnz
pop
hlt
push
fcmovnb
mov
out
daa
ds
sub
xchg
mov
jb
fisubr
push
xchg
push
xlat
outs
xchg
fadd
aad
movs
mov
call
and
(bad)
into
inc
ror
jnp
je
or
imul
jae
sahf
in
mov
rol
cwde
ret
cdq
test
bound
sub
ror
mov
daa
(bad)
mov
pop
ins
in
adc
cmc
and
jmp
pop
test
mov
pop
mov
adc
movs
pop
outs
loopne
pop
fld
jge
ror
dec
clc
daa
inc
dec
lock
inc
jmp
adc
in
cs
outs
adc
shl
aad
lea
add
xor
dec
dec
imul
icebp
sbb
xor
adc
pushf
pushf
outs
scas
les
fisubr
ret
pushf
nop
add
add
jle
cli
fild
es
xchg
adc
test
bound
loope
jae
xchg
sub
mov
sbb
xchg
lods
movs
and
jp
hlt
mov
hlt
and
fadd
and
loop
add
dec
or
mov
out
xchg
mov
mov
adc
adc
rol
cmp
or
xor
cld
pop
push
rcl
mov
push
add
in
shr
pop
pop
loope
(bad)
(bad)
pop
fnstsw
add
pop
cmp
hlt
inc
ins
shl
sub
and
js
dec
mov
mov
sbb
in
lea
outs
adc
inc
mov
add
movs
adc
mov
es
ss
inc
xchg
cmp
(bad)
mov
cs
xchg
out
test
xchg
sub
add
mov
mov
(bad)
mov
push
pop
pop
inc
pop
jae
cmps
lahf
xchg
mov
dec
repnz
mov
or
push
mov
outs
(bad)
fwait
pcmpeqb
push
std
dec
(bad)
je
cs
jns
fnstcw
add
test
dec
mov
fucomp
popa
push
mov
mov
test
fwait
retf
push
dec
clc
pop
sbb
repnz
cdq
jb
in
in
je
adc
(bad)
dec
xchg
pop
into
sti
and
xchg
and
adc
add
repnz
dec
cmp
rcr
xchg
mov
leave
test
mov
pop
scas
std
xchg
(bad)
pushf
mov
and
adc
mov
add
loop
mov
js
repz
mov
mov
(bad)
mov
sti
mov
call
ins
push
pop
or
sub
je
xor
out
cmp
dec
hlt
inc
xchg
mov
adc
and
xchg
push
jle
ja
imul
jae
cmps
icebp
cmp
pop
and
fstp
or
xchg
mov
push
lahf
hlt
and
inc
mov
mov
and
ret
lods
mov
jmp
mov
xchg
aam
push
pop
mov
mov
fs
pop
and
dec
and
outs
mov
push
and
and
aas
jmp
jg
mov
sbb
call
rol
aas
mov
push
call
sbb
dec
mov
scas
ja
and
out
fcom
xor
or
xchg
out
(bad)
dec
out
sub
push
dec
gs
fisttp
sahf
imul
xchg
mov
jne
or
dec
rcr
fimul
sti
mov
(bad)
cmps
popf
mov
ins
add
mov
add
ins
mov
scas
mov
dec
ret
cmp
fs
inc
stos
add
mov
pop
jne
xchg
sbb
aam
daa
mov
cmp
(bad)
and
xchg
mov
call
not
dec
mov
and
cmps
push
xchg
pop
mov
jmp
sbb
dec
es
or
hlt
jge
loop
out
cld
aad
ret
cmps
push
mov
call
mov
movs
neg
shl
jg
lock
mov
adc
lea
or
or
test
aaa
or
jmp
add
inc
mov
jecxz
jbe
cmp
outs
mov
jmp
imul
loope
sub
fcmovnu
inc
mov
add
movs
sub
cmp
in
arpl
cdq
pusha
xor
jbe
adc
mov
dec
(bad)
jns
and
push
stos
inc
sar
call
sar
xchg
or
add
mov
pop
adc
or
fwait
cld
sub
shr
or
mov
push
call
aad
call
(bad)
or
iret
cld
std
lahf
test
jp
fnsave
pop
es
cs
pop
xor
loop
cli
pop
stos
and
call
xor
mov
rcr
mov
sahf
ins
jne
xor
sub
lock
out
mov
add
add
sub
jo
mov
xchg
fs
or
and
pop
sar
or
fwait
jno
inc
mov
test
add
add
xor
imul
mov
jg
js
add
cwde
push
cs
inc
lods
stos
jmp
push
dec
pushfw
idiv
mov
mov
push
push
xchg
mov
push
cmp
movs
mov
int3
mov
lods
push
pop
or
(bad)
popf
fcomi
loope
aaa
mov
xchg
and
imul
or
mov
cwde
adc
cmp
ret
imul
sar
push
les
sub
imul
dec
test
cmp
inc
and
xlat
stc
popa
hlt
inc
iret
out
enter
sub
inc
mov
aam
stos
mov
jb
in
mov
fcom
pop
pop
mov
cmp
ret
inc
xchg
adc
icebp
nop
int3
sub
jl
xchg
sbb
cmp
xlat
sti
mov
jle
sub
scas
add
sub
jp
xlat
pop
(bad)
adc
movs
enter
popa
lock
nop
mov
cmp
mov
cmp
aam
mov
cmp
jae
mov
mov
int
mov
das
push
cli
cli
in
mov
(bad)
shl
ds
retf
test
mov
push
(bad)
jg
mov
(bad)
ins
mov
popf
mov
hlt
arpl
scas
mov
js
dec
adc
fwait
mov
test
xor
cdq
mov
in
adc
adc
push
xchg
(bad)
dec
pop
jg
imul
mov
cli
mov
in
inc
call
dec
inc
dec
(bad)
adc
xor
fsubr
neg
mov
mov
xor
cmp
xor
pop
sub
pop
cmps
fiadd
cmp
cmp
add
inc
mov
push
pop
aam
jae
jl
cmc
jle
or
out
pop
dec
or
in
mov
push
and
pop
adc
xor
cwde
fcomp
mov
cmc
mov
dec
mov
jns
xchg
popf
push
sbb
add
mov
bound
jle
xchg
out
(bad)
xchg
mov
retf
adc
or
sub
xchg
addr16
xchg
cli
jb
div
push
mov
jecxz
xor
pop
ins
mov
outs
(bad)
ret
ins
and
fs
mov
gs
cmc
fcomp
ja
inc
push
sub
mov
mov
or
xchg
mov
and
sbb
and
outs
hlt
xor
cs
test
das
add
xor
in
pop
mov
mov
test
cmp
mov
mov
xchg
jae
test
mov
mov
push
cmc
iret
sub
pop
sub
test
cs
mov
idiv
movs
jge
shr
xor
mov
sbb
aad
mov
pop
adc
int
cmp
js
gs
jp
jle
hlt
rcr
shl
mov
inc
sti
xchg
movs
fstp
xchg
xor
in
sbb
retf
add
pusha
sbb
jle
adc
cwde
leave
aaa
jnp
push
fwait
in
xlat
fisttp
and
inc
jne
mov
adc
jb
or
leave
(bad)
cmps
(bad)
popa
in
jae
add
push
out
cmp
aas
xor
imul
mov
adc
nop
pop
jo
dec
push
jmp
xchg
out
dec
fs
and
mov
mov
psubq
adc
dec
inc
ror
jmp
fwait
mov
fcomp
iret
cwde
fstp
xchg
das
mov
and
sub
sar
(bad)
pop
mov
push
(bad)
ficomp
ins
jmp
push
sbb
dec
cs
scas
add
ss
test
imul
fsubr
iret
retf
stc
mov
or
push
call
enter
popf
lods
sub
and
cmp
sub
push
out
jae
push
inc
das
inc
(bad)
out
xor
outs
leave
pop
out
sub
jbe
cld
pop
sar
add
jecxz
into
fistp
add
push
jge
dec
mov
mov
jge
in
sar
inc
jle
pop
out
mov
fiadd
pushf
pop
cmps
push
inc
scas
cmc
js
and
div
jle
das
or
cmc
pop
sbb
xor
or
adc
mov
dec
test
out
push
retf
jle
mov
jno
stc
outs
jmp
mov
or
and
jbe
loop
rol
jb
sbb
cmc
test
adc
jnp
fwait
sub
inc
(bad)
iret
clc
and
sar
push
sahf
mov
bound
jge
push
outs
sbb
loop
sbb
mov
jp
cmp
cmp
xor
scas
outs
dec
fistp
jmp
pop
xchg
push
push
div
daa
mov
ret
std
pop
icebp
and
ficom
mov
mov
or
lea
aaa
je
dec
ss
addr16
sub
das
and
(bad)
adc
lock
xchg
push
aaa
shr
push
xchg
out
mov
pop
xchg
mov
das
push
retf
pop
mov
pop
push
push
cmp
rcl
cmp
cs
(bad)
sbb
mov
and
xor
jecxz
sub
aaa
sbb
int3
push
cmp
inc
add
push
dec
or
mov
movs
push
push
gs
push
cmp
imul
into
in
jbe
popf
ret
aaa
mov
mov
inc
leave
dec
adc
mov
js
and
mov
adc
xor
xchg
aad
ins
or
arpl
sub
and
adc
test
and
out
mov
lods
repz
add
pop
mov
jecxz
aam
xor
mov
ror
push
addr16
sub
and
mov
fprem1
in
jl
dec
stc
out
xchg
mov
test
push
adc
in
sub
movs
repz
sbb
jecxz
and
xchg
xor
jne
in
xlat
fld
les
cdq
inc
adc
push
imul
cmp
loop
jle
xchg
scas
daa
sub
addr16
or
outs
pop
jnp
jmp
xor
mov
(bad)
mov
in
push
xchg
pusha
aad
sbb
cmp
mov
es
mov
mov
jmp
sub
dec
cmp
(bad)
dec
in
enter
daa
ror
and
jo
jo
jp
sub
cwde
gs
cld
out
add
ret
(bad)
fcmovu
(bad)
imul
in
cmp
arpl
cmp
dec
shl
xchg
pop
add
inc
mov
inc
imul
and
push
pop
or
add
rol
sbb
(bad)
xchg
jae
dec
loopne
sahf
jns
shr
call
xor
lds
repz
lods
mov
mov
dec
mov
loope
or
les
push
dec
mov
dec
sahf
fscale
test
rcl
mov
jmp
repnz
into
push
xlat
jp
mov
lea
push
rcr
ss
add
adc
push
call
pop
stc
and
mov
dec
mov
outs
xchg
sahf
out
hlt
loop
sub
pop
xor
cmc
jl
shl
lods
mov
mov
jbe
icebp
cmp
in
sub
pushf
inc
jne
lea
jno
xchg
pop
pusha
push
pop
xchg
pop
xchg
out
je
cmp
dec
aas
xchg
inc
push
popf
and
jmp
add
fadd
or
add
push
sub
mov
sub
mov
(bad)
pop
shl
loopne
pusha
pop
test
cs
add
fldenv
aas
lods
or
pop
fistp
adc
jmp
js
ins
inc
inc
inc
jbe
xchg
test
sub
mov
jbe
mov
jl
shr
mov
cmps
xchg
jge
popf
nop
aad
inc
loopne
jmp
xor
arpl
jbe
(bad)
pushf
outs
jp
dec
ja
mov
lods
sbb
mov
cmp
mov
mov
out
or
adc
repnz
ss
adc
sbb
add
shr
bound
push
xor
in
cmc
inc
in
jne
int3
or
bound
push
stc
sbb
ds
jge
aaa
push
das
movs
push
fwait
dec
fst
cmp
fcom
mov
pop
test
test
adc
mov
ins
sub
mov
les
cmp
daa
sub
push
jne
mov
xor
add
ins
xchg
sti
sar
int
lock
iret
push
bound
mov
sub
rcr
push
cmp
fldcw
mov
sub
adc
ja
daa
push
cmp
mov
and
leave
enter
fcmovne
ret
jg
sti
aad
fsub
xchg
xchg
sub
fnsave
retf
lahf
into
cmp
mul
push
mov
cs
sbb
push
aad
shl
retf
in
and
xchg
mov
jno
fnstenv
mov
mov
aas
add
out
dec
adc
(bad)
addr16
inc
test
ins
sub
shl
jae
rep
jae
repnz
daa
icebp
dec
and
xchg
loope
std
or
mov
(bad)
mul
(bad)
les
inc
mov
inc
pushf
das
les
xor
push
es
hlt
inc
mov
jnp
jg
jl
(bad)
mov
cs
popa
adc
repz
push
sub
in
cwde
test
jp
jmp
fisttp
xor
xor
and
ins
add
or
inc
cwde
scas
mov
pop
mov
adc
rol
jge
sbb
ds
sahf
test
fcomp
popf
push
mov
xor
or
repz
dec
inc
sub
pusha
jge
dec
jmp
push
adc
hlt
ja
pop
add
pop
imul
pop
ret
pop
sbb
mov
dec
xor
pop
jns
sbb
inc
jmp
or
retf
frstor
jp
pop
mov
mov
sbb
icebp
retf
(bad)
pop
pusha
stos
cmps
cmp
shl
scas
pop
rcr
mov
(bad)
stc
cwde
push
jne
push
add
sub
(bad)
jmp
cmp
dec
clc
ss
jp
loope
xchg
lock
or
mov
cwde
ret
mov
jmp
and
add
fsubr
add
in
sbb
out
(bad)
jecxz
mov
pop
sbb
jo
ss
cwde
sub
loop
inc
sub
push
mov
sahf
mov
xor
movs
fldz
pop
xor
sbb
ret
sub
out
mov
data16
jnp
sbb
popf
push
and
dec
call
jne
aas
xchg
jb
push
mov
jg
pop
adc
and
popf
ins
jl
pop
sbb
jmp
loop
retf
mov
test
fcom
push
rcr
imul
dec
call
jae
dec
div
pop
mov
adc
mov
popf
iret
movs
outs
mov
test
fisub
jecxz
(bad)
mov
or
or
sub
push
mov
(bad)
imul
adc
push
add
push
cmps
into
out
icebp
pop
dec
push
pop
and
push
scas
jnp
sub
cmp
mov
push
loope
add
test
xor
stos
and
shl
mov
inc
mov
mov
add
inc
test
adc
push
add
(bad)
pop
dec
iret
and
and
inc
add
test
jmp
sub
int
mov
cs
dec
inc
jle
push
rcl
xor
jge
jp
pop
inc
fldcw
sub
mov
sbb
xchg
mov
rcl
out
mov
xchg
adc
pop
mov
sub
test
and
push
aad
outs
aas
cli
call
jecxz
jmp
shl
xchg
sti
loope
loop
jg
mov
add
mov
scas
and
add
push
ins
jnp
sbb
test
imul
push
(bad)
and
shl
add
cmp
mov
cmp
mov
sub
pop
or
push
lods
or
loop
aaa
(bad)
add
jecxz
add
add
fcom
lods
xor
sar
mov
sub
aad
scas
lods
sahf
or
dec
stc
icebp
mov
cmp
hlt
les
push
dec
int
push
add
ins
add
idiv
loopne
pop
dec
xor
fst
repz
data16
(bad)
push
xchg
xchg
jmp
rol
or
test
xchg
outs
cmp
jmp
xor
cli
add
mov
in
ret
dec
les
leave
xchg
fnsave
xchg
sub
and
sti
xchg
cmp
call
ret
outs
retf
mov
fild
inc
(bad)
fstp
cmp
xchg
cmps
jnp
dec
and
outs
mov
ins
bound
add
jns
jecxz
cli
mov
aad
pop
xchg
jns
mov
retf
movs
ds
neg
scas
lods
js
sahf
jmp
ror
cmp
stos
cmps
sub
pushf
sbb
sub
(bad)
adc
cmc
movs
xor
mov
ss
xchg
jnp
push
xor
mov
pop
sbb
push
fild
das
mov
jp
dec
push
fsub
add
jl
rcr
inc
jge
jnp
lea
jmp
cmps
xchg
leave
mov
ds
pop
out
out
adc
jno
mov
jmp
in
mov
pop
test
cmp
push
scas
inc
cmp
imul
cld
sbb
and
(bad)
retf
shl
cmp
pop
(bad)
aad
and
mov
sub
add
cmps
sub
mov
fsubr
xchg
nop
out
adc
cmp
xor
cwde
mov
mov
loope
add
scas
je
adc
cli
inc
stos
mov
push
int3
jecxz
(bad)
fimul
movs
mov
pop
mov
inc
inc
out
sbb
xchg
aad
add
sub
adc
sti
cmp
adc
pop
push
int
lahf
add
push
std
retf
rcl
stc
fsubrp
aaa
mov
out
cmp
retf
cmps
jp
mov
pop
lds
mov
ins
cld
add
imul
mov
mov
push
cli
out
cvttps2pi
les
sbb
sar
mov
push
sub
dec
jae
cwde
or
scas
int3
xor
and
test
mov
sbb
inc
int
push
add
stc
jmp
loopne
push
mov
xchg
pusha
stc
je
dec
dec
cmp
mov
or
sub
pushf
xor
cmps
mov
jne
jg
jmp
pop
pop
ds
jno
cmp
xchg
fild
jl
push
jno
sub
lds
cmps
cmp
pop
or
mov
out
mov
cmp
in
mov
neg
inc
xchg
xor
imul
pop
out
jnp
mov
or
cmc
push
inc
inc
push
mov
xor
lahf
mov
popf
gs
stc
js
fnstsw
mov
push
add
xor
push
repnz
repnz
test
jmp
xchg
call
movs
sbb
push
sub
shl
jae
dec
xchg
outs
out
add
add
test
mov
push
jmp
dec
mov
call
es
movs
and
jne
cmp
add
mov
repz
ret
lahf
mov
xor
sbb
or
mov
sub
nop
sbb
mov
cwde
push
or
mov
fcom
push
push
jecxz
call
fnstenv
xor
pop
retf
adc
add
aam
repnz
adc
inc
adc
pop
jno
fsubrp
push
or
xchg
push
push
daa
dec
into
fldcw
dec
sar
bnd
xchg
sub
and
enter
test
int
icebp
in
cmc
or
push
fwait
add
push
sub
ins
nop
mov
loopne
test
sbb
call
xchg
in
repz
dec
fisubr
xor
pop
ret
add
shl
test
scas
inc
mov
push
push
mov
mov
and
push
xor
jne
mov
pop
mov
push
sub
cmp
aaa
mov
mov
and
mov
or
test
rcr
cmp
xor
sbb
pop
arpl
sub
rcr
xor
xor
xchg
mov
fwait
bound
and
or
xor
mov
jns
(bad)
sbb
mov
dec
and
aas
and
dec
push
push
in
cmc
dec
out
sbb
pop
aas
add
dec
cs
jge
aaa
xor
es
jecxz
mov
dec
cmp
int3
aas
xchg
push
pop
mov
adc
and
lahf
(bad)
rcr
cdq
loop
inc
hlt
cld
inc
mov
outs
aas
fwait
jp
push
pushf
test
repz
into
add
xor
call
dec
adc
pop
(bad)
xchg
inc
in
sub
jae
call
mov
rcr
push
movs
jle
inc
fadd
xchg
mov
rcr
pop
cmp
sbb
mov
test
das
adc
fdivrp
xor
mov
mov
dec
inc
pop
sub
cs
ret
cdq
inc
fmul
cmps
or
jo
push
jp
out
je
aaa
inc
inc
fwait
sbb
fstp
js
sub
pop
xor
sub
inc
mov
pop
jmp
fld
jecxz
(bad)
aam
cmp
mov
aaa
sub
inc
sub
ret
pop
bound
mov
inc
int3
pop
jae
dec
jl
out
and
pop
test
xor
outs
imul
push
inc
sbb
push
jecxz
mov
idiv
push
mov
scas
mov
fstp
jbe
jmp
add
and
loopne
imul
in
cwde
out
fdivr
add
cwde
adc
xor
pop
fcomp
lahf
xor
out
inc
sub
js
jbe
out
or
mov
call
lea
pop
and
imul
jle
(bad)
popa
in
cmps
into
nop
sub
aaa
xor
outs
rol
nop
sbb
pusha
imul
mov
inc
lods
loop
and
xor
fcom
mov
xor
mov
in
mov
mov
pop
cmp
xchg
mov
fist
pushf
xor
clc
mov
add
inc
das
xor
push
and
lods
stos
adc
rcr
fwait
inc
dec
push
xor
cmp
out
xlat
hlt
mov
fdivp
push
cmps
outs
test
inc
mov
adc
or
iret
rcl
test
outs
das
add
ins
mov
retf
movs
push
repnz
pop
dec
adc
jle
(bad)
dec
popa
popf
mov
fwait
dec
xchg
fdiv
inc
repnz
dec
(bad)
dec
or
pushw
stos
xor
push
adc
inc
xchg
push
rcl
jne
dec
sub
movs
not
arpl
js
inc
add
inc
adc
ror
test
hlt
stos
adc
fnstsw
inc
xchg
arpl
scas
out
ds
mov
rcr
and
jb
enter
and
fnstcw
popf
mov
pusha
(bad)
inc
sub
fistp
test
lds
and
mov
mov
jae
xchg
mov
sub
pop
add
push
cs
xchg
or
jo
inc
leave
(bad)
adc
imul
loope
arpl
inc
(bad)
jb
dec
bound
int3
(bad)
in
and
test
xchg
(bad)
or
cli
les
push
sub
xchg
je
ins
or
sub
push
pop
jmp
int3
or
sbb
ror
ins
push
pop
mov
fs
sti
adc
xor
adc
push
ret
test
loop
test
ja
push
mov
sub
adc
push
sbb
ins
test
dec
lock
jno
in
mov
leave
mov
mov
jno
lods
jg
xor
inc
adc
mov
call
ja
jnp
adc
mov
rcl
imul
xchg
cmp
shr
sub
mov
aad
icebp
in
fldenv
inc
cwde
or
movs
xor
aaa
mov
sub
pop
daa
mov
test
sbb
mov
push
jmp
jb
gs
adc
pop
jne
add
mov
rcr
lock
push
int3
sub
adc
push
add
sahf
test
add
adc
test
sub
inc
fisttp
mov
push
and
aaa
test
mov
jbe
pusha
dec
ret
mov
std
push
inc
mov
loope
mov
jae
pop
jp
mov
das
pop
xchg
ror
and
jg
mov
jbe
or
sti
xor
aad
cli
sub
je
mov
in
pop
jmp
es
addr16
pop
sub
add
or
clc
js
mov
mov
cdq
sbb
push
lods
dec
lea
cmp
jae
push
push
mov
jl
add
ins
push
and
pop
inc
xchg
push
outs
pop
fwait
(bad)
push
out
aas
add
mov
inc
pop
jo
(bad)
push
jmp
lods
add
fst
and
es
adc
imul
neg
xlat
pop
sar
sub
out
xchg
sahf
test
inc
test
and
ins
ins
inc
loop
rcr
or
lods
inc
sub
inc
addr16
xchg
push
xor
mov
or
mov
outs
das
mov
ds
adc
ret
sbb
sbb
or
stos
pusha
mov
sub
xchg
dec
fcmovbe
cmp
dec
mov
inc
call
jo
sub
mul
pop
aas
xor
dec
into
sti
xchg
jno
xlat
call
jmp
ror
imul
xchg
ja
push
lahf
mov
adc
and
jmp
daa
xor
xchg
push
ret
mov
lahf
jp
add
cmp
movs
inc
repz
pop
push
outs
dec
or
(bad)
test
aas
addr16
inc
xchg
pop
pop
xchg
add
pop
imul
lods
loope
add
repz
mov
cld
xchg
fimul
ror
popa
mov
dec
mov
mov
shr
call
mov
inc
xchg
loopne
sub
lock
sahf
jne
sbb
pop
mov
push
dec
call
repz
mov
fcmove
pop
sbb
data16
adc
jne
mov
xchg
loop
push
dec
test
cmps
push
stos
enter
inc
mov
push
jnp
int
in
stc
out
dec
lock
call
imul
popa
or
jge
hlt
call
cmp
pop
mov
ins
dec
repnz
xlat
mov
push
repnz
mov
ret
lock
(bad)
je
mov
mov
xchg
dec
out
push
cwde
push
pop
call
stos
movs
inc
loopne
data16
inc
test
push
daa
mov
cmp
enter
xchg
mov
cmp
push
(bad)
loope
lahf
sub
retf
jp
xor
mov
in
pop
cmp
mov
inc
cmp
or
jns
dec
call
xchg
sub
(bad)
or
cmp
xchg
dec
fsubr
call
cmp
bound
lahf
sbb
cmp
iret
ds
mov
inc
push
outs
test
int3
add
mov
pushf
sub
push
sub
push
(bad)
fstp
and
inc
pop
outs
paddw
sahf
add
aaa
pop
add
add
loop
shl
rcr
sbb
aam
icebp
int3
scas
lea
cld
rcr
mov
pop
pop
inc
mov
mov
xor
and
adc
xor
xchg
add
and
mov
or
mov
cmps
jmp
cwde
cmp
imul
mov
xchg
icebp
enter
cld
cmc
xor
dec
xor
stos
push
adc
jo
clc
idiv
in
mov
jp
imul
jmp
clc
cmps
pop
fistp
push
(bad)
(bad)
stc
icebp
jecxz
push
outs
mov
jmp
cs
dec
movs
mov
add
cs
icebp
pop
jle
pop
inc
loopne
cwde
psrad
leave
sbb
outs
iret
es
js
pop
sub
push
cmp
cmp
mov
dec
add
ficomp
inc
dec
xor
or
rcr
fs
dec
inc
xchg
ins
arpl
outs
pop
enter
push
inc
add
rol
sbb
hlt
adc
xchg
int
ror
outs
xor
push
cmps
add
pop
popf
jmp
(bad)
xor
xchg
mov
sub
test
xchg
jge
xchg
call
ret
push
sbb
retf
outs
int
and
fwait
push
mov
cmp
nop
ret
hlt
ret
mov
and
aaa
mov
xchg
fadd
push
sub
xor
sbb
mov
rcl
std
lods
imul
retf
cmp
add
mov
enter
das
xchg
inc
jp
mov
pop
sar
or
push
es
cmc
pop
push
adc
sti
jge
jge
in
push
ja
adc
jbe
cmps
sti
div
push
jno
jne
(bad)
aad
(bad)
shl
mov
sbb
stos
inc
or
mov
push
mov
push
sbb
cmp
mov
out
aaa
cmp
jmp
mov
add
inc
add
out
sub
sub
pop
xor
and
mov
aad
mov
fidiv
repnz
sahf
jge
add
rol
mov
out
fwait
and
pop
mov
jge
cdq
lea
rcr
sbb
sub
leave
jecxz
mov
xchg
or
loop
(bad)
xor
sub
or
movs
add
movs
aam
hlt
mov
mov
mov
in
sub
xor
add
add
jmp
add
fisttp
test
jle
sbb
std
jl
jb
call
jae
ds
std
(bad)
loopne
mov
mov
ss
js
mov
push
test
mov
xchg
fcom
cmp
cmc
aas
arpl
outs
add
gs
cwde
or
xchg
xchg
fst
mov
jecxz
push
jbe
mov
cdq
loopne
idiv
mov
pusha
jne
push
xchg
pop
jmp
fimul
xchg
jge
sub
pop
ins
xchg
hlt
inc
loop
lock
push
lock
fidivr
shl
repnz
(bad)
dec
loop
adc
lea
sub
(bad)
in
test
sbb
and
jno
ins
hlt
cli
cmp
leave
and
push
jl
aas
lods
xchg
pop
dec
ror
jb
mov
mov
mov
push
leave
ds
xchg
das
movs
ins
test
mul
mov
jno
pop
mov
movs
xor
add
dec
mov
call
mov
rcl
mov
add
mov
imul
mov
cwde
cmp
sbb
mov
cmova
mov
cmps
pop
retf
popa
sub
outs
mov
scas
fmul
sbb
dec
cwde
(bad)
cli
cmps
jg
add
cmc
dec
cld
(bad)
out
sub
pop
xor
jge
adc
into
xchg
ror
pusha
scas
jp
outs
sbb
pop
adc
rol
(bad)
retf
push
cwde
adc
addr16
push
fsub
inc
xchg
mov
std
push
nop
pop
pop
xchg
xor
movs
inc
cmp
pop
out
pop
cmp
outs
jmp
rol
jmp
cli
sbb
xchg
ror
xchg
mov
sub
jmp
aaa
shl
mov
iret
popa
xor
fsubr
pop
lods
rcr
adc
sbb
push
pmaddwd
retf
lods
out
jnp
jno
mov
(bad)
stos
lods
push
add
cs
es
inc
sbb
xchg
cmp
xchg
lods
xchg
cld
pop
adc
in
jmp
ret
mov
dec
xchg
int
iret
test
icebp
jmp
mov
lods
out
into
pushf
addr16
shr
popf
sub
ins
push
inc
addr16
test
cmp
cli
sub
inc
push
fadd
data16
cmp
cmc
fild
mov
int3
dec
mov
cmp
(bad)
fbstp
in
das
xor
in
addr16
or
xchg
fcomp
pusha
pop
pushf
and
pop
mov
test
ins
pop
fistp
push
(bad)
pop
xchg
pop
scas
movs
add
cdq
add
pop
icebp
or
xor
addr16
imul
js
movs
nop
or
add
test
arpl
jmp
and
jp
mov
lock
daa
hlt
pop
mov
sar
(bad)
jnp
les
(bad)
aam
pop
lock
retf
fnsave
sub
in
rcr
xchg
xchg
loop
(bad)
jae
sbb
xor
pop
shl
cmp
dec
stos
xchg
pop
popa
mov
add
stos
scas
or
ins
push
jns
int3
cmps
jnp
retf
ret
push
jmp
cmps
fidivr
shl
retf
pop
jge
(bad)
fiadd
sti
ins
loopne
ret
test
fsub
jmp
pop
pcmpeqb
mov
fcmovu
pop
and
cld
xchg
adc
push
sub
jns
call
test
es
sub
lea
out
mov
push
lods
xchg
adc
shl
ins
stos
or
mov
cmp
gs
adc
pop
gs
mov
or
mov
jg
inc
pop
in
scas
sub
out
test
fnstenv
cwde
test
movs
into
mov
out
(bad)
xor
mov
adc
mov
jne
retf
ss
or
push
xchg
xchg
xlat
(bad)
aam
push
dec
jmp
push
cwde
bound
sbb
dec
retf
adc
repz
jl
jbe
fsubr
mov
pop
std
into
jge
mov
repz
cmp
(bad)
repz
fstp
sub
in
aam
lea
inc
jecxz
cli
arpl
pop
mov
or
xchg
pop
add
and
(bad)
(bad)
mov
push
mov
movs
je
jnp
inc
in
fimul
mov
and
xchg
mov
hlt
push
pop
in
dec
pop
rcr
sbb
stos
xor
les
jecxz
rol
add
arpl
fisttp
mov
xchg
mov
push
imul
dec
push
and
scas
in
repnz
pop
jno
gs
int
adc
xchg
cmps
arpl
je
call
leave
jle
mov
popa
in
mov
sahf
fdiv
mov
movs
retf
rcr
add
add
int3
fwait
and
test
push
stos
or
stc
adc
stos
jl
stos
xchg
addr16
sbb
pop
fidivr
push
jne
xor
adc
push
shl
outs
mov
out
mov
jmp
push
or
sub
aad
jns
clc
jp
mov
sub
addr16
sti
dec
xor
or
std
dec
ret
mov
xchg
sub
adc
call
cmp
in
lea
scas
ss
inc
rcl
inc
xchg
nop
xor
sbb
mov
in
daa
in
xor
imul
es
cs
js
loop
es
sub
dec
leave
je
mov
or
pop
xchg
repnz
mov
test
mov
fisub
out
mov
iret
mov
test
xchg
inc
outs
adc
jae
xchg
xchg
rcr
dec
test
test
pop
pop
fbld
add
(bad)
pop
leave
(bad)
icebp
dec
dec
push
lods
mov
jecxz
jmp
adc
mov
adc
push
outs
ins
out
outs
stos
add
std
aaa
adc
inc
enter
pop
fidiv
jecxz
sub
dec
fwait
inc
push
sub
lds
and
adc
xor
dec
sar
mov
mov
push
adc
jmp
dec
lock
xchg
stos
movs
fbstp
mov
inc
fsub
retf
test
int3
mov
jnp
mov
iret
sub
arpl
push
and
mov
popf
ret
movs
in
hlt
fild
out
dec
(bad)
cmp
and
cdq
out
jns
aaa
sub
pop
ja
bound
stos
cmps
push
push
dec
jecxz
cmp
(bad)
push
dec
cmps
jp
cmp
sbb
and
imul
pushf
je
xchg
scas
cwde
gs
scas
imul
sub
stc
xchg
stc
mov
fwait
dec
or
sbb
inc
pop
retf
fisttp
adc
addr16
sub
add
jge
imul
outs
cmps
fwait
jecxz
mov
test
test
stos
cmp
cmps
icebp
pop
jo
mov
xchg
or
jmp
outs
jno
add
add
bound
add
mov
retf
and
mov
loope
pop
jbe
fdiv
les
push
pop
add
adc
nop
pop
mov
aam
dec
sub
(bad)
and
(bad)
add
mov
ins
(bad)
fcom
jno
pop
or
ror
xor
outs
sbb
mov
fsub
push
xor
inc
cmp
or
shl
push
add
movs
jl
or
stc
pusha
adc
ds
mov
sub
sub
sbb
xchg
imul
ds
lods
ret
stos
push
pop
add
sub
adc
and
adc
mov
out
jne
jmp
in
cmp
jecxz
bound
movs
or
sahf
into
fs
sbb
addr16
inc
push
mov
(bad)
jmp
add
in
rcr
xor
rcr
pop
cmps
xlat
xchg
in
(bad)
fcom
push
(bad)
sub
mov
inc
sub
sbb
pop
imul
pushf
retf
out
nop
das
inc
pusha
sbb
scas
pop
cmps
(bad)
mov
xor
mov
dec
adc
and
cli
sub
mov
sub
cmp
sub
cmp
jo
dec
xor
sbb
dec
mov
je
inc
mov
scas
test
adc
mov
and
inc
xor
test
sbb
mov
cld
mov
mul
dec
fisubr
jl
or
mov
inc
inc
cmp
dec
sub
mov
movs
test
pop
and
into
in
mov
cmc
lds
pusha
add
outs
sub
sub
dec
mov
xor
inc
cmp
retf
push
cmp
in
add
push
mov
je
dec
mov
xor
into
movs
mov
xchg
sub
jb
stos
idiv
pop
mov
jmp
gs
mov
int3
add
(bad)
aad
dec
fist
jmp
push
pop
dec
add
test
xor
xor
dec
adc
xor
push
das
lahf
or
(bad)
mov
xor
cmp
xchg
pop
test
idiv
sahf
push
cmp
mov
inc
xor
and
xchg
and
repz
ins
mov
push
fstp
inc
movs
and
xchg
movs
push
push
jecxz
(bad)
or
sahf
sbb
cwde
lock
cmp
ret
pop
fwait
div
addr16
mov
scas
hlt
(bad)
retf
push
xor
outs
jns
ins
mov
retf
pop
push
cdq
jns
push
inc
pop
push
in
fdiv
pop
(bad)
into
add
inc
mov
mov
jne
xor
shl
or
pop
add
and
jl
add
cld
xchg
dec
sbb
or
mov
adc
and
aaa
adc
loopne
js
fdiv
mov
mov
sub
(bad)
sti
pop
outs
cmp
loope
cwd
pop
dec
pop
shl
push
dec
cmps
mov
mov
rcl
xor
adc
shl
sub
aam
ror
mov
and
add
aad
mov
xchg
aas
mov
xchg
fidivr
push
(bad)
push
cld
sbb
or
cmp
rol
and
inc
add
xchg
test
push
adc
mov
pop
pop
push
sahf
sub
data16
jge
test
pop
cmp
out
adc
test
cmp
sbb
ins
jle
scas
cmp
cli
(bad)
movs
xor
cmp
mov
lar
mov
aaa
mov
js
pop
icebp
dec
sub
in
in
in
jbe
fwait
and
sahf
pop
stos
sub
lock
push
pop
jbe
inc
or
push
add
aaa
push
es
test
jmp
mov
and
arpl
ds
lahf
mov
lea
pop
push
je
clc
adc
in
test
xor
fdiv
ja
pop
xchg
js
loope
add
sub
push
enter
push
lahf
dec
ror
mov
stc
jae
mov
jnp
mov
xor
dec
enter
sbb
aad
xor
and
mov
lock
adc
jne
hlt
inc
enter
stos
mov
xchg
or
pop
push
cmp
mov
sub
(bad)
fadd
inc
nop
or
xor
movs
test
out
xchg
mov
sar
outs
push
push
repz
mov
pop
or
dec
xchg
loopne
cld
push
xlat
loopne
les
mov
or
or
pop
and
inc
sbb
dec
test
das
pop
cmp
mov
lds
cmc
xor
xchg
movs
data16
cmps
sar
iret
cdq
popa
pop
inc
pop
inc
mov
ficom
sbb
mov
push
mov
push
scas
sbb
test
mov
adc
mov
sti
pop
test
test
mov
and
popa
lods
pop
cmc
shl
fdivr
out
ror
hlt
lods
(bad)
mov
jb
cwde
or
popa
adc
clc
add
jge
jle
fist
cmp
pop
movs
arpl
fadd
xlat
ins
jg
into
scas
jnp
mov
in
mov
pop
inc
jb
push
xor
retf
xchg
mov
les
dec
inc
dec
jle
addr16
das
pop
dec
jnp
cmp
pop
fadd
or
cmp
retf
cmp
fs
add
addr16
(bad)
jle
jno
and
fcomp
stos
jae
repnz
cmp
inc
adc
(bad)
mov
sub
dec
popf
jg
dec
xchg
loope
jmp
xchg
xor
mov
repz
retf
jb
dec
leave
ins
js
add
push
xchg
mov
mov
pop
cmp
stos
xchg
(bad)
rcl
inc
mov
push
(bad)
out
pop
and
retf
jb
arpl
(bad)
cli
mov
jmp
ins
xchg
test
jmp
inc
je
leave
rcr
jmp
push
fisubr
and
(bad)
mov
add
ss
pop
and
pop
cmc
je
retf
(bad)
fsub
push
shl
push
mov
mov
jecxz
mov
movs
sbb
into
imul
aas
jae
frstor
inc
inc
jle
jge
les
inc
in
dec
mov
jbe
sbb
imul
sti
cs
in
mov
cmp
ins
dec
jno
sbb
nop
stos
cmp
or
fsubrp
push
stos
adc
adc
mov
les
push
fnstenv
jnp
stos
js
call
shl
in
rol
push
push
sbb
dec
pop
mov
in
fistp
adc
lock
ret
sbb
call
jl
je
push
dec
push
shl
push
jno
push
test
mov
sub
push
adc
pushf
int3
adc
imul
pop
mov
cmps
fbstp
jecxz
pusha
cli
das
(bad)
dec
dec
ret
in
mov
mov
sub
cmp
(bad)
or
jns
xchg
stc
(bad)
mov
pop
cbw
outs
data16
push
fbstp
jno
jle
gs
inc
mov
data16
cmp
ret
movs
dec
jne
sub
jae
jp
mov
lock
push
jmp
sbb
call
(bad)
imul
pushf
and
sbb
add
cmp
push
or
cmp
popf
lea
xor
add
stos
pop
adc
jnp
sbb
sub
mov
cmp
retf
pop
pop
xchg
out
retf
cmps
sti
sub
lea
dec
outs
enter
cli
inc
cmp
xchg
movs
add
addr16
(bad)
adc
push
and
cmp
push
jg
scas
add
out
out
not
div
cmp
mov
lods
repnz
dec
mov
cmp
aam
repz
and
dec
push
aas
ins
sbb
je
lock
inc
repnz
dec
shr
mov
cld
jo
stc
cmp
push
dec
mov
in
loop
(bad)
call
call
cmp
lods
sti
or
stc
pop
lock
jge
ss
jbe
jmp
jp
(bad)
fwait
loopne
in
mov
mov
pop
loope
shr
push
jmp
xor
add
fisttp
jecxz
push
int
les
mov
pop
or
or
pop
stc
cmp
aas
gs
sbb
cmps
in
mov
jp
jnp
(bad)
mov
pushf
add
cmp
adc
lock
mov
cld
push
add
jns
pop
shl
mov
shl
stos
lods
push
loop
xchg
push
mov
xchg
mov
and
in
(bad)
cli
gs
in
repnz
cmp
aaa
cmp
bnd
push
adc
jmp
or
addr16
sbb
xchg
mov
pop
pop
mov
jl
popf
mov
popa
enter
sub
ss
or
xlat
xchg
inc
repnz
ret
xchg
mov
imul
sbb
loop
imul
cld
jmp
dec
and
xchg
and
cdq
mov
jle
pop
fild
mov
inc
pop
sar
xor
mov
pop
cmp
and
aas
and
jno
je
scas
in
or
pop
rol
jp
loop
cwde
sbb
dec
icebp
es
push
push
bound
call
fldenv
aam
repnz
xchg
repnz
mov
cmp
or
rcr
data16
rcr
dec
pop
pop
mov
lds
popf
inc
sub
rcr
add
repnz
fcmovnb
push
mov
hlt
dec
retf
loope
pop
sub
pop
sbb
(bad)
(bad)
and
icebp
dec
sbb
mov
test
ficomp
(bad)
inc
and
dec
sahf
pop
mov
pop
mov
push
adc
ror
jnp
call
cmps
xor
mov
adc
adc
hlt
ret
dec
add
(bad)
xlat
inc
jb
test
inc
adc
inc
fs
les
jmp
jnp
pusha
pop
push
leave
mov
shl
or
and
sahf
shl
out
xor
pop
add
and
loop
sti
pop
fadd
imul
mov
jge
popf
mov
or
or
xchg
dec
dec
jge
test
in
push
jne
popf
push
add
ds
dec
test
mov
aaa
or
fiadd
imul
scas
int3
cmp
jae
cwde
ins
arpl
leave
clc
pusha
sub
lds
xor
and
sbb
add
shr
mov
mov
xchg
pusha
call
outs
sub
cmp
imul
rcl
adc
sbb
xchg
jae
mov
movs
dec
mov
or
test
adc
js
push
inc
push
push
test
call
test
pop
mov
out
push
mov
je
pop
sbb
imul
jno
pop
sub
int
xchg
mov
(bad)
shl
or
mov
imul
jmp
data16
pushf
out
mov
shr
fild
jge
mov
xor
das
fisttp
jl
fst
pop
outs
test
in
fidivr
out
mov
xor
cmp
jg
neg
aam
pop
inc
int
xchg
lahf
(bad)
or
cmp
jno
in
adc
mov
push
pop
cmp
inc
pop
mov
sub
pop
adc
bound
sub
pushf
data16
cli
cs
iret
in
pop
inc
dec
repz
ja
and
retf
mov
loopne
xchg
add
sti
or
daa
jbe
ret
aam
lock
shl
aad
pop
pop
add
dec
mov
out
jo
popf
aas
(bad)
in
ins
iret
retf
aam
pusha
xor
xchg
xchg
mov
mov
out
inc
pop
rcr
jmp
scas
mov
rol
in
sbb
adc
bound
mov
dec
mov
sbb
push
sbb
popa
mov
sub
sub
fwait
cmp
call
sub
call
ja
enter
jo
xor
aam
inc
ja
lods
mov
jmp
xor
and
bnd
jg
mov
push
inc
movs
jp
les
and
jo
loop
(bad)
inc
outs
sub
leave
xchg
hlt
int3
(bad)
cld
jo
xchg
leave
dec
jp
pop
sbb
mov
out
and
aam
dec
sbb
mov
sbb
stos
mov
xchg
dec
dec
cwde
inc
dec
or
mov
adc
push
clc
aaa
cmp
in
scas
mov
lods
sub
sub
ss
jecxz
aaa
dec
cmps
or
jp
mov
dec
push
je
xor
leave
xor
and
lahf
and
mov
cmps
jnp
call
arpl
jle
out
mov
push
xchg
xor
(bad)
mov
addr16
and
retf
ror
test
mov
and
call
pop
enter
ret
leave
and
inc
aad
add
cmps
cli
xchg
sub
and
(bad)
lods
lods
sub
adc
pusha
or
mov
addr16
ror
stc
fs
fbld
shr
movs
adc
inc
shl
ficomp
ja
ins
xchg
leave
out
sbb
jno
adc
fnstsw
in
iret
outs
sti
test
or
imul
adc
mov
adc
fadd
push
adc
mov
js
fucom
mov
test
les
xor
pop
repz
sti
scas
fs
and
and
pop
jg
cmps
or
push
fmul
push
sub
inc
popa
call
and
add
push
mov
dec
fisub
dec
cmc
int
dec
hlt
aaa
adc
ins
jnp
je
clc
leave
imul
hlt
test
clc
sbb
and
pop
or
enter
outs
imul
mov
je
rol
js
shl
pop
into
out
lds
in
and
pushf
fwait
inc
push
mov
outs
dec
dec
cdq
shr
imul
sub
lods
or
sar
pop
push
add
nop
jne
jecxz
cmp
ret
jmp
imul
jg
imul
cvtpi2ps
bndldx
pusha
pushf
dec
sbb
mov
jo
stos
pop
fild
in
mov
jne
dec
xlat
(bad)
xor
call
pusha
xchg
xchg
jle
adc
or
push
sbb
hlt
aas
and
and
aaa
lock
xor
scas
push
stc
gs
or
mov
les
ror
pushf
sub
ins
xor
iret
pop
cdq
cmc
push
inc
(bad)
movs
mov
rcr
sub
(bad)
push
jbe
fstp
adc
xchg
fmul
push
add
mov
sahf
in
popa
stos
(bad)
std
push
add
cmps
jo
cmps
pushf
xor
and
pop
or
in
mov
test
or
adc
dec
lea
in
cmp
in
test
push
(bad)
aad
mov
call
gs
rcl
aaa
je
test
int
and
addr16
cdq
pop
xlat
mov
ja
movs
fsub
jle
mov
loope
mov
adc
and
in
(bad)
dec
jp
adc
jbe
test
add
dec
lods
mov
cmovge
pusha
shl
test
mov
pop
jbe
xor
je
les
shl
cwde
div
pop
loope
mov
mov
xor
jno
in
jge
icebp
call
push
in
les
add
out
cs
mov
in
xor
lds
scas
cmp
ins
cmp
xchg
hlt
mov
sub
(bad)
les
add
outs
fild
xor
and
dec
push
jne
inc
jle
mov
(bad)
sbb
sbb
popa
or
lods
lea
mov
aas
xor
mov
fs
test
or
mov
arpl
xchg
(bad)
shl
test
fistp
out
test
or
push
popa
jmp
gs
push
jns
test
cmc
push
jmp
xchg
sub
jmp
and
sub
jmp
inc
dec
test
fcmovnb
push
xchg
sub
cdq
jo
in
xchg
test
push
retf
cdq
inc
lahf
retf
scas
add
pop
adc
pop
sbb
pop
pop
addr16
shl
xchg
mov
xor
in
cld
sbb
retf
jo
and
mov
xchg
push
sub
in
sbb
stos
dec
and
sub
mov
test
jg
ret
scas
repnz
rcl
or
in
push
xor
jmp
dec
xor
mov
sbb
jo
loope
(bad)
int3
adc
and
xor
fwait
and
xor
dec
xchg
jno
je
jne
xchg
(bad)
retf
std
mov
dec
or
cmp
rol
sbb
cmp
mov
dec
push
out
ficom
icebp
fs
iret
push
cwde
and
int
lahf
imul
push
jmp
daa
pop
(bad)
not
inc
hlt
cmp
in
push
or
or
dec
jl
inc
(bad)
ds
test
mov
inc
inc
shr
mov
mov
jo
pop
pop
jge
es
cmp
aam
xchg
shl
add
jb
xchg
popa
leave
dec
sub
nop
cli
cmp
or
pop
cmp
aas
fmul
xchg
sahf
cmp
pop
test
fst
(bad)
or
rcl
das
inc
cs
shr
mov
jb
popf
mov
sub
xlat
add
aaa
lds
and
pusha
loope
test
and
sub
jne
fbstp
leave
icebp
xor
jg
adc
mul
jno
lahf
ror
adc
stos
clc
sar
jmp
dec
push
rcr
mul
cmp
mov
dec
cdq
out
out
lods
das
jge
mov
sbb
lods
sbb
retf
pop
and
mov
lds
cs
push
ss
jp
xor
jge
mov
mov
leave
pop
xor
aas
(bad)
aas
lock
xor
sbb
adc
outs
jmp
cmp
mov
ins
push
jno
jo
or
movs
aad
popa
out
jmp
adc
in
movs
outs
aaa
cs
mov
inc
adc
and
mov
jne
jb
out
stc
push
adc
es
popa
jo
sub
cmp
les
es
cli
retf
int
and
sbb
retf
xchg
mov
add
movs
aas
jb
or
xchg
and
jmp
xchg
jnp
es
ret
mov
lea
test
sub
in
cmc
adc
(bad)
cmp
div
inc
repnz
loop
jmp
jmp
mov
imul
lods
int
xchg
add
mov
cwde
loopne
std
cs
pop
add
fxch
mov
xchg
jge
push
call
test
rcl
pop
mov
jp
fimul
mov
ror
sbb
fild
xchg
fnstenv
pop
mov
mov
add
push
cld
cs
sbb
push
cdq
mov
mov
aam
cmps
mov
or
lahf
das
test
cmp
push
adc
dec
inc
test
in
fbld
mov
pop
and
pop
jecxz
sahf
scas
aaa
movs
jl
mov
xor
mov
jb
inc
mov
dec
test
push
mov
stos
sbb
adc
pop
test
adc
js
pop
pop
jae
aaa
jle
adc
call
mov
adc
mov
cmps
cmp
sub
popa
jne
neg
scas
xchg
sbb
push
mov
arpl
daa
pop
sbb
clc
sub
out
lods
mov
xchg
mov
xchg
mov
xor
push
xor
lods
out
or
adc
adc
push
jb
mov
xor
movups
ficomp
aas
mul
cs
scas
mov
add
cmp
outs
cmp
retf
add
jmp
retf
imul
fwait
scas
dec
retf
mov
stc
and
inc
nop
mov
rcr
ins
mov
mov
(bad)
out
test
ret
(bad)
(bad)
(bad)
fs
aad
dec
sbb
sahf
hlt
push
push
(bad)
cmp
mov
lods
movs
mov
in
jmp
or
aaa
in
dec
addr16
xlat
out
sar
movs
sub
(bad)
out
mov
push
inc
pop
mov
sub
imul
lods
aam
pop
int3
inc
push
in
xchg
(bad)
das
cmp
mov
push
dec
aas
dec
call
lods
mov
mov
mov
jb
scas
add
xchg
lds
frstor
shl
jle
mov
(bad)
jb
xor
js
jg
xchg
adc
jbe
aas
(bad)
movs
mov
or
xchg
outs
sbb
pop
mov
xlat
aam
fldcw
jg
ss
mov
cdq
and
je
jp
mov
dec
stc
mov
dec
jns
push
in
xchg
fwait
leave
les
(bad)
mul
repz
mov
fcomp
add
outs
mov
sub
sub
loopne
xchg
pop
push
cdq
imul
dec
or
push
or
arpl
je
jbe
fidiv
test
add
stos
outs
xor
out
ins
jmp
cmps
sub
test
lock
shl
mov
and
cmp
loop
aaa
bound
add
pop
icebp
in
lods
out
mov
fnstenv
and
fmul
enter
call
mov
cs
cmp
std
mov
dec
xchg
add
das
or
mov
fbstp
mov
cld
fcom
mov
sub
std
sub
push
data16
in
push
shr
mov
pop
xchg
je
call
or
inc
push
mov
cmp
cmc
pop
jmp
test
outs
or
fcomp
dec
dec
inc
xchg
mov
sub
int
out
fimul
push
fimul
(bad)
loope
xchg
out
ret
xchg
add
daa
or
test
push
jp
pop
sbb
push
mov
mov
outs
sbb
bnd
cwde
ins
mov
or
and
fild
fldcw
arpl
mov
inc
pop
test
mov
sub
mov
imul
cmp
inc
outs
dec
mov
mov
sbb
mov
movs
int3
loopne
xchg
pop
pop
add
add
inc
push
std
rol
js
inc
dec
cli
xchg
rol
test
inc
in
sbb
cld
inc
movs
call
shl
(bad)
fisttp
daa
or
inc
jge
gs
fwait
aam
aam
pop
sbb
xor
pushf
mov
bound
mov
sbb
mov
mov
ret
fld
(bad)
push
jo
xchg
cmps
sbb
add
sbb
and
ss
test
xlat
cmp
inc
(bad)
pop
mov
ret
xchg
int3
mov
lea
xchg
xor
mov
jns
inc
sar
(bad)
dec
sub
mov
call
mov
mov
ins
cmp
sub
lds
xor
xor
sbb
sub
enter
daa
in
in
mov
popa
sbb
arpl
int
push
xor
mov
pop
pop
lods
dec
jmp
loopne
jns
push
mov
loopne
xor
int
loop
xor
rol
dec
in
jne
sahf
fsub
jge
sub
sub
cwde
jmp
add
jmp
scas
scas
jnp
mov
xor
or
pop
shl
ret
pop
iret
jae
push
fyl2x
xchg
jl
ins
sti
sbb
clc
(bad)
int
cmp
mov
shr
mov
jnp
ss
xchg
int
mov
add
bound
mov
mul
les
add
jbe
cmp
in
fsub
xor
inc
jg
mov
fld
push
inc
xchg
and
leave
sub
adc
dec
or
jmp
repz
jne
dec
sbb
mov
shr
push
adc
mov
cdq
clc
arpl
mov
pop
mov
add
ins
xor
dec
cld
out
cmps
sub
out
and
pop
in
push
mov
cmc
retf
test
fist
hlt
in
stc
ja
lods
push
pop
shr
cmp
out
fmul
dec
or
loope
nop
jecxz
dec
(bad)
in
push
rcr
mov
(bad)
lock
jmp
jno
in
test
das
and
or
sbb
dec
test
mov
xchg
es
call
xchg
hlt
ret
neg
adc
mov
neg
sbb
push
cmp
mov
pusha
push
mov
pop
mov
dec
mov
rcr
adc
dec
jae
xor
xor
push
mov
lods
shl
pop
cs
add
loope
jg
(bad)
push
mov
dec
jmp
mov
add
adc
call
das
jae
mov
(bad)
cmp
cdq
xchg
test
es
sahf
cmp
adc
cmp
mov
xchg
dec
cmp
push
cmc
retf
xor
sahf
sar
jle
(bad)
mov
jo
test
mov
jmp
cwde
inc
pop
ins
fcomp
jge
fs
ret
mov
rcl
aas
inc
add
dec
and
sahf
cmc
js
ss
push
pop
outs
dec
xchg
push
dec
sub
ja
retf
or
or
mov
test
std
in
repnz
cmc
sahf
push
jo
cmps
push
xor
int
shl
xor
cmp
call
in
repnz
icebp
leave
inc
dec
pop
lods
sbb
aas
dec
add
jo
outs
mov
xor
dec
cmp
movs
shl
and
add
cmps
mov
push
pop
jnp
xchg
add
call
hlt
je
add
dec
iret
and
cmps
out
arpl
in
iret
inc
outs
mov
cmps
cmp
push
in
adc
dec
inc
sub
fnsave
cmp
xchg
adc
inc
adc
(bad)
popa
(bad)
jno
nop
push
pop
test
pusha
in
cmps
arpl
stos
and
inc
mov
scas
adc
jae
scas
push
jle
push
sbb
push
aaa
stos
mov
pop
lds
sbb
mov
test
pop
ds
fsubp
dec
fsub
clc
and
jmp
(bad)
jbe
stos
xchg
not
inc
mov
fwait
cwde
jge
es
shr
daa
pop
adc
outs
scas
lods
sub
repz
ror
push
push
stos
push
mov
ret
stos
idiv
in
out
test
pop
jmp
cmp
out
call
inc
inc
cmps
stc
mul
out
sub
jp
mov
mul
sets
retf
pop
fwait
jecxz
adc
pop
inc
jecxz
pusha
xor
xor
push
sub
scas
iret
shr
mov
loope
sub
and
sub
cmps
adc
mov
adc
mov
mov
or
sub
jno
jl
mov
xchg
(bad)
sub
sbb
mov
ret
adc
sub
and
sbb
test
inc
fidiv
ja
mov
movs
xor
push
jo
(bad)
(bad)
jge
int3
sub
push
adc
add
fs
inc
cld
in
push
or
je
and
jmp
jecxz
dec
bound
arpl
and
out
in
xor
jp
sub
dec
popf
popa
adc
lods
jl
ss
xchg
mov
daa
add
cmps
stc
and
mov
xor
mov
mov
lahf
sbb
jecxz
mov
sbb
inc
ins
imul
stos
das
xor
xchg
jg
into
push
and
and
out
call
dec
adc
ds
or
loop
out
mov
fimul
or
xchg
ror
sub
call
add
mov
das
xchg
mov
inc
clc
sti
fistp
push
push
xchg
push
aas
repz
xchg
fsubrp
and
not
or
adc
cmp
loope
push
mov
dec
mov
lods
stos
pop
(bad)
ds
fwait
rep
call
imul
or
xor
dec
or
jmp
pop
les
or
sub
add
sahf
mov
dec
mov
ret
sub
add
mov
cmp
aaa
sahf
fild
call
mov
xchg
daa
add
pop
nop
cmp
movs
arpl
and
mov
das
ret
pop
int3
not
sbb
jne
fidiv
xor
out
push
or
sbb
mov
pop
sti
dec
sbb
xor
jae
mov
pop
or
mov
shr
sbb
(bad)
pop
and
mov
arpl
mov
mov
out
pop
fsubrp
cmps
add
in
int
push
std
mov
pop
adc
jo
push
(bad)
data16
sub
test
jmp
enter
mov
outs
adc
sti
cmp
gs
loopne
or
cli
fdivr
dec
xchg
jl
jmp
push
lods
sbb
jb
js
dec
aad
mov
daa
rcl
and
mov
lods
sbb
pop
cli
shr
inc
test
push
xor
stos
push
(bad)
gs
outs
es
jecxz
mov
sbb
rcl
scas
jg
xchg
add
scas
call
add
cmp
dec
jno
sti
jl
aad
xor
rcl
jb
js
mov
into
and
pop
or
shl
cmps
fwait
(bad)
mov
lds
and
sub
inc
mov
je
lea
xlat
xor
pop
mov
pop
push
pop
loopne
call
mov
adc
repz
cli
sbb
ins
jo
xor
fist
pop
dec
jns
test
aaa
mov
mov
xchg
or
xchg
pop
sub
dec
std
cmp
test
mov
fldenv
hlt
xor
sbb
add
mov
mov
in
xor
add
mov
sar
pop
inc
cmp
and
repz
push
dec
mov
or
shr
mov
inc
sbb
push
inc
ins
fwait
add
add
dec
pushf
pushf
or
mov
and
pop
add
fstp
repz
(bad)
std
imul
sahf
dec
cli
fimul
dec
in
pop
mov
mov
ret
pop
sbb
push
jno
pop
jne
outs
repnz
inc
dec
mov
push
es
and
dec
pop
mov
lds
sti
sub
imul
pop
fldenv
mov
mul
int3
fwait
pop
jnp
jmp
loop
mov
dec
addr16
dec
repnz
inc
call
call
dec
clc
mov
stos
shr
xchg
es
push
jae
adc
sub
test
jb
xchg
xchg
lea
sub
and
inc
iret
add
stc
shl
dec
mul
adc
clc
repnz
xchg
jmp
sbb
test
je
or
add
and
das
xchg
in
enter
mov
fist
fwait
or
add
jnp
fiadd
pop
cli
xchg
cmc
mov
mov
pop
jle
and
pop
push
or
cmc
ins
mov
retf
inc
mov
jmp
test
sbb
repnz
push
js
movs
mov
sub
in
sub
lock
and
call
cmp
sbb
adc
sub
or
xchg
aaa
and
cmps
xchg
sbb
or
fsubr
pop
fisub
inc
pop
dec
jb
xor
scas
dec
xchg
cmp
pusha
pop
xor
daa
dec
cmc
test
fldcw
xchg
ins
jmp
scas
or
inc
jmp
push
jmp
mov
or
repz
in
outs
ins
cmp
push
sub
mov
pop
pop
movs
xchg
stos
jb
mov
pop
je
sub
(bad)
and
or
stos
lds
jae
and
daa
mov
loopne
cdq
out
add
xchg
aaa
aas
xchg
(bad)
ror
lahf
dec
mov
in
xchg
cmp
es
dec
cld
loopne
push
xchg
xchg
inc
cli
ds
and
cmp
jne
inc
xchg
or
xchg
pop
dec
mov
sbb
std
jnp
adc
mov
pop
push
cld
clc
test
ror
mov
mov
imul
fcomi
mov
xchg
mov
inc
xor
xlat
sbb
fs
inc
pop
mov
or
push
push
xor
lahf
icebp
dec
and
mov
mov
das
fcomp
ficom
int
mov
pop
test
getsec
sub
je
xchg
aaa
pop
pop
cmps
or
clc
mov
movs
xor
jno
test
and
sub
dec
inc
and
push
into
int
cwde
mov
jo
ja
outs
and
rcl
xlat
daa
xchg
int
into
stos
add
cdq
pop
dec
xor
fmulp
outs
ror
test
mov
retf
out
mov
cmps
pop
push
add
jns
adc
inc
out
inc
call
daa
(bad)
cdq
mov
aas
push
or
fwait
sub
enter
jle
mov
das
inc
popa
jns
fldenv
xchg
jo
hlt
push
out
test
push
std
sub
shl
dec
addr16
xchg
adc
scas
adc
jbe
in
test
fs
popf
jb
pop
push
xchg
arpl
jae
je
jb
jne
addr16
retf
inc
add
cs
sti
mov
ret
out
adc
das
aam
hlt
(bad)
mov
adc
leave
dec
sub
xor
mov
xor
movs
sbb
mov
das
ss
fidiv
cmps
sbb
inc
loope
add
jnp
in
mov
cmp
sahf
(bad)
mov
xor
fwait
sbb
cmp
xor
inc
xchg
pop
and
(bad)
xor
adc
ret
cmp
cli
and
jl
jecxz
push
dec
fisttp
push
into
mov
xchg
mov
xlat
fstp
into
inc
jp
add
xchg
call
add
sub
inc
xor
pop
iret
(bad)
fst
movs
xchg
pop
and
lock
pop
test
stc
jl
sub
bound
xor
fst
adc
push
mov
adc
cwde
and
fist
dec
fadd
out
cmp
in
movs
fisubr
ret
sub
ins
mov
je
out
mov
outs
scas
loope
add
int
xchg
cmp
push
stc
mov
in
add
movs
xor
xchg
(bad)
stos
call
jecxz
xor
sub
mov
das
sbb
jnp
mov
jb
inc
jmp
push
and
in
jns
fwait
jb
daa
or
clc
cdq
jmp
retf
add
mov
(bad)
sub
inc
(bad)
adc
call
push
pop
xchg
sbb
inc
dec
sbb
scas
mov
pop
pop
dec
sbb
mov
or
movs
out
mov
sub
(bad)
push
and
push
or
cmp
jo
popa
mov
dec
mov
pop
jmp
stc
jecxz
dec
out
sub
sbb
push
sub
sub
adc
fsub
pop
sbb
push
into
cli
scas
cmp
mov
jle
xor
sbb
lods
loopne
cmp
mov
sbb
dec
sahf
jo
dec
mov
add
xchg
ins
adc
mov
repz
sbb
(bad)
mov
lods
int3
shr
or
dec
pop
repz
lods
or
or
adc
xchg
xchg
cmp
jnp
or
pop
sub
add
or
adc
push
jbe
sub
jecxz
xor
data16
pop
into
xor
lods
add
jae
mov
jns
dec
jecxz
xchg
mov
pop
jo
cmp
mov
inc
stc
add
mov
ja
inc
jbe
mov
sar
add
retf
dec
mul
sbb
(bad)
hlt
add
jmp
(bad)
pop
pop
rcl
pop
push
jg
cs
(bad)
sbb
inc
sub
sub
lds
out
or
in
pop
mov
xlat
mov
xchg
fisttp
fisub
call
inc
inc
stc
ds
cmc
jae
leave
adc
or
in
mov
xchg
aad
mov
push
test
repnz
jle
data16
int
loope
add
mov
mov
adc
xor
aaa
loopne
mov
mov
sbb
ins
ret
retf
adc
je
lods
lods
mov
xchg
mov
(bad)
lahf
stos
xor
cdq
data16
(bad)
inc
xchg
xor
es
je
fwait
mov
ss
fwait
dec
sub
xchg
(bad)
leave
push
xor
outs
out
sti
push
aas
jns
jp
setb
js
nop
in
lea
cmp
imul
cmps
mov
pop
xor
int3
cmps
add
mov
ins
into
fist
rep
aam
mov
mov
add
mov
rcl
ja
xchg
mov
xor
addr16
fwait
js
int3
add
daa
out
test
fldcw
inc
jne
popa
gs
cs
add
in
enter
dec
cs
fmul
jmp
iret
pop
lock
(bad)
add
into
(bad)
cmp
xor
hlt
add
xor
jle
sub
jl
mov
adc
dec
add
adc
and
repnz
popa
outs
mov
dec
fcomp
xchg
inc
outs
sti
push
or
pop
cmp
sub
sbb
stc
jne
je
in
mov
sahf
shl
jne
sbb
jne
in
and
dec
aaa
imul
inc
inc
inc
dec
popa
jb
sahf
xor
test
das
dec
pop
jno
es
(bad)
hlt
stc
ds
data16
stos
repnz
adc
into
jb
shl
and
arpl
xchg
mov
dec
fs
sbb
outs
mov
imul
add
cs
shl
xchg
cld
mov
dec
dec
mov
add
aam
inc
mov
lea
clc
jae
not
loop
movs
gs
aaa
test
adc
jno
mov
dec
jg
inc
adc
lds
xchg
sbb
inc
push
sbb
mov
dec
add
stos
aad
push
stos
xchg
aam
jb
rcr
aam
(bad)
call
mov
cwde
and
push
mov
aad
faddp
(bad)
mov
ret
data16
imul
enter
out
and
ins
sar
(bad)
add
jnp
xor
hlt
xlat
jmp
add
add
mov
in
out
add
jg
dec
sti
icebp
xor
inc
mov
leave
mov
xchg
push
jbe
js
jmp
xor
cmp
sbb
inc
push
call
lea
sbb
push
mov
in
and
(bad)
out
clc
push
lods
retf
mov
or
cwde
seta
and
ret
jmp
ja
mov
ret
cmp
mov
cmp
mov
loopne
inc
(bad)
sti
mov
dec
push
clc
pop
push
stos
mov
js
dec
add
and
fistp
daa
jle
test
(bad)
ds
jo
test
push
repz
retf
je
gs
bound
imul
xor
leave
retf
dec
push
cwde
dec
mov
and
lock
mov
xchg
out
inc
cmp
push
dec
cmp
add
cmps
and
sbb
aas
int
mov
or
je
mov
fisubr
xchg
dec
imul
out
bound
push
jae
xchg
ins
sbb
adc
aaa
add
pop
jnp
stos
sub
add
dec
push
xchg
push
mov
push
jp
mov
push
into
lahf
arpl
test
out
popf
sbb
adc
pop
addr16
cmps
or
pop
dec
xchg
scas
push
push
aas
mov
into
mov
iret
mov
mov
mov
push
jbe
pop
sbb
(bad)
push
dec
fwait
xor
bound
mov
stos
dec
jae
adc
ja
sbb
jne
jne
push
or
out
call
arpl
(bad)
add
je
jle
mov
arpl
adc
mov
cmp
mov
mov
sbb
xor
mov
bound
mov
xchg
xchg
xchg
and
in
movs
lahf
test
xchg
mov
pop
xor
repz
xlat
jecxz
dec
scas
pop
outs
jecxz
sbb
out
mov
call
ins
mov
mov
repz
sbb
je
or
mov
(bad)
sahf
loopne
enter
jmp
(bad)
in
inc
aaa
sbb
and
xchg
ds
jg
cmp
out
popa
inc
fyl2x
push
cmps
mov
xchg
and
sbb
(bad)
movs
or
add
adc
jl
or
into
scas
test
btr
jge
sti
(bad)
xor
das
dec
arpl
std
(bad)
inc
xchg
sbb
ret
jae
test
fisttp
pop
test
dec
adc
das
lods
xchg
data16
cmp
inc
pusha
fnsave
sbb
ss
repnz
ret
ins
push
push
and
jecxz
arpl
lods
push
mov
bndstx
in
dec
dec
call
sub
fs
movs
repz
inc
stos
clc
xor
push
repnz
mov
scas
ins
mov
into
ins
add
push
dec
sbb
loope
pop
out
push
dec
fldenv
(bad)
fdivr
add
and
adc
enter
or
mov
jo
xor
mov
pushf
cwde
shr
sub
pop
jne
cmps
add
arpl
cmp
ins
add
add
cmp
jne
(bad)
xchg
pop
push
adc
retf
aam
shl
cmp
push
mov
(bad)
aas
sar
or
(bad)
jmp
inc
outs
or
mov
fadd
arpl
cmc
int
mov
xchg
push
push
inc
or
sbb
je
aaa
jmp
sub
sub
cdq
or
retf
add
ss
pop
xchg
lods
add
jbe
in
pop
xor
push
cmp
adc
fcmovb
add
daa
push
sub
enter
shl
mov
inc
add
mov
jmp
psrad
rcl
xor
mov
push
push
mov
pusha
mov
std
push
xchg
mov
xchg
gs
rol
and
adc
rcr
(bad)
adc
mov
xor
stc
adc
in
int3
mov
mov
and
jae
cmps
cmp
or
pusha
cli
fldl2e
in
push
jb
test
sar
xor
loopne
aas
leave
jp
int
sbb
or
int
ins
aas
test
ja
in
lods
xchg
mov
mov
dec
mov
sar
xchg
ret
cmps
pop
call
je
mov
mov
retf
movs
inc
lods
call
jg
mov
sbb
mov
mov
pop
sbb
sbb
cmp
inc
(bad)
pop
mov
ficom
add
jl
fld
(bad)
xchg
sub
aad
dec
lods
jb
or
pop
mov
dec
icebp
cdq
leave
into
stos
imul
mov
ds
pop
fwait
stos
nop
add
add
mov
pop
inc
jmp
and
(bad)
aad
sbb
add
leave
das
push
adc
xchg
push
push
xor
push
xchg
xchg
(bad)
or
shr
test
rcr
pushf
je
popa
test
retf
mov
or
mov
push
and
hlt
pop
fnsave
cmps
fs
mov
mov
push
or
push
xor
dec
mov
cmp
push
cmp
pop
stc
cs
or
(bad)
call
pop
adc
push
sahf
xchg
movs
adc
mov
push
jmp
push
(bad)
in
rcr
call
dec
in
mov
nop
adc
xchg
popa
sub
xor
mov
lods
mov
pop
out
inc
test
ins
inc
xor
shl
imul
mov
gs
loop
cld
inc
xchg
(bad)
test
pop
in
pop
mov
pop
pop
adc
and
or
imul
sub
and
sub
mov
fistp
or
cs
and
and
pop
inc
popf
dec
enter
mov
add
aas
fisub
test
mov
call
push
push
aaa
sub
ficomp
les
mov
(bad)
dec
aaa
or
js
jl
or
mov
mov
jp
fisub
dec
retf
adc
inc
mov
adc
js
mov
jmp
cmp
adc
pushf
xchg
push
lds
xchg
(bad)
loope
jle
push
retf
imul
push
mov
aas
pop
sti
pop
adc
add
ss
cmp
pop
dec
mov
cmc
ins
push
mov
out
mov
or
dec
inc
pop
scas
add
les
mov
adc
cmps
jl
ss
popf
ins
push
xchg
push
cmp
mov
pushf
push
or
adc
jge
jmp
xchg
inc
and
inc
inc
div
and
xchg
hlt
xlat
inc
out
add
jne
fisub
or
pop
leave
xchg
push
mov
jmp
mov
enter
sub
pop
xchg
hlt
inc
int3
jae
jmp
aam
aad
loop
mov
adc
mov
inc
(bad)
ins
mov
mov
shl
mov
pushf
inc
scas
shl
adc
popf
push
mov
mov
or
call
imul
xchg
(bad)
xor
mov
add
or
and
push
add
rcl
xchg
mov
or
xor
ja
dec
jmp
push
adc
sbb
sub
push
add
and
movhps
ret
dec
xor
std
mov
jns
shl
lea
jl
jle
mov
and
jmp
xchg
aas
sbb
push
js
stos
or
inc
(bad)
cli
and
sti
stc
mov
fcomp
push
sub
es
arpl
lods
out
dec
pop
cmp
ret
ret
cmp
dec
cmp
into
(bad)
cmp
inc
stc
test
and
lock
retf
(bad)
dec
push
call
mov
pop
lahf
mov
jbe
fwait
data16
xchg
ror
push
icebp
hlt
push
push
fsubr
sbb
mov
xor
mov
pop
lea
and
mov
fcmovnu
sub
dec
sub
dec
fs
lods
cmp
mov
in
dec
mov
rol
rcr
movs
inc
popf
and
and
jo
out
add
into
sbb
aad
jmp
fnstcw
hlt
jg
aaa
mov
sbb
ret
cli
and
mov
adc
or
sub
movs
push
test
cli
xacquire
cwde
mov
mov
sub
sbb
aad
mov
mov
cmp
scas
or
js
add
cld
mov
(bad)
out
dec
mov
xlat
stos
rcl
or
sbb
lea
pop
jge
scas
or
nop
nop
cmp
sub
les
push
sub
mov
pushf
shl
mov
enter
jle
sbb
aaa
sahf
or
ins
push
ja
ret
in
sub
adc
imul
add
rcl
daa
cmps
mov
mov
(bad)
fidiv
mov
fwait
jb
(bad)
adc
jmp
dec
push
mov
out
sbb
ss
mov
div
fst
faddp
clc
fwait
jmp
mov
inc
ja
sbb
rol
inc
sbb
test
xchg
nop
lock
ins
jmp
loope
mov
aaa
inc
xchg
pop
sub
es
test
or
rcr
push
push
or
adc
lock
retf
xor
test
sbb
lock
cdq
push
cs
pop
loop
loope
cdq
les
add
es
mov
xchg
sbb
out
iret
stos
mov
ret
mov
push
xchg
ret
scas
mov
int
push
popf
mov
push
test
add
into
adc
or
dec
ins
sti
lea
std
inc
jbe
push
xchg
xchg
xchg
mov
mov
pop
sub
retf
scas
add
jae
fst
dec
shr
enter
dec
fsubr
data16
jg
sbb
lds
pop
movs
je
inc
pop
jne
xor
push
sub
ss
mov
ins
leave
or
add
cmp
lds
jne
adc
scas
(bad)
adc
sbb
ret
into
dec
jge
(bad)
call
stos
cmp
mov
nop
imul
shr
mov
ret
mov
in
dec
lock
loope
mov
(bad)
push
xchg
pop
or
jge
(bad)
or
mov
sbb
dec
mov
pop
test
pop
cmp
mov
out
xchg
test
add
cs
mov
scas
xchg
and
lea
mov
mov
mov
popf
int3
inc
(bad)
vcvtsd2si
int
add
mov
fst
cdq
loop
mov
pop
jge
jp
inc
mov
lods
call
stc
aas
pop
jbe
or
sub
not
gs
sub
xchg
xchg
push
add
mov
loop
adc
mov
scas
fld
imul
cmp
pop
or
arpl
push
cmc
mov
loope
retf
xor
xor
push
cmps
jg
inc
out
mov
popa
dec
fld
std
xchg
test
clc
mov
add
fnstsw
jmp
addr16
pop
jle
cli
ja
dec
(bad)
push
pop
out
lods
dec
inc
mov
and
test
dec
dec
int
inc
out
(bad)
push
sbb
(bad)
mov
cmp
cmps
fcom
dec
out
and
jmp
pushf
(bad)
out
test
fwait
das
jmp
push
mov
push
sub
dec
mov
add
dec
and
and
rcr
ficom
cmp
mov
stos
push
repz
xchg
sbb
movs
(bad)
mov
pop
mov
call
dec
ret
push
push
xchg
stc
mov
frstor
adc
cmp
jg
fsubr
sbb
jl
add
pop
xor
stc
mov
or
sbb
inc
xor
jbe
popf
ins
sbb
push
shr
das
sub
sbb
sub
mov
ins
adc
aaa
daa
or
pop
cdq
rcr
xchg
rcl
or
sbb
mov
xor
mov
(bad)
int
or
loop
in
aad
into
in
(bad)
fidivr
xchg
js
adc
fcom
call
addr16
call
nop
add
sahf
jge
aas
sub
xchg
fidiv
pop
sbb
cmps
pop
cwde
mov
inc
pop
arpl
mov
jle
push
pop
push
sub
mov
push
mov
mov
in
ret
cmp
sbb
test
xchg
or
mov
je
nop
cmp
pop
cmps
popf
cmp
inc
js
jge
aaa
sahf
push
call
es
mov
lds
cmp
stc
in
xchg
sar
inc
std
adc
cmc
cwde
jmp
sub
mov
inc
xchg
mov
mov
bnd
dec
in
sahf
rcl
xchg
add
mov
inc
sub
dec
xor
out
mov
lods
dec
adc
test
or
or
fs
cli
xor
cmp
mov
(bad)
in
mov
ret
mov
jl
imul
leave
inc
rcr
push
dec
repnz
cmp
sub
sub
fmulp
jno
mov
add
mov
jb
inc
(bad)
mov
push
ds
adc
iret
jp
cmp
push
sbb
adc
sub
mov
inc
add
dec
outs
ret
xor
add
sbb
movs
dec
xor
dec
in
lahf
xchg
fsubr
adc
jb
test
dec
gs
pop
or
jae
clc
mov
mov
and
out
jo
pusha
adc
push
jp
or
pop
mov
mov
call
sbb
inc
outs
mov
pop
inc
cmp
pop
fdiv
mov
or
sub
and
or
add
ud1
inc
adc
les
jge
iret
adc
xor
or
ss
imul
sbb
imul
or
jp
xor
shr
ret
cmp
and
sbb
aam
dec
mov
pop
xor
lods
xchg
or
xor
jo
fcomp
das
pop
stos
sub
mov
les
adc
adc
pop
je
jns
pushf
js
add
mov
ror
and
popf
xchg
pop
lods
pop
mov
outs
inc
rcl
pop
jmp
and
cmc
inc
test
add
out
inc
sbb
lea
jno
mov
pop
(bad)
fidivr
add
clc
(bad)
sahf
shr
mov
inc
(bad)
mov
cld
push
push
dec
fwait
movs
sti
clc
or
lea
pop
dec
js
cmp
aad
pop
inc
or
mov
pop
mov
cmp
aad
jl
xchg
push
jno
mov
and
adc
ds
data16
loopne
leave
es
xchg
fdiv
je
lods
cmp
ins
iret
shl
in
or
call
mov
or
jnp
jle
lahf
inc
lock
pop
push
outs
xor
mov
adc
sub
sti
cmp
lock
cmps
inc
xor
cmp
push
out
(bad)
test
or
dec
mov
call
mov
into
lods
sub
int
mov
mov
or
jb
(bad)
popa
repnz
ror
fwait
xor
pusha
xor
out
cli
sar
mov
add
cmp
mov
mov
dec
cmp
test
adc
pop
push
test
inc
cld
or
cmp
adc
push
(bad)
shl
out
es
call
scas
add
call
mov
mov
(bad)
lds
xchg
and
lea
loopne
mov
push
(bad)
sti
movs
loop
fwait
sahf
push
mov
add
imul
or
gs
fscale
aas
outs
pop
ficom
cmp
(bad)
sbb
mov
mov
push
in
out
jb
inc
sub
(bad)
cmp
jl
js
push
test
cmp
sbb
clc
mov
fisttp
outs
dec
mov
pop
in
frstor
mov
lods
jecxz
nop
in
into
pushf
out
pop
cmps
repz
int
inc
shr
std
fbstp
jl
shl
shl
xor
(bad)
pop
into
and
mov
arpl
popw
test
ja
dec
xchg
pop
imul
push
mov
mov
sti
loop
push
neg
cmps
shr
pop
xchg
(bad)
dec
lahf
mov
add
jo
pushf
push
sub
scas
sub
(bad)
fwait
push
jecxz
mov
push
or
icebp
(bad)
xor
pop
hlt
lds
(bad)
sbb
repnz
test
xor
lock
movs
rcl
mov
jl
mov
and
push
std
sbb
loop
ins
ficom
imul
jo
xor
xchg
scas
in
scas
sar
dec
push
add
mov
clc
loopne
jg
lods
dec
xchg
test
adc
inc
scas
and
xor
mov
jmp
pop
cmp
push
sbb
pop
out
push
xor
fldenv
les
je
cmp
lock
loop
popf
sbb
mov
push
addr16
xor
rcr
push
fst
cmp
mov
push
dec
scas
into
sbb
push
daa
shl
ret
and
jno
or
call
repz
mov
adc
mov
jge
push
mov
aad
or
shl
pop
fiadd
dec
clc
push
sar
push
stos
ret
cmps
or
movs
cmp
jmp
test
add
data16
retf
cmps
rcl
push
call
sbb
mov
mov
std
or
stos
dec
stos
lds
(bad)
lock
adc
push
cli
jae
sar
div
mov
fisub
jbe
icebp
jns
ds
pusha
fadd
in
push
leave
and
lods
sbb
push
retf
add
mov
push
xor
retf
dec
in
es
popf
push
sub
jge
add
or
cmp
sub
sbb
pop
sub
dec
test
f2xm1
rol
dec
adc
lods
pop
and
inc
xchg
(bad)
jge
pop
loop
sti
pop
jl
and
mov
ins
daa
stos
shl
out
daa
and
inc
or
push
stos
rol
repz
arpl
cwde
and
xor
dec
sbb
cs
fnsave
repnz
jmp
sti
les
shr
lods
mov
stos
dec
jp
mov
imul
sub
push
sub
sub
mov
jge
daa
xor
cmp
dec
and
lock
icebp
fstp
daa
(bad)
scas
jge
enter
dec
popa
inc
cmp
(bad)
into
ficomp
inc
pop
imul
sub
mov
cmc
(bad)
clc
jmp
or
sbb
xchg
lock
nop
(bad)
iret
ret
dec
mov
lea
aaa
xchg
int3
js
pop
pop
cmc
das
adc
in
mov
mov
xor
dec
(bad)
jmp
aaa
gs
lahf
add
xchg
cwde
mov
cmp
fbld
sbb
mov
shl
(bad)
dec
xlat
cld
mov
bound
dec
clc
cli
es
(bad)
out
mov
or
mov
cmps
mov
cmp
iret
mov
call
gs
fwait
add
adc
xor
and
xor
xchg
xor
jbe
sub
pop
jnp
dec
jno
and
and
jb
or
sbb
jne
adc
mov
adc
adc
and
inc
shl
rol
(bad)
xor
pop
mov
ret
in
mov
sub
ds
and
or
or
stos
or
outs
retf
(bad)
in
mov
jge
xchg
call
(bad)
out
and
xlat
adc
mov
fldenv
imul
sbb
jnp
call
test
sbb
scas
scas
ja
imul
stos
les
pop
bound
test
hlt
dec
jb
dec
and
jmp
paddsb
outs
sahf
or
mov
xchg
leave
pop
mov
xchg
add
mov
mov
in
inc
mov
gs
jg
mov
jmp
dec
retf
mov
jmp
cmp
mov
cmps
ret
test
je
vpsubusw
add
das
add
mov
xchg
xchg
les
lods
(bad)
out
xchg
adc
cwde
push
cmp
jb
and
(bad)
aam
outs
push
sbb
inc
mov
xchg
cmps
mov
xor
jecxz
jne
fmul
mov
ficom
fadd
shr
call
nop
add
jmp
hlt
jp
mov
in
xlat
leave
cmp
xor
adc
sbb
je
cwde
shl
icebp
addr16
sbb
adc
cmps
mov
in
cmp
ins
jge
xchg
push
(bad)
mov
sub
call
mov
hlt
out
jecxz
fisubr
js
inc
dec
out
out
jnp
xor
mov
(bad)
gs
cdq
int3
movs
ins
xor
(bad)
push
fimul
aas
aad
ins
test
xor
leave
sub
out
aas
cdq
daa
fdivr
jb
jno
inc
retf
mov
fiadd
and
pop
push
or
pop
push
jae
dec
push
mov
shl
test
push
xor
mov
aas
test
sbb
ins
out
cmps
hlt
(bad)
(bad)
in
(bad)
push
push
mov
mov
mov
sar
mov
in
mov
xor
mov
retf
ret
add
cmp
sub
cmp
sbb
pop
(bad)
retf
enter
addr16
hlt
movs
inc
push
sbb
fdivr
stc
inc
out
mov
int3
in
popf
daa
mov
dec
sbb
mov
ja
sub
test
pop
loop
ss
fistp
in
sub
mov
add
add
or
sub
arpl
psllw
add
imul
sub
ja
mov
fistp
xlat
jg
retf
(bad)
dec
call
shl
xchg
adc
push
push
sti
push
aas
push
or
xor
cld
ins
jb
dec
pop
mov
cmp
mov
in
aam
cmp
cwde
pop
sub
mov
pushf
hlt
cli
jns
cmp
xchg
outs
xchg
scas
sub
adc
inc
sub
sub
nop
push
adc
dec
cmp
lock
fimul
jbe
repnz
sub
and
rol
push
shl
fst
mov
fisubr
sub
into
pop
pop
lock
test
mov
ds
int
test
mov
imul
loope
inc
mov
xchg
pop
jle
mov
mov
and
pushf
xor
add
pop
jge
and
mov
test
in
mov
xchg
pop
fstp
pop
pusha
cmps
stc
jg
test
cmp
retf
aad
jge
adc
inc
enter
jb
adc
dec
cs
leave
bound
loopne
int
or
ja
ins
push
data16
mov
div
hlt
pushf
jmp
mov
aam
js
cmp
cmp
xor
lahf
lods
push
push
ficomp
jmp
js
sbb
(bad)
daa
or
dec
outs
cld
adc
dec
jmp
push
and
cmc
mov
mov
retf
mov
lds
mov
(bad)
enter
loopne
sar
lds
inc
fs
xchg
push
xchg
jmpw
shl
mov
aad
and
repnz
scas
cmp
cmp
aas
clc
sti
push
aas
push
mov
popf
xor
xor
in
mov
mov
adc
fdiv
aad
(bad)
(bad)
neg
or
push
mov
lock
stos
push
(bad)
xchg
dec
mov
pop
adc
adc
pop
sbb
outs
fnstenv
fwait
dec
fs
ret
push
pushw
fstp
push
sub
clc
in
xor
mov
jne
cmp
outs
loope
cmp
adc
adc
outs
pop
out
or
dec
or
pop
jnp
movs
icebp
push
and
dec
(bad)
jge
mov
cmps
mov
cmps
jg
mov
fisttp
mov
dec
jns
neg
cs
add
shl
cmp
jl
xchg
pop
imul
in
push
sbb
jno
mov
movs
ss
push
ins
daa
stos
int3
dec
imul
pop
fistp
outs
dec
sbb
out
xchg
mov
sbb
fmulp
cwde
stc
ja
gs
mov
bound
sti
lods
fdiv
test
dec
test
jnp
xchg
mov
mov
inc
cmp
(bad)
adc
or
nop
cmp
in
pop
test
ins
(bad)
xor
addr16
stos
(bad)
aam
jb
stos
jo
xchg
ins
test
add
into
dec
ins
mov
pushf
jns
dec
jb
es
test
jmp
test
(bad)
inc
pop
xchg
stc
sahf
fcmovbe
jne
int3
fisttp
cmps
cmp
into
test
add
(bad)
mov
and
stc
sti
add
fs
cmp
pop
push
sub
rcr
dec
dec
je
xor
call
xor
in
(bad)
sbb
sub
pop
dec
push
mov
mov
stc
aaa
jbe
jne
pop
dec
push
daa
xchg
cld
repnz
xchg
xchg
and
mov
pop
push
fstp
cmp
in
jl
rcr
jmp
rsqrtps
mov
dec
push
and
(bad)
pushf
or
(bad)
ror
lock
lock
inc
dec
mov
add
xchg
add
jle
mov
push
add
pop
push
push
jmp
xor
xchg
add
pop
bound
jne
fs
xchg
inc
xor
shl
iret
ins
sub
pop
in
sbb
(bad)
ds
mov
dec
jge
daa
and
(bad)
jecxz
ja
mov
mov
inc
out
std
sbb
mov
add
adc
push
sar
mov
repnz
sub
cdq
adc
(bad)
nop
and
dec
popa
jo
arpl
sar
or
addr16
pop
(bad)
lods
sub
lock
cmc
xor
add
daa
imul
packuswb
dec
leave
cmps
mov
idiv
cmp
xor
and
fadd
cmc
pop
xor
mov
or
mov
nop
out
bound
mov
push
sub
mov
sub
xchg
in
pop
mov
mov
sbb
sub
cdq
inc
cmc
dec
std
cmc
fmul
and
xchg
cwde
pop
dec
popf
fldenv
cmp
mov
repz
(bad)
push
jnp
leave
dec
xchg
(bad)
adc
lods
push
(bad)
nop
mov
ror
popf
jnp
bound
bnd
inc
je
sti
mov
mov
inc
mov
aaa
in
xor
out
aas
sub
sbb
loopne
movs
cmps
aas
aas
aas
out
cmps
test
stc
pop
mov
pushf
in
call
fist
aas
push
icebp
sti
add
pop
or
cmp
jnp
push
cdq
adc
lock
or
pop
bound
sub
push
inc
mov
sub
pop
jns
cmp
jp
arpl
mov
out
mov
stos
int3
ret
sbb
into
fstp
inc
cmp
or
jp
and
mov
loop
fist
inc
imul
(bad)
(bad)
push
jp
ins
mov
arpl
call
rcl
dec
test
push
test
push
inc
jecxz
repz
and
xchg
xchg
in
(bad)
sti
xchg
xchg
xor
ret
shl
ficomp
xchg
lods
ret
sbb
pop
jae
dec
aas
pop
rcl
les
sbb
or
sahf
push
dec
jno
jg
scas
jl
ficom
inc
adc
repnz
call
push
mov
dec
pop
or
push
xor
pop
mov
jmp
retf
push
leave
fisubr
xchg
rcl
sti
enter
adc
aad
pop
stc
outs
sbb
popa
mov
adc
imul
(bad)
ja
ja
sbb
push
loop
xchg
sbb
push
clc
in
mov
mov
iretw
inc
cs
loope
push
jmp
inc
out
jge
cmp
pop
stc
pop
repnz
cmps
test
sar
jb
cli
in
sub
and
mov
jl
sub
ret
add
aad
mov
xchg
aas
mov
xor
mov
and
pop
aas
call
(bad)
int
sahf
test
sbb
jle
or
xor
mov
adc
mov
int3
mov
mov
test
hlt
daa
test
ins
out
lea
cmp
and
sub
mov
imul
inc
cmp
mov
and
in
mov
sahf
int
adc
and
jmp
movs
(bad)
fnstcw
pop
adc
int3
or
movs
int
mov
dec
inc
cmps
scas
xchg
cmps
adc
lock
xlat
outs
add
outs
mov
xchg
jecxz
jmp
loopne
(bad)
jnp
ja
push
repnz
dec
mov
push
leave
cli
xchg
(bad)
not
ret
sub
ss
mov
push
arpl
(bad)
sub
push
sbb
sbb
bnd
es
jno
rcr
xchg
lea
adc
mov
inc
clc
cmp
lea
push
fucom
outs
cmp
xchg
arpl
les
icebp
pop
push
repnz
inc
out
jl
(bad)
jb
or
adc
xor
into
sbb
cmp
shr
inc
loop
add
in
mov
inc
jmp
daa
mov
jno
add
dec
xchg
jge
movs
sub
jp
inc
sti
push
rol
retf
lods
add
push
sbb
loope
xor
add
xor
aam
dec
stc
mov
cs
sub
scas
inc
out
addr16
sbb
fstp
sub
and
es
aam
inc
sub
mov
aaa
call
scas
adc
imul
jo
push
std
gs
stos
fwait
mov
push
in
jle
mov
jne
stos
inc
pushf
fisttp
rcl
imul
fld
stos
aad
dec
mov
pop
fwait
mov
std
call
jle
mov
mov
mov
ret
dec
dec
fidivr
mov
mov
rep
addr16
fsubp
mov
xor
movs
out
ficomp
cmp
jl
sub
and
hlt
add
or
rcr
retf
in
push
dec
sbb
xchg
xchg
dec
add
jmp
stos
stos
mov
mov
xchg
shl
push
cmps
scas
xchg
rcl
punpcklwd
(bad)
mov
imul
mov
jo
ss
pop
popa
mov
out
(bad)
xchg
ret
xor
cs
(bad)
shr
inc
dec
or
test
xchg
or
mov
mov
push
out
add
fiadd
fidivr
lods
ret
dec
daa
sub
cmps
xchg
sbb
jb
mov
add
xchg
mov
retf
jg
push
jns
mov
cwde
fidivr
jo
pop
mov
xchg
jl
pop
lahf
push
jg
dec
mov
pushf
push
mov
mov
push
daa
sar
jecxz
xchg
ds
aad
cmp
retfw
fs
imul
pop
mov
fdivr
lock
push
gs
repnz
aam
ret
jne
lea
push
push
imul
jae
dec
not
sbb
js
sub
dec
sub
(bad)
jbe
xor
into
mov
add
mov
jg
inc
ds
mov
cli
frstor
ins
pop
repnz
cdq
hlt
mov
clflush
comiss
xor
mov
add
in
pop
scas
stc
dec
dec
(bad)
cmc
rcl
lea
mov
lds
xchg
std
or
dec
aaa
rcl
cmp
mov
xchg
adc
in
sbb
jne
sar
pop
mov
clc
ins
dec
(bad)
push
jmp
enter
das
in
fst
xor
jmp
xchg
rol
and
jl
push
adc
sbb
ds
lods
cmp
mov
scas
push
mov
fiadd
mov
jl
inc
outs
mov
add
cmp
push
mov
pop
imul
and
rcr
push
add
jno
xlat
movs
or
enter
xchg
fs
xchg
stc
or
repnz
push
add
rol
cmps
xchg
arpl
fcomip
and
add
jmp
jge
jns
dec
add
cli
pop
pop
dec
jmp
mov
jb
sub
shl
ss
pop
inc
sub
movs
repnz
pop
xor
cmp
lock
sahf
mov
fimul
cmp
ss
dec
push
(bad)
cdq
push
mov
inc
cmps
cmps
push
sbb
jbe
pusha
adc
mov
jmp
call
and
pop
int
(bad)
in
mov
clc
dec
pusha
fwait
xor
pop
div
mov
fisttp
shr
fist
jg
push
rol
pop
aaa
jge
inc
cld
jg
icebp
push
push
mov
div
shl
jl
fwait
add
jg
xor
and
jle
inc
push
jae
jl
mov
shl
mov
push
add
sbb
addr16
outs
pop
and
cmp
das
xchg
mov
stc
std
mov
or
push
mov
mov
loop
sub
cmps
(bad)
loop
push
pop
dec
adc
rol
mov
adc
icebp
repnz
loope
(bad)
in
mov
xchg
pusha
jmp
and
jae
in
(bad)
in
int3
sbb
mov
mov
mov
adc
xor
and
ss
das
push
stos
jmp
fwait
pushf
mov
in
je
push
loop
push
and
not
outs
sahf
fsub
xchg
(bad)
fnstsw
inc
cmc
mov
adc
mov
scas
mov
nop
sub
push
das
out
xchg
lahf
dec
idiv
dec
xor
sti
and
mov
addr16
pop
cs
jg
mov
into
dec
adc
sub
ins
xor
(bad)
fstp
adc
adc
sbb
sub
pop
je
or
cmp
inc
push
fdiv
ficom
hlt
push
call
data16
xchg
imul
xor
stc
(bad)
cli
pop
(bad)
dec
adc
jmp
adc
test
dec
or
aad
pop
fwait
jg
mov
ss
push
addr16
inc
lahf
fcmovne
sbb
repnz
les
in
cld
mov
push
movs
loop
and
sub
dec
mov
pop
stos
rcr
push
or
ffree
fidiv
scas
add
ins
push
jnp
dec
jecxz
cmp
clc
cmp
arpl
retf
jae
sub
inc
or
xlat
sahf
not
xchg
aas
rcr
and
loop
fsubr
cmp
xchg
pop
add
les
outs
xchg
in
imul
mov
add
mul
pushf
nop
or
jno
sub
jbe
cld
xchg
ins
xlat
ins
retf
push
xchg
or
jecxz
xor
mov
popa
imul
cmps
test
mov
bound
xchg
js
push
int3
call
dec
enter
jae
fsubr
stos
aam
scas
pop
pop
push
lods
mov
rcr
xchg
out
jle
xor
jbe
adc
add
not
bound
ss
fdivr
cdq
dec
push
dec
fdivrp
adc
adc
jmp
es
clc
es
bound
mov
imul
lds
ret
addr16
push
adc
mov
push
add
xor
sbb
cmp
popa
mov
jae
scas
pop
jmp
imul
sar
jne
jle
mov
in
sub
repnz
push
ja
lds
inc
or
jbe
popa
xchg
sahf
mov
push
cmp
push
mov
cmp
push
jne
(bad)
jecxz
xchg
aas
loope
femms
in
push
aaa
ret
rol
dec
test
fs
mov
sbb
in
sub
pop
sbb
push
sub
jbe
mov
or
mov
dec
pusha
push
inc
cmp
jbe
xlat
lods
dec
sbb
ja
push
fwait
jno
and
sbb
or
das
adc
popa
les
xchg
xor
shr
sbb
sbb
add
add
lea
fisttp
scas
jne
stc
outs
inc
pop
xchg
inc
hlt
push
jmp
and
scas
scas
push
fdiv
popa
jmp
aad
mov
pop
mov
jae
mov
shl
repnz
je
(bad)
test
inc
int3
aad
jecxz
cmp
ret
je
enter
push
sti
mov
inc
pop
mov
add
sub
test
icebp
push
test
data16
pop
mov
jno
(bad)
sbb
lahf
mov
dec
(bad)
xlat
cmp
shl
jmp
aaa
push
outs
call
dec
int
das
out
jns
inc
dec
cmp
inc
addr16
pop
jns
cs
sub
arpl
cmp
mov
daa
repnz
jp
cmp
sub
scas
xchg
and
or
cmps
stos
add
add
fmul
push
cld
xor
leave
retf
clc
mov
mov
fldcw
stos
ss
push
or
into
pop
xchg
sub
adc
mov
jmp
xchg
or
hlt
nop
sahf
pop
pop
ret
pop
and
pop
add
xchg
or
int3
inc
fidivr
jecxz
pop
pop
lds
push
or
arpl
push
cmp
(bad)
and
dec
jo
in
mov
pushf
repz
push
adc
sbb
js
xchg
mov
stos
xchg
xchg
adc
lods
add
add
ja
cmp
sub
nop
arpl
daa
dec
iret
arpl
out
adc
movs
ja
nop
aas
mov
xor
xchg
rcr
fmul
sub
push
ins
lahf
sub
mov
(bad)
in
imul
test
fisttp
movs
push
aam
mov
push
jo
xor
lock
out
dec
lods
xchg
xchg
jo
fnstsw
xchg
test
xchg
loop
mov
mov
xor
jno
inc
das
xor
mov
mov
call
push
sahf
or
adc
loop
das
int3
push
fld
sbb
cmps
out
jmp
fstp
and
loop
aad
rcl
mov
mov
and
stc
inc
int3
add
maxps
les
test
bnd
pop
pop
int3
neg
imul
cmp
pop
lahf
pop
ins
clc
mov
or
sub
push
pop
xchg
not
sbb
jne
push
and
pop
rcr
and
call
xchg
push
ins
jne
and
jmp
movs
inc
nop
cwde
and
mov
aad
sub
jno
mov
mov
add
sbb
sbb
adc
jle
jmp
ja
js
ret
mov
add
or
xchg
push
push
gs
jmp
xor
in
ds
mov
movs
and
mov
pop
aas
pop
imul
out
mul
xchg
xchg
int
jns
popa
into
push
pop
scas
cmp
sub
popf
pop
fdiv
add
sbb
mov
dec
outs
mov
daa
rcl
int3
pop
fisub
mov
pop
xchg
push
jne
mov
cmp
or
cmp
xchg
cmp
adc
call
div
and
jne
pop
pushf
repnz
sub
sbb
sbb
lods
(bad)
std
xor
inc
cmc
out
dec
in
cmp
shl
jae
adc
pop
xchg
mov
je
dec
mov
cli
scas
ss
stos
stos
ins
ins
clc
in
ins
lds
sub
xlat
and
retf
cs
mov
mov
sar
adc
mov
cmp
xor
ja
pop
stos
out
mov
pop
jecxz
das
adc
pxor
mov
rol
retf
mov
adc
sbb
test
mov
ins
(bad)
lea
inc
movs
fidiv
call
push
sbb
sub
jnp
and
sub
scas
adc
shl
arpl
cs
mov
add
sbb
add
mov
sbb
inc
add
arpl
cmps
inc
pop
cmps
call
jmp
xor
icebp
jl
rcl
jmp
xor
shr
fldcw
xor
lea
jns
mov
fwait
aaa
jo
imul
stc
cmp
sub
pop
or
pushf
adc
test
dec
mov
xor
adc
add
sub
mov
scas
inc
sub
fwait
dec
mov
lods
int3
xor
sbb
lahf
jne
mov
rol
popf
dec
(bad)
loop
inc
pushf
enter
(bad)
das
out
mov
in
jmp
xlat
call
enter
sub
loop
inc
int
test
jo
fcmovnu
imul
adc
mov
mov
inc
js
sbb
mov
ror
xor
test
std
ret
dec
ins
sbb
pusha
(bad)
nop
je
retf
push
loope
add
imul
test
push
sti
lods
sbb
pop
xchg
ss
add
add
(bad)
cmp
rcl
mov
int
rcr
adc
fcmovnbe
add
or
adc
inc
cmp
pop
pop
mov
mov
loopne
inc
ja
dec
mov
cdq
pusha
push
or
push
stos
jb
jge
enter
int3
cdq
iret
out
cmp
bound
leave
xchg
dec
into
iret
or
pop
test
or
xlat
cmps
jns
xlat
adc
push
dec
inc
icebp
sub
retf
ror
adc
pop
mov
cdq
sub
pop
out
fwait
or
popa
and
and
push
popf
push
sub
aam
cmp
jl
and
xchg
xchg
fstp
push
ds
int3
mov
adc
jg
jno
inc
mov
mov
mov
test
jns
adc
movs
loopne
fild
inc
inc
sbb
inc
das
cmps
dec
sbb
xchg
push
dec
js
jo
add
fdivr
jae
je
test
jbe
in
aaa
jmp
inc
fs
adc
(bad)
mov
cmc
loope
cmp
jp
sub
sbb
push
cmp
add
leavew
pop
pop
push
in
iret
es
(bad)
pslld
mov
xchg
std
dec
addr16
ret
inc
xchg
fs
repnz
ret
sbb
xor
jb
out
sbb
dec
lods
retf
cmp
scas
pop
sub
xchg
pop
mov
push
aaa
mov
ror
bound
add
adc
xor
loop
sbb
and
cmp
js
mov
scas
fdiv
sbb
inc
xor
push
pop
xchg
sub
mov
and
and
call
mov
inc
cmp
dec
jbe
ret
add
jns
and
sub
and
add
ret
sub
popf
stos
addr16
and
imul
test
stos
xlat
add
mov
dec
add
aas
push
repnz
sbb
fmul
sbb
jns
out
mov
sub
lods
pop
mov
adc
repnz
mov
xor
push
pop
rcl
mov
out
inc
stos
(bad)
and
stos
jne
out
and
(bad)
push
or
cdq
and
xlat
cs
mov
aaa
lods
imul
adc
lea
dec
xor
jg
ins
sbb
cmps
mov
stos
call
cdq
and
jecxz
add
jecxz
jo
pop
aad
pop
data16
mov
ins
push
icebp
sbb
enter
dec
mov
sub
fwait
xor
icebp
xchg
sbb
lahf
mov
sub
pop
pop
test
jnp
cmp
int3
pushf
adc
les
pop
mov
(bad)
fs
imul
lea
adc
sub
stos
repnz
sbb
inc
dec
(bad)
(bad)
adc
cmp
xchg
stc
pop
ret
retf
ror
repz
int3
dec
mov
data16
xor
push
fldcw
push
push
(bad)
shl
out
ja
push
in
pusha
out
adc
out
inc
pop
or
cmp
add
pop
data16
push
sbb
inc
stc
mov
or
push
add
dec
mov
mov
bnd
mov
mov
push
in
add
and
sbb
add
mov
xchg
rcl
xlat
jne
sar
or
(bad)
ins
pop
jne
xor
cmps
in
cmc
mov
retf
cmps
retf
out
ret
popa
int
adc
sti
xchg
test
repnz
xor
inc
mov
pop
imul
ds
lahf
mov
inc
xor
adc
xchg
inc
sbb
imul
mov
sub
sti
xchg
repnz
repz
stc
aad
or
loop
jecxz
stos
fisubr
cmp
sti
js
adc
sbb
rcr
test
xchg
(bad)
fs
pop
ret
pop
movs
jbe
aad
sub
into
(bad)
ins
mov
dec
not
pxor
(bad)
out
or
cmp
xor
sbb
pop
add
mov
outs
mul
xor
clc
mov
mov
pushf
retf
dec
inc
(bad)
shl
aaa
mov
pop
mov
es
jp
not
mov
mov
int
and
fsub
bound
retf
retf
sti
or
mov
pop
sti
xor
mov
and
nop
outs
add
and
pop
loope
adc
mov
jmp
jp
mov
pop
dec
adc
aas
icebp
test
mov
push
dec
sbb
aas
sub
mov
mov
call
sub
clc
mov
pop
or
pop
xor
ret
cmp
xchg
mov
out
xor
fwait
inc
sub
ret
xor
jle
sub
xor
add
ins
cmp
popf
xchg
sti
sti
in
popf
shl
push
mov
cmp
pop
dec
sti
fucomip
enter
ds
jnp
mov
iret
xor
xchg
shr
fmul
(bad)
scas
sahf
outs
call
loope
test
mov
adc
outs
push
pop
repz
adc
cli
xchg
ins
mov
out
ret
(bad)
mov
and
sub
stos
ja
mov
call
call
pop
sbb
sub
jnp
pop
dec
out
dec
scas
movs
adc
jns
jbe
sub
jg
in
pop
outs
hlt
adc
repnz
sbb
inc
sub
cmps
shl
or
jmp
dec
cdq
jl
imul
iret
mov
adc
fsub
lods
add
push
int
push
jne
sbb
int3
lods
add
pop
add
rcl
sbb
shl
sbb
pop
popa
or
loopne
cmc
cmp
stc
jno
and
pop
movs
and
push
gs
pusha
inc
mov
push
repnz
(bad)
jo
push
push
pop
dec
repz
add
mov
vshufps
scas
adc
add
test
mov
sub
dec
les
ss
jle
xlat
pushf
or
scas
push
mov
mov
push
lds
dec
inc
jb
(bad)
push
jns
jns
cld
cmp
popa
cdq
int3
jl
sub
mov
add
bound
lahf
std
repnz
aad
dec
xchg
js
lds
mov
lock
xchg
retf
xchg
inc
out
push
ss
mov
and
xchg
dec
inc
or
(bad)
sbb
pop
js
xchg
ror
scas
out
ds
jbe
fisub
fdivr
dec
sub
mov
(bad)
mov
pop
jge
stc
fwait
mov
fs
test
call
les
lock
mov
cmp
arpl
clc
sti
mov
sbb
cld
mov
cmps
nop
and
add
sti
jle
mov
adc
add
xchg
pop
popa
aad
sub
loop
jge
xchg
in
ins
lea
cs
retf
jmp
int3
enter
jae
shl
xchg
stos
cmp
xchg
push
hlt
and
sub
push
pop
adc
xchg
jge
mov
(bad)
sub
aad
(bad)
xor
(bad)
push
push
iret
in
xchg
adc
les
test
clc
xor
gs
xchg
jge
test
cwde
pop
mov
xor
test
sub
push
popf
jbe
xor
scas
dec
cmp
and
ret
jmp
bound
leave
(bad)
push
out
sbb
into
cmp
push
mov
xor
iret
pushf
lods
js
cmc
adc
pop
mov
push
lahf
das
cmp
mov
div
sub
add
cmps
loopne
ror
inc
jge
mov
and
retf
cli
dec
jl
gs
xchg
fisub
pop
cmps
push
dec
and
and
nop
cmp
ret
fwait
test
dec
jnp
dec
and
dec
mov
mov
push
jl
push
jmp
cmp
xor
xchg
push
movs
sub
dec
jbe
pop
adc
xor
das
mov
pusha
push
stos
mov
push
pop
test
pop
sbb
sbb
xchg
or
shl
push
sub
sub
mov
ret
xor
dec
pop
call
adc
rol
jp
jne
sbb
dec
bound
xor
sbb
mov
xor
lods
dec
mov
push
addr16
push
sub
aad
outs
icebp
xchg
mov
xchg
mov
ss
cmps
dec
xchg
inc
imul
pop
jle
sti
inc
daa
pop
inc
sub
scas
jle
mov
or
sar
xchg
ror
dec
fpatan
call
(bad)
stos
xchg
pop
push
xlat
dec
(bad)
xchg
push
movs
push
aam
imul
pop
call
jmp
imul
mov
mov
int3
dec
test
mov
pop
outs
and
add
pop
adc
sbb
dec
mov
cmp
jl
dec
jle
stc
xchg
in
xchg
add
pop
adc
adc
cli
scas
popf
xor
and
dec
js
mov
mov
test
mov
inc
mov
out
sub
out
xchg
outs
shl
fwait
mov
sbb
mov
jo
sub
pushf
pop
std
lea
fnsave
add
mov
in
xchg
out
inc
cmp
imul
push
pop
pop
and
loop
in
test
in
leave
push
int3
sti
sub
popa
mov
pop
pop
mov
das
jne
outs
xchg
xor
xchg
xchg
jo
sub
mov
(bad)
out
pop
add
push
xchg
rcr
loop
adc
xor
mul
repz
rcl
jae
test
cmps
popf
or
adc
(bad)
shr
loopne
pop
movs
test
pop
dec
pop
repz
mov
push
adc
sar
sub
bound
bound
cdq
xor
sbb
test
mov
sar
and
(bad)
out
mov
shl
shr
test
stos
outs
xchg
and
push
test
out
icebp
int
push
into
push
xor
rcr
push
cdq
fsubr
int
jmp
adc
int3
lods
or
cmp
mov
out
push
das
cmp
je
sbb
cmp
add
push
jae
mov
div
xor
clc
(bad)
pop
ja
add
sub
and
xchg
lock
cmp
pop
jmp
or
and
ins
(bad)
pop
mov
dec
mov
xchg
dec
jns
and
xchg
mov
mov
aas
loope
pop
and
pop
jo
lock
adc
xor
dec
jne
test
enter
xchg
imul
push
or
movs
sub
arpl
stos
fst
imul
jmp
xor
ret
clc
jle
daa
mov
xlat
mov
xchg
inc
or
ins
cmc
push
sub
outs
inc
enter
scas
ins
ins
jl
ja
popf
aam
inc
mov
adc
repnz
add
call
xor
push
mov
inc
sbb
jbe
repnz
pop
jo
sub
xor
inc
mov
xchg
in
jb
pop
jp
pop
cld
outs
mov
push
adc
xchg
xor
div
push
ins
lds
ins
ret
and
and
cmc
cwde
stc
fcmovb
cmp
iret
imul
fmul
mov
leave
cmp
jns
sub
sahf
inc
fstp
clc
push
xor
call
add
or
jb
cmc
dec
inc
dec
outs
shr
sbb
iret
dec
cmp
dec
out
mov
or
mov
imul
jecxz
push
dec
test
sub
mov
inc
popa
data16
push
pop
pop
and
mov
and
pop
cld
push
mov
cs
clc
test
loope
sbb
push
xchg
jge
ss
mov
in
in
or
icebp
and
inc
cmp
int
ja
ret
in
mov
adc
jb
nop
retf
in
mov
add
jecxz
iret
mov
push
and
dec
syscall
sbb
pushf
aaa
dec
outs
and
sbb
cmp
mov
ror
or
jmp
inc
mov
addr16
ja
push
adc
out
pop
adc
std
sub
jge
pop
mov
xor
jle
mov
xor
sub
nop
mov
and
(bad)
in
push
daa
into
call
call
xchg
push
cdq
test
lea
ret
fwait
mov
cmp
pop
fisubr
clc
jne
inc
dec
gs
ds
jb
sti
imul
push
sbb
out
bound
or
(bad)
xchg
xor
ficomp
cmp
loop
sti
shl
call
mov
push
fwait
mov
jp
shl
dec
ins
imul
and
adc
push
std
xchg
push
and
gs
es
ja
iret
loope
cld
and
xor
inc
out
or
arpl
lods
inc
mov
sub
inc
outs
addr16
mov
xchg
cdq
mov
pop
sub
movs
ss
jns
dec
dec
xor
mov
mov
sbb
cmp
inc
movs
pop
in
(bad)
jl
repnz
hlt
aam
adc
js
add
(bad)
xchg
inc
lods
mov
jg
sbb
inc
imul
add
shl
inc
pusha
and
test
repz
xor
cmps
retf
(bad)
jo
pop
jb
sub
mov
ins
mov
test
push
cmps
ror
cmp
mov
cmp
cdq
sub
mov
inc
sbb
icebp
push
jle
add
mov
sbb
outs
fisub
retf
rcr
mov
jno
jg
pop
mov
loopne
lods
loope
movq
mov
and
(bad)
push
inc
xchg
jecxz
aas
jle
sub
mov
in
cmp
sar
in
stc
in
(bad)
hlt
stos
jmp
not
add
daa
retf
push
xor
sub
das
fist
and
xchg
test
adc
dec
jne
in
inc
xlat
push
cmp
pop
or
mov
retf
dec
pop
mov
pop
jnp
jmp
dec
bound
sub
xchg
push
inc
test
ja
scas
or
jmp
aaa
imul
not
and
call
mov
dec
xor
jp
(bad)
int
leave
(bad)
cmp
pop
outs
mov
(bad)
loope
pop
jg
jnp
sti
xchg
push
fild
cld
mov
ja
or
rcl
inc
rol
(bad)
dec
or
icebp
sti
or
cli
adc
dec
das
adc
jge
arpl
shl
inc
mov
xchg
out
retf
xchg
push
repz
pop
std
cmps
mov
xchg
in
(bad)
dec
pop
cwde
(bad)
in
mov
daa
setl
lahf
cmps
pop
ins
dec
dec
inc
jnp
push
cmp
lahf
idiv
in
cdq
push
mov
mov
and
ja
ret
out
sub
loope
not
(bad)
in
pop
aas
pop
ret
and
sub
ret
and
sub
push
outs
pop
aas
fstp
js
(bad)
out
jae
and
mov
call
dec
in
xchg
sbb
jb
or
jo
dec
aaa
in
(bad)
pop
ja
sub
cmp
inc
repnz
icebp
add
ins
ret
mov
jne
mov
adc
mov
mov
or
fwait
outs
mov
mov
jl
mov
push
xchg
sub
mov
cmp
call
retf
adc
popa
fsubp
sti
adc
dec
push
fcmovu
cmp
pop
out
and
jae
aaa
mov
xor
jbe
and
icebp
imul
mov
arpl
call
mov
std
inc
adc
xchg
nop
mov
mov
or
lock
jmp
adc
jnp
fwait
rcr
aaa
adc
xor
xor
dec
mov
mov
mov
lea
aad
push
dec
popa
or
ficomp
cmp
movs
out
lods
cmp
mov
xor
xchg
inc
inc
cmps
jnp
or
or
inc
dec
and
xor
add
pop
inc
sahf
ins
push
ret
int
dec
inc
in
outs
repz
clc
ss
xor
cmps
hlt
add
add
ds
pop
mov
fsub
cmp
lds
nop
movups
sbb
std
push
ret
ficomp
mov
inc
xchg
mov
stc
leave
dec
jl
stos
push
leave
cmp
pop
push
mov
in
add
pop
jnp
or
sti
adc
cmp
adc
mov
(bad)
mov
push
ret
pop
(bad)
mov
retf
aaa
pop
jae
cmp
sbb
popf
xlat
cmps
nop
iret
scas
sbb
into
xchg
repz
mov
fwait
and
mov
jbe
mov
cmp
retf
ins
iret
test
aaa
mov
out
and
xchg
lahf
jge
aas
jae
mov
cmc
das
dec
mov
cmps
imul
jge
jecxz
xor
sub
push
adc
push
(bad)
cmp
push
mov
ins
push
loope
jns
leave
ss
pop
push
scas
pop
mov
or
out
dec
aas
std
pop
ins
adc
xor
sahf
shr
dec
les
or
ror
daa
jge
loopne
in
inc
test
sub
es
(bad)
jecxz
out
dec
mov
nop
repnz
mov
sbb
jne
pop
inc
in
xlat
jnp
int
inc
leave
(bad)
xchg
aad
dec
xor
and
ss
adc
dec
adc
idiv
xlat
mov
mov
jmp
jnp
inc
xchg
or
add
jg
loopne
mov
aaa
(bad)
sub
lahf
sbb
(bad)
pop
mov
push
jg
cmp
shl
mov
cmp
daa
sbb
pop
sti
inc
sub
ds
inc
mov
fmul
in
sbb
mov
pop
clc
fstp
cmp
mov
jb
es
cmp
lock
cmp
inc
pop
retf
jns
hlt
mul
sub
mov
mov
adc
cmp
sbb
je
push
dec
jmp
rol
ins
jge
jbe
push
int3
aas
test
mov
jae
mov
iret
sbb
test
mov
sub
icebp
call
inc
or
cmp
and
outs
mov
sub
pop
cwd
int3
mov
dec
fld
cmps
push
xor
sbb
sbb
pop
cmp
ds
shl
loope
cmps
jp
sti
dec
mov
push
pop
push
push
cli
xchg
dec
xor
cmp
or
aad
ret
not
clc
(bad)
div
xchg
cmc
xchg
repnz
test
sbb
mov
int3
sti
loop
fcom
pop
sbb
pop
pop
into
adc
mov
mov
push
loopne
mov
popf
inc
mov
shr
jg
icebp
and
xrelease
int3
mov
and
sub
ret
jno
push
mov
aas
pop
cmc
push
mov
push
jecxz
inc
ficomp
das
xchg
mov
ret
aas
jg
loop
and
push
retf
jne
or
push
ins
cmps
cmp
int3
jle
push
xchg
jge
mov
fdivr
xor
or
rcr
xor
adc
retf
xchg
cmp
jl
leave
mov
jbe
test
jb
mov
and
stos
(bad)
cmp
sub
jmp
adc
add
mov
xchg
fneni(8087
or
das
sahf
je
das
lods
jmp
(bad)
int3
bound
jb
in
jl
cmp
pop
dec
fwait
add
rcr
jmp
jne
inc
lea
(bad)
mov
gs
mov
xchg
adc
aam
adc
dec
fld
mov
mov
add
sti
int
call
and
jne
mov
(bad)
dec
(bad)
hlt
mov
lds
sub
jns
call
imul
mov
mov
das
push
push
pop
or
pop
sub
fwait
dec
cld
cmps
cld
jae
in
movs
fmul
mov
add
fnclex
pushf
and
mov
add
push
cdq
jge
outs
cmp
aam
pop
adc
outs
or
jmp
daa
aaa
aaa
push
repnz
stos
and
ja
imul
mov
cmp
cmp
pop
ret
(bad)
repnz
jne
push
mov
wbinvd
shl
pop
fwait
scas
pop
xor
push
(bad)
cmps
js
(bad)
out
ret
sbb
fcmovne
or
lods
sbb
cmp
je
into
dec
je
fistp
jnp
push
pop
xchg
ds
add
ret
jl
xlat
push
push
jns
int
scas
nop
imul
test
xor
inc
les
shl
retf
dec
add
repnz
xchg
jle
mov
push
adc
mov
adc
jbe
cmc
lock
scas
repnz
mov
pop
sbb
arpl
dec
ins
mov
jnp
pushf
shl
xor
test
adc
xor
nop
jge
and
mov
popw
das
aaa
cmp
jns
mov
cwde
mov
xchg
test
gs
push
dec
stos
loope
push
jmp
jmp
sar
mov
call
data16
idiv
push
adc
ja
fsub
jp
cmps
dec
xchg
or
lea
pop
adc
data16
fstp
out
repz
xchg
push
(bad)
mov
mov
adc
and
mov
adc
cmp
mov
xchg
sbb
fcomi
push
aas
dec
pop
cmps
stos
movs
gs
adc
cmp
mov
mov
pushf
imul
push
(bad)
jno
lods
out
inc
mov
bound
daa
and
loopne
sub
rcr
add
cmp
cmps
bound
mov
hlt
mov
popa
add
mov
xchg
mov
sahf
jg
out
mov
mov
cwde
xor
sahf
hlt
test
cmp
add
or
pop
loopne
jl
call
jbe
pop
and
outs
xor
outs
sbb
mov
fs
jno
or
sub
iret
mov
scas
and
neg
jbe
das
mov
adc
hlt
add
mov
add
int3
cmp
and
xor
mov
fistp
or
fidiv
sub
jmp
lods
push
pushf
dec
and
sub
aad
inc
or
rol
mov
inc
popa
dec
dec
bound
out
mov
in
add
ja
fwait
popf
movs
mov
cmp
mov
mov
shl
nop
out
jmp
jbe
xchg
mov
cmp
mov
es
jbe
mov
in
add
jns
inc
scas
adc
push
pop
adc
jecxz
(bad)
cmp
test
out
idiv
jns
stc
leave
in
xor
aas
sub
cld
jb
in
jmp
mov
push
into
popa
hlt
jle
aaa
inc
fs
shr
mov
sub
jne
xlat
or
lods
push
enter
inc
or
les
inc
out
sti
push
jle
dec
stc
rcl
dec
pop
mov
and
(bad)
fadd
in
or
test
mov
and
inc
push
jecxz
pop
mov
pop
jne
mov
sbb
ja
adc
sub
in
push
and
sbb
xchg
jp
adc
push
mov
cwde
out
mov
push
xchg
mov
nop
test
mov
jge
mov
mov
les
xchg
pushf
fucomp
sbb
inc
cmp
xchg
loope
ja
or
pop
mov
add
jbe
(bad)
mov
add
mov
mov
cmps
rol
jae
pushf
dec
sub
xor
and
push
bound
push
mov
add
stc
pop
leave
mov
xchg
dec
retf
dec
jge
leave
and
xchg
jecxz
in
pop
cdq
push
or
fwait
inc
addr16
imul
mov
cmc
sti
fs
mov
out
mov
in
ficom
cmps
dec
jmp
sub
cwde
xchg
scas
mov
cmp
pop
retf
test
popf
sub
mov
lahf
sti
add
inc
sbb
out
aad
ret
push
or
test
fisttp
enter
stc
fwait
mov
xor
(bad)
jmp
fcmovnb
in
add
sbb
inc
sti
xor
fimul
push
shl
stos
sub
push
(bad)
es
loope
je
xchg
adc
xchg
mov
and
iret
inc
(bad)
mov
push
mov
out
popa
pop
jle
iret
aam
or
mov
mov
xchg
(bad)
xchg
call
or
jl
das
jmp
dec
or
fwait
(bad)
mov
clc
aam
test
or
push
xor
call
add
mov
fcom
shl
imul
jae
mov
cmc
mov
stos
imul
rcl
jb
add
xchg
pop
jbe
hlt
loope
bound
sbb
sub
sbb
pop
and
bound
test
loop
push
inc
fiadd
iret
lods
aas
pop
popa
jno
inc
sub
ds
mov
fcmovnbe
pop
out
stc
fwait
(bad)
add
adc
pop
pusha
and
and
imul
and
sahf
cwde
jbe
sub
push
sbb
mov
stc
xor
aam
(bad)
fisttp
call
stos
mov
stos
pusha
ja
inc
sub
xchg
push
adc
shl
xchg
xor
inc
es
jmp
loopne
adc
xchg
or
add
rcl
inc
in
cs
cdq
(bad)
fnstsw
xchg
aam
call
outs
and
xor
xor
(bad)
dec
cmp
imul
push
pop
inc
std
ins
xor
test
mov
inc
clc
or
pcmpeqw
xchg
dec
add
sub
(bad)
sub
jnp
jge
add
jp
lock
cwde
jmp
mov
inc
jo
outs
loop
push
lock
dec
aam
add
out
cs
in
iret
cmps
mov
cwde
jno
out
sub
jmp
dec
mov
push
not
(bad)
push
or
fdiv
jle
jmp
mov
das
dec
ja
jmp
repz
pop
cs
xor
xchg
or
fwait
pusha
adc
scas
pusha
dec
fnstenv
push
mov
out
adc
sbb
jo
dec
loope
mov
and
test
jg
sbb
mov
sbb
and
test
sub
arpl
or
sti
xchg
fisub
sub
fiadd
xor
in
jno
xchg
loopne
or
stos
mov
push
dec
int
loop
(bad)
fimul
lea
jl
adc
dec
push
jp
cwde
sub
(bad)
out
jns
pusha
cmp
nop
mov
pop
dec
mov
sbb
js
outs
xchg
out
and
cmp
(bad)
adc
and
fldcw
xchg
cld
and
sbb
sub
jo
cmps
bound
pop
rcl
neg
jns
add
lds
dec
push
lods
or
xchg
imul
ja
jnp
rcr
movs
and
ins
int3
inc
arpl
fld
adc
loope
cmp
fld
dec
sbb
or
rcl
std
div
mov
stos
xchg
push
inc
sbb
sbb
movs
lock
sub
mov
loop
sbb
push
cwde
or
or
fdiv
jl
cmp
and
data16
mov
aas
or
sbb
les
enter
pop
mov
ret
in
add
pop
mov
pop
iret
xlat
mov
add
bound
jnp
mov
sub
retf
lds
in
call
xor
dec
inc
jl
xor
(bad)
and
inc
mov
hlt
mov
ret
popa
fdiv
jnp
fcomp
fisub
sbb
adc
jns
mov
lea
imul
fsubr
push
ja
push
imul
or
adc
jae
call
dec
(bad)
adc
aam
mov
cdq
jbe
stos
mov
sub
cmps
push
scas
sbb
xor
das
mov
jp
test
push
bound
out
fimul
inc
or
jl
mov
shl
push
mov
(bad)
enter
repz
mov
lods
push
xchg
inc
or
jmp
add
aam
rol
popa
cmc
popa
shl
in
mov
(bad)
mov
dec
jbe
aaa
xor
push
adc
fidivr
retf
sbb
cmps
jnp
sbb
mov
xor
mov
cs
or
add
mov
out
cmp
mov
pop
dec
fld
xchg
xchg
mov
push
jmp
scas
jns
rcl
fcom
jne
mov
popf
push
jns
les
retf
(bad)
test
lock
call
mov
mov
lds
mov
fwait
or
or
jb
inc
std
jne
xor
adc
ss
add
xchg
mov
out
mov
pop
std
daa
cmps
jne
movs
fisub
aaa
mov
push
cli
add
mov
sub
repnz
mov
out
std
mov
outs
imul
mov
mov
popf
ret
add
cwde
xchg
dec
shl
movs
inc
(bad)
addr16
mov
cmc
daa
into
mov
mov
lds
daa
mov
(bad)
aaa
in
test
fdiv
hlt
das
and
mov
sub
sub
jge
in
jno
jge
mov
adc
mov
mov
outs
je
loopne
pop
(bad)
shl
retf
neg
inc
imul
xchg
cmps
lds
adc
pop
and
leave
xchg
das
popf
dec
xchg
adc
loopne
mov
sbb
push
movs
sbb
inc
push
dec
cmps
inc
or
jae
dec
(bad)
loop
push
shl
cmps
dec
outs
in
imul
push
pop
pop
outs
or
hlt
pop
jmp
or
mov
add
das
push
push
retfw
pop
ret
pop
mov
lahf
pop
cli
jno
test
rcl
mov
loop
sub
add
sub
sbb
stos
ret
clc
out
adc
(bad)
xor
test
gs
pop
pusha
jbe
clc
cmp
cwde
(bad)
stc
lods
jnp
shl
dec
je
inc
mov
rol
jecxz
ds
pop
sub
mov
xor
(bad)
jae
jg
jae
(bad)
jle
fld
add
adc
mov
and
je
jne
xchg
dec
movs
clts
std
fs
sbb
xchg
xor
mov
mov
dec
sbb
jae
xor
dec
add
push
(bad)
pop
dec
xlat
jns
in
rol
xchg
dec
mov
mov
test
mov
data16
lods
mov
mov
popf
add
jge
popf
mov
push
dec
outs
adc
(bad)
dec
push
xchg
inc
es
sbb
test
dec
push
mov
adc
and
pop
imul
sbb
adc
aaa
and
iret
inc
test
xchg
mov
push
push
lock
lahf
iret
dec
sar
gs
jmpw
dec
inc
leave
dec
and
popf
adc
(bad)
dec
or
add
cld
icebp
ds
inc
adc
sahf
xor
ins
pop
out
out
lods
add
jns
call
mov
inc
dec
xor
gs
cmps
or
cmc
mov
cmp
fcmove
dec
xchg
sub
imul
sbb
js
inc
adc
mov
dec
hlt
cmp
(bad)
mov
cmp
mov
out
inc
cmc
xor
loop
rcr
mov
mov
and
inc
icebp
or
pop
ins
mov
test
adc
push
inc
hlt
lea
pop
mov
cmps
ret
(bad)
push
shl
cmp
push
out
push
add
and
inc
into
movs
jb
dec
xchg
int
fwait
mov
shr
push
fstp
dec
sub
adc
or
pop
jl
rcl
mov
inc
in
mov
cmps
(bad)
cli
mov
bound
loop
fdivr
stos
pop
out
daa
mov
js
mov
sub
test
mov
mov
mov
adc
fdiv
jp
call
sbb
and
in
dec
mov
je
icebp
movs
mov
cwde
xchg
cmp
sahf
dec
inc
stos
xor
push
push
outs
xchg
call
add
fs
xchg
sar
adc
ins
jl
fwait
mov
fidivr
mov
std
call
dec
daa
sbb
std
hlt
jo
test
xor
fldcw
add
push
mov
sub
cmp
imul
dec
(bad)
cmp
cmc
mov
push
in
pop
pop
fs
outs
ins
ins
repz
cmp
pop
jbe
loopne
ficom
jae
into
xor
dec
outs
int
loope
repz
pop
shl
call
push
mov
mov
ss
lods
into
add
fsubr
adc
jl
repnz
xchg
and
mov
dec
pop
mov
jmp
das
pop
lock
frstor
std
pushf
fsub
test
fsubr
inc
xor
stos
dec
lea
cld
call
cmp
repz
pop
pop
in
out
lods
pop
push
jae
lds
movs
movs
pusha
xchg
xchg
xchg
dec
repz
add
inc
or
pop
sub
int3
ins
push
xchg
and
aad
and
stc
daa
xchg
pop
fsubp
and
adc
jae
push
jge
jle
push
dec
fld
mov
pop
fcomp
adc
cmp
lock
add
fisubr
and
sub
dec
add
test
push
mov
dec
xchg
add
gs
lods
out
sub
outs
pushf
imul
and
lahf
test
xchg
mov
cmp
xor
push
or
stos
jle
lea
outs
pop
fnstenv
fbstp
xor
xchg
jno
dec
or
imul
mov
shl
inc
out
movs
das
inc
or
rcr
push
adc
add
dec
jg
sub
pushf
adc
mov
es
dec
push
jmp
ins
jg
or
xor
sti
and
loop
dec
jg
inc
inc
ins
gs
and
xchg
add
in
loopne
jl
inc
cmp
push
stos
(bad)
fdiv
imul
inc
jne
in
test
or
adc
mov
xchg
test
mov
xor
inc
pop
ins
test
es
inc
cmps
sub
dec
xlat
mov
sti
push
rcl
test
shr
mov
clc
xor
ins
fs
pop
cmp
ds
dec
mov
pop
(bad)
push
enter
sbb
add
jmp
push
and
std
sub
es
aas
xchg
push
mov
xor
imul
xchg
call
(bad)
cmp
or
int
sbb
mov
inc
sbb
adc
mov
jg
in
cmps
rcl
aas
add
shr
pop
xor
pop
aaa
jae
sub
fnstsw
sub
loope
cdq
xor
pop
mov
ret
push
retf
pop
dec
addr16
xchg
push
in
repz
das
in
or
jge
mov
pusha
cs
mov
jmp
cmp
out
or
xchg
lods
lods
adc
imul
pop
inc
inc
add
callw
das
sub
sar
mov
in
pop
xor
in
inc
scas
add
and
inc
leave
(bad)
pop
jbe
shr
out
hlt
ud0
inc
inc
mov
pop
inc
adc
mov
and
and
and
adc
into
addr16
punpcklbw
mov
mov
adc
dec
cld
cmp
inc
iret
jo
fcomp
sub
push
fld
out
aam
out
mov
out
dec
push
adc
(bad)
jo
(bad)
rcl
fidiv
dec
xor
cld
int
xchg
pushf
enter
lds
jnp
fisubr
popa
dec
sti
mul
mov
icebp
push
xchg
add
stc
leave
jnp
cwde
call
and
lock
retf
pop
stos
in
add
xchg
xchg
lock
mov
fst
push
mov
mov
inc
pop
inc
or
pop
popa
je
loopne
adc
push
ins
adc
retf
(bad)
cmps
pop
cmp
xlat
cmp
daa
(bad)
test
mov
adc
xor
jno
in
(bad)
mov
les
xor
push
and
arpl
loopne
inc
pop
arpl
inc
cmps
sbb
je
mov
cli
icebp
sbb
push
push
stos
xor
imul
in
shl
cmp
adc
sub
xchg
mov
jmp
(bad)
sub
xlat
inc
daa
push
jno
mov
cs
inc
dec
push
cmp
loope
or
out
add
sub
push
lods
into
imul
jmp
inc
jecxz
movs
add
add
cmp
cwde
mov
shr
out
add
mov
push
shl
pusha
inc
stc
repnz
mov
icebp
out
dec
icebp
ins
inc
and
xchg
push
icebp
test
push
icebp
fucomp
dec
lods
cld
pop
mov
stos
sbb
adc
je
xacquire
sar
jno
jmp
pushf
sti
jge
and
cmp
dec
adc
push
xor
xchg
jb
jbe
mov
inc
push
jo
loope
std
(bad)
cmp
je
gs
scas
or
inc
(bad)
imul
mov
das
dec
ficom
or
call
sub
outs
adc
fist
int
imul
cmp
ficomp
and
leave
ja
out
adc
sti
adc
movs
mov
lods
clc
inc
loope
scas
pop
cdq
leave
adc
data16
sbb
add
xchg
out
lods
mov
out
fdiv
sbb
stc
mov
mov
in
sbb
int
add
data16
jl
cmps
dec
std
dec
std
push
ret
out
imul
xchg
cld
cs
dec
fld
fld
pop
mov
cmc
xor
jecxz
inc
inc
ret
xchg
sbb
pop
retf
mov
inc
or
(bad)
add
inc
ret
push
cmp
idiv
(bad)
cwde
push
fst
(bad)
popf
adc
mov
inc
xchg
sbb
ja
cmp
retf
or
dec
xchg
jmp
stos
mov
push
ror
pusha
xor
inc
mov
push
(bad)
inc
rol
lahf
icebp
shl
jns
jnp
fcomp
xor
out
call
dec
or
loop
jecxz
sub
leave
inc
int
scas
fld
dec
add
sub
mov
mov
arpl
out
popf
mov
data16
fst
jbe
adc
(bad)
jnp
push
cmp
jmp
call
fstp
sub
and
inc
jg
sbb
inc
jb
or
fstp
bound
xor
jg
pop
jl
pop
pop
imul
add
test
loope
fild
sbb
cmp
and
pop
inc
(bad)
fiadd
cmp
(bad)
push
dec
es
add
mov
ficomp
dec
cmp
js
dec
sub
pop
push
mov
xor
sub
push
enter
dec
mov
pop
retf
inc
test
in
inc
push
shl
clc
nop
test
jg
sti
or
mov
cmp
icebp
sbb
psrld
in
adc
pop
iret
cld
retf
enter
scas
repz
mov
xchg
ds
dec
xchg
lahf
aad
imul
sub
pop
pop
and
mov
popf
sub
das
outs
xor
add
push
xor
ror
mov
jnp
push
mov
cmp
sbb
pusha
and
sti
sbb
(bad)
fs
jmp
ins
aam
out
cmp
shr
fistp
outs
ins
out
cmp
pop
dec
(bad)
movs
jl
push
pusha
sbb
pop
out
imul
test
(bad)
mov
iret
lds
lods
xchg
push
(bad)
jge
movs
jge
add
mov
(bad)
jmp
cmps
cmc
in
add
fcmovbe
pop
leave
xchg
push
addr16
xchg
pusha
cmp
int3
dec
cmc
adc
test
mov
in
cli
(bad)
cs
imul
cld
pop
icebp
cdq
push
dec
inc
sbb
jb
loopne
paddusw
movs
cmps
sbb
mov
or
ins
fild
xchg
in
mov
dec
push
in
jl
lods
imul
xor
mov
add
fsub
and
xor
pop
test
jmp
je
in
rcl
fistp
xor
sahf
add
jne
lods
inc
call
fistp
xor
loopne
jne
movs
repz
ret
sub
out
xor
in
hlt
fcomp
add
cli
sbb
out
sbb
jns
pop
push
xor
or
dec
mov
jae
mov
loopne
xchg
lods
dec
cwde
push
lods
sbb
retf
or
add
movs
dec
jns
out
aam
adc
push
push
push
xor
sbb
cmc
iret
mov
out
mov
scas
cmp
pop
(bad)
mov
jbe
xchg
xor
dec
in
icebp
cmps
jb
mov
(bad)
push
xchg
in
mov
dec
xchg
dec
inc
mov
ret
xchg
in
and
add
jmp
add
movs
xor
xchg
std
daa
repnz
sahf
inc
xchg
sbb
fcom
nop
cmp
das
or
ins
scas
mov
jle
adc
push
jmp
js
pop
pop
dec
outs
push
sub
int3
lds
sbb
and
int
sbb
rcr
into
aaa
mov
int
jnp
or
mov
nop
and
out
dec
jmp
dec
push
mov
fimul
stos
fcomip
jmp
cmp
xor
push
scas
jo
sti
push
add
(bad)
std
ss
js
in
(bad)
and
fldenv
sub
mov
in
adc
stos
icebp
push
push
and
inc
repz
daa
inc
ja
retf
fnstcw
imul
jl
lahf
retf
mov
outs
lods
add
xor
or
retf
popf
adc
mov
mov
test
xor
sub
pop
or
das
test
in
jae
call
jo
dec
inc
adc
ficomp
cmc
stos
mov
cld
mov
aas
out
pop
mov
out
jnp
jmp
(bad)
cmps
push
mov
fwait
pop
aaa
mov
xor
jnp
inc
xchg
add
jae
push
imul
fs
push
addr16
pop
or
push
ins
fidiv
dec
in
shl
test
test
pop
enter
pop
push
lods
cmc
sbb
mov
add
jo
outs
pop
or
outs
jp
jns
push
mov
js
cmps
jne
cmp
and
ret
icebp
pop
test
pusha
pushf
cli
loop
neg
(bad)
mov
pop
pop
test
lods
mov
mov
sub
imul
cs
stc
jge
cmp
dec
sbb
stos
pop
xor
fist
xchg
xchg
repnz
pop
sbb
adc
stos
jo
in
in
fwait
jns
pop
nop
mov
mov
int
repnz
cwde
jns
xor
push
jle
xor
mov
mov
fsubr
adc
mov
in
(bad)
addr16
pop
mov
aad
mov
add
inc
aaa
in
mov
test
ret
cmps
lods
je
ds
jl
mov
stos
scas
cdq
rcr
fcomp
fild
inc
mov
mov
imul
pop
add
xor
(bad)
adc
out
jnp
dec
pop
js
or
jns
in
add
ja
std
inc
std
fmul
add
dec
cdq
mov
push
popf
pop
test
xchg
add
cs
pop
mov
aad
push
fdivr
mov
imul
mov
cmp
stos
(bad)
and
sbb
fwait
mov
jo
xchg
popa
jmp
dec
fstp
mov
mov
(bad)
xor
dec
enter
lahf
call
mov
adc
inc
pop
jb
outs
fs
in
lds
pop
push
adc
mov
pop
cmps
mov
sbb
mov
rol
addr16
in
xor
mov
imul
mov
stc
nop
lds
sbb
fs
jno
das
icebp
inc
repz
jne
mov
xchg
jmp
xchg
out
or
push
shl
arpl
sbb
aam
xchg
addr16
jnp
div
adc
mov
and
out
ror
or
xchg
in
fwait
cmp
jne
jp
mov
or
and
in
pop
and
mov
xchg
push
or
pop
dec
jg
mov
sub
or
psubd
(bad)
(bad)
mov
fsub
mov
in
in
outs
pop
sbb
dec
je
ficomp
aad
cli
sub
sub
in
mov
and
mov
movs
fild
test
iret
out
arpl
retf
xchg
data16
pusha
cmp
jg
rcr
jnp
fidiv
sub
add
pushf
jecxz
dec
inc
rcl
(bad)
adc
mov
stos
push
dec
push
and
push
outs
mov
pop
repnz
xchg
and
xor
and
scas
or
(bad)
cmps
mov
fsub
mov
add
pop
shl
sub
adc
in
jge
retf
inc
mov
mov
ror
int3
in
push
xchg
nop
xlat
add
out
mov
hlt
fs
dec
frstor
(bad)
cdq
adc
(bad)
xchg
pop
aas
pop
sbb
push
ds
mov
sub
call
mov
jle
xor
sub
int
lods
and
sbb
adc
jns
cli
(bad)
aas
test
mov
sub
mov
(bad)
mov
xlat
add
out
jb
lock
clc
cmc
in
js
push
inc
or
and
mov
aaa
cwde
scas
sti
mov
mov
jmp
mov
push
jp
(bad)
adc
push
stos
(bad)
xor
jmp
scas
fstp
xchg
outs
push
adc
aaa
sub
adc
pop
and
in
and
mov
loope
xlat
adc
push
nop
dec
xchg
xchg
cli
pop
mov
popf
call
popa
inc
mov
mov
loopne
mov
inc
cwde
jae
sub
clc
and
shr
jno
js
mov
xchg
cmp
sbb
jbe
inc
rcl
inc
xor
cmc
jl
xchg
fldz
adc
aad
leave
xchg
pop
dec
mov
cmp
sub
mov
in
dec
sbb
sub
fld
xchg
clc
rcr
fs
pop
rcr
fsub
enter
out
lds
adc
pop
cmp
inc
or
arpl
mov
sar
add
aad
movs
dec
inc
arpl
jg
test
mov
push
and
pop
or
aad
or
test
mov
adc
and
mov
xchg
add
jge
add
add
sub
rcl
leave
mov
lods
pop
in
dec
mov
cmps
sub
cli
mov
adc
(bad)
pop
push
adc
or
in
pop
cs
jno
sub
fld
fimul
cld
xchg
xchg
inc
push
mov
or
iretw
xor
popa
jne
push
jbe
arpl
xchg
loope
cmp
cmp
and
jp
mov
and
out
dec
mov
scas
inc
inc
clc
fdivr
cwde
mov
dec
ret
in
cmc
loop
mov
cmovbe
cmp
and
jne
mov
push
jp
push
dec
mov
mov
repnz
inc
add
or
(bad)
and
movs
stos
lods
aam
jae
jmp
mov
sub
std
in
sbb
mov
stos
adc
jecxz
mov
mov
cmc
fs
xchg
sub
fidivr
inc
je
fisttp
or
(bad)
cmp
mov
fdiv
sub
mov
imul
mov
pop
daa
outs
arpl
out
xor
lds
out
les
mov
fs
stos
mov
(bad)
inc
or
(bad)
push
js
out
adc
sub
adc
mov
nop
pusha
mov
lea
and
clc
jo
dec
(bad)
dec
and
jl
jbe
inc
cmp
es
cmp
ret
add
and
pop
pop
mov
inc
(bad)
jmp
and
add
aam
neg
hlt
out
adc
mov
dec
les
in
mov
inc
lods
lahf
pop
push
adc
fdiv
enter
fistp
cli
or
es
mov
dec
mov
test
mov
push
push
jl
lods
xor
xor
lahf
cmp
pop
mov
test
or
fistp
cmp
pop
jmp
shr
imul
pop
retf
cdq
xor
loop
mov
ret
aad
jp
xchg
push
fwait
add
jnp
enter
mov
scas
popf
sub
lahf
xor
mov
push
call
jp
aam
jno
in
cs
inc
aam
or
ss
cdq
test
stos
pop
cmp
xchg
ror
call
add
xchg
repnz
ins
ret
mov
mov
stc
rcl
(bad)
aaa
adc
adc
outs
mov
(bad)
sbb
mov
outs
inc
jle
mov
movs
mov
inc
lds
out
push
pop
lods
push
cmps
mov
cmp
sti
gs
lea
cwde
outs
xchg
jmp
add
xchg
pop
and
mov
imul
xchg
adc
imul
xchg
test
inc
hlt
into
push
retf
(bad)
or
out
jl
fadd
sub
adc
sub
xchg
pop
cld
adc
jmp
fwait
stc
dec
ret
sub
gs
xor
mov
fidivr
iret
push
push
out
pusha
push
or
adc
jle
fnstsw
cdq
imul
fild
fnstcw
hlt
xchg
(bad)
popa
enter
xor
mov
mov
sbb
sbb
cli
pop
out
cmovb
xor
pop
stos
and
leave
ret
add
sub
das
mov
mov
xlat
xor
or
(bad)
and
pop
(bad)
mov
fs
xor
(bad)
or
daa
ins
pop
sbb
stc
adc
mov
or
fistp
retf
cli
icebp
fdiv
pop
scas
in
call
push
inc
call
jbe
lods
retf
xchg
shl
ins
jo
fcomp
xchg
into
(bad)
jge
loopne
mov
or
bound
lock
hlt
cmp
ret
lock
retf
fstp
sbb
or
push
mov
cmp
and
outs
in
adc
fadd
cmp
and
jne
xor
push
mov
sub
shr
or
and
mov
cmp
xchg
mov
daa
inc
aad
push
pop
jmp
xchg
xor
mov
out
mov
loopne
pop
jge
mov
cmp
ds
push
mov
pop
icebp
ret
jge
push
sub
cmps
clc
sub
fs
sti
cli
push
xor
push
add
in
sub
jne
ret
test
sub
call
fisttp
out
cmc
arpl
test
int
pushf
push
cmp
stc
mov
inc
jb
(bad)
jmp
mov
mov
add
add
cli
ins
mov
mov
imul
jp
int
push
aaa
jnp
add
or
data16
sbb
pop
jmp
sbb
cdq
mov
mov
inc
jmp
add
loopne
pop
stc
dec
loop
icebp
cld
div
sahf
(bad)
ret
add
add
icebp
movs
movs
cmc
out
out
xor
(bad)
cmc
and
daa
pop
pop
psrad
fucomi
lods
jmp
push
jg
scas
out
push
mov
in
hlt
push
daa
retf
sub
add
int
jl
cmp
jne
mov
int3
dec
sub
loopne
jp
std
and
add
push
pop
out
cmp
and
add
mov
cmp
ins
les
cmps
fsubr
call
mov
mov
inc
arpl
jmp
clc
jmp
or
push
in
jmp
push
cwde
sub
idiv
jnp
xchg
movs
adc
into
add
retf
push
pop
sub
into
out
mov
cmp
aam
clc
sti
repz
jno
cli
addr16
rcr
pop
mov
ins
jbe
inc
in
xchg
leave
mov
push
inc
push
sbb
ficom
xchg
jmp
ja
push
sub
add
mov
ja
xor
dec
loope
sub
mov
xchg
xchg
loopne
sub
jp
inc
ret
xrelease
enter
ja
sub
cmp
scas
stos
add
test
add
(bad)
shl
data16
mov
out
(bad)
cwde
sbb
sub
mov
xor
stos
jg
outs
pushf
add
and
mov
adc
les
retf
clc
mov
jae
or
rcl
fdivr
out
mov
xchg
rol
fwait
jae
jmp
push
std
add
ja
dec
adc
adc
aam
inc
dec
inc
jne
adc
aaa
jmp
imul
pop
ret
out
stos
add
and
xor
and
push
das
mov
sub
xchg
xor
jmp
rcl
push
jl
fldcw
enter
add
add
inc
sub
mov
mov
es
vminps
aaa
mov
sar
jno
cwde
xchg
pop
and
loopne
cmp
out
add
xlat
loope
sub
iret
scas
cmps
dec
imul
adc
pop
in
fxch
call
push
xor
in
inc
pop
ins
xchg
adc
sub
ret
and
(bad)
retf
imul
sub
dec
imul
fld
(bad)
fisub
sub
mov
add
xor
mov
jnp
pop
fwait
sbb
mov
cmps
xor
push
adc
sub
aam
adc
and
push
cdq
xchg
std
jg
pop
xchg
std
pop
or
sub
test
mov
mov
div
fcomp
sub
rol
hlt
mov
mov
mov
fisub
adc
or
(bad)
movs
inc
mov
fadd
clc
jb
test
fcmovnbe
jbe
fisub
icebp
xchg
adc
jmp
ret
mov
clc
adc
pop
sub
(bad)
fidivr
xchg
jecxz
out
push
shl
jns
or
jmp
retf
xchg
pextrw
mov
gs
iret
jmp
fst
push
dec
sbb
in
test
xchg
or
(bad)
mov
test
and
mov
imul
mov
jns
and
mov
mov
xchg
mov
mov
into
cmp
(bad)
or
push
dec
adc
sbb
shrd
enter
fisub
sub
dec
push
inc
cwde
mov
fidivr
mov
lds
lods
popa
cld
lods
jmp
xchg
fld
(bad)
jne
fld
inc
add
sub
mov
sbb
pop
mov
or
mov
aas
push
push
or
ret
dec
test
inc
pop
dec
or
into
ins
cdq
aad
xchg
shl
push
pop
outs
inc
jbe
adc
daa
mov
xor
xchg
lds
in
rcr
jns
dec
and
gs
xor
xlat
jbe
or
sub
icebp
xchg
(bad)
(bad)
jae
pop
(bad)
mov
pusha
out
aad
loop
ss
mov
mov
sub
icebp
popf
xchg
jno
call
cld
push
imul
mov
ret
out
out
(bad)
adc
and
adc
aad
in
push
lahf
xchg
aas
in
popa
scas
jb
mov
xchg
bound
inc
and
test
movs
push
mov
adc
push
(bad)
mov
leave
ror
xor
nop
inc
push
xor
cmc
cdq
ret
adc
ror
lahf
cmps
jbe
mov
cld
pop
clc
and
add
or
dec
(bad)
leave
shl
ror
mov
test
ffree
mov
movs
inc
and
outs
fwait
mov
test
scas
or
pop
mov
jbe
pop
frstor
jecxz
push
add
into
push
ds
adc
push
nop
dec
xchg
adc
sbb
mov
into
stos
pop
jmp
inc
adc
sub
and
mov
push
xlat
test
inc
fidivr
cmc
sbb
jge
xchg
arpl
and
pop
add
adc
push
mov
movs
cmp
mov
test
ret
retf
(bad)
je
mov
mov
jmp
add
in
cmp
push
enter
test
outs
adc
call
or
cmp
cmp
repnz
retf
pop
scas
ret
adc
mov
push
clc
push
mov
mov
fsub
xchg
pop
add
out
daa
lds
adc
jb
mov
jle
outs
jecxz
xor
imul
iret
ins
and
mov
push
push
cmp
aas
push
push
ds
and
pusha
pop
cmp
ins
inc
scas
and
cdq
push
sti
shl
mov
les
inc
sahf
adc
inc
xchg
ins
mov
rcl
jge
hlt
outs
iret
(bad)
in
cmps
pusha
outs
push
lahf
jmp
add
sub
cmp
call
push
call
dec
fdivr
rcr
shr
push
test
cs
cmp
sbb
push
shl
movs
sub
jl
xor
add
mov
sti
push
loopne
cmps
inc
lods
jns
and
in
mov
in
mov
pop
clc
(bad)
fst
les
sub
aaa
lea
in
dec
in
scas
inc
shl
test
cli
imul
dec
lock
mov
pop
add
js
inc
arpl
adc
ret
jmp
les
loopne
lahf
mov
cwde
loop
movs
cmp
push
movnti
std
mov
aad
test
dec
aad
xor
or
dec
sbb
mov
(bad)
retf
test
(bad)
ds
mov
inc
mov
sbb
mov
addr16
sbb
jnp
bound
(bad)
mov
jl
jbe
iret
pop
pop
pusha
call
sbb
pop
mov
cmp
cli
in
dec
leave
mov
fwait
and
sbb
and
(bad)
lods
add
xchg
mov
call
(bad)
sbb
aam
cmps
sbb
cmc
out
adc
adc
das
vunpckhpd
shr
jmp
hlt
repz
cmp
(bad)
ficomp
mov
or
xchg
push
push
pop
jmp
push
mov
cmp
jg
pavgw
test
dec
test
test
cmovge
sub
xor
mov
mov
and
mov
gs
pop
mov
cmp
mov
sbb
in
mov
gs
mov
xchg
pushf
fbld
or
sti
bound
(bad)
aas
(bad)
out
jmp
adc
xchg
xchg
inc
call
mov
xchg
call
imul
mov
ror
aam
mov
push
dec
retf
fnsave
xchg
int3
movs
ficom
cdq
bound
mov
pop
cmps
nop
xchg
pop
inc
mov
pop
(bad)
mov
test
push
add
inc
sub
out
ss
and
mov
dec
xchg
fadd
push
adc
cmps
in
fisttp
or
dec
mov
sti
mov
das
in
adc
das
ins
arpl
xchg
loop
fwait
dec
lods
xor
rcl
xor
mov
imul
dec
or
mov
scas
mov
into
mov
stc
int
fisttp
pushf
push
loopne
mov
std
cmp
and
push
cs
inc
fadd
xchg
jge
repz
jo
inc
mov
push
std
cmp
repnz
mov
mov
inc
adc
sbb
popf
in
sar
scas
push
test
lods
fisubr
pop
dec
sbb
movs
fistp
or
ins
xchg
jge
popa
(bad)
push
in
xchg
sahf
sbb
in
out
or
mov
aaa
rol
xlat
clc
mov
push
inc
inc
int
jl
pop
bound
scas
pop
mov
stos
or
stos
cmp
or
cmps
push
cmc
(bad)
jl
or
mov
data16
push
outs
cmp
lods
mov
xor
xchg
push
pop
push
jecxz
jne
cmp
cdq
fmul
jb
push
sub
loop
push
mov
out
movs
retw
jnp
jns
cmp
push
sub
mov
(bad)
shl
sub
arpl
js
xor
mov
addr16
add
test
fld
xor
add
push
mov
(bad)
dec
cmp
je
add
jecxz
fcmovu
add
scas
inc
ja
iret
jmp
dec
jne
pop
or
dec
stc
inc
out
cmc
cmp
mul
rol
fs
add
outs
retf
pop
shl
inc
mov
sub
xlat
addr16
mov
js
xor
and
inc
inc
push
ins
or
aad
(bad)
imul
mov
cli
mov
mov
adc
jbe
xchg
sbb
(bad)
and
add
lahf
pop
das
sub
clc
xorps
iret
int
rol
add
and
(bad)
dec
xchg
repnz
mov
sbb
jne
mov
sahf
sub
cs
add
movs
out
or
mov
mov
and
mov
out
stos
pop
jno
cld
or
xchg
mov
arpl
xor
hlt
sub
imul
inc
cmp
js
retf
shr
rcl
cld
in
pop
shl
js
aad
sbb
mov
xor
rol
inc
jle
imul
mov
dec
test
inc
ror
and
jo
push
jge
jns
sbb
out
xchg
fst
sti
mov
push
jg
pop
jl
and
push
sti
xchg
add
push
xchg
mov
mov
pop
sub
pop
sub
(bad)
imul
(bad)
out
loop
or
out
push
sub
pushf
pop
adc
push
shl
or
mov
scas
les
pop
pop
cmp
or
stos
or
data16
retf
lock
dec
dec
je
fs
mov
push
ret
test
push
push
jmp
retf
pop
test
mov
add
push
sti
fsub
add
cmps
ret
push
adc
and
in
jno
mov
ds
popa
and
loope
(bad)
jnp
fs
mov
dec
(bad)
loopne
aam
aad
mov
lock
rcl
xor
mov
xchg
scas
dec
xor
cmp
jmp
retf
add
jle
dec
test
cld
jnp
fiadd
lea
jg
mov
mov
cmc
loope
pop
stos
shl
loopne
scas
lds
int3
push
sbb
hlt
sbb
add
jl
cmp
inc
xor
shl
adc
std
int
pop
jae
xlat
jbe
pop
add
jbe
jp
das
xor
pop
add
jne
mov
sbb
push
in
jp
dec
mov
and
fdiv
neg
xor
jg
sub
add
fistp
or
fistp
nop
sti
inc
mov
cmp
call
call
ins
stc
int3
lock
or
cmp
jno
int3
jg
mov
or
fisub
jb
bound
pop
in
out
cmc
popa
mov
or
sub
imul
and
je
cmp
xchg
shr
pop
lds
clc
mov
push
mov
clc
jmp
adc
lods
icebp
or
mov
sbb
xchg
inc
test
ds
aam
and
lods
xor
add
pop
cld
imul
movs
xchg
jmp
jmp
sbb
rcl
les
add
jp
cli
test
ins
or
rcr
fucom
lock
(bad)
fidiv
sbb
inc
aad
mov
pop
push
pop
in
inc
fld
pop
and
mov
push
sub
sti
pop
test
popa
jle
dec
pusha
mov
pop
jecxz
pop
add
arpl
(bad)
cdq
ffreep
js
inc
mov
nop
jmp
xchg
xor
jle
es
push
fcmove
pop
(bad)
imul
sar
addr16
hlt
xlat
mov
mov
aad
and
or
mov
stc
xor
ret
(bad)
and
pusha
xlat
aaa
cmps
xchg
add
cmp
out
xchg
and
les
test
cld
dec
sbb
out
add
mov
and
test
sub
fmul
push
pop
xor
push
pop
or
hlt
push
adc
es
sti
aam
and
sbb
pop
xor
or
jno
xor
ins
mov
(bad)
and
fyl2x
pop
xchg
js
jge
lods
dec
call
retf
fnstsw
stc
movs
(bad)
sub
jmp
sar
xor
mov
ja
mov
pop
int
sbb
cmc
ja
cmc
inc
mov
mov
push
and
cmp
or
pop
sub
cmp
dec
mov
pop
popf
xor
ins
pop
leave
cs
jmp
and
push
movs
push
pop
test
jae
into
mov
outs
inc
and
or
or
sub
or
(bad)
call
movs
and
mov
jecxz
enter
imul
iret
je
cmp
in
fisubr
imul
div
ss
out
add
jns
movs
js
dec
jne
ror
jns
add
or
repnz
leave
(bad)
pop
sbb
mov
or
dec
out
iret
push
jecxz
lds
sub
mov
push
data16
fcomp
mov
dec
jp
stos
push
dec
jb
scas
test
sub
pop
imul
and
or
lock
movd
and
loopne
ss
sahf
xor
pop
dec
in
call
imul
jae
ins
and
daa
mov
bound
les
sbb
adc
(bad)
repz
pop
test
sahf
mov
and
sub
test
inc
xor
xchg
ss
mov
sub
push
mov
sub
push
lods
mov
add
cs
cmp
mov
outs
lahf
arpl
mov
aam
push
gs
xchg
xor
sahf
or
pop
fist
lahf
shl
mov
(bad)
std
dec
pop
cmp
add
xchg
lea
cwde
and
pop
xchg
out
and
jecxz
std
iret
and
stos
pop
ret
push
call
idiv
xor
jle
repnz
jno
loopne
sbb
push
inc
fcom
and
cdq
icebp
jmp
xchg
mov
xlat
fwait
mov
fs
loopne
data16
scas
pushf
or
lea
loope
push
xor
jge
fs
pop
out
mov
std
xchg
sahf
out
es
icebp
mov
stc
jne
xchg
xchg
or
pop
scas
js
mov
sub
push
pop
inc
add
imul
lock
fistp
(bad)
test
repnz
aam
fiadd
pusha
movs
mov
pop
dec
xor
test
cli
xlat
fld
dec
leave
cmp
inc
cdq
mov
pause
inc
rol
dec
xchg
outs
mov
mov
mov
cmp
and
out
inc
retf
mov
jg
dec
push
mov
and
iret
jne
xchg
jp
pop
retf
shl
scas
sub
cmp
jne
sub
icebp
(bad)
adc
mov
(bad)
iret
repz
xchg
fisubr
or
mov
sub
push
add
fwait
pop
out
(bad)
sub
pushf
iret
jp
jg
nop
or
push
jnp
dec
daa
lea
rcr
add
jmp
mov
iret
lahf
push
in
and
out
jne
popf
dec
jp
push
lods
inc
adc
sbb
popa
jae
cmc
jns
(bad)
lods
or
pop
addr16
outs
leave
mov
and
imul
(bad)
add
mov
push
retf
and
sahf
pop
push
dec
inc
and
dec
push
add
jp
leave
add
cmp
leave
pop
sbb
mov
js
adc
sahf
xor
cmps
in
push
outs
arpl
and
imul
(bad)
ins
stos
push
pop
fyl2x
mov
popa
repnz
stos
mov
mov
imul
jae
sti
xlat
dec
cmp
arpl
push
inc
stos
clc
mov
push
mov
in
jb
imul
sbb
mov
rcl
sub
mov
ins
adc
adc
pop
jns
pop
sbb
les
cld
out
jnp
fbstp
lock
jmp
pop
fistp
(bad)
xchg
xchg
dec
cli
pusha
inc
pop
lea
in
xor
(bad)
jbe
push
(bad)
retf
or
add
push
int
out
into
and
out
adc
stc
clc
lds
add
(bad)
out
test
xchg
push
inc
pop
inc
or
mov
cmp
out
and
repnz
out
push
pushf
mov
iret
xor
outs
cs
(bad)
clc
call
jp
les
jmp
adc
sub
ret
ss
jmp
(bad)
into
push
xlat
hlt
scas
fdiv
mov
dec
xor
outs
aaa
push
mov
div
or
hlt
pop
mov
jb
sbb
mov
xor
inc
dec
mov
neg
push
repnz
mov
jg
xchg
sbb
sbb
rcl
fwait
cmp
sub
test
xchg
cmp
xchg
mov
inc
cwde
and
and
add
sahf
inc
push
jmp
mov
or
lds
jmp
lods
jg
or
call
dec
mov
cmp
ja
mov
rcl
ror
cmp
iret
je
in
aaa
pusha
dec
xor
inc
jo
ss
rcr
push
xchg
daa
popa
push
inc
add
add
pop
jge
lahf
aaa
neg
fild
inc
mov
call
inc
das
das
out
inc
sub
dec
das
dec
xor
push
mov
sbb
push
hlt
lods
nop
test
mov
dec
popf
je
push
mov
mov
call
dec
stos
push
push
and
push
clc
dec
push
sbb
mov
popa
cs
add
test
sti
neg
into
dec
mov
fwait
das
test
fistp
pushf
leave
add
jmp
fldenv
or
shr
stc
cdq
xor
add
xchg
shr
fiadd
in
jge
aas
push
pop
pushf
cld
xchg
sub
sbb
xor
pop
stos
cmp
out
and
xchg
dec
call
es
mov
dec
xchg
sub
jp
pop
stos
lds
mov
pop
dec
int3
push
call
inc
sub
sbb
in
leave
ins
adc
mov
cmp
xor
loop
repnz
adc
inc
int
jmp
xor
das
iret
lea
push
sub
pop
fadd
ja
adc
rcl
adc
test
add
push
sbb
cld
arpl
inc
jecxz
adc
push
lds
sbb
and
std
inc
stos
(bad)
mov
retf
sub
lods
mov
inc
push
sar
stos
mov
jns
jl
and
sub
leave
fisttp
pop
inc
inc
inc
xchg
imul
movs
loop
mov
mov
sbb
cmp
enter
xchg
and
fisubr
mul
cmps
adc
cdq
push
pop
fadd
cmp
repnz
cmc
call
shr
test
add
out
in
clc
cmps
adc
sbb
inc
jbe
and
leave
int3
xor
stc
pushf
shl
stc
neg
sub
xchg
fstp
popa
fiadd
fist
xchg
and
xor
and
jge
mov
mov
outs
mov
xchg
inc
sbb
cmps
retf
pop
rol
cdq
mov
in
and
pop
sbb
xchg
into
movs
xor
cmc
sub
sub
loope
call
push
hlt
mov
inc
nop
clc
pop
xchg
xor
push
hlt
sub
add
movs
mov
shl
ins
fistp
out
sbb
call
mov
cmp
mov
mov
push
jmp
nop
mov
shr
es
scas
pop
in
aas
fwait
out
mov
loope
repz
dec
lds
or
add
dec
call
jmp
dec
sbb
test
sub
fsubr
sub
dec
mov
int
in
or
pop
xor
jmp
mov
xchg
fimul
dec
loopne
lods
mov
add
sbb
(bad)
pushf
popa
lock
mov
std
shl
test
(bad)
fimul
aas
sbb
sbb
aas
push
dec
(bad)
sar
into
inc
adc
xor
or
cs
imul
and
cmp
cmps
aaa
call
dec
and
mov
or
loop
mov
test
mov
mov
ret
add
mov
std
in
data16
lahf
lds
xchg
popa
loopne
movs
xor
ins
ret
outs
lock
jbe
fisub
in
ins
(bad)
mov
mov
push
dec
push
stos
inc
pop
mov
sbb
adc
fcom
sbb
cmp
push
leave
jno
fidivr
sbb
jl
ins
and
aas
jb
push
xchg
fwait
sub
mov
mov
(bad)
hlt
cmc
or
fwait
add
mov
std
push
jmp
xor
sub
dec
pop
ret
inc
cmp
sahf
fnstcw
cwde
push
dec
and
sub
ret
adc
ror
test
sar
mov
sub
mov
int
add
adc
sbb
jmp
int3
out
jnp
fisubr
out
pop
push
(bad)
mov
sti
jns
lods
sbb
mov
(bad)
aas
sbb
retf
sar
out
mov
inc
inc
ficomp
mov
xor
call
leave
lods
sub
inc
pop
dec
mov
in
fwait
jmp
push
jbe
leave
fwait
pop
loop
js
inc
or
les
not
ret
scas
add
push
mov
emms
stos
idiv
inc
or
or
mov
scas
mov
push
sub
cmp
retf
push
mov
dec
clc
test
ins
cmp
mov
add
push
in
inc
leave
cmp
or
and
fwait
push
mov
push
mov
push
cmp
call
sbb
test
pop
outs
dec
push
ins
inc
sti
movs
scas
icebp
xchg
push
push
movs
retf
and
or
adc
or
int
stc
pop
loope
ret
mov
retf
popw
sub
sbb
cld
loope
xchg
out
pop
dec
(bad)
or
scas
arpl
inc
aaa
dec
mov
popf
xor
jns
(bad)
dec
fs
inc
sbb
mov
cmp
dec
(bad)
daa
cmp
cmp
bound
hlt
add
add
or
stos
fistp
and
xchg
jnp
mov
xchg
adc
mov
xor
add
push
imul
xchg
in
add
enter
gs
and
sub
and
dec
mov
shl
out
jns
fwait
cmp
lods
or
fimul
cs
in
push
icebp
jmp
jbe
jecxz
push
jge
mov
push
adc
and
adc
sbb
imul
jmp
push
das
das
mov
fs
outs
xor
mov
std
dec
inc
fisttp
xor
push
inc
lods
movs
or
cmc
popa
ds
jae
rcr
ins
fnsave
outs
sub
fdivr
clc
add
cmp
mov
xchg
mov
xchg
sbb
jbe
or
lahf
je
jecxz
adc
fidivr
dec
push
call
mov
sub
popa
sti
cmp
shr
jo
mov
iret
mov
movs
mov
aas
aas
sbb
(bad)
mov
in
lds
movs
mov
mov
in
out
pop
dec
in
nop
dec
adc
add
in
xchg
sbb
es
or
mov
mov
mov
add
mov
inc
xor
pushf
and
lahf
ss
dec
add
out
pop
sub
or
pop
xor
(bad)
scas
add
xor
inc
xor
sbb
aas
jne
aam
repnz
mov
iret
(bad)
push
mov
dec
ins
mov
adc
xchg
add
mov
xchg
pop
jae
sub
ficomp
adc
mov
mov
lods
add
mov
lahf
push
lahf
mov
push
adc
add
jle
out
cmp
test
xchg
(bad)
xchg
push
sbb
loop
mov
inc
test
std
xor
into
pop
or
dec
ret
ret
std
mov
xchg
and
jbe
adc
or
pop
add
sub
push
fisttp
push
fistp
movs
add
mov
imul
fs
les
ret
pop
call
sbb
movs
sub
adc
test
stc
out
pop
xchg
mov
icebp
mov
out
jno
and
xchg
cmps
lock
out
pop
ins
cmp
add
in
xor
mov
dec
dec
push
xor
jmp
jmp
and
test
mov
clc
push
mov
shl
shr
stos
mov
and
loop
pop
idiv
stos
gs
dec
xchg
(bad)
cmp
ins
loopne
cmp
test
fwait
mov
out
mov
mov
mov
inc
push
inc
inc
push
jnp
ja
repz
inc
adc
mov
xor
or
mov
jle
sahf
xor
push
shl
test
shl
xchg
iret
sbb
js
mov
xchg
mov
leave
loope
add
inc
int3
stos
pop
jne
in
stos
dec
stos
mov
jg
fistp
fwait
rcl
mov
inc
mov
dec
mov
dec
xchg
xchg
in
adc
arpl
ja
pop
stos
inc
add
jae
sub
and
jg
mov
pop
mov
cmp
movs
sbb
jne
(bad)
pop
and
add
into
popf
sub
ss
jo
into
push
iret
adc
(bad)
and
popa
push
jae
push
and
and
sbb
hlt
mov
je
push
cmp
cmps
pop
jns
mov
test
aad
or
subps
outs
xor
outs
pop
push
push
xlat
arpl
movs
xor
rcr
mov
pop
daa
dec
ficomp
or
xchg
rol
sub
movs
inc
and
pop
xor
sub
fcomp
jno
jge
ret
cmc
mov
(bad)
adc
out
pop
cmp
shl
in
inc
inc
xor
in
ror
sbb
inc
imul
(bad)
sbb
mov
daa
jae
ja
fmul
and
xchg
push
adc
pusha
mov
mov
xchg
cmp
jmp
and
mov
jl
and
ror
into
xor
mov
stc
dec
retf
xor
jb
sti
psubsb
daa
fdivr
inc
call
out
ror
test
repz
setg
mov
jl
rcl
ss
push
push
cmp
adc
idiv
das
push
push
cmp
add
mov
sub
jl
cli
jg
(bad)
add
fidivr
loopne
push
adc
loop
daa
sub
sbb
rol
cmp
(bad)
mov
jne
jmp
adc
jno
pop
adc
mov
and
adc
aam
ror
push
rol
jno
es
adc
xor
jl
movs
xchg
addr16
(bad)
ret
daa
inc
cmp
test
cmps
jb
jle
(bad)
vpsubq
dec
sahf
jmp
(bad)
fild
dec
inc
imul
pop
imul
bound
arpl
hlt
cli
mov
ror
(bad)
mov
mov
adc
cmc
push
xchg
cmp
adc
add
add
adc
in
sbb
loopne
arpl
outs
sbb
stos
push
mov
les
and
rcl
cmp
repz
das
adc
sub
add
movs
retf
rol
jmp
mov
shr
sbb
ss
enter
jae
sub
cmp
aam
xchg
sbb
push
jb
or
xchg
pop
mov
mov
ja
test
lods
fdivr
rcl
dec
jmp
cmp
mov
mov
iret
jb
xor
xchg
jl
div
xor
repnz
inc
jae
data16
pop
repnz
and
stc
sub
in
pop
imul
ret
in
in
pop
mov
lds
cwde
lock
push
and
loop
jae
jae
mov
sti
fdivr
jbe
mov
sub
lock
cmp
aaa
hlt
push
xor
dec
push
sbb
test
sbb
mov
xor
mov
sub
xchg
int
aaa
div
movs
jp
push
test
cmp
call
leave
pop
lods
lods
ss
push
cld
ja
nop
pop
in
cs
add
jmp
mov
pop
mov
mov
mov
add
cmp
mov
fcomp
inc
or
into
int3
sbb
xchg
or
pop
pop
adc
hlt
or
ins
in
jbe
dec
jle
cmc
pop
mov
cmps
adc
shr
push
in
mov
mov
sbb
cmp
xchg
or
sub
repnz
fsubr
inc
out
lock
sub
push
cmp
jns
out
movs
lods
sar
xlat
xchg
inc
stc
pop
push
mov
mov
pop
fprem1
or
dec
test
pop
jg
jne
xor
sbb
sar
rcr
adc
push
jae
mov
mov
xchg
test
adc
pop
inc
sbb
push
imul
hlt
mov
mov
aas
fadd
dec
rol
push
sti
(bad)
mov
cmc
setnp
jne
xchg
pop
xlat
jnp
xchg
push
jb
adc
in
add
and
inc
aas
out
or
or
int
das
lods
movs
or
pushf
and
repnz
cmc
and
adc
and
xchg
adc
aam
fmul
popf
or
popa
sub
jo
rcr
shl
fiadd
repz
sub
push
mov
test
push
loop
iret
jl
xchg
popa
cmp
les
cmp
push
or
scas
sub
dec
sub
dec
or
leave
inc
mov
xchg
(bad)
fcmovbe
shr
(bad)
sbb
js
pushf
neg
fchs
adc
and
imul
int
and
out
sub
stos
outs
xchg
inc
adc
adc
and
sub
push
dec
(bad)
fistp
loope
(bad)
(bad)
ja
dec
jge
nop
inc
rcr
jnp
jmp
or
xchg
je
ins
dec
and
adc
mov
rol
ret
ss
clc
mov
adc
xor
enter
lahf
xchg
lea
stos
jb
ins
hlt
mov
ins
in
outs
pop
jno
test
dec
in
daa
imul
push
sbb
pop
jb
add
add
adc
cmp
jbe
mov
inc
jmp
dec
into
dec
sahf
imul
and
jp
loop
sar
out
lock
stos
sub
imul
in
cmp
sti
fwait
in
push
cmp
idiv
adc
add
or
stos
jb
and
cmp
call
add
or
mov
add
test
cdq
lock
push
jecxz
movs
pop
sar
mov
jecxz
icebp
iret
dec
enter
and
test
or
int
fadd
shl
pop
sahf
jmp
push
lahf
call
je
aam
mov
dec
int
into
(bad)
cmp
call
sar
mov
in
sbb
pop
mov
jne
mov
mov
(bad)
sub
retf
addr16
aad
cmp
outs
pop
leave
shl
in
jmp
retf
aam
sti
mov
xor
int3
cmc
fcom
inc
icebp
adc
in
es
(bad)
not
sub
xchg
adc
ret
pmulhuw
nop
in
ficom
xlat
cmp
test
mov
dec
pop
or
test
pop
or
inc
ret
fcmovnb
mov
mov
ss
mov
push
push
pop
adc
sbb
mov
jmp
fldcw
(bad)
(bad)
or
inc
xor
(bad)
out
adc
scas
in
retf
lds
scas
imul
xor
in
ret
adc
mov
lea
mov
in
mov
mov
out
add
test
xchg
fwait
and
jmp
xchg
stos
and
or
adc
push
ss
xchg
sub
mov
stc
int3
jo
adc
sbb
jnp
sbb
js
fcom
test
mov
jb
xchg
aas
sbb
cmp
xor
push
xchg
sbb
nop
cmps
inc
mov
mov
rol
movs
xchg
ret
stos
inc
and
mov
pop
pushf
push
in
dec
add
xchg
call
popf
jp
push
or
mov
cmc
(bad)
sti
nop
inc
xor
sbb
test
inc
aaa
popf
daa
or
(bad)
stos
mov
hlt
popf
lods
mov
and
stos
add
(bad)
jnp
mov
into
jno
adc
rcr
mov
loopne
dec
adc
mov
outs
jp
loop
pusha
in
sub
addr16
js
cmp
mov
jo
or
mov
inc
pop
pop
add
fmul
(bad)
daa
pusha
inc
call
jp
push
sbb
xchg
mov
or
inc
setns
out
in
jno
mov
sbb
push
cdq
call
xchg
xchg
or
add
or
gs
or
loope
mov
lods
std
push
pusha
jp
and
in
adc
call
pop
js
pop
(bad)
rcr
mov
sbb
call
xor
cmp
cmc
xchg
cmp
and
pop
xor
push
cli
or
popa
aad
push
xlat
ds
mov
movs
jns
cdq
pop
dec
mov
icebp
adc
mov
push
nop
push
in
dec
pop
fwait
cli
push
dec
shr
mov
dec
arpl
pop
cmp
xor
inc
lds
fwait
stos
mov
lods
add
arpl
test
mov
jne
data16
lods
sar
push
out
lock
push
adc
iret
pop
enter
out
js
ja
jne
inc
sub
std
mov
and
push
popf
jbe
bound
sub
xchg
pop
and
mov
cmp
dec
mov
sub
adc
ficom
lods
out
push
test
test
popf
mov
pop
movs
add
inc
scas
mov
enter
jge
pop
cmp
push
mov
ins
cmp
xor
cmc
or
repz
fidiv
jl
clc
out
int3
loope
retf
mov
inc
aam
lahf
sub
sbb
clc
out
loope
(bad)
push
enter
jmp
xchg
cmp
shl
aas
ds
pop
pop
pop
inc
fdivp
dec
jns
xor
dec
paddsb
pusha
int
jno
ins
jmp
jecxz
pop
mov
fild
xchg
leave
adc
push
scas
test
retf
xchg
and
cs
outs
shr
mov
fwait
xchg
mov
or
add
iret
loope
cmp
(bad)
and
adc
mov
dec
mov
lea
mov
mov
test
out
sub
mov
aam
fmul
dec
xchg
fisubr
daa
inc
sar
adc
dec
inc
inc
and
jl
add
shl
push
push
fisttp
js
sub
dec
aam
add
leave
test
push
jmp
pop
cmp
lfs
jmp
xchg
push
inc
and
ss
xchg
inc
popa
xchg
adc
mov
inc
retf
dec
jecxz
and
mov
mov
les
pop
sub
test
mov
out
jmp
xor
jbe
pop
dec
shr
cld
addr16
pop
and
cmp
add
jmp
inc
mov
int3
scas
xor
cs
repnz
jne
pushf
sub
int3
xchg
mov
retf
shl
adc
push
(bad)
loope
mov
mov
jge
lods
test
in
cmps
retf
jp
add
sub
jp
fdivrp
ret
icebp
daa
jecxz
call
sub
ins
mov
mov
stos
(bad)
mov
pop
sbb
add
neg
cmps
movs
rcr
test
adc
test
das
sub
dec
pop
pop
popf
fmul
aad
ins
pop
ja
and
fdivr
ds
mov
mov
outs
pop
cli
fisttp
scas
jmp
gs
out
mov
cmp
movs
dec
xor
adc
push
mov
outs
(bad)
neg
add
push
stc
mov
rep
or
ja
jae
int
fbstp
pop
push
mov
cmp
imul
lods
lds
outs
adc
pop
fild
jno
and
adc
sbb
shr
popf
xchg
mov
and
mov
js
sar
addr16
aam
ins
mov
fmul
repnz
leave
sub
lods
sar
in
retf
adc
pop
mov
cs
ret
mov
cwde
mov
sbb
or
lods
dec
mov
popf
inc
test
sahf
ficom
jecxz
xor
and
daa
add
sbb
mov
mov
aas
cmps
push
loopne
jge
sub
int
shr
call
push
inc
in
in
sub
aaa
and
xchg
or
in
push
lock
sbb
in
jno
outs
bound
shl
jo
xchg
shr
and
xor
cmps
push
inc
std
das
sub
fbstp
pushf
add
add
dec
xchg
sti
ins
pop
out
rcl
test
mov
dec
mov
mov
push
jg
mov
jl
cmovl
mov
push
add
xchg
adc
imul
push
adc
imul
cmp
hlt
data16
aam
outs
cmps
adc
aam
ins
in
ds
jge
dec
xor
jmp
xchg
cs
inc
fimul
shr
pop
aam
add
aam
cmp
pop
pop
pop
repnz
xor
imul
cmp
push
jnp
call
jecxz
int3
(bad)
fwait
mov
imul
pop
pop
int
sti
adc
rol
push
mov
icebp
xor
test
cdq
cmc
out
xchg
cmc
mov
pop
lds
push
xchg
xchg
cwde
cmp
(bad)
mov
loop
fmul
mov
scas
(bad)
jae
(bad)
jmp
inc
dec
add
call
rcr
dec
and
mov
push
shl
jl
cmps
rcr
pushf
mov
push
sbb
pop
sub
xchg
adc
ins
mov
cmp
pusha
lahf
call
retf
popf
and
test
enter
cld
and
dec
stc
sbb
or
les
push
jecxz
mov
shr
ret
and
dec
aas
jne
mov
xchg
call
push
mov
mov
sub
dec
addr16
mov
jg
jmp
popa
pop
mov
jmp
mov
cmp
xchg
mov
div
or
pop
xchg
retf
mov
and
outs
push
out
fbld
shl
out
xchg
and
retf
aaa
repz
test
jno
adc
push
mov
jmp
iret
and
ret
mov
mov
dec
jmp
mov
adc
mov
fst
xor
push
fwait
pop
cmp
pop
mov
mov
test
jae
sub
mov
sbb
jb
sahf
out
dec
mov
dec
cli
inc
cdq
and
imul
jge
popa
loopne
pop
mov
jl
movs
and
mov
popf
pop
pop
sbb
xor
ins
cmp
mov
(bad)
aas
xor
ds
es
xchg
into
std
fild
lahf
xor
sub
mov
(bad)
pop
mov
mov
popa
pop
and
adc
ror
imul
movs
ins
scas
in
inc
icebp
xor
fnstenv
gs
test
in
iret
scas
int
ss
addr16
pop
xor
fwait
(bad)
push
shl
lods
loopne
mov
add
ins
out
mov
aaa
xchg
ret
aas
pop
ins
lds
inc
and
pop
fistp
dec
mov
inc
aam
pop
mov
adc
dec
jp
repnz
adc
and
inc
xchg
jbe
in
and
not
sbb
cmp
ins
cmp
nop
fs
data16
cwde
and
(bad)
xchg
pop
popf
jae
dec
mov
and
mov
add
cmps
call
shr
arpl
push
outs
xchg
imul
mov
test
and
popa
adc
bound
or
xchg
push
sbb
imul
mov
xchg
je
dec
test
out
test
imul
sub
jne
xor
in
adc
cli
add
ins
out
shr
in
mov
add
and
shl
jmp
mov
xor
dec
push
stos
call
es
sti
lds
xchg
inc
push
outs
bound
les
scas
or
test
mov
pop
(bad)
enter
pop
(bad)
mov
test
into
in
sub
push
enter
jp
mov
pop
adc
mov
pop
jmp
call
popf
sbb
cmp
cmc
pop
mov
jmp
add
dec
push
xor
ror
pop
int3
fdivr
inc
mov
pop
pushf
aaa
jge
in
(bad)
xchg
mov
popf
and
test
lds
loop
bound
sub
sub
and
neg
jne
scas
je
xor
xchg
test
mov
gs
loop
imul
test
rcl
dec
push
mov
xchg
or
jmp
sbb
je
pop
in
movs
int3
stc
mov
sar
pop
repnz
dec
or
(bad)
ret
pop
out
push
rcl
add
idiv
mov
adc
ins
retf
and
adc
push
mov
loopne
cli
(bad)
cmp
ss
test
push
xor
xor
pop
ins
xor
fld
inc
clc
cmovge
mov
xchg
jmp
addr16
or
dec
cli
ret
pop
jmp
pop
push
test
sbb
pop
lods
mov
jnp
data16
rol
push
mov
pop
pusha
fchs
sahf
and
add
xor
ret
je
cmp
push
lahf
jmp
sub
push
dec
dec
mov
add
outs
arpl
es
xor
fst
push
cdq
daa
pop
jl
adc
retf
mov
xchg
fisubr
add
adc
cmp
fs
mov
xchg
int3
pop
ror
(bad)
rep
mov
jns
push
mov
xor
out
mov
leave
lock
xor
push
cmp
inc
push
inc
xchg
sbb
push
(bad)
push
js
stc
sbb
stos
jbe
push
mov
push
add
xchg
add
jae
or
adc
xor
jp
pop
fyl2xp1
(bad)
sub
shl
je
jne
jg
jmp
or
ss
sbb
push
cwde
jns
clc
sub
xchg
jnp
test
xor
and
cmp
add
jg
xchg
fcomp
pop
(bad)
aad
push
sub
add
jb
in
hlt
mov
lock
and
stc
jne
or
(bad)
into
std
mov
push
js
inc
inc
jo
cs
and
mov
jns
sbb
inc
adc
ja
(bad)
fmul
sub
mov
call
cmp
or
mov
je
outs
inc
jle
loop
nop
xor
sbb
ss
loopne
loop
idiv
xchg
movs
jge
dec
(bad)
adc
ja
sub
xlat
push
push
fisubr
les
ja
aam
dec
sti
xchg
pop
scas
cdq
sti
call
pop
sub
xchg
leave
mov
pop
and
cli
or
and
ins
in
mov
out
in
cmp
repz
mov
pop
mov
mov
push
sub
shl
mov
adc
out
mov
mov
add
addr16
sbb
xlat
pop
fdiv
dec
sub
scas
and
adc
adc
repz
xor
mov
add
jns
mov
inc
xchg
add
inc
enter
call
or
iret
dec
mov
pop
fs
fcom
int
neg
ins
std
in
mov
icebp
pop
push
xchg
adc
into
pop
stos
push
movs
or
mov
xor
movs
stc
je
div
inc
mov
push
xor
jnp
adc
rcl
(bad)
sbb
xchg
pop
aam
(bad)
xor
fist
jle
xor
mov
out
imul
addr16
inc
adc
jo
stc
add
shl
mov
outs
cmps
cdq
call
es
imul
push
jecxz
adc
sbb
inc
movs
cmp
jle
inc
cmp
inc
add
in
pop
inc
jno
and
pop
sahf
lods
dec
xchg
jmp
sub
shl
fcmovnb
and
scas
xor
sbb
push
aad
adc
test
mov
dec
das
hlt
gs
mov
adc
jle
data16
pop
sub
mov
mov
inc
or
sub
dec
loopne
and
push
scas
stos
push
call
ins
lods
sbb
xchg
mov
xchg
in
push
(bad)
(bad)
(bad)
push
call
adc
or
lds
mov
cmp
mov
in
sub
daa
pop
outs
or
int
cmc
add
ret
std
add
inc
mov
aaa
outs
mov
inc
dec
cmp
inc
mov
mov
jecxz
mov
pop
leave
fsub
pop
mov
repnz
jae
xchg
jb
and
enter
add
mov
(bad)
dec
lods
movs
add
mov
add
daa
inc
inc
cmp
xchg
stc
xlat
test
mov
add
mov
aam
inc
int
xchg
sahf
or
mov
and
lea
inc
mov
loopne
into
in
mov
out
jp
inc
or
ret
sar
std
jb
mov
push
push
mov
mov
add
inc
pop
mov
push
xchg
fnstenv
in
inc
aaa
sub
push
outs
lea
push
sbb
mov
jg
mov
sar
stc
sub
jno
sub
call
push
scas
jb
or
out
jg
xor
(bad)
pop
shl
stos
retf
stos
call
xor
xchg
int
test
dec
leave
jb
test
aam
repnz
or
mov
ins
sti
mov
cld
sbb
fwait
and
imul
fld
ds
mov
imul
mov
loope
mov
xlat
retf
test
daa
aas
jge
aam
sbb
imul
scas
jnp
xor
fwait
out
stc
ss
sub
std
retf
lods
pop
sbb
or
jne
and
sbb
fwait
sahf
mov
sbb
jno
enter
mov
(bad)
jge
lds
cwde
pop
add
movs
xlat
inc
es
ret
xchg
popa
call
mov
in
and
cmp
fldenv
xchg
stos
inc
mov
inc
mov
fidiv
imul
stos
(bad)
cmp
inc
mov
jns
and
adc
jne
sar
scas
shl
retf
gs
mov
cmp
xor
cmc
mov
test
stos
sub
pushf
add
xchg
or
in
inc
adc
aad
jmp
js
dec
add
nop
mov
or
outs
and
fisub
shl
xchg
repz
dec
and
jmp
xchg
xchg
sar
pop
mov
data16
loop
icebp
cwde
(bad)
fcomip
xchg
adc
cwde
add
out
daa
into
and
lods
fisubr
xor
xor
daa
fadd
daa
mov
int
mov
pop
or
sbb
call
lahf
dec
cmp
cdq
fs
loop
fmul
mov
gs
cli
movs
fcomi
es
test
fild
repz
add
or
int
es
cmc
test
mov
add
mov
call
call
pop
or
add
xor
add
mov
clc
add
sbb
ror
and
pop
and
stos
and
cwde
or
clc
xor
outs
push
adc
test
add
jecxz
and
je
sti
cmps
xor
add
jo
and
sub
pop
loop
imul
or
push
les
fidiv
sbb
(bad)
leave
mov
js
enter
dec
hlt
aam
mov
xor
sub
mov
pop
jg
add
ins
mov
fdivr
popf
lods
test
mov
icebp
push
jmp
push
stos
or
or
mov
sti
adc
(bad)
xor
call
aam
stos
pop
pop
aaa
sub
push
repnz
xchg
inc
aam
push
shr
sbb
in
mov
mov
push
or
shr
ds
and
enter
daa
push
movs
xchg
fimul
sti
clc
pushf
int
push
jbe
pop
call
(bad)
dec
fnstcw
into
inc
mov
rcr
sub
inc
(bad)
leave
ins
jle
inc
jmp
xchg
jmp
aas
call
mov
rcl
std
sbb
push
aam
sbb
inc
cli
je
retf
shl
js
(bad)
and
mov
inc
ja
ficomp
cmp
setbe
mov
or
mov
cmp
xor
jmp
cdq
sub
or
adc
pop
jg
aas
sub
sbb
je
sbb
lea
ret
hlt
fs
xor
outs
push
or
retf
cdq
sti
xchg
mov
mov
push
adc
out
rol
adc
push
aas
mov
mov
inc
xchg
xchg
add
call
aam
outs
mov
outs
add
ret
fwait
cmc
push
ss
push
xor
adc
in
popf
bound
loop
jbe
sub
fisttp
es
pop
push
push
mov
retf
ss
in
mov
or
mov
or
push
dec
imul
add
lock
sahf
bound
or
and
push
ins
fidivr
add
push
push
(bad)
sbb
or
cmp
xor
(bad)
scas
ret
test
bound
fcomp
or
mov
fs
xchg
movs
imul
inc
jnp
dec
mov
shr
and
adc
dec
add
test
dec
retf
cmp
and
xor
lahf
cmps
lds
xor
jg
scas
jge
mov
mov
imul
mov
sti
dec
mov
mov
or
add
in
sub
xlat
loopne
out
mov
xchg
mov
sub
data16
repz
pop
mov
aam
pop
dec
rcl
mov
movs
ror
nop
dec
rcr
fs
inc
test
aas
fnstenv
sbb
fs
mov
out
inc
push
push
loopne
lock
cmp
cmp
add
test
inc
adc
test
adc
jge
xor
pop
cmp
xchg
adc
pop
pushf
pop
ror
into
mov
fwait
adc
cmp
sahf
mov
idiv
rcl
cmps
mov
sahf
enter
iret
dec
jne
push
cmps
ins
rcr
test
pop
out
or
retf
ret
jnp
ror
and
sbb
mov
mov
mov
and
jns
mov
ins
std
repz
test
(bad)
fsubr
call
dec
das
pop
and
xchg
jb
sbb
idiv
ja
xor
and
dec
dec
cmps
test
xchg
scas
pop
and
add
dec
repz
inc
imul
cmps
fcom
stos
push
mov
mov
cmp
mov
test
lea
fdiv
dec
out
sub
movs
ss
pop
popa
mov
pop
daa
popf
xor
ins
lds
shl
in
imul
inc
out
xchg
pop
pop
mov
push
dec
pusha
movs
jns
pop
lds
popf
mov
mov
dec
and
neg
xchg
aas
push
jmp
push
mov
mov
sub
push
lock
push
int3
lods
inc
aas
imul
cmc
mov
int3
mov
out
jne
or
cmc
pusha
jmp
loope
adc
adc
pop
psrad
data16
sub
clc
cs
sub
test
xchg
pusha
sbb
fdiv
dec
xchg
pop
cli
into
xchg
and
jg
mov
mov
mov
out
jp
scas
adc
mov
gs
xchg
mov
pop
jae
xchg
xlat
(bad)
enter
or
jne
push
push
push
in
mov
mov
call
pop
mov
loop
test
fist
and
imul
popf
cmp
push
mov
test
lea
jmp
adc
cld
mov
sub
hlt
pop
xor
rcl
jl
retf
aas
sub
fist
xchg
pop
jecxz
add
mov
xor
jb
fisub
enter
cli
adc
push
fdiv
xchg
shl
cld
xor
pop
pop
jne
fdiv
enter
popa
in
or
enter
jmp
add
push
js
call
add
lea
mov
mov
xor
push
idiv
std
int3
sar
and
adc
xchg
xor
pop
sar
dec
lods
mov
sub
mov
movs
rol
daa
repz
retf
push
fs
or
add
push
sbb
push
in
jb
mov
imul
cmp
int3
push
add
clc
mov
xor
clc
inc
mov
cmc
je
aaa
rcl
lods
fsub
scas
popa
xchg
adc
or
dec
pop
add
aad
sub
out
daa
xor
jg
xlat
lahf
xchg
push
popa
clc
dec
xchg
or
lahf
(bad)
jmp
aam
xchg
hlt
mov
sbb
pop
adc
jg
popa
sbb
das
xchg
out
aaa
sub
sub
icebp
push
jne
fist
mov
cmp
or
movs
cmovo
push
test
pushf
cmp
in
icebp
arpl
outs
jmp
xchg
mov
mov
popa
cld
test
rcl
xor
fs
mov
fisttp
scas
dec
out
cmp
jl
sub
test
ds
dec
jbe
jnp
(bad)
daa
outs
jmp
inc
sub
or
ret
fst
push
loope
mov
cmp
or
fsub
sar
mov
test
sbb
jne
pop
movs
bound
cmp
(bad)
aaa
sbb
scas
movs
sbb
and
cmc
sbb
cmc
sbb
addr16
out
cmp
sub
fs
retf
cmp
inc
int
daa
and
out
aas
bound
jge
xor
push
adc
out
fldenv
in
popa
sbb
jp
adc
cmp
push
jmp
dec
fs
(bad)
mov
sub
push
test
ins
fs
xchg
imul
(bad)
out
sbb
pop
sbb
daa
stos
push
cmp
or
mov
jae
add
pop
cmp
pop
scas
mov
adc
cmps
cmp
adc
cmp
in
mov
in
out
pop
push
lea
sbb
(bad)
jecxz
scas
push
lahf
xchg
and
adc
sub
daa
push
inc
adc
inc
fucomi
shl
dec
mov
xlat
stc
pop
pop
sbb
or
cli
pop
pop
mov
mov
dec
and
sub
mov
imul
sub
inc
cmp
js
aas
shl
shl
cld
dec
mov
iret
push
xchg
sub
cmp
repz
cmps
fwait
adc
sub
dec
mov
test
jnp
out
lea
pop
xlat
gs
aaa
sti
cmp
ds
pop
or
cdq
mov
sub
jo
xchg
cmps
outs
in
aas
std
adc
scas
xchg
retf
and
xor
jo
jb
(bad)
pusha
pop
stos
inc
jecxz
fld
rcr
dec
mov
jo
mov
movs
fcmovb
jns
sub
and
sahf
jb
inc
mov
outs
adc
ins
mov
(bad)
fnstsw
push
cld
xchg
dec
mov
and
push
mov
pop
and
dec
push
gs
inc
cmc
loopne
ss
cmp
addr16
scas
(bad)
pop
imul
arpl
push
sbb
sub
or
adc
clc
jle
add
(bad)
pop
sub
jnp
xor
sbb
rcl
adc
mov
push
inc
pushf
xlat
or
push
ds
repnz
dec
retf
ret
cld
jne
popa
jle
data16
retf
xor
jbe
test
js
mov
sbb
xchg
fldenv
test
(bad)
adc
push
inc
mov
adc
cmp
mov
sub
inc
sub
sbb
shr
mov
cmp
je
lods
push
cs
(bad)
into
xchg
addr16
scas
sbb
fldenv
hlt
daa
xchg
mov
ds
add
aam
and
(bad)
dec
js
or
cmc
and
(bad)
mov
pop
fcmovnbe
retf
jmp
push
dec
push
out
dec
mov
rol
cmp
test
fwait
rol
push
icebp
dec
jmp
fadd
inc
push
ficom
pop
test
out
xlat
int3
dec
imul
pop
cmps
int
stc
addr16
aam
adc
inc
cmps
jbe
adc
or
jae
dec
add
inc
sub
dec
ins
sar
sti
ret
repnz
and
xchg
rcr
lock
xor
ja
shl
pop
in
push
iret
repz
mov
lods
lahf
push
in
ds
test
shl
loopne
loop
push
mov
lods
inc
jmp
add
push
mov
xlat
xchg
mov
pusha
pusha
fnstcw
inc
out
ja
aad
movs
sbb
jnp
push
pop
clc
sub
mov
pop
pop
js
popa
out
cwde
ficomp
test
mov
mov
push
cmps
jmp
inc
cmp
loope
push
xchg
cmp
xor
ret
mov
pushf
neg
cmp
pop
mov
into
cmps
push
or
(bad)
stos
mov
fild
push
lods
xchg
push
xor
push
shl
sub
xchg
in
pop
ja
test
xor
mov
xor
ror
nop
dec
jl
mov
or
sub
sbb
lock
push
adc
jge
lea
pop
jge
sub
out
shr
mov
add
cmps
jl
leave
fwait
retf
pop
mov
repz
pop
pop
rcr
push
dec
sbb
daa
adc
mov
movs
add
scas
repz
sub
frstor
dec
add
jo
daa
mov
pop
add
add
ja
inc
xor
cmps
xchg
push
fisttp
rcl
lods
jle
fisubr
in
add
sbb
in
mov
cmp
repz
out
test
retf
or
jg
rcr
icebp
js
push
call
clc
jne
arpl
jl
iret
mov
imul
lods
xchg
lds
in
add
or
int3
add
cli
jle
cmp
push
call
adc
iret
xchg
rcl
sahf
push
push
inc
pop
sbb
xor
loopne
std
out
push
mov
cld
pop
in
outs
stc
in
arpl
ins
sub
js
(bad)
jae
add
aas
dec
retf
out
test
iret
int
shl
out
es
not
pop
mov
jo
mov
sbb
sbb
scas
std
pop
int
aas
in
call
sbb
xchg
xchg
mov
aas
jns
mov
inc
lods
and
dec
push
mov
cmp
mov
xlat
pushf
fisttp
std
xlat
out
out
imul
sbb
adc
mov
ins
inc
rol
fs
push
inc
scas
inc
outs
gs
leave
pop
fwait
(bad)
int3
sahf
jbe
ins
push
xchg
(bad)
xor
(bad)
cmps
dec
sub
mov
inc
sbb
mov
cmps
add
push
jp
xchg
push
test
cmp
xchg
ss
mov
dec
nop
mov
inc
lods
lea
lock
loope
adc
test
inc
pop
pushf
xchg
clc
sbb
pop
sbb
test
iret
cdq
jo
int3
jbe
adc
test
pop
data16
gs
mov
mov
jl
mov
xor
mov
mov
bound
jecxz
inc
sbb
jmp
mov
sbb
mov
and
les
mov
loope
dec
ret
paddusb
add
xchg
add
pop
stc
push
adc
inc
fs
in
jnp
out
(bad)
fild
arpl
cmp
(bad)
xchg
fwait
ins
mov
int3
sub
and
shr
xchg
sub
jge
test
test
fwait
xchg
nop
adc
stos
adc
cld
int3
into
and
jle
mov
ins
ret
sub
movs
imul
mov
xchg
or
enter
enter
mov
das
mov
push
and
xchg
xor
xlat
xor
dec
les
pop
neg
jb
or
mov
xchg
cmp
inc
xor
fnstsw
and
cmp
and
adc
mov
cmp
push
and
lods
repnz
stos
fsub
aas
outs
mov
int3
repz
fs
aas
out
pushf
sub
jae
mov
retf
sub
dec
push
jle
daa
mov
jns
pop
ficomp
ficom
ins
scas
fistp
add
mov
sbb
mov
add
adc
test
jge
inc
clc
leave
xlat
mov
sub
mov
xchg
jmp
pop
lea
(bad)
mov
pop
icebp
jle
call
push
cdq
fucom
add
movs
ins
sub
adc
xchg
shl
lds
mov
push
xchg
mov
jno
jecxz
dec
cmp
fidivr
(bad)
inc
jbe
xor
mov
retf
enter
pop
jle
(bad)
idiv
stos
pop
xor
out
ret
dec
xor
lock
inc
jmp
or
pop
cli
xor
xchg
mov
pop
inc
out
adc
pop
lock
cld
xor
pop
addr16
jo
jae
loope
cdq
and
sti
int
dec
movs
jno
xor
ss
push
push
fmul
inc
mov
cmp
(bad)
jmp
test
movs
dec
(bad)
in
pop
sbb
pop
sbb
mov
das
pop
or
pop
push
sbb
sub
mov
cmp
and
mov
dec
sub
and
fcmovne
mov
fstp
jge
inc
xchg
jno
adc
jnp
dec
fs
in
jno
mov
idiv
pusha
sub
test
mov
jle
imul
outs
dec
jle
and
jl
mov
and
cld
adc
in
cmp
push
or
sbb
addr16
jne
mov
cmp
push
into
sub
(bad)
xor
xor
mov
(bad)
xor
xor
sub
rol
mov
push
jg
push
push
mov
call
popf
xchg
jl
or
dec
cmp
nop
popf
adc
jbe
push
outs
std
test
imul
pusha
cmp
jg
or
mov
mov
jmp
cmc
sub
lods
push
cmp
xor
xchg
fwait
gs
out
jno
in
fidivr
scas
mov
lock
cmp
pop
sub
ja
cld
fsub
fadd
int
adc
cld
dec
pop
sub
or
sbb
mov
and
cwde
adc
loope
mov
and
jbe
in
fcomp
push
adc
ja
push
data16
push
xchg
cdq
cmps
inc
inc
inc
xor
mov
and
aas
xor
les
stos
(bad)
xchg
and
or
jo
push
sbb
jmp
outs
fiadd
sbb
or
shl
ja
sti
fcom
into
(bad)
fbstp
jnp
xor
outs
xor
mov
pop
add
xchg
xchg
pop
repnz
or
outs
ret
fcomp
push
xchg
xchg
loope
or
xchg
retf
call
movs
in
dec
repz
cmps
je
push
mov
dec
bound
xor
dec
cs
addr16
or
push
test
sbb
sub
cld
dec
stc
mov
ja
pop
je
nop
repz
mov
(bad)
enter
daa
pushf
loop
sbb
push
(bad)
les
inc
pusha
stos
mov
clc
not
adc
sahf
lea
xchg
jl
scas
loop
sbb
mov
std
dec
cwde
adc
jle
cwde
ins
adc
(bad)
imul
add
stc
mov
sub
cmp
nop
dec
pop
int
icebp
jns
pop
lods
lods
xchg
cmc
jbe
test
adc
outs
out
cmp
jle
in
push
cmp
out
pop
dec
adc
lea
daa
adc
repz
fcom
fbld
mov
pop
sub
out
fadd
test
(bad)
lahf
scas
pop
test
pop
dec
iret
inc
jbe
sbb
inc
out
cld
mov
xor
push
iret
jmp
dec
std
fcmove
aas
mov
sub
call
jae
inc
sub
inc
dec
loope
push
test
bound
gs
shl
pop
hlt
mov
hlt
jb
movs
shl
add
mov
dec
lods
fadd
pop
dec
xchg
(bad)
aas
mov
push
xlat
repz
xor
and
mov
add
add
(bad)
ret
jae
xchg
lea
aad
je
int3
inc
es
les
xor
add
push
mov
test
jg
or
pop
les
add
or
or
jl
sbb
jbe
inc
fstp
fsub
mov
mov
sbb
mov
repnz
(bad)
aaa
push
popf
push
pusha
or
daa
xchg
push
jp
xchg
xor
std
inc
stos
test
and
das
sub
rcl
push
stos
ins
cmp
or
push
test
int3
or
rcr
jnp
outs
pop
sahf
sbb
xor
popf
in
in
pop
shl
mov
ds
xchg
pop
jp
push
and
push
inc
test
lds
push
mov
and
xchg
jp
xchg
ret
out
int3
hlt
popf
setle
fidiv
(bad)
in
fnstenv
mov
mov
hlt
push
pop
adc
outs
sub
popa
push
sub
sbb
cwde
lods
sbb
in
mov
push
test
addr16
and
fist
push
mov
jae
add
lods
mov
aad
or
xchg
std
mov
ror
iret
repz
stos
xor
mov
pop
mov
in
add
or
mov
mov
mov
bound
fldcw
jmp
jmp
mov
mov
push
mov
inc
outs
jne
fs
adc
and
retf
xor
mov
jo
scas
mov
ret
dec
pop
mov
xor
inc
inc
idiv
cmp
shr
icebp
push
stos
sbb
leave
sub
push
sbb
leave
xor
movs
daa
daa
xor
das
sahf
xchg
cmps
cmps
mov
shl
retf
and
cmps
pusha
out
in
int3
mov
lods
mov
lods
popf
and
mov
loopne
mov
sub
pusha
jge
push
push
fsubrp
jge
mov
jl
inc
push
sub
call
mov
out
addr16
shl
and
adc
inc
in
inc
sub
outs
fistp
dec
push
in
and
or
jbe
push
sub
stos
sbb
fist
(bad)
cld
or
nop
pop
push
and
jo
mov
sub
out
nop
or
popf
out
pop
or
retf
rcr
pop
lods
xchg
jmp
shl
ret
and
pop
xchg
sub
add
stc
add
mov
add
inc
lods
inc
out
imul
ds
and
dec
cmp
ins
sahf
dec
ins
mov
jno
fdivr
mov
loop
pop
or
in
adc
std
inc
sti
or
fwait
or
adc
imul
icebp
and
xchg
jo
imul
sahf
into
sub
push
xchg
call
aad
addr16
push
fiadd
jnp
inc
pop
mov
dec
daa
scas
adc
push
icebp
pop
xchg
cmc
ret
adc
cmp
repz
das
xor
sbb
xor
retf
scas
xchg
in
int3
and
ja
addr16
call
mov
push
push
outs
ja
in
jge
jl
xchg
sub
mov
mov
lock
div
data16
adc
jo
mov
pop
push
pushf
cli
jle
shl
mov
call
add
inc
aaa
(bad)
into
cs
xchg
ficomp
and
cmp
hlt
adc
(bad)
or
pop
das
jne
push
mov
add
imul
dec
call
push
cmp
adc
sub
mov
xor
xchg
jne
push
aad
fs
cmc
pop
sti
out
fidivr
shl
xchg
aam
add
daa
stos
scas
lea
ss
sub
ds
jecxz
cdq
or
ds
dec
popf
add
cmp
adc
pop
xor
fadd
xchg
or
jecxz
mov
xlat
in
dec
jnp
xor
sub
test
pop
test
stos
scas
pop
daa
sub
addr16
cmp
mov
fld
push
(bad)
add
jl
les
retf
sbb
sub
jle
int3
inc
idiv
popf
out
xchg
cmp
loopne
mov
add
icebp
repz
sub
sar
fimul
mov
lahf
and
mov
sar
mov
dec
adc
sub
cmp
addr16
xlat
popf
and
repnz
adc
mov
xor
adc
idiv
repz
(bad)
push
sub
cmp
fsub
mov
sbb
lea
shr
les
mov
ret
mov
stos
loopne
push
(bad)
jle
retf
mov
pop
jecxz
mov
sbb
data16
or
cmp
push
sbb
mov
(bad)
mov
rcl
dec
push
mov
int3
cmovns
dec
cs
dec
ins
xor
pusha
pusha
adc
and
hlt
sbb
sbb
call
inc
(bad)
push
inc
cmp
xlat
mov
push
mov
jns
in
cmps
sub
sbb
push
rcl
adc
and
mov
mov
xchg
mov
fadd
and
add
repnz
pop
mov
jae
jo
mov
cmp
dec
xchg
sub
inc
adc
inc
shl
push
fisubr
(bad)
mov
adc
lock
ret
or
or
repz
mov
pop
xor
dec
cwde
pusha
cwde
dec
push
movs
mov
or
mov
pop
dec
mov
cmc
add
int3
xchg
adc
cmc
pusha
clc
sub
aaa
jp
inc
push
mov
lea
xchg
cmps
add
je
out
sub
and
stos
mov
in
jo
xchg
mov
cmp
bound
leave
jle
retf
test
push
nop
add
xchg
sbb
cmovg
movs
sahf
push
in
jns
sub
xchg
sbb
xor
adc
lea
(bad)
popa
les
and
adc
inc
data16
ret
sti
xchg
test
mov
je
cmc
add
xchg
stc
mov
jb
jnp
call
mov
test
xor
or
add
or
or
inc
loope
inc
fwait
mov
test
pop
(bad)
push
dec
stos
out
push
fistp
loop
add
sub
test
fiadd
xor
xchg
mov
jg
in
cmps
popa
dec
clc
pop
call
inc
jmp
sahf
outs
fstp
add
lods
stos
and
cmp
scas
adc
sti
and
jp
cmp
cli
ficomp
loope
cdq
pop
cmp
cmps
std
mov
sbb
xchg
inc
inc
push
leave
sbb
ins
iret
aam
cmp
mov
push
fistp
(bad)
in
retf
int
dec
push
stos
arpl
daa
cmps
js
in
xchg
sbb
jecxz
ficomp
dec
and
and
xchg
xchg
aad
adc
ds
loope
and
pop
ficomp
ror
shl
mov
cmp
in
iret
push
mov
(bad)
int
(bad)
fwait
ss
je
inc
mov
or
sar
cmp
jnp
out
mov
mov
sbb
mov
ins
cmc
test
or
and
mov
xor
in
add
into
inc
outs
pop
adc
cmc
mov
scas
into
jae
sub
fcom
cmp
dec
push
addr16
shl
inc
and
ret
mov
lock
push
jle
ja
iret
pusha
jle
ja
mov
xchg
pop
fstp
pop
mov
out
popf
xor
xchg
cmp
inc
inc
jae
rcr
push
dec
and
push
repz
shr
xchg
scas
adc
fsubrp
cmps
inc
in
jg
mov
popa
(bad)
gs
clc
fwait
gs
sub
sub
adc
data16
ds
sub
mov
(bad)
ret
xor
pushw
fst
lods
dec
cmps
nop
cmps
(bad)
aam
lock
add
into
or
push
mov
inc
fisttp
stos
and
pusha
enter
shl
or
adc
mov
bnd
add
aas
pop
rcr
retf
ins
(bad)
adc
jmp
aas
or
xor
jmp
dec
mov
inc
shl
das
adc
test
(bad)
and
cli
adc
push
mov
scas
sub
push
retf
mov
movs
add
in
jl
xor
xchg
add
and
repz
inc
push
and
in
mov
xor
or
inc
pop
out
int3
sbb
add
add
add
add
in
pushf
and
sar
xor
push
cmp
jne
inc
inc
push
push
push
add
push
push
push
add
push
push
mov
nop
nop
nop
nop
nop
push
push
push
push
sub
mov
mov
mov
mov
lea
mov
mov
movzx
mov
shl
mov
dec
mov
movzx
shl
dec
mov
mov
movzx
mov
mov
mov
mov
mov
mov
mov
mov
mov
movzx
add
shl
lea
cmp
jae
mov
mov
add
loop
mov
xor
mov
mov
add
mov
xor
cmp
je
movzx
shl
inc
inc
or
cmp
jle
mov
cmp
jae
mov
and
mov
mov
shl
mov
add
cmp
lea
ja
cmp
je
shl
movzx
shl
inc
or
mov
mov
shr
movzx
imul
cmp
jae
mov
mov
sub
mov
sar
mov
lea
movzx
mov
mov
and
mov
shl
mov
sub
sar
add
imul
cmp
lea
mov
jle
mov
sub
mov
movzx
mov
shl
mov
lea
mov
and
cmp
lea
mov
lea
ja
cmp
je
shl
movzx
shl
inc
or
mov
mov
shr
movzx
imul
cmp
jae
mov
mov
sub
mov
sar
cmp
lea
mov
je
jmp
sub
sub
mov
lea
shr
sub
cmp
mov
je
cmp
jle
jmp
cmp
jg
lea
mov
add
cmp
ja
cmp
je
shl
movzx
shl
inc
or
mov
mov
shr
movzx
imul
cmp
jae
mov
mov
sub
mov
sar
lea
mov
jmp
sub
sub
mov
lea
shr
sub
mov
jmp
mov
mov
mov
mov
mov
inc
cmp
mov
jg
mov
jmp
cmp
jg
sub
jmp
sub
jmp
mov
sub
mov
sub
mov
shr
sub
cmp
mov
mov
lea
mov
ja
cmp
je
movzx
shl
shl
inc
or
mov
mov
shr
mov
movzx
imul
cmp
jae
mov
mov
sub
mov
sar
mov
lea
mov
mov
mov
mov
mov
mov
mov
xor
cmp
setg
add
lea
mov
jmp
mov
sub
sub
mov
shr
mov
sub
cmp
mov
ja
cmp
je
movzx
shl
shl
inc
or
mov
mov
shr
mov
movzx
imul
cmp
jae
mov
mov
sub
mov
mov
sar
lea
mov
mov
mov
mov
shl
add
cmp
lea
ja
cmp
je
movzx
shl
shl
inc
or
mov
mov
shr
movzx
imul
cmp
jae
sub
sar
mov
mov
cmp
lea
mov
je
xor
cmp
mov
mov
setg
lea
mov
mov
sub
mov
mov
mov
inc
mov
jmp
sub
sub
mov
shr
sub
mov
jmp
mov
sub
shr
mov
sub
sub
cmp
mov
ja
cmp
je
movzx
shl
shl
inc
or
mov
mov
shr
mov
movzx
imul
cmp
jae
mov
mov
sub
mov
sar
lea
mov
mov
jmp
mov
sub
sub
mov
shr
sub
mov
cmp
mov
ja
cmp
je
movzx
shl
shl
inc
or
mov
mov
shr
mov
movzx
imul
cmp
jae
mov
mov
sub
mov
sar
lea
mov
mov
jmp
mov
sub
sub
mov
shr
sub
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
xor
cmp
mov
setg
add
lea
mov
cmp
ja
cmp
je
movzx
shl
shl
inc
or
mov
mov
shr
movzx
imul
cmp
jae
mov
mov
sub
shl
sar
mov
lea
mov
mov
lea
mov
jmp
sub
sub
mov
shr
sub
cmp
mov
ja
cmp
je
movzx
shl
shl
inc
or
mov
mov
shr
movzx
imul
cmp
jae
mov
mov
sub
shl
sar
mov
lea
mov
mov
lea
mov
mov
jmp
sub
sub
mov
mov
shr
mov
sub
mov
mov
add
mov
mov
mov
mov
lea
mov
add
cmp
ja
cmp
je
shl
movzx
shl
inc
or
mov
mov
shr
movzx
imul
cmp
jae
mov
mov
sub
sar
lea
mov
mov
jmp
sub
sub
mov
shr
sub
mov
lea
mov
dec
mov
jne
mov
mov
shl
sub
add
cmp
mov
jg
add
cmp
mov
jle
mov
mov
shl
mov
lea
mov
mov
lea
mov
add
cmp
ja
cmp
je
shl
movzx
shl
inc
or
mov
mov
shr
movzx
imul
cmp
jae
mov
mov
sub
sar
lea
mov
mov
jmp
sub
sub
mov
shr
sub
lea
mov
mov
dec
mov
jne
lea
cmp
mov
jle
mov
mov
sar
and
lea
or
cmp
mov
jg
mov
shl
add
mov
lea
sub
add
mov
jmp
lea
cmp
ja
cmp
je
shl
movzx
shl
inc
or
shr
add
cmp
jb
sub
or
dec
jne
mov
shl
mov
add
mov
mov
mov
mov
mov
add
mov
add
cmp
ja
cmp
je
shl
movzx
shl
inc
or
mov
mov
shr
movzx
imul
cmp
jae
mov
mov
sub
sar
lea
mov
mov
jmp
sub
sub
mov
shr
sub
mov
mov
mov
inc
or
mov
shl
dec
mov
jne
mov
inc
mov
je
mov
mov
add
cmp
ja
mov
mov
sub
add
lea
mov
inc
mov
mov
inc
inc
dec
je
mov
cmp
jb
jmp
mov
cmp
jb
cmp
ja
cmp
mov
je
jmp
mov
jmp
inc
sub
xor
mov
mov
mov
mov
mov
add
pop
pop
pop
pop
add
add
xor
lea
mov
push
cmp
jne
mov
xor
pop
mov
mov
jmp
mov
add
cmp
jb
cmp
ja
cmp
je
sub
cmp
ja
cmp
jne
mov
shr
rol
xchg
sub
add
mov
add
sub
mov
add
loop
sub
jg
lea
mov
or
je
mov
lea
add
push
add
call
xchg
mov
inc
or
je
mov
jns
movzx
inc
push
inc
mov
push
call
or
je
mov
add
jmp
call
mov
lea
mov
push
push
push
push
push
call
lea
and
and
pop
push
push
push
push
push
call
pop
popa
lea
push
cmp
jne
sub
jmp
add
dec
add
add
call
dec
add
add
