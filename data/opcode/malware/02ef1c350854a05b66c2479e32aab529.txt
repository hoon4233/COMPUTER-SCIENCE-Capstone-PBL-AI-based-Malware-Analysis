jnp
and
xor
jne
or
pushf
retf
mov
(bad)
sbb
out
mov
leave
test
in
push
lds
sahf
je
xchg
out
jl
mov
sub
scas
imul
dec
inc
sti
add
mov
int3
pop
jne
aaa
pop
fs
mov
cmp
jp
and
retf
sbb
xchg
inc
push
sbb
push
adc
xchg
scas
nop
mov
fild
and
test
loopne
mov
xor
cmc
inc
add
out
sbb
lahf
pop
xor
push
sub
call
(bad)
fisubr
pop
repnz
or
pop
sbb
and
and
icebp
test
push
js
inc
leave
mov
and
mov
pushf
dec
xor
test
add
xchg
(bad)
mov
sbb
pop
push
jno
int3
add
loopne
add
fisub
xchg
inc
jno
test
fwait
mov
mov
out
mov
(bad)
mov
cmp
sbb
mov
loope
jbe
out
xor
loopne
adc
out
mov
jns
out
push
lods
sbb
outs
xchg
sbb
setb
mov
inc
jb
fild
(bad)
popa
xchg
(bad)
adc
test
into
popa
sbb
xor
xor
out
int3
push
fbld
cmp
jb
ror
in
jns
mov
sbb
lds
mov
call
sbb
fwait
shl
sub
pop
cmp
les
xchg
test
fisub
retf
mov
sub
lahf
pop
fstp
movsx
pop
(bad)
dec
cmp
sbb
repz
mov
ins
test
mov
jmp
mov
shl
sub
outs
adc
call
add
pop
dec
mov
dec
ds
mov
cmp
popa
mov
xchg
loope
pop
retf
or
rol
cld
inc
ficomp
push
js
adc
mov
aad
mov
jae
scas
push
loop
bound
test
(bad)
lea
adc
cwde
xchg
pushf
out
mov
in
sub
push
or
repz
sub
xor
sbb
mov
add
and
dec
xchg
daa
pop
pop
and
es
ss
aaa
repnz
cmp
mov
xchg
test
dec
cmp
(bad)
repz
mov
pop
(bad)
movs
stc
push
cmp
pop
cld
mov
adc
sbb
xchg
xchg
sbb
enter
lods
or
fisttp
push
pop
mov
push
ds
pop
clc
imul
sub
ins
pop
jo
add
sub
xchg
scas
adc
xlat
call
lds
pop
(bad)
cmp
sahf
nop
push
add
pusha
loopne
repnz
pop
in
sub
push
sbb
lods
les
out
in
or
clc
aam
ret
inc
std
cmp
push
test
into
pop
jmp
mov
sbb
and
int
jmp
retf
cmp
mov
mov
sbb
push
jl
add
or
or
and
push
sub
and
fdivr
and
or
mov
adc
out
cmp
and
outs
xchg
or
or
push
mov
fmul
add
lods
test
push
add
pushf
sahf
inc
inc
xor
call
push
mov
scas
test
outs
jmp
push
arpl
xchg
fstp
js
and
jnp
movs
(bad)
mov
fcom
add
div
push
cmp
loop
jmp
sahf
cld
or
adc
xchg
xor
inc
stos
push
sbb
pop
(bad)
lahf
mov
jmp
pop
push
jge
(bad)
pop
popf
fstp
or
(bad)
push
pop
pushf
adc
call
xor
adc
pop
inc
adc
enter
sub
int3
or
push
cwde
loope
inc
xor
mov
and
imul
nop
scas
add
test
mov
add
adc
mov
leave
arpl
ret
add
adc
sbb
shr
mov
mov
jno
loop
push
dec
repz
and
cwde
cdq
xchg
jmp
call
jnp
rcr
xor
mov
movs
out
sub
xchg
push
cmp
(bad)
(bad)
nop
sub
sar
ret
add
cmc
retf
and
push
jge
enter
pop
push
mov
cmps
aad
push
ficomp
add
stc
aas
pop
adc
inc
mov
adc
push
cmp
int3
loope
pop
jne
movs
xchg
mov
inc
lods
inc
pop
mov
cmp
les
arpl
mov
sub
dec
cmp
hlt
(bad)
xor
or
mov
and
mov
mov
mov
xchg
sub
add
xor
sti
stc
pop
and
pop
mov
pop
dec
fadd
cwde
cli
cmps
sbb
outs
pop
jo
call
mov
sbb
push
mov
(bad)
jg
loopne
pop
enter
loopne
int3
bnd
xor
mov
add
in
shl
mov
cmp
and
or
stos
adc
fs
imul
mov
test
adc
fcmovbe
xor
jge
and
int
xchg
add
or
iret
mov
push
cmps
adc
xor
pop
in
cmp
sub
inc
jle
jns
push
pop
scas
sub
add
jg
mov
je
pusha
stos
ds
and
cld
lea
adc
das
add
scas
ins
scas
sbb
ds
imul
je
mov
dec
push
jge
adc
cmp
pop
mov
xchg
push
dec
mov
js
das
or
inc
jns
inc
mov
dec
daa
push
inc
sub
xor
into
and
dec
ja
call
imul
push
cmp
mov
add
dec
mov
dec
push
je
jnp
je
inc
bound
jbe
push
out
pop
pop
add
in
mov
or
int
cld
push
sub
cmp
inc
pop
mov
push
push
pop
jnp
outs
sub
fwait
xchg
jmp
jb
test
push
retf
or
mov
cmps
repz
mov
pop
inc
push
xchg
stos
or
and
jnp
push
daa
push
inc
push
sahf
inc
iret
push
inc
jg
retf
dec
in
je
repnz
mov
sahf
pop
mov
sahf
pop
mov
sahf
pop
mov
sahf
pop
mov
sahf
pop
mov
sahf
pop
mov
sahf
pop
mov
sahf
pop
mov
sahf
pop
mov
sahf
pop
mov
sahf
pop
mov
sahf
pop
mov
sahf
pop
mov
sahf
pop
mov
sahf
pop
mov
sahf
pop
mov
sahf
pop
mov
sahf
pop
mov
sahf
pop
mov
sahf
pop
mov
sahf
pop
mov
sahf
pop
mov
sahf
pop
mov
sahf
pop
mov
sahf
pop
mov
sahf
pop
mov
sahf
pop
mov
sahf
pop
mov
sahf
pop
mov
sahf
pop
mov
sahf
pop
mov
sahf
pop
mov
sahf
pop
mov
sahf
pop
mov
sahf
pop
mov
sahf
pop
mov
sahf
pop
mov
sahf
pop
mov
sahf
pop
mov
sahf
pop
mov
sahf
pop
mov
sahf
pop
