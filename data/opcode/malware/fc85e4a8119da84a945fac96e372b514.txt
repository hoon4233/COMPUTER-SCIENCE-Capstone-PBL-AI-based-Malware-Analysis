mov
adc
add
inc
outs
outs
ins
gs
outs
add
or
add
(bad)
jmp
add
jb
gs
push
jns
je
ins
add
xor
or
jae
jge
(bad)
inc
push
push
xor
push
or
out
in
das
add
push
push
outs
out
inc
(bad)
je
cmp
(bad)
jg
aaa
ins
popa
ins
ins
std
stos
int3
mov
cmp
mov
gs
xor
fisub
cmp
das
add
jns
retf
(bad)
fidiv
shr
push
int3
fs
call
inc
popa
imul
add
fbstp
sti
mov
imul
adc
mov
add
cmp
push
push
call
xchg
lods
inc
mov
or
je
jbe
imul
ss
loope
add
sbb
ss
pop
inc
adc
push
mov
fcomip
add
fs
mov
inc
outs
jne
jge
push
sahf
add
out
ins
jo
aas
aam
repz
addr16
jne
jb
arpl
daa
call
fdivrp
call
jb
fdivr
out
or
repnz
ja
xor
adc
push
imul
sub
or
add
daa
jg
adc
jmp
pop
pop
add
jle
inc
mov
addr16
or
or
rcl
popf
mov
ins
push
daa
mov
loopne
loopne
or
daa
mov
hlt
es
push
popa
push
popa
fdivr
adc
push
inc
imul
addr16
fistp
adc
push
inc
ins
popa
jae
mov
daa
xor
pop
mov
dec
dec
inc
push
push
dec
push
dec
cs
add
adc
loope
cmp
cmp
xor
int3
sbb
push
fdiv
fbstp
add
sbb
(bad)
sub
mov
pop
push
outs
jo
inc
jno
(bad)
imul
fist
inc
fiadd
gs
add
sbb
mov
in
les
nop
gs
fiadd
push
loop
inc
sbb
enter
fcom
sub
jbe
sti
add
and
rol
fild
add
mov
arpl
push
mov
inc
in
or
cld
push
cmp
call
imul
jmp
cmp
nop
fistp
ss
andps
js
pusha
jecxz
adc
dec
push
bound
ja
push
sbb
pusha
and
adc
lods
dec
data16
je
jo
addr16
sbb
ins
inc
mov
loopne
adc
pop
cmp
loopne
nop
adc
mov
outs
aad
or
jne
in
jl
push
sub
imul
out
mov
dec
fs
aad
mov
add
retf
ss
pop
push
daa
jns
ins
sbb
mov
jns
xor
cmp
xlat
jb
inc
sahf
stos
(bad)
dec
outs
ins
pusha
push
sub
jnp
mov
cmp
jecxz
jbe
mov
adc
ins
pop
sbb
mov
pusha
add
sbb
or
xor
loopne
sub
repz
dec
cmp
adc
rol
inc
or
mov
bnd
iret
inc
aam
push
inc
cmp
dec
sahf
out
push
xchg
inc
mov
and
push
cmp
sbb
cmp
sahf
mov
out
sub
in
leave
repz
lods
ficom
sbb
inc
dec
add
(bad)
js
jmp
retf
xchg
pop
clc
push
push
stc
jmp
call
sti
dec
cld
dec
pop
dec
dec
add
push
pop
(bad)
pop
test
dec
inc
call
arpl
sbb
xlat
je
inc
add
test
push
gs
data16
push
aaa
and
or
inc
push
std
out
sub
and
inc
imul
and
sub
mov
push
jae
outs
arpl
imul
mov
or
jb
jo
push
adc
xor
mov
pop
nop
fistp
push
sbb
inc
xor
xchg
cmp
nop
mov
mov
repnz
mov
cmp
or
dec
jae
add
add
ud1
jno
add
push
popa
pop
mov
jno
sbb
inc
nop
xchg
outs
ret
js
lods
ds
fcomp
push
imul
sbb
cmp
add
pusha
inc
test
push
outs
ins
pop
fcmovnb
xor
push
inc
add
pop
cmp
ja
add
or
jb
push
jb
shr
adc
in
xchg
mov
mov
or
mov
and
pop
mov
in
cmp
push
out
xor
gs
push
pop
mov
inc
outs
ins
jns
add
inc
add
jb
mov
in
or
out
add
or
mov
inc
adc
(bad)
lea
(bad)
jecxz
test
dec
mov
nop
adc
sbb
xor
xchg
adc
adc
xor
push
ror
xor
jp
add
push
arpl
xor
push
lods
movs
add
lahf
adc
jnp
lock
adc
or
lock
or
outs
mov
xchg
pop
pop
jo
and
popa
pop
pop
adc
gs
mov
js
pop
icebp
or
outs
outs
bound
call
or
sbb
or
or
mov
add
jne
rol
js
out
pusha
inc
or
mov
jb
inc
cmp
fisubr
sar
jl
je
push
mov
fsub
lock
aas
jecxz
(bad)
xor
xor
fs
jge
pop
jle
adc
dec
gs
and
push
add
or
pop
popa
test
out
daa
test
rep
jns
iret
xor
ins
ret
or
pop
out
and
mov
adc
sub
das
adc
ja
nop
pop
aas
adc
inc
fist
push
inc
sti
in
(bad)
fwait
jne
ins
inc
je
bound
mov
loopne
fild
sub
and
mov
or
in
adc
inc
or
and
js
xor
pusha
pop
ds
shr
and
adc
ins
outs
add
xchg
lods
in
mov
pop
sub
xor
inc
mov
in
jle
push
mov
out
aas
jle
jg
(bad)
cmovs
inc
inc
dec
sub
fs
push
and
sub
cmp
cmc
xchg
repnz
push
pop
mov
pushf
adc
adc
or
pop
sbb
jle
pop
mov
shl
movs
xchg
add
or
mov
or
outs
jne
push
data16
add
mov
and
dec
adc
mov
add
xchg
inc
jmp
jo
ss
int3
push
cmps
pop
push
gs
idiv
or
clc
push
jl
repz
xchg
add
and
push
pop
cmp
adc
sbb
push
fsub
add
cmp
pop
pushf
sub
push
gs
sbb
sbb
sbb
or
jecxz
imul
or
sbb
jmp
pop
sbb
fsub
aam
pushf
sub
popa
sub
lods
sub
dec
push
pop
adc
nop
or
jno
dec
pop
xor
dec
adc
xlat
jno
lods
sbb
pop
aas
xchg
ret
pop
adc
push
aam
adc
das
or
in
cmps
jecxz
fsub
ins
das
pop
push
inc
inc
enter
push
fdivr
xor
xor
cmc
scas
mov
cmp
std
sub
mov
xchg
lods
adc
repz
pop
scas
push
mov
loopne
push
push
xchg
aad
push
hlt
and
test
push
xchg
lods
jno
das
and
push
cmc
jnp
mov
lock
es
push
dec
xlat
xor
imul
pop
pop
aas
ins
mov
push
push
push
ret
in
inc
ret
inc
mov
cmps
cmp
push
push
popa
das
add
ja
lahf
xchg
loop
dec
cmps
ror
adc
jae
inc
add
in
js
popa
or
add
or
or
and
nop
int3
push
ins
sbb
daa
add
or
loopne
outs
fsubr
cs
sub
arpl
je
sbb
es
ja
dec
in
call
cmps
cmp
jb
pop
push
cmp
pop
and
add
push
mov
adc
pop
add
aam
scas
or
sbb
mov
sub
push
loopne
add
fadd
sub
repnz
mov
or
xchg
mov
shl
inc
xor
cmp
fild
fldcw
xor
data16
jo
adc
sbb
lods
arpl
add
nop
add
cwde
xor
mov
test
cmc
jne
push
outs
imul
and
outs
ja
lods
jge
sbb
frstor
dec
jnp
dec
int3
push
and
ins
add
sub
or
sub
mov
mov
sbb
call
shl
xchg
fwait
sbb
xchg
jne
pop
iret
imul
sub
and
test
adc
pop
adc
shr
xchg
push
sub
mov
dec
loopne
repz
imul
(bad)
ins
stos
adc
push
adc
movs
cmp
or
lock
mov
sbb
outs
add
adc
sub
sub
in
mov
jnp
dec
push
adc
outs
add
rcr
pop
cmp
mov
push
inc
jns
dec
xchg
dec
sub
adc
loopne
jp
adc
pop
dec
sub
cmps
sbb
adc
push
adc
mov
sbb
cmps
dec
lock
or
cmp
int3
mov
loop
cmc
clc
daa
push
adc
(bad)
into
test
test
dec
lahf
dec
adc
lods
add
in
vaddps
jmp
push
test
fisttp
imul
jo
es
daa
jg
rol
sbb
(bad)
fsubr
outs
imul
adc
push
pop
lea
fld
das
outs
or
push
hlt
jo
in
ss
clc
(bad)
in
enter
popa
and
in
or
mov
pop
push
call
xchg
mov
push
aaa
shl
in
aas
movs
in
mov
push
cs
pop
push
inc
inc
in
loop
add
enter
mov
mov
imul
cs
popa
int
or
jecxz
je
xchg
mov
add
jle
mov
inc
fiadd
xor
push
test
daa
daa
and
xor
fwait
std
enter
pop
xor
and
in
leave
test
dec
xor
repnz
aaa
mov
cmp
xchg
neg
dec
jb
repnz
and
movs
cmp
jns
test
mov
cmp
dec
dec
inc
pop
pushf
jmp
aas
sete
or
mov
fisubr
aas
dec
dec
dec
inc
data16
xchg
daa
and
leave
enter
inc
call
test
inc
jae
mov
cmps
mov
mov
add
cmps
les
and
push
in
dec
outs
adc
mov
pop
cmp
dec
sahf
fwait
dec
int
pop
fidiv
dec
sub
lock
or
or
xor
lods
and
add
outs
sar
fcomp
jecxz
lock
ficomp
add
inc
ins
ins
outs
arpl
add
sub
jl
lahf
mov
add
push
outs
and
xor
add
mov
jle
outs
dec
ins
ror
or
adc
xchg
pop
pushf
(bad)
test
add
inc
sahf
sub
popa
adc
add
rol
arpl
or
inc
imul
pop
jnp
dec
fucomi
inc
cs
ret
(bad)
in
add
test
fwait
or
ret
push
leave
inc
shr
clc
sub
mov
clc
inc
leave
mov
adc
in
inc
test
and
lods
in
adc
out
test
and
out
sub
and
push
leave
inc
repnz
loopne
fs
mov
loopne
enter
sbb
add
cmovo
pop
leave
test
push
adc
push
inc
add
bound
fs
mov
inc
dec
mov
xor
dec
data16
inc
jns
add
or
xor
pop
xor
xor
das
cdq
or
pushf
ss
das
inc
ss
inc
add
pop
mov
push
cmp
pop
shl
mov
inc
gs
int3
neg
cmp
ins
stc
xchg
push
sbb
mov
pop
mov
and
xor
sbb
and
inc
pop
or
nop
or
cmp
cmps
cld
sub
add
aaa
movs
lds
pop
ins
and
jmp
jno
and
mov
xchg
or
inc
jmp
mov
inc
add
pop
add
inc
inc
jg
dec
add
pop
sub
add
sub
icebp
call
or
iret
int
mov
movs
int
out
inc
sar
jmp
push
outs
outs
mov
push
xor
movd
inc
dec
and
inc
idiv
add
or
out
pop
or
cmp
pop
mov
gs
adc
in
icebp
push
add
or
push
ret
or
mov
cdq
and
arpl
cmp
mov
mov
mov
ds
push
jnp
ja
bts
xchg
mov
inc
adc
push
cmp
bound
push
add
adc
adc
(bad)
stos
dec
and
pop
ret
enter
addr16
test
pop
and
fs
dec
int
or
xchg
out
pop
add
push
adc
add
aas
test
and
out
push
nop
xor
push
jo
outs
das
js
fimul
push
dec
popa
js
pop
add
or
push
loope
test
fwait
pusha
mov
jo
add
adc
adc
lods
add
add
in
into
mov
into
je
scas
arpl
dec
retf
js
in
les
sub
retf
or
enter
or
push
pop
pop
inc
mov
out
push
or
inc
es
test
cmp
stc
mov
adc
push
adc
imul
inc
xor
sbb
in
add
lock
jl
shr
lock
inc
adc
add
pop
mov
popa
add
pop
test
or
lock
or
bound
ins
cld
jp
cwde
sub
sbb
dec
fnsave
jcxz
inc
pop
inc
in
data16
mov
xlat
jns
das
adc
arpl
cmp
rol
ss
adc
mov
push
adc
adc
cmp
ret
mov
call
sbb
or
xchg
or
les
xor
fild
or
ss
popf
sbb
add
sbb
cld
outs
mov
fwait
or
add
inc
dec
sahf
xor
dec
fdiv
or
outs
adc
test
out
or
push
adc
dec
pop
leave
leave
fs
add
retf
out
lds
dec
in
and
in
popf
adc
pushf
dec
sahf
outs
cdq
pushf
jbe
dec
adc
push
and
ss
or
bnd
leave
pop
outs
sbb
out
daa
outs
dec
sbb
add
cld
sub
das
xor
dec
imul
clc
sbb
or
mov
das
sbb
(bad)
ins
dec
pop
xchg
dec
dec
gs
jno
lods
add
sbb
xchg
mov
icebp
in
pop
sub
loopne
arpl
call
pop
mov
sbb
xor
dec
mov
inc
fs
push
or
sbb
xor
adc
or
and
fist
popf
cld
xchg
add
outs
je
imul
loope
cmp
jne
jo
imul
mov
pop
push
outs
pop
or
xchg
inc
cmp
adc
or
push
outs
jae
sbb
dec
gs
add
jl
dec
or
popa
dec
stc
inc
das
adc
xor
xor
lea
or
pushw
jo
xlat
loopne
push
sub
outs
cwde
dec
add
and
mov
pop
adc
sub
pop
enter
dec
dec
fs
cmp
pusha
mov
ds
fbstp
pop
hlt
aaa
loopne
jb
inc
jne
ins
fs
jo
cs
imul
mov
outs
sbb
test
pop
test
test
ins
imul
imul
inc
fs
das
and
test
push
xchg
sbb
pop
jl
and
in
call
or
add
mov
or
cmp
jbe
ins
dec
loope
mov
sbb
pop
adc
sti
mov
ins
bound
pusha
xor
push
ss
movs
lods
in
outs
adc
push
jecxz
out
jp
scas
aas
outs
jno
retf
sbb
movs
lods
clc
cs
nop
jmp
ror
in
in
in
call
in
(bad)
aam
in
in
int3
enter
in
in
mov
in
lods
test
mov
pushf
cwde
xchg
and
in
in
mov
in
jl
je
in
in
ins
push
in
pop
pop
push
mul
in
push
sbb
push
pop
loopne
call
pop
pop
xchg
ret
sub
cld
xchg
and
add
call
nop
nop
push
adc
daa
daa
daa
adc
inc
daa
daa
daa
daa
inc
cmp
add
xchg
daa
daa
add
pop
xor
sbb
xchg
add
ds
out
mov
jg
add
mov
or
cmp
(bad)
push
inc
and
add
mov
and
mov
inc
push
ret
addr16
in
xor
sub
add
outs
and
cmp
pop
pop
push
push
add
cwde
ins
bound
(bad)
arpl
mov
popa
jae
outs
arpl
fs
or
(bad)
pop
push
push
add
stos
shl
bound
pop
cmp
cmp
jle
xor
dec
leave
imul
and
test
and
mov
pushf
pop
cmp
adc
sub
out
cs
in
mov
mov
cmpxchg
jnp
mov
add
inc
push
dec
add
inc
or
and
movs
imul
imul
push
call
fild
add
data16
sbb
cs
jp
add
sub
xor
mov
aas
inc
and
sub
nop
inc
dec
sub
xor
push
ficomp
cmp
bound
pop
cmp
icebp
call
jmp
retf
jns
fucomip
(bad)
mov
mov
jl
push
cmp
add
js
and
mov
data16
sub
ja
fdivr
dec
or
mov
add
nop
call
cmp
dec
ret
mov
mov
cld
cli
ins
add
and
jmp
mov
and
pop
lds
and
sub
sti
int
shr
adc
add
leave
and
add
xchg
ficom
add
retf
push
add
daa
test
repnz
or
fnstcw
loopne
cmp
(bad)
fld
jo
test
jne
or
adc
jle
ror
mov
cmp
dec
pop
popf
std
mov
and
sub
push
mul
sbb
or
pusha
outs
pop
js
push
push
mov
inc
lock
push
add
inc
sti
lods
sti
les
pusha
mov
pop
rol
mov
in
push
mov
fisttp
cld
icebp
sub
mov
sub
mov
jbe
retf
mov
mov
jp
jmp
sbb
fadd
mov
cmp
pusha
sti
je
jmp
adc
stc
in
cmc
aam
cld
sbb
mov
push
adc
les
fucom
add
xchg
mov
adc
mov
xor
outs
nop
dec
add
and
pop
push
mov
(bad)
mov
cld
pop
lock
or
pushf
inc
fsub
add
mov
mov
ror
pop
pop
push
(bad)
xchg
mov
mov
fcom
jae
mov
jecxz
pop
enter
or
test
jne
push
push
add
(bad)
jmp
or
cmp
fimul
push
push
lea
inc
(bad)
fst
jne
push
push
mov
cmp
jbe
inc
cmp
jmp
out
add
jmp
test
jne
mov
fimul
pop
add
fidiv
les
not
pop
nop
inc
loopne
repnz
sub
pusha
add
out
sub
fiadd
pop
rol
adc
add
cmp
jbe
jmp
mov
and
add
call
rol
cmp
fs
xor
sub
ds
cmp
jae
mov
inc
sti
ja
repnz
dec
and
jae
fdiv
jo
ins
sub
xchg
pusha
xor
push
xor
pop
aam
jo
rol
pop
or
ins
or
das
das
jle
fucomip
ja
lds
push
std
sub
add
jbe
xor
mov
iret
xchg
aaa
cwde
into
sbb
and
fcom
jmp
imul
push
ja
jmp
dec
vphaddudq
and
mov
xor
and
lea
jno
pop
mov
add
push
ja
xchg
es
test
lds
pop
ficomp
xchg
inc
adc
dec
jbe
add
add
cmp
(bad)
fidiv
or
sub
xor
add
movzx
add
cmp
ja
inc
adc
jbe
mov
cmp
dec
pop
push
mov
clc
pop
or
or
mov
add
lahf
adc
sbb
cmp
jecxz
or
jnp
lods
push
xchg
inc
and
pop
enter
out
or
(bad)
movsx
xor
mov
add
int
jnp
or
cdq
and
lea
lea
adc
push
pop
push
add
cmp
sbb
mov
test
btr
add
loope
addr16
pusha
or
adc
outs
mov
jnp
sub
lea
iret
add
jo
dec
nop
jmp
and
iret
jb
mov
xchg
(bad)
out
sti
fwait
enter
iret
sub
sub
cmp
and
inc
push
sbb
mov
enter
mov
(bad)
fdivrp
push
retf
and
lea
dec
cld
xor
das
mov
mov
icebp
sub
adc
jae
lea
imul
imul
iret
mov
addr16
out
sub
out
jecxz
xor
mov
movs
or
ins
rcr
mov
mov
xchg
shl
lock
sar
pop
xor
push
je
and
adc
sbb
push
loope
rol
or
jmp
mov
fwait
pop
ins
cmp
push
bsf
adc
cld
enter
loopne
xor
sbb
imul
mov
pop
getsec
lods
dec
mov
pop
mov
dec
mov
pop
or
cwde
pusha
outs
call
sub
jb
xchg
adc
sub
push
jb
ret
pusha
mov
xchg
or
test
fisttp
jns
sub
test
cld
iret
xchg
stos
rol
test
add
mov
jne
sub
jge
es
pop
sub
data16
mov
xor
mov
push
xor
pop
dec
cmps
loop
push
mov
xchg
inc
or
cmp
jne
psubusw
mov
iret
loopne
loop
cwde
cmps
std
(bad)
xchg
scas
jmp
mov
pop
leave
outs
xor
xchg
pop
sbb
jmp
aaa
inc
or
add
and
add
or
loop
fmul
scas
test
sub
xor
test
jne
xchg
loope
cmp
inc
fiadd
xor
ret
xchg
xchg
mov
xlat
mov
mov
je
add
cmp
aas
ret
pop
dec
clc
sub
sub
mov
xor
sub
popa
mov
hlt
mov
lahf
mov
pop
mov
add
retf
add
fmul
outs
lea
cld
cmp
xchg
fcmovnb
add
ins
push
add
cmp
mov
pop
push
pop
xor
mov
sbb
lahf
mov
dec
stos
cmp
jb
sbb
aam
retf
push
push
sbb
jb
jns
jb
js
cld
pop
mov
ret
jg
or
cld
fadd
lea
push
mov
loop
rol
add
push
jo
and
xor
sbb
mov
iret
mov
call
xchg
push
(bad)
test
mov
aad
dec
xchg
mov
add
jecxz
cmp
push
xchg
mov
cld
dec
cvttps2pi
cmp
jb
and
sub
imul
jmp
jl
les
add
mov
lea
sar
add
sub
cmp
cs
das
push
jge
inc
jg
in
cmp
cmp
pop
cld
or
lahf
push
fsubr
mov
push
mov
add
or
pop
or
pop
data16
mov
rol
xlat
jecxz
mov
mov
add
sahf
sub
add
mov
lds
mov
call
mov
mov
sbb
or
xor
jmp
dec
rol
dec
mov
push
sar
mov
ja
cmp
push
dec
(bad)
pop
mov
call
jmp
rol
sbb
fiadd
mov
push
ret
and
push
add
push
ins
fsub
cmp
lea
jl
cld
(bad)
aaa
adc
lds
add
outs
ins
pop
xchg
add
pop
sar
or
dec
iret
push
gs
push
xchg
jg
rol
add
cmp
push
loop
jle
not
cmp
add
push
lea
jecxz
mov
(bad)
lea
or
jae
(bad)
icebp
in
push
fcmovnu
out
fst
add
js
or
rcr
ja
ret
movs
mov
pop
popa
stos
std
mov
retf
xor
hlt
adc
icebp
adc
and
imul
ret
sub
add
push
jmp
push
aaa
fsubp
adc
or
mov
mov
or
outs
cld
arpl
mov
daa
sbb
hlt
jne
xor
addr16
je
mov
inc
cmp
jb
dec
add
adc
cmps
jae
rcl
and
ficomp
xchg
jmp
xchg
xor
mov
adc
inc
sbb
mov
pop
adc
sbb
jmp
sbb
stos
out
and
mov
mov
sub
test
mov
mov
xor
mov
mov
div
cwde
mov
aaa
ins
push
add
push
sub
inc
mov
add
mov
jmp
(bad)
mov
test
jne
mov
xor
xchg
rol
xchg
push
icebp
mov
ret
cmp
sub
cs
sar
rcr
mov
inc
inc
cmp
dec
mov
mov
dec
cmp
mov
xor
adc
mov
or
push
jne
mov
push
in
push
ja
mov
add
js
jae
xor
leave
mov
fistp
adc
mov
js
add
push
sti
out
xor
hlt
or
adc
test
je
adc
or
stc
add
jmp
mov
pop
pop
push
in
or
sub
cli
and
(bad)
call
sub
gs
add
and
sub
push
and
in
imul
xor
push
daa
test
daa
dec
mov
jge
adc
lea
mov
and
ja
mov
cdq
sbb
adc
add
sbb
mov
push
sbb
ins
int3
mov
pop
mov
pop
in
jb
(bad)
adc
adc
xchg
fidiv
cli
adc
sbb
jmp
mov
fidivr
jmp
movs
sub
aas
popf
dec
icebp
push
inc
sbb
mov
jns
pop
add
mov
out
jbe
loop
scas
mov
mov
adc
fwait
mov
jl
call
inc
pop
mov
cmp
jne
add
outs
aaa
mov
push
mov
and
mov
add
dec
jne
js
mov
mov
mov
(bad)
cld
mov
call
inc
sbb
lea
mov
(bad)
loopne
(bad)
sub
push
rcr
loopne
not
loopne
mov
fcomp
xor
inc
or
cmp
je
aaa
mov
das
inc
jo
clc
test
pop
clc
add
add
jge
pop
fwait
out
inc
hlt
adc
inc
add
jge
ret
rcr
or
fs
adc
pop
mov
dec
dec
inc
cdq
test
jb
mov
jne
(bad)
aas
ror
test
adc
pop
add
and
fistp
jecxz
and
add
dec
fdiv
pop
jno
jbe
ret
inc
mov
mov
jp
jb
call
xor
call
and
cdq
pop
stc
sub
xchg
das
mov
call
cmp
je
or
inc
cmp
fdivr
movq
inc
fiadd
adc
xchg
clc
test
jbe
mov
mov
test
out
dec
jne
data16
mul
stos
retf
mov
loop
cmp
add
leave
loop
push
dec
mov
mov
(bad)
mov
scas
cmp
jb
call
hlt
and
jl
cmp
or
jb
inc
push
sub
jmp
mov
sbb
pop
test
jmp
sub
addr16
mov
mov
ror
jecxz
jne
push
icebp
xchg
jmp
jg
mov
sbb
aaa
inc
adc
es
in
push
ins
inc
ficom
push
je
dec
jl
cmp
xchg
mov
xchg
neg
fistp
add
std
and
ja
sar
test
inc
aaa
add
loopne
jbe
out
jle
mov
dec
out
in
loope
xchg
xchg
jb
push
int
je
mov
(bad)
retf
ret
aaa
scas
cmp
ja
adc
cld
mov
mov
rcr
sar
pop
add
push
mov
fwait
add
mov
push
or
ja
fs
loopne
sti
xor
and
push
div
xor
inc
sub
or
div
jb
je
dec
je
jmp
in
jo
dec
push
imul
inc
mov
mov
push
jo
mov
addr16
jno
and
adc
mov
cmp
(bad)
lock
sbb
cmp
xor
lock
test
jne
sbb
lds
sub
xchg
ret
cmp
sbb
jg
shl
je
xchg
pop
pusha
imul
mov
dec
pop
adc
js
jb
inc
xor
mov
es
pusha
mov
xlat
add
jmp
aaa
add
jne
ja
pop
nop
fcmovne
je
repnz
and
repz
xor
mov
add
sbb
in
shr
mov
add
add
clc
jbe
mov
jmp
add
cmp
jne
mov
mov
inc
jg
cmp
cmps
out
ja
push
mov
inc
in
inc
lock
sbb
lea
inc
hlt
jmp
into
dec
xor
scas
inc
add
call
out
jae
mov
shr
cmp
jbe
pop
mov
lea
xlat
enter
loop
push
in
loopne
add
(bad)
lods
push
stos
cmps
call
cmp
loope
lea
add
mov
xor
out
xor
or
mov
adc
(bad)
mov
retf
imul
mov
jb
adc
adc
pop
inc
dec
mov
mov
loopne
add
cmp
adc
mov
scas
outs
test
inc
ret
mov
ret
es
pop
repz
inc
pop
adc
into
mov
mov
add
adc
mov
cmp
jne
fld
mov
or
or
ss
inc
adc
dec
adc
and
xor
xchg
mov
mov
adc
ror
fdivr
fs
add
push
imul
xchg
aaa
(bad)
idiv
xrelease
mov
mov
cmp
(bad)
cmp
xchg
pop
ja
push
or
sub
push
scas
pop
mov
adc
lahf
in
push
test
pop
sbb
pop
dec
dec
jbe
mov
adc
add
ret
mov
inc
pop
loopne
add
sbb
cmp
ret
cmp
pop
loop
pop
cmp
data16
jl
nop
xor
xor
repz
pusha
(bad)
aas
push
mov
test
je
test
je
push
mov
popa
sub
imul
add
pop
repz
jmp
bound
xor
fild
frstor
outs
out
loopne
and
bndstx
xchg
retf
aam
ret
aas
xor
dec
xor
icebp
sbb
push
or
fisub
mov
mov
shl
mov
mov
fimul
movs
jecxz
js
or
xor
cmp
or
btr
ins
inc
movzx
add
je
adc
jbe
test
pop
mov
out
push
mov
push
add
das
in
int3
xor
xchg
pop
push
xchg
xor
movs
add
pop
pop
jne
outs
jno
or
mov
lods
lea
(bad)
inc
xchg
cmp
je
cmp
ja
sub
jg
(bad)
mov
lea
or
lods
sbb
sbb
or
jb
dec
sti
(bad)
jbe
add
or
sbb
cmp
repz
inc
push
mov
mov
add
lea
adc
fld
or
in
xor
jl
pushf
sbb
ret
jle
or
sar
loopne
fld
retf
adc
jbe
adc
add
clc
xor
inc
cmc
pop
dec
push
or
cmps
mov
jmp
mov
mov
add
test
cmp
cmp
push
add
jl
mov
add
mov
out
dec
(bad)
add
adc
push
shl
outs
out
sar
and
or
and
js
or
pop
pop
test
jmp
and
and
adc
mov
pop
jmp
inc
imul
out
call
mov
xlat
ins
push
mov
inc
popf
js
out
jmp
pop
push
push
test
adc
(bad)
in
jb
or
clc
add
sbb
std
pusha
and
adc
pushf
aad
dec
jge
xchg
div
push
jle
sbb
cmp
sbb
push
cdq
outs
or
and
clc
int3
adc
dec
push
retf
add
jmp
aaa
mov
(bad)
clc
push
pop
inc
sbb
add
xor
enter
sti
sub
xchg
cmp
rdtsc
fld
sbb
add
mov
fsubrp
into
mov
add
push
mov
sub
movnti
and
out
pusha
fcomp
or
(bad)
push
stmxcsr
push
jbe
lods
loopne
cmp
sti
or
mov
or
loopne
push
add
pop
(bad)
shld
inc
fxtract
inc
dec
movs
xor
push
xor
in
push
pop
jne
add
and
mov
cmps
(bad)
adc
aaa
mov
mov
push
dec
inc
lods
sti
jg
or
mov
adc
or
fistp
enter
mov
jg
push
cld
sub
iret
jae
or
cmove
sub
sub
push
adc
and
lods
xor
add
cmps
sbb
adc
repz
cmp
and
mov
(bad)
pusha
fucomi
int3
ds
jmp
sub
sar
sub
mov
cmp
sub
arpl
xor
ins
sbb
add
outs
out
fdiv
or
cmp
dec
sar
cmps
lock
enter
or
or
addr16
adc
loopne
sbb
jns
add
punpckhdq
sbb
mov
adc
jo
retf
adc
jbe
sbb
or
xor
movs
fnsave
loope
(bad)
js
inc
push
sbb
test
outs
adc
aam
add
sbb
cdq
sbb
adc
push
dec
sbb
(bad)
bound
mov
icebp
mov
popf
fisttp
mov
(bad)
(bad)
jg
(bad)
out
outs
repz
popa
neg
add
ja
mov
jmp
not
int3
xlat
adc
(bad)
leave
lds
xchg
cs
adc
add
loop
push
pop
dec
inc
mov
inc
daa
add
cmp
mov
(bad)
or
out
ss
jmp
je
cmp
pop
cli
or
nop
push
push
loop
bound
loopne
lock
add
out
lock
adc
jae
push
push
inc
imul
adc
or
cs
push
dec
pop
jg
sub
pusha
or
repnz
or
(bad)
mov
sbb
movs
movs
fldz
fld
fstp
and
mov
jnp
or
jle
es
push
je
(bad)
fisttp
adc
fs
dec
inc
fild
out
inc
mov
ins
mov
imul
fnstcw
in
add
(bad)
add
fmul
psubusw
fld1
pop
add
sar
dec
pop
pop
call
mov
fisubr
mov
mov
pop
out
lods
jbe
pop
sahf
push
cmps
cmp
in
das
cmp
adc
adc
mov
(bad)
adc
or
int3
mov
push
push
clc
in
sbb
mov
jb
or
data16
xor
(bad)
arpl
jnp
cmp
imul
push
cmp
or
sbb
mov
mov
xor
push
sbb
dec
jne
out
mov
xchg
js
ret
ja
adc
or
adc
inc
or
adc
cmc
test
cld
or
push
test
cmp
jne
cmp
jbe
pop
push
add
dec
js
dec
es
out
adc
push
add
pushf
push
test
push
push
out
push
rcl
test
rol
ins
shl
(bad)
inc
mov
test
int
jmp
xor
shl
xchg
push
push
(bad)
mov
sbb
aam
pcmpgtd
enter
sub
adc
fsubr
mov
jae
jmp
and
movs
jnp
sub
adc
and
or
sub
jne
sub
jo
xor
or
int3
jne
pop
or
fdivrp
and
pop
mov
push
xor
or
jae
push
or
sar
lods
mov
add
outs
mov
jne
xchg
adc
cmp
imul
mov
xor
cmp
push
adc
sub
aaa
stos
push
push
add
mov
nop
lock
push
inc
sbb
out
push
xor
ret
cld
push
cwde
mov
fistp
push
xchg
mov
movs
fs
gs
dec
loope
sub
add
cmp
icebp
fld
pop
and
fs
mov
test
je
cmps
jo
dec
xor
mov
sub
inc
cmps
outs
cmp
jne
push
push
mov
dec
loope
sub
mov
cmp
jmp
inc
pop
leave
nop
sbb
mov
inc
mov
ds
fild
pushf
fidivr
dec
je
jmp
cmp
lock
sub
pop
outs
xlat
icebp
xchg
or
enter
lahf
popa
sbb
movs
movzx
nop
push
cmps
mov
stc
(bad)
mov
mov
call
(bad)
jbe
add
dec
mov
jnp
and
lea
cmp
adc
or
cmp
push
mov
clc
pop
jg
cmp
add
sub
add
aaa
jmp
pop
sbb
fucomi
pop
cmp
mov
aas
add
add
jp
pop
(bad)
mov
sbb
les
push
jecxz
dec
xor
push
mov
ja
and
(bad)
int3
pop
adc
xchg
and
sbb
xchg
not
xlat
add
mov
adc
push
xchg
jmp
pop
mov
mov
jl
ds
add
add
jg
lock
fld
fst
fst
mov
and
fstp
or
neg
sub
add
jl
add
adc
(bad)
cmp
push
mov
and
inc
lea
sahf
jne
loop
xchg
sbb
sbb
push
cmp
repz
adc
push
or
dec
mov
push
or
ret
mov
pop
test
pop
nop
xor
mov
push
add
cmp
std
pop
fdiv
add
sub
je
and
je
sti
stc
stc
js
outs
pop
je
xor
arpl
jne
xchg
daa
or
mov
jmp
sub
ja
cmp
ja
adc
rol
add
mov
dec
je
or
std
(bad)
out
push
push
neg
jle
js
pop
sub
jmp
inc
dec
jmp
mov
ror
addr16
sahf
popa
jb
mov
mov
jbe
adc
add
(bad)
mov
shl
ror
jne
mov
out
mov
clc
mov
jbe
or
rol
mov
fsubr
xchg
rcr
jo
push
enter
mov
inc
cli
jns
push
test
mov
test
push
or
push
or
push
mov
and
or
rcl
mov
rep
call
rol
mov
pop
pop
jmp
xchg
adc
pop
xor
adc
push
dec
push
push
push
mov
mov
or
loop
mov
lea
(bad)
fstp
and
mov
push
dec
fidiv
cmp
sbb
inc
out
ds
xor
bound
xor
add
test
pop
pop
and
aas
shl
nop
mov
hlt
xchg
push
mov
lock
push
scas
es
push
cld
movsx
jo
out
ret
cdq
xchg
movs
mov
inc
cld
neg
sbb
jns
das
ins
sbb
adc
jl
push
inc
push
nop
or
sbb
mov
inc
mov
lea
pusha
sub
mov
(bad)
mov
mov
lea
mov
bound
pushf
ins
sub
cmp
loopne
or
ins
jmp
jmp
ret
jmp
inc
nop
inc
sub
adc
sti
inc
xchg
add
jae
and
push
dec
loopne
cmp
(bad)
adc
cmps
loopne
pop
jle
push
ins
sub
bound
dec
sti
mov
pop
adc
sub
imul
ss
push
dec
lock
int
dec
clc
jle
int3
jge
loopne
or
mov
cld
pop
lock
and
mov
mov
add
add
jl
loope
mov
or
cld
inc
xor
call
mov
jmp
scas
pusha
dec
push
pop
clc
xchg
pushf
mov
jns
pop
into
clc
mov
jge
daa
sbb
nop
push
inc
pop
mov
fisttp
ins
retf
jle
pop
add
(bad)
icebp
adc
daa
add
mov
js
pop
mov
jne
mov
daa
sbb
xlat
inc
mov
fwait
in
test
iret
data16
pusha
push
dec
cmp
fs
(bad)
call
cld
sub
mov
mov
cmp
sub
fwait
cmps
lahf
mov
jle
faddp
add
test
or
mov
ins
add
or
daa
inc
mov
jecxz
lods
mov
mov
mov
in
sub
inc
mov
rol
mov
cmp
jae
or
pop
pop
mov
mov
pop
xchg
and
je
sbb
loopne
and
cmp
jne
dec
jne
mov
dec
out
test
or
sbb
mov
inc
or
inc
dec
jne
mov
jg
retf
(bad)
mov
add
and
icebp
push
cmps
cmp
mov
push
pushf
jl
je
test
mov
dec
mov
and
lea
fld
enter
jmp
das
into
cmp
cmp
add
popa
nop
and
cmp
push
neg
and
jge
mov
xor
mov
stc
jmp
fstp
fld
ins
int
add
fldz
and
(bad)
push
cmp
push
pushf
pop
mov
xor
push
push
popf
adc
enter
cpuid
repnz
dec
adc
div
enter
movs
jle
mov
inc
mov
movs
out
shl
xor
out
push
aas
push
fninit
fwait
lods
push
fimul
jl
and
rol
jge
mov
jg
ret
enter
jnp
ror
enter
cmp
cdq
dec
inc
out
jne
cmp
js
mov
mov
push
daa
dec
cmps
les
adc
mov
jp
arpl
add
add
jo
sbb
push
pop
fwait
ins
and
sbb
aam
fidivr
cmps
push
jg
and
outs
or
(bad)
and
mov
(bad)
in
loopne
xchg
ret
stos
fld
(bad)
mov
xor
lahf
jle
xor
jb
movs
pop
test
lock
jae
iret
sbb
xor
or
cmp
push
imul
sar
jl
jle
daa
pusha
shld
ja
pop
out
(bad)
dec
ins
ja
push
outs
or
or
xor
pop
push
cmp
jb
sub
int3
out
fwait
outs
shl
jle
outs
test
mov
mov
push
push
pop
and
stos
mov
std
mov
add
stos
pop
and
jb
ror
loop
lods
adc
push
mov
inc
(bad)
fld
cmp
je
pop
mov
ss
add
int3
sbb
mov
push
outs
aaa
ds
sbb
cmp
mov
sar
mov
mov
cmp
movs
add
fadd
sub
jmp
sbb
dec
xchg
in
jae
inc
xchg
loopne
paddd
movsx
add
dec
bound
sar
retf
movs
pop
cmp
sbb
add
clc
or
clc
adc
lods
mov
dec
mov
mov
je
jns
add
inc
adc
add
mov
mov
ss
call
jmp
lea
push
sbb
movs
das
pop
rol
out
jmp
in
inc
and
fsubp
rcr
mov
xchg
mov
inc
lods
lock
mov
mov
cmp
jne
jb
outs
pop
push
shl
or
jne
or
cmp
mov
fsubr
daa
push
(bad)
vcvtsi2sd
es
les
lock
pop
std
pop
mov
out
add
add
add
lea
cmp
je
movs
mov
inc
push
jle
mov
(bad)
xlat
imul
scas
mov
iret
mov
mov
push
push
xor
les
jnp
mov
pop
das
pop
push
inc
xchg
pop
xor
out
and
inc
dec
inc
or
mov
dec
nop
lea
cmp
mov
push
jne
rcl
lods
or
pop
cli
sbb
scas
mov
mov
mov
(bad)
pop
cwde
jbe
mov
jg
pop
loope
push
push
adc
xor
aaa
fs
cmp
jbe
add
inc
call
fwait
test
les
popa
cmp
push
add
scas
je
pop
mov
mov
std
pop
loop
ret
pop
add
sub
mov
adc
push
xchg
aas
fiadd
adc
pop
xchg
add
out
arpl
jbe
popf
inc
aaa
sbb
daa
ret
sbb
jbe
push
jne
movs
ret
fdivp
out
xchg
adc
or
add
push
jae
ja
pop
push
dec
or
add
push
jl
cmp
jae
push
or
pop
cmp
std
xor
pop
dec
pop
mov
mov
cld
aam
inc
lea
sbb
adc
push
je
dec
mov
cmp
inc
add
mov
fcom
push
call
dec
rcl
or
hlt
dec
push
movs
ret
jo
xor
ds
lock
jmp
push
cmp
jmp
icebp
lods
(bad)
jg
sbb
jmp
pop
jmp
push
lea
jno
cmp
or
jb
jmp
xor
test
jne
xor
push
cmc
mov
jecxz
jne
and
jb
pop
push
mov
test
cmp
out
ds
xor
push
into
fsub
and
push
push
mov
xor
fcomp
cmp
cmps
push
pop
xor
adc
push
add
sbb
(bad)
repz
(bad)
jbe
mov
ds
(bad)
pop
loopne
cs
sar
sahf
push
inc
out
push
in
mov
nop
loopne
in
movs
je
pop
jmp
pop
jmp
pop
xor
call
jl
jmp
out
jecxz
jns
lock
iret
push
pop
add
pop
iret
js
jmp
test
jl
push
hlt
xor
lea
mov
mov
mov
mov
mov
je
and
pop
push
push
rcl
mov
and
dec
je
mov
push
inc
pop
imul
push
clc
lahf
add
dec
xor
push
push
xlat
lods
fidiv
xchg
and
in
adc
or
out
xchg
mov
or
jp
xchg
sbb
push
rol
pop
cmps
cmp
jg
cmp
test
jg
sbb
or
adc
mov
in
xchg
and
cmp
jne
xor
sub
xor
add
aad
push
pusha
adc
rcr
je
out
test
(bad)
jge
add
mov
jno
cld
pop
sbb
clts
sub
cmpxchg
cmp
add
ins
xor
loop
repnz
sahf
shl
xbegin
nop
dec
push
jg
and
fdiv
push
jmp
sbb
pusha
jae
mov
mov
movs
or
jp
jno
and
test
test
cmp
adc
jbe
loopne
movs
adc
dec
jne
cmp
jne
jge
sbb
mov
jmp
enter
clc
sbb
dec
fmul
fild
call
inc
mov
loop
mov
sbb
clc
imul
outs
jb
std
sub
add
jb
outs
or
shl
xor
adc
or
das
fstp
mov
call
iret
pop
or
test
dec
sub
or
ret
cmps
lock
add
ja
bound
sbb
gs
or
jne
dec
ja
mov
pop
mov
or
jg
call
loop
ret
scas
inc
fisub
or
inc
add
and
out
and
push
add
mov
lock
pushf
mov
jg
mov
mov
int3
test
lods
rcl
dec
lea
xchg
ret
arpl
std
(bad)
clc
js
jl
movs
test
inc
adc
dec
adc
inc
test
into
adc
push
xchg
mov
add
pop
hlt
stos
int
push
outs
adc
xor
xor
mov
pusha
scas
lock
cmc
push
(bad)
cmps
or
fnstcw
mov
adc
cmp
pop
inc
pushf
outs
adc
sub
add
or
mov
jle
or
sti
out
cmp
daa
xor
mov
sbb
add
imul
and
dec
mov
mov
in
push
lds
add
iret
push
cmp
lea
shl
push
mov
xor
dec
cmp
pusha
mov
adc
push
adc
push
test
pop
mov
push
jmp
adc
test
arpl
inc
loopne
sub
or
xlat
out
mov
jmp
ds
sbb
lea
imul
and
inc
cwde
mov
cmp
jp
jl
dec
add
jle
jne
(bad)
pop
inc
rol
cmp
ret
add
rol
xor
(bad)
xchg
cmp
psllw
jle
mov
lds
mov
adc
pop
or
popf
jno
xor
call
in
jge
sbb
test
popa
add
push
gs
rcl
or
(bad)
call
ror
js
sbb
cmp
faddp
pop
mov
jmp
mov
push
add
add
xchg
lock
push
adc
sbb
push
rcr
retf
pusha
dec
popf
and
ins
xchg
dec
mov
mov
cmps
add
or
mov
scas
jg
pop
bound
es
mov
cmp
ja
push
adc
or
stos
loope
inc
and
test
out
cmp
push
inc
cmps
and
mov
and
add
sbb
pop
fst
je
ror
xchg
js
pop
test
int
jp
ss
jmp
cmp
mov
mov
or
ins
dec
cld
cmp
jne
nop
inc
jp
sbb
push
jae
add
mov
adc
outs
sbb
xchg
cmp
mov
or
xchg
xchg
pop
gs
jl
div
inc
mov
cdq
scas
dec
sub
adc
adc
inc
inc
dec
adc
loopne
aas
call
cmp
xchg
mov
stos
(bad)
xor
les
xchg
call
test
mov
pusha
stc
push
push
(bad)
ss
cmp
inc
mov
mov
mov
push
fs
or
in
stos
inc
bound
(bad)
fcomip
shl
sbb
xchg
daa
hlt
fistp
stc
inc
(bad)
push
push
iret
pop
add
pop
cmp
icebp
aam
adc
(bad)
in
push
call
mov
mov
into
push
push
push
push
push
and
pop
jnp
sar
pop
scas
fistp
jmp
or
jae
xor
loopne
pop
test
push
and
sbb
pop
js
jmp
jne
movsx
inc
inc
or
mov
sar
(bad)
popa
xor
pop
xchg
dec
xor
loop
fwait
pusha
cwde
adc
(bad)
jecxz
(bad)
push
ror
(bad)
call
dec
adc
adc
push
lock
mov
je
add
pop
push
or
sbb
shl
shr
loop
ss
xchg
xor
clc
mov
add
je
dec
adc
or
aaa
lods
jbe
test
lea
add
pop
jbe
xchg
sbb
sub
xor
cmp
jbe
adc
test
jo
dec
add
loope
xor
ds
sbb
jp
sar
sub
add
or
jg
(bad)
(bad)
mov
mov
add
add
xchg
mov
adc
jmp
hlt
mov
sahf
or
inc
je
dec
adc
add
jb
sbb
sar
push
or
sbb
aaa
ret
lea
mov
mov
mov
xor
aas
cli
clc
add
cmp
lock
push
inc
enter
xor
mov
cmp
jne
inc
inc
cld
mov
je
jg
push
add
dec
jne
mov
shl
outs
push
mov
inc
jmp
sbb
push
in
sahf
inc
adc
push
sbb
adc
pop
ins
or
mov
pop
adc
ret
or
adc
inc
dec
jmp
movd
jb
(bad)
sbb
xchg
pop
sbb
dec
xor
sub
add
or
dec
(bad)
push
sar
sbb
xor
jmp
inc
and
pushf
loopne
arpl
mov
jg
push
out
mov
or
sar
jle
mov
pop
push
push
push
push
mov
mov
add
push
(bad)
rcl
and
cmp
jo
add
adc
cdq
fnsave
add
xor
pusha
fcmovnu
dec
mov
pop
stc
mov
push
jns
cmp
add
jmp
add
inc
dec
cwde
adc
fwait
or
add
outs
mov
mov
or
sbb
push
xchg
cs
adc
shl
xchg
jae
clc
sar
mov
sahf
or
cmp
jl
loop
xor
nop
or
xor
sub
inc
add
push
dec
stos
test
mov
cmp
sub
in
jl
je
cmp
push
sub
mov
(bad)
(bad)
jg
dec
je
jmp
add
sub
jb
je
jmp
cmp
cmp
xchg
xchg
cs
adc
jmp
sub
(bad)
sti
(bad)
(bad)
cmp
mov
jmp
mov
jmp
mov
jmp
mov
jmp
push
sbb
into
inc
pop
hlt
(bad)
jmp
mov
jmp
mov
jmp
mov
push
or
sbb
stos
push
or
aaa
jno
mov
daa
mov
xor
pop
pop
push
sbb
jno
dec
pop
or
cdq
pop
mov
or
inc
sbb
xor
or
xchg
jge
inc
inc
inc
mov
sub
lock
mov
movs
(bad)
jmp
push
ret
fsub
ficom
cs
or
test
cmp
fdivr
push
out
or
mov
cmc
loop
pcmpgtd
jg
jecxz
and
pop
push
mov
push
mov
add
call
dec
mov
je
add
mov
or
xor
pop
repnz
retf
nop
sbb
mov
mov
xor
inc
enter
pop
loop
cmp
jle
inc
xor
inc
fbld
inc
leave
scas
xlat
cmp
jg
loop
call
dec
adc
sub
adc
out
mov
adc
xor
mov
je
push
mov
das
dec
loopne
mov
fwait
loopne
or
cwde
scas
(bad)
mov
or
bound
and
cmps
xlat
and
lock
ja
dec
fistp
(bad)
push
sub
sbb
cld
aas
out
mov
mov
add
mov
pop
dec
je
jb
cmp
inc
jmp
or
cmp
(bad)
or
jne
pop
pop
inc
push
mov
inc
or
inc
mov
mov
mov
fsub
and
aad
mov
outs
hlt
mov
mov
mov
dec
enter
ja
adc
and
and
(bad)
dec
fs
sar
mov
mov
call
adc
fiadd
sub
mov
mov
loop
or
outs
adc
ja
add
mov
mov
fpatan
movs
ss
and
cmp
fcomp
rol
nop
push
out
pop
pop
mov
sbb
mov
jne
cmp
add
mov
inc
les
sti
push
push
mov
and
cmp
xor
mov
cwde
call
jp
jmp
adc
jle
sbb
ret
(bad)
in
mov
adc
push
movs
mov
pop
popa
or
ins
mov
jo
and
jg
and
js
jbe
dec
mov
clc
adc
stos
sti
mov
mov
std
fidiv
call
xor
dec
add
into
shl
movs
pop
push
add
neg
test
ss
dec
adc
pop
cmp
xor
shl
je
cmp
jb
cld
pop
popa
stos
retf
mov
outs
add
or
fisttp
mov
arpl
dec
jno
add
push
and
and
sar
fs
scas
fisttp
call
mov
push
lock
scas
mov
xor
aad
inc
dec
mov
lock
add
inc
mov
mov
push
xor
push
je
mov
push
jno
push
mov
push
test
xor
add
popa
push
ds
data16
fild
icebp
push
xor
stc
xor
add
mov
call
jmp
xor
jmp
popf
jne
sub
fild
lods
cmp
retf
sti
push
jae
adc
jnp
int3
cmp
push
adc
nop
out
outs
jge
mov
jo
push
jo
jecxz
test
dec
inc
pop
mov
dec
inc
data16
cmp
inc
test
jns
mov
xchg
jo
es
push
ja
adc
scas
mul
(bad)
push
push
xor
aad
into
push
test
rcr
xor
retf
cs
stos
test
xchg
sahf
add
xchg
mov
retf
in
scas
sub
dec
cmp
adc
dec
or
inc
hlt
jmp
mov
and
inc
mov
out
mov
sbb
add
test
push
or
jb
jne
push
pop
add
or
push
stc
inc
call
les
clc
inc
jle
pop
test
ins
popw
ja
push
pop
cmp
jmp
shl
cmps
rcl
aaa
lods
cli
adc
cmp
sbb
xor
(bad)
dec
cwde
es
add
retf
js
push
(bad)
test
dec
and
pop
push
push
aaa
jae
lea
jnp
ins
sub
daa
ret
or
cs
in
stc
mov
xor
pop
push
or
cmps
sub
mov
scas
lock
cmp
mov
test
pop
xadd
add
(bad)
std
fisubr
and
ins
pushf
xor
imul
fdivr
mov
jno
lea
cmp
cmp
out
push
rcl
push
xchg
cld
push
mov
xchg
xor
mov
lea
sti
cmp
lea
sbb
stos
jne
pop
ins
pop
adc
cmp
sbb
mov
mov
and
fwait
inc
push
jmp
out
clc
add
push
sub
cmp
and
mov
add
push
ss
cmps
clc
adc
xor
adc
push
mov
cmp
shl
ins
les
sbb
hlt
jle
push
call
pop
add
mov
cmp
pusha
ds
add
mov
sbb
jmp
dec
cld
lods
dec
popf
jle
pop
pop
jmp
inc
clc
xchg
adc
fidivr
lahf
add
cmp
cmp
je
mov
mov
test
std
pop
jb
cmp
gs
sub
rol
aas
cmp
add
mov
xchg
ins
cld
or
add
cmp
stc
mov
daa
or
aad
jg
cmp
clc
(bad)
cmp
je
push
pop
dec
xchg
push
dec
inc
sub
fwait
pop
adc
dec
inc
fbstp
loopne
push
pop
mov
(bad)
cmp
sub
(bad)
mov
int3
and
es
xchg
psubusb
aaa
dec
jmp
aas
(bad)
xor
mov
mov
inc
inc
sub
ja
add
push
cli
sbb
call
mov
fnstenv
dec
je
mov
in
cs
push
jmp
loop
push
(bad)
(bad)
jg
adc
add
and
je
mov
cmp
jne
dec
je
mov
cmp
jne
mov
add
jne
add
jmp
pop
cmp
adc
std
jne
shr
shr
sbb
xchg
jns
ja
push
mov
shr
or
fild
movs
pop
cmp
rcr
int
ret
and
scas
xor
cmps
jns
int
dec
and
pusha
cmp
jecxz
loopne
das
scas
movzx
inc
xchg
arpl
sbb
pop
repz
cmp
jbe
mov
mov
inc
inc
leave
xor
fistp
jge
sahf
or
je
(bad)
fcomip
inc
cmp
cmp
jg
inc
inc
test
jl
cmp
jg
add
mov
dec
fadd
clc
inc
rep
jmp
pop
jmp
mov
in
mov
call
nop
push
mov
push
dec
icebp
scas
adc
xchg
ins
pop
ret
push
pusha
ror
ror
and
je
data16
out
jbe
adc
add
shr
jae
mov
add
imul
push
cmp
or
or
push
push
lahf
mov
jmp
or
add
in
pusha
xchg
and
or
out
xor
in
imul
lock
clc
jl
(bad)
shl
cs
daa
(bad)
mov
cmp
push
push
sub
hlt
cld
jne
push
lea
(bad)
call
cld
lea
neg
mov
pushf
or
(bad)
jns
add
cmp
je
bound
xor
int3
int3
cmp
ret
cmp
ja
mov
push
femms
push
(bad)
inc
test
aaa
add
clc
dec
loope
pusha
push
mov
ds
test
mov
push
mov
xor
pop
push
ja
or
icebp
cmp
sub
fcomp
or
rcr
pop
pop
xchg
pop
fs
push
inc
(bad)
cli
jmp
mov
fwait
test
(bad)
jge
mov
push
and
sar
icebp
push
icebp
movs
pop
jo
xchg
or
not
lods
lock
lahf
push
adc
lods
add
xchg
nop
cmp
sub
cmp
cmp
aam
adc
or
mov
push
nop
nop
push
sbb
pop
xlat
push
mov
jmp
or
(bad)
push
pop
scas
movs
(bad)
cli
push
xchg
push
cld
ja
enter
xor
int
or
and
inc
and
mov
xchg
jmp
cmps
or
pop
das
or
adc
cmp
add
aam
push
mov
cmp
jge
xor
jmp
dec
cmp
jge
mov
push
sbb
xchg
repz
cmp
inc
cmp
jmp
icebp
mov
add
add
mov
xchg
jecxz
jl
lock
xor
dec
aas
sbb
sbb
push
mov
shr
sbb
mov
enter
push
loope
cmp
out
pusha
daa
data16
(bad)
fldenv
push
push
xlat
jmp
add
cmp
xchg
mov
cmp
loopne
idiv
ins
dec
stos
cmp
mov
mov
retf
push
push
pushf
adc
add
test
mov
or
out
cmp
or
sbb
sbb
jo
push
push
mov
pop
add
mov
rcr
das
scas
xor
scas
mov
xchg
movs
jne
push
inc
fwait
(bad)
adc
call
out
or
les
mov
loopne
pop
push
pop
retf
adc
adc
or
mov
add
or
in
cmp
aaa
add
jo
inc
push
jo
push
jmp
pop
in
jo
js
shl
cmp
mov
sub
jmp
inc
call
jno
lods
push
(bad)
mov
pop
mov
cld
sbb
stos
and
add
push
fsubr
outs
stos
(bad)
icebp
cmp
je
in
mov
push
xor
shl
mov
mov
xor
cmps
fwait
adc
pop
das
outs
stos
adc
or
cmp
je
cmp
(bad)
fist
cmp
ror
or
ror
ins
mov
adc
dec
mov
jmp
mov
in
adc
or
lock
inc
cli
add
in
div
retf
mov
out
or
push
rcl
aaa
cwde
inc
(bad)
fmul
mov
(bad)
mov
cmp
iret
mov
dec
jmp
test
jl
aaa
sub
add
jae
iret
retf
or
cs
in
push
cmp
mov
pop
adc
out
aaa
dec
fidivr
jo
xor
cs
dec
pushf
sbb
repnz
test
cmp
jo
pop
icebp
sub
nop
adc
inc
and
imul
jb
pop
lea
jmp
movs
imul
xor
(bad)
jg
js
add
lds
sbb
cmp
jne
xor
js
sub
xchg
sub
add
xchg
sbb
fcmove
ja
and
mov
std
into
jl
cmp
mov
nop
jle
dec
cwde
sub
mov
cli
pop
sub
push
lea
mov
outs
imul
push
pop
mov
cmp
mov
fsub
mov
shl
mov
pop
sub
sbb
cmp
test
repz
xchg
push
cmp
mov
mov
pop
sbb
popa
ss
jge
nop
jo
mov
pop
jle
inc
xor
and
nop
fimul
adc
jmp
adc
mov
jmp
jmp
pop
xor
scas
daa
and
pop
and
jl
push
out
add
inc
inc
or
adc
inc
push
cmp
or
push
(bad)
add
mov
fsub
fiadd
jns
sbb
xor
das
sub
movs
lods
div
adc
in
pop
ficomp
push
je
dec
inc
shl
cmp
inc
add
mov
sbb
cmp
rcr
jge
push
pop
xor
and
jne
or
fcomip
pop
imul
mov
shl
fild
fs
mov
cld
mov
sub
shl
inc
inc
sbb
pop
and
mov
cs
ss
or
loopne
out
rcl
cld
jecxz
dec
or
jo
fucomip
or
enter
mov
mov
stc
add
mov
jle
jl
jne
push
jbe
aaa
or
test
adc
ror
fsub
sahf
shr
mov
es
gs
mov
loopne
nop
or
mov
mov
add
add
div
outs
add
mov
stos
and
ss
scas
xchg
nop
js
jne
lock
cmp
adc
sub
mov
pusha
shl
test
test
test
add
adc
adc
mov
add
pop
xchg
mov
fisub
aas
push
(bad)
(bad)
out
shl
clc
mov
lea
in
xor
pop
add
adc
and
add
dec
sbb
movs
jmp
mov
cmp
mov
xor
daa
mov
mov
leave
push
mov
push
lea
jl
push
sbb
xor
mov
ja
xor
movs
pusha
ret
out
leave
dec
mov
xchg
cmp
addr16
add
out
push
cmp
loop
or
sub
push
cmp
je
cmp
je
cmp
je
cmp
test
mov
and
imul
inc
adc
or
adc
mov
out
jmp
push
mov
cld
or
div
mov
adc
cmp
pop
jmp
cmp
cmps
jae
xor
inc
es
pop
jmp
and
pusha
ins
jge
push
ja
call
lods
cmp
and
cmp
jmp
sbb
sbb
sub
jb
sub
int3
jge
cld
idiv
mov
mov
cmps
push
into
or
or
and
mov
push
xchg
and
fdivr
jne
push
pop
cmp
jmp
push
jo
cmp
repz
or
inc
pop
sbb
retf
jmp
test
test
and
or
mov
adc
dec
movs
push
cmps
mov
popa
into
adc
shl
js
mov
inc
(bad)
mov
rcr
mov
repz
outs
jp
mul
xchg
test
sbb
xchg
cmp
movs
push
adc
and
sbb
int3
add
out
push
mov
sbb
xchg
push
xor
ror
add
cld
push
clc
mov
test
push
push
cwde
sub
jle
outs
mov
add
stos
inc
add
ds
mov
sahf
mov
outs
outs
outs
or
je
adc
je
call
es
adc
sub
pop
xor
gs
pop
stc
sub
es
xchg
jo
jge
leave
xchg
arpl
in
lea
mov
(bad)
fadd
pop
jbe
jo
pop
dec
loop
inc
test
pop
jmp
or
mov
in
jns
and
mov
movs
adc
and
mov
add
cs
cmovae
mov
sbb
in
add
xchg
imul
mov
mov
sbb
dec
scas
dec
movs
push
pop
ins
jl
xchg
in
stc
jo
stos
xor
push
mov
xchg
out
sub
or
jne
sub
in
jmp
in
jmp
test
in
rcr
adc
push
or
cmp
cmp
xchg
dec
dec
inc
add
add
inc
call
repnz
fisubr
mov
sar
add
je
cmp
jmp
iret
retf
movs
cwde
loope
dec
adc
popa
pop
sub
shl
xor
and
mov
jmp
cmc
xor
dec
adc
dec
fld
ja
lods
or
jne
loope
xchg
push
sbb
xchg
rol
mov
xor
push
ror
xchg
push
enter
xchg
aas
sub
xchg
adc
test
stos
neg
ja
cmp
or
rol
add
pop
loop
or
repnz
call
test
lock
sub
sbb
sar
(bad)
fnsave
xor
sub
sbb
jne
cmp
jb
mov
xchg
inc
inc
sub
inc
mov
sub
jl
push
ins
(bad)
shr
rcr
ror
fisttp
mov
rcl
and
or
ins
push
mov
imul
in
push
cli
sub
pop
or
rol
push
popa
inc
dec
loope
or
sub
or
dec
retf
sbb
or
je
mov
mov
ins
xor
mov
(bad)
rcl
cmp
jb
add
clc
pop
lods
cmp
jb
sub
sbb
inc
loop
xor
ss
jmp
pop
loopne
jae
pop
push
jns
neg
neg
fiadd
and
xor
neg
neg
sbb
int
iret
scas
xlat
into
(bad)
and
ret
pusha
into
and
mov
not
xchg
scas
mov
jne
(bad)
or
(bad)
in
(bad)
call
push
jg
mov
scas
jae
cmp
je
add
sub
cld
sub
ja
add
pop
sbb
jne
inc
xor
(bad)
stos
lds
lahf
shr
pushf
cmps
push
sbb
fild
je
or
pop
sbb
adc
mov
cdq
cwde
or
pop
js
mov
jl
test
jmp
adc
out
mov
rcl
push
jb
adc
fidivr
adc
adc
sub
jl
cmc
cdq
jo
inc
mov
mov
imul
or
sub
dec
addr16
inc
mov
cli
aas
push
jmp
jg
mov
cdq
(bad)
and
fs
movs
pop
enter
or
push
adc
cli
loope
jmp
lods
out
mov
rcr
pop
ins
das
xor
ficom
or
cmp
pop
sbb
inc
jo
and
sahf
test
rol
sub
or
scas
ss
fs
dec
sub
jmp
daa
je
pop
retf
in
xor
sbb
jp
jge
setb
setl
cmp
je
dec
repz
push
adc
or
inc
dec
pop
test
jecxz
sub
or
adc
popf
imul
je
mov
sbb
cmp
xchg
es
pusha
ss
cli
and
rol
cmps
mov
sahf
adc
ficomp
sbb
and
frstor
dec
push
mov
xchg
adc
pop
mov
xchg
cli
and
push
bnd
add
and
push
and
mov
push
cmc
add
dec
mov
jno
xchg
cmp
inc
adc
add
add
or
std
sahf
lahf
adc
add
sahf
and
gs
or
call
out
adc
dec
dec
and
cld
push
push
sbb
fdiv
dec
adc
pop
mov
in
sub
fs
aam
fild
inc
add
loop
push
add
in
or
test
jg
dec
sbb
imul
mov
cmp
and
fsubr
je
es
mov
lods
cmp
jne
push
jo
lods
shl
sbb
cmp
sub
lock
ret
mov
push
ins
cmp
lea
cdq
adc
push
mov
nop
jmp
rcr
test
mul
xchg
dec
jnp
pop
les
push
cli
adc
dec
mov
dec
cvtpi2ps
aas
shl
pusha
ja
and
or
sbb
mov
sub
add
cmp
or
out
pop
adc
sbb
enter
daa
mov
aam
add
mov
mov
call
adc
sub
jg
(bad)
shr
sub
jns
dec
jl
inc
xor
push
test
lea
add
in
shr
cmp
and
cmps
inc
shr
retf
data16
and
ficomp
push
push
jne
fsub
rcl
dec
pop
shr
out
lock
add
cmps
mov
lock
cmp
push
loop
lods
mov
mov
pop
into
xlat
cmp
jle
fidivr
adc
lock
je
punpckhbw
adc
push
jg
xchg
imul
dec
mov
xchg
mov
push
add
fwait
adc
add
xchg
call
rcr
inc
retf
cmp
xchg
in
inc
(bad)
dec
mov
add
mov
das
sbb
and
lock
jne
dec
mov
std
or
push
adc
adc
inc
or
push
or
pushf
sahf
test
mov
clc
add
retf
sahf
cmp
cmps
jns
adc
push
sub
jmp
std
pop
pop
dec
ficom
ja
mov
adc
nop
or
cs
popa
mov
mov
push
sub
inc
jp
add
mov
mov
add
aaa
xor
add
fisubr
js
add
push
push
movs
jne
cmp
pop
inc
aad
dec
mov
call
pop
inc
and
push
or
fs
out
pop
lea
(bad)
sti
test
leave
cmp
les
sbb
out
inc
sbb
inc
aad
jle
sahf
jno
sahf
cmp
xor
xor
int
add
je
sbb
rcl
cmp
repz
or
add
daa
mov
fdivr
into
mov
cmp
adc
ret
add
lock
shl
push
push
or
jp
test
or
pop
push
ss
push
adc
pusha
adc
xor
data16
call
mov
jbe
add
mov
imul
xor
push
xchg
add
xchg
add
adc
les
adc
adc
ss
scas
inc
mov
shl
es
ret
adc
push
nop
fsubr
mov
rol
mov
push
push
mov
ss
pusha
inc
std
xor
add
add
mov
push
repz
mov
js
mov
xchg
xor
or
xchg
or
ror
into
sbb
stos
mov
or
je
or
push
mov
adc
sbb
inc
mov
jp
sub
ins
je
xor
jg
ja
jae
inc
push
pop
je
popa
outs
jns
xchg
outs
bound
add
shl
inc
jns
ins
pushf
mov
lods
push
sub
sub
push
jbe
out
imul
dec
dec
sub
push
push
xchg
jae
fcmovne
sbb
mov
inc
push
push
or
jo
jo
sub
outs
pop
cmp
jle
sub
popa
addr16
dec
jae
retf
pop
outs
outs
jae
pop
push
pop
fist
fs
or
inc
inc
sub
sub
push
ss
pop
cmps
adc
loopne
daa
add
pop
fs
je
ins
sbb
pop
or
jle
sub
jb
dec
inc
not
repnz
jae
lods
popf
shr
or
xchg
and
addr16
bound
inc
inc
pop
push
inc
ins
fwait
pop
mov
popa
aaa
not
outs
retf
mov
outs
aaa
cmps
aaa
jmp
inc
dec
cmps
jae
push
aaa
outs
div
adc
outs
cmps
aaa
dec
dec
inc
das
shl
pop
push
mov
push
jg
sub
add
clc
push
setae
jg
or
(bad)
leave
or
out
and
adc
test
mov
push
push
sub
and
dec
push
cwde
jne
movs
int
cli
jae
jmp
ror
push
ja
sub
fcomip
out
jne
pop
and
sbb
ins
push
movzx
mov
stos
sub
lods
mov
cwde
sahf
sar
or
dec
mov
scas
imul
xchg
ror
adc
cld
cmp
clc
add
or
inc
(bad)
sub
jmp
dec
jmp
fcmovnu
(bad)
retf
xor
pop
out
mov
xchg
retf
cmp
add
lods
xchg
sbb
std
mov
xchg
jmp
dec
jne
pusha
sub
pusha
out
pop
ret
sub
cmc
pop
jg
push
inc
mov
ret
push
mov
jg
fistp
hlt
push
xor
add
or
lahf
shl
daa
cmc
test
mov
call
ror
inc
cwde
jmp
sub
cwde
in
ds
fiadd
pushf
cmp
sub
int
clc
and
hlt
ror
cld
jb
adc
dec
mov
mov
cmp
fild
pop
clc
shr
cmp
jp
sbb
sti
dec
jmp
sbb
out
mov
ret
or
jecxz
fisttp
jbe
les
add
test
mov
adc
push
scas
cmp
lea
dec
mov
pop
ficom
daa
movs
(bad)
mov
and
lea
mov
or
pushf
mov
xor
and
movs
(bad)
pushf
inc
cmc
ror
mov
xor
test
and
fwait
lahf
push
inc
test
sub
pop
push
mov
nop
mov
jno
dec
adc
sbb
ret
repnz
xchg
inc
in
mov
pop
pop
push
add
add
xor
rcr
or
jb
add
dec
dec
cmp
ror
inc
mov
rcr
test
jecxz
mov
fdiv
mov
inc
adc
lock
(bad)
jmp
cs
je
movs
mov
mov
lea
scas
lock
out
cdq
das
jb
mov
in
or
push
stos
cld
in
mov
movs
mov
mov
and
push
and
mov
cli
ins
push
push
es
add
and
or
push
mov
mov
std
dec
push
scas
xor
cmp
mov
add
fcomp
call
popa
push
push
div
pusha
jb
ss
iret
push
stc
push
pop
loopne
cmp
je
mov
call
mov
xchg
mov
ret
je
mov
div
sub
test
cmp
and
sub
or
in
xor
test
xchg
scas
rcl
inc
mov
push
sbb
sbb
and
mov
jmp
fsubr
or
push
lock
fsub
xor
xchg
mov
es
pop
nop
ret
dec
retf
scas
popf
pop
mov
sti
inc
push
call
xor
and
adc
mov
ret
sub
test
je
call
pop
daa
nop
jnp
lea
jg
mov
sbb
cmp
adc
pop
sub
pop
add
mov
mov
inc
add
mul
pusha
daa
por
mov
mov
sub
shl
outs
jo
sti
jns
adc
inc
add
pop
ins
call
xchg
leave
mov
(bad)
sar
outs
rol
add
inc
mov
imul
rcr
sub
sar
loopne
js
dec
rol
inc
mov
(bad)
ret
jg
push
out
push
dec
mov
dec
int3
ss
fnstcw
add
test
mov
int
dec
arpl
mov
scas
mov
ror
clc
mov
cmp
cmps
adc
push
loop
lods
data16
je
fdiv
test
push
daa
(bad)
stos
ret
rcr
cmp
and
dec
adc
fsub
pop
adc
sbb
xor
sbb
cmps
add
daa
leave
and
push
loopne
mov
inc
sbb
cmp
je
leave
mov
pusha
jg
cmp
and
sbb
mov
and
aam
cmp
outs
add
fld
or
enter
and
fwait
push
(bad)
xor
mov
push
add
ror
sbb
stc
pop
jmp
mov
and
xor
mov
cdq
push
or
ins
sub
or
pop
adc
test
jge
ror
daa
xchg
test
call
call
arpl
adc
cs
or
ins
mov
ja
and
push
es
dec
ins
mov
addr16
adc
mov
push
outs
jbe
addr16
pop
mov
dec
inc
jo
imul
shl
arpl
cmp
(bad)
fadd
stos
cmps
add
adc
sbb
jbe
inc
(bad)
dec
push
lahf
je
mov
cmp
sar
daa
inc
mov
add
icebp
mov
pop
dec
fisttp
cmp
pop
call
lods
mov
(bad)
xor
movs
(bad)
aas
pop
cmp
xchg
ret
test
je
sub
int3
dec
popf
jmp
(bad)
xor
(bad)
hlt
fdivr
rcr
dec
xchg
cmp
lahf
popa
dec
mov
jmp
inc
push
xchg
push
(bad)
jg
scas
aam
push
sbb
sub
call
gs
pop
ja
retf
sub
clc
mov
adc
mov
lock
jnp
or
jle
add
int3
fmul
xlat
push
xlat
lock
fs
add
mov
lock
ss
rcl
push
sub
sbb
pop
push
xchg
lock
cs
hlt
mov
mov
xchg
dec
add
nop
inc
pop
in
in
inc
add
push
xor
cmp
xlat
in
xor
push
add
cmp
dec
xor
push
lock
pop
mov
jbe
xlat
cmps
lahf
sbb
push
mov
bound
and
jp
shl
push
dec
icebp
jmp
dec
mov
retf
lock
push
in
(bad)
jnp
inc
jmp
mov
push
test
into
les
dec
and
jne
adc
adc
cld
push
push
inc
sbb
cmp
cli
fsub
iret
mov
lahf
dec
call
call
dec
mov
and
xor
addr16
inc
mov
add
or
fs
sub
sbb
add
mov
shl
and
ja
xchg
aam
cs
rcl
popa
fisubr
inc
add
fisubr
in
out
fimul
fcmove
mov
jmp
mov
xor
push
inc
cmps
sbb
inc
and
mov
pop
bound
mov
loopne
pop
(bad)
cmp
inc
mov
loop
adc
(bad)
and
fcomp
dec
cmp
add
cmp
inc
adc
inc
sub
loopne
lahf
xchg
ins
je
cmc
mov
ficom
add
das
pusha
xor
mov
cmp
arpl
cmp
or
push
int3
cmp
add
mov
mov
dec
pusha
ja
mov
or
aas
mov
pop
mov
push
outs
outs
mov
cld
pop
icebp
or
jne
xchg
ret
(bad)
call
cwde
int
sti
mov
add
add
mov
(bad)
shr
sahf
add
xchg
sub
movs
fmul
mov
xor
pop
jmp
int3
mov
pop
ret
sbb
add
scas
and
test
lock
and
sub
mov
call
fbstp
lods
or
mov
and
and
jmp
mov
or
xchg
inc
pop
pop
dec
sbb
mul
mov
mov
mov
int
add
shl
cmps
lods
push
cwde
mov
add
loopne
mov
shl
or
dec
xchg
out
add
cld
cdq
jle
or
mov
lods
mov
cdq
rol
jbe
(bad)
mov
bnd
and
(bad)
cmp
(bad)
pop
sub
dec
and
jmp
mov
push
es
pop
push
icebp
neg
test
adc
mov
push
loop
cmp
fild
push
fadd
sub
sbb
mov
pop
daa
sbb
rcr
cmp
rcr
adc
push
jge
mov
add
(bad)
mov
jb
xor
mov
inc
(bad)
fs
inc
sbb
push
imul
and
jb
adc
fbstp
dec
push
or
or
sub
pop
test
sbb
sar
lods
add
rcr
hlt
pop
pop
int3
in
mov
jge
adc
sub
mov
cmp
test
adc
ss
push
cmps
push
adc
cwde
call
pusha
es
and
test
jmp
sbb
in
pop
xchg
or
into
rol
adc
and
lea
pusha
or
(bad)
sub
(bad)
fidivr
mov
add
add
sbb
les
mov
leave
daa
clc
xchg
in
pusha
xchg
call
dec
sbb
adc
into
push
pop
xchg
sbb
add
pop
sar
add
push
lea
jo
add
jb
push
out
scas
in
loop
out
in
mov
sbb
pop
out
call
loopne
xor
cmp
cmp
push
fisttp
lea
in
popf
js
int
sbb
loop
jo
dec
loopne
cmp
movs
xlat
iret
mov
pop
cld
icebp
xor
sbb
into
add
in
es
enter
sbb
test
pop
push
ins
sar
dec
pop
test
and
adc
daa
add
cmp
daa
loopne
popa
jae
cmps
popa
fwait
mov
cmps
mov
lds
sub
mov
add
(bad)
and
jns
mov
push
or
adc
push
fdiv
cmc
aaa
inc
cmp
or
cwde
mov
arpl
sub
(bad)
sbb
into
call
test
xor
sar
out
aad
xor
mov
js
add
or
or
add
add
cwde
adc
cmps
dec
and
jne
rcl
or
clc
add
inc
cmp
add
sbb
out
pushf
xor
ds
(bad)
movs
out
fsincos
movs
add
movzx
xchg
dec
shl
adc
xchg
sar
push
or
mov
mov
xchg
or
push
push
xchg
add
loope
push
call
or
push
into
adc
pop
sbb
jle
or
aam
or
cmp
adc
sbb
fwait
ret
xchg
fs
fld
mov
mov
lds
cmps
(bad)
fs
sbb
inc
pop
pop
das
xchg
or
and
dec
nop
or
adc
mov
push
or
in
sbb
add
outs
dec
repnz
das
xchg
fsub
mov
std
push
pop
adc
dec
jno
data16
inc
xor
add
adc
lods
jle
add
mov
ret
mov
in
pop
stos
out
jecxz
adc
int3
jmp
inc
sbb
mov
mov
inc
dec
in
cmc
lea
rol
and
sbb
ja
mov
add
jnp
add
mov
inc
clc
jge
jb
bound
mov
bound
rcr
inc
pop
add
in
adc
adc
fiadd
cmp
js
in
jmp
push
inc
pop
out
jo
arpl
out
dec
push
shl
out
mov
and
sbb
pop
out
dec
ins
and
xor
and
lock
adc
mov
ret
mov
in
pop
aas
call
ret
psubusb
and
leave
inc
call
in
dec
cs
mov
stos
leave
cmp
pop
add
dec
or
push
dec
push
mov
nop
jmp
shrd
add
add
pop
mov
adc
adc
inc
push
jg
jbe
ins
clc
inc
icebp
cs
mov
jno
and
mov
push
adc
inc
jb
xor
and
(bad)
aaa
adc
jo
sub
sub
cmp
out
add
test
add
pop
push
push
pop
(bad)
and
clc
mov
mov
les
cdq
and
pop
mov
push
scas
inc
or
rcr
mov
cwde
cmp
ss
xcrypt-cfb
cmps
arpl
nop
cmp
or
fist
retf
and
dec
jmp
test
or
mov
add
sbb
test
shr
popf
(bad)
jmp
pusha
pop
mov
push
ja
mov
lahf
push
sti
out
mov
(bad)
call
movs
xor
and
sbb
sbb
xchg
push
js
add
jb
sub
cmp
jmp
xchg
and
into
loope
lds
or
inc
je
rol
(bad)
push
loope
add
data16
add
mov
movs
add
sbb
pop
frstor
push
fwait
xchg
sbb
pusha
dec
dec
adc
jge
xor
adc
dec
cmp
int3
dec
dec
push
(bad)
cmps
bound
pop
cmps
mov
cmp
pop
(bad)
mov
(bad)
push
bound
cmp
sbb
ins
add
jno
daa
push
sub
mov
mov
mov
push
scas
adc
or
xor
pop
stos
and
lock
jmp
dec
inc
gs
rcl
jle
cmc
sub
push
sub
ins
dec
nop
inc
mov
sar
cld
retf
ret
add
neg
jp
jae
sub
sar
sbb
or
retf
and
lods
pusha
scas
or
fstp
push
xor
cwde
inc
loopne
dec
lea
inc
sbb
mov
sub
push
mov
(bad)
out
jge
inc
inc
in
je
push
pop
add
inc
pop
or
daa
fbstp
inc
xor
adc
mov
adc
jp
enter
pop
xchg
jle
dec
mov
jge
push
fiadd
jns
je
popf
push
jg
xlat
pop
ror
add
xchg
pop
aas
fild
jns
inc
adc
cmp
scas
xor
mov
and
sbb
adc
pop
cld
out
jge
lods
jp
mov
xchg
mov
in
pop
xchg
sbb
in
in
adc
or
aaa
repnz
add
cld
pop
and
and
lock
ret
nop
push
push
loope
dec
mov
in
aas
and
je
add
(bad)
clc
loop
or
or
mov
or
mov
mov
inc
cmp
mov
test
fs
sti
pop
jmp
adc
jns
push
sub
cmp
pop
ret
and
sbb
ret
mov
addr16
bound
lahf
fnstcw
sub
sub
xor
in
or
mov
mov
test
or
lea
test
sti
add
mov
rcl
mov
and
add
repnz
in
add
sbb
mov
push
adc
mov
push
out
mov
and
dec
adc
out
cmp
adc
loopne
xor
imul
test
push
call
pop
clc
mov
mov
in
inc
push
push
mov
fcom
cmp
mov
popa
sub
mov
loope
add
mov
ja
add
mov
cwde
or
pop
in
push
aam
mov
lock
push
push
mov
inc
rol
jmp
mov
shl
add
test
sbb
test
loopne
cs
pop
sub
(bad)
in
inc
pop
pop
push
mov
ds
ins
mov
cmp
cmp
mov
xchg
shr
push
ss
popa
test
push
add
idiv
adc
pusha
push
psrld
sub
dec
add
or
push
cmp
inc
push
fstp
(bad)
fst
and
sbb
jns
clc
jp
cmp
add
push
outs
mov
push
and
lock
pop
xlat
sub
lods
add
adc
xchg
sar
and
pop
lods
adc
lahf
cmps
add
mov
add
cmp
dec
movs
jb
xchg
jne
mov
cmp
movs
jo
mov
dec
or
cmp
inc
add
or
push
int
popf
inc
std
xchg
pop
ja
add
and
pop
jge
inc
loopne
sbb
aaa
mov
sbb
paddsb
(bad)
lock
shl
cmp
mov
jno
jp
cmc
push
pop
or
push
sbb
push
(bad)
and
and
push
push
loope
ret
ds
add
and
add
add
push
movs
push
test
aas
cmp
cmp
mov
inc
or
cmp
ret
imul
or
call
dec
rcr
push
sub
lods
scas
fprem
shl
pop
push
lods
push
sbb
in
pusha
popaw
loope
mov
retf
imul
mov
add
or
jo
rol
es
and
sbb
add
les
add
fsubr
xchg
jno
loopne
or
pop
or
fdiv
add
lock
add
addr16
pop
cmp
jne
push
push
cmp
push
or
cwde
push
ret
fmul
and
xor
inc
call
dec
jne
pop
cmp
push
push
push
ins
or
dec
loop
sbb
xor
outs
add
loopne
ja
in
sti
adc
rcl
add
nop
and
ret
inc
sbb
js
cs
sub
dec
fild
dec
jle
call
inc
inc
dec
je
mov
cmp
mov
sti
je
movzx
add
pop
aas
mov
push
jmp
xor
add
lock
sub
dec
sub
ins
add
fisttp
js
mov
mov
loop
stos
push
cmp
mov
fadd
jb
or
jne
cmp
or
add
mov
inc
(bad)
sbb
add
add
(bad)
pusha
out
es
adc
push
ret
xchg
imul
xchg
dec
(bad)
test
clc
neg
inc
jae
ins
outs
add
push
inc
jne
mov
cmp
(bad)
or
outs
adc
inc
arpl
fnstcw
dec
pop
shl
mov
sbb
inc
xchg
or
pop
test
addr16
inc
pop
sbb
rcr
add
cld
clc
jno
popa
inc
add
and
add
add
lods
imul
imul
push
fidiv
pop
push
or
adc
or
inc
pop
retf
sbb
adc
jns
dec
cdq
ret
stos
gs
popa
mov
(bad)
jecxz
xor
pop
rcpps
neg
(bad)
call
enter
ins
pop
dec
add
stc
cmp
int
jno
mov
add
inc
and
pop
or
or
add
(bad)
mov
mov
mov
add
inc
mov
xchg
test
add
jns
pop
int3
int3
xchg
fimul
aad
enter
mov
push
repnz
adc
int3
sbb
test
shl
pop
aad
mov
icebp
mov
sbb
addr16
lods
sbb
lods
pop
dec
add
pop
sbb
pop
leave
test
sbb
pop
xchg
pusha
mov
test
push
push
and
call
inc
icebp
adc
cmp
jns
movs
cld
pusha
or
jns
movs
cld
adc
daa
fimul
jl
gs
or
mov
adc
or
mov
leave
mov
ins
inc
ds
nop
mov
(bad)
iret
dec
int3
imul
jb
js
ja
cld
or
daa
rol
jb
ins
gs
cmp
int
jg
aas
sbb
push
push
push
cmp
xchg
mov
jae
clc
add
in
in
and
add
fwait
in
cld
test
or
sub
jnp
fiadd
imul
inc
retf
sbb
add
xchg
les
jmp
add
inc
mov
popf
fidiv
cmp
call
push
dec
and
add
add
push
mov
inc
mov
int3
push
push
push
push
fs
add
rol
cs
ins
pop
mov
loop
inc
imul
fld
xchg
mov
outs
je
test
inc
sahf
xchg
into
test
pop
sub
and
daa
sbb
mov
push
in
adc
les
mov
and
stc
test
pop
mov
imul
ja
sbb
movs
push
and
dec
inc
xchg
retf
les
fld
inc
or
sbb
lds
add
loopne
clc
adc
add
cmps
or
in
setno
mov
xchg
adc
daa
test
stos
ins
mov
push
pop
mov
jl
imul
adc
mov
lods
gs
dec
pop
mov
int3
dec
jne
inc
sub
popa
jl
jb
adc
or
and
cmc
add
xor
push
adc
pop
arpl
popa
(bad)
cmp
jle
outs
outs
into
jae
stos
int
scas
jg
inc
inc
add
or
call
jae
inc
dec
sub
repnz
or
adc
mov
push
add
fwait
push
ror
cmp
inc
hlt
add
jecxz
in
cld
dec
jae
nop
adc
push
repnz
rcl
or
movs
in
adc
add
data16
call
xor
js
(bad)
mov
push
jnp
cmp
ja
js
and
cmc
xor
push
icebp
or
cmps
jp
scas
add
nop
mov
or
test
pop
push
in
lock
dec
fld
cmp
push
popa
jne
dec
add
clc
jns
xchg
xor
jb
enter
out
gs
rcr
nop
outs
jne
or
inc
bound
mov
pop
aas
push
push
dec
dec
loopne
outs
inc
add
stos
xchg
mov
xchg
into
call
js
mov
cs
push
outs
sbb
test
in
pop
mov
je
inc
cmps
bound
mov
iret
mov
fs
and
pop
mov
arpl
cmp
add
(bad)
mov
ret
add
fldcw
(bad)
sbb
fnstsw
push
daa
outs
das
test
or
push
sbb
push
jmp
ins
ret
cmps
add
mov
mov
or
adc
das
xor
xor
lods
clc
cmp
loope
inc
pop
and
pop
inc
push
inc
xor
push
je
ret
mov
sbb
enter
sbb
mov
push
sbb
movs
in
jns
pop
inc
in
inc
sbb
fist
retf
jg
mov
mov
cmp
or
sbb
fst
mov
mov
cmp
jb
scas
in
pop
or
into
pop
sbb
pcmpgtd
(bad)
sbb
outs
pop
sub
dec
jae
pop
fisubr
lds
add
push
mov
mov
retf
jns
(bad)
in
cs
adc
dec
dec
sahf
inc
jl
add
pop
ret
add
pop
sbb
pop
out
or
sub
push
aad
aas
nop
or
add
inc
inc
ficom
pop
dec
add
dec
jae
shr
fld
adc
sub
sbb
out
ins
sub
add
push
adc
jb
scas
pop
sbb
push
jg
pop
jb
jae
add
enter
outs
jns
add
push
leave
add
add
pushf
add
fst
mov
pop
xchg
push
test
push
add
and
(bad)
dec
inc
jae
outs
arpl
and
xchg
aaa
sar
fild
rcr
fcomp
fstsw
sahf
jae
fld
fdivr
aad
xchg
push
(bad)
hlt
fstp
fwait
mov
fstp
fwait
jmp
shl
aaa
inc
or
in
dec
fldpi
fsubr
ins
xor
jle
or
fisttp
leave
mov
cwde
clc
adc
aas
mov
mov
mov
dec
inc
mov
addr16
rcl
add
sub
jns
shr
dec
sub
inc
or
sub
movsx
mov
or
or
add
and
ret
iret
lods
scas
or
cmp
test
sbb
xchg
add
jmp
adc
jb
pop
mov
pop
retf
loopne
add
ds
adc
jb
mov
and
pop
aas
sub
fist
test
dec
mov
fild
xor
sti
mov
push
fsubrp
fmul
fild
sbb
sbb
ins
xor
pop
arpl
mov
push
test
add
dec
add
cmp
nop
add
add
push
or
std
mov
in
jmp
movs
fist
xchg
push
ror
arpl
test
mov
xchg
mov
inc
es
jno
iret
ds
or
enter
fisttp
pop
sbb
fwait
push
add
iret
pop
xchg
out
adc
je
enter
mov
or
adc
mov
ret
xchg
sub
pop
xor
and
popa
and
daa
add
xor
in
call
or
into
jmp
outs
xor
outs
nop
and
inc
xor
into
clc
aas
movlps
rol
add
xlat
xchg
ret
mov
xchg
shl
or
daa
and
add
int
inc
inc
adc
cmp
loopne
int
jmp
push
faddp
fcomp
pusha
push
push
fimul
xor
or
or
test
pop
mov
pusha
inc
and
scas
arpl
ss
sub
adc
ret
mov
adc
adc
push
fst
xor
add
pop
das
ja
xchg
or
xor
data16
and
lock
repnz
sub
mov
sbb
adc
push
inc
fwait
add
adc
dec
dec
add
adc
push
jo
push
shl
and
movs
xor
push
push
lea
sbb
sub
nop
fisttp
jl
fmul
pop
ja
jl
mov
into
mov
mov
xchg
add
test
int3
mov
scas
xor
sbb
mov
pop
mov
loop
rol
lea
test
pop
push
xor
sbb
jmp
nop
inc
xor
adc
add
or
sub
(bad)
pop
jle
jmp
(bad)
sub
or
or
dec
jne
sub
aam
les
call
cwde
arpl
lea
xor
mov
mov
out
ret
mov
cwde
dec
mov
fldenv
adc
ret
jecxz
enter
add
mov
sbb
and
iret
neg
test
pop
add
dec
or
inc
neg
mov
add
imul
(bad)
js
stos
sub
or
and
je
mov
std
inc
jecxz
bound
sub
jb
sbb
retf
retf
push
and
cdq
jmp
loop
push
add
adc
jmp
jo
or
or
pop
pop
push
(bad)
cdq
scas
xor
lods
pop
scas
es
pop
jmp
std
fs
mov
fdiv
and
add
pop
xor
test
mov
jmp
jae
aad
or
add
js
jne
push
inc
or
push
push
test
mov
test
adc
and
leave
pop
mov
(bad)
(bad)
mov
popf
test
add
sar
push
aad
add
test
nop
sbb
xor
push
fiadd
int3
fucomi
sar
xor
in
add
lds
rol
push
inc
mov
clc
(bad)
stos
add
mov
adc
add
xchg
mov
add
ss
ja
js
and
mov
xchg
add
cmp
(bad)
cmp
call
clc
push
add
cmp
xor
pop
sbb
inc
or
shl
sub
or
inc
dec
cmp
icebp
mov
adc
loop
add
(bad)
movs
retf
out
dec
adc
add
call
mov
sub
add
and
or
or
xchg
push
pop
std
push
sub
add
push
xchg
lods
and
jecxz
paddsb
aas
pop
mov
dec
add
sysret
xchg
enter
adc
xchg
push
or
lods
mov
adc
sub
mov
ret
xchg
dec
xor
in
pop
xor
ret
adc
inc
adc
push
rcr
lods
mov
push
push
add
mov
push
sbb
(bad)
jo
or
pop
xor
push
sbb
add
mov
hlt
int3
sbb
add
sbb
(bad)
jmp
scas
cs
add
sub
sub
mov
push
push
jbe
cmp
fisttp
inc
add
data16
fisub
ret
idiv
ss
sahf
(bad)
cmp
loope
je
das
jno
pop
pop
jg
mov
or
jne
pop
loopne
mov
cmc
or
or
(bad)
ins
ins
punpckhbw
push
or
sbb
leave
ret
div
fisttp
xor
add
mov
and
adc
test
jno
and
popa
xor
jns
mov
lar
or
inc
dec
jge
mov
leave
or
leave
sar
cld
lods
mov
mov
cmp
call
sbb
fcmovnu
fidiv
sub
and
mov
cli
sub
add
add
ds
fimul
pushf
sbb
push
repz
mov
dec
mov
push
call
push
add
retf
sbb
or
std
out
push
js
sub
jmp
and
pop
push
mov
or
cmp
mov
imul
lock
(bad)
and
(bad)
inc
fsub
adc
in
(bad)
js
mov
xchg
pop
lea
sbb
sar
das
xchg
outs
cmc
push
lock
out
cmp
add
jge
dec
or
dec
push
popa
shr
xor
xchg
adc
lock
jmp
add
gs
ss
jp
push
ret
xor
jg
sahf
xor
fs
(bad)
jne
cmps
xor
mov
lock
mov
rcr
inc
add
jne
cdq
mov
pop
jge
add
ja
or
xor
inc
jae
sahf
mov
test
lea
mov
cli
sti
sub
cmp
jb
movs
jo
or
push
loopne
jne
mov
scas
repnz
mov
add
push
lock
je
lock
fisttp
les
or
fist
or
sbb
clc
jmp
sbb
out
pop
pop
arpl
je
in
(bad)
pushf
pop
out
or
icebp
sbb
cld
xchg
nop
sub
cli
loope
pushf
sahf
popa
cmp
sbb
pop
push
and
daa
mov
clc
test
rcl
or
cmp
(bad)
fstp
pop
aad
pop
and
gs
xor
sbb
jl
jb
inc
xor
fs
pop
aas
fdivp
mov
jmp
dec
loopne
xor
inc
sub
mov
xor
daa
jno
inc
or
mov
jecxz
inc
jle
push
push
loopne
mov
pop
jmp
sub
cmp
inc
shr
xor
dec
jbe
hlt
add
inc
push
addr16
add
jecxz
imul
clc
dec
adc
sbb
sbb
hlt
push
mov
lock
mov
cdq
xchg
call
js
jbe
in
arpl
add
inc
js
jo
test
adc
inc
xor
movs
push
jge
push
dec
dec
addr16
mov
cmp
dec
rcr
mov
ret
mov
cmp
add
push
out
aas
xor
and
inc
adc
dec
jae
push
inc
and
push
push
test
aam
out
je
jnp
adc
cli
push
adc
push
loopne
dec
add
ins
mov
daa
inc
inc
gs
or
outs
outs
mov
xor
imul
dec
outs
dec
sbb
outs
imul
adc
gs
jo
(bad)
or
jo
mov
or
add
or
outs
ja
gs
es
mov
ja
or
ret
in
or
jmp
fild
test
push
inc
pop
retf
add
jle
mov
arpl
push
jo
inc
push
dec
outs
ja
shr
add
pop
lock
cmps
inc
mov
push
add
push
in
sub
ja
arpl
push
xor
data16
fist
sbb
xchg
in
adc
pop
adc
adc
push
mov
xchg
out
inc
fwait
push
pushf
jno
imul
jle
jb
data16
jb
outs
data16
inc
ins
cdq
(bad)
push
pop
imul
sbb
mov
mov
pop
push
rcl
adc
and
ins
aaa
das
push
and
mov
or
je
add
in
mov
xchg
adc
push
imul
sbb
cmp
xchg
scas
mov
sbb
and
out
mov
es
add
xchg
loope
jo
cmovb
(bad)
loopne
adc
and
push
aaa
pusha
xchg
or
arpl
or
imul
or
sti
xor
lahf
out
repnz
outs
jne
jne
je
sub
mov
sahf
ret
ret
ins
bound
push
xchg
mov
cmps
jbe
fs
(bad)
js
iret
(bad)
and
jbe
add
je
ins
rol
inc
adc
xchg
fs
or
ins
jle
adc
mov
sbb
out
lock
push
aam
push
ror
add
or
sub
ss
add
sbb
imul
loopne
int3
addr16
pop
or
or
xor
popa
mov
inc
cs
lds
fbstp
inc
mov
xchg
ret
ins
xor
fs
or
dec
gs
jbe
push
test
xchg
or
adc
les
out
cmp
xlat
or
cs
imul
jnp
xlat
iret
xor
jnp
cld
pop
mov
sub
popf
add
lods
rol
or
add
pop
push
sahf
push
or
mov
push
jmp
xchg
ins
ins
inc
jnp
xor
inc
push
adc
push
fdivr
es
popa
adc
adc
nop
repz
adc
in
mov
push
mov
dec
dec
fmul
adc
int
cs
pop
lock
clc
or
jmp
in
or
pop
xchg
or
ins
adc
fisubr
adc
and
or
outs
scas
add
inc
and
push
(bad)
jb
jl
adc
xchg
stos
pop
rcr
add
and
pop
imul
inc
nop
or
cmp
or
hlt
leave
aaa
and
push
fcomp
mov
stos
inc
adc
push
pop
and
and
test
push
push
mov
dec
xor
ins
jo
popa
addr16
add
cmp
pop
jae
push
cmp
jl
mov
push
dec
dec
dec
inc
in
(bad)
(bad)
out
es
push
pop
dec
inc
push
inc
inc
pop
dec
dec
push
inc
or
pop
jb
mov
dec
bound
inc
sub
dec
ds
adc
xor
daa
adc
mov
lock
xor
add
inc
mov
repz
out
or
or
push
pop
inc
in
push
pop
rcl
add
lods
cmps
imul
add
xchg
sub
dec
inc
mov
cld
sbb
ins
sub
ins
aas
sbb
(bad)
jne
mov
nop
inc
push
sbb
inc
push
aaa
cwde
pop
xchg
inc
adc
inc
inc
pop
inc
inc
xchg
lock
push
inc
and
pop
int3
cmps
dec
shr
mov
mov
inc
dec
pushf
sub
loopne
std
je
daa
push
cmp
adc
xor
or
xchg
jae
outs
inc
push
push
pop
nop
jge
mov
sub
adc
mov
imul
jo
jb
add
loopne
sub
inc
out
push
(bad)
xchg
pop
ret
or
mov
add
push
dec
ror
mul
jecxz
or
mov
and
cli
ss
xor
sbb
xor
mov
sub
sti
xchg
mov
inc
mov
dec
dec
dec
dec
xor
div
pop
das
push
dec
inc
inc
inc
inc
dec
xor
mov
out
das
pop
dec
inc
hlt
dec
inc
push
xor
stc
inc
push
push
push
dec
mov
in
imul
out
dec
dec
push
int3
in
enterw
das
in
retf
dec
inc
dec
push
cld
push
dec
add
adc
scas
sbb
inc
pandn
das
xor
dec
ds
dec
sub
dec
sbb
loop
pop
sub
push
sub
push
lods
jae
xor
or
clc
mov
push
adc
pop
inc
or
adc
les
or
outs
sub
inc
inc
push
addr16
adc
pop
push
fist
mov
pusha
arpl
jo
mov
or
mov
bound
mov
inc
dec
out
dec
scas
scas
lods
retf
(bad)
rol
dec
mov
shl
xor
xchg
(bad)
xor
inc
dec
stos
jle
xchg
or
gs
jb
in
jmp
jo
and
(bad)
call
gs
add
pushf
cmp
pop
or
pop
inc
popw
xchg
les
cmp
pop
dec
push
or
ins
ins
mov
sub
cmp
clc
push
pop
imul
out
adc
sub
pop
inc
mov
popa
cmp
js
xor
mov
push
jnp
inc
das
pop
push
shl
mov
das
(bad)
pop
enter
ret
(bad)
cwde
das
push
fldenv
vpmacssdqh
mov
pop
push
mov
xor
in
pop
lods
fs
inc
xchg
inc
push
push
add
or
push
adc
cmp
jecxz
inc
ds
je
cs
push
mov
pop
(bad)
xor
inc
arpl
shl
adc
push
sahf
ja
adc
ret
sbb
outs
xlat
ins
xor
or
cmps
shr
das
and
or
test
xchg
stos
fimul
or
mov
or
adc
ins
aam
or
aas
cld
sub
dec
and
aad
bound
imul
and
jmp
fld
ret
and
dec
or
mov
int3
push
adc
sahf
push
ins
cli
daa
adc
inc
sbb
jae
push
ins
push
lds
mov
cs
inc
inc
push
pop
adc
inc
inc
inc
inc
push
push
inc
pop
cmp
mov
xchg
mov
mov
loopne
xor
imul
inc
jno
adc
shld
sub
call
xchg
cmps
sbb
sbb
addps
rcr
xchg
fstp
dec
xchg
xor
nop
pop
cmp
retf
push
(bad)
mov
push
sub
cmps
mov
inc
shr
or
inc
gs
xor
imul
dec
push
in
ss
fs
jb
fsubr
adc
ds
imul
inc
inc
enter
mov
dec
shl
popa
psrld
mov
inc
add
pushf
dec
mov
js
xor
add
dec
xor
mov
rcr
pop
jae
or
push
mov
dec
sti
ins
push
popa
jo
fsubp
jnp
pop
push
sub
outs
xor
test
push
aas
pop
cld
mov
sub
xchg
stos
daa
pop
push
dec
movs
add
shr
push
inc
cwde
int3
inc
sub
data16
adc
pop
(bad)
hlt
push
addr16
pop
ror
pop
xchg
push
jne
bound
or
ror
push
push
dec
jo
fs
or
push
inc
test
mov
sub
dec
cmps
and
in
mov
dec
sbb
rcr
fdiv
lods
pop
sti
inc
pop
clc
ss
das
mov
sbb
sub
xchg
retf
iret
xor
arpl
add
mov
jns
xchg
fldcw
push
ss
sub
repnz
add
dec
add
adc
inc
imul
mov
cmp
mov
or
in
in
aam
pop
mov
or
xor
push
xchg
mov
jae
or
push
hlt
add
add
scas
pop
xchg
inc
ins
hlt
test
inc
push
pop
imul
imul
xchg
pop
in
jo
fsubr
or
mov
add
push
dec
push
xadd
inc
sbb
and
add
outs
inc
dec
or
je
int
or
jb
call
ss
lds
test
mov
jo
cmp
ret
sti
or
dec
add
xor
jge
and
ret
cmp
xor
or
cdq
sbb
inc
xor
es
ss
lods
rcl
inc
push
(bad)
jae
push
dec
outs
je
mov
adc
mov
pop
mov
lods
or
fcom
pop
push
cmp
xor
(bad)
outs
ins
bound
outs
js
push
cmovo
cs
mov
hlt
xor
sub
add
pop
cmp
add
mov
jns
adc
aaa
jecxz
icebp
sub
push
push
push
inc
rol
in
stos
sbb
fs
inc
mov
push
push
popa
stos
or
ja
or
mov
pushf
fmul
movs
mov
sahf
pushf
xchg
nop
bound
shl
and
daa
ins
nop
nop
outs
mov
dec
dec
dec
jl
je
dec
dec
dec
dec
ins
push
dec
dec
pop
pop
push
dec
sub
mov
outs
daa
inc
cmovo
xor
sbb
dec
and
jl
loopne
push
jb
push
(bad)
push
add
pushf
sbb
jbe
cvttps2pi
and
in
in
sbb
adc
in
in
or
add
xor
in
cld
popa
clc
hlt
jb
jb
lock
call
jb
(bad)
aam
jb
jb
int3
enter
jb
sar
mov
test
daa
pop
jb
mov
sub
daa
nop
mov
or
or
or
ret
sbb
push
movs
hlt
ret
sub
and
or
test
inc
sub
xchg
cmp
fwait
sbb
adc
(bad)
xor
ins
xor
sub
mov
outs
xchg
xchg
popa
popa
scas
jo
push
cmp
in
in
inc
and
setl
push
pushf
pushf
pushf
pushf
push
dec
dec
inc
pushf
pushf
pushf
pushf
inc
cmp
xor
pushf
pushf
pushf
xor
and
pushf
pushf
pushf
and
adc
pushf
pushf
pushf
adc
add
inc
sahf
pushf
add
pusha
clc
hlt
dec
dec
dec
dec
lock
call
dec
loopne
fcom
dec
dec
dec
dec
ror
enter
dec
dec
sar
mov
test
dec
dec
dec
dec
mov
dec
dec
dec
nop
mov
jl
pusha
mov
sbb
fsub
pop
sahf
pusha
punpckhbw
pushf
pushf
pusha
pop
pop
push
pushf
pushf
pushf
pushf
push
dec
dec
inc
pushf
pushf
pushf
pushf
inc
cmp
xor
pushf
pushf
pushf
xor
and
pushf
pushf
pushf
and
adc
pushf
pushf
pushf
adc
add
inc
sahf
pushf
add
pop
clc
hlt
dec
dec
dec
dec
lock
call
dec
loopne
fcom
dec
dec
dec
dec
ror
enter
dec
dec
sar
mov
test
pop
dec
dec
dec
mov
xor
jl
pushf
pushf
cmp
pushf
pushf
pushf
jo
push
pushf
pusha
pop
pop
push
pushf
pushf
pushf
pushf
push
dec
dec
inc
pushf
pushf
pushf
pushf
inc
cmp
xor
pushf
pushf
pushf
xor
and
pushf
pushf
pushf
and
adc
pushf
pushf
pushf
adc
add
inc
sahf
pushf
add
pop
clc
lock
dec
dec
dec
in
call
jb
xchg
ds
pop
pop
leave
leave
leave
leave
fcom
ror
leave
leave
leave
leave
enter
leave
leave
leave
leave
mov
leave
leave
leave
test
mov
leave
cwde
xchg
nop
mov
leave
leave
mov
mov
ins
xchg
or
cmp
pusha
xchg
xchg
xchg
xchg
pop
pop
push
push
xchg
xchg
xchg
xchg
dec
dec
inc
inc
xchg
xchg
xchg
xchg
cmp
xor
xchg
xchg
xchg
xchg
sub
and
xchg
xchg
xchg
xchg
sbb
adc
xchg
xchg
xchg
xchg
or
add
leave
leave
leave
enter
hlt
lock
leave
leave
leave
in
call
leave
leave
(bad)
aam
xchg
xchg
xchg
fcmovne
mov
xchg
xchg
xchg
mov
xchg
xchg
xchg
lods
test
mov
pushf
cwde
xchg
nop
nop
xchg
xchg
xchg
mov
jno
jl
outs
ss
cs
dec
outs
xchg
pop
pshufw
in
fs
pop
pushf
pushf
fsubr
pop
pop
push
push
dec
pushf
pushf
pushf
pushf
dec
inc
inc
cmp
pushf
pushf
pushf
cmp
sub
pushf
pushf
pushf
sub
sbb
pushf
pushf
pushf
sbb
or
pushf
pushf
pushf
or
cld
pop
leave
in
fs
clc
hlt
(bad)
leave
leave
leave
leave
in
call
leave
leave
(bad)
aam
pop
pop
sub
push
iret
adc
jo
lds
ss
pop
xchg
xchg
xchg
fcmovnb
bsf
xchg
mov
test
xchg
xchg
xchg
xchg
mov
xchg
xchg
xchg
nop
mov
xchg
cmp
xchg
xchg
xchg
jo
push
xchg
pusha
pop
pop
push
dec
dec
dec
dec
push
dec
dec
inc
rcl
dec
dec
inc
cmp
dec
inc
push
stc
sbb
lahf
xor
add
mov
phaddw
ins
add
mov
and
adc
repz
sbb
and
repnz
jmp
lods
mov
pop
bound
shr
shr
inc
inc
add
or
ins
jbe
pusha
das
pop
fsubr
pop
xor
cld
mov
push
fmul
mov
push
lock
rcr
adc
jl
jne
push
sbb
xor
pop
movs
call
inc
and
pop
or
pop
jp
(bad)
outs
inc
shl
ins
push
add
addr16
sbb
xor
dec
and
add
and
push
inc
inc
add
inc
outs
add
jae
pop
pop
inc
fcomi
or
dec
das
inc
aas
out
pop
imul
inc
push
push
movs
add
fstp
push
push
or
xor
sti
sbb
dec
jb
push
jb
jb
into
xor
sub
sbb
adc
or
in
sub
or
dec
dec
or
(bad)
in
cs
retf
adc
add
inc
outs
imul
lods
loopne
lods
ficomp
mov
bound
ja
push
das
xor
jl
mov
enter
das
xchg
and
mov
mov
outs
js
or
(bad)
daa
dec
outs
sub
dec
lahf
add
inc
(bad)
sub
ins
cmp
sub
add
inc
popf
cli
sub
push
xlat
adc
mov
leave
or
or
pop
sub
das
dec
je
pop
inc
pop
dec
not
dec
outs
daa
push
dec
imul
daa
pop
jg
xor
ror
jg
dec
and
in
jg
daa
jg
ins
fnstenv
adc
jg
xchg
xchg
je
inc
push
dec
dec
gs
or
dec
jo
xchg
sbb
adc
add
pop
xchg
add
push
outs
xchg
test
mov
mov
and
sbb
dec
cwde
jecxz
and
sub
ror
adc
or
iret
cdq
sbb
dec
add
mov
push
xchg
movs
fsub
scas
loopne
xchg
adc
add
mul
sub
add
pop
mov
xlat
clc
aaa
jns
or
sub
in
push
or
ss
lock
adc
inc
fsub
sbb
pop
dec
outs
das
leave
leave
not
cwde
lock
psllw
leave
leave
leave
leave
repz
cmc
test
leave
leave
idiv
stc
cli
leave
leave
leave
leave
sti
cld
std
dec
leave
leave
leave
jmp
loope
leave
leave
leave
leave
jecxz
in
leave
leave
leave
leave
out
jmp
leave
jmp
in
out
leave
leave
leave
leave
out
rcl
ror
leave
leave
leave
rcl
aad
leave
leave
leave
leave
xlat
fcomp
fcmove
leave
leave
leave
fcmovnu
fstp
leave
leave
leave
leave
ffreep
rol
leave
leave
leave
ret
(bad)
(bad)
leave
leave
leave
(bad)
enter
leave
leave
leave
retf
int3
int
leave
leave
leave
leave
iret
mov
mov
leave
leave
leave
mov
mov
leave
leave
leave
leave
mov
mov
leave
mov
leave
leave
leave
mov
leave
leave
leave
mov
leave
leave
leave
cmps
test
stos
leave
leave
leave
leave
stos
lods
lods
scas
leave
leave
leave
leave
scas
nop
xchg
xchg
leave
leave
leave
leave
xchg
xchg
xchg
xchg
leave
leave
leave
leave
xchg
cwde
cdq
call
popf
sahf
leave
leave
leave
leave
lahf
add
add
xchg
leave
leave
mov
leave
(bad)
jo
jb
leave
leave
leave
jae
jne
leave
leave
leave
leave
ja
jns
leave
leave
leave
leave
jnp
jge
leave
leave
leave
leave
jg
popa
(bad)
leave
leave
leave
leave
arpl
leave
leave
leave
leave
addr16
leave
leave
imul
leave
leave
leave
outs
push
push
push
leave
leave
leave
leave
push
push
push
push
leave
leave
leave
leave
push
pop
pop
pop
leave
leave
leave
leave
pop
pop
pop
pop
leave
leave
leave
leave
pop
inc
inc
inc
leave
leave
leave
leave
inc
inc
inc
inc
leave
leave
leave
leave
inc
dec
dec
dec
leave
leave
leave
leave
dec
dec
dec
dec
leave
leave
leave
leave
dec
xor
xor
leave
leave
leave
xor
leave
aaa
cmp
cmp
leave
leave
leave
cmp
leave
aas
and
and
leave
leave
leave
and
leave
daa
sub
sub
leave
leave
leave
sub
leave
das
adc
adc
leave
leave
leave
adc
leave
pop
sbb
mov
ret
cmp
test
adc
cwde
sbb
push
mov
pop
add
add
(bad)
(bad)
dec
or
or
push
movups
adc
adc
adc
sbb
sbb
push
pop
and
and
and
es
enter
sub
sub
sub
adc
xor
nop
(bad)
cmp
xor
adc
cmp
cmp
cmp
out
aas
adc
inc
inc
inc
inc
inc
inc
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
fs
dec
xchg
push
push
pop
add
pop
and
or
push
push
pop
pop
pop
push
or
bound
pop
pop
pop
mov
or
pop
dec
inc
mov
push
test
add
cmp
popa
bound
dec
push
leave
cmp
sub
out
leave
adc
jb
pusha
sbb
jmp
nop
adc
add
(bad)
rol
loopne
lock
add
add
in
mov
aas
inc
add
pop
add
jo
add
add
icebp
shl
rol
loopne
in
mov
inc
adc
and
jle
into
add
fnstsw
add
jo
jg
std
dec
add
outs
mov
rol
loopne
lock
(bad)
mov
and
fist
xor
inc
add
pusha
add
mov
inc
add
add
add
mov
fild
rcr
add
or
add
jnp
(bad)
adc
add
add
add
arpl
pusha
add
add
(bad)
in
inc
add
add
add
sub
add
add
pop
xor
test
jo
add
mov
rol
add
add
adc
and
xor
inc
push
push
push
pusha
push
jg
scas
jl
push
add
push
mov
rcr
loopne
lock
stc
fldcw
pop
mov
xor
inc
push
pop
pusha
pop
jo
shl
nop
pop
mov
idiv
lods
popf
fnstcw
lock
or
or
or
or
sbb
or
jo
or
out
or
(bad)
out
std
loope
mov
jle
ror
loopne
jnp
or
or
or
or
push
push
or
push
or
and
xor
jge
nop
or
or
fild
xchg
or
adc
lock
fwait
sub
adc
ret
bound
or
or
sub
nop
inc
push
or
mov
nop
retf
outs
jg
push
mov
or
es
or
or
lahf
outs
stc
ficom
or
out
add
loopne
push
or
jo
push
sub
sahf
or
movs
fisttp
mov
pop
rcl
or
fwait
or
or
adc
or
or
inc
(bad)
mov
lock
or
mov
jecxz
scas
push
jle
or
or
or
jae
or
es
jmp
or
add
or
or
gs
pop
adc
rcr
pop
jbe
or
or
mov
jo
or
ror
or
jo
and
xor
inc
push
push
push
pusha
push
jo
or
nop
push
mov
push
mov
ror
push
loopne
lock
bound
cld
(bad)
push
lar
wrmsr
cmovo
out
push
punpcklbw
jo
or
out
sbb
dec
mov
pusha
jg
imul
bswap
xchg
push
push
cmp
hlt
pop
adc
(bad)
aad
sbb
add
dec
cmps
ins
mov
mov
and
(bad)
mov
jo
adc
mov
je
mov
mov
lahf
je
jbe
loopne
lock
add
push
adc
dec
and
mov
aas
push
repz
mov
push
neg
aaa
push
adc
jno
frstor
xor
add
add
ficomp
add
mov
sub
or
dec
adc
inc
pop
dec
stos
adc
add
adc
and
xor
psubsb
mov
fild
ins
push
xor
scas
cmp
cmp
pop
mov
loopne
pop
adc
jecxz
adc
or
test
aaa
adc
and
mov
cmp
mov
scas
addr16
cmp
jp
adc
movhlps
cli
aas
dec
test
push
lahf
adc
adc
adc
aaa
adc
adc
adc
out
stos
sti
or
pusha
or
adc
push
or
xlat
stos
add
adc
shl
add
adc
pmullw
fnstsw
adc
adc
adc
adc
jbe
mov
inc
adc
push
aas
pusha
adc
add
or
sub
pop
mov
nop
mov
add
frstor
cdq
shr
pusha
retf
push
or
rol
lock
adc
jae
aaa
mov
or
jnp
and
adc
mov
jbe
adc
jo
adc
adc
push
adc
lahf
jg
inc
in
scas
adc
adc
mov
in
mov
mov
daa
jmp
not
push
inc
push
cmps
adc
push
scas
out
ja
and
mov
fidiv
shl
mov
rol
jo
dec
fiadd
add
fwait
ror
push
iret
aas
les
add
jp
adc
lods
shr
pop
es
xor
jg
pop
push
push
add
aas
add
or
push
push
mov
or
retf
mov
inc
and
sub
fild
push
das
add
sub
sbb
(bad)
fld
sti
pop
loopne
push
loopne
js
sbb
pop
mov
pop
jg
pop
mov
loopne
loopne
sti
aad
adc
hlt
adc
and
xor
inc
or
sbb
push
sbb
sbb
pusha
sbb
or
sti
nop
sbb
add
add
ror
loopne
add
lock
(bad)
cmp
sbb
sbb
pop
adc
cld
enter
xor
add
lock
retf
pusha
sbb
sbb
sbb
sbb
sbb
sub
and
pusha
and
iret
dec
addr16
push
dec
in
jnp
rcr
pop
and
add
add
lock
xlat
mov
sbb
adc
fdivr
or
adc
pop
jl
adc
push
sbb
sbb
pop
add
sbb
sbb
sbb
pcmpgtd
adc
or
bsr
ja
xor
adc
add
or
mov
cdq
movs
sbb
rcl
mov
pop
dec
inc
add
stos
pop
add
or
(bad)
(bad)
xchg
leave
add
and
push
sbb
imul
rol
or
dec
jne
out
mov
ficom
scas
add
jbe
fld
cmp
sub
add
addr16
sub
jle
sbb
aaa
sbb
or
xchg
nop
imul
add
sbb
add
add
or
or
adc
xchg
add
mov
dec
mov
shl
dec
mov
fs
movs
jg
in
pop
jbe
aad
add
adc
pop
call
jg
sbb
lods
or
xor
cmp
pop
sbb
jg
add
ficom
aas
sub
sbb
leave
les
loop
add
adc
or
adc
or
or
scas
sub
retf
push
mov
pop
jo
sub
popa
jg
adc
mov
pop
sbb
(bad)
clc
adc
lidtd
pop
fnsave
gs
nop
sub
push
fcmovne
or
or
daa
lahf
ret
pop
add
imul
lods
add
cs
fcom
sbb
push
cmp
sub
fistp
mov
sub
pop
ja
shr
push
pop
mov
inc
nop
or
mov
mov
ret
mov
xchg
add
test
in
and
pop
lahf
aas
lahf
rol
add
scas
xor
mov
sub
imul
push
pop
cmp
pop
fisub
popa
push
out
in
add
aad
mov
jge
sub
lea
push
and
or
inc
out
pop
ins
outs
daa
mov
and
jae
loopne
jno
mov
fisttp
add
popf
cmp
push
adc
add
xchg
cmp
vmread
push
mov
mov
push
add
shr
fadd
or
xor
jns
fs
jns
dec
pop
and
and
(bad)
(bad)
cmp
or
fnsave
nop
mov
and
pop
pop
das
xchg
pop
or
ret
btc
data16
add
add
div
sbb
cmp
lahf
add
inc
inc
call
sbb
add
imul
jmp
mov
mov
aas
add
pop
loope
sbb
mov
add
sbb
js
cmp
xchg
cmp
lock
sub
and
mov
sbb
sub
pusha
push
popa
inc
cmp
sbb
out
aaa
(bad)
jne
or
or
shl
sti
and
fwait
xchg
or
shl
and
lds
push
fiadd
ja
sbb
adc
adc
(bad)
cdq
aaa
dec
mov
inc
cmp
jo
add
cmp
in
stos
xor
add
xor
fbstp
sub
retf
aas
or
dec
lea
sub
mov
ins
sbb
pop
push
in
mov
push
mov
add
test
cmp
sbb
adc
xchg
outs
dec
cmc
sbb
shl
add
push
cmps
mov
int3
or
push
adc
ret
add
pop
add
rcl
adc
add
or
lahf
outs
sub
int3
mov
and
inc
xor
out
jp
gs
add
into
push
sti
mov
sbb
add
or
in
mov
or
push
pop
daa
cmp
sub
inc
pop
retf
push
xor
fadd
sbb
rcr
pop
daa
cmp
mov
pop
push
add
adc
mov
add
sub
in
arpl
mov
xor
aas
sbb
aam
out
and
sbb
gs
dec
or
movs
call
adc
loopne
xor
daa
add
add
mul
int3
ficomp
xor
add
push
mov
vpandn
or
add
jmp
pop
adc
and
sub
push
or
adc
loope
add
mov
and
es
pop
mov
mov
hlt
cmp
adc
mov
int
in
shl
sub
mov
les
icebp
or
daa
mov
add
call
xor
or
push
jmp
pop
mov
mov
outs
aas
jae
push
mov
jg
xchg
mov
sbb
mov
and
xchg
jmp
and
iret
mov
jbe
xor
or
add
test
loope
pop
add
(bad)
push
cmp
add
pop
push
sub
add
pop
or
dec
dec
leave
sbb
shl
lds
loope
rcl
adc
mov
stos
dec
imul
dec
pushfw
dec
cmp
inc
xchg
and
lahf
xor
fsubr
jg
mov
push
ret
nop
sbb
in
or
xchg
adc
ror
sbb
aad
mov
pop
mov
push
mov
loopne
aaa
push
aas
lock
loope
les
sbb
test
dec
daa
pop
std
pop
inc
test
pop
jecxz
shr
jg
ret
iret
or
in
push
lods
lahf
xchg
add
(bad)
(bad)
pop
dec
or
push
sbb
lahf
dec
mov
add
adc
and
das
lea
nop
sbb
adc
inc
mov
je
test
mov
imul
stc
dec
scas
sub
inc
(bad)
in
add
pop
xchg
push
sbb
mov
cmp
or
mov
or
xor
pop
pop
push
pop
and
mov
mov
sub
in
scas
inc
ret
bound
add
add
add
or
add
in
dec
add
push
push
add
dec
inc
stos
sub
or
or
adc
smsw
add
and
dec
and
nop
sub
add
les
and
sub
sub
add
nop
add
daa
in
or
adc
and
mov
add
and
mov
or
pop
sbb
inc
pop
push
ficom
pop
pusha
mov
adc
daa
les
ficom
or
out
pop
mov
cmps
shl
aam
inc
aas
adc
sbb
or
mov
xchg
shr
bnd
push
jmp
inc
push
add
pop
xchg
xor
dec
dec
sub
imul
rcl
je
out
jp
loopne
pop
lock
sbb
fild
push
pop
(bad)
xchg
call
add
add
push
add
push
dec
mov
or
add
pop
rcr
das
dec
lock
add
add
or
mov
jo
add
mov
mov
or
push
dec
push
cmp
data16
(bad)
adc
or
dec
dec
dec
dec
adc
sbb
ins
add
and
jmp
fadd
jg
das
shl
add
dec
loopne
and
shr
dec
push
dec
jb
xchg
add
xor
xchg
sbb
and
pop
inc
(bad)
lods
stos
arpl
jg
inc
inc
mov
adc
jmp
pushf
pushf
mov
adc
push
and
sbb
mov
pusha
jg
pop
xor
and
daa
daa
inc
dec
dec
and
xchg
xchg
push
push
push
lahf
mov
xor
and
inc
rdmsr
dec
add
js
inc
(bad)
aas
push
lods
mov
(bad)
aas
(bad)
std
(bad)
aas
sub
cdq
sbb
ret
sar
aas
lds
aas
call
mov
out
push
push
aad
pop
push
dec
fcomi
in
push
jle
das
leave
psubusw
xor
jecxz
les
je
sub
pop
push
lds
mov
stos
jmp
pmulhuw
aas
outs
aas
and
dec
adc
pop
sub
aaa
pusha
mov
jbe
je
mov
sbb
add
clc
inc
lahf
mov
and
sub
sub
sub
cs
pop
add
adc
aas
aam
sub
sub
js
scas
lahf
mov
es
jecxz
iret
jg
xor
add
pop
(bad)
inc
inc
adc
dec
outs
getsec
cmp
cmp
cmp
cmp
aas
pop
inc
add
(bad)
das
inc
daa
daa
daa
mov
pop
inc
inc
inc
inc
daa
daa
daa
daa
inc
inc
inc
inc
or
daa
daa
inc
dec
dec
mov
adc
inc
movs
push
or
aam
push
mov
sub
imul
sbb
sub
test
pop
inc
mov
mov
dec
jo
scas
jo
enter
(bad)
pop
mov
dec
into
push
mov
pop
dec
fucom
jg
jb
push
mov
pop
icebp
rep
movs
push
stc
cmc
fisttp
popa
cmp
(bad)
mov
mov
or
dec
and
cmp
mov
outs
ret
out
mov
dec
aas
lahf
cmovl
ds
jno
pushf
dec
pop
jmp
(bad)
push
call
loopne
or
jne
pop
movs
test
sbb
pop
pop
sub
js
push
mov
das
scas
add
mov
jg
fisubr
pop
mov
mov
dec
lahf
(bad)
dec
mov
mov
popa
adc
popa
inc
sub
test
sub
xchg
outs
pop
adc
adc
adc
fbstp
mov
cmp
inc
cs
xchg
sbb
push
adc
or
outs
aas
add
mov
pop
mov
push
or
jg
das
inc
lods
sub
call
sbb
(bad)
mov
aas
add
test
cmovl
or
mov
inc
mov
out
add
mov
add
mov
add
imul
or
(bad)
std
cmps
cmp
nop
add
mov
retf
mov
dec
aaa
xor
and
add
sahf
cmc
(bad)
dec
clc
jne
and
mov
adc
stos
add
push
mov
cmp
add
push
dec
dec
mov
ins
xchg
lods
add
add
sub
daa
lods
std
mov
and
ret
dec
mov
and
lods
sti
and
idiv
mov
movs
into
xor
mov
xor
sbb
jmp
sub
enter
popa
push
add
fbstp
or
jge
and
push
and
jb
sub
jne
bound
mov
or
adc
mov
and
mov
dec
je
jb
adc
pop
and
xor
std
cmps
loopne
ss
cmp
pop
mov
inc
cmp
jle
push
add
inc
push
sbb
or
or
loop
fsubr
push
xor
mov
dec
adc
add
sub
retf
add
xchg
jmp
cld
adc
dec
adc
mov
add
add
mov
lods
aam
add
into
xchg
push
and
in
rcl
jl
cmp
call
sub
add
(bad)
sbb
mov
pop
sbb
mov
loop
rol
ins
mov
add
in
jae
in
dec
cmp
pusha
push
mov
in
pop
add
jg
mov
shl
rol
and
and
out
inc
fbld
dec
sbb
sbb
scas
add
(bad)
and
mov
rcl
inc
ds
rcl
mov
push
out
fs
iret
enter
frstor
repnz
jbe
loopne
or
(bad)
jae
adc
pop
in
sbb
pushf
cmp
push
sbb
cmps
xchg
mov
cs
addr16
jns
dec
push
cld
jmp
in
dec
xor
jmp
ja
mov
sub
mov
sahf
sbb
add
xor
repnz
(bad)
sbb
pushf
mov
icebp
cld
cmp
cwde
lock
inc
out
hlt
iret
enter
in
lock
in
je
and
jmp
push
mov
push
loopne
(bad)
and
jmp
fadd
out
sbb
int3
sub
pop
rcl
(bad)
pop
les
leave
xor
cmp
shl
mov
iret
mov
inc
lahf
cld
xchg
inc
add
popa
add
dec
push
dec
les
sbb
clc
jbe
(bad)
push
or
add
jo
jle
sahf
xlat
cld
data16
push
arpl
cs
adc
sbb
adc
jle
mov
jnp
jecxz
adc
jae
and
iret
ds
adc
ror
ins
jne
gs
cmp
sbb
outs
imul
and
sub
sub
add
scas
and
sbb
mov
loope
sti
cmp
or
pop
push
adc
mov
inc
inc
adc
inc
xchg
jno
popf
inc
jge
inc
mov
inc
lock
int
fld
mov
push
add
pop
enter
les
push
or
or
inc
jae
sub
push
jmp
repz
in
pop
add
add
or
retf
jbe
pop
or
retf
cwde
enter
push
inc
and
push
repnz
dec
inc
push
xchg
add
cmp
sbb
retf
jmp
and
push
ss
and
es
int
test
gs
retf
stc
lds
or
inc
dec
aas
add
loop
add
sbb
int
ret
retf
xchg
sub
add
in
and
loop
retf
add
and
(bad)
retf
pop
sub
cmp
(bad)
fild
jo
cs
pop
pop
pop
or
mov
lock
jae
dec
or
fadd
jmp
jne
bnd
xchg
inc
add
cmovae
xor
fwait
mov
mov
mov
mov
jns
ficom
xor
cmp
aam
or
shl
add
push
shl
outs
pop
stos
adc
scas
push
add
pop
inc
mov
test
pop
pop
inc
das
add
repnz
movs
(bad)
push
outs
aad
(bad)
jae
add
imul
add
loop
mov
pop
or
(bad)
lods
iret
daa
or
adc
ja
jns
mov
or
inc
cs
leave
dec
and
fnsave
sub
dec
dec
in
fwait
int
adc
in
int3
mov
int
inc
call
inc
add
and
mov
pop
stos
dec
mov
adc
and
inc
and
mov
jno
dec
or
mov
(bad)
mov
cmc
(bad)
or
add
arpl
add
loopne
arpl
push
inc
push
inc
inc
arpl
ds
mov
retf
push
inc
sahf
pushf
fmul
xchg
int3
or
push
and
dec
movs
icebp
dec
shl
cli
sar
shl
out
ret
mov
push
ror
idiv
push
sar
imul
pop
adc
lock
movs
or
mov
or
neg
push
rol
aam
or
sub
jns
paddb
add
jb
sub
xchg
repz
pop
out
mov
loopne
push
push
shr
or
mov
dec
add
or
xchg
and
jnp
int3
sub
xchg
test
lahf
push
mov
inc
cmps
or
test
or
js
iret
fst
mov
ins
lahf
adc
dec
adc
es
mov
mov
add
mov
add
aam
ret
nop
adc
mov
lahf
and
add
test
inc
ins
jne
mov
and
adc
mov
or
adc
je
ror
sub
dec
pop
xor
cmc
mov
inc
rol
aas
ffreep
mov
push
popa
imul
iret
sub
stc
retf
mov
ja
shl
sbb
dec
mov
or
inc
inc
xchg
shl
or
fadd
int
ror
push
ret
push
test
inc
or
pop
aaa
inc
dec
or
push
call
pop
add
add
add
inc
fs
xchg
push
xchg
push
lods
sub
retf
and
std
fisttp
pop
sub
test
cvtps2pd
iret
mov
inc
jge
add
mov
mov
fs
mov
xlat
pop
lds
int
or
jmp
outs
and
pushf
xor
or
adc
hlt
rcl
sbb
push
sbb
dec
push
(bad)
out
sub
pusha
rol
jo
xchg
in
and
int3
(bad)
hlt
aam
cmp
in
adc
shl
xlat
pop
xor
int3
jno
mov
and
(bad)
nop
(bad)
xchg
(bad)
or
push
adc
jne
outs
inc
(bad)
and
mov
jge
adc
xlat
add
sbb
xlat
push
xlat
shr
adc
push
inc
dec
outs
je
jne
cmp
test
test
fcomp
sbb
adc
jg
inc
push
or
push
inc
fidiv
out
inc
sbb
sbb
xchg
int3
icebp
in
and
and
push
or
lods
fild
cmp
sub
mov
jg
xchg
and
lods
fst
cmp
or
pop
mov
pop
and
push
dec
xor
add
enter
fiadd
mov
inc
dec
outs
jbe
fs
jo
xor
xlat
pop
xor
xor
adc
add
daa
and
cli
and
inc
dec
mov
add
xlat
pop
xor
adc
add
leave
les
outs
scas
clts
inc
inc
bound
pop
sbb
add
aas
mov
push
push
push
ins
das
jnp
and
and
retf
push
fs
inc
jo
or
stc
wbinvd
out
adc
sub
outs
outs
sbb
push
inc
dec
gs
popa
xor
and
inc
outs
push
xor
pop
xor
(bad)
push
orps
lea
or
lock
add
pusha
mov
inc
mov
adc
dec
sub
jl
call
sbb
inc
mov
aam
dec
add
cmps
or
mov
data16
inc
and
sbb
fnstenv
xchg
mov
or
xchg
mov
dec
fsub
push
push
xor
jbe
nop
fbld
sub
mov
pop
pop
fidiv
mov
pop
xor
daa
lock
loopne
inc
dec
add
push
loopne
loopne
(bad)
arpl
nop
loopne
sub
mov
pushf
pop
add
out
inc
clc
loopne
adc
xchg
mov
imul
daa
xchg
pop
xlat
and
and
inc
dec
add
mov
aaa
dec
stos
xchg
loope
xchg
inc
pusha
(bad)
in
pop
and
adc
dec
dec
add
enter
loop
loop
dec
mov
or
dec
xchg
add
add
or
add
stos
mov
aaa
outs
sbb
out
dec
pop
popf
mov
push
inc
js
and
and
cwde
jecxz
jecxz
mov
js
or
mov
enter
dec
and
inc
in
xchg
and
in
in
pushf
pushf
inc
ds
jo
add
and
adc
pusha
push
jb
rcl
sar
mov
sub
inc
out
in
mov
mov
je
jp
pop
outs
sbb
dec
sub
pop
and
and
adc
xchg
cmp
sbb
stos
xchg
xchg
out
out
adc
iret
pop
mov
sbb
pop
(bad)
in
jo
xor
jge
xor
xor
adc
in
mov
out
lea
inc
lock
dec
or
enter
cmps
pop
and
or
sbb
xchg
(bad)
sbb
add
adc
and
mov
and
and
adc
push
imul
into
pop
sub
sbb
lahf
stos
mov
call
pop
retf
push
adc
out
lods
push
adc
addr16
jo
rol
and
mov
dec
jo
fstp
pop
pop
lock
jle
dec
fnstcw
add
push
inc
das
mov
push
sub
push
xlat
and
and
das
(bad)
jmp
add
or
mov
cld
inc
jb
push
mov
sub
psrld
scas
out
sub
push
shl
mov
and
mov
jo
push
nop
jmp
jmp
dec
add
jmp
and
dec
dec
outs
ins
jns
push
xor
pop
and
push
cmp
neg
and
sub
inc
lock
push
push
fisttp
fs
iret
pop
mov
push
mov
cmp
fiadd
push
mov
addr16
sub
sbb
adc
fs
pop
sub
xor
pop
test
add
mov
inc
bound
movs
jb
out
dec
iret
pop
sub
push
mov
and
(bad)
mov
loopne
sub
sub
pop
sub
push
pop
fsub
inc
jge
adc
in
add
xlat
pop
out
jge
cdq
add
or
push
push
shl
fdivr
pcmpgtd
cwde
out
xchg
shr
out
add
mov
arpl
pop
xor
es
lock
mov
lock
lock
pop
div
ret
mov
adc
cli
inc
lock
cmp
sbb
icebp
clc
(bad)
clc
out
xor
or
adc
sbb
pop
xor
sub
daa
adc
lods
icebp
ja
mov
adc
add
mov
pushf
rol
popf
aaa
sbb
inc
and
je
test
jl
xor
or
popf
or
xor
push
sbb
and
neg
sub
or
loopne
repz
jae
ret
mov
iretw
pop
sub
ds
adc
out
outs
mov
adc
(bad)
inc
clts
push
and
les
sbb
mov
mov
and
inc
movs
fcomp
push
pusha
dec
adc
add
(bad)
pusha
fadd
dec
imul
imul
fstp
(bad)
ss
outs
daa
adc
inc
push
sar
cmp
and
xchg
idiv
xor
jmp
js
xor
sbb
sar
in
xor
adc
sub
push
sahf
movd
out
cmp
movzx
loope
int3
ret
leave
leave
leave
dec
or
adc
mov
and
and
je
cmp
repz
mov
retf
clc
mov
inc
sbb
push
jmp
pop
out
push
or
xor
add
add
ins
and
or
xor
xor
push
imul
cmp
xor
mov
xor
aaa
mov
pusha
aaa
mov
adc
nop
outs
ror
dec
fwait
das
sbb
ror
in
sbb
cmp
sbb
xchg
xor
add
fld
(bad)
in
lods
stc
imul
sbb
dec
pop
mov
aas
fs
xchg
pop
push
or
adc
push
pop
jno
xor
jmp
push
push
ja
outs
sbb
fsub
je
arpl
adc
mov
scas
mov
pop
sub
adc
sbb
add
mov
or
xchg
fldlg2
adc
fld
cmp
dec
nop
gs
dec
or
inc
dec
fidiv
inc
(bad)
jp
jne
pop
dec
clc
or
cwde
test
lods
mov
and
pop
push
and
sub
dec
lds
dec
stos
push
xchg
movs
xor
or
daa
mov
imul
mov
push
dec
push
add
es
pop
pop
test
(bad)
out
adc
adc
sbb
push
loopne
sbb
pop
and
fs
gs
ins
out
std
cwde
cld
mov
cs
or
adc
cmp
or
in
popa
and
sbb
inc
in
fisttp
and
mov
inc
daa
bound
mov
dec
xor
imul
or
imul
test
and
jg
stc
ret
cli
push
test
sti
mov
imul
adc
inc
pop
test
mov
lahf
rol
add
jo
jo
nop
popa
inc
add
sahf
dec
imul
push
lds
ss
mov
mov
nop
imul
rol
xchg
pop
shr
inc
clc
jb
or
rcl
rcr
pusha
jo
pop
mov
and
aam
aam
out
out
shl
push
aad
test
jns
arpl
js
sub
xchg
js
jb
leave
imul
add
add
mov
add
outs
sbb
(bad)
or
test
xchg
and
mov
or
sub
xor
cs
jno
ja
arpl
repz
stos
or
pop
sub
sti
cmp
ret
pop
mov
je
pop
and
jae
cmp
adc
dec
cmp
dec
push
dec
dec
xchg
jb
lahf
mov
mov
std
imul
or
rdmsr
pop
enter
sahf
sub
and
mov
push
ret
inc
pop
jp
dec
(bad)
or
adc
add
(bad)
dec
sub
leave
into
adc
lahf
fmul
stos
dec
pop
dec
sti
inc
sub
pop
enter
repz
jl
adc
add
mov
mov
xor
mov
xlat
nop
mov
adc
or
mov
scas
pusha
mov
bound
scas
das
pushf
add
in
mov
fild
in
sbb
call
and
scas
rol
pop
inc
jge
inc
inc
fbld
lea
push
arpl
mov
out
and
(bad)
xchg
xchg
xchg
xchg
add
mov
pushf
pushf
cmp
inc
add
lods
loope
dec
inc
sahf
push
add
xor
pop
add
daa
daa
mov
xchg
xchg
xchg
pop
xchg
(bad)
cld
in
leave
enter
cli
inc
or
in
outs
cmps
int3
inc
or
jns
xor
mov
cmp
inc
sahf
pushf
pushf
lahf
jecxz
or
and
dec
scas
repz
or
daa
mov
leave
enter
xorps
push
adc
pop
xchg
cmps
mov
add
add
div
test
int3
fisttp
call
and
add
mov
movs
jecxz
popa
mov
pushf
jno
push
sbb
adc
dec
add
or
add
inc
pop
sbb
pop
aam
popfw
add
or
sbb
scas
jl
adc
add
adc
or
sub
ret
xlat
inc
jo
push
xchg
push
ret
(bad)
outs
jge
sub
mov
sbb
pop
(bad)
dec
test
xchg
add
fild
xlat
push
lock
mov
mov
jb
inc
fldcw
in
loopne
inc
fdivr
mov
leave
push
jb
(bad)
fs
in
or
and
lock
adc
leave
inc
shl
shl
nop
cmp
popa
clc
inc
jl
push
fwait
xchg
mov
xchg
sbb
in
clc
adc
and
lahf
inc
xor
add
sbb
xchg
push
lds
mov
jecxz
push
or
add
imul
outs
mov
add
adc
sti
sti
push
in
xchg
repnz
mov
add
dec
out
adc
hlt
xchg
or
(bad)
and
(bad)
shr
mov
sbb
push
rcl
add
jo
push
add
and
fimul
outs
jo
push
outs
adc
add
(bad)
in
or
sbb
sub
stc
push
bound
adc
xchg
inc
add
in
inc
jnp
or
inc
outs
jae
gs
pop
dec
pop
and
and
test
add
lahf
mov
in
or
lea
dec
test
jmp
or
xchg
mov
dec
xchg
pop
enter
adc
xchg
bound
xchg
mov
repnz
mov
inc
xor
leave
clc
inc
test
adc
mov
fist
adc
dec
lods
loope
adc
or
add
push
and
xchg
sbb
inc
int3
adc
in
xlat
and
enter
add
lods
pusha
js
rcr
sti
in
and
add
movs
ret
add
ja
(bad)
jae
push
dec
add
push
mov
lods
(bad)
or
jo
sub
aad
xor
in
add
sub
mov
pusha
adc
xor
in
repnz
add
fmul
xchg
cmp
ins
es
sub
inc
daa
imul
or
(bad)
ins
out
(bad)
sbb
jl
pop
or
pushf
lahf
int3
push
fbstp
ficom
or
pop
or
call
ins
push
xchg
add
out
pop
loope
xor
mov
rol
loopne
or
adc
pop
in
retf
cmp
cmp
sbb
dec
shl
add
cdq
add
ss
in
sub
and
and
push
movs
or
jae
or
pop
lods
(bad)
jmp
outs
arpl
imul
iret
pop
sub
inc
jno
inc
adc
push
outs
mov
iret
cmp
(bad)
jmp
jns
test
les
adc
mov
rcl
cmp
clc
xor
xchg
inc
iret
dec
jae
sbb
out
push
inc
add
pop
add
das
add
pushf
rol
mov
inc
dec
jae
mov
push
xchg
or
pop
cmp
(bad)
cmp
add
add
mov
sbb
jnp
sbb
jb
xchg
out
rol
sbb
cmp
sahf
inc
fst
dec
daa
and
mov
sbb
xchg
xchg
daa
daa
out
sbb
leave
enter
sbb
cmp
ja
sub
jns
leave
sub
ins
scas
sahf
pushf
mov
and
jl
in
mov
scas
stos
pmaxub
add
add
and
std
jb
add
add
or
adc
and
rol
mov
and
mov
data16
sbb
mov
call
push
pop
dec
ret
retf
push
test
pop
dec
les
fiadd
fadd
and
and
add
retf
cmp
adc
mov
add
call
adc
pop
adc
(bad)
adc
addr16
adc
adc
shl
sbb
in
lock
js
in
fsub
not
xor
adc
ins
push
pop
aas
test
adc
adc
dec
imul
or
add
add
inc
inc
cmp
and
pop
pop
outs
movsx
add
or
loopne
mov
dec
xchg
cmp
dec
in
xchg
pop
cmp
dec
enter
jmp
inc
popa
add
sbb
and
add
or
sar
mov
movs
pop
or
xchg
dec
mov
sub
fcomp
add
arpl
pop
or
push
and
ins
daa
jp
scas
dec
(bad)
or
add
stc
xor
movs
add
add
or
stos
add
(bad)
in
enter
add
or
jmp
push
push
fs
into
mov
cmp
iret
jg
test
push
add
adc
adc
mov
adc
fucom
ret
imul
sar
int
push
sbb
or
mov
pop
jnp
shr
push
mov
mov
pmulhw
mov
add
ss
jne
pusha
and
popa
add
mov
or
mov
rcl
xor
aaa
sbb
xchg
jl
add
rol
leave
or
push
test
or
sub
jo
or
pop
test
add
ror
in
iret
or
bound
sbb
adc
mov
or
add
xor
mov
adc
or
adc
and
add
pushf
out
in
cmp
das
add
jl
xor
loope
add
pop
mov
hlt
adc
pop
fisttp
xor
cld
inc
movhps
call
xchg
add
push
jmp
outs
xchg
lock
ss
or
stos
sbb
push
jnp
push
retf
rcl
cmp
dec
pop
xchg
push
push
sahf
pop
imul
add
ror
or
popf
jne
pop
sub
lods
xor
ins
inc
sub
retf
lods
or
pop
gs
mov
pusha
mov
xor
inc
popa
rep
scas
dec
push
add
or
nop
push
mov
mov
imul
mov
es
mov
fcomi
das
xor
jmp
push
iret
repz
movs
mov
dec
repz
sbb
sub
jo
adc
cmp
nop
movs
or
xchg
ds
dec
inc
push
outs
push
jmp
xchg
(bad)
xor
cmps
aas
test
stc
sub
ud2
add
(bad)
push
mov
sysret
add
scas
or
mov
xor
push
frstor
cmp
pop
daa
in
in
add
pushf
dec
add
pop
and
popf
mov
add
pop
outs
stos
shl
pop
push
and
popa
push
pop
mov
add
scas
mov
xchg
in
mov
dec
ret
(bad)
push
repnz
ds
sbb
jg
imul
outs
(bad)
in
inc
xlat
je
inc
sub
test
into
daa
unpcklps
lahf
jbe
mov
push
(bad)
int3
sbb
dec
aam
in
sbb
inc
daa
imul
mov
sub
or
repnz
dec
repnz
push
inc
aaa
je
lods
sub
push
jno
and
dec
push
and
les
sub
cmp
sub
mov
inc
inc
lds
daa
sub
lock
cmp
inc
mov
mov
sub
cmp
add
adc
push
and
in
(bad)
ror
and
jne
sub
imul
cmp
jnp
leave
inc
xchg
sub
in
mov
(bad)
cdq
nop
mov
and
inc
jb
cmp
test
sbb
nop
sub
xor
lds
cmp
das
sahf
sub
hlt
mov
push
sbb
and
dec
in
mov
repz
jb
enter
sub
sub
and
sbb
sub
sbb
and
pop
add
test
in
in
jns
mov
sub
pop
leave
test
cmp
movs
push
sub
mov
xor
add
mov
sub
push
and
push
(bad)
mov
and
sub
or
sub
push
setl
out
and
sub
ss
jbe
inc
inc
cmc
sub
or
xchg
div
jb
push
imul
inc
add
pushf
cmp
in
dec
push
mov
ds
mov
out
add
ja
sbb
mov
jb
push
adc
pop
fs
mov
loope
jne
and
mov
ins
mov
xor
xchg
add
unpckhps
xor
push
mov
sub
xlat
data16
xchg
mov
add
pop
test
sbb
xlat
(bad)
sbb
out
xor
push
jmp
and
mov
push
pop
or
xor
mov
add
les
xor
je
inc
aam
xor
mov
(bad)
sub
push
inc
scas
mov
neg
xchg
and
add
and
sbb
icebp
lods
jb
jne
das
out
jo
push
lahf
cwde
push
stc
lea
enter
daa
sti
pop
dec
mov
cmps
jno
mov
test
leave
(bad)
mov
or
ss
jo
fisttp
sbb
cmps
ret
mov
lock
es
adc
adc
push
inc
popa
xor
loope
add
mov
sub
jnp
inc
rcr
movs
(bad)
inc
rcr
dec
cmp
adc
lds
loopne
in
sbb
mov
jbe
call
sar
and
imul
jae
mov
mov
cld
cmp
inc
inc
push
popa
or
inc
add
or
daa
inc
pop
inc
dec
js
or
pusha
mov
add
xchg
stos
popa
add
and
adc
inc
ret
dec
sbb
add
dec
repnz
stos
popa
leave
adc
out
cmps
mov
mov
jne
retf
jo
adc
jo
shl
xor
das
mov
push
test
push
adc
mov
outs
repnz
cs
adc
test
add
push
ins
mov
jg
push
xlat
inc
jmp
and
data16
ficomp
adc
mov
sub
movs
mov
in
dec
add
aas
xchg
lods
add
xchg
cmc
or
adc
fsubr
xor
mov
lock
pop
and
je
cmps
jmp
mov
xor
push
jmp
sub
dec
sub
add
or
jmp
adc
xor
pop
cmp
inc
sub
dec
add
and
and
pop
add
aaa
test
xchg
lods
adc
adc
jg
add
mov
fldcw
into
pop
push
ror
or
pop
adc
or
mov
imul
mov
add
dec
jl
mov
inc
cmp
jne
aaa
mov
nop
sub
add
cmp
jnp
mov
add
pop
inc
push
ret
pop
les
pop
sbb
popa
dec
jne
inc
jbe
mov
add
ret
push
inc
loopne
test
mov
dec
sti
adc
pop
mov
iret
imul
unpckhps
out
mov
add
rcr
pop
add
xchg
jle
inc
adc
mov
mov
mov
add
ss
outs
scas
pop
ins
loopne
cli
ja
xor
bt
loopne
or
loopne
shr
cmp
xchg
mov
push
dec
(bad)
shrd
mov
sbb
jl
push
pop
jo
mov
jmp
add
lock
pusha
add
loopne
dec
push
cmp
cmp
out
test
push
pop
inc
or
or
or
push
call
pop
xor
daa
jl
xor
sub
push
adc
and
push
rcr
push
imul
idiv
bsf
shr
add
add
jns
je
push
adc
sub
pop
pop
pop
inc
mov
fmul
aaa
movs
inc
ret
sub
stos
ins
loopne
pop
xor
clc
in
repz
or
inc
sahf
cmp
push
pop
icebp
(bad)
movs
and
sub
jg
sub
pop
add
stos
xchg
push
or
sub
mov
jle
cmp
jg
aaa
sub
push
(bad)
fbld
sbb
stc
pop
jg
movzx
cmp
jne
mov
pusha
jns
mov
sub
adc
lock
add
neg
ret
pop
add
add
push
push
push
push
mov
cld
sub
add
xor
mov
dec
jbe
clc
xchg
add
je
mov
fidiv
std
dec
cmp
je
data16
and
jmp
popa
jl
or
add
and
add
fdiv
outs
and
push
out
jp
jle
lds
cmp
pop
cmp
pop
pop
pop
ror
cmp
jne
add
nop
or
adc
mov
aam
cmp
pusha
add
sbb
mov
push
pop
out
mov
push
dec
jbe
add
push
fnstenv
jecxz
xlat
das
xchg
sub
(bad)
fdiv
inc
add
add
mov
add
xor
addr16
mov
lods
mov
fwait
inc
pusha
ins
sub
ja
or
mov
mov
clc
and
lods
fbstp
mov
jo
lods
mov
xchg
add
idiv
pop
aam
pop
xchg
dec
fdivp
mov
sbb
push
adc
adc
arpl
sbb
push
inc
add
inc
push
dec
pop
add
sub
mov
out
sub
js
jecxz
and
sbb
cmp
shl
scas
jmp
inc
cmp
jl
pop
in
and
or
out
mov
pop
dec
jns
cwde
ins
mov
retf
inc
arpl
loopne
ret
rcr
ror
mov
pop
ret
or
lock
push
popa
stos
jp
outs
cli
dec
jo
mov
xchg
cmp
dec
cmp
test
lods
mov
out
stos
xor
adc
inc
add
sub
lods
xor
push
add
cld
and
mov
xor
cmp
sub
inc
imul
push
add
push
mov
mov
scas
js
cli
cmp
mov
sub
cmc
(bad)
push
or
fidiv
or
mov
das
(bad)
push
es
jb
repz
data16
jnp
sbb
cdq
imul
inc
cdq
int
inc
add
cmp
adc
mov
and
pop
inc
shl
add
das
adc
add
mov
add
jmp
mov
jle
jne
adc
xchg
xchg
sub
mov
jg
inc
adc
je
or
or
out
das
or
ret
ret
push
aad
push
call
cmp
push
jge
dec
sub
data16
loop
pop
pop
ja
cs
push
add
popa
mov
call
mov
sub
ror
popa
xor
adc
inc
popf
mov
fmul
xchg
mov
inc
loopne
sub
sbb
push
and
paddsw
xchg
push
lea
add
shl
call
shl
pop
test
cmp
sbb
push
mov
clc
sub
addr16
add
mov
inc
jo
stos
push
jns
dec
or
mov
adc
fisttp
les
dec
jne
sahf
test
lods
jl
movs
or
lahf
dec
jle
xchg
or
shl
add
or
mov
jle
cmp
dec
push
inc
inc
cmovge
cld
cmps
cs
cmc
add
cmp
(bad)
sub
(bad)
or
dec
and
xchg
cwde
add
aaa
mov
push
pop
movs
or
fs
jo
popa
int
das
add
or
pop
sbb
sub
es
cmp
xchg
mov
mov
enter
push
stos
jle
mov
add
mov
(bad)
shr
sub
fwait
dec
jge
cli
sub
test
(bad)
rcl
mov
pop
jg
test
loope
cwde
xor
and
add
inc
ret
iret
xor
mov
xor
adc
shl
jne
cmp
test
sub
add
mov
cs
push
lods
sti
pop
enter
xor
xchg
repz
add
std
add
adc
and
xchg
add
outs
jb
mov
lahf
cld
stc
leave
loopne
cmps
jb
add
(bad)
mov
mov
jg
out
pop
mov
mov
mov
js
arpl
mov
stc
std
xchg
ret
add
jmp
mov
lea
add
std
and
(bad)
das
por
call
jb
call
mov
jmp
add
call
cmps
sbb
inc
call
cmp
or
scas
jo
loope
adc
dec
push
push
inc
popa
call
out
jp
push
lock
jne
push
xor
mov
ins
xchg
sahf
fucomi
rol
jbe
inc
adc
xor
cmps
jbe
xchg
adc
jae
mov
jae
pop
mov
pop
pop
mov
test
adc
mov
out
add
ret
push
and
xchg
and
push
push
aas
call
cmc
xchg
sub
neg
push
loopne
out
clc
add
mov
imul
mov
(bad)
enter
shl
(bad)
sub
fdivr
fild
imul
cmps
fsubr
ror
retf
add
cmps
or
pop
dec
shl
jmp
pop
jnp
outs
jp
jbe
xchg
dec
fadd
jae
imul
ins
pusha
ja
or
xor
repnz
push
leave
push
push
mov
mov
inc
xchg
pop
xlat
cmp
ret
neg
mov
mov
pop
push
sbb
jmp
sbb
add
lods
or
mov
xor
or
xor
sub
xchg
rcr
scas
outs
add
pop
or
pusha
pop
int3
inc
inc
inc
or
mov
rol
sub
push
inc
jmp
dec
aad
sub
push
ss
add
lock
add
lods
add
sub
dec
and
lods
xchg
mov
sbb
test
rol
push
je
adc
(bad)
xchg
jmp
push
imul
loopne
add
push
add
pusha
inc
pop
jns
sub
dec
or
or
or
dec
push
sti
mov
jo
dec
push
jo
stos
jg
or
mov
jne
(bad)
fcom
mov
add
sbb
jmp
nop
in
adc
test
sbb
dec
pop
cmc
add
and
in
ror
pop
(bad)
inc
inc
nop
outs
push
jecxz
xchg
cmps
mov
cmps
xor
(bad)
mov
or
xor
ss
lock
sbb
adc
and
sbb
xor
pop
sbb
add
mov
lea
and
jo
adc
sub
imul
push
sti
xor
mov
mov
lods
lock
in
or
or
ror
mov
adc
jo
je
xlat
(bad)
lds
jo
mov
or
clc
cld
sub
mov
lods
inc
ins
jmp
jns
das
scas
test
bound
sub
in
fadd
mov
inc
push
mov
in
inc
inc
fwait
mov
gs
es
add
adc
shl
stc
(bad)
lods
push
add
jne
gs
add
inc
div
push
inc
and
push
in
add
xchg
dec
in
xor
in
loopne
jmp
iret
(bad)
std
add
add
inc
gs
jmp
ror
xor
test
in
add
push
add
sahf
sbb
out
xor
inc
sub
shr
sbb
push
test
mov
mov
aaa
fs
jle
dec
and
jg
lea
add
pushf
dec
add
add
div
pop
maxps
mov
add
xchg
dec
sbb
sub
fld
add
cli
dec
test
nop
clc
or
(bad)
out
adc
dec
push
inc
loope
data16
xchg
xchg
dec
inc
add
push
je
pop
test
sub
aas
add
cmp
push
nop
add
into
mov
test
retf
mov
repz
sub
xchg
cmp
mov
inc
add
mov
(bad)
xlat
or
clc
jo
add
add
add
or
and
or
fmul
pusha
(bad)
cmp
push
push
mov
scas
dec
cmp
pop
cmp
inc
outs
add
repz
inc
clc
fnstsw
cli
inc
ja
fstp
add
mov
ret
add
push
mov
(bad)
mov
es
scas
lock
ss
cmp
xor
neg
inc
out
shl
push
repz
stos
pop
and
add
jecxz
retf
mov
push
lock
push
add
pop
fidivr
add
push
rol
add
mov
outs
and
fst
lea
ins
lock
push
cmp
add
push
sbb
movs
stc
xchg
daa
in
mov
bswap
jge
data16
mov
test
mov
out
mov
or
daa
sub
mov
and
cmp
adc
int
mov
pop
push
jg
dec
or
mul
je
loopne
push
mov
adc
adc
sbb
push
out
push
inc
sbb
push
sbb
and
jge
fcmovnbe
cs
daa
sub
je
or
je
nop
fld
mov
push
cmp
(bad)
aam
movs
push
aaa
push
mov
rol
add
sbb
in
push
pop
pusha
fmul
sbb
test
or
push
push
xchg
call
pop
adc
outs
pop
push
mov
and
adc
(bad)
mov
pop
jae
adc
xor
xor
movs
and
mov
int
mov
mov
pop
xor
inc
xchg
push
xor
mov
cmp
add
push
stc
loop
cmovg
inc
or
or
fdiv
(bad)
cwde
frstor
push
movs
inc
sbb
adc
out
jb
addr16
mov
and
and
mov
sahf
jge
jo
inc
mov
nop
and
and
add
inc
pop
jmp
or
in
sub
add
pop
sub
mov
(bad)
stc
(bad)
jbe
jp
sbb
dec
xor
neg
jo
push
lock
sub
and
jne
daa
and
test
std
in
ret
cmp
add
adc
push
or
adc
das
inc
cmp
mov
int
add
or
add
mov
push
or
adc
mov
inc
test
add
pop
adc
not
and
pop
sbb
scas
inc
pop
cmp
dec
sbb
je
mov
add
cmps
sbb
push
cmp
mov
lahf
cmp
je
jae
cmp
inc
arpl
(bad)
sbb
pop
xlat
in
iret
popf
adc
lock
push
scas
aad
fild
cmp
mov
retf
push
addr16
ds
push
push
sbb
pop
adc
rol
cld
sbb
dec
and
cmp
int
mov
sbb
fbstp
js
add
jb
orps
ja
add
jb
rol
rcl
clc
cwde
pop
inc
pop
ss
repz
test
fisttp
sbb
push
sbb
adc
hlt
adc
push
out
sahf
jg
ror
inc
loopne
scas
mov
inc
add
mov
inc
mov
sub
pop
xor
lods
push
pushf
inc
sbb
sub
je
add
inc
imul
jge
mov
iret
mov
sbb
xchg
in
fs
adc
dec
cmp
enter
pop
add
jg
push
rcr
pusha
or
dec
xchg
ja
fdivr
or
jne
pushf
and
ret
(bad)
push
daa
repz
fs
push
cmp
push
add
test
aam
xor
jnp
jg
shr
aas
aaa
cmp
dec
add
push
jmp
bound
or
ret
jle
lock
add
sub
loope
or
cmp
push
hlt
jle
inc
lahf
clc
cld
push
cdq
mov
cld
imul
inc
pop
sbb
sub
dec
pushf
add
push
loop
enter
adc
adc
dec
jmp
dec
stc
outs
push
inc
xor
xchg
xor
cmc
dec
ret
and
add
pusha
in
lahf
jle
ret
jbe
ret
push
je
lea
mov
je
push
sbb
mov
mov
jbe
dec
mov
ret
inc
or
pop
cli
adc
and
fisttp
mov
fnstsw
(bad)
sub
add
int3
js
push
mov
ja
shl
add
sbb
stc
fsub
xchg
out
iret
mov
and
push
nop
dec
xor
icebp
je
or
stc
add
push
or
sub
ficomp
fwait
xor
cmp
jae
jo
mov
into
div
push
shr
ret
int
vmovddup
push
jb
lods
add
xor
sub
cli
dec
cmp
push
push
bound
add
call
cmp
add
cs
xchg
out
cmc
das
in
call
cmps
rcl
mov
lock
movs
lods
pop
out
jmp
rol
(bad)
lock
or
ficom
add
push
je
mov
pushw
jae
pop
cmp
cs
icebp
pop
aam
pop
in
sbb
test
or
jg
inc
inc
out
xor
mov
add
not
mov
jnp
and
into
mov
and
icebp
jbe
push
lea
call
or
into
lods
and
mov
push
mov
repz
xchg
sar
cmps
pop
mov
jne
lea
aam
pop
pop
add
add
cmp
xchg
push
mov
push
je
xchg
sub
test
jl
inc
mov
and
cmp
and
xor
lods
(bad)
sti
mov
sbb
sub
adc
or
add
ja
add
test
jmp
das
sahf
inc
pusha
push
sub
or
call
das
pop
gs
lea
mov
pop
lock
add
jmp
out
jg
sub
mov
add
(bad)
out
test
jnp
test
jne
dec
jb
sbb
mov
pop
les
mov
rol
test
ins
lds
cmps
pop
das
xchg
imul
cmp
mov
inc
push
or
inc
in
jns
push
cmp
les
jg
dec
sbb
(bad)
(bad)
xlat
mov
stos
inc
cs
(bad)
into
xor
aaa
add
jp
or
adc
sub
or
(bad)
or
and
bnd
xor
mov
fsub
ror
iret
imul
jmp
fiadd
sahf
pushw
or
xor
cwde
sbb
push
pop
pop
dec
mov
add
add
gs
dec
cmp
cmp
mov
movs
pusha
push
fwait
mov
sahf
ins
mov
add
jmp
pop
or
js
cmp
push
jmp
pusha
push
or
add
mov
mov
(bad)
aam
xchg
jle
sbb
jl
jle
lea
lock
mov
aas
cmp
ret
pop
call
pop
les
jge
push
add
push
je
add
push
sbb
push
mov
(bad)
retf
push
dec
int3
cmp
add
hlt
xchg
jle
cmp
sub
lock
sbb
in
je
and
mov
sbb
add
xlat
mov
or
(bad)
(bad)
mul
jge
sbb
pop
ds
jo
mov
mov
add
hlt
div
sub
test
push
sbb
fcmovbe
mov
pop
and
sub
xor
js
pop
mov
fldcw
add
inc
and
outs
movs
push
and
adc
bound
jge
clc
push
mov
fadd
jmp
imul
mov
sub
inc
inc
inc
push
push
pop
je
ins
jo
add
xor
add
cld
sub
jl
inc
xchg
push
imul
mov
xor
inc
fcomip
jl
arpl
adc
mov
loop
or
mov
push
or
sub
xor
add
mov
sub
je
sbb
xchg
sbb
scas
dec
clc
movs
add
pop
mov
sbb
jl
ins
and
xor
push
jl
ret
call
es
imul
out
xchg
lock
popf
adc
in
or
adc
fs
cmps
in
fcomp
mov
test
mov
call
data16
sub
xchg
aam
gs
lods
push
add
test
inc
add
pop
fadd
out
outs
jno
push
sbb
jne
add
sub
cmps
inc
repz
jbe
cmp
ds
mov
ret
add
fidiv
es
add
xor
hlt
rcl
enter
inc
jmp
adc
pop
adc
cmp
mov
std
dec
mov
add
mov
test
jle
and
mov
xor
jbe
popa
add
(bad)
xor
je
shr
add
jp
ror
ror
push
xor
inc
sub
adc
ins
adc
push
jne
or
mov
jmp
push
ror
sub
jmp
adc
or
inc
jmp
iret
loopne
add
jmp
adc
inc
ja
jl
xor
je
sbb
or
adc
in
adc
cs
jns
jne
add
sub
or
or
imul
ss
dec
or
push
adc
shl
loop
test
push
out
daa
xor
adc
adc
inc
cmp
jl
stos
(bad)
icebp
ja
retf
pop
adc
xor
mov
popa
jl
sbb
jmp
mov
neg
inc
jmp
xor
xor
cld
dec
push
fiadd
and
movs
pop
call
mov
mov
dec
retf
add
mov
xchg
aas
cmp
test
jb
cmp
add
bound
scas
aaa
rcr
dec
arpl
arpl
mov
fidiv
fs
(bad)
and
add
adc
sar
cld
hlt
add
or
je
and
cli
scas
ins
(bad)
cmps
in
inc
mov
adc
sbb
dec
in
adc
test
xor
into
mov
test
daa
or
in
add
pop
out
imul
xchg
cmp
cmp
lea
push
stos
add
mov
add
jmp
cmc
movs
xor
xor
mov
add
rcl
inc
nop
or
adc
sahf
out
or
cvttps2pi
sbb
inc
ja
dec
or
inc
sbb
sbb
add
or
imul
add
popa
jge
mov
or
popa
ret
clc
xchg
add
sub
push
cld
mov
jne
pop
or
bound
xor
push
adc
dec
scas
mov
pop
jmp
adc
dec
sahf
bound
push
xor
mov
adc
sti
and
call
inc
push
pop
clc
js
and
mov
pop
daa
or
jne
fld
mov
sbb
sbb
ss
sbb
push
out
sar
or
xor
aas
xor
pop
dec
adc
movs
sub
xor
sub
and
add
pop
mov
stos
and
dec
mov
adc
rcl
je
ss
push
sbb
inc
ret
push
push
and
int3
jmp
and
ret
mov
pop
push
lods
sbb
or
aas
xor
jmp
enter
arpl
loop
hlt
jo
loope
jmp
dec
sub
in
in
out
pushf
pushf
dec
pushf
popa
pop
mov
sub
loopne
sub
xor
dec
aam
dec
inc
adc
push
mov
inc
cmp
mov
pop
xor
xchg
add
push
fdivr
xchg
inc
aam
aaa
adc
mov
stos
add
xor
xchg
and
(bad)
stos
or
or
pop
lock
sar
mov
neg
jmp
or
(bad)
mov
inc
xchg
push
push
mov
jecxz
push
dec
div
inc
xchg
push
mov
inc
dec
pop
jl
or
jg
or
add
(bad)
pop
imul
pop
pop
pop
aam
pop
or
inc
pop
xlat
pop
jnp
test
mov
and
add
repnz
inc
dec
cmp
out
das
ret
adc
mov
add
fiadd
add
ins
adc
jle
shl
daa
dec
jge
mov
nop
or
pop
and
jge
(bad)
mov
jmp
push
and
(bad)
lods
aaa
cld
loope
mov
push
addr16
jne
mov
jmp
mov
fstp
je
or
or
mov
add
std
jne
rcr
or
ror
ins
mov
jmp
rcr
xor
push
push
fild
inc
lods
or
xor
cld
mov
dec
xor
ret
dec
fcomp
mov
fcmovnb
stos
ret
sbb
cmp
jg
cmp
jl
loopne
xchg
mov
xor
sbb
adc
fldenv
repz
and
movs
je
sahf
mov
loop
adc
cmps
sbb
xor
fst
jmp
fisttp
push
cli
lods
pop
cdq
sub
div
mov
leave
mov
mov
mov
inc
test
push
(bad)
adc
jns
add
adc
mov
lds
fisttp
je
mov
dec
mov
fidivr
mov
inc
mov
je
dec
jne
loop
repnz
ss
jmp
and
mov
or
dec
js
cs
nop
adc
dec
(bad)
stos
fidivr
pop
adc
out
dec
ja
sbb
mov
adc
mov
jmp
pushf
fwait
mov
out
pop
add
and
cmp
ja
aaa
sub
cmp
adc
pop
stos
jmp
lods
loopne
pop
or
lock
loop
ret
loop
cs
in
inc
xchg
dec
cld
(bad)
outs
and
inc
fstp
and
and
adc
and
sub
inc
sub
xor
sub
sbb
mov
es
sub
jae
fs
xor
sub
xor
adc
lahf
push
or
fcom
push
icebp
inc
pop
cmp
mov
push
fisub
xchg
ret
ja
aaa
xchg
or
push
bound
lock
jle
sbb
test
ret
mov
mov
pop
push
fld
or
rcl
push
clc
adc
test
inc
rcr
fabs
aas
std
xor
repnz
mov
cld
dec
fld
push
mov
fstp
mov
mul
or
mov
ret
loope
pop
fbstp
lea
loope
clc
sbb
fwait
mov
mov
int3
add
in
push
sub
inc
jmp
xchg
jecxz
ror
sbb
jl
jge
adc
cmp
jae
sbb
jb
mov
fnsave
js
dec
and
pop
data16
pusha
mov
leave
jmp
mov
xor
add
jp
(bad)
mov
mov
ret
pop
out
or
dec
fmul
loopne
fdivr
or
ror
je
xchg
or
call
(bad)
jge
call
jl
mov
push
inc
sub
jl
or
dec
add
xchg
rcr
test
ins
or
imul
lods
inc
cmp
mov
arpl
setnp
jne
mov
dec
or
jne
mov
and
jne
push
cmp
xchg
fdiv
stos
aas
and
inc
jmp
dec
adc
sub
mov
cmp
imul
cmp
jbe
pop
jmp
mov
jmp
iret
mov
or
retf
lock
mov
lahf
(bad)
dec
js
jge
fwait
jbe
imul
js
and
sbb
push
sub
(bad)
mov
xor
cmp
jne
and
pop
cmp
je
sub
out
pop
inc
inc
stos
or
push
aaa
push
pop
add
lahf
clc
call
push
add
stc
mov
ret
add
loopne
mov
test
add
aas
sahf
test
dec
or
adc
mov
mov
jo
lods
data16
add
aam
and
adc
ret
repz
jae
jne
jecxz
fimul
inc
jmp
inc
enter
mov
mov
adc
imul
pop
add
add
xchg
push
add
(bad)
dec
xchg
mov
stos
cmp
push
(bad)
aas
pop
mul
mov
pop
or
ins
and
push
push
lea
icebp
sub
push
out
sbb
push
in
pop
pop
mov
add
or
dec
ret
js
jns
pushf
ret
push
cmp
inc
push
(bad)
mov
pop
pop
data16
jns
jno
pushf
hlt
aam
inc
mov
sbb
and
fld
pop
bnd
ja
and
jae
xor
dec
push
(bad)
pop
adc
fstp
fwait
mov
push
ret
jae
fstp
(bad)
cwde
cmp
mov
inc
outs
dec
outs
xor
call
data16
leave
(bad)
jle
pop
daa
adc
loope
add
lock
cmp
or
adc
loopne
pop
out
fild
fnsave
mov
sub
pop
scas
adc
and
pop
pop
pop
adc
in
js
fnsave
push
adc
adc
das
or
js
add
jl
mov
imul
mov
cmp
or
pop
pusha
bound
xrelease
fs
push
sbb
xchg
jmp
lock
inc
or
and
(bad)
inc
add
mov
push
mov
push
adc
jo
sub
dec
imul
in
les
xchg
jmp
add
push
push
push
adc
mov
pop
ret
pandn
or
loopne
clc
ss
pusha
shr
iret
fcmovne
test
add
imul
sar
inc
mov
jae
outs
call
push
stc
dec
cmp
jae
stos
dec
jge
fsubr
sub
shl
push
pop
loopne
imul
adc
(bad)
or
test
sbb
fs
adc
loop
sbb
cmp
dec
rol
loope
aas
push
push
sub
sub
ins
xchg
fstp
adc
add
inc
and
icebp
pop
cwde
mov
lea
mov
jge
ret
push
ins
fiadd
iret
and
call
mov
enter
add
sub
test
adc
and
xor
adc
mov
cli
xor
adc
push
add
push
repz
sbb
les
push
lock
ds
aaa
int
jl
(bad)
sub
(bad)
ja
sti
ins
mov
and
jb
or
jb
sti
ins
imul
sbb
(bad)
mov
(bad)
ja
adc
aas
jbe
into
jle
mov
pop
dec
inc
jne
dec
test
sub
dec
movs
or
ins
jle
cmp
add
cli
add
repnz
ds
ds
mov
(bad)
stc
add
sbb
sbb
ret
clc
fld
push
add
mov
mov
xor
out
add
add
xchg
icebp
sub
push
sbb
and
call
jg
imul
or
ucomiss
mov
hlt
or
lods
out
adc
outs
cmps
pop
inc
outs
dec
fwait
(bad)
cmp
cmp
call
add
dec
data16
and
icebp
rol
bnd
xchg
lods
mov
aas
mov
dec
cmp
imul
mov
push
sub
mov
mov
mov
sbb
loop
enter
xchg
xchg
sub
scas
mov
mov
mov
fsubr
cmps
inc
jbe
dec
ins
dec
daa
push
cmp
(bad)
dec
cmp
jb
js
(bad)
adc
sbb
fild
mov
jmp
nop
ret
rol
test
dec
hlt
mov
add
fimul
add
add
sub
push
push
bound
pop
shl
clc
in
shl
cld
mov
retf
and
fimul
mov
sub
js
shl
sbb
mov
test
cli
sbb
push
or
pop
fadd
adc
cmc
mov
ret
adc
div
je
pop
or
push
cmp
je
dec
dec
daa
add
mov
add
ret
cmp
dec
mov
jge
add
or
lods
push
dec
adc
push
sar
retf
add
mov
mov
mov
mov
jbe
aam
cld
adc
jnp
push
add
aaa
movs
test
adc
pusha
jmp
sub
mul
and
inc
lea
cwde
cmp
(bad)
daa
xchg
hlt
loope
or
push
lods
fs
inc
and
les
xchg
ds
adc
push
add
fmul
xchg
shr
ins
adc
mov
(bad)
jns
and
sbb
inc
jnp
and
push
pop
fcom
add
mov
inc
or
push
dec
jmp
add
inc
daa
in
outs
or
iret
pop
jecxz
jne
idiv
adc
cli
or
fild
outs
push
cld
cmps
jns
jl
mov
outs
leave
push
ror
push
stc
pop
cs
jl
hlt
idiv
pusha
pushf
xor
mov
jl
cs
xchg
sbb
out
cmp
dec
add
in
adc
js
mov
inc
push
adc
cli
nop
jne
retf
lods
add
or
cs
pusha
xchg
in
sbb
adc
add
xor
xchg
jmp
mov
add
enter
aas
adc
pusha
add
adc
in
mov
cmp
inc
jp
cmp
data16
add
sbb
adc
push
xlat
cs
pusha
mov
ret
or
push
inc
cmp
and
fisubr
bound
cwde
cwde
out
aas
jl
xlat
and
imul
push
enter
mov
mov
js
adc
call
ret
lock
or
pop
xchg
sbb
push
add
rcr
push
jb
ret
nop
pop
in
or
add
mov
stos
mov
pop
push
loop
push
pop
adc
aam
aaa
jg
jbe
nop
add
adc
lds
xor
scas
push
retf
data16
and
jl
push
loop
ret
sub
bound
je
inc
push
retf
or
(bad)
fbstp
dec
sbb
shl
fbld
and
pop
cmp
adc
push
or
(bad)
sub
and
push
mov
pop
cs
mov
dec
hlt
ins
xchg
int3
pop
loopne
inc
fiadd
or
pop
xor
ja
jmp
ss
mov
push
ret
dec
js
lods
pop
add
mov
adc
pop
mov
aad
add
and
cmp
jbe
lds
repnz
jnp
repz
int
jl
jge
loopne
jle
ja
dec
push
jmp
push
les
clc
jge
out
lods
pop
or
or
sbb
cmps
mov
pusha
pop
adc
inc
mov
sub
bound
stos
scas
in
aam
in
jmp
aam
test
shl
dec
push
push
fdiv
les
jmp
sbb
push
rcl
inc
sub
mov
lods
fild
mov
cli
xchg
dec
je
dec
push
jns
clc
or
inc
ins
inc
outs
cli
cli
add
dec
cwde
sbb
aad
nop
or
sbb
out
movs
add
xor
lock
push
data16
iret
and
push
fsubp
mov
ss
fcmovu
fisub
call
neg
mov
push
mov
adc
and
inc
mov
or
push
jmp
or
je
sub
mov
outs
outs
jmp
cmp
dec
mov
out
scas
lahf
add
mov
adc
movs
add
sbb
jo
ret
push
or
push
fidivr
aas
sbb
test
clc
push
xchg
shl
je
(bad)
aam
jbe
push
pop
fmul
jmp
sbb
ins
jno
adc
lods
jle
or
pop
fdiv
popa
nop
mov
mov
add
jge
nop
sub
push
xor
in
add
repnz
push
enter
outs
cmp
clc
fsubr
jb
int
or
sahf
inc
and
adc
mov
add
add
scas
mov
inc
jns
sbb
adc
in
cdq
in
sbb
sub
sub
cmps
lahf
mov
dec
add
cmp
das
sub
and
or
cmp
adc
js
hlt
or
sbb
sahf
jns
(bad)
fisub
les
mov
mov
sub
push
jge
rol
or
fs
or
jmp
bnd
push
sbb
call
fmul
mov
and
or
js
outs
jnp
outs
jne
frstor
push
mov
pop
jecxz
or
adc
mov
js
pop
add
cmc
push
xchg
pop
push
mov
test
sub
(bad)
fisttp
push
adc
and
fbstp
adc
jae
bound
or
dec
call
lea
popa
jb
mulps
movs
xor
hlt
test
or
and
mov
and
push
ret
int3
data16
lods
movs
inc
nop
rcr
sbb
aad
stos
rcr
or
sbb
rol
inc
jbe
dec
sbb
mov
mov
(bad)
hlt
(bad)
test
(bad)
and
jl
(bad)
or
sub
in
xchg
cmps
sub
xchg
ja
inc
xchg
in
pusha
and
nop
mov
inc
outs
and
inc
xchg
loop
pusha
leave
aas
inc
inc
(bad)
xor
fcmovne
repnz
loopne
les
nop
daa
nop
mov
and
xor
pop
push
mov
and
xor
aaa
ja
(bad)
jo
mov
pusha
lahf
or
int
dec
pop
in
mov
mov
xor
lea
jae
add
mov
lods
pop
xor
inc
pop
(bad)
and
push
mov
mov
rcl
fcomp
jb
mov
sbb
xchg
push
aam
out
mov
mov
imul
adc
in
jne
lods
push
idiv
fild
inc
xchg
nop
push
hlt
add
fild
ds
xchg
dec
fnstcw
lods
push
test
arpl
dec
push
push
(bad)
cdq
or
aam
sbb
inc
add
or
cmp
pop
adc
push
sar
fiadd
pop
jl
loopne
popf
mov
(bad)
jne
inc
jp
addr16
gs
add
push
push
pop
pop
rcl
ds
or
adc
dec
mov
sbb
adc
push
add
inc
jns
and
clc
jle
psubusb
repnz
mov
pop
or
adc
stos
xchg
add
nop
mov
bound
adc
push
inc
movs
cmp
cmp
adc
jne
cmp
jg
mov
jmp
pop
cdq
xor
sub
add
mov
les
shl
add
scas
mov
cwde
dec
and
ret
(bad)
mov
das
int3
ret
ret
mov
xchg
sbb
mov
addr16
(bad)
or
cmp
adc
adc
push
mov
mov
push
adc
jne
out
rcr
test
mov
dec
jno
and
nop
ds
adc
test
adc
test
jmp
mov
mov
or
aaa
add
inc
mov
sub
mov
dec
dec
call
dec
mov
fs
mov
aam
and
mov
hlt
mov
jb
out
add
sub
and
in
pop
fsubp
or
in
cmp
add
in
(bad)
mov
cmp
add
and
sahf
lock
call
fstp
sub
dec
fsubr
call
retf
leave
les
jmp
cmp
call
sbb
(bad)
mov
ret
mov
jbe
pop
mov
cld
aad
jo
jge
add
inc
add
jno
or
stos
pop
pop
aas
pop
inc
dec
retf
jnp
jg
aaa
add
cmp
jle
and
fs
jne
adc
xor
jmp
or
rol
das
jo
icebp
arpl
int3
cmp
ror
mov
dec
test
inc
sbb
in
inc
cmp
jns
(bad)
jmp
out
and
add
jne
ss
xlat
ror
inc
push
aam
inc
adc
dec
sahf
inc
adc
ror
cmp
je
dec
int3
sbb
das
and
cmp
or
loop
popa
xor
pop
bound
cmp
mov
stos
jge
dec
add
aam
push
ret
test
add
lock
xor
add
dec
adc
rcr
adc
mov
cwde
adc
out
sub
sbb
add
ins
retf
dec
inc
fcmovnbe
add
pop
popf
mov
imul
cmp
in
or
bnd
push
push
int
or
and
and
push
in
inc
push
inc
hlt
iret
xor
sbb
sbb
adc
pop
pop
mov
retf
fst
dec
pop
xchg
or
pusha
iret
ret
jne
add
add
addr16
lods
or
push
hlt
xchg
xor
test
pop
jne
leave
inc
sti
cld
sti
pop
pop
xchg
mov
push
push
leave
stos
inc
inc
jl
push
in
movs
leave
inc
fld
mov
test
shl
and
pop
add
mov
and
ds
leave
aam
pop
div
pop
clc
jge
sbb
fdivr
mov
(bad)
pop
loope
cmps
xor
push
and
xlat
adc
je
and
out
and
sbb
pop
cmp
fld
mov
mov
out
xor
add
jmp
dec
dec
xchg
xchg
or
jle
in
mov
jb
dec
jge
call
sbb
rol
or
je
push
xor
add
jb
nop
jbe
dec
sbb
dec
fsubr
xchg
push
and
in
ins
aaa
jmp
fistp
inc
or
mov
mov
sub
xor
ins
cmp
and
cmp
push
shr
jl
test
sbb
and
and
ret
movs
and
call
shr
into
jl
fstp
bound
movs
lods
stc
push
or
jbe
jmp
pop
fs
mov
pop
push
mov
push
mov
push
les
mov
sub
lods
pusha
mov
cmps
ret
xchg
mov
and
or
test
pop
or
xor
push
mov
rol
or
enter
add
adc
adc
ret
push
mov
sub
ins
in
or
je
push
xor
xlat
sbb
je
xchg
sub
daa
and
fisttp
add
xchg
loopne
xor
jmp
nop
mov
hlt
fcom
push
adc
dec
sub
add
or
add
jnp
fist
push
test
mov
xor
mov
out
dec
mov
or
(bad)
stc
pop
outs
jmp
xchg
push
push
hlt
add
add
sub
mov
hlt
inc
jns
or
bnd
pusha
adc
push
fadd
add
pop
adc
jg
and
add
mov
lods
cmp
mov
inc
call
sbb
and
outs
sbb
sub
psubw
ret
add
cs
jbe
movs
push
ret
ror
sbb
das
mov
sub
push
jnp
push
jo
aaa
xchg
lea
add
dec
fdivr
fadd
imul
push
rcl
inc
or
mov
sub
ds
call
shl
sbb
jnp
mov
xchg
push
fcomp
shl
sbb
aas
ret
adc
stc
inc
cs
test
pusha
repnz
mov
frstor
push
hlt
mov
add
xor
and
and
int
test
or
loop
xor
mov
lahf
inc
arpl
xchg
enter
aam
daa
aas
push
jle
frstor
push
scas
fs
pop
jmp
push
add
outs
add
inc
sub
aas
xor
daa
jo
push
jmp
imul
push
push
iret
and
das
sub
jg
mov
pusha
cmp
daa
or
ret
add
xlat
cmc
xchg
mov
inc
cs
cmp
mov
push
inc
push
mov
xchg
dec
adc
mov
cmps
jge
add
sub
rol
mov
jne
gs
or
mov
daa
loope
inc
test
push
pop
push
ins
cmps
mov
jmp
(bad)
mov
(bad)
sbb
push
add
mov
push
ins
or
cmp
sub
inc
or
xor
adc
jns
mov
sbb
(bad)
fsub
daa
and
(bad)
dec
ficomp
xchg
adc
cmp
cwde
lea
xor
add
fadd
(bad)
frstor
jbe
inc
fdivr
and
or
lahf
test
inc
push
ja
mov
jns
jnp
repz
add
xchg
icebp
inc
retf
mov
add
mov
mov
scas
sub
mov
pop
sar
scas
mov
add
adc
and
add
push
jg
das
and
mov
or
pop
neg
rcr
inc
xor
pop
jne
mov
movs
mov
sbb
adc
jmp
iret
xchg
mov
pop
mov
push
mov
sbb
push
(bad)
outs
test
inc
into
dec
lea
mov
(bad)
jo
push
lds
shl
inc
inc
xchg
jb
add
(bad)
xchg
pusha
mov
inc
pop
and
pop
jmp
iret
imul
adc
cld
mov
push
ss
inc
dec
mov
clc
hlt
inc
sub
hlt
dec
xor
sub
jne
jmp
cwde
and
enter
adc
cmp
jecxz
push
enter
sub
push
mov
test
loopne
push
(bad)
leave
aaa
pop
or
nop
ror
cmp
pop
movs
mov
and
mov
or
mov
push
popa
push
(bad)
dec
add
(bad)
and
push
mov
and
out
xchg
dec
lea
dec
xor
or
cdq
movs
ret
mov
sar
ror
mov
ins
dec
and
call
rol
inc
adc
dec
stos
ret
loopne
inc
ficomp
add
bound
or
add
pop
mul
lea
add
add
pop
sbb
inc
loope
or
dec
test
shl
mov
push
or
dec
mov
mov
inc
add
mov
pusha
mov
ins
mov
and
or
ret
push
ror
ficomp
and
pop
push
push
lds
sub
or
xor
sbb
sub
sbb
sbb
jne
push
mov
and
mov
into
or
jae
sbb
push
sbb
outs
xor
pop
pop
ror
loopne
dec
add
jns
or
shl
mov
push
test
std
and
arpl
adc
add
daa
jle
dec
(bad)
and
sub
mov
mov
xchg
stc
clc
hlt
inc
in
mov
mov
cmp
cmp
lahf
adc
clc
adc
mov
push
fisttp
fnstenv
outs
outs
ins
ins
dec
test
mov
mov
and
lods
xor
out
xchg
xor
and
adc
shr
es
push
add
add
push
mov
ins
xchg
adc
in
nop
ins
mov
cmp
ins
das
mov
jl
dec
mov
adc
jne
or
jmp
push
dec
adc
and
and
add
in
add
add
add
push
push
add
loopne
or
cli
lahf
imul
adc
xchg
cmps
dec
stos
push
or
sub
add
adc
or
cmp
and
je
dec
sub
je
add
add
jmp
add
leave
jmp
nop
add
pop
ret
(bad)
shl
call
sub
icebp
adc
push
call
adc
and
into
sti
in
jl
je
mov
mov
dec
mov
sbb
xchg
cmp
xor
jmp
dec
push
mov
fs
adc
ret
cmp
xor
add
lods
or
sbb
add
pop
je
xor
xchg
push
dec
inc
test
or
push
das
pop
(bad)
jne
dec
dec
leave
loopne
mov
xchg
mov
add
jo
push
mov
out
ret
(bad)
inc
scas
daa
add
dec
xor
iret
das
add
out
and
lods
dec
(bad)
push
push
(bad)
imul
xchg
jo
cmp
cmp
mov
clc
dec
test
jl
inc
sbb
fldcw
inc
cmp
cs
jno
ret
pusha
add
pop
jno
push
sub
mov
xor
leave
xchg
fdiv
leave
mov
loop
movs
mov
push
cs
sbb
pushf
stc
not
and
lock
add
test
cmp
sbb
mov
sbb
in
icebp
add
add
and
cdq
xchg
or
xor
ret
xchg
xor
or
popf
gs
int3
xor
pop
push
sbb
out
std
scas
movs
dec
retf
sub
add
or
sbb
add
jne
mov
mov
add
cdq
test
scas
or
sub
lods
dec
shl
inc
ins
test
call
mov
ds
xchg
pop
lods
jo
pushf
cmp
aas
and
movs
adc
and
sub
loope
mov
mov
add
sub
xchg
mov
(bad)
clc
mov
adc
lea
dec
lea
push
into
mov
pop
out
push
mov
adc
sbb
sbb
sbb
bound
mov
sub
js
movs
popa
movs
mov
pop
add
lea
dec
inc
xchg
mov
jo
pop
out
cmp
es
mov
sub
push
ficomp
jnp
pop
rcl
gs
push
add
sub
enter
or
inc
fsubr
pop
xlat
push
adc
aaa
push
push
cwde
push
das
lock
add
jl
xor
pusha
push
push
mov
test
and
fisttp
xor
in
inc
sub
or
inc
sub
rol
(bad)
xchg
or
fld
jge
fld
ret
sub
mov
cmp
sar
cwde
push
(bad)
xchg
jo
push
add
(bad)
push
add
pop
add
movs
sub
mov
mov
xor
(bad)
lds
and
movs
inc
sti
dec
xor
and
(bad)
mov
fdiv
cmp
and
add
xor
add
mov
xchg
clc
xchg
test
(bad)
cmps
pop
test
ret
mov
or
jb
cmps
shl
adc
cmps
xor
mov
xchg
push
adc
in
cmps
xchg
xchg
inc
adc
sub
push
push
push
repz
xchg
adc
cs
ins
test
jns
or
je
test
pushf
sub
lahf
jg
test
mov
icebp
push
test
call
sub
adc
dec
add
jl
pusha
test
mov
sub
fimul
push
inc
adc
adc
pop
adc
push
or
mul
test
mov
inc
mov
push
addr16
nop
adc
sub
stos
fld
push
js
inc
adc
inc
daa
call
lahf
std
call
movs
adc
xor
pop
test
pop
or
or
dec
and
cmps
add
imul
push
sub
and
add
push
push
push
fdivr
add
ret
xor
cmc
pop
sbb
pop
adc
scas
ret
sbb
add
addr16
das
add
xor
mov
adc
cmp
jg
out
jbe
dec
aam
adc
sbb
sbb
pusha
stos
xchg
test
sbb
push
dec
pop
push
jle
cmp
push
cmp
sbb
out
jne
inc
lds
or
adc
jmp
call
push
in
cwde
rol
je
fmul
mov
call
inc
cwde
add
xor
push
sub
mov
adc
repnz
add
fdivr
ja
pop
lods
inc
ins
push
jmp
inc
in
adc
xchg
sub
inc
jl
call
cli
mov
in
out
aaa
repnz
je
in
jmp
or
pusha
out
xor
dec
xchg
(bad)
xor
pop
and
lods
inc
fdiv
pusha
xor
adc
or
add
dec
pop
pslld
xchg
push
push
cmp
je
jmp
xor
xchg
retf
leave
jmp
xor
imul
jmp
mov
and
push
pop
or
or
imul
outs
and
inc
xchg
pop
xchg
ret
mov
dec
sub
adc
mov
add
jb
lods
mov
push
add
xchg
scas
add
and
add
fdivp
mov
stos
cld
mov
nop
xchg
inc
jbe
mov
sbb
(bad)
(bad)
xor
mov
and
mov
ss
mov
xchg
es
fmul
test
mov
cmp
scas
or
int3
outs
sub
test
push
adc
lods
or
dec
add
out
(bad)
repz
push
int3
mov
mov
push
(bad)
enter
lods
rcl
adc
pop
(bad)
push
test
jo
lock
pop
mov
sbb
and
ret
cwde
pushf
mov
movs
nop
add
out
and
jae
push
stc
scas
mov
jmp
aad
inc
pusha
xor
ja
scas
js
sbb
std
fnstenv
cld
lods
cwde
std
fdiv
push
push
or
pop
das
iret
jo
push
or
pushf
push
aas
shr
add
push
outs
mov
mov
scas
(bad)
retf
dec
mov
data16
jo
ret
scas
int3
imul
push
jns
sbb
add
test
or
adc
mov
movs
(bad)
jae
loopne
ret
or
cmp
mov
pushf
sbb
(bad)
push
lock
ins
sub
in
in
mov
dec
or
stos
inc
adc
loope
add
jmp
out
addr16
or
das
enter
adc
aas
xchg
jo
mov
dec
out
add
mov
cmps
fidivr
call
int3
je
sub
inc
sbb
adc
or
outs
repnz
inc
adc
lds
out
or
inc
dec
(bad)
stc
or
rcl
adc
mov
in
xor
adc
inc
jle
pop
mov
inc
dec
add
mov
shr
enter
ret
jne
xchg
es
adc
inc
mov
pop
sbb
push
add
adc
shl
xor
mov
mov
mov
ds
mov
jne
and
in
loop
ja
cmp
retf
sbb
ins
or
cmp
hlt
sbb
movs
aas
mov
adc
inc
xchg
add
jl
dec
jne
cmp
cmp
adc
pop
sbb
mov
popa
in
jbe
inc
jmp
fcom
lock
or
or
mov
add
popa
pop
ret
les
inc
fld
jmp
cmp
push
or
test
cmp
add
mov
xchg
push
lods
add
sbb
mov
mov
cmp
or
loope
inc
or
nop
sbb
inc
sti
outs
ret
mov
inc
inc
mov
(bad)
fstp
fwait
adc
sub
fld
(bad)
pop
sbb
add
fcmovnb
ret
dec
rcl
dec
jne
outs
dec
dec
or
push
xlat
(bad)
xchg
in
xchg
stos
add
hlt
push
jle
shl
mov
sbb
xor
daa
les
mov
xchg
sbb
mov
adc
or
push
lods
das
add
mov
jo
pop
dec
jbe
cmp
xchg
mov
xchg
jbe
jle
jmp
cwde
adc
daa
dec
mov
add
jp
add
adc
rcr
bound
xchg
cwde
mov
sbb
adc
js
dec
mov
in
ins
lds
jbe
xchg
ret
(bad)
cmc
and
or
shr
pop
ja
repnz
mov
or
or
and
enter
push
mov
rol
shr
test
test
push
sub
aam
pusha
mov
movs
jmp
jg
add
add
test
inc
js
xchg
mov
sti
pop
jo
sub
in
loopne
jne
gs
addr16
jle
and
rol
mov
mov
mov
scas
jb
sbb
mov
cmp
push
mov
retf
add
adc
or
pop
xor
ins
pusha
mov
and
mov
mov
xchg
sbb
pinsrw
push
cld
popaw
add
sti
repnz
lods
add
sub
and
inc
dec
mov
mov
push
lock
and
and
jbe
add
(bad)
in
dec
xor
jnp
pop
xor
dec
adc
jecxz
popa
add
xchg
fwait
mov
sub
pushf
jmp
mov
cld
mov
loopne
test
fsubrp
sbb
cmp
setge
fst
dec
ret
and
push
push
mov
stc
leave
cmp
add
inc
cmp
inc
push
adc
mov
and
xor
pop
ret
push
jle
jo
dec
movs
or
or
push
mov
rcr
retf
mov
js
and
jle
ficomp
cmp
and
daa
pop
mov
ror
into
dec
or
sti
adc
outs
loop
loope
push
adc
adc
cmp
cmp
jl
inc
mov
movs
in
or
idiv
movs
bound
ror
scas
lods
push
jno
mov
mov
cmp
cs
push
add
leave
add
and
jge
dec
dec
(bad)
adc
cmp
jl
or
sbb
adc
sbb
jno
cmp
cmp
mov
inc
sbb
sub
out
jb
ret
dec
int3
and
(bad)
fs
push
ficom
sahf
inc
pop
inc
sti
dec
mov
pop
cmp
pop
xor
fnstcw
je
jne
push
mov
popf
xor
fist
jmp
dec
mov
test
jo
mov
jg
jb
mov
sar
mov
sbb
ret
sbb
fcmovb
ret
and
add
loop
adc
jno
outs
cmp
or
stc
(bad)
sbb
daa
add
jb
movd
mov
add
data16
in
in
pop
sbb
or
cmp
test
sub
test
jae
adc
pop
pop
sub
hlt
and
and
(bad)
xchg
daa
nop
idiv
push
add
cmp
xchg
nop
shr
rcl
jle
cmp
mov
jns
dec
daa
leave
xor
ret
out
aas
pop
sete
adc
test
xchg
push
ret
jae
adc
daa
es
fbstp
fnstcw
lock
jg
adc
imul
ret
push
or
xchg
jg
in
sbb
loopne
or
mov
les
rol
pop
cmp
mov
ds
cli
cmp
mov
and
and
mov
in
jno
and
sub
cmps
inc
or
sbb
cmp
mov
adc
bt
test
test
js
(bad)
in
push
arpl
je
stos
push
or
mov
aaa
pop
sub
add
pop
add
and
add
sbb
retf
jne
or
test
pop
or
pop
jne
adc
pop
pop
mov
pusha
mov
aam
cmp
movs
mov
add
pop
rcl
mov
cmp
call
and
and
add
or
dec
cld
sub
retf
mov
xchg
aam
pop
adc
jp
inc
or
or
push
ins
mov
cdq
add
push
stc
xor
push
pop
mov
xchg
in
lea
dec
sbb
pop
mov
lods
or
dec
lock
xor
repz
mov
jmp
popa
sub
push
push
adc
or
clc
iret
jmp
mov
xchg
shl
or
imul
fcom
mov
test
into
and
clc
adc
test
xchg
in
hlt
sub
dec
outs
cmc
je
pop
mov
jno
repz
test
out
sbb
inc
lock
jmp
sub
add
mov
call
mul
add
sbb
ret
dec
mov
sub
loopne
ret
mov
mov
adc
test
add
dec
fdivr
adc
test
push
adc
aaa
dec
into
jecxz
xchg
adc
xor
(bad)
push
cmps
and
hlt
push
xor
xor
sub
fcomp
or
aaa
aas
arpl
cmps
cmp
jmp
cdq
dec
xchg
lock
inc
in
or
dec
rcr
mov
jge
sbb
xchg
cld
pop
test
bnd
mov
mov
pop
add
mov
and
inc
test
and
jo
ss
push
push
fcomp
inc
push
cld
rol
stc
xchg
pop
add
jb
jbe
dec
mov
daa
dec
add
les
xor
jno
(bad)
pop
rol
mov
jne
jae
push
in
mov
inc
je
pop
outs
jns
test
addr16
or
jecxz
or
adc
xchg
and
jnp
push
inc
sub
test
add
test
mov
ret
sub
sbb
adc
jb
lods
sbb
jge
pop
sbb
out
movs
xor
xchg
ins
int3
pop
add
in
(bad)
sbb
xor
inc
ret
add
hlt
push
adc
ret
cs
loopne
out
jmp
jmp
or
mov
sub
fs
push
xor
cld
jmp
xchg
neg
or
or
xor
push
rol
mov
push
push
mov
sti
push
adc
(bad)
or
or
add
inc
jmp
pop
dec
(bad)
lods
retf
out
push
fidiv
cli
iret
sbb
pop
fadd
popf
ins
in
mov
sar
ror
mov
jne
mov
mov
imul
or
xchg
fcomp
jne
or
xor
test
or
sbb
sbb
retf
ror
sbb
sbb
clc
call
and
outs
(bad)
or
and
xchg
jns
(bad)
sub
test
add
jg
pop
or
xor
pop
sub
dec
sub
dec
and
aas
aas
mov
add
jno
dec
loopne
gs
jo
test
repnz
jne
pop
sbb
js
ret
mov
je
add
pop
inc
dec
jne
mov
ret
pop
test
sbb
dec
cmp
aaa
mov
add
test
adc
cdq
and
mov
adc
out
xchg
mov
sub
fiadd
lds
xlat
mov
dec
outs
add
(bad)
jle
jle
jne
mov
inc
jbe
test
int3
adc
add
push
enter
fmul
pusha
and
in
add
dec
add
addr16
mov
test
test
pop
pop
push
fdiv
sbb
test
je
mov
add
mov
movs
sbb
push
xchg
mov
out
aas
push
das
je
or
div
xchg
fsub
cld
addr16
push
cld
cmp
sub
push
xor
xchg
sub
out
xor
dec
inc
gs
mov
sbb
inc
add
dec
daa
adc
mov
test
aas
fcom
xor
int
icebp
inc
cmp
sbb
fisttp
mov
and
push
mov
retf
push
mov
jl
add
xor
and
and
xlat
adc
dec
popa
mov
out
dec
mov
inc
xchg
xlat
test
inc
cmc
cmp
jne
sbb
dec
or
jl
not
mov
sub
or
pop
mov
xchg
call
adc
pop
aas
jbe
push
mov
add
sub
je
push
jl
xchg
mov
pop
adc
mov
adc
adc
sbb
dec
add
adc
cmp
mov
fcos
add
add
inc
adc
sbb
mov
stc
inc
and
adc
inc
dec
repnz
das
add
xchg
pop
adc
and
enter
cmovo
sub
cmps
pop
push
adc
ins
pop
push
stos
push
aaa
loopne
adc
xor
or
retf
mov
popa
mov
call
pop
mov
jge
rcl
sbb
push
push
call
inc
and
mov
rol
lock
cmps
inc
les
or
mov
mov
(bad)
cmp
loope
mov
inc
jne
lds
and
mov
mov
stos
jmp
test
sub
ret
inc
or
or
dec
jecxz
push
and
dec
cmp
mov
shl
inc
add
xchg
sbb
adc
mov
cld
dec
or
in
mov
inc
or
or
aas
pushf
add
cmp
je
loopne
jmp
sub
sub
push
or
cwde
mov
ret
xchg
nop
xor
mov
mov
dec
xchg
dec
or
dec
std
inc
xchg
cmps
mov
dec
sar
push
add
sbb
mov
(bad)
push
shl
xor
push
clc
inc
pushf
push
push
add
daa
leave
jecxz
push
dec
repz
(bad)
xor
mov
xchg
mov
ror
stc
mov
adc
popa
cmp
call
or
rol
repnz
add
imul
and
jge
and
add
dec
rcpps
data16
and
cmp
movs
xchg
adc
cmp
mov
mov
jg
mov
imul
in
dec
test
int
rcl
loopne
(bad)
inc
mov
adc
mov
mov
mov
pop
popa
mov
bound
adc
pop
into
xor
cmp
push
xchg
xor
jge
pop
nop
jae
lea
(bad)
repz
fist
hlt
test
xor
rol
lock
lea
(bad)
pop
cmp
outs
les
push
sub
in
(bad)
int
fst
jnp
inc
ret
imul
or
repnz
call
mov
call
cmps
mov
(bad)
call
pop
mov
xor
movs
xchg
cmp
pop
or
sub
and
stos
rol
sub
sub
out
mov
in
cmp
dec
jo
inc
aam
push
xor
or
pop
mov
or
aam
xchg
mov
dec
or
xlat
(bad)
into
mov
test
cmps
or
es
xchg
mov
and
stos
mov
sbb
lods
sbb
bswap
into
inc
cld
inc
call
das
lea
adc
cmp
jg
mov
mov
add
imul
mov
inc
call
pop
xabort
iret
ret
dec
int3
push
add
sbb
test
and
mov
xchg
add
adc
adc
iret
pop
push
icebp
sub
jo
ds
sub
add
arpl
dec
dec
cmp
or
shl
xchg
mov
adc
pop
inc
fcom
mov
add
add
popa
test
(bad)
adc
pop
inc
loop
outs
xchg
sub
add
pop
push
pop
sub
hlt
sub
inc
iret
scas
mov
or
push
sub
test
push
cmp
pop
jle
inc
inc
xchg
dec
jne
xchg
shl
add
add
adc
(bad)
xchg
mov
cmp
push
mov
in
mov
rcl
rol
out
lea
shl
daa
fnstcw
and
adc
ror
mov
idiv
dec
repz
loopne
lds
ret
fdiv
cdq
adc
pop
mov
pop
popf
xchg
clc
xchg
test
jecxz
cmp
mov
cmp
or
sbb
and
fcom
xor
nop
pop
test
and
enter
cld
mov
xor
cld
ret
and
icebp
dec
leave
mov
adc
push
xlat
retf
add
out
and
into
mov
cmc
push
mov
int3
xchg
addr16
adc
retf
imul
test
cmp
pop
fcomp
adc
pop
mov
add
adc
mov
add
pop
ret
sub
rcl
adc
and
mov
test
daa
iret
shr
xor
pop
fdiv
xor
iret
loop
xchg
nop
add
mov
mov
mov
jne
movs
cmps
pop
sti
mov
pop
repnz
movs
dec
sbb
(bad)
mov
or
inc
std
jo
cwde
mov
daa
push
adc
pop
aad
icebp
adc
sbb
bound
in
aad
cmps
in
cmps
in
mov
and
(bad)
cmp
sub
adc
mov
push
pop
lods
push
xlat
mov
and
add
test
cmp
inc
je
(bad)
fistp
and
ficomp
out
sub
adc
mov
data16
push
inc
sub
mov
pop
adc
nop
inc
pop
xor
lahf
lock
add
cmp
mov
xlat
cmps
or
nop
aaa
dec
fcmovbe
mov
add
loope
aas
xor
dec
fnstsw
xorps
pop
inc
pop
mov
xor
adc
(bad)
nop
scas
ret
rcl
call
test
xor
fistp
aaa
fldenv
add
or
fincstp
xlat
enter
cmp
xor
mov
outs
mov
push
dec
das
inc
scas
daa
push
jno
or
iret
add
aad
pop
fisttp
(bad)
fsub
or
push
loopne
add
lock
pop
pop
lahf
inc
shl
popf
test
sub
add
add
or
pop
test
xor
xor
jae
mov
jne
loopne
fmul
pusha
in
cmps
inc
add
add
fld
fstp
ins
inc
mov
adc
test
ffree
add
dec
mov
push
push
add
rol
adc
das
adc
fdivrp
pop
xor
imul
dec
push
fs
mov
cmc
xor
jmp
loop
jg
(bad)
mov
xchg
jmp
ss
rsm
(bad)
mov
call
rol
jae
xchg
sub
mov
int
pusha
int
loop
sub
cmps
enter
sbb
ret
push
adc
ins
jb
cmp
fcom
or
pop
out
and
int
neg
xor
sbb
scas
xor
es
pop
(bad)
push
pop
mov
adc
lahf
add
enter
or
lods
dec
dec
cmp
jae
xor
adc
pop
into
int3
es
fwait
pusha
mov
pop
daa
outs
sbb
pop
or
stos
sub
sbb
mov
pop
aad
out
ret
sar
adc
inc
dec
xor
dec
das
add
retf
and
daa
jo
lock
adc
in
pop
mov
or
sbb
sub
xchg
aas
pop
std
ins
(bad)
daa
mov
or
push
pusha
cmc
push
pop
push
mov
push
pop
inc
(bad)
push
(bad)
jo
retf
mov
add
push
mov
fbstp
mov
jb
sar
ret
ja
fild
or
int
clc
test
rol
xor
call
jge
push
and
add
xlat
jns
ja
pop
stc
pop
dec
loope
stos
sbb
cmp
jle
scas
sub
xlat
cmc
(bad)
loope
sbb
loope
mov
sub
sbb
jb
mov
pusha
jecxz
add
dec
pop
int
inc
jne
cmp
sysret
mov
adc
popf
loope
(bad)
pop
or
ror
loope
jns
xchg
out
clc
idiv
cs
mov
mov
jb
mov
loop
inc
pop
adc
cwde
sub
inc
cmp
enter
daa
xor
mov
and
inc
(bad)
ss
popa
test
mov
stos
jg
jecxz
ret
mov
dec
add
jae
fimul
adc
test
mov
jo
nop
shl
in
repnz
mov
in
sbb
xchg
mov
add
xlat
test
add
cld
in
sbb
mov
push
in
outs
push
in
xchg
test
or
sbb
mov
add
sub
pmaxub
inc
mov
dec
test
js
and
icebp
test
xchg
iret
arpl
not
fcmovbe
pushf
cmp
mov
test
in
popf
aad
add
ins
out
nop
aaa
test
call
and
ins
outs
aad
stos
add
mov
aam
adc
fcom
loopne
cmps
in
mov
test
sub
or
nop
les
pop
dec
lods
int
jle
and
popa
cmps
push
fstp
xchg
cmp
in
or
sub
inc
jno
push
test
ja
push
in
outs
popa
add
je
(bad)
lea
or
nop/reserved
mov
lock
(bad)
sbb
ret
std
mul
add
dec
call
add
push
call
push
popf
mov
arpl
and
shl
sub
xchg
sbb
nop
pop
rcr
mov
je
loopne
mov
jmp
pop
test
int
cmps
(bad)
lea
mov
dec
sbb
lds
jns
mov
push
lods
dec
or
sub
sub
jmp
sub
dec
or
push
push
jmp
ins
inc
loopne
cmp
cmps
aaa
mov
jmp
fsub
fadd
jns
test
pop
mov
clc
mov
add
jle
lds
rol
jmp
xor
sub
jmp
adc
dec
call
in
repnz
dec
cwde
sbb
sub
jmp
mov
and
adc
xor
pop
hlt
ja
push
cmp
jne
inc
cmp
mov
push
push
stos
or
dec
push
or
or
dec
aad
test
xchg
cmp
or
aad
inc
or
lidtd
xor
jnp
loopne
add
test
xchg
ds
xor
jbe
jp
shl
xor
mov
mov
mov
pop
cmp
add
shl
sbb
mov
pop
idiv
(bad)
adc
mov
mov
or
or
hlt
inc
cmp
jae
xchg
(bad)
fist
add
or
jl
call
jo
jb
fcom
jne
ror
test
(bad)
(bad)
jae
dec
fadd
test
dec
push
jnp
xchg
ds
dec
das
dec
cmp
jge
xchg
pop
cmps
mov
in
bound
push
leave
or
push
cli
or
cmp
nop
lahf
je
gs
adc
add
arpl
out
icebp
dec
pop
adc
je
adc
pop
pop
add
sbb
sub
sub
popa
push
jp
jmp
loope
imul
rol
test
call
bound
test
into
dec
hlt
pusha
test
xchg
xchg
pop
add
lods
adc
out
fs
inc
push
cld
in
je
popa
sbb
pop
dec
ret
(bad)
pop
inc
sub
or
test
xlat
inc
xor
add
(bad)
aas
jmp
lods
add
inc
jb
xor
pop
fadd
call
lock
jne
mov
sbb
int
in
xchg
sbb
rcl
mov
inc
test
pushf
ret
fsub
mov
add
clc
je
lock
xchg
clc
or
dec
in
loope
cmp
in
adc
ja
cmp
adc
pop
push
jo
jge
stc
adc
ss
mov
jno
and
pop
adc
iret
sahf
or
add
and
stos
add
add
ret
daa
sbb
pusha
dec
rcr
idiv
jae
xor
call
adc
sbb
cmps
sbb
inc
cmp
fdivr
cmp
sub
nop
jmp
xor
mov
add
jno
in
mov
push
xor
xor
mov
and
ret
cmp
ja
call
jae
mov
and
outs
or
or
das
xchg
cmp
loopne
jne
xchg
add
in
fistp
dec
add
adc
jge
jno
das
dec
jle
jmp
outs
sbb
(bad)
jmp
or
or
xor
loope
call
sbb
inc
push
ret
xor
or
pusha
adc
pop
fsub
xchg
call
and
pop
push
push
cli
mov
(bad)
in
fcomp
xchg
test
lahf
sbb
add
int3
aas
pop
mov
dec
mov
add
clc
loop
les
les
mov
lock
sar
add
lea
or
and
lds
outs
mov
mov
loop
idiv
adc
dec
adc
je
jge
jnp
or
ja
push
leave
stos
jno
pop
jnp
cdq
movs
xchg
add
sub
sbb
aas
in
mov
jg
or
pop
int
icebp
fsub
jge
or
xor
mov
push
(bad)
call
jb
in
dec
jl
and
mov
mov
(bad)
imul
mov
push
nop
test
mov
out
jae
add
aam
imul
mov
into
in
outs
jmp
push
mov
adc
mov
icebp
(bad)
es
adc
mov
je
jecxz
jne
dec
mov
and
add
fdivr
sbb
daa
retf
inc
ins
fmul
pushf
sar
lock
xor
inc
inc
cmp
jae
add
inc
cmp
jle
inc
mov
stos
pop
inc
add
pop
xlat
rcr
out
out
mov
xchg
adc
sub
cdq
mov
xchg
xchg
dec
cmp
sbb
bound
cmp
pop
and
sar
mov
iret
(bad)
jno
(bad)
xor
inc
xchg
pop
and
pop
sub
mov
dec
mov
aam
stos
inc
dec
push
ret
call
ins
jge
adc
xor
add
push
sbb
hlt
dec
ins
retf
clc
or
inc
das
or
pop
nop
ret
dec
mov
outs
imul
and
and
call
icebp
mov
(bad)
pop
dec
test
lock
sar
and
pop
ret
shl
aaa
cmp
and
and
push
jp
push
es
xor
or
ret
inc
adc
and
jmp
jmp
(bad)
inc
xlat
mov
cmp
push
fcomp
sbb
js
pop
test
ror
cmp
and
sub
sub
inc
jl
jbe
out
or
jle
sbb
icebp
je
push
lahf
cmps
adc
or
jb
or
stos
mov
(bad)
pop
pushf
inc
push
adc
ss
pushf
sbb
pop
imul
jmp
and
pusha
test
or
mov
jge
(bad)
xor
inc
jmp
jno
rol
add
mov
jo
pop
add
mov
outs
inc
rol
lahf
cmps
nop
mov
sub
mov
pop
fistp
adc
test
call
in
or
je
ror
mov
pop
xchg
aam
xchg
lock
pop
jecxz
test
les
mov
sub
xor
call
pcmpeqb
(bad)
arpl
xlat
inc
push
add
(bad)
rcl
stos
fidiv
push
and
sbb
pop
sahf
(bad)
out
inc
xor
(bad)
dec
push
inc
out
jb
adc
leave
out
in
aas
sub
mov
ficomp
mov
loope
lods
clc
inc
jl
cmp
inc
cmp
and
add
add
adc
xor
adc
jecxz
add
inc
mov
jl
retf
pop
je
je
test
push
mov
shl
and
and
loopne
loop
xchg
aaa
loopne
xor
add
pop
loopne
jmp
sbb
(bad)
fcomp
fcom
jge
xor
pop
add
pushf
push
sub
jge
fsub
or
jle
mov
mov
xchg
sbb
xor
inc
sub
push
imul
ss
sbb
sbb
arpl
jle
lds
xchg
adc
xor
and
nop
pusha
pop
pop
aad
call
add
fild
cld
lea
add
mov
push
dec
xor
int
add
cld
or
push
push
dec
push
cld
adc
mov
push
test
iret
jmp
movs
hlt
xchg
pushf
int
fnop
sbb
pop
test
or
sub
and
sub
mov
pop
outs
in
jge
xor
push
ror
adc
pop
iret
push
dec
dec
shr
(bad)
sbb
cmp
ret
xor
sbb
xchg
lahf
popa
nop
push
cmp
les
rcl
js
(bad)
loopne
cli
scas
mov
pop
sbb
push
adc
and
inc
jnp
or
push
ja
dec
push
dec
add
or
hlt
mov
mov
dec
pcmpgtw
fimul
mul
das
add
jbe
jo
xor
pop
jo
jnp
gs
out
cmp
push
idiv
gs
out
jmp
jb
mov
add
or
mov
or
ret
mov
not
add
push
pop
inc
fisubr
popa
add
dec
lahf
mov
test
add
outs
xchg
mov
inc
jmp
jno
(bad)
mov
lahf
add
xor
or
cmp
cmp
out
add
lock
(bad)
in
adc
outs
push
jno
je
or
pop
xchg
lods
mov
jae
rol
sar
test
jo
add
sub
lock
pop
(bad)
in
adc
jmp
mov
push
icebp
iret
jae
pop
mov
lea
or
or
rol
or
aas
inc
cwde
sub
ret
push
mov
push
scas
sub
js
dec
mov
imul
mov
test
add
movs
cmps
add
test
fisttp
and
adc
popa
pusha
addr16
je
mov
es
movs
mov
inc
push
add
add
pop
aas
cmps
xchg
icebp
and
mov
mov
pop
or
inc
movs
push
mov
sbb
js
add
rcr
dec
test
(bad)
dec
sbb
adc
icebp
jb
pusha
outs
inc
xor
mov
movs
add
cmps
retf
add
pop
fs
add
sbb
loope
sub
in
shr
fisub
or
mov
cmps
(bad)
aaa
add
sbb
scas
in
or
test
nop
pop
adc
sub
sub
or
iret
jb
cmps
test
iret
add
in
adc
adc
dec
std
mov
lods
ins
or
fsubr
js
inc
repz
(bad)
xor
push
xchg
sbb
cwde
nop
xchg
inc
outs
and
in
test
mov
push
pushf
pushf
outs
test
pop
out
or
dec
ins
test
bound
out
les
add
mov
mov
push
xlat
sbb
xor
and
sub
test
or
pop
dec
das
push
push
dec
rol
fstp
hlt
je
push
dec
jge
addr16
mov
sahf
pop
cld
movs
mov
pop
cmp
sbb
and
dec
jmp
inc
dec
jne
scas
cwde
inc
and
push
mov
pop
mov
aas
push
push
arpl
inc
(bad)
aam
jmp
popf
pop
xor
sti
lea
inc
aad
dec
or
or
outs
adc
adc
cmp
lock
test
dec
dec
test
in
cmc
shl
arpl
xchg
(bad)
test
mov
test
jmp
lods
add
fadd
sar
and
fdivr
xchg
dec
rcl
rcl
test
adc
outs
call
int3
push
imul
cld
repz
and
or
dec
push
sar
leave
sub
mov
xcrypt-ecb
cmps
dec
pop
push
inc
mov
jae
push
add
push
cmp
add
sub
sub
or
pop
data16
es
ins
xor
sahf
cmps
iret
push
inc
ja
mov
fild
cwde
outs
arpl
sbb
(bad)
mov
mov
or
mov
add
loope
adc
pop
std
mov
pop
mov
(bad)
mov
or
pop
rcr
adc
jb
sbb
adc
inc
ins
sub
cmps
inc
inc
loopne
xchg
daa
dec
sub
add
dec
out
cmp
retf
jle
ins
ss
scas
outs
pop
outs
mov
mov
xlat
jo
sbb
(bad)
push
daa
pop
test
add
lock
add
push
dec
(bad)
stos
mov
or
adc
xchg
push
and
or
sbb
hlt
outs
cli
movs
in
mov
push
movs
push
cmp
mov
addr16
adc
jb
lods
sar
test
add
sub
cli
add
dec
rcr
aam
imul
dec
sbb
out
int
xor
or
push
rcl
cmp
cmp
(bad)
jns
add
inc
push
push
pushf
inc
call
test
loope
fcomp
cmp
pop
inc
cmp
test
jmp
stc
and
mov
dec
mov
mov
lock
xor
pop
inc
movs
add
jb
pmulhuw
lock
movs
in
inc
or
lock
or
xchg
inc
mov
ret
mov
push
outs
dec
or
cmp
loopne
jbe
push
add
or
(bad)
ins
fst
js
inc
shr
mov
repnz
in
dec
ret
nop
and
xor
fisubr
hlt
add
jbe
jecxz
ja
fcomip
mov
and
or
inc
push
xor
dec
mov
in
inc
ins
std
aam
jg
das
xchg
and
add
inc
push
xor
inc
clc
cmp
mov
jecxz
stos
inc
lahf
dec
or
pop
add
adc
test
in
les
fucom
sub
add
rcl
outs
and
add
nop
mov
add
pusha
push
call
and
xchg
push
pop
or
daa
inc
pop
push
iret
jne
push
in
push
cdq
mov
pop
cmp
scas
lock
mov
adc
lea
add
repnz
push
mov
ins
cmp
pop
jae
or
dec
push
loop
and
js
enter
int
jg
cmp
or
aad
loope
xor
pop
sub
inc
shr
pop
into
mov
xor
mov
in
sbb
data16
or
or
in
mov
pop
mov
push
lds
inc
shl
or
cli
aad
dec
sub
cmp
or
pop
jb
jno
push
push
call
mov
shr
test
cdq
pop
adc
add
inc
cmp
pop
add
push
je
pop
xor
cld
rcl
retf
jge
je
es
inc
jbe
pop
mov
add
hlt
cld
repz
shl
jo
sub
sbb
out
adc
stc
pop
sub
xor
sub
ror
daa
or
sbb
ret
fistp
xchg
xchg
and
inc
push
nop
pop
adc
sbb
mov
lock
push
lds
test
cmp
in
jmp
jns
pop
inc
repnz
ret
addr16
pusha
test
push
aaa
in
mov
ret
adc
int
cs
jne
add
cmp
mov
mov
mov
mov
test
push
fiadd
loopne
cmp
test
xor
cmps
shl
movs
add
ror
pop
outs
sub
push
sbb
mov
call
dec
or
imul
mov
add
push
(bad)
fcomp
mov
call
xor
ret
pop
ret
mov
mov
or
and
mov
push
pop
or
inc
je
and
xor
in
adc
test
ss
loop
and
sbb
sbb
adc
inc
adc
ret
leave
mov
or
inc
out
push
mov
stc
adc
sub
fs
cmps
push
mov
push
cmp
shl
sub
retf
xor
rcl
loopne
mov
push
cmps
shr
xchg
adc
sbb
add
arpl
(bad)
sti
xchg
scas
push
shl
mov
iret
cwde
cld
pusha
mov
inc
test
fistp
sbb
js
sub
clts
loopne
mov
xor
fld
sub
mov
mov
or
neg
or
add
dec
inc
clc
clc
inc
call
(bad)
clc
mov
nop
imul
pop
mov
add
mov
jnp
sbb
out
or
xchg
xor
leave
enter
outs
sbb
add
pusha
add
cmps
and
call
or
out
(bad)
adc
push
lock
dec
mov
pop
xchg
dec
push
inc
jmp
pop
stos
popf
mov
pusha
add
inc
add
lods
sbb
jns
scas
cld
cld
cld
inc
or
add
mov
and
enter
dec
push
inc
adc
mov
nop
movs
outs
(bad)
push
push
ret
psubusw
add
nop
jge
dec
jne
inc
pusha
pop
mov
aas
pusha
out
or
fsubr
pop
push
cmp
mov
mov
ins
push
adc
fisub
adc
add
popa
iret
and
cli
cli
imul
dec
sub
or
add
jbe
test
pop
(bad)
adc
add
add
pop
push
or
icebp
jl
and
shr
or
sub
ins
loope
sub
jne
push
adc
(bad)
add
xchg
and
pop
cmps
sub
mov
push
call
adc
shl
or
mov
xchg
cmp
xlat
cld
cmp
movntps
add
add
push
sub
adc
outs
jno
push
push
popa
push
adc
out
pop
test
and
xchg
and
lods
stos
mov
push
sbb
int
add
test
and
xor
inc
sbb
clc
adc
cwde
dec
call
push
adc
ror
add
(bad)
iret
popa
test
adc
or
adc
add
or
xlat
movs
push
lock
lock
test
or
adc
dec
neg
pop
movs
xchg
inc
or
cmp
paddq
and
xchg
cmp
fdivr
mov
or
sub
mov
jns
scas
test
push
(bad)
and
ficomp
xor
inc
push
dec
xor
inc
jae
sub
and
sbb
xchg
mov
fwait
lods
pop
ds
or
pusha
fcom
cwde
lock
jne
mov
push
push
es
lods
push
inc
in
sub
pop
ret
or
inc
jo
mov
add
jle
jno
adc
add
mov
and
inc
pop
in
stos
outs
(bad)
push
addps
pop
imul
mov
mov
lea
in
mov
xchg
inc
fcmovnbe
out
add
push
nop
scas
movs
shl
mov
fmul
and
inc
inc
inc
push
adc
(bad)
fs
push
sub
adc
daa
and
adc
test
push
pop
sahf
jl
sar
stc
pop
es
inc
add
add
mov
mov
xor
std
stos
call
jmp
push
or
cmp
inc
and
retf
aas
jne
inc
jecxz
xor
(bad)
pop
sub
inc
mov
or
xlat
jge
dec
sub
inc
in
and
retf
das
test
es
cmp
les
dec
jbe
mov
or
mov
adc
or
and
mov
inc
sub
push
sbb
(bad)
stc
shr
mov
and
add
sbb
jne
cmp
inc
sub
xchg
js
xor
(bad)
je
(bad)
es
sbb
dec
push
add
sbb
xchg
xor
push
sbb
adc
or
or
add
jge
add
es
or
je
movs
fidiv
icebp
(bad)
fs
add
dec
sbb
jne
(bad)
fdivr
das
lea
mov
xor
xor
ins
lock
jb
jmp
gs
cdq
movs
test
(bad)
adc
popa
mov
or
pusha
or
call
sbb
ror
adc
les
(bad)
sub
sbb
cmps
inc
iret
jg
mov
sbb
jl
ins
(bad)
mov
inc
push
call
inc
out
jmp
sub
xlat
inc
sub
nop
outs
mov
jle
pop
outs
sbb
mov
adc
fs
mov
dec
test
lea
mov
pop
aad
push
inc
cwde
arpl
loopne
mov
adc
loopne
or
into
jmp
in
dec
out
jnp
les
sbb
add
test
pop
gs
sbb
call
cmps
inc
shr
je
xchg
in
out
add
(bad)
pop
fs
sub
shr
inc
jo
aaa
ficom
out
mov
sbb
in
in
pusha
sbb
outs
call
dec
dec
popa
(bad)
fcom
test
pop
add
and
test
aam
scas
or
add
xor
or
mov
mov
and
pusha
cmp
rol
sbb
in
add
push
ins
add
(bad)
mov
cs
js
out
xor
sbb
(bad)
jmp
or
repnz
ds
in
mov
and
leave
sbb
cs
push
loopne
pop
in
ds
pop
push
int3
fstp
fmul
push
out
cmps
das
dec
mov
enter
inc
(bad)
cmp
xor
popf
cmp
test
cmp
out
in
mov
adc
aam
cmp
sub
mov
stc
dec
fisub
cmps
ins
sbb
pop
loope
mov
fst
adc
in
cmp
or
or
das
repz
mov
pop
dec
cld
push
ds
dec
in
push
inc
(bad)
and
cmps
jge
inc
lock
fist
in
out
div
cld
call
in
pusha
repz
sahf
xchg
loopne
fcomp
and
js
aam
ficomp
adc
ja
sbb
imul
inc
mov
nop
jl
repnz
add
(bad)
sub
sbb
jne
stc
fdivr
cli
mov
push
or
mov
mov
outs
sbb
(bad)
movs
cmp
mov
inc
push
xchg
in
mov
xchg
and
cmp
or
mov
jl
loopne
aas
jae
xchg
pop
cmp
sbb
outs
lock
push
movs
sub
dec
push
add
add
adc
nop
bound
psrld
ror
xlat
xor
add
adc
shl
inc
imul
sub
jle
add
cmp
mov
call
and
sti
jne
or
mov
fisubr
jne
pop
push
cmp
adc
or
out
cs
outs
add
das
jno
adc
adc
add
cmp
sbb
in
in
dec
cmc
xlat
push
adc
(bad)
xlat
pusha
cmc
inc
cs
das
es
and
jecxz
hlt
addr16
and
ror
nop
sub
xchg
xlat
scas
in
enter
sub
xor
pop
and
xchg
nop
mov
mov
sub
pop
sub
clc
mov
movs
sbb
cmc
sbb
adc
mov
xor
inc
mov
xchg
xchg
sbb
pop
or
sbb
(bad)
outs
or
ins
or
jmp
enter
sbb
jae
inc
cmps
xchg
adc
xor
(bad)
jo
xor
pusha
pusha
lods
jo
or
mov
(bad)
in
xor
add
enter
daa
daa
sar
or
push
outs
or
inc
loop
mov
add
ret
and
in
push
cwde
push
mov
mov
add
mov
dec
xor
in
push
cs
dec
sbb
jl
xor
and
hlt
sub
leave
and
dec
xor
cmp
aas
inc
add
es
fs
or
cdq
fs
or
adc
sub
xchg
dec
sub
add
xchg
dec
sahf
das
and
nop
dec
sub
xchg
dec
sahf
xchg
sub
mov
rcr
inc
xor
dec
sub
popf
dec
sahf
xchg
cmp
xor
cmp
adc
popa
push
je
xchg
push
sbb
js
pusha
popa
stc
xor
je
mov
push
jne
dec
jne
inc
imul
imul
stc
repnz
jb
pop
outs
jb
ins
jo
repnz
cmp
sub
push
and
and
inc
(bad)
(bad)
cmp
(bad)
jns
mov
jnp
mov
inc
jae
pop
add
mov
pop
cmps
inc
mov
outs
mov
dec
xor
or
jb
adc
push
push
adc
or
imul
xchg
pop
adc
or
or
dec
mov
add
xchg
shl
sub
and
idiv
and
movs
int3
int3
popa
mov
push
push
mov
pushf
js
test
inc
or
push
nop
add
repnz
pop
cmp
dec
fs
ror
(bad)
and
xchg
mov
inc
jl
out
je
nop
cmp
mov
jl
mov
iret
jnp
mov
rol
pop
or
push
inc
or
sub
or
add
lea
movsx
dec
addr16
(bad)
jb
dec
add
add
cmp
or
sbb
sub
fs
or
cmp
pop
(bad)
out
das
or
pop
(bad)
add
add
adc
lods
dec
push
or
jb
imul
pop
adc
pop
or
add
mov
leave
sub
fnstsw
mov
push
mov
int
cmps
mov
xchg
add
mov
iret
adc
daa
push
push
cmp
add
fmul
les
add
je
inc
fnstsw
inc
adc
in
jg
xor
or
and
pop
push
xor
arpl
inc
and
or
or
test
pop
mov
sbb
loopne
push
jo
sbb
adc
(bad)
cmp
mov
push
mov
test
test
dec
jo
inc
pop
dec
repnz
gs
mov
mov
jp
shl
inc
pop
push
stos
aas
rol
iret
xchg
movlhps
or
sbb
cdq
adc
pop
shl
jbe
scas
jmp
mov
cmp
stos
pop
mov
imul
push
add
and
inc
and
push
and
mov
add
dec
push
js
or
fisttp
sti
jo
inc
out
cmps
xchg
cdq
mov
cmp
outs
mov
leave
imul
jmp
add
cmp
pop
loopne
addr16
dec
add
(bad)
cmp
cmp
cs
mov
xchg
(bad)
xlat
push
xor
pop
xor
movs
and
add
in
inc
and
jmp
xlat
pop
xor
fdiv
ds
mov
les
sub
adc
jbe
ins
jno
pop
cmp
cmp
xchg
and
test
pusha
aas
data16
or
inc
popa
arpl
adc
fild
cmp
test
sbb
inc
inc
or
cmp
inc
es
sbb
sub
xlat
pop
xor
or
fsub
pop
sbb
and
div
stc
fiadd
cmp
shl
and
inc
mov
sar
jg
inc
nop
and
jl
pop
inc
bound
adc
neg
pop
xor
sub
or
inc
mov
cmp
inc
sbb
inc
add
push
inc
fild
cmp
add
loopne
jb
fiadd
sub
scas
pop
adc
fild
cmp
nop
inc
mov
xchg
inc
lea
inc
call
cmp
mov
dec
inc
into
in
and
push
orps
xlat
mov
or
xchg
mov
and
or
inc
add
(bad)
xchg
mov
inc
xchg
sub
add
data16
inc
jecxz
xchg
enter
add
xchg
mov
mov
add
retf
call
frstor
hlt
dec
cmps
cmp
dec
push
dec
add
repz
jns
inc
aas
adc
ins
pop
mov
push
jno
mov
jl
fmul
dec
cmp
ja
lahf
inc
xchg
test
movs
test
jmp
loope
pop
in
aam
ret
or
inc
retf
in
pop
lea
mov
(bad)
jmp
daa
call
fwait
(bad)
add
and
mov
push
inc
test
ret
outs
or
mov
jns
out
call
or
mov
out
hlt
xchg
push
enter
inc
cmc
inc
pop
jb
in
dec
pop
out
sbb
nop
cmp
enter
dec
or
or
add
cmp
in
inc
xchg
inc
sbb
or
push
push
add
das
dec
into
cmp
sub
jg
jmp
sbb
jo
inc
sbb
ficomp
mov
aas
push
scas
cmp
dec
je
sbb
cmp
xor
push
nop
es
(bad)
fs
pop
adc
add
enter
jmp
stc
pop
dec
pop
aaa
dec
clc
mov
xor
jb
pop
ds
pop
leave
out
out
hlt
sar
mov
nop
jmp
jl
in
mov
nop
in
cld
inc
call
out
loopne
mov
in
pushf
sbb
iret
and
inc
ds
repnz
adc
loopne
inc
loopne
inc
jo
pusha
pop
push
ds
xor
inc
int3
xchg
push
push
pop
jb
(bad)
les
icebp
xor
xor
fmul
test
sbb
adc
xchg
aam
push
mov
and
pop
nop
(bad)
ror
test
push
pop
xor
in
sbb
test
pushf
jmp
loop
les
add
mov
nop
jge
aam
jmp
adc
jb
adc
daa
xor
loope
push
and
leave
fwait
push
clc
push
cmp
jo
xchg
mov
xor
jmp
inc
adc
sub
push
sbb
sbb
mov
dec
and
jb
adc
xor
xor
dec
push
dec
mov
ins
cmp
add
outs
mov
sub
push
push
dec
mov
test
pop
dec
test
sub
aam
cs
mov
and
mov
or
push
add
and
and
fs
fs
mov
cmps
sub
popa
movs
push
outs
or
push
mov
(bad)
rcl
sub
pop
test
sbb
mov
xchg
inc
(bad)
xor
pop
inc
aaa
test
in
push
sbb
je
mov
(bad)
xchg
adc
mov
dec
sub
push
mov
or
inc
push
sar
pop
mov
or
hlt
mov
ja
add
and
add
fcomp
nop
not
nop
jmp
das
dec
mov
dec
aas
xchg
movs
dec
adc
mov
std
xor
lods
aam
scas
fdiv
dec
lahf
dec
jl
ss
out
or
sbb
mov
push
mov
xchg
add
adc
cmp
fcmovnu
jno
xor
aaa
xor
mov
inc
aaa
pushf
lock
jbe
push
sbb
cmp
stos
cmp
sbb
inc
scas
sar
sub
adc
mov
cld
push
ins
bnd
inc
add
adc
cmps
test
mov
xor
jmp
add
jmp
pop
cmp
and
pop
push
push
lea
jmp
arpl
sub
mov
and
shr
enter
jne
dec
jne
ins
push
mov
cmp
inc
pop
jl
or
cmp
(bad)
sbb
lock
add
mov
xor
xchg
cmp
jne
push
ds
push
ds
jno
test
add
cmp
lock
mov
push
mov
xchg
push
daa
ds
shl
mov
pop
xor
cmp
ja
xchg
je
mov
push
or
mov
and
nop
inc
pushf
push
data16
loop
mov
loopne
mov
mul
push
mov
or
cmp
test
cmp
ja
out
cmp
pusha
add
pop
xor
add
mov
push
pushf
outs
push
addr16
jns
out
jbe
nop
mov
out
(bad)
jecxz
cmc
push
push
adc
and
imul
(bad)
imul
mov
into
jbe
bound
adc
fiadd
les
sub
xor
add
cmp
(bad)
shl
adc
sti
daa
inc
add
xchg
out
push
or
add
push
shl
push
xor
push
adc
shl
sbb
push
or
xor
or
jmp
jbe
cmp
dec
add
mov
push
mov
xchg
ds
push
sbb
cvtpi2ps
cld
add
sub
jb
or
je
adc
cmps
xlat
and
push
jb
or
dec
or
jb
call
add
pop
adc
les
mov
or
das
xor
xor
jo
xchg
pop
sbb
push
sbb
ror
(bad)
shr
push
cmp
cmc
aaa
jbe
jl
lock
loop
mov
je
(bad)
or
and
cmp
add
jmp
sbb
jg
add
jmp
adc
pusha
xchg
add
ret
inc
mov
jecxz
pop
cmp
inc
sti
scas
mov
add
dec
bound
xchg
rcl
test
and
dec
loop
mov
adc
pop
cmp
mov
cld
(bad)
clc
adc
mov
xchg
inc
add
nop
in
cwde
add
dec
cs
mov
data16
jmp
sbb
dec
sbb
lock
or
sbb
adc
inc
sub
xor
pop
(bad)
push
loopne
or
lea
jno
sub
and
mov
adc
cmp
adc
mov
ins
lock
jno
adc
push
jbe
jno
mov
aaa
add
inc
enter
and
mov
inc
xchg
add
add
or
popa
sti
xchg
and
push
dec
imul
cmp
pop
xor
fdivr
mov
jbe
cmp
jg
(bad)
ss
call
jne
jmp
inc
pop
sahf
mov
call
jo
jmp
and
add
mov
ret
inc
cmp
or
jae
dec
rol
jb
push
les
inc
mov
lea
adc
add
add
ja
inc
fbstp
nop
inc
inc
je
or
inc
ret
or
mov
jb
push
mov
mov
and
aaa
jg
xor
test
adc
sub
jno
inc
inc
mov
movs
xchg
lock
lock
mov
pop
adc
add
in
loopne
cs
push
lock
pop
mov
xchg
xor
mov
call
inc
test
pop
cli
aaa
enter
mov
adc
mov
mov
xor
aaa
les
dec
or
and
jno
fcom
cld
enter
adc
call
gs
enter
addr16
stos
in
inc
pop
jnp
je
das
in
cdq
mov
mov
cwde
sub
nop
in
mov
inc
in
(bad)
test
retf
mov
xchg
js
sub
enter
pop
add
arpl
dec
les
mov
and
xchg
mov
cmc
xchg
inc
shl
ins
idiv
inc
in
mov
(bad)
jae
pop
push
mov
cli
(bad)
inc
loopne
pusha
pop
scas
add
(bad)
je
and
or
sbb
sub
inc
lds
push
push
jecxz
cmp
out
jmp
arpl
adc
push
aaa
pop
xor
jmp
mov
sbb
dec
cwde
aas
shl
push
sub
in
add
inc
or
pop
jne
loope
je
or
jmp
in
loop
in
mov
mov
xchg
out
sbb
and
int
mov
cmp
jnp
jno
mov
ins
mov
stos
pop
push
pushf
cld
pop
setno
repz
rol
adc
cmp
or
sbb
cmp
sbb
cmc
push
pushf
mul
cmp
imul
movs
imul
nop
dec
sub
sbb
cld
and
aaa
sub
dec
jb
out
adc
(bad)
pop
enter
fistp
xchg
outs
cmp
mov
rcl
mul
pusha
mov
dec
xchg
fcomp
push
pushf
push
in
sub
jmp
cld
sub
dec
pop
or
push
cli
and
in
pop
adc
xchg
loopne
das
dec
add
inc
adc
dec
xor
sub
test
or
sbb
and
adc
adc
xor
dec
dec
sbb
rol
and
xchg
add
cmp
ss
cli
sub
push
cmp
xchg
sub
movs
or
jne
jmp
push
adc
dec
jns
loop
test
iret
inc
xor
sub
movs
data16
test
xchg
mov
data16
xchg
and
pop
mov
xchg
cmp
(bad)
adc
adc
push
pop
push
ret
out
aad
mov
retf
iret
retf
movs
je
ret
in
pop
dec
ja
in
push
pop
mov
sbb
and
into
pop
pop
jne
pop
fisub
xchg
dec
xchg
ins
jl
jo
aam
daa
push
cmp
pop
and
mov
fs
sbb
and
xchg
leave
outs
call
and
xlat
jmp
sbb
repz
jae
pop
xor
cmp
cmp
jp
mov
in
jns
mov
pop
sahf
out
sahf
and
inc
push
xchg
lods
je
xchg
push
adc
sbb
mov
aas
mov
aaa
dec
xor
mov
push
adc
sar
cmp
scas
mov
mov
adc
fmul
push
mov
xor
dec
fcom
rol
ins
sbb
mov
push
xor
mov
add
adc
lds
xor
cmp
ss
jp
xor
pop
lods
cmp
daa
or
jmp
mov
and
stos
pop
dec
cld
xor
test
(bad)
dec
add
xor
sub
test
clc
movs
enter
out
out
call
cmps
retf
sti
sahf
in
push
cmp
dec
push
fcomip
cmp
mov
pop
imul
cmp
mov
sub
ss
mov
fxch
(bad)
test
fild
or
fs
fisubr
test
mov
xchg
dec
out
jmp
sub
and
cmp
jae
adc
cmp
daa
ins
sahf
add
push
popf
dec
mov
mov
pop
scas
lods
mov
sar
bound
inc
sub
xor
sub
inc
sbb
mov
ins
pop
out
bound
cmp
adc
push
sbb
add
xlat
aad
jg
adc
mov
and
dec
mov
adc
fisub
movs
aam
es
inc
ret
push
sbb
dec
lock
jbe
and
xor
leave
adc
add
push
sbb
and
leave
retf
push
dec
test
inc
and
push
adc
push
enter
mov
xchg
push
add
sub
scas
loope
sbb
mov
add
std
xor
push
push
daa
lock
into
repz
(bad)
in
push
xchg
imul
mov
in
jno
push
add
push
jge
add
jmp
clc
add
add
ja
out
and
sub
jnp
jl
add
repnz
or
leave
lds
adc
mov
dec
mov
mov
push
call
imul
adc
mov
repz
shl
fiadd
hlt
std
scas
loopne
fild
pcmpgtd
and
inc
imul
mov
inc
inc
push
ret
cwde
nop
pop
call
xlat
adc
and
push
xchg
cmp
inc
dec
sbb
xchg
xchg
enter
jne
xrelease
adc
or
add
inc
test
mov
adc
aaa
sbb
adc
push
cvtps2pi
retf
dec
test
leave
iret
fcomp
inc
push
fsub
fdivr
add
pop
and
mov
lods
mov
rol
ds
ins
pop
sbb
loopne
add
pop
in
fld
adc
adc
adc
loopne
xor
fsubr
std
push
(bad)
fldenv
jbe
pop
sub
les
imul
or
test
sbb
dec
push
push
outs
jns
movs
xor
cli
dec
inc
cs
add
jb
inc
ja
mov
sbb
xor
mov
mov
nop
adc
inc
add
jne
sbb
mov
cmp
iret
pop
ins
jecxz
imul
scas
xlat
jmp
push
inc
pop
or
jbe
(bad)
pop
ins
push
test
push
sahf
out
xchg
cmps
mov
adc
adc
sub
xor
xchg
mov
bound
fsub
xlat
xchg
push
arpl
adc
add
sub
enter
mov
daa
push
sub
int
inc
inc
lock
cmps
arpl
jle
sbb
lods
sub
and
push
in
cmp
rcr
adc
ins
pop
out
sti
(bad)
mov
repz
aas
pop
jne
inc
test
popf
mov
or
jns
enter
push
fwait
cmp
mov
sbb
xor
das
frstor
idiv
arpl
push
inc
pop
inc
sbb
mov
mov
inc
int
std
cmp
adc
add
sbb
inc
cmp
sub
xor
movs
mov
and
test
adc
pop
mov
cmps
adc
lock
psllq
mov
ds
xor
pop
mov
push
xchg
adc
cmp
(bad)
fld
std
call
add
rcl
test
aaa
stos
push
ja
push
push
xor
daa
mov
and
sub
jb
or
pop
push
shr
cli
mov
clc
inc
cmp
in
jmp
addr16
mov
mov
xor
mov
jmp
and
cmps
inc
jmp
pop
push
inc
inc
inc
stos
jo
aaa
xor
mov
ins
stos
test
dec
or
sbb
and
outs
fadd
fs
push
or
sub
or
and
enter
out
fs
fwait
jo
leave
out
out
ftst
cmp
imul
add
call
nop
dec
xchg
or
iret
jp
push
or
sub
adc
in
mov
cld
xor
cmp
cmp
repz
in
call
push
cmp
(bad)
fsubrp
push
clc
push
jb
xor
sub
leave
and
or
jle
push
jnp
dec
xchg
sbb
sbb
xor
and
in
je
pop
aam
dec
outs
mov
add
sbb
cmova
sbb
xchg
add
add
iret
mov
fadd
inc
and
sbb
sbb
jns
adc
sbb
dec
or
push
cmps
cmp
mov
pop
jae
(bad)
jns
ss
pop
je
jae
jnp
sub
daa
test
cmp
ror
out
mov
or
push
mov
mov
sbb
aam
scas
in
fild
mov
js
popa
ud0
add
push
rcr
jbe
sbb
mov
push
cmp
loop
pop
leave
inc
xor
sub
sub
push
xor
(bad)
add
and
test
retf
add
mov
dec
imul
pop
leave
jns
push
mov
ds
clc
xchg
push
add
lahf
pop
adc
ins
sbb
pop
cld
loopne
pop
lock
jmp
add
test
jne
fst
pop
or
(bad)
pop
(bad)
rol
add
loope
ja
xor
fst
pop
retf
jns
jne
add
cmp
pusha
adc
jne
sub
jo
and
add
jb
stos
mov
xchg
cmp
repz
(bad)
rcr
lock
cmps
stc
add
(bad)
out
push
jns
outs
leave
lds
cmp
and
xchg
sahf
pop
xchg
sub
sub
in
add
inc
fild
xchg
jl
mov
imul
or
imul
xor
clc
jns
inc
xlat
fs
mov
mov
inc
adc
push
sub
add
mov
mov
ror
sti
cli
fild
inc
dec
or
push
mov
call
add
xor
pop
pop
inc
xchg
adc
and
pop
sub
pop
gs
(bad)
or
sbb
repz
jns
movs
js
rcr
idiv
or
jns
mov
sbb
sar
pop
jae
xchg
mov
(bad)
fistp
fstp
imul
push
add
lods
sub
mov
rol
jnp
adc
sub
push
inc
pop
movs
loop
jno
cmc
jmp
out
jmp
int3
sbb
lods
jmp
pop
pusha
ins
add
pop
and
push
stc
dec
imul
call
sub
in
out
mov
jp
iret
repz
shl
(bad)
jnp
push
fwait
inc
lock
push
push
sbb
jl
out
dec
sbb
mov
int
add
cwde
and
push
nop
popa
sbb
(bad)
shl
nop
add
mov
dec
retf
in
jmp
inc
test
push
or
(bad)
cli
int3
or
cmp
leave
add
mov
inc
out
jnp
add
bound
aaa
and
add
push
xchg
sub
loopne
sub
adc
dec
adc
xor
inc
in
lock
dec
ds
call
xor
mov
mov
daa
in
pop
fdivr
test
loopne
sub
inc
adc
data16
adc
push
jecxz
push
mov
inc
test
sub
adc
or
sbb
and
jns
xor
pop
repnz
stos
call
mov
in
xor
xchg
pop
jle
push
mov
loop
cli
or
xchg
mov
push
sub
cmc
cmp
shr
pop
inc
jg
imul
mov
jmp
jb
pop
(bad)
in
add
ins
cmp
xor
sub
loopne
nop
xchg
mov
or
sbb
inc
fdiv
or
and
push
mov
fsub
ins
fdiv
js
test
xor
jae
adc
pop
jne
nop
bound
pop
pop
push
mov
test
ror
inc
pop
lods
mov
das
cs
add
pop
daa
pop
xacquire
mov
cmc
pop
cmp
repz
jb
jmp
adc
adc
ins
jne
sub
dec
and
sbb
pop
pop
(bad)
movs
pop
push
inc
ins
add
outs
outs
cmp
jb
cmp
in
xor
pop
int3
add
cmps
in
inc
push
pop
sub
mov
and
or
xor
pusha
jo
mov
repnz
int
push
loopne
in
test
jmp
(bad)
and
fild
xor
leave
and
jmp
retf
jge
test
ins
nop
push
xor
push
(bad)
js
rol
fiadd
test
es
pop
es
jl
xchg
push
dec
xchg
neg
daa
sbb
es
mov
push
ret
inc
js
fmul
xchg
jl
mov
fist
mov
and
jae
pop
push
inc
cmp
in
pop
jb
ja
and
fidivr
adc
test
cmps
aas
mov
pop
(bad)
push
jb
jg
adc
jne
dec
xor
jae
psubusb
inc
pop
pop
jae
push
mov
xor
aas
or
inc
push
fidiv
xchg
push
mov
mov
push
icebp
push
mov
dec
mov
cmps
fild
pop
retf
push
movs
cmp
arpl
and
or
nop
and
sbb
or
stos
daa
add
jno
daa
adc
mov
sbb
or
xor
or
sbb
mov
clc
adc
mov
pop
vmread
scas
fadd
xchg
in
xor
pop
(bad)
dec
pop
loopne
and
test
xchg
or
std
dec
jno
je
adc
je
inc
and
inc
loopne
sbb
inc
dec
ins
mov
jne
rcl
sbb
es
lock
sub
popa
sar
mov
xchg
sbb
out
cmps
hlt
sub
xor
mov
xchg
ret
arpl
pop
mov
add
clc
leave
xchg
xchg
xchg
or
mov
mov
rcr
pop
nop
inc
mov
adc
mov
test
(bad)
dec
push
xor
(bad)
in
int
ret
add
in
ret
and
mov
cdq
dec
push
inc
imul
mov
xchg
or
mov
add
mov
xchg
rol
jns
cmps
jge
mov
dec
ja
mov
out
out
sbb
ss
pusha
jle
mov
mov
ins
mov
stos
retf
repz
jmp
sbb
(bad)
and
sbb
and
cs
pop
fld
or
mov
sahf
aas
lods
mov
aas
jb
test
ins
rcl
inc
inc
or
cmp
xchg
retf
fst
fcom
test
sar
clc
add
idiv
jae
add
movs
push
push
jbe
out
js
movs
cwde
sub
mov
jns
mov
in
inc
xor
in
call
cmp
cmps
xchg
cmp
cwde
leave
or
gs
xchg
sbb
pop
nop
pop
aas
nop
out
xchg
jl
mov
cmp
xor
mov
test
bound
popf
test
shr
ret
jmp
cmps
add
jl
dec
ret
xchg
sbb
xlat
or
sub
int
mov
fiadd
outs
mov
mov
js
xchg
mov
sti
xchg
add
inc
and
push
or
push
mov
and
xor
cmps
cmp
nop
pop
outs
aaa
in
xrelease
xchg
adc
sub
inc
pop
imul
lock
or
imul
leave
jmp
pop
adc
sub
dec
mov
inc
push
add
and
push
or
dec
jo
dec
jo
es
and
ror
dec
sar
shl
repz
sahf
test
mov
xor
dec
mov
lock
rcl
mov
dec
sbb
xchg
adc
sub
jns
push
loopne
adc
xchg
fsub
dec
xchg
inc
dec
sbb
fsub
pop
dec
mov
inc
pop
lods
dec
pop
out
xor
cdq
push
les
(bad)
mov
jae
popa
push
aad
push
movs
cmp
xchg
dec
xor
dec
xor
xor
popa
movs
jmp
xchg
mov
jmp
xor
bound
add
lods
push
jns
repz
and
ret
movs
push
int
iret
repnz
test
mov
add
popf
dec
sub
js
xor
mov
cwde
adc
outs
inc
test
in
(bad)
aam
xchg
call
in
xchg
xchg
adc
xchg
or
push
loop
and
jmp
sbb
inc
test
repnz
stos
jnp
xchg
push
and
xchg
test
sbb
add
xchg
mov
sbb
leave
mov
inc
mov
xor
nop
test
popf
and
inc
out
popa
inc
popa
fadd
mov
pop
xor
in
ja
xchg
shl
push
xor
mov
mov
mov
cdq
xchg
fwait
pusha
cmp
mov
leave
in
sub
pop
jnp
iret
repz
jge
xchg
lods
push
repz
fnsetpm(287
ins
xchg
daa
(bad)
loop
std
mov
xchg
xor
lods
fadd
dec
mov
stc
or
adc
inc
and
dec
mov
and
mov
pop
test
xor
cmp
jno
push
les
pushf
cmp
mov
inc
pushf
gs
inc
dec
enter
xchg
das
repnz
xor
adc
fmul
inc
pusha
xor
pop
test
push
mov
leave
sbb
dec
rol
cmp
call
fstp
mov
shl
(bad)
inc
daa
cmps
lods
test
mov
pop
cmps
stc
cmp
xchg
cwde
mov
or
lahf
pop
sbb
cs
xchg
add
xchg
mov
sub
or
les
fst
push
mov
jnp
je
bound
leave
push
mov
push
pop
mov
pop
mov
inc
mov
jo
jmp
ins
scas
adc
and
mov
daa
(bad)
cdq
clc
push
mov
fnstsw
les
repnz
sbb
rol
mov
adc
outs
pop
inc
jbe
adc
push
push
dec
call
sbb
or
jmp
daa
inc
cmp
sbb
dec
(bad)
int
sbb
cmps
jno
xor
mov
xchg
inc
mov
pop
dec
and
fwait
dec
add
push
cdq
nop
inc
push
inc
push
push
or
jns
sub
test
inc
xchg
pop
test
bound
or
and
outs
and
adc
cld
add
cmps
sub
out
sahf
imul
push
ins
xchg
repz
mov
sahf
fistp
repnz
xor
push
mov
jecxz
lock
dec
(bad)
sbb
push
and
xchg
cwde
xchg
jo
mov
lock
adc
adc
adc
ret
adc
movsx
aaa
mov
xor
xor
pusha
(bad)
aaa
cwde
xor
xchg
cdq
xor
inc
xchg
cmp
mov
cmp
popa
leave
stos
mov
jne
mov
mov
jo
fsub
or
test
test
or
hlt
xchg
xor
xor
mov
sbb
mov
pop
popa
dec
cmp
in
or
pop
repz
out
mov
mov
loopne
mov
dec
gs
jne
add
add
leave
and
outs
adc
inc
test
sbb
inc
adc
fisttp
inc
nop
push
or
pop
ret
stos
aaa
add
loopne
cmp
mov
push
and
inc
fs
cmp
push
fwait
pusha
inc
cmp
bound
adc
dec
outs
adc
xchg
pop
add
test
adc
push
push
dec
pop
pusha
shl
fnsetpm(287
scas
dec
adc
dec
addr16
pushf
sbb
cmp
loope
(bad)
nop
fs
xchg
and
jb
xchg
popa
sti
mov
es
pop
or
adc
mov
cmps
push
enter
mov
pop
or
cmp
repz
movs
out
jne
movs
movs
pop
or
push
jmp
dec
or
scas
push
cmps
pop
in
pop
mov
sub
sar
sub
shl
jmp
and
retf
mov
js
or
cmp
jl
jmp
add
xor
xor
les
inc
sbb
mov
movs
inc
mov
lahf
or
retf
popa
loopne
loopne
mov
inc
xchg
add
xor
or
and
outs
inc
ins
or
inc
push
nop
and
dec
rol
(bad)
inc
and
pop
cmps
or
jne
retf
cmp
and
pop
inc
mov
data16
mov
ja
inc
gs
push
shl
add
(bad)
mov
aas
push
adc
mov
movs
add
dec
cmps
fadd
scas
out
aas
adc
icebp
inc
lea
or
aaa
pop
adc
add
push
pusha
add
bound
dec
or
mov
jl
push
push
dec
xor
add
add
or
or
sti
sub
das
in
inc
xor
add
fstp
fwait
sub
and
(bad)
fs
fistp
mov
sbb
js
imul
pop
add
shl
or
cmps
inc
add
inc
jnp
jo
dec
nop
and
repz
and
dec
add
adc
movs
dec
xlat
call
add
pop
cmp
fs
nop
mov
and
add
sub
push
xor
push
ret
sti
mov
cmp
jecxz
sbb
stos
mov
inc
int
mov
add
mov
push
cmp
cmc
ja
jb
ja
(bad)
fistp
xchg
(bad)
ror
lea
pop
mov
push
movs
add
je
test
movs
scas
xchg
or
cli
and
daa
mov
xor
push
add
sbb
sbb
push
je
dec
je
dec
adc
add
xlat
rol
adc
ret
je
sbb
mov
mov
pop
mov
cmp
cwde
jl
sub
xchg
lahf
scas
or
or
jmp
idiv
ins
xchg
jmp
mov
jmp
test
jne
mov
jle
dec
ja
repnz
sub
sbb
adc
ins
sub
sub
je
mov
mov
ret
dec
or
rcl
cmps
add
cmp
jne
xor
push
dec
add
das
test
outs
jmp
imul
push
fsubr
pop
adc
push
loope
cmc
inc
fild
jecxz
fcmovb
mov
jae
xor
daa
lods
rol
mov
rcl
clc
adc
fcomp
call
cs
or
ret
daa
mov
dec
cwde
repz
sbb
mov
xchg
xor
pop
sub
add
add
cmp
and
mov
mov
sahf
retf
fucomi
aas
lods
mov
mov
pop
and
call
add
inc
hlt
jae
mov
mov
pop
pop
popa
jmp
movs
(bad)
in
mov
out
xor
xchg
je
xchg
dec
(bad)
adc
rcr
leave
retf
xchg
xchg
pop
xchg
fwait
or
lods
fisttp
inc
mov
cmp
dec
ins
jmp
pop
mov
(bad)
sbb
mov
xlat
dec
fwait
enter
loopne
xor
pop
into
xchg
popf
inc
dec
jmp
fsubr
pop
test
adc
inc
mul
sbb
shr
mov
ins
cmps
cmp
pop
int3
icebp
or
adc
jo
mov
mov
dec
in
mov
sub
sub
and
inc
not
aaa
jl
push
jmp
call
pusha
add
test
push
cmp
jmp
scas
(bad)
loopne
dec
hlt
je
jmp
retf
sbb
or
js
pop
bound
xor
jl
mov
xor
mov
sbb
push
cs
add
inc
or
mov
xchg
sub
push
dec
ds
mov
add
ja
mov
cmp
xor
xchg
lods
lea
ret
ss
stos
jle
sub
and
clc
mov
xor
loopne
loopne
movs
stc
repnz
pop
movs
jb
ss
in
or
icebp
rol
bnd
jns
xor
mov
sti
inc
pop
mov
xor
test
xor
jo
and
mov
ficom
inc
imul
push
sbb
cmp
fsubr
adc
mov
and
scas
test
js
mov
and
cmps
xchg
add
push
add
fistp
pop
xor
push
jge
dec
pop
pop
outs
push
rcl
js
push
std
cmp
xor
sub
adc
dec
push
mov
inc
pop
inc
ret
das
xor
pop
add
sbb
mov
sbb
sar
mov
and
and
or
les
test
loope
rcl
test
and
pop
or
inc
xor
popa
xor
scas
sbb
addr16
jb
out
xchg
imul
xor
lods
adc
aaa
imul
add
imul
popa
out
mov
mov
dec
fwait
jae
xor
cmps
xchg
jo
xchg
das
jecxz
or
sbb
xchg
inc
ficomp
es
outs
aaa
push
es
imul
imul
ja
ret
mov
arpl
xor
xchg
inc
inc
inc
pop
push
leave
inc
ret
pop
inc
add
lock
xchg
popa
das
iret
inc
ret
push
add
retf
add
sbb
push
xor
jns
add
mov
add
sbb
push
nop
mov
int3
pop
sbb
jno
or
(bad)
inc
xor
mov
jl
add
add
pop
fidivr
push
push
mov
jo
or
cs
cmp
ds
cmp
mov
call
adc
push
test
leave
mov
inc
fcmove
mov
sub
mov
push
leave
mov
pop
into
shl
xor
out
pop
sbb
repz
call
inc
es
inc
jp
cmps
div
and
aaa
push
sbb
jnp
aaa
jmp
rcr
cmp
imul
dec
sub
xor
jbe
pop
mov
add
call
es
add
or
fidiv
nop
adc
test
(bad)
sbb
dec
ret
cmp
or
nop
and
fld
(bad)
daa
jns
movs
mov
mov
mov
mov
mov
bound
adc
es
ror
adc
rcl
iret
nop
jp
mov
in
and
mov
cmp
out
pop
push
and
push
call
nop
pop
shr
mov
jmp
jne
xchg
push
shl
add
sbb
ins
jecxz
stos
xchg
test
arpl
clc
aas
sbb
mov
test
xor
push
adc
or
fs
jp
adc
or
mov
push
and
add
pop
test
mov
arpl
aam
or
loopne
sub
bound
or
pop
(bad)
mov
add
dec
sahf
push
pop
pop
cmp
add
mov
mov
pusha
push
inc
jl
inc
add
fwait
inc
and
sub
xor
scas
mov
and
add
fpatan
cmps
xchg
sub
call
sbb
add
mov
mov
ret
enter
sbb
test
sbb
inc
fsub
adc
stos
or
add
or
das
xchg
pop
rcr
xor
push
mov
fs
pusha
push
mov
outs
repnz
xor
mov
and
dec
jmp
cs
xor
clc
movs
push
push
scas
push
inc
cmps
(bad)
enter
mov
(bad)
call
loopne
loop
in
shl
mov
sbb
jg
xchg
fbstp
icebp
pop
or
add
fild
sub
dec
jle
pushf
loopne
js
sar
mov
pusha
gs
(bad)
shr
add
dec
hlt
adc
xchg
inc
xor
jmp
icebp
inc
fstp
cmps
jle
jo
mov
or
mov
pop
add
mov
imul
ss
sbb
mov
dec
shl
rcl
mov
inc
add
mov
arpl
gs
push
push
sub
cmp
add
inc
mov
jae
rol
sbb
mov
xchg
cmp
std
shr
inc
loope
das
mov
leave
int
push
aam
adc
pop
pop
inc
push
sub
adc
ror
mov
fldcw
cmp
inc
or
or
(bad)
pusha
stos
pop
mov
mov
mov
xor
fwait
jae
sub
packsswb
and
pusha
scas
test
push
and
push
adc
pop
mov
mov
lods
dec
rcr
call
jnp
je
fimul
adc
into
sub
mov
aam
clc
jmp
popa
cmp
or
js
aaa
lock
lea
pop
cmp
jns
or
js
add
call
jmp
mov
out
xchg
arpl
add
or
cmps
inc
or
push
repz
cwde
and
leave
nop
cmp
cld
cmp
(bad)
xor
into
cmp
call
xchg
and
adc
stc
xchg
sti
inc
mov
mov
dec
push
inc
push
mov
sub
cmp
mov
lahf
xchg
rcr
xchg
mov
jno
lods
cli
or
push
std
(bad)
adc
mov
inc
xor
xchg
push
inc
nop
rcr
ins
hlt
xor
inc
out
cmp
pop
ins
xor
add
cmp
das
inc
cwde
jp
shl
int
and
push
call
sub
add
aad
js
sbb
or
push
pop
or
mov
jmp
mov
ret
jp
xor
lods
ja
push
mov
adc
(bad)
ret
pop
fbstp
test
jmp
mov
add
loopne
imul
or
mov
and
or
push
push
inc
push
push
inc
dec
cmc
or
inc
push
or
arpl
test
sub
pop
push
lock
loop
ins
adc
ins
jb
push
sub
and
arpl
popa
lods
sub
retf
loope
jb
jmp
adc
mov
adc
cmp
loop
data16
mov
pop
inc
or
and
add
out
aad
inc
pop
jb
aaa
loop
sub
sbb
dec
push
out
adc
xchg
ins
imul
in
call
or
sub
adc
ja
and
fldz
pop
jecxz
pusha
mov
pop
dec
jae
loop
mov
mov
call
push
adc
ja
xchg
sahf
outs
fdiv
push
mov
ror
adc
inc
xchg
mov
test
add
cmc
and
push
je
out
out
addr16
ret
inc
pop
inc
inc
add
cmp
or
pop
nop
addr16
or
outs
fs
cmp
push
test
or
push
pop
add
adc
mov
adc
push
(bad)
lock
or
test
or
jo
pusha
fisubr
mov
sub
cld
(bad)
test
adc
outs
sbb
pop
pop
sbb
jae
test
nop
es
in
push
(bad)
add
bound
jb
clc
hlt
lock
ret
jb
loopne
mov
mov
push
mov
rol
push
mov
sub
clc
ss
and
in
inc
sbb
xchg
cmp
into
add
add
leave
in
stos
xor
inc
test
sahf
add
pop
bound
xor
mov
les
mov
pop
mov
sbb
movs
not
inc
inc
sbb
movs
fdivr
out
jne
pop
mov
mov
pop
cmp
push
inc
push
mov
ficom
sub
add
neg
and
push
push
adc
sar
dec
test
dec
outs
or
or
popa
add
xor
enter
mov
xchg
out
or
movzx
add
adc
aad
neg
test
(bad)
call
push
add
fist
leave
pop
and
pop
in
shl
add
add
fiadd
jne
xor
fimul
mov
mov
jne
add
fimul
xchg
shr
inc
or
loope
std
invd
add
sub
xor
out
cmp
out
sbb
mul
jbe
mov
sbb
sub
cmp
call
xor
xor
or
rcr
dec
xchg
adc
or
gs
adc
test
inc
inc
and
(bad)
push
out
in
dec
fcom
xchg
lods
sbb
jns
out
pop
push
mov
mov
fcomip
or
sub
xor
cmp
mov
mov
sub
ror
dec
leave
and
and
(bad)
in
shl
add
in
cdq
ficom
sub
mov
or
leave
add
(bad)
stc
arpl
sub
sbb
fist
push
add
add
pop
add
jo
call
mov
add
inc
inc
xor
or
mov
xchg
or
fild
(bad)
ja
(bad)
mov
cmp
repz
push
inc
retf
push
jns
iret
repz
call
(bad)
(bad)
leave
xlat
xor
ret
out
push
loop
hlt
pop
or
mov
mov
push
adc
pop
fs
add
fistp
test
pop
sti
adc
adc
adc
mov
out
adc
(bad)
sub
les
ins
adc
sub
and
mov
adc
shl
xor
add
adc
xor
sbb
add
call
loope
add
push
shl
je
or
ret
add
mov
test
ftst
push
fwait
sahf
push
add
fxtract
fxch
fistp
loop
push
mov
(bad)
(bad)
fscale
inc
fstp
pop
fstp
fwait
div
loopne
es
rcr
fld
xor
fcom
jne
fistp
xor
sbb
add
je
bound
fmul
shr
jae
es
fstp
jnp
add
in
xor
fdivp
jmp
ss
fstp
fldln2
fdiv
push
fmulp
fldl2e
adc
fdivrp
mov
push
ror
rcl
cmps
lea
pop
ficomp
ja
dec
xor
test
sar
cs
xchg
dec
add
add
add
adc
push
mov
inc
test
add
push
or
push
out
jmp
aaa
jecxz
jecxz
pusha
mov
rol
jg
cld
inc
mov
add
rcl
adc
clc
aam
cmove
xor
cs
inc
int3
leave
pop
push
adc
jbe
in
fmul
int3
inc
cld
pop
fmul
sub
mov
jno
add
adc
and
sti
sub
test
das
sub
sbb
xor
arpl
rol
cs
ror
int
hlt
test
mov
inc
test
xchg
push
rol
dec
add
mov
push
mov
add
add
pop
adc
jno
call
and
ds
pop
movs
push
sbb
pop
shl
cmp
enter
mov
xlat
nop
iret
or
jb
xchg
into
mov
inc
int
mov
pop
rol
out
add
retf
mov
sgdtd
push
add
pop
push
push
outs
and
xchg
es
xchg
pushf
aaa
test
mov
mov
adc
pop
add
test
je
adc
pop
xchg
mov
(bad)
mov
xchg
pop
mov
lock
inc
sbb
mov
and
and
ins
adc
in
jnp
push
mov
mov
dec
cmps
mov
jo
add
push
and
out
in
dec
adc
or
enter
clc
clc
and
push
hlt
add
ror
inc
das
hlt
hlt
lahf
outs
sahf
out
fisubr
leave
shr
out
fnstsw
adc
cld
idiv
out
push
test
es
push
pop
loopne
mov
sub
in
rol
rol
mov
pop
test
fs
or
mov
push
or
push
jmp
jg
xchg
xchg
push
mov
add
inc
add
test
call
retf
jmp
ret
push
add
(bad)
movsx
add
sbb
or
adc
jns
cmp
in
lahf
push
push
add
mov
(bad)
cmp
dec
mov
push
mov
jbe
dec
add
cmp
add
sbb
jbe
jge
xchg
mov
dec
add
mov
mov
xchg
imul
xchg
inc
pusha
ins
movs
inc
(bad)
aad
add
sar
out
jle
pushf
mov
inc
in
rol
jb
retf
push
mov
adc
push
or
pop
iret
add
mov
or
or
enter
sbb
pop
adc
mov
nop
out
loopne
das
(bad)
cld
lods
das
dec
or
in
or
(bad)
or
(bad)
or
cdq
sbb
pop
mov
sbb
in
inc
add
(bad)
scas
push
push
sbb
mov
sti
xchg
mov
or
sbb
mov
dec
adc
cmp
in
adc
iret
push
dec
or
push
sar
nop
add
clc
ret
mov
sti
dec
push
adc
loope
jge
fwait
cmp
pop
pop
retf
xchg
pop
xchg
dec
add
loopne
aaa
and
cmp
adc
xor
add
cmps
loopne
shl
adc
rcr
aas
adc
cmp
fadd
cmps
sbb
jecxz
jbe
jmp
add
xchg
add
cmp
dec
or
les
pop
fisubr
int3
popa
xchg
mov
out
pop
pop
mov
ja
repz
lods
xlat
dec
push
enter
iret
iret
(bad)
fnstsw
pop
leave
xchg
test
and
out
or
and
mov
cmp
mov
mov
pop
mov
mov
jle
mov
add
mov
dec
inc
inc
and
inc
aad
test
jnp
xchg
pusha
push
sti
inc
dec
add
dec
pop
add
ret
sbb
pop
inc
jnp
mov
je
add
cmp
sbb
ret
sti
out
repnz
mov
or
cmp
pop
ret
mov
pop
sbb
sbb
push
add
rcr
sub
test
mov
cs
mov
pop
ret
fcomp
sub
(bad)
(bad)
mov
pop
mov
sbb
test
and
imul
loopne
mov
jge
pop
pop
jmp
repnz
(bad)
xchg
xchg
mov
add
sub
fild
inc
sti
cmp
jno
xchg
jnp
jno
and
jns
and
inc
shl
and
mov
mov
jo
xor
xchg
dec
mov
add
push
call
mov
inc
mov
pop
sub
or
xor
aad
push
xlat
push
and
and
and
fnstsw
xchg
jl
sub
cdq
or
mov
add
sub
popf
into
loop
(bad)
sub
add
cmp
sub
inc
cdq
mov
pusha
sub
or
pop
js
or
mov
loope
xor
mov
add
sahf
xchg
sahf
ror
hlt
xchg
fwait
sub
jnp
or
stos
outs
push
lea
rol
push
fstp
mov
xlat
inc
or
sbb
xchg
scas
test
mov
je
adc
add
xor
mov
dec
popf
mov
push
sbb
sbb
and
push
rcr
cmp
pop
push
shr
(bad)
pop
daa
fcomp
push
in
xchg
xor
and
bound
cmps
adc
or
mov
cld
cmp
pcmpeqw
int3
xor
cmp
mov
(bad)
mov
daa
(bad)
mov
imul
xlat
out
and
pop
call
bound
inc
or
add
ds
dec
stos
inc
test
out
add
push
dec
push
or
loopne
sub
push
inc
mov
ja
arpl
retf
(bad)
dec
xor
add
push
xor
gs
push
shr
mov
or
xchg
dec
mov
pop
add
jmp
sub
jmp
das
arpl
or
mov
mov
das
jecxz
lahf
or
or
out
push
and
fiadd
int3
lahf
inc
scas
or
out
retf
int
loopne
mov
(bad)
movs
add
xor
rol
push
popf
imul
cs
(bad)
adc
sub
xchg
retf
adc
adc
loopne
push
out
mul
(bad)
mov
inc
out
loope
pop
test
push
sub
ins
clc
push
and
xor
clc
sahf
adc
mov
loope
add
and
inc
push
out
push
push
ret
fmul
xor
shl
add
adc
push
pop
ins
int3
xor
sbb
push
je
mov
fucomp
mov
add
repz
jg
and
enter
test
rol
mov
fild
loop
pop
pop
push
mov
mov
(bad)
cli
push
clc
mov
(bad)
in
jns
stc
inc
in
loop
jecxz
jecxz
xchg
mov
jecxz
repnz
mov
pusha
in
pop
enter
test
mov
ds
jecxz
pop
mov
out
inc
adc
jmp
mov
mov
repz
dec
or
add
aad
mov
inc
add
aas
mov
ss
jae
shr
shl
xchg
(bad)
inc
imul
xor
add
mov
ja
aas
ins
aas
ins
aas
imul
dec
dec
mov
sahf
pop
aaa
pop
movs
ror
loop
in
jo
lods
push
imul
cmp
pushf
push
mov
adc
and
xchg
jne
js
inc
enter
mov
mov
pusha
mov
sbb
aaa
pop
inc
pop
pop
adc
push
out
mov
or
ja
mov
outs
test
retf
fisub
fnstcw
in
xor
pop
cli
fldenv
cs
outs
dec
outs
xchg
mov
adc
inc
iret
dec
mov
arpl
dec
bound
loop
jns
or
adc
push
popa
add
pop
outs
pop
push
mov
sbb
and
mov
shl
cs
jecxz
rcr
leavew
fadd
add
mov
inc
ja
out
es
scas
mov
push
adc
push
dec
neg
lods
jmp
std
popa
jl
pop
add
jmp
xor
jge
(bad)
scas
mov
jmp
push
pop
jae
and
sub
ins
push
or
lods
add
test
shl
xor
inc
sub
pop
pop
jns
xchg
and
adc
inc
mov
dec
pop
xor
mov
fs
xchg
add
push
sahf
dec
inc
loopne
aas
ret
push
push
out
pop
pop
xor
mov
add
cmp
xor
fs
outs
dec
ja
dec
gs
or
loope
inc
pop
ins
jae
add
loop
pusha
loopne
adc
ja
dec
ja
mov
add
add
inc
fld
(bad)
repnz
push
xor
cmp
imul
or
ret
dec
adc
ret
mov
or
pushf
inc
arpl
fdivr
jecxz
or
adc
xor
add
imul
jl
push
test
dec
mov
pop
xchg
fcomp
aaa
inc
inc
mov
xor
je
lahf
dec
data16
fisub
ret
inc
outs
adc
xor
adc
lds
sbb
dec
add
pop
(bad)
mov
ins
fisttp
mov
mov
nop
and
ficomp
pop
push
enter
adc
sub
not
pusha
cs
or
xor
(bad)
cmp
sub
leave
cmp
scas
jmp
adc
in
es
clc
cmp
arpl
sub
jne
gs
pusha
pop
lea
and
pusha
sub
mov
add
push
or
mov
push
aas
mov
stc
ins
jecxz
shr
test
sub
xor
mov
lock
sbb
inc
and
leave
daa
lods
out
movs
je
icebp
xchg
pop
(bad)
mov
add
pop
mov
push
stc
or
ret
push
mov
je
pop
(bad)
sbb
ficom
push
cwde
dec
pop
(bad)
pop
and
push
or
dec
sbb
repz
in
lahf
rcr
adc
xchg
xor
push
add
rcl
sbb
outs
jge
dec
shr
jmp
(bad)
shl
cld
mov
xlat
mov
push
or
and
add
xlat
cmc
enter
pushf
in
mov
push
adc
nop
ja
out
add
and
xchg
mov
sub
out
ins
add
or
jmp
(bad)
ss
mov
xor
lods
push
mov
adc
imul
xchg
gs
mov
ret
push
sbb
pop
pop
cmp
sbb
mov
pop
sbb
xor
jp
sbb
jp
retf
jns
(bad)
lods
sub
dec
outs
inc
in
jp
jno
pop
(bad)
cmp
mov
popf
push
adc
push
inc
inc
push
xchg
lock
fistp
jmp
jbe
rol
fldcw
es
popf
(bad)
pop
retf
stos
aad
jnp
(bad)
ins
or
xchg
(bad)
hlt
push
hlt
push
aad
lock
push
hlt
clc
nop
xchg
arpl
cli
popa
sub
xchg
jne
push
icebp
movs
cmp
fs
inc
sti
cmp
pop
shl
(bad)
dec
ror
dec
dec
fcmovnb
jo
mov
das
test
sbb
repz
fiadd
div
clc
xchg
jg
in
cli
hlt
(bad)
sbb
pop
sahf
add
inc
sbb
add
mov
xchg
xchg
jo
sbb
scas
push
add
aad
fldenv
jae
sub
(bad)
inc
sar
or
mov
pop
mov
(bad)
popa
inc
mov
stos
mov
cmp
push
push
out
addr16
cmp
(bad)
adc
and
in
xchg
mov
add
xchg
jo
push
sub
sbb
addr16
mov
lea
imul
sbb
in
mov
add
test
(bad)
frstor
xor
add
or
out
leave
sub
out
mov
inc
pop
pop
add
add
test
fild
iret
or
hlt
outs
out
adc
cmp
pop
xor
cld
or
mov
mov
add
adc
sub
adc
xor
xor
push
nop
icebp
pop
add
pop
dec
mov
add
pop
or
or
xchg
outs
xchg
push
xor
ror
and
jnp
pop
icebp
add
lahf
(bad)
mov
test
sub
jmp
jmp
adc
or
push
cmp
shl
xchg
jns
cmp
fsubr
je
sub
xlat
add
jmp
push
inc
dec
sbb
outs
ror
sub
jmp
sub
out
and
fist
dec
xchg
jo
add
popf
mov
add
or
mov
pop
je
push
add
sbb
push
mov
mov
push
push
inc
cwde
fmul
scas
sub
cmp
rcl
(bad)
(bad)
push
add
inc
int
cmp
imul
push
inc
pop
adc
lahf
movs
jno
mov
xchg
je
xor
xchg
stos
imul
cwde
enter
fdivr
cli
imul
jbe
dec
jmp
movs
push
iret
cmp
mov
push
or
das
lahf
out
sbb
xor
test
fcomp
rcr
jp
sub
inc
add
cwde
mov
adc
adc
sub
stos
lahf
(bad)
adc
stos
or
xchg
jo
pop
push
test
sbb
xchg
in
or
dec
xchg
or
cdq
mov
cld
adc
adc
and
std
fcomp
mov
test
call
push
jmp
xor
jmp
stc
ds
mov
je
(bad)
sbb
adc
mov
aad
nop
push
ret
clc
fnsave
fs
xchg
sar
or
lea
out
xor
xor
push
xchg
popa
sti
push
xor
mov
mov
mov
nop
dec
or
call
sub
add
arpl
ret
ins
fist
movs
mov
dec
ret
mov
push
cmp
inc
push
adc
movs
xor
movs
lods
lds
je
dec
scas
mov
stos
mov
jmp
test
jns
call
and
add
pusha
or
or
push
sub
jns
cmp
push
push
shl
outs
(bad)
mov
push
mov
ror
lea
dec
mov
aad
inc
ja
xor
les
push
int3
cmp
js
int
mov
dec
mov
imul
fmul
rcl
dec
xchg
jle
inc
in
lea
jg
sbb
add
adc
inc
dec
and
inc
movs
leave
add
mov
ror
retf
fs
iret
mov
push
imul
cmp
mov
rcr
sub
add
jmp
cmp
iret
dec
ror
hlt
xor
nop
scas
hlt
or
add
stos
push
call
xor
add
or
cmp
retf
mov
push
loopne
enter
or
popa
pop
push
and
inc
sbb
lods
and
or
adc
ja
inc
lahf
and
dec
hlt
lahf
int
xchg
jp
xor
ret
jle
or
push
adc
or
pop
sub
les
loope
sub
scas
and
stos
dec
cmp
jb
or
push
push
xchg
pop
xchg
nop
add
xchg
cmp
cmps
xor
in
in
jb
icebp
add
das
fs
add
jecxz
and
mov
cmp
add
sub
add
xor
and
xchg
iret
adc
adc
mov
imul
mov
in
pop
xor
jmp
xchg
or
and
shl
cmp
cdq
and
in
cmp
cmp
or
sub
push
jo
ret
inc
or
fmul
dec
je
pop
push
ss
xchg
push
mov
sub
lock
add
xor
inc
adc
jl
retf
sub
mov
pop
and
ja
data16
inc
cmp
sbb
mov
jne
repz
scas
and
xchg
pop
jns
dec
and
movs
mov
lahf
jp
data16
add
push
test
das
daa
cdq
inc
jp
push
scas
mov
pop
ret
inc
movs
inc
rcr
xchg
lock
cld
cwde
inc
jno
jmp
dec
jne
sbb
sub
mov
xor
rcr
pop
pop
xor
enter
xchg
lods
lock
sub
cld
sar
in
or
mov
lea
or
xor
xor
scas
je
add
arpl
js
mov
mov
call
inc
lahf
nop
in
push
sub
cmc
add
mov
cld
je
sub
xor
aaa
push
sub
cwde
sub
imul
adc
sub
push
pop
enter
(bad)
mov
pop
and
inc
jbe
lock
aas
mov
dec
lods
cmps
push
push
inc
mov
in
je
sbb
pop
add
aas
ror
movlps
ins
or
adc
sub
sbb
test
je
sub
add
add
sbb
sub
sbb
hlt
sbb
ret
out
add
inc
jne
fst
xor
push
scas
lahf
push
sbb
jl
xor
xlat
shl
ret
push
add
sub
push
cwde
push
outs
retf
das
sbb
pop
add
and
mov
nop
add
xor
add
jecxz
enter
jo
mov
pop
shl
pop
es
pop
push
fs
or
or
loope
sbb
add
adc
pop
add
test
jnp
jmp
mov
lods
sbb
imul
out
sbb
test
and
pop
inc
add
adc
pop
adc
rcl
adc
in
retf
ror
sar
inc
and
adc
mov
sub
dec
xchg
add
pusha
clc
test
xor
xchg
xchg
or
push
fcmovnbe
call
les
ror
nop
push
cmps
or
daa
clc
sbb
or
inc
in
mov
loope
dec
sub
mov
push
jne
and
inc
and
xchg
push
and
pop
add
pop
lods
fsubrp
lsl
jo
adc
pushf
cmp
icebp
mov
mov
subps
xor
lods
pop
jo
aaa
adc
pop
daa
imul
add
jmp
dec
and
pop
add
cmps
push
adc
fistp
shr
aas
adc
pusha
add
and
sbb
and
or
daa
adc
mov
xchg
and
add
inc
mov
add
sbb
cmp
retf
push
cmp
sahf
int
mov
dec
pop
std
or
lea
into
add
and
xor
pop
sahf
fldenv
lahf
jg
pop
pushf
int
imul
add
xlat
or
inc
(bad)
lahf
jecxz
js
stc
lahf
cmp
fiadd
push
inc
inc
ret
int3
push
push
add
sar
add
sub
add
or
adc
arpl
push
nop
out
inc
cld
jecxz
jo
scas
inc
dec
shl
cld
and
idiv
push
mov
pop
jle
test
inc
mov
mov
bound
mov
fdivp
adc
sbb
pop
pop
cmc
shr
and
outs
leave
sbb
xor
nop
sbb
ja
daa
mov
jb
rcr
push
add
jg
enter
hlt
jge
push
adc
jnp
mov
push
dec
sub
push
inc
dec
pop
inc
sahf
ret
imul
rcr
and
or
jbe
in
(bad)
mov
push
pop
and
pop
in
ins
pusha
xchg
outs
or
and
in
push
cmp
xchg
cmp
or
lods
and
jo
xor
iret
adc
push
loope
pop
shl
call
popa
in
mov
and
mov
mov
mov
inc
xor
pop
int3
sbb
push
inc
cmp
fucomp
xor
push
es
push
shl
(bad)
dec
aas
retf
icebp
push
inc
push
jnp
add
mov
lea
retf
or
jo
sahf
cdq
aaa
add
or
mov
jae
cwde
xor
add
cmp
inc
cmp
dec
sub
cmp
and
add
pop
sub
dec
or
es
adc
jb
fimul
dec
inc
cs
fcomp
add
fldenv
and
enter
cld
cld
add
(bad)
cmp
xor
repnz
rdtsc
les
jmp
push
daa
loope
jle
push
xor
mov
mov
ds
pop
aas
xlat
cmp
sub
jne
das
add
inc
add
into
jno
dec
add
jns
inc
outs
or
sti
retf
pop
pop
cmp
and
and
sbb
nop
inc
pop
clc
movs
sub
dec
pop
lods
popf
lock
pop
mov
mov
xchg
mov
adc
lock
icebp
mul
nop
xchg
dec
push
div
xor
push
adc
call
movs
push
retf
add
cmp
add
add
rcr
movs
push
nop
scas
mov
into
push
fmul
add
loope
push
sbb
xchg
jmp
(bad)
ror
push
pushf
jp
mov
je
(bad)
pop
add
daa
frndint
add
lea
(bad)
xlat
jl
in
add
pop
lock
fild
and
pop
inc
xor
jl
not
je
dec
cmp
sub
xor
mov
jbe
inc
retf
inc
and
adc
add
bound
fisttp
mov
or
icebp
int
and
or
and
neg
sbb
add
and
inc
push
stos
cmp
clc
dec
inc
push
dec
(bad)
push
pushf
out
loopne
inc
or
rol
pop
leave
aam
sub
pusha
sqrtps
push
fst
sbb
push
dec
cmp
push
into
cmps
sbb
add
popa
adc
gs
push
sar
fimul
je
inc
push
jg
push
dec
cmps
test
jp
cs
sar
add
sbb
sbb
adc
xor
int
jmp
mov
rol
repz
ret
imul
push
adc
xor
or
push
rol
mov
xor
movs
aaa
xchg
inc
aaa
fdiv
jle
in
iret
dec
push
mov
fild
and
inc
loopne
xchg
jb
add
jmp
push
test
or
inc
imul
outs
dec
pushf
dec
lods
jge
jo
add
les
xchg
mov
repz
inc
mov
adc
je
cmp
clc
inc
stc
int3
xor
fld
or
add
imul
pop
das
dec
add
(bad)
adc
lea
adc
jle
test
and
inc
pusha
repnz
add
dec
mov
pop
aam
fisub
test
dec
adc
mov
data16
cdq
ret
push
inc
iret
sub
sub
pop
push
or
in
jo
jmp
mov
jb
and
and
push
sar
inc
pusha
mov
dec
push
iret
pop
sub
sbb
and
mov
pop
xor
ss
rcl
dec
sbb
adc
mov
xchg
bound
mov
dec
mov
sub
sbb
bound
sbb
jnp
in
aaa
sub
push
repnz
inc
and
inc
dec
pop
daa
sbb
push
and
jnp
xchg
mov
xor
jae
dec
ror
cmps
daa
or
adc
imul
daa
and
push
or
dec
dec
mov
or
and
and
pop
cmp
dec
cmp
out
jno
sub
jmp
shr
out
adc
jne
pop
mov
and
sbb
push
sub
add
push
sbb
inc
cs
pop
mov
pop
movs
adc
sbb
adc
push
lods
sbb
fadd
inc
mov
ficom
out
push
push
outs
dec
dec
sbb
push
and
push
mov
nop
and
inc
push
mov
mov
fwait
js
dec
movs
test
ror
or
adc
adc
xor
or
test
ret
or
pusha
mov
pop
jb
mov
movs
lds
enter
inc
sub
jae
or
out
xor
mov
aad
pop
adc
jmp
inc
out
pop
push
loope
push
inc
jno
retf
pusha
pop
test
imul
push
add
repz
jne
lds
pop
xlat
out
add
pop
out
test
arpl
repnz
inc
mov
or
or
loope
inc
inc
mov
push
xchg
mov
xlat
push
or
mov
and
sahf
out
dec
addr16
sbb
dec
ror
aaa
pop
push
das
inc
adc
pop
imul
or
jb
xor
mov
fcomp
repz
int
dec
inc
ss
push
add
xor
inc
cwde
add
out
dec
mov
add
jp
jmp
into
or
das
or
dec
mov
xor
or
pusha
adc
dec
ret
add
iret
imul
sub
or
sbb
imul
push
pusha
push
ror
and
sub
mov
push
xchg
cmovbe
fs
xchg
mov
jmp
mov
add
repz
mov
mov
inc
sub
or
shrd
sub
sub
push
rcl
pop
and
push
je
pusha
mov
aam
dec
mov
xor
dec
leave
fldcw
lea
stos
or
arpl
push
sahf
call
sub
lock
call
vmwrite
cdq
movs
popf
xchg
add
adc
in
dec
outs
stc
arpl
into
push
iret
clc
adc
gs
xchg
test
xlat
inc
sbb
sub
loop
stc
icebp
mov
cli
push
outs
add
fld
jno
xor
pop
xor
inc
push
shr
mov
add
cmps
adc
pop
aad
ins
pop
jl
ins
inc
mov
jmp
ja
add
pop
inc
mov
xor
adc
jmp
jmp
xor
xchg
mov
shl
push
mov
adc
dec
pop
out
adc
xor
test
test
loopne
cmp
cmp
sbb
pop
stc
daa
cdq
sbb
aam
xor
nop
out
in
scas
(bad)
jae
je
inc
add
xchg
test
and
and
call
push
xor
in
push
or
xor
or
adc
rol
or
enter
fwait
(bad)
mov
sbb
cmp
sub
lods
pop
nop
lsl
scas
aam
inc
js
sub
mov
jns
xor
fs
sub
and
add
punpckhdq
add
enter
scas
pop
xor
mov
and
xor
sbb
inc
shr
test
shl
pop
jb
mov
call
je
je
data16
mov
hlt
dec
jo
push
outs
sahf
cmps
(bad)
enter
push
mov
dec
loope
jo
push
add
das
pop
(bad)
push
jb
invd
add
add
repnz
add
or
inc
or
jnp
add
push
add
(bad)
xor
sar
in
add
add
ss
cmp
pop
xor
icebp
mov
push
test
pusha
add
ss
xor
jle
nop
push
jae
sbb
jecxz
sbb
sub
xor
push
aaa
pop
and
hlt
jne
sub
cmp
outs
mov
jo
sti
adc
mov
sbb
in
sbb
jno
mov
pop
push
jo
mov
inc
fldcw
dec
ds
add
add
inc
mov
dec
hlt
or
ss
or
jb
rol
enter
sub
or
sub
icebp
push
aad
movs
add
pop
shr
pop
adc
sub
cmp
adc
xor
(bad)
mov
ja
call
add
std
test
mov
dec
adc
aaa
inc
or
fs
mov
stc
fs
sbb
inc
data16
fs
shl
adc
push
fs
push
jge
push
pushf
mov
jmp
xor
mov
or
ins
daa
mov
movs
cmp
dec
add
ins
mov
or
popa
inc
push
nop
fstp
(bad)
or
sub
fs
sbb
das
push
add
shl
pop
push
and
ss
outs
lea
arpl
clc
jno
dec
rol
imul
or
pop
test
xor
dec
jnp
inc
mov
mov
xor
inc
cmp
cmp
add
push
nop
push
mov
mov
push
xchg
inc
mov
das
cld
dec
inc
inc
ins
outs
fnstcw
push
cmp
nop
sbb
sub
in
test
cmp
ret
adc
push
cmp
adc
lods
(bad)
push
sub
or
loopne
xor
add
shl
and
retf
cmps
and
cmp
adc
iret
dec
mov
test
xor
or
inc
cmp
or
repnz
cmp
cmp
pop
push
repnz
add
inc
pop
xchg
adc
or
pop
fs
pop
xor
xor
sbb
push
or
call
cmp
inc
mov
cmp
cmp
inc
jns
ja
push
push
pop
pusha
mov
movs
cmp
sbb
adc
pop
add
neg
loope
rol
xchg
mov
mov
sub
sub
ins
adc
lds
je
jne
mov
mov
stos
adc
and
or
xchg
movs
out
repnz
int
cmp
mov
frstor
lea
aaa
push
add
jno
(bad)
or
cmovs
lock
movs
fimul
sub
cdq
aam
or
aas
iret
pop
sub
call
ds
add
ds
int3
add
mov
jae
jp
fild
aas
jl
push
jne
aas
fistp
and
test
cli
mov
xchg
sbb
add
pop
imul
xchg
xchg
cmps
pop
xor
mov
lahf
retf
into
inc
adc
movntps
scas
ret
cmp
dec
lods
in
inc
mov
stc
push
pop
leave
mov
fld
inc
inc
ins
adc
pop
das
pop
lea
cmp
mov
pop
xor
xor
ins
ins
test
inc
fadd
pop
jb
inc
ss
mul
or
xor
mov
jecxz
or
add
add
add
in
inc
fsub
jb
inc
aas
pop
add
inc
inc
test
add
inc
gs
push
add
mov
shr
lods
gs
sbb
push
cld
(bad)
retf
inc
iret
je
and
mov
inc
es
movs
inc
mov
cmps
inc
jo
inc
movs
push
jnp
jns
mov
movs
cs
pusha
push
loope
adc
xchg
fistp
inc
sbb
jmp
or
inc
dec
xor
je
popf
lds
xor
fadd
sub
inc
repz
jno
lds
arpl
add
loopne
pop
lea
adc
inc
outs
sub
adc
ins
dec
dec
les
loop
mov
inc
icebp
or
mov
cmp
push
js
test
cmps
test
adc
bound
pop
lahf
add
aam
push
cmp
xor
push
imul
pop
lea
sub
mov
inc
and
mov
sub
call
or
add
or
hlt
sar
imul
or
jp
adc
adc
outs
dec
and
sbb
jl
sbb
pop
movs
xor
bound
in
xor
fs
nop
out
or
(bad)
ins
xchg
push
pop
jmp
xchg
push
imul
mov
dec
scas
pop
or
add
addr16
loope
sub
sub
adc
or
sub
jo
and
jmp
int3
jle
xor
mov
sbb
ucomiss
or
push
inc
cmp
or
sub
rcl
add
inc
add
dec
xchg
adc
jmp
xchg
jg
jge
mov
push
push
cmp
pop
nop
xchg
inc
and
sbb
cld
dec
fbld
cwde
inc
and
add
out
xor
rcl
js
adc
jno
mov
dec
leave
cmp
sar
stos
or
test
inc
inc
push
pop
xor
mov
btr
inc
push
push
xor
cmp
and
or
xchg
pop
es
cmp
and
or
out
cdq
ret
stos
pushf
sub
fs
jmp
sub
xchg
pop
inc
dec
push
adc
xchg
mov
je
in
shl
pop
pop
and
sbb
inc
arpl
fwait
arpl
ret
add
add
cmp
adc
inc
inc
jns
jae
int
ror
sbb
add
dec
or
inc
mov
lahf
add
call
sbb
xchg
pop
adc
pop
(bad)
lock
sbb
cmp
xchg
mov
dec
sub
nop
fadd
or
enter
mov
adc
dec
aaa
sti
fcmovu
pop
dec
dec
push
ds
or
das
xor
loopne
test
sub
test
inc
sbb
cwde
push
js
(bad)
js
(bad)
aas
scas
adc
arpl
xor
jo
nop
call
push
add
jmp
sbb
or
or
xor
or
sbb
test
adc
fs
jge
(bad)
sub
jge
push
out
lds
push
or
adc
jae
aas
dec
add
js
or
push
pop
rol
jg
ss
in
ds
dec
inc
(bad)
push
inc
std
psubb
cmp
imul
pop
pop
xor
mov
inc
add
cdq
sub
(bad)
movs
or
inc
jg
imul
or
cmp
pop
repnz
js
dec
dec
js
push
cmp
and
pop
test
mov
or
movs
sbb
xrelease
sbb
add
dec
gs
dec
lds
inc
pop
xchg
dec
iret
pop
dec
into
es
test
or
sbb
jb
pop
sbb
sbb
add
sbb
sbb
add
mov
inc
or
mov
loop
ins
sub
retf
jl
movs
loope
sbb
ds
jae
ror
adc
es
dec
scas
pop
cld
push
mov
xchg
dec
gs
cmp
pop
aad
and
dec
test
pop
cmp
pop
scas
cmp
xor
test
lock
imul
add
dec
outs
add
rol
ja
dec
push
push
mov
es
das
cdq
push
and
inc
repnz
in
and
dec
sti
fiadd
ds
inc
and
(bad)
test
fwait
and
inc
out
push
cld
dec
pop
mov
pop
add
fs
push
jge
push
movd
sbb
lock
push
inc
cmovo
rcl
rol
cmp
pop
or
cmp
movs
adc
jmp
daa
or
mov
add
adc
push
jb
xor
aas
and
adc
inc
xchg
mov
inc
repnz
pushf
or
pop
adc
sub
mov
inc
aaa
in
das
sbb
test
xor
xchg
test
push
fucomip
sub
push
fs
add
or
fs
ret
jmp
xor
and
and
xlat
and
nop
dec
dec
and
test
mov
popf
call
push
inc
add
pop
ss
jmp
or
xchg
mov
inc
mov
xor
data16
sbb
and
or
ins
dec
addr16
imul
stc
dec
xor
inc
out
or
mov
push
sub
les
adc
cmp
sub
adc
add
mov
add
push
mov
ins
push
xor
fstp
(bad)
es
das
jne
and
retf
cmp
cmp
inc
mov
fld
push
enter
jl
xor
add
test
sub
sbb
das
ins
add
mov
fisttp
or
adc
xor
mov
add
jne
jno
push
sub
mov
fnstsw
cmp
add
mov
add
movs
cmps
(bad)
jb
dec
movs
adc
and
rol
push
push
inc
aas
pop
out
loope
push
xchg
fld
cs
sub
or
inc
inc
inc
mov
mov
arpl
mov
sbb
and
rcl
or
je
add
or
jo
(bad)
sbb
int3
test
push
push
dec
cdq
dec
mov
add
and
cmp
dec
mov
ss
adc
loopne
mov
inc
pop
das
or
xchg
jno
inc
ja
xchg
mov
push
sub
fidivr
add
cdq
push
movs
sub
dec
push
push
pop
arpl
pop
jnp
push
sbb
and
and
inc
push
inc
dec
xor
sub
loopne
shl
dec
and
add
pop
adc
cmp
das
xchg
or
inc
js
xor
pop
sub
push
pop
mov
sub
ss
aaa
in
ret
sub
xor
xchg
pop
ja
retf
pop
inc
sti
movups
pop
xchg
daa
lock
xchg
pop
or
mov
pop
cmp
sbb
inc
cmp
push
push
inc
retf
pop
pop
cmp
xlat
or
mov
pop
and
nop
pop
leave
add
pop
and
in
movs
stc
and
and
and
xorps
nop
fst
test
stc
inc
add
sbb
push
or
pop
pop
dec
adc
mov
cmp
cmp
stos
jl
lods
pop
ror
sub
mov
xor
repnz
push
sbb
rol
push
adc
xor
pop
popf
js
cmp
or
test
or
cmps
adc
ins
je
out
pop
pop
lahf
test
movs
pop
push
push
aas
pop
out
stos
nop
out
pop
and
xor
in
dec
aas
lods
xor
call
mov
in
movs
retf
and
push
sub
sub
pop
pop
ret
push
outs
sub
lea
jbe
sahf
push
xchg
adc
mov
ja
sti
pop
mov
test
pop
scas
retf
and
pop
out
and
fist
pop
frstor
push
sbb
mov
mov
pusha
fbld
inc
add
or
je
xchg
and
or
jg
sub
xor
fcomp
in
inc
mov
pop
cmp
pop
in
repnz
mov
xor
dec
push
mov
fsub
pop
ja
sub
jb
inc
std
cdq
pop
mov
enter
cmp
inc
stos
jmp
mov
pop
push
jl
fadd
dec
lock
inc
push
shr
and
pop
add
mov
enter
ins
stos
or
icebp
dec
lock
add
addr16
pop
or
jmp
dec
pop
jbe
or
popa
outs
lds
call
inc
and
xor
adc
data16
bound
mov
dec
cmp
or
lods
push
add
(bad)
repz
mov
xor
mov
dec
pop
pop
rol
mov
bound
(bad)
xor
add
xchg
xor
add
and
pop
fmul
and
inc
mov
push
adc
test
std
inc
test
or
or
stos
outs
test
arpl
les
(bad)
jle
pop
cmp
lahf
jne
lods
std
inc
add
sahf
adc
xor
dec
push
xchg
pop
xor
mov
add
mov
gs
pop
das
jns
jae
sub
push
popa
cwde
add
add
dec
(bad)
push
out
out
inc
and
and
psrlw
push
push
imul
xor
cmp
gs
jno
xor
cmc
or
or
xchg
pop
xor
loope
(bad)
xchg
pop
push
inc
gs
inc
add
push
push
add
gs
pop
dec
mov
data16
or
lock
mov
add
xchg
rdpmc
sub
dec
mov
add
jge
add
data16
cmp
and
lahf
fbstp
(bad)
nop
pop
int3
data16
mov
sub
mov
es
xor
repnz
addr16
mov
push
or
stos
adc
(bad)
and
lods
pop
sub
aaa
push
or
xor
push
mov
jge
mov
lods
das
cmovp
scas
ins
imul
das
push
imul
mov
movs
(bad)
and
imul
xchg
sub
sbb
mov
add
lea
xor
into
sub
imul
dec
push
pop
leave
xchg
mov
lods
sbb
add
(bad)
push
fstp
dec
inc
mov
xchg
push
xchg
and
push
push
in
in
das
inc
fsubr
inc
pop
xchg
jecxz
sbb
push
pop
pop
and
aas
lods
aas
(bad)
push
das
imul
sub
dec
ss
and
or
jae
stos
or
sub
sbb
xchg
sbb
clts
and
ja
imul
dec
adc
and
or
enter
fadd
shl
mov
inc
fwait
loopne
addr16
sub
push
sbb
pop
dec
inc
or
jmp
in
xor
ins
adc
pop
imul
retf
adc
dec
dec
ins
or
add
xor
mov
rol
push
push
enter
inc
add
outs
cmovs
push
outs
pop
outs
hlt
pop
add
or
fwait
push
inc
mov
addr16
xor
outs
shl
or
pop
adc
outs
(bad)
aam
xchg
xchg
xchg
outs
js
xchg
xchg
pop
enter
sti
ret
add
or
rcl
cmp
jo
dec
mov
imul
call
shr
out
popf
or
sbb
and
or
push
daa
out
sti
inc
add
and
inc
nop
mov
pop
movs
dec
and
sbb
inc
mov
add
icebp
popf
cld
jo
retf
retf
cmp
jno
jno
jno
and
add
inc
aad
mov
xor
inc
cmp
shl
popa
mov
add
pop
xchg
xlat
addr16
bound
mov
int3
mov
push
mov
dec
push
dec
pop
mov
retf
xor
push
pop
push
push
push
jb
ins
jae
jae
(bad)
jae
cld
xchg
rol
push
pop
push
retf
icebp
cmp
das
or
loope
push
or
pop
popf
xor
mov
cmp
sub
je
mov
jne
mov
cmps
push
sub
dec
imul
add
cmp
sub
daa
loope
sub
or
or
and
mov
(bad)
mov
imul
std
push
pop
fimul
retf
jne
jb
sbb
adc
sub
push
jne
fmul
pop
jecxz
dec
cmp
repnz
int3
lods
push
jne
lods
mov
gs
addr16
and
jae
add
sar
and
and
cs
scas
push
jmp
nop
imul
aad
sub
(bad)
push
fcmovb
sbb
xor
cs
ficom
test
sbb
inc
dec
push
lods
dec
(bad)
in
push
ret
add
std
movs
movs
sub
and
xchg
sub
jno
mov
pop
push
adc
or
jo
xor
xchg
cld
pushf
nop
push
jb
or
aam
mov
pop
out
lods
jbe
push
ins
in
push
fadd
dec
push
cld
inc
out
in
loop
retf
add
stos
loop
xchg
xchg
or
test
push
pushf
xchg
xchg
push
inc
cs
lods
push
mov
fadd
push
aaa
push
cdq
and
inc
adc
dec
dec
pop
mov
dec
and
out
mov
mov
jne
arpl
mov
sahf
add
sbb
pop
add
(bad)
dec
inc
inc
sar
inc
adc
and
nop
adc
cmp
xchg
aaa
in
push
popa
(bad)
aam
adc
and
xchg
mov
push
inc
xchg
jp
or
out
gs
xor
xchg
and
jno
or
pop
dec
imul
nop
jl
xor
or
test
pop
ds
adc
jp
icebp
fsubr
movs
pop
xor
or
inc
push
imul
ja
push
push
cdq
ins
sbb
mov
add
cwde
lock
retf
mov
inc
inc
fwait
pusha
leave
mov
add
xor
cmp
test
adc
adc
xchg
add
or
lock
nop
jnp
jb
enter
jnp
jnp
test
sub
push
out
jnp
adc
push
jl
inc
jl
mov
bound
leave
xor
js
sub
xchg
pop
icebp
jo
or
aaa
pop
xor
jb
push
enter
js
ret
mov
cli
mov
popa
call
(bad)
adc
(bad)
dec
aaa
js
popa
mov
jmp
adc
ss
or
adc
ficom
mov
les
inc
(bad)
push
mov
sub
jmp
adc
and
push
fld
inc
jecxz
mov
jg
dec
add
cmp
mov
xor
push
inc
clc
dec
xor
cmp
inc
and
sub
out
inc
jb
scas
or
dec
sbb
push
push
add
push
(bad)
pop
or
cmc
push
repz
loopne
js
jnp
int3
sub
adc
pop
sub
test
outs
sar
fsub
push
xchg
out
jno
add
mov
jmp
imul
popf
adc
das
shr
xor
loopne
pop
mov
or
xchg
int
rol
clc
cmp
pop
push
xor
pop
inc
push
pop
push
mov
(bad)
pop
dec
and
popa
inc
add
scas
push
je
out
inc
and
out
mov
xor
jnp
fist
pop
inc
hlt
pop
inc
add
call
ror
xchg
jl
lea
and
inc
ret
sbb
or
(bad)
or
cmp
mov
add
in
rcl
pop
xchg
out
test
enter
jns
jns
pop
sub
retf
movaps
test
stc
icebp
(bad)
test
inc
stos
or
jb
je
in
xor
jp
push
xchg
sahf
pushf
pushf
pushf
outs
movs
lock
inc
jo
or
daa
cdq
leave
clc
sbb
mov
mov
leave
enter
mov
test
mov
js
jnp
mov
sub
push
xor
sbb
(bad)
push
push
(bad)
cmp
mov
xor
pop
jge
test
gs
push
call
and
pushf
pop
xor
mov
lock
cs
rcr
leave
mov
mov
into
push
enter
dec
xor
xchg
push
les
mov
repz
push
sub
cmp
bound
les
pop
xor
cmp
repz
jae
outs
or
test
js
or
into
push
inc
add
jno
out
sub
mov
out
addr16
adc
call
xlat
adc
dec
mov
push
imul
and
das
add
and
pop
add
and
pop
xchg
inc
inc
push
js
add
add
inc
mov
add
jb
or
push
leave
mov
add
retf
mov
xor
add
push
pusha
icebp
inc
inc
in
sbb
sub
jno
in
push
push
inc
jne
add
aaa
test
fwait
mov
xchg
outs
sub
cdq
push
inc
loope
fidiv
inc
add
scas
pop
cmps
out
fild
add
pop
orps
sar
pop
add
(bad)
or
mov
inc
bound
dec
dec
out
arpl
inc
jle
xor
sbb
dec
and
repnz
das
add
popa
pop
gs
add
inc
hlt
jmp
cmp
es
jo
mov
cmp
add
inc
je
mov
es
push
pusha
inc
jns
push
add
ret
pop
aam
sbb
add
jl
add
retf
xor
fisttp
dec
mov
pushf
inc
aaa
add
pop
add
out
or
fsubr
xchg
mov
inc
sub
sbb
pop
popa
xchg
pusha
add
call
dec
or
fidiv
ins
les
add
xor
repnz
jbe
mov
lea
mov
mov
mov
xor
add
mov
add
xlat
cmp
test
jns
inc
call
ror
outs
xchg
data16
mov
dec
adc
mov
add
mov
pop
ret
or
popa
lock
or
mov
and
ret
add
or
or
arpl
aaa
inc
ret
mov
mov
and
push
pusha
xor
jmp
mov
(bad)
es
xor
sub
loopne
inc
push
mov
pop
pop
xchg
sub
shl
add
cmp
ds
mov
mov
and
xchg
sbb
mov
add
inc
or
and
shl
or
or
cmc
sbb
adc
nop
jg
pop
pop
push
hlt
nop
jo
jle
and
mov
mov
arpl
repz
push
lock
hlt
nop
in
jo
xchg
xchg
pop
jno
sbb
adc
pop
push
test
arpl
pop
pop
pop
xchg
adc
or
daa
in
add
loopne
and
fisub
outs
pop
in
and
lods
(bad)
loopne
add
xchg
sbb
bound
cs
iret
scas
adc
pusha
xchg
cmp
xchg
dec
mov
sbb
ror
cmp
add
push
mov
mov
addr16
xchg
bound
cmps
and
in
repnz
xchg
mov
(bad)
xchg
or
shr
pop
sti
push
push
inc
arpl
mov
add
shr
pop
inc
in
mov
loopne
and
jno
push
lods
and
push
inc
and
jno
mov
cdq
or
dec
jns
jns
sbb
lock
lock
sar
xchg
and
sbb
cmp
jns
jo
mov
xchg
adc
mov
jns
xchg
out
sbb
rol
add
cmp
sbb
pop
xchg
test
push
inc
loopne
xchg
lea
inc
add
push
loopne
shrd
das
das
pop
jo
jo
cwde
and
cwde
jbe
sbb
xchg
loope
mov
test
dec
jo
or
jo
das
jns
and
xchg
xchg
pop
dec
xor
add
push
cdq
fild
outs
scas
cmp
mov
lahf
cdq
pop
pop
and
fistp
into
mov
jno
lods
inc
add
mov
sub
jmp
push
adc
sbb
sbb
cmp
test
mov
push
add
call
inc
inc
push
ins
mov
adc
dec
call
pop
cmp
lds
pop
inc
fucomip
neg
es
(bad)
push
add
fst
into
mov
mov
pop
fisubr
push
add
adc
fwait
vandps
cmp
cmp
and
cmp
and
call
ins
jno
pushf
lds
ret
xchg
fst
push
inc
jmp
inc
stos
inc
pop
inc
sub
(bad)
out
popf
adc
jmp
inc
push
adc
push
inc
clc
sbb
mov
daa
(bad)
popf
jecxz
and
inc
mov
arpl
jns
lods
mov
push
mov
push
pop
movs
retf
add
repz
sub
shr
sahf
jl
popf
outs
lahf
inc
(bad)
lock
lahf
jns
adc
cmpxchg
jb
addr16
xor
lahf
push
adc
(bad)
and
stc
daa
test
lahf
push
cmp
sbb
and
popf
mov
or
adc
sahf
cmp
mov
mov
or
movs
das
mov
add
aas
or
je
add
je
in
in
mov
dec
jo
aaa
cmp
je
push
leave
sub
pushf
adc
sub
mov
adc
sbb
push
dec
out
jecxz
or
jp
xor
out
pusha
mov
outs
mov
mov
ds
mov
and
cld
sbb
dec
dec
cmc
jb
mov
mov
out
test
jmp
jae
in
test
mov
push
and
call
in
adc
dec
shld
test
in
data16
movs
nop
movs
shl
adc
fild
and
nop
sbb
add
inc
sbb
pop
nop
xor
jne
add
loopne
add
pop
sub
into
pop
xor
pop
xchg
mov
js
rcr
mov
mov
lahf
out
fild
test
xchg
xchg
lahf
mov
push
loopne
inc
add
xor
push
and
imul
mov
mov
xchg
pop
(bad)
or
mov
mov
mov
fwait
push
inc
inc
xchg
and
enter
and
add
mov
mov
daa
les
push
(bad)
cmp
push
lods
xor
mov
xchg
aaa
adc
add
push
inc
adc
aaa
test
psraw
leave
test
test
cmp
stos
pop
daa
daa
daa
daa
jge
out
aaa
ffreep
xchg
xchg
stos
outs
stos
stos
xlat
(bad)
leave
retf
retf
(bad)
xor
mov
jle
cmp
push
imul
sbb
inc
xchg
mov
xchg
shl
inc
shr
aaa
dec
push
fiadd
(bad)
add
or
jne
(bad)
loopne
xor
or
imul
rcl
ror
adc
test
xchg
inc
add
sub
add
mov
pushf
imul
adc
add
clc
lods
push
ins
sar
add
pop
ret
push
cmp
ins
jns
mov
cld
cmp
add
mov
inc
repz
dec
sbb
cmps
pop
sub
ins
dec
pusha
outs
xchg
or
adc
xor
cmp
push
out
pop
cmp
outs
or
add
add
pop
add
xor
test
mov
push
ret
or
lds
jmp
cld
push
inc
inc
movs
mov
or
popa
push
mov
cmp
out
lea
sbb
jo
movs
or
pop
jnp
lods
test
add
lock
mov
or
pop
aas
adc
outs
dec
pusha
pop
sbb
or
ins
cmp
or
sbb
pusha
xchg
movs
sbb
dec
and
aaa
jle
sub
data16
push
in
je
jnp
adc
ficom
scas
jle
adc
xchg
add
test
scas
clc
scas
ret
out
mul
(bad)
das
cmc
push
lahf
sbb
mov
cmp
mov
or
(bad)
scas
jnp
repnz
dec
xor
iret
inc
ror
or
aaa
add
loopne
mov
add
stos
hlt
scas
or
mov
or
aas
push
ins
dec
pop
add
dec
pop
dec
adc
push
or
adc
add
mov
jg
scas
sahf
add
jg
jl
or
dec
data16
addr16
add
pop
push
inc
das
or
sub
repnz
inc
cmp
sub
sub
inc
add
cmp
xchg
into
cmp
mov
jmp
pop
sub
sub
ret
pop
pop
push
cwde
aas
clc
or
popa
clc
mov
shl
adc
or
cmp
test
add
jae
das
mov
(bad)
int3
pop
add
mov
nop
out
das
pop
add
or
mov
(bad)
fdiv
mov
inc
nop
mov
gs
mov
shr
popa
xlat
mov
xchg
xlat
cmps
push
test
mov
in
popa
push
in
ret
shr
fisubr
rcl
mov
fbld
lea
mov
hlt
mov
mov
test
and
dec
ds
es
outs
pop
jo
sahf
push
gs
xchg
mov
shl
jb
add
mov
int3
jle
jmp
and
in
inc
fdiv
fiadd
mov
or
adc
push
mov
and
adc
shl
xor
add
push
mov
jmp
and
xchg
mov
mov
fnsave
add
aaa
scas
or
xor
xor
inc
in
push
mov
lds
jno
add
data16
add
ret
call
pusha
sbb
add
icebp
retf
outs
adc
adc
xchg
call
mov
xchg
and
in
icebp
fbld
daa
sub
das
and
rol
and
(bad)
mov
or
lods
dec
and
mov
sbb
push
inc
push
inc
cld
mov
mov
inc
daa
inc
add
nop
mov
jge
cld
ins
je
inc
fnstsw
xchg
or
mov
push
mov
inc
inc
les
fcomp
das
xchg
or
add
sub
xchg
push
mov
or
sbb
adc
adc
adc
(bad)
int3
clc
or
adc
(bad)
js
jmp
pop
mov
pushf
out
out
add
add
outs
jg
nop
xor
and
jmp
or
fdivr
mov
pop
fiadd
push
pop
fmul
add
movs
sub
fst
inc
rcr
in
shl
ret
push
sbb
mov
pushf
stos
mov
xlat
dec
sahf
jmp
push
into
and
out
xchg
int3
lock
mov
push
retf
add
scas
jns
test
outs
out
imul
or
in
sub
(bad)
out
fadd
or
arpl
sub
lahf
fwait
mov
ja
sub
ss
lea
pop
mov
mov
mov
shl
ret
mov
jmp
mov
dec
and
or
add
fmul
push
or
push
inc
addr16
aas
pop
push
pop
push
sub
je
sub
je
dec
mov
rcl
jmp
mov
add
(bad)
out
xchg
jmp
add
test
ja
mov
mov
inc
sub
shr
sbb
adc
imul
sbb
les
pusha
repnz
or
out
and
(bad)
pushf
fild
mov
xchg
mov
mov
xchg
nop
aas
loopne
mov
mov
jge
and
in
or
(bad)
mov
push
add
mov
pop
cmp
rol
ret
cmp
out
pushf
sbb
xlat
rcl
cmp
fsubr
push
or
cmps
nop
out
les
add
fidiv
lods
mov
shr
fmul
adc
or
cdq
sub
xor
jbe
mov
fnstsw
add
sti
and
ja
or
sub
mov
and
or
retf
call
data16
cld
ret
aas
scas
cmp
dec
dec
outs
andps
inc
cmp
jl
out
and
xor
add
(bad)
ins
jle
out
lock
je
add
movs
mov
test
scas
mov
adc
add
sub
lds
dec
les
jnp
jecxz
push
pop
sub
test
rcr
cvtps2pi
stc
mov
and
imul
shr
mov
pop
add
mov
add
mov
or
leave
or
or
movlps
xor
add
(bad)
in
mov
pop
xchg
inc
and
jne
(bad)
push
mov
sub
inc
adc
xchg
push
mov
fs
jns
sub
or
jmp
in
mov
or
jb
adc
jno
vpsubsb
out
pop
pop
push
mov
mov
pop
add
push
stc
pop
rcl
add
push
or
dec
adc
stos
pop
les
inc
and
into
xor
or
das
out
pop
mov
or
adc
outs
or
sbb
sub
jge
add
daa
movs
and
icebp
jge
mov
xor
fwait
div
push
dec
inc
pusha
arpl
fs
xlat
add
add
sbb
nop
sub
adc
arpl
ss
pop
loope
sahf
popa
mov
jns
mov
fdiv
(bad)
adc
pop
inc
call
out
pop
loop
iret
sbb
mov
and
daa
push
pop
fmul
xor
dec
aaa
mov
adc
or
(bad)
aam
inc
leave
add
mov
les
pop
je
jmp
(bad)
and
sub
pop
test
mov
pop
out
inc
popw
adc
or
pop
xor
cmps
gs
movs
xchg
cmp
add
sbb
jo
fcmove
iret
les
sub
xor
xor
les
add
mov
inc
sub
jno
test
ja
push
push
cs
or
add
add
add
pop
pusha
push
add
jnp
lods
shl
cmp
push
add
(bad)
out
movs
shl
adc
sbb
(bad)
mov
xor
mov
inc
inc
xchg
push
push
pop
fs
mov
ins
push
(bad)
or
fcmovb
pop
or
xchg
fimul
adc
jecxz
ins
push
or
adc
mov
imul
je
pop
push
pop
push
pop
pop
test
mov
sub
or
outs
movs
pop
leave
outs
xor
adc
inc
gs
aaa
shl
test
mov
fnsave
xchg
retf
cmp
and
add
pushf
data16
xchg
in
stos
sbb
lahf
adc
fwait
pop
and
ror
or
and
(bad)
xchg
and
jmp
inc
fsubr
fadd
les
and
jmp
adc
jg
ins
xchg
popa
(bad)
fidiv
xchg
sub
xchg
add
adc
pop
mov
fild
lahf
dec
aam
sbb
(bad)
and
ja
jg
jno
ins
sti
inc
dec
or
xor
les
iret
repz
mov
outs
cmps
stc
cmp
or
sbb
sti
ins
aas
add
or
out
xor
add
adc
push
mov
div
and
sub
mov
pop
fld
sub
ret
inc
es
push
nop
inc
mov
adc
adc
add
arpl
out
mov
push
and
cmp
push
stc
mov
push
(bad)
fidiv
sub
repnz
or
nop
push
mov
jne
mov
or
or
push
sar
ja
pop
sub
int
rol
jmp
sbb
mov
es
push
xchg
sub
enter
cmps
mov
fnstsw
xchg
add
push
xor
sbb
add
out
shl
jbe
mov
push
out
call
ret
repz
sub
fild
adc
iret
repz
inc
or
adc
mov
jge
and
mov
adc
mov
or
fcmovbe
mov
add
imul
movzx
jge
xor
mov
xchg
or
dec
lock
popf
mov
nop
xchg
jnp
adc
cdq
fs
jo
pop
mov
jmp
mul
repnz
sub
cmp
sbb
cs
add
push
mov
out
nop
jne
dec
cmps
mov
add
cmc
popf
sbb
cmp
je
jns
or
aas
mov
mov
xchg
sub
cld
jmp
rol
je
xor
push
int3
push
cmp
cmp
xor
or
sub
adc
call
sbb
jns
jge
add
cs
inc
(bad)
and
inc
lock
xchg
or
and
dec
jg
sub
jg
call
xchg
cmp
add
movs
gs
adc
clc
neg
fadd
push
fistp
add
nop
sbb
cmp
pop
or
inc
sub
cmp
push
clc
adc
in
jle
sbb
popa
jl
jo
sub
pop
hlt
pop
movs
int3
xchg
pusha
push
aam
jmp
xlat
cld
ficom
mov
mov
loopne
xor
in
int
sbb
mov
dec
sub
jmp
fcom
aam
test
jne
adc
lahf
sub
daa
test
mov
and
mov
add
mov
hlt
rcr
or
pop
inc
aaa
or
inc
xchg
imul
bound
sub
cmp
sub
jo
xor
mov
sub
mov
sub
iret
push
pop
shl
sbb
dec
sbb
retf
jg
mov
je
sub
dec
mov
jecxz
cmp
iret
lods
pop
js
ficom
loope
cmp
mov
repnz
adc
test
pop
enter
add
xchg
or
add
outs
ja
add
out
sar
(bad)
(bad)
pop
adc
clc
push
or
sub
stc
add
dec
data16
or
iret
dec
add
or
inc
fild
sub
hlt
adc
mov
add
shl
mov
adc
adc
je
sbb
sti
js
popf
jmp
xlat
or
jae
int3
out
dec
imul
inc
sub
call
or
add
dec
movzx
dec
repnz
sbb
movsx
das
movzx
dec
xor
or
stos
sub
mov
gs
dec
push
or
int
inc
ret
stos
or
push
icebp
xchg
adc
mov
mov
test
inc
jmp
inc
push
sub
adc
xor
xor
dec
idiv
cmp
jne
popf
movs
inc
xchg
or
ss
nop
inc
neg
shl
add
add
mov
cmp
jnp
pop
rcl
push
sub
hlt
sbb
movs
cmc
sbb
pushaw
sub
push
adc
jne
pop
jmp
jmp
or
inc
mov
mov
add
or
jo
scas
loopne
lds
inc
sbb
psrld
xchg
xor
xor
cmp
adc
or
loopne
sbb
push
fist
dec
fld
mov
in
fld
xbegin
or
popa
dec
outs
xchg
(bad)
jg
and
pop
(bad)
addr16
loopne
xchg
dec
push
push
sbb
jmp
and
cmps
adc
jns
mov
mov
fcom
xchg
mov
and
je
jg
ror
(bad)
call
inc
add
sub
xor
cmp
icebp
jnp
mov
jmp
cmp
jbe
xchg
push
mov
jae
(bad)
xlat
daa
scas
ins
dec
mov
pop
clc
daa
pop
add
pop
ror
adc
inc
inc
outs
pop
fsub
add
xor
mov
xor
data16
adc
sbb
int3
test
cwde
in
les
int3
dec
push
dec
xor
mov
ds
aaa
ret
ror
adc
add
xor
mov
int
jge
push
retf
push
ins
mov
sub
mov
adc
ja
test
jmp
mov
inc
xchg
cmp
or
sbb
das
adc
mov
push
ds
sbb
or
push
sahf
push
cmp
loope
adc
(bad)
mov
adc
sub
cld
cmps
xor
je
cld
mov
pushf
cmp
jl
mov
sub
pusha
mov
(bad)
sub
(bad)
pop
cld
push
arpl
xchg
cmp
add
call
inc
pop
mov
jnp
add
addr16
push
add
in
mov
sbb
push
mov
pop
das
inc
and
xchg
sbb
mov
jmp
push
sub
(bad)
mov
aad
adc
adc
(bad)
leave
and
and
mov
jle
rol
sbb
add
inc
adc
(bad)
fsubr
dec
dec
push
mov
jne
cmp
jbe
test
ret
push
pop
les
clc
shl
fist
shl
lds
inc
or
addr16
pop
shr
xchg
xor
je
adc
pop
jmp
inc
xchg
gs
and
push
inc
mov
xchg
sbb
sbb
shl
jno
nop
nop
ret
in
sbb
mov
neg
mov
jmp
add
neg
push
int
je
pusha
mov
std
int
inc
mov
add
mov
sub
ror
(bad)
fist
(bad)
adc
fild
hlt
add
in
jo
dec
daa
push
sar
xor
idiv
lock
or
dec
add
jmp
or
in
or
push
xor
mov
(bad)
pop
push
sar
push
jae
or
clc
push
add
lock
push
lods
jmp
push
push
sub
xor
addr16
mov
int3
loopne
cmp
iret
repz
jp
mov
std
push
in
repz
fnstenv
(bad)
jae
sar
xchg
fild
mov
cdq
stos
or
fwait
jge
fdivr
sbb
cs
push
cli
dec
(bad)
dec
pop
add
inc
add
xlat
lods
jnp
out
in
mov
add
in
mov
(bad)
push
cdq
mov
int3
add
(bad)
lahf
sub
pop
dec
repnz
imul
mov
into
hlt
in
inc
xor
gs
push
add
sub
jp
(bad)
mov
fiadd
ja
(bad)
loop
cs
imul
cs
enter
push
stos
popa
jge
push
and
push
rol
rcl
and
xor
xchg
dec
push
xor
mov
fidivr
lock
movs
rcr
mov
and
shr
in
mov
cmp
addr16
xchg
pop
inc
cwde
je
xchg
xchg
dec
dec
rcl
ins
add
imul
mov
mov
retf
in
shl
lea
arpl
push
sbb
dec
or
(bad)
aas
jge
push
das
pop
rol
std
sbb
mov
jge
add
test
jge
ins
fld
shl
mov
jb
imul
int3
pop
jb
mov
stc
cs
jb
jo
sbb
nop
pop
mov
mov
pop
or
or
pop
push
fdiv
test
test
xor
inc
or
test
adc
(bad)
jp
jmp
cmc
jmp
xchg
ror
(bad)
push
cmps
xchg
inc
jno
inc
push
pop
(bad)
rcl
xchg
sub
jmp
fsubrp
sbb
dec
xor
xor
adc
inc
or
sbb
aam
or
aad
xchg
xchg
mov
or
retf
sub
aam
xor
add
or
fidiv
aaa
push
adc
sbb
jnp
jle
inc
arpl
adc
popa
ds
and
mov
pop
pop
aas
pop
popa
add
or
gs
repz
out
retf
adc
outs
mov
lock
jne
xchg
pop
out
cdq
aam
push
outs
scas
push
jb
mov
bound
dec
data16
mov
sub
shr
push
ins
jb
and
fidivr
ins
jae
daa
add
inc
xchg
movs
lds
nop
fnstenv
fbstp
add
popf
inc
inc
cmc
movs
and
xor
addr16
mov
std
fisttp
fld
add
mov
pop
in
test
push
ror
jae
rcr
ffreep
xor
in
pop
jo
xor
inc
lds
inc
inc
and
xchg
aam
shl
mov
xchg
icebp
mov
xor
inc
or
sbb
push
dec
jge
test
sbb
out
gs
add
aas
inc
or
adc
push
or
shl
xor
push
les
add
unpcklps
sbb
xchg
jnp
pushf
pop
mov
inc
(bad)
and
sbb
add
icebp
in
mov
loop
aas
inc
shl
sbb
data16
jmp
sub
sbb
or
sbb
xchg
out
in
das
mov
loope
stos
push
sar
fwait
sub
fistp
pop
aam
sub
test
retf
push
dec
sahf
fild
dec
fstp
mov
push
mov
fdivr
jl
dec
dec
pushf
aas
pop
sar
pushf
push
fmul
jbe
push
clc
fild
test
fistp
sti
inc
out
push
pusha
jg
in
cmps
inc
and
sar
loope
add
push
jbe
call
rol
(bad)
aad
or
clc
mov
clc
cld
sbb
lds
pop
addr16
inc
jle
sub
sbb
(bad)
mov
push
adc
and
mov
sti
stos
jecxz
or
or
xor
add
add
imul
pop
in
add
cwde
retf
fcom
(bad)
push
mov
pop
lds
rcr
or
(bad)
movs
ror
adc
xchg
mov
push
fist
movs
mov
fist
jbe
pop
mov
test
sub
dec
cdq
mov
dec
dec
repz
fwait
cld
mov
imul
dec
ret
or
cmp
cmps
cmps
nop
jge
sub
xor
cmp
retf
xchg
sbb
aad
test
ret
inc
or
jb
or
pop
mov
in
in
mov
mov
cs
push
pushf
cmps
jge
xor
in
cmp
loop
(bad)
rol
pusha
or
xchg
cs
adc
pop
ss
adc
jns
pushf
lods
(bad)
movs
stc
cwd
mov
int
call
nop
(bad)
jnp
cs
inc
adc
inc
bound
lea
addr16
lods
fcomp
enter
xor
jno
xchg
pop
jmp
add
mov
sbb
inc
or
push
dec
or
xor
mov
and
pop
jns
inc
(bad)
inc
add
cmp
sub
xor
push
push
sub
adc
mov
imul
dec
aad
sub
sbb
cmp
jne
inc
js
jne
mov
add
call
cmp
pop
es
cmps
and
or
dec
call
test
popa
adc
add
clc
push
aas
xor
mov
movs
xchg
xlat
pushf
pop
call
stos
sbb
(bad)
add
pop
add
adc
mov
ss
push
or
inc
rol
lods
cmc
add
sbb
dec
call
es
mov
sbb
jo
push
ret
cs
stc
pop
dec
je
jns
push
sub
fnstcw
jmp
mov
jmp
bound
mov
int
out
push
ds
data16
gs
jmp
jg
mov
test
sbb
bound
fsubr
dec
int3
das
int3
dec
xor
inc
xor
mov
dec
fmul
retf
mov
pop
jmp
popf
cmps
stc
mov
jmp
jl
mov
popf
cmps
fwait
push
mov
dec
jae
mov
push
push
fcom
ins
or
fst
pop
cmp
mov
clc
fbld
or
and
rcr
adc
aaa
pop
add
jmp
push
adc
xchg
repz
jnp
fld
stos
mov
adc
jg
fstp
or
jb
and
sbb
ret
es
adc
mov
inc
in
mov
jae
inc
dec
jae
mov
mov
sahf
addr16
retf
add
in
jb
dec
jns
xchg
jns
rcr
jno
shl
mov
pop
pop
pop
pop
mov
inc
(bad)
adc
adc
sub
aaa
adc
jns
retf
add
add
out
xor
addr16
ja
out
int3
std
ret
xor
pop
ss
std
pop
pop
int
adc
and
loopne
loopne
sub
nop
aaa
dec
enter
daa
ffreep
cs
leave
fbld
pusha
or
and
popf
mov
shl
jnp
cwde
std
or
sub
add
ja
xchg
fs
les
jne
jno
inc
dec
lock
inc
lock
push
push
mov
mov
jnp
dec
mov
adc
xchg
(bad)
pushf
mov
adc
and
xchg
mov
mov
lock
add
out
cmps
sub
xlat
imul
jnp
rol
sbb
inc
popa
movs
aad
jo
push
sub
out
and
pop
and
jle
add
loope
pop
xor
fstp
mul
adc
imul
push
cmp
inc
xchg
sbb
movs
movs
add
movs
xchg
xchg
gs
mov
push
cmp
cld
and
mov
xor
dec
mov
adc
push
jge
inc
stos
sub
out
pop
xchg
imul
fldenv
mov
push
hlt
enter
stc
clc
mov
mov
jns
(bad)
and
xchg
js
das
inc
jmp
out
xlat
push
xchg
adc
mov
xchg
cmp
mov
push
sti
adc
mov
mov
icebp
xchg
out
(bad)
push
pop
add
lods
icebp
pop
pause
jle
inc
fbstp
lea
lea
ins
or
jecxz
xor
dec
and
test
in
sub
add
sbb
jae
popf
cmp
movs
and
das
movs
pop
pop
sahf
sti
cmp
pop
xchg
push
inc
lods
jae
or
inc
test
fisubr
mov
and
sub
sbb
or
gs
or
jae
adc
pushf
push
mov
or
mov
xor
ret
jno
out
ins
int
out
inc
xor
jmp
push
cmp
push
mov
nop
dec
cmp
cld
into
add
and
movs
imul
repz
stc
clc
loopne
inc
add
mov
clc
xor
inc
dec
push
aaa
jmp
nop
sbb
sbb
cmp
xchg
push
mov
loopne
loopne
leave
test
pop
jg
call
imul
xor
and
ret
cdq
push
fisubr
push
sbb
loop
out
inc
mov
test
jp
out
aam
std
daa
and
cmp
hlt
lock
or
mov
xchg
imul
pop
push
sub
gs
and
mov
sub
push
not
retf
int
xchg
xor
into
jno
iret
repz
test
pop
stc
push
adc
(bad)
or
int3
fild
fadd
in
(bad)
ins
les
adc
jg
pop
movs
test
and
lods
test
inc
movs
inc
xchg
mov
fistp
je
xor
or
fist
or
xchg
xor
mov
pop
and
nop
pop
sbb
(bad)
cli
(bad)
push
or
cmp
add
xor
es
inc
sbb
mov
fwait
dec
jae
push
adc
xchg
inc
sub
adc
loopne
sub
sbb
adc
and
xchg
das
dec
in
xrelease
mov
inc
push
sbb
in
or
and
add
lahf
loopne
aas
mov
xchg
popa
xchg
pop
pushf
sub
mov
gs
cmp
jne
loop
arpl
dec
inc
add
inc
add
push
mov
push
hlt
ss
ja
jmp
jg
and
jae
jge
cmp
imul
cwd
xor
jae
adc
xchg
cmp
push
or
inc
or
jle
mov
mov
or
jb
push
jl
inc
out
inc
add
movs
cmp
aad
sbb
shl
in
fistp
xor
jae
xor
jmp
ret
xchg
lock
cmp
adc
add
sbb
aas
or
je
lea
les
popa
jecxz
mov
(bad)
add
and
adc
aam
repnz
cmp
sbb
(bad)
in
leave
mov
mov
fadd
retf
fisttp
std
ds
ret
iret
repz
repz
(bad)
sbb
inc
lahf
out
inc
push
(bad)
popa
cs
leave
dec
sbb
and
mov
xor
inc
or
mov
out
out
imul
sub
mov
cdq
cmp
imul
xor
xchg
dec
cmp
and
sub
jbe
mov
int3
movs
cs
(bad)
out
pop
cmp
call
mov
je
rcr
mov
or
out
pop
repnz
lock
xor
int
shr
sub
mov
in
jmp
jecxz
stc
sbb
aam
inc
jecxz
fsub
cmp
fisttp
mov
sub
push
aad
inc
push
mov
in
dec
in
das
jne
xchg
das
mov
inc
mov
out
rcl
adc
jecxz
repz
pop
push
fs
add
jae
(bad)
jle
das
pop
push
sbb
jno
call
daa
jnp
sbb
icebp
sub
pop
aad
(bad)
call
xchg
jg
add
jb
pushf
popf
(bad)
dec
mov
xor
in
sbb
sbb
test
xchg
xor
cwde
sub
fisub
mov
or
loopne
push
(bad)
mov
adc
test
test
xchg
mov
and
ret
(bad)
and
jecxz
add
pop
pop
es
mov
push
and
xchg
adc
or
mov
dec
xbegin
mov
dec
loopne
mov
popa
lahf
push
and
fidivr
leave
add
pop
cwde
in
or
pop
(bad)
cmps
lods
fidiv
rcl
push
mov
neg
call
xor
popa
mov
loop
and
jno
cmp
retf
jle
push
outs
cs
mov
sbb
ja
lea
dec
js
jno
jo
shr
mov
or
imul
xor
data16
out
mov
and
push
std
push
xlat
inc
rcl
call
pop
cwde
dec
rcl
call
dec
adc
sbb
les
daa
je
push
nop
daa
add
les
xchg
adc
xor
inc
dec
mov
repnz
sub
lods
adc
inc
es
push
add
dec
add
xchg
inc
xchg
xor
popa
bound
xor
loope
fs
add
pusha
imul
adc
mov
and
push
scas
(bad)
jo
repz
add
inc
add
fmul
mov
add
adc
jle
push
mov
sti
shl
dec
and
adc
and
les
cmp
push
fsub
daa
push
pop
inc
pop
or
fbld
xchg
cmp
push
cmp
sar
mov
mov
and
mov
mov
push
outs
sbb
dec
cmp
sub
jg
pop
pop
cmp
push
dec
add
repnz
xchg
lods
cmp
cmp
pcmpgtb
inc
in
add
repnz
inc
in
add
pop
leave
cmp
add
je
pop
push
and
sub
mov
je
pop
or
popf
nop
pop
pop
mov
mov
repnz
dec
sahf
int3
jae
cmp
out
scas
or
push
cmps
add
shl
aam
xchg
out
xchg
sbb
mov
inc
into
(bad)
clc
je
inc
inc
jo
test
jo
xchg
push
int3
cmp
mov
inc
ss
(bad)
fldenv
add
scas
or
pop
cmp
dec
and
cmp
nop
pop
mov
push
inc
inc
sbb
mov
fisub
pop
xor
push
sub
sub
jp
adc
and
xor
scas
inc
inc
jo
fisub
adc
in
cmp
mov
or
(bad)
movs
in
imul
jns
or
shr
jmp
or
inc
push
dec
dec
dec
outs
ja
inc
pop
mov
push
jo
cmps
in
cmp
xor
daa
jle
push
jne
cmp
add
iret
xchg
dec
xor
aad
adc
lods
jae
adc
inc
inc
ins
or
xor
rol
push
bound
inc
add
scas
call
dec
inc
pushf
pop
and
xor
xor
push
add
in
or
mov
ret
mov
sub
outs
sub
or
pop
and
jmp
xchg
jnp
cwde
cmp
lock
dec
test
lahf
add
inc
cmp
mov
or
leave
xchg
inc
pusha
or
push
or
cs
xchg
das
into
mov
lahf
adc
ror
add
popa
(bad)
fdivr
pusha
pop
or
dec
lahf
pop
in
sbb
push
or
xchg
cmp
add
or
jb
js
or
das
inc
sbb
out
bound
cmps
adc
in
mov
or
mov
lahf
cmp
in
enter
xor
inc
fdivr
lds
pop
sbb
in
cld
xchg
mov
push
sub
add
or
pop
movs
pop
bound
push
or
and
lahf
scas
or
lods
cwde
scas
xlat
add
mov
cmovne
test
add
sub
lods
push
inc
push
or
ret
ds
mov
sub
sti
test
sbb
adc
and
xor
or
or
pop
pusha
xchg
lock
dec
mov
adc
inc
dec
fcom
sub
jo
(bad)
push
mov
cwde
mov
mov
repnz
js
cmp
xacquire
lods
adc
arpl
and
pop
nop
mov
adc
pop
movs
int3
cmp
in
adc
push
sbb
xchg
xchg
pop
mov
mov
retf
retf
mov
cld
adc
leave
retf
and
push
adc
stc
daa
mov
pushf
nop
adc
mov
xchg
ins
shr
or
adc
adc
lods
lds
push
gs
cmp
in
xor
es
xchg
adc
xchg
cld
dec
lea
push
lea
sbb
mov
add
bound
add
pop
lea
xor
jns
and
mov
mov
add
pop
dec
pop
mov
test
xor
nop
push
lods
adc
js
icebp
sub
fistp
push
out
fstp
es
das
ja
or
nop
dec
lds
fisub
test
shl
leave
test
iret
cmc
push
inc
and
dec
inc
mov
xchg
lods
(bad)
mov
pushf
xchg
push
mov
push
pop
in
repnz
and
push
and
pop
ret
xor
dec
dec
repnz
rcl
inc
les
sbb
dec
sbb
cmp
test
fwait
sbb
pop
nop
ins
push
ins
mov
leave
and
sbb
adc
sub
sbb
mov
or
pop
or
pop
xor
jne
jecxz
arpl
ret
sbb
dec
mov
mov
or
ss
adc
sbb
(bad)
sbb
adc
and
pop
add
lea
test
aam
bndstx
xchg
and
out
and
lea
in
sbb
and
inc
sbb
nop
pop
jb
sbb
test
sbb
add
cmp
pop
retf
mov
enter
out
sbb
cmc
or
fmul
xchg
int
fs
mov
mov
adc
pusha
or
(bad)
dec
pop
sbb
sbb
and
cmp
sbb
cwde
(bad)
jns
adc
sbb
pop
pop
push
lea
xor
xchg
sbb
push
icebp
sbb
push
jo
or
pop
add
jecxz
xor
or
imul
mov
int3
in
jb
stos
cmp
inc
enter
cmp
inc
mov
inc
repnz
adc
jae
repnz
add
pop
inc
jo
inc
leave
lods
repnz
jns
aad
and
and
outs
xchg
and
pmaddwd
and
daa
daa
daa
xchg
pop
and
mov
ja
pop
jmp
and
push
inc
dec
(bad)
cld
adc
push
inc
in
push
xor
jno
mov
push
adc
test
xchg
(bad)
test
push
mov
stos
xor
mov
sub
mov
je
daa
adc
mov
cmp
cld
mov
fadd
add
add
mov
mov
stos
and
ficom
inc
inc
ds
push
mov
inc
pop
repnz
push
mov
pusha
xor
mov
mov
and
mov
mov
sub
mov
mov
and
pop
leave
or
call
dec
les
mov
shl
int
cmp
sub
outs
movs
adc
sbb
adc
mov
push
inc
cmp
iret
add
mul
or
adc
mov
push
inc
push
in
in
jo
inc
add
mov
adc
add
test
and
cmps
push
sub
mov
inc
push
adc
adc
inc
dec
dec
push
leave
sub
(bad)
mov
push
loope
push
es
or
lahf
cmp
mov
or
jns
jns
cwde
daa
adc
and
adc
adc
mov
aam
gs
add
daa
lahf
pop
in
xor
xchg
xchg
pop
adc
mov
mov
cwde
sub
test
nop
hlt
nop
std
sub
dec
pop
pop
and
push
sub
cmp
add
leave
or
or
nop
and
jns
push
test
push
es
add
xchg
movs
cmp
xor
xor
imul
add
out
or
xlat
cmps
nop
sub
cmps
dec
xor
jb
sub
or
inc
bound
pop
pop
sub
int
jnp
push
es
das
stos
sub
add
call
sahf
retf
and
out
sub
sub
push
movs
adc
inc
aam
in
cmp
lahf
popa
cmp
jns
jg
lds
leave
dec
pop
rcr
sub
sahf
cmp
add
sub
pop
outs
iret
es
fwait
sub
cmp
add
jb
or
sub
(bad)
cs
add
xor
cs
mov
mov
xchg
pushf
nop
xchg
sub
sbb
cs
ret
shr
add
cs
and
xor
das
inc
ins
xor
data16
es
adc
fprem1
fcomp
jns
adc
xor
xor
push
xor
jne
lahf
sub
jo
add
mov
adc
jg
pop
xor
out
enter
les
fld
cwde
xor
das
mov
pop
fild
int
pop
lock
lahf
das
in
loopne
clc
xor
xor
mov
out
cmp
repnz
pop
push
repnz
xor
popa
test
pop
retf
ror
mov
pop
adc
cmp
data16
jp
xor
mov
xor
jb
enter
xor
cwde
mov
xor
or
xor
cmc
bound
push
inc
mov
fs
aad
test
mov
add
xor
xor
jns
mov
mov
xor
push
out
ffreep
mov
cmps
push
imul
push
and
call
lahf
mov
popf
push
xor
xchg
inc
xchg
pop
repnz
sub
iret
inc
mov
in
nop
(bad)
aam
inc
or
enter
sbb
inc
js
cs
xchg
pop
xchg
xor
aaa
je
sahf
pushf
fmul
lods
stc
xor
cmp
jbe
inc
icebp
cmps
cmp
nop
jb
jb
pop
sub
scas
cmp
loope
push
cmp
add
xchg
ficom
dec
mov
pushf
jno
add
mov
mov
test
in
xchg
jecxz
push
lock
or
inc
adc
js
jae
sub
add
inc
push
enter
call
sub
dec
rol
fld
pop
add
ja
pop
or
inc
(bad)
in
add
fwait
mov
jb
cmp
inc
pushf
mov
shl
pop
ins
add
xor
inc
nop
pushf
inc
sub
nop
dec
inc
clc
pushf
lea
sbb
jae
push
lods
out
mov
jns
mov
xchg
push
repnz
adc
(bad)
sub
pop
pop
xchg
jmp
push
pushf
addr16
push
sbb
adc
lock
pop
or
fdiv
pop
cmp
mov
sub
or
(bad)
push
inc
dec
rcl
aaa
push
in
es
popf
aaa
or
push
add
test
aad
pop
fdivrp
add
loopne
int
mov
push
add
push
sub
push
and
adc
mov
jnp
outs
dec
or
push
xor
cmp
and
and
or
(bad)
int
sbb
adc
xlat
adc
inc
outs
push
jo
and
xor
and
dec
daa
inc
mov
les
iret
pop
xchg
test
xor
adc
jno
and
ret
inc
popa
add
int3
xor
hlt
iret
cmp
xchg
push
mov
cmp
mov
cmp
push
mov
and
inc
pop
cmp
cvtps2pd
(bad)
fadd
jle
hlt
fmul
movs
mov
clc
retf
push
jl
and
dec
pop
pop
aaa
pushf
mov
(bad)
and
xor
ins
bound
std
retf
ins
add
and
shl
mov
outs
pop
adc
adc
push
mov
add
lods
inc
add
mov
xchg
(bad)
sub
jecxz
mov
mov
shl
out
mov
cdq
inc
daa
fnstcw
rol
inc
rol
jecxz
daa
ins
inc
cs
push
inc
adc
and
cdq
aaa
add
pop
ret
pop
xor
mov
aam
loope
jns
cmc
retf
mov
pop
and
or
cmp
xor
sbb
outs
sbb
nop
add
add
call
add
add
test
push
sub
cmps
and
jne
xor
mov
jmp
lock
inc
nop
icebp
xchg
add
clc
ins
add
nop
ins
mov
adc
push
clc
and
lahf
ret
or
call
push
mov
mov
cmp
imul
adc
sub
push
call
and
enter
hlt
inc
inc
inc
lock
dec
pop
retf
scas
add
aas
test
sub
cwde
mov
cmp
jne
clc
sbb
sbb
fimul
mov
mov
dec
pop
dec
push
ja
and
adc
test
in
pop
ds
sub
out
nop
sbb
in
movs
or
xchg
push
cs
pop
xchg
daa
or
int3
test
mov
inc
adc
fdiv
inc
adc
inc
outs
cwde
dec
and
add
add
out
movs
std
mov
mov
iret
xchg
sub
push
pop
sub
add
fcom
ret
sub
mov
outs
or
inc
inc
add
pop
pop
dec
cmp
adc
or
push
cmps
imul
inc
js
addr16
push
mov
movs
add
add
fbld
sbb
adc
pusha
mov
or
add
mov
xchg
mov
rol
mov
movs
or
dec
xchg
lods
or
sub
sub
mov
inc
icebp
cmp
xor
push
xchg
and
push
fisubr
pop
pop
dec
sbb
mov
fidiv
ret
(bad)
dec
cmp
shr
ror
fsub
mov
push
push
sub
aas
pop
or
cs
cld
or
stc
ins
dec
pop
pop
add
(bad)
das
scas
push
in
xor
or
push
pushf
push
cmps
hlt
shl
pop
call
cmp
cmp
xor
les
sbb
nop
mov
hlt
add
retf
jle
ss
mov
rcl
add
jbe
add
cs
adc
inc
mov
add
push
repnz
mov
cmp
add
sub
push
clc
cmp
lods
xor
clc
(bad)
ret
xchg
dec
pop
cwde
enter
shr
mov
test
xchg
inc
hlt
outs
stos
and
cmp
adc
into
pop
mov
adc
or
mov
lahf
inc
and
pop
test
xchg
pop
ss
mov
cmp
addr16
call
push
sbb
mov
cmp
jl
in
aam
(bad)
je
jmp
popf
dec
test
dec
adc
dec
jno
xchg
adc
add
(bad)
sub
mov
int3
lods
inc
js
jo
and
add
out
inc
pop
js
adc
test
jbe
retf
(bad)
cli
mov
dec
fstp
dec
pminsw
mov
sbb
shl
test
dec
xor
pusha
outs
pop
mov
cmps
push
out
mov
xor
push
dec
and
or
cmp
adc
pop
add
mov
call
scas
mov
sbb
mov
or
cmp
mov
dec
or
aaa
adc
sub
pop
or
nop
outs
aad
jmp
or
js
mov
in
mov
cmp
shl
clc
ret
push
inc
outs
cmp
or
cmp
jne
cmp
les
lea
dec
mov
add
ret
mov
and
pop
pandn
shl
cmp
(bad)
push
cwde
jbe
xor
pusha
inc
cmp
mov
adc
mov
loop
add
pop
add
rcl
adc
pop
clc
push
dec
test
lock
jne
mov
enter
pop
dec
and
cld
adc
bound
xchg
cmp
or
nop
sbb
cwde
mov
enter
push
inc
shl
sub
inc
add
pop
adc
xlat
add
sub
aaa
pop
repz
aas
inc
push
(bad)
ja
aas
loope
dec
inc
inc
or
rol
imul
dec
jmp
xchg
pop
cs
dec
push
jne
xor
or
nop
nop
sub
mov
adc
adc
sbb
ja
push
cmps
cmp
dec
push
jne
sub
push
dec
push
add
add
mov
gs
sbb
xor
lds
pop
pusha
add
bound
aas
into
jne
jmp
push
xchg
test
or
xor
pusha
pushf
fmul
sub
mov
movs
jge
add
inc
add
and
dec
dec
add
rcl
push
mov
stos
sbb
shl
in
pop
shl
adc
xor
xchg
(bad)
cmp
pop
pop
mov
push
sub
adc
push
or
dec
or
pushf
xchg
sub
jnp
mov
push
inc
dec
xadd
jmp
inc
mov
or
and
sub
in
shl
test
scas
mov
imul
push
hlt
sub
arpl
mov
(bad)
mov
inc
daa
jmp
jmp
(bad)
cld
cld
mov
pop
in
sbb
adc
fs
call
pop
pop
push
in
sti
sbb
cmp
dec
sbb
js
(bad)
hlt
push
mov
pop
repnz
scas
dec
push
inc
repz
mov
loop
cmp
movs
push
pusha
aam
jbe
lock
pop
fs
add
inc
add
sub
inc
cmp
test
cli
and
cmp
(bad)
(bad)
shr
sbb
push
mov
cmp
jo
ins
in
pusha
(bad)
loope
push
call
jo
shl
and
push
sbb
shl
stos
shr
jnp
mov
aaa
f2xm1
pushf
push
push
enter
fadd
sbb
into
or
pusha
mov
sub
(bad)
jne
push
sub
jmp
jle
ja
mov
xchg
xor
nop
push
cmp
sub
add
add
jg
ds
or
or
clc
dec
ja
pop
mov
mov
push
pushf
in
bnd
mov
sahf
pop
sbb
aaa
push
rcr
xor
push
pop
add
cmp
xor
sub
xor
(bad)
push
smsw
inc
push
or
mov
mov
push
adc
push
pop
movs
sbb
push
add
sete
add
and
sbb
push
in
enter
push
push
mov
mov
push
adc
nop
aas
push
(bad)
push
inc
stc
jns
adc
mov
sbb
or
pop
or
mov
mov
add
stos
shr
mov
mov
push
mov
inc
jae
mov
pop
sar
push
xchg
inc
loopne
push
jbe
(bad)
pop
inc
or
(bad)
mov
sar
adc
and
enter
inc
imul
loope
pop
pushf
push
pop
or
scas
add
inc
aaa
call
cmp
xchg
jae
pop
lods
xlat
das
in
push
pop
or
adc
lods
inc
add
shl
pop
inc
test
push
lods
dec
pop
dec
sub
adc
lods
xor
jb
jae
push
push
jb
add
shr
add
pop
pop
push
mov
rcl
pop
pusha
lods
dec
xor
pop
call
sub
faddp
les
pop
data16
dec
cmp
adc
adc
sbb
push
cmps
aaa
in
mov
jl
inc
or
nop
xchg
inc
jl
inc
push
jns
stc
fcom
push
pop
inc
js
inc
inc
out
mov
ss
jb
adc
push
pop
inc
xchg
push
inc
les
sahf
pushf
cld
cmp
mov
add
sahf
ret
daa
daa
imul
js
enter
clc
inc
popa
jnp
fs
ret
or
push
repnz
in
lahf
(bad)
or
jb
jb
pop
xchg
mov
jns
fs
mov
cld
inc
push
push
gs
gs
jo
adc
push
imul
sbb
out
shl
xor
add
dec
test
movs
add
popa
aam
pop
imul
adc
mov
push
cmps
sub
push
repnz
sub
leave
mov
adc
add
(bad)
outs
in
inc
mov
call
ja
movs
in
or
cmp
ror
nop
adc
mov
addr16
push
adc
inc
punpckhbw
stos
das
add
in
adc
test
ins
test
inc
xor
or
sub
in
jmp
iret
cmp
adc
pop
sub
dec
pop
shr
repnz
gs
add
jle
add
test
ins
xor
stos
stc
adc
fs
nop
pop
nop
pop
loop
stos
shl
bswap
adc
inc
mov
pusha
stos
xchg
mov
mov
je
dec
popa
inc
ss
test
stos
dec
dec
inc
mov
pushf
stos
mov
dec
mov
stos
push
mov
push
mov
mov
stos
imul
stos
pop
add
shl
stos
or
mov
stos
shl
xchg
mov
mov
adc
or
lock
xchg
(bad)
cs
pop
dec
mov
lods
dec
pop
dec
and
leave
cmp
shl
dec
mov
mov
fmul
mov
push
cli
xchg
ret
cmps
hlt
ins
mov
add
pop
(bad)
dec
push
and
mov
ja
data16
mov
aaa
or
pop
xor
inc
add
mov
and
leave
push
fcom
enter
dec
call
add
call
call
ffree
data16
loopne
dec
call
fnsave
addr16
clc
add
lock
cmp
mov
int3
shl
icebp
sbb
xor
js
sbb
ins
loop
sub
add
or
je
(bad)
dec
out
jbe
and
xor
add
fadd
pop
cmp
mov
ret
loope
dec
adc
jl
or
fadd
or
add
xchg
test
xor
sub
cmp
jne
lea
shr
pop
sub
pop
pop
pop
jb
mov
add
fst
mov
adc
inc
pop
mov
xchg
into
stos
or
cmp
adc
retw
and
mov
cwde
sub
sbb
pusha
adc
cdq
mov
mov
cmp
js
ins
dec
hlt
mov
scas
inc
or
sbb
sbb
les
ror
js
test
add
xor
xchg
clc
pop
sub
xchg
adc
sub
or
retf
mov
and
cmp
pop
shl
les
pop
sbb
pusha
out
inc
pop
mov
inc
aas
popf
add
jno
mov
sub
daa
pushf
and
call
inc
mov
inc
cmps
cmp
xlat
sahf
stos
pop
mov
das
mov
xor
ret
cwde
pop
aaa
xchg
push
dec
sbb
jmp
enter
sbb
ret
and
lea
cmps
add
add
je
fnstcw
fmul
adc
pop
js
push
ins
add
mov
inc
xchg
sbb
scas
dec
ins
jmp
jbe
adc
mov
call
lock
dec
cmp
fmul
add
sar
fdiv
pop
jle
leave
sub
adc
ds
dec
pop
add
push
jecxz
dec
push
(bad)
adc
in
in
xchg
mov
pop
pushf
mov
inc
or
adc
add
or
or
cdq
jmp
sbb
es
push
pop
sbb
jg
inc
cmp
mov
add
imul
dec
dec
hlt
push
ins
in
xor
or
xchg
pop
push
xor
add
or
addr16
xchg
into
rol
sub
daa
clc
xor
push
adc
not
repnz
inc
push
ror
pop
js
cmp
(bad)
(bad)
push
push
adc
mov
sbb
or
cs
adc
cmp
sub
popa
inc
add
repz
xchg
add
mov
xchg
push
repnz
shr
enter
add
inc
les
sti
popa
outs
mov
mov
push
call
mov
or
fdivp
add
push
repz
and
dec
mov
(bad)
into
adc
dec
repz
(bad)
es
and
clc
jl
test
fld
pop
pop
js
bnd
adc
outs
inc
pushf
outs
pop
pop
dec
jns
mov
pop
xchg
clc
add
push
fnstenv
jo
adc
fsub
dec
xor
pop
repnz
inc
and
adc
dec
adc
or
dec
ins
adc
ss
or
js
xchg
xor
push
popf
cmp
sbb
inc
add
shl
repnz
xor
adc
xor
xchg
xchg
pop
jno
or
nop
in
pop
dec
mov
adc
jno
and
nop
or
in
jno
stos
inc
jb
push
jne
and
pop
ficomp
out
jg
loopne
push
jb
jne
daa
mov
pop
xchg
add
xchg
cmp
jae
cs
xor
xor
sbb
push
in
add
fadd
ja
and
sub
jmp
(bad)
xchg
aaa
adc
call
shl
repnz
loopne
push
stc
dec
in
jge
cmp
out
and
sbb
jge
fmul
xor
or
movs
call
test
ds
push
jne
cmp
daa
push
sub
daa
or
in
pop
inc
gs
fs
fcomp
out
and
sbb
call
push
fsub
adc
cmp
je
loopne
sub
ins
push
add
aad
jb
repnz
jne
adc
inc
inc
sbb
daa
(bad)
sahf
ins
(bad)
jne
pop
mov
jb
out
mov
mov
(bad)
sahf
test
fwait
add
test
nop
dec
mov
jbe
jp
in
enter
add
or
and
jb
lea
nop
pop
enter
ja
out
cdq
mov
cdq
ss
daa
mov
mov
xchg
dec
(bad)
nop
pusha
sub
xor
and
scas
cmp
mov
sub
js
out
inc
xchg
js
mov
or
xor
push
or
das
push
pop
clc
inc
xchg
sub
(bad)
in
and
pop
add
shufps
outs
and
addr16
add
mov
cli
std
add
je
add
mov
mov
or
jge
movs
jnp
enter
js
lahf
aaa
movs
inc
dec
stos
or
jns
mov
push
movs
lds
fwait
pop
and
inc
movs
sbb
sbb
mov
and
stos
aam
jge
outs
in
mov
mov
dec
mov
dec
jnp
push
push
sub
cmovb
repz
sub
ins
push
jl
repnz
fadd
jo
push
jg
xchg
mov
xor
cmps
sbb
aam
push
cmp
jno
sbb
or
mov
fldcw
cmp
and
inc
mov
inc
add
mov
movs
test
xlat
scas
ror
aam
push
clc
je
sbb
pop
movs
out
inc
test
sbb
pop
xchg
enter
js
lods
enter
jl
push
cmp
mov
sbb
inc
repnz
push
mov
push
sub
cmp
mov
cmp
adc
sub
ja
add
and
add
mov
xchg
cmp
xchg
int3
out
test
adc
sbb
mov
push
ror
push
popa
rcr
mov
ficomp
cmp
jne
inc
test
in
loope
adc
mov
dec
loopne
adc
jg
jno
leave
sahf
in
je
or
test
add
pop
and
jbe
je
ds
movs
mov
mov
ins
add
inc
test
test
xor
aaa
in
inc
xor
and
add
mov
and
add
test
adc
push
mov
idiv
dec
add
call
mul
or
ins
adc
adc
sub
loop
dec
and
js
inc
je
inc
in
and
mov
xchg
and
rol
adc
add
ja
xchg
add
(bad)
and
loopne
or
ja
push
or
shr
sub
jo
add
xor
mov
loopne
rep
pop
mov
mov
xor
cmps
jo
sbb
test
mov
jge
mov
xor
add
je
sub
and
imul
add
dec
adc
mov
ins
fcmovb
and
push
jne
lea
add
je
ds
pshufw
sbb
mov
and
push
addr16
imul
sub
mov
inc
movs
sbb
adc
push
ret
call
xchg
icebp
cmp
xor
fild
inc
xor
push
sub
or
pop
push
or
mov
lods
sub
inc
inc
jle
popf
js
cmp
(bad)
or
ja
fcmovnb
inc
mov
repnz
mov
in
in
add
xchg
je
leave
cwde
cmp
mov
js
rol
sub
cdq
or
loop
add
dec
jne
sbb
test
mov
adc
xor
int
push
daa
ficomp
call
scas
loope
mov
push
dec
lods
loopne
mov
xor
push
test
imul
xor
xor
and
ret
sub
test
js
jno
pop
push
cwde
nop
cmp
pop
push
loope
(bad)
and
push
gs
cmps
push
fwait
(bad)
fidiv
inc
(bad)
dec
or
pop
dec
fdivr
jo
iret
je
enter
(bad)
or
and
push
and
sub
adc
je
les
scas
mov
outs
addr16
inc
sbb
add
push
add
pop
into
imul
mov
sub
fld
daa
sahf
push
mov
mov
xchg
mov
sub
iret
jnp
repz
aam
and
adc
fs
sahf
dec
pop
xchg
sbb
lahf
cwde
adc
cmps
xlat
test
xchg
add
xor
inc
js
nop
loopne
jns
dec
xchg
stc
mov
rol
and
mov
inc
fsubr
and
xchg
test
mov
js
es
dec
add
or
pop
jno
ret
js
add
sbb
xor
pusha
inc
les
iret
cmc
pop
sbb
mov
or
cmps
stos
jbe
sub
popa
mov
dec
sbb
out
mov
fsubrp
test
das
sbb
and
jecxz
or
or
jmp
movs
cmp
jmp
mov
jmp
ja
je
aas
cmps
push
cmps
sbb
je
inc
sbb
mov
jmp
and
add
and
movs
add
cs
hlt
je
sbb
addr16
aad
lock
pop
and
push
inc
push
dec
scas
and
neg
(bad)
adc
pop
rcl
mov
sub
mov
pop
enter
add
jae
push
pop
sar
xchg
adc
mov
inc
and
push
es
stos
mov
adc
jo
mov
sub
sbb
aad
sbb
pop
cwde
mov
and
repnz
mov
xacquire
ret
and
lods
ret
cmp
xchg
jmp
gs
ret
cmp
push
dec
lock
sbb
adc
pop
and
jo
pop
call
push
or
mov
mov
div
and
test
adc
imul
jl
add
add
inc
push
ins
imul
sbb
loopne
inc
enter
sbb
push
mov
cmp
push
jb
adc
jle
sub
movs
repnz
lods
cmp
push
mov
adc
mov
mov
push
mov
jo
clc
inc
jmp
std
jmp
jle
push
jmp
fnstsw
pop
xor
ins
add
addr16
in
adc
pushf
aas
adc
adc
sahf
xor
pop
xor
scas
frstor
add
(bad)
stos
sub
test
push
dec
stos
(bad)
and
jbe
fild
dec
mov
sbb
inc
push
jb
adc
(bad)
xor
mov
xchg
ins
lea
loope
mov
nop
dec
or
scas
leave
pop
fadd
add
sbb
pop
cmc
mov
into
and
and
add
sbb
pop
push
cmp
nop
cmps
mov
mov
and
push
test
popa
retf
data16
push
and
popf
aas
mov
mov
cmp
arpl
lods
test
daa
xchg
xchg
das
xor
adc
add
xchg
xchg
push
xchg
mov
push
pop
bound
cmp
inc
js
pop
cmp
nop
sbb
ins
push
push
enter
xchg
pop
xor
add
clc
and
dec
pushf
sub
add
push
lock
test
mov
iret
fisttp
pop
cmp
ins
or
std
fwait
ret
mov
ja
cwde
xchg
or
sub
inc
scas
cs
or
ins
and
xchg
inc
xchg
dec
push
xchg
xor
add
xchg
xchg
cmp
outs
lods
jmp
dec
in
aam
or
inc
pop
pop
and
xor
mov
add
(bad)
xchg
test
shr
or
bound
adc
sti
inc
xor
push
add
push
dec
inc
add
lahf
xchg
cmp
iret
jnp
jo
mov
lea
and
mov
mov
xor
lea
gs
push
mov
inc
xor
nop
xchg
leave
addr16
aam
adc
inc
ror
push
cmp
mov
mov
ja
sbb
add
ins
pop
jns
pusha
xor
movs
inc
inc
pop
mov
xor
mov
fisttp
inc
shl
xchg
lods
lea
ror
sbb
add
cmc
lea
ss
pop
add
nop
xchg
imul
popa
test
cmp
test
popa
mov
add
xchg
and
div
mov
mov
in
loopne
xchg
ret
mov
enter
movs
rol
mov
mov
push
cs
lahf
repz
inc
jecxz
ret
pop
pop
and
push
lock
and
jae
daa
pop
sub
stos
test
leave
cld
call
and
adc
in
ror
enter
push
or
cdq
cdq
inc
cmp
mov
xor
cli
sbb
cdq
js
push
jl
xchg
iret
mov
dec
xchg
push
int3
outs
mov
call
call
dec
cmps
lock
xor
lahf
pop
in
inc
add
pop
or
sbb
test
les
daa
pop
fdivr
imul
fsub
and
jmp
dec
sahf
inc
dec
in
dec
cdq
clc
in
pop
inc
shl
add
adc
pop
test
mov
mov
into
popa
and
ds
aad
dec
sub
mov
sbb
rol
pop
repz
cld
popa
test
(bad)
adc
repz
push
lods
and
mov
cld
add
das
pusha
jp
dec
mov
sub
inc
add
mov
lods
test
outs
and
aas
add
test
outs
call
adc
aam
sub
pop
pop
add
enter
dec
and
push
pushf
scas
pop
jns
repnz
mov
add
cvtps2pd
add
popf
pop
jne
iret
sub
nop
or
cmp
or
or
lea
call
mov
mov
add
(bad)
push
jns
mov
movs
sbb
mov
sub
cld
mov
sbb
or
add
or
jmp
arpl
ret
and
adc
mov
sub
inc
mov
add
das
or
cs
das
aam
pop
xchg
adc
jnp
add
je
pusha
aad
xor
lea
mov
xchg
mov
or
int3
mov
xchg
adc
ret
test
pop
rol
push
xchg
xchg
xchg
test
push
pop
leave
cmp
bound
sti
sbb
xchg
adc
add
push
fmul
inc
repnz
and
test
xor
and
inc
jno
mov
adc
pop
push
lock
out
in
(bad)
adc
pop
xor
add
jo
dec
or
mov
in
or
scas
aas
sub
call
mov
ret
pop
lahf
dec
les
push
push
bound
cdq
adc
or
not
sub
cmp
outs
sub
int
pop
imul
pop
pop
push
adc
sbb
adc
ret
(bad)
sbb
retf
and
mov
ins
lds
imul
sbb
ins
inc
sahf
inc
cld
sbb
jmp
and
mov
or
js
ss
inc
mov
pop
adc
daa
cmps
cld
aas
je
call
xor
cmp
das
xor
(bad)
neg
or
or
xchg
pop
ds
das
jp
shl
lods
dec
mov
and
xor
xor
mov
add
push
dec
cmp
lock
(bad)
pmuludq
inc
outs
(bad)
test
(bad)
dec
pusha
mov
add
(bad)
jne
or
or
xchg
jns
das
mov
sbb
push
les
jae
aad
xor
mov
mov
and
ja
add
or
sub
and
sti
gs
and
and
xor
adc
push
adc
popa
xchg
cmps
fwait
rol
add
mov
inc
pop
mov
popa
pop
repnz
mov
push
jnp
add
enter
movs
and
shrd
xor
mov
add
add
adc
mov
mov
mov
push
xor
mov
sub
push
(bad)
loopne
pop
pusha
push
pop
jae
add
pop
xor
inc
add
cmps
pop
cmp
je
pop
loopne
cmp
ss
(bad)
push
mov
adc
inc
and
sbb
cmps
sub
cwde
add
push
sbb
dec
inc
jns
movs
mov
mov
imul
mov
add
stos
sbb
dec
daa
dec
sar
adc
les
mov
mov
cmps
add
mov
pop
xor
ror
add
jns
test
or
pop
mov
push
and
xchg
sti
pop
movs
dec
shl
cmp
nop
inc
add
or
add
mov
inc
mov
call
fsub
cmps
or
add
iret
loopne
or
pop
and
leave
out
adc
nop
xlat
or
dec
xchg
or
push
mov
xor
pusha
and
mov
adc
je
cmp
(bad)
stos
add
and
push
inc
xlat
stos
mov
pusha
jns
iret
mov
add
leave
cmp
stos
pusha
mov
les
inc
ja
push
push
sahf
cmp
adc
dec
mov
repnz
bndldx
lods
push
scas
inc
push
cdq
or
cli
or
add
push
addps
mov
push
cmp
xor
lods
push
xchg
dec
lods
pop
pushf
adc
out
xchg
or
ss
lock
imul
add
xor
mov
lock
lock
cdq
lds
mov
push
add
inc
or
out
ror
xchg
cmp
push
in
adc
ret
iret
fild
cdq
or
push
jo
adc
and
pop
sar
leave
cmps
push
lds
jns
add
shr
sub
fsubr
add
test
xchg
sub
jg
scas
cmp
add
xor
cwde
dec
cdq
scas
aam
inc
ror
adc
inc
sub
in
in
mov
mov
mov
repnz
push
mov
mov
mov
pop
ret
repnz
cmps
bound
sbb
pop
daa
movs
dec
popa
and
stc
call
dec
mov
push
fsubr
pop
push
mov
xchg
xchg
mov
xor
or
adc
mov
add
pop
add
push
retf
sbb
mov
into
and
sub
cmp
mov
xor
(bad)
push
adc
aam
pop
int3
arpl
inc
dec
aam
cwde
mov
ja
sbb
aam
int3
push
adc
loop
es
mov
ds
sahf
sub
imul
inc
fmul
add
adc
or
test
add
jns
xchg
pushf
clc
ror
mov
mov
cmp
dec
dec
leave
imul
dec
pop
enter
mov
cwde
add
pop
pop
push
add
mov
mov
mov
daa
nop
mov
push
cld
test
das
aas
add
push
adc
mov
and
sub
(bad)
clc
mov
in
mov
jb
pop
pop
inc
mov
mov
or
test
mov
add
or
jmp
xor
dec
mov
mov
ss
jb
repnz
jns
jb
mov
cld
xor
data16
xor
mov
inc
mov
push
mov
daa
daa
and
mov
xchg
daa
daa
hlt
sbb
xchg
cwde
hlt
push
sar
jns
outs
push
sar
shl
push
mov
jae
int3
mov
daa
in
clc
rol
das
cmp
shr
shr
push
jb
mov
shr
cmovp
xchg
and
cwde
mov
movs
and
fwait
xor
adc
push
or
enter
stos
fiadd
jo
jae
mov
cmps
nop
push
clc
rcl
inc
add
pushf
in
xchg
push
jns
add
jae
mov
push
add
adc
push
mov
gs
mov
es
clc
ror
sbb
(bad)
sbb
iret
adc
add
mov
xor
and
in
mov
shl
mov
mov
add
ins
cdq
pop
mov
shl
data16
nop
add
loopne
clc
shl
clc
sar
mov
push
es
and
mov
add
mov
jb
xor
cmp
(bad)
jb
mov
mov
test
xor
leave
data16
mov
adc
mov
or
or
clc
sar
ret
or
mov
(bad)
(bad)
jae
adc
dec
mov
add
mov
xchg
dec
adc
stos
sbb
mov
mov
aam
stos
mov
hlt
dec
ror
arpl
mov
jb
mov
push
xor
pop
jae
mov
mov
push
and
int
jbe
retf
shl
mov
rol
mov
xlat
shl
jb
stc
mov
add
push
mov
leave
and
or
and
push
leave
retf
retf
mov
ret
sub
pop
inc
pop
cmp
mov
and
movs
add
cmp
ds
ret
test
xchg
ret
in
in
ins
les
repnz
mov
adc
(bad)
stc
push
fs
daa
mov
in
(bad)
cld
mov
out
sub
inc
add
xchg
sbb
add
inc
aaa
pop
or
add
inc
jb
les
repz
ins
and
vxorps
sbb
adc
xchg
vpcmpgtd
cs
dec
fist
bnd
test
(bad)
enter
test
(bad)
enter
aas
lahf
adc
test
push
push
aas
imul
in
(bad)
sbb
dec
es
enter
das
(bad)
(bad)
aas
cld
sar
aas
or
les
rol
pusha
aam
repnz
call
pop
repnz
push
sbb
pusha
aam
sbb
mov
lds
aaa
in
and
mov
pop
xor
enter
(bad)
lods
(bad)
sar
pop
add
data16
leave
mov
and
jge
and
addr16
ror
cmp
addr16
cmp
inc
add
mov
mov
call
in
sbb
jo
les
lds
and
sbb
repnz
int3
sqrtps
leave
in
repnz
xor
fs
fs
fcom
repnz
ds
bound
int3
sbb
dec
cwde
iret
dec
inc
sahf
mov
sbb
arpl
shl
sbb
aas
daa
daa
daa
daa
jbe
stc
xor
pop
jle
stc
enter
aas
sar
test
sub
jns
shl
rcr
aam
int
inc
imul
mov
pusha
aam
mov
in
and
test
jno
popfw
xor
mov
pusha
aam
mov
fdivr
xchg
pop
pusha
aam
push
pop
jne
mov
mov
mov
push
ins
add
retf
jl
xchg
push
mov
adc
mov
pusha
aam
push
xor
push
enter
push
mov
lds
popa
push
and
xor
rcr
retf
pusha
aam
sbb
popa
(bad)
mov
ror
repnz
stos
retf
pop
xor
mov
retf
sbb
in
jb
pusha
aam
ret
enter
xor
or
cdq
sbb
retfw
fs
add
movs
retf
pusha
push
leave
mov
aam
and
push
mov
rol
in
ins
(bad)
retf
pusha
aam
mov
cmp
lods
fs
sbb
mov
xchg
int
retf
imul
or
ret
leave
add
retf
ins
(bad)
and
and
in
pusha
aam
ret
and
jns
imul
push
inc
or
pusha
and
adc
les
dec
retf
jl
lahf
mov
inc
mov
mov
mov
xor
les
mov
xor
push
sti
retf
xor
add
push
mov
pop
pop
and
jns
mov
mov
fcmovnbe
(bad)
aam
aad
aad
dec
(bad)
adc
mov
or
les
or
push
xor
inc
sub
int3
mov
mov
and
(bad)
ja
jns
jns
(bad)
sbb
es
sub
and
js
mov
je
push
pop
aam
add
movs
enter
in
rcl
or
jns
push
jmp
xlat
outs
and
push
xlat
mov
xlat
and
push
(bad)
pushf
mov
mov
lods
fwait
and
daa
in
ins
sbb
dec
(bad)
stc
mov
popa
ficomp
push
(bad)
or
add
lods
or
and
add
scas
js
adc
daa
mov
gs
and
cli
fnstsw
rcr
and
dec
les
push
pop
adc
ror
mov
in
add
arpl
enter
add
fstp
push
js
push
lahf
mov
enter
or
(bad)
mov
adc
cmp
push
add
ficom
fld
aas
adc
push
sub
aas
inc
fstp
and
shl
pop
leave
lahf
adc
xor
retf
push
imul
adc
pop
dec
dec
leave
xor
pop
leave
cmp
call
shr
or
add
pop
pop
aad
xchg
inc
lods
dec
mov
inc
or
sub
xor
sti
xchg
inc
test
add
das
aas
adc
push
sub
hlt
(bad)
shl
and
(bad)
iret
das
scas
pop
dec
(bad)
leave
pop
je
aam
enter
int
je
add
pop
aam
xor
in
in
mov
fistp
fucomip
in
in
fbld
loopne
in
leave
leave
dec
xchg
pop
loope
in
fs
lahf
in
adc
jb
jb
inc
jnp
cld
cmp
sbb
jecxz
retf
pushf
pushf
pushf
mov
mov
pushf
out
and
and
loop
out
fs
daa
daa
lods
or
pop
xor
popf
mov
xchg
out
out
movs
mov
adc
sub
mov
movs
dec
into
inc
retf
shr
iret
and
sub
fdiv
mov
sbb
mov
push
jb
jne
dec
es
scas
sub
retf
inc
es
cmp
and
sub
mov
jae
or
adc
inc
outs
stos
sub
fnstenv
push
adc
sub
sub
dec
les
and
add
xchg
adc
fist
adc
in
retf
and
mov
in
fst
icebp
mov
sub
fmul
ins
dec
les
lea
inc
fiadd
add
cmp
icebp
movs
fs
int
movs
nop
es
iret
sub
mov
and
fs
sub
(bad)
shl
sub
pop
rol
sub
sub
ins
xchg
stos
cdq
and
int
and
repz
lods
in
sub
ins
aam
and
jb
push
xchg
clc
int
loop
push
or
xchg
mov
inc
or
mov
outs
and
sub
dec
aad
and
cmp
pop
adc
sub
and
mov
dec
mov
jl
imul
nop
and
into
mov
icebp
jae
daa
dec
jbe
movs
sub
cdq
(bad)
or
dec
les
into
imul
es
sub
and
inc
jl
gs
adc
sub
adc
xor
es
leave
enter
test
pop
dec
vmovapd
shl
aam
les
sub
iret
pop
adc
cmp
test
sti
xlat
icebp
adc
lds
(bad)
or
add
fsub
add
arpl
pop
and
rcl
mov
ja
call
add
mov
in
mov
sub
(bad)
xchg
pop
enter
fsub
pop
and
jmp
fucom
xchg
or
jmp
xor
js
xchg
(bad)
cmp
jbe
push
push
pop
mov
sub
in
xor
(bad)
rol
push
iret
test
mov
sbb
inc
sti
pop
jmp
in
and
fld
cmp
add
pop
jmp
mov
mov
sahf
sbb
loopne
cmps
pop
jmp
pop
xchg
rol
xor
push
enter
jmp
or
out
jmp
mov
shl
fistp
out
push
sahf
js
inc
dec
out
jle
xor
push
jle
(bad)
sub
cmp
enter
gs
sbb
add
nop
push
xchg
mov
es
retf
test
cmp
loop
adc
ins
mov
retf
sbb
addr16
sbb
push
ds
or
mov
adc
cmp
jne
inc
rol
pop
push
mov
sub
mov
aam
sub
cmps
rcl
cmp
or
jmp
xchg
stos
xor
inc
push
(bad)
neg
mov
imul
dec
inc
inc
sub
div
mov
aaa
add
lock
shl
jns
les
mov
inc
enter
xchg
jne
and
add
xor
add
or
push
push
cmp
cmp
test
mov
sbb
in
xchg
test
frstor
xor
out
cmp
inc
or
(bad)
adc
ins
movs
xor
adc
add
pop
pusha
cmp
push
xchg
add
cs
push
xor
add
push
ret
lods
adc
fwait
mov
add
mov
xor
push
call
xchg
retf
inc
bound
jl
push
add
inc
or
push
idiv
test
jg
out
fist
mov
cmc
out
or
adc
add
into
sbb
mov
adc
sub
out
push
push
push
cmp
cli
add
aaa
add
or
aam
and
hlt
jns
das
movd
push
lock
pop
and
lock
test
push
pusha
outs
add
jns
cwde
das
movs
retf
add
adc
adc
das
popa
inc
sub
pusha
or
jae
lock
add
jl
(bad)
repnz
loope
rcl
and
ss
pop
retf
stos
push
adc
mov
dec
cmp
mov
push
add
xchg
add
push
js
xchg
scas
cld
sub
add
repz
mov
hlt
mul
or
hlt
iret
jnp
and
sbb
and
inc
push
cmp
scas
pop
jmp
push
pop
inc
pop
(bad)
leave
cwde
repnz
and
add
sub
jp
push
push
enter
pop
popf
add
pop
jne
inc
in
repz
jge
push
nop
je
aad
cmp
xchg
ret
repz
jmp
add
pusha
adc
jne
pusha
pop
daa
adc
and
loope
fdiv
loope
fbld
mov
js
inc
aaa
mov
retf
cmps
adc
push
xchg
sub
or
aas
aaa
add
push
xor
mov
and
les
or
mov
mov
xor
adc
pop
pop
pop
adc
sbb
adc
sbb
ins
dec
aam
fdiv
push
(bad)
add
and
jecxz
or
inc
inc
sahf
xchg
or
add
pop
inc
scas
popa
pushf
enter
push
adc
lea
test
add
icebp
xchg
arpl
cmps
inc
mov
or
repz
xor
cmp
movs
fstp
dec
inc
les
imul
or
shl
add
aaa
dec
or
jle
pop
or
xor
jne
dec
mov
daa
add
xor
add
mov
ins
movaps
adc
mov
in
les
test
mov
rol
fnstsw
add
test
test
mov
and
pop
jmp
push
mov
xchg
mov
cmps
and
mov
aam
fidivr
add
jno
mov
fcomip
jo
popa
and
and
fcmovnb
fmul
inc
ret
in
jl
clc
inc
sti
xbegin
add
hlt
xor
mov
ja
aaa
sbb
nop
cmp
adc
add
and
and
add
daa
hlt
out
cmp
lea
sub
mov
jns
ret
cld
push
mov
sti
add
mov
ins
push
inc
or
stos
sub
pushf
arpl
setle
push
adc
pop
adc
push
adc
nop
pop
aad
aaa
stc
pop
xchg
(bad)
or
int3
aad
lds
inc
stc
pop
xchg
les
retf
sbb
sbb
stc
lock
(bad)
pusha
xchg
nop
xchg
es
mov
cmps
and
inc
sbb
adc
pop
or
lock
lock
pusha
scas
xor
test
int3
icebp
xor
shr
xchg
cli
mov
or
popa
add
mov
jle
test
push
lea
or
jae
test
mov
jns
xchg
mov
sbb
and
add
loop
int
sti
or
movs
iret
ja
jmp
imul
xchg
xor
or
pop
mov
cmps
pop
push
mov
add
mov
pop
pop
das
sub
sub
(bad)
and
inc
or
adc
or
aad
inc
pop
and
inc
clc
mov
xchg
inc
aam
mov
test
in
add
clc
pop
adc
xchg
in
std
dec
mov
cmps
xchg
add
inc
ja
jne
in
imul
jb
jle
push
jae
xchg
xchg
dec
cmps
std
jmp
dec
das
cli
sbb
mul
mov
popa
jecxz
and
push
cmps
adc
in
pop
mov
stos
ror
loopne
mov
into
and
stos
(bad)
sbb
jmp
stc
loopne
push
mov
in
inc
and
es
or
out
call
addr16
movs
or
push
push
sub
mov
jne
or
push
aas
fdiv
dec
data16
dec
mov
xchg
add
inc
sar
imul
or
cmps
push
sbb
pop
and
nop
jne
sbb
add
adc
out
repz
add
mov
add
pop
pop
or
mov
in
lea
cld
iret
popa
pop
mov
mov
pusha
movs
sti
push
nop
push
das
mov
repz
xchg
jecxz
aad
test
pushf
xchg
test
lods
pop
push
stc
or
int3
mov
inc
mov
push
push
retf
mov
add
ret
sbb
pop
jnp
dec
and
inc
in
fmul
fwait
pushf
mov
sub
movs
mov
int3
mov
add
pushf
push
sub
inc
pushf
popa
push
add
or
xor
in
lods
outs
add
scas
pop
fcmovnb
lods
mov
inc
in
or
mov
jne
add
or
cmp
mov
in
repz
sbb
or
je
pop
xchg
or
pop
inc
cmc
pop
and
add
loopne
ret
nop
inc
add
pop
ja
fdiv
and
xor
pop
(bad)
rcl
or
gs
add
pop
test
xchg
push
add
push
das
fstp
pop
cmps
call
scas
or
pusha
into
loop
jno
inc
sbb
jmp
cmps
or
lock
xchg
nop
aaa
lods
dec
arpl
dec
push
mov
imul
add
daa
cwde
xchg
inc
test
cs
xchg
or
push
and
mov
mov
xchg
jbe
mov
jbe
push
cmc
es
sahf
xchg
fbld
add
stos
inc
leave
int3
mov
ret
push
and
ret
cmc
movs
movs
jmp
imul
nop
mov
seta
xchg
leave
sbb
leave
sbb
aam
mov
inc
test
add
mov
xor
mov
(bad)
aas
sub
in
push
inc
xchg
push
inc
nop
cmps
inc
mov
push
inc
sbb
push
and
stc
stos
dec
add
push
mov
push
pop
loope
mul
sub
push
jmp
mov
or
out
pop
inc
adc
cmp
mov
sbb
sbb
xchg
cmp
or
cmps
mov
pop
int
add
or
sbb
sub
add
(bad)
push
adc
inc
ja
add
mov
cs
cmp
cmp
popa
jmp
gs
xor
mov
sbb
inc
not
or
sbb
iret
pop
dec
movhps
and
xchg
xor
add
mov
add
addr16
mov
mov
inc
leave
xchg
das
adc
inc
or
mov
daa
xchg
xchg
push
repnz
push
jg
sar
stc
repnz
fisttp
inc
add
inc
add
or
call
sub
mov
sub
inc
shl
and
enter
add
xor
add
xchg
dec
xor
pop
ins
dec
add
sub
inc
add
sub
inc
lods
or
stos
ret
aas
shl
or
sub
fimul
fwait
mov
or
daa
loope
mov
push
enter
fisttp
sub
inc
or
pop
push
sub
add
out
push
push
je
leave
cmp
iret
popf
stos
fstp
jo
outs
scas
cmp
dec
vmread
mov
daa
jmp
jns
out
ficomp
jns
push
inc
pop
pextrw
xor
mov
fiadd
in
dec
cmovbe
in
ins
add
in
mov
daa
retf
dec
pop
push
loopne
inc
mov
jns
sbb
lods
fidivr
xor
inc
mov
lock
inc
push
mov
das
or
in
aam
inc
outs
xor
inc
mov
rcr
rcl
and
mov
inc
sub
inc
adc
nop
cmp
add
mov
leave
or
nop
or
xor
inc
jecxz
fsubr
push
jg
imul
adc
adc
push
inc
inc
sahf
pushf
cmp
ficom
adc
and
dec
xchg
loopne
adc
daa
mov
xchg
xchg
xchg
push
mov
and
in
leave
leave
pop
mov
in
xor
mov
xor
in
aaa
sbb
ins
bnd
mov
nop
ds
sbb
push
inc
adc
and
in
jns
jp
pushf
sbb
nop
test
push
adc
aad
popf
xor
jnp
pop
pop
leave
aam
sub
aam
adc
xchg
pop
dec
aam
jnp
call
aaa
push
mov
or
and
sub
or
and
pushf
sbb
ds
add
xchg
push
shr
jnp
and
das
jnp
push
gs
cmp
(bad)
pushf
sbb
adc
or
or
jnp
daa
push
mov
jnp
aad
dec
xlat
jno
dec
xchg
inc
in
in
fcomp
and
ins
rol
cdq
jp
push
stos
xchg
popf
test
xor
fcomp
dec
fcomp
xor
xchg
sub
inc
repnz
xor
jp
pushf
sbb
mov
dec
or
fnstenv
jp
dec
adc
adc
push
and
jl
dec
jp
pushf
sbb
push
aam
mov
or
adc
fidivr
sub
push
fidiv
add
adc
mov
leave
push
pop
and
adc
aad
sbb
call
es
mov
push
(bad)
or
fcmovb
sbb
sbb
addr16
pop
pusha
jg
rcr
rcl
and
or
les
inc
pop
mov
sub
xor
mov
mov
fwait
gs
nop
jmp
cmp
add
jns
sub
sub
or
loop
xor
call
mov
shl
inc
jnp
dec
je
sti
ins
jmp
jnp
jmp
fstp
or
add
sbb
jle
arpl
dec
xchg
sub
inc
shr
inc
movs
dec
out
jp
cmp
mov
sbb
xchg
pop
inc
sbb
mov
les
sub
push
leave
adc
or
inc
ret
lahf
add
dec
ret
inc
mov
mov
jmp
cld
adc
fidivr
test
xchg
out
add
cmp
loop
xor
outs
test
test
cmp
and
xchg
shr
inc
pop
gs
out
test
sbb
xor
rcl
lahf
inc
adc
mov
rol
adc
fcom
es
sub
sub
mov
and
int3
jmp
sar
mov
fnstsw
push
sbb
push
mov
cmp
imul
mov
push
popa
jmp
enter
and
mov
pop
push
xor
mov
(bad)
or
test
or
mov
in
and
sub
jl
add
or
add
mov
add
push
xor
dec
xor
scas
les
adc
mov
push
dec
ja
inc
shl
dec
mov
push
mov
stos
pop
mov
ins
in
je
mov
sbb
(bad)
cmp
sub
cmp
xchg
inc
mov
rep
sbb
mov
imul
inc
dec
or
popf
dec
sbb
add
mov
daa
or
or
pop
aas
jmp
add
xor
or
rcr
sahf
push
loop
je
sub
add
rol
xchg
and
lock
or
pusha
jmp
ror
test
mov
lds
cmp
push
enter
add
pop
add
ret
push
stc
stos
or
dec
jne
sahf
test
push
inc
shr
je
xlat
movs
adc
call
ror
and
pop
mov
cmps
lahf
adc
shl
rcl
push
sbb
add
in
(bad)
xchg
les
movs
or
into
enter
inc
push
jg
fwait
cmp
inc
inc
in
fsubr
fstp
fwait
(bad)
xchg
xor
push
xchg
out
imul
dec
xor
xchg
jl
push
call
add
jnp
xor
mov
loop
pop
ins
jnp
(bad)
push
rol
(bad)
mov
sar
xchg
mov
das
cmp
add
inc
mov
punpcklwd
out
cwde
data16
bound
pusha
int3
and
jne
das
test
(bad)
inc
inc
jne
mov
push
mov
les
or
mov
les
dec
inc
push
sub
fldenv
xor
shl
cmp
xor
enter
call
or
mov
mov
sbb
jo
les
inc
test
mov
daa
and
in
(bad)
mov
js
pop
je
jne
push
or
add
daa
inc
aaa
add
or
xchg
sbb
rol
add
pop
jmp
xchg
jns
and
jo
push
jne
(bad)
dec
mov
push
iret
and
cmp
xor
mov
in
add
and
shl
pop
and
or
and
iret
cmps
call
loopne
ins
arpl
lods
test
dec
hlt
call
or
call
inc
or
test
push
inc
retf
push
add
add
mov
mov
cmc
or
pop
aam
hlt
sbb
inc
fdivr
push
cdq
jmp
jmp
les
jns
push
mov
jmp
lahf
test
xchg
lock
jns
mov
adc
and
xor
in
in
in
dec
imul
mov
jne
mov
call
jg
adc
test
nop
dec
fisub
push
mov
mov
imul
fld
das
xor
test
mov
adc
inc
or
enter
jge
cld
repz
or
inc
pop
mov
and
and
movups
pop
sub
mov
sbb
sbb
(bad)
(bad)
jae
stos
xchg
test
ret
and
sbb
pop
xor
fidiv
jg
dec
and
nop
mov
pop
dec
dec
punpcklwd
test
shl
xlat
loopne
cmp
sub
push
jns
cmp
add
and
cmp
in
mov
sti
adc
inc
and
inc
pop
sbb
fsub
cli
dec
cwd
fcomp
xchg
add
out
inc
xchg
imul
add
mov
sbb
sti
cmps
in
addr16
cs
push
mov
pop
xor
imul
inc
(bad)
adc
sbb
or
sbb
inc
and
add
jb
pusha
cmp
popa
xor
add
aad
and
rol
das
mov
xlat
(bad)
mov
adc
sbb
push
add
imul
lods
test
pop
mov
mov
(bad)
(bad)
es
mov
icebp
ins
dec
sub
mov
lds
add
inc
(bad)
push
or
mov
stos
adc
mov
cmp
jecxz
add
push
inc
in
xchg
pop
adc
xlat
dec
sahf
test
pop
aas
sub
test
xchg
adc
sbb
cmp
or
ja
push
push
sub
adc
and
xor
jns
jb
add
xchg
lock
and
in
in
add
inc
adc
fldenv
xor
add
rcr
fwait
mov
mov
not
(bad)
mov
add
arpl
aaa
pushf
sub
xor
(bad)
movs
outs
push
out
les
(bad)
pop
sub
fld
jnp
push
pop
and
(bad)
int3
scas
inc
pop
mov
inc
xor
adc
push
sbb
pop
mov
and
cmp
test
xchg
das
pop
ret
dec
jmp
out
or
and
ss
add
xor
mov
xor
pop
push
rol
outs
xor
imul
jg
mov
inc
loopne
hlt
push
cld
xor
pop
add
sub
fdiv
je
xchg
pop
aaa
push
inc
popf
or
xchg
das
fnstenv
push
xor
dec
lds
or
mov
fs
mov
cwde
and
push
mov
xor
mov
xlat
sub
and
sbb
or
mov
dec
pop
jge
adc
and
lods
popa
loopne
retf
pop
test
sub
inc
scas
movs
xor
mov
enter
inc
xor
inc
push
loopne
fld
or
sbb
repz
pop
loopne
dec
sub
mov
inc
adc
imul
in
and
ficomp
mov
jmp
ret
and
push
fadd
add
inc
sbb
shr
je
retf
je
push
mov
and
sti
push
pop
push
sahf
jbe
sbb
cmc
sbb
outs
or
sub
add
xchg
push
not
mov
jo
inc
xchg
mov
and
ins
(bad)
iret
mov
xor
sbb
mov
rcl
xor
push
push
icebp
and
pop
lahf
adc
xor
push
lds
push
mov
xchg
cmp
mov
xchg
mov
or
ins
movs
and
dec
pop
inc
dec
xchg
movs
xchg
xor
pop
mov
sbb
ja
leave
xor
mov
cmp
scas
adc
dec
inc
mov
sub
mov
leave
sbb
mov
ror
sbb
adc
sub
add
or
aaa
daa
pop
xor
fild
mov
add
(bad)
inc
add
and
dec
push
stc
add
inc
dec
push
pop
mov
xor
push
cmp
pop
xor
and
scas
fs
add
xchg
mov
ret
add
loope
mov
jmp
and
mov
cmp
les
sbb
and
push
push
and
dec
call
push
add
adc
(bad)
daa
adc
cmp
cdq
sbb
push
mov
fstp
movs
and
xchg
mov
mov
movs
int3
loop
adc
xchg
shl
leave
inc
sub
aam
nop
retf
and
aam
fdiv
dec
push
in
fcom
inc
mov
fisubr
fsubr
sub
mov
(bad)
mov
adc
sub
nop
mov
int
lods
sbb
in
lods
mov
push
sbb
inc
idiv
inc
adc
pop
add
or
mov
add
push
loopne
jo
or
dec
jo
lods
dec
inc
int
mov
dec
into
sbb
dec
xchg
jg
xchg
call
push
xlat
add
jecxz
jo
outs
add
leave
jg
inc
out
sbb
adc
aas
lods
mov
push
xor
stos
add
mov
push
repz
cs
adc
sar
add
push
xor
xor
xchg
call
sub
and
or
shl
pusha
cmp
mov
loopne
add
push
pop
add
and
cmovp
inc
les
dec
cli
sbb
xor
or
sub
push
mov
pop
arpl
jo
ds
fstp
mov
inc
xor
xchg
mov
aaa
inc
add
jl
or
jnp
pop
jae
xor
jmp
push
dec
sbb
mov
push
popa
add
pop
xchg
adc
dec
cdq
xor
inc
call
cmps
xor
aaa
dec
or
xor
outs
and
xor
sbb
pop
add
int3
push
fcom
int3
lods
mov
push
ds
test
and
push
and
sub
xor
push
ret
repnz
mov
gs
pop
or
sub
test
jns
push
dec
pop
scas
(bad)
clc
inc
ds
sub
lock
push
aad
movs
mov
inc
int3
sbb
pop
or
sbb
in
ds
xlat
pusha
mul
mov
int
dec
in
inc
in
pop
xor
and
mov
call
movs
xor
hlt
push
in
or
pusha
imul
retf
out
sub
add
jae
sub
iret
pop
ins
or
cmc
fs
jne
pop
jle
add
xor
pop
dec
push
mov
fadd
mov
aam
add
dec
inc
add
fs
mov
and
xchg
mov
sub
mov
icebp
fbstp
mov
dec
jp
jle
movs
sub
cmp
mov
mov
push
push
and
ins
dec
sub
pop
jo
pop
inc
jns
loopne
lea
sub
mov
sbb
das
mov
jg
and
push
cs
cmps
loopne
(bad)
popw
mov
xor
outs
ds
add
and
sbb
(bad)
xchg
sub
xchg
jmp
mov
lods
xor
cmp
sbb
pop
pushf
and
push
inc
cmp
(bad)
and
add
add
and
and
arpl
out
hlt
in
nop
mov
sbb
nop
clts
xor
test
and
in
or
fdiv
mov
xchg
and
add
xchg
push
(bad)
add
inc
js
and
dec
dec
test
(bad)
and
sahf
inc
mov
push
rol
mov
pop
cmp
jl
mov
rcr
in
cmp
aaa
movs
(bad)
push
push
aas
cmp
invd
popf
dec
pop
fadd
mov
push
sbb
mov
inc
or
movs
inc
sar
pop
add
xor
pop
adc
xchg
leave
neg
cwde
adc
inc
push
push
fisttp
xchg
(bad)
movs
mov
pop
or
cmp
pop
(bad)
fld
add
out
imul
bndldx
and
(bad)
mov
ret
cmc
or
adc
and
add
sbb
(bad)
nop
sbb
sub
mov
sahf
mov
add
lods
xchg
sbb
mov
and
add
fsubrp
add
push
push
add
outs
add
push
call
sbb
pop
sbb
push
shl
enter
sub
jmp
adc
push
pop
movs
adc
add
adc
mov
pop
or
les
mov
mov
sub
or
imul
sbb
mov
mov
sub
out
add
cmp
cdq
out
mov
retf
cmp
jae
pop
loop
xor
pop
push
push
call
sar
jae
xchg
or
or
mov
cmps
ins
lahf
and
jne
sub
test
and
or
mov
imul
retf
adc
in
cmp
or
fst
mov
popf
mov
fs
pop
jmp
mov
sub
mov
ss
aaa
mov
jo
int
loop
jl
fld
push
mov
inc
(bad)
mov
add
xor
ins
shl
dec
pusha
fimul
push
inc
lock
aam
ror
imul
mov
or
js
or
out
mov
cwde
jle
pop
js
jns
shl
cmps
pop
inc
or
ror
add
enter
rol
push
ror
int3
ror
cmp
push
jnp
mul
and
(bad)
mov
sub
cmp
jmp
addr16
adc
sub
bound
cmp
cdq
inc
mov
push
push
add
cmp
sbb
shr
out
dec
push
add
add
pop
dec
cmp
add
dec
inc
sbb
add
xchg
outs
idiv
push
ins
push
xor
add
pop
inc
pop
out
into
cmp
jecxz
push
jp
je
or
sar
addr16
pushf
or
push
add
cmp
jne
sbb
pop
pop
and
dec
or
das
push
mov
mov
das
xor
and
xlat
test
shr
pop
adc
adc
mov
leave
push
fwait
inc
pop
ficomp
jnp
loop
pop
iret
jno
pop
cmovs
push
idiv
sbb
mov
fist
ret
or
or
jmp
sub
sbb
or
push
pop
addr16
mov
add
dec
ret
add
fbld
mov
adc
mov
in
cmp
rol
and
nop
xchg
call
loop
mov
loope
in
pop
pop
mov
push
xchg
sbb
cmp
sbb
mov
adc
adc
fild
retf
(bad)
push
add
sub
push
adc
popa
and
add
cmp
mov
xor
push
push
cmp
and
add
fcom
jmp
lea
sub
mov
fcmovnu
(bad)
dec
in
sub
and
div
or
mov
inc
mov
and
cmp
or
mov
adc
add
or
pop
push
or
paddsw
mov
(bad)
aad
xor
xchg
inc
xchg
pop
ja
mov
popa
aad
cmp
mov
dec
mov
sbb
rcr
pop
cs
mov
cmp
pop
nop
(bad)
ins
std
mov
add
push
and
stc
sbb
jmp
shr
sub
xor
mov
or
jg
cmc
shl
or
rcr
(bad)
xchg
dec
add
aas
pop
rcl
or
inc
aas
test
mov
dec
cmp
sbb
and
mov
adc
adc
stos
push
test
outs
push
or
call
add
push
ror
into
push
outs
fcom
call
lds
fs
(bad)
or
fmul
adc
cld
dec
add
and
dec
jp
xchg
test
in
jae
xchg
cmp
mov
fcmovnu
(bad)
in
push
push
mov
mov
cmp
add
push
xchg
sub
addr16
mov
pop
mov
das
xchg
int
inc
sbb
sbb
dec
add
add
jp
ins
xor
adc
push
(bad)
cmc
jae
add
jp
(bad)
jmp
sbb
push
cmp
inc
add
mov
xchg
shl
sub
mov
sti
je
xor
call
es
sub
shl
add
add
cmp
fcmovb
and
inc
add
(bad)
push
push
pusha
jmp
push
mov
or
and
push
push
xor
(bad)
ss
push
jbe
and
dec
sbb
cmps
push
mov
add
test
dec
pusha
ins
push
das
push
mov
sub
pop
sbb
mov
push
mov
and
and
daa
inc
pop
je
stos
les
sub
inc
fild
sub
hlt
ins
pop
jecxz
xor
or
xchg
es
xor
push
imul
dec
lods
hlt
inc
int3
sbb
jo
sbb
cmp
or
mov
mov
mov
inc
in
push
xchg
xchg
add
out
and
add
adc
push
movs
mov
inc
sub
inc
ins
xchg
or
gs
in
in
or
jmp
inc
inc
push
push
sub
and
lahf
inc
mov
lods
shr
or
jo
and
dec
or
cld
or
call
fcmovnu
loopne
and
aam
pushf
inc
and
push
mov
mov
idiv
and
ror
xchg
test
out
sbb
push
mov
adc
(bad)
pusha
fdiv
test
fwait
jne
and
mov
lahf
xchg
mov
jo
or
add
or
mov
mov
stos
ret
add
or
push
rol
hlt
mov
xchg
scas
or
imul
add
in
dec
call
out
in
push
jecxz
jbe
xchg
push
sbb
ror
and
add
dec
fadd
and
inc
sub
(bad)
mov
imul
sub
pop
nop
js
xchg
add
xchg
cmc
push
inc
jl
xchg
xor
sbb
sbb
mov
mov
retf
mov
and
cld
movs
mov
lock
out
adc
pusha
xchg
ja
(bad)
cmc
pop
adc
ret
mov
push
inc
sahf
mov
mov
add
loope
mov
and
(bad)
test
ins
mov
inc
or
xor
arpl
retf
sbb
fsubr
jnp
pusha
pop
fild
rcr
add
dec
and
pop
and
inc
call
jecxz
xor
sbb
repnz
jl
adc
pmulhuw
inc
pusha
mov
pop
cdq
dec
dec
jbe
push
int
push
sub
add
or
jp
les
cs
ret
or
fadd
rol
lock
ja
icebp
jnp
pop
or
inc
xor
inc
cmp
add
cmp
je
push
inc
ret
sahf
call
pop
ja
dec
mov
sbb
sbb
mov
pusha
mov
into
inc
sbb
icebp
xchg
fisttp
shl
pop
or
cld
adc
push
or
cmc
ss
ret
or
inc
adc
sbb
mov
test
lea
imul
sbb
ds
rol
xor
pop
add
pop
add
nop
inc
jbe
aas
push
shl
dec
mov
pop
bound
inc
aaa
adc
or
add
xchg
xor
daa
push
inc
cld
sub
popa
jmp
push
fidivr
dec
dec
dec
call
push
xor
cmp
adc
mov
arpl
inc
add
pop
jb
mov
lods
dec
or
test
inc
pop
jo
(bad)
cmp
daa
aam
and
shl
int3
mov
jmp
add
mov
repnz
sar
or
add
(bad)
xchg
dec
or
push
aaa
push
jns
pushf
adc
jge
mov
adc
and
and
jp
enter
add
pop
lock
cwde
shl
jbe
and
addr16
hlt
push
or
loope
jge
push
shl
adc
jmp
call
nop
sbb
(bad)
std
xchg
aam
enter
pop
cld
cld
xor
rol
test
popa
ss
add
inc
xor
and
sub
lock
lods
or
mov
inc
push
test
push
and
stc
pusha
inc
mov
pop
js
dec
and
xlat
adc
inc
sbb
or
sbb
sbb
stos
rcr
jmp
push
adc
int3
xchg
aas
shl
fsub
vmread
in
test
adc
nop
push
mov
mov
dec
mov
test
imul
pop
cmp
add
nop
jmp
pop
lock
loopne
popa
sbb
pop
fld
mov
mov
adc
add
or
xor
sbb
int
jmp
pop
cmps
or
lods
or
add
iret
ja
stos
dec
ror
shr
gs
mov
shl
mov
mov
jae
dec
cmp
mov
dec
cmp
or
pop
xchg
xor
movs
mov
inc
xchg
ins
cmp
xchg
dec
or
xchg
adc
mov
clc
and
inc
call
mov
das
inc
iret
outs
ror
inc
sbb
ja
repnz
dec
and
xchg
adc
push
inc
pop
sub
xchg
ret
push
loopne
ja
push
xor
mov
sub
push
mov
dec
xchg
pop
or
and
js
and
jl
pop
mov
loop
je
or
or
inc
(bad)
mov
rol
jp
jge
mov
ins
push
cmp
je
cs
daa
cmp
retf
adc
movs
mov
(bad)
popa
sub
ficom
stos
jecxz
dec
push
push
push
mov
sqrtps
push
xor
test
add
nop
push
push
jbe
push
lods
xor
fmul
jg
and
jbe
retf
imul
movs
les
mov
hlt
cmp
xchg
xor
jmp
(bad)
fld
mov
pop
jae
loop
jmp
test
ror
fcom
je
pop
push
push
sub
loopne
fld
sbb
repnz
lock
lea
out
ds
or
gs
ror
mov
in
jnp
cmp
inc
add
push
and
in
fnstcw
sub
leave
(bad)
pop
loopne
and
push
push
sub
mov
sub
cdq
sbb
js
in
push
add
or
shr
movs
xlat
pop
or
or
test
enter
(bad)
je
mov
outs
mov
ins
and
daa
lahf
loopne
push
mov
fadd
daa
mov
dec
adc
add
inc
fld
mov
mov
shr
(bad)
movs
add
clc
add
cmp
push
dec
xor
(bad)
push
lods
and
fcmovnbe
adc
xor
xchg
pop
add
or
movs
nop
inc
mov
rcl
add
jmp
pop
imul
mov
push
mov
inc
in
iret
(bad)
lea
jl
mov
adc
push
mov
add
fmul
push
push
pop
mov
not
call
cmp
inc
jne
push
nop
add
jecxz
nop
xchg
dec
repnz
arpl
adc
and
jg
inc
bnd
je
sbb
jmp
add
pop
inc
or
push
xlat
out
push
sub
adc
push
and
loopne
sub
or
mov
idiv
(bad)
or
mov
lock
je
call
movs
or
pop
mov
mov
xor
pop
cmp
not
lea
dec
mov
shl
adc
xchg
add
dec
jo
inc
add
nop
push
xlat
sbb
call
outs
cmp
adc
push
jo
and
rcr
(bad)
mov
stc
dec
daa
or
fist
int3
outs
lahf
or
fst
lahf
mov
xchg
mov
xchg
add
add
popa
inc
(bad)
adc
sub
jnp
or
js
mov
xchg
ss
rcr
sub
pop
inc
inc
movups
pop
shr
les
cmp
or
add
mov
cmps
stc
dec
pop
bound
popf
pop
call
and
cmp
add
(bad)
sub
sbb
push
aad
in
push
pusha
or
fdivr
add
add
mov
push
mov
push
inc
pop
mov
pop
mov
or
nop
pop
ss
retf
pop
add
or
idiv
cmp
xchg
fsubr
add
hlt
xchg
sbb
add
je
mov
les
and
sbb
in
lds
in
add
sbb
sbb
and
sbb
popa
inc
dec
or
inc
jne
rcr
push
ins
je
nop
cmp
shl
inc
xor
lea
inc
in
push
inc
push
or
push
test
ficomp
inc
pop
jmp
call
pop
push
nop
je
push
sbb
imul
push
std
cmps
add
(bad)
in
mov
xchg
adc
add
jb
imul
and
jo
xchg
sub
sub
pop
jmp
pop
pop
in
cmc
sub
or
fcomip
push
push
clc
adc
ret
inc
adc
pop
or
das
enter
push
mov
jl
ficom
add
dec
inc
enter
push
inc
shr
pop
pop
push
mov
test
push
les
jle
fisttp
push
jge
out
xchg
add
push
mov
sbb
fdiv
jmp
push
cmp
dec
push
xchg
jg
mov
xchg
xor
sub
inc
pusha
and
outs
and
add
outs
cli
ss
and
push
or
mov
push
out
arpl
test
(bad)
jl
and
jg
inc
dec
jne
mov
nop
test
retf
cmp
mov
mov
ret
mov
test
ror
or
cwde
adc
popa
mov
ret
mov
push
data16
nop
fwait
xor
sbb
adc
mov
pop
fcmovnbe
dec
adc
or
dec
mov
and
test
add
test
add
mov
push
add
in
xchg
adc
inc
fs
and
rcl
or
hlt
jne
les
rol
outs
fwait
ret
cmp
push
pop
add
push
retf
mov
repnz
in
or
add
aas
sub
imul
sub
inc
pop
fld
xor
mov
ds
in
xchg
test
dec
or
sbb
adc
jg
aad
fsub
sbb
inc
and
popa
add
and
push
sbb
cmp
cmps
xor
push
hlt
mov
inc
fistp
sbb
or
hlt
ror
aam
hlt
ror
enter
fucomp
popa
add
jo
push
popf
dec
jecxz
dec
add
mov
dec
inc
sbb
(bad)
sub
push
xchg
pop
scas
cwde
sti
dec
add
clc
cwde
sbb
sbb
movs
ret
outs
stos
push
jne
or
sbb
repz
inc
out
lock
add
arpl
push
imul
(bad)
jmp
call
mov
add
inc
push
add
movlps
add
dec
cmp
(bad)
and
jb
call
bound
mov
add
test
dec
push
enter
jae
rcr
inc
pop
and
arpl
jae
mov
cmps
inc
arpl
leave
add
in
mov
and
or
lahf
mov
lea
inc
xchg
call
inc
pop
fldcw
adc
fistp
daa
fs
xor
loopne
mov
adc
and
int3
mov
mov
movs
inc
pop
pushf
mov
test
ror
shl
fistp
pop
scas
mov
add
sub
mov
dec
add
inc
inc
pop
sbb
xchg
push
and
push
sub
mov
rcl
adc
lahf
sbb
fstp
cmp
and
mov
cmp
pop
addr16
push
test
or
movzx
mov
out
pop
int3
call
sbb
lock
test
xchg
adc
nop
fs
test
inc
mov
inc
test
pop
test
call
icebp
adc
mov
inc
repnz
sbb
sub
ins
aas
imul
outs
repz
xchg
mov
ror
and
mov
add
jbe
pop
xor
in
mov
pop
in
rcl
sub
enter
adc
enter
xchg
or
cmovs
and
adc
adc
cli
inc
or
sahf
test
lock
add
or
adc
dec
xor
cld
inc
mov
daa
ins
fadd
adc
clc
sub
fsub
or
and
sub
ins
fcom
mov
arpl
dec
scas
pop
xchg
inc
cmp
lods
adc
nop
push
int
inc
aam
(bad)
mov
lods
hlt
xchg
loope
jge
retf
and
pop
adc
cmp
add
xchg
in
and
pop
imul
ja
popf
pop
hlt
ja
push
sbb
mov
aam
add
adc
enter
and
bswap
inc
and
cmovne
cmovne
enter
cmovne
dec
dec
jg
nop
mov
and
shr
loopne
sbb
call
jbe
add
pop
xchg
bound
add
cli
lea
push
mov
mov
jl
and
repnz
clc
jmp
add
pusha
mov
mov
enter
sbb
or
mov
pusha
aad
scas
adc
outs
imul
xor
cmp
clc
sar
pop
or
sbb
xor
inc
inc
loopne
cmps
mov
(bad)
aas
shl
loop
mov
call
inc
mov
cmp
leave
sub
jb
push
pushf
ret
mov
pop
call
call
xchg
ins
jb
mov
call
xor
jge
pop
pop
lock
jle
sbb
sar
int3
ror
lea
dec
adc
lock
push
adc
add
jb
jg
loop
cs
adc
shr
sahf
inc
cwde
add
dec
cmp
jo
pop
fadd
inc
xlat
fcom
or
sbb
dec
jnp
leave
or
push
sti
test
xchg
inc
jb
inc
ins
loopne
test
add
mov
(bad)
cs
call
cs
sub
fs
test
pop
arpl
mov
fmul
test
jo
test
je
mov
add
mov
fild
ja
cwde
sub
inc
(bad)
xchg
pop
nop
pushf
and
mov
mov
dec
fld
aas
js
ins
and
or
or
xor
aas
outs
js
outs
adc
jno
pop
inc
jmp
xchg
inc
jne
jb
lock
lock
ins
add
test
ja
cmp
cdq
and
add
daa
movs
push
fild
jmp
add
pop
add
push
inc
add
popa
ret
aas
ja
mov
cmps
sbb
das
inc
mov
inc
and
das
ins
loopne
push
sahf
jb
mov
das
mov
nop
adc
icebp
or
mov
jmp
jae
popf
add
sub
ror
add
pop
sar
loope
cmp
inc
addr16
or
lods
sbb
adc
sbb
push
enter
aad
gs
fmul
imul
adc
in
shr
sbb
in
inc
ds
adc
inc
sub
repnz
jnp
into
mov
mov
repnz
pop
add
in
in
jnp
mov
pop
in
mov
jl
or
and
ds
adc
pop
das
loopne
bnd
jge
xlat
xlat
nop
test
jge
daa
jle
repnz
test
sti
xor
rcl
aaa
dec
dec
sbb
jle
jle
pushf
out
add
push
outs
and
pusha
cmp
or
(bad)
test
cmp
jae
pushf
lahf
pop
mov
mov
mov
and
in
mov
xchg
sbb
sub
nop
mov
dec
push
enter
pushf
nop
add
pushf
mov
daa
cmp
mov
fst
cmp
xchg
sub
xchg
inc
pop
mov
sub
cdq
xchg
pop
pop
or
xchg
lods
xor
dec
sbb
push
aad
xor
xor
jns
push
xchg
mov
repnz
xchg
mov
mov
jb
push
add
scas
call
xor
jns
and
xor
mov
push
and
stos
(bad)
mov
movq
push
repnz
lods
and
or
push
xor
or
stos
cmp
pop
xlat
or
xchg
lods
mov
ss
scas
or
lock
pop
ds
lods
in
and
cdq
jb
fwait
jne
xchg
(bad)
fcom
lock
in
stc
inc
in
cmp
in
in
in
nop
inc
enter
xchg
int
call
jl
or
or
inc
cmp
(bad)
mov
iret
dec
nop
cmp
xchg
xchg
push
and
gs
cmp
xor
repnz
test
sub
sub
je
mov
repz
push
cdq
and
sub
leave
mov
ds
call
inc
call
je
les
pusha
das
mov
inc
push
or
push
test
jb
xor
mov
cmps
nop
sbb
push
leave
mov
mov
mov
push
adc
inc
xor
and
mov
adc
pop
aaa
pcmpgtw
enter
xchg
push
lods
cmps
test
ficom
adc
inc
lock
dec
cmps
adc
inc
push
test
cmovb
popf
jg
jb
pop
jns
sub
xor
movs
xchg
pop
mov
pop
xor
nop
mov
add
rcl
pop
test
aam
mov
jmp
(bad)
cwde
pop
out
fs
das
(bad)
in
mov
shl
sub
test
lds
scas
and
sub
sub
dec
loopne
ret
cli
add
cmp
xor
aam
push
repnz
add
shl
retf
inc
pop
sub
add
fadd
xlat
ss
add
or
mov
jp
pop
movs
cmc
inc
push
inc
aam
xchg
push
icebp
push
xchg
fimul
and
fdiv
push
add
test
movs
jl
cmp
add
(bad)
or
cmp
mov
add
add
mov
stos
es
or
sbb
and
in
and
pop
mov
pop
and
and
mov
xchg
(bad)
nop
mov
push
aas
mov
inc
dec
and
in
push
xchg
mov
in
jbe
imul
pop
add
pop
fcomip
call
fisubr
pop
push
adc
pop
loop
mov
(bad)
addr16
into
pushf
dec
cmc
sbb
sub
jle
in
xor
mov
adc
rcl
xchg
test
add
movs
nop
fwait
daa
daa
clc
mov
inc
call
pop
sbb
sbb
xlat
xchg
call
xchg
inc
xchg
mov
cmp
xchg
mov
cmps
xor
pushf
sti
cmps
aam
cdq
xor
xor
dec
pop
cmp
xchg
dec
xchg
fs
call
iret
int3
ja
add
add
imul
jno
push
sbb
cmps
and
mov
dec
add
iret
adc
lea
enter
inc
and
and
mov
xor
pop
and
cs
xchg
aaa
repz
sbb
hlt
out
popa
dec
hlt
sbb
nop
fisub
pop
jb
inc
int3
mov
and
cmp
jmp
push
jb
add
xor
inc
and
jns
adc
aam
xchg
xor
jmp
cmp
pop
and
push
aas
sbb
sbb
cmc
gs
mov
mov
sbb
cmp
(bad)
dec
jb
jnp
xlat
inc
jecxz
jmp
and
scas
popa
mov
dec
repz
push
(bad)
fisubr
mov
test
cli
and
xor
jne
mov
out
aas
not
or
fisttp
cmp
pop
push
scas
(bad)
pop
inc
retf
and
ja
jne
test
push
push
or
pop
push
test
mul
test
ja
cmp
outs
jl
clc
adc
cld
or
mov
or
inc
dec
movs
pop
scas
dec
pop
inc
bound
jne
pushf
mov
xlat
inc
pop
das
pushf
int3
sbb
xor
test
push
addr16
and
dec
fstp
test
sub
adc
xchg
add
das
stos
push
pop
js
fs
das
in
add
mov
iret
loopne
jmp
adc
loope
mov
mov
and
fmul
sub
loopne
fldenv
or
pusha
sub
inc
inc
xchg
sbb
pop
das
dec
and
enter
mov
inc
shl
movs
xchg
mov
jb
mov
sar
mov
xchg
inc
and
fs
in
das
jns
and
sbb
mov
daa
nop
add
mov
mov
sub
and
adc
test
adc
js
mov
aas
pop
cmp
das
movs
add
mov
sub
xchg
mov
dec
dec
xchg
xchg
mov
loopne
cmp
and
cld
movs
xor
nop
pop
jae
jp
sbb
mov
jb
push
mov
and
test
cmp
add
loop
and
or
or
mov
adc
and
sub
adc
push
bnd
hlt
stos
mov
dec
arpl
scas
addr16
and
lods
mov
cmp
das
cmps
scas
dec
stos
mov
mov
mov
mov
and
leave
and
and
mov
aam
inc
push
mov
jo
and
cmp
enter
mov
inc
mov
pushf
mov
mov
cs
inc
aas
xchg
and
jb
xor
mov
lods
add
les
push
inc
mov
push
nop
scas
xchg
scas
mov
(bad)
jns
xor
shl
in
shr
cmps
shr
scas
shl
hlt
out
and
dec
aaa
sar
shr
mov
(bad)
pushf
leave
and
cld
repnz
adc
cld
in
(bad)
in
push
mov
aam
test
sbb
xchg
pushf
test
js
adc
push
dec
in
push
fdiv
add
and
mov
or
xor
mov
xchg
xchg
je
mov
enter
mov
(bad)
and
mov
enter
nop
(bad)
adc
nop
int
(bad)
je
pop
add
add
or
leave
pop
aas
xchg
mov
add
add
adc
mov
pop
and
and
leave
and
sbb
mov
or
dec
enter
add
sbb
add
adc
or
jb
in
mov
mov
push
push
jns
fcmovb
mov
rcr
sbb
or
and
call
rcl
xor
test
rcl
xchg
dec
and
leave
adc
les
inc
and
shl
cmp
lock
inc
push
add
addr16
outs
sahf
pushf
inc
rcl
les
inc
stos
add
pop
jmp
cwde
or
rcl
pop
add
and
or
aam
xchg
pop
fs
inc
shr
xchg
dec
push
dec
(bad)
mov
inc
mov
(bad)
rcr
(bad)
and
sbb
xlat
nop
repz
add
add
xlat
dec
mov
cmp
jns
xchg
lods
sub
mov
cmps
dec
sub
mov
retf
xchg
pop
xchg
xor
dec
push
adc
add
pop
jns
sbb
adc
test
dec
and
cmp
lock
and
psadbw
(bad)
les
dec
pop
pop
cmp
les
add
dec
inc
mov
mov
dec
jno
int
mov
mov
out
inc
cdq
inc
add
xchg
loope
ss
or
test
icebp
and
and
push
js
call
sub
jns
add
pop
or
fimul
xchg
lods
sbb
out
or
dec
ret
cmp
xchg
dec
out
sub
cs
aam
jbe
and
cmps
jne
and
jbe
pop
pop
dec
fisttp
cmp
gs
push
adc
fist
jg
lea
dec
cmp
jg
push
jl
dec
and
cmp
hlt
jle
push
add
dec
movs
test
push
push
sti
xlat
in
int
dec
mov
or
dec
cmp
adc
hlt
push
sbb
inc
jne
adc
add
mov
push
or
mov
ds
push
fs
sub
shr
add
cmp
rcl
adc
test
mov
inc
jge
mov
mov
mov
jp
ret
sbb
nop
mov
out
jns
inc
jo
rol
inc
add
inc
push
dec
adc
adc
mov
push
lock
nop
push
cmps
mov
add
xchg
fst
mov
lahf
pop
stc
sub
nop
xchg
inc
sub
sahf
pushf
inc
push
shl
nop
loopne
loopne
mov
outs
sub
inc
pop
and
loope
dec
inc
lock
pop
aas
enter
paddq
test
rol
inc
repnz
inc
push
clc
sub
push
jb
jecxz
jecxz
xchg
push
repnz
in
aam
pop
cmp
mov
xchg
sbb
or
lock
hlt
push
pop
test
dec
add
xchg
cmp
mov
lock
iret
dec
push
sbb
inc
hlt
add
clc
pop
dec
retf
pusha
(bad)
cld
clc
in
int
call
aam
in
mov
in
mov
and
cld
push
sbb
dec
push
xchg
in
out
repnz
sbb
out
dec
push
dec
mov
cmp
adc
inc
inc
es
add
in
xchg
lock
jo
or
std
invd
or
fs
cmp
sub
(bad)
or
icebp
sub
xor
jno
(bad)
cli
jne
inc
xor
pop
cmp
push
add
shl
rcl
shl
xor
add
pop
sbb
push
cmp
adc
ins
pop
and
xchg
pop
sub
sub
inc
fnstcw
cmp
cmovo
cld
(bad)
in
inc
pop
add
push
movs
lods
aas
pushf
aas
in
test
fisub
jb
jecxz
repz
add
movs
add
cmp
and
xchg
jnp
in
jb
and
in
add
jmp
and
or
into
pop
aas
enter
aas
(bad)
and
in
fisub
jb
pusha
and
cmp
loopne
out
shl
push
pop
aam
jns
test
(bad)
out
xchg
inc
and
pop
in
enter
add
out
jns
push
and
out
adc
dec
push
nop
pushf
sub
out
pop
lock
add
lock
push
adc
inc
and
sub
inc
enter
lods
jae
mov
je
dec
ja
mov
test
and
sub
mov
hlt
mov
sub
mov
adc
hlt
daa
nop
add
or
fwait
daa
ins
hlt
cld
or
mul
adc
pop
cmp
push
in
and
push
mul
and
in
mov
dec
dec
xchg
sbb
mul
cmp
and
out
out
call
add
jns
repnz
clc
(bad)
rol
clc
jb
push
and
jns
dec
stc
and
leave
add
stc
and
loop
or
mov
adc
das
sub
mov
adc
mov
lock
jno
in
(bad)
(bad)
in
test
push
nop
xchg
add
nop
pushf
int3
std
pushf
adc
dec
push
repnz
in
jns
pop
push
inc
adc
nop
and
(bad)
pushf
dec
cs
adc
fisttp
cmp
pop
call
xchg
cmp
loopne
(bad)
fsub
add
adc
mov
cmp
scas
loopne
adc
jb
inc
mov
and
xchg
nop
or
sub
dec
add
add
push
repnz
push
add
in
nop
mov
pop
fadd
out
or
or
or
aas
cmps
enter
lock
jb
lods
and
xchg
sub
inc
add
das
sbb
pop
shl
mov
nop
pop
leave
xor
xor
jl
push
leave
inc
aaa
add
mov
sbb
xchg
nop
xchg
cmp
or
xchg
movs
dec
cmps
mov
push
sub
or
add
jge
repnz
jl
add
not
or
movs
scas
add
add
fwait
add
rcl
mov
mov
pop
adc
push
xchg
mul
and
inc
push
pop
aas
and
je
pop
add
dec
push
inc
hlt
or
xchg
ins
mov
stc
test
pop
pop
inc
pop
pop
inc
in
scas
in
div
cmp
je
add
jl
mov
inc
sub
or
fld
adc
jo
pop
sbb
lods
rcr
loop
inc
pop
or
cmp
clc
sub
repz
loope
fadd
sbb
ins
fmul
or
into
mov
dec
xor
push
pushf
cmps
adc
seta
adc
pop
mov
xchg
xchg
adc
outs
adc
je
and
pushf
mov
je
cmp
repnz
adc
ins
lods
ret
inc
in
sar
out
mov
lahf
or
mov
mov
mov
jno
movs
jge
scas
mov
jno
or
in
or
(bad)
movs
xchg
jo
inc
lea
daa
pop
or
sbb
outs
or
enter
mov
not
stc
mov
jmp
xor
fdiv
xor
and
push
jb
jb
xor
jb
jb
xor
in
jmp
cmp
jno
jbe
(bad)
or
add
or
add
mov
sbb
out
mov
mov
je
adc
inc
test
(bad)
cld
mov
movs
pop
and
inc
pop
or
lea
mov
inc
and
jns
add
rcl
out
or
jnp
cmp
dec
adc
inc
enter
push
add
stos
mov
push
add
or
nop
cmp
add
sub
or
cld
adc
fdivr
adc
push
cmps
aas
mov
pop
add
repnz
adc
and
es
jnp
or
xchg
cld
lahf
adc
jl
repnz
enter
inc
sub
push
loopne
das
adc
stos
mov
inc
rcr
add
inc
mov
add
enter
xor
mov
or
pop
or
and
add
imul
adc
nop
add
aaa
in
pusha
xor
or
and
(bad)
lahf
pop
repnz
adc
sbb
inc
push
pop
pushf
sbb
mov
jl
pop
add
arpl
or
inc
ss
dec
int3
sbb
sbb
mov
and
adc
mov
push
bound
aas
pop
pop
sbb
call
and
or
mov
sti
hlt
dec
xchg
sbb
enter
prefetcht1
dec
dec
xchg
cmp
or
fimul
int3
add
mov
dec
xchg
fcomp
jmp
mov
jo
mov
and
dec
fdiv
mov
imul
xchg
jecxz
inc
or
inc
cmps
fild
je
push
mov
inc
xor
sub
adc
jl
or
and
dec
xor
xor
daa
sub
sbb
iret
inc
repnz
in
sbb
daa
cmp
push
push
loop
pop
fild
pusha
std
fcomp
outs
add
clc
inc
pop
xor
sub
xor
test
adc
sub
inc
add
jg
mov
hlt
add
clc
hlt
cwde
repnz
inc
lds
inc
ret
ins
adc
xchg
sub
sub
loop
pop
push
inc
dec
push
cmps
inc
(bad)
js
push
loopne
and
adc
rcr
mov
(bad)
sti
inc
data16
mov
add
je
jo
stos
ret
(bad)
sbb
pop
leave
movs
mov
scas
mov
adc
cmp
push
call
inc
icebp
lods
nop
je
nop
inc
add
mov
aaa
sub
sub
cmp
aaa
mov
mov
push
repnz
mov
adc
xor
mov
ds
fisub
inc
jmp
retf
add
loope
lahf
popa
dec
push
das
pop
adc
sbb
nop
inc
adc
cmp
or
test
inc
mov
dec
ds
push
pop
pop
and
scas
sbb
nop
and
inc
sbb
and
aas
es
and
sub
and
adc
test
and
jo
pop
aas
cmp
pop
sbb
icebp
das
stc
add
cmp
pop
or
and
or
inc
dec
mov
push
sbb
je
inc
sub
inc
mov
add
sub
xchg
push
and
and
add
sub
pop
in
sub
inc
dec
aad
mov
push
jns
jb
sub
sbb
jecxz
fsub
jmp
and
add
and
cmp
xor
mov
add
pushf
ret
sub
and
sub
in
(bad)
inc
mov
inc
sub
out
dec
add
ret
inc
leave
or
ins
jb
in
cmp
cmp
sub
jns
xor
pop
pop
aam
sub
leave
mov
lods
das
retf
sbb
add
leave
and
sub
jmp
clc
inc
test
jge
les
sub
sbb
xor
call
add
mov
inc
neg
cwde
pop
inc
jmp
iret
xchg
push
enter
jmp
lods
fcom
push
push
frstor
ret
add
push
push
shl
lods
cmp
into
push
jecxz
sub
push
mov
cmp
dec
cmps
dec
cli
ins
sub
push
fild
adc
cmp
or
ret
enter
cmps
in
jb
xor
xor
and
retf
xor
(bad)
pop
push
xchg
iret
pop
inc
daa
dec
cmp
mov
mov
loopne
(bad)
cmp
sub
ins
sub
in
nop
inc
cmp
push
lods
inc
inc
cmp
leave
(bad)
adc
mov
push
pop
js
mov
rol
add
or
enter
aam
inc
call
inc
push
adc
mov
test
sub
adc
sub
scas
or
pop
cmp
mov
in
pop
out
sub
xchg
aas
push
ror
or
add
adc
mov
clc
jp
mov
jmp
call
cmp
lea
movs
imul
dec
jbe
call
jne
xchg
xchg
das
scas
fsub
inc
adc
(bad)
jge
pop
repz
pop
(bad)
cmp
add
or
mov
fadd
jbe
jbe
icebp
mov
pslld
sub
pop
jb
nop
data16
push
sbb
sbb
add
clc
mov
push
sbb
cmps
jae
inc
lahf
inc
push
xchg
mov
and
add
fild
adc
inc
push
push
jl
inc
push
mov
inc
jb
pushf
sub
or
out
(bad)
adc
inc
push
inc
mov
cmp
add
mov
inc
test
das
fld
mov
mov
sbb
jmp
das
push
rcl
test
cmp
xchg
inc
push
movs
nop
adc
or
add
in
mov
xor
jl
ror
sub
xchg
inc
lds
jae
xor
nop
cmp
(bad)
xchg
mov
pop
adc
or
repnz
push
inc
test
inc
enter
add
inc
dec
mov
lods
inc
sbb
bound
xor
repnz
sub
add
daa
xchg
pop
mov
inc
nop
sbb
add
repz
mov
push
push
test
dec
mov
pop
dec
out
imul
mov
repnz
mov
pop
inc
fbstp
adc
dec
addr16
adc
add
inc
aam
daa
cmp
add
test
add
push
cmp
sbb
in
lds
xchg
ret
outs
cvttps2pi
fmul
xchg
ss
ret
xor
fsubr
jmp
call
or
xor
(bad)
xor
dec
sub
in
lock
adc
call
dec
push
cmp
pop
push
dec
mov
pushf
or
in
sub
sbb
aaa
xor
shl
mov
xor
inc
push
(bad)
xchg
push
mov
xchg
leave
fsubr
add
ret
repnz
mov
and
lock
imul
cdq
inc
aas
and
and
outs
popa
add
sub
add
daa
out
sub
cwde
xor
mov
sub
adc
adc
pop
stos
mov
cmp
loopne
in
mov
in
jne
push
cmp
mov
cs
adc
cmp
sbb
pop
fdiv
mov
call
cwde
and
mov
stc
xchg
mov
mov
or
mov
aaa
inc
dec
adc
daa
dec
pop
jb
and
add
adc
mov
pushf
dec
dec
leave
mov
mov
cmp
nop
cmp
and
jl
add
(bad)
stos
call
ret
mov
adc
mov
cmp
cmp
mov
xchg
scas
inc
pop
rcr
ret
scas
ins
add
loopne
add
pop
pop
pusha
pop
movd
out
mov
mov
test
das
mov
inc
ss
int
mov
inc
ins
inc
in
stc
xchg
ficomp
inc
pop
jge
push
repnz
leave
pop
inc
pop
jge
je
inc
dec
ss
jl
dec
repnz
or
test
loope
xchg
push
outs
pop
sub
mov
pop
add
xchg
into
call
cmovne
xchg
pusha
xor
nop
adc
inc
xchg
and
xor
fmul
xchg
mov
jne
xchg
in
inc
sub
into
mov
lock
xlat
sbb
lock
jnp
test
cmp
inc
jg
cs
xchg
daa
scas
cmp
mov
sub
pop
cmp
jg
ds
add
or
sti
add
xchg
ret
mov
arpl
push
jo
aaa
add
in
xchg
add
mov
mov
push
popf
sbb
test
cld
push
xor
ds
pop
ss
inc
popa
pop
mov
cmp
addr16
inc
mov
aaa
jg
push
pop
dec
sub
sbb
and
loop
xor
xchg
fwait
and
out
sbb
xor
dec
sbb
pop
mov
add
pop
add
or
xor
add
add
mov
inc
dec
pusha
inc
rol
paddb
or
aas
xor
inc
add
push
xor
pop
int3
sub
lea
mov
or
cmp
bound
pop
out
add
push
xor
and
xchg
lahf
shr
out
inc
xor
inc
jno
xlat
push
js
push
mov
mov
leave
push
jmp
add
push
imul
jns
jns
pop
cmp
push
fs
push
xor
inc
dec
inc
and
mov
cmp
fs
cmp
add
cbw
fmul
add
mov
and
pop
cmp
sti
fs
add
shl
hlt
and
enter
js
inc
mov
es
mov
addr16
dec
sbb
dec
(bad)
add
loopne
inc
jmp
jb
imul
sub
inc
mov
inc
and
leave
inc
andnps
sub
inc
add
xchg
cmp
pusha
inc
xor
lock
lods
repnz
addr16
mov
inc
jb
push
add
push
scas
aam
inc
push
imul
dec
mov
inc
push
xchg
xchg
daa
daa
loopne
imul
xchg
xchg
xchg
outs
mov
daa
and
psrlq
ins
arpl
ret
outs
enter
inc
jp
add
leave
leave
leave
sub
aas
outs
pop
iret
ins
jo
push
dec
pop
test
mov
mov
repz
add
push
inc
mov
or
loopne
add
fwait
sbb
dec
add
add
xor
adc
xchg
mov
jno
add
sub
(bad)
movs
loop
add
dec
cmp
lock
mov
pushf
jecxz
ret
mov
add
mov
add
cdq
fsubr
add
outs
ficom
bound
ja
add
mov
cmp
add
sbb
or
xchg
push
adc
push
xchg
bt
add
xchg
mov
adc
pop
sub
and
add
sbb
dec
pop
sub
iret
add
add
(bad)
dec
out
add
nop
cmp
das
jl
cmp
or
add
mov
cmp
pop
add
test
push
inc
ret
sub
out
inc
push
mov
push
push
es
pop
nop
stos
xchg
out
jno
inc
push
xchg
mov
cmp
push
sbb
cmps
out
dec
push
or
and
add
in
out
and
leave
or
mov
cmp
mov
and
dec
mov
adc
sub
and
push
call
and
cdq
(bad)
sbb
call
or
push
pop
call
fcmovbe
adc
add
inc
push
adc
add
stos
add
hlt
xchg
and
add
pop
sub
jmp
bound
jmp
cmp
push
jmp
lea
jb
rcl
lock
cmp
push
loopne
and
jns
pop
jle
push
and
sbb
jb
ror
fimul
sbb
mov
add
inc
add
nop
inc
leave
sbb
dec
loopne
pusha
(bad)
xchg
scas
nop
inc
xor
pusha
jb
push
movs
push
pop
push
and
movs
sbb
mov
ds
mov
es
pop
sub
add
movs
movs
sbb
rcr
fild
adc
inc
scas
mov
inc
je
aaa
das
inc
or
ja
push
addr16
out
cmp
repz
jo
add
in
repnz
add
outs
je
je
push
mov
and
mov
dec
dec
leave
js
int3
je
sbb
dec
adc
mov
add
jne
xchg
out
add
add
repz
push
movs
pop
add
xchg
mov
push
jg
mov
hlt
in
out
push
sub
jns
pop
cli
push
inc
in
push
pop
jb
jb
push
leave
sub
pop
jb
enter
jb
xchg
inc
xchg
dec
dec
outs
xchg
ja
pmuludq
js
jns
stc
push
push
js
js
js
jns
jb
jb
aas
jnp
sti
cmp
sbb
jp
loope
jnp
pushf
pushf
mov
outs
mov
sahf
cmp
push
jge
daa
daa
and
xchg
mov
loop
jle
enter
pushf
(bad)
std
and
leave
leave
leave
pop
mov
das
das
jg
pop
add
xchg
add
and
sub
and
fisubr
jns
add
mov
dec
in
jno
or
cwde
add
in
xchg
pushf
nop
push
add
inc
in
and
dec
push
js
in
in
xchg
push
mov
pushf
add
mov
adc
in
ins
push
test
mov
outs
ss
add
jae
ja
dec
pop
stos
adc
inc
mov
jb
in
jmp
out
rcr
push
pop
in
loop
push
xchg
and
das
add
fwait
dec
stos
sub
fwait
nop
inc
repnz
add
loopne
cs
jae
stos
mov
mov
repnz
add
imul
inc
jb
or
jo
leave
sub
sub
aam
ins
cdq
pop
xchg
call
mov
test
icebp
jb
in
add
inc
icebp
sbb
loopne
xchg
mov
xchg
fcom
icebp
mov
lea
mov
jb
mov
cmp
dec
push
imul
fdiv
and
test
icebp
lods
push
mov
repnz
jb
pop
leave
inc
repnz
dec
repnz
cmp
inc
jge
inc
inc
xchg
push
adc
test
nop
bnd
inc
dec
push
test
movs
inc
or
sbb
in
repz
xchg
jl
fldcw
repz
and
pop
movs
test
xchg
cmp
cmp
arpl
fdiv
test
and
shr
js
inc
adc
addr16
pop
jmp
movs
test
xchg
add
jbe
cdq
or
inc
fadd
add
cmp
push
and
je
cmp
mov
inc
adc
pop
stos
ds
inc
jb
inc
push
ja
xor
in
push
xor
inc
ja
xchg
mov
popa
mov
add
mov
jo
add
dec
mov
cmp
pushf
test
int3
div
or
(bad)
or
ficom
cld
inc
push
cld
jg
nop
pushf
mov
ins
test
cmp
xor
or
sub
adc
cmp
ins
add
jno
inc
xor
pop
mov
add
test
sbb
dec
enter
and
push
inc
test
cmp
shl
(bad)
jo
in
hlt
push
movs
hlt
test
mov
stos
cmps
cld
sbb
dec
cld
sbb
xchg
jb
cwde
seta
mov
outs
xchg
xchg
mov
mov
daa
daa
daa
xchg
fsub
mov
xchg
xchg
xchg
jo
loop
mov
leave
leave
leave
dec
cwde
int
mov
in
fs
jecxz
lea
jb
push
je
mov
imul
jns
mov
cmp
(bad)
xor
sahf
pushf
fiadd
cmps
ss
push
je
repnz
jb
push
imul
adc
loopne
pop
jmp
les
lahf
repnz
push
push
mov
leave
adc
push
mov
inc
push
sub
push
xor
dec
ins
ins
push
mov
mov
mov
add
push
and
nop
jns
pop
and
push
xor
xchg
push
or
test
rcl
lods
cs
sbb
fwait
gs
in
mov
nop
pop
stc
dec
xchg
and
add
stos
arpl
mov
sub
or
jno
pop
push
pop
mov
nop
pushf
loopne
inc
cli
or
adc
loopne
push
cli
dec
add
push
ins
cdq
test
mov
fs
in
mov
mov
nop
inc
jb
mov
or
enter
(bad)
retf
sub
jns
stos
xor
clc
cli
loopne
aad
leave
or
cmp
sub
mov
fs
adc
shl
mov
or
or
or
loopne
enter
push
push
push
pop
dec
(bad)
mov
adc
pop
or
inc
mov
xchg
push
sub
cwde
popa
lods
and
push
repnz
fs
mov
in
pop
ins
lea
aad
mov
mov
mov
push
movs
mov
add
jmp
(bad)
mov
push
leave
pop
xchg
jle
sahf
jg
dec
inc
mov
inc
add
repz
push
and
jno
cmp
push
pop
movs
addr16
adc
rol
inc
xlat
popa
push
repnz
jno
addr16
or
add
xchg
sbb
lea
push
sbb
enter
mov
pusha
or
mov
adc
xchg
jmp
les
inc
sbb
push
enter
xor
sub
jno
cmps
xor
addr16
jge
in
push
test
xchg
sbb
outs
sub
mov
data16
mov
retf
xchg
inc
and
movs
inc
and
inc
jl
das
jns
xchg
in
mov
jo
xchg
ins
add
adc
and
inc
or
inc
movs
lock
push
inc
or
nop
xchg
push
cmp
call
loop
mov
pop
cdq
inc
cmps
shl
js
inc
push
push
adc
addr16
fs
pushf
xchg
xchg
xchg
das
fs
in
jmp
xcrypt-cfb
cmps
loope
repz
pop
or
mov
inc
fs
leave
mov
xor
in
scas
clc
inc
pushf
xchg
sbb
jb
in
and
cmp
dec
inc
sahf
pushf
iret
pop
lahf
inc
jbe
dec
dec
dec
fwait
sar
mov
jnp
fadd
xchg
xchg
xchg
xchg
mov
retf
xchg
mov
cmp
adc
mov
sub
mov
adc
xchg
adc
push
inc
add
enter
mov
inc
leave
add
push
inc
fs
inc
xor
mov
stos
pop
inc
ins
mov
test
or
in
stos
aam
stos
ja
stos
mov
in
mov
out
mov
mov
adc
aam
and
das
stos
js
fwait
xchg
pop
inc
add
cmp
pop
enter
mov
test
or
push
sbb
inc
iret
mov
jb
stos
jo
inc
jno
mov
addr16
and
and
in
mov
daa
inc
dec
in
mov
js
nop
ins
fcomp
push
inc
addr16
inc
je
jo
ss
push
dec
mov
cwde
or
cmp
repnz
mov
jns
in
mov
add
stc
sub
or
pop
nop
inc
jb
add
jbe
sahf
ror
dec
sar
jne
test
stos
xchg
cld
test
inc
popf
cmp
imul
add
push
mov
or
pop
or
and
nop
or
test
inc
shr
lods
add
or
sub
and
inc
popf
sbb
popa
and
or
and
mov
scas
cmc
dec
push
inc
sahf
in
mov
jbe
test
cmp
add
and
pop
in
jmp
adc
sbb
call
sysret
rcr
dec
les
popf
pop
mov
mov
les
inc
add
add
add
inc
or
inc
loopne
test
xchg
adc
test
adc
sub
add
lock
dec
adc
sar
je
pop
mov
add
xchg
add
mov
test
ret
xchg
aad
or
movs
sub
mov
stos
push
cmp
into
add
push
call
sub
pop
inc
ffreep
sbb
in
push
sbb
mov
ret
leave
retf
push
cmps
mov
push
test
rcr
mov
xchg
mov
adc
adc
xor
pop
pop
inc
sbb
mov
add
cmps
inc
movs
sbb
sbb
xchg
push
add
in
jge
sbb
adc
shl
or
pop
adc
repnz
pop
xchg
mov
iret
adc
dec
cwde
or
movs
add
xchg
mov
inc
rcl
mov
out
sub
iret
dec
stos
(bad)
inc
leave
leave
leave
enter
jne
in
in
cmc
aas
lods
(bad)
(bad)
repnz
xor
imul
mov
add
sahf
pushf
pushf
mov
adc
dec
xchg
shl
sbb
push
fwait
mul
mov
iret
push
mov
mov
mov
dec
adc
pop
imul
cld
mov
adc
mov
movs
mov
push
test
lea
pop
leave
dec
adc
mov
adc
jns
rcl
inc
adc
add
mov
rcr
fs
inc
in
push
mov
ja
jb
dec
pop
lea
or
adc
lock
dec
nop
adc
push
push
mov
lds
jne
and
lea
adc
dec
stos
push
inc
repnz
adc
or
movs
lea
adc
dec
mov
adc
imul
and
jl
cmps
jo
cmp
inc
add
add
ss
cwde
pop
xchg
popf
add
movs
push
pusha
mov
and
adc
mov
push
jl
cmps
jo
cmp
cwde
xchg
and
mov
mov
in
in
xor
push
cld
mov
push
xchg
push
mov
dec
xor
adc
mov
mov
pop
xor
pop
imul
mov
xor
pop
rol
pop
or
xor
pop
and
in
mov
pop
xor
int3
inc
(bad)
or
imul
movs
pusha
and
xor
xchg
inc
pop
pop
sbb
je
mov
mov
sbb
adc
xchg
xchg
mov
xchg
sbb
xor
aad
mov
or
xor
push
cmp
adc
(bad)
sub
or
hlt
sbb
adc
js
fwait
or
and
mov
mov
push
and
adc
adc
inc
stos
push
ins
mov
sbb
ror
sbb
push
pop
(bad)
push
bnd
outs
pop
scas
nop
xchg
pop
or
push
loop
out
sbb
aas
das
push
push
fld
and
and
cmps
dec
push
inc
ret
sub
mov
out
in
pushf
es
add
aam
lods
in
mov
test
xchg
pop
pusha
movs
mov
mov
das
mov
test
inc
cmp
inc
lods
mov
push
inc
nop
(bad)
stc
dec
(bad)
push
xor
pop
xor
fcomp
movs
out
jne
push
ds
clc
lock
sub
leave
xchg
xlat
das
add
jmp
mov
cmp
jae
pushf
mov
ret
xor
xchg
xchg
xchg
mov
push
mov
daa
daa
cmp
xchg
dec
call
leave
inc
jbe
not
mov
mov
imul
enter
or
in
in
shl
mov
aas
shr
ror
sar
adc
dec
leave
lods
sbb
sbb
test
or
aam
lds
mov
rcl
push
jb
sbb
sbb
dec
push
xchg
pushf
sub
sbb
jns
paddq
ret
mov
pushf
nop
inc
lock
in
lds
outs
push
jb
inc
sbb
inc
adc
adc
push
mov
jb
inc
repnz
sub
stos
pusha
mov
or
les
xchg
lods
mov
inc
push
leave
daa
sbb
mov
jb
pop
or
cmp
pop
iret
adc
daa
lods
sbb
pop
das
call
repnz
and
jb
in
inc
ret
push
cwde
add
sub
mov
cdq
xchg
xor
cmp
pop
xor
ss
inc
nop
aaa
or
xchg
adc
pop
inc
ret
dec
dec
test
ret
and
sbb
repnz
dec
and
push
leave
daa
jo
and
imul
dec
ss
and
jo
and
and
and
cwde
ins
push
mov
es
and
inc
pop
inc
ret
adc
lods
inc
pop
nop
inc
xchg
push
jno
and
imul
and
dec
jno
and
cwde
sbb
xor
test
ret
fs
lods
jno
and
imul
in
sbb
lahf
xchg
jns
mov
jnp
mov
mov
fldenv
hlt
xacquire
xor
inc
add
add
push
jl
add
jae
cmp
push
add
scas
pop
jb
xor
scas
mov
jb
inc
repnz
mov
rol
stos
adc
nop
adc
inc
les
inc
add
test
nop
xchg
add
ror
inc
(bad)
inc
and
cmc
stos
inc
jne
adc
push
mov
out
neg
test
push
xchg
es
mov
das
push
push
jb
lea
scas
inc
aam
mov
in
(bad)
push
mov
fsubr
leave
or
add
aam
xor
or
pop
ins
add
pop
push
mov
add
dec
repnz
inc
xor
cmp
inc
movs
scas
test
xchg
push
mov
ror
push
or
das
pop
retf
xchg
movups
data16
xor
clc
and
pop
daa
scas
and
in
cmp
mov
leave
or
cmp
mov
mov
(bad)
ud0
retf
xchg
jp
retf
scas
pusha
retf
mov
retf
loopne
adc
cmovp
ret
push
sahf
in
in
in
adc
inc
jp
mul
in
sti
inc
iret
jg
leave
leave
enter
shr
fs
leave
into
repz
push
xor
in
xchg
or
jb
pop
(bad)
fdivr
sar
stc
shr
mov
jns
shl
and
and
aam
ret
jecxz
jnp
fs
sub
add
adc
inc
aam
push
jb
pop
daa
xchg
daa
in
cmp
or
inc
aam
in
mov
cs
popf
mov
pop
xor
inc
popa
aam
and
cmp
adc
sub
or
test
rcl
xchg
push
push
mov
lds
js
and
das
pop
sbb
fwait
push
stos
push
inc
repnz
fsubr
inc
aam
sub
mov
pop
stos
mov
mov
repnz
push
adc
jno
mov
scas
inc
sub
aam
sub
aam
sub
and
push
inc
jo
dec
cmps
pop
mov
ss
dec
je
inc
push
daa
pop
inc
enter
sub
aam
and
aam
dec
adc
dec
ins
jns
cmp
shr
push
pop
sub
cmp
fs
cmp
in
push
mov
xchg
popf
sbb
sub
sbb
or
cmps
push
adc
cmp
scas
sub
inc
aam
mov
pop
inc
mov
pop
mov
inc
enter
or
cmps
cmp
les
xchg
je
and
sub
das
or
push
or
arpl
repnz
aam
and
inc
jbe
mov
push
push
mov
dec
cmp
scas
mov
call
es
pop
mov
test
shr
add
loope
add
or
and
aad
push
and
add
leave
and
shl
push
cmp
les
mov
iret
es
repnz
or
pop
or
ds
inc
xor
cmp
mov
iret
add
or
xchg
(bad)
add
cmc
xor
mov
push
push
sub
ins
dec
(bad)
scas
sub
(bad)
xor
jae
repnz
nop
fdiv
or
clc
jo
ja
popa
test
dec
cmp
mov
mov
xlat
dec
inc
dec
sub
and
and
xor
adc
xlat
xchg
nop
lahf
mov
nop
call
add
inc
add
fdivr
push
repnz
fdiv
mov
jns
fsub
push
cdq
cs
inc
in
xor
pop
leave
dec
jl
sub
dec
test
xor
push
inc
ror
pop
in
mov
cli
xor
cmp
and
xchg
pop
and
inc
sbb
push
sub
xchg
fld
dec
mov
fnstenv
or
mov
and
add
push
xor
std
fincstp
and
daa
out
mov
push
xor
add
ret
fcmovne
into
(bad)
dec
sahf
test
shl
xor
das
pop
or
nop
mov
push
sub
les
(bad)
inc
cmp
fild
cmc
(bad)
mov
fcomp
inc
mov
push
add
sahf
es
push
sub
xchg
and
loope
jo
in
push
lds
adc
dec
cmp
push
es
call
and
push
push
rol
fnstsw
dec
push
call
jo
je
mov
(bad)
push
repnz
xchg
fidivr
jns
fidiv
sub
fst
test
sub
das
mov
dec
push
leave
pop
(bad)
pop
repnz
dec
add
enter
bound
sbb
fwait
sahf
sub
int
fbstp
sbb
and
ds
jns
push
loopne
push
imul
out
loopne
lods
in
jae
loope
add
mov
lahf
push
loope
xchg
dec
leave
clc
shl
fiadd
jns
pop
jne
icebp
and
mov
xor
jl
ret
loop
push
dec
sub
push
mov
loopne
hlt
mov
add
dec
jecxz
mov
jecxz
adc
lds
enter
mov
xor
pop
pop
lds
adc
add
aaa
add
jne
cmp
sbb
shl
xor
in
cmp
fbld
cwde
das
enter
das
das
pop
fsub
int3
in
in
xchg
pop
and
xchg
xor
nop
in
pop
leave
dec
jbe
sub
dec
push
enter
and
repnz
inc
repnz
and
int3
in
repnz
push
aam
test
add
mov
add
push
stos
push
aaa
push
shr
cmp
or
jp
xor
ins
xlat
pop
lahf
xlat
mov
mov
out
test
adc
out
push
dec
out
repnz
into
add
inc
leave
pop
aaa
push
pusha
aam
inc
ret
sub
pop
les
movs
bound
dec
fs
or
mov
repz
sub
pop
xchg
xchg
call
fdiv
mov
shr
pushf
cs
(bad)
(bad)
jmp
(bad)
fstp
cmp
push
jmp
xor
pop
fnstcw
aaa
and
and
xor
push
nop
mov
out
xchg
push
pushf
cld
jmp
test
lea
inc
sbb
(bad)
gs
ds
push
jl
push
jns
jmp
jmp
jmp
jmp
das
adc
xor
push
nop
xchg
xchg
xchg
jmp
jmp
jmp
leave
push
cmp
mov
jns
fcom
fcomp
ss
leave
add
fdivr
jmp
scas
in
paddq
adc
sbb
cmp
mov
mov
adc
jmp
mov
dec
shl
or
pop
pop
leave
lds
jmp
lock
std
loope
(bad)
neg
and
xchg
push
sbb
add
leave
enter
mov
(bad)
nop
or
adc
call
xor
or
das
pop
ins
sub
push
enter
out
scas
xor
and
daa
sbb
out
retf
push
aad
dec
push
jl
out
scas
loopne
imul
ins
out
xchg
out
pop
aam
sub
inc
lahf
jle
out
pop
lahf
out
and
fiadd
stos
(bad)
fnstenv
xor
lds
push
pop
imul
sbb
sub
cmp
push
scas
push
jns
or
(bad)
lock
xor
push
icebp
scas
retf
retf
jecxz
lock
repnz
icebp
in
inc
leave
jb
fwait
icebp
int
pop
push
jecxz
adc
mov
imul
cmp
inc
dec
pop
cs
dec
add
xor
pushf
(bad)
fisttp
mov
in
repnz
or
xchg
sub
xchg
add
rol
repnz
cmp
push
xor
sub
cmp
xor
pop
neg
(bad)
cmp
out
xchg
call
inc
hlt
xor
sub
inc
aaa
push
hlt
pushf
sbb
stos
in
aaa
or
pop
jge
sub
hlt
xlat
jb
leave
add
lods
clc
mov
xor
cmp
pushf
mov
xchg
aam
mov
pop
push
cmps
jbe
mul
push
repnz
sub
iret
pop
idiv
lock
jl
or
enter
xor
and
addr16
jnp
dec
rol
das
or
mov
clc
push
sbb
ss
dec
mul
add
inc
dec
cmp
pop
repnz
xor
mov
adc
pop
(bad)
idiv
(bad)
ret
cmps
lods
or
xchg
pushf
xchg
cmp
clc
xor
sub
xor
sub
popa
add
or
xchg
pop
mov
test
cmp
jne
clc
push
sbb
adc
push
mov
out
push
push
sbb
clc
mov
and
mov
(bad)
stc
jns
pop
push
mov
mov
stc
pop
cli
dec
cli
lea
sahf
mov
cmp
fld
mov
cmps
or
cwde
cmp
idiv
inc
xchg
outs
and
add
nop
cli
loopne
inc
sbb
sbb
in
bound
add
and
adc
pop
sti
push
inc
pop
push
mov
pop
mov
mov
(bad)
jmp
out
sbb
pushf
push
and
add
sahf
mov
std
mov
cld
addr16
xchg
cmp
cmp
push
add
sbb
ja
inc
sbb
mov
push
cmp
xlat
pushf
std
jg
das
xchg
mov
add
out
cmp
inc
sub
jg
cmp
into
fcomp
pusha
push
(bad)
clc
call
push
or
cvtdq2ps
inc
leave
ud0
(bad)
push
pop
xor
push
and
cmp
add
ins
sub
lock
sbb
add
add
push
and
scas
push
pop
push
gs
aas
xchg
outs
jo
or
cld
ins
cmp
xchg
add
mov
pushf
fld
nop
cmp
dec
push
mov
sbb
xchg
sbb
dec
pop
mov
sub
push
repnz
pop
dec
cmp
xchg
cmp
push
push
inc
dec
xor
pop
push
add
or
(bad)
nop
and
jl
adc
hlt
jmp
lods
sbb
cwde
dec
push
push
imul
iret
cmp
mov
mov
adc
dec
push
add
inc
sahf
mov
add
push
dec
leave
or
imul
rcr
inc
push
sub
add
xor
push
add
dec
mov
cmp
xchg
xchg
jne
jg
lds
leave
pushf
add
push
sub
enter
mov
cmp
push
add
pop
xchg
dec
jae
stos
pop
leave
dec
jae
xor
push
or
pop
jo
push
or
cmps
in
lock
cmps
pop
dec
push
loopne
mov
inc
push
test
push
(bad)
clc
mov
jl
test
push
xchg
mov
outs
inc
popf
ret
mov
pop
mov
sbb
mov
pop
repnz
pop
sbb
push
leave
push
repnz
and
dec
pop
cmp
dec
cld
pop
add
leave
dec
fisubr
pop
push
xor
or
cmps
pop
fstp
adc
pop
pop
or
push
add
cs
mov
in
or
lock
jl
push
add
sbb
daa
ror
xchg
call
loopne
inc
imul
jns
push
mov
das
pop
ins
xchg
and
push
jo
mov
or
das
sbb
out
das
lods
or
mov
fwait
in
int3
or
pop
or
jns
(bad)
push
add
les
push
or
mov
add
mov
test
pop
mov
pop
pop
jae
mov
aam
sub
dec
and
inc
inc
lods
push
pop
mov
lock
push
mov
iret
movups
paddq
das
pop
(bad)
push
in
iret
xchg
push
fs
or
jmp
cmovno
mov
in
scas
in
xchg
fs
or
jns
pcmpgtb
jns
fs
mov
nop
sub
adc
ja
rcr
sbb
cdq
aam
or
and
repnz
cmovs
fbstp
sub
pop
adc
jmp
push
cmp
iret
mov
movntq
out
cmovg
or
dec
adc
shl
add
adc
mov
push
pop
ret
stos
in
in
mov
push
ja
mov
pusha
shl
inc
dec
adc
add
xor
push
adc
jmp
and
push
cmc
fst
jg
adc
out
dec
dec
inc
mov
push
add
sbb
mov
leave
shl
sahf
mov
jns
push
xchg
push
xchg
inc
stos
and
lahf
(bad)
and
pop
mov
cmps
and
adc
and
shl
jne
cmp
or
pusha
ret
sbb
adc
jle
cwde
iret
mov
cmp
jns
dec
cmps
les
cdq
mov
sub
pcmpeqb
add
not
sub
nop
xchg
mov
dec
inc
(bad)
in
cmp
movs
pushf
adc
test
adc
in
lock
dec
sbb
(bad)
add
les
add
sbb
sbb
push
xor
rol
lea
adc
mov
push
push
lods
pop
repz
push
adc
(bad)
pop
mov
and
pop
push
pop
xlat
push
pop
fs
dec
xchg
cld
mov
cs
or
test
pop
lds
cdq
enter
clc
pop
mov
push
mov
pushf
mov
and
fwait
pop
xchg
hlt
xchg
sbb
pushf
sbb
or
sub
pop
dec
sbb
test
push
jb
lods
jmp
sbb
(bad)
jmp
in
sbb
sub
daa
lock
push
dec
sbb
push
push
pop
cmp
cmp
sbb
pop
mov
js
jg
sbb
dec
pop
pop
clc
sbb
sbb
sbb
das
das
popa
sbb
nop
and
mov
repnz
inc
sub
test
addr16
sbb
lock
fwait
push
sub
cdq
inc
xchg
or
xor
pop
daa
push
xor
rcr
ss
sub
push
lds
sahf
mov
pop
sbb
test
sub
add
sbb
leave
xchg
pushf
inc
ret
fadd
popa
pop
pop
pop
push
bound
push
jo
push
add
sub
cmps
mov
call
push
setns
push
push
push
add
sbb
leave
dec
push
(bad)
pop
pop
pop
sbb
daa
in
mov
mov
jnp
popa
xchg
mov
pop
adc
and
lahf
cmps
push
aad
aam
dec
test
mov
and
push
or
pop
mov
jno
and
repnz
jl
mov
aam
pop
and
and
pop
pop
push
cmp
or
sub
and
and
adc
dec
dec
and
ret
mov
in
dec
mov
jns
and
jns
cmp
mov
mov
or
ror
aam
mov
push
rol
push
mov
mov
lahf
addr16
and
pop
inc
and
push
(bad)
xchg
daa
out
push
js
add
and
daa
dec
mov
aam
lods
sbb
ja
add
add
and
sbb
js
hlt
and
xor
xchg
cmp
mov
xchg
push
popf
and
push
xor
mov
fist
rol
popa
es
addr16
enter
lods
lds
test
lahf
pop
mov
stos
push
mov
fsubr
mov
mov
mov
into
das
in
cmp
jns
cs
clc
dec
sbb
dec
inc
scas
cmp
sub
sub
rcr
adc
pop
xchg
jne
mov
mov
in
rcr
clc
dec
inc
adc
jo
sbb
adc
cmp
sub
aaa
adc
sub
sub
jb
enter
sub
pop
enter
dec
pop
fstp
mov
mov
out
sub
mov
mov
dec
xor
sub
pop
pop
fisttp
mov
jno
sbb
adc
popa
std
push
push
js
cmp
in
fidiv
push
loopne
push
add
xchg
xor
sub
and
in
and
jecxz
repnz
jecxz
sub
sub
pop
in
lods
push
in
fsubr
mov
jp
jns
and
call
outs
pop
adc
add
pop
icebp
aam
dec
cmps
loop
nop
sub
xchg
sub
sub
cmps
sub
sub
sub
jmp
clc
jmp
adc
clc
inc
add
cmp
nop
stc
inc
clc
dec
mov
sub
inc
mov
dec
jno
inc
lock
add
pop
or
in
xchg
out
lock
lds
inc
cmp
xor
cmp
data16
dec
outs
das
jl
(bad)
clc
lock
add
dec
xor
and
xchg
inc
lds
cs
mov
popa
nop
push
mov
push
or
sub
xor
dec
add
movs
and
jo
jg
imul
out
scas
(bad)
shl
add
dec
xchg
and
xor
and
in
pop
push
js
cmp
add
clc
jle
mov
xor
cmps
jns
sub
and
xor
leave
add
pop
push
cs
fidiv
add
adc
mov
mov
sub
mov
or
push
shl
jmp
xor
movs
add
enter
push
in
(bad)
in
inc
cmp
aas
xor
das
movs
nop
and
sbb
add
mov
fmul
xchg
push
jo
jl
inc
mov
dec
add
jle
iret
add
fldcw
push
pop
xor
xor
mov
mov
dec
test
loopne
dec
mov
neg
xor
push
sub
test
cmp
add
dec
pop
xor
mov
test
or
mov
inc
mov
and
add
dec
data16
push
or
inc
adc
xchg
int
xor
or
mov
stos
add
stos
mov
fidiv
xor
push
repnz
push
sub
push
loope
sub
jo
add
inc
lock
mov
and
inc
clc
imul
lock
push
push
and
icebp
sub
xlat
inc
aaa
pop
adc
sbb
adc
pushf
adc
enter
adc
movs
aaa
inc
inc
or
sub
add
das
xchg
sbb
in
aaa
fmul
leave
pushf
adc
jo
sbb
sub
ja
popa
adc
popa
sti
rcl
push
movs
cmp
cmp
cmp
cmp
sbb
in
sbb
sbb
sbb
sbb
enter
cmp
push
mov
push
aaa
inc
xor
in
sbb
cmp
sbb
adc
lods
jo
inc
stos
loopne
add
dec
int
pop
inc
mov
sbb
cmp
outs
scas
jge
push
push
push
cmp
dec
push
push
cmp
or
add
and
push
sbb
adc
cmp
cmp
test
mov
cmp
pop
rcl
adc
adc
mov
mov
cmp
cmp
mov
sar
in
movs
and
pop
cmp
add
sub
outs
je
cmp
push
out
push
mov
pop
push
fistp
push
jae
mov
and
ins
mov
or
(bad)
cs
mov
dec
aaa
or
inc
(bad)
dec
mov
push
jbe
and
div
jo
xchg
mov
xchg
jbe
div
and
add
or
jns
test
ins
jbe
push
push
add
or
dec
mov
push
fcomp
adc
gs
out
push
push
or
or
sub
cmps
add
in
or
imul
(bad)
cmp
mov
sbb
and
in
mov
fidiv
ins
ja
pop
adc
mov
dec
adc
in
mov
mov
push
mov
cwde
scas
push
push
xor
cmp
das
add
xchg
push
xor
add
jo
(bad)
pop
or
push
mov
inc
sub
dec
or
sbb
mov
jmp
xchg
or
jae
int
imul
hlt
sbb
ja
add
inc
add
push
iret
mov
imul
inc
cdq
loopne
lahf
imul
mov
and
leave
or
mov
fstp
xchg
je
cdq
xor
nop
jmp
fsub
mov
scas
xchg
ret
inc
add
push
push
push
mov
sub
or
fld
xchg
jo
shl
pushf
or
inc
sbb
cmp
mov
inc
scas
cmp
mov
repnz
jo
mov
push
sub
mov
mov
sar
sub
cwde
sbb
sub
aas
in
lods
int3
xor
or
fnstenv
rol
mov
push
sbb
ror
movs
repz
out
sbb
hlt
cs
imul
stos
inc
je
ins
or
fidiv
push
or
loope
xlat
xor
adc
adc
inc
push
in
adc
push
retf
lods
inc
inc
js
sbb
ins
movs
jb
rcl
push
pop
or
mov
sbb
das
data16
inc
mov
adc
scas
inc
pop
dec
mov
enter
(bad)
scas
loopne
in
push
inc
jbe
das
shr
and
test
jo
push
(bad)
sbb
loope
pop
or
dec
or
xchg
jecxz
jmp
mov
xor
ror
call
leave
push
add
push
pop
cmps
mov
and
xor
sub
cdq
popf
push
or
cli
test
jl
cmc
ret
daa
xchg
test
cld
jl
dec
pop
lods
adc
push
inc
lock
enter
sub
lahf
add
loopne
nop
mov
gs
fsubrp
gs
xor
inc
add
adc
xor
dec
pusha
cmp
pop
mov
inc
jl
mov
imul
jl
push
push
push
push
add
dec
pop
mov
and
sub
push
and
sbb
sahf
add
or
adc
dec
dec
inc
sbb
into
sbb
sub
push
aas
and
and
ins
xor
adc
rcl
jl
movzx
fistp
lea
es
mov
add
mov
enter
jmp
push
dec
push
(bad)
xchg
pop
pushw
adc
mov
or
add
in
or
(bad)
or
sbb
ror
or
rol
xchg
inc
mov
sub
inc
aas
xor
(bad)
int3
inc
aas
adc
add
cmps
jne
aaa
cdq
xor
sub
or
inc
lahf
lds
and
dec
inc
lahf
push
jne
in
inc
aaa
add
push
popa
cmovae
push
add
and
push
pop
daa
nop
add
push
in
inc
inc
fiadd
aas
popa
cmp
mov
aad
aad
cmps
inc
(bad)
inc
add
and
dec
pop
cwde
fdiv
xchg
xor
push
inc
aaa
add
sbb
pop
add
xchg
mov
dec
ins
sbb
and
dec
adc
test
mov
inc
mov
dec
pop
add
cmp
inc
mov
and
(bad)
adc
fisttp
push
nop
inc
xchg
xchg
ss
adc
scas
xlat
enter
inc
inc
pop
ret
pop
in
cld
xlat
add
adc
inc
aaa
mov
inc
shr
jne
enter
push
mov
adc
push
cs
push
and
mov
xchg
add
dec
out
jae
adc
or
pop
daa
push
je
mov
xchg
jge
and
cmps
jne
jmp
out
mov
es
mov
lea
(bad)
retf
push
aas
lods
pop
dec
mov
dec
aaa
outs
stc
sub
or
movs
add
inc
enter
add
jo
pop
in
scas
cmp
es
jmp
test
xor
xchg
nop
cs
inc
popa
jb
mov
daa
add
(bad)
xlat
mov
or
daa
mov
cmp
push
dec
mov
stos
add
in
leave
cmp
enter
sub
cdq
adc
movs
add
sub
mov
and
push
pop
mov
dec
mov
and
sub
in
mov
dec
es
sbb
dec
or
dec
add
bndstx
sub
mov
push
mov
jo
xlat
push
pop
pop
mov
aam
or
stos
mov
das
add
adc
or
dec
cmp
sbb
xchg
sbb
xor
popa
js
adc
sar
xor
push
inc
xchg
cmp
stos
pop
jbe
idiv
and
or
sbb
mov
dec
bsr
push
pop
rcr
sbb
add
and
adc
mov
mov
pop
or
push
mov
test
movs
lds
rcl
mov
cmp
out
adc
xor
mov
sub
push
add
pop
or
call
xchg
ins
jae
je
lods
or
adc
cdq
rcl
js
loope
xor
add
movs
mov
cmp
mov
sub
and
or
test
shr
adc
cmp
pop
mov
push
or
test
adc
mov
das
sbb
das
or
jmp
pop
adc
and
or
or
les
cdq
mov
lods
jne
adc
mov
out
mov
in
cmp
adc
add
and
adc
fadd
js
and
leave
outs
(bad)
cs
or
nop
pop
leave
add
add
test
add
pop
add
push
xchg
mov
push
daa
call
jle
jmp
adc
sub
and
sbb
imul
mov
repz
dec
cmps
xor
push
or
pop
push
test
inc
pop
adc
sbb
aaa
pop
xor
or
xchg
sub
aad
sbb
test
je
mov
mov
inc
pop
rcl
mov
test
add
add
inc
lods
pop
fild
push
das
hlt
sbb
test
add
inc
push
sahf
jle
ror
das
shr
nop
jg
cmp
push
xchg
push
push
add
xchg
sbb
dec
scas
push
dec
out
sbb
jb
jo
(bad)
enter
dec
adc
pop
add
movs
ja
cmps
adc
push
sbb
imul
jns
rcl
push
add
adc
ret
push
adc
cmp
jecxz
mov
dec
mov
push
dec
xchg
xchg
jo
dec
sub
and
enter
jne
mov
cmp
and
push
xchg
xlat
cmc
xchg
outs
outs
or
mov
add
sbb
pop
push
pop
outs
ret
rol
mov
xchg
les
inc
mov
lock
(bad)
sub
mov
mov
sub
mov
mov
loope
jae
lods
or
or
mov
mov
mov
fimul
jne
data16
cmps
push
dec
pushf
fwait
das
push
dec
test
and
sahf
xor
js
push
mov
inc
sar
rcr
fcmovu
mov
test
lahf
mov
fs
mov
cmp
push
dec
mov
pop
adc
inc
lahf
arpl
adc
scas
clc
adc
rol
into
loopne
cmp
dec
pop
ror
inc
fsubp
mov
pop
adc
es
mov
pushf
pushf
mov
xchg
dec
pushf
mov
mov
out
and
xchg
adc
shr
mov
and
xor
inc
xor
add
dec
or
cli
mov
push
inc
test
jmp
pop
ret
pop
xor
and
xchg
adc
sub
je
mov
sub
sar
sahf
cmp
and
lea
add
add
mov
adc
fbld
sub
mov
int
inc
push
lea
fcom
push
rcl
aas
dec
js
and
sbb
mov
and
ins
inc
pop
add
leave
mov
or
add
movs
dec
imul
iret
xor
or
inc
mov
in
in
cmp
sbb
xor
dec
daa
and
cmps
add
je
add
or
mov
arpl
or
or
jne
add
loopne
add
clc
add
pop
jnp
push
lea
rcr
test
mov
push
mov
adc
loopne
or
push
not
xchg
sub
cld
xor
or
fmul
mov
adc
jl
and
in
or
xor
push
or
test
adc
jne
add
push
xor
movups
fbstp
dec
jne
jmp
mov
dec
adc
sbb
imul
jne
add
add
clc
jle
mov
or
jne
inc
pop
lea
add
and
ror
xlat
pop
dec
nop
popa
add
cmc
dec
pop
dec
pop
cmp
jmp
ds
sbb
adc
je
ror
in
jge
cmp
fbld
pushf
and
mov
cmp
push
icebp
fcom
inc
mov
cmp
push
adc
cmps
aaa
(bad)
inc
addr16
clc
pushf
or
push
mov
mov
add
or
loop
mov
pop
mov
mov
xor
mov
sbb
mov
pop
pop
jno
mov
push
or
stos
push
or
(bad)
pop
mov
test
test
dec
sbb
call
mov
dec
push
sbb
jne
inc
outs
mov
lea
mov
scas
movs
and
cmps
sbb
loop
mov
ins
adc
imul
ins
sbb
adc
mov
jmp
mov
mov
mov
push
das
popf
pop
and
jno
mov
pop
stc
pop
pop
pusha
enter
pushf
jo
cmp
lock
cld
(bad)
push
mov
mov
or
stos
mov
out
cmp
push
dec
inc
push
mov
jl
or
dec
sbb
call
or
bndstx
jmp
push
test
cmp
lds
sub
cld
dec
or
shl
and
scas
in
paddd
ja
inc
inc
ret
adc
call
ret
sbb
add
mov
mov
mov
retf
out
cmp
and
test
out
int
pop
adc
sub
or
repz
adc
mov
or
or
pop
and
push
add
jle
mov
push
jbe
lea
push
test
repz
add
fsub
xor
inc
jbe
inc
inc
add
sub
jns
icebp
call
xor
fucom
sbb
cmp
mov
inc
inc
mov
int3
pop
mov
cmp
jne
mov
xor
movs
sub
sbb
pop
xchg
movs
sub
cwde
adc
std
add
and
sub
lds
fmul
pop
cwde
jecxz
sti
mov
cmp
adc
imul
mov
push
cmc
dec
cmp
add
xchg
ucomiss
ret
pop
test
out
and
lds
jns
or
and
add
add
test
test
int3
fmul
call
call
cld
pop
push
rcr
ins
loopne
inc
iret
cmp
push
push
clc
jne
jmp
dec
ja
dec
test
mov
cmp
add
clc
cmp
retf
arpl
push
pop
jne
adc
mov
ror
mov
mov
aaa
cmc
out
test
daa
dec
xchg
dec
lock
dec
cmp
xchg
(bad)
lock
inc
or
and
rcr
add
popa
dec
push
pop
inc
add
cmp
leave
jmp
jl
mov
outs
pop
mov
hlt
adc
(bad)
in
loopne
inc
mov
or
jg
xor
lods
shl
cld
ror
add
adc
jge
cmps
mov
pop
or
xchg
cmps
pusha
aam
mov
cld
in
sub
sub
lds
adc
xchg
pusha
lock
mov
xor
inc
and
dec
mov
xchg
cwde
icebp
dec
inc
dec
pushf
mov
push
test
push
dec
fsubrp
xchg
shl
arpl
add
add
xchg
sbb
cmps
cwde
jnp
(bad)
out
or
jp
mov
xchg
xchg
mov
add
or
push
out
xor
movs
out
add
push
ret
add
push
gs
fistp
ins
scas
stos
stc
imul
loopne
test
lock
xchg
add
and
or
or
cmp
dec
and
ret
add
adc
dec
fadd
sbb
add
and
jns
mov
push
add
lods
cmp
add
push
data16
adc
lea
sbb
push
(bad)
mov
sbb
and
add
xchg
lock
dec
cmp
popa
xchg
mov
sub
test
mov
xor
push
ins
or
mov
mov
shl
mov
cmp
xchg
ins
mov
mov
xchg
and
jmp
sbb
mov
push
fwait
adc
shr
fisub
sub
mov
cmp
je
xlat
mov
popa
sub
pop
(bad)
dec
and
and
ja
and
xchg
or
jmp
pop
dec
or
jb
mov
in
sti
std
push
add
add
adc
inc
mov
fcom
out
pop
(bad)
daa
pop
call
mov
aaa
iret
xchg
test
push
push
adc
cli
mov
loopne
or
cmp
ja
jb
add
add
call
cmp
in
(bad)
out
mov
mov
push
add
or
inc
inc
mov
fs
add
in
sbb
mov
adc
or
popa
popa
pop
adc
sub
aaa
dec
(bad)
(bad)
mov
mov
xchg
jmp
jno
push
mov
push
inc
xor
cdq
add
push
retf
pop
pop
gs
js
loopne
add
pavgw
adc
sub
jmp
or
inc
test
retf
dec
aaa
imul
push
xchg
je
sbb
ret
push
bound
aaa
test
adc
cmps
xor
jo
jp
and
sbb
pop
(bad)
jg
(bad)
repz
mov
add
aaa
xchg
cmp
ja
bt
jae
pop
mov
mov
cmps
sub
mov
push
and
jne
ret
sbb
pop
movs
pop
or
and
xor
ret
dec
cmp
fild
inc
xchg
push
sub
pop
add
ror
add
adc
adc
enter
xor
sbb
pop
jle
adc
or
fwait
or
add
ret
call
xlat
or
push
pop
into
test
cli
cmp
lods
cmp
push
enter
bound
xchg
push
push
pop
fs
pop
and
popa
sbb
or
bound
xlat
mul
imul
xor
mov
imul
cmc
add
pop
cmp
adc
repz
or
jle
jne
fst
inc
jge
add
lds
clc
js
add
retf
addr16
inc
xor
jmp
(bad)
fmul
dec
(bad)
mov
push
mov
fdiv
and
jb
add
cmp
js
and
xchg
dec
nop
xor
push
cmp
pushf
mov
imul
adc
xchg
fnsave
or
xor
push
xor
inc
popf
shr
in
fmul
pop
mov
clc
es
mov
mov
nop
mov
les
in
clc
(bad)
sub
daa
mov
cwde
out
std
inc
mov
leave
jmp
inc
cmc
fsub
shl
test
push
daa
add
sub
add
fs
adc
sbb
sbb
push
lock
dec
adc
push
jg
mov
adc
mov
(bad)
in
or
mov
rcl
pusha
cmc
cmp
and
icebp
push
mov
add
mov
sub
lds
sub
aas
push
jmp
adc
shr
adc
adc
in
sbb
cmp
cdq
push
repnz
vlddqu
out
sbb
cmp
xorps
cmp
xchg
mov
jae
ins
pusha
pusha
gs
pop
add
or
neg
sub
adc
adc
leave
je
adc
mov
and
pop
lock
push
push
xchg
leave
and
pop
mov
inc
aas
in
mov
xchg
sbb
jmp
adc
retf
je
mov
xchg
pop
jmp
imul
xchg
xchg
in
psrad
dec
and
sbb
pop
in
cmp
pop
cmp
jns
enter
ins
rcl
cmp
sub
sbb
daa
inc
add
ins
dec
aas
std
mov
inc
fsubr
hlt
jmp
cmp
pop
mov
ror
outs
pop
cmp
rcr
or
and
cmc
test
mov
enter
stc
or
jb
sbb
daa
sub
sbb
jo
in
bnd
add
jb
sub
std
in
js
xor
xor
test
dec
mov
mov
jg
adc
xlat
test
adc
add
or
pop
ror
xor
outs
pusha
jmp
mov
fstp
clc
add
stos
and
cmc
jo
jmp
mov
mov
outs
fistp
nop
xor
cmp
or
aaa
bound
dec
jecxz
sbb
xchg
leave
scas
pop
aam
push
dec
jb
adc
push
mov
stc
or
jge
cmp
adc
xor
scas
aad
bound
jo
mov
xchg
push
(bad)
pop
mov
mov
popa
movs
pusha
lahf
push
add
jl
and
leave
cmp
inc
mov
(bad)
ret
or
and
adc
push
jge
push
add
add
xor
lds
loopne
jno
popf
jns
adc
popf
lods
add
mov
jle
sbb
ins
adc
das
stos
jno
sbb
enter
sbb
sbb
dec
and
not
jge
add
pmulhuw
pop
jle
jo
leave
enter
in
ret
and
popf
mul
in
pop
das
sub
inc
enter
jae
jae
sar
and
dec
scas
jle
bound
dec
or
lods
loopne
jg
je
enter
pop
test
aam
or
xor
or
das
xchg
je
enter
scas
je
je
jl
and
fs
mov
and
inc
adc
pop
jne
pusha
sahf
nop
inc
or
jbe
pushf
mov
jbe
sbb
adc
inc
mov
sbb
repnz
and
pushf
sbb
adc
and
and
pop
lea
daa
xchg
pop
ja
xor
das
enter
jb
fisttp
in
ja
leave
cmp
mov
add
add
inc
mov
ror
jae
xlat
xor
test
daa
sbb
pop
iret
les
hlt
fidivr
mov
scas
sbb
inc
dec
hlt
js
jns
ret
outs
pop
jmp
cmp
rol
sbb
jns
jo
adc
pushf
cmp
scas
pop
add
jle
test
add
fild
leave
ret
xor
adc
scas
fsub
(bad)
call
mov
pop
or
xor
pop
inc
push
push
fsubr
lods
push
mov
mov
and
pop
push
or
add
or
xchg
or
push
mov
mov
adc
scas
jno
jne
or
pop
adc
in
or
sub
inc
xchg
rcr
jg
cmp
mov
mov
mov
or
and
fsub
pushf
ss
dec
clc
xor
ret
cmps
inc
sub
mov
mov
xor
or
xchg
inc
jb
cmp
jnp
mov
adc
jnp
or
in
sar
jl
les
add
push
dec
test
or
mov
add
stos
inc
rol
mov
ror
lods
enter
ret
inc
mov
lahf
or
adc
arpl
(bad)
into
dec
push
mov
ror
adc
sub
push
cmc
mov
mov
call
push
jae
dec
(bad)
mov
add
call
jmp
dec
(bad)
sbb
inc
inc
sub
fmul
jns
(bad)
adc
sbb
cli
inc
mov
sti
adc
jb
es
inc
pop
(bad)
fcom
into
adc
pop
inc
adc
add
lods
mov
add
pop
xor
in
pop
add
in
out
xchg
cmc
adc
add
nop
in
push
jp
mov
and
js
xor
push
mov
sbb
leave
cmp
(bad)
cmp
sbb
sub
fld
jg
adc
aaa
or
push
or
mov
je
mov
push
ror
leave
add
and
lock
inc
or
stos
or
or
add
and
sbb
ss
movups
push
push
mov
jmp
sbb
xor
or
daa
nop
add
xor
in
and
jns
push
pushw
or
or
in
or
adc
cmp
add
dec
pop
and
or
fisub
(bad)
jmp
(bad)
lods
mov
inc
adc
xchg
push
and
push
pop
inc
xchg
push
inc
push
fistp
inc
jo
addr16
inc
sub
and
jnp
daa
add
push
gs
or
gs
ret
sub
or
or
inc
or
lds
test
ss
pop
fld
outs
xchg
mov
fcom
outs
ss
aam
mov
movs
or
mov
jae
push
sbb
add
repz
or
out
push
cmps
or
inc
imul
add
in
fstp
bound
xchg
sbb
sbb
add
sub
dec
outs
sub
sub
and
cmp
sbb
xchg
cli
add
xor
movs
mov
rcl
add
je
mov
loope
jo
jb
or
inc
(bad)
mov
jae
jae
xchg
push
add
outs
jne
push
adc
ins
movs
or
dec
outs
push
or
out
outs
lock
ins
sbb
inc
mov
xchg
or
imul
cmp
xor
add
jl
sub
add
push
or
mov
cwde
ss
pop
or
jbe
test
jnp
pop
push
out
je
xchg
in
je
cs
xor
dec
lahf
arpl
retf
mov
jecxz
btc
add
call
dec
pop
mov
in
xor
and
and
mov
add
or
xor
pop
or
leave
shl
fs
dec
dec
mov
out
mov
stc
rol
xchg
shl
(bad)
fld
sub
inc
popf
xor
cld
add
(bad)
imul
jg
int
xchg
retf
inc
push
cmovle
clc
loopne
mov
mov
pop
mov
inc
inc
xor
pop
and
push
add
or
pop
mov
mov
xor
mov
cmp
or
or
dec
mov
mov
dec
shl
(bad)
push
xor
lods
pop
and
or
lock
dec
push
cmp
mov
inc
mov
rol
dec
mov
rcl
mov
inc
mov
mov
and
pusha
fst
pop
and
or
lea
sbb
jb
lea
lea
lea
or
push
mov
sub
xor
sbb
jb
fcomp
or
icebp
dec
lods
xor
sbb
pop
and
adc
dec
pop
or
mov
sub
push
or
or
dec
pop
push
lock
dec
sahf
inc
rcr
sub
pop
and
or
push
jb
jb
rcl
add
popa
fisub
fnstsw
pusha
or
sub
enter
inc
dec
dec
dec
pushf
nop
nop
nop
xchg
mov
jbe
mov
and
jo
popa
adc
shr
into
in
xchg
mov
ss
cmp
xchg
or
repnz
mov
sub
jae
pop
sub
sbb
cmp
mov
out
or
add
mov
jmp
jecxz
iret
pop
daa
sbb
test
xchg
dec
add
inc
out
push
mov
xchg
sub
lods
shl
ins
outs
adc
xchg
loope
es
sbb
xor
stos
jmp
push
ins
xor
sbb
mov
unpcklps
inc
pusha
and
or
lock
or
inc
sub
xchg
mov
ss
pop
lods
stos
pop
add
add
dec
inc
sub
outs
jb
push
pushf
ror
dec
pop
test
lea
sbb
mov
mov
test
lahf
mov
mov
inc
jp
adc
add
imul
dec
jns
mov
nop
add
sub
in
dec
andps
clc
or
mov
es
xchg
or
add
sub
aam
push
je
pop
ins
lods
movs
xchg
jno
mov
push
pop
leave
mov
or
add
push
shr
sbb
dec
repnz
xchg
dec
test
dec
xchg
test
push
das
push
push
clc
mov
ja
push
icebp
jo
cs
in
imul
mov
sub
lods
pop
repnz
xor
enter
inc
add
sbb
sbb
jbe
(bad)
or
add
call
pop
sub
add
push
inc
lock
dec
inc
sahf
push
cwde
dec
xchg
mov
jmp
xchg
xchg
daa
daa
rcr
call
mov
mov
iret
and
stc
and
dec
dec
fwait
fwait
sub
sbb
xor
aam
jns
mov
push
pop
add
mov
mov
jmp
dec
stos
and
inc
arpl
dec
lea
dec
inc
mov
(bad)
in
dec
and
pop
mov
jl
fwait
dec
pusha
mov
mov
push
xor
jmp
push
pop
jno
pop
inc
xor
arpl
mov
inc
hlt
mov
or
adc
sub
movs
pop
add
mov
push
stos
push
cs
xchg
pop
mov
stos
add
fisub
dec
das
imul
dec
hlt
fwait
dec
xor
dec
jecxz
pusha
mov
pop
dec
pop
data16
push
push
retf
stos
add
mov
shl
xchg
dec
mov
fcmovu
xor
push
push
adc
test
lock
push
add
icebp
adc
ins
sbb
sbb
jns
cld
in
in
fisttp
add
inc
or
mov
add
add
(bad)
imul
bound
mov
pop
adc
cwde
jo
sub
add
sbb
pushf
gs
add
add
or
add
cmp
mov
sahf
xor
cld
popa
addr16
jbe
add
lahf
push
daa
cmp
pop
ja
popf
fadd
dec
push
dec
enter
fwait
and
xchg
inc
mov
and
add
aas
(bad)
or
(bad)
popf
mov
cmp
popf
or
add
cmp
mov
cmps
mov
mul
mov
push
inc
push
repz
icebp
push
adc
pop
daa
jl
add
fwait
pushf
nop
lahf
pop
mov
cmp
test
mov
adc
xor
inc
cmp
adc
cmp
(bad)
outs
add
sub
lods
xchg
push
outs
ins
push
lds
pop
or
out
cmp
sub
repnz
shl
and
dec
dec
pusha
jno
lahf
lds
enter
mov
pop
sub
rcl
stos
cmps
add
dec
mov
jb
cmp
test
inc
js
adc
(bad)
jmp
add
mov
mov
ss
test
bound
push
cmp
daa
mov
rcr
jo
mov
retf
lock
push
inc
imul
pushf
jmp
mov
in
mov
add
cmps
inc
mov
adc
pop
push
push
cld
(bad)
pop
add
jecxz
pop
mov
enter
bound
lahf
pop
jne
mov
xor
cdq
mov
test
sbb
push
or
mov
popf
aam
cmp
xchg
and
dec
mov
and
scas
pushf
mov
mov
lahf
sbb
xadd
or
sahf
cmps
stc
mov
mov
sahf
out
aad
in
cmc
repz
out
add
div
cmp
and
add
inc
jmp
pusha
mov
cmp
call
mov
add
cmps
daa
and
dec
cmp
das
add
enter
cdq
dec
paddb
add
movs
dec
xchg
frstpm(287
in
movs
pop
movs
test
mov
add
fs
fmul
cmps
dec
jnp
repnz
scas
cli
push
cmps
inc
lea
iret
jae
and
adc
xor
push
jb
dec
lock
je
inc
repnz
dec
and
pushf
nop
cmps
sub
lock
add
iret
dec
jb
in
cmps
xchg
leave
jnp
sbb
mov
sub
shl
pop
pop
leave
outs
fisub
mov
retf
push
adc
jno
lods
fisub
and
stc
test
leave
add
int3
or
push
mov
add
int
sbb
into
mov
ret
ror
xor
imul
adc
mov
fs
push
push
nop
retf
sbb
push
dec
pop
cmp
popa
mov
dec
leave
bound
in
hlt
jl
stos
or
jecxz
popa
add
fsub
mov
inc
test
or
es
fsub
pop
stos
sti
cmp
dec
add
icebp
jnp
mov
mov
stos
dec
daa
push
test
aas
sub
and
dec
jge
push
lea
outs
or
mov
xor
push
add
sub
mov
push
daa
mov
pusha
push
adc
cmp
cmps
mov
dec
xor
mov
add
idiv
es
popa
inc
xchg
imul
imul
fmul
cmp
call
je
out
in
nop
dec
int
ins
clc
fsubrp
rol
stos
pop
shr
push
in
stos
or
leave
daa
or
call
rol
adc
push
sahf
clc
stos
std
jge
dec
jae
stos
sub
push
add
inc
mov
push
lods
push
adc
ror
cmp
mov
daa
xchg
mov
ss
jmp
nop
add
adc
frstor
inc
outs
fistp
shr
adc
ds
pop
dec
sub
loope
sub
jnp
mov
inc
leave
add
or
out
jge
dec
outs
ret
cld
adc
sbb
fst
push
cmc
aad
add
test
push
dec
pop
sti
cmp
push
js
push
stos
es
lods
xchg
je
mov
dec
rol
dec
inc
aam
adc
dec
pop
or
mov
(bad)
cld
xor
add
jle
add
inc
lods
psubw
cmp
inc
fs
dec
int
lods
arpl
push
jne
jns
add
adc
or
dec
push
inc
mov
loope
xor
adc
ret
pusha
sub
js
or
ins
scas
loopne
fs
mov
scas
jmp
jbe
js
push
cmp
ins
bound
mov
es
cwde
sub
mov
sbb
jg
push
sbb
bound
test
add
cs
mov
inc
pop
cmp
scas
or
xor
(bad)
fimul
cmp
add
mov
add
imul
and
add
push
or
pop
xor
(bad)
ror
pop
test
cwde
fild
xor
mov
cld
sbb
jmp
or
(bad)
or
retf
shr
mov
dec
movs
jl
imul
scas
xor
aas
add
jo
and
pop
pop
or
sub
dec
mov
adc
out
sbb
add
movs
mov
das
or
lea
stc
and
pop
mov
mov
xor
and
add
aad
mov
fadd
movs
lea
dec
or
and
rcl
(bad)
lock
dec
ja
inc
and
movs
cmp
inc
xchg
jo
pop
cmp
and
xor
jo
sti
push
ficom
push
cwde
ret
sbb
mov
pop
fmul
sar
fiadd
test
push
sub
(bad)
jmp
test
or
(bad)
cmp
cmc
inc
mov
or
xor
nop
mov
xor
mov
and
jmp
mov
dec
sbb
or
stos
pop
(bad)
mov
out
add
mov
inc
pcmpgtd
pushf
paddb
das
in
cvtps2pi
pop
mul
mov
or
mov
cmovp
loopne
mov
jecxz
sbb
sbb
or
std
(bad)
cld
(bad)
sti
and
jns
inc
pop
sbb
aam
mov
cmp
push
sbb
jns
scas
mov
pop
fcom
cwde
fmulp
add
dec
and
fcom
mov
mov
dec
dec
leave
(bad)
fcom
cld
sbb
push
test
mov
enter
pop
ficom
sub
pop
adc
(bad)
sbb
push
push
xchg
les
sbb
(bad)
mov
leave
pop
ja
(bad)
lds
push
or
stc
sub
xor
stos
pusha
nop
sub
aam
sub
je
imul
inc
dec
or
lods
xor
pop
int
or
or
dec
fs
scas
(bad)
call
sub
add
add
js
fld
stos
add
mov
das
imul
mov
lods
popf
add
loopne
adc
es
sub
xchg
add
outs
sbb
maxps
dec
push
pop
mov
sbb
test
push
push
mov
daa
dec
jo
inc
sub
mov
(bad)
popa
and
or
pop
mov
push
cs
mov
gs
xor
icebp
xchg
sub
jae
push
rcl
sahf
cmps
jo
cmp
inc
add
ss
dec
xor
(bad)
jp
popf
test
ins
imul
je
add
pushf
lods
adc
stos
or
out
inc
push
mul
ror
imul
adc
js
in
div
push
andps
jp
add
sti
push
fdiv
mov
das
cmp
js
mov
inc
sub
or
or
mov
pop
mov
call
mov
pop
cmp
leave
mov
cmps
mov
or
jnp
fbstp
nop
or
pop
mov
add
lock
bound
ja
pop
jb
adc
xchg
outs
out
or
xor
dec
je
pop
or
(bad)
and
sub
push
xor
fcomp
xchg
enter
jno
daa
mov
adc
bsf
int
fldcw
icebp
fs
mov
mov
push
pop
loopne
push
mov
jle
mov
addr16
test
ss
in
repz
pushw
out
jo
mov
sti
out
push
out
ss
jo
cmps
repnz
xor
dec
outs
(bad)
out
push
hlt
fild
cmp
mov
in
or
mov
inc
aas
push
jbe
mov
xlat
add
lahf
and
xchg
inc
inc
movs
adc
mov
sbb
jmp
fld
pop
outs
push
sbb
sbb
jp
movs
inc
pop
mov
es
sbb
pop
rol
mov
sbb
repnz
jl
sbb
dec
and
add
mov
add
push
mov
mov
add
fstp
inc
shl
pop
fwait
mov
mov
adc
int
xor
das
sub
in
mov
pop
xlat
mov
stc
not
add
ret
imul
ret
add
pop
push
ds
(bad)
cld
repnz
add
int3
sbb
add
xchg
das
pop
pop
add
add
and
push
jmp
iret
repz
dec
mov
cvtdq2ps
pushf
sub
in
repnz
add
or
(bad)
das
pop
bt
cmp
pushf
out
cmp
retf
jp
sub
dec
kmovw
add
push
xchg
test
mov
jmp
push
add
lea
or
frstor
mov
push
fstp
enter
add
and
jmp
or
les
or
cmp
add
dec
jne
loope
jl
pop
add
adc
add
cmps
movs
push
xor
xlat
cwde
pusha
lock
jecxz
rcr
enter
or
mov
xchg
cmp
xchg
pop
leave
and
enter
jmp
cmps
inc
(bad)
push
push
lds
add
inc
push
and
test
in
enter
inc
push
dec
jmp
sar
repz
pop
push
mov
fimul
ret
xor
js
test
inc
cmp
rcl
pop
and
imul
ins
and
push
pop
rcl
sub
xor
lahf
movs
add
sub
mov
cmp
ins
add
lods
and
test
adc
push
call
dec
jbe
inc
inc
nop
xor
add
xchg
test
ins
push
dec
fmul
xor
ss
sbb
enter
in
or
sbb
push
lahf
enter
nop
dec
sbb
add
push
inc
and
sub
nop
sub
jo
mov
bound
or
mov
or
fs
nop
jne
push
cmp
or
pop
sub
mov
and
mov
add
xor
xchg
add
cld
and
mov
mov
test
outs
push
outs
rol
ds
outs
inc
add
stos
xor
rep
xchg
inc
icebp
mov
push
pusha
adc
xchg
outs
push
jne
adc
sub
push
push
cmp
push
mov
dec
lea
sub
sub
inc
or
cmp
push
or
mov
mov
dec
dec
push
inc
xchg
or
retf
dec
popa
mov
into
mov
add
lahf
or
arpl
jle
push
inc
push
add
cwde
leave
mov
or
dec
sbb
sbb
jne
mov
sbb
retf
aaa
push
jg
inc
shl
and
add
icebp
add
push
or
add
add
inc
ror
mov
add
or
dec
and
dec
imul
dec
pop
pop
test
out
add
dec
or
lea
pop
mov
push
mov
mov
in
and
clc
push
or
or
mov
test
xchg
fldenv
dec
retf
mov
inc
mov
cli
inc
or
jl
mov
popa
inc
aam
lock
sbb
mov
xchg
lods
setns
xchg
out
xor
xor
mov
inc
mov
loop
sbb
mov
(bad)
push
adc
inc
clc
xchg
pushf
xchg
mov
jmp
and
add
dec
and
mov
sbb
adc
dec
mov
(bad)
retf
push
in
pop
push
adc
rcr
jb
sbb
pushf
push
xor
add
cmc
stc
ins
popa
xor
scas
cld
int3
mov
add
mov
push
jmp
sbb
out
and
push
add
fsubr
jne
fsub
push
pusha
add
mov
cmc
mov
psubsb
pop
add
or
inc
push
mov
sbb
cld
in
sub
movs
push
push
cmp
dec
add
sbb
push
setle
jnp
in
add
(bad)
and
rol
push
bndldx
mov
and
xor
push
dec
xor
cmp
mov
cmp
ret
push
jae
outs
jl
movs
outs
inc
xchg
mov
aaa
add
mov
popa
mov
arpl
mov
ja
jbe
sbb
loope
or
xor
xchg
xchg
pop
cmc
ins
iret
mov
iret
ror
jl
sti
test
ja
movlps
popa
adc
xchg
xor
add
not
mov
movhps
(bad)
movaps
or
sub
cmp
ret
js
dec
dec
push
pop
in
inc
rcl
or
sysexit
add
jae
cmp
test
inc
and
inc
rol
pop
cmp
jl
bound
rol
leave
push
sbb
inc
shl
inc
dec
dec
cmp
aam
push
xchg
imul
das
add
xor
aad
inc
fisttp
cmp
jb
rol
jns
shl
push
scas
and
fisub
mov
lds
pusha
xor
push
int3
xor
xor
pop
xchg
pusha
repnz
and
add
mov
lods
lds
movs
mov
lds
cmp
pushf
add
jmp
push
mov
cmp
add
loope
popf
sbb
rol
cmp
leave
dec
(bad)
in
aad
push
daa
jns
add
aam
addr16
idiv
sar
out
pusha
fs
les
sti
cmp
sbb
push
mov
adc
pop
fiadd
add
xlat
or
(bad)
add
popf
das
pop
add
hlt
dec
dec
popfw
lods
(bad)
jnp
or
daa
daa
daa
and
rol
xchg
xchg
xchg
fstp
xchg
add
in
fs
fnstsw
cmp
fidivr
cmp
aaa
fistp
pushf
mov
std
xor
inc
sahf
pushf
sti
xor
jp
daa
daa
and
loop
mov
xchg
xchg
xchg
daa
or
inc
(bad)
leave
leave
enter
in
(bad)
in
in
enter
xchg
jb
repnz
adc
dec
xchg
cmp
jns
int3
adc
dec
xchg
pushf
mov
into
push
call
sahf
pushf
rcr
jmp
xchg
pop
or
pop
add
jmp
dec
dec
outs
(bad)
not
mov
sbb
leavew
enter
icebp
das
in
jl
fs
mov
jb
repnz
sbb
sbb
out
lock
pushf
mov
cld
dec
icebp
xchg
dec
dec
inc
sahf
adc
pop
popf
jmp
jne
or
arpl
enter
mov
in
pusha
(bad)
push
mul
xchg
je
mov
inc
sub
call
sub
leave
add
adc
rol
add
dec
add
inc
leave
add
or
ins
test
mov
xchg
test
push
jo
ins
movs
or
cdq
fimul
sub
fst
pop
xor
movs
push
dec
pop
xor
inc
or
call
sub
retf
pop
and
pop
sbb
sub
cmp
push
call
js
inc
in
push
outs
std
mov
xor
stos
in
xor
or
jb
pushf
xchg
dec
sbb
dec
leave
add
push
pop
fs
or
dec
push
jb
mov
sbb
add
mov
in
or
or
and
dec
or
enter
pop
add
inc
leave
int3
cwde
pushf
xor
xor
enter
xchg
or
dec
clc
in
repnz
or
adc
and
adc
xor
and
add
add
and
in
xor
xchg
mov
or
push
cmp
xchg
or
dec
dec
pushf
inc
repnz
jb
adc
test
pop
and
mov
or
pop
mov
add
xchg
add
mov
add
add
adc
adc
in
push
and
add
push
xor
push
add
push
xor
js
or
dec
jb
jb
aam
and
fs
push
inc
push
sub
mov
xor
jb
lfs
enter
jb
sbb
sbb
push
jb
int3
lock
push
and
add
push
pushf
dec
adc
enter
mov
dec
leave
in
in
push
jb
in
inc
jo
bound
fdivr
jno
add
add
add
inc
dec
leave
xor
adc
sub
dec
movs
or
mov
cmp
push
inc
dec
leave
add
or
mov
fs
dec
mov
adc
jl
sub
or
add
adc
adc
mov
adc
mov
add
pop
imul
add
into
mov
xchg
or
pop
mov
add
or
jo
or
dec
add
(bad)
daa
jo
pop
dec
push
stos
movs
movs
nop
adc
push
jnp
jg
add
xchg
mov
pop
and
add
mov
jmp
movs
and
adc
test
cdq
dec
add
movs
adc
adc
xor
nop
mov
sbb
dec
les
adc
sub
fs
and
pop
sbb
pushf
xchg
mov
sbb
sbb
call
(bad)
pop
sbb
sub
add
enter
jb
repnz
pushf
test
xchg
and
cmp
sbb
sub
add
cld
nop
inc
jb
adc
push
and
fcomp
pushf
xchg
and
sbb
xchg
adc
sbb
mov
push
in
sub
add
push
mov
nop
pop
mov
pop
cdq
xchg
inc
and
add
add
inc
dec
jnp
inc
xchg
dec
cmc
dec
scas
loop
movs
dec
and
xchg
or
and
xchg
mov
lea
les
xchg
xchg
movs
std
test
fisttp
push
and
adc
mov
cwde
and
dec
adc
jp
or
lahf
or
pop
dec
sub
add
and
or
inc
sbb
dec
or
call
add
inc
sbb
inc
add
sbb
sub
cmp
mov
push
add
stc
mov
pop
inc
int
add
or
or
inc
rcr
mov
jl
mov
movs
out
or
movs
addr16
daa
clc
pop
mov
adc
adc
lea
dec
int
push
or
test
adc
mov
pop
iret
cdq
inc
push
icebp
or
mov
ss
lods
daa
lods
lds
add
mov
outs
inc
ret
sub
jg
push
push
aad
loope
pop
inc
and
mov
pop
rcl
add
add
call
ins
mov
and
push
popa
mov
mov
outs
push
data16
sbb
pop
(bad)
inc
(bad)
aaa
pop
mov
es
es
pusha
mov
in
xor
inc
jmp
fdivr
es
(bad)
fucomi
das
and
cmp
add
scas
shr
push
lahf
out
sahf
in
push
js
sub
jmp
xchg
mov
das
stc
dec
data16
xchg
xchg
xchg
pmaddwd
cli
xchg
les
out
and
enterw
lock
cli
cmc
ror
mov
sbb
test
fdivr
adc
dec
push
js
fdivr
inc
leave
and
sub
cli
push
and
in
sub
cli
and
sub
cli
dec
adc
add
pop
ja
and
xor
adc
dec
out
call
push
add
jae
mov
ret
sti
std
sti
adc
sub
fs
adc
fcmovbe
das
and
(bad)
frstpm(287
dec
imul
or
cli
loopne
jle
push
mov
add
or
in
inc
ss
inc
out
xor
xchg
add
push
lea
add
imul
xor
int3
sub
xchg
scas
adc
pop
icebp
mov
add
pop
jbe
dec
jge
jmp
std
dec
dec
cs
ss
add
std
scas
mov
lods
std
and
ins
in
std
sbb
adc
jns
mov
or
inc
xchg
push
rcl
adc
dec
retf
or
pop
xor
mov
cmps
lock
fist
jo
add
and
ror
jl
out
fistp
(bad)
repz
push
(bad)
cwde
mov
inc
call
add
fisttp
inc
fs
ror
cs
dec
add
cs
adc
dec
jbe
shr
test
add
hlt
jo
lds
test
jbe
and
add
inc
test
cmp
or
pop
fneni(8087
xor
sub
arpl
inc
pop
int
adc
push
inc
dec
mov
add
ins
mov
iret
push
jns
in
sbb
std
test
dec
sbb
mov
jl
nop
xor
mov
test
xor
mov
adc
pop
inc
(bad)
or
add
dec
jecxz
fmul
movs
dec
out
mov
adc
push
pusha
push
loope
or
push
mov
mov
lods
mov
xor
mov
fsub
lods
cmp
add
dec
cmp
jbe
cmp
xchg
mov
cmp
leave
adc
inc
repnz
fs
jl
jbe
shl
outs
pop
outs
and
(bad)
push
xor
dec
jbe
add
mov
fadd
inc
jno
retf
mov
mov
jno
xchg
cmp
neg
in
jns
push
xchg
das
mov
and
xor
jmp
shl
inc
add
sub
sub
dec
mov
add
pusha
pop
dec
sbb
retf
fcmovnbe
aam
popf
mov
in
pop
xchg
sub
and
cmp
mov
add
sbb
pop
mov
dec
add
and
add
xor
dec
add
adc
sbb
sbb
test
pop
add
rol
push
pushf
add
cdq
iret
push
dec
test
js
mov
pop
stc
push
adc
lock
add
dec
js
scas
pop
adc
and
mov
xchg
jns
mov
popa
(bad)
dec
mov
mov
cmp
sub
ret
mov
shl
mov
jne
mov
in
xor
adc
rol
ret
cmp
mov
dec
mov
and
sbb
std
cmp
push
pop
xchg
adc
call
lods
ss
mov
xor
popa
sub
inc
xchg
rcr
retf
mov
fistp
aam
dec
add
mov
mov
sbb
and
or
es
loope
sbb
xchg
inc
xor
enter
xor
push
cmps
in
or
jnp
(bad)
icebp
jg
cmp
dec
inc
ins
outs
bound
mov
sbb
jb
or
dec
or
shl
and
or
lods
xchg
nop
jno
pop
cld
ss
repnz
push
push
jmp
pop
or
sbb
rcl
call
adc
push
mov
mov
aaa
add
cwde
cmp
ins
and
test
cmp
loopne
arpl
dec
push
shl
cli
fisub
add
pop
sbb
nop
mov
leave
cmp
or
pop
push
int
popf
int3
and
pop
in
or
cmp
nop
add
nop
adc
sbb
nop
add
and
ins
imul
bndldx
push
xchg
stc
xor
out
je
or
add
cmps
adc
das
cmp
pushf
pop
xchg
or
cmp
cs
ret
or
(bad)
es
fcom
and
or
or
cmp
xchg
call
out
shl
mov
xor
mov
movs
mov
xor
neg
xchg
jne
int
xchg
jne
imul
sbb
xchg
push
jmp
or
add
or
cmp
dec
pushf
lsl
xlat
das
pop
scas
cld
add
cmp
add
popf
pop
add
daa
popf
cli
push
pop
adc
(bad)
movs
mov
sbb
mov
sub
fadd
stc
add
mov
push
sbb
dec
xchg
xchg
push
ss
xor
mov
xor
ins
imul
(bad)
arpl
pop
adc
jo
pop
jne
cmp
push
sub
inc
or
mov
pusha
ret
in
lahf
sbb
std
in
adc
fs
imul
stos
adc
ja
and
test
call
add
cmp
cs
repnz
lds
add
rol
retf
(bad)
jmp
adc
stos
pop
cmp
pop
jl
ins
lea
pop
mov
(bad)
push
jne
inc
jo
pop
mov
stc
movs
dec
loopne
faddp
ins
and
adc
push
in
in
push
and
xor
dec
jecxz
mov
or
imul
ss
pop
or
sub
xor
add
or
and
addr16
out
add
xchg
mov
pop
(bad)
mov
and
add
pusha
sbb
mov
stc
xor
pop
jae
push
jcxz
jp
ret
or
mov
shr
push
add
shr
xchg
bound
pop
adc
sbb
iret
sbb
push
pusha
mov
sar
add
lods
aas
ret
fdivr
pop
pop
test
fisubr
jmp
shl
shl
or
cmovp
ss
sub
pop
pusha
adc
rcr
dec
daa
cmp
pop
push
stos
add
imul
mov
cmp
add
mov
inc
ins
adc
rcl
(bad)
pop
out
aaa
adc
push
dec
imul
dec
add
loop
mov
pop
and
rol
outs
rcl
mov
imul
in
sub
lock
lea
ins
xor
scas
add
push
mov
mov
pop
adc
stc
sti
dec
pop
nop
ja
jbe
rol
jecxz
inc
xor
adc
rol
das
pop
add
pusha
xor
jne
mov
adc
cmc
ret
jp
jbe
xchg
ins
rcr
rol
and
mov
repnz
sub
movs
or
or
outs
je
pop
inc
test
xor
rdpmc
xor
adc
dec
or
aaa
sbb
or
mov
ds
loope
retf
push
adc
scas
sbb
dec
imul
xchg
xor
mov
pop
mov
push
iret
add
mov
jb
sub
or
or
fisttp
inc
mov
shl
lock
lods
xor
xor
xchg
or
inc
push
and
jnp
xchg
in
adc
add
mov
int3
or
xor
or
pop
sub
xchg
inc
ret
dec
or
dec
sub
xor
fwait
movs
xchg
pop
sub
mov
and
mov
pop
xchg
xchg
aaa
fadd
in
cmp
xchg
inc
clc
cmps
or
in
nop
test
push
inc
outs
and
pop
sbb
and
(bad)
int
dec
add
fbstp
pop
sbb
cmps
push
popw
xchg
pop
sub
inc
das
inc
cmp
push
int3
pop
pop
dec
out
push
xchg
lahf
lock
dec
or
cmc
mov
inc
and
int
or
(bad)
loopne
out
xor
adc
popa
sub
cdq
jge
jmp
je
sbb
adc
imul
push
mov
lock
retf
or
and
xchg
(bad)
retf
psubb
fwait
pop
pop
loop
pop
dec
fimul
sbb
retf
lar
repz
pusha
adc
push
ror
cmp
sbb
xchg
jl
pop
out
jno
cmp
(bad)
push
(bad)
dec
sbb
and
shl
xor
sbb
add
push
(bad)
adc
xchg
mov
pop
or
movs
stc
jnp
xchg
and
js
add
adc
inc
sub
mov
pushf
cmp
sbb
add
xor
or
icebp
call
add
pop
das
sub
pop
and
jnp
add
imul
xchg
mov
mov
mov
mov
add
iret
in
dec
(bad)
push
jecxz
icebp
jmp
push
and
and
popa
sbb
inc
and
popa
and
xor
sbb
andps
test
pop
add
sbb
push
mov
pusha
arpl
adc
cmp
add
sub
push
fwait
ins
push
dec
xchg
test
outs
mov
sub
iret
sbb
add
push
jl
mov
mov
jbe
lds
imul
fs
cmp
jmp
nop
dec
jo
sbb
jo
mov
or
out
std
add
sbb
push
mov
push
inc
sbb
xor
popf
pop
cmp
dec
and
pop
jl
sub
add
sub
movs
push
xchg
add
idiv
add
in
sbb
arpl
push
cmp
adc
or
mov
add
xchg
outs
push
and
sbb
in
adc
or
xchg
enter
push
adc
jae
call
sbb
fisubr
sub
lea
push
sbb
dec
cmp
mov
push
hlt
aas
mov
ret
add
cdq
ja
sahf
dec
popa
xchg
out
sbb
bound
lea
and
or
mov
push
lock
sbb
push
mov
push
popa
mov
adc
and
popa
push
sbb
add
mov
(bad)
fwait
into
imul
into
adc
adc
int3
dec
inc
(bad)
adc
inc
cmova
adc
(bad)
mov
push
and
imul
ds
add
sbb
push
add
shl
mov
and
xchg
or
xchg
popa
mov
jo
call
push
xchg
and
ja
into
das
inc
and
outs
sub
dec
sti
mov
inc
xchg
pop
pop
pop
push
rcl
push
sar
int
mov
and
fmul
push
hlt
jns
adc
fadd
mov
add
adc
sbb
xchg
sbb
sub
int3
movs
xor
and
and
shl
repz
lods
push
xor
cmp
xchg
mov
iret
outs
lea
or
inc
mov
dec
call
fimul
or
js
pop
pop
into
rcl
push
aaa
sub
cmps
loopne
adc
cmp
sbb
lock
es
cmps
cmp
adc
jns
outs
jl
pop
js
fs
xchg
sub
test
xor
mov
cmps
add
pop
xchg
jge
add
dec
jno
js
movs
and
mov
ss
lds
ret
and
es
test
dec
es
jae
pushf
pmulhuw
fbstp
daa
jne
jb
xor
add
inc
(bad)
sar
cmp
jns
sub
jmp
pushf
mov
sub
add
dec
dec
dec
inc
dec
je
enter
dec
or
cmps
rcl
and
push
enter
js
xlat
add
(bad)
loopne
sub
pop
xchg
xchg
xchg
mov
movups
inc
ja
enter
(bad)
xor
lods
xchg
or
xchg
daa
es
iret
xor
scas
je
das
mov
inc
imul
movs
jae
mov
mov
dec
outs
xchg
pusha
xchg
push
out
mov
xor
lahf
je
add
and
pop
dec
je
sub
adc
enter
pushw
and
rol
into
jnp
shl
push
or
icebp
dec
mov
jo
push
fistp
add
push
pop
call
popa
mov
sub
bound
bound
daa
dec
in
or
or
add
sub
rcl
and
test
lods
call
stos
in
pop
dec
lods
in
mov
(bad)
xchg
stos
mov
gs
jb
dec
adc
inc
leave
int3
xchg
pushf
leave
push
jb
clc
in
cmps
xchg
inc
pop
data16
sub
xor
leave
push
repnz
imul
leave
push
pushf
adc
cmp
sub
fs
or
setl
mov
mov
dec
dec
xchg
cmp
sub
lock
push
ficom
xor
rol
and
push
(bad)
dec
cwde
pusha
push
or
or
test
jo
mov
bound
cmp
sbb
push
add
push
xchg
or
mov
ins
pop
and
and
ffreep
sbb
adc
mov
mov
or
sbb
or
je
xchg
hlt
jae
lods
clc
add
push
mov
ins
and
jns
je
push
rcl
dec
and
add
xchg
xor
retf
adc
stc
jne
fist
cmp
xchg
xor
pop
xchg
aas
(bad)
push
cwde
mov
xor
nop
add
dec
pop
sbb
js
jmp
mov
or
leave
cs
push
sbb
femms
cmp
dec
jmp
adc
adc
and
int
pop
loop
adc
xor
dec
pusha
adc
jg
ficom
xchg
adc
push
rol
or
or
lds
ret
outs
jb
iret
jo
mov
add
xchg
imul
pop
mov
inc
dec
push
movs
mov
mov
pusha
inc
add
push
pop
push
or
dec
lock
lock
lea
mov
mov
retf
stos
jle
inc
push
sbb
mov
imul
fnstsw
pop
ins
stos
sar
cmp
sbb
adc
push
push
xor
mov
mov
mov
and
dec
jns
stos
add
or
push
in
xlat
adc
ja
aas
sub
lds
pusha
sti
dec
ror
mov
rcl
and
xchg
mov
pop
inc
cmp
loopne
jmp
ja
jmp
adc
or
clc
push
mov
je
aas
psrlw
sar
and
dec
mov
push
adc
pop
sub
dec
or
sti
push
neg
stos
push
or
inc
xor
adc
add
adc
icebp
add
xor
inc
or
xor
dec
or
adc
push
xlat
aam
sub
add
leave
add
add
(bad)
mov
repz
int3
xor
int
add
fist
dec
stc
shr
xchg
or
jno
adc
mov
and
sub
xor
push
test
mov
xchg
(bad)
es
pop
(bad)
jnp
cmp
xchg
push
ins
push
xchg
push
test
lods
iret
sbb
push
xchg
xlat
imul
sub
inc
mov
outs
fwait
pop
daa
or
inc
fcom
xor
inc
sbb
xor
cmp
jg
fdiv
scas
cmc
pop
in
jmp
xor
adc
ins
xor
int
adc
inc
sub
lods
xchg
aaa
push
aaa
daa
(bad)
aaa
aas
cmp
frstpm(287
arpl
push
scas
lar
in
leave
leave
inc
(bad)
aam
cmp
in
bound
jns
xor
or
push
mov
cmp
inc
sahf
pushf
pushf
mov
ins
dec
dec
dec
cmps
fistp
aas
mov
jg
sahf
pushf
pushf
pushf
jbe
rcl
inc
dec
dec
dec
inc
push
jg
icebp
cmps
daa
and
inc
imul
lock
out
xchg
movs
jno
xchg
nop
inc
sub
leave
test
xchg
xchg
or
loope
out
xchg
mov
inc
sbb
repnz
xor
add
or
push
and
xchg
sahf
movs
inc
xchg
pop
and
add
inc
adc
or
test
add
adc
dec
dec
push
inc
mov
fs
jb
cmp
fwait
mov
leave
add
jo
int3
push
and
pushf
in
mov
mov
popf
adc
cwde
sbb
popa
in
fld
jl
xor
inc
shl
in
jb
pusha
mov
mov
and
pushf
mov
push
ins
test
dec
sbb
push
push
mov
pop
adc
mov
add
jae
mov
xor
leave
stos
push
aaa
movs
inc
jnp
mov
loopne
dec
mov
das
and
test
mov
add
jge
rol
push
add
test
xchg
jnp
das
mov
mov
(bad)
mov
sub
or
cmp
call
add
cmp
fdiv
pop
and
xchg
outs
jae
mov
stos
aas
xchg
cmp
or
add
stos
xchg
dec
add
ret
cmp
pop
jmp
out
es
nop
(bad)
icebp
push
nop
stos
sahf
inc
jp
and
in
inc
icebp
test
lods
test
leave
pushf
je
and
adc
test
int3
je
in
sbb
lods
mov
call
sar
popf
out
push
pop
and
jmp
lods
jo
jmp
and
dec
fldenv
das
push
retf
popa
adc
mov
xchg
inc
or
imul
popa
daa
hlt
pop
or
stc
add
adc
push
jns
scas
mov
or
adc
ins
jae
xchg
add
and
and
jnp
add
enter
and
lock
sub
test
add
sbb
mov
push
add
pop
and
jnp
aam
add
call
test
adc
inc
pop
push
push
jns
dec
jecxz
inc
adc
sbb
mov
and
es
cmp
sar
inc
les
pop
sbb
ficomp
mov
xchg
in
mov
dec
add
in
sbb
(bad)
lea
sbb
cmp
cmp
push
and
cmp
cmps
dec
jo
inc
dec
movups
xchg
das
mov
unpckhps
aad
dec
(bad)
fild
hlt
or
mov
and
jb
ret
and
adc
fild
sbb
inc
or
loopne
jbe
inc
push
sbb
push
dec
dec
adc
loope
push
push
ins
sbb
add
inc
fsub
data16
pushf
mov
push
pcmpgtw
cmp
ja
pop
lea
adc
sbb
sbb
cwde
adc
mov
dec
sbb
jo
mov
sub
push
jb
cmps
mov
cli
les
sbb
dec
imul
jl
fwait
js
mov
mov
(bad)
dec
nop
daa
nop
jg
mov
dec
add
dec
sbb
test
push
cwde
cmp
jo
(bad)
cld
push
and
or
or
and
inc
retf
pushf
or
out
adc
loope
fs
jne
pusha
mov
dec
or
in
or
push
ins
inc
gs
jl
repz
adc
lea
inc
gs
adc
push
call
rcr
or
jnp
sbb
jmp
add
in
or
xchg
fldenv
pop
pop
test
mov
ja
out
cmp
xchg
mov
add
jp
dec
cmp
inc
push
or
retf
lahf
sub
push
jns
xchg
xchg
dec
dec
jbe
xchg
mov
cmp
inc
test
sahf
pushf
ret
or
js
mov
cmp
cmp
shr
xor
outs
jb
mov
push
xor
cmp
fisubr
dec
dec
ror
test
bswap
add
imul
pop
retf
cmp
mov
jbe
inc
outs
pop
jns
outs
mov
pop
arpl
xor
push
inc
repnz
adc
push
push
xlat
mov
dec
adc
mov
shl
and
dec
adc
push
mov
adc
add
or
aam
sar
push
xchg
dec
and
movs
add
dec
dec
xchg
adc
mov
sti
or
movs
mov
sub
loopne
and
into
mov
in
(bad)
push
sbb
or
pop
inc
or
dec
xchg
or
gs
mov
adc
xor
or
jl
push
or
or
fst
lock
jge
cdq
jo
inc
lods
cli
adc
movs
and
cmp
xor
inc
(bad)
inc
mov
cld
or
inc
jmp
add
xchg
mov
adc
add
adc
in
dec
xor
push
adc
jl
call
iret
movs
mov
in
or
ror
inc
push
leave
fldenv
xor
out
and
add
push
or
jl
push
mov
aad
ret
jae
cld
push
retf
mov
ficom
stos
or
xchg
clc
sbb
dec
cmp
sub
into
inc
repz
or
retf
jno
xchg
inc
lds
fimul
aaa
mov
add
sub
push
push
push
data16
movs
bound
popf
pusha
imul
cwde
push
or
adc
shl
clc
ret
cmp
pop
mov
push
push
in
stc
or
add
dec
and
jbe
fs
mov
fiadd
lahf
rol
add
daa
push
enter
dec
imul
dec
cs
pop
jge
push
xor
push
or
test
xchg
dec
mov
mov
or
mov
xchg
adc
paddq
mov
mov
inc
xor
pop
jae
adc
add
push
jmp
enter
push
dec
daa
mov
das
push
push
pop
adc
inc
and
or
mov
clc
sub
jns
inc
push
gs
inc
(bad)
cli
pop
mov
or
pop
cmp
int3
adc
inc
fiadd
add
inc
add
jns
pop
adc
dec
sub
adc
fadd
jnp
pop
push
pop
leave
adc
pop
and
push
add
call
push
pop
dec
xor
push
xor
lock
fistp
ret
test
sbb
or
rol
add
outs
push
cmp
daa
or
and
arpl
iret
and
inc
cwde
aaa
push
mov
pushf
pop
pop
sbb
mov
or
adc
out
mov
sahf
sub
pop
adc
pop
xchg
add
pop
popa
(bad)
movs
cmc
adc
iret
pop
or
sahf
push
jae
pop
push
xchg
retf
add
dec
xchg
retf
and
loop
xor
fwait
out
lods
adc
jbe
push
and
scas
sbb
(bad)
lahf
xchg
push
mov
imul
std
dec
into
(bad)
push
cmp
jl
push
sar
mov
sbb
(bad)
push
dec
daa
lock
xchg
ror
push
nop
in
and
sbb
add
adc
adc
pushf
adc
(bad)
sub
add
outs
rcl
push
in
pop
rcl
es
mov
or
adc
enter
add
outs
adc
jae
adc
jl
mov
out
mov
mov
call
rcl
stos
mov
outs
ins
pop
cwde
nop
mov
jle
sbb
dec
sahf
(bad)
repnz
inc
fcom
mov
ja
dec
mov
jecxz
fwait
xchg
in
shl
jbe
adc
xchg
(bad)
adc
mov
or
pop
cmp
stos
push
adc
sub
add
mov
adc
mov
sub
push
pop
add
inc
jl
dec
fwait
add
or
loopne
push
ja
pop
ins
push
xchg
pop
or
xchg
sub
push
sbb
(bad)
xchg
adc
test
data16
xchg
hlt
push
test
push
pop
pop
mov
mov
push
in
cld
dec
dec
inc
dec
mov
push
dec
data16
push
push
push
sbb
(bad)
das
popf
enter
mov
cld
xor
adc
icebp
cwde
repnz
jecxz
ror
pop
adc
jnp
inc
daa
pop
pop
pop
jle
or
(bad)
pop
in
pop
adc
pop
pop
pop
pop
pop
(bad)
pop
(bad)
pop
pop
pop
imul
pop
jmp
sub
xor
sbb
add
adc
dec
push
inc
xchg
dec
or
lds
push
fneni(8087
ret
inc
xchg
inc
in
or
imul
je
aad
inc
sbb
aas
add
jl
inc
jno
or
lods
sbb
push
add
or
test
mov
sti
rol
or
sbb
xor
jae
mov
add
jb
jae
push
mov
sub
and
es
ins
ins
adc
or
sahf
cwde
add
dec
scas
ss
inc
xchg
out
pop
pop
shr
cs
outs
mov
mov
lods
movs
xchg
sbb
add
mov
aad
imul
aas
nop
pop
jo
jbe
push
pusha
inc
lahf
jmp
jne
pop
xor
es
loope
jmp
sbb
retf
mov
sbb
add
pop
loopne
xor
pop
punpcklbw
scas
loopne
div
enter
pop
(bad)
pop
push
sub
int
stc
cmc
pop
std
add
push
shr
and
mov
push
push
add
pop
dec
add
pop
pop
mov
sub
ror
data16
push
pop
pop
clc
pop
dec
pop
rol
xor
adc
push
xchg
adc
popa
sbb
push
fwait
imul
mov
fld
pop
add
test
or
jmp
mov
rcr
pop
add
stos
adc
and
pop
in
pushf
sub
ret
outs
lods
lods
dec
leave
les
pop
sub
lods
dec
or
dec
add
adc
pusha
stos
xchg
add
add
mov
inc
das
add
dec
or
mov
rcl
mov
cmp
sahf
xor
addr16
mov
fcmove
push
xor
pop
jnp
dec
scas
out
pop
mov
and
cmp
fisub
adc
xchg
popf
inc
data16
sub
psrlq
js
call
xor
ret
mov
sub
sbb
neg
adc
ret
or
push
push
sti
out
pusha
add
add
mov
fimul
jns
popa
xor
test
push
sbb
and
int
xchg
add
inc
xor
jbe
adc
js
xor
adc
outs
out
sbb
fs
sub
add
push
je
dec
leave
inc
test
in
dec
fst
and
inc
lahf
sbb
and
rcl
cwde
dec
push
mov
aaa
add
pop
push
mov
push
je
test
(bad)
out
or
inc
add
inc
ficomp
mov
cs
and
(bad)
and
mov
push
mov
push
lds
lock
fs
pop
push
les
outs
xchg
adc
lock
das
xchg
push
xor
hlt
ret
rcl
mov
js
pop
and
mov
and
pop
daa
les
lds
daa
fs
outs
bound
enter
xchg
das
cdq
push
dec
repnz
pop
and
arpl
mov
sub
mov
xchg
mov
pop
pop
adc
inc
ds
jo
call
js
push
mov
mov
pop
pop
inc
push
or
and
adc
adc
xor
inc
xor
add
sub
jns
popa
push
inc
call
push
sub
cmp
aaa
or
push
stos
int
and
addr16
inc
dec
cmp
inc
and
lds
and
imul
or
es
mov
hlt
bound
neg
mov
push
xor
jl
dec
scas
shr
mov
dec
test
nop
and
outs
inc
pop
push
nop
add
add
imul
aad
fld
or
inc
enter
jb
pushf
nop
sub
pusha
and
or
inc
inc
leave
addr16
push
push
lods
pop
push
sbb
repz
mov
inc
outs
cli
mov
pusha
sbb
enter
dec
fstp
inc
sbb
mov
(bad)
int3
add
repz
inc
imul
push
jg
xchg
mov
cmp
jns
fs
mov
lahf
lods
hlt
leave
cmp
icebp
pop
ins
(bad)
mov
shr
or
mov
sbb
(bad)
ins
aam
outs
xchg
nop
sub
dec
stos
pop
jns
test
dec
pushf
sbb
jge
idiv
xchg
sbb
movs
push
shr
push
aam
neg
and
rcl
add
mov
pop
push
dec
mov
inc
sub
add
ret
pop
xlat
popa
loopne
mov
or
pusha
addr16
and
or
and
imul
pop
xchg
or
mov
or
pop
add
xchg
or
dec
cmp
and
sub
add
test
dec
sahf
sub
mov
adc
and
lea
jmp
dec
add
cli
dec
outs
cmp
(bad)
in
sahf
mov
jo
or
call
call
and
jb
shld
sbb
fist
jae
(bad)
jnp
(bad)
push
lock
fidivr
sbb
dec
dec
jmp
jne
ds
aaa
sbb
ss
add
stc
push
adc
idiv
idiv
cmc
push
repz
cmp
rol
repz
inc
cmp
inc
push
inc
ins
mov
int
jo
jl
push
sbb
pop
push
xor
call
xchg
push
aaa
sub
and
imul
jbe
pop
or
popa
push
dec
pop
es
add
sbb
add
inc
retf
adc
repnz
repnz
sbb
inc
dec
sbb
and
inc
fisubr
test
dec
or
in
mov
stc
inc
push
adc
add
in
push
prefetch
adc
add
int3
mov
xchg
sbb
mov
or
push
in
or
or
nop
mov
jo
mov
int
mov
enter
dec
or
sar
lock
jp
mov
fild
lea
pop
and
sub
adc
mov
arpl
xchg
icebp
js
arpl
mov
pop
in
ja
dec
loopne
cmp
pop
cmp
stc
add
mov
(bad)
adc
sub
popa
mov
mov
push
or
loopne
mov
sub
test
(bad)
sbb
leave
pop
dec
lods
and
cmp
push
push
dec
pop
xor
je
sbb
movs
inc
push
arpl
pushf
fwait
mov
add
add
or
iret
ret
pop
mov
cs
out
dec
push
xchg
pop
or
pushf
fisttp
push
pop
out
or
mov
das
xchg
test
or
leave
pop
mov
je
add
jbe
cmp
or
mov
sub
je
mov
or
imul
sbb
add
mov
dec
out
les
xlat
adc
add
test
inc
cmp
das
inc
test
xchg
inc
test
mov
adc
pop
xor
dec
push
scas
jb
push
or
in
jl
sub
add
mov
iret
mov
mov
mov
das
adc
sbb
sbb
mov
sbb
js
das
jge
dec
(bad)
enter
sbb
stos
in
fsub
dec
or
sub
fsub
inc
push
xchg
test
jl
inc
push
ins
in
and
jecxz
lea
jmp
xor
test
mov
je
lods
xchg
add
and
popa
or
cmps
(bad)
stos
sub
(bad)
addr16
test
inc
fiadd
fdivr
movs
fisubr
add
pop
les
scas
mov
xor
daa
adc
push
call
jns
repz
ins
push
add
fs
adc
or
das
add
xor
cmp
js
add
jns
scas
jns
mul
jo
repz
fidiv
cld
cmps
aam
out
sub
inc
ins
imul
sub
jns
test
or
loope
fistp
add
pop
push
push
jae
push
mov
test
adc
cmp
add
pop
or
sub
dec
inc
or
push
or
xor
add
cmps
jp
gs
inc
add
push
xor
mov
cmp
add
test
mov
sub
fwait
sub
xchg
dec
imul
ja
sbb
inc
rcl
outs
ja
aam
fnstsw
ins
popa
popa
jne
jae
nop
jnp
push
adc
aas
sub
es
push
in
cmp
data16
dec
in
jb
mov
div
add
push
cs
adc
iret
repz
dec
test
enter
stc
jmp
add
jae
repnz
push
inc
xchg
adc
cmps
out
add
mov
pop
push
imul
add
jl
jge
cmp
retf
fist
unpcklps
mov
jmp
sbb
out
inc
idiv
sbb
aas
sbb
push
pop
(bad)
loopne
lods
mov
xchg
push
xchg
aaa
in
mov
and
es
dec
sbb
push
cmp
add
pop
sbb
mov
pop
outs
push
dec
cmp
or
test
ja
add
cs
mov
push
sbb
pop
daa
add
cmp
retf
sbb
ins
mov
cmps
jb
jae
or
mov
push
and
mov
outs
jg
push
sub
aaa
push
pop
or
out
in
pop
pop
xor
sub
xor
mov
and
cmp
mov
movs
add
js
or
pusha
fstp
test
clc
cli
add
aaa
je
or
add
into
ins
call
loopne
ss
jl
xchg
cmp
iret
mov
scas
jmp
mov
aaa
push
js
xor
pusha
mov
inc
push
mov
sub
jle
sbb
push
out
outs
or
nop
std
dec
int
pusha
xchg
ins
fs
xlat
out
inc
mov
cmps
sar
adc
push
mov
sub
push
ficom
xchg
or
push
cwde
in
in
jp
pusha
mov
sbb
dec
add
imul
scas
mov
jne
ins
jns
mov
mov
and
pop
call
cmp
popa
lea
ret
sbb
sub
ds
inc
sar
inc
xlat
mov
loope
imul
dec
sbb
sub
add
or
nop
aaa
adc
add
jmp
inc
or
pop
mov
or
sbb
dec
outs
adc
call
test
ins
jbe
test
enter
mov
push
or
mov
xchg
push
je
xchg
sbb
test
sbb
cmp
popf
mov
add
push
or
dec
bound
xchg
sbb
and
test
sbb
jb
test
test
test
cs
xor
dec
pusha
push
fdivr
test
pusha
test
or
push
cmp
sub
daa
xchg
pop
rol
pop
fs
mov
fs
fwait
nop
out
and
or
sub
ds
xchg
sbb
pop
push
dec
or
sub
lahf
test
xchg
adc
fwait
mov
fcomip
jae
mov
aas
mov
xor
xor
mov
bswap
xchg
or
leave
push
mov
add
(bad)
in
repnz
and
dec
mov
add
nop
and
mov
add
mov
(bad)
and
push
push
sub
jl
movq
pushf
dec
mov
scas
das
lds
add
ja
into
mov
push
scas
xchg
xchg
pop
mov
adc
cs
and
sahf
dec
sbb
dec
jo
nop
daa
stc
dec
dec
mov
xchg
dec
cmp
dec
sahf
mov
ins
add
add
data16
pop
setnp
push
add
pop
cmps
mov
add
enter
ficom
mov
push
rcr
push
test
xor
test
jns
and
data16
clc
sub
fidiv
ins
push
aas
repnz
pop
stc
adc
dec
jo
dec
adc
and
enter
dec
jo
dec
stos
cmp
jl
xchg
mov
(bad)
pop
js
ja
mov
ds
or
lea
inc
pop
push
inc
cmp
cmp
ret
mov
pushf
mov
push
(bad)
fs
dec
dec
dec
mov
daa
daa
and
push
xchg
enter
push
lahf
out
xchg
leave
leave
leave
leave
inc
imul
dec
test
pop
xchg
push
lods
mov
xchg
cdq
or
mov
sbb
and
inc
add
dec
mov
cmp
dec
add
dec
lea
mov
out
je
or
popa
aam
in
shr
popf
and
or
inc
push
dec
mov
push
pop
sbb
mov
movs
out
xor
pop
pop
leave
imul
out
dec
outs
or
and
push
cs
dec
push
adc
pusha
imul
push
repnz
dec
xchg
xor
in
(bad)
out
cwde
xchg
and
das
adc
mov
shl
add
push
ins
int
xor
sbb
or
push
out
push
sbb
dec
iret
inc
sahf
push
push
out
sbb
or
ss
leave
inc
repnz
dec
ins
dec
mov
enter
dec
mov
repnz
pusha
ins
dec
and
mov
xchg
jns
inc
add
xor
outs
xchg
out
adc
mov
or
and
pop
mov
fistp
out
dec
popa
pop
pop
dec
mov
pop
xchg
rcl
cld
ins
dec
inc
sbb
cmp
dec
adc
in
outs
dec
stos
ss
movs
mov
scas
ins
push
adc
cmp
imul
or
sbb
sbb
stc
and
or
adc
ret
xchg
dec
xor
in
outs
dec
jge
sub
push
add
popa
adc
lods
or
push
mov
dec
push
enter
outs
dec
push
repnz
(bad)
mov
movs
outs
mov
xchg
dec
mov
xor
mov
pop
ja
in
popf
loop
pop
cmp
and
and
adc
inc
sbb
loope
sbb
cdq
cmc
(bad)
test
or
sbb
pop
push
gs
add
dec
cwde
gs
repnz
dec
enter
adc
push
adc
adc
hlt
mul
push
das
xchg
xchg
jg
retf
inc
jp
popa
pop
add
hlt
or
xchg
das
fdiv
mov
xor
pop
xor
mov
cdq
test
or
clc
cmc
cmp
xor
xor
leave
or
jg
dec
xor
dec
inc
in
inc
push
push
fidivr
arpl
and
arpl
ret
xchg
dec
mov
push
and
popf
cmovnp
mov
cmp
lods
mov
dec
push
mov
das
sub
shl
xor
mov
test
mov
push
shl
fisttp
pop
mov
in
sub
and
arpl
call
das
pop
call
xchg
call
in
mov
mov
rcr
call
sub
push
fs
pushf
fwait
in
inc
add
js
movs
fwait
repnz
ret
jo
jo
repnz
fwait
adc
cmp
in
mov
shl
push
cmp
mov
cdq
je
lods
mov
pop
ins
or
loopne
rol
mov
or
mov
cmps
pop
ror
inc
popf
xchg
sub
sbb
or
mov
popf
mov
push
add
ss
or
leave
sqrtps
or
shr
dec
inc
aaa
inc
push
aaa
sahf
inc
push
ja
sub
and
out
and
mov
or
sub
cmp
pop
aad
test
xor
int
psubb
pushf
jp
add
xchg
lods
call
adc
pop
sub
xchg
push
jb
jp
mov
xchg
pop
lock
add
pop
daa
int
stos
add
(bad)
dec
enter
add
jp
inc
mov
jg
push
mov
das
add
adc
pop
mov
test
js
je
jb
mov
cmp
je
aas
aam
xchg
xchg
mov
aam
enter
cmp
mov
pop
inc
mov
mov
aas
add
movs
inc
sahf
fsubr
mov
out
sub
dec
stos
cmc
inc
cmps
xchg
xchg
daa
daa
daa
mov
pop
cmps
enter
imul
leave
leave
outs
mov
and
inc
ins
xchg
leave
jb
repnz
dec
stos
xchg
ror
stos
push
lods
mov
stos
aas
or
mov
in
ins
add
jb
lods
das
cmp
lods
cmp
test
and
cmps
es
pop
sub
or
lods
je
pop
repnz
jne
adc
mov
pushf
xor
push
push
mov
outs
rol
sahf
pop
push
ja
add
stos
adc
enter
jne
lods
push
scas
dec
ins
jne
lds
adc
fmul
xchg
ins
jne
call
gs
mov
pushf
nop
inc
mov
adc
rol
mov
pusha
aad
in
ja
aad
enter
ja
and
lock
repnz
mov
cld
ja
jl
in
lods
dec
add
js
add
sub
push
ret
fwait
cmp
pop
xchg
popf
push
and
mov
cmp
inc
je
mov
push
es
or
ins
ja
cmp
and
ins
add
mov
mov
lods
mov
ins
add
in
js
add
jns
or
dec
imul
sub
shl
ins
add
pop
jns
sub
add
add
dec
dec
enter
jns
push
push
inc
push
dec
rol
jns
adc
add
jp
pop
dec
shl
add
scas
mov
inc
mov
pop
movs
xchg
mov
ins
lea
mov
dec
cmp
jno
or
adc
xchg
add
mov
add
or
outs
pop
xor
shrd
int3
cdq
push
dec
xor
or
sbb
lods
or
and
aam
jo
sbb
mov
ins
push
inc
push
dec
test
xchg
jnp
adc
fs
scas
scas
scas
mov
mov
add
push
fdivp
jnp
out
sbb
scas
mov
xchg
pop
push
imul
mov
xchg
scas
pusha
mov
jns
dec
mov
scas
mov
or
jnp
jnp
scas
xchg
pushf
mov
mov
push
lods
sbb
popa
and
in
mov
jnp
stc
mov
mov
add
inc
dec
rol
xchg
xchg
pop
dec
add
sahf
or
nop
outs
xchg
and
and
pop
ins
sub
repnz
lock
mov
repz
mov
inc
aam
push
rcr
loopne
ret
mov
lods
sbb
das
mov
ja
pmuludq
mov
push
out
loop
and
aas
and
mov
lahf
fdivr
mov
es
mov
repnz
inc
xor
mov
es
test
test
mov
mov
int
adc
sub
adc
adc
or
add
test
pop
(bad)
in
add
sbb
mov
and
test
xor
lock
jnp
repnz
scas
mov
pop
fbstp
push
mov
and
mov
mov
add
pop
enter
in
mov
in
jb
mov
mov
divps
xchg
fcom
mov
cmp
xchg
out
mov
mov
arpl
in
fs
in
and
push
mov
cmp
sbb
out
ss
pop
jg
retf
inc
sahf
add
and
in
mov
daa
daa
in
mov
popf
mov
mov
int
outs
mov
cmps
in
xor
mov
in
mov
jno
test
mov
jb
pop
in
mov
sub
jg
jg
test
xchg
jg
popf
mov
imul
test
outs
lock
push
sbb
ja
xchg
pushf
cmp
enter
mov
popf
xor
in
xchg
and
outs
jo
mov
mov
fwait
or
and
outs
lock
(bad)
and
xor
jmp
iret
dec
and
jno
inc
mov
outs
push
add
cmps
in
mov
test
add
xchg
ins
outs
test
fs
cmp
sub
in
pushf
or
sub
jecxz
jb
in
xchg
mov
stos
fld
add
lea
sub
mov
jb
and
imul
mov
fldcw
fwait
xor
sub
shr
or
or
leave
fadd
mov
sbb
or
inc
(bad)
lods
cwde
(bad)
outs
cmp
sub
pushf
bound
test
dec
outs
xchg
(bad)
adc
mov
mov
mov
push
repnz
mov
test
mov
test
jb
pop
stos
sti
outs
push
pop
or
adc
(bad)
pop
pop
adc
lods
dec
lods
and
or
xchg
aas
les
jnp
add
jl
jl
dec
push
and
js
call
pop
dec
and
pop
dec
xchg
(bad)
jbe
imul
daa
in
pop
mov
xchg
inc
lds
adc
mov
pop
nop
push
pusha
xchg
xor
sti
cwde
mov
pop
xor
lods
movs
pop
xor
lea
adc
(bad)
in
shr
repnz
jmp
xchg
out
repnz
cmp
push
inc
or
pop
gs
dec
stc
daa
test
ret
stos
sbb
call
nop
pop
stos
mov
ret
jl
jb
in
aaa
pop
and
scas
fwait
cmp
mov
clc
ret
dec
stos
cmps
aad
adc
or
aas
pop
pop
les
stc
and
mov
pop
sub
out
push
lods
mov
inc
or
jmp
fisttp
inc
(bad)
pop
aaa
inc
or
push
(bad)
push
mov
dec
movs
(bad)
cmc
lahf
push
lods
push
inc
sub
push
test
call
mov
dec
(bad)
das
int
das
sub
jb
jg
fs
dec
add
shl
in
push
cli
(bad)
das
(bad)
sub
test
je
pop
enter
(bad)
movs
sar
dec
ins
add
pop
adc
mov
push
add
mov
cmp
test
dec
push
test
pushw
shr
retf
nop
scas
pop
ins
ret
call
pop
clc
and
add
test
hlt
ret
pop
les
xchg
mov
les
les
retf
pop
dec
outs
seta
retf
retf
jns
cmp
js
stos
psrad
xor
push
int3
pop
sahf
call
ss
test
pushf
pushf
mov
into
pop
xchg
fimul
inc
sahf
sub
popa
test
dec
push
sar
pop
test
repnz
shl
mov
stc
pop
outs
xchg
ror
retf
cld
shr
cmp
sub
pop
shl
jae
and
xchg
xchg
xchg
pop
les
dec
dec
aad
jl
lock
sar
mov
inc
leave
je
call
push
mov
pop
leave
clc
mov
sub
pop
aam
or
outs
push
sbb
je
lds
ja
push
lods
mov
jne
mov
dec
and
dec
push
fiadd
cmp
xchg
push
push
mov
xchg
aad
lods
or
mov
enter
je
mov
fadd
(bad)
(bad)
inc
mov
ins
mov
add
push
je
mov
stos
mov
jno
mov
and
jb
in
movs
rcl
mov
adc
push
ins
cdq
or
or
fs
add
je
lea
sar
push
and
xchg
je
lea
imul
je
lea
adc
movs
rol
stos
dec
je
(bad)
leave
push
sbb
lods
inc
pop
imul
add
adc
and
push
je
mov
xchg
mov
inc
stos
mov
adc
jne
and
jb
pop
jne
mov
push
mov
dec
jne
dec
and
pop
leave
dec
leave
and
movs
rol
dec
mov
leave
push
mov
mov
push
push
jne
xor
leave
int3
xchg
adc
and
mov
jae
aam
inc
fs
pop
mov
dec
add
seto
xchg
ret
cmp
dec
push
mov
xor
add
or
push
ret
fsub
sub
xchg
es
xchg
scas
icebp
fs
dec
and
inc
repz
fmul
jns
adc
fs
add
lods
dec
cmps
aad
dec
loopne
sub
nop
pop
shr
test
adc
fist
daa
test
repnz
in
(bad)
sub
jp
lods
sub
dec
mov
out
xchg
xchg
movs
(bad)
add
pop
std
add
jo
js
js
cmp
xlat
test
test
retf
retf
add
test
mov
in
push
enter
nop
clc
nop
in
in
push
fadd
jb
dec
rcr
dec
daa
div
pop
or
nop
add
dec
inc
pop
mov
clc
nop
dec
aad
inc
shl
dec
aad
pop
mov
add
push
imul
(bad)
aas
xor
mov
pop
les
fs
dec
sub
add
push
repnz
outs
in
adc
dec
push
sub
dec
ror
ds
fimul
test
lods
add
jmp
xchg
das
cwde
fimul
mov
sub
inc
jns
add
cmps
pushf
adc
fld
jns
add
enter
mov
sub
enter
(bad)
fs
jns
sbb
pusha
fcomp
rcr
sub
push
fsub
(bad)
adc
fmul
xchg
test
leave
or
pop
adc
pushf
adc
enter
pop
ficom
mov
lock
sbb
and
das
das
into
(bad)
frstor
ficom
daa
mov
jb
pop
push
ficom
mov
stos
sbb
mov
loopne
mov
jl
sbb
jo
xor
add
cld
fistp
in
das
loopne
fucomip
dec
fisttp
fdivr
and
and
mov
inc
push
xchg
fistp
inc
xchg
add
add
gs
push
stc
clc
fist
pop
int
jmp
xor
add
bound
jge
add
in
jnp
dec
mov
ja
loopne
xor
jle
and
loope
add
loope
loope
xor
dec
and
div
gs
retf
add
xchg
push
lods
cmp
loope
retf
loope
clc
loope
test
stos
bound
ja
imul
cmp
mov
test
loop
mov
sub
test
add
push
push
call
aam
push
and
pop
add
jl
inc
fisttp
jo
into
in
ss
loopne
js
xchg
mov
dec
stos
inc
ror
nop
nop
pop
enter
jecxz
mov
dec
addr16
mov
setno
xor
in
adc
or
mov
xchg
pop
cwde
in
in
in
retf
retf
mov
or
mov
in
ret
lods
add
lods
xchg
adc
push
xchg
in
mov
(bad)
pop
(bad)
pop
repnz
mov
shl
or
ins
sub
jnp
adc
dec
out
push
out
test
inc
enter
out
sbb
and
cld
movs
dec
add
out
or
sub
mov
push
jb
ret
mov
sub
movs
fisttp
mov
dec
nop
push
push
pop
stos
pop
shl
test
stos
dec
out
adc
inc
mov
push
adc
cmp
inc
push
pop
aam
sub
out
call
jmp
sub
dec
stos
fsub
sub
or
dec
sbb
dec
out
mov
sub
mov
ret
adc
ror
stos
or
scas
xchg
inc
pop
int3
mov
ins
ss
sub
jmp
and
aad
movs
inc
movs
enter
sbb
push
jmp
push
xor
jne
mov
dec
movs
gs
ins
sbb
movs
jns
or
sbb
xchg
arpl
loopne
inc
inc
out
shl
stos
add
clc
pop
loopne
mov
idiv
push
pushf
xchg
mov
push
imul
push
shl
nop
xlat
adc
(bad)
xchg
mov
sahf
push
loopne
push
push
and
cmp
dec
cmp
jl
mov
dec
mov
adc
sub
dec
sub
fsubr
pop
and
dec
jp
mov
inc
sahf
pushf
(bad)
cmp
xchg
inc
ficomp
inc
in
nop
bound
dec
dec
xchg
test
and
icebp
(bad)
mov
adc
push
repnz
stos
test
cwde
dec
test
cmps
dec
xor
cmps
push
inc
ins
dec
jno
xchg
(bad)
in
or
sbb
jecxz
adc
or
cdq
or
dec
lea
or
push
sbb
rol
push
icebp
jg
test
fwait
dec
or
inc
dec
sub
sbb
pop
adc
mov
dec
cmp
adc
or
dec
pop
mov
inc
fs
out
adc
inc
aaa
pushf
pushf
or
and
int
test
push
inc
add
add
or
xor
pop
leave
dec
or
popf
dec
test
or
sahf
dec
cwde
dec
mov
lea
pop
sahf
dec
jae
adc
cld
sahf
xchg
sub
sbb
push
lahf
push
int
adc
aad
sub
mov
sub
data16
jge
test
jle
pop
sub
clc
popf
lock
or
xor
inc
inc
or
mov
sub
dec
add
dec
jne
pop
and
cmp
inc
sbb
arpl
push
inc
fisttp
repz
xor
daa
int3
adc
lds
jns
adc
mov
mov
clc
hlt
nop
hlt
sahf
hlt
mov
hlt
mov
jns
sub
add
loop
in
hlt
hlt
xor
mov
add
jmp
jns
jns
fdiv
enter
aaa
mov
cmc
in
in
les
dec
daa
aas
call
imul
or
daa
mov
adc
push
mov
call
xor
pop
cmp
pop
repnz
movs
in
mov
in
adc
or
inc
pop
jne
pusha
aam
retf
imul
xchg
nop
dec
pop
iret
mov
pusha
ss
dec
aam
ins
mov
test
stos
cwde
push
in
ss
movs
push
pop
and
push
pop
push
jns
add
clc
fild
or
jns
push
or
mov
std
stc
cmps
xor
push
add
out
jne
xlat
movs
cli
int3
test
dec
sahf
in
mov
dec
add
pushf
mov
cli
xor
leave
imul
daa
in
dec
mov
or
cmps
mov
adc
stos
or
add
cwde
scas
sbb
adc
push
or
dec
pop
arpl
xor
int3
aas
xor
dec
add
push
push
jns
int
mov
test
adc
seto
jl
loopne
mov
ss
fsubr
mov
jmp
pop
jle
dec
dec
pushf
pushf
mov
lock
dec
cs
cmp
dec
mov
cli
daa
daa
and
add
xchg
xchg
xchg
daa
xor
jge
leave
leave
enter
add
fs
leave
mov
push
add
repnz
in
retf
repnz
add
dec
xchg
repnz
int
loope
cwde
dec
push
pop
jnp
add
fimul
push
es
and
cmps
clc
push
dec
sub
fiadd
sub
ins
mov
jno
sbb
mov
mov
inc
test
aas
mov
test
stos
mov
aam
mov
cdq
fsubr
mov
pop
outs
mov
nop
clc
push
jecxz
mov
test
push
dec
aam
xor
push
enter
push
mov
int
mov
stos
pusha
and
mov
call
mov
ss
lea
and
push
sbb
iret
sub
fsubr
mov
leave
push
clc
push
dec
adc
enter
clc
push
dec
and
ins
cdq
xchg
fldenv
inc
sbb
cmovb
clc
push
dec
mov
clc
push
dec
cwde
lods
data16
xchg
mov
lods
lods
inc
push
enter
ins
and
mov
aam
cmp
mov
int
add
mov
leave
and
fwait
lea
inc
scas
int
mov
lea
xchg
scas
or
mov
or
(bad)
cwde
scas
mov
in
rol
enter
in
scas
adc
mov
jns
movs
pusha
and
sub
sbb
push
adc
stos
hlt
push
dec
cmp
and
test
adc
mov
sti
mov
sbb
or
push
xor
js
(bad)
out
movs
sub
mov
pop
jmp
mov
in
lods
cmps
dec
add
cmps
hlt
cmps
and
mul
imul
or
mov
jecxz
icebp
pop
and
sbb
rcl
cmp
(bad)
fst
outs
imul
outs
add
test
add
add
lahf
adc
fsubr
std
add
mov
xor
cmp
mov
fistp
add
add
test
mov
inc
and
inc
or
ret
push
ins
pop
dec
rsqrtps
stos
push
push
scas
and
or
cmp
imul
dec
mov
xor
push
mov
push
push
enter
push
jle
das
fisub
or
cmps
cld
add
xchg
jl
and
dec
pushf
ficomp
ins
sbb
ds
push
and
(bad)
adc
mul
push
rcl
(bad)
dec
jns
das
mov
inc
pop
imul
mov
mov
pop
cmps
cs
out
call
pop
(bad)
sub
shl
cmp
loopne
or
push
jne
mov
(bad)
clc
sar
jnp
dec
add
rcr
inc
aad
cdq
out
mov
xchg
mov
das
xor
adc
pushf
inc
mov
adc
test
lods
or
sbb
or
xor
sar
xor
(bad)
and
ins
and
repz
xchg
sub
push
or
(bad)
iret
data16
xchg
push
or
ds
add
movs
or
aad
dec
and
inc
imul
sar
test
test
in
mov
inc
test
scas
fild
iret
pop
int
sbb
pushf
push
daa
adc
cmp
push
or
cmp
bnd
aam
nop
xor
add
mov
mov
(bad)
sbb
scas
adc
js
jecxz
mov
cld
push
cmp
lods
(bad)
in
or
iret
mov
cmp
push
push
outs
jb
inc
add
inc
add
pop
and
sbb
push
sahf
ins
lahf
inc
xchg
mov
xor
rol
inc
jb
lea
xchg
push
dec
pop
adc
xor
xor
stc
les
add
(bad)
pop
add
inc
das
mov
add
and
or
push
test
jp
sbb
or
add
pop
(bad)
pop
dec
xor
and
jb
(bad)
call
inc
cmp
pop
mov
and
add
retf
pop
add
adc
or
or
add
fcmovbe
out
shl
repnz
test
das
mov
push
mov
and
cmps
push
sub
call
add
xor
cdq
mov
xchg
movs
or
mov
mov
ret
adc
mov
add
inc
fisub
sbb
mov
and
dec
popf
fisubr
adc
daa
movs
xor
pop
xchg
mov
dec
dec
push
dec
and
das
pop
pop
leave
das
repnz
ins
mov
dec
mov
push
adc
pushf
push
inc
jne
mov
in
add
pop
add
pop
add
dec
jp
pop
dec
mov
add
pusha
pop
add
cmp
adc
jecxz
jns
adc
mov
add
sub
mov
push
xor
ror
mov
sbb
nop
adc
add
rcl
(bad)
leave
jnp
xor
out
xlat
adc
aas
sbb
lods
add
dec
pop
add
xchg
mov
add
xchg
retf
xchg
inc
push
(bad)
inc
xor
js
in
adc
rcl
xchg
dec
and
imul
push
arpl
iret
mov
dec
pop
cmp
movs
dec
pop
movs
gs
pop
dec
or
cmp
scas
or
pop
pop
jle
fisubr
sbb
sbb
dec
inc
pop
cwde
out
sbb
daa
daa
and
ror
xlat
xchg
xchg
sbb
jno
movs
or
sub
push
xchg
push
sbb
movs
gs
dec
mov
fs
imul
popf
add
stos
stos
sbb
add
push
and
pop
add
add
and
mov
push
cmp
and
pusha
jge
or
addr16
dec
mov
fnstenv
jno
sbb
push
(bad)
and
test
dec
add
lock
xchg
frndint
push
pop
and
imul
dec
inc
jns
jb
or
pusha
mov
bound
fimul
push
and
push
nop
pop
leave
mov
mov
mov
imul
pop
xlat
sub
sbb
adc
push
xor
mov
add
pop
aad
sub
add
stos
sub
sub
shl
(bad)
mov
sbb
dec
mov
pop
adc
fwait
cmp
iret
sbb
dec
push
ja
push
cmps
add
dec
push
mov
inc
or
scas
adc
jp
enter
lahf
sbb
jne
xchg
das
mov
and
inc
push
retf
retf
mov
mov
pop
jle
xchg
push
cdq
mov
mov
pop
xchg
pop
pop
les
pop
dec
push
and
inc
mov
fs
adc
scas
dec
mov
or
push
sbb
inc
sub
ret
mov
sub
pop
pop
pop
mov
dec
movs
push
push
inc
nop
xchg
mov
inc
adc
cmp
cmp
adc
xchg
dec
stc
fsub
(bad)
mov
cmps
stc
mov
push
sub
push
jns
push
sub
stos
dec
cmp
dec
and
stos
dec
pop
jae
jp
and
and
es
push
pop
and
adc
xchg
mov
and
ins
and
and
pop
or
dec
dec
add
shl
jns
inc
push
pop
cmps
jo
lock
bound
jns
xchg
inc
sub
inc
arpl
add
lock
call
fucomp
imul
fsub
add
pop
push
ja
adc
out
push
icebp
mov
idiv
test
cmp
mov
and
xchg
shl
dec
leave
sub
test
inc
ror
mov
and
add
cld
cmp
popa
test
sub
inc
ja
repnz
mov
test
or
xchg
jns
imul
dec
es
pop
push
punpckldq
inc
xchg
mov
adc
adc
add
and
sbb
mov
jmp
js
pop
daa
pop
repnz
push
xor
sub
repnz
daa
ret
rcr
jns
pusha
shr
push
mov
pop
and
dec
or
mov
js
push
xchg
pushf
pop
rol
xchg
xchg
ins
les
js
add
xchg
sub
sbb
adc
outs
out
jno
xor
daa
xor
repnz
mov
das
jg
mov
and
adc
in
add
sub
sub
(bad)
leave
mov
scas
xchg
push
adc
or
add
pop
imul
push
cmc
mov
mov
push
mov
ret
xor
call
(bad)
cmp
popa
das
jg
mov
inc
stos
daa
and
push
or
ret
mov
push
popf
sub
xor
xchg
xlat
test
sub
stos
jp
pushf
push
enter
xor
push
scas
nop
add
ins
sub
push
and
mov
sub
daa
scas
push
enter
sub
mov
sub
sub
and
adc
fs
xor
xchg
pop
add
cmp
sub
add
inc
pop
pop
ins
push
push
sbb
jns
mov
dec
mov
fwait
in
cs
ret
das
clc
push
fisub
push
jl
xchg
push
push
xor
stc
xor
push
xor
sbb
sar
push
mov
push
xlat
and
in
and
and
mov
add
scas
nop
daa
nop
dec
push
dec
dec
outs
xchg
dec
addr16
in
xor
xor
cmp
sbb
xor
sahf
sahf
mov
in
xor
mov
ss
aam
add
mov
or
mov
xchg
daa
sub
in
mov
ds
dec
in
or
fldcw
adc
jae
lods
sub
in
pop
pop
pop
lds
fwait
mov
or
frndint
mov
add
mov
mov
rcr
cmp
repz
inc
fld
fimul
sar
pop
add
xchg
fsubr
nop
mov
fadd
lods
fs
sub
fcom
lea
je
add
add
jns
pop
jne
mov
repnz
pop
ins
es
lods
xchg
cmp
inc
mov
cld
push
rcl
jmp
xchg
mov
pop
adc
lea
lock
rcl
push
or
inc
jbe
rcl
mov
shl
in
sub
in
mov
dec
push
shl
enter
adc
push
leave
add
stos
mov
xor
dec
xlat
jb
push
dec
pop
xchg
(bad)
push
test
dec
iret
retf
xchg
dec
push
or
or
and
inc
xor
iret
mov
stos
lods
cmp
cmp
fild
cmc
cmp
dec
int
add
es
(bad)
stos
in
iret
loopne
sub
and
dec
jle
pop
cmp
pop
cmps
in
dec
iret
adc
mov
mov
jb
dec
loopne
pop
int3
int3
or
sar
cmp
das
(bad)
jge
sub
add
cmp
ins
out
xor
jo
aaa
sbb
loopne
in
call
punpckldq
push
jg
lds
pushf
jmp
loopne
push
movs
fadd
and
mov
dec
sub
dec
xor
call
mov
out
repnz
mov
dec
cmp
cmp
repnz
cmp
dec
mov
fimul
inc
in
ds
inc
sahf
pushf
pushf
xchg
fsub
aas
jo
dec
dec
dec
mov
xchg
daa
daa
daa
cwde
int
inc
enter
gs
jecxz
inc
leave
leave
leave
leave
push
je
mov
imul
jns
xor
in
(bad)
xor
jp
fiadd
sub
cdq
inc
jnp
mov
dec
into
mov
popf
nop
inc
xor
dec
add
loope
leave
xchg
hlt
push
stos
jno
iret
test
inc
push
repnz
(bad)
bound
jns
(bad)
mov
or
(bad)
dec
cmp
pop
ins
push
test
lods
outs
or
iret
mov
lds
pop
mov
leave
(bad)
(bad)
loopne
dec
add
stos
fiadd
jns
aam
xchg
pop
xchg
je
push
iret
lock
xchg
and
leave
add
push
shl
hlt
(bad)
and
in
loopne
jl
and
xchg
or
push
aad
in
iret
or
iret
adc
and
sub
das
mov
repnz
and
jb
in
loopne
jo
push
adc
push
ins
cdq
loope
sub
into
lods
leave
fs
inc
push
stos
popf
into
ror
xchg
adc
pop
loopne
fmul
dec
dec
test
inc
call
sbb
fcmovne
xchg
xor
retf
cld
leave
inc
into
cmp
(bad)
fs
loopne
and
xchg
mov
and
xor
fs
retf
push
mov
into
je
imul
imul
adc
ror
retf
adc
or
leave
fmul
loopne
call
inc
jge
retf
inc
push
and
cwde
(bad)
iret
pop
add
jns
jb
dec
iret
js
xchg
push
push
mov
dec
mov
repnz
mov
jno
inc
xchg
cld
movs
xchg
ret
fmul
dec
dec
ins
lea
pushf
iret
push
ret
sti
ret
inc
iret
ins
ret
mov
add
xor
movs
into
arpl
je
push
xchg
sbb
(bad)
adc
ret
adc
inc
ret
call
sub
fldenv
dec
in
xchg
inc
sbb
inc
popa
aaa
mov
adc
dec
pop
outs
xchg
pop
push
inc
inc
setp
mov
daa
mov
dec
arpl
cmp
add
int
and
pop
and
pop
movs
das
and
push
int3
push
dec
dec
or
les
jns
xor
dec
int3
dec
jmp
int3
movs
int3
adc
sub
dec
dec
ficom
stc
daa
mov
std
dec
dec
stos
sbb
jb
pop
xchg
add
sbb
dec
inc
mov
inc
sub
aaa
pop
gs
xor
loop
stos
div
xor
dec
adc
imul
movs
mov
xor
pop
imul
or
and
cmovo
in
adc
retf
ror
and
je
ds
and
push
mov
mov
sahf
les
xchg
mov
push
aad
or
jnp
pop
dec
mov
mov
leave
dec
cmps
dec
inc
sub
push
(bad)
and
push
leave
pushf
pop
cmc
fsubr
sub
pop
cmp
(bad)
push
dec
sub
das
pushf
pop
mov
bound
aaa
pop
pop
add
add
fiadd
in
mov
test
dec
addr16
push
mov
mov
(bad)
xchg
mov
loop
sar
inc
rol
xchg
mov
hlt
dec
nop
sub
push
dec
dec
sahf
fsubr
comiss
jle
repnz
out
push
das
push
outs
push
fs
in
mov
push
xor
in
xchg
fild
jb
lahf
aam
push
push
mov
cmp
inc
sahf
pushf
pushf
mov
dec
dec
dec
dec
push
jl
jmp
ss
jo
mov
repnz
cmp
rcr
repnz
repz
and
pop
push
sub
pop
imul
xchg
adc
pushf
pop
cwde
into
mov
pop
push
dec
dec
iret
stos
jne
test
ins
jns
in
pushf
hlt
iret
pushf
pop
inc
rol
rcl
pusha
leave
in
sar
mov
cld
shr
xor
xor
js
dec
pop
stos
sbb
dec
leave
test
jb
pusha
inc
lods
mov
mov
jb
jns
rcl
push
and
xchg
and
cs
fwait
repnz
stos
sub
pop
rol
nop
inc
pushf
pop
loopne
(bad)
or
dec
jns
rcr
mov
bnd
shl
dec
pop
push
jns
rcr
enter
sbb
inc
aam
ins
leave
push
sub
movs
sbb
popf
js
nop
add
xor
pushf
pop
cmps
inc
push
leave
inc
aam
pop
dec
aam
cmp
es
(bad)
mov
inc
daa
in
lods
js
aam
pop
mov
mov
mov
dec
xor
fs
xchg
aad
fcom
imul
mov
js
aam
or
add
xchg
lods
(bad)
and
aad
and
in
pop
dec
aad
and
or
imul
adc
push
inc
jns
movs
pusha
and
(bad)
xchg
inc
pop
aad
dec
jns
(bad)
xchg
lahf
mov
mov
sub
jl
xchg
mov
(bad)
dec
ins
lea
xchg
aad
mov
sti
ret
aad
ror
inc
imul
pop
pop
shrd
jae
pop
imul
mov
mov
pop
imul
int
int
in
jns
dec
dec
xor
cmp
dec
call
pop
jb
das
inc
push
cmp
cmovs
xchg
dec
(bad)
bound
xchg
sub
stos
cmps
and
sub
ins
pop
xor
leave
test
cmp
xlat
imul
pop
dec
cli
inc
inc
sti
dec
sub
int
and
jbe
test
or
nop
adc
adc
pop
and
js
pop
or
cmp
mov
movs
adc
inc
and
or
mov
enter
cmp
nop
ror
inc
add
mov
jmp
mov
test
je
cdq
cli
dec
and
and
mov
pop
or
dec
inc
mov
mul
lods
daa
pop
or
inc
or
mov
or
out
je
dec
adc
fcomp
jp
fdiv
xor
test
sbb
add
mov
outs
jmp
push
frstor
add
iret
push
mov
push
ror
ins
popa
dec
ret
mov
cmp
or
mov
or
mov
je
push
sbb
and
adc
imul
cmp
adc
dec
sar
xchg
test
dec
bound
movs
cmp
adc
or
sub
jae
or
sbb
fimul
pop
into
ja
inc
or
bound
xchg
mov
mov
jmp
stc
fldcw
pop
dec
cld
xor
test
and
sub
inc
cmp
loop
pop
dec
fdiv
or
cld
mov
mov
add
loope
adc
or
fnsave
sbb
adc
sub
jo
and
push
test
in
rcl
scas
push
sub
ror
mov
mov
sar
sbb
push
stos
clc
jmp
cmp
je
xor
das
sub
hlt
lock
dec
sub
jo
or
inc
mov
or
dec
ror
or
xlat
inc
addr16
and
stc
xchg
lea
ret
ss
xor
test
or
jo
call
or
sbb
sbb
leave
sbb
dec
mov
cmc
call
push
stc
and
and
sti
mov
ret
mov
sbb
adc
outs
jg
mov
sub
rol
add
shr
popa
dec
les
dec
cwde
hlt
ror
sahf
or
push
xor
cs
xor
call
dec
dec
call
jns
(bad)
pop
jne
or
jo
jno
and
sti
jg
cmp
adc
mov
pop
xchg
loopne
in
pop
fst
daa
adc
jge
jmp
and
inc
les
xchg
and
imul
sbb
(bad)
sar
xchg
rol
mov
dec
fiadd
arpl
add
scas
xor
dec
dec
sub
add
sar
je
adc
jb
or
jno
or
fstp
jne
lea
pop
mov
add
iret
sar
in
imul
jne
das
ds
sub
mov
daa
add
mov
cmp
and
or
in
arpl
in
cwde
repz
movs
xchg
xor
jne
push
hlt
fadd
jae
pop
jnp
and
xchg
xchg
in
lods
add
rol
push
fsubr
add
jno
in
add
out
cdq
pop
mov
xor
loopne
fs
and
fs
push
jb
loopne
or
imul
adc
jmp
dec
pop
repnz
std
int3
sbb
sbb
xchg
adc
push
dec
or
test
inc
and
push
test
inc
daa
add
push
xor
mov
inc
fdiv
push
add
xor
mov
add
cmp
mov
aad
mov
dec
iret
retf
mov
out
or
(bad)
fcom
or
xlat
test
xor
(bad)
sbb
js
add
ret
nop
pop
inc
inc
pop
jg
and
test
add
and
cwde
push
xor
jmp
sbb
test
add
jmp
clc
lods
in
scas
cmp
pop
xor
and
sbb
icebp
sub
xor
sbb
loop
push
movs
inc
push
int3
retf
sub
dec
adc
dec
inc
xchg
adc
inc
imul
addr16
lock
or
mov
std
fiadd
aas
xchg
in
adc
inc
cmp
xor
psubd
in
les
push
dec
shl
jecxz
in
cld
lods
dec
jmp
or
lahf
ja
push
mov
frstor
inc
xchg
inc
inc
rol
xor
mov
je
or
loope
out
cmp
loopne
jbe
add
mov
imul
dec
ds
fcom
nop
push
(bad)
cmp
popa
xchg
jmp
push
sbb
mov
or
cmps
fwait
jmp
sbb
rol
push
jb
add
mov
push
aam
in
call
in
and
pop
call
dec
fmul
test
sub
imul
lahf
sar
rol
mov
adc
push
mov
(bad)
into
sbb
loop
push
sbb
aas
add
sbb
pop
fist
aas
dec
pop
and
xor
mov
mov
mov
and
pop
es
inc
push
push
mov
or
stc
movs
push
nop
adc
jo
and
out
ja
or
test
and
loope
ds
movs
adc
ja
add
xchg
or
ss
adc
push
jne
pusha
mov
iret
dec
(bad)
dec
sti
mov
dec
xor
(bad)
ja
and
inc
xor
hlt
repz
cmp
aad
mov
ins
mov
adc
int3
out
test
dec
mov
retf
imul
mov
jmp
rol
push
es
sbb
cld
ins
lods
lock
jp
and
es
adc
lods
cmp
int3
pop
popf
in
in
retf
adc
shr
mov
int3
adc
cmp
div
fdiv
cmp
ins
cld
mov
iret
jno
xor
or
add
xchg
sbb
(bad)
xor
mov
hlt
mov
fwait
dec
xchg
pop
xchg
add
push
and
ins
sub
das
jns
inc
sub
or
cmp
push
inc
mov
push
add
iret
dec
mov
leave
mov
mov
repnz
jmp
fxch
mov
and
out
nop
inc
or
cmp
jae
or
cmp
adc
ror
mov
call
nop
add
cmp
push
je
ins
jno
jb
in
sahf
dec
pop
xor
imul
and
in
pop
dec
mov
hlt
nop
lahf
cmp
dec
pop
test
scas
(bad)
adc
xchg
add
in
into
test
push
xchg
shr
dec
add
cs
stos
test
or
cmps
mov
outs
out
add
add
mov
inc
mov
mov
das
mov
lahf
dec
xchg
sub
iret
jno
add
and
aaa
cs
sub
or
add
pop
daa
xor
leave
mov
sbb
in
data16
dec
loopne
inc
add
mov
dec
sti
mov
iret
or
add
sub
xchg
add
pop
out
cmp
adc
mov
lds
mov
and
dec
xlat
and
and
das
das
pcmpgtb
jno
jb
jno
jb
xchg
inc
and
rcl
cs
pusha
leave
add
pop
movs
cmp
mov
jb
jno
xchg
adc
xor
or
daa
jno
in
jae
fcmovbe
repnz
jl
mov
fwait
adc
mov
addr16
imul
in
adc
rcr
push
jno
xchg
xchg
mov
or
push
shl
nop
pop
jno
fs
ror
xlat
and
and
and
les
adc
xlat
and
arpl
nop
jne
xchg
or
jno
inc
test
stos
jne
jb
jns
jno
jne
and
mov
cmps
sub
push
jno
xor
inc
cmc
test
xlat
in
jbe
(bad)
and
out
ja
es
ja
xor
pop
cwde
jno
in
add
in
mov
popa
ja
ja
lods
and
xlat
xlat
int3
in
ja
mov
mov
ins
add
fdiv
add
pop
pop
stos
push
mov
mov
mov
sbb
push
or
retf
nop
dec
jae
jns
jnp
xor
jb
sar
sub
dec
add
pop
push
xchg
fsubp
in
adc
pusha
je
je
cmp
imul
dec
leave
shl
jp
js
mov
jnp
ja
stc
xlat
pop
jnp
jnp
push
inc
or
and
mov
xchg
jge
cdq
out
leave
leave
enter
jne
in
in
test
les
xor
or
push
jns
sbb
jb
call
cmp
cmp
and
pushf
pushf
pop
cmps
add
xlat
sub
add
and
xchg
dec
imul
xchg
in
(bad)
je
or
and
loop
push
jnp
fnsave
jns
cmps
dec
xlat
dec
fimul
test
inc
leave
or
repnz
pop
nop
pop
repnz
push
fisttp
test
xchg
and
add
dec
(bad)
(bad)
fdiv
daa
jno
push
adc
test
test
enter
jno
fisttp
ss
nop
test
test
je
adc
or
sub
leave
dec
bound
and
push
or
mov
sub
xlat
les
iret
push
dec
and
(bad)
loopne
jno
mov
loop
enter
test
or
mov
sbb
ins
cdq
test
fs
popf
sbb
jbe
(bad)
mov
or
loop
test
(bad)
adc
or
loop
in
in
and
shl
or
loop
dec
xchg
jecxz
dec
jbe
mov
sub
(bad)
fisubr
dec
jecxz
add
cwde
in
(bad)
js
or
(bad)
xchg
jecxz
test
dec
dec
mov
push
push
push
popf
xlat
hlt
jecxz
cmp
in
add
pop
popf
les
jo
xchg
lahf
mov
mov
jl
jl
xchg
mov
in
ins
lea
mov
(bad)
loopne
sti
dec
push
je
xlat
cld
fld
pop
pop
mov
mov
aad
cmp
xlat
test
cmps
(bad)
out
mov
mov
dec
add
aam
pusha
je
jne
mov
and
rcr
xchg
movs
das
jmp
pop
sub
fcomp
add
or
or
adc
fbstp
xchg
inc
(bad)
lfs
adc
push
and
in
aam
mov
add
fmul
in
inc
mov
fdivr
adc
inc
pop
loop
(bad)
inc
stos
sub
popa
leave
hlt
fldcw
push
sar
xchg
ret
shr
mov
or
cwde
ficom
adc
xlat
pop
inc
and
or
or
call
ror
inc
test
xor
dec
popa
test
or
or
cmps
xchg
mov
test
not
out
or
aam
and
or
or
movs
inc
inc
pop
test
test
popa
cmp
inc
call
lock
sub
xchg
and
or
sub
pop
or
ficomp
fmul
in
jmp
ret
xchg
adc
ins
mov
popa
xchg
cmp
jae
lods
dec
call
ret
cmps
ret
inc
lea
jg
cdq
inc
pop
mov
hlt
add
inc
hlt
or
mov
mov
xchg
cmp
adc
(bad)
or
rcr
mov
(bad)
xor
pop
es
or
jne
and
adc
mov
adc
sub
add
push
or
mov
cmps
sub
test
or
add
jo
adc
inc
loopne
pop
ror
and
out
pop
push
mov
xchg
mov
jnp
adc
inc
mov
push
add
mov
cli
pop
shr
or
mov
push
test
or
xor
inc
xor
pop
in
mov
mov
mov
add
mov
xchg
adc
push
or
ins
xor
pop
dec
pop
pop
xor
xchg
in
mov
or
adc
shl
push
in
adc
jo
adc
(bad)
mov
sub
mov
cs
and
cmp
pop
and
imul
jns
jo
loope
fdiv
jns
jo
adc
push
wrmsr
dec
mov
pop
test
adc
scas
xor
or
nop
add
sbb
push
cld
or
nop
(bad)
js
pushf
in
test
out
dec
add
out
je
cmp
xchg
mov
jmp
or
pop
movs
xor
adc
je
xor
ins
add
pop
aaa
out
push
pusha
add
mov
xchg
mov
out
das
out
loopne
jb
xchg
adc
js
sub
test
aas
add
fist
and
int3
loopne
push
rol
pop
dec
leave
retf
sbb
cmp
jb
ins
(bad)
fmul
inc
mov
xchg
sub
repnz
in
lahf
xchg
mov
repnz
xchg
inc
xchg
js
mov
fs
in
sub
xor
add
push
jbe
cmp
jns
loopne
cwde
popa
lods
pushf
mov
stc
das
cdq
ja
dec
inc
sahf
pushf
in
call
mov
or
daa
daa
outs
xchg
leave
aas
adc
cwde
pushf
mov
pop
pop
neg
add
aam
out
xchg
adc
popf
push
out
popf
test
xchg
xchg
fmul
and
in
mov
clc
call
xor
movs
jmp
inc
les
nop
adc
aad
jmp
in
jo
enter
inc
pusha
aam
(bad)
aam
jo
push
adc
test
popf
or
test
or
jmp
je
jo
or
bt
xchg
push
xchg
add
inc
gs
jmp
fwait
nop
inc
je
cwde
inc
ror
sbb
or
aad
aad
in
in
iret
aad
enter
in
jno
das
sbb
repnz
je
sub
jb
in
popf
mov
add
adc
ins
cdq
stos
loope
ins
aam
in
fs
pop
nop
lea
in
in
je
sbb
adc
clc
in
je
retf
inc
dec
test
dec
enter
in
inc
repnz
in
aad
popf
lods
jbe
adc
je
xchg
or
jo
mov
ins
add
aam
in
mov
sbb
add
pop
rcr
xor
aam
in
or
aam
in
je
mov
jge
adc
and
dec
xor
stos
jns
xchg
out
inc
or
inc
xchg
dec
cmp
mov
loopne
wbinvd
sub
popf
pop
mov
cmps
in
out
xchg
inc
push
mov
and
ins
out
xchg
sbb
add
mov
lods
xor
or
ja
lods
xchg
adc
test
paddq
sti
popf
rcl
ds
sahf
sub
inc
mov
sbb
dec
add
out
in
jb
out
lea
mov
sar
cmp
mov
xor
aam
daa
mov
mov
mov
adc
sub
or
or
aaa
test
xchg
ja
mov
aaa
mov
add
push
repz
sbb
call
call
cmps
adc
pop
add
mov
movs
in
aas
mov
fwait
adc
cs
or
cmps
mov
pop
push
sub
mov
lea
add
and
stos
daa
cmp
add
cmps
mov
cmps
add
dec
dec
dec
sub
or
fdivr
call
inc
ror
adc
and
out
lahf
dec
loopne
fs
add
lahf
imul
dec
and
rol
loopne
sbb
rcl
in
mov
ret
xchg
inc
and
sub
xchg
sub
pop
add
sub
xchg
sbb
mov
aad
xchg
dec
pop
inc
out
mov
xor
(bad)
sbb
mov
adc
inc
mov
cmp
sbb
mov
inc
xor
daa
rcr
mov
xchg
sub
fs
clc
lahf
mov
int3
and
mov
dec
pop
in
push
adc
add
push
movs
lods
sub
inc
inc
str
fs
sub
jle
pop
aam
cwde
mov
and
add
and
movs
ror
fmul
pop
cmp
shr
sbb
fistp
ficom
fld
out
mov
shl
mov
das
or
pop
push
mov
dec
repnz
add
mov
mov
add
sub
dec
xchg
push
jb
dec
xchg
stc
mov
repnz
mov
stc
std
jl
enter
pop
add
xchg
mov
inc
test
in
scas
mov
add
mov
dec
jmp
enter
stos
mov
adc
loop
icebp
mov
repz
mov
pushf
xchg
mov
add
and
movs
lock
fld
je
icebp
repnz
stos
fld
in
cmps
jne
cmp
inc
lods
mov
dec
dec
inc
sahf
daa
scas
dec
xor
scas
ss
add
dec
xchg
leave
enter
fld
mov
in
leave
leave
pop
xchg
loop
mov
in
fs
addr16
out
repnz
mov
ins
mov
mov
je
repnz
mov
mov
mov
mov
dec
test
icebp
dec
in
pushf
nop
mov
icebp
dec
mov
in
xchg
mov
jno
cmp
repz
dec
enter
pop
pause
pop
and
hlt
mov
mov
rcr
hlt
xor
xchg
ins
push
adc
test
and
ja
rol
adc
inc
hlt
dec
mov
shr
in
push
hlt
xchg
pop
inc
rcr
test
stos
xchg
and
sub
adc
cmc
test
and
mov
fsub
leave
mov
iret
stos
and
div
pop
adc
test
inc
jb
mov
imul
inc
enter
test
sbb
ret
sub
fs
push
and
dec
mov
and
inc
pop
test
push
shr
test
test
test
test
movs
idiv
leave
and
dec
test
not
nop
push
mov
imul
inc
test
clc
rol
clc
or
test
clc
test
test
test
jge
inc
(bad)
in
add
test
add
jb
test
add
push
dec
test
cmp
mov
enter
inc
stc
dec
mov
and
cmps
and
test
lock
adc
call
sub
sbb
inc
sar
mov
or
in
adc
jl
dec
add
(bad)
lock
and
js
sub
adc
ret
xchg
adc
mov
test
cmp
imul
or
cmp
xchg
fild
pusha
in
dec
ja
cdq
jge
fisttp
xchg
outs
mov
mov
dec
add
push
push
mov
fimul
add
aam
ja
push
dec
xchg
cmp
mov
retf
or
lea
jp
clc
xchg
mov
adc
jo
and
ret
ror
pop
pushf
lods
lods
push
sbb
clc
adc
xor
mov
je
leave
mov
mov
adc
rol
pop
in
inc
out
dec
sbb
cld
mov
or
loopne
sub
pop
lea
pop
in
mov
loope
or
outs
push
and
mov
or
ss
pop
in
(bad)
ret
mov
sbb
and
rcr
adc
xchg
out
sub
cmp
add
movs
add
enter
push
jno
add
push
div
mov
fiadd
(bad)
cs
js
cmps
or
aas
retf
and
inc
sbb
idiv
push
adc
pop
jb
jl
or
mov
add
cld
push
adc
pop
or
sbb
mov
rcl
lock
or
mov
add
mov
mov
inc
test
cmps
jnp
fild
or
lods
pop
push
pop
das
rcl
fldenv
add
(bad)
cmp
clc
or
neg
fcom
fist
push
xor
push
mov
cmc
push
push
pop
xor
ja
adc
xchg
mov
add
cmp
inc
add
ror
adc
inc
xor
inc
aaa
mov
(bad)
cmp
movs
jne
sar
outs
je
sub
add
xor
xchg
adc
out
mul
mov
stos
int3
ret
push
push
push
or
and
lahf
ret
mov
or
and
inc
aaa
or
xchg
fadd
fst
sbb
push
or
and
inc
sbb
gs
xchg
dec
mov
push
pop
or
mov
inc
or
adc
dec
inc
sbb
aam
xchg
jl
mov
(bad)
inc
stos
loopne
mov
inc
xchg
dec
xchg
mov
sbb
jbe
add
xor
add
mov
add
dec
mov
inc
push
mov
add
sub
pop
jnp
add
iret
clc
jge
movs
psubsb
test
mov
jb
aam
ins
aaa
dec
jae
mov
das
push
lods
sbb
push
aaa
or
enter
jb
xchg
(bad)
sahf
adc
adc
pop
test
or
jle
in
jns
pop
call
add
stc
add
adc
js
mov
mov
mov
add
dec
aas
and
(bad)
jl
inc
xor
cmp
je
jo
inc
dec
jne
sub
mov
push
add
cmp
pop
bound
jg
ret
jle
push
dec
cdq
cld
mov
mov
ins
hlt
jmp
add
pop
outs
push
inc
sub
jle
sti
add
cwde
cmp
ds
inc
pop
movs
mov
lahf
cmps
test
jle
stos
inc
xchg
cld
ret
jmp
mov
icebp
fmul
div
lods
outs
mov
pop
mov
clc
cli
adc
and
lock
(bad)
adc
mov
dec
jne
push
push
jne
clc
add
(bad)
je
pop
cmp
mov
stos
adc
lds
add
ss
jle
add
mov
push
ja
add
mov
add
sbb
adc
sbb
pop
in
je
xor
in
pop
adc
xor
in
out
mov
mov
cs
cmp
push
idiv
mov
cmp
jge
sbb
pop
sub
inc
sbb
cwde
sub
lea
test
outs
or
sbb
or
and
add
je
push
fsub
pop
cmps
(bad)
xor
or
xor
sar
mov
je
xchg
call
pop
jle
xchg
adc
daa
cdq
sbb
scas
popa
sub
aas
scas
xor
and
jg
dec
xchg
cwde
add
es
and
dec
lahf
dec
leave
cmp
test
push
and
jge
push
or
add
cmp
dec
jne
dec
add
add
retf
push
adc
or
adc
or
jle
test
test
or
add
hlt
jl
inc
mov
or
mov
inc
push
push
(bad)
cld
inc
mov
xor
xor
xor
daa
or
popf
fisub
push
enter
ror
sti
xchg
dec
rol
add
arpl
pop
imul
xchg
dec
mov
sbb
inc
add
and
sbb
dec
add
inc
aaa
sub
xor
adc
push
ret
jo
mov
das
sub
xchg
lock
push
or
jnp
add
fld
push
loope
mov
lods
in
ret
dec
jle
or
or
adc
fsubr
das
cmps
pop
out
mov
dec
push
mov
push
dec
xor
(bad)
push
mov
xchg
sub
mul
aas
sar
or
add
cmp
mov
push
sub
call
mov
add
ret
test
popa
add
sahf
cmps
cmp
dec
test
mov
shr
outs
mov
xlat
inc
pop
dec
jbe
jo
dec
lahf
xchg
jle
mov
test
xor
xor
cmp
mov
mov
or
inc
jne
sub
nop
in
and
mov
sar
adc
pop
repnz
xchg
jne
les
mov
jl
xchg
sub
imul
loopne
call
fadd
pop
xchg
je
popf
pop
or
cmp
fcom
pop
enter
adc
lds
mov
sbb
dec
jno
or
cs
or
pop
(bad)
shl
clc
jg
loop
sub
adc
(bad)
or
gs
inc
mov
int
adc
rcl
shl
repnz
(bad)
cmp
add
fucomip
pop
jns
pop
or
add
idiv
jmp
add
adc
movs
nop
ins
pop
mov
jmp
dec
lods
lock
mov
cs
mov
inc
fist
test
dec
(bad)
cvtpi2ps
das
xor
(bad)
je
jns
jecxz
and
xchg
and
and
and
rcl
sub
out
mov
idiv
mov
retf
call
cmp
cmp
push
xchg
cmps
xor
dec
dec
jg
ja
cli
and
pop
test
push
std
mov
enter
inc
cmp
mov
push
mov
(bad)
daa
push
pop
pop
dec
dec
add
add
sti
movs
push
into
mov
enter
add
sbb
nop
xchg
xchg
jne
scas
mov
or
pop
leave
and
es
sub
cmps
test
adc
xchg
retf
mov
mov
push
jns
gs
dec
or
push
inc
addr16
sub
mov
dec
loope
xchg
sub
lods
mov
shl
sbb
mov
inc
jle
add
dec
push
test
jns
dec
push
div
pop
retf
inc
or
daa
mov
mov
xchg
enter
xchg
daa
stos
retf
rcl
adc
pop
enter
xor
stos
dec
push
add
aam
call
hlt
and
sbb
nop
mov
iret
sbb
mov
dec
or
xor
retf
cmp
test
retf
push
inc
aam
jmp
dec
sub
movs
add
xchg
or
mov
ja
movs
jns
pop
or
mov
sub
pop
mov
lock
or
lock
jmp
sbb
daa
sbb
shl
or
inc
not
xchg
in
loope
mov
popf
and
mov
loop
mov
retf
cwde
stc
and
dec
mov
add
sbb
clc
adc
sbb
add
daa
jbe
lods
movs
jmp
add
loope
dec
mov
pop
in
jo
sahf
out
add
shl
cmps
inc
bnd
scas
and
add
xor
in
or
scas
jl
inc
push
daa
into
pop
mov
xchg
add
into
and
push
mov
push
pushf
add
xor
pusha
push
or
ins
sub
ja
dec
sub
inc
iret
test
xchg
dec
jno
mov
jnp
iret
stos
push
bound
out
inc
popf
retf
sbb
adc
xor
stos
mov
test
mov
rcl
cmps
fld
shl
ins
data16
push
add
outs
mov
outs
dec
or
adc
shl
or
ja
sbb
jl
out
sub
enter
cmp
jge
cmp
test
ret
xlat
push
or
stc
mov
mov
dec
call
lods
add
adc
or
push
dec
shl
loope
cli
add
int3
fnstenv
sub
ins
sti
dec
or
inc
mov
dec
fwait
mov
mov
mov
add
add
out
je
pop
inc
adc
push
push
imul
mov
(bad)
mov
xlat
mov
das
fs
retf
mov
cmp
lahf
aad
loopne
into
adc
push
fcom
(bad)
xor
adc
btr
cmp
loope
adc
cld
push
push
inc
ja
cmp
pop
pop
pop
jmp
ret
add
adc
bt
sbb
fild
pop
in
and
dec
idiv
out
sub
or
mov
xor
clc
push
and
cli
pop
ja
push
outs
outs
mov
loop
sbb
jg
ret
mov
les
ret
adc
push
inc
cmp
jne
inc
sbb
inc
in
les
imul
or
add
jmp
xchg
adc
push
cli
jbe
loope
dec
lds
es
call
cmp
shl
jb
call
push
add
cmp
xchg
adc
(bad)
rcr
call
xchg
in
push
push
mov
inc
add
xchg
jmp
adc
imul
and
push
xchg
mov
(bad)
(bad)
ror
(bad)
inc
jo
das
ret
mov
or
xor
mov
and
iret
push
enter
aaa
sbb
lahf
xchg
inc
push
dec
mov
pop
aam
daa
fs
aas
push
ja
xor
xchg
dec
and
loop
sbb
xchg
jo
and
jmp
mov
or
xor
mov
mov
dec
repnz
adc
stos
adc
add
cmps
sub
adc
out
(bad)
sbb
je
addr16
push
inc
mov
cmp
sub
adc
popf
push
inc
mov
fs
or
or
iret
sbb
jns
ds
inc
(bad)
outs
bound
test
and
cmp
fucomi
inc
aad
mov
xchg
lahf
xchg
and
xchg
fisttp
xchg
adc
aas
xchg
sub
mov
popa
int3
adc
mov
shl
sub
or
stc
adc
mov
test
jecxz
cmps
or
or
rcr
pop
cmp
loopne
push
push
cld
sub
rcl
sar
add
mov
lea
push
xchg
or
jb
xchg
sub
xor
push
add
ret
sti
or
packsswb
ss
leave
xor
ret
(bad)
dec
aas
and
mov
sbb
retf
xlat
dec
jmp
jg
push
xchg
mov
popa
(bad)
out
add
xor
sbb
push
pop
pop
pusha
out
aam
sti
int3
in
xchg
inc
(bad)
scas
add
mov
pop
dec
cwde
push
outs
sub
xor
pop
or
call
jecxz
and
add
loope
ja
mov
sahf
dec
push
xchg
mov
lods
mov
adc
xchg
stos
in
mov
arpl
sbb
pop
cmp
mov
add
push
loop
pushf
test
sbb
fimul
add
test
mov
sbb
or
add
retf
fisub
aas
mov
dec
xor
add
inc
xchg
cmp
jo
mov
inc
clc
inc
or
je
cld
retf
and
fcomp
pop
or
add
in
add
or
dec
hlt
xor
pop
adc
sbb
cmp
inc
loopne
mov
xor
inc
or
add
push
and
mov
repz
test
inc
or
js
pop
scas
push
fistp
or
fsub
add
pop
push
fidiv
dec
or
mov
pop
jg
or
push
or
adc
je
add
(bad)
retf
ins
movs
adc
mov
shl
push
xchg
daa
and
jne
ja
inc
(bad)
sbb
fs
or
shr
stos
jecxz
aad
inc
ja
pop
and
fist
fild
jge
shl
ret
test
clc
fs
ja
pop
mov
mov
dec
adc
fdiv
inc
into
and
adc
inc
dec
adc
cwde
jo
out
mov
add
mov
pop
outs
cdq
nop
adc
and
test
and
cs
mov
push
and
mov
movs
clc
mov
sbb
sbb
leave
outs
sub
mov
fdivr
sti
test
add
or
dec
mov
or
and
add
fdivr
call
mov
add
stc
cmp
adc
add
aam
dec
add
jns
fmul
lods
in
adc
int3
fdiv
xor
push
jge
dec
(bad)
and
fimul
jmp
sbb
mov
adc
mov
int
xor
sbb
add
jmp
sbb
int3
or
dec
test
in
xchg
loopne
mov
fidiv
pop
jmp
and
cmp
sbb
lods
into
push
es
adc
or
sbb
pop
retf
jg
add
loope
xchg
scas
out
pop
jmp
and
dec
pop
std
cmp
gs
xor
jge
daa
pop
and
popa
fcom
inc
aam
(bad)
adc
loope
cmovg
push
xor
test
jnp
popa
cmp
mov
or
mov
sbb
ins
outs
push
mov
pop
ret
cmps
pop
sub
jb
scas
ret
lds
ror
adc
das
xchg
xor
xchg
inc
pop
les
push
test
or
rcr
or
add
shr
mov
sar
and
or
or
or
xor
les
xchg
add
mov
in
in
sub
pop
lds
inc
or
sbb
fild
or
xor
imul
in
hlt
or
imul
adc
xchg
lods
and
sbb
or
clc
jge
sar
fs
dec
scas
shr
loop
cmp
pop
fcomp
ret
cmps
push
aas
sbb
clc
jnp
in
gs
loope
rcr
cmp
js
xchg
sub
in
ja
push
sbb
cmps
xor
add
mov
aam
adc
push
mov
mov
pop
pusha
add
adc
pop
inc
lods
inc
ss
(bad)
mov
gs
pop
sbb
adc
mul
or
ss
or
imul
or
or
or
dec
add
xchg
loop
lock
loopne
in
sbb
jl
fsub
(bad)
loopne
jae
pop
jnp
arpl
cmps
adc
mov
sbb
jne
cdq
in
popa
mov
call
repz
inc
jmp
adc
push
add
sub
mov
sbb
xchg
sbb
pop
sbb
sbb
adc
ds
inc
pop
(bad)
mov
or
cdq
inc
movs
test
push
pop
jecxz
add
pop
pop
stos
pop
mov
lods
xor
and
dec
jo
daa
mov
fnsave
cmp
and
inc
clc
(bad)
xor
jmp
and
adc
imul
sub
push
in
sar
not
je
push
add
ins
mov
push
pop
std
aam
popa
(bad)
jae
dec
and
xor
and
test
or
inc
sub
xchg
loop
hlt
jmp
jne
pusha
add
xor
cld
lock
es
jl
in
push
in
pop
test
xchg
shl
add
xchg
cmp
cwde
push
adc
test
mov
out
push
and
fisttp
jnp
jo
dec
dec
test
loopne
jg
jmp
xchg
test
or
xor
xchg
cmp
dec
fwait
mov
xor
ret
jne
out
fdiv
lods
retf
push
pop
sub
cld
retf
popa
aaa
(bad)
inc
mov
xor
dec
cmp
push
mov
pusha
jae
nop
and
sbb
jae
jo
hlt
and
gs
lods
pop
enter
cmp
mov
jg
lock
add
ret
inc
add
mov
es
ror
rcl
adc
xchg
movs
xchg
movs
add
mov
xor
jnp
push
mov
push
or
pop
jl
pop
fwait
loope
mov
sar
data16
adc
cli
mul
sub
jmp
mov
pop
dec
sbb
aaa
xlat
lods
cdq
xor
mov
test
rcl
adc
sti
mov
pop
add
ja
fsubr
inc
pop
(bad)
jl
dec
les
test
jmp
cmp
or
lea
cld
retf
push
jne
jmp
and
out
jmp
(bad)
cmp
les
rcl
(bad)
fistp
sahf
push
xchg
xchg
lock
or
call
pop
fwait
pop
pop
lea
add
push
pop
leave
mov
mov
lods
push
cmp
mov
enter
inc
int3
retf
addr16
mov
jo
xchg
(bad)
dec
shl
nop
call
bound
push
cmp
add
push
dec
(bad)
fldenv
sbb
dec
shr
pop
adc
hlt
jae
pop
and
xchg
and
and
xchg
jge
pop
sub
add
and
test
js
and
mov
xlat
or
ins
jnp
pop
fisttp
mov
sbb
fmulp
jae
lea
int
lock
mov
test
aad
xchg
popa
or
fsub
jnp
pop
sub
out
(bad)
sahf
inc
(bad)
ins
mov
iret
mov
imul
push
fwait
and
ins
frstor
push
or
mov
sbb
push
adc
jne
add
and
sbb
js
mov
or
dec
mov
(bad)
loope
or
stos
inc
in
adc
push
dec
or
pop
mov
sbb
lods
cmp
jne
inc
sub
jno
(bad)
in
dec
clc
jecxz
int
leave
inc
fadd
aas
inc
or
push
call
ja
mov
mov
sbb
inc
xor
ins
add
pop
inc
and
nop
push
add
(bad)
adc
gs
xchg
cmp
neg
dec
clc
(bad)
loope
inc
adc
pop
sub
mov
movs
push
mov
mov
sbb
outs
iret
in
out
add
pop
pop
std
jl
adc
cmps
and
push
(bad)
lea
loopne
aam
jmp
or
pop
and
fwait
(bad)
in
sbb
push
in
cdq
enter
daa
sub
clc
jb
movs
shl
dec
sub
xor
cmp
sub
fdiv
jno
push
(bad)
stc
pop
in
shl
inc
pop
pop
sub
aaa
in
push
and
out
fisub
mov
inc
dec
ret
loope
xor
in
mov
or
cmps
add
test
xor
call
sub
(bad)
cmovae
les
ror
push
pop
pop
pop
jecxz
stos
pop
push
mov
(bad)
imul
loope
adc
and
cmp
loopne
push
mov
call
or
or
jbe
push
or
shl
push
iret
(bad)
push
inc
or
retf
sti
pushf
cmp
add
out
test
push
in
inc
stos
test
scas
pop
cmp
mov
xchg
(bad)
push
sub
dec
out
sbb
add
imul
xchg
js
daa
or
dec
jge
in
dec
dec
or
lock
sbb
ins
or
data16
sub
push
out
and
jmp
loope
or
hlt
je
sub
jle
sub
clc
cmp
sub
push
in
dec
ja
jno
mov
lock
aas
lock
push
(bad)
push
jne
xlat
loop
fild
repnz
xchg
push
mov
icebp
pop
xchg
repnz
xor
scas
sbb
xchg
or
cmp
or
and
cmps
lock
addr16
lds
adc
mov
sbb
and
test
(bad)
imul
je
mov
icebp
jmp
lahf
push
jbe
aam
dec
pop
fwait
xor
pop
rcl
add
adc
js
pusha
and
mov
test
xchg
jg
jmp
test
xchg
mov
mov
jb
dec
hlt
iret
push
xchg
sbb
jo
adc
fild
or
sbb
add
ret
xor
or
add
jle
sbb
cld
scas
or
mov
(bad)
xor
emms
repz
and
pop
cmp
movs
(bad)
pop
inc
pop
add
xlat
push
hlt
test
repnz
adc
fs
pop
loop
imul
add
mov
shl
cmps
sbb
test
loope
ret
push
loope
test
cmp
xchg
add
adc
aam
ja
daa
(bad)
pusha
cmp
div
in
cmc
inc
loopne
sub
dec
sbb
test
sbb
xchg
xor
jb
jmp
push
jmp
mov
xchg
jo
xor
jne
push
mov
or
xor
mov
cli
or
pop
in
or
jne
jmp
in
in
sbb
loopne
sbb
iret
xchg
js
clc
jmp
je
inc
das
push
lock
jne
or
adc
sbb
stos
sti
mov
iret
repz
sbb
cmps
aad
mov
scas
ret
cmps
nop
mov
xchg
push
stos
mov
popf
adc
rcl
mov
push
fst
xor
les
loope
xor
jmp
ret
rcl
fst
fistp
lea
mov
(bad)
add
add
dec
and
imul
cmp
aam
or
imul
inc
push
pop
or
loop
pop
push
pop
fisubr
stc
test
add
stc
cli
clc
sub
pop
(bad)
rcr
loopne
add
mov
leave
adc
stos
hlt
rcl
mov
js
jb
sbb
aam
dec
je
push
stos
adc
and
sub
int
cmp
sub
lahf
inc
sub
jbe
mov
dec
and
and
pop
push
xadd
sbb
pop
mov
and
aaa
sbb
jge
dec
fnstenv
jp
cmp
mov
cmp
xchg
push
nop
cmp
stc
push
fdivr
sbb
stc
pop
test
push
call
add
sub
iret
pop
jecxz
outs
cmp
test
push
mov
push
pop
xchg
add
outs
mov
(bad)
aaa
adc
loopne
test
dec
cdq
sahf
push
ficom
cmp
dec
or
inc
sub
adc
je
fadd
and
movs
neg
mov
pusha
lahf
ror
adc
inc
imul
fadd
mov
data16
and
iret
add
leave
and
add
add
inc
add
adc
jnp
ds
or
or
in
pusha
daa
sbb
add
sti
call
cmp
mov
ret
inc
ss
or
sbb
sub
(bad)
xchg
push
(bad)
ja
scas
cmp
cmp
out
sbb
add
sbb
and
push
mov
cmp
sbb
xchg
jl
pop
(bad)
and
push
add
clc
clc
xor
mov
xchg
pop
add
or
adc
js
add
mov
mov
fisttp
repnz
popa
jmp
add
push
test
sbb
cmp
pop
pop
ret
add
add
push
call
pop
cld
popa
fld
clts
in
fisttp
add
sbb
outs
ror
(bad)
push
push
rol
dec
dec
cld
adc
and
popa
xor
popa
inc
das
xchg
jmp
cld
loopne
xchg
inc
pop
stc
lds
and
cmp
popf
push
out
cdq
push
mov
fsubr
dec
rol
mov
xchg
scas
mov
sbb
adc
mov
inc
inc
add
cmovs
push
add
pop
and
add
push
mov
adc
sub
inc
fadd
cld
pop
push
inc
and
aas
mov
aam
xor
(bad)
and
mov
push
mov
inc
cmp
popf
adc
sub
add
xchg
mov
lods
dec
and
pop
or
pusha
add
cmp
push
push
ds
inc
push
clc
push
loopne
and
mov
daa
mov
pop
mov
sbb
mov
shl
push
dec
sbb
in
adc
je
in
sub
sub
jecxz
retf
pushf
add
(bad)
mov
movs
int3
pop
and
cmp
inc
repz
cmp
mov
out
lea
adc
or
sub
mov
inc
inc
ja
call
mov
xlat
pmaxsw
push
xchg
mov
xchg
cwde
adc
stos
inc
jl
ins
test
adc
jns
bound
stos
lock
dec
scas
xchg
retf
inc
ret
clc
mov
adc
sub
adc
mov
test
push
adc
outs
xor
or
pop
shl
adc
lock
(bad)
retf
test
add
dec
xor
adc
inc
loopne
add
lock
call
xor
add
(bad)
fcomi
sbb
xchg
add
jbe
pushf
xchg
adc
push
adc
push
cmps
loopne
or
fmul
and
cmp
adc
ja
test
inc
mov
mov
mov
pushf
or
loop
pop
int3
sub
test
in
xor
mov
test
sbb
div
daa
cmp
mov
push
jg
mov
add
jmp
adc
adc
push
xchg
inc
(bad)
lock
cmp
and
popa
jmp
fsubr
sbb
imul
and
add
loope
iret
ss
xor
daa
rol
push
jb
loope
xchg
aam
jmp
mov
mov
or
div
aad
inc
or
push
fisttp
aaa
sbb
mov
fsubr
sbb
push
stos
xchg
add
inc
movs
mov
mov
jecxz
sbb
pop
in
fisub
mov
movs
push
adc
push
lods
and
dec
inc
xor
push
repnz
push
sbb
addr16
loop
cmp
push
or
ins
adc
jmp
add
popa
xchg
mov
inc
sahf
adc
pop
ret
fild
mov
dec
nop
pop
test
data16
push
mov
sub
stc
dec
and
xchg
aaa
xchg
test
dec
(bad)
cmps
jmp
and
rcl
mov
add
aaa
or
or
sbb
in
hlt
loope
repz
leave
sbb
xor
mov
pop
sub
cwde
dec
mov
xor
shl
sub
mov
iret
movs
mov
stos
dec
arpl
inc
or
sbb
in
lods
call
or
in
test
and
pop
mov
je
rcl
sub
pusha
imul
mov
shl
les
cmp
xor
sub
inc
mov
scas
iret
mov
push
bound
xor
loopne
popf
fs
(bad)
cmp
je
ins
adc
das
js
adc
les
inc
cmp
mov
push
ror
and
pop
push
mov
bound
xchg
pop
xchg
push
pop
adc
lock
mov
add
cwde
xor
add
(bad)
shr
sub
(bad)
ret
shr
(bad)
es
aas
ret
jge
or
pop
jmp
jl
fimul
call
lods
sub
aam
jmp
test
or
arpl
xchg
bnd
dec
in
mov
(bad)
jmp
add
xchg
or
push
cdq
push
aad
cs
pop
inc
ror
loopne
inc
add
fsubr
jmp
jae
and
push
adc
cmp
std
movs
test
ds
dec
mov
add
mov
jae
cmp
xor
scas
adc
cdq
push
push
pushf
out
rcr
xor
dec
clc
fwait
movs
adc
test
xor
or
fdiv
or
mov
and
arpl
jecxz
inc
lods
lahf
aaa
nop
sub
or
add
rcl
sub
cli
lods
ret
push
adc
pop
and
dec
idiv
mov
add
sub
push
adc
adc
xchg
cmp
ss
idiv
fstp
push
pop
push
stos
lock
jae
lahf
lods
xchg
or
xchg
xchg
test
iret
push
cmp
lea
add
inc
outs
xchg
xlat
into
mov
inc
shl
add
jle
add
mov
inc
lahf
add
in
test
add
nop
mov
or
leave
nop
pop
or
sub
adc
cmp
je
test
mov
mov
inc
call
or
gs
xchg
neg
mov
data16
je
nop
dec
ror
outs
or
inc
xor
pusha
mov
js
pop
or
jge
mov
cwde
sar
stc
popa
push
ins
lahf
movs
sbb
add
stc
cmp
cmp
movs
add
mov
sbb
aas
dec
cs
adc
jp
cmps
mov
xor
test
dec
out
scas
aaa
jne
xor
leave
adc
nop
add
mov
pop
leave
nop
pop
outs
lods
add
add
mov
mov
sub
xchg
jle
sub
fst
mov
inc
mov
or
mov
mov
mov
add
add
shl
fiadd
or
or
or
cmps
mov
ficomp
xor
push
ja
lods
cmp
sbb
push
enter
mov
and
loope
nop
add
and
cmp
jnp
in
push
fs
jns
cmp
jg
jae
fwait
hlt
std
jmp
add
jp
ret
inc
sub
push
push
mov
push
or
and
leave
xor
rol
or
sub
push
sti
jg
pop
pop
mov
add
ror
sub
stc
fs
je
pop
rcr
nop
test
or
or
or
push
out
fcomp
lods
loope
cmp
jecxz
push
sbb
add
jb
mov
adc
pop
imul
adc
fld
push
cli
add
clc
add
dec
push
cmps
cmp
push
adc
adc
inc
dec
test
or
cli
push
daa
pop
or
adc
pop
cld
push
inc
je
movs
das
add
push
and
mov
and
inc
jne
fidivr
loope
invd
pop
or
nop
adc
push
sbb
inc
pop
enter
inc
rcr
nop
push
and
sbb
daa
inc
xor
sbb
jns
jb
sbb
sbb
and
sbb
sbb
pop
enter
sbb
hlt
inc
and
and
pop
adc
mov
or
sbb
sbb
pushf
or
inc
aad
and
cmp
hlt
inc
sbb
dec
test
xchg
mov
or
xchg
push
cld
aam
push
push
mov
push
and
inc
es
push
test
add
sub
pop
add
mov
nop
pop
std
adc
pop
imul
sbb
loope
and
adc
or
add
test
and
in
jb
std
or
push
mov
in
mov
and
gs
xor
ds
inc
adc
xchg
sbb
add
test
inc
cmp
sub
cmp
les
cmc
sub
mov
mov
fild
mov
sbb
adc
out
pop
xor
out
or
lds
xlat
cld
sub
jle
jns
dec
cmp
hlt
jg
clc
inc
cmp
pop
push
test
(bad)
sub
or
or
or
ret
rol
fsub
fist
rcr
push
pop
inc
mov
dec
cdq
jo
or
rol
inc
lock
retf
cwde
fnstcw
dec
ret
cdq
sub
sub
lods
push
sbb
shl
or
jo
lea
inc
and
nop
mov
nop
push
sub
mov
adc
in
lds
clc
out
adc
jno
inc
rol
ins
xor
mov
mov
ds
int
mov
test
ret
(bad)
xor
and
inc
cld
js
jae
mov
iret
jg
mov
aaa
jge
arpl
jmp
sbb
aaa
xchg
rcl
fwait
daa
push
pop
aam
ins
adc
xchg
test
cli
or
(bad)
xor
in
xor
mov
test
cdq
mov
fnstenv
mov
lods
shl
jge
xchg
test
pusha
jne
(bad)
out
call
lock
inc
add
ds
and
(bad)
cs
xchg
push
and
cmp
(bad)
adc
and
pushf
imul
adc
fwait
add
adc
sbb
mov
call
imul
fld
in
mov
adc
mov
iret
in
add
push
or
inc
ss
fisttp
jmp
ret
fcos
inc
push
and
push
adc
sbb
add
ficom
add
fmul
cmp
push
mov
je
pop
cld
xchg
fiadd
imul
xlat
adc
dec
or
test
cmp
add
adc
cmp
neg
sub
fcom
sahf
adc
sub
add
and
sub
or
sbb
cmp
push
cmp
add
in
ror
jmp
fld
mov
(bad)
cmp
push
lea
out
fcomp
mov
pop
out
pop
sbb
cmps
f2xm1
cmp
dec
leave
sub
push
loope
jl
xlat
cmp
jge
cmp
pop
nop
or
pop
dec
add
sar
mov
add
loopne
cmp
daa
movs
adc
cmp
add
mov
jg
sub
leave
pop
and
rol
adc
dec
cmp
shl
daa
xchg
ret
adc
mov
xchg
mov
adc
lea
xchg
nop
sbb
or
or
add
mov
scas
and
rol
push
sbb
movs
add
inc
sbb
jecxz
add
mov
out
or
push
vmread
or
adc
pop
dec
clc
fcmove
inc
mov
pop
push
imul
sub
sub
or
pop
out
sbb
in
adc
fild
xor
jecxz
ret
xor
xor
sar
xchg
push
int3
into
(bad)
ss
fs
mov
pop
lahf
pop
sub
clc
jbe
mov
or
mov
mov
add
and
add
cs
pop
call
aas
mov
daa
mov
mov
leave
mov
inc
mov
imul
xchg
mov
cmps
add
inc
add
or
loopne
pop
adc
call
add
cli
pop
mov
jmp
(bad)
cmp
and
scas
jle
inc
add
push
add
mov
xchg
jmp
shl
lea
int3
out
mov
mov
dec
mov
test
pop
sbb
jbe
adc
mov
dec
pushf
fwait
fs
or
gs
pushf
cdq
nop
inc
fidiv
int3
loopne
fdiv
repnz
push
fsubr
(bad)
mov
push
adc
pop
cmp
add
mov
rcr
and
test
cmp
add
adc
or
enter
sbb
pop
or
and
push
inc
pop
pop
cmp
idiv
loopne
inc
and
add
push
adc
xor
jb
jp
ja
or
or
inc
jb
shr
int3
add
dec
lock
(bad)
idiv
jp
add
ror
and
les
xchg
and
sbb
test
xor
sbb
inc
call
aas
or
adc
lea
js
push
into
nop
or
sub
pop
add
fcmove
and
out
lods
adc
das
fldenv
sbb
std
jle
mov
sub
adc
adc
pop
lods
or
mov
push
and
loopne
pop
or
and
arpl
pop
adc
minps
cmps
adc
ror
dec
xor
aaa
les
test
lock
inc
jno
mov
loopne
loopne
cld
pop
mov
push
test
xlat
aad
jnp
or
mov
retf
imul
add
adc
push
add
mov
or
ret
and
adc
mov
or
adc
sbb
dec
pop
push
adc
in
dec
ror
ss
xchg
ins
je
mov
pop
push
inc
adc
add
popa
mov
cmp
or
jmp
cmp
add
(bad)
out
jle
fiadd
ins
jle
or
jle
mov
in
adc
stos
adc
out
aam
xchg
daa
add
jnp
daa
iret
in
add
or
push
pop
and
ret
sbb
bound
adc
inc
cmp
lea
idiv
fisttp
call
(bad)
mov
scas
mov
das
pop
mov
inc
ins
or
imul
push
adc
adc
clc
xor
adc
push
sbb
or
sbb
inc
or
js
xor
mov
mov
jae
sub
or
mov
jne
xor
or
loope
sbb
pop
push
mov
scas
sbb
add
and
add
mov
sub
sub
add
aaa
aas
jo
and
jb
cli
add
xchg
pusha
or
xchg
jnp
rcl
addr16
push
sbb
adc
pop
sbb
leave
inc
xchg
and
test
lods
jg
bound
xor
inc
fadd
or
cmp
shr
or
sti
mov
out
lock
xor
mov
inc
jmp
lock
(bad)
mov
ret
test
add
(bad)
and
xchg
ins
or
xor
mov
add
xchg
inc
push
dec
mov
pop
pusha
mov
test
retf
xor
scas
xchg
inc
movs
sbb
ja
xchg
sbb
pop
fmul
adc
jbe
rcr
push
inc
cmp
nop
cmp
leave
or
daa
mov
test
pop
inc
adc
shl
dec
rol
mov
ret
sub
adc
sub
inc
or
xchg
loopne
pop
adc
ds
sub
cmps
add
pushf
scas
sahf
dec
or
inc
sbb
aas
xchg
push
mov
push
cmp
sub
scas
js
adc
ins
sbb
mov
inc
enter
dec
push
xor
jb
push
enter
mov
imul
mov
or
jno
fs
fadd
adc
mov
or
mov
push
stc
cdq
pop
xor
fcom
jo
mov
sbb
or
out
inc
mov
xor
xchg
sub
mov
jbe
stos
rcr
xor
pop
test
mov
sti
push
inc
adc
add
ror
retf
xchg
dec
xchg
dec
shl
mov
mov
adc
je
shr
mov
push
push
cmp
add
mov
ja
nop
mov
popf
call
inc
ret
xor
inc
out
and
adc
(bad)
sub
ins
dec
bound
jb
jb
adc
dec
adc
rol
ins
in
cmp
cmp
inc
push
and
push
lahf
pop
and
mov
pusha
dec
inc
or
xor
or
or
xchg
test
or
js
and
ret
jo
loop
push
xor
paddusw
inc
cmp
gs
(bad)
xchg
xchg
mov
mov
gs
add
xor
cmp
dec
scas
loope
xor
inc
pop
psubsb
imul
pusha
jle
cmp
pop
inc
sahf
jecxz
sub
ss
nop
cmp
ins
jno
push
sub
imul
push
mov
dec
dec
and
loop
mov
push
imul
pop
lods
lahf
loopne
adc
push
out
test
dec
adc
mov
cmp
es
adc
pop
cmp
push
inc
sar
leave
pop
cdq
cmp
inc
jl
add
add
xchg
dec
pop
pop
lods
add
pop
and
jl
ds
cwde
cmp
ds
js
test
(bad)
push
das
mov
cld
retf
das
hlt
cld
in
ds
adc
dec
aaa
add
dec
stc
daa
movs
nop
scas
outs
adc
je
dec
push
xchg
cmp
cld
out
pop
pop
mov
ret
cld
sar
or
dec
add
add
pop
mov
mov
bound
stos
fcmovbe
jmp
rol
movs
add
jl
xor
push
dec
sbb
mov
add
inc
nop
sub
inc
mov
cmp
inc
dec
xchg
seto
inc
dec
xchg
and
je
or
sub
inc
pusha
in
xor
cmp
es
das
and
test
cmp
loopne
(bad)
into
jg
repnz
repnz
or
inc
dec
(bad)
aad
mov
pop
leave
ror
lock
dec
xor
dec
leave
adc
and
dec
dec
xor
dec
ror
ins
add
pop
pop
ror
adc
push
fwait
inc
les
sbb
faddp
fwait
sub
test
repz
dec
cmp
push
pop
rol
js
push
clc
(bad)
or
fiadd
rcl
dec
xor
dec
adc
and
push
sar
dec
xor
dec
mov
adc
adc
packuswb
out
jae
mov
cmp
dec
adc
cs
push
push
inc
enter
xchg
in
leave
jp
adc
repnz
in
mov
jns
xor
pop
dec
cmp
test
repnz
dec
pushf
pushf
pushf
mov
popa
cwde
into
dec
dec
inc
sahf
sbb
jl
mov
aas
and
cmps
dec
mov
fcomp
add
lods
and
jae
add
pop
xchg
dec
and
or
dec
add
aam
push
ins
adc
sub
mov
test
push
jne
push
xchg
pushf
xchg
add
dec
lea
mov
mov
je
dec
mov
xchg
ins
push
mov
mov
push
inc
xchg
mov
jo
jbe
aam
loop
adc
enter
add
dec
dec
cwde
ins
and
mov
dec
xchg
xor
pop
adc
and
das
add
adc
test
jo
add
adc
ss
add
pop
xor
call
add
fiadd
mov
dec
jno
push
add
jns
stc
dec
or
add
or
or
add
add
dec
sahf
imul
sbb
stc
stos
popf
dec
add
or
add
stc
sub
or
dec
mov
(bad)
pushf
mov
mov
inc
nop
hlt
inc
mov
dec
dec
pop
int
stc
add
add
mov
push
in
adc
bnd
movs
imul
or
xchg
test
shr
pop
outs
jo
add
xor
cwde
inc
fcom
les
fcmovbe
nop
jge
inc
push
jno
rol
sbb
dec
jns
push
int3
and
push
dec
cmp
push
xchg
dec
xchg
jl
xor
dec
movs
xor
sub
dec
xchg
push
dec
xchg
mov
jo
inc
mov
jno
call
push
loop
pop
pop
and
mov
(bad)
retf
retf
mov
push
std
into
or
push
data16
in
repnz
mov
dec
add
std
clc
std
in
in
sar
dec
xchg
inc
dec
packssdw
je
cdq
(bad)
int
daa
sbb
leave
xchg
mov
or
jg
adc
xlat
leave
leave
in
repz
inc
or
sub
leave
mov
out
icebp
mov
clc
stc
add
cmps
icebp
add
rcr
leave
push
cli
dec
test
and
icebp
int3
cli
inc
pop
and
imul
dec
sbb
fwait
imul
and
lock
cld
outs
in
xor
and
rcr
sub
enter
popa
push
dec
mov
add
sbb
call
mov
dec
shl
adc
or
dec
push
and
add
clc
aas
adc
add
push
les
add
sbb
retf
dec
xchg
test
push
mov
mov
je
mov
daa
retf
lods
mov
sbb
inc
sbb
pop
imul
push
fxch
cld
shl
or
xchg
lock
and
leave
inc
and
mov
inc
or
movs
sub
push
add
lods
mov
dec
loopne
ficom
inc
push
mov
add
push
mov
push
dec
add
mov
dec
inc
push
or
fst
ret
clc
adc
(bad)
xor
add
add
mov
data16
mov
test
rcl
in
or
inc
inc
iret
scas
xlat
xchg
(bad)
ja
add
adc
sbb
push
inc
rcl
sub
int3
ins
and
or
ja
cdq
mov
sbb
cdq
shl
aas
xchg
fsub
jbe
adc
pop
push
mov
or
retw
xchg
dec
and
loopne
or
loopne
mov
dec
adc
lds
push
aaa
repz
dec
mov
push
clc
ds
aas
clc
mov
adc
(bad)
retf
cmp
shl
inc
fild
and
(bad)
shl
nop
or
loop
popf
add
sbb
in
daa
adc
adc
push
fsubr
fmul
jle
dec
les
ret
mov
xchg
jg
shr
sub
push
loopne
sbb
repz
dec
clc
(bad)
ins
dec
or
xchg
adc
std
xor
sahf
inc
in
jo
push
retf
inc
mov
and
cld
push
xchg
sti
pop
sub
push
sub
jae
cmps
cmp
inc
sbb
jne
adc
add
shl
pop
xor
adc
imul
jmp
sbb
pop
fadd
cmovs
push
cmp
(bad)
(bad)
movs
cli
push
and
adc
pop
ds
and
sti
mov
and
xchg
jae
sbb
add
mov
fcmovb
sub
ja
and
mov
push
jl
push
add
or
pop
dec
fcom
push
and
sbb
xor
push
inc
jmp
sub
sbb
sar
xor
push
les
sbb
adc
(bad)
push
enter
mov
xchg
pop
das
sbb
jbe
push
sbb
or
lods
xor
add
iret
rol
enter
je
pop
mov
dec
pop
ret
mov
add
dec
sub
cdq
pusha
fmul
mov
fbstp
std
push
mov
push
enter
inc
sete
mov
not
sub
adc
xchg
and
sub
icebp
sub
imul
mov
cmp
and
push
inc
add
sbb
mov
and
xor
push
or
sysexit
push
js
cmp
xchg
add
shr
sbb
mov
sub
ss
jmp
ret
je
test
enter
push
adc
inc
lock
cld
cmp
fidiv
mov
cmps
adc
sti
dec
ror
iret
and
ja
push
mov
fsub
push
mov
dec
icebp
mov
or
(bad)
imul
xor
add
sbb
test
mov
scas
or
sub
(bad)
clc
xor
adc
jmp
jne
dec
push
test
js
push
mov
push
pusha
and
iret
mov
pop
div
lock
data16
push
push
scas
jo
outs
inc
daa
inc
and
sub
jno
nop
dec
mov
mov
icebp
inc
add
outs
enter
ret
push
jo
pusha
adc
xor
aaa
sbb
je
pusha
jnp
cs
mov
js
mov
sub
cs
pop
add
test
push
push
loope
xchg
aam
inc
jmp
jo
and
arpl
mov
repz
scas
jmp
jmp
(bad)
mov
cli
cmp
call
ret
push
mov
sub
pop
jg
js
movs
dec
xchg
inc
loope
pop
sbb
cmp
and
fdiv
adc
(bad)
or
or
ret
and
psubsb
lahf
in
and
fwait
mov
jl
inc
push
xor
and
lea
add
adc
xor
mov
add
mov
cmp
jmp
ror
jp
retf
cmp
lahf
ret
mov
call
jno
xor
daa
jmp
jl
or
inc
push
inc
fadd
jo
loopne
cmp
adc
in
add
in
in
rcr
sbb
jmp
push
cmp
movs
adc
jne
sub
cmovge
mov
inc
xchg
pop
lds
icebp
jo
and
push
xor
mov
xor
xchg
in
icebp
mov
out
int3
push
daa
loop
not
in
test
je
push
out
xchg
dec
inc
ja
imul
sub
xor
dec
std
ret
xor
jmp
pop
sbb
retf
pop
pop
inc
adc
xchg
sar
mov
pop
cdq
mov
push
xchg
mov
or
adc
shl
out
imul
loopne
and
nop
cmp
push
mov
add
addr16
test
or
dec
sbb
(bad)
lock
pop
jmp
(bad)
sub
sub
das
pop
loope
add
xor
fimul
mov
dec
inc
xor
scas
ja
in
lods
cmp
test
xchg
pusha
pop
adc
out
add
sbb
movs
mov
add
retf
dec
fcmovnu
mov
pop
add
sub
je
lds
(bad)
out
aas
lock
fsubp
test
(bad)
fiadd
mov
adc
daa
dec
pop
hlt
cmp
add
in
mov
push
repz
cmp
dec
arpl
pop
ins
cmp
repz
pop
xor
leave
loope
dec
arpl
adc
adc
sbb
cmp
add
or
push
sub
inc
adc
movs
pop
aas
dec
cmps
fsubr
push
add
cmp
fmul
fs
adc
aam
in
add
jns
add
dec
std
add
movs
in
mov
add
or
jl
jo
dec
xor
int3
repnz
arpl
adc
pop
data16
pusha
or
leave
and
mov
and
add
es
dec
aaa
in
push
bound
push
jo
fimul
rol
test
sub
addr16
sar
cmp
and
ror
or
inc
xchg
test
pop
dec
xor
loop
or
cmp
and
jle
add
add
retf
push
leave
nop
(bad)
sub
or
add
push
cmps
push
sbb
in
xor
sub
sbb
cmc
stos
or
movs
ret
movs
adc
add
inc
push
cmp
pop
add
add
xor
dec
jae
adc
int3
or
xchg
add
sbb
xchg
data16
add
xchg
adc
jae
add
ins
push
push
jle
repnz
jb
adc
jle
js
xor
sbb
pop
or
pop
push
xor
jb
sub
call
dec
mov
std
add
sbb
stos
inc
adc
test
mov
xchg
and
out
fcom
es
mov
in
outs
inc
mov
inc
dec
repnz
sbb
imul
sbb
(bad)
popf
add
xor
cs
nop
mul
clc
(bad)
mov
sub
pop
cmp
dec
jne
nop
fld
ja
mov
stos
lahf
loopne
dec
aaa
scas
push
cmp
ja
outs
and
add
xchg
sbb
out
dec
push
or
aas
repz
imul
xchg
xor
xor
std
(bad)
(bad)
push
imul
inc
add
add
dec
or
enter
dec
xchg
(bad)
shl
mov
jl
mov
cmp
push
xor
jmp
lahf
test
adc
cmp
int3
popa
cmp
and
pop
cmp
xchg
popa
daa
movs
adc
leave
push
sti
daa
lock
bound
pop
adc
adc
add
fcom
sti
addr16
jo
movs
test
je
repz
push
xchg
dec
cmp
push
inc
mov
mov
imul
mov
enter
and
mov
xchg
stos
cmc
xchg
push
or
cmp
xor
or
bound
mov
call
and
imul
shl
outs
jmp
out
jmp
inc
adc
add
mov
outs
adc
pmaxsw
push
pop
inc
pop
sbb
aaa
cmp
icebp
inc
jp
cmc
or
jae
sub
mov
in
(bad)
gs
sub
aaa
pop
in
sbb
or
push
clc
sub
pushw
push
daa
jo
imul
je
push
jo
fs
add
jno
call
push
xchg
mov
mov
fcmovne
clc
dec
sbb
adc
xchg
xor
sbb
inc
(bad)
xchg
dec
and
je
xchg
and
stc
das
in
ficomp
jne
and
push
gs
jp
pop
(bad)
fisttp
push
sub
mov
or
xchg
mov
mov
dec
aam
adc
cmps
push
add
or
or
inc
pop
push
enter
outs
enter
bound
icebp
mov
inc
mov
mov
inc
aad
adc
gs
or
mov
hlt
popa
or
jb
stos
add
pop
(bad)
cwde
cmp
ja
sub
test
cwde
adc
push
int
jbe
inc
sub
fcom
sbb
sbb
inc
call
fst
test
or
out
add
pop
les
mov
mov
jno
xlat
pop
cmp
pop
sub
push
mov
mov
ds
pop
lahf
jne
shl
sbb
cmp
bound
js
mov
add
test
and
xchg
call
pusha
sbb
push
xor
xor
jecxz
adc
mov
xchg
mov
sbb
(bad)
jbe
inc
inc
xor
push
aam
shl
shl
aam
mov
or
pop
push
int3
dec
int3
xor
jmp
inc
enter
jb
cmc
and
or
ret
mov
ds
inc
neg
jl
sub
fsubr
out
imul
in
movs
imul
push
test
xor
push
stos
or
int3
xor
cmp
cmp
cmps
fisub
cmovle
call
sub
pop
fld
xor
(bad)
jmp
cmp
cvtps2pi
pop
add
push
imul
pop
clc
pop
sub
ret
loop
or
add
cmp
mov
mov
in
sbb
or
out
shl
or
enter
mov
pop
inc
jmp
sub
out
xchg
outs
jmp
xor
dec
clc
sub
push
or
push
aam
arpl
es
or
loopne
xchg
pop
or
addr16
xor
push
fild
cdq
lods
popf
xchg
(bad)
xor
jae
add
daa
cdq
movs
add
xchg
adc
and
fsub
lea
push
fadd
push
popa
clc
out
adc
fmul
mov
pcmpeqd
mov
mov
sbb
and
mov
fidiv
jl
jbe
xlat
or
add
aam
jecxz
aas
pop
outs
jne
jge
add
mov
xor
out
mov
sbb
jl
mov
loopne
cmp
add
xor
mul
or
adc
mov
(bad)
cmp
ret
mov
push
js
sbb
nop
iret
and
and
test
mov
jmp
sbb
gs
xor
fcom
push
mov
mov
test
or
pop
sub
clc
sub
pop
jp
push
popa
push
ss
lock
popf
mov
cmp
push
mov
out
push
adc
adc
outs
xlat
pop
dec
fstp
pop
in
lea
lds
outs
inc
cdq
imul
dec
xor
and
paddd
imul
mov
lock
jne
into
inc
fcomp
ret
and
test
mov
pop
xor
inc
hlt
xchg
xchg
fmul
arpl
rol
adc
or
inc
pop
or
test
(bad)
and
mov
push
loop
adc
push
xor
aam
cmps
adc
ret
and
fadd
jmp
not
js
sbb
mov
xor
dec
aaa
add
cmp
ss
popa
jb
jmp
adc
dec
jle
les
(bad)
and
mov
(bad)
dec
and
out
subps
dec
cld
or
jo
repz
dec
or
adc
xor
dec
loope
inc
cmps
dec
sti
pop
and
and
ins
cmp
push
jl
in
popa
cmp
inc
jl
in
dec
add
ret
icebp
popa
jno
dec
pop
loope
inc
jnp
adc
outs
add
cmp
mov
add
lods
hlt
in
retf
sub
enter
or
mov
retf
rcl
das
loopne
sub
lock
sbb
pop
xchg
inc
jle
pop
mov
xchg
dec
loop
loopne
jge
rsm
loopne
mov
jmp
cmp
movs
fwait
mov
sub
adc
scas
sub
pop
rcl
pop
pop
dec
cmp
out
pusha
stc
ds
inc
bound
ret
inc
pop
shl
int
add
clc
imul
push
and
(bad)
dec
push
test
mov
or
jo
in
or
pushf
and
add
adc
jp
xor
fcomp
push
ror
jo
ins
jns
mov
lea
(bad)
fiadd
pusha
cmovb
jl
js
mov
add
xchg
jo
jl
pop
pop
adc
or
pop
add
dec
mov
ss
or
popa
mov
js
fcmovnu
mov
or
jno
dec
fs
sub
(bad)
jnp
cmp
sbb
rol
lock
clc
push
int3
cmp
(bad)
test
dec
dec
adc
cmp
xor
jg
mov
hlt
pushf
push
or
movs
sub
push
jnp
loop
mov
clc
jne
mov
sbb
mov
sub
jae
sahf
idiv
loopne
ror
jle
pop
pop
neg
out
pop
ds
leave
mov
mov
ret
test
mov
retf
push
adc
loopne
cmps
or
push
imul
fdiv
pop
enter
pop
imul
(bad)
or
jbe
dec
adc
ss
arpl
push
mov
push
loopne
fild
cmps
dec
cmp
and
xor
(bad)
fsub
aad
leave
fsubr
inc
mov
pop
sub
adc
mov
jne
js
cdq
mov
sti
and
mov
shr
rcl
aam
pop
cmp
aam
pop
or
push
add
movs
xchg
mov
cmc
push
jmp
dec
nop
shr
jl
ja
adc
and
iret
mov
xchg
push
aas
js
ret
imul
mov
adc
inc
add
loop
pop
mov
cwde
inc
rol
int
and
jge
and
data16
jp
push
mov
daa
jno
pop
xchg
(bad)
dec
xlat
call
sbb
push
ja
dec
stos
ficom
ins
int3
add
and
pop
fisub
leave
mov
push
sub
jmp
cwde
or
rol
pop
fsubr
movs
mov
jmp
inc
lods
push
sbb
ins
mov
push
cmp
sti
ja
pop
out
cmp
sub
pop
call
jne
pop
or
jmp
jmp
sub
lar
mov
sbb
mov
add
or
or
pop
mov
pop
push
icebp
adc
or
pop
and
ret
sub
ins
sbb
xchg
mov
sub
sub
outs
mov
adc
cmc
rol
mov
push
int
push
mov
stos
add
loopne
call
pop
xor
mov
ins
inc
stos
pop
add
fadd
inc
pop
xor
sbb
mov
xchg
clc
xchg
leave
sub
fistp
lock
popa
push
lock
dec
dec
mov
loop
fwait
or
xchg
sbb
pop
sub
sbb
sub
jno
jecxz
sub
repz
add
jge
cld
add
test
inc
fwait
sub
or
or
retf
vhsubpd
sbb
push
pop
xor
mov
sub
jo
sub
inc
pop
mov
test
mov
add
mov
mov
and
call
fadd
cdq
je
xchg
inc
fild
ror
adc
sub
test
lock
fsub
ja
adc
test
sub
movs
mov
fstp
cmp
adc
ffreep
pop
fs
mov
jecxz
and
push
adc
js
or
jg
loopne
stos
ret
mov
lds
out
inc
mov
std
outs
mov
push
or
add
pop
cs
mov
xchg
das
je
xlat
cli
stos
inc
xchg
cmp
movs
leave
gs
dec
inc
sbb
nop
xchg
imul
ins
mov
stos
je
(bad)
call
jmp
ror
outs
bound
dec
add
jb
test
loopne
cmp
inc
jnp
pop
inc
mov
sub
pop
mov
leave
adc
inc
(bad)
push
in
and
hlt
shl
jns
in
or
repz
lock
lock
imul
xchg
push
inc
jb
in
in
cmp
jo
adc
in
call
mov
cmp
or
sub
add
xadd
jne
cs
mov
sub
jne
(bad)
in
add
mov
dec
adc
push
sbb
cld
iret
dec
adc
or
xchg
out
adc
test
daa
mov
xor
adc
inc
cdq
or
outs
xchg
add
mov
rcl
and
and
or
sub
(bad)
or
inc
addr16
jno
shr
dec
fidivr
pop
add
mov
dec
pusha
leave
repz
push
ins
push
jle
mov
mov
aad
in
iret
repz
out
test
jge
call
push
xlat
or
pop
and
pop
and
and
inc
xor
add
xor
(bad)
mov
mov
xor
shr
rcr
push
adc
and
sti
jmp
mov
xchg
sub
sbb
sbb
arpl
mov
adc
xchg
push
dec
fild
pop
push
push
xchg
sbb
xchg
cmp
repnz
mov
hlt
movs
push
pop
fidiv
mov
icebp
sub
push
daa
jge
(bad)
in
das
adc
fistp
in
scas
sbb
in
cmp
stc
pop
pop
outs
mov
cld
and
fsubr
mov
sub
xchg
fcomp
int3
adc
mov
imul
bound
in
mov
push
pop
sub
stos
push
lea
mov
or
imul
out
jl
sub
mov
jle
ja
jecxz
inc
and
std
jmp
mov
(bad)
fld
hlt
add
cmp
dec
fld
push
mov
packuswb
pop
lock
in
fdiv
push
in
mov
ds
shr
pop
pop
mov
nop
mov
les
test
aaa
call
xor
or
cmps
in
jae
sub
fwait
mov
xchg
ds
pop
and
jmp
daa
fwait
adc
fidivr
jbe
fs
outs
iret
jbe
repz
pop
xor
push
mov
dec
mov
ds
fstp
jmp
mov
jnp
xor
jo
pop
arpl
sub
jnp
pop
push
and
dec
xlat
xlat
push
mov
or
xor
push
pop
fnstenv
sub
fbld
push
(bad)
adc
mov
push
add
or
dec
(bad)
xchg
mov
lds
enter
lock
mov
scas
jbe
dec
cwde
mov
cmp
dec
in
jecxz
nop
sub
adc
adc
push
adc
fs
sbb
call
je
push
mov
lea
inc
pop
mov
pop
cmp
jo
push
out
shl
jge
(bad)
call
inc
jnp
push
xlat
push
fimul
and
push
call
dec
push
into
shl
xchg
push
in
mov
fmul
ss
jg
das
sub
adc
mov
inc
sbb
inc
sbb
sbb
pop
xchg
push
retf
push
scas
shr
pop
scas
push
test
call
xor
adc
stos
gs
or
dec
popa
and
mov
add
pop
retf
daa
mov
iret
add
and
cdq
sbb
mov
sub
in
loopne
push
add
xchg
sbb
mov
lods
test
ins
stos
push
test
cmp
xor
ret
lods
add
lods
dec
inc
jmp
inc
lahf
stos
or
push
in
sub
add
xchg
imul
sbb
lock
mov
jmp
xor
cmc
add
rcr
fdivr
xchg
inc
xlat
add
sub
rol
add
dec
sub
shl
dec
mov
jge
scas
cmp
lahf
aam
fs
dec
call
inc
loope
lock
mov
(bad)
inc
pop
sub
aas
sbb
xor
fdivr
xchg
js
sub
jnp
cmp
inc
push
call
xchg
out
jns
pop
mov
lock
xchg
out
fsubr
add
pop
cs
sub
xchg
out
push
inc
imul
in
sbb
inc
adc
jge
add
shl
mov
xor
test
mov
pop
cs
arpl
sub
jns
xor
lock
and
xor
daa
sub
aas
inc
clc
xor
sub
ins
sub
hlt
push
cld
imul
mul
ret
in
jmp
mov
or
sub
jmp
xlat
push
sbb
and
add
pop
or
pop
xor
and
mov
test
sbb
xor
inc
add
xor
les
cdq
pop
dec
mov
and
ds
popa
fisubr
clc
outs
mov
pop
arpl
adc
sbb
xchg
pop
push
add
dec
and
test
pop
push
and
push
add
call
(bad)
or
add
and
pusha
xchg
jg
ror
(bad)
jg
mov
mov
popa
bnd
dec
sar
sub
mov
mov
sbb
or
aaa
mov
or
add
mov
repnz
push
or
push
adc
leave
adc
ins
aam
in
ret
xchg
push
cmp
int
enter
ret
fst
xor
or
lods
fistp
cld
and
pop
add
xchg
pop
and
dec
adc
add
and
mov
pop
dec
imul
add
out
cdq
mov
loopne
adc
cdq
(bad)
dec
inc
cmp
test
call
mov
mov
fbld
xor
jl
hlt
test
les
jne
sub
dec
fwait
fs
imul
jne
call
dec
xor
pavgb
retf
cwde
xor
xor
push
lea
int
push
sub
jno
inc
add
test
or
out
lea
or
nop
loopne
push
enter
or
mov
and
mov
adc
in
adc
jo
jp
dec
jg
cmp
cdq
add
outs
pop
dec
call
ins
push
call
or
sub
(bad)
js
inc
aam
jecxz
cmp
mov
scas
adc
aas
pop
sbb
add
outs
cmp
fs
mov
jle
call
sub
or
dec
adc
cmp
add
enter
push
add
mov
and
xor
cmps
jg
inc
sub
or
adc
add
fcmovb
mov
and
shl
sbb
and
add
add
and
ror
push
or
test
fldcw
xchg
mov
and
rol
mov
aas
loopne
jb
stos
dec
inc
or
dec
fld
adc
sbb
mov
movs
sbb
cmp
(bad)
aas
ins
jno
mov
call
push
push
mov
push
cmp
xchg
xchg
stc
cmp
or
inc
inc
sub
xor
les
call
into
push
jo
xchg
and
sbb
xor
add
dec
imul
xor
add
xor
pop
push
pop
leave
add
push
or
aaa
in
inc
cld
scas
push
mov
jbe
aas
add
outs
aas
add
mov
add
push
pop
and
xchg
out
lds
add
jge
inc
pop
xor
lods
push
out
(bad)
test
(bad)
xchg
mov
pop
pop
inc
xchg
dec
or
inc
pop
in
ins
test
dec
gs
mov
cmp
mov
mov
dec
xor
ret
dec
inc
call
inc
call
and
gs
cmps
dec
xor
mov
or
or
or
les
mov
cmp
mov
sub
mov
pop
mov
push
jmp
dec
add
scas
mov
dec
sbb
stos
cli
sub
push
dec
add
push
pusha
nop
(bad)
in
dec
movs
push
pop
call
xor
jmp
add
(bad)
enter
es
sbb
test
fst
dec
push
mov
and
and
xor
jo
fwait
pop
test
and
xlat
mov
rol
inc
jge
or
scas
push
push
pop
ins
mov
push
mov
inc
hlt
sbb
daa
cmps
and
push
in
dec
mov
xchg
bound
fisttp
je
push
ins
mov
sub
and
mov
lods
and
pop
jno
call
cmp
jg
lock
sub
aam
das
jmp
enter
sti
ja
or
adc
movs
ds
hlt
mov
or
test
cmps
and
push
jmp
shr
or
popa
mov
shr
sub
mov
dec
push
sbb
into
sub
cs
scas
or
arpl
cmp
xchg
int
test
out
push
or
int
sbb
sbb
rcl
outs
fsubr
jbe
or
or
pop
push
pmullw
inc
mov
shr
xor
ss
jg
aas
dec
jp
and
jo
push
test
fstp
leave
xor
les
xchg
fstp
jno
loop
jbe
js
rol
mov
sbb
test
push
int3
push
sbb
sub
xor
sub
add
sbb
les
sub
xchg
sbb
xor
mov
adc
neg
inc
or
or
cmp
retf
jns
mov
xor
cmp
xor
sbb
fmul
jb
outs
ja
jmp
sysenter
cmp
es
sbb
leave
fdiv
adc
nop
push
xor
and
cmp
mov
test
push
push
mov
mov
xchg
pop
gs
leave
cld
sbb
movs
jns
arpl
jge
pop
aaa
test
sub
in
aas
push
inc
stos
leave
jns
xor
mov
sub
in
(bad)
loopne
xor
fmul
in
cmp
adc
out
je
mov
cmp
mov
inc
imul
mov
les
sbb
dec
rol
sub
inc
outs
push
mov
idiv
das
xchg
inc
ficomp
xor
stos
inc
adc
and
add
pavgb
add
mov
dec
sbb
clc
lea
ret
xor
enter
stos
inc
pop
out
stos
xchg
mov
pop
push
add
mov
jne
mov
mov
loopne
xchg
mov
fiadd
cwde
pop
xor
add
in
add
sub
inc
jbe
inc
nop
sbb
clc
loop
adc
and
imul
aas
sbb
call
mov
dec
adc
push
add
jge
or
inc
fstp
mov
cmp
or
lods
call
enter
leave
push
push
mov
jle
pushf
sbb
loopne
nop
mul
sub
xor
jmp
js
mov
clc
mov
and
fild
sub
sahf
or
cmp
and
add
lds
and
jg
sbb
inc
add
pop
mov
and
and
jle
retf
mov
push
add
mov
mov
inc
bound
and
and
jg
mov
inc
xor
cld
jmp
mov
dec
sbb
add
mov
les
(bad)
out
add
retf
or
inc
push
add
scas
add
add
adc
cmp
fld
mov
pop
mov
movs
lock
xchg
jl
sahf
dec
popf
ja
(bad)
(bad)
adc
pop
pop
imul
rol
sbb
(bad)
std
ret
lock
jecxz
mov
popa
adc
cvtps2pd
pop
inc
xchg
or
mov
inc
dec
jne
push
lods
(bad)
rol
sbb
adc
jmp
loop
sbb
adc
and
or
or
mov
ffreep
mov
sbb
mov
and
sub
cmp
sub
mov
lds
cmp
jmp
movntps
cmp
ins
arpl
imul
mov
aas
sub
sbb
sbb
ss
jne
pop
fsub
mov
(bad)
cmp
add
add
xchg
rcr
daa
in
cmp
outs
loop
popa
lahf
fnstenv
sbb
inc
inc
out
mov
sub
mov
leave
test
retf
xchg
mov
pop
sbb
clc
xchg
pop
cmp
sbb
mov
repz
cmp
jne
jmp
or
dec
fld
mov
(bad)
add
mov
xchg
xor
jmp
dec
lahf
fs
jle
test
fcom
fdiv
(bad)
mov
jae
adc
je
repz
adc
sub
mov
push
mov
call
pop
inc
je
pusha
cmovns
or
dec
cmp
sbb
fistp
js
pop
jne
or
lea
xchg
cmp
mov
pusha
pusha
stc
fdivr
leave
xor
(bad)
popa
(bad)
shl
popa
push
jae
repz
pop
and
or
adc
fdiv
push
sbb
xchg
mov
je
fsubr
jmp
adc
adc
xor
icebp
xor
xchg
inc
popa
push
(bad)
jp
and
int
dec
mov
adc
jb
cmp
cmp
mov
and
ja
dec
cmp
and
daa
push
pop
enter
pop
mov
or
mov
dec
cmp
pop
cmp
ins
loopne
add
or
fldcw
outs
fsub
pop
rcr
push
xlat
xchg
es
lock
jle
cmp
jbe
add
shl
fs
jmp
fld1
nop
xlat
add
push
mov
push
dec
mov
add
pop
scas
aas
lock
cmp
cwde
cmps
dec
fldcw
sbb
add
sbb
or
fmul
mov
sub
dec
adc
stc
test
iret
adc
adc
pop
mov
mov
sub
adc
out
pop
cmp
and
arpl
jb
in
xor
xchg
leave
pop
rol
push
aam
mov
mov
xor
iret
and
sbb
sub
push
mov
xchg
lea
loope
arpl
loop
lahf
pause
call
mov
or
dec
xchg
inc
(bad)
cmp
push
gs
add
jb
iret
sbb
push
sbb
inc
popa
or
inc
pop
mov
mov
arpl
fdiv
xchg
lock
push
ds
cmps
pop
ret
pop
pop
pusha
adc
pop
cmp
mov
xchg
cli
lds
push
fst
push
jg
ins
add
jge
xchg
pushf
pop
mov
mov
shl
inc
sbb
dec
imul
stc
imul
mov
pop
cli
jmp
sub
xchg
rcr
cmp
(bad)
cmp
push
test
ins
js
jge
sbb
mov
or
clc
inc
mov
mov
mov
mov
mov
xchg
push
or
mov
pop
and
push
hlt
sbb
jne
aaa
aas
jp
jo
dec
lock
and
and
xchg
cmps
mov
nop
or
and
and
rol
inc
call
stos
pusha
mov
and
jle
clc
fidiv
ror
adc
xchg
mov
or
rol
push
call
xor
xchg
inc
add
mov
mov
lock
inc
cmps
pop
clc
imul
stc
sub
cmp
lock
push
or
je
push
push
clc
mov
in
lea
test
adc
sub
inc
scas
addr16
push
jo
mov
sub
and
shl
or
or
dec
je
and
mov
and
aaa
popf
cmp
cmps
fdivr
and
mov
inc
mov
adc
add
add
dec
popa
mov
pop
xchg
dec
lock
shr
inc
adc
xchg
add
mov
dec
call
imul
call
mov
call
sub
ficomp
cli
cmc
jne
sahf
inc
sbb
int
test
or
xchg
mov
ins
xchg
out
pop
ret
cmp
or
test
rcr
inc
in
dec
idiv
pop
add
add
or
add
jno
sub
repz
repz
xor
push
jge
cmp
add
mov
fst
pop
xor
cmps
adc
test
xor
movs
push
add
dec
loop
add
(bad)
mov
or
test
add
hlt
push
xor
les
mov
aam
cmp
fnstsw
push
int
dec
addr16
add
or
add
jnp
(bad)
jae
sbb
inc
fisttp
add
push
iret
sbb
gs
mov
inc
leave
popa
adc
jno
lahf
shl
xchg
cmp
mov
xchg
sub
ret
mov
add
out
int3
dec
mov
popf
jmp
pop
(bad)
dec
fist
push
push
jb
adc
jp
mov
cs
sub
jo
fiadd
pop
movs
fld
shl
fs
dec
pushf
arpl
ins
and
out
adc
push
and
(bad)
loop
lds
dec
test
inc
xchg
rol
pop
in
in
out
jle
push
adc
push
pop
xor
loopne
mov
jnp
pop
xchg
mov
mov
xchg
sbb
cmp
sbb
imul
adc
imul
lds
push
out
xor
nop
cmp
mov
aad
jge
fwait
xlat
call
loopne
das
sar
add
sbb
cld
add
jo
push
ins
jb
mov
pop
lock
mov
cmovae
xchg
mov
dec
(bad)
mov
pop
jmp
outs
cwde
inc
mov
cmc
add
jmp
rcr
stos
add
mov
xor
push
lock
movs
imul
test
lock
shl
cmp
add
js
add
pop
mov
outs
xchg
push
xchg
mov
jo
push
bound
shl
cmp
int3
ins
jmp
cmp
mov
sahf
push
stos
inc
adc
icebp
or
and
xor
inc
pop
push
add
in
xchg
mov
loop
add
outs
sbb
adc
or
add
xor
xchg
inc
and
aaa
cdq
lods
sbb
inc
dec
popa
mov
and
sub
sbb
ret
or
sub
sub
in
xor
mov
jmp
and
add
jb
and
cdq
repz
test
dec
hlt
adc
xchg
pop
xchg
rol
and
sbb
mov
dec
out
xor
fimul
or
rcr
dec
sbb
push
and
fldcw
stos
enter
lods
(bad)
sbb
add
in
inc
aam
dec
mov
shl
add
sbb
dec
aaa
push
in
sub
mov
sub
test
movs
les
stos
sbb
cwde
loopne
mov
dec
movs
sbb
hlt
lds
add
pusha
adc
fisttp
mov
inc
mov
lock
shl
inc
(bad)
push
xchg
xor
and
(bad)
and
int
add
je
inc
push
lods
(bad)
pop
std
add
repnz
xor
sbb
lock
and
push
sti
lock
mov
int
(bad)
icebp
and
jmp
mov
dec
mov
(bad)
cmp
xor
add
mov
xchg
(bad)
sahf
out
outs
(bad)
sub
push
ror
fdivr
(bad)
out
in
test
rcr
jmp
adc
push
call
mov
sbb
imul
and
mov
or
adc
or
je
dec
hlt
add
adc
in
dec
or
hlt
pop
cwde
xchg
jg
scas
and
push
repz
rol
loopne
sahf
addr16
enter
push
fidiv
adc
fiadd
mov
xor
jb
je
daa
dec
loopne
adc
je
cmp
or
mov
hlt
aam
sbb
and
shl
nop
dec
rcr
leave
out
sbb
adc
int3
or
call
aaa
mov
cld
inc
or
cmps
fwait
and
pop
(bad)
enter
pop
fs
add
lods
cmp
mov
mov
or
inc
or
sbb
cmovno
xchg
jl
pusha
or
add
push
adc
es
inc
sbb
xchg
js
or
push
pushf
mov
sbb
push
fs
mov
sbb
jmp
sbb
or
mov
pop
add
mov
sbb
and
xchg
push
movs
popa
ret
sbb
push
mov
in
push
sbb
adc
add
pop
mov
xor
push
pop
retf
mov
xchg
mov
gs
push
clc
jns
or
or
adc
jns
cmps
jecxz
mov
mov
shr
cld
bound
add
dec
push
retf
mov
sub
and
scas
dec
ss
or
mov
pushf
arpl
lods
adc
enter
adc
and
into
xor
dec
sub
sub
enter
pop
rcr
hlt
cmps
add
pop
xor
int
es
shl
cmp
sub
and
sar
ret
mov
inc
add
adc
popf
and
inc
and
retf
ret
xchg
push
jmp
jne
and
mov
sub
add
push
or
ds
push
mov
xor
add
stos
cdq
jmp
rol
ins
imul
and
and
sub
mov
add
pop
sbb
push
inc
dec
and
(bad)
push
mov
pop
call
dec
out
bound
stos
push
mov
test
or
push
add
push
add
or
into
add
mov
(bad)
push
movzx
shr
fwait
cld
push
jl
add
add
add
pop
cmpxchg
fisttp
pand
jl
push
mov
jne
jg
ror
out
(bad)
in
mov
inc
adc
fisttp
(bad)
jne
sahf
or
add
data16
adc
int
stc
push
jb
out
addr16
jl
push
in
dec
or
dec
inc
xchg
push
dec
add
mov
pop
ds
inc
fisubr
pop
sbb
or
mov
fisub
or
fiadd
jp
dec
mov
fld
iret
xchg
add
add
inc
test
int
nop
sbb
mov
push
shr
in
pop
push
cmp
shr
jb
daa
pusha
loope
dec
sbb
mov
add
int3
or
pop
pop
lods
fsub
or
dec
mov
ret
mov
enter
scas
push
rol
mov
dec
add
(bad)
rcl
cmp
in
rcr
shl
test
add
ds
cmps
sahf
nop
inc
mov
dec
sar
dec
popa
mov
dec
out
pop
das
das
fldcw
add
iret
dec
shr
xor
and
pop
cmp
push
adc
push
add
mov
adc
push
adc
(bad)
(bad)
mov
mov
ss
outs
mov
pushf
mov
adc
add
jb
or
stos
dec
xor
mov
ins
popa
add
inc
ja
sbb
test
dec
push
(bad)
sbb
dec
es
or
fadd
mov
mov
stc
aas
inc
adc
dec
adc
add
cmp
mov
in
aad
bswap
sub
pop
enter
(bad)
fs
adc
dec
ins
add
pop
mov
mov
push
sti
jl
sub
fcomp
pop
add
xlat
xor
enter
mov
scas
or
adc
or
fadd
add
in
mov
mov
push
repnz
(bad)
jo
shl
cmps
in
or
ins
rcr
fcomp
(bad)
push
mov
retf
retf
(bad)
push
mov
daa
daa
mov
xor
fist
xchg
xchg
xchg
xchg
fistp
repz
leave
leave
enter
call
fst
call
push
fisub
sar
sbb
neg
inc
jns
cmp
cmp
fistp
add
aas
comiss
pop
js
loope
mov
inc
daa
das
sbb
and
leave
lds
sar
dec
fs
and
je
dec
fs
fisubr
jns
shl
jno
bound
daa
mov
ror
leave
or
fs
or
mov
enter
sub
mov
xchg
adc
and
lds
inc
in
in
outs
shr
push
nop
aam
ja
push
ins
loope
rol
dec
and
dec
push
fiadd
cmp
xchg
push
in
and
jmp
das
add
in
test
shl
loop
inc
adc
cmp
aam
pop
jne
jns
push
iret
xchg
inc
push
pop
shr
das
mov
repnz
and
jb
in
fs
push
push
adc
push
ins
cdq
fcom
push
fs
pop
dec
xor
dec
test
fs
(bad)
adc
sub
test
jno
xchg
sbb
cmova
dec
push
pop
rcr
loop
pop
xchg
adc
dec
pop
leave
bound
rcl
shl
inc
inc
dec
push
rcl
rol
mov
rol
or
rcr
dec
enter
sub
inc
push
inc
mov
shl
jns
pushf
and
adc
dec
dec
and
mov
leave
dec
pop
fld
fs
mov
adc
mov
xchg
mov
pusha
pop
ja
lea
inc
or
push
xor
add
mov
sub
mov
rcl
leave
cmp
lods
pushf
loop
add
jecxz
movups
cmp
dec
add
in
repnz
test
dec
test
push
inc
leave
sub
rol
in
int3
das
fimul
and
inc
dec
push
ret
movs
in
add
jmp
mov
inc
jmp
adc
das
pop
jne
dec
les
jns
dec
popa
out
jmp
pop
lods
xor
mov
push
xlat
das
in
dec
mov
clc
daa
jb
ss
jmp
inc
or
stc
adc
in
xor
adc
enter
add
mov
jl
adc
push
mov
repnz
test
es
mov
and
stc
add
inc
or
lock
repnz
push
mov
mov
jl
xchg
div
lea
dec
mov
inc
inc
arpl
adc
shl
out
push
pop
or
leave
in
dec
inc
jg
and
rcr
dec
or
test
mov
stc
mov
out
stos
inc
inc
or
push
push
fild
or
mov
push
pop
movs
enter
add
(bad)
out
dec
jno
daa
xchg
dec
fsub
mov
pop
aaa
jno
xlat
sbb
das
add
add
lock
icebp
(bad)
mov
mov
es
mov
icebp
daa
sahf
leave
mov
call
ror
and
lods
adc
pop
mov
in
adc
out
inc
sbb
out
loopne
xor
dec
pop
test
push
pop
repnz
fcmovbe
jmp
ror
push
pusha
sbb
(bad)
cmps
add
jae
(bad)
jmp
mov
lsl
fld
mov
inc
enter
inc
jmp
pop
jl
mov
xchg
out
and
add
jne
mov
cmp
push
test
pop
in
int3
es
mov
int
xchg
leave
dec
inc
push
dec
add
xchg
xchg
push
imul
sub
sub
in
add
in
cmps
push
in
pushf
clc
hlt
push
ds
ins
and
pop
push
sub
pop
lods
inc
mov
mov
jns
add
in
inc
mov
sahf
pop
push
mov
stc
push
and
sbb
cmp
jmp
mov
js
ja
dec
leave
inc
xor
fstp
(bad)
retf
ja
jmp
shr
out
push
cld
add
jl
out
daa
iret
mov
push
inc
lahf
xlat
xchg
xchg
xchg
daa
adc
dec
xchg
leave
leave
enter
bnd
in
in
rol
repz
mov
repnz
and
push
sahf
cmp
jns
out
cmc
das
push
cmp
cmp
jp
out
neg
xchg
mov
mov
mov
stc
ja
neg
clc
push
clc
sbb
imul
sub
and
mov
clc
fs
adc
shl
jno
call
dec
push
sub
pushf
clc
js
leave
adc
mov
and
mov
add
sbb
bound
add
mov
sub
fiadd
mov
js
push
ja
cmp
xchg
sbb
sub
xchg
pushf
clc
mov
inc
pop
and
jo
xchg
in
loop
into
push
outs
mov
and
ins
and
add
gs
outs
nop
sbb
clc
sbb
rol
sbb
or
jmp
sbb
aad
enter
sbb
das
cmp
repnz
pushf
clc
add
jb
in
clc
or
add
adc
ins
cdq
stos
loope
in
outs
dec
sbb
popf
pop
nop
sbb
pushf
clc
sbb
adc
js
pushf
clc
sbb
dec
test
jne
outs
cwde
sbb
pop
xor
outs
mov
and
clc
rcr
mov
cmp
lock
dec
xor
mov
rcl
outs
adc
push
outs
sub
rol
pop
adc
sbb
adc
sbb
adc
pop
jge
inc
sbb
push
adc
or
sub
adc
fcomp
sub
fsub
add
out
or
lds
outs
push
push
sub
dec
imul
es
dec
mov
(bad)
sbb
je
cmp
les
mov
loopne
push
add
and
and
add
les
adc
xor
or
jg
add
adc
scas
xor
mov
dec
push
jno
addr16
inc
inc
cmp
stc
addr16
dec
daa
or
xchg
les
adc
inc
adc
dec
pushf
clc
repz
lahf
cli
xlat
(bad)
push
inc
leave
leave
leave
in
sbb
sahf
test
dec
loop
sti
das
and
mov
mov
nop
inc
adc
adc
dec
dec
enter
cld
mov
dec
inc
repnz
stos
push
fimul
stos
sub
pop
int
leave
adc
dec
xor
and
push
jno
nop
sub
mov
outs
sub
dec
mov
mov
pop
cmp
repnz
and
sub
in
mov
mov
add
and
int
pop
mov
mov
dec
scas
xor
sub
adc
xor
(bad)
adc
call
add
cwde
push
std
gs
jmp
mov
or
pop
std
dec
or
outs
inc
cld
push
fistp
sub
inc
push
pop
jmp
or
fs
dec
pop
add
das
push
(bad)
adc
cmp
test
xor
mov
jmp
test
and
or
jg
sbb
inc
dec
xchg
jo
jo
mov
stc
mov
xchg
jl
push
loopne
(bad)
inc
nop
and
nop
or
ins
add
mov
and
xchg
call
sbb
fiadd
div
mov
stos
inc
icebp
xor
jl
xor
fst
xchg
nop
jnp
imul
jmp
adc
push
adc
push
aas
lock
pop
jne
pop
dec
fdivr
push
push
pop
inc
adc
sbb
inc
call
inc
push
loopne
ss
call
sbb
sbb
fadd
dec
sub
(bad)
cmp
xor
ds
and
or
sbb
frstor
(bad)
pop
out
ret
dec
fild
out
into
cmp
mov
mov
inc
ret
out
or
add
popa
nop
nop
or
lock
sahf
or
or
rcr
push
cmp
retf
and
fwait
sbb
cmp
jb
call
adc
jp
adc
add
mov
cmp
jae
enter
pop
cwde
adc
imul
and
adc
cmps
add
cmc
ja
inc
cmp
mov
mov
cmp
adc
jne
and
sbb
sbb
mov
outs
push
dec
cmp
sub
inc
out
push
pop
dec
add
xor
mov
push
or
dec
adc
add
sub
pop
repnz
add
bound
out
movs
(bad)
cld
xor
dec
aad
ret
nop
fbstp
mov
adc
shr
popf
jmp
add
push
sub
es
and
(bad)
clc
mov
push
xchg
dec
sbb
call
dec
or
daa
scas
(bad)
pop
jne
mov
call
loopne
enter
sbb
js
or
lahf
add
rol
mov
sbb
cmp
lods
leave
jecxz
push
inc
scas
pusha
inc
dec
inc
push
shr
jmp
psubw
dec
add
sub
movs
or
mov
push
loope
outs
add
repnz
inc
dec
(bad)
lahf
xor
adc
add
cwde
je
cmp
dec
add
or
jo
sub
out
push
xchg
cdq
outs
push
dec
or
call
les
inc
ins
sub
sbb
push
pusha
mov
adc
int
(bad)
jmp
sbb
add
in
aam
jnp
add
add
rol
fist
adc
pushf
std
fnstenv
sub
push
or
into
rcr
or
xchg
mov
scas
or
mov
inc
sbb
xor
xor
add
sub
pusha
mov
or
pushf
stc
dec
or
add
inc
fsqrt
pushf
add
and
or
or
cmp
aam
(bad)
jmp
add
(bad)
je
cmp
or
pop
adc
cmp
inc
push
or
dec
in
out
je
push
add
sub
int
inc
in
test
inc
pushf
movs
inc
jb
sbb
jge
dec
dec
mov
std
sub
and
pop
mov
imul
mov
(bad)
mov
(bad)
mov
jne
or
lock
icebp
test
movs
xchg
jg
femms
cmps
fadd
(bad)
jo
addr16
aas
sbb
inc
imul
push
rcl
loop
jbe
adc
adc
dec
ficom
frstor
sbb
ins
mov
inc
scas
inc
sbb
adc
push
lods
mov
or
inc
sbb
xor
cmp
je
mov
jg
and
add
lock
sbb
mov
mov
rol
push
or
add
or
or
pop
push
sub
mov
adc
add
je
fs
push
pop
iret
jle
aaa
and
and
loopne
sbb
int3
add
sub
or
dec
clc
fisub
getsec
rol
push
push
or
cld
inc
push
pop
or
clc
ss
and
es
ret
mov
rsm
cmps
nop
rol
les
or
aad
(bad)
ret
mov
sbb
rcl
jle
rol
call
xchg
clc
cmps
cmp
mov
pop
mov
xchg
daa
ror
and
inc
pop
aam
push
push
enter
cmp
mov
nop
cmps
jne
adc
sbb
in
jno
sub
dec
dec
and
xchg
cmp
push
or
movs
lea
lock
loop
mov
fild
js
inc
div
in
mov
pop
mov
sahf
mov
retf
sti
mov
jp
das
mov
dec
push
adc
lock
popa
retf
gs
add
push
les
es
pop
sti
sub
or
cli
sbb
and
or
cmp
add
adc
xor
mov
daa
inc
into
adc
sub
cmp
test
xor
xchg
retf
hlt
pop
pop
pop
sub
or
mov
lds
adc
mov
cmp
cmp
mov
mov
xor
adc
loop
or
adc
es
mov
dec
push
push
push
fnstsw
shld
sub
inc
xor
ss
dec
xor
mov
aaa
or
bnd
or
xchg
pop
cdq
or
in
icebp
in
or
cwde
sub
mov
adc
stc
mov
jno
punpckhbw
or
inc
popa
dec
pop
cmc
out
ins
test
arpl
leave
in
mov
ficomp
movs
rcr
and
cmps
pop
or
sbb
or
cld
mov
std
ds
adc
xchg
push
or
sub
mov
or
(bad)
loopne
add
sar
loopne
jecxz
adc
test
sub
add
mov
fld
rcl
hlt
loopne
pushf
push
add
leave
int
cmp
push
mov
(bad)
sbb
mov
push
dec
xor
push
xor
add
mov
mov
jg
push
test
cmp
je
hlt
pop
pop
xor
adc
cmovg
nop
or
(bad)
push
inc
fild
int3
push
or
rsqrtps
in
push
pfpnacc
or
mov
and
std
sbb
push
(bad)
test
call
add
test
add
pop
sub
cli
and
or
sbb
add
iret
fcomp
bound
dec
cli
sub
and
pop
xor
mov
add
add
sti
push
adc
pop
sbb
jg
std
xor
inc
push
push
push
sub
sbb
xor
pop
sub
pop
and
das
test
pushf
inc
mov
push
jecxz
adc
mov
dec
mov
cmp
inc
repnz
mov
stc
jp
cld
or
cld
icebp
stc
jb
mov
adc
mov
inc
fs
daa
in
sub
es
je
adc
sub
adc
or
les
and
in
add
add
and
shr
je
and
cmp
xchg
js
mov
ins
inc
xchg
sbb
mov
cmp
retf
mov
loop
daa
lods
push
not
repnz
adc
adc
int3
adc
dec
adc
ror
in
lods
fadd
cwde
fbstp
inc
arpl
adc
add
pop
mov
pop
mov
popa
pop
and
cli
frstor
adc
test
mov
mov
push
mov
pop
push
rcl
mov
add
sbb
test
(bad)
retf
pusha
fmul
dec
or
mov
mov
adc
push
nop
imul
scas
cmp
adc
push
in
or
xor
addr16
and
jns
data16
add
inc
pop
mov
clc
arpl
sbb
pop
add
or
mov
or
(bad)
outs
adc
jge
dec
mov
add
sti
dec
pop
sbb
imul
in
adc
push
fwait
jb
cli
sbb
int
jno
dec
jo
xchg
sub
jnp
cmp
(bad)
jecxz
movd
mov
mov
mov
add
inc
rcl
cmp
jl
mov
dec
add
or
call
sub
jmp
adc
sbb
add
mov
mov
sub
xor
test
inc
add
sbb
push
aam
fiadd
(bad)
sbb
rcl
mov
mov
loopne
imul
sub
mov
addr16
shr
cld
outs
add
mov
scas
add
(bad)
xchg
and
cmp
daa
cs
fnsave
inc
(bad)
repz
cmp
xor
movs
jne
xchg
cmp
mov
lea
xor
adc
nop
outs
adc
xor
push
popa
movs
add
sbb
inc
pop
dec
xlat
and
lds
fst
xor
or
xlat
inc
jae
sar
xlat
call
(bad)
sbb
xchg
dec
pop
aas
sbb
jg
les
popa
outs
pop
out
and
and
pop
dec
push
ret
push
fisttp
and
or
sahf
inc
fst
adc
(bad)
add
add
push
sar
aaa
jmp
pop
popf
mov
sbb
adc
sub
sub
inc
sbb
push
sbb
and
xor
rcl
ja
dec
sbb
aas
out
std
cmp
cmp
and
pop
pop
sbb
sti
lahf
or
jne
or
shl
es
daa
neg
adc
jg
xchg
adc
retf
out
sbb
adc
cmp
xlat
jae
and
out
ret
mov
shl
dec
call
les
jbe
ret
es
cs
les
push
and
cwde
jmp
sub
adc
(bad)
pop
jb
loop
or
dec
mov
inc
or
call
or
aas
out
icebp
xor
je
jbe
hlt
and
mov
mov
push
cmp
jl
retf
jle
ror
mov
out
adc
js
pusha
sbb
into
outs
jnp
cmp
pop
push
addr16
fisubr
fild
repz
and
sbb
cld
pop
or
push
mov
adc
push
iret
add
ins
mov
inc
sub
add
push
aas
mov
loope
das
dec
cmps
rcl
mov
or
rol
jl
ret
add
add
lods
add
add
or
es
push
addr16
and
pop
movhps
mov
ror
js
test
xchg
and
addr16
push
jo
jecxz
dec
mov
add
mov
(bad)
push
xchg
sbb
imul
sub
push
pop
adc
mov
sbb
mov
adc
push
stos
push
jle
mov
es
(bad)
mov
dec
sub
push
sub
cmp
xchg
sbb
sbb
nop
fld
cmp
movs
mov
sahf
adc
jmp
ffreep
sahf
push
lock
push
push
xor
pop
pusha
sbb
in
pop
(bad)
and
test
push
jo
add
pop
lock
push
sbb
aad
xor
inc
xchg
into
lods
out
push
cmps
push
ret
gs
das
mov
les
dec
xchg
cmp
daa
xor
dec
les
xchg
inc
repnz
dec
les
cs
sub
cdq
push
mov
stos
xchg
mov
and
cmps
loop
lods
push
ja
movs
pop
and
outs
scas
push
ret
das
hlt
push
in
nop
pop
(bad)
xchg
sbb
cwde
pop
dec
sub
inc
sahf
aam
dec
aam
dec
adc
and
dec
pop
pop
dec
idiv
xchg
pusha
lods
and
lds
jae
pop
nop
adc
pop
pop
mov
dec
add
popa
push
adc
pop
mov
jmp
jge
repz
adc
sbb
xchg
sub
test
mov
cmp
add
pop
cs
mov
dec
add
xchg
add
xlat
pop
or
cdq
push
or
push
xchg
mov
repnz
jg
test
rcl
mov
or
sbb
jne
sar
ret
xor
adc
retf
pop
mov
jl
js
mov
sub
pop
or
xchg
inc
imul
and
jne
jno
out
jmp
jne
mov
push
inc
push
sar
jno
xchg
aad
adc
jle
mov
sub
or
pop
test
(bad)
jl
lea
shr
and
bound
aaa
inc
fisub
dec
add
cmp
inc
rol
cwde
mov
rol
jne
sbb
adc
xchg
test
jae
rcr
bound
je
adc
add
loopne
or
mov
xor
sbb
ret
je
fs
add
push
das
sbb
cwde
mov
sbb
sub
pop
mov
test
add
lods
jo
fcmovb
adc
or
sub
adc
popa
adc
xchg
xlat
adc
jmp
pop
hlt
outs
mov
dec
lea
cmp
sbb
fisubr
push
pop
je
pushf
push
jmp
pop
jo
push
sub
pop
sbb
sub
sbb
mov
adc
and
mov
push
sbb
adc
aam
jmp
pop
pop
adc
add
in
mov
adc
arpl
xlat
cdq
pop
daa
cwde
hlt
or
gs
cwde
add
push
jnp
movs
push
jge
cmp
jg
jbe
sub
fcmovbe
jmp
xchg
mov
(bad)
int
pop
mov
outs
mov
and
test
les
mov
cmps
xor
leave
mov
mov
cmp
adc
or
movs
sahf
push
mov
add
sub
cmp
xor
in
dec
push
pop
cs
leave
shr
(bad)
popa
les
es
xchg
sub
xor
ss
sbb
cmp
pop
jbe
rol
or
push
stos
jbe
push
pop
adc
pop
lods
inc
pop
inc
or
cmps
pop
fwait
xchg
pop
aas
rcl
pop
add
dec
or
pop
add
shl
clc
mov
lods
cmp
js
cmp
mov
inc
pop
in
sub
ret
sahf
inc
in
or
lock
in
jmp
daa
add
and
pop
call
add
add
sbb
or
dec
jp
data16
mov
popa
loopne
rcr
xor
mov
movs
xchg
xor
xor
mov
pop
add
mov
dec
sbb
push
mov
push
sbb
pushf
adc
push
outs
xor
fmul
loopne
or
and
sbb
scas
mov
xor
sub
push
cmp
jae
xor
dec
mov
out
test
push
pop
mov
or
mov
push
adc
(bad)
pop
dec
xor
pop
das
and
xor
lods
pop
mul
jo
dec
push
xor
push
addr16
loopne
xor
sub
add
nop
call
mov
cld
ret
gs
and
xchg
adc
(bad)
dec
loopne
arpl
xchg
out
sahf
mov
or
(bad)
(bad)
js
pop
cmp
pusha
pop
or
sahf
dec
cmp
push
scas
add
adc
or
cmp
mov
je
mov
add
mov
and
add
xchg
jl
movs
sub
es
dec
cld
and
push
imul
xor
lods
sub
adc
shld
sub
sub
ret
popa
loop
or
inc
sub
test
aas
clc
and
in
sub
dec
push
sub
aas
lds
pop
xor
adc
ret
mov
inc
pusha
lea
xor
sub
push
adc
adc
and
ffreep
sti
sub
sub
stc
push
(bad)
je
int
add
bound
lds
pusha
push
jle
push
mov
cdq
or
imul
cmp
pusha
iret
or
xor
mov
xchg
push
and
in
sbb
or
mov
stc
ret
fs
jne
sub
imul
inc
ins
jmp
inc
bound
pop
sbb
sub
xchg
xor
lea
xor
stos
xlat
sub
xchg
ret
popa
out
test
mov
rcl
cli
inc
daa
out
pop
add
retf
repz
cwde
jle
pop
dec
or
ja
loop
ins
ja
ins
inc
mov
setg
fwait
jae
sub
xchg
mov
jbe
dec
pop
(bad)
jns
(bad)
pop
inc
push
and
push
push
je
(bad)
pop
sub
pop
sbb
inc
mov
mov
add
xchg
sti
pop
cld
jne
xor
mov
mov
inc
lahf
pop
push
xchg
test
les
inc
inc
gs
add
inc
push
push
cdq
ret
inc
dec
cmp
ror
adc
test
push
mov
retf
push
dec
fimul
addr16
std
loopne
(bad)
or
sbb
push
mov
loopne
inc
inc
adc
xchg
daa
push
mov
or
sbb
pusha
inc
xor
inc
add
imul
pop
dec
mov
mov
cmp
fwait
movs
xor
push
stos
sbb
out
cmp
sub
cmps
pusha
add
cmps
fidiv
iret
nop
sbb
cmp
xor
mov
add
sbb
imul
or
push
mov
(bad)
mov
mov
rcl
adc
and
test
fstp
xchg
fs
or
adc
push
or
push
and
sbb
or
(bad)
enter
outs
xor
pusha
or
sub
out
and
jne
out
jae
call
cld
clc
inc
ret
inc
adc
xor
add
imul
fdiv
in
or
dec
jmp
mov
or
into
dec
loopne
pop
inc
mov
inc
pop
imul
rol
es
hlt
adc
add
add
ins
xor
fbstp
pop
mov
and
and
jbe
aam
or
cs
push
xchg
test
mov
addr16
jne
ret
(bad)
mov
push
daa
mov
aam
fs
in
je
fadd
adc
loop
sbb
scas
xor
pop
loopne
das
push
fild
loope
and
push
add
scas
ffreep
mov
hlt
sub
stc
adc
bound
aas
or
pop
(bad)
push
jp
add
ja
adc
cmp
xor
sbb
add
je
(bad)
test
in
mov
stos
test
xchg
adc
scas
fld
ret
cmp
inc
loope
pop
xor
mov
xlat
mov
sbb
add
xchg
repnz
retf
inc
ret
sub
data16
jmp
dec
mov
addr16
add
xchg
push
xchg
pop
mov
xchg
add
push
in
or
pop
xor
addr16
push
loopne
bound
add
add
ret
mov
into
pop
movs
pop
mov
xor
xchg
adc
addr16
outs
ins
pushf
xor
or
dec
ror
mov
adc
mov
sub
mov
mov
sbb
cmps
popa
and
mov
mov
xor
imul
call
shl
adc
mov
test
inc
push
mov
lea
push
push
xchg
mov
ins
(bad)
fld
xchg
in
test
aam
loop
(bad)
data16
mov
lods
test
adc
jl
addr16
mov
or
adc
mov
ins
loop
fisttp
cmp
pop
cmp
pop
imul
aas
invd
mov
pop
or
in
push
sar
cmp
mov
or
pop
push
aaa
add
inc
sub
out
inc
pop
push
aaa
and
jno
pop
cld
out
test
xchg
mov
adc
test
mov
mov
sub
jmp
mov
rcl
test
mov
repnz
(bad)
dec
pop
dec
inc
xchg
sub
mov
fs
shl
push
rcl
(bad)
leave
and
or
outs
clc
pop
ss
(bad)
or
lahf
sub
adc
push
and
xchg
mov
scas
pusha
cmp
sbb
jnp
dec
cwde
loopne
xor
test
in
nop
or
inc
movs
repnz
fcomp
push
shl
call
pusha
gs
lahf
jns
add
ds
add
neg
cmp
outs
ds
es
dec
add
jae
pop
push
push
mov
sub
retf
bound
mov
neg
or
mov
or
fisttp
xor
int3
aaa
sahf
mov
ss
jns
adc
push
hlt
add
mov
or
xchg
call
add
test
xor
mov
shl
cs
mov
cmp
adc
inc
and
daa
dec
sbb
push
jb
inc
(bad)
pop
shr
or
inc
das
xor
push
add
cmovg
mov
mov
call
scas
mov
xchg
test
test
dec
test
jno
sar
push
ins
loope
add
adc
in
(bad)
mov
call
jp
lea
sub
not
dec
mov
mov
inc
(bad)
sub
inc
inc
pop
or
add
dec
leave
and
and
clc
lods
ss
or
or
bound
xor
mov
pop
mov
or
mov
inc
adc
mov
add
pushf
or
sbb
jmp
cmp
jb
data16
xor
sub
cmp
dec
cmp
iret
dec
jne
cld
mov
test
xchg
cmps
and
cs
imul
lea
lods
add
push
dec
mov
inc
or
dec
adc
cs
rcl
sbb
call
cmp
or
sub
mov
cmp
sub
inc
mov
cmp
mov
fisubr
call
push
or
lods
fisttp
lods
not
jp
inc
(bad)
imul
fs
mov
int3
cmp
ja
adc
mov
add
daa
out
jmp
aas
jmp
aas
inc
add
push
fdiv
adc
outs
jnp
pop
push
xor
xor
test
xor
(bad)
in
push
push
mov
sbb
lea
imul
lds
push
ret
dec
test
xchg
sbb
pop
inc
jecxz
inc
sbb
comiss
cmp
and
pop
lock
scas
test
dec
and
inc
and
imul
and
psubusw
adc
dec
or
sub
pop
and
add
cmp
sub
xor
add
jl
mov
popa
jmp
mov
sbb
sysenter
mov
inc
test
imul
adc
mov
aas
adc
leave
jne
push
adc
mov
sub
adc
xchg
fisttp
aas
test
loopne
or
aas
sysret
es
dec
dec
adc
(bad)
push
(bad)
(bad)
cmc
xor
mov
iret
cli
mov
stc
xlat
loopne
fiadd
loopne
xor
jo
xchg
inc
fild
inc
iret
je
sub
ror
hlt
shl
and
repnz
clc
rcl
in
xchg
fsub
inc
inc
mov
pusha
dec
hlt
iret
(bad)
jge
sbb
dec
imul
inc
push
inc
add
in
dec
sbb
and
and
add
inc
mov
add
out
jle
test
and
call
mov
rcl
fs
sub
rcr
jnp
sub
iret
pushf
jo
add
xchg
push
adc
(bad)
(bad)
mov
sub
lea
adc
ret
nop
pop
mov
inc
adc
push
pop
sub
jne
cmp
jl
outs
inc
mov
add
mov
ret
call
sti
mul
push
enter
jbe
adc
jno
push
or
pop
les
mov
ror
mov
push
jo
sub
dec
lea
cmp
rol
sub
push
or
or
sbb
(bad)
ret
add
nop
or
dec
pop
add
jbe
dec
or
jmp
pop
lods
rcl
(bad)
clc
dec
inc
mov
inc
and
add
pop
xor
mov
dec
cmp
dec
add
xchg
test
inc
dec
scas
inc
xchg
dec
loop
gs
test
scas
pop
mov
mov
cmp
test
inc
imul
push
push
rol
test
pop
outs
stc
or
outs
pop
inc
lock
(bad)
ins
loope
adc
or
lds
mov
pop
sub
inc
jl
or
or
sub
out
ret
mov
jno
les
push
pop
outs
jne
(bad)
and
sub
lock
jmp
pushf
mov
call
inc
or
inc
mov
in
movs
loope
movs
inc
test
xchg
inc
std
sbb
dec
jmp
jge
test
push
sub
sbb
cld
adc
dec
retf
sbb
xor
fs
dec
addr16
mov
mov
inc
inc
xchg
adc
movs
nop
lods
rcl
nop
inc
int
inc
xchg
test
sub
pop
daa
inc
les
jmp
scas
ss
add
inc
mov
cmp
adc
and
lock
or
or
jo
cwde
stos
ds
or
xor
movs
shl
clc
hlt
xor
sbb
icebp
aaa
inc
enter
xchg
push
(bad)
or
stos
dec
daa
rcl
pushf
sahf
cmp
and
cld
sbb
pop
or
movs
pusha
adc
inc
cmp
data16
rol
adc
and
sbb
sub
sub
or
mov
cmp
ret
push
int
dec
pop
ins
jo
push
fsubr
sbb
dec
dec
call
push
pop
adc
xchg
stc
push
xor
ror
ins
mov
sub
and
inc
mov
mov
pop
dec
xlat
push
fisttp
popa
loope
dec
and
inc
pop
jo
outs
add
adc
adc
sbb
dec
jg
add
adc
outs
dec
aaa
es
add
adc
dec
fst
adc
movs
and
cmp
ret
ss
(bad)
or
mov
(bad)
sbb
shl
fist
add
je
cmp
leave
pushf
mov
adc
dec
push
xchg
lock
cmp
rcl
inc
jo
inc
xchg
adc
or
icebp
xor
sub
or
adc
or
add
jnp
or
add
dec
sub
bound
xchg
pop
jmp
movs
or
or
daa
inc
inc
push
sbb
movs
retf
outs
dec
dec
mov
sub
imul
shl
pop
inc
mov
xchg
mov
jge
mov
pop
leave
fnstenv
cmc
popa
loopne
mov
jg
pop
nop
cmps
xlat
mov
(bad)
into
imul
push
dec
loope
adc
or
or
ins
cmp
and
add
cmps
pop
dec
pop
jne
xchg
loop
ret
rol
cmps
call
xchg
test
cmps
jmp
push
mov
ins
or
pop
add
movs
and
repnz
out
test
mov
stos
jmp
inc
jmp
and
mov
gs
ret
adc
push
push
mov
dec
nop
add
or
push
or
popf
xor
ret
add
mov
and
add
sub
mov
ret
cmps
mov
xor
cmp
inc
add
push
jp
imul
adc
fnstsw
aas
fadd
sub
retf
inc
(bad)
push
test
mov
jno
js
popf
cli
js
je
loop
push
xor
pop
jb
xchg
or
dec
jnp
inc
xchg
push
sbb
cmp
ins
popa
dec
mov
aad
aaa
or
sbb
test
mov
fcomip
mov
pop
or
add
pop
pushf
nop
pop
cmp
dec
loope
add
ud0
push
mov
shl
add
imul
popa
xchg
ds
(bad)
cmc
in
mov
mov
xrelease
jns
lahf
sub
movs
dec
push
je
dec
in
pop
xlat
xor
test
int
fstp
addr16
mov
inc
jnp
cmp
mov
out
push
sub
nop
cmp
adc
iret
ins
fist
push
out
jmp
rcr
(bad)
dec
scas
outs
inc
mov
in
je
push
adc
xchg
mov
pop
jb
push
adc
pusha
adc
ror
dec
pop
mov
loopne
cmps
fs
and
jbe
sahf
mov
sub
push
pop
dec
in
or
lock
push
push
jmp
push
pop
jb
aad
xor
lock
adc
aas
adc
xchg
xor
mov
div
test
pop
xor
lods
adc
in
add
adc
fisttp
dec
mov
add
mov
(bad)
push
(bad)
inc
push
outs
xchg
xchg
push
sub
add
mov
xchg
adc
push
lea
cmp
sub
mov
ja
mov
and
xchg
aaa
pusha
push
pop
mov
mov
and
or
sub
aas
jne
mov
inc
pop
cmp
push
push
adc
push
stc
adc
popf
and
pop
push
add
add
mov
and
inc
cdq
loope
mov
lahf
xchg
add
push
jmp
push
loopne
mov
adc
cmps
sub
jge
aam
add
ins
cmp
xlat
xor
imul
adc
stos
dec
mov
push
and
inc
push
in
cmc
pop
xor
sbb
jl
sbb
or
in
add
test
or
inc
cli
fucomi
sahf
dec
mov
loopne
leave
inc
pop
test
xchg
mov
dec
(bad)
ret
inc
sub
clc
clc
sub
sar
int
mov
inc
inc
jmp
inc
hlt
hlt
mov
jmp
stc
je
pop
mov
sub
jl
mov
aas
push
dec
cwde
push
dec
adc
pop
mov
imul
mov
cmp
hlt
inc
dec
adc
in
push
gs
jno
loopne
(bad)
retf
dec
jb
aas
loopne
rcr
push
mov
inc
add
clc
fsub
adc
outs
xchg
pop
pmulhuw
movs
pop
or
pop
push
call
mov
jns
dec
push
bound
pop
sbb
test
sbb
or
add
sbb
sbb
lahf
sub
add
lea
mov
fist
pop
in
mov
test
inc
push
adc
push
push
test
aaa
fisub
fcomp
inc
div
pushf
adc
repz
pusha
push
mov
push
shr
icebp
jns
lock
and
or
jecxz
inc
inc
dec
pop
dec
pop
xchg
mov
imul
shl
scas
pop
aam
or
shr
add
inc
sbb
ins
loopne
enter
ins
loop
or
cmp
or
or
dec
inc
xor
pop
in
fld
inc
xchg
mov
or
dec
inc
mov
jge
adc
pop
fnstenv
mov
xor
ret
(bad)
push
ja
pop
xor
inc
adc
sub
pusha
arpl
pop
and
and
repnz
jmp
scas
hlt
cmp
jne
cmps
arpl
int3
neg
fild
pop
ins
adc
fdiv
dec
loopne
inc
not
sar
and
mov
xor
in
aas
lahf
sbb
push
test
addr16
xchg
jne
add
pop
and
add
leave
xor
jl
or
les
call
movs
bound
(bad)
or
inc
mov
aas
test
adc
enter
pop
dec
add
inc
outs
sti
add
add
outs
sub
les
repnz
sti
push
loopne
xlat
mov
mov
or
rcr
lock
inc
sbb
mov
outs
jno
and
inc
xlat
add
or
push
inc
out
xchg
sub
pop
pop
pop
sub
ret
mov
push
push
dec
movs
(bad)
sbb
push
and
jg
aaa
add
addr16
or
sbb
jne
outs
add
adc
pop
pop
sbb
cmp
and
pop
sbb
sbb
xchg
xor
and
test
jne
ret
sbb
adc
outs
inc
addr16
pop
fisttp
shr
push
xchg
int3
out
inc
mov
adc
in
inc
sub
bound
das
into
or
scas
push
sbb
push
sub
test
out
jecxz
pop
and
push
lahf
pop
add
push
cmp
and
adc
xor
stc
(bad)
enter
sbb
test
adc
xor
xchg
xor
sbb
ins
out
or
pop
or
add
jno
not
push
jbe
stc
pop
fidivr
inc
in
sti
or
jmp
lds
adc
lds
mov
cmp
iret
jo
popa
test
sbb
cmp
pusha
sbb
sbb
xchg
push
xlat
push
mov
loope
pop
enter
repnz
popa
dec
enter
mov
loope
out
lea
mov
mov
pop
push
adc
add
out
xor
mov
ror
xchg
aas
sub
imul
xor
retf
fcom
fmul
inc
(bad)
arpl
push
imul
in
xor
cli
mov
inc
jb
int3
mov
push
dec
or
sub
cmp
bound
rcr
nop
and
fnstcw
rcl
stc
pusha
sbb
adc
push
arpl
pop
or
stos
sub
retf
lods
push
mov
fild
ss
push
out
loope
push
cmc
(bad)
loopne
inc
cmp
and
pop
sbb
and
loopne
push
and
enter
add
inc
imul
std
cmp
dec
retf
xor
xchg
pop
or
scas
xlat
jns
fnstenv
pop
das
pop
cmp
ins
add
mov
stc
add
popa
leave
mov
sbb
sbb
inc
pusha
test
jmp
or
in
pusha
inc
and
sbb
(bad)
int
adc
cs
add
push
cld
xor
and
sbb
pop
inc
cmp
sbb
hlt
in
test
fs
mov
adc
lock
fstp
and
push
xchg
ins
add
inc
movs
cld
and
clc
pop
mov
jmp
gs
inc
mov
mov
pop
mov
pop
or
test
fwait
aaa
retf
movs
mov
sub
adc
pop
scas
outs
xlat
ds
dec
add
loope
add
sub
out
add
inc
cmps
sbb
ins
add
add
jg
cmp
dec
mov
push
enter
pop
or
shl
dec
dec
addr16
in
dec
mov
call
push
outs
hlt
adc
sbb
and
addr16
inc
mov
pusha
cli
pop
aas
in
imul
or
add
or
xchg
or
mov
push
xor
mov
dec
adc
cwde
(bad)
and
or
js
pand
sbb
dec
xchg
nop
sbb
cmp
push
or
push
ja
scas
xor
xchg
push
jg
(bad)
xor
xchg
nop
dec
or
movsx
fld
pop
je
(bad)
xchg
cmp
repnz
jle
arpl
repnz
jmp
dec
les
add
imul
jns
mov
push
jmp
sub
mov
add
dec
dec
repnz
mov
push
lods
xchg
pushf
or
ins
inc
repnz
adc
mov
(bad)
xchg
mov
pcmpeqb
mov
sbb
(bad)
jmp
xchg
push
jl
repnz
sbb
pop
nop
or
repz
enter
mov
pusha
inc
cmp
pop
push
jo
ja
sbb
(bad)
jo
inc
mov
les
mov
adc
cmps
adc
push
and
xchg
int3
pop
jno
or
and
or
mov
dec
add
pop
xchg
lods
stos
adc
or
mov
pushf
dec
xchg
fstp
inc
push
push
pop
jns
add
xor
in
punpckldq
scas
jb
cmp
jb
jb
inc
or
aam
pop
add
divps
and
rol
pop
aas
cmp
loope
pcmpgtd
or
xchg
popa
fcom
pushf
in
and
or
outs
stos
sbb
mov
gs
gs
enter
mov
jne
pop
test
pusha
int3
repnz
dec
or
mov
push
enter
dec
add
dec
enter
inc
test
ja
and
repnz
xchg
ja
xor
add
inc
push
arpl
test
test
xchg
inc
and
or
mov
dec
outs
mov
push
inc
push
cmp
in
pushf
or
movs
jno
nop
and
in
jnp
xor
outs
sub
jnp
push
jb
je
jmp
and
leave
and
mov
pop
and
je
or
inc
push
mov
sbb
add
adc
adc
jge
mov
jb
jl
jl
mov
cmp
jge
add
data16
ret
mov
push
add
ins
ins
jle
cmp
dec
leave
dec
xchg
mov
or
push
leave
cmp
repnz
call
jo
pop
adc
imul
in
enter
in
out
jb
push
and
test
outs
xor
xchg
inc
(bad)
inc
adc
dec
push
xchg
pushf
adc
adc
adc
das
xchg
push
(bad)
gs
push
or
(bad)
dec
xchg
nop
xchg
push
enter
in
push
pop
cmp
and
pushf
in
and
hlt
ret
add
psubw
xchg
nop
sbb
in
ja
pop
mov
cmp
and
ret
popf
dec
inc
or
add
pop
mov
jb
ret
(bad)
jp
ror
jbe
hlt
ret
jne
push
leave
add
in
mov
jp
jo
mov
and
mov
cmp
jne
inc
mov
repnz
or
mov
dec
dec
and
xchg
add
add
bound
or
adc
pop
jns
jb
loopne
(bad)
jg
inc
bnd
jg
jg
(bad)
ins
or
daa
and
leave
xchg
test
dec
mov
and
dec
aad
or
in
cdq
nop
dec
repnz
dec
or
in
jo
leave
add
jo
add
pop
add
xchg
loope
das
fcomp
dec
pusha
xchg
jecxz
ins
loope
xchg
add
lods
sbb
adc
not
or
sub
stc
in
mov
xchg
dec
or
and
xor
repnz
pop
pop
or
xor
add
xor
xchg
dec
adc
inc
repnz
dec
and
repnz
pop
sub
xchg
dec
aam
in
mov
or
xchg
das
or
cmp
mov
inc
repnz
movs
dec
xchg
dec
rol
xchg
adc
jb
pop
retf
movs
retf
movs
and
xchg
pop
add
push
mov
or
mov
retf
movs
mov
xchg
dec
inc
ins
or
jns
cld
xchg
cmp
daa
or
mov
mov
xor
xchg
mov
movs
mov
or
sub
dec
or
retf
adc
adc
(bad)
push
xchg
pop
adc
mov
in
or
jl
cdq
dec
jns
push
sub
hlt
jns
nop
pop
push
cdq
dec
test
dec
loope
xchg
paddb
ja
jg
dec
rol
(bad)
int3
test
or
in
loopne
xchg
and
cmp
test
aam
jmp
fcmovnb
call
icebp
test
adc
mov
or
or
in
mov
daa
or
mov
jns
or
lods
std
fwait
dec
inc
scas
or
pop
xchg
add
jns
pushf
push
nop
xchg
or
cmp
or
mov
ja
push
leave
jae
pushf
clc
adc
xor
inc
push
popf
dec
mov
(bad)
(bad)
xor
pop
popf
dec
out
in
outs
dec
daa
or
hlt
add
xchg
retf
pusha
jne
nop
mov
and
or
cld
and
add
adc
imul
stc
xchg
dec
or
scas
in
nop
dec
or
in
mov
fwait
dec
or
in
out
xchg
fdivr
dec
add
jmp
inc
daa
jns
or
loopne
inc
or
adc
lahf
dec
in
stc
and
int3
jmp
popf
and
add
test
retf
inc
enter
and
ds
push
mov
pop
retf
shr
daa
loop
and
xchg
and
mov
repnz
or
pusha
or
dec
or
mov
or
sub
sub
or
mov
inc
jb
clc
shl
xchg
rol
sbb
sbb
xchg
pop
popa
adc
jns
jno
movs
inc
rcl
and
lea
popf
stos
mov
div
inc
into
and
mov
xchg
shl
or
add
sar
jb
cmp
xor
mov
out
adc
adc
push
and
adc
retf
movs
inc
push
jns
or
cmp
xchg
mov
retf
movs
xchg
hlt
pusha
push
leave
inc
xchg
mov
pop
in
popa
lahf
cwde
cmps
xchg
in
cmps
nop
and
call
and
lahf
jo
and
lahf
cmps
xchg
lock
and
adc
lahf
test
stc
xchg
pop
shl
adc
inc
push
xchg
loopne
cmps
jns
add
outs
test
cmps
cmp
nop
adc
adc
pop
and
test
dec
inc
lock
xchg
mov
fwait
and
cmp
and
pop
or
and
add
and
cmp
call
add
add
stos
sbb
xchg
in
stos
test
inc
xchg
mov
dec
pop
sbb
add
dec
jb
in
lods
stos
lods
hlt
leave
add
and
lods
jb
in
ss
aam
and
inc
aaa
xor
xor
push
pop
test
rol
sbb
xchg
mov
add
std
adc
cmps
mov
or
xchg
sbb
mov
and
mov
nop
inc
dec
pop
mov
sbb
jg
fld
jb
in
sar
rcl
mov
inc
jmp
sbb
inc
icebp
mov
xchg
sbb
pop
sbb
push
pop
ret
mov
mov
and
dec
xor
dec
cmp
mov
pop
movs
pop
mov
aam
pop
mov
inc
repnz
mov
mov
inc
repnz
loopne
pop
lds
syscall
leave
mov
repnz
mov
repnz
cmps
jae
add
dec
push
scas
push
daa
dec
test
mov
mov
dec
mov
mov
pop
leave
inc
test
sub
and
test
test
js
in
jnp
cmp
mov
popa
push
mov
push
xchg
mov
(bad)
jp
dec
pop
repnz
test
stos
int3
mov
add
dec
adc
or
loopne
scas
in
or
test
movs
mov
nop
scas
in
cmps
sub
movs
mov
loopne
fst
sbb
scas
and
ret
addr16
dec
in
or
addr16
cmps
sbb
xchg
mov
call
popa
gs
bound
in
or
movs
clc
and
daa
push
fisttp
sub
inc
push
xor
add
dec
adc
mov
jl
js
dec
scas
mov
sub
mov
push
mov
jle
sub
add
xor
jl
loopne
add
scas
add
in
or
in
mov
fadd
les
in
jb
mov
shl
sub
push
adc
sbb
shl
pop
ds
test
push
repnz
or
ror
sahf
push
and
sub
add
xchg
scas
cmp
cmp
scas
movs
or
mov
hlt
shl
push
push
xchg
sbb
shl
(bad)
loopne
mov
les
dec
cmovs
inc
mov
fs
sbb
loopne
xor
nop
adc
mov
add
ret
mov
les
dec
aaa
nop
add
push
mov
lds
aas
enter
pop
mov
jno
xchg
das
cmp
inc
les
dec
xchg
add
(bad)
in
leave
test
add
mov
inc
pop
add
arpl
push
and
jecxz
scas
inc
push
enter
(bad)
ins
enter
and
loope
enter
inc
sti
enter
add
adc
leave
and
add
inc
pop
inc
pop
inc
dec
xchg
sbb
mov
lahf
das
push
cmp
adc
pop
mov
sbb
mov
enter
int
cwde
and
push
enter
call
nop
sbb
cmp
mov
cmovs
inc
(bad)
cmp
fs
or
inc
jo
xchg
jb
nop
cmp
iret
fs
in
lock
dec
jne
add
push
add
sub
into
pop
daa
push
add
aas
mov
aad
cmp
hlt
dec
mov
or
shl
cmp
add
push
pop
pop
inc
inc
pop
aam
(bad)
adc
or
sbb
mov
inc
dec
rcl
rcl
out
rol
cmp
add
ins
jmp
rol
leave
or
jb
in
dec
inc
dec
jb
stc
jl
dec
dec
(bad)
je
dec
pop
dec
inc
repnz
mov
daa
inc
push
add
cs
inc
inc
adc
jns
add
aas
shr
pop
xor
scas
sub
mov
inc
aad
nop
inc
ins
aam
xchg
or
cmp
dec
js
int3
jo
lock
add
fmul
xchg
pop
test
cdq
fst
bnd
leave
lock
push
xor
cmp
mov
rol
adc
or
sub
test
in
and
or
jno
shl
add
aad
(bad)
lock
inc
ds
adc
iret
add
retf
lock
(bad)
loopne
add
xchg
fcmovbe
add
and
pop
push
mov
push
js
retf
fild
dec
and
cmp
sbb
jb
fcmovnbe
js
(bad)
inc
or
pusha
je
inc
dec
inc
dec
push
shl
enter
retf
jmp
add
call
iret
fdiv
enter
adc
sbb
pusha
je
push
or
cmps
or
add
jle
and
pop
add
add
aas
add
enter
sub
fisub
shl
retf
in
and
daa
jns
jb
(bad)
mov
movs
cmp
in
shr
sbb
mov
loopne
or
enter
loopne
or
nop
add
mov
sub
add
dec
push
mov
mov
cmp
dec
dec
add
fmul
fcom
jbe
enter
lods
cmp
nop
or
xchg
(bad)
aam
jb
mov
aad
fsub
add
jb
fldenv
and
or
xchg
xchg
sbb
(bad)
pop
ins
lea
cmp
or
lock
mulps
sub
lods
icebp
dec
nop
xlat
dec
sbb
in
xor
(bad)
fnstcw
sbb
pop
mov
out
call
adc
add
enter
mov
xchg
pop
ins
(bad)
aad
stos
in
and
jb
jmp
pop
ror
adc
or
sbb
(bad)
or
adc
mov
xchg
push
and
jmp
cmp
add
in
push
test
xchg
in
dec
adc
or
jb
in
push
pop
jns
(bad)
fild
add
jo
test
inc
push
enter
lock
and
add
jo
in
jb
lock
xchg
inc
and
js
cmovs
inc
jmp
fs
js
dec
and
mov
and
repnz
add
or
js
jne
add
push
add
inc
repnz
mov
icebp
repnz
js
fist
cld
repz
leave
add
ins
pop
cmp
dec
pop
lock
jecxz
mov
hlt
repnz
enter
cmc
loopne
leave
stos
nop
add
in
cmc
nop
mov
repz
add
dec
push
jnp
mov
cmp
add
xor
cwde
xchg
or
clc
mov
xchg
inc
leave
retf
jmp
pushf
inc
or
repz
inc
dec
out
xchg
jb
in
in
adc
cli
mov
jns
mov
enter
mov
adc
and
sbb
inc
(bad)
sti
in
adc
cmp
cld
fld
in
inc
jo
bnd
adc
cld
mov
loop
push
inc
inc
in
and
inc
pushf
std
cmps
nop
and
in
call
sub
and
in
movs
jnp
and
jb
pushf
mov
leave
in
hlt
sar
dec
xchg
pop
xor
div
push
mov
in
dec
mov
or
cmp
enter
call
mov
inc
adc
or
pop
pop
add
push
mov
or
push
in
add
dec
dec
add
leave
or
hlt
sar
dec
push
sub
xchg
in
les
dec
add
dec
and
cmp
icebp
lods
icebp
enter
add
add
add
add
xchg
inc
and
call
add
in
movs
mov
and
add
add
push
enter
dec
xlat
add
add
dec
fiadd
dec
add
push
add
push
xchg
pushf
dec
sub
pop
and
dec
mul
das
xchg
xor
jns
add
sub
dec
(bad)
div
inc
push
add
dec
or
(bad)
clc
xor
sub
pop
or
add
and
cmp
pop
and
cmp
clc
sub
popf
adc
push
or
nop
iret
xchg
cmp
dec
dec
inc
stc
jo
adc
dec
dec
js
dec
push
ror
int3
adc
mov
pop
add
aam
mov
or
stos
or
inc
push
daa
push
(bad)
cld
mov
cmp
mov
clc
sub
not
or
xchg
push
and
cmp
cld
adc
sub
mov
push
cmp
or
in
mov
and
clc
xor
or
lods
or
nop
mov
add
add
mov
inc
scas
nop
pop
add
in
leave
or
dec
sbb
mov
call
xchg
fmul
and
add
in
or
jl
or
dec
sub
dec
or
rcr
adc
adc
nop
cmp
enter
push
or
inc
or
adc
jg
add
je
push
add
fnstcw
mov
or
cmp
or
dec
push
ror
jne
inc
jg
movs
sub
and
in
adc
adc
or
cmp
push
pop
pop
arpl
add
jg
add
enter
push
jns
add
or
nop
pop
pop
dec
ror
pushf
inc
push
add
pop
hlt
adc
add
add
and
bound
nop
mov
inc
push
sbb
aaa
push
or
das
add
or
push
enter
jmp
pushf
sub
sbb
pop
sbb
repnz
or
mov
add
call
jne
or
nop
and
or
and
xchg
or
and
jb
(bad)
bndstx
nop
xchg
sbb
sbb
adc
add
sbb
push
xchg
pushf
add
dec
test
and
das
xchg
push
or
add
inc
xchg
add
jbe
push
push
push
mov
fwait
dec
or
adc
div
out
adc
push
pusha
or
xchg
test
cvtpi2ps
cmp
mov
push
int3
and
and
retf
mov
sub
push
adc
push
loopne
sub
add
(bad)
hlt
jo
push
and
js
inc
adc
and
test
dec
or
or
mov
in
push
rcl
inc
push
push
in
es
add
jae
xor
inc
es
rol
sub
dec
pop
das
jp
and
rcr
pop
aas
cmp
loope
das
sbb
adc
loopne
xchg
(bad)
pusha
and
cmps
dec
pop
adc
sub
inc
mov
enter
sbb
xchg
addr16
test
dec
inc
sub
imul
dec
cmps
shl
mov
and
jns
dec
add
dec
or
in
fild
dec
jns
or
in
out
dec
pop
push
out
sub
cli
das
push
mov
and
dec
in
sbb
pop
repnz
enter
sub
dec
sbb
and
sub
enter
test
dec
test
dec
and
repnz
test
dec
popa
sub
push
aam
pop
and
add
addr16
push
adc
not
test
dec
sub
push
jb
repnz
xor
test
dec
jnp
dec
and
mov
cs
repnz
add
add
push
addr16
xchg
(bad)
or
dec
stos
xchg
icebp
and
xchg
and
pop
sbb
xor
mov
add
xor
jns
mov
or
mov
mov
movs
hlt
xchg
jns
out
movs
dec
sub
(bad)
xor
pop
jns
pop
push
add
or
and
xor
xor
xor
pop
push
adc
dec
add
pop
sbb
sub
aas
jmp
and
adc
xchg
hlt
outs
loopne
mov
das
dec
xchg
sbb
xor
cmovs
pop
cmp
pop
ss
repnz
ss
adc
ss
int3
dec
pop
test
and
and
leave
in
daa
aaa
and
jb
aaa
movs
and
push
add
mov
push
js
inc
jb
push
js
fcomp
pushf
and
cld
movs
dec
add
les
cwde
adc
aaa
add
add
dec
push
bound
dec
push
xor
dec
push
cmp
enter
pop
nop
sub
pop
cmp
add
adc
cmp
mov
sar
dec
mov
sbb
scas
pop
aas
and
loopne
sbb
in
cmp
test
add
mov
push
addr16
sub
sub
add
aam
dec
fistp
add
aas
dec
mov
xchg
ror
test
dec
xchg
shl
and
pop
jb
add
movups
sbb
jns
pop
inc
lahf
push
add
adc
sub
inc
inc
repnz
add
add
inc
dec
enter
xor
dec
cmp
jl
repnz
dec
add
sbb
push
xchg
pushf
pop
or
int
and
dec
or
xor
fst
(bad)
push
leave
inc
dec
call
and
xchg
ss
mov
xchg
push
aaa
xchg
fs
sub
pop
push
cmps
cmp
pop
and
sub
sbb
dec
hlt
and
inc
test
dec
push
mov
or
cmp
cmp
enter
(bad)
dec
mov
jb
test
dec
sub
or
pop
sbb
aas
inc
push
jb
cmps
cmp
jns
sub
and
xor
retf
sub
push
enter
dec
dec
push
xchg
pushf
mov
loopne
add
cmp
cmp
sbb
sbb
xchg
dec
pushf
inc
pushf
ret
shl
cmp
mov
xor
leave
add
mov
or
mov
dec
jg
dec
push
jne
fmul
xor
in
jecxz
imul
inc
dec
xor
jb
pop
and
sbb
dec
sbb
dec
push
fcom
and
stc
add
cmps
mov
sbb
dec
jns
popa
ret
mov
sub
and
dec
popa
cmps
dec
push
in
mov
sbb
dec
sub
mov
cmps
mov
stc
inc
test
cmp
push
cmps
pop
pop
jb
dec
(bad)
(bad)
repnz
and
add
mov
pop
mov
pop
or
pop
ret
nop
mov
cmps
retf
cmps
mov
push
cmp
cmps
inc
repnz
inc
mov
and
shr
pop
shr
leave
and
pop
mov
in
and
pop
mov
adc
and
adc
retf
mov
pop
pushf
repnz
pop
in
or
in
inc
sar
mov
add
movs
ror
jns
xchg
jl
popa
les
leave
and
cwde
cmp
pop
dec
and
cmp
repnz
mov
dec
sbb
arpl
adc
xor
in
repnz
enter
push
and
daa
and
and
retf
movs
dec
dec
enter
retf
movs
add
push
enter
push
test
mov
in
mov
add
adc
or
stc
sub
nop
push
adc
daa
xchg
xchg
or
or
inc
add
data16
inc
mov
dec
test
dec
pusha
adc
sbb
inc
aaa
sub
(bad)
inc
and
or
loop
mov
dec
mov
inc
xchg
push
fistp
dec
in
inc
addr16
mov
retf
jg
inc
push
adc
sbb
cmp
out
push
sbb
dec
mov
xchg
sbb
pop
push
jecxz
shr
lock
sbb
dec
push
sbb
out
ins
pop
inc
pop
(bad)
xlat
out
jl
(bad)
test
dec
push
add
pop
mov
pop
shl
pop
in
in
add
push
add
test
cmps
add
add
sbb
mov
and
inc
leave
inc
push
mov
dec
jl
(bad)
test
dec
test
dec
repnz
repnz
test
dec
or
push
xor
adc
add
jno
add
inc
repnz
push
and
or
test
add
jp
push
aaa
out
fidiv
mov
jnp
jmp
and
jmp
xchg
aaa
sub
jmp
jae
aaa
cmp
daa
mov
aam
dec
add
push
lods
add
xchg
add
xor
sbb
push
dec
sub
push
add
cs
(bad)
loopne
frstor
frstor
in
jge
in
add
or
push
out
add
mov
jge
push
setns
sbb
sbb
add
push
jo
jo
les
xchg
jnp
dec
leave
xchg
sbb
xchg
jge
push
add
mov
inc
sahf
dec
add
mov
inc
mov
mov
sub
arpl
add
sub
pop
jmp
sbb
mov
mov
mov
adc
cmp
jg
add
ins
jg
push
sbb
mov
mov
add
or
xor
add
nop
add
out
jb
adc
jno
pushf
mov
test
(bad)
nop
sbb
xchg
add
sbb
data16
jl
add
es
or
les
add
ror
xor
arpl
add
call
or
pop
or
add
shl
pop
inc
pop
push
gs
add
loopne
jo
cmp
fiadd
cld
push
add
adc
pop
adc
sub
retf
retf
dec
cmp
sub
add
sub
mov
push
xor
cmp
cmp
push
repnz
pop
push
and
xchg
cmp
xlat
or
in
push
sbb
mov
xchg
in
or
sub
xor
mov
cmp
jo
data16
inc
pusha
push
cmp
in
mov
adc
ss
int
test
test
test
test
jnp
pushf
or
ins
inc
cwde
push
sbb
add
test
dec
aam
mov
cmp
inc
or
mov
pop
add
mov
mov
fs
pusha
xchg
xor
and
sbb
pop
out
icebp
aad
(bad)
xchg
push
mov
pop
sahf
mov
mov
xchg
leave
or
mov
in
pop
or
adc
shl
jmp
mov
sbb
mov
cwde
sub
out
push
iret
push
jns
or
in
fcmovnu
ss
jo
push
hlt
mov
das
pop
out
mov
mov
mov
mov
fcom
xchg
xchg
mov
push
push
repnz
sbb
mov
xchg
pop
repnz
mov
and
mov
in
mov
ins
mov
in
je
mov
inc
loopne
cmp
(bad)
js
loopne
and
hlt
cmps
arpl
sub
aad
fldenv
xlat
mov
inc
sub
adc
sar
pusha
sahf
mov
add
mov
cli
mov
cmp
xchg
mov
sub
mov
pop
jb
enter
test
inc
sub
mov
fwait
int
mov
(bad)
out
out
mov
push
and
add
sbb
scas
es
iret
lea
shl
ret
sub
out
xor
pop
dec
mov
pop
mov
ins
add
nop
xor
inc
sbb
push
jl
repz
push
loope
mov
in
mov
(bad)
cmp
in
sahf
es
(bad)
nop
pop
xchg
(bad)
jo
out
ins
adc
jns
pop
jne
inc
add
scas
test
mov
imul
jo
nop
mov
leave
or
mov
shl
push
pop
xchg
hlt
push
add
les
push
xchg
ja
xchg
add
inc
(bad)
dec
mov
inc
imul
fsub
and
adc
or
pop
sti
adc
adc
sub
xor
sbb
iret
inc
pop
aas
add
mov
push
adc
and
shr
xchg
dec
add
pop
sub
dec
add
pop
push
inc
cmps
test
sbb
adc
dec
dec
adc
push
dec
sub
or
aam
push
aaa
dec
mov
xchg
dec
call
xchg
mov
push
fld
xor
xor
ror
push
and
dec
xchg
dec
test
add
pop
scas
daa
jns
dec
or
lods
xchg
dec
and
push
xor
and
xor
xchg
outs
sbb
in
mov
xor
test
mov
test
loop
cmp
dec
sub
inc
sub
mov
neg
nop
push
fistp
xchg
sar
and
mov
nop
jl
pop
adc
cmps
cwde
add
mov
dec
push
push
inc
ds
dec
fstp
loopne
int3
(bad)
jbe
retf
push
popf
call
add
in
ss
ja
xor
inc
pushf
(bad)
fld
popf
cmp
cmp
dec
xor
mov
sbb
lahf
dec
dec
dec
inc
lods
fmul
mov
xor
ret
xchg
xchg
xchg
daa
adc
mov
xchg
int3
aas
adc
ja
js
pop
int
cli
push
add
mov
push
dec
ret
dec
push
xchg
inc
pop
jo
xor
dec
call
push
adc
or
daa
jno
push
push
xor
in
mov
inc
sub
xchg
pop
and
or
cmp
inc
jns
xchg
rcr
push
sub
bound
ins
push
sbb
add
rol
jbe
push
adc
xor
pop
jl
and
adc
jo
fimul
push
push
retf
adc
shl
xchg
sub
lods
dec
enter
dec
and
inc
or
push
dec
push
adc
ficom
push
sbb
mov
dec
sub
and
js
adc
jns
dec
test
add
jb
mov
sub
aam
add
movs
sbb
xchg
in
mov
sub
ss
lods
enter
add
mov
inc
enter
sub
xchg
leave
sub
test
cs
fcmovnb
stos
sub
push
call
cwde
add
dec
inc
sub
mov
cs
mov
add
mov
cs
pusha
rcl
mov
or
sbb
inc
mov
das
ficom
push
adc
call
push
and
nop
inc
ins
popa
push
and
pusha
test
jmp
or
or
das
xchg
aam
sbb
dec
pop
jno
lods
in
dec
or
push
mov
add
pop
bound
or
mov
adc
cmp
or
cmp
cmp
int3
sbb
clc
inc
and
push
pop
jle
add
jecxz
movs
fcomp
movs
xchg
xchg
pop
add
mov
pushf
and
mov
mov
dec
in
dec
inc
leave
and
dec
mov
adc
push
push
sub
aas
fld
inc
retf
xchg
pop
pushf
adc
movs
dec
mov
add
xor
out
and
scas
aad
mov
and
inc
jnp
cmp
lds
popf
push
scas
cmp
outs
sar
push
mov
repnz
in
sub
enter
and
mov
cmp
dec
ins
and
sbb
movs
or
mov
add
stc
js
dec
nop
pop
pop
cli
mov
hlt
sbb
(bad)
mov
push
jns
sub
test
out
xor
dec
add
xor
dec
leave
retf
lods
movs
add
cwde
ins
sahf
xchg
pop
jb
movs
add
xchg
fimul
mov
or
das
cmp
stos
in
xchg
xchg
frstpm(287
and
retf
leave
leave
leave
enter
xchg
jecxz
in
in
lods
push
mov
or
cmp
jns
scas
push
sahf
ret
pushf
mov
out
mov
imul
es
ret
dec
dec
dec
jno
icebp
aas
mov
jns
dec
ja
mov
mov
mov
and
jns
mov
pop
pop
jb
mov
xor
das
cmp
mov
jno
fimul
pop
repnz
push
xor
mov
adc
push
mov
inc
repnz
(bad)
dec
aaa
cmovl
ins
push
btc
pop
pusha
outs
push
pop
movs
lds
adc
jmp
ret
push
mov
jle
push
mov
adc
adc
and
dec
movaps
fwait
xchg
pop
pop
inc
gs
test
inc
in
sbb
mov
aaa
or
jmp
shl
pop
jne
iret
push
fmul
and
push
repnz
mov
pop
and
sbb
jb
mov
outs
and
sahf
jmp
nop
cwde
pop
xchg
push
xor
inc
enter
cmp
rol
nop
inc
adc
cmp
hlt
push
cmp
dec
push
imul
pop
xchg
adc
push
mov
cmp
push
mov
stos
dec
mov
cmp
sub
cmp
inc
pop
imul
sub
mov
adc
fs
or
mov
cmp
fcmovbe
adc
stos
mov
adc
mov
and
jb
dec
mov
cmp
or
mov
popa
and
mov
add
mov
mov
cmp
lea
daa
xchg
dec
mov
push
mov
mov
xor
mov
dec
pop
adc
push
fidivr
lods
lods
lods
sbb
mov
mov
mov
mov
xchg
aas
test
xor
xor
dec
push
and
rcr
push
mov
shr
add
nop
test
(bad)
mov
push
imul
sub
push
xchg
sbb
sub
inc
pop
retf
pushf
in
xor
jo
aas
jmp
xor
mov
mov
cmp
arpl
jns
push
fnop
push
(bad)
loopne
xchg
mov
xchg
ret
pushf
mov
fbstp
xor
aad
inc
inc
pop
jb
or
push
repnz
inc
ins
add
je
inc
xor
daa
retf
push
ss
jae
dec
sub
sbb
push
cmps
jno
push
fnstenv
mov
push
jne
das
retf
mov
mul
aam
dec
sub
push
repnz
clc
call
fwait
test
test
leave
or
and
mov
mov
cmp
dec
inc
fcomi
mov
cmp
mov
frstpm(287
in
mov
call
mov
in
out
cmp
pusha
xchg
jb
repnz
push
mov
jns
out
das
mov
cmp
out
push
rol
sahf
pushf
pushf
mov
fimul
dec
test
in
mov
mul
ret
in
or
jnp
xchg
in
rcl
cmp
ret
das
cmp
ret
mov
jmp
cmp
dec
push
jo
aam
xchg
ret
leave
adc
sbb
inc
int3
ds
dec
and
pop
into
les
adc
ds
push
xor
pop
xchg
adc
and
aas
ja
jmp
or
add
(bad)
fs
xor
mov
push
adc
dec
xchg
and
cs
push
xchg
gs
inc
inc
dec
enter
and
xchg
push
push
or
mov
push
(bad)
xchg
inc
iret
mov
add
adc
inc
jno
in
xchg
and
mov
inc
xchg
ret
rol
adc
ins
sbb
dec
inc
pop
jb
test
mov
daa
enter
and
and
xchg
ret
adc
inc
popf
dec
(bad)
dec
cmp
and
stos
sub
and
in
xchg
ret
mov
fs
push
mov
inc
pop
dec
adc
stos
ins
add
mov
inc
imul
inc
sbb
or
ins
dec
inc
or
ins
push
and
jl
jge
push
and
jns
ins
rol
adc
push
ins
or
sbb
dec
pop
pop
ins
dec
inc
or
rcr
push
xor
sub
cdq
ret
dec
fcomp
and
ins
ins
inc
cli
mov
and
sbb
adc
cmp
pop
and
pop
fwait
xchg
jle
add
in
fs
cmp
adc
xacquire
sub
dec
add
add
push
je
dec
push
sbb
cmp
inc
fist
popf
dec
mov
push
sbb
mov
lahf
xlat
or
push
and
jo
xchg
xor
mov
mov
repnz
(bad)
jns
jns
or
cmp
add
xchg
jns
outs
push
test
test
les
out
dec
pop
enter
add
in
xchg
aam
dec
aam
or
sub
scas
cmp
adc
sub
cmps
imul
(bad)
int
es
mov
in
xor
add
repnz
dec
xchg
enter
nop
mov
jge
or
push
xchg
add
xor
mov
les
cmp
cdq
leave
out
leave
and
mov
clc
push
dec
retf
leave
pop
rol
xchg
jl
jge
retf
retf
inc
pop
cld
clc
cld
clc
pop
add
or
mov
outs
pop
xor
adc
pop
xor
mov
pop
adc
ror
mov
pop
aas
sub
test
push
mov
ss
adc
mov
mov
or
sbb
xor
push
push
adc
sbb
dec
and
dec
adc
inc
inc
cwde
shr
inc
jmp
push
dec
mov
mov
or
aaa
cmps
jmp
js
add
mov
sahf
push
es
std
push
push
test
xchg
inc
push
inc
push
mov
mov
push
iret
inc
xor
push
jb
adc
repnz
iret
mov
movs
push
pusha
sbb
mov
add
mov
daa
stc
add
inc
ror
push
xor
scas
nop
dec
rcl
jp
sbb
jmp
dec
jno
inc
adc
ins
sbb
lods
in
and
sub
mov
cmp
cmp
mov
dec
inc
int3
out
inc
loopne
in
or
cmovne
lahf
mov
shl
push
inc
not
repnz
jbe
seto
or
jns
jb
dec
xchg
in
(bad)
cmp
cmp
push
mov
or
sahf
pushf
pushf
mov
in
fmul
dec
inc
ins
mov
adc
daa
daa
daa
and
pop
xchg
int3
xchg
xchg
xchg
daa
sbb
push
jp
xchg
mov
sahf
aad
push
fisttp
movs
fld
das
pop
add
inc
fsub
inc
daa
dec
ret
inc
dec
leave
inc
jmp
push
jb
dec
mov
mov
push
in
jno
adc
mov
cwde
dec
xchg
pushf
nop
push
mov
in
and
dec
nop
dec
add
mov
cmp
jmp
dec
ins
jbe
add
jmp
outs
inc
push
add
mov
les
in
pushf
or
ror
fcom
add
and
jmp
fiadd
jns
dec
xchg
push
xchg
pop
and
add
push
nop
and
rol
movs
dec
push
add
inc
push
in
inc
or
add
or
add
pushf
dec
jno
in
and
int3
dec
mov
mov
dec
mov
stc
inc
dec
test
dec
sbb
dec
add
adc
cdq
push
inc
or
cmp
inc
sub
inc
push
es
and
nop
dec
mov
ror
sbb
dec
mov
fmul
push
sbb
popf
dec
mov
inc
loopne
jmp
push
pop
dec
push
add
xchg
adc
mov
in
push
cmp
add
or
inc
push
add
ins
and
sub
pusha
push
sbb
dec
push
add
nop
push
or
jmp
mov
mov
mov
and
push
test
sub
jns
add
scas
inc
pusha
nop
dec
jmp
push
mov
sahf
call
dec
push
or
lods
push
jmp
dec
in
lea
mov
inc
dec
cmp
jno
jo
or
test
icebp
lea
pop
jmp
and
inc
out
stos
ins
add
cmp
fst
mov
cmp
jbe
fstp
inc
push
and
add
dec
cmp
cmp
int3
xchg
jo
fnsave
sbb
aaa
sub
sub
push
inc
and
push
dec
fidiv
fcomp
pop
push
add
in
loopne
fbstp
(bad)
cli
ficom
fist
movs
xchg
xchg
fistp
or
sub
enter
dec
sub
dec
add
and
and
mov
in
aaa
dec
in
in
fist
js
sahf
add
stos
sbb
lock
in
inc
xor
mov
aaa
dec
pop
inc
adc
sub
lahf
ja
leave
rol
ffree
loopne
inc
push
xor
loopne
push
je
loopne
xchg
xlat
push
clc
es
loope
loope
mov
loope
inc
push
mov
add
push
mov
jge
push
sub
les
inc
loop
xor
xchg
and
mov
xor
loop
mov
fwait
in
loop
push
push
and
jns
pop
fadd
jp
jecxz
cmp
dec
mov
aaa
dec
mov
inc
imul
pop
add
(bad)
hlt
pop
dec
in
and
jmp
inc
sbb
push
test
cmp
mov
mov
and
inc
paddq
inc
call
in
in
sub
jns
out
in
in
ja
cmp
in
mov
xor
or
gs
dec
push
popa
add
dec
push
enter
dec
xchg
push
push
dec
xchg
inc
repnz
dec
in
dec
push
je
repnz
sub
or
push
push
add
add
fstp
leave
pop
adc
push
(bad)
out
shl
pop
and
pop
test
out
into
push
dec
xor
cmp
or
out
in
and
push
cld
sbb
and
cmps
in
pushf
pop
xor
xor
jns
pop
jne
pop
adc
sub
movs
call
and
fcomp
jmp
push
jno
adc
fst
fincstp
jnp
xchg
stos
mov
mov
lods
test
in
xor
es
icebp
sar
sbb
ror
and
lds
lods
xchg
xor
jae
inc
xor
out
jmp
sub
ins
pop
xchg
add
cmp
jns
or
adc
and
and
retf
jecxz
mul
xchg
mov
retf
mov
into
jmp
jmp
test
ins
in
gs
dec
jbe
xchg
add
shl
pop
shl
je
inc
repnz
xchg
jmp
mov
mov
cmp
pop
and
mov
stos
fstp
xchg
adc
in
or
mov
sbb
mov
push
cdq
jge
xchg
test
in
or
xor
cmp
in
pop
add
inc
leave
pop
ja
out
or
jns
scas
shr
pop
jne
scas
xor
and
out
mov
adc
sub
scas
outs
push
jns
out
mov
lds
xchg
adc
xchg
out
ds
jge
jl
and
mov
das
dec
sub
xchg
mov
inc
leave
sub
jmp
pop
pop
jae
xchg
xor
loop
in
xor
stos
fnstenv
jecxz
shl
push
push
jo
repz
ins
dec
icebp
scas
js
not
repnz
retf
retf
jecxz
mov
scas
and
or
in
inc
leave
es
repnz
aam
in
iret
bnd
dec
imul
fmul
fmul
xchg
inc
repnz
loopne
fmul
adc
sbb
jo
dec
cmp
and
(bad)
bound
xor
pusha
addr16
cmp
push
xchg
push
dec
fadd
jl
sub
hlt
push
adc
aaa
leave
or
hlt
jl
lods
push
xor
repnz
add
in
sbb
pusha
les
mov
les
test
cmc
sub
mov
add
addr16
div
xchg
out
in
cmc
div
ret
std
pop
and
es
and
sub
push
pop
sbb
sbb
das
xor
sbb
neg
adc
mov
stos
xor
adc
das
push
cmp
js
inc
clc
ret
ss
push
push
clc
leave
retf
retf
and
repnz
in
in
cmp
ins
stc
mov
dec
shl
repnz
or
mov
xchg
mov
ins
fmul
not
mov
stc
add
movs
push
sbb
rcr
pop
adc
cwde
cli
and
or
jl
not
sub
jb
xor
adc
inc
pop
push
sub
add
xor
js
dec
fidivr
(bad)
rcr
add
fmul
test
fdivrp
daa
dec
mov
mov
rol
add
pop
mov
cs
enter
add
xor
std
imul
xchg
pushf
loopne
pop
std
xchg
cmp
imul
(bad)
nop
std
pop
pushf
push
sub
or
aas
(bad)
lods
in
mov
pop
add
shl
sub
xor
nop
out
sbb
sub
es
xchg
dec
lods
jecxz
inc
xor
xchg
push
add
jl
fwait
push
movs
test
xlat
jb
mov
mov
xlat
or
in
(bad)
add
pushf
xchg
fist
jae
cmovo
pop
push
stc
mov
xlat
add
mov
aam
or
std
lahf
leave
mov
gs
mov
dec
mov
dec
sub
aam
addr16
call
xchg
xchg
mov
dec
dec
sub
push
loope
sbb
cs
and
mov
inc
in
dec
fld
imul
xchg
sbb
fisttp
jns
xchg
movs
sbb
adc
ja
add
in
and
and
add
loopne
push
lahf
mov
jns
or
mov
sar
pop
jne
add
mov
jb
nop
add
dec
sbb
lods
rol
add
adc
add
and
sub
test
out
neg
sub
add
adc
mov
ret
(bad)
mov
xchg
dec
and
jmp
lds
inc
fsub
test
add
inc
ret
inc
jmp
push
repz
std
fld
js
push
dec
repz
retf
cmp
xchg
push
sbb
scas
test
in
leave
retf
cwde
push
mov
fadd
and
in
push
pop
push
pop
and
stos
mov
pop
or
inc
pop
repnz
or
fs
push
leave
push
repnz
js
dec
or
ret
dec
pushf
pop
movs
sub
and
dec
stos
dec
adc
mov
push
mov
inc
sub
loop
xor
int
stos
sbb
dec
das
cmc
jns
pop
jns
add
jno
ss
cmp
neg
or
repnz
(bad)
add
or
inc
leave
pop
mov
or
bound
cmps
xor
sbb
getsec
pop
jne
add
loopne
in
(bad)
xor
leave
add
pop
and
call
(bad)
ins
pop
dec
jb
or
sahf
or
mov
(bad)
fidiv
xor
mov
aam
leave
push
mov
aam
xor
or
add
fmul
or
movs
mov
jo
mov
add
push
pop
cmp
popa
repnz
lahf
pop
lock
je
mov
push
push
xchg
mov
or
pop
pop
or
and
scas
aam
shr
fs
sub
std
cmps
add
pop
addr16
leave
mov
std
out
dec
pop
leave
cmp
add
in
dec
dec
sbb
add
fst
jns
pop
cmps
push
push
xor
xlat
pop
pop
lds
dec
xchg
leave
sar
shl
push
ffree
push
xlat
call
daa
push
push
dec
clc
es
pop
cmp
enter
lahf
xchg
cmovo
xor
test
pop
ins
scas
loopne
mov
and
adc
xor
push
inc
aam
jmp
stos
jb
loop
push
mov
adc
icebp
dec
sub
dec
adc
pop
clc
mov
adc
in
(bad)
jmp
mov
ss
imul
ins
adc
fsubr
mov
jo
pop
adc
or
das
mov
adc
mov
jle
jl
ds
das
cmp
sar
mov
ficom
dec
adc
dec
and
aas
fwait
xchg
aad
outs
fs
pop
mov
push
add
mov
jno
add
icebp
add
pop
push
fucomp
adc
push
push
add
enter
or
add
push
adc
adc
adc
push
adc
or
pop
enter
fadd
adc
xor
add
adc
lds
add
fadd
ret
icebp
lods
and
mov
pop
imul
ret
imul
test
jb
enter
out
adc
enter
and
mov
mov
push
pop
push
dec
movs
nop
inc
and
xchg
mov
bound
pusha
mov
arpl
jo
js
jno
push
add
iret
je
jno
mov
dec
stos
outs
or
mov
xchg
data16
xchg
mov
xchg
xchg
test
add
adc
pop
xchg
inc
leave
retf
retf
js
inc
sbb
lock
in
sbb
sbb
sbb
push
sub
pop
mov
les
dec
sub
inc
push
jmp
jb
aam
clc
push
xchg
push
fs
call
dec
test
or
loope
lea
jmp
adc
xchg
xor
les
sbb
imul
push
sbb
lods
xchg
les
hlt
in
add
inc
sbb
es
xlat
cmp
les
pop
sbb
repnz
and
pop
rol
(bad)
ja
shl
sbb
xor
add
push
push
or
jnp
push
adc
inc
mov
repnz
add
xor
es
rcr
cmps
xchg
dec
xchg
dec
nop
test
push
lods
ror
pop
ret
add
popa
jp
ret
sahf
les
dec
(bad)
mov
mov
sub
push
cmp
pop
daa
out
adc
push
push
xchg
xchg
inc
test
daa
fsub
aam
repnz
adc
xchg
cmp
jns
es
push
mov
add
sub
pop
leave
add
rcr
movs
push
out
dec
pop
int3
and
sub
or
mov
dec
mov
xor
nop
hlt
push
and
mov
call
add
jns
adc
and
movs
mov
fbld
or
mov
and
cmp
pushf
cmp
mov
daa
push
and
push
mov
push
mov
imul
pop
pop
jb
scas
and
and
and
xor
out
das
push
and
gs
and
pop
test
jo
jle
std
out
fdivrp
push
add
pop
pop
and
push
das
dec
inc
sub
das
and
movs
sbb
mov
xchg
inc
pop
pop
push
shl
sub
outs
(bad)
mov
mov
movs
daa
rcl
(bad)
and
dec
and
punpckhwd
xor
arpl
and
or
mov
setne
xchg
jmp
and
mov
xchg
push
nop
xchg
mov
mov
xchg
dec
leave
mov
mov
pop
repnz
inc
movs
mov
es
sub
mov
inc
loopne
in
xor
inc
daa
dec
popa
push
xchg
dec
xor
sub
pop
ja
mov
mov
xchg
pushf
loopne
fsub
inc
push
push
scas
push
in
es
sub
fadd
nop
pop
xchg
ret
dec
add
jge
push
jo
mov
(bad)
xor
pop
nop
or
xor
iret
imul
sub
leave
or
sub
repz
scas
fsubr
pop
les
popw
and
scas
xchg
ins
mov
mov
sbb
scas
xor
inc
xor
sar
(bad)
cmp
and
test
xchg
es
xor
int3
sub
xchg
lds
pop
nop
adc
pushf
les
daa
das
cmp
lea
xor
dec
or
leave
or
sub
les
dec
jno
push
add
and
pop
imul
add
in
stos
retf
pop
push
into
push
mov
adc
mov
lock
cmp
push
lea
add
(bad)
cmps
cwde
sub
push
cs
add
pop
cmp
pusha
das
pop
sub
cmps
inc
cs
in
xchg
cs
comiss
and
lock
push
adc
mov
repnz
retf
repnz
pop
repnz
retf
xchg
cmp
push
loopne
mov
mov
xlat
mov
sbb
shl
pusha
xchg
xor
(bad)
cmp
das
call
pop
je
stos
call
and
jl
cmp
js
jns
scas
mov
and
out
xor
mov
add
and
xor
cmp
fcomp
inc
xor
rol
(bad)
lds
jo
inc
push
mov
xor
and
call
mov
add
cmp
mov
push
add
leave
sar
and
es
mov
pop
xor
int
scas
mov
jo
shl
dec
test
or
in
mov
stos
mov
push
or
push
and
ds
pop
and
push
xor
nop
adc
xchg
ins
mov
and
pop
mov
mov
or
js
cmp
mov
add
inc
add
lods
jg
imul
in
fisttp
shl
mov
adc
aaa
(bad)
adc
enter
aaa
or
pop
enter
outs
dec
in
in
mov
xor
pusha
lods
xchg
sub
pop
in
mov
aaa
dec
in
sub
enter
mov
rcr
and
stos
push
xchg
arpl
fwait
push
push
jo
cmp
and
mov
push
jmp
in
sbb
outs
xchg
jmp
loope
sbb
leave
mov
popa
push
mov
pop
pusha
cmp
xchg
outs
jno
and
jo
add
popa
adc
or
mov
fwait
in
cmp
push
cmp
push
adc
mov
das
pusha
cmp
icebp
pop
enter
jo
lock
inc
mov
cwde
cmp
cmp
sub
xchg
aaa
imul
jo
cmp
lock
push
or
inc
mov
repz
push
inc
jge
cmp
cmp
xchg
int
lock
cmp
cmp
cmp
jb
in
clc
add
xchg
jns
mov
ins
cmp
and
push
xchg
pop
stos
cmp
test
jno
in
mov
add
adc
and
loope
add
das
inc
mov
pop
ins
cmps
loop
cmp
fidivr
cli
cmp
or
and
sbb
(bad)
mov
(bad)
ds
ror
es
aaa
push
mov
test
mov
xchg
sbb
ds
sbb
or
lods
jo
nop
mov
ret
add
popa
push
lds
ins
cmps
loop
aas
push
js
ins
inc
mov
and
mov
inc
push
nop
pop
sub
js
dec
mov
aas
and
inc
mov
gs
lock
inc
mov
push
vmulps
jo
inc
adc
ja
bound
movs
pop
out
pushf
sbb
push
and
xchg
and
inc
push
inc
push
enter
jne
or
add
fmul
xchg
inc
mov
push
cmp
inc
sub
dec
add
adc
sub
and
or
and
ret
or
out
dec
dec
inc
mov
or
ss
int
inc
in
fiadd
inc
or
enter
in
push
jbe
repnz
push
clc
push
clc
push
xchg
or
in
inc
fwait
inc
push
adc
sahf
sbb
cmp
and
and
or
mov
jmp
mov
sbb
pop
push
inc
dec
icebp
not
push
repnz
or
js
cmp
daa
inc
lock
push
push
xchg
jno
and
sub
movs
xchg
xchg
inc
arpl
add
das
mov
mov
and
jno
mov
pop
pop
dec
iret
aam
out
daa
mov
inc
xchg
and
inc
xchg
inc
push
enter
add
mov
in
repnz
mov
into
inc
cs
shl
aas
sub
inc
mov
jno
jns
dec
inc
(bad)
jo
cdq
cmp
jns
clc
jo
xchg
loope
jg
sub
and
lds
jno
dec
mov
ins
dec
or
sub
dec
cmp
test
push
dec
int3
sub
jb
loopne
loopne
fs
and
test
loopne
push
lds
cmp
scas
fs
and
loopne
sbb
or
sub
ins
adc
mov
les
iret
xor
movlps
test
pop
rol
mov
push
or
fist
add
mov
cmp
dec
pop
imul
jae
das
add
push
and
ins
mov
xlat
movlps
lods
adc
inc
inc
fs
or
or
sbb
pop
adc
mov
lods
jmp
ret
add
adc
or
in
mov
inc
or
inc
popa
ins
arpl
jbe
push
dec
mov
jae
in
in
ins
mov
dec
add
movd
into
sub
movs
int3
pop
ret
(bad)
ds
mov
shl
iret
rol
sub
add
jne
sbb
cmp
stos
inc
push
dec
jmp
ficomp
xor
and
or
mov
push
cmp
add
out
fsubr
sub
sar
inc
mov
jae
pop
and
inc
ror
jmp
or
mov
or
and
out
data16
dec
push
push
push
dec
ss
je
enter
movs
push
cmp
and
adc
dec
add
dec
repnz
cmp
mov
dec
out
or
dec
int3
es
xchg
clc
dec
mov
jl
push
js
jns
jp
pusha
iret
sar
mov
push
jge
jle
push
daa
mov
adc
mov
sbb
test
or
pop
lock
(bad)
js
xor
sbb
dec
mov
push
and
push
outs
mov
cmps
jne
stos
cmp
(bad)
cmp
mov
dec
sar
cmp
nop
push
popa
inc
outs
xor
add
or
fsubr
mov
dec
ret
jo
(bad)
mov
jge
dec
xchg
adc
dec
mov
js
inc
add
ss
retf
aaa
pop
sub
cs
sbb
sub
mov
mov
imul
inc
sbb
(bad)
lds
fisttp
mov
shl
pop
es
sar
xchg
out
pop
rcl
or
int
xor
and
in
jp
add
sar
add
fs
push
rcr
sar
(bad)
ins
push
out
call
call
mov
pop
out
jmp
bound
xor
sahf
not
push
sbb
pusha
push
sub
push
sub
or
ds
scas
mov
adc
dec
cld
push
dec
pop
dec
ds
pusha
je
ins
xchg
pop
or
sbb
lods
or
fsubr
stc
mov
add
sub
jb
and
fnsave
mov
mov
inc
aaa
jne
push
inc
cmp
dec
mov
retf
lahf
or
push
dec
in
push
push
sbb
add
add
push
lods
sar
mov
ja
test
jle
adc
fld
push
or
and
and
mov
cld
and
and
xchg
push
dec
imul
iret
cld
and
push
jbe
das
add
jp
inc
inc
rol
nop
jbe
test
add
out
fcomp
inc
mov
ds
movs
scas
adc
jmp
cmps
(bad)
push
repnz
xor
or
add
daa
and
add
inc
jo
inc
add
add
push
mov
pop
xchg
mov
jne
jl
sub
xchg
or
xchg
dec
xor
dec
test
in
and
leave
inc
mov
test
adc
(bad)
nop
out
jp
pop
sbb
jge
hlt
and
add
aas
add
and
inc
or
stc
loopne
and
cli
cwde
sbb
adc
cmp
ror
(bad)
pusha
popf
frstpm(287
push
push
add
cmp
dec
fs
iret
repz
push
push
nop
mov
repz
loopne
add
jns
xor
cmp
jns
out
inc
dec
dec
push
ja
jns
push
pop
pop
pusha
add
add
xchg
or
pop
iret
and
push
in
pop
xor
icebp
sub
test
pop
dec
mov
mov
popa
pop
sbb
fcom
pop
adc
adc
push
daa
jmp
mov
dec
daa
test
fwait
push
adc
es
in
or
mov
inc
add
dec
popa
pop
jb
ret
adc
int
and
pop
leave
inc
mov
jo
mov
sysret
sti
cmp
or
add
or
add
or
xlat
cmp
and
add
(bad)
es
lods
sar
into
cmc
add
out
and
inc
hlt
sub
movlps
loopne
push
or
(bad)
icebp
mov
sbb
es
pop
adc
je
nop
daa
mov
inc
mov
xor
xchg
xchg
cmps
add
add
mov
in
push
jno
xchg
out
stc
add
pusha
jp
cmp
dec
jmp
imul
push
popf
push
daa
lods
lahf
add
pop
(bad)
std
mov
cmp
repnz
jns
std
inc
pop
int
mov
dec
loop
pop
pop
xchg
(bad)
enter
std
add
fwait
sub
jb
mov
sbb
mov
mov
xor
xchg
pushf
cmp
pop
js
dec
pop
imul
inc
push
inc
(bad)
cmps
sbb
adc
mov
xor
ins
mov
movs
push
push
pusha
pop
xchg
or
xor
sar
mov
cmp
sub
or
in
outs
and
fstp
add
xchg
jl
jl
dec
ins
cmps
sub
sub
mov
lods
or
aaa
rol
add
or
xchg
add
or
xchg
mov
sbb
sbb
or
add
inc
or
outs
mov
or
in
xor
ins
ret
mov
int
mov
pop
or
pop
and
sub
shr
pop
push
add
clc
mov
or
adc
and
call
or
or
ret
inc
push
push
sub
es
or
inc
cmp
pusha
pop
pop
clc
das
test
xchg
out
push
push
inc
push
ror
pop
dec
jae
pusha
inc
shr
(bad)
lea
fadd
sbb
jmp
pop
xlat
ror
neg
pop
in
popa
das
pushw
pop
stc
and
or
sub
xchg
pusha
dec
mov
dec
add
aam
or
mov
and
stos
sti
sbb
rep
mov
and
cmp
xchg
pop
dec
popf
xchg
mov
inc
pop
jne
mov
fisub
mov
adc
fs
out
cmps
inc
fld
cdq
call
xchg
outs
xlat
mov
dec
bound
test
xchg
daa
loope
daa
inc
(bad)
iret
or
bound
in
cld
push
dec
loope
dec
or
mov
in
arpl
cvttps2pi
and
gs
mov
iret
cmp
stos
out
sub
xlat
or
pmuludq
adc
es
das
jne
scas
cwde
mov
inc
enter
cwde
pop
js
int
mov
mov
inc
in
inc
test
dec
frstor
rol
bound
adc
or
add
or
pop
leave
cwde
dec
ins
add
pop
inc
xor
das
xlat
inc
scas
sub
out
jne
fmul
cwde
lock
add
cmp
jmp
nop
mov
push
jne
or
rcr
pop
cld
sahf
div
xchg
sbb
dec
xchg
dec
pop
jns
dec
(bad)
jl
dec
in
dec
mov
in
push
push
pop
xchg
cmps
inc
movs
out
in
dec
lods
cmp
ds
bound
dec
sbb
ret
sqrtps
out
push
dec
xchg
daa
daa
mov
pushf
fcom
enter
pop
mov
leave
leave
leave
bound
in
fs
cwde
in
ins
jb
jb
arpl
sbb
outs
aas
jbe
pushf
mov
stc
xor
jle
xchg
jo
xchg
into
in
repnz
pop
jecxz
sub
jno
jnp
and
(bad)
sub
xchg
jno
mov
enter
into
push
cmp
sbb
dec
or
and
outs
jl
add
and
mov
mov
cmp
xchg
dec
ins
push
push
add
(bad)
ss
arpl
lds
(bad)
in
add
xor
shl
or
pop
inc
pop
inc
xchg
dec
xchg
mov
enter
push
add
and
das
add
adc
and
inc
(bad)
pusha
xchg
dec
jno
or
mov
fs
sbb
pop
js
dec
dec
test
cwde
iret
(bad)
fisubr
jno
pop
jno
jmp
jns
stc
dec
pusha
jno
rcl
add
dec
fcom
inc
ins
cdq
lock
imul
xchg
fsub
and
popf
sbb
dec
jl
repnz
pusha
jno
dec
xchg
dec
jl
repnz
dec
push
xchg
dec
sbb
cwde
xchg
pop
mov
outs
mov
nop
pop
add
dec
test
xchg
xchg
dec
cmp
inc
pushf
scas
aaa
add
mov
push
and
inc
sbb
push
in
dec
add
or
mov
add
mov
or
mov
mov
dec
mov
jge
xor
mov
inc
lods
cmp
sub
dec
xchg
sub
jno
dec
mov
and
dec
mov
repnz
mov
jno
inc
repnz
test
mov
nop
mov
and
or
call
dec
adc
jno
and
and
and
int3
pop
jecxz
fist
jmp
inc
and
add
inc
fadd
xchg
add
nop
pop
nop
daa
mov
dec
jl
dec
sub
xchg
scas
dec
bound
jmp
mov
test
pop
outs
and
xchg
imul
loopne
or
ror
mov
jmp
dec
adc
outs
leave
sbb
mov
jne
shl
imul
push
cmp
mov
scas
hlt
inc
popa
adc
dec
adc
push
enter
push
xor
pop
and
or
pop
dec
push
push
sub
push
add
push
icebp
push
bound
inc
ins
xchg
mov
jb
in
fst
lock
pop
or
ret
and
hlt
push
rcr
and
aaa
arpl
je
and
inc
add
mov
mov
jmp
xchg
mov
and
fs
jnp
lea
and
or
mov
(bad)
mov
shr
inc
adc
sbb
dec
ret
sub
aaa
sti
sbb
les
mov
xchg
push
ins
sub
cdq
cmp
jno
je
adc
js
jl
scas
fwait
mov
or
or
lea
mov
mov
fisub
nop
adc
fidivr
mov
mov
fld
adc
mov
sub
and
xchg
cmp
or
jbe
mov
push
sub
xchg
push
dec
imul
pop
or
dec
shl
dec
dec
dec
jmp
or
xor
jl
push
hlt
mov
fwait
and
hlt
lods
dec
dec
test
add
or
mov
xchg
in
inc
mov
add
ins
or
inc
or
movs
inc
mov
jl
cmps
jae
je
bswap
(bad)
cmp
push
mov
mov
mov
pop
retf
dec
inc
rcr
pop
mov
fiadd
pop
push
adc
or
iret
sbb
jne
rcl
xchg
(bad)
xor
test
mov
xchg
add
js
add
cs
mov
and
popf
xlat
and
jl
xchg
fmul
fs
jnp
push
jo
pop
add
or
pusha
nop
cmp
push
lea
jns
or
retf
xor
imul
pop
push
mov
fmul
gs
ins
mov
and
and
or
shr
push
hlt
int3
push
ins
jo
sub
sub
xchg
pop
adc
cmp
pusha
movs
ins
dec
mov
in
ret
aad
add
ins
mov
ret
rol
pop
push
iret
movs
lea
push
rcr
pop
mov
into
or
loop
and
sti
adc
(bad)
adc
or
or
jb
adc
(bad)
call
xchg
add
pop
add
or
cmp
sub
jbe
test
mov
loopne
retf
adc
xchg
jb
jns
pop
rcl
sbb
dec
add
and
inc
cmps
adc
jns
sub
rcl
js
cmp
je
test
push
je
mov
mov
mov
adc
jmp
rol
aas
jno
fwait
les
push
pusha
sub
add
adc
jne
mov
movs
cs
(bad)
cmp
jns
imul
pop
sub
jo
mov
gs
fsub
xor
je
cmp
mov
fldenv
icebp
daa
or
ret
test
cmp
or
push
in
jp
add
(bad)
or
pop
mov
sub
data16
xchg
inc
pop
cvtdq2ps
mov
dec
neg
pusha
mov
cmps
mov
inc
pop
pop
xchg
adc
cwde
dec
push
mov
inc
cs
push
mov
popf
out
je
in
fidiv
inc
ins
mov
loopne
sub
nop
(bad)
xchg
xchg
ja
and
xchg
or
lods
add
adc
aas
adc
cmp
cmps
pusha
add
stos
mov
dec
fmulp
adc
mov
aam
(bad)
pop
push
or
pop
and
dec
cdq
and
or
mov
popa
dec
push
push
mov
dec
in
jl
out
pop
pop
add
mov
sbb
xchg
cmp
mov
nop
out
sbb
je
dec
xchg
or
nop
push
scas
dec
xor
sub
shl
xor
pop
xchg
xchg
mov
and
xor
mov
adc
jg
popa
popa
and
xor
adc
ret
mov
add
aaa
inc
add
les
out
dec
push
repz
push
js
mov
aas
ins
outs
jle
outs
cwde
gs
push
and
or
adc
ja
add
retf
stc
push
ds
push
mov
mov
inc
test
push
lds
cmp
lea
out
pop
or
and
mov
mov
outs
fbstp
mov
and
nop
xor
sub
(bad)
lock
xchg
add
fiadd
sub
cmp
cld
adc
mov
mul
or
mov
dec
or
pop
jecxz
sub
push
add
movsx
das
ret
sbb
xchg
mov
data16
cmps
gs
xchg
inc
je
inc
inc
adc
enter
pop
add
add
pop
push
mov
ret
or
dec
repnz
and
inc
and
mov
ins
ins
leave
adc
pop
jmp
xor
gs
add
push
inc
repz
hlt
stc
lock
or
mov
push
nop
mov
fcomp
inc
(bad)
cmp
push
and
fnstcw
adc
xor
mov
popa
cmps
movsx
mov
xchg
push
mov
(bad)
add
and
adc
mov
test
and
mov
adc
pop
cdq
push
or
adc
pop
gs
or
adc
dec
and
pusha
or
enter
test
cmp
inc
cld
adc
test
xor
adc
xor
adc
pushf
and
stos
sbb
dec
call
or
jne
sbb
aad
inc
push
or
bound
xor
clc
inc
adc
sbb
add
dec
fwait
repz
adc
cmp
(bad)
(bad)
add
shl
int
enter
cs
in
test
pop
ret
les
aas
push
add
ror
jbe
mov
std
dec
fwait
or
loop
jb
fadd
in
fcmovnb
and
pop
inc
loopne
inc
call
pop
xchg
fadd
and
aam
push
mov
push
or
call
or
dec
test
sub
dec
cmp
xchg
(bad)
int3
iret
mov
add
out
mov
adc
das
mov
test
or
mov
push
add
enter
nop
push
repnz
scas
inc
sbb
add
mov
pop
mov
test
mov
sub
ins
aam
ja
pop
nop
pop
add
pop
mov
test
and
and
outs
pusha
mov
and
pop
hlt
hlt
push
mov
(bad)
les
sub
lahf
mov
inc
or
inc
movs
in
lahf
adc
mov
or
out
ins
test
call
fnstcw
sbb
mov
rcl
adc
and
daa
rcr
lock
xor
popf
or
out
sub
enter
pushf
jo
call
call
inc
and
lock
mov
cmp
dec
mov
(bad)
shr
loopne
test
ret
loope
add
cs
test
jg
push
dec
push
outs
add
je
iret
pop
repnz
das
xchg
mov
dec
(bad)
mov
xlat
aam
(bad)
dec
mov
cmp
push
add
lds
shr
cmc
fs
ja
clc
pop
outs
in
das
mov
mov
add
lea
jbe
dec
data16
push
jmp
mov
pop
clc
cmp
addr16
or
push
push
inc
(bad)
mov
or
jbe
inc
div
mov
adc
jle
push
lea
je
lods
jp
mov
mov
inc
loope
mov
ja
xchg
fs
dec
add
xor
push
xor
push
aaa
arpl
addr16
in
(bad)
push
and
cmps
pop
pusha
mov
sbb
lea
mov
pop
xchg
push
retf
bound
lods
movs
repnz
aad
(bad)
call
dec
(bad)
jp
xlat
adc
mov
addr16
jb
and
mov
inc
inc
test
mov
pop
loop
mov
push
pop
inc
and
add
lea
aam
add
out
push
(bad)
dec
push
jle
sub
and
xor
jg
dec
push
nop
pop
xor
dec
or
(bad)
pop
pop
out
add
shr
sub
popa
dec
add
dec
(bad)
dec
pushf
in
nop
dec
push
pushf
fucom
jns
xchg
adc
sub
repnz
(bad)
dec
clc
adc
pop
(bad)
pop
repnz
sub
xor
add
pop
fwait
push
add
loopne
sbb
(bad)
stc
stos
or
jg
jl
add
jl
stc
test
call
dec
mov
cmp
pop
fdivr
add
xlat
iret
xchg
dec
and
sub
xchg
dec
das
inc
push
stc
push
jle
dec
xchg
dec
push
jg
inc
push
nop
pop
push
xchg
dec
fcom
in
sahf
dec
fist
addr16
dec
loopne
dec
add
dec
in
enter
push
mov
inc
jb
push
mov
mov
adc
push
or
push
inc
xchg
(bad)
pop
push
mov
call
lahf
add
mov
adc
push
mov
aas
movs
add
lods
or
and
std
sbb
mov
es
pushf
push
adc
fwait
add
adc
sbb
inc
fs
jmp
rol
pushf
retf
pushf
fxch
cmc
pushf
daa
popf
movq
shl
xchg
fsub
in
dec
in
dec
add
and
in
dec
add
dec
in
dec
dec
leave
popa
dec
mov
js
daa
mov
mov
test
push
cmp
rcl
movs
xchg
xchg
push
adc
cmp
pop
ret
mov
inc
imul
fs
sbb
inc
lahf
inc
into
push
push
(bad)
sahf
mov
bound
push
and
push
lahf
pusha
jno
mov
push
and
aas
pop
jge
adc
bound
scas
adc
add
cmp
ds
push
leave
or
out
mov
or
(bad)
mov
sti
pop
lods
push
dec
es
enter
dec
sbb
and
arpl
adc
ror
inc
sbb
hlt
pop
jo
ficomp
cmps
dec
je
ins
mov
das
mov
add
push
pushf
pop
inc
dec
repnz
dec
mov
or
in
mov
and
add
cli
xchg
shl
das
mov
stos
imul
jg
imul
cmp
(bad)
movups
adc
dec
dec
inc
inc
imul
jae
sub
test
dec
mov
inc
sti
xchg
movups
add
jl
punpcklwd
adc
dec
call
and
add
add
call
or
mov
xchg
sbb
dec
cld
adc
or
cmp
or
rol
rol
ds
adc
sub
adc
dec
inc
inc
je
cmp
inc
sbb
lea
pop
jb
gs
jg
mov
bound
sub
and
add
sbb
nop
mov
(bad)
out
out
or
adc
add
adc
neg
mov
inc
sub
lock
sub
dec
push
cdq
sbb
es
lods
inc
and
movs
fld
mov
xor
dec
fadd
fwait
lods
popa
jns
and
xor
sbb
push
push
adc
rcl
adc
loopne
fnstcw
imul
mov
xchg
lock
jmp
loopne
fcmovbe
push
jne
aas
ss
cwde
fistp
xor
and
nop
xor
pop
outs
icebp
add
jbe
addr16
cmp
imul
test
in
mov
iret
adc
and
cmp
push
sar
add
inc
pop
lea
inc
and
xchg
imul
push
inc
mov
test
ins
pop
mov
bound
lea
mov
mov
sub
retf
adc
mov
mov
popf
or
jae
pushf
push
and
lds
test
inc
and
js
stos
aas
test
pop
mov
packuswb
adc
mov
mov
hlt
jnp
test
sbb
mov
cdq
or
clc
mov
or
or
(bad)
mov
xlat
hlt
push
push
mov
test
add
adc
into
cs
push
outs
std
add
adc
add
sbb
push
push
inc
push
popw
cmp
cmp
jnp
sub
dec
arpl
sar
lods
dec
sti
int
xlat
adc
movs
or
or
sbb
add
nop
pusha
xor
test
movs
push
cmp
mov
inc
ins
add
jae
add
mov
popa
adc
iret
push
push
or
dec
add
stc
aas
dec
loop
enter
setge
inc
adc
shl
je
mov
ins
inc
dec
(bad)
push
push
(bad)
call
and
inc
add
pop
arpl
push
sub
int3
push
pushf
cli
sbb
ret
sbb
jae
cmp
or
(bad)
pop
mov
aaa
imul
pop
mov
inc
es
or
xor
outs
sub
jbe
jmp
ret
mov
push
retf
ins
adc
add
into
sub
cmp
loope
pop
lea
push
dec
jmp
cwde
int
xchg
les
popa
hlt
mov
add
int3
inc
inc
mov
or
jae
shl
and
mov
addr16
call
push
adc
shr
pop
xchg
sub
pop
mov
mov
ror
test
clc
mov
sub
cmps
mov
rcr
mov
outs
(bad)
mov
(bad)
jle
mov
aas
or
out
add
mov
cmc
mov
add
lea
(bad)
fidivr
lahf
xor
ror
jge
es
cwde
in
xchg
movs
and
loopne
nop
push
add
sbb
mov
mov
sub
or
adc
adc
push
push
(bad)
pop
push
mov
pushf
clc
or
cmp
xchg
clc
dec
pusha
stos
leave
cmp
bswap
ja
mov
add
jle
adc
add
rcl
mov
es
or
push
(bad)
clc
xchg
ret
dec
popf
fsubr
(bad)
add
mov
pop
fild
enter
loop
fcom
and
out
xchg
and
dec
sbb
loopne
adc
or
xchg
or
or
xor
je
mov
bound
push
jnp
jno
mov
inc
rcr
jge
add
and
add
test
sub
mov
adc
or
cs
mov
mov
add
and
and
loopne
add
pusha
sub
inc
jns
sahf
call
pop
pop
mov
dec
inc
shl
xor
mov
sahf
sub
and
test
dec
(bad)
imul
stos
imul
cmp
inc
push
adc
adc
ins
xor
jb
adc
in
movs
jle
cmp
(bad)
(bad)
push
push
sbb
mov
add
shr
pop
mov
dec
and
sbb
pop
or
leave
je
gs
fnstsw
call
in
mov
adc
movs
(bad)
in
mov
sbb
xchg
jo
add
dec
sbb
mov
sbb
test
ror
cmp
popa
fldcw
push
ins
or
in
jl
inc
js
icebp
pushf
shr
xchg
hlt
imul
and
cmps
mov
pop
jl
in
sbb
mov
jns
jge
cmp
push
shr
cdq
inc
in
jae
loopne
or
add
jb
jb
mov
imul
add
xor
mov
lea
scas
jle
mov
jmp
sub
mov
sub
adc
loope
cmp
adc
popf
rcl
in
fwait
mov
enter
das
adc
xor
jg
sub
pop
inc
mov
cmp
ret
rcl
mov
scas
xchg
enter
push
jmp
inc
or
or
cmp
cmp
aad
mov
cmps
mov
jg
sub
mov
inc
jae
and
std
dec
fimul
or
dec
mov
and
enter
mov
sbb
loop
call
xchg
lods
cmps
jo
pusha
test
pop
outs
inc
adc
mov
cld
lds
and
sub
sbb
xor
adc
outs
leave
add
sbb
inc
add
fist
mov
ja
push
or
das
jg
and
pushf
mov
leave
xor
daa
icebp
push
les
xor
push
fwait
xor
mov
mov
pop
popa
push
enter
fmul
or
dec
inc
sub
sbb
mov
call
dec
retf
inc
cmp
inc
cld
je
and
push
inc
jmp
pop
mov
add
retf
cmps
pushf
xchg
fcom
icebp
in
mov
maxps
fistp
ret
add
repnz
hlt
stos
cwde
gs
xor
test
loopne
sar
popa
mov
retf
es
inc
lock
das
pop
test
mov
clc
clc
cwde
cmp
mov
stos
mov
jg
cmp
inc
lea
xchg
pushf
in
cld
sub
pop
sar
xlat
cmp
sbb
mov
jnp
push
add
shl
jae
push
xchg
mov
loope
loopne
ja
push
cmp
mov
inc
push
scas
add
mov
xchg
cmp
and
fdivr
sub
add
cmp
inc
jb
pusha
jmp
ret
add
xchg
ss
psllw
loop
sbb
fild
fmul
jno
cli
call
adc
out
pop
xor
adc
cmp
or
push
ds
movlps
xlat
(bad)
pop
ins
xlat
sbb
pop
pop
mov
xor
shl
int
add
fmul
addr16
cld
aas
icebp
mov
adc
loope
invd
cmps
jo
pop
xchg
out
bound
xchg
popf
arpl
push
or
call
mov
mov
mov
shl
(bad)
mov
inc
hlt
fmul
ret
fldz
ja
popf
adc
fcomp
add
setae
or
adc
add
imul
lods
jbe
test
in
in
movs
mov
scas
dec
int
add
mov
sub
aas
and
pushf
pop
xchg
ror
aaa
sahf
mov
pop
and
inc
pop
aad
cdq
jge
mov
dec
lods
in
cmps
or
pop
cmps
xchg
(bad)
mov
nop
xchg
stos
dec
sti
test
cs
dec
jae
or
add
sub
add
pop
cmps
dec
in
test
scas
sub
jmp
add
push
inc
adc
in
mov
hlt
xlat
mov
data16
sbb
xor
xchg
(bad)
and
and
mov
inc
int
jecxz
adc
dec
inc
and
and
retf
push
out
or
pop
fwait
mov
imul
push
mov
and
adc
xor
in
popa
sub
ror
sbb
adc
mov
call
pushw
or
xchg
shl
pop
adc
push
enter
mov
xlat
ins
or
(bad)
iret
sub
inc
aaa
adc
inc
or
or
nop
jbe
sbb
xor
push
adc
ss
les
imul
push
arpl
mov
aaa
mov
rcr
mov
pop
dec
sbb
lahf
loope
adc
stos
jmp
call
inc
adc
dec
stos
inc
fild
cli
movs
add
adc
xor
push
or
shr
mov
sub
add
dec
sub
loop
loope
int3
ds
adc
clc
fsubp
and
add
mov
adc
lahf
adc
or
ret
in
loopne
rcr
rsm
lods
sub
imul
dec
pop
sub
sbb
sub
pop
xchg
add
mov
inc
xor
js
pop
divps
cmc
or
xlat
sub
lods
jbe
xor
lock
icebp
aaa
push
retf
iret
mov
or
and
mov
dec
and
push
inc
ins
bound
jb
sbb
or
pop
pop
push
or
adc
js
into
les
or
jl
add
les
lds
xchg
rcr
(bad)
xchg
fidiv
(bad)
xor
jb
add
daa
lock
cdq
pop
cmp
add
dec
mov
mov
mov
lock
int
sahf
add
mov
xor
or
pusha
mov
sbb
shl
push
or
loope
xchg
pop
add
pop
sub
test
outs
imul
sbb
in
adc
mov
dec
cmps
lods
xor
test
mov
out
pop
test
push
lock
cmp
fs
aaa
lock
xor
and
mov
sbb
ficom
test
dec
leave
sub
jns
sbb
add
dec
out
inc
sub
xor
push
ins
push
out
bndstx
mov
sub
mov
pop
test
mov
pop
jae
sbb
ja
and
popf
les
xchg
pop
je
rol
pop
je
in
cmp
outs
cmp
nop
outs
dec
pushf
or
shl
add
imul
stos
icebp
lea
mov
inc
ror
and
fnsave
nop
xor
mov
sbb
inc
and
dec
push
test
push
out
iret
lock
lock
cdq
push
sub
adc
lock
push
inc
data16
jno
push
mov
xor
sbb
sub
adc
pop
out
xchg
mov
add
lahf
adc
jae
sbb
mov
xchg
ins
cmp
and
or
test
call
add
and
out
pop
cdq
adc
lock
lock
pop
sbb
out
push
pop
adc
or
or
imul
add
dec
(bad)
cmp
mov
jp
pop
pop
into
inc
mov
jle
mov
bound
mov
call
cs
push
adc
sbb
pop
in
(bad)
fimul
cmp
cmp
fld
fmul
sub
or
gs
mov
cmc
sub
sub
fnstsw
test
jo
sub
es
mov
pop
adc
jno
leave
inc
xor
xor
xchg
js
adc
inc
dec
or
inc
cmps
out
cmp
sar
pop
nop
mov
sbb
add
lods
loopne
mov
hlt
fcompp
xchg
shr
or
or
and
xchg
cmp
inc
lock
sub
aas
(bad)
out
imul
mov
sub
push
jmp
inc
in
rcr
jl
sbb
push
gs
adc
add
add
mov
and
sahf
sub
mov
pop
inc
es
(bad)
addr16
call
sbb
sbb
adc
stos
xchg
mov
out
shl
add
jp
ror
ret
push
cmp
push
jae
pushf
lea
add
jl
push
es
daa
fdivr
int
inc
fwait
xor
push
push
xchg
fsub
daa
aam
mov
stc
cmp
xlat
cli
out
jmp
cwde
xor
int3
cs
clc
leave
and
and
enter
jns
enter
test
jp
movs
rol
xlat
hlt
xchg
mov
out
outs
pop
mov
xor
push
loop
mov
mov
fwait
inc
jle
mov
out
retf
adc
ror
ret
mov
aam
hlt
add
mov
jmp
push
xor
or
mov
inc
sub
ror
dec
push
test
dec
arpl
test
mov
xor
mov
push
rcl
cwde
pop
sahf
(bad)
and
or
mov
sub
fcmovnu
out
mov
or
or
daa
add
and
call
push
mov
or
pop
xchg
xchg
ret
les
rcr
enter
stos
rol
ror
sub
and
div
(bad)
mov
and
inc
inc
add
pushf
in
fist
cmp
in
hlt
cwde
add
popa
sbb
ret
arpl
sub
mov
add
pop
in
add
adc
ror
rol
xor
and
aam
mov
adc
test
pop
mov
mov
pop
outs
push
inc
and
rcr
adc
lea
mov
pmulhuw
shl
inc
sahf
xchg
dec
dec
cmovg
xor
mov
dec
add
adc
pop
cmp
inc
inc
test
lock
dec
fcom
repnz
sar
jns
repnz
ror
pop
stos
push
adc
mov
fcom
dec
loope
aam
or
and
pop
sbb
mov
jns
aad
ror
xchg
pushf
(bad)
xchg
aad
or
aad
cmovg
dec
daa
das
das
sub
(bad)
cmp
data16
pop
mov
daa
jns
inc
cmp
std
cwde
(bad)
pop
test
or
dec
iret
add
xor
push
add
dec
add
and
mov
loope
pop
aad
cmp
mov
mov
dec
mov
add
(bad)
nop
nop
or
add
xor
in
cs
mov
xlat
dec
mov
(bad)
fadd
xchg
aad
das
inc
sbb
or
mov
add
rcl
lahf
add
cmp
cmp
nop
and
xchg
int3
and
dec
int3
dec
and
das
push
(bad)
cwde
and
inc
sub
bnd
es
mov
add
adc
(bad)
and
xor
sbb
xchg
fisub
xchg
mov
add
or
mov
call
xor
ds
fcmovne
adc
fld
das
femms
dec
sbb
fcmovnu
fist
sbb
xchg
xchg
xchg
fistp
fadd
sbb
jnp
loope
mov
popa
and
in
fmul
sbb
xor
es
sub
xor
ror
add
jp
and
outs
scas
cmp
xlat
xor
sub
pop
das
outs
frstor
in
or
xor
retf
jecxz
les
xchg
icebp
dec
(bad)
call
loop
fimul
sub
inc
add
mov
sbb
sub
jb
imul
cmp
add
mov
jle
push
add
stos
or
sbb
test
cmp
das
jl
pop
mov
imul
pop
fisttp
pop
pop
and
cs
sub
retf
add
leave
test
loopne
inc
loopne
nop
or
inc
cmp
and
xchg
push
mov
cld
pop
push
sub
sbb
pop
enter
push
js
inc
shl
test
pop
jmp
mov
dec
mov
loope
shl
xor
push
ss
xor
jb
fnsave
rcl
add
dec
xchg
ins
ret
and
dec
dec
push
xor
cmp
pusha
nop
and
mov
loop
pop
aad
mov
shl
or
xchg
daa
mov
dec
jecxz
retf
retf
sub
in
jecxz
jecxz
in
push
mov
fcomp
scas
jecxz
sbb
cmp
xor
test
pop
test
mov
pop
ss
mov
sub
xor
sub
add
nop
loope
in
mov
inc
sbb
add
aam
repnz
in
dec
in
loope
xchg
jg
and
dec
add
and
leave
retf
movs
in
in
inc
add
leave
test
je
add
pop
mov
cmp
in
or
and
mov
and
dec
das
addr16
push
(bad)
mov
mov
and
shl
out
sub
pop
adc
test
pop
and
dec
pop
call
in
jmp
pushf
mov
imul
hlt
and
dec
and
repz
xor
inc
retf
inc
sahf
cld
stos
out
call
cwde
and
call
aam
js
jo
out
js
es
jle
jmp
rcl
fmul
pminsw
aam
nop
inc
push
shl
sbb
aad
sbb
cmp
and
sbb
jns
cmps
pop
add
and
or
push
add
push
jmp
mov
adc
scas
sub
stos
push
ins
in
pop
or
mov
loopne
dec
add
dec
fst
ss
push
and
push
nop
sub
aaa
das
(bad)
xlat
dec
push
fmul
push
dec
ds
xlat
dec
push
fmul
pop
nop
scas
test
dec
push
(bad)
daa
nop
daa
js
dec
pop
call
scas
push
in
dec
mov
lds
out
sti
mov
and
out
cmp
xor
je
xchg
xchg
daa
daa
ret
or
push
stc
add
jg
lock
jns
es
pop
icebp
inc
and
add
push
sbb
aaa
pop
(bad)
or
aaa
push
dec
jecxz
push
icebp
inc
xchg
add
or
inc
mov
aaa
pusha
mov
rcr
jae
(bad)
imul
fwait
aaa
cmp
adc
dec
mov
xchg
mov
dec
sbb
mov
sub
in
aaa
sbb
repz
inc
aaa
daa
in
jns
dec
mov
cmp
pop
and
and
or
add
and
lods
test
sbb
sbb
or
stc
push
pop
leave
sbb
out
push
repnz
xor
xor
mov
icebp
sti
mov
xor
xor
dec
adc
xchg
or
je
mov
xchg
and
es
movs
icebp
inc
aam
test
add
pop
jne
imul
std
or
add
jno
pop
push
enter
add
outs
bound
pop
dec
push
test
dec
push
(bad)
sbb
push
repz
or
imul
or
sub
push
cmp
jnp
mov
sub
jo
push
mov
lahf
out
repz
adc
cmp
jns
sub
xchg
adc
jne
cmp
in
hlt
dec
add
push
repnz
pop
sbb
cdq
dec
push
pusha
leave
cmps
loope
add
push
inc
push
cs
ret
xor
mov
sub
dec
bound
ja
xchg
and
fdiv
dec
loope
cmp
int3
mov
xor
dec
xor
loopne
inc
outs
sub
xchg
bound
inc
push
ja
fcom
ficomp
and
mov
add
sub
hlt
lea
gs
push
pop
jg
mov
mov
sahf
mov
pushf
add
cwde
pop
cmp
jmp
cli
jne
mov
fdiv
ds
in
pop
fist
dec
ins
femms
out
inc
or
dec
xchg
shl
lea
or
jo
sub
or
cwde
(bad)
out
cmp
cld
(bad)
jecxz
jmp
les
jmp
push
inc
push
or
sub
sub
and
and
mov
stos
push
and
mov
pop
mov
xor
xor
mov
imul
xchg
dec
fistp
and
fist
cmp
sub
lock
or
jb
mov
dec
mov
bound
jb
or
or
movzx
dec
cmp
adc
imul
popa
mov
mov
aad
inc
cwde
cwde
repnz
cwde
stc
add
pop
fisub
jae
inc
pop
inc
or
inc
sub
jmp
stos
push
in
dec
xchg
fsubr
xchg
ss
sbb
leave
xchg
push
popa
sbb
or
cwde
xor
jmp
call
or
sbb
into
add
das
jo
cs
fcomp
add
fnstenv
and
fadd
adc
test
or
push
xor
call
bound
jmp
jl
das
ret
mov
sub
call
fcomp
adc
iret
aad
mov
loopne
in
push
pushf
push
and
jmp
mov
fcomp
xor
or
lock
lods
fadd
sbb
mov
xor
inc
inc
push
push
lods
add
cmp
push
inc
jbe
push
adc
js
xchg
mov
or
cmp
jg
adc
or
frstor
in
add
adc
arpl
arpl
shl
push
sub
daa
(bad)
push
xor
xor
mov
inc
dec
push
les
xor
dec
repnz
dec
sbb
dec
dec
inc
fild
dec
iret
dec
inc
dec
call
and
sahf
js
das
(bad)
imul
mov
rol
inc
pushf
call
mov
imul
mov
mov
dec
dec
xlat
fbld
add
push
sub
mov
loopne
mov
add
inc
push
lock
iret
fstp
cmps
icebp
int3
cs
jbe
imul
cmps
fcom
push
xchg
add
mov
mov
mov
or
dec
ss
(bad)
repz
outs
sub
push
push
jbe
and
(bad)
and
sub
xlat
mov
in
jne
adc
das
ins
fwait
dec
bound
shl
inc
add
add
mov
xor
lods
add
je
jae
inc
ror
jge
(bad)
adc
pop
je
jmp
jle
push
int3
nop
mov
mov
push
sbb
add
sub
sbb
fcomi
sub
xchg
nop
hlt
popf
mov
adc
mov
sub
ins
add
sub
jne
mov
dec
in
rcl
aam
push
mov
or
xor
ins
lahf
inc
xor
mov
dec
pop
add
sbb
lock
xor
fsub
sbb
push
cmp
out
mov
stc
xchg
jg
push
call
rol
dec
(bad)
pop
mov
add
or
inc
es
xor
mov
loopne
imul
pop
ins
add
jne
loop
sbb
cld
mov
and
mov
inc
ret
xchg
mov
jae
popa
xchg
cmps
rol
push
mov
ss
inc
jno
sbb
push
adc
ret
xor
leave
(bad)
fwait
adc
push
xchg
push
sub
lock
sub
xchg
dec
test
mov
stos
mov
fmul
or
int3
push
xor
push
mov
or
mov
push
shl
lock
adc
mov
arpl
or
push
das
jmp
imul
dec
lock
jae
mov
fcmovbe
push
mov
mov
add
das
adc
inc
inc
push
in
push
sub
ins
mov
or
jmp
and
add
cmc
jb
cmps
mov
sar
sub
pop
stos
pusha
outs
aam
adc
sub
sub
dec
retf
push
fist
nop
cmps
arpl
(bad)
fistp
or
in
fcom
sahf
clc
xor
or
test
je
xor
out
add
adc
imul
or
mov
xor
dec
lods
sub
dec
nop
sbb
loop
neg
int
pop
pop
pop
add
popa
xor
and
jb
lock
shl
or
push
mov
inc
mov
or
fstp
ins
add
and
pop
loope
or
fiadd
jae
scas
jmp
push
inc
pop
and
inc
sbb
lea
inc
loopne
cs
and
xchg
out
push
xor
mov
adc
test
test
ins
add
ret
ins
clc
ret
dec
loopne
outs
xchg
mov
test
mov
add
enter
pop
sbb
mov
adc
adc
mov
lods
test
push
mov
frstor
and
ss
into
fadd
add
or
sti
pop
push
dec
or
ja
ins
lds
add
add
aaa
lock
dec
jge
add
adc
push
dec
xchg
jg
sbb
je
lea
mov
cmp
dec
sbb
out
je
adc
add
and
(bad)
fs
add
js
mov
push
rol
dec
test
dec
push
retf
push
ins
sbb
cmps
rcl
or
fcom
dec
clc
mov
adc
inc
sbb
pop
mov
mov
push
push
push
xor
jmp
cmc
ss
mov
xchg
add
gs
movs
stc
or
imul
in
cmps
in
cdq
clc
call
dec
or
mov
sbb
test
in
xchg
dec
leave
nop
loopne
enter
adc
fcomp
and
dec
scas
fiadd
dec
xchg
inc
add
sbb
daa
inc
dec
xor
mov
push
jp
in
imul
push
add
inc
sbb
shr
adc
icebp
mov
arpl
mov
or
scas
mov
inc
hlt
test
cwde
shl
aad
xchg
test
cmc
inc
or
push
cmp
and
xor
xor
pop
dec
in
mov
dec
das
dec
ja
inc
ds
jmp
cmp
adc
adc
sub
imul
inc
push
xor
aad
jecxz
aam
daa
xchg
cmp
aam
in
pop
out
pop
add
mov
xchg
cmps
arpl
sar
push
push
mov
ret
or
or
jb
cmp
add
leave
xchg
dec
enter
rcr
sbb
cld
fld
iret
adc
dec
test
and
push
test
fcom
ror
pop
inc
shr
xchg
loope
call
xchg
fmul
cmp
loope
mov
sub
cmps
fs
mov
sbb
sub
mov
iret
push
xor
mov
retf
out
pop
mov
xchg
loopne
xor
jne
retf
mov
mov
ret
loop
lock
mov
push
stos
lods
js
inc
add
pop
jne
call
jb
and
pop
ret
test
ja
movs
and
and
mov
scas
add
push
push
or
add
addr16
lahf
lods
aaa
and
sub
and
cdq
(bad)
pop
xchg
test
add
pop
mov
(bad)
cmp
lea
pushf
xchg
pop
jbe
sbb
pop
imul
add
stc
test
gs
out
dec
jp
sbb
test
sub
fwait
sbb
out
(bad)
ins
ror
bound
inc
jbe
dec
or
mov
gs
rcr
fdivr
enter
adc
imul
add
add
(bad)
add
adc
adc
add
fisubr
sbb
xor
sbb
jge
dec
push
and
rcr
pop
(bad)
push
push
test
mov
or
aad
jp
loopne
or
loopne
mov
and
add
mov
fst
mov
test
add
push
shl
movs
add
mov
inc
imul
mov
retf
loopne
mov
addr16
push
add
cmp
xor
in
(bad)
fcmove
sub
cmps
ficomp
or
out
daa
jl
outs
div
mov
pop
sar
cmp
std
push
mov
(bad)
not
bound
fnstenv
loope
fdivr
es
sbb
repz
cwde
or
fmul
mov
ficom
sub
pop
add
mov
retf
scas
jns
dec
ror
jno
dec
mov
mov
mov
sti
mov
daa
fimul
dec
nop
bound
ss
sbb
or
(bad)
shr
pop
push
or
xchg
outs
outs
inc
push
add
aam
enter
out
cmovg
test
inc
call
test
sub
test
es
add
lldt
repnz
and
cmovg
add
jl
enter
dec
ins
dec
dec
repnz
fmul
adc
enter
add
sar
mov
movs
cmps
shl
mov
xchg
dec
nop
iret
add
cwde
adc
pop
inc
add
lidtd
lidtd
and
and
dec
shl
cmp
(bad)
xlat
dec
(bad)
xlat
dec
dec
cmp
sub
test
mov
adc
sub
add
aam
inc
sbb
push
dec
adc
push
adc
inc
mov
sbb
inc
cmps
mov
jne
xchg
inc
mov
inc
add
lock
adc
int
stos
cmps
or
(bad)
das
adc
mov
(bad)
enter
add
push
and
slwpcb
das
ret
repnz
repz
cli
sar
ss
data16
pusha
push
mul
and
sub
nop
mov
dec
ret
push
sub
dec
pop
pusha
push
sti
clts
add
jns
syscall
pop
dec
or
push
enter
xor
dec
or
adc
clts
clts
repnz
leave
and
dec
nop
or
inc
ltr
pop
dec
mov
mov
leave
adc
rcl
popa
test
or
fstp
xchg
cmp
add
sbb
inc
pusha
push
jmp
and
arpl
mov
dec
or
(bad)
in
or
pop
and
sbb
xor
lar
dec
or
and
ins
and
out
loop
cli
add
dec
stc
cmp
(bad)
ror
dec
jns
sahf
inc
lods
sbb
xlat
dec
inc
mov
dec
ltr
sub
into
rcl
inc
inc
(bad)
movs
push
pop
pop
push
mov
icebp
adc
aad
and
fdiv
loop
mov
cmp
push
mov
stc
(bad)
mov
push
add
or
vpshab
jmp
in
push
sbb
nop
pop
cmp
loopne
dec
femms
shl
fwait
cmp
adc
add
adc
out
leave
and
inc
inc
prefetchw
sbb
enter
sbb
inc
and
or
or
data16
sbb
dec
pushf
cmp
push
mov
mov
and
or
or
sbb
jno
push
cmp
nop
xchg
(bad)
dec
push
dec
js
enter
enter
sub
ud0
or
nop
movs
mov
push
packsswb
sar
loope
mov
and
(bad)
nop
inc
dec
enter
dec
add
ror
movaps
leave
(bad)
pop
and
mov
pmulhuw
mov
xor
in
enter
adc
adc
cmp
or
cwde
dec
lar
repnz
adc
mov
add
push
and
jl
adc
in
sub
xchg
mov
adc
clts
scas
dec
dec
adc
adc
jns
nop
movlps
daa
(bad)
clts
int3
adc
ror
push
sbb
adc
dec
mov
dec
nop
mov
xor
dec
pslld
aaa
rdtsc
js
adc
push
ficom
enter
and
lods
adc
lods
addr16
add
and
adc
and
push
pop
adc
repnz
and
prefetcht2
dec
add
adc
or
mov
xchg
das
dec
mov
clc
pop
ret
retf
adc
pushf
inc
add
xchg
sub
or
mov
add
nop
cmovb
adc
dec
lldt
nop
pop
pop
sub
sub
sahf
sub
xor
add
nop
scas
daa
sub
or
nop
das
sub
stc
add
rdmsr
adc
xor
nop
(bad)
xor
xor
in
add
sbb
ss
ins
ja
push
dec
or
adc
dec
movs
and
mov
sub
or
cmps
retw
xor
fnstcw
(bad)
pop
add
mov
daa
pop
jne
add
test
cmps
cmp
or
mov
and
fs
cs
fcomp
and
mov
push
add
pop
push
daa
push
add
cmps
and
cmp
inc
in
push
mov
jl
das
fcomp
and
test
div
loop
xchg
push
inc
daa
jns
jg
out
clc
and
dec
les
adc
movs
sbb
pop
add
xor
jno
xchg
sbb
cmp
and
popf
fdiv
xor
pop
nop
mov
xor
rol
bound
sbb
test
sbb
xor
cmp
adc
mov
cmp
or
xor
xchg
add
and
or
iretw
pop
dec
and
inc
aaa
xchg
or
adc
inc
daa
adc
pop
mov
leave
or
pusha
(bad)
mov
arpl
and
jnp
out
and
sbb
pop
shl
push
test
loop
idiv
xchg
mov
je
js
and
pop
mov
dec
inc
sub
int3
cvttps2pi
or
(bad)
pop
and
out
aas
sbb
and
fistp
jmp
jns
xor
xor
push
xchg
adc
pop
sysenter
add
xor
mov
daa
cwde
fisttp
inc
ins
inc
outs
and
cmps
(bad)
fcomp
lds
jl
push
nop
mov
repnz
fcom
in
sub
mov
sub
add
cmp
fwait
daa
daa
test
nop
cmp
adc
sbb
and
enter
cmp
pop
adc
pop
and
pop
cmp
jne
dec
pop
repnz
inc
pop
ins
dec
push
adc
shrd
xchg
or
sub
sub
inc
dec
loop
fld
cmp
enter
dec
outs
cmp
enter
(bad)
(bad)
out
dec
enter
movups
repnz
jo
dec
aam
dec
repnz
enter
dec
(bad)
cmp
pop
hlt
nop
dec
push
ds
bound
div
inc
xor
sub
push
pushf
iret
outs
pop
cmc
inc
and
call
lahf
xor
stc
push
dec
pop
pop
ror
or
(bad)
dec
add
in
ss
das
cvtpi2ps
pop
pusha
xchg
aaa
test
dec
and
xchg
mov
push
movzx
add
pop
aaa
int3
mov
and
push
or
ss
hlt
hlt
jg
hlt
sub
cmp
jo
in
das
out
xchg
data16
sbb
stc
popa
enter
jle
stc
mov
rol
in
xchg
cmp
or
call
pop
xchg
dec
sahf
(bad)
cwde
lods
xor
sahf
stos
or
adc
repnz
inc
push
in
sahf
pop
repnz
call
jo
gs
in
out
add
fwait
adc
cli
xor
push
dec
ss
xor
and
int3
bound
sbb
cmp
cmp
mov
push
or
pop
sub
ror
ret
test
inc
test
pop
fistp
push
add
test
lock
shr
adc
inc
mov
mov
rcl
dec
dec
adc
add
pop
dec
jmp
adc
adc
push
add
pcmpgtb
adc
(bad)
fiadd
stc
stos
pushf
dec
dec
lods
dec
push
movs
mov
out
mul
iret
das
in
adc
shl
sub
push
cmps
xchg
xchg
dec
mov
sub
dec
dec
and
pop
leave
stos
pop
sub
mov
pop
repnz
pop
dec
cs
ins
add
pop
pop
sbb
mov
cld
push
cmp
dec
aam
fincstp
lock
mov
push
das
lahf
push
dec
dec
or
sub
and
test
cld
push
push
ds
inc
cmps
mov
dec
repnz
cmp
pop
inc
cmp
dec
dec
and
leave
adc
in
dec
dec
dec
sub
stc
push
dec
pop
push
addps
cmps
mov
ss
push
imul
jb
repnz
sbb
cmp
jns
test
cmp
rcr
push
push
lahf
dec
inc
sahf
pushf
idiv
push
or
and
clc
daa
pop
dec
jb
daa
daa
daa
test
xchg
xchg
xchg
lea
jo
xchg
pop
movzx
jmp
push
and
push
add
xchg
pop
sub
xchg
fsub
in
pmulhuw
push
and
cmp
pop
shr
enter
(bad)
es
adc
call
dec
push
mov
sub
or
mov
test
pushf
test
add
stos
jbe
ja
ds
cmps
dec
or
pop
dec
stc
inc
push
inc
adc
cld
daa
dec
sar
mov
mov
inc
repnz
push
and
inc
rcr
sub
xchg
and
dec
mov
push
in
dec
test
or
or
push
sbb
dec
iret
push
enter
pop
sub
xchg
adc
and
mov
dec
pushf
pop
dec
or
jns
sub
pop
dec
lods
inc
inc
mov
test
mov
inc
jo
sahf
es
push
inc
pusha
aam
xchg
mov
sub
stc
and
pushf
pop
dec
sbb
dec
xor
sub
pushf
pop
dec
and
dec
add
push
imul
fs
sub
daa
mov
sub
pop
int
cmp
add
stos
mov
xchg
in
inc
push
xchg
sub
dec
push
sub
inc
sub
in
fs
sub
or
daa
add
nop
pmulhuw
stos
adc
sar
inc
pop
stc
call
sub
test
add
enter
add
rcl
gs
sub
dec
pusha
fisttp
in
repnz
pop
dec
pusha
sub
retf
pop
and
loopne
dec
fistp
cmp
push
and
jns
dec
jl
ds
add
sysenter
sbb
(bad)
frstor
je
push
pop
iret
jne
xchg
sbb
inc
mov
fadd
cmp
inc
pop
jns
and
push
repnz
in
dec
dec
sbb
sbb
pusha
mov
int
sub
pop
push
xor
test
add
lahf
sbb
mov
cmp
push
adc
jo
jmp
cmp
sub
xor
(bad)
dec
mov
outs
xchg
aaa
cmps
push
dec
fcomp
pop
push
cmp
pushf
aaa
or
sub
pop
push
leave
loopne
ins
add
ret
xor
pop
xchg
adc
pop
dec
fwait
mov
leave
jo
or
aaa
sbb
xchg
(bad)
shr
xchg
das
out
mov
mov
shl
pop
mov
sbb
push
xor
retf
jmp
fcomp
push
test
pop
sub
mov
fmul
popa
and
das
cmp
bound
in
cli
bound
arpl
leave
leave
enter
fs
stos
repnz
clc
inc
gs
cmp
jns
aam
push
mov
in
and
mov
sahf
pushf
pushf
fdivr
and
and
dec
jle
add
outs
daa
daa
daa
bound
repnz
fisub
jl
push
je
bnd
and
push
enter
add
das
push
dec
test
push
mov
jno
fsub
xchg
sbb
add
push
daa
push
xor
cmp
inc
ror
mov
in
add
xor
(bad)
fcmovb
movs
add
pusha
add
add
ja
add
xor
add
stos
leave
add
pop
cmp
ins
xchg
push
add
stos
pop
ins
xchg
and
das
add
fwait
in
xchg
fadd
jo
test
and
push
pop
cmp
pop
add
dec
iret
add
push
in
xor
in
mov
push
and
push
or
sub
imul
popf
test
pop
aam
xor
dec
dec
pop
xor
adc
aad
xchg
and
mov
xor
push
sub
fdiv
mov
cld
xor
imul
rol
test
ss
test
push
mov
xchg
push
adc
test
ss
mov
dec
pop
sub
dec
and
nop
test
stc
jmp
dec
inc
repnz
sub
xor
cs
adc
test
push
sub
sbb
push
jp
push
or
gs
xlat
imul
sbb
and
ins
cs
add
mov
fcomp
inc
repnz
dec
pusha
ins
push
or
cmp
jo
add
shr
repnz
fsubr
add
test
mov
fisttp
cmp
push
xchg
(bad)
ret
lods
mov
and
call
inc
pop
push
iret
test
outs
push
and
es
int
psubsw
jnp
or
inc
daa
xchg
xchg
push
leave
in
movq
push
mov
dec
dec
leave
sbb
outs
in
cwde
fmul
pop
inc
ins
add
adc
or
or
sub
push
sub
ja
mov
je
into
mov
in
ror
mov
xchg
scas
aas
jb
les
xchg
xchg
cmp
pop
pop
fs
imul
jns
pop
scas
pop
ins
aam
repnz
push
leave
pusha
fcomp
ins
seto
fnstenv
fwait
repnz
sahf
fmul
aam
jae
xor
bnd
mov
out
pop
je
in
fs
xchg
(bad)
xor
in
jbe
cmp
sbb
rcr
ja
pushf
pushf
mov
out
js
dec
dec
inc
push
ja
ret
dec
dec
stc
das
jns
mov
xchg
daa
daa
fld
jp
(bad)
rcl
jnp
cmp
dec
pop
pop
data16
jnp
fwait
push
mov
add
sar
in
pushf
nop
jnp
cmp
jnp
ficom
jno
in
jb
dec
cmc
xchg
cmp
push
xchg
pushf
nop
jnp
cmp
cmp
cmp
mov
neg
ins
push
pop
sbb
hlt
dec
(bad)
aad
nop
ins
mov
loope
test
cmp
jnp
mov
xor
push
enter
push
mov
lds
shl
and
xor
cmp
and
cmp
jnp
inc
adc
cmp
push
pop
cmc
adc
iret
or
xchg
push
hlt
sub
mov
cmc
pop
ds
in
push
pop
in
je
sbb
pop
ins
cdq
xor
mov
fs
pop
nop
pop
dec
hlt
aam
in
sbb
adc
loopne
in
sbb
dec
test
xchg
imul
and
movs
adc
sbb
jbe
dec
enter
aas
cmp
leave
lods
hlt
pop
aas
and
hlt
js
fs
push
ins
imul
aas
pop
or
hlt
les
or
hlt
loopne
in
in
aas
mov
inc
dec
jge
inc
inc
shl
pop
add
jns
nop
push
pop
cmc
jl
jne
nop
adc
jns
inc
mov
sub
or
enter
dec
mov
cmc
fadd
(bad)
push
loop
fcom
mov
dec
jg
es
jne
jo
or
mov
test
sbb
and
in
push
push
inc
cmp
mov
fdivr
cmp
sbb
repnz
xchg
dec
cmp
mov
sbb
push
rcl
(bad)
out
adc
push
mov
movs
mov
push
mov
stos
ffreep
jge
mov
jle
aam
add
inc
movs
mov
cdq
lods
jl
jle
add
dec
mov
clc
push
dec
pop
push
xor
jl
dec
sahf
in
jns
dec
dec
push
dec
dec
pushf
inc
dec
in
jns
push
dec
dec
cld
jl
sub
xchg
nop
jg
add
les
loopne
popa
sbb
pushf
xchg
push
add
add
shl
jp
adc
or
dec
inc
or
rdtsc
shl
push
icebp
aad
outs
idiv
adc
sub
push
popf
or
and
add
mov
popa
xchg
sbb
pop
dec
ins
rcr
add
icebp
cmps
pop
in
add
cmp
inc
je
adc
pop
and
add
mov
jge
adc
stc
xor
mov
cwde
and
fist
mov
test
aam
add
dec
dec
mov
inc
dec
dec
inc
sbb
adc
aas
push
rol
sbb
outs
add
out
mov
mov
xchg
js
dec
(bad)
cs
pusha
xchg
jno
mov
pop
fs
mov
add
repnz
xchg
xchg
push
pop
mov
stos
mov
pop
inc
pop
repnz
sub
dec
inc
cmp
push
repnz
push
test
pop
xchg
mov
xchg
sbb
fadd
and
adc
out
arpl
(bad)
and
rcr
and
jns
jo
mov
ds
pop
push
sub
cwde
in
mov
add
fcomp
mov
aam
push
jnp
push
jo
adc
or
das
outs
mov
imul
nop
int
xlat
push
leave
or
outs
in
mov
mov
xor
js
cld
mov
fcom
mov
inc
dec
enter
mov
cmp
rcr
pop
pop
movs
dec
xchg
lahf
xor
cmp
pop
xor
or
adc
mov
out
ins
mov
leave
enter
mov
mov
lea
push
push
dec
jbe
inc
inc
rol
leave
aam
aam
loopne
inc
repnz
push
aam
xor
xchg
ins
jl
test
pop
inc
sbb
xchg
or
je
hlt
lea
cdq
add
sbb
xor
test
adc
dec
adc
repz
xchg
jns
addr16
call
mov
add
nop
pop
dec
pop
jb
in
dec
pusha
rcl
xor
neg
popf
repnz
nop
aas
mov
mov
jns
mov
cdq
nop
aas
in
clc
es
nop
adc
dec
xchg
push
rcl
pop
int3
push
pop
jns
cmps
adc
mov
ins
lods
leave
aad
xchg
ins
imul
xchg
fwait
hlt
or
xchg
neg
xchg
sahf
xchg
mov
into
das
enter
in
push
clc
jge
and
inc
mov
cld
jl
mov
jl
dec
xchg
dec
adc
data16
or
xor
inc
jo
xor
enter
shl
mov
pop
jno
xchg
pop
inc
rol
add
fbstp
xchg
aaa
mov
and
sbb
push
jmp
sbb
adc
inc
push
test
enter
test
xchg
pop
xchg
test
sbb
aaa
test
and
xchg
push
test
push
sub
pushf
or
nop
xchg
push
pop
inc
lds
mov
cmps
loop
inc
xchg
pop
dec
xchg
push
xchg
pushf
sbb
ins
pop
xchg
jbe
mov
test
dec
xor
xor
stos
push
aaa
pop
leave
mov
movs
dec
dec
xchg
or
jb
xor
dec
mov
add
dec
jmp
movs
nop
mov
pop
add
push
add
push
or
jl
ds
inc
adc
mov
mov
cdq
rcl
xchg
xor
sbb
inc
adc
pusha
loop
mov
push
es
pop
and
jne
adc
mov
xchg
aas
add
add
mov
or
call
fisttp
sub
xchg
js
in
(bad)
ja
push
xchg
in
stc
sahf
inc
sbb
inc
jmp
add
jns
rcl
xchg
dec
shl
lods
mov
xchg
hlt
dec
lea
ins
cmp
pop
lea
mov
out
mov
gs
xchg
add
xlat
div
sub
mov
mov
jno
loop
je
adc
pusha
add
add
ja
jne
and
xchg
sahf
fwait
sub
shr
repz
mov
add
pop
xchg
inc
aam
addr16
mov
js
sub
icebp
sti
sar
cmp
fidiv
xor
aam
pop
ja
fiadd
pop
jge
and
jle
fwait
dec
push
xchg
out
xchg
jmp
and
ret
inc
and
pop
stos
jnp
ret
inc
adc
out
add
xchg
je
pop
or
or
cmp
fiadd
ins
or
push
push
and
and
add
adc
fistp
push
xlat
xchg
mov
push
push
fist
movs
and
gs
clc
mov
ins
dec
sahf
add
movs
push
xor
arpl
movs
sub
and
and
mov
mov
pusha
jmp
mov
xor
rol
jo
test
popf
xor
pop
push
test
nop
add
mov
mov
and
xchg
jge
rcl
in
dec
adc
mov
fadd
pop
cmp
inc
pop
xor
dec
ja
(bad)
push
outs
jmp
(bad)
idiv
jmp
pushf
jmp
ficomp
xor
pop
pop
add
sbb
jne
pop
pop
mov
jnp
daa
ds
cmp
xor
icebp
and
ret
and
fsubr
fmul
add
mov
jbe
push
push
xor
mov
jns
or
xchg
popf
dec
and
and
jno
and
add
setle
cmc
push
and
sbb
push
mov
and
shl
pop
rol
sar
bound
mov
call
ins
and
add
mov
test
add
and
scas
mov
int3
dec
ret
lock
out
and
sub
jl
js
ficom
add
les
mov
jne
dec
jl
inc
(bad)
movs
xchg
push
jns
or
mov
add
fiadd
in
mov
lods
mov
pop
and
pop
test
push
fild
inc
jmp
test
add
cmp
push
inc
and
js
mov
inc
int
jne
xchg
ins
(bad)
imul
inc
xor
fcomi
adc
ret
je
call
ret
and
imul
adc
add
add
push
pop
or
jl
xor
pop
les
scas
daa
and
dec
ins
call
cmp
mov
sub
adc
mov
clc
fs
inc
or
test
popa
fmul
jl
cmc
adc
xor
push
jmp
scas
js
in
aas
jp
dec
jb
or
xor
(bad)
sub
mov
stc
clc
sti
imul
call
jmp
adc
lea
jb
aaa
cmp
add
adc
icebp
jge
pusha
sahf
(bad)
sub
sub
xchg
push
jmp
ins
xor
ss
mov
mov
lahf
data16
fild
and
jae
sbb
loop
inc
add
ja
cmp
adc
mov
jae
stos
inc
add
fmul
das
cmp
mov
xor
jno
sub
(bad)
jmp
jae
lds
add
push
cmp
adc
vmovhps
pusha
mov
xchg
ss
pusha
xchg
inc
mov
test
and
or
and
retf
mov
sahf
jmp
push
mov
movs
and
cmps
int3
xor
pop
sub
popa
popa
and
fisub
ret
adc
adc
add
or
cmp
inc
xchg
dec
jecxz
inc
mov
lds
mov
push
mov
test
sbb
fild
mov
pop
push
movhps
pop
rcr
pop
cdq
pop
aaa
sub
iret
pop
sub
ror
adc
addr16
in
and
push
lock
push
movs
push
and
adc
xor
jno
mov
dec
add
mov
shr
mov
mov
ins
ds
mov
test
xor
int
fdivr
movs
mov
mov
pop
pop
inc
mov
pop
pop
out
add
scas
repnz
sbb
inc
movs
dec
js
inc
mov
iret
(bad)
retf
cmps
lar
jbe
add
add
cs
scas
cld
add
sub
push
add
pop
sub
test
lds
dec
lock
dec
test
sub
pop
add
mov
dec
or
dec
popa
stos
dec
add
movlps
jmp
adc
jg
dec
fnstsw
lods
unpcklps
out
movhps
sub
retf
xchg
lods
pop
add
sahf
lods
dec
sbb
sbb
pop
iret
cmp
xchg
dec
mov
in
pop
xchg
sbb
add
or
icebp
xchg
sahf
ins
cmps
xor
in
jne
ss
stc
js
dec
scas
dec
pop
push
and
add
and
xor
test
push
retf
mov
xor
adc
adc
jo
pop
pop
sub
push
and
inc
add
mov
ins
pop
mov
and
data16
and
add
or
sar
mov
add
adc
xchg
add
shr
adc
fld
xlat
rcr
mov
mov
xlat
adc
push
in
add
scas
push
rcl
pop
sbb
mov
mov
mov
sbb
rol
sbb
lods
and
ins
adc
jl
xchg
dec
add
loope
rol
adc
lods
pop
add
or
xchg
or
sbb
push
mov
sbb
mov
mov
add
cmp
add
mov
out
test
stc
jns
dec
enter
sub
bound
xchg
fsubr
mov
adc
es
inc
add
ins
fcom
scas
sbb
jo
jg
inc
jb
test
mov
les
jmp
dec
add
xor
sub
scas
fwait
and
imul
inc
mov
out
inc
jmp
add
pop
xchg
pop
mov
pop
inc
leave
(bad)
cmp
add
lds
mov
or
fs
sbb
inc
scas
cmp
mov
wrmsr
mov
push
cwde
icebp
mov
pop
ror
aas
int
cmp
push
mov
loopne
lds
cli
inc
mov
scas
xchg
retf
mov
mov
add
mov
add
retf
xchg
sub
adc
movs
push
in
(bad)
in
add
sbb
or
repnz
mov
nop
lahf
dec
es
mov
adc
mov
(bad)
int
nop
ret
pop
and
mov
shl
adc
cmp
pop
in
xlat
arpl
sbb
loopne
sbb
adc
xchg
pop
lea
test
inc
jp
int
adc
aaa
stos
add
movs
int3
mov
lahf
fnsave
stos
dec
clc
cmc
ins
dec
gs
adc
rcr
add
in
dec
fist
lea
fsubr
fst
mov
dec
shl
not
and
jle
inc
mov
mov
mov
xchg
jmp
sub
pop
les
or
ss
loopne
cwde
mov
xor
mov
mov
xor
dec
pop
js
jo
fwait
cmps
inc
adc
mov
inc
or
adc
iret
mov
cmp
mov
sub
sbb
outs
mul
push
xchg
(bad)
int
dec
push
shl
out
call
mov
inc
sbb
pop
or
gs
add
mov
and
mov
or
jl
mov
ss
mov
(bad)
out
add
jb
cdq
mov
jns
jb
lock
add
fcomi
mov
mov
arpl
push
inc
xchg
lock
enter
pop
jns
je
enter
fwait
mov
mov
add
push
and
ror
mov
inc
mov
stos
push
repnz
enter
mov
shr
nop
inc
push
addr16
mov
adc
add
mov
inc
xor
rcr
pop
fmul
and
adc
push
adc
mov
mov
loopne
movs
sbb
dec
mov
pop
pop
add
push
test
and
in
sbb
or
sti
test
repnz
sti
sub
call
shl
and
mov
xor
xor
adc
movs
aas
sbb
seto
fnstsw
aad
and
aad
lods
dec
gs
pop
in
jae
jp
mov
adc
adc
in
pop
call
push
movs
xchg
jae
jnp
xchg
ins
inc
push
cmp
or
je
ret
and
or
mov
sub
or
jmp
mov
mov
mov
push
xor
jne
adc
ret
add
cmp
mov
dec
dec
or
jne
pop
or
pop
shl
js
cld
or
cmp
call
out
xchg
div
lock
xchg
xchg
call
sbb
call
aas
push
cmps
popa
fcom
add
or
push
pop
adc
mov
inc
add
push
sbb
hlt
push
mov
call
arpl
jnp
adc
inc
lds
inc
rcl
out
fmul
(bad)
mov
mov
mov
push
mov
iret
test
inc
mov
inc
or
add
jne
icebp
pop
push
push
in
add
or
jno
imul
call
xchg
inc
inc
(bad)
(bad)
and
mov
dec
dec
clc
inc
push
stc
inc
cmp
jge
pop
subps
fcomp
cmp
push
and
or
and
xor
(bad)
ss
imul
repnz
dec
dec
jno
adc
cwde
js
jmp
inc
xchg
out
pop
ret
adc
mov
pop
add
jge
scas
or
jbe
add
leave
cmp
adc
dec
jne
sar
dec
lock
cmp
add
gs
jmp
push
and
add
mov
les
and
inc
pop
mov
adc
fstp
cmp
popf
xor
out
or
or
cwde
add
cdq
inc
sub
movs
xchg
xor
add
add
mov
push
lahf
call
clc
lods
push
fs
cmp
and
cmp
add
adc
bound
pop
nop
dec
(bad)
hlt
xlat
adc
push
push
sbb
push
rcl
pop
ror
xchg
mov
inc
js
test
xor
adc
xlat
daa
add
cmp
and
and
push
jmp
inc
xchg
xchg
mov
test
std
sbb
inc
inc
cmp
and
mov
fimul
outs
pop
lock
mov
xchg
les
inc
push
inc
and
cdq
or
je
ret
dec
push
repz
enter
ins
ror
gs
or
and
mov
pop
in
xchg
ret
sub
out
xchg
pop
shl
push
add
fbstp
arpl
retf
xor
mov
ins
pop
cmp
and
int3
push
(bad)
push
sbb
and
jecxz
fucomip
fadd
jmp
pop
push
push
sub
pusha
mov
push
repz
and
scas
stc
in
aad
ret
push
sbb
in
aad
icebp
rcr
mov
adc
jmp
adc
popa
aaa
pop
hlt
push
scas
mov
xchg
inc
pop
or
rcr
mov
adc
push
je
mov
or
xor
test
inc
test
or
in
stc
add
push
mov
shr
mov
xchg
sbb
and
loopne
imul
mov
push
leave
lock
les
daa
popa
or
adc
sub
pop
mov
xor
loopne
sbb
sbb
jle
imul
xor
push
movs
and
in
call
fsubr
(bad)
loopne
cmp
xor
hlt
push
(bad)
fidivr
cmp
xchg
icebp
sub
mov
sub
or
mov
add
add
add
jne
mov
inc
(bad)
cmp
stos
add
fs
aas
sti
add
aaa
test
adc
mov
xchg
addr16
call
mov
pop
xor
daa
add
ins
add
sub
cs
fdivr
push
or
dec
call
inc
lds
add
xchg
or
xchg
pushf
inc
mov
cmp
or
sub
fist
fcomp
or
pop
or
jne
fdivr
sub
mov
or
mov
jbe
rcr
push
imul
mov
pop
cli
or
xor
jb
add
add
push
or
bswap
es
adc
and
inc
jmp
mov
shl
xor
(bad)
(bad)
push
adc
test
fist
pop
inc
and
fsubr
sbb
add
cmps
add
mov
mov
loope
into
das
ror
neg
mov
daa
fld
xor
mov
mov
pop
sbb
xchg
add
add
cdq
sub
sbb
dec
daa
pop
pop
add
test
popa
jp
mov
sub
or
sbb
lock
pop
call
dec
add
sbb
mov
sbb
mov
mov
jg
cs
leave
add
(bad)
leave
in
jns
inc
popa
push
inc
mov
mov
cmc
cs
(bad)
fdiv
xor
sbb
pop
xchg
int
cmp
jns
int
imul
into
push
(bad)
(bad)
dec
dec
inc
sahf
and
pop
nop
retf
and
sar
jge
xchg
xchg
daa
daa
repz
shl
jmp
in
jmp
jb
xor
sbb
adc
jno
shl
leave
es
movs
test
or
add
mov
in
loopne
mov
cmp
push
das
sub
and
add
or
inc
or
or
adc
mov
addr16
adc
lods
push
stos
imul
ins
jge
mov
imul
(bad)
fild
add
iret
outs
adc
xor
hlt
popa
add
dec
inc
add
or
clc
mov
js
xor
and
and
push
mov
(bad)
ror
or
mov
adc
gs
ds
push
xchg
gs
add
jnp
in
ror
sti
and
cmp
call
fisttp
ffreep
xchg
xor
adc
lds
cmp
rcr
push
loopne
fwait
jno
pusha
nop
pushf
mov
fs
fisub
and
sbb
or
mul
cmp
add
gs
mov
in
inc
sub
es
inc
xchg
adc
adc
add
ds
pop
add
imul
sub
add
adc
arpl
or
inc
sbb
adc
pop
inc
jo
cmp
push
popaw
outs
ins
jg
fmul
(bad)
and
adc
inc
cmp
fsub
dec
inc
push
stos
push
shl
pop
inc
test
push
add
dec
rcr
popa
pusha
sti
add
xchg
inc
mov
es
shl
and
fsub
inc
cld
push
pop
push
imul
sbb
and
dec
mov
inc
div
mov
inc
push
cmp
mov
push
dec
lods
sbb
out
mov
dec
in
push
push
jbe
gs
pop
xor
and
shl
jbe
dec
test
leave
clc
outs
outs
stc
sub
sub
push
dec
inc
pop
in
ret
out
outs
and
xchg
or
pop
pop
and
mov
arpl
xor
and
not
das
aas
dec
sub
push
and
inc
in
adc
jbe
test
cld
pop
movs
jmp
push
outs
lea
and
shl
jmp
dec
add
cmp
int3
push
xchg
iret
imul
or
pop
fisub
popa
push
xlat
jle
mov
inc
xor
and
daa
mov
ins
push
adc
mov
dec
add
inc
loop
mov
inc
add
test
cmc
mov
xor
dec
outs
and
ret
aas
pushf
push
test
cs
push
nop
das
(bad)
stc
pop
mov
sahf
dec
add
ja
push
adc
cmp
pop
pop
sub
mov
fst
or
stc
(bad)
enter
js
(bad)
or
enter
aad
add
loope
les
mov
call
and
push
inc
je
or
or
aas
fst
xchg
ret
popa
fcomp
sbb
loope
inc
inc
outs
inc
xor
mov
test
dec
sub
jmp
loop
mov
or
cmp
adc
cmps
add
rol
xlat
sub
pop
ret
es
or
pop
jne
cs
push
adc
rol
repz
addr16
ret
mov
push
or
nop
fadd
dec
pop
shl
rcr
aad
adc
jmp
(bad)
or
dec
lods
ret
add
js
sbb
push
add
dec
mov
daa
not
fwait
sbb
xor
movs
xor
ss
jmp
add
inc
repz
call
fist
imul
cwde
dec
mov
mov
push
or
addr16
ja
ja
jle
sub
bnd
sub
mov
sbb
xchg
jo
inc
inc
mov
push
nop
fsub
mov
iret
leave
add
sbb
ret
cmp
mov
ja
dec
cmp
enter
sbb
push
add
jecxz
sbb
test
xor
dec
and
mov
out
and
and
mov
loopne
xchg
jne
add
cdq
ss
push
pop
or
mov
mov
sahf
stc
ja
push
cmp
cmp
mov
xchg
dec
in
or
shr
nop
push
or
pop
xor
into
nop
add
pop
pop
inc
lods
xor
or
and
ds
or
or
jmp
shr
mov
dec
pusha
sbb
imul
xchg
(bad)
mov
fiadd
xchg
xchg
push
(bad)
and
gs
lock
fild
or
push
dec
sbb
xor
sbb
or
sbb
cli
jmp
inc
imul
xor
cli
xor
add
sbb
lea
int3
xor
fsubr
dec
jno
fcmovbe
repnz
(bad)
mov
mov
cli
mov
ja
jne
push
inc
pusha
jo
xchg
sbb
gs
pop
es
fnstcw
sahf
mov
hlt
frstor
in
adc
mov
xchg
out
or
ins
in
sti
inc
in
or
loope
or
fistp
(bad)
(bad)
retf
fcmovu
sti
mov
iret
les
sbb
lahf
les
fcmovu
mov
push
sub
ins
std
fistp
fsub
or
(bad)
xlat
sbb
mov
out
call
int
iret
mov
mov
iret
in
test
push
or
or
call
int3
pop
jno
or
pop
jne
popa
outs
jbe
jae
stos
inc
xchg
sbb
pop
or
inc
ret
sbb
test
or
sub
mov
or
sbb
pop
cmp
rcr
and
ret
sub
fcom
jns
pop
sbb
xchg
in
inc
mov
and
enter
dec
xor
les
sbb
pop
ficomp
in
lods
ret
sub
hlt
stos
aas
or
dec
cmp
add
cld
push
or
push
or
sbb
cmp
xchg
es
adc
pop
cmp
push
jbe
mov
cld
push
add
add
sub
or
outs
aam
ret
xchg
aad
mov
nop
loope
jns
mov
pusha
fdivr
in
add
fsub
dec
shl
leave
inc
fdivr
hlt
hlt
repz
or
mov
jecxz
xchg
jne
push
(bad)
aam
or
(bad)
dec
jg
or
loope
xlat
and
mov
mov
sbb
or
sar
ror
mov
add
pop
dec
and
sbb
lds
add
sti
fidivr
sbb
push
push
jae
pop
neg
sbb
push
pop
shr
mov
dec
jbe
add
in
rcl
movs
fdivrp
push
push
inc
inc
mov
fdivrp
inc
cs
push
push
push
jg
sbb
dec
adc
inc
pusha
out
inc
scas
addr16
test
xchg
(bad)
inc
js
pop
add
jb
push
push
ja
jl
call
add
xchg
pop
in
inc
inc
out
and
cmp
pushf
add
inc
retf
xchg
xchg
(bad)
push
or
sub
add
aam
shl
push
aad
and
add
lea
mov
dec
pop
sbb
pop
int3
push
shl
or
test
add
dec
out
and
in
cmps
add
dec
and
in
aad
fld
add
fnstenv
imul
xchg
loop
enter
(bad)
jnp
ret
mov
xchg
adc
mov
or
ret
dec
push
cmp
push
rcl
xchg
sub
call
sbb
js
mov
inc
or
xor
test
test
outs
inc
cmp
and
(bad)
cli
jmp
push
xchg
rol
sbb
and
xor
sub
call
jb
je
adc
int3
(bad)
test
adc
push
mov
mov
and
(bad)
jge
push
xchg
mov
adc
sub
mov
mov
mov
out
jmp
dec
dec
cmp
imul
ss
(bad)
jmp
mov
push
cmp
cmp
inc
fild
cmp
mov
sbb
test
inc
xlat
out
sbb
test
movs
dec
jl
add
cmp
push
mov
mov
inc
add
js
xchg
pushf
sbb
sub
sub
jb
fcom
xor
sbb
test
push
inc
mov
mov
dec
adc
dec
fs
popa
sub
jnp
daa
or
repz
hlt
or
add
arpl
sub
fnstcw
push
imul
fild
pusha
sub
jmp
inc
lahf
sbb
inc
bound
gs
adc
xor
xchg
inc
sub
jne
imul
add
hlt
jne
cmp
jg
adc
xchg
ret
aam
ret
sub
inc
aaa
sbb
hlt
dec
pop
add
sbb
mov
jge
shl
mov
aas
ins
movs
rcr
hlt
fnstcw
jecxz
mov
push
xchg
fadd
add
sbb
mov
adc
ret
adc
in
push
aaa
loope
cmp
cmps
dec
lds
(bad)
mov
popf
or
jo
xchg
xchg
jmp
movs
inc
xchg
test
xchg
xchg
jmp
call
jmp
hlt
imul
cmps
sahf
mov
lock
xchg
jmp
sbb
inc
mov
mov
sub
dec
push
jns
or
enter
call
sbb
sbb
add
add
dec
pop
in
sub
pop
push
call
ret
or
dec
xor
inc
jecxz
in
inc
xchg
rol
and
out
pop
pop
fcom
test
xor
out
mov
(bad)
push
xor
aaa
in
jb
popa
movs
aaa
aaa
test
xchg
pop
enter
in
pop
mov
lods
dec
sbb
jno
inc
dec
out
imul
inc
dec
dec
add
inc
sbb
push
push
push
mov
dec
mov
sub
(bad)
mov
inc
icebp
sti
jp
sub
out
xlat
fwait
rcl
(bad)
fidiv
lods
and
or
add
pop
aaa
ret
cmps
rcl
sar
rcl
sbb
or
inc
and
add
out
adc
add
dec
daa
push
clc
xchg
inc
sbb
sbb
out
xchg
xchg
(bad)
mov
enter
lock
rcl
add
fsubr
push
fisub
add
and
push
pop
hlt
aas
inc
sbb
jg
ret
outs
or
nop
or
jns
(bad)
out
popa
and
cmps
jmp
inc
dec
rcl
inc
mov
jne
sbb
and
cmp
lods
repz
pop
mov
mov
fst
or
xchg
fmulp
pop
jg
push
mov
inc
xor
jge
and
mov
push
push
mov
mov
mov
call
dec
jne
add
lock
cs
icebp
rol
imul
mov
call
fidivr
repz
movs
rcl
mov
dec
push
or
gs
lods
jp
xchg
sub
imul
cmp
pushf
xchg
sti
pop
push
mov
xchg
pop
and
in
dec
push
cmps
loopne
pop
lds
sbb
add
dec
mov
push
fsub
lock
in
pop
pop
loope
pop
jcxz
enter
fcom
fild
leave
push
repz
inc
loopne
les
xor
adc
cmp
enter
add
xchg
cmc
jecxz
gs
mov
das
data16
test
inc
retf
ins
inc
mov
lahf
data16
ins
mov
(bad)
pop
inc
sbb
push
dec
push
and
popa
mov
mov
shl
test
dec
hlt
hlt
xor
cmp
mov
and
daa
and
lods
push
call
ja
or
jae
jae
sti
add
gs
popa
call
or
ficomp
mul
push
push
mov
or
repnz
xchg
or
mov
push
add
xchg
dec
push
or
jne
inc
ss
sbb
and
jg
ss
cmp
dec
jle
mov
js
mov
je
adc
or
pop
sub
imul
mov
cmp
xchg
add
inc
bnd
xor
ss
jg
mov
(bad)
mov
rcl
push
out
inc
rol
push
sbb
aad
test
mov
add
mov
mov
pop
or
jecxz
stos
loopne
pop
js
jmp
pop
mov
adc
or
adc
loopne
cmps
outs
mul
inc
xor
das
scas
outs
aaa
dec
pop
jbe
gs
fisubr
in
dec
xor
xor
xchg
fwait
gs
pusha
mov
ins
sub
aaa
inc
xchg
inc
ins
pop
in
popf
sbb
jb
add
dec
in
loopne
dec
outs
ins
pop
cmps
pop
inc
push
pop
scas
ins
sub
fistp
or
mov
aad
jae
ja
add
out
adc
push
sbb
pop
xor
sar
inc
inc
add
pop
ins
(bad)
addr16
in
das
ja
push
fisttp
push
or
xor
jmp
mov
(bad)
imul
jecxz
rol
xlat
imul
rcl
cmp
xor
jnp
xor
inc
xchg
out
xor
aas
dec
inc
or
push
or
cmp
adc
fs
mov
mov
test
aas
pop
dec
cmps
and
ins
(bad)
pop
pop
pop
rcl
push
mov
je
push
sbb
jg
shl
mov
movzx
xor
out
push
mov
aas
adc
aaa
adc
adc
xor
outs
inc
inc
fcom
add
mov
inc
stos
cmp
push
daa
(bad)
jne
imul
push
sub
or
pop
dec
stos
sbb
or
daa
inc
rol
pop
or
add
inc
mov
aad
ret
jecxz
fsubr
add
ins
popa
shl
dec
out
xor
aas
xlat
xor
mov
sub
inc
sbb
sub
mov
xlat
add
lods
or
inc
ret
xlat
js
push
cmp
imul
sbb
mov
(bad)
cmps
push
jl
ja
pop
push
mov
fwait
aaa
or
sbb
dec
les
lds
arpl
jnp
leave
or
jae
mov
adc
adc
pop
pushf
jo
imul
ror
add
jo
mov
mov
aaa
jbe
arpl
mov
sbb
(bad)
aas
and
fsub
out
adc
dec
fs
inc
in
and
(bad)
dec
hlt
push
cmp
(bad)
into
dec
jae
fisubr
dec
outs
push
outs
sbb
cmp
imul
xchg
jb
or
fwait
imul
mov
ins
inc
outs
popa
retf
call
pop
scas
jbe
mov
push
inc
arpl
mov
sti
outs
push
push
mov
scas
push
mov
or
mov
in
loop
cdq
gs
imul
aas
addr16
push
ss
fimul
ss
sti
push
pop
in
push
scas
fs
leave
mov
inc
arpl
fs
or
into
xchg
jae
leave
mov
or
push
or
push
(bad)
adc
push
shl
and
sub
push
daa
xchg
mov
pop
scas
push
sbb
(bad)
outs
push
and
inc
jae
cvtdq2ps
in
push
test
jg
cs
or
inc
push
loopne
cmp
add
jbe
dec
ins
jae
dec
mov
mov
push
mov
mov
push
adc
inc
jnp
xchg
push
inc
push
(bad)
bound
outs
out
pop
in
call
push
sub
xlat
aaa
xchg
(bad)
pop
in
add
aas
jns
mov
sbb
pop
je
add
ja
or
mov
dec
fwait
mov
or
add
lock
jbe
jns
dec
jmp
imul
sbb
add
sbb
nop
adc
pop
adc
in
or
dec
gs
lods
icebp
add
inc
pop
mov
shl
rol
test
pop
lods
arpl
adc
mov
retf
push
pop
aad
lahf
gs
xchg
push
cmps
or
adc
mov
sub
lods
and
cdq
sbb
sub
pop
das
push
dec
jne
push
pop
enter
aaa
push
or
pop
dec
add
and
adc
add
xlat
or
addr16
cmovg
push
push
lds
xor
fcom
(bad)
push
call
pop
mov
inc
sub
adc
pop
adc
addr16
mov
mov
addr16
pusha
test
(bad)
inc
imul
fist
arpl
bound
add
jae
push
lock
pop
sahf
ja
mov
jae
les
ror
and
push
jns
pop
enter
mov
arpl
aas
shr
jnp
push
(bad)
mov
or
cmp
adc
push
push
ret
mov
shl
out
fwait
call
or
pop
jo
jns
jo
ret
arpl
retf
fld
dec
ins
xor
aaa
xchg
pop
adc
xlat
ins
inc
mov
data16
fbld
dec
rcl
xchg
xchg
pop
push
cmp
test
jbe
dec
pusha
pop
pop
push
push
stos
push
pusha
pop
cmps
pop
sbb
das
or
xchg
outs
cmp
(bad)
sub
inc
pop
bound
add
shufps
fdiv
call
lods
add
addr16
cmp
les
xchg
or
outs
xchg
daa
jo
lods
fistp
or
fist
outs
xor
ss
jae
mov
pop
xchg
ins
jmp
inc
lods
imul
shl
push
pop
iret
add
aad
push
mov
or
shl
imul
mov
mov
push
adc
push
inc
mov
cmp
or
or
stos
pop
mov
clc
xchg
test
jmp
ret
rcl
mov
clc
and
add
pop
sub
adc
fild
call
add
test
popa
sbb
in
out
adc
adc
push
sbb
mov
xor
sub
push
dec
repz
cmp
adc
(bad)
xchg
(bad)
aas
jg
loope
imul
inc
movs
or
cmc
ja
add
jnp
xchg
cmp
shr
or
lock
add
dec
xchg
in
sahf
cmps
xor
xor
loopne
add
add
sbb
jmp
mov
add
push
js
or
dec
mov
jp
mov
adc
pop
mov
icebp
jno
mov
sbb
xor
dec
shl
ins
xchg
in
adc
or
and
mov
adc
mov
inc
or
push
sbb
rcr
sbb
push
pop
add
jb
jb
add
add
jb
jb
push
pop
or
jb
jb
or
or
sbb
jb
(bad)
(bad)
icebp
cmp
cmp
repnz
cmc
cmp
cmp
div
clc
stc
cmp
cmp
cli
sti
cld
std
cmp
cmp
(bad)
jmp
loope
cmp
cmp
jecxz
in
cmp
cmp
out
jmp
jmp
cmp
out
rcl
cmp
cmp
rcl
aam
cmp
cmp
(bad)
xlat
fcomp
cmp
cmp
fcmovu
(bad)
cmp
cmp
(bad)
rol
cmp
cmp
ret
(bad)
lds
cmp
cmp
(bad)
enter
cmp
retf
int
cmp
cmp
iret
mov
cmp
cmp
mov
mov
cmp
cmp
mov
mov
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
jo
cmp
sbb
shr
pop
push
pop
push
inc
jb
jo
imul
pop
sub
aas
xchg
or
arpl
lea
jb
cmp
sbb
push
sbb
pusha
(bad)
add
in
pop
cmp
popf
or
inc
nop
jo
scas
push
gs
xchg
mov
sub
mov
cmovb
jmp
sub
push
rcl
lods
jp
retf
or
in
shl
push
and
dec
xchg
add
mov
shl
sbb
inc
push
pop
or
and
inc
test
pop
fisubr
push
inc
pusha
sbb
add
scas
xor
push
fcom
add
ds
sbb
pop
jo
push
outs
jp
jo
jae
aaa
in
mov
or
adc
mov
cmp
add
fnstcw
or
fiadd
sar
add
jmp
fcom
adc
or
(bad)
fsubr
pop
imul
add
je
sar
je
push
inc
jns
sbb
or
dec
(bad)
addr16
and
inc
imul
sbb
pop
idiv
(bad)
adc
fdivr
jae
loopne
outs
jb
pop
adc
pushf
pop
pop
xchg
cmc
adc
adc
sub
push
repz
shl
ret
std
or
inc
leave
shr
pop
and
stc
dec
test
jne
pop
pop
cld
pop
or
in
push
adc
add
sbb
or
push
stos
fistp
push
mov
cs
inc
imul
pop
inc
outs
jb
jae
sub
test
call
or
add
ds
les
push
push
mov
inc
pop
aam
pop
es
cmps
cmp
mov
popa
sti
outs
jae
add
push
fcom
out
cs
sbb
sbb
imul
or
movs
pop
or
ss
adc
sub
or
sbb
movs
jne
lods
test
or
pusha
sbb
add
fisubr
mov
loope
fnstcw
pop
add
ret
leave
div
sbb
and
or
sub
push
fcomp
cmp
test
xor
das
xchg
push
sbb
test
mov
dec
adc
mov
dec
inc
dec
mov
push
lock
or
es
add
(bad)
pop
movs
andps
xor
(bad)
jge
pop
popa
je
and
xlat
sbb
and
pop
sub
ror
pusha
in
inc
push
inc
xchg
enter
cmp
add
xor
dec
xor
(bad)
cmovns
xor
push
sub
lahf
cwde
xchg
and
mov
cmps
inc
xchg
fisubr
cmp
or
cmps
adc
adc
push
and
imul
aam
push
fdivr
in
pop
test
push
mov
movs
dec
sub
and
and
cmps
rol
retf
neg
push
inc
or
push
jmp
cli
xor
es
mov
loopne
mov
sbb
test
sub
push
cmp
mov
ror
hlt
add
ins
mov
and
add
push
inc
mov
adc
stc
pop
test
ds
verr
push
and
mov
scas
pop
sbb
mov
mov
mov
(bad)
or
push
jmp
xchg
and
and
mov
mov
leave
xlat
test
jb
cmp
xchg
jg
add
mov
sbb
nop
aad
mov
scas
sar
adc
mov
mov
adc
nop
mov
add
xchg
add
and
repz
push
mov
mov
int
add
dec
fwait
out
and
or
mov
pop
mov
inc
xor
push
mov
fsubr
fwait
lea
cwde
stos
dec
movs
cmp
or
sbb
cwde
mov
int3
pop
ficom
pop
and
sbb
sbb
sub
or
sbb
sub
test
faddp
push
and
pusha
lea
mov
aaa
xchg
push
cmps
add
cmp
shr
jg
daa
repnz
sbb
leave
cmps
pop
push
add
jl
lea
repnz
pop
push
sub
jns
das
in
sub
ret
and
pop
sbb
jge
add
mov
xsha1
cmps
(bad)
mov
ret
and
or
add
in
sbb
xchg
shl
cmp
shr
rcl
jl
xor
sbb
sub
sub
jecxz
mov
jp
(bad)
fld
add
pop
das
loop
mov
das
ret
daa
adc
in
in
dec
xchg
hlt
leave
sub
push
cmp
sub
sub
jns
scas
fs
nop
dec
sub
jb
jns
xchg
dec
sub
nop
mov
jns
pop
sar
pop
sbb
cmps
xchg
or
mov
or
lds
or
jnp
dec
add
ror
fdivp
or
pop
ss
sub
pop
mov
xor
outs
stc
lods
push
push
adc
lock
xchg
mov
and
(bad)
sbb
push
ins
inc
rcl
xor
enterw
inc
or
gs
mov
cmp
out
pop
jg
push
inc
popa
pusha
pop
adc
mov
xor
addps
push
xlat
push
sahf
or
repz
sbb
or
out
sar
sbb
fadd
push
or
mov
fld
jo
push
sub
push
inc
inc
shl
xor
mov
sahf
(bad)
push
loopne
js
add
popf
pop
mov
hlt
jnp
xor
je
icebp
sub
test
adc
push
movhlps
sbb
es
xor
pop
add
sub
push
sbb
in
sub
inc
scas
jl
jae
sbb
push
add
mov
and
jae
sbb
xor
nop
cmovl
jne
test
aaa
push
jo
ins
ror
inc
xor
mov
adc
cs
cmp
push
jge
sbb
sbb
rcr
adc
xchg
pop
or
arpl
imul
pop
dec
hlt
mov
call
mov
inc
aas
pop
adc
out
int3
or
lea
ss
int3
adc
xchg
mov
xor
xor
add
cmp
xor
ins
cs
das
das
xor
push
scas
(bad)
cmps
or
sar
ins
cld
mov
push
dec
jae
jmp
mov
inc
cmp
push
ret
xchg
adc
popf
pop
add
xchg
cmp
nop
stc
push
mov
retf
prefetch
inc
xor
add
adc
cmps
adc
repnz
add
adc
dec
xor
add
bnd
or
add
pop
add
push
push
xor
scas
cld
mov
sbb
add
sbb
cmp
jo
retf
xchg
das
sbb
out
add
aaa
jg
pop
jns
jbe
das
and
popf
aaa
and
push
cmp
repz
sub
add
and
in
repnz
mov
and
cmp
pushf
fsub
push
(bad)
mov
loope
inc
pop
or
loopne
iret
xchg
jnp
add
cmp
inc
jb
xchg
call
sub
xor
push
sbb
add
cs
iret
leave
xor
xor
leave
jae
pushf
adc
or
pop
or
iret
or
pop
add
cwde
or
scas
iret
inc
jbe
les
inc
mov
adc
ds
push
add
ss
ret
adc
sub
adc
out
xchg
gs
add
ins
jmp
add
pop
cmps
mov
and
or
or
ret
pop
cmp
or
ror
aas
or
rol
call
add
add
and
lock
fs
cmp
dec
sub
sbb
in
cmp
or
out
sub
jns
xchg
and
add
mov
mov
xchg
fs
jnp
fadd
push
add
lods
sbb
pop
pop
xor
sbb
ror
lods
cmp
lods
pop
rcr
pop
sub
test
adc
sbb
outs
fs
bound
mov
adc
or
std
test
push
adc
adc
cmp
xlat
or
add
in
add
mov
nop
jnp
lods
xchg
push
jae
ss
outs
jbe
ret
fadd
gs
cmp
jns
outs
outs
call
push
push
fsub
or
(bad)
xchg
out
cmp
cmp
inc
gs
stc
or
jae
add
adc
nop
fidiv
add
loopne
jne
push
inc
or
xchg
mov
das
mov
daa
or
cmp
pop
push
mov
and
adc
ins
cmp
push
fs
jo
mov
adc
or
rol
loope
popf
jle
in
mov
inc
pop
popf
inc
mov
sbb
or
add
imul
pop
movs
add
ins
ins
cmps
js
or
movs
in
clc
inc
leave
add
inc
jb
and
fimul
fwait
sbb
inc
add
test
je
pop
dec
jne
sahf
in
(bad)
std
xchg
or
jl
mov
or
push
add
ja
outs
or
or
mov
ss
leave
adc
or
cmp
sbb
xchg
pop
daa
add
jb
jne
inc
cs
inc
dec
loopne
mov
dec
add
stos
daa
inc
xor
add
adc
jnp
or
jg
int3
mov
pop
or
add
sbb
xchg
pop
pop
add
mov
adc
pop
inc
inc
cs
lahf
push
test
add
jno
test
dec
and
add
xor
jbe
add
test
xchg
xor
add
call
add
nop
out
adc
lahf
pslld
inc
test
cmp
add
and
pop
aas
das
or
ficomp
push
mov
mov
mov
mov
into
repz
fistp
push
stc
cmp
data16
xchg
push
xchg
lods
hlt
mov
mov
fwait
dec
pushf
xchg
popf
push
cmp
jge
ja
rcl
push
push
mov
jns
dec
push
mov
add
idiv
inc
fimul
mov
sbb
or
and
xchg
pushf
mov
add
xor
leave
or
inc
cmp
add
scas
cmp
mov
stos
mov
add
cli
sub
sar
enter
and
dec
lods
inc
add
push
mov
jb
test
repnz
aaa
inc
pop
push
retf
xchg
jg
mov
inc
push
add
add
mov
inc
adc
(bad)
in
dec
xlat
dec
inc
push
inc
push
pop
scas
cld
repnz
call
push
inc
adc
in
je
stos
cs
loopne
jg
inc
scas
cld
repnz
retf
sbb
dec
inc
sbb
test
xchg
das
pop
sbb
mov
add
inc
scas
cmp
and
mov
add
xchg
das
jg
adc
and
mov
add
and
add
cmp
push
fcom
pushf
mov
mov
mov
xchg
inc
and
adc
mov
push
xchg
add
adc
mov
lods
xchg
inc
push
adc
mov
hlt
xchg
xchg
push
cmp
mov
or
fwait
push
xor
popa
retf
mov
pop
nop
push
ror
xchg
xchg
xchg
in
cwde
fwait
mov
sbb
pop
and
pushf
mov
(bad)
nop
adc
repnz
push
and
popf
mov
inc
jbe
inc
add
dec
rcr
dec
adc
das
das
jbe
pop
pop
pop
adc
jns
mov
dec
leave
push
sahf
xchg
cmp
mov
mov
test
sahf
mov
mov
xchg
pushf
adc
add
dec
lahf
mov
mov
mov
les
mov
add
imul
mov
push
mov
mov
nop
pop
enter
mov
enter
mov
pop
leave
sub
dec
push
and
dec
push
and
dec
mov
mov
les
dec
daa
pop
ret
lods
push
pusha
mov
int3
or
mov
inc
push
xchg
movs
inc
(bad)
std
repnz
iret
fmul
pop
iret
xor
or
cwde
div
mov
test
inc
fdiv
(bad)
jg
mov
dec
or
jbe
xor
cld
and
(bad)
fwait
mov
add
sub
xchg
addr16
ficomp
and
hlt
adc
cmp
call
or
hlt
sahf
or
dec
push
nop
fld
cdq
push
jnp
add
movs
mov
movs
cmps
xchg
push
and
pop
fwait
adc
push
add
add
jbe
or
or
mov
popa
icebp
sar
mov
dec
push
push
xor
push
mov
dec
lock
por
or
fidivr
push
inc
mov
jbe
sti
sete
adc
test
inc
push
movs
cmp
(bad)
jl
jnp
add
inc
or
loope
out
dec
jno
push
push
push
adc
and
adc
les
xor
add
jnp
cmps
xor
repz
xchg
or
out
lods
hlt
mov
cmp
push
mov
and
pop
es
pop
and
jns
mov
mov
adc
mov
iret
pop
sub
lods
jle
push
mov
dec
pop
sub
push
adc
adc
or
dec
push
add
push
xchg
cmp
xchg
rol
and
and
in
jge
shr
and
push
popa
ins
gs
gs
dec
xchg
or
cld
push
fsub
pop
jp
and
cmc
call
xchg
btc
or
jbe
stc
sbb
mov
sbb
fsub
ins
std
dec
inc
dec
adc
push
add
inc
dec
in
rol
movs
add
or
(bad)
mov
mov
push
mov
fwait
ja
and
dec
dec
push
push
jle
push
mov
(bad)
push
out
mov
repnz
push
add
imul
jbe
and
bound
jb
xchg
outs
sbb
sub
je
add
cmp
shr
clc
or
out
cmp
adc
int
add
call
std
jp
xchg
add
mov
mov
rol
icebp
push
outs
test
mov
or
add
inc
cs
push
test
xchg
sbb
fist
inc
arpl
dec
and
cmp
xchg
pusha
and
cmp
loopne
jge
loope
pop
xchg
xchg
dec
int3
pop
mov
mov
pop
inc
shld
xlat
daa
xchg
inc
cmp
mov
dec
xor
mov
bound
add
add
cs
add
lods
sub
pushf
jo
push
in
cmp
mov
loopne
jns
mov
xchg
adc
(bad)
in
dec
sbb
(bad)
dec
adc
jb
fcmovnb
test
pushf
cmp
fsub
mov
sahf
cmps
push
mov
or
mov
sub
cmps
or
dec
push
adc
dec
add
push
hlt
push
push
outs
push
leave
cmp
sar
cmp
inc
inc
xchg
or
push
cwde
aam
rcl
xchg
mov
je
dec
xchg
sub
add
pop
data16
sub
cmp
xchg
loopne
ret
jae
jl
dec
xchg
call
mov
inc
push
jnp
push
xchg
xchg
xchg
mov
push
inc
ror
or
jl
fld
push
cdq
pop
push
cmp
jns
pop
into
cvtps2pi
add
mov
test
enter
rol
imul
int3
dec
dec
enter
push
jo
inc
inc
fimul
inc
into
sub
xchg
sbb
push
js
and
xchg
pop
lock
dec
shl
xchg
lock
jo
pop
mov
aam
ror
int3
iret
shl
cmp
lock
mov
inc
push
mov
mov
and
rol
shl
or
xchg
jae
dec
mov
jecxz
inc
ins
or
in
ins
push
or
add
in
leave
inc
and
loopne
out
stc
push
mov
pop
stos
push
adc
fcomp
clc
jnp
cmp
adc
cdq
mov
xor
(bad)
or
add
pusha
push
(bad)
pop
outs
adc
add
pop
pop
jge
in
enter
jmp
enter
outs
pop
adc
adc
mov
or
cs
out
mov
and
std
pop
push
adc
test
inc
test
mov
aad
mov
nop
jb
into
mov
fimul
rol
sub
push
nop
or
dec
(bad)
and
adc
and
ins
loop
push
in
pop
xlat
pop
push
lock
es
inc
das
loop
aam
mov
out
add
pop
mov
ja
(bad)
adc
push
stc
add
adc
cdq
cmp
push
pop
imul
aaa
fadd
loope
inc
push
es
inc
pop
pusha
mov
scas
jg
xchg
addr16
pop
aad
cdq
call
outs
inc
push
jge
rcl
enter
adc
fdiv
pop
inc
and
aaa
fld
sbb
test
push
sub
pop
mov
leave
(bad)
pop
push
push
add
sbb
mov
push
sti
nop
nop
pop
inc
pop
jns
xor
(bad)
push
rol
push
bound
jecxz
jecxz
fisubr
dec
pop
out
pop
inc
pslld
push
rcl
push
(bad)
repnz
loopne
push
or
ss
int
mov
mov
pusha
(bad)
cmps
fldcw
test
mov
loopne
rcr
daa
pop
aad
fcom
mov
push
cmp
adc
mov
xor
mov
cmp
add
cwde
cdq
sub
loop
xchg
jg
arpl
jns
icebp
or
jno
pop
add
pmuludq
clc
dec
pop
rdmsr
pop
stos
outs
pop
mov
jns
rsm
pop
adc
(bad)
mov
mov
mov
sbb
sbb
pusha
push
dec
leave
or
test
(bad)
push
dec
adc
clc
xlat
test
movs
mov
dec
mov
cmp
pusha
das
mov
jb
inc
ins
xchg
push
xchg
shr
sub
cmp
jecxz
pusha
repnz
push
mov
bound
rcl
jo
inc
jb
pusha
sub
dec
xchg
shl
jecxz
movs
xchg
lods
shl
xchg
out
enter
sub
pop
shr
(bad)
xchg
jp
retf
out
pusha
stos
or
and
adc
cmp
mov
neg
inc
and
inc
ror
or
pusha
sub
mov
and
fld
cwde
loop
sub
loope
mov
das
dec
dec
dec
inc
or
dec
sahf
or
mov
jl
int3
inc
jo
fsubp
pop
mov
push
push
aam
int3
iret
addr16
test
xchg
pop
xchg
js
mov
xchg
clc
sbb
push
push
ins
repz
push
outs
inc
out
and
test
shl
sub
in
inc
dec
inc
push
sub
sub
add
jb
(bad)
mov
ins
imul
or
rcl
imul
pop
fdiv
push
xor
mov
bound
jns
dec
enter
ret
pop
jno
sbb
adc
push
add
adc
aaa
cld
cmps
add
inc
inc
inc
cwde
mov
out
or
xchg
fnstsw
or
popf
push
out
sbb
adc
(bad)
enter
pop
sub
(bad)
xor
xor
pop
les
jmp
mov
out
test
daa
mov
xor
inc
ret
or
je
adc
punpcklwd
dec
add
ins
adc
test
push
fld
mov
xor
push
je
pop
popf
fisub
dec
movs
ret
add
pop
sbb
sti
push
adc
mov
and
pusha
cmc
push
inc
inc
push
test
mov
dec
mov
nop
(bad)
shr
mov
data16
sets
push
out
adc
ins
test
inc
jl
int3
dec
hlt
out
sar
push
push
push
push
push
add
add
imul
push
mov
push
(bad)
fidivr
call
cmp
add
xor
out
jns
xchg
shl
xor
or
or
xor
adc
je
adc
sbb
gs
ret
or
int
repnz
lods
aas
or
add
xchg
psllw
cwd
or
mulps
addr16
icebp
cmp
daa
mov
das
push
retf
stc
loop
cld
mov
pop
imul
aas
cmp
imul
add
xchg
loope
je
es
or
xor
cmc
adc
dec
dec
mov
cmc
ss
and
les
mov
push
retf
pop
outs
je
sub
adc
inc
std
test
nop
xchg
or
mov
add
les
xchg
inc
xchg
cmp
stc
les
push
mov
jp
add
addr16
data16
and
adc
push
push
repnz
pop
adc
push
add
xor
pop
clc
repnz
les
mov
inc
push
leave
add
icebp
jne
(bad)
cmp
fistp
rol
pop
push
inc
push
xchg
jns
push
adc
mov
sbb
bound
mov
cld
add
nop
xor
dec
lods
push
add
adc
inc
test
imul
mov
and
hlt
push
arpl
xchg
pop
adc
jmp
push
in
add
and
pop
xchg
or
adc
xor
lods
addr16
enter
pop
ins
inc
jo
sbb
jecxz
ins
inc
adc
dec
dec
add
or
aaa
fs
pushf
clc
and
in
or
xlat
pop
(bad)
fs
js
inc
mov
xor
mov
adc
or
(bad)
je
adc
jmp
xor
(bad)
cdq
mov
sbb
sbb
cwde
arpl
gs
movs
adc
dec
ins
adc
in
leave
ins
adc
test
aam
dec
les
push
pushf
or
and
sbb
push
mov
push
xchg
dec
loopne
sub
mov
ins
out
ja
out
movs
push
sbb
pusha
das
outs
pop
ret
les
call
dec
add
or
les
inc
add
jecxz
or
jmp
xor
adc
jns
cs
jp
push
(bad)
scas
int3
adc
ins
mov
pop
imul
dec
or
sub
xchg
retf
push
in
cwde
es
das
cmp
scas
cld
adc
pop
sbb
dec
sbb
sbb
sbb
push
sub
push
adc
xchg
sbb
xor
push
repnz
ret
push
jo
out
or
push
jns
ror
xor
mov
enter
mov
je
sub
xchg
mov
inc
or
inc
cs
pop
bound
(bad)
outs
lea
pop
ds
test
stc
outs
mov
jo
jo
repnz
jo
cld
jo
jno
repnz
jno
jno
jb
adc
loopne
add
sub
or
nop
jb
fldenv
push
cs
ss
inc
nop
jb
cmp
adc
and
and
push
sbb
nop
jb
push
jb
mov
nop
jb
adc
test
push
nop
jb
mov
sub
fs
jl
adc
and
mov
jb
cmp
mov
push
leave
mov
in
sbb
nop
jb
push
enter
mov
xchg
pop
adc
push
push
or
xchg
mov
xor
push
push
dec
inc
pop
push
jmp
ja
inc
ins
jo
push
outs
addr16
dec
jo
addr16
inc
imul
push
dec
push
push
adc
repnz
add
test
call
je
ja
inc
inc
mov
jmp
repnz
inc
and
fs
and
and
pop
push
js
out
add
mov
js
push
test
ins
fbld
(bad)
call
push
lock
inc
fimul
lods
lock
push
movs
adc
sub
out
adc
pop
xor
sub
fcomp
xchg
mov
nop
arpl
ret
pop
cmp
pop
xor
xor
mov
inc
add
mov
push
jns
xchg
mov
inc
xchg
dec
xor
xor
pop
add
adc
jne
loopne
cld
add
jne
sub
xchg
sbb
or
bndldx
cmp
cld
jbe
nop
push
jb
and
jbe
and
jbe
pop
and
test
jns
jbe
add
ja
add
pop
imul
cld
jbe
sub
adc
pop
add
sub
xchg
int
aas
ja
or
aaa
cmp
adc
test
fwait
mov
dec
mov
dec
mov
push
add
add
mov
ret
idiv
outs
iret
xor
je
imul
mov
and
push
sub
shl
jnp
jle
adc
add
lods
add
in
retf
ror
mov
pushf
add
icebp
inc
and
sbb
mov
(bad)
js
jns
pop
call
jne
popa
pop
pop
mov
shl
mov
mov
dec
lods
loopne
mov
mov
fdivr
out
ss
sbb
and
push
int
in
into
sar
jge
outs
inc
mov
fs
movs
cmp
xor
push
xchg
jg
and
xchg
daa
or
and
repz
pop
or
add
mov
xlat
mov
ret
push
pop
clc
jg
dec
jle
gs
jnp
push
or
test
adc
pop
(bad)
pop
daa
mov
rcr
sub
(bad)
jnp
xchg
push
test
ja
adc
ret
push
shl
into
add
iret
pop
xor
or
imul
mov
push
shl
add
jne
ret
call
aam
mov
(bad)
shr
or
inc
add
fdivr
add
in
pop
sub
and
fstp
add
mov
inc
adc
push
push
add
retf
add
mov
add
adc
sub
loop
je
neg
mov
adc
push
cmp
jne
ret
dec
ins
mov
add
test
out
mov
mov
je
pop
jne
cmp
xor
ins
sbb
sbb
adc
or
mov
pop
dec
dec
push
adc
loopne
cwde
popa
add
call
mov
xchg
push
sti
pusha
ss
shl
add
and
dec
sbb
sub
in
call
xor
pop
rcl
mov
dec
xchg
or
rol
std
sub
pop
add
hlt
xor
sbb
dec
adc
jmp
mov
add
xchg
fcmovnb
pop
call
call
push
cmp
test
adc
(bad)
retf
xchg
mov
xchg
nop
movs
jb
imul
xchg
add
adc
bound
aad
imul
or
cdq
ins
daa
xor
mov
je
mov
adc
movs
pop
or
ret
adc
add
add
rcr
js
jo
add
xor
adc
jmp
lea
xlat
call
jg
hlt
inc
push
aas
inc
push
cmp
fidiv
icebp
call
pop
ret
addr16
stos
xor
jne
add
xor
pop
cld
push
nop
jmp
or
sbb
cmp
inc
stos
nop
adc
add
add
push
enter
ret
push
call
mov
push
mov
std
retf
mov
(bad)
jnp
mov
push
jg
mov
xor
ret
pop
sbb
retf
movs
add
sub
icebp
dec
test
or
mov
int
add
push
sub
and
inc
fwait
xor
ret
push
mov
stc
dec
or
sbb
xchg
push
push
add
pop
sub
adc
xchg
lahf
and
(bad)
adc
dec
mov
xchg
push
mov
push
jmp
sub
push
push
push
pop
dec
mov
push
shr
enter
push
scas
fcom
lahf
pop
mov
adc
out
inc
add
push
push
aaa
dec
add
push
ins
jo
mov
mov
dec
cmp
inc
inc
xor
shr
call
mov
outs
dec
cmp
xor
dec
ret
imul
dec
nop
dec
pcmpeqb
mov
sti
scas
push
ds
sbb
push
xor
dec
idiv
or
scas
popf
mov
ret
mov
adc
mov
ss
cmp
inc
ss
cs
mov
cli
iret
or
dec
dec
dec
pop
repnz
pop
adc
in
or
ja
add
das
or
lds
cmp
ins
mov
and
push
mov
loope
pop
cs
inc
push
movs
cmp
xchg
cli
xchg
cld
or
add
dec
or
pop
mov
mov
add
adc
mov
xchg
inc
or
push
rcr
mov
movs
or
into
fcom
jl
xchg
xor
adc
cld
je
and
jmp
or
adc
cld
out
add
or
add
add
mov
push
mov
adc
inc
inc
inc
call
adc
test
(bad)
mov
jmp
add
jle
call
inc
lea
xor
add
push
(bad)
add
aas
jo
mov
loope
xchg
adc
scas
adc
ins
inc
mov
test
push
lahf
enter
fstp
popf
arpl
pop
das
adc
leave
inc
dec
push
xor
add
sbb
cli
fld
jne
jo
push
mov
dec
xchg
jo
jne
cld
sub
add
stos
nop
sbb
inc
adc
call
cli
xlat
mov
mov
cwde
add
dec
xor
retf
scas
ficom
pop
or
push
sbb
pop
mov
add
mov
outs
or
push
mov
dec
test
rcr
(bad)
or
xchg
scas
add
inc
movs
adc
push
adc
ficom
imul
stc
dec
dec
jae
lahf
pop
stos
xor
mov
sbb
add
inc
add
jnp
frstor
mov
nop
xor
adc
mov
sbb
mov
sahf
stos
lods
sbb
je
and
adc
or
inc
aad
push
out
cmp
test
sbb
and
cmps
movs
xor
mov
and
enter
in
cmp
jp
iret
mov
add
adc
inc
cmp
and
and
pop
mov
clc
mov
pop
cmp
ret
neg
sbb
ins
adc
add
sbb
out
mov
sub
ror
cmp
push
mov
mov
cwde
sbb
dec
or
add
or
add
add
inc
and
mov
mov
inc
push
add
ret
lds
pop
pop
dec
and
xor
push
inc
setb
and
jo
jae
outs
or
test
ss
inc
or
mov
test
(bad)
mov
bound
js
mov
xchg
mov
daa
inc
sahf
or
repnz
scas
daa
clc
jae
xchg
cmps
inc
add
jns
adc
add
add
inc
pop
sub
rol
wrmsr
jge
dec
push
pop
xchg
and
lods
shr
sbb
xchg
or
adc
test
push
or
pop
xchg
es
lock
aas
xor
outs
xlat
jnp
push
xor
neg
test
js
and
sbb
lock
outs
ins
mov
jg
xor
and
push
pop
ret
jge
cmp
adc
and
test
mov
imul
ins
lahf
pop
adc
or
adc
push
outs
jnp
sbb
fidivr
jne
xor
xchg
pop
xchg
dec
sbb
xchg
sar
lea
and
pop
stc
sbb
movs
xchg
dec
in
mov
pop
jmp
repz
and
sub
adc
jmp
mov
push
sbb
inc
and
push
mov
rol
inc
inc
push
fstp
pop
jo
jl
jle
pushf
adc
mul
pop
xor
mov
push
push
mov
mov
xchg
loop
mov
push
or
xor
or
mov
push
(bad)
call
push
and
ins
pop
ret
dec
dec
adc
gs
pop
sbb
xor
jl
sub
cs
dec
movs
push
test
xlat
enter
sub
test
xor
movs
inc
test
add
jg
mov
nop
mov
nop
push
loope
sub
adc
mov
enter
mov
sbb
popa
xchg
test
pusha
and
sbb
adc
pop
pop
add
test
or
test
push
lahf
ds
adc
mov
adc
sbb
jle
pop
xchg
push
ror
mov
mov
popf
or
mov
jmp
mov
lock
and
ja
pop
repnz
sub
and
push
xchg
inc
scas
sbb
mov
jmp
xchg
inc
fdiv
jns
je
inc
mov
or
jl
sbb
push
xor
mov
xchg
xor
xchg
mov
inc
adc
push
arpl
in
call
in
and
std
call
jmp
ins
add
mov
stos
fld
inc
add
push
cs
scas
outs
outs
mov
xchg
sub
jp
or
je
pop
cs
jb
xchg
mov
push
inc
inc
ret
outs
inc
repnz
inc
pop
dec
repnz
es
xchg
test
xchg
jg
fcom
mov
cmp
cmp
jmp
push
mov
push
in
cmps
sbb
add
mov
lods
mov
adc
jp
and
sub
xor
sub
jne
fwait
pop
iret
pop
call
shr
xor
xchg
pop
jl
test
inc
mov
xchg
cmp
jo
dec
add
mov
imul
sub
ins
loop
adc
and
push
adc
popf
sub
(bad)
in
call
sbb
test
dec
or
outs
adc
inc
sahf
push
and
fiadd
xor
or
js
push
fwait
inc
sbb
shl
sbb
popa
repnz
mov
inc
mov
arpl
dec
xor
mov
daa
adc
pop
dec
or
add
rol
or
xor
xchg
aas
push
inc
xor
pushf
cmp
sbb
lea
dec
mov
xor
ins
or
push
or
cmp
adc
push
mov
jbe
(bad)
xchg
ret
push
loope
mov
jmp
or
dec
les
adc
movs
xchg
push
nop
hlt
fistp
xchg
mov
mov
pop
sub
xchg
cmp
psraw
xchg
imul
push
lods
das
and
xor
and
jg
push
sub
inc
mov
(bad)
jns
jle
inc
or
cmps
es
mov
inc
sub
jge
xchg
add
push
inc
in
cmp
cmp
xchg
enter
mov
mov
das
add
add
xlat
arpl
push
call
pop
inc
sbb
into
fwait
mov
mov
xchg
mov
inc
loop
pop
add
push
inc
dec
arpl
imul
sub
ret
pop
fiadd
adc
pop
sbb
mov
sbb
cmp
push
outs
and
mov
jo
xchg
scas
or
es
dec
lock
sbb
stos
xchg
dec
or
dec
aaa
imul
or
scas
xchg
add
sbb
lahf
call
sub
sbb
mov
leave
mov
arpl
sub
xchg
hlt
inc
test
sub
mov
sub
cmp
inc
hlt
jo
push
addr16
movs
sbb
or
and
je
fdiv
sub
fcom
mov
test
jmp
inc
and
sbb
out
cmp
rol
adc
xor
sbb
cmp
push
cs
mov
daa
mov
or
xchg
xor
call
push
fwait
dec
or
mov
pop
cdq
push
and
pusha
pop
or
pop
push
jge
adc
cmp
les
push
add
mov
inc
xor
push
ja
cs
adc
sbb
pop
retf
xchg
sub
stos
push
loopne
xchg
test
lods
add
mov
push
sar
cmp
mov
pusha
fld
inc
or
cmp
gs
add
pusha
cmp
mov
push
ja
or
add
fwait
push
push
sub
mov
cmp
repnz
push
mov
add
and
out
mov
pop
or
or
pop
movs
shl
push
sub
push
lods
js
push
push
ds
es
or
xor
xchg
(bad)
dec
test
and
ret
adc
aad
jg
cmp
sub
dec
pushf
inc
dec
(bad)
mov
inc
push
fbld
inc
sub
movs
and
lock
dec
neg
sbb
iret
cli
add
inc
add
rol
xor
sub
cs
add
xchg
nop
xchg
push
xchg
push
jb
adc
jo
sub
jns
rol
adc
out
das
cmp
adc
xchg
pusha
xor
pop
jno
in
sbb
sub
or
mov
daa
xchg
or
pop
inc
jb
jb
sahf
inc
pop
shr
and
sbb
or
test
add
inc
adc
data16
and
cmp
and
movq
add
repnz
mov
xor
mov
lahf
pop
sub
test
xchg
inc
jns
ja
pop
enter
sbb
rcl
sbb
dec
and
mov
nop
xchg
adc
adc
stos
clc
xchg
pushf
mov
scas
nop
adc
or
mov
fmul
sub
outs
inc
lahf
sbb
test
je
push
popa
xchg
pushf
test
sub
pop
popa
mul
lods
mov
xchg
sub
or
ss
xor
add
mov
ins
pop
mov
rol
push
sti
test
adc
ja
push
xor
addr16
stos
lock
ret
mov
rcr
jmp
in
dec
clc
stos
push
add
sbb
or
mov
inc
adc
retf
inc
sub
popf
dec
xor
or
xor
xchg
mov
les
jecxz
pop
dec
sub
test
mov
pop
xor
pusha
push
iret
mov
mov
xchg
(bad)
and
mov
rcl
pop
fidiv
xchg
dec
adc
aad
jecxz
das
cwde
test
je
cmp
popa
xchg
lods
xor
mov
or
jl
imul
bound
repnz
mov
and
sub
cmp
sub
(bad)
sub
pop
mov
and
in
sub
cmps
aaa
inc
pop
dec
adc
xor
loopne
mov
push
xchg
mov
daa
dec
and
add
sub
adc
sub
dec
out
stos
scas
mov
je
dec
mov
fs
lock
retf
in
ja
movs
pusha
jp
fs
int
push
inc
out
hlt
movs
iret
dec
jae
pusha
dec
dec
add
or
not
and
retf
shl
pusha
int
mov
ret
fs
iret
int3
mov
mov
and
ds
push
mov
dec
bnd
pop
mov
scas
dec
lock
add
push
mov
and
popw
xor
and
or
cmp
loope
sub
fdivrp
pusha
pop
cmp
shl
sbb
imul
cmp
je
test
inc
dec
clc
sbb
(bad)
xchg
pushf
lods
jle
ins
push
mov
loop
push
sub
pop
adc
push
sar
push
add
sbb
dec
or
icebp
jo
(bad)
in
lahf
xchg
add
enter
sbb
or
push
inc
jle
inc
fst
les
clc
in
fild
xchg
push
push
xor
jge
jle
adc
mov
or
push
xlat
push
adc
scas
sub
ss
add
inc
dec
pop
cmp
adc
ins
push
cmp
std
mov
add
in
stc
sti
mov
fs
shl
daa
in
sub
sbb
ret
xor
pop
cmp
retf
ret
xlat
pop
repnz
sub
(bad)
or
and
cld
nop
dec
adc
add
push
enter
std
and
ja
adc
sbb
movs
push
push
push
add
lahf
into
jl
pop
mov
adc
sbb
inc
aam
lea
push
jae
or
mov
add
bound
and
cmp
adc
or
hlt
push
fnstenv
adc
call
test
int3
push
push
ja
add
sbb
loopne
pop
gs
sub
pop
add
mov
mov
cs
dec
imul
mov
sbb
movs
xor
mov
ds
pop
push
je
sub
in
je
test
out
in
lock
aam
rcl
dec
rol
fsubr
call
rcl
call
jp
add
test
lea
out
rcr
mov
add
and
adc
rcr
add
dec
div
inc
shl
shl
sar
xor
xlat
fsubr
pop
adc
sbb
adc
push
or
mov
adc
lds
add
pusha
jl
cwde
js
sahf
adc
into
call
jl
add
les
sub
call
pushf
lods
mov
mov
push
dec
cmp
sbb
ss
xchg
lods
push
lea
or
adc
lock
cmps
xor
out
test
and
push
sub
mov
in
mov
es
pop
ror
inc
jo
cdq
ret
sbb
lock
retf
(bad)
das
inc
pop
sti
cmp
loopne
mov
mov
movs
mov
stos
dec
test
rcl
call
and
or
lds
add
minps
sbb
push
adc
sbb
mov
fdivp
sub
paddd
xor
push
dec
pop
add
dec
repz
add
mov
mov
adc
mov
inc
and
xchg
nop
loopne
clc
dec
add
sub
shl
mov
push
pop
pop
pop
pop
pop
test
push
inc
dec
jne
ret
mov
jge
adc
adc
adc
mov
inc
add
ret
mov
and
jnp
inc
add
mov
xor
pop
cmps
or
mov
js
xchg
jne
scas
into
jle
mov
enter
sbb
jns
jmp
push
xor
and
(bad)
mov
js
(bad)
mov
or
jmp
out
sti
data16
mov
jns
test
add
adc
adc
xchg
cld
push
add
aam
inc
repz
and
sbb
push
jge
push
aaa
imul
mov
jbe
aas
int3
cmp
cld
rol
jne
ds
test
std
imul
mov
inc
movzx
lea
jmp
push
(bad)
pop
movs
lea
push
cs
jmp
dec
shl
data16
in
or
mov
pop
aas
push
icebp
addr16
inc
jg
cmp
shl
clc
inc
cmp
push
scas
add
arpl
popa
fdivr
out
retf
icebp
inc
das
mov
mov
add
and
add
or
pop
scas
clc
dec
mov
inc
in
mov
mov
fnstenv
fld
push
or
and
pop
rcr
clc
aaa
or
sbb
cmp
dec
fstp
push
dec
and
dec
jmp
out
add
pop
sbb
mov
pushf
add
lds
cs
add
lock
xchg
sahf
push
xor
out
mul
and
xor
adc
adc
test
pop
and
dec
je
push
push
ja
xor
lods
sub
seto
push
and
jne
(bad)
stos
xchg
mov
pop
ss
mov
shr
fwait
js
mov
push
push
cmp
cmp
call
fild
pop
push
cs
call
push
mov
jl
or
sub
sbb
inc
retf
xchg
cdq
mov
rol
ficom
add
mov
pop
ja
push
lock
hlt
dec
dec
mov
add
cmp
mov
push
leave
sub
jno
add
sub
and
adc
jb
mov
adc
push
and
lock
push
addr16
popa
cld
add
xor
rol
add
in
lock
inc
shl
pusha
aaa
stos
or
add
push
adc
ror
push
and
or
leave
jmp
or
adc
xlat
and
ins
xchg
pop
sbb
sub
jmp
shl
cmp
adc
call
jne
int
cmps
jbe
call
mov
test
jo
or
and
sbb
push
adc
and
sbb
cld
jg
push
jo
xchg
cmp
inc
sbb
xchg
mov
push
mov
(bad)
xlat
sysret
rcl
ja
or
shl
ret
adc
xchg
(bad)
nop
cmp
dec
push
inc
pop
jmp
jmp
or
(bad)
push
rcr
pop
and
push
pop
add
outs
adc
sbb
sub
sahf
inc
add
mov
and
rol
ins
add
imul
xor
mov
test
retf
or
pushf
adc
push
mov
add
call
loopne
adc
xor
je
cmp
mov
ins
ret
ret
data16
jnp
in
sub
loopne
es
inc
lea
pushf
leave
jp
jns
dec
add
mov
pop
retf
test
add
mov
pop
popf
push
push
adc
lahf
lock
sti
cmp
cmp
cmp
popf
into
or
cmp
pushf
mov
neg
aam
push
dec
loopne
nop
mov
push
ins
xacquire
rcl
mov
pop
aam
mov
lea
xchg
cmp
ins
jmp
mov
mov
pushf
jmp
mov
ins
push
mov
ja
push
mov
and
enter
dec
xor
repz
xlat
mov
repz
push
mov
sahf
fs
mov
push
aas
adc
inc
mov
xor
mov
test
mov
push
add
push
cli
or
mov
loope
push
mov
sbb
aam
cmp
sub
jmp
xor
scas
push
rol
push
popf
out
sahf
push
or
or
add
sub
arpl
popa
mov
push
ins
repnz
push
push
retf
pop
je
(bad)
into
pop
(bad)
pop
jmp
mov
es
and
sub
mov
sbb
or
and
sub
and
and
adc
rol
ss
outs
imul
cmovs
push
jle
lock
jmp
mov
jo
sub
and
mov
jae
jmp
adc
pop
data16
dec
js
push
push
aad
(bad)
xlat
or
or
inc
and
inc
and
add
and
ins
iret
mov
dec
push
push
sub
retf
pop
stos
lods
mov
adc
xor
mov
mov
mov
mov
test
jl
out
ja
lock
imul
add
add
shr
adc
or
rcr
and
or
sbb
pop
movs
pop
mov
mov
cmps
inc
ror
mov
rol
(bad)
out
ss
ror
jno
xchg
push
jno
fidiv
pop
mov
pop
jo
in
adc
add
dec
push
jecxz
cmp
sbb
xchg
inc
push
jb
mov
hlt
hlt
sbb
(bad)
sub
xchg
push
adc
popf
test
aaa
xor
add
lods
movs
imul
push
sbb
fst
call
jg
ins
or
mov
pop
dec
(bad)
addr16
push
dec
push
call
or
sbb
and
fadd
rcr
hlt
loopne
cmp
cmp
push
loop
outs
push
mov
pop
pop
sub
loopne
or
push
xchg
push
add
mov
inc
pop
and
sub
add
adc
dec
jb
iret
or
xor
mov
out
in
push
add
push
lods
or
lahf
inc
daa
inc
lods
ret
lock
mov
mov
jle
push
jb
lods
mov
inc
sti
push
add
xchg
dec
hlt
lods
sbb
in
adc
push
push
push
es
cmp
int
xlat
shl
push
fcom
pop
daa
lock
int3
adc
push
popa
sub
das
pop
icebp
or
mov
iret
lods
add
push
out
sub
xor
enter
out
pop
dec
push
adc
daa
jg
ss
mov
cmp
mov
test
paddusb
ja
aam
adc
jo
stos
clc
mov
push
sub
call
(bad)
dec
mov
fist
xchg
inc
inc
aaa
movhps
jo
clc
cmc
mov
or
and
test
and
je
push
push
sub
inc
lods
in
loopne
dec
push
int3
jno
add
es
dec
sar
xor
xchg
push
(bad)
hlt
mov
jns
test
daa
retf
mov
or
cmp
or
jbe
(bad)
pop
cwde
push
es
or
jmp
aam
loopne
mov
mov
sbb
lahf
lock
mov
idiv
mov
xor
mov
es
sbb
or
adc
pusha
jecxz
(bad)
out
jnp
test
movs
shr
adc
pusha
push
mov
(bad)
ror
loopne
out
push
bound
jl
ret
xor
mov
cmp
pop
sbb
and
jne
(bad)
in
retf
or
leave
mov
lahf
invd
loopne
inc
and
loopne
inc
inc
jae
add
add
rol
add
test
dec
mov
xchg
pop
repnz
mov
xchg
repnz
sub
push
push
call
cmp
push
push
aas
fisub
lock
dec
ror
ret
xor
pop
or
test
lds
push
add
mov
inc
mov
inc
jae
adc
outs
aam
or
sbb
cs
adc
dec
les
les
inc
cs
inc
add
mul
leave
add
popf
or
pusha
jae
or
fcmovb
inc
and
xchg
add
push
xchg
cdq
test
push
jo
test
adc
push
test
shl
mov
daa
xchg
fist
rol
ins
inc
jae
sbb
mov
test
fistp
pop
mov
hlt
fwait
dec
rol
add
out
dec
add
mov
sbb
rcl
mov
mov
jle
daa
mov
mov
or
daa
stc
jb
shr
mov
mov
jae
mov
add
lock
dec
daa
stc
repnz
xlat
dec
fs
xchg
into
ret
enter
adc
and
lahf
cmp
stos
daa
shl
pusha
jecxz
pop
je
push
fwait
adc
xchg
mov
sbb
jo
clc
dec
push
cmps
or
inc
lock
add
adc
sbb
or
test
or
xchg
out
aaa
cmp
xchg
les
dec
or
push
jb
dec
sbb
adc
(bad)
or
jno
sbb
push
ret
push
das
js
sbb
test
and
les
shr
pop
outs
and
dec
sub
iret
xor
pop
inc
push
and
dec
loope
call
inc
pop
mov
out
dec
and
push
rcr
retf
(bad)
les
inc
fbstp
in
jo
push
dec
(bad)
or
pop
jo
fnsave
pop
je
xchg
adc
cld
adc
adc
push
lds
pop
add
out
mov
xor
or
retf
pop
lds
mov
inc
fucom
adc
ins
and
call
mov
retf
cmp
adc
popa
fwait
mov
xchg
pop
call
(bad)
or
popf
ss
mov
mov
stc
add
ins
inc
or
xor
and
ins
aam
mov
jl
adc
and
add
call
movs
mov
xchg
mov
jmp
xor
and
sbb
mov
xor
mov
or
push
loopne
ret
movs
dec
repz
not
enter
or
dec
int3
std
dec
dec
and
aam
pop
mov
jle
je
and
and
stc
sub
adc
sub
or
in
adc
mov
cmp
adc
adc
sbb
xchg
mov
aad
movs
sbb
addr16
call
stc
mov
add
and
loopne
or
jne
movups
movs
lahf
test
sub
mov
pop
sub
jl
xor
jp
jae
dec
fist
xchg
enter
mov
push
sub
das
add
push
adc
retf
gs
mov
xor
daa
or
dec
addr16
(bad)
(bad)
push
es
(bad)
leave
ror
rcr
nop
xchg
mov
inc
or
xchg
adc
loope
retf
mov
mov
jo
call
inc
cs
adc
add
je
add
(bad)
and
or
stos
lea
test
inc
and
and
mov
xor
and
xor
aaa
sub
push
add
adc
or
mov
add
mov
dec
in
dec
add
or
sub
mov
pop
xor
and
sar
push
add
cdq
or
add
or
jns
sbb
xchg
sbb
push
or
sub
add
mov
sahf
aaa
xchg
and
nop
arpl
fcomp
mov
add
sbb
mov
xchg
adc
pop
out
shl
xchg
ror
xchg
sub
or
mov
mov
mov
retf
out
mov
cmp
ret
ds
add
dec
enter
repnz
iret
pusha
xchg
mov
push
daa
inc
or
sti
sub
popa
jg
push
mov
mov
or
pop
jl
or
xchg
lods
or
repnz
xchg
add
push
jne
div
mov
push
fcom
xor
dec
mov
push
sub
in
inc
sub
or
sbb
sbb
mov
test
sbb
or
pop
sbb
test
sub
loope
adc
ins
push
sub
xchg
push
inc
loop
test
and
xchg
retf
sbb
sbb
out
(bad)
enter
pop
adc
movs
test
rcl
xor
adc
in
push
das
xor
inc
or
sbb
mul
adc
ret
push
call
retf
mov
jmp
xchg
mov
inc
mov
clc
xchg
test
sbb
push
xchg
dec
add
jne
mov
add
pop
xchg
iret
lahf
in
test
in
rcr
push
sbb
(bad)
das
out
dec
mov
aaa
ja
fbld
and
dec
rol
(bad)
loope
add
and
xor
mov
ror
scas
test
mov
inc
push
pop
popa
jmp
sub
inc
rcl
inc
pop
mov
pop
pop
out
add
adc
rol
nop
(bad)
das
xlat
pop
push
lahf
out
xchg
stos
mov
push
mov
hlt
push
cmps
push
or
inc
add
push
daa
jmp
dec
popa
add
pminub
push
jo
scas
cmps
and
xchg
inc
push
js
nop
mov
mov
(bad)
fimul
rol
push
or
div
add
sub
movs
push
fld
adc
adc
cmps
fimul
pop
jbe
sbb
mov
hlt
aas
sbb
retf
inc
and
push
and
sbb
cmps
call
dec
dec
addr16
shr
mov
test
iret
dec
push
nop
cmps
fwait
ret
jmp
lods
xor
in
push
dec
add
ins
sub
ins
sub
scas
imul
int
add
sub
shl
mov
(bad)
iret
sbb
int
mov
push
inc
mov
xor
ret
mov
dec
xor
mov
cmp
rcl
sbb
add
bound
(bad)
in
js
test
push
aam
xor
dec
sar
adc
adc
push
xchg
jne
pop
fbld
xor
clc
popa
dec
loopne
push
lock
dec
clc
loopne
add
sbb
pop
or
movlps
sub
mov
cmp
ja
out
push
mov
mov
shl
loopne
and
jo
sbb
adc
test
mov
add
mov
cmp
ficom
push
or
pop
(bad)
rol
lock
jmp
xor
and
or
xor
mov
inc
dec
ds
shl
das
rol
inc
sub
push
inc
mov
and
and
or
and
int3
or
mov
shl
imul
adc
js
mov
xor
mov
inc
sub
inc
sub
adc
xchg
popa
sub
pop
(bad)
es
xor
add
jmp
jge
cmp
adc
test
inc
and
or
adc
pop
jbe
lock
popa
loopne
sbb
push
mov
push
je
(bad)
xor
sbb
push
cmp
in
inc
outs
call
or
shl
(bad)
dec
adc
lods
adc
pop
xor
push
mov
adc
lods
sbb
ficom
aaa
dec
hlt
adc
sbb
not
clc
rcl
pop
adc
xchg
mov
outs
inc
xchg
push
push
fild
push
mov
cdq
cmp
fs
cmps
in
dec
mov
add
dec
sbb
lea
dec
and
xchg
fs
nop
aam
sub
sub
fild
xchg
mov
scas
or
xchg
das
jne
mov
sti
adc
mov
data16
adc
ret
push
mov
jmp
push
push
and
cmp
push
adc
jb
jg
jmp
push
sub
ins
pop
xlat
inc
jnp
push
adc
movzx
int3
push
loope
dec
mov
cmps
adc
or
ret
adc
dec
(bad)
fcomp
dec
loop
not
dec
je
cmp
dec
push
and
mov
rol
inc
and
ss
xor
fsubr
mov
jbe
xchg
sub
pop
jae
nop
add
dec
sub
pop
enter
(bad)
xlat
imul
pop
retf
retf
sbb
or
push
sbb
aaa
retf
pusha
or
xor
pop
and
fistp
sub
add
sti
xor
sbb
test
add
out
imul
jbe
(bad)
daa
cmp
jle
ror
jmp
pusha
mov
jo
ret
leave
lods
nop
mov
add
cmp
je
enter
jo
jge
ins
jae
xor
mov
lock
jecxz
in
fisttp
scas
inc
lods
data16
ret
add
aaa
call
mov
nop
mov
sbb
imul
sbb
mov
and
out
xor
and
and
(bad)
push
or
or
xlat
int
call
pusha
inc
adc
shl
ins
clc
ret
inc
je
hlt
rcr
test
pusha
dec
aad
adc
in
retfw
nop
xchg
in
in
pusha
add
mov
movsx
pusha
sbb
push
in
ret
cmp
out
int3
sbb
rcr
sbb
rcr
and
fdivr
or
js
xchg
and
popf
call
and
int3
ins
pop
fist
xchg
mov
or
inc
shl
add
fcom
and
movs
clc
xchg
mov
push
ss
add
das
(bad)
inc
mov
out
xor
lods
sar
and
xor
push
and
lods
mov
aam
icebp
sub
aaa
push
xchg
popf
xchg
cmp
sub
pusha
icebp
push
add
inc
addr16
arpl
es
loopne
cmps
je
add
inc
cmp
je
shl
mov
in
push
xchg
add
dec
retf
xlat
adc
push
call
push
pop
rcr
mov
sub
mov
sbb
out
mov
sub
addr16
sbb
adc
sbb
stos
dec
mov
push
jle
rcr
pop
dec
inc
js
inc
push
inc
xor
cmp
test
popa
fidivr
pop
push
mov
push
pop
inc
push
pop
fs
or
ins
mov
pop
dec
inc
aaa
in
sbb
dec
mov
pushf
pop
add
mov
and
rcl
mov
and
push
je
out
shl
sbb
or
or
and
and
push
mov
scas
nop
inc
inc
push
jmp
mov
scas
mov
ins
jle
jmp
test
jne
pop
sbb
adc
or
movs
pusha
add
jne
xlat
or
clc
js
cli
or
clc
pusha
clc
jle
in
add
movs
dec
mov
or
loopne
jo
adc
adc
imul
xor
or
sbb
pusha
adc
mov
or
pop
pop
xchg
or
popf
adc
adc
xchg
xor
and
add
lods
or
stos
loope
pop
and
sub
mov
lahf
sub
and
stos
pop
loop
inc
adc
rcl
pop
adc
in
rol
fld
ret
jge
or
cmp
ins
push
clc
movs
dec
rol
fcomp
test
loope
ret
sbb
je
pop
mov
mov
inc
adc
inc
push
mov
or
mov
and
stc
aaa
sub
xor
mov
pop
test
xchg
push
insertq
call
pop
push
lock
pop
or
xor
ret
clc
and
lods
cmp
cmp
xor
push
adc
outs
cld
sbb
arpl
test
and
mov
push
xor
adc
test
test
sbb
jge
mov
mov
pop
sbb
inc
loop
lea
xor
and
mov
add
fs
scas
pop
outs
sbb
retf
out
pop
(bad)
fcomp
test
rol
fs
pop
stc
(bad)
sbb
mov
jmp
push
adc
or
and
loopne
mov
in
imul
xlat
and
mov
clc
das
and
ins
push
mov
sbb
rol
fs
daa
xchg
mov
rol
pop
mov
and
ins
sub
or
and
push
sbb
inc
push
out
and
loop
push
ins
xor
aaa
add
mov
inc
and
jl
pop
in
and
inc
xor
call
outs
add
or
lods
cwde
sub
mov
add
mul
test
aaa
mov
cwde
aas
cmps
cmp
jl
sti
sbb
push
push
ret
or
and
or
inc
sub
popa
push
pop
out
jne
dec
pop
sbb
scas
inc
ins
jnp
mov
fld
adc
fisub
add
out
(bad)
pop
adc
es
push
pop
mov
xor
mov
push
or
in
dec
cli
fcmovbe
pop
pop
retf
or
unpcklps
adc
outs
mov
fdiv
out
adc
pushf
lahf
cmp
sub
(bad)
cmp
or
out
test
pusha
punpckhdq
xor
pop
cmp
or
popf
push
xor
loope
and
mov
fisttp
push
dec
sahf
pop
rcl
(bad)
jmp
add
bnd
add
jp
cmp
and
pop
aaa
hlt
pop
pop
sbb
or
push
cli
or
lea
inc
rcl
adc
cs
pop
aam
mov
pop
jo
adc
push
jmp
leave
mov
jmp
add
addr16
call
add
mov
xchg
xchg
adc
sub
bound
out
mov
mov
jnp
fs
jl
mov
lea
test
mov
xchg
and
fnstsw
sbb
sbb
stc
adc
add
enter
ss
popa
adc
adc
and
rcr
xchg
inc
lock
and
jp
icebp
ins
jl
cmc
dec
mov
cld
lock
in
stc
inc
sub
xchg
xchg
sbb
inc
fsub
mov
inc
pop
scas
xlat
idiv
je
cmp
mov
jne
adc
cli
adc
mov
sub
jb
loopne
dec
mov
sbb
out
mov
and
add
add
push
cmp
dec
pop
cmp
sahf
je
adc
and
repz
sbb
mov
sbb
sub
or
cmc
add
outs
and
nop
(bad)
sbb
xchg
into
inc
cmp
or
sbb
pop
mov
cmp
imul
and
push
sub
jmp
jae
or
aam
jmp
or
jecxz
jge
pop
sub
add
movs
je
retf
cmps
sbb
xor
fisttp
pop
mov
psllq
mov
div
add
sub
outs
or
and
lahf
and
mov
fdiv
and
mov
out
and
cli
pop
xchg
loopne
adc
jnp
shl
push
and
lods
ss
fild
jo
int3
sub
push
mov
sub
js
(bad)
adc
add
push
xor
fidivr
mov
div
std
mov
and
fdivr
cmps
hlt
cmp
imul
lods
mov
jbe
je
scas
clc
loopne
xchg
dec
sub
inc
cmp
xchg
and
and
jns
imul
in
shl
cmp
xchg
mov
daa
and
push
adc
jbe
push
fisttp
or
push
ss
pop
add
inc
nop
mov
pop
ret
xchg
push
lods
fadd
jne
ins
xchg
daa
inc
cmp
jne
scas
jbe
xchg
aaa
test
pop
dec
add
sahf
or
sub
sbb
out
fsubr
lods
js
cmp
mov
movs
fwait
pushf
inc
gs
sbb
jmp
pop
mov
(bad)
xchg
mov
adc
jmp
mov
push
dec
out
stos
imul
dec
push
mov
add
pop
out
ins
sbb
sub
pop
in
test
push
in
popa
bound
scas
sbb
pop
mov
int3
jge
jle
inc
imul
in
and
pop
and
add
and
inc
call
dec
repz
loope
ds
dec
jp
scas
loope
lock
loopne
push
ret
inc
fcom
add
js
adc
push
ror
mov
and
pusha
add
push
sti
push
inc
sahf
inc
and
loopne
fcom
xor
xchg
pop
out
mov
push
sub
ror
(bad)
(bad)
and
data16
fdivr
xor
ret
add
mov
add
mov
iret
and
xor
mov
test
test
pop
xor
and
rol
and
jne
xchg
gs
dec
xlat
sub
xchg
ds
enter
(bad)
pop
dec
fild
push
push
loopne
rol
(bad)
rcl
test
mov
push
popa
inc
cwde
bswap
xchg
adc
stc
add
adc
lock
mov
pop
jne
push
addr16
fs
mov
leave
hlt
mov
adc
out
add
mov
or
fist
add
lfs
jmp
out
push
lock
aad
lock
stos
pop
add
imul
stos
cmps
test
ja
pop
hlt
mov
xor
pop
inc
js
in
push
aas
into
mov
cmps
ror
push
lea
aaa
leave
ss
ret
or
adc
loopne
sbb
inc
cmp
mov
popa
addr16
sbb
cmp
sub
push
xor
xlat
ret
lds
repnz
add
inc
iret
test
js
and
shr
inc
lods
adc
scas
push
pop
mov
xor
sub
popa
fimul
lods
push
ins
or
and
jl
jns
xor
cmp
loopne
out
test
push
xchg
push
movs
and
div
adc
out
pushf
dec
jae
add
sti
inc
lods
pop
dec
push
lods
and
adc
dec
mov
and
and
movs
jae
adc
mov
stos
xchg
adc
leave
push
mov
push
ds
inc
pop
pop
or
ficom
sahf
cmps
xchg
std
(bad)
imul
mov
mov
icebp
lods
adc
arpl
or
xchg
and
ficomp
mov
or
pusha
(bad)
sbb
rcr
push
or
in
pop
add
call
xor
inc
or
push
mov
push
pop
inc
mov
pusha
mov
push
nop
in
push
mov
xor
push
pop
jecxz
cwde
loopne
sbb
jmp
cmc
push
lahf
je
push
dec
out
hlt
pop
pop
loopne
dec
test
imul
or
mov
dec
and
sbb
jo
cmp
add
arpl
hlt
push
sbb
mov
jmp
ss
sub
dec
in
scas
sar
ret
push
add
mov
sbb
or
adc
jmp
(bad)
xor
push
jnp
dec
loope
jmp
lea
and
leave
repz
stc
movs
cli
dec
push
pop
call
movs
stc
lahf
jmp
scas
ds
mov
sub
and
sub
add
fwait
retfw
fs
pop
call
cwde
shl
neg
(bad)
add
ins
cli
fwait
mov
cmp
sbb
mov
jno
inc
fwait
dec
cmp
push
loope
jmp
add
pop
jle
(bad)
jmp
add
test
test
inc
jmp
xor
test
fstp
call
into
clc
fwait
call
(bad)
push
inc
jb
push
pusha
std
dec
add
add
sbb
in
cld
sub
hlt
sub
je
and
enter
dec
lds
push
dec
mov
dec
ja
std
add
inc
or
movs
adc
aas
lock
enter
add
test
cmp
jo
loopne
jp
add
das
test
or
ds
push
sbb
mov
adc
movs
mov
xor
xchg
add
ins
mov
(bad)
sbb
cmp
sbb
and
jl
test
xor
fistp
sub
adc
fadd
inc
dec
std
sub
pop
jbe
(bad)
dec
adc
xor
or
cmp
mov
out
das
push
or
loop
scas
ss
or
pop
inc
push
xor
loope
ins
dec
or
add
mov
inc
shl
cli
das
out
or
adc
xor
add
adc
pop
adc
es
mov
mov
pusha
cmp
mov
aaa
jbe
push
sbb
cld
add
adc
push
jmp
mov
je
jmp
sub
je
or
cmp
add
xor
xor
adc
jmp
lods
push
jmp
mov
jmp
cmp
xchg
mov
jmp
mov
or
sbb
mov
xor
call
imul
call
and
jge
jl
mov
sub
lahf
dec
jmp
sub
adc
or
inc
lods
or
cmp
in
out
add
mul
jp
call
sbb
xor
inc
js
mov
lods
test
mov
ror
ins
sbb
or
cmp
mov
push
cmp
lods
cmp
test
mov
daa
mov
ds
daa
mov
add
cld
lahf
or
mov
add
cmp
ja
or
or
jg
movs
imul
ds
rcr
adc
add
sbb
add
add
dec
add
push
sub
push
xor
mov
add
and
jg
pop
xor
or
jne
psrld
inc
dec
push
cmp
stc
jg
push
or
out
in
or
daa
lods
sub
push
call
cmp
sub
jae
cwde
inc
shr
pop
ret
dec
mov
adc
xchg
mov
js
xchg
sbb
pop
(bad)
push
mov
cdq
je
mov
pop
addr16
cmp
jo
sub
sbb
rcl
ins
dec
jb
imul
mov
sub
sbb
in
jp
adc
dec
stos
push
ja
dec
inc
shr
imul
fsubr
push
pop
pop
sub
and
aaa
in
add
sar
outs
pop
lods
pop
imul
fiadd
cmp
gs
add
sub
xchg
dec
ins
adc
mov
add
push
add
pop
and
mov
push
add
add
sbb
mov
adc
xor
mov
add
mov
sub
loop
rol
imul
movs
dec
mov
popf
pop
cmp
shr
test
adc
mov
xor
shl
fild
mov
xchg
jae
sub
pop
dec
movs
(bad)
dec
mov
push
pop
add
xchg
dec
in
loopne
cmp
push
iret
inc
pop
ficom
adc
adc
mov
jmp
xchg
and
adc
dec
cdq
inc
inc
lahf
or
sub
ss
daa
iret
push
inc
jbe
sbb
adc
sub
push
sbb
imul
push
add
fcmovnb
mov
outs
sar
jo
and
or
cdq
mov
push
jmp
pusha
add
inc
xor
fwait
inc
pusha
inc
in
xlat
loop
or
xor
adc
stos
lods
lods
call
and
rcl
add
imul
call
fbstp
(bad)
jmp
push
mov
je
and
pop
std
add
pop
test
cdq
push
test
jmp
rcr
enter
xor
push
inc
movs
push
enter
es
push
cmps
sub
sub
in
mov
or
jmp
adc
add
cs
or
dec
popa
fcom
dec
mov
in
add
ins
sub
mov
inc
xchg
push
dec
sbb
jbe
sub
add
pop
push
cs
xor
add
pop
popa
xor
pop
mov
pop
popa
fcomp
cmovnp
sbb
lds
fs
outs
mov
jae
test
or
add
mov
xchg
movs
mov
xchg
mov
mov
jne
add
fs
push
xchg
fs
sbb
or
dec
cmc
mov
lea
push
or
mov
ror
push
movs
aas
sbb
sti
xor
pop
mov
or
or
pushw
sbb
push
sub
pop
stc
(bad)
test
push
call
arpl
ds
adc
clc
add
in
push
push
sub
pop
cwde
or
(bad)
out
and
and
push
data16
and
dec
leave
test
test
dec
xchg
sti
xor
jl
push
jnp
and
pop
pop
test
pop
daa
daa
(bad)
xchg
retf
xor
aas
mov
(bad)
neg
mov
sbb
fucom
cmp
out
xor
push
into
dec
or
xor
pop
mov
jne
ror
dec
outs
ror
sbb
pop
sbb
sbb
ds
lods
add
shl
int
sar
fs
jae
mov
add
cmp
inc
jbe
mov
xchg
das
in
les
or
ins
imul
cs
jbe
lock
out
in
or
dec
pushf
test
hlt
push
adc
adc
mov
sahf
or
mov
xor
or
ds
dec
sub
adc
sub
mov
sub
xchg
sub
xor
dec
mov
add
pop
int3
add
and
xchg
or
or
push
push
rcl
arpl
retf
sbb
jns
and
push
add
ins
movs
int3
int3
fbld
or
(bad)
sbb
pop
enter
cmp
adc
loope
sub
jmp
mov
cmp
or
leave
nop
mov
bound
xchg
in
push
mov
mov
shl
jmp
shr
jbe
out
inc
mov
jne
xor
and
xchg
fs
and
adc
rcr
ins
bound
sbb
and
mov
pop
and
lods
xchg
mov
push
mov
push
arpl
push
and
je
dec
inc
fsub
or
pop
cmp
mov
mov
pop
add
xchg
or
and
enter
and
std
push
add
push
sub
jmp
add
mov
cmp
stos
mov
aad
je
pop
(bad)
xchg
xchg
adc
sar
cdq
or
pop
jb
(bad)
dec
and
add
mov
pop
sbb
scas
adc
pop
mov
ror
xor
dec
xchg
cmp
mov
pop
cld
fadd
lods
sub
and
fmul
fnstsw
pusha
add
cmp
cmp
loopne
pop
mov
rol
mov
adc
call
imul
inc
add
(bad)
or
hlt
pop
cld
xchg
loop
fld
je
push
mov
movups
fdiv
lea
push
cs
jno
cwde
int
aam
ds
xchg
mov
(bad)
outs
sahf
jbe
adc
js
or
rol
lods
or
adc
or
in
inc
adc
mov
push
jecxz
and
inc
mov
and
retf
dec
push
and
cli
sar
sahf
ins
xor
popa
jle
xchg
retf
cmp
je
mov
adc
or
pop
add
sub
lods
jbe
xor
lea
es
mov
mov
scas
dec
push
push
and
push
pop
(bad)
lahf
movs
jnp
sbb
add
mov
dec
adc
and
xor
sbb
push
inc
js
aam
int3
ins
in
lock
adc
pop
punpcklwd
jl
dec
xor
cmp
adc
rol
push
cli
and
das
jp
dec
xor
sbb
inc
data16
iret
shl
dec
cdq
sbb
inc
lea
sub
xlat
fcmovbe
mov
movs
pop
adc
mov
xchg
jg
inc
dec
loopne
mov
adc
push
adc
js
adc
(bad)
mov
push
outs
sbb
cmps
adc
mov
sub
sub
daa
nop
rcr
push
movs
sbb
(bad)
rol
xchg
push
inc
dec
adc
es
pop
or
fs
add
retf
add
xor
dec
movs
push
inc
add
call
ja
jbe
jl
add
jmp
scas
enter
adc
das
clc
or
jo
sbb
mov
outs
or
dec
mov
and
or
jns
xor
jecxz
adc
sub
imul
sub
add
jmp
test
cmp
je
cmp
push
lahf
shl
mov
adc
mov
inc
sbb
add
mov
(bad)
setbe
je
movs
bswap
pop
mov
shr
adc
pop
call
and
jle
cmps
and
dec
add
loopne
fild
pop
aam
sbb
and
inc
pushf
inc
xchg
je
mov
xchg
push
add
inc
retf
fstp
bound
(bad)
mov
add
dec
pop
ins
xchg
jecxz
push
push
cmp
imul
and
enter
inc
adc
sub
dec
push
push
enter
jo
or
in
jno
cmp
mov
or
add
inc
xchg
sahf
ds
ja
mov
lock
cmp
sub
sub
outs
sub
cmc
jno
push
push
jo
push
sar
sub
inc
mov
or
sub
and
pop
inc
sub
xchg
xchg
push
fwait
out
or
sti
push
loop
aas
inc
push
int3
or
adc
add
ret
and
add
enter
cdq
mov
adc
out
loopne
dec
jbe
adc
push
push
pop
int3
sahf
mov
sbb
adc
adc
sub
cmps
jae
sbb
and
je
je
push
add
fsub
lods
or
or
push
and
sub
fsub
push
mov
rcl
or
cmp
(bad)
aad
sub
sub
sbb
ret
add
movs
std
push
push
xor
std
adc
adc
je
ss
jns
outs
ins
test
jno
mov
popa
and
sub
push
adc
sbb
fadd
nop
sub
push
jmp
or
retf
mov
mov
or
rol
je
pop
je
and
add
sub
adc
xor
sub
lahf
xor
push
nop
fnstenv
adc
gs
inc
push
or
call
ror
aam
stos
cmc
adc
pushf
iret
push
inc
xor
test
push
jp
sub
pop
cmp
add
ret
ret
push
add
test
inc
xbegin
js
jo
jne
cmp
je
dec
pusha
and
jo
cmc
jns
inc
mov
push
sbb
push
cwde
into
test
cmp
and
mov
movs
sbb
pop
les
push
xchg
gs
adc
xor
xchg
sbb
mov
fcom
inc
test
push
mov
jne
push
push
in
scas
mov
mov
loopne
add
inc
pop
mov
dec
push
wrmsr
out
sub
pop
push
pop
inc
ins
mov
adc
adc
push
dec
mov
mov
loopne
repz
fmul
fwait
sbb
loope
addr16
pop
in
mov
jmp
add
xor
pop
or
cld
push
shr
js
inc
mov
jne
mov
addr16
mov
mov
mov
cmp
and
push
add
dec
imul
aad
loope
retf
jb
sbb
daa
mov
leave
lock
mov
cdq
sbb
gs
cld
push
sti
sbb
lods
mov
aas
cmp
jne
aaa
mov
or
pop
jae
or
clc
xor
shl
push
ror
es
or
nop
into
pop
cmp
add
pop
shl
push
adc
fmul
lock
add
retf
xchg
push
mov
call
add
and
xor
call
or
mov
mov
mov
in
dec
(bad)
sbb
and
inc
test
addr16
or
push
push
sbb
cmp
inc
and
cwde
shr
xchg
mov
push
or
shr
xor
and
sub
jl
push
ficomp
adc
es
or
xor
adc
mov
sahf
push
cmp
pop
and
jecxz
cmp
inc
cmp
adc
cmpps
int
rcr
jnp
dec
scas
pop
cli
xchg
adc
lods
push
jnp
push
inc
inc
hlt
jne
xor
shr
inc
add
or
xchg
nop
mov
loopne
lock
mov
jae
and
stos
pop
push
and
dec
iret
mov
mov
sbb
sub
push
inc
aam
push
sub
bswap
sbb
inc
mov
mov
mov
daa
lods
fs
adc
sub
ret
sbb
xchg
or
sbb
xchg
rol
cmps
(bad)
in
add
add
inc
not
push
imul
xchg
lahf
popa
stos
in
adc
dec
pop
test
test
int
mov
xor
ins
inc
pop
cmp
setl
xchg
adc
sub
dec
adc
add
pop
add
lea
or
jmp
push
jmp
lds
aad
gs
add
inc
or
movs
sbb
jg
stos
inc
or
test
adc
adc
add
loop
adc
aaa
imul
inc
lods
rcl
push
rcl
xchg
mov
pop
push
jecxz
xchg
mov
push
arpl
nop
cmp
and
cmp
in
shl
divps
test
adc
cwde
add
jns
or
mov
push
dec
cs
or
ror
xchg
jns
add
xor
jmp
cmps
pop
pop
jnp
cmps
or
mov
cmp
fimul
retf
sub
inc
gs
xchg
adc
inc
test
adc
push
push
sub
imul
cmps
movs
push
jae
jp
and
std
shl
xchg
or
cmp
mov
stc
sbb
(bad)
push
push
sub
aad
xor
pusha
pop
adc
pop
adc
inc
rcl
jmp
jo
and
int
outs
shl
shl
pop
dec
jl
in
push
clc
js
push
(bad)
xchg
bound
inc
cmp
push
cmp
test
adc
or
xor
add
test
outs
push
out
add
xlat
dec
adc
xor
dec
jmp
or
je
or
mov
sar
cld
push
clc
adc
ins
fisttp
cmps
clc
loop
sub
sbb
mov
xchg
(bad)
mov
movs
ja
jo
mov
cmp
fcom
js
push
push
cld
xor
and
mov
jmp
cdq
pop
in
dec
mov
cmp
loopne
or
jae
push
push
xor
dec
add
out
inc
cmp
test
push
out
bound
cmp
xchg
bound
sbb
or
mov
mov
push
mov
push
cmp
pop
mov
xor
xlat
rcr
inc
sbb
and
ja
inc
dec
shl
cmp
xchg
fcmove
push
mov
cmps
lods
(bad)
dec
inc
xor
cmp
fldl2e
xor
and
inc
push
arpl
or
dec
test
sub
add
sub
pop
push
xor
mul
enter
sahf
imul
jb
dec
jns
xor
add
aad
inc
movs
gs
jnp
(bad)
cmps
loop
xor
cs
adc
repnz
es
sub
stc
movs
and
dec
mov
lahf
jge
xor
push
movs
mov
add
into
cmc
xchg
push
data16
clc
pop
idiv
push
les
movs
pop
test
movs
inc
idiv
xlat
xchg
and
pushf
xor
and
add
and
mov
cld
sbb
mov
scas
frstor
push
aad
or
scas
cmp
daa
push
xchg
inc
xchg
inc
inc
pop
fs
lock
loopne
push
popa
xchg
(bad)
inc
jge
cmp
xchg
inc
xor
dec
xor
jae
pusha
(bad)
cld
or
push
clc
add
jb
in
test
mov
int3
dec
rol
push
imul
push
loopne
sbb
xchg
add
or
xchg
sub
xchg
fdivr
cmc
mov
sub
add
xchg
cmp
xor
daa
push
mov
lahf
jbe
pop
push
cs
sub
dec
sbb
fwait
retf
leave
inc
inc
cmp
in
outs
aaa
jno
jnp
test
jbe
xor
push
shl
mov
sub
ss
ins
xor
mov
shr
sbb
push
cmp
clc
mov
cmp
aaa
and
fstp
sbb
mov
jnp
das
sbb
xchg
mov
repz
lea
call
cmp
xor
sub
push
xor
(bad)
in
stc
enter
sub
inc
mov
inc
in
inc
pop
sub
inc
pop
or
jo
mov
inc
test
jecxz
and
add
jl
xor
(bad)
mov
jns
xor
pop
aas
cld
pop
jp
imul
hlt
and
pop
mov
lea
fild
xor
inc
je
cmp
jmp
mov
int3
fisubr
add
pop
mov
jmp
mov
sub
add
xor
dec
rcl
jo
hlt
cmp
int
test
das
cmp
jmp
dec
inc
mov
and
cmp
ja
jg
jmp
mov
iret
loopne
add
inc
into
or
cmp
push
and
fiadd
in
or
xor
out
sub
inc
inc
call
adc
test
dec
or
xlat
mov
mov
jecxz
and
es
inc
add
test
adc
xor
inc
jbe
lods
inc
sub
hlt
mov
jl
cmp
or
mov
push
or
stos
cmps
add
add
sub
cdq
push
test
add
les
popa
jnp
add
xchg
push
push
add
ins
stos
inc
push
call
les
popf
sbb
mov
pop
imul
dec
loop
push
inc
fmul
pop
xor
jge
js
xor
mov
push
or
cmps
daa
aam
sub
pop
clc
call
(bad)
or
retf
mov
aam
lods
es
ret
test
jo
cmps
or
daa
pop
push
adc
sub
aam
mov
xor
cld
jno
gs
adc
popf
mov
push
in
(bad)
mov
aas
push
mov
int
mov
mov
xor
adc
push
jae
mov
and
dec
mov
mov
pop
adc
and
repnz
das
dec
ret
jl
push
mov
xor
aam
add
pop
ds
or
sbb
mov
dec
bswap
cwde
repz
loop
call
pop
push
mov
or
neg
pop
test
or
daa
aam
push
rol
dec
ret
(bad)
cli
nop
cmp
mov
dec
and
jge
mov
adc
or
dec
push
cmp
inc
andps
cdq
or
and
idiv
mov
push
dec
repz
retf
lods
imul
pop
or
jp
pop
jae
sbb
addr16
sbb
mov
bound
or
mul
ss
outs
das
jge
sbb
dec
bound
icebp
or
push
jne
adc
pop
sub
jmp
lods
sub
inc
push
xor
xor
mov
sub
mov
xchg
movs
cs
sub
jbe
and
push
pop
rcr
mov
in
and
mov
(bad)
xchg
jno
inc
imul
cdq
add
rcr
ins
xchg
add
add
mov
xor
sbb
das
dec
push
xor
inc
mov
push
ret
imul
add
pushf
fild
push
add
jns
adc
push
inc
ror
iret
push
cli
das
xor
dec
pusha
test
push
sub
js
xor
or
jecxz
mov
adc
mov
ins
pop
pusha
outs
sbb
and
dec
sub
fdivr
push
xor
mov
push
ret
lds
fdiv
dec
sub
pop
jo
arpl
sub
ret
push
cmp
pop
enter
xor
push
or
pop
dec
loop
mov
mov
(bad)
push
adc
mov
adc
rcl
dec
jle
sbb
xor
adc
in
mov
aam
sub
and
stos
or
fwait
mov
jge
pushf
rcl
cli
or
adc
shl
pop
mov
and
popa
lds
or
es
adc
or
scas
mov
xor
sub
cmp
pop
or
or
sub
xor
not
ror
and
retf
(bad)
sub
lods
and
add
inc
and
sbb
inc
cli
adc
and
mov
jg
xor
and
sti
or
inc
cmp
shl
jo
mov
daa
ja
pop
push
inc
hlt
repz
sub
ds
mov
jno
xor
mov
xlat
xor
dec
div
mov
not
fld
add
in
jne
(bad)
(bad)
cld
xchg
out
jns
inc
and
ret
inc
xlat
std
imul
sbb
arpl
adc
dec
cli
aam
cmp
inc
cmp
ja
cmp
mov
or
inc
popa
adc
fwait
test
sbb
mov
sar
sub
cmps
sbb
sbb
mov
add
ret
xchg
mov
invlpg
test
mov
and
and
and
and
sbb
inc
inc
and
movs
jmp
push
or
xchg
sbb
fild
add
add
mov
imul
or
xchg
out
neg
adc
cmp
and
dec
and
and
ja
outs
out
sti
xor
add
mov
add
adc
cmps
adc
mov
or
add
or
and
adc
frstor
dec
and
mov
xor
and
lods
fist
push
mov
pop
test
push
cmp
adc
cli
js
xchg
sbb
cmp
adc
lods
mov
xchg
loopne
jb
push
sbb
jnp
(bad)
rcr
push
mov
mul
pusha
aaa
and
pop
cmp
push
add
mov
push
les
(bad)
sbb
push
mov
ret
inc
cmp
push
ins
push
ror
imul
outs
xchg
xchg
scas
ja
cmp
call
add
daa
add
imul
cld
cmp
dec
cmp
inc
iret
cs
and
ficomp
sub
dec
aaa
add
push
or
pop
inc
je
in
pop
xor
push
cmps
xchg
xor
in
add
(bad)
mov
adc
inc
sti
sti
push
fxch
and
fsub
outs
jo
pop
pop
push
rcr
aam
sbb
fsub
inc
mov
imul
arpl
cli
pop
and
xchg
mov
dec
jnp
adc
add
nop
out
mov
cmp
pusha
cmp
or
and
mov
mov
outs
dec
push
inc
jl
pushf
cmp
sbb
cmp
mov
sbb
mov
add
scas
sahf
sar
inc
scas
bound
xchg
mov
push
sbb
or
shl
pop
mov
mov
or
add
or
pusha
(bad)
arpl
and
popa
inc
adc
psrlq
popf
adc
sbb
outs
push
adc
dec
inc
dec
inc
dec
dec
inc
pop
inc
push
push
cli
dec
(bad)
fs
inc
or
mov
gs
or
jo
popf
mov
lods
inc
mov
outs
sbb
cmp
add
ins
outs
addr16
mov
inc
cmps
movs
add
iret
mov
sub
stc
int
mov
adc
cmp
adc
mov
xor
or
add
mov
inc
mov
call
movs
xlat
mov
js
fsub
popf
nop
jle
sete
mov
jl
je
pushf
pushf
pushf
jo
push
pushf
pusha
pop
pop
push
pushf
pushf
pushf
pushf
push
dec
dec
inc
pushf
pushf
pushf
pushf
inc
cmp
xor
pushf
pushf
pushf
xor
and
pushf
pushf
pushf
and
adc
push
add
ror
pop
mov
and
dec
xor
adc
inc
clts
cli
xor
xor
aas
push
dec
xchg
sub
out
add
inc
and
addr16
pop
imul
jno
dec
into
inc
push
or
jns
pop
or
outs
adc
adc
add
iret
adc
push
ss
ins
sub
les
inc
and
out
pop
add
dec
leave
inc
or
cmps
pop
or
ror
push
outs
imul
int3
xor
and
out
ret
xor
daa
out
movlps
out
inc
mov
and
unpcklps
cmc
(bad)
clc
out
lock
enter
push
ds
fst
xchg
gs
inc
sti
les
and
mov
mov
push
push
xchg
sub
adc
imul
pop
sbb
bound
adc
inc
ds
mov
dec
add
(bad)
mov
fidivr
cld
loope
sub
inc
push
xchg
adc
mov
mov
push
lods
loopne
xor
mov
arpl
add
pop
jae
sbb
or
pop
or
or
cmp
push
fs
pop
sbb
int
scas
jno
icebp
cmp
cld
push
cmp
or
es
push
and
inc
arpl
dec
xchg
push
mov
and
dec
fild
or
stos
mov
add
mov
out
inc
out
call
(bad)
in
pop
jne
out
and
loope
fadd
add
or
xchg
scas
loop
test
inc
push
popa
or
push
dec
adc
adc
adc
sti
ins
adc
cs
hlt
adc
inc
mov
(bad)
pop
cmps
rol
pop
fsubr
out
lds
jno
fistp
call
popa
or
sub
inc
xor
dec
push
inc
push
pop
pop
lods
pop
and
and
cmp
xchg
fwait
inc
push
push
ret
mov
inc
(bad)
in
xchg
adc
inc
and
inc
push
ja
sub
push
push
cmp
addr16
and
xor
dec
sahf
xchg
test
and
inc
popa
and
add
mov
inc
movs
fwait
outs
pop
inc
dec
add
xchg
xor
sub
aas
loop
and
ins
mov
push
push
inc
ss
stos
sbb
xor
out
cmps
inc
repnz
push
jno
(bad)
pminub
push
mov
retf
ss
pop
rol
aas
adc
push
add
xor
adc
and
xor
lahf
dec
push
or
aam
test
outs
ss
call
dec
add
stos
loop
sub
xor
ror
in
xor
pop
sub
pop
inc
push
mov
gs
xor
mov
in
inc
mov
or
pusha
xchg
dec
lea
pmulhuw
test
jns
(bad)
mov
push
xchg
push
ins
add
cmp
sbb
daa
(bad)
xchg
push
adc
dec
popa
aaa
test
adc
add
sbb
lods
retf
dec
ja
dec
cmp
inc
mov
int
pop
push
fs
int3
add
push
push
sahf
inc
ja
inc
push
mov
push
repnz
cmp
sbb
dec
inc
push
and
leave
adc
push
sahf
fsubr
setle
les
std
aaa
dec
ins
sbb
pop
cmp
dec
and
dec
push
push
inc
adc
xchg
daa
daa
daa
test
add
enter
dec
pushf
jmp
inc
js
stc
repnz
in
push
xchg
(bad)
rcpps
jb
push
jl
lds
sbb
jmp
push
pop
movs
pushf
mov
fild
push
sub
adc
dec
xor
jae
in
bound
pop
fisttp
mov
and
es
stos
add
adc
push
push
adc
pop
dec
add
fcomp
test
pop
jno
or
mov
cmp
xor
or
mov
cmp
push
and
mov
mov
push
mov
daa
rcr
push
pop
int3
xor
inc
ret
stc
stos
outs
or
dec
cdq
test
adc
jns
xchg
pop
push
pop
repnz
or
push
or
push
pop
pushf
mov
push
xor
dec
xchg
das
add
pushf
fs
or
popa
push
test
adc
pop
xor
cmp
push
or
and
xor
bound
add
stos
iret
push
push
bound
push
sbb
jno
stc
mov
push
or
and
bound
stc
and
or
push
cwde
bound
or
push
ins
cdq
ss
stos
xchg
jns
pop
xchg
popf
aam
or
dec
add
push
test
or
push
add
push
cwde
jl
repnz
push
adc
in
in
jmp
dec
popa
xor
inc
nop
inc
jl
pop
int3
push
or
push
dec
arpl
scas
out
cmp
add
xor
push
push
leave
iret
xor
repz
dec
imul
or
and
ror
arpl
xchg
fmul
push
add
push
add
mov
rcl
inc
xor
pop
int
fs
xor
ret
push
add
fs
xchg
call
ss
ds
push
mov
mov
fs
lea
gs
in
pop
ins
call
sub
mov
xchg
or
or
pop
sub
ret
(bad)
les
dec
xor
scas
test
sbb
into
in
inc
repnz
adc
add
push
adc
pop
push
dec
inc
push
pop
rcl
adc
push
nop
inc
pop
cmp
xchg
add
dec
or
ror
fwait
and
pop
test
push
call
inc
fwait
ret
mov
mov
push
mov
xchg
lods
mov
inc
push
ret
movs
dec
mov
push
retf
(bad)
cdq
retf
ja
or
inc
ret
mov
mov
fwait
pop
sbb
or
lds
sahf
add
add
ss
sub
clc
arpl
inc
inc
adc
dec
out
call
mov
push
ss
add
jmp
retf
(bad)
and
jmp
add
jg
mov
pusha
and
call
push
in
add
inc
and
xchg
cmc
mov
add
lock
out
hlt
jnp
mov
pop
push
inc
inc
lods
ins
add
add
sbb
add
outs
add
test
test
xchg
dec
fbstp
nop
int3
sbb
dec
xchg
push
jmp
inc
loope
cs
and
scas
inc
addr16
ins
test
dec
adc
ds
pop
or
pop
cmp
mov
mov
add
xchg
pop
mov
add
push
lods
out
stc
push
push
pop
and
add
xor
push
es
gs
(bad)
pop
aaa
jbe
push
mov
and
sub
test
pop
push
jns
jns
adc
call
lods
push
repnz
out
pop
push
fadd
or
pop
test
push
adc
leave
shr
and
push
cld
cmp
inc
push
in
imul
pop
ret
in
pop
push
out
lea
push
mov
mov
loope
mov
and
pop
push
add
aam
out
pop
push
xchg
pop
push
add
or
inc
mov
push
cwde
dec
sahf
add
cdq
pop
push
adc
nop
xchg
dec
inc
push
adc
inc
sub
pop
push
stos
pop
push
mov
xchg
scas
adc
ret
adc
add
ret
and
repnz
xchg
pusha
push
add
enter
pop
or
adc
dec
sbb
popa
push
push
leave
xchg
popa
push
cwde
imul
adc
and
add
sub
pop
and
adc
adc
leave
push
adc
push
je
pop
test
je
dec
dec
das
or
ja
push
cmp
leave
xchg
or
push
jl
inc
push
sbb
push
adc
adc
add
loope
repnz
dec
push
sbb
and
test
jnp
out
pop
test
test
jmp
push
mov
and
in
das
pop
and
push
imul
push
test
pop
sub
lods
sub
cdq
dec
jb
and
mov
push
enter
mov
push
shl
cmp
cmpxchg
inc
push
repnz
push
push
pop
enter
cmp
push
cwde
add
pop
inc
loopne
in
fist
add
mov
scas
sysexit
sub
dec
aam
or
and
adc
inc
push
fwait
and
mov
imul
outs
test
jb
leave
jnp
je
add
or
or
push
push
xchg
push
xor
or
aaa
pop
jne
loop
mov
and
push
add
scas
jns
sub
and
sub
dec
ins
mov
xlat
cld
out
(bad)
push
pop
push
add
dec
outs
jmp
jle
outs
push
cmp
das
dec
dec
push
dec
push
or
xor
pop
or
addr16
jnp
mov
push
in
or
mov
pop
jo
push
push
cmp
push
push
inc
ss
xchg
add
pop
ins
addr16
inc
push
in
push
mov
pop
leave
das
add
add
aaa
mov
shl
pop
adc
sub
outs
or
mov
pop
popa
rol
mov
xchg
stos
sub
js
add
pusha
mov
mov
loopne
or
shl
adc
adc
movs
fisttp
ret
xchg
adc
inc
imul
inc
ja
sbb
xchg
test
jns
adc
je
or
out
lock
mov
sahf
add
ss
pop
add
dec
push
mov
mov
add
call
ror
or
cmp
fild
cmps
aaa
fs
sbb
gs
inc
or
adc
or
xchg
jne
adc
xchg
(bad)
mov
mov
or
lahf
sub
jl
mov
mov
dec
jb
xchg
xchg
xchg
pop
dec
jae
jb
jb
repz
xor
outs
inc
push
inc
retf
fisttp
mov
mov
add
xlat
test
mov
mov
movs
loope
daa
jp
and
pop
inc
outs
and
dec
lds
pop
mov
add
dec
jae
outs
dec
fcom
ret
and
mov
pop
movs
(bad)
pop
bound
fist
outs
adc
dec
or
and
fld
xor
loop
mov
je
jl
aad
fsubr
and
or
xchg
je
inc
icebp
mov
adc
push
xchg
rcl
ret
out
or
sbb
call
dec
lahf
(bad)
and
and
cs
pop
add
cmp
or
sbb
push
dec
jb
jne
leave
inc
(bad)
fcmovbe
inc
inc
and
push
je
lods
cdq
dec
push
aam
cwde
sub
sbb
inc
jp
imul
pushf
icebp
add
lods
bound
or
push
xor
push
sbb
fmul
adc
in
pop
push
popa
add
cwde
arpl
pop
lea
push
rcl
jbe
mov
ror
push
dec
push
pop
jbe
aaa
aam
mov
add
pop
xchg
pushf
call
jbe
shl
in
or
btr
scas
sub
imul
test
mov
cdq
or
pop
sub
popa
dec
mov
or
mov
add
int
sub
test
xor
aam
int
add
scas
fs
sub
js
push
or
mov
test
js
int3
pop
mov
retf
test
aaa
pop
add
ss
outs
cli
outs
fwait
adc
adc
js
xor
ss
pop
xor
test
push
jo
pop
mov
xchg
ds
retf
and
enter
pop
jns
sub
repz
jnp
mov
mov
and
add
and
xor
sbb
adc
rcl
and
xor
push
rcl
es
add
aaa
out
fdivp
aad
and
cdq
adc
sub
movs
dec
loop
sub
pop
inc
loop
sbb
js
sub
cmp
jl
jp
jnp
jnp
jmp
mov
sbb
xor
push
pop
jge
lods
fistp
pop
outs
jmp
jecxz
adc
sbb
pop
mul
ss
lods
pop
jnp
xadd
jl
aaa
jl
das
adc
mov
fwait
popa
rcl
add
ja
or
xchg
in
js
scas
sub
xor
add
add
aam
pushf
ja
popa
aad
outs
ja
or
std
lds
mov
test
pop
push
pusha
mov
pop
mov
test
mov
jl
pop
idiv
and
movs
sbb
add
jge
hlt
cmp
jge
mov
in
or
inc
(bad)
xchg
ins
mov
pop
pop
lea
mov
out
unpckhps
or
xchg
push
push
push
ss
or
xor
cli
xor
int3
ret
sbb
sbb
aaa
dec
in
xor
fstp
gs
mov
jl
pop
push
fwait
cwde
mov
mov
jo
push
xchg
pusha
das
mov
retf
xchg
inc
and
push
sar
mov
dec
xchg
movs
clc
jne
aaa
or
sbb
xor
xchg
jnp
push
add
add
test
inc
inc
(bad)
mov
sbb
dec
and
dec
xchg
lahf
cmp
icebp
cli
inc
push
push
push
add
add
cmp
adc
adc
out
add
xor
mov
sbb
fwait
shl
adc
inc
jmp
test
(bad)
jmp
and
mov
sub
add
add
mov
pop
add
sub
sbb
add
mov
jb
add
or
push
sbb
push
in
sub
enter
mov
inc
jmp
add
push
mov
ja
enter
adc
xchg
outs
mov
ret
stos
movs
adc
mov
dec
aam
push
ret
push
cmp
add
cmp
jge
call
mov
or
mov
ret
nop
mov
sbb
jbe
(bad)
shl
jo
pop
lds
mov
mov
mov
or
in
xor
cmp
test
inc
sub
adc
shr
add
fwait
mov
cmp
movs
out
add
mov
or
ins
add
add
or
movs
jo
dec
mov
lea
adc
cmp
repz
sub
aas
mov
cvtps2pi
(bad)
(bad)
jg
je
mov
into
push
nop
add
mov
xchg
out
xchg
push
test
adc
push
mov
fisttp
push
je
sub
mov
or
shl
add
pop
call
or
adc
cmp
sbb
cmp
ins
fimul
aam
push
xchg
es
xor
cmp
push
icebp
cmp
sbb
xor
ja
cli
jge
jbe
rcl
clc
jmp
xor
clc
push
cmp
sub
or
sbb
jae
or
inc
dec
jne
mov
xor
jge
or
mov
mov
call
dec
or
inc
sub
lock
(bad)
out
adc
push
rol
fldcw
adc
sti
sti
add
dec
rol
fist
js
cmps
and
jge
adc
imul
sbb
add
iret
cmc
mov
sbb
push
push
push
xchg
rol
push
inc
jge
sub
xor
inc
jb
jmp
add
push
mov
adc
je
or
mov
xor
loopne
push
mov
test
add
repnz
stos
aaa
dec
or
or
lahf
clc
or
jo
sub
test
jg
mov
or
dec
jmp
jo
push
imul
or
rcl
shr
mov
push
adc
ror
popa
xor
loopne
xor
outs
xchg
and
jne
adc
jno
sti
cmp
pushf
les
out
jne
popf
fs
lea
cmp
mov
sbb
ja
mov
imul
or
daa
sub
clc
dec
adc
pop
dec
test
adc
cmps
mov
aaa
inc
js
and
pop
call
inc
dec
adc
ja
sahf
enter
scas
pop
pop
cmp
xchg
loopne
push
fmul
loopne
inc
fisubr
dec
xchg
ror
adc
fwait
adc
shl
cmp
push
push
mov
xchg
mov
lock
lock
sbb
mov
sub
cld
out
mov
or
mov
push
retf
pop
xchg
jmp
cld
xchg
dec
call
iret
mov
ja
enter
clc
push
xchg
shl
pop
or
jmp
cmp
imul
sbb
and
and
pushf
clc
scas
inc
stos
sub
clc
mov
in
pusha
loopne
fdiv
or
xchg
pop
fs
cmps
test
daa
fs
or
sbb
adc
cmp
inc
rol
push
sub
dec
fwait
dec
xlat
cmp
mov
gs
pop
or
test
rcr
jecxz
daa
or
inc
pop
mov
and
clc
ins
and
add
dec
fdivp
sbb
rcl
xor
jnp
lahf
add
(bad)
lock
icebp
xor
add
cmp
sahf
xor
adc
not
jmp
sub
test
in
xor
popa
or
jns
js
test
and
outs
mov
adc
lds
jmp
and
jne
ret
xchg
scas
inc
or
cmps
enter
and
clc
mov
adc
sbb
jns
das
jne
imul
(bad)
xchg
adc
scas
cdq
jo
or
ss
dec
iret
pop
jns
adc
or
inc
pop
push
imul
mov
mov
hlt
dec
mov
jmp
or
(bad)
clc
mov
and
out
mov
out
leave
shr
or
add
nop
or
(bad)
call
or
test
emms
inc
and
push
jae
mov
inc
iret
ins
or
xor
inc
mov
sub
out
pop
add
cli
sub
xchg
cmp
mov
clc
jmp
jne
jp
adc
sub
or
or
mov
not
mov
aaa
dec
and
inc
cmp
addr16
inc
pop
mov
jbe
jl
neg
sbb
or
lahf
pusha
xchg
jle
sub
clc
and
movs
and
mov
cwde
sub
push
sub
das
mov
ret
scas
inc
mov
daa
lock
(bad)
xchg
cmp
imul
ret
pop
gs
xchg
xor
pop
pop
movs
xor
push
xchg
rcl
stos
ror
or
cmp
mov
or
sub
jle
push
aad
inc
arpl
cmp
and
shl
sti
fidiv
stos
xchg
mov
sub
dec
out
jns
pusha
nop
(bad)
sub
sbb
mov
(bad)
adc
iret
movs
inc
in
call
and
ret
lock
aad
in
fld
or
les
cmp
lea
add
fldcw
dec
xor
jb
mov
mov
out
sahf
jns
push
cld
dec
dec
ja
mov
mov
push
fadd
mov
push
shl
jmp
scas
imul
das
add
(bad)
stos
mov
cmp
jbe
push
pusha
push
jo
enter
sahf
out
fdiv
dec
inc
adc
jno
(bad)
xchg
push
iret
les
xchg
movs
and
xchg
sub
jno
push
(bad)
push
cmp
push
bound
push
je
and
daa
adc
je
loopne
lods
ret
xchg
adc
jo
js
push
lds
fwait
(bad)
nop
daa
js
adc
xor
movs
lahf
movzx
push
bndstx
scas
int3
dec
jp
adc
nop
push
mov
mov
inc
ret
sub
das
mov
in
(bad)
dec
mov
dec
test
test
push
sub
inc
loopne
sub
jns
imul
sahf
retf
jae
int3
in
mov
push
push
test
dec
pusha
push
fisttp
push
cmps
jg
add
add
outs
sti
ins
jg
das
push
add
test
push
pop
mov
out
inc
jmp
into
adc
mov
inc
movs
sbb
push
fsub
dec
or
inc
push
inc
dec
dec
push
lahf
test
lock
arpl
pusha
sub
xchg
adc
call
inc
push
push
adc
adc
fcom
push
sub
popa
movs
fcom
out
xchg
add
fdivr
sbb
inc
push
cmp
pop
das
pop
pop
nop
add
in
push
push
nop
inc
push
in
push
dec
in
push
cmp
in
add
inc
inc
inc
cmp
cmp
lock
pusha
scas
pushf
and
hlt
cli
push
push
rcl
push
or
imul
out
aaa
sbb
pop
jnp
mov
inc
cmp
xor
clc
cld
add
xor
jb
or
xor
xor
adc
sbb
xor
xor
and
sub
xor
xor
xor
cmp
xor
xor
inc
dec
dec
push
xor
xor
push
pop
pop
pusha
xor
xor
fs
xor
je
jl
xor
xor
test
xor
xchg
cwde
pushf
mov
movs
test
mov
mov
sub
dec
sub
add
lds
pop
mov
loop
add
mov
shl
call
add
xor
add
xchg
add
cs
sbb
and
add
clc
nop
retf
sub
dec
sub
repnz
inc
test
or
gs
or
or
sub
sub
or
gs
sbb
sbb
and
and
movs
jb
retf
pushf
sub
retf
push
xor
add
nop
cwde
cmp
int3
inc
sti
and
fs
adc
dec
xor
sub
dec
dec
push
add
mov
pop
fcom
add
xor
push
adc
sub
push
sbb
aam
dec
gs
jl
add
lods
adc
dec
mov
jl
and
dec
push
push
movs
loopne
or
movs
xor
xchg
pushf
xor
jo
adc
test
add
push
jge
inc
call
push
neg
xor
push
add
or
add
sahf
mov
cmp
cmps
sbb
add
and
sbb
pop
dec
add
adc
mov
or
arpl
iret
jae
addr16
mov
adc
push
inc
pop
xchg
xchg
inc
dec
dec
das
inc
sbb
or
stos
and
lahf
dec
fidiv
jae
pop
and
pop
inc
repz
cmp
dec
xchg
adc
arpl
sbb
imul
dec
or
out
jge
xchg
add
out
outs
jb
sbb
fidiv
jae
xor
aaa
xchg
adc
test
outs
mov
aaa
dec
pop
inc
cs
enter
pop
sub
sub
xor
cmp
ret
xchg
push
lods
adc
cmp
sbb
adc
mov
jl
popa
dec
inc
lahf
fist
imul
adc
adc
jnp
inc
test
into
jae
inc
mov
adc
aad
lods
or
imul
ins
aas
add
rcl
jnp
sub
pop
mov
push
jae
cmovs
imul
xlat
add
hlt
(bad)
(bad)
xor
mov
and
ins
add
push
push
shl
push
and
mov
pop
loop
lock
shl
cmps
mov
dec
imul
xchg
arpl
popa
fwait
xor
and
push
sbb
xor
lea
lds
sbb
adc
pop
sub
add
cmps
inc
and
inc
sub
fild
or
test
sbb
fild
shl
inc
pop
push
(bad)
xchg
push
sub
dec
dec
dec
aaa
inc
jmp
and
mov
lods
test
push
push
xchg
jl
xchg
and
sbb
xchg
je
jo
sbb
and
jb
push
sbb
js
cmps
mov
mov
sbb
and
xor
dec
cmp
add
adc
pop
test
or
and
sbb
pop
call
ins
jb
cmp
xor
das
mov
verr
mov
mov
iret
repnz
jl
lahf
movs
test
(bad)
push
repnz
add
jle
dec
cmp
dec
or
aam
jbe
sldt
adc
inc
pop
and
or
pop
mov
xchg
or
cmp
add
sbb
mov
pop
fidivr
mov
pop
add
jno
mov
pop
add
or
enter
push
dec
or
enter
pop
sbb
shl
rol
adc
xchg
inc
cmps
dec
cvtps2pd
lahf
add
dec
dec
adc
push
add
imul
mov
xlat
or
cs
pop
push
add
cwde
push
or
push
ror
pop
test
cld
dec
add
test
test
dec
repz
adc
add
int3
stos
lods
push
repnz
push
inc
and
inc
in
lods
push
add
enter
pop
fistp
popa
dec
and
add
sbb
add
pop
test
push
push
add
jmp
or
ins
sbb
shl
sub
leave
mov
xchg
aam
int3
stos
or
adc
dec
loopne
xchg
cmp
dec
es
xchg
adc
pop
fld
mov
pop
jg
xor
(bad)
xor
push
add
adc
xor
xlat
sbb
out
add
sbb
push
push
inc
sbb
mov
les
or
loopne
dec
mov
mov
add
fld
cwde
pop
cmp
popa
rol
pop
sbb
sar
sub
mov
add
inc
inc
stos
add
jno
mov
ins
or
cmp
mov
jl
mov
and
fidivr
and
mov
sub
push
add
mov
pop
call
jbe
adc
pop
cdq
cdq
lods
or
inc
xor
mov
daa
js
xchg
ret
sub
cmps
push
xor
mov
mov
pusha
(bad)
push
adc
fimul
bound
out
js
retf
mov
xor
sub
fnstsw
out
dec
addr16
jnp
push
cmp
pop
dec
mov
add
xchg
in
ja
jo
scas
xor
mov
adc
mov
inc
mov
inc
ins
sbb
or
pop
clc
or
add
push
mov
cmp
add
bound
push
fs
test
test
stos
dec
cs
or
movs
push
fild
pop
jge
movs
rol
pop
push
fs
sub
xor
xlat
cmp
nop
sbb
pop
cmp
or
mov
dec
and
cwde
jg
sub
or
jo
repnz
cwde
pusha
retf
pop
jno
push
ret
(bad)
mov
push
adc
jo
mov
mov
push
fsub
std
mov
test
adc
xchg
mov
mov
push
dec
xor
ret
adc
ins
pushf
mov
fs
xchg
(bad)
(bad)
xchg
fs
or
(bad)
fs
adc
push
add
push
in
retf
add
out
gs
ror
in
les
mov
out
add
mov
mov
adc
das
adc
adc
adc
xor
ins
xor
sub
inc
ss
sahf
pushf
fadd
psubb
add
dec
inc
add
arpl
fsub
daa
daa
daa
shl
mov
aam
enter
daa
daa
loopne
and
mov
cmps
test
adc
jmp
push
aam
push
sub
pop
or
pushw
fadd
jmp
loopne
fisubr
sti
and
push
in
or
enter
jb
in
mov
lock
icebp
jl
outs
rol
inc
out
repnz
add
fnop
push
add
rol
inc
or
add
cmps
pop
mov
or
aam
xor
add
lahf
dec
adc
jae
rcr
jl
xchg
xchg
xchg
in
jbe
loope
scas
out
pop
mov
into
cmps
das
test
ins
adc
pop
pop
sbb
lock
adc
popa
les
jnp
sar
loopne
inc
push
bound
sub
push
inc
cwde
inc
loopne
or
inc
adc
sub
sbb
xor
loope
sbb
test
aad
mov
mov
out
mov
inc
pop
daa
das
add
lods
test
lds
imul
cmp
loope
pop
lods
xchg
xor
mov
gs
jl
dec
repz
mov
mov
push
mov
mov
mov
and
sub
sbb
mov
mov
in
xchg
inc
adc
or
cmps
cmovb
sbb
push
mov
test
loopne
mov
xor
adc
enter
adc
add
or
or
outs
pop
sub
adc
push
or
or
inc
and
push
mov
inc
add
sbb
mov
and
inc
add
and
and
ss
aaa
(bad)
dec
xor
test
sbb
mov
jo
movzx
xor
dec
cmp
jno
xor
jmp
cld
add
sti
pop
shl
or
push
mul
imul
test
fistp
iret
add
jbe
jae
dec
(bad)
stc
lods
lea
ret
xchg
inc
mov
nop
xchg
push
inc
mov
sub
mov
push
pop
push
adc
js
inc
popa
adc
jo
jmp
nop
int3
mov
jmp
loope
mov
and
mov
dec
push
mov
cmp
and
out
adc
test
add
and
lahf
xor
ins
daa
loop
push
add
mov
sub
fs
inc
dec
sub
xor
lds
xor
and
mov
sbb
mov
and
loop
enter
dec
das
pop
or
or
test
jg
or
pop
xor
fucom
test
push
add
jge
addr16
dec
or
fild
mov
lods
lods
add
mov
adc
or
stos
sub
hlt
fstp
jg
and
mov
clc
jno
cwde
popa
add
ret
in
push
inc
mov
pop
shr
test
dec
cli
adc
push
cmp
and
xor
scas
or
push
xchg
imul
xchg
retf
(bad)
in
jmp
int3
push
push
dec
rol
inc
cmps
je
jl
and
dec
push
outs
pusha
stos
push
aas
inc
stos
js
add
stos
jbe
neg
out
or
mov
cmp
ins
jmp
pop
pop
jno
push
shl
dec
cmps
movs
add
inc
mov
stos
scas
fs
push
and
sub
and
inc
mov
lods
pop
mov
or
mov
add
fmul
cld
hlt
and
inc
inc
call
in
sbb
sti
add
jne
ret
mov
push
and
pusha
mov
xchg
inc
movs
imul
in
mul
loopne
cmp
movs
fs
rol
mov
xor
js
inc
out
(bad)
mov
sbb
adc
jge
jnp
and
nop
jno
sti
icebp
mov
fmul
(bad)
push
mov
inc
mov
dec
mov
sub
sub
mov
mov
add
outs
jecxz
push
lea
test
cld
ds
fisubr
mov
sub
mov
or
test
jbe
lods
xor
adc
lea
ja
adc
inc
lea
mov
jns
adc
sar
push
sbb
ja
or
das
cwde
and
daa
retf
int
mov
(bad)
or
jmp
sub
sub
sbb
mov
mov
mov
mov
push
cmp
jne
cs
fs
and
fdivr
ja
push
ficom
mov
lahf
lods
xor
push
xor
push
jmp
cld
inc
sti
push
cmp
lods
cmps
push
jmp
mov
test
jmp
or
int3
mov
adc
jg
dec
or
movs
add
dec
jne
ret
loop
lds
mov
adc
stos
movs
push
rep
add
nop
jnp
pop
int3
cmp
hlt
dec
and
nop
adc
cmp
xor
outs
mov
sub
dec
retf
js
jl
jno
push
outs
add
inc
mov
add
popa
lods
cmps
jge
out
or
shl
cs
cmps
and
adc
pushf
jge
cdq
nop
mul
jmp
push
loopne
hlt
ror
sar
sub
loope
daa
fs
fadd
xchg
lods
(bad)
mov
push
pop
mov
call
cmp
add
sub
in
push
fcomp
dec
shl
rol
xchg
ror
xchg
or
hlt
sbb
or
mov
or
xchg
retf
dec
mov
fcmovnb
out
or
dec
enter
ins
mov
pop
bound
loop
mov
dec
add
fmul
pushf
loopne
mov
sbb
or
and
cmp
outs
lods
test
pop
dec
add
inc
add
stos
hlt
xchg
add
push
push
test
sbb
test
ins
das
push
xchg
call
or
fisubr
repnz
jle
clc
or
inc
movs
test
ds
jmp
push
fild
add
lods
mov
cmp
sub
call
je
mov
add
push
and
adc
js
fbstp
es
add
jge
push
popa
ret
lods
ins
dec
or
dec
add
mov
and
pop
cmp
sahf
mov
inc
inc
shl
dec
(bad)
push
pop
daa
fsubrp
push
mov
add
or
fsubr
sbb
ss
pop
sbb
push
stc
pop
lahf
push
lds
dec
mov
adc
add
xlat
test
jmp
jecxz
cmp
sbb
push
adc
xor
rcl
ficomp
sti
add
add
or
inc
(bad)
nop
repz
xor
inc
mov
mov
test
jbe
fdiv
sti
mov
sti
or
adc
push
jmp
movsx
dec
movzx
mov
mov
mov
fild
in
jmp
adc
jmp
adc
sub
ret
push
xchg
sub
imul
sbb
jmp
mov
cmp
mov
and
ret
sub
jnp
mov
xchg
push
test
inc
loope
inc
adc
test
xor
mov
jg
add
loope
dec
shl
mov
inc
enter
fstp
ficom
dec
jo
enter
mov
push
pop
cmp
push
pop
lahf
add
push
cdq
fisubr
sub
add
fsubr
js
adc
dec
push
movs
and
dec
inc
pop
bound
mov
push
adc
cli
cmp
push
outs
movs
push
and
pop
add
retf
in
inc
mov
test
adc
mov
jae
xchg
adc
push
inc
pop
pop
pop
xchg
(bad)
jae
push
imul
inc
sub
add
jnp
xor
je
lahf
mov
into
push
and
or
mov
push
test
gs
or
xchg
mov
pop
je
iret
movs
add
icebp
test
addr16
or
or
(bad)
and
daa
or
inc
(bad)
outs
stos
popf
sbb
add
cmp
mov
das
jmp
movs
aaa
repnz
adc
xchg
push
or
(bad)
loopne
das
pmulhuw
fdiv
jb
jb
add
cmp
pop
repnz
sub
inc
mov
scas
mov
push
sub
lods
and
popw
or
pop
jo
and
cmp
das
add
pop
jae
lods
cmps
push
sbb
add
ins
mov
xchg
shr
pop
pop
ins
add
or
out
or
pop
xchg
popa
imul
dec
cmp
push
popa
jo
cmp
in
mov
and
iret
cmp
sub
shl
sbb
xor
xchg
dec
mov
mov
outs
push
add
adc
int3
outs
enter
xor
retf
jae
in
sbb
jae
sub
addr16
push
add
inc
push
sbb
cmp
adc
push
mov
jns
inc
push
sbb
imul
je
sub
dec
fs
or
dec
push
in
ficomp
and
dec
fistp
je
jecxz
push
call
mov
pop
xor
or
push
retf
js
sub
lock
pop
xlat
or
adc
or
push
inc
sar
xchg
mov
push
sub
push
or
xor
sbb
xor
fs
mov
inc
push
mov
or
ds
out
mov
sub
sbb
or
pop
mov
fld
sub
popa
ins
ja
dec
cmp
jae
cmp
aad
xor
sti
fiadd
push
pop
es
leave
das
or
(bad)
adc
mov
movs
adc
mov
sbb
call
shl
cmp
or
xor
cmp
cs
inc
into
ja
jns
ja
bound
sub
mov
add
shl
std
sub
xchg
jnp
fimul
sub
lods
mov
sub
inc
mov
pop
dec
test
sub
sbb
mov
jo
lds
stc
or
mov
cs
sbb
pop
das
xor
cdq
sbb
lock
adc
imul
cld
cmp
dec
hlt
(bad)
syscall
add
retf
xor
pop
add
add
push
ss
sub
push
pop
ss
dec
in
retf
retf
sbb
pop
xor
cwde
inc
ds
in
retf
mov
sbb
fnsave
dec
enter
and
push
add
dec
inc
in
ds
test
adc
lods
popa
xchg
push
sub
inc
popa
push
pusha
push
inc
(bad)
mov
test
jne
pop
ror
xchg
or
and
std
and
dec
and
and
ins
xchg
mov
dec
add
and
pop
add
add
push
dec
fimul
pop
call
or
cmp
adc
sbb
and
sub
fidiv
sahf
aam
retf
push
pop
and
lds
out
xor
xchg
ret
add
stos
adc
cmp
wrpkru
neg
and
push
push
push
dec
mov
fmul
push
xor
in
lock
sbb
add
inc
test
es
cmp
out
jmp
stos
aaa
test
mov
mov
adc
into
leave
or
lds
fs
add
pop
adc
pop
adc
scas
bound
outs
xchg
sbb
js
loope
inc
dec
adc
fcom
fisub
cmps
pop
or
push
iret
aas
enter
in
test
inc
dec
lods
adc
mov
iret
inc
pop
invd
push
adc
out
sub
sub
xor
mov
add
sbb
pop
mov
push
ret
ret
iret
jb
mov
mov
cmp
push
rol
hlt
sub
rcr
outs
adc
js
inc
push
push
loopne
pop
pushf
ror
lods
inc
pop
xchg
jecxz
or
sbb
and
inc
push
push
xor
rol
and
das
sbb
jl
leave
dec
mov
out
test
clc
dec
clc
dec
les
fcom
xor
iret
cld
clc
add
nop
(bad)
pop
lds
xor
cmp
mov
dec
cmp
push
add
pusha
sub
dec
daa
mov
xor
xchg
dec
ret
bound
add
retf
push
sub
loopne
loop
repz
adc
dec
cmc
mov
cmc
clc
add
daa
icebp
jo
daa
jae
cmp
(bad)
inc
jno
mov
(bad)
shl
pop
pop
add
cmp
sar
push
or
sbb
shl
(bad)
in
push
adc
int
cs
dec
add
bound
movs
adc
mov
inc
or
push
test
fs
push
add
cmp
push
jle
dec
push
push
push
jbe
dec
xor
dec
outs
pushf
cwde
cmp
push
jo
mov
add
repz
aam
test
hlt
das
add
pop
mov
add
sub
aad
adc
fld
or
test
aad
pop
xchg
and
enter
push
call
js
push
(bad)
stc
rcl
imul
mov
xchg
push
and
pop
add
sub
cmp
ret
push
das
pop
add
sub
pop
mov
(bad)
jg
(bad)
repnz
inc
movaps
jle
leave
daa
inc
fiadd
(bad)
xlat
dec
cwde
inc
sub
movs
gs
das
or
iret
add
xor
pop
(bad)
or
daa
push
xchg
push
and
icebp
xchg
scas
xlat
pop
mov
xchg
sub
cmp
mov
es
mov
outs
das
jmp
movs
push
push
scas
cmp
in
push
inc
pushf
push
cld
pushf
push
inc
scas
cmp
add
push
in
(bad)
sub
push
sbb
push
ins
pushf
push
mov
pushf
push
pushf
push
jl
mov
(bad)
es
fcomp
jne
jno
clc
sbb
out
cs
cmp
push
fcomp
cmp
push
dec
inc
push
adc
cmp
xchg
movs
mov
push
push
imul
dec
scas
xor
and
adc
addr16
xor
ss
add
push
push
adc
jmp
fbstp
adc
xchg
movs
dec
gs
add
and
adc
arpl
xor
fbld
sar
pop
inc
(bad)
push
dec
adc
push
(bad)
mov
xor
or
cmp
in
addr16
inc
mov
cmp
add
pop
cmp
xchg
inc
ss
or
xchg
(bad)
cmp
aas
xor
and
shl
frstor
jae
sub
mov
or
fdiv
xor
add
lods
or
shl
xor
xchg
jo
sbb
mov
push
gs
sbb
dec
push
sbb
or
outs
inc
push
or
fnstenv
out
jo
cmp
lods
stos
fs
iret
imul
or
ins
jb
mov
or
shl
cdq
add
push
jne
pop
inc
sub
imul
sub
mov
cmp
adc
cdq
hlt
dec
sbb
cmp
add
sbb
dec
pusha
and
sub
comiss
or
jb
cmp
adc
dec
outs
xchg
int
cmp
fstp
push
fimul
fcom
or
and
(bad)
xchg
ds
xor
jp
fdiv
pop
cmp
das
jae
or
or
mov
test
xor
or
js
mov
or
retf
xor
push
add
aaa
inc
into
test
adc
jbe
sar
push
and
enter
or
push
rcl
test
rcr
xor
rcl
and
push
add
jb
inc
mov
adc
outs
and
or
imul
pop
pop
or
push
add
imul
xor
cld
fld
sub
pop
lahf
ret
sub
pushf
adc
jecxz
push
cdq
xchg
outs
or
add
add
js
dec
push
or
lea
dec
ds
xchg
add
imul
add
pop
fldenv
mov
loop
add
or
dec
jb
mov
sub
xchg
movs
test
and
out
out
or
or
dec
enter
fbstp
sbb
pavgb
out
mov
and
push
or
push
push
push
mov
fs
cmp
or
add
dec
push
adc
loopne
stos
imul
add
adc
and
(bad)
pop
jo
cdq
xlat
not
(bad)
add
ds
jne
jg
jg
loope
cwde
dec
not
div
and
mov
shl
sub
xchg
ret
sub
test
add
inc
in
add
cli
adc
or
dec
add
(bad)
aam
dec
nop
ins
stos
loope
(bad)
xchg
jo
daa
add
xor
inc
xchg
adc
add
push
fs
push
pusha
xor
jno
inc
push
test
mov
into
dec
xor
je
push
sub
cmp
or
push
add
sbb
add
cs
add
push
sub
add
or
mov
add
sub
mov
(bad)
xlat
loope
pop
mov
loop
loop
inc
dec
adc
add
or
and
jmp
retf
pusha
jb
ror
or
fcmovu
dec
add
nop
mov
or
loope
add
mov
ss
adc
dec
or
inc
adc
cmp
add
jbe
dec
push
cmp
add
pop
ins
in
fisubr
xchg
pop
mov
mov
fisttp
xchg
cmp
fist
mov
cmp
pop
mov
popa
fs
out
sbb
and
xor
add
rol
xor
xchg
fldenv
in
or
loop
xchg
stc
fs
or
xor
push
push
les
fld
ss
adc
enter
retf
mov
adc
pusha
inc
jg
sbb
loope
lock
imul
or
dec
clc
inc
cmp
rcl
test
push
clc
mov
daa
or
retf
inc
push
cmp
jmp
outs
or
aad
nop
nop
or
(bad)
sbb
jl
les
and
push
call
inc
mov
jnp
xor
loopne
data16
adc
outs
jmp
pop
push
jns
jbe
push
aam
outs
sub
lock
sub
jmp
or
fcomp
add
mov
imul
xchg
and
dec
ins
daa
dec
mov
mov
adc
push
gs
data16
ja
or
or
sbb
push
push
ins
add
mov
dec
sub
or
addr16
arpl
jg
out
loopne
sub
push
push
jae
jns
aam
sbb
add
pop
xchg
sar
xor
addr16
adc
cs
or
pushf
out
mov
cmp
das
rcr
jmp
arpl
push
jmp
addr16
pop
xor
in
add
test
mov
sub
or
test
sahf
add
rcr
mov
(bad)
add
mov
fsubr
movs
adc
xor
dec
or
fldenv
xchg
outs
xchg
jl
nop
adc
jns
shl
mov
push
mov
js
push
fldenv
movs
jne
cmps
pop
ja
int3
jg
adc
ror
xor
(bad)
test
push
inc
ja
mov
icebp
sbb
mov
outs
out
mov
inc
ins
inc
dec
rol
dec
jno
cdq
push
pop
imul
sbb
sbb
std
pop
jmp
pop
jmp
nop
mov
lods
retf
adc
enter
out
mov
sbb
or
leave
jmp
or
and
or
aam
or
xlat
xor
rol
je
in
dec
cmp
pop
or
cmp
push
pop
or
push
(bad)
or
ja
add
dec
push
adc
out
leave
xor
and
inc
sbb
fadd
enter
pop
icebp
push
paddsb
and
dec
adc
add
dec
pusha
mov
jge
add
fmul
adc
mov
fmul
xchg
das
ja
sbb
dec
sbb
(bad)
sbb
fdivr
add
out
sbb
jb
add
push
add
lock
sub
add
add
add
adc
sar
or
sub
mov
mov
icebp
aas
add
jb
icebp
xchg
xchg
jo
sub
fstp
fstp
lock
adc
mov
ret
lahf
retf
sub
jle
or
ficomp
add
xchg
pop
adc
and
and
hlt
mov
sbb
add
cld
pavgw
mov
cdq
push
xor
adc
lahf
xor
repnz
adc
sub
lods
(bad)
int
jp
pop
test
fstp
pop
or
lea
adc
inc
inc
jge
or
nop
mov
or
shl
inc
mov
xchg
and
push
repnz
inc
test
jae
add
ret
inc
dec
add
fnstenv
and
mov
mov
push
inc
dec
adc
jmp
xchg
adc
inc
shl
push
push
and
xchg
lahf
pusha
add
push
cmp
and
lahf
adc
add
inc
mov
push
add
dec
xchg
xchg
mov
cwde
sbb
inc
push
mov
iret
mov
adc
dec
cmp
mov
mov
inc
outs
cld
dec
pop
sbb
adc
xor
gs
jno
xor
sub
push
mov
jae
inc
jae
shr
repnz
mov
hlt
inc
(bad)
push
repnz
push
idiv
int3
push
scas
retf
push
movs
outs
push
dec
lods
push
retf
push
pop
add
push
push
nop
mov
hlt
fs
test
test
cmp
call
pop
jnp
dec
inc
dec
call
or
and
pop
jne
and
xor
and
pop
hlt
xor
adc
or
pushf
cwde
dec
inc
pop
push
je
test
test
es
pop
nop
jg
repnz
enter
enter
shl
sbb
scas
sbb
push
inc
sub
addr16
pop
movs
and
out
jecxz
dec
lock
dec
pop
inc
inc
popa
ds
cmp
dec
sahf
adc
adc
xor
cwde
aad
call
jge
outs
sbb
add
sbb
xchg
mov
rcr
ins
add
aas
or
dec
mov
dec
dec
data16
push
test
daa
and
clc
pop
add
scas
ret
fild
call
test
popf
push
repnz
jb
clc
adc
push
xchg
add
sub
stos
popa
aad
repz
add
mov
out
jns
adc
add
cmp
cld
jge
inc
stos
inc
mov
push
or
or
inc
xor
ret
mov
stos
adc
or
mov
xor
pop
xchg
test
sbb
stos
push
xchg
pop
in
adc
cmp
(bad)
retf
xchg
xchg
xchg
mov
les
clc
cmp
mov
out
inc
sbb
push
cli
sbb
leave
inc
repnz
or
out
dec
pop
dec
dec
inc
cwde
lods
mov
adc
jno
enter
test
xchg
cmp
sbb
hlt
lods
ret
scas
xlat
jmp
test
or
sbb
mov
jbe
adc
or
pminub
jg
and
mov
push
mov
jecxz
push
iret
pop
and
enter
sbb
nop
inc
adc
add
sub
inc
enter
add
add
xor
add
xor
or
imul
inc
cld
pop
stos
aaa
push
shl
push
sahf
xchg
or
test
mov
adc
outs
fs
push
push
rol
fcomp
dec
mov
add
dec
or
ins
jne
xlat
jbe
or
movs
jmp
add
lods
add
or
lods
adc
jecxz
pop
push
sub
xor
mov
xchg
pop
clc
stc
mov
push
aad
jbe
jecxz
push
jne
fiadd
pop
adc
inc
std
jle
sbb
add
mov
pop
or
std
add
push
pop
add
data16
add
pop
adc
inc
into
pop
cmp
push
push
fldcw
pop
mov
es
(bad)
xor
pop
adc
in
mov
xor
sub
inc
and
mov
(bad)
popf
add
ss
dec
arpl
rol
dec
jmp
rcl
xor
or
cmps
or
test
jecxz
mov
ss
dec
loopne
data16
xor
push
or
xor
sbb
mov
jnp
popf
rcl
stos
test
mov
add
dec
push
push
mov
call
xchg
aad
push
fdiv
mov
sub
sub
add
pusha
loopne
adc
cs
sub
sub
mov
add
into
mov
mov
or
jg
loope
sbb
fsubr
or
push
mov
in
add
sbb
dec
outs
arpl
stos
xor
inc
adc
rcl
adc
mov
aas
imul
pop
sbb
push
enter
pop
test
lahf
push
lock
push
outs
jns
mov
adc
inc
or
scas
mov
dec
std
add
push
cdq
cli
adc
outs
test
out
pop
add
imul
retf
(bad)
mov
mov
push
imul
push
inc
shl
add
loope
xchg
push
(bad)
shl
add
js
mov
fimul
or
cwde
mov
or
jo
cld
inc
or
push
xchg
outs
or
dec
inc
enter
sub
or
loopne
xchg
jmp
lods
add
dec
dec
add
popa
stc
bound
mov
int3
xchg
stc
retf
mul
xchg
outs
stc
into
or
and
mov
push
adc
cmp
mov
out
in
push
mov
ja
and
push
xchg
pop
cmp
add
mov
ins
sbb
lds
cmp
pop
pop
dec
leave
inc
lock
dec
imul
jg
cmp
mov
pop
push
pop
dec
fidiv
jbe
xchg
sti
pop
test
inc
out
ss
icebp
cmp
mov
adc
pusha
gs
loope
or
ja
lods
dec
popa
adc
ror
pop
cmp
rcr
mov
cmp
mov
out
nop
or
pushfw
mov
pusha
add
aad
xchg
(bad)
repz
dec
or
push
push
and
mov
jo
jo
and
inc
cmps
sbb
dec
enter
inc
adc
int
jne
add
outs
dec
outs
cmp
push
adc
xor
push
shr
or
inc
mov
aaa
push
inc
or
test
out
adc
mov
jmp
add
retf
push
mov
call
fs
push
add
fist
ror
push
movs
fdiv
pop
add
movs
mov
adc
mov
mov
outs
in
sahf
push
test
push
push
push
mov
mov
stos
push
and
(bad)
mov
loopne
inc
mov
ins
fistp
mov
mov
out
push
test
data16
clc
enter
push
pusha
mov
jns
cwde
movs
scas
mov
or
scas
inc
adc
or
mov
inc
cmp
or
mov
dec
sub
xchg
or
hlt
inc
inc
jg
push
dec
jl
call
mov
pop
add
inc
xchg
push
out
xchg
xchg
dec
shl
cmp
or
xchg
nop
fs
or
iret
mov
inc
xchg
je
shl
or
pop
repnz
daa
imul
mov
ins
lods
sub
add
push
movs
dec
dec
imul
test
ins
and
push
jo
cmps
icebp
or
xchg
add
jno
cmp
inc
adc
std
jb
je
pop
fwait
xor
mov
nop
nop
mov
mov
leave
sbb
je
adc
push
rcl
cmp
ret
adc
push
sahf
mov
jno
xor
push
fiadd
jne
mov
mov
or
test
add
pop
push
shl
sbb
pushf
js
push
scas
xchg
jnp
or
inc
arpl
and
fsubr
cdq
push
xor
push
call
or
adc
ins
inc
rcr
outs
mov
movs
sbb
cmp
aas
adc
sbb
xor
sar
ins
ss
(bad)
xor
popf
sub
mov
mov
lods
fwait
das
shl
jb
pop
dec
push
inc
mov
inc
inc
adc
add
push
inc
test
dec
push
aaa
fnstsw
div
jne
mov
or
repz
inc
dec
ror
cmp
enter
rcl
sar
shr
mov
stc
inc
movs
cs
fdivr
pop
loopne
das
push
jns
push
sub
call
lock
jl
adc
xchg
clc
push
mov
sbb
loope
cs
fld
xchg
loope
sub
rcr
sbb
jns
pop
sub
and
or
daa
sub
aaa
dec
loope
(bad)
popa
sub
psllq
fdivr
xor
repnz
inc
ss
test
dec
or
adc
add
adc
pop
lods
push
xor
arpl
xor
sub
cmp
pop
or
call
push
xchg
lahf
jo
retf
sub
cmp
pop
add
inc
js
je
add
stos
cmp
and
xlat
shl
adc
test
add
pusha
jb
and
inc
sar
mov
aad
add
or
or
adc
in
push
in
fbstp
pushf
adc
test
pop
std
fcom
add
and
xor
adc
das
lods
arpl
iret
sub
nop
(bad)
call
mov
add
scas
repnz
mov
add
push
push
inc
push
dec
outs
retf
pop
pop
ins
push
push
movntq
pop
in
cmp
mov
retf
call
pop
clc
jnp
sbb
retf
sbb
aas
mov
leave
push
sbb
icebp
jmp
dec
cmp
dec
dec
add
add
sub
enter
and
and
loop
sbb
cmp
fwait
dec
mov
pop
inc
sbb
cmp
out
sbb
sbb
(bad)
push
aas
sbb
rcl
es
push
ins
imul
ss
pmulhw
cld
jmp
pop
outs
punpckldq
leave
leave
cdq
in
inc
and
pop
inc
inc
pop
sbb
add
add
(bad)
fistp
or
add
add
(bad)
(bad)
dec
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
hlt
push
cmp
mov
loopne
cmp
(bad)
in
jmp
add
jmp
out
jmp
jmp
inc
loope
loopne
(bad)
fdivrp
(bad)
cmps
(bad)
(bad)
fcos
fdivr
xlat
icebp
pop
icebp
(bad)
call
call
call
call
call
call
dec
dec
dec
dec
dec
call
dec
push
add
(bad)
repnz
cmps
stc
add
and
sbb
adc
call
add
push
fs
sar
sub
lahf
out
pushf
lods
mov
fldcw
in
mov
cmps
push
js
push
cld
fidivr
int3
dec
ds
fs
fdiv
inc
aam
inc
fmul
push
loopne
mov
mov
ins
pusha
scas
mov
sub
mov
(bad)
(bad)
in
loop
sbb
pop
cmps
stc
mov
push
sub
lods
mov
and
iret
neg
movs
rcr
adc
into
cld
fbld
ds
mov
xor
cmps
push
nop
addr16
jnp
in
pop
pop
mov
hlt
enter
mov
clc
adc
mov
fidivr
jmp
push
dec
xor
adc
nop
stc
and
test
jl
push
fs
push
arpl
imul
push
cmp
and
ret
push
jo
add
or
or
inc
adc
or
push
pop
pop
mov
or
bound
inc
jb
cmc
sub
push
test
sbb
inc
pop
fsub
add
push
cmp
call
fstp
dec
jns
add
popf
dec
jmp
jecxz
std
or
add
add
lock
or
add
mov
jg
or
sbb
(bad)
or
fld
call
and
or
push
xchg
cmc
push
sub
test
and
pop
add
dec
pop
and
or
mov
mov
call
mov
or
dec
push
pop
inc
and
enter
xchg
or
mov
xor
mov
add
add
imul
adc
adc
lea
rcl
or
ins
hlt
je
inc
arpl
jmp
ins
push
and
xchg
scas
push
fidiv
add
adc
pop
push
lods
nop
mov
sbb
mov
pop
or
xchg
inc
outs
test
inc
mov
adc
sbb
xor
and
mov
ins
jecxz
xor
and
(bad)
aad
add
rol
push
xor
lea
test
call
cmp
mov
ds
ret
or
push
jp
pop
xchg
out
cmp
stos
push
add
(bad)
push
push
push
pushf
sub
rol
jecxz
ret
cmp
daa
jge
mov
mov
or
shl
enter
cmps
dec
sbb
cwde
dec
test
dec
dec
or
jbe
mov
xor
adc
cmp
mov
or
mov
es
cmp
mov
stos
add
mov
or
mov
lods
xchg
cmp
out
popf
lods
test
xchg
jl
push
mov
or
inc
adc
adc
sub
or
sbb
and
enter
(bad)
cmp
mov
mov
aaa
adc
pop
xchg
mov
mov
sub
add
ins
adc
iret
imul
ja
mov
aam
pop
xchg
test
jl
adc
leave
and
mov
add
push
js
xor
adc
mov
dec
fimul
xchg
and
mov
add
adc
pop
xchg
mov
cmps
adc
lahf
fcom
mov
cmp
cmp
xchg
lods
test
ds
cmc
and
cmp
stos
icebp
loop
sbb
call
push
loope
cmp
mov
(bad)
add
add
in
mov
add
cmps
xrelease
cs
mov
inc
ret
lods
push
and
mov
imul
pop
mov
(bad)
pop
pop
movs
inc
pop
add
out
dec
test
inc
jg
cs
pop
wbinvd
inc
mov
lods
sbb
mov
mov
or
mov
int
add
ror
or
pop
jo
add
sahf
jl
ins
xor
jp
fmul
hlt
mov
or
sub
outs
dec
and
push
cwde
mov
and
enter
or
icebp
adc
enter
push
jnp
enter
leave
out
adc
cmp
enter
mov
enter
push
jae
enter
retf
daa
mov
and
mov
pop
and
aaa
add
and
in
or
sub
and
and
scas
xchg
and
and
sti
sbb
fs
ins
mov
push
ss
push
enter
loopne
adc
xor
add
loope
inc
retf
adc
mov
fwait
(bad)
inc
sub
lds
add
add
dec
jmp
ins
movs
mov
pop
stos
mov
mov
mov
mov
push
inc
or
loope
stos
ins
sub
js
retf
or
retf
mov
pusha
jmp
pop
add
push
mov
or
inc
mov
sbb
push
or
add
jecxz
push
rcl
mov
xchg
cmc
or
or
push
nop
pusha
pop
add
pushf
psrlq
bound
stos
xor
shr
lods
ret
lods
dec
push
cmps
mov
mov
adc
popf
rol
add
jne
aaa
or
or
inc
mov
rcl
cdq
out
cdq
or
ins
lods
or
call
or
cwde
outs
and
pop
nop
sub
outs
retf
or
adc
or
leave
mov
jne
inc
and
lea
dec
mov
cld
test
aad
dec
shr
mov
outs
and
adc
lods
add
inc
das
and
rol
jns
dec
xchg
adc
or
aaa
inc
fisttp
cmp
xor
adc
out
lods
sub
and
sub
rcl
test
call
and
imul
push
pop
sub
sbb
pop
aaa
xchg
cld
call
(bad)
int3
jbe
add
inc
cli
jns
outs
or
or
dec
and
pop
adc
adc
clts
push
or
enter
nop
inc
repnz
scas
jmp
cmove
jb
sbb
pushf
repnz
dec
popa
je
xchg
inc
push
mov
addr16
ins
sub
add
pusha
sub
adc
cld
imul
imul
ins
sub
je
adc
xor
push
cmp
pusha
push
cmps
movs
or
pop
aam
or
js
popa
aas
add
lea
fwait
pop
add
and
stos
cmp
cmps
and
mov
mov
and
dec
aaa
jne
inc
ds
repnz
nop
and
inc
jne
inc
inc
cli
or
jbe
in
pop
push
xor
or
dec
cmp
xchg
adc
push
sbb
sahf
cmp
xchg
dec
pushf
or
addr16
mov
jne
add
mov
sub
call
add
jbe
push
push
or
std
imul
push
imul
mov
mov
mov
xor
or
ins
nop
adc
test
jmp
add
pusha
aaa
mov
add
int
mov
push
scas
add
and
mov
sub
or
inc
xor
ins
push
mov
xor
pop
or
jno
cmps
xor
mov
dec
ret
adc
add
shl
or
mov
fcom
pop
add
and
and
push
xchg
pop
int
inc
and
adc
mov
dec
and
mov
jno
lahf
xchg
or
ret
or
aam
or
sub
ja
jae
inc
test
js
movs
addr16
push
and
jo
imul
das
loop
push
adc
push
or
xor
loopne
inc
sbb
add
repnz
call
ret
scas
xchg
cld
retf
xchg
push
push
dec
call
xor
nop
cld
jg
sbb
cld
dec
push
add
push
push
add
push
shr
push
aam
push
mov
enter
sub
push
je
sahf
ins
out
push
dec
mov
sub
inc
inc
or
sahf
idiv
push
neg
pop
mov
add
add
or
push
int
fisub
inc
inc
jle
push
enter
cmps
fstp
push
fcomp
pop
pusha
mov
mov
push
pop
sub
das
(bad)
psraw
push
add
xchg
mov
or
jmp
int3
mov
mov
mov
iret
dec
sub
mov
stc
sub
in
jne
cld
rcl
int
add
psraw
lods
mov
pop
enter
push
add
and
in
add
in
xchg
int3
xchg
sub
cmps
xor
xor
xor
jnp
popa
popa
cmps
mov
cmp
or
fsubr
loopne
(bad)
ror
loop
dec
in
scas
add
loope
pop
and
add
daa
xor
dec
lock
sub
push
outs
sub
sub
add
sub
push
je
cli
lods
mov
(bad)
daa
dec
push
mov
push
les
je
xor
ret
sbb
add
push
xor
mov
mov
pop
add
adc
out
or
mov
cs
or
popa
cmc
mov
inc
or
inc
sbb
mov
or
mov
jbe
jl
mov
lods
sub
add
sbb
cmp
cmp
in
daa
sub
js
pushf
neg
(bad)
sbb
sbb
push
iret
sub
push
out
cld
dec
or
push
sbb
xor
fild
pop
dec
fld
dec
in
push
es
adc
sar
sub
adc
xchg
cmps
stc
inc
ds
pusha
adc
pop
dec
cwde
and
rol
rcl
xor
ins
xor
xor
cmp
mov
mov
popa
les
dec
jl
push
jl
xchg
int
in
and
lds
xor
vprotb
inc
push
xchg
in
dec
loope
pop
test
or
lea
add
mov
adc
pushf
gs
push
push
cmc
cs
retf
mov
das
test
inc
out
cmp
jmp
retf
jne
cli
mov
or
retf
retf
dec
cmp
cmp
cmp
cmp
xchg
fucomi
mov
sbb
das
repnz
xor
jle
repnz
call
call
call
cmp
pop
dec
pcmpeqd
sti
or
pop
sub
pcmpeqw
outs
scas
push
jbe
nop
sti
inc
aas
repnz
fstp
lds
sub
(bad)
cdq
and
imul
cvtps2pi
mov
int
jmp
add
inc
(bad)
jns
mov
mov
adc
dec
sub
add
xchg
adc
inc
pop
sbb
ss
cmp
ret
fild
add
add
cmps
cs
xchg
sbb
push
and
add
add
repnz
ss
jg
cmp
push
add
add
add
add
mov
mov
mov
mov
(bad)
jg
cli
or
mov
mov
mov
mov
mov
mov
mov
mov
(bad)
fild
xor
push
and
mov
mov
mov
ja
(bad)
mov
xor
adc
pop
mov
pop
int3
sub
mov
mov
mov
aas
in
loop
(bad)
(bad)
cmp
ret
inc
(bad)
mov
(bad)
mov
cmps
lock
pop
mov
adc
cmps
jo
(bad)
clc
push
mov
sub
sub
fild
nop
fidivr
inc
push
repz
data16
and
pusha
test
cmp
mov
ds
pop
adc
dec
mov
mov
daa
xor
xor
jge
xor
push
mov
sahf
jnp
jge
xor
in
or
push
push
pusha
mov
in
pushf
pop
push
in
ss
pop
je
xor
test
les
fs
iret
repz
pop
(bad)
push
pop
arpl
sbb
push
mov
int3
fcomp
cmp
and
loopne
jns
jns
mov
into
sub
call
or
rcl
inc
dec
test
out
push
mov
or
push
push
mov
inc
pop
xchg
out
imul
pop
and
push
test
fwait
in
jnp
mov
call
push
ds
fldcw
inc
aas
sub
jl
out
loopne
sbb
hlt
stc
test
sub
cli
sub
and
outs
idiv
push
mov
nop
mov
xor
div
sti
sahf
sbb
cs
pushf
inc
pop
sahf
neg
cmps
jbe
inc
es
dec
push
xchg
pop
mov
sbb
jbe
fidiv
repnz
fs
inc
or
push
add
lods
or
jmp
or
pop
push
and
test
lea
cmp
push
jp
call
into
pop
cmp
or
inc
popa
arpl
popa
jg
adc
push
sub
js
mov
data16
xchg
cld
pop
lods
inc
fadd
mov
add
test
dec
push
mov
sub
imul
xchg
add
or
and
adc
sub
fbld
or
dec
jle
hlt
out
jae
mov
push
mov
cdq
les
pushf
mov
stc
std
fst
push
add
mov
lahf
push
dec
scas
call
push
sti
test
outs
icebp
inc
sub
adc
bndstx
and
pop
dec
sbb
jmp
mov
mov
jo
test
or
aad
xor
xchg
push
or
aad
inc
ja
and
adc
add
mov
dec
xlat
outs
in
movs
fdivr
xchg
jl
inc
or
mov
jns
and
fadd
dec
push
jns
imul
pop
or
mov
mov
icebp
push
lods
lock
test
fs
push
sub
pop
js
test
ret
cwde
je
pop
cmp
sub
sbb
xor
inc
inc
dec
dec
adc
xchg
mov
es
ds
adc
jmp
adc
add
xor
jmp
aaa
int
sub
pop
dec
xchg
stc
popa
xlat
daa
(bad)
fsub
or
or
cld
aas
shl
mov
inc
sbb
sbb
dec
inc
ins
lods
inc
mov
cmp
and
dec
pop
lahf
addr16
addr16
and
push
or
in
fs
(bad)
lock
or
jl
movs
fld
or
es
dec
inc
movs
stc
adc
add
adc
mov
loope
mov
rcr
push
xlat
ja
popf
test
cmp
call
pop
xor
pop
sub
ins
call
mov
cs
inc
inc
sub
or
cs
inc
repnz
imul
inc
xchg
mov
add
inc
inc
inc
sub
xchg
xchg
gs
clc
and
sbb
sahf
mov
and
repz
rol
test
and
sub
and
movs
inc
or
inc
repz
jmp
fcom
hlt
repz
in
push
aaa
push
jl
xor
mov
stos
mov
adc
xlat
inc
sub
push
icebp
in
popa
mov
mov
sbb
xchg
or
mov
adc
cs
lods
mov
mov
xor
mov
leave
push
xor
adc
inc
mov
imul
or
sbb
add
pop
inc
in
into
test
mov
inc
dec
dec
xchg
inc
or
sub
pusha
dec
imul
rol
pushf
cmp
adc
add
add
neg
add
or
push
xor
push
repnz
imul
push
ret
inc
nop
ins
imul
mov
(bad)
xor
das
mov
or
push
sbb
push
or
inc
imul
xchg
cmp
inc
pushf
imul
jno
ins
add
out
stos
add
mov
and
inc
push
mov
mov
dec
pushf
jl
mov
ss
cs
push
adc
sete
push
(bad)
cmp
sar
xchg
and
dec
mov
and
inc
add
scas
in
cmp
jge
ja
dec
adc
mov
ja
add
ss
pop
out
jbe
cmp
jge
inc
dec
sahf
div
fmul
push
sahf
fadd
jecxz
mul
inc
dec
xchg
ins
add
fidiv
push
rol
push
(bad)
outs
ss
push
add
sub
cmp
sub
test
outs
sbb
pushf
mov
adc
sar
cmc
out
cmp
dec
jbe
cmovne
mov
mov
pop
inc
add
add
mov
out
outs
cmovs
aaa
add
xchg
xchg
mov
add
cmp
lahf
push
xor
pop
or
push
xchg
ins
fmul
sbb
dec
retf
or
xor
sub
push
mov
and
mov
push
or
jns
adc
and
pop
fmul
loope
cs
stc
push
cmp
fs
add
cld
or
or
and
mov
pop
adc
add
adc
push
mov
mov
test
pop
or
inc
in
pushf
cmp
adc
rcl
lea
mov
ret
sbb
fld
pop
int
dec
pop
das
mov
add
xchg
dec
dec
or
test
inc
movs
out
or
inc
xor
loop
je
sbb
push
inc
rcr
push
mov
jae
xor
movs
add
pop
jae
stos
adc
in
leave
cmp
mov
js
test
ret
das
sub
les
xchg
dec
das
imul
add
mov
pop
js
pop
pop
mov
aam
push
and
dec
mov
das
fsub
pusha
stos
pop
mov
ins
or
mov
rol
adc
fadd
pop
jne
test
dec
push
sbb
movs
or
add
pushf
mov
jmp
jo
(bad)
or
dec
add
dec
loope
jae
dec
(bad)
or
dec
mov
outs
bndstx
sub
fistp
or
or
mov
packssdw
ds
ret
dec
and
xor
mov
mov
xchg
bound
je
mov
and
xchg
sbb
imul
adc
pop
pop
sbb
movs
xchg
pop
dec
test
mov
cmps
loope
cwde
adc
sub
push
sahf
jbe
or
jg
and
push
adc
(bad)
mov
call
add
and
test
out
or
pop
add
je
push
stos
mov
(bad)
push
xchg
retf
push
in
nop
adc
xor
popa
pop
sub
and
sub
sbb
jbe
pop
test
loop
outs
pop
addr16
adc
nop
add
or
add
pushf
(bad)
jmp
sub
mov
inc
cmps
xor
sub
jnp
pushf
shr
shl
sbb
pop
nop
inc
into
jne
call
push
ror
jbe
cmp
sbb
xor
and
or
pop
or
push
dec
jp
dec
adc
xchg
add
add
push
xor
movs
test
popf
push
dec
add
pop
mov
lea
sbb
int
add
inc
jns
jb
cmp
jmp
fs
jnp
add
sub
push
mov
movs
lds
cmps
or
ja
imul
mov
ins
pop
adc
rdmsr
jns
add
xor
cs
dec
mov
cld
movs
fimul
or
xor
pusha
pop
repnz
arpl
add
fiadd
popa
lock
cwde
gs
movs
cmp
mov
and
bound
xor
push
inc
xchg
pop
enter
push
mov
ins
xchg
and
in
bound
nop
mov
and
and
(bad)
sub
and
and
mov
add
sahf
cwde
pop
push
pop
push
daa
jle
das
les
nop
mov
sub
daa
jo
adc
or
sbb
or
or
adc
pop
iret
xchg
scas
inc
movs
push
mov
add
push
inc
jge
adc
in
push
xchg
(bad)
lea
push
jb
jbe
movs
mov
jo
push
sbb
sbb
and
je
ins
ins
dec
adc
fld
inc
push
add
in
jbe
pcmpeqb
in
es
and
aad
jns
sub
push
xchg
dec
pop
pop
ds
or
push
xchg
call
mov
mov
add
xchg
push
dec
call
dec
xor
xor
mov
sbb
mov
or
pop
int
mov
push
inc
gs
jae
push
pop
int3
out
das
add
or
jae
lds
or
jge
xor
mov
pop
cmp
push
push
or
push
enter
fs
or
enter
js
mov
in
pop
sub
cmp
hlt
sti
inc
sbb
jbe
imul
inc
ins
xchg
aad
inc
add
and
retf
rcl
into
adc
int
dec
or
cmp
repnz
mov
int3
mov
lea
and
in
inc
adc
inc
push
stc
sub
jnp
lods
dec
aam
pop
inc
and
in
sar
jno
jl
adc
fsubr
sbb
dec
or
or
cmp
mov
lea
sbb
mov
(bad)
enter
rol
fmul
jns
out
pop
gs
pushf
out
sahf
mov
inc
fs
pop
call
imul
push
and
je
es
inc
popa
call
sub
cmps
call
inc
stos
aam
jp
ds
repnz
inc
mov
cs
sar
pop
test
xchg
stos
sbb
mov
int
popa
xor
pop
jno
pop
jb
adc
and
lods
sub
bound
xchg
cs
sbb
push
jae
outs
scas
cli
ror
pop
xor
in
dec
and
or
pop
jecxz
lahf
cmp
mov
stc
adc
imul
inc
(bad)
rol
xlat
jg
mov
xor
fisttp
enter
rcl
ins
sub
pop
or
test
pop
or
mov
pusha
sub
ss
test
fs
loop
xor
push
pop
or
les
cmp
jo
cmp
retf
je
popa
and
add
mov
pop
adc
add
cmp
jno
dec
clc
loopne
sbb
jo
leave
jo
push
or
adc
pop
pop
leave
and
test
mov
and
adc
add
xor
pop
inc
je
adc
mov
scas
movs
pop
adc
add
jne
or
popa
imul
sbb
ffree
xlat
dec
sub
xor
pusha
inc
cmp
pop
push
pusha
pusha
fild
ret
retf
mov
imul
add
aaa
das
dec
and
adc
ins
pop
mov
jmp
cmove
push
popa
lds
sub
ror
jecxz
push
sub
cmp
mov
adc
movs
push
add
stos
or
add
sub
out
pop
int
repz
test
jmp
mov
dec
jnp
add
push
daa
cmp
das
(bad)
enter
push
xor
sub
push
and
cmp
or
fs
call
popa
mov
add
es
push
dec
or
xchg
mov
iret
aad
sub
adc
pop
or
pop
ja
aaa
sub
sub
ins
inc
xchg
and
arpl
or
inc
das
jno
push
sbb
mov
jnp
addr16
push
adc
repnz
push
add
jns
mov
arpl
mov
inc
cmc
cmovno
retf
push
push
or
xchg
fsubr
jo
push
fs
lods
mov
pop
dec
cmc
dec
push
xchg
lods
push
add
je
push
add
or
retf
xor
add
pop
stos
cmp
sbb
(bad)
rol
push
dec
mov
inc
fs
cs
or
gs
inc
mov
inc
inc
cs
add
inc
mov
lods
out
test
mov
fwait
sub
pusha
cli
das
or
dec
mov
outs
retf
ret
add
cmps
or
fwait
xor
stos
push
jne
jo
je
pushf
or
loop
js
push
jmp
mov
inc
or
jge
(bad)
adc
mov
(bad)
frstor
and
fld
xlat
sub
data16
mov
jg
or
push
inc
repnz
fist
pop
in
mov
sub
or
loopne
adc
jno
shl
(bad)
sbb
add
imul
out
xchg
or
dec
add
dec
add
push
out
mov
pop
dec
xchg
(bad)
dec
mov
jb
jb
adc
mov
ret
clc
test
or
ret
push
and
sub
push
and
(bad)
int
push
leave
adc
push
mov
mov
dec
push
jbe
adc
test
and
ror
pop
add
add
enter
movs
adc
adc
add
sub
shl
jne
test
mov
das
mov
mov
das
sub
fadd
and
jnp
and
addr16
aad
push
movs
mov
pop
jmp
data16
adc
ins
and
or
lods
sub
or
inc
and
(bad)
cmp
sbb
test
fnstsw
or
jae
cmp
fist
pop
pop
push
xchg
ins
mov
repz
ins
and
imul
mov
dec
pop
push
js
xchg
mov
mov
jle
lahf
pusha
or
add
popa
mov
xchg
or
inc
bound
lar
inc
adc
popf
test
jae
inc
repnz
test
loopne
ins
jns
mov
mov
pushf
mov
sub
xchg
jmp
mov
jecxz
cmp
jl
sbb
push
ins
adc
dec
das
(bad)
jl
mov
inc
imul
adc
push
(bad)
push
xchg
mov
not
sbb
cmp
jg
dec
loope
sbb
int3
push
xchg
mov
and
outs
cli
or
sbb
and
cmp
pop
xchg
mov
or
pop
sbb
inc
fcom
jns
dec
in
and
xchg
jo
(bad)
push
xchg
(bad)
(bad)
jp
push
inc
and
xchg
(bad)
loopne
add
mov
es
das
cwde
sub
outs
stos
push
pop
jg
sbb
mov
push
cld
ret
and
mov
push
addr16
jmp
nop
xor
rol
mov
add
mov
add
fcomp
jne
inc
test
dec
cmp
push
in
push
mov
xor
jo
mov
jno
jno
push
sbb
test
mov
push
rol
dec
push
xor
xor
lock
jl
inc
sbb
inc
sub
(bad)
sti
sar
(bad)
push
xchg
mov
(bad)
loopne
mov
inc
imul
inc
ins
and
cmp
dec
dec
xor
xor
pop
adc
push
repnz
lahf
dec
jb
cwde
push
js
sub
jnp
mov
scas
jae
je
in
test
dec
mov
sar
jo
sub
mov
pop
inc
cmove
leave
add
xor
adc
and
out
dec
push
call
ret
cmps
rcr
mov
add
xchg
call
rcl
pop
aaa
(bad)
int3
loop
pop
loop
daa
pop
mov
outs
jns
add
xor
dec
mov
sbb
push
es
push
mov
loope
adc
add
je
je
repnz
jb
je
paddq
jne
jae
xor
stos
stos
cld
cmp
add
jbe
mov
sbb
lods
sub
cmp
jg
jbe
(bad)
push
jb
mov
mov
nop
shl
ret
ds
add
and
ins
sub
and
bound
aad
in
sbb
push
jp
mov
add
dec
shr
mov
rcr
fnstsw
je
jae
mov
in
jg
mov
dec
inc
jge
dec
pop
add
mov
aas
or
mov
mov
add
pop
fld
add
xchg
push
push
push
mov
mov
mov
adc
movs
scas
pop
mov
aaa
sub
jbe
push
xor
cmp
jne
(bad)
and
or
and
xchg
xchg
das
add
fstp
xchg
sub
xchg
test
js
mov
dec
rcl
add
pop
rol
and
xchg
in
jo
es
lock
push
push
jl
loopne
add
add
cmp
push
ss
movs
xor
sub
add
add
je
adc
retf
xor
lea
sub
outs
adc
popa
sbb
inc
nop
xchg
aas
movs
fnstenv
xor
mov
xor
adc
mov
std
inc
je
push
and
pop
sbb
cmp
inc
xchg
push
cmovb
fild
push
ret
and
ds
add
sbb
adc
mov
mov
add
mov
push
fstp
mov
pop
cwde
aam
sbb
jne
push
mov
jae
das
xor
add
js
inc
push
push
gs
jge
or
xor
clc
push
pop
push
and
pop
adc
imul
mov
adc
call
mov
test
loopne
mov
fwait
js
loop
sub
sti
sbb
loopne
mov
sbb
inc
pop
std
je
arpl
mov
inc
or
sub
cmp
xchg
jle
mov
push
cmp
ins
inc
and
dec
shl
mov
test
outs
inc
fistp
inc
or
push
inc
mov
pop
nop
outs
mov
xabort
mov
push
(bad)
imul
aas
or
inc
inc
dec
adc
and
xor
adc
xchg
xchg
push
dec
es
add
hlt
repnz
xor
adc
lea
dec
movs
jge
call
add
dec
jo
movs
dec
push
xor
ins
in
neg
jo
jmp
xchg
sbb
outs
out
fst
or
push
nop
(bad)
test
clc
jbe
adc
std
cmp
jne
mov
jecxz
mov
stos
mov
popa
call
ss
es
je
mov
ds
adc
in
add
jge
cmovno
into
enter
inc
mov
dec
int3
jle
imul
xchg
mov
xor
add
push
cli
adc
dec
xor
jle
adc
fild
jnp
or
add
(bad)
std
in
in
jg
or
or
retf
or
push
or
fisttp
inc
fisub
outs
jo
rcl
inc
inc
int3
jle
inc
or
sub
pop
mov
or
test
adc
test
inc
cmp
adc
dec
pusha
dec
mov
or
mov
push
jl
xchg
add
imul
out
retf
mov
sub
or
aam
pop
(bad)
sub
pop
movs
movs
psubusw
lods
aas
jp
sub
outs
sbb
cmp
fcomp
ins
call
cmp
fnstcw
add
lahf
mov
bswap
enter
ins
aas
ss
push
jmp
popa
loopne
and
cli
jbe
mov
mov
push
mov
mov
mov
sar
jp
or
jne
test
cmp
cmp
mov
and
pop
es
xchg
and
sbb
sub
jp
or
int
and
enter
clc
push
pop
nop
xchg
mov
mov
shl
or
shl
sbb
xor
shl
sub
xor
dec
shl
xor
inc
inc
dec
and
jno
cmp
lea
iret
push
lea
mov
adc
jbe
pop
icebp
ins
sub
scas
sub
in
adc
(bad)
jecxz
cmp
je
sub
add
xchg
scas
sub
mov
add
nop
mov
and
and
fucomip
adc
addr16
fist
cmp
inc
pop
outs
bound
inc
rcr
clc
add
(bad)
fldpi
outs
(bad)
adc
add
loope
test
pop
fdiv
add
jne
mov
mov
push
dec
inc
add
mov
add
jmp
cmp
mov
add
outs
lea
add
add
pop
std
and
mov
adc
mov
pusha
sub
add
out
mov
imul
sbb
scas
cmps
std
dec
ret
or
mov
add
or
rcl
rcl
(bad)
sbb
outs
push
or
cmp
push
jne
out
inc
or
ficom
mov
rol
in
mov
imul
inc
scas
call
rcr
adc
or
or
cpuid
in
pop
es
daa
or
inc
loopne
and
adc
movs
lahf
mov
inc
movzx
or
nop
sub
sub
pushf
sbb
adc
rol
in
cmp
or
pop
cmps
adc
xor
js
mov
dec
mov
xchg
dec
and
inc
and
adc
ja
and
scas
and
jno
fcom
mov
rol
cmp
push
pusha
mov
push
je
cmp
add
dec
lea
fst
fs
adc
adc
out
push
or
add
xchg
xlat
fiadd
pop
enter
sti
xlat
pop
ret
adc
lock
es
or
inc
movs
add
hlt
and
push
aas
xor
repnz
sub
popf
fs
je
sub
and
push
push
ror
adc
fadd
cmc
loop
xchg
enter
std
ins
lea
mov
adc
pop
push
push
jne
xchg
fbld
fld
cmps
mov
iret
xor
rcl
cmp
imul
movs
adc
lea
sbb
add
or
or
clc
ja
adc
jmp
cmp
jne
sahf
and
js
dec
aas
or
push
les
add
add
add
dec
jge
jns
data16
popf
shl
fldenv
cwde
adc
add
cmp
and
arpl
and
es
cmps
idiv
inc
fwait
nop
pop
jae
add
inc
jmp
cmp
sbb
ja
inc
sbb
push
bound
jmp
dec
stc
add
add
mov
dec
lock
movs
sti
rcl
sbb
test
adc
pop
inc
fnstenv
xchg
ret
mov
test
movs
inc
je
mov
bound
sub
test
popa
cmovle
and
dec
adc
mov
dec
loop
add
bswap
pop
add
aad
xchg
adc
add
popa
adc
cmp
psubusb
cmps
loope
cmp
cmp
add
ret
sahf
nop
test
xchg
mov
xor
or
(bad)
pop
adc
nop
fisttp
mov
dec
pop
xlat
sub
scas
push
jo
adc
lock
cmp
ins
add
push
imul
les
jbe
and
cmp
rcl
mov
pop
inc
cmp
pop
jl
icebp
adc
inc
mov
add
add
clc
adc
ins
or
inc
inc
dec
test
sbb
es
or
dec
inc
pop
xor
pop
dec
test
and
scas
div
or
inc
xchg
in
inc
cmp
pop
and
and
pop
adc
stos
lahf
call
mov
pop
dec
and
clc
cld
pop
add
fwait
(bad)
fiadd
or
hlt
or
lock
popa
nop
ror
jbe
dec
push
push
mov
push
sbb
pop
movs
push
mov
xor
push
xchg
fld
mov
dec
lock
pop
jmp
hlt
lods
je
jge
repz
add
mov
jmp
inc
jns
jb
jne
adc
sbb
lds
cld
dec
mov
mov
outs
mov
es
lock
add
ja
or
push
mov
neg
xor
ss
jb
(bad)
and
retf
fwait
out
or
push
inc
add
jo
cmp
dec
cmp
lock
loope
sbb
ins
bound
xchg
in
pop
into
add
adc
xchg
test
inc
repnz
outs
data16
sub
pusha
xchg
mov
jmp
inc
or
add
repz
jno
ss
jmp
lock
mov
imul
sbb
mov
sub
dec
mov
call
cmp
lock
int3
jp
push
and
sbb
xchg
imul
push
mov
test
mov
push
add
arpl
mov
adc
mov
cmp
je
push
jp
(bad)
add
out
inc
or
int3
mov
pop
xor
xor
ins
xor
mov
in
es
mov
popf
test
in
out
inc
or
out
xchg
add
add
or
jg
icebp
dec
adc
inc
popa
and
cmp
xchg
cs
xchg
sub
push
jo
mov
pop
jmp
pop
mul
sti
and
jmp
pop
addr16
mov
(bad)
hlt
jmp
sbb
xchg
gs
jmp
iret
test
fsub
or
xor
add
pop
mov
jp
mov
lea
pop
fst
inc
pop
pop
mov
ss
jge
add
push
test
mov
sbb
addr16
xor
push
xchg
push
aad
cmp
sbb
jbe
adc
es
jmp
adc
(bad)
mov
sub
(bad)
push
daa
xor
ror
out
cs
loope
adc
adc
aaa
inc
mov
ret
pushf
mov
inc
push
and
push
mov
mov
(bad)
xchg
mov
or
jmp
xchg
inc
push
mov
mov
sub
movs
lods
sub
mov
add
retf
mov
inc
lods
pause
fld
jmp
fadd
adc
mov
sbb
cmc
jmp
pop
fcomp
hlt
call
pop
sub
out
push
or
pop
test
push
jl
sub
and
sub
push
repz
xchg
je
fsub
sbb
dec
add
xchg
sti
inc
sub
cmps
shl
or
mov
or
mov
retf
adc
or
push
add
pop
pushf
ins
mov
(bad)
iret
lock
popf
xchg
sbb
in
sbb
dec
pop
jle
pop
aam
hlt
adc
mov
fild
scas
cmp
cs
jne
or
and
pop
js
push
xchg
cwde
jne
imul
loopne
into
mov
dec
add
push
jmp
inc
leave
test
in
lock
pushf
inc
dec
fcomp
sbb
push
dec
inc
add
retf
jno
mov
cmps
fstp
nop
data16
dec
push
xchg
call
or
aam
dec
retf
pop
push
inc
or
cmps
movs
add
or
test
mov
sahf
mov
pop
jne
pop
xchg
scas
push
sbb
jo
xchg
xchg
aas
mov
(bad)
sbb
loop
in
and
xor
mov
add
in
sub
movs
je
(bad)
inc
add
outs
repnz
ds
ss
sub
inc
add
(bad)
xor
push
or
shl
call
imul
pop
adc
sbb
and
sub
adc
push
mov
int
jmp
and
lea
mov
ret
aam
sub
je
adc
adc
or
mov
inc
add
push
arpl
mov
mov
pop
outs
je
jp
adc
jmp
pop
add
push
inc
clc
dec
xchg
push
push
aam
mov
mov
mov
retf
jmp
sar
push
repz
add
jo
pop
ret
jb
mov
cmp
or
and
lahf
mov
cmp
nop
mov
add
and
cwde
data16
cmp
or
sub
or
xchg
sub
cmp
xor
or
retf
mov
dec
in
push
mov
mov
add
clc
add
mov
sbb
bnd
xchg
sbb
sub
es
push
stos
fwait
pusha
mov
dec
in
adc
out
push
out
mov
repnz
stos
add
jmp
daa
sbb
ins
xchg
xchg
je
aam
add
fwait
stos
cmc
mov
pop
daa
jne
xchg
pop
stc
mov
push
cmp
mov
loope
sbb
mov
and
and
add
ret
fcomp
sub
loope
imul
sbb
add
add
push
add
ss
push
and
push
cmp
xor
add
and
inc
and
es
sbb
clc
jne
inc
xor
jp
pop
pop
add
add
xor
sbb
sub
and
mov
xor
adc
fild
sub
push
or
mov
das
mov
xor
mov
ins
add
adc
loope
repnz
lock
jnp
shr
xor
mov
call
(bad)
fs
dec
inc
popf
(bad)
ds
mov
adc
cmp
lods
div
outs
pop
test
dec
xchg
push
and
add
scas
ins
hlt
jno
cmps
xchg
xchg
sub
mov
add
jg
popa
add
adc
ja
adc
sbb
outs
dec
sub
pop
test
adc
sub
cmp
and
mov
cmps
fistp
mov
test
pop
lea
cmps
loope
add
add
aam
shl
icebp
cmp
pop
lock
iret
js
pop
pop
adc
xor
pusha
mov
sub
enter
mov
push
push
adc
mov
scas
inc
pusha
pop
movs
sbb
mov
jae
push
addr16
xchg
in
mov
pop
adc
xchg
stos
call
mov
or
arpl
jg
push
or
mov
sub
cs
and
push
adc
or
or
push
xchg
fimul
add
push
movs
test
add
dec
je
add
pusha
adc
nop
jmp
cld
test
jbe
cmp
jae
xchg
xchg
out
jae
xor
dec
or
adc
inc
fldenv
dec
je
fldenv
fstp
shl
or
push
add
dec
fidiv
or
inc
imul
cmp
pop
or
push
and
cmp
inc
cli
imul
sbb
pop
add
ret
test
imul
je
daa
push
aas
add
jmp
and
aam
rol
pop
sub
jecxz
push
hlt
gs
shr
enter
push
add
add
xlat
ss
push
mov
les
jg
add
test
add
scas
fwait
xchg
cmp
inc
sbb
sbb
pop
inc
add
rcr
xlat
sub
popa
add
add
dec
daa
or
(bad)
mov
mov
adc
les
inc
jno
push
xchg
out
ja
sbb
push
aas
xchg
xchg
pop
cmps
arpl
lea
bnd
mov
pop
or
(bad)
jle
mov
adc
imul
sub
pop
or
and
iret
sbb
push
and
push
push
and
add
pop
push
ret
sub
and
mov
mov
xor
or
push
cli
mov
sbb
das
dec
xchg
cmp
xchg
add
add
nop
mul
fisub
pop
das
xchg
adc
jge
adc
add
pop
pmaxub
(bad)
cmp
cmp
rol
js
jmp
(bad)
sti
jne
xor
xor
pop
scas
pop
cmp
add
loope
fcom
mov
cwde
fsub
mov
(bad)
sbb
rcl
mov
mov
dec
pop
sub
dec
loop
test
mov
pusha
imul
je
pop
xor
loopne
and
inc
jae
out
sub
xchg
int3
dec
mov
push
pop
stc
cdq
fwait
sbb
jo
aas
and
adc
test
jl
out
jg
mov
push
push
ins
or
jb
jo
and
pushf
in
pop
mul
lods
pop
jp
sbb
movs
fcmovnu
push
lods
add
xchg
and
push
mov
ret
in
pop
adc
(bad)
rcl
scas
add
mov
ss
fist
stos
mov
jb
adc
dec
fcomp
clc
add
push
ins
mov
push
in
ficom
push
and
push
mov
mov
lea
mov
adc
inc
adc
adc
sti
or
sar
or
and
test
push
mov
push
pop
push
data16
jae
or
xor
cmp
adc
jae
inc
mov
dec
cmps
jmp
and
adc
xchg
jl
and
or
adc
adc
mov
ret
pop
mov
into
push
inc
pop
test
je
cmp
test
and
fld
js
fcom
inc
imul
and
adc
mov
not
push
aam
xchg
cwde
adc
mov
test
(bad)
cmp
aam
popf
leave
add
add
mov
push
push
js
adc
push
mov
(bad)
cmp
(bad)
lods
jae
sbb
and
xchg
xchg
retf
fistp
push
pop
adc
inc
pushf
test
inc
push
jne
adc
xchg
out
sti
push
jne
sub
outs
neg
enter
and
pop
mov
or
ret
xchg
xor
jge
ja
mov
cwde
js
inc
mov
arpl
shr
push
or
and
lods
and
pushf
fisub
lock
cmp
lock
iret
icebp
push
mov
inc
or
fnstsw
and
inc
mov
sar
out
ret
xor
add
cmps
int3
or
aaa
ins
loop
lock
arpl
pop
mov
(bad)
xor
jmp
inc
xchg
cmp
sub
pop
test
push
fst
adc
mov
or
or
cs
shl
jmp
or
rol
adc
cmps
pop
pop
test
inc
ficom
jmp
nop
xchg
add
and
or
call
mov
shl
movs
or
in
pop
mov
push
xor
push
mov
xor
or
jb
pop
and
and
adc
lods
xchg
sbb
pop
adc
popa
cmp
pop
xchg
mov
dec
(bad)
xor
xchg
adc
cmp
in
xchg
mov
and
dec
mov
or
cmp
cmp
add
adc
imul
fdivr
js
push
fs
pop
cmp
push
cmp
xchg
fld
xchg
cmp
xchg
mov
pop
shl
mov
adc
dec
pop
push
add
ror
mov
cmp
jne
xor
sub
loope
xor
adc
sbb
fidiv
mov
(bad)
fwait
cmp
inc
cwde
jne
inc
mov
cli
xchg
adc
cmps
mov
clc
or
mov
dec
pop
add
inc
loope
cmp
mov
jle
ret
pop
cli
adc
adc
sub
mov
enter
lods
call
push
cmp
dec
mov
mov
inc
mov
or
add
mov
inc
add
mov
(bad)
jae
adc
rcl
(bad)
iret
ss
and
mov
or
cld
adc
push
push
pushf
lock
and
out
adc
in
sub
popa
enter
in
push
adc
inc
test
ret
add
in
cmc
call
xchg
fistp
adc
add
test
test
dec
cmps
cmp
or
repnz
mov
sbb
xor
rol
xchg
mov
sub
mov
mov
xor
jns
nop
sbb
das
xor
fdiv
jo
in
adc
mov
lahf
test
mov
popf
cld
ja
add
rcl
and
sahf
inc
scas
dec
push
loop
xchg
mov
or
loop
add
movs
add
mov
pop
outs
iret
mov
movs
sbb
test
int
push
fcmovnu
imul
shr
neg
push
outs
sbb
or
or
loopne
dec
out
js
lea
sub
dec
jg
cli
fstp
mov
cmp
sub
xchg
and
ins
xlat
cmovnp
inc
scas
aam
aaa
jns
pop
cmp
test
ror
arpl
stos
fld
and
inc
mov
fwait
push
cli
in
xor
les
lock
xor
sbb
mov
das
gs
lock
sti
jmp
pop
daa
adc
adc
adc
arpl
push
and
lods
mov
es
shl
add
jmp
xor
add
lds
add
or
fdivr
cmp
aas
es
ret
hlt
jmp
rcr
lods
pop
(bad)
movs
jae
sbb
dec
imul
adc
mov
sub
aam
adc
in
add
adc
xor
dec
mov
adc
sbb
pop
sub
add
sbb
sub
push
adc
aad
cmp
mov
sar
ja
xchg
lea
inc
adc
les
test
fs
ret
cli
das
fild
xchg
fwait
je
xor
aam
mov
in
jg
inc
sar
xor
add
dec
adc
mov
stos
and
mov
out
and
adc
cmp
sbb
add
or
dec
and
sbb
dec
inc
jmp
mov
add
and
xchg
(bad)
(bad)
cmp
imul
push
push
lock
ror
movs
enter
fisttp
or
test
add
loopne
dec
repnz
xor
sbb
mov
and
cmp
sbb
mov
cmp
movs
and
test
ret
pop
adc
sar
push
xor
and
cmp
sbb
mov
add
push
fbstp
call
pushf
adc
mov
add
dec
scas
push
dec
scas
push
call
fst
sub
stc
les
(bad)
dec
or
cmp
or
and
movs
outs
aaa
out
out
mov
jmp
test
jmp
data16
or
jl
test
xchg
push
jbe
adc
push
push
ja
fnstsw
push
sbb
cmp
je
mov
rol
pop
fwait
sar
inc
popa
mov
js
pop
xchg
pop
add
sbb
mov
sbb
popf
stos
pop
adc
jne
(bad)
outs
rcl
xchg
stos
sbb
pop
or
sbb
int
pushf
jo
hlt
movs
xor
outs
stos
adc
jmp
pop
adc
add
not
adc
mov
inc
lds
push
and
mov
cmp
add
or
test
jb
je
xor
ret
xor
push
pop
and
lods
mov
mov
rol
sahf
cmp
or
pop
daa
out
int3
test
inc
adc
mov
test
je
add
and
popf
adc
push
push
mov
jno
or
movs
or
lods
xchg
hlt
push
ret
clc
mov
add
lsl
js
loope
push
repnz
call
movs
stc
hlt
mov
cs
in
mov
mov
adc
add
mov
out
leave
imul
cmp
sub
add
mov
packssdw
adc
in
in
sub
jg
or
cmp
push
stos
int
dec
mov
push
push
into
or
and
(bad)
lahf
cmp
inc
sahf
int3
call
stos
icebp
and
push
mov
pop
ins
push
lods
out
jle
push
adc
mov
and
pop
mov
mov
data16
fsubr
aaa
daa
mov
adc
dec
fst
mov
or
test
mov
fadd
add
ins
loop
lea
inc
fsubr
ret
adc
sub
and
imul
adc
push
dec
mov
int3
(bad)
xor
arpl
or
movups
adc
outs
or
inc
jb
iret
cmp
xor
add
mov
push
test
pop
cmp
inc
adc
das
mov
adc
push
stos
mov
js
sbb
or
or
add
xor
(bad)
sahf
or
nop
imul
push
jp
adc
push
ins
lock
aaa
or
nop
cdq
bndstx
shufps
or
ficomp
mov
fwait
and
fisub
ss
add
mov
idiv
mov
jl
inc
mov
sbb
addr16
cmp
scas
and
js
push
je
ret
xor
gs
xchg
sbb
inc
jb
inc
loopne
mov
sbb
mov
mov
outs
movlps
loopne
and
movs
call
nop
pop
sbb
test
adc
push
mov
fcmove
outs
push
mov
xchg
push
sbb
jmp
or
outs
out
aaa
or
push
inc
mov
dec
sbb
pop
aam
js
adc
jno
jo
mov
lahf
jmp
inc
adc
push
inc
sbb
stos
je
cmp
mov
or
je
inc
adc
adc
or
inc
rcl
pusha
push
sbb
shl
gs
pop
cmp
scas
cdq
and
inc
je
adc
push
push
stc
cld
jmp
mov
inc
rcl
test
inc
push
mov
in
fcomp
mov
or
sbb
add
(bad)
in
mov
sbb
out
(bad)
xchg
arpl
cmp
and
sbb
mov
dec
dec
push
adc
cmp
inc
sbb
mov
adc
jle
sbb
fsubr
push
lock
or
cwde
xchg
cdq
sbb
mov
lss
popa
adc
test
sbb
and
adc
jne
inc
out
imul
jae
and
sub
movs
rol
std
push
cmp
out
aas
loope
popa
sub
aam
inc
rcr
int
push
mov
add
daa
ins
or
mov
sub
(bad)
nop
sahf
add
daa
leave
imul
imul
or
or
push
adc
pop
inc
retf
add
loopne
xchg
daa
push
leave
or
push
ja
sbb
add
jmp
xor
adc
bound
test
jmp
sub
je
cmp
pop
mov
int3
jmp
mov
inc
jne
inc
pop
lahf
push
fisub
test
clc
shl
xor
stos
cmp
scas
rcl
dec
add
mov
pop
sub
das
(bad)
adc
daa
cs
dec
dec
pop
push
cmp
mov
adc
dec
in
popf
push
inc
sbb
mov
test
pop
ror
xchg
test
dec
inc
scas
sub
push
fnstcw
in
mov
or
cld
add
push
popa
or
sbb
and
xchg
add
xchg
push
cwde
xor
push
mov
xchg
mov
or
inc
loopne
(bad)
leave
inc
jo
aad
or
jno
jne
xchg
adc
and
xor
jno
fsub
dec
push
lock
mov
xchg
(bad)
jb
scas
movs
jge
cmp
test
fcomp
pushf
pop
(bad)
dec
xor
mov
xor
popf
mov
cmp
or
or
adc
jae
lahf
test
xor
push
out
inc
sbb
aam
(bad)
js
and
jle
icebp
inc
jg
into
shl
or
fiadd
add
test
sub
or
push
call
or
xor
push
sbb
imul
out
aad
inc
lock
or
pop
and
push
and
lods
ss
mov
repnz
stos
add
bound
or
lock
inc
retf
xor
xchg
popa
push
xchg
jmp
bound
(bad)
push
jae
stos
retf
adc
cmc
adc
and
mov
cmps
(bad)
or
and
stos
dec
adc
cdq
push
adc
xlat
sbb
dec
mov
dec
sbb
sbb
sbb
adc
imul
mov
sbb
pop
(bad)
stc
and
cmp
rcr
jl
mov
pop
fmul
fsubrp
aam
in
ins
adc
outs
adc
mov
mov
dec
xchg
sub
mov
add
mov
mov
inc
sub
inc
dec
xor
test
sub
sbb
pop
push
outs
push
mov
jo
fidivr
(bad)
dec
xlat
sbb
push
pop
shl
aaa
add
xchg
or
inc
xchg
daa
add
pop
add
mov
ins
scas
and
lock
xchg
or
sub
and
mov
cmp
xchg
xchg
push
call
dec
push
js
adc
jg
nop
test
je
push
scas
and
mov
ins
pop
add
idiv
mov
push
jae
adc
push
xor
dec
xor
mov
repnz
mov
sub
mov
add
imul
or
inc
fincstp
fdivr
xchg
retf
mov
loop
shr
sbb
sub
xor
add
clc
js
(bad)
xlat
xchg
xchg
ret
(bad)
bound
cmp
xor
adc
adc
jmp
fisttp
jb
dec
mov
bound
sub
xchg
xor
fmul
outs
sti
and
fmulp
cmp
lea
jmp
sbb
sbb
inc
and
add
test
xchg
arpl
clc
mov
sbb
in
push
cmp
pop
mov
ins
pop
mov
jge
push
test
dec
cmp
cld
(bad)
cmp
(bad)
mov
in
inc
mov
fcom
push
xor
or
leave
ret
dec
fwait
rcl
mov
rcr
ins
movs
jl
test
ss
das
mov
push
pop
push
mov
jge
ja
pop
push
and
cmp
or
xor
cmp
mov
sbb
xor
in
jo
aas
sub
test
add
add
jb
je
ds
and
dec
aaa
jno
xor
mov
cmp
and
dec
mov
cmp
mov
lahf
xchg
inc
or
xor
or
mov
xor
retf
adc
dec
cmp
add
xor
add
jnp
sub
and
sbb
xor
fld
imul
dec
push
push
cmovno
outs
jae
fisubr
aam
push
aam
mov
fdiv
les
add
popw
clc
jp
mov
pop
mov
push
jo
jne
cdq
mov
mov
xchg
sti
jmp
or
cs
xor
sbb
fsub
cmp
and
pop
call
fcom
(bad)
xor
mov
push
dec
pop
scas
std
mov
mov
xor
adc
xor
add
lahf
mov
js
pop
inc
or
stos
pop
loopne
leave
adc
or
aaa
mov
inc
in
or
jg
cmp
ss
imul
xor
and
mov
mov
(bad)
adc
leave
ret
push
add
adc
out
fadd
push
mov
xor
jge
add
inc
or
aas
movs
xor
fwait
je
sbb
shr
mov
cmp
and
cli
or
sub
and
arpl
in
mov
pusha
and
dec
pop
jno
pop
fcmovb
fadd
adc
popf
mov
inc
push
sbb
sbb
test
mov
xor
mov
adc
or
loop
sub
adc
or
jp
inc
adc
loopne
dec
daa
sbb
dec
push
out
iret
xchg
in
jo
push
push
and
scas
(bad)
add
sub
or
js
cdq
push
ja
nop
dec
mov
les
adc
adc
je
add
cmp
enter
or
dec
xor
or
ja
sub
add
sub
jae
(bad)
fisttp
sbb
and
mov
or
xlat
adc
cdq
pushf
push
mov
jns
and
mov
test
xchg
retf
inc
mov
ins
cdq
int3
enter
je
inc
mov
xor
jg
push
mov
xor
xor
inc
push
mov
in
mov
add
add
add
imul
add
sbb
lock
jns
jne
xor
pop
mov
add
mov
adc
fxch
leave
leave
ins
xor
or
or
imul
dec
dec
sbb
les
or
add
call
pop
add
or
xchg
int3
or
add
push
cmp
dec
or
add
pushf
out
xor
arpl
rol
push
cmp
or
mov
call
ret
xchg
pop
dec
cmp
add
cmc
aam
xchg
ja
mov
dec
sbb
jo
shl
test
rcr
xchg
xlat
xor
gs
dec
retf
mov
adc
lea
inc
cmp
xchg
imul
adc
ins
stc
lahf
mov
add
outs
rcr
push
or
sbb
sub
mov
call
ret
ret
inc
or
mov
call
std
or
mov
cmp
sahf
or
sub
adc
sub
cmp
fld
push
jb
add
cli
dec
or
xor
pop
jmp
(bad)
(bad)
bound
mov
dec
ja
xor
dec
jns
out
mov
stos
adc
add
push
adc
cmp
push
pusha
xor
sub
push
jo
es
stos
or
bound
icebp
cmps
mov
leave
cmp
daa
xor
or
es
repnz
retf
outs
jae
call
mov
or
add
dec
and
dec
dec
ret
adc
sub
imul
call
jmp
sbb
sbb
or
stc
adc
push
push
pusha
dec
cli
into
push
jno
inc
xor
pop
mov
cmp
pop
out
sub
shr
repz
jns
ror
shr
push
mov
xchg
aas
mov
pusha
hlt
cmp
scas
ds
sub
mov
dec
add
jmp
addr16
in
add
lahf
sbb
sbb
mov
inc
mov
inc
sbb
pop
lea
or
sub
xchg
jmp
sbb
add
dec
sub
mov
sub
out
and
clc
push
push
or
pop
rcl
or
mov
adc
push
mov
mov
pop
dec
push
add
jmp
add
call
push
in
add
dec
hlt
fiadd
inc
fdivr
ret
jae
push
fmul
or
dec
popa
(bad)
jbe
iret
and
cmp
push
nop
jo
lahf
clc
pop
loopne
mov
adc
popa
shl
arpl
dec
mov
push
pop
pusha
mov
hlt
pop
popf
jo
jo
and
outs
lds
sub
aaa
push
xchg
in
movs
clc
cmp
das
pop
inc
xor
jmp
cmp
rol
addr16
mov
test
retf
adc
mov
mov
push
(bad)
sub
push
sbb
jae
add
test
aad
into
jne
xor
push
cdq
inc
push
pop
jecxz
xor
test
sbb
pop
test
pop
leave
mov
test
lods
add
cs
lods
pop
and
jnp
mov
enter
int3
int3
push
test
jne
adc
jnp
adc
inc
ret
add
pop
in
stos
pop
mov
push
push
ins
jmp
lahf
cmp
mov
add
enter
shl
push
test
push
aam
std
adc
sbb
sbb
xchg
mov
dec
mov
pushf
pop
enter
nop
test
add
leave
mov
or
popa
and
cmp
push
rol
lahf
mov
jno
es
jmp
jb
pop
in
or
xchg
jo
or
aas
adc
mov
push
or
mov
sub
mov
mov
adc
add
and
(bad)
in
push
add
adc
ret
cmp
inc
xor
shl
fidiv
sbb
in
sahf
sub
sub
test
xchg
cmp
and
add
leave
sub
mov
push
lods
xor
mov
adc
xor
pop
or
(bad)
jg
adc
lea
push
xchg
shl
lahf
sbb
xchg
cmps
test
repnz
lock
and
(bad)
cwde
aam
ficomp
xor
mov
ror
xchg
and
scas
sar
inc
xor
dec
lock
xchg
icebp
cmp
je
xchg
enter
pushw
xchg
adc
cmp
or
and
xlat
inc
xchg
rcl
or
repnz
and
(bad)
xlat
adc
loop
mov
mov
fdiv
sub
xchg
cmp
loopne
mov
mov
cmp
fisttp
mov
add
push
mov
pop
cmp
fwait
scas
jno
and
or
xor
adc
rcl
ins
and
mov
add
and
enter
aam
jbe
int3
scas
add
js
pop
xchg
scas
(bad)
push
ficomp
push
inc
inc
inc
adc
mov
fdiv
mov
loope
popa
xchg
dec
lds
adc
sbb
pop
push
pop
inc
fild
cld
push
daa
daa
stos
push
movsx
add
and
or
pop
and
loopne
sub
sub
popf
xchg
add
repnz
lahf
pop
inc
into
sar
imul
inc
jbe
sub
dec
adc
out
mov
mov
popa
sub
arpl
lds
mov
adc
nop
(bad)
push
aas
popa
inc
sub
add
xor
jne
xchg
or
mov
sub
les
add
les
in
stos
fidivr
mov
or
mov
in
call
cld
shl
je
push
int
lock
ja
(bad)
cmps
in
or
xlat
lods
xor
sub
sbb
jmp
popa
or
or
imul
es
test
push
adc
or
retf
or
pop
es
call
call
add
sbb
jb
pop
add
jne
mul
push
add
retf
or
add
inc
popa
not
call
scas
add
push
outs
aam
mov
and
outs
daa
test
mov
mov
aaa
xchg
jl
daa
iret
mov
push
ins
pop
pop
xchg
data16
sub
mov
inc
dec
dec
ror
sub
dec
add
sub
retf
shl
(bad)
enter
dec
dec
adc
pop
mov
add
adc
add
inc
out
shr
or
dec
(bad)
adc
fdivp
jge
lea
cmc
pop
icebp
stos
in
mov
add
jecxz
inc
ret
and
popf
xor
ja
push
xchg
pop
inc
outs
shl
mov
arpl
lods
inc
out
mov
loope
js
push
push
in
add
inc
push
add
loop
int3
xor
iret
(bad)
inc
and
(bad)
sbb
jns
sbb
test
push
or
mov
shl
add
pop
test
cmp
push
mov
aas
pop
sub
jge
out
inc
test
sbb
test
cmovg
cmp
jnp
push
and
push
xchg
dec
pusha
xor
push
dec
jmp
push
add
add
cmp
xchg
xor
sbb
xchg
(bad)
dec
mov
fwait
inc
outs
shr
inc
mov
scas
pop
pop
(bad)
adc
dec
jb
inc
inc
inc
jecxz
cmp
stos
les
aaa
rol
aaa
icebp
and
js
or
mov
mov
sbb
aam
jge
mov
jmp
je
push
adc
mov
adc
movs
or
or
or
adc
cwde
cmp
mov
sub
fwait
adc
push
shl
sub
xchg
shl
rcl
movs
mov
xor
push
or
push
inc
pop
pusha
sbb
mov
dec
ja
(bad)
inc
sub
push
cmc
call
nop
dec
or
movs
dec
dec
dec
sub
int
dec
sbb
inc
adc
aas
fs
in
xchg
xor
sub
mov
shufps
or
add
push
cld
add
jecxz
loopne
inc
clc
jge
loopne
pusha
adc
(bad)
lock
jo
ret
std
adc
xlat
shl
retf
pushf
das
loopne
mov
and
ror
mov
or
rcl
jne
xchg
lahf
jmp
mov
and
shl
out
dec
cs
jecxz
out
das
or
pushf
mov
fst
dec
ret
and
mov
mov
add
lahf
inc
daa
mov
xchg
pop
push
clc
gs
int
sbb
ins
sub
(bad)
push
mov
jge
cmp
mov
xchg
mov
(bad)
sub
jo
push
cmp
xchg
pop
xor
and
and
movs
call
adc
retf
and
in
pop
dec
or
push
adc
sub
movs
out
xchg
sbb
xor
pop
js
(bad)
movs
push
pop
sub
dec
cs
mov
in
mov
mov
or
dec
push
cmp
or
out
and
aaa
mov
rol
jb
inc
(bad)
cwde
pop
xchg
mov
inc
daa
inc
mov
les
xor
adc
shl
push
ret
ja
iret
adc
sub
xchg
out
(bad)
rcl
sub
scas
inc
push
out
data16
hlt
aas
or
add
sbb
out
add
std
jns
fiadd
dec
dec
jae
add
or
enter
pop
fsqrt
jo
mov
test
mov
rcr
and
icebp
pop
loope
call
add
ins
cmp
push
add
gs
sub
push
lock
mov
sub
sub
cmp
iret
jae
and
xor
and
xor
mov
jbe
cmps
icebp
inc
std
adc
mov
inc
add
pop
sub
ds
sub
or
push
aam
int3
push
cmp
jo
jbe
fistp
stc
je
or
pop
and
and
mov
sub
mov
add
jo
jl
(bad)
cld
jmp
add
or
das
dec
add
jno
(bad)
ror
rcl
aas
pop
(bad)
jp
sub
retf
rcr
adc
out
cs
sub
add
push
cmp
nop
or
or
imul
mov
cmp
xor
rol
iret
js
mov
mov
cmps
or
sti
mov
push
sbb
adc
jno
mov
or
je
adc
aaa
jb
add
cmc
out
sub
jae
or
cmp
popa
jbe
inc
popf
xchg
cmp
out
adc
jne
xor
add
lock
add
es
push
lock
push
loope
mov
cmp
add
push
add
adc
mov
rol
inc
ss
push
mov
(bad)
popa
inc
into
aad
dec
push
sar
or
test
push
xor
adc
fmul
xor
loope
lods
xor
push
jo
mov
or
sbb
inc
outs
dec
ins
sub
push
ret
addr16
adc
sub
mov
daa
in
adc
adc
sahf
adc
sbb
pop
push
addr16
add
add
push
add
inc
jmp
pusha
out
jmp
or
push
push
add
sbb
adc
push
repz
call
lock
(bad)
out
in
fistp
xor
popf
call
mov
retf
sbb
sub
jns
and
jmp
push
les
leave
dec
lods
test
mov
scas
or
ret
pop
mov
js
rcl
push
mov
scas
push
pop
fsubr
fcomp
push
or
pop
mov
cmp
adc
sbb
xor
test
sbb
ret
or
push
pop
sbb
add
add
sub
inc
out
jmp
ds
jne
mov
and
mov
rcl
push
xor
out
test
lods
pop
mov
sbb
out
iret
das
pop
repnz
pop
mov
xor
outs
xor
push
fild
test
mov
test
(bad)
push
or
inc
nop/reserved
test
clc
inc
lea
sub
push
call
jg
cld
push
push
or
sub
jl
dec
jmp
mov
jnp
mov
add
add
add
jle
mov
clc
add
fcom
add
add
mov
lea
cwde
bound
bound
sub
sahf
fmul
ins
cmp
sahf
test
retf
(bad)
je
mov
les
arpl
leave
dec
int3
add
sbb
mov
leave
popa
out
pop
call
in
nop
imul
mov
dec
ss
mov
mov
leave
xor
sbb
and
movs
and
pop
jp
shl
adc
jge
add
xchg
jmp
lock
lds
jle
mov
push
mov
mov
call
mov
adc
lea
sbb
nop
pusha
add
push
mov
jg
imul
addr16
mov
aas
ret
inc
ds
jecxz
ja
push
mov
fdiv
out
in
pop
push
or
sub
adc
pop
xlat
imul
aad
sar
aaa
jl
add
mov
push
int3
loope
loopne
shl
ror
movs
outs
outs
adc
push
sbb
mov
jecxz
pusha
ja
ins
and
mov
mov
pop
add
inc
dec
push
(bad)
and
mov
and
pusha
add
adc
xchg
scas
scas
mov
in
pop
mov
inc
mov
mov
jge
lods
call
out
shr
adc
les
hlt
or
xchg
add
adc
adc
jmp
cmp
lea
ror
sub
das
xchg
js
ja
je
neg
lahf
pop
ficomp
cmps
push
dec
add
mov
retf
psubq
pop
pop
push
mov
loope
ds
add
adc
pop
adc
dec
or
xor
movs
data16
adc
or
adc
ja
fld
jge
jmp
jne
aam
iret
or
jp
repnz
ror
dec
mov
mov
test
inc
push
mov
fcmovu
push
cs
sar
or
and
mov
or
jmp
sub
jmp
pop
jne
add
sbb
adc
adc
or
push
lock
xchg
sbb
fs
fistp
add
cwde
mov
jge
jmp
sub
jmp
arpl
jb
mov
nop
in
mov
sub
leave
sub
mov
out
mov
sbb
retf
inc
xchg
dec
sub
das
jb
cmc
cwde
cmp
test
xor
push
xor
xchg
stos
mov
xor
xchg
add
push
sub
outs
lods
or
lock
sub
dec
iret
ret
std
leave
sub
push
imul
scas
mov
xchg
xchg
popa
hlt
push
and
pop
clc
cmp
ja
cld
push
out
in
jns
fiadd
or
xchg
push
push
jbe
mov
out
sbb
add
jmp
or
into
test
(bad)
xor
inc
push
aad
lea
in
push
adc
bound
pop
retf
aam
or
mov
cmp
mov
cmp
sub
loopne
cdq
push
jns
inc
in
add
xor
push
cmp
jbe
out
xchg
sub
sub
jge
add
push
or
arpl
data16
fimul
pop
jmp
xor
jmp
xor
bound
leave
sub
aam
jg
dec
xchg
mov
adc
cmp
dec
daa
or
mov
and
lea
pop
pop
out
or
test
push
call
pop
cmps
dec
hlt
movs
and
pusha
pop
cmp
dec
sub
sahf
push
adc
pop
or
add
lods
add
sbb
push
add
mov
and
ss
sbb
cmp
xor
xchg
scas
lock
iret
jnp
imul
stc
push
push
ja
fld
jno
xchg
cmp
clc
stos
mov
sub
pushf
aam
jge
pusha
loope
xchg
rol
jbe
xor
sti
arpl
cmp
setge
adc
bound
inc
enter
push
out
and
jmp
xor
test
ror
dec
add
pushf
into
test
lock
dec
pop
data16
jmp
(bad)
ror
cli
push
fcmovnbe
mov
movs
inc
hlt
out
call
inc
lods
and
or
sbb
or
lea
add
jbe
sbb
cmp
jne
ror
pop
icebp
add
mov
or
sbb
test
outs
test
test
pop
dec
cld
jne
mov
pusha
mov
or
push
inc
gs
pop
ss
mov
jne
xchg
je
dec
mov
add
jo
shr
fs
jge
push
sbb
xchg
repz
test
sar
iret
pop
ins
call
pop
add
fwait
nop
inc
rol
jg
les
outs
mov
int
pop
jl
mov
ror
xor
daa
cmp
cmps
gs
mov
jne
or
sbb
xor
jmp
icebp
sub
and
sbb
repz
hlt
jae
or
jne
sbb
pop
and
xchg
adc
sbb
test
adc
leave
inc
arpl
push
imul
and
or
cmc
sbb
in
add
lock
cdq
or
add
sbb
push
pop
pusha
push
push
cmp
or
lea
fadd
mov
cmc
jmp
outs
test
stos
or
call
(bad)
jl
or
add
adc
and
test
mov
and
shl
dec
add
call
xor
test
ins
sbb
mov
std
in
mov
add
fisttp
in
das
leave
ins
and
test
sahf
jge
add
call
or
adc
push
arpl
adc
or
gs
bnd
jg
not
loop
(bad)
cmp
inc
cmp
(bad)
ins
dec
dec
pop
push
out
pop
pop
popa
or
add
push
ss
sbb
addr16
add
je
add
mov
add
jb
adc
inc
fwait
out
imul
jne
jne
(bad)
sti
fidivr
je
push
pop
push
aaa
popf
rcl
pop
fbstp
mov
adc
inc
pop
jo
nop
pusha
aaa
inc
fwait
inc
cmps
adc
test
push
lahf
(bad)
jmp
idiv
xor
and
mov
sar
enter
mov
pop
addr16
mov
and
je
push
sbb
jmp
and
xor
popf
in
scas
jecxz
or
inc
popa
fiadd
xchg
sub
cdq
clc
or
jle
shl
pop
adc
add
enter
add
jns
shl
popa
and
add
loope
pop
add
pop
push
(bad)
std
cmp
sub
add
mov
stc
test
shl
inc
pusha
xchg
cld
sub
pop
pop
pop
mov
adc
jb
popa
dec
(bad)
cld
(bad)
adc
or
call
out
pop
pop
in
adc
mov
je
aam
sub
imul
mov
or
push
pop
mov
and
inc
inc
pop
std
mov
mov
out
sbb
dec
cmp
mov
call
jmp
out
inc
std
jne
sbb
adc
test
dec
xor
mov
sub
dec
mov
cli
push
pop
cmp
cwde
loope
loopne
int
mov
fcom
ret
lea
ret
mov
mov
or
(bad)
scas
sub
add
sub
shl
xchg
dec
jmp
(bad)
movs
dec
cmp
dec
sbb
cli
aas
add
mov
iret
add
in
inc
retf
xchg
dec
add
mov
lea
mov
and
sub
ins
jecxz
bound
push
fistp
mov
es
inc
in
inc
mov
xchg
cli
xlat
mov
ficomp
mov
ins
add
add
int3
mov
or
loope
jmp
fadd
aaa
je
test
nop
mov
imul
fdiv
sbb
mov
into
sar
jmp
movs
sub
inc
es
aas
or
fs
(bad)
sbb
test
dec
xchg
cli
loop
xor
dec
sar
push
test
call
dec
rcr
mov
xlat
shl
test
push
test
inc
push
push
sbb
mov
test
mov
cwde
icebp
cmp
enter
repnz
ss
mov
mov
popf
cmps
in
pop
dec
add
push
add
xchg
sbb
adc
imul
adc
jo
aaa
daa
test
add
add
cwde
xchg
ss
and
and
repnz
xor
int
add
ins
mov
adc
xchg
push
jp
mov
hlt
jmp
pop
jmp
push
or
in
mov
push
mov
rcl
add
xchg
and
pop
call
stos
or
add
ins
mov
idiv
sbb
jmp
sub
cmp
and
(bad)
imul
add
push
or
hlt
ret
xor
xchg
shl
cmc
daa
xchg
xor
push
or
cmp
pusha
push
aam
pop
push
imul
dec
loope
push
cmp
sbb
add
pop
xchg
mov
sbb
sbb
push
je
xchg
scas
and
add
or
sar
xor
out
add
add
mov
div
push
js
xor
inc
fadd
inc
mov
test
xor
outs
sub
or
push
movs
pop
push
imul
mov
and
inc
or
movs
dec
dec
xchg
leave
sub
outs
and
fnsave
leave
pop
sti
js
rol
add
sub
or
inc
xchg
ja
add
mov
movs
sub
add
or
sar
lea
lock
mov
or
lods
add
adc
or
jl
aam
sub
mov
imul
pop
adc
mov
sub
dec
sti
pop
ja
sbb
or
in
dec
sahf
mov
inc
scas
test
test
or
mov
sbb
xor
adc
inc
sub
cs
nop
push
cmp
ret
add
add
adc
test
cmp
mov
(bad)
push
call
push
into
sub
push
dec
adc
cmp
jbe
test
adc
pop
or
sub
xchg
add
lods
fld
test
or
lea
fcom
sub
sub
test
xor
mov
dec
cmp
ret
sub
adc
dec
loopne
or
mov
adc
cmp
mov
xor
(bad)
fwait
dec
and
jbe
or
pop
xchg
xor
or
xchg
popa
mul
or
mov
outs
xlat
dec
das
and
hlt
cs
test
xor
xchg
bound
mov
sub
ret
sbb
add
sbb
mov
and
jns
jo
xor
add
jg
sbb
push
or
pop
mov
jmp
add
or
test
lock
fisttp
mov
je
xchg
add
push
popa
movs
lods
leave
push
jecxz
loopne
(bad)
xchg
cmp
popa
add
mov
shl
cdq
(bad)
sti
pop
mov
sub
loope
in
cmp
mov
or
jmp
adc
pop
lds
gs
repz
inc
mov
push
int
sbb
dec
sbb
push
addr16
push
or
add
cmp
sbb
je
call
inc
sbb
xchg
inc
cmp
dec
in
test
js
into
mov
dec
ret
push
push
pop
lahf
fcom
and
(bad)
ror
jno
mov
movs
cmp
test
and
popa
sbb
cmc
dec
adc
rcr
push
lea
int
adc
js
clc
mov
mov
mov
mov
stc
clc
(bad)
pop
dec
test
jp
xor
cmp
jne
cmp
and
hlt
push
sub
or
ins
xor
je
jmp
loope
or
adc
cmps
mov
add
fadd
adc
inc
mov
test
ins
push
push
pop
inc
xchg
mov
add
daa
hlt
popa
out
je
push
mov
sahf
sar
call
add
and
push
fwait
jl
mov
mov
and
xchg
fild
test
fiadd
inc
iret
sub
sub
pop
fsubp
add
dec
ficom
pop
pop
rol
mov
adc
add
xchg
cmp
in
pop
push
std
mov
jno
xlat
mov
inc
cmc
inc
adc
pop
push
mov
jmp
push
inc
in
jmp
xchg
dec
xor
mov
int3
repz
mov
and
js
lock
adc
or
sbb
sbb
mov
or
push
mov
in
xlat
and
pop
inc
in
sahf
rcl
retf
mov
or
aam
pop
lock
mov
jnp
cmp
or
(bad)
xchg
xchg
sbb
xacquire
jg
sbb
cmp
push
add
inc
jl
cmp
or
pop
inc
push
mov
push
mov
or
jne
xchg
xchg
push
sub
test
adc
push
or
jnp
(bad)
cld
add
jge
in
sbb
sub
das
xbegin
push
enter
inc
and
xchg
ret
push
push
mov
pavgb
xor
(bad)
push
xlat
xor
xchg
pop
xor
adc
mov
rol
pop
retf
sti
dec
aad
rcr
lea
inc
mov
pop
sub
dec
test
outs
das
out
sbb
add
pop
push
sub
cmp
add
xchg
and
gs
mov
pop
and
inc
pop
aam
pusha
push
imul
xor
shr
loope
mov
push
fdivr
adc
(bad)
sub
push
mov
das
mov
mov
nop
add
mov
add
inc
and
and
(bad)
fnsave
mov
inc
imul
add
shl
loopne
fiadd
call
xor
fiadd
in
or
pop
or
pop
inc
in
mov
(bad)
nop
push
add
outs
jae
or
sub
and
clc
cdq
lahf
cmp
adc
in
xor
sysret
dec
repz
xchg
cld
add
xchg
or
sub
ja
sbb
cmp
mov
mov
dec
inc
xchg
mul
push
mov
or
add
add
xchg
add
jo
rcr
daa
add
jmp
cmps
inc
or
fstp
inc
or
je
mov
cmp
sub
pop
mov
ret
mov
imul
inc
or
push
and
or
push
inc
and
daa
fst
sub
mov
or
xchg
cmp
cli
cmp
clc
add
add
add
add
jne
mov
push
pop
je
push
retf
or
and
add
pop
push
adc
add
or
daa
retf
aas
push
add
add
adc
lock
stc
add
pusha
cmp
outs
xchg
ret
add
outs
push
mov
dec
mov
pop
jle
and
dec
or
shl
in
sbb
jo
mov
mov
sti
cmps
test
push
sbb
add
les
enter
pop
rol
xor
sub
adc
add
(bad)
pop
inc
mov
dec
rcr
test
das
mov
or
adc
jo
mov
dec
inc
adc
dec
inc
outs
call
push
adc
mov
test
pop
stos
adc
add
sbb
jo
adc
inc
sbb
inc
or
or
inc
pop
and
clc
push
jns
jo
pop
or
or
sub
or
cmp
push
sbb
adc
(bad)
js
add
sub
push
add
sbb
aaa
lods
test
inc
sbb
xchg
js
retf
xor
fmul
adc
cld
jmp
into
shr
or
add
add
jmp
and
ss
pop
shl
or
or
popf
or
add
adc
or
lea
add
mov
js
scas
mov
mov
add
and
and
shl
lds
dec
scas
pop
loop
lock
pop
fisttp
or
icebp
cmp
add
jg
add
bound
add
ret
adc
dec
das
lods
sahf
mov
cmps
arpl
ret
xchg
scas
push
outs
adc
js
xor
and
test
clc
pop
mov
push
add
pop
jo
mov
xor
pop
cmp
les
dec
xor
or
sub
out
cmp
mov
sti
call
arpl
adc
xor
je
popa
lea
xchg
xchg
lahf
add
and
fs
pop
fld
add
push
lahf
pushf
push
(bad)
sbb
aas
jmp
push
sahf
xor
cs
cmp
cmp
add
loope
iret
dec
add
cld
adc
and
movs
gs
add
mov
mov
ins
add
mov
fiadd
sub
and
inc
out
mov
mov
fwait
push
cmp
add
cmp
js
adc
lahf
sahf
sub
dec
dec
sub
pusha
pusha
or
repz
nop
mov
adc
or
je
push
mov
in
repnz
sbb
arpl
popf
mov
fidiv
add
xor
cwde
pop
add
clc
cmp
(bad)
xchg
add
or
or
sbb
pop
addr16
fmul
pushf
inc
sbb
add
cs
or
rol
push
adc
ins
add
ins
or
enter
ss
cmp
add
mov
add
add
ins
pop
pop
push
and
mov
ret
mov
mov
or
sbb
jecxz
das
pop
xor
cmp
inc
inc
cmp
enter
xchg
test
aam
fcom
lea
out
int3
cmp
cs
mov
sub
(bad)
or
mov
mov
aaa
ficom
jmp
fnsave
(bad)
das
adc
lds
add
mov
cmp
xor
inc
aaa
or
inc
sub
dec
cmps
inc
fwait
ret
repnz
fdiv
mov
lds
jbe
call
sbb
or
xchg
xchg
pop
dec
mov
jae
adc
add
mov
sbb
sti
add
test
xchg
push
test
sub
sub
imul
dec
sub
cwde
and
clc
mov
cmp
dec
and
push
cmp
sbb
shr
cmp
push
mov
pop
loopne
add
or
pop
inc
adc
pop
shr
adc
mov
rcr
xchg
inc
mov
je
jo
xor
inc
add
sar
push
xchg
mov
mov
clc
cld
sldt
dec
les
je
xor
push
out
mov
or
ret
mov
jbe
or
and
retf
push
mov
stos
adc
test
xor
cdq
clc
push
pop
bound
push
inc
or
ret
pusha
and
jne
or
add
adc
jmp
mov
test
repnz
jno
add
sbb
or
adc
pop
lock
daa
in
(bad)
or
nop
xchg
jbe
xchg
and
jnp
popf
xor
fs
or
popf
aam
jne
xchg
adc
aaa
sub
daa
xchg
sub
sub
push
not
add
push
sbb
rcl
sub
(bad)
loopne
xor
ds
dec
je
push
push
adc
push
sub
mov
dec
rcr
ja
xchg
cmp
in
pop
adc
enter
mov
or
mov
mov
lods
pop
scas
sbb
lea
scas
(bad)
xchg
imul
sub
adc
xchg
and
sbb
retf
adc
sub
xchg
and
fld
loope
or
jno
imul
xor
aam
imul
xor
test
loop
pop
daa
and
lods
jmp
popa
add
hlt
jp
(bad)
add
iret
xchg
mov
pop
push
add
imul
sbb
das
scas
js
add
cmc
or
arpl
imul
mov
es
or
fst
sbb
out
cmp
lea
mov
mov
push
idiv
ret
or
push
cdq
push
jmp
addr16
rol
xchg
adc
or
jbe
sub
add
dec
sbb
fstp
adc
div
push
push
sub
xchg
adc
mov
ror
sub
xchg
pusha
inc
xlat
(bad)
lock
push
(bad)
retf
sub
dec
iret
xor
pop
mov
adc
inc
mov
inc
mov
mov
test
rol
push
dec
popf
xchg
int
sbb
test
add
lgs
in
push
push
jo
scas
sbb
and
dec
add
mov
and
push
push
push
inc
or
inc
mov
or
rcl
ins
add
cld
lahf
or
and
add
ss
les
sub
aam
mov
adc
and
or
pop
push
cld
pop
clc
mov
cmp
mov
lods
jmp
and
and
dec
or
lods
cld
cld
cmp
popa
and
call
js
pop
push
leave
test
je
adc
ins
ret
(bad)
mov
xchg
outs
pusha
xor
xchg
add
inc
pop
loope
jle
jmp
dec
dec
iret
ret
sbb
movs
out
sbb
pusha
mov
into
adc
xor
rcr
push
push
adc
pusha
xor
not
and
mov
in
in
cmps
add
in
sub
jmp
test
mov
das
pop
mov
sub
sub
setns
push
add
add
mov
test
sbb
adc
inc
mov
cwde
cmp
and
call
cmps
mov
or
cld
rcr
mov
xchg
add
sbb
or
or
mul
jmp
adc
push
or
sbb
or
pop
and
mov
hlt
std
js
xor
and
push
nop
out
pop
jne
loope
rcl
mov
add
sbb
pop
inc
jne
sahf
rol
out
inc
adc
adc
rol
push
frstor
push
cmp
push
jge
xor
xchg
out
or
cmps
and
mov
cdq
outs
jb
and
sub
and
into
popf
clc
and
mov
push
pop
pusha
cmp
sub
es
mov
jb
xchg
xor
mov
inc
jmp
xor
pop
and
inc
dec
dec
xchg
or
fidiv
retf
push
jo
pop
enter
push
push
jns
xchg
jmp
lock
mov
jmp
sub
pop
pop
mov
retf
adc
ins
inc
or
ret
lods
pushf
push
mov
pop
pop
mov
mov
inc
fs
dec
push
adc
adc
jmp
adc
add
and
imul
ror
daa
addr16
shl
inc
inc
nop
inc
or
or
inc
movs
ret
push
pop
(bad)
retf
sub
inc
cwde
je
fdivr
adc
imul
div
test
test
push
jg
sub
test
mov
imul
jmp
(bad)
rcl
rcr
dec
cmp
(bad)
adc
push
push
mov
cmp
adc
push
pop
push
push
jmp
call
ret
mov
pop
mov
mov
adc
jbe
and
or
xchg
push
clc
ins
sbb
add
mov
ror
add
sar
(bad)
adc
ss
(bad)
xor
(bad)
rcr
out
rcr
cmp
(bad)
mov
shl
pop
shl
les
imul
stc
in
xchg
push
and
rcr
sub
or
dec
sub
xchg
adc
xchg
push
adc
ins
es
adc
pop
das
ins
jb
mov
ret
push
sbb
mov
add
jp
stos
sbb
sub
es
or
and
mov
(bad)
test
cmp
dec
sbb
ins
inc
mov
ror
push
aas
sub
daa
daa
in
call
adc
adc
cs
sub
aas
cmp
push
data16
aaa
add
daa
mov
inc
add
adc
mov
push
xor
mov
mov
leave
mov
xlat
ret
or
xor
enter
ret
add
jbe
jb
sub
mov
movs
mov
mov
push
or
mov
sbb
mov
dec
sbb
jp
adc
adc
jmp
outs
cmp
add
push
lods
test
and
mov
jb
dec
xor
xchg
or
leave
or
sub
adc
add
imul
inc
lea
pop
hlt
jno
add
ret
out
xchg
sbb
leave
push
std
jb
jmp
xor
les
sbb
shl
enter
pop
(bad)
fs
adc
xchg
and
mov
dec
in
pop
lods
jmp
xchg
into
pop
cld
mov
stc
bound
jge
adc
pop
cld
pop
(bad)
dec
adc
cmp
fadd
dec
xchg
test
pop
jne
ins
inc
ja
adc
add
push
sub
cmps
inc
dec
jl
sub
xchg
push
popf
ror
rol
cmps
sub
cmp
je
retf
adc
loopne
adc
movs
inc
dec
push
sub
ds
push
inc
into
xor
add
das
test
push
xchg
and
es
ja
add
in
xor
and
sub
dec
call
mov
(bad)
shl
into
mov
movs
push
mov
push
(bad)
enter
adc
sub
pop
adc
loopne
push
in
sbb
or
retf
mov
out
iret
xchg
and
and
dec
retf
rol
cmps
rcr
inc
fmul
adc
push
push
push
lahf
test
out
push
cmp
fnstcw
ja
push
into
cmp
ret
adc
adc
test
adc
sbb
addr16
fcom
outs
xchg
aam
xor
inc
dec
les
add
mov
push
cmp
mov
or
das
pop
inc
inc
mov
dec
in
sahf
and
fisub
(bad)
jne
and
mov
add
fadd
sbb
adc
dec
rol
inc
push
out
retf
pop
pop
fadd
mov
adc
adc
jo
leave
mov
fild
push
inc
scas
or
mov
jmp
and
js
pop
jne
xor
xor
rcr
rcl
push
xchg
mov
mov
adc
lods
in
imul
rol
add
pop
mov
cs
cmp
ud1
push
pop
add
cmp
sbb
aam
jo
sub
aaa
stos
fdivr
(bad)
or
adc
dec
les
jno
and
and
iret
cs
push
inc
dec
and
cwde
iret
iret
adc
add
add
dec
call
dec
int
push
into
movups
jl
xchg
xchg
pop
cmp
(bad)
stos
or
jp
das
in
xor
js
cli
pop
pop
fwait
or
add
ss
pusha
push
ss
pop
push
inc
rol
dec
sbb
test
sub
loopne
aam
push
popf
adc
outs
daa
jg
xchg
mov
not
icebp
push
push
pusha
xor
iret
mov
xor
xchg
ins
adc
shl
enter
mov
aas
sub
bnd
push
or
or
cmp
stos
fnstcw
xor
xchg
js
mov
pop
pop
int3
inc
cmovns
push
and
add
inc
pop
mov
popa
inc
iret
stos
add
pop
pusha
add
inc
(bad)
sub
push
icebp
dec
cmp
push
icebp
mov
add
icebp
inc
mov
and
test
sub
or
neg
cmp
je
xor
mov
pop
lds
jl
xor
fdivr
sub
cli
add
daa
outs
add
adc
adc
xor
mov
add
addr16
add
or
fst
dec
and
popa
dec
lds
dec
cmp
dec
dec
and
pop
cmp
in
mov
ror
nop
mov
ins
nop
aas
sub
xchg
les
inc
add
iret
lahf
sbb
dec
sahf
sbb
and
xor
sub
loopne
add
jmp
shr
imul
sbb
and
push
les
movs
fdivr
pop
mov
clc
dec
fiadd
jno
lock
in
add
jne
ror
cmps
dec
push
out
dec
add
push
push
xor
pop
mov
mov
sub
call
and
or
je
adc
(bad)
fwait
mov
test
xor
cmp
je
fadd
aaa
jge
jp
pop
hlt
sub
pop
xor
fisubr
fisttp
sbb
pop
ds
mov
or
scas
loope
jle
je
outs
push
or
popa
jge
mov
aam
in
arpl
in
repz
xor
push
jns
mov
es
xchg
mov
icebp
lahf
inc
mov
adc
cmp
fmulp
push
in
push
rol
or
jae
gs
aas
mov
cld
js
in
kmovw
jge
(bad)
fst
xor
clc
aaa
xchg
stos
inc
(bad)
and
or
pop
das
or
inc
pop
jmp
ret
cli
add
inc
fsubr
push
or
mov
mov
adc
sbb
leave
dec
and
mov
imul
pop
loop
sub
sahf
push
ins
xchg
(bad)
shl
or
dec
les
mov
xchg
dec
enter
sbb
fsubp
rcl
rol
mov
pop
adc
push
sbb
push
jne
xchg
dec
mov
fld
daa
jmp
xchg
rcpps
imul
sbb
pop
sti
inc
push
pop
cmp
aas
(bad)
adc
add
dec
add
xchg
mov
push
xchg
lds
xor
xchg
push
cmps
retf
das
mov
mov
(bad)
mov
or
cs
test
cmp
mov
xchg
adc
popa
add
test
sti
mov
ja
pop
aad
cmp
add
xchg
and
das
mov
mov
(bad)
and
cmp
ror
mov
(bad)
aam
test
add
movs
ret
jle
in
and
add
cmc
adc
or
shl
pop
jmp
(bad)
not
xchg
ins
pop
and
lea
fistp
arpl
pushf
push
outs
xor
(bad)
add
xlat
fiadd
jmp
jnp
mov
popf
pusha
mov
push
add
loop
leave
xor
clc
mov
jmp
ret
mov
cmp
pushf
ret
cwde
hlt
ins
mov
aam
inc
or
inc
xchg
cmp
fs
jne
cmp
mov
pop
push
dec
in
repnz
sub
inc
fadd
add
and
xchg
xor
add
push
mov
ret
add
add
mov
imul
dec
sub
cwde
mov
push
xchg
dec
xor
adc
movs
mov
dec
dec
add
cs
test
push
clc
nop
ds
je
pusha
sub
dec
jl
inc
push
cli
pop
jmp
add
sub
jb
adc
adc
bound
inc
add
cmp
call
jne
jnp
add
sbb
xchg
in
jl
ret
imul
fidivr
and
sub
xchg
or
sbb
jmp
int
xor
add
imul
sbb
ss
movs
aas
jns
test
daa
inc
xor
popa
dec
xchg
idiv
pop
or
mov
push
and
mov
sub
inc
in
dec
or
jmp
cwde
cmp
pusha
les
adc
adc
xchg
xchg
loop
pop
inc
xchg
imul
cmps
cdq
sub
inc
xchg
or
mov
and
xlat
push
js
add
xchg
xchg
arpl
xchg
sbb
pop
xchg
lds
in
in
jecxz
pop
pop
and
(bad)
int3
sbb
adc
out
and
inc
lock
into
xor
je
cs
dec
xchg
xchg
adc
arpl
scas
test
test
fmul
shl
adc
sbb
loope
idiv
and
aaa
outs
imul
(bad)
dec
popf
inc
stos
mov
ret
sbb
xchg
movs
push
inc
xchg
(bad)
cmp
or
outs
xor
pop
add
adc
stos
sbb
dec
mov
and
hlt
addr16
adc
fild
dec
inc
xor
or
dec
js
add
popf
and
xchg
in
cs
inc
out
(bad)
xchg
and
sbb
and
sub
shl
lahf
jbe
std
retf
jne
les
pop
push
push
pop
push
add
retf
push
add
add
add
cli
(bad)
pop
lock
retf
shr
xchg
adc
inc
movs
push
imul
nop
push
jmp
jb
outs
lods
adc
clc
outs
or
(bad)
jg
rcl
cmp
cmp
jb
test
and
mov
je
push
mov
cs
cmp
mov
pop
fs
mov
push
add
dec
jmp
push
fcomp
and
push
mov
xor
leave
je
sub
xchg
lds
popa
xchg
xor
dec
or
test
or
in
mov
mov
sub
or
inc
mov
adc
mov
and
or
and
mov
int3
in
nop
xchg
repnz
jo
mov
mul
xor
add
imul
cmp
bound
sbb
mov
aaa
dec
cmp
(bad)
mov
imul
rcl
push
or
pop
lahf
arpl
or
dec
xchg
ret
pushf
mov
call
mov
xor
aam
daa
arpl
sub
in
add
sbb
(bad)
sbb
push
add
ja
or
xor
pop
pop
adc
repnz
addr16
add
lods
iret
daa
les
dec
fld
mov
xchg
cmp
jae
ret
mov
daa
jp
aam
adc
and
rcl
shl
(bad)
fisubr
jne
fadd
push
and
jbe
jae
test
xor
pop
cmc
jmp
(bad)
xor
daa
or
mov
xor
aaa
pop
jne
xlat
call
popf
cmp
dec
mov
sub
neg
push
or
jecxz
nop
mov
mov
nop
je
xchg
add
xor
mov
inc
adc
or
outs
imul
cmp
jge
and
or
add
jge
sub
sbb
nop
cmp
inc
add
cmp
jle
xor
repnz
mov
cdq
cmp
or
daa
push
jl
mov
pop
lahf
or
and
sub
pushf
and
pop
pop
ds
cmp
rol
rol
push
push
mov
test
adc
push
cmc
int
push
or
sar
enter
add
mov
dec
cmp
dec
inc
pusha
(bad)
add
adc
adc
or
push
or
dec
inc
call
and
pop
inc
xchg
and
push
sub
(bad)
add
shr
test
arpl
xor
into
cmp
inc
adc
push
push
jo
cmp
js
dec
cmp
hlt
rcl
call
and
pop
mov
push
and
clc
ret
call
(bad)
cld
dec
dec
mov
int
adc
inc
adc
adc
xor
ficom
jmp
push
outs
cmp
sub
xchg
clc
sti
sbb
xor
and
xchg
push
das
mov
add
rol
test
je
push
leave
cmp
sub
jb
dec
ins
push
add
hlt
jno
and
movs
je
push
sbb
push
loope
outs
push
std
jno
push
push
(bad)
scas
xor
test
nop
imul
adc
adc
push
mov
pop
lods
xor
test
push
push
dec
add
or
sub
loopne
add
adc
mov
push
pop
xor
iret
cmp
adc
pop
div
cmp
inc
push
inc
push
sub
pop
fsubr
loope
ins
sub
retf
inc
dec
push
push
cmp
sbb
mov
lods
stos
sbb
ret
mov
lods
aaa
mov
test
es
xor
xor
lock
lock
movs
test
scas
push
jne
or
and
and
mov
xor
jp
dec
lea
inc
push
mov
stc
jle
jl
nop
retf
(bad)
pop
add
fs
cmp
push
movs
mov
out
pop
lock
or
mov
push
adc
je
test
and
or
mov
imul
dec
inc
ret
push
xchg
icebp
add
or
das
sub
mov
(bad)
cli
fcom
fstp
lock
(bad)
ret
out
add
mov
les
jo
mov
pop
int3
and
adc
adc
cmps
ror
clc
mov
push
retf
mov
loop
stos
es
popa
pop
std
and
in
inc
imul
fiadd
shl
sub
ret
outs
and
or
dec
das
cli
invd
mov
add
addr16
ret
pop
push
xchg
sub
call
adc
push
add
pop
xchg
test
xor
inc
inc
jle
mov
fld
add
add
or
add
or
mov
mov
ss
cmp
cmp
sub
xor
and
mov
imul
cmp
mov
adc
lea
std
adc
mov
xchg
out
sub
test
loope
rcl
adc
fs
xor
inc
cmps
pop
lock
or
jle
outs
daa
call
pop
clc
dec
jae
imul
fs
stc
cmp
push
push
or
sub
fmul
aam
and
add
in
es
push
(bad)
iret
inc
add
dec
in
mov
dec
mov
xchg
shl
add
xor
test
mov
retf
jmp
mov
mov
add
ins
cmp
jo
push
dec
or
stc
jo
push
dec
inc
mov
jle
into
jnp
or
data16
inc
mov
lahf
add
sub
mov
push
shl
or
adc
or
leave
jae
enter
mov
pop
adc
mov
call
dec
movs
mov
mov
dec
cmp
sbb
pop
jmp
xlat
push
test
or
sbb
rcl
loopne
push
fiadd
dec
cs
jle
repz
mov
and
jle
adc
jmp
das
add
and
int3
adc
dec
movs
mov
xchg
dec
push
test
mov
push
imul
fwait
in
dec
or
add
and
(bad)
call
adc
mov
sbb
add
arpl
or
mov
cmp
rcr
push
add
fsubr
or
dec
fadd
fdivr
enter
aam
cmps
popf
pop
or
dec
les
mov
pop
fs
enter
and
add
pop
enter
in
test
mov
push
push
fild
push
movs
inc
outs
adc
in
add
adc
xor
or
test
adc
stos
cmp
arpl
pop
ds
aaa
push
sbb
add
call
xchg
xor
movs
(bad)
or
sbb
(bad)
shl
mov
inc
mov
inc
pop
mov
in
dec
and
ret
and
dec
sbb
fcom
xor
popa
adc
test
mov
cmp
cmp
(bad)
jo
sbb
mov
pop
add
cmps
imul
cmp
imul
das
ins
in
and
add
fimul
jnp
inc
or
mov
cmp
call
call
(bad)
pop
fstp
sahf
sub
scas
inc
loope
cmp
jmp
ds
xor
add
loope
xchg
adc
push
push
mov
cmp
call
mov
adc
push
hlt
pusha
and
nop
push
jo
xchg
push
jp
inc
loopne
repnz
push
push
add
scas
add
xor
(bad)
jns
mov
inc
dec
dec
popa
add
add
adc
je
int3
in
push
test
or
xchg
push
ret
cmp
mov
bound
pop
iret
or
add
jne
xchg
jge
jl
fs
out
dec
sbb
movs
dec
add
scas
jmp
adc
test
mov
add
fst
xchg
or
adc
nop
pop
dec
push
cld
aaa
ret
in
add
sbb
cmp
cmp
pop
inc
inc
and
dec
dec
je
test
scas
or
sbb
cs
lods
sbb
shr
shr
call
add
test
jle
sub
xchg
mov
rol
inc
sub
push
push
(bad)
call
push
(bad)
clc
dec
jne
sub
xchg
push
push
push
rcr
add
jb
call
aam
xchg
js
mov
add
sbb
jmp
enter
ds
push
push
lods
push
xor
xor
push
jle
fsub
ror
hlt
xor
inc
xor
cld
push
inc
add
cmp
mov
cmp
adc
ror
ror
cwde
mov
fadd
sbb
mov
xor
pop
pop
call
inc
aaa
cmp
shr
pop
aad
adc
inc
or
shl
sub
icebp
dec
rcr
mov
out
call
add
test
div
arpl
je
je
or
and
and
sub
or
pop
sub
jne
sbb
adc
push
xchg
lds
mov
idiv
pop
in
cmp
jb
sbb
add
neg
mov
jecxz
or
in
or
stc
rol
sar
add
sbb
push
lock
jne
popa
xchg
cmp
aam
dec
ins
bound
je
xchg
add
std
in
or
adc
outs
test
sub
pop
add
push
adc
adc
sub
cmp
add
pop
sub
inc
sub
outs
add
sbb
fcomp
loopne
push
(bad)
pop
jno
push
inc
retf
fstp
adc
sub
ins
and
fdiv
sahf
cmp
clc
jb
push
movs
pop
ja
add
or
xchg
cmp
mov
sub
test
push
jmp
in
pop
cmp
test
das
(bad)
fadd
fdiv
ffreep
movs
loop
sbb
dec
dec
pop
(bad)
outs
call
mov
dec
gs
in
push
inc
(bad)
pop
sbb
and
enter
std
je
or
add
test
push
add
push
jl
add
sbb
pop
inc
nop
ret
ror
pop
mov
out
push
xchg
xor
inc
hlt
cmp
imul
aaa
retf
lods
or
out
jle
movups
xor
cmp
jo
inc
xor
mov
jne
sbb
xor
sbb
xchg
pop
dec
mov
push
ret
jnp
mov
adc
popa
xor
push
sub
adc
adc
lods
call
stos
idiv
sbb
sbb
push
sub
pop
inc
inc
inc
xor
ret
lock
or
fistp
je
or
ret
in
adc
movs
xchg
sbb
add
and
adc
xchg
add
dec
pop
loop
add
out
jne
xor
ins
adc
inc
or
add
xchg
in
dec
imul
dec
popf
test
ins
jno
sub
mov
sbb
add
or
mov
sbb
mov
pop
jo
or
hlt
inc
push
inc
or
push
mov
xor
and
mov
xchg
nop
sbb
aam
mov
call
nop
ja
jl
outs
ret
or
add
mov
data16
cmp
jle
add
add
sbb
push
mul
adc
jmp
(bad)
inc
inc
adc
je
mov
xchg
sub
pusha
mov
cmp
ja
ins
(bad)
inc
sbb
shl
dec
inc
mov
shl
lea
and
lea
xlat
push
dec
test
ret
je
mov
js
add
(bad)
inc
cmc
jne
dec
out
push
jo
and
pop
or
add
add
push
out
mov
and
sbb
les
add
xchg
fcomp
stos
dec
push
sbb
mov
mov
mov
clc
add
push
clc
adc
pop
sub
fiadd
mov
push
adc
or
or
fcom
cmp
jo
add
or
hlt
add
pop
add
sbb
adc
mov
imul
sbb
push
ror
test
sti
adc
enter
mov
cld
test
std
lock
sub
or
xor
fmul
fld
neg
leave
push
in
jmp
push
or
inc
fnsave
and
or
je
movs
in
adc
jmp
push
xor
cmps
adc
retf
and
enter
js
cmp
jo
(bad)
call
pop
xchg
sub
inc
test
fcomp
bswap
ins
pop
add
sbb
or
sahf
dec
or
and
inc
sbb
fiadd
and
addr16
lods
stos
and
std
call
stos
loopne
sub
lahf
adc
sub
enter
add
add
pop
mov
mov
bound
add
inc
dec
xor
cmp
xlat
push
ins
push
pop
(bad)
and
pop
sti
add
mov
xchg
mov
mov
pusha
in
inc
std
cdq
inc
out
addr16
jmp
adc
ret
and
out
push
leave
inc
adc
and
jae
sub
inc
in
data16
ret
fimul
out
add
mov
jne
mov
inc
cmp
jne
shl
xor
push
imul
xor
cmp
aaa
inc
enter
jns
call
ret
and
and
sbb
fs
or
mov
mov
mov
fidivr
imul
retf
daa
rcr
test
fwait
add
fadd
xor
xchg
pop
retf
and
ficomp
jb
enter
ins
sub
ins
sub
pop
(bad)
xchg
and
fwait
loope
add
bound
and
pop
and
repnz
xchg
sub
adc
movs
arpl
shl
mov
pop
sub
ret
aam
imul
inc
in
ret
dec
add
jo
lock
sbb
mov
inc
imul
movs
jecxz
push
pop
call
and
in
or
int3
es
sub
jp
mov
or
jmp
(bad)
and
inc
(bad)
sub
xchg
xchg
dec
jecxz
aaa
add
add
xor
dec
call
adc
push
dec
pop
pusha
cwde
mov
sahf
cmp
add
(bad)
out
sub
xor
lock
sahf
fnstenv
popa
std
pop
aaa
sbb
xchg
add
xchg
xor
sub
int3
add
call
or
sbb
jle
outs
rcr
and
add
(bad)
call
aas
push
popa
imul
cmp
mov
frstor
sbb
xor
stos
adc
lds
iret
leave
dec
and
add
rcr
bound
adc
in
add
or
hlt
pop
adc
adc
xchg
xor
lahf
inc
and
xor
cmp
cs
loopne
or
(bad)
cmp
pop
add
inc
fcom
sbb
inc
loopne
nop
jne
int3
dec
or
mov
add
imul
cmps
sbb
mov
popf
adc
inc
pop
and
dec
sub
add
sub
and
xor
pop
inc
arpl
jo
sub
mov
cmp
and
and
cld
sahf
adc
add
adc
cmp
sub
mov
or
shl
sub
xor
int3
cmps
adc
and
xchg
cmc
and
movs
push
push
xchg
jne
jp
and
fs
pop
add
push
add
xchg
and
popa
ins
fcomp
and
dec
pushf
(bad)
dec
push
inc
push
pusha
inc
mov
dec
and
jmp
adc
push
adc
or
xchg
movs
sub
hlt
jle
adc
xchg
adc
cmps
not
xchg
inc
or
test
mul
mov
cmps
lock
add
dec
loop
push
pop
and
cmps
and
dec
xchg
pop
stos
xor
and
sbb
jg
mov
aaa
lods
or
rol
lods
adc
add
sbb
data16
inc
add
sbb
or
sbb
pop
adc
gs
xchg
or
jge
call
sbb
outs
or
jmp
add
pop
or
hlt
dec
mov
pop
cmp
add
sar
retf
xchg
pop
xor
cwde
jp
arpl
shl
or
rcl
ret
sbb
or
in
mov
or
adc
adc
sbb
lds
cmp
push
add
cmp
hlt
jmp
aaa
inc
inc
push
enter
mov
clc
add
shl
movs
adc
fcmovnu
cmp
push
in
cmp
hlt
test
pop
push
call
push
clc
fnstcw
ror
adc
retf
dec
mov
sbb
pusha
mov
xor
push
cmp
pop
jbe
jmp
add
add
cmp
je
xor
sub
(bad)
and
pushf
out
out
jb
jae
ret
jbe
push
push
or
ins
and
das
data16
fsubr
mov
cld
cmp
aad
cmc
aaa
mov
or
push
xchg
sbb
jle
cwde
jo
clc
clc
adc
mov
sub
add
ret
sahf
pop
icebp
sbb
mov
aaa
mov
repz
or
jae
sub
pop
cwde
lds
xor
dec
sbb
inc
pop
adc
xchg
pop
add
fist
push
adc
fnstcw
xor
jbe
jge
sbb
repnz
jne
pop
jne
test
aaa
adc
clc
ds
outs
das
dec
add
cmp
jge
cmp
mov
and
jae
xor
mov
shl
cmp
imul
dec
test
pop
mov
fldenv
cmp
add
push
int
adc
add
cld
push
sbb
shr
mov
cwde
jmp
sub
push
cmp
mov
adc
and
adc
jns
or
xchg
icebp
jmp
xchg
outs
push
enter
lahf
pop
das
sbb
jp
sbb
push
dec
push
sub
daa
pusha
enter
dec
pusha
inc
pop
mov
retf
call
in
add
call
xchg
test
push
popf
mov
mov
fnstsw
xchg
test
test
add
jb
adc
dec
movs
retf
push
aam
aaa
xlat
scas
rcl
movd
or
fadd
inc
lock
push
or
inc
or
or
inc
cmps
sbb
add
arpl
mov
pop
leave
(bad)
mov
sub
test
push
stos
pop
jmp
inc
adc
pop
sar
add
push
cmp
inc
inc
push
push
mov
(bad)
cmp
loopne
jo
and
retf
push
and
mov
mov
mov
shl
mov
inc
sub
adc
(bad)
cmovae
mov
cmp
xor
test
xchg
sbb
mov
outs
sbb
inc
xchg
call
mov
mov
je
mov
or
dec
xchg
jo
xor
xchg
xor
cmc
cdq
cmps
dec
inc
mov
cwde
sub
mov
and
adc
and
ins
sbb
lods
mov
add
or
cmp
pusha
fidiv
xor
ja
cmp
cmp
or
mov
pop
add
pop
lods
dec
jl
data16
jo
inc
push
pop
(bad)
shl
sbb
mov
nop
(bad)
mov
fisttp
mov
sbb
fimul
sub
adc
sub
xchg
mov
sbb
cmp
outs
mov
adc
xor
imul
xor
sbb
sti
jecxz
test
inc
and
pushf
jmp
pop
test
xlat
ss
nop
mov
test
add
inc
add
mov
mov
cmp
xchg
fs
lods
adc
outs
add
nop
add
mov
fdiv
test
dec
sbb
out
adc
mov
dec
inc
pop
dec
test
nop
add
js
xor
and
dec
pop
loope
sub
cmp
mov
js
add
dec
jnp
cs
out
ucomiss
test
xchg
(bad)
nop
aaa
adc
mov
or
sbb
inc
fs
push
xchg
mov
loopne
enter
jnp
loopne
sub
push
mov
push
mov
or
repz
or
xor
push
repnz
sub
call
mov
popa
lock
mov
inc
xchg
jbe
push
or
je
out
mov
adc
add
xchg
ins
imul
div
jne
push
ret
push
add
mov
adc
aam
leave
cmp
pop
mov
pop
mov
jmp
aaa
inc
xchg
sub
adc
ds
inc
sbb
js
test
sar
inc
inc
dec
mov
mov
pop
fld1
inc
call
mov
sbb
dec
adc
sub
mov
sbb
and
lock
je
push
inc
dec
add
mov
cmp
jne
sbb
ficomp
ds
dec
jne
and
repz
cmps
movs
fucomi
cmp
ins
push
sub
outs
push
sahf
push
adc
push
fsubr
sub
mov
dec
mov
cmps
inc
adc
outs
cmp
pop
repz
push
mov
adc
jmp
dec
stos
push
cmp
add
(bad)
in
adc
popa
lds
xchg
xor
cwde
push
(bad)
retf
outs
(bad)
xor
adc
adc
and
and
mov
lods
pop
loopne
mov
clc
pop
mov
inc
or
aaa
shl
fld
movs
jne
shl
mov
add
(bad)
daa
or
and
and
retf
sub
repnz
or
mov
pushf
pop
aam
lea
hlt
fmul
movs
lock
clc
imul
mov
dec
sbb
xor
push
inc
sub
cmp
jl
push
pushf
add
adc
or
cdq
ret
aas
mov
adc
rol
pop
cmc
loopne
loope
aas
xlat
test
jmp
nop
xchg
push
push
jmp
sbb
push
jmp
adc
outs
push
jo
push
sbb
adc
test
movs
push
adc
loop
sbb
fadd
mov
adc
sar
sbb
adc
adc
sbb
pop
or
dec
pusha
idiv
jo
push
jnp
mov
jne
push
cmc
xchg
je
and
enter
inc
adc
add
push
adc
add
div
push
push
js
fistp
xlat
xor
push
or
loopne
jo
push
push
push
dec
push
pop
mov
jl
sbb
mov
pop
xor
ds
lds
icebp
and
sbb
inc
lods
push
inc
push
mov
add
or
xchg
std
push
pushf
inc
or
sbb
mov
out
xchg
es
ror
adc
enter
test
jle
aam
in
mov
adc
jns
nop
jne
fsubr
das
pop
ins
dec
push
push
fiadd
jl
daa
in
mov
mov
sbb
sbb
push
mov
dec
mov
test
mov
or
sbb
adc
mov
or
xor
daa
hlt
sub
add
jmp
and
or
sbb
ins
cmp
adc
ins
xchg
mov
inc
push
js
std
push
mov
sbb
and
test
lds
cmp
repnz
fnsave
sbb
adc
sbb
out
inc
popa
sbb
inc
popa
add
mov
lock
sbb
adc
mov
xchg
mov
mov
jb
test
sub
mov
push
pop
inc
dec
fwait
dec
or
lds
jmp
movs
sbb
ins
xor
mov
push
mov
dec
or
mov
sbb
pusha
pop
adc
xlat
adc
clc
inc
sbb
add
add
(bad)
and
inc
add
cmps
inc
ret
dec
xor
dec
idiv
or
sahf
mov
inc
enter
sub
xchg
clc
into
adc
jns
or
mov
cdq
jno
pop
aaa
or
test
xchg
pop
pop
nop
clc
push
pusha
mov
clc
fmul
ror
push
inc
sbb
fisttp
or
or
call
mov
pop
mov
and
mov
test
lods
fs
xor
mov
xchg
scas
or
jmp
sub
mov
rol
stos
movs
inc
push
ds
in
cmps
xchg
and
(bad)
sbb
rol
cmp
adc
cmps
mov
add
dec
dec
scas
rcl
jnp
mul
mov
loope
cmp
and
pushf
rcr
add
pop
xor
cmp
test
adc
jno
fsubr
jge
jmp
mov
scas
sbb
outs
pop
mov
add
(bad)
and
sbb
jo
retf
rol
pop
xor
mov
jge
fisub
adc
sar
out
pop
neg
cmps
push
mov
push
into
aas
push
test
push
pusha
fimul
add
push
clc
add
jecxz
ins
dec
shr
sub
push
gs
xor
sbb
xchg
loopne
mov
jne
xor
mov
adc
test
or
mov
in
test
imul
or
add
loope
adc
into
ss
and
test
das
pusha
in
loopne
xchg
dec
jnp
popa
add
fs
nop
mov
mov
mov
jge
inc
dec
out
adc
add
mov
mov
push
retf
add
pop
or
jge
loopne
sbb
jle
test
jge
adc
fild
inc
or
inc
adc
add
mov
clc
std
push
dec
pop
ja
dec
inc
dec
mov
ds
xlat
adc
push
popf
xor
add
test
pop
push
or
or
add
mov
or
cwde
cwde
ins
outs
pop
mov
outs
xor
nop
retf
les
or
xor
nop
in
inc
dec
inc
test
dec
or
inc
and
xor
jge
mov
push
and
(bad)
in
inc
xchg
call
rcr
adc
sbb
push
dec
or
cmp
test
push
jg
ror
pop
adc
push
mov
push
mov
bound
js
jmp
leave
add
mov
daa
sbb
fidiv
mov
adc
(bad)
add
dec
ret
mov
test
or
or
jns
or
sbb
outs
add
xchg
add
push
inc
call
sahf
sub
sbb
call
out
loopne
xchg
or
adc
imul
dec
rol
push
sbb
cmps
jmp
dec
sbb
adc
mov
xchg
jp
cmp
and
scas
cmp
add
add
lods
lods
shr
push
cmp
clc
jg
cli
push
pop
sub
cmp
jge
mov
add
add
out
add
xchg
jl
or
sbb
push
xchg
jg
fdivp
mov
stos
add
and
sub
sbb
push
add
push
or
pop
loopne
or
and
je
add
retf
and
xor
jmp
or
enter
sahf
sub
cmovae
mov
push
or
dec
test
xchg
adc
sbb
inc
adc
icebp
test
jg
sbb
and
sub
push
jg
(bad)
fcom
nop
addr16
pop
mov
jmp
xchg
add
add
sahf
add
add
sub
pop
pop
gs
inc
inc
imul
push
sub
sbb
neg
push
js
retf
js
pop
dec
popa
fs
cs
pop
and
ret
lock
pushf
inc
xchg
hlt
xchg
rcl
mov
pop
pop
mov
inc
xchg
adc
add
sbb
inc
dec
dec
xor
scas
xchg
add
or
push
adc
add
daa
push
lock
sbb
pop
inc
or
sbb
inc
adc
lods
and
jle
hlt
lods
sub
iret
push
mov
mov
ret
adc
inc
push
push
mov
inc
inc
sbb
rol
inc
call
fstp
adc
je
inc
fbld
dec
xor
sbb
pop
out
sub
imul
ret
xchg
mov
ret
pop
(bad)
outs
clc
(bad)
push
sub
jo
retf
lock
push
je
addr16
rol
pop
jmp
pop
xchg
or
call
sub
pop
in
sub
cld
fisttp
sahf
in
add
js
inc
nop
in
pop
inc
and
pop
sbb
jl
push
pusha
jmp
jno
sub
ret
xchg
int
iret
enter
ins
sbb
lock
retf
out
stos
lock
out
popa
aas
aam
mov
push
jmp
or
fmulp
enter
lock
cmp
inc
push
pop
shl
in
jge
ret
lods
push
add
adc
mov
push
adc
push
and
sbb
adc
or
aad
bound
sbb
or
push
add
push
loope
mov
fcmovbe
nop
ds
mov
xchg
push
xchg
pop
adc
push
fucompp
push
mov
lods
shl
mov
cdq
idiv
inc
out
dec
pop
jge
and
xchg
(bad)
pop
loopne
push
xor
push
jl
mov
push
cli
loopne
outs
xor
jmp
pop
dec
or
cmp
lods
repz
clc
mov
adc
stos
popa
shl
mov
mov
and
xchg
faddp
test
shr
add
cmp
add
dec
in
retf
sub
(bad)
cmp
pop
mov
pusha
xor
je
xchg
ss
shl
cmp
mov
or
xchg
sub
sbb
add
inc
inc
push
mov
sub
mov
xchg
jle
and
adc
mov
pusha
and
daa
dec
or
test
xchg
outs
outs
inc
(bad)
inc
retf
dec
and
mov
stc
or
xchg
mov
cmp
mov
adc
shl
(bad)
outs
pop
and
add
adc
rol
add
jle
pop
add
fcmovu
sub
push
dec
or
jmp
and
dec
sbb
inc
mov
ins
jg
pop
outs
ror
in
jnp
inc
push
dec
push
sbb
add
pop
mov
xor
inc
or
xchg
inc
inc
pusha
lock
retf
sub
inc
cmp
adc
mov
mov
cmps
loopne
xor
adc
add
xchg
aaa
ret
add
sbb
js
and
add
add
or
adc
xchg
movs
push
cmp
sbb
or
pop
cmp
jb
(bad)
out
pop
scas
and
push
mov
enter
add
inc
test
mov
add
stc
adc
push
add
scas
xor
jmp
ret
jns
add
in
dec
push
xchg
xchg
cmp
in
and
jp
in
ret
adc
call
inc
fs
and
(bad)
ss
test
mov
lods
test
lea
or
jmp
cmp
aas
sahf
or
lods
test
pusha
dec
mov
cmps
and
sub
mov
push
or
or
dec
xor
jmp
pop
cmp
js
clc
sahf
push
fimul
xchg
clc
dec
sbb
sbb
push
cmp
pop
push
sub
loop
xor
push
push
jne
add
sub
add
jno
loope
sbb
in
jmp
push
movs
lea
das
aad
sti
xchg
sbb
fist
sub
and
or
pop
adc
outs
sbb
or
in
repnz
or
sbb
push
arpl
add
cmp
cdq
fs
test
adc
cmps
daa
gs
push
ins
cmp
pushf
stos
hlt
icebp
or
mov
cmps
or
imul
inc
lds
or
mov
mov
ficomp
mov
or
in
jmp
add
lods
call
and
in
out
in
push
nop
mov
and
and
sub
adc
xchg
js
add
out
in
add
or
clc
aas
leave
test
out
gs
shl
dec
inc
adc
mov
mov
push
popa
lods
or
inc
(bad)
retf
mov
mov
je
shr
ror
int3
sbb
les
cmc
dec
inc
aam
in
add
and
inc
jle
out
add
arpl
ins
test
mov
xchg
test
aad
or
or
add
mov
dec
imul
je
arpl
rol
outs
push
movs
sub
jmp
adc
and
ret
jmp
fwait
(bad)
adc
sbb
mov
rcl
inc
ss
outs
add
xchg
mov
xchg
xchg
xor
xchg
fs
mov
mov
call
sbb
movs
bound
add
shl
mov
add
xchg
push
das
arpl
mov
add
add
pop
cmp
loope
cmp
je
inc
jns
test
cld
ret
add
(bad)
and
imul
push
push
and
cmp
adc
xchg
jecxz
pop
sti
inc
push
(bad)
out
adc
dec
xchg
out
cmp
aas
adc
clc
lock
loope
ret
jle
xchg
adc
inc
je
xorps
movs
nop
rcl
fild
mov
imul
and
inc
dec
fdivr
cmp
out
fild
fmul
bound
xlat
mov
outs
sbb
in
dec
pop
pop
sbb
lahf
or
mov
retf
lahf
imul
or
stc
ror
bound
mov
adc
inc
add
add
mov
cmp
or
push
inc
nop
inc
adc
stos
call
adc
xor
push
or
push
lea
das
lods
pusha
sbb
jb
xor
push
retf
add
xchg
and
xchg
sbb
call
rol
xchg
inc
sbb
adc
dec
mov
cmp
push
inc
sub
or
daa
inc
dec
push
dec
mov
dec
aam
aas
inc
daa
pop
add
pushf
lea
js
mov
hlt
jmp
loopne
clc
rcr
out
sar
addr16
cmp
test
imul
or
add
sbb
sub
cwde
sub
mov
adc
call
les
fs
and
sar
mov
in
jae
pop
in
or
or
scas
es
inc
sbb
push
call
cli
xor
xchg
loop
or
pusha
mov
xchg
push
xchg
push
not
mov
test
adc
lock
dec
popa
dec
mov
jmp
rol
inc
cdq
sub
adc
xlat
push
sti
in
and
in
dec
sti
cld
inc
jbe
inc
inc
pop
cmp
sub
movs
pop
fdivr
stos
push
xor
je
or
push
adc
repz
scas
add
nop
test
mov
mov
cdq
xor
daa
or
out
sbb
lods
and
push
or
ins
or
jo
fldenv
push
inc
cmp
adc
inc
psrlq
ds
mov
je
aad
add
and
add
iret
icebp
cmps
fsub
out
and
dec
rcr
mov
pushf
sub
cmp
dec
pop
push
popf
adc
arpl
imul
(bad)
mov
inc
mov
xor
and
pusha
mov
nop
popa
and
lock
push
push
dec
jmp
mov
inc
ja
sub
pop
and
sbb
push
add
in
xchg
ja
add
sbb
arpl
addr16
fcomp
js
daa
sub
dec
or
push
add
push
pusha
add
rcr
mov
addr16
aam
mov
shl
add
cmp
push
xor
sbb
xor
inc
addr16
hlt
sub
add
or
cdq
jno
xchg
pop
adc
xchg
mov
nop
lock
shl
dec
cmp
mov
bound
arpl
inc
inc
adc
mov
je
stos
shld
xor
push
ja
xor
dec
sub
or
push
jp
lods
sub
addr16
loope
lahf
jne
or
push
push
push
mov
cmp
aam
in
xor
pop
add
adc
aad
dec
loopne
or
or
mov
pusha
shr
pop
rcl
daa
rcl
xor
push
shl
inc
dec
jno
sbb
adc
in
adc
sub
jge
jle
jl
dec
sbb
outs
ss
lods
mov
jnp
ss
es
push
fist
sbb
xchg
and
inc
adc
and
inc
cmp
addr16
and
sub
mov
sbb
dec
adc
xchg
push
lahf
mov
unpckhps
daa
pop
cmps
pop
push
push
pop
pop
(bad)
gs
daa
add
push
out
les
bound
xchg
jecxz
je
icebp
loope
xchg
fcmovnu
inc
rcr
cs
pop
fisubr
pop
jg
jecxz
adc
call
xchg
out
xor
and
push
or
mov
rol
push
aad
call
mov
stos
mov
mov
popf
pop
inc
pop
aas
test
sub
or
adc
int3
fiadd
pop
mov
xchg
mov
nop
inc
and
sbb
adc
mov
cld
jge
mov
xor
xchg
pop
outs
lea
inc
mov
jbe
popa
sub
push
ret
xchg
push
xchg
mov
add
out
sar
shl
add
xchg
shr
push
aas
inc
cmp
and
xor
pop
cld
or
aaa
mov
js
add
push
loopne
push
daa
mov
push
lahf
push
or
push
cvtps2pi
mov
cmp
pushf
jg
mov
mov
sub
sub
sub
xchg
sbb
pushf
out
in
stos
les
add
jp
sti
sub
adc
test
imul
sbb
orps
push
dec
sahf
push
xchg
jecxz
sar
inc
or
pop
adc
rep
cmps
les
call
fs
and
push
adc
or
cmp
mov
adc
jb
add
lahf
sbb
jbe
retf
aam
sbb
adc
sbb
sub
pop
aam
lods
fdiv
pop
push
retf
and
jae
pop
cmp
lods
adc
pushf
mov
adc
fcom
mov
inc
clc
mov
in
inc
daa
jle
call
mov
fild
rol
test
lea
ins
xor
and
addr16
imul
iret
inc
int
inc
nop
fdiv
pop
fmulp
dec
mov
imul
push
outs
push
mov
or
out
xchg
sub
pop
fmul
xchg
icebp
pop
push
mov
sbb
adc
lds
mov
ja
lea
inc
sub
add
xchg
inc
add
push
sub
in
push
adc
sub
pop
pop
sub
cwde
aam
shl
or
sub
pop
sub
mov
sub
inc
gs
das
(bad)
dec
movs
adc
add
inc
pop
xchg
mov
xchg
ret
sub
dec
rol
jle
aam
and
nop
repz
dec
inc
pop
push
retf
retf
test
add
cwde
and
and
mov
push
loopne
loopne
and
mov
lea
imul
or
jmp
les
out
add
jge
es
mov
mov
cs
pop
xchg
icebp
int3
xchg
push
adc
leave
jmp
pop
add
stos
xchg
cs
ds
dec
xchg
ud0
inc
loop
pop
pusha
or
xchg
jo
xchg
ss
add
pop
dec
jl
or
in
scas
jns
push
pop
xor
xor
and
jmp
push
push
push
ins
sub
inc
xor
dec
pop
adc
test
mov
(bad)
xor
mov
mov
add
pop
cwde
xor
xor
or
adc
cmps
movs
xor
test
sub
lea
push
push
xor
adc
sub
rcl
pop
fwait
(bad)
add
pop
je
sbb
add
sbb
push
xor
mov
push
inc
cwde
jl
mov
add
mov
out
xor
dec
cmp
push
adc
xchg
cmp
sub
ret
loopne
lods
sbb
aas
push
test
jae
pushf
aas
fst
cdq
mov
and
pop
dec
shr
sub
in
or
hlt
mov
add
pusha
mov
or
inc
or
ret
sbb
stos
fsubr
test
(bad)
fiadd
adc
dec
mov
push
mov
or
sbb
daa
add
jg
adc
mov
dec
mov
inc
or
shl
and
or
cwde
pop
sar
rcr
sbb
call
push
push
pusha
mov
test
pop
push
mov
lods
fbstp
sub
mov
cmps
sub
inc
mov
fadd
push
pop
add
into
les
pop
inc
push
shl
push
or
nop
jle
adc
jbe
mov
mov
push
jg
xor
inc
mov
or
or
or
add
jnp
push
retf
jg
push
or
xor
lea
sbb
xor
push
xor
ret
xor
or
ins
call
iret
add
xor
mov
mov
icebp
push
push
ret
push
dec
pop
sub
and
add
dec
mov
push
cmp
nop
outs
pop
pop
or
cwde
push
mov
push
loope
cmp
ss
(bad)
cmp
jmp
sub
pop
cmp
mov
and
sub
add
xchg
jmp
or
nop
cmp
adc
addr16
fist
fwait
pusha
sbb
movs
push
push
jo
sbb
add
lods
and
mov
test
xchg
jo
dec
push
dec
sbb
retf
dec
mov
mul
dec
xchg
push
sub
rol
pusha
pop
adc
cdq
jmp
hlt
add
push
call
jne
push
rol
in
mul
xchg
int3
and
sbb
shl
add
dec
xor
ja
pop
pushf
pop
je
push
fsub
or
je
xor
dec
or
daa
xchg
adc
aaa
push
(bad)
rol
ja
adc
aad
nop
into
arpl
ret
mov
push
repz
aam
pop
pop
pop
push
das
ss
test
shl
out
inc
in
(bad)
push
movs
lds
cmp
add
push
xchg
jmp
jmp
mov
sahf
inc
jno
mov
sbb
jmp
mov
jns
ja
xor
clc
arpl
lock
es
inc
or
xor
mov
and
stc
and
bound
outs
adc
push
hlt
ins
dec
sub
cld
mov
inc
rcl
mov
aaa
int3
dec
mov
fwait
movs
inc
ret
or
jns
pusha
mov
push
lock
addr16
pop
sub
cmp
add
xchg
popa
test
pop
sbb
lock
adc
pop
popa
mov
ss
mov
aas
add
(bad)
aam
out
mov
sub
lds
jne
mov
cmps
sbb
or
ins
pop
inc
adc
inc
sbb
das
inc
ret
rcl
dec
mov
xchg
inc
mov
pop
sub
add
daa
jne
cmps
int3
or
and
mov
mov
sbb
jo
sub
or
adc
xlat
cmps
xlat
sub
jb
mov
mov
pop
mov
sbb
pop
loop
push
or
in
mov
and
or
mov
outs
fld
add
rol
movs
sub
(bad)
or
in
pop
xchg
dec
dec
pusha
sub
adc
das
xchg
sbb
xchg
inc
or
sbb
push
inc
dec
dec
pop
mov
push
or
push
push
dec
xlat
and
dec
push
imul
(bad)
out
xchg
mov
pop
lea
fisubr
or
fmul
or
adc
aas
dec
push
iret
call
dec
je
dec
je
jmp
xor
or
and
inc
add
push
mov
or
cli
(bad)
adc
in
(bad)
sti
or
push
mov
jo
inc
ret
lahf
mov
lods
sub
shl
jle
cmp
mov
xchg
cwde
adc
out
and
or
test
push
adc
mov
test
es
mov
pop
xor
inc
adc
push
adc
pop
add
dec
jl
mov
and
pop
neg
sbb
fiadd
jp
sub
jl
sbb
add
push
adc
xchg
push
cmp
xchg
jne
or
fadd
pop
mov
js
data16
push
or
call
cli
cmp
sub
mov
fimul
inc
out
lock
jo
mov
test
test
pop
sub
or
fisttp
push
sub
cmps
into
adc
pop
xchg
pushf
xor
push
or
in
int3
ss
mov
arpl
imul
and
add
sbb
mov
movs
test
jmp
adc
mov
jmp
sbb
mov
xchg
mov
mov
cmps
es
pop
dec
stos
and
pop
and
cld
call
push
call
adc
sar
fcomp
neg
dec
jmp
test
les
icebp
test
ret
or
jecxz
adc
scas
mov
rol
cmp
jno
imul
test
xor
xor
inc
outs
or
pop
aam
rol
dec
shr
mov
jns
mov
and
icebp
js
sahf
sbb
or
ss
out
nop
pop
es
sub
loop
loopne
xor
movs
adc
fidiv
mov
jp
imul
push
push
aam
sahf
adc
int3
xchg
mov
pop
inc
push
pop
clc
sub
cmp
aam
push
adc
push
dec
sbb
or
adc
xor
mov
mov
jg
cmp
mov
dec
das
sbb
bound
sbb
add
jnp
movs
(bad)
inc
add
or
mov
and
into
test
test
ja
cmp
sbb
push
push
adc
into
or
jle
dec
loop
mov
push
lock
add
inc
std
mov
out
cmps
cwde
xchg
sbb
xor
aaa
das
icebp
(bad)
sbb
not
and
inc
mov
into
sub
sbb
xchg
test
lock
jg
xor
inc
test
cmps
jl
call
jge
add
jle
adc
xchg
mov
test
lea
xor
pop
jns
fsubr
imul
jle
out
cmp
push
mov
rcr
ror
mov
rol
aad
out
out
aam
(bad)
push
mov
and
inc
push
push
pop
sub
in
mov
xor
into
mov
stos
rcr
jp
ret
cmp
push
mov
push
cmp
cmp
mov
push
repnz
fisttp
sub
iret
inc
ds
push
test
cwde
(bad)
inc
pop
div
or
into
dec
imul
movs
adc
test
rcr
dec
pop
mov
mov
pop
cmp
cmp
inc
sub
fcmovnbe
scas
add
popa
adc
das
and
lea
inc
push
test
call
mov
les
cmpps
ins
popf
pusha
mov
jno
push
pop
jne
call
call
add
dec
in
ficom
les
pop
shr
ret
adc
add
push
ins
push
mov
imul
pop
scas
pushf
movs
sub
add
repnz
(bad)
in
dec
mov
mov
(bad)
les
xchg
fld
les
dec
mov
xor
pop
or
lea
aam
push
in
or
xchg
nop
cmp
mov
fwait
mov
adc
repnz
and
xor
ds
push
jecxz
sbb
mov
imul
aaa
sbb
int
in
dec
cmp
nop
call
mov
push
inc
popf
pop
(bad)
mov
push
or
xchg
mov
lahf
ror
dec
or
mov
push
dec
ins
aaa
ret
fcmove
sub
mov
add
adc
pop
jmp
(bad)
movs
push
out
pop
add
jp
repz
ret
daa
mov
mov
and
mov
inc
sub
retf
daa
repz
lock
cwde
shl
pop
lea
sub
sbb
les
test
les
sbb
jp
push
xchg
push
xlat
mov
jo
sub
loopne
cmps
dec
mov
cmp
pop
iret
test
daa
(bad)
imul
shl
xor
push
dec
out
sbb
enter
jmp
adc
aas
xchg
mov
arpl
xor
cmc
and
jb
jbe
mov
dec
mov
push
inc
rcr
stos
(bad)
fist
aam
dec
add
imul
ss
cli
call
inc
xchg
movs
adc
div
imul
enter
pop
pop
mov
mov
add
out
ins
retf
jns
push
cmp
add
sub
push
sti
dec
jmp
and
lahf
cmp
add
fcom
push
dec
rcr
sti
push
fwait
mov
test
inc
or
or
jecxz
shl
mov
sti
or
add
sahf
adc
movs
loope
cmp
lock
push
mov
rcr
jmp
out
add
mov
push
cdq
(bad)
in
pop
cmove
cmp
das
xor
or
add
das
(bad)
lock
xor
cwde
jno
loope
jecxz
into
mov
mov
pop
ja
int
out
hlt
pop
mov
dec
jl
cmp
cld
mov
ret
ret
and
xchg
push
dec
mov
adc
lock
out
adc
sbb
enter
push
nop
add
xor
(bad)
ds
ins
fmul
add
or
jecxz
or
push
les
(bad)
(bad)
in
jb
pop
inc
add
mov
mov
mov
loop
add
dec
ret
jle
movs
ret
sbb
cmc
sub
and
sub
fwait
sbb
gs
mov
mov
not
dec
mov
sti
push
mov
push
pushf
mov
mov
or
cmps
and
inc
mov
sub
js
cmp
adc
mov
add
in
sub
xchg
mov
fcom
inc
pusha
jbe
dec
push
bound
loopne
clc
dec
add
bound
xchg
or
push
(bad)
adc
lea
inc
rcl
dec
dec
shl
xchg
inc
jne
lahf
loopne
pop
xor
cmps
(bad)
loopne
adc
je
dec
lods
inc
xor
retf
and
sub
or
dec
stos
fdivr
es
cmp
sbb
jmp
(bad)
int3
inc
mov
xor
sets
add
pop
fucomp
jne
cmp
pop
mov
pop
cld
enter
cmp
push
addr16
test
push
movs
cmp
mov
lahf
push
pop
ret
pop
mov
inc
adc
pop
stos
inc
or
jmp
adc
or
loop
sti
add
fisttp
jno
inc
adc
dec
mov
xchg
jge
sbb
and
(bad)
bnd
(bad)
mov
ror
xor
fidiv
test
rcr
mov
adc
cs
mov
mov
inc
ss
dec
sbb
mov
xor
rcr
or
aam
push
push
fbld
xchg
(bad)
jp
shl
pop
or
retf
or
jge
sub
retf
add
ror
pop
jp
aas
push
inc
xchg
or
mov
adc
ret
pop
or
jne
aad
pop
fild
xchg
adc
inc
add
and
dec
retf
jbe
pusha
add
xchg
pop
or
mov
leave
inc
jg
add
(bad)
enter
call
cmp
pop
jg
sbb
sbb
dec
sub
push
(bad)
aas
pop
and
or
jo
xchg
ret
not
cmps
jo
push
mov
xor
push
loopne
jns
push
into
and
fsubr
aas
sub
or
cmp
ins
sti
jo
aam
push
sub
mov
lods
hlt
movs
and
sar
loopne
fdivr
fadd
xchg
xchg
push
ret
xchg
jge
lea
mov
jae
test
call
test
adc
mov
mov
sbb
lea
mov
mov
outs
adc
xchg
inc
xchg
or
xchg
xor
mov
sbb
ret
adc
adc
rcl
push
cmps
fadd
and
inc
(bad)
in
mov
mov
sbb
push
es
jmp
or
ss
or
xchg
xchg
stc
mov
movs
pop
xlat
out
retf
push
ret
push
in
fsubr
mov
add
sub
sahf
fdiv
add
int
xchg
cmp
push
xor
retf
push
nop
out
int
repnz
int3
push
add
int
pop
push
push
test
in
inc
mov
push
push
dec
push
in
clc
push
push
pusha
push
push
lock
xchg
adc
pop
inc
pop
add
mov
sahf
cmps
ins
add
push
push
inc
lar
cmp
adc
inc
outs
js
adc
inc
and
int3
int
shl
sub
mov
lods
pop
mov
pop
into
mov
js
fs
push
adc
jae
clc
retf
push
xchg
adc
or
mov
sbb
xchg
ror
cmp
pop
lldt
add
add
xchg
pop
leave
adc
adc
pop
repnz
or
mov
inc
push
add
mov
nop
pop
sbb
popa
push
add
pop
inc
adc
inc
inc
fwait
arpl
add
mov
add
xor
mov
test
xchg
xor
add
icebp
inc
push
mov
sbb
shl
test
sbb
push
pop
push
dec
popa
sbb
leave
or
or
lock
mov
xor
loop
add
jl
adc
(bad)
nop
push
pop
add
adc
inc
and
or
loope
pushf
fmul
mov
add
or
(bad)
add
adc
jmp
and
or
jns
xchg
dec
call
xchg
cmp
icebp
inc
add
cmp
and
ret
inc
push
xor
add
jae
xchg
add
sbb
push
xchg
ror
dec
std
xchg
or
sub
jne
cmp
aaa
inc
shr
adc
push
xchg
xchg
shl
xchg
pop
pusha
sub
inc
mov
mov
(bad)
movs
xchg
add
cs
aaa
mov
jge
push
xchg
push
retf
and
xor
xchg
sub
xor
add
xchg
add
cmp
dec
inc
lods
inc
dec
xor
or
cmp
dec
sub
inc
dec
xor
(bad)
dec
add
sbb
sub
xchg
or
imul
fdiv
push
pop
nop
or
add
pop
mov
xor
outs
jb
dec
sbb
ss
jo
pop
seta
and
jmp
or
das
in
cmp
push
or
adc
sub
mov
enter
add
pop
ror
add
nop
idiv
sbb
or
fstp
dec
sar
inc
xor
jmp
dec
sahf
dec
cmp
ficom
mov
rol
xchg
jb
in
mov
out
aas
and
inc
sbb
jbe
loopne
loopne
rol
imul
dec
cmp
adc
rcr
out
dec
cmp
or
pop
inc
test
mov
mov
inc
(bad)
push
jo
(bad)
push
popa
add
fs
add
and
fs
jb
rol
xor
neg
xchg
pop
or
xchg
retf
xchg
in
shr
dec
xchg
xchg
xchg
xchg
ins
mov
retf
push
aam
pop
jle
xchg
xchg
xchg
mov
xchg
xchg
xchg
xchg
ss
jl
xchg
retf
xchg
xchg
shr
(bad)
cmp
xchg
xchg
neg
sub
fcomp
add
adc
or
mov
je
xchg
call
pusha
cmp
inc
fisttp
(bad)
xor
and
add
push
add
gs
or
adc
xchg
push
dec
inc
mov
out
or
rcl
jo
or
dec
push
add
(bad)
mov
retf
test
add
fcomp
sbb
movs
popa
lea
gs
inc
push
in
outs
enter
push
cmp
inc
mov
(bad)
push
sbb
mov
adc
data16
sub
inc
push
cmps
mov
add
push
push
leave
add
jl
push
and
and
pop
push
mov
and
data16
push
add
pusha
dec
add
push
(bad)
and
jmp
add
bound
fs
lds
ins
ins
and
push
enter
repnz
stos
stc
rcr
ins
outs
ja
push
and
cdq
aam
retf
pusha
jns
mov
aad
imul
(bad)
and
and
jmp
addr16
xlat
add
xlat
maxps
or
gs
mov
leave
(bad)
xchg
std
add
fadd
aam
xor
pop
push
adc
add
out
sbb
lock
push
ins
cwde
adc
inc
and
or
pusha
push
movs
inc
inc
bound
sbb
fdiv
pop
xchg
dec
inc
fisubr
js
cdq
lods
pop
in
outs
add
pop
jo
fisttp
xchg
add
mov
mov
mov
cdq
sbb
fiadd
jns
mov
je
pop
pusha
pcmpgtd
outs
adc
push
mov
push
jge
xchg
xchg
pop
sbb
and
icebp
sub
aad
in
adc
idiv
add
inc
adc
jg
adc
mov
repz
or
inc
push
cmps
xchg
pop
and
cli
sbb
daa
fadd
pop
xchg
sbb
fiadd
inc
inc
std
pop
cwde
pop
sbb
dec
dec
std
or
push
pusha
ror
inc
sbb
add
add
jb
sub
enter
xchg
xchg
sbb
(bad)
(bad)
mov
adc
push
loopne
mov
pop
and
leave
es
int3
lods
push
xlat
in
xchg
ja
frstor
add
call
adc
or
mov
adc
pop
xchg
push
inc
xor
push
jae
pop
adc
aaa
sub
add
xchg
sub
push
das
mov
xor
pop
jo
leave
xor
xchg
int
adc
enter
and
and
ss
add
mov
push
jb
int
enter
cmp
lods
aaa
out
add
fxch
enter
push
fild
enter
sub
in
loopne
popa
mov
enter
retf
loope
enter
mov
enter
sbb
cmp
pop
sub
cmc
sbb
aas
fs
mov
in
in
push
loop
call
pop
mov
adc
int3
out
in
push
fsubp
and
jmp
(bad)
push
jb
adc
jmp
aaa
sbb
ins
cmp
bound
xchg
mov
(bad)
aam
pop
xchg
pop
xchg
push
call
cmp
in
sar
adc
dec
xchg
dec
repz
or
call
inc
mov
add
jnp
inc
stos
xchg
sub
nop
push
adc
add
mov
add
inc
adc
or
mov
jmp
fcom
add
sahf
jge
shl
mov
and
mov
jb
xchg
add
popa
mov
dec
inc
dec
xor
dec
jnp
mov
mov
mov
xchg
jae
xor
movs
mov
xor
and
fstp
enter
add
mov
dec
imul
arpl
mov
mov
mov
ds
jae
cmp
push
neg
hlt
mov
call
or
or
push
jo
sbb
rdmsr
pusha
xor
mov
outs
inc
push
shr
add
in
jnp
dec
mov
rcr
add
dec
out
mov
push
out
mov
lods
(bad)
mov
add
mov
scas
fs
call
fs
push
rcr
jne
sti
mov
jnp
push
test
jb
sub
push
xor
push
ret
mov
nop
mov
nop
pushf
cmp
xchg
adc
test
push
ins
test
push
pop
movs
add
pop
das
add
test
mov
push
test
jo
aas
mov
inc
inc
in
push
xor
and
add
adc
add
dec
cmps
or
mov
bound
mov
pop
xor
push
inc
or
ins
jno
sbb
fisub
and
mov
and
ret
popf
adc
ret
sar
pop
dec
fisttp
push
fsub
test
call
fwait
and
pop
push
je
and
rol
test
imul
cmp
cld
or
cmp
xor
mov
add
add
es
gs
sub
ds
div
pop
leave
inc
jl
push
shl
or
mov
fs
int
add
xchg
adc
xor
mov
fadd
mov
pop
sbb
rol
push
pop
ret
add
sub
es
dec
call
adc
out
(bad)
movs
lock
mov
lock
test
adc
test
popf
inc
adc
xor
sub
adc
or
pop
adc
retf
mov
jg
aam
inc
mov
cdq
jmp
xor
call
pop
pop
sub
jle
xor
dec
in
aad
iret
mov
dec
out
xchg
add
scas
pop
sub
xchg
rol
xchg
sbb
add
xchg
outs
dec
sbb
cwde
in
pop
sbb
shl
sbb
xchg
jns
mov
sbb
in
push
pop
fwait
in
xchg
add
pop
popf
inc
lahf
and
xchg
pop
and
or
inc
leave
and
xchg
push
and
or
data16
add
mov
xor
mov
pop
loope
mov
jbe
add
xchg
out
sub
push
(bad)
cmp
sub
xor
or
pushf
push
add
sub
shr
sub
xor
stos
in
mov
inc
push
inc
cs
push
mov
inc
xor
cvtps2pd
xor
js
mov
jge
xor
or
inc
inc
cs
repnz
dec
xor
xchg
mov
ss
sub
iret
dec
inc
push
and
aaa
add
add
cmp
(bad)
push
xor
cmp
pop
add
pusha
test
pop
adc
inc
scas
and
add
xchg
pop
cmp
jb
inc
inc
xchg
pop
adc
leave
push
xor
inc
push
add
mov
loopne
in
dec
add
push
jbe
inc
inc
cld
or
mov
pop
dec
add
test
or
addr16
dec
nop
add
add
cmps
xchg
add
inc
inc
push
pusha
lea
retf
fldenv
jg
or
xchg
xchg
xchg
xchg
sub
xchg
data16
repnz
or
inc
jae
mov
inc
cs
inc
cld
and
inc
inc
inc
nop
mov
stc
inc
inc
cs
sbb
cmp
inc
inc
lods
aad
and
inc
inc
inc
cs
jne
lds
inc
inc
jmp
inc
inc
inc
inc
je
mov
inc
cs
inc
clc
and
inc
gs
inc
inc
inc
mov
cs
and
inc
mov
inc
inc
lods
shl
pop
stc
inc
inc
inc
cs
mov
inc
inc
(bad)
and
loope
(bad)
sub
push
dec
adc
stc
ja
je
ins
(bad)
sub
dec
and
int
movs
pop
sbb
es
daa
sub
das
and
ficom
jae
sub
rol
lds
ja
jb
sbb
pop
shr
or
popa
jae
adc
or
mov
aas
pop
cmp
add
das
jnp
cmp
add
mov
push
pop
(bad)
stos
(bad)
das
test
xor
ss
inc
movs
cmp
ins
scas
push
lahf
pushf
ja
adc
cs
push
ss
lahf
js
push
(bad)
and
lock
clc
ja
add
push
outs
mov
inc
mov
ins
imul
jno
add
push
push
imul
push
sub
gs
(bad)
dec
movs
in
(bad)
adc
cmp
xor
jg
adc
gs
jbe
xchg
dec
test
jg
popa
loop
push
iret
sbb
cwde
call
push
add
stos
dec
mov
ja
pusha
adc
inc
xor
rcl
cwde
call
xchg
ins
xor
les
mov
aaa
mov
and
(bad)
mov
sbb
fadd
sub
int
cld
test
push
mov
loop
add
adc
inc
adc
inc
bnd
push
xor
push
and
adc
jl
push
mov
enter
push
add
push
xchg
jnp
mov
fadd
push
mov
xchg
push
aam
es
mov
ds
xor
dec
mov
push
jns
jbe
outs
jle
or
sbb
dec
ds
push
jmp
sub
push
cmp
inc
xchg
dec
pop
dec
push
mov
mov
add
loope
mov
popf
out
jno
mov
(bad)
mov
outs
mov
fxch
pop
fst
adc
jnp
pop
fiadd
add
push
fcomp
sub
mov
add
retf
adc
sub
adc
scas
data16
arpl
in
lods
das
loopne
das
shr
call
cdq
popa
push
les
xor
add
fistp
xor
jns
xor
mov
call
js
jmp
mov
push
xor
pop
iret
dec
add
xor
add
sar
mov
ret
cmovne
or
push
into
xchg
das
inc
add
add
dec
rcr
dec
add
cmovnp
and
and
push
mov
sbb
sub
sub
add
mov
les
data16
jl
div
push
je
stc
cmp
push
test
lock
adc
pop
or
dec
dec
adc
retf
add
in
pop
add
jns
jnp
ins
jns
jle
cmc
push
push
push
push
or
jnp
aad
nop
popf
shr
push
sub
cmc
and
push
aam
push
push
cs
fbld
icebp
bound
aaa
or
sub
inc
jle
(bad)
push
dec
(bad)
jl
xor
dec
push
jg
or
sbb
ret
ficom
clts
pop
jg
ins
mov
or
sub
enter
xor
leave
dec
dec
ins
push
sub
ret
rol
call
call
stos
jge
mov
add
inc
inc
add
enter
add
mov
mov
push
push
test
loope
cwde
imul
push
imul
aas
pop
imul
adc
ret
fadd
(bad)
or
mov
push
movs
or
or
or
xor
xor
or
pop
(bad)
aam
out
stc
and
(bad)
loopne
push
inc
push
adc
mov
ds
xchg
(bad)
lock
push
pop
xchg
mov
push
(bad)
inc
cld
pushf
shl
mul
mov
push
int3
es
cmp
add
inc
sbb
push
ins
push
cdq
cmp
adc
test
sub
test
add
sbb
stc
xor
mov
xchg
or
int
test
sub
cmp
add
outs
fadd
sub
jl
jg
add
clc
and
pop
dec
or
inc
scas
cmps
inc
repz
popa
cld
jo
paddsw
add
sub
dec
test
repz
xor
jecxz
shl
cmp
lock
in
ss
add
inc
stc
or
lea
inc
or
adc
scas
dec
mov
mov
xchg
add
stos
lar
fwait
in
inc
inc
xchg
jl
rol
(bad)
sbb
mov
dec
fistp
push
aam
adc
shl
cmc
push
jb
pushf
mov
add
cdq
pop
jmp
fsub
pop
pop
add
add
jle
and
and
add
int
push
xor
push
(bad)
dec
je
out
sub
clc
clc
push
or
mov
push
pop
lds
add
cdq
shl
xchg
cmps
stc
stc
add
aas
dec
inc
adc
pop
mov
cmp
movs
in
pushf
jge
fld
fnstenv
or
(bad)
and
or
enter
test
pop
add
or
dec
push
imul
mov
inc
or
adc
ror
xor
or
xchg
sbb
inc
push
adc
stos
xchg
pop
and
leave
push
jb
pop
add
mov
jmp
push
movs
adc
sbb
or
pop
sbb
jmp
add
sbb
or
cmp
xchg
and
and
mov
sbb
jo
fisttp
or
outs
jmp
cdq
es
and
inc
push
inc
push
sbb
cs
pop
and
pop
(bad)
(bad)
(bad)
jns
xor
jmp
add
clc
jge
xchg
nop
add
push
rcr
sub
sub
add
add
adc
xor
push
leave
add
cmc
mov
into
iret
and
xor
dec
leave
push
jb
inc
xor
mov
add
inc
inc
cmp
inc
xchg
add
ror
pop
enter
popf
sub
push
and
(bad)
push
dec
inc
xchg
mov
(bad)
lods
and
mov
and
pop
inc
xchg
inc
sub
scas
xchg
test
cmp
(bad)
sbb
dec
sbb
test
and
cs
dec
mov
mov
dec
shl
dec
jno
in
movs
push
mov
rol
(bad)
inc
jmp
xor
dec
jnp
enter
xor
adc
ss
xor
xor
jnp
shl
xor
add
sub
cmp
xor
xchg
mov
xor
jb
inc
push
xor
adc
enter
ins
fwait
ror
in
jmp
enter
je
mov
enter
clc
sbb
enter
aam
enter
push
push
inc
push
enter
sbb
enter
cmp
test
iret
neg
retf
enter
xor
pop
stos
pop
js
repz
mov
mov
in
inc
pop
sub
push
add
mov
in
nop
pop
in
push
adc
adc
stc
or
push
add
fmul
dec
lods
inc
cmp
pop
das
call
add
push
imul
iret
repz
or
pop
sbb
pushf
adc
add
out
cmp
movs
push
jnp
and
or
or
cmp
mov
call
pop
xor
movs
je
leave
xchg
add
push
retf
sbb
mov
sub
dec
cmps
lock
movs
push
push
cmc
lods
ret
push
sbb
push
adc
loopne
fadd
cdq
inc
clc
cmp
add
and
sbb
cmp
imul
imul
mov
or
dec
mov
mov
iret
or
(bad)
call
pop
imul
push
mov
sub
inc
add
out
lods
sub
or
xchg
xor
adc
sub
outs
ja
mov
or
adc
nop
push
mov
adc
inc
sar
fwait
and
pusha
mov
add
add
ret
dec
jl
or
or
mov
add
push
xor
dec
push
xor
aas
cmp
push
and
fcomp
or
retf
sbb
cmp
or
and
pop
leave
aas
lock
(bad)
and
nop
sbb
cmp
clc
cmps
push
and
push
inc
dec
pop
and
ret
pusha
sahf
mov
mov
rol
pop
xor
add
or
inc
add
scas
pop
or
call
pushf
in
clc
enter
or
push
rcl
sbb
xchg
sbb
popf
mov
and
and
cmp
data16
out
out
and
add
dec
dec
hlt
sbb
sbb
add
stos
add
inc
cmps
push
leave
xchg
pop
inc
mov
mov
sub
test
stos
sbb
loop
setl
in
adc
add
cdq
pop
add
shr
dec
adc
stos
and
xor
or
addr16
adc
ret
mov
movs
and
pop
or
movs
iret
lods
adc
jbe
fisttp
sbb
lods
mov
mov
bsr
sbb
mov
push
mov
inc
call
add
jb
add
push
pop
rol
arpl
xchg
shl
xchg
cmps
push
sub
xchg
dec
leave
(bad)
icebp
shr
mov
inc
fnstsw
xchg
aam
cmp
add
add
popa
fsub
adc
push
retf
adc
cmp
mov
aas
add
cmp
add
popf
ret
xchg
jg
les
push
add
(bad)
jmp
jmp
mov
aam
test
mov
div
push
push
pop
mov
les
push
hlt
xor
int
mov
test
mov
les
or
xchg
pushf
call
or
ins
mov
and
jmp
sub
sub
add
pop
xchg
sbb
add
pop
sbb
pop
rcr
or
enter
xchg
mov
in
sub
push
enter
jnp
int
aad
enter
dec
push
fwait
sbb
push
int3
rcl
mov
push
lods
or
psubusw
push
xchg
mov
cmc
out
inc
push
xlat
ja
int3
inc
adc
cmc
adc
mov
or
jl
shr
jmp
push
dec
inc
or
or
push
mov
dec
pop
inc
bnd
dec
iret
sti
test
cmp
sti
or
mov
leave
add
mov
push
int3
or
dec
(bad)
ja
pop
jecxz
and
aaa
mov
mov
mov
pop
mov
std
cmp
lahf
fcom
mov
in
dec
lea
inc
inc
call
inc
dec
in
sub
sbb
xchg
mov
push
sub
pusha
and
or
test
out
sbb
inc
or
add
das
mov
add
pop
xchg
xor
adc
xor
and
sbb
adc
or
sub
mov
sbb
sbb
xchg
pop
sbb
pop
push
pusha
enter
add
pop
inc
push
add
pop
and
and
and
sub
cmps
xchg
adc
add
pop
pop
adc
or
sbb
add
pop
add
daa
push
inc
scas
outs
(bad)
sub
sub
or
and
sub
and
sbb
(bad)
cs
and
add
add
xor
pop
inc
mov
fwait
inc
inc
add
inc
cmps
or
inc
xchg
and
cmp
inc
ror
push
leave
push
jb
cmp
sbb
test
inc
add
dec
scas
inc
inc
add
add
inc
inc
add
add
inc
inc
outs
pusha
sub
inc
dec
test
dec
cmp
mov
push
sub
pop
or
and
(bad)
in
sub
and
cmps
iret
and
cmp
and
and
and
imul
or
das
and
and
pop
jl
aad
xchg
and
clc
sbb
inc
imul
lods
sar
and
xchg
and
xor
lea
and
and
and
xchg
xor
mov
xlat
std
and
dec
movs
and
and
mov
pop
mov
cdq
adc
imul
std
or
imul
and
fs
out
pop
add
jge
movs
movs
ss
lods
xchg
mov
outs
js
pop
xor
push
shl
pop
cmp
push
cmp
les
push
mov
xor
xchg
jl
add
mov
movs
mov
xor
sbb
cmp
inc
(bad)
adc
es
repz
add
sbb
pushf
popa
js
mov
ss
jo
add
push
push
dec
push
mov
sbb
add
mov
pop
mov
and
xor
sub
mov
ja
add
je
test
xor
mov
adc
cmps
xor
mov
loope
jl
mov
or
mov
ss
inc
jb
jno
cmp
mov
mov
inc
xchg
mov
jmp
push
jo
or
call
inc
or
mov
mov
cmp
jns
rol
cmove
add
adc
add
jb
sbb
pop
sbb
sbb
cmp
(bad)
(bad)
lea
stos
sbb
call
mov
push
adc
sub
repz
add
xlat
popa
mov
mov
add
add
aad
sbb
and
and
and
dec
sub
dec
xchg
jl
pop
jo
dec
jnp
and
cmp
xchg
test
fcomp
int3
and
and
push
and
sub
sub
pop
fmul
sub
sub
inc
aam
adc
pop
and
cmps
mov
mov
xor
dec
cmps
xor
nop
or
xor
ss
cwde
mov
nop
lahf
add
(bad)
sbb
add
xor
xor
or
xor
add
sub
xor
cwde
mov
jb
sbb
jb
xor
lods
fadd
xor
dec
outs
xchg
mov
(bad)
and
dec
xor
xor
jo
mov
cmp
aas
popa
or
enter
xlat
(bad)
repnz
in
inc
inc
(bad)
clc
inc
cmp
mov
push
inc
push
imul
les
add
pop
les
fiadd
xchg
add
inc
enter
test
outs
outs
imul
inc
jnp
scas
test
mov
inc
pushf
out
pop
loop
add
xor
push
dec
ins
mov
cs
les
and
mov
dec
push
adc
inc
inc
cmp
int
xchg
in
(bad)
ins
inc
movs
(bad)
add
inc
loope
or
add
push
nop
pop
dec
inc
fmul
mov
inc
xchg
or
mov
add
and
or
loopne
add
lods
and
enter
cmp
push
push
cmp
inc
outs
mov
lods
sahf
out
out
mov
mov
jge
shl
mov
jbe
lahf
out
ret
fstp
rcr
dec
and
or
sbb
dec
je
cmps
in
and
dec
clc
xchg
mov
mov
push
ins
imul
std
icebp
sub
sub
or
sub
enter
dec
xor
inc
mov
add
or
test
xlat
pop
imul
sbb
ds
loop
add
adc
ret
(bad)
rol
inc
ins
push
dec
ror
push
xchg
aam
in
fdiv
push
hlt
pop
fld
and
mov
repz
adc
data16
enter
mov
into
ins
or
data16
dec
pusha
shl
inc
pop
enter
cmc
xor
test
adc
cmp
inc
out
cld
pop
cwde
push
pop
(bad)
icebp
mov
out
inc
jp
fdivr
mov
push
aam
pop
out
mov
clc
and
out
sbb
lods
es
aaa
lds
inc
lahf
adc
cmp
js
adc
push
adc
in
lods
sbb
clc
inc
xchg
cs
iret
pop
popf
push
and
push
or
push
test
lahf
push
cmp
push
or
adc
shl
jo
test
or
push
push
les
in
fcom
in
inc
sar
test
push
or
loopne
adc
aad
inc
rcl
retf
daa
xor
es
adc
pop
cmps
ja
dec
push
cmp
jge
sar
dec
fs
inc
addr16
sub
xchg
inc
sub
xlat
xchg
mov
cmc
aas
dec
dec
push
nop
and
sar
inc
push
adc
and
and
loope
jg
pop
dec
add
dec
push
cwde
imul
nop
add
xor
popf
pop
fimul
ss
jo
test
jp
cmp
mov
inc
ins
sub
and
inc
pop
cmp
je
fdiv
cmp
call
imul
cmp
inc
cmp
push
call
push
lods
fst
dec
or
(bad)
adc
adc
sub
mov
push
dec
out
mov
dec
sub
push
push
in
shr
add
(bad)
mov
inc
leave
test
test
jno
push
es
pop
in
es
enter
cmp
mov
es
out
daa
push
xor
mov
push
inc
sbb
inc
or
push
fcom
push
addr16
push
adc
sub
push
mov
cmp
push
imul
push
or
push
scas
ds
out
imul
sub
or
test
or
add
jo
ret
or
cmps
add
ins
shl
mov
push
and
mov
mov
adc
push
sbb
movs
sbb
sbb
pop
xor
adc
fld
stos
sbb
fnsave
test
pop
xchg
pop
fwait
dec
mov
mov
pop
xor
and
push
ss
inc
and
nop
xor
mov
sbb
xchg
and
push
loopne
pop
(bad)
scas
ins
mov
pop
mov
inc
adc
and
xchg
sub
aas
pop
xor
push
es
into
popf
adc
sbb
jne
mov
jne
adc
adc
ret
(bad)
dec
pop
cmp
mov
mov
jle
std
push
add
cmovno
push
rol
push
and
cmps
pop
mov
icebp
nop
es
jno
jno
cs
cmp
mov
xor
jl
and
sar
sub
bound
mov
pop
or
cmp
sub
pusha
fcomp
inc
fdivr
imul
xchg
adc
or
imul
inc
or
sub
mov
push
mov
push
loope
sbb
das
(bad)
mov
mov
test
xchg
adc
push
pop
nop
jbe
fld
sub
mov
xor
sub
and
pop
push
push
push
shl
and
push
push
mov
jp
dec
add
test
and
cmp
cwde
and
pusha
sbb
and
cdq
add
out
sbb
xchg
mov
sar
sub
jmp
call
sbb
sar
es
fnsave
cmp
movs
and
add
dec
jmp
jbe
adc
sbb
add
and
test
and
ret
push
les
inc
mov
dec
jnp
push
push
sar
sbb
xchg
into
mov
or
fisubr
out
dec
pushf
mov
outs
dec
sub
cmps
jno
sbb
jae
sbb
loope
sub
pop
xchg
cmp
inc
cmp
(bad)
adc
mov
push
ds
pop
lock
mov
loope
nop
imul
in
jmp
pop
mov
mov
pop
outs
jecxz
retf
add
cmp
test
aas
or
retf
sbb
cmp
add
test
push
outs
dec
jo
pop
or
shr
cmp
inc
add
jmp
mov
pop
std
ficom
jl
pop
mov
mov
and
test
sbb
(bad)
jmp
mov
lds
enter
int
rcr
jmp
das
addr16
add
or
mov
jno
out
sbb
test
lea
push
mov
mov
fsub
ins
adc
mov
jle
jmp
sar
and
sub
clc
push
rcl
test
outs
popa
or
mov
int3
hlt
push
sbb
xchg
add
inc
cmp
test
nop
adc
mov
addr16
cwde
rcl
or
and
into
add
or
or
sub
push
or
and
fld
cmp
(bad)
jmp
mov
popa
call
cmp
in
inc
pop
dec
add
daa
enter
dec
mov
push
push
adc
jae
xchg
jmp
imul
xchg
push
xchg
ja
(bad)
pusha
pop
pop
cmp
or
add
or
cdq
movs
inc
adc
xchg
movs
mov
test
or
popf
sbb
mov
jnp
fucomp
or
mov
xor
or
iret
movs
inc
pop
sub
(bad)
cwde
test
add
xchg
mov
push
shl
sbb
xor
cmp
dec
or
test
rcl
xor
adc
sbb
push
pusha
cmp
sub
mov
into
imul
or
hlt
cmp
mov
int3
pop
(bad)
gs
fs
cmc
push
pop
movs
(bad)
xchg
arpl
outs
lea
jns
adc
ret
jge
rol
push
push
pop
bound
xchg
in
cmp
add
loopne
out
cwde
adc
dec
push
mov
shl
or
cs
cdq
dec
cmp
sub
jp
sbb
es
dec
add
sub
jmp
sbb
cld
pop
push
xor
add
push
push
aaa
xor
or
pusha
mov
int3
cmovns
sub
lds
dec
clc
test
add
sub
pop
xchg
aaa
out
and
lock
je
or
in
dec
shl
xor
rcl
and
ror
mov
fwait
mov
sub
xor
xchg
sbb
xchg
push
test
mov
or
pop
mov
in
arpl
add
adc
js
add
pop
call
fldenv
cmps
mov
bound
add
sbb
test
push
add
sbb
dec
mov
fwait
inc
jmp
adc
fwait
nop
cwde
test
rol
jge
mov
dec
xor
mov
push
cmps
adc
xchg
inc
sbb
sub
sbb
enter
ja
shl
add
mov
add
out
xor
addr16
or
mov
mov
mov
jmp
rcl
push
inc
dec
add
movs
mov
pop
ret
mov
jns
pop
push
clc
shl
fsubr
xor
lods
pop
dec
ret
mov
xor
rcl
push
fidiv
pop
(bad)
push
jmp
adc
adc
dec
fistp
inc
dec
sbb
popf
aaa
movzx
iret
jnp
iret
inc
and
or
xor
xchg
xchg
stos
(bad)
mov
jp
add
pop
rcr
(bad)
cmps
mov
call
dec
pop
sub
pop
aam
sbb
fs
mov
adc
mov
xor
cli
and
into
aam
lds
adc
inc
lahf
sub
fsub
mov
dec
jne
lods
repnz
(bad)
hlt
lock
jmp
imul
jl
or
mov
lds
xor
out
inc
adc
or
cmp
adc
mov
js
mov
add
popf
jmp
cmp
fisubr
aaa
or
add
inc
adc
clc
dec
jl
cmps
and
mov
adc
mov
adc
rol
fcom
mov
mov
dec
push
cmp
push
inc
add
stc
std
adc
mov
rol
movsx
ror
mov
pop
(bad)
dec
(bad)
movs
(bad)
jbe
daa
lds
fadd
fcmovnu
in
pop
in
das
sbb
xchg
pop
outs
xchg
xlat
inc
leave
aaa
inc
sbb
aam
enter
push
inc
sub
push
inc
jo
retf
rcl
loopne
stos
ja
xchg
sub
cmp
add
adc
and
pop
test
out
cmps
unpcklps
xor
push
ss
add
pop
adc
or
aaa
or
rol
ja
test
push
es
(bad)
es
daa
pop
frstor
ret
pop
cmp
inc
bound
xchg
ja
inc
sub
or
adc
add
pop
push
es
adc
and
cmp
pusha
push
sub
xor
jae
pusha
repz
sbb
or
mov
and
push
push
adc
dec
xchg
dec
nop
pushf
inc
loop
mov
jecxz
popa
test
(bad)
hlt
popa
imul
adc
jns
icebp
in
int3
es
pop
mov
and
sub
cdq
lea
lahf
push
dec
sbb
cld
adc
inc
mov
ins
mov
nop
inc
mov
add
mov
test
inc
push
add
sbb
inc
add
out
sti
inc
adc
push
push
pop
adc
push
push
adc
std
adc
popf
in
cmp
mov
add
ds
inc
dec
nop
or
mov
es
sysexit
xchg
cmp
cmp
bt
or
aam
jb
sbb
cdq
xor
lea
xchg
jo
adc
lea
in
mov
xchg
xor
xlat
and
(bad)
test
adc
xchg
jbe
xchg
and
sahf
mov
movs
ret
dec
xor
loope
mov
pushf
sbb
in
xchg
test
movs
nop
mov
pushf
ret
cwde
imul
pop
das
pop
mov
pop
repnz
fld
xchg
mov
adc
and
sub
lock
lock
or
fs
mov
cmp
jmp
pop
jmp
jmp
fmul
seto
les
mov
xchg
xchg
inc
(bad)
outs
or
adc
jmp
inc
sbb
mov
sub
mov
aam
mov
xchg
jbe
push
ret
mov
add
cmp
sti
std
rol
or
mov
enter
adc
inc
sar
adc
lahf
imul
push
jg
or
pop
dec
mov
add
aaa
add
add
pop
and
add
mov
or
adc
not
sahf
adc
pop
adc
clc
pop
call
scas
and
repz
hlt
sbb
dec
mov
add
mov
push
push
nop
pop
ror
fiadd
cmc
dec
inc
call
mov
add
adc
jns
cmp
pop
popa
xchg
adc
daa
or
je
xchg
enter
cld
cmp
add
jb
lds
shl
les
pop
inc
inc
les
je
mov
inc
or
mov
(bad)
add
ins
add
adc
cmps
fwait
cld
(bad)
popa
xor
je
or
sbb
add
push
push
ss
sar
mov
or
push
mov
xchg
cmp
ret
shl
pop
or
inc
clc
dec
pop
push
inc
std
daa
imul
dec
syscall
fs
and
clc
dec
imul
mov
or
imul
xor
les
test
xor
cs
inc
push
push
xor
fistp
sub
inc
push
xchg
add
sbb
je
jl
cvtdq2ps
or
add
push
push
or
pop
daa
and
mov
sar
loopne
add
and
stc
mov
mov
in
sbb
dec
or
xchg
dec
xchg
push
stc
nop
popf
mov
(bad)
xor
or
xchg
(bad)
mov
xchg
xor
movs
les
fcomp
inc
inc
lock
cmp
dec
fsubr
mov
sbb
mov
jle
shr
enter
in
aam
add
or
add
dec
push
and
test
push
jne
or
jo
xlat
push
fwait
push
add
add
nop
lock
jbe
and
dec
xchg
mov
std
and
cmp
xchg
cmp
mov
adc
add
push
loope
mov
mov
pop
jo
cmps
and
js
mov
in
shr
push
xchg
pop
xor
and
shl
inc
add
pop
push
popa
xchg
or
add
cmp
mov
inc
iret
enter
mov
ins
push
mov
test
dec
jne
daa
add
mov
add
dec
push
xchg
inc
fmul
icebp
dec
sahf
pop
xchg
sub
(bad)
or
inc
mov
psraw
sub
add
jmp
dec
or
fcomp
and
outs
xor
inc
test
pop
pop
or
cmp
lahf
ret
test
mov
mov
adc
outs
mov
out
pushf
movs
test
add
sbb
adc
clc
test
xchg
cld
sar
and
stos
push
add
retf
ret
movs
sub
fnstenv
cmp
mov
xchg
xchg
aaa
inc
add
pop
pushf
xchg
xchg
xchg
xchg
cmp
xchg
xchg
dec
mov
mov
and
pusha
and
push
jle
gs
or
xor
add
mov
xchg
mov
jg
(bad)
jecxz
inc
xchg
je
test
add
loope
je
outs
cld
mov
hlt
leave
inc
movs
neg
inc
add
gs
clc
jecxz
xchg
das
sbb
jmp
inc
ror
mov
pop
loope
and
mov
das
sbb
mov
add
add
nop
repz
mov
sbb
imul
sbb
push
cmp
or
sti
xor
sbb
pusha
nop
fist
mov
xchg
add
mov
dec
jae
push
jmp
enter
dec
mov
sbb
sbb
jno
inc
mov
or
xlat
js
mov
test
pusha
mov
test
xchg
xor
sbb
cmp
jno
pusha
xlat
pop
data16
inc
push
and
and
xchg
pop
adc
addr16
fwait
mov
xchg
inc
pop
fistp
cmps
cmc
sbb
push
inc
push
mov
xor
inc
adc
and
rol
(bad)
adc
mov
bndldx
imul
pop
mov
jle
loopne
mov
fcmovnbe
pop
inc
cld
ret
add
sti
add
ret
adc
ror
mov
imul
lods
and
stos
sbb
jae
add
add
push
cmp
adc
inc
push
out
test
cmp
mov
or
pop
fucomp
push
jl
mov
movs
jne
mov
loope
mov
adc
sbb
inc
std
push
inc
pop
dec
icebp
bound
imul
mov
jp
cmp
inc
cmp
add
outs
sbb
push
into
add
and
sub
push
push
sbb
pop
scas
mov
xlat
mov
pusha
dec
sub
mov
(bad)
jbe
mov
imul
sub
xor
inc
xchg
xor
retf
pop
cs
pop
jmp
add
cmp
clc
adc
sti
mov
cli
mov
mov
and
lds
nop
adc
mov
mov
daa
sub
add
ficom
ss
cmp
mov
(bad)
je
push
sub
ins
les
(bad)
cwde
pop
or
js
xor
push
sbb
addr16
test
test
pop
cmp
adc
push
cld
xchg
test
call
aas
sbb
gs
mov
push
mov
call
inc
pop
mov
push
adc
mov
adc
sbb
mov
mov
sub
fnstenv
add
adc
or
jne
push
mov
lods
sbb
shl
xchg
xchg
add
call
dec
cmps
(bad)
cmp
xor
pushf
nop
out
xor
iret
adc
xchg
gs
xchg
das
mov
sub
add
repnz
cmps
data16
mov
and
mov
arpl
call
psubb
sub
adc
inc
adc
cmp
push
pop
mov
mov
pop
sbb
add
add
push
dec
push
push
mov
sub
es
push
and
push
pop
dec
push
push
add
iret
js
sub
icebp
sahf
pop
js
sub
lock
fwait
dec
aaa
inc
fwait
mov
push
push
repnz
jmp
js
cmp
and
mov
mov
call
push
jecxz
mov
popa
pop
lods
xchg
cmp
or
sbb
sbb
inc
rol
(bad)
adc
sbb
fild
dec
nop
fdivr
or
ror
(bad)
test
enter
loope
sar
(bad)
scas
cmp
cli
dec
pop
cli
jmp
push
nop
xchg
xchg
dec
xchg
inc
lahf
xor
mov
or
loopne
hlt
sbb
out
adc
ins
jp
add
imul
sub
inc
jae
jl
fs
call
shl
js
cdq
in
cmp
sub
cmp
ret
ret
jo
and
xchg
in
ins
fstp
add
mov
rcr
add
mov
aaa
jnp
push
lock
cwde
pop
or
sub
inc
xor
pushf
inc
adc
inc
xor
xor
mov
sbb
dec
movs
add
xchg
mov
adc
out
push
sub
add
sbb
mov
push
adc
ror
aam
add
adc
imul
test
inc
add
arpl
stos
mov
fadd
mov
ret
sbb
or
(bad)
mov
(bad)
sub
and
mov
daa
iret
or
bts
and
inc
in
lea
out
pop
or
cmp
add
loopne
and
mov
add
pop
xchg
or
dec
add
inc
sbb
cmp
and
fmul
dec
push
cmp
add
and
fcomi
dec
push
rol
retf
mov
cs
and
mov
xor
pusha
cmp
or
and
sbb
sbb
ds
xor
or
les
xchg
and
mov
inc
sub
pop
lods
aaa
mov
inc
adc
pop
add
dec
xchg
ins
jb
cwde
mov
add
cmp
xor
add
add
pop
lahf
dec
inc
leave
xchg
push
sub
jg
je
mov
(bad)
and
and
sub
sub
clc
mov
mov
push
xchg
lock
push
daa
pusha
popf
fxch
pop
enter
daa
adc
lods
xchg
xchg
mov
mov
xchg
iret
in
adc
dec
pop
pop
and
xor
xor
dec
(bad)
push
fisttp
out
mov
and
dec
ins
add
add
sbb
(bad)
and
mov
and
enter
adc
cmp
push
dec
adc
ret
(bad)
adc
lods
adc
dec
cwde
add
jae
punpcklwd
mov
xchg
sub
inc
sub
mov
cmp
(bad)
xchg
push
scas
adc
mov
rol
xor
xor
into
aaa
sbb
sbb
push
xor
sub
add
mov
push
dec
scas
inc
xor
or
sbb
sbb
or
add
retf
xchg
mov
add
dec
dec
jmp
and
pop
loope
mov
lea
or
inc
or
and
adc
addr16
ins
xchg
and
jnp
or
fidivr
mov
push
push
or
out
xor
xchg
add
and
in
addr16
sub
ret
out
sbb
mov
pop
cmovs
xor
push
cwde
xchg
std
and
or
inc
jle
xor
add
hlt
add
jl
add
jbe
sub
xor
or
imul
add
fisttp
adc
add
jbe
push
add
mov
or
ins
stos
inc
imul
jno
inc
add
mov
cmp
xor
mov
(bad)
movs
xchg
pop
aad
fisttp
mov
cld
cmps
push
cmp
xor
inc
or
sbb
setnp
or
ja
xchg
xchg
arpl
frstor
push
mov
jnp
retf
into
push
push
push
leave
mov
mov
adc
jmp
mov
or
test
dec
and
bound
adc
add
dec
ins
xor
xor
fild
or
pop
add
fwait
xlat
add
jmp
add
mov
cmps
jmp
and
or
pop
inc
outs
stos
das
or
cmp
xchg
push
add
pusha
xor
imul
fisub
cmps
(bad)
addr16
dec
mov
cmp
ret
cmp
pusha
adc
mov
loope
outs
jb
js
or
push
loopne
adc
xor
imul
add
mov
add
push
shl
and
pop
in
jecxz
sub
into
or
lock
pop
cmp
adc
mov
fld
daa
cmp
xchg
xchg
inc
mov
es
inc
mov
ins
add
pop
fwait
mov
add
adc
dec
shl
push
jne
js
and
ds
dec
or
imul
pop
cmp
out
mov
or
add
dec
in
xor
das
test
mov
inc
push
xor
mov
sbb
mov
test
sar
push
push
int3
out
sahf
out
cmps
mov
cdq
fld
fdivr
pop
lods
bound
and
pusha
dec
dec
mov
pop
dec
imul
sbb
add
ds
and
inc
mov
(bad)
push
out
inc
je
sbb
xchg
lods
outs
shl
jns
jmp
lods
or
and
cmp
stos
sub
int3
dec
sti
add
jmp
sub
sbb
andnps
or
mov
retf
cmps
push
iret
mov
add
dec
cmp
cmp
adc
in
dec
add
jnp
cmps
add
or
inc
(bad)
pop
push
pcmpeqb
or
sub
mov
adc
inc
jg
in
(bad)
add
or
push
inc
popa
sbb
sahf
add
push
call
pop
jns
or
adc
mov
sub
mov
mov
jmp
in
test
inc
movq
inc
jmp
mov
push
or
inc
je
push
aam
add
movs
sbb
adc
mov
inc
mov
mov
sar
jbe
clc
ret
adc
xchg
mov
pop
push
sbb
das
bound
jns
inc
mov
pop
pop
shl
add
dec
mov
inc
add
add
and
push
jmp
mov
repnz
cmp
cli
jl
inc
imul
stc
pop
and
lods
cs
and
mov
ins
aaa
lods
and
jb
inc
in
nop
fild
cmp
push
jne
(bad)
xchg
(bad)
ret
mov
rol
add
(bad)
lea
gs
mov
ret
sbb
xchg
and
daa
test
add
pop
lahf
mov
into
(bad)
xlat
jmp
pop
lods
dec
xchg
adc
xor
cmp
pop
xor
ret
ret
jmp
mov
add
sbb
fmul
je
inc
add
in
enter
sub
push
(bad)
xor
movs
pop
std
sbb
ret
mov
cmc
cld
add
clc
xor
jns
and
ret
(bad)
jb
adc
mov
dec
push
inc
jle
sub
enter
dec
cmps
or
adc
add
dec
sahf
test
adc
js
hlt
aam
pop
pop
nop
push
mov
cmp
inc
cmp
lds
fwait
inc
aam
pop
pop
sub
push
adc
es
fist
add
adc
sub
and
cmps
out
ret
ja
aam
xchg
test
(bad)
or
mov
xor
jmp
pop
and
test
movs
repz
pop
mov
cmp
ret
fisub
jg
or
ret
or
jle
fadd
test
(bad)
sub
cmps
lock
inc
add
inc
add
dec
push
add
and
test
je
inc
cmp
jp
pop
xchg
dec
inc
add
shl
pop
dec
dec
adc
in
ret
pusha
fwait
mov
dec
inc
jb
mov
or
or
cmp
je
jg
cmp
mov
pop
jge
and
add
popa
ret
inc
cmp
push
inc
xor
xchg
popa
mov
xchg
inc
movs
cmp
sub
mov
imul
sbb
frstor
mov
fist
xchg
push
xor
and
fmul
in
in
in
xchg
fist
movs
es
ins
push
mov
repz
mov
je
add
sbb
sbb
push
sub
fsub
jmp
sub
lds
arpl
adc
les
pop
jmp
mov
sbb
add
jmp
inc
sbb
xchg
rcr
pop
fistp
xchg
push
jmp
aaa
sbb
or
add
jnp
add
mov
sub
inc
ror
push
dec
adc
dec
out
hlt
or
call
add
push
and
and
jp
call
sub
mov
jne
ret
push
sbb
jp
xchg
scas
add
not
sub
ins
and
add
and
retf
imul
add
lahf
inc
jae
ret
push
int
sub
sub
(bad)
add
sbb
or
inc
sbb
add
test
xchg
shl
pop
in
add
cli
ret
imul
outs
push
cmovg
lods
add
call
clc
sub
pop
pop
and
repnz
jb
aas
repnz
ret
mov
cld
cmp
add
push
je
push
or
outs
adc
jmp
stos
je
shl
fisub
mov
ja
sub
loopne
adc
mov
fiadd
sub
cmps
loop
pushf
xor
pop
fistp
test
mov
or
jecxz
xor
and
mov
xor
movs
and
je
push
push
call
stos
sub
ror
stos
sub
xchg
cmp
add
push
inc
xor
xchg
movs
or
xor
shl
inc
mov
fwait
push
lods
stos
push
lods
xchg
out
xchg
test
or
and
ret
dec
jne
push
add
sti
jmp
lock
push
jno
ins
inc
sub
sub
mov
nop
or
dec
movs
je
sahf
mov
mov
pusha
dec
xchg
push
(bad)
mov
shl
dec
into
sbb
je
pop
ins
loope
push
mov
cmp
xlat
std
add
lea
ror
adc
cmp
sub
(bad)
mov
aam
jecxz
lods
pop
mov
test
cmp
in
rol
pushf
push
das
xor
lock
xchg
push
cwde
mov
sbb
loop
pop
into
push
xchg
sti
and
out
pop
outs
cmps
je
dec
nop
movs
nop
pop
nop
dec
xchg
sub
das
sbb
adc
dec
dec
jne
or
inc
inc
aam
cmp
or
sub
movs
sbb
shl
les
jne
mov
enter
mov
dec
and
fcomp
jno
cmps
rcl
pop
add
adc
clc
and
fcomp
imul
mov
xchg
lods
mov
sub
pop
pop
inc
loopne
mov
cs
aad
jno
cmp
xor
xchg
pop
jne
popf
pop
push
sbb
jle
push
push
sbb
cmp
xchg
xor
inc
and
jae
sbb
ins
cmp
repz
cli
in
pop
inc
mov
mov
ficomp
push
and
mov
cmp
sbb
jmp
and
rcr
hlt
cld
call
scas
shr
mov
dec
sub
dec
jecxz
and
jo
push
in
mov
cmp
push
or
add
push
push
sbb
outs
push
add
je
xor
adc
mov
ret
cli
xchg
in
pop
mov
push
pushf
(bad)
push
movs
add
mov
(bad)
sahf
add
xor
sbb
pop
xchg
(bad)
stc
test
dec
sbb
pop
sbb
jne
(bad)
jno
adc
sbb
adc
and
enter
test
scas
add
cmps
outs
mov
sub
jmp
sub
sar
adc
ss
test
push
xchg
cld
ror
ret
mov
jbe
lock
(bad)
rcl
inc
retf
adc
sar
push
and
out
sub
jb
rcl
mov
stos
mov
outs
adc
(bad)
or
aam
pushf
add
iret
or
sbb
pusha
aas
jge
mov
je
push
in
xchg
jne
mov
adc
add
fwait
ss
mov
add
dec
enter
inc
aam
jnp
cmp
das
xchg
fst
jbe
stos
adc
adc
iret
xchg
les
stc
mov
mov
adc
dec
mov
pusha
xor
(bad)
std
push
xor
jl
push
lea
cld
add
adc
or
cmps
push
adc
dec
sbb
pop
mov
or
xchg
push
or
sbb
mov
add
sub
and
push
xor
xchg
leave
add
addr16
add
add
shl
sub
push
xchg
jo
sar
add
or
in
sbb
mov
lods
scas
sbb
cmp
imul
add
xor
adc
popf
mov
ins
adc
dec
xor
movs
ds
xchg
mov
rcl
ins
mov
cdq
in
push
in
in
dec
adc
mov
js
add
xchg
and
in
pop
mov
and
cdq
call
inc
ds
in
jne
mov
or
in
loopne
push
add
popa
inc
loope
sub
and
sbb
and
mov
or
pop
setno
ret
mov
xor
movs
jnp
call
in
ret
mov
pop
popf
fxch
test
push
aam
sub
out
push
or
sub
xor
sbb
or
mov
add
repnz
(bad)
pop
dec
rol
aaa
cmp
lods
ffreep
je
fldcw
fst
adc
scas
mov
ret
das
pop
push
mov
mov
in
fbstp
dec
icebp
xor
push
inc
push
ss
ret
popf
(bad)
mov
out
push
pusha
jmp
push
sub
adc
push
(bad)
push
jge
mov
in
inc
or
test
adc
sbb
sub
test
and
pop
les
daa
jo
(bad)
jmp
xor
pop
pop
jmp
scas
pop
mov
bound
and
or
mov
xor
cs
push
xlat
ss
lahf
dec
mov
ror
pusha
mov
pop
test
and
in
outs
pop
out
sbb
or
push
lods
push
ret
aad
and
xor
push
push
inc
lods
int
add
loop
fs
mov
sub
fst
and
out
repnz
sbb
je
push
sub
das
add
rcr
push
add
cli
ss
bound
fnsave
(bad)
cmp
js
aas
iret
adc
lock
xchg
xchg
dec
neg
mov
into
sahf
inc
xchg
cs
xchg
xlat
xchg
lock
push
push
and
push
adc
or
jge
xchg
cmps
xchg
inc
mov
mov
or
mov
xchg
ja
adc
add
or
iret
xor
jg
adc
mov
add
adc
sub
popf
aas
call
xchg
inc
mov
mov
or
xchg
mov
pop
xchg
icebp
loop
in
and
cmp
push
loopne
xor
enter
leave
push
and
pushf
mov
mov
arpl
rcl
dec
adc
xchg
xchg
fcomp
mov
test
push
loopne
imul
dec
pusha
and
repnz
scas
adc
pushf
sbb
jne
out
sub
xchg
pop
rol
mov
test
cmp
jp
jmp
ret
mov
and
mov
mov
add
adc
mov
ficomp
push
mov
xchg
aam
mov
sbb
outs
jne
ds
inc
popa
mov
sbb
retf
mov
inc
push
pusha
push
lods
lods
and
dec
add
popf
pop
and
xor
adc
jmp
sbb
outs
jg
lock
jbe
xchg
xor
call
nop
cwde
mov
cld
les
mov
pop
sbb
rol
and
fs
bound
xor
sahf
pusha
int
pop
fcmovbe
nop
pop
lea
sbb
stos
cmp
lahf
clc
mov
xchg
fdivr
jp
hlt
sub
mov
enter
ins
and
movs
and
pop
mov
lods
pop
ja
and
mov
nop
mov
nop
cmp
xchg
adc
jmp
pop
mov
popa
inc
xor
shr
jmp
pop
dec
movs
xor
push
enter
sub
mov
ret
and
jae
push
push
mov
test
sbb
sub
pop
inc
cmps
mov
cs
mov
movs
pop
mov
push
sbb
adc
or
bound
mov
mov
push
push
add
mov
adc
fnstsw
nop
test
adc
push
push
cmp
rcr
push
cdq
sbb
int3
adc
push
mov
int3
cmp
ss
adc
cmps
pusha
loop
sub
adc
jge
xchg
and
or
push
jb
and
in
push
push
push
mov
mov
jmp
rcr
jb
ins
mov
call
lods
cmp
push
xor
mov
mov
or
sub
fcmovbe
sbb
push
test
fs
push
jecxz
jg
sub
mov
adc
xor
mov
inc
xor
push
js
out
and
popa
sub
mov
loope
and
icebp
ss
in
loope
les
xor
aam
fsub
jl
mov
mov
add
sbb
ret
in
dec
ficomp
jecxz
sub
pop
outs
sub
mov
mov
xchg
pushf
rcr
and
xchg
aam
add
mov
cdq
js
sub
push
mov
add
xor
cwde
xor
shl
mov
dec
dec
or
test
dec
mov
inc
ja
out
and
push
adc
and
sbb
fwait
push
fild
out
cld
mov
leave
adc
push
or
mov
and
sbb
lahf
mov
shl
lahf
imul
adc
lea
js
scas
inc
ror
jnp
or
mov
test
or
add
pop
dec
call
dec
pop
jmp
lods
xchg
fcomp
stc
xchg
sbb
and
add
cmps
mov
call
cmp
cld
je
pop
cdq
push
and
push
add
or
cmps
sub
pop
mov
xchg
xchg
popa
int3
mov
pop
or
hlt
or
jecxz
frstor
mov
repz
les
fwait
aad
add
mov
mov
ret
mov
sbb
fcomp
cmp
pusha
sub
push
adc
idiv
and
push
(bad)
outs
sbb
jg
pop
inc
inc
push
inc
inc
jne
stos
popa
fld
lahf
inc
mov
out
inc
sub
mov
add
movs
rcr
adc
les
adc
xchg
push
dec
frstor
push
push
sub
xchg
dec
inc
daa
scas
mov
push
add
rcr
push
adc
sbb
cdq
out
aaa
pop
ror
enter
adc
mov
add
call
xchg
push
xchg
push
into
mov
adc
mov
pop
aam
push
enter
push
aam
sub
(bad)
adc
jge
ret
or
jmp
nop
sbb
inc
fist
and
xchg
cs
sar
ror
paddw
imul
dec
add
(bad)
aad
inc
sahf
inc
xlat
scas
mov
rol
adc
mov
dec
sbb
scas
loop
xor
dec
clc
pop
call
or
adc
sub
jnp
int
mov
ins
add
xor
mov
aad
out
jmp
add
push
pop
or
ds
rcr
mov
pop
add
aad
sti
sub
or
movs
cmp
sub
pop
add
stos
scas
movs
add
stc
sbb
dec
pop
mov
and
adc
nop
mov
cmp
xchg
sub
push
cmps
nop
sbb
push
xchg
push
cmp
add
aad
fldcw
xchg
das
mov
push
cmps
jne
cmp
or
je
and
sbb
pop
or
xor
mov
mov
add
stc
add
nop
pop
inc
adc
(bad)
(bad)
xchg
sbb
pop
xchg
mov
loopne
push
sbb
mov
not
sub
add
mov
adc
sbb
dec
loope
jecxz
das
cmp
dec
adc
inc
sbb
pop
push
pushf
or
lods
pop
les
sti
xor
shr
adc
push
fild
test
dec
adc
cmp
in
xchg
cmp
xor
clc
nop
mov
adc
inc
rcr
cmp
jge
(bad)
fwait
pop
out
or
sbb
sub
popa
clc
and
mov
mov
or
adc
mov
add
sahf
sbb
test
or
adc
inc
jb
push
stos
mov
inc
leave
mov
nop
popf
test
add
enter
jno
or
rcl
cmps
mov
cwde
sbb
addr16
cmp
idiv
mov
xchg
ret
push
and
xchg
jg
adc
mov
cs
ficomp
adc
(bad)
push
retf
add
push
pop
mov
sbb
nop
out
add
pop
and
stos
xor
out
sbb
sbb
pop
int
iret
cli
mov
mov
test
imul
dec
repz
dec
dec
lock
add
adc
cmp
jbe
movzx
mov
stos
in
sub
adc
lock
dec
stos
and
inc
dec
neg
cmps
xchg
push
or
outs
xor
push
leave
jne
xchg
(bad)
mov
mov
push
push
daa
out
cmps
fwait
retf
lock
dec
push
jle
xor
inc
cmc
xor
jbe
lods
pop
or
pop
pop
xlat
(bad)
adc
test
add
mov
and
and
mov
inc
(bad)
mov
fistp
adc
or
jge
je
or
and
add
mov
(bad)
test
sbb
mov
sub
stos
sub
inc
or
mov
mov
rol
push
add
dec
es
sub
outs
jg
add
mov
clc
mov
xchg
cmps
jbe
and
cmp
mov
fmul
add
shl
fimul
mov
pop
stc
and
add
inc
sbb
inc
bound
int3
adc
jo
push
dec
jp
ret
cli
sub
push
and
imul
xor
mov
mov
add
movs
xchg
in
pushf
dec
and
cmp
es
iret
jnp
sub
popa
test
das
movntps
arpl
xchg
(bad)
push
movs
or
sbb
int
imul
push
sub
push
xor
push
rol
xor
(bad)
jmp
pop
dec
(bad)
add
pop
lea
sbb
clc
inc
or
sbb
mov
or
sar
mov
xchg
jne
mov
inc
pusha
outs
aam
xchg
adc
lea
adc
das
add
imul
nop
adc
xchg
inc
sub
jmp
mov
mov
sbb
sahf
dec
sbb
mov
test
scas
xor
cwde
inc
xchg
sub
test
jmp
mov
jmp
mov
pop
add
mov
addr16
nop
gs
xor
xchg
scas
shl
enter
mov
adc
test
cmp
mov
mov
or
or
ins
cmp
iret
xchg
push
fs
or
loope
(bad)
mov
inc
cmp
movs
aas
in
fild
ret
test
jb
jo
sub
nop/reserved
mov
add
jae
scas
(bad)
cmp
in
nop
push
inc
add
or
or
add
adc
test
inc
jecxz
pop
push
mov
call
add
test
jno
push
neg
stos
mov
lahf
sub
or
lea
mov
push
fsub
movs
shl
inc
pop
mov
cmp
xchg
inc
fistp
addr16
ins
and
sbb
stos
test
or
inc
sub
push
add
cmps
jo
jl
sbb
or
shl
test
cs
add
inc
xor
cdq
mov
sbb
mov
xor
mov
or
leave
cmp
cmp
adc
adc
dec
ror
push
fmul
mov
les
data16
inc
add
nop
dec
xor
dec
dec
pusha
add
dec
fist
push
fld
(bad)
cmp
jge
daa
sbb
inc
(bad)
dec
jl
xchg
and
sbb
or
sub
mov
pop
bound
xchg
outs
add
das
push
pop
das
dec
pop
cmps
(bad)
mov
mov
add
in
cmc
adc
inc
or
fwait
ins
adc
sti
pop
cmps
or
adc
ror
push
sahf
mov
inc
dec
les
pop
fistp
je
sahf
inc
add
fisub
mov
xor
xor
and
inc
iret
test
push
popf
and
jmp
sbb
sub
add
and
and
mov
sub
rcr
ficomp
in
xor
or
inc
loopne
lahf
daa
rol
daa
enter
mov
movs
jns
cmp
add
or
xchg
(bad)
rol
add
sbb
in
dec
cmps
sub
fs
dec
in
mov
jl
add
and
push
jo
(bad)
cs
mov
inc
adc
test
dec
dec
push
ins
inc
sbb
and
imul
daa
dec
jl
xor
add
mov
add
div
mov
add
and
or
loopne
ins
xchg
in
ins
pop
les
sbb
inc
and
ins
pop
xchg
sbb
sbb
jmp
xor
out
pop
mov
test
add
xchg
sub
push
lock
xchg
xor
call
adc
pop
sbb
add
pop
ret
sbb
mov
add
adc
test
jbe
ret
and
lock
xlat
xor
shl
ins
or
int
pop
sbb
dec
loopne
inc
pop
shl
int
mov
sbb
popa
and
pushf
hlt
dec
adc
jns
dec
mov
mov
mov
dec
pop
enter
outs
test
xchg
mov
inc
jne
movs
and
or
sbb
mov
sbb
sub
dec
ret
cmps
mov
xor
dec
iret
add
fdiv
mov
pop
push
outs
or
sbb
mov
imul
cdq
push
mov
imul
dec
jmp
inc
add
adc
daa
mov
xchg
or
or
test
push
mov
arpl
pop
out
pop
cld
in
sub
inc
cmp
cdq
inc
push
add
xchg
enter
nop
retf
xchg
mov
and
(bad)
inc
test
push
out
es
cmp
mov
fs
inc
mov
push
hlt
ffree
sbb
loope
hlt
js
popa
sub
hlt
xor
inc
mov
sbb
fwait
mov
retf
mov
jge
inc
fs
or
mov
jb
and
loope
hlt
outs
mov
scas
xchg
rol
fcmovnu
nop
jno
scas
rol
and
pop
push
stos
and
add
ins
xchg
pop
adc
inc
mov
shr
sub
fiadd
enter
mov
mov
mov
pop
xchg
adc
jne
(bad)
cli
test
pop
sub
jg
cmc
sub
fnstsw
nop
and
inc
or
mov
pop
ins
(bad)
or
sbb
pop
adc
les
cmp
pop
jl
xor
mov
cmc
inc
mov
pop
inc
xchg
or
push
mov
clc
push
dec
push
jns
jns
xor
and
jns
nop
pusha
or
sbb
mov
popa
ror
jne
jge
and
mov
jmp
mov
sbb
mov
sub
mov
iret
and
add
or
push
ins
xchg
xor
jae
pop
cs
in
inc
inc
aam
sub
pop
fwait
inc
imul
das
push
outs
dec
lds
fs
pop
push
xor
retf
xor
xor
xor
leave
lds
out
jne
cs
pusha
bound
xor
in
mov
mov
mov
adc
test
retf
bound
push
mov
mov
cld
dec
xor
jo
sub
cmp
push
adc
xchg
inc
add
mov
add
sahf
jns
pop
jne
push
retf
xchg
pushf
xchg
and
fisub
dec
retf
xor
mov
xor
xchg
adc
jbe
nop
iret
sar
outs
xor
jne
xor
clc
enter
xchg
adc
ja
or
cmp
movs
shl
jl
pop
jns
sub
sub
pop
push
push
leave
mov
sub
sub
push
inc
jb
cmps
retf
push
mov
fldcw
xchg
push
cs
dec
retf
fs
retf
retf
cs
pusha
pusha
pop
jns
cmps
mov
sub
pushf
lods
ss
retf
sub
pop
dec
xlat
pop
retf
sbb
adc
or
pop
ins
repnz
sahf
out
adc
push
movs
jp
mov
adc
jne
mov
fst
mov
adc
sub
adc
jne
ss
add
jg
fwait
push
xor
cmp
inc
push
or
sub
sub
push
xor
or
adc
push
sub
mov
aam
cs
adc
das
sbb
in
gs
mov
sbb
push
push
add
fadd
fisttp
js
das
inc
dec
out
sub
mov
imul
test
inc
add
mov
or
leave
nop
inc
or
pop
scas
les
mov
lds
in
stos
mov
cmps
inc
adc
popa
clc
movs
cmps
lock
mov
scas
add
dec
lods
inc
cmps
ins
repnz
xor
xor
and
inc
add
lea
nop
push
sbb
adc
push
sbb
add
dec
cmps
lods
xchg
or
popa
sbb
dec
mov
ins
clc
push
mov
jb
popa
es
sub
jne
aas
(bad)
pop
xchg
xor
inc
jnp
idiv
add
or
add
fld
rcl
mov
or
xchg
sahf
mov
repnz
xchg
rol
or
jmp
movs
into
icebp
add
data16
(bad)
adc
pusha
ja
or
rcr
jmp
ins
and
xchg
xor
or
sti
arpl
sub
scas
call
adc
hlt
popf
mov
dec
add
or
inc
fld
pop
and
add
dec
adc
push
jmp
inc
pusha
fs
data16
inc
push
jo
mov
xchg
lock
movs
push
or
cwde
test
pop
xchg
add
pop
cmp
add
into
inc
pop
clc
inc
dec
aas
pop
dec
push
sar
rol
xchg
call
mov
pusha
push
push
xor
push
xchg
retf
test
test
xor
mov
inc
pusha
sub
xor
test
fsub
pop
or
enter
mov
ja
cmp
or
in
jnp
stos
mov
mov
xchg
cs
jo
lds
sbb
xor
fstp
pop
not
push
cmovb
out
jbe
ret
push
dec
or
and
aam
arpl
dec
in
aas
cmp
and
and
cmp
jne
pop
dec
push
jns
and
add
add
add
xor
inc
push
xchg
mov
jne
mov
enter
outs
sub
je
and
sbb
push
(bad)
xchg
push
jl
ss
cwde
dec
and
popa
test
mov
and
add
mov
mov
and
cmp
(bad)
xor
jl
add
push
loopne
sti
push
jmp
and
sub
outs
and
or
or
cmps
pop
dec
push
dec
pop
cs
pop
inc
cmp
out
cmp
dec
sbb
and
lea
stos
das
mov
jne
movs
xchg
push
retf
inc
sbb
xor
mov
sub
sbb
es
movs
mov
xchg
test
int3
pop
push
and
xor
shl
mov
xchg
jne
icebp
lods
shr
jnp
test
jb
nop
dec
and
rol
push
adc
and
sbb
xchg
add
and
std
(bad)
std
movs
dec
jecxz
or
push
cwde
mov
mov
jno
push
rcl
iret
je
xor
push
jle
xchg
cwde
dec
inc
(bad)
cmp
xchg
xchg
ss
jno
and
shl
jae
mov
stc
dec
adc
cmp
push
stos
je
xchg
inc
les
call
dec
in
pop
stos
rol
or
int3
enter
sar
push
out
inc
enter
lahf
jecxz
lods
or
mov
shr
shr
jne
push
sti
sbb
push
sub
mov
(bad)
push
scas
pop
adc
xor
add
xor
or
fwait
rol
add
xchg
mov
xchg
lods
stos
shr
or
(bad)
cmps
imul
add
dec
or
and
jo
stos
es
js
(bad)
fldenv
mov
push
or
mov
pop
ds
xchg
and
xchg
pop
js
add
test
jae
cmp
or
fs
or
inc
aam
cmp
dec
jb
jno
inc
test
adc
push
xlat
popa
mov
popa
mov
pop
fadd
lock
inc
mov
sbb
jae
clc
dec
add
jmp
loopne
add
daa
loopne
sbb
jmp
out
ror
inc
dec
adc
mov
add
dec
je
gs
les
push
cmp
or
xor
sub
sbb
aas
dec
lods
mov
adc
lock
mov
gs
or
loop
loope
mov
pushf
mov
pop
push
push
lock
jle
pop
adc
push
mov
sub
cwde
ror
cmp
jne
cmc
or
cmps
mov
xchg
mov
xlat
push
xor
mov
iret
scas
arpl
adc
cmps
cmps
pop
sti
hlt
nop
dec
ret
daa
cwde
inc
data16
mov
loopne
add
sbb
push
cmp
jne
mov
inc
push
push
inc
jmp
mov
inc
jmp
push
dec
push
ret
fimul
cmp
sar
dec
pop
pop
in
add
push
ret
inc
test
daa
xor
and
scas
add
lahf
lods
data16
stc
pop
shl
sbb
or
je
in
or
test
pop
and
shl
rcr
inc
cmp
xor
add
daa
dec
pop
mov
mov
mov
mov
xchg
inc
push
inc
add
inc
pop
push
mov
pop
or
mov
test
push
pop
fwait
jo
popa
cmps
xchg
pop
xor
dec
popa
or
test
(bad)
cmp
add
adc
inc
jge
jmp
lds
loope
adc
or
or
adc
jl
clc
push
jle
scas
add
loopne
xchg
dec
jl
xlat
adc
add
jmp
xlat
or
lahf
syscall
test
aas
mov
push
xor
push
dec
and
push
jmp
mov
xor
push
dec
adc
mov
add
push
jg
lahf
sbb
mov
fisub
dec
loope
arpl
inc
mov
adc
adc
retf
mov
sub
sbb
imul
out
ja
sar
push
push
sbb
stc
or
dec
and
popa
add
or
add
aam
in
add
ins
les
mov
cmp
aaa
and
add
(bad)
ror
adc
mov
and
loop
or
cmc
div
mov
out
jge
cmc
jl
inc
outs
sub
lds
add
add
cs
add
sub
sub
fcomip
cmp
add
mov
jge
xor
add
arpl
fist
or
pop
pop
push
adc
sub
imul
push
je
xchg
xchg
aad
dec
ja
jl
(bad)
cdq
dec
cmp
jne
inc
jo
pop
xor
je
mov
mov
or
mov
jmp
xchg
mov
jg
outs
call
cmp
fwait
jl
outs
movs
es
ret
fld
les
ret
sub
ds
pop
xchg
adc
dec
sbb
aaa
xchg
pop
jp
cmp
jmp
cmp
jo
imul
ja
clc
das
jl
xchg
call
push
xchg
comiss
ja
ret
add
push
leave
imul
mov
pop
mov
sub
ins
mov
xchg
(bad)
neg
push
and
xor
test
pop
pop
mov
fisttp
add
cmp
or
pop
je
dec
pop
je
or
cmc
aam
leave
inc
sub
sbb
sbb
dec
sub
and
iret
loopne
xchg
dec
push
inc
push
and
pop
dec
inc
sub
inc
or
shl
adc
adc
add
icebp
cmp
jmp
sbb
inc
ror
xchg
inc
pop
adc
aaa
jmp
sbb
inc
jne
les
mov
xchg
pop
push
mov
pop
repz
mov
xchg
xchg
clc
rcr
adc
add
cs
shl
adc
fsubr
add
xchg
fmul
add
xchg
xor
push
lock
fdiv
add
push
iret
dec
inc
add
adc
hlt
adc
push
push
push
fild
xor
das
stos
add
or
shl
dec
sbb
cmp
fisubr
add
and
(bad)
mov
push
inc
xor
jb
repz
leave
cdq
pop
mov
ja
shl
or
lods
popa
call
mov
mov
je
pop
mov
call
and
ror
jo
lods
add
(bad)
leave
imul
mov
mov
push
(bad)
cmp
sti
aad
dec
add
daa
mov
aas
add
cmp
mov
nop
retf
aam
xchg
lahf
or
sub
loop
loopne
inc
pop
jmp
push
hlt
inc
cmps
ins
or
rcr
shl
xor
popf
push
lock
adc
push
jb
lods
scas
dec
inc
add
add
xor
dec
xchg
sbb
adc
push
and
inc
enter
mov
dec
push
or
lock
jp
gs
mov
in
dec
push
and
xchg
sbb
sti
inc
es
fmul
dec
mov
imul
add
add
cld
pop
(bad)
xlat
add
shl
cmc
fs
inc
xchg
jo
(bad)
xchg
nop
push
fsubr
xchg
xchg
xchg
push
sbb
adc
or
pop
inc
rol
fcom
jno
pause
mov
rcr
adc
mov
rol
push
pop
mov
xor
and
mov
mov
lock
add
pop
ret
in
xchg
pop
push
push
dec
dec
mov
mov
loop
dec
dec
cbw
push
nop
ror
xchg
imul
push
push
movs
xor
call
leave
loopne
movs
imul
loopne
cdq
or
mov
bound
mov
inc
jo
jbe
add
mov
and
dec
out
cld
sti
add
movs
imul
sti
or
jne
jne
sub
cld
pop
in
mov
push
add
add
jg
adc
rcr
sbb
inc
sub
dec
push
or
xor
imul
inc
push
retf
sub
push
aad
add
dec
mov
push
push
jns
jb
xor
nop
loopne
mov
loopne
push
jge
sub
xchg
xor
mov
sbb
or
hlt
pop
dec
adc
sbb
shl
sbb
fdiv
sbb
movs
cmp
and
inc
cs
inc
mov
loopne
fld
sub
mov
fwait
dec
sbb
sar
lods
ficom
sar
and
ss
fimul
out
fcmovb
inc
jno
lods
xchg
dec
or
xor
xor
push
and
xor
jae
adc
and
jb
and
add
rcr
imul
xchg
mov
(bad)
and
(bad)
lock
adc
lock
test
xor
push
dec
sbb
movhps
pop
jns
add
dec
push
je
sbb
xchg
retf
dec
add
add
adc
(bad)
dec
adc
test
xchg
xor
out
aam
clc
add
push
jl
std
mov
daa
mov
or
push
sbb
mov
add
enter
push
repnz
xor
sub
out
cmps
leave
adc
mov
mov
mov
fild
sub
(bad)
test
ror
push
mov
sti
cmp
jl
das
jbe
cmps
and
add
aad
add
ds
sbb
mov
xor
js
jne
lea
xchg
xor
outs
inc
xchg
inc
pusha
mov
pop
sub
and
aad
mov
jb
xor
or
inc
enter
or
gs
rol
inc
xchg
inc
xor
or
xchg
push
dec
or
jno
xlat
cmp
pusha
pop
jb
clc
iret
and
fst
adc
dec
sbb
add
jne
jne
dec
dec
inc
sbb
mov
jmp
jne
add
sub
sbb
pop
scas
sti
sbb
jne
jmp
xlat
adc
fimul
outs
dec
pop
ss
fdiv
pop
jb
inc
repnz
jne
mov
add
add
pusha
in
add
sbb
sub
xlat
mov
inc
dec
pop
cs
or
data16
scas
inc
or
cmp
adc
ja
aad
sub
xor
sub
or
jmp
ja
fisub
inc
jmp
xor
mov
inc
push
dec
pop
sti
dec
popa
xchg
pop
mov
or
inc
sti
shr
push
pop
sub
mov
pop
xor
or
xor
retf
(bad)
loopne
pusha
push
cld
(bad)
das
mov
cmp
out
pop
fild
jl
adc
in
inc
and
pop
mov
sbb
lahf
movs
test
mov
les
in
jmp
pop
cmps
jbe
jns
sahf
add
ins
and
adc
jnp
dec
dec
shr
lods
fxam
(bad)
inc
jge
or
stos
aam
in
in
scas
push
jmp
aas
imul
and
sub
movs
adc
sbb
push
pusha
adc
pop
gs
in
aad
push
push
add
iret
xor
in
xchg
cmp
int3
stos
pop
jo
clc
shl
enter
push
pop
or
enter
push
push
jo
mov
inc
leave
add
push
push
push
adc
push
push
xor
mov
test
and
shr
mov
retf
fadd
cmp
inc
cmp
jge
mov
cmc
daa
call
in
inc
fadd
nop
(bad)
movs
jns
mov
fild
ret
inc
or
pop
xor
xor
and
push
test
in
imul
sbb
dec
ret
adc
and
jle
loope
adc
inc
pop
xchg
add
dec
push
inc
push
in
xor
sbb
cmp
pop
les
dec
adc
and
daa
hlt
shl
inc
xor
sub
add
out
sbb
je
sti
addr16
jg
sub
sbb
add
stos
pop
cmp
int
movs
iret
cmp
js
test
add
add
cmp
sub
add
imul
mov
fsub
icebp
add
(bad)
xchg
jne
add
mov
mov
sub
mov
pop
arpl
imul
add
and
or
fild
int3
imul
ins
mov
dec
sar
push
stc
lods
loopne
jmp
ret
es
dec
jmp
hlt
rcl
sbb
hlt
in
jb
push
enter
lock
les
add
in
aad
push
sbb
js
or
cs
pop
fldcw
inc
cwde
and
bound
shl
int
pusha
add
xchg
mov
ja
ror
out
push
(bad)
aaa
in
imul
(bad)
sbb
and
adc
xor
gs
mov
ret
movs
adc
(bad)
jbe
add
sub
sub
pop
jmp
pop
and
dec
adc
adc
imul
adc
and
arpl
push
ins
popa
cmps
or
loope
lods
mov
cmp
je
mov
das
mov
enter
xor
adc
mov
pushf
xor
and
adc
dec
add
mov
push
xor
in
js
xchg
fdivp
in
pop
arpl
sbb
xor
mov
xchg
cmps
jno
std
xchg
dec
add
adc
or
js
test
and
xor
retf
(bad)
cwde
and
cmp
xor
xor
sti
or
or
and
pop
test
inc
bound
ret
shr
push
dec
xor
push
and
pop
add
pop
mov
dec
adc
addr16
(bad)
push
or
(bad)
and
les
rol
pop
ret
sbb
andps
xor
xchg
mov
out
shr
sub
popa
cld
adc
and
in
getsec
sar
xchg
loopne
ins
and
or
ss
mov
push
jecxz
add
add
iret
fsub
mov
jle
fmul
or
leave
xor
and
es
push
test
(bad)
push
ins
add
pop
xchg
sbb
test
xor
push
neg
pop
or
js
pop
lock
pop
and
data16
mov
and
ret
lea
bound
cs
add
and
adc
add
in
push
call
jmp
dec
add
ss
jo
scas
(bad)
pusha
adc
jecxz
mov
shl
sbb
and
ss
cmp
jl
or
push
push
mov
cmp
and
dec
pop
xor
jnp
lods
jns
jae
xchg
ret
enter
fucomi
mov
arpl
jne
add
jnp
imul
cmps
retf
cmp
mov
aaa
add
inc
in
pusha
inc
sbb
dec
inc
push
nop
pop
inc
gs
add
cld
and
add
push
xchg
test
jae
mov
aaa
in
pop
rol
aam
adc
jb
and
(bad)
and
pusha
cmp
xchg
mov
jle
fisubr
add
js
test
stos
cmp
shl
inc
in
sbb
sahf
xchg
cmps
sub
xor
cwde
out
ret
pop
and
pop
lds
sahf
and
cdq
push
and
jl
jo
mov
(bad)
shld
mov
sbb
add
mov
sbb
add
jae
cdq
jbe
lock
sub
leave
mov
add
or
lods
or
add
add
pop
mov
xor
cmp
or
adc
sahf
xor
call
mov
movs
movs
lea
adc
dec
jns
dec
(bad)
in
mov
and
add
test
cmp
jo
loopne
and
js
add
movs
mov
inc
add
fadd
aas
pop
jo
pop
shl
add
into
cmp
mov
push
sub
add
sub
or
jbe
and
mov
pop
or
inc
inc
mov
test
es
push
shl
dec
fst
push
lahf
add
and
cwde
femms
add
fdivr
repnz
and
clc
ds
ret
push
mov
jle
test
jns
or
sbb
enter
ja
jb
cmp
test
and
adc
fmul
cmp
das
enter
rol
and
movlps
and
stc
xchg
sar
xchg
xor
jl
pop
add
aaa
push
dec
test
popf
js
xor
popf
retf
enter
push
adc
mov
or
nop
and
fistp
push
mov
(bad)
mov
dec
sub
adc
mov
mov
push
or
fimul
lods
jmp
lea
das
mov
gs
push
xor
mov
imul
sub
cmps
lock
sub
lahf
xchg
add
cmp
dec
cmps
inc
add
mov
push
ror
mov
xchg
sub
xchg
ins
push
cli
ins
pushf
sidtd
inc
jle
mov
dec
mov
push
scas
gs
dec
add
shl
and
test
push
sbb
adc
or
(bad)
(bad)
lea
inc
cld
xchg
pop
add
test
xor
xchg
icebp
bound
iret
pop
call
push
enter
inc
call
sahf
push
in
cmp
retf
add
add
cmp
dec
adc
data16
pop
mov
rol
in
inc
por
push
sbb
push
les
in
inc
jae
out
xchg
cmp
rcr
les
push
push
xor
daa
jmp
cmc
and
(bad)
std
ins
dec
cmp
push
test
dec
ret
mov
xchg
pop
leave
dec
add
jmp
pop
sbb
dec
xchg
sub
rcr
or
xchg
(bad)
jg
cwde
or
or
and
add
mov
aam
fiadd
mov
popa
xchg
jo
add
and
lods
sub
popa
(bad)
mov
sub
shl
and
sbb
inc
adc
adc
les
outs
xor
fnstenv
movs
scas
leave
outs
fisttp
cmp
inc
push
call
inc
icebp
je
sub
add
es
dec
jo
cli
sub
ja
out
rol
inc
shl
jmp
xor
(bad)
sub
pop
mov
mov
lock
add
dec
cwde
or
add
and
jo
adc
cmp
imul
cmp
addr16
pop
mov
je
imul
fidiv
jg
push
or
out
dec
les
in
add
mov
jne
mov
and
cs
ins
xchg
mov
push
cs
loopne
sbb
leave
jo
xchg
mov
mov
pop
nop
(bad)
mov
or
add
mov
adc
jp
inc
shl
adc
pop
in
or
sbb
dec
sbb
ret
stos
jne
push
mov
push
sbb
adc
mov
xchg
mov
lea
scas
es
sbb
ds
inc
sub
dec
mov
pop
pusha
movs
cs
and
stos
add
push
xchg
pop
aam
out
pop
ret
xchg
std
cmp
data16
bound
mov
cmp
xor
pop
mov
popa
nop
xlat
pop
push
push
int
xchg
xlat
dec
pop
or
adc
inc
aas
popa
ret
std
and
or
and
pusha
lods
mov
mov
pop
xor
pop
adc
scas
mov
cdq
mov
push
pop
mov
add
movs
cwde
je
xor
cmp
test
jp
xor
push
dec
jmp
dec
and
pop
push
lods
dec
adc
xchg
cmp
push
(bad)
push
inc
and
and
xor
(bad)
and
inc
es
dec
add
shl
sub
inc
outs
mov
clc
shl
or
inc
scas
ins
jbe
cmps
mov
mov
dec
adc
fs
call
ret
int3
add
adc
retf
inc
and
inc
fiadd
cmc
lods
push
cmp
arpl
mov
das
imul
pop
push
jbe
sub
daa
outs
dec
arpl
sbb
and
or
inc
or
not
inc
cmp
jl
xor
icebp
nop
in
pop
cmove
mov
and
outs
hlt
or
push
push
cdq
cmp
and
leave
mov
arpl
inc
les
les
popa
xor
adc
mov
lea
inc
push
add
ds
leave
ror
test
out
aas
push
adc
in
sub
or
push
les
xchg
sub
fwait
dec
push
fadd
pop
nop
lods
inc
dec
push
inc
push
push
push
inc
inc
inc
pop
pop
and
jg
pop
pop
inc
mov
test
pop
call
outs
sahf
(bad)
dec
push
push
add
ins
add
out
inc
mov
ret
jnp
or
dec
ret
inc
and
dec
sbb
add
ja
and
mov
cli
test
in
push
(bad)
(bad)
sti
add
mov
jo
dec
mov
outs
retf
pop
pop
sbb
add
mov
and
adc
inc
dec
inc
fs
(bad)
jg
cmps
dec
sti
fist
xor
inc
mov
add
stc
test
sub
push
pop
jle
adc
or
stos
popa
ret
loope
sub
int
sbb
inc
jg
jle
jmp
je
or
sub
ss
clc
inc
jle
pushf
inc
shl
and
test
in
pop
adc
pop
push
pop
ds
neg
sbb
inc
(bad)
xchg
mov
fsubr
jb
adc
mov
outs
sub
es
mov
adc
aam
fld
test
xchg
setp
stos
push
fdiv
pop
sub
mov
xchg
jne
xlat
sub
es
sti
fcmovu
pop
mov
push
ds
data16
das
mov
pop
les
push
xchg
and
push
push
repnz
cmps
pop
add
ja
xor
push
and
or
jae
imul
sti
push
adc
push
xchg
add
sub
ja
jmp
popf
xor
cmc
jg
xor
sub
(bad)
imul
test
pop
push
movzx
leave
jl
mov
inc
inc
push
jo
and
pusha
sbb
das
call
jl
pop
iret
ins
dec
mov
or
les
retf
or
mov
push
or
push
inc
cmp
mov
jge
sub
cmp
retf
cmp
push
or
push
pushf
add
push
std
enter
lods
sub
stc
adc
or
and
inc
in
mov
add
mov
sbb
arpl
inc
shl
xor
and
sub
jl
cmp
mov
push
lds
gs
fwait
jo
mov
jo
dec
int3
aaa
inc
ret
or
pop
mov
inc
inc
or
cmp
loope
aas
and
push
pop
(bad)
xchg
loopne
inc
movs
fbstp
dec
in
push
add
lds
aam
ss
ror
and
or
cmp
xchg
and
and
xchg
sub
and
and
in
sub
cs
in
loopne
daa
cdq
fidiv
sub
push
and
adc
push
and
or
adc
push
leave
lods
cmp
jo
stos
scas
add
test
adc
sub
sbb
sbb
ret
or
push
retf
cmp
or
fsub
or
sub
xchg
cmc
xchg
out
jmp
inc
pop
push
rcr
sbb
daa
fadd
or
push
fisttp
cmp
nop
out
add
sbb
mov
add
ret
mov
je
mov
sbb
add
stc
sub
out
xor
and
rcl
jnp
mov
or
inc
push
ja
dec
(bad)
fld
arpl
mov
adc
cs
mov
cld
sub
je
push
push
pop
sub
das
pusha
push
adc
add
sbb
inc
inc
push
mov
rcl
push
push
stos
imul
aaa
pop
shl
dec
ja
sub
xchg
pushf
add
call
or
popa
imul
inc
aaa
addr16
imul
mov
jmp
xchg
(bad)
and
mov
add
call
jmp
xor
sub
test
or
cmp
xor
xor
and
lods
mov
mov
fiadd
fimul
sbb
test
call
or
sbb
or
movq
add
add
push
adc
push
lock
pop
jg
js
outs
hlt
dec
push
jnp
or
mov
bound
inc
and
clc
aam
aam
xor
dec
sahf
mov
sub
dec
add
add
dec
enter
xor
or
push
push
rcr
cmps
arpl
inc
mov
dec
mov
sbb
inc
pop
xchg
jl
dec
mov
sbb
popa
cmps
lea
and
test
push
add
pop
ins
inc
and
jae
cmp
fadd
inc
sbb
mov
bound
inc
mov
adc
pop
out
or
dec
cmp
unpckhps
cmc
repnz
or
mov
and
sahf
neg
sub
add
xor
ja
out
(bad)
aam
push
neg
add
imul
fcomp
cmp
adc
xchg
dec
in
rol
sub
hlt
add
movs
gs
hlt
and
call
and
das
cmp
jle
mov
jmp
pop
xor
add
clc
sti
stos
(bad)
outs
scas
sub
cvttps2pi
push
stos
int
iret
cld
pop
sub
or
in
adc
pop
or
xchg
hlt
sbb
jle
adc
in
(bad)
pusha
inc
sub
mov
push
and
add
mov
pop
ins
add
cmp
push
cmp
xor
pop
pop
xchg
inc
(bad)
cld
mov
add
test
cmp
inc
pop
pop
add
mov
sub
adc
mov
jnp
sbb
ins
adc
ja
gs
ja
pushf
test
scas
xchg
inc
cmp
sbb
ja
jp
mov
push
repnz
and
and
loope
cmc
push
clc
sbb
test
pop
and
sub
xor
jg
xchg
cli
and
sbb
xchg
or
xor
mov
mov
mov
scas
jmp
mov
xchg
ret
push
lods
mov
or
add
in
cwde
popa
and
and
or
push
sub
or
sbb
xor
pop
lock
mov
xor
(bad)
ss
leave
jae
ins
enter
add
add
add
or
fdiv
nop
popf
inc
imul
popa
inc
pop
mov
mov
movs
sub
add
cmps
loopne
(bad)
adc
cli
jp
pop
inc
push
dec
jnp
mov
push
hlt
pop
or
mov
push
sub
movs
stos
out
and
push
ds
dec
push
loope
loope
and
xchg
jmp
and
xor
rol
repnz
jo
adc
mov
jne
out
xchg
or
inc
wbinvd
add
cwde
pop
sub
aaa
pop
fistp
mov
push
adc
or
mov
(bad)
push
fdiv
adc
(bad)
sbb
rcl
lock
sub
call
fnstcw
adc
inc
xchg
pop
jbe
inc
bound
push
push
pop
push
(bad)
adc
or
pop
pop
rcl
cmp
and
cmp
inc
shl
lods
inc
add
inc
add
xchg
or
mov
adc
das
mov
test
jge
fisub
test
and
mov
test
inc
inc
mov
nop
aam
sub
dec
push
add
fnstenv
out
cmp
mov
fwait
ins
pusha
adc
cmp
push
add
sbb
in
cwde
out
push
jno
xlat
pop
and
mov
push
out
and
lock
jmp
push
shl
or
xchg
push
popa
(bad)
cmp
test
cmp
(bad)
sub
xor
push
sbb
and
push
and
mov
cmp
mov
push
add
and
or
sub
sbb
inc
(bad)
jle
fs
fs
outs
enter
cwde
push
jne
fadd
pop
lds
jns
cmp
or
outs
sbb
or
adc
jne
aas
cs
cmp
mul
push
mov
xchg
mov
adc
out
mov
retf
jl
lea
or
test
fistp
push
push
(bad)
jecxz
or
out
mov
pop
clc
xor
and
push
call
add
sub
addr16
jl
cld
std
inc
fidiv
cdq
and
cld
and
mov
inc
push
jecxz
stos
mov
out
cmp
clc
mov
rol
shr
push
fadd
dec
or
push
xor
(bad)
fs
fdiv
fnsave
pusha
ds
mov
push
push
xchg
inc
arpl
and
push
pop
dec
or
add
mov
repz
mov
shr
push
jp
test
adc
movs
cmp
iret
dec
mov
xor
add
test
cli
inc
xor
vpmacssww
inc
mov
loopne
clc
add
xchg
fcomp
dec
pop
xor
push
xchg
pop
add
dec
adc
in
loopne
xor
mov
movs
test
fstp
jmp
and
xor
or
loope
mov
xchg
aam
mov
add
adc
or
imul
inc
pop
pusha
fstp
mov
cli
adc
ret
and
cmp
call
xor
xchg
leave
xchg
add
xchg
push
mov
call
stc
aam
add
dec
cmp
pop
nop
sbb
or
add
sbb
inc
push
add
xor
add
inc
mov
pop
enter
jp
sub
jnp
sbb
loopne
cmps
xor
loopne
(bad)
(bad)
mov
popa
fst
add
add
push
rcr
test
or
test
mov
jmp
leave
jecxz
xor
mov
clc
in
mov
mov
add
sub
sbb
pop
inc
je
add
in
inc
pop
mov
mov
dec
inc
mov
cmps
mov
and
fbstp
or
in
fsub
test
cmp
jne
add
sub
xchg
pop
jecxz
std
jmp
push
dec
jne
imul
sbb
(bad)
aam
shr
outs
aam
das
mov
ret
sub
dec
and
rol
outs
(bad)
ds
mov
cmp
inc
aad
mov
push
ret
add
or
fwait
xor
add
and
mov
pusha
aas
scas
and
sbb
out
gs
enter
dec
mov
ret
xchg
fidivr
test
pusha
or
lods
mov
jmp
daa
cld
inc
popf
fucomi
shl
inc
pop
cwde
montmul
cmps
inc
repnz
scas
int3
cmps
push
movs
inc
and
inc
inc
push
and
inc
push
daa
pop
or
test
inc
xchg
movs
dec
call
adc
adc
lea
je
nop
outs
int3
imul
and
shl
push
scas
pop
out
add
adc
add
adc
enter
scas
or
mov
daa
jl
or
adc
adc
inc
(bad)
into
or
mov
push
fld
ins
and
dec
lea
xor
dec
push
imul
outs
push
push
jae
sbb
mov
xor
faddp
dec
dec
loop
inc
jnp
gs
rcl
outs
sbb
imul
sub
sbb
(bad)
pusha
sub
pusha
dec
leave
xor
rol
outs
adc
pusha
pop
push
xor
ror
lods
add
test
mov
or
cmp
aam
adc
push
pusha
xchg
adc
pop
setne
dec
aam
add
rcl
je
cdq
mov
sbb
mov
lahf
inc
test
or
repnz
sub
mov
push
repnz
add
add
xlat
xchg
test
or
dec
mov
jbe
add
mov
or
in
(bad)
adc
loope
or
jne
jo
bound
xchg
and
jo
(bad)
sub
and
jl
mov
aaa
or
inc
pop
cmp
(bad)
mov
and
pop
sub
dec
movzx
data16
pop
adc
and
dec
dec
mov
pop
call
mov
or
movs
add
pop
call
nop
mov
push
mov
jns
cmp
push
or
mov
in
xchg
div
dec
jle
inc
jnp
push
imul
pop
xor
sub
dec
loop
push
inc
mov
movs
leave
aam
in
in
add
stc
call
gs
pop
call
xlat
popf
rol
aaa
mov
adc
dec
cs
gs
jb
lea
sbb
or
pop
(bad)
jmp
adc
or
dec
inc
cdq
(bad)
icebp
sbb
xchg
cmp
sahf
sbb
pop
add
dec
repnz
lock
ror
dec
inc
imul
sti
ret
xlat
pop
xor
sub
xor
scas
mov
xchg
push
(bad)
das
aam
adc
test
ss
in
dec
push
adc
sub
inc
push
test
fild
fidiv
cmps
adc
cli
inc
or
adc
mov
xor
push
shl
shr
fdiv
pop
cdq
push
add
scas
push
or
out
fisubr
push
dec
push
inc
aas
fld
adc
add
or
nop
cli
in
or
lods
dec
adc
call
cmp
dec
mov
pop
and
(bad)
hlt
mov
xchg
(bad)
mov
invd
mov
xchg
mov
jo
jge
and
push
mov
imul
ins
or
fst
je
arpl
fucomp
in
pop
push
punpckhbw
fsubr
jb
fcomp
loope
jb
(bad)
adc
jl
iret
xor
stc
add
iret
rol
iret
repz
outs
ja
dec
daa
cmp
repz
aaa
aas
inc
lods
inc
cmp
repz
movs
(bad)
pusha
rcr
stos
fxch
cs
add
sub
pusha
mov
push
adc
aaa
mov
repz
daa
xor
dec
push
ins
sub
retf
out
test
sub
xor
pop
push
fwait
jp
shl
inc
fisttp
dec
push
inc
cmovne
sbb
push
inc
repnz
and
in
inc
push
add
jge
shr
inc
retf
fs
and
aaa
or
jecxz
xor
sub
sub
cmp
mov
arpl
jnp
outs
imul
or
mov
xchg
sbb
xchg
lahf
mov
add
jmp
daa
mov
dec
pop
push
punpckhdq
cmc
xchg
xchg
xchg
daa
inc
push
mov
in
leave
enter
jmp
cmp
mov
push
mov
dec
cmp
nop
push
sbb
dec
pop
sbb
sbb
popa
mov
push
pusha
dec
sti
inc
pop
add
inc
popw
mov
ss
dec
push
push
push
outs
nop
fcom
ins
push
ins
pop
out
dec
push
push
mov
imul
sub
xchg
xchg
out
aas
movs
pop
add
jno
mov
push
fcom
xor
scas
add
xor
dec
jae
and
imul
xchg
(bad)
sub
in
fs
jle
lds
ror
pop
jne
mov
cmc
pop
or
inc
(bad)
inc
jmp
dec
xchg
ins
add
pusha
jecxz
dec
jno
or
or
in
sbb
out
jle
(bad)
retf
pop
xchg
movs
add
and
popa
leave
loopne
pop
add
push
push
cmp
pop
imul
push
icebp
in
dec
pop
ja
and
xor
or
push
or
call
popf
and
pop
jp
cmp
dec
and
sbb
jnp
(bad)
sub
push
cwde
mov
or
push
xchg
pop
adc
pop
and
dec
(bad)
xchg
jge
retf
push
or
add
mov
nop
cmp
dec
test
add
test
jae
push
iret
xchg
inc
mov
fsub
xchg
push
mov
push
xchg
inc
push
mov
cmps
sub
add
pushf
mov
sbb
out
and
pop
aaa
jns
dec
push
adc
sar
setbe
adc
xchg
mov
add
jle
pusha
pop
mov
sub
enter
stos
cdq
xchg
gs
push
push
and
jnp
addr16
mov
adc
in
jno
push
push
fs
cmp
push
lahf
mov
dec
test
fcom
push
call
pop
das
adc
dec
and
jmp
dec
push
js
outs
out
test
leave
sub
xor
sbb
jmp
push
scas
data16
pop
xor
(bad)
push
xchg
(bad)
fcom
or
sub
inc
les
adc
pop
jne
jmp
push
pop
adc
push
add
xor
test
mov
xchg
ja
rcl
into
movntps
xlat
and
sub
pop
push
add
cmp
mov
jmp
adc
test
call
push
add
adc
pop
push
sbb
push
mov
sub
frstor
inc
adc
inc
push
mov
push
cmp
pop
out
jecxz
scas
cmp
das
adc
add
push
push
aaa
ret
push
xchg
mov
dec
adc
pop
push
pusha
mov
cmc
xor
dec
mov
xchg
xchg
push
xchg
shl
shr
push
mov
add
js
add
das
fsin
cld
xchg
push
adc
xchg
mov
push
add
xlat
push
mov
adc
addr16
js
imul
adc
push
je
js
mov
push
xchg
sub
pop
push
sbb
repnz
pop
push
js
push
pop
push
and
loopne
push
pop
push
pop
push
pop
pop
pop
pop
pop
push
pop
push
pop
push
pop
push
xchg
xchg
iret
pop
push
inc
add
enter
jne
cmc
aas
popa
in
leave
leave
(bad)
(bad)
xor
repnz
imul
mov
cmp
cmp
mov
pushf
pushf
mov
gs
xchg
ror
sahf
pushf
neg
push
fwait
cli
or
mul
addr16
bound
or
fimul
retf
test
daa
jnp
enter
fisub
cld
test
lods
or
add
mov
lds
loop
movs
adc
add
push
sub
in
pop
xor
jl
mov
push
and
mov
mov
daa
ins
adc
pop
test
ret
stc
stos
outs
or
push
shl
adc
jns
mov
cwde
adc
and
cld
addr16
sbb
push
test
popf
mov
push
mov
dec
xchg
and
or
rol
fild
cmp
push
push
test
add
or
mov
loopne
push
xchg
push
mov
iret
fiadd
mov
push
jno
test
and
leave
test
addr16
cmp
and
addr16
inc
push
xor
test
cdq
mov
nop
cwde
pop
xchg
inc
dec
dec
xor
scas
in
test
addr16
mov
test
addr16
push
mov
xchg
fimul
(bad)
nop
in
mov
fisub
enter
test
xchg
leave
xchg
push
xchg
xor
pop
mov
push
repnz
dec
xchg
push
adc
cmp
add
shl
dec
dec
loopne
xchg
inc
or
data16
xchg
and
inc
push
inc
data16
push
stc
sub
cmps
xchg
sub
ret
rcl
xchg
aam
inc
cmp
dec
imul
xchg
pop
leave
sub
push
cwde
xchg
addr16
sbb
pop
shrd
mov
mov
add
and
inc
movs
push
or
inc
imul
pop
rol
imul
int3
fimul
jmp
or
mov
pop
and
push
das
sar
add
jle
sbb
pop
and
and
pop
push
loopne
push
push
les
cmp
xor
cmp
pop
mov
rcr
jnp
mov
push
bound
or
add
mov
mov
imul
sub
adc
sub
dec
jmp
xchg
xor
cmps
(bad)
sbb
int3
cmp
inc
push
xchg
lods
pop
and
(bad)
fild
loope
dec
sti
sub
pop
lock
add
or
pushf
aas
in
std
add
dec
jne
push
leave
rcr
xor
mov
adc
push
pop
and
ret
movs
cdq
pop
enter
in
and
sub
pop
adc
inc
(bad)
sub
jne
add
dec
das
add
and
aaa
dec
mov
pusha
mov
xchg
adc
es
inc
xchg
imul
fdivr
sub
nop
pop
pop
imul
xchg
push
xchg
inc
daa
jge
shl
ret
or
xchg
dec
cmp
in
das
aas
pop
(bad)
and
std
xchg
movs
or
test
xchg
rol
xor
xor
ja
and
adc
adc
sub
pop
pop
in
adc
or
test
add
aam
inc
sbb
not
jmp
sbb
call
cmp
fwait
sbb
sti
lock
nop
sub
loopne
in
mov
scas
adc
add
pusha
inc
(bad)
jmp
jnp
scas
push
adc
(bad)
cmp
clc
div
in
sbb
xchg
adc
or
cld
adc
adc
jl
push
dec
rol
jbe
outs
jae
les
or
dec
es
repnz
in
mov
sbb
xor
push
jo
clc
xor
mov
loopne
mov
fst
fdiv
and
movs
push
inc
cmp
sti
mov
leave
xchg
push
mov
push
add
mov
mov
div
xchg
cld
inc
cmc
and
push
ins
add
xor
inc
and
inc
test
or
or
cmps
jo
mov
add
add
call
sub
aad
pop
mov
cmp
sbb
sbb
scas
shl
icebp
push
in
adc
push
xchg
or
xchg
aaa
push
dec
or
gs
jnp
mov
xchg
mov
out
bound
call
adc
dec
mov
shl
cmp
cmps
inc
call
dec
cld
jmp
push
push
jb
dec
xor
push
xchg
xchg
sti
mov
cmp
add
cmp
or
inc
imul
pop
inc
mov
adc
and
adc
and
retf
dec
fsub
add
push
pop
or
dec
repz
hlt
dec
dec
adc
data16
aam
jl
(bad)
(bad)
enter
je
fwait
ja
sub
sbb
stos
retf
movs
jmp
mov
mov
cmps
out
adc
sbb
and
pop
mov
add
push
fstp
js
or
iret
push
in
and
lock
cmp
ss
es
into
add
nop
cli
cmps
or
jle
mov
and
xor
retf
data16
or
pop
leave
inc
push
call
mov
loop
rol
rcr
bound
mov
iret
sub
cmp
shl
adc
sbb
and
dec
or
fnstsw
xchg
vmovsldup
cmps
loopne
repz
int3
retf
xchg
and
sbb
push
cdq
out
leave
inc
inc
sbb
clc
mov
xchg
mov
lea
pop
mov
aaa
sbb
sbb
in
imul
push
xchg
or
mov
or
push
xor
mov
push
jno
into
in
ror
inc
enter
or
jae
fadd
inc
hlt
push
sub
stos
sar
ret
sbb
fwait
inc
sub
cwde
pushf
add
aam
xor
cmp
inc
adc
or
mov
shl
ja
or
add
adc
inc
cmp
inc
(bad)
rol
rcl
aaa
jecxz
jl
and
add
je
movs
movs
add
jmp
popf
arpl
(bad)
push
and
add
ret
mov
leave
cmp
add
jbe
or
loopne
jo
pop
inc
mov
rol
push
movs
clc
mov
dec
jne
verw
ret
xchg
sbb
xor
ds
clc
movs
rcl
cs
or
add
sub
sbb
movs
or
dec
add
out
and
or
sub
arpl
jmp
xor
nop
jmp
sbb
jle
ja
adc
jmp
arpl
adc
and
(bad)
or
mov
pop
sub
sbb
inc
icebp
xchg
and
xor
or
sub
pop
loop
in
add
call
lahf
lods
or
test
add
jbe
cmp
mov
adc
(bad)
out
xor
inc
dec
cld
and
dec
lea
aas
mov
sub
das
pop
add
in
dec
jno
dec
fiadd
loop
adc
and
jbe
std
inc
imul
lahf
jecxz
dec
jne
loop
dec
cmp
mov
push
or
jae
js
sbb
sub
lock
ror
jmp
adc
call
call
sub
js
pop
nop
xchg
cmps
sbb
push
inc
mov
dec
jge
push
nop
ffree
jne
fisttp
gs
inc
xor
xchg
jns
inc
fstp
in
lods
cmps
xor
and
sbb
in
jle
leave
adc
mov
test
jns
sub
nop
lods
lods
fsubrp
jns
or
mov
push
pop
xor
cli
jp
stos
add
inc
sbb
mov
add
inc
dec
push
mov
cmp
loope
or
pop
push
pushf
cmp
stos
pop
mov
fcomp
stc
inc
dec
jne
rol
test
jnp
push
inc
cmp
loopne
pop
mov
jnp
xor
mov
and
es
or
xchg
ret
sbb
pop
cdq
aas
cs
dec
xchg
test
xchg
xchg
inc
pop
xchg
lock
in
cs
push
test
mov
mov
out
clc
jl
mov
loope
and
out
jl
push
inc
sub
pusha
sbb
ret
dec
and
imul
mov
push
jle
cmp
or
inc
inc
inc
xchg
sbb
in
mov
adc
mov
cmp
shr
push
cwde
sub
daa
sbb
jge
push
add
rol
adc
xchg
in
push
mov
push
push
mov
lods
push
cmps
push
in
daa
stc
mov
or
and
les
jle
adc
pop
inc
sub
push
adc
outs
adc
pop
push
adc
ja
in
push
mov
and
adc
add
jg
mov
adc
pop
xchg
not
pusha
adc
mov
mov
loopne
and
adc
imul
in
inc
push
adc
push
mov
outs
adc
pop
push
pop
or
adc
sub
mov
push
setno
stc
adc
rcr
inc
sub
push
aaa
test
adc
and
outs
or
add
adc
push
push
and
push
push
mov
pop
repnz
enter
test
nop
push
push
repnz
jns
and
adc
add
and
and
stc
and
adc
mov
adc
push
adc
int
test
pop
push
and
adc
and
mov
cvtps2pi
test
repz
int3
jg
hlt
outs
adc
repz
jns
mov
or
cs
mov
push
adc
lea
pop
xchg
into
in
adc
rdmsr
mov
pop
mov
psubusb
and
call
or
push
repnz
push
pop
push
js
cmp
push
ins
mov
pop
push
and
leave
push
lock
pop
push
xchg
or
push
loop
out
lea
addr16
inc
sbb
push
or
sub
mov
jno
sub
fild
mov
push
adc
pop
leave
adc
push
adc
stc
lea
and
adc
in
jnp
add
xor
add
inc
sub
(bad)
retf
xchg
pop
xor
adc
mov
adc
push
inc
sub
and
xor
stc
add
mul
cmp
sbb
in
mov
pop
sbb
sub
out
xchg
xchg
jl
pop
add
add
lods
inc
cmps
mov
xor
pop
rcr
outs
pop
xor
fcomp
add
push
fmul
xchg
int
xchg
outs
repnz
push
xchg
and
mov
test
cmps
inc
sahf
in
sbb
jb
sub
lock
xchg
push
xchg
xchg
push
xchg
push
xor
cmp
or
push
push
add
je
mov
xchg
shl
cmps
pop
pop
jno
shl
dec
je
push
adc
push
idiv
xchg
hlt
fst
test
xchg
pop
jns
int
and
push
jnp
push
fmul
push
fs
stos
xchg
mov
fidiv
movs
call
cmc
fwait
inc
cmc
dec
sub
push
add
mov
dec
mov
mov
xchg
lods
push
jmp
sbb
rcl
xchg
in
fnsave
daa
pusha
mov
in
add
xchg
add
popf
or
pop
or
xor
cmps
sub
stos
pop
dec
inc
adc
adc
pop
push
bound
add
cmp
push
mov
mov
or
js
cli
ins
sbb
add
and
fwait
xor
push
and
push
je
imul
dec
js
sbb
rcr
in
xor
add
inc
cmp
loopne
push
xor
push
push
bound
or
or
mov
jae
sub
cvtps2pd
ficomp
dec
xor
sub
add
mov
push
lods
inc
add
scas
push
add
jb
rcl
and
fbld
movs
(bad)
and
(bad)
cmp
pop
push
adc
xchg
xchg
xchg
rcl
pop
mov
mov
adc
imul
pop
(bad)
and
cmp
sbb
cmps
add
(bad)
cwde
inc
xor
xor
adc
add
pop
cld
adc
outs
fimul
shl
loope
sbb
or
push
and
outs
daa
mov
sbb
push
mov
jae
and
int3
popa
adc
sar
adc
jae
data16
aam
gs
in
and
inc
jbe
adc
dec
push
push
adc
ss
jae
nop
and
mov
push
mov
add
adc
loope
in
rcl
add
sbb
and
push
push
mov
inc
adc
lods
outs
pushf
fs
add
dec
outs
adc
dec
add
xchg
inc
mov
inc
outs
mov
inc
arpl
adc
adc
(bad)
and
test
or
pop
fistp
sub
sub
dec
jnp
loop
ins
mov
mov
add
popa
inc
fdivr
add
ja
cdq
inc
sbb
jno
vandps
js
and
or
out
les
pop
data16
std
xor
mov
lods
xchg
pushf
add
xor
xchg
jae
pop
sub
or
or
dec
pop
inc
call
loop
popa
int3
sub
dec
mov
sbb
ja
les
adc
stc
or
leave
test
fwait
stos
mov
mov
sbb
sbb
out
xlat
rol
add
out
sbb
aas
popf
push
sbb
(bad)
and
adc
xor
test
mov
popf
fist
cmp
fmul
lods
das
ret
add
pop
push
fwait
das
pop
rcl
cmp
paddusb
push
sbb
push
mov
popa
mov
xchg
or
ins
rcr
cmc
add
rcl
adc
daa
popa
ret
xor
adc
loop
xchg
rcr
movs
pop
add
sahf
or
add
or
mov
stos
xor
test
push
cmp
jne
out
pop
in
xchg
and
xchg
mov
mov
mov
pop
push
ins
inc
mov
iret
xor
push
pminsw
cld
sub
mov
or
mov
test
mov
lds
dec
outs
pxor
or
mov
loope
mov
jecxz
and
mov
das
ret
or
lods
sub
rol
inc
cpuid
xchg
cmps
jns
mov
xchg
call
ror
dec
pop
in
add
lods
mov
cmp
movntps
test
and
and
movs
rol
arpl
inc
pop
leave
mov
sahf
push
rol
and
pop
shl
call
push
mov
push
jp
and
add
xchg
pop
stos
scas
sub
push
sub
ja
sub
and
ror
adc
outs
pushf
aam
sbb
cmp
add
imul
mov
fbld
popa
jecxz
fbld
mov
and
movs
push
push
movs
push
retf
data16
aam
inc
mov
mov
cmp
lock
rcl
mov
xchg
pushf
mov
shl
rcl
mov
mov
adc
test
pop
daa
sbb
add
mov
inc
mov
stos
mov
adc
and
inc
adc
sbb
jb
movs
push
movs
jbe
in
xchg
push
mov
xor
adc
mov
shl
inc
and
xor
pusha
sar
aad
ficomp
jo
sub
mov
or
sbb
adc
mov
out
lds
or
int
mov
xchg
push
cmps
sar
test
test
cmp
push
rcr
icebp
push
retf
sub
xchg
fiadd
test
mov
pandn
adc
xor
aas
pop
ins
pusha
and
mov
push
pushf
js
jl
ror
adc
in
sbb
or
arpl
add
xchg
adc
test
push
cmp
shr
sub
push
pop
sbb
jge
push
pop
add
ja
adc
add
sbb
mov
xchg
aaa
mov
sbb
mov
or
ret
adc
fst
push
xchg
ins
dec
imul
mov
jo
and
add
mov
sub
fs
or
lods
xor
aad
xchg
sub
add
adc
mov
imul
clc
cwde
xor
mov
cmp
fld
lahf
test
adc
movs
adc
mov
or
mov
into
or
mov
loopne
cwde
jne
adc
ins
cmps
test
adc
sub
inc
call
add
or
pop
sub
pop
js
mov
iret
repz
in
fcmovb
loop
shl
idiv
cmp
push
fmul
and
ss
(bad)
imul
sbb
jecxz
fdivr
rcr
stos
and
push
cmp
sbb
add
scas
adc
push
or
ins
icebp
sbb
enter
add
push
xchg
mov
fiadd
lods
sub
enter
xchg
mov
in
lods
sub
enter
mov
push
scas
enter
xor
scas
or
nop
xchg
nop
cwde
add
dec
sbb
fwait
inc
test
neg
test
imul
push
add
aad
pusha
mov
pusha
(bad)
fwait
mov
xchg
dec
add
cmp
mov
in
and
sub
sub
shl
jo
add
mov
push
push
xlat
and
or
push
(bad)
pusha
add
in
jne
mov
inc
add
sub
imul
jnp
xchg
jno
push
mov
xchg
aad
push
retf
xor
mov
or
jl
push
and
jl
inc
sub
dec
sbb
xchg
cmp
pop
inc
mov
sub
dec
nop
or
sbb
inc
aas
mov
cwde
adc
add
dec
add
and
cdq
mov
jbe
xchg
clc
mov
cs
sub
lods
add
shl
jae
fsubr
mov
add
jns
fcom
je
xchg
shl
ins
or
push
dec
jmp
call
sbb
(bad)
ins
push
outs
je
and
adc
xchg
mov
add
adc
jae
cwde
mov
outs
dec
xchg
in
or
inc
mov
and
retf
test
or
and
rcl
imul
ins
sbb
dec
adc
and
lods
sbb
xor
lods
add
sbb
mov
fadd
push
clc
dec
loope
movs
push
outs
xor
ss
add
and
ds
or
jmp
sbb
inc
gs
mov
and
dec
push
mov
push
adc
repnz
adc
(bad)
add
mov
adc
mov
fiadd
arpl
push
or
xchg
xchg
sbb
or
or
or
lods
add
jns
jg
stc
add
fmul
push
sbb
clc
and
jae
rol
inc
add
pop
push
add
jecxz
outs
mov
add
adc
es
das
adc
and
sub
jo
jae
(bad)
shr
and
movs
push
add
push
jmp
add
and
pop
ret
sub
mov
jecxz
test
sbb
mov
repnz
mov
add
pop
xchg
in
mov
mov
adc
int3
daa
lods
and
mov
add
pop
fdiv
dec
ins
jne
mov
pop
sub
enter
ret
add
cmp
jne
ror
mov
inc
loope
inc
rcl
imul
cmp
jmp
push
mov
adc
xor
sub
repz
pop
jb
mov
push
add
push
ins
outs
movs
add
out
mov
mov
inc
rcl
inc
sbb
repz
stos
sub
daa
(bad)
in
inc
shl
jmp
jns
movmskps
push
jmp
dec
inc
(bad)
cli
cmp
in
push
addr16
xchg
test
shr
adc
adc
mov
xchg
dec
sbb
adc
pusha
mov
call
cld
add
fidiv
mov
movs
je
sbb
test
sar
and
jmp
mov
push
jb
mov
jne
cld
ret
add
sub
push
dec
jp
ret
adc
fwait
push
and
(bad)
sub
call
mov
in
dec
add
adc
mov
inc
add
popa
dec
inc
and
pop
mov
cld
cmp
pop
or
jo
sbb
aaa
add
pop
lds
les
jmp
in
xor
or
ds
xor
push
daa
call
xor
mov
nop
inc
pusha
in
out
xchg
out
lods
or
jne
imul
pop
ins
rcr
mov
mov
jmp
add
inc
leave
sbb
or
test
and
or
push
mov
pop
sub
xor
add
adc
sbb
sbb
rol
or
jns
movs
cmp
mov
mov
jbe
jb
pop
mov
out
push
add
leave
(bad)
jg
mov
push
cmp
fcmovnu
mov
cmp
mov
ret
mov
mov
pushf
cmp
not
add
jge
pop
mov
or
mov
ja
push
daa
loope
(bad)
mov
(bad)
in
in
mov
sbb
adc
cwde
out
cmp
enter
fsubr
xchg
mov
mov
call
adc
xchg
arpl
inc
in
pop
(bad)
repz
sar
jo
test
in
int3
stos
push
std
push
movs
ins
cmp
inc
mov
sub
push
sbb
lds
xchg
addr16
sub
push
(bad)
add
mov
and
stc
or
inc
add
mov
test
iret
movsx
jbe
rcl
imul
mov
icebp
mov
xor
out
sub
mov
adc
sbb
inc
fcom
scas
add
dec
jg
pushf
xor
cmp
push
mov
ret
mov
and
mov
jl
inc
pop
lds
icebp
adc
in
mov
pop
and
jns
rol
sub
sub
adc
push
mov
imul
pop
enter
jg
xor
push
mov
add
xor
leave
in
fwait
cmps
cmp
xor
loopne
mov
push
and
ins
addr16
imul
mov
dec
or
scas
lds
mov
xchg
inc
scas
sub
add
rol
dec
inc
test
mov
push
adc
or
add
xor
pusha
shl
xor
cmp
rcr
mov
ds
jp
ret
(bad)
jmp
xor
test
add
fisttp
lods
subps
jb
jo
xchg
cwde
push
popa
inc
jo
mov
dec
test
add
xchg
inc
inc
arpl
fild
aam
mov
nop
add
push
lds
add
fnstsw
cmps
fcmovnb
cmp
pop
xchg
psubusb
cmp
iret
adc
xchg
sub
pop
xor
ret
sbb
mov
jns
mov
dec
add
cld
popa
add
lods
push
mov
mov
and
adc
popf
call
mov
in
sub
xor
or
sub
xchg
fdivr
pop
xchg
push
mov
das
jae
add
dec
sahf
add
jge
ins
push
push
dec
pop
pushf
addr16
aad
jge
mov
int3
adc
mov
push
adc
xchg
or
jg
mov
jae
mov
cmps
aaa
mov
adc
rcl
loop
or
add
adc
inc
sbb
dec
popa
jbe
addr16
ret
jns
xlat
fsubr
adc
pop
dec
add
loopne
xchg
outs
pop
pop
imul
xor
pop
(bad)
(bad)
xchg
lds
jmp
loopne
add
sub
cmp
fisttp
cwde
hlt
push
mov
push
hlt
adc
jl
not
fmul
stc
sub
jl
hlt
sti
aam
lods
jbe
aam
cld
stc
imul
xchg
mov
sbb
inc
pop
leave
mov
nop
push
jb
stc
sbb
cld
stc
add
rol
loopne
pop
stos
cmp
retf
and
add
(bad)
pusha
or
and
and
shl
and
loopne
leave
sub
and
and
mov
and
retf
ins
and
and
mov
and
mov
xchg
and
fisttp
int3
sub
test
add
pop
mov
xchg
adc
dec
dec
(bad)
rol
ins
retf
mov
gs
dec
or
cmp
and
xchg
cmps
pop
sbb
push
push
xor
sbb
push
and
push
in
fistp
sti
sar
pop
adc
inc
movs
push
pop
pushaw
pop
ret
retf
jae
dec
dec
rol
or
in
add
xchg
(bad)
dec
jl
ins
push
and
add
fiadd
rcr
(bad)
dec
clc
add
add
shl
in
mov
js
push
ins
mov
cmp
xor
aad
dec
rep
xor
jb
or
add
test
outs
or
add
and
loop
jp
aad
adc
lods
cmps
dec
jo
xor
dec
mov
jns
mov
xor
dec
pop
cwde
add
add
xchg
out
ds
pushf
adc
and
loope
pop
(bad)
aam
and
movlps
add
adc
and
and
jno
jns
rol
xor
test
or
sbb
enter
xchg
or
mov
pop
call
push
adc
imul
movs
movs
dec
push
loopne
cmp
call
push
xor
ret
sahf
sub
into
jecxz
jo
ins
fadd
xor
loop
jae
nop
cdq
xchg
mov
shr
sbb
adc
jae
pop
and
retf
inc
jge
imul
movs
lods
or
sbb
push
mov
retf
dec
aaa
xor
pusha
test
dec
push
dec
test
xchg
nop
dec
das
add
in
or
or
pusha
out
test
leave
inc
sub
pushf
jmp
mov
cdq
mov
ror
push
adc
adc
inc
icebp
sbb
and
fadd
mov
mov
fcomp
pop
mov
sub
push
cmp
ja
enter
lahf
inc
into
push
pop
dec
sbb
dec
in
dec
add
mov
and
inc
dec
das
and
fstp
or
das
sub
inc
imul
xor
outs
adc
sub
mov
les
add
iret
push
add
sub
mov
(bad)
call
xor
pusha
sti
sub
jle
add
xor
popf
add
test
fild
xor
push
call
or
push
mov
inc
outs
outs
or
jns
and
bound
add
xchg
dec
dec
inc
ss
rcr
(bad)
call
inc
add
mov
imul
inc
adc
adc
push
or
aam
leave
aam
(bad)
sbb
sub
ja
jnp
fs
test
and
sbb
imul
or
in
xor
mov
call
cs
jns
aaa
pop
(bad)
pop
dec
mov
xor
stos
or
xor
je
sbb
out
sbb
ja
mov
dec
(bad)
mov
push
fiadd
pop
nop
(bad)
mov
jge
popf
unpckhps
scas
shl
lock
loopne
daa
pop
add
rol
fiadd
shl
aam
adc
or
mov
icebp
xchg
sub
or
inc
adc
add
mov
mov
mov
inc
adc
mov
mov
es
rol
ss
arpl
enter
daa
hlt
xchg
in
test
(bad)
clc
push
xchg
dec
adc
sar
stos
xor
fld
out
xchg
repz
repz
pop
xchg
or
pushf
dec
js
adc
sbb
push
retw
fs
sbb
(bad)
daa
rol
dec
sbb
xlat
mov
pusha
and
stos
push
aaa
inc
lea
pop
push
adc
inc
sbb
out
and
pop
sub
loope
push
inc
call
aad
shl
dec
dec
stc
sub
pop
xchg
mov
cmp
mov
in
cmps
inc
sbb
stos
or
test
mov
enter
push
(bad)
push
or
push
and
xor
pop
popa
push
dec
retf
cdq
jns
add
ins
inc
pop
mov
dec
push
jns
jle
adc
and
icebp
adc
into
add
pushf
pop
pop
add
xchg
pusha
push
xor
add
xchg
add
and
inc
and
daa
pusha
adc
mov
adc
pop
add
or
pop
and
mov
sub
push
sub
adc
gs
or
cmp
mov
lea
dec
shr
adc
add
rcl
xchg
out
xchg
sub
leave
in
inc
dec
mov
jno
pop
cwde
scas
pop
mov
cmp
gs
xor
mov
aaa
sbb
adc
xchg
or
aad
fwait
and
or
fs
stos
loope
inc
inc
and
mov
loopne
enter
push
dec
add
inc
pop
jbe
inc
adc
or
and
ss
push
enter
cld
test
mov
jmp
mov
shl
xor
in
mov
mov
inc
(bad)
mov
xor
pop
push
fs
movs
pop
add
sub
push
fild
add
push
cwde
dec
mov
mov
inc
mov
push
xchg
xchg
xchg
cdq
nop
and
outs
inc
jb
mov
or
ja
mov
dec
enter
jg
mov
inc
es
mov
and
push
push
retf
pop
sbb
dec
arpl
jecxz
dec
pop
cmc
push
jge
pop
fdivr
push
push
jge
add
mov
(bad)
mov
add
fisub
jge
add
hlt
or
rcr
cwde
in
cmp
adc
add
push
retf
mov
or
pop
test
or
pop
xchg
test
push
push
push
push
stos
jge
ins
jbe
mov
lods
dec
mov
fldenv
inc
adc
inc
inc
inc
cmp
inc
push
mov
adc
enter
ins
jb
nop
inc
ins
dec
jl
retf
test
inc
dec
inc
sbb
mov
stos
into
xor
inc
inc
movs
dec
push
push
xor
dec
jmp
pop
pop
sub
push
adc
xor
cmp
dec
mov
shl
aam
shl
xor
sti
mov
pop
pusha
xchg
mul
jmp
retf
in
push
test
adc
int3
js
inc
cmp
jne
push
addr16
popa
xor
xchg
ret
adc
sub
adc
sub
mov
push
or
sbb
(bad)
loopne
pusha
test
push
imul
pop
pop
fst
fcom
inc
movs
leave
and
in
fisubr
ror
jo
push
rol
mov
sub
add
or
sar
fsub
push
jne
jge
popa
lea
sub
mov
or
test
push
push
sar
add
xor
cmp
dec
jnp
and
outs
retf
imul
pop
(bad)
xor
inc
mov
mov
or
nop
in
into
mov
lea
sbb
xchg
int3
dec
cmp
push
add
retf
es
pop
es
mov
xor
xor
and
neg
cmp
inc
daa
mov
xor
ins
mov
inc
jbe
ss
and
mov
or
add
fwait
xchg
jl
sar
pop
das
gs
or
jp
popf
inc
je
inc
dec
cmps
lods
adc
sub
add
ret
mov
or
in
mov
and
jl
(bad)
lahf
push
call
add
lods
inc
dec
in
cmps
fnstsw
adc
dec
sub
pop
std
push
nop
fwait
add
mov
pop
inc
mov
add
loopne
loopne
loope
inc
je
adc
sbb
dec
sbb
sbb
retf
aaa
inc
push
je
mov
jl
ret
mov
(bad)
or
movs
rcl
jge
adc
ret
sub
mov
and
jp
adc
loope
xor
pop
(bad)
push
adc
xor
add
jae
ret
lock
mov
fadd
pushf
fmul
jne
push
fild
loop
sbb
fisttp
adc
adc
xchg
stos
mov
lea
add
sbb
add
inc
das
scas
imul
cdq
movs
and
lods
daa
shl
or
and
mov
mov
std
js
or
or
jns
push
or
pop
or
or
add
dec
xchg
inc
cmp
fnstsw
inc
mov
outs
lods
adc
(bad)
call
pop
adc
mov
push
fist
sbb
mov
dec
ret
xchg
inc
push
add
mov
ja
or
push
push
sbb
dec
popa
bound
(bad)
xlat
in
dec
and
and
retw
pop
pusha
jle
adc
inc
test
adc
cmp
inc
pop
sub
cmp
push
in
xchg
inc
inc
imul
scas
add
ror
stos
add
add
pop
inc
inc
push
imul
cmps
add
add
dec
cmc
ins
inc
in
dec
xchg
es
lds
dec
sub
jno
mov
in
fs
add
in
dec
or
mov
or
pop
pop
and
jae
push
xor
add
push
pusha
lea
or
sbb
jmp
nop
inc
push
or
push
neg
dec
daa
sbb
mov
mov
jmp
lods
fs
sar
call
jle
pop
inc
aam
pusha
ret
jns
inc
jo
es
cdq
les
(bad)
(bad)
lahf
xor
or
mov
outs
fs
test
pop
pop
push
or
push
aaa
mov
pop
and
out
fsub
xchg
mov
sti
call
jmp
sar
sub
inc
adc
adc
mov
xchg
xor
add
sbb
inc
movs
das
cmp
retfw
adc
sbb
in
pop
cmp
je
or
jge
inc
pop
and
jecxz
popa
or
scas
lock
movs
sahf
mov
xchg
mov
les
outs
xchg
popa
adc
imul
movzx
into
shl
or
xchg
sub
ret
int3
xor
or
sbb
nop
xchg
dec
or
xchg
mov
sub
mov
mov
je
mov
or
jle
jp
test
and
push
sbb
adc
push
xchg
frstor
mov
loopne
je
pop
test
or
pop
inc
dec
adc
push
daa
push
mov
mov
dec
sbb
test
sahf
sbb
daa
jle
fcomp
push
sub
dec
loopne
mov
mov
mov
sub
imul
mov
mov
jbe
sbb
addr16
or
neg
mov
xor
loopne
imul
add
mov
cmp
adc
inc
and
or
sub
into
xchg
mov
retf
(bad)
shl
add
sbb
sub
and
sbb
sbb
xor
jns
and
ja
adc
or
dec
push
or
aaa
sub
mov
cmp
cmp
push
daa
mov
sti
jle
inc
and
rcr
aas
xchg
adc
pusha
fnstsw
mov
adc
inc
repnz
shr
push
mov
lahf
adc
pop
and
dec
fiadd
in
push
mov
(bad)
and
les
jbe
or
mov
dec
push
loopne
rcr
adc
mov
cdq
js
sahf
cmp
ss
je
sub
or
mov
sar
jmp
or
dec
jmp
ins
in
adc
cld
fld
inc
nop
test
clc
lods
jmp
loopne
add
sub
lock
(bad)
mov
xchg
mov
pop
(bad)
jae
and
push
pop
les
adc
sbb
and
or
push
and
mov
sub
inc
ins
inc
dec
or
and
fimul
fcmovbe
imul
sbb
in
mov
ja
xor
inc
push
loope
push
leave
arpl
and
outs
jo
push
add
scas
loope
push
lea
nop
mov
inc
inc
out
sbb
movs
(bad)
repz
sbb
xchg
dec
dec
jmp
mov
in
es
mov
sbb
repnz
popa
in
cmp
jo
inc
repnz
aad
mov
lods
jmp
push
pop
adc
jb
add
sbb
mov
sbb
cs
xor
pop
imul
or
and
outs
pop
mov
cmp
cmp
mov
test
mov
loopne
inc
mov
and
jecxz
add
out
inc
cmps
sub
mov
and
push
popf
mov
int3
ds
or
inc
dec
fsubr
pop
adc
aaa
adc
add
push
xchg
fimul
pop
inc
add
sub
push
xor
ins
je
inc
jl
dec
cli
xchg
fadd
mov
popf
(bad)
mov
and
or
push
add
inc
outs
push
push
xor
push
inc
mov
mov
pop
hlt
mov
jne
mov
cmp
jbe
add
inc
lea
repz
push
repz
out
xor
adc
outs
add
idiv
jle
retf
mov
retf
sar
xchg
loope
jne
sub
adc
inc
inc
in
pop
jmp
mov
je
inc
inc
es
sbb
mov
mov
fisubr
shl
fstp
hlt
lahf
xchg
jmp
sbb
outs
add
daa
or
fisttp
jae
call
int
fild
mov
mov
daa
in
je
mov
dec
xchg
fsubr
adc
sub
test
adc
add
fistp
mov
(bad)
fadd
pop
or
fiadd
sbb
ss
add
movs
into
js
xchg
lahf
rol
push
stos
imul
mov
cmp
inc
jmp
lock
adc
sbb
and
push
adc
mov
or
cli
sub
loop
push
or
add
xchg
dec
idiv
jne
push
adc
gs
fiadd
sub
pop
rcl
ss
aam
jmp
stc
adc
fs
test
xchg
xchg
sbb
push
arpl
dec
adc
inc
jne
or
loope
push
push
mov
pushf
jl
sub
jae
inc
call
sub
pushf
sub
jo
movs
push
mov
sub
jo
push
dec
sub
push
add
dec
ins
sub
adc
mov
push
pushf
cmp
fs
xchg
dec
jae
pop
pop
dec
mov
push
outs
and
outs
pop
or
push
ins
jbe
shl
add
out
mov
and
jb
imul
mov
loope
pop
xor
imul
mov
shr
xchg
pop
xchg
mov
mov
pusha
xor
sbb
arpl
mov
jmp
cs
adc
ins
xchg
(bad)
outs
dec
fld
push
fist
mov
adc
add
pusha
std
add
or
loopne
jmp
push
arpl
dec
test
cld
call
mov
ja
dec
scas
sbb
in
push
stos
adc
(bad)
mov
adc
adc
adc
push
loope
pop
adc
adc
sbb
push
mov
mov
es
mov
mov
push
cdq
ja
dec
push
popa
nop
(bad)
push
scas
clc
rol
sub
or
mov
pop
mov
js
daa
popa
xchg
jecxz
mov
xor
push
sbb
sub
xchg
(bad)
adc
cmps
rcl
shr
in
xor
and
adc
pop
repnz
add
loop
jl
outs
shl
cmp
and
sbb
mov
push
adc
sbb
dec
push
sub
cmps
loopne
adc
test
mov
xchg
dec
inc
cmp
das
dec
movs
(bad)
out
push
push
test
scas
pop
mov
and
cli
dec
scas
shl
inc
dec
adc
mov
jb
inc
cld
daa
push
sbb
lock
add
scas
aas
test
test
jg
sbb
xor
cmp
add
push
xor
jp
add
test
in
leave
adc
lds
pop
cmps
push
ins
cmp
ins
fs
xchg
out
shl
adc
mov
(bad)
outs
jo
int
sbb
jo
xor
ins
(bad)
jl
add
inc
pop
data16
ret
adc
int3
mov
sbb
inc
dec
sbb
enter
jg
fst
push
inc
or
add
int3
cwde
sbb
cmp
xchg
fwait
aam
(bad)
ss
or
push
je
add
sbb
push
cmp
mov
jmp
xchg
and
lods
adc
loopne
mov
jbe
cmps
cdq
adc
jbe
test
adc
adc
mov
int
pop
dec
push
dec
or
fdivr
push
mov
daa
cs
pop
sbb
arpl
dec
inc
ins
or
clc
sbb
sar
push
mov
sbb
sbb
xlat
or
xor
ins
rcl
data16
fiadd
sahf
push
dec
imul
fcmovnbe
loop
pop
or
sbb
dec
push
stc
pop
add
sub
pop
aam
pop
inc
(bad)
pop
in
sbb
pop
pop
add
pop
add
push
push
adc
pop
dec
jp
add
and
adc
pop
add
xor
pop
in
xchg
sub
ja
pop
and
cld
and
inc
push
and
minps
add
pop
cld
inc
nop
jg
call
and
add
inc
pop
pushf
dec
pop
add
dec
pop
sbb
push
pop
xor
shr
push
pusha
or
sub
inc
push
shr
out
push
cld
adc
xor
xchg
or
sbb
inc
dec
push
pop
jb
data16
adc
(bad)
ficomp
pop
or
aad
fs
jl
js
xor
xor
dec
xchg
repnz
and
stos
call
fwait
and
mov
adc
push
dec
popa
pop
sahf
sbb
je
(bad)
add
mov
cmp
inc
and
outs
dec
sbb
push
jne
pop
out
call
add
ds
jne
push
js
mov
icebp
adc
ins
push
repnz
(bad)
add
mov
or
pop
popf
push
mov
dec
or
lods
add
retf
jo
inc
jns
push
pop
jge
mov
loop
fld
loopne
inc
sub
ins
mov
xchg
jno
frstor
lea
popf
mov
inc
fld
rol
add
mov
data16
mov
add
mov
in
sub
mov
aas
jo
fwait
mov
shr
sahf
call
xchg
fsubrp
sbb
add
add
imul
add
in
jne
imul
sbb
jnp
cmc
lea
popa
cmp
mov
call
xchg
nop
lea
mov
icebp
and
movs
bound
clc
jp
mov
enter
sub
xchg
test
xor
and
and
sub
mov
test
out
mov
push
in
add
pop
mov
pop
leave
ins
dec
jno
scas
scas
sub
fdiv
cwde
adc
fwait
jbe
call
jb
movs
test
push
adc
push
lods
mov
out
movs
mov
pop
mov
mov
outs
ins
lock
and
mov
aam
fsub
(bad)
and
mov
mov
inc
and
mov
test
sbb
aas
lock
sbb
cdq
rcr
xchg
xor
cmp
xchg
cmp
cvtps2pd
pop
mov
pop
add
pop
pop
pop
in
push
pop
daa
daa
dec
add
pop
js
push
inc
and
inc
bound
add
je
mov
or
push
pop
jns
mov
arpl
loopne
mov
aas
pop
inc
xor
or
cmp
add
aam
popa
outs
add
pop
push
ja
mov
xchg
inc
jl
add
mov
retf
push
rol
stc
(bad)
or
imul
std
out
jbe
repnz
imul
and
out
outs
(bad)
mov
(bad)
mov
cmp
xor
xchg
inc
push
je
mov
loopne
das
sub
dec
mov
cmp
mov
pushf
hlt
in
test
xchg
add
inc
sub
jmp
or
jns
cmp
imul
or
jne
cmp
xor
aaa
pop
hlt
retf
xchg
in
or
xchg
jbe
or
cmc
inc
stc
jae
dec
loopne
push
inc
sbb
or
pusha
in
push
into
pop
or
push
loop
mov
and
aad
das
adc
lea
xchg
sub
js
adc
mov
ret
gs
add
sti
cmp
cmp
fdivr
addr16
or
aam
adc
or
test
add
add
daa
rcl
rcl
cmp
test
push
add
imul
mov
popf
ins
jmp
add
jge
and
jb
int3
adc
mov
cmp
inc
mov
adc
mov
call
add
add
scas
ror
nop
add
mov
dec
add
jle
sub
rcr
add
xor
adc
sbb
add
add
add
sub
mov
or
jbe
mov
dec
ins
cmp
pop
je
add
sub
out
pop
mov
add
ins
cmps
and
or
xchg
retf
mov
lds
and
push
loopne
xor
outs
mov
fldcw
stc
xlat
adc
inc
add
ret
lahf
mov
sbb
ins
push
add
mov
fst
in
jge
push
or
mov
shl
mov
mov
fs
test
pop
mov
call
pop
xchg
dec
int3
cmp
sub
xor
xor
inc
jmp
push
mov
inc
pop
inc
xchg
repz
inc
loopne
pop
popa
pop
test
inc
mov
add
(bad)
(bad)
mov
shr
sub
mov
or
sub
adc
inc
cmps
and
mov
fisttp
imul
movs
in
loope
sub
pop
mov
enter
mov
pop
or
cmps
ret
jne
pop
mov
cmp
and
cld
outs
xor
sbb
pop
dec
sub
add
rcl
mov
push
les
mov
inc
push
dec
or
lds
xor
and
aad
xchg
ret
pop
mov
add
add
cld
leave
push
xor
call
mov
dec
pop
push
push
add
scas
mov
adc
mov
or
(bad)
and
add
ins
jl
out
add
or
add
push
inc
aas
test
dec
pop
cmp
inc
push
arpl
imul
or
sbb
(bad)
cld
ja
push
add
retf
jmp
out
mov
sbb
je
push
ds
mov
mov
sub
mov
(bad)
cmp
mov
sar
or
and
mov
and
outs
mov
inc
mov
push
cmp
xchg
jne
mov
inc
mov
mov
add
xchg
rcr
adc
arpl
and
add
add
aas
xor
sbb
add
adc
jbe
push
and
sti
and
mov
dec
inc
ss
add
inc
xchg
dec
lods
pop
jg
jge
mul
or
cmp
push
jbe
sub
cmp
mov
retf
xchg
or
sar
xchg
push
sub
push
add
sbb
icebp
xor
adc
add
adc
or
sar
xchg
sar
jo
push
xor
add
cmp
mov
ds
mov
pop
movs
pop
not
pop
cmc
lods
xor
fs
adc
fwait
adc
sbb
xchg
jle
loope
sbb
test
mov
xor
push
pop
sub
pavgw
sub
cmp
xchg
xchg
sub
ret
jne
dec
push
sub
pop
push
jl
push
jne
add
retf
stos
pushf
or
push
and
in
lock
dec
jnp
(bad)
jge
and
sub
sub
not
sbb
and
xor
inc
clc
ret
stos
push
pusha
cmps
xor
adc
imul
push
call
out
sbb
imul
scas
inc
out
mov
adc
int3
xchg
inc
jecxz
fwait
js
jae
ds
xchg
adc
inc
and
dec
in
push
fchs
dec
pop
aam
ret
and
or
fild
adc
inc
ins
sbb
pop
add
adc
nop
or
pop
or
clc
ret
ja
xor
icebp
mov
outs
cwde
add
ds
mov
enter
mov
in
cld
test
movs
inc
xchg
mov
pushf
mov
es
and
jo
cmp
sbb
sahf
call
dec
ret
out
cli
push
fstp
add
pop
or
inc
data16
rcl
aas
xchg
inc
test
lea
xchg
movs
mov
fdivp
and
lods
mov
or
cmp
adc
adc
add
dec
rcl
mov
dec
(bad)
std
push
push
inc
sub
push
mov
push
adc
shl
adc
les
push
cmp
push
sbb
fst
ror
fdivr
adc
cmp
dec
cld
clc
push
ins
adc
lods
pushf
sar
fistp
sbb
mov
pop
adc
dec
xor
sub
rcr
in
outs
bound
xchg
fdivr
or
adc
cs
add
inc
dec
ds
(bad)
ja
or
test
add
add
pushf
adc
add
push
sbb
add
pop
adc
cmp
adc
lock
jle
pushf
iret
cmp
daa
scas
leave
jg
inc
unpcklps
and
ret
scas
add
xor
and
(bad)
xor
mov
push
jge
sar
aas
nop
sub
or
sbb
movs
imul
push
or
pop
xor
shl
in
neg
out
adc
je
adc
jmp
xchg
scas
aas
fistp
movs
add
pop
push
test
outs
call
xor
jl
or
adc
std
pop
pusha
dec
clc
out
adc
jno
add
rcl
mov
ret
popf
test
in
adc
sbb
add
mov
imul
popf
and
cmp
and
retf
mov
lods
sub
imul
daa
inc
sbb
cmp
dec
push
cmp
inc
sub
cs
jmp
jmp
sar
out
fcomp
pusha
push
add
pop
pop
es
push
or
aaa
pop
cmp
bound
pop
adc
add
(bad)
out
cmp
outs
jb
or
ror
sub
or
dec
mov
pop
inc
jg
aaa
pop
xor
pop
or
dec
jle
xor
call
sub
mov
lahf
cmp
adc
sbb
das
movs
xchg
cwde
sbb
and
xchg
leave
mov
test
jnp
mov
adc
repnz
pop
rol
cmps
sbb
adc
push
pop
test
call
pop
dec
sbb
jle
shl
out
hlt
aam
ret
nop
xchg
push
sbb
sub
mov
or
pop
pop
sbb
cwde
cmp
mov
push
or
enter
fst
sbb
xchg
mov
adc
(bad)
push
nop
test
rcr
pop
out
in
in
imul
sbb
xchg
push
adc
loopne
enter
push
dec
lds
lea
xor
jmp
and
ins
adc
rol
mov
mov
pop
test
dec
and
in
sahf
xor
retf
jg
add
addr16
push
nop
fwait
and
test
push
mov
nop
push
test
add
xor
mov
push
pop
leave
sub
leave
mov
shl
mov
loop
arpl
pop
xchg
or
xor
inc
rcr
cmps
adc
or
movs
and
and
inc
xchg
call
inc
dec
inc
add
add
fist
sbb
dec
daa
mov
std
push
add
sbb
movs
outs
popa
fiadd
sub
xchg
mov
stos
jne
add
add
sbb
lods
add
cmp
movs
mov
add
clc
mov
mov
movs
dec
or
dec
push
mov
ins
shl
in
adc
and
es
ins
mov
mov
ss
cdq
loop
sbb
ss
out
es
adc
and
cli
sbb
ret
loope
push
js
test
mov
in
pop
test
int
inc
add
adc
push
add
pop
cdq
std
sbb
push
add
sub
pop
sbb
retf
cmp
adc
or
xor
hlt
and
adc
adc
aad
push
dec
inc
push
aaa
mov
sub
adc
jl
aaa
wrmsr
jb
add
clc
pop
sbb
pop
inc
sub
(bad)
movs
cmp
enter
scas
mov
sbb
sbb
xchg
add
rol
add
ror
enter
fadd
pop
or
dec
fadd
ss
or
and
loop
call
das
adc
cs
not
inc
sbb
ret
dec
(bad)
fst
std
dec
jne
xor
cmp
(bad)
mov
push
xchg
xor
jno
call
fcom
or
rol
mov
sub
bound
sub
push
mov
add
lods
push
push
dec
jbe
pop
or
ds
mov
rol
dec
mov
dec
xor
inc
shr
dec
mov
and
pop
push
pop
inc
and
das
test
add
bound
push
out
loope
jnp
pop
verr
or
cmps
or
jnp
inc
mov
pop
add
jbe
add
mov
mov
arpl
jge
je
xor
dec
movs
fist
imul
mov
and
in
jb
ja
outs
pop
inc
in
xor
mov
sbb
or
cs
sub
xor
xor
pop
pop
and
inc
push
pop
je
frstor
(bad)
out
push
out
icebp
aad
push
cmps
jge
cmp
and
mov
push
or
xchg
fldenv
lock
mov
push
and
pop
push
popa
fbld
mov
inc
sbb
sbb
nop
lods
sbb
out
das
lock
push
les
mov
(bad)
shl
sub
out
push
jmp
or
sbb
xor
bound
fistp
es
and
adc
dec
pop
leave
into
push
xchg
mov
les
inc
sub
mov
and
xor
loope
xor
sbb
push
clc
or
clc
shr
push
(bad)
and
sti
cmps
xchg
and
out
jb
pushf
mov
ret
xor
in
movs
enter
outs
lods
mov
push
add
or
mov
sbb
or
(bad)
and
repz
add
int
lods
xchg
out
pop
jbe
and
dec
test
push
and
sbb
or
jg
and
jns
cmp
add
idiv
and
nop
sub
inc
test
shl
inc
imul
enter
rcl
or
mov
repnz
xlat
xchg
(bad)
(bad)
es
jb
xor
dec
add
inc
loopne
popf
cld
adc
in
aad
ds
in
int
ret
sbb
jb
mov
push
pushw
push
ins
lahf
arpl
add
push
test
add
inc
inc
inc
and
adc
mov
cmp
and
and
sub
fs
or
je
mov
mov
fwait
stos
in
adc
pop
ret
sub
push
push
test
cmp
sub
sbb
pop
fadd
cmp
mov
ins
jl
mov
fnstsw
ror
pop
jmp
xchg
out
in
lods
mov
push
xchg
in
jl
lahf
movs
(bad)
out
inc
fs
mov
cwde
cs
pop
jmp
cld
fidiv
lods
push
pop
retf
jbe
pop
xlat
inc
ins
shl
in
dec
inc
lahf
or
push
mov
mov
mov
mov
xor
push
repnz
push
xchg
and
leave
xchg
adc
add
jne
dec
test
call
ret
inc
adc
out
adc
dec
leave
sub
mov
popa
test
push
and
pop
push
dec
pusha
aaa
add
jbe
sub
jl
push
cmp
push
adc
fld
fsubr
sar
push
les
repnz
and
cmp
inc
push
lods
and
inc
movs
ds
pop
dec
cli
mov
nop
rcl
enter
mov
add
js
rcl
test
daa
rcl
out
dec
or
adc
jb
or
jb
inc
inc
pop
rol
or
xor
nop
dec
xlat
or
leave
outs
jb
and
push
dec
xchg
add
fnstcw
pop
add
inc
inc
push
nop
inc
imul
mov
repnz
movs
enter
movs
in
cmp
ins
or
fisttp
xlat
xchg
xchg
fs
xor
test
inc
js
and
cmp
adc
fisttp
push
ins
loope
jo
hlt
cmp
fist
adc
stos
rcl
xlat
adc
push
pop
sub
scas
inc
dec
sbb
nop
or
in
sbb
push
enter
add
imul
fiadd
adc
xchg
bound
popa
push
in
adc
inc
push
push
aam
push
fstp
ret
test
jns
rol
jmp
scas
pop
or
les
xchg
and
and
es
sub
and
add
add
xor
xchg
das
adc
xchg
enter
push
sbb
add
in
cld
sbb
add
xor
sub
sbb
mov
loope
sub
sbb
sahf
ret
sbb
jmp
sbb
sbb
je
mov
sbb
das
sub
sbb
sbb
cwde
mov
sbb
mov
dec
popa
sbb
leave
out
ret
adc
stos
cmp
cwde
dec
test
mov
push
pop
pop
push
sbb
push
out
xor
inc
push
xor
shl
fisttp
push
test
or
ins
rcl
out
inc
or
or
push
call
xchg
xor
jge
inc
push
popa
lock
out
ss
push
jb
cmp
ret
shr
pop
ror
loope
adc
jbe
jb
and
jbe
mov
call
adc
test
pop
sub
add
sub
add
push
call
dec
(bad)
add
pop
sub
aad
xor
data16
dec
and
or
fs
adc
and
mov
xlat
mov
cmp
xchg
push
aaa
das
nop
pop
jno
test
mov
jl
enter
lods
dec
push
aam
cmp
jo
push
in
push
mov
push
iret
inc
dec
adc
ja
cmp
cmp
nop
adc
sub
stos
fdiv
or
inc
scas
cmps
dec
xor
sub
in
fsubr
xor
xor
jl
push
je
add
push
push
mov
xlat
lods
pop
push
pop
and
cwde
jmp
arpl
nop
xchg
push
packuswb
add
sbb
shl
in
test
pushf
movs
je
mov
pop
dec
sar
sub
or
and
add
add
nop
sub
nop
cwde
jne
cdq
inc
mov
push
mov
addr16
xchg
aaa
aaa
pop
test
leave
aaa
lock
cmc
sbb
cmp
push
lea
aaa
sub
pop
cmc
xor
and
addr16
aas
pop
dec
ins
imul
sub
dec
cs
cmp
jno
je
daa
pop
mov
rcl
das
int
mov
pop
add
mov
cmps
ins
or
sub
jle
dec
or
pop
mov
mov
fimul
sub
xor
cdq
movs
adc
push
out
add
adc
xchg
cmp
inc
add
add
or
ja
movs
std
xchg
fmul
sar
int
inc
adc
ins
xlat
sbb
push
dec
sub
call
cdq
adc
dec
push
pusha
push
bound
fld
lahf
xchg
add
inc
mov
push
push
xchg
sub
stos
xor
sbb
push
fidiv
add
fstp
inc
pop
jne
inc
imul
test
add
inc
out
movs
sbb
(bad)
jne
dec
or
adc
pop
jge
push
outs
(bad)
out
jne
pop
xor
sbb
mov
xor
iret
dec
shl
mov
cwde
jmp
in
adc
adc
or
cmps
mov
ret
pop
mov
mov
push
pop
test
shr
les
out
pop
mov
mov
mov
dec
push
sub
dec
shl
dec
retf
add
fadd
xor
push
aam
sbb
jl
scas
jp
aam
adc
add
and
push
and
xor
(bad)
jg
add
retf
jp
jp
jbe
adc
jb
je
das
or
mov
inc
adc
adc
stc
aad
pusha
xchg
jl
lea
fadd
mov
lea
mov
push
jbe
jmp
jmp
sub
out
sar
jmp
and
movs
mov
add
add
add
sbb
or
rol
dec
cwde
adc
dec
scas
sbb
adc
(bad)
imul
(bad)
aam
int
push
and
mov
push
sub
push
loop
mov
cwde
ds
daa
pop
pop
shl
std
pop
rcr
fcmovu
sbb
add
adc
scas
dec
adc
and
xchg
movs
push
repnz
ds
mov
mov
adc
cwde
mov
adc
jg
adc
shl
pop
nop
xchg
pop
jl
test
sti
(bad)
pop
cld
pop
(bad)
cmp
mov
adc
sbb
dec
mov
push
xchg
loope
add
push
sub
xor
daa
adc
ins
fsub
mov
sub
jne
mov
jo
retf
jo
or
inc
push
add
pop
jne
jno
jle
cdq
inc
mov
push
imul
fcomp
add
and
pop
nop
cli
nop
or
outs
or
jecxz
push
dec
inc
out
ds
cmp
sar
add
jmp
adc
add
add
repnz
inc
cdq
push
add
push
dec
xor
(bad)
outs
adc
movs
mov
sub
ins
and
and
retf
outs
jecxz
hlt
push
push
sub
scas
push
mov
xor
aam
lds
xor
push
jne
inc
arpl
fcom
stos
cmp
jl
imul
aad
mov
cmp
loop
xchg
add
pop
pop
or
lock
fnstcw
cmp
dec
xor
sub
sub
mov
cmp
pop
jge
loopne
inc
xor
sahf
daa
out
sub
shl
daa
ins
and
rcl
push
push
jb
aad
imul
add
fmul
aas
mov
push
push
sub
push
cmp
loopne
and
lock
fdivr
outs
inc
sub
and
sub
pop
cdq
enter
movs
xor
mov
call
add
ffreep
xchg
xor
out
les
jne
and
ins
push
sbb
ret
fdiv
xchg
shl
adc
mov
sub
es
or
mov
rol
pop
jl
push
lock
aad
aad
xchg
xchg
pop
push
cmps
and
push
outs
and
mov
and
jne
mov
fisub
retf
sar
fdivr
imul
push
mov
aam
dec
adc
fstp
and
in
movs
sbb
aas
cli
or
ret
aad
cmp
sbb
xor
ins
stc
or
push
mov
xor
mov
arpl
sbb
fist
dec
xlat
and
aas
cmp
and
adc
cs
lds
or
lock
xchg
ss
adc
pop
adc
aaa
push
aam
sub
push
inc
fs
push
cmps
or
sub
xchg
or
aas
jle
xchg
add
inc
not
enter
mov
ret
fbstp
div
cmp
cmps
aas
rol
inc
adc
and
out
xor
inc
or
jmp
gs
cwde
and
(bad)
mov
xor
push
pusha
xor
inc
inc
jmp
xor
dec
add
inc
xor
pushaw
or
push
sbb
cwde
or
or
push
or
add
mov
push
mov
nop
inc
cmp
sub
hlt
iret
dec
sub
push
pop
sub
fistp
mov
ss
dec
out
ret
xchg
xchg
mov
and
push
mov
add
mov
dec
dec
adc
lods
sub
pop
(bad)
jle
xor
addr16
shr
jo
test
mov
xor
test
and
movs
push
mov
cwde
sbb
push
pop
xchg
pop
sub
add
push
daa
cmp
and
hlt
scas
rol
push
inc
sbb
movs
cmps
inc
cmp
xor
pop
into
push
or
sub
mov
(bad)
dec
dec
les
cli
add
loope
jo
call
and
cmp
add
pop
dec
hlt
push
jmp
movs
jne
test
inc
and
jno
mov
dec
into
jmp
and
add
inc
xor
lods
shl
pop
dec
lahf
cwde
dec
push
cmp
xor
test
mov
cmp
out
jnp
adc
adc
jg
xchg
mov
inc
vandps
pop
cmp
cmp
jne
push
ds
add
inc
fidiv
test
call
mov
fimul
cmp
mov
pop
push
push
push
adc
int3
xor
icebp
call
neg
call
pop
cmp
daa
add
je
lea
retf
jno
ret
dec
call
inc
push
or
pusha
or
mov
in
hlt
ds
inc
inc
(bad)
xlat
mov
test
xchg
cmps
icebp
(bad)
aas
mov
imul
adc
add
jne
jne
pop
cmp
adc
ss
imul
add
retf
add
pop
add
or
cmp
ss
or
jge
shl
or
pop
add
inc
sbb
push
sub
stc
mov
mov
mov
stos
mov
xor
xchg
cdq
cmp
stc
inc
add
je
xchg
fbld
add
dec
cmps
push
loopne
sahf
repz
and
xchg
push
cmp
and
cmc
out
pop
add
add
xchg
jne
hlt
inc
aas
dec
xor
adc
popa
pop
test
scas
add
mov
push
cmp
rol
test
xor
outs
imul
push
outs
cmp
popf
or
jnp
sub
xchg
nop
xchg
outs
stos
jb
cs
je
mov
adc
sbb
mov
nop
cmp
movs
dec
mov
cmps
loopne
and
add
inc
(bad)
hlt
call
xor
lods
cmps
adc
add
imul
lea
push
jb
jo
lds
nop
add
add
daa
jmp
xchg
fs
test
xor
jmp
add
and
inc
jl
js
cmp
(bad)
in
and
mov
and
push
xor
aas
jne
jg
clc
push
popa
and
outs
or
ret
gs
in
pop
xchg
cmovne
mov
inc
jne
cld
add
sbb
xor
shr
pop
or
mov
iret
pop
addr16
cmp
mov
xlat
push
add
jae
neg
dec
cmp
jle
and
dec
jmp
or
daa
push
shl
mov
xchg
in
sub
movs
add
and
push
add
dec
add
add
adc
out
add
test
nop
push
(bad)
in
pop
pop
mov
push
cmp
jne
cmp
pusha
sbb
xchg
jno
pop
pop
mov
pushf
les
cmp
fisttp
mov
movs
popa
dec
push
lods
cmp
fisttp
retf
repz
dec
and
aas
dec
into
into
and
and
push
es
cmp
je
movs
mov
pop
and
xchg
mov
and
push
inc
and
xchg
xchg
or
in
xor
popa
push
xor
adc
or
jb
rcr
lahf
mov
adc
les
xchg
push
nop
icebp
add
test
mov
and
or
fsubr
adc
fwait
add
inc
pop
push
ja
sub
sti
pusha
xchg
jo
mov
push
gs
into
mov
adc
ret
dec
mov
sub
and
fisub
gs
cld
pop
xchg
in
xor
xchg
jmp
adc
loope
imul
int
inc
outs
outs
mov
test
cmps
in
cmp
das
xchg
add
adc
das
and
pop
mov
out
ss
push
adc
and
adc
mov
in
push
sub
js
fs
mov
dec
(bad)
adc
popa
mov
add
imul
or
mov
or
and
pop
pop
jbe
push
into
cs
shr
pusha
jecxz
(bad)
push
xor
push
push
or
mov
dec
sub
bound
rcr
pop
and
adc
fldenv
and
pop
and
jbe
sub
adc
or
sub
xchg
add
pop
in
js
sub
cmp
push
outs
arpl
cmp
out
adc
jbe
sub
and
push
cmp
cmp
inc
jecxz
xor
push
pusha
das
fistp
xlat
or
iret
sbb
and
mov
push
xor
sbb
rcr
xor
push
and
adc
pop
(bad)
ss
dec
cs
adc
jbe
in
sub
pop
sub
scas
sbb
mov
mov
xor
outs
test
rcr
xchg
inc
imul
ss
xor
sub
dec
ins
(bad)
xor
adc
out
retf
sysenter
xor
popa
inc
or
jae
fwait
movs
inc
les
ror
adc
and
mov
mov
ss
rcr
sub
jbe
aas
inc
ins
jns
push
cmp
mov
pop
ins
xor
test
popf
and
(bad)
shl
xchg
push
jmp
xor
sbb
sub
fsub
aas
mov
add
or
xor
(bad)
and
(bad)
fdiv
pop
adc
pop
fcomp
adc
pop
repz
cmps
je
mov
mov
or
mov
xor
test
jb
pop
xor
xchg
add
sbb
pop
adc
in
sbb
jo
arpl
or
or
pop
jo
ror
mov
test
pop
push
ins
ret
and
xchg
mov
cmp
or
lea
pop
imul
test
test
test
mov
and
jo
xor
mov
push
mov
lea
inc
in
test
in
test
cmp
pop
pop
ds
sub
xor
cmp
jp
sbb
es
xor
and
ins
pop
push
pop
daa
sbb
daa
ror
pop
pop
xor
mov
adc
jnp
test
xor
push
adc
push
adc
sub
inc
push
jecxz
movs
or
nop
or
fsubp
mov
aad
xor
jmp
sub
or
mov
add
adc
or
cwde
mov
in
xchg
jns
adc
jmp
pop
sub
and
add
xlat
das
adc
cmp
sub
mov
mov
sbb
test
mov
pusha
mov
sbb
in
pop
xor
retf
push
aas
inc
or
add
fidivr
ror
sbb
mov
mov
fisubr
aad
or
inc
pop
sbb
movs
and
mov
xor
mov
sbb
leave
sbb
add
sbb
xor
mov
stos
aaa
push
add
gs
lods
mov
and
pop
mov
xor
fcomp
xchg
mov
jns
or
pop
fs
sti
dec
rol
sub
and
mov
test
xor
rcl
sbb
leave
rcr
ss
and
xchg
jns
mov
fmul
mov
and
nop
bound
movs
mov
inc
xor
cmp
rol
into
or
mov
jmp
xchg
jg
or
cmps
adc
imul
and
ja
ins
dec
xchg
(bad)
ret
rcr
jae
and
and
(bad)
lods
movs
(bad)
in
cmp
test
rcl
popa
dec
jno
mov
fcomp
xchg
sbb
and
scas
arpl
cmp
dec
sbb
shr
mov
pop
mov
fidivr
adc
cmp
fiadd
or
add
mov
sbb
enter
sbb
xor
test
push
dec
push
cmps
mov
jb
push
aaa
iret
mov
iret
or
test
add
lods
sbb
adc
std
sbb
std
push
xor
(bad)
fadd
jmp
in
and
adc
adc
jns
push
imul
and
add
pop
test
das
outs
sbb
inc
ss
in
pusha
sub
or
into
ins
ins
sbb
fimul
sbb
sbb
mov
push
sbb
sub
xor
jl
dec
enter
adc
out
out
cmp
xchg
popf
adc
xor
imul
cmp
xor
ja
test
pusha
aaa
mov
popa
mov
(bad)
js
aaa
hlt
data16
loope
icebp
add
mov
lods
shl
add
and
sbb
push
and
jns
adc
test
add
ins
mov
add
or
add
sub
fimul
pusha
jbe
and
and
dec
jb
and
sbb
jno
fcomp
adc
xor
lock
sar
loope
movs
or
stos
or
xor
daa
sbb
lea
sbb
gs
xchg
frstor
sbb
dec
ja
pop
pop
sub
mov
das
ins
ins
lods
(bad)
lea
sub
ror
and
jnp
hlt
sbb
je
outs
ins
push
sub
sub
sbb
mov
pop
cmp
aas
and
xor
cmp
in
push
xor
pop
cmp
dec
dec
imul
sub
fwait
and
pop
rcr
cmp
mov
int3
sub
and
add
xor
mov
push
push
(bad)
in
mov
mov
sub
dec
test
xor
xor
mov
lods
jge
add
pop
arpl
imul
adc
stc
jmp
test
xchg
push
sub
xor
imul
mov
int3
imul
fcom
mov
add
dec
(bad)
sbb
call
jbe
pop
push
adc
inc
daa
test
adc
inc
mov
mov
sbb
and
cmp
cs
or
jo
xor
jge
add
mov
push
bound
hlt
pusha
and
in
ss
sub
cmp
loopne
xor
fiadd
sub
push
pop
aam
not
sbb
push
fdivr
jl
mul
not
pop
sbb
cmp
popf
jp
outs
addr16
hlt
aam
xor
xor
jno
in
ins
das
addr16
jmp
and
sbb
test
sbb
pusha
aas
fs
adc
jmp
ins
or
xor
inc
gs
ins
sbb
mov
push
cdq
cmp
sub
cmp
add
and
sub
pop
ins
and
adc
inc
xchg
pop
mov
add
ins
and
test
xchg
xchg
fcmovbe
push
adc
fcomp
add
cdq
daa
dec
adc
das
aam
and
adc
sub
shr
sbb
and
cmp
mov
sbb
aaa
cmp
and
aad
xchg
push
sub
mul
sub
jbe
pop
and
inc
and
sub
mov
cmc
popa
pop
add
daa
dec
cwde
adc
push
adc
and
push
fadd
cmp
jmp
sbb
add
push
jne
outs
cmp
jo
fld
jae
out
outs
sub
jbe
pop
loopne
add
sbb
loopne
pop
sbb
mul
lods
sbb
cwde
mov
jl
sub
je
daa
mov
sbb
mov
imul
fld
and
cdq
xchg
sbb
aas
fstp
adc
sbb
push
shr
fistp
xor
add
rcl
xlat
pop
and
dec
mov
adc
shr
sub
mov
adc
cmp
and
adc
cmovns
inc
ins
jne
sbb
sub
mov
sti
jge
shl
cmp
push
or
mov
and
mov
mov
data16
vandps
loope
and
xchg
mov
push
sub
lds
adc
ss
add
(bad)
xor
pop
imul
pop
jmp
inc
or
ins
sub
ja
adc
test
cmp
aad
push
inc
(bad)
dec
push
ror
jo
pop
ins
and
pop
(bad)
lds
fcomp
pop
das
jae
fisttp
xor
lahf
(bad)
mov
sbb
and
mov
cmp
and
mov
sub
cmps
out
bound
and
jns
xor
xor
arpl
ficom
aad
jns
adc
cmp
add
mov
in
movs
adc
push
aaa
and
ret
sbb
sbb
xor
inc
daa
sub
pop
in
sbb
lock
fidivr
xor
and
push
daa
push
inc
pusha
outs
leave
adc
add
mov
les
daa
sbb
nop
xor
or
sbb
jbe
aaa
je
sbb
cmps
ja
or
and
push
dec
ins
dec
and
xor
leave
sbb
cmp
or
or
imul
xchg
xchg
pop
pop
fcmovnu
xchg
fldcw
push
adc
cmc
jle
imul
and
cmp
bound
sbb
push
pop
sub
xchg
stos
fild
das
sbb
ret
jge
and
out
inc
mov
neg
ficom
neg
ja
pop
fdiv
or
xor
pop
pop
ja
or
ins
popa
sbb
leave
test
gs
pop
jb
gs
ins
outs
int
ja
ja
ja
xchg
ins
outs
pop
ja
(bad)
mov
dec
daa
inc
and
xchg
mov
inc
mov
cs
mov
pop
pop
sbb
and
and
push
and
xchg
mov
outs
xor
adc
sub
push
(bad)
xchg
outs
fld
and
push
push
cdq
daa
dec
or
adc
cli
ja
fs
imul
ficomp
pop
add
fadd
sar
inc
pop
inc
push
xchg
shl
xchg
fdivr
popa
or
arpl
xor
jno
paddq
outs
bound
sbb
fmul
imul
pop
sub
sbb
and
jg
jnp
push
adc
jg
jb
mov
jg
sub
xchg
pop
outs
outs
outs
leave
pop
fistp
ja
popa
jae
ins
outs
in
ins
ja
ja
ja
rol
and
sbb
and
mov
and
sub
inc
imul
xchg
xchg
repnz
call
push
nop
adc
outs
push
outs
push
outs
sub
mov
ja
fcom
and
ja
jmp
dec
movs
lods
inc
fbld
(bad)
(bad)
push
add
sub
(bad)
push
pop
ins
jns
stos
hlt
sar
jae
sub
mov
stos
mov
aas
mov
lea
mov
jnp
sub
pop
push
mov
ins
lock
movs
or
jae
push
mov
arpl
outs
dec
jmp
das
pop
adc
or
sbb
loope
pop
iret
mov
cmps
or
or
jle
enter
sbb
jb
ins
pop
pop
cmp
push
pop
pop
cmp
xchg
xchg
jbe
sar
jg
sbb
add
(bad)
push
and
xchg
inc
loop
test
cmc
aaa
cmp
adc
nop
sub
fstp
mov
pop
fist
pop
push
pop
imul
daa
adc
cmps
loopne
gs
sub
add
pop
pop
push
adc
sub
dec
xchg
ficom
xchg
push
sub
sub
sbb
test
or
cmp
add
push
push
push
arpl
push
out
xchg
or
push
inc
push
fld
(bad)
push
mov
in
pop
data16
or
sub
les
xchg
adc
les
sbb
cmp
inc
ret
inc
and
jae
(bad)
add
sub
push
sbb
pop
or
sbb
sbb
xchg
jmp
cwde
sub
xchg
mov
aas
jb
(bad)
and
aas
pop
dec
or
sbb
sbb
in
adc
push
je
inc
or
pop
pop
pop
or
add
sbb
jnp
mov
mov
daa
js
jmp
sti
mov
sub
test
loopne
mov
test
out
push
ins
pop
mov
mov
out
daa
out
and
or
out
(bad)
cld
xchg
inc
or
xor
fldenv
lea
jae
fld
pop
xchg
ss
aad
add
xor
dec
(bad)
lea
imul
add
sub
add
bound
aad
pop
and
or
dec
ins
pop
and
imul
sub
les
and
cwde
mov
dec
and
push
ret
jno
adc
add
push
daa
sub
aas
sbb
div
sub
ins
bound
adc
cmc
or
fcom
in
adc
xchg
fidiv
sub
in
cmps
sub
inc
std
push
adc
les
mov
test
push
frstor
xor
repnz
jnp
(bad)
daa
jecxz
in
push
fld
jecxz
jecxz
ss
sub
(bad)
jnp
das
push
mov
add
(bad)
lods
and
push
jnp
jecxz
jecxz
xor
inc
mov
push
xor
adc
xor
shl
mov
bound
ja
mov
fmul
stc
daa
lds
and
lds
or
or
sub
stc
pushf
jecxz
push
mov
cmps
cmp
adc
jo
sbb
sub
cmp
fadd
jne
xlat
sbb
imul
daa
fdiv
mul
lea
test
leave
and
jae
jae
and
dec
jb
pop
jae
jae
pop
enter
leave
nop
or
jae
jae
push
test
adc
mov
or
xor
in
ret
jns
cmp
and
and
sbb
sbb
stos
ins
test
stos
sbb
popf
das
mov
inc
sar
nop
outs
mov
lods
jne
arpl
sub
jnp
jo
push
adc
scas
pop
sbb
sub
jne
shl
pop
inc
cmp
or
mov
xchg
mov
jo
mov
and
arpl
dec
add
ss
aaa
adc
inc
outs
dec
xchg
xchg
pop
or
movs
mov
loope
jno
sub
test
aaa
push
push
add
lods
test
sbb
sub
dec
or
imul
test
sbb
shl
popa
push
push
ja
sbb
cmp
test
and
lods
cmc
repnz
and
or
xor
push
push
aad
xchg
or
push
dec
lea
fabs
xchg
je
sub
xor
mov
dec
pop
or
ja
or
push
in
or
out
jnp
shr
loopne
je
loopne
cmc
xchg
or
repz
sbb
mov
mov
test
daa
and
and
pop
and
sbb
das
cwde
dec
sub
xor
lea
xor
ins
jp
movs
xor
fsubr
test
rcl
mov
xor
pop
push
shl
icebp
ficomp
(bad)
icebp
xor
cmp
sbb
adc
(bad)
(bad)
fcomp
aad
popf
rcr
test
scas
mov
ins
rcr
pop
xor
push
das
add
ins
icebp
cmp
shr
cmp
aaa
shr
retf
sbb
adc
sbb
xchg
nop
sub
jbe
lods
xchg
bound
sub
push
sub
mov
je
mov
inc
cmp
jne
mov
push
push
test
loopne
xchg
daa
out
rcr
bound
ja
sbb
test
xchg
push
fldenv
push
xor
xlat
js
sbb
fist
fsub
cmc
dec
sub
daa
sti
popf
add
push
inc
pop
push
sbb
push
or
stos
pop
sbb
add
loopne
dec
jo
rol
jb
cs
sahf
out
cld
adc
loope
dec
fwait
push
and
arpl
cs
sti
cmp
and
sub
mov
add
and
add
pop
mov
loopne
iret
cmps
and
fcomp
imul
add
dec
inc
and
push
inc
fs
push
pop
push
mov
or
arpl
push
push
shr
sbb
test
repz
sub
push
mov
icebp
lea
cmp
out
inc
fcmovb
or
es
push
or
and
sub
rcl
push
fwait
das
xchg
push
ins
adc
adc
test
ret
popa
push
(bad)
std
in
nop
jp
adc
outs
xor
arpl
fmul
data16
adc
mov
pop
inc
push
jo
ret
out
mov
or
retf
fnsave
fwait
popa
and
dec
sub
mov
xor
adc
jnp
inc
mov
push
out
test
jmp
iret
push
mov
xor
mov
push
push
and
add
mov
or
enter
lea
sbb
mov
scas
jae
bound
dec
dec
pop
sub
push
loope
inc
adc
das
push
cmps
sti
jo
xchg
or
cmp
pop
ret
jg
sub
or
adc
pushf
imul
ins
loopne
lahf
inc
cmp
pushf
cs
sub
mul
adc
je
sbb
(bad)
push
or
and
cmp
sbb
(bad)
dec
mov
add
dec
mov
movs
bound
pop
int
adc
pop
sbb
push
add
xchg
xor
movs
push
adc
sbb
iret
xchg
push
rcr
xor
fld
test
bound
pop
jg
inc
inc
push
jbe
sub
jbe
sub
in
pusha
add
push
and
xchg
ins
sbb
cmp
pop
mov
cmp
dec
mov
push
xlat
and
push
adc
out
xor
adc
je
je
sub
cmps
and
daa
or
xchg
sub
sub
add
das
test
add
sbb
push
mov
je
pop
xor
sbb
leave
lods
mov
ins
xor
jo
cmp
bound
div
cmp
jns
rol
imul
movs
mov
test
lea
sub
fiadd
(bad)
and
push
pop
pop
push
sub
call
or
pop
cmp
adc
mov
shl
jg
daa
shl
pushf
into
inc
sub
or
cmp
popa
sbb
out
pop
sub
bound
mov
cmp
shl
mov
sbb
sbb
sbb
push
add
push
mov
into
xchg
dec
jae
pop
test
jbe
int
push
mov
mov
xchg
dec
pop
gs
and
add
daa
and
or
or
arpl
add
adc
xor
sbb
sub
inc
and
jns
shl
pop
ins
pop
mov
push
lea
sub
and
mov
shl
ins
pop
mov
arpl
cs
(bad)
or
popa
mov
xor
ss
and
pop
mov
es
inc
sbb
adc
fdiv
lds
pop
or
mov
xor
jno
push
adc
sbb
jg
adc
jnp
fmul
imul
sub
retf
lea
rep
jns
push
dec
imul
aam
add
ret
mov
in
and
fisttp
dec
add
call
lea
ja
add
mov
popa
arpl
mov
bndstx
loope
mov
(bad)
fs
loopne
scas
dec
push
and
movs
and
fsubr
add
imul
fstp
add
ins
and
hlt
mov
push
mov
sbb
jno
pop
pop
and
push
xchg
repz
(bad)
push
jbe
jno
sub
dec
rcr
(bad)
rol
retf
inc
mov
stos
(bad)
mov
adc
dec
push
popa
js
js
dec
and
popa
js
mov
inc
xchg
adc
mov
push
(bad)
pop
add
mov
and
bound
inc
or
in
(bad)
stc
sbb
enter
pop
fwait
or
push
xchg
and
xor
(bad)
cmp
cmp
lods
pop
sub
fwait
or
adc
mov
sub
inc
dec
xchg
adc
pop
or
sub
stos
pop
dec
and
add
cdq
inc
xor
xor
add
dec
xor
or
xor
or
add
popa
js
js
cmp
xchg
inc
mov
dec
sub
(bad)
jbe
daa
popf
sti
in
push
cmp
adc
test
pop
mov
mov
pop
rcl
push
fidivr
sbb
mov
outs
mov
sub
ins
(bad)
lods
fbstp
adc
les
nop
fidiv
mov
dec
(bad)
dec
mov
mov
lods
inc
mov
or
sub
adc
sub
inc
sub
sub
cs
cmps
mov
xchg
add
inc
and
cmc
sub
shr
cmc
and
xchg
and
mov
nop
inc
and
and
and
in
(bad)
adc
nop
inc
pusha
xchg
or
pop
or
aad
mov
movs
add
ins
cmp
adc
or
(bad)
jmp
sbb
xchg
aas
sbb
sbb
and
retf
mov
shl
dec
pop
sbb
lods
add
push
mov
mov
dec
in
mov
sub
push
imul
loopne
cmp
xor
push
int3
mov
push
pop
adc
xor
dec
mov
adc
add
imul
lahf
adc
es
mov
bswap
adc
push
popa
mov
and
sti
pop
xor
xor
cmp
or
pop
or
pop
adc
or
pop
popf
sub
mov
shl
inc
lods
popa
jne
fcmovbe
mov
add
cmps
mov
pop
adc
xor
daa
pop
add
pop
pop
nop
mov
mov
out
inc
jmp
xchg
cmp
cmp
in
sbb
push
cld
xchg
jl
sbb
dec
jne
sbb
gs
push
or
in
sbb
dec
push
and
push
xor
movs
add
aaa
test
or
add
push
pop
pusha
push
ficom
je
gs
jnp
in
or
cdq
push
or
test
sbb
inc
xchg
pop
inc
and
add
adc
clc
cdq
adc
or
lds
das
dec
mov
in
xor
pop
push
push
inc
fs
jae
shl
dec
or
fsub
or
iret
adc
jae
sbb
add
nop
push
mov
arpl
mov
or
cs
pusha
mov
pop
cmp
sbb
add
inc
push
mov
xor
jae
aam
inc
outs
fisub
jnp
and
xchg
or
dec
xchg
push
mov
daa
xchg
add
push
lock
pop
push
sbb
arpl
xor
ret
addr16
fwait
or
out
enter
or
push
push
pmulhuw
mov
ss
adc
movs
xchg
mov
je
mov
or
jecxz
or
or
pop
inc
or
cwde
or
add
mov
dec
or
dec
or
sub
ret
add
mov
adc
es
jae
xor
cmp
dec
aam
push
adc
ds
iret
add
pop
dec
icebp
fs
mov
pop
adc
sub
aas
adc
in
mov
xchg
lea
pop
inc
pop
dec
movs
jge
je
jl
adc
pop
sbb
add
outs
push
pop
adc
sub
popa
and
or
mov
pop
mov
or
push
cmp
fcmovb
sti
sbb
addr16
rcr
inc
mov
cmp
or
adc
jne
xor
or
sub
or
sbb
jg
mov
adc
in
sbb
adc
jns
and
pusha
fwait
adc
cmp
aaa
adc
adc
(bad)
xadd
ins
inc
or
pop
add
test
xor
mov
push
mov
mov
popa
cmp
or
push
xor
rol
or
(bad)
or
mov
(bad)
push
xor
rcr
ins
add
and
adc
sbb
lds
sub
scas
movs
icebp
cmp
dec
(bad)
retf
pop
addr16
pop
aas
mov
mov
xor
xchg
sub
leave
ins
popf
sbb
loopne
cmps
les
ins
adc
sub
in
movs
call
leave
ins
pop
mov
or
in
mov
sub
and
cmps
add
mov
test
add
adc
push
or
pop
and
and
adc
and
pop
imul
and
ins
xchg
jge
dec
mov
cmp
sub
sub
rcl
popa
push
aaa
ins
mov
mov
sub
leave
sbb
xchg
gs
sub
bound
std
dec
ins
push
sub
fisub
test
pop
cdq
adc
mov
xor
cmp
fwait
sub
cdq
sbb
outs
mov
sbb
aad
or
pop
push
fisubr
test
fst
sub
cmp
ja
xor
add
or
(bad)
jne
outs
or
sub
push
add
inc
adc
ins
push
pop
pop
pop
cmps
and
ret
mov
mov
sbb
jnp
ret
ret
and
mov
sub
mov
sub
jecxz
push
and
test
adc
jbe
adc
les
sub
adc
inc
mov
popa
sub
push
sbb
int3
lods
inc
push
inc
dec
mov
cmp
cmp
mov
lods
inc
mov
in
shl
rcr
sub
(bad)
push
ss
cmps
lds
jle
push
sub
mov
outs
or
prefetchnta
stc
in
xchg
push
sbb
mov
add
(bad)
xchg
pop
mov
sbb
sbb
in
add
add
and
dec
retf
mov
add
and
cld
repnz
add
add
sub
adc
in
das
pop
sub
lods
sub
stc
sub
inc
int3
push
jle
jb
add
add
int
add
in
das
xor
shl
or
sub
movs
xor
cmp
repnz
xchg
mov
add
cmp
and
cmp
ins
xchg
sub
cmp
add
ds
stc
in
add
add
std
jmp
lock
es
ror
add
fmul
inc
add
push
stos
pop
sub
adc
popf
retf
hlt
inc
cmp
add
and
and
ds
repz
push
dec
dec
or
add
mov
xchg
enter
inc
and
and
leave
or
push
xchg
pop
ins
pop
loopne
or
jl
nop
sbb
lock
enter
clc
inc
enter
jg
aam
nop
and
and
leave
aam
adc
inc
push
xchg
pusha
sbb
and
data16
sbb
push
push
xor
imul
and
shr
inc
enter
jae
adc
pop
and
push
and
inc
push
pop
mov
or
or
nop
cmp
sbb
jle
jns
xor
add
fs
test
add
mov
nop
push
xchg
pop
and
xchg
in
mov
or
test
nop
cmp
je
mov
inc
jb
loopne
nop
and
inc
push
xchg
xor
dec
push
cld
rcl
xor
and
xor
loopne
nop
and
call
clc
pushf
lock
cmovb
xchg
mov
inc
push
and
aad
cmps
sbb
or
or
jns
jb
adc
test
sar
add
pop
lods
xchg
lahf
xor
push
push
adc
fs
or
rcl
jae
xchg
ror
rcl
xchg
or
shl
js
add
add
aad
adc
fsub
in
push
pop
xchg
adc
xor
add
mov
push
test
push
mov
imul
jbe
aad
mov
inc
xchg
fdiv
add
pop
icebp
sub
add
mov
in
mov
xchg
add
pop
call
xor
cld
arpl
xlat
pop
xlat
call
inc
sbb
cmp
div
add
loopne
push
inc
push
cmp
test
pop
push
add
lds
mov
mov
jmp
pop
mov
add
push
jge
nop
xor
add
xchg
fld
inc
fsub
and
shl
rep
leave
enter
out
(bad)
xor
fs
loopne
cmp
sbb
loop
icebp
sub
mov
in
add
in
mov
jg
dec
stos
ror
jns
(bad)
punpckhdq
add
sti
cmp
stos
add
sbb
lds
add
mov
mov
adc
adc
out
mov
and
add
cmc
inc
push
sub
ficom
add
loope
add
leave
sub
cmp
sar
add
adc
xchg
pop
ins
xor
dec
add
cmp
(bad)
loop
sbb
mov
fmul
xchg
adc
lock
sti
frstor
add
inc
scas
lock
cmp
enter
fs
stc
push
repnz
jo
mov
aaa
dec
rcr
or
adc
inc
inc
dec
dec
add
sbb
cdq
sbb
jns
rol
adc
push
adc
or
adc
push
inc
inc
or
inc
jns
nop
and
adc
and
mov
add
lods
adc
or
loopne
push
adc
movs
xchg
in
jns
add
sbb
push
and
add
rol
sub
xchg
sbb
add
cmp
adc
jne
test
ss
cli
into
sub
sbb
xor
jns
repz
sub
add
add
icebp
mov
aam
adc
mov
imul
push
adc
add
lahf
xor
add
dec
fimul
mov
(bad)
(bad)
or
div
xchg
inc
mov
mov
and
pusha
enter
and
(bad)
cwde
or
jge
sbb
xchg
scas
xor
sub
cmp
push
sbb
ins
and
push
adc
pop
add
adc
mov
mov
sub
movs
nop
mov
imul
jle
push
je
aad
add
loop
and
push
out
pop
stos
cmp
add
adc
je
add
stos
bound
inc
jno
jns
xchg
idiv
test
pop
add
cmc
push
je
sub
add
aas
sub
mov
addr16
jne
pop
jl
add
call
add
in
lds
add
or
pushf
outs
and
sub
mov
pop
ja
lea
mov
push
mov
cmc
mov
dec
push
adc
and
sub
pop
cmp
aad
and
add
xchg
dec
and
xor
call
movs
pusha
pop
inc
jb
xchg
cmp
adc
pop
prefetchwt1
enter
cmp
push
inc
adc
ss
jp
adc
mov
jbe
sub
inc
xchg
lea
hlt
lock
jb
imul
mov
or
fwait
pop
cs
and
scas
stos
mov
int
add
ja
cmp
and
add
or
sub
mov
pop
arpl
mov
scas
add
int
pop
xor
cs
and
push
ins
sahf
pushw
jnp
ret
xlat
retf
rcl
rol
sub
fadd
dec
fild
pop
jo
and
bound
mov
ror
cmp
ror
les
add
mov
je
pop
add
and
adc
nop
push
adc
test
mov
add
xchg
sbb
xchg
inc
and
push
sub
hlt
out
jae
fidiv
stc
xor
jmp
sub
sub
aad
imul
and
out
ds
movs
call
fnstcw
mov
inc
mov
int
loopne
dec
in
cmp
ins
(bad)
clc
ins
or
push
fwait
out
jns
push
xor
inc
mov
pusha
pop
hlt
arpl
cmps
cmp
call
jnp
fucom
pop
es
push
push
inc
pop
push
inc
push
push
push
imul
rcr
mov
dec
imul
push
pop
xchg
push
imul
mov
add
imul
sub
imul
mov
push
pop
xchg
lods
pop
pop
ss
cmc
sbb
pusha
mov
das
(bad)
loopne
cmp
enter
push
add
mov
fwait
sub
mov
sub
cmp
outs
mov
ja
pop
outs
or
pop
cmp
sub
adc
jl
add
fld
retf
xor
push
in
lea
stc
ja
pop
push
retf
add
in
das
pop
mov
sbb
scas
sbb
cli
sbb
cld
repnz
inc
out
sbb
ficomp
add
out
retf
scas
and
jbe
add
and
push
lock
repnz
add
add
add
icebp
in
das
push
daa
add
add
repnz
jle
jb
add
add
sub
xchg
das
add
add
hlt
sub
xor
into
xor
sbb
xor
stc
in
xchg
xor
ss
aaa
add
xchg
pop
mov
cmp
loop
add
idiv
pop
stc
in
add
add
cmp
add
das
pop
mov
add
inc
add
out
push
cmp
pop
inc
add
inc
es
push
push
js
push
es
inc
and
push
cmps
jne
int
call
dec
fisttp
popa
call
add
loop
xchg
out
mov
xor
add
mov
sahf
xchg
pop
or
or
and
xchg
bound
add
or
scas
add
cli
adc
xchg
ss
adc
add
adc
xchg
add
sub
or
cwde
sbb
xchg
sbb
daa
ss
ret
call
push
dec
rol
adc
aam
pop
add
xchg
cmps
cmps
fiadd
repnz
sub
or
ficom
or
xchg
(bad)
add
and
and
cmp
or
or
sub
xchg
jmp
adc
mov
les
adc
inc
ins
mov
xor
push
xchg
jmp
xchg
and
adc
cmp
add
add
into
aaa
adc
adc
mov
cmp
outs
and
xchg
data16
das
xchg
or
test
push
xchg
inc
sahf
xchg
mov
dec
adc
xchg
xchg
or
inc
or
aas
and
jp
ins
add
adc
and
xchg
inc
adc
pop
outs
pop
cmp
or
loop
fisttp
nop
scas
cmp
pop
aam
aam
ja
ror
adc
jbe
xchg
hlt
or
loopne
push
dec
lds
push
xchg
les
andps
jl
test
cmp
add
mov
mov
or
fist
xor
push
jae
ins
mov
xchg
push
mov
imul
repz
sbb
es
push
popa
outs
das
mov
enter
add
jmp
imul
push
xchg
retf
lods
or
and
mov
lahf
imul
mov
mov
fsincos
jns
adc
cld
sub
bswap
cmps
loopne
sub
or
aaa
cmp
popf
xchg
mov
xchg
dec
pop
and
mov
and
nop
enter
push
add
add
outs
addr16
lods
mov
mov
push
and
jg
cld
inc
mov
pop
int
fs
sub
daa
mov
cmp
pop
and
or
lock
add
ds
enter
enter
pop
inc
enter
jg
shl
in
enter
outs
or
and
xchg
and
push
inc
imul
addr16
fucomp
mov
cmc
dec
xor
cmp
and
add
or
dec
push
or
push
mov
imul
(bad)
and
jns
call
cmps
sti
dec
mov
hlt
hlt
int3
(bad)
adc
or
inc
inc
add
xor
rcl
sbb
xor
jl
add
or
cmp
arpl
mov
arpl
scas
jge
(bad)
repnz
pop
push
jp
leave
pop
add
and
nop
push
out
push
push
dec
arpl
cmp
ja
or
and
sbb
adc
mov
add
mov
and
int3
adc
add
aam
fimul
cmp
or
dec
xor
lock
fisttp
rcl
push
xor
rol
aaa
push
pushf
add
push
push
add
add
cmp
jo
push
push
mov
out
jl
jnp
aam
rcr
push
(bad)
push
inc
iret
push
inc
fcomp
aad
fdivr
lods
nop
sar
sti
push
pushf
int
or
ds
mov
xor
sbb
push
adc
add
lods
mov
jae
mov
or
push
movs
adc
fist
ja
adc
imul
adc
aaa
(bad)
xor
or
fisttp
aaa
pop
or
push
fld
xor
sbb
test
xchg
shl
nop
push
cwde
pop
fldenv
dec
push
mov
or
and
pop
shl
add
add
sub
sub
mov
sbb
mov
mov
dec
add
les
or
sbb
pop
and
jne
sub
arpl
fisubr
fisub
add
or
or
add
mov
call
rcl
push
sub
or
xor
mov
push
sbb
jne
push
mov
pop
pmaxub
fiadd
pop
fwait
pop
inc
lods
push
call
adc
cmps
adc
mov
aaa
jb
mov
mov
(bad)
sti
ret
fnop
cs
sub
or
jecxz
lods
cmp
add
cmp
mov
add
ficom
rcr
mov
adc
push
fs
jmp
addr16
fs
std
es
fs
js
int3
fs
lock
xor
fs
les
dec
gs
pop
push
and
add
jnp
pop
in
cmp
sub
push
and
imul
push
loopne
adc
sbb
loopne
sub
mov
pusha
and
adc
loopne
sahf
mov
sahf
cs
push
pop
pop
jns
xor
adc
adc
adc
add
push
pop
or
rol
xchg
push
pop
clc
push
aad
xor
inc
mov
mov
jg
pop
xor
inc
popa
xor
cmp
nop
add
adc
dec
pop
and
(bad)
and
arpl
aam
call
mov
adc
popf
outs
aam
fiadd
add
push
cs
push
(bad)
repnz
sub
xchg
or
cmp
adc
push
pop
mov
push
add
imul
ins
adc
mov
or
adc
fnstenv
pop
inc
mov
push
cmp
add
outs
pavgb
push
or
pop
dec
lds
sahf
out
(bad)
pop
xchg
push
add
add
ins
rcr
or
or
jno
mov
test
dec
or
cmp
mov
stos
and
bound
jge
add
pop
aaa
xchg
adc
pop
add
mov
jg
test
add
cdq
add
mov
stos
stc
add
(bad)
add
sub
cwde
repz
add
inc
ins
adc
mov
add
jmp
rol
push
outs
shr
push
cmp
ret
sub
andps
ret
cmp
or
test
loopne
mov
dec
stos
jecxz
mov
pusha
test
cmps
or
fmul
jne
pop
dec
inc
push
and
cmp
inc
inc
adc
add
add
add
pusha
cwde
test
shl
xor
je
xor
(bad)
xor
or
mov
xchg
ror
por
and
mov
aad
sbb
pop
mov
(bad)
xor
sbb
mov
addr16
fmul
cmp
pushf
or
test
das
call
mov
(bad)
in
(bad)
adc
inc
sahf
pushf
mov
daa
daa
and
adc
sbb
xchg
xchg
xchg
adc
in
leave
inc
les
adc
in
enter
cmp
push
test
push
loope
add
outs
mov
les
aaa
test
add
sub
pop
add
add
loopne
lea
pushf
les
and
mov
mov
mov
push
xchg
and
push
test
mov
dec
test
shr
stos
mov
sub
sbb
push
xchg
dec
adc
or
in
inc
xor
xchg
nop
pop
and
or
add
aas
popa
jno
addr16
and
xchg
pop
test
add
cwde
or
pop
sbb
push
call
test
fsub
or
sbb
push
sub
mov
jo
dec
pop
add
and
or
fcom
test
xchg
ins
gs
call
xchg
imul
ret
jmp
push
ds
repz
adc
pop
cli
sbb
dec
sub
add
push
add
or
mov
sbb
add
push
std
ins
push
xchg
xchg
and
and
mov
mov
fwait
outs
or
popf
cli
mov
rcl
jp
iret
test
inc
out
mov
sbb
or
sbb
mov
movs
mov
xchg
and
inc
dec
xchg
sub
popa
repnz
mov
inc
xchg
adc
int
inc
adc
dec
adc
bound
add
add
shr
pop
add
push
xor
or
aad
xchg
mov
adc
inc
sbb
jae
jp
lahf
add
retf
retf
in
sbb
out
or
inc
lahf
fiadd
pop
fs
out
sahf
xchg
mov
sahf
fstp
into
or
int
imul
mov
jmp
jae
sbb
add
mov
push
add
pop
stos
cld
jb
add
or
fisttp
add
dec
fidiv
or
sub
ins
sahf
inc
add
xor
and
add
push
movs
mov
stc
jnp
push
push
or
fisttp
leave
xchg
cdq
mov
mov
sysexit
dec
xchg
adc
mov
xchg
lahf
sbb
stc
sbb
imul
jmp
ins
ins
pop
xchg
inc
mov
cmp
sub
sub
push
leave
xchg
lahf
dec
stc
add
push
test
adc
repz
sbb
or
in
dec
arpl
lahf
mov
xor
mov
imul
add
popf
shl
inc
arpl
jno
add
add
lahf
inc
push
mov
sbb
shr
test
repnz
cmps
add
or
and
inc
pop
fcom
je
or
or
pop
aam
or
ins
pop
pusha
ret
pop
add
stc
repnz
push
(bad)
push
aam
push
enter
sbb
jns
stos
or
push
pop
es
lock
lahf
cld
syscall
push
or
or
pop
add
cmp
and
stos
dec
sbb
mov
sub
adc
not
and
sbb
shl
and
cmps
dec
mov
sub
xchg
scas
cmp
shr
xor
and
or
xchg
cmps
ror
or
adc
adc
and
add
pushf
scas
dec
cmp
push
mov
scas
sbb
pop
lods
and
imul
jb
pop
pop
and
and
xchg
sbb
and
pop
add
sub
cmp
mov
mov
xor
clc
mov
pop
inc
lock
loopne
loop
js
and
fild
es
and
outs
sbb
xchg
rcl
inc
xor
aas
pop
inc
loope
repnz
out
daa
jb
enter
sub
xchg
sbb
xor
adc
test
fs
daa
inc
sbb
xchg
adc
sbb
add
sbb
lahf
adc
mov
les
cmp
retf
jno
shl
in
repnz
jo
les
cwde
sub
sub
sub
adc
out
xor
add
inc
adc
das
pop
xor
cmp
jns
sub
sub
jb
in
sub
push
mov
test
sub
mov
or
adc
sub
or
outs
pop
lds
push
and
add
and
jmp
fwait
pushf
cld
sub
sub
test
mov
call
push
xor
lds
or
aaa
pop
cmp
mov
adc
mov
iret
pop
xor
in
cs
or
test
cs
pop
jle
(bad)
mov
xor
wbinvd
(bad)
sbb
test
add
stos
mov
xchg
cmp
test
fs
stos
pop
pop
lahf
pushf
push
sbb
jge
js
test
sbb
push
out
fld
sub
xchg
mov
add
sbb
adc
je
pop
test
imul
je
pop
xor
sbb
sbb
or
(bad)
add
(bad)
adc
cdq
mov
inc
pop
fwait
push
xchg
inc
xchg
out
pop
daa
(bad)
nop
int3
gs
mov
arpl
mov
add
sbb
and
inc
mov
inc
arpl
sbb
sbb
add
xor
cmp
pop
push
icebp
cs
sahf
push
dec
int3
adc
or
imul
gs
mov
stc
cs
sub
enter
sub
hlt
add
inc
pop
or
or
ins
loopne
pop
movs
in
in
xor
test
lods
jno
int3
mov
push
shr
int
push
adc
fst
pop
lods
mov
mov
adc
sbb
call
sti
xor
push
arpl
rcr
ss
push
aaa
push
xor
repz
pop
es
push
(bad)
push
repnz
or
in
mov
push
dec
mov
pop
sbb
dec
pop
xchg
cmps
and
mov
sbb
mov
adc
pop
xchg
in
push
xor
xchg
ja
add
out
ss
aaa
adc
fdivrp
sahf
mov
mov
xlat
pop
leave
sub
movs
(bad)
rcl
xchg
cmp
inc
shl
fdiv
add
pop
add
mov
mov
aaa
mov
jno
test
or
jae
(bad)
cli
push
adc
icebp
xor
das
pushf
pop
cmp
inc
push
inc
sar
mov
pop
outs
cmp
fsub
movs
in
sub
pop
or
cmp
test
fmul
xchg
das
and
cmp
jo
pop
adc
cmp
ins
in
xchg
das
call
pusha
fbstp
retf
mov
pop
ret
jmp
sub
daa
pop
jb
jp
xor
imul
test
pop
add
and
add
push
or
inc
sub
adc
or
test
push
mov
add
stos
sbb
rcr
xchg
scas
or
test
and
fcmove
lea
cmp
add
push
dec
or
call
cli
push
inc
jle
mov
cli
push
nop
stos
cwde
sbb
push
(bad)
push
add
adc
call
sub
pop
or
mov
dec
es
mov
enter
(bad)
fdiv
push
repnz
inc
push
jmp
xor
sub
shl
cmp
or
add
(bad)
adc
(bad)
adc
xor
or
push
repnz
jmp
loopne
add
pop
pop
pop
push
loopne
mov
add
xchg
jbe
fidivr
enter
ds
or
cmps
clc
push
dec
je
and
jge
outs
rol
add
xor
sbb
fsub
fisub
sbb
dec
adc
push
lock
nop
jle
jecxz
xchg
in
mov
or
push
pop
das
jo
sahf
nop
xchg
mov
add
push
sbb
or
out
push
mov
inc
push
inc
push
inc
push
and
outs
setg
pop
inc
pop
xchg
daa
daa
daa
movs
repz
inc
enter
gs
leave
push
fwait
call
in
data16
shl
jb
xor
sbb
inc
jns
cmp
jns
cld
ss
pop
and
add
ja
dec
dec
inc
inc
xchg
xchg
push
dec
push
jae
jbe
nop
mov
pop
fs
stc
fs
push
dec
add
(bad)
adc
jmp
adc
mov
pop
or
pop
dec
jne
push
jb
mov
pop
jecxz
add
inc
pop
and
xchg
daa
in
pop
ins
push
pop
pushf
xor
cs
test
cmp
cmp
add
stos
push
adc
adc
xchg
pop
fs
push
add
ins
and
and
pop
xchg
dec
inc
cmp
push
retf
test
xchg
and
das
add
or
test
inc
in
fs
push
xchg
jl
cmps
and
retf
pop
ret
leave
out
iret
sbb
ja
retf
pop
jno
push
adc
and
pop
fs
push
and
or
mov
pop
fs
push
or
or
mov
aaa
jns
or
nop
cwde
pop
xchg
sub
test
xchg
fmul
sbb
pop
fs
push
adc
test
pop
fs
push
jmp
xchg
fimul
(bad)
nop
fs
pushf
xor
dec
push
out
jl
jo
pop
cmp
and
xor
leave
lahf
retf
pop
imul
repz
add
or
xchg
cmp
pop
and
or
push
call
jbe
sub
call
and
jb
adc
and
cmp
mov
xchg
adc
dec
sbb
mov
adc
fs
xchg
jl
xchg
lahf
and
or
lea
data16
pushf
loopne
sti
repnz
pop
mov
add
test
xlat
popw
sub
pusha
cmp
aam
mov
mov
(bad)
fmul
in
inc
and
scas
cs
dec
loopne
add
pop
or
stc
nop
loopne
movs
cmp
rcl
cmp
push
clts
add
in
sub
or
addr16
inc
adc
sbb
in
add
lods
dec
push
xchg
mov
pop
sbb
dec
dec
add
xchg
push
and
push
or
push
sbb
push
push
loopne
adc
dec
inc
and
push
dec
adc
jmp
sub
dec
push
cs
lods
dec
out
xor
out
or
pop
add
add
mov
sub
aam
repnz
jns
jns
push
dec
sub
jns
test
dec
push
add
xor
jmp
mov
push
lods
mov
(bad)
pop
push
movs
jnp
xchg
jmp
cmp
sub
call
mov
inc
mov
jmp
shr
inc
das
sbb
rol
add
ds
or
push
adc
adc
test
nop
cmp
stc
test
aas
xchg
pusha
popf
add
ror
inc
push
dec
shr
and
push
and
lahf
adc
or
push
push
or
add
movs
rol
adc
push
push
test
mov
test
mov
in
jmp
push
in
inc
jmp
push
sub
mov
bnd
adc
pcmpgtb
mov
push
mov
inc
and
push
inc
sub
sbb
and
je
mov
test
popa
cmps
ja
push
adc
mov
sbb
inc
mov
push
inc
test
scas
push
ja
pop
pop
push
xchg
test
push
in
pop
pop
sbb
gs
loopne
daa
mov
push
push
jbe
leave
or
leave
push
lods
(bad)
shl
push
out
das
jns
push
int3
push
push
push
push
sbb
add
jle
out
jo
clc
push
fistp
pop
pop
mov
xor
inc
push
add
pushf
inc
cmovb
call
sub
sub
pop
jns
scas
push
push
jmp
and
cmp
rcl
add
stos
out
pop
xchg
xchg
scas
or
sbb
xchg
jns
mov
add
pop
add
stos
push
mov
lock
dec
sbb
test
xor
mov
mov
popa
das
jg
or
xor
outs
jnp
and
sbb
outs
das
in
sub
out
push
and
dec
pop
dec
pop
adc
outs
gs
mov
test
pushf
xchg
pop
(bad)
enter
test
add
inc
fdivr
test
ret
adc
aaa
pop
adc
lock
jle
pop
jne
cmp
pop
push
xor
adc
jl
pop
dec
pop
dec
xor
mov
or
push
jns
popf
nop
add
pop
je
pop
bswap
mov
aaa
dec
pop
xor
mov
repnz
mov
cmp
sbb
in
inc
and
cmp
lock
add
scas
dec
pop
push
test
sbb
mov
cli
rcr
or
adc
cmp
and
retf
dec
dec
enter
cli
ss
push
pop
mov
dec
dec
push
enter
pop
dec
pop
inc
mov
cld
lods
pop
rol
mov
sbb
dec
das
pop
pop
jmp
in
das
mov
add
leave
pop
add
mov
mov
dec
dec
pushf
sti
xor
pusha
loopne
inc
rol
mov
les
push
add
shl
call
popa
ja
bound
fsubrp
es
fwait
push
or
sub
jl
push
xlat
or
pusha
sti
aaa
into
cmc
jb
add
ins
bound
xchg
pushf
xchg
xlat
cmp
mov
jp
sti
mov
pusha
mov
or
mov
mov
pop
adc
int3
cmp
in
scas
inc
arpl
data16
sar
adc
enter
fs
jns
mov
inc
cld
push
cld
je
adc
sbb
push
leave
pop
cld
add
fs
rol
mov
sub
push
xor
mov
add
push
add
sbb
push
out
sub
(bad)
gs
add
add
stc
push
add
and
adc
dec
repz
lock
adc
nop
test
inc
scas
jl
out
xor
int3
push
push
add
stc
xor
int3
push
push
inc
push
inc
mov
push
push
inc
sahf
inc
sahf
test
mov
push
mov
push
and
imul
pop
fisttp
mov
in
push
xchg
fdiv
repnz
adc
pop
push
imul
scas
imul
pop
dec
dec
stos
jmp
lock
mov
adc
mov
loop
jno
aam
xchg
cmps
bound
xor
pop
jecxz
push
js
xchg
shr
or
adc
or
cmp
or
push
pop
pop
fwait
daa
jns
jle
mov
pop
sub
adc
adc
and
dec
push
in
repz
adc
dec
enter
pop
movs
repz
mov
or
push
adc
jns
sub
push
mov
cmc
push
bound
xor
test
lods
pop
sub
lds
test
je
pop
sub
pop
test
adc
cmc
pop
lea
add
repnz
mov
pop
jae
add
mov
aas
bound
push
popa
sahf
lds
mov
sub
movs
lock
lea
add
pop
push
shr
adc
and
sbb
ins
or
and
cmps
mov
push
add
inc
mov
neg
push
pop
and
cwde
frstor
xor
xchg
mov
lods
out
inc
sahf
xchg
xchg
or
cld
pop
out
or
or
xchg
inc
arpl
xchg
fdivr
xchg
ins
inc
lods
daa
pop
adc
outs
imul
outs
cld
outs
or
pop
jb
push
outs
dec
stos
inc
mov
sbb
dec
fadd
cmps
pop
cmc
shr
dec
pop
add
jo
xchg
pop
mov
jl
mov
retf
retf
mov
add
dec
jle
retf
icebp
jo
jno
inc
jno
inc
or
and
popa
js
aad
and
cld
std
jle
das
das
pop
movs
scas
add
xor
js
rcr
int3
pop
lods
sub
inc
cld
dec
ds
shl
loopne
test
popf
mov
leave
adc
adc
jns
test
jno
push
test
or
or
adc
mov
mov
and
in
mov
je
enter
push
fisttp
mov
xor
stc
pusha
xor
je
adc
(bad)
aam
repnz
out
xor
fdiv
push
repnz
lds
or
pop
fadd
inc
pop
xchg
or
cmps
out
sbb
sahf
mov
add
in
or
jbe
pop
stc
sub
or
or
inc
jbe
test
repnz
lea
leave
adc
pop
mov
push
xor
xchg
jbe
loopne
and
pop
pop
dec
jle
xchg
xor
jo
fbstp
mov
es
inc
add
aaa
test
mov
push
addr16
mov
in
adc
js
js
loop
inc
xor
scas
jb
(bad)
pusha
les
and
inc
pop
hlt
mov
push
pop
or
pop
jns
xchg
arpl
mov
repnz
push
mov
bound
rcl
push
adc
mov
das
mov
or
ror
das
pusha
cmp
loop
out
jo
aad
mov
cmp
pop
push
xor
addr16
push
and
pushf
jp
pop
xchg
dec
mov
in
ins
js
jp
or
pushf
jp
pop
pop
movs
dec
adc
mov
jbe
add
out
push
jnp
je
stc
adc
pop
inc
jnp
and
and
mov
or
loopne
lock
jecxz
add
push
aaa
ret
sbb
inc
and
and
fild
and
dec
jl
in
rol
mov
or
out
mov
das
call
jns
jns
or
jge
jge
mov
clc
push
jge
and
ror
fwait
push
daa
lods
daa
in
test
jle
push
pop
int
and
pop
xor
inc
jnp
jle
jae
xchg
inc
jnp
jle
les
and
push
mov
repnz
dec
jle
or
mov
xchg
jg
cmp
pop
add
leave
leave
retf
push
jg
jg
es
test
dec
adc
mov
pop
push
push
jns
xchg
arpl
(bad)
and
pop
in
cmp
sub
daa
lds
lock
in
(bad)
stc
push
jne
mov
ret
inc
pop
mov
das
daa
bound
imul
mul
les
in
and
iret
mov
jb
adc
jo
and
adc
mov
mov
jo
mov
out
sub
push
call
int
and
aaa
sbb
adc
xchg
or
in
cmp
dec
pop
sbb
push
enter
in
pop
adc
sub
sbb
pop
addr16
ret
addr16
dec
je
enter
test
xchg
hlt
push
clc
mov
push
test
test
xchg
jo
imul
or
inc
pop
push
repnz
xor
jb
or
repnz
inc
and
pushf
jp
in
repnz
sub
xchg
in
xchg
mov
xchg
dec
inc
sahf
pushf
out
sbb
dec
dec
loopne
mov
dec
mov
das
das
jnp
scas
mov
or
je
pop
mov
mov
repz
scas
inc
ds
pop
hlt
mov
add
or
xchg
aad
add
jae
cmps
or
test
xchg
hlt
mov
adc
dec
fmul
cmp
sbb
pop
xor
enter
or
repz
dec
mov
mov
repnz
pop
hlt
mov
xchg
daa
in
hlt
mov
pop
push
jb
mov
and
dec
adc
in
popa
adc
mov
or
jb
or
out
add
dec
push
test
dec
and
xchg
mov
pop
rcr
pop
cld
push
lods
addr16
push
cmp
inc
sbb
pop
adc
push
and
loopne
nop
mov
cdq
pop
push
adc
and
push
mov
adc
pop
es
push
add
add
cs
repz
sbb
adc
push
test
(bad)
das
in
cmp
pushf
test
push
les
and
push
nop
ret
jno
mov
xchg
jecxz
inc
nop
ret
adc
ds
(bad)
and
sub
cmp
xchg
or
ret
adc
add
sub
push
inc
imul
mov
pop
cwde
out
pop
or
xlat
add
sub
jg
ror
push
inc
popa
int
arpl
dec
ds
cwde
add
pop
jb
outs
sbb
xchg
xchg
adc
xchg
mov
lock
(bad)
call
and
or
and
or
mov
mov
xchg
cmps
pop
cmc
mov
test
dec
sahf
xchg
mov
das
(bad)
xchg
mov
xchg
inc
aam
add
xchg
sbb
jl
xchg
cmp
(bad)
pop
aam
inc
daa
out
xchg
adc
jmp
pop
ins
xor
push
add
repnz
adc
(bad)
js
xor
jg
lods
and
lahf
mov
jl
cld
xchg
push
frstor
xchg
push
test
pop
add
shr
inc
inc
popa
popf
shr
xchg
ds
xchg
xchg
add
pop
add
add
sbb
push
jae
xchg
popa
mov
push
push
sub
mov
cmp
xadd
mov
sub
xchg
push
and
and
inc
adc
adc
pop
mov
dec
jns
add
xchg
test
repnz
pop
ds
sbb
add
jmp
adc
xchg
out
das
das
bswap
xchg
jo
jle
rcl
pop
add
nop
loopne
test
sbb
enter
popf
pop
rol
adc
mov
xchg
pop
pop
push
mov
test
mov
xchg
add
leave
retf
retf
retf
sub
out
push
cwde
cmp
and
daa
cwde
pushf
nop
push
add
and
push
xchg
(bad)
pop
xchg
xchg
xchg
lods
call
jo
or
repnz
adc
mov
loope
cdq
neg
and
push
das
or
add
cdq
adc
leave
aas
jo
pop
add
xchg
lods
add
cdq
out
cdq
ret
daa
dec
popa
inc
pop
and
cmp
sbb
push
inc
push
and
and
sbb
add
arpl
inc
mov
call
pop
out
xor
or
sbb
in
mov
dec
das
addr16
or
dec
xchg
push
mov
push
inc
test
mov
test
sbb
dec
idiv
and
in
dec
pushf
mov
xchg
and
call
inc
and
add
stos
dec
loope
mov
popa
pop
and
iret
pushf
call
hlt
pushf
inc
and
ucomiss
pusha
ret
retf
inc
hlt
popf
jns
repnz
popf
mov
stos
push
cmp
add
popf
xor
rcr
pop
movs
int3
cmp
add
add
int3
sahf
push
movs
lahf
pop
pop
aam
repnz
mov
push
das
das
das
mov
sbb
push
sbb
ins
lahf
and
ret
and
daa
lods
and
pop
enter
cmps
mov
lock
xchg
lock
aaa
shl
add
pop
lods
mov
inc
mov
js
int
mov
mov
inc
xor
rol
push
mov
mov
test
es
and
push
inc
pop
dec
and
pusha
sbb
cli
pop
dec
movs
adc
mov
in
jnp
into
or
test
test
lahf
lock
movups
mov
and
pushf
jmp
push
mov
(bad)
jnp
in
mov
enter
mov
mov
int3
and
mov
test
sub
scas
fisttp
das
jns
movs
jo
int
test
data16
and
enter
movs
pushf
(bad)
loop
dec
jae
and
mov
or
mov
inc
enter
enter
or
lock
add
xchg
imul
dec
pop
xor
repnz
add
loopne
xchg
push
cwde
jmp
xchg
das
aas
push
xchg
mul
shl
jg
sbb
add
sbb
push
cld
adc
inc
mov
xchg
add
test
repnz
xchg
adc
dec
pushf
mov
xchg
test
btc
test
daa
mov
(bad)
cmp
jns
stos
push
mov
add
pop
pop
mov
sbb
push
lods
or
mov
or
dec
push
inc
sub
xchg
lods
sub
fisub
xchg
test
in
inc
pushf
sbb
loopne
and
sbb
xchg
ret
inc
xchg
mov
push
add
jae
dec
popa
adc
push
jb
pop
xchg
lods
hlt
sbb
loope
les
inc
dec
leave
or
or
and
test
js
sub
sub
dec
pop
push
inc
mov
sbb
nop
adc
sub
mov
dec
popa
and
push
sub
add
dec
pop
lea
jns
inc
ins
pop
jae
add
(bad)
add
or
adc
repnz
xchg
lods
repnz
mov
movs
xchg
lods
jne
xchg
adc
pop
cld
push
mov
addr16
xchg
mov
pop
adc
lea
rep
inc
xor
adc
mov
ret
sub
inc
dec
loope
inc
xor
nop
push
leave
sub
adc
cmp
mov
addr16
test
cmp
sbb
lods
data16
inc
ret
xchg
ret
aas
lds
adc
leave
dec
and
movs
es
repnz
dec
shr
fdiv
cdq
jl
xchg
ret
inc
cmp
push
or
cdq
leave
inc
xchg
push
or
xchg
inc
test
inc
or
or
ja
mov
dec
and
push
dec
test
adc
or
sub
xchg
loopne
adc
pop
nop
xor
fdiv
sub
sbb
fdivr
mov
mov
outs
mov
pop
mov
movs
das
mov
jl
xor
push
std
stos
adc
pusha
leave
add
dec
sub
jne
add
js
leave
or
mov
loopne
mov
mov
xor
mov
mov
sub
xlat
js
shr
mov
int
push
or
verw
stos
xchg
not
sub
mov
xor
repnz
sub
mov
mov
mov
or
xchg
mov
imul
(bad)
div
mov
in
xchg
inc
sub
add
mov
inc
mov
sub
dec
jg
iret
and
mov
mov
les
pop
xor
and
sub
adc
mov
pop
add
push
mov
add
pushf
test
and
mov
in
leave
pop
ret
sbb
mov
add
scas
jns
add
movs
retf
mov
sub
stos
cmp
jmp
and
cmp
mov
retf
cbw
fmul
add
or
js
or
xchg
addr16
mov
jl
jl
and
xchg
xor
sbb
ins
add
push
add
pop
cmp
mov
sbb
fwait
push
push
mov
mov
sahf
pop
ss
repnz
dec
enter
ss
add
xchg
inc
fild
test
scas
or
mov
dec
and
and
nop
push
mov
cmp
mov
add
fs
xchg
mov
mov
dec
dec
sub
push
and
mov
pop
pop
lods
fcom
xor
or
in
mov
cmc
repnz
cld
mov
inc
dec
cmp
xor
daa
stos
stos
sbb
or
mov
lods
jbe
pop
into
hlt
aaa
ror
ja
mov
iret
dec
inc
jo
mov
jo
iret
cmp
mov
rol
mov
mov
test
test
cmp
jo
in
fs
mov
pop
mov
inc
test
stos
in
mov
or
rol
add
adc
mov
xor
mov
and
or
fwait
ror
sar
shr
jb
es
adc
mov
dec
cmc
sbb
setb
test
enter
xchg
pushf
jl
add
repz
inc
mov
cmp
pop
xchg
lds
or
(bad)
(bad)
and
add
in
cmp
inc
ss
ret
mov
mov
xchg
int
nop
mov
cmp
sbb
enter
pop
ret
dec
pop
test
and
ret
or
pop
leave
cmp
add
pop
imul
pop
out
or
test
inc
inc
das
leave
adc
scas
jl
jae
push
jno
pop
shufps
(bad)
dec
adc
test
push
pop
nop
push
and
inc
in
and
inc
mov
mov
pop
enter
jl
sahf
fsubr
pop
dec
mov
adc
inc
xchg
(bad)
leave
mov
jbe
(bad)
enter
sbb
mov
mov
leave
push
leave
and
add
cmp
adc
mov
movs
retf
mov
shl
jb
pop
clc
das
movs
retf
rol
xor
loopne
repnz
sub
pusha
xor
pop
test
jae
adc
dec
pop
adc
movs
retf
cmp
in
mov
movs
retf
inc
pop
loopne
ins
repz
pop
dec
xor
enter
adc
lods
in
pushf
movs
retf
test
mov
cmp
jl
test
push
in
mov
push
enter
xor
lods
out
lea
scas
in
xor
dec
jle
add
lods
inc
js
int
sub
ret
(bad)
add
mov
push
sbb
sbb
add
pop
xor
lods
inc
dec
je
inc
call
test
inc
movs
retf
retf
daa
push
loope
add
xor
and
xor
push
shl
dec
out
fmul
es
push
cwde
inc
js
int3
daa
les
mov
pop
push
jne
daa
(bad)
sub
push
dec
dec
pop
ja
inc
jmp
in
adc
sbb
pop
and
mov
mov
ret
repnz
cdq
loope
out
sbb
ror
add
and
xchg
aas
push
into
cmp
xchg
push
shl
test
and
push
cmp
scas
inc
jo
adc
cld
into
mov
inc
add
push
jae
push
into
push
sub
in
in
ror
iret
(bad)
iret
or
repnz
push
mov
sub
js
lahf
push
shr
fadd
or
add
enter
(bad)
push
into
pop
rol
pop
push
pop
shl
jle
das
das
das
(bad)
push
cmp
not
scas
(bad)
stc
sbb
ins
add
nop
gs
cli
xchg
adc
sub
add
xor
mov
cmp
cmp
mov
pop
neg
add
jo
push
push
adc
mov
dec
nop
cmp
adc
add
inc
das
mov
jp
sub
cli
loopne
push
xor
cmp
jge
(bad)
cmp
and
and
sbb
(bad)
nop
xchg
add
mov
add
and
dec
(bad)
cs
jnp
add
add
fistp
cmp
jmp
retf
(bad)
test
sti
cmps
and
jge
(bad)
mov
and
movs
(bad)
dec
pop
add
dec
outs
or
(bad)
xchg
pop
jae
add
pop
xchg
add
jns
mov
cmp
adc
xor
pshufw
rcr
cmp
das
adc
stc
cmp
add
adc
inc
(bad)
sahf
(bad)
xlat
loopne
pop
pop
or
mov
or
dec
add
xchg
push
ins
fmul
push
in
cmp
movs
mov
and
mov
ins
fadd
pop
fisttp
pop
sub
push
add
inc
(bad)
fcomp
push
movs
adc
xchg
dec
sbb
ds
sub
fwait
repnz
and
and
pmulhuw
xor
(bad)
xchg
xchg
inc
and
imul
add
dec
xor
outs
pop
push
bound
inc
leave
xchg
pop
pushf
fisub
sbb
(bad)
fstp
fistp
push
test
xor
test
(bad)
(bad)
ja
mov
rcl
mov
pop
clc
(bad)
adc
retf
dec
push
and
dec
dec
sbb
xor
jns
clc
fistp
frndint
fisttp
inc
inc
mov
cmps
ret
es
das
pop
fucom
pop
test
fstp
xchg
pop
and
int
pop
fst
fst
push
cmp
dec
sbb
int
cld
dec
pusha
xchg
pop
cli
pop
mov
cmp
push
enter
(bad)
fiadd
test
cmc
das
adc
outs
and
push
adc
push
dec
pop
iret
xor
aad
fistp
pop
adc
sbb
xchg
pop
jb
add
iret
loop
cmp
pop
dec
bsf
add
enter
push
adc
or
mov
cli
sub
or
add
mov
cmp
or
pop
es
in
loope
iret
ins
dec
adc
das
or
mov
loope
loope
pop
das
and
mov
push
jb
pop
or
shl
int3
xchg
add
pop
jae
in
movs
pop
cmps
imul
xor
xchg
or
pand
jo
jecxz
jmp
dec
rcl
xchg
in
adc
punpckhbw
add
(bad)
add
in
dec
push
xor
inc
in
repnz
sar
inc
and
cmp
cmovo
add
fadd
loopne
leave
in
in
in
in
dec
xchg
cs
loop
iret
sbb
add
add
fmul
mov
sbb
dec
dec
mov
psubsb
jbe
xlat
dec
call
js
fimul
mov
mov
adc
test
cmps
dec
pop
aad
aaa
add
mov
jno
das
and
inc
jno
adc
test
add
add
repnz
sar
sbb
aas
pop
ret
adc
fwait
lea
inc
adc
stos
add
jo
in
and
or
adc
xor
xor
in
xlat
inc
ins
repz
sub
inc
adc
and
adc
mov
push
xchg
clc
push
enter
dec
push
mov
pop
xor
xor
adc
dec
test
popa
xchg
adc
dec
jo
clc
push
lea
aaa
inc
pop
dec
dec
jae
cld
add
add
dec
jmp
or
jmp
adc
ret
ss
adc
sub
call
sbb
adc
inc
add
test
into
pop
xor
push
js
adc
mov
fprem1
add
or
dec
push
adc
das
jmp
push
add
adc
loopne
inc
pop
and
or
cld
rcr
and
jmp
ds
lea
jecxz
sbb
jmp
mov
test
pop
cmp
dec
push
repnz
lea
mov
or
dec
enter
mov
aad
test
pop
and
pop
es
dec
or
loop
xchg
in
push
in
xchg
inc
and
(bad)
in
add
xor
test
in
sub
inc
and
xchg
in
cmp
and
into
and
in
sub
and
jmp
xor
mov
in
sub
pop
add
xor
add
fiadd
movs
inc
aaa
shr
mov
iret
jmp
pop
icebp
aas
and
out
cmp
sbb
out
adc
test
adc
mov
add
adc
stos
pop
and
mov
dec
out
(bad)
outs
test
dec
or
pop
je
mov
lock
aad
adc
or
clc
push
adc
aas
das
push
pop
test
movs
icebp
paddusb
nop
pop
pop
stos
dec
pushf
in
movs
pop
mov
das
scas
xchg
icebp
int3
icebp
inc
aaa
dec
mov
adc
das
jns
hlt
icebp
mov
jl
pop
pop
ins
add
sub
pop
pop
inc
or
(bad)
xchg
jo
fadd
pop
add
push
in
pop
js
inc
add
push
repz
mov
(bad)
hlt
inc
dec
cmp
loopne
push
lock
retf
test
jo
pop
jb
dec
jecxz
clc
in
jo
sbb
fwait
js
jnp
cmc
subps
pop
out
cmc
std
cmc
cmp
pushf
fmul
cmps
jecxz
mul
dec
dec
dec
lods
sti
dec
clc
ins
xchg
daa
daa
daa
mov
xchg
xchg
xchg
pop
mov
leave
leave
leave
test
cld
sub
in
in
push
jbe
jecxz
jb
repnz
push
mov
ins
bnd
aas
xor
in
in
outs
in
std
sbb
pop
(bad)
xor
in
in
push
push
pop
mov
das
jns
mov
ret
push
jno
push
repnz
xchg
mov
push
pop
and
popa
adc
test
xchg
mov
ins
int
mov
sbb
push
lods
fiadd
fs
or
jl
fwait
pop
adc
adc
pop
pop
and
xchg
mov
outs
adc
sub
dec
pushf
mov
mov
and
das
add
dec
gs
cld
ins
push
test
pop
mov
daa
xor
or
es
frstor
xadd
test
lods
cmp
push
sbb
out
ret
push
pop
jno
xor
adc
adc
cmp
jl
mov
pop
pop
test
mov
pop
mov
std
dec
loope
and
dec
mov
jl
pop
and
repnz
jl
pop
or
mov
jl
adc
pop
mov
jl
and
popf
add
pop
stos
mov
das
mov
dec
popa
pop
push
imul
sub
outs
enter
pop
pop
cmp
test
dec
rdtsc
sub
pop
pop
stos
pop
dec
out
data16
imul
test
dec
sbb
outs
adc
(bad)
stc
and
dec
enter
mov
mov
popa
and
inc
add
and
sub
push
mov
add
jns
pusha
or
adc
add
jb
inc
pop
pop
mov
xchg
cld
movs
leave
loopne
mov
lods
xchg
pop
adc
mov
xor
pop
push
test
cmp
adc
adc
test
ins
bound
cmp
lahf
xor
test
enter
lahf
enter
xor
add
pop
js
pop
and
in
in
sub
mov
sub
add
dec
add
test
sbb
sbb
pusha
int3
add
pushf
fld
pop
push
pop
aam
cmps
add
movs
dec
stos
cmp
pop
nop
in
rol
pop
outs
pop
push
pusha
adc
sbb
add
add
ins
in
jo
add
pop
les
(bad)
push
daa
adc
sub
cmp
or
pop
xor
pop
pop
stos
popa
leave
enter
or
push
out
daa
mov
nop
add
sbb
add
add
add
inc
sub
adc
xchg
jne
adc
clc
(bad)
adc
es
pop
cmps
mov
pop
fild
add
cvtps2pi
add
pop
jne
(bad)
into
or
psubsw
push
push
xor
add
mov
popa
xchg
jns
cmp
and
add
add
(bad)
out
or
pop
pop
leave
add
jle
hlt
clc
add
je
xor
dec
pop
scas
sub
add
mov
repz
or
leave
pop
or
data16
pop
add
add
lods
cmp
cmp
adc
push
pop
je
adc
pop
jns
dec
add
addr16
push
pop
xchg
pushf
nop
daa
cld
adc
addr16
xor
das
add
cmp
stos
mov
fnsave
pop
add
fwait
adc
or
xor
dec
cmp
pop
add
sahf
mov
pusha
push
leave
xchg
scas
aaa
hlt
add
add
add
or
hlt
add
add
pop
nop
(bad)
lea
pop
mov
add
paddsb
or
dec
push
repz
pop
add
lea
pop
add
push
inc
in
in
push
or
jb
repnz
cmp
sbb
std
xor
cmp
call
dec
inc
sahf
pushf
inc
imul
ficom
adc
daa
daa
daa
xchg
into
cmc
sbb
push
cdq
cmc
sbb
adc
push
adc
jle
adc
fimul
push
sub
push
pop
pop
sbb
inc
ds
adc
dec
add
out
push
pop
int
jno
cmps
add
pop
mov
add
jne
fsub
push
repnz
add
inc
and
lods
in
pop
xchg
popa
ins
push
jb
push
and
outs
push
jb
xor
pushf
add
mov
jo
push
adc
inc
sahf
xchg
push
shl
pop
or
nop
sbb
and
popa
cmp
pop
and
xchg
movs
or
das
add
and
dec
call
fs
lock
add
pop
pop
js
or
sub
or
push
mov
inc
add
or
pusha
aad
push
and
mov
aad
jno
xchg
inc
int
fs
cld
adc
cmp
pop
inc
add
pop
cmps
add
int3
and
ss
test
pop
xchg
popf
repnz
cld
adc
and
fsub
mov
push
pop
lods
push
jae
repz
movs
fdiv
fld
ss
(bad)
dec
stos
pop
xchg
mov
dec
sbb
pop
(bad)
push
gs
leave
outs
and
sub
mov
mov
adc
jbe
adc
or
inc
lds
in
ins
pop
inc
mov
(bad)
mov
inc
enter
or
cmps
mov
je
and
add
data16
repnz
mov
adc
aam
mov
mov
mov
fmul
ins
or
sti
es
rcr
pop
pop
or
faddp
sub
mov
or
outs
cmp
imul
adc
add
pop
nop
seto
pop
hlt
add
xchg
or
pop
add
daa
push
adc
xor
push
in
scas
es
xchg
add
pop
mov
ret
repnz
adc
nop
push
test
jae
push
sbb
lods
shl
mov
dec
pop
jg
fs
mov
jne
cld
adc
xchg
xchg
push
add
and
retf
retf
retf
retf
je
mov
push
sbb
leave
mov
push
mov
daa
mov
fcom
push
xchg
pushf
cwde
addr16
pop
out
cmp
mov
inc
sbb
ret
and
retf
xor
repnz
pop
mov
sub
sahf
push
outs
rol
movs
pop
jle
inc
add
mov
dec
mov
aaa
loope
add
pop
in
mov
push
cmp
inc
loop
inc
add
sbb
mov
dec
and
sub
cmps
xor
mov
push
fstp
sbb
in
jge
int3
sbb
es
sbb
sbb
and
push
adc
jno
add
retf
stos
in
daa
push
imul
pop
push
in
cmps
in
jno
sbb
daa
dec
ins
and
add
shl
pop
das
mov
out
imul
dec
jno
mov
sbb
push
and
ficom
xor
movs
adc
lock
push
mov
cmp
dec
cmp
push
leave
inc
repnz
cmp
nop
push
repnz
mov
das
das
lss
dec
push
das
das
das
das
jb
mov
repnz
and
dec
dec
dec
subpd
daa
daa
and
(bad)
and
push
mov
leave
leave
leave
enter
movs
fnsetpm(287
in
in
and
mov
repnz
fcos
ss
sbb
jb
repz
cmp
sbb
dec
in
in
inc
es
mov
xor
dec
sbb
leave
or
and
pop
leave
dec
dec
and
mov
cmp
jno
dec
adc
dec
dec
lock
daa
cmp
leave
adc
mov
call
leave
mov
clc
imul
cmp
push
dec
or
inc
jbe
aam
dec
rcr
lods
mov
sbb
(bad)
movs
in
dec
and
jb
imul
xchg
push
fiadd
cmp
xchg
push
push
mov
xchg
fnstsw
lods
or
mov
enter
dec
push
ins
and
push
adc
or
(bad)
xchg
inc
mov
ins
outs
iret
add
lods
push
dec
mov
mov
mov
and
jb
in
and
shr
adc
push
ins
cdq
or
or
fs
add
dec
xor
in
enter
outs
and
pop
xchg
push
and
xchg
dec
pop
outs
dec
jbe
les
js
pop
xchg
adc
and
test
push
mov
stos
dec
dec
mov
leave
outs
and
outs
fldcw
lock
mov
adc
adc
and
adc
dec
jbe
cmp
and
dec
fcmovbe
adc
mov
dec
stos
and
jb
pop
dec
fdiv
or
dec
pop
dec
and
pop
leave
push
inc
and
and
sub
ret
ret
jno
outs
lods
mov
push
sti
dec
add
leave
int3
push
rcr
outs
pop
xor
int3
inc
mov
sub
out
sub
adc
add
jns
sbb
push
push
jb
sbb
in
ss
mov
mov
push
xor
adc
xchg
and
add
xlat
pop
xor
rol
fwait
in
mov
xor
addr16
sub
jmp
add
sub
dec
mov
add
xlat
pop
xor
sub
call
loopne
fs
sub
neg
mov
dec
ret
adc
push
(bad)
aad
les
cmp
sbb
add
sbb
mov
and
mov
inc
outs
pop
js
fs
adc
dec
into
mov
xor
idiv
(bad)
jb
jp
dec
data16
mul
jns
jne
inc
or
jle
xchg
outs
sub
pop
jae
jbe
ds
ret
ins
lahf
pop
xchg
jns
mov
outs
ja
inc
inc
(bad)
push
movsx
outs
imul
mov
or
inc
jo
out
push
outs
jae
pop
sub
add
test
mov
imul
jne
sbb
fcmovb
push
shl
imul
pop
dec
aaa
inc
loopne
ret
dec
loopne
out
ret
mov
gs
out
shl
jo
jnp
xchg
mov
jns
outs
dec
pop
ret
fucomi
pushw
das
cmps
gs
ja
cmp
arpl
addr16
jns
jae
and
call
pop
das
fisttp
scas
mov
jb
rcl
(bad)
jmp
repz
imul
pmaxub
ins
das
mov
sbb
cmp
xchg
inc
mov
push
test
nop
xor
cmp
mov
loope
sub
nop
inc
mov
ret
aam
ror
or
cmp
movs
inc
mov
push
rcr
outs
jecxz
(bad)
das
mov
mov
pop
das
jmp
mov
push
xor
add
jb
jne
xor
adc
xchg
inc
sub
adc
movs
mov
dec
cmps
inc
or
cs
pop
rol
pop
sbb
mov
lea
repnz
jmp
mov
adc
push
xchg
and
xor
adc
pop
mov
push
hlt
cs
stc
adc
clc
lock
cld
jo
enter
mov
lea
or
stc
sub
sbb
cs
mov
or
fcom
fmul
mov
xchg
lock
loopne
int3
mov
data16
add
jbe
in
push
aam
or
clc
mov
sbb
mov
mov
pop
call
cmp
mov
inc
mov
pop
popf
mov
sub
mov
dec
and
and
cld
xchg
retf
in
or
cld
in
lock
or
int3
int3
in
pop
xor
retf
ret
popa
inc
repnz
outs
pop
inc
test
or
out
(bad)
fmul
lea
fsubr
lods
xchg
(bad)
lds
add
(bad)
in
push
inc
mov
pop
sbb
push
shr
test
not
or
jmp
das
mov
or
fs
cmp
inc
push
adc
push
adc
jo
mov
push
sbb
je
js
shl
cmp
inc
ss
inc
sbb
cmps
(bad)
xor
inc
mov
mov
sub
and
sbb
cwde
not
mov
in
pop
call
aas
adc
add
add
or
inc
push
or
ret
ds
enter
pop
shl
or
or
retf
and
adc
add
push
sahf
int3
or
mov
rcr
mov
add
shr
sbb
(bad)
add
sbb
and
xchg
dec
mov
add
iret
sub
pop
pop
(bad)
das
and
and
out
out
fild
adc
int3
add
adc
sub
aam
loope
test
xchg
inc
push
jl
or
push
mov
setl
add
cld
add
xchg
xor
add
and
push
xor
addr16
pop
aaa
retf
adc
aaa
dec
cmp
hlt
enter
movs
mov
push
test
cmc
test
sub
xchg
cmp
hlt
cmp
cmp
popa
cmps
add
daa
xor
push
xchg
or
ja
cs
sbb
add
sbb
add
pusha
and
mov
lahf
jbe
sub
xchg
rcl
push
inc
rcl
or
add
daa
or
nop
jg
cmp
sbb
mov
movs
or
or
sub
add
cmps
pop
mov
cmp
repnz
inc
fstp
aaa
outs
cmp
movs
lods
cs
add
inc
ret
retf
imul
sbb
cmp
retf
(bad)
lds
mov
inc
cmp
aam
pop
repz
jo
fiadd
cmp
cli
xchg
rcr
push
popf
ss
mov
push
inc
sahf
mov
(bad)
fld
or
(bad)
pop
xor
lock
inc
pop
pop
jmp
mov
cmps
aam
mov
dec
aam
mov
leave
ret
fisttp
call
cli
add
pusha
je
sbb
push
mov
(bad)
out
mul
mov
and
inc
arpl
push
sbb
or
ss
es
xchg
and
cmps
test
lods
nop/reserved
jmp
data16
xor
les
mov
sub
jmp
arpl
loop
xor
cmp
cmp
xchg
jo
or
push
add
clc
push
ret
or
fist
mov
call
jne
mov
push
pop
stos
inc
adc
pop
mov
mov
adc
inc
sbb
mov
(bad)
fcomp
int
hlt
pop
fistp
cmp
fmul
movs
jb
mov
data16
jno
xchg
leave
xlat
adc
xchg
dec
rol
jp
push
xlat
mov
sub
pop
xor
add
add
add
adc
xor
enter
rcr
push
mov
sahf
lea
lock
(bad)
lock
push
dec
xchg
jmp
jnp
sbb
in
loopne
fcomp
test
fdivr
or
pop
int3
(bad)
(bad)
sti
nop
or
pusha
add
mov
jno
shl
dec
dec
cmps
fdiv
out
stos
ret
leave
add
adc
lahf
cmp
cmp
push
ins
pushf
cmps
ins
fcomp
or
out
dec
cmovl
leave
call
or
xchg
pusha
jg
pop
xor
and
mov
mov
mov
je
repnz
sbb
in
and
ins
sub
mov
xchg
cmps
sub
xor
loope
jo
adc
js
mov
or
fs
iret
and
sbb
add
inc
or
push
mov
xchg
mov
pop
mov
ds
inc
add
jge
mov
shl
cmps
imul
sub
and
xchg
cs
xchg
or
push
push
fbld
dec
add
aaa
adc
in
ret
add
test
mov
sub
movs
rcl
cmp
mov
inc
adc
cmp
cmps
add
adc
dec
jns
jnp
aas
and
inc
jns
and
out
dec
adc
cwde
mov
in
mov
push
add
aas
and
pop
add
sub
jb
cmc
cdq
push
xor
out
and
adc
or
xor
mov
cmp
or
dec
lahf
scas
push
adc
clc
xchg
sub
sub
and
adc
enter
push
scas
xchg
push
in
pop
aas
mov
call
movs
jp
and
pop
inc
loopne
jmp
push
push
lock
or
add
pop
sbb
push
out
jo
aad
mov
inc
sbb
call
sub
add
mov
inc
mov
rcl
adc
mov
loope
enter
or
or
inc
add
int3
jae
data16
nop
adc
xchg
push
cmp
aam
test
cwde
(bad)
fbstp
movs
in
test
fistp
inc
bound
sbb
mov
xor
add
push
call
bound
inc
inc
mov
sub
jg
sti
or
add
scas
enter
inc
inc
ins
or
add
imul
xchg
pop
lds
and
xchg
jb
adc
and
(bad)
cmp
stos
hlt
adc
mov
cmps
aad
mov
test
pusha
addr16
push
popf
cmp
cmp
(bad)
jmp
cmp
sbb
in
push
dec
movs
in
call
and
imul
inc
and
mov
add
or
mov
push
and
dec
rol
and
cmp
xchg
inc
adc
and
push
ret
sbb
call
inc
push
sbb
and
das
xor
repz
dec
push
pop
pop
repz
repz
iret
repz
or
iret
repz
lods
mov
mov
lds
ud2
out
stc
mov
add
lock
repnz
sub
pop
sbb
xor
inc
or
mov
fadd
ja
aam
sbb
mov
sbb
mov
or
sbb
adc
gs
pop
dec
ins
jmp
imul
or
inc
xchg
inc
push
sahf
repz
out
loopne
inc
and
repz
push
jle
xchg
pushf
ds
repz
mov
repnz
sahf
out
xor
jns
shl
mov
dec
pushw
sbb
cmp
cmp
iret
cmp
or
call
or
jns
out
push
pop
mov
shl
push
dec
aaa
pop
sahf
out
fidivr
call
fnstcw
ds
bound
ins
in
iret
repz
mov
cmp
dec
push
pop
and
leave
push
stos
mov
movs
(bad)
inc
add
pop
and
jecxz
and
sbb
inc
mov
rol
adc
add
into
or
mov
mov
popa
mov
inc
push
pop
adc
adc
xchg
sbb
inc
adc
loop
retf
push
add
mov
and
add
mov
xchg
pop
inc
jnp
in
inc
(bad)
sbb
mov
add
push
jb
pop
add
adc
movs
or
mov
les
stos
jbe
inc
sbb
xor
sbb
xchg
stos
dec
or
add
xchg
outs
aam
dec
scas
mov
jle
popf
adc
leave
xor
lock
lock
xor
add
test
jbe
add
mov
in
xor
adc
les
aas
mov
add
aam
ss
cmp
retf
loopne
jmp
aad
sub
loop
pop
cmp
les
es
ror
lea
mov
imul
scas
xor
or
mov
cli
sbb
ret
mov
dec
or
dec
push
jmp
sub
and
adc
nop
add
cmp
movs
ja
mov
ins
lods
cmc
sub
mov
ret
lea
push
or
push
inc
rol
sbb
cmp
into
mov
or
ja
mov
nop
or
imul
inc
call
or
mov
push
ins
mov
jmp
test
cmp
jns
cs
sbb
dec
and
or
push
sub
jmp
sbb
or
push
sub
or
or
dec
movs
repnz
or
pop
sbb
movs
repnz
xor
sub
or
adc
adc
pop
push
or
stos
ret
push
ss
ret
and
inc
stos
push
push
mov
adc
jns
shl
add
mov
add
add
ds
cmp
add
adc
lods
popf
out
cs
add
xchg
add
sbb
add
or
adc
lea
push
lock
and
mov
cmp
in
lea
dec
push
repz
pushf
pop
adc
xor
sbb
jae
stos
mov
pop
fucomi
test
cmp
stos
inc
add
pop
add
add
xchg
dec
sub
in
retf
or
mov
or
or
test
adc
nop
retf
call
or
push
and
adc
adc
retf
inc
adc
nop
daa
adc
or
jb
push
adc
sbb
adc
pop
daa
or
pop
pop
mov
mov
jne
rep
add
out
iret
or
sbb
jns
out
dec
push
fs
nop
inc
(bad)
pushf
push
out
inc
lods
push
jmp
add
loop
mov
and
mov
lds
scas
mov
cmp
inc
sbb
sbb
nop
mov
enter
push
adc
jmp
(bad)
and
inc
xor
pop
add
jp
mov
clc
add
push
sahf
cmps
cmp
push
pop
bound
test
mov
or
test
inc
push
cmp
ja
mov
push
pop
rol
xchg
xchg
mov
ror
(bad)
in
xor
and
or
or
iret
repz
push
iret
push
(bad)
sbb
sub
sbb
lea
ins
ret
add
add
add
add
add
dec
sbb
mov
fidiv
mov
or
jb
adc
xor
jl
std
ret
je
dec
aaa
dec
add
sbb
adc
sbb
or
nop
daa
sub
repz
push
sar
pop
pushf
pop
stos
into
push
dec
mov
add
out
not
cdq
xor
ror
into
sar
clc
push
pop
adc
test
cmp
add
repnz
retf
pop
dec
aas
nop
pop
or
sbb
retf
and
ror
das
sub
dec
and
add
or
das
adc
push
rcr
pop
pusha
push
fdiv
sahf
out
aas
das
or
pop
dec
es
aaa
dec
pop
jns
out
addr16
xchg
lahf
push
push
lahf
out
mov
fimul
fmul
pop
and
or
pop
repnz
push
adc
pop
jb
adc
pop
sbb
sbb
and
leave
retf
retf
out
fld
add
mov
mov
add
repz
push
push
push
pusha
outs
jl
mov
iret
repz
cmps
mov
pop
and
adc
add
ret
xor
aas
ins
sbb
pop
or
icebp
or
aas
and
push
loopne
push
scas
mov
idiv
call
cmp
cmp
sbb
pop
sahf
mov
add
nop
or
push
call
scas
cmovbe
mov
sbb
xchg
out
sub
inc
push
sub
in
pusha
outs
jl
and
adc
and
or
or
push
jb
setns
int
sbb
in
call
sbb
pop
fstp
mov
gs
pop
repz
add
ss
repz
inc
push
pusha
outs
jl
in
shl
add
fs
push
add
push
inc
push
fs
adc
push
and
dec
repz
xor
in
pop
loope
jmp
push
cmp
sbb
pop
push
cmp
repz
inc
dec
and
jns
ins
add
nop
add
or
dec
cmp
jne
enter
unpckhps
and
pop
sbb
sbb
and
jnp
scas
jo
dec
out
or
nop
add
inc
or
push
in
sbb
push
and
loop
call
sub
imul
ja
pusha
retf
pusha
mov
sub
jns
sahf
out
add
or
or
jns
out
adc
adc
push
pop
sbb
sbb
jo
sbb
adc
arpl
out
sahf
mov
cmp
repz
add
and
repz
repz
push
data16
iret
repz
cdq
stos
mov
cmps
stc
cmp
adc
xor
sahf
out
push
bound
mov
jl
out
test
les
xchg
das
and
or
xchg
retf
or
mov
push
adc
cs
push
or
xchg
push
sbb
sbb
sbb
push
movs
jb
in
and
and
pop
push
mov
sub
adc
and
adc
dec
in
cmp
inc
push
pop
push
mov
sbb
sbb
and
sbb
in
retf
sbb
jne
xchg
popa
pop
bound
push
and
arpl
sbb
and
test
addr16
push
les
es
and
nop
or
mov
and
dec
test
(bad)
xchg
pop
cmps
push
(bad)
mov
pop
enter
je
dec
or
or
push
or
dec
enter
mov
aaa
pop
xchg
lock
out
or
xchg
repz
pop
jb
mov
mov
add
and
pop
or
adc
and
adc
ror
out
retf
add
retfw
out
cmps
cmp
leave
sar
sti
or
sbb
jae
push
pop
ins
iret
xchg
pop
leave
jp
xchg
movs
shl
xchg
in
rcl
and
rcl
repnz
and
pop
push
mov
or
sub
adc
imul
and
pop
nop
out
cmp
dec
sbb
push
in
sbb
and
adc
xlat
adc
jg
adc
cs
adc
or
arpl
pop
ds
sbb
jmp
in
jne
jbe
pop
xor
and
in
jle
lods
jnp
into
sbb
add
out
xor
cmp
leave
pop
inc
push
sbb
or
and
or
or
cmp
mov
push
mov
fild
push
or
and
sbb
inc
call
iret
rcr
push
dec
pop
cmp
repz
jg
mov
repz
aam
idiv
cmps
jns
imul
cs
push
lahf
out
pop
imul
ja
push
repnz
pop
ja
add
test
push
push
dec
sub
xchg
retf
or
or
movs
jb
in
or
or
pop
push
mov
iret
leave
cmps
push
push
xchg
adc
adc
adc
daa
iret
leave
jae
sbb
sbb
xchg
pushf
cmp
adc
jns
sub
add
movs
imul
test
imul
out
cmp
hlt
or
and
repz
xor
pop
push
repnz
cmp
xchg
ins
scas
pop
movs
imul
or
sbb
add
nop
sbb
and
sub
sub
repz
jns
fld
pop
push
adc
out
sahf
out
ds
pop
pop
xchg
pop
sahf
push
add
and
push
pop
or
and
or
sub
sub
and
adc
and
cmp
dec
adc
xchg
dec
jl
cmp
test
sub
fwait
and
mov
lahf
mov
inc
mov
push
pop
retf
cmp
addr16
mov
or
add
push
cmps
outs
add
enter
mov
fsubr
pop
add
ja
scas
stos
nop
lds
lods
(bad)
adc
cmps
xor
xchg
pop
repz
adc
fst
aaa
mov
push
push
and
mov
push
push
sub
bnd
add
mov
add
push
or
nop
mov
push
push
dec
test
inc
sub
in
fbstp
ja
pop
call
xor
add
fmul
(bad)
(bad)
ret
mov
nop
add
mov
push
ss
xlat
dec
adc
nop
cmp
pop
aaa
icebp
pop
sbb
pop
outs
pop
adc
add
add
or
cmps
add
cwde
add
movs
cld
in
ss
xchg
inc
jo
pop
jo
push
xchg
or
dec
adc
add
leave
add
xor
adc
dec
pop
popf
mov
inc
and
adc
popa
xor
xchg
xchg
pop
jb
pop
jb
jno
jno
retf
mov
add
lods
in
in
pop
jb
jb
aad
or
aaa
pop
push
dec
pop
jo
cs
push
push
xchg
push
repnz
aad
add
shr
jb
or
das
pop
pop
push
xchg
pop
test
jae
enter
mov
call
cdq
idiv
and
mov
push
add
lds
adc
out
scas
and
leave
add
xchg
retf
mov
cld
inc
sti
jae
xor
inc
push
jbe
and
nop
ins
push
sahf
movs
jne
(bad)
xor
xchg
cmp
jne
add
iret
add
pop
cmp
arpl
jns
xchg
inc
enter
jl
add
xchg
push
leave
js
mov
add
mov
jl
jbe
or
ins
sub
sbb
push
or
jnp
push
sub
push
mov
xchg
jbe
push
jl
push
push
ja
cld
or
popa
ja
mov
dec
jno
fcomp
sub
jns
add
push
les
leave
sub
jae
push
les
push
repnz
and
jae
das
das
psrld
js
jns
jns
das
das
das
xchg
jns
jns
jp
xchg
pop
dec
addr16
mov
hlt
cmp
shl
in
in
jl
ja
jb
repnz
sub
cmp
jns
jle
mov
cmp
jg
dec
or
pushf
mov
dec
fimul
mov
aas
or
seto
and
sbb
dec
leave
data16
cwde
jae
adc
js
nop
push
repnz
jno
call
and
cmp
lock
jbe
add
leave
mov
aas
js
ins
and
add
mov
adc
sbb
ds
cwde
ja
xor
pusha
test
ror
aas
mov
or
rcl
and
push
add
add
gs
add
fdiv
xchg
adc
and
xor
hlt
adc
js
push
in
ds
jno
mov
jns
add
push
js
pop
push
jns
adc
jns
sub
pop
int
or
cdq
leave
test
xchg
jns
mov
outs
ss
push
daa
add
push
test
adc
js
pop
aam
pusha
repnz
js
pop
loopne
or
push
lods
(bad)
push
adc
pop
jns
lahf
add
aad
leave
or
dec
lods
xor
add
stos
xchg
mov
add
dec
imul
jp
pusha
mov
inc
xchg
add
push
xor
and
in
js
sub
and
ror
push
pop
xchg
pop
add
jns
dec
xor
xchg
mov
push
xchg
dec
and
cld
jnp
in
lods
mov
or
xor
pop
and
xchg
sar
test
sub
xor
call
sbb
mov
retf
add
and
adc
xchg
sbb
(bad)
adc
jb
add
jb
jae
and
les
jae
or
push
fninit
hlt
dec
push
add
cmp
mov
xchg
or
push
fadd
or
out
dec
ss
add
movs
jge
adc
cmp
adc
(bad)
stos
das
add
mov
daa
imul
push
mov
or
dec
sub
pop
std
ret
sbb
inc
inc
add
mov
sub
(bad)
and
shr
push
stos
jmp
fsub
scas
call
sbb
je
iret
sbb
sbb
es
cmp
mov
jo
adc
xor
and
iret
and
pop
pop
ins
fmul
sub
jmp
in
test
cmp
inc
push
add
mov
out
inc
xlat
mov
mov
dec
jle
or
sub
push
add
jbe
mov
inc
jge
adc
test
pusha
sbb
sub
add
stc
xchg
sbb
dec
mov
mov
jmp
test
mov
lea
xor
pop
ret
cmps
or
pop
fadd
lods
xchg
cmp
mov
xchg
and
inc
and
gs
pop
test
xor
xchg
xchg
mov
mov
jg
xchg
inc
push
fsub
aad
cmps
icebp
and
jb
ret
xchg
outs
add
cmp
sbb
cmps
cdq
cmps
xor
aas
loopne
shr
push
mov
pop
sbb
ror
and
mul
push
cmp
or
dec
aaa
mov
mov
or
cmp
nop
aas
dec
mov
pop
nop
sub
lods
in
in
or
push
and
sbb
fcom
pushf
add
push
shl
add
push
xlat
(bad)
dec
pop
out
add
or
push
push
cmp
stos
retf
dec
mov
push
cmpxchg
enter
cmp
jmp
mov
or
sub
xchg
retf
jmp
pop
hlt
adc
inc
add
pop
in
movs
or
repnz
jmp
xchg
cli
mov
in
mov
icebp
push
cld
loop
cmp
or
pop
push
add
rcl
popa
and
pushf
call
enter
daa
cmps
or
and
cmp
iret
js
add
sub
into
in
hlt
push
into
daa
lock
sbb
jecxz
sub
adc
icebp
pop
je
sub
xchg
cmp
ins
ror
jp
mov
mov
fstp
loopne
movs
mov
lds
gs
mov
sbb
in
ins
or
dec
cmp
or
ja
fsubr
adc
repnz
repnz
adc
enter
xchg
out
stos
and
(bad)
imul
fsub
test
int3
inc
(bad)
mov
lds
mov
in
add
and
dec
add
jo
adc
dec
fisttp
push
pop
add
push
pop
stc
xchg
sbb
jo
xchg
sub
xor
mov
data16
shl
xchg
or
mov
dec
mov
mov
ret
aaa
jo
gs
mov
rcl
in
push
dec
scas
inc
sbb
popa
xlat
xchg
in
xchg
or
mov
popf
xchg
inc
inc
ins
pop
out
inc
jne
inc
sahf
fmul
mov
mov
xlat
enter
dec
in
mov
in
sbb
jno
loop
sub
sub
mov
pusha
aad
mov
mov
std
sbb
and
mov
cmp
pop
cdq
mov
add
add
push
add
jmp
jne
daa
mov
mov
nop
sub
xlat
fdivr
iret
dec
ret
add
aam
push
sets
pop
adc
mov
lods
movs
and
jb
mov
dec
loop
pusha
mov
mov
xchg
repnz
add
clc
fst
pop
sbb
sbb
in
cld
xor
xor
mov
sbb
pop
test
push
mov
in
xor
shr
div
icebp
dec
es
leave
mov
mov
add
rol
adc
lods
outs
js
sub
in
(bad)
adc
adc
sub
lods
jo
mov
xor
sbb
inc
mov
sub
xor
sar
ins
dec
and
and
lds
nop
xchg
fild
fsubr
adc
data16
add
push
push
aaa
xor
sbb
dec
and
adc
aas
add
(bad)
in
nop
mov
push
(bad)
pop
mov
dec
fsub
out
dec
cld
ins
or
cmp
nop
xchg
push
cmps
pop
or
inc
xchg
or
or
mov
add
mov
pop
lock
sub
lods
mov
cwde
movs
jne
sbb
add
dec
push
pop
mov
add
pop
out
xchg
inc
fwait
pop
mov
dec
sbb
imul
push
data16
or
(bad)
pop
clc
jecxz
ror
leave
dec
pop
loope
mov
shl
rol
clc
mov
rol
inc
xchg
sbb
outs
mov
enter
inc
lahf
push
or
pop
cmps
add
and
xchg
ret
pop
sar
les
(bad)
sar
inc
xchg
mov
mov
rcl
mov
pop
mov
adc
(bad)
call
pop
sbb
repnz
mov
test
pop
push
pop
addr16
call
pop
mov
mov
or
scas
xchg
mov
xchg
mov
aaa
or
cmps
xor
arpl
mov
sbb
fs
push
retf
lea
or
mov
sbb
mov
inc
jne
sbb
add
xor
setb
xchg
cmps
pusha
jne
xor
fs
call
cmps
ja
and
lods
and
xchg
(bad)
jno
cmp
mov
hlt
clc
mov
xor
rol
lea
ds
mov
xchg
add
xor
and
add
call
fsubr
rol
xchg
inc
mov
mov
popa
clc
inc
xchg
dec
fnstsw
xor
pusha
push
jae
and
inc
mov
inc
sub
adc
rcr
scas
add
call
rol
adc
shl
add
iret
xchg
fdiv
loop
adc
pop
adc
(bad)
je
mov
inc
sbb
sbb
mov
inc
test
cld
shl
cmps
xchg
aas
repnz
cmp
fcom
mov
and
dec
outs
test
adc
xchg
pop
(bad)
repnz
xor
xor
shr
or
je
push
loop
jne
sbb
pop
imul
cmp
imul
rcl
movs
shr
add
sub
std
and
push
push
adc
dec
call
xor
rol
xor
leave
out
ss
xor
jmp
cmp
icebp
lods
lock
xchg
dec
cwde
in
aad
inc
lock
cwde
or
cmp
jne
(bad)
xlat
adc
push
pop
fdivr
loopne
xchg
dec
dec
enter
cmp
adc
movs
(bad)
or
dec
or
int3
cmp
jmp
cmp
or
add
add
mov
loope
pop
shl
in
rol
inc
mov
mov
mov
and
dec
cmps
pop
pop
cdq
outs
in
push
ins
mov
and
(bad)
(bad)
(bad)
ror
push
fimul
aam
dec
jmp
(bad)
inc
push
fwait
push
call
mov
retf
pop
stc
or
lock
cmp
mov
lock
mov
aam
push
or
adc
loopne
mov
shl
mov
jne
mov
pushf
idiv
pop
retf
lea
or
cmps
push
mov
je
jne
sbb
in
cmp
jmp
xchg
stc
cmps
sbb
xchg
xchg
call
inc
jb
sub
jns
inc
or
inc
in
cwde
xor
fwait
ins
add
loope
and
xchg
rcl
fwait
int3
jnp
sub
add
das
je
pop
test
inc
adc
cld
inc
icebp
in
retf
dec
mov
add
sbb
(bad)
jne
imul
push
xlat
popa
cld
shl
cmp
jmp
adc
add
int
popf
inc
mov
push
inc
and
lea
popa
sub
push
sbb
arpl
adc
enter
int
test
pop
inc
hlt
push
rol
nop
clc
jecxz
and
mov
fdiv
sbb
and
xchg
in
cld
cld
out
and
inc
add
and
shl
lods
xchg
xchg
sbb
loopne
repnz
or
adc
outs
adc
xor
lods
adc
xor
or
mov
dec
loope
pushf
sub
xor
lock
jl
shl
es
sbb
pop
inc
sahf
fsub
lods
sub
(bad)
loopne
and
mov
push
fiadd
and
sub
lahf
jns
cdq
fwait
xor
js
movs
fisub
pop
cmp
pop
ror
mov
lea
lahf
cmp
pop
clc
popf
mov
arpl
addr16
pushf
imul
stos
lock
aad
xlat
xor
les
xchg
outs
jl
cmp
adc
shl
pusha
imul
mov
sbb
adc
and
loopne
inc
rol
mov
cmps
(bad)
mov
pop
aam
fiadd
sub
mov
cmp
xor
and
add
or
scas
cmp
imul
sub
pop
stos
xchg
add
jmp
sbb
aaa
push
jmp
(bad)
mov
and
and
(bad)
in
jmp
xor
jp
jmp
inc
adc
pop
or
push
mov
movs
pop
(bad)
or
or
outs
sbb
or
lea
pop
loopne
add
and
add
add
adc
xchg
mov
cmp
cs
adc
xchg
clc
and
adc
jmp
push
jo
sub
push
jns
js
sbb
sbb
vorps
push
ins
or
adc
sub
sbb
ss
sbb
sbb
call
loopne
sbb
cmps
ins
xchg
adc
mov
or
push
add
sbb
addr16
xor
fsubr
ret
sbb
loope
jmp
rcr
hlt
mov
adc
adc
in
pusha
pop
rep
mov
test
test
lahf
mov
movs
pop
sahf
bnd
iret
jecxz
movs
xchg
call
cmp
push
mov
or
ins
jle
mov
adc
or
push
jge
daa
mov
lock
ret
shl
jmp
or
push
hlt
mov
daa
or
outs
add
inc
sbb
fist
cmc
or
push
nop
outs
inc
ret
add
rcl
jmp
and
pop
shl
pop
add
adc
jge
aad
adc
js
xor
mov
retf
pop
mov
popf
add
or
mov
jle
xchg
test
lods
mov
inc
adc
out
or
outs
adc
test
rcl
push
sbb
and
dec
cmps
imul
sub
adc
sar
aas
add
mov
icebp
push
mov
sbb
adc
xor
dec
pop
repnz
sbb
push
add
push
rol
sbb
add
rcl
adc
and
das
popf
sbb
pop
and
dec
xor
push
pop
add
or
lock
lock
sbb
mov
add
loopne
popa
repnz
sbb
xor
cwde
in
dec
mov
and
inc
pop
push
pop
movs
mov
ror
mov
xchg
add
mov
ret
ret
xor
add
and
cmp
adc
jo
iret
pop
sub
sub
xchg
hlt
adc
stc
add
popa
and
xor
jp
inc
ins
mov
mov
add
push
dec
inc
or
mov
and
and
or
lock
ins
cmps
sub
lods
in
mov
pop
mov
inc
mov
out
das
mov
xchg
call
inc
push
xchg
push
adc
or
rol
inc
add
aad
pop
cmp
call
pushf
es
push
jns
push
in
xor
and
or
adc
and
popf
jmp
lea
mov
arpl
inc
inc
sub
push
add
cmp
cli
aaa
xchg
(bad)
jno
jmp
loopne
mov
xor
pop
pop
je
push
inc
stos
mov
dec
lods
xchg
mov
mov
in
cmp
mov
mov
sbb
cmp
pusha
(bad)
adc
sub
mov
or
fadd
add
xor
jne
jbe
pushf
push
out
cwde
jmp
pop
clc
mov
and
and
lahf
shl
inc
test
pop
jmp
xchg
or
jmp
sbb
mov
mov
and
jnp
daa
dec
or
outs
(bad)
jmp
xchg
sub
shr
out
xor
xor
aas
repz
or
and
and
push
jge
loopne
bound
adc
mov
in
push
sbb
jmp
pop
vmwrite
pop
dec
push
loope
in
aas
xor
push
repnz
mov
sbb
add
pop
loope
push
mov
rcr
pop
jo
das
movs
dec
push
push
lods
fs
sbb
add
nop
scas
xor
lods
push
aam
gs
mov
out
imul
add
inc
inc
adc
mov
pop
sbb
and
cmp
pop
enter
push
daa
mov
dec
scas
ret
sar
pop
lods
test
jmp
adc
ret
rol
sbb
(bad)
in
push
jmp
arpl
mov
add
retf
mov
adc
(bad)
cmc
push
jmp
sbb
out
add
jp
es
call
movs
pop
dec
push
cmps
sbb
cmp
mov
cmp
inc
mov
lahf
sub
fcom
dec
lahf
xchg
pop
popf
(bad)
aam
cdq
jmp
cdq
push
push
pop
out
add
xchg
jns
lock
enter
mov
adc
jmp
or
jmp
or
adc
cmp
aas
adc
or
sbb
pusha
push
bound
rcl
out
push
pop
fnstenv
cmp
push
sub
push
adc
push
inc
xchg
or
adc
cmp
xor
pop
sbb
adc
jno
jb
sub
sbb
jg
inc
mov
dec
mov
icebp
cmp
sbb
and
jmp
and
cmp
jno
mov
or
ja
or
mov
jmp
jb
pop
pop
push
dec
fwait
jbe
addr16
jge
adc
xchg
sbb
xchg
sahf
neg
adc
push
fs
out
and
outs
ror
push
pushf
push
imul
add
inc
cwde
pop
ds
mov
push
or
test
sub
imul
out
and
cwde
sub
sbb
jmp
or
inc
out
mov
jbe
dec
add
jb
bound
pop
pop
or
jb
add
add
add
cmp
push
and
pop
mov
ret
or
lods
push
or
inc
fs
mov
xor
iret
push
pop
popf
mov
mov
push
jo
nop
and
push
add
push
lock
int
add
sbb
test
cld
push
leave
sbb
mov
dec
jle
movs
sbb
mov
xor
add
adc
pop
and
add
leave
jae
jns
adc
push
pop
dec
sahf
retf
push
add
adc
xchg
out
repnz
adc
and
xchg
sbb
pop
daa
and
adc
and
add
inc
fidivr
and
add
push
adc
stos
sub
sub
mov
cmc
cmp
iret
push
jmp
sbb
mov
jmp
je
pop
pop
movs
bound
out
div
jl
in
imul
pop
fucomip
leave
aam
scas
add
mov
xlat
sub
sahf
and
or
inc
sbb
and
xor
fs
dec
dec
lock
out
std
sub
sub
add
mov
mov
cmp
push
je
push
pop
push
sbb
repz
or
or
cmp
mov
ins
cmp
inc
jmp
and
pop
arpl
add
cmp
aaa
inc
out
fadd
or
mov
adc
stos
xor
mov
gs
sbb
xchg
ret
inc
mov
pushw
mov
clc
jl
test
imul
in
mov
dec
pop
and
ja
rcl
or
or
inc
jmp
dec
cmp
(bad)
jp
and
push
xchg
mov
mov
inc
dec
ja
sbb
les
or
add
sbb
dec
sub
dec
push
add
cmps
loopne
sub
nop
mov
inc
dec
mov
or
inc
fsub
xor
je
or
hlt
xchg
out
sbb
ds
adc
adc
jmp
and
hlt
ret
fcomip
xor
and
adc
(bad)
adc
pop
xor
adc
movs
pop
cmp
je
dec
adc
xchg
sbb
jmp
jmp
aas
sbb
jae
mov
data16
dec
mov
and
repnz
sbb
nop
leave
data16
xchg
xchg
hlt
mov
adc
or
fmul
mov
cmp
xchg
sbb
or
sub
add
iret
add
pop
popa
push
ins
mov
push
push
mov
(bad)
es
cmp
call
add
or
mov
je
nop
aam
and
push
sub
dec
mov
xchg
add
jns
inc
or
pop
loopne
push
or
inc
or
pop
adc
or
scas
and
cmp
and
add
cwde
adc
mov
aaa
mov
cmp
imul
pop
dec
push
test
push
and
push
sub
push
pop
xor
xor
mov
mov
je
or
jmp
jbe
inc
movs
outs
mov
add
cmp
cmp
sbb
iret
add
inc
sahf
ins
mov
dec
sub
cwde
cmc
ret
sub
inc
cmpxchg
push
jo
mov
outs
jecxz
test
movs
add
add
xchg
test
sub
adc
xor
sub
adc
ret
mov
enter
lock
xor
(bad)
clc
xor
mov
rol
inc
adc
test
popa
jne
inc
das
enter
inc
pusha
inc
jmp
xchg
mov
sbb
ins
mov
xchg
mov
or
push
inc
pop
add
mov
push
dec
jmp
inc
fldenv
lds
add
enter
sar
test
add
mov
mov
xlat
xchg
mov
inc
adc
sbb
push
jno
fsubr
mov
fidivr
int3
jmp
test
or
xor
pop
cbw
div
imul
inc
push
add
and
movs
jg
nop
add
add
addr16
scas
and
sbb
popf
pop
or
daa
pop
xor
or
ret
add
add
ret
jae
jg
mov
cmp
cmps
fcom
and
call
(bad)
(bad)
pop
nop
push
fsubr
sbb
and
xchg
inc
retf
push
sbb
and
lock
popa
outs
or
mov
ret
mov
out
rol
pusha
or
in
loop
adc
and
jne
cmp
and
fwait
push
adc
loopne
jmp
cwde
xchg
push
add
je
loope
pushf
and
cmps
xor
fimul
mov
out
mov
xor
in
xor
and
movs
pop
pop
daa
xor
je
jbe
mov
(bad)
xchg
adc
pop
mov
dec
adc
mov
lock
clc
jno
jl
mov
hlt
xor
or
mov
bound
in
adc
pop
pushf
and
inc
mov
arpl
hlt
hlt
or
int3
aam
mov
arpl
inc
or
in
push
out
cmp
xor
dec
xchg
sub
mov
(bad)
ret
test
fcom
nop
adc
xchg
and
sbb
jae
les
mov
sbb
add
hlt
aaa
dec
ror
xor
clc
adc
lock
mov
pop
retf
xor
mov
or
xchg
fwait
les
inc
bound
mov
adc
sbb
xor
hlt
or
and
repnz
jle
(bad)
cmp
xor
gs
jno
sbb
loopne
mov
fmul
ror
pop
sub
rol
jge
scas
gs
lea
mov
xor
pop
jecxz
jmp
sbb
mov
mov
xor
jmp
add
or
fmul
(bad)
les
sub
mov
add
jo
je
sub
enter
or
inc
add
rcr
xchg
cmp
cwde
(bad)
jne
mov
mov
jmp
jmp
neg
repz
dec
or
es
mov
adc
test
adc
popa
and
je
sub
jo
in
mov
jb
mov
jne
adc
ins
or
cmp
add
adc
ror
les
mov
lds
xchg
mov
into
or
xchg
xchg
enter
loopne
dec
add
add
sub
aad
push
adc
and
fisttp
push
imul
and
in
mov
std
push
fmul
mov
cmps
pop
add
xchg
mov
popa
add
movs
add
or
push
fimul
xchg
sbb
rol
inc
mov
call
mov
inc
sbb
add
test
mov
test
fstp
ins
imul
je
and
and
adc
inc
lods
xchg
dec
mov
test
or
mov
inc
and
or
enter
jo
push
adc
clc
fidiv
sub
add
push
mov
push
cmc
div
and
adc
fsub
xchg
adc
xor
loope
inc
out
and
clc
rol
xchg
xchg
je
and
les
aam
xor
pusha
adc
mov
icebp
(bad)
shl
in
ss
push
das
pop
mov
pop
lea
ret
cmp
sbb
rol
nop
mov
in
mov
or
push
xor
push
imul
and
mov
inc
inc
shl
int3
pop
inc
add
sub
adc
es
sbb
dec
add
inc
sub
or
pop
jne
aam
pop
fs
add
mov
(bad)
(bad)
movs
mov
mov
mov
mov
mov
ror
cld
adc
call
xor
lock
inc
(bad)
pop
jns
in
(bad)
mov
pusha
iret
sbb
mov
mov
test
and
clts
dec
outs
sub
mov
adc
in
or
add
inc
call
mov
add
lods
mov
xchg
lods
pop
psubsb
inc
aam
outs
dec
add
mov
leave
fs
xor
push
out
add
aaa
cwde
add
lock
shl
cmps
in
mov
mov
scas
cmp
adc
or
sub
std
mov
inc
test
pop
enter
jbe
hlt
sub
clc
ja
(bad)
sbb
or
sbb
out
mov
or
daa
(bad)
enter
lds
imul
sbb
div
popf
mov
push
adc
pop
add
push
mov
mov
into
mov
(bad)
mov
movd
cmp
rcl
mov
imul
cmp
or
out
xor
(bad)
pop
(bad)
fild
or
push
dec
rcl
leave
pop
movs
(bad)
inc
or
sbb
and
fild
adc
aas
sub
jns
inc
xchg
adc
jae
cmp
and
push
adc
js
or
xor
rcl
xchg
adc
sub
and
imul
add
or
lahf
push
jmp
push
mov
dec
cmp
addr16
lahf
mov
out
shl
adc
daa
xchg
cmp
jb
adc
aas
aaa
push
adc
inc
push
cmp
mov
or
test
add
add
and
adc
and
es
push
popa
mov
xchg
pop
imul
ds
ins
dec
cmp
adc
rol
movs
push
rcr
dec
aaa
ret
jns
loope
call
mov
adc
mov
aaa
xchg
out
movaps
xchg
je
jno
fidivr
and
jmp
jns
push
or
addr16
mov
test
fstp
push
push
in
js
ja
in
inc
in
nop
xchg
xor
outs
adc
popf
xor
cmp
jb
in
or
jae
movs
and
(bad)
xor
xchg
push
push
add
mov
(bad)
sub
fsubr
jmp
mov
push
enter
lods
test
add
pop
repnz
sub
int
leave
call
xor
adc
leave
xchg
clc
xbegin
xchg
pop
mov
push
or
ret
dec
adc
pop
aaa
or
mov
popa
cmp
push
retf
movs
and
jo
jp
push
dec
es
add
sub
pop
xchg
adc
sub
mov
push
aam
push
push
and
int3
cmp
jae
call
ss
(bad)
shl
out
sub
push
sbb
ror
pop
ins
dec
add
add
sbb
push
mov
inc
xor
pusha
add
enter
cmps
cmp
xchg
mov
sbb
push
(bad)
fbld
adc
push
sbb
xchg
outs
inc
sar
mov
call
outs
add
or
sub
pusha
dec
inc
sbb
push
add
and
rcl
jno
and
inc
es
xchg
add
xchg
or
arpl
lods
retf
imul
push
adc
pop
xchg
in
mov
adc
xchg
es
and
push
sbb
and
push
test
rcl
ror
adc
pop
in
pop
in
pop
xchg
sub
or
sbb
je
adc
jl
sub
movq
ficomp
outs
sub
aaa
hlt
push
sub
mov
fst
addr16
cmp
mov
lods
fnstcw
imul
adc
xchg
jl
adc
jne
and
push
lea
or
jge
and
icebp
pop
aad
inc
dec
or
popa
int
and
push
sub
daa
push
and
test
loopne
add
iret
(bad)
push
(bad)
aaa
mul
aas
jne
push
mov
sbb
(bad)
pop
dec
call
or
pop
repz
imul
fdivr
lods
int3
or
(bad)
(bad)
fsub
adc
sbb
call
std
sbb
dec
ret
aas
(bad)
adc
adc
sbb
out
xor
push
or
(bad)
add
(bad)
adc
sub
mul
dec
popa
call
jmp
fisttp
pop
add
loope
cli
aas
push
or
jbe
loope
stos
add
sub
inc
jmp
inc
xchg
push
pop
pop
pop
pop
and
jne
or
nop
cmp
(bad)
(bad)
add
mov
out
or
scas
mov
rol
xor
fild
mov
push
add
xor
bound
mov
jo
or
nop
xchg
out
push
cmps
mov
jge
push
add
rcl
call
fs
push
sub
ficomp
xchg
and
aas
mov
mov
add
shl
pushf
adc
cmp
sahf
fadd
sbb
sbb
or
addr16
inc
mov
xchg
mov
call
fdivr
loope
fdiv
pop
dec
hlt
pop
sbb
or
push
fcom
aas
es
xor
(bad)
ja
popa
inc
adc
movs
fsubr
(bad)
pop
or
sbb
xor
call
call
or
sub
shl
and
iret
xor
sti
ds
add
loopne
inc
rol
mov
test
and
sbb
fidiv
xchg
and
push
dec
mov
int
xor
adc
cmp
scas
push
jnp
jbe
xlat
jge
call
mov
pop
fmul
inc
dec
dec
mov
push
sub
cmp
daa
and
or
push
dec
out
shl
call
movs
inc
test
add
call
sbb
jge
pop
sbb
ins
test
fstp
inc
sub
jmp
cmp
mov
les
lock
xor
sub
or
add
pushf
adc
or
add
xchg
ja
mov
sbb
adc
and
xor
xor
jp
dec
aaa
mov
adc
mov
mov
push
aaa
push
test
jno
ret
fs
xchg
pop
mov
jl
and
and
and
and
add
in
push
cmp
add
mov
cmp
fbld
add
dec
push
out
enter
xor
pop
sbb
or
pop
in
inc
sbb
rcr
sar
loopne
mov
xchg
pop
sbb
or
cmp
adc
sbb
sub
jns
mov
adc
repz
loope
sub
ins
in
enter
shl
pop
rol
loop
lahf
inc
xchg
cmp
pop
adc
sub
pop
repnz
sub
sbb
es
pop
adc
push
mov
out
sbb
mov
cmp
iret
pop
inc
sub
jecxz
iret
jecxz
scas
jne
scas
sbb
sbb
cmp
mov
out
scas
in
jns
nop
pop
mov
pop
or
sub
pop
test
sar
in
cmps
dec
ds
in
hlt
sub
in
nop
pop
inc
out
fsubr
pop
add
or
out
ds
mov
ins
pop
and
mov
sbb
call
pop
push
movs
fisub
inc
xor
or
mov
out
(bad)
jl
out
sbb
mov
pop
and
enter
dec
pop
jmp
aaa
dec
outs
inc
and
xchg
pushf
pop
inc
jmp
xchg
jmp
sbb
and
cwde
adc
out
pop
jmp
sbb
pop
dec
inc
les
inc
out
pop
mov
adc
sbb
xchg
mov
xchg
pop
xor
xor
in
xchg
push
xor
jl
inc
sahf
sbb
fs
xor
push
and
xchg
sbb
xchg
out
add
cmp
fstp
push
xchg
in
(bad)
sahf
sub
mov
sbb
in
daa
stc
or
fsubr
sbb
inc
mov
fbstp
xor
mov
leave
add
or
sbb
sub
inc
repnz
loope
mov
setne
js
sbb
push
and
add
pop
and
xor
repnz
dec
clc
mov
lods
pop
adc
xlat
jbe
pop
pop
repz
and
ins
mov
in
leave
pop
pushf
adc
fisub
mov
in
test
sbb
in
in
jns
sbb
lods
sbb
cwde
ds
stc
sbb
xor
fstp
mov
dec
sbb
rol
adc
das
in
jns
cmc
pop
xor
xor
or
xchg
push
sbb
push
push
cmc
and
popf
pop
out
pop
dec
pop
repnz
sbb
push
lds
mov
add
pop
mov
inc
sbb
add
imul
mov
js
dec
das
jns
adc
(bad)
neg
js
jns
nop
mov
neg
stc
dec
mov
pop
push
sbb
inc
(bad)
out
add
adc
jle
dec
xlat
arpl
push
add
int3
push
push
pop
and
cmp
out
xchg
pop
sbb
jo
test
(bad)
neg
into
add
jns
addr16
inc
out
inc
clc
leave
add
sbb
jo
clc
(bad)
out
inc
sbb
repnz
sbb
les
push
push
sbb
adc
sub
add
in
adc
cmp
push
sahf
cmp
push
dec
pop
pminsw
cli
in
pushf
dec
jmp
sub
push
adc
lock
and
bswap
cli
add
repnz
nop
push
leave
iret
cli
mov
idiv
(bad)
cmp
es
pop
fistp
cmps
sbb
mov
jmp
sbb
dec
inc
enter
in
adc
mov
jg
pushf
adc
sub
leave
xchg
push
enter
outs
push
and
cmp
sbb
clc
movs
std
pop
add
and
sbb
clc
lods
push
jo
leave
std
pop
iret
dec
pop
push
adc
xor
and
xchg
in
(bad)
scas
stos
jp
dec
imul
adc
or
push
enter
(bad)
ins
stc
jns
ins
sbb
(bad)
pop
loope
jnp
sbb
adc
ins
add
inc
test
mov
out
inc
mov
inc
add
and
dec
mov
jb
cmp
ins
add
jb
push
and
out
inc
icebp
inc
aad
and
lock
(bad)
push
add
mov
push
nop
cmp
lock
sbb
cwde
sqrtps
add
hlt
sub
jno
inc
and
sbb
sub
add
data16
and
loopne
jecxz
and
test
sub
enter
add
pop
xchg
jl
push
xchg
ins
push
pusha
push
pop
mov
das
cmp
retf
xchg
sbb
pushf
call
xchg
(bad)
xchg
inc
push
pop
addr16
adc
xor
in
and
add
jb
loopne
push
fld
pop
repnz
xor
push
pop
jns
imul
test
add
in
aam
jo
jno
sbb
push
lock
in
repnz
pusha
icebp
inc
daa
cmp
inc
lock
enter
in
fdiv
in
jns
cmp
fadd
pop
repnz
push
leave
mov
jb
add
unpcklps
pop
mov
or
out
add
adc
xchg
shr
lods
adc
ficom
je
inc
lock
dec
push
or
and
mov
leave
adc
push
pop
adc
and
jecxz
sub
and
jmp
pop
and
inc
cld
adc
cld
sbb
enter
or
jo
std
or
pop
and
repnz
inc
jo
nop
nop
dec
push
or
add
mov
adc
and
pop
push
push
cs
pusha
bound
leave
ror
pop
or
dec
out
inc
pop
adc
imul
or
das
sbb
sbb
add
shr
add
aam
mov
add
jb
inc
inc
jnp
enter
in
mov
in
and
lds
pop
fs
das
jns
cwde
and
nop
xchg
inc
enter
dec
jmp
jg
pop
mov
enter
out
inc
sahf
sbb
cld
fs
xchg
dec
sbb
cmp
add
enter
add
xor
pusha
push
xlat
sbb
inc
and
cmp
jl
enter
mov
hlt
loopne
xchg
mov
add
das
in
(bad)
sbb
hlt
ret
adc
add
sbb
retf
fs
cmp
dec
mov
mov
jb
adc
cmp
pop
movs
fadd
xlat
mov
and
cmp
xlat
add
add
xchg
leave
sub
stos
jg
add
(bad)
in
test
nop
push
test
in
add
test
sbb
lods
ss
sbb
pop
(bad)
dec
xlat
sbb
pop
repnz
add
push
pop
sbb
loope
enter
or
add
cmp
adc
sbb
add
or
sub
sbb
stos
pop
and
fdivr
add
shufps
sub
std
and
scas
cmps
fneni(8087
jae
dec
mov
lods
push
fadd
xchg
(bad)
xlat
loop
pop
arpl
add
sbb
sbb
les
add
push
pusha
adc
lahf
xor
jg
cmps
inc
push
sbb
pop
sbb
sbb
lock
add
push
out
out
mov
imul
xor
adc
adc
push
add
and
test
sub
sbb
mov
test
sbb
push
xor
stos
gs
add
pop
add
mov
jg
push
mov
test
pop
stc
pop
stos
jl
adc
aas
scas
rcr
and
std
aas
adc
scas
jns
test
rcl
in
sbb
and
and
adc
stc
and
cmp
pop
aam
sbb
cwde
push
enter
and
push
jae
mov
and
popf
mov
pop
fcmovnbe
add
xor
inc
sahf
xchg
lahf
cwde
sbb
jl
adc
fst
bound
inc
adc
pushf
(bad)
sub
adc
jb
nop
pop
and
jns
mov
pop
and
test
enter
and
movs
adc
inc
pop
and
loopne
in
enter
mov
cld
lahf
mov
xlat
scas
cmp
cmp
adc
sbb
sbb
inc
pop
adc
adc
sbb
clc
push
leave
add
sbb
adc
cmp
cmp
repnz
cwde
and
inc
add
add
mov
call
leave
and
call
aam
sbb
out
add
jg
clc
fistp
dec
pop
lahf
xchg
adc
test
lods
dec
push
movs
mov
lea
pop
xor
mov
in
xchg
pop
or
push
mov
pusha
leave
ins
sub
daa
inc
sub
add
pop
ret
js
sub
adc
jg
sub
pop
add
rcr
sub
out
ror
or
inc
mov
jb
cmp
ret
jbe
xchg
mov
and
push
loope
xlat
inc
push
rcr
sub
movs
jno
and
add
mov
shl
dec
cs
fwait
pop
pop
add
jb
or
or
imul
inc
test
mov
mov
adc
cmp
mov
and
or
adc
ss
lods
nop
lods
xor
nop
jno
or
xchg
dec
or
cmp
str
jns
xor
pop
sbb
sahf
out
or
pop
pop
pop
dec
or
imul
xor
out
adc
dec
sub
movs
shr
bound
and
call
or
test
mov
cmps
jl
and
mov
sbb
xor
push
fadd
dec
add
cmps
dec
dec
dec
xchg
pusha
or
daa
add
mov
aad
dec
adc
mov
add
add
lock
inc
fidiv
jne
jl
mov
or
jle
push
xchg
xor
fidivr
lock
es
xchg
in
or
add
cmp
adc
or
js
(bad)
in
adc
cmps
stc
mov
int
jle
in
cmc
popf
pop
call
and
xor
inc
push
lock
inc
or
add
and
test
aas
lods
cdq
sbb
adc
nop
or
xchg
movs
add
dec
jns
cmp
and
adc
mov
or
pop
loopne
or
or
mov
or
ret
test
add
xor
push
pusha
cmp
and
and
leave
pop
hlt
pop
hlt
inc
dec
adc
xchg
sbb
mov
in
push
add
aaa
in
or
pop
cdq
sub
js
fidivr
xor
push
pusha
and
fs
arpl
lock
mov
inc
ror
inc
sbb
add
xor
repnz
rol
cmp
out
call
pop
push
pop
aad
inc
cmp
sbb
shl
cmp
fsubr
sbb
mov
add
cmps
sbb
push
enter
mov
mov
or
dec
fwait
fwait
and
or
add
sub
mov
pop
xchg
xchg
adc
add
test
inc
push
pop
je
xor
fdivr
or
or
or
add
push
push
cmp
sbb
mul
mov
scas
xor
enter
xchg
xor
cdq
dec
fwait
fwait
lea
test
add
repnz
mov
fs
mov
sub
mov
es
dec
push
push
add
retf
and
xchg
and
je
xor
in
nop
pushf
in
push
in
les
daa
call
adc
add
xchg
ins
in
hlt
les
addr16
mov
and
cdq
sub
test
cmp
inc
adc
addr16
mov
inc
mov
cmp
call
mov
lods
jg
sub
enter
cmps
cmp
inc
pop
push
dec
sub
mov
enter
sub
and
dec
imul
pop
sar
sbb
or
cmps
and
sub
lods
inc
(bad)
mov
loopne
adc
(bad)
pushf
or
push
mov
xchg
sbb
jl
(bad)
lods
xchg
push
pop
push
pop
retf
pop
mov
jl
ins
out
jo
fimul
shl
out
or
lods
pop
add
hlt
add
call
push
adc
add
xlat
and
or
imul
lock
prefetcht0
inc
cmp
add
lock
into
sub
je
and
and
loopne
adc
cmp
(bad)
lock
sub
(bad)
cld
lock
je
sub
dec
dec
std
add
push
adc
inc
dec
or
ds
mov
add
loope
sbb
inc
lods
jl
add
ds
xchg
and
(bad)
(bad)
call
loop
inc
leave
and
rcl
fucomp
pop
mov
out
test
inc
or
jo
inc
push
and
sub
cs
mov
and
js
and
pop
adc
or
ret
rcr
add
add
jno
xchg
inc
ret
mov
jle
in
aas
js
add
xchg
mov
adc
jne
in
push
cmp
inc
adc
pusha
sbb
inc
mov
ret
xchg
js
xor
inc
xor
add
dec
and
hlt
inc
add
add
movs
add
or
dec
sub
loopne
or
iret
push
push
sar
mov
sub
inc
call
clc
retf
dec
mov
mov
sbb
or
iret
mov
push
add
dec
or
add
sub
loopne
push
nop
ja
ret
sub
add
rol
and
ret
xchg
mov
les
sub
sbb
sbb
cmp
add
lock
fucom
add
jl
movs
icebp
stc
retf
jl
add
push
xchg
adc
xchg
test
cmp
sbb
push
fcmovbe
mov
nop
rol
mov
and
fild
fcmovnu
fcomp
icebp
add
rcr
push
or
mov
outs
xchg
mov
pusha
cmp
xor
push
pusha
xchg
call
xor
and
and
xor
imul
push
inc
pop
js
test
lock
push
sub
repz
lock
bound
dec
fdiv
adc
outs
cmp
mov
xor
loopne
pop
xlat
ds
cmps
or
(bad)
sbb
enter
mov
and
nop
mov
enter
cmp
push
das
lock
xor
cmps
xor
test
clc
test
adc
xor
repnz
pop
pop
cmps
xor
add
dec
xor
push
imul
ret
lahf
sub
lods
cmp
lahf
repnz
push
or
rol
shr
jl
les
inc
rol
sub
js
push
and
add
enter
shl
pop
nop
xor
data16
in
sbb
jmp
ret
(bad)
sbb
enter
sbb
imul
mov
arpl
clc
push
call
sbb
fistp
movs
xadd
and
xchg
or
iret
loop
repnz
cmps
nop
xchg
daa
nop
xchg
push
(bad)
cmp
ficomp
and
sbb
(bad)
add
pushf
aaa
push
sbb
cmp
jg
pop
shl
mov
mov
les
mov
gs
es
xchg
(bad)
ret
jb
adc
adc
xchg
cmp
dec
ds
push
and
adc
repnz
in
loopne
dec
cmp
cmps
nop
dec
loop
add
jo
cmp
dec
call
inc
push
sti
dec
ds
scas
fs
pusha
fdivr
mov
jl
sbb
enter
sub
addr16
clc
add
dec
xlat
sti
mov
push
imul
js
cmps
or
lahf
mov
xor
enter
adc
jl
call
pop
mov
cmp
dec
cmp
push
inc
cmps
in
test
adc
cmp
xchg
and
and
sbb
fcomp
and
fnstcw
jbe
inc
ret
add
dec
sbb
std
pop
xchg
sub
in
push
pop
pop
push
adc
jecxz
in
clc
in
push
(bad)
xor
ins
ret
enter
xchg
dec
lock
pop
xchg
cmp
pop
jmp
push
add
push
pop
push
pop
adc
dec
ds
pop
add
nop
sbb
sbb
push
pop
pop
sbb
sub
retf
add
inc
push
mov
xchg
mov
clc
in
push
sbb
mov
push
pop
aaa
stc
and
push
pop
sbb
sbb
and
in
add
xor
in
and
aaa
fst
fwait
fs
push
mov
mov
xchg
cmps
rol
and
sbb
call
rcr
ja
sub
cdq
and
push
movs
sub
dec
repz
and
jle
dec
(bad)
sub
push
add
in
inc
xchg
push
pop
loopne
pop
stos
nop
cmps
dec
daa
push
pop
or
in
push
pop
add
in
push
pop
dec
or
(bad)
call
daa
stc
pop
enter
inc
inc
call
dec
sti
mov
mov
jno
mov
xchg
xchg
xchg
dec
adc
ds
(bad)
scas
jno
inc
dec
xchg
or
sub
inc
lea
sub
mov
lock
sar
pop
lea
pop
push
sbb
mov
inc
repnz
jmp
test
in
sahf
call
iret
sbb
jne
in
rcl
dec
mov
sub
dec
add
fdivr
dec
dec
xchg
lea
pop
sub
call
jb
cmp
sbb
pop
sbb
xchg
adc
sbb
pop
sbb
add
and
pop
sbb
add
xchg
hlt
add
push
jns
mov
pop
in
mulps
test
sub
pop
cmp
jl
pusha
sbb
add
cmps
add
nop
mov
inc
pushaw
pop
movs
pusha
arpl
inc
daa
jns
push
pusha
pop
sbb
pop
in
dec
hlt
add
dec
test
pop
pop
mov
push
push
int3
adc
and
push
call
adc
pop
bound
inc
enter
pop
sbb
and
cmp
bound
dec
in
and
cmp
bound
arpl
cmp
repnz
pop
outs
arpl
repnz
arpl
or
add
pop
in
pusha
jecxz
xchg
and
jl
movs
call
in
or
and
sbb
sub
sbb
mov
loopne
push
push
and
pop
in
or
dec
push
nop
and
push
jb
cmp
daa
push
inc
push
dec
push
and
cmp
popa
xor
repnz
pop
jo
ror
push
pop
nop
ja
jns
add
pop
push
push
adc
sbb
pop
aas
in
xchg
(bad)
pop
rcl
push
xchg
sbb
pop
mov
test
add
test
add
scas
popf
pop
dec
pop
rol
enter
ret
ins
retf
jb
push
push
xchg
inc
ins
test
xchg
pop
push
dec
ins
push
leave
dec
pop
int3
ins
pop
adc
and
ins
pop
outs
push
adc
enter
outs
jb
in
in
mov
mov
and
inc
out
adc
adc
add
mov
cmp
mov
popa
inc
popa
mov
adc
add
pop
xchg
lods
stos
in
add
ja
jb
clc
mov
enter
pusha
bound
dec
ins
add
mov
sbb
scas
sub
ja
mov
in
jb
les
cwde
mov
mulps
test
or
and
jae
je
cmp
sbb
popf
dec
inc
or
rol
jne
ret
adc
and
cmp
dec
mov
les
dec
push
adc
popa
aam
jbe
add
cmps
pop
jbe
adc
popf
js
mov
data16
ja
sub
push
ja
nop
inc
push
add
popa
clc
int3
ja
nop
pop
in
sbb
shl
dec
ds
push
js
mov
nop
cmps
pop
js
jecxz
pop
in
inc
mov
pop
jmp
sbb
pusha
adc
and
push
ja
adc
inc
sbb
rcr
rol
pop
sbb
leavew
inc
cwde
das
ins
les
in
and
cli
push
lods
sbb
lock
xchg
das
or
lock
stos
mov
outs
mov
dec
push
push
ja
pushf
jg
fs
pop
sbb
mov
jb
nop
and
in
or
jg
xor
xchg
add
pushf
push
xor
sbb
add
in
xchg
or
add
and
mov
jns
or
jns
dec
push
jb
jb
jae
push
and
stc
or
add
sbb
mov
and
sbb
dec
add
test
or
pushf
pusha
and
sub
and
jb
in
and
test
cmp
test
xor
js
add
push
inc
repnz
dec
sbb
sbb
sbb
and
mov
idiv
cwde
inc
pop
shr
adc
adc
repz
daa
cmp
lahf
sahf
pushf
inc
push
fwait
mov
mov
pop
adc
push
add
mov
dec
inc
xor
cmp
mov
and
sbb
inc
push
pop
ret
nop
not
mov
jns
dec
push
jl
jl
jge
adc
lea
sub
inc
lea
out
mov
sbb
xchg
xchg
mov
daa
in
leave
stos
dec
mov
mov
sub
mov
mov
jb
in
mov
adc
mov
in
pop
sub
call
and
xor
daa
jns
sbb
adc
inc
push
pop
int3
sub
int3
or
xchg
pop
xchg
inc
ss
dec
fcom
push
and
pop
neg
mov
and
bound
aas
test
leave
xchg
adc
push
jmp
xchg
fist
xchg
xchg
add
enter
cmp
jns
ret
cmp
pop
cmp
or
inc
xchg
les
xchg
sub
pushf
in
cwde
test
pop
enter
cwde
cmc
inc
jb
in
cmc
inc
cmc
movs
mov
movs
clc
push
jns
xchg
lods
mov
cmp
lods
pop
(bad)
mov
dec
sahf
push
shl
xchg
push
adc
retf
add
pushf
pop
fdiv
and
jns
neg
call
popf
fs
or
out
pushf
shl
stos
inc
pop
scas
popf
add
or
push
sahf
pop
aas
inc
push
and
push
sahf
mov
pop
dec
pop
adc
aaa
fs
mov
cmps
imul
push
daa
(bad)
fsub
jns
test
mov
sub
jl
push
(bad)
(bad)
sar
imul
jo
add
pop
or
test
clc
aam
mov
cmp
cmp
mov
add
mov
and
push
mov
xchg
ins
cmp
mov
ins
jns
stc
nop
push
xchg
mov
sbb
ret
mov
pushf
mov
mov
push
repnz
add
push
mov
mov
xor
adc
(bad)
pop
dec
lea
add
test
jb
in
test
in
cmp
cmp
in
addr16
push
dec
push
xchg
push
(bad)
push
(bad)
mov
xchg
pushf
jmp
es
pop
xchg
cwde
xchg
xchg
jo
xchg
and
xlat
cmps
add
cwde
or
sbb
in
and
pushf
mov
stos
icebp
fsubr
pushf
adc
inc
push
cwde
clc
fild
xchg
xchg
adc
sbb
pop
sbb
stos
pop
aas
push
jb
sbb
cmp
stos
jns
and
or
ja
push
enter
inc
stos
push
nop
pushf
sub
fwait
cwde
add
dec
fwait
mov
cmp
adc
xor
in
stos
lods
sub
cmp
mov
scas
dec
dec
repnz
in
cmp
lods
jb
add
lods
fdivr
retf
adc
(bad)
stc
adc
adc
adc
and
je
je
mov
and
in
mov
test
xor
stos
nop
fs
enter
lock
cli
sub
test
pop
add
imul
dec
shl
push
and
sbb
mov
mov
(bad)
sbb
rol
mov
dec
pop
jb
test
xchg
add
push
and
xlat
cmp
and
dec
pop
inc
inc
ins
pop
ror
nop
mov
mov
inc
mov
hlt
inc
mov
add
test
mov
movs
nop
(bad)
mov
inc
pop
and
sbb
mov
add
and
inc
(bad)
and
nop
sbb
mov
and
test
(bad)
cli
adc
sub
repnz
sti
and
mov
add
inc
repnz
and
inc
cwde
add
mov
in
cdq
cmovs
inc
mov
mov
and
scas
adc
add
mov
daa
nop
mov
nop
cdq
adc
or
pop
js
enter
mov
and
pop
aas
and
cmp
mov
adc
mov
stos
in
cdq
dec
push
adc
sbb
cld
and
daa
mov
push
jb
nop
mov
or
enter
rol
push
sbb
and
push
enter
rcl
repnz
in
loopne
pop
shl
cmp
shl
cmps
shl
add
cld
push
cld
push
inc
dec
xchg
sbb
mov
mov
and
mov
mov
jno
inc
pop
mov
mov
push
inc
jb
not
hlt
in
cmovs
(bad)
nop
dec
nop
cmp
ins
mov
aaa
(bad)
in
jb
ffreep
mov
rep
lds
add
xor
add
(bad)
pop
aas
and
nop
xchg
sbb
in
(bad)
mov
push
add
test
mov
in
lock
sub
add
enter
test
retf
jns
adc
or
xchg
pushf
in
mov
adc
and
dec
pop
xchg
retf
sbb
hlt
push
and
daa
inc
push
adc
sub
fs
enter
stos
mov
mov
adc
mov
mov
adc
inc
mov
pushf
bound
xor
pop
xchg
cmp
and
mov
sbb
in
mov
sub
mov
(bad)
cld
adc
inc
push
mov
jb
cmp
sub
cmp
xchg
adc
inc
mov
sub
jb
push
add
pop
aas
jb
inc
mov
ret
sub
add
add
and
das
mov
dec
add
aas
push
ret
cmc
adc
ret
and
in
add
sbb
in
stc
and
pop
call
sbb
mov
rcr
add
add
call
stc
sub
mov
pop
adc
in
xchg
pop
sub
pop
add
pop
ins
pop
pop
adc
pop
inc
adc
pop
mov
cmp
out
and
or
sahf
lock
mov
pop
test
out
mov
es
add
jns
mov
mov
jne
push
and
out
mov
in
enter
pushf
or
inc
jb
cld
(bad)
cld
cwde
mov
lock
loop
mov
inc
repnz
cld
enter
xchg
in
and
or
and
adc
mov
int3
retf
pop
xchg
popf
sbb
pusha
stc
jns
add
fisubr
or
and
retf
fidivr
sbb
(bad)
or
int3
retf
pop
add
xchg
mov
shl
aas
cmp
loope
xchg
int
imul
leave
and
retf
in
and
jns
jb
jnp
int3
shl
in
jecxz
adc
dec
xlat
imul
add
sbb
leave
in
daa
call
inc
enter
lods
ret
sbb
fnsave
push
xchg
cmp
fdivp
inc
xor
adc
pop
das
adc
push
(bad)
or
pop
adc
daa
outs
inc
repnz
mov
jns
push
int
fmul
pop
inc
sub
sbb
jo
inc
ss
out
and
dec
jb
mov
inc
mov
ins
inc
push
inc
mov
rol
out
fiadd
das
jns
daa
iret
jo
inc
bound
and
add
ja
daa
nop
add
or
fwait
daa
in
jecxz
fsubr
jmp
inc
add
inc
pop
xor
cmp
inc
sbb
clc
shl
ror
inc
repnz
mov
sbb
push
fsub
jecxz
fimul
xchg
xlat
cmp
push
pop
and
clc
out
in
dec
test
cs
out
enter
lock
mov
shr
inc
dec
inc
mov
mov
call
sbb
call
inc
idiv
lds
jno
int
mov
or
lods
push
les
cmp
out
xor
dec
gs
add
jmp
lods
addr16
or
push
into
push
into
mov
daa
lods
jb
aam
jmp
lock
dec
nop
addr16
lock
jno
ret
mov
adc
out
adc
popa
ds
mov
jmp
hlt
push
into
test
and
stos
sub
hlt
pop
dec
aam
stc
sub
out
hlt
inc
or
or
xor
inc
sub
pop
lea
add
movs
add
inc
dec
xchg
movs
js
adc
fidivr
cwde
test
out
retf
dec
sub
inc
and
push
ficom
(bad)
fisub
xchg
cld
or
mov
push
call
and
shl
add
es
icebp
ins
sahf
pushf
inc
shr
loopne
mov
and
adc
push
push
imul
sbb
jmp
icebp
xchg
sbb
and
mov
sub
sub
cmp
and
or
add
inc
pop
test
sub
hlt
hlt
mov
xor
cmp
in
movs
outs
cmc
pop
nop
mov
add
mov
leave
add
jno
pop
lock
call
or
mov
push
cmps
adc
push
in
adc
dec
jle
push
jo
pusha
mov
aas
mov
mov
add
stos
add
push
push
mov
and
ins
xchg
addr16
jg
push
nop
inc
mov
xchg
pop
sbb
repnz
sbb
mov
test
(bad)
adc
ret
or
rcl
jno
and
stc
and
sbb
ins
loop
or
outs
add
repnz
cmp
add
jno
xchg
jl
cld
inc
sub
and
sub
pop
test
mov
xor
add
jp
les
inc
and
or
shl
test
test
and
pop
cmp
js
mov
or
adc
push
mov
ror
dec
pop
push
push
sbb
push
jno
ins
pop
pusha
jl
in
ror
or
pop
aaa
adc
and
jl
(bad)
sub
jmp
ins
or
ja
mov
push
sub
sbb
wrmsr
retf
mov
push
jle
push
adc
adc
bound
mov
or
adc
inc
and
inc
cld
sbb
nop
xchg
adc
lods
adc
fiadd
push
push
pop
cwde
adc
pop
inc
repnz
adc
and
xor
inc
test
sbb
xchg
inc
mov
les
mov
cs
bound
ss
pop
dec
pop
or
leave
add
or
ja
xchg
imul
sbb
xchg
daa
mov
into
das
hlt
mov
and
pop
mov
nop
push
jecxz
dec
adc
mov
fnstsw
ror
ficomp
adc
push
leave
aad
aas
out
xchg
sub
push
aaa
cmp
push
jo
sbb
add
mov
lods
sbb
out
clc
mov
fs
in
sbb
inc
aam
das
sbb
mov
cmps
pop
sbb
retf
jg
out
sbb
sbb
lock
enter
fadd
rcr
fs
xchg
fmul
leave
aam
(bad)
aaa
outs
shl
cmp
add
cs
scas
push
and
add
fld
cmps
or
shl
push
movd
mov
mov
add
add
popf
mov
push
sbb
sbb
adc
fld
cmp
add
sub
and
xchg
das
sbb
cwde
jns
sbb
shl
pop
add
test
arpl
and
sbb
push
repnz
jno
pop
leave
inc
cmp
push
xchg
ins
push
xchg
cmp
pop
xchg
ins
push
xchg
ins
push
popa
jo
jl
add
js
es
mov
mov
push
and
stos
adc
inc
add
push
adc
pop
leave
mov
adc
xor
xor
das
fiadd
or
pop
shl
adc
push
int3
sub
mov
in
xchg
leave
inc
hlt
aaa
test
inc
inc
jns
aam
jmp
pop
sbb
in
pop
dec
inc
xor
pop
cmp
xor
xchg
xchg
jns
(bad)
jmp
adc
fwait
xor
inc
add
push
xchg
xlat
sub
jno
rcl
jmp
nop
xchg
movs
and
or
hlt
jo
xor
xchg
in
fmul
mov
inc
xor
fwait
mov
ss
mov
mov
jb
fdiv
xchg
in
rcr
or
jae
and
push
retf
and
xchg
and
sub
and
pop
xchg
and
push
xor
adc
cmp
pop
sbb
and
add
idiv
pop
mov
and
fnop
sub
shl
push
dec
fcom
mov
adc
or
push
and
dec
sahf
xchg
dec
or
push
or
push
sahf
xchg
pop
in
jge
or
push
mov
jns
or
push
les
push
sub
loop
adc
add
xor
or
in
enter
dec
sub
push
and
sbb
shl
sbb
mov
sub
add
adc
and
cs
xchg
and
shl
add
retf
push
dec
xor
xor
jne
sub
or
leave
add
or
(bad)
xor
das
pop
cdq
xchg
pushf
mov
movs
das
or
pop
push
jl
xor
sahf
mov
pop
pushf
push
inc
sub
mov
xor
cmp
dec
cmp
sub
stos
or
mov
pop
pop
jae
or
xor
ins
mov
mov
or
add
push
aas
pusha
leave
add
mov
push
mov
sub
inc
push
xor
jne
adc
pop
dec
xor
test
xadd
push
pop
cld
push
nop
xchg
push
cwde
push
inc
mov
pop
mov
dec
rcl
daa
xor
dec
movq
push
push
xor
sub
pop
arpl
ss
xor
pop
das
jne
sti
sub
fistp
mov
repnz
leave
inc
mov
push
inc
pop
sbb
pop
sbb
pop
jo
add
push
ror
pop
ins
and
pop
js
ins
adc
xor
pop
cmps
xor
les
out
cmp
pop
out
ss
fadd
dec
ins
aaa
pop
jl
adc
faddp
push
xor
cmp
push
lds
sbb
call
sbb
pop
mov
sbb
add
pop
test
pop
and
in
adc
nop
add
pop
test
pop
sub
and
dec
xor
cmp
xor
fimul
or
inc
pop
in
xchg
ins
cmp
cmp
push
inc
pushf
pushf
mov
push
xchg
into
dec
dec
inc
sahf
adc
stos
clc
daa
daa
and
cmp
xchg
xchg
daa
pop
ds
stos
leave
leave
enter
aas
jnp
fs
leave
(bad)
and
in
xchg
fistp
inc
inc
sbb
jb
fwait
in
inc
bsf
(bad)
xor
pop
pushf
pop
leave
push
add
adc
or
fs
mov
push
push
mov
jg
sbb
pop
ror
cwde
nop
add
pop
(bad)
aam
test
mov
ins
loope
mov
adc
repnz
or
adc
sub
mov
sub
pop
test
mov
outs
and
xchg
xor
pop
stos
jbe
ja
cmps
in
sub
pushf
nop
(bad)
nop
pop
push
cmp
ins
adc
xchg
pop
and
push
call
lods
mov
or
pop
adc
push
mov
mov
leave
mov
movs
test
retf
iret
mov
test
xchg
inc
jno
in
mov
inc
pop
and
xchg
pop
add
nop
pop
and
ins
or
cdq
push
inc
and
inc
test
push
ss
push
daa
add
or
js
nop
cmp
jns
inc
pop
test
push
inc
pop
nop
test
adc
jle
xchg
push
inc
pop
les
pusha
mov
xchg
inc
pop
or
cmp
retf
dec
mov
xchg
mov
sub
mov
xchg
inc
sbb
mov
xchg
adc
xchg
test
sub
xor
pop
fadd
jge
xchg
cmp
gs
mov
xchg
stos
and
mov
xchg
pop
sub
dec
lods
in
sub
xor
enter
push
inc
pop
int3
mov
scas
mov
inc
mov
aad
in
jle
pop
repnz
jle
mov
mov
sbb
rol
add
dec
mov
adc
or
xor
jl
cld
push
js
pop
add
pop
jl
cmp
add
pop
dec
xor
push
xchg
pushf
cmp
adc
jns
int
inc
ds
pop
shl
scas
prefetcht0
xchg
add
add
pop
ss
and
ins
aam
jne
mov
pop
fistp
cmps
rol
cmp
or
es
xchg
outs
das
test
xchg
and
mov
shr
scas
xchg
aaa
pop
cmp
inc
fild
push
add
and
jg
jb
dec
lock
add
cmp
push
repnz
xor
ins
popa
push
xor
add
pop
pop
pop
adc
(bad)
mov
adc
leave
inc
pop
les
out
nop
inc
in
push
or
push
dec
and
jg
popa
dec
fbstp
dec
aad
ins
mov
mov
in
jmp
inc
lock
or
and
cmp
push
and
lock
sub
int3
dec
pop
pop
pop
pop
repnz
sub
dec
mov
pop
pop
pop
int3
dec
or
pcmpeqd
xor
inc
sahf
pushf
retf
cmp
and
dec
cmps
repnz
dec
jb
daa
daa
daa
mov
xchg
xchg
xchg
test
leave
enter
xchg
in
fs
push
xor
(bad)
xchg
mov
push
fistp
nop
mov
mov
pop
dec
leave
lods
ds
mov
push
xchg
push
jb
adc
push
repnz
shl
pop
leave
add
aas
ins
mov
inc
sbb
mov
mov
adc
loop
je
ins
push
xchg
into
push
aas
mov
and
xchg
jmp
jno
push
jb
mov
pushf
mov
mov
cmp
ins
adc
and
das
aas
push
mov
push
mov
fwait
or
and
ror
mov
pop
mov
mov
pop
bnd
dec
and
jno
inc
xchg
push
aas
xor
inc
push
and
cmp
pop
dec
or
inc
push
dec
(bad)
ins
cdq
dec
sahf
imul
xchg
popf
adc
cmp
(bad)
outs
push
mov
pusha
repnz
pop
(bad)
fmul
dec
and
hlt
(bad)
cmp
xchg
pushf
nop
push
add
push
pop
out
nop
dec
push
sub
mov
push
nop
leave
sub
nop
stos
adc
push
dec
or
or
out
nop
cmp
nop
ror
inc
push
movs
aad
(bad)
out
add
jns
nop
push
push
out
xchg
push
imul
xchg
xchg
or
aam
sbb
sbb
dec
out
push
mov
push
pop
arpl
mov
fsubr
out
sbb
test
dec
mov
inc
adc
pop
inc
pop
or
add
das
test
mov
or
and
pop
add
mov
mov
dec
push
cwde
inc
sub
xor
push
cmp
add
test
pop
ins
pop
jb
in
dec
push
aas
xchg
bound
(bad)
div
or
enter
outs
sbb
out
dec
lods
rol
jp
sub
mov
add
inc
daa
sahf
push
or
cdq
push
outs
add
ss
in
jp
add
test
inc
ret
leave
retf
fst
push
aas
das
cmps
in
sub
fwait
cmp
das
in
test
mov
add
add
inc
add
mov
repnz
inc
ret
mov
pop
inc
fwait
pop
lock
loop
sub
mov
push
lods
cld
movs
mov
retf
mov
pop
pop
lahf
or
aad
sub
sbb
jmp
div
cld
push
xor
lahf
xor
dec
leave
movs
push
dec
movs
xor
xchg
pop
movs
push
aam
leave
in
jb
pop
popa
setp
pop
cs
das
jg
sti
pop
cmp
pop
lods
dec
inc
sahf
fmul
in
pop
pop
mov
jmp
pop
xchg
loopne
pop
popa
leave
enter
loope
pop
fs
leave
lods
hlt
sbb
in
in
bound
xor
inc
popa
jl
(bad)
jmp
aas
inc
bound
int
daa
das
das
jg
jmp
arpl
xor
movs
push
inc
xchg
fcom
dec
dec
enter
mov
test
movs
push
cmp
jno
loopne
mov
xchg
and
arpl
ins
xchg
loopne
test
test
sbb
lock
ins
push
mov
add
outs
fiadd
mov
fcomp
push
adc
sub
sbb
sbb
test
or
add
sub
xchg
mov
fisttp
cmp
mov
fwait
and
movs
push
fmul
mov
aam
or
push
frstor
movs
push
(bad)
iret
fadd
add
and
and
arpl
in
repnz
or
jb
cwde
ins
cdq
mov
xchg
push
fadd
fs
push
or
in
enter
xor
xchg
push
and
pop
pop
sbb
push
jbe
les
cdq
xchg
adc
dec
test
jl
mov
stos
pop
cmp
lods
cdq
cs
movs
inc
pop
leave
int3
cdq
imul
sub
rcl
fs
fcomp
call
xor
test
rcl
xchg
adc
jge
call
test
fst
jns
rcr
xchg
dec
popa
and
fwait
and
mov
mov
mov
pop
imul
in
push
push
fsubr
stos
sti
ffree
xchg
and
xchg
or
and
cmp
mov
sbb
fs
pop
or
in
xacquire
add
xchg
and
push
aam
test
mov
push
dec
push
mov
and
mov
inc
daa
xchg
push
aam
aas
xchg
ins
mov
gs
pop
out
int
call
gs
adc
pusha
ss
and
ins
or
adc
movs
xchg
ins
pusha
or
inc
mov
and
sahf
mov
addr16
mov
adc
outs
cmps
jns
imul
sbb
xchg
push
push
push
cmp
leave
retf
stos
(bad)
push
cmp
cmps
or
sub
lock
adc
test
sbb
repnz
imul
cmps
sub
jmp
jne
push
push
or
jno
pop
(bad)
fistp
push
cmps
mov
sahf
cmps
in
push
inc
fs
gs
adc
fisttp
jg
and
gs
ins
dec
cmp
stos
in
(bad)
frstpm(287
in
or
dec
ins
mov
bswap
leave
enter
outs
outs
mov
fs
cld
dec
outs
cwde
mov
icebp
es
cmps
cmp
jns
repnz
jno
rcr
dec
jp
inc
sahf
pushf
pushf
(bad)
jae
and
dec
mov
test
loopne
jne
mov
jne
jne
jne
cmps
push
adc
sub
and
mov
jns
lock
gs
jno
add
js
sub
and
dec
push
xchg
cmp
sahf
jo
cmps
inc
sbb
mov
adc
cmp
cwde
outs
ins
add
test
ja
cmps
cs
adc
mov
test
xchg
ins
push
lahf
xchg
in
loop
sbb
and
xchg
cmc
nop
sub
das
xor
popf
cmp
test
push
and
mov
int3
inc
(bad)
and
and
push
stos
mov
and
arpl
dec
leave
mov
cmp
mov
cmp
les
inc
add
push
inc
xor
xchg
push
aas
sbb
fmul
xchg
ins
movs
mov
lock
mov
lock
mov
popf
dec
jle
in
sbb
cmp
js
movs
lock
xchg
in
int3
movs
cmp
xchg
in
aam
cld
movs
stos
push
mov
mov
movs
dec
jbe
shr
inc
movs
fldcw
jo
popf
sbb
js
in
mov
pushf
movs
test
test
inc
(bad)
dec
lods
sub
jns
movs
aam
or
jns
test
stos
push
adc
xor
adc
ins
cmps
mov
sub
cwde
fstp
lock
ficomp
leave
and
les
sbb
and
push
pushf
mov
or
jns
pop
jmp
jno
xchg
add
xchg
jbe
or
inc
repz
rcr
in
call
dec
and
gs
stos
and
scas
sub
sbb
in
outs
dec
jae
inc
in
test
retf
xor
pop
xlat
dec
enter
call
pop
test
fisubr
jae
js
aas
hlt
inc
dec
push
lahf
cld
js
jns
pmaddwd
lahf
inc
jns
xchg
cld
adc
aam
sub
das
scas
xchg
xchg
stos
jns
push
test
or
pop
fcom
aam
sub
and
adc
aas
pop
daa
retf
daa
fs
push
test
mov
pop
mov
push
int3
push
sub
out
inc
jnp
inc
pop
ds
xchg
jl
jl
sahf
push
xchg
fisubr
jns
cli
push
movs
stos
pop
sbb
ja
push
leave
sub
sbb
enter
ja
jae
mov
jl
jl
jge
jge
bnd
xchg
jge
jge
push
inc
cs
jb
xor
fisub
jg
cmp
sbb
sub
pushf
pushf
popa
xchg
loop
or
in
and
daa
and
mov
daa
or
xchg
xchg
ret
std
and
dec
pop
jmp
pop
dec
test
das
das
das
add
fs
push
inc
jnp
test
sub
jns
sub
jno
or
jle
pop
stos
xchg
pushf
nop
push
sub
dec
push
fsubr
mov
in
(bad)
les
pusha
stos
ins
push
xor
pop
xchg
fbstp
or
ja
ja
jmp
nop
(bad)
nop
push
sub
ins
cmp
mov
add
push
mov
cmp
fwait
cmp
mov
mov
mov
or
pop
bnd
aam
and
lock
sub
push
dec
jno
and
mov
mov
sub
cmp
pop
sbb
je
lds
loope
popf
add
scas
sub
xchg
scas
sub
sbb
xchg
and
movs
inc
retf
inc
nop
inc
mov
xchg
scas
sub
in
scas
cmp
mov
pop
xchg
mov
dec
jbe
xchg
imul
or
mov
mov
or
pushf
nop
push
sub
mov
shl
mov
pop
add
test
jns
imul
mov
ins
and
dec
sbb
dec
jbe
inc
jnp
mov
mov
(bad)
mov
adc
xor
xchg
pop
sbb
test
imul
popw
(bad)
xlat
or
fiadd
cs
add
xchg
aas
test
cmps
pop
add
cmps
dec
push
and
mov
jae
cs
mov
or
xor
mov
mov
push
shl
shr
ficom
inc
add
loopne
push
mov
jecxz
inc
pop
push
mov
mov
(bad)
dec
mov
sub
adc
leave
mov
pop
sub
sbb
scas
movs
mov
mov
jecxz
iret
mul
xlat
das
in
push
popf
(bad)
stos
cmp
loopne
idiv
dec
push
sbb
je
push
push
dec
leave
test
pushf
mov
enter
inc
mov
ins
add
addr16
sbb
pop
sar
mov
mov
dec
sti
push
out
into
push
sub
adc
adc
aas
in
push
fild
xchg
in
xor
push
xor
xor
dec
pop
enter
mov
jns
mov
mov
mov
repnz
pop
pop
leave
in
repnz
stos
in
in
out
xchg
jne
jb
xor
adc
sbb
jmp
xchg
imul
pushf
mov
xchg
dec
xchg
les
sahf
pushf
repz
dec
dec
stos
clc
xor
daa
jge
std
aas
mov
iret
adc
adc
mov
adc
mov
cwde
pop
jb
dec
mov
aam
test
jno
xchg
in
sbb
adc
mov
cwde
xchg
pop
and
mov
pusha
leave
sbb
mov
repnz
push
mov
mov
push
sbb
or
dec
mov
cmp
mov
sub
xchg
push
cmp
dec
xchg
and
das
mov
mov
and
aas
mov
push
mov
cwde
mov
inc
or
call
ins
mov
aas
mov
iret
adc
jno
and
and
cwde
and
add
cwde
adc
jb
mov
cdq
das
jmp
or
adc
and
dec
cmps
lock
and
adc
cwde
dec
mov
push
repnz
add
cwde
mov
pop
push
inc
push
push
dec
jbe
mov
push
inc
shr
xor
dec
mov
sbb
js
or
push
cmp
inc
jb
mov
push
adc
test
inc
dec
jno
imul
xchg
dec
imul
aad
je
mov
jl
sbb
adc
push
pushf
inc
bound
mov
in
mov
and
mov
jns
pop
outs
or
adc
int3
sub
loopne
js
ror
sub
or
nop
inc
leave
pop
inc
mov
add
mov
xor
dec
cmp
sub
shr
pop
and
and
inc
mov
lock
pop
test
sub
mov
and
in
lea
stos
inc
lods
dec
dec
fwait
dec
inc
cmp
pop
es
add
push
iret
adc
(bad)
stos
test
and
les
retf
stos
in
test
fwait
in
fwait
shl
icebp
mov
les
pushf
pop
test
mov
mov
xchg
pop
cmps
pop
shr
mov
in
mov
hlt
pop
jge
int
dec
add
pop
pushf
push
push
jns
sub
iret
sahf
pop
fistp
les
xor
in
mov
das
scas
push
clc
push
cmp
enter
lea
add
pop
in
cdq
pusha
xchg
jmp
sahf
adc
add
das
jg
stos
lahf
jmp
add
leave
leave
enter
call
mov
jb
repnz
cmp
jns
movs
pop
mov
cmp
adc
pushf
pushf
movs
icebp
sub
dec
jbe
idiv
cmps
jns
stc
dec
lahf
jl
scas
cmps
(bad)
adc
and
pop
test
dec
dec
leave
fdivr
jp
pop
mov
test
test
repnz
mov
sub
inc
xchg
pushf
mov
mov
ins
push
dec
sbb
outs
cmp
pop
ja
push
jb
ror
mov
jb
js
sbb
push
dec
xchg
push
push
add
push
mov
xchg
dec
sbb
fwait
and
mov
gs
cwde
ror
and
or
call
dec
mov
mov
dec
int3
rcl
and
xchg
mov
pop
test
pop
enter
pop
test
pop
enter
ins
sahf
fimul
cdq
sbb
dec
xchg
popf
and
nop
popf
pop
je
pop
test
sbb
adc
sbb
dec
mov
xchg
les
ret
repnz
push
imul
stos
pop
xchg
adc
ret
sbb
dec
lock
ret
leave
sub
sub
xor
fs
add
push
imul
ret
xchg
adc
dec
pop
test
ret
adc
rcl
jge
inc
cmp
mov
(bad)
icebp
loopne
dec
stos
and
icebp
sbb
xchg
scas
sub
(bad)
and
daa
push
leave
sub
rcl
fcomp
jp
pop
test
cmp
mov
cmp
mov
or
push
pop
or
jo
xchg
xchg
add
iret
test
test
xacquire
mov
mov
call
xchg
adc
rcr
xor
push
mov
cwde
add
pop
push
add
inc
stos
dec
stos
movs
rcr
test
inc
repnz
bound
adc
pop
mov
and
mov
push
sub
push
das
inc
dec
sbb
push
lahf
cmp
pop
and
pop
mov
mov
mov
cdq
stos
into
stos
sub
and
pop
gs
and
cmp
ret
les
into
ins
add
jno
inc
jo
pop
mov
or
pop
mov
inc
dec
or
fcom
sub
fsubrp
push
inc
mov
mov
ds
fistp
mov
loop
lds
in
push
(bad)
cld
(bad)
dec
pop
pop
xchg
(bad)
push
test
inc
jb
push
push
test
in
adc
retf
retf
stc
scas
xor
mov
scas
adc
cmp
cmp
dec
inc
sahf
pushf
rcr
mov
js
dec
dec
dec
lods
stc
cs
xchg
daa
daa
daa
(bad)
cld
inc
mov
xchg
xchg
xchg
mov
leave
enter
(bad)
(bad)
in
in
mov
pop
xchg
xchg
scas
xor
fistp
mov
gs
cmp
dec
outs
pop
les
and
rcr
lds
or
inc
mov
aam
leave
dec
mov
add
jno
add
lahf
shl
mov
sub
push
repnz
test
mov
adc
cmp
pop
leave
mov
test
push
ror
outs
stos
sub
jne
pop
adc
in
enter
inc
mov
mov
pop
hlt
enter
sub
movs
inc
stos
and
push
rcl
pop
rcl
inc
mov
pushf
inc
or
push
jmp
retf
nop
push
pop
jne
ror
mov
ror
xchg
push
bnd
inc
mov
pop
and
nop
retf
inc
shl
cdq
jo
push
imul
push
sub
popf
shl
retf
dec
dec
test
mov
adc
int3
pop
movs
aad
xchg
rcr
fs
inc
ins
inc
sar
int3
and
mov
mov
cmp
je
lods
push
mov
int3
push
sbb
push
rcl
dec
push
shl
int3
or
sar
int3
inc
mov
or
jge
dec
stos
or
enter
int
and
int
and
add
stos
rcr
int
dec
(bad)
mov
sbb
rcr
dec
shl
pushf
clc
stos
lods
xor
cmps
mov
pushf
stos
mov
mov
inc
adc
pop
pop
pop
and
add
mov
add
xchg
pop
fisttp
and
lds
xor
lds
nop
cmp
push
test
hlt
sub
ficom
stos
push
retf
dec
xor
sar
dec
shr
sub
aaa
sub
imul
dec
and
push
mov
mov
pop
xor
cmp
lea
jo
push
enter
jne
leave
dec
add
in
out
push
cmp
xor
mov
xchg
das
cmc
add
mov
xchg
cld
cmp
add
mov
scas
outs
mov
in
sub
stos
pop
fsubr
in
cmps
int3
mov
ds
ins
and
mov
or
mov
loopne
cmps
pop
mov
cmps
dec
fsub
movs
push
psubusb
fs
sub
mov
cmp
cmps
cmp
cli
mov
test
iret
push
xlat
push
push
mov
sub
xchg
inc
mov
scas
pop
addr16
enter
mov
daa
mov
shl
subps
xlat
rcr
daa
daa
mov
ret
cmps
jecxz
xchg
xchg
xchg
xchg
ret
arpl
enter
mov
in
lds
sti
jb
xor
cmp
test
cld
cmp
sbb
(bad)
push
jbe
pushf
mov
jecxz
enter
mov
aas
xor
xchg
jp
leave
(bad)
in
leave
sbb
or
ror
pop
retf
test
mov
in
iret
mov
cmp
jno
mov
inc
pop
leave
add
mov
jb
rol
shl
or
and
push
dec
shl
dec
ins
ins
push
push
mov
mov
ins
mov
push
cmps
dec
push
je
mov
or
xor
mov
test
push
push
mov
lds
xchg
and
das
push
sub
fwait
push
stos
push
inc
repnz
lods
shl
sbb
mov
pop
aam
mov
repnz
push
in
jno
mov
outs
adc
cmp
aad
pushf
or
retf
out
and
push
inc
outs
leave
jmp
ss
imul
inc
push
and
pushf
aad
retf
and
test
mov
pushf
mov
popf
dec
repnz
aad
dec
lods
ficomp
and
dec
jb
push
mov
dec
jbe
mov
stos
pusha
(bad)
fldcw
test
cmp
movs
(bad)
push
mov
and
or
stos
hlt
(bad)
mov
jb
xlat
jge
inc
cmps
push
adc
test
inc
dec
jno
stos
nop
xlat
test
dec
imul
aad
rcl
mov
jl
sbb
(bad)
mov
adc
mov
pushf
inc
bound
mov
in
into
cmp
outs
xor
adc
outs
add
ret
aaa
inc
inc
mov
jecxz
xchg
add
jmp
mov
inc
retf
imul
test
ja
mov
pop
add
pop
xchg
pop
inc
mov
mov
ror
push
sub
dec
xchg
ret
or
lahf
pop
leave
add
add
xor
or
iret
inc
jne
je
cwde
(bad)
sub
or
out
mov
cs
push
cmps
sub
mov
fiadd
mov
fild
cmc
push
mov
(bad)
jb
aad
loop
or
and
in
into
pop
into
das
rcpps
xchg
imul
test
or
and
sbb
mov
add
pop
daa
mov
inc
sub
je
das
pusha
dec
out
into
pop
je
adc
iret
ja
mov
adc
inc
shl
or
inc
pop
push
mov
mov
push
repnz
push
aam
dec
leave
retf
sub
int3
retf
xor
mov
dec
int3
retf
xor
jbe
sbb
xchg
pmaddwd
mov
pop
daa
shl
outs
xchg
xchg
shl
ror
daa
daa
daa
mov
pop
aam
xchg
xchg
xchg
gs
or
in
leave
leave
leave
inc
(bad)
ret
jg
daa
daa
mov
cmps
out
xlat
xchg
xchg
xchg
xchg
xchg
mov
enter
call
pop
fst
xchg
pmaddwd
sti
and
test
(bad)
jae
push
mov
shl
xchg
pushf
sub
or
xor
dec
cmps
ficom
nop
push
jb
ror
push
xchg
pushf
aam
or
(bad)
pusha
and
sbb
call
xchg
sub
push
xor
mov
movs
adc
mov
ja
jb
dec
pop
rol
fmul
and
in
add
aam
xchg
into
inc
pop
xchg
push
rcl
pop
lock
and
das
sar
fwait
das
lods
mov
inc
push
leave
clc
fisttp
sbb
je
and
call
xchg
cmp
(bad)
aad
enter
fbstp
jns
movs
shl
sbb
jns
fstp
out
and
push
inc
jo
dec
xchg
shl
sub
inc
rol
mov
or
cmps
inc
push
leave
clc
fisttp
add
nop
sub
es
dec
mov
jne
jle
dec
loopne
cmp
pop
pop
rcr
xchg
in
movs
loopne
dec
mov
aam
stos
push
mov
mov
clc
loopne
jbe
shr
sbb
fldenv
dec
loope
sbb
shr
test
loope
jbe
test
inc
(bad)
lods
sub
ror
loope
sub
and
test
stos
dec
adc
xor
adc
inc
loop
imul
adc
pop
mov
rol
mov
mov
repnz
stos
retf
xor
pop
pop
push
mov
add
ret
jns
stos
les
lods
pop
pop
fwait
sbb
dec
mov
mov
pop
cmp
stos
scas
or
and
fcomp
hlt
fsub
cmp
shl
fmul
imul
jne
inc
pop
jmp
add
dec
pop
dec
push
test
das
xor
push
and
inc
mov
or
stos
adc
and
cmp
add
adc
push
into
gs
push
and
push
dec
push
dec
add
xlat
(bad)
pop
ins
(bad)
sbb
not
sub
inc
push
jmp
mov
fild
fild
scas
xchg
xchg
cld
mov
out
test
dec
loopne
or
das
and
pop
cmps
in
sub
out
lods
loopne
das
in
test
add
add
dec
ins
ins
add
and
leave
pop
adc
loope
adc
out
nop
push
pushf
lahf
mov
xor
push
cmp
pop
add
in
fwait
int
cmps
jecxz
lock
add
cmp
cmps
in
adc
(bad)
xor
or
and
fsub
dec
sub
(bad)
add
cdq
(bad)
js
lahf
lahf
in
dec
loop
(bad)
pop
in
nop
jb
lds
out
mov
cmp
inc
sahf
pushf
pushf
test
dec
dec
dec
test
push
jmp
daa
scas
fimul
xchg
xor
(bad)
leave
enter
jae
test
aas
pop
in
setge
popf
mov
in
cld
in
cmp
adc
ret
out
sbb
dec
dec
enter
xchg
in
dec
pop
jb
in
mov
sbb
aam
pop
shr
lock
daa
in
test
cmp
enter
je
call
pop
test
push
into
cld
out
cdq
fmul
push
push
mov
loop
adc
outs
push
sbb
jmp
aam
mov
out
sub
inc
dec
and
or
add
push
lods
jbe
jmp
adc
xchg
mov
xchg
in
mov
jb
jmp
jo
fiadd
jle
aad
iret
out
hlt
jmp
jno
dec
dec
leave
mov
test
or
cmp
jmp
cmp
push
into
cdq
dec
cmps
out
and
out
nop
jmp
add
dec
jle
push
into
sbb
test
leave
mov
in
push
cmps
inc
xor
popf
jne
nop
sub
out
add
pop
mov
in
test
in
add
xchg
sub
in
stos
push
ins
and
imul
cmps
out
mov
popf
or
call
test
inc
dec
dec
enter
in
jge
inc
push
adc
call
sub
cmp
rol
in
xchg
cmp
sub
mov
xchg
in
dec
(bad)
dec
push
frstor
movs
not
mov
out
es
leave
push
into
enter
jp
add
pop
jmp
fistp
call
push
inc
aas
sub
dec
or
sbb
jecxz
add
add
xchg
mov
adc
out
repnz
sub
pop
mov
xchg
xor
or
and
arpl
retf
out
into
lods
lods
or
or
xlat
xor
adc
daa
xchg
sub
sbb
mov
addr16
(bad)
lock
and
out
std
lock
enter
push
int
clc
cvttps2pi
sbb
pop
xor
pop
mov
clc
and
sub
mov
stc
ins
add
inc
mov
das
mov
pop
and
pop
ficom
push
add
pop
mov
hlt
rcr
loope
xchg
xor
xor
push
xor
xchg
mov
out
and
jns
xchg
loop
mov
and
xchg
pop
enter
xchg
lods
stc
push
dec
outs
(bad)
and
pop
dec
sahf
ja
xchg
(bad)
push
inc
stc
xor
daa
daa
daa
and
in
aaa
xchg
xchg
xchg
xchg
test
popa
lods
loop
daa
mov
sub
push
cli
xchg
xchg
xchg
xchg
push
xchg
enter
ins
mov
hlt
sbb
aas
jbe
pmaddwd
mov
std
ja
xchg
xchg
xchg
std
movs
std
in
sub
xor
jb
cmps
sub
lock
add
xchg
(bad)
and
icebp
jno
or
(bad)
clc
fild
icebp
sub
repnz
repnz
dec
pop
sub
and
repnz
adc
add
sub
add
push
adc
repz
ins
or
push
adc
add
adc
fisubr
fwait
adc
or
jb
pop
xor
inc
xchg
out
(bad)
xchg
cmps
or
dec
add
push
test
adc
pop
leave
sub
cmc
sub
enter
nop
cmc
sub
aam
mov
nop
cmc
and
cdq
scas
add
push
inc
xor
aam
dec
ss
push
and
pusha
es
cs
push
sub
mul
adc
add
test
stos
ss
or
or
xor
(bad)
aad
leave
test
cmp
leave
add
and
and
xor
sbb
es
xchg
or
mov
mov
or
push
xor
pop
xor
lods
adc
push
inc
scas
sub
inc
or
and
mov
repnz
clc
nop
adc
sbb
ficomp
and
clc
adc
inc
xor
repz
adc
out
cmp
sub
sbb
xor
add
pop
cmc
sbb
sub
retf
(bad)
(bad)
xlat
or
and
call
xor
dec
mov
cmp
cld
rol
(bad)
loopne
inc
cmp
gs
pop
fwait
inc
add
adc
adc
inc
retf
push
aad
inc
loopne
jo
sti
nop
(bad)
out
push
add
add
call
mov
inc
mov
out
push
stc
enter
cmovb
pop
xchg
xchg
sub
xchg
xchg
jo
xchg
mov
cmp
in
cmp
out
cmp
mov
add
pop
outs
leave
mov
push
add
and
xchg
inc
je
stc
or
add
pop
ins
arpl
cdq
xchg
les
jmp
mov
mov
cmp
scas
jge
repnz
add
cmp
push
mov
xchg
daa
movs
add
push
push
pop
jmp
or
nop
push
test
pop
pop
popf
repnz
add
sub
loopne
xor
sbb
imul
add
push
shl
aas
int3
add
push
idiv
and
add
fadd
push
or
add
in
xor
and
stos
fild
and
pop
fwait
mov
addr16
push
dec
(bad)
call
adc
ja
leave
rol
fnstsw
jns
call
mov
ins
je
push
clc
seto
pop
and
xchg
pop
les
test
or
jge
lods
sti
or
pop
sub
mov
sti
test
push
pop
push
daa
jns
cmps
test
add
xchg
and
adc
inc
fist
repz
or
add
inc
jb
lock
jnp
test
or
mul
cmps
sbb
push
mov
sub
or
or
cmp
stos
in
sahf
cld
adc
push
inc
or
inc
pop
test
das
mov
in
or
xor
adc
ja
and
test
pushf
or
mov
ret
sub
jg
or
ficom
and
cdq
cmp
xor
imul
and
cli
dec
cld
or
sub
and
adc
cmp
(bad)
or
sub
add
or
mov
adc
nop
das
cmovp
push
gs
xchg
push
or
sub
and
cmp
mov
sub
dec
pop
leave
mov
pop
xor
dec
pop
and
sub
out
or
push
or
ja
mov
inc
loopne
in
ss
adc
fisttp
inc
cmp
adc
aaa
in
cmp
or
adc
sbb
or
aaa
sub
mov
mov
scas
mov
cmp
add
adc
cmp
sahf
rcl
das
and
or
nop
sub
mov
(bad)
pusha
aas
pop
jge
inc
aam
(bad)
inc
add
adc
xor
std
pop
adc
adc
sub
cmc
adc
sbb
in
ja
fidivr
push
sub
add
sbb
es
aad
adc
mov
sbb
aam
mov
fbstp
js
pop
cmp
mov
and
push
add
test
jl
inc
icebp
push
sti
push
add
xchg
pop
inc
pop
adc
loope
and
pushf
push
and
mov
adc
js
repnz
adc
add
dec
xchg
xor
dec
pop
mov
int3
(bad)
and
jae
repnz
pop
in
(bad)
and
cmps
pop
aaa
xchg
adc
pushf
adc
movs
adc
add
pop
sbb
test
cmp
xlat
and
int
clc
adc
stos
mov
repnz
pushf
loopne
mov
push
xlat
mov
in
pop
xchg
hlt
xchg
push
cwde
es
pop
cmp
fs
sub
mov
in
js
sub
inc
jno
adc
test
mov
jno
enter
in
nop
xor
clc
mov
push
dec
xor
lahf
neg
les
in
push
ja
pop
dec
sbb
push
adc
ja
jns
repnz
sbb
stos
pop
leave
je
leave
xor
imul
push
pop
imul
lds
(bad)
iret
add
mov
mov
cld
push
sbb
das
dec
stc
sbb
sub
dec
push
or
pop
push
mov
pop
jnp
pop
mov
pop
push
popa
push
sar
jl
ret
shl
je
adc
add
push
inc
xchg
jo
mov
loopne
ja
popa
or
xor
jmp
sbb
sub
mov
stos
xor
sbb
sbb
or
sub
loope
inc
pop
mov
cmp
mov
push
mov
repnz
sbb
push
adc
leave
xchg
fadd
nop
add
xor
outs
leave
rol
addr16
mov
push
push
jb
sub
pop
repnz
push
push
dec
nop
inc
or
ss
and
xor
adc
stos
movs
ss
dec
sbb
ror
mov
push
jne
add
jl
pop
dec
sbb
cmps
ret
push
push
and
inc
sahf
test
and
out
sub
jmp
inc
pop
ja
mov
inc
mov
add
pop
std
mov
pop
inc
test
and
add
xor
add
mov
pop
push
and
and
and
mov
push
cmp
add
push
jl
and
sub
mov
icebp
xchg
and
xor
out
sti
call
jg
and
sbb
nop
sbb
pop
clc
mov
push
test
iret
add
pop
nop
and
mov
adc
ds
push
and
popa
ror
scas
in
mov
inc
lock
and
add
inc
jo
and
and
inc
sbb
jns
arpl
cmp
es
outs
leave
adc
das
cmp
repnz
ror
jo
pop
add
dec
and
jb
repz
adc
mov
es
clc
in
mov
xchg
es
push
test
push
or
push
ja
cmp
daa
daa
pushf
mov
sub
push
pop
fwait
pusha
inc
sub
pop
pop
adc
and
das
or
mov
xor
mov
sub
lahf
test
sub
mov
push
inc
sub
sub
mov
push
push
ins
sub
jae
cmps
and
mov
sbb
je
dec
mov
mov
inc
pop
pop
test
movs
add
cld
sub
cmp
aam
add
or
jns
jo
repz
add
ins
sub
cmp
push
cwde
sub
pop
mov
cmovs
dec
pop
pop
sub
inc
sub
mov
sub
sub
push
jbe
inc
adc
jl
add
pop
leave
dec
movs
push
movs
push
repnz
push
enter
push
clc
sub
xchg
inc
movs
push
cmp
inc
loopne
jns
sub
fs
sbb
mov
add
xchg
test
or
inc
stos
inc
push
adc
imul
or
sbb
add
cld
add
push
jb
push
mov
ret
stos
inc
mov
pusha
add
sbb
jecxz
or
out
cmp
cmp
xor
pop
repz
pop
push
imul
aaa
je
enter
mul
fwait
xor
sub
or
xor
lods
in
jl
popa
(bad)
pusha
inc
jb
xchg
fwait
daa
loop
add
pop
cld
xor
push
add
dec
les
clc
mov
pop
xchg
push
popf
jge
sbb
xor
xor
daa
lahf
xor
(bad)
xor
xchg
mov
cmp
push
xor
pop
push
lahf
xor
xor
xor
xor
push
sbb
xchg
mov
push
dec
gs
mov
push
dec
gs
jns
scas
clc
xor
pusha
xor
xor
xchg
ins
ins
cdq
sub
mov
mov
call
pop
push
icebp
xlat
mov
xor
pop
or
jns
push
mov
loopne
(bad)
sub
push
mov
add
inc
inc
xor
leave
xchg
pushf
lock
fadd
sbb
jg
mov
xor
push
cmp
ss
xor
inc
jb
neg
int
pushf
loopne
mov
ss
in
ss
inc
jl
xor
js
(bad)
ss
xlat
cld
pop
or
mov
movs
aaa
out
stos
aaa
cmp
das
dec
dec
addr16
sbb
shl
bound
ret
push
push
mov
mov
out
add
push
or
adc
cmc
cmp
and
test
xchg
xchg
xchg
xchg
(bad)
out
les
mov
into
cmp
sub
(bad)
inc
test
ins
mov
das
fld
ja
das
jns
xor
push
leave
sub
ja
cmp
dec
mov
or
sbb
les
or
and
aaa
add
inc
jb
clc
in
cmp
push
lods
xchg
cmp
jns
dec
repnz
push
enter
adc
cmp
bound
sub
push
sub
lods
cmp
and
and
mov
xor
and
stc
add
cmp
mov
cdq
jge
xlat
movs
cmp
or
xor
scas
mov
pop
mov
push
inc
pop
outs
arpl
xchg
pushf
nop
pop
cmp
js
inc
scas
mov
xor
or
sbb
jnp
and
or
dec
sub
mov
cmps
popf
cmps
push
jns
test
mov
aas
aaa
mov
xor
dec
inc
jns
inc
sub
dec
inc
mov
inc
mov
out
test
sahf
mov
pop
cmp
xor
push
repnz
dec
push
enter
xchg
aas
push
repnz
inc
mov
mov
mov
fild
sub
mov
mov
mov
cld
inc
mov
mov
pop
push
stc
push
call
inc
inc
nop
or
and
clc
inc
inc
inc
rol
movs
or
inc
inc
pop
and
pop
les
add
leave
jg
mov
xor
dec
inc
lahf
xor
and
mov
leave
or
lahf
or
fnstsw
push
sbb
add
and
es
daa
dec
cmps
rol
(bad)
push
jb
pop
mov
add
inc
les
cmps
pop
mov
jo
mov
inc
lds
fild
mov
push
pop
push
sub
inc
adc
inc
ss
cs
daa
(bad)
inc
inc
leave
retf
retf
arpl
dec
les
inc
in
in
add
dec
jnp
ss
xor
or
leave
dec
in
cdq
in
cdq
repnz
push
enter
cdq
lods
inc
pushf
cs
dec
and
in
enter
out
sbb
sbb
xchg
ins
sub
add
push
rol
mov
cmps
xor
inc
aam
and
dec
dec
and
dec
ror
dec
fld
out
dec
dec
dec
mov
inc
leave
iret
(bad)
push
dec
inc
push
dec
and
pop
test
jno
inc
lods
inc
daa
pop
gs
mov
dec
leave
inc
and
xor
call
push
dec
and
add
fistp
mov
dec
mov
jo
sbb
and
out
dec
mov
(bad)
xchg
nop
call
arpl
adc
inc
lods
pop
imul
xchg
je
inc
aam
jle
cmp
bound
cmp
adc
xor
jle
cwde
cmp
dec
scas
call
push
ins
dec
dec
clc
dec
in
dec
mov
dec
cs
pusha
dec
mov
dec
and
pop
jo
mov
push
enter
test
xchg
inc
repnz
ror
repnz
push
repnz
dec
hlt
dec
cwde
add
cwde
add
shl
sbb
movs
pop
das
dec
dec
push
xor
inc
pop
inc
xlat
std
mov
pop
repz
push
aad
dec
das
leave
add
loopne
push
ins
repnz
lods
push
(bad)
es
push
inc
leave
pop
cmp
mov
in
mov
pop
xor
aaa
pop
jne
cmp
imul
inc
test
aam
iret
imul
stos
push
mov
push
mov
rcl
push
lahf
imul
pop
mov
mov
jg
fs
push
lods
in
fs
jmp
xor
jae
sub
stos
(bad)
out
sub
(bad)
and
dec
mov
sbb
mov
test
jo
aam
pop
cmp
(bad)
push
out
dec
pop
pop
push
pushf
push
fs
adc
(bad)
push
add
dec
or
mov
add
sar
sar
sub
mov
dec
pop
leave
dec
nop
push
cwde
push
out
add
xor
xor
pushf
xchg
(bad)
and
or
les
sbb
pop
sub
pop
adc
mov
inc
mov
hlt
jns
shl
xchg
xlat
mov
push
in
add
push
add
xchg
inc
fnsave
mov
popa
add
jnp
pop
lds
(bad)
sub
mov
pop
mov
sbb
enter
ds
jns
pop
and
sub
shl
pop
je
les
dec
xchg
cmps
std
out
push
add
pop
pop
es
icebp
and
push
neg
in
jno
ss
stos
sbb
sti
scas
sbb
inc
mov
ret
jp
xchg
push
loope
call
jno
sar
mov
pop
push
imul
aas
je
xor
jno
mov
mov
pop
add
and
push
xchg
dec
pop
jl
les
or
push
fst
mov
nop
xchg
mov
xor
and
pop
xor
in
scas
in
pop
adc
or
aad
mov
aaa
adc
adc
and
in
mov
ins
pop
sahf
ss
adc
push
sbb
xchg
in
inc
or
out
push
stc
fstp
mov
pop
push
add
dec
inc
sahf
in
pop
test
pop
leave
xchg
pushf
test
or
ss
mov
push
dec
aas
pop
jno
mov
jge
outs
xchg
add
xor
mov
add
rcr
cmp
jns
in
pop
xlat
lock
out
dec
sti
es
push
jl
push
add
pop
inc
js
sahf
in
mov
test
daa
in
call
nop
stos
arpl
xor
mov
addr16
jnp
imul
popa
push
stos
stos
or
mov
das
in
outs
not
mov
bound
popa
das
mov
bound
mov
sbb
das
aam
pushf
bound
xchg
mov
cmp
or
dec
pop
test
mov
js
and
fsub
in
adc
jns
and
das
jns
shl
into
push
into
test
xor
enter
dec
stos
mov
jns
add
add
xchg
push
or
and
adc
sahf
mov
push
and
add
test
dec
inc
mov
(bad)
xchg
pushf
test
pop
sub
pop
int
push
cmp
les
inc
jb
inc
add
clc
mov
push
ins
push
addr16
fwait
pop
xchg
pushf
js
mov
add
mov
sahf
imul
xor
mov
rcr
(bad)
dec
dec
rcr
xor
inc
and
ret
mov
shl
imul
xchg
iret
lahf
movs
test
jns
cs
push
mov
adc
pinsrw
(bad)
push
aam
outs
ins
imul
and
push
sbb
xchg
xchg
push
imul
and
les
and
and
in
and
mov
sub
leave
sub
and
pusha
imul
and
jns
push
and
ins
popa
adc
and
int3
imul
push
pop
leave
mov
out
or
jmp
push
popa
inc
ins
out
out
and
add
clc
push
jl
mov
add
ins
scas
sub
push
repnz
ins
sub
popa
adc
sub
pop
movs
xchg
dec
pop
(bad)
jecxz
add
into
aas
shr
mov
xor
pop
repz
pop
push
gs
xchg
adc
jo
int3
sar
out
cmps
cld
push
add
pop
je
push
push
inc
and
jmp
outs
out
cmp
and
xor
or
adc
popa
push
push
das
mov
jo
inc
push
dec
jno
xor
test
xchg
sbb
stc
adc
pop
mov
cmp
sbb
or
cmp
jo
push
add
mov
xchg
leave
dec
dec
leave
je
inc
jno
jmp
jns
popa
add
inc
jno
pop
sbb
icebp
stos
sbb
inc
adc
ss
push
cmps
adc
adc
jb
jb
and
pop
jb
pop
fs
inc
push
nop
sbb
pop
and
pushf
sub
stos
and
sub
mov
sbb
in
xor
or
shr
xor
adc
pop
mov
ja
jae
mov
pushf
shl
je
jae
jae
or
jb
je
or
in
clc
or
or
and
dec
je
je
bound
nop
push
bnd
sbb
je
or
lods
in
js
jo
xor
adc
add
imul
cmps
loop
xor
jne
jbe
sbb
ins
xchg
jne
jne
jne
adc
and
inc
mov
mov
xchg
pop
enter
lock
cmp
jbe
push
inc
and
dec
push
sbb
add
jbe
adc
jo
or
push
push
inc
mov
loope
adc
fwait
int
and
js
ja
ja
nop
and
ja
sbb
inc
push
enter
sbb
or
in
(bad)
ja
js
mov
and
sbb
leave
sub
pop
sbb
sbb
add
sub
inc
jmp
(bad)
or
arpl
jns
fldcw
jns
jp
jns
jns
test
cwde
jns
and
sbb
pop
jb
adc
and
jne
btc
and
push
push
pop
sbb
push
repnz
cmp
and
lods
in
cld
sbb
loopne
adc
inc
add
inc
mov
stos
dec
int
es
fwait
int
pop
in
call
jp
and
push
jnp
jnp
sub
enter
clc
sub
add
clc
sub
movs
jnp
pop
adc
inc
movs
inc
enter
fs
in
jnp
repnz
push
clc
sub
push
fmul
sub
jo
add
mov
mov
mov
inc
sub
cmps
mov
fwait
mov
into
push
jmp
cmps
fdiv
and
pop
enter
xor
xor
xchg
jge
jge
ins
mov
xchg
aaa
leave
call
xchg
sar
dec
jmp
inc
lock
add
sub
jmp
lods
jle
mov
test
ret
inc
mov
hlt
jle
cmp
and
in
cmp
jg
jg
shl
xor
add
sub
fisttp
leave
nop
cmp
and
sbb
inc
fld
jg
lds
test
cmp
daa
jns
pusha
and
mov
ins
jbe
xchg
sub
daa
inc
aam
or
xchg
pop
enter
sti
add
dec
push
and
stc
test
and
or
aam
or
jo
stos
and
xor
dec
push
(bad)
sbb
sbb
pop
sti
push
inc
add
push
xchg
pushf
and
inc
or
lods
inc
jb
cmp
lods
inc
les
cld
sbb
repnz
pop
nop
shl
inc
sub
and
xor
adc
test
push
loope
dec
cmp
xchg
add
scas
add
push
call
mov
and
in
pushf
or
and
dec
inc
push
and
ror
popf
test
add
dec
pop
inc
in
in
sar
and
push
aaa
add
add
ret
and
dec
(bad)
aam
or
pushf
test
push
mov
das
in
jb
in
push
or
cmp
mov
sbb
xchg
stos
es
les
movs
stos
clc
and
xchg
push
xor
xor
push
or
clc
mov
add
cwde
push
sti
cwde
xchg
inc
ss
int
xchg
loopne
enter
test
mov
add
inc
push
in
in
xchg
or
in
mov
xor
stos
dec
es
in
mov
mov
mov
or
jg
imul
pop
pop
dec
mov
pushf
mov
mov
or
jb
jle
xchg
mov
das
in
pushf
hlt
daa
push
popa
push
popa
and
and
mov
enter
dec
push
lods
mov
daa
ins
mov
popa
hlt
daa
aaa
or
and
xchg
pop
jne
stos
shl
call
push
push
mov
push
add
das
cwde
mov
clc
imul
nop
and
nop
imul
and
cmp
dec
(bad)
push
jns
pop
sub
movs
sub
mov
adc
jns
inc
add
add
xor
add
shl
into
in
sbb
sub
add
aas
movs
inc
push
in
pop
test
sbb
mov
mov
add
es
and
inc
and
lea
sbb
pop
pop
ins
pusha
mov
xchg
adc
or
jbe
xchg
xchg
lea
enter
xor
sub
push
lods
push
movs
sbb
mov
xlat
loopne
adc
arpl
or
cwde
mov
xchg
sbb
call
inc
or
data16
xor
adc
cld
push
or
pop
imul
jnp
cmps
xor
cmp
jae
jmp
sbb
movs
add
mov
push
nop
cmc
push
jb
xchg
gs
addr16
add
sbb
push
arpl
inc
ret
inc
lods
sbb
test
ins
jb
rcr
add
das
inc
sbb
xor
inc
dec
jae
sbb
sub
push
pcmpgtb
cmp
inc
push
jae
push
push
iret
jae
ss
add
xor
xor
sti
mov
inc
xor
arpl
adc
loop
xor
xchg
loop
fstp
shl
xor
or
pop
xor
pop
loope
cmp
xor
xor
pop
adc
or
out
cmp
jo
add
aaa
push
xchg
andnps
(bad)
ins
aas
push
int3
mov
and
mov
push
push
imul
push
pop
adc
push
sbb
stc
add
pop
sbb
fndisi(8087
cmp
add
xchg
aaa
ins
mov
outs
fadd
pop
add
inc
mov
xor
fs
and
das
daa
test
dec
inc
aas
cmp
mov
ins
mov
sar
inc
adc
jo
jns
fldenv
mov
sub
mov
nop
(bad)
movs
in
mov
and
mov
sub
xchg
or
push
and
dec
xchg
pop
xchg
and
mov
jmp
sbb
jb
cld
xor
jg
cmp
cmp
and
sahf
add
leave
mov
cdq
call
add
cdq
xchg
xchg
daa
mov
lock
call
pop
fwait
jmp
pushf
xor
in
ins
mov
popf
pop
sbb
jb
jecxz
sahf
mov
pushf
mov
lahf
dec
lods
cmc
int3
push
or
sbb
aam
and
mov
mov
sub
mov
mov
xchg
jae
mov
popa
ins
add
lods
stos
and
(bad)
push
(bad)
dec
ss
in
add
xchg
pop
icebp
mov
mov
mov
pop
sbb
xor
jnp
mov
jle
and
test
xchg
icebp
mov
(bad)
or
inc
sbb
jns
push
mov
shl
jmp
mov
sbb
outs
stos
repz
scas
push
xchg
js
addr16
nop
fsub
mov
sub
dec
jle
cld
scas
pop
dec
enter
mov
pop
mov
ins
push
push
mov
add
mov
aaa
adc
or
mov
or
push
es
mov
fadd
sub
hlt
(bad)
xchg
mov
sbb
or
fs
mov
adc
or
add
or
ucomiss
xor
adc
or
dec
in
mov
aaa
adc
sbb
mov
and
mov
cdq
or
add
add
sbb
in
sbb
nop
sbb
jno
push
mov
inc
(bad)
(bad)
pop
jne
adc
(bad)
imul
jne
adc
and
adc
imul
lods
jmp
dec
jg
inc
add
or
mov
add
lahf
rcl
xchg
pop
jo
cmp
into
xor
jne
or
aad
nop
jb
pop
or
add
mov
sar
shl
inc
icebp
xor
jno
pushf
(bad)
xor
jmp
sar
mov
mov
mov
xor
add
or
pop
sbb
mov
xchg
gs
mov
pop
add
enter
add
mov
dec
in
adc
or
and
movs
pop
push
adc
popf
push
add
mov
pop
or
dec
sub
or
mov
aam
addr16
add
xor
rcl
stos
popa
dec
cmps
push
and
mov
movs
les
das
adc
in
dec
add
test
dec
leave
inc
mov
adc
lea
mov
pop
sub
inc
addr16
or
aas
out
ret
mov
fst
test
push
dec
fnstcw
sub
dec
add
scas
movs
or
adc
scas
popa
add
jp
movs
mov
sbb
cmp
and
cmp
push
inc
lods
sbb
fiadd
rol
mov
addr16
scas
or
ror
fs
jle
(bad)
fs
fs
or
out
gs
cmps
test
repnz
dec
je
pop
add
pop
enter
stc
(bad)
inc
pop
adc
test
inc
or
(bad)
dec
movs
pop
jo
pop
loopne
popa
pop
enter
push
xchg
jl
dec
dec
pop
push
cmp
or
and
(bad)
jmp
inc
pop
pop
(bad)
dec
mov
or
cmp
jecxz
in
dec
outs
or
mov
sar
push
push
test
mov
push
sub
aas
or
inc
(bad)
call
pop
ficom
leave
cmps
(bad)
mov
movs
addr16
popf
adc
push
or
mov
imul
xor
xchg
or
je
js
sub
in
test
or
jle
mov
cmp
jnp
add
jg
add
loope
mov
sub
js
pop
xrelease
sti
out
sbb
sbb
iret
or
test
ins
inc
and
jo
xchg
nop
jns
and
cmc
jl
pop
add
inc
add
iret
adc
rcr
xor
cmp
xchg
loopne
add
inc
xor
xor
jo
icebp
add
mov
or
gs
call
push
jg
imul
outs
cmp
pop
sub
js
add
mov
mov
ret
xor
or
sub
outs
dec
and
xchg
add
mov
push
out
imul
xor
pop
cmp
add
mov
js
es
push
je
push
leave
nop
loopne
mov
or
(bad)
jns
clc
xchg
dec
pop
sub
and
adc
ret
pop
jmp
idiv
(bad)
sbb
nop
mov
push
jo
out
sti
and
xor
jecxz
xor
aad
test
pop
out
loopne
mov
mov
cmp
push
jmp
xor
pop
mov
ins
pusha
xchg
push
scas
sub
arpl
add
(bad)
dec
adc
mov
ret
ins
pushf
push
(bad)
cmp
push
call
add
jnp
in
scas
dec
cmps
sub
sub
mov
mov
mov
fsub
jmp
and
or
push
popa
mov
adc
ret
adc
outs
mov
inc
call
pop
and
enter
cmp
sub
rcr
mov
test
jecxz
pop
inc
add
jo
cmc
shr
mov
mov
mov
lock
adc
leave
pop
sbb
mov
adc
lods
sbb
gs
test
pop
cmp
int
test
sub
dec
push
mov
or
stos
mov
sbb
pop
xchg
adc
adc
xlat
in
mov
aaa
les
or
jno
cmp
xor
gs
pop
stos
push
cmp
add
xchg
mov
adc
(bad)
mov
sbb
mov
aaa
sbb
or
add
jecxz
or
imul
or
pop
test
and
push
ret
and
pushf
outs
jne
popf
add
aad
lock
jle
mov
add
or
pop
aaa
add
fcmovnu
dec
ja
sub
leave
xor
and
in
mov
jg
cmp
setg
ins
pusha
adc
sub
add
push
sbb
inc
out
pop
mov
sub
add
or
push
adc
movs
clc
das
call
pop
pusha
or
xor
mov
in
test
cs
mov
push
or
push
sbb
sbb
pop
iret
adc
call
setae
fldcw
pusha
ja
dec
xchg
lods
sub
cmp
test
(bad)
es
clc
and
mov
push
das
bound
rcr
repnz
lods
(bad)
in
jmp
into
mov
dec
sahf
inc
push
jo
out
add
or
dec
fiadd
mov
rcr
and
cmp
xchg
cdq
sbb
sub
ret
imul
xor
hlt
fucomi
stos
cmp
sbb
xor
push
add
test
add
call
push
mov
push
mov
nop
int3
dec
lock
or
in
sbb
sbb
cmp
popf
addr16
cmps
pop
cmp
call
lahf
jo
hlt
mov
inc
and
nop
add
add
sbb
pop
movs
jnp
scas
or
outs
dec
add
jmp
outs
pusha
push
or
sub
inc
sub
fild
es
ins
hlt
inc
jo
xchg
das
out
dec
dec
imul
cmp
jl
sbb
jo
push
mov
sub
adc
test
xor
packsswb
out
cld
inc
inc
adc
xchg
push
jno
jbe
inc
loopne
jae
mov
pop
js
push
push
scas
cmp
aam
dec
iret
mov
jno
mov
fiadd
and
dec
popf
push
ja
clc
lds
inc
dec
dec
push
jne
add
xor
adc
shl
shl
and
sub
dec
pop
and
cmp
inc
or
and
dec
xor
gs
(bad)
ret
add
fild
das
cmp
add
call
fild
xor
xor
imul
and
and
push
call
lahf
fimul
add
xchg
cdq
std
aas
push
outs
adc
xchg
(bad)
call
inc
mov
std
aam
mov
loope
or
sbb
dec
or
xchg
dec
ret
jne
add
or
jge
cs
push
sbb
mov
fwait
sub
ffreep
jne
int
loop
out
rcr
sar
ins
div
aam
add
cdq
fs
imul
add
js
pop
popa
xor
dec
sbb
sbb
sbb
call
adc
inc
xor
mov
dec
es
rcr
js
das
pop
cmp
loop
xor
jnp
cmp
pop
xchg
add
dec
lahf
push
xor
int3
push
add
xor
add
ss
ret
push
inc
or
push
pusha
xor
pop
pop
loopne
or
(bad)
aad
movs
cmp
add
mov
movs
nop
xchg
add
sbb
mov
sub
popa
lahf
and
imul
add
sbb
jo
mov
sahf
loop
loop
and
and
sub
cmp
xchg
pop
add
lahf
adc
idiv
retf
push
xchg
adc
adc
stos
mov
mov
xor
popf
mov
jg
addr16
jb
push
pop
or
and
xor
push
adc
rol
daa
xchg
test
dec
xchg
shr
push
pop
ja
push
dec
rcl
add
xor
fisttp
or
fnstcw
shl
or
add
sbb
out
dec
dec
cmps
push
lods
(bad)
stc
sbb
lods
xchg
sbb
ret
mov
add
repz
or
(bad)
fist
mov
(bad)
cvtpi2ps
loop
loope
and
sub
(bad)
mov
stos
mov
push
movs
or
pop
inc
sbb
adc
xchg
ins
xchg
jl
inc
ret
in
lea
and
in
movs
daa
mov
clc
stc
xlat
ret
int3
js
fmul
jne
cmps
dec
mov
mov
aas
cmp
mov
adc
les
adc
xor
xchg
mov
ja
cmp
mov
lock
test
into
mov
or
xor
mov
mov
std
arpl
add
fdivr
push
add
clc
inc
aaa
arpl
add
icebp
fcmovnbe
mov
repz
and
cmps
inc
es
adc
(bad)
jmp
fmulp
mov
add
movs
cmp
ret
or
and
(bad)
mov
pusha
mov
inc
sub
adc
fstp
lahf
xchg
inc
xchg
push
addr16
pop
sbb
aas
push
mov
cdq
add
pop
lea
ret
jmp
xor
mov
fs
in
ret
xor
or
data16
pop
pop
and
sub
jno
call
mov
pop
sbb
mov
fucomp
cmps
dec
loope
fadd
sbb
sbb
jmp
inc
dec
adc
pop
push
adc
push
imul
mov
cli
int
sub
cmc
dec
sub
jl
add
cwde
mov
std
jge
inc
(bad)
ins
aaa
ss
sub
daa
lea
jg
dec
movs
test
dec
inc
rcl
and
fdiv
data16
loopne
dec
xor
jge
sbb
or
ret
jg
(bad)
fdiv
dec
pusha
push
sahf
push
(bad)
and
es
in
fisttp
adc
inc
pop
pop
sub
mov
mov
pop
inc
in
mov
pop
stc
mov
mov
je
lods
enter
pop
add
or
xor
ret
add
mov
push
movs
leave
push
jmp
or
xor
push
stos
jmp
stos
mov
cmp
dec
js
or
add
inc
out
or
cmc
lods
xor
je
(bad)
es
mov
xor
fs
add
inc
jg
add
push
aaa
jo
and
add
out
outs
fwait
out
test
or
add
add
shr
adc
test
add
das
int3
add
(bad)
retf
inc
pop
jno
or
dec
hlt
shr
es
or
cmp
sbb
and
or
pop
pop
es
mov
sbb
cmc
nop
sub
sub
adc
cld
mov
or
cs
pop
push
sbb
gs
mov
xchg
xor
sar
push
les
adc
xchg
add
aas
or
test
cmp
or
cmp
(bad)
js
xor
(bad)
jns
adc
add
dec
test
jne
jb
add
push
add
popa
sbb
adc
inc
or
fs
dec
pop
mul
inc
loop
jmp
pop
test
and
in
jns
mov
and
mov
out
adc
push
add
cwde
mov
pop
or
or
dec
inc
xchg
add
mov
out
adc
leave
adc
je
in
sub
sbb
jnp
mov
adc
cdq
mov
clc
and
hlt
dec
aas
shr
sbb
dec
xor
or
or
pop
fiadd
or
enter
(bad)
pop
call
adc
cld
sub
fld
adc
adc
adc
push
nop
lahf
mov
js
rcr
adc
push
rol
in
scas
xchg
lea
add
ret
ins
and
add
pop
jmp
xabort
xor
movs
inc
call
mov
mov
jno
data16
pusha
jno
call
(bad)
push
push
push
jo
xor
das
jbe
mov
stc
jno
aaa
sub
aaa
repz
nop
xor
push
xor
movs
jno
push
out
pop
retfw
mov
movs
add
dec
inc
imul
cmp
or
xchg
adc
lea
pop
push
cdq
mov
or
lock
ds
dec
call
cmps
jnp
add
push
(bad)
dec
xor
fnstenv
adc
dec
sub
shl
sub
sub
dec
clc
or
les
add
fadd
fsubr
push
aad
fnstcw
shl
adc
push
push
test
(bad)
adc
fisttp
mov
inc
(bad)
cmp
xchg
sub
sbb
sbb
pop
sub
out
add
dec
jne
mov
add
dec
cmp
daa
les
adc
xchg
add
icebp
sub
jbe
xchg
or
lock
dec
lds
adc
ja
stc
ins
cmp
jno
sub
jne
movs
out
inc
mov
mov
(bad)
dec
or
mov
xchg
pop
inc
pusha
pop
pop
pop
and
clc
jnp
mov
and
call
xchg
mov
std
cs
or
jne
xor
dec
mov
sbb
mov
(bad)
cmp
xor
sbb
fcom
enter
cmp
das
push
xor
inc
cmp
hlt
mov
das
cmp
push
ret
and
xor
sbb
jno
dec
adc
enter
dec
into
inc
cld
inc
mov
sahf
jnp
push
push
inc
call
dec
dec
sbb
cwde
loop
jbe
pop
mov
push
jne
inc
dec
(bad)
mov
call
adc
aaa
and
mov
mov
sbb
aas
pop
ss
pop
je
and
adc
pmaxsw
fwait
sbb
gs
pop
pop
dec
inc
or
lock
xlat
adc
or
ror
inc
pop
ss
add
mov
fucomi
loopne
imul
test
xchg
iret
(bad)
outs
retf
outs
jne
pop
and
pop
or
das
cmps
test
mov
sbb
sbb
out
mov
inc
jmp
push
popa
retf
mul
push
sbb
xchg
adc
lea
cld
and
or
(bad)
xor
imul
fstp
jb
pusha
es
mov
sbb
ret
sbb
pop
adc
adc
push
jmp
pop
inc
or
in
shr
and
adc
ins
sti
or
cmp
pop
adc
int3
sub
fs
mov
pop
nop
or
push
inc
fs
fs
movs
sub
inc
nop
loopne
xor
popa
inc
pop
nop
adc
retf
ficom
mov
fcom
push
mov
retf
or
or
arpl
cmp
retf
arpl
mov
mov
mov
add
adc
(bad)
dec
add
popa
cmp
or
and
jg
pusha
retf
mov
sahf
sbb
or
in
pop
pushf
push
add
sbb
pop
int
push
aas
pop
jno
and
inc
out
adc
push
cld
neg
fisub
mov
or
pop
dec
clc
es
cmp
push
sbb
enter
push
dec
neg
out
jo
pushf
and
push
mov
sahf
sub
sahf
test
pop
mov
lods
push
int3
in
ss
fdivr
sbb
mov
fstp
add
dec
popa
pop
movs
mov
cmp
sbb
inc
jno
in
aam
into
addr16
pop
daa
adc
pop
xor
mov
cdq
jae
das
and
fnsetpm(287
jns
movd
inc
test
adc
lea
jae
add
xchg
pushf
mov
and
add
inc
or
repnz
jl
pop
and
and
mov
jns
mov
pop
shl
xchg
dec
addr16
ret
leave
and
xchg
mov
push
repnz
cmc
test
mov
jnp
cmp
pop
in
sub
push
(bad)
rcl
rcl
push
movs
rcl
(bad)
stc
jg
dec
imul
cld
pop
add
pop
add
add
imul
add
fsub
div
sti
sub
pop
xchg
add
adc
pusha
xor
pop
and
daa
sbb
xor
stos
adc
repz
and
rcr
sub
inc
test
jns
das
dec
adc
sub
jne
jecxz
push
or
adc
sbb
and
sbb
add
pop
adc
push
and
and
xchg
mov
pop
ins
sub
pop
movs
add
adc
add
pusha
fidiv
push
and
sub
daa
mov
(bad)
and
je
sar
fsub
push
mov
jecxz
jmp
push
out
or
push
xchg
or
lahf
cmp
inc
or
xchg
addr16
adc
add
mov
es
rcr
in
push
inc
inc
icebp
pop
retf
xlat
jbe
cmp
and
fwait
retf
mov
das
push
dec
sub
mov
(bad)
mov
imul
mov
add
test
mov
add
aas
push
add
aad
mov
xchg
mov
(bad)
push
jb
sub
pop
(bad)
icebp
dec
cmp
or
getsec
jns
cmp
cmp
repz
sahf
pushf
sub
and
add
pop
into
jne
adc
sar
push
outs
div
outs
push
xor
in
lods
dec
push
jmp
jno
sbb
push
pusha
pop
ss
dec
pop
shr
out
and
lods
fs
mov
sub
aas
xchg
ins
or
pop
into
pop
sbb
pop
inc
add
or
jl
and
adc
pop
dec
push
mov
cmp
leave
cmp
movs
xor
push
jl
arpl
add
pop
adc
mov
sub
cmp
add
pop
or
lea
dec
jno
xchg
es
rol
scas
mov
xchg
jae
iret
add
repz
cmp
and
aam
pop
cmps
out
repz
sub
pop
or
and
loope
cmp
sbb
dec
inc
sahf
das
push
arpl
sub
push
jecxz
stos
inc
push
jno
mov
push
sub
push
or
adc
pushf
push
mov
fisub
mov
xchg
add
mov
adc
fxch
and
or
add
adc
adc
lods
shr
mov
in
mov
push
lds
lahf
mov
inc
mov
lods
push
test
je
mov
cmc
aas
xchg
xor
or
inc
ret
add
lds
jmp
push
in
add
and
lods
mov
fst
arpl
mov
mov
cwde
adc
inc
cld
cmp
pop
inc
js
and
xchg
dec
sbb
xor
into
mov
popa
or
ss
sbb
scas
add
dec
dec
test
inc
cmp
add
dec
rol
xor
in
push
inc
lods
add
or
jnp
sbb
inc
call
jo
xor
xor
aaa
pop
and
sub
xchg
cmp
inc
test
or
sahf
or
cmp
adc
aad
and
ds
push
add
or
je
xor
xlat
inc
cld
xchg
or
leave
js
nop
in
adc
xor
xchg
mov
repz
mov
pushaw
pop
mov
or
repz
leave
repz
fs
(bad)
jl
or
fnstenv
xor
imul
in
mov
sbb
xor
adc
je
imul
enter
add
sbb
inc
outs
xor
mov
cmp
dec
pop
bound
mov
and
push
inc
rol
dec
test
adc
mov
test
jno
mov
mov
sbb
sbb
or
inc
cwde
mov
inc
inc
inc
inc
mov
inc
and
lea
inc
inc
scas
shl
sbb
inc
inc
inc
cmp
cmps
cs
inc
inc
leave
jmp
fdivr
add
add
jmp
push
mov
inc
mov
or
call
inc
out
push
fcmove
ds
xor
cs
xor
mov
inc
shl
push
push
sub
mov
fst
pop
dec
call
loope
loopne
or
or
pushf
fisub
xor
das
aad
dec
test
iret
push
pop
cmps
fldcw
push
out
mov
inc
mov
ins
out
aam
inc
repnz
push
in
mov
and
pop
push
data16
pusha
push
ja
push
ja
push
xor
pusha
or
push
repnz
inc
pop
add
mov
or
in
push
xor
push
sbb
inc
sub
pop
inc
sar
mov
outs
mov
add
jge
adc
loopne
sub
push
cmc
ror
pop
loope
mov
jp
push
xchg
loope
(bad)
sub
loop
loop
call
sbb
push
call
enter
clc
push
call
jo
cmp
ss
push
jecxz
mov
and
xchg
push
imul
jnp
pop
dec
jle
rol
dec
mov
enter
dec
btc
daa
xchg
push
inc
fisub
fcmovne
or
jge
adc
lock
ins
inc
dec
jp
loope
add
mov
or
adc
in
mov
jo
mov
lock
push
sub
push
stos
add
adc
mov
and
xor
cmp
xchg
inc
jl
fwait
jmp
dec
push
push
jecxz
xor
fwait
push
push
adc
inc
lods
adc
outs
pop
imul
push
fnclex
push
cmp
add
nop
and
pop
add
ja
dec
cmps
pop
pop
dec
add
pop
das
dec
ds
fs
add
cs
pop
jo
jp
out
fimul
ret
or
or
inc
cs
jo
mov
int
inc
fiadd
jne
add
dec
and
xor
sbb
sub
mov
cmp
fwait
mov
jmp
pusha
jno
mov
mov
inc
jl
and
pop
inc
inc
sub
iret
add
mov
or
(bad)
enter
sub
push
std
sbb
ret
add
adc
in
sahf
adc
pushf
out
es
adc
sub
loop
pop
sub
mov
dec
lds
add
pop
out
repz
ret
cmc
ins
pop
dec
in
add
out
dec
orps
leave
leave
and
out
cmp
and
add
loopne
mov
cwde
out
stos
addr16
or
push
push
outs
ins
imul
mov
into
ficomp
adc
(bad)
shl
or
jbe
xor
mov
xchg
push
jae
and
add
cmp
pop
adc
xchg
fst
leave
in
push
and
push
es
push
aas
push
xchg
fwait
std
or
pop
pop
pop
add
adc
adc
pop
add
add
pop
mov
(bad)
mov
and
add
hlt
xchg
xchg
add
mov
out
mov
inc
push
add
in
aad
pop
add
or
mov
test
test
pop
or
(bad)
add
inc
jecxz
jb
retf
call
add
pop
add
add
movs
pop
mov
add
(bad)
in
mov
out
jmp
mov
sub
push
jo
sbb
adc
out
push
data16
xchg
push
push
jb
cmp
add
ins
jmp
and
in
cmp
sbb
xchg
pusha
bound
mov
push
jno
jae
add
xchg
mov
scas
mov
fstp
retf
add
sbb
and
fcom
push
sbb
fiadd
fwait
nop
int
jmp
add
rcr
call
hlt
mov
outs
mul
mov
mov
mov
das
dec
popa
rol
jl
cld
les
push
xchg
add
adc
scas
adc
push
xchg
jno
popa
adc
mov
loopne
mov
lds
pop
fstp
cmp
push
jns
xlat
clc
sbb
shr
int
in
mov
cs
push
push
sub
or
adc
and
add
xchg
in
add
jns
popa
pop
ins
psubusw
aas
in
hlt
popa
and
fst
rol
sub
pusha
mov
jno
pop
xchg
pop
js
movs
mov
xchg
loop
dec
sahf
jo
or
inc
ins
inc
add
and
and
in
jno
push
sub
inc
pop
adc
ret
xor
(bad)
inc
adc
arpl
xchg
push
jns
sbb
sub
pop
or
or
call
(bad)
add
jb
jne
push
seta
ss
and
xchg
and
and
and
and
xchg
out
xor
bound
xchg
add
or
mov
mov
cmovle
out
cmps
jo
pop
add
out
ins
cmp
stc
push
sbb
out
push
pop
sbb
cmps
push
je
pop
scas
jmp
xlat
xchg
add
mov
mov
scas
xchg
mov
jno
add
iret
xor
dec
mov
das
imul
lods
out
ds
push
dec
push
xchg
and
or
lds
fsubr
sbb
rdmsr
mov
pop
dec
jle
cmp
inc
mov
and
push
aaa
jo
jnp
cmp
nop
arpl
adc
mov
mov
jl
push
pop
popf
loopne
ss
lahf
hlt
cmp
ficom
mov
xchg
(bad)
lds
adc
loopne
dec
add
sub
mov
and
push
pusha
pop
cmc
add
push
mov
mov
enter
jmp
pop
add
sbb
pop
cmps
hlt
ss
or
cmps
sub
leave
mov
xor
inc
push
push
and
dec
ret
push
dec
fadd
pop
ins
(bad)
xor
pop
add
outs
or
lods
and
mov
shr
and
add
add
push
add
add
mov
add
xor
sbb
cli
and
aas
clc
inc
shl
inc
sub
sub
jmp
rol
adc
test
sub
fisttp
pop
retf
hlt
pop
(bad)
cmp
jge
add
push
push
push
mov
gs
sub
push
or
xor
pushf
mov
in
push
inc
jge
imul
mov
or
sar
mov
pop
cli
push
sbb
aam
lock
enter
sti
add
loope
retf
sbb
and
sbb
xchg
or
mul
sub
add
and
or
push
inc
push
sbb
rol
dec
pusha
sub
loopne
adc
cmps
mov
clc
xor
call
mov
icebp
sbb
adc
fdiv
pop
or
sbb
clc
daa
inc
inc
inc
push
fs
adc
jbe
test
add
fst
(bad)
pusha
inc
movs
pusha
mov
ins
dec
push
rcr
add
push
repz
fild
das
pop
cmps
adc
sbb
jne
push
pop
xchg
call
lea
pop
pop
inc
stos
fst
adc
and
xor
inc
prefetch
sbb
adc
aas
dec
mov
ret
ss
mov
into
mov
out
fs
mov
inc
jmp
popa
push
icebp
nop
pop
pop
xor
add
jg
sub
mov
and
les
into
shl
(bad)
xor
int3
(bad)
sti
push
add
neg
sbb
in
test
inc
jnp
or
pop
(bad)
mov
or
or
sub
mov
mov
and
pop
xchg
ret
add
sbb
inc
mov
sub
fcomp
fisttp
cld
jg
mov
adc
xor
push
add
fs
cld
in
mov
or
add
pusha
add
sub
mov
xor
out
mov
add
cmp
add
and
push
out
(bad)
sub
fisttp
sbb
jmp
or
xor
imul
cmovs
jne
jle
sbb
mov
inc
jmp
jl
push
shl
enter
xchg
ja
mul
test
jmp
push
or
in
mov
aaa
add
pop
rcr
pop
dec
xlat
jge
jle
cmp
fist
push
mov
jmp
test
cmp
dec
adc
pop
in
adc
xor
pop
jmp
loop
ins
add
add
add
mov
inc
add
ins
pop
sub
ret
sbb
pusha
je
mov
add
call
add
fist
(bad)
shr
push
shl
mov
jae
push
lods
sbb
add
je
push
or
inc
mov
or
dec
imul
xchg
mov
out
mov
push
mov
jmp
mov
add
push
mul
push
ror
jo
gs
add
sbb
inc
add
push
inc
repnz
scas
lahf
sub
movs
sub
add
clc
mov
xor
mov
dec
xchg
jle
cmp
add
add
inc
cmp
inc
add
jb
inc
repnz
sbb
xor
add
xchg
sbb
int3
cmps
std
mov
dec
add
inc
add
int
add
jns
data16
sub
dec
aaa
lea
fdiv
adc
cmp
adc
mov
(bad)
mov
mov
add
sbb
sbb
mov
sbb
push
jmp
imul
int3
loopne
mov
cmp
ret
sbb
fiadd
lea
cwde
mov
sub
xchg
imul
outs
or
mov
pop
data16
cmps
add
adc
fild
or
inc
add
ja
add
adc
ins
(bad)
daa
jnp
gs
cmp
retf
push
mov
inc
push
dec
shl
ror
enter
rcl
pop
jg
and
push
dec
sbb
mov
jnp
cmp
xchg
sahf
fdiv
in
jne
test
inc
sbb
sub
inc
ins
sub
loopne
or
cmp
mov
fmul
jns
push
popf
movs
icebp
nop
add
xor
adc
les
xor
fstp
push
pop
sub
jle
clc
sbb
push
xchg
dec
cmp
cmp
cwde
add
jecxz
mov
inc
hlt
inc
jo
pop
mov
inc
xor
cli
and
test
iret
lods
cmps
(bad)
pop
imul
outs
or
lods
pop
pop
mov
rcr
sbb
sbb
dec
jbe
adc
fsubp
mov
lea
cs
test
adc
xchg
enter
je
inc
push
outs
div
cwde
adc
movs
pop
adc
and
mov
popa
or
in
into
or
dec
and
xor
adc
shl
je
iretw
rcl
push
jo
sub
pusha
mov
or
mov
and
sar
push
or
push
in
rcr
sbb
mov
cmp
xchg
and
call
mov
mov
(bad)
or
or
sti
dec
out
mov
inc
rcr
in
adc
aas
test
jl
pop
ins
jo
and
iret
sbb
in
sbb
pusha
adc
inc
or
test
or
cmps
fst
repnz
push
nop
ror
inc
sub
(bad)
pusha
in
ret
cmp
xchg
add
pop
push
popa
and
or
sbb
inc
je
shl
clc
xlat
sbb
imul
mov
inc
fcomp
cdq
inc
dec
icebp
je
lds
inc
or
scas
mov
push
adc
mov
pop
and
test
add
add
mov
in
cmp
(bad)
xor
enter
mov
mov
jle
push
in
std
dec
push
inc
loopne
add
adc
mov
add
jg
test
dec
cmp
ins
mov
daa
iret
cmp
inc
pop
sbb
jge
shl
pop
add
and
xor
inc
xor
cmp
daa
inc
shl
pop
dec
jae
mov
fldcw
(bad)
sti
out
jbe
sbb
pop
ror
add
inc
jns
popa
dec
rol
sbb
mov
inc
or
lock
fst
jl
aas
movs
push
fwait
les
call
push
push
ins
lods
add
cs
test
xchg
push
enter
jg
es
xchg
retf
adc
add
loopne
mov
pop
adc
add
add
cli
(bad)
in
xor
jecxz
adc
add
adc
adc
aad
es
add
call
fwait
dec
or
inc
or
pop
adc
xlat
jl
mov
mov
jne
xor
or
lock
jne
inc
mov
add
adc
and
mov
and
add
and
cmp
and
dec
shl
pop
(bad)
fcom
push
jp
inc
gs
sub
shl
xchg
test
push
cmp
cmp
dec
scas
call
dec
xor
shl
movs
ret
xchg
cmp
add
lock
cmp
in
bound
clc
shr
adc
adc
xlat
sub
add
jle
test
cmp
mov
add
or
sbb
into
loope
adc
cld
cmp
out
in
ja
ror
pop
xor
je
es
inc
ss
add
in
add
stos
test
sbb
adc
push
adc
not
and
adc
add
inc
repnz
ret
add
pop
xor
ret
ret
xchg
mov
jb
pushf
cmp
add
push
jmp
mov
xor
inc
dec
cmp
sbb
in
das
add
das
push
inc
pop
or
addr16
adc
pop
pop
or
addr16
test
neg
add
(bad)
adc
adc
fwait
outs
xchg
xor
ins
(bad)
jno
adc
cwde
adc
(bad)
and
and
add
enter
fadd
inc
js
mov
test
cmc
push
ret
sbb
adc
iret
jns
xchg
outs
in
adc
scas
repz
inc
out
es
(bad)
pop
and
ins
iret
cmp
shl
arpl
lods
in
out
loop
jo
inc
shr
fst
inc
int3
inc
and
cmp
add
pop
inc
or
add
call
or
enter
es
shl
and
outs
aam
push
fs
xlat
dec
adc
or
mov
add
or
fisttp
mov
or
jmp
addr16
clc
add
pushf
ror
pop
inc
std
lea
lea
mov
inc
xchg
js
je
pop
aam
and
xchg
add
ret
or
in
add
das
push
call
icebp
outs
(bad)
mov
dec
or
jmp
sar
imul
sub
add
sub
or
in
aaa
ds
cs
add
mov
mov
xor
and
lock
imul
inc
adc
add
fmul
sahf
outs
repz
jmp
and
sub
fsubr
sub
push
cmp
pop
sbb
pop
aas
cmp
mov
cmp
shr
ins
and
mul
js
retf
into
jle
fst
fwait
inc
xlat
pop
enter
ins
mov
test
lea
xor
sbb
jge
dec
inc
js
cmp
enter
xchg
sar
mov
sub
inc
push
push
outs
pop
push
mov
gs
sbb
mov
rol
mov
pop
test
out
pop
fsubr
fwait
cs
jne
inc
lock
retf
sub
pusha
mov
jge
inc
ret
jecxz
pop
cmp
push
dec
dec
in
jae
sub
add
jg
sub
add
push
test
add
push
mov
add
enter
push
enter
add
rcr
jle
imul
xchg
imul
mov
or
xchg
xor
cmovns
xchg
aam
pop
ret
cwde
sub
push
ret
jmp
sub
jp
add
test
jne
ja
xor
mov
pop
xor
xchg
in
data16
add
aas
add
int3
mov
dec
call
outs
lahf
xor
mov
fmul
mov
sbb
icebp
or
out
scas
and
clc
jae
push
fist
or
fdiv
sar
jmp
daa
mov
add
add
nop
jmp
fbstp
pop
or
lock
adc
or
or
sub
out
test
shl
pop
call
mov
push
jo
daa
sub
(bad)
add
push
add
adc
iret
mov
inc
push
lea
test
fwait
add
iret
or
pop
ja
in
or
call
add
rol
leave
add
bts
loope
cmp
sub
push
or
mov
es
pusha
jo
lea
outs
loope
and
dec
or
(bad)
push
adc
cmc
sub
jmp
shl
pop
ds
sbb
(bad)
retf
xchg
mov
shl
cdq
mov
stos
hlt
imul
(bad)
mov
sbb
mov
lock
jmp
jo
test
pop
push
(bad)
and
add
push
push
mov
xchg
mov
rcr
jb
sub
adc
addr16
in
inc
inc
dec
and
fadd
add
out
mov
repz
pop
imul
add
repz
gs
out
pop
jmp
out
out
rol
nop
jge
scas
mov
mov
jmp
pop
in
jmp
nop
ret
mov
das
sub
mov
cs
or
test
arpl
adc
ds
mov
jne
and
arpl
jns
or
and
sar
daa
sbb
jmp
sub
test
hlt
ret
sub
(bad)
adc
xlat
fwait
mov
lock
loopne
dec
cmps
push
hlt
in
movs
sbb
lea
mov
push
jne
mov
add
xchg
mov
mov
sti
lock
inc
fdivr
push
jo
mov
(bad)
mov
xor
add
test
je
or
add
push
je
and
out
push
shl
call
fcom
and
adc
sub
push
sbb
xchg
lods
cmp
sbb
sbb
mov
or
mov
jo
(bad)
stc
jnp
cmps
inc
cmp
pop
add
xor
loop
loopne
sub
cmovnp
mov
fwait
mov
mov
or
or
arpl
cmp
push
fisttp
xchg
jnp
cmc
mov
add
loop
cmp
mov
rcl
mov
mov
arpl
clc
or
sbb
shl
shl
ins
push
in
mov
sub
test
ret
test
jno
sub
arpl
(bad)
inc
push
dec
daa
jns
xor
call
rol
and
add
fwait
inc
jecxz
out
mov
pop
in
cmp
inc
inc
inc
sahf
inc
fnstcw
mov
movs
fsub
jge
cmp
pop
sbb
push
pop
imul
xor
pop
mov
cmp
in
pop
sbb
lods
test
test
mov
loopne
imul
sbb
and
lock
ins
adc
push
or
xchg
fdiv
sbb
xor
leave
loopne
in
jb
or
in
add
or
inc
push
stc
cmc
ds
xor
ror
sub
xchg
aad
inc
xchg
adc
cdq
lock
ja
scas
ror
add
sub
shl
or
test
gs
in
add
inc
lock
jmp
stos
sbb
add
enter
jne
inc
daa
pop
sub
mov
clc
mov
and
lock
clc
imul
repz
inc
loop
or
push
(bad)
adc
scas
mov
mov
pop
lock
sbb
and
adc
or
test
pop
add
mov
mov
and
loope
pop
test
push
sub
popa
and
jge
jl
mov
popa
push
and
push
sbb
data16
jne
lods
sub
cmps
sbb
inc
or
pushf
js
(bad)
leave
inc
xor
adc
ja
stc
xchg
xchg
pop
(bad)
fadd
movs
das
mov
or
scas
sbb
movs
jb
dec
call
dec
leave
xor
mov
mov
mov
inc
and
sar
call
pop
and
sub
inc
enter
dec
loopne
and
dec
call
xchg
pop
and
push
sub
cmps
cli
sub
ret
arpl
push
fidiv
add
pop
sbb
adc
inc
and
sbb
xchg
push
push
loopne
clc
push
sbb
push
leave
or
and
test
inc
and
in
xchg
pushf
or
jns
cmp
xchg
lock
push
jmp
adc
lods
jecxz
dec
adc
bound
and
mov
(bad)
fsubr
or
imul
or
test
or
and
cmp
xor
mov
fld
pop
cwde
loope
push
rol
pop
and
pop
mov
jle
cwde
xchg
adc
ins
fcmovbe
or
push
inc
add
sbb
pop
sbb
fcomp
inc
add
pop
or
fsubr
dec
pop
adc
fimul
dec
and
cmp
xlat
push
hlt
pop
fdiv
inc
jmp
inc
xchg
cmps
sub
lods
lods
xor
or
je
les
pop
xor
mov
div
jmp
aas
adc
mov
xor
adc
test
das
adc
xcrypt-ecb
cmps
int
dec
sbb
shr
xor
push
push
or
jle
sub
xor
mov
movsx
sbb
mov
mov
pop
push
push
pop
cdq
pop
movs
pop
or
ss
or
add
xor
mov
xor
icebp
cmp
and
xchg
loopne
movs
je
dec
repz
in
add
rcr
inc
imul
mov
jo
daa
add
jg
adc
fcomp
mov
add
hlt
ror
add
in
nop
fucomip
adc
aam
push
and
pop
jg
ret
jo
adc
mul
loopne
jne
push
jae
retf
or
mov
dec
jae
inc
push
lock
sub
jecxz
push
xor
inc
loopne
add
bsf
mov
xchg
adc
mov
clc
pop
or
imul
data16
sbb
hlt
lahf
loopne
add
add
dec
cld
ror
add
sbb
in
pop
dec
adc
daa
clc
and
loopne
hlt
fst
and
mov
dec
add
and
ins
mov
sbb
dec
ror
cld
add
xchg
pop
mov
pop
push
int
in
dec
dec
fcmovnu
fsubr
shl
not
sub
jp
mov
test
aam
loopne
push
cmp
sbb
or
lock
mov
pushf
xchg
out
ror
dec
(bad)
sbb
push
ds
pushf
inc
inc
pushf
and
and
in
dec
aam
shl
int3
or
jecxz
shr
or
(bad)
mov
nop
sub
push
pusha
mov
retf
mov
xlat
int
sar
sar
jno
mov
xor
xchg
mov
jmp
adc
and
jecxz
call
adc
popa
dec
sbb
adc
or
jno
jle
pusha
pop
pop
sbb
cs
les
adc
adc
adc
dec
or
addr16
and
push
cmp
mov
data16
or
pusha
in
cli
jmp
mov
jb
daa
jne
lods
jbe
xchg
jns
gs
pusha
or
stc
fsubr
cmp
or
push
sub
dec
mov
lock
retf
mov
and
pusha
jno
and
or
movs
cmp
mov
fucomi
(bad)
cmp
lock
frstor
jmp
adc
or
jbe
in
mov
outs
out
push
enter
inc
add
sub
add
xor
data16
popa
push
lock
add
popa
es
xchg
add
jne
shl
inc
es
xchg
add
xchg
sub
lds
neg
adc
inc
ds
cld
mov
lods
mov
mov
ins
(bad)
dec
shl
in
in
pop
imul
pop
xchg
jo
sbb
sub
jae
xor
jl
mov
lods
mov
mov
inc
jo
or
pusha
mov
add
clc
dec
cmp
(bad)
xchg
add
dec
stos
mov
inc
je
mov
mov
and
shr
sbb
les
shr
mov
sub
outs
push
or
jle
data16
pop
cmps
add
je
inc
jmp
rcl
add
(bad)
rcl
cmp
mov
jb
add
test
xor
push
inc
add
in
mov
je
pop
cmp
into
jns
push
test
and
dec
mov
push
test
inc
xor
pop
push
or
mov
mov
cs
push
inc
or
jns
dec
push
cld
adc
or
xchg
push
ins
shl
or
dec
bound
mov
pop
dec
add
xchg
dec
das
dec
jo
or
(bad)
sub
sbb
nop
loope
xor
xchg
jo
lods
aaa
gs
xchg
in
in
jnp
nop
push
mov
sub
push
add
ja
gs
int3
sbb
push
pop
fs
inc
cmp
dec
jno
popf
movs
iret
pop
in
andnps
xor
dec
and
dec
xor
adc
add
push
mov
gs
clc
leave
adc
in
inc
daa
fcom
pop
mov
out
inc
inc
dec
jne
mov
and
xchg
stos
out
dec
push
pushf
ret
enter
push
enter
inc
psllw
or
xor
fsubr
push
sub
outs
push
inc
sbb
jbe
and
push
add
dec
dec
xchg
xchg
cmp
mov
fist
lock
cmp
dec
cmp
movs
cmp
push
and
(bad)
imul
push
sete
xchg
pop
pusha
cmp
push
add
mov
and
pop
stos
jbe
imul
jo
in
or
inc
repz
mov
inc
loop
adc
and
jnp
add
jmp
add
mov
mov
cmp
fld
push
inc
ret
lahf
sar
and
inc
mov
sub
cwde
or
(bad)
jmp
inc
out
adc
push
push
push
cmps
les
popf
push
arpl
push
push
cmps
jno
nop
and
mov
push
dec
or
outs
out
jo
dec
pop
bound
and
push
dec
jne
xor
or
jae
mov
adc
js
adc
pusha
xchg
pusha
push
clc
sub
popa
mov
cmps
sbb
or
fwait
das
hlt
jmp
jne
cwde
mov
pop
xor
adc
loope
cdq
add
cmps
ror
inc
pop
or
push
(bad)
inc
jle
iret
jnp
dec
movs
cmps
add
jl
jns
push
push
push
adc
pop
nop
loope
xchg
jg
cmc
shr
xor
or
inc
mov
out
iret
pop
pop
test
sbb
fcom
xchg
enter
shr
add
jl
cwde
popa
or
cmc
pop
mov
sub
enter
inc
cmp
ins
jmp
and
sar
retf
push
mov
xlat
jne
push
dec
dec
or
in
je
mov
popa
mov
lahf
std
call
mov
or
sub
xor
rcl
out
shl
daa
fisub
mov
inc
cs
inc
add
jnp
test
inc
clc
inc
js
pusha
pop
add
fs
test
imul
push
daa
jo
(bad)
or
dec
nop
pop
and
xchg
ins
add
mov
movzx
stc
inc
ds
dec
sbb
sbb
sets
jge
in
or
pop
das
cmp
rcl
sub
push
ds
adc
aas
sub
xchg
pop
sub
pop
and
leave
xor
inc
leave
inc
jb
dec
or
push
or
jg
and
xor
inc
adc
in
xor
pusha
adc
ficomp
add
dec
xchg
arpl
pop
inc
jae
in
xchg
dec
pushf
add
adc
mov
pop
pushf
clc
mov
out
and
sbb
js
and
mov
jmp
jbe
and
cmp
adc
dec
or
test
sub
sbb
sub
test
lods
iret
cmp
dec
loope
push
cmp
mov
push
push
pavgb
inc
sub
dec
or
mov
sbb
sub
retf
fild
inc
outs
fld
inc
xor
fs
pop
mov
jb
xor
ja
cmp
ins
rcl
rcr
in
add
(bad)
(bad)
js
dec
xor
inc
cmp
daa
ret
(bad)
inc
mov
loope
imul
push
mov
mov
jle
ins
inc
icebp
lahf
or
movs
(bad)
adc
aas
adc
je
es
das
sbb
xor
sub
test
mov
xor
xchg
fcom
lock
mov
pop
dec
adc
sbb
push
sbb
lahf
mov
mov
push
sbb
and
inc
pop
and
rcr
call
(bad)
aaa
xor
add
fistp
and
cmp
mov
jmp
clc
jle
mov
pop
xchg
sbb
inc
jo
xchg
cmp
adc
pop
je
cmp
lods
add
add
cld
aam
pop
adc
mov
mov
imul
mov
imul
aaa
inc
in
retf
sub
imul
push
clc
push
cmp
test
mov
and
xchg
mov
xlat
mov
and
mov
sub
fs
cmp
dec
and
aas
into
test
pop
sub
inc
xchg
mov
or
call
ss
das
inc
add
es
aam
ror
ror
test
sbb
call
movs
in
hlt
mov
adc
inc
dec
adc
sbb
in
aam
imul
shl
inc
shl
sub
es
fs
push
inc
int3
popa
or
leave
repz
ficom
mov
cmp
gs
or
or
dec
inc
rcl
in
xchg
dec
push
clc
mov
push
sbb
imul
lock
test
push
stos
sbb
out
rcr
push
enter
sbb
xchg
cmp
ins
repnz
pop
jl
cld
fsub
dec
mov
pop
push
fcomp
push
ficomp
mov
test
into
cmp
fmul
nop
adc
mov
in
(bad)
sub
add
mov
push
sbb
rcl
mov
call
loop
fwait
jle
iret
out
(bad)
jmp
push
mov
test
adc
or
dec
dec
jmp
cmp
xor
loopne
pop
dec
shl
jo
sar
pop
rol
ja
int3
sub
add
sub
test
jmp
cmp
repz
add
cmp
add
aas
push
cmp
cwde
xlat
sub
into
data16
pop
das
mov
xchg
jnp
xor
mov
shl
idiv
inc
outs
out
mov
mov
push
pop
rcl
xchg
mov
mov
rol
push
push
inc
xchg
lea
push
aaa
pop
sbb
shl
clc
pusha
enter
inc
xor
push
inc
inc
stos
jmp
call
ret
inc
mov
jmp
sub
cmp
dec
ss
pop
mov
or
adc
xchg
lahf
or
xor
imul
mov
in
inc
and
jmp
scas
fiadd
sub
cmp
jle
inc
adc
(bad)
xlat
pop
out
adc
add
inc
or
xchg
add
cmp
nop
or
loopne
leave
jge
repnz
mov
inc
arpl
pop
mov
in
xchg
fs
xchg
test
ror
pop
sar
sbb
ror
xchg
clc
xchg
cs
cmp
cmp
je
daa
addr16
push
hlt
lds
and
loopne
lods
ins
sub
xor
sbb
inc
mov
mov
adc
gs
mov
and
fdivr
pop
jb
sbb
(bad)
mul
add
dec
repz
xchg
and
push
shr
(bad)
pop
mov
xchg
push
push
test
xchg
dec
out
sub
xor
aam
jg
mov
jge
mov
xor
sub
and
push
les
mov
or
outs
ja
add
mov
add
adc
jmp
and
test
add
pop
pop
clc
dec
sub
jl
inc
jno
jns
sbb
inc
mov
sub
mov
ret
mov
ficomp
sbb
in
cmp
retf
or
rol
sub
and
sbb
add
mov
fsub
adc
aaa
dec
dec
mov
adc
dec
inc
jne
jmp
or
dec
dec
adc
in
outs
xor
inc
addr16
cmp
jne
xchg
sbb
sub
jo
int3
dec
xor
adc
cmp
dec
lock
les
aaa
cs
xor
mov
push
inc
mov
add
xchg
inc
adc
fstp
inc
mov
mov
xor
iret
xchg
mov
inc
dec
inc
inc
dec
add
inc
aam
or
nop
push
xchg
bound
lahf
ins
imul
ret
adc
dec
adc
or
pop
mov
mov
fcom
call
mov
inc
adc
movs
adc
mov
dec
push
in
or
sbb
ret
sub
xor
pop
add
mov
mov
inc
shr
push
push
dec
fnstenv
push
sbb
push
xchg
(bad)
(bad)
add
dec
sbb
or
jle
imul
ins
dec
pop
xchg
pop
xchg
sub
inc
adc
je
jg
mov
aam
add
rol
mov
outs
adc
shr
push
clc
jmp
jp
mov
cmp
fild
repz
js
or
rcl
sub
lock
and
pop
fld
mov
adc
mov
cmp
std
sbb
ins
sub
pop
and
add
fidiv
adc
push
shl
sbb
xor
or
add
adc
cmp
ss
aaa
inc
xor
and
push
add
hlt
call
and
or
cmp
or
or
aam
sub
add
xchg
dec
and
push
or
js
fstp
inc
mov
and
dec
mov
nop
sbb
push
mov
add
mov
popw
sbb
jmp
je
mov
cs
fstp
push
dec
sub
and
inc
and
call
dec
test
inc
and
call
push
mov
sbb
jmp
fimul
outs
cmp
int3
or
repnz
mov
dec
ds
aam
sbb
mov
out
cmp
popa
clc
push
sub
sbb
shl
in
cmp
es
pushf
aam
test
test
mov
mov
daa
or
fwait
push
jno
mov
cmp
jp
mov
fmul
xchg
pop
xor
add
call
mov
add
das
push
mov
mov
mov
dec
fcomp
inc
fsub
nop
inc
ja
(bad)
and
jle
fcomp
dec
xchg
inc
ja
or
in
adc
fmul
and
push
xchg
add
and
cwde
lock
or
jns
add
adc
mov
mov
movq
sub
lock
adc
add
push
xor
adc
fwait
shl
inc
test
je
sub
inc
add
and
icebp
dec
test
jle
hlt
xchg
and
jg
mov
pop
adc
mov
or
xchg
add
xchg
shl
or
add
out
popf
xchg
les
fwait
xchg
icebp
bound
cmp
out
push
push
cli
arpl
cli
pop
fbstp
inc
push
mov
imul
fdivr
fchs
pop
dec
mov
sub
pop
or
cmp
xor
popa
es
call
push
add
test
fcom
sub
add
push
add
add
pop
shl
rol
pop
mov
imul
add
xchg
dec
ret
ror
cmp
pop
fwait
adc
out
enter
push
adc
loopne
add
or
sub
cli
bound
mov
dec
push
sbb
out
cwde
xchg
and
(bad)
inc
add
in
int
imul
add
push
push
or
cs
dec
(bad)
dec
cld
inc
retf
(bad)
xor
sub
xor
pushf
push
dec
adc
in
loop
sub
inc
aam
leave
add
dec
shl
or
call
push
(bad)
int
not
movs
jo
sub
cld
cs
fsubr
popa
pop
dec
in
jge
and
and
cli
cli
sbb
ret
int
mov
test
mov
loopne
sbb
jmp
sbb
iret
sub
or
push
inc
clc
mov
aas
aas
adc
push
mov
pop
ffree
inc
iret
mov
call
and
mov
lahf
test
push
mov
sbb
rol
push
sti
push
inc
pop
inc
push
mov
mov
bound
adc
and
inc
sahf
fld
nop
xchg
fs
sbb
jle
add
jge
cmp
jne
call
mov
sti
mov
cmps
cli
pop
test
add
arpl
push
sbb
pusha
inc
xor
pusha
loop
in
pusha
mov
lea
mov
sbb
and
pop
loope
add
stc
ret
push
mov
dec
dec
dec
push
js
sub
mov
add
inc
push
push
adc
dec
mov
or
xchg
call
fist
and
jecxz
push
xor
call
jae
cmps
loopne
dec
xchg
inc
add
dec
inc
push
add
cmp
adc
es
dec
test
pop
imul
adc
mov
dec
rol
mov
push
pop
mov
ins
push
or
mov
test
dec
loop
xchg
cmp
jne
popa
push
mov
push
push
mov
fwait
pop
push
and
xchg
sbb
dec
(bad)
cmp
or
jno
les
xchg
aaa
es
inc
xchg
sbb
add
ret
sbb
popa
dec
or
dec
mov
arpl
arpl
sbb
xor
cmp
leave
dec
and
test
cwde
rol
sub
jmp
pop
rcr
aas
mov
adc
enter
in
jnp
test
push
add
fiadd
fsubr
sub
arpl
mov
lock
out
movs
hlt
jge
xor
push
rol
ins
adc
inc
and
and
pop
pop
add
fmul
(bad)
pop
inc
cmp
imul
sbb
and
adc
or
pop
iret
mov
inc
add
dec
sbb
lock
fimul
out
daa
bound
clc
cmps
adc
out
cli
and
div
or
push
rcl
call
inc
inc
jge
out
inc
mov
mov
(bad)
(bad)
(bad)
jmp
sbb
lock
mov
add
cdq
and
or
pop
adc
in
inc
cwde
mov
or
dec
enter
push
fadd
mov
jb
lea
or
push
adc
xchg
test
xor
loope
or
adc
jbe
xchg
pop
xchg
in
push
bound
in
and
pop
cmp
jne
cmp
jbe
push
jmp
lods
rcl
ds
clc
movs
mov
rol
inc
sar
loope
adc
xor
lods
cld
jnp
mov
and
movups
jmp
jp
add
cwde
lods
push
test
stos
aas
cmp
or
inc
mov
mov
dec
lock
cmp
dec
and
inc
test
cmova
movs
xchg
add
push
(bad)
add
shr
adc
pop
sub
imul
add
inc
push
inc
retf
gs
push
mov
lahf
xchg
ficomp
test
dec
ret
jg
je
ins
push
sbb
sbb
jnp
adc
add
add
shl
pop
imul
or
inc
dec
inc
and
inc
jmp
inc
adc
scas
mov
dec
xor
test
adc
inc
pop
or
lods
movs
pop
imul
adc
dec
dec
je
dec
inc
jne
xor
xlat
push
adc
cmps
adc
rcl
test
xor
fiadd
cmps
out
ins
data16
jns
sub
mov
test
adc
sbb
cmps
and
rcr
push
push
mov
(bad)
ror
jmp
clc
jmp
inc
leave
xor
add
inc
jecxz
pusha
inc
jmp
pop
mov
sti
add
int
inc
mov
cmp
mov
dec
xor
jmp
add
jmp
test
(bad)
test
mov
int
ficom
mov
mov
inc
add
or
push
jmp
loopne
jp
retf
pop
adc
push
ins
dec
dec
xor
add
scas
daa
dec
mov
and
adc
jl
in
cdq
call
add
repz
pop
xor
xchg
inc
inc
or
pushf
cdq
xchg
adc
jg
xchg
add
add
push
je
stos
(bad)
pop
inc
sub
dec
push
jae
or
cmp
jbe
mov
inc
aaa
xor
pop
mov
add
nop
pop
adc
or
jl
vmwrite
pusha
push
cmp
icebp
ja
ss
je
ss
xor
push
daa
adc
push
ret
sub
shl
rcl
ja
jno
das
sub
fnsave
mov
cmps
add
push
adc
call
add
cmp
xchg
jo
imul
ins
loop
test
push
repz
mov
and
inc
loopne
fst
out
push
mov
add
dec
cmp
xlat
sbb
jmp
rol
and
out
sub
or
adc
and
(bad)
sbb
sub
push
loopne
mov
add
loopne
pushf
sbb
sub
clc
hlt
jmp
and
adc
push
push
mov
xor
bound
xlat
or
or
sbb
push
sbb
pop
test
jl
push
mov
mov
fsub
push
fdiv
loopne
sbb
fidivr
or
ss
inc
pop
xor
adc
aam
fwait
pop
aaa
or
ret
in
ins
dec
das
add
pop
ins
inc
in
scas
mov
cmp
pop
mov
sbb
or
inc
pusha
push
nop
outs
xchg
out
int3
sub
push
push
lea
xchg
push
cld
add
ins
mov
pop
pop
and
jmp
call
fsubrp
adc
adc
add
xchg
add
inc
inc
ja
sbb
cmp
call
in
ins
or
mov
in
pop
or
push
in
sar
add
shl
adc
inc
pop
je
scas
loopne
(bad)
ins
adc
(bad)
test
xor
xor
jb
shl
ja
dec
or
jbe
enter
sar
dec
in
cmps
add
inc
or
push
add
push
sub
add
and
add
test
push
(bad)
sub
mov
sub
(bad)
jecxz
push
and
dec
enter
and
rcr
push
push
push
clc
sbb
inc
adc
iret
xchg
mov
or
aas
sar
xchg
and
sbb
and
inc
mov
pop
mov
jmp
mov
sti
outs
dec
dec
add
add
(bad)
repnz
shl
lock
push
xor
and
push
dec
lods
nop
and
xlat
test
dec
and
in
mov
xor
xchg
loop
adc
cmp
jmp
lahf
in
sahf
rcl
cld
cld
jl
jns
cmp
rol
pop
pop
inc
or
sbb
add
dec
and
cmps
dec
xor
movs
hlt
mov
movs
add
rcl
mov
cs
inc
inc
inc
wrmsr
mov
gs
mov
add
sub
or
mov
or
sbb
shl
or
push
clts
pop
icebp
repz
scas
ins
out
movs
pusha
loopne
clc
add
shl
push
push
adc
adc
xchg
jg
or
sbb
add
sbb
xor
mov
cmp
sbb
ret
add
add
cs
push
sbb
div
or
inc
and
out
or
mov
inc
gs
adc
or
mov
add
bound
add
mov
sbb
or
in
push
sbb
jmp
inc
dec
push
movs
cmp
xchg
dec
ins
inc
sbb
pop
xor
xchg
js
push
stos
cwde
add
push
and
rcr
daa
(bad)
or
and
xchg
push
adc
and
inc
push
mov
add
and
or
js
adc
cmp
jle
cmp
imul
(bad)
sub
and
and
lds
popf
mov
idiv
jnp
mov
inc
sub
add
retf
push
push
add
push
aad
retf
xchg
jmp
mov
pop
inc
xchg
pop
ret
call
or
sub
(bad)
cwde
sub
sbb
test
cmp
jl
inc
cmp
in
outs
xchg
pop
mov
jl
inc
pop
jmp
shr
je
stos
je
inc
inc
xchg
or
mov
xchg
add
psrlq
jo
add
ret
scas
sti
add
sbb
xor
push
push
shl
mov
bnd
fisub
push
jae
push
lock
addr16
xor
lea
fimul
fisttp
push
leave
xor
pushf
sahf
push
cs
dec
sahf
inc
pop
cmp
mov
cmp
xor
loopne
xor
jmp
sub
loopne
sub
stos
cmp
fistp
and
repnz
sahf
xchg
jmp
push
adc
dec
loop
fwait
add
pop
rcr
inc
inc
jg
stc
ds
and
sub
imul
xor
or
pop
and
call
sbb
jbe
adc
push
aam
lock
inc
and
outs
sbb
add
pop
add
pop
(bad)
cs
mov
add
adc
sbb
in
xchg
push
add
jbe
add
retf
mov
sub
push
inc
add
mov
add
pop
push
pusha
sahf
pop
fs
push
pop
scas
mov
mov
add
adc
push
inc
pop
cdq
and
out
jge
fdiv
ja
cmp
ret
mov
adc
mov
loopne
jno
add
add
mov
add
mov
or
push
mov
sbb
leave
xchg
add
add
inc
pop
push
sub
ret
pop
add
sub
inc
or
push
ret
xchg
push
adc
push
jno
sysret
dec
pop
dec
loop
add
push
mov
dec
xchg
and
and
mov
and
iret
mov
or
push
mov
es
or
pop
neg
sbb
xor
pop
adc
push
xchg
inc
push
ins
jge
outs
mov
dec
mov
pop
rcl
xor
xchg
out
inc
xor
xor
push
jns
sub
xor
cmp
cmp
outs
test
and
dec
retf
add
inc
inc
push
push
cmp
gs
add
adc
cmp
mov
pusha
adc
cmp
push
add
test
dec
pop
sbb
les
fiadd
stos
push
push
lods
shl
stos
fisubr
push
int
cwde
push
mov
lea
out
push
pop
add
jae
mov
dec
push
test
dec
mov
xchg
add
int3
mov
mov
sub
clc
or
bound
or
fistp
outs
jb
sbb
mov
or
fnsave
and
cmp
add
or
iret
ins
cmp
or
addr16
ss
adc
je
dec
ins
and
fsubr
jnp
fcomp
xor
mov
das
je
add
iret
push
dec
iret
enter
inc
sti
mov
sub
xchg
mov
outs
pop
rol
outs
arpl
or
push
xor
sub
or
mov
repz
gs
in
sub
rcr
add
sbb
mov
jmp
sbb
jmp
sub
lods
mov
stc
fs
adc
xchg
and
ins
adc
and
sbb
mov
sahf
xchg
add
jg
jbe
movs
movs
sub
xor
(bad)
jae
mov
pop
std
cmp
mul
mov
stos
or
daa
sub
in
dec
imul
or
dec
mov
(bad)
loope
sub
push
les
add
cpuid
adc
xor
cmp
std
lods
inc
imul
pop
loope
retf
jecxz
(bad)
push
lods
lock
arpl
jne
push
mov
pop
ss
add
add
arpl
add
test
dec
movs
ins
mov
mov
jne
sar
pop
cmp
or
push
cmp
ror
mov
je
sbb
aas
add
out
and
sbb
fcomp
or
outs
inc
adc
xor
push
dec
pop
xchg
adc
je
int3
test
mov
xor
or
xchg
add
retf
cmp
or
ds
adc
test
inc
arpl
push
jbe
dec
sbb
es
and
sbb
add
inc
and
pop
mov
je
or
add
inc
inc
out
adc
pop
inc
inc
inc
inc
jl
mov
inc
cld
and
add
jecxz
mov
in
fdivr
mov
sbb
loopne
jo
daa
xchg
ins
test
iret
shr
ja
xor
pop
pop
push
and
push
stos
(bad)
out
push
and
and
ret
mov
jb
push
pop
cmp
inc
(bad)
and
out
lea
add
ret
test
pop
retf
mov
xor
push
lock
mov
test
test
add
pushf
add
cwde
mov
push
lock
mov
sub
ins
xchg
loop
retf
ja
std
adc
js
push
mov
mov
inc
je
clc
out
sub
cmp
in
(bad)
mov
(bad)
sbb
jae
into
cmps
push
cmp
adc
clc
(bad)
mov
adc
adc
sub
and
aam
dec
ds
xchg
pop
sti
cmp
ins
add
out
ret
add
adc
shl
repz
pop
das
add
sar
add
or
stos
dec
outs
push
mov
or
mov
iret
pop
fnstenv
test
or
and
or
adc
mov
and
adc
jbe
pop
dec
adc
or
fisttp
xor
xchg
add
fcmovb
js
pop
cs
inc
shl
xchg
push
add
push
mov
out
dec
adc
add
jae
mov
or
add
rcl
inc
add
or
jnp
or
cld
xor
inc
and
xchg
mov
or
xlat
add
sub
prefetch
or
lahf
dec
fcom
imul
mov
push
jmp
inc
std
das
mov
imul
jmp
dec
dec
mov
repnz
loope
int
clc
mov
(bad)
cwde
push
or
jle
dec
push
push
or
dec
add
mov
or
and
data16
call
icebp
xchg
adc
or
hlt
sbb
or
inc
fsub
or
dec
inc
dec
das
or
int3
lods
jnp
pop
or
fs
sbb
jns
sbb
pop
pusha
inc
pushf
ins
clc
or
lahf
xchg
adc
jo
movnti
adc
(bad)
in
dec
dec
adc
xchg
and
add
jo
push
mov
rol
jge
fs
sub
add
or
push
mov
movups
retf
popa
mov
mov
stc
add
or
adc
or
int
mov
or
mov
push
sub
fs
and
pop
inc
popf
add
sbb
lahf
jl
outs
mov
push
or
pop
pop
inc
inc
and
mov
sbb
dec
mov
dec
mov
cmps
mov
adc
add
or
xchg
inc
and
dec
jae
push
pop
push
adc
or
mov
jns
add
and
je
pop
xor
js
or
(bad)
leave
push
mov
(bad)
mov
fsub
inc
add
mov
mov
inc
add
add
mov
pop
adc
addr16
ss
add
or
push
cmp
and
add
sub
lds
adc
cwde
sub
inc
adc
or
push
dec
adc
lea
lods
push
fimul
out
test
cmp
iret
mov
add
xchg
adc
push
rcl
and
cmp
lock
xor
jge
test
ins
shl
jle
sub
pop
mov
jg
div
inc
or
mov
push
mov
stc
int
inc
popa
shl
test
mov
leave
sbb
lahf
push
adc
gs
add
test
xor
mov
lods
and
ins
mov
jo
pop
sub
sub
ins
or
add
mov
pop
xor
dec
pop
xor
xchg
fsubrp
test
out
or
inc
xchg
scas
je
pop
movs
push
shl
test
fwait
es
add
xchg
nop
or
cs
or
adc
inc
movs
inc
daa
sbb
and
sub
push
les
cli
inc
adc
cmp
push
sbb
mov
cmp
loopne
push
adc
fiadd
mov
jl
hlt
xor
movs
xchg
sub
hlt
and
data16
cwde
mov
xor
ins
add
fstp
jns
inc
add
mov
xchg
add
inc
repnz
inc
dec
hlt
sbb
xlat
push
push
ss
daa
jecxz
push
popf
adc
loopne
mov
pop
imul
shr
add
sbb
push
rol
jmp
sub
sub
xchg
add
pop
dec
out
adc
add
push
pop
enter
loopne
stc
stc
jbe
ss
mov
adc
or
pop
jp
mov
add
nop
and
jge
lods
inc
js
test
push
mov
xchg
lea
(bad)
sbb
pop
adc
jne
add
xchg
int3
repz
loopne
pusha
lock
aas
daa
loopne
dec
xchg
mov
jnp
fdiv
jmp
cdq
xor
pop
out
mov
add
ins
pop
jbe
add
fidiv
inc
movs
nop
mov
xchg
mov
jno
jecxz
sbb
dec
cmc
jmp
xor
pop
aad
sub
xchg
std
sub
(bad)
pop
jge
or
sahf
outs
xor
bound
fdivr
dec
sbb
sbb
and
add
push
adc
mov
aas
mov
sub
icebp
in
inc
push
js
enter
ror
mov
rol
push
aam
sbb
dec
mov
push
mov
cmp
cmps
ficom
sub
mov
lahf
ins
repnz
or
cld
or
(bad)
call
mov
in
sbb
(bad)
fcom
dec
test
icebp
xchg
hlt
jmp
aad
xor
outs
das
clc
or
sbb
sbb
sub
gs
push
arpl
xor
cmc
neg
ret
sbb
lea
cmc
lods
les
mov
clc
pop
in
sbb
xor
inc
popa
mov
and
or
mov
xlat
pushf
add
xor
pop
leave
inc
pusha
or
add
ins
xlat
mov
and
cdq
jb
fdivr
and
mov
pusha
add
js
push
shr
mov
dec
and
cmp
pop
(bad)
dec
ins
in
imul
hlt
fisub
sub
jns
sub
sub
(bad)
loopne
jno
js
jmp
pop
xchg
sub
and
xchg
adc
loope
loope
loopne
enter
ds
xchg
jle
mov
dec
fcmovb
gs
leave
mov
add
add
fdiv
mov
sbb
push
push
jge
fmul
in
mov
ss
mul
or
out
adc
movs
dec
cmp
(bad)
hlt
shr
fidiv
scas
mov
jle
outs
sub
int3
lods
xlat
in
push
sahf
or
lea
add
fidivr
inc
mov
and
paddb
aad
es
pop
xchg
das
mov
(bad)
outs
(bad)
pop
stos
std
push
retf
in
retf
nop
das
inc
nop
mov
xchg
xchg
fcomi
enter
(bad)
(bad)
xchg
dec
(bad)
xchg
(bad)
stc
cmovle
cmp
in
sub
mov
xchg
mov
inc
cli
call
sbb
and
je
sbb
push
add
add
add
add
inc
adc
add
or
add
adc
push
enter
mov
add
add
push
mov
mov
mov
mov
mov
mov
(bad)
(bad)
call
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
ds
test
(bad)
in
(bad)
(bad)
jnp
scas
test
jmp
jmp
and
xor
dec
dec
dec
mov
push
mov
repz
push
int3
pusha
jo
es
mov
dec
pop
call
mov
dec
repz
sub
fnstcw
dec
repz
pop
push
sbb
out
mov
xchg
arpl
mov
push
shl
sub
push
js
les
fwait
iret
shr
pop
js
test
iret
repz
lods
cld
pop
sub
neg
push
clc
mov
push
ins
ds
sahf
push
push
xor
cmp
push
mov
ins
mov
shr
pusha
xor
fdivrp
into
idiv
mov
xchg
and
xor
adc
ins
call
cmps
mov
dec
loope
mov
inc
cmps
stc
and
sub
je
pop
adc
pop
push
or
je
pop
aam
pop
adc
pop
dec
mov
or
and
iret
xor
dec
ins
push
inc
add
push
and
addr16
es
(bad)
xchg
pop
push
enter
dec
jge
ret
shl
jge
sbb
add
mov
xchg
inc
mov
je
pop
cmp
xor
or
sub
mov
mov
pop
sbb
pop
xchg
xchg
dec
mov
outs
pop
mov
jg
mov
adc
cmp
cmp
(bad)
cwde
iret
je
pop
sbb
inc
mov
jecxz
mov
ret
leave
enter
shl
and
cmps
pop
imul
xchg
pop
jb
outs
mov
mov
mov
scas
packssdw
popa
mov
and
leave
icebp
mov
sbb
push
inc
adc
lds
dec
leave
scas
loope
jb
fnstcw
xor
fmul
pop
xchg
scas
stos
xlat
pop
lods
sub
push
pop
mov
mov
adc
sbb
mov
repz
pop
cmp
(bad)
fild
test
sub
mov
add
mov
inc
and
or
loopne
ja
mov
inc
in
dec
in
mov
mov
and
jae
sbb
sbb
dec
lods
je
ss
inc
push
sub
je
pop
pop
adc
clc
push
test
popa
dec
pop
sbb
adc
(bad)
mov
fadd
jge
nop
ja
ins
cdq
lock
mov
mov
xchg
enter
mov
xor
enter
ja
mov
fadd
xchg
and
enter
mov
enter
neg
xchg
inc
fs
enter
scas
aam
mov
add
inc
stos
pop
inc
neg
adc
push
pusha
xor
scas
inc
or
sbb
jno
adc
call
inc
adc
jns
je
sbb
ficom
or
outs
dec
xor
and
nop
add
pusha
xor
ret
data16
or
test
cmp
pop
inc
or
inc
mov
lahf
mov
or
mov
lods
(bad)
mov
sub
push
sahf
sar
int3
add
mov
pop
sub
vpcmpgtw
and
call
scas
in
in
add
ror
push
push
or
aas
pop
mov
or
mov
sar
pop
jo
adc
dec
mov
or
sbb
push
test
aas
mov
inc
cli
xchg
cmp
add
popf
addr16
dec
push
ret
or
pop
(bad)
nop
ins
(bad)
fisttp
aaa
push
pop
inc
(bad)
and
cld
cwde
pop
xchg
xchg
outs
push
fwait
pop
rcr
pop
iret
cmp
in
or
outs
cld
cdq
repz
leave
dec
jae
mov
cmp
add
cwde
rcr
and
dec
pop
into
xor
add
cmp
sbb
pusha
pushf
scas
and
int3
aad
adc
adc
add
or
outs
xchg
inc
xchg
sbb
push
test
les
addr16
das
dec
xor
sbb
push
jecxz
jae
push
xchg
push
jo
adc
or
arpl
adc
nop
pop
adc
call
xchg
mov
fidiv
dec
shl
dec
call
(bad)
mov
mov
cmp
sbb
(bad)
and
sbb
or
jb
or
inc
js
pop
cmc
or
test
das
scas
es
sub
sbb
mov
push
push
dec
rol
test
jns
add
push
and
sbb
and
jns
push
add
dec
cmp
add
push
retf
or
push
and
mov
nop
call
add
push
aam
push
rol
adc
ret
in
xchg
and
es
jecxz
add
dec
cmp
pop
cmp
push
sub
popa
push
sbb
sub
sub
sub
sub
inc
or
imul
retf
sar
cmp
push
enter
add
ins
xchg
dec
jb
xor
sbb
xlat
and
sub
pop
inc
nop
pop
mov
jl
test
pop
imul
dec
pop
or
popa
leave
xor
mov
enter
fwait
add
ss
inc
mov
aaa
movs
cmp
nop
add
loopne
cmp
mov
cmp
dec
or
call
dec
cmp
inc
mov
inc
mov
and
cmp
cmp
cmp
ins
and
cmp
mov
sbb
retf
xor
inc
fst
fdivr
rcl
adc
jns
cmp
or
loopne
jnp
sbb
push
adc
pop
fadd
sbb
mov
fs
loope
aas
or
arpl
and
enter
sub
push
and
fild
das
cwde
adc
and
and
outs
inc
jo
in
(bad)
in
shl
sub
cdq
dec
xor
or
es
mov
push
stc
dec
adc
and
fsubp
ins
adc
inc
mov
jo
add
dec
or
adc
(bad)
test
shl
push
or
dec
mov
nop
(bad)
rcl
mov
push
aam
mov
push
or
ror
fs
out
sub
pop
push
mov
aaa
mov
inc
(bad)
das
lds
test
pop
shr
push
inc
fwait
inc
sbb
dec
scas
xchg
or
stc
mov
add
mov
xor
xchg
pop
pop
dec
or
pop
sahf
push
or
adc
ret
and
inc
clc
dec
(bad)
nop
add
test
pop
inc
call
adc
pop
pop
add
xor
or
pusha
xor
or
jo
cmc
push
inc
push
jns
xor
inc
push
inc
fs
xor
inc
gs
xor
fs
jb
in
mov
push
addr16
nop
inc
es
add
test
pop
jb
push
rcl
pusha
imul
dec
inc
push
das
loope
adc
push
cli
add
mov
mov
and
pop
sub
pusha
frstor
push
push
cmps
gs
ins
jns
pop
inc
pusha
mov
push
or
outs
outs
sbb
pop
outs
push
add
sbb
or
jl
std
add
sbb
sbb
sbb
bound
scas
aam
sbb
mov
sbb
sahf
sub
sbb
(bad)
sbb
dec
jb
sbb
sbb
sbb
sbb
mov
fiadd
mov
sbb
cdq
mov
loope
mov
sbb
outs
(bad)
mov
sbb
mov
sbb
mov
sbb
mov
mov
repz
movs
cmp
sbb
sbb
stos
rcr
mov
cmps
bound
sbb
sbb
sbb
popa
xchg
sbb
scas
aad
pop
test
sbb
mov
sbb
test
cwde
ror
add
push
jmp
imul
sbb
iret
and
sub
xor
pushf
in
sub
sub
fild
movs
lds
js
sub
dec
scas
mov
into
es
xor
and
or
adc
imul
mov
mov
mov
mov
mov
into
test
call
push
push
cmp
ret
repz
nop
mov
lock
add
adc
sub
push
fistp
dec
scas
inc
push
xchg
jns
and
xchg
stos
adc
and
sbb
adc
and
stos
mov
aad
sbb
fs
call
add
jae
dec
ja
mov
add
push
daa
adc
das
mov
rol
mov
sar
mov
jne
fist
xchg
sub
(bad)
rcr
and
(bad)
mov
sbb
push
(bad)
xor
xor
xor
mov
xor
xor
sbb
adc
inc
and
test
or
mov
jmp
in
mov
inc
shr
mov
cmp
sbb
mov
aaa
dec
jle
push
xchg
jl
adc
or
popa
push
nop
xlat
popf
ds
add
test
jle
in
push
cli
js
or
xor
es
cdq
push
cs
or
add
push
adc
jecxz
xchg
mov
test
ins
aam
add
or
xor
and
outs
pushf
test
cmps
cmp
push
adc
pop
data16
and
je
cmps
shl
fistp
push
inc
sub
das
adc
pop
xlat
cmp
paddb
in
pusha
xchg
xchg
movhps
add
and
jge
add
loope
inc
cs
loope
retf
inc
sub
sub
arpl
in
push
add
and
pushf
push
es
push
add
mov
fiadd
pop
xor
(bad)
and
je
test
xchg
lea
add
mov
ins
add
adc
cmp
test
retf
fwait
js
ins
jns
int3
pop
mov
(bad)
mov
pop
inc
and
das
jae
pop
sbb
cmc
add
aam
dec
inc
movs
lods
mov
jmp
pop
xchg
ins
sub
mov
sub
test
in
das
mov
add
cwde
out
das
inc
repnz
pushf
add
sahf
and
inc
mov
push
cmp
cdq
(bad)
fwait
push
cmp
mov
test
fild
xlat
les
push
mov
jns
xchg
xchg
daa
mov
(bad)
daa
mov
xchg
aad
es
pushf
pushf
pushf
in
mov
dec
adc
icebp
ss
xchg
dec
fimul
mov
mov
dec
pop
aad
mov
in
or
push
or
push
fcomp
xchg
retf
jae
mov
add
sub
xchg
xchg
in
sbb
lods
push
add
imul
mov
xadd
adc
inc
mov
sbb
mov
xchg
popa
push
inc
in
(bad)
and
jae
push
cmp
ja
xor
or
mov
and
jp
mov
jns
jo
mov
dec
add
and
div
and
add
mov
or
dec
or
mov
push
jno
adc
nop
xchg
js
pop
iret
and
imul
add
mov
pop
and
add
mov
and
and
test
and
xchg
mov
and
mov
and
js
enter
xchg
and
mov
sub
and
jb
xadd
push
jge
xor
xor
cmps
and
jb
(bad)
sbb
jp
add
and
sbb
dec
dec
pop
sub
xchg
(bad)
dec
scas
mov
push
add
jge
imul
test
test
pop
int
mov
cmp
jp
mov
xchg
mov
adc
cs
(bad)
pop
mov
call
mov
js
sbb
pop
xchg
sbb
xor
or
stos
call
int
add
popf
mov
mov
or
xchg
add
(bad)
jbe
or
add
ror
ss
es
or
xchg
add
sub
mov
inc
in
pushf
adc
sbb
push
sbb
and
adc
test
or
inc
push
or
sahf
pop
jmp
xchg
mov
inc
inc
mov
sub
xchg
pop
inc
nop
clc
mov
adc
xchg
add
outs
sub
stos
push
xchg
dec
cwde
movs
adc
jns
mov
jle
and
or
xor
sub
retf
lea
in
xchg
lea
xor
xor
arpl
js
xchg
mov
sbb
and
inc
int3
mov
popa
xor
and
fwait
mov
xor
imul
and
or
cmc
cmp
adc
jo
test
sub
(bad)
mov
add
rcr
mov
push
cmp
push
sar
jmp
xor
dec
or
sbb
nop
add
jno
jno
ret
daa
sub
adc
dec
or
iret
sub
outs
cmp
or
push
inc
and
sub
xor
mov
adc
sub
add
push
push
add
add
inc
lahf
int3
or
inc
add
ret
push
cmp
mov
loop
add
fisub
loopne
xor
ret
lahf
cmp
mov
inc
xchg
jge
push
push
mov
cmp
imul
ret
dec
fwait
mov
or
inc
cmps
add
dec
nop
dec
sbb
lods
neg
dec
arpl
jmp
std
push
dec
fwait
mov
xor
pop
lahf
dec
les
pop
push
xor
and
inc
jo
aam
test
adc
cmp
and
or
and
xchg
lea
and
vunpckhps
dec
popf
pop
or
(bad)
jmp
out
and
mov
pop
mov
pop
mov
fnsave
sbb
jo
sub
add
push
loope
cmp
sbb
int3
add
movs
xchg
and
fcmovb
add
mov
xor
mov
int
dec
dec
dec
xor
pop
jae
arpl
jo
sahf
pop
mov
rol
add
lds
jae
sub
adc
pop
nop
lahf
mov
movs
sar
inc
push
lock
mov
mov
repz
cmp
bound
sbb
push
push
lds
mov
cmp
push
add
leave
jge
sub
je
sbb
(bad)
jge
cmp
mov
loop
or
imul
rcr
add
xchg
pop
and
ret
loop
mov
movs
dec
retf
push
add
leave
push
je
(bad)
and
lock
dec
ret
adc
popa
sbb
dec
ins
or
test
mov
push
bound
fcom
test
frstor
and
add
sbb
jae
and
pop
add
add
and
or
outs
sbb
xor
lds
arpl
xor
shr
(bad)
jl
pop
adc
pop
pop
jmp
push
push
mov
je
or
pushf
js
and
repnz
int3
push
leave
rcl
into
xchg
fsubr
sbb
sub
mov
pop
pop
jae
mov
mov
imul
aas
cmps
xchg
dec
out
(bad)
sti
ret
popf
in
outs
cs
and
adc
adc
aad
add
dec
popa
mov
mov
dec
pop
mov
sub
outs
ins
das
lds
inc
loopne
das
jmp
lahf
mov
sub
pop
sbb
mov
and
adc
dec
test
mov
arpl
out
add
or
and
xor
(bad)
iret
(bad)
xlat
(bad)
mov
lds
inc
mov
arpl
add
int3
mov
pop
retf
shl
cmp
sub
mov
es
mov
mov
bound
in
add
or
cmps
pop
sub
pop
xchg
ss
mov
mov
mov
call
jmp
mov
cmp
(bad)
add
inc
int
test
pushf
fnstenv
rol
scas
pop
jmp
jnp
mov
xor
dec
adc
jge
dec
fs
and
push
rcl
(bad)
shl
xchg
inc
adc
outs
sahf
xchg
mov
sbb
lock
mov
loop
jo
mov
cld
or
push
xchg
jns
sub
xchg
inc
sbb
dec
pop
adc
aas
xor
push
push
into
or
pop
pop
lods
xchg
sti
or
inc
sahf
fwait
xor
or
lea
add
in
or
inc
ret
dec
dec
leave
sub
add
dec
rcr
sub
call
mov
mov
dec
rcl
jb
add
js
cmps
mov
sub
adc
out
pop
and
das
popa
add
jno
mov
fidiv
xchg
popa
cmp
sub
ss
add
dec
dec
inc
and
cmp
or
add
push
dec
in
add
pop
(bad)
shr
shr
packsswb
pushf
pushf
popf
fisttp
ror
dec
dec
dec
je
hlt
and
and
into
sbb
push
mov
leave
leave
enter
aad
mov
fs
jmp
in
xchg
ret
xlat
jb
jb
push
cdq
shr
cmp
jns
fmul
mov
mov
call
xor
adc
leave
inc
and
xchg
pushf
dec
dec
push
fimul
aas
movs
mov
lods
je
pop
mov
lds
push
adc
jne
in
fdivr
bound
bound
cmp
test
fadd
xor
pop
fs
xchg
inc
imul
mov
inc
push
push
repnz
inc
mov
cmps
aad
pushf
xor
pop
aad
mov
mov
lods
stos
mov
movs
shl
loopne
jge
aad
add
dec
enter
add
ins
jo
in
arpl
add
fstp
aas
inc
or
sbb
pop
pop
and
mov
mov
outs
out
dec
popa
or
ficomp
(bad)
or
ficomp
ret
ret
(bad)
dec
add
cmps
mov
adc
cmp
cdq
push
inc
push
pop
or
out
mov
loopne
pop
out
push
retf
sbb
xchg
xchg
jbe
xchg
ja
sahf
cmps
mov
sahf
jmp
jbe
dec
jne
sub
mov
jno
outs
mov
inc
inc
out
(bad)
pop
rol
cmps
add
jne
cmp
ss
dec
aaa
xor
jbe
mov
and
mov
add
push
daa
cmp
push
jb
add
iret
inc
xchg
adc
cmp
or
movs
scas
push
js
add
test
cmp
push
cmp
add
pop
iret
fld
or
les
jo
stos
mov
cmp
fcmovbe
ficom
shr
add
test
mov
jno
repnz
or
cmc
add
or
sbb
adc
pop
xor
push
scas
sbb
xchg
adc
das
enter
mov
sub
push
pusha
popf
jo
mov
sahf
or
add
inc
inc
cwde
(bad)
movs
mov
ficom
sbb
and
hlt
rol
stc
add
les
push
cdq
cld
pusha
shl
adc
pop
lahf
xchg
add
push
mov
inc
shr
not
(bad)
fstp
add
popf
pop
sti
or
dec
hlt
add
pop
and
and
pmulhuw
push
ficomp
ds
xchg
or
or
xlat
mov
pop
and
pop
add
ret
pop
js
bound
pop
push
imul
push
mov
jno
pop
or
dec
mov
push
mov
add
clc
fistp
fmul
mov
shl
mov
fnsave
pop
xchg
mov
sbb
mov
mov
fadd
fbld
jns
(bad)
jmp
cmp
mov
sub
mov
(bad)
mov
in
sbb
mov
mov
mov
mov
push
enter
add
xchg
loopne
inc
mov
push
xchg
scas
stos
adc
sbb
add
mov
inc
push
push
inc
rcr
aam
seta
int
sbb
gs
dec
add
cmpps
push
movs
mov
jecxz
adc
shl
mov
mov
adc
jmp
outs
pop
mov
and
add
bound
cmp
and
push
repnz
mov
retf
cmp
test
sub
int
outs
xor
pop
xchg
inc
lods
in
add
push
add
sbb
xchg
push
shl
pop
lock
xor
xchg
push
dec
imul
add
xchg
scas
push
jmp
test
or
retf
add
xlat
(bad)
enter
sbb
adc
lods
add
mov
outs
leave
test
call
push
popa
dec
and
mov
xchg
mov
mov
cmp
mov
add
dec
xor
and
movs
nop
jl
fistp
cmp
fld
add
nop
(bad)
loope
and
pop
popf
sbb
int
xor
mov
mov
ins
ins
mov
and
and
pusha
and
xchg
cmp
movs
test
loop
bswap
push
shr
xor
out
std
push
pop
and
ins
test
dec
push
push
add
push
fs
or
movs
add
cmp
xchg
cmp
pop
sbb
adc
dec
add
add
and
pop
add
enter
cmp
push
les
add
sahf
xchg
inc
and
ret
push
loopne
mov
pusha
push
add
test
add
push
sbb
adc
aaa
dec
push
arpl
or
xor
dec
jnp
pop
nop
js
push
inc
cwde
pop
xchg
dec
jo
jo
add
jo
in
test
(bad)
mov
fidivr
ins
push
xchg
pop
aad
push
and
add
and
fidiv
push
sub
xchg
cs
sub
fwait
cwde
and
push
imul
in
add
aam
dec
ret
jnp
xchg
daa
xor
add
adc
cmp
and
xor
sub
ss
and
pop
(bad)
out
jbe
jmp
jbe
popa
call
iret
call
push
mov
adc
(bad)
ror
and
push
adc
fidivr
jmp
xchg
xchg
adc
dec
repz
pop
gs
and
jmp
cmp
inc
sbb
sub
es
sub
sub
fs
add
inc
mov
xor
sbb
or
xor
mov
jp
cmp
xor
mov
bound
mov
daa
inc
inc
test
adc
mov
mov
cmps
cmp
test
shl
adc
or
or
and
int3
sbb
pop
enter
arpl
adc
mov
fdiv
push
cmp
push
xchg
cwde
xor
push
mov
bound
mov
test
pop
pop
dec
mov
or
movs
add
add
rcl
or
(bad)
cmps
test
loopne
hlt
call
dec
or
cmps
push
jmp
sbb
cld
cmp
js
pushf
mov
hlt
sub
ins
fwait
add
push
pop
mov
push
ins
loope
aam
popf
rcl
ins
and
loop
cld
test
imul
leave
popa
xor
push
iret
in
push
mov
jo
inc
push
mov
cmp
test
lea
adc
lods
fild
enter
push
icebp
pop
cmp
inc
in
(bad)
push
(bad)
pop
out
ds
jmp
js
sub
arpl
test
sbb
cmp
adc
dec
jns
add
xchg
xchg
add
xchg
mov
test
add
punpckldq
gs
add
test
push
cmp
sbb
or
test
stos
add
adc
inc
and
dec
sbb
jle
mov
sbb
sub
pop
xchg
add
or
(bad)
sbb
mov
xor
or
dec
adc
sahf
xchg
je
mov
mov
dec
adc
mov
pop
movs
adc
add
sbb
mov
sub
and
addr16
cwde
mov
lahf
repz
fidiv
push
and
or
shl
adc
pop
cs
xor
xor
pusha
add
mov
pop
aaa
add
retf
adc
dec
pop
add
pop
fmul
or
cmp
dec
dec
push
movs
or
add
ja
outs
arpl
popa
or
cmp
lods
add
adc
cmp
sub
int
add
test
adc
mov
ror
push
add
sub
mov
inc
jl
mov
das
mov
adc
lgs
ins
lods
inc
jb
jo
je
push
pop
cmp
fwait
push
scas
push
ss
adc
adc
mov
sub
cmp
jne
sub
enter
ret
mov
fsub
cmp
cmp
shl
push
sub
mov
sbb
in
cmp
mov
fist
sbb
imul
pop
inc
jecxz
xor
rcr
sub
inc
add
pop
xor
bound
enter
mov
mov
loope
loope
mov
mov
rcr
loopne
jl
adc
mov
adc
xor
inc
shl
in
in
xchg
imul
add
sub
cmp
loopne
stc
repz
ret
add
repnz
xchg
push
repnz
test
push
adc
push
add
cwde
imul
mov
nop
inc
and
sub
sub
or
stc
mov
es
push
jl
sub
and
ins
movs
inc
in
cmps
stc
xor
int3
inc
push
loopne
lods
push
dec
add
call
cmp
cmp
imul
data16
push
mov
test
mov
fist
dec
repz
mov
xchg
das
aam
pop
jno
pop
leave
pop
popf
add
pop
push
add
cmp
dec
clc
push
push
aaa
push
ret
leave
or
xor
mov
or
and
pop
or
add
mov
push
fdivr
and
add
(bad)
daa
or
sbb
ret
jmp
(bad)
and
push
mov
push
sub
movs
or
lock
adc
rol
pop
jle
sub
push
inc
cld
jbe
jmp
push
je
and
cmp
sbb
cmps
adc
addr16
in
mov
push
xor
mov
jne
jbe
and
test
ss
sahf
adc
test
adc
jne
xor
outs
call
push
xor
jl
sti
jmp
inc
cld
cs
cld
and
pop
or
cmc
xchg
jne
or
jmp
xchg
push
movs
call
jae
fstp
inc
sbb
outs
cmps
pop
mov
adc
mov
cmp
add
je
push
mov
int
or
and
mov
jp
inc
aam
push
cmc
das
mov
enter
call
jae
hlt
mov
dec
cmp
jge
sub
push
add
test
and
add
in
cmc
outs
xor
int
mov
xchg
inc
cld
mov
add
and
mov
in
sub
clc
pop
or
or
std
lods
sub
daa
xor
ror
fild
jp
push
sbb
mov
test
jo
cwde
sbb
sbb
inc
ss
push
push
adc
cs
cmp
or
sbb
xchg
out
adc
data16
xchg
test
mov
inc
popf
je
mov
cmps
ror
adc
sbb
or
inc
pop
daa
xor
movs
mov
enter
inc
fmul
mov
cmp
movs
test
sbb
add
xor
loope
rol
or
jne
push
sub
push
or
inc
sub
inc
push
or
adc
or
out
les
push
idiv
loopne
aaa
imul
xchg
or
and
mov
mov
sub
sub
adc
dec
call
push
es
add
adc
sbb
cmp
out
mov
mov
sbb
loopne
fcmovnb
xchg
add
pop
fcom
adc
fidiv
sub
pop
dec
sbb
sub
fsubr
ins
adc
data16
pop
dec
adc
add
pop
call
pop
test
and
into
and
add
and
mov
sbb
pop
test
cld
mov
daa
push
dec
xor
adc
adc
add
mov
int
add
add
xor
rol
and
lahf
int3
stc
or
mov
mov
shl
and
pop
lock
js
adc
es
or
cwde
or
jne
loopne
pop
movs
loop
je
pop
int3
push
mov
cs
push
add
lds
xchg
mov
mov
imul
and
test
pop
call
sbb
push
add
dec
or
daa
adc
rcl
pop
retf
out
mov
sbb
mov
mov
test
cmp
sub
ds
mov
inc
add
into
inc
pop
mov
fcomp
outs
sub
add
xor
sar
or
das
dec
add
jo
sbb
pop
aas
movs
sbb
push
cmps
or
xchg
and
inc
jg
shl
pop
xchg
add
adc
les
or
in
sub
push
jmp
cs
add
fsubr
loopne
dec
cld
adc
add
pop
dec
call
and
retf
inc
push
inc
mov
mov
inc
push
add
mov
jle
or
pop
test
jecxz
push
hlt
(bad)
add
add
in
retf
add
ror
dec
call
pop
mov
or
mov
and
scas
outs
jbe
enter
out
out
in
popf
push
xor
cmp
enter
adc
push
cmp
popf
loop
enter
sub
push
sbb
push
xchg
in
push
mov
movs
add
adc
hlt
add
xchg
out
clc
cmp
and
mov
xor
aam
in
ret
gs
jb
xchg
xchg
iret
push
lahf
ins
cmp
pop
fisub
pop
ins
pop
xlat
adc
push
push
test
pop
adc
adc
cli
jae
fldenv
push
in
mov
and
mov
and
hlt
neg
jmp
pop
jne
xchg
mov
add
ins
nop
sub
je
test
aas
sbb
adc
push
mov
outs
mov
jb
in
stos
jno
fwait
je
sbb
jmp
inc
adc
inc
xor
fdiv
bound
mov
ins
jns
pop
cmp
mov
add
or
dec
mov
jle
ds
es
cmps
mov
mov
jo
mov
jl
mov
out
shr
jne
jae
bound
add
leave
shl
stos
add
inc
call
sbb
jmp
repnz
sub
cmp
push
ret
por
or
stc
jmp
inc
inc
or
pop
cmp
sti
push
cmp
mov
cs
jmp
xor
retf
push
push
mov
in
test
sub
inc
jne
ds
ret
cmp
jo
jae
movs
and
(bad)
scas
add
in
test
or
inc
push
mov
mov
enter
cdq
cmp
add
sbb
aam
adc
xor
out
pop
gs
and
or
je
nop
popa
outs
movs
ss
jmp
sub
push
pop
pop
ret
inc
fstp
jne
and
add
push
jp
jns
iret
repz
or
inc
dec
mov
adc
cdq
inc
xor
ror
add
dec
scas
pop
mov
mov
xchg
sub
std
lds
jg
jle
push
add
and
dec
out
movs
inc
(bad)
pop
inc
push
and
sbb
cmp
sub
(bad)
mov
sbb
pop
add
dec
sub
mov
and
adc
cmp
mov
add
loop
sbb
cmp
je
inc
add
retf
cmps
out
mov
and
in
inc
int3
push
dec
inc
push
sub
xchg
mov
or
hlt
mov
and
xor
scas
mov
push
and
sbb
jle
pop
ret
sbb
sbb
jo
lods
iret
call
cmp
add
fild
dec
pop
das
adc
ret
aas
js
sub
xor
sbb
icebp
sahf
ins
pop
mov
xor
in
test
cmp
dec
ja
mov
bound
dec
or
xor
nop
pop
jb
xor
inc
xor
loope
and
daa
xor
js
or
cmp
mov
inc
retf
xchg
test
cli
adc
xor
sar
sub
ret
cmp
aam
mov
adc
sbb
int3
sbb
loope
dec
pop
out
sub
arpl
movs
mov
sbb
and
ja
aaa
mov
sub
xor
pop
and
dec
cmp
push
xor
cmp
xchg
movs
pop
push
sub
sub
out
or
pushf
ins
repz
mov
and
cmc
pop
sbb
mov
adc
movs
cmp
sbb
push
js
(bad)
sub
mov
and
clc
clc
sbb
sub
pop
ja
inc
fdivr
loopne
shl
and
mov
push
loopne
and
inc
fadd
cmp
dec
mov
add
push
jne
inc
rol
ret
xchg
test
inc
div
stos
push
cdq
loope
cli
pop
dec
rol
(bad)
(bad)
jo
fadd
mov
stos
je
mov
mov
cwde
aad
xor
or
test
cld
push
pop
pusha
cmps
addr16
jae
cmps
fimul
mov
lods
aad
add
add
sbb
xchg
xchg
ins
add
pop
add
pop
push
xlat
adc
dec
push
add
fdivrp
xchg
pushf
and
add
lds
cs
and
adc
nop
sbb
loope
lods
jne
std
lds
inc
mul
rol
leave
dec
rcr
imul
push
adc
push
xchg
pusha
mov
repz
dec
xchg
cmp
lock
pop
mov
xor
jno
push
arpl
xor
sub
imul
push
inc
add
and
sbb
gs
lock
sub
and
fld
js
inc
xchg
in
push
mov
mov
nop
movs
nop
cmp
xor
jmp
add
popa
lea
inc
je
arpl
mul
pushf
rol
mov
js
mov
inc
dec
add
mov
sub
fldcw
repz
mov
adc
push
sub
int
sbb
sbb
add
or
test
das
nop
adc
pop
in
adc
adc
jmp
sub
inc
ficom
jg
outs
inc
xor
jmp
arpl
nop
and
pop
(bad)
mov
je
and
dec
add
add
test
pop
pop
xchg
jl
call
cmp
add
ins
sti
sbb
and
pop
dec
outs
test
sbb
xchg
push
push
(bad)
mov
pop
or
cmp
sub
rcl
sbb
shl
(bad)
fist
aam
js
or
push
or
lds
cld
add
inc
xchg
jle
jle
dec
adc
daa
dec
mov
or
je
popa
sbb
adc
xchg
xchg
or
add
adc
adc
inc
(bad)
ds
addr16
xchg
loopne
cmp
jno
sub
retf
icebp
inc
cwde
sub
add
aaa
sbb
test
adc
inc
nop
jns
adc
pop
or
push
push
sar
push
mov
sbb
inc
adc
add
pop
xor
mov
cmp
jne
(bad)
jge
sbb
out
sbb
pop
mov
jno
push
jle
inc
mov
xor
ja
mov
inc
je
fcomip
xor
sbb
adc
daa
mov
jb
or
cmp
add
cmp
je
scas
adc
jnp
and
sahf
std
adc
push
gs
pop
repnz
jno
jo
xchg
sub
inc
lods
push
ror
jbe
movs
popa
sti
lds
inc
xchg
shl
rol
add
cmp
adc
xor
fistp
xor
add
nop
xchg
push
pop
adc
xchg
xor
and
test
push
ja
dec
je
in
cmps
mov
add
out
mov
or
mov
repnz
pop
movs
add
sahf
xchg
in
xchg
jecxz
sbb
and
cli
call
test
in
movlps
imul
xor
pop
out
imul
inc
or
out
pop
in
popa
ja
adc
ret
inc
test
mov
dec
(bad)
ret
scas
jmp
xchg
mov
mov
(bad)
and
mov
les
xor
je
data16
cs
or
test
push
mov
push
or
mul
neg
retf
push
fsubr
adc
into
(bad)
je
(bad)
and
(bad)
std
mov
mov
movs
test
test
es
dec
aad
dec
sub
les
cmp
or
add
xor
sub
es
or
frstor
push
push
jl
cdq
or
or
imul
sub
pop
adc
sub
push
cmp
adc
mul
mov
aam
int
adc
mov
leave
xchg
mov
pop
jmp
add
or
lods
rol
push
mov
add
xchg
mov
pusha
dec
and
add
push
nop
pop
jge
test
add
mov
jo
xchg
out
adc
xchg
stos
and
(bad)
ror
(bad)
jge
mov
imul
push
inc
imul
cmp
outs
in
fld
(bad)
into
adc
and
adc
stc
sbb
or
mov
lahf
or
(bad)
mov
inc
scas
fsub
or
add
xor
xchg
dec
xchg
or
push
pop
sbb
push
(bad)
xchg
outs
jo
and
mov
and
es
mov
sub
popf
sbb
mov
arpl
mov
add
jmp
xor
mov
pop
cmp
into
cmp
pop
adc
adc
sbb
ffree
ret
add
or
loop
enter
dec
cmp
push
mov
jns
imul
into
test
cmp
stos
fdivr
sbb
call
add
pop
and
inc
and
jge
add
inc
dec
adc
imul
mov
cs
adc
adc
xchg
inc
loop
adc
xor
(bad)
getsec
and
xor
cmp
push
mov
inc
rcr
jae
or
nop
es
inc
sub
ret
mov
std
sub
in
adc
jmp
xor
loope
sub
cmp
jg
lock
and
je
pop
xchg
pop
sbb
leave
sbb
test
and
push
mov
sahf
mov
loop
mov
in
jne
popa
sub
mov
aad
mov
pop
(bad)
push
mov
sbb
add
jo
add
xchg
inc
aaa
ins
add
outs
and
fldcw
jmp
shr
fstp
mov
ss
pop
aam
movs
jg
test
xor
and
rcl
adc
dec
dec
inc
inc
ds
test
pop
pusha
jmp
or
push
xchg
imul
and
push
loope
leave
retf
mul
add
xchg
add
push
xor
ret
xchg
cmps
mov
cmp
test
sub
rcl
push
ret
fsubr
push
mov
imul
ja
(bad)
popf
cmp
rol
sti
dec
inc
stos
push
xor
push
iret
and
jo
and
stos
pop
mov
mov
(bad)
mov
cmps
dec
loope
shr
in
cmps
repnz
idiv
jle
adc
and
push
or
out
fst
popf
xchg
sbb
mov
jne
inc
fidiv
sub
in
inc
in
mov
je
sub
fs
shl
adc
iret
sbb
xchg
and
sub
dec
es
js
int3
add
sbb
or
adc
add
dec
add
push
ins
retf
jge
pop
minps
in
cmps
aad
dec
adc
in
sbb
sub
adc
sub
das
xchg
pusha
leave
dec
adc
int
mov
idiv
fisub
into
rcr
add
cmp
sbb
and
in
adc
sub
pop
js
push
inc
push
and
(bad)
mov
xchg
and
cmp
mov
stos
mov
fadd
xor
pushf
jo
mov
je
add
sub
push
lahf
or
arpl
sbb
inc
cmps
clc
clc
test
add
mov
jo
int3
sbb
es
imul
(bad)
dec
in
lea
stc
sub
je
sub
jl
mov
pusha
and
int
cmp
and
cmp
or
in
stos
sub
and
xor
sbb
mov
push
and
in
jg
xchg
xchg
and
xchg
mov
sbb
dec
adc
inc
lods
adc
lahf
sub
stos
pop
and
and
xchg
lea
jae
and
sub
adc
xchg
or
adc
sub
cmp
xor
mov
out
sub
mov
out
xor
add
or
lods
pop
sbb
sub
cmovno
pop
enter
dec
icebp
sbb
xor
ret
xor
lahf
jmp
mov
ret
cdq
and
cmp
loop
ds
clc
fcom
stos
imul
stos
mov
mov
xchg
push
sbb
aad
push
mov
mov
mov
sbb
cs
and
imul
push
fld
int3
adc
dec
ja
mov
jbe
inc
and
mov
sbb
pop
sbb
mov
or
fcomp
push
xor
pop
push
sub
imul
adc
dec
daa
mov
adc
add
daa
dec
(bad)
daa
sbb
sub
test
jbe
sbb
das
xchg
sub
inc
sbb
cdq
pop
stos
lea
cmp
cmp
sahf
lds
pop
ds
inc
cmp
gs
push
mov
xor
dec
push
sbb
cmps
nop
daa
cmp
inc
out
mov
test
pop
jmp
loop
push
push
adc
pop
pusha
and
cmp
fst
cs
rol
dec
sub
add
mov
add
push
cmps
aaa
adc
call
xchg
xor
add
cmp
ds
hlt
mov
push
pop
pusha
fisub
push
clc
xlat
out
test
jecxz
mov
push
sub
adc
pop
add
push
enter
hlt
sbb
push
stos
mov
xor
shl
mov
xchg
mov
int
and
ss
into
mov
add
or
bound
and
movs
mov
(bad)
(bad)
dec
call
mov
shl
pusha
adc
push
push
jb
mov
stos
jne
push
pop
aam
and
mov
or
les
fnstsw
pop
mov
dec
sbb
clc
js
push
sahf
and
inc
test
call
jmp
and
std
jmp
cmp
pop
add
dec
lods
sub
div
mov
das
push
data16
and
ss
add
mov
xor
add
or
leave
(bad)
pop
inc
and
jne
lahf
add
es
dec
fst
js
dec
nop
push
mov
xchg
mov
and
call
les
stos
mov
cmp
js
mov
jne
scas
je
xchg
dec
mov
sub
loop
std
(bad)
pop
mov
mov
add
inc
mov
lds
out
or
xor
adc
mov
fs
sti
add
aas
pop
sbb
cli
push
jge
cmp
jg
cli
fcom
es
(bad)
jb
(bad)
push
xchg
adc
sub
jmp
call
cmp
sub
ins
(bad)
fiadd
fild
ret
dec
xor
mov
cli
lods
sub
xor
mov
add
xor
es
gs
mov
sbb
xor
pop
test
rol
sbb
fidivr
dec
inc
xor
mov
inc
ss
push
lds
add
out
pop
cmp
repnz
adc
add
pop
hlt
add
fbstp
xchg
adc
aam
xor
jp
enter
sbb
add
pop
not
shr
mov
or
push
xor
adc
xor
cwde
mov
aaa
and
dec
inc
inc
inc
push
or
inc
out
fs
jl
inc
inc
jmp
in
imul
xor
sub
jne
xor
add
push
fs
add
push
lods
inc
sub
daa
ja
sub
lock
mov
lods
stos
inc
mov
lods
mov
mov
mov
aam
fcomp
push
nop
sub
pop
inc
or
mov
bound
cmp
push
pop
or
inc
inc
movs
popf
cdq
nop
cwde
dec
js
xchg
add
mov
dec
sbb
idiv
rcl
xor
sub
or
or
add
popf
in
fcom
loop
jno
add
in
daa
pop
call
das
sbb
xor
pop
xor
add
retf
call
or
mov
push
shl
mov
scas
(bad)
xor
cmp
cmp
push
add
pop
push
out
inc
xchg
xor
js
sub
push
sub
daa
xor
inc
lods
sbb
lock
inc
adc
jns
pop
xor
inc
push
xchg
or
jmp
dec
inc
lock
and
add
push
lods
xchg
push
sbb
ret
mov
push
sbb
add
mov
dec
mov
sbb
add
and
and
or
cmp
push
jmp
add
adc
mov
sub
add
sti
adc
pusha
mov
jg
gs
enter
adc
fmul
call
or
mov
out
inc
xor
and
dec
loopne
add
mov
(bad)
sub
sub
mov
add
pop
retf
cwde
push
jecxz
aas
rol
pop
and
rcr
sub
sub
movs
cmps
inc
cld
sahf
sbb
dec
cmps
es
es
iret
xor
ins
adc
cmp
add
xor
movs
movs
shr
dec
movs
mov
jno
imul
mov
fsubr
or
popa
movs
mov
(bad)
mov
mov
xchg
sbb
or
nop
add
sbb
mov
cs
mov
sbb
nop
sub
xor
push
mov
sbb
sbb
int3
dec
test
enter
movs
neg
push
test
ret
dec
xor
das
icebp
cmp
pusha
rcr
xlat
or
call
or
mov
push
inc
dec
or
jp
jle
sub
push
cmc
sar
sub
push
push
push
push
xor
or
add
adc
pop
ret
dec
add
xchg
pop
mov
ds
pusha
lahf
pop
and
dec
lock
mov
rcr
add
or
adc
or
mov
hlt
lahf
push
call
call
and
jp
or
mov
add
loope
or
xor
jmp
push
pop
cmp
sub
imul
jb
inc
(bad)
xchg
scas
pop
fcom
das
aam
add
mov
push
xchg
cld
(bad)
sub
pushf
dec
cmp
adc
push
inc
pop
inc
dec
fiadd
or
jns
inc
(bad)
sub
or
push
cmps
add
sar
sub
sbb
dec
bound
ins
nop
pop
inc
ret
jmp
sahf
leave
adc
mov
xchg
movs
inc
pusha
adc
sbb
popa
dec
ror
add
shl
xchg
movs
adc
inc
mov
and
push
mov
daa
nop
hlt
inc
add
rcl
sub
test
inc
sbb
arpl
icebp
add
push
shr
lahf
xor
test
and
mov
iret
mov
test
inc
sbb
adc
add
sub
adc
pop
add
add
sbb
adc
add
sbb
xor
add
or
cwde
cmp
repz
mov
or
adc
xlat
push
rol
jo
mov
jmp
movs
test
adc
pushf
shr
lahf
pop
adc
inc
sub
adc
and
xchg
mov
repnz
cmps
sbb
cmps
pop
xchg
cmps
sbb
daa
or
mov
mov
shl
popa
ss
xchg
pop
dec
adc
jg
cmp
jle
aas
push
inc
icebp
and
or
clc
test
add
cmps
push
cmp
cmp
or
sbb
xor
push
xor
jns
loope
push
icebp
adc
sbb
xchg
push
or
sub
ins
sbb
push
les
out
scas
ins
cmps
jo
je
aaa
cmps
or
dec
ja
push
xor
or
stos
or
or
mov
add
fcom
mov
add
ficomp
adc
jae
lods
and
pop
lahf
fimul
cmp
mov
cmp
(bad)
xchg
cmp
jo
pop
stc
call
inc
inc
in
mov
xor
mov
xor
sub
out
and
jno
push
push
xor
add
xchg
cmps
jae
(bad)
test
cmp
daa
jl
cdq
adc
pusha
dec
mov
shl
cmp
xchg
sbb
mov
mov
das
loopne
pop
loop
sbb
dec
sub
mov
mov
or
dec
fs
icebp
rcl
jle
dec
addr16
mov
loopne
adc
jnp
dec
mov
xor
and
and
add
or
daa
fs
jmp
jl
or
test
mov
fstp
adc
xor
in
and
adc
pusha
add
aaa
jge
xor
xchg
outs
dec
mov
popf
sbb
movs
dec
aas
inc
mov
add
push
sbb
ja
xchg
mov
cmp
test
fs
and
mov
mov
sub
sub
enter
sbb
loopne
repnz
dec
mov
lahf
(bad)
add
xlat
xchg
push
sahf
clc
xlat
jp
sbb
sub
in
mov
and
xor
lods
push
(bad)
mov
test
or
sbb
repnz
push
cmps
rol
add
push
outs
xor
inc
add
xor
jmp
call
cmps
arpl
pop
dec
xchg
inc
mov
adc
and
mov
sbb
adc
adc
sub
or
lods
xchg
fist
mov
sbb
jne
ret
mov
and
fbstp
mov
fdivr
ss
adc
ret
and
inc
jae
(bad)
add
push
into
cs
push
fild
fld
hlt
and
jp
imul
fistp
inc
jb
cmp
mov
or
je
mov
(bad)
mov
mov
leave
cmp
adc
jp
pop
(bad)
scas
call
in
movs
fnstsw
ins
(bad)
jae
sar
cmp
jp
je
push
push
and
or
fcmovnb
aam
push
cmp
cwde
in
mov
push
je
pop
xchg
scas
scas
imul
clc
inc
stos
xchg
jmp
push
pop
test
adc
cmps
push
add
pop
jo
shl
in
push
cmp
mov
inc
daa
fdiv
push
mov
inc
(bad)
loopne
sub
inc
jp
sbb
cmp
rol
adc
sbb
xchg
je
enter
push
sub
cmps
inc
xor
mov
add
cmps
jns
and
mov
shl
clts
bound
push
je
movs
push
stos
mov
loop
dec
ret
sub
aaa
adc
les
push
jmp
sbb
fnstcw
adc
jmp
cmp
pop
inc
pop
ss
sub
pusha
jmp
aaa
bndstx
mov
rcr
add
push
push
fdiv
inc
mov
add
and
and
dec
mov
pop
vmwrite
add
lea
cmp
push
mov
dec
adc
add
pop
ins
add
xor
mov
in
loope
dec
dec
js
test
xchg
js
xchg
adc
or
cmp
sar
rol
test
push
mov
movs
cmp
push
out
or
sbb
shl
xchg
jo
push
mov
or
mov
popf
dec
js
je
cwde
or
std
cmp
xchg
inc
jmp
add
inc
mov
and
xor
leave
mov
push
rsm
cmp
dec
scas
xchg
and
lds
push
adc
and
pop
mov
imul
dec
sbb
jl
hlt
mov
add
jo
dec
daa
add
sub
mov
xchg
sub
adc
aaa
loopne
in
cmp
jne
jne
add
cli
mov
pusha
ins
sub
dec
inc
mov
mov
add
addr16
xchg
fmul
aam
sbb
iret
mov
mov
mov
mov
popa
test
jecxz
push
mov
call
sbb
mov
cld
xchg
cmp
pop
adc
jp
adc
sub
jg
sti
inc
and
jns
mov
in
jo
jo
push
ins
loopne
add
mov
nop
sub
and
ss
mov
adc
jecxz
ficom
mov
sar
push
in
repz
cmp
inc
dec
scas
inc
fldenv
fcomp
mov
jno
and
ret
mov
sub
hlt
adc
cmc
mul
xchg
dec
and
sub
and
dec
pop
sbb
in
xor
sbb
scas
add
push
pop
imul
or
and
addr16
das
(bad)
ds
call
mov
xchg
mov
jne
sub
ins
push
in
jbe
sar
imul
popa
mov
cmc
or
pop
xor
push
lock
sub
fsubr
mov
dec
(bad)
fadd
clc
fisubr
adc
pop
pop
mov
jns
in
jbe
adc
out
add
mov
popa
and
mov
xchg
dec
xchg
inc
add
xchg
mov
ret
pop
push
jbe
iret
or
rcl
call
or
sub
aas
pop
inc
add
adc
mov
mov
mov
sbb
push
or
and
fisubr
adc
adc
inc
or
push
(bad)
and
fldenv
push
add
lock
xor
arpl
xchg
pushf
pusha
movs
add
test
test
pusha
js
sbb
or
add
adc
or
xor
add
sahf
sub
gs
popf
stos
outs
mov
inc
push
mov
xor
punpcklwd
mov
or
int
stos
leave
lahf
test
addr16
mov
cmps
mov
sbb
aas
lock
test
scas
retf
fs
cld
jp
ins
retf
outs
sbb
sbb
push
add
mov
sub
jge
das
test
dec
mov
cmc
sub
sbb
sbb
jg
push
sbb
jg
xlat
push
push
jl
rol
lods
jle
jmp
inc
shr
adc
mov
cmp
into
sub
and
loope
sbb
test
or
mov
and
pop
in
in
out
je
jne
mov
and
push
pop
clc
cmp
mov
int
jo
adc
adc
mov
or
sbb
aaa
je
xor
xchg
pop
xor
xor
add
mov
add
jg
push
cwde
jo
add
daa
les
pop
test
rol
cmovns
push
sbb
sbb
mov
fcom
mov
cmp
inc
addr16
cmc
aaa
xor
out
ret
aaa
mov
push
and
mov
mov
leave
pusha
loope
mov
shr
mov
mov
ret
or
dec
xor
adc
fist
cli
das
push
sbb
lods
(bad)
xchg
or
mov
or
lea
lea
pop
cmp
(bad)
or
shr
pop
sti
dec
sbb
sbb
(bad)
pop
pop
jae
rcl
adc
or
sbb
sub
adc
popa
dec
mov
ret
je
mov
or
xor
add
sbb
test
adc
sub
xchg
pusha
jle
jle
dec
and
jmp
mov
or
js
mov
loope
and
dec
pop
xor
outs
push
imul
sbb
jne
mov
and
pop
mov
pop
in
or
pop
xchg
jns
hlt
add
inc
or
adc
or
or
xor
sbb
pop
dec
enter
div
sub
sub
cmp
das
cs
sub
cmps
xlat
push
ret
mov
stos
add
imul
push
in
or
aam
adc
es
xchg
sbb
jbe
(bad)
retf
adc
js
add
mov
cmp
fdivr
sub
push
inc
jmp
jle
loope
int
dec
add
mov
add
dec
repnz
jmp
push
pop
sub
ret
sar
xchg
adc
(bad)
sub
xchg
xor
adc
mov
dec
push
inc
xchg
popa
sub
fist
dec
ret
mov
ficom
lock
push
lock
sbb
addr16
xor
cmps
sbb
mov
mov
xor
jge
cmp
pop
lods
rcl
xlat
(bad)
jmp
or
xchg
xchg
inc
add
add
push
mov
(bad)
leave
(bad)
jb
adc
add
mov
test
push
in
dec
or
jne
lea
push
cmp
retf
lea
mov
add
in
mov
mov
call
shr
adc
jbe
push
seto
or
dec
test
inc
jbe
or
push
mov
dec
xchg
dec
test
fs
xor
clc
sbb
test
add
add
scas
mov
out
loopne
mov
dec
movs
sub
cli
fnsave
in
dec
ds
xchg
aaa
add
pusha
pop
les
xor
inc
test
jo
in
ins
add
add
movs
xor
pop
out
clc
add
mov
sbb
jo
mov
push
xor
in
dec
dec
adc
mov
mov
fistp
dec
es
xchg
jo
inc
ins
and
xor
ficom
aam
cmp
ins
adc
push
add
std
clc
cld
js
push
add
adc
and
push
popf
js
pop
pop
push
ror
dec
xchg
dec
and
out
cmp
jne
test
inc
jnp
or
int
jmp
cmp
cmp
jmp
pop
add
lds
dec
pop
cmp
shl
mov
int3
shl
inc
cmp
je
sub
jne
and
scas
mov
in
mov
jg
fwait
cmc
ja
inc
inc
sar
inc
or
xor
cmp
xchg
dec
loope
add
cmps
add
add
mov
pop
inc
retf
(bad)
or
and
dec
xchg
dec
dec
jae
xor
cmp
ja
mov
pop
call
xor
das
cmp
adc
sbb
add
add
jo
(bad)
push
mov
out
mov
jg
dec
xchg
ror
or
dec
jmp
dec
pusha
add
and
arpl
test
into
stos
ins
adc
pusha
mov
pop
or
adc
and
iret
scas
push
push
adc
mov
pop
jne
and
test
push
je
xlat
push
ret
add
sahf
add
push
call
outs
xchg
rol
push
pop
push
sub
sub
nop
aaa
mov
xor
cmps
inc
shl
adc
inc
cwde
loopne
out
cmp
cmp
sbb
push
pop
mov
push
mov
mov
mov
test
mov
and
sbb
mov
mov
cli
sbb
loopne
sahf
mov
jmp
sahf
push
pop
mov
add
adc
cmp
add
add
dec
dec
sbb
js
sub
adc
jno
fldcw
mov
xor
jne
sub
(bad)
add
popa
dec
jbe
mov
js
dec
push
lock
mov
test
or
les
mov
inc
pop
and
add
mov
dec
clc
add
sub
not
cmp
mov
std
dec
xor
movaps
cmp
lods
outs
in
jne
and
xor
(bad)
inc
shl
jbe
fnstsw
lea
xlat
mov
pop
ror
pop
mov
or
xchg
les
ja
lds
or
dec
sbb
push
xchg
and
mov
or
add
sub
cmp
clc
mov
stc
dec
jl
cmps
mov
add
xchg
push
sbb
pop
das
xchg
loopne
loope
pop
sti
push
sbb
fild
ret
jecxz
push
adc
repz
mov
rol
icebp
mov
sub
pop
mov
xor
out
cmp
inc
pop
je
std
push
mov
cmp
push
inc
push
ja
add
mov
or
clc
mov
add
dec
sub
xlat
jo
adc
aaa
stc
pop
(bad)
xchg
push
out
ss
add
adc
ds
pusha
mov
sub
xor
add
loope
dec
retf
mov
repnz
sbb
and
in
pop
add
sub
add
and
mov
mov
xchg
movs
and
xchg
(bad)
in
mov
adc
nop
test
dec
mov
pop
sbb
jp
daa
mov
mov
ficom
add
push
shl
sub
sub
pop
adc
and
sbb
in
xor
retf
or
js
adc
jmp
push
imul
sbb
jne
push
cmp
mov
lds
cmp
pop
sub
imul
add
fistp
dec
in
inc
xchg
sub
push
sub
mov
and
sub
ja
test
ret
movs
sub
fisub
sub
(bad)
in
mov
xchg
push
and
mov
shr
or
mov
sbb
pushf
dec
cmp
xor
dec
loopne
clc
popa
pop
pop
cmp
xor
xchg
test
xor
std
in
out
and
mov
cmp
inc
adc
jnp
push
adc
gs
adc
fwait
xchg
dec
sub
test
adc
sbb
les
adc
mov
(bad)
xchg
mov
jmp
push
pop
fisub
cmp
inc
add
and
add
or
xchg
dec
and
adc
and
xor
xchg
cwde
gs
mov
xchg
xor
push
sub
lods
dec
or
out
jmp
sbb
push
daa
cmp
mov
adc
xor
adc
nop
out
out
int
mov
test
add
pop
and
pop
and
fisub
add
movs
pop
mov
push
xor
mov
mov
imul
sbb
dec
lock
add
mov
mov
fdiv
mov
outs
test
and
xor
inc
and
loopne
fadd
out
add
jl
inc
jo
pushf
xlat
rcl
addr16
ret
imul
cmp
push
push
adc
je
fwait
add
dec
and
dec
push
(bad)
push
xchg
jp
adc
mov
push
xor
movs
push
sub
add
mov
ss
iret
outs
mov
je
loopne
cmp
xor
xor
call
xchg
push
out
or
xlat
aam
sub
mov
xor
mov
mov
add
adc
and
cdq
loope
jno
dec
cmps
cmp
ins
mov
mov
es
bound
es
push
movs
push
mov
inc
pop
imul
jp
sbb
xchg
push
or
sbb
int
xchg
mul
sahf
cld
mov
dec
fnsave
retf
jns
pop
push
fild
mov
mov
inc
or
mov
xchg
out
or
mov
and
sub
mul
inc
or
jg
sbb
xor
ja
jbe
inc
test
jnp
cmp
adc
xchg
and
call
(bad)
push
imul
or
xchg
mov
mov
adc
retf
sbb
mov
push
arpl
mov
out
and
pop
icebp
jmp
xor
inc
(bad)
jmp
movapd
inc
add
inc
push
ss
mov
cwde
mov
inc
or
retf
xor
aaa
push
ficom
mov
inc
xchg
lods
add
adc
xlat
mov
aaa
push
sbb
sub
push
sub
pop
mov
ins
(bad)
cmp
out
sub
repnz
add
pop
jle
popf
js
jae
cmp
hlt
add
pop
(bad)
push
mov
mov
mov
movs
push
clc
push
sahf
sbb
inc
cwde
and
outs
sbb
and
mov
push
xor
mov
mov
cli
es
push
pop
push
mov
add
pop
adc
push
sbb
lock
jnp
inc
push
dec
aam
inc
neg
popa
js
mov
lods
push
sbb
adc
ret
adc
mov
ss
shl
cmps
call
adc
push
pop
das
push
pop
add
mov
jb
push
sub
adc
or
and
int
add
pop
adc
or
je
loopne
movzx
ret
and
mov
outs
add
xchg
add
es
adc
push
push
pop
popa
mov
ret
sbb
js
inc
or
call
adc
cmps
stos
xchg
add
sbb
push
test
sbb
adc
or
enter
sbb
pop
cmp
sar
aaa
sti
mov
rcr
or
pop
test
int
and
adc
scas
pusha
rol
xchg
lods
jo
and
cs
xchg
xchg
js
imul
je
cmp
aas
out
out
fimul
outs
mov
jne
pop
rcr
adc
xlat
xchg
push
inc
mov
and
cmp
popa
pop
or
mov
add
and
retf
fcomp
mov
dec
inc
cmc
sub
pop
sub
cmp
pop
repz
push
sbb
fild
fs
ja
mov
dec
push
add
pop
adc
cs
outs
leave
mov
test
(bad)
arpl
mov
test
inc
aad
addr16
push
cmps
ror
inc
add
aam
(bad)
xchg
xchg
push
enter
stos
mov
and
arpl
jnp
sub
nop
out
adc
adc
jne
clc
mov
nop
cmp
and
punpcklwd
add
lea
mov
ret
dec
mov
in
clc
jg
mov
scas
dec
adc
leave
jbe
cmp
in
add
mov
sub
push
push
fs
or
inc
and
xchg
aam
neg
fld
adc
dec
sbb
sub
jae
and
call
sub
mov
daa
int3
out
xchg
sbb
xchg
je
jecxz
data16
dec
cwde
dec
inc
mov
mov
leave
jbe
movs
sbb
push
jge
lock
push
sub
xor
adc
xchg
and
mov
add
ja
mov
push
test
or
fnsave
and
push
movs
and
pop
dec
and
inc
cli
ins
popf
lock
inc
or
unpckhps
push
div
dec
adc
jle
test
sub
xlat
sub
mov
adc
add
idiv
sub
jmp
push
pop
fiadd
xor
cmps
sub
adc
sbb
add
jno
mov
dec
adc
mov
cmp
jg
ins
jle
loopne
ret
inc
cmp
adc
pop
add
sub
cmp
add
inc
cmp
loopne
xor
lea
adc
(bad)
shl
adc
addr16
jge
fsub
or
sub
inc
and
inc
rol
lock
cwde
xchg
cmp
xor
pop
cmp
pushf
inc
loopne
imul
mov
push
jo
push
mov
inc
rol
push
push
xor
cmp
or
and
cmp
and
movzx
or
or
pop
push
sar
scas
not
mov
stos
and
mov
shl
jl
fs
xchg
xchg
lods
arpl
sti
or
jb
jmp
push
inc
pop
fsub
sbb
popf
rcr
push
es
or
sub
xor
movs
push
test
daa
je
or
je
and
cdq
bound
xlat
daa
(bad)
daa
adc
jbe
imul
ds
(bad)
pusha
loopne
je
pushf
xor
fstp
add
add
xchg
push
pop
imul
xor
add
sub
pop
add
dec
ret
xchg
gs
pop
test
sbb
push
mov
pop
in
cmp
je
ins
loope
push
sub
dec
add
mov
je
dec
rcl
sub
fcom
sub
cmp
in
jnp
jge
jge
test
fcmovne
shr
sub
xor
js
jl
cmp
(bad)
jmp
ss
inc
iret
push
jbe
nop
mov
jno
push
xchg
jp
mov
movs
das
arpl
fbstp
ret
ret
or
lods
out
arpl
jne
mov
mov
push
cmps
cmp
xchg
je
inc
adc
mov
and
out
lock
int
clc
pop
pop
clc
jmp
inc
adc
mov
enter
dec
or
scas
dec
cmp
add
fcom
push
pop
and
ins
leave
mov
dec
inc
xor
sub
adc
and
sub
bound
(bad)
cmp
mov
(bad)
dec
rcl
ja
and
or
pop
adc
inc
and
ss
test
pushf
loope
add
add
rcl
push
rcr
leave
sub
popa
xchg
pop
aam
dec
mov
adc
enter
mov
sbb
pcmpeqb
add
adc
inc
nop
push
cmp
fst
out
inc
and
mov
dec
cdq
aaa
add
fld
sbb
and
jp
mov
out
pop
sbb
adc
pop
in
sub
inc
das
inc
cs
lea
add
pop
adc
imul
sbb
add
jge
aaa
adc
jge
mov
cmp
and
dec
sahf
js
mov
inc
gs
push
mov
cmp
test
xor
xchg
add
or
inc
jmp
sbb
dec
bound
pop
and
push
mov
daa
jl
pop
into
mov
loopne
adc
or
or
jmp
mov
jb
outs
fst
fst
xchg
xchg
mov
movs
lods
cdq
aam
mov
shr
or
test
dec
mov
ret
fucomip
sbb
jne
aad
nop
or
xchg
sbb
push
sub
push
in
fild
inc
loop
ja
pop
or
in
scas
arpl
rol
loope
sub
lahf
adc
int3
mov
mov
and
inc
mov
ins
mov
add
inc
scas
fadd
inc
cwde
adc
test
push
adc
xchg
sti
por
adc
dec
aam
aad
add
adc
loop
es
cld
push
sub
mov
ror
mov
fdivr
push
push
xchg
call
and
or
ja
inc
pop
mov
sbb
xchg
jl
fcmovnbe
std
outs
fs
fldcw
or
lods
xor
pop
cmp
outs
inc
(bad)
sub
ins
add
mov
scas
adc
lahf
mov
sub
add
jno
pop
inc
mov
imul
dec
jnp
adc
mov
push
and
xchg
jle
(bad)
mov
xchg
lock
enter
(bad)
loopne
jo
cmp
push
into
pop
sub
sbb
dec
loope
(bad)
cld
adc
xchg
adc
mov
nop
adc
and
mov
fdivr
inc
cwde
add
push
leave
test
inc
pop
push
clc
(bad)
ds
call
sub
and
and
mov
ins
das
inc
push
adc
mov
call
inc
sub
push
icebp
dec
or
test
repz
dec
aad
jo
pop
xor
repnz
pop
cwde
cmp
test
sar
jne
sbb
out
push
xchg
mov
sbb
pavgb
enter
mov
or
jl
movs
xchg
pop
adc
push
div
fist
inc
or
cmc
rcl
mov
stos
sbb
mov
xchg
mov
jb
rol
inc
pop
mov
test
or
fs
popa
pop
xor
and
out
xchg
dec
pop
in
jne
sbb
and
je
xor
add
loopne
add
pop
sbb
and
xor
xlat
pop
sbb
shl
sar
movs
xchg
add
test
or
daa
or
popf
sbb
clc
in
mov
fld
cmp
(bad)
cmp
pop
sbb
lds
or
mov
mov
in
pop
(bad)
fdiv
adc
aas
adc
or
inc
out
inc
movs
sbb
int3
jecxz
mov
mov
mov
ror
ins
inc
mov
and
aas
add
xchg
scas
jl
mov
xchg
mov
fsubr
mov
mov
repnz
jae
jns
fdivrp
fdiv
rcl
and
ret
inc
sbb
out
xor
rol
sbb
mov
icebp
sbb
adc
sbb
push
adc
and
pop
repnz
pop
leave
aaa
lock
(bad)
int
cmp
cmp
adc
sbb
test
out
scas
mov
xor
add
cmp
cmp
lods
movs
inc
or
cmp
cmp
dec
mov
sub
sbb
cdq
pop
inc
in
jle
push
pop
xor
adc
adc
dec
or
in
and
js
(bad)
adc
adc
test
jne
out
mov
arpl
xor
ja
stos
sahf
and
inc
jmp
inc
mov
add
xchg
mov
fsub
and
adc
dec
dec
jne
rol
sti
push
out
add
sub
and
sub
xor
or
js
xor
mov
or
adc
add
mov
sbb
inc
arpl
outs
test
push
ret
mov
and
adc
das
jne
adc
and
jg
mov
aam
dec
mov
loop
mov
add
pop
dec
adc
test
push
stos
pop
push
icebp
mov
sbb
pop
lods
sub
rcr
ins
mov
push
inc
dec
jne
add
test
and
shl
push
or
push
push
mov
imul
adc
fbstp
xor
je
dec
push
in
pusha
adc
sub
jo
bound
or
test
jo
add
mov
push
and
fmul
and
xchg
hlt
sbb
sbb
imul
das
add
cmps
sti
adc
lock
sti
dec
adc
xor
scas
arpl
mov
inc
mov
xchg
jmp
dec
or
jnp
push
icebp
imul
pop
push
push
scas
pusha
sub
in
or
js
and
sbb
or
or
add
sub
mov
adc
test
adc
lods
ds
jb
movs
mov
mov
fsubr
retf
sbb
xor
scas
sbb
jns
in
push
dec
mov
add
sub
push
or
stos
push
scas
dec
pusha
sar
stos
test
test
pop
cld
nop
add
cmp
xor
aaa
add
arpl
fsubr
sub
out
lods
lods
cs
test
fdivr
push
nop
es
cmp
lock
mov
add
inc
leave
sbb
jo
adc
sar
jno
pop
je
and
popa
adc
ss
pusha
push
cmps
in
xchg
mov
xor
inc
pop
imul
add
loopne
mov
call
jbe
icebp
or
rcl
ficomp
sar
in
mov
jle
inc
fild
push
or
cmp
es
cld
cmps
in
pop
inc
std
shl
call
push
cmp
push
jecxz
retf
add
sahf
dec
cs
imul
push
dec
aam
retf
cmp
inc
cmp
xchg
add
or
in
push
sbb
nop
in
cmp
retf
jg
(bad)
adc
test
add
add
xchg
mov
mov
and
mov
add
imul
jmp
mov
xchg
call
sub
or
and
mov
jmp
adc
jo
xor
push
imul
dec
push
in
inc
test
jmp
push
pop
(bad)
and
out
les
mov
xchg
jns
add
mov
adc
sub
xor
mov
adc
add
jns
dec
sbb
and
add
shr
mov
retf
or
hlt
mov
add
fnstcw
imul
mov
sub
sbb
jl
add
jg
xchg
dec
pusha
xor
jge
iret
(bad)
sub
adc
sbb
aas
repz
je
sub
jno
sub
outs
mov
sbb
mov
ja
pusha
cmp
ret
lds
test
push
fs
jb
xor
out
xchg
lea
inc
mov
adc
sbb
push
fwait
push
nop
popa
outs
push
pop
mov
adc
push
dec
sub
pop
and
mov
adc
dec
ja
dec
(bad)
xchg
retf
adc
jle
lods
inc
mov
and
jo
aam
(bad)
sbb
add
xor
(bad)
push
rol
and
in
lea
mov
sbb
dec
or
sub
or
imul
in
stos
pop
fdiv
(bad)
adc
inc
mov
cmps
pusha
shl
mov
ficom
mov
cmp
in
bt
setb
push
out
pop
dec
xchg
push
add
dec
jne
jle
adc
adc
jle
(bad)
ror
jmp
lods
popa
cmp
push
pop
cmc
mov
xchg
xor
xor
sbb
mov
pop
sbb
sub
push
test
jno
(bad)
dec
cmp
xchg
mov
es
jecxz
popa
aad
rcr
adc
and
mov
xchg
fisttp
cmp
adc
xchg
sbb
push
outs
jg
les
cmc
sbb
loope
inc
push
push
in
icebp
add
mov
dec
jl
jae
inc
xor
fcomp
jle
xchg
mov
nop
mov
mov
cdq
inc
and
dec
jmp
movs
test
xchg
inc
ss
xchg
push
mov
cmp
test
scas
add
sbb
add
mov
rol
mov
jmp
sub
call
scas
add
sub
imul
jge
jne
es
movs
dec
add
fs
adc
into
aas
retf
cdq
je
jo
repz
add
(bad)
adc
and
movs
push
inc
sub
test
push
xchg
mov
pop
in
cmps
jbe
ret
xchg
jecxz
jle
(bad)
and
and
pop
mov
les
push
sbb
fcom
dec
das
pop
push
xchg
aaa
cmp
das
dec
adc
or
lahf
or
sub
xchg
xchg
mov
jecxz
rol
push
mov
push
dec
mov
lock
dec
xor
push
adc
ins
or
adc
mov
mov
inc
loope
xchg
xor
repz
push
retf
xor
fst
jle
rol
or
aaa
adc
lock
sub
ja
pop
aam
sub
add
mov
loope
jmp
jo
xor
jl
or
mov
xchg
adc
and
pop
pusha
movs
push
xor
push
xlat
(bad)
in
pop
mov
dec
push
pop
sub
sbb
pusha
push
mov
xor
pop
mov
xor
nop
mov
inc
jb
xchg
cwde
fcmovbe
push
cmp
enter
movs
dec
nop
hlt
push
nop
mov
test
popa
add
xlat
and
test
jmp
lea
loopne
test
pop
inc
sbb
daa
test
inc
ret
cwde
arpl
dec
cwde
xor
mov
xor
adc
jae
in
sbb
sbb
cs
sbb
sbb
and
pop
jb
and
inc
and
or
retf
and
test
movs
fcmovnb
in
sub
movs
es
popa
bound
fwait
push
push
and
mov
jge
nop
(bad)
clc
in
mov
jl
lea
mov
mov
retf
inc
std
jge
dec
bound
stc
pop
mov
leave
cmp
xor
pushf
fcomp
cmovge
pushf
pushf
dec
dec
daa
push
sub
sub
xchg
pop
dec
dec
inc
add
enter
push
dec
dec
daa
cdq
jbe
push
pop
inc
pop
cs
out
aaa
aaa
pusha
pusha
xchg
add
add
dec
dec
je
mov
cmp
xor
inc
movs
imul
add
mov
xor
pop
mov
add
xchg
lahf
and
adc
mov
loopne
pop
inc
mov
cmp
sub
lock
test
call
sbb
ins
out
push
cdq
push
sbb
sub
mov
xchg
(bad)
push
sti
out
jl
or
jg
test
movs
cmp
cmc
push
xor
pop
and
xchg
sbb
mov
or
popa
mov
scas
mov
imul
cmp
nop
add
jmp
fld
or
push
add
lea
(bad)
pop
mov
mov
push
push
mov
iret
lahf
mov
cli
mov
aaa
in
cmp
adc
mov
jle
push
mov
mov
dec
add
or
test
cs
jns
mov
dec
adc
shl
adc
sub
lods
les
dec
push
xchg
(bad)
push
aaa
push
aaa
cmp
ret
add
or
fstp
xor
fwait
xchg
push
jl
push
cld
mov
mov
push
or
sahf
retf
shl
(bad)
push
js
dec
cmps
add
or
ror
sbb
in
adc
js
inc
or
lock
xor
sahf
enter
add
sbb
iret
dec
xchg
aam
cld
push
push
mov
push
mov
mov
or
add
ret
pop
imul
movs
and
add
inc
retf
cld
lock
push
mov
and
dec
cmp
and
(bad)
call
xor
adc
arpl
inc
xchg
push
xchg
push
or
and
sub
rdpmc
adc
test
sub
aaa
neg
mov
inc
cmp
shl
cmc
xchg
cmp
sbb
dec
mov
jns
(bad)
fcom
(bad)
ins
and
test
(bad)
mov
and
cs
cmps
adc
lahf
jge
xor
cmps
adc
nop
std
or
sar
das
cmp
out
fistp
stc
jns
fcmovu
in
cmps
fisub
push
es
or
xor
add
pop
cmp
cmc
adc
push
fidiv
sub
add
add
push
sti
leave
and
adc
outs
and
fnstcw
mov
mov
test
jecxz
inc
xor
test
out
jmp
mov
or
mov
push
and
jmp
movsx
cmp
aad
cmp
inc
pop
iret
and
pusha
push
lahf
sub
test
rol
adc
and
hlt
or
sbb
cmps
lods
sar
xchg
dec
loop
sahf
jg
xchg
ss
add
mov
xchg
cwde
pop
sar
sbb
test
addr16
bt
xor
aad
dec
dec
rol
or
(bad)
pop
movs
ins
mov
add
enter
std
push
jmp
push
cmp
dec
xor
mov
test
adc
cmps
jge
mov
jb
add
push
in
sar
cmp
test
dec
scas
pop
scas
lea
xchg
sbb
dec
fwait
xchg
pop
and
lods
ss
test
pop
ret
jno
fist
mov
xchg
push
stos
or
and
push
pop
iret
mov
jbe
pushf
add
xor
push
test
add
jp
adc
add
sbb
mov
and
push
mov
clc
dec
jmp
and
and
mov
add
out
xor
inc
push
cdq
addr16
int3
sbb
test
sub
pop
xchg
movs
out
gs
lock
pop
retf
mov
jnp
mov
aad
xor
or
retf
(bad)
pop
icebp
mov
add
inc
retf
mov
or
into
mov
sub
adc
sbb
sub
pop
sub
jns
movs
lods
mov
cmp
sub
add
div
cmps
nop
mov
jmp
inc
arpl
shl
cmp
scas
in
xor
sub
ja
jmp
sbb
push
call
sub
mov
shr
adc
mov
stc
mov
rol
or
jne
hlt
sub
cdq
mov
pop
cmp
jge
xlat
jbe
out
test
ja
ficom
test
into
repz
pop
sbb
and
shl
mov
pop
dec
sub
inc
and
add
add
jmp
sub
inc
sub
pop
mov
fiadd
sbb
iret
pop
xor
jp
and
clc
push
dec
dec
pop
sbb
hlt
stos
push
xchg
lods
add
pop
ins
pop
xchg
mov
lock
aad
arpl
xlat
cmp
ret
inc
push
xchg
xchg
inc
sub
sub
mov
push
mov
mov
les
pop
hlt
adc
jae
je
clc
push
adc
and
js
test
sub
cmp
sbb
adc
adc
add
push
xor
fsub
jnp
cwde
pop
outs
fisubr
add
or
inc
test
loope
xchg
xchg
adc
mov
xchg
or
xor
adc
and
push
enter
les
lock
xchg
and
packuswb
mov
bnd
jbe
pop
sbb
add
enter
add
jns
or
pop
jge
pop
dec
cmp
and
inc
bound
cmps
aas
pop
loopne
push
sub
inc
jmp
xchg
sbb
and
sti
or
xor
dec
loop
add
xchg
clc
cmc
add
fs
xchg
inc
push
mov
int
add
inc
mov
add
lods
cdq
out
sbb
shl
int3
aad
push
rcl
pushf
xchg
mov
jne
mov
je
push
push
sbb
outs
jne
ret
in
fadd
outs
pop
mul
inc
push
and
inc
movs
jbe
xchg
hlt
jl
nop
add
bound
nop
inc
sbb
pop
lahf
push
inc
loop
pop
pop
stos
cdq
dec
out
or
and
pop
or
dec
sbb
mov
xor
(bad)
sti
mov
xchg
icebp
mov
jmp
inc
adc
in
mov
outs
pop
inc
inc
sbb
adc
pusha
dec
add
cmps
add
mov
inc
movs
push
movs
aaa
fnstsw
sbb
or
popf
or
mov
inc
add
hlt
in
lahf
mov
stos
in
mov
push
fcompp
xchg
(bad)
arpl
adc
push
sub
sbb
cs
les
dec
shl
push
pop
xor
shr
in
sbb
cs
jb
pop
ret
aam
cmp
inc
iret
je
arpl
and
loope
lods
rcr
jo
cmp
adc
lock
jmp
pop
(bad)
adc
push
mov
pusha
mov
fstp
add
mov
push
xchg
clc
xchg
je
sbb
fcom
or
es
dec
cdq
push
sub
cmp
fmul
jp
pushf
ins
dec
push
cmp
adc
jne
outs
xor
cmp
adc
sbb
inc
and
cs
aaa
dec
data16
push
push
adc
push
pinsrw
jge
and
scas
and
inc
add
lea
stos
pusha
adc
mov
push
mov
cmps
dec
jg
cwde
adc
stc
push
rcl
js
mov
ss
dec
push
pop
and
xchg
or
cmp
push
nop
pop
push
in
sbb
outs
inc
(bad)
(bad)
imul
sahf
adc
outs
add
mov
jb
test
sub
add
pop
movs
ror
add
test
inc
cmc
mov
mov
pop
and
push
push
rol
aam
nop
nop
arpl
pop
les
mov
add
pop
dec
ss
mov
push
pop
adc
add
lods
push
sbb
inc
fucomp
(bad)
xor
mov
inc
stos
test
or
ja
or
push
xchg
jl
ret
or
mov
lods
scas
fmul
nop
mov
or
pop
ret
push
or
pushf
push
sbb
mov
pusha
(bad)
lock
inc
xchg
sti
adc
loop
adc
imul
fcmovnb
call
ficom
(bad)
(bad)
fs
cs
leave
cmp
add
sar
loop
ins
(bad)
and
imul
mov
mov
jl
jmp
xor
fisubr
aam
sub
xchg
test
(bad)
push
mov
pop
jo
in
mov
or
int
mov
pop
cmp
xchg
add
dec
es
icebp
inc
sti
mov
lods
ror
inc
mov
or
dec
or
mov
mov
mov
movs
cld
je
je
xchg
fist
mov
fcomp
push
mov
cmc
xchg
sbb
add
outs
outs
add
mov
jmp
add
scas
add
jge
jmp
ror
jle
retf
mov
xor
mov
rol
iret
out
lds
movs
inc
mov
adc
retf
mov
jmp
adc
loope
add
jne
pop
fld
pop
push
outs
(bad)
jg
inc
sbb
xor
dec
sbb
xchg
clc
push
push
push
daa
dec
mov
pop
ret
sbb
sahf
or
add
jl
push
popa
imul
cmp
adc
cmp
dec
ficom
xadd
mov
and
or
addr16
push
setbe
push
add
sbb
loopne
push
mov
inc
pusha
adc
sbb
dec
xor
gs
mov
add
rol
xor
in
retf
add
xor
lea
inc
ds
inc
cmps
leave
add
or
test
xchg
fiadd
sbb
sbb
cmps
and
pop
jnp
dec
jnp
push
pusha
and
cmp
loop
push
xor
popa
sahf
aam
dec
fild
push
jb
cmp
aam
sbb
es
adc
push
or
mov
lods
jns
cmp
cmp
adc
stos
mov
in
stc
or
shl
push
push
mov
xor
add
leave
mov
xor
movs
int
fs
fs
mov
mov
cmp
jae
repnz
jne
push
inc
sub
enter
or
sbb
mov
inc
pop
mov
add
cmp
pop
pop
cmp
adc
ins
adc
inc
out
push
sbb
push
jo
sub
leave
add
mov
push
xchg
je
add
xlat
lock
loopne
lahf
sbb
mov
add
outs
retf
inc
mov
dec
lea
mov
imul
adc
cmp
inc
xchg
or
popa
add
aas
fdiv
pushf
xor
pop
adc
stc
js
or
push
gs
push
jmp
jg
dec
add
clc
fisttp
dec
lea
rol
pushf
cmps
pop
push
cmps
sub
cmp
sub
ja
and
sub
inc
push
cdq
jns
(bad)
pop
push
movs
sbb
mov
adc
dec
fild
mov
adc
out
inc
push
sbb
mov
add
add
xor
sahf
jmp
pop
ret
inc
sidtd
and
and
icebp
lock
iret
pusha
and
lea
mov
add
maskmovq
mul
dec
xor
adc
pop
pop
jmp
inc
adc
push
and
ret
imul
lods
mov
mov
jle
cmp
inc
sub
dec
add
fsubr
xchg
mov
jne
push
jno
xchg
xchg
inc
inc
sbb
mov
movs
mov
stc
sub
mov
adc
mov
test
mov
leave
jne
add
dec
sahf
je
push
sub
and
in
arpl
pop
inc
dec
push
inc
mov
xchg
int3
pop
aam
nop
(bad)
jno
stc
cs
or
cld
and
dec
aaa
and
sar
or
sub
daa
mov
shr
retf
xor
push
add
or
pop
xor
xchg
adc
xlat
pop
out
and
scas
cmp
ja
adc
dec
jmp
mov
xlat
das
stos
(bad)
nop
(bad)
pop
fcomp
inc
adc
bound
inc
mov
dec
xor
inc
inc
ss
nop
dec
loope
inc
(bad)
sub
repz
call
arpl
xchg
pop
inc
popa
and
das
jge
add
adc
lahf
setle
clc
sbb
ins
mov
jg
mov
ins
adc
scas
sub
(bad)
addr16
xor
xor
mov
cmp
inc
fld
xchg
in
in
sbb
rcr
mov
lea
sbb
inc
xor
and
push
or
or
push
mov
push
add
or
cwde
sub
xor
or
test
(bad)
inc
push
mov
add
xchg
add
fstp
pop
das
enter
inc
jg
sub
and
dec
mov
les
and
add
popf
test
rol
test
adc
retf
xchg
scas
dec
add
cmp
call
sub
mov
stos
int
retf
xchg
idiv
adc
pop
adc
pop
pop
mov
push
loop
pop
scas
fidiv
test
daa
dec
mov
mov
jle
aam
std
in
or
jg
mov
neg
hlt
add
add
mov
add
cmps
imul
sbb
add
xchg
mov
push
and
dec
sbb
ret
cmp
repz
dec
(bad)
sti
jb
adc
fstp
dec
push
imul
sub
mov
xor
sbb
add
adc
add
dec
or
add
jmp
sub
cwde
push
clc
mov
push
jmp
inc
or
cmps
test
pusha
ins
aas
and
imul
add
sub
arpl
fsub
mov
dec
lea
in
ja
mov
jno
popf
fs
mov
and
sub
call
int3
and
out
pop
mov
or
rol
pop
movs
popa
in
add
fdivr
in
loop
pop
(bad)
in
inc
sub
cmc
cmp
out
push
fst
pop
push
pop
jl
xchg
stos
arpl
mov
pop
add
enter
enter
jecxz
sbb
push
inc
aas
hlt
test
ins
int3
stc
adc
test
mov
jae
push
pop
xchg
or
sbb
int
aaa
xlat
xchg
add
pop
jne
add
sbb
or
mov
cmps
addr16
push
lds
and
les
dec
and
sbb
mov
mov
inc
xor
jmp
mov
add
dec
mov
adc
mov
mov
lods
sbb
ja
mov
(bad)
cmp
and
test
imul
mov
xor
add
pop
cmp
or
imul
cmp
pusha
add
pop
push
xchg
adc
add
inc
movs
fwait
adc
dec
add
jmp
test
not
in
or
sbb
adc
sbb
in
std
or
mov
push
and
loopne
out
pusha
ret
jbe
cmp
xor
inc
ror
push
add
mov
les
add
mov
mov
(bad)
mov
xchg
xor
mov
scas
mov
jmp
add
jne
aas
rol
fadd
aad
add
fdivr
cmp
jecxz
mov
test
add
cs
sub
out
and
jmp
adc
and
or
push
sbb
pop
mov
daa
push
or
sub
retf
add
jae
call
push
pop
jns
mov
sbb
dec
ret
jmp
push
jmp
fs
test
or
push
fisubr
xchg
mov
dec
dec
mov
ror
ror
ret
push
leave
ds
mov
push
inc
dec
mov
lods
sbb
or
sub
xchg
xor
cmps
push
pop
ret
mov
jnp
or
mov
movs
je
push
pusha
fstp
sbb
inc
ss
push
pop
xor
sub
mov
push
sti
das
das
adc
adc
push
xchg
cmp
bound
add
sbb
push
or
add
dec
test
add
out
adc
xchg
aam
cmp
inc
xor
cmp
sbb
popa
icebp
or
jne
or
add
sbb
cwde
or
adc
pop
mov
pop
daa
cmp
inc
xor
xchg
mov
ret
mov
cmp
pusha
xchg
pusha
and
push
xchg
inc
sbb
or
pop
cmp
mov
jecxz
jmp
mov
cmp
add
push
sub
pop
mov
dec
pop
add
mov
push
leave
sbb
sub
lods
sub
sub
aam
sbb
leave
xchg
enter
das
aas
in
pop
dec
pop
(bad)
inc
je
mov
jne
fst
lods
fdiv
push
mov
cwde
dec
sbb
test
inc
or
xor
arpl
int3
push
clc
sub
sub
pop
leave
xor
xchg
mov
xchg
movhps
pop
fist
and
push
sub
inc
dec
sub
add
sti
cs
sbb
mov
add
(bad)
mov
jne
pop
sub
push
stc
add
ret
mov
imul
scas
push
xor
shl
sbb
(bad)
outs
jae
in
pop
sbb
adc
rcl
adc
and
inc
sbb
pop
adc
in
xchg
push
xchg
sbb
and
(bad)
out
iret
mov
inc
jg
adc
cmp
or
outs
cmc
lahf
adc
mov
mov
sbb
test
jne
sbb
scas
sub
int3
sbb
loop
jne
loopne
out
mov
add
inc
das
ret
sbb
pop
iret
out
adc
add
and
mov
add
pop
cmp
repz
ds
xchg
cwde
fild
cwde
cmp
jg
push
ret
shl
fild
clc
loopne
call
pop
xor
lods
cmp
adc
add
dec
lods
nop
daa
leave
cmps
enter
add
rol
dec
xor
push
ss
and
rcr
lods
push
sub
(bad)
in
sbb
mov
(bad)
sub
push
jno
inc
gs
test
mov
xor
sub
add
sbb
jge
fidivr
adc
cmp
mov
dec
(bad)
jg
jl
or
adc
cmps
or
data16
test
fsubr
(bad)
aam
and
inc
adc
or
(bad)
cwde
and
popf
outs
test
dec
jecxz
xchg
xor
inc
inc
ja
call
inc
adc
inc
sub
ss
or
jb
fwait
scas
ins
mov
sub
test
lods
add
push
sbb
cmp
xchg
and
cmp
pop
lods
xor
push
pop
sbb
ficomp
dec
and
in
ins
lock
xor
xor
mov
or
das
push
jmp
cmovs
lock
(bad)
xlat
cld
push
repnz
dec
mov
int
mov
xor
das
dec
sar
inc
adc
add
lods
xchg
cmp
cld
and
sub
xor
xchg
lods
pop
(bad)
push
and
inc
test
call
cs
pop
add
cdq
or
aaa
movs
sahf
in
fcmovnb
or
fdiv
cmp
daa
inc
stos
inc
fs
mov
xchg
int3
ret
or
push
add
mov
call
pop
and
push
xor
leave
ret
imul
jne
cmp
jmp
(bad)
cmp
push
test
adc
xchg
into
outs
shr
inc
adc
cmps
xchg
adc
sbb
adc
sub
das
bound
movs
pop
dec
dec
or
jno
rol
xchg
adc
or
jne
fsub
rcl
mov
inc
xor
test
sbb
movs
ret
and
pop
and
daa
inc
push
pop
and
add
push
ret
(bad)
es
xchg
mov
adc
jnp
ins
sbb
shl
push
sbb
adc
fild
mov
jecxz
outs
jno
xchg
adc
or
cmc
jae
in
jne
mov
push
daa
adc
pop
sbb
xchg
hlt
xchg
add
add
push
je
nop
sub
(bad)
mov
ss
or
pop
(bad)
push
pop
xchg
add
and
nop
push
mov
call
outs
sub
rcr
jmp
jmp
and
enter
ret
sub
fs
adc
rcl
movs
sar
popf
mov
adc
mov
pop
aad
and
cmp
jnp
lock
mov
push
mov
xor
pop
dec
sti
retf
cmp
jmp
loope
add
add
gs
and
pushf
pop
das
test
cmp
outs
(bad)
mov
cmc
xor
mov
pop
sbb
fiadd
xchg
xchg
adc
sbb
sbb
daa
or
or
movs
jnp
inc
dec
and
adc
push
leave
jnp
rcl
inc
or
mov
shr
jmp
or
mov
adc
outs
jb
test
rcl
retf
into
xor
mov
mov
xor
loopne
dec
inc
hlt
popa
inc
jno
call
mov
inc
dec
mov
xor
sbb
adc
aas
adc
(bad)
adc
cmp
push
(bad)
adc
and
mov
xchg
ins
(bad)
or
ret
xchg
rol
adc
xor
add
push
cs
aad
push
sbb
mov
rcl
mov
js
(bad)
inc
jl
sub
and
les
ja
dec
mov
mov
repz
ins
pop
dec
lods
in
mov
int3
add
dec
jns
mov
xor
stos
repnz
push
mov
test
fs
data16
cmp
inc
jmp
pop
jnp
movs
push
lea
xchg
and
sbb
push
push
jmp
push
and
sub
dec
add
or
iret
aam
xchg
mov
ins
add
scas
sbb
mov
sti
and
xor
int3
mul
xchg
je
mov
loope
stos
cli
xor
xor
lds
pop
xor
fisubr
jns
jge
sub
sbb
les
add
push
or
jg
je
push
add
scas
call
cmp
add
nop
xchg
les
mov
rcr
dec
push
iret
xor
xchg
xlat
ret
push
bound
sbb
sub
mov
clc
inc
or
pop
mov
adc
add
adc
or
pop
xchg
nop
ret
and
add
pop
and
aas
in
pop
add
sub
repnz
adc
sbb
pop
and
aam
mov
xchg
loope
xchg
jno
es
cli
int3
pop
sbb
push
cmp
les
xchg
pushf
and
or
xchg
mov
add
retf
loopne
xor
adc
cmp
dec
les
sbb
jo
pop
je
xchg
jmp
div
cmc
push
inc
fstp
dec
cmp
adc
and
jo
repnz
nop
daa
aaa
pop
inc
push
outs
rcl
add
add
or
(bad)
xchg
pop
sub
jmp
inc
mov
stos
cmp
sbb
push
or
xor
loop
(bad)
push
mov
ret
pop
jle
movs
inc
gs
inc
pop
je
add
pop
xchg
xchg
ja
push
add
inc
xchg
jge
test
pop
mov
sub
cmps
and
popa
push
dec
lock
xchg
int3
or
mov
cwde
shl
add
out
sbb
jge
mov
movs
sbb
sbb
daa
hlt
aam
cmp
scas
and
rcl
jp
adc
dec
loopne
add
fdivr
pusha
clc
or
xor
dec
cmp
scas
jl
arpl
adc
retf
popa
fcom
xchg
mov
inc
pop
lods
cld
mov
retf
dec
je
xlat
or
or
popf
xchg
xadd
retf
in
cmps
or
inc
add
add
sbb
xor
cmp
fwait
les
adc
dec
and
outs
dec
add
cli
imul
lods
(bad)
and
push
outs
mov
mov
adc
(bad)
and
inc
cmp
add
mov
mov
(bad)
mov
dec
sub
push
or
popa
bound
adc
std
jmp
push
ficom
dec
mov
das
or
push
(bad)
jp
(bad)
in
into
pop
push
mov
shl
adc
pop
cdq
and
sbb
not
je
iret
aaa
cmp
sub
pop
adc
sar
push
jne
push
jbe
fwait
adc
add
test
add
dec
mov
call
or
leave
push
(bad)
add
shl
xor
push
aad
inc
loopne
aam
in
mov
jb
mov
push
mov
shr
test
ror
or
(bad)
and
and
imul
es
imul
outs
mov
loopne
cs
(bad)
gs
mov
movs
ret
fwait
mov
out
les
cmp
mov
xchg
sub
ja
sub
stos
rcl
xor
repnz
xor
dec
or
cmp
psubusw
shr
xchg
ret
sbb
xchg
lea
sbb
ret
and
push
sbb
js
or
outs
jmp
imul
jmp
adc
add
and
xor
jecxz
push
and
or
jnp
mov
dec
call
dec
inc
les
xchg
and
rcl
or
cmp
and
cmps
or
out
sub
adc
out
jne
daa
shr
mov
shr
inc
test
xor
mov
sub
sbb
push
adc
add
inc
xchg
xor
aaa
fs
xchg
push
popa
rcr
add
pop
push
pop
lock
mov
add
mov
mov
mov
pop
repz
mov
mov
popa
or
inc
aas
push
jns
mul
inc
or
(bad)
pop
mov
push
es
clc
add
pop
clc
add
enter
lock
stc
sar
xchg
push
js
xor
add
lock
xchg
imul
fcomip
rcl
push
imul
add
cmp
leave
aam
loopne
pop
sar
or
cs
mov
sub
aam
lahf
and
adc
push
repz
jge
mov
ss
sub
mov
inc
pushf
ins
pop
mov
aas
push
sub
mov
add
test
sub
mov
call
ins
sbb
pop
fdivp
enter
neg
and
les
push
xor
inc
(bad)
cmp
push
mov
mov
bound
enter
dec
push
les
or
sub
and
inc
leave
jno
imul
mov
cmps
sbb
mov
and
mov
fwait
das
cdq
add
xor
or
les
gs
add
cmp
push
fs
push
jmp
je
add
or
movs
pop
or
add
cmp
mov
cdq
sbb
sbb
add
sub
sahf
loope
test
mov
add
inc
push
mov
lock
jmp
add
inc
dec
mov
adc
test
pop
lahf
nop
mov
rol
call
push
data16
add
mov
in
push
push
inc
sbb
popa
dec
xor
call
test
xor
dec
leave
(bad)
pop
test
jo
out
dec
jl
xlat
movs
pushf
aas
jmp
cs
add
jp
jo
mov
outs
xchg
pop
xchg
in
mov
sub
aaa
lods
test
les
and
(bad)
movs
pop
push
mov
mov
call
test
sub
adc
test
push
push
add
outs
lods
mov
inc
js
xchg
sar
push
mov
fcmovb
movs
sbb
mov
sub
mov
dec
jle
sbb
and
in
stos
mov
into
sub
or
xchg
dec
jge
adc
out
mov
ja
dec
adc
repz
fimul
ret
cmp
aaa
xchg
xchg
les
xor
and
pushf
jmp
or
test
pop
inc
sub
push
fsubr
hlt
nop
pop
xchg
popa
push
sub
cwde
lods
aam
pop
sahf
adc
js
jl
xchg
or
jl
fadd
push
push
test
add
pop
cmp
addr16
xor
lea
jmp
movs
xor
pop
jnp
push
hlt
ror
jmp
pop
in
jbe
test
inc
mov
adc
or
or
inc
inc
inc
imul
fimul
aas
(bad)
push
add
mov
sbb
sub
into
outs
cmp
jne
pop
push
lahf
in
or
jb
sbb
cmp
and
inc
xchg
inc
sbb
shr
or
call
cmp
sbb
xor
xchg
dec
or
rcr
cmp
jo
mov
jg
adc
and
pop
mov
test
jno
addr16
cmp
mov
push
cld
push
xor
cmp
mov
xchg
xchg
adc
loope
cmps
les
and
sahf
pop
fwait
adc
pop
xchg
jo
push
mov
cdq
adc
pop
or
add
shr
inc
adc
push
inc
lods
inc
das
dec
or
mov
cdq
sbb
xchg
xor
rcr
cmps
xchg
sbb
sbb
adc
es
xchg
dec
ins
cmps
mov
inc
adc
sub
das
ret
dec
cld
outs
pop
cmp
je
test
aaa
sbb
xor
gs
add
xor
fs
out
and
adc
sbb
mov
ss
jb
push
jmp
pusha
jg
es
and
inc
pop
repnz
or
mov
dec
push
pop
or
dec
add
xor
leave
retf
add
push
cmp
add
fistp
add
add
jb
ret
add
loopne
lahf
gs
xor
aam
inc
cmp
xchg
push
xchg
outs
bound
adc
bound
cdq
xor
push
push
cmp
adc
add
clc
adc
dec
pop
std
xchg
out
push
(bad)
dec
mov
mov
mov
stc
test
dec
mov
sbb
cmp
dec
or
sub
pop
ret
sub
xor
dec
or
test
(bad)
je
push
sbb
push
dec
rcl
mov
adc
sub
stos
push
adc
les
icebp
xlat
jl
mov
jle
sub
mov
daa
or
xchg
mov
fcom
sbb
xchg
rcl
and
arpl
ror
sub
dec
das
push
in
sbb
sete
xor
rcr
pop
into
mov
push
push
push
int
pop
jb
adc
jecxz
imul
or
mov
shl
fiadd
ror
mov
xchg
addr16
je
lea
mov
fst
std
rol
xor
mov
mov
dec
or
jg
add
dec
ins
push
or
or
adc
add
xor
sbb
sub
and
ud2
pop
pop
or
cmp
jecxz
push
cs
inc
sbb
jae
jmp
adc
ins
aas
dec
mov
je
das
fs
xor
inc
sub
push
sub
add
cmp
sub
dec
push
adc
or
adc
and
popa
push
dec
popa
add
pop
loopne
fisubr
ret
and
jbe
mov
jmp
movaps
push
dec
push
or
popf
shr
fsub
mov
popa
out
inc
or
push
jmp
loopne
loope
mov
adc
adc
add
test
and
add
loopne
adc
or
gs
mov
ja
icebp
inc
scas
or
fld
push
pop
addr16
repnz
(bad)
test
add
in
jp
ins
popa
cmps
sbb
ins
loope
loop
xor
mov
or
aaa
(bad)
loopne
jmp
and
je
imul
adc
sbb
int
movs
adc
sbb
xchg
dec
mov
and
adc
cmps
or
in
or
sbb
imul
iret
inc
pop
jg
jo
adc
add
mov
push
xor
cmp
xchg
push
pop
jl
push
ret
dec
jp
mov
sbb
xchg
push
repz
dec
lea
loopne
and
xchg
aas
and
mov
hlt
into
push
mov
or
xchg
leave
inc
push
xlat
add
aas
and
into
jae
cs
aam
add
mov
xor
adc
cld
xchg
cmps
mov
data16
sbb
dec
(bad)
jecxz
mov
or
adc
dec
ja
pushf
mov
inc
or
mov
pop
test
adc
sub
xchg
shl
ins
mov
mov
(bad)
mov
xchg
int3
je
sti
rcr
cmp
test
sub
shl
jecxz
in
push
adc
stos
in
add
push
(bad)
outs
mov
jg
in
and
icebp
cwde
clc
inc
dec
push
movs
mov
ja
sub
mov
pop
push
push
pop
adc
icebp
push
push
rcr
mov
retf
push
sbb
push
sub
mov
inc
pop
pushf
inc
inc
inc
sbb
fwait
call
sbb
mov
ret
pop
sbb
add
inc
push
cs
cmp
cmp
lock
and
outs
push
icebp
test
and
jbe
and
and
imul
add
or
rcl
inc
mov
imul
add
rol
or
inc
sub
dec
pop
dec
pop
sub
out
jl
es
sub
and
aaa
mov
mov
pop
popf
or
pop
jo
mov
retf
xchg
(bad)
int3
push
ret
cdq
lods
dec
and
aam
addr16
adc
or
ret
mov
jo
adc
and
mov
sub
fst
(bad)
movs
ins
push
jg
in
sti
rol
inc
sub
sub
xchg
mov
cld
lds
push
stos
pop
(bad)
mov
and
xchg
mov
fistp
dec
loopne
ficom
adc
xchg
mov
add
aam
test
rcl
add
fsubr
aaa
movzx
xchg
(bad)
sub
sub
je
outs
xchg
add
imul
jge
or
int
xchg
aas
arpl
out
add
add
fwait
fs
out
pop
inc
test
leave
(bad)
pop
jns
stos
or
cmps
mov
test
or
into
inc
and
(bad)
cmp
test
cmp
(bad)
or
add
and
aas
pop
push
dec
cmps
inc
mov
dec
popa
sti
sbb
dec
cmp
clc
pop
jg
sub
or
mov
je
shl
sub
mov
call
add
dec
xor
sub
push
cmps
ret
cmp
ja
je
sub
test
mov
xchg
adc
adc
sub
jo
loope
hlt
adc
stc
add
jne
(bad)
fisubr
cmps
adc
call
pop
xor
jl
jno
mov
jl
pusha
pop
popf
dec
je
add
jl
push
cdq
push
inc
mov
out
test
inc
mov
and
sub
push
sbb
aas
pop
fs
and
fmul
xor
fiadd
xor
daa
pop
dec
je
gs
mov
jnp
mov
js
sbb
in
dec
jmp
imul
mov
adc
aaa
cld
dec
cmps
add
pop
nop
adc
push
jmp
loopne
or
ss
(bad)
loope
ret
pop
inc
inc
pop
je
into
mov
dec
jmp
call
jmp
shr
daa
push
lock
in
or
rcr
dec
call
push
xchg
int
jo
call
ss
add
(bad)
xor
mov
mov
lock
xchg
sahf
gs
loop
aam
int
lds
ins
add
sub
pop
adc
dec
cmp
retf
ret
mov
mov
in
push
or
sti
rcl
xchg
icebp
shl
push
mov
or
ins
loopne
sub
dec
inc
xchg
xor
int
push
add
xchg
sub
pop
ins
popa
enter
rcr
pop
std
and
pop
or
jne
out
pop
mov
sbb
adc
sub
add
dec
sub
inc
repz
rcl
inc
(bad)
mov
jp
(bad)
repz
retf
subps
inc
dec
jne
pop
sbb
aam
fdivr
mov
clc
scas
fdiv
jge
(bad)
inc
sbb
add
mov
sar
js
stc
jne
adc
std
add
stc
psllw
xchg
inc
sti
mov
fidiv
xchg
xchg
popa
outs
and
add
push
jbe
sub
inc
add
or
cmp
pop
popf
push
xor
fs
jo
loopne
ret
ret
add
ins
xor
aaa
cld
les
lods
rol
sbb
pusha
shl
cs
add
sbb
call
in
iret
pop
cs
xchg
lds
js
inc
jnp
pop
jmp
push
xchg
sub
lds
in
stos
daa
jne
mov
or
das
xchg
xor
mov
sub
loopne
mov
add
add
sbb
movs
sahf
jl
jae
popa
add
gs
out
pop
add
jns
push
pop
je
fcomp
push
das
jge
lods
int
inc
and
mov
bound
or
das
mov
mov
fsqrt
and
and
push
lods
xor
jae
rcr
lahf
adc
add
fnstsw
fadd
call
add
or
xor
sub
lea
lock
pusha
mov
aam
or
adc
xchg
and
mov
stos
sub
xor
add
sub
jle
sbb
clc
dec
mov
mov
xor
add
inc
or
sbb
into
mov
cld
push
sbb
dec
into
enter
cmp
mov
mov
ficomp
xchg
pop
retf
push
ret
add
or
bound
sub
ds
fsubr
adc
ret
retf
push
pushf
call
xor
and
fwait
push
cs
cmp
ins
push
sbb
and
sub
imul
fcmovnbe
ins
mov
arpl
sahf
fnstenv
push
pop
inc
mov
cmp
xchg
push
add
add
xchg
shl
scas
in
mov
mov
push
xor
mov
pop
add
mov
lea
aam
or
add
scas
mov
sub
in
in
not
popa
sbb
sub
xchg
test
sub
jg
add
jne
sbb
cmp
in
inc
cmp
jmp
add
fnstcw
dec
mov
ficom
adc
cld
pop
xor
je
in
pop
pop
cwde
mov
dec
inc
ret
sbb
outs
psubb
xchg
gs
pop
mov
cld
test
sbb
inc
dec
jne
in
push
xor
(bad)
cmp
clc
in
cmp
mov
les
in
rcr
fld
in
dec
mov
push
mov
fcomi
sub
adc
adc
gs
cld
xchg
or
fsubr
mov
repz
inc
jae
shl
nop
or
push
or
inc
add
mov
pop
push
pop
test
mov
jbe
xlat
shl
retf
mov
inc
dec
ja
push
das
xchg
inc
mov
push
hlt
lds
mov
pop
push
es
in
pop
cwde
rcl
lock
sbb
and
ins
cmp
pop
inc
rol
ja
xchg
das
adc
cdq
rcl
fist
add
pop
push
xchg
mov
add
lods
inc
test
or
test
add
lds
ret
adc
and
or
inc
xchg
fidivr
dec
sahf
mov
inc
pop
cmp
test
(bad)
popf
pop
inc
and
cmps
xchg
cmp
push
fdiv
mov
mov
loop
cvttps2pi
mov
xchg
retf
or
pop
adc
mov
or
popf
cmp
inc
dec
in
add
pusha
pop
sahf
into
dec
pop
dec
mov
mov
sahf
cdq
push
ss
movs
in
add
test
clc
jle
fld
xor
hlt
test
xchg
sar
or
inc
dec
or
inc
sbb
and
ins
inc
shr
call
xor
xchg
loop
add
fwait
push
add
and
mov
push
cmc
push
add
adc
xor
and
xor
lea
and
sub
or
add
sub
mov
outs
add
add
fstp
fild
push
and
lods
ins
push
out
bound
daa
adc
adc
inc
aam
inc
pop
js
sbb
ret
push
mov
jne
popf
mov
and
push
jmp
and
pop
sar
xchg
test
or
jmp
xchg
inc
adc
cmc
dec
push
sbb
movs
add
or
push
xor
shl
push
neg
outs
or
repnz
mov
pop
sar
jo
movs
int
push
loop
cmps
sub
add
add
shl
mov
add
stos
sub
inc
dec
ret
and
pop
mov
or
push
pop
mov
mov
mov
loope
mov
mov
inc
push
xchg
test
jnp
add
adc
sbb
ret
jmp
mov
jbe
fist
xchg
data16
jb
adc
xor
pop
mov
mov
imul
xchg
mov
lock
mov
dec
mov
push
les
cmps
add
pop
nop
daa
shr
adc
dec
mov
add
xor
inc
mov
push
loope
sub
inc
xor
jmp
ror
pop
rcl
mov
pop
xor
push
fisub
jno
or
cwde
fmul
sbb
fldenv
mov
or
or
imul
sub
pusha
loope
push
cmp
add
push
mov
jo
dec
or
loop
pusha
(bad)
xor
pop
je
jo
sub
sub
sbb
rol
mov
add
push
lea
xchg
or
add
jbe
mov
adc
or
push
sti
mov
fld
and
lahf
ror
(bad)
and
adc
sub
cdq
xor
inc
pop
mov
aaa
mov
and
sbb
mov
fild
popa
jecxz
dec
mov
xchg
cmp
jmp
mov
push
jmp
inc
dec
ret
mov
rcr
dec
imul
xchg
call
clc
lods
std
mov
push
cmp
jno
xor
or
or
sbb
loope
std
and
add
add
xor
add
repz
pop
sub
fmulp
and
test
cwde
mov
cld
mov
push
push
lea
lea
daa
push
cmp
pop
repnz
jbe
gs
and
adc
or
mov
mov
adc
pop
cmp
jl
sub
and
add
rol
inc
imul
adc
adc
nop
call
jmp
loop
leave
test
add
frstor
dec
cmps
bound
pop
lahf
push
mov
jbe
adc
sar
imul
pop
or
sub
or
in
or
add
mov
movs
and
or
inc
jmp
jno
and
jmp
xlat
loopne
push
out
lock
shl
and
push
(bad)
in
sub
add
das
jbe
and
or
jecxz
imul
cs
dec
pop
rol
adc
cmp
cmp
dec
(bad)
jp
ror
sub
xor
sbb
xor
inc
pop
xchg
adc
aas
push
inc
mov
mov
imul
mov
sub
test
mov
rcr
cmp
pop
ret
jmp
and
push
mov
mov
repz
mov
mov
in
div
ret
dec
cmp
daa
cmp
pop
cmp
jle
sbb
fidivr
pop
test
inc
jmp
jg
pop
and
inc
jmp
cs
call
out
in
fsub
sub
out
fdiv
jle
mov
jecxz
pop
mov
pop
mov
inc
pop
push
push
lock
rol
add
add
cmp
or
xchg
mov
int
out
or
inc
pop
sbb
rcl
fdivrp
cmp
cmp
scas
adc
xchg
test
stc
add
mov
loope
xor
xchg
mov
add
xor
retf
out
xor
mov
xchg
rcr
fstp
adc
cmp
jl
dec
cli
test
and
fist
into
jnp
add
adc
mov
inc
sbb
sub
sub
push
mov
sbb
js
cmp
rcr
inc
and
es
fadd
add
and
jg
imul
and
dec
xchg
xlat
xor
jae
clc
mov
push
(bad)
sbb
xor
xor
les
bound
sbb
test
inc
or
inc
add
adc
pop
add
dec
and
pop
pop
and
repnz
mov
cs
mov
cdq
add
mov
adc
or
test
xor
inc
movs
call
cmp
sub
push
and
inc
ror
add
xlat
or
sbb
jne
or
lods
or
dec
pop
mov
movs
repz
stos
cmp
daa
fcmovnb
pop
xchg
ds
adc
fcomp
pop
jmp
adc
jecxz
mov
sbb
push
dec
ins
xchg
cmp
cld
lds
js
add
mov
jl
ins
rol
rcl
out
in
ffree
push
mov
pop
loope
fwait
shr
ficomp
(bad)
pushf
mov
sbb
pop
mov
dec
adc
(bad)
dec
jae
call
cld
inc
leave
nop
push
rcr
cdq
xchg
sbb
mov
and
js
sub
inc
call
add
neg
jne
adc
(bad)
add
dec
repz
int
fdivr
lea
js
or
pop
jge
sub
gs
jns
and
xor
int3
inc
je
pop
movs
mov
push
cdq
sbb
mov
xchg
nop
push
int
mov
cmp
mov
and
js
add
and
imul
icebp
xor
add
xchg
ret
cmp
outs
loope
test
dec
je
jmp
jg
mov
sub
adc
or
inc
adc
and
call
outs
(bad)
inc
jmp
dec
inc
mov
cmp
ins
and
retf
dec
mov
test
inc
or
add
xchg
or
jmp
jge
push
adc
dec
inc
or
add
aam
cdq
stos
or
xchg
dec
aam
jno
fs
into
dec
xchg
jo
test
jae
and
sahf
movs
pop
dec
or
loope
js
ret
or
rcr
and
inc
bound
push
(bad)
pop
add
pop
dec
(bad)
xchg
lahf
sub
jecxz
stos
test
cmp
rol
xor
(bad)
icebp
pop
adc
cmp
je
dec
idiv
cmp
xchg
push
movs
mov
jmp
pop
and
(bad)
nop
or
mov
fcom
add
xchg
xchg
sub
mov
test
fst
sbb
adc
jp
jecxz
jmp
imul
add
add
pop
jbe
xor
inc
xchg
int
mov
or
sbb
ins
jl
xchg
jle
or
add
inc
jnp
aam
or
nop
mov
cmp
cwde
and
cmps
adc
push
in
rol
int
adc
mov
mov
and
dec
dec
jl
inc
xor
jl
or
xchg
sub
and
call
fcmovbe
and
and
and
pop
xchg
nop
out
xlat
lea
nop
mov
fldenv
inc
(bad)
xlat
mov
sbb
jbe
imul
fist
mov
jns
in
(bad)
mov
push
aas
push
adc
push
rcl
sub
xchg
push
xchg
shr
xor
mov
dec
mov
add
inc
or
xchg
les
lea
mov
add
and
push
leave
repz
pop
clc
rcl
sbb
repz
jo
and
or
and
(bad)
movs
xchg
test
inc
add
mov
push
stos
push
push
dec
push
cmp
clc
sbb
sti
xor
pop
and
cmp
lea
pushf
xchg
add
cmp
mov
mov
mov
cs
ret
mov
rcl
js
push
push
push
cmp
xor
mov
bound
push
mov
fsubr
xor
pop
loopne
retf
stos
je
dec
mov
ins
or
xchg
nop
dec
bt
shl
in
int3
dec
movs
mov
ret
ror
ins
ins
mov
test
dec
not
mov
add
rcl
je
cmp
scas
imul
xor
mov
and
pushf
nop
ss
xor
test
inc
popa
xchg
inc
adc
mov
and
addr16
cmp
cdq
mov
sub
ds
mov
aas
sub
sub
mov
add
jbe
jnp
sub
ret
jmp
sti
mov
popf
and
fild
in
adc
shl
ins
push
mov
pop
nop
or
push
adc
add
inc
cs
adc
add
xchg
and
add
pop
add
cmp
shl
push
add
cwde
mov
mov
xchg
xchg
dec
push
fs
pushf
mov
mov
mov
loope
jge
pop
fwait
mov
and
sbb
mov
inc
cmp
and
inc
pop
movs
ins
rcl
push
pause
outs
inc
add
je
mov
dec
imul
loope
push
call
fidivr
mov
(bad)
jmp
into
adc
inc
mov
lahf
jg
or
dec
pushf
or
push
adc
loopne
stc
enter
jl
in
aaa
inc
aad
and
ins
out
iret
cmp
mov
cmp
mov
(bad)
xor
clc
dec
mov
push
ja
inc
ss
sub
daa
sub
push
xor
mov
adc
out
push
rol
popf
mov
or
dec
or
adc
mov
ins
cmp
out
repnz
and
ins
(bad)
push
cmp
cwde
mov
stos
jl
ficom
and
xor
mov
sbb
inc
dec
mov
sbb
fwait
push
mov
inc
pop
mov
mov
inc
pop
sbb
xor
jne
push
mov
aam
jno
out
scas
xchg
cmp
push
or
mov
add
sub
or
adc
adc
cwde
sub
sbb
mov
and
xor
mov
loopne
leave
sub
outs
pop
push
pop
cmp
cli
xor
push
(bad)
jmp
pop
nop
adc
jle
mov
push
push
sbb
pop
or
mov
(bad)
fld
inc
das
sub
jnp
int3
pop
loop
adc
inc
xchg
shl
icebp
fwait
jle
mov
rol
sbb
sbb
add
push
and
jle
stos
aad
int3
rcr
add
sub
cmp
pushf
xor
sti
pop
inc
cmps
mov
mov
mov
xor
pop
ins
test
adc
(bad)
fadd
mov
(bad)
iret
shl
pop
or
sbb
or
xchg
xchg
ja
test
rcr
xchg
push
cdq
cwde
sub
adc
icebp
mov
add
pop
xchg
and
sub
inc
es
pop
xor
call
adc
imul
movs
jo
cmp
imul
pop
arpl
mov
adc
pop
add
jl
sahf
mov
ins
inc
push
enter
dec
mov
pop
and
pop
int
inc
es
ror
xchg
mov
pushf
pushf
leave
add
inc
or
popa
outs
inc
out
lds
adc
test
rcl
jbe
sti
or
jns
mov
sahf
xor
je
inc
cmps
pop
or
ds
xchg
pop
push
cmp
in
pusha
scas
or
mov
jmp
lea
add
jnp
pushf
inc
cs
movs
nop
mov
add
inc
jmp
ins
sub
mov
pop
inc
ror
jo
push
sti
add
jae
(bad)
cs
xor
sub
xchg
test
jae
cmp
dec
call
mov
xchg
js
push
pop
or
and
inc
jecxz
pop
inc
mov
add
ins
mov
mov
sub
mov
mov
or
mov
push
adc
sub
je
or
inc
inc
or
into
pop
or
push
sub
sub
mov
adc
mov
out
rol
test
or
inc
adc
in
dec
push
dec
mov
sbb
pusha
jmp
adc
ror
sub
and
add
and
sub
cmp
call
xchg
xchg
movs
or
fadd
dec
xor
adc
inc
adc
add
enter
(bad)
sbb
adc
push
inc
or
adc
add
adc
and
add
pop
xchg
(bad)
movs
ins
add
add
or
add
pop
nop
pusha
inc
sub
out
shl
sub
repnz
adc
push
and
and
add
iret
sbb
mov
(bad)
aad
(bad)
aas
sub
enter
jecxz
or
push
add
push
jmp
in
mov
mov
pmullw
cmp
test
sbb
fld
xor
movs
mov
adc
fisttp
rol
iret
pop
adc
xor
loopne
inc
inc
mov
mov
add
xchg
xchg
repnz
add
stos
cmp
ud2
xor
xor
sub
mov
mov
jmp
xor
loope
aam
hlt
adc
lock
mov
cmp
dec
jo
test
stc
xor
movs
push
lea
lea
test
into
test
mov
je
cdq
cmp
ror
je
xchg
cs
cwde
aaa
enter
add
das
adc
and
xor
rcr
enter
int3
add
xchg
lahf
aaa
pop
ins
jmp
sti
(bad)
xor
ss
add
push
adc
sbb
adc
int3
lods
mov
xor
(bad)
bound
test
sub
add
adc
add
push
sbb
or
ror
sub
mov
inc
retf
cmp
adc
pop
or
push
push
test
add
shl
rcr
bound
mov
push
ret
sbb
sub
iret
gs
xor
out
inc
mov
mov
push
xor
jnp
push
sahf
pusha
out
repnz
sub
cmp
cmp
push
cmp
or
shr
xchg
dec
gs
dec
adc
gs
dec
or
or
das
mov
sbb
inc
cs
add
or
lods
mov
rol
je
inc
in
xor
adc
nop
rcl
sbb
sbb
aas
or
sti
add
aas
fnsave
cmp
bound
fadd
mov
test
scas
or
inc
cmps
adc
dec
pop
bound
js
sbb
xchg
fwait
mov
loop
aas
and
and
inc
and
mov
dec
pop
aaa
jl
inc
pop
jge
inc
dec
jne
(bad)
inc
xchg
inc
sbb
loop
push
gs
push
call
movs
push
sbb
mov
nop
aam
jmp
sbb
and
or
movzx
pop
outs
dec
(bad)
or
lahf
test
mov
sbb
dec
lea
jne
ret
mov
dec
lods
push
xlat
inc
adc
sbb
cmps
mov
sub
sub
movs
adc
movs
and
cdq
add
xor
(bad)
fstp
jmp
call
xor
or
cli
sbb
xchg
pop
adc
sbb
stc
aad
icebp
mov
xlat
add
shl
(bad)
aas
xor
inc
es
fcmovb
jg
jcxz
or
push
idiv
mov
adc
mov
test
mov
mov
dec
sbb
(bad)
fsubr
dec
inc
ror
mov
shl
movs
xor
or
clc
sbb
mov
ins
pop
pop
loopne
or
and
or
fld
aam
xchg
adc
in
xlat
loop
shr
jmp
cmp
push
xchg
inc
jns
mov
or
fcom
dec
ins
dec
adc
lahf
xor
add
or
inc
mov
push
sub
loopne
nop
push
jns
sahf
in
mov
(bad)
cmp
push
movs
movs
addr16
sti
imul
mov
pop
mov
call
call
cmp
xchg
sub
popa
or
jbe
sub
xchg
enter
rcl
outs
int3
add
push
or
push
pop
cmps
ins
dec
scas
cld
mov
hlt
add
call
and
xor
pop
pop
mov
fadd
xor
sub
add
push
push
aaa
shl
je
je
ins
leave
push
enter
test
push
push
or
in
ins
jae
adc
xor
dec
sbb
cmp
je
add
mov
in
push
loope
and
jecxz
call
loope
in
jg
inc
cwde
pop
mov
mov
and
push
push
or
xchg
and
cwde
mov
lds
dec
adc
out
push
addr16
mov
popa
jl
sbb
mov
jg
cli
hlt
cmp
jle
sub
push
add
xchg
mov
mov
hlt
adc
lock
lods
add
inc
sub
xor
inc
adc
pusha
push
and
adc
xor
add
mov
fsubrp
adc
or
or
sbb
add
mov
and
jg
mov
or
or
adc
les
loopne
or
mov
lods
ror
add
retf
test
and
loopne
mov
scas
sub
or
in
test
addr16
jp
adc
aam
dec
pop
pop
jbe
push
or
icebp
and
cli
push
add
sbb
dec
or
adc
sti
fptan
pop
rol
nop
xchg
cmps
jno
scas
add
mov
and
es
sbb
movs
retf
cmp
movs
cmp
movs
xlat
ror
pop
iret
sbb
sbb
pop
cdq
aaa
xchg
clc
leave
cdq
add
add
adc
repnz
ror
lock
call
fld
movs
cmp
sub
cmp
fld1
or
push
pop
in
ss
inc
mov
addr16
add
rcl
jne
mov
int
and
mov
(bad)
pop
pop
mov
out
pop
fs
fs
enter
int3
cmp
jns
ds
add
and
sahf
daa
bound
js
les
cld
mov
sub
fst
cmp
in
jne
lea
call
push
jae
xor
xchg
pop
and
pop
int3
sub
int
cmps
dec
cmps
add
test
inc
imul
shl
push
mov
ret
add
sbb
add
adc
add
dec
js
push
lock
jmp
(bad)
sti
add
ins
or
rcl
jne
sbb
mov
dec
mov
xchg
sub
(bad)
in
dec
mov
mov
and
call
push
nop
movs
xor
sub
inc
mov
jne
mov
mov
int
ret
dec
outs
and
clc
test
cwde
mov
ret
and
xor
daa
xor
loop
jne
lea
mov
push
mov
sub
push
pop
in
add
push
inc
loopne
(bad)
mov
loope
mov
cmc
mov
lock
mov
jge
dec
cmp
sti
ss
or
mov
xor
add
and
sub
mov
jne
or
jns
add
in
push
shr
sahf
mov
sar
push
loopne
and
add
rcl
ret
cmp
mov
add
mov
sti
je
in
ss
sbb
xor
aas
or
jmp
jne
jmp
cmp
mov
and
cmp
cmp
ret
sub
popf
mov
daa
inc
inc
test
sbb
pop
fbld
push
mov
sub
mov
or
shr
popa
jne
mov
sub
push
push
fwait
or
lock
sbb
pop
dec
mov
movs
icebp
or
inc
xchg
add
inc
in
stos
sub
add
xor
mov
ret
jo
cmp
add
sbb
pop
dec
cs
or
or
and
mov
outs
or
sbb
add
pop
pop
mov
adc
xchg
(bad)
jne
packsswb
jne
cmp
imul
daa
adc
adc
dec
pop
cmp
mov
push
iret
in
les
inc
xchg
sub
push
adc
outs
sub
sbb
daa
sub
sbb
lock
dec
mov
ins
scas
les
ds
test
pop
mov
push
movs
dec
sbb
mov
sub
(bad)
push
loope
sbb
lea
pop
sbb
enter
les
retf
push
cs
fwait
adc
fistp
js
in
mov
loope
pop
mov
and
call
stc
sbb
xor
aas
cs
jb
push
pop
sbb
mov
mov
into
push
lock
push
enter
sbb
sbb
mov
and
or
(bad)
sub
fwait
test
call
dec
cmp
movs
les
ja
pop
add
ror
lahf
repz
rcl
loop
inc
cli
ja
imul
add
test
xor
dec
ds
dec
cmp
(bad)
mov
sub
dec
pop
push
mov
xlat
and
repz
sub
mov
popa
(bad)
mov
stos
mov
fdiv
or
inc
(bad)
pusha
add
int3
and
test
push
fmul
cmp
adc
and
(bad)
or
inc
sbb
cmp
adc
or
dec
push
pusha
or
and
aam
sbb
ret
dec
sbb
(bad)
push
sub
sbb
adc
mov
imul
mov
movs
cmp
xor
les
sbb
jl
sbb
sub
jp
inc
inc
push
aaa
rcr
and
sbb
idiv
push
dec
(bad)
and
loopne
sbb
adc
scas
mov
out
ja
jle
mov
sub
jge
cdq
dec
fisubr
inc
inc
inc
and
in
adc
jns
sbb
mov
sub
mov
inc
and
fs
dec
adc
ja
lock
jle
dec
pop
push
dec
mov
jmp
dec
pop
jle
xchg
inc
inc
inc
jmp
mov
mov
adc
and
mov
sub
jb
push
outs
pop
mov
sub
push
not
xchg
or
push
inc
dec
jnp
dec
dec
dec
dec
jmp
mov
xchg
aaa
neg
jle
sbb
mov
shl
loope
pusha
mov
adc
loopne
js
push
push
addr16
and
pop
inc
add
push
xchg
mov
add
inc
rcl
push
scas
(bad)
cmp
inc
xor
lock
test
pop
inc
fstp
or
cdq
dec
dec
sub
and
adc
or
jmp
pop
sbb
mov
push
pop
push
or
mov
and
dec
dec
fsub
imul
dec
dec
pusha
add
adc
loop
outs
and
icebp
stos
xchg
jbe
mov
and
cmp
or
sbb
and
dec
dec
xor
pusha
inc
inc
sbb
or
push
(bad)
inc
jne
ins
sub
mov
adc
mov
imul
mov
cmp
push
movs
or
add
fdiv
inc
dec
inc
inc
mov
and
out
push
add
and
xlat
push
sbb
push
xor
sub
jge
mov
iret
sbb
imul
inc
jb
mov
push
ret
inc
sub
ret
and
outs
popa
call
jmp
push
xchg
pushf
fcomp
fcomp
mov
mov
inc
or
or
sbb
(bad)
shl
lds
ror
xchg
in
fst
mov
js
add
adc
mov
mov
aas
push
popa
test
inc
add
sbb
and
in
test
adc
add
jle
out
or
inc
rcr
xor
sbb
ret
fsubr
aaa
or
jne
adc
xchg
test
push
push
mov
and
inc
sbb
jp
cmp
fwait
sub
mov
inc
adc
inc
pop
je
aaa
fidivr
aaa
jns
addr16
and
pop
pop
mov
imul
inc
cmp
add
inc
jne
aad
ds
dec
jae
inc
leave
mov
popa
scas
mov
xor
adc
movs
and
jmp
adc
add
je
lods
pusha
adc
pop
xchg
dec
pop
ficomp
fwait
jecxz
push
inc
js
stos
inc
mov
les
inc
cmps
add
sub
sti
mov
ins
push
sub
sub
inc
imul
js
dec
jmp
lea
sbb
or
dec
lods
adc
pop
and
into
or
mov
jne
clc
dec
add
cwde
out
mov
sub
inc
push
stos
adc
mov
push
ficomp
inc
(bad)
jmp
mov
aas
rcl
or
sbb
daa
aaa
div
and
cmp
mov
into
sbb
mov
push
in
sbb
std
push
das
jb
and
jnp
pop
(bad)
movs
fnstcw
xchg
and
adc
sbb
shr
adc
mov
adc
adc
inc
dec
add
or
leave
adc
or
addr16
(bad)
jmp
mov
push
fsubr
push
jle
sahf
xchg
nop
push
repz
inc
stc
ins
mov
push
iret
inc
or
dec
shr
rcl
movntps
or
int
mov
add
or
cs
retf
(bad)
rcr
mov
push
jne
pop
adc
or
inc
mov
pop
dec
ret
aam
pushf
push
add
jnp
in
push
xchg
or
jmp
adc
outs
enter
or
add
cmp
out
outs
sbb
adc
pop
test
into
inc
xchg
push
in
add
pop
xchg
or
dec
ds
jo
xor
je
xor
jl
sbb
sbb
je
test
adc
je
stos
xchg
pop
aam
xlat
push
fist
jbe
out
fmul
and
sahf
dec
addr16
lea
test
adc
mov
mov
and
aas
outs
push
or
imul
sbb
dec
in
gs
icebp
push
or
ja
xchg
neg
xchg
jmp
lods
in
fs
push
adc
mov
mov
and
inc
or
sbb
or
jp
or
and
shl
or
xchg
mov
nop
lock
std
xor
mov
or
dec
push
xchg
popa
sbb
mov
loope
or
cmp
imul
push
or
cmp
xchg
les
into
in
sbb
movs
mov
lock
icebp
mov
mov
mov
dec
pushf
or
jae
mov
pushf
sbb
adc
aas
mov
mov
(bad)
repnz
or
pop
fisub
mov
test
xor
imul
ficomp
or
ins
cmp
adc
mov
push
pushf
dec
and
dec
push
shl
mov
add
add
xor
cmp
jbe
dec
dec
pop
inc
mov
or
ja
push
mov
jmp
sub
pop
inc
inc
xor
sub
lds
adc
pop
js
add
cdq
test
sti
dec
cwde
std
add
(bad)
mov
xor
mov
lea
cmp
out
push
mov
xchg
ins
arpl
cmps
mov
test
outs
hlt
enter
xchg
adc
pop
call
or
pop
sub
adc
push
adc
out
adc
push
add
or
xor
mov
in
push
push
adc
or
add
or
or
jmp
add
add
add
add
add
mov
push
mov
push
mov
mov
iret
repz
xchg
jecxz
dec
push
push
repnz
dec
repz
imul
pop
push
les
out
outs
and
jl
cld
add
out
xor
repz
mov
add
out
mov
or
add
(bad)
mov
cmp
es
addr16
pop
test
fidivr
icebp
push
inc
sbb
add
or
shl
jbe
sub
cmps
(bad)
jp
inc
(bad)
sti
int3
adc
sbb
push
add
rol
ficom
adc
add
add
or
retf
mov
and
mov
not
test
push
mov
mov
mov
jmp
sub
sub
or
and
(bad)
jecxz
adc
cmp
(bad)
fnstcw
mov
movs
sbb
imul
add
loope
adc
jne
mov
and
adc
push
scas
popa
mov
loopne
add
push
(bad)
ror
nop
xor
ss
dec
pop
mov
jbe
aam
aas
mov
jae
test
enter
hlt
add
stc
jmp
out
shl
inc
adc
mov
ins
or
lahf
push
or
rcl
cli
cli
emms
and
call
add
es
adc
mov
cmp
rcl
ret
or
mov
or
sahf
adc
dec
rcl
ins
cmc
mov
mov
repz
out
scas
pop
add
call
(bad)
or
xlat
enter
xlat
jnp
cli
or
jbe
data16
add
xchg
push
xchg
call
outs
scas
ins
sbb
push
and
xchg
push
in
ss
(bad)
ror
add
jmp
sahf
jg
inc
sar
fidiv
or
add
retf
dec
add
or
(bad)
shr
lock
mov
mov
dec
rol
ret
repz
sub
loope
ret
jbe
lock
and
inc
call
push
add
pop
sub
cmp
or
sbb
add
mov
outs
clc
inc
call
call
cld
inc
jp
mov
pop
push
popa
add
push
adc
and
inc
jo
dec
and
fldenv
in
jae
xchg
push
mov
sahf
neg
rol
mov
push
inc
jae
push
sbb
lahf
mov
clc
fbstp
mov
rcr
(bad)
sbb
push
popf
add
cmp
adc
lahf
sbb
inc
push
adc
mov
and
mov
sbb
dec
out
gs
stc
daa
aaa
aad
ins
cmp
pop
pop
mov
push
(bad)
fchs
xlat
add
jnp
pop
cld
push
sbb
and
xor
pop
inc
rol
xchg
jmp
inc
test
clc
ins
shl
adc
jmp
lods
outs
inc
ja
mov
jns
dec
inc
cmp
cmp
jne
xor
mov
push
dec
test
mov
cmp
wrmsr
sbb
dec
loop
adc
fiadd
hlt
dec
or
jp
push
jns
out
dec
or
pop
or
pop
popa
adc
shl
mov
out
pop
mov
arpl
imul
jbe
push
mov
dec
push
xor
adc
jle
std
out
mov
add
inc
jne
dec
inc
add
push
adc
push
pop
xchg
or
push
clc
cs
add
xor
lahf
adc
stc
pop
lods
mov
add
xchg
mov
out
popa
dec
or
inc
add
fimul
int
pushf
pop
pop
adc
xor
cli
push
mov
xor
xor
sub
inc
clc
add
stos
push
les
inc
mov
(bad)
mov
or
add
ficom
popf
int3
pop
add
or
ins
dec
and
ret
cmp
test
stos
(bad)
pop
pcmpeqw
sbb
sub
cmp
fstp
fidiv
jo
jp
retf
inc
mov
or
inc
and
in
or
dec
dec
je
mov
stc
retf
inc
(bad)
mov
shl
shr
mov
adc
and
je
mov
adc
or
inc
add
loopne
add
pop
arpl
jbe
dec
fdivr
jbe
inc
fiadd
fadd
loopne
dec
pop
not
or
inc
sub
jmp
mov
inc
cmp
mov
loope
xchg
fisub
jb
lock
pop
in
cld
nop
pop
mov
fs
ins
push
(bad)
and
into
mov
cmp
icebp
adc
in
outs
or
pop
int
clc
push
pop
lds
cmp
(bad)
fistp
xchg
mov
add
and
push
sbb
repz
push
sbb
sbb
add
adc
adc
adc
adc
pop
push
or
adc
adc
or
add
xor
repnz
or
add
or
add
pop
push
stc
fisub
add
or
add
cwde
xchg
add
pop
dec
sub
inc
pop
repz
shl
dec
mov
fwait
iret
mov
pop
push
pop
cmp
sar
jle
jae
pop
ins
iret
repz
hlt
icebp
mov
int
repz
pop
sub
call
mov
fist
or
ror
call
hlt
push
dec
xchg
fmul
push
sbb
push
adc
jmp
xor
fcom
mov
sub
add
add
ds
popa
and
icebp
and
and
mov
inc
shl
inc
sub
add
cmps
or
addr16
inc
and
pop
inc
inc
enter
or
add
push
push
xchg
cmp
nop
inc
add
enter
dec
add
and
xor
dec
cmp
mov
push
add
ins
or
lahf
pop
in
xchg
or
repnz
push
dec
or
pop
mov
add
add
ins
xor
jg
stc
mov
aaa
add
or
sbb
xchg
add
and
hlt
in
pop
sbb
inc
cmp
cmp
xchg
inc
inc
mov
das
push
jo
cmp
or
mov
push
mov
xchg
and
push
xor
loope
or
ins
mov
add
xor
sub
dec
pop
pop
lea
cli
dec
ja
cmps
test
fiadd
jae
out
sahf
mov
lods
pop
mov
pop
and
push
sub
stc
add
sub
mov
or
mov
add
movs
adc
popf
adc
imul
sub
(bad)
sub
inc
mov
lea
dec
das
pop
xor
cmp
ret
ins
imul
test
inc
sbb
fcom
and
call
push
sbb
or
inc
test
pop
lds
sahf
lea
lock
sbb
mov
and
dec
add
mov
pop
shl
ret
dec
ins
and
push
and
adc
jb
in
jno
mov
fdivr
sbb
xor
sbb
cmps
dec
jne
fdivr
cmp
mov
pop
push
or
mov
add
in
ja
loop
hlt
or
and
or
jo
sbb
or
jb
inc
inc
in
in
ret
dec
cmps
and
ja
mov
pop
jecxz
arpl
lea
add
or
call
(bad)
cmp
add
push
jmp
push
call
mov
push
test
xor
fmul
hlt
or
xchg
shr
div
or
das
ret
pusha
cli
test
sahf
inc
mov
pop
push
or
push
je
(bad)
scas
jnp
pop
push
jns
inc
mov
cmp
xchg
out
mov
imul
mov
add
mov
daa
mov
or
add
add
out
(bad)
mov
daa
fcomip
nop
mov
addr16
xor
adc
std
test
aam
sbb
push
add
retf
(bad)
rcr
xchg
fimul
push
push
and
nop
(bad)
push
push
rcl
xor
fmul
add
test
push
add
push
sub
push
pop
aad
imul
leave
loope
xor
es
push
lock
xor
sbb
ins
enter
call
je
jmp
pusha
pop
jl
add
push
sbb
or
lock
pop
jg
neg
jne
adc
inc
pop
xor
movups
xchg
add
dec
inc
add
lea
mov
dec
xor
les
jle
pop
add
xchg
inc
iret
(bad)
adc
inc
loopne
test
out
jnp
pop
or
pop
sub
sub
xor
int
in
mov
dec
cs
add
xor
jae
add
fisubr
push
push
mov
cmp
cvtpi2ps
ins
js
mov
fs
dec
mov
xchg
add
adc
test
adc
push
and
ds
shr
iret
mov
cmp
in
inc
shl
adc
nop
cmps
in
inc
cmp
jle
xor
cmp
pushf
or
xor
scas
jge
add
and
inc
and
add
pop
aas
cmps
inc
or
jne
add
mov
pop
push
sbb
pop
into
xchg
or
dec
pop
xor
xor
adc
push
or
mov
test
sti
test
cli
loopne
out
push
or
call
dec
adc
out
or
sub
repnz
or
push
or
inc
jae
(bad)
pop
sub
push
adc
(bad)
shl
daa
int
jo
add
cmp
jns
out
inc
fs
xor
jo
jb
(bad)
je
add
and
mov
cwde
pop
imul
inc
arpl
sbb
imul
dec
sbb
icebp
test
(bad)
mov
f2xm1
jge
(bad)
xor
adc
add
push
(bad)
jecxz
jne
push
or
icebp
pop
mov
sub
in
xor
xor
inc
addr16
rcl
inc
ret
adc
xor
lods
jge
dec
adc
mov
sbb
cmps
jge
jns
push
push
push
sub
ins
je
add
mov
pop
add
repnz
add
loop
add
mov
pop
mov
into
js
cld
clc
retf
cmp
sub
and
loop
aaa
rol
ror
sub
mov
scas
pushf
jmp
xor
lods
test
xor
dec
push
dec
call
jne
pop
les
cli
inc
jae
mov
mov
add
jl
mov
fdivrp
call
add
lock
clc
push
add
pop
gs
add
(bad)
fild
cmp
sbb
loope
sub
int3
add
mov
std
arpl
daa
jne
mov
jne
lea
cwde
sahf
dec
fsubrp
sub
scas
push
mov
sbb
inc
push
fstp
xor
mov
retf
sub
in
sub
cli
outs
fucomp
daa
cmp
xor
and
xchg
pop
test
leave
mov
cwde
add
fistp
adc
mov
inc
popf
das
clc
lock
or
sbb
loopne
pop
or
pusha
call
call
jle
test
xor
sbb
sti
add
out
out
adc
ret
scas
jbe
pusha
hlt
push
imul
and
or
int3
xor
adc
or
mov
jmp
mov
xor
or
add
sbb
enter
or
add
jmp
and
aas
aas
(bad)
icebp
stc
aaa
jle
cmc
test
mov
ret
sub
pop
jnp
pushf
fimul
jb
hlt
es
jp
push
xor
push
ss
lock
scas
ret
retf
dec
xchg
pusha
lock
add
or
imul
rol
sub
and
and
dec
dec
jb
add
add
add
add
pop
pop
mov
add
add
in
xchg
out
in
pop
aaa
cmp
inc
jecxz
leave
xlat
jnp
mov
cmp
mov
loopne
ret
pop
aas
or
loopne
lock
mov
mov
mov
mov
push
pop
jo
push
xchg
jne
adc
xchg
dec
jb
out
add
movs
add
jmp
pop
call
call
add
pop
bt
sbb
jne
jmp
inc
jb
or
mov
adc
inc
pop
and
call
xor
sub
test
sbb
into
and
pop
sar
jne
jnp
mov
lea
pop
push
fcom
push
pop
fsubr
or
arpl
int3
sbb
push
push
jl
dec
jg
pop
mov
adc
sbb
adc
inc
std
aas
cs
enter
xor
push
ins
add
int3
sbb
mov
repz
inc
cmp
pop
sub
cmc
cmp
into
and
idiv
mov
inc
inc
cmp
jl
and
cmp
test
mov
test
das
fld
and
push
cmp
add
jle
xchg
std
fiadd
inc
dec
call
imul
add
mov
adc
inc
add
adc
xchg
cmps
call
in
sbb
or
stc
mov
jne
inc
or
mov
or
push
or
adc
or
xor
push
int3
dec
push
icebp
pop
out
sti
bnd
xor
das
push
push
add
sar
sbb
add
xchg
and
and
sbb
sbb
lahf
dec
lods
sub
mov
lock
xor
sub
mov
or
xchg
add
sar
in
xchg
(bad)
push
inc
sbb
lahf
shr
fisttp
(bad)
sub
(bad)
cmp
pop
sbb
adc
jo
lods
mov
sbb
xchg
mov
push
add
sub
jb
or
sbb
push
add
test
add
push
cmp
in
push
fisttp
retf
add
add
data16
fwait
movs
cmps
mov
push
adc
and
dec
sbb
dec
in
push
inc
leave
jo
add
push
ds
cmp
outs
repz
or
daa
iret
mov
in
add
add
add
add
lods
xor
jnp
sbb
add
out
cmp
and
and
pop
add
cs
add
jns
jb
mov
add
jno
xchg
das
stc
fdivp
cmp
mov
mov
cmps
mov
xor
adc
sbb
mov
push
xlat
test
mov
ror
push
(bad)
pop
sbb
jl
das
mov
lock
js
jae
cmps
jge
and
or
test
pop
or
(bad)
retf
cmps
xor
mov
sub
add
adc
enter
scas
shr
aam
mov
push
mov
test
jae
outs
add
(bad)
aad
fidiv
mov
lea
pop
movs
dec
jnp
or
fnstenv
movs
shl
out
push
mov
xchg
push
xor
and
leave
or
cs
push
repz
adc
ret
rcr
push
std
iret
push
mov
push
or
mov
popa
xor
ins
jle
stos
test
mov
pop
adc
inc
adc
test
jo
adc
dec
mov
push
(bad)
lds
sahf
sub
jb
or
arpl
stos
movs
push
add
ss
cmps
lea
sub
xor
rcl
(bad)
rol
or
cmp
aas
mov
and
pop
mov
clc
add
mov
fimul
shr
xlat
xlat
pop
test
jne
cmpps
push
scas
sbb
jmp
pop
sbb
cdq
pop
stos
stc
stc
stc
jo
lock
daa
int3
pop
fs
jp
xchg
pop
(bad)
fistp
repz
push
(bad)
jle
or
or
je
xor
(bad)
lock
stos
sub
and
add
es
inc
test
out
sub
add
es
int
push
pop
dec
adc
stc
pop
inc
jmp
xchg
inc
mov
push
add
jae
call
xlat
daa
lock
sub
fwait
inc
mov
add
sub
jb
cmp
adc
and
inc
iret
inc
das
shl
leave
mov
adc
mov
mov
fadd
jne
push
sub
add
int
dec
add
cmp
retf
stc
shr
add
sub
jmp
retf
add
push
(bad)
cmp
fs
lock
pop
xor
dec
jecxz
call
les
add
shl
(bad)
pop
movs
sub
test
clc
or
sbb
mov
push
ret
xor
pop
ret
push
add
pop
inc
push
xchg
in
push
add
mov
push
jne
test
mov
push
les
inc
sbb
sti
fsubr
push
jmp
cmps
adc
repz
add
pop
xor
adc
rcr
sub
mov
cmp
jb
hlt
mov
imul
stos
push
retf
push
aas
lds
fsubr
inc
cmp
jne
jb
cmp
mov
fild
test
mov
je
hlt
sbb
repnz
sti
imul
push
xor
cli
(bad)
push
cld
sahf
inc
pusha
add
mov
and
xchg
rcr
retf
div
and
fist
rol
or
or
popa
movs
inc
shl
xchg
xlat
or
mov
nop
or
std
cmp
scas
add
repnz
cmp
dec
pop
inc
xchg
add
cmp
test
sbb
retf
or
cwde
jmp
cdq
or
retf
cli
push
jne
mov
push
add
push
ficom
aaa
jmp
xor
push
and
inc
in
push
in
add
sbb
adc
ss
aas
sar
xchg
mov
ror
(bad)
add
mov
or
add
adc
or
pushf
push
or
mov
int3
or
push
xchg
or
or
add
add
add
ins
or
jp
call
push
(bad)
js
pushf
push
xchg
cmp
mov
mov
(bad)
mov
mov
add
mov
xchg
ss
mov
inc
jns
push
pop
push
in
hlt
mov
pop
imul
cmp
jmp
jae
sub
test
daa
add
pop
xchg
inc
pop
pop
inc
jmp
jp
test
inc
dec
rcl
inc
pavgb
pop
cdq
loope
loopne
icebp
inc
idiv
jmp
dec
daa
lea
loopne
ins
(bad)
dec
pop
cmc
add
inc
jnp
mov
jp
mov
rcl
test
add
xlat
loope
mov
mov
stos
mov
les
sub
fist
rcl
dec
ret
rol
add
(bad)
xchg
(bad)
aaa
std
stos
popa
addr16
fld
push
jl
mov
jmp
dec
(bad)
mov
in
jmp
cmp
mov
or
mov
out
xor
hlt
test
outs
scas
push
xchg
fiadd
sti
fwait
sbb
pop
and
adc
fidiv
pop
nop
mov
mov
ret
test
cmp
fdivr
out
sub
jl
push
jnp
out
sahf
jle
mov
pop
cmp
xor
pop
or
je
adc
add
xor
mov
ins
loopne
push
add
pop
xchg
add
adc
pop
inc
adc
cld
pop
sar
inc
fs
and
ret
and
pusha
pop
ror
adc
scas
add
jbe
test
clc
je
movzx
push
inc
push
clc
pusha
pop
cmp
je
push
push
pop
cmp
dec
fdiv
jge
mov
add
je
jmp
fistp
ins
xchg
sub
jmp
cmp
je
add
xchg
jb
(bad)
(bad)
aas
nop
and
adc
adc
pop
and
xchg
fld
jne
punpcklbw
pusha
mov
cmp
and
rcr
adc
arpl
pop
or
out
adc
add
rcr
mov
ins
sub
jo
jb
pop
jo
(bad)
shl
sbb
dec
ins
jmp
test
push
add
xchg
sub
loopne
dec
out
(bad)
int3
pop
rol
pop
(bad)
js
icebp
or
and
mov
cmps
lock
sub
dec
mov
add
sub
push
daa
into
lods
sahf
pop
enter
sub
test
sub
lock
and
call
jg
je
fdivr
and
or
push
dec
je
and
daa
(bad)
imul
rcr
push
pop
pop
sub
push
inc
push
mov
loope
jg
out
adc
add
mov
fisttp
jb
sbb
(bad)
cs
pop
enter
mov
js
imul
(bad)
jmp
in
push
daa
add
daa
push
inc
adc
push
outs
push
leave
push
neg
xchg
out
push
or
repnz
inc
jbe
dec
es
pop
adc
adc
and
sub
add
das
loop
rcl
xchg
dec
adc
pop
sub
or
pop
into
mov
jmp
or
cmp
in
add
dec
sbb
xor
adc
push
add
test
add
icebp
ss
pop
retf
inc
inc
xor
push
sbb
sahf
pop
pop
jns
pop
repnz
add
pop
jo
push
mov
add
adc
(bad)
jb
shl
cwde
hlt
or
add
aaa
inc
cwde
sub
cld
xchg
xchg
fstp
and
inc
add
push
lods
clc
nop
mov
cmp
push
cwde
cmp
and
test
add
lea
mov
in
in
loop
ror
xchg
dec
cmp
cmp
inc
mov
push
sbb
or
test
imul
fmul
xor
mov
stc
adc
cmp
mov
adc
mov
xor
xor
jmp
push
loop
(bad)
dec
jmp
sub
pop
adc
ret
push
mov
repz
rol
mov
jnp
jmp
add
retf
sbb
movs
sbb
add
adc
clc
nop
adc
sub
loop
xor
les
or
add
mov
loop
jmp
ret
dec
ret
push
xchg
mov
mov
dec
mov
jge
add
or
cmp
and
jae
test
pop
cmp
push
rep
fisubr
call
pop
aaa
adc
sbb
sti
sbb
sbb
ret
jmp
jecxz
jmp
push
cmp
pop
pop
inc
fwait
jno
pop
add
push
jmp
cmps
clc
inc
sti
add
cmp
xor
pop
push
loop
push
jno
std
xor
out
inc
inc
add
dec
clc
stos
popa
lahf
ror
(bad)
(bad)
(bad)
lock
(bad)
fmul
sbb
aad
cmp
xchg
push
xchg
push
dec
and
inc
dec
cli
mov
mov
(bad)
push
push
push
adc
mov
mov
les
pop
sbb
in
jno
push
and
sbb
dec
movs
mov
jns
call
mov
int3
dec
sbb
push
dec
and
or
sahf
(bad)
add
ja
outs
je
outs
jo
fcmovbe
sbb
cmp
jae
xor
pop
fist
inc
dec
add
xchg
sub
inc
mov
fmul
mov
or
sub
cmp
pushf
push
xor
xor
das
push
ret
retf
inc
dec
sub
jns
jmp
rcl
push
and
xchg
pop
test
add
inc
adc
mov
pop
in
inc
mov
jmp
mov
and
add
jl
inc
mov
xor
pop
fcom
mov
les
ret
lea
lods
inc
or
sub
adc
or
shl
dec
dec
cmp
ja
jmp
sar
mov
cmp
rdpmc
call
cmp
jns
ds
cmp
call
add
or
jne
push
js
or
into
and
xchg
adc
cli
cmp
fdiv
leave
add
fadd
xor
and
add
or
add
mov
jg
mov
mov
lds
or
loope
adc
and
shr
xchg
stos
fst
xchg
or
dec
repnz
mov
add
gs
pop
adc
add
cmp
jne
dec
and
cmp
jl
fcomp
sbb
retf
shr
arpl
adc
push
je
pop
add
xchg
nop
int3
lds
int
fs
rcl
shl
repnz
or
hlt
add
shl
sbb
aaa
push
hlt
or
push
jge
ins
icebp
fmul
(bad)
loopne
push
add
stc
je
pop
add
stos
jno
sbb
shl
push
push
stc
je
push
or
rcl
or
or
dec
or
push
icebp
into
dec
aaa
enter
mov
fsub
mov
pop
scas
stos
je
enter
pop
cmp
jmp
rol
sar
mov
aaa
cmp
lea
lock
add
xor
lock
xchg
sbb
call
push
push
or
and
dec
ror
adc
push
leave
adc
add
add
dec
je
jecxz
jmp
dec
push
jb
or
ja
out
adc
fs
jmp
sbb
xchg
cmp
adc
inc
jl
sbb
or
sbb
add
in
mov
jg
pop
mov
sub
inc
or
repz
(bad)
mov
or
repz
iret
lahf
sti
mov
mov
jmp
daa
je
clc
adc
mov
cmp
pop
or
add
dec
shr
pop
je
inc
dec
xlat
rol
and
in
add
cli
in
mov
mov
sti
je
sub
icebp
or
sti
mov
push
sub
add
out
repz
popa
cli
xor
dec
xor
ja
inc
inc
scas
movs
or
sub
inc
test
pop
rol
push
adc
dec
jae
adc
cli
cmp
rcr
push
les
pop
add
jp
das
push
mov
push
movs
ret
or
or
jmp
add
in
pop
mov
scas
in
xor
jbe
adc
jns
mov
(bad)
rcl
sub
clc
ds
inc
or
in
in
outs
pop
xor
pop
push
stc
add
pop
add
adc
or
adc
mov
int3
xlat
(bad)
add
ja
addr16
test
mov
outs
retf
cmp
mov
sti
inc
or
dec
or
push
or
xor
call
mov
push
jno
pop
xchg
addr16
stos
rol
sub
xor
xor
mov
xchg
cmp
les
dec
pop
dec
push
add
mul
xchg
pop
sub
es
sbb
cwde
cmp
and
push
and
out
lock
dec
jbe
jno
fdivr
je
adc
rcr
add
sub
cmc
sub
lea
ins
mov
fst
xor
movs
in
cmp
push
cmp
and
loopne
mov
mov
jae
(bad)
jecxz
cld
dec
daa
push
je
rol
fbstp
dec
xlat
lea
sahf
cmps
stc
cmp
cld
add
sti
out
adc
jmp
or
jmp
retf
cmps
pop
pop
jmp
or
test
add
mov
cmp
add
xchg
lock
jecxz
rol
(bad)
bnd
lea
dec
xchg
and
sbb
push
(bad)
ret
jl
jg
mov
jo
dec
jno
test
test
addr16
and
inc
sub
aad
add
jne
sar
adc
adc
sbb
push
adc
add
ds
push
add
push
mov
ins
adc
ins
xor
jo
sub
pop
jge
pop
shl
lods
mov
in
daa
dec
xor
jo
movs
sub
or
cli
or
jmp
sub
push
add
dec
or
jmp
pusha
jg
cmp
pop
add
pop
and
mov
add
and
dec
jae
fs
jecxz
out
arpl
push
jge
movs
pop
xchg
push
mov
pop
repnz
or
call
jne
mov
inc
jmp
icebp
sub
pop
jne
push
ret
cmp
jne
sub
pop
jp
dec
ja
dec
cmp
cmp
mov
loopne
add
or
and
es
jae
out
inc
cmp
push
fcomp
imul
sbb
and
push
(bad)
stos
out
fsubr
push
bound
or
mov
dec
sub
mov
adc
mov
retf
push
mov
mov
enter
lahf
and
jmp
dec
pop
add
retf
jne
sub
sar
mov
add
loopne
push
add
cmp
test
or
mov
jb
cmp
scas
jne
mov
fisttp
ja
add
rcl
jle
mov
loope
dec
sbb
inc
fidivr
inc
push
inc
pop
sbb
sti
push
sbb
push
sbb
push
push
add
add
loop
mov
mov
push
pop
jp
rcl
mov
add
mov
jge
add
add
inc
lahf
cmp
add
stc
or
and
push
mov
out
dec
into
or
scas
xchg
and
sub
data16
mov
rcl
jmp
xor
xchg
sub
and
inc
add
push
adc
adc
xchg
adc
sbb
(bad)
test
or
and
enter
sub
jmp
inc
pop
jbe
dec
add
push
and
sbb
pushf
pop
jp
dec
scas
xlat
pop
sbb
ret
rcr
cmp
inc
aam
mov
fst
lock
adc
out
aad
dec
adc
(bad)
gs
xor
push
jle
adc
test
test
mov
das
xor
push
test
sbb
push
cmp
ja
scas
sub
enter
jbe
lods
mov
dec
in
and
test
push
inc
in
jb
mov
pushf
mov
fcmovbe
pop
mov
dec
mov
lock
push
inc
push
in
call
addr16
xor
pop
push
adc
sub
push
aam
cmp
cli
in
dec
mov
rcl
es
and
ffree
adc
pop
or
sbb
add
test
jae
in
ret
mov
and
xchg
sbb
shl
shr
jg
jbe
dec
adc
adc
mov
lock
ja
cwde
mov
mov
je
cmp
adc
sub
(bad)
adc
add
push
push
cmp
neg
das
adc
pop
add
push
cld
jbe
mov
pusha
pop
(bad)
cmp
push
xor
adc
pop
jo
mov
out
fld
das
data16
lea
je
fwait
(bad)
into
mov
cmp
je
jle
push
inc
xor
xchg
test
lock
rcl
inc
out
mov
add
adc
(bad)
push
mov
xor
adc
lea
lods
jbe
mov
dec
mov
xor
sub
xor
lods
or
mov
bound
je
push
jle
or
or
mov
dec
outs
jmp
dec
movs
int3
push
mov
and
test
sub
faddp
pop
pop
xchg
mov
inc
pop
xchg
cmps
stc
(bad)
add
and
pop
xchg
mov
mov
push
in
lods
mov
sub
sub
pop
cwde
jge
add
xor
call
mov
pop
loopne
test
cmp
mov
mov
push
add
push
outs
and
lock
imul
int3
fcomp
pop
enter
push
pop
ss
push
cs
shl
xor
mov
add
add
mov
cmp
dec
xor
stos
mov
add
jo
cmp
jo
adc
dec
lock
add
mov
mov
cmps
int3
data16
iret
mov
dec
xchg
sub
sub
sar
jecxz
inc
nop
adc
xor
inc
test
cmps
adc
cmp
movs
jbe
dec
lds
add
push
pusha
movs
lods
mov
push
pop
and
fsubr
push
nop/reserved
lods
ret
jmp
add
adc
push
push
rol
push
sbb
mov
inc
sbb
push
pushf
inc
dec
and
sbb
in
push
fiadd
add
mov
inc
(bad)
retf
sbb
inc
add
inc
sub
imul
mov
ss
loopne
scas
mov
adc
push
sbb
add
or
idiv
adc
mov
mov
push
sub
cmp
xchg
inc
sbb
add
loopne
popa
sbb
mov
sti
jg
push
inc
jl
movs
and
sub
dec
lods
adc
dec
mov
sub
or
nop
outs
cmp
jb
pop
push
xor
xor
cmp
xor
lahf
sub
imul
mov
push
lods
mov
adc
sub
cmp
scas
add
(bad)
ss
add
inc
or
mov
shl
fwait
inc
push
sub
(bad)
sub
aas
(bad)
jnp
pusha
cmp
in
adc
sub
xor
hlt
ret
or
adc
pusha
sbb
dec
mov
sub
sub
jmp
jg
in
jno
lds
inc
mov
xchg
je
xchg
jnp
dec
adc
gs
mov
cld
aas
pusha
imul
inc
dec
mov
adc
mov
jb
add
or
mov
ret
adc
pop
sub
imul
add
lahf
sbb
jg
ins
xchg
pop
push
(bad)
retf
sub
addr16
sub
adc
loop
cmp
and
mov
dec
sub
mov
xor
out
sbb
push
fmul
call
adc
fwait
int3
push
repz
stos
xlat
mov
dec
call
jno
call
imul
dec
jb
fdivr
and
movs
sbb
sbb
out
adc
sub
cdq
inc
xchg
mov
jmp
rdtsc
outs
test
mov
fsub
mov
and
mov
mov
mov
div
inc
nop
push
xlat
arpl
jp
inc
push
inc
inc
add
push
push
mov
les
jecxz
pushf
and
mov
and
push
loopne
inc
push
or
ror
adc
sub
retf
in
sbb
and
push
mov
and
shr
xchg
mov
jmp
sar
push
cmp
adc
imul
mov
arpl
mov
push
push
ficom
add
enter
pop
mov
test
test
and
fimul
inc
je
dec
inc
icebp
dec
ret
pushf
mov
popf
mov
inc
or
dec
dec
les
shr
jb
pusha
sbb
lock
call
nop
lea
cmp
sbb
xor
inc
xchg
xchg
outs
or
lea
cmp
pop
xchg
retf
in
js
add
dec
dec
aas
lods
pop
sbb
pop
fwait
sbb
add
out
repnz
or
iret
mov
sub
inc
pop
or
(bad)
cmp
sbb
or
icebp
pop
dec
add
mov
fcomp
cmp
loop
pop
cwde
call
sub
out
sub
or
pushf
jle
mov
xchg
xchg
outs
add
add
retf
rcr
sar
popf
pop
nop
sbb
dec
adc
in
sahf
test
inc
add
cwde
cmp
add
js
or
and
sbb
or
ins
pop
dec
aaa
test
add
mov
leave
ret
add
das
push
xor
jbe
sbb
pop
xor
inc
test
fdiv
cmp
sbb
in
adc
jmp
dec
sti
inc
cmp
fwait
adc
jb
rcl
xor
xor
hlt
cmp
and
cmp
je
pop
add
cmp
rcl
mov
cld
imul
push
nop
sub
mov
aam
push
cmp
nop
dec
jnp
or
jge
inc
add
ins
pushf
xor
add
fwait
jae
das
adc
repnz
fcom
(bad)
idiv
les
ret
rol
mov
push
pop
xchg
or
xlat
xchg
xchg
jle
nop
inc
jle
in
xor
jle
add
sub
bound
or
daa
js
jp
add
sub
data16
or
sub
xor
ret
mov
dec
mov
mov
shl
popa
xchg
jecxz
or
ja
stos
push
rcr
add
mov
push
lea
hlt
sti
dec
test
inc
push
btc
pop
and
jge
ja
add
clc
xor
mov
loopne
jno
add
mov
mov
mov
or
fucomi
outs
xlat
mov
and
in
push
dec
add
fdiv
popf
adc
fbld
adc
add
cmps
jg
fnsave
mov
fnstsw
out
repnz
xchg
lea
das
inc
fcmovbe
fsubp
lods
push
sbb
fsubr
cmp
in
mov
loopne
dec
cs
jnp
(bad)
cwde
inc
mov
out
nop
mov
adc
and
mov
mov
dec
mov
inc
ficom
or
mov
call
jmp
cdq
dec
jb
inc
cmp
dec
js
cdq
add
dec
clc
sbb
dec
sbb
jne
scas
pop
mov
stos
fwait
push
push
add
or
mov
or
cli
mov
hlt
cmp
jo
ins
lea
xchg
retf
cmp
(bad)
sbb
xchg
add
mov
bt
call
xor
into
push
add
dec
or
jbe
add
movs
cmp
jns
imul
cs
sar
inc
aas
movs
outs
pop
mov
cmp
test
loop
inc
push
ror
add
lods
dec
xor
dec
xor
dec
xlat
sbb
jne
imul
push
adc
mov
and
es
inc
jnp
fst
xor
jecxz
es
jb
loope
jmp
fs
mov
lea
cmp
mov
push
leave
sbb
pop
int3
add
addr16
push
push
test
cmp
mov
mov
fimul
mov
dec
jecxz
jmp
or
xchg
nop
dec
dec
inc
adc
(bad)
in
adc
cmp
dec
lods
movs
dec
adc
cmp
xor
pop
std
xchg
inc
inc
add
sub
fmul
adc
sbb
inc
je
pop
cmp
jp
pop
lods
mov
repnz
or
cli
xor
push
loop
je
dec
dec
adc
dec
add
inc
std
add
mov
stos
inc
jno
sub
mov
(bad)
out
ss
jmp
aaa
add
aad
inc
mov
jne
pop
cmp
fimul
sub
push
je
fcmovnb
and
cmp
jne
xchg
pusha
rol
pop
fmul
lea
cdq
enter
adc
and
or
jl
test
jae
cmps
sbb
adc
fld
sub
mov
xor
push
and
frstor
jg
jns
enter
jnp
jne
pop
or
sbb
or
add
leave
cmp
add
adc
mov
push
test
fs
call
mov
pop
fild
dec
or
xchg
sub
mov
sbb
fimul
lea
sbb
das
popa
push
les
mov
aam
mov
mov
and
add
mov
mov
push
sbb
mov
jmp
rcr
inc
daa
mov
cmp
and
and
add
pop
cmp
adc
lahf
cmp
fwait
jbe
or
je
cmps
in
fstp
or
xchg
clc
and
push
mov
xor
xchg
sti
mov
ins
mov
test
xchg
push
movs
mov
sbb
jne
jnp
xor
fdivr
or
lods
adc
adc
inc
mov
mov
add
ror
js
add
(bad)
loopne
push
pusha
fcmovnb
movzx
ror
fdivr
inc
lock
inc
push
or
push
jb
in
pop
mov
retf
mov
mov
clc
xchg
call
mov
push
pop
mov
sbb
int3
mov
mov
push
dec
sbb
push
push
mov
sub
leave
ret
add
mov
aad
or
movs
and
pop
add
add
icebp
xchg
pop
jae
or
push
dec
movs
add
dec
push
mov
dec
dec
test
or
ins
inc
hlt
pusha
xchg
mov
or
mov
lea
add
jo
test
xor
rcr
je
inc
add
mov
push
dec
jle
add
sub
push
jecxz
clc
lea
push
push
shr
sub
outs
jne
xchg
push
cmp
fmul
not
inc
jnp
ins
lea
mov
mov
retf
adc
mov
retf
pop
ret
dec
adc
mov
dec
add
add
pop
cmps
push
out
jge
add
outs
jbe
add
inc
rcl
cmp
cmp
or
lahf
dec
das
push
outs
add
add
pop
push
(bad)
xlat
mov
add
dec
xor
cmp
das
jmp
into
pop
popa
sbb
fstp
jo
add
jp
or
and
rcl
loopne
(bad)
fcom
fdivr
loop
cmp
pop
cdq
and
mov
jle
xor
or
add
ret
xor
add
jne
mov
fist
adc
sahf
lods
int3
(bad)
jp
adc
ds
cmp
jae
shl
add
dec
iret
sbb
jl
stos
add
lock
bnd
mov
jle
xchg
adc
mov
dec
xor
shl
cmp
jg
xor
mov
popf
into
inc
mov
xchg
fs
je
cmp
rcr
idiv
pop
dec
mov
inc
aam
add
sub
sub
jno
jg
sbb
pop
sub
cmp
popa
jmp
div
and
sub
mov
loope
inc
adc
mov
ss
nop
add
push
sub
inc
push
js
pop
or
aam
or
sbb
sub
pop
xchg
sub
jmp
test
jb
and
mov
mov
or
or
enter
mov
pop
idiv
inc
sub
cmp
jne
test
cwde
sub
dec
jns
sub
jecxz
int3
add
(bad)
mov
ds
sbb
xchg
test
or
or
scas
xor
test
sbb
or
add
adc
cmc
sbb
add
xlat
push
jns
mov
adc
pop
daa
fst
arpl
aas
mov
bound
repnz
popa
les
jo
add
loop
imul
mov
cmc
adc
lods
push
inc
push
jmp
inc
sub
pop
shr
ja
sbb
cmp
adc
jle
mov
push
dec
push
cli
xchg
aam
aam
jo
pop
jae
pusha
pop
xor
dec
(bad)
cwde
add
cmp
jge
fnstsw
push
dec
ret
jle
ror
pop
aas
movzx
mov
xor
jbe
test
out
or
mov
icebp
jmp
push
mov
push
xchg
icebp
mov
add
and
imul
jo
fld
fs
sbb
imul
int
dec
lahf
ja
lahf
mov
mov
mov
add
pop
inc
rcr
int
dec
sar
pop
pop
lock
jnp
dec
popf
loope
sub
xchg
add
sbb
mov
daa
adc
(bad)
mov
loop
pusha
xor
add
adc
push
mov
push
jno
and
add
jmp
cmp
xor
test
out
test
scas
inc
push
sub
nop
mov
popa
pop
sar
hlt
leave
das
dec
in
adc
lea
in
lods
enter
loopne
add
xchg
out
lea
test
hlt
aad
jb
lock
mov
xor
sub
and
mov
shr
cmp
jl
test
push
inc
outs
je
mov
je
jo
xor
cs
jae
enter
aad
stc
icebp
push
and
scas
aaa
xlat
adc
fisubr
or
adc
inc
jo
or
adc
out
xchg
sub
xor
push
or
out
xor
inc
cli
rcl
cmp
retf
(bad)
icebp
lock
dec
dec
stos
mov
mov
and
or
fnstcw
test
push
cmp
mov
sbb
popa
ret
jle
mov
pmaxub
pop
mov
adc
cmp
inc
add
loop
sub
test
push
iret
inc
push
or
pop
dec
js
stos
add
inc
sub
pusha
es
mov
adc
les
inc
dec
jae
add
mov
call
call
mov
xchg
aad
adc
cmp
dec
lea
imul
mov
inc
mov
pop
push
inc
ss
pop
jbe
inc
cmps
mov
jle
add
mov
or
dec
(bad)
dec
push
out
fisttp
jmp
add
inc
lods
fmulp
fld
fucompp
fnstsw
test
(bad)
shr
xor
ja
push
imul
xchg
xor
adc
jl
and
push
xor
loopne
fdivr
aam
test
imul
mov
mov
movs
(bad)
adc
jmp
mov
adc
sub
adc
sti
xchg
mov
and
push
pop
sub
mov
in
jno
sub
add
sbb
fldenv
and
pop
ret
adc
dec
sbb
fidivr
pushf
sub
cmp
jb
idiv
push
jae
jmp
mov
cwde
add
cli
mov
mov
fadd
std
cdq
and
sub
push
add
xor
fild
add
int3
mov
push
push
cmp
mov
adc
xchg
mov
fidiv
out
sub
imul
hlt
xchg
ret
or
js
fcmovnu
lods
test
xchg
xchg
or
mov
int
int
add
cwde
loopne
jl
push
test
mov
aas
fdivr
push
sbb
(bad)
and
inc
fmulp
xchg
inc
je
sbb
and
xor
test
test
adc
sub
push
jns
fwait
push
xchg
mov
inc
stos
ror
push
add
dec
pop
xor
mov
lea
sbb
imul
push
sub
dec
shr
pusha
inc
cmp
nop
retf
ins
fst
xchg
jecxz
sbb
adc
icebp
add
fadd
pop
(bad)
jecxz
jb
dec
xchg
xchg
leave
retf
ja
mov
jle
mov
xchg
inc
in
adc
jmp
clc
jb
or
inc
test
mov
and
inc
loop
pusha
js
mov
mov
loop
nop
and
call
push
lahf
xchg
(bad)
lea
sub
or
sub
std
std
mov
out
sub
inc
or
jge
mov
cli
or
xor
add
pop
pushf
mov
dec
push
(bad)
out
adc
rol
jnp
xor
mov
imul
or
or
cmp
fld
retf
xor
fld
push
(bad)
xor
in
cmp
mov
add
aaa
push
mul
or
pop
and
jge
ja
sahf
jns
cmp
les
xchg
push
movs
xor
pop
mov
cmps
or
or
mov
cs
push
fwait
sti
jbe
jae
cld
outs
push
(bad)
or
cmp
mov
adc
stc
iret
push
cld
and
js
add
mov
and
inc
lahf
int
push
das
(bad)
adc
adc
add
push
inc
inc
lds
mov
xchg
out
inc
mov
retf
add
or
jmp
(bad)
dec
sub
stos
rol
aad
add
cli
sub
jnp
xor
sar
out
and
add
push
or
stos
fmul
lods
pop
adc
xor
out
ret
test
jnp
shl
and
mov
xor
adc
inc
push
add
jmp
sub
es
inc
xor
neg
ss
ret
out
data16
jge
inc
sbb
and
sbb
ins
popa
mov
out
jne
adc
jo
test
xor
jbe
sub
adc
out
nop
jle
inc
pop
ds
in
mov
add
push
jno
push
ins
in
or
mov
gs
jmp
or
add
not
mov
outs
(bad)
retf
(bad)
mov
pop
pusha
sub
jne
pop
bound
or
mov
cmp
inc
or
and
shl
sbb
into
push
push
mov
adc
sub
add
jp
popf
push
pop
mov
sub
test
add
mov
push
cmp
ja
std
popa
mov
jmp
mov
push
mov
sub
or
jne
push
(bad)
pop
lods
out
add
push
dec
add
add
jle
add
sub
sub
adc
cmp
mov
sbb
mov
or
jmp
push
hlt
repnz
push
retf
and
in
stos
push
cmp
jbe
sbb
or
das
add
cmp
jl
fs
enter
xor
inc
ins
pop
adc
inc
dec
pop
les
inc
xchg
stc
xchg
push
cwde
lock
add
jns
sub
add
sahf
push
sub
push
dec
mov
add
nop
push
pop
enter
or
div
loop
cmp
pusha
xor
sbb
add
jl
jno
aam
xor
sbb
dec
jle
xor
jmp
addr16
cmp
addr16
call
aaa
nop
imul
inc
adc
cmp
popf
pop
and
pop
jbe
inc
imul
push
push
adc
xor
add
push
sub
push
cmovae
and
xchg
xchg
(bad)
inc
cmp
push
sbb
pop
movs
xchg
mov
push
jo
lds
aas
inc
rcl
dec
(bad)
movs
jg
popf
das
call
ja
mov
dec
je
pop
test
push
xchg
ror
pop
ret
fnstcw
out
es
sub
pop
pop
out
inc
scas
mov
cmp
inc
pop
mov
rol
or
sbb
mov
xchg
ss
dec
rol
adc
push
sub
add
xchg
or
dec
sbb
adc
(bad)
mov
lods
pop
add
pushf
not
xchg
ret
inc
pusha
stos
and
add
jne
jbe
dec
fstp
xor
test
cmp
bound
and
jg
call
aam
xor
push
jmp
enter
inc
rcr
jp
xchg
adc
rol
push
pop
push
cmp
popf
and
cmp
mov
and
cmp
mov
sub
enter
cmp
add
inc
inc
add
fstp
cmp
jnp
es
sar
dec
jnp
(bad)
es
js
in
popa
clc
test
jle
cmp
push
cmp
scas
pop
sar
mov
xor
sub
nop
pop
fst
popa
inc
sub
lahf
movlps
dec
xor
add
outs
xchg
xlat
test
xchg
sahf
cmp
aad
mov
popf
inc
add
dec
or
inc
push
rol
mov
or
jle
add
cmp
test
sbb
push
or
arpl
sbb
add
imul
enter
xor
or
add
inc
and
mov
push
ror
add
jae
push
pop
nop
out
adc
or
sbb
pop
adc
sub
pusha
add
pop
pushf
cmp
and
je
movsx
ud0
aaa
sub
or
add
xchg
sub
inc
sbb
sub
or
jecxz
inc
add
inc
lds
stos
push
sub
(bad)
jecxz
ss
adc
add
ret
je
jae
add
pop
xor
lea
jg
or
addr16
and
mov
retf
xchg
pop
fs
mov
(bad)
fstp
and
mov
js
mov
jmp
mov
cs
aaa
sub
loope
enter
scas
sbb
scas
(bad)
loopne
jo
pop
jg
push
jle
mov
call
dec
mov
xor
lods
xor
push
mov
push
out
ror
cmp
inc
arpl
nop
int
pop
je
mov
sub
pop
jno
mov
test
mov
sbb
rol
jmp
cmp
push
jmp
dec
mov
xor
pop
stc
xchg
add
push
dec
push
add
push
adc
js
ret
test
(bad)
retf
out
jl
mov
pop
inc
push
xchg
add
jmp
(bad)
jmp
or
sub
sbb
adc
ss
xchg
lods
xchg
retf
imul
lea
test
inc
mov
cmp
jo
lock
sub
je
xor
inc
jnp
sbb
pop
push
add
or
popa
ret
push
mov
inc
lock
retf
fdivr
inc
pop
fstp
outs
jmp
sub
lods
sub
in
add
scas
mov
dec
dec
inc
jmp
mov
test
pop
nop
add
add
or
and
mov
dec
sbb
cmp
and
sbb
dec
test
add
shl
fs
loopne
or
inc
or
xchg
xor
and
jnp
mov
clc
and
mov
bnd
sub
inc
je
push
xchg
xchg
cmp
add
add
js
xchg
clc
nop
cmp
ds
jge
add
mov
addr16
retf
sub
mov
test
xor
ds
daa
mov
out
loope
adc
repnz
xchg
cmp
push
add
cmp
fisubr
les
ins
add
inc
inc
mov
xor
cmp
iret
sub
xchg
jns
adc
jl
xor
inc
jg
xor
sub
es
inc
xchg
int3
into
hlt
mov
dec
and
xor
and
mov
jbe
xchg
inc
jb
mov
jmp
das
add
fcos
loopne
xor
cmp
mov
jne
add
xchg
sub
inc
js
pop
bound
sar
xchg
jne
or
inc
or
jbe
add
ret
add
xchg
test
imul
add
and
adc
adc
or
ret
jmp
fs
or
cmp
adc
(bad)
gs
or
cmp
packssdw
ds
out
fadd
pop
push
mov
pop
jmp
sub
add
sub
fcmovbe
cmp
or
icebp
cmp
imul
add
jne
pusha
inc
dec
jmp
or
xor
vandps
cmp
movs
cmp
push
pusha
sbb
push
and
in
xchg
pop
test
fs
add
mov
jae
call
jmp
out
sbb
sbb
sbb
pop
call
jecxz
test
das
adc
je
shl
pop
sbb
push
dec
cmp
sbb
cmp
or
add
push
test
jecxz
sub
mov
outs
dec
(bad)
dec
adc
(bad)
mov
ret
imul
fwait
pop
sbb
test
xor
fistp
leave
cmp
push
add
test
std
les
ja
hlt
mov
mov
xor
sub
test
das
cmp
aam
cmp
dec
dec
add
in
xchg
daa
jae
or
and
jne
(bad)
mov
loope
add
stos
push
or
mov
or
and
repz
jmp
adc
mov
xchg
fmul
pop
dec
add
(bad)
(bad)
add
(bad)
mov
mov
loopne
pop
xor
nop
mov
fld
cmp
inc
push
in
dec
cmp
jge
movd
mov
mov
xchg
int3
sub
sub
cmp
adc
mov
add
dec
inc
mov
test
and
aas
out
lea
xchg
ins
jne
jno
jl
adc
add
or
jno
push
stos
push
dec
fld
or
jl
inc
sub
stos
jno
stos
cmp
aas
sub
fldenv
data16
(bad)
test
push
in
shl
rcl
loop
mov
cmp
xchg
icebp
dec
mov
sbb
add
mov
sub
dec
pop
pop
jmp
xchg
sub
xchg
xchg
sub
leave
jge
sub
shl
mov
js
jmp
nop
lock
add
mov
jo
xor
sub
mov
push
cmp
add
pop
add
add
adc
cmp
or
mov
(bad)
retf
adc
mov
push
aas
icebp
mov
xchg
sub
push
add
dec
lock
jmp
adc
shl
push
inc
into
sub
pop
pop
rcl
add
xchg
inc
arpl
int3
mov
sub
jne
push
mov
sbb
and
inc
inc
sahf
repnz
test
add
xchg
dec
add
dec
or
xchg
inc
sti
les
lea
imul
mov
sub
mov
outs
aas
cli
jae
jl
ins
je
or
je
add
std
cli
out
mov
xchg
mov
ins
mov
out
imul
xor
std
or
jmp
inc
or
aas
adc
or
xor
or
sub
je
ret
and
mov
test
inc
call
mov
dec
pop
dec
mov
enter
sub
nop
jecxz
xor
and
or
xor
xchg
das
mov
pusha
jmp
test
movs
int
pop
sbb
mov
inc
xchg
sub
call
cmc
jne
outs
es
or
daa
xchg
into
aam
movs
inc
out
shr
mov
and
(bad)
jne
add
pop
clc
pop
cmp
or
push
mov
cmp
mov
push
mov
push
test
sbb
push
(bad)
lods
int
retf
test
push
es
lods
out
and
sbb
xchg
xor
push
sub
mul
imul
pusha
sbb
inc
and
mov
or
push
inc
add
icebp
outs
jg
or
inc
rcr
cwde
push
mov
jmp
cmp
mov
or
dec
pop
les
adc
ja
loop
mov
loopne
bnd
movq
pop
pop
and
sbb
fwait
out
add
or
cdq
fwait
cld
xor
sub
sub
or
add
mov
add
mov
retf
adc
mov
outs
call
int
push
in
push
push
jmp
add
sbb
cmp
shl
aam
enter
push
popa
mov
xchg
stc
test
lods
mov
cmp
test
jne
cmp
in
out
movs
nop
test
ret
dec
cmp
rcr
shl
cmp
sub
enter
xchg
stos
es
mov
test
test
or
xchg
xchg
add
push
sahf
test
mov
jne
les
ins
pop
arpl
sub
jge
xchg
arpl
scas
iret
or
data16
sub
cmp
pop
pop
mov
xchg
inc
xchg
xor
sub
(bad)
scas
ret
repz
cmp
cs
pop
sub
ret
jmp
rol
lods
movs
js
cmp
mov
call
int3
daa
bound
dec
ret
movs
sub
add
push
bswap
dec
push
iret
adc
popa
fwait
push
imul
jge
sbb
mov
or
inc
ror
arpl
jb
cmp
fsubr
pop
dec
mov
sub
std
fdivr
sub
shl
(bad)
xor
cmp
xor
por
jne
ss
clc
std
xchg
test
cmp
fiadd
mov
cmp
inc
cmp
icebp
jle
mov
sub
lock
in
add
and
xor
stc
jl
ficomp
jl
or
sbb
jnp
inc
jnp
cmp
dec
cmps
push
mov
mov
pop
and
daa
sub
test
mov
fisttp
mov
add
mov
add
push
js
or
dec
add
xchg
sbb
std
mov
add
dec
adc
mov
inc
sub
ins
es
mov
add
add
add
(bad)
pop
call
sar
lea
aam
loopne
mov
xchg
sar
js
mov
jp
push
dec
out
mov
lea
(bad)
xchg
je
clc
add
push
sbb
outs
sbb
dec
test
in
jbe
sbb
jg
sbb
and
or
cmp
cli
adc
jne
inc
ret
cld
enter
mov
push
imul
dec
jmp
mov
push
pop
dec
sbb
xchg
cmp
jmp
cld
sbb
sbb
xchg
add
sbb
stc
shl
popa
scas
adc
xor
sbb
or
inc
fadd
pop
inc
jbe
into
adc
xchg
aas
add
lea
push
in
dec
fcmovbe
xchg
pop
jecxz
add
lea
aad
mov
ss
jg
sti
xor
inc
and
mov
mov
aam
shl
pop
mov
mov
mov
loope
mov
mov
popf
retf
(bad)
add
adc
stos
lea
pmulhw
(bad)
mov
stos
and
lock
je
shr
fwait
das
(bad)
repz
out
sbb
arpl
jae
cmp
push
jb
lahf
(bad)
and
stc
or
clc
pop
xchg
pop
inc
adc
xor
sub
and
and
ror
or
xor
sbb
ror
dec
rol
fmul
push
mov
aam
inc
pop
call
fsubr
cmp
sub
popa
fst
mov
inc
aaa
or
aam
xchg
or
adc
adc
xchg
shl
out
xor
test
hlt
dec
mov
push
cmp
cld
xchg
xchg
cmp
add
xchg
ss
sub
or
xchg
in
sbb
adc
test
daa
push
push
inc
stos
mov
cmp
sbb
sbb
imul
cmp
mov
and
imul
add
adc
and
rol
dec
jo
mov
xchg
and
test
push
clc
push
aas
mov
(bad)
jp
mov
or
pop
fsubr
inc
mov
mov
movs
mov
or
aad
and
add
pop
push
sbb
lea
sbb
dec
(bad)
cmp
test
mov
popa
xchg
loopne
inc
int3
(bad)
push
enter
push
xchg
clc
or
push
dec
mov
cmc
inc
pop
loop
fsubr
(bad)
fild
mov
mov
pop
cmc
push
ins
cwde
sbb
sar
enter
movs
int3
(bad)
jmp
rol
sub
mov
dec
loopne
shl
inc
gs
fmul
adc
or
pusha
dec
adc
mov
pop
add
aam
pop
and
std
cmp
sub
(bad)
int3
cld
aam
lock
and
mov
cmps
push
push
or
push
or
outs
or
sbb
je
mov
xor
(bad)
sbb
and
push
cld
je
xor
dec
sbb
fsubr
pop
test
lock
sub
xchg
xor
inc
daa
jecxz
in
dec
sbb
xchg
loop
ins
mov
cld
pop
jl
push
jno
xchg
and
int
and
or
mov
dec
add
ret
shr
jg
jno
pop
(bad)
fiadd
mov
pop
mov
dec
hlt
fdivr
add
inc
lds
into
jle
cmp
enter
je
pop
and
dec
mov
inc
dec
hlt
hlt
out
jl
adc
and
popf
out
jmp
sti
pop
mov
mov
into
push
cmps
pop
mov
dec
out
pop
cmps
xor
jne
or
sub
sub
xor
jnp
mov
je
mov
retf
cmps
xchg
or
inc
rol
xchg
js
pop
push
dec
cld
or
pop
pop
xor
add
sbb
(bad)
adc
shr
push
ja
mov
xor
dec
add
push
sbb
mov
(bad)
cmp
xchg
rcl
aaa
or
sbb
pop
rcl
rcr
sbb
add
daa
call
sub
cmp
addr16
jg
mov
aad
or
test
dec
ds
dec
fsubr
call
add
or
jno
rcl
dec
enter
add
nop
retf
xchg
jne
in
sbb
jmp
addr16
cmp
push
sbb
push
inc
stos
push
out
inc
push
stos
push
lea
cmc
cli
or
and
and
mov
stc
cmc
or
sbb
jmp
shl
mov
loope
aam
repz
add
mov
add
mov
(bad)
pop
push
cdq
bound
aas
sub
(bad)
popa
add
je
pop
pusha
add
or
dec
addr16
out
fnstenv
inc
add
add
xlat
imul
(bad)
aad
add
lds
cmc
pop
xchg
mov
add
push
add
inc
inc
ja
or
ror
dec
push
ret
retf
(bad)
and
setl
push
adc
xchg
add
adc
cmps
(bad)
push
pop
inc
pop
inc
adc
jae
cwde
nop
inc
and
or
jae
pop
adc
adc
or
xchg
(bad)
jmp
sbb
and
xor
stc
or
loope
push
fsubr
push
jmp
adc
pop
ds
mov
ret
pusha
xchg
pop
les
and
sbb
jb
pusha
jno
pop
jle
xchg
sbb
dec
test
push
push
ja
xor
sar
out
add
das
(bad)
scas
movs
mov
jg
je
pop
adc
sbb
out
in
mov
and
add
add
sti
push
jb
push
std
jb
(bad)
mov
jo
jecxz
push
ss
jo
jge
shl
icebp
mov
jmp
cmp
jne
push
push
ret
je
push
test
jle
lods
and
das
mov
dec
mov
inc
ret
repnz
push
push
sub
dec
push
test
add
mov
mov
dec
dec
and
jmp
xor
imul
sub
test
pop
sub
adc
add
cmp
(bad)
rcr
adc
xor
lea
sub
mov
scas
enter
xor
jmp
add
inc
cmp
jl
push
cmc
add
jl
mov
jecxz
sbb
add
sbb
or
mov
dec
out
add
fldenv
dec
rcl
sbb
or
rcr
imul
sbb
xchg
fstp
xor
rcl
in
or
in
adc
mov
retf
jmp
pop
push
test
fwait
arpl
add
in
idiv
cmp
inc
mov
add
call
dec
in
sbb
sub
int3
sbb
popf
ins
sub
sbb
sbb
xchg
(bad)
ror
pop
add
nop
inc
sbb
inc
or
jmp
push
fdiv
inc
test
sub
jp
fcom
les
xor
push
and
pop
test
or
add
repnz
enter
xchg
shl
add
cmp
arpl
fmul
push
push
test
mov
std
add
and
int
dec
adc
xchg
inc
ret
shr
pop
push
pop
adc
mov
or
movsx
or
push
pop
or
and
mov
fisub
cmp
ja
add
rcl
adc
xchg
jmp
mov
jb
inc
in
inc
cmp
inc
and
add
test
cmp
jae
sbb
or
aam
(bad)
cs
jns
pop
outs
out
adc
jb
or
mov
jns
mov
rcr
push
inc
mov
adc
jb
push
cdq
dec
sahf
iret
adc
fstp
inc
and
cdq
inc
ds
pushf
out
stc
add
dec
or
cmp
in
pop
dec
jmp
push
push
dec
or
dec
mov
fisubr
add
push
jmp
dec
push
outs
or
add
cmp
mov
inc
cmp
jge
adc
cli
je
sub
or
ficom
add
jne
sbb
sbb
or
xchg
jle
mov
or
mov
das
sub
add
jo
sbb
repnz
inc
xchg
pop
and
test
mov
and
in
cmp
jo
lock
dec
jmp
add
jmp
add
sub
lahf
mov
and
and
sub
and
lds
sbb
shl
pop
or
sbb
adc
xor
push
fs
dec
sbb
fnsave
cmp
and
mov
ins
mov
jge
rol
and
mov
dec
dec
mov
pop
push
mov
sbb
ror
or
js
sub
or
sbb
cs
jb
ror
adc
lea
imul
dec
push
out
pop
js
xor
mov
xchg
sbb
fadd
sbb
cmps
inc
sbb
scas
push
imul
sbb
rol
add
inc
xchg
or
inc
adc
call
clc
jo
loopne
fwait
push
rol
or
enter
inc
(bad)
lock
and
jo
jle
adc
js
sub
add
cdq
mov
and
mov
dec
imul
add
pop
fist
jmp
push
add
pop
mov
clc
mov
push
outs
push
or
dec
mov
pop
add
adc
iret
cdq
add
(bad)
add
mov
cmp
pushaw
and
loopne
push
mov
sub
ret
retf
push
xor
test
jle
inc
pusha
out
or
sub
inc
push
add
pop
inc
dec
ins
pop
fsub
and
iret
adc
push
push
mov
aam
es
add
xor
int3
outs
jno
mov
push
push
cmps
sbb
je
shl
ss
fst
test
sub
mov
and
and
mov
push
or
push
jbe
int
inc
fst
dec
mov
jg
lsl
mov
adc
or
mov
add
mov
pushf
hlt
test
push
xor
pop
cmp
clc
lock
fimul
leave
enter
js
and
data16
and
mov
jns
dec
and
xor
or
dec
add
in
scas
mov
retf
rol
js
jge
add
push
shr
and
mov
stos
loopne
xor
dec
adc
xchg
pop
mov
loop
popa
pop
inc
cmps
outs
and
ror
ret
bound
sbb
or
sbb
push
sbb
sbb
dec
mov
sbb
mov
push
repz
int3
mov
retf
jp
inc
loopne
sbb
test
or
or
retf
inc
sbb
add
jl
mov
aaa
pop
mov
or
xor
cmp
jbe
push
mov
lods
cmovb
sub
adc
jge
mov
sbb
and
int3
fsub
or
mov
or
ins
push
dec
dec
std
movs
jno
push
(bad)
mov
lock
movs
mov
sub
inc
repz
mov
or
jge
out
or
xor
sbb
pop
cmp
mov
or
dec
jmp
aaa
push
xor
adc
jb
inc
mov
add
cmp
lods
jno
mov
mov
iret
push
add
pop
mov
ins
cmp
ins
or
outs
xor
clc
mov
jbe
jnp
mov
lock
xchg
cld
jge
shr
add
or
sbb
or
push
mov
sbb
inc
push
stc
cmps
sub
xor
movs
hlt
div
cmp
je
inc
in
and
mov
mov
rcr
jge
rol
fadd
ret
rol
mov
or
dec
jmp
cli
xor
ret
or
rol
dec
adc
fistp
cmp
inc
inc
or
ret
or
out
mov
adc
or
push
je
pop
dec
test
dec
sub
dec
(bad)
jmp
sahf
push
adc
inc
jmp
fst
push
sub
inc
js
aas
bound
and
cmp
rcl
lea
jmp
xchg
fs
or
inc
push
out
xor
lock
add
loope
add
pop
aad
cmp
retf
push
pop
add
repz
mov
push
or
pop
adc
leave
and
add
jl
add
fadd
jb
test
xor
test
add
je
mov
sbb
push
sbb
and
add
call
cmp
shr
cmps
outs
inc
pop
and
fiadd
ds
into
in
call
and
lods
xadd
or
add
adc
or
dec
mov
or
pop
adc
ins
dec
or
add
jmp
movs
imul
aaa
add
adc
mov
add
inc
ins
add
sbb
add
add
addr16
cmp
inc
jle
jg
(bad)
mov
pop
mov
add
in
dec
mov
mov
cmp
fisubr
or
mov
retf
je
lock
push
add
add
aad
jae
mov
mov
dec
into
sbb
xor
addr16
jae
data16
mov
xchg
jnp
cmp
cld
or
in
xlat
cmp
or
xor
in
mov
or
jbe
lock
adc
movnti
jbe
fcomp
jmp
jmp
xchg
sbb
ret
mov
cmp
push
or
fcmovb
rol
adc
loope
lods
ror
call
and
xor
pop
inc
and
or
pop
call
repnz
sbb
adc
stos
or
sbb
adc
jmp
call
dec
in
jmp
add
inc
add
clc
push
mov
dec
or
dec
and
jmp
mov
sahf
xchg
movs
shr
adc
and
mov
mov
mov
xchg
inc
cwde
jge
fimul
mov
mov
int3
or
mov
call
pop
add
sbb
sbb
mov
std
and
sub
int
mov
sub
out
div
das
inc
xor
fldcw
xor
cmp
sbb
neg
mov
into
push
push
rcl
fldcw
adc
dec
pop
dec
repz
int
test
ror
(bad)
pop
addr16
addr16
dec
repz
jmp
into
sub
pop
ror
jb
cmp
sahf
out
cmp
call
test
jl
jp
add
and
das
and
cmp
inc
stc
test
adc
adc
adc
adc
pop
sbb
push
inc
setg
push
fldcw
inc
pop
add
push
add
inc
add
jmp
inc
shr
mov
add
std
sub
mov
jnp
out
dec
std
adc
fucomp
out
pop
sti
or
data16
inc
push
(bad)
cmp
mov
cli
mov
inc
push
retf
inc
mov
mov
push
(bad)
mov
pop
mov
and
xor
add
or
add
pusha
cld
mov
jo
fwait
push
scas
mov
mov
pop
aaa
lea
push
(bad)
lods
or
adc
mov
jne
jl
push
cld
xor
test
pop
adc
sub
inc
jo
add
clc
push
dec
jnp
inc
cwde
ror
popa
sbb
push
sbb
xor
sbb
add
scas
add
push
(bad)
adc
adc
xlat
cmp
adc
repnz
sbb
stos
or
(bad)
jo
or
jl
(bad)
ffree
pop
inc
xchg
out
mov
cmp
ja
clc
loopne
imul
mov
ja
jmp
add
dec
and
and
inc
push
lods
jp
pop
lea
sub
pop
mov
and
xchg
xor
dec
sbb
loopne
test
out
inc
fistp
add
pop
xchg
sbb
jl
adc
jo
and
sahf
adc
dec
clc
test
inc
idiv
jb
jbe
inc
inc
or
or
hlt
popa
dec
jmp
fs
xchg
loope
add
dec
push
pop
ret
xchg
int3
aaa
cmp
lahf
adc
pop
cdq
lea
add
mov
not
(bad)
ds
nop
aaa
out
into
nop
mov
mov
js
cdq
push
nop
clc
movs
(bad)
(bad)
int3
ret
mov
xchg
push
rcr
sbb
push
cmp
inc
xchg
movs
adc
jns
test
sbb
es
dec
jmp
add
ror
mov
add
or
xchg
and
nop
mov
out
and
nop
jle
inc
aaa
mov
test
nop
cmp
imul
push
fiadd
jo
retf
mov
cmp
push
cli
pop
nop
ror
hlt
sub
ret
inc
je
nop
jno
inc
adc
push
adc
fdivr
mov
mov
add
xor
mov
xlat
fcmovnb
icebp
stc
sbb
je
popa
pop
and
adc
mov
movs
imul
and
add
cmp
sub
mov
sbb
bound
xor
cmp
inc
or
sti
fwait
xchg
sub
jmp
ret
adc
jo
or
adc
jns
dec
shl
rol
adc
sahf
adc
in
(bad)
stos
push
lds
mov
ds
les
mov
sub
add
rcl
push
push
or
xor
popf
push
(bad)
pop
out
inc
add
sbb
ror
ret
fwait
cmp
sub
inc
sub
xchg
sub
mov
jmp
and
repz
sub
and
jp
addr16
cmps
inc
(bad)
pop
lahf
cmps
mov
les
(bad)
xor
shr
jo
test
hlt
out
cmps
add
push
adc
push
pop
push
enter
xchg
xlat
bound
cmps
scas
sbb
aas
jmp
mov
fdivr
adc
jge
push
(bad)
or
shl
or
je
inc
cmc
retf
adc
bts
sub
add
(bad)
stc
adc
adc
aaa
and
leave
fsub
inc
dec
and
push
test
js
sub
mov
test
sub
(bad)
mov
stc
aam
retf
test
nop
and
shl
xor
jo
dec
jecxz
xlat
adc
jl
adc
and
adc
lock
imul
into
lods
lods
in
mov
xchg
xlat
jmp
daa
adc
pusha
movs
and
add
xor
inc
sub
or
out
std
rcl
je
xchg
pop
push
mov
add
js
push
pusha
and
adc
and
xor
mov
jo
movs
sub
jmp
add
pop
sub
sbb
sub
mov
and
jo
or
ret
cmc
sub
test
xor
dec
mov
xchg
jns
xchg
xchg
es
xor
adc
fstp
push
test
jmp
adc
hlt
add
sub
or
pop
or
jae
lahf
add
lahf
xlat
ins
mov
repnz
cs
push
inc
or
jae
jmp
js
ja
mov
mov
fs
adc
test
ret
idiv
jl
test
cs
pusha
out
sahf
rol
adc
cmp
popa
jg
sub
movs
imul
add
add
or
dec
xor
xchg
test
popf
in
lods
iret
in
sar
adc
xor
xor
pop
iret
cmc
and
xchg
(bad)
icebp
add
sub
pop
or
sub
fsubr
loop
nop
mov
fist
push
cmp
cmp
add
xlat
pushf
rol
rcr
sahf
cmp
stos
movs
imul
rol
inc
mov
mov
retf
pop
mov
mov
enter
inc
inc
call
sbb
rol
mov
mov
rcr
and
xor
push
mov
xor
arpl
pop
sub
pushf
les
add
sub
ret
jge
push
pop
shl
ror
js
cmc
sub
or
xchg
adc
and
pop
lods
adc
in
pop
cdq
je
fisubr
std
xor
jle
xchg
mov
jno
or
rol
fiadd
ret
or
pop
dec
lds
popf
mov
xchg
lds
add
jg
pop
rol
movzx
inc
ja
pop
sahf
mov
fimul
adc
adc
mov
pop
mov
or
popa
xchg
test
dec
nop
add
push
js
xchg
or
mov
adc
pop
jg
pop
cmp
jne
fcomp
call
cwde
lock
icebp
pusha
cmp
add
out
nop
xchg
adc
mov
icebp
push
clc
call
dec
cdq
jge
inc
add
inc
inc
jp
pop
push
add
pop
daa
(bad)
dec
inc
jmp
jne
ret
bound
cs
imul
lea
adc
or
(bad)
push
fdivr
pop
cmp
jge
dec
xchg
mov
or
mov
mov
and
add
lds
scas
ret
xor
push
imul
jne
cmp
push
pop
aam
and
std
dec
cmps
pop
inc
(bad)
ds
xor
or
outs
pop
nop
inc
cs
fs
mov
sbb
clc
mov
jmp
xchg
rol
xor
test
cmp
pop
mov
and
pop
je
or
xchg
add
pop
dec
retf
dec
push
ins
inc
mov
lock
and
or
jge
into
mov
cmp
ja
rcr
cmp
and
mov
xor
sub
jb
daa
xchg
cmp
cmp
mov
push
movs
sbb
mov
add
js
sbb
cld
push
ror
fmul
jo
fadd
fsub
test
adc
dec
jb
imul
or
adc
(bad)
std
and
lods
jnp
dec
jne
aas
cmp
ficom
add
shl
dec
sahf
loope
or
arpl
fisubr
add
stos
pop
retf
push
pop
jnp
popf
adc
jmp
setne
jmp
nop
movs
lahf
sbb
dec
jns
jg
pop
test
pop
jmp
fbld
mov
xchg
adc
dec
cli
mov
add
push
add
movs
mov
movs
inc
ret
mov
(bad)
fiadd
cmp
and
pop
xchg
xchg
sar
jmp
ds
adc
test
and
xchg
add
fcmovne
cmp
add
mov
sbb
sti
mov
jl
adc
xor
mov
dec
xor
fild
fnstenv
fcomp
add
ret
jmp
shl
dec
fiadd
test
add
scas
stos
lods
mov
lea
mov
inc
das
mov
repnz
lea
or
mov
ja
add
jecxz
stos
test
popa
cmc
inc
std
mov
inc
enter
sub
icebp
dec
cmp
shr
adc
sbb
push
cmp
mov
dec
xor
fiadd
and
(bad)
fcomp
popf
mov
sets
mov
fwait
adc
lods
mov
inc
mov
ins
mov
shl
ins
(bad)
stc
xor
shr
ficomp
mov
xor
arpl
loopne
add
mov
push
pop
pop
add
sub
xchg
jne
arpl
sub
pop
arpl
xchg
les
into
mov
aaa
jbe
or
jle
addr16
jne
rol
or
cmps
test
sbb
add
add
adc
cmp
dec
lahf
add
add
or
loope
inc
pop
jb
xor
dec
fsub
add
sbb
mov
or
push
mov
aam
mov
push
add
or
pop
js
pusha
cmps
nop
xchg
inc
das
out
dec
ins
(bad)
popf
mov
rol
cmps
mov
push
inc
(bad)
jnp
leave
mov
xchg
imul
es
jno
cwde
sub
sub
movs
and
addr16
cmps
push
stc
rcl
add
jl
sub
pop
sbb
and
lods
stos
pop
add
pop
push
xchg
sub
inc
jne
fild
push
inc
and
inc
pop
out
jne
fmul
mov
and
dec
mov
add
xor
sbb
or
pop
je
es
call
fbld
sbb
repnz
call
shr
dec
mov
sbb
fdiv
loope
ja
add
jle
pop
cdq
inc
sbb
daa
and
pop
xor
aaa
loopne
sbb
cmp
je
push
pusha
adc
fisttp
mov
sub
pop
adc
pushf
sbb
sbb
sbb
out
(bad)
inc
(bad)
sub
out
push
scas
shl
shr
das
pusha
sti
add
sbb
ja
aam
jo
lock
xor
or
js
ins
loope
(bad)
xor
sbb
inc
pop
add
inc
lea
cmp
jb
clc
mov
inc
sbb
ror
mov
push
adc
adc
fadd
xor
add
jle
mov
shr
mov
xlat
(bad)
mov
add
xlat
sub
imul
dec
inc
inc
aad
mov
movs
loope
pop
jb
leave
popf
test
inc
xor
adc
mov
pop
dec
dec
or
clc
jmp
out
sbb
in
mov
or
pop
inc
inc
cmp
dec
jns
test
sub
xchg
jb
ss
sub
pop
sbb
sub
or
add
jecxz
mov
fcom
adc
or
inc
call
push
ret
jb
xchg
adc
add
inc
push
movs
push
mov
xchg
fisttp
movs
dec
loop
pop
sub
fistp
dec
jmp
xchg
adc
jnp
sub
cdq
mov
fsub
xchg
jge
push
add
sbb
cdq
push
jne
jmp
pop
lock
pop
jne
inc
cmps
add
jg
clc
mov
adc
pop
nop
dec
jmp
push
xchg
mov
lods
adc
int3
sub
adc
sbb
add
and
jp
or
jae
or
inc
mov
and
neg
jno
dec
and
adc
or
jno
ds
nop
inc
add
pop
adc
fdiv
pop
inc
and
jae
in
in
rcl
inc
sub
movs
mov
cmp
retf
ins
sbb
outs
push
dec
aaa
cdq
imul
mov
dec
add
inc
pop
call
dec
fild
add
daa
pop
push
jno
lock
xchg
mov
cmp
movs
sbb
and
and
test
aad
rcl
std
ja
lea
in
inc
push
jno
pop
inc
lds
cmp
xchg
adc
mov
mov
mov
xor
adc
or
push
cmp
xor
and
je
sub
jno
jmp
lds
jl
sbb
jmp
and
mov
ret
enter
ins
cmp
inc
(bad)
and
and
int
push
(bad)
adc
push
xchg
xchg
jne
mov
loope
stos
cmp
movs
mov
rol
adc
fst
push
test
jmp
mov
ret
sbb
(bad)
push
add
adc
cmp
sbb
pop
imul
mov
rol
pop
sbb
add
lds
or
in
ficomp
out
mov
add
ins
mov
mov
dec
push
add
pop
fs
pop
adc
nop
nop
fs
aam
sbb
add
stos
(bad)
fst
xchg
push
and
lock
enter
mov
add
cmp
sbb
cmp
sbb
and
enter
add
adc
xchg
sbb
add
nop
pushf
add
pop
and
and
mov
pop
and
inc
push
add
and
lods
and
jg
or
and
jg
push
lea
push
and
or
add
js
push
movs
xor
leave
add
leave
dec
sub
sbb
or
inc
jmp
cmp
add
and
and
or
retf
jg
je
sub
je
sub
je
sub
sti
shl
jmp
or
or
or
cmovne
sbb
je
cmp
jns
nop
inc
add
and
and
cmp
cmp
sub
and
adc
or
jge
and
jns
add
es
adc
neg
jo
and
ja
or
lds
daa
mov
add
daa
mov
push
xchg
sbb
push
cmp
cwde
dec
sub
enter
sub
dec
xor
sbb
jno
cmp
shl
add
loop
sub
daa
cld
add
sahf
mov
addr16
mov
or
mov
cmp
mov
es
or
loop
add
pop
stos
or
pusha
aas
add
arpl
add
mov
and
rol
loop
xor
mov
movs
push
push
jno
push
or
mov
add
sbb
enter
push
add
add
in
add
sbb
add
cmp
cmp
add
xchg
(bad)
in
mov
je
adc
dec
xor
enter
jb
adc
push
sub
ret
xor
inc
push
das
and
je
outs
ret
mov
push
unpcklps
and
cmp
pusha
mov
stc
adc
sub
push
jg
jmp
jbe
add
xor
mov
add
mov
sahf
or
xor
add
fstp
sub
xor
cmp
mov
loop
je
or
and
shr
inc
dec
pop
or
mov
fmul
or
addr16
nop
mov
repnz
mov
jns
repnz
xor
cs
cs
inc
test
mov
scas
dec
add
xchg
and
xor
jmp
mov
push
cdq
test
mov
out
inc
(bad)
jge
mov
and
add
nop
mov
arpl
test
xchg
movs
loop
jnp
sub
sub
inc
test
dec
xchg
adc
dec
inc
mov
and
add
adc
scas
pop
xchg
aad
and
or
ret
iret
aam
loop
pop
inc
push
mov
ss
adc
cmp
jb
call
popa
push
movs
inc
sub
xchg
je
aas
nop
aam
dec
add
outs
adc
test
int3
xor
imul
add
sub
push
xor
add
adc
std
shr
sub
arpl
ds
and
mov
dec
loop
cmp
or
mov
ja
inc
mov
adc
mov
xchg
inc
lea
sbb
rol
xchg
jb
xor
push
clc
call
(bad)
rol
cwde
or
xchg
push
dec
fisttp
push
adc
mov
xor
xor
(bad)
sahf
inc
icebp
lods
mov
movsx
mov
mov
jmp
add
adc
rcl
add
or
and
xchg
xchg
xchg
(bad)
mov
jne
mov
jmp
push
mov
mov
cmp
cli
jge
add
mov
pop
js
mov
sub
xor
sahf
add
lods
mov
inc
out
cmp
jge
push
cwde
push
and
mov
cmp
or
sub
(bad)
call
push
nop
rol
add
cmp
sub
test
dec
rcl
push
and
mov
shr
ror
les
push
adc
mov
loope
scas
pushf
jl
call
and
push
or
adc
jl
sbb
mov
xor
and
movs
ds
xchg
adc
jge
push
ss
jne
call
cmp
aam
cmp
xor
adc
or
cmp
jb
mov
shr
mov
add
outs
jae
(bad)
lea
jmp
jo
test
adc
je
mov
dec
pop
sub
jae
xor
or
sbb
and
jp
imul
push
ins
dec
xchg
sub
imul
inc
cmc
fcmovnu
sbb
ret
or
pushf
repnz
int3
inc
std
rcr
push
adc
popa
adc
add
sbb
and
loopne
aaa
jno
add
or
jb
dec
jbe
jb
jne
and
push
shr
ror
and
ffree
imul
xchg
push
(bad)
fnstsw
inc
adc
cwde
jg
inc
daa
ret
mov
cs
sbb
ret
inc
shl
sub
xor
ret
jle
xchg
inc
nop
inc
movs
shl
test
jmp
test
pop
in
pop
push
test
xchg
push
and
cmp
leave
or
lock
ds
dec
push
lds
fcom
mov
mov
lea
push
pop
test
mov
inc
add
jg
(bad)
int
aas
adc
xlat
dec
fild
sbb
pushf
stos
and
cmp
mov
sub
cmp
add
xor
cmp
mov
cmp
add
or
sbb
mov
push
cdq
pop
or
sub
jmp
xlat
aad
adc
ret
ror
push
mov
pop
(bad)
retf
in
dec
lods
adc
dec
inc
adc
pop
inc
or
aam
jmp
dec
hlt
js
and
jmp
lahf
sbb
lock
icebp
mov
cmp
push
dec
mov
shl
xor
push
shl
inc
mov
enter
lods
hlt
and
cmp
dec
lock
sar
and
pop
add
adc
push
sub
add
jmp
add
enter
inc
jae
jb
in
jae
jae
mov
inc
stc
fcom
mov
leave
push
inc
sahf
cmp
pop
ja
fld
adc
adc
mov
adc
add
leave
xchg
inc
int3
cmps
call
dec
add
ret
test
in
mov
popa
in
xchg
xchg
out
xor
in
ja
fs
or
adc
xor
fs
in
inc
cmp
cmp
jb
cmp
inc
cmp
jp
add
stos
(bad)
add
(bad)
ds
test
mov
adc
fs
xlat
je
dec
ror
xchg
cdq
cdq
das
fs
(bad)
stc
mov
ins
jg
jb
cmps
add
mov
jmp
jnp
sbb
adc
xchg
loope
cwde
jp
sbb
or
fadd
lods
jmp
jge
pop
sub
push
jmp
mov
adc
scas
mov
inc
cmp
inc
mov
dec
xchg
in
dec
lods
inc
adc
jge
pusha
add
ins
mov
add
add
cdq
movs
imul
pop
xchg
inc
jns
in
in
push
dec
bound
or
sub
shl
je
enter
mov
leave
inc
push
dec
jb
push
(bad)
and
inc
push
pusha
and
pop
dec
inc
inc
bound
and
sub
jae
(bad)
adc
ficom
mov
adc
sar
xor
es
adc
adc
and
inc
sbb
addr16
jno
or
mov
adc
pop
mov
loope
inc
mov
xchg
dec
sbb
adc
push
adc
or
add
xadd
gs
loop
ror
rcl
fs
mov
jne
pop
push
adc
jmp
sbb
xor
add
mov
add
mov
or
jno
(bad)
jo
mov
ror
enter
add
push
lea
dec
push
mov
inc
jo
xchg
or
add
add
add
cmp
cmp
movq
cli
pop
add
in
aas
sub
stos
jg
inc
add
sub
push
push
jecxz
into
cmp
cmp
mov
sub
add
pop
push
fcom
std
inc
fimul
pusha
adc
mov
(bad)
(bad)
push
jecxz
enter
dec
std
cwde
xor
fldcw
je
or
dec
inc
adc
mov
xchg
mov
xor
jmp
sub
(bad)
mov
lahf
das
pop
loope
pop
hlt
adc
call
mov
push
xor
sub
aam
or
movs
xor
mov
push
fwait
mov
push
test
mov
adc
(bad)
and
sub
mov
jb
mov
push
int
mov
cmp
ret
and
push
push
and
xor
aad
mov
xchg
cmp
sbb
sbb
push
xchg
shl
jle
inc
mov
and
push
push
or
lods
dec
add
fsubrp
inc
add
cmp
leave
xor
pop
daa
popf
in
adc
and
call
inc
fsub
test
addr16
nop
fsub
(bad)
cmp
imul
test
dec
inc
mov
popf
adc
add
xor
rol
arpl
lea
jne
retf
push
or
adc
scas
por
dec
rcl
add
pop
mov
pop
leave
imul
mov
mov
imul
gs
lods
mov
push
sar
inc
adc
mov
das
shl
stos
jl
cmc
mov
and
jb
in
add
mov
iret
dec
mov
adc
pop
call
aad
adc
jns
fwait
and
cwde
mov
ret
push
dec
mov
jmp
jmp
arpl
daa
cdq
mov
mov
jne
popf
push
leave
and
jno
stos
in
test
jnp
push
shl
xchg
add
ss
cmp
adc
repnz
sbb
sub
stos
dec
xchg
ficom
ffree
(bad)
mov
gs
aaa
scas
pop
pop
mov
in
cmp
in
sbb
hlt
cdq
repnz
cli
into
inc
mov
mov
push
lds
ror
dec
xchg
loopne
mov
cs
rol
dec
ins
(bad)
mov
and
leave
jae
addr16
push
dec
mov
js
xchg
or
or
neg
mov
sar
sti
push
adc
dec
cs
sub
lods
mov
cs
lea
or
leave
and
dec
push
sbb
mov
add
popf
push
loopne
push
loopne
add
inc
push
loopne
pop
mov
(bad)
pop
jne
mov
or
das
xchg
and
add
lds
mov
shl
mov
pop
mov
aaa
xor
or
je
push
loopne
xchg
test
lahf
xor
sub
fcomp
add
addr16
jle
or
aam
and
mov
push
or
push
and
add
sbb
imul
inc
and
dec
dec
into
mov
(bad)
mov
pop
nop
push
xor
mov
stos
xor
ret
jne
push
mov
dec
jb
mov
bound
jl
jmp
inc
pop
(bad)
pop
enter
dec
and
jae
push
cmp
mov
rcl
cmp
and
adc
inc
push
enter
dec
mov
push
dec
inc
pusha
xor
(bad)
loopne
jg
sub
(bad)
mov
jle
sub
jmp
mov
cmp
push
scas
mov
xlat
jmp
cmp
inc
cs
sbb
xchg
add
fcomp
pop
sub
mov
jno
inc
out
sbb
mov
push
mov
jmp
push
xchg
cmp
fsubr
scas
bound
stc
jns
loopne
push
sbb
retf
cmp
jne
imul
or
mov
xchg
adc
shr
add
cs
gs
push
nop
aam
pop
fst
dec
and
bound
mov
push
jb
imul
sbb
aam
mov
dec
adc
int
repnz
pusha
pop
or
push
int3
push
push
push
arpl
sar
jp
or
imul
pushf
retf
call
test
neg
(bad)
stc
pop
push
sub
movs
les
mov
jns
or
add
jne
push
sbb
pop
rol
aaa
cmp
jae
sub
into
sub
inc
xor
fist
aaa
lock
sub
lea
push
xchg
mov
or
or
xchg
fwait
add
mov
inc
xchg
out
shl
dec
sbb
test
add
cmp
add
jecxz
pop
pop
inc
mov
cwde
dec
xchg
pop
xor
sbb
rcr
pop
cwde
iret
mov
jb
mov
pop
push
or
xchg
les
mov
in
ds
or
or
int3
int3
lock
push
nop
int3
int3
arpl
fsubr
test
mov
dec
data16
int3
or
cdq
loopne
gs
int3
cmp
movs
dec
push
in
arpl
mov
xchg
fs
mov
nop
mov
sbb
enter
xchg
pop
xchg
push
inc
enter
cs
inc
enter
mov
jb
enter
push
pop
mov
pop
inc
inc
stos
test
fs
jb
push
dec
les
inc
pop
enter
outs
cdq
dec
pop
push
les
les
push
les
sub
dec
les
adc
imul
cmp
push
inc
sub
in
mov
jbe
test
push
jmp
push
add
dec
leave
push
ret
jp
test
cmps
stos
pop
push
ret
lock
mov
pop
adc
jo
mov
aaa
mov
and
aad
or
movs
sub
or
jne
popa
loope
xor
loop
fsubr
sbb
or
mov
inc
setl
sub
ins
mov
sahf
cmp
xchg
adc
shl
cld
push
mov
jg
xchg
int
jg
pop
sbb
xchg
mov
adc
inc
fwait
out
cs
and
sbb
xor
xor
sbb
imul
sub
(bad)
test
sub
mov
jecxz
jo
ins
addr16
shl
daa
dec
push
ins
aaa
ins
aaa
dec
mov
adc
jbe
xlat
or
je
adc
pop
mov
fdiv
sbb
std
(bad)
outs
dec
mov
repnz
outs
ss
test
xor
(bad)
in
mov
push
leave
or
pushf
add
jno
inc
inc
test
push
mov
mov
pop
xchg
mov
in
leave
sub
jb
scas
dec
push
sub
add
xlat
leave
or
xlat
or
add
inc
inc
mov
mov
mov
and
nop
pop
xchg
jbe
add
add
aam
push
push
scas
cmp
jns
shl
jmp
ja
je
sbb
mov
mov
fidivr
jecxz
jmp
je
mov
xchg
mov
loopne
and
xchg
int
jecxz
add
ror
xor
fcom
test
cmp
mov
ret
jns
and
dec
push
jns
jns
rol
outs
pop
fxam
xlat
mov
cmp
pop
dec
das
pop
dec
dec
and
adc
cmps
pop
adc
add
in
xor
sub
dec
push
mov
popf
push
lea
mov
jne
in
nop
daa
mov
mov
mov
je
and
and
dec
dec
int3
sbb
and
add
or
pop
push
or
mov
or
test
push
es
adc
xchg
test
mov
adc
add
jle
inc
adc
mov
sub
lds
pop
jp
mov
in
add
ret
sbb
fbld
dec
out
ror
sub
mov
repnz
icebp
push
jb
add
cmp
dec
push
stc
xchg
out
or
icebp
or
or
xchg
or
test
repnz
repnz
and
add
xchg
xor
out
pop
adc
lea
adc
jmp
adc
(bad)
sbb
inc
jmp
mov
pop
inc
pop
xchg
xor
mov
adc
sbb
adc
push
push
xchg
je
push
adc
shl
ret
xchg
xchg
cmp
jle
pusha
mov
data16
xchg
dec
xchg
push
cdq
(bad)
call
enter
mov
mov
or
add
or
nop
es
pushw
add
lods
dec
adc
adc
pop
sbb
mov
push
mov
pop
shr
nop
cmp
or
sub
es
mov
iret
sbb
outs
add
lea
inc
cmps
sbb
jmp
xor
in
xchg
xchg
add
cmp
in
inc
cmps
sbb
adc
and
mov
cmp
mov
stos
inc
aas
adc
mov
jns
mov
mov
mov
mov
add
pop
mov
add
jb
in
aaa
mov
or
sub
ins
inc
js
leave
jmp
(bad)
loop
xchg
inc
jo
(bad)
loop
dec
add
(bad)
loop
add
push
xchg
inc
jne
or
test
setl
mov
inc
mov
push
ins
mov
jnp
and
mov
enter
add
mov
ret
add
inc
mov
xor
and
inc
push
or
cmp
adc
add
retf
cwde
cwde
cwde
adc
push
and
movs
jbe
inc
and
cli
pop
call
sub
push
cmps
push
sar
call
test
inc
ds
lds
test
jmp
movs
push
jecxz
movs
out
stos
in
ja
pop
sub
call
push
nop
rcl
movs
inc
or
ins
test
jnp
test
pop
and
mov
add
mov
jmp
fistp
or
je
add
pushf
imul
add
pop
ret
mov
or
cwde
push
adc
xchg
or
cmp
adc
inc
cmps
add
xchg
clc
add
test
or
add
sub
add
xor
les
pop
add
ss
adc
xchg
mov
jne
add
sbb
hlt
add
and
adc
add
test
cmp
repnz
jg
stc
imul
push
push
inc
cmps
add
push
mov
sbb
and
add
test
mov
stos
fcmovnu
ins
ss
lods
out
jmp
mov
mov
and
xor
mov
enter
shl
mov
arpl
bound
pushf
bound
xchg
jle
xchg
xchg
xchg
xchg
dec
call
xchg
sahf
xchg
xchg
adc
frstor
push
push
mov
and
mov
stc
mov
push
sahf
call
mov
and
xchg
mov
push
push
mov
cmp
dec
dec
nop
movs
call
nop
cmp
inc
mov
cmp
retf
mov
cmps
mov
add
mov
ret
add
cli
movs
adc
mov
add
jecxz
test
inc
repnz
daa
xchg
sub
dec
push
cmps
xchg
repnz
jecxz
imul
sbb
xchg
mov
ret
test
inc
lods
data16
cmp
lods
lods
inc
jbe
or
jb
or
mov
pop
dec
push
sbb
mov
scas
js
xchg
inc
and
enter
mov
jb
in
mov
mov
and
cmp
nop
pop
mov
or
pop
push
add
loop
leave
test
nop
jno
adc
or
cs
xor
pop
add
and
loopne
mov
loope
jmp
mov
xor
push
mov
sti
add
les
mov
mov
jns
inc
les
(bad)
test
mov
sbb
jae
push
adc
(bad)
es
jns
jecxz
mov
nop
mov
and
add
mov
ret
into
mov
icebp
push
js
mov
repnz
mov
sbb
je
fdivr
in
inc
pop
dec
cmp
es
jns
and
div
fidiv
adc
xor
popa
cmp
inc
sahf
out
out
out
push
and
jae
lds
adc
jnp
lods
xor
xor
pop
outs
lds
bound
push
test
xor
arpl
xchg
jbe
int
pop
xor
pop
daa
push
adc
sub
push
retf
adc
pusha
aad
popa
cs
push
mov
js
sub
test
imul
adc
xor
ins
dec
sbb
fdiv
xor
or
imul
inc
cmp
or
adc
mov
mov
lods
call
inc
jp
clc
adc
inc
enter
jmp
adc
enter
and
or
fmulp
dec
lock
dec
ins
push
xchg
mov
jg
repnz
pop
or
jp
add
pop
popf
add
in
add
leave
and
cmc
sub
je
add
add
jl
test
sub
or
fiadd
push
mov
add
into
setns
pushf
cmps
rol
test
jo
dec
dec
fwait
and
dec
imul
mov
imul
movs
mov
jg
add
push
mov
lods
xor
xchg
and
ss
int
(bad)
int
iret
out
hlt
shl
(bad)
sub
ss
cmps
fcomp
fcmovu
fcomp
pushf
test
pop
and
jl
mov
repnz
adc
adc
pop
enter
into
(bad)
sbb
push
dec
or
jg
xor
jmp
or
dec
call
sbb
adc
cli
sbb
out
popf
jl
sar
dec
and
sbb
loopne
jb
or
out
adc
inc
or
mov
je
mov
mov
je
mov
xchg
je
cmp
js
jb
push
js
js
xchg
push
sub
adc
push
push
adc
std
in
xchg
retf
or
jo
mov
call
add
xor
enter
adc
mov
jo
ins
dec
sahf
or
jo
ins
jo
inc
mov
jbe
adc
and
in
pushf
push
jo
dec
add
jbe
push
ret
test
ins
aad
add
lods
push
daa
pop
sbb
rol
rol
inc
and
mov
test
ins
or
pop
and
enter
repnz
mov
inc
push
sbb
ret
lea
xchg
daa
pop
push
leave
xchg
push
inc
xor
push
inc
or
push
xchg
or
or
in
repnz
or
sbb
call
call
and
mov
and
test
enter
or
std
in
repnz
or
cmp
pop
or
or
jb
add
sbb
jns
pop
mov
cmp
(bad)
pop
add
xchg
out
xor
xchg
fstp
cmp
push
call
adc
(bad)
cmps
push
mov
and
daa
call
xchg
xor
lea
push
or
dec
in
sub
push
or
test
push
cli
add
push
add
add
dec
enter
push
retf
xor
and
sub
pop
pop
and
xchg
ds
adc
jns
std
clc
add
in
pushf
inc
(bad)
add
add
(bad)
or
cs
mov
jg
int3
jg
daa
add
int3
jg
and
bound
push
push
inc
loope
xchg
or
xchg
push
das
add
into
dec
push
fisub
loop
adc
enter
out
and
rdtsc
dec
int3
and
jb
mov
inc
push
dec
into
mov
add
adc
push
leave
into
mov
xor
cs
inc
call
add
push
sbb
xor
sbb
sbb
dec
and
cmc
movs
jo
adc
test
dec
push
pop
imul
fisttp
sbb
and
rol
sbb
fldcw
(bad)
shl
push
adc
jb
and
enter
ror
dec
repnz
ror
dec
mov
inc
adc
test
retf
repz
lea
mov
pop
das
imul
jo
sub
and
pop
adc
test
test
dec
jne
ret
imul
aam
dec
ror
push
lock
enter
xor
in
aam
aam
and
cmp
(bad)
push
(bad)
adc
int
adc
xor
cmc
dec
ret
or
cmp
pop
pop
lea
leave
xor
dec
push
in
fcom
push
sti
push
pop
sub
dec
ins
leave
leave
enter
push
dec
xchg
or
cmp
push
push
add
push
stos
scas
adc
and
xchg
add
and
es
cld
hlt
sub
shl
imul
jg
mov
in
adc
icebp
push
stc
repnz
hlt
int
mov
mov
cli
shl
ss
ss
jmp
lock
sub
cmp
lea
jmp
adc
es
nop
adc
add
sbb
imul
push
dec
scas
inc
inc
test
mov
jne
pop
xor
in
scas
mov
or
(bad)
adc
mov
or
xchg
adc
add
inc
mov
jo
popa
adc
dec
adc
adc
adc
das
push
xor
jl
pop
and
es
mov
sub
mov
adc
fmul
fstp
inc
cmp
cwde
int
jbe
and
imul
mov
test
jae
adc
adc
pusha
cmp
adc
mov
rcl
movs
cmp
and
mov
mov
inc
and
mov
retf
adc
inc
or
pop
xor
test
movs
stos
daa
rol
lgs
and
pop
imul
call
sub
and
je
or
lock
pop
ret
inc
sahf
pop
or
xor
nop
add
in
adc
pop
xor
pushf
inc
repnz
xor
pushf
cmp
jns
xor
pushf
xor
rol
inc
outs
sub
add
movs
cmp
data16
pop
adc
adc
pop
cmp
jecxz
out
std
push
sbb
rcr
or
add
enter
lds
inc
repnz
loopne
sub
cmp
jns
lds
add
add
in
cli
xor
adc
xchg
xchg
inc
xor
or
loope
cmp
(bad)
in
jb
push
dec
sub
mov
mov
dec
sub
ret
sub
ret
and
loop
enter
sub
nop
add
xchg
pop
cld
jne
inc
scas
nop
retf
or
or
jns
loop
enter
xor
in
or
cmp
and
xchg
and
mov
in
and
jp
and
mov
cdq
stos
dec
imul
adc
pop
and
add
sbb
or
xchg
sub
in
add
out
push
repnz
imul
add
jae
xchg
add
in
add
cmp
pop
sbb
call
dec
sahf
call
inc
and
sbb
dec
push
enter
add
add
cmovo
sbb
add
in
mov
add
adc
and
sbb
in
in
adc
jmp
jmp
sbb
movs
mov
adc
add
repnz
ret
add
xchg
add
nop
and
jmp
leave
add
xchg
adc
in
or
test
jmp
adc
dec
sbb
je
fwait
dec
jne
stc
repnz
std
dec
xor
out
add
(bad)
adc
test
cmps
test
sbb
sahf
jne
xchg
push
pop
jo
sbb
fild
push
mov
cdq
add
and
push
cmps
jge
cmps
stc
add
ds
lahf
neg
pop
cmps
add
movs
push
inc
cmc
add
or
jns
pop
enter
nop
pop
add
addr16
hlt
test
xlat
push
dec
sbb
pop
rcr
push
aad
inc
push
cmp
(bad)
push
xchg
inc
dec
adc
push
and
sbb
add
cmp
mov
xchg
inc
cmc
lock
jmp
repnz
jns
aas
bnd
adc
pop
fstp
push
lds
leave
ss
push
push
add
shl
jg
dec
shr
xor
pop
shr
leave
inc
jae
imul
cmp
mov
add
add
jnp
data16
or
or
stos
loope
sbb
cmp
adc
add
add
sub
xlat
add
fnstenv
cmp
add
xchg
lea
cmp
in
mov
jb
ja
cmp
add
add
add
and
xor
inc
sbb
fs
add
and
jb
jns
cmc
jnp
arpl
or
cmp
test
hlt
add
pop
dec
(bad)
fmul
data16
sbb
pop
enter
add
xor
inc
sub
and
add
add
sbb
movs
add
add
inc
jo
jmp
pop
jge
inc
movs
leave
cmp
push
fadd
nop
inc
xor
and
popf
je
fldenv
outs
add
in
sbb
test
dec
or
jmp
mov
push
lock
stos
dec
jmp
mov
dec
jmp
(bad)
nop
adc
rol
mov
add
adc
cmps
push
(bad)
aad
gs
and
int3
or
popf
addr16
mov
(bad)
ror
push
mov
cmp
xor
sub
jge
dec
and
sbb
add
aas
outs
dec
push
and
push
test
je
mov
add
and
dec
leave
pop
and
jmp
adc
nop
inc
imul
adc
adc
dec
sbb
and
add
cmp
int
adc
push
inc
push
inc
jne
jecxz
cld
push
mov
add
in
add
and
and
inc
pop
or
aam
sub
add
sbb
inc
mov
loopne
xchg
retf
cmp
nop
dec
and
rol
bound
fild
aas
sub
add
mov
add
dec
push
xor
adc
jg
mov
xchg
add
imul
jle
jge
mov
retf
jne
sub
iret
or
dec
and
push
xchg
xor
inc
jmp
and
and
add
mov
add
push
(bad)
adc
and
lods
xor
in
je
sbb
mov
sbb
test
xor
lahf
mov
jns
and
sbb
dec
inc
push
mov
sbb
push
dec
adc
or
je
fmul
retf
cs
pop
or
mov
mov
aas
fisttp
adc
xor
in
into
int
adc
cmp
inc
and
xor
es
xor
shl
ja
aad
rcl
mov
fucomi
test
mov
aad
add
(bad)
cmps
fnsetpm(287
xchg
xchg
shl
pusha
or
cmp
pop
add
shl
mov
pop
xchg
add
rcl
inc
repnz
and
js
enter
inc
(bad)
js
pop
jno
and
sub
or
out
push
sub
arpl
sub
and
add
ins
sar
dec
pop
pop
adc
call
pusha
jnp
or
outs
out
movs
mov
and
cmp
dec
jmp
add
xor
xchg
push
rol
xor
and
mov
pop
xor
mov
jmp
xchg
enter
test
add
cmp
jmp
or
or
(bad)
push
icebp
add
mov
adc
dec
push
into
jmp
bound
jo
or
leave
les
and
jb
es
cs
jmp
out
sub
or
xchg
or
or
adc
adc
stos
jl
inc
sbb
add
xchg
sbb
stos
mov
dec
sbb
cmc
adc
mov
add
fdivr
cmp
sub
mov
popf
adc
movs
dec
xchg
test
and
add
imul
ret
sti
rol
mov
and
push
xor
ds
mov
sar
and
popa
and
add
dec
daa
dec
mov
pop
add
pop
and
sub
push
sahf
movs
or
sbb
call
mov
add
pop
push
(bad)
ins
ins
enter
movs
cmc
mov
and
mov
and
push
xchg
xchg
mov
call
fimul
ror
aam
rol
or
ror
(bad)
aad
ins
movs
add
movs
ds
enter
ret
mov
(bad)
jne
das
or
xor
mov
mov
push
mov
mov
add
(bad)
or
jnp
add
dec
sbb
mov
jmp
je
sbb
jmp
inc
call
mov
fxch
movs
inc
je
fadd
sbb
push
aam
aad
or
je
movs
aad
push
push
xor
std
xor
or
sbb
and
popa
push
jge
jae
aam
sti
shl
or
sbb
cld
or
sbb
sbb
push
mov
in
adc
jl
push
icebp
mov
test
sub
stc
ja
and
mov
cmps
cmp
jne
xchg
inc
imul
push
push
scas
mov
or
inc
mov
pop
aad
push
jmp
into
push
dec
or
mov
test
and
mov
aas
or
dec
(bad)
add
add
mul
xor
call
pop
mov
into
(bad)
cli
cmp
mov
sub
inc
dec
push
je
ror
push
bnd
pop
nop
(bad)
inc
mov
inc
mov
push
loop
rcr
cmps
or
sub
inc
sbb
div
or
loop
aam
jb
cs
adc
xor
add
lock
add
lods
or
pop
cli
dec
stos
xor
movs
push
adc
xor
movs
or
test
pusha
mov
sbb
add
xchg
imul
mov
pusha
dec
loop
push
or
lock
mov
cmp
add
inc
das
test
sub
jmp
adc
clc
int3
and
shl
jnp
loop
ds
fcomp
sbb
popf
add
and
movs
mov
mov
sub
add
cmp
cmp
dec
pop
pop
xor
mov
jbe
mov
cmp
add
cmps
or
rcr
adc
xlat
scas
sti
sti
jne
dec
jmp
cmp
loope
adc
aad
fld
or
mov
shl
pop
xor
fcmovnbe
adc
push
mov
dec
sub
aaa
je
(bad)
push
bnd
push
inc
dec
xor
xchg
mov
test
sbb
jns
mov
or
gs
jg
jg
je
sub
mov
jnp
xor
push
loopne
dec
pusha
sbb
sub
add
add
jmp
cmp
jae
sbb
push
push
into
cwde
jmp
(bad)
cmc
movs
push
test
sub
loopne
inc
leave
dec
adc
add
push
or
aad
(bad)
push
loopne
mov
sbb
pop
call
daa
int
in
(bad)
mov
mov
xor
repnz
cmp
loopne
pop
fiadd
mov
pop
sbb
push
cmp
mov
and
jecxz
add
add
push
add
cli
sub
shl
cmp
or
cmps
or
mov
sbb
mov
mov
(bad)
cmp
call
mov
add
inc
mov
dec
ror
and
(bad)
sub
push
xor
mov
xchg
jge
adc
fist
or
sti
push
dec
shl
xchg
and
out
clc
jl
test
or
xchg
imul
sbb
push
rcl
jl
sub
je
mov
outs
push
mov
and
push
inc
push
imul
cmp
shr
xchg
push
push
xor
adc
jp
nop
jae
xchg
arpl
jae
cdq
inc
xchg
sub
jmp
jbe
pop
adc
adc
inc
jl
inc
xchg
mov
sbb
add
mov
or
sbb
cmp
xor
sbb
(bad)
in
push
or
push
xchg
dec
jmp
push
gs
xlat
imul
and
cmp
shr
adc
les
int
push
add
add
ror
add
add
push
adc
iret
bswap
dec
or
daa
add
test
jne
push
syscall
push
jl
loop
add
add
lock
nop
jne
sbb
fild
pand
adc
pop
jg
fld
out
sbb
xchg
dec
sti
pop
push
cmp
inc
adc
push
jp
fcomip
cmp
nop
jmp
ds
repz
sahf
out
fidiv
jno
iret
jnp
repz
mov
push
push
imul
call
inc
or
daa
mov
adc
jg
ret
sub
in
hlt
and
dec
adc
pusha
fist
and
lahf
xor
sbb
adc
push
sub
pusha
les
dec
fcmovnbe
dec
jnp
inc
inc
add
pop
mov
xor
pop
adc
imul
pop
jp
xor
add
sub
lods
call
inc
rcl
jmp
jns
xchg
ss
push
mov
pusha
inc
sbb
lock
jo
jmp
rcr
shr
and
ret
ja
add
cmp
outs
add
test
push
sbb
pop
iret
jnp
test
inc
cmp
cs
(bad)
xor
or
sahf
es
inc
push
adc
fisub
adc
std
add
or
out
inc
adc
lea
ins
sbb
push
daa
and
out
je
jmp
mov
stc
push
dec
or
cmp
or
xor
pop
lock
dec
ins
xchg
jge
xor
fist
mov
jne
imul
add
xor
add
inc
add
pop
adc
xchg
dec
loopne
push
adc
ss
mov
push
loop
out
or
lock
movs
jmp
cmp
or
dec
(bad)
adc
ret
sbb
and
xor
(bad)
xor
jmp
adc
ficomp
jbe
dec
retf
push
pop
shr
enter
clc
jle
sub
pop
ja
add
jae
loopne
inc
in
cs
imul
inc
push
adc
cwde
add
aad
xor
ror
cwde
cmps
hlt
jmp
dec
mov
mov
(bad)
push
mov
or
loope
pop
sbb
jne
push
push
adc
sub
jo
pop
loop
lea
daa
pop
inc
cdq
enter
push
pushf
dec
cmp
or
gs
jg
test
mov
add
cmp
jl
add
cdq
cmp
add
jbe
adc
dec
pushf
xor
repz
movs
imul
jmp
popa
fmul
mov
sub
icebp
xchg
mul
ss
pop
push
mov
stos
clc
sub
push
push
std
mov
ret
and
mov
dec
sbb
dec
xor
xchg
rcl
pop
add
rol
repnz
arpl
mov
or
ja
xchg
adc
cmp
or
or
pusha
inc
loope
add
sub
call
mov
ss
mov
or
pop
popa
test
(bad)
pop
shl
xchg
sub
cdq
(bad)
lea
jge
or
inc
pop
cmp
cld
push
pushf
and
hlt
cmp
mov
adc
mov
sub
mov
inc
hlt
add
je
xchg
leave
popa
mov
imul
pusha
xchg
pusha
dec
inc
mov
sbb
cmp
add
mov
xchg
ror
cwde
mov
push
popf
hlt
push
test
jge
test
or
cmp
pop
ror
add
out
fs
and
lods
test
sub
jo
xchg
jp
push
push
dec
pop
mov
xor
cmp
push
clc
pop
cdq
lods
pop
mov
inc
xor
mov
push
sub
pop
bound
inc
mov
into
mov
pop
aad
or
dec
add
adc
sub
mov
aaa
or
(bad)
sar
inc
push
sub
dec
mov
or
inc
test
inc
dec
cld
ficom
sti
pop
jne
add
(bad)
mov
push
inc
or
and
jl
or
sbb
or
nop
loopne
out
cmp
add
cmp
mov
(bad)
loopne
ret
cmp
add
xor
not
in
sbb
or
sbb
ret
or
jne
mov
inc
cmps
push
mov
push
xchg
mov
inc
rol
mov
arpl
mov
sbb
jne
out
adc
jge
add
adc
fwait
stc
mov
shl
(bad)
inc
loop
adc
cmps
int3
and
inc
jmp
mov
sbb
dec
or
pop
mov
add
out
add
cmp
sbb
in
nop
adc
add
rol
cs
push
sbb
xor
mov
cmp
pop
jle
rol
pop
add
je
or
rcl
rol
add
xchg
dec
jl
cmp
jae
mov
sbb
je
mov
ds
xchg
xor
out
jbe
js
sbb
jb
sbb
sub
js
aas
add
xchg
jl
jb
jmp
jmp
cmps
sub
adc
fbstp
mov
lea
xchg
add
iret
push
ror
sbb
adc
adc
jno
cli
sti
xor
push
(bad)
test
loop
loop
push
idiv
jmp
rdpmc
popf
movs
(bad)
call
adc
add
dec
pop
adc
mov
xchg
or
add
test
add
add
push
nop
adc
jle
shl
push
push
in
nop
sbb
fs
add
test
jmp
cmps
fcomp
xor
xor
lods
loop
pop
push
das
adc
adc
mov
dec
mov
test
ds
jmp
stos
adc
imul
xor
(bad)
add
or
imul
stos
mov
repnz
inc
inc
jmp
sub
jl
or
adc
xor
cs
cld
dec
or
mov
dec
shr
or
adc
pop
add
pop
scas
lods
add
inc
push
movs
jmp
jge
cli
push
or
jo
lock
pop
daa
mov
mov
mov
jl
ds
or
sbb
jge
retf
push
cmp
(bad)
jl
add
adc
arpl
fidivr
pop
or
inc
pop
jnp
imul
aam
ss
cmp
mov
mov
inc
or
mov
loopne
popf
cmp
test
test
and
cmp
mul
add
pop
loop
and
inc
es
pusha
or
wbinvd
repnz
sbb
adc
(bad)
jp
pop
repnz
fnstcw
inc
jne
cdq
xor
jo
add
adc
jge
in
sub
dec
call
mov
mov
push
bswap
xor
pop
std
or
mov
dec
lock
adc
pop
pop
adc
push
and
aaa
enter
add
and
dec
sbb
or
fisubr
ja
or
cmp
xlat
pop
test
push
dec
push
sti
leave
pop
mov
mov
fwait
cld
arpl
cmp
dec
leave
add
lea
dec
add
loop
sub
push
add
add
mov
rcl
xchg
xor
inc
xor
push
mov
ja
das
(bad)
test
adc
mov
mov
jle
bound
arpl
cmp
cs
mov
lds
pop
mov
jmp
daa
shl
mov
(bad)
imul
dec
inc
test
mov
sbb
out
add
dec
cmp
xor
pop
cmp
lock
loopne
inc
xlat
mov
cmp
and
test
stos
dec
add
or
push
cmp
ficom
or
inc
mov
mov
cmp
dec
mov
jb
aas
inc
out
and
dec
add
dec
test
int
dec
cmp
aam
xchg
jbe
dec
out
push
xor
int
mov
out
and
(bad)
ret
cmp
stos
add
ja
push
sbb
fs
mov
xor
xor
add
push
or
sbb
push
dec
rcr
adc
out
add
dec
aas
mov
dec
pop
push
call
add
ins
test
sbb
neg
add
mov
les
outs
adc
push
mov
jo
fs
xor
or
pand
inc
ja
add
inc
sub
or
add
adc
xchg
arpl
add
mov
jno
push
sbb
or
add
sysret
outs
push
pop
add
and
and
sbb
enter
sbb
push
mov
xchg
push
cmp
add
sub
(bad)
jg
and
loope
or
inc
add
shr
pop
and
pop
or
(bad)
add
mov
ins
sti
or
and
jns
imul
add
jb
shl
ins
ds
int
sub
cmp
shr
adc
pop
ss
imul
sub
push
add
shl
mov
sbb
dec
inc
inc
mov
out
dec
jae
mov
cld
inc
les
cmp
xchg
or
je
cmp
popf
xchg
add
add
test
jb
mov
cmp
xchg
sti
ret
test
jmp
dec
cmp
ret
jmp
jecxz
jmp
sub
jmp
mov
jne
sbb
ins
rcl
or
pop
retf
adc
xlat
mov
xchg
xor
out
mov
push
or
inc
cmc
jnp
add
ja
or
ja
and
add
push
pop
retf
je
sbb
aaa
jns
jne
mov
mov
and
data16
or
add
dec
in
out
je
sbb
cs
and
jbe
mov
jmp
lea
test
add
sbb
pusha
cmps
sbb
adc
adc
add
clc
(bad)
jmp
fldenv
jb
jb
setns
jb
popf
sahf
lahf
or
pusha
lea
adc
inc
or
not
add
or
mov
jae
or
xor
sub
je
cmp
sbb
dec
gs
or
mov
mov
outs
inc
or
adc
dec
outs
mov
push
sbb
or
pusha
sbb
jle
jo
aaa
mov
jbe
add
fst
and
push
adc
shr
nop
inc
sub
inc
mov
dec
jae
test
dec
adc
stos
mov
test
and
adc
cvtpi2ps
idiv
or
ret
sub
mov
or
lods
adc
mov
cmp
jge
lods
pusha
adc
cmp
cs
add
cmc
mov
inc
in
xor
pop
test
mov
pop
cli
data16
popf
push
add
rol
imul
fiadd
cld
inc
xchg
ins
dec
push
add
cmp
adc
adc
push
test
(bad)
cwde
pop
inc
loop
les
outs
pop
mov
add
call
fst
popf
das
adc
jne
or
retf
and
push
nop
add
and
jecxz
jns
or
inc
and
adc
and
ficomp
jae
in
and
or
daa
and
add
sub
adc
mov
cmp
dec
inc
iret
sub
rcr
sti
dec
pop
mov
movs
add
icebp
clc
sub
inc
add
repnz
xor
lds
lds
or
xor
iret
add
xor
inc
leave
leave
sar
cmp
fs
leave
lods
(bad)
or
xor
in
in
call
xor
add
cmp
mov
xchg
inc
scas
fnstsw
add
or
jp
xchg
mov
adc
mov
pop
cmps
dec
retf
adc
pop
inc
add
adc
cmp
or
dec
push
xchg
dec
pop
adc
inc
ins
rcr
(bad)
inc
jns
and
mov
popf
jns
and
(bad)
jns
push
lods
dec
adc
pop
call
inc
addr16
or
je
push
xor
xor
push
xor
ins
out
xchg
pusha
mov
pop
arpl
xor
add
mov
add
call
jne
mov
lock
int
add
(bad)
sbb
stc
mul
mov
fdiv
pop
mov
sti
inc
add
fistp
ss
inc
fs
imul
xor
cmps
dec
push
pusha
mov
push
pop
add
enter
add
xchg
jmp
add
xchg
xor
inc
mov
xor
pusha
dec
mov
imul
xor
jae
pop
mov
ins
xchg
jnp
push
push
cmp
jmp
mov
sbb
and
add
test
mov
fiadd
sub
xor
xor
je
mov
xor
xor
and
inc
imul
scas
rol
dec
and
dec
add
cmp
sbb
or
daa
adc
mov
inc
sbb
inc
pop
test
outs
inc
xor
div
push
jnp
pop
(bad)
xchg
or
dec
add
push
imul
lea
or
jge
fsubr
mov
mov
or
push
fwait
pop
add
mov
dec
mov
test
aas
add
jae
loope
mov
pop
jge
inc
sbb
and
lods
or
repz
pop
push
push
pop
push
jmp
nop
scas
pusha
jmp
add
mov
movs
add
nop
ja
mov
or
cs
icebp
aas
je
mov
aas
or
or
or
pop
sub
iret
adc
inc
sub
ja
push
or
push
cmp
popf
fld
pop
pop
divps
mov
(bad)
pop
inc
pop
sbb
test
test
fild
cmp
adc
je
pop
push
adc
psrlq
daa
inc
mov
add
dec
test
and
clc
cmp
and
clc
mov
mov
mov
inc
data16
add
das
mov
pop
ja
push
pop
and
mov
add
adc
push
inc
pop
xchg
jo
outs
inc
add
adc
mov
cmp
sar
(bad)
jge
inc
pop
and
mov
inc
push
sbb
out
rcr
inc
jge
sub
jb
test
sub
mov
adc
or
jae
ins
push
push
ds
add
inc
je
add
mov
mov
mov
or
or
call
cmc
push
dec
or
inc
leave
aaa
pop
and
add
fidivr
outs
cmp
pop
push
in
adc
fs
sbb
imul
movs
jns
ds
in
adc
adc
imul
into
pop
adc
test
add
push
add
scas
fwait
add
stos
cli
mov
popf
mov
ret
rcr
inc
jg
and
add
jb
dec
jl
xlat
cld
outs
outs
and
add
je
jmp
sub
je
and
cmp
inc
ror
adc
jge
cmp
loopne
mov
mov
xchg
and
sub
shl
imul
add
sbb
adc
loop
lods
add
dec
and
jl
inc
inc
and
pop
test
imul
imul
xchg
hlt
xor
mov
test
sbb
cmp
push
push
ins
jge
inc
and
and
mov
imul
pop
cli
jno
push
pop
and
call
test
shl
sub
lea
add
rcr
and
xor
inc
fiadd
shr
mov
sbb
push
push
add
loopne
mov
cmp
fidivr
cmps
dec
inc
(bad)
mov
ret
nop
jle
lea
test
cmp
(bad)
adc
xchg
test
xor
pop
pop
pop
xlat
mov
add
add
add
hlt
inc
cmps
mov
xchg
cli
call
xor
sbb
push
pop
jle
ret
sub
test
inc
dec
push
addr16
xchg
mov
dec
push
fsubr
sbb
mov
cdq
enter
mov
jo
jmp
fdiv
jo
hlt
push
and
scas
push
(bad)
sbb
data16
pop
or
add
aas
and
shr
fldcw
mov
sub
fs
(bad)
cmp
shr
add
jecxz
daa
add
inc
fcom
test
stos
mov
push
jns
inc
fcomp
sub
inc
pop
jmp
daa
stos
inc
popa
push
(bad)
xchg
add
hlt
sbb
shl
or
xchg
adc
test
pop
and
fimul
xchg
adc
leave
cli
cs
mov
(bad)
test
add
data16
sub
sbb
inc
je
dec
xor
sbb
xchg
pop
shl
je
pop
sbb
xchg
out
xchg
movs
pop
cmc
add
adc
int
jbe
inc
cs
sub
in
sbb
das
int
call
push
call
shl
movs
in
or
add
pop
and
nop
xchg
loopne
mov
loopne
loopne
clc
inc
jmp
lods
mov
daa
lea
pop
and
adc
xor
fwait
loopne
hlt
cmp
(bad)
js
dec
enter
clc
jg
pop
retf
mov
movs
mov
adc
dec
mov
ret
add
sbb
scas
sub
dec
pusha
into
mov
mov
sub
dec
lock
or
lea
inc
or
mov
xchg
popf
out
cmp
lock
dec
out
add
mov
and
bswap
xchg
xchg
jp
mov
lock
in
fidivr
push
cmp
fcomp
mov
sub
jmp
in
repz
cmp
iret
retf
inc
push
popa
and
aam
lds
xchg
data16
pushf
pop
data16
adc
jnp
inc
jae
push
dec
leave
push
and
stc
std
mov
adc
sbb
sbb
je
(bad)
js
in
shr
jg
lock
loope
out
mov
add
inc
lock
xchg
add
pop
test
outs
scas
cmp
scas
(bad)
mov
add
es
add
sub
retf
sub
mov
adc
(bad)
in
jno
xchg
add
imul
popa
mov
sub
in
sbb
ins
cdq
cmp
shr
and
mov
cmps
mov
outs
scas
lea
dec
sbb
int
loopne
sbb
das
das
mov
mov
sti
mov
jno
pop
jne
adc
icebp
movs
ins
push
jne
not
sbb
mov
in
xchg
mov
shr
es
jb
ss
pusha
(bad)
sbb
xor
ins
(bad)
mov
cmc
inc
das
inc
push
add
adc
add
rcr
dec
hlt
adc
lea
outs
nop
or
mov
retf
int3
loop
add
adc
call
inc
xor
push
test
push
pop
std
data16
(bad)
hlt
mov
add
dec
int3
add
or
das
frstor
sub
movs
icebp
mov
xor
movs
out
adc
xchg
shl
daa
sbb
or
and
mov
lods
retf
push
xor
inc
inc
or
lods
shl
push
and
adc
or
cs
or
sbb
or
cmp
inc
daa
pop
adc
loopne
add
adc
shr
mov
jmp
ins
push
cmp
ret
pop
pop
inc
daa
sub
retf
shr
les
push
jg
sti
dec
mov
jg
shl
loop
js
pop
imul
sbb
pop
sbb
and
sub
rcr
adc
dec
int3
and
xchg
mov
jo
inc
dec
pop
inc
dec
pop
adc
adc
xor
sar
and
or
jge
cmps
movs
out
and
loope
and
cmp
movs
sbb
cli
adc
jae
mov
or
pop
(bad)
fwait
cmp
out
test
(bad)
push
dec
arpl
pushf
jmp
in
cmp
(bad)
(bad)
sahf
aad
test
fmul
ds
adc
adc
adc
mov
mov
and
add
or
aaa
popf
dec
xchg
sbb
mov
adc
mov
mov
mov
fcomp
dec
jns
mov
movs
pop
mov
mov
pushf
push
scas
clc
stos
jmp
andnps
ror
or
mov
lock
or
adc
repnz
xchg
xor
lds
mov
jmp
ins
and
ins
and
icebp
inc
je
jne
push
lock
enter
jmp
inc
inc
add
shl
and
cld
fsubr
jecxz
dec
movs
mov
adc
imul
or
retf
sbb
ror
mov
mov
or
pop
and
mov
push
movs
pop
sub
add
aaa
push
test
pop
sbb
push
cdq
push
pop
jp
dec
push
jns
test
lods
rol
inc
and
fdiv
dec
inc
dec
icebp
cmp
jge
sub
mov
pop
and
xchg
cmp
cs
cmp
jge
sbb
movs
jne
jge
jb
or
loope
push
pop
adc
or
in
jae
cmp
add
std
(bad)
mov
mov
mov
pop
jmp
or
lods
xor
dec
loop
cmp
dec
jne
adc
push
xchg
int3
daa
push
dec
jmp
in
lahf
ror
dec
ds
push
mov
mov
push
mov
jmp
outs
mov
fimul
ins
mov
daa
in
cmps
mov
cld
add
xor
cld
in
adc
outs
fcom
movs
or
inc
fcomp
in
inc
enter
inc
dec
mov
pusha
mov
push
imul
mov
adc
or
dec
or
ror
mov
loope
mov
push
nop
imul
loop
sub
jmp
inc
stos
add
pop
or
xchg
adc
sbb
fs
sbb
out
adc
add
div
out
int
bound
iret
out
(bad)
or
or
imul
lods
push
pusha
pop
dec
sbb
jp
or
cmp
je
mov
(bad)
jmp
and
stos
pop
xor
mov
dec
movntps
sub
or
push
aad
mov
test
or
jp
add
inc
or
dec
dec
mov
out
jns
lods
mov
lahf
cs
enter
adc
inc
aas
or
jbe
jmp
sbb
dec
dec
mov
hlt
dec
xchg
or
rcr
push
push
das
or
push
(bad)
mov
cmp
push
xor
gs
add
(bad)
(bad)
push
ss
cmp
fisub
hlt
shl
inc
pop
pusha
mov
xor
fsub
sbb
retf
add
or
dec
xchg
add
add
xchg
les
ror
xor
outs
cmp
pop
sbb
push
xchg
or
jmp
xchg
or
test
retf
xor
or
imul
add
adc
mov
xlat
es
push
or
pop
retf
add
and
xchg
xchg
mov
test
cs
retf
inc
retf
retf
inc
loope
dec
sub
or
adc
inc
sbb
adc
mov
jb
inc
push
inc
push
push
cdq
nop
xchg
out
inc
xchg
jb
inc
inc
inc
sbb
dec
inc
inc
jle
xor
ins
addr16
mov
outs
mov
aaa
jns
pop
aaa
(bad)
adc
movs
inc
stc
clc
lea
push
adc
dec
mul
mov
jge
mov
cmps
shr
in
pop
(bad)
inc
cmp
stos
dec
(bad)
mov
pusha
or
daa
sbb
cdq
(bad)
jno
hlt
cmp
stc
js
dec
mov
cmp
mov
lea
and
sbb
cli
(bad)
add
adc
inc
add
lea
nop
lods
xchg
fwait
pop
pusha
mov
imul
repz
inc
push
dec
rcr
scas
call
cmp
adc
adc
sub
(bad)
mov
inc
push
je
adc
js
int
and
push
sahf
or
add
add
add
iret
and
add
or
rcl
mov
add
inc
adc
cwde
mov
(bad)
cmp
in
mov
or
and
sub
dec
(bad)
push
xor
or
push
mov
ss
rol
push
(bad)
cli
add
jle
mov
or
sbb
xchg
push
lock
out
rol
cmp
mov
daa
add
or
push
pop
pusha
xchg
cmp
clc
inc
in
xor
push
aas
lock
imul
ins
sbb
jle
dec
and
and
adc
add
mov
xchg
sub
pop
pop
sub
adc
imul
cs
pop
out
push
call
and
xchg
hlt
jno
movs
fs
call
ins
hlt
or
jne
out
loopne
inc
rcl
xchg
inc
cmp
jp
es
popf
xor
mov
retf
nop
fmul
mov
push
pop
jb
in
xor
add
and
cld
mov
push
lea
add
or
cs
jle
inc
mov
fmul
in
es
mov
inc
clc
mov
xchg
or
loop
push
ficomp
les
test
dec
mov
daa
scas
bound
dec
adc
lock
sbb
fcom
pop
imul
hlt
frstor
imul
jmp
je
dec
xor
sbb
jmp
or
pop
dec
xchg
call
jge
scas
adc
push
jge
call
loopne
sub
xchg
dec
lock
mov
enter
sbb
adc
daa
call
jl
fadd
jae
test
idiv
(bad)
fnstenv
and
fdivr
sub
dec
test
lock
in
add
push
sti
rol
sub
repnz
jne
or
enter
(bad)
cmp
or
push
mov
aam
fimul
retf
out
in
xchg
retf
arpl
push
xchg
inc
pop
shr
mov
inc
dec
int3
rcr
and
xor
add
ds
dec
(bad)
push
dec
in
dec
mov
pop
or
inc
jle
adc
pop
inc
nop
pop
pop
inc
call
nop
inc
pop
inc
sbb
add
xchg
pop
loopne
xchg
in
push
inc
popa
ret
xchg
mov
imul
popa
xchg
xor
push
in
inc
scas
popa
jne
dec
sbb
jnp
ret
jl
cmc
inc
lods
xchg
fstp
push
call
mov
sbb
je
mov
cmp
cmps
pusha
or
inc
mov
add
pop
lock
xchg
jle
and
nop
mov
mov
inc
dec
daa
call
xchg
adc
mov
sbb
add
inc
fcom
adc
sbb
mov
addr16
adc
mov
or
(bad)
bound
cmp
(bad)
mov
outs
dec
(bad)
push
push
dec
or
add
dec
popf
adc
or
xor
mov
inc
movs
movs
inc
mov
push
outs
jno
hlt
dec
ret
fist
mov
jbe
sbb
mov
xor
and
lds
fs
cmps
in
mov
mov
add
adc
fstp
fsub
nop
les
out
frstor
pop
fdiv
(bad)
push
pop
fs
and
push
adc
and
and
and
popa
xor
daa
test
scas
xor
cmps
inc
add
jnp
mov
repz
inc
mov
sbb
and
inc
sbb
pusha
in
jl
fsub
lock
push
in
xor
adc
movnti
enter
shl
adc
pop
outs
and
sbb
pusha
sbb
jmp
loopne
popa
push
jne
(bad)
and
push
gs
xchg
les
lods
jnp
adc
adc
push
sub
push
pop
add
mov
arpl
fcomp
mov
adc
(bad)
push
das
call
mov
sub
add
and
pusha
sbb
mov
xor
sbb
mov
addr16
add
enter
imul
push
repz
adc
adc
or
paddb
gs
and
addr16
leave
pushf
addr16
xlat
jne
push
jb
jl
pause
pop
inc
or
in
jl
dec
ins
mov
jge
sub
and
inc
pop
add
jecxz
lods
or
mov
outs
dec
es
and
pop
push
or
or
out
mov
jbe
fnstenv
shl
pop
hlt
ds
stc
stos
ja
daa
adc
sahf
mov
nop
push
cmps
lods
sbb
push
adc
add
push
xlat
add
cmp
int3
xchg
or
cmovbe
imul
cmp
nop
cmp
inc
jno
lods
dec
add
and
(bad)
pop
dec
cmp
cmps
adc
and
icebp
pop
les
(bad)
mov
jb
adc
cs
or
gs
mov
stos
lea
add
xchg
or
and
add
das
jge
add
xchg
add
sub
push
fs
sub
jno
inc
shr
mov
shl
movs
test
jl
add
push
push
or
sub
sbb
loope
mov
fdivr
cmc
test
mov
add
inc
stc
dec
add
lea
hlt
and
mov
in
cld
push
push
repnz
cmc
sub
jp
and
mov
cwde
stc
bound
mov
or
and
stc
xchg
mov
xor
movs
push
lods
mov
mov
jmp
push
xchg
les
inc
mov
bound
inc
add
mov
pop
add
push
push
aaa
cld
xlat
call
fld
mov
loopne
dec
pop
pushf
ja
add
dec
sar
xchg
fdiv
mov
clts
arpl
ret
lea
sbb
xchg
ss
(bad)
seta
or
jmp
mov
and
cmp
pop
inc
inc
pop
outs
aam
rcl
dec
fsub
call
dec
jo
adc
cli
push
pusha
xor
cmp
popf
sbb
fwait
mov
add
dec
jmp
or
mov
and
jno
adc
sbb
iret
pop
jmp
(bad)
fsub
repz
push
push
ret
ins
aaa
imul
or
adc
jmp
adc
sbb
mov
jne
test
popa
test
retf
adc
test
sbb
cmp
mov
sar
dec
mov
or
push
xlat
xchg
sbb
push
add
or
(bad)
jg
adc
sqrtps
pop
mov
inc
dec
jne
ret
inc
out
or
stos
sub
nop
(bad)
and
push
cmp
pop
add
in
mov
pusha
and
clc
cmp
xchg
sbb
xchg
neg
add
add
sub
test
mov
nop
or
cdq
shl
jb
add
inc
or
and
mov
icebp
sub
mov
adc
push
or
sub
mov
push
jae
inc
pusha
cmp
xchg
jae
ss
add
adc
add
setle
dec
or
cmp
cmps
mov
out
je
adc
add
fiadd
cs
add
cmp
jp
add
push
nop
and
dec
imul
in
xchg
push
jmp
push
loopne
sbb
pop
sub
sub
cwde
cmp
and
inc
sbb
ins
mov
inc
pusha
or
or
or
adc
push
enter
test
pop
rol
gs
jne
jmp
cmp
mov
popa
xlat
and
and
cmp
or
sbb
test
ins
add
mov
call
retf
ret
jno
ja
movs
xchg
jmp
push
add
jo
inc
arpl
out
out
scas
mov
lock
sub
jne
leave
add
sub
in
jne
and
cld
(bad)
jne
push
sbb
leave
(bad)
and
xor
pop
fcmovu
jmp
pop
dec
movs
push
add
mov
jmp
jne
xor
les
fld
cmps
stos
loopne
test
in
rol
loopne
pop
mov
fld
call
repnz
add
adc
mov
or
or
mov
test
arpl
int3
adc
xor
mov
jmp
adc
aaa
rcl
mov
xor
mov
jno
retf
inc
mov
add
cmp
jbe
aaa
loope
sbb
add
cmp
pop
mov
jbe
mov
cmp
or
ins
inc
jmp
arpl
inc
sbb
mov
pop
test
sub
add
jmp
bound
mov
jo
cmps
stc
adc
js
sub
push
popa
pop
jns
pop
in
retf
push
jge
dec
into
xchg
arpl
or
mov
imul
sbb
in
push
pop
lds
inc
sbb
inc
add
or
leave
sbb
hlt
test
push
ja
arpl
data16
imul
leave
push
or
fnstcw
repnz
out
clc
sbb
or
jns
lock
jns
jecxz
push
dec
sbb
cwde
add
jnp
sar
add
lock
inc
push
(bad)
and
cmp
jno
out
mov
jmp
and
in
gs
call
cmc
dec
pop
fbstp
es
adc
mov
jecxz
inc
and
inc
rol
stos
cmp
inc
dec
dec
jp
jp
mov
jae
mov
and
mov
adc
add
sub
cld
jnp
inc
inc
lahf
out
js
jmp
or
push
and
aas
pop
inc
aaa
sbb
neg
fs
mov
inc
popa
mov
sar
dec
(bad)
push
add
or
add
repnz
jb
and
mov
and
fcom
or
ret
mov
mov
and
xchg
add
nop
inc
cmp
lock
push
repz
jl
cmp
scas
loop
ss
pusha
ret
or
hlt
popa
mov
movs
fisttp
adc
sbb
push
ins
pop
shl
xchg
movs
mov
xchg
ins
sbb
push
inc
ja
les
enter
sbb
shr
rol
pop
shl
cmp
or
push
sub
inc
or
arpl
dec
cli
inc
sar
push
movs
js
lock
cmp
jmp
icebp
(bad)
test
mov
inc
xor
pop
into
push
push
neg
mov
cmp
add
adc
adc
add
inc
xchg
jo
clc
das
xor
adc
xor
jmp
sbb
or
jle
cwde
or
sub
mov
adc
mov
push
add
sub
cdq
movs
push
cdq
clc
cmp
clc
movs
push
cdq
ss
hlt
push
cdq
hlt
lock
nop
push
cmp
sub
in
push
add
mov
lds
sbb
icebp
fwait
xchg
outs
add
xchg
jmp
pop
push
sub
add
add
in
in
ds
add
add
dec
fcom
or
push
(bad)
fld
push
inc
iret
aad
sub
cwde
rol
out
inc
sbb
and
icebp
pop
outs
addr16
dec
xchg
arpl
push
ss
fsub
or
or
(bad)
std
xchg
or
fistp
sbb
dec
int3
jnp
jae
add
mov
fsub
fwait
adc
inc
sub
fnstenv
dec
or
lods
cmp
jl
mov
nop
in
add
inc
mov
add
inc
retf
mov
sbb
xchg
and
pop
sbb
add
ror
(bad)
cdq
retw
sbb
push
add
mov
fst
loope
sbb
popf
loopne
bound
jns
cld
xchg
sbb
and
lods
fwait
xor
comiss
and
adc
and
ud0
je
out
or
pop
inc
out
(bad)
loope
mov
in
out
out
int3
nop
or
inc
jmp
sbb
test
jmp
add
popf
ret
bound
or
rcl
and
or
dec
imul
push
or
jnp
push
scas
push
cmp
mov
and
retf
sub
sbb
sub
sbb
sbb
dec
mov
or
fcmovb
stc
sbb
cmp
hlt
test
sub
test
aam
jae
add
shl
pop
or
ret
aas
inc
cdq
mov
jb
lea
add
add
add
inc
pop
xchg
push
xor
fwait
test
mov
ins
test
xlat
sbb
sub
cdq
in
cld
cld
and
or
aaa
in
cmp
push
push
cmpxchg
pop
sub
sub
push
outs
repnz
in
or
sub
ins
sbb
in
pop
test
sbb
or
jmp
xchg
rcl
addr16
push
push
jge
loopne
mov
jl
cmp
jb
and
iret
xor
push
scas
xchg
in
(bad)
sbb
sub
push
cmps
rol
popa
iret
daa
xchg
xchg
and
xchg
add
in
sub
and
dec
sub
(bad)
stc
and
sti
jns
mov
pop
pop
mov
inc
nop
rcr
xor
sbb
or
mov
mov
pop
fs
scas
arpl
push
imul
stc
sub
xor
xor
arpl
mov
rcl
(bad)
sub
sbb
js
cmp
jp
shl
sbb
dec
xchg
inc
clc
dec
mov
std
in
push
sbb
sbb
nop
xchg
clc
mov
push
adc
clc
mov
push
cmp
sub
inc
sub
xchg
loop
mov
test
das
lods
jae
pop
test
sbb
mov
xlat
fistp
sub
out
mov
pop
mov
dec
sub
es
jp
shl
ins
push
inc
into
in
rol
or
sbb
jmp
and
fadd
repz
pop
sub
loopne
jecxz
cli
out
mov
test
shr
push
mul
test
test
push
shr
sbb
xlat
(bad)
and
nop
jecxz
jnp
cmp
cmps
mov
(bad)
iret
inc
(bad)
aam
add
or
fadd
std
fwait
add
aas
pop
xor
or
push
mov
mov
push
add
dec
fist
arpl
call
push
rcr
push
(bad)
sbb
and
in
xchg
dec
les
cmp
out
xor
pop
fild
cmp
xchg
scas
mov
(bad)
call
fmul
cwde
cmp
pop
xchg
jno
in
mov
lahf
add
add
mov
jmp
xor
cmp
fdivr
mov
sbb
push
mov
leave
test
inc
fs
mov
inc
push
leave
test
cmp
push
xchg
cwde
mov
jns
inc
cld
sbb
enter
fs
cwde
loopne
jb
pop
add
dec
xchg
nop
ja
inc
std
dec
jo
rcr
xor
fidivr
xchg
push
and
xchg
xchg
retf
leave
aaa
nop
sbb
xchg
push
inc
and
push
mov
cmp
enter
mov
ret
and
in
sub
jns
or
jo
in
adc
(bad)
pusha
mov
lods
dec
xlat
adc
ins
(bad)
mov
loopne
mov
inc
add
add
repz
(bad)
push
add
push
pop
add
cs
add
aaa
jo
mov
push
pop
dec
xor
(bad)
or
xchg
adc
jae
add
iret
jnp
xor
dec
xor
dec
inc
add
fidivr
fisttp
sub
sub
ss
into
xor
inc
fild
lds
(bad)
mov
jb
cmps
jle
call
xchg
dec
loop
mov
test
xlat
push
cmp
dec
mov
push
sub
push
aaa
iret
iret
jnp
aaa
push
out
push
cmp
dec
dec
inc
lock
cs
stos
dec
out
push
xchg
das
imul
inc
jb
xor
jle
call
push
cmp
pop
add
pop
mov
scas
(bad)
jg
xor
(bad)
adc
push
shl
pop
out
sbb
dec
call
dec
cmp
aaa
push
out
xor
push
jae
lock
jmp
jmp
jnp
xor
jp
retf
gs
dec
xchg
adc
mov
inc
mov
aaa
sbb
jnp
cmp
jmp
fiadd
sub
pop
sub
pop
mov
in
pop
jne
movhps
pop
inc
cmps
inc
(bad)
sti
icebp
loop
push
jg
pop
inc
xlat
shl
daa
xor
dec
sbb
push
push
arpl
xlat
sar
pop
jb
jle
cmps
dec
data16
pxor
xlat
and
cmp
mov
inc
cs
fisubr
inc
jle
cmps
jle
push
dec
push
retf
push
dec
(bad)
jns
pop
xor
pop
push
aaa
or
mov
and
jne
push
ja
xchg
pop
or
cmova
dec
dec
into
xlat
mov
daa
pop
push
dec
lahf
and
mov
aas
inc
sahf
pop
push
inc
xor
mul
sub
mov
jnp
pushf
inc
pop
out
mov
xor
cmp
iret
aas
push
xor
lds
cli
(bad)
cmp
push
xor
jmp
xchg
jnp
loope
xlat
or
and
jmp
out
and
push
sbb
mov
push
push
pop
cmp
imul
and
push
(bad)
and
sti
mov
ds
pop
dec
pop
pop
push
or
mov
sbb
out
jo
adc
mov
dec
pop
fistp
shl
jnp
ja
mul
dec
scas
fiadd
xsave
pop
out
jnp
push
or
retf
inc
push
cmps
jbe
lods
or
dec
shr
push
ja
sbb
inc
cmp
mov
pop
scas
add
ds
and
fiadd
(bad)
push
push
inc
xlat
and
push
dec
aas
jns
dec
(bad)
push
mov
aam
and
jge
push
lods
bound
pop
mov
loop
mov
inc
or
mov
cmp
push
and
dec
outs
cmps
ins
bound
mov
inc
add
push
loope
mov
xchg
sbb
test
xor
lods
pop
mov
stos
add
or
mov
pop
and
rcl
dec
jb
inc
gs
lds
je
jo
cs
js
arpl
pop
and
mov
push
and
jns
ds
jne
xor
jl
gs
jnp
and
sbb
pop
bound
outs
das
or
xor
iret
ja
call
push
adc
sbb
enter
cdq
cmp
arpl
sbb
fcomp
fsubr
push
push
leave
and
sub
mov
sbb
call
into
mov
mov
and
and
push
mov
jns
sbb
cdq
nop
outs
or
sbb
dec
js
xlat
xor
out
cmp
sbb
xor
jno
sbb
xlat
and
xchg
sub
outs
push
sti
push
pop
mov
and
je
(bad)
addr16
jbe
jae
imul
sub
not
mov
mov
pushf
mov
sbb
pushf
cwde
pushf
add
xor
pushf
dec
mov
enter
inc
and
sbb
stos
sbb
sub
push
es
and
mov
pop
xor
or
rol
xor
fisub
xor
inc
arpl
aaa
imul
nop
push
adc
xchg
stos
and
imul
scas
(bad)
clc
and
mov
sbb
nop
xlat
icebp
push
push
pop
sahf
jl
add
sub
sbb
in
sahf
enter
xchg
dec
push
es
add
sub
in
in
pop
icebp
pusha
and
in
(bad)
add
jne
pop
or
pop
imul
stos
mov
sbb
rcr
push
and
sbb
push
and
inc
or
in
dec
mov
jb
sbb
fs
and
enter
imul
imul
hlt
cld
xor
and
sbb
jbe
cmp
mov
xchg
ror
jg
push
nop
push
leave
push
mov
cmp
xchg
and
push
nop
xchg
dec
xor
sbb
mov
or
ficom
xor
fild
movs
test
loope
sbb
mov
movs
rcl
and
movs
or
or
ror
movs
ss
add
push
repz
lods
or
mov
pusha
popf
sbb
je
xor
mov
stos
out
push
and
add
push
js
dec
sbb
imul
movs
xchg
push
and
mov
cmp
mov
mov
sub
scas
clc
(bad)
mov
sub
lods
movs
ret
je
xor
mov
arpl
jne
pop
data16
dec
inc
jo
adc
dec
xchg
cmp
(bad)
out
add
and
or
adc
mov
push
outs
imul
pop
xor
mov
test
mov
cdq
inc
mov
sub
mov
push
(bad)
loop
and
sub
adc
fs
adc
gs
ins
push
(bad)
js
mov
cmps
jae
jno
add
stos
dec
adc
push
pop
fisubr
(bad)
jnp
retf
pop
sub
mov
jb
mov
adc
sub
bound
pop
dec
in
xor
inc
loop
repnz
movs
jp
movs
xor
mov
int3
movs
mov
fld
xor
or
in
mov
in
stc
and
jge
inc
cmp
sbb
inc
hlt
xor
popf
adc
pushf
inc
mov
(bad)
out
imul
push
ret
scas
(bad)
cvtps2pi
jb
ficom
(bad)
jb
mov
xchg
rcl
aad
and
cmp
cmps
mov
mov
pmaxub
jb
repnz
push
push
in
xchg
loope
ficom
and
ins
arpl
jge
clc
pop
xchg
pop
jecxz
sub
sub
lods
hlt
push
lods
cmp
stos
mov
jb
xchg
add
lock
mov
cmp
neg
cmp
int3
lods
jne
aam
inc
stos
in
inc
call
push
movs
jmp
mov
xchg
es
add
rcr
mov
push
adc
xor
dec
(bad)
in
sub
or
in
or
in
and
ja
aas
loopne
xchg
mov
cmp
pop
mov
add
sbb
sub
clc
and
add
fdiv
xor
or
nop
rcl
and
jne
push
adc
int3
rcr
aad
scas
mov
and
push
dec
mov
push
push
cmp
enter
add
mov
or
jb
nop
add
xchg
sar
add
or
xor
call
push
mov
scas
inc
push
in
movs
movs
nop
and
mov
and
pushf
cwde
push
and
nop
retf
xchg
xchg
and
mov
jb
inc
xor
loope
add
sub
pop
mov
and
mov
mov
pushf
xor
sahf
fstp
ins
add
fdivr
mov
push
scas
add
pop
out
sbb
cmp
das
mov
fdivp
pop
aas
push
dec
add
je
js
push
call
dec
addr16
xor
pop
and
or
add
push
ins
pop
or
or
aaa
or
pop
cli
add
cmp
sub
add
pop
leave
push
in
data16
dec
add
sub
jle
popa
xchg
movs
mov
pop
jmp
popa
inc
je
inc
xlat
and
or
iret
pop
inc
dec
cmps
sbb
add
jo
dec
cmps
(bad)
adc
and
cmp
add
test
test
push
(bad)
sti
jns
push
sub
xchg
dec
iret
test
arpl
pop
pop
inc
pop
jns
rcr
int
pusha
mov
cbw
jp
sub
aam
fistp
aam
pop
xor
dec
pop
pop
cmp
push
mov
mov
out
ja
add
pop
dec
push
xchg
inc
loope
popa
jg
inc
dec
fs
push
daa
mov
and
shl
data16
add
add
outs
add
arpl
mov
jno
add
mov
std
sub
rcl
adc
jb
clc
sbb
lahf
jo
jg
mov
(bad)
sbb
jl
xor
cmps
push
adc
push
push
rcl
fbld
in
pop
xor
pusha
adc
pop
jb
enter
mov
mov
mov
fdiv
push
pop
inc
hlt
jne
cmps
add
inc
jb
bound
pop
cmp
inc
cwde
mov
cmp
sbb
stos
and
inc
out
adc
hlt
mov
inc
sbb
adc
and
and
sti
xor
pop
xor
call
cmp
add
outs
lods
mov
mov
add
push
add
scas
xor
push
mov
imul
adc
mov
pop
mov
sbb
jb
mov
mov
mov
pop
cmp
push
inc
add
fisubr
or
ror
mov
xchg
and
cmp
sbb
and
adc
mov
xor
pop
xor
xor
daa
daa
pop
push
jbe
cld
fcomp
inc
retf
sbb
push
jmp
gs
fnsave
inc
rcl
test
jg
mov
mov
mov
call
or
sahf
repz
pop
add
rol
mov
mov
sbb
in
mov
mov
push
cmps
push
sbb
mov
cmp
sub
and
push
pop
dec
inc
push
xchg
ror
(bad)
mov
inc
int
mov
and
pop
invd
arpl
imul
out
or
jb
test
jb
mov
jb
mov
jb
jo
jb
jb
jb
je
jbe
jb
jb
js
jp
jb
jb
jl
jle
jb
jb
pusha
popa
bound
jb
jb
gs
jb
push
jb
jb
ins
outs
outs
jb
jb
push
push
push
push
jb
jb
push
push
push
push
jb
jb
pop
pop
pop
pop
jb
jb
pop
pop
pop
pop
jb
jb
inc
inc
inc
inc
adc
jae
inc
inc
pushf
mov
jb
das
mov
push
outs
add
int
pusha
cmp
cmps
es
setg
dec
add
add
push
dec
inc
inc
push
inc
dec
imul
mov
fsub
inc
ins
adc
lods
inc
shr
call
pop
inc
jge
xor
and
mov
leave
adc
sub
mov
pusha
adc
(bad)
icebp
addr16
aam
xchg
imul
inc
add
cmps
inc
push
call
add
jo
les
dec
mov
dec
xchg
and
push
enter
ins
pop
lods
xchg
test
or
push
or
sub
mov
adc
and
ds
push
xor
adc
cmps
and
dec
xchg
imul
cld
and
fs
cld
shl
lea
cmp
lea
xchg
jl
mov
jno
adc
cmp
(bad)
and
xlat
pop
inc
js
addr16
mov
xchg
js
clc
or
and
inc
cmps
adc
enter
aam
jns
ret
inc
sub
and
mov
cmp
push
sub
jecxz
sbb
xor
xor
outs
adc
lds
cmps
inc
jmp
out
pop
out
pop
or
ret
test
mov
dec
jns
dec
pop
dec
clc
xor
cmp
sti
push
jne
cli
xchg
jecxz
xor
retf
xchg
jecxz
push
pushf
add
mov
mov
dec
cvtps2pd
nop
(bad)
xor
xor
mov
jne
inc
or
sbb
sbb
sub
test
mov
lods
mov
add
pop
lods
xchg
adc
das
daa
in
aaa
mov
inc
mov
fsub
rsqrtps
mov
js
bound
fsub
pop
fild
xor
in
test
addr16
sbb
pop
pop
shl
push
sub
dec
jo
shl
xchg
xlat
pop
sub
mov
inc
dec
dec
es
lods
mov
inc
mov
adc
ss
movs
and
jecxz
pop
xor
xor
in
mov
shl
add
rcr
clc
mov
jecxz
shl
inc
sub
outs
nop
movs
popf
movs
add
in
mov
test
or
or
sahf
scas
stc
adc
int
clc
dec
add
lock
cmps
nop
in
fld
xor
ret
or
fs
rol
fstp
(bad)
cmp
sbb
mov
jg
push
ficomp
pop
or
ss
push
xchg
xor
(bad)
jp
div
imul
xor
sbb
mov
pop
or
jle
jns
pop
xchg
scas
sbb
or
leave
dec
les
push
or
sub
push
dec
leave
nop
xor
(bad)
jmp
popa
mov
repnz
inc
retf
dec
push
mov
push
or
loopne
sbb
stos
jns
movs
and
inc
les
dec
push
or
sub
test
adc
pop
push
xor
pop
mov
sub
adc
int3
les
lds
icebp
sbb
shr
(bad)
vunpcklps
jns
inc
addr16
sub
sub
int3
ins
das
add
add
ins
dec
mov
sub
test
add
aam
xor
add
xor
and
pop
xor
dec
dec
add
jmp
adc
pusha
std
call
outs
add
mov
in
ss
ror
fadd
cmp
jb
in
call
sbb
popf
test
ficomp
(bad)
fbstp
push
jb
icebp
fild
repz
mov
loopne
(bad)
shr
or
leave
and
and
adc
push
in
sbb
pop
cmp
es
outs
pshufw
and
jne
jmp
mov
push
(bad)
fld
loope
cmc
repz
out
add
iret
repz
and
push
cmp
repz
bound
jg
cmp
xrelease
repz
mov
adc
lods
jmp
or
mov
les
enter
sahf
mov
shr
popa
enter
into
jg
leave
loope
xchg
mov
pusha
in
or
add
add
jge
fild
cmps
ud2
retf
pop
retf
jb
pop
xchg
maskmovq
idiv
retf
movs
out
sahf
mov
int3
xor
jg
add
daa
and
mov
enter
daa
sub
pop
add
jl
mov
enter
add
or
aaa
inc
add
pop
adc
add
adc
je
syscall
add
push
rcl
aas
ror
add
aam
inc
dec
jnp
and
cmp
jmp
xor
pop
dec
mov
shl
test
cmp
retf
popa
repnz
adc
or
add
dec
add
xchg
leave
daa
pop
add
cmp
push
cwde
aam
add
or
(bad)
(bad)
adc
inc
lahf
or
fild
or
lahf
push
mov
add
push
in
(bad)
inc
and
nop
dec
xchg
or
or
popa
into
xchg
inc
dec
xchg
call
and
push
mov
in
das
aad
test
in
mov
aad
push
or
inc
movs
popa
arpl
push
mov
in
fstp
pop
add
cmp
mov
add
in
mov
(bad)
ficom
add
inc
inc
mov
jle
rol
pop
out
and
int
add
out
add
leave
(bad)
fisubr
stc
add
out
rol
or
or
and
aad
lahf
push
ja
ja
or
pop
add
inc
sbb
(bad)
mov
and
ss
aam
lahf
add
ss
pop
arpl
lock
jb
sar
or
in
or
aad
adc
mov
adc
cmp
jp
pusha
jecxz
sub
fld
xchg
sti
mov
mov
pop
jo
sbb
sub
(bad)
fimul
aam
push
or
adc
and
das
fisubr
dec
addr16
push
add
nop
test
js
sub
jb
sbb
pop
jecxz
lods
dec
rol
xor
inc
adc
test
sub
pusha
mov
jge
add
cdq
test
outs
sbb
test
and
xchg
sub
shr
mov
aam
movs
jp
sub
xor
xor
js
push
movs
mov
adc
inc
dec
xchg
pop
xchg
aam
fcmovb
add
in
aad
or
data16
gs
sub
mov
pusha
sahf
rol
ds
shl
call
adc
ins
gs
jns
test
aaa
sbb
lock
and
add
retf
fbstp
or
ror
lods
icebp
or
cmp
jmp
add
sti
dec
xlat
in
fidiv
dec
aas
fsub
sub
imul
fcom
cwde
inc
add
pop
and
and
leave
adc
pusha
or
lea
xchg
hlt
jno
adc
js
jo
push
sbb
shl
js
add
inc
stos
in
cmp
inc
xor
xchg
push
adc
js
or
or
add
pop
dec
adc
mov
fcom
cmp
in
cmp
(bad)
xlat
movs
fistp
inc
into
cmc
sub
data16
cmp
dec
repz
push
add
or
imul
ds
xlat
test
enter
and
xor
cmp
pop
fisubr
call
mov
add
xchg
shl
mov
and
cmc
mov
and
add
push
enter
mul
jns
enter
test
sub
sbb
fcmovne
pop
jge
jp
or
mov
jb
fsubr
fdiv
push
jb
jbe
test
jo
xor
js
xor
dec
add
xchg
je
dec
inc
lods
fmul
out
fdiv
(bad)
dec
es
not
fstp
jo
dec
and
in
add
loope
imul
fisttp
pop
clc
mov
add
adc
(bad)
lock
inc
pushf
xchg
xchg
loopne
(bad)
mov
sbb
sub
mov
iret
repz
lods
cmp
in
icebp
jae
iret
cdq
fsubrp
ficom
mov
fild
(bad)
cmp
in
loopne
loopne
add
ss
adc
inc
push
jb
lock
jns
mov
aam
jns
mov
loopne
and
or
not
loopne
and
loopne
push
or
(bad)
and
test
loopne
not
adc
loopne
pop
add
mov
push
imul
loop
sub
enter
loope
fisttp
xor
idiv
cdq
cmps
(bad)
loop
movs
loop
inc
nop
popa
cmps
sbb
fwait
jo
mov
dec
rol
mov
fs
fsub
sub
or
outs
pop
ins
int
pop
sbb
jecxz
xchg
xchg
xchg
pop
adc
nop
jecxz
jecxz
mov
jo
mov
dec
cmp
out
stc
or
clc
iret
das
das
aas
loopne
jecxz
add
in
das
das
das
adc
in
(bad)
push
xor
test
push
inc
dec
dec
xlat
adc
push
sub
or
ins
push
and
jo
and
nop
clc
or
inc
enter
clc
or
nop
pop
enter
or
test
loopne
stc
adc
out
stc
mov
in
out
pop
test
cmp
xchg
xor
dec
shl
movs
cs
stc
cmp
iret
imul
cwde
ror
xchg
and
or
push
out
out
jb
enter
out
call
sbb
(bad)
cmps
jmp
stc
enter
xor
xlat
jg
dec
stc
das
(bad)
cli
inc
push
stos
dec
push
stc
sub
and
and
imul
pop
les
stc
xchg
nop
pop
add
leave
inc
shr
fldcw
dec
aam
push
dec
popf
inc
(bad)
imul
nop
or
dec
pusha
fsub
push
add
fisub
add
sar
xor
out
cmp
cmp
dec
push
test
jle
(bad)
bound
mov
mov
jo
data16
aaa
pop
repnz
xor
and
cmpxchg
jmp
cmp
jle
aam
fisttp
leave
jle
add
shl
frstor
in
xor
icebp
clc
push
loope
aad
xor
jecxz
or
ret
sbb
cmp
lock
fcmovnu
jge
sbb
pop
inc
sub
(bad)
inc
aam
push
inc
addr16
push
add
cmp
add
pusha
dec
xor
dec
xchg
lea
add
adc
and
xor
mov
rol
sahf
push
jg
xor
fcmovu
jl
jmp
sbb
jb
or
xor
gs
lds
adc
lods
add
aaa
(bad)
push
jno
movs
add
jb
sub
stos
retf
push
pop
push
push
ins
call
or
ins
pop
sbb
pop
cmp
mov
push
mov
fsub
inc
jae
adc
mov
sub
sub
inc
cmp
push
(bad)
inc
pop
cmp
pop
lock
test
pop
inc
scas
jnp
loopne
lods
cmps
test
and
dec
or
xchg
mov
mov
fidiv
cmp
scas
add
push
xchg
adc
push
xchg
sub
pusha
fwait
jge
add
inc
cmp
add
aad
lock
loop
sar
push
aam
arpl
aas
xchg
cli
mov
lds
retf
(bad)
call
xor
ds
aas
fucomp
enter
fnsave
shl
mov
popa
mov
sbb
xchg
and
leave
shl
adc
xor
jns
call
mov
or
daa
or
and
frndint
or
push
mov
loopne
pusha
in
sbb
pusha
fisttp
mov
or
dec
xor
lea
aas
and
aad
ret
or
dec
or
daa
adc
lods
stos
and
adc
js
mov
lods
sbb
popa
int3
push
jg
es
jle
cmps
dec
or
enter
les
xor
cmp
push
xchg
or
jno
or
inc
or
rol
or
loop
and
or
pop
add
mov
adc
xchg
pop
mov
and
ror
inc
mov
add
inc
or
inc
retf
clc
imul
sti
sbb
inc
and
xor
test
inc
aaa
imul
sbb
popa
mov
js
jmp
je
test
pop
xor
jnp
lahf
dec
mov
out
push
sti
lds
mov
lods
jno
and
in
loopne
and
daa
ficom
or
mov
inc
ret
fisttp
stc
je
push
sbb
adc
sbb
bound
mov
enter
into
adc
popa
mov
pop
lock
push
sub
jb
add
jle
cmp
mov
or
mov
test
rcl
cmp
(bad)
inc
inc
fcmovnbe
add
test
pop
adc
in
ret
test
mov
daa
test
pop
leave
ja
aas
int3
loopne
sbb
inc
mov
dec
push
lods
ret
sbb
inc
xchg
(bad)
fiadd
xchg
ja
sub
inc
mov
sti
adc
adc
je
ja
or
inc
inc
test
push
adc
xchg
cmp
jl
add
in
mov
xchg
sar
(bad)
adc
add
sub
jb
adc
add
dec
adc
nop
inc
repnz
xor
add
nop
outs
(bad)
ret
xchg
cmc
add
sbb
add
push
adc
clc
ja
aam
jbe
mov
jmp
jbe
mov
and
and
dec
jne
cmp
add
test
pop
xchg
sti
xchg
xchg
enter
sbb
adc
xchg
js
ror
xor
push
cld
inc
mov
imul
mov
jo
sar
sbb
arpl
push
shr
pop
(bad)
or
mov
push
repz
sub
jg
push
add
ja
(bad)
out
sahf
mov
or
push
dec
adc
cs
inc
mov
push
jns
jnp
adc
mov
and
in
push
call
xor
jmp
xchg
ret
cmp
into
add
add
push
and
fcomi
fiadd
xor
adc
cmp
daa
call
retf
and
aam
push
in
(bad)
jle
in
push
ret
push
add
adc
add
sar
or
jle
fnstsw
test
ds
sub
adc
push
ja
mov
sub
out
lahf
in
pop
add
jb
xor
add
les
adc
dec
and
cmovo
jmp
jb
mov
xchg
mov
xor
push
test
shl
dec
les
out
and
leave
add
les
mov
fmulp
and
leave
inc
cwde
(bad)
push
enter
in
setns
jbe
int3
test
in
jb
dec
and
int3
leave
mov
inc
push
xor
rcr
out
(bad)
in
cdq
rcl
adc
and
scas
sbb
mov
sbb
add
xchg
movs
xor
pop
inc
dec
ret
mov
xchg
adc
mov
mov
push
(bad)
cmc
inc
and
push
mov
(bad)
push
sbb
aas
and
inc
xchg
popa
cld
mov
sbb
jne
fbld
rol
xlat
and
xor
ret
jb
es
js
shl
ins
sub
cmp
rcr
dec
cmp
adc
popa
clc
dec
adc
inc
shr
inc
rcl
idiv
pop
sbb
mov
and
mov
jmp
push
into
mov
pushf
(bad)
shl
das
push
add
adc
lods
(bad)
fs
xchg
inc
or
ja
(bad)
iret
mov
dec
popa
sti
pop
ins
stos
pop
pop
and
inc
clc
add
push
(bad)
push
rol
xchg
iret
shr
inc
pop
fadd
pop
inc
add
es
pop
mulps
pop
fs
mov
cwde
or
dec
retf
add
adc
xor
mov
sub
cmps
hlt
into
ja
sbb
cld
rcl
and
pop
test
pop
xor
sub
stc
es
mov
sub
jp
sbb
and
mov
fistp
arpl
add
int3
ret
add
into
(bad)
dec
pop
push
xchg
push
retf
ds
fisub
push
xchg
xchg
xchg
mov
push
scas
adc
inc
jmp
call
(bad)
call
inc
call
add
rol
inc
mov
data16
ret
inc
mov
fadd
sub
lea
cmp
sti
xor
fistp
adc
jecxz
or
cmps
cmps
repnz
pusha
mov
mov
xchg
and
jae
add
or
inc
xchg
(bad)
and
fs
xchg
pop
pop
xor
call
or
(bad)
hlt
pop
shl
mul
xor
cmp
add
sbb
or
sub
push
nop
dec
fild
outs
fstp
call
push
test
int3
popa
mov
jmp
and
mov
jecxz
pop
dec
retf
imul
stos
fild
jo
and
in
aam
push
or
sub
xor
test
pop
cmp
push
cmps
or
mov
enter
sbb
pop
add
imul
outs
test
jl
stos
int3
push
pop
push
mov
inc
call
xchg
ja
mov
adc
mov
inc
call
adc
nop
mul
jle
leave
adc
(bad)
cmp
add
sub
jg
and
das
add
inc
xchg
add
jmp
jecxz
int
sbb
add
and
cli
cmp
popf
sbb
les
add
cmp
out
call
movs
add
dec
into
add
cmp
push
push
cmp
or
adc
lds
dec
(bad)
std
or
gs
pop
adc
cmc
lods
sub
not
sbb
sbb
add
or
cmps
jnp
mov
js
cmp
mov
ss
push
mov
mov
imul
sub
in
jb
fld
sbb
xor
adc
in
and
gs
jmp
xchg
or
test
push
or
cwde
push
xor
aam
sbb
ja
cmp
mov
adc
retf
je
loopne
dec
aas
ret
jo
adc
cmp
and
jo
ret
inc
adc
popa
push
inc
push
jo
pop
and
mov
les
sbb
test
inc
add
hlt
repnz
test
ins
je
aam
and
je
test
(bad)
pop
dec
xor
or
adc
or
pop
dec
les
clc
enter
aas
(bad)
and
js
mov
adc
je
adc
xor
sub
jne
je
(bad)
bound
das
sbb
shl
jne
(bad)
or
cmps
cmps
xlat
inc
jecxz
sbb
enter
imul
cmp
enter
add
rcl
nop
inc
rol
dec
pusha
loop
mov
push
imul
dec
sub
inc
push
add
fmul
mov
pushf
mov
jecxz
xor
div
or
fcmovnbe
and
jne
or
fidiv
inc
or
xchg
pushw
jg
push
push
add
mov
sbb
arpl
xchg
ja
repnz
xchg
mov
dec
xchg
rol
add
push
repnz
popa
out
fadd
or
xlat
popf
clc
jns
hlt
mov
adc
test
cvttps2pi
and
adc
cs
ror
outs
fisub
sar
(bad)
sbb
sbb
sub
add
(bad)
sar
inc
xchg
mov
hlt
or
std
enter
add
(bad)
cwde
inc
js
jecxz
dec
mov
mov
test
ins
loop
jae
sar
add
bound
cmp
je
int
dec
pop
jmp
inc
push
dec
pop
clc
or
jne
mov
cld
cmp
dec
mov
test
sti
ja
hlt
jle
jl
and
mov
(bad)
ins
dec
mov
mov
jge
sbb
je
cs
movs
sub
pop
mov
dec
mov
push
mov
mov
out
xchg
mov
fs
sub
lock
dec
repz
adc
rdpmc
dec
jne
jmp
push
inc
sbb
cmps
pusha
and
lods
mov
sbb
add
pop
push
lock
out
push
xchg
test
mov
call
push
clc
and
add
dec
xchg
push
adc
inc
xor
or
xor
int
movs
movs
cs
lock
cwde
adc
movs
loope
fadd
sub
or
ss
test
push
mov
and
inc
push
cmp
xor
aaa
dec
mov
rol
mov
les
test
enter
adc
push
fadd
inc
and
adc
bound
imul
imul
loope
lea
inc
jmp
push
call
cmp
adc
inc
scas
dec
call
add
and
iret
sti
jl
scas
sub
cmp
outs
lea
mov
mov
pushf
(bad)
mov
dec
shl
or
fwait
or
(bad)
lock
adc
adc
or
push
pop
or
shr
repnz
mov
dec
xor
sbb
add
dec
cmp
jae
push
mov
lods
add
or
lock
pushf
dec
inc
cmc
mov
mov
mov
rol
je
cdq
xor
xchg
dec
call
xchg
add
rol
(bad)
push
jge
fcmovnb
adc
sub
adc
in
jmp
ins
fiadd
shl
dec
or
shl
inc
xchg
cmp
je
inc
dec
jne
inc
push
add
jg
aaa
(bad)
fdiv
sub
jb
inc
xchg
and
pop
rcr
pop
push
dec
movs
fsubr
sbb
jne
dec
jne
cwde
inc
and
fistp
xor
jmp
nop
push
mov
cmp
or
je
add
cmp
cli
ja
rcl
fild
mov
inc
or
int3
push
fcom
imul
aad
sub
(bad)
push
movs
pop
nop
sub
and
xchg
jg
inc
jmp
add
or
or
dec
mov
retf
movs
outs
mov
sub
push
mov
inc
imul
ins
(bad)
scas
and
(bad)
sbb
ret
out
xchg
es
jb
or
das
sbb
pusha
in
fs
in
sub
enter
pop
push
inc
movs
shl
fdiv
jo
jno
jmp
push
dec
ret
in
sbb
mov
and
fcmovb
and
jmp
cmp
fcom
fiadd
pop
call
pusha
jg
and
xchg
cmp
lea
jl
and
xor
lods
mov
cmp
pop
push
aam
fsubr
movs
cmp
add
fs
inc
cs
shl
inc
cs
repz
push
test
inc
push
hlt
je
unpcklps
add
sbb
mov
mov
inc
hlt
jl
and
lock
and
int
fidiv
push
inc
(bad)
(bad)
shr
(bad)
add
or
xor
mov
pop
outs
lock
cdq
pop
aaa
xlat
cdq
js
mov
xchg
or
inc
pop
nop
pop
js
pop
sub
inc
jp
sbb
push
clc
sbb
mov
out
dec
dec
add
xchg
iret
mov
jg
push
push
aam
adc
push
mov
imul
sub
mov
add
mov
xor
add
add
stos
add
fcomp
jmp
fdiv
movs
and
rcr
add
add
or
repnz
add
dec
gs
stc
push
add
fs
mov
add
add
popa
add
repnz
popa
inc
(bad)
(bad)
into
pop
sti
sub
popa
add
inc
add
cmp
aam
jns
jne
inc
rol
ins
lahf
es
and
add
push
jo
dec
add
jbe
popa
div
inc
sub
ret
inc
xchg
jmp
or
inc
pop
(bad)
xchg
pop
mov
movs
sub
push
rcr
sbb
(bad)
jp
add
jmp
inc
cmp
cmc
xor
push
add
jns
daa
jle
sub
adc
outs
xor
bound
js
cmp
dec
je
jo
jl
movs
fwait
movs
test
pop
mov
push
rol
or
push
add
xchg
jb
cmp
retf
leave
in
adc
xchg
xchg
sbb
pushf
pop
dec
mov
mov
lods
pop
jo
mov
sbb
xchg
je
rcr
les
xchg
dec
enter
dec
gs
test
cwde
aam
push
cdq
movs
mov
enter
es
xchg
retf
in
call
arpl
fcom
lock
gs
fdiv
loopne
dec
jb
in
cld
call
xchg
push
in
add
dec
aaa
leave
ror
or
or
jl
cdq
movs
xor
cwde
adc
push
es
hlt
cmp
xchg
and
push
sub
xor
xchg
push
or
cmps
cwde
sub
imul
bound
sbb
loop
mov
or
jb
mov
bound
arpl
imul
or
pop
or
pop
add
jecxz
scas
sub
dec
mov
shl
jmp
adc
mov
add
add
add
and
ins
pop
fcom
outs
nop
add
mov
ins
out
test
loope
mov
xor
sub
bound
pop
push
outs
aaa
or
jae
ret
sub
push
test
lahf
aaa
pop
scas
jae
in
mov
mov
popa
ret
xlat
jb
pop
in
or
adc
es
jnp
cmps
dec
cmp
(bad)
lock
xchg
clc
lea
adc
jmp
aas
sti
mov
jae
push
xor
lock
test
mov
test
inc
adc
cmp
aam
jmp
xor
push
sbb
mov
loopne
gs
ins
fmul
pop
test
jns
xchg
out
push
cld
jbe
pop
rol
or
add
cs
push
and
rol
sub
add
pop
mov
pop
adc
xor
fist
lahf
mov
mov
and
aas
mov
(bad)
mov
cs
xchg
and
mov
mov
or
aaa
ret
sbb
std
adc
jmp
or
cwde
xchg
inc
mov
and
in
xchg
adc
mov
out
and
shl
adc
ins
or
adc
and
and
aas
call
and
(bad)
popa
pcmpeqb
mov
cmps
mov
bound
movs
test
push
test
test
dec
push
call
add
mov
fcom
lds
popf
cdq
lea
cld
add
or
rol
es
pcmpgtd
dec
dec
shr
cmp
xchg
jbe
add
nop
je
test
add
add
(bad)
or
sbb
and
mov
fldz
fsub
rol
add
imul
(bad)
out
xchg
call
ror
add
inc
shr
(bad)
sbb
jne
pop
jne
mov
(bad)
mov
test
sub
jge
add
sbb
lea
test
iret
pop
xchg
sbb
push
lods
mov
jns
iret
mov
add
push
sbb
ins
outs
add
jg
pop
and
add
xlat
jne
mov
add
ret
iret
sub
sbb
mov
xlat
mov
popa
xor
dec
daa
add
push
test
dec
mov
out
hlt
hlt
lods
fsubr
sbb
pusha
in
mov
hlt
gs
cs
lahf
mov
jmp
iret
(bad)
mov
mov
add
push
int3
aas
sbb
adc
or
and
inc
inc
inc
mov
leave
arpl
pop
mov
sar
sub
arpl
test
fmul
pop
jmp
lods
or
or
or
repz
cmps
popa
mov
sbb
das
shl
push
fimul
inc
add
rol
and
lock
push
adc
aam
cdq
es
jns
(bad)
in
mov
and
add
or
sbb
sbb
xchg
mov
xchg
mov
das
clc
xchg
push
sbb
jb
or
pop
sub
(bad)
pop
add
add
add
mov
cmp
dec
xchg
clc
push
mov
dec
mov
sbb
sbb
mov
lds
inc
add
dec
lods
leave
push
rcr
and
mov
mov
and
add
mov
pop
mov
push
xchg
xchg
(bad)
imul
jo
int3
mov
mov
add
aaa
inc
idiv
ins
pop
add
lea
mov
push
inc
xchg
sub
xor
in
push
lods
jg
xor
sub
pushf
pushf
push
dec
hlt
add
lock
add
test
dec
sub
pop
push
push
pop
adc
lock
adc
dec
xchg
add
mov
add
jo
das
adc
in
sub
inc
and
aad
inc
popa
and
iret
and
add
inc
add
pop
and
jmp
aas
fist
in
dec
leave
jbe
fnstcw
mov
xchg
pop
cmps
enter
(bad)
push
sub
add
push
cmp
push
cmp
stos
stos
arpl
inc
sub
and
mov
adc
mov
dec
ins
add
push
ss
xor
inc
mov
pop
ror
cmp
sbb
adc
ret
clc
test
in
cdq
scas
or
mov
loopne
and
pop
or
shr
outs
test
pop
sub
das
(bad)
push
pop
sbb
inc
or
bound
lods
ss
or
loopne
popa
ins
mov
lds
sub
test
cmp
inc
(bad)
inc
sub
pop
and
aad
loop
sbb
cld
or
lock
mov
jns
sub
and
add
rol
jg
es
inc
xor
pop
dec
dec
cwde
push
jb
jge
ins
loopne
vmwrite
mov
mov
inc
pop
pop
pop
movs
xor
lock
cs
cmp
icebp
inc
jne
add
add
sub
and
pop
dec
push
and
scas
add
or
arpl
shr
rcl
ror
adc
stos
stos
movs
int3
sub
adc
aaa
dec
sub
push
adc
ret
test
adc
and
inc
push
sub
xchg
xchg
loopne
nop
and
dec
adc
inc
lock
adc
xchg
or
push
and
push
es
xor
adc
adc
jns
fmul
sbb
sub
or
mov
mov
clc
xor
lods
adc
aaa
adc
add
push
push
mov
adc
rcr
push
jae
xchg
es
sahf
mov
inc
adc
iret
lea
clc
(bad)
inc
stos
or
adc
jno
aaa
and
shl
sbb
xor
jmp
push
pop
fidiv
sar
pop
mov
and
add
jge
sbb
mov
mov
push
and
arpl
xor
(bad)
sub
dec
dec
pop
inc
cmps
push
xor
clc
pop
mov
mov
xor
pusha
movs
adc
cmp
clc
xor
scas
inc
xchg
push
mov
or
add
out
sub
cmp
sahf
mov
adc
xlat
lods
sbb
cmp
cli
shl
ret
(bad)
sub
sub
jl
inc
xchg
lea
xchg
xchg
(bad)
in
and
pop
sub
xchg
sub
push
adc
sbb
das
mov
nop
lahf
and
pop
sbb
leave
fisttp
push
(bad)
push
test
inc
cwde
adc
add
pop
xchg
sub
adc
test
inc
es
lds
clc
mov
mov
sub
int
gs
push
lea
and
outs
ss
dec
jg
push
jbe
test
mov
sbb
pop
pop
jmp
inc
inc
cld
adc
data16
add
std
cmp
jne
les
jne
daa
sahf
mov
std
aas
xor
jg
je
inc
xor
push
xor
fdiv
jae
rol
sub
mov
test
aam
push
xor
mov
icebp
dec
sub
jl
inc
mov
cmp
call
jne
adc
repnz
repnz
pop
mov
test
add
adc
dec
push
fs
movs
xchg
and
enter
arpl
pop
push
add
cmps
mov
pop
loopne
lds
xor
outs
push
and
cdq
mov
dec
mov
dec
push
sbb
add
inc
call
pop
outs
adc
imul
jnp
rcl
mov
aad
mov
and
int
popa
loopne
adc
and
loopne
dec
fnsave
mov
or
sub
xor
ins
rol
sbb
mov
jmp
sbb
inc
xchg
fwait
xor
aaa
or
add
ins
pop
cmp
ret
scas
mov
adc
sbb
mov
sub
and
arpl
punpckldq
movs
xchg
inc
out
repnz
jl
lea
xchg
popf
pop
fsub
fcom
add
or
jl
add
and
(bad)
(bad)
cmps
add
call
mov
sbb
or
sub
dec
jle
add
int3
adc
mov
(bad)
jecxz
sub
cdq
sub
hlt
push
cmp
sbb
xlat
xlat
add
or
fisttp
mov
out
mov
add
in
imul
rcr
add
sub
lea
cmc
ret
xor
leave
xor
outs
or
movs
mov
add
push
xchg
mov
and
adc
inc
lea
fcom
jo
sub
or
cmps
adc
mov
push
fwait
mov
pop
aad
dec
arpl
out
push
pop
mov
out
add
inc
and
clc
cmp
jne
fst
outs
ret
xchg
mov
xchg
sub
enter
push
push
fadd
js
out
or
pop
inc
ins
push
cmp
xor
das
cmp
popa
or
jo
xchg
pop
sub
lods
or
nop
mov
retf
imul
sahf
inc
movs
adc
xlat
or
or
mov
mov
out
jmp
lock
cmps
sub
pop
adc
or
add
jne
inc
sub
lahf
jg
stc
xchg
jle
cmp
pop
mov
and
adc
ficomp
popa
mov
arpl
rol
inc
nop
inc
push
int3
shl
xchg
cmp
sbb
ins
jbe
add
pop
test
call
in
cmp
mov
push
sub
cmp
dec
jmp
cmp
pop
inc
inc
push
inc
rcr
ret
dec
pop
mul
xchg
sub
add
popf
xchg
mov
and
inc
mov
adc
xchg
psubusw
and
in
mov
cmp
dec
cmp
cmp
xchg
cmp
(bad)
cmp
cmp
mov
in
(bad)
(bad)
adc
mov
cmp
mul
pop
popf
sbb
popa
add
retf
ins
cmp
lods
mov
dec
nop
mov
mov
xchg
adc
mov
jnp
sbb
dec
inc
mov
das
and
xor
mov
(bad)
mov
xor
push
xchg
pop
in
sahf
xor
cld
cmp
or
push
lock
and
jg
adc
dec
je
nop
iret
sbb
or
xor
adc
sub
xchg
mov
(bad)
xchg
ds
scas
sub
ins
jae
or
jne
jns
ss
ds
xor
or
inc
or
add
pop
add
rol
inc
sub
mov
adc
outs
pop
jecxz
pop
or
shl
call
aas
pop
or
and
or
and
sar
test
or
aad
adc
inc
inc
sbb
(bad)
inc
dec
add
adc
dec
rcl
dec
fs
arpl
nop
or
mov
popa
add
lods
rol
pop
retf
and
push
pop
push
(bad)
add
inc
arpl
loope
mul
jne
push
nop
mov
nop
jnp
call
(bad)
or
and
test
hlt
and
push
push
fwait
push
test
jae
and
cmp
xor
jno
les
or
mov
outs
adc
jnp
pusha
jmp
inc
ret
adc
and
add
fmul
in
add
add
or
adc
mov
movs
adc
xor
inc
sub
push
push
and
inc
push
xchg
mov
pop
jo
je
xlat
mov
and
jb
cwde
adc
jo
scas
retf
sbb
test
xor
idiv
mov
(bad)
cmp
dec
push
jns
mov
in
adc
lea
inc
xor
nop
rcr
fsubr
das
mov
icebp
add
pop
dec
jle
xchg
ret
and
not
clc
sbb
ja
push
mov
sbb
dec
hlt
jns
adc
popa
movs
xor
push
pop
or
mov
mov
ds
js
aas
or
test
imul
inc
push
js
inc
mov
push
push
ins
ror
loopne
ins
mov
sbb
mov
pop
hlt
push
xchg
inc
cmps
and
adc
cmp
enter
je
or
cld
sub
loopne
je
jg
inc
icebp
jne
mov
cld
push
mov
add
push
adc
pop
outs
dec
xor
in
xchg
ja
lock
imul
popa
mov
test
adc
pop
and
xor
inc
push
mov
sub
push
ret
sub
aaa
cmp
scas
pop
inc
pop
inc
into
add
and
mov
and
inc
inc
or
scas
aaa
cmps
mov
add
aad
pop
inc
push
js
inc
push
sbb
in
hlt
pop
push
pop
mov
mov
mov
in
jb
das
jno
nop
inc
jns
jb
nop
inc
nop
inc
nop
and
dec
test
pop
mov
bound
jge
pushf
add
pushf
dec
pushf
dec
es
push
sbb
dec
aad
mov
dec
jae
arpl
outs
daa
cmp
adc
push
popf
dec
daa
inc
pop
and
or
enter
enter
add
ret
scas
and
das
or
aam
add
adc
aam
aam
jb
mov
mov
adc
stos
jecxz
retf
outs
aad
pushf
add
aas
hlt
dec
hlt
dec
es
push
xor
in
rcr
dec
enter
addr16
jo
xor
adc
bound
enter
aas
cmc
dec
adc
repnz
add
dec
adc
and
add
aam
adc
cmp
dec
ja
xchg
pushf
push
dec
push
sbb
fmul
(bad)
lock
scas
dec
fadd
cmp
and
adc
push
cmp
add
push
test
push
dec
inc
push
cmp
nop
inc
push
(bad)
cmp
or
or
pop
or
pusha
push
add
adc
pusha
push
pusha
push
bound
loopne
or
pop
push
leave
or
ins
adc
or
fs
ins
push
in
ret
or
leave
xchg
ds
repnz
jb
pusha
push
repnz
push
jl
jl
cmp
cmp
push
call
jne
and
addr16
jle
xor
and
push
xchg
push
inc
and
inc
xchg
push
xchg
adc
xchg
push
or
inc
ret
jns
add
jns
jb
movs
push
movs
push
sbb
sbb
movs
push
lock
xor
push
in
push
cmp
xchg
push
in
enter
mov
jb
jb
mov
hlt
sub
sbb
or
pop
jae
push
cmp
repnz
push
enter
cmp
enter
je
loop
clc
outs
pop
xor
cmp
aam
or
leave
push
dec
cmp
adc
pop
push
cld
loope
adc
sbb
push
cld
and
mov
rcl
adc
pop
xor
data16
add
jns
in
pop
or
sbb
jns
or
or
mov
mov
in
hlt
pop
imul
jb
mov
jns
jb
sub
pop
cmp
add
xchg
adc
aad
mov
sub
sbb
push
dec
pop
or
or
(bad)
xor
aas
cmp
dec
pop
push
or
push
add
jb
repnz
pop
jae
xchg
js
gs
fild
test
repnz
test
mov
jb
ins
pop
sub
sub
je
rol
pop
jns
jb
mov
sbb
pop
adc
nop
add
inc
adc
mov
lods
pop
mov
dec
pop
cdq
pop
mov
dec
mov
jb
adc
sbb
pop
or
pop
xor
jns
xchg
sbb
or
add
aam
aam
ret
xor
repnz
sbb
sbb
daa
movs
sbb
pusha
add
push
sub
and
hlt
add
and
test
and
fsub
mov
aaa
and
adc
and
arpl
dec
inc
and
clc
bound
(bad)
sub
xchg
jo
ret
xchg
add
in
xor
or
xor
cmp
pop
xor
sub
fs
mov
jg
gs
cmp
adc
pop
gs
dec
enter
xchg
es
adc
fwait
pop
jne
adc
cmp
xchg
mov
sbb
es
push
jo
xor
nop
xor
push
lods
loope
test
xor
cmp
cmp
mov
addr16
dec
xor
lods
nop
(bad)
cmp
movs
pop
cmp
pusha
aaa
add
dec
inc
outs
pushf
dec
dec
int
test
push
mov
lahf
pop
and
mov
add
mov
inc
enter
popf
imul
imul
cmps
inc
dec
enter
or
dec
push
inc
(bad)
xor
dec
retf
daa
scas
xchg
adc
mov
int3
push
nop
adc
int3
push
retf
add
int3
push
inc
xchg
mov
packssdw
mov
outs
inc
sub
add
cmp
imul
sbb
clc
imul
jns
sbb
loopne
ret
loop
or
fisttp
add
enter
sbb
ins
gs
adc
ins
dec
add
dec
enter
or
dec
add
or
and
nop
push
leave
cmp
outs
add
adc
pop
outs
pop
outs
cmp
and
inc
imul
or
inc
outs
push
lock
inc
dec
jns
pushf
add
jg
outs
cwde
outs
es
push
sbb
outs
scas
or
push
das
mov
add
pop
xlat
aam
sbb
aam
aam
pop
xor
xchg
ret
loop
mov
sti
jg
stos
in
cmc
jno
jb
or
add
jb
jb
adc
add
inc
es
dec
cld
jno
ret
mov
jae
jb
in
pop
jae
jae
add
pop
jae
and
in
pop
inc
jae
sbb
out
cmp
(bad)
jge
ja
dec
cmp
and
push
mov
mov
pop
pusha
xchg
inc
leave
test
and
test
in
enter
cmp
cmp
jne
adc
inc
push
fs
imul
ret
sahf
push
jno
je
xchg
pop
add
loope
add
nop
pop
and
ja
enter
ja
push
call
loope
(bad)
push
pop
sbb
js
xchg
and
and
pop
xor
pop
ins
ins
or
call
js
sub
repnz
outs
out
xor
add
push
push
jns
jns
add
add
jns
and
or
jns
lea
or
aaa
inc
jp
jb
in
jp
jp
cdq
add
jp
xor
jb
dec
jp
cmp
and
je
add
cwde
jnp
in
enter
jnp
nop
mov
jnp
add
test
xchg
push
imul
in
jl
jl
jb
in
jl
jl
shld
xchg
jl
movs
and
push
xchg
das
enter
mov
sar
or
add
jge
jge
inc
jb
mov
jge
dec
shl
inc
(bad)
aaa
or
and
sub
xchg
adc
jle
jg
and
jg
sbb
add
nop
add
push
add
push
jb
xor
add
jb
xor
pushf
nop
and
scas
xchg
pop
xchg
inc
and
pusha
sbb
cwde
cwde
fs
test
adc
adc
dec
jge
ja
imul
addr16
cmp
repnz
cmp
xchg
sbb
and
dec
es
cmp
inc
add
sub
mov
cmp
cmp
add
dec
enter
mov
test
daa
inc
pop
and
or
leave
or
xchg
movs
movs
aam
repnz
stc
test
xchg
cmp
sbb
dec
xor
xchg
scas
call
inc
dec
jne
out
xchg
xchg
inc
xchg
imul
xchg
dec
xchg
adc
imul
cs
jo
pop
push
or
or
or
mov
fs
sub
adc
push
jb
aaa
mov
dec
test
test
or
enter
fcomp
nop
mov
je
inc
or
xchg
cmp
dec
aaa
cmps
mov
mov
mov
inc
push
les
adc
cmp
lods
mov
add
sub
(bad)
add
clc
mov
mov
pop
mov
push
mov
lahf
add
xchg
pushf
loopne
and
xchg
or
sub
sub
or
push
in
cmp
lea
or
test
dec
mov
add
dec
or
or
dec
mov
in
enter
mov
inc
jb
movs
adc
xchg
dec
push
inc
(bad)
pop
jns
jb
(bad)
fs
pmulhuw
movs
dec
pop
pop
and
push
jno
out
nop
nop
dec
xchg
nop
nop
dec
push
sbb
cmp
sbb
pop
push
fwait
cmps
xchg
push
and
test
pop
and
movs
xchg
sbb
sbb
loope
in
mov
mov
inc
js
test
enter
call
in
xchg
and
movs
rcl
or
stos
add
loope
add
add
add
cmp
xchg
sub
inc
call
sbb
push
aaa
in
add
xchg
inc
xor
jns
jb
xor
xor
in
cdq
add
inc
inc
and
sbb
push
leave
or
pop
jecxz
sub
dec
xchg
dec
xchg
fs
adc
xor
push
xor
xchg
sub
mov
daa
inc
or
mov
mov
or
je
sbb
adc
or
cmp
sbb
enter
mov
mov
adc
mov
daa
aaa
nop
push
or
int3
cdq
in
enter
int3
cdq
jno
add
push
jb
push
dec
movs
mov
mov
shr
fstp
clc
call
clc
call
loopne
pop
and
pushf
and
inc
and
inc
and
and
xchg
or
adc
inc
or
sub
outs
dec
popf
and
dec
popf
and
nop
pop
pusha
movs
pusha
movs
xchg
mov
cmp
add
cmps
call
sahf
and
inc
enter
sahf
je
nop
shl
xor
les
ret
adc
sbb
test
and
or
jb
mov
cmp
mov
add
cmp
add
test
scas
or
and
mov
nop
adc
cmp
cmp
lock
mov
dec
imul
outs
push
mov
nop
mov
add
jo
pop
adc
push
mov
movs
test
pop
sub
adc
pop
pop
cmp
in
nop
movs
mov
or
push
cmp
pop
dec
push
hlt
and
shl
dec
xchg
pop
and
xor
loope
test
scas
sbb
icebp
cmps
outs
adc
adc
leave
add
clc
or
sub
clc
cmps
push
add
push
jb
test
test
jns
jb
test
test
nop
and
mov
pop
nop
pop
and
in
enter
add
or
and
loop
push
adc
ret
and
popf
stos
outs
add
add
mov
cdq
add
stos
or
daa
in
movs
stos
scas
xchg
adc
push
aad
hlt
stos
and
pop
enter
stos
or
(bad)
and
and
stos
add
jmp
lods
sbb
and
sbb
or
adc
mov
inc
scas
ja
add
push
fs
fs
cmp
cmp
scas
nop
movs
leave
add
nop
movs
dec
scas
and
loop
xchg
mov
scas
cmp
scas
inc
push
inc
push
jl
in
enter
mov
scas
or
in
add
fwait
mov
pop
inc
pop
and
lods
mov
and
mov
jb
add
call
nop
mov
or
fdiv
fdiv
cmp
les
in
mov
or
enter
or
pop
in
in
mov
adc
hlt
mov
shr
leave
add
test
nop
push
inc
mov
mov
add
adc
mov
shl
sbb
xchg
inc
pop
and
xor
mov
mov
inc
dec
add
adc
(bad)
les
mov
push
inc
inc
popf
mov
mov
cmp
and
enter
test
shl
nop
pop
and
mov
in
enter
mov
in
fdiv
and
iret
ins
mov
xlat
pop
js
lock
xchg
pop
or
or
nop
adc
sub
sbb
add
sub
lods
lods
sbb
push
in
jb
dec
mov
jb
push
add
push
xchg
pushf
push
mov
(bad)
mov
fs
in
int3
mov
and
push
cmp
sbb
mov
mov
pop
hlt
mov
nop
inc
hlt
mov
cmp
fdivr
and
inc
mov
add
inc
mov
cmp
sub
ins
mov
adc
add
in
cmp
mov
je
push
jb
loope
xchg
inc
dec
xchg
shl
push
mov
mov
cdq
add
mov
inc
sbb
push
mov
mov
and
and
xchg
adc
(bad)
push
repnz
add
add
jb
ret
add
pushf
nop
and
and
out
jge
push
mul
addr16
push
xlat
xor
sahf
rol
test
mov
or
sti
ror
and
dec
xor
xchg
inc
mov
add
xlat
push
je
dec
push
or
jo
and
inc
dec
push
add
sbb
or
mov
outs
inc
add
add
rol
jae
arpl
inc
and
dec
mov
cwde
pop
sbb
es
rol
cmp
and
repnz
push
jo
and
push
inc
fsubr
sbb
add
cwde
xor
fadd
enter
je
and
cwde
adc
or
enter
dec
jg
sbb
mov
shl
and
test
lods
pop
xor
(bad)
js
mov
dec
bound
xchg
cmps
lds
and
jl
xchg
adc
mov
add
sbb
push
adc
or
and
fisub
je
scas
adc
les
inc
inc
sbb
push
jb
data16
fwait
jae
movs
or
inc
call
lahf
sbb
push
test
sub
add
mov
push
xor
pop
outs
out
mov
popa
adc
mov
jl
lahf
retf
enter
int3
dec
retf
test
or
test
sub
fcom
lahf
retf
pusha
dec
in
push
call
jl
in
nop
push
lock
push
sub
push
clc
mov
lods
jl
push
add
xchg
dec
in
pop
or
or
pop
in
stc
push
adc
push
ds
dec
sbb
and
push
stc
lock
and
bound
sub
push
ds
arpl
xor
xchg
int
push
ins
and
mov
push
ds
lds
cmp
jmp
sbb
ja
inc
js
push
ds
dec
fs
jae
lahf
out
push
stc
dec
jb
les
pop
add
push
test
ins
push
outs
(bad)
sub
jne
sbb
mov
dec
ds
movs
inc
ins
pop
mov
jns
cmps
stos
push
test
mov
lahf
mov
jl
clc
jge
xchg
retf
sub
in
mov
mov
lahf
mov
daa
cwde
pop
sub
and
xor
test
xchg
movs
shl
dec
in
stc
mov
int3
mov
jmp
mov
push
ds
dec
fdivr
dec
in
stc
lods
scas
in
fdiv
ds
mov
push
dec
in
hlt
shl
ins
push
ds
cmps
add
cmps
bnd
or
repnz
lods
adc
je
retf
pop
mov
mov
sbb
lahf
scas
nop
(bad)
and
xchg
retf
test
or
test
add
ds
cmps
repnz
xchg
mov
jmp
push
cmp
mov
cmp
mov
retf
lods
mov
mov
cmps
dec
in
push
adc
sar
mov
xlat
push
je
pop
cwde
mov
add
or
idiv
gs
and
fwait
cmps
push
inc
mov
dec
sbb
dec
push
xchg
adc
add
(bad)
dec
or
push
cmp
add
or
push
adc
push
adc
ret
sar
xor
pop
pop
xchg
sub
inc
or
pop
cmc
mov
push
or
(bad)
jmp
shr
pop
mov
jmp
add
add
push
retf
push
rcr
cmp
out
cmc
cld
push
or
push
push
adc
icebp
dec
mov
add
cmp
sti
sbb
out
dec
sub
mov
jge
nop
jne
adc
inc
or
cmps
mov
arpl
cmp
popa
mov
and
pusha
(bad)
cdq
icebp
mov
mov
popa
mov
pushf
inc
inc
inc
sahf
or
movs
test
inc
inc
inc
inc
mov
mov
inc
rol
int3
lea
or
in
jo
into
pop
test
pop
ins
loope
mov
leave
pop
es
add
call
or
mov
xchg
xchg
or
or
sub
test
dec
loop
cmp
xchg
addr16
nop
or
iret
adc
sbb
add
sub
imul
imul
xor
push
repnz
(bad)
mov
dec
adc
jne
or
or
in
xor
inc
mov
or
cmp
dec
mov
rcr
cwde
push
data16
ins
gs
inc
fcom
add
mov
imul
sbb
mov
adc
pusha
or
sbb
push
daa
rcr
add
leave
inc
xor
fisttp
fprem
jp
push
in
jecxz
jae
cli
mov
push
jp
cmps
(bad)
cmp
into
pop
and
push
push
cmc
outs
mov
and
dec
addr16
or
inc
jo
adc
retf
xchg
push
aas
cs
xchg
dec
sub
addr16
xchg
jo
add
dec
jmp
add
test
adc
sbb
sti
je
dec
and
cli
sbb
pop
fadd
adc
in
push
imul
clc
test
add
call
pop
push
add
adc
sbb
stc
gs
imul
pusha
add
and
call
clc
xor
stos
mov
ffree
push
repnz
sbb
cmp
mov
loopne
add
xlat
leave
sub
ins
pop
sbb
and
cdq
adc
adc
fcmovnbe
adc
mov
mov
mov
popa
cmp
sti
ret
loopne
ss
jne
test
cmp
or
test
jge
popa
je
add
cmp
jae
call
pop
push
shl
mov
sub
call
sahf
pop
sbb
xlat
pop
retf
inc
mov
inc
inc
push
sub
cmps
adc
outs
inc
add
out
leave
rcl
sbb
inc
ins
sbb
dec
in
push
jne
jg
imul
test
test
sbb
sub
nop
popa
inc
(bad)
shr
or
iret
cmp
in
pop
call
rol
jae
add
or
cld
add
in
jns
xor
xchg
sub
or
sbb
retf
scas
dec
sti
rcr
xor
iret
push
add
push
mov
daa
out
or
jne
fdiv
add
imul
je
or
ds
nop
out
add
sbb
adc
mov
or
cwde
pop
loopne
ss
inc
jecxz
repnz
xor
push
pop
mov
pop
sub
pusha
out
or
push
in
and
push
pop
retf
div
les
mov
out
jne
push
in
pop
mov
add
repnz
loopne
retf
shl
test
mov
fcomp
out
cmp
(bad)
shl
mov
aaa
or
hlt
call
sar
add
inc
xor
mov
mov
jbe
inc
mov
xchg
scas
mov
sbb
inc
and
cmps
and
cmp
pushf
jg
hlt
push
js
or
xchg
xchg
scas
dec
sbb
and
xlat
imul
fisubr
ins
dec
adc
out
(bad)
in
xor
or
(bad)
idiv
xor
bound
add
inc
xor
fsubr
inc
add
sar
test
jmp
add
mov
scas
mov
or
mov
je
push
loopne
cwde
movs
or
mov
rol
aaa
sub
int3
push
add
loop
mov
fisubr
nop
(bad)
or
jl
call
xlat
stos
loopne
fstp
gs
fimul
jne
stos
arpl
mov
mov
and
leave
cdq
push
push
adc
arpl
mov
mov
fucomi
jae
in
sub
pushf
jge
adc
aaa
inc
mov
push
mov
add
push
push
push
fld
popf
jle
ja
dec
pop
cmp
aas
test
or
es
in
shl
add
sbb
xchg
das
xchg
jp
push
inc
add
push
add
sub
mov
out
or
add
push
push
mov
sub
jno
adc
test
popa
add
cmp
nop
and
nop
ret
sbb
pusha
mov
bnd
in
inc
dec
scas
aam
sbb
cs
shl
add
(bad)
sbb
mov
jbe
hlt
fucomp
sub
call
xchg
clc
out
adc
loop
push
pop
cld
or
js
or
das
xchg
aam
pop
push
push
imul
pusha
imul
inc
test
add
add
or
jecxz
sub
iret
push
xor
shr
imul
push
popa
mov
mov
cmp
jbe
repnz
and
movs
adc
stc
xchg
jecxz
sub
aam
pop
xchg
push
and
xor
mov
jb
nop
add
mov
out
push
inc
or
pushf
cld
add
or
enter
dec
imul
add
push
mov
pop
mov
mov
or
and
sub
mov
and
fsub
inc
sub
mov
mov
dec
fs
push
imul
xchg
sbb
pop
stos
dec
mov
es
les
(bad)
sub
test
jo
and
push
sbb
je
xchg
push
ds
adc
adc
pop
add
imul
push
jne
push
jae
inc
inc
cwde
(bad)
inc
dec
ins
adc
inc
arpl
pop
jae
sbb
adc
mov
inc
fwait
sbb
aas
add
pop
inc
mov
not
push
ja
jne
pusha
adc
mov
inc
ret
push
cdq
fs
in
mov
jae
or
aaa
gs
or
test
das
xor
mov
cmp
sar
dec
push
gs
out
cmc
jne
jns
pop
in
sti
add
xor
adc
mov
int3
pop
cmps
mov
lock
xchg
jmp
inc
and
inc
mov
mov
mov
out
popa
enter
push
ins
in
addr16
pop
ja
ins
es
jns
int
push
push
fsubr
adc
push
fadd
outs
add
pop
push
xor
inc
lock
adc
sbb
ss
add
(bad)
push
(bad)
sbb
sbb
and
int3
ins
retf
xchg
pop
sbb
add
outs
push
loop
repnz
rcr
fsub
pop
sbb
dec
jecxz
add
push
mov
xchg
and
retf
dec
xor
out
xor
sub
xor
xchg
xchg
pop
scas
cld
xor
and
xor
ret
xor
ss
xor
mov
ds
movs
das
push
jle
add
jmp
add
cmovae
js
jno
push
inc
jl
push
pop
jb
and
add
jns
(bad)
sti
sar
adc
inc
cmp
jmp
rol
bound
cs
or
pop
xchg
test
mov
push
je
aam
inc
mov
xchg
fwait
pop
push
jecxz
or
pop
movs
out
punpcklbw
dec
mov
inc
dec
mov
add
or
add
and
jge
jp
(bad)
or
sahf
and
xor
sub
add
jno
dec
and
push
or
cmp
lds
xchg
daa
clc
xchg
ret
leave
sbb
or
xchg
add
adc
dec
sub
das
inc
add
push
pop
xchg
jae
push
(bad)
ins
or
jmp
push
mov
ins
mov
(bad)
in
inc
mov
or
jns
xchg
into
in
add
add
xor
in
sub
and
gs
push
add
xor
in
sub
fisubr
pop
cmps
test
xchg
add
adc
fnstcw
add
dec
enter
add
jne
out
out
iret
aam
ss
mov
dec
mov
jmp
push
jg
add
push
popf
adc
xchg
sbb
ror
xchg
jno
aaa
cmps
rcr
mov
mov
imul
dec
add
(bad)
dec
adc
loopne
jbe
and
add
or
mov
add
enter
jb
jb
shl
ins
jge
adc
ins
ss
test
add
dec
jo
jmp
shl
mov
push
add
mov
fsubr
or
push
or
rol
push
sbb
mov
cmc
add
pop
stos
cmp
popa
mov
sbb
ins
imul
pop
(bad)
or
add
mov
or
movs
dec
pop
pop
ds
push
pop
push
ror
jl
inc
ins
pop
cmps
and
mov
push
jmp
push
lahf
stos
cmp
or
or
push
js
inc
test
dec
push
inc
pop
sub
cmc
mov
cmovle
pop
push
fcom
or
jg
sbb
jmp
test
stos
and
sbb
adc
cmp
loopne
stos
pop
push
pop
cdq
sub
push
dec
sti
mov
inc
inc
repz
cmp
pusha
dec
(bad)
aaa
sbb
mov
add
pop
pop
mov
dec
adc
adc
out
push
xor
pusha
icebp
shr
aaa
and
mov
(bad)
jg
sbb
push
push
push
std
pop
pop
pushf
cwde
mov
aad
jo
inc
(bad)
int
bound
xor
add
es
pop
and
adc
outs
xchg
jmp
das
test
pop
inc
rol
lods
pop
xor
mov
ja
mov
aam
jmp
jmp
xor
ror
and
inc
push
dec
xchg
(bad)
out
pop
inc
add
in
xor
xchg
ins
inc
mov
in
jle
and
adc
pop
cmp
cmp
test
int3
add
add
pop
cmp
inc
test
jne
aaa
xchg
jae
mov
add
rol
imul
psraw
dec
fimul
adc
sub
sub
lock
dec
call
xor
mov
mov
gs
add
gs
push
add
sbb
xchg
dec
in
shr
in
outs
in
and
add
leave
dec
push
or
xchg
rcl
and
(bad)
cli
in
mov
mov
push
push
mov
and
xchg
int3
loopne
nop
push
sub
or
arpl
movs
xorps
and
aas
and
addr16
aam
pop
not
repnz
adc
add
in
inc
add
loopne
xchg
xchg
sub
add
mov
pop
sbb
adc
je
sbb
dec
xchg
inc
cmp
mov
popa
push
add
sbb
(bad)
push
lods
mov
xchg
and
sbb
mov
xchg
cli
xchg
aam
lock
jp
dec
cmps
and
adc
movs
adc
inc
push
test
or
test
xor
jbe
psubw
stc
shl
dec
inc
pop
and
rol
pop
das
sub
mov
nop
cmp
add
div
and
test
and
pusha
daa
inc
cmp
push
adc
sbb
jl
inc
mov
dec
adc
mov
es
xchg
imul
imul
in
shr
popa
pop
adc
fiadd
pop
das
push
sub
out
lock
jbe
addr16
pop
lea
and
into
xchg
push
push
mov
or
add
push
mov
dec
mov
(bad)
cmp
mov
push
mov
inc
or
leave
or
(bad)
pop
and
lods
jg
pusha
add
sbb
xchg
fdivr
fstp
xor
mov
sub
test
cld
scas
and
dec
into
gs
cmp
push
push
out
or
push
add
lods
push
stos
jl
jecxz
je
adc
and
sbb
(bad)
jnp
dec
fsub
xchg
fisub
sbb
inc
jo
dec
cmp
mov
sub
inc
xchg
sar
or
aaa
push
in
repz
adc
mov
jns
and
test
repz
leave
mov
nop
daa
push
aam
inc
addr16
dec
dec
arpl
mov
push
movs
arpl
sub
sbb
les
movs
fimul
adc
dec
push
pop
and
or
xchg
pop
push
clc
clc
idiv
jb
mov
clc
xchg
mul
test
mov
mov
adc
sub
adc
xchg
and
imul
inc
push
inc
xchg
inc
add
enter
int
sub
fsubr
mov
or
hlt
adc
sub
dec
test
sbb
or
rol
or
sbb
pushf
jge
cs
out
sub
nop
retf
in
cld
popf
or
add
add
test
or
or
cli
xor
mov
inc
lahf
ins
and
jmp
sub
imul
stos
lods
shl
addr16
or
ja
data16
loopne
(bad)
mov
lods
pusha
and
xor
jno
aaa
mov
scas
jo
or
sbb
neg
cmp
jae
gs
in
lods
loopne
dec
inc
inc
push
push
adc
add
test
(bad)
gs
add
or
adc
test
js
ins
sar
add
lods
adc
push
sub
push
clc
das
mov
and
mov
pop
xlat
sub
and
js
data16
mov
mov
adc
push
jo
shr
lahf
mov
in
push
lock
test
popa
xchg
and
add
daa
mov
jb
fbld
add
stc
add
inc
add
push
add
out
jnp
aas
xchg
add
(bad)
lods
scas
cli
aas
mov
jmp
pop
lods
adc
int3
pop
xor
push
mov
sti
adc
push
mov
sub
sub
fisub
je
push
push
fbstp
pop
push
ins
dec
loopne
outs
outs
gs
cmp
and
icebp
push
push
or
dec
sbb
mov
pop
cmps
(bad)
or
xchg
xchg
and
int
imul
add
inc
imul
dec
test
aas
push
popa
loop
mov
xchg
rol
sbb
jmp
ins
mov
mov
or
add
pop
mov
sub
sub
jne
xor
imul
dec
enter
ja
push
xchg
ja
jg
je
pusha
inc
or
push
cmc
hlt
sub
mov
add
pop
xchg
into
push
dec
imul
iret
aam
xchg
xchg
(bad)
(bad)
cwde
or
cld
rol
adc
fwait
int
cmp
mov
sub
push
ss
pop
or
xor
int
xchg
sub
dec
sti
cs
pusha
mov
or
push
out
sub
cmp
push
push
adc
jns
mov
push
add
cs
sub
jns
mov
call
add
(bad)
sub
pusha
neg
shr
push
push
inc
add
je
es
and
cmp
add
std
dec
sbb
xchg
mov
xchg
ret
rcl
push
aas
ud0
cmps
push
pminsw
ss
repnz
add
add
add
scas
xor
mov
add
pop
add
jl
repnz
pop
add
jecxz
add
add
into
xchg
sub
add
add
lock
fiadd
out
rol
inc
out
jb
repnz
push
bound
repnz
jp
comiss
test
add
and
dec
das
push
jle
add
daa
add
sub
sbb
jno
cmp
adc
test
and
add
clc
jno
xchg
or
mov
outs
dec
xchg
imul
and
jl
das
jns
in
xor
pusha
pop
push
or
push
push
gs
cmp
or
add
adc
dec
outs
or
fcom
stos
pop
inc
call
inc
mov
adc
cmp
dec
stos
xchg
and
test
bound
add
pop
xchg
or
pop
inc
data16
lea
cmp
jnp
push
add
popa
inc
pop
jno
pop
stos
lea
and
(bad)
add
xchg
scas
in
adc
or
push
stos
or
push
scas
out
test
sub
and
add
pop
or
push
repnz
pusha
imul
bound
bound
adc
jl
or
mov
sbb
mov
dec
sub
push
ror
mov
jb
dec
cmc
add
add
adc
mov
jns
(bad)
fimul
mov
add
lods
pop
push
add
push
mov
scas
inc
sbb
mov
stos
and
push
leave
add
add
xlat
pop
mov
adc
jp
bound
lds
cmp
or
or
aad
mov
push
ins
pop
ins
adc
pop
add
outs
sub
inc
dec
das
or
xor
loop
test
inc
test
push
and
push
(bad)
mov
sub
inc
jmp
dec
dec
cmp
inc
xor
jno
add
in
add
sbb
or
sbb
sub
or
mov
add
mov
or
into
out
push
xchg
or
(bad)
mov
shl
lock
fwait
jae
ins
shl
mov
jmp
(bad)
fild
enter
pop
jb
enter
add
pushf
inc
dec
inc
mov
and
dec
and
adc
add
addr16
add
cld
rol
cmp
jno
or
push
jecxz
sbb
call
pop
aam
popa
jne
out
ja
leave
pop
mov
add
mov
cmc
or
mov
mov
dec
outs
and
es
jecxz
jmp
scas
and
ror
jbe
sti
es
xchg
invd
iret
and
dec
mov
xchg
sub
pop
xor
xchg
pop
imul
xlat
inc
test
mov
popa
out
and
(bad)
aas
aas
movs
xor
xor
inc
push
xor
cmp
rol
pop
sbb
jb
xchg
adc
or
movs
fld
adc
mov
or
add
in
and
mov
adc
pop
and
(bad)
pop
mov
jb
iret
adc
cmp
pop
ins
xor
jg
pusha
or
jbe
or
ss
adc
xor
push
outs
jns
lahf
xor
or
mov
test
add
adc
mov
or
add
dec
dec
scas
clc
jo
popa
pop
mov
imul
inc
mov
movs
sbb
and
or
and
push
movd
cmp
and
jg
sar
ss
leave
test
in
fwait
call
sbb
sbb
or
or
fsubrp
xor
mov
popa
inc
sub
add
outs
or
stc
sub
ins
cmp
pop
dec
sub
bound
jmp
or
add
push
mov
add
and
mov
adc
ror
or
mov
mov
and
jne
push
mov
add
add
xchg
xchg
sub
rcl
mov
inc
jle
(bad)
pop
pop
nop
jo
jb
add
mov
jo
pop
and
dec
push
mov
dec
imul
sbb
pop
pop
out
call
sub
or
adc
mov
je
xor
push
enter
mov
add
lea
add
or
nop
push
xor
and
not
add
or
imul
mov
sbb
xor
fldcw
xor
test
add
dec
fmul
dec
or
cmps
sbb
pushf
rcl
cmps
enter
and
add
inc
push
aam
int3
loopne
or
add
dec
push
or
lea
cmpxchg
rcl
pop
fwait
mov
pop
sbb
mov
push
xor
push
mov
je
mov
or
pop
ret
imul
lahf
dec
int
movs
fstp
test
mov
out
and
mov
mov
in
xchg
inc
and
xor
or
movs
jmp
jmp
ret
sbb
mov
not
popf
and
sar
push
hlt
dec
push
xchg
jecxz
dec
and
push
(bad)
ins
cmp
add
mov
sbb
add
dec
push
adc
mov
adc
sub
daa
add
or
loope
or
push
loope
push
aaa
mov
sbb
adc
sub
jns
inc
jmp
cmp
sbb
inc
jne
fadd
stc
xchg
pop
call
jge
add
xchg
inc
or
je
(bad)
or
and
xchg
mov
jne
adc
cdq
pop
cmp
xchg
push
cwde
je
hlt
jecxz
push
in
je
mov
push
sub
std
int3
jmp
lods
daa
push
in
xchg
jo
jmp
repnz
xchg
add
pop
(bad)
lea
popa
dec
jbe
inc
ret
out
mov
mov
jecxz
push
sub
xchg
cld
xor
and
jmp
hlt
fbld
xor
xchg
aaa
popa
leave
pop
inc
aam
inc
push
inc
loopne
or
mov
mov
jb
mov
xchg
or
jmp
(bad)
ficom
loopne
mov
lea
jno
add
push
dec
icebp
fwait
and
in
mov
jo
push
xchg
popa
aas
adc
jo
push
dec
and
mov
add
(bad)
nop
outs
adc
and
bound
and
retf
or
add
movs
inc
sbb
cmc
mov
add
add
push
jge
fild
inc
mov
rol
sub
jecxz
adc
push
mov
pop
bound
cmp
push
in
sub
xor
movs
push
dec
cwde
je
lock
sbb
xor
xchg
jp
pop
arpl
sub
dec
add
neg
dec
inc
hlt
(bad)
lahf
add
add
cwde
mov
scas
icebp
jp
cmp
mov
call
add
jb
mov
imul
fwait
xchg
push
jo
bound
push
dec
sbb
mov
hlt
data16
mov
cdq
or
xor
je
jmp
test
loope
xchg
mul
or
mov
gs
cli
pop
mov
sub
rcr
out
fnstenv
add
pop
add
movs
jnp
lea
inc
dec
shl
call
fadd
les
and
aaa
call
dec
enter
loope
pop
rdtsc
sub
bound
ja
call
xor
dec
pop
add
and
or
mov
sub
add
cmps
jecxz
sbb
dec
in
call
dec
cs
pusha
add
retf
clc
outs
jge
inc
xchg
sbb
fst
and
inc
sub
or
in
and
xor
out
lock
out
add
xchg
cmps
and
jmp
and
inc
sbb
call
add
pop
xor
push
hlt
iret
adc
aas
test
add
push
xor
movs
stc
shr
sub
cmp
enter
imul
pop
lahf
(bad)
ins
sub
pushf
mov
ja
cld
push
add
adc
adc
test
loope
div
inc
sub
pop
cld
pop
jmp
dec
sbb
scas
nop
or
xchg
sbb
push
or
pop
out
sahf
push
fsub
sbb
mov
das
adc
inc
push
inc
bound
dec
retf
xchg
cmps
loopne
jmp
add
or
imul
pop
or
push
rcl
inc
jbe
idiv
jo
or
mov
rcr
dec
mov
aaa
mov
jmp
in
sub
xchg
xchg
shr
lahf
les
ret
sub
sbb
clc
shl
sbb
jecxz
adc
sub
push
jmp
test
das
scas
(bad)
jmp
or
add
mov
cmp
jb
xor
push
cmp
(bad)
add
and
stc
mov
fcom
sbb
sar
push
and
dec
iret
sbb
das
xor
lock
sbb
aas
or
lock
mov
or
adc
rcr
or
movlps
lock
nop
inc
mov
cmps
sbb
push
or
call
add
pop
jb
push
bound
std
mov
and
pop
imul
sbb
frstor
lock
add
idiv
push
pop
call
adc
adc
add
adc
aam
sub
sub
cs
and
lock
cwde
pop
or
inc
repnz
neg
hlt
adc
adc
pop
add
cmp
xchg
lods
outs
or
mov
cmps
sub
ret
ror
pop
arpl
pop
adc
dec
movs
jg
ins
ret
rcl
je
js
push
adc
cld
mov
mov
jl
arpl
dec
adc
mov
stc
ret
ffreep
imul
dec
mov
pop
sub
in
and
ret
mov
sub
or
sbb
addr16
and
div
sub
inc
or
inc
jb
fs
xor
aam
pop
(bad)
push
mov
pop
or
or
call
ins
outs
push
mov
and
aaa
pop
xchg
cmp
clc
ins
push
leave
mov
add
and
lds
sbb
(bad)
push
push
mov
mov
mov
and
mov
mov
hlt
aas
hlt
add
mov
mov
cmp
mov
cmp
lods
pop
movs
or
adc
inc
mov
push
hlt
sub
push
mov
and
or
push
mov
aaa
cdq
push
fcom
add
xor
inc
scas
out
jecxz
loopne
or
xor
push
xchg
or
mov
or
jbe
pop
sub
enter
inc
add
and
dec
and
cmps
mov
bound
push
xchg
add
add
xor
fist
call
adc
inc
xor
add
adc
jb
lea
and
out
push
rcl
mov
in
nop
inc
fstp
into
xchg
test
dec
mov
push
adc
ret
sbb
shr
xchg
mov
sbb
inc
and
ins
cmp
mov
sti
imul
jmp
xchg
push
(bad)
mov
or
mov
sbb
movs
movs
loopne
inc
add
xchg
cwde
mov
icebp
fnstcw
push
sbb
stos
mov
dec
enter
push
add
and
add
adc
or
test
push
xor
aas
sbb
push
stos
ins
or
inc
addr16
mov
repz
std
(bad)
bound
daa
in
loopne
(bad)
or
cwde
(bad)
mov
inc
rcr
mov
dec
xchg
cmp
jl
and
xchg
and
les
push
in
jne
cmc
dec
repz
mov
xchg
xchg
mov
dec
in
jno
and
inc
xcrypt-ctr
cmps
sbb
jo
mov
stos
sub
or
out
icebp
mov
imul
jle
add
fsubr
sbb
or
push
mov
mov
je
repnz
jns
push
daa
mov
(bad)
jmp
adc
mov
daa
xchg
dec
and
sbb
je
es
mov
fs
idiv
mov
mov
daa
xor
mov
push
fbld
bnd
in
mov
fsub
(bad)
out
out
mov
hlt
jmp
push
add
pushf
xor
clc
test
mov
xchg
sub
enter
fst
scas
mov
add
cwde
add
sub
mov
and
xlat
adc
push
xor
les
cmp
fnstsw
mov
or
inc
sbb
test
movs
jb
xor
sub
add
dec
in
add
out
imul
mov
movs
and
sbb
out
pop
push
xor
cmps
sar
shl
sti
xor
shl
mov
aas
and
pop
sbb
je
pop
cmp
mov
mov
popf
sub
and
cmp
jne
fadd
pop
es
ss
jne
sar
sub
adc
pop
add
in
aaa
adc
add
mov
pop
stos
inc
dec
sar
les
inc
push
or
dec
int
ins
add
int3
jmp
push
sti
dec
lods
add
and
sbb
inc
sub
dec
loopne
pop
enter
enter
and
sub
push
add
in
adc
adc
mov
sbb
add
adc
in
pop
dec
jno
pop
mov
in
xor
pop
sub
mov
push
and
jbe
nop
push
dec
aam
adc
rcl
sbb
push
add
movs
xchg
ret
sub
adc
mov
and
into
adc
mov
pop
sbb
pop
js
sub
aaa
xor
inc
mov
lods
in
dec
scas
add
mov
add
add
retf
inc
adc
or
je
test
retf
ja
std
dec
shl
jae
test
nop
xchg
inc
bound
xor
push
cmps
movs
movs
add
push
push
test
mov
clc
adc
mov
test
icebp
cmp
bound
inc
or
jmp
loope
or
inc
or
mov
loope
mov
xchg
rcr
(bad)
mov
lock
sub
adc
mov
push
sub
mov
dec
cwde
mov
mov
es
mov
scas
sub
pop
or
push
mov
push
shl
push
inc
mov
inc
dec
adc
add
gs
or
inc
cs
cmp
mov
data16
mov
lods
test
sbb
fist
add
cmp
push
mov
sub
je
adc
push
ss
jmp
pop
aaa
clc
mov
ret
xor
or
sub
adc
call
(bad)
call
mov
or
add
jae
dec
xor
imul
mov
and
call
cmp
and
add
xchg
push
out
xor
in
(bad)
mov
sbb
add
xchg
sub
push
pop
inc
ins
inc
sub
(bad)
rcl
and
xor
movs
dec
call
pop
inc
repz
add
adc
pushf
adc
mov
cmp
aam
adc
or
or
shl
and
test
fs
push
or
stos
add
and
xchg
add
setl
jae
rol
inc
add
les
mov
das
add
gs
pop
jle
adc
mov
xor
daa
aam
lahf
mov
test
mov
sti
jp
sbb
adc
push
or
lds
inc
jo
inc
or
movs
jbe
test
jmp
dec
bts
push
xchg
je
xchg
jmp
shl
push
mov
pop
inc
add
adc
out
sahf
or
jl
or
push
ja
pinsrw
xchg
jle
xor
inc
ins
add
push
out
test
ror
call
xlat
xchg
adc
daa
and
ss
ror
mov
xor
clc
cmps
inc
inc
or
dec
add
xor
leave
inc
gs
or
or
bound
dec
xchg
pop
mov
xchg
jecxz
sub
fcmovnb
out
and
lock
adc
iret
out
in
mov
iret
inc
shl
pop
and
dec
adc
xor
and
adc
mov
jae
xor
mov
out
cmp
xchg
push
jnp
ss
mov
inc
cmovbe
push
sub
ret
push
leave
xor
iret
(bad)
in
dec
sbb
and
xor
iret
outs
jecxz
repnz
pop
or
jmp
mov
das
into
push
sub
popa
mov
dec
xor
ja
outs
or
sub
mov
out
inc
(bad)
enter
adc
mov
fild
inc
cmp
call
mov
dec
imul
jmp
and
dec
xor
sbb
aaa
inc
loopne
add
add
lods
mov
push
and
lea
xor
ficomp
add
sub
pop
jne
or
cdq
pop
ss
aad
jo
mov
sbb
stc
and
inc
add
mov
inc
inc
add
invd
adc
xor
add
pop
in
and
enter
pop
ror
push
jns
mov
push
cmp
fiadd
ficomp
retf
loop
inc
or
adc
sbb
add
cmp
ins
cmp
cld
cmp
cmp
rcr
cmp
pop
xchg
pop
bound
xchg
imul
inc
sbb
jnp
xor
cmp
pop
(bad)
pop
push
retf
add
jg
add
pop
out
pop
rol
add
pop
add
sub
xor
cmp
pop
cmp
in
lahf
data16
add
stos
pop
push
push
and
pushf
adc
cmp
in
sbb
mov
pop
dec
xor
ds
loop
loope
mov
inc
fbld
dec
imul
and
pop
ins
dec
xor
int3
xchg
adc
test
imul
dec
adc
enter
imul
gs
jb
nop
inc
pop
(bad)
lds
push
pop
ins
ds
and
and
cmp
inc
sahf
inc
clc
cmp
sub
jo
bound
shl
cmps
push
test
adc
loope
bound
mov
rcl
add
leave
inc
stc
push
out
in
xchg
add
ds
int
in
sbb
push
enter
ds
das
dec
add
or
iret
mov
or
mov
adc
sbb
push
in
jecxz
aas
inc
sub
or
jne
arpl
fcom
sbb
push
inc
mov
sbb
fadd
stc
sub
cmp
push
push
leave
retf
sub
jno
or
xchg
adc
cmps
test
in
adc
mov
fimul
std
das
(bad)
lock
cmp
mov
mov
dec
nop
push
sbb
popf
jge
inc
and
add
scas
mov
ficomp
mov
test
popa
and
pop
rol
popa
inc
add
(bad)
pop
cmp
stos
cmp
iret
inc
inc
ja
jae
sbb
jbe
aaa
dec
jbe
adc
pop
sub
ss
add
lods
sbb
xor
jns
loope
scas
ss
inc
jb
clc
sbb
inc
push
mov
ss
das
mov
xor
push
push
sahf
xchg
iret
inc
xor
mov
xchg
setno
in
pop
pop
add
xor
fsubr
les
enter
ins
push
add
add
lea
xchg
push
xor
adc
pop
lods
fistp
add
pop
pop
std
stos
or
mov
xchg
dec
xor
aad
out
mov
pop
inc
push
and
pop
repnz
pop
xor
inc
sub
mov
or
mov
sub
mov
cmp
stos
cdq
inc
imul
xor
out
pushf
dec
add
imul
dec
mov
fwait
icebp
dec
outs
scas
icebp
aas
dec
(bad)
(bad)
dec
jno
or
lods
dec
das
jg
scas
retf
sbb
or
mov
add
add
xchg
repz
js
outs
stc
xlat
lea
dec
cli
movsd
and
and
dec
cmp
addr16
repnz
dec
in
adc
bound
push
bound
push
add
popf
std
mov
push
sbb
stos
bndldx
push
push
(bad)
ja
jns
jmp
pop
sbb
ror
es
aas
sbb
daa
stos
sbb
push
push
mov
push
outs
and
aas
and
dec
push
xchg
pminub
ja
pop
lea
ds
add
push
mov
add
add
loopne
push
call
es
pop
xchg
xchg
ss
or
push
push
mov
inc
jo
cdq
xchg
sub
or
jb
sub
enter
pop
inc
push
leave
outs
pushf
sub
pop
inc
pop
leave
mov
pop
jo
inc
dec
leave
mov
jo
pushf
nop
push
jb
pop
jo
cmp
mov
seto
pop
mov
pusha
pushaw
dec
outs
arpl
imul
mov
inc
gs
push
rol
pusha
push
mov
inc
xchg
xchg
js
push
jmp
mov
cmp
pop
and
adc
pop
pop
xchg
pop
adc
and
jo
push
pop
jo
jo
xor
dec
jmp
adc
jg
jns
pop
jae
adc
repz
pop
mov
cld
dec
sub
add
dec
mov
jbe
or
not
js
popf
push
and
jo
sbb
cmp
cmps
nop
pop
jo
mov
adc
jo
nop
pop
and
pop
stos
adc
adc
inc
xchg
popf
add
push
add
(bad)
mov
or
js
cmc
sub
test
mov
loopne
cmovge
mov
test
push
push
enter
nop
pop
bound
imul
(bad)
fimul
pop
jg
in
or
jns
mov
adc
push
fsub
pop
bound
bound
push
lock
and
pop
add
fs
add
add
cmp
sar
xor
mov
pop
(bad)
stc
inc
mov
jo
bound
nop
das
add
pop
bound
dec
(bad)
mov
lods
bound
adc
pop
mov
cmps
mov
ds
mov
fcomp
jo
bound
pop
cmp
xchg
pushf
jo
scas
mov
mov
call
mov
addr16
sbb
inc
dec
pusha
lods
push
and
jnp
sbb
jae
add
mov
and
add
xchg
sub
sbb
jo
nop
cmp
sub
pop
(bad)
in
xchg
cmps
jo
(bad)
clc
pop
bound
in
jo
bound
pop
bound
or
jo
bound
pop
push
add
xchg
(bad)
std
cmp
dec
and
add
push
push
xchg
pop
mov
div
pop
cmps
loope
nop
dec
add
add
adc
cmp
xchg
mov
add
in
jo
js
xchg
call
mov
in
add
and
int3
or
cmps
pop
(bad)
out
and
bound
push
and
mov
add
pop
fbstp
call
data16
sbb
and
mov
or
out
xor
xchg
adc
sbb
add
and
pop
(bad)
popa
aas
pop
(bad)
cmps
inc
fwait
call
xor
je
add
sub
push
inc
rol
nop
cmps
xor
xchg
fadd
lock
mov
stos
inc
inc
movs
shl
fstp
xor
lods
mov
imul
jne
add
aam
mov
(bad)
idiv
mov
int
adc
hlt
inc
xor
and
jp
(bad)
arpl
adc
xor
dec
push
fisubr
cmps
hlt
or
loopne
inc
xor
jecxz
push
add
mov
or
mov
add
retf
and
mov
test
push
loop
xor
out
or
loop
enter
mov
add
imul
mov
aas
mov
push
mov
sti
pop
add
add
xchg
add
sbb
mov
sbb
cwde
and
or
retf
into
cmps
or
push
push
fdivr
jmp
mov
mov
lea
in
jg
or
mov
cmp
bound
inc
idiv
call
push
xor
stos
fdivrp
fist
add
bound
mov
add
nop
push
dec
sub
mov
fwait
popa
dec
clc
sbb
bound
pusha
xor
push
and
and
inc
loopne
mov
mov
lods
push
out
icebp
nop
sbb
inc
adc
adc
es
and
stos
lods
xchg
pop
and
in
xchg
jbe
xor
inc
call
pop
add
xor
jnp
pop
and
(bad)
addr16
xchg
and
hlt
xlat
jp
xchg
cdq
push
and
inc
cmp
xchg
outs
popa
clc
mov
popa
sub
in
aas
test
add
add
xchg
stos
dec
aaa
enter
fs
and
sbb
stc
inc
push
mov
into
jmp
fcomp
in
and
arpl
das
leave
stos
pusha
rol
inc
arpl
adc
inc
mov
pusha
inc
mov
cs
ja
arpl
sbb
loopne
dec
add
adc
fs
int
test
clc
shl
add
in
mov
jge
or
pusha
bound
sbb
retf
jne
call
adc
push
xor
and
pop
loopne
adc
(bad)
push
sub
add
fs
clc
dec
xor
mov
pop
scas
push
cmp
inc
mov
cmps
bound
push
jmp
sbb
mov
and
inc
mov
es
mov
push
dec
cmp
int
aas
mov
sbb
jmp
leave
or
dec
jbe
out
dec
mov
loopne
adc
adc
mov
xor
push
sub
aas
xor
mov
and
adc
or
pop
rcl
fcmovu
cwde
in
inc
or
mov
push
jmp
push
data16
sti
int
cmp
dec
mov
lods
movs
out
adc
cmp
je
add
fild
pop
shl
or
addr16
push
pushf
mov
mov
frstor
sub
sbb
pop
pop
cmp
mov
dec
push
hlt
pop
inc
and
xor
adc
inc
add
adc
sbb
adc
ss
adc
out
test
je
hlt
pop
lods
jae
stos
ins
pusha
lock
sar
cmps
pushf
sbb
sub
cmp
or
inc
cmp
adc
mov
bound
inc
iret
dec
enter
sub
mov
xchg
ret
mov
sti
cmp
ss
lea
mov
mov
and
daa
pop
ror
lock
and
xchg
adc
and
mov
rol
in
inc
mov
ins
push
leave
clc
add
sub
mov
mov
iret
rol
into
imul
ins
inc
loopne
repnz
movhps
jns
adc
pop
out
sahf
out
adc
retf
add
and
iret
repz
dec
pop
ins
jle
cmp
pause
mov
imul
ins
adc
stos
sar
xor
cmc
cld
mov
js
pop
and
inc
cmp
jecxz
fcomp
xchg
inc
jnp
out
fs
loopne
cmp
repnz
xchg
dec
call
sbb
leave
mov
in
or
cmp
shr
mov
fsubr
leave
push
inc
jb
pop
in
je
call
hlt
loop
js
xor
out
jmp
sbb
out
sub
in
and
and
xchg
je
cmp
sbb
push
out
xor
mov
fnsave
repz
jne
rep
dec
or
into
push
fadd
or
and
ret
xchg
push
dec
scas
ins
jns
out
mov
lahf
cwde
add
mov
or
dec
push
fst
outs
and
or
xchg
cs
mov
add
lock
xor
xchg
and
add
inc
mov
lock
ins
bound
(bad)
loop
xlat
inc
loopne
or
out
jle
sbb
xor
xor
jnp
xor
cmp
lods
rol
rcr
fcomip
mov
nop
lock
jmp
in
pop
push
scas
arpl
es
cmc
mov
dec
jmp
add
xchg
call
cdq
mov
das
icebp
jno
jle
inc
sahf
sbb
test
hlt
ins
in
add
outs
not
adc
or
inc
xchg
inc
xchg
jle
stos
fadd
call
cmps
mov
cmp
push
adc
adc
pop
fcom
les
and
xor
push
mov
mov
outs
bound
inc
xchg
scas
mov
push
inc
dec
clc
push
fadd
or
movhps
pop
inc
int
push
pop
cmp
push
sub
data16
and
(bad)
jecxz
sbb
test
push
sbb
adc
add
pusha
pusha
mov
icebp
jo
adc
mov
or
mov
inc
adc
sub
and
add
inc
jmp
mov
lods
and
inc
add
aad
(bad)
mov
cmps
and
outs
pushf
jo
leave
add
xor
mov
mov
push
ja
mov
or
mov
or
stos
jbe
or
shl
jnp
mov
mov
rol
or
mov
jb
or
mov
mov
jbe
test
bound
inc
jl
or
rol
add
ret
leave
adc
and
sub
aad
pop
dec
jb
jbe
pop
lahf
jno
add
je
outs
mov
push
xor
mov
pushf
repnz
es
cmp
aaa
adc
add
inc
mov
fisub
shl
push
add
push
cld
add
add
mov
jns
ins
rcl
pop
repnz
rol
aam
push
or
cmp
push
sbb
sub
pusha
sub
adc
mov
sub
daa
adc
or
cmps
jno
mov
cmp
pop
stc
cwde
pushaw
je
test
ja
loopne
cmp
xchg
pop
repnz
in
xor
imul
add
push
ins
jne
movs
mov
xchg
shl
popa
inc
mov
sbb
cmp
pop
dec
jae
xchg
cmps
xchg
or
add
or
jecxz
add
jns
test
popf
or
retf
pop
xor
pop
cs
jne
push
jne
jmp
inc
daa
popa
stos
pop
mov
daa
pop
jge
push
dec
mov
xchg
sub
call
xchg
lods
jmp
xor
movs
ret
cmps
mov
inc
fild
push
jbe
inc
xchg
inc
push
and
gs
mov
mov
inc
push
hlt
cmp
push
add
int
pop
dec
rol
inc
call
jmp
add
cmp
ja
dec
adc
lock
repnz
pop
fwait
pop
jbe
xor
movs
(bad)
mov
fiadd
(bad)
bound
test
fldcw
inc
dec
fimul
sub
(bad)
inc
cmp
in
sar
pop
or
or
(bad)
xor
retf
push
add
dec
xchg
or
dec
pop
and
inc
ror
xor
mov
icebp
jo
jle
add
in
data16
pusha
adc
mov
je
push
adc
or
xchg
add
ds
ret
jns
mov
or
(bad)
cmp
mov
adc
and
int
imul
or
and
push
pop
sub
push
cmp
add
nop
add
mov
add
mov
pop
aaa
ins
out
sub
pusha
xchg
dec
sar
jl
and
fidiv
das
push
fs
or
xor
push
imul
nop
push
xchg
iret
push
call
mov
mov
and
mov
dec
shr
movs
or
fcom
add
in
jmp
inc
ins
jb
mov
loop
mov
mov
adc
xor
ret
inc
sbb
leave
inc
lock
add
jb
mov
push
sahf
push
ss
and
test
addr16
jp
jp
add
jb
jp
jp
dec
and
sub
sub
pop
sub
push
mov
cld
xor
sbb
in
or
jnp
and
or
dec
outs
xor
xchg
out
push
rol
pop
dec
cld
cmps
daa
and
in
jnp
jl
loop
enter
rol
inc
je
or
adc
and
stos
test
dec
bound
movs
jl
int3
mov
pop
or
mov
pop
fldcw
(bad)
hlt
inc
xlat
push
lds
mov
sub
mov
pop
jge
cmp
and
jge
outs
jae
adc
xlat
pop
sub
nop
inc
or
cmp
sbb
add
out
dec
gs
xchg
ds
inc
push
xor
jne
cmp
and
int3
jl
jb
cld
fcomp
mov
bound
pop
xchg
sbb
in
mov
icebp
out
cmp
scas
xor
(bad)
xchg
jg
mov
les
jg
jg
jp
and
dec
jno
add
scas
jb
adc
pop
cmp
inc
mov
add
in
or
add
(bad)
fcmove
jmp
dec
push
outs
rcl
pop
sub
and
mov
xor
nop
addr16
fwait
lods
mov
pop
sub
and
jmp
pop
mov
sar
cs
rol
iret
xor
push
call
add
add
xchg
xchg
sub
scas
add
adc
les
mov
mov
inc
cmp
add
inc
or
jne
mov
mov
add
test
xchg
pop
shl
sbb
cld
dec
xor
add
sbb
pop
xor
push
jnp
test
sbb
xor
mov
adc
jecxz
ror
mov
out
pop
inc
(bad)
mov
js
pop
pop
push
test
test
add
pop
test
adc
enter
sub
xchg
xchg
test
and
add
ds
mov
push
jo
sub
and
pop
in
in
sbb
hlt
cli
or
cmp
sbb
dec
pusha
or
shr
xchg
xchg
ja
out
hlt
cs
xchg
mov
or
sbb
xor
out
xchg
inc
js
xor
xor
and
xchg
mov
adc
mov
shl
fild
xor
xor
outs
mov
movs
mov
pop
dec
cmovle
rcpps
fldenv
or
in
pop
inc
dec
paddusw
xor
pop
adc
adc
mov
pop
adc
xchg
out
sbb
in
and
int3
xchg
fadd
cmp
in
adc
xlat
pop
sub
sbb
mov
mov
dec
xchg
or
pop
mov
out
pop
inc
dec
jb
js
cdq
push
mov
sbb
pop
mov
sbb
push
mov
aad
pop
push
lds
rol
aaa
in
mov
and
lea
and
mov
adc
je
push
push
shl
dec
fs
and
enter
add
or
and
add
pop
push
shr
mov
adc
in
and
loopne
mov
add
jmp
mov
pop
push
mov
inc
shl
(bad)
mov
cmps
mov
in
cmpps
aam
jo
mov
loopne
push
out
pop
inc
and
adc
nop
mov
add
inc
pusha
lds
inc
adc
push
ror
xchg
out
rcr
pop
pop
divps
pop
stos
xchg
out
adc
inc
dec
xchg
xchg
pop
sbb
xchg
and
add
sbb
push
jo
sub
in
add
jmp
pop
cmp
mov
dec
dec
mov
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
xor
xor
dec
dec
xor
dec
aaa
cmp
cmp
dec
dec
cmp
dec
aas
and
and
dec
dec
and
dec
daa
sub
sub
dec
dec
sub
jge
xchg
addr16
xchg
xor
test
popa
push
cli
xor
outs
imul
or
in
fndisi(8087
out
cmp
or
cmp
out
jg
xchg
je
enter
push
mov
outs
sbb
jo
mov
pop
cmp
inc
jnp
outs
or
or
fisttp
es
test
or
xchg
mov
lods
inc
mov
jno
sbb
js
mov
ficom
push
sub
pop
movs
mov
jns
bound
mov
rol
xor
inc
or
or
push
dec
adc
out
stc
mov
xor
ja
push
adc
arpl
pop
ret
sub
xchg
ss
and
cmps
jge
jne
xchg
stc
or
xchg
xchg
xchg
xor
neg
mov
xchg
xchg
xchg
mov
nop
leave
enter
(bad)
adc
fs
xchg
rcl
popf
jns
jb
pusha
test
cmp
sbb
dec
inc
sahf
pushf
scas
sbb
dec
dec
cmc
mov
adc
sbb
movs
mov
lods
and
nop
pop
sub
aas
add
xor
mov
add
dec
mov
dec
test
in
jl
jge
push
inc
cmp
push
pop
add
jns
(bad)
add
or
test
fcomp
adc
repnz
or
js
adc
or
xchg
pop
inc
and
sbb
imul
bound
pop
movs
push
pop
push
add
dec
sbb
cmp
or
std
or
and
leave
push
pop
mov
adc
add
cmps
mov
ret
aam
leave
xor
adc
imul
pop
xchg
or
(bad)
adc
retf
add
cmc
sbb
lahf
retf
aam
imul
push
pop
ins
pusha
ins
or
xchg
or
ret
ins
or
push
adc
retf
and
add
mov
or
sar
into
mov
inc
pop
dec
dec
movs
inc
jnp
add
adc
lds
cmc
xor
inc
mov
je
idiv
sub
or
inc
rol
lods
xor
bnd
scas
and
adc
(bad)
movs
lea
(bad)
push
ss
xor
dec
test
mul
push
cmp
jmp
or
popf
dec
mov
bound
xchg
mov
shl
or
jmp
push
dec
add
mov
bound
cmp
inc
add
shr
pop
sub
test
xchg
dec
scas
mov
pop
ins
add
test
or
or
sbb
loop
pusha
push
add
out
and
popa
add
ret
sbb
sub
cmp
inc
bound
scas
or
jae
dec
mov
add
push
ins
add
pop
adc
fisttp
add
loope
mov
or
or
push
shl
dec
lea
call
mov
push
jb
mov
inc
leave
add
int3
int3
mov
xchg
adc
adc
sbb
inc
sbb
arpl
or
sbb
sbb
add
or
ret
mov
add
or
push
ror
jns
shl
sub
or
dec
arpl
inc
and
aam
mov
adc
repnz
add
push
mov
xor
dec
and
fnstcw
or
inc
mov
jmp
xchg
bound
add
adc
mov
inc
js
pop
and
jge
add
and
mov
adc
mov
fild
or
jg
call
mov
cld
and
and
pushf
fbld
or
push
sub
push
rcl
loope
jl
and
aam
fcom
add
xlat
add
add
sub
icebp
mov
dec
sahf
loop
aaa
and
xor
daa
and
lods
cwde
inc
push
aad
add
mov
pop
cmp
mov
mov
mov
lahf
sbb
sub
ins
inc
mov
adc
adc
adc
orps
cmps
xchg
retf
inc
je
into
test
sbb
pop
frstor
scas
sti
cld
add
xchg
call
in
bound
dec
aaa
cmps
add
pop
ss
and
mov
pop
jge
mov
jle
nop
jne
ss
lods
mov
retf
movs
adc
mov
into
xchg
retf
add
test
push
xchg
dec
dec
fs
add
popa
cmps
mov
leave
cmps
bound
mul
dec
adc
and
retf
sub
or
adc
daa
xchg
sub
or
and
fdiv
iret
jmp
xor
pop
inc
lods
retf
cmp
mov
jp
aas
cmps
pop
push
cmp
ror
cmp
pop
cwde
shr
adc
adc
mov
fadd
and
cmovg
adc
cmps
test
out
dec
clc
gs
jo
sti
cld
sub
lods
mov
test
cmps
clc
add
or
lahf
dec
pop
push
cmp
popa
enter
pop
mov
aaa
mov
in
adc
mov
dec
dec
dec
pop
and
or
adc
rol
dec
pop
sbb
cmp
aam
lock
retf
add
or
and
pop
and
jmp
or
and
pop
inc
sbb
xchg
shl
rsqrtps
sub
and
inc
and
out
pop
mov
sub
add
int
shl
sbb
fiadd
mov
xchg
add
cmp
or
mov
mov
or
mov
and
adc
and
(bad)
jno
aas
add
adc
push
and
adc
ss
(bad)
sub
ror
inc
push
inc
mov
jo
loop
ret
xchg
enter
sub
js
arpl
not
adc
add
pop
jne
shr
outs
mov
mov
je
or
dec
mov
adc
(bad)
sbb
call
jl
or
mov
fnstenv
out
lea
or
mov
ins
push
xor
cmp
call
loopne
or
sub
test
fsub
xchg
lahf
inc
(bad)
cmp
jo
xor
adc
jge
push
sub
jl
inc
imul
lahf
adc
(bad)
daa
xor
xchg
push
and
aam
sub
pop
mov
inc
lock
mov
dec
clc
cmp
je
push
add
into
xchg
jne
or
mov
push
inc
and
out
stos
fdiv
aaa
pusha
repz
xor
push
sub
dec
push
retf
jle
cmp
pusha
add
clc
fld
cmp
or
add
std
dec
pop
dec
sub
jl
inc
mov
jo
add
inc
push
aas
shr
push
xchg
jmp
and
test
mov
pop
pop
cmps
jecxz
sbb
cld
add
xor
clc
cld
pop
or
mov
dec
sar
push
sbb
cmps
test
pop
mov
or
and
push
arpl
pop
xchg
adc
sbb
cmps
outs
and
pop
shl
push
inc
dec
and
push
adc
subps
mov
dec
jne
dec
sub
loopne
out
jo
dec
xor
push
inc
cs
movs
test
sbb
pop
adc
aam
xor
adc
jns
imul
iret
scas
cs
adc
fdivp
mov
imul
fdiv
mov
sar
cmp
adc
(bad)
xchg
mov
rcl
inc
gs
inc
inc
dec
jo
push
xor
and
xchg
push
enter
dec
loope
push
daa
mov
sar
or
xchg
xchg
or
inc
and
loope
add
mov
add
and
retf
pop
mov
push
pop
xor
adc
outs
mov
sbb
xor
ret
cdq
(bad)
mov
sub
add
fidivr
lds
adc
sbb
push
add
mov
mov
mov
sub
or
xchg
out
push
push
lahf
mul
cld
leave
jge
mov
and
cmps
sub
push
push
movs
icebp
adc
mov
adc
push
pxor
ins
push
ja
adc
scas
clc
scas
adc
cmp
ja
add
xchg
add
mov
in
dec
jl
add
mov
sub
add
and
jo
ins
dec
dec
xchg
pmaxub
(bad)
push
repnz
xchg
inc
popf
adc
xchg
mov
or
dec
dec
cmp
adc
pop
xor
out
shr
(bad)
icebp
hlt
or
push
inc
or
out
sbb
mov
sbb
add
cmp
dec
push
lea
or
or
cwde
cmp
stc
push
xchg
adc
cmp
retf
mov
and
imul
jb
sub
or
ins
and
or
and
mov
sub
jle
stos
bound
fcom
mov
jae
push
pop
push
add
add
sub
or
mov
popa
sbb
add
inc
pop
jo
push
add
sbb
xor
add
xchg
cmp
xchg
xchg
mov
outs
lods
nop
add
push
aad
out
adc
inc
mov
mov
mov
inc
or
sbb
inc
imul
inc
out
cmp
inc
pop
jle
or
stos
jl
or
push
add
(bad)
xor
les
or
push
inc
pop
cmp
pop
(bad)
aam
xchg
jo
movs
(bad)
mov
and
add
dec
pusha
sub
mov
jecxz
nop
imul
jbe
cwde
daa
jae
dec
mov
cli
push
fcomp
mov
mov
or
xchg
fsubrp
push
je
or
dec
pop
int3
mov
sbb
pop
mov
test
loope
mov
enter
sbb
jmp
sub
dec
dec
clc
(bad)
in
sub
dec
mov
mov
js
adc
or
mov
fsub
dec
sub
sub
leave
and
arpl
in
mov
mov
data16
rol
sahf
cmove
jo
mov
mov
mov
sbb
and
jb
les
add
mov
movs
add
aas
inc
mov
loopne
imul
add
pop
loopne
mov
add
pusha
and
mov
adc
mov
inc
sub
push
or
ja
sub
mov
mov
push
push
add
cmc
sbb
mov
sbb
mov
xor
jb
push
ja
popa
adc
push
pop
mov
mov
or
dec
imul
inc
push
mov
add
jg
sbb
jb
cmp
xor
or
inc
iret
mov
inc
xor
dec
xchg
push
mov
pop
sub
xor
cwde
bound
pusha
dec
pop
xchg
xchg
dec
xor
adc
mov
pop
popa
cmps
nop
ja
or
mov
push
mov
fisubr
mov
repz
lock
sbb
mov
mov
enter
mov
mov
inc
or
je
sbb
shr
fsub
cmp
mov
les
imul
sbb
jp
xlat
icebp
inc
sub
mov
loop
mov
das
xor
rcl
bound
lods
mov
inc
das
add
inc
sub
mov
inc
imul
inc
inc
inc
adc
enter
jmp
shl
xor
push
mov
ins
jns
icebp
add
mov
sub
xchg
mov
push
loopne
or
mov
mov
outs
jmp
gs
nop
push
mov
add
inc
mov
dec
cmp
jl
xor
or
cmps
or
xchg
(bad)
or
sbb
sub
xor
sub
test
push
push
jae
cmp
add
popa
stc
dec
or
pop
test
lock
fidiv
sub
pop
enter
inc
inc
inc
mov
mov
xchg
mov
or
bound
dec
mov
dec
dec
add
mov
add
sbb
enter
(bad)
in
ss
sbb
pop
in
fadd
movs
ins
mov
add
arpl
pop
inc
or
sar
scas
xor
pop
inc
je
add
fsub
mov
sub
mov
(bad)
xchg
add
jg
mov
stos
mov
sub
sbb
div
cmp
in
xor
pop
cld
mov
xchg
mov
inc
add
inc
inc
pop
in
add
cvtps2pi
mov
adc
adc
push
retf
mov
imul
mov
add
sub
leave
or
js
imul
call
inc
aaa
aam
dec
fucomi
pop
daa
iret
adc
inc
inc
push
xor
rol
mov
iret
pop
lods
xchg
pusha
and
sub
pushf
pop
lock
retf
bound
and
and
data16
jae
hlt
or
test
pusha
inc
jo
popf
sahf
mov
in
xchg
adc
rcl
add
aaa
outs
pop
pop
movs
dec
outs
pop
test
dec
pop
popf
mov
sub
dec
ja
test
in
and
inc
pusha
ret
push
and
or
cld
sub
jle
aaa
in
(bad)
bound
in
jb
cmp
push
sub
pop
test
adc
test
arpl
and
in
rol
inc
aam
test
scas
jge
fist
hlt
cld
jle
jecxz
pusha
adc
fdiv
test
mov
ds
push
push
fadd
sbb
inc
mov
fwait
int
std
aam
mov
call
hlt
push
lock
pop
xor
push
inc
inc
jecxz
test
dec
sbb
pop
test
mov
cmp
and
sub
sbb
addr16
adc
dec
test
xchg
rcr
leave
xor
(bad)
and
mov
or
das
movs
das
jo
js
ret
test
push
fimul
mov
lods
jecxz
sbb
frstor
lahf
xchg
loopne
jbe
loopne
add
outs
mov
test
xor
mov
mov
xchg
retf
ror
push
pushf
inc
les
(bad)
xchg
jo
and
lds
sti
fs
int
jne
enter
int3
gs
ret
dec
lock
xchg
xor
sar
gs
aaa
xor
nop
ja
cs
popf
add
adc
mov
or
pop
mov
stc
mov
and
cmc
dec
enter
mov
cmp
enter
push
scas
sub
bound
bound
jb
repnz
gs
dec
cwde
enter
or
das
sbb
gs
and
fistp
movaps
jno
add
jle
sti
sub
inc
int
sub
nop
sub
test
sub
inc
sahf
pushf
int3
emms
mov
dec
dec
dec
xchg
fisub
shl
retf
in
inc
cmp
icebp
add
pand
xor
sar
outs
pmulhuw
enter
rol
inc
aam
into
pop
ja
aam
xor
rcl
jb
enter
pop
(bad)
mov
cmp
pushf
int3
mov
fmul
jns
dec
inc
sahf
pushf
std
cmp
je
daa
and
jmp
fisub
test
pop
fucomi
in
in
daa
(bad)
fild
sysenter
call
xor
mov
repnz
leave
fstp
pop
cmp
xchg
lds
add
fsubrp
in
ss
outs
(bad)
cmp
sub
or
add
push
xchg
sbb
pop
aad
push
or
ret
xchg
mov
jo
or
push
test
add
push
sbb
bound
sbb
inc
push
or
and
push
in
sub
and
ret
fistp
sub
cs
or
arpl
add
and
inc
(bad)
inc
add
das
mov
dec
jne
inc
or
rcr
in
add
aas
xor
je
push
pop
in
xchg
push
push
stc
add
in
sbb
xchg
adc
lods
xchg
dec
loopne
sbb
out
mov
mov
push
jb
movs
arpl
add
loopne
pop
or
popa
jne
or
ss
test
and
movs
sbb
adc
sbb
fisub
pop
adc
ins
(bad)
or
stos
addr16
adc
outs
and
adc
pop
repnz
adc
sub
mov
jno
xor
gs
and
or
retf
xchg
xor
and
inc
inc
(bad)
movs
ja
inc
test
adc
mov
call
push
arpl
jo
push
mov
jne
mov
popa
mov
add
xchg
ret
ror
les
push
ins
dec
or
mov
lods
jae
dec
inc
in
pop
dec
cmp
inc
popf
and
icebp
les
pop
mov
bound
inc
adc
sub
pop
(bad)
adc
adc
mov
lds
retf
xor
xor
jno
or
fcmovb
push
imul
dec
int
add
in
movs
xor
xchg
or
inc
sbb
ror
in
int3
add
inc
leave
cwde
jmp
sbb
in
jmp
leave
les
rcl
xor
xchg
jno
ss
lea
push
aaa
add
sbb
popf
xchg
push
cmp
add
cmp
jbe
lods
mov
pop
icebp
mov
dec
cmc
sar
jb
jecxz
rcl
stos
rcl
imul
xchg
pop
push
cmp
sbb
dec
mov
add
loope
add
mov
setp
or
xchg
ss
xor
push
mov
add
hlt
push
adc
push
or
and
(bad)
ror
inc
cmc
add
or
pop
mov
inc
xor
add
pop
in
and
mov
cdq
adc
add
pop
pushf
ret
add
push
stc
repz
dec
sub
and
add
(bad)
lods
cmc
adc
sbb
leave
add
and
push
movs
ror
test
jo
test
enter
and
add
dec
and
popa
test
adc
xchg
imul
rol
or
repz
int
pop
lods
jmp
lock
sub
lods
(bad)
inc
xor
pop
and
sub
imul
cld
not
add
push
lds
loop
ds
ins
nop
retf
mov
adc
cdq
cmc
imul
sar
shl
add
or
or
inc
popa
imul
and
or
jno
loopne
pop
int
loop
mov
or
mov
add
(bad)
sub
inc
pusha
out
bound
add
add
mov
inc
rol
cmp
retf
test
or
pop
xor
ret
cmp
sub
mov
pop
lea
xchg
or
mov
push
in
pop
icebp
sub
pushf
in
sbb
in
mul
scas
in
call
daa
jmp
mov
ja
mov
add
pop
movs
imul
cmp
retf
hlt
stos
mov
or
add
icebp
xor
inc
fidivr
in
iret
xchg
or
mov
sub
jnp
sbb
repnz
nop
mov
add
sti
and
in
iret
push
hlt
in
ja
pop
xor
(bad)
stos
inc
retf
packssdw
in
(bad)
std
fiadd
pop
test
fadd
je
fdivr
add
jnp
xor
xchg
push
push
out
movs
add
fwait
mov
adc
add
dec
dec
mov
leave
pop
and
mov
push
movs
pop
mov
or
xchg
inc
mov
mul
jmp
popf
sub
int3
out
cmp
inc
aam
nop
push
mov
jns
loop
add
adc
sub
frstor
and
dec
daa
push
js
imul
arpl
inc
sub
imul
dec
inc
cwde
lds
sbb
add
or
sub
pop
push
inc
pusha
add
xor
xchg
add
or
or
push
cmovp
nop
(bad)
jmp
jmp
addr16
or
fnstsw
push
push
es
mov
sbb
test
(bad)
inc
movaps
dec
xor
jnp
shl
or
cmp
add
push
mov
inc
or
push
and
cwde
jns
rcl
cmp
adc
out
xchg
xchg
xchg
pop
xor
retf
xchg
xchg
aam
sbb
inc
xchg
xchg
xchg
xchg
jae
shl
xchg
xchg
xchg
retf
inc
fild
ror
xchg
xchg
xlat
call
loopne
loopne
push
sbb
add
mov
cs
sbb
mov
push
je
push
or
test
add
ds
or
adc
xor
push
popf
dec
mul
sbb
ret
xchg
enter
pusha
and
shl
pop
enter
ret
mov
in
inc
pop
or
shl
pop
enter
inc
pop
les
sbb
add
pushf
or
js
or
leave
inc
fild
inc
repnz
(bad)
or
and
es
scas
dec
adc
jecxz
and
ret
sbb
gs
mov
add
and
sub
jne
pop
cs
inc
add
push
mov
pushf
loopne
rcl
add
add
mov
sbb
cdq
sbb
sub
inc
mov
shrd
push
lods
dec
addr16
dec
leave
xchg
or
lods
pop
xor
ins
test
fdiv
adc
in
cmp
ss
ret
and
lea
or
mov
in
push
push
mov
sbb
je
rcl
pop
and
mov
mov
xchg
sub
or
ins
or
test
push
aaa
and
xchg
xchg
mov
hlt
pusha
(bad)
aad
mov
sbb
ins
xchg
inc
in
fsubr
lods
in
add
test
je
mov
test
inc
shr
sub
inc
pushf
test
cmp
sbb
div
xor
or
nop
and
xor
aas
cmc
jb
pop
adc
rcr
sbb
push
and
bound
arpl
and
jmp
leave
out
add
pop
shl
add
ret
fmul
jmp
sahf
je
xor
hlt
sbb
sub
(bad)
jle
daa
imul
dec
xor
and
jb
out
or
xchg
add
out
imul
adc
movs
inc
(bad)
pop
xchg
in
movs
rcl
pushf
mov
div
mov
add
out
movs
mov
mov
mov
add
xor
or
loopne
cdq
sbb
hlt
sub
mov
sbb
sbb
inc
mov
pop
loopne
pushf
cld
(bad)
jo
bound
call
jns
pop
adc
dec
sbb
add
inc
and
xor
xchg
daa
clc
mov
mov
xor
push
adc
dec
xchg
pushf
push
xor
sub
and
jmp
jmp
inc
dec
push
and
adc
test
les
pop
jno
add
(bad)
or
dec
retf
cmp
movs
(bad)
sbb
leave
hlt
xchg
jl
mov
sbb
or
or
cld
adc
mov
cdq
add
mov
xor
js
aad
in
jmp
cmp
and
add
xor
fist
or
std
(bad)
mov
and
nop
add
push
add
and
xchg
xchg
push
push
inc
pop
and
xor
sbb
enter
lea
cmps
or
push
and
aam
mov
or
in
lock
xor
sbb
pop
nop
and
rcr
in
sub
repnz
je
in
adc
jnp
in
out
and
in
in
iret
push
jb
rcr
jp
call
add
and
mov
hlt
dec
mov
enter
dec
inc
sahf
jmp
or
aas
outs
xor
adc
cdq
nop
ret
out
out
xchg
adc
inc
mov
mov
cmp
pop
and
push
add
mov
or
jecxz
or
in
cwde
out
hlt
xchg
(bad)
add
clc
dec
sbb
aaa
daa
cmp
or
xor
mov
xchg
and
xchg
sub
shl
fsub
sbb
bound
enter
pushf
push
pop
sahf
and
add
movs
and
xchg
pop
fild
adc
adc
mov
xor
lock
ret
xchg
in
xor
sub
adc
push
outs
mov
js
xor
push
bound
mov
lds
mov
mov
pop
fmul
data16
adc
ins
add
and
popa
dec
push
inc
xor
hlt
sbb
xor
jne
inc
jg
xor
call
and
sbb
rcl
or
bound
inc
outs
mov
enter
dec
icebp
add
xor
ret
shl
push
icebp
stos
and
mov
or
jns
add
icebp
xor
aad
pop
xor
cmps
and
jb
or
ret
adc
and
ret
sub
or
mov
ret
(bad)
(bad)
cmp
cmp
cmp
test
adc
push
lock
or
and
repz
mov
repz
add
jecxz
rcl
inc
cli
sbb
ror
adc
fwait
mov
and
jo
hlt
or
and
push
sbb
pop
inc
and
xor
outs
jmp
repz
clc
mov
mov
test
outs
rol
nop
pop
inc
or
and
mov
test
fdecstp
fcomp
add
jmp
push
or
inc
adc
or
sub
pushf
(bad)
adc
jns
xor
fst
and
fdivr
ss
std
mov
icebp
inc
inc
into
(bad)
pop
push
xlat
(bad)
xchg
lock
data16
scas
xchg
sbb
pushf
mov
cmp
xchg
pop
jle
imul
jg
lock
inc
xchg
mov
inc
mov
in
push
adc
mov
jp
mov
pop
std
mov
sub
mov
gs
xor
pop
sbb
popa
loopne
out
push
xchg
lock
jmp
adc
sbb
retf
pop
mov
retf
js
pop
mov
add
or
jmp
daa
or
mov
or
movs
lods
add
hlt
and
and
leave
pushf
or
mov
push
js
rcl
shl
add
ret
ds
hlt
loopne
mov
fcomp
xor
scas
(bad)
retf
lds
(bad)
iret
(bad)
out
leave
push
imul
adc
(bad)
mov
jb
in
jl
imul
adc
mov
mov
mov
inc
(bad)
clc
push
shl
and
mov
dec
jmp
and
mov
and
inc
sbb
push
pop
dec
adc
lock
pop
adc
cmps
aad
sbb
stos
adc
push
xor
and
ds
pop
pop
add
dec
jmp
sub
adc
int3
int3
adc
ins
pushf
and
jo
mov
mov
je
out
or
push
cmps
pop
or
xor
sub
shr
stc
mov
pop
push
lea
dec
or
test
lods
pop
cs
inc
xchg
push
adc
sub
sbb
rcl
adc
cmp
jge
ficomp
jecxz
dec
ss
mov
movs
or
adc
mov
inc
mov
js
push
cli
bound
ret
and
aaa
fistp
or
jno
cld
bound
push
inc
sbb
enter
xchg
mov
enter
ret
pop
test
out
mov
mov
scas
(bad)
or
xlat
lahf
ja
mov
and
push
jnp
jmp
jne
pop
test
adc
mov
inc
nop
sti
int
loop
mov
ss
sub
sub
inc
inc
cmp
daa
cmp
stc
push
in
inc
test
mov
mov
popf
mov
cmp
lock
cmp
mov
jns
and
push
xchg
pop
fcmovnbe
and
inc
in
push
fcom
jge
sbb
fadd
je
in
mov
sbb
je
dec
aaa
cdq
add
pop
shl
dec
lds
(bad)
mov
ins
imul
adc
jne
jno
shr
or
pop
dec
and
add
fsubr
clc
clc
sub
test
std
fs
repz
fadd
fdiv
rol
push
ror
cmps
xor
inc
pop
pop
mov
inc
sub
pop
dec
fmul
sub
int
adc
bnd
mov
and
pop
push
pop
adc
in
daa
add
aas
dec
call
sub
xor
mov
mov
lods
arpl
xchg
sbb
xchg
dec
inc
stos
mov
mov
sbb
push
cmps
ret
dec
jo
addr16
mov
lock
or
fimul
jmp
imul
or
and
or
sar
call
aad
push
ret
sbb
shl
jae
add
sbb
sbb
xor
xchg
or
and
add
pop
dec
test
add
or
sub
ja
add
and
jbe
jae
and
jno
pop
push
call
ror
xchg
xor
(bad)
cmc
or
add
push
test
add
adc
pop
aad
jle
push
cmp
jle
shl
adc
jg
adc
mov
pop
sub
cmps
mov
cmp
mov
fcmovnu
add
stos
lea
imul
aaa
adc
and
inc
dec
add
out
xchg
imul
imul
dec
movs
mov
push
mov
test
or
clc
(bad)
shl
outs
adc
sub
push
pcmpgtb
(bad)
mov
cmp
xor
and
sub
xor
jmp
out
and
imul
daa
add
es
cmps
xor
movs
mov
mov
pop
mov
mov
add
mov
dec
fidivr
mov
mov
cdq
sbb
mov
outs
and
cs
add
je
dec
ret
xor
lock
mov
in
lods
and
jbe
or
aaa
add
pop
sbb
in
and
jnp
jmp
and
and
xchg
loopne
dec
clc
sbb
jbe
jmp
jle
mov
jle
mov
fistp
sbb
jl
add
les
nop
pop
repnz
pusha
jmp
mov
hlt
push
xchg
sbb
imul
xlat
ja
jg
and
or
dec
xchg
and
addr16
inc
outs
ror
adc
pop
and
out
test
arpl
and
xor
dec
add
xchg
lock
jnp
cmps
mov
outs
sbb
push
or
xchg
fsub
pushf
or
sub
sub
pop
pop
dec
or
neg
sbb
jl
inc
pop
mov
dec
add
shr
sbb
in
not
movs
pop
pop
cmps
hlt
stc
inc
loopne
jl
pusha
ins
mov
test
cmp
cmp
rol
inc
add
jmp
pop
or
fdiv
stos
dec
sub
bound
or
pop
inc
push
mov
push
(bad)
dec
xor
leave
aad
xor
xchg
hlt
mov
popa
push
rol
cmp
(bad)
and
or
hlt
sbb
lds
dec
xor
jp
push
movs
push
loopne
xor
add
jge
sbb
push
push
adc
popf
arpl
stos
(bad)
mov
loop
xor
sub
or
aas
jbe
adc
out
sub
adc
push
in
ret
lods
jae
fst
sub
mov
inc
push
dec
jbe
pop
in
rol
mov
add
pop
xor
ss
add
jmp
jl
xor
outs
test
mov
xchg
lock
push
(bad)
iret
push
push
inc
xchg
xchg
cld
add
imul
push
or
pop
cmp
rcr
jne
push
adc
adc
ret
or
or
mov
push
pop
push
dec
or
imul
mov
enter
test
inc
add
and
rcr
sbb
xchg
test
cld
adc
fst
lahf
and
loopne
pop
and
cmps
xlat
pop
jle
push
push
push
mov
mov
mov
fld
adc
lods
es
xor
pop
or
adc
lahf
or
cmp
jo
aaa
sbb
cli
mov
mov
jae
icebp
or
dec
xor
push
lds
xor
sbb
(bad)
fsub
mov
or
ret
in
mov
inc
and
adc
jge
pop
daa
lahf
or
inc
push
imul
inc
dec
inc
adc
and
leave
out
xor
jl
add
inc
in
mov
fucomp
mov
inc
nop
push
or
ss
leave
imul
add
push
pop
jle
cmp
jge
inc
in
sub
or
or
cmps
push
ror
push
inc
or
(bad)
iret
gs
xchg
mov
push
popa
push
mov
or
sub
pop
pop
sbb
pop
mov
dec
fld
cmp
xchg
and
shr
mov
push
(bad)
pop
das
mov
loopne
ins
ss
int
in
mov
xchg
in
cdq
or
test
adc
int3
adc
or
retf
inc
into
pop
xor
adc
jmp
or
adc
mov
xlat
pusha
mov
jmp
push
add
ss
and
hlt
and
sbb
jno
js
dec
jmp
cwde
inc
adc
jae
push
push
(bad)
std
scas
fidivr
loopne
mov
pop
not
xor
fwait
(bad)
mov
jno
in
and
sub
jmp
adc
(bad)
pop
cmp
cmp
fdivr
les
xor
adc
and
mov
or
add
aas
call
mov
and
js
ja
out
(bad)
push
je
gs
inc
push
shl
add
pusha
add
sbb
pop
add
call
pop
or
sub
ret
add
add
inc
adc
adc
push
pop
xor
dec
pop
mov
jne
pop
mov
jle
hlt
sbb
jecxz
adc
mov
and
jne
jmp
sub
ins
adc
inc
sbb
enter
cwde
rcl
(bad)
clc
fimul
pop
cmp
xor
xchg
cmc
push
and
lock
add
pop
adc
sub
les
mov
(bad)
shl
movs
jmp
mov
adc
xchg
add
adc
cmp
inc
cmp
repnz
outs
cmp
sub
mov
bound
mov
aad
ss
nop
test
das
inc
test
mov
fst
xchg
sub
nop
mov
cld
fs
xor
xchg
add
pusha
adc
push
cmp
xchg
(bad)
cmp
js
adc
xchg
sbb
clc
leave
adc
xchg
inc
or
sbb
add
push
mov
adc
adc
jg
stos
inc
test
push
sbb
rcl
ret
push
aam
inc
dec
ret
lea
sahf
jnp
mov
enter
dec
push
push
sub
lods
lahf
mov
ds
jbe
sbb
jb
std
sar
and
retf
lahf
mov
out
loopne
dec
inc
and
add
push
les
lahf
add
inc
lods
inc
mov
sub
add
pop
out
mov
cs
je
cmp
inc
xor
xchg
arpl
add
pop
ret
jmp
add
arpl
in
outs
dec
pop
(bad)
lock
adc
xchg
pop
pusha
adc
mov
daa
add
jl
add
mov
retf
sub
sbb
scas
loope
pusha
inc
add
imul
aad
fs
mov
adc
lock
ins
xor
cmp
movaps
xor
es
imul
and
mov
push
stos
adc
mov
mov
inc
mov
aaa
(bad)
and
push
push
xor
adc
test
rol
or
enter
lahf
loope
sbb
sub
add
dec
es
arpl
mov
clc
add
test
std
test
push
ror
jge
inc
and
aad
lea
lds
out
mov
fisttp
mov
xchg
int
mov
xchg
das
int
or
jo
dec
pop
fcom
jge
inc
js
push
dec
loopne
and
xchg
les
sbb
push
sub
lods
push
and
rcl
add
sub
pop
(bad)
je
sbb
or
sub
cmp
aaa
movs
push
cmps
and
cmovns
stc
mov
fcom
cmp
mul
outs
sbb
sbb
or
arpl
push
inc
iret
mov
arpl
jns
arpl
push
sub
nop
and
and
sbb
inc
add
add
(bad)
sub
call
xchg
push
jmp
or
loope
pop
add
inc
adc
add
ja
int
jno
add
test
sub
and
inc
or
cmp
mov
cmps
and
call
imul
sub
xchg
adc
adc
sub
adc
ficom
mov
xor
std
cwde
ins
xchg
adc
cmp
add
add
ins
mov
vpunpckldq
scas
xchg
cld
push
lods
and
mov
dec
xchg
fucomi
sbb
sbb
jl
out
mov
ds
ud2
add
in
enter
cmp
push
out
sbb
sub
cmp
jns
push
cmp
fild
mov
pop
mov
and
not
mov
xchg
xchg
xchg
daa
sbb
dec
xchg
leave
leave
enter
and
jecxz
aam
hlt
or
mov
push
dec
mov
add
jecxz
mov
mov
push
add
pop
push
add
es
(bad)
or
jmp
cs
add
mov
push
xor
arpl
sub
add
mov
mov
ins
push
aam
movs
jno
imul
xchg
arpl
test
dec
retf
addr16
or
in
xor
aad
add
mov
hlt
stos
add
ror
call
rcl
pop
jo
ss
dec
cmp
fst
push
lea
mov
mov
inc
cmc
ret
mov
(bad)
jecxz
mov
dec
dec
or
and
add
fidiv
xor
arpl
arpl
cmp
jl
rol
sub
mov
cmp
sbb
cmps
mov
aaa
jno
cli
test
add
scas
xchg
dec
and
in
jecxz
dec
inc
cdq
(bad)
loopne
xchg
xchg
mov
sub
movs
test
xor
push
and
inc
add
test
cwde
pop
dec
pop
xor
push
aad
arpl
adc
or
sub
mul
fisttp
and
lock
repnz
sbb
pop
adc
or
shr
sbb
or
push
adc
mov
or
xor
add
lods
or
or
adc
add
fidiv
dec
add
sahf
fucom
dec
push
mov
dec
cmps
dec
add
adc
cwde
cmp
sub
in
rcl
xor
loopne
ret
popf
xchg
push
add
or
add
lea
bound
mov
xor
scas
inc
xor
pop
dec
mov
add
cdq
(bad)
cmp
xchg
or
add
adc
loopne
add
ins
pushf
add
push
pop
addr16
les
or
push
fiadd
ss
xor
imul
pop
or
inc
jne
and
sahf
pop
add
call
or
xchg
push
addr16
pop
call
popf
int3
rol
test
push
or
push
jbe
or
shl
cs
xor
mov
shl
cmp
int
ss
mov
out
inc
shl
xor
shl
in
mov
nop
add
and
es
gs
and
(bad)
mov
and
add
add
mov
push
cmp
and
lods
sub
xor
mov
inc
inc
dec
test
push
rcl
push
call
mov
mov
jp
jnp
inc
push
mov
ror
xchg
push
jp
or
and
inc
mov
clc
push
loop
push
or
and
js
push
mov
inc
mov
push
addr16
pusha
sbb
push
adc
jg
inc
pop
outs
stos
push
xchg
mov
arpl
ins
adc
jecxz
mov
scas
rcr
cmp
loope
adc
mov
jmp
movs
sub
mov
shr
pop
push
or
cmp
inc
imul
fisubr
pusha
adc
jo
dec
dec
or
push
inc
enter
sti
add
and
cmps
push
mov
movs
mov
mov
and
inc
add
shl
retf
ins
mov
outs
dec
icebp
or
mov
shl
xchg
sbb
test
sbb
push
aad
sar
or
mov
dec
adc
mov
mul
scas
fadd
or
sub
push
pop
pop
loope
jns
adc
cli
scas
sub
dec
adc
leave
and
fistp
adc
inc
(bad)
jge
xchg
in
push
movs
mov
adc
imul
loopne
arpl
jp
sub
xchg
neg
cmp
inc
iret
pop
retf
je
and
cmp
add
add
push
xchg
sub
lods
addr16
dec
add
retf
push
out
or
pop
frstor
inc
inc
lods
lods
je
or
xchg
or
xor
and
inc
js
inc
test
iret
and
push
xchg
add
std
fild
cmp
jbe
adc
push
ja
sub
or
inc
inc
lea
xor
pop
mov
mov
in
in
ins
xchg
call
jns
pop
bnd
lea
loopne
push
jecxz
or
mov
lods
sub
nop
inc
sbb
div
add
add
nop
pop
lods
sbb
and
push
dec
sub
mov
ret
sub
stc
jmp
sub
jmp
js
mov
mov
sub
push
sahf
add
add
ins
push
dec
cmps
xor
repz
pop
adc
leave
sbb
test
adc
fiadd
xor
stos
fiadd
push
xor
test
sbb
dec
jl
sti
mov
or
dec
cmc
sub
dec
or
and
push
mov
adc
dec
aas
and
xchg
imul
lahf
stos
push
xchg
and
es
cmp
(bad)
retf
sar
cmp
pop
popa
repnz
pusha
iret
xor
in
mov
cli
pop
sbb
imul
xchg
pop
cli
(bad)
pop
out
cmp
pusha
sqrtps
mov
mov
ffreep
inc
xor
retf
fwait
mov
dec
and
push
(bad)
jae
add
data16
daa
aad
push
push
mov
sbb
dec
retf
jmp
je
push
inc
xlat
mov
jne
std
sbb
and
es
sub
sub
add
das
arpl
push
mov
rol
jge
ins
cld
(bad)
retf
cs
jne
push
mov
sbb
push
rcr
(bad)
push
in
jmp
jne
dec
sub
mov
or
adc
idiv
dec
(bad)
lods
add
and
in
mov
push
pop
arpl
ins
push
mov
or
and
inc
addr16
cmps
and
sbb
mov
movs
or
xchg
push
xchg
push
push
sub
dec
sbb
and
and
and
enter
pop
push
lea
movs
cdq
adc
and
sbb
pushf
mov
out
(bad)
(bad)
cmp
dec
mov
inc
nop
xor
and
pop
sub
or
inc
scas
in
mov
add
mov
sar
push
outs
or
sub
ja
dec
or
adc
icebp
pop
(bad)
inc
jne
mov
mov
aam
sub
add
loopne
xor
stc
pop
dec
jmp
or
cmp
or
pop
adc
mov
cmp
and
aam
or
loop
or
mov
jbe
(bad)
and
adc
and
add
ins
test
xor
mov
jb
dec
xor
arpl
mov
and
loope
ret
in
mov
push
or
sbb
mov
sbb
adc
xchg
stos
inc
or
lock
push
sub
test
cmp
out
mov
loope
xchg
and
loope
or
push
and
movs
mov
xchg
inc
pop
es
cs
sub
dec
sub
ins
jecxz
mov
je
mov
rol
div
loopne
pushf
lods
add
mov
test
scas
bound
mov
pop
(bad)
mov
fidiv
pop
dec
scas
or
sbb
pop
inc
lock
and
xor
add
jb
mov
test
xor
clc
dec
xchg
push
inc
push
mov
mov
sub
pop
push
pop
mov
pusha
outs
vsubss
aam
cmp
pop
push
jns
cmp
lock
(bad)
push
mov
enter
jmp
cmp
cmp
xchg
int
in
cmpxchg
pop
push
or
fs
imul
movs
xchg
xor
leave
test
jo
dec
push
test
nop
push
cdq
cmp
test
mov
test
loope
repz
in
fstp
aaa
prefetchnta
sbb
mov
out
inc
pop
sbb
int3
cmp
cmp
sbb
mov
and
cmp
cmp
sbb
cld
push
leave
test
pop
inc
lods
xchg
add
mov
mov
push
bound
push
push
jecxz
inc
and
or
push
push
xchg
in
inc
aad
icebp
or
ja
add
cs
and
push
add
shr
rcl
js
leave
or
or
jno
add
push
or
in
inc
xchg
or
ins
add
cmp
cmp
sub
sbb
bound
jge
mov
loope
push
rcl
inc
xlat
inc
inc
enter
shr
and
xchg
lods
add
cmp
in
cmps
push
mov
pop
jmp
rol
movs
scas
pop
xor
push
add
pop
xchg
mov
in
mul
cmp
pop
add
pop
jge
test
mov
imul
call
add
or
xchg
loopne
ror
jmp
sbb
push
pusha
add
inc
inc
pop
movs
rol
in
movs
cmp
aaa
adc
add
add
mov
xchg
xor
sbb
int
pushf
mov
add
sbb
xor
add
or
movs
movs
imul
sahf
mov
nop
cmc
pop
shl
lea
lods
aaa
shl
ins
push
pop
pop
and
fwait
sub
jmp
or
pop
xor
pop
inc
cdq
mov
jecxz
or
dec
push
js
cmp
jecxz
inc
pop
mov
adc
scas
xor
cmp
mov
(bad)
cmp
pop
ret
cmp
loop
pop
jle
nop
sbb
iret
test
xchg
ds
jecxz
and
inc
mov
ja
xor
movs
sbb
mov
inc
and
arpl
add
loope
in
ds
fisttp
and
and
lods
ds
bound
inc
(bad)
sti
test
inc
adc
scas
push
aas
add
scas
inc
outs
sbb
scas
mov
or
cmp
mov
xor
sbb
push
das
push
mov
sbb
jmp
or
(bad)
movs
adc
and
adc
jno
fiadd
inc
or
mov
dec
mov
and
cmova
jmp
(bad)
das
or
es
adc
inc
add
cmp
and
add
inc
outs
(bad)
pop
push
adc
mov
popa
in
jge
jae
add
jnp
lods
add
xchg
add
mov
push
mov
xor
test
sub
push
movs
mov
lods
xchg
mov
mov
sbb
stos
dec
and
or
push
out
pop
mov
(bad)
mov
rol
mov
aam
test
in
xor
dec
(bad)
and
xchg
inc
arpl
stc
dec
pushf
inc
adc
or
mov
vpshufd
inc
or
ja
sbb
xlat
hlt
ss
and
cmp
inc
push
(bad)
in
mov
mov
js
inc
or
ror
dec
inc
jne
jnp
lds
popa
inc
ret
mov
push
nop
jmp
imul
or
pcmpgtb
clc
push
inc
in
adc
cmp
jbe
adc
scas
and
in
retf
push
jecxz
test
frstor
pop
jb
add
jmp
and
or
cwde
pop
add
pushf
rol
jne
pop
add
add
add
xlat
mov
aam
push
shl
popa
fcomp
gs
or
aad
nop
add
in
es
mov
loope
or
and
pop
xor
loope
loopne
adc
inc
arpl
je
sbb
mov
sbb
pop
push
dec
jg
fidivr
and
adc
sbb
loopne
sbb
and
or
leave
mov
leave
hlt
push
stc
lock
arpl
pop
jb
test
movs
xchg
mov
test
cmps
push
inc
or
add
sbb
push
mov
mov
mov
ins
sub
dec
fidivr
inc
pop
cmp
mov
rcr
test
and
js
mov
ins
fld
dec
adc
rol
jl
aas
and
enter
and
rol
(bad)
add
add
or
mov
pop
lea
pusha
pop
test
cmc
cld
int
xor
cmp
pop
or
ins
sub
test
daa
or
sub
or
sub
dec
das
mov
retf
mov
jge
push
popa
push
inc
or
rcl
dec
xor
imul
push
xchg
dec
pop
mov
mov
pop
adc
add
mov
arpl
fcmovb
add
ins
push
mov
push
mov
fnstcw
add
pusha
lds
jns
ins
lahf
pushf
je
push
xchg
mov
repz
repz
ret
push
mov
fwait
int
lock
and
push
and
inc
inc
cs
mul
shl
fmul
rcl
call
aaa
hlt
add
addr16
jns
in
les
or
(bad)
(bad)
in
(bad)
sub
mov
add
inc
cmps
sub
mov
aam
fdivr
daa
rcl
jge
push
shl
inc
jno
dec
scas
fs
pop
sub
sub
jb
sub
jne
clc
test
inc
loope
and
adc
nop
add
pusha
push
ret
xor
or
into
jae
fld
adc
mov
inc
movs
shr
shr
loopne
dec
arpl
cdq
(bad)
sub
push
sub
add
pop
jecxz
(bad)
jecxz
retf
daa
xor
lods
push
ss
pop
dec
and
inc
mov
clc
imul
adc
add
cmp
or
mov
inc
repz
aaa
dec
add
mov
out
pop
jb
imul
mov
or
or
mov
inc
pop
xchg
dec
jg
enter
ror
cmps
int
enter
sbb
retf
xchg
xchg
xchg
mov
xchg
mov
push
sub
js
cmp
jmp
fstp
or
xchg
cmp
or
sbb
in
dec
enter
adc
scas
cmp
jbe
test
push
js
sub
call
push
jmp
popf
mov
pusha
add
mov
sahf
xor
shr
dec
adc
sbb
cs
fucomi
shl
sbb
add
rcr
scas
mov
xchg
or
push
xor
pop
and
mov
pusha
jmp
jmp
add
push
or
dec
das
add
cmp
mov
gs
call
into
xchg
jmp
(bad)
iret
in
inc
test
push
xor
add
and
inc
adc
adc
and
adc
leave
add
cmpxchg
nop
push
dec
test
pushf
cs
inc
inc
(bad)
push
daa
inc
inc
inc
inc
dec
jae
mov
jecxz
aaa
hlt
addr16
and
sti
nop
sub
in
sub
mov
stc
push
adc
imul
push
sbb
nop
pop
pop
into
clc
mov
cmp
dec
cmp
movs
dec
sti
retf
add
data16
xchg
cmp
loope
in
mov
and
sbb
inc
or
es
ror
add
add
mov
pushf
xchg
lods
pop
mov
jmp
in
das
fs
aam
pusha
mov
int3
sub
inc
das
lock
mov
cwde
mov
inc
lea
cmp
pop
push
hlt
xchg
les
inc
pop
data16
xor
and
add
and
or
imul
nop
lidtd
clc
jge
or
outs
mov
fld
sbb
add
ret
cs
jl
lock
add
xor
cs
or
adc
xor
jbe
add
outs
and
sbb
cmp
xor
and
push
mov
div
push
rcl
movs
test
leave
xor
repnz
add
dec
fadd
fsub
retf
push
sub
dec
bound
push
outs
cmp
push
daa
adc
ds
push
stc
(bad)
int3
mov
fimul
lock
xchg
or
push
push
out
add
shl
dec
and
cmp
inc
sub
fiadd
(bad)
add
mov
push
xchg
sub
or
cmp
addr16
jmp
push
add
aam
adc
mov
xor
adc
sub
mov
push
mov
push
mov
pop
pop
xlat
mov
add
adc
mov
mov
rcr
adc
dec
push
mov
or
sub
fs
cld
adc
add
add
and
add
rdtsc
scas
cmp
pop
sbb
cmp
xchg
in
std
mov
xor
xchg
int3
in
mov
mov
idiv
lea
scas
out
mov
dec
xlat
mov
xchg
jle
mov
mov
mov
mov
push
add
or
ja
in
or
adc
outs
xchg
adc
adc
or
and
mov
int3
ret
push
and
mov
pop
cmp
(bad)
ins
sub
cmp
(bad)
push
test
dec
iret
pextrw
sub
rol
push
cwde
lock
gs
xchg
ds
adc
or
lock
xchg
in
sub
xor
(bad)
out
sub
sub
loop
imul
pop
cmovbe
lea
cmovno
push
xchg
arpl
call
add
push
popa
push
movs
iret
jnp
cmp
pop
test
int3
push
xchg
adc
cs
pop
add
pslld
xchg
xchg
arpl
xor
out
inc
enter
pop
out
xchg
push
ror
mov
les
in
sbb
pop
enter
icebp
pop
and
sub
or
mov
enter
(bad)
sub
mov
jo
sub
pop
rcr
sub
lea
sub
xchg
or
pop
int
int3
xchg
test
mov
jp
xchg
mov
push
dec
movs
jmp
pop
mov
out
in
ja
aam
push
push
js
or
add
stos
cwde
(bad)
bound
add
shr
ja
es
jecxz
dec
cmps
dec
xchg
adc
inc
jno
and
gs
and
lea
lock
dec
arpl
xchg
pop
inc
adc
pop
arpl
mov
mov
test
aaa
xor
jo
push
pop
pop
popf
call
popa
sub
add
pop
arpl
push
pushf
mov
sub
(bad)
test
out
test
or
nop
iret
add
fstp
int3
popa
pushf
push
pusha
mov
add
not
nop
pop
push
mov
rol
mov
jno
add
cmps
cmp
aad
pop
and
mov
pop
adc
jnp
mov
xor
mov
jno
imul
xor
adc
and
inc
jae
outs
xchg
sub
mov
loopne
mov
mov
pop
sub
jo
and
std
mov
sub
fsubr
sbb
loopne
jmp
sbb
add
xor
in
lods
mov
xor
mov
dec
cmp
popa
daa
ins
das
push
pop
or
inc
xchg
loop
sub
jo
mov
mov
pmulhrsw
ret
shl
dec
xchg
movs
push
pushf
mov
pop
dec
cwde
retf
sbb
inc
sbb
mov
or
add
lock
loope
aas
popa
xchg
sbb
push
add
add
cmp
popa
sub
sub
adc
push
sbb
jne
leave
or
sub
mov
int
test
stos
cmp
mov
and
inc
sbb
mov
pop
fld
cmp
mov
push
push
mov
dec
push
pop
jmp
dec
dec
or
mov
stos
enter
sub
mov
movs
push
cmps
adc
loope
dec
loopne
xchg
mov
inc
dec
retf
xor
popa
rcl
pop
xor
inc
add
daa
sbb
ret
mov
ret
call
cmp
(bad)
xchg
dec
js
cdq
mov
popf
cwde
add
xchg
xor
inc
mov
pop
sbb
dec
or
je
and
push
adc
and
rol
imul
sbb
mov
(bad)
cmp
call
lds
mov
movs
push
cmp
or
dec
add
shl
cmp
mov
pop
cmp
and
sub
inc
fist
(bad)
std
es
sbb
bound
jns
push
add
or
ss
mov
inc
dec
push
and
jmp
dec
inc
push
(bad)
mov
aam
mov
out
mov
pop
cmps
mov
or
push
outs
pop
add
ss
jae
mov
mov
jge
or
sysenter
or
inc
and
xor
adc
sbb
and
add
popa
lods
add
xor
and
sub
or
push
fs
jmp
outs
es
and
int
lea
div
in
cwde
mov
and
arpl
pop
xchg
sbb
imul
stos
cmp
je
mov
int3
xchg
sbb
or
cmp
and
outs
push
sbb
sbb
(bad)
mov
out
cmp
(bad)
or
or
addr16
gs
jge
fwait
shl
clc
pop
fbld
arpl
cmp
dec
scas
nop/reserved
enter
mov
sahf
pop
lock
mov
push
xchg
xchg
aaa
ss
fs
adc
add
jl
push
out
clc
jl
xor
cmp
inc
and
push
mov
pop
enter
mov
mov
pop
mov
xor
pop
mov
scas
sub
cmp
or
test
inc
jns
popa
and
add
inc
and
add
add
sbb
pop
add
add
in
add
das
sub
add
loope
and
add
xchg
and
and
cmc
adc
cmp
and
pop
jge
push
arpl
add
sbb
sub
mov
icebp
mov
or
cmps
and
or
sub
mov
clc
mov
pop
add
dec
xchg
pop
mov
push
or
push
or
fcom
mov
add
adc
rol
imul
push
xchg
inc
scas
and
lock
jge
xor
rol
jb
push
ror
in
call
call
jo
mov
add
xchg
sbb
cmp
sbb
test
es
clc
clc
push
je
xchg
and
or
or
arpl
xor
daa
dec
jle
mov
mov
loop
add
js
push
inc
fadd
pop
add
add
inc
push
es
(bad)
mov
xchg
and
xchg
jmp
lahf
arpl
nop
xchg
push
jns
mov
xchg
lahf
shl
movs
sub
or
popa
stos
ret
rol
pop
xchg
xchg
inc
aad
mov
add
add
inc
add
xor
fcom
mov
sub
inc
jo
outs
sbb
and
xchg
stc
xor
cmp
leave
lods
push
sub
xor
dec
xor
or
in
xchg
outs
sbb
mov
jno
add
mov
call
inc
cli
push
inc
mov
test
jbe
push
lock
sub
push
pop
pop
inc
add
arpl
push
add
xor
daa
jno
or
test
inc
mov
xchg
sbb
das
push
add
dec
and
jb
out
cwde
or
jl
sbb
jg
push
ins
or
stc
cld
cmc
shr
mov
(bad)
adc
jl
pop
hlt
lea
fbstp
pop
int
clc
stos
outs
pop
aad
fwait
inc
add
ins
mov
and
in
test
pop
add
cmp
add
in
retf
push
out
sahf
adc
popa
xchg
shl
sbb
retf
pop
and
push
enter
mov
and
data16
dec
inc
mov
lods
pop
dec
jae
scas
test
dec
loopne
adc
loopne
enter
(bad)
fsub
xlat
scas
in
mov
mov
sbb
and
pop
(bad)
aam
ins
loopne
sbb
and
sub
rcr
nop
and
hlt
nop
int3
int3
aaa
rcl
add
fwait
mov
bndldx
pop
xchg
cmp
add
out
mov
adc
mov
nop
add
scas
cmp
and
and
add
xchg
dec
hlt
xchg
ins
lods
nop
(bad)
iret
aaa
test
cmp
or
adc
mov
sub
or
or
jle
imul
jmp
shr
setb
retf
adc
mov
xor
add
add
ret
cdq
adc
inc
cs
hlt
hlt
lock
lock
in
fs
inc
call
cmp
sbb
push
es
or
sub
jnp
mov
mov
cmp
mov
loopne
or
add
jb
pop
jmp
dec
xor
add
data16
cmp
test
fs
loope
repnz
sbb
mov
test
test
add
push
dec
dec
xor
or
aam
pop
mov
jb
cmp
and
or
(bad)
pop
dec
jmp
pop
pop
xchg
dec
sub
xchg
test
sub
push
jle
add
shl
enter
cmp
mov
pop
rcr
test
test
add
add
loop
mov
push
add
add
adc
fdivrp
mov
add
dec
pop
cmp
add
cmps
lds
loope
pop
adc
inc
in
mov
outs
aaa
repnz
push
test
enter
cmp
jne
cmp
jne
sbb
inc
inc
push
mov
movs
test
or
sub
cmp
or
xchg
movs
pushf
push
add
jle
push
ret
retf
sub
xchg
icebp
xor
rol
ins
sbb
lea
push
repnz
loope
inc
mov
add
pop
jbe
and
pop
push
fimul
js
clc
and
inc
xchg
mov
inc
jbe
popa
dec
sbb
adc
mov
hlt
out
pop
ja
test
call
add
in
push
sbb
jecxz
je
sub
ja
inc
mov
cmps
addr16
fdiv
and
fisub
or
scas
jl
and
mov
jg
push
nop
stos
and
sti
sbb
lock
mov
nop
stos
shl
stos
mov
gs
add
xor
sahf
mov
mov
and
lock
jge
xchg
and
sbb
pop
jb
repz
and
jp
jns
mov
(bad)
jns
fistp
add
push
dec
stc
mov
cmp
xchg
jp
push
lea
adc
dec
cs
rcl
push
cmp
int3
adc
dec
scas
repz
dec
enter
scas
repz
fisttp
repz
sbb
repz
mov
mov
mov
out
test
add
in
lahf
and
hlt
adc
das
jl
jmp
mov
jns
pop
mov
fld
xor
ins
mov
or
repz
rcr
xor
pop
out
out
enter
adc
xchg
cmp
fsubr
dec
out
add
xchg
xchg
fiadd
inc
jmp
mov
or
inc
jle
xor
rol
adc
and
cmp
jl
lock
stc
jns
jl
mov
in
sbb
jmp
add
mov
addr16
push
and
xor
jae
dec
xor
into
dec
jo
adc
and
ins
and
mov
xor
adc
mov
add
movs
sbb
and
dec
jns
jnp
test
add
or
jl
add
fidivr
jg
push
sahf
out
mov
dec
outs
xchg
mov
fstp
outs
sbb
sub
fmul
fmul
(bad)
fadd
scas
outs
and
or
fisttp
ror
xchg
dec
int3
(bad)
int3
inc
push
in
enter
add
(bad)
(bad)
shr
in
inc
test
test
mov
clc
mov
bnd
pop
jo
mov
stos
lea
push
not
mov
in
mov
mov
out
out
movs
sub
mov
and
or
jg
xor
pop
push
mov
xor
test
dec
mov
pusha
adc
push
mov
je
mov
and
adc
es
and
mov
push
ret
sub
dec
mov
pop
clc
xor
jg
push
mov
cmps
repz
int
inc
mov
mov
fsubr
dec
jle
xchg
or
cmp
in
aas
dec
sbb
nop
ins
and
add
js
fadd
test
dec
pop
jmp
xchg
dec
mov
inc
les
cmp
bound
or
adc
movs
mov
lea
dec
inc
sub
(bad)
test
out
adc
pusha
cmp
lods
iret
repnz
repnz
in
jbe
pop
sub
mov
loopne
fdivr
fmul
mov
fmul
xor
rcr
pop
ror
int3
leave
inc
xor
pop
xor
enter
adc
jmp
cmp
retf
sbb
mov
enter
adc
jns
xchg
lds
push
inc
cld
push
shl
adc
xlat
add
into
aaa
push
sbb
(bad)
pop
and
test
(bad)
les
dec
xor
and
cld
and
xchg
mov
xchg
shr
daa
adc
xchg
ror
and
adc
out
mov
bound
xchg
add
push
jb
movs
adc
xchg
frstor
mov
(bad)
jmp
xor
mov
or
fmul
dec
mov
mov
ret
sbb
mov
imul
ja
jmp
cmc
mov
push
push
mov
sbb
(bad)
mov
add
sti
in
scas
cdq
pusha
cmps
stos
lea
cmp
scas
into
push
lock
add
rcr
or
xchg
sbb
loopne
inc
mov
adc
dec
jle
inc
add
sbb
inc
add
ret
push
int
mov
ins
pop
inc
js
or
ins
push
jmp
fdiv
mov
inc
mov
ret
mov
cmp
sub
pop
(bad)
js
sub
sub
push
push
cmp
jmp
fld
sub
ret
push
mov
mov
repnz
les
cmp
jbe
andps
jb
stc
push
in
lock
sub
lock
dec
imul
pushf
add
lock
sbb
pop
or
pusha
test
outs
(bad)
fcom
xchg
sub
or
add
pop
dec
std
cmp
out
in
or
lods
xchg
inc
pop
cmp
adc
stos
push
clc
(bad)
stos
inc
dec
adc
leave
imul
xchg
in
loope
push
imul
mov
mov
adc
lds
and
fld
aam
mov
mov
xor
push
jmp
add
out
lock
inc
aas
inc
add
mov
mov
dec
sbb
xchg
movs
lods
sub
xor
cmp
xchg
iret
jmp
test
or
add
movs
adc
cwde
add
pop
add
popa
jmp
bound
adc
add
mov
aam
leave
xor
mov
and
jb
clc
lock
add
in
or
cmps
mov
and
push
shl
or
add
clc
mov
cmc
or
mov
xchg
and
mov
inc
cmp
push
xor
daa
jo
and
bound
fst
add
ss
arpl
and
inc
ins
lods
in
xchg
(bad)
and
push
loopne
cmps
or
dec
fucomip
lods
in
sbb
in
lods
mov
shl
out
das
or
add
pop
and
enter
js
cmp
cdq
push
inc
push
test
stos
xor
sbb
lock
dec
or
sub
add
mov
xchg
pop
adc
and
scas
nop
aad
lahf
das
test
xor
sub
and
mov
daa
add
mov
imul
pop
test
int3
xchg
mov
mov
out
fcmovb
push
mov
repz
aad
and
lea
add
sub
call
enter
or
xchg
scas
add
arpl
pop
sar
mov
js
adc
pop
ja
adc
push
or
adc
or
sub
ror
add
fwait
nop
push
into
out
or
fnsave
pop
xor
xchg
mov
loopne
mov
and
(bad)
cld
pop
stos
inc
sub
add
jmp
xor
pop
cmps
hlt
fs
call
dec
add
popa
mov
mov
(bad)
and
enter
add
xchg
and
outs
push
retf
enter
jecxz
xchg
add
cs
dec
int3
mov
lds
dec
in
pushf
out
and
test
dec
lock
inc
sub
dec
pusha
rcl
push
push
mov
sar
or
or
sub
sub
fist
loopne
in
lock
cmp
jno
enter
and
push
enter
pushf
push
adc
in
adc
mov
test
in
or
out
push
jo
push
mov
mov
movs
mov
dec
fmul
scas
lea
or
mov
icebp
movs
je
add
pop
jmp
arpl
jne
mov
push
lea
dec
enter
shl
in
pop
repnz
lock
jns
popa
add
cdq
add
pop
xlat
mov
arpl
jb
inc
shl
out
mov
push
inc
adc
sub
mov
inc
xchg
push
pusha
add
fstp
jge
jecxz
shl
pusha
and
mov
pop
jne
pop
add
aas
and
and
cmp
das
jae
js
xor
xchg
ja
and
xchg
push
or
jmp
movs
adc
sar
mov
aaa
push
and
arpl
mov
sbb
dec
adc
dec
add
dec
push
or
lods
cmp
dec
ret
mov
cmps
xchg
xchg
lods
iret
jl
dec
mov
jb
inc
test
add
sub
add
jp
adc
add
sbb
loope
and
cld
and
inc
out
bound
mov
dec
mov
add
xor
stos
fisub
cmp
sbb
test
xchg
push
cmps
jo
jne
loope
aaa
gs
and
add
xor
fadd
(bad)
and
mov
loopne
aad
fisub
ss
fwait
xlat
adc
loopne
jo
hlt
add
cmps
and
loope
ss
rcl
xchg
dec
xor
test
scas
sbb
out
or
addr16
enter
inc
in
pop
adc
psubb
retf
cmp
xor
adc
pusha
xor
clc
jmp
inc
lds
pusha
jno
or
xlat
mov
repnz
cli
or
shl
jmp
cmp
out
xor
jmp
(bad)
cmp
ficomp
fnstcw
xor
rcr
xchg
push
pop
xchg
xchg
sbb
push
aaa
xor
or
loopne
add
or
sub
fild
mov
jmp
add
mov
or
or
or
cmp
or
lock
mov
repz
dec
pushf
inc
push
inc
dec
push
(bad)
adc
mov
shl
out
test
push
sahf
xchg
nop
add
jnp
repnz
dec
pushf
arpl
ja
loop
clc
mov
inc
or
movs
arpl
dec
mov
call
(bad)
sti
mov
je
fcomp
add
push
push
mov
xchg
pop
or
add
add
bound
fnsave
gs
in
xor
les
lock
mov
fcomp
sbb
jmp
aad
push
pushf
or
femms
stos
popf
mov
ss
dec
loop
push
retf
pop
neg
lahf
popf
pop
adc
push
lods
xlat
pop
stc
int3
adc
adc
pop
lahf
mov
in
and
and
sahf
cmp
mov
loope
pop
lea
adc
pop
fstp
xchg
or
inc
fidiv
or
jge
clc
mov
jg
(bad)
push
and
sub
mov
jb
add
xor
add
dec
pop
lahf
jb
bound
push
gs
(bad)
ror
push
or
push
pop
xor
inc
lahf
popa
outs
sub
arpl
out
arpl
mov
xchg
push
leave
mov
add
shl
mov
add
pop
jns
adc
cs
shl
lea
and
shl
adc
mov
stc
jnp
(bad)
icebp
add
add
aam
or
popf
lds
pop
sub
xor
(bad)
scas
inc
jae
retf
shl
push
arpl
fist
cmp
add
add
test
std
popa
sti
inc
rcr
in
mov
invd
(bad)
cmps
mov
in
add
push
mov
xchg
js
mov
cmp
clc
inc
mov
ret
das
mov
jnp
ds
prefetch
imul
or
push
loop
inc
mov
cmps
test
push
mov
dec
pop
xor
add
cs
pop
(bad)
nop
xchg
inc
mov
and
add
xor
xchg
dec
or
fidivr
sbb
cs
dec
pop
cmp
not
mov
jne
pop
push
add
or
test
inc
ins
and
test
pop
pop
push
ins
imul
push
dec
xchg
outs
(bad)
outs
pop
cmc
sahf
add
push
add
test
adc
dec
shr
(bad)
mov
popf
fmul
loop
push
mov
imul
add
add
fisub
test
inc
sbb
jg
gs
or
dec
pop
rep
add
and
movs
sub
lds
push
mov
pop
mov
mov
pop
in
sbb
jo
sub
les
test
inc
adc
ret
movs
arpl
xchg
lods
or
outs
es
add
pushf
cld
xor
fcmovb
jge
xor
rol
inc
add
sbb
fld
inc
jb
movs
xlat
and
and
xor
mov
out
xlat
add
enter
or
xor
daa
mov
xchg
arpl
mov
leave
mov
fbstp
inc
popf
mov
mov
dec
and
ret
rcl
or
mov
ja
test
xor
shl
jno
es
out
adc
inc
dec
test
cmp
enter
inc
sub
xor
test
xchg
adc
lock
sub
dec
adc
loop
imul
xchg
xlat
xor
pop
add
dec
xchg
push
sub
imul
xor
aas
and
pop
cmps
rol
ins
jno
retf
xchg
cmps
push
mov
push
out
jnp
add
sbb
pop
dec
je
ja
into
int3
movs
pop
clc
adc
daa
ror
inc
lahf
cmp
push
push
jae
cwde
je
mov
(bad)
fmul
adc
sub
rcr
xor
retf
push
ret
ja
push
push
inc
cmps
imul
mov
les
dec
xchg
push
sbb
mov
and
pusha
stos
mov
mov
xlat
fcomp
inc
pop
movs
int3
cld
jmp
sahf
push
push
mov
push
in
scas
sbb
adc
and
inc
out
aam
dec
mov
test
ins
pop
pop
je
mov
cmp
scas
nop
lods
xor
push
push
scas
pop
sti
add
sub
dec
dec
push
fstp
test
out
in
or
mov
mov
arpl
add
and
push
dec
push
add
or
imul
xchg
in
stos
arpl
mov
std
push
pop
pop
or
push
mov
and
or
(bad)
pusha
retf
popa
imul
repz
test
xchg
inc
mov
inc
or
xchg
sbb
inc
pop
xchg
mov
fs
les
pop
cs
call
and
mov
movs
dec
retf
push
pop
add
fs
mov
lods
inc
pop
xor
sub
xor
mov
lea
xor
xchg
mov
mov
sbb
dec
adc
sub
clc
dec
enter
in
imul
jmp
arpl
in
fmul
(bad)
in
mov
fist
fisttp
and
movs
(bad)
add
inc
sub
add
pushf
lods
sbb
add
push
(bad)
mov
in
cld
or
jp
jl
or
sete
test
pop
sub
xchg
cmp
mov
into
push
sbb
retf
lahf
push
rol
dec
xor
jp
inc
mov
jg
imul
(bad)
neg
ret
(bad)
std
dec
scas
mov
dec
rcr
pop
dec
jmp
or
jb
add
add
clc
sbb
push
adc
stos
(bad)
fsubr
inc
sub
fsubr
xchg
or
test
inc
shl
gs
scas
inc
pop
push
add
dec
pop
popa
xor
cmp
sti
movs
add
add
mov
mov
push
pop
mov
dec
les
inc
repnz
lods
les
pop
inc
or
pop
scas
and
add
ror
xchg
adc
jl
movs
fisub
inc
push
or
je
inc
ins
sbb
sbb
mov
ins
jmp
aaa
outs
retf
addr16
bt
bound
pop
or
mov
xchg
sub
adc
mov
shl
jg
push
mov
nop
in
ret
mov
in
das
pop
push
fnstcw
pusha
mov
cmps
mov
in
fnstsw
push
mov
and
mov
out
into
fisub
mov
add
mov
adc
cpuid
daa
pop
cs
mov
jp
mov
push
and
fdiv
mov
stc
add
sbb
or
sbb
cdq
pop
sub
pop
cdq
in
push
add
or
mov
ins
popa
pop
ja
sub
and
and
or
pop
sub
shl
xchg
gs
inc
test
mov
mov
test
sahf
ret
mov
rcr
mov
dec
fst
mov
cmc
or
or
mov
jge
imul
imul
add
sub
scas
div
inc
push
pushf
push
pop
ret
loope
repnz
mov
js
pop
pop
jmp
xchg
imul
or
cmp
inc
test
adc
(bad)
aam
pop
ds
pop
adc
add
fadd
inc
push
fidivr
add
sbb
popf
push
add
mov
bound
lods
xchg
ror
pop
add
and
fwait
mov
mov
adc
adc
stc
add
mov
imul
sub
scas
or
push
adc
add
add
mov
inc
inc
rcl
ret
fild
clc
test
add
rcl
adc
mov
or
cs
push
sbb
mov
adc
add
jmp
into
lds
outs
lock
add
mov
iret
sub
xchg
mov
xor
repnz
or
mov
lods
popa
or
mov
cmp
test
and
into
mov
pop
pushf
rol
or
adc
or
xlat
and
loop
xor
inc
(bad)
aad
bound
movs
push
xor
or
sub
out
mov
call
in
and
les
mov
aaa
aad
sbb
add
cmp
mov
imul
fmulp
add
fwait
mov
push
and
fimul
jmp
jg
lea
add
ss
mov
(bad)
pop
add
xchg
and
cwde
xlat
scas
mov
adc
es
rcr
mov
fstp
outs
or
push
mov
aaa
inc
mov
scas
jg
mov
xchg
mov
scas
or
mov
push
imul
adc
add
aam
pop
repnz
dec
mov
inc
ror
add
inc
or
xor
and
lock
inc
iret
add
arpl
pushf
xor
sub
add
xchg
mov
xor
jmp
xor
loop
and
popa
jo
xchg
(bad)
xor
nop
pushf
add
adc
pop
sar
movs
shl
mov
dec
ret
cmp
mov
lea
mov
xchg
loopne
je
jge
lods
sbb
aad
or
das
dec
push
test
dec
inc
cmp
mov
je
mov
imul
push
test
add
sbb
ja
inc
xor
dec
mov
add
mov
lock
ja
push
cld
and
pusha
test
push
sbb
repz
aaa
push
pusha
sbb
sbb
clc
push
adc
addr16
jo
sub
jmp
ds
jl
push
pop
enter
cmps
or
xor
pop
xchg
adc
ret
inc
cmp
(bad)
ror
inc
arpl
sbb
jge
hlt
daa
jno
or
dec
test
cmp
cmp
adc
nop
or
shl
fstp
sahf
aas
leave
jp
adc
and
cmp
ins
aad
shl
je
out
xchg
dec
or
scas
cmp
rcr
rcr
push
aam
jmp
mov
data16
or
clc
shl
rcl
and
leave
sub
xchg
or
xchg
and
es
xchg
aam
jo
cmc
sbb
std
(bad)
movs
inc
adc
aad
add
retf
ins
pusha
je
ror
adc
cmp
push
movs
test
xchg
push
or
js
pop
xchg
xchg
add
shl
adc
and
jno
pop
rcl
in
out
arpl
jb
icebp
retf
out
and
repz
dec
int3
arpl
and
test
and
mov
ret
bound
mov
cmp
pop
pop
mov
mov
rcl
ret
jno
rol
ret
ret
rol
shr
sub
inc
jmp
cs
or
jns
nop
ins
vpsrld
rol
inc
cld
or
sbb
xchg
sbb
aas
je
xlat
push
adc
mov
addr16
sub
and
or
rcl
or
push
xchg
stc
xchg
lods
xor
inc
add
pusha
inc
nop
out
pop
push
mov
pusha
int3
xchg
(bad)
or
punpckhbw
dec
pop
add
mov
and
and
jl
movs
xchg
cmp
retf
in
inc
sbb
cld
cld
enter
das
inc
lds
dec
leave
les
jo
xchg
adc
mov
mov
inc
add
aam
jo
sbb
fwait
xchg
mov
xor
imul
cmp
jb
ss
shl
push
cmp
push
clc
pop
cmp
pop
push
dec
xor
cmps
jbe
pusha
out
adc
pop
add
mov
ss
add
jecxz
sub
and
xchg
push
push
xor
fistp
iret
xor
cmp
mov
shufps
or
xor
xlat
jle
xchg
xor
neg
push
xor
mov
xchg
adc
les
xor
nop
imul
out
out
sbb
mov
mov
push
adc
push
lahf
or
arpl
stos
mov
mov
scas
push
lea
nop
adc
push
add
sbb
jno
ret
scas
leave
rol
pop
cs
push
xor
call
inc
xchg
mov
xor
bound
imul
xor
add
xor
push
imul
dec
xchg
or
dec
ror
in
stos
push
lahf
push
inc
add
lods
in
cmp
ja
sti
inc
fs
mov
(bad)
mov
or
add
xor
mov
push
mov
lahf
dec
mov
ins
mov
cmp
cmp
push
or
icebp
lock
out
ss
inc
xor
pusha
or
inc
mov
(bad)
sub
pop
adc
push
pop
es
(bad)
lds
adc
add
add
ja
imul
push
inc
xor
mov
in
imul
sub
sbb
jae
dec
inc
mov
push
xor
ja
pop
shl
or
xchg
mov
and
ja
mov
test
imul
xchg
pop
das
or
xor
js
retf
push
xchg
dec
adc
inc
push
push
push
pop
push
jbe
jnp
aas
mov
dec
push
in
inc
ins
bound
(bad)
push
xchg
lock
xchg
or
jb
pusha
push
das
jp
inc
cmovae
rcl
(bad)
pop
mov
test
cmps
imul
arpl
mov
scas
std
outs
push
jo
push
mov
aam
xor
ret
pop
imul
test
mov
pop
aaa
add
scas
sub
arpl
shl
dec
adc
inc
cmps
ja
inc
add
test
(bad)
push
addr16
mov
lahf
push
cmps
ror
fld
dec
jmp
xchg
cs
push
call
push
or
dec
add
cwde
pop
sub
das
js
test
pop
scas
in
stc
and
inc
add
ja
jo
add
push
adc
xor
ja
or
jbe
imul
xor
imul
adc
jns
fidiv
or
ins
inc
dec
cmp
outs
jmp
mov
ss
mov
rcr
loope
add
xor
xor
cmps
adc
push
mov
aaa
and
inc
xor
adc
outs
out
adc
loope
add
addr16
push
sub
sub
inc
push
xor
inc
adc
add
lds
pop
jb
mov
fist
or
adc
aaa
addr16
cmp
push
xor
mov
pop
dec
sbb
and
dec
push
loopne
das
arpl
fsub
cmp
mov
(bad)
xor
dec
cs
ss
dec
ins
ins
and
dec
or
ins
cmps
mov
out
(bad)
fbld
add
sub
cmp
out
pop
aas
aaa
mov
push
sub
mov
aaa
xchg
mov
(bad)
arpl
fbstp
pop
mov
stos
pop
or
aas
mov
mul
inc
in
xor
les
mov
(bad)
or
stos
pop
iret
stos
fcmovnu
mov
add
enter
inc
add
mov
lahf
or
aas
pusha
adc
imul
cmp
rol
das
pop
(bad)
prefetch
push
dec
inc
xlat
out
rol
xor
adc
cs
and
or
push
in
daa
outs
out
movs
or
lahf
inc
repz
addr16
pusha
push
dec
adc
xor
adc
mov
xor
xor
pop
(bad)
adc
(bad)
xor
add
xor
rol
mov
cwde
test
push
pop
inc
dec
cmp
mov
sahf
mov
inc
iret
outs
iret
js
cmp
mov
pop
sub
test
push
inc
push
data16
sub
inc
add
mov
and
shr
jle
xchg
xor
mov
mov
xor
(bad)
(bad)
jle
ja
gs
cmp
add
and
fucomp
dec
xor
dec
sbb
dec
dec
adc
mov
call
lahf
dec
inc
loop
ret
and
pop
cmp
sub
push
aaa
pop
add
cmp
pop
aas
(bad)
movs
ins
push
ret
(bad)
aaa
jae
add
push
push
sbb
inc
cmp
mov
jg
dec
pushf
js
adc
cs
cmp
ss
ror
out
adc
push
bound
aaa
test
scas
test
mov
aaa
adc
scas
ss
add
mov
cmp
popa
xlat
xor
xchg
push
test
fmul
scas
mov
(bad)
es
outs
dec
adc
sub
bound
pop
lock
(bad)
dec
mov
inc
jb
cmps
bound
adc
sbb
outs
cmps
js
test
cmp
mov
pop
or
add
(bad)
push
outs
xor
bound
mov
fwait
fs
and
or
mov
xchg
in
js
jae
pop
push
rol
pop
ja
adc
xor
inc
xor
xchg
jg
arpl
ss
pop
test
mov
sub
or
cmp
pop
pop
cmp
gs
xchg
mov
test
inc
inc
mov
inc
xchg
inc
lahf
lds
jp
inc
call
cmp
int
sub
push
push
jg
push
adc
popa
test
dec
inc
pop
adc
stos
sbb
xchg
pop
mov
nop
pop
push
iret
aaa
pusha
adc
pop
add
imul
or
cwde
cmp
adc
xor
leave
push
ret
fimul
xor
xor
test
and
stos
loopne
xlat
dec
inc
sub
call
mov
sub
push
ja
(bad)
fistp
lahf
ffreep
and
add
(bad)
pop
leave
push
xor
sub
stos
fmul
(bad)
xor
sub
in
cmp
sbb
imul
enter
xlat
and
push
xor
pop
adc
xor
push
jb
xor
sub
pop
xor
pop
int
sbb
inc
mov
aam
sub
test
fidivr
inc
add
sti
iret
adc
sbb
pop
dec
xor
sbb
adc
adc
pop
xor
inc
mov
leave
adc
sbb
push
add
push
cwde
movs
fild
fs
cmps
xor
jg
push
jo
jo
scas
xor
xor
adc
push
push
addr16
(bad)
pop
xchg
and
xor
aas
iret
inc
js
(bad)
retf
xor
mov
inc
ss
rdmsr
add
out
imul
adc
add
mov
(bad)
adc
sbb
pop
or
ins
aad
inc
pop
dec
pop
ins
mov
(bad)
push
add
inc
out
push
mov
push
and
aaa
aaa
ficom
inc
push
je
and
adc
add
inc
xlat
cmp
test
cmp
jecxz
xor
pop
push
xchg
xchg
push
mov
dec
xchg
cmp
xchg
dec
push
xor
cmp
or
add
push
jmp
mov
cmp
in
mov
add
add
cmp
dec
into
sbb
in
les
out
cmp
jae
and
aas
scas
stos
cmp
push
callw
shr
mov
ja
aaa
pop
mov
push
jae
add
add
inc
aad
rol
aas
cmp
xchg
pop
xor
into
inc
pop
adc
xor
add
and
ret
fild
or
test
bound
xlat
mov
aas
cmps
mov
stos
fbstp
or
xor
push
and
sti
mov
ja
dec
adc
shl
cmps
bound
pop
jae
or
jbe
push
push
push
add
fldcw
and
gs
outs
push
das
ss
xor
aas
dec
scas
xchg
dec
sbb
xchg
sbb
cmp
cmp
cmp
xor
popaw
jmp
mov
push
fist
add
jno
and
test
inc
out
push
jg
ss
push
or
or
ret
js
mov
adc
aaa
xor
push
addr16
fisubr
inc
xlat
or
inc
mov
popa
or
rcl
or
out
push
or
mov
call
xlat
or
inc
into
push
pop
xor
xor
adc
aam
add
mov
push
pop
and
inc
or
mov
mov
xor
pusha
xchg
dec
das
mov
pop
mov
push
sub
jo
imul
xor
aaa
fbstp
mov
(bad)
push
sub
dec
out
pop
xchg
sbb
aas
rcl
(bad)
cmp
inc
js
adc
xlat
ret
aaa
iret
outs
adc
inc
inc
cmps
mov
pop
cmp
aas
out
jmp
pop
into
or
cmp
pop
daa
mov
pop
push
aaa
xor
or
outs
imul
add
outs
daa
push
inc
sub
inc
mov
lea
addr16
sub
jo
pop
outs
(bad)
aad
mov
das
aam
cmp
xor
rcr
sub
xlat
mov
cmp
sub
jg
test
dec
sbb
add
das
dec
dec
packuswb
(bad)
aam
aaa
jo
push
sub
xchg
mov
outs
push
sbb
push
scas
outs
mov
ins
arpl
ins
sub
sub
sub
outs
mov
mov
xor
and
dec
xor
mov
sbb
dec
jns
cmp
add
xor
scas
ins
(bad)
lods
adc
out
(bad)
ja
pop
inc
ss
bound
bound
cmp
adc
inc
cmp
xchg
sub
inc
in
xor
adc
not
push
inc
out
xor
xchg
pop
and
aad
jae
xor
aaa
or
in
add
stos
jmp
cmp
clc
and
aaa
call
cmp
shr
stc
stos
(bad)
data16
cdq
sub
les
stc
cmp
xor
xor
push
mov
jbe
div
pop
or
in
dec
inc
inc
sub
xor
push
add
or
push
scas
xchg
and
xor
xor
sahf
pop
lea
xor
push
inc
or
push
daa
jb
cs
(bad)
push
jbe
rcl
aaa
pop
jb
arpl
mov
xor
or
popa
xor
push
in
mov
nop
pop
adc
or
mov
test
in
add
fdivrp
cwde
call
push
add
xlat
addr16
or
div
ins
xor
push
and
inc
sbb
adc
stos
loope
xchg
xor
ficom
jle
xlat
push
xchg
sahf
je
add
or
pop
sbb
daa
adc
aaa
test
adc
add
mov
imul
inc
enter
bound
cmps
xchg
iret
xor
in
xor
and
lahf
in
mov
pop
mov
xor
push
jb
aaa
aaa
jb
jno
ss
ss
push
in
push
es
xchg
iret
xchg
sbb
push
xor
fld
jae
adc
mov
jb
inc
ss
mov
test
xor
mov
xchg
mov
in
iret
xor
cmps
test
xor
xor
xor
and
or
ss
and
sbb
xor
xor
test
cmps
cmp
cmp
xchg
add
jmp
adc
aaa
out
lods
fs
xor
inc
arpl
or
or
jns
jne
adc
xor
inc
xor
imul
cmp
sbb
cmp
and
pop
xchg
cdq
inc
scas
push
das
cmp
or
popa
or
pop
cmp
cmps
fmul
mov
xor
inc
scas
xor
xchg
pop
pop
sbb
daa
or
fwait
iret
outs
shl
stos
sbb
je
jmp
imul
sbb
xor
(bad)
mov
jmp
mov
shl
nop
dec
test
enter
xchg
pop
sbb
pop
or
mov
sbb
aad
mov
nop
sbb
dec
inc
jnp
mov
push
dec
lahf
test
push
stos
addr16
pop
mov
pop
push
dec
push
lahf
push
mov
and
cmps
out
push
dec
push
and
or
lahf
(bad)
push
add
push
mov
pop
mov
aad
pop
xchg
push
pop
and
and
add
push
jb
push
inc
add
sbb
mov
xchg
mov
xchg
dec
inc
push
inc
repnz
rcl
add
in
mov
test
mov
retf
push
or
(bad)
sub
(bad)
sub
lahf
xor
dec
xlat
dec
out
fisubr
add
dec
out
cmp
push
pop
mov
or
ins
push
push
pop
aaa
mov
aaa
push
fcmovb
push
pusha
xor
in
call
(bad)
fbstp
push
sub
arpl
out
push
outs
ja
mov
xor
rol
add
ds
inc
nop
push
cmp
hlt
push
scas
mov
xor
mov
jbe
aas
cmp
and
cmp
aas
cmp
adc
nop
inc
pop
add
sub
sub
inc
or
daa
jne
mov
adc
xchg
add
mov
pop
xor
cmp
xor
adc
jne
dec
xchg
xor
stos
loop
outs
daa
xor
leave
push
xor
ins
sbb
pop
cmp
xor
data16
pusha
pop
add
jb
in
cmp
add
je
jb
repnz
xor
xor
and
ss
jb
pop
ss
je
add
pop
aaa
leave
inc
jb
aaa
aaa
sub
cmp
xchg
stos
mov
lahf
cmp
adc
xchg
dec
sbb
aaa
and
add
shl
out
cmp
inc
jb
cmp
push
ret
xchg
jnp
out
sbb
xchg
dec
add
sbb
cmps
push
mov
push
ss
aas
fiadd
in
push
aaa
js
aas
adc
push
mov
outs
aas
scas
pop
ins
mov
aaa
mov
aas
dec
adc
xchg
jg
inc
xor
and
setae
cwde
dec
rcr
xor
mov
xor
cdq
call
es
dec
out
xor
and
sub
shr
daa
and
imul
pop
adc
fbstp
aaa
inc
pop
jb
xor
cmp
inc
retf
cmps
mov
jmp
sub
adc
mov
imul
lahf
ins
daa
sbb
mov
test
in
mov
push
and
jbe
inc
pop
iret
push
mov
pushf
out
dec
js
fwait
pop
sbb
mov
or
addr16
jmp
mov
push
iret
push
jp
sub
sub
dec
fwait
mov
sbb
imul
or
xchg
sub
aas
scas
push
pop
mov
test
pop
push
mov
inc
push
retf
sbb
inc
je
data16
jmp
add
cmps
adc
imul
fdivr
inc
jle
sub
dec
mov
dec
aas
gs
(bad)
cmp
addr16
dec
je
add
ss
mov
push
cwde
jo
cmp
pop
mov
jne
cs
inc
add
dec
inc
lods
add
cmp
bound
adc
xchg
(bad)
js
push
push
mov
xor
adc
inc
shl
ret
fs
and
pop
or
push
cmps
push
inc
xor
pop
or
push
sbb
fild
xor
loopne
mov
nop
mov
imul
sti
imul
test
mov
or
imul
pop
js
bound
xlat
mov
add
add
inc
mov
lods
rol
push
dec
scas
xor
stos
jge
out
inc
fiadd
sub
xchg
xor
xor
cs
sbb
sub
mov
dec
mov
fiadd
ja
add
stos
stos
addr16
push
pop
stos
push
outs
dec
xlat
dec
and
or
daa
(bad)
aas
xor
dec
adc
das
xor
add
push
sbb
mov
xlat
xor
ret
rol
push
scas
cmps
mov
mov
rol
mov
repnz
je
popa
(bad)
mov
and
inc
ficom
push
pop
imul
push
lods
mov
or
mov
leave
mov
xor
stos
mov
sub
push
mov
fbld
jg
inc
jmp
sbb
ins
cmps
add
ficomp
and
arpl
push
jns
push
push
sbb
ja
test
outs
scas
fcmovu
mov
jg
jmp
ins
leave
shl
cmpps
cmp
jb
and
jbe
fist
nop
sub
ret
(bad)
adc
mov
or
scas
or
pop
enter
xchg
mov
iret
pop
aam
int
dec
fwait
jb
nop
sub
mov
xlat
or
push
adc
stos
jo
inc
not
pusha
push
popa
and
cmp
iret
pusha
aam
lea
sub
dec
adc
stos
pop
fist
push
mov
adc
inc
iret
dec
sub
push
pusha
scas
and
arpl
sub
cmp
sub
mov
push
push
push
test
aas
pop
or
lahf
sbb
mov
dec
push
jecxz
mov
pop
ins
pop
xchg
mov
jae
pop
fidiv
push
nop
or
inc
or
sbb
imul
fwait
pop
aaa
(bad)
mov
test
push
mov
sub
jecxz
adc
test
inc
push
and
dec
jecxz
add
aaa
pop
pop
pop
push
inc
ins
sub
dec
iret
adc
pop
xor
add
adc
adc
pop
in
sbb
pop
lds
push
mov
xor
shl
daa
pop
ja
push
test
imul
push
inc
cmp
je
push
inc
push
stos
add
inc
lahf
adc
aas
dec
or
fidiv
add
xchg
cmc
push
daa
je
(bad)
aaa
loopne
inc
xchg
movups
mov
xchg
mov
sub
lahf
adc
add
rcl
push
jge
sbb
ja
fwait
mov
cmps
pusha
ror
xlat
pop
or
dec
iret
adc
jmp
adc
dec
jecxz
adc
fcmovu
sbb
iret
add
adc
and
aaa
add
pop
lahf
push
xor
dec
sub
cs
fild
inc
iret
and
sbb
aas
push
add
push
and
mov
nop
fsub
push
mov
adc
maskmovq
test
xor
dec
push
nop
sbb
out
cmp
sbb
xor
xor
xor
out
pusha
mov
sub
iret
pop
xlat
jg
dec
mov
jnp
(bad)
push
and
adc
push
cmp
pop
dec
pop
in
and
addr16
and
or
or
std
xor
sub
mov
iret
or
add
ja
ins
jno
in
or
mov
or
push
mov
mov
jns
data16
lahf
ins
(bad)
or
shr
mov
arpl
pop
xchg
addr16
sbb
xlat
jle
and
ins
cmps
lods
fld
inc
inc
jg
mov
push
pop
je
les
ja
inc
inc
or
cmps
pusha
cmovge
dec
cmp
lods
lea
cmovae
adc
or
aaa
push
mov
push
outs
sbb
mov
xor
adc
out
dec
dec
add
xor
mov
ror
shl
mov
jbe
push
push
adc
repz
in
adc
or
sub
(bad)
outs
call
or
sbb
pop
aas
add
push
dec
movs
push
aaa
(bad)
mov
stos
sub
lods
das
leave
push
or
xor
(bad)
pop
ja
mov
imul
sub
pop
pusha
xor
out
add
jae
mov
icebp
mov
xchg
xor
ja
cmp
cmps
ss
or
or
or
test
sub
mov
pop
sub
arpl
inc
call
das
push
addr16
sub
adc
add
xor
in
in
xor
add
add
add
test
push
mov
xor
mov
aaa
ja
imul
aam
es
sbb
test
xlat
mov
test
mov
jmp
push
ror
add
xchg
xchg
adc
jae
js
mov
and
or
mov
fs
das
(bad)
cmps
cmp
cmp
movups
adc
cmp
cmp
adc
push
pop
cmp
cmp
sbb
sbb
cmp
cmp
sbb
push
pop
cmp
cmp
add
add
cmp
cmp
add
push
pop
cmp
cmp
or
or
js
hlt
cmp
dec
mov
fistp
das
and
cmp
gs
mov
cmp
mov
xor
inc
dec
nop
movs
dec
sar
test
push
fmul
jae
fadd
dec
jne
arpl
(bad)
xor
dec
dec
dec
inc
add
js
add
ja
adc
jmp
test
into
push
push
inc
fisubr
cmps
syscall
dec
push
add
add
add
ror
hlt
mov
push
adc
mov
movs
loopne
sbb
movs
dec
fs
sub
pushf
out
and
inc
fs
sub
push
out
loopne
push
sbb
or
nop
stc
or
sub
test
lock
popa
add
bound
fcmovne
push
inc
mov
or
xadd
iret
xor
cwde
adc
mov
dec
fwait
pop
add
add
sub
or
retf
popa
dec
lds
jne
mov
jbe
add
pushf
hlt
or
cmp
cmp
adc
fs
jmp
xchg
cmp
add
icebp
fs
mov
jg
mov
and
adc
push
cmp
cmps
mov
or
pop
je
movs
or
add
outs
add
or
and
loopne
ret
add
jmp
add
or
add
scas
mov
cmp
adc
idiv
xor
or
call
dec
push
push
push
aas
cmp
fwait
pop
dec
mov
cmp
and
movs
ss
pop
add
pop
aaa
mov
adc
out
add
push
inc
mov
mov
sbb
test
mov
mov
jge
and
bound
sar
sbb
dec
out
(bad)
call
ja
jae
pop
dec
cmp
adc
mov
stc
nop
aas
or
(bad)
jmp
in
push
or
mov
sbb
mov
cmp
sub
ret
sub
mov
jmp
xor
sar
jbe
idiv
dec
(bad)
mov
jne
push
fsub
inc
call
push
outs
adc
cmp
mov
ret
mov
or
jmp
push
loop
shl
add
cmp
jne
enter
jnp
jle
xchg
sbb
popa
jecxz
dec
test
int3
xor
aas
jmp
adc
cmp
retf
dec
push
(bad)
in
enter
movs
hlt
shr
xor
jnp
dec
cmp
or
cmps
fwait
xor
les
jge
gs
das
adc
push
mov
cmp
fld
ds
test
das
mov
mov
pop
shl
sbb
and
cmp
dec
sar
call
leave
adc
test
xchg
rol
lea
adc
scas
repz
jb
inc
and
and
(bad)
in
out
xchg
sbb
iret
sub
and
inc
dec
jne
cmp
nop
(bad)
jge
push
inc
xchg
test
adc
fld
cld
mov
jl
or
inc
mov
and
pushf
mov
je
and
mov
xor
mov
rol
push
shld
es
(bad)
cmps
ror
hlt
adc
push
mov
ret
enter
and
cmp
adc
xchg
add
in
cmps
repz
out
push
inc
test
hlt
inc
push
cmp
repnz
out
sbb
xchg
test
add
dec
and
std
push
jmp
sbb
mov
dec
aaa
shl
test
imul
and
sub
inc
hlt
cmp
sbb
or
mov
add
sub
pop
enter
mov
or
push
add
add
(bad)
and
in
repnz
sbb
cmps
inc
jns
arpl
adc
call
in
repnz
sahf
add
add
xchg
pop
dec
in
out
mov
add
sbb
add
loopne
push
cs
outs
sbb
jge
loopne
fisubr
fild
das
cdq
jbe
mov
sti
stos
adc
or
nop
popf
sbb
add
fwait
pop
ror
enter
out
lock
pusha
pop
fadd
in
sbb
pop
neg
add
mov
xchg
retf
loopne
scas
dec
mov
sub
jecxz
adc
and
push
mov
fisubr
or
push
pop
les
fadd
add
push
adc
sub
add
add
lods
pop
loop
xchg
mov
es
(bad)
pop
(bad)
inc
loop
aaa
shl
loopne
stos
loop
fs
aas
jbe
jmp
imul
add
mov
enter
push
in
aad
add
xchg
shl
sub
dec
ror
enter
sbb
fimul
mov
mov
dec
jle
sub
hlt
xor
loope
sub
pusha
(bad)
inc
add
sbb
inc
dec
in
mov
int3
add
(bad)
fcom
ins
(bad)
push
pop
or
push
adc
xchg
loopne
rcr
nop
fimul
push
xchg
es
push
dec
inc
pop
loopne
jno
mov
push
push
clc
mov
jae
xchg
xor
dec
(bad)
aad
rol
ja
add
or
in
fsubrp
xor
cli
cmp
pop
jmp
sbb
ja
gs
lods
test
jne
das
dec
push
and
adc
imul
pusha
js
aam
jmp
ins
aas
add
add
fiadd
push
mov
fcom
fst
push
sahf
add
add
mov
push
add
jo
jo
sbb
and
push
push
loope
push
fsubr
inc
rcr
fsubr
mov
xor
or
mov
xchg
in
and
test
sub
out
imul
movs
cmp
movs
adc
dec
push
or
sbb
ss
mov
adc
fimul
adc
jae
and
loopne
pop
push
imul
mov
nop
mov
sub
leave
sti
adc
pop
jb
add
fdivr
and
(bad)
push
fist
les
or
push
xchg
dec
xor
shl
jo
mov
ins
inc
sbb
push
bound
pop
sbb
pusha
dec
and
ret
loopne
outs
std
xchg
jo
mov
add
adc
cmps
test
push
imul
xor
sbb
(bad)
das
jb
inc
xor
das
sub
inc
mov
nop
in
ins
cs
test
jle
ja
add
test
aaa
stc
push
xor
imul
cmps
jge
leave
ret
sub
inc
ret
pop
sub
push
dec
fchs
mov
(bad)
push
and
(bad)
out
push
jns
fnstcw
js
mov
inc
in
inc
adc
mov
mov
ret
(bad)
mov
inc
pop
ss
aas
sub
in
pop
push
add
jns
idiv
dec
push
inc
sub
and
add
lea
jbe
out
or
dec
ins
bound
dec
out
neg
cmp
dec
push
daa
mov
popf
das
inc
add
pop
(bad)
lea
mov
push
daa
dec
lahf
or
pop
push
push
pop
aam
mov
push
mov
inc
inc
pop
add
scas
in
add
adc
test
push
iret
sub
dec
push
mov
dec
mov
ja
jbe
popa
and
inc
push
xor
jp
imul
es
test
ror
inc
das
dec
or
or
dec
and
mov
inc
aaa
push
xchg
arpl
ins
jle
test
dec
xchg
add
pop
ret
jle
sbb
sbb
dec
arpl
dec
xchg
dec
mov
mov
sahf
fist
mov
outs
xor
sub
mov
mov
add
loop
call
daa
fdivr
and
lock
loope
adc
xor
or
xor
dec
mov
add
imul
jae
dec
fist
dec
fs
inc
xchg
push
pop
fild
loop
jne
pusha
push
das
and
loopne
sub
sbb
push
cmovae
inc
enter
pop
pop
xor
xor
ss
push
xor
fcmovnb
outs
mov
or
dec
inc
xor
pusha
and
fadd
pop
cmp
push
push
mov
(bad)
xor
sbb
push
enter
mov
push
shl
pop
cmp
inc
test
xor
scas
in
mov
in
sub
loop
das
xchg
jbe
push
ss
ret
cmp
aaa
pop
push
aaa
dec
scas
jbe
inc
dec
xor
aad
in
xor
cs
inc
loopne
in
inc
push
sub
ss
test
lea
ja
nop
sub
xor
leave
and
daa
inc
add
jbe
and
inc
daa
push
je
mov
push
pop
or
push
jb
fist
xor
mov
pop
pop
dec
and
inc
inc
pusha
and
xchg
add
xor
lds
lds
jg
cs
mov
pop
dec
(bad)
dec
scas
add
dec
xor
scas
mov
out
das
add
stos
les
addr16
dec
ins
push
sbb
ja
in
mov
dec
(bad)
xor
aas
xor
xor
cwde
(bad)
dec
mov
pop
rcl
push
pop
push
enter
push
mov
enter
push
push
cs
sub
add
jbe
inc
outs
push
pop
push
test
enter
xchg
sbb
push
mov
dec
mov
mov
mov
or
adc
pusha
test
es
retf
adc
and
pushf
imul
fwait
out
xor
mov
fwait
imul
sub
add
adc
mov
loopne
push
xchg
mov
enter
inc
push
fistp
dec
repnz
dec
test
mov
push
cld
adc
jo
push
push
jne
lock
pusha
(bad)
xor
jmp
arpl
and
sbb
and
imul
add
adc
jg
cmp
inc
aaa
add
adc
push
push
push
add
fistp
nop
xchg
ss
cmp
add
imul
pusha
outs
loop
xor
(bad)
sub
cmps
in
adc
or
inc
inc
push
sbb
cmp
imul
pop
pop
add
add
test
sbb
fucomip
push
test
(bad)
fild
pop
mov
cmp
ds
pusha
pop
sbb
dec
sub
gs
rol
(bad)
in
ins
push
mov
xor
and
fld
push
daa
mov
inc
inc
dec
adc
cld
pop
push
dec
fdivr
cmp
jg
ins
jmp
jl
or
mov
push
mov
(bad)
push
or
enter
push
sbb
sbb
cmp
fdiv
sbb
(bad)
mov
inc
sub
lock
rcr
gs
movs
rol
lea
dec
xchg
and
sbb
xchg
push
ss
sbb
add
in
adc
add
aad
and
inc
and
in
sub
pop
retf
mov
sub
repz
je
fst
add
pop
jle
cmp
cmp
and
and
add
je
mov
adc
push
and
adc
inc
adc
fwait
add
inc
daa
inc
push
sbb
outs
xchg
outs
lock
in
xchg
dec
sub
add
pop
jle
sub
cdq
outs
mov
push
or
pop
lea
jo
cs
popa
in
lea
not
nop
hlt
push
pop
sub
xchg
cwde
add
mov
mov
pushf
pop
mov
mov
mov
fdivr
das
fdivr
adc
mov
stc
call
push
lock
pusha
test
or
mov
inc
mov
mov
test
adc
stos
fs
sub
sbb
or
jae
xchg
imul
push
add
aas
cdq
xchg
arpl
sahf
push
sub
xchg
sub
cdq
xchg
sub
or
adc
addr16
or
stos
(bad)
jne
xor
adc
test
outs
shr
cmps
out
das
push
iret
pop
call
arpl
jns
(bad)
add
cmp
jl
inc
jg
add
je
imul
js
jge
fimul
nop
adc
nop
jae
jae
add
out
pop
or
push
dec
js
aas
cmp
rcr
pop
pushf
cmp
imul
mov
inc
and
(bad)
out
dec
push
enter
in
repnz
out
pop
bound
in
ret
shr
xchg
out
in
jne
cmp
mov
cmp
mov
inc
push
cdq
loopne
int3
jne
imul
(bad)
and
mov
push
rol
fs
jmp
push
arpl
push
cmp
or
xlat
push
cmp
rcl
stc
adc
in
push
sbb
shl
push
stos
mov
jbe
add
dec
pop
or
mov
mov
cmp
fwait
fs
les
sbb
fstp
jne
adc
fld
sbb
jmp
mov
mov
arpl
xor
cmp
idiv
xchg
adc
or
add
(bad)
and
jle
ret
loop
push
sbb
inc
or
cs
(bad)
mov
cmp
dec
inc
adc
je
hlt
pop
add
pusha
add
fs
popa
mov
lods
outs
add
mul
fild
add
jmp
aam
cld
mov
push
jnp
or
pop
dec
dec
add
mov
mov
xlat
pop
test
sbb
dec
js
dec
cs
and
fs
dec
pop
jb
enter
das
mov
int3
add
pop
jb
and
test
sbb
cs
nop
aas
xchg
leave
and
mov
dec
pop
jb
inc
xchg
js
das
mov
xchg
xchg
pop
jb
cmp
les
and
fs
and
xchg
in
dec
es
mov
mov
xchg
dec
pop
jb
adc
in
mov
xchg
pop
xor
sbb
jns
and
mov
int3
clc
jb
and
and
xchg
pop
lods
loopne
fwait
xchg
dec
cs
pop
nop
shl
pushf
pusha
xchg
pop
jb
mov
fs
popf
xor
in
dec
enter
jb
and
fs
xchg
pop
fmul
lahf
xor
dec
cs
xchg
dec
repnz
inc
mov
jb
mov
mov
mov
in
xchg
xlat
pop
cmp
pop
ror
mov
pushf
mov
mov
jb
and
adc
fs
xchg
xchg
pop
lock
test
and
mov
xchg
xchg
pop
jb
loopne
test
cs
xchg
pop
xor
cmp
mov
mov
dec
cmp
cmps
pop
int3
leave
and
push
nop
xchg
dec
pop
jb
or
push
and
mov
scas
dec
pop
jb
js
sbb
das
mov
rcl
pop
jb
and
movs
loopne
fs
xchg
xor
dec
cs
push
mov
fs
xchg
pop
loopne
mov
leave
dec
cs
and
cwde
fmul
cdq
in
mov
rcl
pop
lods
cld
cs
in
push
mov
lock
xor
dec
cmp
cmp
mov
cs
and
or
push
mov
imul
cmps
pop
mov
pop
xor
dec
cmp
xchg
xchg
add
cmp
jb
and
adc
xor
xchg
dec
pop
pop
ror
shl
xchg
dec
mov
and
cdq
fmul
ror
pop
jnp
les
pop
or
das
mov
call
leave
and
call
xchg
dec
je
clc
jb
and
xor
js
in
dec
pop
or
push
cwde
leave
and
mov
mov
pop
jb
cld
cmp
cmps
es
mov
call
not
(bad)
pop
leave
and
mov
xchg
dec
pop
jb
add
dec
scas
lods
mov
(bad)
pop
pushf
pop
xor
dec
add
ins
movs
cdq
in
xchg
in
shl
dec
cs
and
or
xchg
dec
cs
inc
jl
and
aad
int3
dec
cs
in
(bad)
cwde
in
pop
xor
dec
xlat
nop
fsub
mov
int3
sbb
pop
jb
and
les
fidivr
mov
das
xor
ins
mov
xchg
xchg
pop
cld
pop
fdiv
frstor
xchg
dec
pop
jb
sub
push
mov
pop
jb
mov
ins
in
and
loope
pop
xchg
xchg
pop
jb
fsub
dec
cs
xchg
pop
xor
cmp
jl
or
mov
xchg
fcomp
dec
and
jo
ins
in
and
cmps
pop
xchg
dec
pop
jb
cmp
jl
(bad)
hlt
mov
mov
pop
mov
sub
jb
and
fs
xchg
pop
in
sbb
dec
xchg
dec
cs
xchg
dec
repnz
inc
js
pop
jb
lods
fmul
cs
xchg
shl
ror
lahf
mov
dec
inc
adc
in
in
mov
and
cld
das
sub
pop
sbb
xchg
jo
add
cmps
and
push
nop
daa
mov
mov
mov
add
mov
dec
call
mov
sbb
and
add
stos
adc
mov
outs
sub
pop
push
shr
and
cwde
cdq
clc
(bad)
in
ficom
pop
cld
xchg
mov
aam
sub
and
and
popa
jp
push
jb
out
pop
sbb
or
cmp
push
pop
or
add
test
shl
retf
xchg
imul
mov
fmul
inc
xchg
cmc
adc
add
add
jb
mov
sub
mov
jge
or
lock
adc
int3
and
and
ret
out
bound
movs
lahf
mov
mov
aam
lock
rcr
aaa
(bad)
int3
mov
sbb
ins
add
shr
das
add
jb
jbe
scas
movs
es
jle
add
jne
add
adc
das
cmps
xor
pop
enter
imul
add
das
pop
adc
ins
shr
arpl
bound
pop
and
jne
ja
inc
shr
adc
mov
ins
mov
xchg
xchg
jb
pop
ja
rcl
jp
stos
xchg
scas
xlat
test
retf
addr16
stos
mov
addr16
(bad)
sub
pop
mov
adc
jg
jbe
add
pop
in
in
xor
xchg
push
xor
pop
adc
adc
inc
pop
movlps
imul
cmp
lods
arpl
add
jno
addr16
xchg
outs
jo
or
adc
add
ins
das
outs
mov
ja
outs
mov
in
jg
jnp
and
adc
das
pop
inc
push
ret
cmps
jae
pop
ins
in
inc
cs
mov
mov
daa
das
pop
in
and
adc
jae
mov
scas
addr16
pop
cmp
das
push
ret
xor
mov
inc
das
lea
cmp
outs
pop
repz
dec
mov
add
fsub
aaa
imul
rcr
jb
xor
inc
xlat
xchg
fcom
push
fbld
push
fidivr
arpl
jb
repz
cmp
cmp
xor
push
je
or
mov
sbb
gs
jb
ds
dec
inc
je
div
mul
(bad)
ins
push
fst
aaa
jne
das
popa
push
scas
not
sbb
daa
push
imul
gs
adc
pop
das
outs
push
jmp
aas
push
pop
in
push
fsubr
mov
add
xchg
and
shl
mov
rcr
mov
jo
js
daa
cmps
div
jo
out
outs
daa
inc
pop
je
and
call
pusha
push
addr16
adc
xchg
daa
arpl
xor
fbstp
or
stos
imul
ret
push
fld
sbb
add
pop
jo
stos
mov
adc
(bad)
das
pop
push
and
pop
je
arpl
xor
mov
ja
ds
shl
push
ins
jbe
aas
sub
xor
sbb
lahf
lock
dec
ins
mov
aad
push
xlat
jb
(bad)
jmp
add
mov
or
jo
and
fbstp
(bad)
push
test
jbe
rcr
daa
sub
jbe
adc
xchg
sbb
aas
cmp
popa
xor
nop
mov
pop
sub
repz
data16
rcl
ret
or
ja
les
inc
fimul
pop
mov
dec
jb
sub
jnp
add
pop
daa
push
loopne
and
adc
das
add
outs
jo
mov
cmps
iret
sbb
add
mov
xchg
mov
xor
cmp
pop
jp
daa
mov
or
xlat
or
call
adc
mov
daa
pmuludq
push
sti
add
jb
outs
jb
push
jb
mov
(bad)
and
in
lea
jp
stos
adc
cmp
(bad)
push
out
xor
push
sbb
xor
aas
outs
outs
push
fwait
xor
and
jg
inc
jnp
jbe
outs
sub
shl
das
daa
popa
xor
and
inc
push
fcomp
addr16
fmul
adc
lea
cmps
daa
add
or
xchg
add
imul
jbe
shr
jbe
jbe
push
xchg
or
push
daa
push
imul
rcl
and
fild
xor
cld
ret
ins
imul
ins
xchg
(bad)
jbe
pop
aaa
push
and
xor
mov
sbb
imul
push
mov
inc
popa
ja
pop
shr
fidiv
push
add
aaa
xlat
adc
dec
outs
mov
sub
outs
push
or
jne
push
bound
lds
arpl
int3
push
das
add
sbb
and
retf
push
inc
xchg
loopne
out
mov
das
out
pop
fist
mov
adc
(bad)
es
sar
push
arpl
and
leave
add
push
jb
sbb
js
lds
inc
sbb
adc
mov
out
aaa
push
sbb
push
pop
(bad)
ins
retf
aad
or
sub
sbb
ret
pop
sbb
imul
adc
mov
enter
mov
inc
jne
pusha
inc
movs
stos
fbstp
outs
lahf
mov
cmp
loop
fs
jae
inc
in
scas
in
bound
ss
repz
mov
addr16
xchg
sbb
inc
xchg
xchg
bnd
or
mov
ins
push
(bad)
lea
stos
inc
scas
mov
add
lahf
xchg
outs
ret
sub
sbb
add
push
push
pop
sub
add
ror
shr
(bad)
(bad)
jg
xchg
pop
mov
aam
cmc
add
(bad)
bound
mov
(bad)
jp
dec
sbb
addr16
push
adc
xor
bound
jnp
(bad)
div
xor
and
outs
arpl
imul
mov
or
nop
and
xor
out
push
push
je
sub
fild
mov
outs
outs
ins
or
pop
popa
ja
jg
jne
inc
inc
push
sub
jb
js
cmp
addr16
add
xchg
push
ins
scas
push
and
lods
daa
lahf
into
mov
imul
adc
test
aad
iret
mov
inc
xchg
dec
cmps
jno
pop
fistp
lahf
addr16
xchg
pop
push
push
ins
add
shr
daa
arpl
ficom
sbb
daa
jo
arpl
sub
aaa
jo
jmp
mov
scas
out
jg
xor
or
xchg
mov
push
pop
stos
pop
xchg
jno
adc
jg
push
popa
xor
mov
imul
stc
stos
jp
dec
fwait
push
inc
jae
push
inc
mov
mov
xlat
lea
inc
popa
imul
cmp
nop
sbb
jbe
(bad)
fstp
inc
stos
pop
add
ret
inc
imul
xchg
dec
imul
fwait
pop
jmp
mov
ror
(bad)
or
xchg
pop
fild
sub
pop
and
sub
push
sub
loopne
xlat
(bad)
cmp
mov
lds
popa
sbb
jbe
and
(bad)
sub
add
add
cmp
pusha
xor
inc
cmp
test
xchg
shr
pop
xchg
jae
les
mov
pop
gs
add
xchg
jbe
jns
xor
sbb
sbb
add
mov
stos
jg
jg
fwait
mov
repz
jae
jle
ret
mov
in
and
xchg
ins
pop
ins
je
add
and
ja
fidiv
mov
(bad)
push
mov
dec
pop
fidivr
inc
inc
jnp
(bad)
scas
or
aaa
mov
pop
mov
cmp
xchg
cmc
push
leave
arpl
inc
nop
sub
aad
push
daa
and
sbb
scas
sbb
push
mov
mov
add
xor
iret
xor
and
or
andnps
(bad)
sub
sub
and
daa
xor
xchg
adc
fucomip
jmp
scas
jo
test
stos
jg
add
outs
(bad)
mov
push
inc
inc
cwde
pop
sar
jae
inc
lea
mov
daa
jnp
fwait
in
pop
and
mov
imul
ss
xchg
out
xchg
xchg
jne
ja
mov
das
mov
push
inc
(bad)
jne
and
ficomp
mov
cmps
je
stc
in
push
ja
fs
mov
xor
bound
sub
mov
fisub
push
jnp
push
movs
ins
loop
jp
sbb
pop
xor
call
neg
jg
dec
inc
movs
jb
pop
nop
mov
ins
inc
adc
test
shr
ins
jae
lea
jo
mov
and
pushf
lods
stos
jecxz
jmp
sub
cmp
ss
xchg
xor
outs
jb
pop
xchg
sahf
icebp
adc
dec
push
mov
or
jbe
bound
inc
sbb
xchg
je
inc
inc
iret
ret
xlat
sahf
push
inc
or
fs
cmps
or
aad
mov
push
adc
pop
xchg
je
xor
outs
lock
push
mov
xchg
addr16
sub
rcl
(bad)
pop
outs
push
popa
imul
out
test
jne
outs
mov
imul
stos
xchg
mov
xchg
(bad)
lds
and
sub
jl
inc
outs
add
xor
fiadd
outs
xor
sbb
push
outs
iret
jae
cmps
jbe
cmps
mov
imul
scas
dec
cmp
aas
sub
adc
jnp
cmp
das
or
mov
xor
jb
jo
mov
xchg
lds
add
iret
inc
sbb
ins
dec
cmp
sbb
add
fcom
xor
jo
xor
xor
or
sbb
xlat
jae
ja
add
popa
stos
push
enter
mov
sub
ja
das
je
pusha
mov
scas
or
inc
push
sub
xor
clc
ret
fistp
imul
cmp
test
mov
je
in
cmp
xor
or
pop
inc
loopne
les
pop
and
add
sbb
lahf
pop
xor
xor
add
and
mov
pop
out
lods
and
jae
pop
xor
sbb
add
and
push
and
jb
jno
push
lods
inc
sbb
fld
ds
nop
mov
jne
adc
jg
sub
pop
pop
outs
outs
push
adc
(bad)
data16
pop
pop
dec
pop
ror
push
pop
cwde
mov
cmp
outs
xchg
aam
mov
adc
sbb
sbb
jo
mov
push
xchg
je
inc
pusha
aas
inc
ja
test
or
(bad)
jo
jae
jb
enter
mov
jb
imul
movs
pshufw
adc
aas
(bad)
jb
push
adc
xlat
loope
aaa
adc
es
xchg
iret
and
repz
rcr
inc
sbb
push
jb
aas
test
aad
ja
mov
stos
mov
(bad)
es
mov
stos
or
mov
inc
sub
pusha
scas
xor
lahf
xlat
ins
push
mov
adc
mov
sub
xchg
push
or
mov
or
mov
shr
js
xchg
and
or
mov
mov
scas
push
sub
push
sbb
stos
adc
ja
ins
sub
imul
stos
push
inc
push
aad
jmp
hlt
adc
inc
sbb
push
xor
inc
ins
push
ror
pop
push
xchg
sbb
imul
imul
aas
addr16
push
jp
dec
push
push
adc
pop
cs
pop
inc
mov
push
dec
sub
xor
arpl
ins
push
fs
and
imul
pop
push
sti
jmp
out
sub
xor
outs
ror
dec
or
(bad)
addr16
xlat
ja
(bad)
mov
imul
lods
push
xchg
mov
(bad)
push
adc
push
jb
push
push
push
sub
cs
ja
cmp
jae
xor
sbb
adc
movs
sub
xchg
push
jb
inc
scas
pop
ja
in
cmc
shr
outs
ja
in
in
jo
mov
in
xchg
sub
outs
outs
test
adc
sub
adc
das
jae
push
add
or
mov
push
push
jb
pop
shr
pop
test
bound
arpl
mov
push
xchg
and
pop
pop
stos
add
pop
dec
inc
xor
daa
lahf
jae
sub
out
fs
sub
imul
cmps
loopne
mov
stos
nop
inc
scas
addr16
xchg
loopne
ja
xlat
aaa
mov
cmps
mov
xchg
stos
pop
adc
xchg
xor
mov
add
push
data16
jb
push
rcl
ja
(bad)
adc
sbb
push
mov
and
imul
or
rcl
dec
pop
adc
push
pop
xchg
mov
xchg
cmps
cmp
inc
stos
cli
adc
jno
ja
adc
push
push
inc
stos
and
adc
inc
push
(bad)
ja
jbe
sub
xlat
sbb
jnp
ins
loop
imul
cmp
xchg
es
outs
arpl
mov
add
daa
mov
mov
jg
addr16
or
sub
xchg
ins
xchg
adc
jb
lea
ret
push
ja
and
lods
call
loope
push
ret
cs
mov
je
jns
clc
mov
aaa
das
jb
mov
arpl
push
dec
or
inc
loopne
xchg
pop
adc
dec
pop
fistp
xlat
sar
test
xchg
stos
sti
fbstp
stos
mov
aam
dec
ret
daa
fistp
icebp
push
dec
mov
jg
(bad)
dec
movs
lods
dec
outs
sbb
inc
xchg
imul
jae
sub
push
sbb
pusha
adc
aas
sbb
fisttp
xchg
ins
inc
pop
pop
rol
pop
ret
mov
mov
ds
add
(bad)
xor
mov
aad
pop
aas
sub
sbb
daa
or
mov
xchg
jae
sbb
jp
pop
jb
jp
jo
xor
jae
push
loopne
xchg
add
mov
pop
push
test
or
mov
jo
dec
xlat
stos
popa
loop
xor
js
ins
mov
and
imul
ins
lahf
sbb
mov
cdq
pusha
(bad)
cmps
xchg
loope
xor
js
inc
sub
pop
inc
scas
fisub
mov
fs
test
mov
adc
and
add
outs
adc
jnp
push
shl
adc
xchg
stos
mov
pop
stos
jno
ins
jg
outs
xchg
xor
mov
stos
push
retf
mov
jmp
(bad)
push
mov
aad
mov
daa
sub
ins
adc
daa
xor
or
sub
sub
sbb
arpl
mov
jp
into
aaa
push
addr16
dec
jmp
outs
jo
xlat
scas
rcl
in
lea
adc
or
jbe
pshufw
fld
push
sub
pop
sub
repnz
in
(bad)
addr16
js
rol
adc
pop
and
jb
push
adc
addr16
add
out
adc
or
das
mov
das
lahf
or
mov
bound
scas
bound
pop
je
push
iret
mov
(bad)
mov
aad
xor
inc
in
lea
and
das
ins
inc
mov
cmp
pop
dec
inc
sub
daa
or
push
jmp
ja
inc
jno
push
jg
daa
and
pop
or
jo
(bad)
xchg
ins
js
pusha
push
mov
outs
pop
pop
retf
cmp
push
adc
cmovg
xchg
test
pop
repnz
(bad)
ror
sbb
inc
adc
adc
add
and
sbb
sub
ss
pop
js
pop
adc
and
fs
or
hlt
adc
aaa
push
fwait
lock
xchg
std
cmp
mov
movs
mov
mov
loopne
repnz
and
push
cmp
fidiv
add
je
jp
mov
ja
in
jmp
loop
jl
or
inc
lock
push
mov
shl
sbb
cmp
adc
outs
fimul
jmp
mov
jecxz
inc
and
call
in
lock
mov
pop
and
dec
das
or
xchg
fwait
and
xchg
aas
rol
xchg
(bad)
cmp
jo
push
push
dec
and
(bad)
push
mov
jne
gs
push
loopne
fistp
lods
xor
push
(bad)
and
ret
and
xchg
or
dec
shl
dec
mov
inc
sbb
pop
test
adc
xchg
cmp
add
cmp
clc
cwde
bnd
xor
aaa
ret
adc
add
adc
xor
dec
jp
xor
rol
mov
or
inc
lahf
inc
and
xchg
repnz
scas
pusha
adc
fs
xor
push
hlt
and
dec
or
adc
enter
adc
mov
ins
adc
sbb
inc
xchg
xor
test
add
add
push
icebp
xor
test
imul
fisttp
adc
test
rol
(bad)
inc
sub
and
push
icebp
lock
add
(bad)
xor
pop
and
ins
push
add
inc
inc
loopne
and
and
es
add
sub
mov
and
ins
cwde
or
and
stos
add
jns
hlt
fs
pop
and
mov
or
lock
cld
imul
adc
push
sub
inc
dec
in
in
jmp
popa
push
cmp
jnp
dec
sub
cmp
adc
adc
sbb
push
rcl
xlat
mov
xchg
inc
dec
repz
cmc
fs
jo
inc
dec
into
pop
mov
call
js
les
movs
mov
pop
test
clc
or
lods
xchg
sub
scas
dec
aaa
xor
and
inc
sub
xchg
push
test
add
pop
pop
dec
push
fild
cmp
clc
cmps
xlat
inc
cmp
dec
and
pop
cmp
inc
cmp
test
add
sbb
gs
aaa
and
imul
dec
dec
push
xchg
jne
popf
clc
mov
ret
iret
popf
clc
cmp
pop
inc
inc
popa
mov
add
repnz
jp
and
push
cmovae
pop
mov
sbb
xlat
out
or
fiadd
mov
mov
and
pop
(bad)
jl
(bad)
cs
mov
pop
push
in
jge
mov
xor
sub
shl
fs
xor
pop
ret
leave
lock
sar
in
in
test
in
in
push
jo
mov
or
push
lock
inc
jmp
mov
fsubr
ret
mov
ss
inc
or
lock
sbb
sbb
fdiv
push
sbb
add
add
aam
pop
data16
adc
xchg
inc
imul
mov
int
push
inc
popa
sub
and
test
lahf
dec
sub
sbb
mov
mov
fiadd
ss
pop
dec
pop
push
xlat
push
sbb
js
jmp
push
pop
cmp
push
aaa
jge
push
dec
pop
jg
and
pop
adc
pop
xchg
js
rcl
inc
xchg
test
test
addr16
lahf
add
and
xchg
lock
sbb
ins
add
int3
mov
push
(bad)
mov
(bad)
jno
sti
add
lahf
fcom
cmp
xlat
push
dec
in
int
and
mov
pop
clc
aas
jne
push
dec
out
stos
add
imul
in
out
cmp
push
jp
ds
sbb
mov
mov
xchg
and
and
lea
jle
xchg
jae
cmp
push
jo
dec
jne
bound
add
pop
inc
jmp
xor
jne
adc
loopne
imul
sub
fchs
sub
mov
aad
popf
daa
mov
cmp
cmp
sbb
lock
fs
or
mov
je
xor
cs
mov
or
pushf
inc
and
add
cwde
mov
rcr
add
add
fdivr
sbb
push
in
test
stos
ret
outs
mov
add
dec
xchg
inc
sub
sbb
call
adc
test
dec
jne
nop
retf
in
xchg
pop
add
js
or
inc
mov
mov
(bad)
inc
or
ror
dec
and
outs
(bad)
sub
cdq
loopne
fmul
dec
dec
fcom
ror
mov
pop
pop
add
add
call
cmp
inc
pusha
scas
push
pop
test
(bad)
cmp
fmul
into
mov
in
in
ins
and
jmp
in
sub
stos
jecxz
fmul
fsubr
je
dec
rol
push
pusha
add
jne
push
sbb
dec
aaa
push
and
add
fcomp
inc
jb
pop
or
in
mov
push
cmp
fmul
aam
nop
in
add
aam
pop
mov
retf
push
sbb
inc
mov
cdq
xchg
cmp
mov
aam
adc
or
xor
pop
call
push
in
add
in
mov
xchg
jo
xchg
and
ds
sbb
sbb
int3
test
int3
imul
test
jbe
cmps
fwait
cld
movs
in
xor
fsubr
in
adc
retf
xchg
mov
mov
pusha
inc
lds
shr
or
mov
mov
add
mov
lods
and
nop
and
enter
sbb
pop
xchg
pop
scas
test
mov
cmc
mov
pop
xor
pop
push
pusha
cmps
pop
mov
mov
cmps
rcl
nop
sub
mov
push
mov
icebp
mov
leave
fidivr
and
sbb
sub
mov
adc
or
xchg
pop
or
enter
jecxz
adc
sar
mov
inc
jb
mov
pop
and
mov
mov
inc
loope
sar
jns
aad
add
(bad)
xor
push
push
add
test
add
push
add
and
jae
mov
cli
stc
lea
seto
xor
out
xor
and
sbb
movs
xlat
mov
and
or
push
sub
inc
fst
int
push
sbb
inc
test
ja
inc
jae
and
pushf
mov
bound
call
movs
jp
movs
adc
bound
mov
loopne
je
dec
imul
(bad)
imul
sahf
in
inc
mov
in
pop
shl
jb
sub
cwde
xchg
seto
repz
and
add
cmp
jb
sub
push
popf
and
nop
push
push
loopne
xchg
mov
mov
sbb
sar
popf
push
mov
mov
mov
jl
sbb
adc
dec
push
mov
adc
jmp
fbstp
mov
or
sub
fcomp
mov
and
enter
adc
add
test
mov
xor
icebp
pop
mov
sbb
fs
mov
out
sbb
xchg
aad
test
call
out
enter
dec
es
movs
cmc
push
stos
inc
pop
add
adc
dec
mov
test
inc
jmp
call
jne
jmp
add
push
imul
fwait
add
jbe
js
mov
fild
inc
or
pop
dec
pop
pop
push
inc
pusha
jo
add
in
adc
dec
scas
daa
add
or
movs
and
out
popa
and
mov
pop
mov
shr
cmp
nop
lods
push
pushf
lahf
and
frstor
dec
repz
clc
cld
loopne
and
leave
inc
dec
inc
addr16
adc
jns
push
mov
or
retf
jo
je
push
xchg
fiadd
cdq
jbe
dec
cmovp
ficomp
cmp
call
dec
lods
outs
xchg
sar
mov
test
inc
nop
adc
adc
ss
ins
add
add
fmul
push
pop
jne
adc
aaa
jle
mov
imul
(bad)
jge
xor
jne
ret
pop
push
nop
arpl
mov
inc
mov
and
cmp
jge
pop
push
shl
test
adc
push
add
pop
push
fcom
inc
out
pop
inc
dec
add
cmp
pop
movs
dec
(bad)
xor
std
push
test
hlt
adc
push
xor
or
mov
je
and
aaa
out
and
out
pop
xor
adc
int
and
sub
or
dec
pop
addr16
fcomp
push
adc
push
pop
call
add
pop
push
aam
jmp
fs
inc
sub
mul
mov
inc
or
dec
jp
sbb
xchg
jno
xchg
xor
fldenv
dec
dec
test
mov
ret
loope
or
pop
nop
xchg
push
lock
(bad)
fst
add
test
jmp
aam
pop
or
test
cmp
adc
mov
jecxz
mov
sar
add
pop
mov
or
dec
dec
sub
cmp
pop
gs
add
dec
pop
jmp
sbb
add
push
adc
jns
add
cmp
or
test
pop
xchg
(bad)
sbb
adc
test
addr16
push
hlt
and
sub
in
stos
or
sub
and
and
mov
(bad)
out
adc
or
rcr
pop
add
adc
jns
dec
pop
(bad)
pusha
inc
daa
adc
and
mov
pushf
loopne
jmp
inc
cld
sbb
call
ja
adc
lods
nop/reserved
test
xchg
sbb
or
pop
xchg
(bad)
mov
xor
push
inc
push
and
lea
out
in
cs
or
dec
(bad)
lock
sub
ja
sbb
retf
(bad)
push
in
sbb
or
push
push
rcl
jb
fbld
(bad)
mov
shl
mov
xor
mov
jo
mov
inc
stc
and
push
adc
add
sub
bound
cmps
enter
mov
outs
or
fist
push
pop
sub
dec
fldcw
retf
fs
imul
sbb
pop
sub
xor
inc
dec
imul
test
fsubr
ror
sub
mov
and
push
inc
pop
inc
fmul
popa
or
mov
gs
mov
mov
popa
lds
test
dec
sbb
lods
mov
xor
mov
inc
hlt
push
mov
fnstsw
jmp
lock
xor
sbb
adc
push
cmp
fs
inc
scas
leave
mov
(bad)
shl
push
xor
cmp
imul
in
cmp
dec
jne
out
sbb
dec
cli
inc
and
mov
mov
rol
xor
and
call
scas
and
in
add
scas
mov
lods
and
xchg
movs
jo
push
cmp
inc
loope
test
fld
xchg
sbb
add
pop
adc
rcl
adc
dec
push
fst
push
adc
or
sub
je
or
sub
or
add
jbe
es
sbb
or
add
inc
fdivr
daa
xor
push
pop
es
scas
push
leave
xor
enter
xor
adc
setbe
inc
addr16
xchg
aaa
inc
dec
fnsave
ret
xor
inc
popf
cmp
mov
ret
cdq
dec
add
pop
mov
push
or
lahf
or
rol
jge
cmp
call
inc
lahf
pop
fisub
add
aas
push
es
xchg
or
cmp
lods
xchg
sub
mov
enter
and
sar
cmp
xchg
or
adc
scas
xor
pop
and
add
dec
cmp
jae
and
jmp
or
bound
loop
dec
pop
ret
ret
push
pop
(bad)
or
or
adc
(bad)
and
enter
and
gs
aas
and
clc
sub
dec
cdq
inc
mov
nop
mov
cmps
sub
fidiv
or
and
or
push
inc
clc
sbb
sti
push
leave
and
aas
and
movs
int3
or
sbb
and
in
sub
sub
xchg
and
fwait
add
inc
adc
fs
dec
mov
pop
outs
ins
sbb
pop
in
scas
pop
mov
pushf
pusha
adc
sbb
xchg
popa
adc
add
lds
jno
aas
or
mov
ins
or
nop
mov
(bad)
leave
jnp
fimul
or
inc
push
test
add
inc
sahf
pushf
int
es
or
mov
or
or
sbb
push
sub
add
stc
push
adc
idiv
add
je
add
mov
jns
push
add
jae
add
or
push
xchg
popa
imul
les
push
test
jbe
js
and
outs
or
ficomp
add
sbb
gs
imul
inc
adc
stc
xor
sub
stos
and
dec
cmp
add
adc
bound
xchg
and
in
cs
sbb
test
lods
push
add
mov
xor
jne
repnz
gs
jl
or
dec
adc
js
pop
or
lea
leave
inc
xor
add
fsub
add
jbe
pop
call
fbstp
repz
jae
ret
xchg
ja
sub
mov
test
and
fwait
adc
pop
pusha
aaa
mov
nop
pop
fbstp
imul
or
add
pop
xchg
sbb
sub
jo
scas
push
push
pop
sbb
mov
rol
push
cmp
pop
pop
or
dec
pop
pop
iret
ins
jne
sub
retf
xchg
cmp
or
sbb
cmc
aaa
leave
xor
and
(bad)
sub
and
add
or
xor
pop
jne
(bad)
arpl
push
jp
fistp
scas
add
outs
inc
out
clc
and
or
shl
sub
test
(bad)
(bad)
fild
sub
push
xor
dec
pushf
lods
xor
popa
outs
mov
jnp
aam
cmps
ficom
jae
mov
xchg
fs
xor
mov
sub
dec
add
inc
and
adc
lods
jae
sbb
sub
mov
and
std
and
and
sub
(bad)
sub
fs
sub
sub
cmps
sahf
bound
sub
clc
rcl
sbb
call
pop
xor
xchg
outs
fcom
adc
ror
clc
mov
lea
jg
add
jns
mov
daa
sub
ret
cmp
bound
and
pop
mov
add
std
mov
ins
gs
push
pop
add
cmp
test
xor
inc
pusha
mov
sub
scas
xor
cmp
jmp
sub
sbb
ret
adc
jge
xlat
aam
dec
cmp
retf
sub
je
jp
sbb
jbe
jo
pusha
jne
dec
fld
xchg
or
gs
pop
mov
push
xchg
or
adc
int3
mov
mov
aas
push
in
clc
xchg
mov
push
sbb
test
inc
jne
loopne
rol
jmp
sub
mov
jecxz
jg
loope
sub
ins
call
test
test
add
pop
inc
(bad)
dec
add
mov
repnz
int
sub
sbb
xchg
add
mov
dec
sbb
add
push
in
or
nop
in
fs
outs
and
out
call
mov
sub
or
mov
inc
pusha
push
and
out
imul
mov
inc
push
(bad)
jne
xchg
and
push
in
in
mov
pop
(bad)
sub
stos
iret
lea
lds
push
ja
stos
cmp
and
(bad)
(bad)
jno
inc
mov
pop
and
or
inc
mov
das
gs
nop
and
push
push
add
mov
imul
adc
or
mov
and
mov
(bad)
lds
mov
div
xchg
(bad)
stos
mov
cmp
jmp
pop
xchg
ror
push
pop
jo
jge
rol
xchg
ss
cmp
loopne
pop
call
sub
je
xbegin
das
nop
add
stos
sub
out
or
inc
popa
jmp
pushf
cmp
repnz
sbb
je
hlt
les
adc
dec
mov
adc
rcr
and
js
or
dec
mov
dec
cmp
pop
in
sbb
ror
xor
aas
outs
or
xor
loopne
jl
dec
jle
pop
pusha
leave
pop
pop
xor
and
lods
xor
js
je
mov
push
(bad)
cwde
xor
out
xchg
and
jecxz
jnp
ins
pop
jmp
push
add
add
sub
dec
(bad)
mul
call
pmuludq
sbb
adc
add
es
sub
mov
out
fs
and
mov
or
dec
fild
adc
and
js
lahf
nop
and
push
xlat
daa
scas
dec
sbb
adc
ins
and
adc
mov
sbb
sub
ins
add
inc
or
add
push
mov
dec
mov
jns
xor
add
cld
pop
sub
pop
xor
mov
sub
sbb
call
addr16
mov
ds
imul
inc
pusha
enter
or
shl
push
movs
sub
pop
mov
push
cmp
mov
les
clc
fiadd
call
cmp
shl
or
call
jb
and
sbb
imul
push
pop
fwait
ss
push
jno
cmp
jmp
xchg
xchg
mov
mov
cmp
add
(bad)
jmp
mov
mov
xor
pop
dec
cmp
fs
loop
ficom
aam
xchg
cmp
in
aaa
aad
cmp
mov
add
push
mov
in
xor
cmp
inc
jo
mov
(bad)
cmp
adc
and
or
xor
add
inc
sbb
sbb
cmp
dec
and
adc
test
add
add
adc
inc
mov
xchg
test
js
es
inc
in
cmp
pop
mov
pop
add
add
add
adc
test
xor
(bad)
daa
je
mov
xor
inc
or
sbb
pop
push
neg
imul
cmp
out
mov
ror
and
enter
xchg
in
sub
push
add
mov
dec
and
push
add
pop
mov
pop
dec
mov
sti
sbb
dec
mov
sbb
inc
(bad)
sbb
dec
pop
dec
aam
pop
ret
pop
push
xor
or
pop
aad
and
js
add
inc
and
pop
mov
jbe
cmp
and
or
cwde
mov
retf
or
jb
add
add
xor
ds
adc
jl
ds
sub
adc
jb
cmp
int
adc
inc
gs
or
pop
inc
jecxz
sbb
push
rcl
dec
push
sub
xchg
sub
mov
push
mov
(bad)
xor
add
or
pop
(bad)
mov
push
inc
inc
gs
xchg
or
imul
(bad)
dec
push
inc
cmp
sub
inc
xchg
push
xor
cmps
pop
(bad)
out
pop
dec
xor
xchg
jo
in
ja
ret
push
or
les
(bad)
sbb
cmps
inc
or
retf
sub
jb
(bad)
cmp
mov
sbb
outs
bound
clc
lea
call
ins
and
popf
das
inc
cmp
xor
cmps
(bad)
std
jae
shl
loopne
cmps
or
xor
ss
add
cmp
cmp
pop
and
or
inc
dec
fimul
mov
inc
add
cld
inc
xchg
cmps
loopne
jns
cld
sbb
sub
arpl
cmp
dec
xchg
sbb
adc
jmp
(bad)
js
and
sub
jb
inc
(bad)
mov
lock
das
rcr
and
movs
enter
pop
lds
fcom
cmps
or
add
add
adc
(bad)
inc
add
inc
mov
adc
push
test
(bad)
xor
xchg
icebp
gs
adc
inc
mov
mov
xchg
xchg
or
inc
and
cdq
fs
je
or
test
cld
fisttp
and
inc
loope
pop
and
jo
cmp
daa
repnz
inc
outs
dec
inc
sub
inc
shr
inc
std
dec
outs
xor
and
xchg
inc
push
inc
adc
jb
ins
ins
add
push
adc
and
pusha
out
scas
clc
clc
(bad)
cld
js
xor
in
jno
inc
mov
xchg
hlt
push
clc
bswap
add
lods
movs
shl
xlat
sbb
or
inc
inc
and
jb
add
mov
clc
aaa
add
stos
mov
xchg
push
enter
inc
and
inc
jo
lea
scas
and
xchg
iret
and
and
cld
ss
dec
mov
leave
dec
dec
and
and
inc
xor
sub
cmps
push
and
mov
cmp
sbb
stc
xor
cld
cld
cmp
add
push
fs
daa
(bad)
pop
and
dec
push
adc
add
cmp
push
dec
nop
mov
in
mov
jno
xchg
stos
cwde
cmp
add
sbb
dec
sbb
push
pop
rol
sub
xor
nop
cwde
adc
das
pop
cmp
fst
mov
push
loope
dec
or
and
mov
push
aaa
dec
push
scas
and
jg
aaa
dec
rcr
mov
dec
add
push
nop
dec
push
fimul
cmovl
dec
push
pop
pop
shl
(bad)
push
gs
push
adc
push
xchg
lahf
and
inc
add
xchg
or
int
inc
mov
push
test
aas
and
or
je
xor
dec
popf
mov
dec
popa
mov
add
sbb
imul
sub
jns
pusha
and
push
inc
fwait
add
sbb
add
adc
and
icebp
lods
cmp
jo
out
push
clc
dec
push
jp
scas
push
(bad)
push
and
cmp
aam
jl
cmp
cmp
sub
cmp
dec
mov
dec
das
mul
scas
mov
in
push
dec
dec
pop
test
lahf
xor
outs
cmp
mov
xor
int3
push
adc
ret
popa
lods
nop
add
xor
mov
and
call
hlt
dec
add
pop
jg
cwde
test
sbb
int3
int3
and
xor
shl
mov
jnp
pop
mov
dec
add
stc
xor
rol
inc
or
sbb
pop
inc
dec
fistp
pop
add
adc
inc
inc
dec
jne
or
stc
sub
push
dec
push
gs
pop
and
aam
push
imul
rcl
adc
jne
icebp
inc
dec
int
inc
push
ficomp
inc
inc
adc
shr
push
adc
sub
or
and
pop
xchg
ss
cdq
add
and
loop
sub
out
jno
inc
outs
adc
jbe
add
add
cmp
or
in
cmp
aad
aaa
or
cmp
jge
inc
nop
mov
adc
cmp
adc
fild
add
ss
(bad)
push
dec
and
mov
push
add
inc
mov
push
dec
or
inc
or
add
pop
mov
ror
popa
cmp
add
xchg
xor
add
inc
or
popa
pop
inc
call
or
add
daa
and
in
arpl
mov
je
push
iret
lea
cwde
ret
adc
lock
pop
pop
sbb
sub
cmp
pop
cmp
sbb
add
add
xchg
add
adc
add
inc
dec
mov
popa
jo
add
dec
pop
pop
cmps
fcomp
xor
push
arpl
popa
mov
jmp
movs
xchg
(bad)
lahf
adc
sbb
nop
adc
jno
int3
xor
push
inc
add
addr16
add
jle
mov
mov
or
push
add
push
jbe
mov
imul
out
popa
add
mov
in
pop
sti
push
por
inc
sub
add
imul
xor
jmp
test
mov
xor
loope
leave
shl
or
in
enter
push
sbb
or
push
add
dec
ja
pop
push
push
add
push
aas
xor
imul
add
dec
inc
and
dec
jne
sbb
je
sbb
and
(bad)
mov
mov
and
inc
push
adc
sbb
adc
loope
punpckhdq
dec
les
loop
mov
rcl
inc
sbb
pop
sub
in
or
pop
mov
push
gs
pop
jp
aam
sbb
sub
cdq
cmp
add
xor
add
sbb
scas
adc
inc
add
mov
mov
out
or
loop
add
scas
rol
mov
gs
sbb
mov
dec
loopne
movs
movs
xchg
mov
dec
pop
mov
repnz
les
push
jb
push
add
pop
mov
xor
fild
inc
fnstenv
je
in
pop
aam
out
(bad)
dec
scas
or
add
push
push
popa
je
xor
jg
nop
fnstsw
ja
inc
jae
push
push
imul
ins
bound
jmp
sbb
rol
ja
adc
mov
inc
jmp
in
jmp
add
push
pop
xor
in
pop
pushf
pop
fbstp
gs
mov
push
movs
js
clc
pop
mov
in
add
jo
(bad)
sub
cli
jbe
xor
pop
add
clc
xor
or
inc
fldcw
and
mov
dec
pushf
ja
xor
aam
fbstp
xchg
cmp
dec
jl
pop
wbinvd
add
arpl
cmp
mov
xchg
sub
retf
sub
rcl
es
nop
ror
cmp
outs
aam
gs
xlat
mov
jo
icebp
icebp
pop
js
bound
xor
or
add
xchg
pop
aaa
and
dec
stos
push
jb
mov
cmp
pop
push
lahf
pop
adc
add
lock
gs
or
call
pusha
adc
xchg
mov
pop
gs
push
adc
pop
add
cmc
and
ds
xor
test
jns
call
sub
push
outs
pop
pop
sbb
xchg
cwde
lea
cmp
mov
add
jg
push
bnd
add
adc
lea
push
int
cdq
jae
mov
aad
and
and
push
xchg
addr16
jle
push
sbb
xlat
add
lods
add
push
ins
pop
push
out
leave
push
outs
test
pop
das
push
push
sbb
inc
(bad)
adc
popa
add
push
les
pusha
pop
pop
enter
ins
dec
pop
xchg
ins
ins
icebp
sub
mov
jbe
je
rcl
or
xchg
add
test
lods
pop
dec
and
scas
mov
add
movs
js
adc
add
js
or
mov
mov
or
lods
ja
jge
and
in
sub
mov
fwait
je
xor
or
push
push
neg
iret
add
and
adc
inc
jmp
push
mov
push
xor
add
fild
sbb
or
mov
in
jb
or
or
dec
pop
and
inc
mov
and
fcom
call
(bad)
clc
jbe
sub
xchg
cmp
das
shl
push
retf
add
cmp
das
or
retf
or
push
fs
loopne
jmp
dec
adc
push
mov
cmps
sbb
sub
and
outs
aam
jmp
jno
not
jmp
pusha
push
data16
xor
les
push
add
push
mov
xor
xchg
popa
gs
scas
es
rcl
es
sar
jle
or
icebp
(bad)
and
inc
es
ss
or
daa
jo
cmp
hlt
leave
retf
adc
jmp
nop
sar
jl
nop
or
(bad)
and
dec
retf
aaa
mov
in
xor
iret
daa
stc
call
jb
jl
sbb
sar
aaa
test
daa
frstor
and
mov
leave
mov
mov
adc
mov
xchg
pop
dec
dec
(bad)
pop
sar
sub
call
ret
xchg
mov
mov
dec
pop
lock
or
adc
sbb
in
mov
mov
pop
cli
imul
or
nop
fwait
gs
pop
ja
retf
sbb
add
ror
add
pop
cwde
(bad)
retf
sub
mov
cmp
gs
push
mov
les
data16
retfw
xlat
cld
scas
in
fdivr
add
cs
and
sbb
push
push
mov
xor
push
adc
or
push
and
xor
cmovs
cmp
cmp
js
call
mov
add
cmc
xor
popa
arpl
add
ja
ins
sbb
pop
and
bound
push
daa
adc
dec
mov
dec
rol
mov
cmp
sbb
jb
inc
add
aaa
and
push
add
sbb
xor
ss
sub
sbb
pop
adc
xor
repnz
(bad)
repnz
cmp
xchg
shl
and
inc
sbb
popa
ins
add
mov
mov
add
xor
fbld
int3
mov
adc
push
ret
daa
sub
ins
iret
xchg
mov
jnp
xchg
pop
and
dec
push
movs
add
dec
jo
or
daa
push
js
test
inc
inc
jb
ins
xor
fild
jl
adc
xchg
add
mov
jae
cmp
cmp
out
arpl
and
pop
addr16
mov
stos
push
add
pop
jo
sbb
mov
mov
out
jns
mov
loope
fidiv
cmps
ss
adc
push
or
and
ss
jecxz
xchg
loop
add
add
pop
popf
js
test
inc
pop
adc
sbb
aad
xor
push
test
test
pushf
xchg
xchg
pop
adc
xchg
pop
jle
movs
stos
and
adc
mov
and
movs
inc
push
mov
pop
pop
pop
mov
mov
or
push
leave
ja
mov
jns
sbb
ror
push
push
mov
xchg
mov
out
adc
ror
jns
adc
mov
or
jecxz
xchg
sub
push
push
enter
add
sub
jmp
pop
enter
(bad)
push
retf
xor
sahf
outs
xlat
(bad)
fiadd
xchg
inc
jo
add
xchg
dec
pop
repnz
mov
lods
inc
add
(bad)
(bad)
sbb
imul
xchg
enter
ins
dec
pop
mov
shl
sbb
mov
jmp
adc
je
pop
mov
mov
mov
dec
xor
adc
test
les
enter
xor
push
sub
mov
fist
cmps
verw
mov
push
add
inc
movs
mov
jo
cwde
fisub
stos
int3
sti
fidiv
in
aam
fcom
mov
push
cli
push
xchg
cmp
aaa
mov
and
test
inc
mov
add
sub
and
add
xchg
ret
hlt
add
sbb
adc
jae
mov
test
(bad)
cdq
pop
adc
xchg
or
fs
xlat
pop
push
das
aas
ret
retf
ins
cld
ins
dec
and
test
inc
outs
ret
outs
pop
add
xor
adc
leave
test
and
add
popa
sub
dec
popa
mov
aas
adc
fmul
test
(bad)
dec
cmp
je
sbb
push
add
push
or
or
fimul
dec
pop
stc
xchg
daa
js
cmps
and
cmp
dec
xchg
jp
dec
sbb
adc
adc
mov
fs
gs
test
retf
ficom
dec
in
fadd
inc
in
or
popa
rol
imul
mov
ins
mov
jmp
outs
sbb
or
jmp
outs
jnp
dec
les
jno
jnp
add
ins
jo
sub
dec
jecxz
pop
test
int
fisttp
sub
js
sub
sbb
push
aaa
and
xchg
mov
push
loope
sbb
sbb
out
and
pop
in
les
jmp
or
inc
jp
adc
fild
rol
and
gs
mov
xchg
pop
fwait
pop
push
je
add
(bad)
pop
and
ficom
or
inc
and
dec
int
add
or
inc
scas
fadd
inc
(bad)
mov
loopne
ret
or
xor
stos
neg
jnp
fwait
test
les
xchg
push
mov
(bad)
push
sub
mov
and
pop
jb
add
sbb
lea
sub
pop
jb
mov
jae
push
and
ds
push
pop
xchg
push
xor
aam
push
shl
loopne
and
xor
lds
add
aaa
add
ror
sub
rol
xor
ins
push
cmps
add
sub
ins
push
imul
das
push
add
fucomp
dec
mov
add
xor
fwait
cmp
xchg
add
mov
and
xchg
cmp
push
add
je
mov
push
idiv
lods
je
push
fld
cmp
jbe
int3
push
int3
enter
mov
arpl
cwde
gs
fwait
jae
fstp
cdq
xchg
sahf
push
in
pushf
mov
mov
xor
mov
dec
movs
test
mov
cdq
inc
and
mov
loope
leave
rep
xor
and
inc
test
nop
xor
mov
xchg
xor
dec
addr16
push
movs
or
sbb
and
and
or
mov
pop
mov
aaa
test
fs
cmp
mov
cmp
sub
jmp
shl
bound
mov
jmp
les
cdq
lahf
xchg
scas
mov
scas
loope
repz
ja
daa
fdivr
movs
ja
pop
push
inc
or
loope
and
push
jmp
and
push
jb
cwde
ins
aaa
pop
repnz
pushf
dec
inc
xchg
pushf
push
add
push
out
test
and
xchg
and
adc
sub
(bad)
inc
mov
push
in
dec
nop
nop
dec
inc
mov
push
push
xchg
pop
inc
call
or
sbb
push
mov
popa
pop
adc
adc
pop
sahf
mov
mov
sbb
cmps
pop
fs
in
inc
test
jmp
fimul
inc
lods
xor
push
add
push
push
mov
jb
add
push
rcr
dec
push
push
and
add
mul
and
in
mov
pop
(bad)
les
pusha
mov
cmp
mov
fwait
ja
mov
mov
pop
mov
cs
mov
mov
push
rcr
push
data16
push
mov
jl
or
push
mov
fisttp
lods
pop
jge
adc
mov
cmps
and
mov
in
loopne
pop
add
lahf
pop
or
imul
push
sub
add
or
inc
rol
sub
and
cwde
jge
imul
add
aas
add
nop
and
jnp
sbb
daa
das
push
jl
jmp
shl
dec
mov
dec
adc
sub
mov
push
sbb
jno
jl
fmul
mov
clc
pop
pop
cmp
in
push
sub
pop
dec
test
jno
or
push
sub
jbe
dec
adc
xor
xor
xchg
stos
sub
test
mov
sbb
daa
adc
rcr
xchg
pop
xchg
rcr
add
push
pop
pop
cmp
inc
inc
cs
and
jbe
jge
adc
push
jg
jle
aam
aad
mov
mov
ds
adc
mov
scas
inc
adc
popa
ret
inc
cdq
mov
inc
sub
xor
out
std
rol
and
cmp
(bad)
pusha
mov
pop
mov
movs
jno
movs
in
mov
aaa
dec
cwde
pop
(bad)
rcl
inc
and
mov
push
xchg
sbb
inc
jle
sbb
fiadd
dec
jns
dec
das
adc
ss
sub
(bad)
mov
les
jle
mov
mov
leave
push
das
outs
xchg
add
dec
jae
xchg
adc
nop
and
xor
das
push
jns
add
js
mov
xor
pop
rcl
xor
call
and
adc
imul
and
xchg
out
cmp
push
sar
mov
inc
sub
sub
shl
xor
xor
shl
cmp
inc
inc
cmp
rol
dec
dec
pop
sub
shl
push
pusha
pusha
or
mov
je
mov
adc
inc
mov
xchg
xchg
mov
push
adc
xchg
xchg
xchg
xchg
sbb
dec
(bad)
xor
cmp
jbe
or
cmp
xor
xor
xor
and
pusha
mov
xlat
test
jo
cmp
jp
nop
cmp
aad
or
out
or
xchg
xor
lock
xor
inc
or
aam
nop
add
pushf
mov
aad
xor
dec
cs
loopne
fsub
xchg
push
fmul
leave
gs
dec
fcomp
aam
in
leave
adc
shl
cdq
in
shl
int3
dec
lahf
dec
jb
and
in
sbb
inc
enter
enter
dec
inc
mov
in
mov
sub
imul
or
xor
inc
xor
sub
xor
cwde
mov
inc
enter
gs
cld
xor
stc
add
ret
mov
loopne
pop
xchg
jg
pushf
je
mov
push
and
outs
hlt
aad
ror
enter
and
cdq
movs
mov
sub
xor
hlt
inc
inc
add
cmps
jnp
je
in
jnp
jno
sbb
pop
pop
fwait
jmp
sbb
arpl
ss
dec
ret
loopne
movs
mov
fwait
jo
cld
int3
sub
and
leave
mov
jo
fcom
mov
sbb
mov
call
faddp
pop
pusha
push
lea
les
les
fs
xlat
or
mov
and
sti
dec
xchg
adc
fld
(bad)
movs
jmp
in
in
enter
push
cmp
adc
or
and
arpl
push
add
mov
xchg
xchg
or
push
sub
test
push
push
test
dec
xchg
push
pop
inc
ja
xchg
xor
adc
aaa
mov
add
push
scas
gs
inc
pop
or
adc
ret
aam
das
xchg
or
(bad)
cmp
ror
shl
xor
mov
std
jg
jae
shr
push
inc
cs
xlat
xchg
or
popa
mov
daa
cs
ins
mov
add
add
out
and
imul
std
stos
and
adc
adc
nop
inc
fmul
sar
das
in
mov
sbb
adc
cmp
sbb
dec
mov
sti
adc
int3
and
and
pop
or
xor
sub
push
and
neg
push
add
test
cmps
xor
sub
adc
mov
retf
fcomp
nop
pop
pop
(bad)
in
or
dec
adc
cmp
inc
mov
push
sbb
pusha
fs
hlt
sti
inc
push
in
mov
mov
bswap
add
or
mov
and
mov
and
inc
mov
lods
sub
sti
xchg
ds
add
jmp
popa
xchg
sub
lods
mov
add
xchg
stos
rol
xlat
mov
nop
mov
lods
add
and
add
ins
or
inc
cmp
iret
jae
sub
sub
jns
jns
(bad)
mov
lahf
lea
mov
and
leave
ins
or
xchg
hlt
sub
adc
pusha
ss
hlt
inc
sub
sub
cdq
adc
jae
adc
outs
repnz
and
ffreep
mov
xchg
pop
inc
pop
pop
cmp
mov
or
sub
mov
scas
inc
mov
out
add
push
int3
mov
inc
mov
je
sub
rcl
jg
dec
xchg
add
call
mov
jmp
sbb
cmps
outs
daa
mov
mov
sub
mov
arpl
mov
jns
je
sub
dec
pusha
push
and
jmp
pop
inc
xor
pop
xchg
cmps
or
ret
ds
daa
inc
scas
mov
mov
(bad)
pop
bound
and
pop
enter
mov
push
jp
adc
dec
jne
adc
sbb
loop
xchg
lahf
jbe
sub
or
sbb
xor
sbb
je
or
or
push
adc
push
test
(bad)
push
inc
sbb
daa
rol
adc
or
or
cmps
aad
mov
sub
mul
or
in
fwait
(bad)
ja
jae
jmp
lods
ins
push
outs
jg
push
push
pop
dec
je
pop
push
int
mov
je
jle
push
sti
and
or
jae
sub
cmp
lds
sbb
bound
sub
and
ja
sub
mov
xor
mov
inc
add
call
sbb
daa
outs
out
(bad)
xor
(bad)
bound
lahf
out
adc
jmp
cmp
add
ss
sub
sub
push
jbe
and
xchg
ins
xlat
shl
add
adc
sbb
or
lea
and
inc
add
pusha
push
daa
push
movlps
lds
dec
jnp
jle
xchg
adc
sbb
add
jl
adc
ds
cmp
mov
push
mov
call
inc
sub
sbb
sbb
jo
ins
push
imul
ins
mov
das
outs
jmp
(bad)
and
and
fldcw
pop
and
and
call
jno
fld
pop
and
out
imul
test
sbb
xchg
sti
dec
(bad)
retf
cmps
ss
push
int
or
sbb
div
(bad)
jnp
jmp
adc
popa
retf
enter
inc
movs
mov
cdq
xchg
lock
jbe
aam
mov
xor
inc
jns
xchg
mov
dec
test
ja
inc
sub
push
in
sbb
loopne
in
dec
popa
lods
ror
xor
pusha
or
push
(bad)
mov
push
sbb
ret
push
or
add
test
rol
gs
adc
fnstenv
jns
inc
adc
(bad)
jne
push
leave
cmp
sbb
sub
shl
mov
ins
xor
cld
xchg
mov
sbb
mov
push
je
pusha
jae
xchg
arpl
sub
and
xchg
xchg
adc
js
pushf
fstp
fcom
or
(bad)
ds
pop
cld
imul
mov
imul
cmps
je
inc
add
dec
push
shl
adc
call
in
imul
inc
or
add
dec
dec
cmp
push
jl
gs
cmp
retf
and
ret
xchg
xor
ins
call
pop
sub
test
sti
test
fcom
test
cmps
pop
pusha
cwde
xor
mov
cwde
das
outs
jecxz
push
mov
loope
xor
shl
mov
xchg
push
test
adc
pop
enter
and
jno
iret
xchg
jne
jno
mov
lods
inc
std
sahf
jge
mov
nop
mov
call
call
hlt
nop
lock
ror
xchg
in
mov
jbe
jbe
call
dec
call
cmp
mov
sahf
movs
test
mov
mov
and
enter
or
push
or
or
popf
or
mov
mov
popa
aaa
push
cmps
lods
inc
pop
and
pminub
add
mov
in
mov
sbb
cs
push
or
mov
mov
scas
rcl
jae
xlat
push
mov
adc
pop
jmp
pop
movs
sub
test
aaa
dec
xchg
inc
pop
push
je
fs
mov
lea
mov
nop
xchg
cdq
in
leave
xchg
pushf
pushf
lods
es
mov
pop
movs
test
fisttp
adc
lahf
mov
jmp
inc
push
repnz
push
add
arpl
inc
(bad)
stos
push
loopne
cmp
sbb
xlat
add
mov
mov
loop
outs
pop
add
pop
xchg
or
add
push
jo
cwde
sub
add
cmp
out
cmp
push
sub
sub
cwde
mov
cmp
inc
rol
ret
pop
xor
jmp
imul
shl
mov
mov
mov
in
mov
mov
add
xchg
mov
cdq
xchg
mov
and
dec
gs
xchg
jl
cmp
movs
jb
xchg
sub
push
test
pop
inc
dec
(bad)
sbb
mov
pop
jo
push
dec
or
sbb
cwde
cwde
je
ja
das
xor
outs
xlat
push
jge
mov
lods
dec
nop
nop
retf
test
inc
mov
pop
test
sub
sbb
(bad)
les
dec
mov
sub
add
add
shr
rcr
push
data16
out
xor
jmp
xchg
cmp
or
mov
xor
jo
out
inc
das
inc
inc
dec
(bad)
int
mov
pushf
aas
fld
inc
mov
sub
pushf
adc
in
push
mov
dec
jge
movs
add
test
xchg
or
xchg
inc
movs
cwde
sbb
popa
or
fisttp
cmp
mov
enter
cld
cmp
xor
test
jb
movs
push
pop
xchg
mov
jmp
push
add
sub
dec
xchg
mov
push
jb
addr16
mov
shr
shr
dec
adc
stos
retf
xchg
add
stc
aas
ret
movs
fst
adc
movs
or
jnp
and
ins
jbe
pop
ja
and
hlt
ins
ins
inc
cmp
shl
add
ins
pop
cmps
jno
cmc
(bad)
cmp
(bad)
mov
hlt
fdivr
adc
inc
inc
jb
and
mov
adc
in
test
test
inc
(bad)
or
inc
xor
push
test
js
push
or
adc
cmp
fucomip
int3
mov
inc
sahf
push
leave
cmps
int3
call
xor
cmp
aam
pusha
and
mov
stos
inc
popa
push
cmps
aaa
inc
popa
adc
(bad)
rol
jbe
mov
mov
adc
cdq
fs
mov
outs
sbb
imul
mov
mov
mov
fldcw
pop
ret
jmp
lock
mov
gs
push
dec
loopne
cmps
xor
push
ret
aas
adc
nop
gs
xlat
push
in
push
out
stos
js
mov
in
push
add
add
call
outs
scas
pop
sbb
mov
test
inc
or
pop
mov
das
mov
adc
lods
pop
out
inc
out
pop
mov
mov
or
push
js
or
pop
gs
or
je
outs
sub
sub
test
stos
cli
stos
pop
and
psraw
in
dec
je
das
mov
aaa
dec
dec
xor
stos
pop
mov
in
loopne
scas
mov
add
lods
xchg
dec
bound
or
dec
or
cmp
in
or
xor
push
ins
push
and
imul
adc
scas
lahf
cmps
outs
fwait
ret
lods
sbb
adc
mov
and
push
(bad)
push
and
out
inc
push
pop
lods
or
xor
mov
movs
mov
pusha
jno
adc
sub
mov
inc
es
pop
push
sbb
iret
or
dec
ds
adc
mov
mov
mov
cmps
adc
xlat
push
or
pusha
scas
scas
pop
scas
push
and
das
scas
push
or
add
and
push
fs
xchg
adc
scas
mov
(bad)
dec
fadd
hlt
loop
dec
or
push
pushf
sub
sti
test
mov
push
pop
sar
xor
leave
or
fadd
inc
xor
rol
clc
or
mov
dec
ja
push
shr
and
dec
or
imul
xchg
cli
test
mov
es
das
and
and
out
cdq
or
dec
pop
adc
test
cmp
add
xchg
les
or
pop
sub
add
push
push
dec
sti
pushf
fild
mov
and
add
mov
dec
ret
outs
push
in
popf
dec
push
mov
loopne
iret
pop
shl
movs
mov
pop
pop
and
shl
adc
cmp
cmp
and
mov
jb
jb
mov
mov
mov
jg
pop
xchg
ret
fdivr
stos
xchg
sub
rol
mov
shl
aas
pusha
mov
and
sbb
aas
fdiv
mov
and
inc
mov
pushf
dec
outs
xor
mov
or
movs
mov
(bad)
pop
(bad)
retf
mov
or
jnp
push
out
xchg
test
nop
mov
xor
inc
add
jne
dec
mov
and
jne
fwait
add
push
mov
adc
push
mov
loopne
imul
lea
add
pop
(bad)
mov
(bad)
dec
in
or
adc
mov
mov
xchg
adc
int
dec
mov
stc
and
sbb
xor
mov
inc
fcomp
dec
dec
inc
shl
hlt
pop
pop
std
test
sar
mov
push
das
outs
mov
and
mov
mov
lock
adc
sbb
xchg
pop
adc
movs
es
pop
leave
or
add
inc
iret
pop
sub
aam
mov
mov
push
and
xchg
rcr
daa
lds
jo
and
dec
cmps
(bad)
xor
les
mov
add
add
popf
add
dec
ret
sti
adc
out
push
repnz
adc
dec
inc
arpl
and
pop
cmp
cwde
xlat
fisubr
and
pop
cmps
jb
shl
scas
test
push
dec
cmc
push
nop
pop
add
inc
mov
dec
inc
mov
xchg
add
sahf
mov
push
stos
in
cdq
push
dec
pop
leave
jmp
(bad)
xor
stos
rol
or
seta
pop
and
xor
or
mov
mov
xchg
lds
and
fisubr
and
mov
xor
ret
jno
popf
es
stc
pop
mov
mov
in
pop
fild
mov
mov
loope
call
or
mov
mov
hlt
xor
pop
sub
inc
(bad)
sbb
mov
adc
js
outs
sbb
inc
jle
aam
mov
jb
stos
add
fldcw
mov
leave
das
sbb
daa
or
cmps
and
pop
mov
inc
test
sbb
sub
xchg
test
jo
(bad)
mov
or
lea
mov
stc
inc
enter
arpl
mov
xchg
inc
adc
xchg
xchg
xchg
mov
dec
cs
mov
xchg
or
das
jle
mov
das
xor
or
es
fdivr
add
ror
outs
and
adc
sti
fild
and
adc
das
jo
mov
das
aaa
and
cmp
inc
addr16
dec
mov
dec
push
xor
sub
pop
add
movs
ss
out
pop
inc
add
mov
mov
mov
pop
add
jo
lods
adc
jle
or
scas
or
sti
(bad)
jb
pop
fwait
xchg
clc
mov
outs
or
or
jnp
mov
push
popa
or
or
or
mov
or
call
retf
inc
dec
mov
shl
mov
pop
cmp
mov
adc
add
mov
add
mov
cmp
jae
inc
ret
sbb
and
mov
loope
outs
fs
adc
add
push
sbb
sbb
push
aas
sbb
push
adc
outs
test
pusha
gs
xor
jl
mov
rcl
cwde
sbb
push
in
das
and
sub
mov
ss
jl
gs
rol
(bad)
mov
ds
dec
inc
push
int3
call
sub
pushf
push
out
push
or
mov
push
hlt
add
int3
lds
sbb
or
inc
xchg
xchg
in
mov
mov
and
cmc
shl
xor
mov
or
adc
add
call
jbe
sti
adc
pop
mov
inc
pusha
and
cdq
add
scas
lods
pop
pusha
mov
pusha
std
outs
popf
pop
jno
jbe
mov
out
repnz
sub
add
ret
or
xlat
(bad)
sti
loope
jge
ret
ret
pop
ltr
cwde
mov
pop
xchg
jp
adc
gs
add
and
daa
sub
inc
xchg
or
add
scas
(bad)
and
stc
or
dec
and
(bad)
(bad)
cwde
ret
add
inc
cmp
mov
add
sub
push
pop
js
mov
out
fimul
dec
xlat
add
gs
lods
add
xor
adc
shl
jmp
pop
jmp
adc
fdivr
test
adc
add
or
push
outs
xchg
mov
(bad)
lds
mov
enter
out
inc
inc
mov
push
pop
mov
ins
push
xor
jno
mov
lahf
or
test
mov
dec
push
or
mov
pop
retf
pop
in
add
les
cmp
jmp
leave
ret
aad
jnp
pusha
pop
jns
mov
xchg
xchg
and
push
sub
inc
jne
or
and
push
sbb
xor
add
bound
lahf
out
cld
cmps
inc
sub
in
xlat
add
jnp
or
mov
(bad)
je
test
nop
iret
mul
dec
cmp
ror
xlat
mov
lahf
add
add
xor
xchg
mov
and
fs
cmp
icebp
mov
nop
nop
and
loopne
cmp
pusha
sbb
add
xchg
or
fisubr
je
jmp
inc
push
sbb
and
loope
pop
in
arpl
ror
sbb
or
xor
mov
xor
(bad)
mov
call
add
cmp
inc
jno
jnp
enter
sbb
push
movs
and
pop
(bad)
xor
mov
iret
adc
or
jp
xchg
adc
push
pop
popf
push
mov
and
movs
and
and
cmp
inc
mov
and
mov
adc
movs
pop
add
inc
push
push
bound
and
dec
push
add
inc
movs
push
retf
mov
xor
(bad)
retf
daa
loope
adc
mov
nop
jo
cmps
clc
popf
pop
or
lea
daa
mov
loop
jnp
(bad)
retf
mov
inc
jbe
mov
ins
inc
push
pop
dec
or
dec
xchg
mov
repz
inc
push
jge
dec
cmps
dec
sub
xor
dec
mov
sbb
mov
mov
cmp
mov
adc
xchg
xor
fidiv
shl
push
(bad)
and
(bad)
fld
cmp
mov
scas
out
retf
ret
lock
cmp
dec
push
sub
jae
cmp
and
retf
call
sub
pop
jno
mov
(bad)
aad
mov
or
leave
or
in
xlat
leave
xchg
fs
and
dec
repnz
xchg
cmps
push
call
sbb
pop
sub
les
inc
repnz
xor
fnstcw
pop
add
and
lea
inc
test
je
adc
xor
pop
pop
dec
sbb
imul
adc
neg
js
scas
dec
iret
out
es
das
(bad)
bound
mov
nop
gs
inc
xor
sbb
pop
sub
dec
repz
into
ins
loopne
push
imul
inc
icebp
xor
xor
mov
push
unpcklps
(bad)
das
adc
mov
into
inc
inc
pusha
mov
into
dec
shl
scas
movs
cs
inc
iret
ret
add
arpl
xchg
push
cmp
movs
add
mov
loopne
popf
cmp
or
popf
ja
xchg
pop
enter
inc
nop
leave
shr
pop
lock
imul
ret
add
icebp
push
adc
add
xor
gs
mov
loop
ins
das
fucomi
or
loope
in
xor
or
mov
iret
pop
add
inc
sbb
aaa
pop
and
add
pop
sub
mov
aaa
rcl
mov
inc
adc
mov
inc
inc
retf
(bad)
popf
test
(bad)
xchg
and
xchg
lods
cwde
rcl
aaa
sub
jae
adc
xor
(bad)
lods
cmp
in
cmps
inc
jmp
shl
or
addr16
fcomp
and
xchg
push
sbb
out
add
inc
loop
fisub
xchg
das
ror
stos
inc
sub
push
push
shl
jle
push
cmp
pop
jo
call
dec
pop
inc
jne
stos
mov
dec
xor
push
jge
sbb
je
cwde
prefetchnta
rcr
sbb
(bad)
adc
lock
adc
ins
and
add
test
sub
test
inc
pop
mov
retf
icebp
xor
shl
inc
lahf
loope
xchg
shl
sbb
adc
adc
(bad)
ret
je
and
test
gs
sub
imul
push
es
jo
dec
inc
mov
push
test
xor
cwde
xlat
push
stos
loope
add
mov
inc
jnp
adc
jno
ret
ret
dec
xchg
fist
(bad)
xor
cwde
cmp
mov
inc
mov
out
aad
cmp
jns
clc
push
sub
sbb
xor
pop
add
add
fisub
cmp
or
dec
cs
fimul
fcom
xor
adc
ja
test
adc
or
xchg
daa
dec
scas
push
add
adc
sub
jg
dec
jae
imul
pop
adc
es
call
pop
ss
retf
aad
sbb
push
dec
or
(bad)
sub
and
cmps
sbb
hlt
bound
aad
dec
cmp
mov
jae
in
(bad)
lods
test
adc
pop
fstp
and
aad
and
in
sbb
in
mov
loope
or
stc
test
ss
dec
fnsave
pop
dec
repnz
xor
push
mov
xchg
pop
pop
pop
and
xlat
lsl
pop
movs
fcomp
mov
scas
xlat
in
cmp
mov
gs
mov
pop
and
xlat
pop
shl
add
mov
bndstx
jo
pop
movs
add
sbb
mov
inc
mov
test
adc
fcom
fist
icebp
lea
loopne
and
push
push
jbe
and
mov
jbe
cwde
bound
lock
add
pusha
les
(bad)
and
adc
mov
call
ret
into
leave
popa
aas
mov
mov
ins
jge
cwde
fimul
jg
das
test
bound
jp
sub
mov
mov
and
sub
xchg
lods
loopne
sbb
xchg
jmp
jne
outs
outs
push
call
mov
inc
adc
mov
ror
das
add
and
cmp
jnp
adc
loopne
or
and
das
add
jo
and
shl
bound
cmps
pop
daa
sbb
shl
xchg
das
mov
push
rol
icebp
fcmove
fisttp
pop
and
fimul
pusha
xor
rol
and
retf
leave
movs
xor
or
mov
mov
mov
sub
add
lods
popa
adc
xor
fld
cdq
jge
pop
ins
frstor
fcom
cmps
repz
fsub
stc
cmp
inc
jmp
add
sbb
jl
xor
dec
and
xchg
sub
scas
imul
inc
add
dec
dec
add
or
push
fadd
imul
add
lods
sbb
pop
mov
mov
cmps
and
cs
adc
xchg
xor
pop
das
fs
dec
into
ins
aam
dec
int
or
sub
sub
push
adc
mov
mov
nop
cmp
sahf
mov
in
bound
sar
or
stos
fadd
push
mul
and
add
mov
or
adc
add
lahf
sbb
xor
cld
mov
fldenv
and
pusha
jg
sub
out
cmp
outs
xor
outs
dec
or
hlt
fimul
add
pop
cdq
dec
xchg
ja
and
lds
ins
or
ins
fcomip
repnz
(bad)
in
fistp
loopne
pop
push
push
test
ja
mov
dec
cmp
sub
push
xchg
(bad)
jns
fldenv
loope
loope
loop
loop
push
jo
pop
sbb
bound
in
inc
fisub
sahf
invd
in
outs
add
adc
popa
js
dec
imul
xchg
add
sub
int3
and
shl
xor
xchg
gs
sub
pop
or
mov
and
pop
lock
dec
pop
sub
mov
leave
out
xor
dec
outs
cmp
or
add
cdq
adc
add
sbb
pop
js
popa
leave
adc
or
gs
aaa
and
dec
ret
ja
push
fnstsw
dec
loop
or
(bad)
jae
pop
mov
add
or
mov
adc
stos
and
mov
mov
int
movs
add
jmp
int
mov
add
sbb
inc
jns
dec
inc
add
xchg
add
xor
jae
out
adc
pusha
fisub
push
mov
retf
test
jb
lea
out
jo
rcl
in
stos
and
push
and
inc
jo
sbb
pop
ins
lock
pop
rcl
cs
pop
push
test
std
inc
pop
imul
aaa
pop
or
or
cmp
mov
out
xor
sbb
fsub
nop
movs
mov
push
or
addr16
xchg
(bad)
out
aad
cmp
xbegin
lods
jg
rol
adc
xchg
ret
stc
cld
push
repnz
stc
ins
adc
dec
push
std
pop
and
(bad)
and
cmp
jne
adc
and
and
or
ret
cmp
jne
(bad)
add
inc
in
inc
mov
dec
adc
adc
add
add
adc
xchg
pop
and
cdq
sbb
pop
jg
jmp
push
pop
aad
popf
jbe
pop
pop
jp
pop
xor
aas
mov
inc
add
mov
xchg
adc
sub
fcmovbe
and
xchg
jp
lods
push
aam
inc
cmps
push
loope
and
sahf
call
cs
out
in
fidivr
iret
sbb
pop
call
add
inc
jle
push
mov
mov
mov
mov
inc
push
fsubrp
in
xchg
aas
daa
dec
imul
scas
in
call
ret
add
and
or
inc
xchg
outs
ret
rol
mov
mov
add
and
mov
adc
loopne
and
sub
out
xor
mov
inc
mov
movs
ins
ret
push
das
sbb
push
jo
ret
test
cwde
cwde
adc
mov
mov
ret
mov
dec
popa
or
xor
sub
adc
or
adc
std
ret
mov
push
loope
nop
xchg
push
ret
adc
gs
cwde
sub
xor
add
addr16
push
clc
xchg
ret
popa
ins
mov
add
outs
add
add
gs
and
imul
icebp
sub
cmps
jne
cmp
int3
add
sub
test
lock
push
loopne
xchg
fisubr
dec
in
sub
das
jno
xor
adc
inc
or
scas
mov
ins
dec
data16
sub
ja
sub
enter
or
and
shl
popa
stos
sub
inc
sbb
test
fld
and
or
inc
sub
cmc
sub
inc
scas
mov
js
mov
dec
repz
sysexit
out
inc
jno
xchg
daa
daa
retf
jg
cmps
xor
out
xor
in
inc
mov
fsubr
gs
ret
pop
aaa
fdivr
test
and
mov
ins
sub
les
ror
inc
mov
icebp
cmp
add
push
call
push
or
popf
add
sub
and
repz
push
or
movs
clc
ret
and
mov
sar
and
sub
es
retf
stc
jb
sbb
mov
inc
add
and
and
aaa
les
loopne
call
push
shl
repnz
lahf
add
dec
add
sti
jo
sbb
cdq
or
sbb
mov
push
jne
add
sbb
push
sbb
xchg
mov
inc
mov
add
and
and
or
loope
cmp
mov
sub
leave
pop
and
sti
jle
add
dec
sahf
or
mov
jge
dec
scas
into
push
sub
aad
push
add
mov
add
inc
sub
push
push
movs
and
add
cmp
(bad)
push
outs
adc
add
xlat
pop
sub
and
leave
push
or
mov
adc
pop
iret
aad
jecxz
mov
rcl
arpl
pop
add
mov
mov
mov
add
xchg
dec
adc
and
add
das
ret
mov
ss
mov
aas
je
or
je
pop
jne
push
outs
sti
pop
inc
xchg
sbb
mov
add
pop
int
or
in
ins
out
pop
xor
daa
lahf
and
xor
neg
mov
mov
out
inc
sbb
out
or
sbb
mov
and
sub
inc
test
pop
loope
mov
rol
call
(bad)
push
sub
adc
dec
popa
add
pop
out
and
or
jle
mov
nop
and
jnp
lahf
jg
fadd
add
sbb
pop
and
push
add
push
(bad)
add
hlt
les
jmp
or
cmp
add
add
int
ret
mov
and
and
add
mov
pop
inc
sbb
inc
js
and
cmps
lock
lock
adc
jne
mov
add
mov
test
push
mov
arpl
sbb
push
out
mov
pop
(bad)
ds
xchg
cs
xor
dec
test
loopne
nop
outs
sub
repz
inc
(bad)
push
clc
mov
fdiv
xchg
mov
dec
fcomp
add
out
cmp
xchg
or
leave
or
xchg
add
and
inc
ss
xor
leave
mov
jmp
or
out
inc
add
dec
and
and
push
into
pop
mov
mov
or
inc
mov
nop
mov
fdivr
or
and
sbb
xor
sbb
ret
shl
xor
adc
inc
cs
bnd
(bad)
hlt
mov
mov
inc
jne
adc
pop
jl
fcmovu
add
ss
inc
push
mov
aad
mov
dec
or
and
add
dec
and
pop
jmp
stc
add
les
push
mov
push
shl
into
test
das
dec
push
add
(bad)
stc
in
les
adc
inc
jp
add
sbb
xchg
cmp
shr
mov
imul
mov
inc
or
test
push
in
mov
add
and
iret
add
xlat
fiadd
hlt
test
(bad)
test
mov
das
or
js
jmp
add
in
jno
mov
jl
sub
jne
push
xchg
add
aam
shr
mov
mov
fwait
jl
pop
xor
inc
test
or
ins
ret
push
add
and
inc
lods
inc
inc
icebp
jmp
aad
arpl
fdiv
adc
retf
add
scas
mov
loop
in
in
mov
push
in
jecxz
jecxz
test
fidivr
jnp
leave
sub
jb
adc
jbe
fldl2e
out
pusha
inc
outs
inc
test
xlat
repnz
sub
lock
add
in
xor
and
into
cld
xchg
sbb
fdivr
scas
test
cmp
mov
add
cmp
das
inc
popf
pushf
and
dec
mov
add
frndint
adc
mov
movs
aad
sbb
aas
and
sub
adc
sub
(bad)
push
leave
and
inc
sub
pop
add
adc
int3
inc
cwde
jmp
inc
(bad)
fcomp
add
adc
in
nop
nop
pop
mov
sub
lock
pop
mov
call
and
call
sbb
dec
lea
jecxz
mov
sbb
mov
and
add
xor
cmp
mov
icebp
cmp
xchg
mov
sbb
mov
sbb
mov
fsub
inc
pop
add
lds
dec
je
div
dec
push
sub
int
push
call
and
and
pop
fst
jnp
add
ins
sbb
push
cmp
push
rcr
jmp
mov
adc
fstp
ss
mov
movs
adc
psubsb
cmp
setle
iret
sub
pop
je
dec
je
jmp
adc
add
dec
test
pop
in
retf
je
push
inc
clc
or
xor
cmp
and
repz
sbb
mov
out
add
add
adc
mov
cmp
bound
movs
push
xor
inc
scas
dec
jb
lahf
add
das
add
push
pop
inc
pop
sub
jnp
add
dec
bound
dec
mov
adc
pop
rol
pop
das
dec
cmps
mov
adc
inc
dec
pop
(bad)
sub
push
call
shr
add
push
mov
hlt
les
aas
daa
sub
and
adc
adc
ins
fcmovne
adc
sbb
daa
imul
loopne
mov
xchg
(bad)
push
add
rcr
push
or
bound
adc
mov
add
mov
mov
pop
xor
and
add
mov
and
adc
inc
sub
fbstp
packssdw
je
cmp
bound
jecxz
inc
sbb
fmul
lock
xchg
loopne
out
rol
dec
add
xor
dec
xchg
mov
add
retf
js
ud2
add
push
or
pop
sub
and
cmp
add
inc
and
push
pop
ret
leave
adc
repnz
out
adc
fwait
ret
dec
jmp
dec
es
fsubr
and
jno
add
(bad)
(bad)
not
inc
jns
mov
rcl
sub
push
(bad)
pop
js
inc
inc
cmp
push
add
std
mov
les
and
push
pop
add
dec
lds
lahf
pop
sbb
fwait
xor
int3
or
or
enter
or
inc
mov
icebp
adc
cmps
enter
popa
push
or
xchg
sbb
inc
or
xchg
and
aas
stos
and
and
pusha
push
imul
add
inc
xor
adc
and
(bad)
and
imul
add
sub
bound
xchg
cmp
hlt
and
iret
pop
movs
movs
ret
sub
or
pop
ror
jo
fs
or
aam
push
stos
or
pop
pop
or
neg
add
or
loop
popw
in
das
or
adc
sub
dec
out
jecxz
fwait
xchg
fisttp
cmp
sahf
and
xor
mov
adc
pop
and
pushf
fmul
add
pop
sub
push
ss
ss
jae
jae
or
shl
adc
outs
(bad)
add
and
xor
and
sbb
fwait
fwait
rcr
jecxz
or
pop
sbb
pop
daa
sub
jle
bt
xchg
mov
cmp
lods
ins
and
or
(bad)
scas
test
add
pop
fsub
or
test
sub
js
data16
popa
inc
and
sub
inc
sbb
dec
pop
mov
inc
add
push
stc
pop
sub
and
dec
pop
jmp
pop
xor
xor
in
nop
rcl
push
push
dec
js
jb
icebp
sub
stos
xchg
daa
mov
arpl
pop
mov
fnstcw
adc
and
adc
cmp
pushf
or
test
push
xor
adc
and
adc
sub
das
arpl
data16
fcmovbe
addr16
pop
add
or
adc
ret
push
or
cmps
sub
js
xchg
popa
fld
(bad)
mov
mov
punpcklbw
rcl
(bad)
lds
dec
or
stos
je
jle
inc
jle
push
jns
inc
add
movs
ror
fiadd
dec
hlt
or
cdq
or
mov
mov
mov
lods
fwait
pop
add
cmp
add
or
sbb
aaa
jmp
icebp
mov
mov
cmp
dec
dec
xor
add
test
push
repnz
push
arpl
add
or
mov
add
leave
jae
adc
jb
adc
data16
push
and
adc
stos
test
xor
xchg
xlat
jnp
push
fmul
sub
adc
pop
xchg
repz
mov
div
and
mov
or
ret
icebp
(bad)
adc
sub
adc
lods
sub
inc
sbb
outs
or
imul
icebp
cmps
fs
movs
cmc
push
mov
and
popf
dec
mov
inc
adc
adc
pusha
repnz
mov
loopne
or
adc
adc
nop
ficom
and
sbb
outs
das
shr
xchg
xor
daa
or
or
and
pop
addr16
aam
add
(bad)
adc
xchg
mov
and
cmps
dec
add
and
xor
jmp
cmp
cld
jnp
sar
or
pop
mov
pop
test
adc
test
xchg
or
out
out
das
mov
pop
xor
pop
sbb
cmp
push
add
and
sahf
test
or
pop
mov
lock
cmp
movs
bnd
mov
add
nop
cmp
fwait
jo
xchg
movs
mov
add
sub
xor
inc
inc
ins
adc
push
push
push
adc
pop
and
xlat
push
nop
mov
rcr
inc
push
stc
adc
push
sbb
push
pop
stos
int3
test
pop
dec
lods
or
xchg
es
inc
mov
xchg
cld
call
not
xor
call
pop
xor
inc
fwait
xchg
cmps
push
mov
call
add
cmp
and
gs
or
(bad)
cmp
push
fstp
inc
mov
jne
mov
jmp
sti
pop
test
sbb
add
movs
cmps
adc
inc
xchg
cmp
pusha
push
ret
mov
inc
sbb
pop
call
and
out
imul
dec
rcr
cmp
inc
inc
add
xor
dec
dec
call
ret
add
int3
pshufb
dec
add
mov
sbb
rol
mov
arpl
push
adc
pop
mov
and
add
js
fld
jecxz
fisub
add
xor
dec
push
pop
fstp
(bad)
pop
div
mov
adc
mov
or
popf
pop
inc
lock
mov
sbb
loop
cld
int
sbb
and
lea
inc
fist
add
inc
dec
popa
clc
(bad)
push
lea
ins
mov
add
aad
(bad)
je
dec
dec
push
or
cs
and
xor
fst
es
in
mov
fidiv
and
or
cld
iret
push
xor
data16
inc
sti
add
es
mov
dec
pop
dec
clc
leave
(bad)
retf
mov
ret
lods
jae
and
fdivp
addr16
mov
enter
push
mov
hlt
mov
sub
cmp
sbb
fnsave
js
mov
movs
mov
pushf
lods
mov
pop
mov
shl
add
retf
mov
movs
xchg
or
sar
cmp
xchg
dec
sbb
xchg
jo
out
sbb
leave
sub
shl
clc
and
fdiv
fmul
ds
push
stos
fs
push
fdiv
inc
mov
fwait
adc
jg
jb
fwait
jmp
add
inc
xchg
icebp
sub
sbb
shr
xchg
xor
imul
xchg
dec
push
mov
sar
aas
and
dec
sbb
adc
rol
xor
mov
enter
mov
repnz
jp
loopne
jb
adc
loopne
xor
in
loopne
push
mov
inc
push
lds
xchg
xor
outs
in
mov
xor
pop
mov
or
dec
add
ror
fmul
jo
sub
cmp
adc
test
pop
dec
add
sahf
in
mov
push
xchg
and
sbb
or
sar
push
xor
movs
clc
sbb
mov
push
iret
into
adc
and
inc
stos
fucomip
test
and
and
popa
xor
jmp
xchg
rcl
and
fmul
es
dec
dec
sahf
(bad)
jle
and
retf
movs
dec
inc
scas
or
push
push
pop
mov
inc
cs
mov
xchg
cmp
pop
inc
push
add
mov
(bad)
xor
mov
xchg
fild
push
add
mov
repnz
add
add
mov
mov
jle
(bad)
hlt
xlat
push
data16
pop
pop
and
cmp
inc
retf
cmc
push
xlat
mov
pusha
add
mov
add
out
inc
mov
cdq
add
jl
inc
ins
call
mov
(bad)
xor
fsubr
(bad)
ret
hlt
cmp
push
fwait
push
push
pop
and
add
loopne
inc
jl
movs
push
jmp
sbb
scas
fs
xchg
es
mov
icebp
call
mov
das
inc
imul
ins
repz
ror
inc
xor
mov
aaa
test
push
sbb
sbb
xor
pop
inc
add
or
push
adc
sub
fwait
ss
pop
or
or
leave
(bad)
fcomp
cmp
or
(bad)
sub
shr
xchg
push
lahf
push
xchg
pop
and
addr16
adc
ret
xchg
push
sbb
nop
mov
repz
mov
imul
imul
pxor
and
pop
mov
test
or
cmp
mov
es
mov
and
xchg
fs
enter
mov
movs
dec
pusha
aam
sub
rep
les
cdq
stos
shl
test
xor
add
xchg
pop
or
xor
add
mov
push
push
sbb
rcl
adc
and
ja
lock
or
dec
or
push
ror
and
sub
xchg
jp
pushf
and
inc
iret
sub
add
data16
and
and
push
cmp
sbb
adc
or
xchg
or
inc
call
inc
sar
inc
test
adc
shl
and
or
pusha
xchg
lods
cdq
rol
in
jne
in
fstp
inc
sub
pop
ds
clc
mov
movs
pusha
push
adc
cmp
leave
cmps
call
and
rol
cmps
es
add
adc
adc
xchg
test
pop
mov
xlat
inc
push
or
aaa
pop
inc
and
pusha
scas
mov
loop
es
das
xor
shr
or
aad
daa
xchg
add
jle
test
cmp
xchg
ret
push
call
xor
mov
lock
inc
or
pushf
push
movs
sbb
call
dec
popw
lods
call
fnstcw
daa
cld
sbb
retf
mov
mov
sub
mov
sub
xor
cmp
jp
es
cmp
mov
fmul
dec
mov
(bad)
stos
(bad)
icebp
hlt
xor
leave
push
das
add
xchg
cmp
push
dec
or
leave
addr16
push
idiv
call
mov
adc
and
sbb
das
ins
add
je
mov
out
shl
loopne
sub
sub
imul
mov
cwde
(bad)
mov
cld
inc
cli
mov
and
ins
adc
mov
jb
jbe
or
and
movs
mov
leave
test
inc
sbb
and
xchg
add
enter
xchg
or
xchg
and
pop
pushf
cmc
icebp
hlt
ins
(bad)
sub
pop
pusha
add
xchg
rcr
and
sbb
idiv
call
or
pop
and
pop
imul
popa
add
dec
fwait
sar
out
adc
out
or
inc
lahf
cmp
ins
das
cwde
adc
push
and
loopne
jecxz
xor
dec
loope
jge
movs
ret
ret
pop
nop
das
mov
sbb
enter
imul
jb
ja
inc
jb
push
add
xchg
rol
ja
dec
jno
sub
xor
cwde
sbb
leave
mov
fmul
fisubr
bound
and
inc
iret
jo
dec
cmp
dec
xor
xchg
je
pop
bound
cmp
cmp
cmp
imul
add
inc
call
nop
fadd
inc
jns
sub
(bad)
movs
add
push
pop
(bad)
cmps
add
in
popa
test
sub
push
sbb
cmps
dec
adc
xchg
inc
xchg
cdq
jne
jb
adc
gs
lock
cld
pusha
jae
sbb
and
mov
mov
lea
or
cmp
push
sbb
and
pusha
sbb
add
inc
in
add
jecxz
add
sub
arpl
xor
fsub
pop
in
or
sub
and
pop
inc
adc
hlt
sub
sbb
dec
sbb
loope
add
sti
sub
out
out
sti
bound
push
out
and
rcl
int3
mov
das
add
(bad)
xor
cs
inc
sbb
test
mov
pop
ficom
ds
call
scas
sbb
xor
mov
xor
push
add
fldenv
inc
pushf
je
scas
lock
xchg
cwde
cmc
sbb
jns
sbb
mov
sbb
or
rol
push
fdivr
and
inc
dec
inc
or
ins
or
ja
imul
push
or
add
or
loopne
aad
iret
or
xor
xchg
int3
lock
test
mov
sub
pop
xchg
inc
mov
push
clc
xchg
inc
pop
jne
lea
inc
int
sbb
cmp
cmp
push
xor
in
mov
pop
add
adc
xchg
nop
xor
nop
inc
popa
or
aas
cdq
xor
cmps
inc
add
xchg
lods
das
sbb
loope
lahf
mov
add
pusha
jmp
adc
sub
inc
or
adc
das
fadd
adc
loopne
or
cli
or
push
dec
outs
dec
add
in
ds
and
pop
push
and
mov
inc
pop
or
dec
jo
xor
and
icebp
popa
or
push
pop
push
push
cs
push
ret
aaa
dec
dec
cmps
in
adc
jmp
sub
adc
and
bound
pop
pop
xor
imul
dec
add
push
lods
es
das
daa
and
xlat
in
xor
data16
nop
cmp
test
adc
jns
outs
dec
xor
push
mov
xchg
das
dec
addr16
push
ret
lods
jecxz
std
or
dec
mov
jle
ds
add
add
and
pop
xchg
sub
pushf
adc
jno
daa
adc
and
xor
pop
lods
cmp
jns
push
pop
dec
pop
cmp
jb
add
repnz
cmp
xor
mov
je
xchg
fcom
sbb
jne
cmps
loop
jg
out
adc
test
and
mov
sub
mov
push
test
(bad)
imul
xor
xor
inc
pop
xor
into
inc
and
mov
adc
push
dec
pop
xor
mov
adc
xor
mov
xchg
push
jns
xchg
adc
dec
sbb
mov
(bad)
inc
and
dec
jmp
loope
sbb
inc
ror
test
add
and
mov
test
pop
pop
and
enter
dec
(bad)
xor
nop
ret
sbb
inc
xor
pop
xor
ins
sbb
jnp
pushf
add
mov
out
movs
adc
imul
icebp
cmp
dec
or
mov
jmp
ins
push
call
and
xor
xchg
or
dec
int3
add
(bad)
inc
ret
callw
movs
mov
into
into
inc
aas
push
mov
cmp
xor
fadd
sbb
inc
inc
mov
xor
sti
test
dec
xor
add
jbe
adc
jo
ins
jns
aam
aam
pop
mov
dec
and
xchg
jecxz
sub
xchg
cmp
dec
cmp
mov
shr
inc
das
cdq
test
and
push
movs
jne
sbb
aad
and
or
cmp
and
data16
xor
retf
push
sbb
jns
push
inc
clc
test
sti
sub
and
and
clc
clc
icebp
leave
pop
and
lods
cmp
push
shl
add
push
pop
sti
ret
cmps
in
enter
sub
iret
cmp
jecxz
outs
push
(bad)
dec
pop
add
or
sti
pop
cmp
and
fisttp
mov
cmps
ret
addr16
je
xor
sbb
dec
cld
mov
cld
adc
pop
or
xor
add
add
fwait
shl
inc
cmp
xchg
je
or
or
aad
push
mov
int3
jecxz
mov
cmp
cmp
xor
sub
je
sub
mov
jecxz
inc
xor
adc
jb
add
pop
xor
sub
dec
xchg
and
fdiv
jno
sbb
push
out
int3
mov
iret
scas
or
push
lock
pop
cmp
nop
adc
aas
call
repnz
inc
nop
inc
call
fs
std
xor
or
cmp
mov
or
adc
pop
pusha
cmp
dec
dec
rcl
xor
mov
call
sub
xor
es
add
mov
inc
sbb
es
and
(bad)
cmp
je
pop
pop
cmp
sub
sub
jno
dec
(bad)
in
lahf
cmp
(bad)
inc
loop
in
and
pop
cld
das
and
data16
mov
ds
xor
arpl
push
inc
repnz
bound
mov
jo
popa
cmps
outs
and
xor
call
ret
aas
jo
inc
jb
xor
sbb
inc
mov
jle
ins
mov
cmc
dec
shl
loop
mov
arpl
stc
jne
push
sbb
or
add
arpl
and
movs
add
mov
inc
or
ds
cmp
dec
dec
out
add
inc
xor
mov
xchg
cmp
pop
pop
mov
cmp
addr16
sub
and
push
and
stc
mov
sahf
adc
xchg
fmul
mov
mov
or
pop
pop
add
mov
mov
pop
cmp
and
stos
scas
sub
xor
lea
add
cmps
inc
and
mov
out
xor
sub
rol
pop
es
mov
rol
clc
add
xchg
les
adc
inc
dec
dec
sub
adc
cmps
daa
es
out
jl
fmul
sub
ins
pop
sub
rol
jmp
pop
inc
or
adc
cmp
and
or
ret
fbstp
stc
pusha
mov
cmp
add
xchg
test
push
lds
inc
mov
inc
dec
sbb
adc
dec
mov
jmp
sbb
je
add
mov
nop
inc
pop
sub
push
into
imul
mov
int3
mov
lods
mov
sgdtd
and
add
push
inc
bound
mov
and
add
test
out
fmul
pop
adc
or
dec
shr
shl
mov
mov
pop
adc
adc
stos
pop
adc
imul
add
pushf
pop
das
nop
nop
out
or
enter
fistp
or
mov
pop
dec
cmovle
push
and
mov
xchg
fild
xor
lods
pusha
mov
push
inc
aas
ins
inc
das
add
or
sbb
add
sbb
adc
icebp
shl
push
(bad)
loopne
inc
daa
push
mov
or
sub
adc
push
scas
xor
inc
imul
or
add
dec
repz
xlat
xor
aam
or
adc
dec
mov
or
adc
int3
push
inc
lods
leave
mov
xlat
xchg
add
pusha
cmp
(bad)
jmp
call
dec
(bad)
dec
cmp
(bad)
push
sub
inc
sub
callw
out
dec
jnp
push
fs
add
pushf
sbb
scas
(bad)
xor
test
dec
loopne
jo
or
jmp
or
aaa
add
sub
mov
inc
mov
sub
lods
out
push
repnz
data16
jb
in
push
cmp
xchg
mov
cmps
push
cwde
mov
mov
jne
add
and
cwde
cwde
push
in
inc
or
aaa
adc
in
dec
sbb
data16
repnz
dec
mov
adc
jb
ss
adc
push
jle
in
and
int3
dec
sbb
inc
jo
or
cmc
push
shl
and
push
sbb
(bad)
and
jl
push
mov
in
imul
data16
jns
pusha
jecxz
int3
lds
out
outs
je
mov
mov
pop
fistp
js
push
sub
rol
pop
enter
mov
or
sbb
test
loop
inc
inc
and
or
daa
icebp
stos
ret
adc
adc
adc
dec
xchg
inc
ss
mov
ins
mov
les
jb
mov
dec
fldcw
clc
dec
jl
enter
mov
dec
sub
dec
dec
test
xor
push
or
push
enter
inc
and
pop
cmc
push
sub
cmp
imul
inc
lahf
imul
int
and
or
pushf
cmp
xor
push
sbb
inc
xchg
sub
clc
and
test
(bad)
xchg
push
push
add
jne
aaa
leave
mov
aad
xor
mov
xlat
es
das
mov
(bad)
mov
jnp
arpl
stc
push
dec
shr
jb
imul
pop
jae
adc
jmp
or
cwde
adc
ss
pusha
sbb
out
mov
or
inc
stc
jle
or
sahf
mov
jmp
inc
inc
loopne
xor
sub
inc
jmp
inc
in
adc
adc
pushf
je
in
inc
dec
cli
jmp
lods
pop
lods
add
sub
aaa
add
push
sbb
imul
push
out
mov
cmp
jae
(bad)
je
and
adc
fistp
fs
and
inc
ret
pop
mov
mov
sbb
ins
add
jmp
pop
pop
(bad)
or
icebp
dec
gs
pop
dec
ja
aad
and
xchg
adc
add
push
mov
pop
jb
ins
(bad)
push
pop
and
fimul
lea
xor
push
pop
xor
out
ins
add
and
stc
lods
jmp
fistp
push
jge
push
and
jmp
pop
and
inc
fsub
add
or
jmp
sbb
out
adc
jmp
(bad)
pusha
daa
sbb
or
and
cmps
sub
pop
or
add
int
popa
(bad)
cmp
lea
and
and
stos
std
mov
les
scas
ret
push
push
sbb
jg
in
add
push
or
add
inc
push
sahf
push
jb
repnz
push
not
push
adc
sub
push
jl
enter
inc
push
shl
inc
xor
pop
jnp
mov
pop
xchg
adc
rcr
inc
(bad)
or
xor
stc
ss
dec
add
jmp
push
xor
int
cmp
fdivr
dec
mov
in
cmp
iret
(bad)
or
enter
or
pop
inc
dec
xor
adc
jne
rol
xor
jb
imul
push
xlat
dec
cdq
sbb
ret
mov
cmp
or
cmp
jne
inc
sub
std
adc
mov
mov
cmc
inc
cli
jmp
adc
call
sub
xchg
sub
test
inc
dec
sahf
bound
sbb
fist
jge
cmp
inc
mov
cmp
inc
nop
pushf
cmp
inc
push
jne
sti
jl
jmp
pop
ret
or
and
jae
sti
sub
add
shl
test
rcr
and
sub
(bad)
jae
sub
mov
or
mov
imul
mov
push
add
ror
movs
idiv
mov
shl
in
pop
mov
aas
ret
mov
lock
loopne
jmp
dec
xchg
mov
call
dec
add
dec
arpl
loope
or
add
pushf
mov
int3
dec
push
rcl
dec
mov
ret
call
push
fadd
mov
jae
jns
cmp
loopne
mov
lea
cmp
pop
mov
jmp
rol
or
aam
cmc
(bad)
pop
sbb
inc
aam
cwde
pop
gs
xchg
sbb
lock
pop
sbb
test
fsubrp
(bad)
sbb
ins
jle
pusha
mov
popa
dec
inc
inc
mov
mov
mov
sub
retf
lock
call
cmp
jle
sbb
add
dec
inc
jno
push
imul
hlt
aas
cmp
and
dec
mov
shr
or
jp
dec
mov
neg
push
push
call
xor
mov
sub
test
ins
(bad)
call
leave
xchg
movups
loopne
mov
add
daa
push
es
and
jmp
mov
hlt
xor
cmp
jmp
or
imul
pop
retf
jne
sub
cmps
mov
rol
pop
push
or
push
jno
adc
and
mov
xor
push
pop
lods
or
ds
es
or
inc
in
ror
test
pop
loop
pop
push
push
fs
mov
ret
rol
mov
xchg
test
sub
mov
add
adc
dec
bound
jno
jg
jmp
int3
adc
push
lods
inc
mov
xchg
sub
loop
jo
dec
or
sti
pushf
movs
into
xchg
inc
pop
push
not
call
and
and
pop
sub
or
mov
cmp
push
inc
in
cmp
pusha
mov
in
xchg
retf
test
mov
and
mov
aad
mov
rcr
inc
int3
pop
cs
int3
int3
int3
and
out
add
mov
popa
rcr
or
xor
mov
inc
cs
sub
sbb
int
push
dec
add
inc
inc
std
add
popa
adc
test
stos
add
out
test
jge
cmp
jle
adc
mov
in
xchg
aam
in
in
js
or
pop
popa
push
stc
pop
(bad)
in
add
push
or
pop
inc
sbb
cs
jp
fidiv
jmp
in
js
imul
dec
in
test
leave
xlat
pop
sub
mov
xchg
ja
int3
lods
mov
jbe
(bad)
outs
adc
push
adc
add
and
test
mov
clc
dec
jle
mov
jo
or
push
or
clc
test
mov
xor
ins
fs
pop
sbb
jne
or
loope
sti
shl
mov
adc
cdq
inc
fcom
sub
mov
push
sub
dec
rcl
add
loope
shl
push
loopne
mov
dec
cmp
add
add
loopne
cmp
xor
or
add
aam
nop
data16
enter
add
adc
dec
aam
add
push
inc
jae
cs
rcl
dec
repnz
xor
shr
jb
pusha
xchg
dec
add
dec
xor
and
add
mov
xchg
out
call
or
aad
cs
mov
es
ret
dec
dec
cwde
scas
adc
sub
stc
push
xchg
mov
cs
fistp
adc
adc
add
or
or
aam
or
clc
shr
ret
adc
jle
(bad)
aas
enter
ds
xor
or
and
lahf
pop
adc
or
mov
or
dec
test
aas
or
es
outs
jecxz
test
out
int3
shr
cmp
add
aaa
lock
and
ds
mov
mov
push
rcl
mov
mov
inc
repnz
inc
xor
icebp
push
shl
rcr
xor
outs
scas
mov
(bad)
xchg
xchg
lea
gs
push
sbb
les
and
clc
pop
pop
jmp
sub
ins
imul
mov
dec
cwde
xchg
mov
mov
pusha
call
test
cmp
cld
dec
or
and
xor
and
call
xor
sbb
popf
into
(bad)
jmp
inc
sbb
lods
sbb
div
adc
jmp
mov
dec
xor
(bad)
add
mov
rcl
and
add
pop
or
xchg
fsubr
pop
push
mov
sub
mov
xor
and
mov
(bad)
les
inc
ret
imul
loope
dec
ins
into
imul
mov
fisttp
adc
je
test
mov
mov
mov
or
sub
and
call
frstpm(287
shr
das
mov
inc
mov
xchg
pop
cmp
mov
gs
nop
sbb
or
mov
sbb
ficomp
lahf
pop
data16
xchg
data16
pop
std
das
inc
cmp
push
test
add
and
sub
adc
in
add
data16
and
xor
xor
stc
mov
or
mov
adc
test
jnp
or
adc
lock
in
or
and
adc
push
mov
dec
push
jecxz
shl
jae
stos
push
ja
fs
xchg
idiv
or
dec
mov
lsl
lods
imul
mov
ds
jmp
std
and
cmps
test
push
mov
xor
jl
cmps
xor
adc
fcom
inc
sbb
pop
imul
mov
fwait
sar
or
sbb
aam
aas
sbb
(bad)
dec
dec
iret
cs
jecxz
call
sub
or
push
add
mov
dec
fistp
mov
mov
and
jno
outs
add
lea
pop
pop
cmp
push
sub
stos
or
push
mov
push
and
push
call
cmp
mov
sub
dec
cwde
in
adc
adc
and
cmps
xor
fs
cmp
lods
pop
icebp
sub
jae
dec
rcr
mov
adc
mov
fistp
pusha
jae
dec
mov
xor
sub
and
fnstenv
or
push
jge
cmp
mov
icebp
nop
fiadd
xchg
dec
add
push
jo
cmc
add
xor
out
daa
arpl
mov
pusha
adc
or
cmp
inc
cmp
jns
sub
and
sub
sub
test
js
mul
add
in
mov
pop
loope
gs
sbb
mov
imul
fnstcw
add
xchg
xchg
retf
xchg
repnz
cmp
xchg
xchg
xchg
and
ror
adc
popf
push
adc
dec
and
pop
nop
push
mov
sub
lahf
pop
and
sbb
lods
in
xor
mov
in
adc
dec
adc
inc
cdq
rcl
cwde
xchg
scas
jno
sub
adc
inc
or
int
or
dec
jno
ja
inc
sub
call
pop
in
out
cld
and
adc
inc
dec
sbb
sbb
out
mul
mov
mov
mov
ins
nop
gs
mov
xor
push
xchg
in
outs
jno
outs
xchg
dec
outs
adc
cmp
dec
sbb
outs
cmp
dec
push
xor
adc
int
lods
test
sub
imul
popf
sar
pusha
out
retf
push
jo
mov
inc
dec
sub
mov
outs
rcl
jmp
sub
push
mov
jo
pushf
push
nop
test
or
int
lock
cmp
push
cmp
jp
mov
fisttp
add
push
cwde
xchg
(bad)
sbb
inc
lods
(bad)
inc
sbb
inc
test
bound
dec
mov
aaa
and
jecxz
scas
add
shl
jae
jns
sbb
pop
xchg
sub
add
imul
mov
mov
push
movaps
push
test
mov
jb
sub
imul
adc
loop
cmp
pop
dec
je
jb
xor
pop
push
inc
inc
mov
add
fwait
add
sub
push
mov
and
je
bound
stc
outs
or
dec
nop
push
jl
xchg
cmp
or
adc
sahf
ret
outs
mov
ret
lods
or
pop
adc
retf
xor
sub
or
adc
rol
xor
cmp
pop
mov
dec
mov
stos
inc
inc
ins
sbb
ret
dec
add
or
mov
xor
and
dec
pop
sub
or
add
fcom
inc
fwait
shl
mov
rol
jle
mov
addr16
inc
test
jo
aaa
inc
les
xor
or
je
enter
add
pusha
sub
pushf
mov
pop
mov
in
fs
mov
xchg
jne
mov
in
jne
mov
std
fild
xor
xor
mov
jb
clc
dec
xchg
dec
jbe
js
inc
sbb
jbe
jbe
xchg
inc
pop
cmp
test
push
out
cmp
inc
lea
and
mov
ja
ja
ja
and
and
shr
(bad)
pop
cmp
lea
fmul
js
jmp
or
fadd
cmp
xor
mov
push
add
inc
shl
add
cmps
outs
xchg
adc
pop
ret
shr
and
inc
push
sub
sub
loope
pop
test
jns
data16
or
and
add
sahf
cmps
outs
ins
and
jb
mov
dec
inc
sub
jns
(bad)
cmps
les
lea
mov
aam
mov
sbb
add
sbb
or
dec
daa
imul
sub
mov
mov
jmp
mov
xor
sub
pop
or
xchg
jl
sub
jp
xor
clc
sub
sbb
mov
jne
ss
and
psubsw
push
adc
mov
and
inc
shr
stos
add
cld
xchg
inc
sub
outs
sar
mov
pop
mov
inc
xor
je
ficom
movs
pop
push
lea
test
int3
sbb
and
inc
sub
das
pop
rcl
sbb
dec
sbb
pop
and
lods
scas
adc
icebp
sbb
js
add
jnp
dec
jo
mov
pop
xlat
add
sbb
adc
and
inc
stos
sub
test
or
or
push
aaa
mov
jmp
jl
sbb
outs
mov
cmp
inc
sub
mov
lahf
lds
add
and
or
jge
push
inc
cmp
ror
xor
push
dec
lock
xchg
jno
sti
adc
or
and
or
in
or
jle
add
pop
inc
in
dec
xor
(bad)
cdq
sub
add
xor
and
adc
arpl
pusha
mov
out
push
lods
nop
add
mov
or
inc
add
and
xchg
pusha
stc
mov
mov
sbb
fidivr
add
cmp
ins
add
outs
jae
movs
mov
jp
sub
add
mov
inc
ret
dec
push
and
pop
enter
cmp
je
push
sub
or
sub
ret
mov
and
sar
add
adc
retf
xchg
inc
scas
xchg
pop
test
pop
ret
cmps
pop
dec
and
adc
xchg
inc
mov
inc
cmps
sub
push
sbb
sbb
jb
mov
add
mov
sub
xchg
pop
call
das
and
mov
xor
or
adc
push
or
pusha
nop
lea
xor
add
movs
pushf
loopne
pushf
inc
mov
sub
dec
dec
test
jae
sub
outs
and
dec
push
shl
inc
ror
mov
je
outs
mov
add
ficomp
pop
adc
cdq
xchg
out
loopne
mov
fs
sub
adc
in
test
and
iret
fisubr
ror
sahf
imul
push
and
mov
inc
sar
mov
or
es
pop
add
lods
std
loopne
imul
hlt
adc
in
cs
mov
jle
add
inc
loop
adc
jmp
or
jne
sub
push
aad
pop
imul
inc
add
repnz
mov
call
fcmovb
shl
sub
lahf
les
inc
cmps
or
xchg
test
retf
xor
shl
fsubr
out
jae
dec
int3
dec
cmp
jmp
sahf
int3
mov
add
jl
inc
xchg
test
(bad)
rcr
dec
sahf
jmp
sub
daa
ins
popf
jbe
xor
cmp
dec
mov
xchg
dec
and
test
(bad)
push
test
(bad)
(bad)
adc
repz
dec
jmp
xchg
(bad)
rol
sub
enter
cmp
xlat
sbb
jle
jmp
sbb
xchg
sbb
sub
adc
(bad)
aad
pop
fistp
nop
xchg
cmp
test
loop
jne
fs
dec
dec
test
and
sahf
movs
sbb
scas
or
mov
sbb
mov
add
dec
fbld
sbb
pusha
dec
icebp
movs
pop
mov
adc
dec
sub
dec
clc
xchg
mov
or
push
or
dec
fcomp
xor
sub
mov
or
ins
and
lahf
dec
jmp
xchg
sar
sbb
sub
and
das
lock
add
xchg
mov
popa
in
int
retf
adc
add
jle
call
xor
cli
cmps
add
ror
icebp
dec
es
sbb
or
inc
out
mov
adc
add
cmp
nop
mov
or
jnp
imul
pusha
shl
sub
jnp
adc
fwait
dec
jb
test
dec
adc
rcl
repz
cmp
rcr
test
cmp
and
cmp
jecxz
sub
cmp
cdq
sub
mov
add
sbb
add
sbb
fwait
out
add
pop
cmps
retf
and
inc
mov
xchg
scas
push
mov
push
mov
or
movs
leave
mov
push
pop
and
mov
ins
aam
imul
adc
add
jo
int3
jmp
shl
in
mov
sbb
xchg
and
ins
xor
adc
jge
sbb
(bad)
mov
mov
js
mov
jg
sub
cmp
add
lea
mov
xchg
jl
pop
in
mov
lods
mov
jmp
cmp
or
sub
nop
lods
les
aad
xor
popf
movs
mov
fucomi
adc
cmp
call
fisub
or
push
inc
adc
jle
jl
leave
push
pop
and
inc
ret
sar
adc
jmp
psrlw
or
and
ret
cdq
cmp
aam
sub
(bad)
jne
test
push
jge
add
ins
pusha
js
mov
cmp
imul
and
mov
ds
int3
movs
xchg
push
sub
aaa
mov
mov
stos
and
jb
inc
dec
or
and
inc
dec
enter
mov
cwde
jb
enter
enter
sub
and
mov
lock
mov
jle
mov
pop
xchg
mov
dec
push
cwde
clc
and
jbe
es
ins
sub
cs
mov
adc
push
push
fwait
add
inc
push
and
jne
push
hlt
or
das
test
daa
lods
(bad)
sbb
and
add
sub
arpl
addr16
or
cmp
lock
jge
dec
jmp
and
rcl
mov
sbb
clc
jmp
inc
call
es
mov
sbb
xor
xchg
retf
xchg
std
retf
mov
inc
data16
popf
in
lds
daa
push
sub
xchg
cmp
loop
xchg
pop
jb
cld
cld
pop
and
sysexit
add
inc
(bad)
sbb
ret
rcr
dec
xor
dec
int
pop
pop
loop
add
or
inc
push
sbb
out
xchg
mov
mov
cmp
cmp
adc
xchg
movs
push
sar
nop
nop
iret
fild
mov
das
xchg
data16
and
es
cmp
sub
or
(bad)
and
sub
dec
mov
add
mov
xor
pop
push
mov
int
data16
inc
and
in
xchg
or
ss
or
inc
pusha
xlat
ror
mov
mov
add
inc
add
jge
jae
push
adc
data16
xchg
mov
sbb
adc
sbb
aaa
imul
fcom
xchg
cld
push
jecxz
add
leave
inc
sub
jle
pusha
jg
xchg
cmp
je
ss
adc
mov
ins
repnz
nop
mov
mov
mov
xchg
data16
aaa
sub
femms
dec
inc
sahf
pushf
(bad)
std
icebp
repnz
dec
dec
dec
repz
cmc
test
dec
idiv
stc
cli
jl
dec
dec
sti
cld
std
ins
xchg
in
inc
and
mov
mov
in
xchg
jmp
les
ins
mov
mov
mov
and
pop
push
jns
inc
xor
pop
inc
dec
movs
push
inc
div
push
inc
fisttp
ss
jno
and
out
test
jmp
push
enter
xchg
xor
xchg
and
ja
pop
movs
push
nop
cmp
loop
shl
dec
xor
lock
cmp
adc
lods
xchg
dec
sub
iret
pop
inc
sub
xor
ins
inc
sahf
fdivr
aaa
adc
adc
inc
inc
dec
adc
mov
add
js
inc
clc
clc
or
and
or
loopne
add
pusha
pop
popa
pop
arpl
sub
or
out
sti
(bad)
test
adc
push
jmp
daa
mov
push
dec
movs
shl
test
push
inc
push
pop
push
push
pop
adc
icebp
dec
pop
inc
pop
mov
or
popa
adc
jae
sub
and
bound
cmps
(bad)
mov
icebp
out
ins
movs
loope
xchg
or
dec
pop
push
push
push
inc
dec
inc
(bad)
fild
and
fild
fs
je
lods
loope
cmp
js
js
addr16
adc
dec
inc
sub
push
mov
push
fld
sbb
mov
sub
mov
pop
dec
sub
add
scas
cmp
shl
push
push
cmp
inc
dec
sbb
dec
in
cdq
loopne
ins
inc
outs
xor
rcr
push
or
icebp
pushf
and
das
dec
movs
sti
mov
cdq
pop
inc
or
stc
loopne
push
inc
push
dec
dec
inc
push
cwde
outs
pop
cwde
or
sub
add
jecxz
cmp
lea
ja
loopne
or
bound
repnz
mov
and
jo
je
adc
inc
cmp
sbb
sbb
xor
arpl
xchg
fst
xchg
and
(bad)
push
push
pop
jnp
sbb
scas
add
(bad)
add
cmp
push
ins
aas
adc
and
stc
ret
dec
arpl
popa
jb
add
jmp
sar
xor
jae
dec
xchg
mov
cmp
stc
and
or
stos
fwait
imul
push
sbb
int
mov
je
sub
das
jp
inc
and
push
js
pop
bound
daa
push
mov
jb
jbe
sub
mov
xchg
sub
jae
sahf
sub
xor
jecxz
in
inc
cmps
adc
movs
ror
mov
sbb
(bad)
push
xchg
cld
mov
pop
dec
inc
dec
inc
inc
push
sbb
pop
mov
sbb
ins
lods
or
push
ins
pop
repnz
sub
inc
lahf
call
sar
adc
cs
pop
in
scas
imul
mov
loope
add
fwait
pop
hlt
push
fcom
ss
leave
sub
xor
gs
inc
or
movs
ror
push
lahf
cmp
mov
or
add
push
lock
fwait
(bad)
sub
(bad)
shr
push
das
or
movs
xor
sbb
shl
inc
in
xor
pop
fwait
mov
inc
inc
cmp
cmps
data16
je
cmp
adc
movs
pop
and
xor
ins
mov
inc
inc
dec
inc
inc
inc
jl
mov
xor
cwde
aaa
dec
inc
xor
mov
lahf
push
push
clc
lods
sbb
shr
rol
into
dec
pushf
dec
dec
pop
mov
(bad)
out
or
or
jbe
dec
jnp
sub
dec
dec
xchg
add
push
inc
outs
push
popf
clc
mov
jns
dec
push
ins
mov
in
jo
and
cmp
daa
clc
push
test
push
or
push
inc
add
sbb
xchg
or
shl
pop
bound
enter
adc
call
outs
xchg
in
rcl
pop
imul
popf
mov
sbb
popa
(bad)
mov
call
and
jo
xor
js
je
sub
popa
xor
fdiv
jo
popa
pop
or
jo
sub
jne
push
add
cmp
and
jne
mov
xor
int3
inc
mov
sbb
sub
jbe
push
sti
xor
add
mov
data16
xlat
add
and
mov
add
cmps
call
sahf
popa
jl
jge
pop
lods
push
movs
sahf
xor
(bad)
push
and
or
add
sbb
or
fucomip
push
pop
loope
lahf
ja
push
mov
ss
cmp
push
ret
mov
sub
retf
or
pop
jo
bound
sub
popa
test
jbe
(bad)
mov
adc
pop
stos
mov
jo
js
test
inc
call
repnz
mov
jae
inc
and
inc
xor
shl
sbb
ins
sub
cdq
mov
loope
xchg
sbb
daa
push
xchg
xchg
sub
gs
test
inc
mov
lahf
sbb
mov
pop
jmp
add
jae
mov
(bad)
cmp
test
mov
loop
cmp
inc
lock
stos
push
mov
outs
sbb
sbb
popf
sbb
xchg
and
inc
jo
data16
cdq
pop
sub
ret
jno
dec
pop
rol
and
icebp
cmp
jno
cmp
js
pop
xor
lea
inc
jo
sub
dec
jecxz
lds
dec
or
lea
fidiv
push
pop
lea
adc
iret
daa
push
push
ins
aam
xor
addr16
mov
inc
mov
push
add
out
push
enter
xchg
adc
stos
call
rcl
seto
add
(bad)
add
and
pushf
movs
pop
inc
xchg
loopne
lods
movs
inc
xor
pop
leave
and
outs
loopne
out
stos
ror
push
daa
mov
add
jne
gs
inc
sti
adc
nop
adc
sbb
fs
mov
and
das
add
in
add
adc
nop
retf
add
movs
repnz
in
sub
push
leave
and
adc
or
adc
xchg
add
push
subps
pop
xor
loopne
ror
sti
daa
sbb
mov
inc
loope
imul
xor
arpl
xchg
mov
inc
inc
(bad)
sbb
shr
inc
enter
sub
nop
dec
push
mov
movs
cmps
daa
inc
push
push
pop
push
dec
inc
pop
add
cmps
loopne
mov
xor
sub
push
inc
add
add
cwde
(bad)
sbb
pop
push
bound
lock
mov
adc
out
(bad)
movs
pop
int
xor
xor
push
adc
add
loop
fsub
in
sbb
mov
xor
test
or
jecxz
push
pop
pop
dec
or
jle
sub
stc
data16
and
das
pop
call
loopne
imul
xor
inc
push
pop
sti
mov
or
scas
sbb
adc
enter
lods
or
sbb
or
mov
scas
xor
test
call
inc
lods
adc
cld
add
xchg
or
nop
push
lods
scas
test
cli
xor
sbb
xor
dec
sbb
leave
xor
push
dec
sub
sbb
icebp
cmp
cmp
mov
or
adc
and
imul
and
dec
call
jns
arpl
and
inc
and
sub
jae
js
dec
sub
jb
or
mov
pop
dec
adc
(bad)
retf
sbb
push
inc
inc
(bad)
jmp
push
dec
inc
push
xchg
lds
jno
stos
push
or
push
dec
icebp
les
xor
add
add
or
test
adc
popf
sbb
loope
adc
or
arpl
push
mov
shl
and
adc
inc
or
and
les
sub
or
sub
pop
inc
dec
hlt
stos
jg
sub
xor
stos
sbb
add
push
aam
retf
jp
fidiv
mov
pop
or
outs
test
in
out
cmp
push
push
or
or
pop
xor
xchg
push
aas
pop
pusha
jns
sbb
pop
mov
jmp
add
inc
xchg
ins
js
lock
nop
ins
daa
sub
test
jl
mov
daa
inc
or
inc
push
jl
cmc
dec
inc
inc
mov
cs
sbb
inc
add
in
sub
mov
ja
ins
sbb
push
cmp
(bad)
xlat
adc
add
ret
dec
sar
stos
ret
lahf
into
ins
jbe
add
add
out
jbe
adc
je
or
push
fadd
out
outs
into
dec
sbb
dec
loop
jb
dec
rol
ins
or
mov
(bad)
ficom
or
and
test
in
dec
or
fild
sub
pop
scas
out
inc
sahf
aaa
sbb
scas
(bad)
sub
push
cmp
add
scas
push
push
and
data16
in
and
pop
push
dec
jbe
out
push
stos
enter
jns
mov
call
sub
push
jo
xlat
enter
js
dec
or
pop
xchg
cmp
and
jne
cmp
(bad)
arpl
in
das
inc
mov
jle
cmp
in
pusha
mov
dec
mov
or
push
push
inc
add
or
mov
pop
mov
jne
cmp
int3
xlat
adc
dec
dec
pop
inc
sbb
add
mov
xchg
or
rcl
pop
jmp
jmp
or
lea
add
sti
mov
mov
push
ror
pop
nop
cwde
mov
xchg
xchg
add
add
iret
mov
lahf
or
add
xchg
or
fsub
sbb
lahf
or
push
push
pushf
sub
js
or
rcr
mov
cdq
lods
retf
adc
sub
inc
(bad)
orps
jns
mov
pop
cmp
sub
lock
mov
outs
add
retf
sub
inc
data16
push
mov
xchg
ins
mov
jecxz
lods
(bad)
mov
jb
shr
pop
ror
inc
xchg
sbb
xchg
bound
aas
sub
clc
mov
int3
in
inc
cs
or
sbb
in
add
dec
adc
gs
jb
inc
add
scas
jecxz
mov
jne
retf
or
cdq
mov
or
outs
pop
sar
push
mov
mov
xchg
jmp
inc
dec
push
dec
dec
dec
or
sbb
sub
mov
sbb
push
pop
dec
or
pop
mov
dec
inc
ins
xor
sbb
sbb
dec
or
call
add
sbb
lds
xchg
or
mov
pusha
cmp
or
ds
xchg
hlt
or
push
lea
adc
jae
add
mul
sub
(bad)
push
cwde
sub
mov
or
fbld
inc
jp
aaa
add
jae
nop
sub
jns
sbb
push
fwait
or
and
pop
dec
cmp
add
aaa
adc
sti
mov
push
jb
add
inc
xchg
popa
add
bound
(bad)
dec
test
hlt
push
mul
pop
loop
aas
adc
push
stc
xor
adc
push
mov
mov
cmps
cmps
repnz
jmp
sbb
movntps
leave
(bad)
mov
jmp
adc
out
inc
jb
sbb
and
stos
je
lea
and
or
das
adc
or
cmp
out
sbb
sub
imul
ins
xor
inc
fdiv
or
imul
jl
mov
jo
pop
sbb
pop
jle
pop
arpl
scas
xchg
jg
dec
jmp
dec
jmp
loope
mov
aaa
add
or
jno
sub
push
pop
loopne
cmp
sbb
mov
in
enter
dec
dec
push
push
hlt
mov
jle
mov
mov
dec
sbb
or
ror
pop
pop
push
inc
push
inc
dec
aam
jmp
mov
inc
outs
or
adc
dec
pusha
cmp
into
jae
cmc
xor
leave
lock
xchg
lds
adc
aaa
and
fs
fst
adc
(bad)
add
bound
sbb
jae
or
inc
xor
adc
das
adc
inc
xchg
dec
enter
xchg
retf
xchg
and
jle
mov
cdq
jecxz
pop
sub
pop
sbb
add
gs
int3
das
xor
pop
sub
xchg
or
imul
pop
xor
xor
inc
fsubr
push
adc
jo
jge
or
xchg
push
das
leave
xlat
xor
or
add
or
imul
lods
mov
shl
push
pop
add
adc
mov
add
xchg
add
pop
jns
(bad)
jb
ja
cwde
mov
dec
inc
mov
sub
(bad)
fdivr
push
xchg
xor
adc
xchg
inc
xor
mov
fist
push
pop
push
dec
sbb
popf
adc
pop
push
mov
jbe
dec
dec
push
je
fild
ret
gs
daa
mov
mov
cmp
or
cmps
in
or
dec
in
add
xor
loopne
ret
cmp
call
mov
sub
pop
int3
pop
push
xchg
or
xor
jo
add
fnstsw
sbb
ror
into
fbld
fs
sub
bound
popa
pop
sub
fisttp
mov
push
call
or
mov
lock
mov
xchg
sub
adc
cmp
push
pop
adc
aam
mov
xor
or
xor
popa
jne
push
movs
or
inc
dec
pop
ins
popa
sbb
jae
jmp
cld
cmp
or
mov
mul
or
adc
je
mov
daa
and
(bad)
and
mov
movs
imul
test
mov
or
daa
push
das
aas
push
push
pushf
mov
scas
jne
or
daa
push
push
or
pop
jae
inc
sbb
mov
push
lods
push
out
shl
mov
adc
(bad)
pop
cmp
push
xchg
dec
inc
cmp
aaa
dec
mov
sbb
call
dec
cmp
dec
nop
and
sbb
xor
mov
inc
call
gs
mov
(bad)
mov
push
add
test
lock
jbe
ins
aam
pop
js
dec
cwde
mov
adc
sahf
mov
in
and
lods
add
or
and
lock
pop
lods
mov
call
mov
mov
mov
cs
mov
enter
mov
jmp
xor
int3
inc
inc
test
pcmpeqb
retf
or
xor
xchg
or
jo
fdiv
pushf
pop
push
push
neg
xor
bound
mov
jecxz
add
cmp
mov
jb
aaa
je
sahf
stos
push
cmp
pop
push
push
inc
inc
and
fcom
sti
or
out
cmps
inc
clc
dec
xchg
sbb
jmp
lods
pop
cmp
sbb
mov
test
cs
addr16
or
pop
ja
in
popa
and
push
mov
ins
outs
push
retf
ins
and
or
and
and
and
inc
and
jge
cdq
(bad)
int3
add
sbb
push
xor
bound
cmc
xor
clc
adc
cmps
sbb
push
sbb
cmp
jmp
repnz
mov
mov
popa
xlat
(bad)
in
daa
pop
push
mov
cld
adc
push
jle
or
in
add
inc
dec
call
test
add
(bad)
pusha
ret
jl
cli
push
popa
or
shl
ret
mov
mov
shl
call
xlat
mov
mov
outs
(bad)
scas
fmul
outs
xchg
dec
add
outs
fcom
pop
sbb
pop
in
pop
ret
push
push
mov
(bad)
cmps
cmc
dec
les
and
sbb
mov
loope
test
ja
or
out
mov
sub
addr16
adc
or
popa
mov
pop
mov
inc
push
das
sbb
jg
daa
loopne
sti
sub
les
ret
sub
stos
xor
mov
nop
outs
cwde
(bad)
gs
adc
pop
mov
xor
les
retf
cmp
cmp
push
pop
or
fbld
mov
pusha
xor
movs
add
imul
adc
adc
inc
stos
push
das
loopne
or
dec
xchg
sub
lds
dec
cmp
push
shl
movs
or
sbb
add
stos
dec
sub
pop
sbb
push
push
(bad)
mov
scas
xor
inc
or
mov
je
or
retf
push
adc
and
mov
in
adc
mov
push
add
dec
ror
(bad)
aad
add
dec
and
mov
push
push
inc
mov
addr16
xchg
js
dec
inc
jmp
add
aad
lea
mov
jns
add
push
enter
mov
sbb
adc
sbb
rol
enter
xor
(bad)
loope
(bad)
xor
sbb
jmp
bnd
push
aas
ret
in
cmps
rcr
in
add
icebp
sub
xchg
les
push
and
sub
lock
or
push
lods
aam
ret
pop
and
and
or
push
xlat
mov
leave
(bad)
adc
outs
pop
sbb
sub
nop
add
leave
inc
mov
jo
in
jae
icebp
or
xor
or
jge
and
add
or
lock
leave
push
cmp
sub
mov
adc
sbb
pop
or
xor
das
cvtps2pd
jmp
cmps
popf
or
cmc
or
arpl
sub
mov
pop
outs
pop
mov
mov
add
add
lock
out
push
mov
inc
adc
mov
mov
push
push
and
cld
(bad)
loopne
adc
inc
adc
inc
ins
jae
pop
retf
and
or
repz
adc
ds
pop
enter
mov
les
add
pop
fcomi
in
ins
imul
lods
mov
mov
or
jge
ret
in
retf
jae
mov
xchg
and
daa
popa
pop
in
sbb
push
mov
sbb
pop
iret
ss
(bad)
jbe
(bad)
rcl
fcom
sbb
mov
fist
jb
sub
cmp
adc
pop
lahf
xor
leave
add
dec
adc
pusha
pushf
inc
mov
adc
mov
fwait
adc
cmp
cmp
or
loope
ja
lahf
leave
fs
inc
and
push
pop
pop
test
cmp
push
xchg
and
or
add
add
ds
xchg
retf
aas
cmp
sbb
dec
outs
or
and
out
cmp
sbb
sbb
loopne
imul
cs
cld
mov
xchg
ret
je
jns
add
or
jp
mov
inc
pop
movs
outs
mov
outs
hlt
cmp
aaa
sbb
fsubr
jmp
push
sub
mov
popa
mov
add
cmp
mov
mov
loopne
in
adc
(bad)
enter
int3
and
push
lea
adc
pop
xchg
xchg
in
adc
mov
(bad)
hlt
jmp
in
(bad)
lea
clc
js
push
data16
add
cld
aad
inc
jp
adc
les
add
sbb
and
dec
adc
lea
inc
adc
jae
lods
jne
inc
aas
sbb
pushf
pop
inc
push
data16
test
shl
jge
ds
adc
cmp
jns
shl
lods
xchg
out
or
cmp
outs
adc
push
nop
out
adc
sbb
adc
dec
test
and
jae
add
dec
add
movs
adc
xlat
cmp
mov
loope
jo
inc
pop
fbld
push
fidiv
sub
add
pop
or
push
mov
xor
inc
dec
enter
add
aam
bnd
movs
and
sub
xor
or
or
mov
(bad)
push
dec
mov
xchg
je
inc
pop
xchg
mov
sbb
mov
xor
mov
ins
test
(bad)
shl
pop
push
push
inc
push
inc
xor
shr
scas
pop
mov
js
sbb
push
inc
mov
xor
pop
in
xor
adc
push
and
mov
jae
lods
js
aam
sub
push
dec
cdq
fucomi
aaa
ficom
mov
stos
jge
cs
jnp
xchg
das
movs
jbe
push
jl
xchg
in
jmp
xchg
inc
xor
adc
(bad)
jmp
inc
mov
je
gs
push
pop
pop
add
imul
jbe
mov
arpl
and
add
xor
push
test
xchg
xor
xor
outs
lahf
cmp
(bad)
mov
lods
sbb
loope
adc
movs
daa
mov
mov
push
mov
addr16
mov
jmp
push
and
jmp
dec
xor
fidiv
call
sbb
pop
sbb
xor
pusha
inc
es
add
sbb
enter
inc
jo
je
pop
and
js
jl
push
popa
arpl
jmp
inc
sbb
push
push
loope
pop
jecxz
lock
add
loope
xchg
push
repnz
fnstsw
or
popf
jg
adc
(bad)
rcl
and
pushf
add
leave
mov
icebp
xchg
cmc
fcmovnb
xor
popf
xor
sub
sbb
shl
aam
gs
xor
mov
fmul
push
mov
push
je
fadd
add
add
mov
in
rol
out
loope
call
push
fucomip
sub
push
repnz
clc
add
stc
nop
push
cld
pop
repnz
add
(bad)
dec
xchg
xchg
add
or
data16
mov
mov
pop
ret
push
add
add
inc
ds
adc
xor
inc
mov
mov
xor
adc
adc
pop
pusha
and
lea
dec
and
mov
inc
mov
dec
dec
ja
add
sbb
icebp
pop
ss
pop
cs
and
or
nop
out
xor
sbb
add
xchg
mov
popf
cmp
push
and
push
mov
pop
in
pop
add
push
sbb
sub
loope
call
jo
xor
add
loop
ret
sub
outs
nop
cs
addr16
sbb
cdq
mov
jbe
dec
push
xchg
pop
fld
mov
mov
dec
mov
dec
pusha
mov
popa
jg
sbb
dec
aaa
fs
sbb
cli
rcl
aam
fild
jae
push
add
sub
imul
adc
shl
mov
je
adc
sbb
sub
adc
jecxz
scas
adc
cmp
xlat
xchg
jecxz
or
sub
add
mov
dec
popa
adc
into
push
mov
mov
or
mov
imul
pop
inc
shr
ret
jo
mov
add
daa
scas
or
outs
data16
cmp
ret
adc
mov
in
rol
sub
cdq
sub
adc
pop
xor
loope
jb
cmp
cmp
fwait
pop
jo
sub
stos
mov
repnz
rcl
mov
push
jb
lods
mov
(bad)
pop
dec
ja
dec
add
data16
test
xchg
sub
test
dec
test
daa
pop
int
dec
push
sub
scas
pusha
mov
xor
aad
test
je
gs
push
push
popa
mov
adc
dec
scas
mov
pop
add
call
adc
or
or
cmp
sub
jnp
stc
aam
or
test
inc
pop
or
add
cmp
xor
packuswb
xor
nop
cdq
rcl
inc
dec
in
cdq
ss
(bad)
arpl
cmps
and
pop
pop
sahf
fist
adc
outs
sti
sbb
or
daa
sbb
call
cmps
loope
loopne
xor
inc
inc
dec
push
inc
push
inc
pop
cmp
and
dec
and
push
push
xor
sub
and
mov
loop
and
icebp
xchg
and
cmp
lea
jo
mov
add
mov
add
xchg
inc
nop
loope
rcl
sub
imul
test
add
scas
add
sub
sub
mov
dec
dec
mov
fstp
and
fstp
add
adc
inc
mov
xor
imul
aas
movd
test
rcl
les
or
popa
retf
dec
loope
jb
ins
xor
movs
fist
loope
push
cmps
call
outs
or
inc
push
mov
xor
add
xchg
inc
dec
cld
sub
pop
icebp
push
adc
inc
cmp
cmc
ins
arpl
add
aas
pop
add
popf
xor
fsubr
cmps
jmp
les
xor
and
ja
pop
dec
mov
xchg
nop
pop
repnz
sbb
dec
xor
sub
daa
pop
lods
push
sbb
push
pop
dec
add
or
pop
xor
les
movs
push
fs
je
fimul
lock
retf
cmp
adc
adc
ss
sub
data16
pusha
push
out
sub
pop
mov
aad
dec
lea
pop
scas
jns
lea
sti
lods
mov
mov
push
pop
arpl
sysret
in
(bad)
cmp
mov
inc
xor
dec
stc
dec
pop
mov
add
sbb
addr16
dec
xchg
jmp
inc
in
or
xchg
outs
add
fs
or
loopne
int
xor
or
sbb
inc
jnp
jne
cmp
or
inc
adc
sti
aaa
fnsave
push
push
movs
sbb
sub
xchg
movs
mov
xor
xchg
ja
inc
js
add
es
push
sub
or
jg
jmp
add
push
or
lods
hlt
imul
xchg
fstp
adc
into
das
pop
or
inc
mov
sub
mov
popa
push
mov
sub
psllw
in
mov
mov
push
xlat
push
pop
and
add
xor
ret
xchg
inc
dec
mov
jg
lds
inc
pop
loopne
cmp
push
loopne
mov
inc
icebp
sub
cmp
cmp
xchg
mov
pop
push
adc
push
dec
sbb
mov
cmp
fisttp
mov
mov
sub
lea
pop
es
and
jne
pop
into
dec
pop
mov
movs
bound
pop
test
sbb
mov
sub
adc
or
loope
mov
rcr
es
add
push
add
imul
or
pusha
jbe
rcr
call
fldenv
xor
inc
pop
(bad)
xor
push
sbb
jmp
sbb
sub
imul
in
ins
add
and
or
nop
addr16
test
xchg
bound
inc
cmp
or
xchg
xor
adc
xchg
lahf
call
or
in
xor
repz
mov
push
sub
cmp
pop
inc
aas
push
rol
cmp
sbb
sbb
inc
or
sar
test
daa
push
adc
in
adc
jl
and
add
push
sbb
fs
xchg
mov
scas
aas
test
adc
dec
or
in
mov
dec
pop
dec
sti
imul
push
xchg
xor
jmp
xchg
dec
out
in
ficom
lods
inc
bound
std
popa
inc
push
jmp
imul
jge
adc
add
outs
in
and
sbb
test
and
arpl
ja
add
add
mov
sub
pushf
xor
or
call
or
push
mov
and
mov
dec
and
xchg
sub
or
fstp
inc
ins
jmp
sbb
pop
lea
add
dec
xor
shl
cmp
int3
rcl
inc
adc
push
mov
imul
dec
adc
push
(bad)
jmp
adc
imul
lods
pop
push
cmp
imul
dec
scas
mov
in
sbb
jp
cmp
cmp
je
xor
retf
or
push
jb
sbb
add
fld
(bad)
movs
add
xchg
or
int3
ins
add
xor
out
jne
nop
pop
enter
add
add
and
xchg
dec
aad
sbb
push
adc
xor
xor
adc
imul
mov
pop
aam
or
and
fisub
sbb
rol
(bad)
mov
xlat
pop
sub
and
sub
dec
in
pushf
nop
add
icebp
pop
loopne
dec
and
das
aam
mov
cs
rcr
xchg
sbb
out
dec
or
je
pop
jmp
inc
icebp
pslld
inc
push
dec
rcr
adc
add
or
test
inc
adc
or
xchg
int3
and
mov
mov
and
ret
out
mov
cmp
sti
jo
(bad)
out
jp
pop
repnz
loopne
jmp
fwait
adc
push
xchg
repnz
mov
test
xor
(bad)
repnz
and
in
add
add
pmaddwd
push
fs
and
sbb
call
imul
adc
(bad)
dec
shl
add
mov
jnp
or
pop
pop
pop
lods
cmp
cmps
iret
repz
and
hlt
pop
cmps
js
dec
sbb
divps
pop
inc
sbb
add
repnz
dec
mov
push
sbb
push
in
pop
shl
push
or
in
mov
sbb
lahf
inc
cmc
sub
cmc
or
jb
cmc
push
inc
mov
xor
sub
push
imul
mov
out
or
cmp
hlt
adc
daa
sbb
inc
xlat
pop
sub
aam
inc
cmc
mov
sbb
jb
outs
mov
cwde
neg
or
jge
add
lods
or
and
or
(bad)
in
ficom
clc
scas
push
daa
push
mov
lods
xchg
and
fwait
pop
gs
out
lock
ret
xlat
cmp
(bad)
outs
adc
fmul
dec
outs
mov
scas
ins
dec
xor
enter
xor
out
sbb
fld
sub
jp
adc
push
dec
loope
push
fdivr
mov
push
js
sub
xchg
iret
push
mov
retf
mov
inc
out
je
pusha
inc
pop
sbb
sub
add
sub
and
jb
push
push
enter
mov
sbb
inc
stc
add
nop
mov
add
or
inc
pop
cli
adc
sbb
enter
stos
es
sbb
sub
add
inc
dec
add
add
imul
clc
and
dec
push
jl
sub
add
sbb
xor
pop
pop
inc
loope
cmp
inc
das
push
or
jg
aas
int3
imul
adc
and
xor
sub
mov
adc
movs
dec
mov
sub
dec
inc
mov
iret
loop
call
add
and
stc
pop
ret
shl
inc
lock
sbb
adc
sbb
rdpmc
ja
dec
xchg
dec
pop
fild
inc
dec
push
push
inc
leave
inc
enter
leave
inc
enter
leave
inc
enter
leave
inc
enter
pop
mov
pop
mov
leave
aaa
inc
xchg
int3
ret
(bad)
push
retf
gs
nop
cmps
and
xor
sbb
inc
inc
mov
jbe
je
push
iret
push
sub
in
mov
mov
xor
in
pop
int3
outs
jo
(bad)
mov
adc
pop
add
mov
xor
sub
or
add
shl
or
push
out
in
add
mov
test
test
ss
adc
jae
retf
lahf
ins
adc
clc
scas
adc
fisttp
rcl
dec
jp
mov
repnz
cmp
in
int3
mov
xor
(bad)
and
ret
mov
outs
leave
leave
ror
pusha
inc
inc
jnp
pusha
sub
ja
push
js
and
sub
or
push
pop
add
sub
inc
pushf
dec
jae
adc
adc
sub
sub
mov
jne
cmps
and
push
add
mov
push
mov
jle
popa
loope
fwait
das
gs
add
div
cmp
jae
inc
enter
lahf
je
je
or
add
aaa
inc
nop
xchg
lea
gs
inc
sbb
add
icebp
mov
cwde
int3
lods
xlat
rol
imul
and
add
cmp
xor
sbb
(bad)
jns
pop
jmp
pop
pusha
int3
adc
xor
inc
cmp
inc
add
sbb
mov
cmp
push
sub
push
dec
or
add
push
xor
es
cmps
lds
fs
xor
arpl
add
xchg
in
pop
sbb
adc
mov
imul
adc
pop
dec
dec
add
add
pusha
or
or
aad
xchg
push
enter
or
nop
xor
mov
push
mov
push
nop
clc
mov
adc
push
add
jae
ins
pop
scas
dec
pusha
mov
pop
dec
inc
lock
mov
mov
adc
inc
push
mov
xor
daa
sbb
sub
jne
add
fmul
repz
sbb
cs
adc
ss
mov
push
sub
sar
imul
in
aad
xor
pusha
pusha
call
in
loopne
lock
add
loopne
repnz
aas
mov
jo
repnz
mov
and
sbb
jb
enter
and
inc
push
cmp
sub
and
xor
mov
cmp
das
and
pop
in
xchg
inc
cmp
inc
push
cmp
fs
xchg
xor
inc
mov
dec
mov
nop
xchg
push
int3
push
or
and
pop
mov
enter
lock
xor
xor
push
xchg
ss
je
xchg
and
gs
mov
jl
xor
xchg
inc
mov
xor
test
enter
test
shl
fdiv
retf
and
or
pusha
movs
mov
enter
lods
inc
mov
lock
xor
mov
mov
enter
shl
mov
sbb
test
ss
sbb
jb
inc
int3
jl
and
xchg
mov
fsubr
mov
jb
js
mov
fadd
call
push
sbb
jbe
cmp
lock
hlt
nop
xchg
arpl
mov
clc
add
and
enter
add
or
xor
mov
repz
enter
inc
cs
sbb
cmp
sub
push
enter
adc
test
cmp
enter
sbb
enter
cmp
dec
cmp
push
sbb
and
sub
jmp
retf
or
inc
inc
mov
out
je
jl
in
xchg
inc
cmp
push
sbb
jbe
cmp
enter
ror
or
pop
push
xor
adc
(bad)
js
and
xchg
ret
dec
jo
aam
xor
aas
and
enter
(bad)
sub
push
mov
jb
mov
rcl
or
cld
jb
in
xor
add
push
xor
jb
nop
retf
push
inc
and
je
jb
enter
jl
mov
nop
xor
call
in
cld
sbb
outs
pop
fmul
or
test
push
test
cmp
into
inc
add
and
lods
mov
sbb
and
mov
and
xchg
ror
push
sbb
in
inc
shr
xchg
inc
inc
test
in
or
in
sbb
push
sbb
sbb
cdq
sbb
inc
fcom
and
in
dec
int
sbb
lock
xchg
clc
(bad)
xor
in
cld
and
int3
sub
inc
call
pusha
and
cwde
or
xchg
inc
inc
ror
dec
jae
xor
adc
and
xchg
arpl
mov
jae
push
pop
inc
sbb
push
in
xor
lock
add
xchg
adc
and
jns
sbb
and
dec
xor
mov
push
stos
inc
sub
aam
xchg
(bad)
hlt
adc
cmp
dec
or
sbb
push
sbb
nop
xchg
or
cmp
les
inc
js
xor
inc
and
ins
and
xchg
enter
je
fsub
mov
jb
clc
xor
dec
in
nop
xchg
inc
xor
cmp
and
inc
mov
inc
loopne
dec
nop
xchg
popa
inc
add
push
sub
gs
and
inc
push
sbb
pop
cwde
pop
mov
pusha
fcom
mov
and
pop
cwde
mov
jb
jbe
xchg
or
sbb
ins
and
(bad)
xchg
test
in
nop
xchg
arpl
cmp
enter
fadd
xor
in
push
and
dec
push
sbb
mov
and
push
push
test
shl
xchg
js
adc
ins
jbe
enter
xchg
sbb
jb
mov
mov
adc
cmp
xor
sub
mov
cmp
mov
enter
mov
xchg
sbb
mov
dec
xchg
inc
inc
push
lods
je
in
in
nop
mov
les
push
enter
nop
xchg
inc
inc
js
lods
sbb
fs
(bad)
or
and
sbb
loopne
xor
push
and
xchg
hlt
sbb
in
test
mov
inc
inc
push
mov
and
and
cmp
pushf
mov
fsub
xor
xchg
inc
dec
push
mov
mov
sbb
mov
mov
movs
shl
fs
and
pop
enter
sbb
int3
nop
shr
sbb
inc
aam
xor
fsub
push
sbb
and
repnz
retf
lods
(bad)
enter
sbb
inc
sbb
dec
inc
cmp
or
xchg
mov
and
fs
cld
fs
and
inc
xchg
cmp
ins
push
jb
enter
je
mov
movs
js
jl
enter
adc
in
xor
xor
mov
xchg
nop
mov
xchg
in
xlat
xchg
inc
dec
fisttp
pushf
xchg
test
nop
or
lods
mov
or
nop
or
mov
mov
les
cmp
jl
lods
xchg
inc
inc
push
rcl
aam
xor
enter
sub
and
xchg
enter
call
sbb
lock
fs
popa
hlt
cmp
inc
inc
push
sbb
test
retf
add
lods
add
inc
push
sbb
or
or
bound
enter
adc
mov
je
mov
and
and
inc
push
cmp
sub
sub
nop
xchg
inc
sub
xor
sbb
fs
enter
fs
mov
jb
push
and
enter
push
and
inc
push
sbb
push
push
pop
jl
nop
xchg
inc
pop
test
sbb
aam
add
enter
xor
sbb
jb
xchg
je
in
and
xchg
inc
test
enter
mov
mov
addr16
and
das
cmp
leave
adc
movs
lds
mov
les
xchg
inc
inc
pushf
call
jecxz
xchg
imul
nop
sub
gs
and
and
(bad)
adc
cld
les
jb
in
(bad)
and
mov
and
push
and
jb
enter
adc
call
in
nop
xchg
sbb
and
sub
xor
mov
enter
sub
and
sbb
in
ins
xor
xchg
inc
inc
nop
cmp
ss
in
cmp
add
and
sbb
inc
push
dec
js
nop
xchg
inc
dec
mov
fs
push
retf
cld
pop
inc
inc
xchg
fs
xchg
pusha
and
sbb
push
jb
enter
je
mov
js
lods
jl
enter
sub
inc
push
sbb
test
in
xchg
inc
mov
nop
sbb
cld
xchg
and
cwde
enter
dec
pushf
js
sbb
test
fsub
arpl
mov
mov
xor
sub
mov
mov
jl
mov
jb
enter
adc
inc
inc
push
enter
sbb
inc
ror
and
in
fcomp
je
push
inc
mov
push
in
mov
call
inc
in
in
test
sbb
hlt
and
inc
inc
push
sbb
cld
mov
add
and
xchg
scas
rcr
adc
inc
inc
mov
pushf
pop
fs
xchg
mov
push
sbb
test
lods
sub
jb
enter
mov
repnz
mov
rol
xor
enter
jns
inc
and
shr
aam
fadd
push
cmp
jp
xor
xchg
loopne
in
int3
push
sbb
call
fs
and
cmp
and
mov
inc
nop
xor
xchg
add
jl
push
or
adc
and
jge
sbb
jb
inc
sbb
and
xchg
xchg
enter
sub
sub
mov
jb
shl
nop
and
push
sbb
fs
inc
pushf
inc
and
test
leave
dec
and
push
push
xchg
pop
mov
pop
call
jb
and
mov
sbb
jb
cld
je
and
xchg
inc
js
jl
sbb
fs
fadd
or
mov
and
sbb
in
test
inc
test
fmul
test
mov
mov
xor
mov
loopne
xchg
rol
and
je
movs
mov
jb
(bad)
and
aam
fmul
sbb
mov
enter
mov
dec
mov
jb
mov
int3
fs
and
push
sbb
fs
clc
push
inc
mov
xor
enter
mov
push
and
adc
adc
sbb
push
cmp
mov
fs
xchg
and
push
ds
outs
add
xor
gs
cmp
enter
inc
inc
cld
cmp
sbb
xor
inc
mov
inc
xchg
in
xor
in
fadd
xchg
dec
mov
cmp
enter
(bad)
pop
mov
sbb
jb
shl
adc
fs
nop
lock
and
das
cmp
nop
push
ret
inc
adc
ret
mov
call
or
or
dec
dec
dec
stc
mov
and
push
int3
xchg
hlt
xchg
inc
into
push
dec
and
push
mov
les
imul
dec
push
fst
or
jb
enter
xchg
sub
mov
xor
xor
cmp
fs
xchg
cmp
mov
mov
in
xchg
sbb
and
xchg
sbb
or
aam
dec
jb
enter
fadd
loopne
in
enter
call
mov
mov
inc
sar
pusha
mov
or
inc
push
cdq
lea
mov
les
test
xchg
in
xchg
and
and
cld
pusha
in
xchg
xchg
les
push
xor
cwde
xor
lock
in
fcom
cld
jl
les
cmp
sete
and
mov
addr16
ret
push
(bad)
and
bound
add
lahf
pop
push
add
xor
fist
adc
sbb
push
arpl
inc
dec
mov
push
pop
xchg
fs
ins
mov
and
(bad)
fiadd
test
imul
push
push
dec
mov
dec
mov
mov
push
push
les
adc
mov
dec
sbb
adc
or
(bad)
mov
outs
push
fs
shl
and
mov
dec
push
ja
int3
push
jnp
dec
out
stos
outs
fadd
inc
cmps
outs
pop
out
rcr
jae
bound
mov
cmp
pop
das
xchg
aaa
mov
ja
and
mov
stos
jg
dec
daa
ins
pop
jbe
out
popa
aam
sbb
push
jnp
outs
jg
and
add
pop
cs
fs
bound
outs
jb
sub
sbb
push
xchg
sub
mov
rcl
pop
or
pop
mov
adc
sub
idiv
test
iret
retf
mov
gs
aas
outs
xchg
push
mov
inc
test
stos
lods
mov
cmp
pop
push
mov
popa
mov
adc
add
aad
sbb
pop
sub
push
adc
add
fadd
push
xor
mov
dec
adc
(bad)
inc
or
adc
or
addr16
test
addr16
stos
nop
or
or
or
les
and
mov
lock
push
dec
xor
xchg
add
fisub
push
stos
or
push
adc
add
or
xor
mov
stos
xchg
mov
mov
outs
mov
jg
adc
xlat
outs
xchg
push
mov
(bad)
lahf
jne
and
push
xor
lods
sub
aas
inc
fsub
das
sbb
and
jae
xchg
add
fs
or
ins
or
test
stos
jecxz
or
sbb
xlat
imul
fbstp
nop
imul
and
push
push
xor
rcl
mov
push
push
add
imul
pop
push
xor
mov
jns
(bad)
lahf
inc
dec
imul
adc
ins
push
xchg
daa
lea
mov
les
dec
dec
push
mov
add
setnp
add
lds
dec
outs
addr16
add
fbld
ins
sub
addr16
inc
and
or
enter
add
push
fadd
aaa
adc
add
jp
push
ret
mov
cdq
xchg
addr16
mov
imul
prefetchnta
dec
jg
jbe
dec
jae
inc
loopne
out
pop
xchg
lods
ret
arpl
jo
sbb
pop
adc
add
xor
hlt
scas
jmp
lahf
adc
inc
jle
jge
mov
imul
sub
pop
inc
pop
mov
adc
vmovups
shl
push
or
jae
inc
mov
add
xor
pop
shl
shl
gs
les
ja
test
mov
data16
push
push
jl
pop
sbb
(bad)
and
fcomp
dec
arpl
pmaxsw
pop
(bad)
dec
inc
popa
sub
push
out
ins
xchg
adc
jnp
pop
push
mov
sbb
sbb
aaa
mov
mov
rol
mov
adc
inc
adc
ret
jo
jne
arpl
or
sub
or
lods
test
daa
jg
bound
and
xor
mov
test
mov
outs
mov
inc
scas
dec
outs
mov
sahf
fstp
pop
pop
pop
leave
or
mov
mov
sti
addr16
outs
jns
jmp
ins
(bad)
cmps
and
dec
das
adc
dec
push
sbb
or
mov
jo
fist
mov
xchg
addr16
add
inc
inc
mov
pop
sbb
push
jmp
push
rep
inc
mov
and
bnd
inc
mov
mov
mov
lahf
cmp
xor
les
mov
ficom
mov
pop
adc
jg
or
xor
sbb
out
adc
sbb
push
ins
les
ss
aaa
daa
cwde
dec
push
pop
pop
not
imul
cmp
sbb
ja
pop
jae
mov
add
ja
inc
mov
loop
jne
dec
mov
push
mov
push
dec
mov
pop
xor
adc
adc
ins
fidivr
je
mov
test
and
push
out
pop
es
pop
jb
addr16
or
pusha
xlat
adc
xlat
jae
test
jae
fs
lods
cmp
sub
or
xlat
mov
add
pop
outs
repz
popa
push
lods
pop
imul
sbb
xlat
push
loopne
push
out
ja
adc
and
inc
adc
je
test
sbb
out
mov
inc
mov
jmp
inc
mov
xchg
mov
jae
les
xor
xor
shr
push
inc
push
aas
adc
or
aaa
arpl
addr16
pusha
test
xchg
or
inc
pop
dec
pop
or
ins
or
aaa
jp
int3
inc
or
adc
or
dec
jecxz
push
sbb
add
dec
xlat
ror
scas
not
pop
outs
aaa
outs
or
rol
outs
aas
adc
(bad)
or
or
cmps
or
mov
mov
shl
aaa
inc
emms
push
nop
jbe
dec
push
or
and
(bad)
dec
aas
or
fistp
pop
and
push
push
or
mov
jnp
in
sbb
dec
jo
dec
or
mov
xchg
or
int
inc
out
pop
lds
or
(bad)
cmps
and
outs
add
ss
dec
addr16
mov
mov
push
cmps
inc
jmp
rcl
in
fdiv
aaa
aas
fiadd
or
pop
leave
shl
and
cmps
or
test
dec
lahf
dec
rcl
push
outs
push
pop
lea
stos
or
aad
dec
ja
mov
or
sbb
pop
inc
(bad)
mov
sub
pop
dec
sub
mov
or
dec
dec
imul
push
pop
dec
sbb
dec
repnz
(bad)
and
push
sub
mov
retf
push
push
sub
xchg
mov
ins
add
outs
aaa
push
xchg
test
stos
or
xchg
inc
dec
test
pop
fisub
lahf
jmp
je
dec
adc
sbb
(bad)
sbb
sbb
xchg
inc
ins
sub
je
ja
sahf
je
xchg
fisttp
scas
adc
xchg
out
or
sbb
inc
sub
rcl
or
outs
prefetchwt1
jno
ins
test
daa
adc
inc
rcr
adc
add
bound
sbb
pop
test
mov
jg
mov
push
and
or
repz
xlat
dec
out
scas
lods
call
pop
lds
or
outs
or
imul
imul
adc
pop
and
inc
pop
push
adc
ret
mov
pusha
je
and
push
cmp
jno
shl
push
cmp
push
and
push
addr16
mov
sub
push
scas
sbb
sub
stos
sbb
nop
cmove
fbld
sbb
sub
stos
test
ja
mov
sub
pusha
pop
cmp
push
dec
stos
or
xlat
pusha
sub
or
out
inc
add
adc
xchg
push
jbe
inc
mov
bound
pop
enter
sysexit
xor
sub
pop
push
pop
leave
lds
or
xchg
sbb
in
pop
or
jae
push
dec
div
scas
or
pop
and
sbb
ins
cmp
sub
lea
das
aas
xor
xchg
xor
mov
gs
shl
dec
pop
cmp
es
dec
inc
fcmovnbe
or
sub
out
ins
inc
mov
or
pop
inc
jno
data16
(bad)
add
xchg
or
ins
and
lock
pop
or
jge
fadd
iret
or
seto
cmps
adc
pop
iret
sbb
mov
aaa
or
ficom
movups
pusha
inc
xchg
cmps
jecxz
repnz
(bad)
aad
mov
push
dec
and
push
dec
test
cdq
mov
inc
xchg
inc
push
and
(bad)
push
jle
push
(bad)
ror
into
push
or
mov
inc
sub
cs
inc
lods
jbe
lods
daa
or
shl
push
push
xchg
dec
ja
int3
rcl
mov
dec
(bad)
bts
cmps
ins
mov
popa
iret
fadd
cmps
add
dec
push
mov
adc
inc
ins
xlat
das
pop
aas
xor
adc
inc
or
das
dec
dec
sar
push
addr16
mov
in
jb
push
stos
mov
mov
out
push
lods
ficom
push
in
stos
fcom
adc
stos
or
das
cmp
push
mov
push
stos
mov
mov
and
sbb
push
cwde
mov
ret
xlat
push
lods
pusha
jp
pop
lds
pop
aaa
addr16
mov
mov
mov
or
fbstp
and
or
add
mov
outs
in
call
cmovg
sbb
mov
fisttp
mov
xchg
out
(bad)
sbb
push
aad
mov
push
xor
aad
push
xlat
and
pop
sar
inc
add
pop
push
mov
adc
ror
adc
and
adc
lea
out
mov
outs
out
pop
pop
mov
cmp
cmp
push
or
adc
dec
pop
rol
test
push
push
inc
mov
add
adc
mov
add
addr16
enter
adc
push
fmul
aas
xlat
adc
ins
fisttp
lods
jbe
mov
xchg
or
test
push
dec
cmp
dec
lahf
outs
sbb
cmps
adc
maxps
lods
arpl
inc
xor
aas
and
addr16
adc
pop
addr16
and
adc
push
inc
pop
not
adc
pop
push
add
lds
mov
fild
arpl
mov
adc
sub
ret
cmps
sub
push
test
pop
addr16
add
mov
push
or
pop
movs
or
outs
mov
push
dec
inc
rol
dec
jb
sub
push
adc
mov
scas
push
mov
mov
mov
sub
dec
push
push
jb
neg
fisttp
dec
add
adc
pop
adc
mov
pop
adc
outs
or
pop
inc
inc
xor
repz
adc
add
pop
or
mov
jnp
and
mov
iret
jae
test
push
pusha
mov
cmp
fs
aam
push
outs
dec
sbb
cmps
mov
adc
mov
push
maxps
adc
mov
or
out
ins
mov
sbb
and
inc
cmova
sbb
pop
xor
dec
cmp
dec
xchg
xchg
pop
jae
ret
mov
cmp
push
movs
mov
sbb
outs
jnp
add
mov
sbb
sbb
jg
add
je
iret
adc
push
pusha
mov
and
repnz
pop
adc
add
dec
pop
leave
or
movs
push
sbb
push
adc
push
pop
dec
pop
add
mov
add
push
test
pop
scas
xor
pop
inc
pop
xor
adc
les
scas
pop
enter
mov
xchg
pop
adc
fs
ds
test
adc
push
inc
das
outs
dec
mov
and
xchg
scas
movs
inc
pop
xor
dec
jle
ret
pop
outs
sub
stos
adc
sbb
popa
popf
ror
adc
call
(bad)
push
movs
test
adc
fdiv
add
jbe
pop
push
cmp
add
ins
test
xor
and
arpl
push
inc
call
es
mov
ror
ins
aad
out
div
ss
getsec
jg
jnp
xor
pop
(bad)
mov
jecxz
cdq
addr16
ss
cwde
xor
adc
packuswb
jl
dec
retf
dec
data16
call
shr
inc
dec
adc
cmp
test
add
xchg
scas
push
mov
push
mov
aaa
adc
ret
push
outs
addr16
jmp
psadbw
dec
cmps
push
or
pop
cmps
pop
mov
and
inc
cmp
aaa
dec
and
not
add
or
ins
and
push
and
fild
pop
fwait
(bad)
xor
inc
xor
inc
and
adc
xchg
mov
push
(bad)
mov
inc
mov
stos
leave
dec
shl
pushf
mov
mov
lea
dec
inc
mov
or
adc
fild
out
ja
sbb
inc
inc
iret
fwait
pusha
pop
or
aaa
adc
xchg
(bad)
xchg
mov
ja
mov
ins
adc
addr16
add
and
fisubr
inc
mov
add
push
lds
aaa
add
rol
ss
adc
push
pusha
xor
pop
mov
mov
aaa
xchg
es
retf
xor
xchg
sbb
pop
adc
xchg
out
stos
pop
or
fisubr
outs
addr16
cmp
fbstp
inc
mov
push
sbb
push
add
pop
jg
pop
push
push
inc
test
mov
pop
push
test
inc
outs
xlat
or
jmp
ins
fisttp
mov
cdq
ss
sbb
jbe
pop
(bad)
out
(bad)
xchg
mov
fcmovbe
or
xchg
adc
dec
xor
adc
ror
outs
out
pop
popa
add
gs
push
mov
pop
out
jg
test
stos
jcxz
adc
ja
test
push
pop
sti
pop
sbb
outs
mov
pusha
addr16
mov
push
and
dec
inc
das
ja
and
aad
sbb
add
jg
sub
cmps
movs
xchg
rol
and
mov
rcr
jg
adc
pop
rcl
adc
pop
mov
sub
adc
add
aaa
push
scas
or
mov
mov
or
mov
push
mov
push
push
ret
ja
xor
dec
add
xor
dec
cmps
ins
mov
xor
or
xchg
push
push
dec
cdq
and
test
push
lods
inc
inc
pop
add
enter
cmps
mov
xchg
ror
outs
adc
or
test
xor
add
mov
jmp
test
push
jg
jmp
clc
cwde
ins
pop
fist
dec
jge
dec
ins
xchg
pop
imul
pop
lea
mov
lahf
push
iret
push
jo
pop
cmp
addr16
sub
stos
xchg
(bad)
fisttp
and
sbb
mov
call
pop
add
cli
mov
jnp
add
sub
popa
pop
scas
mov
sbb
adc
scas
jae
adc
jae
test
and
popf
outs
aaa
xor
mov
stos
aaa
(bad)
or
lds
inc
test
xlat
push
aaa
jo
jae
push
pop
outs
sbb
jp
push
aaa
push
or
or
pop
adc
add
cmps
and
push
pop
jmp
dec
or
addps
jbe
lea
mov
and
sbb
sbb
sub
add
sbb
xor
cmp
and
mov
or
and
and
pop
pop
pusha
and
and
push
and
and
jl
and
and
mov
and
and
and
and
and
and
and
int3
rcl
and
and
fcomp
loopne
and
and
call
and
and
cld
add
add
mov
and
or
sti
ret
mov
sbb
mov
jo
mov
or
mov
xor
retf
fisttp
cmp
xor
hlt
clc
cld
add
jb
xor
or
ins
xor
xor
jo
js
ss
xor
sbb
movs
test
mov
fs
enter
fs
fcomp
fs
nop
xchg
fs
lock
clc
fs
fs
add
call
ins
or
enter
sbb
and
mov
xchg
xchg
sub
les
and
sbb
and
and
js
xor
and
and
cmp
inc
and
and
xor
push
and
and
push
pop
pop
pusha
xchg
and
and
(bad)
ins
and
and
dec
dec
pop
pop
and
and
nop
xchg
pusha
xor
stc
outs
jge
sbb
mov
xor
xor
xor
xor
xor
jl
cmp
xor
je
test
cdq
pusha
ss
mov
sbb
sbb
mov
mov
sbb
enter
sbb
sbb
fcomp
ror
enter
or
enter
xchg
cwde
pushf
enter
mov
xchg
xchg
fnstenv
xchg
xchg
xchg
xchg
rol
int3
xchg
xchg
xchg
xchg
rcl
fcomp
inc
inc
cs
inc
dec
dec
mov
pop
pop
mov
fs
xchg
fld
xchg
xchg
xchg
xchg
jl
test
mov
xchg
xchg
pushf
mov
xchg
xchg
lods
mov
mov
mov
xchg
xchg
xchg
int3
rcl
fcom
loopne
call
in
lock
clc
xchg
xchg
retf
xchg
cld
add
add
xchg
xchg
xchg
xchg
or
adc
xchg
xchg
xchg
xchg
sbb
and
xchg
xchg
xchg
xchg
sub
xor
nop
xchg
xchg
xchg
cmp
inc
dec
sbb
sbb
dec
push
push
pop
sbb
sbb
pop
pusha
fs
ins
jo
js
sbb
sbb
mov
sbb
mov
sbb
call
sbb
hlt
clc
cld
sbb
mov
or
sbb
sbb
adc
sbb
js
sbb
and
dec
outs
lods
lds
xor
mov
xor
xor
inc
dec
xor
xor
dec
push
push
pop
xor
xor
pop
pusha
fs
ins
jo
js
xor
xor
mov
jb
xor
xor
xor
xor
mov
mov
xor
enter
xor
xor
fcomp
loopne
xor
xor
call
xor
hlt
clc
cld
add
xor
xor
or
xor
xor
adc
sbb
xor
xor
and
sub
xor
xor
xor
cmp
xor
xor
inc
dec
dec
push
xor
xor
push
pop
pop
pusha
xor
xor
fs
xor
je
jl
xor
xor
test
xor
xchg
cwde
pushf
mov
movs
test
mov
xor
xor
xor
(bad)
enter
xor
xor
fcomp
loopne
xor
xor
call
xor
hlt
clc
cld
add
add
or
xchg
retf
in
adc
sbb
and
cmps
cdq
and
call
mov
cmp
and
jge
sbb
sbb
pop
sbb
sbb
pop
pusha
lock
sbb
nop
lds
pushf
mov
mov
ins
mov
mov
mov
and
enter
and
and
fcomp
loopne
and
and
call
and
hlt
clc
cld
add
and
xchg
mov
adc
int3
sub
push
mov
or
and
xor
and
xchg
and
sbb
and
ret
aam
and
and
fsub
in
mov
xchg
and
sub
mov
hlt
mov
add
fwait
lea
int3
xor
aaa
cmp
mov
inc
and
std
jnp
jb
test
aas
cmp
jne
movs
lods
mov
inc
sub
sub
dec
fsub
into
pop
pop
xor
push
add
and
nop
out
jne
sbb
sbb
push
or
or
dec
in
out
adc
and
and
fwait
ins
push
jl
xchg
daa
dec
mov
and
push
daa
xchg
or
mov
sahf
mov
adc
addr16
sub
mov
out
loop
sbb
or
xor
ins
sub
xchg
dec
pushf
mov
(bad)
or
xchg
push
xchg
sub
push
add
daa
lods
shr
mov
add
sub
sbb
call
enter
inc
add
pop
inc
in
loopne
daa
pop
jb
loopne
fsub
in
dec
or
adc
ins
sar
cmp
(bad)
add
inc
or
mov
cmp
add
mov
repz
pop
test
inc
mul
or
sti
and
ins
shl
mov
pop
push
inc
sub
jne
sbb
movs
sub
fmul
push
fcom
add
enter
aam
adc
aam
call
add
es
pusha
push
retf
fld
mov
ret
mov
jl
gs
mov
mov
mov
fiadd
inc
adc
push
mov
(bad)
ja
and
nop
outs
jl
and
mov
sbb
stc
(bad)
sar
daa
sub
push
mov
cmp
leave
popf
cdq
movs
mov
pop
out
loopne
ins
ret
scas
inc
and
(bad)
adc
pop
and
cmp
in
mov
pop
mov
and
rcr
sub
jl
xchg
push
nop
arpl
xchg
pushf
pop
ja
pusha
and
push
imul
fcomp
xchg
mov
mov
xor
inc
imul
enter
sbb
clc
clc
pop
mov
imul
popa
add
and
sbb
or
xlat
mov
std
or
ss
jbe
or
iret
(bad)
mov
xor
adc
jbe
or
mov
cmp
xor
in
rcr
fiadd
push
js
jb
jae
shl
dec
inc
mov
or
fistp
sub
loopne
push
cmps
ins
push
outs
popa
jae
out
mov
xor
add
and
sahf
ins
mov
mov
lods
adc
ror
cmp
add
les
add
enter
mov
inc
add
adc
in
dec
lock
and
push
into
test
adc
rcr
pop
aaa
and
or
ss
pusha
retf
out
les
lds
mov
dec
mov
lods
xchg
push
or
inc
sbb
in
nop
out
mov
xor
sbb
fs
xor
jbe
and
xor
outs
push
xor
cmp
outs
pushf
aaa
dec
in
pop
ja
sbb
es
adc
add
mov
add
dec
inc
and
rcr
mov
xor
(bad)
enter
adc
rcl
shl
or
imul
and
mov
dec
pop
jge
pop
test
and
rol
push
(bad)
in
or
loopne
jmp
pop
ss
push
push
test
sbb
push
cmp
xor
xchg
push
inc
or
in
push
push
scas
addr16
add
jo
add
ja
fistp
add
cdq
inc
fild
addr16
sub
cmp
or
lods
and
scas
sub
cwde
xchg
sbb
mov
xchg
add
add
jnp
movs
add
push
mov
clc
add
adc
dec
femms
inc
enter
mov
adc
cmp
mov
dec
adc
mov
fwait
sbb
add
or
sbb
sbb
(bad)
sub
sbb
inc
dec
imul
jno
mov
std
mov
sbb
jae
mov
dec
loopne
into
ss
cld
ror
adc
mov
daa
(bad)
cmp
add
mov
out
(bad)
adc
xlat
sbb
mov
sbb
or
jg
imul
xor
mov
add
ret
jl
jne
mov
and
shl
fdivr
add
push
dec
mov
push
mov
imul
inc
pop
(bad)
(bad)
addr16
rol
inc
out
scas
dec
inc
add
and
xor
xchg
push
retw
jge
xchg
adc
xor
or
or
xor
sub
mov
popa
cmp
and
dec
loop
inc
mov
and
add
out
sub
loopne
add
std
sbb
leave
imul
sbb
or
xlat
push
mov
lds
rcr
and
inc
or
cmp
stc
sbb
mov
xchg
movs
push
dec
imul
(bad)
mov
or
jno
loopne
popa
inc
and
int
mov
pop
sbb
pop
or
mov
xor
es
push
pop
sbb
xchg
add
adc
xor
xchg
or
dec
xlat
add
jl
or
dec
inc
sbb
or
push
rcl
cmps
or
xchg
call
sub
ja
rol
dec
pusha
adc
fsubr
or
outs
push
or
sti
mov
js
or
mov
loopne
mov
dec
mov
(bad)
fidiv
pop
aam
xchg
fsubrp
imul
push
push
inc
stos
pop
adc
lahf
adc
(bad)
push
xchg
xor
addr16
cmps
call
nop
or
jmp
aas
or
push
sub
inc
adc
cmp
xor
add
mov
push
sub
xchg
or
scas
push
dec
outs
xor
xchg
or
pop
adc
jns
xor
sub
or
stc
mov
mov
movs
xor
xchg
lahf
mov
imul
daa
mov
or
inc
rsqrtps
retf
es
mov
add
adc
mov
daa
pop
popa
ret
adc
dec
and
pop
cmp
and
int
sbb
in
add
xchg
out
push
sub
push
or
dec
shl
sbb
xor
rcr
outs
(bad)
add
pop
mov
dec
or
std
pop
add
or
rsm
fs
mov
test
cmps
int
fs
or
jb
fs
(bad)
mov
sub
or
dec
sub
sub
adc
inc
repnz
mov
add
shr
lahf
sbb
and
mov
mov
je
or
jmp
push
add
pop
inc
repz
jmp
and
inc
xchg
jnp
dec
pop
jo
(bad)
jmp
push
repnz
(bad)
(bad)
(bad)
jnp
mov
ins
mov
out
in
std
das
dec
mov
popa
xor
ror
sbb
add
jmp
daa
jns
or
sub
je
fdiv
imul
xlat
sub
and
das
sub
add
bnd
mov
mov
jnp
out
mov
dec
or
add
call
mov
jl
les
ins
mov
push
push
ret
mov
gs
mov
call
sub
dec
cmp
and
and
cmp
jmp
cmps
nop
add
in
or
xor
lock
add
lods
pop
and
adc
add
outs
pop
ror
add
or
push
sub
enter
fsubr
sub
mov
test
loope
mov
pusha
dec
xchg
fnstcw
jnp
leave
lods
sub
add
inc
pop
pop
stc
adc
cmps
mov
push
sbb
pop
dec
pop
icebp
pusha
std
dec
jo
inc
push
pop
add
pushf
bndstx
mov
sbb
pop
inc
push
sar
or
aas
pop
mov
adc
(bad)
cmp
adc
iret
add
add
sub
sub
pop
adc
nop
add
mov
cwde
sbb
test
jle
add
sbb
sbb
mov
iret
repz
jg
inc
dec
push
lock
and
xlat
push
pop
aad
mov
rol
es
inc
ss
ret
es
rcr
push
ins
adc
fld
(bad)
bnd
push
enter
punpckhbw
in
punpckhbw
nop
or
or
and
and
push
neg
add
add
push
mov
(bad)
fiadd
lods
push
push
jl
mov
sbb
out
test
enter
add
je
sbb
(bad)
sbb
retf
fidiv
(bad)
and
jne
ret
cmc
pop
scas
hlt
add
enter
imul
xor
inc
popf
cmps
stc
push
inc
js
fs
cmp
repz
xor
enter
mov
dec
outs
data16
sbb
sbb
jmp
xor
gs
imul
mov
outs
mov
pop
fimul
stos
fisttp
dec
into
add
(bad)
stc
repnz
add
and
push
and
jp
add
xchg
pusha
fistp
mov
ret
xor
test
loop
imul
xchg
cs
sbb
dec
sub
dec
adc
repnz
in
or
dec
jge
rcl
and
dec
or
push
xchg
inc
sahf
or
ret
lock
pop
test
or
and
cmp
push
add
xor
sub
out
sub
fst
sbb
xor
xor
mov
push
cmp
sbb
cmp
inc
push
jg
inc
shl
adc
cmp
rol
(bad)
add
scas
mov
int
or
xchg
add
les
pop
xchg
mov
les
jae
mov
push
inc
pop
mov
jne
and
repnz
sbb
(bad)
nop
arpl
sbb
xor
daa
hlt
xor
pop
enter
div
xor
ror
dec
xor
xor
in
ds
imul
push
mov
lds
fild
adc
adc
add
test
sub
add
leave
or
iret
mov
push
out
and
fdivr
add
es
push
in
inc
pop
jmp
pop
add
mov
push
out
xchg
out
in
imul
push
enter
xor
push
inc
repnz
mov
xor
movs
add
mov
mov
and
add
add
repnz
mov
sbb
lea
in
enter
sbb
inc
bndstx
and
xchg
je
and
adc
dec
adc
lock
movs
leave
addr16
jl
dec
add
inc
nop
jo
pop
and
shld
daa
xchg
sbb
in
shr
inc
mov
xchg
jno
gs
rol
pop
pop
mov
pop
pop
sbb
xchg
or
inc
or
mov
push
xchg
(bad)
sub
push
loopne
xchg
sbb
xchg
add
dec
dec
cdq
call
dec
adc
add
xchg
pop
sbb
push
mov
add
xor
(bad)
or
jl
cmp
cmps
mov
sub
ffree
outs
test
mov
out
scas
push
push
add
mov
cmp
push
cmp
ror
daa
add
idiv
mov
aaa
cmp
jl
jmp
test
xor
movs
add
add
adc
add
add
int3
pop
or
xlat
std
lods
int3
(bad)
imul
jae
xor
add
dec
or
dec
mov
add
mov
or
pusha
xchg
out
cld
int3
push
sub
ret
adc
sub
mov
das
int
and
mov
push
in
int
add
fild
mov
stos
test
fist
in
fwait
das
mov
into
push
das
repnz
adc
xor
inc
or
and
jmp
mov
into
in
enter
fdiv
push
iret
enter
aas
push
enter
sbb
cld
add
add
xor
(bad)
or
xchg
inc
mov
sub
xor
cmp
aaa
inc
cmp
out
add
xor
pop
sub
and
sub
ss
sub
daa
mov
cmp
sub
xchg
pop
jns
cmp
sub
cs
test
inc
xchg
data16
inc
mov
cmp
push
push
push
imul
mov
xor
shl
and
lds
and
out
pushw
mov
push
nop
outs
sub
mov
mov
popa
fadd
enter
enter
ror
shr
jg
ss
xor
xor
pop
dec
xor
or
test
and
xchg
mov
gs
cmp
int
add
or
xchg
jl
add
adc
xchg
or
add
bound
cmp
add
std
xchg
sbb
lahf
add
iret
mov
mov
ret
add
dec
test
cmp
imul
dec
sub
js
ins
popa
retf
ret
rcl
xor
add
add
xor
mov
and
pop
jne
xchg
or
mov
enter
push
ja
mov
in
mov
and
inc
mov
sub
mov
jmp
(bad)
(bad)
push
or
adc
inc
mov
push
adc
jmp
je
xor
cmp
nop
mov
dec
xor
loopne
jecxz
xor
inc
jbe
hlt
xor
pop
mov
dec
xchg
test
and
or
fidivr
or
addr16
sub
aad
jl
pop
iret
sub
push
rol
xor
dec
jg
movs
aad
fcmovnbe
xor
scas
add
cdq
xor
sbb
add
das
mov
jecxz
mov
ins
add
pop
loope
xor
sbb
inc
push
les
or
mov
mov
(bad)
jmp
cmp
sar
hlt
mov
add
xlat
xchg
ins
popf
fld
pop
cmp
inc
sub
adc
jo
cmps
push
aas
add
popa
push
dec
imul
mov
sub
adc
inc
mov
and
or
push
fdivr
or
cmp
pop
sub
cld
addr16
fsub
inc
dec
dec
mov
xchg
adc
adc
fild
xor
xor
ins
fldenv
and
jle
and
sbb
fld
pusha
cmp
push
xor
mov
inc
push
xchg
jbe
or
xor
outs
pop
inc
jb
das
pop
(bad)
fsub
sar
test
adc
and
add
xchg
fisttp
push
fisttp
inc
inc
jmp
(bad)
out
pop
inc
cld
leave
test
jb
enter
pop
xor
or
xchg
cmp
inc
jg
fdiv
enter
nop
fcom
add
add
jge
pop
cmp
ds
fnstsw
jb
les
push
fstp
sub
push
push
adc
inc
push
mov
pop
or
jb
enter
ficomp
fimul
cdq
cwde
or
jne
pop
fsubr
rol
(bad)
fcmovne
inc
jo
xchg
fmul
add
loop
cmps
sub
rol
call
lods
icebp
movs
sub
adc
sub
out
pop
mov
aaa
aas
ja
pop
cmp
inc
sub
push
(bad)
loopne
loopne
push
loopne
xor
jg
push
sub
jne
pop
xor
cs
cld
outs
enter
sub
or
push
loope
pusha
xor
adc
pusha
fild
cld
add
nop
sub
jns
ret
shl
and
adc
add
add
push
(bad)
xchg
loop
nop
int3
xor
xchg
sub
rol
adc
push
dec
xor
ds
dec
cmp
out
add
outs
inc
lahf
ret
pop
xor
adc
push
cmc
mov
mov
and
pop
and
add
adc
inc
mov
or
pop
push
xchg
adc
push
or
pop
cmp
push
ja
inc
leave
popf
cmp
jecxz
icebp
inc
dec
add
nop
jmp
and
xor
dec
inc
lock
das
xor
adc
cmp
xor
inc
jbe
(bad)
(bad)
stc
and
mov
sub
or
add
push
ret
sbb
sub
call
or
or
push
mov
sbb
mov
and
aaa
adc
sbb
sbb
jns
je
and
jecxz
mov
in
(bad)
or
mov
cmps
xor
shr
dec
cmp
xchg
es
lock
xchg
inc
call
nop
out
and
nop
aaa
or
jecxz
add
mov
ja
aad
mov
jmp
pop
push
movs
sbb
cmp
shl
and
mov
cwde
(bad)
push
clc
jo
out
sub
imul
loopne
hlt
jg
mov
cmp
jle
xor
sbb
xchg
pop
dec
jne
or
add
and
pop
mov
push
mov
push
(bad)
mov
or
test
cmp
sahf
fsubr
add
or
or
inc
cmc
adc
ins
icebp
mov
mov
aam
out
cmp
adc
mov
retf
out
rol
mov
div
add
xor
add
add
add
sub
dec
ja
pop
test
jno
jecxz
test
xor
or
cld
inc
inc
and
xchg
mov
call
sub
adc
jecxz
sahf
sahf
push
sete
mov
jbe
loope
aad
or
or
scas
lahf
cmp
cmp
cmp
js
adc
and
adc
dec
jno
in
mov
mov
adc
and
imul
lods
in
xor
or
bound
cdq
mov
and
aaa
dec
sti
sahf
xlat
mov
push
fsub
and
dec
mov
fisttp
xchg
xor
sub
inc
jmp
dec
inc
xor
xor
fsubr
(bad)
dec
cmp
shl
and
lods
jmp
es
dec
imul
test
lea
xchg
lods
fisttp
sub
call
add
lods
fisttp
cmp
in
in
in
je
stos
and
mov
fisub
add
add
jmp
dec
in
jb
dec
jmp
and
jmp
jmp
and
mov
in
add
jl
shl
add
push
stos
inc
outs
and
lahf
out
in
and
xchg
dec
mov
mov
xchg
out
xchg
fild
xchg
push
mov
and
mov
sbb
ja
push
mov
jecxz
fistp
in
mov
jmp
rcr
mov
mov
jmp
mov
div
dec
leave
and
in
lods
jae
fdivr
jb
or
xchg
mov
push
fstp
inc
cmc
retw
jmp
cmp
nop
in
shr
enter
fild
add
shl
add
enter
inc
pop
in
fidivr
and
movs
lods
adc
movs
icebp
pop
loop
cs
pop
ins
jne
dec
mov
mov
sub
rcl
inc
adc
sbb
mov
add
ret
loop
rcl
and
loop
fmul
push
sub
(bad)
imul
cdq
push
sti
push
mov
dec
fcmovb
ins
pop
aaa
dec
pop
jmp
sub
jmp
add
pop
leave
fstp
rcl
cmps
lock
stc
add
loopne
push
sbb
inc
out
test
and
cmp
(bad)
ss
sub
xchg
test
sbb
sub
fcomp
add
cmp
or
pop
shl
movs
iret
lds
push
cld
loope
and
push
xor
or
scas
cld
and
push
icebp
inc
push
add
pusha
cmp
out
mov
cld
lock
enter
jge
add
mov
fldlg2
mov
or
dec
push
or
push
inc
mov
mov
push
xchg
add
fcmovb
sbb
inc
jbe
adc
enter
fwait
dec
cmps
icebp
mov
mov
inc
push
cdq
in
mov
adc
in
pop
pop
hlt
add
clc
hlt
push
hlt
mov
add
repz
mov
add
pop
imul
lock
pop
cmp
xor
dec
xor
sub
inc
pop
push
nop
test
pop
add
aas
fnop
call
sub
xlat
sbb
cld
jmp
xor
mov
push
in
mov
push
xor
pop
jl
push
lahf
pop
jmp
inc
pop
es
ins
inc
test
cli
ds
imul
sbb
je
push
push
add
test
xor
or
pop
adc
xor
push
mov
add
lock
loope
or
pop
hlt
ins
leave
dec
sbb
enter
pop
clc
add
adc
jno
pop
sahf
mov
ds
add
mov
sbb
cmps
dec
ins
push
sbb
xchg
and
xchg
push
pop
xor
xor
mov
call
and
add
dec
aaa
popa
jbe
adc
inc
test
push
popa
dec
cmc
loope
mul
outs
test
adc
enter
lods
icebp
dec
push
push
out
pushf
neg
dec
jne
sub
and
adc
cs
pop
lods
cmp
das
nop
lods
mov
clc
out
inc
leave
and
cmps
add
dec
jge
add
(bad)
clc
add
shl
and
and
aaa
icebp
sbb
or
dec
clc
sbb
dec
jne
or
cwde
sti
mov
mov
and
push
add
push
mov
xor
clc
addr16
loopne
dec
hlt
xlat
(bad)
push
and
and
jmp
cli
aad
inc
push
push
jmp
add
fwait
movs
aad
ja
shl
pop
(bad)
(bad)
sub
xchg
adc
in
stc
sbb
and
jl
cs
or
mov
inc
pop
add
inc
cmp
jbe
push
in
pop
leave
jae
add
sbb
pop
inc
or
push
call
mov
sub
add
jmp
xchg
mov
sbb
nop
pop
dec
add
inc
inc
loop
add
lock
xor
jg
mov
sub
pop
mov
dec
xor
jmp
rol
arpl
dec
adc
cmc
or
xor
sub
inc
lods
js
mov
jne
adc
mov
fst
lahf
add
or
add
nop
xchg
inc
stos
imul
rol
pushf
pusha
call
dec
fwait
mov
push
add
sub
or
hlt
push
xchg
cmps
mov
sbb
pop
aad
and
lock
mov
pop
imul
xchg
ror
das
mov
mov
mov
pushaw
mov
sub
xchg
je
inc
icebp
sub
jmp
cmc
cwde
dec
movs
rol
mov
ret
sub
cs
adc
or
dec
add
ja
jmp
jnp
mov
jmp
adc
ret
adc
xchg
dec
es
or
retf
mov
cmp
pop
(bad)
xlat
sub
adc
sbb
pushf
cmp
pop
push
and
push
add
pop
das
jns
in
mov
jmp
mov
jmp
out
dec
sahf
ss
add
sbb
je
out
mov
adc
push
sar
rcl
add
ja
stc
or
(bad)
inc
add
fadd
or
out
pop
inc
adc
jns
pusha
push
adc
in
nop
adc
out
adc
call
or
sbb
and
cmps
sbb
pop
mov
cmp
lods
xchg
out
sub
les
adc
jno
cmps
mov
out
into
pop
mov
adc
mov
pop
cmp
xchg
mov
adc
add
sbb
mov
sub
or
and
mov
xchg
iret
adc
inc
imul
lea
sbb
and
pop
inc
mov
adc
inc
mov
dec
sub
or
mov
cld
sub
push
sub
inc
call
push
push
xor
rcr
test
mov
fadd
dec
outs
or
pusha
sub
push
repz
adc
dec
xchg
mov
inc
push
or
test
mov
pop
pop
pop
in
pop
pop
pop
mov
push
cmp
inc
stc
sub
jmp
mov
or
es
lds
sub
pop
es
out
or
and
inc
push
cmp
and
leave
push
retf
mov
dec
out
mov
dec
push
mov
repnz
inc
push
mov
dec
retf
sub
sub
inc
push
add
add
sub
pop
(bad)
call
adc
cwde
cmp
adc
ja
in
mov
pop
sbb
push
les
push
jno
xchg
mov
(bad)
ss
sbb
adc
loop
push
add
or
pop
dec
jns
and
inc
xchg
and
push
pusha
fistp
add
or
jmp
addr16
sbb
cmps
add
mov
push
jl
(bad)
add
call
dec
adc
je
inc
movs
and
push
pop
fadd
pusha
popf
js
cmp
test
mov
add
inc
sub
scas
sti
sub
cmp
mov
scas
mul
sub
sub
out
mov
pushf
pusha
or
add
and
loope
xchg
ret
and
xor
and
push
dec
in
sbb
inc
dec
mov
leave
or
sub
in
in
xor
in
xlat
push
nop
loop
fild
and
xlat
sbb
and
fucomip
sub
fisttp
lea
pmulhuw
jmp
jmp
inc
rcr
inc
mov
and
loop
xor
test
jmp
adc
daa
icebp
loopne
mov
dec
push
ins
pop
push
repz
nop
xor
and
cmc
mov
cmp
add
rol
or
sub
pusha
sub
jge
mov
add
in
add
add
or
sbb
xor
xchg
sub
add
rol
(bad)
and
add
jne
inc
jo
xchg
inc
sbb
sbb
and
push
dec
dec
daa
or
in
xor
loop
or
mov
dec
call
in
or
lock
repnz
fucom
mov
pop
ret
cmps
mov
sti
in
xor
fmul
mov
aam
nop
fbld
jbe
int
push
sub
ffree
or
sub
inc
or
or
inc
iret
mov
sbb
imul
jmp
outs
jbe
jg
xchg
mov
push
xor
sbb
jp
repz
mov
and
jns
xchg
outs
pop
or
imul
call
dec
push
je
inc
jnp
shl
and
sar
sbb
jmp
cmp
lahf
and
(bad)
addr16
shl
lea
or
cs
cs
mov
or
lea
xor
rcl
daa
dec
sbb
add
adc
daa
lods
loop
jno
pushf
daa
lds
jmp
test
jno
dec
mov
sbb
or
or
cmp
xchg
push
scas
in
das
outs
jns
add
push
in
mov
adc
nop
inc
or
cmp
je
sbb
sbb
sbb
in
add
xlat
lea
add
add
add
add
add
int
leave
sbb
sbb
aaa
xchg
push
pop
ds
stc
mov
sub
lahf
inc
enter
xor
xor
pusha
cdq
and
lahf
cmp
in
pop
add
inc
jb
ds
add
dec
popa
mov
xlat
and
adc
mov
mov
test
xchg
add
mov
xchg
pop
js
mov
cmp
test
fnstenv
pop
xlat
mov
push
mov
je
adc
inc
sbb
ret
pop
pop
daa
dec
clc
mov
seta
imul
push
xor
and
cmp
inc
add
or
push
dec
sub
xor
pop
sbb
cli
jns
or
out
jbe
test
inc
add
and
add
push
or
and
push
inc
jmp
sbb
xor
sub
les
test
aaa
cmps
ror
inc
xor
daa
push
inc
or
lock
inc
jne
test
ret
jle
imul
(bad)
xchg
xchg
and
scas
xor
push
out
xchg
cs
or
xchg
in
xchg
ja
pop
jb
sbb
adc
das
mov
sbb
dec
sub
and
(bad)
and
and
jno
push
mov
and
adc
xor
adc
xor
cmp
add
in
bound
pop
pop
adc
adc
sub
jmp
add
sub
mov
mov
cmp
loopne
inc
push
outs
mov
xor
xor
mov
add
or
and
push
adc
lea
sub
pusha
xor
xchg
es
and
test
dec
les
jnp
jne
mov
test
add
add
add
jbe
cli
cmp
inc
push
mov
in
lods
add
xor
mov
fld
mov
add
inc
add
inc
xor
sahf
cmp
or
loope
mov
add
adc
in
fist
or
add
in
xchg
adc
clc
mov
and
and
inc
loope
mov
pop
cmp
sbb
mov
or
mov
aaa
pop
xor
pop
fcmovbe
es
and
and
or
ficomp
nop
jbe
jmp
push
or
xchg
lock
ins
(bad)
stos
or
fsubp
push
jb
(bad)
push
in
mov
add
jns
inc
call
in
cmp
aaa
cwde
sub
hlt
loop
add
jp
or
loopne
sub
or
bswap
adc
fild
jle
adc
push
arpl
or
ja
lahf
loopne
fucom
jbe
inc
sbb
sbb
xchg
sbb
sub
cli
mov
loopne
push
or
add
cmps
pusha
xchg
or
or
sub
pop
xor
pop
sub
sahf
add
sub
je
jg
test
cmp
dec
cmp
popa
dec
push
or
mov
cmp
inc
dec
inc
adc
fisubr
dec
out
sbb
data16
pop
mov
popa
add
mov
mov
add
add
push
or
mov
adc
add
and
push
mov
aad
leave
adc
cmp
xor
add
xchg
movs
xlat
mov
xchg
inc
add
stc
mov
sbb
inc
sbb
push
cli
or
lods
out
inc
dec
in
cmp
icebp
mov
out
test
ja
fdivrp
in
dec
and
jl
and
mov
mov
xor
test
push
sti
ins
xlat
dec
xor
jmp
add
adc
jno
(bad)
scas
pop
mov
adc
jns
je
push
cmp
in
fisttp
enter
xor
xchg
mov
clc
fs
push
jb
loopne
out
shl
adc
ds
jmp
fcomp
cmp
sbb
push
sbb
std
jno
add
fild
pop
fadd
inc
sub
pop
sbb
rcl
ds
scas
fs
sub
and
aad
jmp
mov
and
jmp
test
add
ffreep
mov
lea
ret
adc
mov
and
or
(bad)
or
dec
push
jnp
mov
and
and
adc
or
fisub
fild
das
pop
and
mov
cdq
pusha
mov
sbb
leave
inc
adc
sbb
and
movs
inc
outs
(bad)
xor
jmp
aas
sub
pop
xlat
jmp
nop
inc
lock
or
jb
adc
test
and
pusha
scas
iret
repz
sub
sub
sub
push
and
and
fisttp
sahf
test
xchg
mov
xor
test
mov
pop
push
cmp
sub
or
sub
jno
mov
aaa
ds
out
cmp
mov
push
lahf
mov
inc
xchg
push
inc
fisttp
mov
out
or
push
ja
out
or
push
mov
test
mov
rol
mov
sub
cmp
lods
and
xor
pop
inc
adc
hlt
movs
ins
add
xor
cmp
cmp
xchg
in
fnstenv
or
in
and
mov
fild
jl
repnz
fisubr
mov
xchg
in
js
imul
inc
ins
or
push
nop
xchg
call
ins
xor
test
ret
(bad)
or
fmul
mov
adc
fistp
add
push
call
sub
inc
fdiv
and
pusha
fsubr
fsubr
adc
dec
xor
jne
cmp
mov
outs
out
fdivr
mov
xchg
bound
push
or
inc
and
cmp
test
sub
shl
or
into
or
jg
or
sbb
jae
(bad)
loop
mov
mov
mov
lock
inc
test
dec
xor
inc
inc
retf
call
inc
imul
cmp
out
and
lahf
adc
and
cmp
test
dec
sub
sbb
in
out
in
loopne
or
das
xlat
mov
and
cld
and
fdiv
sub
dec
xchg
inc
out
in
add
xlat
aam
adc
(bad)
dec
inc
dec
in
and
ins
loope
pop
adc
test
pop
fld
popa
dec
or
test
js
jle
mov
xchg
sub
or
je
push
pop
rol
rol
dec
ja
push
mov
sbb
sar
cdq
push
and
add
in
jg
dec
cmp
jl
jmp
xlat
ret
cmps
and
dec
mov
retf
hlt
imul
imul
cmps
inc
sub
into
aam
shl
dec
int
out
adc
adc
dec
or
es
movs
dec
pop
pop
xchg
or
adc
push
add
and
mov
shl
fcomp
sub
(bad)
add
push
mov
fcom
pusha
ss
popa
add
push
daa
push
xor
cdq
test
add
cmp
sub
dec
xchg
popa
adc
mov
add
add
addr16
je
es
adc
mov
dec
jmp
push
inc
jg
imul
arpl
(bad)
xchg
cmp
idiv
inc
inc
inc
and
or
jl
lods
cmp
rol
adc
and
or
jae
or
adc
sbb
scas
push
(bad)
adc
ins
adc
pop
aas
mov
ja
cld
jo
sbb
or
fnstenv
jo
add
sub
cmp
out
sbb
ja
sbb
mov
add
inc
dec
and
xor
adc
stos
inc
loop
xchg
mov
std
jo
lock
sub
mov
pop
lock
inc
inc
inc
jge
jp
pop
js
inc
mov
mov
push
out
imul
test
mov
cld
sub
xor
fs
fld
(bad)
pop
mov
adc
movs
xlat
cmp
pushf
and
out
daa
sbb
and
daa
xchg
inc
sbb
sub
scas
inc
pop
or
loop
cmp
test
adc
loope
jle
sub
push
lea
sbb
add
mov
inc
inc
or
inc
dec
xchg
pop
nop
sub
imul
mov
sub
pusha
and
pushf
push
sub
(bad)
add
sysenter
fist
mov
test
fistp
dec
add
sub
adc
jmp
(bad)
sub
jns
sbb
lods
sub
mov
inc
pop
add
enter
retf
cs
test
cmp
and
lar
in
hlt
or
das
adc
or
(bad)
xlat
inc
and
and
les
hlt
enter
cs
in
aam
jo
jns
hlt
inc
inc
mov
add
and
hlt
mov
inc
and
xor
aaa
imul
dec
jle
das
les
ss
ret
mov
xor
add
or
dec
adc
ins
pop
mov
add
dec
ror
adc
ss
test
or
xor
and
mov
sti
stos
mov
inc
adc
add
or
or
lods
mov
inc
adc
bound
dec
xchg
fild
in
nop
int
aas
cmps
xor
mov
xchg
sbb
cwde
fmulp
push
sub
sub
push
retf
adc
outs
adc
jge
add
sub
add
xchg
pushf
lahf
mov
cmp
push
pop
inc
shl
cwde
cmps
in
gs
fcomp
and
adc
push
stc
add
aam
push
mov
dec
and
xor
sub
push
and
push
sub
loopne
dec
mov
adc
int
cmc
jl
leave
add
into
test
mov
and
js
leave
add
movs
ffree
cwde
xor
sbb
(bad)
pop
cmp
fist
mov
and
call
in
in
xor
xor
sub
add
mov
sub
clc
or
sub
dec
sbb
repnz
fwait
pop
sbb
and
sub
pop
xor
pop
sub
das
xchg
xor
jl
dec
sbb
add
adc
sbb
jns
inc
push
dec
mov
sbb
sti
popf
cmp
inc
cmp
fstp
daa
adc
and
sub
adc
shl
xor
pop
int3
fsubr
fwait
jp
repz
test
jo
iret
or
repnz
cmp
inc
repnz
ror
nop
inc
in
mov
movs
push
ss
inc
sub
push
sbb
adc
pop
sub
jo
inc
ins
adc
jecxz
bound
lds
aaa
outs
lock
push
adc
push
xchg
jmp
sbb
(bad)
mov
jl
cmp
out
add
push
adc
shr
mov
clc
leave
mov
pushf
cmp
xchg
ins
jbe
pop
lods
das
add
push
or
xchg
ja
dec
out
add
inc
xor
inc
add
stc
dec
add
add
xchg
xchg
xchg
aaa
unpcklps
push
popf
ror
xchg
jecxz
cmp
mov
lea
xor
data16
or
loopne
xor
sub
xchg
sahf
mov
or
add
iret
test
mov
gs
(bad)
inc
or
pop
add
mov
xor
loope
inc
jae
adc
mov
pop
mov
and
inc
aas
mov
pushf
mov
pop
outs
mov
xor
cmp
or
xor
and
lea
shl
loopne
dec
inc
sub
fnsave
mov
adc
pop
inc
and
dec
ins
mov
push
ins
add
inc
push
or
push
add
add
adc
(bad)
dec
add
push
or
mov
fldenv
pop
pop
or
cdq
lahf
push
add
and
cmp
in
mov
sbb
pushf
cmp
cmp
sbb
push
push
call
mov
cmp
syscall
dec
popa
ror
push
out
add
pop
sbb
movs
sbb
pop
mov
xchg
add
stc
in
das
jns
and
cmp
mov
inc
push
scas
leave
xor
mov
pop
add
push
fsub
inc
xor
dec
loop
mov
or
or
loopne
pop
inc
(bad)
fs
outs
pop
or
and
mov
dec
inc
xor
jns
ds
or
nop
xor
das
cmp
lock
aaa
add
cmp
nop
mov
call
bound
push
pop
sahf
cmp
arpl
fdivr
push
adc
pop
or
fbstp
push
dec
jno
js
cmps
sub
aas
inc
fisttp
outs
dec
cs
xlat
das
push
or
dec
inc
(bad)
add
and
push
int3
leave
adc
inc
outs
pop
ret
and
retf
in
pop
call
add
add
and
xchg
ret
xchg
dec
add
mov
in
or
cmps
cmc
pop
adc
and
rol
or
dec
mov
adc
and
retf
inc
xor
mov
push
mov
mov
and
iret
mov
dec
cmp
lock
adc
dec
cmp
out
mov
repz
jg
and
outs
in
test
in
icebp
outs
inc
adc
xor
dec
pusha
inc
scas
sbb
les
sti
add
inc
ss
lods
cmp
xchg
mov
jb
jl
pop
adc
int
cs
sbb
push
lds
fld
xor
nop
dec
xchg
add
jne
or
pop
xchg
je
xor
sbb
inc
cld
mov
(bad)
sub
sub
fist
xchg
mov
mov
mov
mov
add
shr
adc
dec
add
fnstenv
xchg
pop
sti
adc
xor
adc
xchg
sbb
fld1
push
xchg
and
clc
sbb
xor
xor
inc
sbb
adc
inc
enter
in
cmp
adc
rcr
ja
push
out
das
hlt
push
or
inc
cmp
pop
mov
adc
test
and
or
or
and
push
mul
xor
cmp
xor
ret
aam
adc
mov
and
jle
xor
inc
dec
movs
cmp
sbb
fmulp
out
xor
inc
and
dec
inc
jo
sti
push
mov
cs
inc
ins
xchg
jp
or
loope
aas
call
inc
mov
fld
movs
push
adc
cmp
loop
fs
xchg
dec
dec
add
nop
add
pop
loope
test
xchg
inc
mov
mov
(bad)
(bad)
pop
jl
rdmsr
xor
xchg
dec
inc
je
sbb
leave
test
inc
dec
ret
inc
xor
and
jl
xor
push
or
adc
sub
xor
mov
cmps
sub
add
inc
fild
sub
xlat
ja
and
or
bound
jo
js
push
xchg
inc
adc
inc
loopne
xor
sub
push
xchg
fisub
cwde
loopne
mov
dec
jge
and
add
sbb
test
pop
xchg
mov
and
in
into
or
jne
(bad)
push
loope
push
sar
lds
(bad)
and
xor
add
out
add
les
mov
or
or
(bad)
and
cmp
lds
inc
addr16
in
add
pop
xor
mov
ins
mov
xor
mov
call
outs
ret
add
int
inc
sahf
xor
adc
add
adc
dec
jne
mov
mov
(bad)
or
and
or
div
inc
xchg
adc
add
in
ror
(bad)
and
inc
lds
(bad)
inc
pop
out
mov
and
dec
mov
cmp
dec
inc
fmulp
xchg
(bad)
or
ret
ret
or
jo
sbb
fadd
sub
push
loopne
cmp
jmp
outs
ror
xor
xchg
out
sbb
pop
sbb
cmp
mov
paddsw
sbb
jb
sbb
sub
inc
enter
adc
sbb
inc
sbb
inc
enter
call
sub
mov
inc
mov
dec
and
add
les
mov
inc
dec
and
shl
and
retf
adc
xchg
xor
fisttp
pop
rcl
sbb
lock
inc
jae
jmp
jge
imul
add
lahf
mov
sbb
in
sti
aas
jg
mov
sbb
call
mov
je
aaa
cmp
or
inc
fild
xchg
mov
in
xchg
push
cs
cmp
mov
push
dec
jmp
sub
push
aad
push
mov
cmp
or
mov
pop
fld
add
ret
lods
imul
mov
add
in
cmc
add
(bad)
push
mov
aad
xor
push
leave
mov
push
addr16
push
adc
fs
outs
sub
pop
and
or
add
fild
inc
mov
aam
mov
xchg
out
add
cmp
fmul
lods
add
ret
cmc
cmp
lods
add
xchg
fcom
(bad)
and
push
(bad)
neg
shl
in
and
adc
int
rcr
sub
adc
clc
fstp
xor
cmp
int
enter
add
inc
mov
inc
ss
inc
or
jae
int
dec
adc
and
out
(bad)
not
adc
push
call
sbb
imul
out
dec
push
push
(bad)
(bad)
test
adc
and
dec
jae
xor
dec
dec
jae
xor
sbb
jae
xor
xor
test
dec
cmp
cmp
push
dec
jae
inc
inc
inc
push
dec
jae
adc
sub
test
cmp
nop
out
xchg
jecxz
repz
movs
fnsave
iret
sub
pop
or
jmp
shl
pusha
pop
inc
dec
xor
jae
xor
sub
xor
xor
inc
test
dec
je
js
inc
dec
jae
jl
add
test
test
jae
xor
dec
mov
test
adc
vaddsubps
dec
jp
xor
ret
xchg
ja
hlt
sbb
jo
test
cwde
ja
retf
xchg
cmp
ja
inc
jp
xchg
(bad)
pop
(bad)
mov
not
imul
adc
sub
dec
mov
and
inc
nop
out
imul
imul
xor
sub
adc
xor
fcom
adc
mov
jle
ret
sub
mov
lea
in
fld
iret
das
cs
nop
jns
lds
mov
and
hlt
cs
mov
pop
mov
shl
and
imul
adc
retf
or
es
loop
and
push
xchg
lock
rol
or
out
mov
add
out
sub
push
or
out
pop
imul
or
inc
fdivr
mov
jmp
add
out
push
push
push
sub
mov
or
lahf
mov
fnstsw
push
or
pop
inc
add
mov
cld
es
iret
cmp
repz
sub
mov
or
test
jmp
adc
arpl
int3
lock
add
ins
push
mov
lods
and
sti
or
pop
add
pusha
pop
push
adc
add
push
push
cs
sub
pop
jns
lock
repnz
dec
pop
xchg
fnstenv
pop
cmp
js
stos
adc
mov
mov
xor
jle
psubw
push
jge
rol
fnsave
adc
pusha
adc
sbb
jne
add
popa
mov
scas
or
jg
test
out
fist
in
pop
mov
sbb
pop
call
out
sbb
mov
(bad)
stc
jl
ss
and
clc
add
cs
jmp
mov
mov
jo
pop
sub
xor
aam
dec
xor
aas
mov
out
dec
jl
aam
cmp
fdiv
or
mov
sbb
nop
mov
lods
xchg
in
xor
sub
push
test
fild
imul
loope
dec
ret
dec
ret
sub
inc
ret
stc
xor
sub
retf
mov
xchg
repnz
pop
mov
movs
dec
aas
sub
pop
sub
mov
pop
sbb
and
enter
inc
ret
les
cmp
hlt
or
and
jno
fmul
or
mov
call
mov
or
push
adc
and
push
test
lahf
add
push
sbb
rcr
mov
sub
xchg
inc
sbb
test
cmps
sbb
push
adc
dec
loopne
test
adc
sbb
dec
repz
(bad)
call
imul
push
stc
cmp
out
sbb
int3
hlt
jo
rcr
inc
jmp
and
repnz
pop
(bad)
lock
push
inc
adc
lahf
mov
fwait
adc
pop
psubb
test
popf
pop
repnz
pop
xlat
call
dec
add
hlt
dec
movs
pop
inc
and
dec
and
and
ror
dec
ror
mov
xchg
xor
mov
xor
call
adc
out
iret
movs
or
sahf
sub
adc
or
out
fcom
adc
jne
mov
mov
imul
(bad)
sub
sub
data16
pusha
sbb
push
pop
push
sub
ret
mov
xchg
pushf
inc
(bad)
jne
mov
or
out
cmp
adc
dec
call
out
movs
jns
sbb
and
repz
imul
xchg
out
in
sub
xor
dec
sahf
xor
cmp
pusha
cmp
cld
jl
sbb
test
lock
in
mov
add
jo
stos
test
sbb
dec
or
cwde
pop
pusha
inc
sahf
cs
xor
mov
mov
pop
sti
push
out
cld
pusha
push
jmp
lds
fsubr
fs
pushf
adc
(bad)
push
pop
xor
stos
push
pop
add
xchg
ret
ret
dec
push
dec
dec
or
bound
mov
add
xchg
add
movs
mov
xchg
aas
inc
add
jo
push
stc
sar
pusha
push
mov
or
ret
clc
pusha
xor
push
cmp
pop
clc
pusha
push
inc
push
dec
xchg
inc
mov
fadd
sbb
lods
add
dec
or
add
stos
popa
and
adc
and
xchg
dec
push
les
mov
push
xor
cmp
dec
(bad)
dec
dec
sub
mov
and
pusha
cmp
mov
push
mul
dec
sbb
adc
add
shl
dec
pusha
bound
sar
mov
adc
xor
mov
lods
inc
fs
push
daa
xor
ret
fwait
inc
das
sub
push
sbb
push
sub
sti
scas
add
sub
mov
or
pop
hlt
mov
mov
adc
jne
out
mov
xor
dec
cmp
and
mov
nop
fisub
dec
nop
fs
xchg
or
pop
xor
loop
dec
sbb
lock
arpl
pop
adc
jmp
add
mov
dec
pusha
mov
push
add
jle
fwait
shl
jnp
inc
and
jne
pop
ret
addr16
dec
sbb
dec
inc
lods
pop
pop
fild
mov
ins
dec
fs
pop
outs
nop
mov
xchg
inc
xchg
imul
and
add
popa
adc
or
jmp
(bad)
jo
pop
or
push
adc
inc
xchg
push
nop
ss
adc
mov
sub
icebp
test
dec
sbb
adc
or
addr16
cmp
inc
add
pop
cmp
xchg
ret
xchg
ss
mov
dec
dec
inc
mov
popf
and
pusha
daa
adc
mov
ss
test
out
xor
arpl
imul
addr16
push
or
aas
jo
pop
aam
pop
inc
add
add
add
cmp
jbe
mov
dec
push
ins
jo
es
xor
das
or
imul
data16
fbld
iret
adc
xor
or
test
push
xor
sub
pop
pop
loopne
or
pusha
clc
addr16
push
ja
push
inc
push
or
bound
fst
xchg
movs
pop
add
or
mov
xor
add
(bad)
jb
das
test
fsub
fsub
xchg
or
cmp
in
or
enter
mov
out
or
jbe
cmp
push
fld
dec
mov
mul
fsub
pop
addr16
mov
rol
(bad)
mov
daa
std
mov
dec
mov
dec
xor
and
inc
dec
sar
add
call
add
mov
or
imul
or
dec
es
sbb
push
sbb
fisttp
pop
inc
inc
push
push
dec
push
dec
sbb
jmp
or
inc
dec
inc
in
cmp
inc
push
jo
jp
xor
fldenv
or
std
push
and
int3
outs
pushf
dec
(bad)
mov
mov
mov
push
sub
adc
cmp
mov
jg
xor
and
adc
pop
sar
js
push
lock
and
je
jns
adc
lea
sbb
mov
and
add
xchg
inc
inc
test
pusha
push
imul
add
add
xchg
or
inc
out
mov
push
push
push
push
leave
pop
dec
or
and
movs
dec
repnz
aaa
push
xor
or
mov
shr
adc
adc
lods
mov
dec
gs
adc
adc
(bad)
bound
rcr
mov
mov
add
mov
sbb
cmp
jo
mov
sbb
dec
dec
adc
and
inc
sahf
sti
inc
dec
cmp
ds
xchg
nop
scas
cld
push
loope
add
or
push
jo
dec
int
push
pop
inc
cdq
mov
or
and
xchg
or
pop
push
xor
imul
sub
call
sub
push
and
es
mov
sbb
imul
inc
adc
push
sbb
xor
push
ins
adc
push
add
or
jecxz
and
ins
push
popa
mov
mov
add
mov
dec
clc
sahf
(bad)
out
mov
add
add
add
add
mov
cwde
and
pop
daa
ins
mov
add
push
inc
push
cmp
data16
push
push
jl
test
stos
ins
jle
lar
cmps
aam
adc
js
pop
add
sbb
push
mov
push
dec
dec
mov
mov
xor
pop
pop
pop
sbb
(bad)
in
inc
sbb
push
or
or
(bad)
sbb
push
nop
pop
xor
ret
jecxz
jl
or
dec
add
fisubr
mov
scas
and
repz
leave
xor
pop
outs
lods
add
ss
push
(bad)
mov
in
add
ror
jo
push
sahf
sub
ret
mov
xchg
jo
pshufw
jp
fdivr
adc
dec
add
adc
or
icebp
inc
add
push
dec
push
xchg
or
jne
and
push
(bad)
dec
outs
inc
xor
mov
lds
in
rcr
mov
pop
add
into
in
or
xchg
(bad)
jns
dec
adc
push
aaa
lock
inc
inc
mov
in
nop
iret
inc
inc
stos
jno
adc
sub
add
mov
jecxz
push
aad
dec
inc
pop
in
and
rcl
or
cmc
jae
push
scas
pop
lock
cmp
lahf
scas
pminub
mov
jl
jmp
add
pop
push
dec
dec
cmp
push
xlat
sbb
ret
push
lods
add
xor
pushf
and
sbb
movs
dec
lods
sub
jg
adc
in
(bad)
sub
pushf
jae
test
rol
jg
mov
xor
dec
push
mov
inc
add
es
push
and
ja
jno
call
retf
dec
mov
outs
add
popa
and
sub
(bad)
jb
inc
sbb
xchg
xchg
dec
cld
adc
and
sub
shr
sbb
mov
sub
imul
sub
inc
add
dec
mov
mov
and
mov
js
shr
and
sbb
push
shl
sub
sub
jnp
cmp
pop
or
shl
mov
mov
mov
push
sub
push
fwait
test
cmps
test
mov
cmp
sbb
adc
jmp
push
sub
add
jb
inc
sbb
imul
fs
xor
dec
xor
cld
rcl
mov
add
movs
loope
jae
push
push
inc
retf
adc
fadd
inc
pop
enter
and
pop
sub
sbb
add
ins
mov
mov
cmps
pusha
push
inc
pop
cmp
das
outs
mov
push
add
je
pushf
inc
dec
mov
outs
bnd
xor
xor
sub
and
inc
add
rol
jmp
adc
jmp
cmp
cmp
loope
jecxz
cmp
cmp
in
out
cmp
cmp
jmp
cmp
cmp
out
out
sar
cmp
cmp
rcl
aam
cmp
cmp
(bad)
xlat
fdivr
cmp
cmp
fcmovu
fdivr
cmp
cmp
(bad)
sar
cmp
rol
les
cmp
cmp
mov
cmp
cmp
leave
retf
cmp
cmp
int
iret
mov
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
mov
cmp
sub
outs
xchg
jnp
das
fimul
popa
arpl
fucomip
pop
mov
mov
push
sub
push
retf
or
push
add
or
jnp
or
xchg
xchg
test
sahf
or
or
mov
xchg
push
jnp
add
loopne
jns
pusha
dec
push
rcr
cwde
jnp
adc
lods
(bad)
loopne
sub
xor
push
sub
pop
ficom
ss
and
push
inc
lea
mov
ret
xor
fild
cmp
cmp
mov
das
movs
mov
pusha
jle
daa
pop
jge
jg
sub
push
iret
inc
ret
adc
test
stos
mov
test
stc
push
shl
(bad)
stos
sub
add
xor
pcmpgtd
sub
or
dec
dec
xchg
call
mov
loop
inc
or
fwait
inc
xor
int
push
add
call
ficom
pop
sub
sbb
pop
popa
xlat
rcr
sub
mov
add
bound
or
sbb
pushf
and
mov
dec
(bad)
scas
test
addr16
ret
xchg
cmp
outs
mov
xor
push
inc
stos
mov
or
and
pop
and
push
daa
inc
inc
cmps
mov
and
pop
inc
movs
clc
push
xor
and
pop
jg
test
(bad)
jnp
cli
jge
ds
jg
add
popa
add
popf
int
ret
pusha
call
xchg
jg
add
pusha
xchg
outs
(bad)
jns
bound
popf
paddsb
and
push
daa
xchg
das
stos
sub
xchg
inc
outs
sbb
(bad)
push
mov
shl
in
rol
test
(bad)
and
push
je
daa
daa
inc
pusha
xlat
pop
repz
out
test
or
scas
(bad)
add
push
das
mov
and
out
xlat
add
leave
stos
xchg
enter
mov
add
jge
stc
cmps
sub
dec
inc
jle
adc
call
jae
mov
(bad)
or
jne
sub
adc
mov
mov
leave
dec
push
inc
sbb
cmps
sbb
sbb
and
jp
sbb
xor
iret
mov
call
nop
gs
pop
inc
rol
or
or
inc
and
loope
inc
sar
sbb
ror
bound
inc
mov
sbb
in
add
outs
sub
sbb
fdiv
mov
push
sbb
iret
and
lods
in
sbb
mov
inc
xlat
bound
inc
xchg
xchg
fldenv
test
retf
ret
xlat
cmp
ror
adc
add
inc
or
push
adc
nop
jmp
jae
movups
test
ins
jbe
xchg
push
das
test
pushf
sub
dec
push
mov
loope
(bad)
adc
push
cmp
mov
add
push
pop
dec
push
mov
xchg
push
out
popa
add
inc
les
stc
adc
add
mov
and
cmp
jb
and
xchg
(bad)
aaa
pop
scas
xchg
jge
jb
fwait
adc
test
xchg
xchg
inc
sub
jge
fwait
mov
push
adc
sub
movs
dec
and
scas
lea
ja
and
xchg
inc
mov
push
xchg
mov
add
jb
adc
movs
cld
inc
push
and
xchg
add
loope
mov
dec
xor
push
sub
(bad)
xchg
inc
mov
(bad)
cmp
sbb
cdq
pop
pop
or
rcl
test
inc
mov
or
adc
or
mov
sbb
movs
nop
int
mov
test
mov
dec
in
enter
xchg
cmps
scas
mov
fwait
xor
iret
pop
and
xchg
sbb
dec
or
push
xor
movs
and
retf
fist
das
xor
or
mov
sub
les
adc
loope
or
arpl
mov
xchg
push
mov
inc
test
mov
shl
add
shr
sub
pop
sbb
sti
retf
mov
xchg
js
les
test
cmp
out
retf
loop
sbb
sub
enter
pop
pop
cmp
jmp
and
pop
mov
mov
jl
mov
loopne
cmps
jne
rol
in
push
call
dec
add
popf
popa
(bad)
shl
inc
or
adc
lods
repnz
cmp
push
cmovne
popa
and
mov
fbstp
inc
push
dec
sbb
dec
std
pop
or
ror
push
xor
adc
or
or
mov
popa
and
movs
mov
mov
inc
rol
mov
clc
mov
(bad)
shr
(bad)
lea
jp
add
daa
(bad)
movs
test
inc
mov
cmp
lock
or
xor
add
loop
lea
jno
in
cmp
mov
push
popa
xor
lock
push
gs
out
lahf
pop
pop
sbb
std
scas
and
stos
add
and
mov
sbb
scas
adc
sub
xor
cwde
inc
gs
jecxz
les
cmp
push
xor
in
mov
pop
and
or
test
loope
in
inc
scas
mov
add
mov
cmp
or
or
mov
test
test
dec
fild
push
mov
mov
mov
icebp
pop
mov
cli
push
cs
das
push
push
sbb
cmp
xchg
dec
adc
(bad)
in
push
scas
push
stos
or
cmps
ss
movs
pop
stos
sahf
dec
ret
or
ds
test
nop
leave
push
(bad)
mov
nop
push
xchg
loope
sbb
pop
jb
or
xor
push
nop
scas
xchg
dec
and
adc
mov
push
pop
leave
enter
sub
add
xchg
mov
gs
popf
ins
pop
movs
dec
mov
(bad)
cld
pop
mov
fld
or
or
add
cmc
cmp
jg
adc
push
repz
(bad)
mov
xchg
push
and
repz
xor
pop
push
cmp
repz
xchg
mov
iret
repz
(bad)
jbe
sub
dec
jae
xchg
cmp
xchg
aaa
dec
fmulp
repz
xchg
lods
push
mov
push
enter
repnz
sahf
test
push
push
sbb
cmp
push
bound
mov
push
mov
pop
add
(bad)
cld
sbb
test
cmp
jnp
push
(bad)
shl
out
iret
jnp
iret
cld
or
push
xor
call
pop
xchg
ins
jns
out
jp
xchg
movs
mov
retf
test
dec
sbb
ror
enter
xchg
out
cmp
adc
and
int
clc
mov
cwde
leave
and
fiadd
jmp
pop
ret
push
pop
gs
mov
ror
gs
(bad)
adc
cmp
add
sbb
pop
add
add
fistp
or
ret
sbb
mov
cmp
rcr
dec
push
sbb
add
jmp
or
sub
in
loopne
sti
adc
aaa
sbb
add
mov
add
fadd
sbb
fucomip
in
sbb
int3
fistp
adc
sub
add
and
enter
fadd
inc
pop
push
mul
cmp
ret
pushf
sti
je
mov
cmp
pop
test
sub
in
or
jmp
or
push
push
enter
loope
in
or
sti
add
push
loopne
jl
adc
push
jnp
lods
call
cmp
fs
or
enter
je
mov
aaa
or
mul
sbb
aaa
add
and
add
and
nop
cmp
cmp
and
mov
loop
sbb
(bad)
nop
out
dec
ficomp
jb
pcmpgtb
push
in
mov
add
loopne
jmp
enter
jecxz
pop
in
sbb
loope
fistp
call
pusha
sbb
sub
jmp
aam
or
dec
ret
ins
sbb
push
sbb
ror
mov
jne
loopne
retf
or
mov
sub
fsub
adc
mov
mov
xchg
retf
mov
ss
mov
jno
cwde
mov
fdiv
movs
mov
pusha
mov
cmp
sub
jmp
push
ret
cdq
(bad)
adc
dec
test
pop
lea
imul
js
xchg
imul
adc
retf
enter
mov
out
dec
loop
ss
cmp
add
add
nop
test
push
ss
push
pop
or
add
cmp
lds
outs
jo
jo
or
es
push
idiv
(bad)
nop
mov
pop
shl
jg
inc
inc
or
call
xor
sub
and
call
xor
sub
call
in
ss
jae
scas
sub
inc
and
(bad)
in
pop
or
not
mov
push
in
dec
mov
out
int3
push
repnz
fwait
push
adc
add
enter
das
mov
mov
xchg
push
inc
dec
test
push
pop
pop
movs
push
movs
out
xchg
add
adc
add
fidivr
xchg
cmc
mov
mov
ficomp
adc
(bad)
push
or
add
push
lea
cwde
loope
mov
rol
loopne
or
(bad)
stc
cmp
cmovs
xor
adc
loopne
mov
mov
fisttp
popf
pop
add
and
adc
push
hlt
sbb
add
and
fisttp
inc
or
or
inc
(bad)
mov
or
push
dec
(bad)
int3
and
js
jmp
in
dec
or
int3
mov
out
es
ja
(bad)
or
mov
bound
and
lods
add
sti
sub
push
xchg
push
jo
sub
push
pusha
xor
movs
fwait
shl
add
sbb
push
dec
mov
je
add
mov
in
fs
sub
inc
das
mov
push
dec
pop
add
fldenv
aam
inc
xlat
aad
lahf
push
enter
js
mov
xchg
cmp
mov
gs
push
xor
mov
mov
in
loope
mov
out
pop
hlt
ds
mov
mov
inc
xchg
aam
sub
jbe
or
mov
daa
std
das
mov
add
ret
stc
clc
mov
or
mov
lar
(bad)
or
mov
(bad)
int3
mov
xlat
sbb
mov
jle
loopne
sbb
mov
add
xor
movs
pop
nop
jno
mul
jb
jb
push
mov
inc
xor
jae
rol
adc
repnz
or
or
in
sbb
and
and
iret
call
inc
add
nop
jl
xor
in
adc
loopne
pop
es
push
or
jo
leave
or
pop
das
sub
(bad)
pop
lock
xor
push
pop
adc
das
mov
mov
push
scas
xchg
aam
push
adc
imul
adc
adc
xor
ret
and
je
pop
mov
add
adc
mov
(bad)
das
call
cwde
jno
inc
mov
or
mov
pop
(bad)
pop
adc
adc
add
test
add
adc
mov
and
retf
xor
aas
retf
or
cmp
fwait
add
cmc
repz
in
adc
adc
push
fcomp
cmps
mov
ror
adc
ss
lea
inc
jmp
leave
mov
fst
adc
cdq
add
arpl
sbb
xchg
and
and
xor
rcr
pop
mov
xor
or
ins
mov
pop
(bad)
call
jecxz
inc
cmp
add
nop
add
in
movs
cmps
push
rol
push
and
adc
nop
inc
sbb
movs
jecxz
jnp
rcl
sub
sbb
jns
loop
ret
inc
pop
xchg
sub
dec
jmp
sbb
xor
sub
test
add
inc
js
pop
push
movs
jg
and
sahf
add
cmps
or
add
and
test
mov
pop
aam
add
in
add
inc
out
push
fcomp
add
add
sub
mov
sbb
imul
call
dec
pop
es
mov
nop
xor
adc
adc
jle
sub
jbe
stos
je
icebp
(bad)
or
ret
sub
divps
and
test
sbb
cmp
es
test
fisubr
cmp
test
sti
mov
mov
adc
fst
sbb
dec
xchg
add
mov
sti
cwde
inc
enter
jo
add
adc
inc
pusha
in
xchg
add
pop
repnz
test
add
out
push
pop
not
jo
xor
imul
sub
cwde
(bad)
inc
add
push
xor
test
popa
inc
cmp
cmp
test
test
or
xor
lods
cld
inc
mov
mov
test
adc
pop
sar
mov
or
aam
enter
mov
or
mov
pusha
sub
mov
into
and
test
add
or
dec
rcl
mov
push
dec
sbb
ins
inc
xor
add
adc
xor
dec
jo
dec
and
add
pushf
imul
sbb
mov
gs
stos
repnz
aas
sub
mov
push
inc
int3
push
pop
dec
inc
mov
fistp
xor
xchg
mov
mov
je
or
inc
test
jmp
sub
jmp
inc
and
or
dec
adc
aas
ja
(bad)
sbb
ins
rcr
add
jbe
inc
jg
adc
inc
jb
mov
clc
xchg
adc
or
pop
fisttp
jns
push
leave
jp
mov
repnz
sti
xor
popf
and
movs
add
das
popa
xchg
idiv
call
dec
sbb
sbb
rcl
sbb
in
sub
outs
pop
fs
sbb
in
cmp
test
cmps
dec
push
or
jne
lods
push
ret
mov
push
sbb
fidivr
(bad)
jne
cli
lods
push
fild
jnp
mul
pop
icebp
ss
dec
fstp
js
les
and
cli
dec
test
adc
mov
pop
add
or
aam
or
(bad)
jp
pop
jb
jne
adc
and
pop
adc
push
fwait
mov
mov
xchg
gs
test
aad
addr16
inc
push
sbb
xchg
aas
fadd
addr16
lods
push
mov
jmp
test
bound
das
dec
and
or
push
push
cli
xor
shr
dec
cmp
hlt
adc
dec
add
(bad)
mov
and
scas
push
pop
xchg
dec
loope
pop
adc
xchg
mov
and
das
cmp
add
mov
lods
add
or
das
aaa
push
xor
xchg
int
or
sbb
adc
loope
sbb
sbb
inc
pop
and
sub
in
and
fsubr
pop
fisttp
add
pop
xor
xchg
scas
push
xor
mov
xchg
mov
mov
push
inc
mov
mov
data16
push
add
inc
dec
mov
mov
push
sar
push
push
call
dec
pop
adc
xchg
mov
cvttps2pi
push
cdq
(bad)
mov
inc
dec
mov
shr
add
lods
mov
jbe
shr
xchg
mov
dec
outs
outs
arpl
loope
push
ja
adc
pusha
xchg
repz
or
aam
fisubr
sub
fst
adc
ss
dec
pop
xor
add
pop
dec
call
outs
jo
sub
cmp
in
dec
rcr
mov
mov
cwde
out
int
push
mov
pushf
inc
mov
fsubr
and
jb
pop
adc
mov
fs
pop
enter
dec
(bad)
inc
or
push
mov
adc
xor
or
pop
daa
out
call
or
inc
jmp
dec
sub
inc
xor
or
cmp
xor
push
sbb
xor
out
lea
es
push
add
push
push
jle
cmp
and
xchg
mov
xor
test
or
inc
add
xor
inc
add
movs
sbb
cmp
rol
in
in
mov
mov
daa
test
loopne
out
push
mov
repnz
mov
xchg
dec
and
add
push
js
adc
pop
push
mov
and
inc
leave
and
bound
mov
cwde
dec
loopne
pushf
mov
icebp
arpl
js
push
mov
test
jbe
mov
fadd
xchg
fidivr
pushf
cmp
sub
and
sub
dec
cmp
mov
and
imul
cs
xchg
adc
cmps
mov
xchg
mov
icebp
push
call
push
outs
and
pusha
aas
fcom
jg
sbb
call
pop
xor
jmp
and
int3
dec
inc
outs
retf
sub
mov
add
fwait
mov
jbe
cmp
xchg
mov
xor
push
cmps
adc
xchg
sbb
jmp
and
sar
sbb
lds
mov
dec
loop
fmul
fld
inc
loopne
in
mov
in
les
mov
fdivr
add
repz
or
stc
jle
mov
mov
add
sbb
inc
inc
jae
inc
in
fistp
mov
and
retf
shr
test
mov
pop
ret
pop
and
or
sub
xlat
add
popa
mov
xchg
push
pop
xchg
pusha
pusha
dec
push
add
adc
mov
and
pop
pop
mov
add
hlt
and
push
pop
xor
mov
jmp
les
test
inc
push
cmp
into
add
(bad)
js
jo
xlat
cmp
or
out
or
or
int3
push
xor
inc
jae
add
ins
push
or
sub
add
inc
pop
pop
inc
fnstcw
adc
jl
sub
mov
fisttp
and
pop
jne
inc
inc
xor
dec
push
fisub
ret
ret
in
xchg
cmp
or
test
mov
mov
push
xchg
mov
ds
jmp
sbb
and
movs
out
mulps
xor
push
dec
inc
cmp
dec
ja
mov
stc
or
cmp
outs
mov
ins
jnp
adc
adc
mov
xor
xlat
add
mov
out
adc
cwde
push
mov
add
aaa
mov
in
fsubr
sar
inc
test
mov
add
rcl
dec
xor
push
int3
int3
sub
dec
add
jg
cmp
xor
mov
fadd
inc
jne
outs
sbb
lock
ret
packuswb
sbb
mov
mov
outs
cld
mov
xchg
mov
les
or
sub
mov
nop
mov
and
push
cmp
jb
mov
out
mov
cmp
and
mov
ret
mov
jecxz
push
cli
fcompp
xchg
adc
test
mov
cwde
movs
lock
lock
lods
jne
mov
pushf
mov
push
loope
fmul
shr
repz
call
movs
dec
movs
jns
sti
stos
add
push
in
shl
or
add
inc
mov
movs
aam
mov
ror
add
adc
xchg
pop
or
sub
ror
sub
cmps
add
push
enter
or
jbe
add
xchg
fisttp
dec
cmps
add
push
daa
sub
push
jecxz
in
sbb
or
mov
inc
call
cmp
outs
inc
aad
and
outs
push
outs
pop
or
dec
push
mov
je
inc
outs
outs
je
outs
outs
ja
or
or
sti
inc
outs
or
stos
mov
rcl
pop
aam
mov
jge
hlt
dec
imul
dec
or
adc
dec
movs
cmps
or
pop
mov
dec
outs
pop
sbb
and
gs
cmp
mov
pop
adc
and
sub
or
sbb
add
fucom
pop
mov
fwait
test
dec
sub
push
dec
fld
sub
arpl
cs
jp
xor
dec
imul
or
pop
(bad)
mov
adc
inc
arpl
scas
xchg
add
jns
sbb
push
mov
push
mov
sti
jge
mov
jo
xor
xor
lock
dec
outs
cwde
add
ins
mov
or
add
mov
stos
lods
mov
les
pop
test
fs
push
inc
mov
xchg
adc
aad
add
sbb
cmp
cmc
pop
mov
in
int
dec
inc
pusha
jmp
fldenv
in
test
mov
xor
sbb
nop
lea
push
in
adc
dec
xchg
or
or
xchg
pusha
add
xchg
nop
xchg
or
gs
pusha
int3
test
loopne
mov
popf
imul
sbb
or
mov
push
bound
dec
movs
add
add
fnstenv
(bad)
adc
cs
mov
ror
xor
sti
jg
adc
add
mov
loopne
fidivr
dec
enter
or
adc
mov
loope
sub
enter
les
mov
mov
imul
pusha
push
fadd
push
jb
and
das
mov
fiadd
int3
push
fs
cmp
imul
scas
mov
imul
or
cmp
sub
aad
add
inc
add
sbb
and
push
xchg
(bad)
inc
sub
mov
jge
add
mov
cdq
add
mov
popa
in
inc
pop
scas
cmp
fidivr
jge
or
(bad)
and
in
rol
arpl
xchg
pop
mov
sbb
adc
sti
mov
jno
add
imul
cmp
adc
inc
ror
js
stc
movs
lea
jmp
lods
or
or
js
(bad)
lock
dec
add
(bad)
jecxz
push
jb
and
lea
push
ret
lods
movs
inc
imul
(bad)
in
xchg
add
and
inc
scas
(bad)
mov
dec
psrlw
cmp
mov
adc
xor
nop
push
mov
ss
dec
leave
das
pop
push
in
sbb
mov
push
je
push
sbb
add
cmps
or
jg
movs
enter
pop
xor
idiv
aam
aaa
inc
cmp
aaa
xor
fsubr
sub
push
nop
mov
(bad)
fisub
dec
sbb
xor
sub
leave
sub
xchg
dec
sub
bound
das
xchg
pop
push
mov
ja
and
leave
adc
inc
mov
jbe
xor
add
loopne
retf
popa
xor
gs
sub
adc
ret
fnstcw
movs
nop
fst
(bad)
or
xchg
or
sbb
jp
in
inc
call
int3
push
daa
pop
das
mov
cmp
mov
push
sub
adc
jle
js
xchg
test
or
repnz
and
ror
call
inc
int3
jb
test
cmp
call
popa
int3
int3
aas
pusha
add
sub
and
mov
das
dec
emms
dec
in
lea
outs
add
push
pop
mov
ror
or
aaa
push
mov
xor
mov
xchg
std
adc
fs
lea
cmp
js
adc
adc
bts
pusha
push
aas
cmp
pop
xchg
sbb
popa
sub
int
mov
das
sub
stos
pop
sub
test
dec
adc
ins
jnp
mov
inc
inc
je
push
icebp
shr
es
loopne
rcr
jns
jns
mov
push
inc
push
or
xor
and
add
xor
sbb
inc
pop
cmp
pop
mov
add
mov
in
imul
cmp
adc
inc
jmp
inc
xor
ret
and
xor
mov
int
push
jno
sbb
inc
ror
xor
cwde
jno
add
ror
lds
ret
and
loope
adc
cmps
inc
(bad)
add
jecxz
mov
inc
lds
inc
or
icebp
sbb
adc
loope
icebp
jns
cmp
nop
dec
add
cmc
dec
lea
push
add
lds
xor
lods
outs
push
stos
add
and
dec
shl
pop
adc
cmps
and
mov
mov
outs
add
adc
das
icebp
ficomp
repnz
sbb
dec
ror
sbb
les
aaa
test
into
xor
mul
in
shl
in
idiv
ror
jns
or
jns
jb
push
mov
inc
aam
cmp
sbb
dec
inc
sahf
pushf
mov
daa
daa
and
xlat
mov
xor
mov
xor
dec
xchg
daa
and
scas
daa
inc
jecxz
fldenv
cmp
dec
out
push
xchg
dec
cmp
xor
test
cmp
push
adc
dec
or
lock
call
outs
fwait
sbb
adc
adc
jmp
dec
add
mov
mov
and
xchg
adc
add
aad
je
or
jle
pop
mov
mov
push
add
xor
xchg
pop
mov
push
adc
xchg
push
(bad)
imul
mov
sbb
adc
add
fsub
adc
bound
push
ins
lds
pop
cmp
push
ret
add
add
nop
je
cmp
mov
mov
call
mov
aad
imul
xchg
dec
and
sub
or
add
inc
or
nop
fadd
in
ret
mov
or
or
pop
add
mov
shr
mov
sbb
jo
pop
xor
push
jne
shl
or
push
jmp
stc
push
xor
mov
xor
mov
arpl
pop
adc
mov
or
sbb
add
fiadd
push
sbb
sbb
mov
cli
and
sbb
sbb
sbb
fadd
sbb
sbb
nop
mov
add
mov
mov
sbb
adc
sub
adc
xor
mov
sub
and
bound
ss
dec
jecxz
add
mov
mov
int3
inc
(bad)
pop
adc
bound
aaa
xchg
stc
mov
outs
lods
add
inc
pop
adc
push
sub
dec
out
pop
pop
add
(bad)
ror
mov
test
jecxz
and
sahf
shld
iret
popf
push
cmp
mov
arpl
movs
jge
jo
aad
inc
push
mov
sahf
push
rsqrtps
jmp
xor
nop
dec
jmp
mov
sbb
lds
push
shl
dec
bt
xor
inc
(bad)
addr16
mov
add
pop
test
and
gs
addr16
jnp
push
adc
or
mov
js
out
sub
or
cmp
imul
lock
sbb
sbb
call
movs
adc
inc
mov
pop
fs
(bad)
add
push
int
xor
pop
push
popa
xor
inc
pop
sbb
or
arpl
add
or
or
cmp
add
or
sub
add
cmp
sldt
cmp
dec
pop
sbb
dec
test
inc
and
push
dec
enter
shr
xchg
pop
sbb
sbb
xchg
xchg
and
in
jbe
or
in
loopne
and
and
bound
and
std
and
push
xchg
loopne
loop
les
in
cld
loop
sub
xor
add
mov
in
(bad)
pop
xor
das
lds
sub
lea
iret
push
nop
in
push
test
pusha
or
sbb
push
jg
inc
aaa
jg
push
mov
push
in
dec
rcl
stc
xor
popa
outs
add
adc
add
mov
or
inc
jnp
jae
mov
fdiv
das
or
add
adc
xlat
pop
ret
sbb
add
data16
shr
and
neg
daa
xor
inc
cwde
(bad)
sar
rcl
push
imul
or
sub
sbb
test
sub
jo
jp
adc
push
inc
jl
add
jbe
ret
mov
xchg
(bad)
scas
pmuludq
push
in
adc
jbe
adc
mov
pop
xchg
inc
test
es
adc
aas
inc
adc
mov
out
and
pop
into
rol
sub
lods
mov
retf
mov
fstp
add
mov
jno
mov
out
inc
add
mov
popa
nop
outs
es
mov
sbb
js
in
adc
inc
test
mov
dec
push
dec
and
dec
inc
and
mov
ror
adc
sub
outs
stos
lods
inc
or
pop
cmps
mov
cmp
sbb
lds
jle
mov
and
cmps
and
inc
dec
push
push
pop
add
sub
sti
pop
jmp
shl
dec
clc
pushf
jmp
or
cwde
sbb
adc
sub
add
mov
arpl
mov
xchg
test
out
nop
pop
enter
sbb
add
pop
jmp
push
cmps
or
add
push
fcomip
jmp
or
or
push
jb
jmp
out
addr16
(bad)
xchg
fxch
arpl
push
fld
and
int
jmp
inc
adc
nop
(bad)
push
and
loopne
iret
jmp
xchg
adc
add
inc
lahf
jmp
ds
add
pop
in
add
add
add
inc
ins
dec
pop
or
mov
aas
xchg
in
push
ins
cmp
xor
pop
test
fnstenv
add
shl
mov
add
pop
mov
test
cmp
push
cs
lods
adc
add
in
retf
jmp
adc
leave
adc
xchg
adc
pop
neg
(bad)
bound
adc
clc
inc
cmps
je
outs
cmc
out
mov
fst
fucomi
fisttp
jp
pushf
neg
push
push
push
test
inc
(bad)
adc
(bad)
fwait
adc
adc
inc
inc
dec
inc
nop
pop
sbb
mov
imul
fsubr
ins
lods
or
imul
jecxz
pop
in
test
mov
dec
add
mov
adc
mov
in
xor
adc
cmp
aas
outs
call
sbb
loopne
ret
sub
aas
pop
add
and
fist
add
jne
jnp
ins
jbe
sbb
jbe
mov
and
fmul
sbb
fild
xor
sub
jo
rcl
push
mov
in
addr16
les
in
mov
cmp
test
in
pop
dec
sbb
add
pop
in
pusha
sbb
cmp
shr
enter
xchg
add
jle
dec
fimul
stos
inc
cmp
shl
sub
inc
(bad)
clc
pop
mov
test
adc
hlt
hlt
bound
movs
hlt
add
lock
movs
scas
es
push
inc
pushf
pop
xor
xor
and
in
repnz
xchg
add
retf
shl
jno
and
push
sbb
push
das
push
sbb
push
push
sbb
inc
ret
clc
mov
push
pop
lea
test
pop
nop
xor
fstp
es
inc
loopne
xchg
cmps
stc
and
cld
loopne
push
sub
and
sbb
sbb
cmp
std
add
inc
mov
loopne
jecxz
and
sub
scas
movs
dec
ret
dec
add
fwait
or
pusha
and
or
push
cmps
imul
cmp
add
repz
and
push
mov
inc
repz
aaa
test
aad
cmp
cmp
pusha
mov
sub
or
pop
int
mov
hlt
mov
jmp
pop
les
aad
push
pop
mov
push
mov
or
icebp
outs
mov
in
hlt
add
test
aaa
daa
sbb
aam
adc
pop
and
ror
inc
adc
dec
cmps
ja
push
sub
fiadd
sub
xchg
and
imul
add
div
cmc
cmp
stc
into
popa
les
inc
repnz
(bad)
int3
arpl
loope
mul
(bad)
call
sub
shl
adc
or
pop
fnstsw
test
test
ins
mov
daa
pop
not
cmp
mul
push
jne
mov
sbb
das
push
xchg
or
cmp
push
clc
push
repnz
out
sbb
in
clc
xchg
clc
mov
pop
leave
clc
scas
call
or
sub
aam
sahf
imul
mov
pop
test
pop
ja
stc
jmp
stc
aad
jo
xchg
add
outs
pop
nop
push
leave
jp
pop
sub
pmuludq
mov
dec
lock
jmp
sbb
fwait
shl
pop
push
call
jo
test
jno
cmp
add
and
sbb
inc
sar
or
mov
rol
adc
sbb
adc
jno
and
sti
push
and
xlat
jle
sub
mov
xchg
cmc
mov
fnstenv
inc
or
mov
pop
adc
pop
mov
movs
fbstp
jbe
retf
xor
jl
sti
mov
push
sbb
lock
adc
mov
test
sub
and
neg
dec
dec
sub
dec
sub
push
and
cmp
arpl
inc
(bad)
sbb
or
lock
and
cwde
and
mov
outs
mov
scas
imul
pop
and
popa
call
push
dec
ror
sub
fcom
sub
(bad)
push
test
es
jnp
call
xor
sub
cmps
rol
dec
sahf
push
push
or
outs
call
pop
pop
add
ret
jmp
xor
xchg
add
sub
call
fisubr
add
enter
dec
test
loope
jns
and
hlt
sar
popa
(bad)
int
push
xor
cmp
inc
add
sub
ficom
das
dec
je
sub
push
mov
mov
dec
and
mov
xchg
sbb
mov
fimul
pop
dec
jle
mov
bound
icebp
call
add
pop
jne
dec
mov
lea
iret
test
and
sub
movs
jno
nop
pop
mov
cmc
ror
or
test
sti
int
mov
movs
cmp
mov
adc
cmp
(bad)
mov
or
inc
sbb
ja
add
in
lock
repnz
jo
dec
add
mov
add
inc
retf
mov
or
inc
int
and
ret
or
and
in
fdiv
pop
adc
pusha
jp
pop
daa
pop
outs
sbb
push
aad
jmp
shl
lods
gs
mov
pop
scas
jne
stc
jmp
xchg
xor
and
and
rol
loopne
cmp
repnz
arpl
jmp
add
push
mov
inc
add
stos
xor
pop
mov
mov
je
mov
les
or
adc
in
mov
xlat
and
add
lahf
add
(bad)
test
arpl
and
push
jecxz
add
fsub
icebp
and
sub
mov
push
lock
lock
fadd
push
xchg
icebp
xchg
sbb
rcl
and
in
lds
enter
dec
sub
stc
xchg
imul
sbb
in
xchg
mov
or
adc
xchg
adc
sub
xor
add
cmp
mov
mul
inc
or
add
inc
adc
addr16
dec
daa
and
je
push
push
sbb
dec
iret
lock
les
sbb
out
or
mov
sti
dec
dec
inc
test
jl
and
jmp
push
in
add
and
sbb
and
repnz
mov
xor
mov
mov
dec
cmp
dec
add
push
std
dec
dec
dec
jae
ins
jmp
dec
lods
adc
jmp
cwde
cmp
add
cmc
and
xor
test
cld
or
imul
paddusb
inc
std
imul
push
loopne
cmp
mov
push
adc
gs
rcr
in
or
jo
out
popf
out
mov
pop
outs
sub
and
js
mov
rol
or
(bad)
rol
and
mov
sbb
pop
fld
inc
jmp
pusha
nop
mov
push
imul
imul
clc
jns
push
adc
mov
jge
mov
push
(bad)
aam
inc
cwde
mov
fstp
jmp
ror
test
mov
jmp
pop
stos
adc
cdq
add
aas
call
sub
imul
push
mov
cmp
shr
nop
mov
mov
int
lea
sbb
mov
push
jmp
loope
mov
int3
repnz
add
leave
sbb
cmps
pop
add
les
(bad)
lods
jbe
and
mov
add
add
xchg
sbb
cmp
mov
iret
push
sbb
rol
or
or
movs
or
push
pop
push
mov
or
ret
and
mov
ret
cmp
cmp
or
or
mov
mov
in
push
xor
fs
outs
pop
(bad)
add
and
loopne
jae
and
aas
sub
xlat
push
add
clc
es
pop
mov
and
cmp
adc
add
cdq
add
jg
inc
or
hlt
pop
jae
ret
adc
dec
retf
add
fbstp
mov
add
scas
(bad)
std
stc
lods
xchg
lods
add
lock
xor
test
dec
outs
adc
outs
data16
mov
and
shr
jge
iret
adc
sbb
test
ror
jbe
addr16
xchg
shl
(bad)
lock
xchg
in
pop
into
repz
push
or
mov
add
mov
int3
lea
add
mov
add
shr
fst
push
mov
sub
js
les
scas
adc
jne
mov
jg
icebp
in
mov
fist
jnp
cmp
fwait
xor
dec
repz
inc
lods
jmp
lods
or
test
cmps
mov
test
loop
jp
sub
and
add
pop
mov
xor
fucomp
push
movs
cmp
push
mov
popf
sub
and
xchg
out
push
and
push
adc
sbb
add
rol
or
std
ret
movs
popa
lods
and
push
movs
and
pop
or
enter
cmp
jecxz
ret
and
sub
xchg
inc
imul
or
mov
dec
ins
xchg
pushf
mov
xchg
pushf
mov
or
mov
mov
push
mov
hlt
stc
(bad)
fdiv
js
imul
xor
sub
out
hlt
scas
adc
pop
imul
add
dec
fcmovnb
mov
mov
inc
cmps
xor
loop
das
popa
mov
lods
xor
sub
mov
popa
mov
gs
sub
aaa
nop
xchg
or
daa
jne
inc
pop
shl
(bad)
test
push
outs
push
nop
push
sub
pop
adc
div
pop
pop
push
or
adc
(bad)
mov
inc
dec
ins
adc
dec
pop
add
popf
jl
xchg
imul
sahf
or
adc
iret
push
jge
cld
mov
and
and
pop
jae
(bad)
jp
push
daa
and
mov
bound
dec
ins
adc
mov
mov
call
pop
sbb
add
add
inc
push
sub
sub
sbb
dec
sbb
or
or
(bad)
lods
pop
xchg
jmp
movs
mov
imul
sub
inc
xchg
enter
outs
add
sbb
adc
ins
jnp
ja
push
or
cli
call
jbe
jns
imul
in
dec
lock
xchg
push
and
pop
sub
sbb
mov
loop
dec
popa
sbb
jae
call
repnz
mov
imul
les
mov
jle
add
cld
adc
rol
fnstenv
in
inc
sub
xchg
add
cmp
rcr
jg
mov
inc
mov
les
cmp
lods
add
mov
push
leave
in
mov
xchg
fcmovb
ffreep
adc
pushf
shr
or
sbb
pop
arpl
nop
loopne
rcr
ss
loope
ss
push
movs
(bad)
ins
jne
sub
lea
jp
mov
push
push
adc
outs
push
mov
mov
add
fmul
leave
sbb
mov
dec
push
and
sub
scas
movs
sub
add
sub
and
jg
push
adc
adc
pusha
or
cs
xchg
or
add
outs
rcl
xor
in
sbb
adc
not
xchg
lods
add
adc
and
cmp
adc
sub
jmp
push
test
or
sbb
cmps
cmp
fwait
pop
and
dec
push
mov
or
mov
push
xor
add
jg
push
add
xchg
imul
jmp
mov
stos
and
and
xchg
inc
xor
mov
ret
cmp
retf
fiadd
shl
sub
int
popa
je
das
pop
adc
and
push
xchg
sub
xchg
movs
test
std
dec
xchg
pushf
sbb
cli
fstp
mov
shl
popf
mov
xchg
mov
je
jo
cmps
mov
jmp
inc
inc
movs
loop
adc
push
push
fmul
jo
arpl
hlt
add
dec
neg
and
dec
imul
fnstcw
or
pop
sub
jmp
cmps
mov
movs
ret
loopne
mov
sub
and
pop
jmp
pusha
jo
fsubr
and
in
dec
rcr
sar
add
movs
popf
out
jne
push
mov
rcl
lds
mov
stos
or
mov
arpl
adc
ror
xlat
int3
xor
push
adc
nop
fs
movs
sub
sbb
rol
in
fwait
mov
sbb
sbb
inc
jb
pop
jl
and
pop
pop
cmp
bnd
mov
add
sub
jae
lods
fadd
jns
fs
(bad)
mov
inc
outs
popa
push
out
mov
bound
rcr
inc
lds
les
cmp
sbb
push
ja
dec
or
push
dec
add
scas
scas
add
lods
lods
clc
jnp
jae
jnp
enter
add
ss
inc
push
and
sahf
ss
loopne
mov
mov
jne
dec
and
jbe
(bad)
sbb
add
sbb
call
cmp
sbb
push
pop
pusha
xor
je
das
mov
adc
(bad)
in
sbb
or
clc
enter
jne
or
adc
or
dec
pop
jne
rcl
inc
mov
div
(bad)
or
add
leave
in
and
or
sbb
mov
mov
push
gs
push
nop
mov
xchg
(bad)
or
mov
sbb
push
outs
aaa
or
fild
ja
or
rol
xchg
mov
add
push
push
iret
add
ret
outs
cmovg
xor
xor
jbe
jmp
jo
mov
out
mov
test
in
aas
mov
jne
cmp
and
lods
out
ins
mov
mov
je
sub
out
pop
cmp
aad
inc
or
lock
hlt
or
(bad)
xlat
add
mov
sbb
cmp
sub
lods
nop
xchg
fcomp
imul
push
pop
movs
(bad)
shr
add
push
aaa
outs
cmp
nop
int
adc
and
xchg
mov
call
adc
adc
add
push
or
push
lods
inc
sub
adc
je
movs
jb
vmovaps
sub
imul
push
daa
and
sub
jmp
stos
clc
push
inc
test
cmp
adc
aaa
hlt
push
mov
in
popf
cmovs
inc
push
adc
aas
and
push
gs
jl
es
sbb
imul
inc
arpl
movs
push
push
xor
lods
mov
or
xchg
out
xchg
(bad)
sub
pop
outs
(bad)
repz
pop
xor
je
test
sbb
jp
(bad)
push
add
imul
dec
cmps
pop
xor
mov
sbb
jae
cdq
sbb
sbb
mov
lods
es
and
jle
sbb
ins
lock
push
dec
sub
adc
sub
adc
mov
mov
inc
je
out
xor
fmul
or
xchg
imul
(bad)
je
jno
xchg
xor
push
mov
sbb
cmp
mov
aam
mov
mov
into
ret
mov
and
push
call
xor
dec
add
in
adc
lods
or
xchg
das
xor
pop
and
les
dec
mov
push
jecxz
dec
lahf
mov
xor
inc
lock
in
and
and
movs
cmp
call
ins
test
sbb
lea
add
sub
cmps
mov
cli
not
xor
pop
jne
inc
add
cmp
lods
in
cmp
or
add
mov
neg
dec
jo
mov
or
xor
push
or
retf
(bad)
jbe
(bad)
not
shl
je
xchg
mov
dec
fcom
lea
add
xor
inc
cmps
inc
jnp
mov
movs
sub
fadd
pop
xchg
(bad)
adc
mov
and
add
not
adc
add
out
nop
lods
xchg
aas
sub
or
data16
push
pop
or
add
xchg
sub
sub
mov
pop
outs
jnp
mov
push
in
dec
adc
sub
and
mov
retf
mov
pop
nop
sbb
rcr
xor
imul
scas
pop
jg
(bad)
(bad)
push
cmps
sub
fisub
outs
mov
aas
cmp
sbb
push
cmp
pop
out
pop
dec
call
push
adc
xor
pop
jnp
adc
xchg
fwait
and
mov
cmps
fs
iret
mov
out
cmps
sysenter
inc
add
and
cld
(bad)
mov
iret
cld
test
in
jge
mov
mov
or
shr
scas
and
pop
pusha
inc
cwde
mov
jo
mov
movs
add
pop
arpl
idiv
add
cdq
js
frstor
jo
das
popf
add
mov
in
cwde
inc
imul
and
sbb
sti
cld
push
popa
push
and
add
cmp
jb
bound
repnz
pop
cli
add
imul
inc
(bad)
sbb
sub
mov
mov
or
pop
into
imul
mov
xor
dec
inc
mov
sbb
jl
xchg
push
mov
adc
or
mov
sub
popf
cmps
mov
cmp
sub
xchg
jmp
nop
hlt
nop
xchg
dec
hlt
mov
or
push
cmp
cmp
adc
imul
lods
inc
repnz
imul
pop
inc
sub
dec
and
mov
fimul
push
jp
adc
daa
cmp
jne
push
xchg
cdq
mov
ret
hlt
lock
xchg
inc
sub
je
push
outs
push
clc
xor
sub
or
in
clc
add
adc
loopne
lds
mov
xchg
fwait
lods
or
daa
and
or
scas
mov
sub
inc
lea
test
test
fwait
jb
cmp
push
jp
fs
mov
hlt
int
push
dec
in
push
mov
and
jmp
mov
and
xor
(bad)
rcr
rcr
push
and
pcmpgtd
mov
mul
enter
test
dec
add
push
and
adc
invd
sub
sbb
sar
pop
and
arpl
scas
sub
fadd
jo
test
push
out
or
rol
adc
stos
dec
jge
mov
int3
adc
dec
mov
xor
sbb
adc
add
aaa
dec
pop
add
add
push
fisubr
pop
or
mov
push
fsubr
inc
retf
in
cmp
test
sbb
xchg
test
cmp
cs
in
pop
aaa
add
and
jle
sbb
or
pop
or
stos
aaa
add
push
mov
cmc
adc
call
pop
dec
push
loopne
jp
xchg
mov
xor
pop
inc
test
das
ins
sbb
aam
sti
test
mov
ja
or
lods
outs
out
sbb
test
or
test
rcr
pop
call
rep
xor
ror
xor
add
add
mov
leave
jecxz
or
les
mov
pop
iret
adc
dec
test
pop
imul
dec
les
mov
cld
mov
sbb
push
les
repnz
test
cli
add
xor
jecxz
sub
(bad)
jle
icebp
ds
add
and
lahf
dec
xor
movsx
cmp
jne
rcl
jne
loope
xchg
pop
sbb
nop
add
sub
in
sub
ror
push
push
xchg
inc
nop
sti
xor
push
pop
sub
jecxz
sub
sbb
and
ret
add
and
cmps
out
mov
adc
adc
in
scas
out
ret
push
(bad)
xor
fldenv
fdivr
shl
sub
mov
aam
xchg
xchg
mov
aam
xor
inc
and
ret
xchg
mov
inc
pop
bound
or
test
js
shl
cmp
(bad)
xor
dec
push
jns
mov
jbe
adc
or
adc
fadd
and
lock
pushf
xchg
loope
xchg
cld
push
popa
nop
hlt
or
test
in
out
test
jne
mov
sub
inc
mul
dec
lods
xchg
push
cs
repz
adc
or
addr16
xchg
repnz
add
and
sbb
ja
out
cmp
inc
jne
cmp
jge
dec
pop
mov
in
ins
dec
out
pop
pop
test
push
getsec
inc
sbb
cs
js
mov
push
lea
cwde
xor
cmps
shr
and
pop
jmp
inc
cmc
or
nop
out
adc
imul
pop
lahf
div
adc
das
inc
pop
jg
cmp
fisub
sbb
pop
test
push
shl
or
and
pop
or
jnp
xchg
dec
jno
cmp
lds
es
adc
or
add
adc
push
add
loope
mov
jecxz
xor
xor
aaa
mov
or
adc
adc
inc
dec
inc
mov
(bad)
jecxz
and
test
in
or
dec
mov
ret
scas
ds
ror
push
and
outs
iret
inc
push
dec
loope
xchg
mov
jmp
in
fld
or
mov
lods
jo
in
imul
cmp
mov
cmp
mov
dec
push
into
je
cs
movs
pop
jg
xchg
sub
dec
(bad)
lahf
xchg
cwde
cdq
inc
sbb
sub
xor
sbb
jecxz
add
fiadd
cld
cld
je
sbb
sub
ret
inc
adc
addr16
or
sahf
call
xor
adc
inc
sahf
xor
push
push
test
call
movs
nop
and
and
xor
ret
or
aas
adc
movs
fldenv
out
add
test
inc
or
dec
xor
pop
rcl
ins
xor
push
shr
jge
cmps
hlt
test
imul
push
es
inc
mov
sbb
js
pusha
pop
adc
cmp
push
enter
adc
dec
fist
xchg
sbb
jle
push
and
push
cmp
mov
cmps
mov
pop
(bad)
daa
inc
adc
aam
mov
sbb
add
outs
dec
pop
rcl
dec
and
and
pop
test
inc
jnp
test
mov
test
fs
mov
pop
adc
dec
xor
in
std
lods
adc
sbb
xor
sahf
mov
fadd
lea
xchg
and
fwait
ja
inc
in
(bad)
(bad)
dec
sar
iret
push
cmp
jp
push
sbb
pushf
pusha
scas
jmp
sbb
inc
js
sbb
dec
cmp
xchg
push
das
inc
xor
jns
mov
push
pop
jmp
sbb
les
ret
adc
rol
or
adc
jge
mov
mov
jne
mov
lods
xlat
pop
out
cmp
xchg
jl
or
imul
mov
adc
inc
movs
daa
iret
cmp
add
stos
cmp
sub
cmp
inc
and
in
ss
call
xor
std
xchg
dec
leave
add
je
dec
cs
data16
into
push
push
add
and
lea
cmps
or
xchg
cmp
aad
mov
das
cmp
imul
js
imul
in
push
jl
pop
push
sbb
adc
mov
xor
inc
jmp
dec
pop
lock
dec
int
mov
cmp
gs
js
inc
inc
push
retf
xchg
cmp
cmp
or
and
and
mov
stos
cdq
pop
fldcw
or
cmp
push
push
jp
dec
add
push
add
jo
push
jo
cmp
inc
ret
scas
pop
les
dec
not
(bad)
sub
pusha
mov
and
pop
cmp
inc
lds
adc
cmp
jmp
xchg
mov
pop
add
dec
push
or
dec
xor
pop
sbb
test
dec
loope
sbb
pop
mov
gs
cmp
ja
sbb
or
xchg
add
pop
push
xor
cmp
mov
add
fs
mov
and
mov
lock
imul
ds
fstp
push
mov
fldenv
je
mov
cmps
scas
inc
dec
mov
addr16
adc
add
and
or
ret
adc
add
out
mov
jns
cdq
sbb
or
sbb
dec
and
sub
ss
(bad)
fisttp
cmp
das
jg
add
add
xchg
add
mov
pop
lahf
add
pextrw
dec
add
adc
mov
cmp
std
pop
xor
mov
xchg
inc
mov
adc
add
adc
lea
push
sub
sbb
mov
add
and
in
push
daa
dec
and
mov
and
arpl
mov
cmp
sbb
add
sar
sub
addr16
push
cwde
inc
mov
inc
enter
es
pushf
fld
mov
pop
stos
mov
mov
mov
out
lds
add
cmp
dec
mov
sbb
fadd
xchg
add
imul
push
pop
movs
lahf
test
inc
sub
js
inc
fbld
mov
in
or
xor
scas
push
pop
lahf
in
movs
imul
sbb
ins
movs
imul
push
lahf
push
sub
sbb
add
call
inc
or
aad
cmp
xchg
imul
dec
mov
sub
jecxz
mov
(bad)
idiv
stc
push
out
dec
leave
and
adc
in
les
inc
inc
js
dec
or
add
pushf
push
add
sbb
mov
mov
nop
cwde
dec
adc
mov
stos
clc
scas
mov
xchg
mov
and
xchg
movs
and
(bad)
adc
sub
inc
xor
cmp
mov
movs
adc
scas
pop
jecxz
adc
pop
pop
jbe
xchg
ja
or
add
movs
push
xchg
cwde
or
push
gs
call
cmp
add
pushf
push
popf
je
and
out
cmps
sbb
movs
push
test
enter
or
cmp
pop
pop
and
sbb
jns
dec
out
inc
pop
sbb
add
xchg
sbb
inc
test
imul
imul
xchg
xchg
inc
mov
aaa
jb
push
inc
xchg
inc
leave
invd
inc
popa
xor
stc
inc
lds
pop
adc
mov
xor
in
ins
cmps
inc
and
enter
inc
push
int
mov
sub
(bad)
shl
sbb
lea
int
test
icebp
neg
es
dec
dec
daa
xchg
pop
push
into
adc
test
mov
test
sbb
stos
into
push
lods
inc
test
popa
mov
rol
sbb
scas
or
inc
or
in
gs
sahf
dec
ror
dec
enter
dec
sub
mov
in
dec
add
add
pop
jp
dec
pop
and
mov
jo
test
(bad)
retf
add
pop
popa
sbb
leave
das
dec
fs
and
or
pushf
dec
add
sbb
call
lods
mov
push
add
add
lods
and
xchg
inc
and
test
inc
inc
sbb
add
js
jl
jb
jns
sub
lods
and
dec
push
lods
mov
and
push
mov
jmp
cld
dec
pop
fsubr
sub
nop
xchg
pushf
(bad)
inc
clc
scas
push
xor
or
push
mov
(bad)
mov
dec
pop
setno
daa
jp
(bad)
sti
dec
ret
sub
outs
and
enter
dec
ror
pop
add
jp
lods
test
scas
clc
dec
clc
dec
leave
dec
mov
mov
dec
imul
scas
mov
pushf
adc
shr
inc
call
clc
dec
test
clc
dec
cmp
dec
cmp
sub
test
clc
dec
inc
nop
xchg
push
fdiv
mov
mov
mov
lahf
add
movs
pop
or
sub
mov
mov
or
sub
ins
and
mov
xor
aam
add
daa
fdivr
pop
ss
test
push
adc
push
xchg
daa
and
imul
inc
mov
sub
add
(bad)
loopne
jmp
cmps
test
arpl
mov
and
imul
gs
imul
pop
aas
cmp
inc
out
push
dec
stc
mov
sub
shr
add
ror
loope
das
ret
ins
les
mov
or
push
xor
and
je
xor
imul
sbb
mov
rcr
into
push
dec
inc
fisubr
sti
cmovns
(bad)
sahf
fist
add
mov
fld
cmp
mov
push
xor
pop
xchg
xchg
xchg
fstp
loopne
pop
jle
sbb
scas
dec
push
(bad)
push
(bad)
jo
ins
div
push
jp
inc
fisubr
out
lods
pop
ror
add
sahf
out
jns
xchg
and
xchg
and
add
scas
cmp
mov
repnz
and
adc
fwait
add
fsub
paddsw
rol
xor
add
add
adc
pop
dec
nop
dec
push
bound
mov
adc
mov
cs
pop
xchg
mov
les
push
mov
and
clc
mov
inc
dec
inc
fwait
cld
push
xor
test
or
retf
pushf
aad
and
and
mov
es
aad
shl
pop
or
sub
xchg
mov
mov
jo
jbe
mov
jb
jo
aaa
dec
cmp
add
imul
sub
add
add
jl
pop
test
cmp
push
mov
ss
xchg
lods
in
ret
or
inc
and
cld
push
je
scas
mov
pop
cld
push
jnp
and
jmp
leave
(bad)
out
or
dec
jg
push
mov
inc
jg
outs
push
xor
pop
outs
push
jns
dec
mov
bound
fs
pop
ins
(bad)
cld
push
cvtpi2ps
pop
and
movs
rol
xor
mov
push
ret
mov
inc
pop
cli
stos
imul
add
stc
mov
adc
jns
mov
adc
mov
in
sbb
sub
add
les
call
outs
add
jge
adc
sbb
pop
jbe
dec
push
mov
inc
ret
sbb
scas
mov
aas
dec
mov
lock
push
pop
(bad)
sbb
cmp
xchg
lds
cwde
push
inc
push
dec
lods
(bad)
xchg
xchg
xchg
sets
sub
pop
sahf
xor
pop
add
dec
fnsave
jb
mov
enter
(bad)
sub
(bad)
and
neg
in
repnz
(bad)
sub
dec
push
and
push
dec
pop
sbb
mov
mov
iret
push
lea
pop
fist
enter
cmp
cmps
jge
aam
push
fmul
iret
rol
xchg
and
adc
pop
xchg
or
in
pop
jmp
mov
mov
fadd
cmp
adc
enter
jns
pop
xor
adc
and
enter
mov
out
mov
jg
inc
mov
imul
aaa
sub
cdq
inc
int3
bound
repnz
sbb
cmp
pop
sub
repnz
pop
adc
or
push
mov
add
cdq
sbb
mov
dec
int
xchg
pop
jb
movs
cmp
pop
ret
push
pop
mov
inc
mov
jns
inc
mov
jns
test
inc
cmp
or
fs
push
and
fs
leave
pushf
retf
fiadd
int3
push
mov
into
inc
test
retf
or
jno
push
jnp
push
pop
cmp
push
pop
xchg
frstpm(287
pop
stc
bound
psrld
leave
leave
enter
outs
mov
(bad)
or
cmp
jne
enter
xor
add
bound
xchg
fstp
pusha
xchg
(bad)
jmp
sub
lods
enter
add
int3
bound
push
dec
arpl
fs
or
sbb
ins
int
inc
sub
add
enter
out
add
or
xor
mov
cdq
and
sbb
movs
leave
int3
bound
(bad)
popf
or
out
test
dec
xchg
aaa
xchg
(bad)
in
ins
retf
imul
sahf
call
cs
mov
out
jp
push
add
addr16
mov
adc
adc
leave
les
mov
call
and
mov
addr16
int3
bound
aad
xor
sub
and
push
push
mov
adc
out
push
adc
cmc
inc
dec
gs
or
imul
fs
dec
and
into
pop
fiadd
and
popa
fmul
push
xchg
sbb
retf
pop
inc
retf
or
cmc
add
mov
or
ins
scas
pop
aam
pusha
add
sbb
adc
arpl
adc
adc
cwde
push
out
xor
(bad)
push
mov
lds
add
shr
mov
dec
xor
mov
pop
shr
fimul
sub
ins
mov
mov
test
inc
mov
rcl
add
movs
ss
push
(bad)
xor
mov
int
movs
retf
add
and
xchg
fsub
gs
repnz
enter
shr
push
cs
loope
mov
aad
mov
push
(bad)
and
daa
popf
pop
dec
push
xchg
lea
xor
mov
pop
xor
popa
adc
xor
test
inc
sub
xchg
or
pop
pop
sahf
sub
xor
shl
data16
inc
es
mov
test
iret
retf
xor
pop
ins
xchg
aaa
(bad)
hlt
dec
rol
in
mov
sub
(bad)
push
sbb
or
inc
nop
sub
sar
imul
inc
imul
mov
sub
sub
jecxz
jne
test
inc
jl
sub
fld
icebp
push
adc
jo
cld
fld
and
mov
pop
jns
or
sbb
dec
imul
jb
or
add
add
or
add
pop
pop
push
retf
popa
stos
mov
fld
fnstenv
ja
push
cmp
push
push
and
xor
lods
fs
push
mov
sar
mov
test
test
imul
daa
in
sub
imul
push
ins
imul
scas
jmp
push
dec
xchg
mov
loopne
ins
imul
inc
ret
outs
xor
in
jb
add
jns
jb
pushf
shl
jo
cmp
sbb
test
sahf
pushf
mov
or
dec
dec
dec
dec
push
ja
aam
daa
and
jae
xchg
mov
fcom
je
int
ret
loop
loope
jne
inc
inc
adc
(bad)
sbb
cmp
add
add
cmp
or
dec
add
int3
rcl
or
scas
bound
dec
push
cmp
cmp
imul
push
aam
mov
lods
xchg
popf
sub
push
in
mov
outs
push
sbb
push
or
pop
lods
xchg
mov
and
mov
or
jne
out
cvtpi2ps
or
push
or
pop
int
dec
jo
and
das
add
dec
and
dec
pop
outs
in
aad
sbb
(bad)
inc
inc
and
or
push
dec
mov
xlat
imul
sbb
push
nop
and
imul
push
xlat
imul
imul
mov
imul
lock
xor
nop
cwde
pop
xchg
dec
call
add
inc
enter
mov
pop
repnz
imul
xchg
and
jbe
and
(bad)
dec
out
adc
adc
imul
imul
or
cmp
mov
mov
shl
add
ds
mov
dec
add
adc
push
cmp
push
inc
test
add
cmp
repnz
cwde
mov
sbb
fld
test
or
stc
xor
imul
jo
imul
inc
adc
mov
(bad)
push
enter
xor
xchg
scas
aas
rcr
sbb
inc
test
imul
lods
shr
xlat
pop
lds
push
pop
cmp
mov
or
xor
fidivr
pop
lea
sub
repnz
repnz
imul
repnz
imul
test
dec
or
(bad)
sbb
inc
and
ja
ret
push
rcr
movd
push
imul
jb
jmp
or
pop
movs
enter
push
sbb
lods
pop
aad
and
pop
push
js
repnz
pushf
fcmovu
js
jb
repnz
push
mov
xor
sahf
and
pushf
nop
jns
fcmovu
mov
xlat
push
sahf
pushf
fimul
and
lahf
adc
pop
and
ficom
mov
and
inc
or
jp
and
mov
(bad)
and
push
and
push
rcl
test
push
mov
cmp
jnp
mov
and
cmp
xor
sbb
stos
add
xchg
add
rol
into
es
mov
in
das
add
in
add
retf
stos
in
pop
mov
leave
call
pushf
xchg
push
xor
adc
inc
lods
(bad)
mov
rol
pop
pop
ror
add
mov
inc
in
arpl
xor
pop
add
cmc
sbb
push
jne
das
retf
(bad)
nop
xchg
jg
js
fst
fist
push
imul
add
retf
stos
das
mov
and
sbb
js
fs
add
jg
or
xchg
xchg
scas
cmc
add
sub
outs
xchg
sbb
daa
daa
daa
and
out
xchg
xchg
xchg
xchg
sbb
leave
leave
leave
enter
(bad)
fsub
in
in
test
(bad)
jb
repnz
adc
jb
mov
or
lods
cmc
aas
mov
in
imul
mov
mov
sbb
lods
xor
fcomp
nop
fsub
mov
jmp
push
jnp
fnsave
enter
xor
fstp
and
fidiv
push
rcl
daa
push
lods
xor
ficom
dec
ins
ins
push
xor
push
jnp
fild
xor
cs
ins
add
adc
fistp
enter
cmp
fild
push
push
mov
inc
xor
in
stos
(bad)
popa
cs
fwait
imul
inc
push
leave
push
loopne
mov
inc
stos
jne
or
cmp
cmp
aad
enter
loope
sub
lods
xor
pop
mov
loope
mov
loope
xor
xor
loop
push
and
and
mov
cmp
cmp
pop
mov
loop
inc
pop
mov
mov
pop
loop
pushf
nop
inc
mov
je
pop
mov
xchg
cmp
mov
shl
fimul
xor
loop
test
leave
push
in
loop
or
stos
adc
push
mov
xor
jecxz
xchg
jecxz
aad
ror
in
lods
xor
add
add
push
imul
in
jle
pop
mov
and
repnz
push
repnz
mov
in
mov
inc
cmp
lods
(bad)
or
push
xor
fnclex
sbb
mov
pop
(bad)
sbb
mov
cmp
mov
mov
pop
pop
adc
fld
jo
cmp
push
and
inc
sub
nop
js
sub
add
sbb
aas
cwde
sbb
and
repnz
fs
dec
inc
outs
cmp
das
add
dec
imul
mov
xor
cmps
xchg
mov
mov
inc
sub
ret
mov
jo
call
xchg
cli
lock
loopne
daa
adc
lea
push
adc
jle
mov
and
mov
inc
enter
aas
call
scas
in
dec
cmp
mov
add
adc
imul
sbb
xchg
lea
sbb
mov
test
or
add
jge
cmp
cmp
xor
daa
cmc
imul
mov
cmp
jae
sti
mov
in
add
push
mov
cmp
mov
or
fs
add
sahf
addr16
push
daa
jp
adc
test
sti
outs
les
jo
lea
sub
xchg
jnp
xor
lea
lods
jno
fidiv
adc
out
fild
jl
inc
fidivr
fs
dec
es
mov
dec
jbe
pop
xchg
pop
dec
mov
cli
inc
mov
movs
mov
or
xchg
jmp
adc
aas
jne
cmp
aaa
and
xor
xor
imul
cmp
sbb
pop
ret
(bad)
cld
add
dec
fs
cld
cmp
sbb
or
scas
and
out
or
adc
adc
mov
mov
ror
cmp
add
mov
adc
imul
repz
add
add
mov
push
xor
ss
pop
xchg
in
or
jp
out
inc
in
pop
int
xchg
cli
je
fnstcw
xor
xchg
movs
test
std
and
fadd
push
aam
inc
enter
or
inc
enter
and
xchg
movs
fisttp
es
mov
xchg
je
cs
inc
leave
pop
pop
push
clc
fild
imul
pop
xchg
xlat
jne
pop
sub
sbb
cmps
jbe
in
and
lea
in
rcl
test
fisttp
adc
ret
mov
dec
cmp
(bad)
sub
push
shl
sub
adc
ins
dec
jo
mov
push
inc
xchg
mov
xchg
bound
int3
or
sbb
mov
es
inc
imul
or
pop
xchg
aam
(bad)
nop
xchg
mov
in
cmp
(bad)
fs
popa
cmp
call
push
mov
push
dec
xchg
das
fs
and
sbb
add
clc
sbb
pop
test
and
cmp
inc
iret
xor
push
add
comiss
add
sub
and
pop
rol
inc
ficomp
or
test
adc
push
mov
xchg
stos
xchg
add
sub
pushf
mov
popa
and
adc
dec
lods
add
nop
add
pop
jmp
ins
mov
mov
arpl
add
ins
lock
arpl
movs
shl
(bad)
vorpd
retw
ja
inc
sub
and
stos
ror
add
inc
ds
or
jl
rcl
inc
mov
sbb
inc
call
inc
adc
add
sti
test
setle
(bad)
or
mov
or
nop
push
push
push
jge
push
inc
adc
dec
push
lahf
push
cmp
jg
push
adc
test
adc
or
pop
mov
ins
(bad)
add
loopne
push
sbb
pop
cwde
jno
ret
popa
sbb
or
rcr
pushf
mov
idiv
cmp
jne
mov
inc
cmp
pop
ss
fcomp
and
jle
xchg
loop
call
sub
dec
imul
add
adc
or
mov
or
add
jge
add
jne
pop
pusha
das
dec
jae
in
stos
test
in
cmps
jmp
push
rcr
nop
dec
mov
sti
jb
xor
in
add
ss
cmp
or
or
mov
mov
adc
push
adc
in
cwde
js
pusha
movs
and
aas
or
dec
inc
jecxz
test
popf
add
cmp
rcr
push
lock
iret
das
mov
loopne
adc
jmp
adc
mov
and
sub
clc
xlat
sbb
lea
sub
pop
inc
fnstenv
adc
test
cwde
imul
clc
cmp
into
dec
loopne
mov
sub
repz
mov
xchg
dec
mov
add
and
imul
pop
xchg
sub
add
ins
xchg
(bad)
push
movs
jnp
shl
inc
cmp
push
cmp
mov
pop
es
mov
test
add
mov
sub
mov
pop
mov
fs
shl
xor
pushf
je
jne
mov
sti
mov
xor
jno
and
repnz
es
fimul
inc
out
popa
cmp
es
pop
call
mov
dec
fst
push
ss
or
sbb
jle
fdivr
pushf
xor
inc
hlt
xchg
or
lock
pusha
adc
sub
xor
or
push
inc
sub
xor
ins
xlat
std
lods
mov
sub
icebp
test
xor
popf
enter
cmps
retf
(bad)
jmp
xlat
adc
sub
mov
fcmovbe
dec
sbb
popf
shr
or
shl
add
and
push
jge
(bad)
std
xlat
pop
add
cmp
jne
push
cmp
jne
adc
inc
fild
mov
or
ret
sar
shr
push
jge
inc
bound
rol
or
addr16
inc
popa
fmul
mov
xchg
xor
cmps
in
mov
or
les
jne
add
inc
adc
js
xchg
sbb
inc
iret
es
imul
add
adc
sub
gs
cmc
imul
add
stc
xor
sub
add
inc
push
repnz
add
or
imul
stc
and
sar
fadd
jnp
rol
jns
cmp
in
fadd
fsub
dec
push
fsubr
sub
(bad)
mov
mov
pop
or
jne
data16
cmp
fsub
scas
or
and
pop
test
cmp
jae
and
pusha
or
push
jge
push
clc
xor
and
mov
or
das
jmp
call
test
inc
push
in
jae
aam
cdq
inc
push
add
or
add
add
int3
jno
adc
adc
cmp
inc
leave
inc
icebp
inc
xor
sub
add
(bad)
and
ins
clc
cmp
and
dec
gs
add
adc
add
enter
or
(bad)
les
push
ss
rcr
add
mov
mov
popa
jno
and
ds
ret
ins
or
sub
push
and
cdq
push
add
inc
inc
mov
loope
add
fild
in
cmp
outs
aam
mov
add
ror
dec
or
call
mov
or
push
lea
bound
repnz
and
inc
dec
or
sub
or
jge
inc
ja
push
sub
int3
mov
test
enter
or
hlt
or
inc
jmp
mov
mov
mov
ins
or
push
sub
dec
mov
(bad)
and
mov
add
xor
inc
and
jl
mov
fisttp
cmps
or
jo
retf
and
inc
sub
dec
mov
mov
mov
mov
jp
ja
sub
ins
add
push
push
adc
ret
xchg
enter
enter
mov
xchg
clc
movs
nop
mov
push
fdivr
mov
aas
sbb
jg
inc
xchg
adc
and
outs
and
sbb
inc
popa
sbb
xchg
(bad)
loop
or
cdq
push
das
push
fild
sbb
sbb
add
fcmovb
adc
unpckhps
or
adc
add
adc
pop
adc
loope
out
mov
add
cmp
or
in
leave
out
js
out
inc
mov
xor
adc
push
xor
add
dec
dec
cs
mov
dec
or
out
mov
test
and
dec
nop
jno
ins
pop
enter
dec
xlat
sbb
sbb
scas
cmp
repz
xchg
xchg
or
stos
adc
add
add
jmp
aas
adc
mov
sbb
lock
cld
sar
push
mov
sub
imul
lahf
dec
push
and
addr16
xchg
inc
xor
push
cmps
sti
xchg
add
cmps
mov
rol
and
or
mov
out
mov
push
add
push
aas
push
enter
adc
ins
jae
inc
pop
les
clc
dec
ror
pop
mov
inc
pop
in
add
push
dec
or
xchg
sub
add
pop
cmps
imul
je
fsub
or
add
mov
adc
arpl
pop
sub
push
pop
pusha
stc
mov
daa
push
inc
lds
retf
adc
mov
jmp
test
cmp
xchg
cmp
pop
ret
dec
cmps
inc
xchg
or
dec
mov
sub
imul
adc
inc
add
pop
sbb
push
rol
mov
dec
sbb
inc
mov
xor
add
or
bound
fstp
test
mov
or
add
retf
scas
(bad)
sub
lds
adc
das
jb
pop
mov
and
loopne
mov
xchg
imul
xor
and
fsubr
int3
lea
and
add
pop
xor
dec
fisttp
ins
pop
and
and
or
ins
enter
xchg
lock
imul
into
out
adc
shl
test
jne
sub
jo
ret
dec
or
push
retf
xor
xor
rcr
or
in
(bad)
pop
movaps
add
xor
pop
pop
cdq
inc
cmps
nop
das
bound
sub
jb
dec
pop
cmps
je
add
cmp
or
xchg
sbb
pop
ret
popf
js
cdq
push
in
mov
inc
sub
js
inc
sub
add
rol
jmp
adc
cmp
fisttp
push
xor
pop
cld
lods
ds
push
jmp
(bad)
dec
mov
sub
mov
ficom
outs
pop
sbb
add
xor
into
and
and
pop
rcl
(bad)
sub
mov
lds
pop
pusha
ins
and
(bad)
xchg
movs
add
lods
rol
aas
leave
mov
sbb
xor
jl
iret
dec
scas
imul
sub
mov
repnz
dec
pop
push
scas
imul
pop
xchg
push
leave
cwde
cwde
add
jl
add
int3
or
push
add
mov
nop
das
je
cmc
mov
push
inc
inc
adc
movs
add
sub
add
lods
mov
in
dec
and
mov
pop
stos
mov
and
dec
jg
cmps
add
test
xchg
in
add
push
out
xor
mov
je
imul
jle
ret
ror
int
inc
add
push
adc
adc
mov
or
xchg
inc
icebp
add
sub
xor
adc
mov
cmp
bound
rol
sub
pop
dec
or
das
jns
jo
mov
push
pusha
push
ja
mov
rcl
xor
stc
push
mov
ss
add
push
leave
mov
jne
mov
cmp
mov
test
and
leave
ins
popa
test
imul
jge
jbe
or
or
call
ret
sub
inc
xor
push
dec
sbb
aad
xor
outs
fld
mov
pop
pop
mov
rcr
in
mov
adc
std
mov
cmp
cmp
mov
mov
or
dec
outs
aas
lds
lock
or
adc
xchg
push
fstp
jb
xchg
mov
or
pop
mov
add
add
out
adc
pop
dec
arpl
rcr
jle
imul
into
mov
fcom
add
xchg
lods
aad
les
mov
aad
ret
ror
fldenv
sbb
rol
push
push
add
icebp
mov
inc
into
inc
mov
jno
adc
push
add
movs
je
xor
push
fbstp
xchg
movs
mov
jmp
or
or
and
push
sahf
push
mov
sub
or
add
out
mov
loope
mov
xchg
xchg
leave
pop
ins
or
in
jnp
mov
loopne
sbb
test
call
fcomp
lea
xchg
add
popf
scas
inc
addr16
adc
push
add
fisub
mov
outs
clc
push
(bad)
cmp
jo
push
ja
inc
or
pop
jne
jo
mov
inc
gs
dec
retf
pop
sub
and
xchg
xchg
mov
mov
cmp
fadd
inc
in
push
test
test
call
cmp
xor
cmps
xor
outs
adc
adc
mov
push
jbe
jb
mov
jmp
xchg
inc
mov
mov
jge
seta
push
xchg
xchg
inc
ret
mov
mov
or
and
push
inc
aad
cmp
iret
and
xchg
ficom
call
adc
or
ja
or
daa
(bad)
lock
pushf
fnstsw
pop
jnp
add
test
aas
mov
lods
ss
pop
xlat
iret
jnp
fld
push
jle
and
sti
or
pop
outs
das
iret
push
xchg
xor
push
inc
call
or
(bad)
lods
rol
jge
or
dec
or
pop
rol
call
cmp
iret
push
pop
or
ds
add
or
pop
add
data16
add
pop
mov
neg
pop
push
cmovae
addr16
mov
pop
ds
icebp
jg
sub
loopne
cmps
dec
push
push
xor
sub
mov
and
test
push
mov
mov
addr16
mov
or
fiadd
out
fucomp
xor
or
and
pop
mov
cmp
push
lea
sbb
cwde
mov
call
ja
jge
fmul
ins
jo
sub
sub
cmp
add
jge
jnp
les
test
repnz
pop
add
bound
mov
mul
or
ret
test
adc
jg
shl
add
(bad)
jns
cmp
bound
(bad)
push
(bad)
push
fadd
shl
push
mov
mov
push
inc
fimul
stos
fist
jo
add
and
scas
mov
xor
add
mov
lods
xor
test
lods
std
lods
pop
and
fcomp
add
mov
mov
in
ret
dec
ficom
imul
jne
or
lods
or
ret
call
test
aas
(bad)
jae
and
sub
xchg
or
(bad)
loope
icebp
es
and
out
daa
add
or
das
or
je
jmp
not
xchg
or
or
je
popa
inc
adc
jns
push
je
adc
sub
pop
je
cmp
in
mov
and
pop
stos
adc
int
xchg
or
in
jb
and
jne
adc
leave
mov
inc
add
pop
rcl
jne
adc
jb
jae
pop
sub
ror
je
push
jmp
in
add
stc
data16
ins
je
and
jo
push
inc
aaa
sub
in
adc
cmp
push
js
mov
xchg
(bad)
sbb
in
push
cld
cmp
cmps
in
imul
push
or
adc
jp
pop
cmp
add
adc
scas
fisubr
push
mov
loop
sub
mov
inc
fist
stos
adc
repnz
pop
inc
mov
jge
jne
mov
lds
push
or
pop
inc
dec
repz
inc
xor
std
jae
(bad)
jne
xor
aaa
adc
push
jbe
cmp
sub
fdivr
in
add
push
test
push
jp
xor
mov
test
cmp
jne
call
sub
xchg
rcr
adc
inc
jne
sub
lock
lock
jne
retf
sbb
mov
pop
lods
jmp
in
fincstp
cmp
or
dec
dec
add
sub
ror
es
pop
outs
jb
ret
and
and
cmp
adc
sub
or
cmp
or
push
jns
and
ret
add
pop
arpl
mov
sub
lock
and
ret
mov
dec
add
mov
retf
stos
xor
cmp
test
mov
lock
test
sbb
cmp
pop
mov
cmp
and
mov
test
dec
mov
je
mov
inc
and
fidiv
movs
and
xchg
adc
pop
nop
inc
push
sbb
or
push
sbb
or
adc
or
sub
fs
dec
in
push
and
or
test
mov
cld
push
mov
push
or
stc
sub
ficom
mov
test
(bad)
inc
pop
adc
(bad)
fisub
lds
inc
dec
or
hlt
dec
popa
push
add
jno
sbb
inc
shl
inc
fwait
dec
test
add
push
ret
and
inc
call
xchg
shr
adc
mov
sub
dec
aad
xchg
sbb
adc
push
mov
mov
add
movs
outs
in
and
popa
shr
cmps
push
enter
add
add
jg
enter
retf
inc
mov
mov
(bad)
jecxz
mov
push
inc
inc
mov
and
sbb
adc
sbb
mov
push
pop
out
(bad)
mov
inc
push
pop
adc
sub
ret
cmp
pop
jne
test
aad
sbb
test
and
(bad)
xchg
or
mov
fs
jae
enter
aaa
sbb
mov
pop
mov
cwde
jge
adc
outs
js
mov
push
inc
mov
add
test
push
or
aad
sub
push
ins
mov
scas
dec
or
fild
inc
add
mov
rcr
pusha
or
pop
or
cmps
or
aas
or
fdivr
and
dec
lea
pop
pop
adc
jae
or
cmp
mov
inc
mov
adc
ss
test
inc
mov
call
pusha
sbb
jge
jl
xor
lds
pop
mov
fidiv
add
fild
push
ret
ret
daa
test
in
inc
pop
dec
lahf
and
lea
add
and
pusha
pop
jae
sub
adc
pop
shl
push
jo
xchg
dec
push
sub
sar
mov
fs
jo
add
add
sub
fs
pop
xchg
pushf
and
into
add
push
jns
into
pop
pop
push
or
out
add
enter
into
int3
cli
add
inc
call
retf
aad
sti
cmp
or
inc
test
cli
push
out
add
sub
les
pop
and
and
jo
add
daa
repnz
dec
sub
movaps
cmp
add
add
or
inc
in
dec
add
fldenv
leave
shr
xor
pusha
inc
popa
xchg
cld
nop
mov
sub
adc
enter
shr
les
add
shr
movs
jae
sub
mov
push
test
lahf
cmp
push
scas
sub
imul
leave
int3
cmp
sub
shr
jmp
aam
sub
shr
ror
add
js
cmps
es
js
imul
je
inc
add
cmp
in
call
imul
pop
aas
and
dec
scas
sub
push
imul
push
enter
imul
and
xchg
cmp
aam
jnp
imul
(bad)
enter
pop
inc
ins
push
jp
idiv
imul
test
shr
imul
shr
aad
and
(bad)
imul
push
imul
repz
imul
out
imul
push
add
aad
leave
pop
and
sub
dec
sub
test
adc
adc
aad
push
push
fsubr
retf
leave
fsubr
retf
aam
inc
imul
inc
fcmovne
nop
enter
sbb
into
loopne
dec
sbb
dec
dec
jb
nop
fcmovne
pushf
mov
dec
aam
xchg
icebp
(bad)
pusha
int3
push
add
nop
mov
sbb
ins
sahf
pushf
inc
(bad)
call
movs
and
cmps
and
(bad)
pop
les
cmp
loope
iret
int3
int
cmps
in
xchg
pushf
mov
in
and
fisub
jns
jb
fmulp
sub
dec
pop
ror
adc
or
sbb
retf
dec
xchg
inc
jb
inc
loopne
xchg
xchg
mov
pushf
in
leave
iret
loopne
loope
cmc
add
in
enter
(bad)
fdivr
inc
jb
xlat
cmp
cmp
aam
outs
inc
push
cmp
inc
xlat
sub
mov
add
add
mov
mov
sub
lock
cmp
or
inc
pop
and
jp
sub
fld
sub
dec
push
sbb
jg
and
push
and
imul
xchg
and
and
push
pop
cmp
cmp
cdq
jns
inc
pusha
adc
cs
xlat
outs
pop
mov
jmp
mov
add
popf
(bad)
inc
in
pop
xor
rsqrtps
scas
sub
movs
push
and
in
sbb
clc
mov
pop
add
inc
aam
imul
hlt
in
dec
pop
leave
add
or
jo
jbe
in
imul
pop
test
cdq
frstor
inc
repnz
loopne
xchg
in
imul
stos
mov
or
repnz
in
es
sbb
fwait
loopne
std
in
jmp
adc
xchg
daa
out
mov
xor
add
or
mov
sbb
cmp
jne
das
add
popa
xchg
jno
test
mov
mov
dec
add
cmps
in
nop
add
cmp
jns
mov
out
jecxz
in
shr
sti
cmp
clc
out
fs
test
push
repnz
out
dec
or
pop
in
xchg
es
adc
pop
repnz
in
addr16
stos
pop
shl
or
mov
push
pop
imul
add
pop
and
adc
push
xchg
pop
mov
push
ret
push
int
lock
fsubr
or
fs
cmp
sub
je
addr16
leave
retf
push
icebp
add
mov
adc
jns
das
fldcw
out
jp
jp
jns
das
test
sbb
leave
dec
push
leave
dec
lock
push
pop
jo
cmp
dec
adc
inc
stos
rcl
nop
out
repnz
(bad)
(bad)
test
scas
jns
cmp
xor
mov
mov
cmp
fsubrp
push
ins
push
add
daa
dec
cwde
hlt
pushf
sub
add
hlt
pop
mov
jns
push
in
inc
das
pop
ins
mov
mov
cmp
fs
push
jl
repz
or
dec
dec
xor
pushf
hlt
rcr
push
dec
sahf
idiv
es
repz
test
sbb
add
cmp
sub
pusha
xchg
push
pop
imul
mov
retf
(bad)
ins
ss
add
push
aam
ds
adc
push
test
xor
imul
imul
imul
cmp
push
jecxz
push
rcl
add
cmps
push
push
cmp
test
outs
pop
pop
or
sti
iret
fstp
mov
js
cmp
mov
clc
mov
int3
clc
or
in
pushf
or
lock
push
and
dec
lock
das
stc
mov
and
cmp
or
je
dec
sbb
mov
je
outs
pop
or
sub
pop
out
shr
push
(bad)
nop
aam
adc
data16
or
gs
mov
neg
add
xor
xor
pushf
push
mov
test
or
leave
fist
inc
add
push
nop
ds
jno
rol
push
test
or
sbb
jp
pop
add
ja
stos
push
repnz
adc
sahf
imul
add
das
sbb
add
xchg
cld
stc
add
inc
or
jle
sub
xchg
in
and
add
mov
jae
jno
or
sub
or
adc
jle
sbb
adc
jp
sbb
rcr
pusha
xor
or
in
inc
ja
enter
push
arpl
adc
sub
cwde
ss
pusha
xor
dec
push
loopne
and
inc
pop
outs
test
lea
mov
sbb
add
pop
add
push
sbb
popa
bndldx
push
or
mov
push
pop
adc
and
shl
lea
and
jb
clc
aam
jae
cmp
sbb
xor
add
xor
or
mov
and
cmp
xor
adc
loope
fdiv
pop
setno
shl
ret
and
verr
push
sahf
fsub
push
into
ja
aaa
adc
fld
xlat
aaa
adc
xor
xor
and
clc
out
xor
push
xor
or
dec
jmp
cmp
bound
aam
call
jno
shl
sbb
ret
sbb
jmp
ret
mov
vmovaps
xor
mov
push
jae
std
and
nop
add
rcr
shl
loopne
cmps
xchg
xchg
push
add
and
cmp
nop
xor
mov
shr
dec
loopne
or
sub
sbb
xchg
pusha
mov
test
shr
xchg
xchg
out
sbb
fistp
fwait
(bad)
and
mov
fadd
ins
xor
sbb
dec
sbb
ins
aad
(bad)
mul
adc
add
add
sbb
cwde
pop
stos
fadd
cmc
mov
cmp
shl
adc
or
mov
loop
pop
sbb
mov
sub
les
jmp
imul
jecxz
or
call
or
cmp
and
shl
out
cmps
pop
cwde
sub
fst
and
or
lds
pusha
jge
dec
dec
nop
les
lock
scas
sbb
jnp
dec
inc
adc
mov
xchg
mov
mov
sub
xchg
jg
ret
pop
ins
add
pusha
mov
fs
sbb
cwde
aaa
retf
add
sbb
sub
cmps
(bad)
add
imul
sub
dec
cmp
imul
rcr
pop
dec
call
ror
pop
add
push
cmps
mov
pusha
sbb
xor
shl
pop
or
and
pop
in
sbb
es
sub
and
int3
in
dec
sbb
mov
adc
retf
xchg
into
into
sbb
xor
add
ret
cmp
ja
jmp
or
dec
retf
sar
adc
or
fisttp
push
jecxz
jecxz
je
rcr
xlat
pop
jns
jmp
add
sbb
(bad)
mov
mov
jbe
call
ror
push
ss
sub
xor
sbb
mov
or
and
pop
repnz
enter
ud2
or
pusha
sbb
leave
enter
and
ja
leave
enter
add
and
xchg
out
ror
loopne
lock
fistp
mov
ins
shl
sbb
mov
jecxz
sbb
add
cwde
lds
dec
add
pop
inc
push
jge
lea
push
jb
sub
sti
xor
pop
mov
and
push
sbb
es
data16
add
enter
fsubr
hlt
push
or
sbb
push
add
sub
mov
push
add
imul
cmp
inc
or
ret
cmp
inc
dec
jne
cmp
movs
add
push
imul
push
and
xchg
nop
test
loopne
xor
push
add
cmps
mov
imul
cld
jns
cdq
sbb
xor
or
and
div
push
adc
mov
add
mov
ds
and
out
call
sub
jmp
loope
rol
adc
jmp
push
push
add
mov
jne
mov
and
retf
and
mov
mov
or
daa
mov
mov
iret
xchg
rol
test
cmps
sub
xor
xor
lods
je
hlt
aaa
lods
(bad)
add
xor
mov
sbb
xchg
push
push
cli
fcmovnb
rcr
add
cdq
and
and
jns
add
ss
jo
out
dec
or
cmps
pusha
dec
aam
adc
mov
inc
mov
push
jb
sbb
sbb
dec
adc
inc
add
gs
add
(bad)
test
xchg
dec
fmul
(bad)
imul
sbb
add
data16
adc
jno
inc
xor
adc
pop
xor
fadd
add
not
inc
fisubr
xchg
and
cmovo
jmp
sub
ins
cwde
and
imul
xchg
cmovo
push
xchg
or
imul
sub
mov
cmps
pushf
sbb
inc
or
dec
and
dec
jno
mov
sub
xlat
xchg
xchg
inc
adc
pop
sar
mov
jb
xor
push
push
pcmpgtb
inc
adc
xor
or
or
retf
nop
pop
pop
inc
push
push
pop
dec
test
imul
cld
in
dec
daa
mov
int3
add
fadd
repz
add
inc
or
cmp
imul
enter
mov
jle
push
leave
xchg
mov
jmp
js
loopne
shl
xor
or
inc
push
mov
and
pop
add
add
and
call
add
and
push
adc
gs
cmc
ins
sbb
imul
xor
pop
and
inc
pop
mov
xorps
jmp
bswap
adc
xchg
enter
inc
cmp
enter
cmp
(bad)
dec
sti
inc
ins
dec
pop
les
loope
or
cmp
inc
push
jbe
mov
mov
xchg
in
sub
loope
sub
pop
mov
sar
sub
out
test
add
pop
mov
mov
and
imul
inc
xor
and
or
mov
push
mov
add
aaa
(bad)
and
adc
(bad)
cld
call
test
and
test
outs
add
adc
cdq
clc
ins
loopne
mov
and
push
addr16
pop
clc
pop
jl
(bad)
arpl
mov
fdiv
outs
fsubr
and
mov
push
fild
arpl
adc
xchg
pop
add
pusha
(bad)
jl
mov
xchg
out
and
cdq
mov
enter
lock
xchg
adc
lods
and
mov
add
jecxz
add
sbb
and
cmp
dec
xchg
ss
aaa
pushf
xchg
pop
mov
cs
pop
adc
cmc
neg
add
push
sbb
inc
clc
out
imul
cld
add
cmp
and
stos
inc
push
loop
inc
and
and
push
push
sbb
push
adc
ror
retf
dec
int
xor
outs
add
(bad)
push
ins
shl
and
add
add
into
xchg
or
cmp
cmp
add
and
and
push
and
mov
pop
xlat
jb
stos
test
fild
pop
mov
and
push
es
shl
ja
xchg
loope
and
sbb
enter
push
ins
test
in
pop
inc
fnsave
mov
pop
add
adc
jp
mov
inc
test
adc
dec
loopne
ins
es
call
movs
push
sub
loopne
je
push
sub
js
inc
and
clc
cmp
mov
adc
ret
inc
shl
ret
inc
pop
xor
(bad)
fsub
or
dec
dec
jge
xor
lea
test
push
push
int
aad
pop
dec
xchg
mov
sti
out
mov
push
clc
adc
ret
push
mov
test
out
add
mov
or
add
cmp
adc
loopne
push
aas
push
and
clc
sub
push
in
cmp
gs
lock
hlt
and
mov
add
ror
xor
xchg
add
xchg
inc
cld
dec
add
and
cmp
inc
push
or
gs
and
sub
xchg
add
and
xor
sbb
dec
push
inc
sar
xor
push
lds
pop
ret
sub
out
fwait
daa
push
outs
mov
idiv
dec
arpl
dec
xor
fidivr
adc
dec
or
outs
pop
call
push
push
adc
xor
pop
dec
popa
cmp
aaa
ins
add
fcmovu
aas
jmp
and
ja
cmp
inc
pop
xchg
or
aaa
xlat
dec
mov
jbe
dec
outs
aaa
mov
ja
retf
cmp
in
pop
fwait
add
push
cmp
sub
aas
cld
push
mov
add
xchg
iret
cmp
push
add
cdq
mov
add
aad
xor
jg
pop
popa
or
sbb
xor
ret
dec
inc
arpl
ret
jae
adc
inc
inc
into
mov
or
sub
xor
jle
inc
call
xor
cmp
je
inc
mov
ds
push
mov
adc
sbb
adc
xchg
pop
mov
inc
mov
loopne
dec
adc
ret
shr
inc
jl
xchg
and
add
pop
xchg
ins
ins
jge
pop
and
in
add
cmp
cdq
sbb
and
in
test
lods
or
add
xchg
mov
aas
fld
test
adc
in
(bad)
sub
les
dec
sbb
lahf
rcr
dec
add
cmps
pop
imul
imul
es
fstp
loop
xchg
enter
shr
aas
and
xchg
sbb
or
pop
lock
mov
int
(bad)
xor
call
and
and
mov
nop
mov
sub
inc
or
xor
jbe
popf
cld
and
scas
push
push
add
dec
lahf
inc
sbb
mov
aaa
dec
push
mov
pushf
ins
test
jo
inc
ret
iret
ins
mov
fbstp
pop
push
sbb
dec
or
outs
sub
cs
sbb
in
adc
cdq
cmc
sbb
lods
xchg
adc
xor
sub
je
(bad)
jp
ja
sbb
xchg
pop
dec
add
cwde
into
mov
mov
adc
and
sbb
sbb
or
mov
sbb
push
shl
or
jo
lea
hlt
je
(bad)
in
in
xor
add
std
call
and
test
hlt
cmps
dec
inc
or
push
sub
sbb
sub
fidiv
jo
pop
dec
rol
adc
ins
je
rcl
pop
sbb
cmps
lods
add
cs
addr16
pusha
stos
mov
inc
or
xor
jb
aad
lds
pop
fadd
add
imul
cmc
shl
mov
(bad)
into
scas
fdivr
adc
dec
jmp
leave
in
clc
adc
cmp
or
aas
dec
cwde
pop
jo
fsubr
mov
loope
(bad)
rcl
push
rol
push
or
jge
jge
imul
int3
fcomi
push
ins
mov
sub
dec
les
inc
inc
(bad)
jno
dec
int3
fsub
out
(bad)
rol
dec
in
(bad)
fcom
nop
scas
pop
hlt
dec
pusha
and
mov
and
or
or
retf
stos
add
stos
stc
(bad)
outs
and
pop
out
or
adc
loopne
add
inc
sub
retf
rcl
xlat
or
xlat
adc
repnz
xchg
inc
dec
imul
daa
nop
add
les
dec
popa
adc
shl
in
outs
push
and
loopne
dec
mov
sub
xchg
pop
or
arpl
je
pop
jb
and
mov
fs
repnz
dec
cs
leave
and
mov
fdivr
dec
cs
in
es
js
mov
in
adc
pop
jb
and
mov
and
sub
sbb
cmps
pop
rcr
dec
add
dec
and
sub
in
cdq
or
push
sbb
bnd
or
inc
add
adc
mov
adc
aam
mov
push
pop
dec
and
fimul
ins
imul
ss
bound
mov
rol
xchg
push
pop
jno
leave
adc
adc
add
out
dec
jp
pop
lods
je
lahf
jbe
inc
lea
push
jb
adc
stos
movs
leave
jecxz
or
pop
inc
add
or
js
mov
add
out
pop
mov
imul
cmps
xchg
(bad)
mov
pusha
inc
imul
jae
mov
pop
ins
ja
shl
xor
outs
pop
ins
cmp
push
sbb
jne
iret
or
mov
mov
add
retf
sar
jg
xor
or
rcl
je
mov
cmova
rcr
fs
push
ins
jnp
imul
daa
jne
out
pop
or
ja
arpl
fwait
and
lahf
push
js
jp
pop
out
je
cmps
or
push
add
loopne
inc
jns
popf
dec
arpl
xchg
pop
pop
in
pop
nop
std
adc
popa
add
push
xlat
fs
test
push
adc
ins
repz
popa
sub
and
push
adc
add
push
cmp
and
pop
pop
sbb
mov
gs
push
add
jo
jecxz
add
out
lea
aas
adc
inc
or
int
(bad)
jge
test
xchg
dec
mov
data16
jo
push
sub
ds
lods
and
mov
dec
mov
adc
xchg
shr
add
sub
fidivr
pop
cmp
xchg
test
jae
cmp
inc
sub
xchg
je
mov
and
pop
sub
les
mov
mov
and
ins
dec
clc
xor
lock
sbb
out
rcr
sbb
cmp
adc
or
inc
cs
and
push
inc
or
push
mov
jle
lds
pop
add
fst
idiv
sbb
xchg
shr
in
sbb
pop
sub
dec
inc
pop
pop
imul
add
mov
pop
rcl
bound
outs
or
inc
enter
das
pop
xor
dec
xlat
dec
add
xchg
xor
jns
add
daa
inc
pop
jnp
cmp
sbb
ins
xchg
movs
pop
test
dec
cmp
repnz
in
lock
sub
mov
mov
iret
ds
sbb
push
mov
dec
nop
sti
pop
add
dec
add
in
cmp
sbb
push
add
sub
adc
(bad)
push
stc
mov
int
js
cmovl
not
in
je
sub
push
lahf
out
or
or
dec
jl
push
test
in
fsubr
je
mov
stos
mov
pop
nop
add
sbb
add
push
add
push
int3
push
xchg
call
aad
and
xor
test
pusha
hlt
add
enter
pop
mov
pop
enter
adc
inc
push
push
cmp
enter
add
dec
nop
add
dec
pusha
ins
add
sbb
push
cmp
xor
cmp
(bad)
dec
adc
fiadd
inc
(bad)
sub
cdq
fs
and
and
mov
lds
jmp
cmps
or
sub
inc
pop
aaa
mov
les
or
outs
inc
inc
pop
xor
scas
xor
mov
and
cmp
cmp
xor
xor
or
push
jno
add
pusha
sbb
sbb
dec
adc
push
mov
aam
(bad)
add
outs
inc
xchg
sub
js
xor
cmp
push
shr
jl
adc
dec
jecxz
int3
je
cwde
pop
cwde
dec
jecxz
and
xchg
test
mov
enter
into
push
jo
or
fdivr
sub
lock
fdivr
inc
loop
xchg
xor
jmp
or
jno
xor
fiadd
mov
xor
sub
les
push
rol
xchg
pop
mov
add
lea
test
and
jae
pop
sbb
push
les
popf
sar
inc
sub
jno
pop
or
push
xor
xchg
mov
jae
stos
pusha
loop
imul
and
das
or
xchg
or
pop
out
cmp
sub
cmp
adc
fcom
jnp
mov
add
and
ror
add
mov
lea
inc
push
je
ins
and
cmp
and
add
xor
mov
or
sub
lock
push
aam
mov
mov
xor
sbb
mov
adc
adc
fmul
sub
mov
pop
mov
and
bts
loopne
and
xchg
das
ret
clc
out
aaa
or
pusha
pop
int3
pop
add
sbb
xor
aam
dec
mov
cld
xchg
shl
fisttp
inc
lock
out
test
and
lds
push
mov
les
outs
leave
sahf
inc
mov
mov
cmp
hlt
push
push
dec
mov
xor
adc
adc
movs
lock
dec
or
stos
(bad)
retf
shl
sub
imul
add
mov
cli
mov
xor
cmp
mov
push
bound
pop
outs
aas
dec
xchg
add
mov
add
push
shl
es
sub
and
cmps
outs
popa
adc
and
or
and
fld
push
mov
sub
push
call
(bad)
cmp
pop
dec
arpl
push
jmp
lahf
and
push
pop
fstp
fs
sub
std
adc
dec
shl
cmp
jns
push
cwde
add
repnz
sub
xchg
dec
loopne
mov
xor
inc
cdq
dec
or
inc
retf
sbb
sub
or
or
(bad)
push
mov
rcr
test
test
inc
(bad)
cmc
xor
and
add
inc
sub
ret
and
and
jmp
mov
sahf
test
retf
aam
sub
outs
loopne
cmp
add
mov
les
cmp
cmps
cmp
jp
and
pop
cmps
inc
xchg
jae
shl
pop
inc
pusha
shl
inc
adc
les
inc
stos
push
add
call
fisttp
mul
xlat
jl
dec
imul
cs
adc
test
inc
inc
mov
out
pop
sub
cmps
and
or
and
cmp
test
or
pushf
cmp
and
leave
and
imul
inc
test
or
ret
cmp
inc
clc
andps
dec
push
ds
mov
mov
sub
and
push
jne
enter
cmp
stc
cmp
dec
add
outs
or
jl
jle
(bad)
out
sbb
out
shl
dec
xchg
push
imul
rol
and
test
mov
out
in
mov
(bad)
imul
or
sub
sahf
jb
dec
dec
mov
jns
in
clc
aas
test
and
add
imul
inc
add
adc
add
loope
test
push
clc
cmp
fmul
sub
or
lahf
and
dec
and
into
or
mov
xchg
lods
repnz
fldenv
jecxz
push
sub
loope
pop
es
inc
scas
add
sahf
sbb
fsub
mov
loop
mov
pop
xor
add
fs
dec
add
push
icebp
adc
mov
adc
aam
stc
mov
and
sbb
inc
daa
das
pop
mov
(bad)
cld
ins
(bad)
mov
ror
retf
int3
pop
loop
adc
inc
outs
sub
or
push
das
push
sbb
add
and
xor
hlt
hlt
mov
pop
pop
mov
add
mov
mov
pushf
dec
xor
xchg
xchg
dec
rol
pop
rcr
jmp
mov
in
mov
sbb
fidiv
pop
dec
or
mov
imul
mov
add
mov
mov
push
dec
dec
add
sub
jae
mov
movs
dec
pop
into
mov
xor
lods
cmp
push
xchg
mov
stos
jb
in
fscale
cli
fidiv
js
mov
das
jne
cld
stos
imul
or
jp
aaa
dec
push
xchg
pop
dec
lods
push
lods
scas
sbb
arpl
test
pop
sbb
jb
xchg
mov
fsub
xchg
out
xor
sbb
xor
das
imul
inc
jge
cmp
push
dec
ror
xchg
fmul
mov
enter
or
and
mov
arpl
lods
or
push
lea
or
adc
adc
lea
aaa
jne
inc
xor
pop
test
movs
add
addr16
mov
push
xchg
adc
fiadd
movs
xchg
sbb
jmp
jecxz
dec
or
or
push
cmps
jo
push
dec
mov
xor
mov
cmps
sub
mov
mov
je
pop
dec
push
out
stos
jae
jb
push
xor
push
add
push
mov
push
xor
xor
sbb
sbb
adc
mov
imul
cwde
pop
add
pusha
adc
nop
push
add
mov
or
xchg
ds
ins
xchg
movs
and
scas
push
and
adc
cmp
mov
adc
mov
ret
imul
pop
cmps
or
mov
sub
push
loopne
mov
daa
cmp
jo
sub
pop
int3
ret
sti
add
sub
dec
pop
scas
loopne
add
pop
sub
push
or
fbld
push
inc
fs
mov
daa
xor
movs
mov
inc
sar
jb
outs
daa
pop
mov
ja
adc
lahf
jnp
imul
stos
mov
aaa
add
das
and
mov
retf
ror
push
dec
dec
push
fnstenv
and
dec
push
mov
push
rol
cwde
sbb
add
cli
pusha
std
test
or
sub
push
add
sbb
mov
and
daa
shl
mov
add
add
aad
mov
sbb
sub
jae
je
fadd
je
push
fcmovbe
add
jo
inc
outs
fwait
xor
loope
mov
xor
cmc
das
shl
(bad)
fdivrp
push
loopne
push
add
or
sbb
adc
adc
adc
arpl
push
ins
jne
pop
sahf
loope
call
xchg
push
bound
les
mov
fistp
bound
mov
push
sub
push
inc
push
or
addr16
sub
push
dec
fst
or
idiv
add
push
aas
int3
push
push
and
ins
inc
mov
and
lea
inc
xor
mov
pop
aad
xor
add
push
or
cmp
das
je
adc
sub
out
adc
or
daa
lock
or
push
xor
adc
xchg
mov
sub
push
das
push
dec
cmps
lock
push
nop
repz
pop
ja
push
ins
xor
adc
outs
loopne
push
out
xor
fcom
nop
fnstenv
in
add
mov
dec
es
pop
dec
pusha
or
sahf
and
inc
dec
jge
xor
xchg
cmp
inc
xchg
inc
cmps
push
or
imul
sbb
inc
push
push
jne
add
shl
(bad)
daa
gs
out
sbb
or
and
adc
jae
adc
push
fwait
mov
sbb
mov
dec
inc
xor
loope
inc
mov
jne
sbb
adc
imul
les
lahf
inc
mov
aas
enter
cwde
fstp
fsub
or
inc
and
dec
imul
les
push
mov
or
jmp
aam
inc
pop
inc
xchg
nop
dec
dec
push
and
dec
jnp
sub
lea
add
adc
stos
mov
out
adc
jle
and
jbe
inc
pusha
jno
mov
sub
mov
push
das
pop
call
mov
mov
jno
push
clc
sub
adc
xor
inc
push
test
out
data16
or
adc
out
or
adc
push
and
inc
fs
jmp
xchg
xor
outs
jno
xchg
rol
push
div
jae
or
mov
dec
call
lods
test
add
fcmovnbe
add
in
repnz
clc
rcl
out
shl
clc
push
sub
push
mov
fild
outs
aas
rcr
pop
add
sub
(bad)
or
add
add
dec
jo
xor
pop
xchg
mov
sbb
inc
test
or
(bad)
xor
push
or
hlt
aaa
mov
mov
mov
dec
jo
mov
push
push
lea
cdq
pop
enter
xchg
adc
cmp
xor
adc
push
sbb
add
push
test
mov
(bad)
push
sti
and
ret
add
xchg
das
mov
mov
or
sti
sub
and
push
pop
outs
sbb
xchg
pop
xchg
clc
add
out
mov
pop
or
faddp
mov
pop
hlt
xchg
ror
in
out
push
mov
das
pop
nop
cmp
ja
pop
lock
(bad)
(bad)
jmp
bound
bound
jnp
outs
(bad)
test
call
push
and
pop
dec
adc
mov
outs
cmp
hlt
jbe
add
mov
mov
add
cmp
push
sbb
pop
hlt
and
outs
cmp
pop
dec
add
mov
cwde
xlat
addr16
xor
inc
scas
xor
aad
mov
adc
and
adc
popa
pop
sub
je
push
xchg
pop
sbb
sub
cmp
std
and
(bad)
cmc
add
dec
(bad)
fdiv
out
xor
mov
ins
mov
or
je
or
xchg
adc
mov
out
push
or
iret
pop
xor
add
inc
and
xchg
push
(bad)
popf
es
aas
lahf
lods
rol
das
das
nop
test
pop
jmp
push
xchg
push
fs
mov
popf
sbb
fsub
adc
jle
dec
jne
adc
add
push
add
ss
push
push
or
daa
pop
sbb
sub
or
xor
fsub
aaa
push
mov
adc
xchg
lock
jno
fdiv
rcl
adc
cmp
mov
fdivr
cvtpi2ps
cs
and
retf
jp
gs
cmp
arpl
add
xchg
inc
call
outs
add
add
xor
cmps
pusha
cmps
xor
pop
add
adc
cmp
pop
and
sub
out
pusha
sahf
mul
xchg
test
out
jg
mov
jmp
pop
push
pusha
outs
pop
sbb
pop
movs
add
pop
dec
pop
push
push
sbb
push
dec
fisub
push
xchg
dec
je
sub
add
and
xchg
jl
pop
xor
pusha
pop
inc
pop
popa
call
push
test
pop
pop
in
leave
adc
jb
mov
in
xchg
pop
sub
push
ins
fldcw
mov
jbe
add
push
push
loope
(bad)
jl
repz
pop
pop
jmp
and
out
push
sub
repnz
mov
aaa
add
pusha
cs
in
push
aaa
jo
in
mov
nop
sub
in
clc
mov
push
int3
aam
mov
fisubr
mov
es
pusha
sub
lock
xor
call
(bad)
ins
push
mov
mov
jae
mov
mov
ja
pop
std
ins
mov
fmul
pop
add
sub
cmp
sub
add
inc
xor
cs
dec
pusha
mov
mov
test
jnp
pop
jmp
mov
or
scas
repnz
rcr
adc
mov
jae
sub
and
sub
ins
xor
in
mov
mov
jb
sbb
bound
bound
inc
push
xor
(bad)
adc
pushf
mov
pop
in
stos
xor
xor
dec
shr
pop
packssdw
mov
and
jmp
inc
xor
(bad)
or
add
push
inc
ja
cmp
push
retf
aaa
cmp
xchg
or
arpl
adc
fiadd
xor
paddusw
ror
outs
inc
movs
test
dec
xchg
gs
lahf
daa
test
xlat
adc
push
shl
fidiv
jecxz
push
dec
pop
inc
mov
scas
imul
mov
add
cmp
jo
mov
mov
push
inc
and
call
cmps
sti
inc
into
popa
or
mov
repnz
add
push
fs
mov
sub
adc
inc
retf
shl
jmp
outs
mov
aas
ja
cwde
cmp
arpl
adc
gs
pop
mov
mov
sti
cwde
test
add
mov
data16
sbb
ror
cmp
dec
cmp
ja
inc
xchg
outs
dec
add
dec
sub
mov
cwde
sbb
and
pop
xlat
gs
(bad)
in
inc
push
and
sbb
or
or
aad
pop
dec
adc
mov
addr16
push
jb
cmp
add
xchg
sbb
push
addr16
addr16
inc
and
int
sub
pop
ja
mov
push
or
push
add
pop
xor
test
push
push
xor
push
cli
(bad)
jmp
ss
xchg
cwde
sbb
pusha
imul
shl
aam
leave
adc
push
sub
xor
inc
clc
fimul
data16
gs
aam
cmc
dec
mov
dec
or
xor
dec
pop
add
or
aas
stc
add
fwait
imul
pusha
push
push
push
mov
xchg
adc
call
mov
mov
sub
pop
rcr
adc
pop
jno
in
and
dec
mov
aam
push
xchg
xor
test
in
fs
adc
cld
mov
cld
aaa
cmc
pop
mov
in
in
pushf
inc
sbb
pop
dec
jo
gs
aaa
and
add
inc
sbb
pop
outs
retf
and
push
sub
stos
pop
jnp
mov
add
push
xor
pop
cmp
xchg
mov
lahf
push
enter
ins
pop
ins
daa
pop
sbb
adc
cld
cld
jmp
clc
(bad)
out
sbb
js
gs
jb
xchg
dec
mov
fadd
in
push
xor
xor
popa
mul
ret
and
add
clc
pop
clc
or
jmp
and
out
mov
sub
nop
sbb
aaa
outs
and
adc
push
cld
mov
add
cld
ins
outs
aas
adc
daa
rcl
jae
sar
jmp
jb
addr16
mov
js
pop
push
push
jmp
ins
mov
cs
push
add
outs
sbb
dec
enter
xor
outs
je
enter
movs
icebp
mov
mov
adc
or
pop
and
(bad)
outs
push
push
daa
lea
inc
push
add
adc
xchg
and
lahf
ret
nop
das
ins
jo
jo
pop
mov
outs
push
popaw
test
sub
jp
pop
ror
call
out
mov
imul
jbe
dec
test
mov
cmp
xchg
sbb
sub
inc
int
mov
in
dec
outs
and
sbb
into
pop
rol
cmp
adc
mov
and
dec
or
xchg
(bad)
sub
push
add
test
fsubr
xor
cmp
sbb
xchg
dec
and
adc
sbb
je
jbe
ins
push
xor
mov
test
mov
or
push
sbb
pusha
xor
sub
push
cld
sahf
mov
or
pusha
mov
inc
in
xor
pusha
imul
and
dec
jnp
cmp
adc
fidiv
leave
pop
jns
xchg
push
cld
push
movs
mov
mov
ins
das
(bad)
and
mov
xor
rcr
mov
fsub
sbb
aam
sub
ret
sub
loop
cmp
jne
xchg
or
pop
scas
sbb
xlat
pop
sar
into
dec
in
sbb
xchg
sbb
stos
or
repnz
xor
sbb
rcl
or
jo
fadd
test
adc
cwde
dec
loope
mov
in
(bad)
xor
int3
sub
push
in
or
add
test
xchg
sbb
ins
adc
or
mov
or
mov
or
mov
and
dec
loope
sbb
sub
inc
pushf
mov
push
cmp
cmp
mov
in
cmp
xor
mov
enter
fs
push
enter
add
push
push
jmp
xchg
call
pop
inc
xchg
es
jmp
test
cwde
push
inc
push
pop
push
das
push
rcl
cld
(bad)
je
in
shl
push
mov
jg
loope
rcr
xor
mov
ret
call
cdq
imul
inc
xor
and
add
cdq
add
pop
mov
jne
cwde
jbe
xchg
add
cs
push
loope
imul
push
cld
shl
push
fiadd
xchg
pop
hlt
in
std
jo
and
fisub
and
movs
inc
lock
lock
push
inc
add
nop
aas
and
test
fucom
adc
add
pop
test
inc
xor
ss
ins
push
data16
leave
push
dec
fidiv
sbb
push
bound
jge
mov
fld
pop
xor
dec
mov
and
pop
fiadd
and
xor
cmp
add
add
mov
xchg
daa
pop
in
jo
xchg
mov
sub
cwde
jle
hlt
mov
mov
test
loopne
xor
repnz
fmul
leave
xchg
fadd
and
add
shl
mov
ins
ror
repz
xor
scas
jbe
in
jl
aam
and
inc
aam
out
nop
pushw
rcl
mov
call
les
cmp
or
mov
pop
mov
jmp
and
adc
adc
or
lods
fisub
jp
mov
ss
mov
ins
dec
outs
add
fsubr
and
and
(bad)
cld
cmps
push
mov
movs
dec
mov
push
int3
push
pop
not
mov
enter
mov
repnz
retf
sbb
and
rol
ficomp
inc
mov
xchg
or
test
adc
inc
xchg
mov
mov
cmps
sub
int
xor
push
sbb
push
adc
push
movs
hlt
mov
bound
in
push
(bad)
mov
pop
dec
movs
mov
sahf
test
sar
inc
sub
push
mov
dec
test
add
or
mov
nop
mov
rcl
push
dec
add
cld
fs
or
cwde
inc
jns
pushf
(bad)
xchg
sbb
test
lods
push
jo
dec
rcr
nop
sub
stos
adc
adc
xchg
jmp
dec
pop
out
in
iret
inc
sbb
push
loopne
(bad)
loopne
sub
and
xchg
outs
retf
nop
pop
leave
fcom
sub
mov
rol
test
mov
mov
mov
dec
mov
je
sti
je
fist
dec
aam
cmp
and
nop
mov
cmp
outs
leave
dec
leave
xchg
adc
je
ins
dec
mov
mov
iret
repz
test
mov
xor
mov
xor
adc
dec
pusha
pusha
mov
fs
nop
xchg
pop
pop
movs
sbb
pop
adc
xchg
push
push
jb
xchg
std
fdiv
test
(bad)
push
push
dec
lds
into
jae
fwait
mov
mov
and
sub
stos
lahf
add
adc
and
(bad)
mov
sub
xor
lahf
sub
mov
add
popf
mov
xchg
or
push
loop
ret
or
xor
jns
push
add
shr
fisub
xchg
xor
dec
mov
dec
xchg
sbb
mov
xor
jbe
sub
ror
in
not
nop
retf
adc
xchg
inc
jb
mov
or
dec
outs
arpl
and
je
test
xchg
je
mov
in
jne
js
jb
xchg
add
add
xor
mov
pop
push
cmp
lds
and
or
jecxz
or
ins
jae
call
push
xchg
inc
rcr
lock
hlt
std
dec
sub
cwde
fwait
pushf
nop
xchg
in
clc
std
clc
std
cmc
push
dec
shr
nop
loopne
sbb
in
jae
das
stos
inc
fdivr
mov
enter
nop
and
call
push
das
mov
mov
out
sbb
dec
push
clc
retf
inc
mov
dec
mov
repz
pop
inc
rcr
bound
push
(bad)
mov
xchg
inc
ja
sar
dec
jns
push
int3
xor
mov
stos
cs
loope
out
jo
aaa
int3
int3
stos
jecxz
repnz
fcomp
aaa
cmp
jne
mov
je
xor
std
ret
les
or
enter
xchg
enter
mov
mov
mov
leave
test
xor
xor
xor
ret
mov
mov
pop
sbb
inc
jmp
mov
movs
dec
push
or
lods
mov
sar
jnp
enter
test
lahf
test
inc
add
adc
xchg
and
xchg
sbb
mov
sbb
(bad)
sub
push
jg
mov
aaa
lea
push
push
jno
push
mov
jo
sbb
jne
dec
xor
jae
hlt
mov
push
mov
lahf
mov
mov
in
push
sbb
or
xor
cmp
mov
adc
inc
jp
add
add
add
mov
or
arpl
push
mov
mov
push
xor
adc
push
popf
mov
or
xchg
outs
and
pop
in
test
pop
xor
icebp
mov
pop
sbb
in
jp
mov
hlt
adc
pop
push
mov
js
and
jno
out
lahf
sub
movs
mov
leave
pop
mov
mov
or
and
and
ins
aam
dec
in
add
test
cmp
and
xor
dec
add
sub
aam
adc
fld
and
ja
sub
or
xor
push
add
jl
imul
xchg
sar
mov
ss
add
or
push
xor
out
jp
sbb
dec
pop
pop
sbb
dec
cmp
mov
xor
push
lods
pop
mov
xor
cli
dec
push
cdq
(bad)
mov
mov
pop
lock
push
(bad)
mov
jge
movs
dec
clc
add
rcr
mov
inc
mov
adc
inc
push
push
and
jecxz
es
(bad)
pop
dec
test
sbb
shl
clc
je
mov
fadd
or
shl
nop
es
dec
cmp
adc
adc
test
call
xor
xchg
push
push
lock
mov
or
ret
sbb
mov
sbb
(bad)
into
cmp
test
and
pop
add
retf
adc
xchg
adc
inc
test
or
fisub
pop
add
(bad)
xor
inc
pop
mov
test
movs
pusha
ins
fwait
fs
outs
fs
and
test
call
mov
add
jge
cmp
sbb
pusha
add
ins
pusha
add
sub
mov
sub
sahf
inc
rol
mov
pusha
xchg
cmc
cmp
test
mov
or
sub
ins
adc
cmp
xor
pop
imul
fisub
jg
push
(bad)
in
gs
sbb
fimul
add
xor
jge
and
xor
cmps
mov
fs
mov
xor
pop
ss
scas
add
add
sub
popa
or
retf
xor
add
pop
ja
sbb
mov
add
push
push
adc
pop
cmp
xchg
mov
mov
inc
mov
dec
loope
and
inc
jnp
push
and
and
xchg
mov
pusha
fnsave
mov
fmul
(bad)
fwait
inc
outs
cwde
sub
outs
inc
mov
xor
loopne
lods
adc
mov
xchg
sub
mov
retf
call
or
push
outs
xchg
addr16
mov
cmps
xchg
ja
mov
jnp
cmp
mov
sub
add
jmp
hlt
or
and
pop
mov
or
cli
call
scas
mov
push
mov
addr16
mov
mov
inc
nop
xor
xchg
cwde
cwde
mov
call
in
add
or
mov
(bad)
(bad)
(bad)
push
push
or
(bad)
dec
cmp
fsub
iret
scas
mov
xlat
jg
aaa
fdiv
push
xchg
or
jbe
jne
adc
fwait
or
inc
fcomp
mov
pop
cld
sub
ficomp
sbb
out
clc
(bad)
fst
das
add
pop
dec
push
int
pop
dec
xor
jmp
adc
and
ss
mov
add
cmp
cs
aaa
and
pavgb
ins
mov
(bad)
push
inc
push
push
cmp
jbe
jnp
add
fsubp
sub
js
mov
dec
dec
bound
ss
fisttp
jne
push
dec
xchg
nop
sub
or
fs
mov
or
mov
push
adc
dec
cmp
ss
das
push
cmp
push
push
push
ret
dec
add
mov
dec
or
arpl
cmps
movs
xor
add
inc
add
pop
cmp
rcl
pshufw
or
fmulp
cli
pop
push
push
push
add
cmp
add
xor
pop
and
mov
inc
xor
lock
sub
push
jb
pop
and
ret
pop
or
sub
and
in
pop
sbb
adc
mov
or
push
pop
lahf
xchg
and
jg
push
lods
add
inc
test
adc
stos
lods
xchg
sbb
jg
sbb
or
bound
jmp
push
mov
add
and
jmp
adc
cmp
aas
mov
mov
dec
and
pop
sub
sbb
push
or
xlat
cmps
add
pop
movaps
addr16
test
dec
rcl
mov
mov
jg
jg
cmp
das
push
push
pop
xor
cli
jmp
pop
or
das
sub
sub
inc
push
sub
daa
xlat
and
out
push
sahf
arpl
pusha
jno
jle
add
xor
das
dec
les
addr16
lsl
sub
sub
aas
push
mov
sub
xor
xlat
shl
jo
xchg
js
pop
lods
xor
add
inc
cmp
je
sub
int3
inc
xchg
das
sub
js
mov
stos
mov
shr
inc
jg
mov
out
sub
aaa
test
push
jbe
sub
pop
es
push
cmp
push
mov
push
sub
pop
arpl
stos
sti
ins
mov
sbb
add
sbb
dec
adc
push
dec
sbb
test
pop
mov
cmps
ja
sbb
xor
jg
dec
pop
mov
dec
pop
add
fisttp
xor
mov
sub
scas
sbb
jne
daa
stos
jmp
inc
jns
js
mov
dec
(bad)
enter
jp
add
ds
pop
outs
inc
jne
bound
ins
punpcklwd
jg
sub
push
ins
(bad)
bound
dec
push
mov
int3
push
pop
push
or
pusha
pop
dec
(bad)
in
iret
add
ins
jg
jp
adc
and
inc
or
rcl
xchg
dec
and
imul
cmp
pop
jb
inc
fs
aas
xchg
pop
in
gs
jmp
mov
push
ror
das
data16
and
inc
pusha
xor
std
adc
push
loopne
ss
push
jnp
bound
popa
js
or
push
aaa
xchg
sbb
pop
jb
dec
iret
cli
inc
push
adc
pop
push
int
or
adc
add
push
fs
aam
dec
push
cmp
call
or
push
inc
sti
int3
inc
add
test
mov
daa
add
dec
xchg
pop
addr16
inc
dec
dec
gs
push
xor
push
test
xchg
xor
test
pop
push
scas
xchg
add
pusha
push
jo
mov
adc
mov
outs
fwait
cmp
pop
xor
ficom
cmp
xchg
cmp
jnp
add
dec
adc
(bad)
xor
add
lahf
outs
ds
xchg
or
sar
xchg
inc
cld
adc
inc
dec
inc
mov
add
aaa
shl
call
inc
sub
jo
cdq
xchg
mov
mov
or
scas
leave
imul
mov
dec
pop
xor
xchg
dec
repnz
rol
xchg
mov
in
das
cdq
jbe
mov
cmp
fsubr
es
dec
mov
xor
dec
cmp
ror
dec
repnz
dec
fcom
mov
mov
fs
xchg
add
adc
in
xchg
mov
xchg
jns
and
sub
mov
dec
es
xchg
dec
pop
jo
cld
nop
(bad)
repnz
dec
dec
sbb
lods
sub
fs
xchg
dec
rol
in
and
call
dec
cs
int3
int
dec
es
mov
sbb
mov
in
and
pop
rcl
das
pop
repnz
dec
pop
sbb
movs
cmp
fs
xchg
dec
rcl
and
fdiv
in
das
cdq
lock
add
leave
and
cdq
cwde
or
mov
sbb
lods
xor
xchg
dec
pop
xor
dec
fsub
xchg
dec
mov
ficom
movs
cmp
mov
cdq
in
js
in
and
leave
imul
and
xor
dec
pop
test
adc
movs
repnz
dec
pop
xor
les
fs
xchg
dec
aam
call
mov
js
and
mov
leave
and
cdq
movs
cmp
(bad)
fimul
jns
out
fdiv
xlat
add
in
lock
mov
xchg
dec
dec
mov
xchg
dec
repnz
repz
ins
hlt
xchg
xchg
dec
jb
cmc
jl
mul
sbb
nop
and
cdq
in
clc
cwde
sub
dec
es
movs
cmp
ror
leave
push
sti
loopne
cld
dec
dec
repnz
hlt
mov
add
xchg
dec
repnz
cwde
sbb
lods
xor
jb
add
inc
add
pop
add
je
dec
jb
add
add
and
mov
inc
push
les
cdq
in
pop
pop
fdiv
daa
jns
and
mov
or
es
and
sbb
mov
xor
dec
xor
dec
or
fsubr
cmovl
xchg
dec
js
adc
adc
xchg
lods
inc
adc
jns
and
pop
adc
push
es
leave
dec
pop
nop
pop
sbb
lods
repnz
dec
pop
xor
enter
mov
dec
in
sbb
pop
and
sbb
sbb
in
push
test
pop
dec
es
mov
pop
xor
push
dec
pop
xor
or
pushf
and
mov
and
cs
daa
sub
mov
mov
and
and
nop
and
xor
dec
es
sub
mov
xor
lods
inc
cs
dec
das
lahf
das
xor
xchg
xchg
rol
(bad)
sub
dec
pop
push
es
cs
adc
or
sbb
or
ds
add
mov
xchg
ficom
inc
jmp
inc
in
fidivr
sbb
mov
or
js
pushf
cmp
push
les
out
lea
call
jnp
pop
mov
and
data16
xor
xor
gs
fs
inc
xor
jmp
push
inc
xchg
push
or
shr
mov
adc
push
daa
adc
add
xlat
test
fs
push
out
push
jb
xchg
push
test
mov
outs
bound
cmp
out
xor
cmp
add
mov
out
fwait
repz
add
out
jbe
xchg
cld
push
push
add
inc
pop
dec
push
push
push
or
sub
mov
xor
add
ss
mov
daa
popf
ja
inc
mov
jno
fidivr
bound
imul
inc
popa
push
cmp
pop
ss
repz
push
xor
ficom
and
inc
xor
push
jnp
das
ds
push
iret
xor
pop
pop
or
mov
dec
pop
cmp
mov
or
pop
inc
js
imul
xlat
push
mov
push
retf
popa
mov
jp
sbb
xor
inc
gs
sub
and
in
jp
(bad)
xor
pop
and
inc
mov
outs
sbb
pmaddubsw
sbb
inc
addr16
sbb
or
push
jmp
push
les
add
xchg
adc
pop
das
das
arpl
xchg
inc
or
mov
adc
push
gs
aaa
sti
jne
call
push
arpl
add
dec
dec
jae
jns
sar
dec
ficomp
push
sbb
(bad)
pop
inc
add
inc
sbb
dec
sbb
outs
bound
js
dec
fwait
jb
rol
cmps
sub
scas
aad
inc
add
aaa
ret
cmp
dec
jle
add
xor
xor
rol
loop
pop
aas
sti
(bad)
pop
sbb
aaa
not
push
mov
jae
push
push
adc
pop
dec
ficom
adc
sbb
les
(bad)
cmp
mov
xor
int
addr16
(bad)
pshufw
mov
add
outs
cmp
mov
inc
arpl
inc
add
or
mov
aaa
out
mov
mov
ror
push
inc
nop
and
and
or
or
xor
pop
cs
push
ja
bound
jp
adc
out
aas
xor
inc
add
dec
xor
(bad)
idiv
bound
cmp
shl
dec
or
ss
dec
mov
dec
mov
pop
sbb
jb
inc
ss
adc
addr16
xor
push
scas
cmp
fwait
dec
arpl
cmp
fcomi
mov
fstp
xor
add
xor
ss
or
sub
inc
aaa
push
fisub
push
push
push
shl
out
jp
push
inc
lahf
push
push
sub
and
or
push
pop
js
outs
dec
aaa
out
imul
pop
loope
loopne
sub
xchg
scas
cmp
arpl
mov
push
push
xor
or
mov
lahf
retf
sar
push
dec
adc
add
repz
xchg
sub
cmp
add
adc
pop
dec
mov
pop
fs
cmp
scas
inc
pop
pop
mov
xlat
xor
pusha
rol
cmp
adc
inc
cmps
repz
bound
push
sbb
(bad)
pop
(bad)
xor
cli
push
sbb
imul
xor
push
xchg
mov
outs
daa
pusha
mov
xor
xor
add
test
ja
fcom
frstpm(287
(bad)
xor
fidiv
mov
aaa
rol
jo
das
xor
cmp
inc
(bad)
dec
bswap
sti
push
push
dec
push
inc
xor
inc
inc
lock
addr16
ss
aaa
inc
adc
adc
daa
sub
rcl
out
inc
pop
mov
xor
add
and
xor
sbb
adc
sbb
pop
ins
pop
xchg
xor
scas
cmp
jmp
imul
repz
out
loopne
push
push
das
xlat
xor
mov
cmps
out
adc
and
out
and
cmps
bound
mov
es
div
add
mul
fs
sbb
inc
fdivr
or
xor
repnz
retf
mov
fbstp
dec
jo
xor
dec
jecxz
adc
pop
daa
adc
add
cmps
aaa
xor
sti
(bad)
inc
out
mov
(bad)
idiv
push
cmp
xor
xor
jl
sbb
out
vpdpwssd
pop
or
dec
addr16
aaa
push
xor
cmp
ss
pop
add
daa
ss
and
popf
js
pop
out
push
xor
test
mov
xchg
arpl
xor
adc
sar
pop
ss
xlat
mov
dec
mov
mov
retf
pop
add
daa
xor
ins
pop
daa
jg
lds
cmp
pop
aad
sbb
mov
xor
sbb
sub
jp
mov
pop
xor
jo
add
or
pop
pop
jle
aaa
dec
mov
(bad)
dec
test
push
xor
inc
ret
js
pop
(bad)
mov
push
mov
and
jbe
cmp
ret
pop
pop
and
shl
dec
cs
out
cld
cmp
adc
inc
iret
inc
sbb
add
inc
push
or
ins
and
or
repnz
lock
data16
xor
out
dec
cmp
lock
fld
cmps
ss
push
scas
mov
inc
sbb
mov
cmp
(bad)
cmp
cmps
pop
rcr
dec
sbb
test
push
adc
scas
popa
aam
and
retf
(bad)
push
popa
jo
jae
add
movs
in
dec
lahf
sti
addr16
pop
cmc
lea
jmp
push
xor
jnp
idiv
xchg
mov
push
cmp
xchg
push
push
inc
dec
pop
loop
ss
ss
cs
sbb
sub
cmps
aas
push
or
pop
cmp
cmp
mov
push
mov
hlt
adc
xadd
iret
push
mov
add
jp
or
inc
pop
mov
ss
outs
or
cli
shl
dec
inc
adc
inc
ret
push
push
aas
daa
cmps
push
inc
or
ret
outs
test
lods
cvtpi2ps
jo
inc
fwait
push
fidivr
daa
add
and
mov
scas
jmp
cmp
daa
in
cmp
stos
push
xor
cmp
sbb
scas
call
inc
sbb
xor
aas
sub
movs
mov
sub
pop
pop
jmp
jae
(bad)
sub
jecxz
jl
add
retf
(bad)
cmp
addr16
daa
outs
adc
jg
(bad)
push
daa
cmp
pop
xor
push
or
push
pop
xor
cmp
sub
je
push
ret
cmps
fs
push
je
jp
pminub
adc
xor
cli
lahf
fistp
hlt
mov
add
add
dec
daa
add
mov
xchg
xchg
inc
or
hlt
add
lods
add
cmp
lds
jbe
mov
xor
jmp
call
pop
xchg
das
mov
xchg
push
call
add
ds
add
push
pop
setg
jb
inc
movs
(bad)
xchg
jbe
xlat
test
mov
cmp
int
mov
mov
lock
jmp
lds
jg
daa
mov
push
adc
call
push
xor
jbe
aaa
pop
into
sbb
push
mov
(bad)
dec
pop
ss
push
jg
push
sbb
jp
test
xor
push
aaa
dec
dec
or
inc
ret
push
daa
daa
push
test
daa
push
mov
ss
xor
dec
(bad)
jecxz
push
cmps
and
mov
es
bound
add
aaa
das
pop
outs
loopne
out
sub
out
push
out
pop
lea
dec
inc
retf
push
ja
daa
adc
xchg
dec
dec
mul
daa
in
icebp
add
xor
or
xor
pusha
aaa
fwait
gs
pop
add
xor
ss
jo
outs
pop
(bad)
cs
mov
repnz
jg
mov
push
dec
jne
and
ja
push
adc
add
or
fs
ret
lahf
inc
into
bound
stos
xor
fbld
pop
lock
fiadd
or
mov
test
inc
cs
lahf
push
outs
mov
inc
xor
daa
mov
add
push
test
mov
sub
retf
neg
sbb
sub
jle
repnz
shl
push
sbb
xchg
xor
out
adc
push
adc
inc
and
jne
inc
xor
add
sub
push
xchg
out
xor
sti
fwait
pop
fisub
sub
iret
bound
or
aas
call
(bad)
xor
dec
push
inc
ds
sbb
push
fisttp
mov
dec
clc
adc
dec
inc
jo
(bad)
cmp
push
inc
daa
test
jmp
mov
dec
mov
(bad)
xlat
mov
mov
sbb
movs
stos
stos
sub
pop
pop
dec
movs
xor
cmp
push
add
je
inc
mov
jmp
int3
sub
pop
dec
outs
sbb
or
or
mov
cmp
and
imul
and
sbb
inc
push
cmp
scas
jmp
adc
(bad)
cmovnp
cmp
sub
add
pop
shl
cmps
test
push
push
pop
or
inc
inc
jae
inc
sbb
or
and
rcl
push
daa
cmp
aaa
cs
jns
ins
push
mov
rol
mov
aas
xchg
fwait
xor
pop
js
sti
inc
in
jmp
jmp
mov
mov
push
fbstp
retf
dec
das
dec
mov
add
addr16
pop
or
push
cmps
outs
daa
push
and
inc
(bad)
cmp
xchg
lock
rdtsc
fimul
pusha
jno
push
scas
fild
out
mov
bound
xor
test
call
cmp
orps
jg
push
xor
pop
mov
xor
inc
outs
or
bound
push
and
push
ss
test
sub
or
sbb
aas
add
add
xor
push
repnz
pop
xor
mov
sti
xor
test
pop
addr16
add
cmp
ret
xchg
push
sbb
dec
inc
daa
cmp
sbb
sub
daa
psubsw
xchg
push
add
pop
pop
xor
push
dec
cmp
cmp
nop
add
dec
or
imul
mov
push
push
and
jo
inc
fild
push
daa
mov
daa
sbb
imul
mov
ss
jmp
fbstp
rcr
sbb
inc
jl
cmp
sbb
lock
push
fild
bswap
add
outs
push
ja
daa
adc
inc
scas
push
cmp
pop
or
jb
out
mov
daa
jl
cmp
xor
cmp
loopne
test
cmp
sbb
cmps
push
outs
pop
lock
js
push
das
not
or
and
add
jb
loope
or
out
cmp
mov
shl
jge
scas
dec
aaa
popa
dec
xor
sub
scas
arpl
xchg
cmp
push
or
das
ds
dec
and
pop
icebp
lods
dec
pop
xchg
retf
sbb
cmp
xor
xor
adc
pop
sbb
mov
punpcklbw
push
ja
xor
push
test
out
cmp
ds
dec
mov
push
sbb
addr16
daa
cmp
les
push
das
dec
adc
mov
fsubrp
loop
arpl
jp
mov
aaa
pop
adc
dec
cmp
mov
xchg
lock
dec
dec
jg
sub
test
ds
jnp
add
sbb
inc
loope
xor
pop
add
daa
inc
in
adc
aaa
mov
aam
jbe
add
scas
imul
or
push
xor
ret
mov
add
gs
je
pop
jae
mov
xor
jmp
xor
cmp
xchg
xlat
or
cs
xor
inc
daa
mov
dec
lds
or
or
pop
or
sbb
sbb
das
pusha
lds
scas
dec
add
iret
cs
xor
ja
test
icebp
inc
push
jg
jp
arpl
push
cmp
push
push
sbb
push
scas
dec
daa
cmp
pop
sub
cmp
adc
daa
sub
bts
scas
xor
aas
cli
add
out
adc
add
call
aaa
loope
cdq
mov
cmps
xor
outs
pop
dec
push
femms
icebp
lea
xchg
pop
mov
add
daa
push
dec
rcl
scas
jo
ret
add
cs
out
pop
adc
push
scas
mov
dec
xchg
mov
dec
(bad)
out
cmp
cmp
push
pop
xor
cmp
addr16
je
mov
mov
sbb
daa
push
cs
call
xor
nop
es
(bad)
scas
outs
sub
adc
xor
popa
adc
out
iret
out
inc
inc
cmp
sbb
ret
add
ss
repnz
jnp
mov
push
pop
outs
inc
xor
sbb
cmp
push
enter
daa
cs
aas
dec
mov
pop
sub
pop
xlat
cmp
jnp
mov
push
jecxz
jo
inc
loopne
add
mov
push
sbb
inc
mov
jbe
aaa
lock
pop
(bad)
iret
daa
sbb
inc
push
xor
(bad)
sub
adc
pop
xchg
push
mov
(bad)
out
js
and
ds
sahf
inc
pop
cmp
out
cmp
pop
ss
cmp
scas
imul
push
js
jmp
sysret
ss
ds
or
sub
inc
jmp
adc
jo
scas
retf
loop
sahf
mov
and
mov
or
dec
jg
dec
sbb
push
aas
out
push
or
mov
mov
sbb
daa
pop
ret
or
adc
lahf
(bad)
mov
sbb
add
xchg
data16
xor
mov
sbb
mov
cli
shl
jge
pop
cmp
push
into
sbb
jl
pop
repnz
inc
shr
cmp
(bad)
adc
and
xchg
cs
out
neg
mov
jbe
mov
jcxz
pop
add
mov
ss
out
dec
cli
movs
mov
aaa
mov
mov
loope
jle
inc
pop
daa
aad
add
cmp
sbb
sub
and
icebp
mov
mov
dec
and
adc
and
xor
daa
mov
or
ror
int
or
cvtps2pd
dec
add
and
cmp
inc
lods
popa
add
bound
cmp
mov
shl
addr16
imul
add
outs
add
pop
jp
cs
or
shr
mov
mov
inc
mov
(bad)
cmp
idiv
push
xor
lock
dec
not
sub
and
push
xchg
or
daa
xor
mov
push
pop
or
and
adc
cmp
fcmovne
mov
call
out
lea
pop
lea
scas
lahf
out
js
cli
push
push
inc
inc
outs
push
push
sbb
ss
xor
jl
xor
and
sub
outs
addr16
ss
sub
cmps
fadd
and
dec
je
cmp
ins
cmp
(bad)
aaa
cmp
push
pop
ds
sbb
ss
inc
in
call
cmp
pop
push
(bad)
push
push
iret
idiv
adc
push
cmp
ret
sbb
sbb
rcl
jp
pop
mov
(bad)
rol
push
sub
rcr
xchg
imul
push
lea
dec
mov
xchg
mov
xchg
mov
or
and
aaa
iret
sbb
xlat
xlat
cmc
adc
push
fist
aas
sub
shl
mov
shr
add
rol
dec
jge
imul
xchg
fdiv
test
das
xchg
scas
push
enter
daa
fisttp
inc
cmps
adc
xchg
or
adc
push
imul
lock
jecxz
iret
mov
jecxz
add
bound
sbb
push
dec
push
jge
or
lahf
add
dec
inc
(bad)
pop
(bad)
and
adc
inc
daa
stos
lods
xchg
dec
or
inc
shr
xor
aas
data16
cmp
scas
jnp
iret
mov
inc
and
inc
cmp
movs
fidivr
ret
xor
cmp
sbb
fcmovu
cmp
mov
out
enter
jmp
daa
cmp
pop
inc
outs
and
xor
pop
pop
dec
(bad)
xchg
cs
outs
jb
fs
mov
daa
mov
ds
fwait
jbe
and
out
inc
js
mov
sub
das
bound
dec
aaa
inc
cmp
adc
adc
daa
add
arpl
mov
outs
repnz
xchg
add
mov
mov
push
inc
nop
mov
sub
mov
adc
cmp
mov
imul
or
push
push
aas
jo
sbb
popa
add
or
lods
aas
scas
and
imul
call
ss
push
cmc
push
call
clc
xor
cmp
out
inc
add
add
aas
ins
sub
jnp
mov
jo
mov
and
add
je
pop
adc
add
pop
xor
(bad)
bound
inc
and
mov
xor
xor
cs
or
inc
push
dec
dec
pop
mov
aaa
push
push
scas
loopne
inc
stos
cmps
or
sub
(bad)
aaa
daa
mov
pop
mov
ja
fistp
xchg
fadd
cmp
sti
mov
mov
sbb
sbb
add
lods
jno
js
out
push
out
xor
jl
push
xchg
out
(bad)
in
mov
or
cs
xor
xor
sub
or
bndstx
dec
stos
push
mov
push
pop
jmp
adc
cmp
cs
icebp
cmp
or
mov
jmp
dec
(bad)
popf
hlt
(bad)
cs
daa
mov
push
(bad)
dec
or
call
and
inc
(bad)
jecxz
xor
mov
loop
mov
add
sti
ds
push
or
mov
push
pop
ja
mov
sahf
pop
stos
push
pop
jbe
jne
cmp
sub
cmp
cmps
fistp
shl
push
daa
(bad)
or
pop
fcmovb
or
(bad)
inc
test
cmp
ds
jb
stos
ret
stos
fwait
xor
adc
push
out
out
stos
shl
mov
popa
repz
mov
inc
pop
cs
imul
dec
inc
cmp
mov
push
hlt
neg
jbe
or
pop
daa
aad
inc
inc
getsec
and
test
mov
adc
or
inc
mul
or
jns
sub
push
outs
push
jae
ss
sub
push
dec
pop
das
and
out
and
retf
cmp
aas
rol
fmul
jb
jno
mov
inc
ja
xor
cli
xchg
jb
mov
jae
scas
dec
dec
mov
xor
cmp
aaa
rol
sub
pop
and
call
lahf
pop
fisub
pop
daa
inc
lods
mov
popa
(bad)
cmps
mov
shl
dec
xlat
out
xor
out
sti
cmc
or
lahf
add
ss
sbb
repnz
add
sub
xchg
jo
scas
and
(bad)
ret
arpl
(bad)
sub
jle
retf
aaa
ret
ss
jbe
rcl
push
icebp
dec
fwait
out
aaa
sbb
fistp
and
pop
hlt
gs
push
dec
pop
out
or
push
loop
inc
push
ret
test
jo
push
daa
dec
cmp
push
dec
daa
inc
ret
or
push
rol
jbe
cmp
or
fadd
ja
lds
shl
cmps
cli
(bad)
daa
add
jg
inc
ret
add
rol
pop
out
push
add
cmps
outs
mov
dec
pop
push
(bad)
mov
(bad)
xor
and
inc
jno
inc
dec
push
fwait
push
cs
aad
(bad)
push
jp
cmp
pop
push
outs
xchg
xor
sub
pusha
mov
adc
out
push
xchg
or
cmps
out
daa
inc
or
or
daa
cmp
push
and
add
dec
sub
test
ss
dec
cmp
add
xor
jg
dec
sbb
cmc
jecxz
inc
add
xor
xor
aaa
adc
test
(bad)
int
jge
push
ss
aaa
pop
add
adc
daa
cmp
sbb
das
dec
push
mov
retf
je
mov
outs
sub
test
loop
sbb
retf
xor
jp
(bad)
bound
xor
pop
ret
jbe
div
test
cmps
push
aas
dec
js
rol
arpl
push
pop
push
daa
push
daa
xor
mov
cmps
cmps
rol
bound
xchg
xor
push
sub
sahf
or
jmp
js
aaa
hlt
add
ret
xlat
js
sbb
dec
jp
or
bound
jge
aas
test
dec
imul
cmp
add
xor
movs
push
(bad)
sub
xchg
jo
ror
push
or
mov
cmp
outs
idiv
scas
inc
out
inc
sahf
retf
mov
mov
mov
push
xor
cmp
add
or
xor
shl
call
cmp
rcr
fstp
mov
fild
pushf
pop
das
push
pop
xor
gs
jecxz
daa
(bad)
mov
loope
dec
mov
sub
shr
aaa
aaa
sahf
pop
add
or
outs
inc
daa
cmp
push
xor
mov
retf
movs
or
stos
cli
xor
daa
jg
push
fs
aaa
and
ret
inc
fidiv
mov
(bad)
cmp
adc
cmp
jg
cmp
push
inc
or
push
daa
xor
add
cmp
push
and
dec
cmp
sbb
out
jmp
rol
mov
inc
jbe
shl
jnp
call
jg
lahf
ret
pop
cmps
jnp
push
push
mov
mov
inc
xor
push
loop
idiv
fcomip
adc
xchg
adc
adc
ss
cs
clc
mov
cmp
mov
(bad)
push
js
je
cmp
call
sbb
push
daa
dec
arpl
sar
push
rol
pop
dec
(bad)
inc
stos
test
and
inc
nop
daa
das
push
dec
pop
sub
loop
pop
adc
xor
aam
hlt
inc
mov
pop
jnp
xor
jmp
xor
retf
inc
dec
dec
mov
inc
inc
push
xor
jge
dec
fild
add
and
xchg
sub
retf
mov
sbb
aaa
dec
retf
sti
inc
arpl
inc
pop
loopne
repnz
mov
ror
inc
aas
push
mov
(bad)
jp
cmp
scas
add
les
(bad)
inc
adc
lods
dec
jmp
add
mov
xchg
jg
shr
(bad)
sbb
cmp
arpl
cmp
sti
push
shl
adc
ret
inc
pop
jge
sbb
stos
mov
inc
pop
or
enter
fwait
inc
daa
cmp
adc
lahf
and
inc
jae
mov
push
pop
popa
(bad)
popa
adc
sbb
adc
loopne
ret
div
cs
pop
arpl
jmp
out
clc
cmp
xchg
push
jb
mov
fdiv
pop
lahf
push
movsx
shl
add
mov
shl
das
dec
mov
popa
shl
mov
mov
jo
mov
xlat
retf
cli
mov
arpl
pushw
dec
sub
push
and
(bad)
and
mov
mov
push
fild
adc
outs
call
das
add
inc
push
iret
cwde
dec
add
mov
aam
sbb
sbb
sub
dec
and
push
xlat
add
sbb
test
je
lea
pop
push
xchg
and
scas
dec
mov
push
sub
push
inc
cs
pushf
nop
xlat
aaa
and
adc
call
jmp
add
ss
retf
and
test
loop
pop
imul
dec
mov
fwait
pop
aaa
adc
cli
es
inc
call
pop
mov
ss
inc
ss
dec
and
daa
(bad)
jb
dec
adc
push
aaa
mov
leave
dec
dec
imul
mov
add
mov
dec
lahf
ret
rol
mov
xlat
adc
mov
cmps
dec
push
ror
mov
(bad)
or
inc
pop
jmp
or
ror
stos
inc
mov
add
xchg
mov
daa
xchg
inc
jmp
add
das
xlat
dec
push
outs
imul
jmp
cmp
push
inc
or
rol
lods
shl
inc
jg
xor
ror
xchg
daa
dec
and
add
xor
cmp
xchg
pushw
dec
xchg
fdiv
or
lds
pop
loop
cli
cmc
out
sbb
mov
bound
mov
sub
adc
add
inc
inc
nop
or
daa
push
leave
add
or
inc
cmp
pop
cmp
(bad)
mov
inc
arpl
icebp
cli
ror
arpl
test
test
pop
dec
scas
cmp
jl
dec
aas
jnp
loopne
hlt
xchg
jnp
daa
inc
ret
or
adc
dec
addr16
aas
lea
inc
call
popa
pop
pop
mov
(bad)
imul
adc
ja
pop
outs
rcr
dec
pop
out
add
js
mov
call
push
dec
mov
and
pusha
xor
inc
add
pop
adc
mov
mov
mov
cmp
scas
aaa
push
lods
dec
pop
aas
fiadd
not
and
shr
dec
mov
pop
retf
inc
dec
lock
push
add
push
daa
in
add
inc
xor
mov
sbb
mov
stos
pop
je
pop
idiv
ja
movs
cmp
test
xlat
push
jmp
xchg
add
mov
(bad)
adc
cld
xlat
pop
sub
push
inc
cmps
push
and
or
daa
daa
dec
lods
or
ja
out
xor
sti
xchg
popf
out
mov
bound
(bad)
(bad)
cmp
jmp
jle
adc
inc
pop
xchg
mov
test
aaa
dec
arpl
test
movs
(bad)
xor
daa
xchg
sbb
add
hlt
add
sahf
xor
xchg
xor
inc
(bad)
aad
xor
xchg
push
arpl
adc
mov
aaa
pop
xchg
add
das
movs
cmps
lahf
(bad)
fwait
adc
scas
dec
mov
dec
shl
aaa
mov
and
lock
xchg
inc
sbb
loope
and
mov
or
icebp
sar
call
dec
xor
xchg
push
popf
push
pop
into
push
dec
and
add
dec
outs
inc
add
adc
or
pusha
add
xchg
xor
and
push
add
xchg
sub
das
push
mov
add
add
and
cmps
xor
and
out
aad
jmp
or
sbb
jo
in
pop
xor
push
ret
pop
(bad)
jns
ins
(bad)
xor
and
cwd
xor
les
call
dec
pop
rcr
stos
rcl
inc
add
adc
daa
cmp
xchg
add
pop
ret
bound
loopne
sbb
punpcklwd
adc
bound
cmps
(bad)
lock
lock
adc
rcl
cmp
push
and
or
mov
fs
push
pop
jb
outs
add
pop
xchg
addr16
gs
sbb
cmc
aas
cmp
sbb
stos
aaa
repz
cmp
stos
icebp
ins
sbb
jg
push
ja
and
mov
dec
cmps
sahf
aas
add
daa
dec
cs
pop
xor
popa
xchg
emms
adc
adc
jg
push
aaa
imul
dec
fnstcw
lods
lock
push
dec
cli
mov
and
push
es
and
jbe
adc
cmps
and
call
or
pop
xor
or
cmp
and
das
mov
cmp
adc
jecxz
stos
jae
cmp
lock
xor
lahf
push
sbb
sub
inc
dec
js
data16
inc
add
mov
retf
scas
push
daa
sbb
sbb
das
sub
mov
dec
jecxz
ret
mov
je
push
jb
cmp
or
mov
cs
pop
jmp
dec
out
xchg
je
add
call
push
mov
pop
les
pop
cmps
inc
test
or
xchg
loop
sub
cdq
fcomip
out
or
add
sysret
dec
sar
cmp
push
cmp
push
dec
adc
ds
arpl
dec
sbb
je
mov
icebp
and
cli
push
iret
nop
mov
cwde
inc
inc
daa
xchg
ss
xor
aas
cmc
fnstcw
sar
sbb
pop
xor
clc
inc
sub
mov
dec
xor
jmp
sub
push
mov
inc
outs
inc
cvtps2pd
add
and
dec
push
daa
aas
and
jecxz
cmps
movs
inc
(bad)
stos
sub
cmp
cmps
je
mov
push
scas
(bad)
pop
add
jno
repz
fs
add
fadd
test
xchg
jle
cmp
xchg
inc
(bad)
mov
mov
retf
inc
sub
adc
push
add
aaa
mov
arpl
cmp
and
mov
cmp
aas
es
push
pop
daa
push
inc
add
inc
mov
dec
outs
add
sub
inc
sub
adc
les
jg
pop
add
cmp
inc
sub
and
mov
inc
out
add
adc
push
clc
add
scas
arpl
outs
ret
or
dec
sub
xchg
aaa
cmps
outs
cmp
das
shl
inc
(bad)
mov
daa
cmp
xchg
daa
aam
bound
aaa
pop
pop
ret
mov
in
mov
scas
xor
or
xor
mov
xor
pop
lock
dec
sbb
aaa
xor
dec
inc
xor
push
inc
daa
es
les
push
pop
sub
lods
fistp
xor
and
out
add
pop
push
xchg
das
sub
pop
dec
lahf
pop
cmp
mov
push
pop
sub
jo
mov
retf
and
add
jo
rol
xchg
jge
jmp
ss
sbb
ja
sti
lods
ret
sbb
adc
dec
(bad)
jecxz
and
dec
movs
pop
sbb
sub
pop
lahf
pop
xchg
dec
pop
jecxz
movs
(bad)
dec
pop
xor
add
mov
adc
and
inc
and
imul
cmp
adc
adc
out
dec
jmp
cmp
out
arpl
jo
push
push
(bad)
dec
mov
push
sub
mov
aaa
inc
js
imul
mov
in
daa
xor
xor
mov
sbb
test
xor
jecxz
aas
outs
aas
movs
in
fimul
dec
jmp
fwait
dec
push
push
xor
loope
sbb
adc
inc
or
inc
daa
xor
push
pop
data16
shl
xor
add
arpl
lods
jp
mov
mov
ret
sub
mov
stos
adc
xor
and
sub
jnp
dec
scas
and
sbb
jg
cmp
push
push
xchg
or
adc
pop
cmp
cmps
vpcomuq
movs
lock
inc
(bad)
mov
fwait
mov
in
pop
cmp
stos
jo
test
mov
push
dec
bound
xor
mov
and
mov
xchg
mov
mov
push
jp
pop
inc
iret
ret
imul
aam
inc
cmp
xchg
pusha
test
xchg
inc
jo
daa
aaa
or
call
call
imul
or
inc
push
repnz
or
add
mov
je
adc
sub
unpcklps
test
inc
popa
and
pop
sbb
pop
mov
pop
in
xchg
pop
mov
xor
xchg
dec
cs
js
fcom
jl
je
and
cmp
sub
(bad)
and
pop
jb
and
hlt
dec
repnz
pop
xor
nop
xchg
dec
enter
xor
and
add
ror
ftst
xor
sbb
inc
xor
je
mov
adc
bound
shr
in
cmp
es
dec
add
and
nop
pop
jb
js
xor
dec
enter
dec
mov
repnz
fmul
dec
sbb
or
hlt
ins
dec
in
inc
push
in
xor
cmp
pop
jb
push
lods
fs
and
repnz
loop
xor
rcr
inc
add
cwde
add
or
adc
add
or
add
push
sub
or
mov
in
in
xor
sbb
loopne
mov
dec
in
dec
add
iret
push
add
sub
in
inc
push
cs
add
pop
aas
outs
lock
fdivr
mov
or
sbb
repnz
pop
mov
cmp
mov
inc
mov
fdiv
xlat
jp
xor
dec
shr
mov
int3
pushf
xor
xor
int3
rcl
repz
imul
dec
int3
jmp
mov
rcl
psubsb
mov
pop
shl
push
mov
data16
inc
loop
dec
outs
pusha
cmp
mov
mov
push
sbb
add
inc
outs
push
push
maxps
jmp
dec
cs
cmp
adc
mov
in
out
cmp
push
sub
cmp
pop
sbb
outs
outs
cmp
retf
mov
nop
mov
out
mov
pop
data16
jle
push
dec
mov
aas
ficomp
mov
mov
push
inc
scas
pop
pop
jp
cdq
push
or
or
adc
cmp
pop
mov
pop
push
add
imul
ds
push
push
dec
push
jbe
jno
jns
or
and
retf
repz
repnz
hlt
les
push
ss
cld
dec
in
retf
mov
dec
(bad)
(bad)
jo
jb
and
push
or
and
test
push
xor
jge
sub
out
adc
mov
mov
lds
imul
ins
and
adc
repz
retf
pop
bound
inc
loop
inc
repnz
sti
xchg
sub
(bad)
xor
int3
mov
dec
cwde
pop
mov
mov
pop
mov
repz
ins
inc
test
cmp
cmp
mov
cmps
pusha
mov
pop
pop
and
pop
push
out
das
repz
arpl
jbe
or
ss
ins
imul
xor
pusha
mov
add
scas
xchg
xchg
pop
rcr
int
inc
jb
sbb
xchg
sub
lahf
js
aad
mov
in
dec
inc
mov
or
xor
sbb
aas
or
daa
add
xlat
imul
dec
jns
and
fisttp
repnz
push
and
mov
scas
dec
adc
fldln2
and
test
mov
call
gs
mov
dec
sbb
es
dec
pop
xchg
mov
inc
pop
call
push
push
inc
mov
sub
push
jmp
outs
inc
push
or
imul
or
sub
ds
xchg
cmps
cmp
pop
enter
xchg
shl
inc
push
add
pop
adc
cmps
inc
add
mov
mov
pop
das
mov
jb
addr16
loope
fstp
jl
das
xchg
movs
mov
adc
mov
lea
pop
das
cmp
adc
pop
jecxz
mov
scas
pop
maxps
push
jl
fst
cdq
pop
retf
add
mov
rol
adc
push
add
mov
inc
aas
and
cwde
arpl
shl
ja
dec
and
mov
cmp
out
mov
dec
and
jae
cmp
movs
pop
cmp
nop
and
pop
dec
ins
cmps
mov
pop
test
push
call
push
out
pop
pop
add
sub
inc
push
mov
jo
and
retf
mov
ret
pop
outs
lds
ja
imul
jne
jbe
push
jb
pop
arpl
cmp
inc
push
fimul
ja
jbe
scas
sbb
iret
lahf
dec
fld
cmp
inc
ins
inc
inc
or
adc
aas
das
inc
sub
push
and
push
jl
push
(bad)
popa
aas
adc
xlat
popa
dec
jae
scas
pusha
pop
sahf
(bad)
data16
and
jg
out
jmp
pop
popa
call
bound
retf
and
inc
dec
fistp
pop
retf
and
retf
out
dec
das
pusha
cmp
add
jb
sbb
inc
shr
retf
fwait
sub
cmp
not
push
add
xchg
jmp
xchg
sbb
xchg
cmp
stos
pushf
outs
outs
adc
adc
js
arpl
mov
ss
mov
cmps
shl
dec
jb
dec
(bad)
fimul
lods
or
jne
mov
xor
or
ja
adc
shl
fistp
pop
ja
cmp
sub
out
pop
adc
imul
daa
jmp
push
lods
loop
rep
mov
xor
sbb
cmp
or
push
xchg
jbe
or
dec
sti
out
test
push
add
or
pushf
or
pop
fs
and
xor
pop
mov
(bad)
push
mov
and
pop
jbe
inc
xor
not
push
das
jo
imul
(bad)
jns
sub
or
push
loope
push
out
adc
es
add
leave
cmp
bound
push
or
mov
les
scas
je
aaa
ja
outs
iret
bound
xchg
jmp
lods
enter
pop
and
aad
xchg
push
aas
push
inc
stos
nop
cmps
pop
jbe
mov
(bad)
sbb
stos
and
pop
iret
dec
lds
fisttp
push
jbe
add
xor
push
push
dec
mov
jns
mov
sti
shl
sbb
arpl
cmp
or
mov
mov
or
mov
mov
sbb
pop
cwde
loopne
cmps
adc
cld
scas
jbe
out
nop
push
push
movs
jne
adc
fisubr
sti
push
or
mov
pop
fs
imul
imul
or
(bad)
xchg
ret
mov
jg
push
pop
xchg
mul
aaa
sub
jnp
cli
popw
xor
sub
push
sub
ret
scas
ret
sub
fcmovb
push
daa
pop
push
imul
out
retf
adc
jb
pop
push
arpl
ss
add
and
push
mov
mov
cwde
jne
add
fild
inc
mov
js
fwait
adc
xchg
jbe
pop
mov
or
outs
test
dec
push
jb
pop
mov
sbb
sbb
lea
xor
and
dec
arpl
pop
inc
and
in
cwde
pop
jg
mov
push
and
outs
out
test
jmp
xchg
inc
not
ja
pop
dec
adc
dec
es
sbb
and
or
fisubr
out
ja
stos
mov
out
cmps
ret
xor
les
mov
mov
push
jo
imul
rcl
xor
or
pop
fmul
jg
sbb
sbb
add
addr16
lods
popa
pop
xor
push
mov
inc
sub
mov
pop
adc
or
jb
mov
push
out
outs
arpl
cmp
sbb
add
push
lods
add
stos
aaa
pop
xor
mov
xor
pop
test
jnp
loop
icebp
rcl
retf
bound
loope
push
das
mov
imul
ds
push
les
fwait
daa
(bad)
sbb
lods
mov
out
dec
fistp
push
sub
mov
xlat
jmp
adc
and
xlat
mov
jae
ins
imul
pop
or
movs
sub
add
inc
retf
add
daa
sar
mov
pop
imul
push
sbb
dec
and
ins
or
fstp
mov
ss
pop
enter
fdiv
or
dec
es
pop
sub
fcomp
add
jmp
sub
movs
fwait
push
push
fdivr
xchg
or
or
pop
add
inc
sbb
sub
xor
outs
mov
pop
imul
xor
xchg
pop
xor
pop
xor
push
dec
ja
and
popf
out
xchg
pop
xor
aad
inc
sub
or
(bad)
mov
jge
stos
mov
(bad)
in
movs
pop
lock
mov
cmp
imul
mov
jbe
or
adc
or
mov
bound
mov
xchg
cmp
pusha
loope
cwde
dec
mov
adc
(bad)
mov
sub
and
mov
cmp
and
inc
sahf
inc
cmp
mov
lock
loopne
pop
adc
dec
adc
add
retf
shl
jae
xchg
push
rol
xchg
push
pusha
imul
(bad)
ss
nop
rol
(bad)
adc
imul
xchg
inc
xchg
xlat
add
inc
add
add
(bad)
ror
or
or
ret
ss
dec
adc
cmp
add
cmp
mov
outs
loop
sub
add
mov
in
enter
push
and
cmps
test
in
and
adc
rol
or
push
jge
jecxz
mov
mov
call
push
mov
stos
mov
sub
pop
rcr
call
add
pop
dec
mov
call
add
mov
mov
pop
push
dec
inc
sub
nop
(bad)
stos
cmp
mov
mov
pop
repz
xor
loopne
mov
outs
and
sub
add
push
mov
stos
adc
movs
and
aam
inc
pop
sbb
test
cmps
adc
nop
xchg
add
dec
dec
popf
sub
dec
call
das
pop
ret
push
xor
das
add
adc
(bad)
xlat
std
dec
xchg
imul
pop
push
adc
jl
push
loopne
pushf
pop
ins
sbb
hlt
xor
clc
mov
sub
movs
repnz
jmp
lock
adc
imul
shl
mov
push
leave
ret
aam
bound
sar
add
outs
jmp
dec
push
pop
xor
shl
or
add
pushf
sub
adc
pushf
inc
inc
push
pop
dec
sub
xchg
pop
ret
jae
cmps
mov
sub
dec
jb
outs
inc
jp
nop
nop
adc
xchg
dec
or
sbb
ins
rol
xor
nop
daa
dec
sbb
xor
push
sbb
cdq
push
repz
push
nop
ins
shr
mov
test
pop
cli
clc
inc
sbb
mov
call
inc
inc
add
push
lock
(bad)
hlt
push
adc
mov
pop
cwde
scas
fnstcw
add
sub
adc
mov
push
or
sub
add
mov
(bad)
not
rol
add
jnp
pop
repz
sub
push
cmp
pop
add
dec
pushf
push
inc
add
jae
pinsrw
dec
push
cmps
stc
call
test
pushf
pop
pushf
ja
mov
je
cmp
mov
cs
aaa
leave
je
mov
mov
movs
push
adc
dec
add
clc
xchg
adc
xor
fwait
jl
dec
mov
push
xlat
ins
(bad)
sbb
enter
xchg
in
test
mov
lods
ret
nop
inc
mov
pop
shl
sbb
ins
lahf
jg
mov
push
jle
enter
loopne
popa
int
fwait
mov
cs
(bad)
and
push
xchg
out
push
test
inc
ds
mov
popf
imul
push
nop
and
or
das
mov
rol
lock
fisubr
pop
add
out
jl
push
dec
sbb
mov
nop
inc
pop
leave
add
pusha
adc
ins
inc
mov
repz
pushf
lods
jge
push
jl
push
pop
scas
fstp
test
dec
dec
push
hlt
push
jl
push
cmp
push
jb
adc
in
ret
shl
fmul
xchg
fmul
outs
pop
lahf
in
adc
or
push
and
sub
mov
jle
dec
pop
aas
ror
pusha
mov
xchg
enter
pop
dec
mov
jl
jl
into
frstor
xchg
xchg
out
test
xchg
test
or
bound
dec
repnz
subps
pop
arpl
in
add
cwde
bound
stc
sbb
js
and
movs
sub
dec
sbb
push
push
pop
arpl
in
pop
test
mov
mov
outs
aam
add
(bad)
mov
adc
aas
int
(bad)
sub
sub
push
cmp
push
data16
mov
push
outs
add
enter
pop
fwait
outs
stos
addr16
sbb
dec
cmp
enter
and
out
cld
cs
scas
test
mov
mov
lahf
xor
adc
repnz
arpl
push
loope
je
add
pop
cmp
mov
adc
int3
sysret
mov
add
xor
cmp
aas
cmp
data16
dec
cld
aas
mov
xor
(bad)
lahf
hlt
mov
lahf
je
mov
jnp
(bad)
das
pop
sbb
mov
push
add
jg
out
jecxz
add
push
cmp
ins
sub
jmp
pop
push
ins
push
test
dec
jnp
pushf
xorps
(bad)
das
clc
push
adc
inc
add
in
dec
inc
rol
pop
(bad)
js
push
xor
sub
jae
lods
and
pop
add
adc
add
inc
das
inc
pmulhuw
sub
mov
pop
pop
inc
rcl
mov
lock
push
sub
inc
add
add
xchg
and
mov
lods
aas
(bad)
adc
cmp
mov
fdiv
and
xor
cmps
push
pushf
and
jl
cmps
stc
cmp
test
fsubr
je
repz
in
or
sub
int
imul
inc
and
cmp
adc
sub
rol
addr16
add
mov
ja
xor
dec
fs
sahf
out
mov
in
adc
repz
adc
push
jo
jnp
sahf
xchg
mov
rcr
repz
leave
in
adc
push
sub
repz
mov
inc
sbb
sub
sar
inc
nop
adc
lods
sbb
cmp
les
scas
(bad)
in
ret
push
(bad)
pop
and
and
inc
push
in
pusha
fsubr
pop
and
ja
jge
sar
and
and
ins
pushf
das
mov
pop
enter
fmul
es
or
xor
dec
push
pop
pop
xor
ins
jbe
sub
daa
xchg
(bad)
fmul
push
pop
adc
mov
adc
sub
les
in
movs
cdq
div
adc
sub
int
push
clc
push
xor
movs
loopne
test
call
daa
xchg
xchg
push
enter
mov
cmp
push
enter
dec
das
jmp
jnp
ins
dec
inc
dec
aaa
jl
fnstenv
inc
pop
adc
sub
push
or
ins
into
mov
push
lods
cdq
pop
push
mov
ins
mov
je
dec
aad
shl
jge
xchg
jbe
ja
cs
aas
sbb
jl
cmps
push
pop
mov
out
ss
mov
int3
lods
pop
lock
or
lods
push
scas
inc
ja
ins
jle
nop
aaa
push
cvttps2pi
dec
push
int3
push
ss
int
dec
pop
xor
inc
jnp
(bad)
rcl
lock
aam
les
mov
sbb
sub
shr
push
mov
pusha
inc
or
das
sbb
jo
mov
dec
push
dec
pop
dec
arpl
mov
fs
sub
xor
and
inc
or
imul
pop
push
mov
inc
sahf
mul
push
scas
fnstcw
in
xor
push
lock
cmp
dec
in
or
or
fstp
inc
xor
pop
(bad)
(bad)
ins
(bad)
mov
shr
(bad)
lods
retf
push
mov
fisub
xor
lock
(bad)
jle
mov
popf
neg
fadd
hlt
push
test
pop
fcmove
neg
data16
push
mov
sub
into
neg
dec
loopne
pushf
loope
fwait
dec
mov
loop
xchg
jecxz
in
fnstcw
mov
push
xor
push
mov
cmp
mov
nop
jmp
mov
pop
in
shr
fbstp
pushf
in
cmps
out
xchg
push
shr
out
mov
adc
fsub
rcr
stos
jg
div
push
sar
jae
inc
je
and
xlat
pusha
stc
pop
sbb
jbe
mov
pop
pop
movs
aaa
fldcw
les
inc
and
in
lods
sub
int
mov
sub
sub
int
repz
or
shl
xor
add
jge
xchg
(bad)
mov
ret
mov
inc
rol
daa
pop
adc
stos
add
test
sar
lds
cmp
add
sub
lods
pop
and
add
cmp
(bad)
in
retf
into
fwait
in
daa
sbb
pushf
rol
(bad)
ror
adc
shl
je
aas
cld
fcom
jle
fiadd
lock
pcmpeqb
nop
mov
mov
push
cld
fisttp
fbstp
cwde
in
pusha
in
paddsb
inc
jbe
push
lock
push
out
test
mov
push
mov
imul
andps
xor
push
pushf
sbb
lahf
imul
movs
clc
mov
jl
std
rcl
ja
push
cld
(bad)
push
inc
fdivr
add
int3
add
call
sbb
or
ror
jl
pop
mov
dec
or
jl
jbe
shl
cmps
sub
enter
out
repz
push
ins
mov
sub
cwde
out
ds
in
inc
sub
pushf
ja
(bad)
xor
out
push
js
mov
pop
mov
ins
mov
(bad)
and
pop
jo
jle
pop
pop
fcmovnu
jnp
scas
fs
push
pop
loopne
ror
mul
jl
push
mov
je
push
(bad)
mov
ret
je
mov
pop
stos
mov
add
sbb
mov
mov
jl
dec
mov
dec
jp
push
imul
xchg
sub
pop
popf
out
mov
cdq
in
push
pushf
mov
ds
mov
xchg
mov
lea
lea
push
cmp
call
fldcw
xchg
push
clc
xchg
xor
xchg
cmps
(bad)
aaa
push
mov
fldcw
movs
inc
mov
mov
shl
scas
ds
mov
fnstcw
mov
mov
out
in
enter
aaa
adc
push
inc
shr
ret
not
imul
and
push
idiv
int
js
push
push
adc
repz
lods
adc
adc
loopne
cmp
pop
pushf
loopne
sbb
sbb
ja
fwait
(bad)
sbb
les
cmps
fnstcw
movs
pop
push
or
int3
lea
(bad)
fdiv
enter
dec
dec
repz
inc
jle
and
test
push
xchg
inc
mov
ja
addr16
push
push
movs
in
or
mov
sub
rcl
fdiv
fist
push
push
push
pop
cwde
sysret
popf
mov
pop
fcom
push
sbb
pop
out
mov
jl
push
mov
pusha
pop
call
popa
mov
sbb
mov
shl
data16
ss
int
addr16
aam
stc
out
(bad)
jp
push
ficomp
adc
and
mov
into
jo
movs
pop
pop
data16
push
clc
in
mov
fcomip
or
and
lahf
data16
enter
dec
mov
sub
call
push
fldcw
sahf
push
pop
mov
inc
mov
cmp
mov
xor
mov
in
mov
call
mov
in
cmp
movs
shr
cmps
sub
push
xchg
ficom
push
fisub
mov
clc
(bad)
ss
in
dec
out
jnp
int
jmp
(bad)
test
test
cli
push
das
mov
adc
lods
out
test
call
iret
jmp
jl
mov
mov
in
jge
or
xor
fwait
int
sbb
pop
xchg
push
add
(bad)
out
xchg
fs
mov
mov
ja
cwde
outs
dec
call
xchg
mov
mov
inc
push
pusha
lods
inc
xchg
sub
cmp
in
fldcw
ds
dec
push
lods
dec
in
cmps
fldcw
push
xor
push
aam
jmp
fstp
pop
ss
fwait
int
movs
stc
dec
pop
push
sub
mov
jmp
cmp
ss
not
clc
mov
jae
int
imul
iret
imul
jl
jle
imul
add
mov
nop
xchg
cmp
in
cmp
test
xchg
xchg
(bad)
call
ins
out
fldcw
mov
shr
mov
mov
mov
mov
ins
mov
cs
loopne
pop
sbb
int3
mov
jnp
mov
push
movs
retf
push
xor
fstp
rol
js
cld
ins
mov
sti
xor
push
ins
fcomp
into
clc
fstp
add
or
jmp
sahf
int
out
push
in
inc
xor
hlt
icebp
inc
push
mov
mov
enter
pushf
push
pop
(bad)
pusha
sbb
mov
xor
pop
inc
add
and
ins
aad
mov
and
inc
mov
inc
aaa
stos
mov
adc
dec
push
dec
outs
imul
jl
int
repz
bound
gs
jno
and
pop
dec
xlat
fs
xor
jnp
in
addr16
mov
js
mov
jns
push
fwait
int
js
cmp
pop
mov
shr
cmp
in
pop
les
cmp
cmp
jge
pop
xchg
jo
inc
(bad)
clc
int3
neg
mov
cmp
pop
(bad)
mov
cmp
int3
pop
sahf
push
lds
jo
mov
xor
(bad)
in
ja
dec
popa
jo
sbb
push
lahf
cmps
cmp
push
test
sar
ds
push
cwde
push
repz
pop
int3
loopne
hlt
aas
push
inc
add
jns
push
sub
push
lock
or
js
out
sar
push
les
or
in
cs
mov
xchg
jo
out
inc
pushw
enter
fnstsw
xor
push
push
out
ds
fdivr
je
nop
loopne
push
push
cld
pop
dec
mov
cmp
cmp
push
pop
xchg
push
and
push
ins
test
push
and
push
fucomip
and
and
pushf
cmps
fld
dec
and
loop
jl
xor
xor
mov
cmp
or
xchg
lods
fsubr
inc
inc
mov
sti
mov
inc
inc
ss
mov
jmp
sub
dec
push
sahf
int
sbb
dec
dec
dec
cld
dec
test
fwait
lods
sub
neg
(bad)
push
pop
enter
idiv
gs
int3
addr16
imul
push
inc
ins
ins
outs
cmp
mov
ds
jne
call
cmps
xchg
test
adc
sub
aad
pushf
(bad)
mov
push
ins
pop
in
js
movs
ret
lock
stos
cmps
jmp
out
or
inc
inc
cmovl
inc
xchg
cmp
adc
cmp
or
inc
pop
pusha
push
pop
lods
xchg
ja
xor
data16
aas
cmps
jne
add
sbb
xor
pushf
push
push
fcomp
call
aam
dec
and
aaa
iret
adc
push
repz
jbe
pop
pop
push
mov
xchg
ins
test
in
sar
lock
push
ins
push
push
popf
in
fxch
aas
push
pop
mov
dec
bound
dec
repz
cmp
mov
fs
push
push
jbe
in
jbe
jg
lds
push
nop
(bad)
cld
mov
and
jb
leave
inc
ret
mov
dec
or
mov
xchg
scas
idiv
imul
daa
jl
nop
stos
js
or
(bad)
fisub
and
xchg
push
aaa
dec
jae
or
clc
push
aam
(bad)
js
adc
aam
cmp
out
les
inc
inc
inc
sub
and
add
mov
adc
push
daa
rol
aas
fcmovu
ins
fist
and
dec
pop
ins
pop
es
push
mov
data16
aam
cmp
movs
arpl
fldcw
push
push
xor
ins
mov
shl
outs
mov
jl
(bad)
push
test
xchg
xchg
lea
jns
imul
cld
fcomp
xor
mov
pushf
out
mov
mov
test
mov
fdiv
fs
or
mov
cmps
jge
out
push
add
mov
push
lods
mov
jo
push
jl
or
fnstcw
int
push
rol
cmp
mov
out
je
jge
mov
call
dec
pusha
repz
lock
cwde
add
xor
addr16
or
or
and
dec
in
shl
repz
and
push
fild
fstp
sbb
js
movs
sub
xchg
sub
lods
dec
mov
mov
pop
sub
mov
dec
mov
adc
pop
outs
jbe
cmp
xor
push
das
mov
imul
or
mov
xor
lods
mov
mov
mov
push
xchg
jns
mov
fsubr
aam
addr16
test
mov
mov
mov
mov
int3
push
imul
inc
sub
sahf
push
sbb
push
dec
outs
dec
ss
outs
and
pop
sub
mov
sub
sbb
xor
xor
push
adc
aas
inc
pop
mov
cwde
inc
dec
jl
ins
dec
push
mov
or
imul
test
pop
push
ror
jl
int3
mov
outs
push
cmp
dec
mov
nop
js
jns
(bad)
jns
mov
xchg
jns
fucom
fmul
push
push
add
push
push
mov
ds
repz
inc
mov
jle
inc
mov
repz
cwde
hlt
sub
ds
mov
and
mov
fs
rcl
ins
ins
sar
push
cld
push
xor
xchg
push
neg
ja
cld
inc
ret
mov
push
cmp
mov
push
fidiv
pop
aam
pop
retf
repz
xlat
in
fiadd
adc
push
iret
pusha
mov
pop
pop
mov
push
sbb
push
fstp
push
inc
add
adc
pop
test
test
sub
je
(bad)
push
push
stos
or
adc
cmp
mov
push
sbb
je
push
mov
add
jo
jbe
cli
test
cld
or
xchg
int
cld
cwde
push
and
mov
push
pop
add
add
iret
data16
daa
push
cmp
mov
and
cmp
push
and
push
ins
xchg
cmp
push
test
pop
xor
dec
mov
xchg
les
enter
inc
test
and
test
push
jo
pop
dec
pop
adc
jnp
out
mov
cmps
imul
pop
add
push
adc
movs
out
sti
mov
pop
retf
push
enter
int
push
fwait
int
imul
fst
out
out
ss
jo
sub
pop
xchg
in
std
dec
inc
ss
lock
aas
and
adc
popf
pop
push
push
dec
push
cld
push
jge
or
mov
inc
mov
minps
shr
out
cmp
cmp
andnps
jl
push
addr16
xor
push
pop
xchg
mov
or
pop
pop
and
sahf
sub
adc
adc
les
xor
inc
push
out
push
lahf
adc
add
fisub
xor
fs
les
push
jno
out
lea
adc
push
sub
cmp
xchg
pop
out
pop
js
pusha
push
push
push
mov
cmp
xchg
ss
in
or
in
aas
push
add
and
in
jns
dec
push
loopne
mov
fwait
dec
cld
push
pop
push
adc
pop
add
jg
fs
ins
(bad)
xor
jae
mov
inc
sbb
ss
(bad)
jle
mov
ret
pusha
push
xchg
add
callw
mov
mov
pop
sbb
push
enter
ror
xchg
fnstsw
hlt
dec
cmp
je
adc
mov
aaa
dec
lds
call
pop
enter
ja
stc
push
cwde
mov
mov
mov
push
xor
push
mov
jnp
rcr
mov
fisttp
invd
loop
in
mov
clc
adc
cmovns
clc
cmp
pop
mov
loopne
mov
pop
fisub
(bad)
mov
lods
push
mov
mov
aam
call
mov
in
ds
fistp
push
lock
adc
add
mov
sbb
fcomp
dec
jnp
or
push
rcr
and
les
adc
ds
cmp
or
add
cmp
push
cmp
shl
cmps
daa
jl
je
pop
cld
dec
mov
mov
hlt
dec
inc
cmps
stc
mov
jp
rol
nop
shr
ret
ret
cmp
aam
cwde
in
mov
push
fldcw
fild
and
lods
lods
mov
mov
lahf
mul
adc
push
dec
shl
and
sbb
sar
push
cwde
jo
in
in
sar
push
in
in
addr16
mov
repnz
xchg
arpl
arpl
enter
cmp
aaa
stos
mov
stos
pop
sbb
push
lahf
inc
mov
pop
bt
xchg
in
shl
ss
cmp
arpl
add
mov
xor
ins
ds
add
push
enter
jle
ins
outs
mov
push
xor
in
mov
test
fstp
fadd
dec
stc
mov
sti
push
test
sahf
ins
mov
shr
or
(bad)
loopne
or
xchg
(bad)
mov
xor
test
rol
ret
vpandn
cmp
cs
fcom
mov
and
fcom
sub
lds
(bad)
push
mov
mov
mov
push
pop
cmp
add
push
push
pop
sbb
xchg
in
in
or
das
fs
mov
push
hlt
sbb
jg
ficom
add
adc
mov
ins
jecxz
xchg
mov
push
mov
xchg
ja
dec
fistp
fistp
push
nop
pop
fdivr
lock
and
add
sti
pop
push
fadd
cmp
push
pop
xchg
xorps
(bad)
sbb
sahf
int3
into
mov
pop
add
(bad)
loopne
cmp
cmps
ins
mov
push
cld
inc
ins
adc
ins
mov
adc
outs
inc
mov
outs
icebp
fs
adc
sahf
push
mov
out
mov
push
push
jb
jnp
outs
and
and
cwde
push
mov
test
clc
pusha
push
push
jmp
add
cmovne
call
fld
xchg
outs
push
mov
push
pushf
cmp
nop
fucomip
add
(bad)
push
push
sub
mov
and
in
fucom
push
pop
cld
cmp
pop
jb
enter
pop
xchg
xchg
xchg
fstp
pushf
sysenter
push
js
xchg
xchg
xchg
xchg
mov
lock
fmul
popf
scas
sub
dec
punpckhbw
in
mov
cs
mov
nop
addr16
js
lahf
mov
push
mov
enter
mov
sub
test
enter
repz
xor
mov
(bad)
cmps
test
push
lods
(bad)
fst
(bad)
aas
test
popf
(bad)
push
(bad)
lock
iret
sub
mov
push
push
cwde
das
rcl
out
push
fisttp
scas
data16
xor
test
scas
ficomp
out
mov
lahf
test
dec
push
mov
mov
mov
mov
push
lods
clc
out
cmp
inc
mov
push
dec
mov
mov
mov
fcom
enter
push
loopne
mov
mov
ds
scas
mov
mov
mov
mov
xchg
pop
popf
mov
(bad)
mov
mov
iret
xor
mov
and
ins
add
iret
mov
mov
push
mov
xchg
add
mov
mov
mov
in
movs
add
rcl
cmovg
ret
pop
pop
ret
mov
inc
ss
les
je
les
ja
cld
sbb
push
push
ror
leave
push
out
ds
retf
retf
pop
mov
iret
cmp
call
push
xor
ins
cmp
push
cld
adc
js
jge
jge
jmp
jmp
jb
movs
jmp
in
pop
pop
in
out
cmps
movs
add
imul
mov
repz
push
jle
or
mul
inc
mov
ja
dec
in
les
loopne
lods
jmp
repz
les
lods
push
int
stc
mov
je
scas
mov
in
fnstcw
dec
mov
or
push
xor
fadd
leavew
push
hlt
retf
int
ss
in
inc
into
dec
mov
(bad)
pusha
xlat
data16
fldenv
fadd
pushf
fld
push
sub
jl
jnp
lock
(bad)
fnstsw
fiadd
mov
add
loopne
loope
push
pop
je
and
and
ficom
mov
mov
push
ror
xchg
and
stos
inc
iret
mov
outs
jge
out
mov
hlt
mov
xchg
mov
ret
pop
hlt
lods
imul
aad
fadd
lock
inc
ficom
mov
inc
push
dec
adc
cmp
fimul
jne
cmp
ja
idiv
pop
pop
data16
test
idiv
mov
push
fs
das
push
adc
fnstcw
aaa
loope
fnstenv
neg
inc
aas
sub
ins
jle
fistp
fsubr
cmp
gs
fdiv
je
mov
xor
or
retf
js
int
or
and
pop
add
dec
mov
aaa
xchg
and
mov
push
xor
add
sti
adc
push
sub
or
aaa
xchg
or
(bad)
mov
leave
pop
mov
pop
jno
add
repz
clc
add
push
xor
popa
ja
dec
fbld
cmp
enter
push
push
dec
xchg
jae
sub
adc
mov
push
nop
add
in
or
xchg
and
add
pop
add
mov
loopne
dec
jo
inc
fcom
and
and
in
push
retf
or
push
outs
jae
jbe
call
push
aaa
adc
dec
push
ret
mov
sbb
and
jmp
std
pusha
and
ins
mov
rol
mov
xor
es
or
jns
mov
fadd
adc
aam
sub
pop
popa
(bad)
dec
retf
sub
push
jo
xor
jo
ret
mov
sbb
inc
inc
pusha
cmp
ror
and
jno
retf
shr
cmps
push
pop
dec
pop
inc
sub
ins
leave
mov
sub
pop
cmps
adc
xor
or
pop
and
inc
add
aaa
int
push
sub
mov
cwde
outs
outs
adc
arpl
test
pusha
adc
jmp
xchg
lds
inc
xor
mov
or
ins
pop
inc
pusha
add
movs
push
pusha
xchg
xchg
push
mov
imul
pop
ss
mov
fistp
adc
adc
xchg
mov
icebp
mov
mov
sbb
jecxz
ins
pop
add
push
es
sub
sub
je
gs
mov
push
inc
mov
popa
add
das
jae
out
adc
ret
sbb
or
mov
jae
cdq
cmp
iret
push
outs
mov
push
add
cdq
and
push
push
call
sbb
sub
aaa
inc
inc
cli
sub
push
inc
add
sub
adc
ins
mov
add
pop
bound
(bad)
fcomp
xor
sbb
and
cwde
xchg
xor
or
das
jmp
and
je
ins
and
push
or
or
pop
jmp
test
or
mov
call
inc
jmp
pop
adc
or
mov
cmp
popa
int
and
pop
mov
and
push
prefetch
or
enter
fiadd
pop
push
je
dec
imul
xor
push
ins
xchg
cmp
rcr
dec
or
push
and
inc
cmp
xor
jecxz
inc
xor
nop
ja
mov
adc
xor
xor
sbb
cwde
dec
add
jae
adc
adc
dec
pusha
adc
jo
push
push
and
test
push
mov
fcmovne
loope
push
mov
adc
jae
dec
and
or
popa
or
mov
ins
popa
xlat
push
push
inc
push
push
adc
ss
push
adc
push
adc
or
xor
inc
stos
ret
test
jae
adc
sub
push
movs
daa
or
nop
(bad)
push
xchg
fs
pop
fld
aas
dec
inc
jo
or
or
push
mov
mov
push
sub
inc
movs
or
jno
popa
mov
jno
popf
mov
int3
xor
out
neg
sbb
outs
mov
sub
adc
dec
aam
mov
sub
xchg
or
jmp
and
rol
mov
mov
sub
xchg
adc
and
add
jne
outs
sub
push
add
xor
sub
pop
cmps
or
arpl
or
sub
xor
xchg
cmp
sub
mov
(bad)
add
sub
sub
(bad)
push
or
mov
xor
out
mov
inc
pop
xor
adc
dec
shr
shr
dec
mov
pusha
mov
or
jge
xchg
data16
adc
and
inc
(bad)
out
dec
rcl
push
cmp
ds
mov
jo
shl
and
mov
addr16
pusha
ret
data16
push
je
retf
jae
ss
or
add
mov
pop
cs
adc
sti
mov
mov
mov
cmp
inc
mov
lods
sbb
jmp
mov
sbb
nop
rol
shl
xchg
add
js
add
in
sbb
imul
pop
aam
xchg
(bad)
and
mov
mov
popf
retf
movzx
sbb
mov
leave
out
adc
into
dec
repnz
dec
add
dec
dec
les
fcomp
or
mov
cmp
in
push
jg
nop
jnp
ficom
jne
inc
jle
mov
inc
pop
push
sbb
jno
ins
or
lock
dec
sbb
in
movs
and
cld
outs
add
add
push
xchg
xchg
es
or
mov
or
or
add
xor
dec
je
std
(bad)
out
repnz
repz
inc
add
leave
fstp
cmp
test
jb
push
ins
arpl
mov
shl
daa
xchg
ret
dec
xchg
and
xor
sbb
push
fwait
xchg
daa
ret
adc
popa
popa
pop
in
and
jl
jo
push
jmp
and
out
sub
(bad)
mov
inc
sub
or
fcomp
test
aaa
mov
bt
push
cwde
inc
sahf
inc
cmp
ins
repnz
push
ss
sbb
inc
cld
sub
sbb
xchg
fcomp
add
je
sub
cdq
ins
and
mov
add
pushf
mov
aam
shr
adc
fdiv
in
cs
and
sub
ins
inc
inc
add
sar
inc
aas
add
in
stos
xchg
mov
aas
add
idiv
and
push
inc
dec
mov
dec
mov
in
dec
inc
sub
in
mov
push
pop
jbe
(bad)
fnstsw
jl
lods
mov
jmp
adc
cmp
mov
jb
inc
add
mov
hlt
(bad)
xor
or
jo
xchg
or
ret
(bad)
mov
push
xchg
add
sbb
shr
mov
pushf
cmps
test
xchg
mov
sbb
mov
nop
aas
in
push
mov
ins
adc
inc
sub
mov
ret
pop
hlt
shl
add
pop
mov
enter
popa
push
ins
test
inc
or
pop
ss
in
ret
mov
xor
xor
jno
mov
inc
pusha
inc
add
xchg
xor
inc
pusha
push
jle
shr
cld
inc
push
dec
push
repnz
xor
or
shl
cmp
push
dec
lock
cmp
(bad)
hlt
sbb
push
and
adc
inc
cs
sub
mov
dec
lea
adc
lea
ror
adc
out
clc
xchg
sbb
aas
cld
ror
in
mov
loopne
and
outs
adc
pop
xchg
not
add
inc
push
sti
dec
clc
or
fisub
add
mov
add
ror
lahf
sbb
ror
add
daa
int
(bad)
mov
scas
repnz
sub
cmp
in
push
in
cmp
and
leave
lods
repnz
clc
add
add
cmp
repnz
add
add
add
add
or
push
pop
adc
jns
in
adc
adc
push
or
or
dec
sahf
cmp
or
and
in
xchg
adc
adc
adc
cmp
sub
adc
in
xchg
daa
xor
xor
xor
sahf
cmp
repnz
sbb
sbb
daa
dec
ds
inc
and
test
inc
ds
jl
clc
mov
xchg
hlt
sub
mul
add
hlt
hlt
nop
inc
push
sbb
hlt
hlt
inc
push
sbb
hlt
push
sbb
hlt
hlt
hlt
sbb
hlt
hlt
hlt
fs
inc
push
hlt
hlt
hlt
nop
inc
push
sbb
hlt
hlt
inc
push
sbb
hlt
push
sbb
hlt
hlt
hlt
sbb
hlt
hlt
hlt
cmp
dec
push
hlt
adc
inc
das
xchg
daa
dec
sahf
inc
cmp
dec
ds
in
dec
aas
dec
pop
push
push
hlt
mov
nop
lock
leave
add
lock
adc
out
leave
xchg
cmp
aas
or
mov
dec
jge
or
cmps
push
or
jge
scas
pop
cmp
cmps
inc
inc
cmps
dec
xchg
xor
mov
cdq
dec
pop
xor
sub
push
sbb
add
add
xlat
push
push
or
xor
int3
and
dec
aaa
pop
adc
rol
lahf
adc
sub
push
retf
(bad)
and
mov
add
popf
xchg
or
stos
and
push
xor
mov
imul
adc
mov
or
xchg
movs
aam
test
cwde
push
push
xchg
and
fcom
jecxz
jno
and
pop
pop
cmc
push
sbb
call
mov
nop
or
fadd
and
pop
pop
mov
fcom
mov
and
jmp
mov
js
imul
ins
outs
mov
push
scas
sub
pop
pushf
adc
sahf
jl
inc
int3
cmps
pop
mov
jg
out
or
in
bound
sbb
and
or
sub
enter
xor
loopne
loopne
cmp
ror
adc
test
mov
xchg
adc
enter
mov
and
push
inc
cld
push
and
dec
in
inc
cwde
in
pop
int3
test
pop
js
pop
push
and
(bad)
scas
add
cvtps2pd
sbb
push
sbb
lahf
adc
(bad)
pop
xlat
sbb
dec
pop
sub
mov
cmp
xchg
icebp
mov
ds
push
popa
inc
ror
add
mov
dec
test
push
mov
aas
pop
lea
add
xchg
enter
aas
inc
aas
add
cs
pop
dec
adc
push
and
jb
adc
cmp
sti
pop
pop
std
daa
push
mov
add
push
jmp
data16
ins
inc
lea
daa
cmps
or
arpl
bound
outs
aas
inc
ret
shr
add
jo
loopne
outs
sar
je
leave
cmc
movs
or
lea
mov
cs
pop
xor
mov
inc
out
clc
mov
inc
xchg
push
or
test
pop
add
lds
xor
mov
imul
adc
sub
nop
out
and
and
push
or
int3
mov
inc
enter
sbb
mov
pop
(bad)
adc
adc
mov
add
inc
dec
pop
cmp
fisttp
outs
inc
lods
xchg
or
jl
xchg
pop
fisttp
inc
jno
pop
sar
cmp
out
inc
xchg
loopne
push
mov
or
mov
mov
hlt
jo
aam
retf
dec
pop
in
scas
icebp
test
inc
jnp
in
pop
dec
enter
xor
sub
and
push
fistp
xor
jbe
test
cmp
(bad)
mov
pop
out
pop
sbb
lock
pushf
scas
adc
clc
mov
sbb
jl
pop
inc
das
pusha
ins
cmps
push
sub
fs
(bad)
in
dec
and
js
(bad)
adc
sbb
adc
mov
sub
sbb
sbb
les
out
inc
aas
aas
xchg
es
(bad)
inc
pop
retf
xor
mov
test
jmp
adc
fwait
and
mov
sbb
adc
or
aas
in
int3
pop
sub
aam
add
hlt
sbb
pop
dec
test
popf
js
ds
cs
xchg
mov
or
clc
adc
jg
cmc
add
xchg
add
mov
inc
aam
(bad)
call
mov
jns
loopne
out
out
out
push
xchg
sub
jmp
jmp
in
cmp
fwait
iret
out
push
in
shl
loope
in
repz
std
loopne
aam
test
(bad)
(bad)
add
mov
fdivp
(bad)
cs
mov
and
jnp
push
stos
jne
mov
xor
xchg
mov
push
add
mov
xor
test
test
lahf
or
in
add
cwde
cdq
add
xchg
xor
cwde
mov
iret
xor
mov
adc
add
or
add
or
or
repz
ret
cdq
aam
jae
neg
adc
mov
mov
and
or
sbb
sbb
push
pop
pop
aaa
test
pop
pusha
loop
push
cmps
mov
rol
jae
mov
and
mov
outs
mov
or
xor
idiv
or
jo
xchg
mov
nop
cwde
adc
xor
xchg
adc
outs
(bad)
push
fisttp
cmps
int
dec
inc
push
test
fsub
jnp
fnstsw
shr
sbb
mov
ja
nop
popf
adc
scas
mov
movs
mov
ds
out
adc
das
fst
pushf
dec
test
and
push
mov
xchg
push
mov
pusha
dec
mov
sbb
push
cwde
nop
dec
and
cwde
inc
or
jns
mov
sbb
aaa
inc
out
inc
add
add
leave
(bad)
nop
push
cmps
pand
and
adc
je
inc
sbb
mov
and
adc
and
leave
inc
and
dec
int3
ret
aas
inc
xchg
popf
push
mov
dec
ret
das
or
mov
dec
or
or
stc
sbb
cmp
in
fcmovne
in
arpl
es
cmp
movs
inc
data16
sub
stc
push
aaa
inc
test
mov
jno
cli
dec
repz
dec
pop
dec
adc
jbe
xchg
dec
fmul
push
mov
xchg
data16
push
es
pop
rcr
cmp
nop
fs
ins
push
je
jl
jb
and
xor
xchg
sbb
cwde
enter
iret
in
mov
nop
retf
jae
call
push
cmp
in
(bad)
enter
nop
int3
rcl
adc
ret
add
fdiv
pop
out
cmp
xchg
xor
jbe
xchg
push
cmps
clc
xor
jecxz
mul
ds
adc
sub
imul
fidiv
push
out
inc
sbb
retf
movs
inc
jo
push
sub
fstp
xchg
rcr
in
fsub
sub
retf
fist
cmp
sub
xor
sahf
pop
ja
adc
or
push
ds
adc
inc
cwde
mov
fucomp
repnz
fistp
sti
inc
adc
fstp
cld
sar
mov
loope
movs
clc
test
std
in
push
push
test
inc
cmp
pop
mov
dec
cld
out
movs
mov
call
call
retf
push
mov
aaa
pop
dec
pusha
mov
jecxz
stc
xchg
int3
test
push
dec
push
fist
enter
(bad)
or
dec
data16
or
aas
call
and
push
aaa
cwde
pop
and
(bad)
retf
xchg
push
cmps
sbb
shl
inc
add
cmp
data16
sub
fstp
out
pop
lea
fldenv
aas
es
and
jl
dec
aas
imul
addr16
sub
stos
dec
inc
push
inc
fbld
test
and
dec
and
inc
pop
push
(bad)
mov
push
and
push
(bad)
xor
addr16
inc
dec
inc
scas
sbb
or
mov
dec
sbb
lods
loope
xor
jp
sub
sub
jo
sti
xor
cmp
push
lock
xchg
pop
jae
cmps
sbb
dec
inc
stos
inc
jb
adc
pop
(bad)
jae
pop
dec
add
cmp
push
push
or
lock
cmp
mov
cwde
jl
inc
add
aaa
das
jl
or
mov
sbb
jnp
cmp
ins
jbe
pusha
(bad)
pop
and
jo
out
pop
add
push
push
pop
sub
test
call
jne
and
and
les
popf
or
and
dec
cld
or
call
and
in
ins
adc
xchg
aam
mov
pop
repnz
ins
out
cmp
jmp
out
das
outs
add
fmul
dec
pcmpgtd
sbb
mov
mov
fsubr
xchg
call
test
or
add
mov
or
scas
rcr
mov
daa
repnz
dec
jp
popf
dec
bound
(bad)
mov
xchg
int3
dec
mov
outs
sub
add
cdq
add
pop
jae
xor
sbb
add
(bad)
dec
fisub
into
movs
cmp
jne
xchg
dec
sahf
out
popf
mov
push
cmp
mov
pushf
lods
mov
jbe
adc
or
sub
add
sub
jb
inc
xor
pop
mov
inc
and
jb
mov
xchg
rcl
pop
aas
xchg
pop
and
pusha
push
jo
xor
and
nop
and
leave
inc
cwde
mov
mov
pop
and
leave
shl
lock
add
adc
xchg
mov
xor
pusha
mov
mov
and
adc
xchg
pop
and
inc
jo
fiadd
mov
leave
inc
pop
and
ror
pop
and
inc
repnz
xchg
pop
leave
loopne
push
adc
jns
dec
and
or
inc
jb
push
or
or
push
(bad)
pop
push
clc
pop
inc
cmps
fldcw
cwde
popa
fcom
in
(bad)
dec
enter
enter
fcomp
fxch
(bad)
(bad)
loopne
jecxz
in
jmp
in
out
in
nop
daa
cmp
inc
adc
add
cli
or
or
ret
bswap
inc
ds
adc
mov
pop
stc
sub
sbb
add
mov
cld
adc
out
xchg
sub
sub
mov
xor
leave
sbb
mov
lahf
aaa
inc
jbe
imul
cmp
mov
(bad)
mov
bound
jmp
lods
inc
cmp
xlat
fadd
outs
xor
xchg
jg
outs
mov
or
push
push
int3
into
sbb
ror
mov
push
(bad)
fcomip
call
push
inc
enter
mov
cmp
and
daa
(bad)
retf
into
pop
inc
test
xchg
(bad)
(bad)
(bad)
(bad)
clc
js
aas
sbb
pop
(bad)
mov
addr16
leave
repnz
bound
and
(bad)
(bad)
jl
cld
gs
sahf
mov
sub
inc
aad
iret
dec
js
inc
mov
(bad)
(bad)
(bad)
jmp
loopne
jmp
xchg
test
stos
pop
out
sub
imul
(bad)
div
(bad)
(bad)
jmp
jl
xor
cmp
call
mov
stc
popf
sti
jmp
stos
push
inc
mov
push
sbb
sar
inc
jbe
int3
repnz
test
nop
fild
daa
movs
lahf
nop
inc
pop
stos
clc
scas
adc
(bad)
inc
pop
clc
(bad)
(bad)
call
repnz
aam
imul
loope
jp
iret
inc
bound
ds
mov
cmps
scas
mov
pop
or
add
(bad)
(bad)
(bad)
(bad)
cmp
xor
in
cmp
sahf
xchg
pop
cmps
lock
mov
popa
mov
fsub
pop
mov
(bad)
repz
mov
sub
and
and
outs
bound
xor
scas
retf
push
jne
mov
and
and
popa
je
xor
das
call
cwde
test
frstor
icebp
hlt
aaa
ret
push
out
fisubr
push
or
sahf
out
sahf
sub
cmp
inc
jns
out
push
push
pop
pop
jo
xor
out
jl
add
xor
xchg
sahf
add
movs
push
mov
jnp
lahf
push
shr
fsubr
or
or
push
add
lahf
out
xor
adc
or
or
(bad)
xor
sbb
adc
dec
dec
imul
push
call
mov
shr
dec
movs
test
and
addr16
imul
push
adc
dec
movs
test
fs
xchg
imul
push
rcl
je
je
leave
dec
ret
cs
js
popa
sub
into
js
js
mov
js
js
jae
movs
push
jl
movq
hlt
sub
pop
cmp
scas
jl
jl
loope
bound
jl
jl
movs
bound
jl
jl
push
repnz
pop
repnz
and
in
add
fild
fadd
fcom
or
and
sub
or
adc
jbe
mov
or
and
outs
and
mov
ins
push
sub
js
and
enter
ins
mov
push
(bad)
out
call
jo
ins
(bad)
int3
in
push
jl
sub
cwde
out
jecxz
mov
lock
icebp
je
and
inc
in
ss
add
add
in
in
push
pop
or
in
in
or
or
jae
and
xchg
cmp
xchg
adc
stos
or
xchg
rol
jns
push
adc
ins
add
xchg
sub
lds
add
in
call
sbb
push
add
sbb
cmp
int3
add
jb
dec
bound
jns
in
jae
aas
push
lahf
stos
jmp
cmc
es
imul
and
dec
push
mov
stc
out
jg
jmp
dec
cs
lahf
int
jbe
fwait
jecxz
enter
repnz
jns
pop
(bad)
push
fld
test
mov
dec
repz
pushf
and
cmps
ficom
enter
test
retf
sbb
leave
sbb
arpl
xchg
xchg
ss
ss
idiv
pop
push
or
pop
cli
call
jbe
idiv
cmps
jmp
repnz
pop
push
mov
lock
(bad)
pop
out
push
into
mov
pop
xchg
pop
cs
dec
sub
cmp
cld
(bad)
pop
mov
out
out
es
aas
iret
imul
push
scas
dec
adc
in
or
dec
clc
in
outs
adc
arpl
push
mov
push
in
or
dec
sub
jmp
jmp
stos
add
cmp
movs
in
in
pop
inc
cmp
shl
push
idiv
setp
pop
fimul
adc
mov
jmp
(bad)
xchg
rcr
xor
pushf
mov
js
stos
push
push
mov
and
or
adc
jg
dec
push
fld
scas
sbb
or
sbb
push
sbb
or
mov
push
cmp
ins
fcomp
js
cwde
repz
repz
repz
clc
inc
sbb
jle
pop
mov
shl
(bad)
std
call
pushf
js
mov
or
pushf
jmp
fsubr
push
cmp
int
repnz
int
es
lods
add
pusha
int
lods
mov
mov
push
rol
and
inc
and
pop
(bad)
(bad)
dec
loopne
in
pusha
or
and
cwde
loope
retf
push
sar
retf
dec
(bad)
mov
dec
sbb
mov
adc
jno
add
sbb
cmp
fwait
inc
inc
sbb
in
cs
xor
inc
pop
iret
repz
sti
les
mov
out
mov
loopne
loopne
bound
sar
fistp
mov
ficomp
cmp
pop
cmp
jns
shl
cmp
sahf
out
jmp
sbb
loop
iret
jnp
repz
call
and
out
sar
idiv
xchg
adc
fcmovbe
(bad)
dec
push
mov
sbb
lds
scas
mov
bound
mov
ja
mov
cmp
inc
mov
shl
aaa
(bad)
(bad)
call
cmp
addr16
and
sub
int3
jo
adc
mov
jmp
call
(bad)
(bad)
call
sbb
je
or
dec
or
lahf
dec
push
jg
stc
out
movhps
call
jmp
scas
outs
sahf
out
sahf
ds
push
pop
gs
jns
jns
mov
mov
xchg
mov
sahf
mov
rol
mov
fsubrp
repz
repz
dec
add
add
repz
repz
push
popa
add
repz
or
outs
mov
enter
icebp
sahf
out
iret
cld
or
sbb
sub
aas
dec
pop
push
mov
jno
out
sahf
jl
xchg
pushf
lods
mov
out
outs
enter
clc
jns
out
add
mov
xor
(bad)
jns
dec
add
add
out
out
mov
mov
int
jl
jns
jmp
or
iret
repz
sbb
add
outs
xor
repz
push
js
xchg
add
add
mov
mov
cmp
aad
repz
iret
add
or
(bad)
cmp
aas
xor
dec
push
add
(bad)
cld
repz
add
add
add
iret
add
stos
add
add
add
stc
iret
aas
out
jmp
jmp
push
push
push
stc
jg
out
push
push
sub
inc
push
push
dec
push
sub
push
out
jg
bound
xor
outs
jp
xor
xchg
fmul
lea
cmps
push
loopne
scas
mov
in
retf
push
out
retf
jns
(bad)
jg
push
enter
cwde
(bad)
jmp
repz
out
out
or
loope
adc
pop
add
push
sub
push
add
jns
jg
ss
push
pop
bound
out
imul
add
push
add
or
jns
(bad)
xchg
pushf
movs
pop
pop
add
jns
jg
mov
lds
pop
add
iret
aad
out
out
in
pop
add
out
test
sahf
jg
out
add
pusha
add
xor
jns
jg
or
cmp
bound
push
out
out
pop
fs
or
jno
jns
jg
jge
lea
push
xchg
lahf
stos
out
sahf
out
mov
jl
stc
in
or
repz
or
daa
std
pop
or
or
sbb
(bad)
(bad)
dec
adc
daa
sub
or
daa
inc
or
daa
dec
or
daa
push
mov
popa
daa
jle
bound
popa
jae
push
jae
adc
icebp
jle
arpl
je
sub
jnp
add
xor
and
sub
or
idiv
outs
or
cmp
cmp
imul
cmp
cmps
popf
inc
imul
adc
adc
pop
movs
out
rcl
and
jnp
adc
lea
xor
push
lea
xor
xchg
outs
mov
xor
cmps
loopne
test
mov
xor
lea
pop
mov
mov
enter
xor
test
ficom
stos
add
bound
xor
jbe
arpl
inc
xor
xor
ret
push
mov
add
inc
mov
cmps
movs
int
cmp
pop
retf
inc
fwait
pop
xor
and
outs
sahf
push
aas
cmp
push
sub
or
xchg
cmp
lea
cmp
fcom
(bad)
xor
fisubr
pop
pop
xchg
cmp
and
xor
cmps
cmp
xor
cmp
loope
xchg
dec
xor
gs
mov
imul
cmp
add
shr
rcl
pop
pop
jge
push
pop
es
ss
int3
call
sti
xor
xor
add
imul
mov
adc
xchg
adc
push
xor
pop
mov
xor
xor
adc
jecxz
pop
xor
or
imul
pop
xor
adc
adc
mov
cmp
out
cmp
data16
adc
add
in
std
sbb
sub
push
repnz
pop
mov
xor
xchg
or
jo
mov
stc
pop
or
sbb
xor
nop
xchg
add
xor
nop
xchg
add
xor
sbb
ss
aaa
pusha
jg
nop
cmp
xchg
imul
cmp
and
repnz
stos
arpl
jecxz
xor
fmul
sbb
addr16
xchg
push
cmp
pusha
mov
dec
push
cmp
das
imul
jae
add
ins
or
cmp
mov
fs
push
ins
mov
and
cmp
in
sbb
jb
ja
jne
pop
sub
xor
inc
adc
jecxz
mov
loope
push
cmp
popf
int
les
cmp
or
xor
shl
inc
push
bound
cmp
ja
sbb
ins
jne
pop
sahf
pop
add
xor
or
sub
ds
xor
aaa
movs
frstor
and
sub
cld
cmps
ins
retf
adc
xor
mov
aas
xor
cs
loopne
ss
and
add
xor
xor
adc
sbb
xor
push
dec
ss
lods
cmp
addr16
cmp
pop
mov
and
push
addr16
push
leave
js
pusha
sub
fdiv
fimul
in
mov
xor
aaa
sbb
inc
mov
push
push
popa
arpl
xlat
jbe
mov
hlt
adc
or
fadd
xor
daa
adc
add
cmp
out
imul
adc
jne
jge
gs
and
jo
ins
jnp
sub
imul
js
mov
out
fimul
push
xor
xor
aam
sahf
xor
cmp
xor
xor
sub
call
out
fidiv
dec
add
xor
jne
cmp
xor
sar
mov
cmp
repz
dec
add
xor
neg
jb
jo
cmp
mov
loopne
iret
mov
xor
push
mov
ror
xor
dec
daa
lods
shl
bound
popf
ja
(bad)
xchg
dec
add
sub
dec
mov
mov
and
xchg
dec
add
cmp
repz
push
ficom
dec
add
mov
mov
cs
fstp
dec
out
or
dec
inc
inc
or
jns
inc
inc
inc
inc
repz
lds
inc
inc
inc
sub
iret
inc
inc
scas
inc
jns
out
inc
inc
inc
inc
inc
iret
push
xor
fiadd
inc
adc
repz
inc
inc
out
sahf
mov
inc
inc
inc
inc
je
inc
sahf
inc
inc
ds
repnz
repz
inc
inc
inc
inc
sahf
cmps
arpl
inc
inc
inc
and
inc
iret
repz
sahf
inc
inc
inc
inc
inc
jmp
into
inc
in
sahf
out
inc
inc
inc
inc
out
fimul
push
inc
inc
inc
icebp
pop
ds
inc
inc
stos
inc
xor
loope
jno
inc
retf
push
fstp
mov
jnp
jle
arpl
inc
inc
inc
and
xor
pop
xchg
(bad)
jmp
jnp
popf
out
add
inc
call
stos
xor
inc
retf
push
(bad)
(bad)
push
(bad)
jmp
jnp
jle
cmp
sub
and
(bad)
icebp
stos
xor
ret
retf
xchg
cmps
out
fisubr
jp
inc
mov
sbb
pushf
adc
mov
xor
shl
fisub
jae
add
cmps
test
sbb
sub
mov
dec
inc
pop
pop
jnp
loopne
imul
dec
es
(bad)
sub
sub
outs
add
push
fild
mov
sbb
int3
cmps
cmp
addr16
clc
pop
es
mov
jns
rol
rcr
loopne
cmp
out
lock
add
adc
cmp
repz
sub
cmp
repz
inc
dec
push
pop
pusha
push
jo
or
cwde
mov
repz
ror
fsub
cmp
cmp
push
inc
xchg
cld
or
push
xchg
ja
mov
jns
popa
fisttp
push
push
push
lock
ins
out
out
add
adc
or
popa
or
push
pop
outs
xor
add
or
jmp
mov
rcr
jle
adc
adc
fs
outs
inc
cdq
les
in
(bad)
iret
mov
add
or
in
pop
add
aam
or
xor
shl
jnp
add
push
jnp
mov
pop
or
or
jle
iret
ins
jbe
add
or
or
or
or
or
dec
dec
jnp
add
imul
push
cld
sbb
cmp
jns
out
jo
test
iret
sar
cld
sbb
repz
mov
or
cld
or
popa
add
add
xchg
adc
dec
in
into
repz
pop
lods
pop
xor
pop
enter
aas
inc
add
lahf
mov
dec
pusha
pop
xchg
mov
cmp
adc
nop
aaa
mov
call
sbb
in
add
pop
mov
daa
js
not
jg
test
jns
and
push
je
cmp
mov
mov
jns
repnz
pop
je
int3
int3
es
jnp
or
xlat
push
sbb
das
xor
test
pop
fs
and
fmul
cmp
mov
pop
js
les
test
sbb
pop
pop
pushf
pop
in
dec
jnp
mov
dec
fiadd
cwde
test
idiv
sar
fsubr
nop
out
nop
aam
pusha
in
dec
enter
cwde
add
or
mov
in
rcr
loope
fbstp
and
fstp
sbb
out
cdq
nop
pop
sbb
xor
inc
pop
jnp
jnp
push
xlat
push
je
out
nop
and
mov
sahf
add
in
mov
(bad)
mov
into
fidiv
test
loopne
loopne
movs
pop
iret
jae
sub
lods
push
shl
jns
aam
cld
adc
test
cwde
push
pcmpgtb
pop
fcomp
call
mov
test
mov
mov
cwde
pushf
aas
mov
cs
mov
mov
imul
dec
ins
pop
lock
aas
adc
or
inc
jbe
cmp
push
push
das
inc
sub
xchg
mov
aas
pop
pop
aam
das
dec
adc
js
cmp
sbb
into
pop
test
pop
jb
mov
ins
add
pop
pusha
fnstsw
add
add
push
adc
or
lods
push
push
push
fcomp
inc
add
mov
cld
fwait
push
pop
int3
loop
push
pop
sub
aaa
jecxz
scas
loope
push
or
jo
cmp
call
loope
and
cmp
jbe
pop
ins
mov
pop
stos
movs
fisub
jg
dec
mov
or
rcl
dec
call
nop
inc
xor
daa
push
lds
outs
push
adc
inc
scas
cwde
cld
mov
pop
aas
pop
push
ja
aam
push
sysret
dec
and
mov
loopne
dec
scas
aas
pushf
neg
add
push
jne
test
out
push
enter
jo
mov
(bad)
xor
fcomp
push
fwait
int
mov
sub
pop
add
aam
data16
mov
outs
push
lock
popf
ins
ss
jo
push
mov
jb
movs
add
repz
push
or
mov
inc
add
addr16
dec
dec
mov
push
dec
pop
int3
sub
push
push
inc
xor
fsubr
cwde
xchg
jle
out
add
add
inc
cmp
outs
or
jp
add
add
pop
sbb
add
stos
(bad)
aaa
scas
inc
jb
bound
mov
(bad)
jmp
repnz
xchg
adc
push
cmp
dec
or
icebp
or
cld
mov
jmp
(bad)
(bad)
(bad)
call
hlt
cli
jl
aas
jno
inc
mov
pop
scas
scas
stos
movs
in
bound
dec
mov
(bad)
call
mov
push
xor
cmp
jmp
sbb
mov
dec
jge
dec
pushf
sbb
(bad)
(bad)
dec
aam
mov
push
jp
inc
inc
xchg
imul
lds
cmp
ret
(bad)
dec
dec
test
ja
(bad)
leave
push
pop
sysret
iret
inc
ins
movs
aam
cmovno
aad
test
push
inc
fcomp
dec
push
add
ins
pop
mov
adc
repz
cmps
push
and
loope
mov
out
sahf
out
loop
je
test
iret
repz
std
sar
call
sbb
clc
jns
out
cmp
pusha
test
mov
sar
repnz
icebp
and
cmp
repz
out
fs
test
je
repz
pushf
in
push
jmp
xor
sahf
push
jmp
push
addr16
push
jo
pop
sbb
mov
add
add
out
ja
push
or
push
sub
rol
inc
jnp
mov
adc
cwde
pop
sub
mov
inc
hlt
call
jle
sub
cmps
retf
push
(bad)
sti
fidivr
imul
bound
out
fmul
cli
add
cmp
subss
adc
repz
test
int3
or
sahf
cmps
mov
cmc
adc
outs
sbb
sbb
out
sahf
jnp
mov
iret
sar
sbb
or
repz
cmp
adc
cmps
xor
pop
pop
add
add
push
inc
pop
lahf
out
sbb
(bad)
repz
pop
mov
and
push
adc
imul
push
pop
icebp
stc
out
or
in
xlat
jmp
clc
popf
(bad)
dec
jg
pop
jge
(bad)
mov
test
fdiv
cmc
jmp
add
iret
in
int
ss
sbb
(bad)
cld
xor
push
loop
mov
push
sub
movs
(bad)
js
mov
iret
call
pop
daa
mov
out
scas
call
call
add
cs
(bad)
xor
fs
fdivr
mov
cmp
fdivr
lods
pushf
ret
imul
push
mov
lss
int
outs
add
or
aaa
xor
daa
cs
sbb
mov
ja
aas
imul
(bad)
cld
dec
das
imul
lock
add
cdq
(bad)
pop
aas
(bad)
cld
jnp
test
jp
jmp
(bad)
push
mov
inc
jle
sahf
dec
dec
das
jo
ror
sahf
push
rol
xchg
jmp
xchg
jnp
inc
xchg
add
imul
mov
push
into
push
and
push
mov
enter
pop
mov
ds
call
ret
fadd
jmp
into
mov
cs
mov
(bad)
fdiv
mov
push
push
pop
push
pop
outs
push
mov
push
sbb
lock
int
cmp
pop
or
add
add
outs
mov
cmp
push
cli
out
call
js
jge
iret
mov
int
shl
fsubr
push
fwait
mov
cld
or
or
loopne
dec
push
sar
xor
repz
cli
push
push
push
nop
out
nop
(bad)
fmul
fsub
cwde
into
shl
jg
mov
(bad)
jl
into
xchg
lods
xor
stc
cdq
mov
fmul
or
faddp
mov
(bad)
cmp
add
and
mov
sbb
cmp
pusha
fmul
dec
clc
push
cmp
sbb
scas
int
dec
int
jg
cmp
push
rcl
call
les
call
out
push
call
push
int3
ror
mov
jo
sbb
hlt
mov
cmc
dec
push
push
loope
push
mov
pushf
out
jo
ficom
pop
push
out
std
(bad)
fadd
pop
movd
imul
movs
outs
cmovne
iret
aas
call
jo
call
mov
sti
cwde
jmp
ds
lock
out
scas
out
adc
out
lahf
jg
out
pop
push
mov
test
(bad)
mov
(bad)
xor
(bad)
lock
dec
or
xlat
add
or
out
xor
rcl
aaa
add
adc
imul
adc
inc
jb
cli
(bad)
in
pusha
movs
hlt
outs
adc
inc
lahf
mov
out
cmc
dec
sub
pop
mov
pushf
push
jmp
mov
push
int
push
adc
cs
sub
push
jg
je
stos
dec
mov
inc
jmp
adc
fwait
call
pop
fdivr
inc
arpl
lahf
jg
push
shl
inc
inc
out
jmp
cmc
dec
lods
push
cmc
cmc
int3
and
adc
call
cmps
ins
wbinvd
add
popa
outs
jae
mov
test
pop
push
iret
repz
add
or
repz
mov
jns
movs
test
mov
out
jl
test
dec
jae
sahf
aam
leave
push
int3
sub
iret
repz
pop
out
cmp
cmp
jno
fwait
add
adc
add
fidivr
ds
bound
outs
or
pop
std
and
add
adc
and
or
adc
sbb
rol
mov
pop
test
or
mov
mov
jecxz
jns
inc
or
add
push
or
cmp
fld
add
xlat
mov
dec
xchg
jg
loopne
mov
outs
add
scas
pop
pop
or
lahf
sbb
mov
hlt
adc
mov
sub
mov
pop
cdq
in
sbb
push
(bad)
add
xor
xchg
pop
pop
imul
dec
or
add
inc
pop
icebp
push
(bad)
mov
add
jecxz
stc
xchg
push
in
xchg
add
adc
std
push
jo
or
imul
pop
(bad)
pop
bnd
jmp
nop
and
inc
ins
inc
lds
push
pop
inc
arpl
je
push
scas
or
scas
pop
xor
cmp
addr16
rcr
ja
or
add
xlat
inc
hlt
jl
and
push
and
adc
aaa
sub
fisub
les
ins
sub
xlat
out
fwait
push
out
aaa
push
(bad)
std
stos
lods
fcmovu
cld
call
cmp
add
push
mov
mov
push
pop
jg
push
add
jg
jns
dec
aaa
ss
fsub
hlt
iret
repz
cld
add
or
sbb
repz
jnp
and
or
push
xor
cmp
pusha
js
lods
rcr
push
cld
cmp
adc
push
aaa
pop
lods
push
lds
or
lea
add
out
pop
daa
xchg
jl
sahf
out
sahf
mov
clc
cmp
sar
sbb
push
repz
repz
nop
test
repz
mov
adc
and
inc
pop
jo
sahf
out
and
dec
repz
sub
push
and
rcr
push
adc
adc
cmp
pop
or
or
lods
aad
daa
pop
gs
rdseed
int
jmp
sub
iret
adc
pop
xchg
add
pop
sbb
lods
cdq
lock
idiv
add
xchg
push
mov
aam
daa
and
(bad)
outs
inc
add
sti
mov
jnp
or
or
or
(bad)
push
loopne
pop
sbb
adc
and
mov
push
jo
out
push
dec
add
or
inc
dec
push
cmp
out
adc
sbb
and
in
push
mov
aad
iret
and
push
pop
pop
add
jg
xchg
sahf
out
sahf
mov
out
in
jp
mov
inc
test
in
repz
test
add
data16
jns
push
call
mov
mov
pop
pop
call
loopne
add
popa
gs
xchg
add
imul
and
or
shl
jb
rol
dec
loope
gs
pop
xor
aas
in
push
push
imul
and
inc
adc
sbb
outs
jb
fcom
add
inc
push
xor
sub
and
ret
xor
out
cmps
xchg
sti
and
inc
call
mov
outs
imul
jmp
div
and
scas
adc
aaa
mov
or
popaw
pop
test
aam
sbb
pusha
retf
rol
cmp
and
into
cld
and
jmp
or
mov
pop
out
or
cmps
loopne
out
sbb
(bad)
out
(bad)
clc
pop
in
push
(bad)
jmp
and
mov
call
addr16
push
in
or
lock
cmc
or
ds
stc
or
call
aaa
jns
pop
push
push
sahf
pop
pushf
iret
and
add
xchg
je
popw
mov
call
or
jbe
ja
pop
mov
xchg
mov
pop
scas
pop
xor
es
rcl
pop
ins
leave
dec
add
xlat
pop
sbb
movs
and
and
add
iret
adc
pop
add
pxor
push
out
add
add
xor
jb
repnz
inc
dec
frstor
mov
(bad)
add
push
pusha
retf
add
ins
mov
push
and
pusha
test
push
sub
mov
mov
jecxz
jge
das
mov
and
pop
push
je
inc
mov
add
xor
mov
add
movups
adc
imul
push
or
pop
or
ins
xor
ins
mov
dec
das
add
sub
inc
int
pusha
aad
inc
icebp
push
push
push
push
mov
adc
pop
adc
mov
sbb
dec
push
or
adc
inc
dec
xor
push
dec
cwde
dec
das
rcr
dec
mov
aas
cmp
pop
ja
adc
popa
xor
add
(bad)
je
or
jecxz
stos
add
push
push
imul
out
jne
mov
add
push
adc
jne
arpl
and
mov
xchg
fucomi
pop
add
fcom
dec
fs
jo
pop
imul
sbb
sbb
movntq
dec
or
aaa
popa
outs
xor
sub
jae
push
push
add
adc
movs
in
xchg
and
adc
and
and
lods
cmp
sub
icebp
mov
cmps
and
arpl
test
aaa
and
ins
dec
jae
pop
movs
outs
loopne
and
data16
outs
out
cmp
xchg
sub
and
cld
add
mov
and
add
push
adc
aas
mov
inc
es
popa
and
push
out
loopne
or
and
loopne
or
and
push
sbb
dec
or
inc
call
bound
add
je
popa
inc
lock
gs
aaa
pushfw
ins
sbb
mov
bound
rcl
popa
outs
push
es
std
out
add
popa
or
mov
or
pop
and
ins
dec
popa
inc
jb
fcom
data16
xor
ja
jne
inc
dec
add
lods
inc
test
stos
outs
push
sub
add
and
sbb
jns
fadd
fs
and
dec
ret
arpl
shl
adc
add
or
nop
fadd
popa
sub
loop
into
sbb
inc
sub
inc
sub
or
cs
adc
scas
sbb
mov
xchg
sbb
push
data16
lock
sbb
js
adc
(bad)
clc
std
jae
jne
ret
xchg
sub
cmp
add
jo
cdq
and
repz
in
test
mov
push
(bad)
cwde
nop
js
push
mov
jno
popf
push
push
sti
pop
push
push
out
jmp
sub
inc
(bad)
jl
fistp
sub
dec
cmc
aaa
add
cmps
(bad)
pop
and
jne
jge
cmp
arpl
outs
sub
sbb
fcom
cmp
xchg
xchg
imul
jb
nop
cmp
js
xor
outs
xchg
mov
sbb
push
inc
add
loopne
mov
add
cmp
mov
sti
sbb
sub
ins
dec
jnp
jge
push
sub
or
(bad)
inc
sbb
mov
lock
pop
dec
arpl
add
and
or
mov
and
aaa
cmp
push
call
dec
jns
js
je
cmp
in
sub
jbe
popa
mov
adc
fistp
movs
fdiv
lock
das
shl
xchg
xor
mov
daa
cmps
pop
push
adc
jo
rol
sbb
mov
pop
addr16
inc
fist
mov
pop
push
icebp
pop
add
fistp
shl
das
adc
and
xor
sub
push
mov
shl
mov
add
in
add
lds
out
xor
mov
popa
ins
jae
pop
dec
or
jb
pop
xor
aaa
sub
add
push
inc
xchg
xor
add
je
mov
cmp
push
or
cwde
stos
and
push
xor
loop
push
or
aas
outs
outs
or
dec
in
sahf
mov
shl
dec
fcom
jae
dec
push
dec
push
ins
data16
push
jae
pop
push
add
addr16
mov
addr16
sub
ret
jno
sub
or
fld
push
pusha
xor
add
add
xor
dec
pusha
and
pop
lods
xchg
clc
mov
adc
sub
sub
sub
sub
push
repnz
xchg
cwde
mov
inc
sub
inc
fiadd
mov
aad
sbb
mov
pop
jge
cmp
inc
cwde
lahf
retf
mov
popf
imul
mov
pop
aaa
cmp
js
cdq
ins
add
je
jge
je
jae
mov
test
sbb
pop
xchg
aam
jo
loope
sub
add
inc
mov
dec
adc
mov
scas
push
popa
sbb
cmp
cmp
(bad)
jbe
cmps
inc
push
xchg
mov
pop
movs
std
add
mov
movs
adc
les
jno
mov
push
jmp
fsub
ss
sti
std
adc
adc
js
cmp
fbstp
and
and
data16
jns
pusha
add
xor
jnp
ret
push
dec
and
jns
adc
xor
sbb
aad
adc
add
adc
add
out
retf
sub
aas
cs
popa
sbb
mov
loope
lods
test
js
repz
cs
mov
pop
aas
sub
adc
pop
imul
mov
mov
adc
and
aam
imul
cmp
adc
imul
push
in
jne
xchg
sub
mov
and
cmp
or
or
adc
push
aas
add
ss
add
add
add
ins
push
xor
mov
add
popa
pop
dec
ins
mov
add
inc
fnstsw
xchg
sub
xor
jle
aad
fnsave
cmp
cmp
pop
pop
ror
or
push
pop
inc
inc
add
push
fidivr
sub
or
dec
dec
add
movs
mov
and
and
scas
jmp
push
pop
inc
push
inc
dec
cmp
sbb
(bad)
sbb
push
inc
xchg
mov
ficomp
pop
or
inc
push
push
pop
sbb
and
dec
or
mov
or
aas
jnp
cs
lods
fwait
lods
add
xchg
and
sbb
dec
pop
add
add
cmp
repz
add
cmp
das
pop
xor
test
xor
xor
jg
add
pop
daa
add
inc
mov
loopne
cld
dec
call
cdq
pop
mov
pop
add
add
xor
aaa
repnz
sub
clc
pop
call
add
loope
ror
pop
aaa
imul
or
add
and
dec
xchg
dec
pop
add
xlat
jno
scas
cmp
inc
inc
mov
xchg
ret
pop
or
pusha
mov
push
push
jbe
dec
jge
sub
iret
dec
div
scas
mov
(bad)
neg
push
jno
xlat
add
push
lods
lahf
fild
add
or
imul
pushf
retf
(bad)
or
add
(bad)
sti
adc
add
adc
setns
push
adc
stc
stc
or
xor
add
sbb
inc
stc
stc
stc
stc
sbb
dec
sbb
push
push
add
add
stc
stc
push
add
add
stc
stc
stc
sbb
mov
add
add
mov
aam
(bad)
(bad)
mov
fldenv
mov
or
add
inc
add
(bad)
stc
stc
and
lock
stc
push
add
jl
repz
or
pop
out
jmp
repz
or
or
or
jge
mov
sbb
or
das
inc
dec
xor
xor
repz
pusha
add
add
stc
or
jo
add
cld
(bad)
add
add
pop
ret
std
aas
add
xchg
popf
lahf
lahf
pop
(bad)
and
mov
sub
mov
add
cdq
sahf
lahf
ret
push
add
pop
push
cmps
sub
out
ret
stc
stc
sub
out
add
lock
repz
add
add
stc
add
cld
inc
out
mov
outs
push
inc
add
add
push
mov
add
add
sbb
sub
sub
icebp
add
repnz
pop
scas
or
inc
pop
cld
cld
add
add
push
cs
add
stc
mov
add
add
aas
aas
aas
xor
dec
add
add
aas
aas
aas
xor
xchg
xor
popf
xor
movs
pop
add
pop
add
add
ss
aas
aas
aas
aas
aaa
add
cmp
aad
add
cmp
out
adc
out
dec
mov
test
(bad)
add
dec
mov
sar
cmp
or
cmp
sbb
cmps
or
add
jns
add
add
xchg
rol
add
add
sbb
add
or
cld
ret
sub
adc
add
and
push
cmp
add
sahf
xchg
or
add
add
test
outs
jns
cmp
sbb
outs
inc
jbe
xchg
adc
mov
inc
pop
push
ret
mov
jmp
imul
adc
push
outs
jo
ins
outs
outs
adc
ins
imul
mov
imul
movs
fs
popa
lods
pop
inc
bound
push
push
and
es
pop
mov
ins
inc
arpl
push
ins
or
imul
cmp
ins
(bad)
adc
xor
call
fiadd
adc
push
aam
cld
je
jge
call
enter
addr16
ja
nop
addr16
hlt
dec
imul
inc
mov
cmp
dec
mov
outs
nop
daa
les
cmp
push
fnstenv
inc
sub
loopne
imul
pop
pop
loopne
mov
outs
outs
push
je
mov
addr16
jo
add
inc
ins
jo
adc
loopne
stos
xchg
push
cmps
cs
adc
loope
mov
push
ins
out
jbe
sub
pop
fucom
jb
int3
fmul
dec
mov
or
mov
or
jno
mov
pop
dec
xor
loop
adc
data16
or
es
outs
push
mov
dec
ins
or
aam
imul
imul
adc
ins
add
outs
push
jns
cdq
je
jns
hlt
or
dec
add
aad
add
enter
js
mov
add
out
pop
sub
mov
jns
sbb
ja
inc
xor
mov
outs
test
(bad)
mov
add
add
push
pusha
sbb
jle
imul
add
or
daa
dec
ins
mov
imul
mov
jge
mov
adc
pop
push
jmp
and
jo
and
into
or
sbb
adc
fs
mov
cmps
gs
loop
outs
shl
add
aaa
adc
mov
rcl
int
mov
push
add
popa
(bad)
push
fmul
adc
clc
sub
sub
cld
fsubr
cmp
imul
sbb
call
stos
push
jns
aam
dec
add
sbb
add
pusha
punpckldq
mov
gs
push
adc
push
imul
test
ins
in
push
gs
jbe
call
or
imul
je
enter
push
sbb
push
cmp
fwait
adc
jae
jne
mov
push
pop
nop
fs
jo
fstp
add
les
lds
dec
sahf
out
mov
leave
retf
in
retf
int3
icebp
bnd
pop
dec
inc
mov
push
mov
jns
cmps
mov
mov
jns
add
ret
xchg
mov
repz
xchg
rcr
out
jns
cmps
push
(bad)
aad
sar
sahf
xchg
(bad)
call
out
icebp
xchg
mov
aaa
mov
cmp
push
popa
push
fwait
push
test
mov
pop
dec
push
mov
in
or
enter
push
add
sbb
fs
in
in
adc
leave
dec
and
dec
sbb
or
in
mov
repnz
inc
add
sbb
pop
out
(bad)
fs
adc
add
add
jge
vmwrite
dec
and
or
xchg
scas
ds
add
sub
cmp
add
bswap
in
fs
(bad)
outs
ret
ror
into
leave
leave
leave
leave
int
retf
daa
mov
iret
scas
popa
das
rcl
mov
pop
aad
(bad)
pminub
dec
fstp
add
ror
or
in
in
or
or
in
sahf
mov
adc
cmp
lahf
bswap
jle
outs
adc
sub
pop
pop
sub
aas
das
cmp
xchg
fucomi
pop
dec
sbb
push
cs
leave
leave
leave
in
xor
xor
xor
xor
movs
inc
comiss
mov
in
in
sub
std
movntps
sub
out
es
cmp
mov
mov
or
adc
leave
leave
adc
adc
add
adc
sbb
and
inc
aas
dec
add
pushf
pushf
pushf
int3
mov
es
xor
das
aaa
or
inc
and
jb
xchg
fimul
fneni(8087
and
repnz
cmp
es
mov
das
aaa
nop
mov
sub
inc
add
outs
or
cmp
or
out
addr16
outs
mov
(bad)
das
add
icebp
outs
das
jmp
out
or
leave
xchg
outs
dec
xor
aaa
rol
pop
dec
ret
gs
out
cmp
mov
mov
mov
inc
jmp
mov
int3
and
pop
or
jns
mov
or
jns
(bad)
imul
xor
add
adc
rol
xor
cdq
scas
sbb
das
sbb
aas
jl
movzx
leave
leave
adc
leave
enter
push
or
xor
ins
repnz
lahf
push
pop
outs
aaa
pop
inc
outs
mov
aaa
aas
outs
aas
das
aas
leave
enter
out
dec
adc
leave
pop
pop
pop
aas
pop
jl
repnz
pop
push
adc
test
mov
or
mov
add
das
or
cmp
outs
push
pop
bndldx
jb
xor
enter
adc
adc
adc
mov
sub
sub
push
outs
daa
mov
sbb
outs
xor
out
fisttp
(bad)
xor
jbe
frstor
out
ss
ss
lahf
fcmovne
leave
in
outs
ss
(bad)
xchg
sbb
cs
jnp
mov
dec
and
aas
push
or
daa
mov
dec
mov
sbb
fisttp
pop
movq
mov
aas
cmp
add
pop
fmul
and
and
sub
cmp
fsubr
jb
adc
leave
leave
ins
(bad)
movhps
jg
fwait
mov
jg
aas
cmp
sbb
or
mov
push
push
pop
pop
push
xor
cmp
pop
or
pushf
mov
bndldx
pop
and
daa
inc
pop
adc
adc
xchg
sbb
sub
sub
sbb
dec
outs
pop
sbb
push
xor
dec
dec
xor
pop
jb
jns
das
cs
cmp
or
mov
push
add
pop
and
fwait
lahf
and
and
in
fwait
mov
jg
cdq
or
or
jb
(bad)
bndldx
add
in
add
outs
fwait
ins
mov
das
pop
dec
push
das
mov
ret
pop
push
cmp
sbb
mov
cmp
cmp
dec
dec
dec
pop
pop
fucomi
in
pop
dec
pop
pop
pop
ffree
outs
mov
das
inc
dec
inc
aas
(bad)
dec
xchg
pop
push
(bad)
dec
adc
or
dec
(bad)
mov
pop
(bad)
mov
push
js
dec
imul
aas
push
(bad)
mov
jg
loop
add
in
dec
push
rcr
jle
or
dec
mov
cs
sti
jecxz
stos
dec
pushf
adc
leave
leave
nop
add
inc
or
add
sbb
adc
dec
test
dec
pxor
mov
bsf
or
sbb
call
push
jge
cmps
rcl
push
lock
sbb
sbb
cs
adc
das
int3
scas
adc
sbb
in
in
push
popw
sbb
aad
psubusb
das
fsubr
fnsetpm(287
lsl
pop
loop
sar
pop
lock
fisttp
aas
push
pxor
dec
mov
in
adc
adc
fisubr
push
aas
push
push
pop
or
pushf
fmul
jg
sbb
mov
lahf
sbb
sbb
clts
aas
push
das
in
in
push
push
adc
sbb
dec
or
inc
sahf
pushf
sbb
pop
push
or
int3
mov
mov
(bad)
cld
jne
pop
bsf
in
div
outs
xor
pop
xor
popf
pop
aas
inc
inc
(bad)
outs
fs
in
dec
aas
or
in
dec
inc
inc
dec
das
xor
fmulp
dec
dec
scas
cs
jb
push
pop
aas
mov
inc
inc
pop
inc
inc
aas
leave
leave
enter
push
pop
pop
outs
mov
fcomp
dec
push
aas
push
(bad)
push
nop
push
test
dec
push
aas
out
push
or
or
or
add
mov
sbb
push
lahf
ret
in
ss
adc
(bad)
pxor
in
jb
inc
movaps
fcmovne
in
adc
cmp
cmp
sub
dec
or
ds
fsubr
dec
sub
popf
int3
xchg
or
adc
inc
pop
aas
fcmovne
in
jbe
das
inc
pop
popa
pusha
cmovge
inc
nop
push
scas
push
(bad)
jb
mov
push
dec
in
in
jbe
dec
push
push
push
pop
(bad)
leave
push
pop
add
pushf
mov
aas
push
adc
pushf
or
push
pop
popf
pop
mov
add
jbe
mov
pop
jg
aas
jnp
fld
aas
arpl
fnsetpm(287
enter
gs
pop
es
xchg
gs
ds
femms
jbe
mov
bound
outs
bound
bound
jns
sbb
add
aaa
adc
add
dec
rol
or
sahf
scas
pop
in
or
das
or
add
test
or
or
push
cmp
inc
cs
adc
adc
adc
jo
jle
cmp
mov
imul
mov
mov
pop
add
sbb
aas
pop
ret
inc
lock
sbb
pop
enter
or
rcl
adc
popf
or
ss
jp
pop
and
sub
sbb
add
mov
cmp
sbb
or
add
sub
lahf
mov
daa
add
sti
pop
sbb
ss
fisttp
imul
xor
pop
(bad)
out
xor
inc
xor
or
ficom
add
test
adc
inc
loope
xor
(bad)
mov
lahf
inc
add
pop
inc
out
fiadd
rcl
sti
inc
scas
dec
pop
inc
inc
stos
cmp
add
jecxz
fimul
push
xchg
push
jle
mov
push
add
add
in
jnp
cmp
pop
add
addr16
xchg
(bad)
pop
pusha
adc
add
bound
arpl
xchg
sbb
pop
arpl
add
pushf
sbb
pushw
data16
adc
mov
imul
cmp
nop
push
mov
or
push
ins
mov
ins
add
out
popa
neg
add
and
ins
or
xchg
or
sub
jnp
jl
jge
idiv
jg
add
(bad)
shr
add
push
or
mov
mov
outs
cmps
fiadd
mov
add
(bad)
mul
(bad)
nop
add
add
push
or
cwde
xchg
cdq
add
mov
sbb
sahf
sbb
mov
pop
mov
mov
movs
movs
mov
cmps
add
out
test
stos
add
ficom
lods
cmp
adc
scas
das
stc
mov
mov
add
loopne
nop
mov
jbe
add
mov
mov
mov
jb
imul
mov
jg
add
stc
nop
add
add
mov
mov
mov
add
mov
sub
cmp
push
mov
mov
add
lds
cmp
add
sub
xchg
stos
jne
rol
mov
xchg
pop
and
les
lds
add
test
ins
les
mov
push
enter
ins
enter
jb
retf
xlat
cs
int3
add
retf
dec
add
xchg
dec
scas
iret
rol
iret
shl
repnz
jmp
mov
sar
jb
shl
pop
sub
leave
ins
mov
ins
add
(bad)
add
pop
enter
aad
add
(bad)
lods
sub
repnz
jns
sbb
sbb
push
ins
ja
fild
fsubr
test
add
(bad)
pusha
add
inc
ins
fbstp
mov
fdivp
fild
inc
(bad)
sub
cmovae
fidiv
sar
add
and
loope
push
mov
mul
push
in
aaa
mov
in
pop
ficomp
jmp
add
jnp
fisttp
pop
movntps
add
pop
pop
scas
xor
add
mov
mov
add
aad
rcr
call
aaa
ins
or
ins
sub
into
ins
jmp
add
dec
pop
mov
jmp
lahf
ja
jmp
in
sub
out
add
out
xchg
sub
jnp
mov
mov
sbb
sub
paddsw
sub
pop
cmps
jnp
imul
repz
imul
hlt
add
or
add
inc
shr
ins
ret
push
pop
in
adc
div
mov
(bad)
into
add
push
neg
not
pmuludq
mov
xchg
ins
add
mov
cli
sti
push
pop
repnz
mov
cld
add
std
ins
aam
bound
add
(bad)
loopne
outs
out
push
inc
cld
add
(bad)
ficom
and
mov
inc
pop
inc
pop
enter
add
add
add
add
add
xor
in
add
dec
mov
out
push
jmp
(bad)
ud2
add
jae
mov
(bad)
dec
add
add
gs
add
in
ins
mov
or
add
xor
imul
add
add
test
or
ins
mov
call
xchg
add
or
adc
add
push
sgdtd
pop
push
imul
add
and
sub
add
das
push
lods
cmp
add
aaa
push
in
adc
push
adc
add
popa
sbb
cmp
pop
add
or
add
cmp
add
pop
dec
in
lods
ins
pop
cmp
pop
jnp
add
or
add
or
sbb
dec
and
xchg
add
mov
push
add
and
in
push
ds
and
pop
jbe
mov
pop
sub
pop
ds
and
and
sbb
add
in
adc
fiadd
es
and
mov
jg
lahf
add
(bad)
mov
arpl
add
add
sub
mov
add
xchg
sub
sub
sub
outs
mov
sub
sub
mov
and
mov
mul
dec
mov
inc
jo
pop
sub
jnp
aas
aas
mov
sbb
ins
jae
add
das
add
lds
sub
add
inc
xor
add
inc
test
ins
add
aaa
aas
(bad)
mov
push
stos
mov
pop
inc
cmp
add
aaa
push
add
cmp
fisubr
jae
cmp
repnz
ins
add
add
leave
jae
adc
cmp
push
enter
ds
add
add
ficomp
add
and
add
rol
inc
add
sub
in
inc
add
inc
and
dec
mov
inc
add
dec
ins
and
jg
add
aaa
add
adc
push
dec
add
dec
add
and
fidiv
dec
dec
or
dec
pop
push
fsubr
add
cmps
mov
mov
push
add
ins
add
add
xor
push
xor
push
push
add
sub
out
push
push
push
add
jg
add
leave
add
add
pop
test
retf
add
xor
inc
mov
pop
add
imul
jbe
gs
mov
aas
pop
dec
jnp
pop
adc
add
xchg
cwde
pop
xchg
scas
sbb
mov
and
fnstenv
in
bound
add
sub
ins
outs
mov
outs
and
add
add
addr16
pop
push
mov
or
imul
ins
mov
(bad)
ins
add
add
push
outs
outs
ins
mov
outs
or
add
ret
push
push
inc
cmp
add
jno
add
or
pusha
sbb
add
outs
push
enter
jne
push
pop
je
pop
dec
aam
sar
add
ja
leave
xchg
sbb
jae
xchg
fmul
push
mov
add
in
cmp
xchg
aad
cmp
jge
ja
add
jg
or
sbb
mov
add
cmp
or
sti
test
add
inc
scas
xchg
pop
jb
jb
mov
dec
adc
ret
add
popf
fsubr
mov
pop
mov
add
fcom
mov
inc
mov
jmp
add
aas
in
je
add
dec
ins
enter
in
lahf
and
add
dec
add
xchg
inc
push
add
push
mov
mov
(bad)
pop
sub
jle
add
sbb
xchg
add
xchg
jg
nop
mov
aaa
mov
div
pusha
ja
pop
mov
stos
lods
pop
inc
pop
mov
repz
cdq
call
jg
add
rcr
add
push
xchg
retf
(bad)
mul
mov
popf
dec
push
add
mov
scas
pop
mov
jg
jg
add
in
sbb
add
fisubr
mov
add
push
xchg
push
add
pushw
add
add
ss
xchg
into
or
add
inc
fwait
mov
outs
add
aas
nop
dec
test
aad
add
jae
or
cwde
fimul
mov
pop
cs
or
add
or
lods
pop
fbld
aas
outs
nop
pop
mov
add
mov
adc
dec
add
adc
cmp
jl
add
(bad)
add
adc
jbe
aaa
or
add
icebp
data16
mov
jg
xor
mov
sbb
in
stc
out
mov
mov
add
xchg
pop
mov
mov
cmp
mov
pop
sub
pusha
aas
aas
xlat
add
ins
pusha
sbb
or
aad
push
push
or
pop
add
sub
inc
inc
add
add
and
fwait
jg
nop
mov
add
lea
test
add
(bad)
jo
les
or
shr
adc
adc
inc
mov
rcl
add
pop
adc
mov
xchg
jnp
push
inc
out
mov
adc
pop
or
sbb
adc
xchg
mov
or
pop
mov
add
adc
or
sub
nop
add
(bad)
mov
add
add
add
or
ret
inc
or
ficom
add
ret
(bad)
push
add
add
add
(bad)
jbe
sar
add
mov
mov
leave
or
add
fwait
add
retf
add
push
xchg
dec
inc
sti
int3
add
add
lods
movs
loop
out
add
push
popa
lahf
pop
push
add
mov
or
push
aas
pop
or
movs
dec
push
or
push
pop
ins
pop
push
jle
add
iret
add
pop
sub
sub
cmp
lds
push
xor
push
mov
and
shr
(bad)
sub
rol
jecxz
jae
push
or
aaa
add
add
add
(bad)
pop
ror
add
rol
sub
mov
aam
sar
test
xor
add
aad
popf
test
scas
fadd
dec
dec
sub
inc
mov
add
cmp
fld
ins
movs
push
or
xchg
inc
add
push
test
push
mov
add
dec
inc
in
mov
push
enter
push
lods
push
(bad)
inc
adc
add
in
fadd
add
add
mov
lods
inc
jecxz
add
mov
add
loope
and
das
or
add
loop
mov
inc
add
scas
pop
or
add
add
add
xchg
add
pop
repnz
leave
jmp
mov
or
add
shl
popa
mov
xor
cmp
lea
jb
das
jg
rol
or
dec
adc
adc
out
mov
in
call
cwde
cld
cmp
icebp
lock
add
in
stos
cmp
add
repz
hlt
adc
cmc
add
not
jno
pop
cmc
mul
imul
push
sub
dec
in
mov
jg
add
sti
and
test
(bad)
fs
and
inc
add
add
jae
add
inc
add
(bad)
or
aad
xchg
in
add
add
ret
mov
inc
add
add
or
les
cmp
dec
mov
std
scas
or
add
mov
add
adc
jmp
in
or
sub
fsub
or
loop
mov
add
nop
ja
mov
add
stc
jns
movlps
adc
adc
add
es
and
popa
aad
jmp
adc
push
dec
cs
ficom
jmp
movs
imul
fist
add
mov
in
sar
add
test
push
scas
add
adc
jnp
ret
inc
inc
add
rcr
push
xor
add
sbb
pop
inc
or
pop
xor
push
mov
and
cs
add
fidiv
add
stos
or
sbb
and
add
repz
sub
ins
inc
pusha
mov
mov
arpl
pop
add
test
jmp
sbb
imul
pop
ja
xor
mov
or
cwde
adc
sub
mov
add
add
add
test
mov
push
or
imul
pop
fisttp
dec
fcomp
pusha
mov
mov
sub
scas
test
add
enter
cmp
push
add
add
sbb
aas
aas
push
leave
mov
dec
push
sub
(bad)
jmp
mov
fist
add
and
inc
jg
adc
push
add
mov
and
add
dec
adc
and
add
and
add
adc
add
(bad)
push
daa
and
add
add
sub
sub
das
inc
add
movntps
sub
inc
add
cs
inc
and
das
xor
xchg
ins
add
or
add
add
daa
add
out
(bad)
add
xor
xor
push
add
jnp
or
jnp
add
add
xor
sti
cmp
adc
cmp
mov
push
neg
add
add
adc
das
mov
fcmovne
ds
fwait
xchg
pop
sub
xchg
or
cmp
inc
add
adc
aas
inc
add
inc
adc
pop
arpl
add
adc
lods
jnp
add
dec
ss
add
pop
add
repnz
dec
ins
add
add
ficomp
dec
add
push
dec
add
sbb
xor
jb
add
outs
xchg
jg
add
push
add
xchg
and
pop
push
push
adc
jnp
push
or
inc
push
add
jg
add
add
push
sub
pop
add
pop
das
in
cs
pop
add
add
dec
leave
pop
add
mov
add
pop
add
sbb
pop
mul
jbe
fadd
aas
bound
add
inc
adc
arpl
add
add
or
daa
inc
xchg
add
and
push
add
xor
and
adc
imul
fsub
push
add
or
push
and
add
add
jmp
and
add
aas
test
inc
ins
ins
add
xchg
in
add
outs
jg
push
pop
adc
and
inc
mov
mov
outs
add
or
int3
pushf
and
fisubr
nop
push
push
ins
and
mov
and
sub
dec
sub
nop
jmp
or
add
or
ins
add
fistp
xor
or
pop
test
xor
mov
cmp
xor
pop
aaa
pop
add
mov
mov
fild
xchg
mov
push
rcr
push
addr16
lods
mov
xchg
or
inc
mov
cmp
mov
lods
cmp
sub
fcmovu
or
sbb
mov
dec
aas
fwait
add
push
sbb
pop
ins
pop
push
sbb
jg
inc
mov
add
(bad)
mov
jg
lods
pop
test
add
mov
and
rcl
movs
repz
test
jb
lahf
adc
xchg
mov
aam
fld
cmps
push
jno
sbb
inc
push
inc
call
mov
push
mov
and
lds
stos
push
je
ins
inc
inc
rcl
xor
add
or
sbb
push
or
mov
push
mov
mov
pop
push
ins
push
push
lsl
fisub
sub
stos
add
dec
dec
push
enter
add
mov
mov
sbb
dec
dec
retf
es
lea
inc
push
retf
push
inc
cmp
inc
loop
jg
push
dec
inc
dec
dec
dec
dec
inc
dec
push
dec
dec
push
push
push
imul
pop
pop
pop
inc
pop
add
jb
pusha
pop
popa
jg
mov
addr16
imul
cli
ins
outs
outs
jo
loopne
jbe
js
nop
mov
jnp
(bad)
jmp
jle
add
xchg
mov
call
xchg
xchg
dec
xchg
dec
xchg
dec
xchg
dec
xchg
cwde
cdq
xchg
and
enter
dec
pushf
popf
leave
xchg
or
dec
sahf
dec
lahf
mov
add
dec
pop
mov
dec
movs
jg
pop
inc
(bad)
jmp
stos
dec
stos
lods
lods
scas
scas
mov
mov
mov
in
outs
inc
mov
mov
mov
mov
ret
ss
add
inc
adc
stos
call
push
pop
pop
inc
inc
in
add
scas
or
mov
leave
(bad)
mov
cwde
test
retf
movs
adc
popa
sti
loope
sub
fs
adc
fmul
pop
pusha
aas
jnp
dec
mov
jo
ror
nop
cld
xchg
xchg
xchg
in
ret
call
mov
movs
or
add
inc
js
cmps
ret
(bad)
lds
into
iret
rcl
sar
and
(bad)
xlat
fcomp
fcmovu
cmp
jecxz
call
add
in
out
jmp
icebp
repnz
cmc
sbb
sar
idiv
stc
cli
sti
cld
std
(bad)
(bad)
inc
pop
fsubr
ss
add
add
das
(bad)
mov
sbb
add
mov
bnd
sub
jnp
test
jbe
div
xchg
add
js
mov
aas
or
mov
clc
push
js
movs
mov
push
arpl
in
stos
inc
push
inc
add
jmp
add
sbb
jge
add
in
pop
leave
adc
adc
and
push
aad
cld
mov
sub
push
and
iret
sti
sbb
popa
add
inc
push
push
iret
nop
movs
mov
out
or
sbb
inc
pop
(bad)
out
ins
xor
ss
retf
iret
adc
(bad)
(bad)
(bad)
jmp
and
mov
jbe
mov
adc
fidivr
xchg
mov
out
dec
repnz
lock
mov
pop
rcl
push
fcmovnbe
cdq
jno
push
(bad)
sbb
fs
(bad)
(bad)
(bad)
call
cmp
sub
xlat
mov
pop
outs
imul
in
jecxz
ret
and
out
movs
dec
jne
inc
push
adc
out
inc
iret
pusha
ins
add
add
enter
add
iret
repz
pop
jo
arpl
push
mov
jns
(bad)
cmp
test
mov
pusha
sti
cmp
repz
(bad)
call
iret
repz
shl
sahf
out
hlt
or
cmp
sbb
lahf
out
int3
lock
jbe
push
pop
jge
out
sub
out
fisubr
push
jo
movs
shl
jns
jns
sbb
ds
push
mov
sar
fmul
int
inc
ins
ds
repz
mov
in
adc
jns
out
xor
test
repz
xor
mov
imul
shl
inc
lahf
out
sahf
jo
movs
(bad)
lock
cmp
repz
inc
je
test
call
cmp
jns
out
lods
fdivr
sbb
out
jns
out
push
push
js
int3
lock
out
neg
aam
push
pusha
xchg
mov
out
fidivr
aad
push
push
test
enter
ss
push
jo
jl
out
mov
iret
repz
pop
jl
fdivr
and
out
call
out
idiv
or
ds
push
jo
idiv
nop
mov
add
fiadd
push
out
sahf
out
xchg
test
cld
iret
repz
sbb
cmp
js
les
fist
push
push
mov
out
pushf
mov
push
lahf
out
sahf
push
jo
mov
add
cmp
repz
inc
jo
lods
iret
mov
adc
jbe
push
jl
iret
repz
mov
jns
out
pusha
nop
mov
cld
repz
repz
ins
mov
and
into
push
push
jge
out
sub
mov
out
out
in
pop
jl
int3
cmp
repz
adc
cmp
ds
rep
shr
add
sbb
jns
out
pop
jl
int3
iret
repz
lock
and
call
adc
cmp
sahf
out
pusha
mov
dec
repz
sub
mov
fdiv
adc
jbe
pusha
popf
xchg
repz
in
dec
jmp
jns
out
inc
pop
mov
int
in
sbb
and
in
xor
cmp
out
mov
push
stc
cmp
repz
enter
out
sahf
cmps
cmp
test
fdivr
and
inc
push
cmp
in
icebp
cmps
push
dec
cmp
cmp
js
enter
repnz
out
fiadd
pusha
test
jns
ja
push
inc
pop
ins
pushf
iret
sar
in
adc
xor
test
aam
sbb
cmps
push
out
repz
jo
(bad)
loopne
imul
stc
cmp
repz
pusha
test
jns
cmps
sub
ins
and
or
inc
push
cmp
(bad)
in
adc
cmp
jns
mov
cmp
shl
push
js
enter
iret
cmp
cli
sti
push
pop
jo
fimul
inc
ds
cmp
out
pop
mov
dec
repz
xor
push
iret
lods
enter
inc
cmp
repz
push
cmp
mov
ds
push
fs
cmp
repz
loopne
adc
cmp
repz
push
mov
lock
sub
push
and
cmp
adc
xor
mov
add
add
push
dec
iret
repz
jo
mov
out
call
cmp
out
enter
sub
iret
repz
test
out
push
and
pop
or
jns
mov
pop
cmp
repz
js
mov
jns
out
hlt
adc
xor
idiv
out
test
call
sahf
out
push
dec
mov
out
or
and
push
iret
repz
jo
movs
mov
imul
pop
je
sahf
out
mov
cmp
repz
inc
pop
jo
repz
nop
lods
(bad)
fmul
sub
je
test
lahf
out
enter
push
xor
cmp
repz
fs
mov
imul
mov
sahf
out
sahf
dec
test
sar
sub
pusha
mov
iret
repz
fmul
adc
out
sahf
out
pop
jl
mov
sar
in
add
sbb
push
cmp
repz
xchg
mov
call
adc
xor
sahf
ja
out
fmul
adc
push
pop
xor
jns
sar
and
pushw
int
jns
je
enter
sub
iret
repz
jo
mov
jns
out
cld
and
inc
push
out
int3
lock
inc
iret
repz
pusha
test
imul
pusha
jl
lahf
out
pushf
rcr
sbb
cmp
repz
jl
shl
cmp
repz
adc
mov
pusha
test
repz
sbb
push
out
loopne
xor
iret
test
(bad)
repz
repz
pop
mov
out
and
(bad)
push
xor
adc
pop
jl
repz
out
lock
xor
iret
repz
jo
lods
enter
out
call
cmp
repz
sbb
cmp
jl
ds
pause
mov
hlt
and
and
iret
repz
rcl
sahf
out
in
add
sub
jns
out
mov
clc
adc
scas
cmp
repz
mov
daa
dec
fs
cmp
repz
sub
jns
cmps
pop
sub
int
sub
test
in
sahf
out
sbb
inc
ins
xchg
mov
jns
jns
add
pushw
inc
pop
fucom
jns
sub
out
sahf
out
jo
lods
int3
in
iret
repz
or
mov
loopne
sub
int
jns
fsubr
push
repz
nop
sar
out
xor
pop
mov
cmp
outs
push
pushf
fsubr
out
dec
repz
mov
xor
je
jns
out
rcl
cmp
out
add
xor
mov
fdivr
sbb
inc
lahf
out
sahf
pop
jl
enter
out
sahf
ja
push
pop
jo
mov
call
pushf
aam
out
ds
cmp
movs
aam
jns
jge
cmp
push
je
sar
loopne
cmp
push
test
sbb
sti
cmp
ror
cld
cmp
inc
call
hlt
sub
fs
out
mov
lahf
out
fmulp
push
pop
jl
(bad)
in
cmp
cmp
cs
push
pusha
test
sar
xor
mov
jl
out
shl
or
iret
repz
dec
test
stc
cmp
sbb
inc
pop
jl
fsubp
jns
(bad)
fadd
inc
sahf
out
fiadd
dec
je
(bad)
in
cmp
sar
cmp
mov
les
add
adc
add
add
daa
xor
in
retf
sub
inc
dec
add
nop
and
push
scas
outs
mov
pusha
daa
ss
mov
add
(bad)
push
add
rcr
pop
fidiv
xchg
add
mov
dec
cmp
outs
add
test
out
adc
add
inc
add
dec
arpl
cdq
sbb
cmp
xchg
dec
add
dec
dec
(bad)
(bad)
enter
in
and
pop
add
leave
in
mov
push
add
push
pop
cmp
pop
pop
arpl
add
in
xor
bound
nop
add
xchg
mov
xchg
daa
add
test
push
xor
in
(bad)
push
pop
add
je
jne
ja
daa
daa
xchg
jp
lahf
es
daa
jl
mov
jnp
add
loopne
loope
push
adc
std
mov
das
mov
(bad)
mov
or
les
(bad)
mov
push
imul
add
add
add
adc
adc
adc
call
daa
pop
daa
sbb
sbb
and
sub
daa
bound
and
dec
and
dec
and
(bad)
(bad)
dec
and
dec
mov
adc
dec
popa
push
enter
and
jno
(bad)
loopne
stos
scas
jecxz
(bad)
fisubr
fisubr
fidiv
fisubr
push
mov
(bad)
ss
mov
sub
retf
mov
call
retf
add
(bad)
sti
(bad)
xrelease
(bad)
test
es
stc
(bad)
test
outs
mov
push
cmp
std
mov
add
ja
add
push
paddd
xchg
add
add
add
add
add
add
add
add
mov
ret
add
pop
mov
cmp
repz
inc
push
push
pause
movs
mov
fmulp
ss
inc
adc
aas
jnp
sub
sub
daa
push
push
fs
mov
nop
movs
push
mov
lods
bnd
xor
dec
and
pop
aas
pop
pop
xor
jo
test
xor
test
hlt
or
fidivr
add
fadd
inc
pusha
pop
adc
scas
jns
out
push
cmp
ins
test
enter
popa
iret
repz
sub
jo
pushf
xor
repz
int3
in
scas
sahf
cmps
cmp
bound
pusha
push
pusha
jbe
(bad)
push
js
iret
jl
pop
dec
mov
dec
je
stc
push
adc
sub
push
push
js
loopne
pop
movs
arpl
mov
aam
mov
sti
fmul
adc
mov
or
inc
fs
xor
dec
push
push
lahf
jo
pop
inc
dec
jo
test
push
retf
fdiv
ds
push
sbb
out
jns
xor
pusha
inc
pop
je
in
(bad)
mov
pushf
gs
mov
mov
scas
shl
sbb
mov
or
sub
push
adc
out
loopne
ins
push
test
cwde
retw
fcmovne
or
mov
enter
outs
jl
div
lock
add
fistp
push
sub
inc
addr16
out
adc
push
push
int
jns
mov
loopne
cmp
xchg
adc
lahf
adc
jns
addr16
(bad)
push
push
dec
xor
pop
(bad)
cs
push
jb
push
(bad)
pop
in
repz
in
paddb
or
and
cmps
repnz
dec
fs
clc
test
iret
repz
fdiv
or
xchg
push
sub
add
adc
adc
mov
ret
mov
gs
jg
and
inc
in
sti
add
and
push
and
and
and
and
jmp
and
gs
cmp
and
stos
and
sub
xor
aaa
and
cmp
and
inc
and
dec
and
dec
and
push
and
(bad)
(bad)
jmp
pusha
and
fs
imul
outs
and
mov
jg
jg
(bad)
fbld
and
xor
cmp
and
in
(bad)
cmps
std
inc
and
pop
push
and
pop
and
(bad)
inc
and
das
xor
xor
aas
inc
inc
inc
inc
dec
dec
dec
dec
push
call
and
pop
pop
pop
add
pop
popa
arpl
imul
push
jne
jns
jge
add
inc
dec
sub
and
add
lods
jle
inc
or
xchg
test
mov
sub
xor
imul
cmovae
out
dec
test
mov
jne
aam
cmp
cmp
das
inc
add
mov
jbe
add
mov
jg
push
inc
test
ds
cmp
ret
push
test
mov
pop
cmp
jmp
inc
xchg
xchg
mov
daa
inc
dec
jmp
jo
call
adc
add
and
(bad)
jmp
repz
push
test
cmp
cld
or
data16
add
adc
shr
fdivr
(bad)
jg
add
inc
mov
(bad)
fdivr
adc
push
push
(bad)
(bad)
(bad)
push
and
into
mov
cmc
sub
xchg
inc
xor
fcomp
(bad)
(bad)
push
inc
mov
xlat
pop
mov
adc
std
mov
cmps
and
mov
bound
(bad)
(bad)
push
pop
es
(bad)
mov
pop
adc
(bad)
push
adc
add
sti
shl
out
loope
(bad)
(bad)
(bad)
(bad)
inc
aaa
ret
xchg
pop
inc
add
mov
outs
mov
lea
cli
inc
div
and
ins
or
in
inc
jmp
pusha
dec
mov
mov
cli
(bad)
(bad)
(bad)
jmp
mov
aam
sbb
aam
in
(bad)
clc
jl
pop
gs
lods
les
hlt
xchg
(bad)
(bad)
(bad)
(bad)
jmp
inc
cmps
and
ret
pop
pop
gs
int3
or
jge
out
call
pop
test
loopne
(bad)
(bad)
jmp
sub
adc
add
cmp
xor
rcl
sub
mov
xchg
push
nop
cmps
dec
add
add
icebp
mov
push
and
popa
jl
test
in
sbb
ins
fnstsw
imul
push
dec
pop
(bad)
call
and
arpl
mov
sbb
pop
xor
fsubr
fcom
mov
arpl
pop
and
test
pop
mov
jbe
sbb
mov
jg
ins
js
inc
pop
xchg
cmps
outs
dec
jno
pop
call
ins
add
pop
adc
add
pop
sub
add
mov
es
dec
jecxz
jae
xor
push
bound
adc
sub
les
adc
aas
out
dec
sub
jae
mov
rcr
fdivp
push
or
sahf
out
cmp
fmul
inc
imul
mov
mov
add
sub
imul
cmp
push
pop
pop
out
fucom
ds
push
pop
(bad)
mov
retf
mov
add
jno
scas
add
ins
fnstenv
out
mov
and
aas
adc
inc
mov
adc
pop
add
sub
call
add
(bad)
push
add
cs
add
outs
ins
xchg
in
xchg
xchg
fidivr
ficom
outs
mov
not
mov
data16
mov
loopne
pop
pop
out
jo
and
push
das
cmps
or
or
dec
inc
fisub
push
add
rcr
jbe
and
das
add
mov
mov
aaa
xchg
idiv
pop
outs
daa
pop
push
or
test
fist
nop
daa
sub
gs
rcr
fistp
xorps
popf
xchg
daa
ja
add
pushf
jnp
rol
pop
adc
pop
es
vorps
xor
neg
aas
and
out
gs
add
cmp
xchg
lea
ins
(bad)
mov
push
mov
pop
addr16
(bad)
pop
aas
sbb
adc
jbe
push
push
inc
push
cdq
push
daa
or
xchg
inc
pop
inc
inc
push
inc
mov
inc
pop
dec
inc
aas
pop
cs
push
aaa
inc
daa
add
mov
adc
push
fcmovnu
fdivr
out
daa
fbld
ja
sub
push
iret
pop
pop
stc
fiadd
xchg
ds
jbe
aaa
xchg
adc
inc
jle
sub
pop
adc
cmp
jne
add
adc
cs
daa
adc
pop
xchg
mov
aaa
addr16
arpl
repnz
ja
dec
fild
sub
inc
xchg
mov
push
aaa
aas
sub
out
daa
add
push
add
out
popf
shl
xor
das
ja
out
popf
and
adc
addr16
retf
out
mov
ss
out
mov
cmps
push
das
ins
fwait
test
mov
mov
das
int3
mov
add
pop
ds
xchg
fisttp
pop
mul
fisttp
seta
cmp
pop
and
add
push
add
outs
lds
add
adc
mov
mov
int
popf
mov
jnp
xchg
cs
xchg
push
popf
inc
push
mov
imul
mov
jg
outs
int3
mov
das
inc
addr16
mov
pop
pop
fistp
out
cmp
and
push
jmp
sub
add
push
dec
ret
or
loope
mov
mov
add
lds
push
pop
cmc
xor
fisttp
push
aas
inc
and
or
lods
push
push
adc
ffree
and
push
es
and
mov
adc
sahf
test
ins
jb
and
iret
repz
add
jnp
nop
jns
adc
add
shl
cmp
add
or
push
and
xor
fiadd
push
and
pop
jnp
out
mov
bnd
add
aas
out
push
pop
mov
xchg
cmp
jnp
in
bound
popf
cmpxchg
leave
jae
adc
mov
add
add
push
jecxz
cs
int
sti
loopne
mov
and
stc
loop
jnp
or
adc
push
fsubr
fidivr
or
inc
shl
add
pop
jno
pop
ins
add
stos
pop
add
xchg
jge
stc
sbb
les
xor
je
push
out
cmp
push
sbb
xor
jo
pop
mov
sub
test
push
enter
sub
push
or
fiadd
push
ds
sbb
ds
add
fmul
mov
xor
(bad)
push
pushw
push
enter
adc
and
mov
xchg
(bad)
lock
lock
in
mov
(bad)
fsubr
pusha
add
js
in
push
movs
xchg
push
inc
add
xor
or
aam
hlt
push
(bad)
mov
lock
cmp
pusha
out
push
sahf
dec
push
mov
dec
add
adc
ins
push
lahf
dec
into
imul
jnp
aam
neg
xor
into
data16
adc
mov
fadd
sahf
add
in
sti
xchg
mov
out
dec
mov
mov
cmps
mov
push
pop
sti
add
jmp
dec
adc
jo
mov
sahf
ja
inc
idiv
loopne
fcomip
into
js
push
mov
mov
mov
pop
in
fmul
pusha
out
or
ins
mov
and
mov
sar
sub
mov
neg
or
fimul
mov
adc
xchg
sub
inc
(bad)
pop
fsub
xchg
mov
pushw
cmps
or
ds
add
add
(bad)
out
imul
pop
pop
pop
inc
lods
div
fdivr
fdivr
xlat
push
les
push
out
stc
add
aas
outs
add
cs
inc
adc
idiv
push
(bad)
mov
add
dec
sar
clc
cs
mov
pushf
mov
push
int3
mov
rol
fsub
les
and
push
mov
js
into
inc
cmp
rcr
enter
sbb
ja
outs
mov
and
into
fs
mov
adc
jbe
(bad)
cld
mov
mov
adc
hlt
mov
cwde
mov
push
xchg
cmp
outs
dec
pop
fsubr
faddp
ret
rcl
mov
sbb
shr
idiv
push
loopne
fdivr
scas
js
sbb
outs
xor
ins
(bad)
nop
cs
(bad)
cmp
aam
je
fdiv
fiadd
pop
xchg
enter
and
push
inc
(bad)
clc
out
cdq
fistp
scas
clc
xchg
bound
in
not
push
push
fidivr
mov
xchg
jle
push
mov
fidiv
pop
sub
cwde
ss
call
mov
cmp
mov
mov
sbb
hlt
sahf
ins
jle
je
js
push
cmp
loop
push
out
mov
jbe
push
fs
loopne
mov
push
pop
dec
xchg
push
clc
cmp
lods
xchg
mov
cmp
dec
dec
lods
lock
jns
push
jo
dec
xchg
dec
mov
jns
in
xor
push
inc
repz
int3
es
mov
mov
int3
out
fdivr
fsubr
push
hlt
push
push
add
add
(bad)
fisub
jl
mov
mov
jnp
dec
es
pop
in
lods
cmps
mov
cmp
ret
lods
fidiv
dec
ret
jnp
out
xchg
clc
jbe
scas
test
mov
imul
push
in
ds
xor
cmp
jo
sahf
adc
lods
mov
lock
outs
cmps
mov
aam
out
call
push
enter
mov
cmps
sbb
adc
mov
jnp
data16
hlt
push
sub
push
sahf
sbb
es
push
les
das
push
push
ficomp
add
test
sub
js
ds
cmps
add
clc
dec
(bad)
neg
pop
pop
jnp
mov
inc
and
es
(bad)
inc
data16
pusha
push
mov
cmc
fsubrp
out
xor
test
ror
fs
xor
pop
movs
(bad)
push
lock
adc
xor
fmulp
mov
mov
push
or
aam
nop
sar
repz
xchg
sub
ds
sahf
jnp
jo
inc
pop
cmps
push
mov
out
mov
pop
jns
ror
ret
jae
push
push
fdivp
clc
push
adc
sbb
int
test
pop
clc
cmp
nop
sahf
mov
ss
neg
cld
clc
neg
jnp
sahf
cmps
jbe
cmps
js
aam
sbb
push
push
dec
add
pop
outs
test
xchg
jbe
loope
mov
push
fadd
scas
neg
out
mov
lock
sbb
movs
pop
scas
ja
fs
scas
mov
(bad)
mov
rol
jl
scas
movs
add
mov
cld
out
xor
or
ja
outs
dec
jle
adc
pushf
fiadd
mov
ds
or
out
imul
(bad)
push
lock
xchg
cmp
mov
xchg
je
or
xchg
adc
fsubrp
push
push
push
pusha
out
mov
jecxz
inc
push
cmp
xor
and
loopne
or
cs
sbb
mov
or
push
mov
inc
inc
pop
and
call
loopne
fsub
sub
adc
cmp
cmps
js
mov
lds
push
fs
call
ja
mov
mul
or
shl
fsub
data16
mov
ja
mov
push
movs
cmps
sub
mov
test
cmp
inc
scas
cmp
cmp
jecxz
push
jle
data16
into
mov
into
cwde
xchg
pop
cs
push
push
fsubp
inc
dec
sahf
cmp
out
fidivr
mov
(bad)
xor
add
mov
icebp
push
out
outs
pop
xlat
cmps
les
in
inc
mov
enter
pop
cs
xchg
push
out
je
out
loopne
scas
xchg
test
ds
(bad)
call
xchg
xchg
mov
data16
mov
ja
out
mov
fmul
test
fsub
or
and
jbe
push
cmp
sub
test
push
js
(bad)
pop
dec
inc
data16
(bad)
cwde
sbb
rcr
out
test
push
sahf
(bad)
data16
cmps
sbb
loopne
mov
mov
or
test
cmps
xchg
sbb
addr16
mov
jle
into
jnp
dec
shr
data16
(bad)
call
push
cmp
div
je
iret
enter
inc
aas
out
cmps
mov
dec
js
mov
loope
popa
je
scas
push
cmp
loopne
and
push
adc
pop
inc
mov
(bad)
(bad)
pop
mov
data16
or
enter
fcomp
cmps
rcl
out
jns
sahf
and
push
xchg
shr
lock
cmps
add
or
inc
js
mov
dec
in
add
test
pop
scas
mov
pop
push
pushf
(bad)
jl
push
faddp
jnp
push
ds
dec
movs
mov
int3
xor
push
sbb
es
dec
(bad)
cmp
js
out
jbe
pusha
(bad)
push
pxor
mul
mov
mov
adc
mov
icebp
fiadd
inc
pop
into
jl
ja
into
xchg
retf
push
pushf
push
pushf
jbe
movhps
fisub
into
scas
outs
sbb
enter
mov
fist
out
jbe
lods
(bad)
ins
jle
call
push
mov
xchg
pop
ds
inc
push
fistp
(bad)
push
(bad)
pop
push
xor
outs
js
pop
sbb
fisub
cmp
or
push
dec
je
cmp
stc
out
mov
dec
jecxz
jge
push
cmp
push
cs
cwde
(bad)
repz
scas
shl
push
out
and
aam
xor
mov
push
loopne
les
jo
pop
dec
xor
rol
dec
out
push
xchg
fidivr
push
es
out
test
mov
int3
push
es
neg
or
push
xchg
mov
nop
add
not
ds
call
cs
daa
pushf
sub
dec
dec
icebp
or
mov
(bad)
push
pusha
jnp
dec
jmp
dec
out
fsub
ins
sub
fs
aas
ins
idiv
jecxz
jmp
adc
out
push
jbe
push
pop
ret
lea
hlt
loopne
icebp
fiadd
xchg
arpl
idiv
es
push
xor
mov
xchg
rol
(bad)
cmps
cmp
sub
sbb
out
mov
fdiv
test
mov
pop
pop
sbb
ja
mov
lds
js
sbb
mov
mov
sbb
mov
sub
nop
sahf
cmp
out
cmp
outs
or
rcr
pop
pop
dec
movs
outs
inc
cmp
enter
js
outs
cmp
push
inc
inc
dec
jbe
mov
push
jle
dec
dec
test
add
and
into
hlt
pop
sbb
mov
ficomp
rcr
sbb
mov
push
mov
mov
imul
sahf
ss
pop
movs
inc
cmp
mov
pusha
pop
cs
iret
jmp
(bad)
inc
push
loopne
mov
test
inc
mov
or
adc
add
add
mov
out
nop
xchg
cs
xchg
clc
xchg
cmp
mov
xchg
les
cmp
ss
ds
cmp
or
int3
aas
cs
in
sahf
ja
or
aam
sahf
out
xchg
rcr
sub
sahf
out
in
mov
mov
cmp
iret
xor
xor
xchg
aas
pop
in
sahf
out
cmp
jns
out
xchg
cmp
cmp
sar
mov
repnz
xor
call
sub
out
in
mov
cs
mov
jns
pop
test
add
dec
je
inc
add
ins
push
lahf
data16
in
inc
push
add
xor
lock
mov
or
cmp
out
pop
fild
push
push
xchg
push
aam
movs
lahf
out
sahf
mov
sub
mov
lock
mov
jge
mov
lods
push
add
sbb
sahf
aaa
sti
fsubr
int3
psubsb
pop
cmp
daa
out
idiv
mov
(bad)
cmp
xchg
sub
outs
(bad)
xchg
mov
retf
out
ds
cwde
push
xor
cmp
fwait
jge
cwde
push
mov
mov
lods
repnz
cdq
adc
fidivr
add
inc
push
mov
imul
fild
xor
fs
ins
sbb
xchg
xchg
pusha
xlat
dec
jnp
adc
or
and
cmps
ins
adc
imul
(bad)
movs
dec
cmp
mov
xor
xor
adc
in
jo
outs
dec
addr16
dec
sbb
sub
ins
rcl
push
ins
lock
push
outs
lds
ins
sub
int
rcl
jmp
outs
ret
aas
xor
outs
ja
xor
and
xchg
dec
adc
retf
pop
lock
dec
inc
adc
sbb
mov
nop
lods
and
aas
push
dec
loop
imul
jae
out
sub
ja
sub
or
jbe
jo
js
ins
or
xchg
les
xor
adc
dec
push
dec
inc
rcr
or
adc
je
dec
sbb
nop
add
popa
and
cdq
cdq
lods
mov
mov
jnp
xchg
add
inc
das
call
sub
mov
pop
inc
rol
inc
fimul
inc
mov
xlat
xor
aaa
sub
jae
daa
and
dec
xchg
fiadd
push
add
ins
and
or
dec
push
cli
ds
add
push
movs
add
inc
sbb
daa
jno
xor
push
mov
push
inc
out
imul
and
xchg
mov
popa
dec
fincstp
inc
push
cmp
cs
dec
dec
inc
ja
inc
movs
and
ins
xor
aam
add
pop
dec
nop
jno
sahf
sub
adc
dec
dec
dec
push
ja
jae
(bad)
mov
dec
int3
push
cdq
or
int3
cwde
(bad)
rol
xor
test
mov
mov
jnp
sub
sub
xor
push
dec
push
add
dec
cmp
add
push
cmp
gs
add
fs
sbb
add
xchg
mov
add
xadd
push
ror
mov
ins
retf
adc
imul
rcl
in
outs
test
outs
jmp
xor
xor
sub
xor
xor
xor
aaa
cmp
xor
adc
mov
ror
mov
add
fs
add
nop
push
add
add
xor
and
adc
inc
push
add
add
add
adc
enter
nop
inc
add
add
sub
add
adc
add
ret
pop
push
push
sbb
adc
sbb
add
adc
pcmpeqb
ja
ss
dec
dec
rcr
push
add
dec
arpl
jle
ja
push
push
inc
dec
add
jnp
jae
(bad)
dec
repnz
add
inc
sbb
add
and
scas
ucomiss
xchg
sub
(bad)
in
jge
push
call
sub
dec
inc
push
or
rol
push
dec
pop
nop
(bad)
dec
add
add
call
loopne
push
pop
mov
adc
stc
int
mov
clc
dec
add
jo
and
outs
add
add
mov
aas
shl
inc
dec
push
in
jg
dec
mov
or
shl
loope
mov
test
xchg
loope
add
xor
mov
test
jo
fwait
nop
outs
inc
daa
stc
pop
sbb
inc
outs
dec
add
sbb
add
xor
leave
adc
mov
and
inc
cdq
clc
pop
add
adc
cmp
pusha
pop
pop
or
adc
dec
jnp
prefetch
jecxz
xor
push
mov
mov
jno
dec
mov
je
xor
sbb
enter
inc
add
call
test
es
or
sbb
cs
mov
inc
mov
movs
add
mov
ins
outs
arpl
add
jge
inc
(bad)
adc
enter
sti
or
loope
fnstenv
xor
mov
cmp
fs
add
loope
rcr
or
mov
add
rcl
sar
mov
neg
sbb
fldenv
idiv
adc
or
sbb
adc
fnsave
or
ret
jns
jmp
cli
mov
cmp
cmp
jmp
fnstcw
dec
or
jne
dec
enter
lods
out
mov
push
cmp
or
push
jbe
iret
imul
push
sbb
sbb
or
xor
popa
call
jle
inc
pusha
rol
shl
inc
xor
retf
push
psubsw
fcmovne
repz
jnp
sub
in
out
pop
add
nop
into
test
add
xor
cmp
lock
mov
inc
push
push
mov
dec
dec
push
cmp
sub
dec
cmp
adc
push
(bad)
aaa
and
push
push
push
jne
xor
jge
and
aaa
ret
jns
mov
and
pusha
and
jmp
sbb
cmp
push
push
pusha
add
imul
ins
in
jl
pop
push
cmp
sbb
adc
sahf
out
je
push
mov
pop
inc
jo
push
or
das
push
push
les
in
jge
add
xor
pop
or
jle
push
add
or
cmp
push
imul
mov
sub
push
add
xor
lea
dec
jne
pop
ret
(bad)
jmp
add
mov
adc
cli
adc
in
in
sub
xor
cdq
mov
adc
sub
mov
mov
dec
test
add
sar
add
cs
ins
ret
sbb
ja
in
or
icebp
ja
sti
shl
and
aaa
jmp
sbb
add
xor
adc
rol
cld
neg
into
rol
ror
xor
adc
retf
mov
add
and
jp
nop
jo
in
nop
div
out
stos
cmp
mov
mov
pushf
mov
sub
ret
jg
data16
mov
lock
(bad)
xor
xor
mov
xor
xor
add
rol
or
adc
xor
in
add
jmp
or
inc
pusha
xchg
mov
mov
fist
(bad)
cld
push
into
call
cmp
push
xchg
(bad)
xchg
aam
jae
inc
inc
add
jbe
out
movups
inc
imul
mov
sbb
scas
sbb
ds
test
mov
(bad)
xlat
push
dec
les
mov
mov
sbb
test
rcr
lds
bound
cli
lea
les
sti
inc
aas
and
pop
mov
add
into
xchg
jns
sbb
iret
call
(bad)
ret
lock
push
adc
std
mov
pop
or
iret
call
out
shr
xchg
aam
inc
pop
jge
fucomi
push
clc
push
out
push
mov
lock
(bad)
out
ret
pcmpeqb
lea
add
cmp
jbe
mov
call
outs
adc
std
sar
fbstp
in
dec
or
(bad)
adc
inc
aam
or
pushf
and
mov
or
call
lods
adc
dec
cmp
jne
inc
ds
push
mov
cmp
mov
out
lea
js
cld
enter
sbb
mov
push
mov
idiv
push
cmp
dec
ret
retf
enter
jne
inc
xchg
sti
cmp
pop
jmp
fadd
inc
xlat
cmps
mov
loope
stos
std
ss
pmaxub
stos
stos
stos
stos
xor
stos
adc
clc
aaa
inc
sbb
imul
jle
pop
xchg
push
repnz
mov
dec
dec
aas
sbb
push
clc
fild
push
call
inc
mov
lea
push
aam
cmp
(bad)
ret
sbb
push
or
rol
and
sub
shr
sbb
mov
das
inc
inc
out
adc
sub
fwait
pop
adc
pop
sbb
hlt
jmp
mov
jmp
push
enter
inc
or
sub
push
lods
loopne
clc
push
call
push
push
in
sub
and
add
loopne
inc
inc
(bad)
(bad)
cmp
push
xor
aaa
cld
dec
scas
pop
call
push
add
add
or
lock
fisub
popa
(bad)
sub
mov
xor
fldcw
adc
or
inc
or
pop
push
inc
jbe
test
inc
pop
jnp
or
mov
or
adc
ds
test
push
push
daa
sub
cs
iret
shl
stos
lock
xchg
and
ds
mov
loopne
test
js
adc
movs
in
push
push
xchg
sbb
cld
mov
outs
pop
mov
ret
loop
sub
sbb
push
or
dec
(bad)
pop
or
push
or
imul
jno
fstp
sbb
dec
push
mov
sub
fild
or
xchg
and
pop
xchg
jbe
mov
pusha
ss
sub
popa
ds
mov
int3
adc
inc
ret
cmc
std
std
add
data16
data16
(bad)
mov
pop
pop
jmp
gs
mov
xchg
cmc
retf
fcomp
xor
adc
push
push
fcomip
mov
inc
test
(bad)
ja
jne
sub
add
push
add
daa
outs
cmp
push
mov
add
inc
iret
and
hlt
stos
fisttp
and
mov
or
loope
clc
inc
adc
cmp
mov
pop
push
ja
lea
pop
pop
pop
adc
cmp
push
fnstenv
mov
call
retfw
nop
and
jo
cld
and
mov
push
mov
mov
pop
mov
jae
je
mov
dec
add
push
sbb
sub
jnp
into
out
popa
add
jb
inc
add
shr
and
sub
adc
call
jns
jmp
lea
push
xchg
mov
mov
pop
loopne
mov
rcl
je
jns
in
pushf
pop
push
movs
js
test
sub
popa
out
sub
cmp
adc
pop
rep
out
inc
fnstenv
daa
lea
fsubr
pop
adc
mov
sbb
or
into
xor
push
dec
outs
cli
inc
dec
adc
mov
call
mov
push
mov
(bad)
push
xchg
mov
mov
and
pop
adc
mov
ds
xor
and
and
inc
out
in
or
pop
mov
bound
mov
push
push
rol
add
aam
(bad)
(bad)
call
inc
into
inc
inc
fmul
cmp
push
outs
call
call
shr
inc
jnp
push
dec
push
stos
call
shl
leave
xchg
arpl
fld
pop
ss
hlt
adc
sub
add
sbb
mov
loop
fisttp
push
or
xor
cmp
jne
push
push
xchg
scas
jns
xor
adc
int3
rol
ret
xchg
push
inc
lods
jl
push
loope
cmp
ror
call
push
pop
sbb
ret
mov
push
das
fdiv
and
add
xor
lock
adc
or
mov
jl
cmp
icebp
shl
std
rcl
test
fs
inc
imul
into
inc
pop
jmp
add
adc
mov
jge
pop
push
and
pusha
inc
es
pop
jmp
xchg
add
push
or
jle
adc
icebp
test
sub
jbe
pop
mov
adc
popf
sti
mov
adc
mov
mov
std
fcmovnu
or
sub
cli
push
pop
mov
jmp
push
std
pop
repz
add
ss
ret
xor
nop
pop
pusha
push
xor
cdq
popa
and
push
adc
icebp
pop
imul
stos
or
push
pop
push
iret
xchg
mov
(bad)
dec
xor
sub
dec
push
nop
in
and
or
jmp
push
xlat
add
call
mov
int3
jl
inc
inc
mov
adc
into
sbb
and
dec
push
push
clc
call
jae
inc
adc
mov
push
add
add
inc
movs
push
idiv
mov
add
mov
or
push
push
sbb
sahf
inc
push
cmp
cs
push
outs
fild
push
push
push
sub
push
xor
jle
push
push
xor
ret
push
jmp
sub
ins
cmp
ret
int3
int3
push
push
pushf
bnd
pusha
or
movs
mov
dec
test
pop
lods
je
dec
popa
sahf
clc
xchg
stc
out
mov
imul
mov
out
inc
jl
push
jb
ss
ja
mov
or
push
or
ins
mov
add
nop
cmp
push
push
ficom
(bad)
jo
sbb
inc
(bad)
pop
jo
adc
pushf
inc
movd
jp
cmp
clc
jge
mov
dec
mov
mov
setl
pusha
add
iret
or
cmp
xchg
sbb
inc
js
sbb
je
ins
mov
cmp
cwde
inc
jne
jmp
fcomp
sub
jecxz
add
imul
pop
mov
movs
shr
or
mov
or
push
js
pop
dec
sub
pop
ja
mov
xor
jns
mov
push
xchg
shl
lock
add
push
mov
imul
mov
xchg
stos
es
sbb
push
mov
or
pushf
ja
mov
xchg
sub
(bad)
pop
inc
cs
cmp
add
mov
sub
mov
out
or
or
outs
sbb
sub
and
sbb
pop
out
and
or
test
xchg
xchg
jp
loope
sbb
mov
lods
adc
push
xor
mov
je
test
jb
cmp
jne
in
mov
cld
sub
or
(bad)
fadd
retf
sahf
call
xchg
adc
retf
jl
sub
jle
das
and
xor
push
xchg
dec
sub
adc
stc
rol
adc
in
jp
out
das
mov
and
xor
add
dec
mov
dec
ret
out
mov
xchg
cmp
inc
cmp
cmp
rol
sbb
jmp
retf
jle
add
mov
mov
add
push
mov
inc
int3
retf
popa
or
sbb
cmove
in
lea
jmp
adc
mov
and
mov
dec
ds
dec
jo
gs
or
add
pop
jle
jo
(bad)
test
or
cmp
pusha
dec
rol
call
mov
fsub
pop
(bad)
xchg
pusha
xor
add
xchg
jb
or
push
cmp
retf
push
add
add
test
xchg
outs
adc
(bad)
lods
jb
jmp
outs
adc
adc
retf
ret
int3
jmp
push
add
push
sbb
out
sahf
out
cmp
aam
mov
out
sahf
call
sahf
out
fisubr
push
jp
call
into
loopne
adc
jns
enter
push
cmp
and
sbb
cmp
out
(bad)
aaa
lock
dec
ds
rol
mov
add
in
mov
pop
cmps
(bad)
(bad)
(bad)
fld
push
(bad)
in
rcl
fisttp
test
leave
xor
mov
sub
lahf
test
(bad)
(bad)
cmp
in
mov
or
or
mov
ficom
imul
cmp
cmp
jmp
stc
jl
jns
cmps
mov
and
mov
not
xlat
jno
mov
jno
fwait
in
popf
je
cdq
push
leave
mov
pusha
sub
fcmovb
pop
jmp
aad
mov
(bad)
(bad)
dec
sub
fbld
cmps
pop
scas
jo
xor
in
mov
sub
(bad)
inc
cmps
(bad)
pop
mov
cmps
cmps
cmps
mov
sbb
(bad)
(bad)
call
and
(bad)
rol
icebp
cmp
jl
jnp
imul
add
(bad)
xlat
stos
jbe
or
(bad)
(bad)
(bad)
jge
pop
inc
lock
aam
scas
pushf
movs
jb
mov
xchg
es
test
jno
xor
(bad)
(bad)
inc
sbb
and
daa
mov
or
pop
mov
sub
das
test
add
(bad)
(bad)
(bad)
in
and
mov
push
mov
iret
shr
stos
sti
inc
dec
xor
push
cmp
(bad)
(bad)
mov
(bad)
xchg
popf
cmp
mov
push
ror
or
in
pop
xchg
inc
pop
les
(bad)
(bad)
(bad)
call
jae
or
inc
out
mov
fneni(8087
xor
or
and
ret
bound
jmp
jns
enter
aad
test
gs
or
cmps
mov
call
mov
mov
dec
add
push
popa
xor
sbb
adc
mov
push
(bad)
(bad)
(bad)
jmp
fisttp
inc
push
mov
mov
xchg
loop
inc
sub
add
dec
leave
pushf
mov
shl
mov
not
xchg
sbb
or
clc
dec
pop
mov
(bad)
cld
aam
fstp
cs
je
dec
shl
loope
adc
sub
push
add
mov
pusha
xchg
adc
ret
jnp
ss
mov
rcr
mov
imul
and
mov
inc
test
inc
out
pop
pop
sbb
jge
imul
enter
(bad)
(bad)
(bad)
push
mov
int
xor
dec
sti
js
add
bound
mov
(bad)
(bad)
jmp
lahf
inc
(bad)
push
out
sti
mov
push
xor
movs
cmp
repz
sti
jl
cmp
jmp
inc
(bad)
fsubrp
retf
push
jnp
xor
dec
xchg
or
ret
dec
or
mov
(bad)
(bad)
fldenv
jbe
mov
and
xchg
push
aam
pop
int3
pop
gs
ins
jo
push
std
(bad)
dec
pop
adc
test
mov
pop
add
(bad)
(bad)
(bad)
call
sub
(bad)
add
scas
mov
imul
adc
addr16
xchg
repnz
into
lock
jae
call
xchg
lods
je
test
test
stc
aaa
call
inc
icebp
sbb
sub
mov
(bad)
(bad)
(bad)
(bad)
dec
stos
sbb
dec
(bad)
sar
call
hlt
pop
(bad)
xor
mov
hlt
pusha
push
jg
sbb
jp
xchg
clc
out
mov
loopne
dec
scas
sub
mov
jmp
cmp
push
cdq
popa
pop
sub
mov
imul
call
data16
jle
outs
sub
(bad)
(bad)
(bad)
dec
out
and
xlat
mov
xor
and
arpl
pop
into
scas
cld
ja
push
wbinvd
aas
cwde
push
or
shl
adc
arpl
adc
fmul
jg
mov
or
or
mov
shl
add
mov
das
jp
in
retf
xor
popa
jg
pop
and
dec
or
adc
(bad)
into
sub
sub
arpl
cmp
add
aaa
mov
dec
jmp
adc
nop
mov
dec
push
pop
jb
arpl
xor
push
push
dec
pop
adc
icebp
and
rcl
jbe
gs
sub
push
jnp
dec
aas
ja
gs
pop
and
or
push
es
rcl
sbb
xchg
aaa
sbb
aaa
xchg
inc
rcl
jnp
popa
push
dec
fs
test
sbb
xor
add
iret
pop
inc
loope
out
push
lahf
sbb
adc
outs
or
inc
es
pop
stos
pop
icebp
fidiv
je
jo
mov
shl
pop
pop
ja
popa
push
sbb
ss
sar
lods
push
mov
in
and
popa
sbb
xchg
out
loopne
popa
push
out
pop
daa
es
mov
outs
inc
pop
pop
mov
es
cmp
dec
adc
es
cmp
xor
pop
push
jmp
jns
out
sar
outs
sbb
add
arpl
arpl
jmp
adc
sub
ds
mov
outs
ja
or
add
data16
add
ss
mov
pop
adc
jnp
sbb
mov
fnstcw
add
jbe
add
daa
test
call
in
or
aaa
ret
dec
out
test
xchg
retf
popa
pop
pop
cmp
clc
ss
or
add
imul
les
ins
sub
add
jge
inc
or
retf
adc
ret
sub
fiadd
imul
dec
add
add
adc
mov
add
xchg
dec
and
and
sub
js
fild
(bad)
adc
push
dec
inc
dec
aaa
rcr
jo
add
sbb
xchg
add
mov
sub
cdq
or
jle
movs
cmp
es
ss
push
inc
shr
push
outs
dec
retf
sub
mov
push
mov
pop
mov
ins
add
ret
mov
addr16
adc
dec
jae
es
ret
sbb
push
es
adc
fdivrp
jg
into
add
daa
leave
push
adc
dec
cwde
ds
in
aas
add
mov
jo
sub
popf
inc
scas
inc
bnd
jo
in
push
arpl
sets
add
fisubr
add
stos
pop
inc
sbb
fwait
loop
or
push
lods
pop
pop
cmp
dec
cmp
xchg
addr16
and
aas
iret
and
xchg
xchg
movs
out
xchg
iret
and
(bad)
retf
sub
and
jmp
mov
xor
(bad)
(bad)
mov
xor
xor
xor
xor
pop
xor
xor
xor
xor
xor
xor
xor
xor
(bad)
(bad)
jmp
js
cdq
xor
xor
xor
and
ss
or
and
cmp
dec
aaa
test
out
aaa
lock
cmp
cmp
cmp
pusha
cmp
nop
cmp
cmp
cmp
(bad)
(bad)
(bad)
cmp
cmp
pop
cmp
jg
test
mov
sar
in
pop
cmp
cmp
cmp
cmp
cmp
(bad)
(bad)
(bad)
(bad)
cmp
ds
ds
ds
ds
ds
aas
jns
jg
sahf
aas
movs
aas
mov
aas
bnd
aas
fisub
lods
xor
xor
xor
xor
(bad)
(bad)
(bad)
dec
pop
xor
push
je
jl
test
(bad)
xor
xor
xor
xor
xor
xor
xor
(bad)
(bad)
dec
xor
xor
xor
xor
push
xor
pop
xor
jnp
mov
fwait
xor
(bad)
inc
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
dec
xor
pop
xor
mov
jmp
push
jp
mov
mov
xor
xor
inc
xor
xor
pop
xor
xor
fwait
dec
jmp
xor
xor
xor
xor
xor
xchg
icebp
dec
xor
xor
xor
xor
int
movs
push
xor
xor
or
adc
adc
cld
call
xchg
xor
xor
sub
xor
xor
cmp
inc
xor
xor
(bad)
push
pop
xor
xor
jo
je
js
xor
xor
adc
(bad)
cmp
rcl
pop
mov
push
add
lds
sub
xor
xchg
jl
sub
push
add
sub
jb
in
nop
and
dec
push
fidiv
call
jb
mov
fcom
sbb
and
and
push
sbb
adc
sbb
cs
and
xor
and
adc
add
and
and
xor
sub
add
and
and
or
enter
sbb
mov
enter
add
and
add
add
rcl
leave
shl
in
cmp
mov
nop
or
xor
or
or
add
inc
or
sub
inc
push
nop
add
and
cmp
cmp
fs
sbb
sub
inc
push
inc
xor
push
add
xchg
and
shl
dec
lods
mov
xchg
mov
and
sub
sub
mov
repnz
pop
loop
leave
and
adc
test
sub
cmp
cmp
nop
dec
inc
sub
inc
dec
loopne
or
add
test
imul
push
sbb
or
rcl
fstp
xchg
push
jne
sub
push
adc
push
push
mov
cmps
test
jo
mov
sbb
push
xchg
loope
sub
adc
mov
or
ja
mov
xor
adc
adc
cwde
adc
pop
sbb
inc
dec
mov
or
pop
pushf
or
shr
mov
push
xor
cmp
adc
scas
inc
inc
push
scas
mov
in
sti
ins
and
popa
sbb
nop
adc
add
push
xor
push
add
loop
xchg
das
pop
(bad)
lahf
adc
push
push
rcl
(bad)
sub
mov
sar
push
setne
mov
xchg
out
and
inc
push
jne
pusha
push
xor
push
cmp
aad
out
or
push
(bad)
cli
(bad)
out
xor
cmps
add
jno
(bad)
mov
movs
cmp
cs
pop
pusha
ret
test
aaa
test
push
movs
push
loope
enter
push
sbb
(bad)
cmc
pop
jne
push
or
ins
adc
mov
nop
pop
repnz
test
outs
test
aaa
pop
or
add
cdq
pop
lods
mov
dec
mov
sbb
xor
inc
sbb
add
(bad)
jmp
lods
call
mov
movs
push
cdq
cmp
adc
sub
(bad)
cdq
in
in
clc
push
or
jb
or
jo
and
jo
add
cmp
call
mov
cmp
ins
pop
dec
cmp
iret
repz
idiv
into
loop
jl
adc
in
add
repz
rcl
and
inc
push
enter
push
mov
sahf
out
iret
mov
jo
jns
out
pop
dec
inc
cmp
xchg
sahf
out
sbb
ja
sub
loopne
(bad)
cdq
adc
je
pop
pop
outs
or
fidiv
rcl
xchg
sub
outs
add
xor
in
arpl
ja
push
mov
sub
xchg
mov
pop
fcom
fsub
neg
and
xor
jo
and
cmp
or
(bad)
push
outs
aam
out
outs
test
cmp
ret
inc
push
idiv
cmps
xor
mov
fs
imul
outs
jne
inc
xchg
call
pop
loop
outs
stc
xchg
jno
iret
pusha
loop
arpl
mov
cs
(bad)
dec
push
shr
cmp
lds
pop
ss
mov
add
adc
xor
icebp
add
(bad)
jae
add
xchg
sub
add
push
scas
fs
jg
jl
push
pop
je
or
pushf
dec
ds
cmp
mov
dec
sahf
int3
jo
rcl
and
aaa
pop
push
push
(bad)
out
cli
and
aas
inc
and
sar
aas
out
rcl
pop
fsub
stos
mov
dec
dec
xor
(bad)
fnstenv
jmp
jmp
mov
sbb
sub
xor
cmp
aas
xor
bound
jae
jp
mov
std
jmp
jecxz
xor
xor
xor
xor
xor
xor
xor
loopne
mov
xor
imul
mov
stos
mov
xor
xor
xor
xor
clc
(bad)
jmp
xor
xor
cmp
inc
xor
xor
mov
nop
xor
(bad)
movs
xor
xor
xor
xor
xor
xor
xor
xor
xor
inc
xor
xor
xor
ds
xor
xor
xor
xor
xor
xor
xor
xor
(bad)
(bad)
inc
xor
cmp
xor
in
xor
push
ss
ss
ss
ss
ss
aam
cld
cmps
ss
ss
dec
dec
scas
test
(bad)
fdivr
jo
scas
cmp
stos
cld
adc
xor
cmp
repnz
cld
cmp
inc
dec
cld
ds
cmp
xchg
loope
(bad)
out
pop
out
std
xchg
cld
adc
cmp
or
or
jl
cmps
sbb
sbb
mov
sbb
or
dec
fnstcw
mov
imul
sahf
push
(bad)
push
sbb
pusha
cmp
retf
js
vmread
and
jns
les
and
xor
cld
movups
int3
cmps
fs
add
jo
in
(bad)
push
gs
nop
xchg
out
pop
push
add
jg
(bad)
mov
mov
push
jo
push
dec
sub
fcmovnu
xor
xor
dec
mov
or
dec
pop
stc
pop
std
lea
inc
mov
shl
mov
pop
mov
inc
dec
and
xor
dec
inc
and
lds
inc
nop
or
and
inc
sbb
adc
push
mov
pop
push
dec
(bad)
lahf
out
or
dec
mov
inc
lea
mov
shr
pop
fdivr
aad
xchg
pop
sub
js
push
sub
int3
mov
inc
hlt
mov
xor
sbb
fcmovnbe
popf
jbe
push
mov
je
sub
dec
int
shr
push
adc
pusha
mov
push
pop
ret
int3
out
adc
push
mov
push
xor
or
call
dec
cli
and
xor
retf
jb
pop
xchg
and
push
and
push
adc
jecxz
and
inc
push
and
es
xor
sub
inc
mov
cmp
dec
dec
jne
ret
mov
add
pop
and
inc
mov
dec
inc
add
jne
outs
aas
in
and
or
dec
sub
or
sar
mov
cwde
mov
imul
add
iret
inc
inc
pushf
loopne
sbb
pop
xchg
xor
jle
sub
lods
inc
mov
inc
inc
xor
sub
cdq
inc
sar
movs
or
xchg
pop
mov
int3
dec
test
dec
(bad)
movs
leave
int
iret
outs
adc
xor
sub
enter
daa
ret
adc
push
xor
inc
mov
dec
outs
or
mov
jl
ret
sub
fild
or
mov
inc
mov
sbb
movs
ret
ret
(bad)
fiadd
imul
push
adc
shl
push
sbb
or
add
or
sbb
sbb
js
xor
sub
ret
sti
add
mov
popa
and
outs
jae
lock
pusha
(bad)
aas
int3
and
ret
or
push
cmp
retf
call
in
push
inc
iret
rcl
call
mov
jne
inc
(bad)
test
(bad)
or
mov
(bad)
ror
loop
pop
jmp
enter
jg
mov
std
call
mov
pxor
das
cmps
outs
std
mov
sbb
cmps
test
inc
push
sbb
stc
iret
mov
lock
stc
xchg
icebp
jg
out
ud0
lea
cmp
or
fs
mov
cmps
sub
cld
hlt
pop
adc
xchg
xor
lock
(bad)
out
stos
fistp
dec
adc
shr
movs
cmp
leave
add
(bad)
das
jecxz
call
inc
mov
mov
add
test
push
scas
rcl
js
dec
dec
arpl
dec
mov
adc
add
dec
cmp
fucomp
bnd
cs
call
inc
(bad)
jmp
sti
icebp
dec
cmp
ja
dec
and
jbe
stos
inc
ja
jo
push
lea
sub
retf
mov
add
xor
inc
cs
cld
loopne
mov
adc
sub
cmp
mov
jno
push
ja
adc
or
jb
dec
(bad)
popf
sti
xor
shl
repnz
call
xchg
sti
into
(bad)
mov
iret
dec
shl
mov
lods
pop
sub
cmp
jb
dec
add
daa
lahf
sti
fistp
jae
adc
sub
daa
push
js
dec
sbb
ins
and
in
cs
jle
fcomi
xor
in
cmp
add
data16
xlat
cld
mov
mov
loopne
loope
in
sbb
stos
out
fadd
shr
and
cmps
fist
lock
or
addr16
rcr
retf
jne
dec
arpl
adc
add
loopne
not
pop
arpl
lahf
sbb
loopne
add
add
and
sbb
mov
pop
pop
(bad)
out
pusha
dec
xchg
push
jo
dec
mov
icebp
int3
dec
or
bswap
lock
rcr
or
fld
sbb
lock
xor
push
mov
scas
call
adc
addr16
cmp
movs
cmp
aaa
ficom
pop
int
adc
mov
ret
jmp
inc
cs
add
or
leave
pop
(bad)
sbb
cmp
add
mov
fisub
mov
icebp
and
arpl
or
scas
shl
xchg
or
sub
push
call
and
push
lds
lds
rcl
das
adc
push
push
in
jle
mov
enter
fbld
cld
repnz
inc
fld
and
outs
push
jg
stc
call
mov
inc
fdivr
push
adc
daa
js
sbb
rcl
jo
inc
mov
pop
idiv
add
pop
dec
push
push
fmul
inc
std
cmps
es
or
sbb
in
pop
fwait
dec
vandps
bound
push
cmp
das
xor
lea
xor
data16
sbb
sub
adc
and
xchg
push
dec
shl
adc
enter
sub
in
call
xchg
test
fld
jae
jecxz
pop
xchg
(bad)
mov
sbb
fisub
sbb
push
sbb
push
adc
out
xlat
push
es
xchg
mov
adc
(bad)
test
rcr
clc
inc
sar
jmp
inc
rcr
xor
jb
xchg
mov
push
jmp
cld
pop
loop
js
dec
or
sbb
xor
stos
inc
dec
(bad)
fsubr
ins
cmp
mov
(bad)
in
add
js
xor
inc
jg
scas
js
dec
cwde
dec
cmp
push
or
shr
add
push
cmp
inc
add
ja
adc
sbb
fucomi
mov
fdiv
fs
mov
add
sbb
test
lea
xor
(bad)
test
call
cmp
jl
push
lahf
pop
add
or
adc
not
mov
pop
stos
stc
pusha
iret
jns
cpuid
pop
sbb
add
sbb
mov
bound
adc
and
mul
outs
aas
fisttp
dec
dec
jne
cmp
add
repz
adc
and
dec
add
sub
push
pop
pop
inc
inc
pop
jbe
jecxz
jg
pop
add
nop
call
sbb
adc
add
xchg
mov
dec
nop
mov
loopne
inc
sub
or
dec
lea
pop
iret
jge
and
stc
mov
adc
imul
jns
gs
inc
adc
movdqu
xchg
pop
inc
adc
add
sbb
movs
je
xor
pushf
and
(bad)
(bad)
out
xor
mov
push
jae
sub
add
mov
lds
dec
mov
add
test
clc
movups
xor
or
adc
out
(bad)
push
inc
and
inc
xor
xor
pop
pusha
jo
enter
xchg
add
sub
or
lock
or
repz
pop
mov
dec
dec
inc
int3
add
cmp
dec
pop
jp
pop
rcr
shl
je
adc
pop
call
add
(bad)
pop
das
pop
sub
rol
and
fmul
adc
clc
inc
adc
enter
sti
cmc
pop
call
pop
dec
mov
add
add
(bad)
adc
data16
or
push
and
enter
js
nop
jecxz
lods
pop
xor
cld
cmp
pushf
and
add
cmp
push
jge
push
call
inc
mov
jmp
fnstsw
jecxz
jo
adc
je
mov
mov
adc
retf
add
inc
jecxz
popf
fmul
shufps
and
int3
push
mov
mov
and
sbb
add
mov
in
aas
cld
jbe
call
popa
dec
adc
outs
std
pop
inc
and
dec
test
push
jne
nop
arpl
icebp
pushf
into
cli
inc
adc
sbb
idiv
test
inc
mov
call
xor
add
xor
push
shl
cwde
or
adc
mov
dec
imul
adc
(bad)
cmp
test
sbb
xor
rcl
inc
sub
call
xchg
rol
out
or
push
nop
push
in
out
out
sub
dec
sbb
mov
mov
adc
inc
mov
call
push
dec
jae
xchg
push
adc
dec
ins
mov
and
gs
jecxz
sub
xor
fadd
xchg
pop
mov
bound
clc
cmp
lahf
adc
or
adc
pop
call
int3
not
rcr
jecxz
push
xchg
pop
jp
and
or
add
sbb
dec
cli
out
adc
loopne
jecxz
movs
in
mov
call
jecxz
scas
push
xchg
and
ja
cld
arpl
ret
mov
sub
(bad)
repz
pop
ret
push
or
(bad)
(bad)
es
jle
cmp
repnz
push
ret
xor
repnz
or
ret
mov
ret
mov
dec
pop
mov
icebp
ror
inc
enter
call
push
mov
mov
aaa
ror
loope
shr
dec
add
loop
sub
pop
int
mov
dec
cmp
inc
mov
jg
inc
cld
inc
mov
inc
sub
fs
div
mov
inc
mov
inc
add
call
add
mov
stos
call
scas
test
lock
ret
retf
dec
cdq
dec
idiv
dec
xchg
mov
mov
mov
ror
ins
sti
mov
(bad)
jo
push
js
shr
mov
xchg
scas
(bad)
jg
sahf
adc
xor
mov
mov
inc
mov
shr
add
jb
mov
imul
mov
in
loop
push
ucomiss
cmp
lds
nop
mov
sti
cld
jecxz
dec
mov
xor
xchg
xor
xor
imul
jno
cmp
ret
jle
je
vpcomuw
inc
xchg
mov
add
mov
rol
retf
js
dec
out
xchg
dec
cmp
sbb
jne
je
ret
imul
dec
jmp
jmp
mov
mov
cmp
jb
cmp
ret
mul
mov
into
cmp
pop
add
dec
and
paddusb
sub
push
push
push
fadd
or
cwde
fidiv
pop
dec
push
cmc
push
mov
inc
lock
or
adc
xor
test
in
fs
pop
inc
add
fidiv
ret
(bad)
push
add
add
mov
dec
adc
pop
or
(bad)
mov
push
or
jno
jle
adc
movs
xchg
add
xor
icebp
cld
inc
shl
add
inc
mov
mov
mov
add
fstp
shr
or
sbb
fist
sbb
addr16
in
sbb
xchg
ret
dec
xchg
ins
sbb
out
mov
mov
adc
aam
jbe
test
pop
rcl
inc
cmps
sbb
rcl
call
sbb
adc
(bad)
call
jnp
add
loopne
adc
sub
inc
jge
xchg
int3
jne
in
or
and
in
dec
in
enter
icebp
jmp
int3
(bad)
and
dec
jnp
jp
div
int
or
jbe
into
jmp
pop
jmp
movs
mov
clc
pop
cmp
cmp
and
add
sar
xor
shr
add
xor
imul
popa
mov
shl
and
pushf
xchg
daa
paddb
je
push
mov
adc
jno
or
imul
(bad)
loope
ret
xchg
test
fadd
sbb
jae
lahf
(bad)
retf
adc
sbb
push
std
mov
stc
int
or
cmp
add
mov
retf
sub
vprotb
(bad)
add
arpl
jmp
mov
jle
add
stc
cmp
pop
xor
mov
jmp
dec
rol
(bad)
fild
sub
jl
pusha
rol
retf
sbb
jl
(bad)
stc
or
add
jl
push
push
hlt
lods
sbb
mov
sbb
fbld
pusha
or
repnz
mov
in
jmp
add
imul
ficomp
or
dec
or
in
mov
xor
loopne
ficomp
pop
mov
sub
cs
hlt
push
or
jb
push
ret
cdq
gs
sbb
cvtpi2ps
xchg
out
sbb
dec
out
out
adc
lods
out
adc
sbb
aam
push
push
aas
xorps
cmp
mov
add
sbb
loopne
jmp
jne
cmp
mov
fimul
adc
jnp
dec
add
pop
or
test
in
ins
cld
or
(bad)
xchg
aaa
and
sub
fstp
ss
xlat
ins
push
mov
and
cmp
adc
sbb
call
jno
sbb
add
cs
push
adc
sbb
push
cmp
fiadd
call
or
push
js
test
clc
test
or
je
inc
pop
pop
inc
gs
add
sbb
mov
gs
push
jnp
adc
push
dec
test
clc
std
ja
call
(bad)
mov
mov
neg
jo
out
js
xchg
and
cli
in
pop
ds
or
add
ins
or
js
lahf
jo
xchg
push
pop
and
mov
pop
rcr
(bad)
or
push
cmp
mov
cmp
mov
add
dec
sbb
iret
dec
jp
retf
and
call
xchg
stos
stos
inc
addr16
arpl
xchg
xchg
or
iret
adc
test
sbb
int3
jmp
leave
sti
sbb
sbb
cmps
in
and
repnz
pop
cmp
cmc
in
das
dec
mov
jns
dec
sbb
mov
sub
sub
arpl
dec
xor
mov
xchg
dec
icebp
mov
and
loop
push
leave
and
retf
retf
xchg
sbb
and
ret
div
pop
dec
aas
hlt
sub
icebp
add
inc
imul
arpl
xor
loopne
jo
cmps
cmp
inc
int
fcmovu
ss
inc
add
call
adc
mov
dec
arpl
(bad)
int
jno
in
or
add
inc
aas
aas
cmp
loopne
movs
frstor
shl
push
outs
cmp
ret
pop
fdiv
into
mov
add
sub
jb
(bad)
fcmovnu
js
xor
or
aas
retf
add
ds
fmul
call
sub
pop
loop
push
jl
jne
sti
add
je
dec
adc
jl
lods
repz
retf
es
ins
lock
je
xor
xor
sbb
pop
daa
jbe
fiadd
sub
pop
add
sub
jne
frstor
and
pop
push
adc
loopne
add
(bad)
out
mov
cli
mov
pop
cs
sub
mov
push
shl
out
add
cli
push
add
repnz
jb
mov
dec
cmp
mov
stos
outs
inc
add
add
leave
leave
leave
in
loopne
(bad)
mov
leave
cwde
mov
leave
leave
leave
leave
push
inc
xor
in
in
push
out
ds
fcmove
leave
in
mov
mov
daa
mov
leave
cli
push
pop
sbb
cs
daa
daa
daa
dec
pusha
jl
xor
dec
outs
out
mov
in
jbe
jb
in
pop
push
inc
cmp
in
in
sub
test
pop
in
or
jg
pusha
mov
pop
adc
jo
(bad)
pop
iret
and
inc
and
and
or
mov
inc
and
cmp
(bad)
iret
mov
xlat
xor
jge
ss
daa
sbb
pop
xor
aaa
add
ror
add
push
repz
push
cwde
or
or
push
add
or
aaa
dec
push
or
xor
add
push
push
push
or
fnstsw
push
add
add
outs
nop
sti
fisub
xor
xor
ds
es
repz
adc
add
or
sbb
sbb
cld
xor
sbb
adc
push
sbb
or
or
jb
push
pop
je
in
out
adc
jb
out
adc
jbe
adc
push
loopne
or
ss
(bad)
(bad)
or
or
add
jo
pusha
or
or
data16
outs
scas
sbb
or
or
sbb
pop
loopne
rol
pop
add
fs
xor
add
jle
mov
push
pop
xor
push
add
lock
or
pusha
push
push
or
add
add
data16
sbb
push
push
push
adc
lock
loopne
rcl
outs
mov
rol
push
pop
fs
push
xor
add
iret
mov
(bad)
movhps
ja
repz
jns
mov
repnz
aaa
dec
dec
inc
adc
out
jae
data16
adc
xor
push
adc
inc
push
sahf
out
xor
fwait
loope
sti
adc
push
adc
lock
pop
call
adc
pshufw
or
mov
xchg
adc
mov
or
or
push
rcl
sbb
xchg
and
jecxz
(bad)
outs
sbb
inc
int3
push
xchg
outs
xchg
nop
cmp
mov
cmp
out
mov
xor
pop
out
aas
rol
shl
adc
jns
cmp
enter
add
add
inc
dec
sahf
inc
rol
cmp
and
sbb
add
dec
jb
pop
xchg
add
jb
inc
xor
xchg
or
addr16
and
or
and
sbb
nop
dec
(bad)
cmp
call
lds
cmp
jno
fld
jo
fiadd
pop
sub
push
and
aaa
pop
fsub
mov
jg
aas
pusha
cmp
inc
sahf
pushf
add
or
xchg
or
fs
shl
cs
fsub
xor
jns
pushf
dec
clc
pushf
adc
jns
sbb
ins
repnz
or
in
ror
adc
int3
cmp
clc
sahf
imul
mov
push
pop
call
push
pop
movs
hlt
hlt
xchg
adc
xchg
push
sbb
cmp
jge
dec
sbb
pop
movs
inc
adc
dec
repz
push
xchg
add
cmps
stc
cmp
pop
pop
inc
pop
pop
aas
iret
sar
pop
inc
sbb
xchg
ds
jg
xchg
push
test
gs
nop
push
mov
popf
push
add
stc
mov
in
sbb
mov
in
and
sar
and
and
cmp
mov
cmp
call
int
and
es
jae
repz
test
cmp
sub
cmp
fs
jb
dec
je
mov
sub
fiadd
mov
cmp
sub
lods
idiv
push
push
mov
sub
pop
addr16
jbe
sub
btr
pop
retf
pusha
add
(bad)
(bad)
mov
pusha
mov
and
inc
mov
(bad)
call
pusha
mov
and
mov
shl
mov
inc
repnz
inc
mov
and
inc
mov
pusha
mov
jmp
add
adc
fadd
mov
fcomp
push
xor
js
cmp
inc
push
fdivr
aaa
fdivr
xor
push
and
inc
or
push
aam
ins
mov
fbstp
adc
inc
fisubr
add
lods
xchg
fisubr
enter
and
sbb
or
push
and
adc
xchg
sbb
xor
sbb
jmp
sub
dec
inc
and
dec
lds
and
xor
jb
sbb
push
nop
stos
movs
ror
dec
xchg
sbb
lods
stc
push
pop
adc
inc
mov
xor
enter
or
dec
enter
je
add
push
adc
dec
push
adc
je
adc
adc
inc
xor
nop
push
enter
adc
inc
push
sub
pop
adc
sbb
add
rcr
mov
pop
(bad)
sub
sbb
cli
in
cmp
dec
cs
fs
cs
push
inc
mov
stos
add
add
cmp
adc
adc
adc
cmp
cdq
data16
and
nop
stos
pop
fwait
push
nop
mov
jns
cmovs
pop
enter
mov
in
rcl
nop
sbb
jb
adc
adc
in
push
mov
outs
push
add
(bad)
in
inc
xchg
jns
mov
and
pop
pop
or
pop
or
das
jbe
inc
dec
or
push
leave
xor
xchg
lahf
fild
out
je
mov
imul
add
push
push
sbb
xor
pop
inc
or
pop
out
adc
mov
in
push
add
mov
scas
sbb
push
enter
lea
lea
xchg
ins
pop
jb
imul
std
hlt
add
nop
lods
dec
pop
daa
sbb
pop
push
pop
or
pop
pop
jb
iret
clc
sbb
lea
nop
xchg
sbb
rcr
sbb
mov
push
jg
repnz
xchg
sbb
lea
popf
sbb
sbb
cmp
aaa
push
aaa
or
push
push
sbb
ficomp
sbb
rol
enter
sbb
and
pop
jo
ins
inc
push
add
xchg
or
ds
xor
aaa
sub
push
jge
cmp
pusha
sbb
jg
add
jns
cmp
mov
sbb
sbb
outs
sbb
add
nop
clc
rcr
and
ja
sbb
jns
dec
mov
dec
pop
mov
test
mov
pop
cs
leave
or
push
leave
jmp
inc
icebp
push
jmp
adc
sbb
mov
and
push
add
sub
push
xchg
pop
enter
outs
add
cdq
mov
cmps
add
adc
add
xor
xchg
leave
leave
leave
leave
test
push
leave
leave
leave
leave
ds
add
ret
mov
leave
in
in
psadbw
aas
push
cvtpi2ps
daa
daa
daa
cmp
js
outs
daa
daa
mov
jb
cdq
nop
cmp
jb
jb
jp
bound
jb
pop
dec
inc
cmp
or
or
add
jo
mov
xlat
add
add
ffreep
out
fimul
call
inc
mov
rol
in
cmp
jbe
push
in
cmp
clc
cmp
dec
out
movs
add
pop
dec
add
add
and
inc
sub
push
push
sbb
add
cmp
mov
sub
in
mov
or
nop
xchg
mov
jg
aas
add
call
and
and
cmp
push
mov
pusha
sbb
daa
pop
enter
cwde
loopne
xchg
mov
daa
aas
add
shl
adc
ins
inc
push
repnz
aaa
jl
mov
and
jns
xchg
aaa
pushf
aaa
movs
aaa
nop
xchg
movs
aaa
mov
enter
push
repnz
aaa
loopne
clc
aaa
in
vmwrite
cmp
cmp
repnz
xchg
cmp
movs
aaa
jns
inc
push
movs
aaa
pop
cmp
loopne
and
mov
cwde
cmp
and
cmp
inc
in
das
push
lds
cmps
and
cmp
and
mov
sbb
sbb
jge
call
loopne
cmp
fnstenv
sub
int
cmp
push
sub
inc
sub
out
in
xor
daa
sub
stc
push
ins
sub
sub
add
xor
add
and
sub
mov
add
push
add
cmp
mov
sbb
pop
psraw
(bad)
inc
add
add
push
add
push
retf
push
add
(bad)
dec
push
push
mov
stc
int
pop
pop
push
pop
jb
and
stc
je
xchg
mov
mov
xor
inc
push
das
jb
fmul
pop
pushf
xor
xor
mov
sbb
cld
pop
mov
push
stos
cmp
jne
clc
sbb
vmovshdup
(bad)
fstp
jb
pop
lods
mov
lods
mov
and
je
sub
dec
neg
mov
fisub
in
pop
movs
pusha
mov
xor
push
dec
jne
pop
lock
(bad)
stc
call
add
cmp
ja
mov
push
cmp
jb
cdq
xchg
add
jmp
mov
dec
(bad)
push
push
pushaw
mov
mov
lgdtd
pusha
adc
and
or
mov
or
mov
data16
cmp
mov
pop
idiv
dec
adc
cmp
ret
sub
loopne
mov
cmp
call
pop
jl
adc
add
sub
retf
cli
mov
dec
sti
popaw
pop
pop
jmp
nop
nop
lods
cmp
jne
ret
or
mov
sbb
pop
sbb
pop
mov
mov
(bad)
call
cmp
jb
out
pop
xor
mov
dec
loopne
add
push
pop
push
pop
mov
cmp
xor
test
mov
push
or
inc
add
jmp
pop
ret
pop
add
jg
xchg
std
pop
push
sub
loope
cmp
push
and
cmp
push
inc
jne
pop
mov
add
add
sub
fs
pop
mov
mov
or
icebp
sub
popa
and
mov
push
push
inc
mov
jmp
cmc
dec
call
mov
add
jmp
ret
add
push
cmp
add
outs
jbe
cmp
lds
clc
mov
sub
inc
data16
pusha
(bad)
inc
push
mov
mov
sbb
fadd
ror
mov
std
mov
js
(bad)
dec
ins
jo
xor
fmul
pop
lock
or
mov
sar
cmp
scas
jecxz
mov
shl
add
mov
push
call
sti
cmp
xchg
fwait
xchg
ja
inc
outs
outs
je
xor
add
push
cmc
mov
outs
jne
ins
jae
call
outs
push
inc
or
and
fiadd
add
clc
sbb
mov
in
push
mov
arpl
and
dec
inc
and
add
test
cld
mov
hlt
jne
mov
inc
cmps
pop
fdivr
data16
mov
mov
fs
icebp
inc
mov
adc
fs
rol
shl
cli
mov
jge
add
fidivr
add
adc
push
dec
pushw
mov
mul
add
sub
push
call
jb
in
imul
call
or
jge
cmps
je
cmp
sbb
and
cmp
jne
dec
jne
pop
call
pop
ror
adc
push
nop
fidiv
adc
scas
jp
add
cli
mov
push
shl
movzx
loop
or
pusha
fbld
stos
mov
je
cmp
sub
fbld
cld
inc
mov
pop
pop
ret
cmp
cmc
jb
inc
jnp
mov
push
or
js
ss
movs
call
push
mov
fidivr
push
jbe
pop
ds
inc
pop
push
xor
xchg
pop
xchg
shl
or
ins
xor
mov
add
lods
jb
inc
add
jae
scas
ja
or
ret
push
pop
ret
fs
fwait
loop
xchg
adc
fbld
add
and
lods
sar
(bad)
push
stos
jmp
test
inc
lock
or
xor
(bad)
mov
jbe
mov
add
adc
mov
mov
mov
mov
add
adc
push
sub
mov
push
mov
jmp
adc
loop
xor
xor
inc
ss
push
sbb
fwait
loop
or
mov
mov
or
fwait
add
mov
push
adc
(bad)
jg
cmp
sbb
cmp
jge
inc
push
push
xchg
aaa
lods
pusha
push
jb
sub
push
mov
ret
out
lock
mov
add
push
jae
loop
jmp
cmp
not
out
lods
jae
mov
shr
and
cmp
mov
lods
pop
out
clc
cmp
jbe
nop
stos
jo
mov
or
mov
jle
cmp
mov
mul
add
adc
mov
fisub
push
push
push
inc
pop
mov
cld
push
mov
push
xchg
push
call
data16
fcom
xchg
inc
xchg
xchg
xchg
ror
ja
cmp
or
pop
sbb
inc
inc
jne
(bad)
adc
add
dec
jne
and
int
add
xchg
addr16
test
add
add
xor
adc
push
scas
add
lds
in
push
mov
aad
xchg
stos
dec
or
fnstenv
ret
push
push
pushf
mov
inc
hlt
push
cdq
mov
push
hlt
dec
lahf
dec
mov
push
push
xor
or
pop
(bad)
jmp
iret
in
pop
inc
or
cmc
add
ficom
pop
lea
mov
rep
rcr
stos
dec
aam
mov
inc
lods
test
lahf
mov
lods
nop
sbb
sub
add
movzx
call
adc
fild
jmp
jb
nop
sub
pop
push
add
jmp
les
js
sbb
jb
in
push
adc
fcom
add
mov
jne
ss
adc
xor
add
ja
fcomp
xchg
shl
push
popf
fcomp
lds
popf
mov
push
mov
mov
jae
jg
push
lods
xchg
lods
cmp
mov
hlt
xchg
pop
mov
pop
stc
rcr
ins
add
cmp
mov
jb
in
inc
mov
dec
mov
push
jmp
mov
pop
inc
retf
sbb
cmp
or
pop
cld
jne
or
jbe
or
and
pusha
imul
mov
mov
jb
mov
add
push
mov
test
rcl
cwde
cmp
inc
(bad)
push
nop
dec
push
inc
push
gs
loope
and
es
add
cmp
inc
pop
stos
cmp
mov
ret
mov
call
push
std
push
inc
or
cld
call
dec
or
push
loopne
int
fld
sti
mov
pusha
aas
mov
add
add
call
sbb
dec
pop
int
js
jmp
mov
ret
lods
or
loopne
add
test
jmp
add
jmp
(bad)
push
or
fsubr
rol
leave
inc
shr
jae
dec
ret
push
mov
xor
shl
mov
push
call
fwait
inc
sar
data16
fs
jne
(bad)
and
push
mov
into
inc
push
dec
cwde
jle
call
sub
shl
cmp
jne
mov
mov
add
xor
sub
add
jg
movs
mov
or
pop
es
clc
mov
jmp
jb
mov
cmp
xor
ins
adc
xchg
add
adc
and
inc
call
cmp
sti
das
mov
mov
fs
nop
call
cmps
sub
mov
call
adc
and
dec
in
push
jg
xor
xor
mov
add
cmp
or
mov
mov
jmp
mov
jp
jb
ja
add
mov
inc
out
fld
je
pushf
outs
das
mov
jl
push
call
add
push
clc
push
dec
mov
xchg
fist
sbb
(bad)
push
call
sbb
dec
inc
pop
jp
(bad)
call
rcl
mov
mov
sub
adc
fdiv
(bad)
fidivr
add
test
inc
sbb
or
add
jg
fdivrp
ret
ss
push
push
cmp
je
stc
pop
in
push
js
add
mov
lods
or
cmp
jb
pop
ja
in
xchg
jmp
cmp
jne
inc
inc
loop
sbb
ret
pop
sahf
je
jl
jecxz
jmp
jo
in
(bad)
jl
jae
loop
pop
scas
in
call
call
call
in
sub
ins
in
xchg
mov
fidiv
push
push
rol
ss
fbld
fst
fldenv
mov
pop
or
jo
add
call
std
loop
cld
sub
jg
(bad)
mov
and
push
or
inc
pop
dec
ret
lods
ror
call
pop
neg
add
je
shl
movs
clc
pop
jo
enter
and
add
in
add
into
rcl
sub
add
mov
ret
mov
fadd
retf
ret
sbb
clc
push
imul
les
add
cld
lods
add
sti
cld
jg
add
jb
and
icebp
fbstp
dec
adc
push
adc
movs
jmp
mov
xor
adc
and
sub
xor
sbb
shr
test
sbb
push
mov
sub
js
loop
cmp
pop
jo
shr
fiadd
shr
ret
push
(bad)
call
out
(bad)
xchg
xor
call
push
push
call
pop
pop
ret
push
inc
push
popa
dec
cmps
scas
int3
not
scas
aas
ret
popa
shl
mov
fdiv
les
fwait
out
fcom
sub
mov
pop
in
and
bound
shl
dec
loope
int3
adc
sbb
adc
jecxz
inc
and
xor
leave
shl
js
xor
jbe
shr
rep
or
cli
loope
test
cli
retf
jl
pop
pop
and
fucomi
sbb
pop
mov
cmp
fdiv
dec
jnp
call
cmp
lods
test
push
cmp
dec
or
movs
mov
jecxz
out
loope
cmovno
icebp
xor
ret
pop
inc
pop
rol
add
xchg
hlt
jg
stos
xor
ror
push
mov
lock
push
or
jmp
lods
cmps
shr
and
add
dec
and
pop
jmp
cli
xchg
pusha
shl
dec
push
add
pop
jmp
movs
inc
rol
loope
nop
iret
cmp
jb
mov
fdivr
and
je
add
push
pop
lods
jmp
cmp
pop
jge
mov
sbb
push
jo
xor
fadd
pusha
lea
mov
bound
adc
ret
mov
cli
cs
add
das
push
jb
(bad)
jmp
aam
pusha
adc
mov
xchg
(bad)
jle
dec
aas
sti
push
pop
sub
mov
mov
ds
cmp
add
lock
lock
call
push
popf
inc
cmp
fucomp
lods
xor
pusha
cmp
movs
call
inc
in
outs
pushf
inc
push
test
jns
sub
movs
psadbw
icebp
rcr
sub
push
mov
pushf
aas
lods
mov
xchg
aas
cmp
dec
(bad)
cmp
mov
call
jmp
jmp
jbe
add
test
jne
pop
push
pop
push
push
push
push
or
(bad)
push
xchg
mov
mov
pop
jb
pop
popa
popf
clc
adc
push
push
pushf
(bad)
pop
sahf
movd
unpcklps
push
mov
js
add
push
mov
mov
shl
adc
add
aam
test
mov
inc
add
stos
pop
jg
(bad)
jmp
add
add
mov
call
popf
jb
scas
cmp
out
push
inc
adc
add
cmp
idiv
mov
adc
push
sahf
pop
in
and
in
(bad)
inc
aaa
mov
jbe
sbb
sbb
mov
pop
mov
(bad)
fst
ret
dec
sub
mov
ret
add
loopne
stc
and
cs
pop
dec
jg
rcl
or
mov
in
ror
mov
mov
pop
aad
les
sbb
cmp
xor
dec
adc
call
xor
dec
xchg
inc
pop
pop
jle
mov
aam
adc
or
dec
sbb
inc
sbb
sahf
ins
dec
mov
fs
adc
sub
cld
add
lods
cmp
stos
mov
fbstp
xor
add
and
sbb
adc
jns
mov
add
mov
(bad)
sub
mov
or
aaa
cld
out
sub
addr16
sbb
pop
add
push
add
fistp
mov
dec
push
mov
cmp
imul
cmps
xchg
jp
add
adc
ret
mov
fcom
xor
and
pushf
adc
pop
mov
and
adc
mov
jmp
sahf
add
jmp
sub
add
(bad)
or
cmp
(bad)
mov
sub
call
lods
stos
mov
add
dec
push
sub
rep
es
(bad)
xchg
mov
xchg
add
mov
nop
dec
xchg
pop
imul
loope
push
sbb
pop
sbb
in
dec
gs
inc
call
inc
or
mov
add
sbb
je
adc
repz
je
test
pusha
mov
in
stc
jmp
mov
add
mov
mov
loope
mov
and
push
cmp
jne
nop
(bad)
stc
test
or
or
xor
cwde
test
mov
(bad)
inc
push
test
or
pop
mov
or
add
sub
into
loop
cmp
jl
pop
push
lds
out
sub
lock
inc
jne
aaa
mov
push
es
pop
cmp
js
stos
pop
xchg
or
pop
xor
(bad)
or
in
add
sub
or
jmp
or
mov
jmp
mov
stc
pop
pushf
push
pop
push
pop
push
cmp
ret
aaa
mov
mov
cmp
push
fidivr
mov
cld
ficomp
and
add
sbb
add
add
add
cmp
add
mov
add
or
dec
cmp
add
xlat
pop
cmps
and
fdivp
or
mov
or
jmp
mov
jae
call
sbb
xor
xchg
mov
stos
dec
bnd
pushf
mov
jb
mov
push
push
sbb
and
test
fild
retf
mov
mov
jne
mov
jg
les
jae
sbb
cmp
cmp
ror
xor
loop
xchg
stc
xchg
mov
dec
nop
repnz
sbb
test
pop
cwde
inc
push
movs
clc
and
sbb
xor
ins
sahf
(bad)
int
mov
mov
sahf
mov
call
int
jne
jmp
xor
add
and
jbe
mov
mov
sub
in
ror
sahf
jb
rcr
adc
movs
dec
idiv
ss
cmp
and
stc
pushf
sbb
mov
mov
mov
(bad)
into
adc
or
imul
push
std
mov
sbb
mov
stc
push
outs
mov
jmp
push
mov
jns
jp
fwait
or
add
add
jne
cmp
adc
ins
jge
xor
adc
(bad)
fdiv
loop
jmp
mov
lods
cwde
jne
lods
repnz
outs
adc
or
cmp
inc
retf
sub
call
je
popf
jb
pushf
push
or
jnp
mov
(bad)
scas
loopne
xchg
addr16
aas
jmp
pop
sub
jmp
add
sub
inc
fdivr
in
adc
or
mov
dec
add
add
mov
call
lock
movzx
or
adc
loop
sub
inc
and
ins
jle
pushf
adc
add
mov
imul
jg
cmp
jae
xchg
push
mov
int
mov
aaa
jl
jbe
pop
loopne
xor
call
sub
pop
and
add
loope
movs
test
inc
add
inc
repnz
aam
nop
mov
pop
repnz
daa
jp
sar
in
outs
add
movs
jns
enter
push
push
dec
push
imul
cmps
rcl
cmp
xor
adc
in
enter
dec
pop
mov
mov
mov
cmp
inc
pop
inc
inc
push
lahf
jmp
sahf
ds
xor
xor
fs
inc
xlat
addr16
call
add
call
pop
add
cmp
dec
jne
pop
inc
adc
xchg
mov
push
aas
dec
mov
jmp
and
shl
push
aad
pushf
fcom
int
rcr
adc
sbb
dec
test
int3
jno
ja
push
cdq
movs
mov
add
jne
sbb
pop
(bad)
cwde
movs
cli
dec
add
repnz
pop
imul
xor
pop
xchg
retf
addr16
sub
test
jg
fcomp
out
pop
push
rol
or
mov
sub
ss
pop
push
push
cli
and
and
and
push
pop
(bad)
jns
and
je
imul
loopne
out
je
cmc
and
cmp
add
fnstcw
jns
pop
and
xor
add
loopne
push
cmc
and
push
and
mov
imul
ucomiss
ret
mov
sbb
outs
outs
inc
sbb
loopne
push
push
pop
add
pop
rcr
push
out
pusha
adc
adc
iret
mov
cmp
das
sbb
mov
add
outs
data16
fs
sar
sub
xor
sub
imul
sbb
adc
jnp
and
jae
arpl
pop
mov
or
pop
jnp
push
in
jo
gs
pop
jno
sbb
adc
push
dec
adc
ss
mov
jle
mov
daa
cmp
xlat
push
movs
add
arpl
in
jae
dec
inc
ins
je
into
shl
aad
loope
sbb
jb
jg
iret
mov
inc
pop
push
xor
xor
mov
jo
push
fsub
int3
jmp
xor
pop
jmp
push
mov
imul
or
xor
into
(bad)
rol
jbe
imul
lods
sbb
bound
and
popa
mov
shl
or
dec
mov
add
je
push
mov
pop
add
(bad)
ss
fcom
jns
or
sbb
pushf
jnp
xor
das
cmps
pop
xor
jo
in
ins
lods
outs
ret
rcr
xor
retf
inc
sbb
push
cs
push
push
inc
mov
push
add
not
dec
clc
jle
jmp
add
mov
aaa
add
jae
addr16
bound
push
xchg
add
cli
nop
inc
push
sub
lock
imul
mov
mov
mov
mov
sar
jae
setp
data16
sub
dec
stc
mov
push
cmp
dec
push
sub
(bad)
or
mov
mov
aas
repnz
inc
clc
lock
dec
lods
mov
fmul
jae
(bad)
push
push
mov
add
clc
(bad)
clc
(bad)
mov
add
cmps
sete
inc
test
ins
mov
es
and
add
pop
cli
mov
push
sub
add
jo
mov
mov
call
ret
cli
cld
add
je
push
clc
pop
je
xchg
jo
std
or
cmp
jne
inc
add
shr
sbb
fmul
loop
call
add
sub
xor
bound
ja
(bad)
xor
mov
mov
or
mov
shr
js
hlt
jmp
cld
lods
xor
pop
inc
call
jnp
gs
or
subps
adc
fwait
cld
mov
stos
stos
or
adc
arpl
dec
je
push
mov
jb
jne
int3
and
cs
bound
mov
popa
ja
mov
es
mov
loopne
ret
pusha
call
call
mov
jg
sub
call
add
add
hlt
xchg
mov
inc
jg
cmp
add
push
jp
adc
mov
add
mov
mov
ret
ret
cmps
adc
push
scas
mov
call
cmps
icebp
push
push
push
pushf
mov
dec
test
pushf
lods
mov
push
or
jmp
push
jb
xor
xor
das
sbb
pop
pop
ret
js
pushf
push
ss
aas
lds
pusha
lea
idiv
mov
test
mov
inc
sbb
pop
nop
add
mov
and
pop
jmp
mov
fisttp
fild
push
mov
mov
mov
mov
jbe
push
xchg
or
cwde
push
pushf
mov
movs
cs
push
push
mov
mov
pop
lods
test
int
test
ret
mov
in
mov
mov
mov
sub
imul
cld
popf
call
mov
push
push
mov
mov
stc
jnp
push
push
mov
ins
test
(bad)
sub
loopne
push
pop
push
jp
fist
cmps
or
sub
sub
and
mov
pop
pop
cmp
push
push
push
push
mov
sbb
test
fisubr
ss
cmp
mov
repz
je
cmp
jl
cmp
jle
cmp
push
repz
cmp
outs
push
(bad)
push
jle
cmp
out
jle
cmp
jl
cmp
jg
lods
movzx
pop
sbb
xchg
sbb
add
out
mov
mov
push
(bad)
pop
pop
pop
pop
pop
iret
push
adc
push
or
out
adc
mov
inc
add
mov
cmp
mov
arpl
pop
ret
push
dec
ja
fsubr
push
sbb
cmp
fistp
adc
outs
push
mov
cmp
jne
cmp
(bad)
cld
je
cmp
je
dec
push
push
push
mov
and
mov
xor
das
cmc
jmp
repnz
mov
or
or
pop
pop
and
iret
xor
lahf
mov
cld
popa
push
js
push
mov
or
or
adc
mul
bound
add
movs
mov
ss
stos
mov
shr
add
fmul
pop
test
jle
push
fucom
int
(bad)
sbb
cmc
add
or
aas
jp
pop
(bad)
cdq
or
mov
add
pusha
test
push
lods
mov
jg
cmc
inc
adc
mov
call
xor
or
es
iret
ins
es
jne
sahf
xchg
add
out
jnp
pop
mov
stos
dec
mov
and
rol
xor
cwde
xor
push
inc
add
mov
out
add
push
test
idiv
dec
cmps
mov
add
cmp
mov
mov
adc
bndstx
int
cmp
push
mov
mov
(bad)
in
sbb
mov
pop
dec
xor
mov
xor
ja
cmp
repnz
adc
xor
push
jl
xor
mov
add
ja
sub
outs
adc
test
ins
add
inc
aad
mov
mov
push
(bad)
mov
jbe
dec
add
pop
push
cmps
push
fsub
lea
mov
jb
xor
je
push
inc
je
mov
and
jae
test
adc
(bad)
jg
mov
enter
shr
inc
and
mov
pop
jmp
xor
inc
mov
cmc
div
ja
dec
js
cmp
ret
jnp
je
ret
fcom
iret
call
jae
out
jmp
and
adc
add
(bad)
fisttp
sub
int
add
data16
jo
test
ret
push
add
add
pop
cmp
push
or
and
je
lods
shr
sbb
inc
je
imul
inc
fcmove
int
je
inc
je
inc
je
inc
je
pushf
dec
movs
push
test
dec
in
mul
dec
dec
dec
jne
inc
jne
xchg
inc
jne
sbb
inc
ret
sbb
pop
pop
mov
stc
fld
outs
or
push
jmp
loopne
jbe
xor
or
push
add
bound
call
test
(bad)
clc
jns
(bad)
jmp
dec
adc
add
jae
sbb
stc
add
cmp
iret
out
or
enter
int
ret
dec
mov
mov
push
pop
test
push
dec
adc
jmp
mov
xchg
outs
std
pop
ja
js
pop
dec
mov
and
mov
add
lods
adc
loope
fsub
cmp
mov
xor
pop
or
ret
sbb
out
cmp
sbb
mov
and
adc
jg
lahf
aaa
push
jne
jmp
pop
mov
push
and
scas
icebp
stc
data16
sbb
mov
es
add
ret
push
pop
pop
inc
inc
test
clc
add
xchg
add
cmp
jne
shl
and
movs
mul
sub
xchg
or
sbb
cmp
push
mov
mov
jbe
jo
push
loope
cmp
jmp
lahf
and
cmp
adc
mov
add
push
and
or
mov
retf
int3
shr
push
and
mov
mov
add
not
add
and
inc
mov
sub
sub
push
pop
fsubr
(bad)
jne
or
and
xchg
ja
test
sahf
mov
call
call
add
popf
pushf
jae
mov
mov
pop
mov
or
cmps
cmp
push
and
push
stos
mov
dec
mov
add
pusha
aad
add
add
add
dec
mov
mov
std
sub
lock
add
(bad)
stc
call
loop
sti
sbb
mov
ss
popf
jmp
lea
adc
cli
dec
jne
and
cmp
into
ret
repz
or
adc
pop
inc
pop
mov
inc
in
jbe
call
ret
adc
comiss
test
movs
pop
test
add
jbe
sbb
cli
loop
push
in
add
push
lahf
mov
add
or
cmp
adc
jmp
arpl
adc
test
pop
pushf
push
outs
les
dec
pusha
jnp
or
inc
aam
imul
fdiv
sar
into
test
pop
fidivr
sbb
ja
cmp
retf
cli
mov
add
pop
call
jb
jg
xchg
gs
call
lds
or
fs
inc
push
popf
jb
cmp
cmp
or
or
jge
xchg
push
and
iret
or
dec
jnp
cli
mov
pusha
jecxz
ret
mov
aaa
ins
mov
mov
jbe
xor
sub
shl
sbb
dec
or
push
jne
call
pop
sbb
mov
ret
cld
rep
call
pop
pop
jo
add
sahf
mov
push
pop
mov
pop
rcl
pop
shl
ins
push
dec
sbb
dec
sbb
pop
jmp
and
sub
or
xchg
dec
movs
push
or
and
sub
or
mov
mov
push
cld
loopne
add
add
int
fidiv
fisttp
out
mov
ret
push
push
pusha
mov
movs
cld
sub
loopne
and
ret
je
ret
push
(bad)
out
and
je
bt
adc
adc
scas
jns
push
ins
adc
mov
or
mov
or
sbb
sub
sub
push
sbb
and
or
into
xor
mov
ja
mul
fmul
or
pop
and
push
push
mov
cmp
shl
sbb
and
es
in
das
(bad)
pusha
or
push
push
push
test
push
xchg
mov
pop
mov
loope
shl
or
pop
push
inc
loope
fisttp
sub
add
mov
fisubr
jecxz
clc
fsub
inc
add
outs
pop
mov
sets
loop
sbb
pop
pop
mov
int3
jl
adc
add
add
mov
mov
outs
dec
and
sbb
mov
inc
adc
mov
adc
(bad)
mov
test
inc
std
rol
out
and
mov
sub
add
mov
adc
add
pop
mov
inc
adc
mov
test
dec
xchg
ja
push
loop
mov
dec
cmp
and
adc
push
add
pop
inc
mov
ins
(bad)
cmp
fsub
in
cld
mov
mov
stos
mov
stos
repnz
push
mov
pop
push
pop
cld
mov
scas
mov
push
mov
retf
push
pop
mov
push
(bad)
add
cmps
pop
jns
pop
ret
inc
mov
mov
pop
cli
retf
push
mov
xchg
or
mov
adc
adc
add
lock
jg
stos
sub
mov
stos
mov
stos
stos
inc
inc
inc
pop
inc
jo
xlat
push
mov
add
mul
add
and
in
sbb
ins
sub
rcr
or
jl
sbb
pop
pop
pop
xchg
xchg
mov
rol
repnz
mov
inc
stos
in
shl
push
call
sub
lods
add
pop
push
mov
dec
adc
or
sub
lds
jne
or
je
and
aaa
push
lods
movs
inc
add
dec
sbb
into
jmp
div
mov
mov
inc
sbb
scas
or
cld
push
cwde
sub
and
jl
sti
jmp
dec
test
push
inc
mov
mov
sar
and
sub
data16
add
ret
es
mov
das
mul
sahf
xor
xor
icebp
push
aaa
adc
das
adc
pop
add
pop
shl
pop
retf
cmp
dec
cmp
dec
test
fistp
jl
ja
adc
xchg
dec
loopne
cmp
aam
lock
fmul
or
push
push
je
or
rcl
lods
add
add
aaa
cmp
rcl
sub
push
lea
(bad)
sbb
js
neg
aas
je
or
push
push
test
or
pop
pushf
mov
adc
icebp
neg
add
fimul
adc
jb
sbb
pop
in
jmp
or
test
or
aaa
call
push
cmp
dec
lock
and
das
stos
mov
stos
cmp
pop
pusha
fiadd
or
cmc
xchg
mov
xchg
inc
mov
loopne
add
mov
adc
loopne
dec
fild
mov
push
cmp
push
inc
dec
push
add
push
(bad)
and
adc
cmc
add
jnp
xor
cmp
(bad)
jne
inc
(bad)
sbb
dec
add
jne
test
mov
add
jne
dec
pop
sbb
sbb
mul
or
cmp
jle
or
dec
add
lock
jae
sub
and
or
mov
clc
dec
in
jmp
call
sahf
imul
(bad)
mov
pusha
or
xor
sti
mov
push
(bad)
or
popf
xor
and
push
pop
jbe
cmps
sti
mov
push
mov
push
pop
mov
push
pinsrw
mov
lods
jle
lods
cmp
jae
cmp
gs
mov
into
push
push
inc
clc
mov
mov
inc
xchg
jae
mov
fild
push
pop
(bad)
cmp
mov
and
add
pushf
pop
mov
pop
scas
(bad)
xchg
adc
ror
sbb
out
add
jmp
sbb
adc
xor
popf
xchg
cmps
adc
cmp
jne
push
push
gs
inc
rcr
inc
imul
sbb
push
push
push
dec
adc
cmp
cs
sbb
pop
sbb
sub
and
mov
jne
sub
popa
and
dec
ret
push
jno
cld
nop
outs
out
pushf
cli
ret
jmp
push
test
loopne
mov
sub
out
pop
fwait
test
ss
mov
dec
in
in
jmp
out
call
(bad)
imul
imul
push
mov
sti
xchg
add
cli
add
adc
fs
leave
in
test
xor
std
add
cli
pop
call
repz
out
sti
out
outs
jmp
fwait
(bad)
shl
or
mov
stos
mov
mov
test
pushf
outs
call
fnstsw
sub
das
mov
(bad)
or
add
jmp
adc
cld
out
xchg
cmp
cmp
cmp
dec
jo
push
inc
repz
(bad)
jnp
cld
or
shl
mov
popf
sahf
ret
cmp
stc
fistp
icebp
pop
ret
call
les
jae
xlat
cmp
ins
push
push
outs
and
cdq
jo
add
adc
or
cmp
adc
les
lea
mov
push
fsub
sub
add
mov
ficomp
out
dec
mov
push
mov
jae
mov
fcmovb
call
pop
pop
fisttp
jno
inc
push
cwde
add
or
mov
adc
or
jmp
ret
add
shl
mov
scas
sbb
adc
ret
cmp
call
ss
or
(bad)
call
call
sbb
jne
ret
pusha
push
dec
jecxz
fisttp
pop
adc
or
and
mov
mov
ins
cmp
test
mov
std
mov
stos
jecxz
mov
sbb
clc
pop
popa
or
cwde
push
call
sub
mov
sbb
mov
push
push
push
mov
mov
mov
dec
jecxz
sbb
and
sbb
inc
add
pop
loop
clc
mov
push
pop
stc
mov
(bad)
pop
push
sbb
stos
xchg
fmul
ret
cmp
push
or
inc
jle
stc
jne
mov
push
clc
mov
mov
add
movs
dec
repz
sub
mov
or
repnz
sbb
sub
or
add
es
call
ins
sbb
add
pop
call
jnp
mov
mov
or
pop
pop
add
push
cli
call
out
arpl
or
push
mov
(bad)
sbb
rol
or
or
je
push
jbe
pop
clc
dec
enterw
add
jns
clc
add
call
fsubp
test
fcom
cld
mov
add
in
pop
stos
inc
add
or
cmp
mov
mov
sbb
aam
push
mov
mov
cld
or
fdivr
add
icebp
mov
xchg
pop
retw
and
mov
mov
and
in
cmps
push
lods
sbb
push
pop
dec
inc
loope
icebp
add
and
cmp
cmps
test
dec
push
imul
push
out
ins
xchg
retf
mov
loope
jb
add
fisttp
in
test
jne
retf
and
jbe
xor
push
loop
outs
sbb
mov
jmp
add
ja
jae
mov
pop
stos
pop
mov
in
out
pop
push
mov
or
mov
popf
or
and
inc
test
data16
mov
dec
cmp
push
pop
pop
je
or
cld
rep
xchg
loopne
call
add
or
sar
ror
mov
mov
jmp
push
mov
adc
adc
adc
aaa
jmp
fld
xchg
add
repnz
push
(bad)
out
jle
add
and
push
call
cmp
jmp
cmp
xor
push
jmp
adc
rcr
les
cmp
das
in
push
sbb
cmp
mov
inc
shr
imul
push
cli
adc
jbe
test
jmp
push
mov
jge
hlt
fwait
jle
pop
pop
add
outs
jmp
adc
sbb
add
cmp
adc
push
and
stos
dec
cld
sbb
rol
push
add
add
adc
mov
popa
das
push
pop
push
je
inc
cld
nop
loop
fadd
add
ds
push
push
clc
stos
or
(bad)
mul
cmp
addr16
cs
and
add
mov
xchg
xchg
push
sbb
jmp
mov
jo
cmp
jne
mov
fcomi
mov
sbb
jb
push
sar
stc
ret
sti
cld
pusha
xchg
frstor
pop
push
ret
nop
jle
pop
and
sti
pusha
add
iret
add
jmp
sbb
loop
jmp
jmp
je
fwait
sub
out
pop
mov
movs
aam
mov
nop
xchg
hlt
mov
adc
xlat
sbb
js
sbb
loopne
push
push
iret
cmp
jg
sti
jae
mov
jmp
call
add
call
ja
mov
mov
shl
add
inc
xchg
mov
or
add
inc
call
(bad)
push
jmp
call
jmp
test
sub
jmp
call
sub
(bad)
sub
inc
cld
pop
add
pusha
adc
or
fs
mov
add
call
and
xor
data16
out
or
mov
mov
data16
cmp
or
push
ret
(bad)
mov
cmp
push
fiadd
push
pop
pop
pop
ret
push
mov
data16
sub
mov
setb
pop
adc
sub
call
jb
mov
mov
stos
add
lods
xchg
or
add
or
dec
or
sbb
sbb
dec
sbb
or
(bad)
mov
add
or
mov
or
or
psllw
sub
mov
dec
lods
add
loop
neg
adc
out
push
cmps
and
jmp
std
and
mov
stc
outs
mov
inc
hlt
add
cmp
mov
jb
sbb
clc
pop
mov
jge
inc
dec
and
or
dec
fild
ins
push
fdiv
xchg
push
pop
sub
mov
(bad)
adc
pop
add
jb
ret
mov
stc
out
cli
mov
or
loope
call
mov
pop
mov
push
sbb
or
cmp
jae
shl
out
mov
fmul
push
or
mov
or
adc
adc
cmp
pop
mov
jecxz
pop
popa
sbb
adc
and
mov
adc
pop
adc
sbb
inc
sub
and
or
retf
add
loopne
xor
aas
aas
mov
out
jne
adc
adc
aam
jg
hlt
inc
mov
push
(bad)
or
add
clc
cmps
mov
bound
repz
clc
std
mov
mov
jecxz
std
movs
out
movs
(bad)
std
mov
(bad)
jo
sbb
int
int
mov
or
mov
fstp
into
mov
mov
clc
mov
scas
std
(bad)
jmp
lahf
add
ss
adc
loopne
retf
shl
std
pop
inc
into
dec
cmp
adc
add
sub
ror
and
jae
mov
mul
dec
mov
add
shl
add
jl
cmp
mov
mov
cmp
cli
(bad)
push
push
sbb
push
push
inc
shl
jmp
cmp
or
jo
(bad)
fbstp
push
mov
pop
jb
call
or
fistp
xor
xchg
sbb
shr
movs
pop
sbb
mov
loop
jmp
jmp
pop
movs
sbb
adc
scas
pop
adc
add
sbb
add
shl
cs
(bad)
dec
dec
dec
dec
dec
mov
stos
pop
sahf
pop
xchg
pop
xchg
push
mov
fisttp
sub
gs
mov
test
stos
sbb
add
sti
xor
add
lods
pop
cmp
jne
adc
cmp
mov
fisub
loope
mov
sub
leave
cmps
xor
and
aaa
pop
xlat
ror
inc
clc
icebp
icebp
ja
mov
rol
mov
pop
or
add
add
outs
loop
aaa
push
loop
pop
scas
jmp
jno
repnz
(bad)
jmp
popa
ret
lea
mov
xchg
lidtd
or
mov
dec
mov
movups
push
add
jbe
lock
add
imul
xchg
adc
out
test
ja
cli
sti
cld
jmp
push
mov
xor
mov
add
stos
dec
xchg
xlat
in
mov
call
clc
in
cmp
je
jle
(bad)
pop
jecxz
je
cmp
fldenv
enter
mov
es
add
mov
je
add
pop
xchg
mov
popa
jmp
call
call
jne
xchg
inc
cmp
mov
arpl
push
loop
or
sub
cmc
jmp
pop
add
inc
movs
movs
sub
push
jle
cmps
dec
push
mov
cmp
pop
add
inc
loop
(bad)
(bad)
call
pop
pop
and
mov
mov
mov
ret
ss
sar
inc
inc
push
dec
dec
fistp
clc
leave
sub
and
and
lea
adc
push
sub
mov
add
cmp
cmp
scas
sub
cmp
sub
xor
cld
(bad)
cs
mov
fucomip
std
add
mov
lods
call
sbb
mov
pop
sbb
and
in
jmp
test
cmps
bound
test
sub
icebp
movs
es
lods
jmp
je
lods
das
jne
data16
mov
mov
les
test
(bad)
clc
mov
(bad)
stc
sbb
pop
mov
inc
cmp
jb
mov
sub
aas
test
loope
push
data16
retf
dec
mov
and
ret
or
stos
sbb
in
push
dec
or
pusha
call
clc
push
add
inc
sahf
inc
fisttp
xor
(bad)
adc
xor
jne
and
rcr
dec
enter
push
test
sub
imul
push
ja
(bad)
pop
xchg
xor
(bad)
jmp
sbb
scas
loope
pop
sbb
and
cmp
or
add
enter
mov
mov
data16
inc
ins
repnz
loopne
call
rol
push
cs
fnstsw
sbb
(bad)
lods
dec
lock
bound
push
push
push
push
test
xor
popa
mov
out
dec
shr
je
inc
ffree
push
mov
pop
fist
add
ficom
mov
push
push
mov
mov
test
add
std
aas
out
cmp
jne
pushaw
cli
mov
out
(bad)
sub
jb
pop
pop
pop
mov
test
loop
data16
mov
mov
ror
retf
neg
jne
shl
mov
xor
and
xchg
jb
or
int3
push
push
push
call
mov
jb
je
and
clc
out
out
mov
cmp
call
shl
int
and
dec
mov
shl
rcr
fist
call
stc
push
es
push
fnsave
mov
or
mov
fs
test
add
or
mov
push
and
jmp
retf
call
xchg
data16
push
shl
imul
stos
adc
and
adc
out
inc
ret
int3
mov
cs
dec
dec
mov
add
or
lods
rol
or
mov
pop
mov
push
adc
fdivr
push
jmp
cmp
xchg
dec
mov
jmp
push
mov
or
(bad)
(bad)
jg
jb
cmps
dec
push
jne
and
je
cmp
add
stos
rcl
inc
call
mov
mov
pop
jle
push
sbb
test
mov
repnz
adc
mov
jmp
and
std
mov
(bad)
dec
in
mov
clc
pushf
inc
sub
lods
inc
add
cmp
cmps
and
sahf
mov
pop
mov
bound
sbb
in
int3
fcom
and
outs
add
rcr
pop
fst
sbb
adc
mov
mov
sbb
jmp
data16
int3
xchg
xlat
xchg
cld
test
sbb
jle
push
jle
add
and
cmp
add
dec
mov
sbb
ss
sbb
rcr
(bad)
mov
mov
push
mov
push
xchg
mov
loope
pop
push
mov
inc
sti
sbb
jl
xchg
sti
push
frstor
jl
push
adc
test
mov
xchg
mov
push
shr
lea
loop
cmp
and
outs
in
or
inc
mov
int3
or
ror
nop
and
cmp
sti
sti
retf
xchg
inc
xchg
mov
outs
or
xor
ins
pusha
retf
mov
pop
and
mov
xor
jl
and
cmp
push
aas
adc
daa
and
test
or
mov
add
jne
not
(bad)
retf
xor
popf
xlat
mov
je
call
xchg
int
mov
call
ret
add
or
repnz
mov
cld
mov
inc
inc
or
fbstp
mov
push
mov
pusha
xchg
dec
mov
xor
movs
pusha
inc
loopne
loope
jle
mov
cld
cld
sbb
add
jmp
mov
gs
xchg
retf
mov
sub
xor
inc
mov
mov
pusha
scas
test
add
inc
and
jg
shl
(bad)
cmp
je
xor
outs
imul
cmp
mov
jl
mov
push
and
dec
lods
push
or
adc
ret
or
cmp
xor
cmp
push
dec
adc
xor
int
push
inc
add
push
jo
push
(bad)
scas
fs
jno
pop
mov
push
pop
lods
cmp
jne
mov
sub
xchg
stos
sub
pop
ret
adc
push
(bad)
stc
repnz
test
push
push
xlat
fstp
call
clc
rol
call
clc
dec
data16
inc
sahf
mov
call
push
mov
adc
xchg
sub
jmp
aam
lock
mov
pushf
pop
inc
add
pop
outs
jle
cs
push
in
xor
rol
adc
pop
mov
fs
push
mov
(bad)
adc
sbb
dec
imul
mov
mov
fs
inc
push
adc
mov
mov
push
add
div
and
mov
cmp
dec
(bad)
mov
inc
(bad)
mov
xor
mov
mov
push
call
xor
mov
push
loopne
push
inc
jmp
(bad)
ds
nop
mov
enter
sti
sbb
add
test
jne
or
mov
out
inc
or
out
or
jmp
call
or
popf
scas
adc
icebp
sub
hlt
push
jecxz
sti
mov
sbb
xchg
dec
xlat
xor
xor
pop
or
adc
push
adc
dec
jo
pushf
mov
iret
xchg
sahf
mov
daa
cmp
sub
pop
sub
aas
int
lods
out
mov
mov
mov
mov
push
xchg
mov
je
sbb
sub
mov
enter
add
mov
push
jp
leave
sub
push
cmp
arpl
pop
add
add
push
mov
dec
and
push
inc
sub
fcomp
shl
iret
xor
mov
sub
stos
rol
ret
shr
retf
push
jmp
(bad)
add
jmp
(bad)
je
push
push
push
push
push
std
leave
xchg
sti
jg
push
adc
adc
loopne
jle
pop
fidivr
push
clc
out
mov
xor
add
sub
inc
adc
fxch
mov
mov
or
packsswb
or
icebp
push
sbb
add
lea
pop
cwde
and
xchg
xchg
sbb
or
pushf
inc
inc
imul
mov
mov
adc
jns
add
inc
cmp
and
adc
jne
adc
adc
adc
cli
add
shl
ja
xchg
jbe
xor
ins
jmp
pop
loopne
or
fdiv
mov
ja
cmps
xlat
push
xchg
(bad)
cmp
ja
jmp
push
push
out
add
push
loopne
add
je
call
push
lds
lods
ror
shr
mov
fadd
jmp
xor
inc
sub
pusha
jp
cmp
push
push
sbb
fld
adc
sbb
clc
cmps
xchg
pop
movs
iret
idiv
ror
jmp
push
les
mov
mov
enter
outs
popa
mov
mov
mov
movsx
sbb
and
std
push
push
(bad)
test
xchg
test
inc
ins
sub
(bad)
out
sub
pop
daa
add
std
std
pmulhuw
movzx
xor
fimul
nop
mov
cmp
call
out
and
test
in
aam
jne
and
je
cmp
or
lock
les
mov
test
sbb
out
scas
sub
and
or
push
add
cmc
and
pop
adc
push
fcomp
je
push
add
aaa
push
std
inc
add
(bad)
adc
or
sub
dec
pusha
mov
outs
rol
ja
mov
adc
adc
cmp
(bad)
jl
int
dec
mov
add
or
dec
scas
or
rcl
icebp
outs
sub
xor
inc
mov
push
into
mov
mov
mul
sahf
mov
mov
inc
pusha
sub
mov
int3
es
add
shl
rcr
cmp
ja
jb
dec
aam
mov
pop
aam
ds
mov
ror
sbb
in
sbb
adc
loopne
add
xor
and
cmp
lahf
sbb
ss
mov
gs
sti
sub
pusha
jge
cmp
ret
mov
mov
(bad)
loope
nop
pop
ss
out
xor
add
ds
sbb
push
test
mov
xchg
(bad)
das
sbb
mov
pop
xchg
je
push
retf
or
inc
inc
out
push
lds
outs
add
or
sub
inc
dec
or
es
inc
inc
add
or
sti
adc
nop
push
mov
jb
cmp
push
or
ret
xor
push
bound
rol
dec
pop
int3
dec
jae
enter
sbb
sbb
inc
nop
imul
ret
or
fwait
dec
mov
test
jne
pop
cld
out
mov
jge
xor
adc
inc
and
stc
pop
mov
mov
aam
sbb
dec
dec
sub
das
inc
daa
rcl
adc
or
push
fdivrp
lea
push
jmp
and
push
cs
call
cmp
mov
or
jnp
sar
adc
loope
ret
test
pop
paddusb
mov
adc
fwait
dec
dec
call
jb
call
scas
out
punpcklbw
out
xor
xchg
add
pop
xor
jbe
jno
sbb
mov
inc
ins
or
(bad)
lock
jae
xchg
enter
add
add
sbb
inc
push
adc
in
rol
dec
ror
or
cmp
sbb
dec
loope
inc
add
or
arpl
jg
mov
je
jmp
cmp
fiadd
adc
and
popa
das
jmp
cmp
cmp
jl
std
iret
add
push
cmp
adc
jmp
cmp
cmp
cmp
imul
sub
sub
aaa
cmp
cmp
sub
inc
data16
(bad)
sbb
push
ins
inc
add
pop
cmp
jne
and
lods
or
out
add
or
jne
push
inc
sub
pop
add
xchg
xor
pop
mov
jmp
and
ror
dec
pop
mov
jmp
cmps
sub
cs
fmul
(bad)
loope
adc
ds
jne
or
lea
add
mov
inc
add
or
xchg
out
mov
ins
jle
call
dec
call
and
clc
mov
dec
and
leave
pusha
retf
sbb
mov
(bad)
je
mov
jmp
pop
jne
mov
mov
dec
mov
mov
inc
xor
add
sti
sti
push
call
je
mov
mov
out
add
sub
push
inc
or
push
(bad)
mov
jnp
pop
push
sbb
jmp
xor
xchg
adc
mov
or
push
gs
cmp
stos
jp
push
std
xor
mov
pop
or
stos
mov
ins
jmp
(bad)
data16
add
call
and
push
sbb
push
shr
icebp
pop
inc
daa
test
add
fbld
or
mov
clc
pop
hlt
add
or
push
fisttp
dec
nop
sbb
and
mov
jge
jmp
sar
in
sbb
enter
adc
dec
lea
pusha
mov
ret
pop
jne
call
add
sub
jno
std
jl
sub
lahf
sbb
xchg
imul
jo
test
jne
fadd
out
add
mov
sub
jo
cmps
std
mov
movs
cmp
or
call
cmp
ins
push
cmp
pop
in
and
push
add
daa
ds
add
sub
jmp
mov
adc
into
sahf
imul
sbb
jp
rol
(bad)
jle
leave
pop
js
popa
pop
cmp
ret
call
rol
outs
xor
outs
sub
and
test
sbb
pop
ja
call
call
push
fsubr
add
test
pop
jne
mov
sub
cmp
jbe
cmp
popa
mov
sbb
inc
or
dec
test
gs
jbe
adc
das
jbe
mov
add
(bad)
shr
mov
mov
test
call
fbstp
or
pop
cmp
inc
pop
(bad)
outs
add
dec
lock
jb
fcomip
or
or
add
pop
lock
adc
ins
xchg
or
or
jbe
cld
bound
cmp
cmp
rcr
push
shl
push
shl
pop
pop
pop
adc
add
add
inc
ret
(bad)
mov
imul
dec
shl
ret
(bad)
mov
cmp
adc
test
xchg
rol
sbb
cmp
xor
ror
pushf
adc
cmc
and
call
outs
fs
bnd
adc
jbe
jmp
xchg
jo
sbb
sub
popf
push
sbb
fdiv
push
push
imul
inc
add
clc
adc
enter
popa
or
idiv
and
ror
out
or
dec
in
jo
cmp
add
je
jmp
lds
mov
and
add
loope
ror
jno
mov
lea
jle
sub
sub
jns
mov
xchg
xchg
jmp
mov
hlt
imul
xor
cmp
jne
sbb
(bad)
mov
and
mov
jb
adc
or
fbstp
sub
xor
mov
mov
push
loopne
fistp
inc
(bad)
test
push
adc
xlat
mov
pop
les
pop
sbb
imul
cmps
jno
test
ror
mov
cli
or
push
popf
dec
inc
push
cmc
je
shr
enter
aas
add
jmp
push
mov
mov
or
or
sub
leave
mov
pop
push
aaa
cmp
jmp
and
jne
rcl
ret
xchg
icebp
jmp
and
inc
arpl
inc
je
cmps
inc
and
sub
add
cmps
pusha
ror
adc
cmp
aaa
and
xchg
sbb
add
fwait
test
adc
mov
mov
or
fcmovne
lods
lds
test
or
cmp
push
sbb
(bad)
popa
idiv
pop
inc
ins
ins
sbb
or
inc
pop
push
mov
bound
jmp
fwait
stos
(bad)
fild
mov
jo
add
jle
cmp
mov
or
sub
add
push
div
or
cmp
and
lock
or
data16
mov
push
ret
add
adc
idiv
push
sub
inc
push
and
aas
mov
cmp
adc
adc
add
add
mov
rcr
test
adc
inc
pop
push
mov
outs
push
fmul
test
adc
in
sub
adc
xchg
loop
sbb
(bad)
call
xchg
and
nop
push
out
pusha
lock
cmovs
mov
dec
test
inc
push
outs
cld
sti
je
pushw
or
fdivr
xor
sbb
dec
(bad)
push
dec
jp
call
jg
pop
jg
in
(bad)
call
rcl
pop
mov
imul
in
sub
adc
popf
call
sbb
push
mov
loopne
xor
jnp
mov
cs
push
sbb
jnp
mov
add
jae
or
inc
inc
jmp
mov
mov
outs
or
xor
and
or
movs
mov
cmp
nop
mov
lods
sub
jge
enter
call
mov
sub
cmp
fisub
mov
add
push
push
leave
jmp
mov
sub
adc
loopne
xor
mov
movs
add
and
mov
xor
outs
loope
aam
sub
and
mov
or
in
inc
adc
add
xlat
mul
mov
les
xor
loope
push
nop
mov
inc
inc
xor
and
push
cmp
cmp
je
ret
inc
mov
push
test
test
lea
jne
jae
mov
lea
mov
push
add
call
add
loop
inc
ret
clc
adc
jne
xlat
mov
add
pop
add
(bad)
xor
inc
sbb
xchg
push
and
sbb
adc
call
xchg
enter
scas
adc
push
aaa
adc
or
jbe
in
cs
add
movs
les
clc
jmp
xor
aaa
mov
xchg
add
mov
jmp
fsub
and
push
pop
pop
ds
add
fadd
cld
mov
nop
lahf
mov
sbb
mov
xchg
les
enter
dec
fs
sub
pop
pop
and
jecxz
jp
jne
(bad)
xlat
adc
lods
(bad)
loopne
push
popf
cdq
jmp
push
stc
mov
xor
cmp
popf
cmp
jne
jmp
jne
mov
xchg
jmp
push
dec
fcmovb
pop
jbe
sbb
pop
outs
ja
lods
pop
adc
dec
je
push
retw
jne
push
int3
add
push
jno
in
cli
jge
fst
(bad)
scas
add
out
popa
cmp
pop
jns
sub
pusha
cmp
das
sbb
imul
sbb
pop
push
xchg
sub
pop
and
dec
sbb
xchg
inc
aaa
arpl
xor
aad
adc
outs
pop
mov
pop
loopne
jp
shl
add
daa
cmps
add
mov
lock
out
fistp
cmp
loope
out
mov
stos
inc
mov
jmp
jp
ret
clc
mov
xor
popf
pop
lock
cmp
je
push
mov
xchg
pop
(bad)
rol
mov
jmp
into
jg
inc
lock
pop
fcom
xchg
jecxz
inc
cwde
test
xor
or
mov
cmp
jg
lods
pop
bound
xor
pop
test
(bad)
rol
sub
mov
jb
jne
add
mov
loop
jmp
std
xchg
mov
or
shl
mov
dec
push
shl
icebp
mov
sub
cmp
mov
jbe
jge
call
fdiv
push
cmp
add
cli
push
push
push
push
(bad)
mov
mov
sahf
je
xchg
inc
sub
clc
jne
and
add
adc
aas
mov
and
mov
mov
or
lods
movs
out
cmp
inc
cmps
pop
ud1
fcmovnu
out
(bad)
xor
or
cmp
push
push
mov
inc
hlt
loope
pop
jle
or
jns
std
loopne
push
xlat
es
pop
pop
cmp
repnz
(bad)
setle
pop
push
push
add
mov
xor
mov
imul
lea
rcr
je
mov
jg
(bad)
adc
ret
add
ret
fdivr
sbb
ficomp
pop
lock
popa
dec
or
cmps
in
sar
xchg
dec
sbb
ins
imul
mov
add
mov
rcr
add
(bad)
xor
push
sbb
dec
hlt
ins
pushf
jbe
aas
cmp
push
add
mov
pop
inc
and
enter
cmp
adc
fdiv
mov
pop
pop
cmp
lea
sbb
jmp
push
fisubr
dec
sub
(bad)
out
inc
jb
cmp
ins
adc
lds
out
pop
cmp
cmp
or
cld
sbb
push
fidivr
mul
imul
mov
outs
pop
pop
jmp
movs
dec
mov
lods
mov
popf
sub
dec
mov
push
mov
push
jmp
lea
lea
std
sbb
inc
cs
fisttp
ins
inc
xor
dec
pop
add
jo
mov
add
and
adc
clc
test
je
out
fisubr
neg
mov
call
cli
adc
pop
ins
add
movs
cdq
xor
and
xchg
and
fild
and
iret
push
inc
push
mov
sub
jmp
clc
cwde
jmp
push
mov
lea
cmp
ja
mov
mov
sbb
stc
jl
(bad)
aaa
add
add
add
ret
movs
dec
mov
hlt
adc
outs
sub
imul
pop
(bad)
in
fldlg2
(bad)
fadd
adc
add
adc
xchg
xchg
pop
mov
add
add
pop
add
mov
mov
sbb
lea
cli
pop
enter
push
adc
rcr
clc
add
mov
dec
dec
and
loop
enter
addr16
les
icebp
add
rcr
(bad)
pop
sbb
shl
add
in
cwde
mov
add
sbb
pop
fdiv
push
(bad)
je
fisttp
sub
dec
adc
sbb
sbb
cwde
add
mov
mov
es
inc
aad
cmp
push
lods
enter
(bad)
mov
pop
cmp
dec
xchg
lock
cli
enter
adc
jnp
add
dec
mov
je
jmp
dec
jne
mov
cmp
mov
cli
mov
or
adc
leave
cmp
jne
data16
xchg
fs
inc
adc
mov
daa
add
ja
xor
ror
enter
mov
push
pushf
aad
lea
add
cmp
loop
and
push
scas
je
ins
cli
test
mov
sbb
jl
or
daa
sub
fmul
adc
scas
test
(bad)
test
sahf
and
cli
sbb
add
adc
iret
and
cmp
sub
dec
call
cmps
sbb
movs
sbb
xor
out
pop
out
mov
popa
mov
push
jnp
cmp
scas
sbb
push
call
push
and
adc
sub
jns
mov
jmp
dec
fild
(bad)
ror
or
les
mov
push
sbb
push
js
(bad)
cdq
popf
jle
push
push
adc
inc
imul
shr
sbb
mov
add
xchg
pusha
lea
sar
enter
clc
stos
sbb
add
mov
mov
push
sbb
(bad)
clc
jo
(bad)
jmp
shl
out
sub
dec
cmp
(bad)
push
mov
dec
xchg
dec
fst
mov
or
out
xor
cmp
adc
push
ret
inc
adc
or
adc
adc
sbb
mov
cmp
call
and
(bad)
clc
shl
push
push
mov
aad
es
add
mov
stos
aaa
ja
ins
jae
es
jmp
rol
xchg
and
jmp
div
pop
mov
sub
cmp
push
sub
cmp
xor
adc
cmp
jne
hlt
jp
xchg
(bad)
dec
xlat
test
rol
or
pop
or
icebp
repnz
fidiv
jl
sbb
aas
aas
rdpmc
loop
loope
jae
push
mov
test
inc
loopne
mov
mov
add
pop
fstp
lea
ret
or
test
inc
cmp
fwait
mov
push
(bad)
pop
pop
ret
and
ja
sub
or
jle
adc
imul
mov
loop
sbb
xchg
push
add
adc
pop
test
fstp
out
std
add
push
aaa
ds
pop
pop
cmp
rcl
mov
lock
xor
mov
inc
outs
ret
add
loop
mov
mov
and
adc
jmp
pop
repnz
popa
jl
xor
xor
rcr
rol
lds
imul
loopne
loop
xor
xchg
adc
rol
inc
lock
add
push
mov
push
pop
vpminub
cdq
cmp
jg
jl
and
stos
adc
loopne
retf
in
ror
nop
pop
and
fs
repz
mov
cmp
icebp
inc
jne
mov
sub
or
pop
jne
sbb
inc
retf
jmp
std
jle
jo
int
or
add
mov
repz
nop
pop
jo
imul
(bad)
lock
in
cmps
inc
xchg
scas
(bad)
mov
ret
push
adc
mov
add
adc
into
jg
js
jl
xchg
xor
mov
pop
mov
nop
add
clc
push
jmp
pushf
loope
or
sar
cwde
xchg
out
adc
jbe
ror
stos
mov
cmp
mov
mov
div
inc
repnz
out
gs
mov
outs
or
(bad)
dec
je
cmp
adc
inc
add
push
dec
dec
jmp
pusha
xor
add
daa
shr
mov
add
add
sbb
mov
add
or
imul
(bad)
pop
adc
xor
aas
je
cmp
add
push
xchg
xchg
fs
jp
aaa
dec
rcl
cmp
sbb
(bad)
pop
dec
ret
shl
add
inc
jb
ss
clc
add
jo
div
and
mov
test
movs
cmp
imul
xchg
or
fldcw
xchg
or
and
inc
pushf
out
fs
sbb
or
mov
nop
xchg
xchg
cmp
lea
mov
dec
pop
mov
aaa
imul
sbb
lea
shl
and
ficomp
add
add
js
repz
pop
inc
mov
stc
outs
adc
jge
movhps
(bad)
sbb
jg
or
ret
test
arpl
bound
out
cmp
sbb
pop
or
inc
dec
xor
sti
imul
jecxz
push
ins
mov
shl
imul
mov
fwait
or
nop
es
jno
jb
jbe
cmp
jle
into
or
(bad)
add
stc
dec
adc
jmp
adc
test
add
daa
loopne
mov
mov
xchg
out
and
cli
add
ja
or
scas
outs
sbb
push
sub
mov
xor
daa
call
jo
ja
sbb
jmp
shl
pop
sbb
lahf
sub
add
cmovae
rol
jecxz
push
fcomp
inc
movs
int3
pushf
inc
add
or
lock
mov
pop
jbe
ficomp
div
fcom
mov
inc
mov
mov
(bad)
and
sbb
or
xor
or
(bad)
lea
test
mov
jae
retf
jg
or
div
and
sbb
ffree
rol
dec
dec
mov
(bad)
(bad)
mov
mov
jmp
std
dec
clc
popa
sbb
stos
(bad)
push
clc
sub
sar
xchg
leave
mov
out
xlat
in
push
out
dec
mov
xor
mov
mov
test
lods
xchg
scas
jnp
repnz
loopne
imul
cmp
cs
fabs
ret
sub
fiadd
in
sub
xor
stc
sbb
scas
push
xlat
add
or
repnz
fadd
pop
movsx
loope
pop
jbe
adc
dec
or
(bad)
jge
mov
sub
pop
xor
dec
lods
push
add
xchg
cli
cmp
xlat
mul
movs
mov
xor
mov
cmp
mul
out
mov
js
lea
sbb
fimul
sub
mov
pop
mov
jge
retf
fld
lea
outs
rol
mov
sub
sbb
pop
adc
adc
adc
mov
push
cmps
(bad)
leave
jnp
inc
jecxz
fstp
(bad)
jle
sbb
sti
mov
lahf
stos
push
pop
sub
ja
not
jle
cs
call
ins
iret
mul
ret
lahf
mov
mov
mov
dec
and
mov
test
lods
sbb
jae
pop
cmp
inc
jg
mov
sbb
outs
jb
xchg
sub
jg
jl
inc
add
push
jne
stos
out
repnz
imul
and
test
sub
sti
mov
sub
fldcw
gs
nop
or
ins
pop
sbb
fadd
fnstenv
push
(bad)
add
sbb
mov
mov
cmp
or
(bad)
and
jne
pop
push
add
pop
or
neg
retf
shl
inc
shr
inc
inc
dec
push
cdq
add
cmp
cmp
pop
and
or
cmp
dec
mov
jge
mov
test
xchg
mov
adc
cdq
adc
fiadd
mov
mul
xor
ffree
and
aas
cmp
iret
jne
cmp
icebp
mov
adc
push
jg
push
and
stos
test
fsub
sbb
into
packssdw
rol
je
add
aad
aad
sar
mov
add
push
repz
push
aad
adc
neg
jl
dec
sar
dec
bound
ss
push
sbb
add
mov
fidivr
imul
inc
jo
mov
jmp
add
in
fdiv
iret
mov
xchg
retf
ja
pop
neg
gs
pop
cmps
jp
mov
mov
push
mov
jg
cli
mov
sub
cli
(bad)
ss
dec
add
add
cmp
jae
ret
push
cli
mov
mov
cs
xor
or
and
pop
je
pusha
pop
adc
scas
or
lea
div
add
jmp
inc
cmp
push
(bad)
out
mov
pop
dec
cmp
jns
jl
add
push
scas
pop
outs
mov
pusha
mov
in
xchg
add
mov
push
scas
pop
mov
mov
sub
sub
jns
movs
xchg
sahf
push
sbb
sub
inc
(bad)
aam
ins
mov
cmp
xor
adc
push
lock
loop
test
aam
cli
adc
mov
add
leave
cmp
rol
test
or
cmp
ret
ret
sbb
aam
mov
aam
in
aam
es
dec
push
fs
ja
jae
fcmovu
xor
adc
adc
lods
aam
cmp
mov
mov
call
ins
test
pop
neg
dec
or
mov
push
ins
movs
lea
leave
dec
adc
xor
mov
mov
mov
in
sbb
and
push
pusha
dec
pop
in
xchg
cld
mov
adc
stos
test
addr16
je
inc
cmp
mov
and
cmp
enter
xor
push
mov
test
mov
stos
sbb
cdq
xchg
les
xchg
dec
test
mov
or
enter
jae
sub
jge
das
int3
dec
push
ror
xchg
mov
les
mov
les
shl
dec
cmp
jle
push
push
push
xor
pop
jnp
call
bswap
add
xchg
push
xor
push
mov
sub
add
mov
push
movsx
hlt
mov
pusha
call
mov
add
ret
push
push
ret
dec
pusha
not
push
icebp
lea
inc
or
jnp
push
add
mov
jl
pop
ret
mov
dec
icebp
je
and
fdivr
inc
pop
cld
leave
add
pop
xchg
inc
adc
mov
sahf
les
inc
cld
push
loopne
stos
push
push
mov
pop
ins
fist
adc
add
fdivr
and
or
cld
les
fsubrp
mov
mov
fldenv
inc
sahf
or
je
push
lds
pusha
test
pop
xchg
out
mov
cdq
pop
push
add
mov
xchg
push
test
jle
in
mov
std
push
push
lahf
mov
test
aam
push
fs
leave
sub
(bad)
pusha
sar
(bad)
push
add
jnp
and
aaa
push
cmp
xor
xor
movaps
pop
add
cmp
jne
mov
sbb
cwde
or
stos
inc
cdq
jmp
add
mov
pop
pusha
xchg
mov
xchg
ret
mov
mov
test
sbb
pop
cmp
ds
pusha
(bad)
jbe
pop
and
call
retf
sub
push
stos
push
inc
inc
loope
push
mov
cwde
mov
push
retf
bound
xchg
inc
adc
add
loopne
lea
inc
jne
xor
sub
lods
push
clc
push
add
sbb
push
data16
xchg
movs
(bad)
neg
mov
pop
and
add
push
and
sub
lods
adc
ror
lock
out
js
xchg
add
xchg
pop
or
out
mov
pop
data16
push
mov
mov
add
push
push
inc
add
stos
or
imul
push
and
push
pusha
mov
cmp
and
pop
add
fistp
fmul
pop
or
cmp
shr
mov
jge
add
add
cli
in
ffreep
clc
int
cmp
jne
inc
inc
retf
pop
jns
(bad)
fwait
mov
pop
push
mov
push
jb
sar
(bad)
mov
jb
dec
dec
push
mov
and
in
jmp
inc
dec
fld
dec
clc
inc
dec
inc
jne
addr16
jmp
dec
xchg
retf
loope
(bad)
add
and
inc
inc
push
daa
mov
push
jmp
bound
mov
(bad)
mov
or
pop
cwde
xchg
das
and
setbe
pop
jmp
pop
lock
add
sub
retf
into
sar
jae
jmp
lea
xor
mov
(bad)
cmp
jb
fldcw
xor
shl
pushf
fisttp
out
or
(bad)
cli
push
push
inc
jg
inc
adc
xchg
(bad)
mov
je
push
popa
or
push
cmps
dec
add
dec
add
push
dec
in
mov
pop
mov
xchg
xchg
imul
jmp
es
ja
xchg
or
hlt
mov
pop
xor
mov
push
and
add
test
xor
add
mov
or
pop
sbb
cmp
sub
jge
in
mov
sar
ja
pop
mov
and
int3
add
or
retf
and
adc
mov
add
mov
pop
adc
adc
push
retf
scas
add
push
xchg
mov
mov
mov
lods
js
data16
add
jbe
mov
push
push
cdq
pop
cdq
clc
int3
sbb
or
inc
jmp
adc
push
mov
sbb
jne
xchg
shr
inc
pushf
or
jp
inc
jl
jnp
cwde
xchg
pop
mov
adc
lds
xor
xchg
call
cmp
je
adc
or
inc
jecxz
clc
mov
mov
(bad)
xor
cmc
push
or
call
jmp
ja
pcmpeqd
mov
lahf
out
jns
pop
ret
mov
je
xor
adc
mov
mov
mov
les
mov
ror
ror
and
xchg
pop
jle
out
jecxz
pop
jne
test
add
add
ret
mov
or
jmp
and
sub
in
scas
jo
sbb
mov
das
or
xchg
aam
shr
jns
stos
xchg
jno
push
fcom
inc
or
or
jmp
inc
or
adc
in
jl
push
inc
xor
add
and
cwde
inc
cmp
pop
popf
loop
in
sar
mov
jb
fst
cmp
enter
adc
adc
nop
jmp
dec
shl
push
dec
pushf
nop
push
popa
xlat
inc
cmp
out
int3
call
ss
pop
call
les
or
adc
stos
sbb
pop
stc
push
aaa
mov
mov
jmp
sub
ja
push
ud0
cmp
jbe
scas
xor
pop
repnz
mov
add
iret
xchg
stos
cs
adc
adc
(bad)
and
ds
pop
in
add
jmp
mov
sbb
add
inc
popa
stos
aaa
sahf
ds
in
xchg
mov
mov
cmp
jl
sbb
inc
add
cmp
jl
or
xor
call
sbb
lock
cmp
call
call
or
push
or
pop
ret
mov
out
ret
mov
sub
xchg
cmp
jb
sti
or
add
push
xor
loope
loopne
or
jmp
add
fdiv
fld
and
mov
pop
jl
jle
call
pop
xor
sahf
imul
shr
push
add
xor
arpl
pop
sbb
mov
pop
movs
sti
fisub
sbb
jnp
repnz
xor
push
je
sub
adc
push
xor
pop
dec
in
daa
sbb
in
ror
das
and
mov
add
loop
inc
push
push
loope
fwait
retf
push
push
xor
dec
dec
sub
scas
sub
cmp
add
inc
inc
cmp
jne
xor
ins
hlt
jno
je
adc
jb
sub
or
cmps
pop
push
pop
mov
lock
cs
imul
ins
pop
clc
je
mov
dec
xor
(bad)
mov
neg
cs
out
push
pop
mov
pop
je
cmp
jne
fcmovne
fisttp
or
stos
cdq
sbb
movs
cdq
mov
fnstenv
cmp
mov
icebp
call
mov
fimul
movs
outs
push
pop
pop
pop
push
(bad)
enter
imul
mov
sbb
push
push
push
or
mov
adc
aaa
icebp
loopne
and
call
ffree
and
or
(bad)
out
imul
mov
cmp
je
push
mov
sub
push
push
push
pushf
pop
test
or
stos
test
leave
out
add
lods
ja
pop
mov
and
or
(bad)
mov
shl
push
push
jmp
mov
fld
jecxz
add
jbe
mov
dec
imul
and
adc
cmps
bound
outs
add
test
xchg
add
push
and
mov
or
sbb
sbb
clc
xchg
xchg
add
push
push
push
addr16
jne
jg
mov
cmp
mov
xchg
cmps
jns
push
push
scas
arpl
inc
push
push
test
pop
sub
shr
fist
shl
ds
sub
cdq
enter
pop
(bad)
bound
in
je
mov
je
add
js
pop
mov
xor
ret
jecxz
cmp
imul
inc
sub
shr
push
push
push
push
push
push
ss
ror
sbb
mov
jbe
mov
imul
(bad)
stc
cmp
pop
jle
and
dec
xlat
push
add
inc
mov
adc
shl
add
ja
test
push
nop
jecxz
inc
jge
push
xchg
ins
test
cld
pop
cmp
sbb
sub
fadd
(bad)
jbe
inc
rcl
inc
sbb
out
out
dec
push
call
je
iret
jbe
in
test
fimul
retf
mov
mov
cli
icebp
ret
imul
inc
add
aaa
xchg
mov
push
push
dec
ret
mov
jl
mov
adc
mov
adc
or
ret
call
and
push
jns
push
push
push
and
cmp
and
in
push
adc
adc
ret
js
inc
cmp
(bad)
jmp
add
xadd
enter
mov
adc
cmp
cmp
int3
push
dec
lahf
mov
inc
inc
cmp
cmp
sbb
push
xchg
push
sbb
pop
jmp
mov
add
test
cmp
jo
or
adc
loope
push
lahf
sbb
xor
or
or
dec
sub
pop
out
and
fcomp
xor
pushf
shl
int3
adc
mov
fisub
cmp
jne
or
or
fs
imul
movs
mov
jmp
mov
sahf
ret
jg
mov
or
adc
jmp
mov
add
movs
jbe
jge
dec
mov
push
jl
int3
daa
xchg
jmp
or
call
cmp
mov
cmp
ja
mov
and
add
add
mov
cmp
jbe
cmp
ja
lea
enter
sar
jbe
jmp
mov
inc
shl
or
test
adc
imul
(bad)
cmp
rcl
or
inc
sbb
add
rcl
cmps
inc
out
mov
jle
mov
call
cs
and
mov
push
mov
mov
xchg
scas
push
mov
add
sahf
cmp
add
jo
(bad)
cmp
sub
pop
fidiv
pop
jb
cmp
pop
es
push
movs
test
test
jae
mov
js
leave
push
call
dec
mov
push
ja
cmp
jbe
not
lods
dec
rol
xchg
stos
inc
arpl
inc
xor
call
retf
pop
dec
sub
fwait
or
or
push
and
movs
jno
push
pop
and
push
mov
push
call
movs
ffree
adc
sbb
sub
(bad)
sbb
in
sbb
xlat
jno
repnz
pop
fld
(bad)
adc
xchg
push
retf
add
push
daa
popf
sar
enter
repz
lea
mov
nop
dec
mov
jne
sub
xchg
test
pop
add
push
push
sahf
test
dec
and
outs
scas
sbb
lds
fiadd
in
adc
popa
shr
pop
xor
mov
lock
or
mov
je
mov
jne
add
imul
xchg
neg
push
fsub
dec
xor
and
push
push
js
(bad)
pop
lods
sub
stc
mov
push
mov
cmp
jp
loope
cli
and
mov
pop
call
retf
cmp
repnz
xor
dec
gs
cmp
and
mov
pop
sbb
repz
push
fs
xor
mov
jne
inc
cmp
push
jne
mov
shl
sahf
(bad)
and
sbb
cli
push
scas
(bad)
dec
mov
or
jo
add
and
cmp
rcr
call
jge
pop
xor
add
push
cmps
dec
mov
add
jo
inc
sbb
retf
sub
or
jmp
out
push
pop
ror
sub
fwait
rcl
ret
cmp
mov
inc
cli
ja
ins
or
(bad)
in
xor
jnp
xchg
addr16
pop
sbb
mov
test
sub
jl
or
pusha
pop
cmps
popf
sbb
xchg
js
jo
int3
push
ja
push
pop
mov
loop
pop
stos
xor
rcl
dec
call
jl
sub
jmp
fs
mov
adc
cmp
loop
mov
pop
dec
pop
jmp
fimul
dec
xchg
fs
cmp
test
(bad)
stc
iret
add
nop
je
push
push
call
mov
xchg
lds
jo
adc
push
or
pusha
aas
stos
adc
imul
data16
sgdtd
scas
xchg
jmp
xor
movs
std
jp
or
bswap
rcl
call
vmwrite
js
xor
cdq
jmp
or
mov
es
ficom
sbb
and
fistp
inc
call
xor
adc
ins
dec
sub
or
call
push
push
inc
mov
add
mulps
jmp
pop
and
push
sti
aas
and
imul
add
ds
sbb
rcr
pop
add
dec
push
call
cmp
mov
lds
push
xchg
push
mov
push
mov
call
sbb
and
loope
aam
fucomi
push
mov
push
push
call
jmp
add
rol
xchg
stos
(bad)
adc
je
xor
enter
int
loope
sub
aas
das
movs
sub
xor
sar
mov
inc
das
adc
xchg
mov
mov
add
sub
jmp
xchg
adc
std
outs
sub
movs
push
js
push
jno
pop
mov
es
jle
and
dec
test
fwait
jbe
imul
fcmove
sbb
push
push
pop
jnp
imul
push
or
mov
enter
pop
pop
les
dec
es
adc
inc
cwde
shl
push
loope
push
add
xchg
add
sar
xchg
add
imul
cld
push
push
retf
jge
arpl
xor
mov
xchg
retf
add
call
jne
mov
loop
ja
jge
sbb
imul
in
add
pop
je
cmp
fucomi
movs
and
sub
ficom
sub
ds
mov
movs
call
fcomp
fist
repz
(bad)
xor
mov
xchg
or
retf
lea
sub
or
push
dec
daa
lea
jmp
pop
adc
hlt
push
and
push
lods
cmp
and
or
add
aaa
clc
retf
(bad)
call
call
fs
call
jp
call
ret
arpl
mov
lods
mov
mov
dec
mov
push
jmp
lahf
ins
mov
or
xor
popf
sbb
adc
daa
jno
jmp
push
sti
pop
fdivr
ds
pop
js
mov
iret
add
shl
push
gs
jmp
jmp
sub
push
das
movs
push
push
or
lock
repnz
retf
jne
jmp
push
in
or
or
iret
cmp
lods
pusha
and
add
jmp
in
ja
popf
sbb
sbb
cmps
(bad)
jmp
js
sbb
fndisi(8087
inc
sub
mov
dec
loopne
inc
fadd
std
imul
sbb
push
outs
push
mov
push
push
dec
pop
jmp
call
push
sub
add
cmp
(bad)
call
imul
ja
mov
addr16
test
sbb
push
stos
movs
jnp
cmp
(bad)
jae
in
mov
mov
fild
repz
shl
or
rol
dec
adc
(bad)
rol
sbb
clc
outs
push
daa
add
ret
lods
aas
jo
sti
mov
jne
in
mov
jle
dec
test
xchg
lock
xchg
loopne
mov
cmp
cld
lods
pshufw
dec
mov
sub
lea
into
mov
mov
leave
in
adc
lods
dec
mov
jno
or
dec
inc
in
cmps
gs
ja
adc
adc
lea
xchg
jl
adc
mov
mov
or
inc
or
mov
mov
je
mov
je
call
jge
mov
lods
xchg
push
adc
push
iret
movs
dec
rol
or
or
cmp
mov
inc
in
(bad)
inc
shl
push
mov
add
imul
ds
mov
sar
adc
and
sti
nop
fstp
pop
sub
mov
cmp
jo
mov
mov
je
jmp
fdivr
aam
add
test
fs
je
call
ja
imul
jo
loope
push
call
mov
test
sar
pop
(bad)
fwait
call
daa
repz
lods
in
or
enter
add
imul
fistp
inc
xor
cmc
push
sar
jne
inc
and
in
xor
mov
lock
sbb
jge
jne
jmp
or
mov
or
jb
dec
dec
pushf
shl
jp
movs
sub
cmp
adc
add
dec
jmp
add
push
inc
push
mov
push
mov
dec
cdq
out
loop
jl
sahf
lock
jne
shl
or
out
mov
pop
jl
es
mov
(bad)
push
gs
imul
call
lahf
sbb
ficom
cmp
outs
cmp
push
xchg
fstp
loopne
fisttp
js
pop
cmp
jne
cmp
jno
inc
fistp
hlt
xchg
jl
xor
rcr
pslld
mov
shr
push
pop
add
add
ins
iret
shl
push
pusha
retf
mov
jae
adc
jb
fdiv
dec
shr
and
sbb
aad
lods
dec
(bad)
lods
je
adc
mov
mov
cmp
push
sbb
(bad)
push
add
push
push
mov
xor
push
(bad)
mov
and
mov
fsub
sar
cmp
into
fisub
push
pop
ja
jno
sub
cmp
or
mov
in
jb
jo
jmp
dec
cmp
adc
or
sbb
je
or
mov
jo
adc
sbb
jp
arpl
jmp
ror
pusha
je
xchg
daa
inc
or
fwait
es
mov
dec
cmc
rol
cmc
test
ret
sub
scas
dec
rcl
or
rol
add
inc
mov
test
fild
and
mov
xchg
mov
fst
mov
inc
adc
test
add
xor
cmp
sbb
xchg
jnp
test
or
rcl
nop
mov
jge
xchg
inc
push
adc
retf
jo
retf
fcmovnu
(bad)
adc
fnsave
arpl
das
or
repnz
(bad)
loopne
push
or
jne
fcomp
es
jo
cdq
jbe
pop
repnz
xchg
fsub
cmp
adc
rol
stos
stc
lds
add
xor
and
les
push
jae
mov
xor
xor
in
aaa
lea
adc
test
test
pop
and
and
push
and
shl
mov
bound
shr
shr
addr16
add
sub
pop
pop
pop
fmul
sub
add
test
push
mov
and
and
pop
fwait
jge
jmp
nop
xchg
aaa
repnz
jo
ja
adc
xor
jg
(bad)
cwde
or
in
adc
or
pushf
push
jmp
inc
sub
add
add
push
aas
outs
retf
push
ds
pop
add
mov
jnp
pop
cmps
outs
jle
or
jmp
adc
xlat
mov
add
adc
mov
jo
push
push
lea
pushf
add
mov
sub
xor
xor
ins
imul
ret
sub
pop
xor
cmps
retf
in
or
inc
push
or
jl
sub
jecxz
or
fiadd
add
sbb
cmp
mov
mov
std
xchg
or
daa
aaa
ja
ret
daa
ret
call
dec
ins
adc
shr
adc
mov
push
pop
daa
sahf
xchg
ja
push
pop
and
dec
loopne
and
xor
out
imul
dec
ror
sub
(bad)
push
loopne
sahf
pop
pop
loope
(bad)
stos
add
call
retf
retf
add
imul
pop
pushfw
mov
mov
iret
adc
cmp
cmps
mov
in
mov
scas
fadd
jne
call
sbb
stos
mov
stos
xor
inc
fcmove
push
shr
bound
setns
and
add
pop
fwait
lods
sbb
xor
inc
loopne
movs
xor
jne
mov
ror
cmc
mov
jle
sbb
xchg
add
cmp
sahf
mov
cwde
xor
lahf
loopne
pop
xchg
mov
or
adc
sub
xchg
mov
push
add
or
cmp
push
cmp
or
in
push
add
ret
jbe
cmp
adc
das
nop
lock
js
mov
leave
inc
add
clc
or
mov
js
xor
inc
cmp
mov
ror
ds
cmc
jle
or
sbb
jg
push
mov
and
sub
inc
pop
mov
repz
jle
push
xchg
lods
in
or
gs
xor
enter
out
mov
scas
cmp
or
jp
sbb
or
pop
jg
daa
cwde
fcomp
add
loope
mov
jno
xor
movs
and
cmp
mov
xor
adc
add
adc
add
in
lea
push
mov
enter
push
push
inc
and
sub
or
cmp
push
in
push
int
lea
xor
adc
mov
jae
arpl
(bad)
pop
xlat
fidiv
jg
pop
xor
(bad)
jne
call
stc
and
xchg
in
add
sub
test
and
inc
movhps
cmp
ja
lods
xor
or
and
(bad)
ja
dec
ret
mov
jecxz
add
jne
inc
mov
hlt
jns
enter
dec
je
mov
add
enter
mov
mov
xor
push
adc
and
rcl
push
ds
mov
shl
call
push
pusha
hlt
push
sub
dec
mov
fsubr
loopne
scas
and
mov
dec
in
add
in
fs
es
call
cdq
clc
ret
nop
dec
push
ret
loopne
cmp
fadd
or
leave
push
hlt
mov
add
cmp
cmp
addr16
dec
retf
jbe
and
int3
call
pop
dec
rcr
jecxz
mov
out
icebp
sahf
sar
or
fcomp
xchg
fdivp
mov
or
pop
add
sub
mov
ja
pushw
adc
fst
push
mov
inc
ror
dec
xor
lock
imul
push
pop
pop
dec
inc
iret
cmps
shl
aas
adc
mov
dec
or
aas
(bad)
pop
and
or
mov
sbb
js
call
adc
sbb
loop
neg
es
addr16
jo
call
arpl
scas
xor
pop
jmp
call
sub
inc
cwde
adc
sub
lahf
fistp
dec
and
call
xchg
cmp
das
dec
outs
sub
icebp
fld
sub
lock
(bad)
out
mov
inc
retf
xchg
and
sbb
jno
mov
push
add
add
scas
loope
and
outs
lock
push
aam
jno
or
or
ret
pop
hlt
sub
pop
xor
ins
push
addr16
fisubr
sub
adc
pop
inc
jmp
ror
sbb
and
test
jmp
fnstenv
pusha
mov
lock
cmp
fstp
or
sahf
or
icebp
sti
sbb
lods
daa
mul
add
hlt
pusha
les
adc
aas
xchg
xchg
and
mov
jmp
push
test
jmp
cmp
mov
xor
cmp
mov
add
mov
lods
pop
movs
pop
jb
xchg
xchg
test
add
or
jg
arpl
(bad)
lock
lea
test
fs
fsub
pop
clc
dec
mov
jle
pop
clc
mov
jne
push
mov
mov
adc
push
das
enter
mov
push
(bad)
jmp
cmps
or
mov
jle
push
cmps
xchg
stos
push
ret
pop
xchg
lock
xchg
xchg
xchg
loopne
call
mov
and
pop
dec
mov
xor
jne
add
sub
push
mov
mov
ss
call
mov
jb
lea
cld
sub
call
shr
sbb
push
adc
gs
or
add
div
dec
sub
xor
cs
dec
jnp
mov
call
push
fmul
gs
jne
test
or
mov
cmp
xor
mov
sub
shl
je
fadd
jle
iret
adc
push
push
and
adc
dec
mov
cmp
pop
push
pop
sbb
add
push
push
jne
pop
mov
add
and
add
lock
in
js
ds
(bad)
ds
jb
add
in
mov
dec
pop
push
push
add
mov
arpl
cmp
sti
jmp
mov
mov
imul
mov
mov
in
sub
jne
and
(bad)
jns
gs
(bad)
sbb
or
lods
outs
sub
or
lahf
xor
sub
mov
jno
movs
jb
and
sbb
jle
dec
mov
clc
or
out
(bad)
mov
cmp
loope
loopne
call
adc
mov
inc
push
push
(bad)
mov
shr
pop
mov
or
popa
imul
dec
pop
loope
adc
push
or
out
shl
out
fs
mov
or
movs
add
jbe
scas
sub
mov
mov
neg
add
adc
xor
sbb
outs
xor
push
mov
lahf
cs
arpl
fs
inc
clc
add
add
dec
xor
add
popa
push
xchg
add
out
sbb
push
adc
push
mov
sar
jge
mov
pusha
mov
or
ds
fs
xchg
push
sub
mov
xor
adc
adc
dec
push
cli
push
shr
mov
std
out
nop
jp
add
in
and
pop
sbb
mov
call
pop
in
shr
in
push
pop
into
dec
mov
add
in
iret
jp
ficomp
xor
pop
xor
jg
jb
jne
jmp
mov
mov
aaa
in
jl
(bad)
pop
mov
imul
and
jns
pop
and
inc
pop
adc
push
and
ins
push
pop
repnz
adc
fsub
cs
dec
mov
je
loopne
or
xchg
ret
xchg
mov
push
pop
cmps
sahf
adc
cmp
mov
inc
push
pop
je
iret
mov
icebp
pop
enter
jecxz
(bad)
adc
jle
fst
cmp
pop
lods
lds
add
push
arpl
push
ins
and
fisub
add
dec
movs
out
test
aad
in
or
adc
and
cmp
sbb
sbb
add
cmp
fdiv
adc
in
cld
inc
mov
cmp
lock
or
cmp
repnz
push
push
push
data16
push
ins
test
sahf
ins
or
(bad)
lahf
xchg
jecxz
lods
outs
xchg
xor
cmp
push
xchg
pop
push
push
test
daa
stos
sbb
mov
ja
or
adc
arpl
or
xor
xor
mov
pop
dec
mov
add
in
movs
jb
sbb
lods
pop
nop
xlat
push
sbb
adc
mov
jno
or
aaa
movs
mov
popf
leave
pop
lea
pop
jb
xchg
jl
push
or
and
cmp
xchg
in
adc
fld
pusha
sbb
or
or
and
add
cmp
in
dec
sub
push
enter
sub
fbstp
cmp
icebp
mov
jp
xor
xchg
hlt
jg
je
imul
in
ds
call
jnp
or
aas
ret
ret
and
sbb
and
inc
sub
jl
inc
shl
push
add
pop
ja
ret
pop
pop
pop
pop
cdq
push
(bad)
and
enter
inc
xchg
pop
je
sub
inc
movs
dec
cmc
mov
outs
mov
add
or
add
adc
jp
je
aas
inc
pushf
lock
(bad)
nop
push
sub
push
mov
out
sbb
out
or
pop
push
pop
dec
jmp
mov
mov
js
cmp
pop
ins
xor
mov
sar
pop
xlat
sub
loopne
daa
mov
push
test
dec
mov
loopne
sub
fbld
mov
je
jmp
dec
int
cmp
pop
push
movzx
add
or
cmp
add
retf
repnz
sub
jmp
dec
daa
popf
sbb
call
repnz
mov
mov
in
and
cmps
fsub
and
or
or
rcl
fs
add
fsubr
mov
pusha
mov
and
mov
(bad)
and
in
adc
sub
mov
push
push
push
ss
mov
sbb
loopne
adc
dec
dec
in
cmp
test
adc
sar
add
pop
fstp
jne
gs
mov
add
popa
fbstp
test
inc
jmp
cld
mov
adc
call
loope
fbstp
jmp
mov
mov
(bad)
mov
push
ds
and
mov
jno
sbb
jmp
mov
(bad)
jmp
and
mov
loop
cmp
(bad)
mov
jbe
pop
ja
sub
retf
mov
jp
fiadd
enter
fsub
or
lea
aaa
lea
xor
icebp
or
ja
jbe
fldpi
call
cmps
retf
icebp
xor
imul
add
loopne
(bad)
ret
or
mov
int
cmp
xor
add
adc
cwde
jl
push
popf
pop
pop
lods
jmp
test
les
sub
sbb
sbb
jecxz
xor
or
inc
ror
pushf
mov
pop
or
jno
push
xchg
inc
inc
and
pushf
jb
cwde
aad
xor
mov
fs
or
sahf
movs
imul
stc
jmp
inc
dec
push
pop
pop
dec
xor
(bad)
fdiv
test
xor
adc
pusha
popf
push
call
ins
sub
dec
adc
jp
into
dec
adc
test
jmp
in
or
push
call
cmps
push
jnp
jne
add
jno
push
push
jae
stc
pop
ret
aaa
mov
adc
ss
jo
arpl
xchg
cmp
mov
popf
and
or
pop
je
push
pop
cmovbe
push
add
sbb
jo
dec
pop
dec
sub
add
or
cmp
jge
sbb
push
ins
adc
jmp
mov
loopne
adc
cmp
and
dec
push
pop
pop
mov
sbb
pop
pop
add
sub
and
push
inc
dec
setne
xchg
dec
push
sub
adc
sbb
shr
dec
inc
and
jo
sbb
jae
jo
and
sub
and
pop
pop
mov
pop
cmp
leave
ret
xchg
arpl
(bad)
push
shl
mul
pusha
into
lock
dec
mov
repnz
ins
gs
ss
dec
xchg
sbb
jbe
cmp
push
enter
add
xchg
push
enter
xor
adc
popa
xchg
inc
or
sub
aaa
pop
mov
mov
push
or
sahf
add
shl
xor
jmp
and
cmp
add
cmp
cmp
add
mov
add
imul
movs
lock
push
cmp
push
jnp
(bad)
mov
cmp
dec
add
test
rol
ret
call
lock
rcl
rol
sub
sub
dec
jecxz
out
sub
lods
pop
pop
stos
jp
sbb
push
in
popa
call
fisubr
push
mov
dec
stos
out
and
push
iret
loope
ret
test
das
jp
test
dec
ss
jo
ds
jle
or
pop
cmps
mov
inc
jno
lock
and
or
sbb
push
mov
movs
aas
dec
mov
jp
add
inc
cmps
adc
or
adc
(bad)
iret
push
adc
xor
or
inc
sbb
loope
mov
popa
jnp
add
cmp
pusha
mov
push
aaa
mov
(bad)
imul
or
jmp
data16
pop
add
out
push
sub
mov
push
pusha
dec
sub
or
sbb
call
pushf
loope
(bad)
and
lods
dec
icebp
loope
fs
dec
and
pop
jmp
add
pop
xchg
mov
or
push
les
fistp
adc
adc
jnp
add
lds
mov
gs
jg
outs
mov
jo
add
jle
sbb
cli
dec
pop
push
or
loop
movs
or
xor
hlt
rcl
mov
bound
aas
in
push
out
dec
test
or
dec
ror
add
xchg
or
jmp
clc
and
adc
bound
add
pop
pop
xchg
lahf
push
pop
adc
fucomip
inc
gs
push
mov
inc
push
imul
repnz
inc
add
sub
pusha
pusha
sbb
arpl
pop
(bad)
cmp
rol
xchg
sbb
lods
and
scas
mov
jmp
fcom
shl
cmp
add
push
dec
popa
dec
inc
push
add
pop
inc
movs
lds
(bad)
loop
push
shl
mov
push
add
adc
or
sub
or
ret
xor
dec
add
ja
dec
(bad)
jmp
sub
fmul
inc
jmp
cmp
call
adc
dec
pop
xor
and
jne
mov
sub
idiv
hlt
push
push
aad
sbb
jge
sbb
adc
lea
push
mov
push
lods
pavgb
inc
jbe
add
and
push
cmp
sbb
imul
xchg
call
push
adc
inc
and
es
pop
neg
imul
add
mov
ror
or
mov
mov
jecxz
mov
mov
push
mov
fst
jge
cdq
push
out
or
je
or
and
popa
xlat
cmp
push
mov
push
mov
adc
and
ins
cld
cmp
gs
fsub
hlt
in
loopne
add
jge
sbb
lahf
add
mov
aam
or
repnz
or
adc
adc
jnp
inc
push
push
sub
dec
mov
fisub
mov
mov
xor
not
lahf
add
sbb
or
ins
mov
mov
inc
xchg
dec
shl
or
pop
add
lock
or
imul
mov
dec
dec
rol
sbb
pusha
arpl
xchg
fwait
sub
push
add
sub
outs
mov
dec
lea
cld
add
or
js
sar
dec
ja
cmps
ins
sbb
sbb
iret
fnsave
mov
push
adc
outs
sbb
cwde
add
adc
popa
xor
dec
mov
lea
pop
dec
lods
jge
inc
xor
sbb
mov
inc
stc
(bad)
jnp
int3
stc
mov
jo
mov
test
mov
cld
je
push
xchg
push
popa
xor
aad
pop
mov
inc
push
lods
sbb
add
mov
push
and
ins
pop
call
jne
cmp
or
pop
call
dec
arpl
push
call
and
mov
outs
jno
inc
mov
jo
jmp
loopne
in
shl
cld
dec
call
add
fisubr
or
pop
retf
jb
adc
sub
inc
fwait
add
xor
xchg
je
xchg
xor
mov
cmp
call
sbb
sub
retf
adc
adc
add
(bad)
jo
push
push
call
sub
(bad)
std
push
push
icebp
and
std
sbb
jne
push
and
movs
inc
inc
mov
lock
gs
mov
movs
call
call
sub
nop
sub
std
ss
call
sub
imul
dec
cmps
int
push
xchg
add
add
retf
add
sbb
je
push
sub
sub
test
sbb
push
lea
or
or
jle
push
cmp
loop
mov
mov
cli
jp
fs
nop
pusha
in
pop
lds
sub
mov
mov
shr
jbe
stos
or
add
jo
jo
add
mov
mov
inc
xchg
add
inc
cdq
add
add
and
mov
call
js
xchg
and
mov
js
dec
rol
adc
push
add
inc
adc
dec
out
call
test
in
adc
nop
hlt
stc
add
add
shl
rcr
outs
or
sbb
inc
sbb
xor
rcr
fs
xor
arpl
fdiv
(bad)
(bad)
imul
test
mov
xor
xor
xchg
cmp
daa
jae
or
sbb
call
inc
ins
mov
add
je
fisub
hlt
inc
push
sub
push
aaa
mov
mov
movs
fstp
das
call
mov
in
inc
test
cmp
pop
div
add
mov
test
in
cld
movs
add
push
or
loopne
mov
push
jo
push
pop
shl
iret
test
mov
lahf
retf
lea
push
repnz
xchg
lea
dec
stos
pop
das
push
test
sbb
add
inc
dec
adc
pop
mov
dec
pop
pop
sbb
jmp
shr
fdivr
jae
xchg
mov
movd
int
imul
mov
jns
push
bound
mov
popf
inc
adc
mov
pushf
popa
test
aam
js
mov
sub
mov
xchg
arpl
mov
add
out
je
imul
imul
add
cmp
pop
frstor
mov
nop
lea
inc
jbe
pop
mov
and
jmp
adc
xor
push
inc
idiv
add
fs
idiv
iret
pop
pop
mov
adc
ins
daa
sbb
add
dec
in
and
jo
les
push
mov
(bad)
data16
(bad)
adc
pop
pop
adc
push
ds
imul
call
mov
in
sub
sti
or
xor
cmp
stc
js
or
cs
shl
adc
dec
shl
je
mov
jne
xor
xor
int
push
sbb
out
cmp
js
popa
inc
imul
into
shr
xchg
sub
ins
sbb
stos
hlt
fiadd
aam
inc
pop
push
push
pusha
mov
add
shl
in
adc
push
les
mov
push
or
loope
jecxz
shl
and
ret
or
pushf
sbb
in
push
int3
fadd
daa
call
jl
sbb
mov
xchg
fsub
test
adc
adc
push
add
push
mov
sub
dec
adc
xor
mov
(bad)
and
sub
int
mov
mov
and
mov
push
inc
out
inc
adc
xchg
ss
cwde
sahf
cli
and
movs
xchg
mov
xor
loope
cmp
out
mov
push
xor
sub
in
call
cmp
or
jb
rcl
pushf
aas
jg
fwait
add
inc
mov
sub
pop
push
sub
push
push
push
test
lock
pop
adc
movs
pop
jns
push
cld
(bad)
xor
arpl
inc
mov
(bad)
pop
jl
sub
fsub
ret
push
inc
std
outs
cmps
dec
and
mov
and
je
add
add
sub
jecxz
or
loopne
je
leave
outs
pusha
and
pop
mov
or
adc
inc
pop
movs
jo
je
inc
xchg
mov
mov
call
or
push
push
rcl
rol
dec
push
jb
pop
adc
inc
cmp
nop
add
pusha
iret
xchg
adc
cmp
add
cwde
mov
into
dec
imul
mov
jo
push
sbb
aam
jo
imul
or
addr16
fild
and
sbb
jl
or
call
pop
jmp
xlat
aaa
and
cmc
jnp
push
out
ins
je
stos
xor
adc
loop
jb
jns
ror
stos
in
adc
add
idiv
movs
loopne
inc
es
mov
or
and
mov
sar
outs
jg
cwde
ret
jb
nop
ror
mov
mov
sbb
sub
mov
jge
cmp
pop
mov
pop
setle
push
inc
(bad)
or
dec
mov
mov
adc
sbb
enter
adc
fs
inc
push
enter
add
out
daa
out
shr
xchg
(bad)
ins
cmp
aaa
push
cmp
or
inc
and
and
cmp
xchg
dec
xor
dec
arpl
rol
xchg
dec
push
adc
shl
loop
push
xor
cdq
nop
and
xor
out
sub
and
mov
mov
dec
(bad)
mov
lods
popa
xchg
mov
xor
sbb
xor
mov
jne
mov
or
jno
adc
adc
mov
mov
fwait
jno
sub
jg
sub
ss
push
dec
fcomp
sub
inc
les
sub
xor
push
mov
mov
push
es
push
jbe
in
cmp
loopne
js
ja
xchg
pop
push
dec
lahf
ret
loopne
jp
mov
out
nop
aaa
ds
retf
popf
sbb
pop
pop
cmp
fdivr
test
add
int
xor
xchg
out
in
or
mov
jge
push
repnz
imul
pop
cmp
adc
sti
push
xchg
xor
retf
mov
pop
inc
jo
sub
inc
dec
out
loope
xor
mov
jmpw
call
push
ret
fild
mov
pop
lea
jns
hlt
ror
inc
sbb
loopne
xchg
push
ds
dec
in
xor
adc
xchg
mov
(bad)
and
in
push
inc
or
xor
and
nop
scas
rcl
daa
xor
sbb
jg
aas
mov
(bad)
ficomp
xor
xor
addr16
add
(bad)
lea
rcl
daa
mov
nop
out
retf
push
pusha
movs
repnz
nop
retf
dec
jae
jp
stc
pop
cmp
pop
or
lods
mov
add
sbb
cmp
adc
add
jns
xor
xor
je
das
push
push
push
push
jp
pop
and
sbb
or
cmova
arpl
jne
inc
mov
mov
lea
cmc
jmp
mov
ins
xchg
outs
or
dec
push
push
fcom
jmp
pop
inc
xor
retf
fstp
adc
push
test
mov
jnp
xor
sbb
push
jle
xchg
add
icebp
cdq
aas
scas
jl
jge
jg
dec
mov
adc
in
cmp
clc
push
push
imul
push
fimul
inc
int3
pop
sbb
add
pop
inc
add
imul
sbb
inc
jl
or
cmp
xchg
dec
adc
add
mov
call
xor
fiadd
pop
fiadd
imul
dec
sub
leave
fimul
add
dec
(bad)
sbb
push
cmp
test
std
xchg
add
std
dec
jne
cmp
add
push
mov
push
mov
push
mov
inc
test
mov
xchg
and
call
mov
sub
jo
adc
test
or
add
add
sbb
pop
xor
push
jae
mov
xor
mov
and
add
fbld
pavgw
dec
inc
fistp
adc
cmp
inc
out
xchg
out
test
xor
adc
adc
and
rol
add
and
les
scas
pop
cmps
push
mov
xchg
mov
sbb
cmp
add
das
push
push
push
cmp
push
xchg
cmp
inc
iret
lock
movs
fild
pop
sbb
xor
mov
mov
jne
jle
xchg
call
movs
lock
into
add
add
jmp
pop
jg
loopne
jns
mov
jnp
mov
std
je
xor
aaa
jb
cmps
and
xor
in
add
jns
mov
(bad)
cs
or
xor
test
pop
sbb
cli
popa
adc
pop
aas
sub
stos
mov
pusha
xrelease
adc
push
(bad)
clc
xchg
adc
and
pusha
xlat
mov
jbe
xlat
and
lock
fnstenv
mov
add
lock
ss
pusha
pop
push
xor
pop
test
sbb
and
movs
imul
lods
gs
ins
cmp
aaa
add
pop
mov
gs
(bad)
loopne
or
out
dec
call
lock
dec
push
push
sbb
mov
pop
jle
inc
xor
push
jecxz
cmp
jmp
inc
and
push
je
xor
fistp
rol
or
shl
stos
dec
add
clc
push
push
and
add
and
popf
les
sbb
push
ins
sub
add
mov
jmp
add
dec
test
xor
mov
push
mov
mov
je
adc
mov
ret
aas
(bad)
(bad)
push
push
push
lods
add
and
out
cli
js
add
lods
and
inc
push
sti
add
lods
mov
push
mov
mov
or
or
inc
adc
or
(bad)
jnp
sbb
repz
jnp
xor
adc
push
add
adc
inc
sbb
je
ja
mov
push
sbb
je
mov
pop
js
pop
xor
pop
into
ins
lock
jg
push
mov
push
and
test
and
inc
aam
fild
adc
and
dec
jle
jecxz
push
push
push
push
jnp
enter
jg
jg
add
sbb
bound
push
fadd
xor
xchg
mov
pop
adc
adc
mov
and
hlt
or
push
sar
test
push
or
xor
bound
cmps
loop
jbe
test
es
cmp
adc
or
retf
add
push
xor
or
adc
mov
rol
add
jg
inc
jle
mov
movs
xchg
xor
outs
loope
dec
jno
imul
mov
or
inc
sbb
and
movs
mov
popf
sbb
stc
fidiv
lea
push
out
inc
jg
mov
mov
outs
pop
or
ror
cmps
enter
push
cs
hlt
bound
or
lods
add
shl
sar
not
and
adc
mov
cmp
adc
jne
mov
ja
(bad)
(bad)
fld
cmp
jmp
cmp
cmp
or
loope
jge
jmp
add
sub
pop
lods
cli
ins
mov
inc
dec
sub
fs
retf
adc
cmc
jae
add
ja
push
jne
jmp
cmp
fisubr
lock
sbb
call
push
hlt
add
and
add
and
shr
push
call
retf
or
lea
jecxz
outs
cmp
or
xor
rol
fisubr
int3
loop
inc
sbb
jmp
shr
jbe
sub
cmp
sbb
and
loop
enter
sub
sbb
loop
add
lahf
sub
add
sub
xchg
lahf
xchg
retf
inc
add
(bad)
add
add
aas
cmp
dec
ja
adc
in
mov
and
adc
pop
fidivr
push
lods
push
mov
dec
add
add
cli
ins
cmp
adc
test
mov
add
fisub
dec
push
inc
cmp
add
imul
lock
cmp
push
jmp
shr
mov
imul
call
das
push
ja
push
mov
pushf
rcl
mov
jle
sbb
adc
mov
and
add
or
xchg
or
or
push
imul
adc
mov
dec
repnz
lock
dec
mov
lods
mov
pop
mov
dec
sub
push
or
push
aas
sbb
loopne
aaa
push
add
imul
(bad)
aas
sahf
cmp
fnstenv
jl
sbb
push
leave
add
sbb
add
retf
mov
push
out
add
sbb
adc
push
bound
test
add
pop
xlat
or
or
or
sub
or
or
mov
xor
jns
scas
jp
adc
push
adc
test
and
daa
cmp
dec
in
xor
(bad)
xchg
cmp
or
adc
lock
in
in
dec
leave
call
cld
adc
cwde
jo
or
xor
sbb
xor
or
dec
mov
ds
add
inc
sub
cmp
ja
imul
xchg
test
adc
sbb
add
ret
(bad)
jns
push
push
ins
ret
push
sub
dec
call
je
fld
xor
jo
retf
shl
pop
test
cmp
je
jmp
xchg
idiv
pop
cmp
jne
inc
pop
lock
pop
mov
lock
mov
pop
or
mov
(bad)
sbb
jne
mov
fisubr
add
(bad)
pop
fchs
lahf
jne
inc
push
pop
jo
push
js
pop
rol
fmul
mov
mov
inc
lods
(bad)
sub
xchg
imul
push
in
lds
rol
xor
aas
jne
lea
jo
add
add
and
push
rcr
xchg
sbb
or
and
je
pop
push
sti
and
ror
inc
ror
lea
xlat
push
sti
jne
test
xor
in
jns
or
sbb
jmp
cdq
sbb
jp
in
lahf
cmp
pop
mov
movs
adc
push
or
sahf
add
out
or
xor
fisttp
and
icebp
mov
lock
push
mov
rcr
call
jb
add
jbe
mov
(bad)
or
imul
rol
data16
std
shl
inc
cld
sub
adc
push
or
sbb
adc
sbb
push
jns
mov
rol
cwde
or
mov
cmp
gs
movs
push
xchg
fcom
in
sub
xchg
into
mov
pop
pop
ds
mov
adc
add
adc
movups
xor
out
fdivp
pop
les
mov
jle
mov
fimul
sbb
or
enter
je
xchg
loop
mov
dec
adc
adc
hlt
repnz
pop
fst
xchg
jl
pusha
in
add
adc
cmp
push
clc
dec
test
sbb
push
add
ss
mov
cwde
ja
and
sahf
stos
add
add
sub
fisubr
popa
nop
jne
pop
loopne
add
cmp
fsub
jl
gs
into
jg
aas
add
adc
shl
or
mov
and
jb
ss
push
cmps
dec
pop
outs
mov
add
adc
jae
jb
rcl
add
mov
mov
mov
sbb
cmp
sbb
popa
ror
sub
dec
fsubr
push
inc
(bad)
pushf
cli
int
xor
or
jbe
mov
mov
mov
test
lods
dec
mov
lds
cmp
mov
imul
popf
push
dec
sbb
dec
movs
xchg
push
dec
arpl
cmps
pop
push
test
add
or
mov
shl
ret
adc
pop
call
mov
adc
std
fcom
sub
add
adc
jb
mov
xor
fild
ds
mov
inc
movs
popa
inc
retf
test
jo
or
sbb
sbb
sbb
leave
pop
aam
add
call
imul
mov
push
call
pop
mov
cwde
jle
or
mov
cli
mov
jbe
pushf
mov
lods
(bad)
xor
or
pop
sbb
jmp
sub
stos
sub
shr
jg
push
mov
add
lsl
popf
popf
or
jg
add
(bad)
(bad)
mov
push
es
cmc
xchg
shr
push
jno
in
jmp
sbb
call
je
add
(bad)
and
ror
icebp
ret
stos
push
movs
adc
mov
add
xchg
ret
add
cmp
js
xor
mov
fcos
inc
movs
dec
adc
sbb
out
outs
add
jnp
lea
cli
jne
popf
push
adc
cmp
mov
mov
add
add
add
lock
pop
iret
and
mov
mov
xchg
pop
pop
shl
ficomp
sub
scas
jge
jp
add
es
xchg
inc
div
and
adc
enter
fcmovu
loop
xchg
out
out
popf
sbb
enter
data16
adc
adc
(bad)
div
bound
add
mov
or
imul
adc
adc
add
call
mov
shr
or
mov
or
push
or
mov
xor
cli
sbb
dec
mov
call
(bad)
sbb
fld
and
and
ins
ins
jecxz
and
push
or
sbb
push
pusha
aam
jne
(bad)
fidivr
ror
or
push
sbb
sbb
test
dec
dec
test
ret
shr
mov
es
test
cmc
add
push
add
fwait
adc
xlat
sub
push
pop
aam
rcr
das
mov
dec
mov
fild
pop
inc
es
push
add
add
ins
test
sbb
rol
add
add
cmp
dec
sub
xchg
cmp
dec
sbb
imul
fadd
sbb
hlt
jbe
mov
rcl
push
mov
mov
je
and
(bad)
mov
sub
and
jae
mov
xor
test
mov
jl
movs
cmp
sub
call
ret
ds
test
or
gs
jae
mov
sbb
push
push
jmp
mov
sub
dec
jmp
aam
mov
movs
mul
out
and
shr
add
mov
push
xchg
js
call
sub
je
jmp
cmp
push
sbb
jge
neg
std
(bad)
adc
sub
push
lea
push
out
push
jle
pusha
add
dec
sub
cmp
shl
pop
or
(bad)
ins
es
and
mov
pushf
push
into
add
retf
and
cmps
fild
cdq
and
ins
inc
ret
adc
or
movs
jo
test
ds
test
ins
xor
or
repnz
jbe
add
cmp
and
enter
or
xchg
mov
or
mov
lods
es
leave
and
xchg
and
sub
adc
push
jns
leave
jg
dec
cwde
or
scas
sbb
ja
in
cmp
call
inc
and
(bad)
cmc
jecxz
outs
mov
sub
xchg
(bad)
sbb
xchg
arpl
xchg
cs
sub
xchg
inc
sub
mov
jmp
in
jno
pop
arpl
push
dec
imul
push
pop
test
push
popa
pop
and
fdivr
mov
or
sbb
inc
call
gs
inc
mov
sbb
adc
clc
dec
or
shr
xor
pop
enter
dec
jne
aam
gs
daa
add
add
push
or
and
ret
test
ja
jecxz
jne
loop
je
push
jne
mov
jne
shl
push
pusha
fdiv
mov
sub
jl
add
shl
or
mov
fsub
sbb
call
inc
(bad)
(bad)
fld
jb
jmp
push
call
push
outs
std
fbld
jbe
hlt
push
or
out
sbb
lods
pop
push
lods
add
nop
mov
xor
dec
dec
lods
jmp
push
dec
adc
and
inc
add
mov
mov
push
sbb
inc
js
mov
adc
lods
jp
js
mov
push
mov
xor
add
call
push
call
(bad)
das
and
jle
mov
jmp
xor
mov
imul
mov
mov
jo
push
push
inc
and
cmp
fbstp
push
pop
add
add
rcl
and
jo
pusha
test
rcl
mov
sub
add
inc
mov
ins
sbb
jne
(bad)
repnz
ror
pop
or
jmp
or
(bad)
dec
(bad)
jmp
adc
or
adc
or
fsubp
xor
add
jo
push
cmps
retf
mov
adc
push
call
outs
and
jg
adc
jnp
lea
and
mov
lods
push
ins
push
sbb
add
dec
mov
sub
pop
pmuludq
jne
jns
outs
cld
call
inc
pop
outs
sar
add
loopne
pop
cli
add
ret
mov
xor
call
lock
xor
cmp
fistp
fadd
sub
jp
hlt
call
add
jl
sub
not
cmp
xor
cld
sbb
mov
test
dec
or
out
dec
push
or
dec
ins
ror
pop
pop
pop
(bad)
cmp
pop
ds
test
stos
or
add
xor
outs
xchg
push
mov
push
fist
jecxz
in
je
push
stc
jmp
div
dec
add
mov
cld
jl
js
je
movs
dec
xor
call
ins
adc
push
add
push
cmp
push
dec
add
inc
sbb
cmp
inc
je
or
push
or
cmp
jmp
add
ror
lock
or
iret
leave
mov
mov
lods
pushf
cmp
daa
mov
fwait
ret
mov
lahf
test
loope
mov
shl
ror
push
enter
js
add
shr
je
push
push
repz
or
in
dec
dec
mov
repnz
mov
call
xchg
call
enter
ins
inc
psubsb
aam
ss
outs
call
mov
imul
xor
sbb
pop
mov
jne
xchg
and
dec
dec
or
sbb
test
push
fisubr
pop
add
jmp
xor
or
call
cmp
add
jmp
je
mov
inc
xor
mov
fild
sub
pop
push
rcl
fist
adc
call
add
(bad)
and
adc
shl
imul
sub
sti
shr
sub
sar
xor
call
cmp
sub
cmp
mov
adc
fsubp
sbb
imul
lock
dec
sbb
adc
psubb
lea
mov
jge
imul
gs
adc
enter
jge
or
add
xchg
inc
add
dec
aas
jns
pusha
arpl
lea
shr
and
jg
rcl
mov
adc
jno
pop
repnz
aas
call
adc
pop
add
ret
cli
out
ins
loope
push
jbe
outs
and
and
pop
mov
frstor
cmc
adc
lods
test
pop
jmp
movs
jl
dec
xchg
jne
mov
pop
jmp
push
add
or
das
sub
fiadd
mov
push
out
call
test
dec
sub
dec
js
and
stc
out
ss
sbb
in
idiv
push
cwde
pop
adc
call
jo
push
stc
cmp
in
cmps
inc
repz
in
in
shl
pop
jb
bound
mov
and
inc
jl
cmp
hlt
adc
js
sub
pop
in
push
or
push
jmp
push
ror
cmp
sub
adc
jo
push
jnp
and
push
aas
jbe
xor
shr
cmp
sar
mov
je
mov
cmp
mov
jne
add
(bad)
pop
sub
mov
cmp
dec
mov
mov
cmp
(bad)
adc
cmp
je
xchg
movs
pop
push
add
adc
lock
lock
test
cs
sbb
and
push
xlat
test
mov
push
adc
loope
add
mov
cwde
inc
cmp
add
jbe
nop
sbb
or
adc
inc
rol
ja
xlat
test
loope
xchg
jmp
pop
mov
push
push
repnz
mov
push
setne
call
sub
sahf
jmp
push
mov
add
inc
mov
sbb
inc
sub
cmp
jae
lea
pop
inc
retf
and
call
push
adc
test
xchg
inc
mov
cdq
(bad)
pop
or
mov
pop
(bad)
and
adc
jo
cmp
retw
pop
cmps
mov
ror
mov
xlat
lods
pop
scas
mov
(bad)
inc
adc
test
push
icebp
test
popa
xor
inc
cmp
arpl
jmp
arpl
addr16
mov
jne
mov
in
pop
xor
add
push
jne
shl
mov
inc
add
(bad)
pop
and
call
push
xor
push
call
mov
xchg
or
push
cld
fstp
jmp
push
lds
or
or
pop
dec
pop
inc
cmp
cmc
pop
xchg
and
or
push
bound
int
mov
lahf
ja
jle
push
call
or
cmp
jne
add
mov
test
ret
lods
es
outs
mov
adc
dec
or
or
mov
shl
stos
mov
jmp
ins
cmp
cmp
ret
dec
pmuludq
cmp
pop
cli
xor
les
sub
mov
jne
out
xchg
push
test
and
test
xchg
movs
adc
sub
and
jns
mov
and
mov
in
add
sbb
cmp
mov
inc
ss
add
add
add
add
xchg
imul
loop
and
jnp
iret
add
outs
jae
fild
pop
or
inc
add
push
or
mov
mov
cmp
jb
lock
jne
jb
add
lock
adc
rol
in
jbe
dec
and
ret
clc
and
pushf
inc
mov
adc
lock
adc
rol
fcomp
sub
push
add
scas
jge
and
or
cmp
mov
arpl
aam
fs
cmp
and
icebp
or
gs
and
dec
push
mov
inc
call
sar
or
or
idiv
add
jmp
adc
cli
pop
inc
movs
lahf
cmp
inc
mov
lods
mov
ds
push
lds
or
cmp
(bad)
sub
sub
rol
cmp
mov
(bad)
mov
jae
add
retf
push
(bad)
cmp
pop
jo
mov
sub
push
push
out
xchg
in
add
add
sub
mov
sbb
push
repz
pop
adc
jo
(bad)
rol
pop
dec
jle
jle
mov
pusha
aas
or
ins
sbb
in
push
adc
or
fistp
sbb
mov
cmp
or
sub
in
lods
push
cmp
les
adc
movs
xor
add
dec
pop
popa
add
jne
mov
pop
mov
and
rcr
jo
dec
ja
pop
ret
test
add
out
lea
std
retf
(bad)
sub
xchg
add
je
sub
add
push
enter
cdq
retf
mov
iret
out
add
push
cmc
inc
push
adc
aas
rcr
xor
pop
ss
ret
inc
loopne
and
rcl
add
or
(bad)
mov
lea
mov
dec
dec
clc
pop
sub
jmp
data16
mov
jbe
pop
dec
test
mov
mov
jle
aas
into
jne
outs
ret
lock
mov
js
jmp
sub
inc
xchg
jmp
add
and
or
inc
jmp
dec
loop
mov
add
cmc
push
repz
xor
or
pop
jmp
ds
ret
sub
movs
call
js
mov
mov
sub
mov
inc
pushf
sbb
xchg
jg
rol
push
shl
or
pop
jle
les
test
mov
das
xchg
or
pop
jmp
cwde
xor
adc
push
pop
mov
les
xchg
(bad)
loop
pushf
retf
inc
and
fild
dec
sbb
mov
inc
pop
sbb
clc
adc
adc
repnz
retf
or
lods
adc
out
pop
sub
lea
push
jle
imul
fwait
mov
xchg
das
mov
jne
sub
jb
lock
jnp
add
xor
fcomp
lods
js
stos
mov
xor
addr16
inc
xor
or
adc
inc
nop
pop
xchg
dec
arpl
or
sar
call
mov
xor
or
adc
sub
cs
xor
push
sub
sbb
int
add
call
loope
dec
or
add
out
in
xor
aaa
cmp
stos
dec
cmp
icebp
adc
push
retf
inc
mov
push
or
push
sub
pop
xor
rol
std
add
xor
fidiv
cs
je
dec
xchg
xor
xchg
mov
jl
xchg
push
lock
test
pop
pop
or
jb
ret
push
and
dec
sahf
inc
pop
outs
cld
aaa
jne
repz
icebp
push
(bad)
call
jo
sar
xor
inc
xchg
es
jae
pop
adc
xchg
es
scas
xor
push
sbb
fadd
test
cmp
mov
in
in
ins
jns
inc
or
ja
sub
cmp
div
push
rcr
call
mov
mov
add
pushf
mov
sub
mov
xchg
test
mov
sub
push
mov
cmp
jmp
js
xlat
or
loopne
call
fld
inc
shl
xchg
test
pop
and
inc
cwde
(bad)
sbb
pop
xchg
mov
push
cs
shl
add
(bad)
mov
push
pop
in
(bad)
adc
cld
inc
add
fld
pop
sub
mov
add
ror
inc
xor
es
or
rol
inc
add
(bad)
push
or
pop
push
sub
push
and
mov
inc
dec
cmp
ja
jecxz
loopne
mov
sub
js
mov
das
loop
bnd
imul
pop
ds
call
ret
ret
int3
mov
add
pop
(bad)
and
cwde
inc
dec
mov
cmp
ja
mov
fcmovnbe
loopne
adc
jb
dec
or
jle
pusha
sbb
push
add
add
add
sub
xchg
fist
push
aad
das
mov
inc
inc
dec
in
or
not
les
call
push
adc
pop
or
cmp
jl
lea
inc
call
cmp
cmc
jmp
pusha
dec
sar
inc
mov
inc
std
push
aaa
sti
scas
out
jb
mov
cmpxchg
mov
mov
scas
cmps
pop
sbb
int3
dec
jmp
cmp
stc
sbb
inc
inc
mov
mov
jg
and
dec
loope
mov
jmp
cmps
int3
mov
sbb
das
fdivr
cmp
push
popf
mov
repnz
clc
mov
add
ret
jmp
push
aas
call
shr
xlat
and
fild
or
adc
push
shl
popf
and
push
lods
push
jge
xor
mov
sub
movs
cmp
outs
in
push
inc
cmp
jne
hlt
fwait
xor
pop
xor
push
mov
adc
mov
mov
pop
push
mov
inc
push
push
pop
adc
call
sbb
pop
mov
loope
or
push
or
in
out
pop
pop
mov
inc
mov
pop
ret
add
popf
adc
push
mov
cmp
cmp
adc
sub
add
jnp
jne
adc
or
aas
push
cli
and
or
pop
add
push
mov
jmp
ret
jmp
mov
mov
xchg
or
fs
jg
or
je
or
(bad)
xor
adc
je
js
or
or
imul
mov
rol
xchg
mov
dec
mov
loop
popa
shl
enter
aas
clc
test
gs
call
or
pop
pop
out
jmp
and
pushf
mov
in
pop
or
jbe
cmp
mov
push
adc
push
jmp
mov
retf
jle
cmps
xchg
or
aam
(bad)
shl
mov
sub
mov
xchg
add
push
add
fdiv
dec
mov
scas
inc
sub
in
inc
call
push
ds
test
xchg
sbb
movs
xor
push
movs
aam
push
pop
or
mov
jne
jmp
push
or
mov
cmp
inc
outs
dec
call
inc
(bad)
mov
jnp
xchg
inc
data16
jb
jo
lock
pop
cmp
push
lock
or
inc
jmp
dec
adc
clc
jecxz
and
xor
sar
stos
jae
add
imul
add
into
jnp
or
sti
mov
sbb
add
scas
dec
out
inc
sbb
lahf
outs
retf
dec
mov
cdq
idiv
inc
mov
adc
ins
call
pop
call
in
or
es
loopne
test
inc
mov
hlt
push
push
call
dec
lock
pop
nop
sub
pop
cwde
push
mov
sub
js
inc
and
adc
cmp
mov
jle
jnp
dec
dec
imul
and
sub
xor
test
add
or
xor
dec
push
jmp
scas
call
shr
call
cmp
jl
jmp
adc
mov
imul
dec
jne
cmp
mov
cli
add
add
ds
sti
stos
pop
into
pop
inc
lock
push
xor
stos
or
adc
cmp
mov
add
ret
pop
add
fstp
call
or
add
sbb
mov
pop
mov
ins
mov
sahf
pop
in
push
or
push
ds
lock
mov
adc
mov
lds
mov
pop
dec
clc
sbb
mov
adc
je
mov
sub
push
cdq
mov
inc
xor
push
clc
call
sbb
in
push
jae
dec
ins
movs
sbb
mov
sub
call
and
sbb
push
lods
push
or
out
lock
pop
cmp
cmp
test
fnsave
div
(bad)
jl
hlt
fwait
std
aaa
push
cmp
jg
pop
ja
xchg
add
or
aaa
jno
adc
adc
leave
xor
sub
and
sbb
mov
mov
dec
sbb
adc
adc
icebp
jmp
mov
inc
mov
mov
jo
adc
fnstcw
jmp
inc
xchg
or
inc
push
pop
push
js
fistp
dec
into
push
cmp
xchg
shr
mov
adc
sbb
push
pusha
(bad)
jo
pop
pop
cmp
iret
cmp
shr
sbb
data16
je
lds
shl
xor
jp
lods
inc
pop
dec
enter
lock
pusha
fsubr
and
sbb
clc
inc
sbb
jl
outs
or
dec
and
cmp
movs
dec
outs
push
clc
mov
or
lock
sub
fimul
ret
push
or
adc
dec
push
repnz
or
enter
mov
stos
mov
repnz
mov
shr
rcl
js
xor
inc
(bad)
js
test
add
add
loope
push
(bad)
jne
fs
std
push
sbb
dec
or
call
arpl
or
into
add
jo
pop
mov
push
add
sub
(bad)
push
dec
mov
push
inc
and
pop
dec
(bad)
mov
mov
and
jnp
test
jle
push
loop
pop
mov
add
jae
pop
ins
repnz
sbb
dec
mov
lea
retf
ret
sbb
mov
jmp
sbb
push
call
pop
push
test
sub
or
pop
mov
xchg
hlt
sbb
(bad)
push
jecxz
iret
popa
lea
jne
add
or
adc
icebp
mov
clc
mov
xchg
adc
xor
sbb
cdq
cmps
or
shl
jb
or
push
sti
sub
loop
add
push
inc
mov
push
dec
call
mov
and
ror
push
icebp
sbb
adc
cmp
fcom
shl
or
rcr
out
push
push
add
lea
cld
push
jne
rcr
sar
mov
clc
pop
retf
sbb
or
shl
add
mov
mov
mov
fcom
sbb
jne
pusha
movs
mov
add
cmp
rcr
mov
lds
mov
adc
dec
xlat
outs
mov
rol
cmp
sub
ja
sub
(bad)
jne
ins
jb
cwde
clc
jmp
(bad)
ja
mov
inc
test
lea
mov
in
sbb
jb
pop
sbb
pop
sub
dec
lock
jo
mov
out
neg
test
icebp
sub
inc
cmp
mov
or
push
or
mov
lock
add
jbe
cmps
xlat
test
sbb
in
inc
mov
scas
pop
pop
imul
jmp
cmp
jle
call
pop
mov
xor
mov
fcmove
add
cmp
push
(bad)
in
xor
call
and
xchg
jo
mov
adc
clc
ret
xor
push
adc
add
and
or
sbb
cmp
je
inc
cmp
xchg
outs
jmp
mov
lahf
sar
inc
xor
pushf
mov
sti
dec
mov
dec
add
out
or
xchg
mov
or
add
sbb
cmp
sub
mov
stos
add
push
pusha
sub
loopne
inc
sub
inc
adc
ffree
xor
push
xor
push
add
adc
sbb
push
mov
pusha
call
sub
mul
push
or
js
outs
xchg
outs
mov
lds
daa
mov
fadd
div
jmp
and
sbb
rcl
retf
popa
shl
push
std
mov
jns
xchg
ja
stc
cwde
movs
add
(bad)
loop
push
lea
push
jl
push
mov
xor
in
movs
and
jmp
mov
ins
ret
aad
test
mov
out
add
js
or
inc
jmp
inc
(bad)
jns
repnz
lock
test
mul
dec
(bad)
call
jnp
out
test
out
xlat
adc
ret
movs
daa
les
adc
push
sti
ss
inc
les
sahf
test
pusha
mul
fwait
jmp
ror
mov
mov
mov
dec
dec
popf
add
mov
pop
push
mov
sub
not
xor
fcmovb
or
and
or
mov
bound
jmp
mov
cmp
xchg
or
cmp
fwait
cmp
and
test
adc
pop
out
inc
repnz
push
sbb
add
add
in
push
push
push
or
jne
cmp
fnsave
mov
add
movs
ss
out
add
push
mov
lea
jno
inc
pop
outs
clc
ins
inc
xchg
std
adc
adc
pop
mov
cmp
xbegin
mov
add
je
push
retf
pop
add
sub
xor
es
lea
popf
pop
push
sbb
push
mov
pop
cli
std
ins
xchg
cmp
add
mov
inc
call
fcom
iret
xor
(bad)
jl
jne
fst
xchg
and
and
cld
mov
fsubrp
not
push
mov
outs
fstp
pop
jmp
call
clc
rcl
adc
call
mov
idiv
es
mov
pop
cli
loop
pop
sbb
pop
ja
add
dec
mov
(bad)
and
clc
test
out
adc
je
cmp
sbb
nop
adc
or
jmp
cmp
xchg
out
aaa
das
clc
repz
enter
xchg
mov
lods
shl
in
xchg
enter
add
pop
cmc
shl
fwait
mov
test
cmp
outs
add
or
mov
cwde
mov
rol
pop
aad
add
push
test
dec
out
je
out
or
mov
fs
clc
jmp
push
push
ja
mov
pop
xor
mov
jmp
jl
cld
rcl
mov
cmps
cmp
xor
pop
retf
sbb
scas
(bad)
aas
push
jo
adc
rcl
rol
mov
mov
lods
aam
icebp
rol
xor
pop
out
mov
rol
push
add
leave
sub
jp
adc
or
or
popf
js
out
cmpps
int3
rsm
add
ja
mov
loop
push
dec
add
add
push
out
sub
in
push
pop
mov
inc
or
jne
xor
adc
mov
push
out
adc
dec
jmp
jg
es
repnz
push
inc
add
or
mov
outs
adc
(bad)
repz
(bad)
(bad)
test
pusha
add
mov
push
add
push
lods
fstp
into
inc
push
cmp
jne
into
or
push
jmp
mov
inc
adc
fisttp
pop
pop
jns
iret
cmp
jne
cmp
and
fldlg2
fsubr
sbb
pop
add
inc
jecxz
pop
or
jp
ret
add
push
je
or
popf
jecxz
inc
xor
add
xchg
mov
xchg
enter
sub
adc
stos
dec
in
bound
sbb
jns
xlat
sbb
lock
xor
arpl
or
(bad)
fsub
adc
mov
push
mov
test
inc
sbb
test
sahf
mov
loopne
scas
(bad)
leave
test
pop
es
lock
pop
pop
inc
repnz
scas
xchg
aaa
leave
in
lock
test
imul
pop
repnz
test
call
mov
lea
push
sti
popf
mov
dec
xchg
in
aaa
sti
jmp
pop
pop
lods
aam
and
xchg
(bad)
adc
jnp
jl
add
mov
inc
pop
pop
ins
push
add
pop
test
jecxz
gs
adc
xor
xchg
add
int3
shr
add
jle
dec
lock
xor
and
push
mov
cmp
outs
call
ja
jmp
adc
push
jb
ja
mov
inc
mov
add
add
or
leave
test
add
bound
js
pushw
adc
push
adc
jno
cmps
add
movs
push
push
mov
dec
add
int3
dec
ror
or
ins
je
push
sub
or
cmp
mov
or
xor
test
loop
rcl
xchg
mov
push
cdq
add
fild
adc
outs
mov
clc
push
test
pusha
jne
lods
sahf
test
mov
xchg
jbe
pop
mov
adc
mov
sar
mov
clc
pop
push
stc
xchg
jmp
and
xlat
or
pop
or
or
cmp
ja
test
push
shr
in
std
inc
nop
sbb
add
call
or
ss
mov
sub
xchg
sbb
add
mov
dec
sbb
or
aaa
xchg
sub
cmp
or
test
mov
jg
jmp
dec
cmp
clc
lock
aas
dec
pop
add
dec
mov
icebp
fcmovnbe
jge
mov
rcl
test
aaa
pop
cmp
pop
mov
iret
psubsw
(bad)
outs
adc
rcl
xor
loope
xor
xor
xchg
dec
dec
repz
inc
or
push
or
cmp
lock
movs
inc
jmp
sub
fwait
mov
cwde
and
xlat
out
mov
pop
dec
adc
cmp
je
or
out
test
sub
cmp
in
fild
xchg
lea
into
in
push
ds
and
jg
rep
xchg
mov
mov
outs
mov
in
xlat
fsubr
mov
mov
push
or
cs
xor
and
enter
lock
mov
jne
js
ins
add
je
push
sti
lock
cmp
rcl
cmp
adc
push
and
mov
cmp
sub
in
js
out
pop
pop
or
add
xchg
xor
push
and
xchg
(bad)
or
dec
jnp
or
inc
ror
clc
cdq
imul
scas
inc
or
data16
push
xchg
aad
jmp
sbb
sub
jne
push
inc
mov
sub
lods
outs
mov
stos
xchg
aam
adc
cmp
ins
xor
jae
shr
out
adc
into
out
call
inc
and
ds
adc
ret
mov
sbb
or
imul
push
push
or
das
sub
and
(bad)
clc
nop
inc
adc
nop
loopne
and
pop
xchg
pop
jns
adc
cmp
jno
into
xchg
fild
add
mov
dec
imul
add
mov
and
add
sahf
xlat
or
mov
or
add
mov
(bad)
or
cld
cmp
jp
mov
xor
push
dec
add
mov
aam
cmp
or
(bad)
std
imul
pop
push
test
(bad)
test
ds
xchg
lock
(bad)
mov
or
psubb
je
jmp
mov
outs
loopne
mov
aam
jmp
cmp
es
push
sub
jo
jno
mov
mov
xor
inc
jl
mov
bsf
daa
ja
or
xor
aas
dec
ret
jne
jle
jae
fcomp
push
sub
inc
or
push
push
sar
popf
pop
sub
ret
ja
clc
mov
pop
xchg
sar
push
test
pusha
in
add
bound
lock
ds
fs
sub
mov
and
and
ds
pusha
xchg
pop
mov
cmp
xor
dec
jmp
pushf
test
pop
(bad)
cmp
sub
in
das
dec
gs
add
cmp
xchg
inc
cli
or
aad
push
add
adc
sbb
or
dec
xchg
or
push
arpl
imul
or
mov
pop
fsub
mov
ds
or
jbe
call
fs
xor
cmp
jmp
pop
sbb
mov
adc
ja
call
outs
adc
out
fist
and
jmp
mov
mov
jnp
push
jmp
int3
es
sub
data16
push
les
mov
mov
and
or
rcl
and
push
or
jmp
(bad)
xor
or
add
popf
cmc
jno
sar
inc
xchg
add
adc
push
dec
sub
sbb
fsubr
or
ror
sub
clc
adc
xchg
push
or
cmp
inc
in
lock
or
add
(bad)
stc
mov
hlt
into
sub
cmp
int3
cmp
sub
adc
test
inc
mov
lahf
sub
pop
lock
stos
enter
jmp
inc
fsubr
inc
xor
adc
or
fmul
int
sbb
add
sbb
mov
mov
add
fwait
cld
pop
es
je
jmp
or
enter
adc
jecxz
push
out
add
pop
add
(bad)
idiv
mov
push
cmp
outs
inc
sbb
or
sahf
scas
(bad)
push
sub
xor
ror
inc
loope
daa
sub
sti
mov
push
push
adc
mov
xlat
add
add
add
pusha
lods
mov
dec
push
nop
out
adc
mov
adc
mov
sub
inc
cmp
vmread
clc
push
hlt
add
jp
lahf
neg
inc
inc
push
loope
sbb
hlt
mov
cld
in
in
out
adc
loop
inc
sub
in
fs
add
int
push
jmp
mov
enter
inc
or
sub
fs
add
jle
hlt
in
lock
int
inc
cmp
pop
jne
es
xor
rcl
sub
add
hlt
mov
push
or
add
jo
mov
stc
ror
dec
dec
arpl
cmp
shr
add
push
pop
out
repz
dec
bound
stos
test
retf
mov
outs
and
bsf
mov
call
add
mov
cmp
pop
es
and
pushf
rol
stos
or
lods
xchg
ret
cwde
les
or
mov
shr
mov
(bad)
shl
ficomp
push
adc
jge
mov
in
out
jle
test
rcl
loop
sbb
add
test
ja
cmp
fs
jmp
inc
add
rol
neg
in
jbe
or
or
pop
mov
popf
je
and
cwde
jge
and
mov
in
inc
mov
dec
jmp
sbb
nop
pusha
dec
shl
sub
cmp
jno
xor
push
dec
xor
sbb
lahf
shr
sti
xchg
dec
jl
call
add
push
fbstp
call
push
xor
popf
push
call
jl
sub
cmp
ja
push
inc
inc
cmp
add
call
sbb
mov
add
add
pop
cmps
enter
mov
add
adc
call
sub
jge
mov
jle
mov
dec
ret
push
push
das
jmp
test
cwde
fild
imul
and
outs
sub
sar
mov
add
idiv
push
adc
popa
inc
in
push
or
xor
push
in
or
mov
mov
and
pop
mov
rcr
mov
or
mov
pop
(bad)
mov
jmp
inc
loopne
pop
jle
(bad)
punpckldq
mov
mov
pop
adc
dec
nop
test
adc
in
scas
add
xchg
outs
inc
sbb
or
mov
cmps
out
inc
add
mov
ret
sub
jmp
retf
outs
sbb
test
ret
addr16
mov
(bad)
es
dec
imul
retf
addr16
sub
int
imul
xor
sub
imul
add
push
and
dec
jmp
sub
or
jg
clc
jne
mov
pop
cs
dec
ret
call
mov
test
or
dec
push
ret
xor
popa
or
lods
xchg
mov
cmp
test
dec
loope
daa
jbe
idiv
and
into
cmp
adc
dec
arpl
xchg
dec
in
mov
add
xlat
ds
enter
mov
mov
or
mov
sti
call
ja
cmp
scas
pop
sahf
adc
mov
push
or
mov
mov
ss
dec
and
mov
lea
inc
loope
mov
xor
movs
movzx
icebp
mov
xchg
sbb
cmps
push
sub
xor
movs
xor
loop
push
inc
div
jns
add
call
test
add
lock
retf
add
movs
push
shr
push
pop
push
mov
mov
lahf
push
and
sbb
adc
add
adc
adc
inc
addr16
jae
dec
jae
mov
mov
out
bnd
inc
or
dec
adc
daa
test
sar
cmps
xlat
add
or
dec
sbb
pop
pushf
into
les
mov
xchg
cmovge
imul
ins
and
cmp
int
call
sbb
test
leave
mov
or
xor
test
call
xchg
jmp
xor
push
xlat
jne
iret
ficomp
sbb
jmp
adc
adc
push
xchg
inc
cmc
or
cmp
aam
add
scas
add
push
mov
adc
repnz
add
push
cmp
add
add
sub
pop
and
fbstp
pop
ror
nop
xchg
call
bound
fld
sbb
or
cmp
std
inc
call
or
dec
add
and
test
inc
loopne
ins
mov
fsub
les
fisub
call
mov
push
mov
push
shl
cmp
(bad)
in
inc
movs
or
out
or
cmp
sbb
mov
rol
jge
add
lahf
ret
mov
xlat
xlat
mov
sub
or
pop
dec
cmc
cmp
sub
imul
cmps
cmp
mov
push
xchg
(bad)
push
cmc
push
js
and
mov
shl
push
ja
inc
cmp
pop
ja
jmp
pop
sub
cmp
cmps
es
(bad)
fild
addr16
dec
loope
sub
add
adc
and
sbb
std
mov
repnz
lods
popa
in
add
dec
mov
add
adc
push
test
lea
fidivr
cli
sub
(bad)
or
jne
addr16
add
rol
mov
ret
mov
das
jo
push
inc
dec
ja
sbb
and
popa
lds
jb
mov
or
ret
cmp
scas
aaa
mov
xchg
aad
cmp
call
stos
je
fwait
test
cs
sub
xchg
xchg
xor
nop
and
(bad)
jbe
out
es
pop
xchg
inc
test
push
loop
dec
mov
mov
cwde
mov
jge
dec
loopne
test
call
or
pop
shr
je
and
das
mov
cmp
xor
inc
mov
nop
ror
int
inc
adc
pop
adc
ja
mov
pop
xor
ficomp
call
and
mov
inc
jmp
cmp
je
les
pop
adc
sbb
add
and
(bad)
cmp
out
jne
loope
jae
cmc
xchg
add
xchg
cwde
adc
test
iret
je
jmp
push
stos
std
ja
cmp
xor
out
popa
xor
push
add
add
popa
outs
xor
or
jmp
gs
mov
shl
fistp
jmp
push
jns
sahf
(bad)
mov
sbb
push
and
shl
in
in
(bad)
jmp
mov
mov
std
cdq
or
push
mov
or
push
xor
in
and
pop
xchg
xchg
fs
push
add
xor
cwde
mov
adc
mov
out
es
jp
add
je
inc
or
repz
xor
mov
sbb
jmp
imul
sub
psubsb
mov
push
xor
push
fidiv
retf
addr16
or
xor
in
push
je
add
mov
jae
jmp
and
inc
add
push
clc
jmp
das
mov
cdq
xor
out
int
ds
mov
fist
mov
sub
or
test
dec
test
mov
sbb
in
jmp
inc
dec
call
clc
cmp
or
inc
sar
div
jle
xlat
add
fs
mov
cmp
jle
ins
adc
jb
xchg
call
popa
in
in
dec
sub
mov
xor
xor
inc
add
sub
daa
xor
loope
cmp
dec
inc
adc
mov
push
mov
inc
ret
add
sub
push
sbb
mov
xor
js
push
loope
loopne
aas
push
add
push
loopne
test
sub
adc
pop
dec
fisttp
or
leavew
add
test
add
mov
fucomip
cmps
into
xor
(bad)
imul
xchg
imul
sub
ret
ror
jb
cmp
push
out
in
or
repnz
jns
into
and
out
sbb
imul
mov
mul
inc
inc
jmp
mov
ret
loope
(bad)
dec
jo
pop
push
jle
dec
shl
xchg
out
inc
call
xor
ret
xchg
fs
(bad)
mov
jo
dec
lods
push
dec
ret
cli
push
stos
add
jmp
mov
lock
xor
aam
mov
pop
mov
mov
jmp
mov
jne
add
mov
add
mov
pop
bound
inc
stc
iret
inc
mov
cs
aad
inc
test
in
int3
pop
dec
add
ror
push
lock
jmp
popf
sub
xchg
das
adc
in
inc
cmp
pop
std
or
jns
adc
nop
pop
cmp
jo
sbb
lock
mov
stc
pop
(bad)
(bad)
push
xor
jp
popa
mov
cld
cmp
stos
and
inc
xlat
ret
test
lods
mov
fiadd
int
outs
pop
mov
int3
das
pop
or
push
call
sahf
ds
movs
jmp
xchg
pop
xchg
repnz
popf
sub
xor
lods
pusha
add
cdq
pushf
data16
mov
push
cmps
add
ja
pop
je
ins
sbb
sub
push
arpl
push
(bad)
mov
jecxz
jmp
sub
cmp
ja
and
movs
out
push
jo
jge
test
push
jns
pop
popf
in
aam
outs
dec
mov
stos
in
mov
jmp
add
(bad)
jmp
js
push
xchg
inc
jne
lods
and
cmp
inc
div
out
rol
jbe
xor
inc
das
sbb
sbb
ret
push
lea
dec
mov
or
mov
mov
jge
push
mov
js
push
sub
or
loope
rcl
and
(bad)
fwait
adc
or
or
or
or
adc
sbb
push
or
pop
sbb
scas
dec
ds
sbb
push
fsubr
ret
sub
jecxz
mov
adc
int3
movs
push
js
jo
jmp
push
stos
ins
push
jne
push
mov
push
or
sbb
loop
test
add
inc
cmp
sub
lds
mov
aas
test
sub
add
push
add
pop
bsf
in
dec
(bad)
xchg
cmp
mov
js
sub
shl
pop
pop
xor
sbb
jmp
and
ret
shl
push
mov
aas
xor
lea
and
sahf
sub
fst
imul
dec
sbb
mov
hlt
jo
shl
jmp
add
xor
rol
cmp
sub
xor
mov
inc
sub
jbe
cmp
add
add
lahf
dec
sub
and
add
aad
or
adc
loopne
dec
adc
lock
addr16
not
loop
rcl
mov
mov
add
call
dec
xor
jmp
xor
ror
fdivr
xor
pop
mov
imul
sbb
or
daa
dec
shr
or
jbe
jge
mov
dec
enter
sub
push
or
pop
or
inc
ins
mov
enter
pop
jmp
sbb
sub
mov
dec
call
(bad)
out
jbe
jmp
in
shl
test
xchg
xor
(bad)
push
push
cmp
xor
cmp
xor
sbb
mov
mov
xchg
xchg
jmp
sbb
cmp
test
pop
push
mov
or
out
push
ins
test
div
mov
fsub
outs
aam
jns
xor
mov
adc
fstsw
and
pop
jle
xor
lea
add
(bad)
hlt
jo
ret
jae
cmp
mov
std
jbe
sbb
call
ror
stos
sub
xor
loopne
es
fild
(bad)
call
mov
sub
test
sub
mov
ret
add
and
xchg
out
mov
or
sbb
add
stos
cmps
push
push
dec
jp
(bad)
je
ja
jl
mov
dec
out
iret
xor
lea
enter
mov
in
pop
add
mov
and
leave
xor
mov
jno
pop
inc
call
jecxz
call
add
mov
and
sti
cmps
sti
or
xor
xor
es
add
les
mul
test
dec
jb
xlat
(bad)
mov
xor
ja
jp
out
or
and
and
popa
(bad)
lods
loop
pop
jmp
sti
dec
imul
add
pop
(bad)
jb
mov
test
and
xchg
mov
(bad)
pop
ins
push
push
aas
adc
jl
aaa
dec
jge
xor
adc
rol
dec
movs
ret
sub
and
pop
sbb
jb
cdq
xor
push
inc
movs
fcom
repnz
push
jns
cld
int3
cmp
fst
mov
bound
rcl
mov
xor
aam
sti
(bad)
inc
cmp
xor
pop
(bad)
add
out
test
and
adc
add
inc
cld
pop
mov
push
fiadd
addr16
adc
cmp
pop
jbe
fmul
mov
push
mov
push
or
das
jmp
call
add
mov
add
notrack
add
push
into
dec
icebp
pop
push
inc
and
push
inc
add
push
mov
out
lock
popf
fwait
nop
add
(bad)
cmp
push
pop
mov
sahf
lea
cdq
sahf
xchg
retf
xor
and
repnz
pusha
sbb
loop
mov
push
scas
into
xchg
out
mov
lods
cmp
sbb
xchg
push
pop
addr16
adc
cmp
jmp
sub
push
or
cdq
sbb
mov
scas
jmp
xor
cmp
or
sbb
xor
lock
out
aam
or
dec
jnp
push
xchg
cmp
rcl
test
shl
jmp
rol
je
call
pop
xor
cmp
jne
(bad)
jg
fadd
add
jge
sub
jge
out
scas
add
dec
imul
add
mov
jl
inc
sub
fld
clc
jne
pop
sbb
out
fs
cmp
lods
xchg
scas
adc
xlat
cmc
outs
adc
test
and
sbb
daa
ret
dec
vmread
xor
mul
push
lea
push
add
mov
mov
mov
jnp
jl
outs
fisttp
xchg
inc
fcmovnu
and
shl
or
psrlq
pop
rol
neg
mov
and
fneni(8087
mov
mov
mov
push
push
rcl
nop
(bad)
es
push
call
lods
and
cld
mov
jl
ffree
jb
jne
or
arpl
js
jbe
cmp
test
sub
cmp
es
addr16
and
adc
cmc
rcr
inc
or
inc
mov
xor
dec
cs
pusha
daa
icebp
add
xchg
cmc
push
adc
cmp
push
out
ins
dec
add
inc
repz
dec
movs
ret
sahf
fstp
rcr
test
push
adc
cmc
cmp
ficom
xchg
retf
mov
ret
dec
and
in
mov
inc
inc
add
jbe
clc
push
cli
xchg
adc
cmp
dec
ficom
imul
push
and
and
xlat
inc
mov
les
lock
call
mul
add
sub
imul
sbb
dec
push
mov
(bad)
adc
stos
jns
mov
or
push
adc
jbe
dec
es
sbb
lods
shr
fucomi
xchg
dec
sub
shl
popa
fadd
jns
pop
mov
retf
and
push
cmp
dec
imul
inc
into
mov
mov
sub
xor
sub
cmp
repz
pop
dec
add
inc
nop
test
cmps
add
mov
(bad)
sub
repz
repnz
inc
or
jmp
addr16
jne
and
dec
nop
mov
mov
int
retf
es
call
addr16
cmp
push
sahf
adc
loop
and
add
dec
js
sahf
sbb
xchg
loopne
mov
xchg
xchg
loope
adc
xor
sbb
and
sub
lds
or
add
xor
adc
nop
repnz
mov
sbb
mov
sbb
jmp
xor
fnstcw
add
data16
sbb
fild
jp
sub
mov
or
mov
dec
aaa
ss
mov
pusha
add
scas
pop
ds
add
add
add
cmp
adc
pop
and
clc
add
mov
add
and
hlt
pop
js
pop
add
xchg
les
sahf
add
and
loopne
mov
xor
cld
inc
stos
xor
inc
dec
aam
pop
ja
mov
and
mov
jbe
add
or
aaa
movs
(bad)
pop
sbb
dec
push
fbld
aam
jo
test
bound
ror
icebp
and
imul
add
stos
mov
repnz
push
popa
cwde
imul
shr
loopne
mov
xchg
sbb
or
je
sub
cmp
add
dec
and
or
mov
dec
xlat
xor
mov
push
in
rol
test
out
cs
push
or
sbb
sbb
cmp
mov
pop
add
inc
mov
and
imul
and
cwde
bndstx
ss
mov
pop
shl
pop
or
add
sub
aaa
cs
mov
pcmpeqb
outs
sbb
xchg
xchg
dec
jo
push
mov
aad
add
mov
inc
dec
je
push
jmp
dec
les
loopne
push
inc
cdq
imul
call
ds
dec
cmp
adc
call
ret
add
pop
fisttp
add
adc
adc
aaa
and
and
xchg
xor
aaa
ret
jmp
je
push
je
mov
je
out
or
or
(bad)
int
dec
mov
test
pop
inc
xchg
adc
adc
(bad)
xor
mov
fild
mov
loop
movs
ffree
pop
test
in
and
pop
inc
mov
fs
lds
mov
push
xchg
fnstcw
xor
cmp
clc
jne
and
mov
rcl
add
shl
inc
jno
lds
(bad)
push
xor
(bad)
rcl
es
xor
and
pop
sbb
push
push
dec
(bad)
dec
mov
cmp
jb
mov
shl
call
stos
sbb
(bad)
loopne
rol
adc
inc
in
outs
jae
dec
rcr
lea
scas
mov
daa
cmp
or
test
jp
pop
fcomp
and
add
mov
push
xchg
pusha
mov
mov
jle
ins
add
or
cmp
sub
push
and
mov
mov
dec
ret
sub
sbb
mov
int
pop
jecxz
pop
lods
xlat
mov
add
int
sar
test
add
push
es
add
outs
test
sbb
or
sti
mov
jne
and
jmp
and
je
add
add
and
(bad)
dec
cld
stos
cmovno
push
enter
aad
cs
mov
retf
ror
data16
and
sbb
mul
push
xchg
sub
pop
arpl
(bad)
rcl
mov
and
data16
and
lea
xor
mov
cli
jmp
add
mov
add
and
sub
ins
jmp
add
cmp
rcl
cmp
inc
add
add
rcr
add
jo
dec
pop
pop
repz
push
inc
cmps
push
or
mov
inc
pop
bound
sbb
inc
add
push
add
rol
push
or
inc
adc
cli
inc
or
inc
adc
sahf
inc
rol
cld
sbb
add
or
fiadd
or
dec
(bad)
or
add
shl
aas
popa
std
mov
shr
je
jne
and
sub
gs
add
lahf
call
add
or
sub
test
dec
fwait
cdq
xchg
or
mov
lock
add
ss
adc
mov
add
xor
pop
int3
add
sub
mov
push
cmp
inc
mov
sbb
inc
cmp
or
adc
push
xchg
push
inc
dec
aam
xchg
inc
sub
inc
push
inc
loopne
adc
or
rol
pop
jmp
sbb
and
sub
add
(bad)
push
cmp
mov
int
ins
inc
add
and
js
fucomp
outs
inc
ret
push
mov
imul
pop
pusha
adc
mov
adc
or
scas
das
push
inc
dec
inc
or
mov
xchg
xor
xchg
sti
retf
inc
mov
in
clc
mov
jp
imul
mov
jge
movs
scas
inc
cs
push
fs
xchg
inc
inc
aam
or
sub
inc
call
test
xchg
pusha
add
adc
ror
add
retf
in
sub
inc
push
xor
in
add
jmp
es
les
in
ds
sbb
xchg
adc
or
mov
adc
cmps
jns
adc
and
fwait
xchg
cmps
jnp
sbb
aas
(bad)
mul
arpl
pop
cmp
or
push
add
inc
xor
mov
inc
push
jnp
add
push
jns
xor
cmp
daa
loop
jno
setnp
mov
xchg
mov
dec
dec
out
pop
repz
scas
mov
mov
or
add
ret
or
add
add
sbb
and
sub
or
add
ror
add
mov
mov
push
xchg
dec
mov
mov
add
inc
pusha
mov
ret
clc
je
xor
and
xor
dec
push
out
xchg
loopne
add
mov
sub
cvtdq2ps
imul
mov
and
jbe
jmp
sahf
jmp
je
xchg
jge
call
xchg
pop
mov
mov
pop
mov
call
jnp
push
inc
inc
mov
and
mov
mov
arpl
jecxz
addr16
ja
jbe
pusha
test
outs
mov
add
call
js
adc
jbe
sub
movs
jecxz
lods
ds
or
and
and
test
and
jecxz
rcl
ret
add
test
sub
popf
xchg
push
sub
add
pop
out
dec
ret
hlt
mov
sub
loopne
xor
push
and
push
inc
mov
shl
fsubr
sub
xchg
dec
mov
add
or
(bad)
adc
or
or
hlt
pop
fcomp
into
xchg
aam
jmp
sub
pop
add
jne
int3
cmps
jg
push
pusha
jp
scas
retf
jae
je
adc
mov
ja
mov
xor
add
jp
dec
je
dec
or
and
sbb
mov
pop
std
inc
dec
(bad)
jnp
push
bound
fldenv
jg
popa
or
or
adc
or
add
out
scas
rcr
or
mov
clc
in
jp
aaa
mov
loopne
xlat
inc
loopne
sub
idiv
push
ret
rcr
cmp
loopne
outs
inc
stc
xchg
mov
pop
pushf
push
icebp
dec
jl
icebp
jo
sub
add
fnstenvw
popf
rcl
xchg
add
mov
adc
cmp
adc
xor
cmp
jmp
loope
mov
dec
das
inc
(bad)
fadd
test
inc
or
cmp
pop
xlat
and
sbb
adc
cli
jmp
call
scas
mov
lock
inc
call
add
mov
popa
dec
and
(bad)
std
jae
addr16
mov
push
push
push
repnz
dec
call
sbb
xchg
outs
inc
or
add
cs
not
retf
js
pop
int3
sbb
cdq
or
jmp
fild
add
adc
fsubr
jl
mov
iret
inc
loop
pusha
cmp
ins
add
push
ins
cmp
adc
repnz
push
lea
jge
cld
retf
mov
stos
cmp
arpl
clc
sub
mov
mov
xchg
scas
push
test
cmp
or
push
call
scas
div
add
or
ja
and
rcl
cmp
inc
cmp
stc
cmp
or
or
cmp
and
sahf
jmp
jbe
cmp
popf
fst
inc
sub
xchg
enter
push
stc
ds
xchg
dec
or
pop
add
jle
cmp
mov
or
aam
pop
outs
inc
rcl
xchg
add
sub
sbb
xchg
mov
add
and
outs
pop
sar
out
or
mov
gs
sbb
mov
(bad)
pop
imul
mov
adc
adc
dec
ror
ss
mov
xchg
xor
cmp
fisttp
out
sub
sahf
lods
xlat
mov
jecxz
je
cmp
or
leave
out
das
add
or
adc
mov
sbb
mov
jns
out
pop
xor
test
mov
loope
sub
out
mov
call
pop
ret
pop
rol
pop
mov
std
icebp
add
mov
fwait
adc
push
fdiv
push
adc
cmp
aas
adc
or
sub
je
jle
hlt
sub
mov
out
je
scas
stos
add
je
xor
push
pop
adc
mov
mov
pop
lea
adc
pop
cmps
push
mov
adc
jno
retf
pusha
and
(bad)
clc
int
and
aaa
adc
loopne
ja
mov
sub
or
test
call
sbb
sub
xchg
adc
popa
xor
(bad)
repnz
scas
sub
arpl
fisttp
jo
cmp
dec
imul
sub
sbb
mov
dec
stos
imul
cmp
(bad)
mov
push
(bad)
mov
call
mov
or
rcl
adc
and
mov
into
sbb
xchg
scas
cli
dec
dec
movs
jae
test
or
xor
or
sbb
aam
add
sub
aam
xchg
neg
sub
pop
mov
push
push
out
scas
mov
jmp
outs
das
aam
jae
mov
pop
add
and
jnp
xchg
imul
mov
adc
mov
mov
(bad)
icebp
xor
jg
fsubr
sub
shl
xchg
inc
add
xor
or
aas
push
cdq
jnp
jbe
in
int3
psubsb
cs
test
fild
js
mov
mov
out
cwde
mov
and
jne
xchg
xor
clc
repnz
sub
and
push
shr
fistp
pop
jbe
mov
adc
pop
sub
mov
cmp
mov
sub
push
sub
mov
mov
push
xchg
loopne
jg
pushf
pop
xchg
or
into
ss
push
add
or
add
xor
mov
or
lock
mov
int3
jmp
loopne
repnz
sbb
sub
sbb
inc
mov
fs
pop
sub
out
jmp
pop
add
dec
push
cld
jno
mov
test
or
cli
inc
mov
inc
inc
jnp
adc
cmp
dec
dec
dec
jle
retf
popa
add
call
sub
das
mov
xor
scas
fadd
dec
cmp
adc
mov
jmp
push
hlt
cs
pusha
icebp
and
xchg
pop
lock
ret
(bad)
out
ins
or
cs
inc
pop
clc
and
adc
call
das
sbb
fwait
scas
rcl
jno
(bad)
add
mov
xor
xor
(bad)
or
mov
cmp
pushf
sub
and
xor
sub
js
push
jge
sbb
mov
daa
sbb
xchg
retf
cmps
push
xor
call
push
or
jle
into
pop
out
fist
cmp
push
std
xlat
cmp
jle
lea
imul
mov
fdiv
push
push
sub
lods
mov
adc
cmp
inc
ins
loopne
mov
or
add
and
rcl
cmp
lahf
cmp
push
outs
sti
sub
lahf
call
rcl
out
inc
and
cmp
push
int3
cmp
jo
ja
mov
sbb
aas
in
mov
jb
pop
xor
adc
inc
add
or
sbb
pusha
adc
jb
sti
cmp
and
mov
mov
cwde
in
js
adc
fcmovnu
leave
xor
sub
enter
cmp
sbb
and
dec
rcl
jbe
in
fwait
xchg
xchg
and
call
fcomp
adc
xor
and
in
pusha
add
and
psadbw
push
mov
sub
std
inc
cmps
pop
icebp
push
in
in
not
shl
push
push
inc
and
mov
test
fdiv
sbb
sbb
aam
adc
pop
xchg
sub
loopne
dec
loopne
or
in
mov
fstp
xlat
das
cmp
sti
les
scas
inc
mov
shr
xchg
push
and
int3
retf
and
xchg
pop
ret
loope
loope
icebp
es
mov
jmp
scas
jne
in
jo
in
xor
adc
add
or
mov
cmp
je
sub
dec
cmps
inc
cmp
add
mov
jge
mov
call
mov
jmp
jmp
mov
sahf
xor
hlt
fisub
rcr
xchg
shr
pop
test
cmps
mov
enter
call
push
or
enter
loopne
popa
or
scas
arpl
sbb
cmp
out
pop
lods
fucom
dec
and
or
cmp
mov
mov
xchg
retf
mov
stos
pop
les
inc
and
popa
jge
inc
ret
adc
or
or
mov
int
and
out
push
inc
ret
cmp
or
cmp
add
stos
mov
pop
out
cmp
adc
fcmovb
shr
enter
mov
adc
shr
jnp
cmp
xlat
push
cmc
mov
mov
loope
mov
fiadd
inc
pop
aad
inc
pushf
xchg
jne
jmp
or
xchg
pop
aad
fcomip
or
nop
push
loope
sbb
pusha
push
and
dec
bound
mov
jne
push
sbb
ss
nop
push
xchg
mov
xor
sbb
pop
pop
ror
or
xchg
dec
fwait
cmp
xor
movs
scas
fist
jmp
pop
daa
add
imul
jmp
xchg
cdq
mov
jae
push
jecxz
mov
inc
dec
nop
jno
imul
aad
dec
or
dec
shl
jmp
pop
and
aad
jb
inc
or
dec
ds
dec
sbb
jge
nop
icebp
pop
or
mov
add
and
jo
mov
xlat
cmps
hlt
scas
jb
sbb
sbb
mov
adc
xor
pop
js
aad
shr
jbe
loopne
das
adc
lea
jp
push
inc
cmp
jl
jmp
pop
inc
and
cmp
cmp
ret
jb
add
lea
outs
int
nop
sub
and
faddp
inc
jmp
mov
mov
cmp
cs
xor
sub
inc
push
ret
xor
out
push
or
push
addr16
cld
(bad)
push
ret
jmp
jg
mov
es
push
inc
inc
jne
jmp
push
push
je
push
pop
jne
(bad)
cld
(bad)
jmp
cmp
jbe
mov
and
in
inc
add
add
lea
and
call
xor
scas
mov
sbb
je
sbb
add
sbb
add
push
push
sbb
pop
enter
xor
mov
or
sbb
pop
and
lahf
push
push
dec
clc
out
push
sbb
or
(bad)
mov
add
mov
adc
cwde
add
lods
mov
stc
mov
adc
es
jle
mov
dec
pop
and
push
lods
sar
iret
popf
inc
cmp
adc
xlat
js
aam
out
cmps
jl
int3
jne
sub
fdivr
inc
je
push
sbb
sub
stos
push
sbb
and
les
(bad)
clc
push
or
lods
xchg
sti
mov
push
sub
cmps
mov
ret
test
int3
and
and
push
ds
lahf
add
push
xchg
out
xor
or
nop
jbe
aam
ins
sar
or
mov
idiv
mov
hlt
and
or
adc
pop
dec
and
push
mov
inc
dec
out
std
cmp
jg
test
out
pop
(bad)
dec
repnz
add
adc
xor
sub
sub
inc
cdq
dec
pop
mov
repnz
arpl
rcr
mov
or
(bad)
test
jmp
div
mov
pushf
jle
jbe
sbb
inc
loope
adc
in
test
loop
cmp
ja
lea
and
out
xchg
pop
sub
call
mov
mov
rcr
leave
xchg
add
sbb
mov
mov
stc
fwait
adc
add
call
pop
xchg
jno
mov
cmp
test
dec
or
xor
push
and
sbb
aam
cmp
jg
fdiv
packuswb
xor
mov
shr
and
xor
test
fsub
dec
adc
mov
mov
dec
dec
out
and
das
jle
pop
mov
add
mov
test
mov
add
data16
out
movs
imul
cmc
loop
ds
stc
out
sub
and
jmp
leave
hlt
mov
shr
and
sti
add
add
loop
leave
mov
ret
mov
cmp
aaa
xor
jb
cmps
je
inc
(bad)
sub
ror
ret
je
xor
(bad)
test
xchg
add
sub
int3
sub
fs
xor
adc
mov
call
adc
je
mov
aas
or
ret
inc
or
dec
jl
enter
pop
pop
inc
push
iret
and
fiadd
je
ins
imul
es
sbb
js
pusha
loopne
mov
inc
or
movs
ss
mov
adc
call
je
adc
mov
test
cmp
test
and
cmp
xor
dec
rcr
fsub
movs
int3
lock
es
and
and
sub
sbb
fdiv
sub
adc
cli
hlt
jl
jg
into
ret
pop
xchg
pop
lock
push
mov
cli
outs
imul
mov
inc
lock
sub
int3
cwde
inc
dec
cmp
sbb
test
or
imul
ds
mov
mov
mov
add
outs
jmp
dec
sub
jb
not
out
fadd
push
add
mov
(bad)
jmp
ss
jmp
adc
mov
es
retf
jge
mov
add
fsubr
and
push
and
pusha
jp
mov
push
stos
shr
xchg
cmps
loopne
(bad)
xor
push
fisttp
add
retf
jno
xchg
ss
or
sbb
xor
push
in
mov
adc
sub
sbb
adc
aad
shr
push
addr16
pop
and
xchg
cwde
mov
out
loope
loopne
iret
and
mov
mov
push
sbb
add
sbb
push
adc
mov
addr16
jae
push
inc
rcr
in
loopne
or
xchg
jne
and
lods
push
inc
dec
push
adc
add
(bad)
mov
inc
or
push
es
mov
inc
mul
push
xchg
stc
and
lahf
xor
in
jne
fwait
iret
(bad)
call
mov
mov
cmp
out
push
lds
outs
or
sbb
into
test
into
adc
lods
add
jo
push
mov
jg
mov
ret
jae
loopne
and
pop
popf
ficom
hlt
jg
jl
dec
adc
inc
mov
outs
push
ret
popa
cwde
mov
mov
ficomp
add
xchg
push
cwde
push
push
jnp
jo
ja
bound
mov
loop
and
or
jmp
arpl
pop
xchg
xchg
es
and
sub
inc
add
loop
jmp
je
leave
pop
xchg
into
hlt
daa
sub
or
stos
sbb
mov
je
mov
add
das
jb
imul
cmp
xor
shl
or
sti
or
cmp
inc
loop
call
test
push
dec
rcr
shl
sub
add
sbb
fdivr
jae
stc
leave
nop
jne
xor
and
sub
pop
pop
ret
or
sar
pop
inc
inc
push
jne
mov
mov
inc
shl
mov
jno
in
int3
das
push
inc
add
adc
xchg
cmp
sub
enter
lds
or
push
call
shl
inc
sub
sub
dec
shl
out
dec
sbb
call
(bad)
loop
xor
mov
ss
call
jg
mov
test
mov
pop
sbb
gs
jle
push
pop
call
iret
dec
cmp
jmp
test
scas
test
mov
outs
add
cs
pop
movs
(bad)
daa
mov
dec
ror
lods
adc
add
and
dec
mov
xor
(bad)
push
test
push
and
and
dec
pop
stc
cmp
add
loopne
xor
aas
mov
stos
mov
and
das
jns
mov
jle
and
inc
fldenv
push
xchg
dec
data16
push
ja
imul
into
xor
clc
or
mov
in
lea
mov
fdivr
sbb
ss
sbb
xor
push
outs
sbb
dec
mov
sub
push
cs
adc
add
sbb
imul
sbb
mov
in
dec
mov
or
add
pop
cmps
jmp
adc
loop
sbb
pop
cmp
mov
pop
lea
aaa
imul
leave
cwde
(bad)
(bad)
cmp
test
cmp
mov
ja
push
out
add
nop
inc
cmps
loope
jmp
xor
inc
cwde
cmps
mov
sbb
pop
lock
pop
inc
fld
adc
pop
push
(bad)
dec
mov
retf
pop
out
nop
lea
repnz
sub
sub
popf
add
mov
imul
xor
adc
add
xlat
lods
add
and
add
ror
add
rcl
clc
loope
adc
pop
call
add
mov
pop
jmp
call
mov
out
mov
push
push
adc
retf
je
or
es
je
lods
cmp
pop
mov
out
push
add
jnp
mov
inc
mov
(bad)
and
push
xor
dec
jle
mov
and
dec
or
mov
xor
xor
scas
mov
movs
test
fsubr
lods
push
sub
jecxz
xchg
xor
gs
and
in
sti
cld
popf
add
leave
jb
xor
sub
push
addr16
mov
sbb
jp
call
(bad)
sub
add
push
sub
adc
test
adc
sbb
and
std
mov
mov
and
add
lea
inc
add
mov
jnp
xor
adc
sub
push
push
(bad)
adc
je
push
int
mov
icebp
cmp
daa
or
or
add
or
loopne
and
out
(bad)
lea
and
cmp
or
es
cwde
fdivr
dec
add
lock
sbb
pop
aam
pop
cmp
lods
mov
nop
shl
pushf
mov
sub
mov
and
xchg
and
push
add
add
lea
sti
retf
mov
sti
push
pop
out
or
sub
mov
xor
retf
or
inc
xor
gs
push
je
out
pop
sbb
xchg
jle
cmp
stos
test
inc
cmp
popf
and
inc
ficomp
mov
and
test
lahf
adc
pop
xor
sbb
cld
pusha
or
sub
add
mov
cmp
and
xchg
outs
push
outs
cmp
and
rol
pop
pushf
mov
std
std
mov
and
mov
jge
xchg
sar
repnz
not
mov
and
pop
or
mov
imul
adc
lock
js
sbb
mov
sub
(bad)
jo
fimul
jmp
scas
test
fs
retf
aam
popf
and
sbb
in
sbb
sbb
mov
inc
and
inc
sbb
test
retf
jl
mov
add
mov
ja
add
dec
mov
fcom
sub
das
cwde
mov
lahf
xchg
dec
jg
inc
call
pop
mov
xor
loop
stos
mov
jne
test
jecxz
les
jne
ret
pop
sub
lods
xor
in
jae
mov
sbb
adc
push
adc
test
dec
cs
ror
fwait
sub
inc
lods
das
mov
lods
mov
jbe
mov
sbb
add
adc
cmps
daa
dec
xchg
push
jne
xor
cmp
ins
jmp
je
cmp
jg
mov
pusha
sub
xchg
jno
ins
sub
xor
clc
data16
addr16
mov
outs
mov
add
fldenv
or
sub
and
les
adc
popa
nop
test
cmp
cmp
retf
sbb
mov
adc
movs
push
adc
fbstp
jb
arpl
les
push
bnd
mov
mov
scas
pop
xchg
xor
mov
cli
xchg
retf
add
push
sbb
nop
loop
(bad)
retf
movs
push
jg
sahf
cs
leave
(bad)
push
jp
ja
mov
mov
xchg
push
sar
and
inc
sub
cmp
jmp
pop
cmp
push
or
dec
cmp
or
add
push
and
jb
inc
fbstp
pusha
jecxz
add
or
ins
lock
ja
jb
nop
or
imul
cld
shl
push
jno
inc
push
sbb
inc
sbb
and
jnp
mov
xchg
les
cld
js
add
sbb
lods
or
shr
dec
mov
and
mov
jb
and
test
rcr
and
in
mov
pop
xlat
sub
data16
mov
xchg
fldcw
(bad)
sbb
rol
push
xchg
(bad)
call
inc
in
lds
mov
push
call
add
int
and
inc
test
(bad)
adc
gs
(bad)
out
jp
ins
in
add
add
gs
mov
je
shr
mov
test
or
es
cmc
fiadd
pop
or
pop
jmp
mov
pxor
fisttp
jb
call
ret
pushf
(bad)
adc
jo
pop
ror
dec
ss
lods
lock
add
adc
xchg
mov
imul
jge
pop
movs
add
repz
(bad)
and
call
add
lods
hlt
scas
jge
and
icebp
imul
(bad)
call
mov
test
xchg
repz
push
daa
les
mov
add
les
xchg
cwde
xchg
mov
ror
or
or
mov
rcl
sbb
(bad)
mov
shl
add
mov
jo
rcr
add
push
test
cwde
in
xchg
adc
test
pop
push
add
inc
(bad)
jno
pop
pop
or
scas
add
pop
test
jne
add
push
nop
loopne
xchg
or
mov
repnz
(bad)
adc
cmp
ret
aam
sub
and
je
pop
(bad)
stc
adc
mov
call
stos
push
inc
test
icebp
add
fld
inc
adc
jle
mov
dec
adc
xlat
lea
clc
and
jmp
or
or
stc
test
and
int3
js
dec
call
jl
call
es
outs
xchg
xchg
add
std
je
add
push
jg
test
add
push
or
je
fimul
mov
repz
adc
nop
jmp
xchg
or
rcl
sbb
and
jmp
fstp
cmp
pop
add
xor
sub
daa
loop
add
test
mov
cmp
les
jl
in
cmp
pop
mov
fsubr
push
jmp
fs
and
inc
add
into
mov
pop
sar
mov
and
movs
mov
inc
push
jns
das
inc
adc
sbb
iret
sub
adc
add
das
repnz
cmp
fcom
adc
sub
popw
fdivr
adc
pop
call
mov
lea
mov
or
add
dec
inc
and
adc
dec
mov
or
popf
push
add
jmp
loop
mov
idiv
daa
shl
inc
and
cmp
xor
dec
inc
mov
lock
icebp
xor
popf
(bad)
clc
add
cmp
mov
dec
cmps
ds
dec
sbb
pop
ds
sbb
xor
scas
call
mov
sbb
mov
mov
call
int
call
pop
sbb
cmp
cmp
or
(bad)
sbb
lods
inc
mov
sbb
inc
ret
dec
mov
and
adc
add
push
mov
movs
retf
xchg
pop
xchg
or
jne
sbb
pusha
test
in
push
xor
inc
cld
pop
ja
mov
fadd
clc
mov
sbb
ret
(bad)
or
mov
xor
mov
mov
and
pop
nop
imul
xchg
and
loopne
jmp
lds
pop
jno
mov
cs
mov
and
and
jo
call
xchg
test
repnz
inc
std
jae
(bad)
mov
push
jmp
cmp
lock
jne
mov
or
stos
or
cld
mov
arpl
arpl
nop
mov
adc
stos
lds
adc
je
mov
sahf
push
push
inc
add
les
lock
(bad)
je
aas
clc
jg
xchg
test
test
xchg
dec
gs
mov
push
adc
jns
lea
(bad)
das
repnz
inc
sti
xchg
loopne
stc
xchg
or
xor
rcl
(bad)
aad
push
adc
cld
aad
mov
mov
movs
push
popf
jbe
jle
mov
cmp
dec
mov
shl
jbe
call
ret
cmp
ja
mov
push
pop
cmp
in
mov
inc
sbb
imul
and
cmp
js
not
cld
pop
call
add
test
ins
fdivr
and
bound
cdq
scas
push
mov
push
ins
push
xchg
(bad)
idiv
ficom
pop
cmp
mov
cmp
dec
fdivp
das
xor
mov
jge
sub
enter
cmp
mov
mov
push
(bad)
push
imul
adc
and
ins
mov
outs
scas
or
jmp
ficomp
mov
jnp
jge
bound
sbb
jmp
xchg
cmp
and
mov
or
add
inc
jmp
je
int
sbb
fcomp
shl
jp
xchg
mov
sub
inc
leave
sub
int3
push
test
enter
mov
int3
jne
mov
mov
pop
lea
icebp
jnp
sub
cmp
mov
es
in
inc
clc
sub
xor
bound
push
ror
test
test
rcl
out
(bad)
cmps
repnz
mov
and
jnp
shr
gs
push
loopne
clc
div
or
or
mov
shl
das
bound
ret
shl
mov
icebp
add
or
xchg
jmp
jns
cmp
or
inc
mov
lock
jno
or
push
push
cmp
loopne
inc
gs
and
out
bound
push
fisttp
aas
loop
xchg
push
mov
jb
retf
xor
or
jne
cdq
imul
xchg
lods
xchg
ds
shl
(bad)
cli
sbb
aad
mov
outs
cwde
ja
push
in
bound
sti
inc
or
sub
push
imul
ret
adc
or
adc
stos
push
fadd
scas
xor
(bad)
mov
push
out
dec
pushf
cmps
add
adc
mov
adc
fwait
inc
(bad)
and
(bad)
xchg
jmp
jns
fisttp
jge
add
into
inc
mov
fadd
(bad)
and
inc
mov
or
inc
dec
mov
xor
int
fistp
loopne
mov
gs
ret
ret
or
or
rcr
scas
aaa
xor
shl
hlt
fadd
call
mov
or
sub
xchg
jo
out
out
jne
dec
sbb
mov
daa
call
or
cdq
inc
rol
xchg
xlat
movs
stos
dec
ret
sub
call
cmc
inc
xor
adc
cmp
out
fimul
pusha
adc
jae
xor
movs
arpl
(bad)
lods
fisubr
jg
xor
mov
out
add
push
push
adc
xor
call
or
cmp
mov
and
test
cmp
in
sub
xchg
add
inc
pusha
pushf
mov
sub
popf
or
cmp
cli
lods
ficom
lock
jo
mov
xor
lods
mov
movs
ins
jge
sub
xor
(bad)
stos
nop
movs
mov
dec
xchg
repz
inc
or
out
ret
add
(bad)
cmps
xchg
inc
mov
ret
icebp
sahf
aam
inc
ja
mov
inc
shr
adc
mov
jle
aaa
test
mov
pushf
or
scas
mov
and
mov
dec
jp
mov
fstp
nop
ja
mov
inc
sbb
retf
mov
cld
movs
adc
push
aaa
jp
dec
dec
movs
mov
mov
or
add
lods
cdq
dec
in
pop
adc
div
cmp
push
push
enter
or
dec
cmp
jbe
mov
or
mov
mov
pushf
mov
rcl
mov
lods
jnp
retf
cmp
loopne
outs
or
add
and
push
add
sub
and
fdivr
div
jbe
and
mov
ins
adc
sbb
sbb
and
mov
push
in
rol
or
out
lea
icebp
mov
push
dec
xchg
adc
add
or
push
enter
cmp
or
jb
or
add
mov
fst
push
pusha
sub
jns
mov
xchg
test
push
shl
shl
mov
and
add
or
hlt
push
adc
fcmovu
loopne
add
add
cmp
xor
jnp
add
adc
and
data16
ins
jg
push
adc
or
jo
push
sbb
das
pusha
loopne
mov
fnsave
adc
stos
and
scas
add
or
repnz
adc
mov
sahf
add
ins
jne
cmps
xchg
loopne
into
data16
repnz
int3
aaa
or
ins
adc
push
ja
push
adc
sbb
retf
xor
or
sbb
outs
or
fadd
xor
fsubr
dec
cmp
jmp
mov
jp
test
adc
fadd
out
jbe
or
or
(bad)
mov
cli
xchg
rol
(bad)
out
das
sub
add
pusha
loopne
call
inc
out
int3
call
jmp
xchg
dec
xor
in
out
into
es
inc
or
test
data16
or
dec
push
cmps
push
and
je
or
and
std
xchg
mov
add
mov
mov
xor
imul
idiv
in
lock
sub
mov
js
and
call
loope
push
jnp
push
adc
add
je
ja
popw
fist
xchg
loopne
xchg
mov
or
mov
xchg
jmp
fdivr
ja
add
das
mov
sub
repnz
cld
popa
sub
jmp
pop
or
ja
sub
sbb
pop
xor
call
retf
add
loopne
call
fist
jno
inc
cmp
ret
cmp
lock
mov
jnp
jmp
adc
push
outs
push
or
ins
(bad)
(bad)
pop
hlt
(bad)
sti
(bad)
jmp
dec
dec
jne
adc
or
mov
sbb
or
xchg
sbb
(bad)
sti
push
repnz
adc
push
or
pop
sar
jmp
dec
add
sub
shr
jge
dec
ds
repnz
push
jb
mov
xchg
sub
jle
(bad)
ins
leave
add
cmp
mov
cmps
cmps
cdq
loopne
jg
js
jne
jb
ficomp
jbe
mov
xor
rol
push
std
and
sbb
push
stos
dec
add
popa
and
jle
or
pop
loopne
push
mov
popa
mov
push
call
xchg
popa
mov
cmps
int3
sub
adc
test
jo
jmp
mov
add
add
mov
jp
fwait
std
mov
test
sahf
and
imul
sub
push
stos
mov
imul
rcl
test
retf
mov
jmp
sub
mov
mov
out
cmp
je
inc
jne
jmp
sub
retf
dec
movs
jmp
or
cmp
adc
js
adc
push
pop
daa
out
pop
call
add
mov
mov
out
sbb
xor
nop
dec
test
fcomp
jne
ror
je
mov
mov
call
lods
fisttp
adc
adc
inc
jp
add
pop
sbb
fsub
rcr
das
cmc
lds
push
enter
add
xchg
mov
outs
mov
mov
push
adc
and
push
sub
or
mov
fwait
dec
int3
and
mov
cmp
inc
jmp
fld
jmp
dec
icebp
sahf
rol
clc
pop
imul
retf
stos
(bad)
out
test
and
jmp
push
(bad)
cld
inc
xlat
mov
and
hlt
mov
mov
(bad)
mov
inc
and
jecxz
jne
popa
inc
sub
inc
sub
cmp
jmp
lods
inc
inc
dec
hlt
sub
or
push
imul
imul
rol
mov
adc
push
movs
cmp
ins
cmovae
or
sti
mov
dec
mov
aad
shl
mov
pop
cmp
das
(bad)
jnp
adc
jne
pop
and
outs
pop
dec
jne
popa
in
mov
or
dec
fisubr
pop
jne
adc
lea
mov
lods
pusha
or
adc
test
retf
push
sbb
cmp
fwait
call
jb
test
mov
dec
jne
sub
xchg
out
rcr
mov
xchg
stc
mov
lock
sti
add
xor
xchg
lods
dec
and
push
call
loop
fstp
pop
add
movs
ror
jnp
fisubr
call
ror
rcl
xor
ret
and
jne
adc
add
enter
adc
add
push
mov
push
mov
test
addr16
ret
inc
mov
xchg
push
dec
jo
inc
retf
test
addr16
rol
int3
inc
(bad)
add
sub
xor
fwait
loopne
jge
stc
jmp
dec
cdq
hlt
xor
retf
xor
inc
bound
lea
adc
pop
mov
add
sbb
rcl
mov
test
and
cmp
mov
adc
xchg
test
daa
mov
pop
and
push
dec
adc
inc
push
nop
dec
jle
mov
pop
push
call
(bad)
je
pop
mov
out
push
sbb
ror
call
mov
lock
adc
mov
adc
sahf
(bad)
cmp
sub
dec
cmp
sbb
pusha
inc
cmps
add
loope
scas
(bad)
push
jmp
add
jg
inc
mov
and
js
movs
inc
pop
pop
jne
ret
pusha
or
outs
and
gs
xchg
xor
aaa
mov
in
ja
call
stos
dec
and
push
dec
add
(bad)
mov
pusha
xor
mov
pop
or
sbb
mov
pop
jne
sti
adc
push
mov
mov
adc
push
jo
mov
sub
retf
mov
push
cwde
lock
pop
daa
ret
pop
(bad)
je
fs
or
js
je
pop
jmp
pusha
sub
push
sub
fiadd
stos
mov
lods
test
aam
mov
add
add
and
test
mov
sub
shl
imul
mov
push
in
add
in
sahf
iret
pop
xor
pop
sub
and
mov
aam
or
fwait
std
mov
pop
imul
ret
fcomp
adc
add
xchg
or
and
mov
mov
pop
jmp
ret
scas
je
sbb
mov
inc
sbb
lods
add
inc
stos
or
mov
fs
jns
setns
ins
jo
(bad)
(bad)
test
(bad)
inc
cmp
inc
pusha
dec
inc
ins
add
mov
pop
or
cmp
dec
les
pusha
xor
push
adc
dec
pushf
les
rcl
movs
in
sti
mov
rcl
xchg
mov
mov
mov
jle
cmp
dec
mov
xchg
(bad)
lahf
adc
cmps
jmp
sub
in
mov
mov
rol
and
lock
lea
jp
cmp
add
pop
nop
cmp
scas
adc
sub
mov
cmc
or
inc
mov
clc
stc
and
repz
cli
mov
push
in
scas
inc
sbb
loopne
loopne
clc
(bad)
jb
lea
push
scas
add
lds
jmp
or
pushf
call
out
xchg
scas
pop
mov
mov
push
sub
sahf
test
jne
cmp
and
movs
je
push
loopne
das
fs
nop
int3
ja
adc
mov
nop
jmp
mov
inc
push
add
cli
pop
movs
ret
add
mov
bound
mov
rcr
dec
push
ret
call
xchg
cmp
xchg
jge
add
adc
cmp
sbb
retf
bound
sub
cmp
sbb
mov
mov
jle
mov
adc
xor
popa
cmp
mov
jo
inc
test
mov
mov
daa
push
ret
add
inc
xlat
mov
je
fistp
les
dec
dec
pop
enter
rcr
call
mov
push
or
ins
in
adc
jle
in
sbb
add
clc
pop
mov
les
jo
pop
in
jne
add
xlat
shr
xchg
sbb
push
pushf
mov
sub
jno
ret
les
retf
mov
mov
mov
test
cmps
call
(bad)
adc
test
hlt
test
mov
out
add
mov
inc
dec
(bad)
add
mov
call
rcl
mov
cmc
fmul
sub
shl
and
sbb
mov
and
and
clc
xor
mov
inc
test
sub
mov
(bad)
sub
ret
cmc
cli
xor
add
jne
dec
idiv
sbb
jle
and
mov
nop
and
pushf
xchg
jmp
mov
xor
retf
sub
sar
sbb
dec
add
sahf
jmp
dec
and
xchg
fs
fld
cmp
lods
gs
mov
ds
mov
hlt
jecxz
(bad)
cld
inc
sbb
movaps
iret
loopne
(bad)
cld
add
jge
add
sub
sar
sbb
mov
je
xor
rcl
adc
mov
les
pushaw
mov
popf
mov
dec
mov
fiadd
enter
mov
rol
fldenv
cmp
cmp
(bad)
mov
ficom
cmp
mov
shl
or
test
jo
add
add
mov
call
rol
fcomp
inc
popa
or
arpl
and
mov
sbb
jmp
jp
add
sbb
repnz
xor
or
fiadd
dec
jle
into
shr
and
lahf
fist
push
xor
pop
or
in
jle
loopne
aam
jo
ror
add
sub
fwait
mov
jne
jo
xchg
sbb
pop
cli
mov
adc
por
xor
mov
mov
pop
leave
test
inc
std
fldcw
add
lock
mov
retf
add
fsubr
adc
mov
stos
inc
cmp
jb
in
or
add
sbb
add
and
cmps
or
mov
push
shr
cmp
loope
(bad)
dec
xor
dec
xchg
add
inc
jne
push
and
push
add
push
push
repnz
cld
add
sub
nop
push
ret
clc
xor
or
call
cmp
mov
nop
ror
add
add
iret
ja
inc
inc
mov
xor
or
or
mov
(bad)
popf
push
mov
call
add
add
pop
jnp
sub
rcr
aaa
mov
add
inc
mov
ret
lods
jge
jne
lea
call
nop
xor
or
mov
cmps
call
jbe
sub
add
push
adc
mov
sbb
popa
cmp
add
ds
mov
into
jl
or
push
cmp
inc
jb
cmp
lock
add
sub
pop
xor
and
ret
retf
add
es
jl
inc
nop
mov
std
test
stc
aam
push
or
sub
sbb
lods
scas
pop
and
sbb
rcr
pop
fsubr
mov
dec
iret
ds
mov
push
add
jmp
pop
sti
enter
add
lea
mov
mov
xor
mov
je
jno
cmps
jmp
xchg
imul
xor
add
pop
adc
iret
and
jb
ror
jbe
jmp
jae
rol
sbb
mov
mov
cmp
xchg
lea
jnp
mov
dec
pop
sbb
xchg
mov
xchg
mov
out
mov
add
in
or
jg
sbb
mov
or
psubsb
stc
inc
dec
popf
mov
or
sti
add
or
push
ja
inc
(bad)
(bad)
cmps
dec
sub
in
jbe
inc
add
mov
xor
add
push
aam
sub
jle
loope
fiadd
mov
jb
imul
in
push
scas
mov
adc
fs
fsubr
pusha
or
pop
sub
js
jecxz
sub
and
add
or
push
sbb
mov
shl
ins
jmp
add
ins
in
mov
adc
daa
ss
popf
cmp
sbb
sbb
daa
inc
add
pop
out
(bad)
mov
ins
mov
popa
pop
fidiv
mov
rol
dec
add
dec
jmp
fcom
or
mov
xchg
stos
fs
ins
jo
shr
lock
xor
jbe
fnstcw
js
jo
mov
jne
shr
stos
das
hlt
hlt
add
ficomp
icebp
add
clc
or
jns
cmp
and
push
sbb
call
sbb
loope
mov
es
jl
xchg
sub
mov
neg
out
sub
mov
hlt
test
sub
dec
leave
enter
or
and
(bad)
retf
inc
int
loopne
push
jp
das
xchg
(bad)
sub
mov
push
xor
jo
add
enter
pop
repz
stc
xor
out
jnp
(bad)
cmp
jbe
mov
or
sub
xchg
int
dec
int
sbb
cmp
jb
psrld
push
inc
add
mov
adc
repz
push
out
fwait
jp
jmp
mov
jmp
repnz
jmp
cmp
rol
test
push
mov
out
add
pop
out
fwait
push
mov
call
movs
adc
mul
cli
mov
cmp
fadd
or
cmp
push
and
shl
dec
sar
or
cmp
shl
or
add
(bad)
pusha
icebp
xor
or
sub
das
adc
imul
vpcmpgtw
dec
inc
outs
push
mov
ins
dec
clc
and
mov
icebp
xchg
adc
sti
out
icebp
add
adc
pop
cmp
aam
push
mov
jmp
dec
jne
mov
(bad)
fild
fdivr
sbb
data16
and
lea
push
call
dec
push
xchg
or
out
ja
mov
pop
mov
sahf
and
push
jmp
mov
out
or
ins
sti
xchg
xchg
cmp
add
push
xchg
js
aad
daa
add
jle
dec
mov
mov
adc
dec
or
call
xchg
cmp
and
mov
push
push
mov
or
jo
shr
adc
pop
(bad)
cmp
mov
mov
cmp
mul
jb
imul
adc
sbb
ds
push
pop
dec
push
mov
imul
mov
cmp
mov
sbb
lods
mov
mov
mov
and
fisttp
or
sar
mov
and
add
dec
into
outs
push
jne
pop
shl
in
in
mov
test
sti
jl
mov
jmp
pop
mov
cld
mov
cmp
cmp
cld
cmp
sahf
jnp
mov
in
jg
or
jl
mov
daa
and
daa
jmp
dec
lock
dec
xor
push
inc
adc
cdq
inc
mov
and
imul
mov
add
mov
test
bound
imul
jle
pop
jnp
out
adc
int
or
jle
push
and
pop
push
daa
mov
jno
pop
pop
add
or
inc
test
or
pop
or
sub
sbb
mov
inc
bound
outs
and
mov
sbb
mov
out
mov
das
outs
sbb
or
xor
add
shl
push
and
or
sub
and
push
lods
cld
add
retf
adc
nop
add
mov
jne
rol
dec
stos
nop
lock
add
inc
adc
add
inc
sti
jl
cmp
lock
(bad)
sahf
movs
mov
ds
push
loopne
xchg
(bad)
repnz
adc
sub
adc
ss
mov
mov
jns
clc
inc
(bad)
(bad)
int3
cmp
lea
jne
pop
adc
inc
call
add
and
add
xchg
dec
adc
sub
add
and
sahf
inc
es
inc
loopne
add
mov
rol
adc
jp
adc
mov
mov
fisttp
cmp
pop
pusha
inc
stos
push
retf
and
jle
push
les
or
ror
int3
xor
imul
lods
js
inc
jne
(bad)
add
mov
adc
rcr
mov
in
inc
mov
cmp
pop
daa
sub
mov
dec
xor
push
push
push
jmp
mov
fist
test
cli
call
cmp
and
dec
retf
scas
jge
pop
out
inc
add
xchg
test
inc
scas
pop
inc
jmp
ds
int
mov
ds
in
sbb
out
inc
loopne
cs
jle
aad
dec
pop
fldcw
(bad)
aas
jge
mov
add
push
sbb
push
mov
mov
sub
lock
pop
test
pop
lea
sar
and
call
mov
or
add
push
sbb
cs
sbb
push
jmp
sub
pop
sbb
xor
(bad)
inc
push
mov
test
ja
mov
retf
cwde
and
es
or
ja
sbb
dec
mov
pop
ins
(bad)
cmp
ja
push
aam
jle
mov
mov
pop
dec
dec
pusha
and
popf
sub
or
jmp
cmp
fistp
mov
jmp
jmp
sbb
js
sbb
add
sahf
sbb
cmps
rol
fdivr
or
sar
pusha
call
mov
jne
and
pop
leave
pop
lahf
in
add
add
ja
or
jmp
adc
add
push
rol
add
jle
imul
pop
or
dec
std
cwde
cmp
(bad)
aaa
mov
jbe
push
xor
prefetcht1
or
pop
adc
or
pop
aaa
add
fyl2xp1
push
jg
add
mov
push
push
adc
mov
aam
test
shl
pop
rcl
lods
loope
aad
pop
(bad)
fcmovb
pop
lea
and
in
adc
adc
jne
xchg
dec
or
ins
mov
js
loopne
push
mov
mul
shr
jmp
inc
adc
fnstenv
in
push
(bad)
mov
retf
neg
add
jne
xchg
and
aaa
test
and
(bad)
push
(bad)
cmps
add
sub
add
dec
xchg
inc
and
pop
retf
cmps
lods
and
sbb
mov
pop
in
mov
pop
sbb
add
adc
and
push
mov
adc
pop
shr
push
pop
pop
cmp
les
mov
cmp
rol
push
mov
dec
jg
sbb
dec
cmp
push
jmp
or
xchg
imul
sbb
sbb
jmp
dec
les
jg
call
push
push
daa
push
pop
add
pop
ja
push
mov
test
jl
push
mov
lock
push
dec
mov
jg
xor
je
or
je
sub
adc
daa
ins
out
lahf
cmp
add
stc
mov
dec
mov
jle
pop
or
retf
sar
cmp
mov
sti
dec
mov
sub
(bad)
mov
jb
inc
clc
mov
sbb
sbb
sbb
xor
adc
pop
dec
icebp
dec
call
xchg
xor
es
dec
push
jae
mul
imul
jbe
sbb
(bad)
mov
xor
loope
imul
cmp
xlat
or
or
retf
popa
xor
ins
fmul
daa
pop
add
fnstsw
or
mov
loope
data16
pop
bound
(bad)
sbb
enter
mov
lock
jnp
loopne
icebp
adc
paddw
push
jne
out
jle
mov
xor
cmp
add
lahf
out
xchg
loop
cld
retf
out
out
repnz
jne
mov
add
call
aam
pop
adc
leave
push
fisubr
xor
jne
sbb
xor
sub
jmp
sub
loope
and
sbb
jg
jno
ror
sub
in
add
lea
mov
sub
cmp
lds
sub
imul
add
retf
jle
jmp
in
(bad)
xlat
out
fisubr
inc
repnz
add
mov
cmps
push
add
mov
ret
jmp
xchg
das
inc
das
sub
mov
clc
das
fs
push
cmp
push
call
punpcklbw
inc
jmp
or
rcl
(bad)
test
ins
rol
nop
jp
jb
dec
add
inc
pop
sbb
xchg
mov
sub
sub
cmp
mov
xor
ds
dec
push
pop
and
sub
and
mov
das
aam
cmp
add
call
and
mov
std
xor
aam
push
pop
mov
mov
aas
lods
jbe
or
pop
add
push
cdq
aam
xchg
xor
clc
and
bswap
test
push
sti
pop
adc
xchg
cmp
xor
push
mov
out
and
inc
push
cmp
cmp
mov
je
sbb
sub
sub
xor
cmp
lea
pop
ja
lods
add
repnz
(bad)
mov
fld
pop
cmp
dec
jmp
test
inc
fst
xchg
xor
inc
jmp
push
xor
mov
repz
mov
and
mov
push
enter
mov
fidivr
xor
jne
cli
and
shl
call
dec
mov
mov
and
mov
push
and
or
mov
into
adc
fidivr
mov
add
push
mov
or
call
or
pop
int3
push
scas
and
mov
and
lods
pop
adc
add
and
and
or
dec
fdiv
pusha
idiv
push
dec
cmp
jle
(bad)
xor
popa
xor
sbb
popa
call
inc
js
ss
dec
add
mov
ret
mov
jbe
mov
ret
push
add
adc
(bad)
adc
or
mul
push
cmp
pop
and
(bad)
mov
add
jnp
adc
lock
add
cld
xchg
ficom
std
les
es
mov
push
es
outs
sbb
push
stos
fwait
push
adc
dec
sbb
jb
imul
iret
nop
push
popa
fs
adc
pop
add
sub
cmp
dec
add
test
int3
call
mov
sbb
(bad)
xchg
in
or
inc
pop
es
or
pop
movs
push
or
jmp
mov
mov
daa
cmp
pop
mov
fistp
btr
mov
mov
out
nop
sub
cmps
addr16
int3
test
push
xchg
imul
mov
jge
push
cmp
mov
inc
jmp
cs
inc
pushf
repnz
jle
add
push
sbb
fiadd
repnz
push
or
enter
data16
xor
push
aaa
mov
mov
sub
add
int3
jp
pop
dec
xchg
arpl
mov
les
ds
adc
xor
adc
std
push
push
or
mov
mov
bnd
mov
jmp
jo
push
mov
push
push
mov
push
add
jo
out
jle
out
mov
mov
mov
out
adc
dec
arpl
shl
les
mov
xchg
mov
sbb
add
xchg
add
mov
push
jne
call
add
mov
inc
rol
out
shl
test
push
enter
adc
adc
xlat
test
and
or
pop
add
dec
(bad)
mov
lds
clc
add
adc
mov
jnp
xor
adc
adc
mov
or
sub
sahf
sbb
adc
mov
mov
sbb
loop
and
loop
clc
(bad)
push
inc
cs
scas
cwde
add
inc
pop
jne
push
xchg
mov
mov
jmp
and
jg
repnz
sbb
mov
cmp
leave
loop
mov
in
jp
push
cmp
jl
js
and
call
dec
lods
cwde
aaa
pop
shl
nop/reserved
ret
mov
push
push
pop
add
pop
push
or
mov
dec
outs
in
xor
mov
div
dec
jg
jne
push
mov
pop
jns
jmp
mov
cmp
push
dec
pop
jle
push
push
shr
fucomp
and
jl
xor
retf
adc
inc
in
retf
add
add
pop
ja
push
call
fisttp
pop
pop
sahf
push
xchg
sbb
and
(bad)
push
in
(bad)
call
push
mov
cmp
add
adc
pop
call
mov
add
jne
cmp
sbb
inc
inc
test
pusha
xor
jl
in
cmps
cmp
add
mov
lea
inc
in
or
mov
fwait
popf
jmp
ror
xor
leave
mov
and
xchg
xchg
out
loope
xor
movs
sbb
push
enter
inc
shl
cmp
mov
mov
jns
cmp
sbb
adc
addr16
mov
jnp
clc
mov
or
pusha
or
std
mul
je
cmp
je
lea
call
xchg
dec
and
ficomp
mov
xor
shl
jmp
enter
cld
mov
cmps
scas
call
popa
pushf
scas
es
dec
mov
mov
jp
mov
enter
loope
test
push
(bad)
push
fild
push
dec
lods
in
js
push
dec
pop
jmp
push
and
mov
sub
sti
fidiv
inc
pop
mov
rcr
fisubr
call
outs
(bad)
(bad)
adc
adc
push
shl
call
xchg
fnstenv
pop
in
jno
inc
(bad)
pop
jecxz
in
push
and
pop
int
loopne
add
mov
or
fwait
pop
push
xor
mov
sbb
call
sbb
in
sub
outs
ror
mov
inc
pop
xchg
push
call
mov
call
js
inc
jns
enter
aaa
mov
dec
prefetch
or
mov
loop
adc
jmp
push
fadd
sbb
xor
addr16
ret
cmp
sbb
or
clc
shr
popa
inc
or
or
xor
mov
dec
pop
je
call
pop
and
js
pop
or
mov
pop
jmp
adc
loope
fild
mov
add
fst
jo
clc
sbb
aas
lods
xchg
xor
adc
pop
jne
lds
xor
pop
imul
push
leave
adc
jl
jp
call
xor
rcl
jmp
int
xor
(bad)
ficom
(bad)
jmp
in
push
jbe
push
ins
inc
cmps
pop
mov
pop
retf
push
inc
enter
xor
jg
mov
out
fidivr
inc
stc
mov
call
lods
mov
call
stos
mov
cmp
jmp
fiadd
jne
sbb
ins
enter
add
jns
xor
addr16
add
add
fisttp
cmp
jg
and
pushf
test
les
sub
jmp
addr16
call
or
adc
ins
inc
call
pusha
js
ds
sete
or
test
cmp
or
add
push
inc
ins
or
pusha
sbb
call
rol
inc
jle
(bad)
lock
ins
xor
rol
add
mov
das
retf
test
jl
inc
and
sub
push
push
sub
mov
mov
xor
jl
imul
jmp
fisttp
mov
and
outs
mov
pop
test
xor
ja
mov
mov
pop
setge
sub
or
push
and
test
jbe
sub
test
rcr
es
sub
fadd
ja
int
jb
stc
test
xchg
adc
inc
add
cmp
hlt
jnp
cmc
xor
cwde
in
xor
mov
fucomip
jo
or
dec
dec
mul
push
adc
jmp
pop
sbb
jecxz
add
push
add
or
loope
add
inc
sub
mov
mov
mov
sub
aam
or
out
sti
inc
and
mov
sub
fwait
mov
inc
add
test
ret
lock
ins
lods
mov
ret
and
jge
sub
sbb
push
or
inc
dec
adc
popf
cmp
sub
mov
lea
lea
aas
or
test
add
or
mov
cmp
ss
xchg
pop
add
xchg
mov
inc
daa
mov
add
xchg
mov
or
xor
jb
push
retf
sub
or
ret
inc
cmp
xor
repz
sbb
and
dec
sbb
sbb
and
adc
call
pop
inc
mov
test
jne
and
cmps
sub
add
xchg
push
add
stos
sbb
cli
add
call
lea
cmp
inc
xchg
sub
aad
pop
and
mov
aam
sub
ds
stos
push
inc
sbb
push
aam
icebp
popa
retf
dec
daa
dec
test
(bad)
lock
mov
sbb
and
jmp
pop
imul
scas
ja
add
icebp
dec
rol
mov
fwait
ror
call
shr
into
jne
sub
adc
sbb
ds
mov
clc
mov
push
call
pop
inc
mov
inc
add
call
or
daa
jg
and
fs
ret
ss
jmp
inc
jecxz
sbb
adc
and
hlt
bound
sub
dec
jmp
gs
jmp
mov
(bad)
xchg
pop
enter
add
mov
adc
imul
pop
push
pop
iret
or
mov
ins
dec
hlt
mov
mov
add
sub
mov
add
sti
retf
imul
inc
jge
ficomp
int3
or
add
sbb
cmp
push
fstp
xchg
or
dec
or
imul
lods
mov
xchg
push
jecxz
cdq
data16
push
push
out
sbb
adc
and
pop
pop
push
mov
cli
dec
jo
popa
ja
mov
inc
add
inc
sub
gs
inc
dec
mov
mov
push
sub
xor
push
lahf
adc
aam
adc
cmp
push
or
mov
repnz
es
push
lahf
fild
call
inc
movs
push
mov
mov
adc
retf
scas
xchg
push
xor
xor
cdq
add
cmc
push
mov
xor
pop
neg
or
icebp
lods
jb
jle
mov
sbb
push
mov
or
jecxz
or
add
cmp
out
xchg
(bad)
sub
aam
movs
pop
dec
jle
mov
jle
popa
ret
daa
sbb
ins
inc
outs
add
lods
jo
cmc
mov
sbb
mov
add
dec
repz
mov
or
gs
jp
rcr
inc
dec
bound
cdq
jmp
mov
jbe
and
inc
pop
fwait
leave
mov
fimul
jle
fs
or
xor
retf
sbb
or
mov
push
push
and
push
jmp
mov
push
pop
popa
add
cmp
mov
je
psubusw
jbe
xchg
out
sub
push
push
push
sub
lea
xor
mov
fisubr
fst
xchg
and
adc
xor
ja
or
or
mov
out
scas
into
dec
jmp
mov
je
push
cmp
int
aam
fadd
adc
loopne
fnstsw
enter
xor
je
dec
jae
xor
cmp
adc
jp
imul
out
cdq
xchg
aas
inc
jmp
xchg
sbb
add
add
push
repz
shl
jns
push
sub
sbb
pop
(bad)
push
cmp
jmp
cmp
loopne
clc
pop
and
jmp
adc
shl
test
add
rcl
and
dec
pushf
dec
(bad)
mov
adc
push
call
test
ja
sbb
sub
push
push
push
call
add
sub
imul
ins
mov
or
inc
adc
cmp
movs
test
in
sbb
ds
pop
aam
mov
or
fwait
mov
rcr
cwde
mov
pop
push
cmp
mov
xchg
inc
lods
idiv
push
add
jg
shl
popf
js
cmp
and
inc
arpl
push
lea
adc
stos
cmp
sub
loopne
add
mov
mov
out
add
in
call
sub
dec
mov
cmp
or
out
fsub
pop
push
(bad)
or
add
leave
pop
ss
sbb
or
hlt
push
mov
in
add
mov
pavgb
icebp
call
leave
stc
sub
dec
sbb
sbb
fnstenv
mov
cmp
push
push
lahf
fist
scas
xor
cmp
rcl
cmp
and
int3
bound
lahf
sbb
jg
sbb
add
sbb
and
ss
jo
sti
mov
cmp
sbb
jns
jmp
xchg
es
xor
outs
pop
popa
fsubr
and
cmp
or
jge
fld
mov
js
adc
jle
sbb
mov
or
jne
jmp
or
hlt
or
jge
sar
and
je
ss
aas
jle
jl
or
xor
es
popa
jl
jnp
scas
xor
jg
jne
jmp
mov
adc
pop
sub
int3
adc
jmp
pop
pop
jmp
mov
cld
repnz
inc
jmp
mov
jmp
loopne
inc
popa
cwde
add
pop
xor
mov
scas
or
add
add
adc
lods
test
mov
call
in
xor
add
leave
mov
xor
sahf
mov
pop
je
cmp
test
jg
xchg
sbb
call
or
add
mov
inc
es
and
neg
(bad)
in
adc
push
xor
or
sub
dec
rcr
pushf
jmp
aaa
fistp
jg
or
je
jg
xor
cmp
cwde
xchg
jne
jmp
xchg
pop
and
jbe
xchg
jne
jmp
pusha
jb
and
je
push
outs
jne
jmp
je
je
inc
jmp
sbb
cmp
(bad)
fmul
or
xor
jmp
or
sub
jmp
or
jmp
and
sbb
jmp
push
rcr
jmp
cmp
push
das
and
xchg
sar
sbb
les
das
es
and
aaa
data16
ret
aad
test
xor
adc
outs
cwde
mov
sbb
mov
inc
fdivr
jg
sar
cmp
sub
loopne
into
add
shr
lea
mov
jle
dec
aad
sub
ja
xor
outs
rcl
dec
js
adc
sbb
das
(bad)
adc
fimul
scas
sub
and
cs
pop
add
push
cmp
jg
or
fdivp
mov
add
and
sub
popa
sbb
sbb
pop
movs
int
int
or
je
outs
jne
inc
jg
stos
inc
jmp
mov
inc
lock
jne
daa
scas
ret
mov
scas
fmul
jmp
mov
mov
mul
xor
je
and
add
out
jno
lea
sbb
ror
push
sub
rol
jnp
jle
jne
inc
jmp
in
add
or
push
xor
es
pop
ins
mov
sti
add
mov
mov
mov
dec
xor
or
rol
jp
add
mov
retf
in
add
lock
and
push
lea
test
and
ss
jp
inc
jae
sub
push
push
sub
jnp
add
or
movs
les
out
jg
or
xor
in
imul
pop
jo
sub
pop
push
sub
loope
cmp
test
mov
test
das
add
add
pop
cmp
int
dec
adc
ds
cmp
rol
sbb
sub
shl
xchg
and
push
mov
or
cmp
je
pop
cmp
and
sti
xchg
xchg
and
pop
je
clc
sub
shr
sbb
je
sub
sub
jmp
cmp
je
clc
push
popa
or
jmp
rcr
xor
es
sbb
pop
jp
cmp
xor
jbe
adc
push
push
jp
idiv
mov
inc
push
popa
pop
mov
cmp
xchg
jle
jmp
inc
jmp
jmp
mov
xor
div
xacquire
mov
jge
add
push
loop
or
cs
leave
mov
gs
in
push
cmp
pop
push
repnz
cmp
clc
popf
xor
push
or
add
mov
pop
sbb
xchg
mov
cmp
pop
push
add
mov
pop
mov
inc
mov
test
cmp
enter
inc
adc
rol
and
retf
lea
jmp
outs
or
inc
cwde
call
pop
mov
jne
jg
cmp
jno
jbe
sbb
jne
out
(bad)
jmp
mov
sub
push
dec
add
jnp
mov
aaa
cmp
call
and
inc
inc
adc
punpcklbw
mov
ins
or
call
cmp
push
mov
xor
xor
pop
mov
pop
jmp
out
mov
inc
jge
push
inc
mov
das
div
adc
sub
inc
jmp
pop
xor
xchg
jmp
int3
inc
sub
sub
add
jle
add
fs
inc
mov
enter
movs
push
push
pusha
inc
mov
cs
cmp
pop
inc
add
sbb
dec
cmp
imul
xor
cmp
lea
wrmsr
ret
test
add
mov
outs
cli
adc
pop
sbb
add
nop
cld
cli
jmp
or
inc
aas
pusha
scas
mov
inc
in
mov
dec
push
call
or
xchg
or
and
jo
fsubr
xchg
retf
fs
imul
fwait
xchg
lea
push
push
dec
or
inc
add
cmp
xor
sbb
out
sar
jmp
call
and
cli
aas
sbb
dec
sbb
add
or
jp
inc
jle
jecxz
repz
(bad)
sti
popf
fmul
ret
jmp
call
mov
aaa
jb
call
sahf
pop
xchg
or
mov
fcomp
sub
jmp
popf
fwait
xchg
fld1
mov
jnp
arpl
or
pop
out
sbb
sar
loope
fmul
inc
test
inc
aas
add
mov
mov
jnp
inc
lods
jmp
dec
outs
add
(bad)
mov
xchg
sub
jne
xor
jne
mov
cmp
or
loope
jne
inc
push
dec
dec
cmp
jne
xchg
xlat
ds
add
pop
inc
imul
sbb
sbb
push
or
and
pop
retf
xchg
or
fldcw
cmps
retf
test
pushf
dec
nop
or
sub
add
push
lods
ret
icebp
inc
mov
adc
add
and
retf
data16
js
js
sbb
dec
ss
pshufw
(bad)
sbb
adc
sbb
dec
adc
push
leave
hlt
sbb
test
dec
dec
or
push
mov
mov
retf
adc
dec
mov
adc
and
mov
or
call
sub
and
rcl
mov
loop
lea
xlat
push
xlat
adc
cli
mov
xor
push
add
inc
xor
shl
sbb
lods
rol
les
xor
mov
daa
and
lock
push
imul
inc
adc
sub
and
aad
add
sti
test
ror
rol
mov
jo
into
adc
add
ins
add
xor
fwait
xor
dec
adc
adc
mov
stos
dec
int3
add
sahf
(bad)
not
mov
ror
add
or
add
xor
or
mov
sbb
adc
repz
and
movs
add
(bad)
imul
clc
cmp
aam
ss
mov
adc
pop
call
fadd
inc
jns
mov
lds
scas
add
loop
mov
ins
rcl
test
add
cmp
add
fsubr
ret
repz
imul
mov
pop
mov
rcl
fsubp
cmp
int
clc
inc
dec
mov
test
popa
push
xlat
adc
vphsubdq
or
mov
mov
arpl
popf
xchg
push
cmps
movs
xchg
popf
jle
shl
cmp
(bad)
sub
lock
test
pushf
imul
xchg
movs
cli
dec
outs
ins
data16
dec
pop
mov
cli
call
jle
cdq
mov
lock
arpl
cmp
adc
jne
ret
push
or
or
dec
xor
mov
ds
test
xchg
dec
rcr
jg
or
jne
inc
and
sbb
fcomi
dec
mov
data16
dec
xlat
(bad)
sbb
(bad)
push
pop
jne
mov
xchg
sbb
fld
dec
je
in
xchg
(bad)
push
in
add
and
mov
jbe
in
sub
imul
stos
sti
(bad)
jne
push
call
popa
push
ins
cwde
cmp
push
push
mov
push
dec
fwait
or
lock
and
or
and
imul
and
jmp
dec
mov
outs
jmp
(bad)
push
repz
call
mov
jno
sbb
jmp
sbb
popa
sbb
pop
pop
in
pushf
loopne
ins
(bad)
retf
jno
(bad)
jg
or
jmp
mov
xor
cmc
pop
imul
fdiv
sub
mov
xor
adc
das
fwait
loopne
inc
cmps
lods
lods
loop
inc
dec
aaa
in
xchg
(bad)
xchg
loope
add
adc
push
fistp
mov
jns
cmp
mov
jae
add
dec
mov
push
ret
xchg
sbb
std
mov
inc
sbb
pop
xchg
mov
adc
pop
mov
inc
call
test
movsx
cwde
inc
xchg
inc
les
mov
push
inc
and
repnz
(bad)
add
inc
mov
out
retf
dec
in
mov
dec
ret
std
xor
aas
enter
stc
scas
or
loop
jl
repnz
and
push
push
ss
(bad)
pusha
or
mov
lock
jmp
fadd
or
sahf
(bad)
pause
into
gs
adc
adc
push
imul
mov
push
or
push
jecxz
mov
(bad)
or
sub
pushf
mov
sti
xchg
jecxz
cs
pop
repz
xchg
push
or
or
xchg
ror
jmp
ror
stc
mov
cs
mov
mov
or
call
in
ret
pop
inc
not
add
xchg
pop
push
jns
add
cmp
ret
inc
fadd
jmp
adc
fcom
ja
xchg
call
sbb
pop
rcr
js
cli
and
loop
imul
jb
push
call
pop
mov
not
push
enter
adc
and
sbb
push
or
sbb
cwde
sub
mov
fst
ret
add
mov
das
pushf
mov
inc
retfw
add
cli
fild
fldenv
jne
sub
mov
outs
cmp
and
(bad)
imul
pusha
or
out
xlat
aaa
test
mul
into
push
sbb
test
mov
ja
nop
out
mov
push
hlt
lahf
cmp
or
dec
sub
xchg
xor
fiadd
add
sub
adc
or
ret
(bad)
mov
add
jmp
adc
xor
das
xor
xor
sub
rol
mov
cmps
repz
dec
adc
pop
add
inc
dec
test
mov
push
add
loope
sub
sbb
popa
cmc
or
pusha
stos
xchg
mov
mov
aaa
cmp
and
dec
das
push
adc
and
repnz
leave
jge
imul
ins
mov
dec
in
pop
push
xor
pop
ret
nop
and
and
mov
retf
sbb
data16
and
sub
ror
add
sub
dec
sbb
mov
retf
adc
gs
fstp
inc
dec
push
dec
and
ins
sub
sub
push
pusha
adc
add
inc
das
xchg
popa
push
jns
and
jo
jbe
sub
and
ret
or
or
inc
dec
adc
in
in
jnp
test
imul
popa
pop
mov
pop
js
fldenv
int3
xor
jo
and
jns
loopne
dec
popa
pop
xchg
pop
and
sub
push
shl
dec
jbe
xchg
test
rcl
nop
icebp
and
xchg
sbb
mov
pop
adc
xchg
pop
sub
and
push
cmp
xor
js
js
ss
outs
fisub
push
add
js
js
or
mov
nop
inc
and
xchg
cmp
dec
add
out
or
push
add
out
dec
inc
mov
ins
jne
add
je
loope
xor
popa
cs
ds
and
jp
jl
ins
aaa
and
ret
out
int3
in
loop
scas
jns
xor
sbb
xor
push
add
ret
(bad)
pop
mov
push
jbe
popa
cmp
fcmovne
out
push
ss
imul
sub
fxch
adc
adc
mov
xchg
cmp
dec
lods
ds
pop
bound
jae
ins
add
in
and
bound
rcr
lods
cmp
ds
push
add
cmp
pop
clc
pop
and
pop
pop
push
inc
jo
imul
and
aad
mov
scas
daa
dec
arpl
dec
daa
cwde
pop
stos
pop
add
leave
rcl
into
inc
imul
mov
data16
mov
dec
punpckhwd
arpl
xor
dec
add
js
bound
xor
sub
das
mov
pop
inc
adc
mov
xor
das
inc
mov
movs
ss
mov
rol
lods
mov
inc
pop
sbb
add
fs
mov
pusha
xchg
and
mov
cmp
xor
add
sbb
fs
mov
sub
bound
or
xor
or
not
pop
inc
sub
inc
ins
jecxz
sub
push
and
sub
cli
movs
cmps
add
idiv
sbb
(bad)
ror
inc
xor
or
idiv
sub
fidivr
xor
and
ins
rol
dec
es
inc
dec
fcmovnb
push
push
imul
inc
inc
inc
pop
loope
test
retf
and
ins
and
or
mov
sub
jb
cmp
std
enter
xor
inc
xor
add
dec
lahf
loopne
popa
mov
and
add
add
inc
dec
mov
popa
dec
or
push
inc
jae
scas
pop
fwait
mov
sbb
pop
outs
push
ret
inc
or
ret
sbb
in
and
inc
push
push
and
or
push
and
cmc
fbld
or
xor
cmp
int3
(bad)
outs
sbb
ins
in
loopne
enter
repz
rol
xchg
repnz
imul
lea
xchg
data16
aam
dec
and
cmps
and
mov
push
mov
jns
inc
je
rol
pop
inc
mov
leave
mov
(bad)
sar
and
(bad)
push
and
push
pop
inc
cld
jne
pop
gs
mov
add
mov
aas
shl
cwde
das
js
jb
popa
add
push
popa
and
push
jmp
xchg
xchg
or
inc
push
dec
call
out
cmp
shl
jae
data16
sti
in
push
mov
and
pop
out
aas
and
sub
sub
and
(bad)
(bad)
imul
inc
gs
les
and
loopne
inc
sbb
or
cmp
cmp
jg
inc
xchg
ss
out
adc
inc
aaa
sbb
mov
cmp
and
call
mov
enter
mov
jnp
mov
ins
aad
sub
and
xchg
pop
and
mov
ja
ja
add
das
add
test
inc
sbb
loopne
int
(bad)
gs
jge
adc
or
and
scas
sub
jmp
or
adc
ins
xor
pop
rcl
xor
pop
sbb
or
sub
pop
scas
pop
sub
sbb
xchg
pop
popa
and
sub
repz
int3
fisub
or
and
cmp
mov
add
stos
sub
sbb
pop
leave
mov
mov
ja
adc
out
int3
cmp
add
pop
outs
out
add
sbb
sbb
(bad)
sub
cmp
cmp
pop
retf
imul
adc
mov
les
cmp
movs
pusha
and
adc
and
into
or
pop
arpl
and
push
jl
cmp
push
jbe
lea
ins
loop
add
add
lock
test
test
add
mov
cmp
sub
add
ror
push
or
add
dec
lock
outs
into
retf
ret
push
inc
adc
mov
xor
dec
bound
mov
arpl
test
js
inc
xor
cmp
and
fstp
not
add
in
sbb
fs
sub
and
push
into
or
icebp
or
je
ja
sub
das
popa
add
lods
add
xor
mov
lock
adc
(bad)
imul
vsqrtps
or
cli
or
sub
into
pushw
ret
jp
push
imul
popf
mov
adc
arpl
push
iret
cmp
inc
add
popa
xor
adc
mov
xchg
xchg
adc
movs
sbb
ret
cmps
daa
cmp
inc
mov
fdivr
inc
jae
and
and
adc
sub
jno
daa
mov
add
shr
fs
js
data16
add
adc
cli
out
pop
adc
or
out
push
sbb
cmp
arpl
imul
bound
fs
add
sub
in
dec
loop
sahf
icebp
inc
cwde
daa
pop
or
push
fstp
pop
cwde
and
pop
shl
jne
inc
inc
sbb
dec
(bad)
and
sub
cld
jge
(bad)
and
sub
or
arpl
out
(bad)
movs
jne
add
fbld
loop
loope
neg
daa
sub
(bad)
dec
push
sub
fstp
cs
dec
push
pop
cs
add
sub
sahf
loop
pop
popa
push
test
xor
arpl
xor
xor
arpl
pop
xor
cmp
and
cmps
sbb
out
je
jae
push
adc
cdq
mov
pop
pop
sub
inc
xchg
add
xchg
pop
and
mov
stos
loope
inc
add
add
add
je
pusha
xor
daa
outs
popa
jno
in
adc
loopne
and
or
inc
add
sbb
mov
and
out
cmc
(bad)
gs
mov
rol
jle
(bad)
scas
outs
or
push
clc
adc
je
rcl
xchg
jns
pop
inc
les
ror
jecxz
dec
fiadd
dec
std
call
outs
mov
in
mov
and
bound
or
dec
ins
push
dec
dec
inc
inc
inc
cs
and
aad
dec
fnstenv
or
scas
popf
ror
fsubr
xor
fwait
sbb
inc
push
rcl
inc
arpl
lds
cli
mov
pop
jecxz
or
xor
aam
add
sbb
and
sub
and
scas
mov
sbb
and
xor
nop
xlat
shl
addr16
inc
inc
xchg
das
jae
xor
test
pop
outs
cwde
jo
mov
or
or
push
mov
push
jo
pop
or
pop
add
or
ins
cmc
rol
xchg
sub
inc
inc
sub
xor
cdq
or
cdq
lods
mov
pop
pop
jae
daa
mov
(bad)
(bad)
adc
sub
mov
add
(bad)
dec
adc
jo
push
add
ins
jns
xchg
mov
jb
test
push
add
clc
mov
jo
dec
jo
and
dec
imul
fcomp
ins
and
(bad)
call
das
push
fdiv
xor
or
push
fwait
loope
adc
ins
ret
gs
scas
retf
inc
mov
mov
ins
imul
loopne
cmc
mov
ja
mov
jp
popa
pusha
bound
and
sub
ins
pop
or
add
adc
xor
sub
sbb
pop
out
dec
xchg
icebp
or
push
jae
gs
xchg
(bad)
sub
push
into
jae
ret
adc
push
add
sub
sub
arpl
sbb
bound
xchg
ins
jo
pop
mov
dec
mov
sbb
sub
cs
jmp
mov
outs
sbb
jo
ds
scas
imul
and
add
fidivr
call
mov
ret
xor
inc
pop
repnz
push
dec
push
dec
dec
push
push
and
jnp
scas
or
or
push
out
push
or
cmp
lods
xor
sbb
sbb
push
add
push
sub
aas
in
loopne
ror
jne
ins
push
pop
dec
pop
outs
lahf
push
cmp
xor
or
shl
clc
jg
sbb
imul
lock
pop
sbb
cld
inc
setae
xchg
outs
xchg
sti
add
pop
inc
jae
dec
mov
fstp
cmp
test
mov
mov
mov
sar
ret
cmp
dec
pop
sub
and
mov
adc
sar
sub
or
cmc
jns
(bad)
sbb
lea
xchg
inc
jmp
add
xchg
ror
stos
sbb
mov
loopne
dec
scas
ret
fs
add
adc
(bad)
cmp
jae
pushf
xor
sub
les
std
and
fcomp
mov
xor
inc
cmp
shl
and
add
les
cmp
cmp
out
jle
clc
and
ins
mov
adc
adc
mov
add
movs
mov
fsubr
pop
ja
add
cmp
lea
push
int3
sub
and
loop
xor
ja
jae
push
and
mov
sub
ja
push
lea
mov
sub
adc
jo
ret
clts
inc
inc
(bad)
rcl
cdq
jo
mov
movs
adc
callw
leave
mov
es
sub
fsubr
mov
mov
jge
add
popf
fwait
loope
clc
push
sti
and
(bad)
jmp
inc
inc
pop
cmp
push
stos
inc
cmp
pop
adc
outs
add
push
ror
jecxz
jle
test
mov
push
iret
mov
loop
mov
inc
dec
push
add
xor
adc
dec
sub
adc
call
mov
jge
inc
fisub
das
pop
fistp
mov
data16
clc
push
ds
sub
dec
scas
ror
fcom
imul
retf
jl
iret
sub
push
pushf
jo
repz
js
mov
jne
pop
jbe
pop
lods
cmps
addr16
adc
sbb
ss
sub
clc
pop
mov
dec
add
inc
pop
and
or
or
pop
and
inc
and
or
adc
(bad)
ror
shr
xor
sub
pop
jne
lea
inc
fs
add
retf
adc
(bad)
push
mov
adc
int
pop
sbb
sbb
jecxz
add
sub
ficomp
xchg
mov
and
or
lods
jl
(bad)
and
dec
and
xchg
mov
pop
xchg
or
dec
das
dec
and
mov
pop
lods
(bad)
fwait
loope
and
and
push
and
js
or
lea
in
cmp
and
cli
arpl
loope
and
xor
pop
and
arpl
pop
test
xlat
jnp
dec
lea
sub
add
add
js
xor
(bad)
push
aad
les
fdiv
add
cmp
inc
mov
or
je
inc
lock
popf
cs
in
add
cmp
sub
ja
add
sub
cmp
sub
inc
jp
push
jae
das
or
pop
xor
pop
je
or
mov
int
daa
jne
jae
or
stos
sar
cmp
xor
inc
sub
adc
push
imul
push
or
push
lods
imul
xor
das
js
js
mov
inc
add
push
add
arpl
cmps
mov
mov
cli
mov
retf
push
mov
cmp
popa
push
mov
add
aaa
and
pop
loopne
pop
outs
mov
cmps
pop
xlat
mov
mov
sub
pop
add
xchg
js
pop
movs
add
pop
push
in
aam
rol
jmp
sbb
adc
or
movs
adc
adc
adc
cmp
mov
or
adc
movs
mov
dec
xor
or
cmp
adc
add
xchg
rcl
std
mov
sbb
adc
push
(bad)
mov
outs
jo
xor
cmps
imul
push
neg
xor
cld
jle
push
mov
fisub
inc
push
dec
dec
dec
inc
cmp
inc
bound
jecxz
das
mov
cld
ror
jbe
sbb
jo
mov
cmp
inc
test
or
pop
sub
lock
je
adc
dec
fild
add
(bad)
pop
arpl
bound
add
push
adc
sbb
ins
or
pushf
add
pop
std
shr
push
inc
inc
inc
inc
ret
ret
leave
xor
or
dec
fcom
ins
loopne
jo
dec
loop
jle
ss
rcr
ret
inc
or
mov
mov
adc
and
or
push
jb
scas
xor
pop
outs
xchg
movs
mov
cs
daa
dec
push
das
or
ret
cmp
movs
dec
push
pop
pushf
jne
jp
out
jge
jne
pop
xchg
pop
push
fwait
push
pop
fs
adc
add
mov
cmp
test
mov
mov
lahf
dec
mov
popaw
ins
jbe
mov
or
(bad)
lods
sbb
pusha
les
and
and
or
mov
and
pop
shl
and
add
sbb
add
cmps
jmp
jne
lahf
popa
push
or
lods
cmp
imul
aas
jp
mov
dec
rcr
adc
inc
xchg
cmp
or
mov
ins
cmp
adc
loope
adc
lds
dec
out
push
shl
pop
push
imul
dec
mov
mov
out
dec
and
xor
xor
sbb
dec
push
xchg
jle
inc
inc
inc
pop
xor
fs
or
add
rcr
adc
jne
xchg
add
mov
xchg
adc
and
test
fadd
inc
fwait
adc
xchg
xor
or
cmp
or
rcl
mov
jg
lods
mov
ins
dec
addr16
mov
and
std
(bad)
cmp
mov
xor
fist
dec
and
dec
push
lds
pop
jno
movs
xchg
addr16
shl
das
les
(bad)
mov
ins
daa
pop
in
jae
add
popf
loop
mov
push
push
push
mov
popa
jmp
or
jns
js
sub
adc
sub
jecxz
jecxz
pop
push
sub
mov
ror
cld
and
push
pop
push
popa
clc
dec
inc
sbb
push
sub
shr
xor
pop
fs
es
mov
mov
popa
ja
cmp
lea
sbb
jo
not
mov
mov
iret
sub
jo
jecxz
rol
xor
xor
jno
and
(bad)
out
mov
dec
add
and
mov
(bad)
push
adc
imul
es
sti
add
inc
dec
dec
push
push
pop
int3
jl
inc
ss
push
je
jae
xor
push
imul
sar
dec
test
in
mov
sub
and
ja
rol
xor
lea
inc
out
push
xchg
sub
or
cmc
adc
xchg
dec
loope
pop
or
push
mov
fisttp
push
push
jmp
es
(bad)
std
das
sti
add
sub
inc
das
inc
inc
and
mov
fisttp
arpl
and
push
test
cmp
mov
das
je
cdq
pop
and
xor
inc
inc
sbb
clc
ret
mov
xchg
or
adc
inc
push
push
pop
js
and
sub
inc
xchg
gs
ins
test
lods
adc
mov
loopne
ins
adc
mov
iret
dec
gs
ficom
sbb
movs
das
loop
or
frstor
and
push
les
aaa
inc
js
repz
sbb
inc
push
ja
mov
pop
pusha
int
lea
addr16
adc
retf
mov
fistp
jle
psrad
inc
adc
std
pop
dec
push
dec
mul
stc
daa
adc
pop
pop
gs
lea
sbb
pop
sahf
sbb
in
fwait
pop
ret
adc
pop
scas
sub
ins
adc
xor
mov
loope
sti
mov
push
cmp
fwait
mov
ret
jne
lea
mov
dec
xchg
sbb
mov
mov
cmp
push
sahf
adc
push
xchg
fldenv
cmp
or
daa
cmc
(bad)
xchg
inc
mov
repnz
jo
das
mov
xchg
movs
adc
xchg
(bad)
push
aaa
dec
push
ins
gs
inc
push
pop
popa
sbb
in
rol
stc
iret
dec
xchg
mov
adc
push
ret
sub
pusha
and
ja
cwde
test
jb
enter
add
or
or
scas
rcr
cld
and
dec
inc
add
imul
cs
inc
xlat
retf
data16
mov
jg
loope
daa
adc
test
pop
sbb
and
leave
and
arpl
push
fwait
sbb
imul
cdq
daa
mov
lods
imul
pop
mov
cs
jbe
or
(bad)
jp
xchg
mov
mov
ja
xchg
imul
jle
mov
mov
jne
jp
xchg
push
ins
mov
pop
test
cs
shl
add
xchg
push
hlt
push
in
xchg
cmp
xor
push
std
loope
or
rcr
mov
jnp
cmp
xor
xchg
mov
push
stos
(bad)
aad
xchg
jnp
mov
mov
pop
pop
mov
(bad)
mov
ror
test
push
stos
push
retf
mov
mov
mov
jo
dec
cwde
retf
loopne
or
inc
popa
mov
sbb
add
mov
(bad)
mov
mov
js
shr
ret
or
bound
pop
in
inc
push
jmp
fs
jp
adc
ret
sar
mov
fmul
aad
mov
xchg
lods
mov
popa
mov
dec
xchg
or
mov
mov
outs
adc
ds
adc
push
jo
sbb
adc
pop
stos
mov
aad
fcmovb
psraw
jns
popa
lsl
pop
out
mov
adc
xchg
xor
retf
add
shl
dec
movs
dec
sub
ins
and
add
inc
push
xlat
outs
mov
push
out
inc
pop
dec
dec
dec
out
dec
sbb
push
mov
inc
push
dec
push
pop
or
sbb
pop
and
shr
jb
mov
cmp
fisubr
sub
test
clc
sub
pusha
adc
xchg
es
jbe
jg
sub
xchg
ret
push
movs
pop
scas
xor
push
push
sbb
rcr
mov
push
test
lock
rcl
sub
or
ret
sub
test
jle
push
(bad)
imul
sub
pop
sub
or
sbb
sub
bound
outs
cmp
push
scas
or
or
push
sbb
push
dec
rol
jecxz
or
sub
adc
mov
(bad)
mov
ja
sub
cdq
sbb
lock
cmc
jns
mov
inc
sti
mul
and
push
outs
sub
mov
mov
push
outs
dec
add
sub
add
arpl
sub
test
sbb
ret
and
sbb
pop
sub
add
and
pop
adc
mov
or
jp
push
push
dec
bound
or
js
dec
pop
shl
jo
shr
aaa
mov
xchg
cli
inc
pop
fild
imul
fwait
mov
pusha
aad
int
or
out
cmp
ja
dec
or
adc
or
sahf
in
xor
lods
inc
pushf
cmp
jo
xchg
cs
mov
xchg
retf
sub
in
js
test
jbe
push
push
fistp
pop
pop
popa
rcl
lods
popa
dec
(bad)
les
imul
mov
pop
and
xor
stos
adc
adc
outs
icebp
dec
fwait
push
movs
or
pusha
loopne
add
push
movs
rcl
push
jo
mov
xor
test
or
cmps
outs
or
mov
sbb
prefetch
or
sahf
xor
lea
sub
sbb
sub
neg
or
pop
jo
fsub
aam
ins
jne
inc
push
and
mul
fwait
cmp
shl
pop
inc
fsubr
or
pusha
and
rcl
add
inc
cdq
leave
ret
aaa
popa
push
push
imul
cmp
vunpckhpd
add
(bad)
popa
adc
cmp
or
sbb
sub
popa
pop
(bad)
sbb
mov
pop
pop
jmp
dec
inc
sub
out
pop
push
icebp
stos
jo
mov
data16
shr
jmp
inc
sbb
pop
outs
sub
ror
push
test
ret
pusha
ins
cvtdq2ps
and
call
cmp
jmp
mov
int
mov
sub
pusha
aam
mov
mov
ins
sub
pop
mov
and
cmc
dec
jl
lods
fnsave
xor
xor
and
mov
fcmove
sbb
mov
sub
mov
pusha
adc
sbb
xlat
inc
xchg
test
push
movs
inc
cmp
in
pop
shl
dec
push
movs
sbb
les
jae
adc
pop
sar
loopne
fild
ja
xchg
movs
rol
xchg
fstp
in
jae
xor
pop
or
add
add
(bad)
sub
jle
jnp
pop
jg
scas
or
loop
test
and
(bad)
(bad)
rcr
jmp
iret
jl
push
nop
push
mov
imul
push
inc
sbb
sbb
(bad)
jecxz
cmp
(bad)
retf
adc
or
icebp
and
movs
xchg
sbb
ins
pop
scas
dec
mov
and
jae
movs
or
xor
inc
in
xchg
inc
(bad)
push
xchg
mov
in
gs
in
daa
jecxz
inc
and
and
dec
(bad)
jnp
or
js
movups
and
and
sbb
pusha
and
fadd
jb
xor
and
cmp
imul
les
or
shl
push
xor
gs
sub
loope
outs
fcmovb
aad
aad
jl
mov
enter
lock
sbb
les
ins
xchg
cli
push
sub
movs
bound
(bad)
or
iret
std
pop
jno
and
push
xor
jmp
sbb
sbb
subps
add
sub
loopne
mov
inc
push
push
pop
and
xor
repnz
rcl
pusha
mov
pop
dec
mov
sbb
push
es
mov
and
dec
xchg
add
push
inc
dec
push
fild
inc
and
fisttp
push
dec
pop
inc
xchg
pop
sar
add
lods
lea
cmp
mov
outs
loop
jne
dec
push
pop
adc
test
pusha
pop
cmovbe
adc
mov
int
pop
das
popa
mov
add
pop
sub
into
pop
jecxz
pop
movs
sbb
out
rol
push
sbb
inc
xor
push
dec
in
inc
or
cwde
frstor
rol
adc
shr
(bad)
jmp
sbb
call
jmp
xor
or
retf
jns
sbb
retf
cmps
cmp
cvtps2pi
sub
or
mov
inc
pop
lds
ins
and
push
(bad)
addr16
bound
in
mov
add
adc
movs
out
mov
jg
mov
and
push
fisubr
jg
inc
or
jge
stc
lock
lds
sbb
(bad)
shl
popf
inc
inc
dec
popa
mov
mov
or
and
das
cmps
mov
imul
clc
xchg
dec
inc
xor
adc
pushw
sub
jecxz
hlt
pusha
and
push
push
shr
stc
push
xchg
push
das
dec
pop
das
cli
fs
das
movs
and
add
pop
shr
cs
cmp
add
or
adc
imul
jne
mov
xor
cmp
push
cmp
fnstcw
xchg
and
shr
jmp
cmp
jecxz
sub
jb
push
sbb
jnp
iret
add
sbb
sbb
gs
rcr
cmps
mov
mov
cmps
xor
xchg
aas
xchg
outs
and
xor
add
lea
dec
je
ret
mov
dec
or
mov
arpl
ret
ja
aaa
inc
jo
push
cdq
sub
adc
popa
adc
jno
inc
push
inc
mov
adc
mov
shr
or
cmp
sti
and
pop
test
(bad)
xchg
jnp
sub
xchg
sub
adc
jmp
jnp
imul
sbb
cs
sbb
je
xchg
adc
mov
int
dec
and
sub
sub
inc
int
loop
stos
xchg
test
inc
arpl
addr16
loopne
lds
leave
stos
push
lock
adc
lods
mov
mov
pop
imul
dec
inc
dec
ins
add
sbb
ins
dec
es
ja
inc
xor
rol
or
jnp
inc
loope
adc
ret
sbb
push
jns
or
cli
and
pop
test
adc
sub
test
sbb
mov
and
push
xchg
stc
stos
jno
fcomi
jae
in
arpl
push
fistp
fist
pop
movs
(bad)
mov
push
outs
sbb
imul
ins
push
mov
cmp
mov
push
daa
sub
and
or
inc
pop
dec
mov
fld
loop
clc
xchg
pop
pop
or
pop
mov
mov
daa
add
add
push
(bad)
sbb
cdq
fcmovnbe
or
int
pusha
les
cmps
xchg
jae
xor
fild
inc
adc
add
mov
std
shr
in
test
add
pop
jmp
or
test
add
rcr
stos
test
cwde
sub
xor
mov
pop
mov
lea
clc
daa
out
arpl
rol
ficom
adc
and
test
push
cwde
fisttp
jns
mov
retf
push
push
push
inc
sbb
shr
add
imul
add
cmp
push
test
xchg
inc
aad
cmp
sub
je
mov
jae
mov
push
mov
xor
or
mov
sub
lods
mov
test
gs
xor
pop
inc
push
or
add
gs
jno
push
je
bound
ret
lods
test
pop
mov
cmp
push
or
mov
mov
inc
sbb
xchg
fstp
leave
jae
add
mov
and
and
int
(bad)
jo
sub
sub
sti
mov
adc
inc
add
sbb
ins
fsub
sub
dec
sbb
pop
push
loope
js
jp
add
cmp
rol
mov
inc
inc
adc
and
sbb
fmul
inc
xor
int3
mov
push
movs
outs
or
sub
daa
xchg
ret
dec
jne
pop
pop
mov
clc
add
or
pusha
xor
ret
xchg
test
(bad)
or
push
aad
dec
inc
inc
dec
fcomp
sub
push
bswap
and
arpl
push
mov
push
mov
retf
jns
out
cmp
jno
ins
jmp
cmp
push
xchg
arpl
stos
adc
fs
sbb
shl
mov
sbb
or
sub
jno
jae
cdq
mov
loope
(bad)
sbb
arpl
fwait
push
fmul
mov
sbb
push
test
and
pop
inc
cmps
lock
test
jno
enter
or
lea
or
inc
(bad)
popf
popa
jl
sbb
out
ss
or
fcmovb
cmps
mov
jmp
push
and
jne
sbb
aad
mov
cmp
jno
dec
stos
adc
sbb
clc
pop
pop
movs
adc
test
ror
imul
daa
xor
add
and
int3
mov
adc
adc
push
shl
aam
sbb
push
and
or
data16
mov
pop
lds
sbb
in
pop
ret
fist
adc
pusha
xor
(bad)
mov
repnz
fcomp
fiadd
mov
popf
sti
(bad)
adc
pusha
push
dec
dec
mov
scas
ins
ret
pop
add
ins
or
(bad)
jecxz
test
mov
dec
push
cld
imul
xor
jae
fadd
add
sbb
mov
push
pop
adc
inc
sbb
dec
push
mov
loopne
xchg
call
inc
xchg
push
or
in
pop
sbb
xchg
out
push
push
test
mov
xchg
lahf
ret
cli
and
mov
pop
xchg
lock
mov
ror
scas
ficomp
sbb
inc
stc
arpl
mov
mov
pop
inc
sub
pusha
inc
inc
mov
fisubr
popa
or
test
push
dec
push
sbb
push
push
inc
inc
jne
add
movs
retf
dec
dec
pop
imul
sbb
popa
cld
push
(bad)
rcr
push
dec
push
sbb
cmp
xor
lods
jp
sti
in
bound
addr16
sti
dec
or
imul
movs
je
cmp
sub
xor
add
sbb
pop
paddusb
sbb
mov
iret
pop
inc
push
inc
sub
push
jg
call
push
or
dec
mov
inc
lods
shl
test
daa
stos
pusha
mov
jge
xor
hlt
xchg
push
jmp
adc
cmp
mov
add
fwait
retf
xor
cmp
inc
dec
imul
clc
call
cmp
xor
popa
sbb
(bad)
je
or
inc
shr
adc
ja
adc
test
cld
xor
push
out
popa
jae
push
jne
jo
sub
jb
cmp
add
mov
cmp
adc
jno
shr
ds
inc
xor
dec
pop
fs
push
push
push
dec
test
cmp
pop
adc
sbb
pop
adc
(bad)
sub
sub
inc
arpl
add
xor
push
pop
push
mov
sbb
lods
mov
cmp
pop
xor
inc
mov
adc
je
call
mov
arpl
adc
outs
add
xchg
sbb
in
imul
and
xor
idiv
sbb
jo
ins
and
mov
xchg
adc
add
mov
or
or
pop
imul
mov
dec
pop
push
pop
cdq
or
lahf
inc
dec
aam
test
push
pop
xor
test
pop
gs
dec
push
sbb
(bad)
sti
les
xchg
push
movs
stc
lahf
cmp
cmp
aad
jbe
inc
imul
jmp
and
sub
jp
pop
fwait
push
xor
sbb
nop
or
ins
adc
test
nop
sti
test
fild
imul
sbb
movs
pop
mov
mov
mov
mov
pop
repz
sbb
and
cmc
je
test
sar
cdq
xor
jbe
outs
mul
or
mov
push
pop
cmp
pusha
and
and
retf
sub
mov
sub
jnp
cdq
lahf
ret
and
push
jmp
in
jno
rcl
punpcklbw
or
or
add
ss
add
cdq
sbb
lds
or
sub
or
inc
movs
jno
lea
repnz
sti
ins
mov
inc
retf
std
stos
fidivr
cmp
xor
and
cmp
jge
pop
rol
adc
lea
dec
xor
add
hlt
adc
scas
or
xor
push
push
les
pop
inc
or
arpl
or
cli
add
out
fcomp
aam
loope
sub
or
adc
adc
lods
and
or
or
sbb
das
xchg
lods
jmp
fsubr
inc
jo
push
pop
xlat
bound
and
shr
dec
ffreep
push
pop
mov
scas
les
pop
jae
xor
push
cmp
(bad)
push
mov
adc
mov
adc
(bad)
in
pop
adc
je
xor
movs
lahf
dec
add
mov
push
sub
mov
xor
mov
fsubr
lods
(bad)
addr16
inc
push
dec
add
pop
sbb
pop
sbb
repz
jg
movs
add
jp
in
mov
xor
xchg
lock
jl
and
in
es
adc
sub
or
jecxz
push
jo
xor
mov
dec
dec
arpl
and
test
leave
shr
push
push
inc
stc
daa
mov
movs
daa
push
add
mov
push
outs
retf
and
mov
(bad)
stos
xor
xor
pop
mov
mov
mov
int3
xor
cmp
jns
ds
rcr
and
pop
sub
jg
lds
inc
mov
cmp
jae
or
and
push
ins
daa
lock
or
daa
xchg
mov
mov
daa
ds
aam
jl
les
mov
sbb
cmp
jo
mov
adc
jno
sub
rol
or
jg
adc
out
push
pusha
imul
clc
pop
imul
jno
mov
mov
add
sbb
adc
sub
ss
pop
ss
dec
jge
call
jno
sbb
pop
cmp
inc
add
jae
hlt
xor
popa
lock
and
sbb
fsubr
and
pop
inc
fmul
push
push
paddsw
fadd
push
sbb
mov
das
jb
xchg
jmp
xchg
xchg
push
out
xchg
xchg
nop
pop
test
and
imul
not
stc
std
xor
jmp
and
pop
push
cs
xor
add
ins
rol
pop
or
loop
outs
mov
push
jnp
adc
mov
cmc
mov
jb
outs
addr16
stos
hlt
int
rol
xor
pop
sbb
cld
das
rol
pusha
popa
and
daa
pop
inc
popa
mov
jp
jns
test
fdivp
add
sub
inc
dec
add
cmp
mov
add
iret
ror
jne
cmp
push
aas
iret
repz
pusha
add
xchg
movs
mov
push
add
xchg
adc
dec
out
dec
pop
push
mov
cmp
in
leave
shl
dec
sar
(bad)
mov
cmp
mov
add
sub
cmp
repz
mov
jns
mov
mov
rol
out
sahf
out
loope
cmc
cli
iret
repz
or
cmp
repz
dec
pop
data16
cmp
repz
int
pop
sbb
add
mov
push
xor
push
dec
fild
test
mov
test
mov
mov
jle
aas
xor
add
lock
xor
add
mov
jl
retf
cmp
sahf
stc
ss
pop
jbe
inc
aaa
or
stc
fstp
jns
cmp
or
cld
mov
cmp
or
sbb
inc
iret
aas
dec
repz
or
add
adc
cmp
push
add
mov
sahf
pop
pop
mov
into
mov
mov
and
push
adc
adc
loopne
inc
cmps
xchg
add
gs
adc
les
inc
jae
jl
push
adc
mov
push
adc
push
jle
lds
mov
out
push
sub
push
cmps
xor
imul
ds
outs
dec
sbb
cmps
push
(bad)
jo
sbb
ret
test
sbb
push
push
push
pop
jge
fwait
mov
stos
sbb
pop
outs
pop
popa
inc
pop
adc
ds
add
adc
outs
inc
push
add
icebp
ds
mov
es
imul
jle
inc
and
mov
inc
and
out
lahf
sar
lods
mov
add
dec
repz
jne
dec
and
fs
imul
out
push
sti
cmp
ins
dec
es
cmp
daa
mov
push
add
and
add
jle
add
aaa
sub
movs
push
scas
neg
add
add
ret
mov
jp
sub
or
int
lahf
loopne
pop
sub
push
arpl
add
out
imul
add
iret
call
ds
add
dec
xor
ins
dec
lahf
out
out
add
add
leave
cs
lahf
out
add
add
popf
cmp
sub
push
aaa
and
add
dec
stc
nop
(bad)
jge
add
pop
cmp
out
add
psubw
ds
aas
add
inc
add
inc
add
cld
nop
psubw
sti
inc
add
inc
add
mov
(bad)
into
(bad)
jg
push
add
add
cmp
repz
pushf
cmps
pop
repz
repz
push
jg
test
mov
xchg
cs
aad
fwait
cli
ja
dec
push
dec
push
inc
sub
dec
test
inc
push
pushf
or
add
pop
ret
and
data16
dec
lahf
mov
(bad)
(bad)
(bad)
(bad)
cmp
and
scas
(bad)
stc
rol
jb
int
pop
das
xchg
(bad)
ror
cmc
push
mov
mov
std
(bad)
(bad)
cmp
add
dec
(bad)
ret
inc
ja
jo
repz
shl
fsubr
dec
leave
adc
fadd
sub
loope
(bad)
(bad)
mov
ja
mov
sub
vpsubsw
ret
leave
aaa
cdq
pop
inc
xchg
jo
shl
pop
or
clc
sub
dec
xchg
into
retf
retf
mov
or
inc
cmp
add
and
call
inc
jnp
mov
sub
cmp
outs
das
cmc
mov
(bad)
(bad)
(bad)
inc
test
xlat
fdivrp
test
stos
fadd
ja
test
push
push
nop
(bad)
fst
mov
loopne
adc
test
adc
inc
mov
out
mov
scas
xor
xor
stc
pop
loopne
(bad)
(bad)
(bad)
(bad)
cmp
pop
nop
sbb
popa
out
mov
imul
movs
mov
mov
into
sub
xor
add
inc
loopne
(bad)
call
out
js
gs
cdq
and
jp
pop
push
add
inc
js
sbb
push
sub
or
rcl
dec
and
fs
(bad)
mov
outs
mov
xor
xor
stos
std
dec
pop
aaa
sub
xor
dec
test
loop
fs
and
or
sbb
mov
daa
sub
sbb
sbb
sub
xchg
sahf
jg
repnz
ss
sbb
popa
push
nop
psrlq
fdiv
test
sbb
fwait
dec
jno
cmps
pop
pop
or
or
mov
in
sub
adc
push
push
pop
mov
js
mov
add
test
xchg
push
inc
inc
cs
lea
cmp
sbb
dec
mov
(bad)
jmp
fsubr
xor
jb
cmps
jne
add
fcomp
lea
and
add
jle
and
and
aam
je
inc
pushf
mov
add
or
mov
out
mov
sub
adc
xor
dec
fs
xchg
adc
(bad)
mov
sbb
and
lods
xchg
inc
dec
push
xor
inc
add
xchg
mov
adc
pop
dec
jae
jne
xlat
or
add
pop
pop
repnz
inc
and
mov
clc
sti
sub
push
lods
adc
jecxz
mov
mov
and
out
push
sub
mov
pop
fmul
sub
or
jmp
popa
jns
mov
inc
adc
adc
add
sub
cmp
adc
sub
loope
push
fwait
push
pusha
arpl
adc
mov
dec
cdq
pop
push
ret
ja
mov
movs
or
imul
mov
ins
ins
pop
jae
jns
lods
adc
add
fistp
das
popf
sbb
imul
dec
inc
jo
inc
xor
add
xchg
mov
fiadd
cdq
xor
fbld
push
cs
pop
mov
xor
push
(bad)
pop
or
pop
add
jne
pop
aad
jp
in
push
dec
loop
mov
xchg
cmp
push
rol
retf
pop
adc
cmps
scas
add
push
mov
outs
sub
xor
call
dec
inc
cmp
xchg
mov
rcl
jl
push
test
pop
mov
dec
cdq
ret
ret
pop
hlt
add
push
imul
adc
jmp
cmp
mov
dec
sahf
fld
mov
ins
inc
movs
and
xchg
mov
add
add
dec
inc
(bad)
pop
shr
xor
and
or
add
test
in
mov
add
ror
icebp
sub
sub
push
dec
pop
aad
xor
rol
xchg
add
mov
js
ja
ins
jne
jmp
lds
cmp
push
dec
(bad)
xchg
out
xor
cdq
pop
cmp
push
mov
mov
bound
arpl
sbb
sbb
xor
xor
js
mov
imul
jmp
inc
out
add
(bad)
mov
or
dec
mov
push
jl
sbb
pop
and
test
je
sbb
pop
or
enter
cwde
fs
mov
cmp
pop
ret
(bad)
lds
(bad)
push
pusha
cmp
dec
jbe
sbb
inc
(bad)
mov
or
inc
mov
mov
xor
gs
adc
mov
add
int
mov
or
or
lds
loopne
sbb
add
push
or
outs
mov
dec
pusha
cmps
xor
test
and
sub
add
fld
pop
mov
and
aad
mov
lds
xor
lods
or
jns
add
fsub
ss
jp
jns
mov
pop
pop
lods
(bad)
jbe
jnp
and
aaa
hlt
sbb
ins
fdivp
sub
mov
mov
dec
xchg
loopne
sbb
mov
cmps
(bad)
inc
(bad)
pusha
dec
stc
xor
xor
mov
cmp
sub
cmp
and
xor
ins
mov
add
fbld
dec
les
sbb
jnp
or
dec
fnsave
fld
sub
ret
xor
push
push
xor
pop
sub
mov
pop
inc
(bad)
div
js
inc
add
or
sbb
inc
rcr
jge
addr16
mov
mov
imul
add
jbe
scas
ins
adc
add
sbb
or
lock
jns
xor
xor
(bad)
cld
inc
adc
push
pop
pop
dec
push
xor
sbb
mov
fcmovnbe
inc
cmp
xlat
or
mov
daa
outs
arpl
adc
and
(bad)
lods
shl
inc
pop
lods
xchg
pop
sbb
or
pop
add
aad
aam
in
add
or
mov
(bad)
jne
jo
movs
inc
or
fcom
popa
jae
add
push
ins
add
sub
imul
ret
sbb
mov
fcmovnb
cmp
dec
push
cmp
test
scas
adc
test
outs
pop
adc
outs
es
sbb
ins
inc
or
push
dec
pop
cld
outs
pop
xchg
test
rol
ss
mov
cmp
add
in
push
sbb
dec
popf
jns
jl
jecxz
mov
dec
xor
sbb
add
xchg
xor
sti
icebp
ss
arpl
jl
add
xchg
add
adc
sub
es
push
mov
(bad)
inc
mov
mov
add
imul
jg
xor
xchg
mov
and
sbb
sub
adc
and
shr
mov
cmp
(bad)
mov
pusha
jno
mov
pop
retf
(bad)
lahf
cmp
data16
rol
add
add
adc
sbb
and
cmc
push
and
xor
add
push
ror
push
jl
add
xchg
fsub
arpl
dec
jae
jb
jae
xor
dec
es
xor
movs
loope
daa
cmove
mov
clc
add
(bad)
leave
mov
adc
xchg
data16
or
mov
add
add
add
shr
and
pop
pop
ds
mov
jg
add
inc
inc
dec
call
(bad)
aas
(bad)
jg
mov
xchg
repz
add
inc
push
adc
int
loope
mov
pop
push
or
adc
sbb
mov
xor
jle
adc
inc
push
mov
inc
add
(bad)
pusha
or
rcl
lds
add
add
fild
loope
ret
mov
jecxz
pop
aam
or
pop
out
xor
push
dec
sub
pusha
ins
pushf
push
dec
pop
and
sub
mov
or
or
jo
nop
das
sbb
push
sub
jmp
fst
and
and
ja
adc
xchg
shl
(bad)
mov
sub
stos
ins
xchg
push
jnp
and
dec
and
sbb
mov
jmp
sbb
fst
adc
mov
(bad)
imul
inc
adc
or
and
repz
test
int3
test
cmp
xor
push
(bad)
xchg
jmp
les
xchg
ror
push
cmp
outs
and
pop
cmp
mov
sbb
inc
push
and
ror
push
dec
outs
jmp
test
add
push
xchg
repz
adc
sub
enter
sbb
mov
and
loop
pop
inc
fs
mov
and
jo
clc
mov
stos
or
sub
rol
cdq
and
add
stos
fld
or
lahf
mov
xchg
shr
adc
mov
pop
shl
and
xor
jge
outs
xor
jne
jne
das
mov
ins
pop
ficom
(bad)
gs
cmp
shr
sub
arpl
mov
jmp
daa
bound
in
(bad)
jg
(bad)
push
pop
mov
cmps
sub
test
xchg
or
fs
das
js
mov
daa
dec
ja
mov
mov
stc
lea
cs
push
or
pop
je
jne
add
in
xor
loopne
mov
or
fiadd
inc
and
fist
ret
or
mov
aad
shr
add
pop
stos
not
add
dec
lahf
jno
sbb
popf
in
jnp
test
or
pop
mov
test
(bad)
daa
pushf
daa
repnz
jecxz
rcl
xor
inc
ret
add
push
in
pop
in
mov
push
mov
or
adc
adc
ss
xor
ins
inc
rcr
lods
aaa
jno
shl
mov
das
stos
adc
shr
mov
ins
xor
mov
pop
xor
leave
push
shl
xor
mov
ins
sbb
jno
pop
push
jmp
push
sbb
ret
ret
jle
pop
xor
mul
stc
xchg
cmps
es
iret
push
test
in
mov
pop
fdivr
out
pop
pop
popf
dec
mov
pop
ds
jne
jbe
das
jo
push
pop
cs
mov
add
jge
cmps
pop
mov
pop
push
sahf
pusha
aas
(bad)
push
das
sub
pop
add
das
stos
adc
shr
imul
nop
outs
cwde
les
out
jle
pop
mov
icebp
loopne
iret
repz
or
sbb
inc
pop
ins
cmp
repz
xchg
test
sar
iret
repz
or
and
jns
out
pop
jo
cwde
lahf
out
sahf
lods
rcl
cld
adc
cmp
repz
cmp
repz
xrelease
call
cmp
out
sahf
push
fs
mov
jns
fdiv
add
sbb
cmp
repz
push
push
iret
nop
movs
mov
idiv
jno
(bad)
push
fadd
lahf
(bad)
add
mov
daa
dec
mov
into
mov
es
int
jne
mov
push
mov
mov
ins
mov
or
les
mov
inc
mov
iret
sti
xchg
fst
out
clc
mov
sti
ja
push
or
sahf
sbb
std
xchg
int
push
jae
out
ret
adc
xchg
jge
fs
or
push
sub
dec
outs
mov
fbstp
dec
es
mov
ins
mov
fist
mov
fucomip
push
or
adc
lea
stc
es
add
scas
fwait
adc
sub
jns
xchg
es
cld
enter
popf
mov
outs
idiv
push
cmp
jle
mov
jl
mov
push
xlat
mov
out
retf
sbb
push
push
stc
mov
jae
test
popf
adc
jnp
daa
push
aaa
push
mov
mov
add
xor
aaa
sar
cmps
idiv
mov
dec
inc
(bad)
jnp
ja
push
mov
fist
rol
xchg
fidivr
lahf
jge
cmp
lahf
jbe
lock
xchg
int
fwait
dec
clc
imul
xchg
ja
mov
out
pop
dec
push
jnp
cmp
dec
repz
fimul
cmps
push
popf
ins
mov
pop
test
sub
jns
movs
pop
lock
push
xchg
test
in
jbe
mov
fst
in
push
adc
push
neg
in
mov
sahf
dec
inc
push
fs
stos
fnstcw
iret
in
sti
add
mov
sbb
gs
jmp
push
test
push
xor
out
test
mov
or
gs
shl
lahf
scas
add
lahf
mov
enter
fdivp
jns
fs
push
push
adc
pop
cld
and
xor
cmps
jae
and
js
iret
nop
sti
mov
mul
mov
pop
mov
mov
loop
data16
inc
sahf
adc
pop
mov
sti
fmulp
add
push
add
sbb
mov
outs
xchg
fild
dec
ret
movs
adc
xor
mov
mov
sbb
cmp
cmps
les
fistp
mov
enter
jecxz
xchg
clc
mov
(bad)
mov
arpl
lahf
data16
jns
cmp
cmps
es
jbe
dec
shl
cmp
iret
enter
push
pop
push
fldenv
sbb
loop
push
dec
sbb
push
jnp
sbb
pop
call
jecxz
push
(bad)
mov
popf
out
rcr
and
push
and
faddp
outs
add
xor
jns
dec
aam
ss
cmp
data16
add
sub
sbb
ss
jg
imul
outs
js
outs
icebp
sub
push
inc
arpl
imul
fnstcw
pop
jmp
cmp
test
inc
cmp
xlat
sub
jl
(bad)
icebp
pop
xlat
inc
jno
call
dec
fsub
int
jns
test
imul
leave
sbb
inc
out
sahf
out
fwait
retf
iret
repz
adc
ds
data16
ds
repz
ret
push
fdivr
imul
fnstsw
iret
shl
jnp
cmp
out
pop
fisttp
mov
jns
iret
in
loopne
xchg
ret
out
xor
repnz
loope
clc
adc
lods
add
xor
add
enter
das
adc
adc
xchg
add
pop
jo
xchg
mov
in
out
fwait
mov
cmps
into
add
push
mov
lods
loope
addr16
int
inc
fcom
xlat
mov
fs
in
les
and
int
test
iret
repnz
fsubp
inc
mov
stos
(bad)
cs
std
cmp
fmul
ret
add
or
or
dec
adc
xor
fistp
call
dec
mov
(bad)
adc
pop
lds
pop
adc
cmc
pop
aam
cs
int
push
fwait
jecxz
loop
in
ins
fisttp
cmps
ffreep
fisub
loopne
fld
bound
inc
mov
xchg
jno
push
inc
movs
sub
add
je
xor
add
bound
inc
adc
pop
call
push
adc
call
push
outs
mov
inc
inc
xchg
aad
xor
sbb
scas
nop
ret
add
loop
add
cmp
mov
add
jmp
pop
dec
fisttp
add
add
add
inc
add
push
add
add
adc
push
cld
inc
add
(bad)
mov
out
(bad)
push
add
out
sahf
out
or
or
loope
sahf
or
mov
loopne
add
rol
shl
inc
cdq
inc
push
inc
dec
add
mul
clc
sar
add
or
stc
repnz
lsl
add
add
inc
push
inc
pop
inc
or
or
stc
repnz
dec
or
or
dec
or
or
pop
mov
push
dec
ud0
add
mov
add
add
in
(bad)
lock
or
in
pop
and
dec
imul
dec
in
add
dec
add
lahf
aaa
ins
add
jae
mov
dec
add
and
cmp
jmp
and
(bad)
push
dec
add
retf
add
jbe
call
add
adc
pop
sti
les
adc
ds
mov
push
xchg
cld
push
push
call
and
sub
jmp
add
popf
jb
scas
sbb
push
mov
std
call
or
pusha
cld
add
add
out
call
and
or
add
add
mov
out
adc
push
scas
pop
dec
xor
les
outs
ret
dec
or
stc
test
and
leave
int
xchg
pop
and
(bad)
sti
add
dec
push
xor
inc
and
jae
je
test
dec
pop
add
call
mov
cmp
ficomp
mov
mov
dec
push
push
pop
mov
add
xchg
pop
pop
hlt
pop
clc
pop
push
jne
cli
jae
ja
sti
out
add
mov
(bad)
std
or
jmp
inc
leave
add
shl
mov
add
add
ins
cmp
dec
mov
xchg
inc
or
gs
pop
dec
pop
push
addr16
jge
push
pop
sbb
dec
enter
shr
or
add
push
stos
dec
add
in
mov
ret
push
push
cmp
or
push
xor
inc
pop
mov
or
xor
lds
mov
int3
adc
push
xchg
push
or
add
popa
mov
inc
and
mov
cdq
clc
retf
adc
mov
mov
add
enter
adc
dec
and
ret
ins
push
jecxz
inc
or
call
push
cld
mov
pop
mov
pop
push
add
add
stos
pop
(bad)
icebp
inc
push
mov
ins
sbb
mov
loope
(bad)
fsub
out
cwde
jmp
pushf
stc
or
sbb
pop
cmc
and
dec
jb
pop
lea
add
popf
inc
or
inc
and
ret
mov
add
or
dec
push
or
mov
inc
or
inc
and
cmps
es
add
enter
(bad)
mov
mov
enter
pop
dec
jecxz
or
aas
dec
xchg
repz
jne
xchg
scas
clc
inc
and
ds
jae
cmp
pop
pop
jb
test
inc
and
inc
sbb
xchg
inc
add
push
mov
mov
inc
ret
xchg
mov
loope
mov
add
add
cdq
nop
xchg
sub
repz
add
add
les
jmp
mov
sbb
mov
std
push
call
or
fbstp
cmp
mov
sub
xchg
push
retf
add
pop
and
and
or
sbb
cmp
mov
clc
lock
clc
push
jb
aaa
add
xchg
pop
push
stos
(bad)
shl
and
call
add
cmp
push
sub
inc
mov
cmc
mov
mov
call
pop
or
push
pusha
jne
push
jmp
adc
adc
sbb
or
ja
adc
xchg
fdiv
pusha
mov
sbb
jmp
jb
push
stc
push
(bad)
push
xor
pop
pop
push
lods
mov
popa
aad
bound
xchg
push
pop
xor
or
loopne
or
cwde
dec
push
adc
add
cmp
mov
pop
loop
add
xchg
push
or
add
icebp
std
push
mov
popf
sub
add
out
sub
cwde
inc
jns
push
mov
prefetcht0
adc
and
push
and
int3
and
(bad)
dec
pushf
add
adc
call
lock
call
adc
add
adc
cs
imul
add
push
mov
add
push
add
and
jb
lods
rcl
add
hlt
ficomp
xchg
push
or
mov
mov
sub
mov
in
outs
data16
dec
cmp
jb
mov
loopne
adc
add
in
jmp
hlt
add
xchg
std
lea
fs
(bad)
call
leave
mov
ficom
int3
les
dec
pop
add
cmp
jb
outs
shr
lock
pop
ror
inc
fnsave
adc
(bad)
scas
retf
bound
loope
call
cmp
jl
pushf
std
pop
pop
inc
pop
movs
mov
sti
xchg
jmp
mov
into
or
fcom
std
sub
mov
inc
aam
or
inc
jae
push
and
push
xor
adc
and
inc
or
jle
fbstp
push
adc
aad
jbe
and
add
ds
ret
jl
lea
shl
cld
aaa
mov
ret
and
mov
xchg
xor
push
int
push
mov
sti
sub
adc
cmp
ja
fiadd
jne
and
(bad)
pop
mov
or
clc
pop
jl
inc
js
dec
cmp
dec
cld
(bad)
and
or
sub
mov
nop
call
or
dec
lea
push
push
and
loopne
or
cmp
jbe
pop
sahf
je
cs
mov
push
push
inc
adc
ja
or
sub
fdivr
or
push
push
loop
ret
out
cmp
pop
pusha
adc
pop
loop
shr
xchg
xchg
dec
xor
mov
sbb
jo
stos
add
(bad)
mov
inc
inc
inc
mov
sbb
clc
loopne
fwait
add
sbb
es
bound
jb
pop
pop
ret
int3
and
cmp
adc
enter
shl
ret
mov
jmp
(bad)
loopne
sar
out
pop
push
add
sbb
adc
ret
ret
pop
lods
or
iret
loopne
pushf
dec
cmp
push
mov
loop
pusha
sub
mov
and
test
mov
cmp
and
pushf
lock
jmp
lock
jcxz
outs
xchg
sbb
dec
sbb
cmp
pop
and
aaa
test
xchg
mov
in
stc
out
pop
adc
mov
and
call
enter
fdivr
add
dec
mov
pusha
jnp
push
rol
or
(bad)
mov
pop
jg
inc
(bad)
int
xchg
or
mov
mov
sub
and
push
sbb
push
scas
stc
je
stos
imul
je
std
sbb
adc
mov
push
push
sbb
mov
inc
or
lods
outs
jbe
cmp
pop
stos
push
jmp
push
xor
fild
pop
call
mov
pop
dec
pop
clc
mov
sub
pop
popa
pop
lahf
mov
inc
push
in
pop
and
in
pop
add
xor
mov
cmp
xchg
or
add
add
es
jmp
outs
(bad)
sbb
dec
mov
cmps
add
sub
jne
xchg
fmul
aam
clc
inc
jo
xchg
or
scas
cmp
data16
popa
fiadd
and
jle
or
xchg
adc
adc
xchg
adc
clc
in
clc
jmp
cs
out
cmps
gs
cmp
fdivr
cli
(bad)
scas
jne
inc
mov
cmp
out
dec
jne
mov
jg
gs
mov
adc
or
push
add
push
sbb
push
ds
enter
xchg
xchg
dec
dec
cdq
mov
and
dec
inc
jb
and
xor
psubw
and
pop
push
jmp
xchg
xchg
test
inc
or
inc
sar
sbb
push
jle
jmp
(bad)
leave
aad
or
cdq
mov
test
or
sub
in
gs
ins
push
inc
xlat
jmp
inc
sub
adc
inc
or
pusha
adc
in
jne
call
call
scas
mov
inc
mov
mov
mov
loopne
cmp
into
xor
inc
or
enter
call
call
xchg
call
mov
jb
inc
mov
dec
xchg
dec
pushf
sub
call
ss
pop
mov
es
xchg
aas
and
sbb
test
adc
jb
(bad)
daa
and
cmp
ins
xchg
dec
daa
lahf
sub
iret
xor
add
sbb
sbb
adc
push
sbb
pop
add
call
and
mov
sti
push
mov
and
pushf
icebp
add
add
mov
and
out
ror
call
and
sub
sub
ficomp
sahf
and
cmp
out
cmp
mov
dec
jno
mov
ret
lahf
addr16
or
loopne
out
push
dec
dec
shl
jno
clc
aaa
ss
xor
mov
xor
pop
mov
into
data16
and
mov
retf
adc
cmp
popf
or
mov
out
and
push
pushf
mov
or
popf
jne
pop
cmp
xchg
dec
sub
jge
and
push
div
mov
push
hlt
fimul
adc
dec
pop
ret
ror
sbb
popf
adc
ror
les
xor
sbb
adc
stc
pop
inc
xchg
mov
or
lea
mov
enter
cmp
jbe
mov
add
xchg
sub
pop
mov
ret
push
call
jle
jp
sub
add
inc
jmp
jb
inc
fisub
adc
movs
add
push
loop
mov
mov
mov
mov
jnp
sbb
in
xchg
jno
lahf
mov
dec
and
bound
cmc
dec
and
inc
cmp
icebp
push
xchg
and
sub
and
pop
dec
add
les
mov
hlt
cld
inc
mov
fsubp
popw
mov
inc
clc
xor
inc
loop
aam
mov
jl
mov
jne
mov
pop
lods
sub
cmp
ret
pop
cmp
xor
hlt
add
push
xchg
ja
in
xor
add
or
fcmovne
in
xor
or
xor
pop
and
xor
add
idiv
ja
push
pop
imul
jmp
push
ror
and
ins
add
push
int
inc
dec
add
mov
jb
call
pop
sbb
xor
scas
repz
pop
sub
adc
add
jl
(bad)
jg
push
lods
xchg
aaa
add
loopne
enter
ret
fstp
xor
sbb
jnp
or
pushf
xor
cmps
push
and
cld
push
mov
into
add
and
inc
inc
jne
mov
scas
and
add
push
adc
jne
or
es
or
jmp
mov
push
dec
mov
mov
adc
adc
leave
inc
and
xor
call
test
and
xchg
loopne
dec
add
xor
adc
add
jne
xchg
clc
pusha
jge
invlpg
or
jb
fist
jl
mov
movs
movs
lods
test
mov
or
mov
or
data16
fwait
loope
jb
xchg
xchg
sti
movs
daa
or
push
cld
jb
test
jg
lods
ins
or
mov
push
bound
and
or
add
cmp
dec
dec
xor
mov
push
push
push
xchg
pop
je
push
add
adc
push
jne
mov
and
mov
mov
mov
aam
shl
xor
cmp
lods
ret
test
xchg
sub
mov
adc
adc
jmp
ins
push
jecxz
or
mov
call
mov
push
cmp
imul
mov
outs
xchg
pop
cmp
xchg
push
and
xchg
daa
cmp
push
or
hlt
add
fld
mov
mov
add
fist
xor
ds
inc
and
or
mov
jns
aam
ds
aaa
mov
jecxz
and
mov
sub
test
or
mov
popf
div
pop
jmp
cs
ror
leave
or
push
mov
xchg
push
xor
fs
sbb
mov
dec
or
and
mov
jge
mov
(bad)
push
pusha
fild
inc
push
xchg
inc
or
and
leave
pop
add
xor
outs
(bad)
dec
out
mul
add
add
dec
nop
jg
loop
mov
adc
jo
add
inc
push
call
mov
add
inc
loop
call
sti
call
pop
ret
cmp
sbb
xchg
add
movs
add
push
push
or
inc
adc
ds
sub
pop
add
and
clc
fmul
push
pop
or
pop
xchg
mov
out
pop
les
out
push
std
call
add
ret
sbb
mov
arpl
mov
sbb
lods
add
xchg
enter
nop
jno
adc
or
or
mov
mov
pop
mov
inc
loopne
mov
mov
or
fisttp
xchg
je
mov
mov
adc
loopne
ficomp
je
mov
or
test
pop
cmp
fild
movs
lea
imul
std
mov
dec
aas
add
inc
call
int3
push
rcl
cmp
push
das
pusha
mov
pop
inc
dec
jne
adc
add
jb
les
fdiv
pop
sub
and
mov
cli
lea
mov
fld1
mov
sti
push
ins
sbb
dec
aam
inc
sub
push
xor
or
pop
ss
or
add
mov
sub
shr
adc
clc
add
sub
and
and
dec
neg
out
mov
enter
test
xor
or
or
push
mov
xchg
shr
sbb
cwde
nop
test
pusha
out
inc
inc
pop
jle
push
push
push
xor
add
ret
jo
mov
and
pusha
rcl
and
call
into
les
mov
aaa
sti
outs
rcr
inc
and
adc
mov
push
dec
mov
cmp
xchg
push
push
icebp
std
outs
sbb
jbe
mov
pop
push
pop
pop
mov
pop
cld
xor
shl
mov
add
jb
loop
cld
retf
ss
xchg
fdiv
repnz
int
(bad)
sub
loop
int
jmp
(bad)
ss
push
hlt
call
fwait
call
adc
push
popf
(bad)
adc
add
dec
adc
ret
mov
daa
xchg
call
xor
mov
adc
imul
pusha
add
idiv
dec
sar
xor
dec
add
jmp
push
out
adc
aas
pop
add
cld
lods
cmp
loop
dec
or
shr
shl
test
call
mov
jnp
cmp
call
add
pop
push
xor
ss
jle
out
push
push
or
or
add
jne
add
push
cmp
fisubr
cli
add
add
inc
dec
jne
jmp
lea
call
pushf
mov
pop
and
ret
pop
and
imul
aam
call
push
(bad)
scas
xor
je
xor
mov
in
call
mov
xchg
lock
js
jns
add
jmp
es
lds
xchg
sbb
rdtsc
rcr
out
mov
int3
je
lea
loop
sbb
(bad)
lods
push
ret
mov
ret
cmp
jne
sti
adc
ret
mov
cld
xor
call
retfw
pusha
mov
xchg
cli
cmp
cli
test
call
and
sbb
out
scas
jmp
(bad)
sub
in
xor
mov
jb
bound
frstor
icebp
mov
push
sub
xor
push
push
xor
jle
lods
xor
mov
or
mov
stc
lods
jb
mov
jo
movs
adc
pop
xchg
mov
or
test
push
pop
pop
aaa
xchg
outs
xchg
adc
cmp
das
or
or
mov
push
adc
sub
repz
lea
jl
lahf
iret
inc
lea
lea
lea
add
mov
dec
in
test
mov
mov
imul
call
push
lea
add
loopne
xor
add
jmp
mov
das
add
nop
daa
dec
popw
iret
pop
fwait
fwait
scas
iret
imul
mov
rcl
(bad)
mov
cld
push
mov
les
sub
sub
enter
shl
aam
iret
stos
sub
fadd
mov
add
dec
sbb
cmp
add
xchg
add
and
xor
pop
loop
jmp
pop
sub
or
dec
movs
push
and
push
adc
add
add
adc
fimul
and
test
jne
cmp
push
in
add
or
neg
or
outs
push
xchg
and
je
mov
js
ja
fst
imul
gs
jo
add
xchg
and
pop
js
add
in
push
add
mov
sbb
xor
jne
out
inc
nop
js
sbb
pop
call
(bad)
shl
or
or
add
pop
into
jne
pop
mov
push
outs
add
push
jae
cs
adc
jmp
add
jnp
push
es
call
bound
push
lea
xor
add
and
pop
int3
aam
xor
jne
cmp
pop
and
leave
push
adc
dec
or
add
loop
jb
outs
adc
dec
sub
cmp
and
mov
mov
xchg
push
adc
inc
shl
adc
cmp
stos
call
mov
push
in
dec
mov
sub
pop
or
or
jmp
push
scas
add
and
inc
shl
xor
add
dec
ret
add
mov
xor
adc
or
inc
mov
(bad)
loop
adc
push
arpl
ret
out
xchg
pop
jl
mov
stc
jmp
sub
sub
in
jmp
push
dec
sub
mov
sbb
mov
(bad)
jns
add
std
add
xchg
js
push
repz
add
adc
cmp
add
aad
jne
ret
add
mov
adc
in
jno
loop
mov
xchg
bound
stc
adc
inc
jle
dec
xchg
loope
push
cld
adc
les
add
cmp
add
push
clc
dec
adc
adc
xchg
sub
push
and
in
and
adc
sbb
dec
call
fnstcw
mov
xchg
iret
dec
test
add
add
add
mov
int3
and
jecxz
push
and
ret
into
mov
mov
adc
xchg
in
adc
sub
adc
cmps
dec
xchg
and
fisub
sub
sbb
sub
movups
jne
dec
add
loopne
je
jmp
setnp
xchg
(bad)
jae
mov
aaa
es
cmp
sbb
ror
fistp
ins
sub
(bad)
mov
push
lock
add
adc
mov
mov
jb
mov
mov
fwait
inc
data16
sub
call
ret
mov
jmp
mov
cmp
jb
add
hlt
nop
and
ret
out
xchg
js
fucomi
test
outs
nop
xchg
mov
repz
add
mov
add
add
push
jmp
pop
cld
pop
add
adc
add
fwait
loopne
dec
pop
movs
je
shl
loop
add
pop
jmp
lods
aad
arpl
add
dec
or
gs
repz
mov
sbb
add
js
adc
dec
loopne
ins
icebp
shl
push
adc
imul
pop
test
jge
adc
push
imul
imul
mov
fs
cmp
ret
fwait
imul
push
push
cli
ds
pop
mov
pop
cmp
pop
pop
stos
pop
(bad)
xor
add
pop
pop
loope
inc
adc
inc
xlat
push
mov
adc
adc
in
jnp
add
push
sti
and
sti
mov
or
jmp
dec
lods
cmp
adc
push
sub
push
dec
retf
or
stos
mov
rol
lods
dec
and
xor
push
ins
mov
jecxz
pop
and
outs
ins
retf
setb
or
mov
jno
shl
pop
rol
out
mov
div
or
push
retf
or
and
sbb
and
sbb
stos
inc
call
sbb
fimul
inc
push
lods
add
inc
bound
push
cmp
sbb
outs
stos
mov
mov
sbb
imul
mov
pop
hlt
xor
jb
call
push
push
lods
sbb
loop
stos
mov
int
push
mov
or
mov
jb
or
js
inc
sbb
sti
clc
fisubr
jae
inc
(bad)
mov
cmp
add
add
or
cmp
div
mov
mov
mov
loope
mov
add
cmp
cld
mov
sub
lock
and
xchg
loop
jbe
sub
push
out
aaa
jecxz
out
or
jae
push
or
mov
dec
and
dec
add
cs
f2xm1
fisub
mov
mov
imul
out
loopne
jo
add
(bad)
mov
sahf
add
adc
xor
ret
xchg
cmps
outs
or
mov
add
jp
movs
jmp
jmp
adc
push
sbb
bnd
mov
jbe
test
ds
aaa
cmp
(bad)
jmp
sbb
pop
or
xor
mov
pop
loop
push
jl
das
cs
icebp
push
jmp
jg
jo
jo
inc
or
and
popf
pop
mov
add
jo
mov
fidiv
xchg
xor
mov
scas
loop
push
enter
xchg
xor
or
rol
jns
dec
rcl
mov
cs
ds
mov
outs
test
lock
xor
push
call
sub
cmp
push
and
es
test
push
test
mov
cld
sbb
hlt
jb
sub
push
jns
ffree
adc
add
add
(bad)
(bad)
jp
or
lods
pop
sbb
ins
or
shr
and
dec
add
les
mov
mov
mov
or
xchg
test
adc
call
jbe
jae
je
adc
nop
js
test
or
and
push
xlat
cmp
mov
pop
or
xchg
ret
sbb
jno
fistp
and
or
inc
sbb
adc
pop
push
cwde
mov
clc
cs
pop
add
(bad)
cwde
scas
jae
cmp
mov
es
aaa
stc
in
or
ror
sbb
psubd
or
aas
inc
pop
push
and
sub
ja
stos
arpl
mov
sti
es
and
adc
push
dec
jle
sahf
mov
es
sbb
inc
sub
jnp
mov
jnp
add
cwde
shl
jae
mov
les
inc
adc
sar
popf
xor
push
push
inc
cs
and
mov
adc
movs
sub
ss
dec
and
jl
mov
dec
test
xor
call
add
mov
outs
xor
jb
loop
outs
mov
xchg
lahf
out
icebp
(bad)
es
sub
js
adc
ret
xor
mov
sub
leave
outs
pop
cmc
call
dec
xor
or
fiadd
sub
push
stc
jmp
pushf
shl
popf
stos
test
push
hlt
inc
xlat
les
dec
or
cmp
ret
cmp
es
sub
sub
rol
test
adc
or
xchg
xchg
xchg
xchg
cmp
cmp
inc
ds
cs
mov
(bad)
dec
adc
adc
adc
test
shl
test
enter
dec
movs
int3
sub
xor
cmp
fist
adc
fadd
push
cmp
cmp
(bad)
loopne
inc
mov
movs
stos
aam
(bad)
loop
adc
pop
push
mov
push
sub
adc
adc
dec
movs
push
test
movs
push
sub
pop
mov
ds
adc
ins
adc
and
movs
jae
(bad)
ins
fwait
movs
ret
movs
jmp
test
movs
adc
adc
fdivr
push
mov
loopne
sbb
imul
int
mov
or
mov
mov
mov
add
push
test
ss
lods
adc
add
lods
mov
push
xchg
jmp
daa
dec
cmp
imul
popa
pushf
and
cmp
add
movs
dec
push
stc
int3
sbb
cmp
jl
mov
push
and
push
jno
test
and
je
inc
add
cs
xchg
or
sub
mov
and
mov
test
popa
aas
rcr
outs
dec
xor
outs
push
jmp
mov
add
popf
dec
daa
mov
xchg
fdivr
shl
dec
loop
dec
ret
xor
enter
sbb
xchg
sahf
and
pop
push
cmc
and
(bad)
call
add
sub
int
les
dec
xchg
inc
dec
push
out
mov
add
je
or
je
fs
dec
sub
push
add
pop
(bad)
repnz
sbb
add
add
xchg
and
xchg
aas
dec
loop
cdq
push
les
jp
pop
or
push
and
xchg
fcmovnbe
and
or
jecxz
jo
fst
bound
dec
fwait
sbb
add
or
test
pop
or
es
and
mov
dec
fdiv
add
push
cmovns
arpl
clc
pop
fwait
test
mov
loopne
jbe
dec
bound
jmp
and
add
cmc
mov
or
push
mov
loope
jecxz
mov
xor
push
mov
pop
push
adc
(bad)
loopne
jne
je
xor
xchg
pop
cmp
inc
cld
push
mov
lods
dec
sti
test
add
(bad)
or
inc
xchg
ret
fisub
jne
cmps
cmp
mov
and
ss
adc
jmp
int3
imul
and
xor
lock
cmp
mov
sbb
(bad)
mov
nop
sub
jmp
dec
adc
int
or
adc
and
imul
test
cld
jb
add
mov
clc
retf
dec
pushf
out
or
adc
out
xor
pushf
pop
cwde
pop
cmps
push
adc
inc
cmp
inc
js
mov
sbb
mov
sub
push
int
pushf
pop
pushf
pop
cwde
pop
sbb
jns
cwde
pop
lods
pushf
pop
cwde
pop
inc
adc
loop
or
cmps
add
mov
xor
fisub
pushf
pop
cwde
pop
and
inc
and
stc
jmp
jns
dec
cwde
pop
pushf
pop
mov
dec
mov
mov
sub
popf
pop
rcl
and
push
push
inc
ds
mov
pop
inc
xor
ficom
int
pop
adc
pusha
adc
test
je
push
jne
rcr
stos
mov
inc
mov
test
inc
(bad)
or
jp
adc
push
jno
jne
int3
mov
push
call
test
or
pusha
xchg
or
xchg
mov
jle
loop
mov
add
jp
pushf
scas
pop
push
hlt
jo
sub
add
sub
call
(bad)
add
cmp
ror
add
mov
in
add
xchg
mov
pop
sub
int
and
nop
mov
xor
xchg
les
imul
mov
push
add
sti
sahf
and
pushf
movs
cmp
popf
je
das
mov
(bad)
sbb
je
in
sahf
push
call
in
(bad)
push
add
or
jmp
shl
and
jle
or
shl
add
test
add
js
push
lea
cs
retf
in
mov
fnsave
mov
adc
xor
and
loopne
dec
gs
add
and
mov
adc
mov
clc
sti
adc
dec
dec
mov
hlt
xor
dec
cmp
cmps
sub
push
cmp
mov
xlat
and
push
xchg
push
adc
mov
and
jb
push
push
sbb
mov
xchg
retf
in
mov
loopne
mov
mov
jo
adc
and
add
lahf
sub
ret
shr
pop
ret
dec
sar
js
push
add
mov
push
push
dec
mov
jne
xor
mov
hlt
ret
xchg
or
xor
sub
jbe
pop
cmp
nop
cmp
inc
(bad)
ret
or
and
push
add
push
mov
bound
jmp
cmp
jmp
and
and
mov
add
leave
es
faddp
and
rol
xor
out
call
aaa
xor
lahf
and
pop
pop
addr16
cmp
sub
mov
sub
aas
cwde
test
jno
jns
add
mov
mov
pusha
jnp
cmp
push
and
push
inc
and
add
es
xor
enter
test
dec
repz
adc
out
ss
or
jg
stos
pop
fidivr
sub
adc
adc
and
add
and
outs
in
cmps
and
mov
in
pusha
jg
and
cmp
dec
and
sbb
sbb
inc
jne
or
jg
or
sub
or
push
xchg
pop
pop
mov
in
repnz
and
movs
fbld
cmp
sub
sub
cs
pop
mov
and
stc
pusha
test
and
or
cmp
and
sti
jns
out
fdiv
fnsave
fisub
mov
or
pop
jns
and
and
cmp
xor
test
test
and
fsub
frstor
test
sbb
fbld
xchg
pushf
and
sub
push
or
add
es
or
leave
call
add
dec
sub
bnd
mov
icebp
mov
and
je
add
sti
pop
xor
dec
call
add
jns
add
push
inc
mov
inc
or
enter
daa
or
int3
cmp
cs
aam
xchg
push
mov
sbb
outs
or
mov
jl
or
jmp
mov
or
add
jnp
sub
xor
mov
mov
rol
push
xor
lods
scas
(bad)
(bad)
adc
cvtpi2ps
sahf
and
xor
pushf
lahf
and
mov
mov
cmps
(bad)
xor
es
mov
mov
and
pop
ret
shl
cmp
push
and
adc
cmp
aas
std
fisttp
jno
xor
pop
gs
and
jne
adc
js
mov
shl
xor
xlat
inc
jmp
xor
ds
pop
add
inc
dec
xchg
pop
out
or
push
clc
xlat
jecxz
loop
sub
sub
sub
xchg
pop
daa
dec
imul
jbe
les
sbb
mov
xchg
and
retf
push
pushf
and
test
das
out
lahf
and
and
std
out
clc
stc
adc
nop
out
in
out
dec
es
jb
stc
or
sub
dec
test
out
push
xor
push
nop
(bad)
dec
push
add
add
dec
mov
adc
loop
popa
(bad)
sahf
mov
es
dec
call
dec
jg
add
mov
out
cmps
and
and
mov
pop
cmp
sub
and
push
enter
and
push
add
int3
ror
xor
addr16
sbb
cld
push
retf
dec
mov
xchg
daa
sub
movs
dec
loop
iret
adc
leave
cmp
dec
and
retf
sub
cs
nop
fdiv
imul
mov
fs
popa
imul
push
mul
sub
cli
or
xor
and
push
repz
jmp
dec
das
dec
sbb
les
fs
cli
inc
and
or
rcl
lea
inc
in
dec
cmc
cmp
pop
sbb
mov
call
les
add
imul
js
test
inc
ja
outs
popf
and
mov
jne
in
dec
adc
dec
call
jo
loopne
and
pusha
or
push
pop
(bad)
xchg
sub
or
test
test
jmp
mov
jne
dec
sbb
add
dec
cmp
sbb
(bad)
jb
mov
dec
shr
movs
and
je
in
test
mov
xor
add
add
dec
dec
jmp
xchg
xor
and
ss
fld
push
pop
push
out
pop
push
jmp
sti
mov
cmps
jne
push
sub
jns
xor
dec
rcl
or
mov
les
fwait
mov
and
push
dec
shl
mov
xchg
add
loop
add
mov
push
push
sbb
push
rol
popa
icebp
push
in
push
sub
sbb
mov
mov
sub
aad
and
push
cli
ret
jnp
leave
push
inc
dec
adc
inc
push
in
int
test
push
jo
xchg
pcmpgtd
xor
out
mov
jp
jns
dec
adc
xchg
and
or
std
fdiv
fadd
jae
mov
pop
in
shr
jne
mov
cmc
fxam
dec
sub
push
(bad)
cld
ret
les
in
mov
std
jbe
adc
pop
xchg
mov
and
or
mov
xchg
ja
or
sub
sub
cli
adc
or
add
push
lods
(bad)
cld
movs
push
add
(bad)
and
mov
jmp
(bad)
mov
mov
mov
inc
sti
dec
dec
dec
push
mov
xor
les
mov
pop
lea
mov
xor
les
mov
sub
push
or
js
push
jle
stc
aas
ja
sbb
aaa
push
(bad)
and
jae
inc
pop
and
sub
jae
dec
pop
jae
mov
inc
movs
loopne
sahf
mov
and
push
cli
lods
inc
cmp
adc
mov
add
mov
dec
mov
pushf
mov
stos
mov
(bad)
jle
(bad)
xor
inc
mov
inc
outs
and
les
mov
adc
mov
popa
pusha
sub
popa
dec
ins
imul
xor
ss
or
es
shl
outs
mov
mov
pusha
inc
test
add
pusha
push
add
and
fwait
test
xor
mov
or
test
fistp
enter
std
mov
or
test
jne
push
mov
mov
or
xor
cmp
(bad)
jg
mov
sar
inc
jbe
scas
sub
sub
adc
rcl
popa
xor
inc
sub
ins
popa
jbe
mov
mov
pop
or
fwait
ret
test
xor
add
bound
ret
jae
adc
mov
or
sbb
jmp
(bad)
test
je
inc
stc
outs
pusha
scas
mov
pop
ja
jecxz
nop
inc
cmps
pop
jb
pusha
cdq
sbb
add
popf
jmp
es
jp
popf
or
mov
mov
js
mov
lock
mov
ret
adc
adc
mov
xchg
call
mov
pushf
call
in
mov
mov
cmps
ja
gs
cli
sbb
add
call
cld
dec
jb
push
sbb
movs
add
adc
pop
lods
in
pop
inc
inc
mov
mov
mov
outs
push
sti
cmp
mov
clc
call
fistp
add
push
inc
imul
and
inc
popa
aas
sar
mov
int
jge
clc
popa
adc
fsubr
or
push
aas
xchg
ins
call
mov
xchg
int3
jbe
mov
and
test
dec
xlat
jmp
lea
mov
es
test
data16
mov
dec
or
fimul
push
ret
(bad)
sbb
adc
pop
call
das
(bad)
sub
xchg
sbb
retf
xchg
jecxz
idiv
pop
sbb
or
dec
daa
into
pop
add
push
movs
xchg
test
sub
xlat
mov
push
ret
mov
push
in
xor
outs
mov
pop
rcl
out
xor
pop
pop
repz
fwait
cmp
pushf
inc
je
jnp
iret
js
jo
rcl
add
pop
jnp
push
or
or
jl
cmp
add
pop
clc
and
test
adc
xchg
mul
xchg
or
(bad)
push
lahf
test
add
outs
cs
and
shl
mov
jg
jo
push
push
test
dec
daa
not
pop
cmp
xchg
add
cmp
or
ret
ret
and
dec
ins
mov
or
jmp
rcl
out
pop
adc
cmc
cld
adc
push
cmp
cld
(bad)
sub
cmc
cdq
dec
jge
push
dec
loopne
fimul
mov
and
dec
push
and
xchg
mov
jbe
and
in
retf
enter
repz
mov
and
dec
or
sub
jmp
inc
cmp
jo
sub
cli
int
push
pushf
clc
jnp
push
push
pop
pusha
add
loope
lea
push
or
mov
fwait
hlt
adc
in
mov
sbb
mov
int
mov
push
(bad)
push
and
mov
es
sub
and
add
xor
cwde
sar
and
mov
sbb
jl
je
daa
iret
leave
fisttp
sub
int3
repz
cmp
fnstenv
or
lods
jp
or
nop
sub
sbb
mov
push
aam
jmp
or
mov
push
inc
push
add
sbb
in
jmp
mov
sub
call
test
mov
adc
mov
xchg
and
mov
mov
and
je
dec
mov
lea
jecxz
cld
jge
jne
sbb
popa
add
pop
hlt
adc
push
(bad)
(bad)
repz
call
les
mov
dec
jbe
aam
fidiv
xchg
cmp
pop
jmp
cmp
xor
or
push
fmul
int
mov
push
into
fldln2
lahf
mov
xacquire
mov
pop
and
sti
xor
xchg
ret
jp
dec
cmps
ror
adc
jno
sti
popa
ja
xor
rol
or
sub
div
aas
mov
mov
retf
add
(bad)
adc
or
and
cmps
dec
test
inc
mov
or
adc
test
rol
jl
jne
inc
cli
sahf
pop
mov
fwait
mov
into
jmp
cmp
or
rol
icebp
sbb
xor
lock
movsx
ret
mov
test
add
push
ficom
adc
ret
cmps
add
lods
stos
aas
mov
jge
pop
pop
dec
je
mov
test
lock
cmps
int3
xchg
lock
je
fsub
outs
sti
call
push
mov
call
hlt
mov
sar
cmp
or
hlt
xchg
data16
fbstp
adc
jge
add
shl
adc
in
out
pushf
outs
mov
mov
addr16
test
call
mov
pop
mov
mov
mov
add
test
jo
jnp
jl
mov
dec
sub
pushf
jb
movs
pop
fwait
test
pop
call
mov
sub
aaa
sub
mov
ins
push
add
pop
aad
nop
cs
push
push
push
outs
das
add
mov
pop
pop
cmp
dec
add
push
mov
adc
mov
cmp
sbb
pop
dec
sbb
adc
mov
in
sti
mov
lahf
lods
dec
ret
int
call
popa
inc
lahf
jecxz
mov
push
mov
pop
scas
iret
xlat
in
dec
jo
push
mov
leave
add
add
or
add
push
scas
out
add
mov
adc
cmp
mov
shr
cmp
inc
daa
jmp
pop
mov
xor
lods
push
pop
icebp
add
(bad)
pop
cmp
(bad)
pop
call
hlt
or
in
jb
ret
xchg
mov
adc
gs
sar
xchg
cli
arpl
scas
out
in
sti
test
rcr
pop
js
xchg
xor
das
cwde
push
dec
je
sti
rcl
or
xor
pusha
loop
stos
adc
adc
aaa
enter
mov
sbb
adc
cmp
pop
js
mov
add
xchg
add
pop
jmp
outs
out
inc
push
jns
jmp
in
out
push
add
popa
pop
pop
pop
movs
inc
mov
clc
and
jmp
push
jmp
test
cld
jmp
xor
inc
push
dec
sbb
add
pushf
mov
and
mov
mov
add
fs
and
mov
outs
inc
fcomp
mov
or
mov
inc
adc
xchg
mov
xchg
or
dec
clc
xchg
or
adc
call
inc
pop
dec
sbb
or
arpl
push
dec
xchg
mov
arpl
mov
push
pop
ja
push
or
lods
mov
jns
push
ja
dec
repz
pop
(bad)
in
jb
pop
jb
mov
in
mov
cmp
and
inc
pop
movs
sbb
sar
outs
lods
mov
test
add
leave
add
je
or
fs
mov
or
xchg
add
nop
movntps
mov
sbb
movhps
in
jb
push
pop
es
xchg
retf
enter
ss
pop
mov
loop
es
mov
push
cmp
add
(bad)
jg
jmp
push
mov
out
out
pop
iret
adc
cmp
arpl
ss
pusha
lock
cli
add
sti
push
mov
scas
sub
dec
mov
mov
add
and
out
and
icebp
inc
or
retf
or
mov
jo
mov
cdq
stc
int3
cmps
out
jmp
jmp
ds
jns
jmp
inc
ds
push
jmp
in
ds
jmp
jb
and
jae
sbb
jne
add
pslld
jmp
jmp
fwait
int
xor
pop
jp
fwait
test
xchg
inc
jg
jnp
call
push
arpl
mov
fidivr
sub
repnz
sub
and
ds
mov
fstp
sbb
sub
retf
fsubp
pusha
jnp
add
push
in
inc
fist
cmp
jmp
xor
int3
and
xor
test
jne
rol
add
pushf
sahf
(bad)
call
loope
push
cmps
daa
ror
add
ins
push
pushf
movs
repz
push
fmul
int
fist
sbb
shl
add
fisttp
aam
jnp
imul
jl
mov
movs
push
rcr
loopne
xchg
push
dec
leave
repz
lahf
out
in
inc
mov
add
inc
scas
xor
mov
fcomp
sbb
cwde
out
enter
add
scas
adc
fist
str
shl
or
or
adc
or
jp
push
inc
je
dec
push
push
xor
mov
pop
xchg
cmp
jmp
or
add
cmp
or
pop
inc
stos
or
cs
inc
jle
fistp
out
xchg
add
xor
add
jne
adc
mov
dec
or
fld
or
loope
xchg
lods
aad
jp
addr16
test
adc
shl
push
cmp
mov
jbe
sbb
jo
dec
jp
pop
aas
inc
popf
pop
or
xlat
add
inc
fdivr
into
adc
shl
bound
cdq
push
ror
adc
fcmovbe
ss
push
sbb
mov
add
ret
jp
call
in
mov
out
and
fdiv
jnp
inc
cli
mov
sub
call
retf
sub
int3
or
gs
add
add
leave
or
data16
test
sub
es
cld
sub
iret
sar
or
sar
xlat
dec
add
or
test
dec
ss
test
push
scas
clc
adc
lea
lods
jo
(bad)
mov
les
lock
mov
rcl
and
cmp
add
(bad)
vmovupd
pusha
adc
aas
adc
jbe
lea
pop
rol
cmp
pop
ja
out
sbb
push
mov
pushf
inc
sbb
pop
call
pusha
mov
mov
movs
gs
nop
or
pop
push
pushf
sbb
and
test
mov
jmp
retf
xchg
ins
push
jmp
inc
and
sub
enter
mov
jo
mov
jecxz
icebp
ds
sub
pop
movs
aas
jno
add
and
adc
int3
push
pop
adc
pop
fcomp
pop
es
cmp
pop
xchg
and
mov
loope
mov
pop
xor
push
dec
data16
sub
movs
add
addr16
adc
add
adc
mov
loop
dec
mov
inc
aam
(bad)
jle
adc
fisubr
ins
pop
cmp
and
cmp
sbb
sar
jae
cmp
int3
adc
mov
stos
or
pop
int3
and
retf
or
mov
fstp
push
(bad)
retf
push
adc
jg
bound
mov
ja
mov
push
adc
fwait
mov
shl
sbb
cmp
or
push
sub
call
xor
js
loopne
call
sbb
dec
inc
and
jns
test
and
mov
ret
lock
mov
lods
add
add
not
jmp
push
nop
or
sbb
jo
or
inc
inc
(bad)
mov
int
call
or
out
or
shl
shr
add
adc
or
xchg
cmps
inc
jno
inc
jb
ror
dec
pop
jmp
inc
lea
cmp
lock
mov
jmp
je
mov
mov
add
(bad)
sbb
push
shr
xor
xchg
add
mov
xor
(bad)
xor
pushf
dec
xor
push
sub
sahf
adc
lock
push
dec
scas
aad
jb
or
inc
add
aaa
jge
inc
mov
fadd
clc
sbb
jl
fwait
add
add
inc
and
movs
call
adc
mov
es
shr
pop
and
or
scas
icebp
gs
inc
mov
xchg
lods
rol
shr
inc
ds
add
mov
icebp
xor
xor
adc
mov
lods
popa
lock
xchg
clc
mov
inc
or
div
xchg
push
jmp
add
ret
cmp
out
xor
cs
or
pop
cmp
inc
loop
ret
ds
out
mov
and
dec
stc
push
or
push
mov
add
jno
fcom
xchg
or
jns
sbb
fwait
cli
mov
int3
sbb
cwde
outs
add
or
xor
inc
jmp
push
add
dec
test
mov
jmp
je
add
mov
outs
push
cmc
push
adc
dec
sub
ins
(bad)
fbld
fwait
imul
mov
mov
adc
loop
or
shl
scas
add
or
adc
sub
mov
add
mov
cld
cli
aas
ja
je
cmps
sub
cmps
jns
dec
xchg
or
les
sbb
or
cmp
jne
and
je
enter
aad
inc
inc
mov
inc
jmp
leave
sbb
cmps
push
mov
adc
int
sub
and
adc
divps
or
push
adc
add
jle
sub
js
mov
xchg
xchg
jg
mov
push
pusha
or
jns
xcrypt-ctr
cmps
fnstsw
add
adc
add
ret
or
or
push
add
inc
repnz
sbb
test
cmp
je
ins
sahf
jo
fs
movs
or
cld
push
pusha
push
mov
data16
jp
xchg
test
or
mov
in
mov
push
push
call
daa
sbb
add
pushf
out
je
ins
inc
push
or
out
imul
xor
xor
dec
fidivr
cwde
sbb
es
mov
jge
das
sub
sub
and
test
add
and
jne
xchg
or
into
mov
(bad)
ins
cmps
cdq
adc
adc
ret
adc
push
push
into
loopne
sahf
pop
push
inc
dec
in
fcomp
rcr
cli
inc
in
push
aas
pop
xor
ret
sar
aam
add
pop
and
jmp
iret
jmp
jne
mov
or
jne
push
pop
pop
cmp
lock
xchg
xchg
add
add
lods
out
and
adc
xor
popa
sbb
mov
cdq
idiv
xor
(bad)
in
ss
inc
push
js
loopne
mov
movs
shl
and
inc
enter
inc
inc
inc
inc
loopne
xor
sbb
xor
movs
cmps
jo
add
cli
mov
fs
add
or
dec
mov
cdq
fsubr
scas
scas
ret
dec
lahf
movs
mov
mov
mov
ins
fist
and
(bad)
mov
jb
lea
jb
or
ins
add
adc
add
je
sub
jg
jp
mov
adc
loope
(bad)
push
push
mov
add
nop
inc
cld
outs
pop
fs
jae
cmp
mov
int
arpl
call
cmp
adc
inc
iret
cs
pop
cmp
cmp
add
imul
lds
aaa
xchg
fistp
pop
movs
ret
cdq
mov
jbe
cwd
mov
scas
sub
pop
adc
ret
fst
xchg
sub
mov
imul
gs
xchg
rcr
inc
ret
out
adc
cli
jb
lods
mov
push
push
xor
sbb
retf
cmps
adc
adc
js
or
xchg
sbb
cmp
imul
xchg
add
xchg
xlat
cwde
sub
or
adc
dec
jp
mov
int3
and
(bad)
out
add
cmps
shl
push
adc
xchg
mov
xchg
es
sbb
mov
inc
adc
pop
je
push
adc
mov
les
or
sub
or
jl
mov
pop
out
or
add
lods
and
sbb
push
push
jmp
out
jle
mov
repnz
fwait
jl
scas
dec
or
adc
pop
(bad)
cmp
hlt
xchg
ror
push
dec
add
xor
or
xchg
into
aas
inc
rol
loope
je
adc
daa
(bad)
rol
outs
add
cs
inc
or
or
movs
stc
into
rcr
out
adc
test
inc
and
je
or
cmp
sub
retf
les
inc
out
ds
sbb
xor
add
xor
adc
add
mov
mov
push
test
mov
test
clc
push
jl
adc
popf
ret
(bad)
call
add
pop
sbb
jne
xchg
js
or
cmp
jne
mov
mov
mov
mov
sbb
mov
fs
pop
adc
fucomip
dec
sub
xor
inc
add
adc
(bad)
dec
jne
mov
and
shl
and
cmc
lss
in
adc
mov
loopne
loope
dec
pop
cwde
mov
cmp
inc
sbb
popa
mov
jbe
xchg
xor
push
or
adc
ret
xor
adc
or
sbb
sub
das
sub
add
fst
add
cmp
or
sahf
xchg
add
sbb
push
pop
je
ins
sahf
fs
das
jl
jns
sahf
jnp
test
push
push
dec
sub
sub
jo
add
inc
movs
arpl
jo
loop
jmp
sub
add
lock
jns
nop
jg
adc
jl
ins
and
call
test
nop
or
fisttp
add
cmp
mov
dec
and
sar
mov
xchg
mov
lea
pop
mov
mov
rcl
sub
mov
push
lea
push
enter
lods
xor
shl
loope
push
adc
jle
add
pusha
mov
add
or
adc
add
inc
lea
mov
add
das
push
dec
movs
xchg
or
lea
fisubr
mov
pop
jmp
je
mov
dec
pop
gs
cmp
cmp
outs
nop
cmp
pop
add
mov
and
enter
sbb
adc
ss
jg
test
add
movs
sbb
and
shl
ins
hlt
call
adc
nop
nop
cmp
inc
and
adc
sbb
dec
ds
cmp
btr
push
mov
mov
dec
mov
add
movs
mov
arpl
add
in
jmp
xchg
pop
lods
js
pop
out
stos
mov
sub
es
sbb
mov
clc
pop
call
and
enter
mov
popf
sub
ja
or
or
push
pop
ret
mov
mov
add
jae
mov
lock
adc
mov
sbb
jno
xchg
mov
mov
jb
xchg
adc
mov
aaa
xor
imul
push
out
imul
(bad)
adc
(bad)
and
inc
or
jne
sbb
jmp
daa
jo
push
fisttp
enter
out
sbb
cmp
repz
mov
pop
ins
repz
outs
jne
sbb
js
sub
gs
xor
hlt
ss
xor
or
loopne
test
push
push
pop
fwait
add
sub
nop
dec
fidivr
es
lods
add
out
cmps
sub
mov
push
popf
sar
ins
add
inc
jne
data16
mov
jno
nop
jno
mov
test
or
cs
push
jns
les
jmp
pop
add
mov
cmp
jmp
adc
ins
xchg
or
es
mov
cmp
out
stos
and
les
push
sbb
mov
xor
mov
fmul
loop
loop
stc
inc
pop
push
loop
fmul
loop
add
dec
jbe
cmp
loopne
loopne
jns
jmp
cmp
enter
es
sub
or
test
mov
inc
add
fsubr
outs
mov
int
adc
scas
mov
(bad)
js
xchg
int
jbe
push
pop
fcom
mov
push
sbb
jnp
ret
dec
xchg
push
add
ret
cmp
test
push
push
lods
not
xor
xor
test
aaa
stos
es
cld
mov
or
outs
mov
outs
movups
xor
push
(bad)
inc
cdq
fcom
test
retf
rcr
fs
sub
sub
mul
sbb
pop
jae
cmp
sti
(bad)
jns
adc
stos
dec
jb
fisttp
pop
mov
std
(bad)
mov
adc
repz
fidivr
cmp
cmp
in
push
mov
xchg
xor
pop
pop
fidiv
cmp
cdq
enter
pop
mov
and
movs
mov
cmp
retf
xor
std
mov
add
(bad)
js
mov
cmps
les
mov
adc
jnp
cmps
pushf
jbe
(bad)
jmp
ds
or
ja
jmp
pop
test
adc
ds
jp
(bad)
popa
dec
xchg
xor
mov
xchg
mov
fstp
fsub
or
and
or
push
sub
mov
push
and
aas
out
dec
movs
jmp
repnz
enter
add
int
repz
mov
aad
add
loop
cdq
adc
rcr
iret
sub
fmul
xchg
loop
cmp
mov
mov
pop
dec
ins
sub
push
sbb
mov
xchg
les
clc
push
stc
sub
clc
push
cmc
add
mov
xchg
add
jnp
les
push
xor
cmp
add
jmp
mov
sub
cmps
stos
adc
jmp
push
or
add
sub
(bad)
into
out
jnp
sub
push
lds
add
or
add
test
adc
aam
dec
mov
or
test
aaa
sub
or
pop
inc
jge
ret
cwde
sub
aad
adc
add
nop
daa
cmc
cmp
mov
mov
sti
mov
adc
aad
xchg
xchg
es
aam
cwde
xchg
ss
and
dec
stos
or
ret
mov
in
adc
jne
or
mov
daa
adc
loop
pusha
out
adc
gs
ins
cmp
(bad)
xor
sbb
pusha
fadd
ja
int
cmc
mov
pop
jbe
add
pop
pop
xor
dec
adc
adc
push
push
cmp
ret
ss
dec
push
mov
dec
test
push
sub
jne
adc
not
pushf
lods
jecxz
jmp
add
push
(bad)
pop
pop
sub
or
and
add
mov
xor
paddb
lods
mov
les
hlt
mov
inc
fidivr
retf
mov
sahf
frstor
xchg
add
jbe
mov
data16
out
ret
mov
(bad)
adc
lock
sub
cli
icebp
ret
add
sub
(bad)
in
cmp
jge
or
retf
dec
mov
pop
cmp
inc
int3
test
je
lea
(bad)
mov
clc
sbb
add
scas
ja
pop
dec
cli
lock
push
push
push
leave
add
loop
and
xor
sahf
add
dec
or
xchg
mov
push
js
fucomip
repz
push
jb
mov
iret
icebp
add
shl
nop
inc
sub
add
retf
mov
push
add
dec
add
xor
icebp
pop
ja
xor
(bad)
add
dec
mov
and
test
pop
dec
pop
shl
or
xor
cmps
sub
jmp
in
mov
lock
mov
pop
push
lods
shr
add
ficom
cmp
ror
jp
mov
lock
rcl
and
pop
aam
inc
mov
or
mov
or
mov
rol
sub
adc
sahf
sub
or
repnz
push
mov
rol
pop
cmp
cwde
aam
and
sti
stos
aam
loop
scas
mov
push
push
mov
sub
push
call
test
movsx
mov
push
jne
add
cmp
jae
push
inc
xchg
xor
cmp
cmp
repz
add
push
lea
adc
fisubr
push
add
push
cmp
adc
adc
add
addr16
push
ret
jp
mov
lahf
cmp
xor
push
or
out
adc
jp
ror
sub
sub
or
adc
sar
and
stc
mov
(bad)
in
cmp
sbb
push
push
call
adc
sti
clc
pop
retf
pusha
inc
stc
mov
push
sub
or
and
mov
jmp
mov
mov
adc
leave
inc
dec
sub
adc
sahf
fisubr
inc
and
sub
pop
movs
loopne
adc
icebp
or
fmul
test
jno
push
cmps
xchg
inc
(bad)
les
jne
cld
vcvtps2dq
inc
push
sub
add
inc
mov
movs
js
sbb
cmp
xor
aad
dec
call
pop
pop
cmps
dec
pop
push
push
fwait
(bad)
or
jmp
mov
ja
xchg
add
inc
(bad)
jb
(bad)
iret
push
cmp
sbb
dec
mov
js
push
mov
cmp
call
mov
pop
sbb
push
je
push
in
xor
out
xchg
xchg
dec
push
icebp
or
gs
adc
adc
stos
jmp
pop
fstp
or
jmp
or
icebp
call
xchg
jo
pop
sar
and
push
(bad)
fild
test
ret
add
xchg
fndisi(8087
xor
ret
cmp
fld
ja
add
xor
or
mov
push
adc
xchg
int3
mov
nop
lock
out
inc
or
inc
add
inc
push
mov
push
jo
movs
or
lods
push
lock
xchg
mov
mov
jo
cmp
(bad)
xchg
mov
mov
push
mov
sar
lods
push
xor
xchg
add
ja
push
nop
ret
mov
daa
fadd
addr16
mov
pop
push
sub
cmp
xchg
inc
push
call
jmp
movs
imul
aam
or
dec
and
imul
pushf
xor
jge
xchg
cmp
gs
nop
cs
adc
ja
jb
std
pop
add
call
cmp
push
push
xchg
int3
loopne
or
pop
cld
stos
push
and
cwde
inc
pop
movs
and
ret
sahf
dec
popf
je
add
pop
xchg
pushf
push
inc
add
adc
inc
adc
in
jo
daa
or
nop
mov
fdivr
or
sub
pusha
mov
mov
test
push
loope
mov
add
lea
int
sbb
ins
pop
aaa
push
push
retf
push
mov
cmp
xor
mov
(bad)
sbb
arpl
or
add
mov
sub
cmp
xchg
jg
inc
add
dec
cmp
xchg
or
xor
sub
mov
out
icebp
mul
lods
adc
mov
out
add
xor
push
call
call
loop
cdq
enter
add
bound
sub
cmps
cmp
aad
jle
pop
enter
mov
or
jnp
add
loop
cmp
add
mov
test
lock
xchg
mov
mov
daa
add
adc
call
in
dec
loope
and
push
adc
add
push
or
leave
jle
mov
xor
mov
push
sbb
sub
cwde
mov
cwde
or
xchg
mov
push
push
pop
xor
xchg
inc
out
or
sbb
jmp
repz
pop
fwait
adc
stc
inc
jne
or
jmp
popa
sub
dec
repz
add
push
cmp
jmp
popa
scas
mov
es
jmp
push
pop
xor
push
retf
push
jmp
inc
movs
pop
imul
inc
ins
dec
imul
sbb
jb
adc
jae
test
in
add
or
add
inc
xor
leave
push
sub
xlat
sbb
call
and
add
xchg
in
add
add
push
inc
daa
mov
cmp
and
push
add
out
inc
dec
dec
pusha
or
rcl
movs
inc
mov
movs
add
or
repz
sahf
cmps
dec
push
and
ficom
mov
jbe
dec
dec
push
jno
or
mov
adc
cwde
arpl
clc
outs
mov
add
inc
xor
mov
mov
xor
xchg
add
push
push
cmp
into
xor
sahf
sti
ror
dec
mov
add
add
retf
cwde
ror
ss
inc
add
xchg
ins
cwde
call
xchg
adc
jne
ins
pop
lea
out
dec
in
push
xor
pushf
lock
push
imul
dec
inc
into
popf
mov
adc
fisub
ret
jne
adc
or
sbb
shl
test
js
dec
xor
lods
sub
add
push
inc
loopne
shr
std
scas
not
jnp
loopne
push
xor
sbb
pop
fisub
sub
pushf
jmp
jo
nop
test
push
pop
ret
or
dec
add
push
enter
xchg
pcmpeqw
push
push
sbb
add
or
inc
push
push
sub
mov
js
add
push
sub
mov
and
mov
mov
fmul
add
pop
fmul
call
add
mov
(bad)
cli
adc
mov
cwde
in
adc
loope
and
push
xor
sbb
rcl
jne
sub
neg
pusha
pop
cs
and
adc
pop
inc
ror
mov
mov
and
add
or
mov
inc
cmp
pop
lock
push
push
call
adc
add
xchg
or
mov
mov
or
mov
add
xchg
pushf
sar
outs
mov
mov
cmp
outs
mov
enter
enter
cdq
cmc
or
mov
jl
scas
test
shl
lock
mov
call
mov
mov
mov
mov
ins
or
mov
jmp
les
fiadd
push
test
js
clc
jl
cwde
cli
into
pusha
mov
mov
pop
popf
shl
sti
cmp
mov
pop
pop
and
test
loop
cmp
js
mov
add
cmp
dec
push
add
jb
sub
mov
pop
jno
xchg
js
ret
pop
mul
stos
sahf
daa
pop
je
sbb
cmp
xor
es
jge
sub
clc
ja
mov
enter
push
aaa
dec
mov
mov
cmp
rol
add
xor
cmc
sub
cwde
leave
mov
cmp
mov
fadd
mov
dec
in
cmp
ja
jne
inc
retf
or
inc
mov
fxtract
scas
jbe
ja
push
push
sbb
adc
ret
jo
cs
add
or
inc
and
pop
cmps
pushf
cs
dec
je
scas
call
xor
sbb
into
add
adc
adc
sub
mov
icebp
jl
fst
icebp
lock
(bad)
retf
and
pop
imul
inc
mov
in
dec
fscale
xor
mov
pop
xor
data16
jecxz
jbe
adc
(bad)
outs
mov
cld
jne
loope
fs
(bad)
int3
fld
cmp
xlat
dec
push
pop
loopne
(bad)
cmp
out
inc
or
inc
or
sahf
cmp
stos
jl
call
xor
sub
cmp
or
je
xchg
fnstcw
ret
outs
inc
sti
sub
push
imul
shl
xchg
push
add
sbb
pushf
sti
daa
sbb
adc
lods
mov
(bad)
lock
inc
pushf
lahf
shr
cmp
into
inc
ret
push
daa
add
and
cmp
sti
jp
add
imul
push
call
mov
ret
nop
and
mov
add
push
cli
dec
xor
push
adc
push
call
dec
and
mov
fstp
push
lahf
test
lea
sub
rcr
cwde
xchg
js
cmp
mov
pop
mov
mov
push
adc
fdivp
push
ss
and
leave
and
adc
mov
fwait
add
mov
aam
adc
xor
mov
inc
pop
pop
sub
lds
cmp
push
loopne
mov
push
call
adc
push
call
inc
fsubr
or
shl
aam
js
add
ins
mov
mov
or
ret
aam
adc
sub
out
cld
imul
lea
mov
pop
and
cmp
pop
mov
sub
sub
sbb
lock
call
shl
jbe
jl
stos
aam
push
popf
sub
xlat
xor
and
push
mov
mov
fstp
add
loopne
cmp
clc
or
push
mov
addr16
lahf
sbb
xchg
push
rcr
rol
or
jae
inc
scas
xor
lock
jp
call
mov
ret
xchg
adc
test
mov
mov
push
adc
and
adc
sub
fdiv
fcom
sbb
sub
add
mov
mov
push
jae
sbb
pop
and
xor
or
fmul
cmp
lock
adc
fld
outs
mov
sbb
xor
cmp
lods
sub
rol
or
aas
cmp
mov
adc
sub
and
add
pop
push
pop
scas
mov
icebp
sbb
adc
fimul
shr
push
and
popf
inc
inc
rol
mov
imul
imul
add
(bad)
pop
or
mov
and
jae
lea
lods
sub
mov
cmp
rcl
adc
outs
push
test
cmp
jle
mov
dec
add
cmp
cmp
inc
push
loope
add
ds
inc
pusha
jmp
loope
icebp
clts
jge
dec
cmp
push
clc
aad
xor
mov
cdq
add
pop
xor
add
add
pop
mov
and
inc
or
jae
dec
sbb
mov
arpl
lods
shl
adc
ins
add
or
rol
inc
jo
mov
je
(bad)
rol
(bad)
adc
retf
jmp
xchg
sahf
xchg
jb
cmp
add
aas
cmps
sbb
push
movs
mov
add
jb
adc
fmul
xchg
enter
mov
or
inc
jmp
loopne
movs
or
pop
inc
call
and
ret
dec
fcomp
imul
std
loopne
add
jle
adc
cld
or
xlat
and
loopne
and
popf
adc
jge
lock
inc
add
movs
sub
icebp
jmp
cmp
lahf
call
arpl
sbb
xor
(bad)
aam
sbb
mov
cmp
sub
xor
mov
inc
add
jb
push
add
call
sbb
fs
test
add
ss
add
jae
js
mov
sub
and
fistp
sbb
jne
(bad)
jne
sahf
pop
fmul
(bad)
inc
cwde
inc
retf
and
push
retf
sub
repz
xchg
dec
mov
or
stos
add
mov
add
sbb
xchg
sub
js
dec
inc
fcom
ror
test
jmp
jb
cmp
rcl
cmp
sar
push
call
sub
mov
sbb
and
add
addr16
call
lods
xor
fcom
rol
cdq
mov
sbb
scas
cld
dec
loop
arpl
lea
fisttp
jne
aad
cld
mov
shl
fst
add
push
mov
add
and
ja
mov
xlat
xor
mov
sti
sbb
lea
inc
xor
out
mov
mov
cmp
or
test
jmp
pop
sub
pop
jmp
adc
mov
or
push
or
sahf
loope
mov
sub
lods
xchg
pop
add
rol
mov
ret
test
je
(bad)
jae
fwait
xor
mov
mov
jne
repnz
mov
push
sub
push
cmp
adc
mov
mov
push
push
ret
addr16
in
outs
stos
fucomi
out
ss
add
addr16
ja
fidivr
xchg
sbb
add
xlat
inc
daa
xor
cs
push
sbb
fsub
dec
mov
int
(bad)
and
in
fst
ins
cmp
nop
(bad)
xchg
and
cmp
xchg
fldcw
mov
out
ja
or
jp
xchg
ja
cmp
adc
rcr
cmp
push
dec
js
bound
or
dec
adc
mov
xchg
mov
push
push
sbb
sbb
imul
mov
add
cmp
push
add
bound
sbb
inc
nop
mov
movs
adc
add
cmp
sub
shl
in
outs
ror
mov
into
dec
sbb
pop
push
ss
or
jge
cmp
push
add
push
jecxz
fisttp
loope
sbb
add
mov
lods
or
enter
ret
cwde
jmp
xor
pop
pop
cmps
ins
adc
leave
sbb
sbb
int
xor
not
in
(bad)
out
cmc
jg
jl
xchg
pop
mov
sahf
int
ror
cmps
push
push
push
push
jbe
inc
ins
enter
xlat
jmp
adc
adc
aaa
retf
pop
mov
cs
lds
out
fidiv
adc
add
and
cmp
jecxz
stc
or
je
test
xchg
inc
mov
push
aam
or
repnz
adc
xchg
imul
test
mov
mov
mov
arpl
mov
mov
mov
and
pop
popa
mov
sbb
sub
mov
or
or
and
and
push
cmp
push
cmp
lock
add
pusha
xchg
ins
bound
jle
xchg
sbb
arpl
loopne
cmp
pop
bsr
cmp
inc
and
push
push
or
add
lock
outs
sbb
cdq
or
shl
add
mov
or
scas
adc
push
or
retf
daa
out
shl
enter
and
fs
push
inc
jp
addr16
push
rcl
mov
jle
cmp
(bad)
in
cmp
or
sbb
push
adc
movs
dec
mov
test
adc
xchg
pop
xor
adc
(bad)
stc
fnstsw
or
dec
sahf
add
popw
outs
adc
dec
inc
xchg
jno
and
repz
add
cmp
xor
pop
jmp
or
std
cmp
inc
mov
add
add
jmp
or
mov
add
xchg
and
xchg
sub
setbe
scas
mov
mov
fisttp
fistp
or
(bad)
movzx
and
fwait
add
jnp
xchg
sub
dec
fcmovne
ss
cld
outs
adc
jne
push
jle
push
jns
push
push
enter
sbb
push
pop
add
cmovge
xor
add
ret
push
jbe
enter
test
(bad)
push
lods
mov
push
inc
push
scas
(bad)
les
movs
stos
mov
mov
xlat
rcl
cdq
lds
rol
jmp
inc
add
jl
push
sbb
fild
xor
pop
pop
cmp
cdq
push
aaa
retf
in
and
and
sbb
cmps
push
and
out
xor
retf
inc
inc
and
les
inc
inc
call
sbb
neg
dec
enter
rcr
inc
clc
mov
mov
mov
xor
pop
and
loopne
sti
mov
jmp
mov
push
pop
or
fstp
push
jmp
adc
sub
inc
or
sbb
jbe
ret
ficom
mov
out
inc
ds
sbb
ret
add
inc
ja
adc
dec
mov
icebp
mov
adc
movs
pop
dec
rcl
or
test
lock
pushf
mov
push
adc
push
int
lock
mov
leave
add
inc
push
pop
fist
mov
pop
movs
gs
add
mov
mov
dec
push
sub
out
adc
outs
jge
mov
add
adc
jmp
push
daa
xchg
mov
and
icebp
test
rcl
adc
sub
cwde
cmp
(bad)
mov
add
inc
jb
sub
cmp
jb
and
pusha
je
pop
and
xchg
push
in
sbb
pop
addr16
add
add
add
push
das
cmp
jp
(bad)
pop
cmp
mov
fcom
push
add
sahf
(bad)
stos
inc
xchg
je
shl
jecxz
mov
inc
rol
cmp
jae
or
pushfw
push
dec
mov
pop
popa
arpl
lea
inc
in
in
jle
mov
dec
mov
cmp
sub
cmps
adc
add
push
mov
xchg
xor
pop
adc
hlt
sbb
mov
es
(bad)
stos
aad
add
or
mov
jo
or
aaa
pusha
cmp
aam
adc
loopne
int3
sub
push
mov
test
adc
js
fs
cmp
les
mov
pusha
push
call
jne
adc
dec
ret
pop
adc
mov
mov
add
cld
cld
cld
aam
cmp
aas
xor
adc
(bad)
shr
push
es
int3
xor
call
sub
push
jbe
test
cli
xor
and
jo
xchg
popa
or
add
dec
test
push
mov
mov
dec
lods
or
mov
or
push
loopne
cmp
mov
xchg
sbb
push
repz
add
rcr
xchg
dec
pop
adc
jo
leave
in
pop
dec
add
pusha
adc
add
and
(bad)
xor
test
adc
fild
pop
adc
int3
mov
pusha
add
mov
push
mov
sub
push
adc
aaa
out
pop
mov
mov
push
or
aam
pusha
pop
jmp
and
dec
jle
cmp
sahf
js
cmp
adc
movs
add
mul
xor
sbb
dec
jecxz
add
cmp
daa
pop
mov
std
movs
outs
or
mov
inc
dec
xchg
fs
add
add
and
add
inc
adc
lods
rol
inc
sbb
add
pop
clc
jl
jmp
jne
cwde
mov
add
mov
push
sar
adc
push
inc
shr
shl
fdivr
lea
sub
mov
and
sbb
dec
cmp
sahf
xchg
jno
rol
add
mov
xchg
inc
cmp
call
jne
int
or
add
ins
movs
cmp
sbb
cmp
sub
mov
mov
cmp
mov
mov
sbb
mov
or
enter
imul
fdiv
jne
cmp
or
jne
inc
xor
dec
not
or
dec
mov
mov
sbb
sbb
add
test
push
pop
out
mov
sub
cmp
hlt
hlt
add
or
push
ror
call
(bad)
cmp
fmul
mov
fst
xor
mov
pushf
xchg
inc
sbb
ja
or
push
push
lock
jbe
and
test
jp
xor
stc
js
cmp
push
push
sbb
aas
inc
push
dec
push
stc
pop
cmp
retf
mov
add
adc
ret
repnz
lock
xor
icebp
mov
(bad)
dec
cmps
clc
hlt
cmp
push
jmp
pop
mov
sbb
ds
pop
adc
sbb
mov
and
push
and
xchg
ret
nop
sahf
mov
sbb
inc
sub
push
or
xchg
or
hlt
xchg
cmp
jbe
add
clc
xor
mov
cmp
mov
add
xor
inc
pop
inc
fimul
inc
lds
popf
inc
popf
popf
fst
push
ret
rol
enter
addr16
push
cmp
add
xchg
adc
sbb
sar
retf
call
add
push
push
test
out
or
ret
leave
push
push
fistp
jns
mov
adc
leave
and
mov
jecxz
jne
mov
pop
enter
xor
inc
in
cld
adc
or
or
pop
xchg
test
cli
loope
mov
movd
jmp
xchg
pop
fist
enter
or
add
loopne
add
push
push
pop
pop
mov
xchg
add
jmp
push
add
cmp
jge
pop
inc
inc
jno
jg
jle
push
jg
fwait
mov
jmp
push
mov
sbb
cmps
lock
pop
seta
jg
adc
sub
mov
add
repnz
lock
push
add
in
pop
jne
pop
or
sub
test
test
(bad)
dec
test
sbb
mov
jmp
lock
fild
mov
push
lock
jnp
dec
add
adc
loopne
lea
cmp
sub
dec
inc
lods
xor
jmp
test
or
lds
jmp
stc
or
mov
jmp
mov
lea
sti
pop
es
or
and
xor
fcomp
cmp
leave
jmp
lahf
fiadd
lods
push
and
pop
add
adc
call
jbe
push
jmp
and
and
add
push
cs
imul
sub
pop
ja
lea
mov
inc
sub
rcl
cld
das
fmul
inc
loopne
add
jle
cmp
jle
sbb
add
inc
inc
js
jbe
mov
xchg
mov
call
or
fcomp
add
adc
loope
arpl
mov
mov
test
push
or
add
clc
call
xchg
call
mov
pop
push
shr
xchg
sub
jae
jmp
les
jo
xlat
adc
test
push
jmp
ja
push
in
pop
fsubr
add
push
daa
mov
aam
fld
mov
cmp
add
ss
mov
data16
adc
or
movs
ret
pop
imul
mov
push
inc
inc
or
fcmovb
pushw
out
or
imul
push
scas
adc
push
pop
inc
cmovs
movs
test
and
dec
add
nop
push
adc
sbb
lods
gs
pop
fiadd
xor
mov
and
add
fdivr
aaa
ret
mov
xor
imul
out
xchg
push
rcl
aam
mov
cmp
cmp
dec
xchg
push
sub
call
imul
aam
cmp
imul
mov
lahf
xor
pop
push
and
shr
pop
dec
cmps
mov
mov
lock
push
call
test
fwait
ror
push
inc
xchg
xchg
mov
inc
aaa
cmc
add
pop
shr
push
sbb
xchg
pop
jo
ja
inc
(bad)
mov
loop
aaa
les
mov
xchg
in
add
jg
stc
add
xchg
mov
add
jno
scas
xor
das
pop
leave
mov
push
nop
popf
ret
dec
test
pop
imul
sub
adc
ror
fld
xor
arpl
dec
mov
(bad)
loopne
mov
jbe
xor
adc
adc
inc
mov
push
test
sbb
sbb
sbb
adc
daa
add
(bad)
dec
pop
or
push
add
adc
loope
mov
jo
mov
dec
rol
adc
push
xor
add
(bad)
retf
jno
mov
jo
stos
mov
hlt
and
cmp
test
mov
cmp
and
hlt
outs
jecxz
aas
or
sbb
aas
cli
xchg
test
cmp
pop
cwde
adc
adc
adc
sub
out
shr
inc
mov
mov
pop
cmp
jbe
popa
test
mov
jg
sub
add
es
loopne
add
test
loopne
or
or
arpl
adc
(bad)
daa
or
pop
mov
les
dec
ins
pop
or
xchg
(bad)
(bad)
in
jb
jo
sub
jmp
lods
cmp
iret
arpl
adc
sub
xor
push
add
sbb
out
adc
(bad)
and
and
mov
scas
add
retf
enter
ss
aaa
or
push
xor
popf
mov
mov
and
jo
push
loope
adc
mov
lock
xor
outs
outs
inc
test
or
je
add
popa
push
mov
mov
add
sti
or
shl
add
xchg
fsub
test
sub
mov
sub
inc
xchg
sbb
outs
push
adc
add
jne
loope
lea
stc
lock
adc
lods
push
mov
or
adc
iret
sbb
lock
jae
mov
outs
mov
ret
enter
lea
pop
xchg
pop
add
push
pop
retf
add
(bad)
ja
adc
jb
ja
cmp
out
in
in
xor
push
jb
dec
rcr
or
imul
sbb
add
mov
add
push
xor
cmp
(bad)
popf
lock
call
cmp
or
das
mov
add
ds
mov
out
icebp
rcl
fiadd
inc
or
xor
push
xor
add
adc
mov
aaa
inc
retf
aad
or
push
jl
push
push
xchg
xor
dec
mov
es
xchg
mov
call
(bad)
or
leave
sbb
sub
or
xchg
mov
sbb
add
cwde
add
mov
sbb
loopne
rcr
ins
hlt
add
ret
sbb
push
jecxz
icebp
or
dec
cmp
adc
(bad)
test
push
push
call
cmps
shr
pop
int
ins
stos
pop
add
arpl
xor
push
mov
inc
pop
xor
dec
add
loopne
adc
movs
lock
dec
adc
icebp
lock
mov
(bad)
mov
jns
lods
jg
call
mov
hlt
sub
je
sar
mov
or
mov
(bad)
and
push
arpl
dec
mov
(bad)
jmp
dec
push
push
mov
mov
xor
jbe
xor
push
xor
inc
inc
mov
pop
arpl
mov
dec
popa
dec
loop
stos
adc
daa
jg
fcom
sbb
sbb
(bad)
push
add
pop
pop
inc
jmp
ror
lock
mov
and
aas
add
sbb
cmp
dec
jge
sub
jno
jg
ret
cmp
std
cli
cmps
mov
cmp
out
out
ja
test
sub
into
into
add
ficomp
cmp
pop
addr16
nop
push
call
fisub
pop
mov
(bad)
jl
add
outs
mov
out
mov
iret
pop
pop
sbb
cmps
mov
enter
xchg
mov
dec
je
and
rcl
mov
push
pop
adc
dec
jmp
nop
pop
aaa
mov
popa
add
cmp
popa
out
dec
inc
and
fsub
mov
push
rcr
outs
sub
loopne
jmp
jo
dec
push
jmp
cmp
ins
in
call
cmp
sbb
cwde
sahf
push
sub
push
cwde
sbb
clc
cs
mov
in
adc
and
dec
js
sub
sbb
in
test
call
sub
cmp
ret
(bad)
inc
pop
loopne
jmp
or
cmps
call
push
xor
ret
rcr
push
lods
iret
or
sbb
xchg
cmp
push
retf
out
in
test
rcr
and
les
add
ja
mov
push
hlt
int3
adc
xchg
add
mov
ror
mov
adc
cmp
je
aaa
jnp
jbe
add
js
sti
push
loopne
rol
mov
sar
add
push
cmp
add
dec
clc
or
sbb
call
sti
dec
mov
jge
push
leave
push
and
loop
pop
mov
add
mov
lds
jmp
dec
rcl
push
in
xor
outs
mov
and
xchg
push
add
mov
cmp
jnp
int3
jl
addr16
lods
jnp
pop
out
pop
cmp
cld
lock
lea
cmp
or
cli
adc
retf
aam
cmp
push
cmp
dec
aas
pop
inc
retf
mov
pop
pop
pop
pop
mov
mov
add
xor
sub
pop
cmp
in
dec
dec
aaa
es
or
and
call
lahf
xchg
test
or
stos
rcl
loopne
cdq
adc
cmp
ja
sbb
bnd
mov
popf
push
push
push
jb
add
loopne
stos
xchg
lods
repz
mov
xchg
or
sub
inc
mov
ds
shr
mov
push
push
or
push
pop
or
aam
cmc
pop
add
retf
popa
cmps
pop
mov
cmp
ror
and
mov
add
xor
xor
add
xchg
mov
sbb
mov
xchg
push
or
push
bound
out
sub
dec
inc
add
cmp
stos
push
mov
mov
sub
jecxz
cli
std
je
inc
adc
scas
sub
leave
mov
cmp
add
add
xor
pushf
das
or
shl
clc
lock
or
mov
push
lock
imul
or
xchg
scas
and
inc
in
es
sbb
ret
xchg
sub
les
sar
ret
out
or
shr
es
je
dec
cdq
pop
bound
fcmovnu
les
pop
jns
shr
dec
adc
sbb
jbe
add
inc
daa
and
loop
xor
in
inc
cmc
mov
js
add
mov
vmulps
inc
jge
sar
sar
push
call
out
cmps
(bad)
xor
(bad)
in
and
arpl
push
push
cmp
das
es
cmp
mov
xor
and
test
mov
add
(bad)
aam
call
lea
xchg
inc
pop
jns
jno
stc
loopne
jb
out
push
or
call
sbb
mov
jmp
xchg
call
mov
je
daa
sbb
ror
push
dec
dec
pop
test
xchg
xchg
lds
push
cwde
rcl
adc
wbinvd
test
stc
xor
push
ss
jge
or
aam
fnsave
and
stos
cmp
push
mov
push
fsubr
dec
jmp
or
adc
retf
jle
movs
retf
add
repnz
ja
or
or
sub
lea
inc
pop
les
in
sar
and
or
sbb
dec
xchg
push
fadd
or
or
or
push
jmp
xchg
adc
mul
adc
or
shr
int3
test
add
mov
add
ins
sub
pop
add
cmps
lods
dec
sub
jo
mov
sbb
popf
xor
sbb
lods
sbb
sbb
es
push
dec
and
jmp
loop
cdq
in
xor
mov
push
add
adc
lods
adc
dec
add
imul
outs
cmp
fist
mov
sbb
xchg
mov
sub
push
inc
cmps
add
dec
lea
xchg
push
xor
sub
pop
xchg
pop
in
fisub
dec
dec
pop
sbb
(bad)
addr16
sbb
inc
bound
pop
popa
loopne
jb
add
cmp
jne
cmp
sbb
das
movs
xchg
jecxz
dec
mov
or
xchg
scas
cmps
inc
scas
leave
pop
std
addr16
pop
and
out
cmps
data16
enter
push
jmp
add
jge
push
xchg
add
mov
mov
cwde
sbb
sub
shl
push
inc
lock
sbb
push
not
sub
add
adc
push
sar
lea
xor
and
sahf
pop
and
mov
add
lock
inc
fadd
add
stos
mov
mov
add
sahf
enter
enter
or
callw
pushf
xchg
call
and
mov
jns
xor
sbb
movs
dec
push
aaa
cmp
cmp
jecxz
loope
mov
mov
je
mov
call
cmps
call
fsubr
into
inc
iret
mov
rol
mov
add
xor
loope
sub
ss
or
and
lea
mov
lods
(bad)
pop
xchg
rcl
test
xchg
lods
fwait
lea
cmp
adc
cmp
int3
xor
fidiv
sub
lods
add
xchg
sbb
daa
ds
pushf
std
or
lea
(bad)
pop
pusha
nop
adc
jo
add
leave
retf
(bad)
cmp
sub
inc
loope
cs
adc
push
jmp
mov
inc
add
and
ins
lahf
mov
ins
sahf
lods
test
cmp
mov
ins
js
push
dec
sbb
adc
dec
cs
fldenv
bts
push
inc
push
jb
push
loopne
cmp
xor
inc
adc
mov
mov
gs
(bad)
xchg
xchg
cmps
sbb
(bad)
add
mov
hlt
or
fsubr
cmp
sub
aas
daa
adc
xor
or
add
push
sbb
(bad)
and
pop
movs
cmp
pop
arpl
add
shl
scas
ja
data16
mov
retf
pop
or
cmc
cmp
xor
dec
popf
into
and
and
push
mov
rcl
cmc
or
pop
and
push
ds
sar
(bad)
aad
or
ja
mov
(bad)
and
jmp
adc
jo
mov
inc
pop
pop
add
pop
dec
mov
and
xchg
mov
pop
inc
ss
mov
push
movs
add
imul
xchg
sbb
sbb
dec
jmp
push
stos
push
fldcw
add
sbb
rol
inc
mov
add
xor
sbb
sti
mov
mov
mov
push
mov
out
aad
mov
sub
enter
cmp
lods
cli
pop
out
pop
fiadd
adc
test
sahf
mov
rcr
and
fadd
icebp
cmp
or
lea
mov
cwde
pop
xlat
mov
cmps
js
pop
paddb
pop
push
call
(bad)
inc
mov
aas
scas
xor
pop
xchg
lea
out
addr16
pop
stc
add
and
int
ret
xchg
sub
xchg
pop
aaa
push
dec
cmp
pop
xchg
shl
in
imul
pop
popf
mov
movs
out
rcl
push
popf
mov
sahf
mov
xchg
out
test
mov
shl
or
xlat
pop
test
jb
push
inc
in
in
cdq
sub
imul
xchg
mov
push
jp
call
sub
and
add
mov
jecxz
push
fs
adc
xor
imul
lods
xor
mov
dec
aam
sub
out
outs
cmp
inc
in
loopne
sbb
cmc
sbb
add
jne
mov
sub
inc
mov
inc
or
add
movs
adc
repnz
add
jbe
add
into
test
mov
cmp
shr
cwde
cmp
fs
fild
out
xlat
sbb
cdq
inc
push
sbb
test
call
add
xor
and
jne
pop
or
push
dec
mov
sub
test
in
les
dec
xchg
test
xchg
inc
cmps
stc
inc
mov
clc
ret
adc
arpl
jo
sub
jg
sahf
sti
sbb
sbb
popf
ins
mov
in
pop
cmp
clc
mov
jae
adc
push
pop
in
mov
test
fs
call
fidivr
mov
test
fld
dec
mov
mov
pushf
out
jo
je
dec
lods
or
xor
adc
sub
mov
mov
cmp
xor
xchg
mov
and
movs
add
xchg
or
pushf
and
and
repnz
mov
cmp
loope
add
std
adc
push
das
adc
mov
dec
je
xor
jp
pop
fbstp
pop
pop
xchg
pop
nop
push
adc
mov
popa
sub
dec
sbb
(bad)
mov
or
jmp
add
pop
jbe
jmp
les
maxps
aaa
loopne
adc
jmp
icebp
mov
mov
mov
clc
outs
and
mov
ror
call
nop
or
das
dec
pop
jne
cmp
gs
(bad)
xor
add
cmps
idiv
push
(bad)
ret
pop
ja
data16
inc
ror
pop
call
sbb
lock
xor
les
sbb
adc
dec
mov
adc
adc
test
and
mov
xchg
mov
rol
ja
jno
adc
imul
dec
mov
sbb
movs
cwde
and
arpl
push
adc
mov
jae
mov
dec
sub
daa
call
mov
popa
and
push
sbb
sbb
inc
cmp
nop
or
and
xchg
dec
dec
mov
push
add
sub
add
icebp
xchg
push
pushf
mov
xor
mov
mov
(bad)
js
or
sbb
ds
mov
jge
cmp
ss
xor
jmp
cli
nop
rcl
mov
ret
(bad)
mov
pop
xchg
rol
push
mov
ror
xor
pop
add
aas
and
pop
mov
mov
ins
adc
push
ss
jg
dec
xchg
xor
xchg
xor
push
call
push
dec
add
mov
xchg
inc
outs
and
and
popf
pusha
in
push
xor
jmp
jl
cwde
sbb
cmps
shr
es
mov
xchg
data16
inc
jp
xor
sbb
xor
jne
sub
mov
mov
mov
cli
dec
pop
xor
jne
pop
xor
pop
and
lock
add
mov
js
sbb
mul
cdq
inc
push
inc
push
and
cmps
scas
lods
add
add
pop
jo
idiv
pop
fistp
call
loopne
or
jle
leave
js
pushf
sbb
inc
fwait
cmp
retf
addr16
sub
ins
loop
fsubr
sbb
jnp
mov
loopne
cmp
aam
sbb
mov
jbe
push
cmp
and
sbb
add
adc
cmp
sbb
pop
inc
sub
loop
rcl
pop
ja
scas
mov
dec
jl
xchg
test
mov
cmps
xchg
nop
xchg
or
add
mov
mov
jne
lds
iret
in
popf
add
push
fadd
leave
cmp
ds
mov
cwde
mov
and
or
cmps
inc
jl
arpl
add
add
out
or
or
push
adc
repnz
xchg
js
pusha
adc
push
mov
ror
mov
push
inc
rcr
leave
test
adc
inc
jb
push
icebp
pushf
fstp
pushf
add
test
call
es
popa
mov
into
iret
lea
xor
dec
pusha
stos
add
sbb
mov
arpl
mov
add
push
out
sub
pop
or
jne
repnz
and
sbb
or
push
jg
jbe
mov
jle
repnz
in
fistp
into
jbe
xor
ja
push
out
repnz
jp
and
neg
loop
inc
lods
jmp
and
xchg
mov
add
sbb
je
out
es
outs
inc
lahf
and
rol
lea
in
add
add
jmp
push
ret
lods
xchg
ret
cmp
or
lahf
mov
push
lea
callw
out
sub
or
ror
and
adc
sbb
nop
es
ror
loopne
mov
mov
xor
rcl
sbb
jmp
imul
sbb
jl
sub
in
inc
sti
and
test
sti
mov
ins
repnz
cmc
rcl
ss
jecxz
jg
cdq
ins
in
pop
ror
idiv
or
and
xchg
mov
(bad)
jns
dec
imul
push
mov
add
lea
mov
pop
test
adc
mov
pop
rcr
add
repz
mov
xchg
and
cmp
cmp
shl
fs
xchg
(bad)
pop
sbb
and
sbb
or
lds
jb
mov
sbb
add
dec
inc
adc
cwde
push
adc
clc
or
adc
pop
in
fsubr
dec
push
loopne
les
call
add
mov
sbb
call
jns
fs
or
pop
sbb
pop
mov
cld
jle
xor
cmp
in
std
sub
or
inc
sbb
clc
push
add
cmp
icebp
ja
pop
leave
ret
mov
in
add
ja
or
and
xor
rol
cmp
jg
(bad)
cmp
jmp
arpl
mov
loop
jo
jp
cmp
je
add
sti
test
out
(bad)
fnstenv
scas
movs
and
arpl
in
xchg
add
pop
sub
adc
and
pop
add
xor
rcl
sbb
add
xor
pop
jle
push
in
or
shr
jno
inc
je
push
cmp
arpl
and
cmp
dec
aad
add
and
mov
xor
xchg
into
jbe
push
out
clc
and
test
inc
add
add
mov
js
xor
push
lods
inc
loop
cmp
mov
adc
je
mov
mov
mov
cmp
push
loop
and
push
jo
jmp
add
mov
inc
ins
nop
add
push
pushf
outs
pop
sub
aas
pop
inc
inc
imul
xor
push
enter
mov
adc
dec
mov
out
and
inc
or
mov
cmp
ror
les
mov
test
inc
sub
add
test
mov
adc
test
pusha
out
sbb
ins
mov
or
mov
adc
ins
stc
pusha
lds
shl
fisubr
pop
pop
in
ret
xchg
jecxz
inc
cmp
loope
and
(bad)
cli
sub
pop
mov
fidiv
and
test
jl
and
fisubr
loop
add
mov
or
sub
imul
sbb
xor
adc
out
push
add
inc
das
sbb
mov
jmp
mov
add
(bad)
inc
retf
cwde
mov
xchg
sbb
hlt
ds
retf
call
mov
mov
mov
add
retf
in
cmps
(bad)
and
or
adc
cmp
ret
retf
push
inc
dec
mov
and
cwde
or
sbb
mov
sbb
and
cmp
cmp
call
xor
retf
dec
jle
inc
xchg
sub
(bad)
icebp
in
or
and
or
ja
adc
paddsb
push
inc
or
push
aaa
fcomp
pushf
xchg
nop
aaa
je
push
push
add
in
fadd
add
xor
rcr
icebp
enter
pop
adc
cmp
fs
mov
mov
and
cld
jg
sbb
sahf
and
dec
add
adc
movs
or
sbb
es
jp
mov
lea
cmp
or
push
cmp
inc
cmp
and
mov
inc
es
je
cmp
je
sbb
sbb
aam
mov
cmp
mov
mov
cmp
jo
inc
inc
inc
cmp
or
cmp
ret
sub
mov
sbb
push
push
popa
jmp
inc
pop
sbb
imul
and
adc
push
xchg
sbb
cdq
sub
arpl
mov
(bad)
ror
in
or
pop
adc
das
and
or
gs
scas
jle
inc
and
mov
sbb
jg
imul
repz
push
or
(bad)
out
lea
js
cmp
adc
es
mov
push
push
mov
adc
xchg
icebp
cmp
test
mov
add
sbb
adc
jbe
push
repz
adc
push
idiv
es
data16
sub
xor
dec
aas
push
adc
jns
test
in
or
mov
(bad)
ins
nop
sbb
daa
cmp
jecxz
mov
or
fs
pop
repz
retf
cmp
dec
aas
inc
popf
add
jp
call
jl
push
cmp
stos
pop
test
pop
jne
pop
cld
adc
push
push
das
adc
sti
jae
data16
dec
cmp
push
fmul
sub
push
cwde
adc
pushf
mov
repnz
inc
jns
or
fisub
aas
mov
movs
ret
xchg
xor
cmp
pop
loope
adc
push
sbb
or
lahf
jmp
sbb
ror
enter
pop
pop
aaa
adc
rcl
stos
call
adc
sub
cmp
mov
push
xchg
fwait
and
test
inc
mov
or
fidivr
mov
or
sbb
call
pop
add
or
pop
pusha
test
imul
mov
dec
shl
mov
and
mov
push
mov
sbb
out
push
movq
push
into
cmp
lahf
in
mov
lods
data16
adc
inc
aas
push
mov
jns
push
mov
cmp
add
xchg
in
mov
loope
ja
jne
je
pop
dec
scas
cmp
jne
ror
rcr
jmp
fst
adc
pusha
and
fild
xchg
cmps
inc
sub
push
mov
leave
xchg
adc
dec
xor
mov
jle
jl
aas
dec
inc
test
pop
leave
add
jmp
fwait
aam
add
and
sbb
xchg
test
push
scas
cmp
adc
mov
cmp
nop
and
dec
retf
mov
(bad)
add
aam
dec
lahf
add
addr16
push
push
aad
and
movs
(bad)
lods
push
cmp
add
daa
ins
jmp
push
nop
imul
(bad)
test
push
test
xor
inc
inc
mov
mov
iret
inc
movs
rol
inc
and
sbb
je
push
cmp
inc
dec
test
push
nop
push
add
sar
push
push
push
inc
push
inc
push
dec
xchg
in
and
not
ja
jmp
add
dec
sti
(bad)
(bad)
mov
out
adc
push
cmp
pop
add
and
xchg
das
pop
call
xor
mov
out
mov
call
(bad)
call
sbb
outs
enter
adc
shl
addr16
xchg
test
aaa
call
adc
cdq
sbb
push
aad
inc
lods
xchg
out
jmp
lods
cmc
adc
pop
sti
xchg
jo
fdiv
sub
daa
dec
mov
sub
mov
mov
je
push
xor
inc
ret
inc
add
inc
loopne
cmp
push
push
in
aad
and
or
jnp
mov
pop
cmp
dec
dec
jge
dec
dec
stc
mov
out
loope
sbb
rol
add
mov
xchg
lea
xchg
add
push
inc
mov
pop
or
ja
mov
xor
push
js
fcomp
mov
test
aas
add
add
call
fcompp
int3
inc
or
mov
ret
mov
shl
cwde
js
sahf
mov
test
cmps
and
and
rcr
jmp
pop
jbe
and
pop
jp
les
sahf
outs
adc
xchg
pop
xor
cmp
imul
loopne
rcr
sbb
es
push
mov
mov
int
data16
and
xor
cmp
std
popf
add
and
int3
rol
fcom
or
sub
cwde
shl
push
test
add
pop
add
xchg
cwde
pop
cmp
out
adc
cmp
test
xchg
adc
mov
lea
push
or
mov
inc
jns
mov
cmovle
or
and
es
popa
or
pop
test
push
and
add
jge
mov
and
iret
cmp
mov
add
mov
scas
out
jp
adc
stc
les
jne
inc
sub
mov
dec
or
leave
inc
lock
test
jne
cmp
pop
lods
aad
add
fwait
sub
cmp
je
inc
in
cli
pop
jne
add
ja
int3
pop
dec
cmp
cmp
test
jne
dec
sbb
loopne
sub
jg
outs
mov
sub
push
cmp
leave
push
inc
ja
(bad)
jge
out
jno
fild
call
or
fs
mov
mov
test
inc
sbb
cmps
sbb
cmp
and
call
add
or
or
xor
ficomp
outs
add
or
sub
cmp
adc
scas
cmps
(bad)
push
fiadd
call
mov
cmp
inc
pop
jle
popf
inc
sub
sbb
rcr
ffreep
cmp
and
cmp
add
ret
xor
ins
lea
push
inc
inc
xchg
cld
out
xchg
push
lea
loopne
adc
ins
test
outs
ins
sbb
or
faddp
cmp
ins
push
or
sub
(bad)
call
jmp
inc
mov
mov
xchg
pop
add
pop
xor
seta
(bad)
aaa
mov
and
inc
or
in
jo
mov
or
mov
ret
mov
mov
jnp
aas
cmp
xchg
mov
mov
cs
ret
fdivr
mov
int3
(bad)
dec
add
mov
imul
rcr
push
lock
pop
pop
loop
clc
sbb
repnz
jmp
or
jns
test
rcl
xchg
ss
sub
push
stc
es
dec
add
daa
jmp
and
fwait
push
jns
adc
ins
push
or
int
es
mov
rol
jmp
nop
(bad)
push
test
retf
int
push
xor
push
sub
hlt
iret
rcl
rcl
bound
push
test
cmp
push
mov
ret
adc
jmp
js
inc
nop
dec
mov
popf
pusha
push
jne
rcr
push
push
or
sub
cli
mov
ins
push
sbb
or
das
mov
adc
repnz
push
jmp
test
cmp
stc
pop
push
mov
jbe
adc
jmp
sub
push
fcom
and
adc
inc
jmp
mov
mov
movs
repnz
repnz
adc
xchg
dec
movs
inc
xlat
test
aad
sar
mov
rcl
lods
into
daa
dec
mov
xor
sbb
sbb
sub
xor
je
adc
pop
mov
pop
add
cs
xor
push
xor
inc
push
push
pop
pop
leave
mov
jns
cmp
in
call
inc
dec
gs
xlat
in
cmp
xchg
bound
mov
outs
or
cmps
sbb
push
cs
(bad)
add
aad
cmps
hlt
pop
sbb
call
mov
xchg
mov
adc
pop
pusha
or
test
pop
adc
test
cmp
xchg
mov
rcr
fprem1
imul
lea
xor
int
xlat
and
mov
sub
cs
outs
popa
adc
adc
xor
cmp
push
add
adc
adc
sub
enter
mov
call
rcr
xor
or
mov
repnz
push
cmp
add
cmp
mov
enter
das
clc
test
and
lods
jge
add
mov
fidiv
setl
push
loopne
add
js
dec
loope
dec
gs
and
adc
lods
lods
mov
fidiv
mov
mov
sbb
add
mov
pop
cs
out
loopne
(bad)
aam
aad
hlt
lods
push
aad
and
push
mov
sti
sub
and
push
add
pusha
cld
inc
out
rcr
add
sbb
movs
adc
mov
push
mov
or
pop
aas
(bad)
xor
jno
dec
pop
push
pop
adc
outs
add
jns
popa
add
mov
add
leave
mov
ret
ret
not
sub
lock
sbb
push
das
int3
test
lahf
inc
jecxz
sub
jmp
mov
xchg
cs
sub
popa
nop
call
loopne
sbb
loopne
leave
or
rol
jo
test
xor
and
jbe
and
sbb
in
ror
iret
and
ret
in
rcl
loopne
loop
xchg
or
or
shl
mov
inc
and
adc
loope
rol
and
jmp
sbb
adc
outs
xchg
xor
push
add
cdq
adc
jo
xor
push
push
movs
mov
int3
sbb
aam
push
(bad)
lods
jl
mov
cld
jmp
les
cmp
sbb
jmp
fistp
jge
mov
popa
dec
dec
test
push
sbb
adc
mov
pop
sbb
retf
jne
push
inc
sbb
add
dec
mov
lds
and
mov
push
push
mov
test
in
jns
mov
push
sbb
xor
fwait
xchg
xor
dec
pop
jmp
mov
and
add
push
clc
cmps
or
pop
push
add
pop
mov
mov
xor
and
pop
adc
adc
sbb
jmp
xor
push
push
add
adc
mov
std
out
xlat
cmp
jbe
and
inc
dec
lods
xor
out
push
leave
ins
je
mov
mov
xor
sub
adc
dec
ins
add
dec
pop
mov
pop
test
sub
or
les
xchg
or
xor
pop
in
push
jmp
push
push
jb
adc
dec
iret
or
add
iret
call
test
xchg
xor
mov
(bad)
js
jmp
cwde
adc
adc
adc
fld
push
push
push
xchg
mov
mov
sbb
shl
add
out
add
dec
jb
push
adc
push
cdq
shl
add
lock
and
jne
adc
push
push
cmps
jecxz
mov
inc
and
push
push
cwde
cmp
lea
and
and
mov
xchg
(bad)
and
mov
ret
sub
pop
sti
jp
sbb
movs
imul
adc
inc
sbb
mov
add
push
xchg
lods
mov
and
add
pop
(bad)
(bad)
daa
cs
sub
(bad)
pusha
leave
pop
and
pusha
jecxz
inc
mov
mov
mov
jo
dec
add
mov
shr
and
daa
and
std
adc
call
mov
push
and
xchg
mov
adc
jg
pushf
pusha
jnp
mov
add
or
sub
add
dec
mov
add
repnz
add
call
jno
mov
push
cmp
dec
sbb
call
loope
sub
sbb
test
lahf
adc
les
cmp
call
xor
and
in
repnz
jmp
push
(bad)
cmp
xchg
mov
jl
push
push
or
out
test
cmp
dec
jns
mov
popa
inc
test
dec
sbb
mov
adc
xchg
popf
inc
push
sbb
test
test
sub
push
call
popf
mov
aas
adc
popf
dec
push
into
jmp
push
fs
or
sbb
push
ins
pop
xor
cmp
jmp
aas
mov
mov
pop
or
test
retf
mov
cmp
push
loopne
popa
movs
inc
push
inc
stc
pop
fwait
pop
push
outs
mov
push
xchg
mov
add
xor
jne
mov
arpl
jne
mov
pop
or
push
cmp
fwait
outs
das
fucomip
sbb
sbb
ret
scas
inc
cli
cmp
pop
dec
pop
add
in
jg
xchg
add
fist
mov
xor
stos
mov
xor
xor
adc
mov
mov
add
push
pusha
mov
add
es
push
into
pop
mov
push
(bad)
cmp
sbb
sbb
inc
arpl
adc
(bad)
out
cwde
jo
or
je
or
sbb
add
sbb
fidiv
idiv
mov
push
cmp
pushf
or
sub
pop
dec
add
or
sub
jnp
and
and
loope
cmp
pop
push
fstp
(bad)
jl
lods
push
rcr
jnp
es
lahf
into
pop
icebp
jp
mov
or
add
pop
lock
mov
leave
adc
adc
nop
xlat
mov
jo
les
dec
aad
cmp
push
jge
gs
loop
je
gs
pusha
adc
push
add
nop
pushf
and
add
sbb
jecxz
and
or
ror
daa
jmp
pop
mov
sub
lds
mov
ins
loop
add
push
pop
pop
pusha
mov
pop
mov
pop
loop
xchg
lods
cs
arpl
adc
cdq
sub
sti
call
loope
push
loop
rcr
mov
(bad)
sbb
jp
push
shl
cdq
loopne
sbb
pop
movs
sbb
jecxz
popa
sbb
push
sbb
sub
outs
loop
outs
push
xor
retf
inc
add
loopne
sbb
inc
mov
in
mov
add
in
cli
add
fcmovnu
dec
popa
pop
add
test
adc
jb
mov
adc
adc
or
jb
jmp
push
inc
bnd
inc
cdq
mov
lds
sar
fadd
xchg
pop
inc
dec
ror
xchg
in
cmp
imul
jae
int3
dec
adc
in
out
adc
call
xor
mov
and
xchg
xchg
enter
mov
dec
call
push
loopne
adc
add
cmp
test
scas
pop
mov
stc
pusha
and
sbb
cs
sti
add
(bad)
aaa
adc
adc
cmps
xor
popa
mov
dec
dec
gs
pop
jmp
mov
jl
pop
js
sub
mov
ss
imul
into
add
in
rcl
xchg
mov
inc
add
test
cmp
pop
mov
enter
jmp
and
add
push
enter
xor
outs
mov
sbb
pop
(bad)
call
mov
or
retf
push
jo
jle
dec
js
or
test
mov
ins
repnz
xor
cmp
pop
pushf
add
mov
repnz
les
add
mov
xchg
jne
mov
mov
rol
jns
imul
(bad)
or
data16
inc
jmp
pop
add
icebp
or
hlt
mov
add
mov
out
adc
inc
xchg
pop
or
test
jns
cmp
or
inc
or
xor
or
add
adc
push
mov
div
repnz
push
xor
dec
sbb
aas
push
add
sub
aas
pop
xchg
inc
cmp
repnz
or
or
adc
mov
add
lock
cmp
das
push
sysret
ret
pop
iret
inc
mov
enter
add
fiadd
xor
mov
cdq
sbb
mov
xchg
add
jnp
mov
mov
and
(bad)
cmps
and
ret
ins
sahf
out
push
inc
mov
or
sub
jp
inc
inc
xor
sbb
(bad)
cmp
cmp
out
cmp
enter
(bad)
push
xchg
(bad)
(bad)
icebp
cmp
sar
aas
dec
shr
mov
lea
jp
cmp
mov
push
pop
cmp
or
or
pop
retf
dec
outs
ja
stos
xchg
dec
stos
inc
icebp
pusha
cmp
mov
nop
mov
mov
dec
movs
mov
fwait
xchg
cmc
xor
xor
mov
xchg
test
hlt
xor
lea
push
sub
sbb
push
test
ret
push
adc
mov
sub
dec
sbb
into
jecxz
aad
inc
movs
mov
mov
ins
cmp
mov
ret
inc
fiadd
mov
data16
pusha
fild
inc
ficom
jmp
data16
sbb
cmp
cmp
add
shl
mov
or
jmp
call
dec
(bad)
mov
invd
add
iret
ins
icebp
dec
add
pop
lea
mov
call
into
jo
inc
stc
pop
dec
adc
dec
jns
jae
in
cmp
adc
test
jl
add
add
sahf
pushf
and
jb
inc
inc
add
cmp
(bad)
pop
jmp
cmp
jo
loopne
test
cmp
movs
push
or
sbb
mov
sbb
fcom
cmp
mov
mov
sbb
popf
pop
lods
push
lods
sbb
mov
ret
cmp
and
sub
inc
dec
mov
(bad)
mov
int3
dec
jnp
addr16
adc
out
bound
mov
jmp
jmp
test
inc
mov
lea
dec
add
repnz
ins
imul
lea
aad
adc
or
sub
ret
add
std
ins
add
and
inc
mov
daa
outs
out
mov
mov
test
or
popf
adc
adc
xchg
add
adc
jb
movs
mov
add
dec
neg
push
call
inc
xchg
pop
popa
mov
jmp
addr16
cdq
mul
test
sbb
lock
xchg
bnd
sbb
sbb
mov
jne
xchg
xor
push
push
or
popa
add
push
jbe
inc
add
scas
xchg
and
mov
sub
and
or
aad
mov
pop
sbb
dec
sbb
test
dec
cmp
test
sub
push
call
mov
and
push
popf
jmp
xchg
shl
enter
stc
js
jl
jne
ror
push
neg
popa
cmps
stos
arpl
dec
mov
pop
and
pop
setle
shl
fdiv
(bad)
adc
loopne
and
(bad)
mov
adc
es
enter
pusha
xor
jmp
mov
or
push
or
inc
(bad)
cmc
mov
add
xor
jns
xchg
out
daa
mov
or
sbb
leave
push
or
sbb
int
test
(bad)
cmp
or
lahf
sbb
or
dec
fs
call
addr16
sahf
mov
popf
mov
cmp
mov
ja
sub
or
loope
stos
xor
cmp
cmps
mov
xor
jb
mov
gs
std
jb
movs
xor
push
push
and
fcomi
pushf
sahf
mov
imul
cmp
push
jo
and
add
leave
and
jb
dec
adc
leave
iret
out
(bad)
fnsave
punpckhbw
dec
cmp
sbb
retf
mov
or
pop
mov
pop
in
add
enter
cmp
add
dec
fwait
inc
mov
mov
loope
or
xchg
mov
movs
push
ss
js
adc
jmp
ins
cmp
pop
out
jbe
inc
xor
sbb
add
out
outs
fdiv
int3
mov
mov
dec
inc
xchg
fisubr
in
or
add
test
rcr
jo
js
mov
stos
push
lods
mov
sbb
pop
push
push
sbb
mov
in
add
xor
fs
inc
push
mov
enter
(bad)
mov
hlt
dec
and
mov
das
adc
and
fiadd
loopne
(bad)
add
add
nop
dec
or
jmp
enter
mov
mul
jmp
repz
and
ja
push
mov
mov
xchg
mov
mov
je
mov
jb
shr
inc
scas
ja
xor
xchg
mov
cmp
shl
lea
or
add
or
xchg
inc
sub
psubusb
je
add
scas
leave
scas
popf
popa
add
cwde
movs
lahf
sbb
fsubr
repnz
jp
nop
xchg
sub
push
mov
out
push
inc
outs
jbe
xchg
pop
mov
mov
jmp
fs
mov
in
or
lahf
dec
jae
add
cmp
imul
lods
neg
daa
movs
retf
loope
dec
scas
push
xchg
sbb
cmps
or
or
or
fdiv
inc
cmps
addr16
cmp
xchg
xor
cmp
not
and
xchg
inc
adc
dec
xor
push
adc
xor
mov
mov
enter
lock
sbb
cmp
fdivr
xor
(bad)
into
inc
mov
mov
push
and
(bad)
and
movs
shl
jne
jmp
push
lods
lock
mov
push
test
aad
cmp
cdq
fs
push
sub
popa
and
cmp
aam
ja
xchg
cmp
add
les
aas
add
or
popf
out
fidivr
pop
mov
dec
scas
int
cmp
lock
les
push
inc
lods
jmp
xor
lea
movs
call
mov
(bad)
mov
dec
loopne
test
call
and
and
xchg
pop
outs
enter
or
xor
je
cmp
jb
mov
jg
fdivr
mov
or
gs
and
sbb
lds
xor
fidivr
add
and
pop
sub
sbb
add
inc
in
jl
add
in
pop
ja
ret
xor
push
add
ins
popa
xlat
and
mov
mov
inc
mov
mov
jge
loopne
cmc
add
dec
xor
pop
fisubr
aas
je
adc
xor
lahf
mov
sub
and
pop
es
adc
lods
not
lods
jae
xadd
cmps
pop
and
int3
inc
pop
fst
(bad)
loope
xor
loopne
or
mov
jg
jl
xor
bound
int
mov
jb
lea
mov
xor
dec
(bad)
pop
add
or
jne
in
pusha
lahf
retf
jnp
fs
push
jo
sbb
dec
pop
sbb
add
call
jg
jecxz
(bad)
adc
call
xlat
cmps
loopne
ja
into
or
data16
jecxz
sbb
ret
cmc
imul
add
add
adc
cmp
mov
rol
add
xchg
inc
and
or
arpl
gs
call
fidiv
xor
adc
inc
mov
xor
push
add
sbb
div
add
push
lahf
dec
cmp
ins
bound
sbb
xor
xchg
mov
cmp
dec
popa
mov
js
jne
xchg
(bad)
fild
cmp
push
(bad)
sbb
push
add
xchg
outs
movs
adc
jnp
inc
dec
neg
sub
push
or
inc
mov
sub
test
stc
pusha
or
xchg
dec
and
jae
popa
(bad)
sub
loope
cmp
jmp
movs
pop
jmp
mov
ret
hlt
mov
sbb
hlt
icebp
adc
push
jmp
inc
sti
ror
movs
jmp
dec
lea
jne
push
popf
nop
jo
rcl
and
cli
loop
fdivr
mov
xchg
dec
cmp
jo
mov
fidiv
pop
push
cmp
sbb
aas
mov
xchg
cmp
cmps
mov
sti
xchg
dec
xadd
sbb
or
sbb
jmp
test
movs
in
rol
nop
das
xor
jne
sti
sub
sbb
(bad)
cmp
dec
push
mov
cli
mov
pushf
xlat
inc
jo
add
test
cmp
cmp
inc
fsub
ins
dec
pop
cld
pop
fwait
adc
into
loope
fdiv
xor
mov
movs
cmp
xchg
out
sbb
sar
daa
add
arpl
mov
or
or
mov
or
push
and
in
dec
push
pop
ins
xor
out
xlat
add
jl
adc
sub
inc
test
fs
cmp
scas
cmp
ins
lea
xor
add
jmp
add
mov
test
push
or
sti
pusha
xor
mov
jno
sub
lds
mov
inc
inc
arpl
mov
aaa
enter
(bad)
enter
lock
adc
jp
or
and
pop
iret
add
in
cmp
ins
pusha
adc
loopne
cmps
std
jne
imul
adc
hlt
mov
imul
sahf
fild
adc
push
jbe
out
imul
cmp
dec
mov
pop
sti
push
fstp
sbb
mov
or
out
sub
ret
adc
push
aas
ret
cmp
mov
mov
add
adc
jae
sub
or
ret
or
push
(bad)
ja
cmp
mov
fstp
(bad)
icebp
mov
push
fnstenv
mov
or
jp
popa
cmp
jb
xor
pop
inc
ins
sub
adc
xor
cdq
stc
test
aaa
adc
add
mov
sub
mov
loopne
mov
in
sbb
mov
test
jle
sub
and
add
dec
or
push
adc
fcmovnb
shrd
push
or
push
adc
and
cmp
jge
dec
and
sub
in
div
sub
ins
retf
(bad)
pop
push
fcomp
cmp
fwait
adc
inc
and
push
adc
pop
push
push
sbb
jo
xchg
inc
mov
(bad)
lods
add
xchg
lahf
add
rcr
inc
sahf
nop
bound
adc
fistp
push
ret
out
sub
mov
xor
test
xchg
(bad)
and
mov
and
add
loopne
pushf
mov
retf
mov
shr
movs
ds
fld
xlat
mov
ret
fsub
mov
popa
fdiv
push
xchg
and
(bad)
dec
mov
xchg
pop
ret
inc
adc
movs
xchg
add
adc
not
or
leave
out
jg
cmp
aam
adc
mov
inc
cld
stos
sub
push
push
cmp
push
iret
xor
and
and
scas
push
cmp
addr16
pop
bound
mov
xor
xor
xchg
retf
out
push
inc
stc
ins
into
sbb
adc
pop
or
mov
adc
xor
loope
pop
adc
mov
lock
xor
or
jbe
add
mov
sar
mov
pop
sbb
inc
xor
push
(bad)
cmp
jp
lods
or
push
push
sbb
ins
cmp
cli
sbb
pop
cmps
ss
push
adc
stc
sbb
daa
adc
inc
or
jo
mov
adc
and
add
xor
sub
mov
hlt
jge
and
leave
sub
es
into
retf
sub
lods
call
in
add
pop
mov
outs
pop
cmps
xchg
add
cwde
outs
in
xchg
push
int3
xor
jge
sbb
fwait
adc
clc
add
add
xor
(bad)
fadd
inc
lahf
lea
xor
ret
mov
je
jb
imul
scas
outs
(bad)
pop
jg
in
xor
cli
jne
xchg
xchg
retf
and
cdq
mov
fs
inc
ss
push
sub
dec
je
loopne
push
add
adc
popa
pop
add
jle
ins
sbb
add
pop
push
pop
loopne
inc
lods
add
loop
adc
jb
push
ret
leave
inc
aas
inc
popa
sub
sbb
arpl
cmps
pop
cdq
pop
push
or
popa
push
ds
test
mov
mov
es
mov
jns
fsub
outs
add
stc
sti
into
shr
xchg
sti
add
push
xor
(bad)
add
loope
pop
mov
add
push
stc
sbb
ror
data16
ss
add
mov
sbb
inc
addr16
cmp
cmps
mov
add
pop
inc
xor
push
mov
(bad)
jmp
adc
sub
(bad)
bound
bound
mov
jmp
fs
xor
rcl
pop
rcr
and
pop
popa
push
push
icebp
out
jbe
nop
add
xchg
leave
ss
inc
adc
data16
leave
jl
xor
push
inc
(bad)
fcmovb
add
or
data16
fst
mov
stc
daa
pushf
jge
cmp
cmp
arpl
dec
jno
(bad)
ror
mov
or
or
mov
outs
and
ss
dec
ds
inc
sbb
in
mov
aaa
dec
sbb
jmp
sahf
sub
daa
out
inc
sbb
int3
jp
leave
push
and
rcr
fldln2
in
sub
add
fs
xchg
lods
hlt
shl
add
xchg
xchg
fstp
add
mov
push
in
add
inc
sahf
cmp
push
dec
or
repnz
or
or
sahf
adc
enter
jae
leave
je
push
daa
cld
sbb
in
daa
in
add
sbb
(bad)
(bad)
push
adc
into
daa
aam
into
sbb
rcr
loope
movs
xor
cmp
or
xchg
retf
or
or
inc
sub
xchg
or
mov
nop
adc
push
xor
adc
jnp
adc
cmp
cmps
jb
imul
in
push
daa
dec
sub
sahf
retf
sub
adc
cmp
push
loopne
pop
adc
xchg
mov
add
loopne
mov
imul
adc
call
test
sbb
dec
pop
rcr
push
pushf
pop
test
sti
xor
mov
sar
push
pop
add
sbb
dec
js
xchg
jne
sub
fdiv
in
and
inc
or
jo
lock
cmp
push
jo
fdiv
scas
popa
pop
pop
inc
imul
ficom
push
push
sub
rcl
std
out
pop
mov
adc
and
cmps
mov
push
and
mov
mov
push
xchg
xchg
test
push
and
adc
sbb
jle
test
push
cmp
sbb
mov
leave
lock
adc
mov
xor
cwde
inc
push
je
(bad)
cmp
xor
sbb
inc
xchg
outs
push
ret
lea
mov
mov
or
mov
add
dec
dec
lea
xlat
js
scas
jne
leave
xor
dec
jge
repz
mov
mov
dec
jge
or
dec
pop
stc
cs
clc
add
fbstp
hlt
cvtps2pi
jne
cdq
dec
or
sar
or
cmp
or
add
add
cmp
sbb
es
or
inc
mov
mov
mov
clc
pop
imul
jne
jge
loope
dec
xor
popf
sub
and
pop
xor
mov
and
add
jg
pop
fs
push
das
(bad)
call
bound
leave
mov
pusha
lods
loop
push
add
mov
(bad)
cmps
(bad)
jecxz
jle
dec
test
popa
stc
pop
or
or
jne
inc
aaa
add
adc
push
dec
test
add
mov
adc
out
rcl
cdq
pop
push
add
or
dec
sub
pop
mov
or
adc
push
xor
dec
cs
fimul
retf
and
jl
xchg
retf
or
dec
xor
leave
enter
and
dec
pop
add
fldcw
inc
bnd
push
sbb
or
mov
pop
add
add
jmp
ja
shl
mov
mov
lahf
mov
lea
sub
loopne
push
mov
add
movs
add
movs
cmp
push
pop
mov
xchg
push
movs
dec
push
jmp
xchg
mov
xchg
sahf
mov
test
sub
jle
arpl
cmps
daa
xchg
shr
stos
mov
adc
jmp
xchg
sub
jmp
push
add
xor
adc
and
push
pusha
mov
popa
and
cmp
jbe
cmp
sub
adc
addr16
xchg
inc
mov
stos
aaa
or
sub
rcl
sbb
js
push
mov
rol
popf
xor
mov
pop
ret
ret
sbb
xlat
jne
ret
push
pop
test
cmp
ja
and
sti
clc
inc
aam
pop
add
mov
adc
pop
push
loopne
int3
test
rcl
mov
outs
sbb
xor
lock
or
mov
mov
push
push
sub
sahf
repnz
add
adc
sbb
mov
add
or
pop
adc
repnz
jmp
dec
shl
xchg
adc
outs
sub
test
ins
mov
add
sub
out
test
cmc
push
data16
mov
xor
add
sbb
cmp
stc
cs
add
add
sbb
jge
sbb
xor
jmp
cmps
jmp
add
or
adc
or
add
sub
inc
xor
iret
(bad)
in
and
inc
add
jle
cdq
push
fcomp
inc
mov
outs
loop
adc
mov
cmp
mov
xor
xchg
sbb
xor
and
dec
adc
adc
enter
push
popf
or
or
dec
mov
cmp
xchg
test
sub
pop
ss
xor
xor
sahf
add
mov
dec
call
cmp
jb
mov
idiv
fistp
fisttp
cs
mov
mov
pop
jae
add
fwait
ja
jae
in
or
in
mov
pop
inc
mov
test
add
call
sahf
mov
test
rol
mov
add
dec
sar
pop
or
stos
test
pop
mov
mov
cmp
jns
mov
imul
(bad)
repnz
xchg
dec
popa
test
xchg
sub
push
lea
pop
sub
ja
jb
lods
adc
dec
inc
scas
ret
jae
push
cmp
loop
pop
xlat
(bad)
(bad)
pop
cs
mov
sbb
mov
fsubr
xchg
sti
sbb
cmps
adc
stos
push
fstp
test
js
ss
pop
and
xchg
push
or
and
cdq
js
push
(bad)
push
push
inc
jne
push
movs
inc
das
cwde
aad
mov
inc
addr16
cmp
ret
xchg
fld
(bad)
pop
test
sub
add
pop
cmp
rcl
ins
jmp
scas
cmp
hlt
xor
or
jecxz
and
or
add
loop
inc
sbb
jge
jne
sbb
pop
pop
pop
add
(bad)
cmp
pop
cmc
int3
and
enter
jecxz
add
nop
ucomiss
or
cmp
cmp
or
sub
or
mov
cmp
shl
xor
rol
rcl
mov
add
sbb
cld
add
cmp
cmp
sbb
getsec
into
push
sar
movs
dec
mov
add
sbb
mov
cmp
sub
je
and
add
or
dec
out
lock
add
(bad)
shr
sub
(bad)
idiv
pop
mov
jae
or
jne
sar
ds
or
inc
jo
sbb
jmp
call
jne
or
cwde
sub
ds
daa
in
rcr
fst
cmp
adc
int3
pop
adc
lods
or
sbb
out
jl
sub
or
xor
ror
inc
or
mov
jmp
inc
dec
mov
test
add
or
push
sbb
shl
movs
add
or
add
ret
rcr
aas
xchg
jno
or
mov
sbb
test
popa
mov
add
imul
add
fmul
xchg
pop
mov
inc
and
sub
rcr
pop
cmc
xor
or
cmps
ss
and
push
retf
mov
push
push
inc
push
(bad)
sbb
or
retf
inc
outs
xchg
inc
shl
(bad)
inc
push
cdq
nop
fcmovu
loop
or
fs
out
xchg
inc
es
idiv
std
sub
sbb
add
popa
dec
ret
inc
mov
(bad)
dec
dec
sbb
pop
adc
pop
and
pop
fldenv
sbb
pop
adc
in
pop
xor
xchg
test
sbb
ret
pop
mov
xchg
xor
and
pop
dec
ret
movs
pop
scas
pop
and
jmp
fld
je
xchg
xchg
(bad)
sbb
xchg
dec
mov
sbb
ret
sbb
(bad)
sub
pop
nop
mov
cmc
pshufw
fs
inc
pop
outs
loope
jo
add
scas
xor
arpl
int3
xchg
xor
pop
icebp
mov
and
(bad)
test
xchg
popf
sbb
pop
mov
ins
push
jmp
cmp
mov
dec
mov
xor
pop
or
sub
adc
sbb
sbb
call
mov
or
sbb
inc
sbb
outs
add
je
pop
add
jge
pop
mov
lahf
mov
jb
movs
adc
push
add
fsub
cmp
and
arpl
mov
les
or
mov
sub
and
hlt
loop
xchg
aaa
mov
mov
aas
inc
xor
cs
inc
fdiv
mov
movs
dec
addr16
xor
sar
add
add
jle
and
or
jl
push
push
jle
test
mov
pop
test
xor
cmc
jbe
push
or
retf
scas
or
js
call
pop
sub
and
movs
dec
out
push
xor
pop
lods
shr
jb
sbb
popf
xchg
or
shl
dec
retf
data16
xchg
shr
fmul
cmp
or
(bad)
inc
dec
imul
pop
xor
xchg
dec
pmaxsw
aaa
mov
push
pop
nop
jbe
sbb
out
or
(bad)
or
pop
or
fadd
mov
fbstp
movs
mov
mov
xor
or
mov
xlat
test
lods
fadd
out
ins
mov
test
jmp
mov
ficomp
adc
enter
rcr
add
or
loope
inc
sbb
ror
pop
sub
loop
add
cdq
mov
add
in
(bad)
and
(bad)
jecxz
inc
ficomp
stos
movs
push
jle
and
or
and
mov
push
cmps
or
(bad)
dec
add
or
sbb
fsubr
mov
jne
add
mov
mov
jmp
sbb
jge
and
shr
cmp
and
add
dec
sar
adc
das
pop
dec
iret
sar
mov
lds
es
mov
mov
lds
icebp
cmp
cmp
nop
retf
mov
lea
in
icebp
dec
jae
adc
(bad)
jne
mov
jl
call
mov
or
dec
fwait
ins
mov
jmp
jmp
push
or
hlt
(bad)
cmp
aaa
fadd
pop
cdq
movs
cmp
sbb
fisttp
push
rcr
adc
call
sub
shl
cli
pusha
cld
push
mov
fs
movs
in
cld
push
jge
and
iret
jmp
ja
add
iret
(bad)
cmp
dec
sub
jmp
pushf
pop
lahf
jl
add
jo
sub
push
or
or
pushf
jmp
adc
test
ror
aad
leave
cli
outs
inc
movs
cmp
clc
mov
nop
fxch
jae
addr16
lock
aad
loope
(bad)
jp
sub
pop
xchg
fadd
mov
xor
sub
lods
aas
popa
ds
cmp
aam
jl
xor
rcr
icebp
pop
cmps
sub
mov
or
(bad)
or
test
pushf
sub
ins
pushf
and
test
daa
sbb
sbb
jb
daa
ja
xchg
cmp
mov
stos
test
adc
fld
adc
push
pop
fcmove
in
xchg
jne
adc
add
arpl
adc
hlt
mov
inc
add
in
push
dec
rol
jmp
stos
xor
xor
xlat
imul
sbb
pop
into
jns
cmp
jo
mov
mov
pop
in
repnz
cmp
in
aaa
jo
adc
pop
test
mov
dec
cmp
sbb
adc
leave
sar
(bad)
mov
sbb
mov
dec
loope
add
push
ret
inc
arpl
jecxz
mov
leave
test
jo
ss
ss
ja
test
(bad)
int3
rcr
test
inc
add
push
or
xchg
dec
adc
test
ja
enter
jb
sbb
lea
jl
in
mov
rcr
mov
aas
or
ja
shr
jae
mov
jp
add
retf
je
adc
or
mov
cmp
xor
js
in
or
mov
push
mov
sbb
fcmovnbe
imul
es
mov
xchg
add
xchg
stos
sbb
test
call
jmp
mov
dec
jnp
pop
popf
mov
add
inc
pop
retf
xchg
and
call
stc
and
xchg
pop
add
loope
pavgb
cmp
dec
jecxz
inc
add
mov
es
sub
or
fld
imul
add
add
inc
push
mov
jmp
or
push
rcr
ret
inc
jecxz
sbb
dec
(bad)
mov
int
lahf
out
ins
or
in
add
dec
xchg
dec
fsubr
cdq
jmp
push
ds
jmp
xchg
push
inc
adc
fs
sub
int3
retf
mov
dec
lahf
add
inc
xor
cmp
push
es
mov
jecxz
sub
push
stos
cmp
and
jno
add
and
sub
repnz
fidiv
mov
retf
xor
cmps
test
or
xchg
imul
ret
mov
pop
inc
sub
int3
xor
xchg
fidiv
jne
xchg
call
add
loopne
cmps
pop
push
mov
add
jecxz
push
mov
ror
(bad)
repz
push
dec
mov
jae
data16
jle
aam
sbb
mov
jo
pop
fcomp
popf
retf
xchg
shr
inc
inc
sub
sub
inc
je
mov
scas
or
inc
outs
retf
dec
mov
stos
add
inc
xchg
adc
cmp
das
dec
xchg
pusha
ins
or
or
mov
sbb
jmp
ret
lods
test
mov
fcomi
or
inc
test
pop
cmc
lea
mov
pop
jecxz
pop
dec
and
xchg
es
mov
js
mov
and
dec
call
cdq
clc
cs
push
dec
test
dec
loopne
and
pop
and
mov
add
movs
mov
jp
xor
mov
call
dec
ror
push
push
test
push
mov
dec
cmp
or
scas
pop
add
lahf
lock
mov
mov
sbb
mov
add
cli
jne
cmp
jne
(bad)
retf
add
or
rol
xor
call
mov
lahf
xor
push
cwde
dec
(bad)
and
xor
scas
rcr
push
adc
pop
retf
rcr
jle
or
mov
dec
ret
mov
xor
dec
or
mov
inc
cmps
xor
clc
pop
hlt
mov
test
aam
adc
pop
or
add
shl
inc
pop
iret
enter
jo
mov
dec
cmp
mov
mov
mov
adc
xchg
push
loopne
shl
cmps
mov
jp
into
dec
sbb
mov
cmp
leave
xchg
cmp
add
push
and
push
mov
popf
jbe
cmp
and
mov
xor
lods
je
add
mov
sbb
mov
xchg
out
cmp
adc
out
xor
dec
ret
push
adc
in
or
add
int3
xchg
outs
and
mov
dec
movs
jnp
adc
enter
fs
test
adc
outs
les
dec
movs
jb
je
jle
(bad)
push
ror
push
aas
dec
mov
sbb
stc
sbb
aas
pop
xor
jecxz
adc
jno
or
and
or
sbb
arpl
push
pop
cmc
repnz
mov
fnsave
add
dec
xchg
adc
test
jecxz
pop
and
fwait
lahf
push
(bad)
call
repz
cmp
inc
jnp
test
leave
dec
jne
cmp
sub
ret
jno
push
mov
add
cdq
pusha
mov
push
cmp
sub
stos
sub
jb
shr
pusha
sub
xor
push
mov
xchg
ret
aad
jb
add
adc
xor
jge
lea
dec
lods
adc
imul
xchg
sbb
shr
push
mov
cmp
sub
adc
mov
push
je
add
xchg
jl
dec
sbb
mov
lahf
fxch
mov
test
add
push
xor
fist
jmp
jle
sub
and
mov
das
ins
out
shl
mov
xchg
js
ret
rcr
ret
or
ret
fild
into
add
dec
add
int
cmp
fcom
ret
sbb
adc
add
push
pushf
ja
or
into
or
fisttp
mov
mov
cmps
and
pop
mov
xor
fistp
jmp
and
adc
dec
inc
fisubr
lds
(bad)
shl
gs
imul
mov
push
jmp
push
sub
or
dec
in
pop
adc
xchg
out
xchg
push
pop
retf
push
daa
loopne
push
test
enter
sub
inc
clc
dec
movs
push
test
test
lock
sub
or
push
jecxz
dec
ret
mov
mov
retf
inc
in
adc
icebp
rcr
sbb
adc
or
int3
dec
in
int3
cmp
in
fadd
loopne
add
in
arpl
nop
inc
push
cmp
lock
inc
push
cmp
fcom
fadd
dec
mul
dec
mov
shl
push
fsub
lods
push
mov
push
add
in
xor
outs
div
les
jbe
pop
scas
pop
push
enter
jle
rcl
les
or
cmp
push
inc
mov
lahf
dec
outs
icebp
sahf
xor
adc
nop
add
pop
pop
mov
es
push
jge
clc
movs
push
test
pop
and
in
popf
clc
mov
sbb
push
xchg
inc
inc
loope
in
jae
and
mov
aad
or
icebp
sbb
and
and
in
sub
jae
sbb
scas
or
or
mov
lds
or
aad
push
xchg
inc
cs
and
mov
inc
adc
nop
inc
dec
stos
scas
adc
and
je
icebp
sbb
adc
mov
fwait
fs
dec
mov
mov
xchg
outs
pop
test
xchg
sbb
and
push
adc
(bad)
mov
mov
fist
(bad)
leave
in
fisub
and
xor
jl
leave
jmp
mov
ins
pushf
push
aam
int
sub
arpl
sbb
pop
lods
xor
push
pop
pop
or
push
and
push
sbb
sbb
xor
leave
int
xor
sub
inc
jb
int3
stc
mov
add
add
push
jle
xor
inc
leave
xchg
in
test
add
sbb
int3
xor
mov
push
sub
or
fxch
sub
add
mov
(bad)
sbb
sbb
xchg
xchg
cmc
push
inc
add
inc
test
fcomp
aaa
ror
mov
or
cmp
sub
or
jmp
sahf
push
dec
xchg
pop
pop
sbb
mov
xchg
sbb
dec
push
rcr
xchg
outs
push
sahf
sub
call
add
fld
(bad)
nop
stc
in
lock
cmp
outs
rcr
adc
sub
pusha
lods
mov
mov
pop
icebp
mov
inc
push
ins
or
mov
fcomp
js
ret
xor
movs
fnstsw
pop
ins
pop
sbb
xchg
(bad)
pop
retf
stc
shr
shl
inc
adc
xor
cmp
test
into
mov
pusha
and
sbb
fprem
int3
in
cmp
fs
ror
data16
xchg
sahf
xor
arpl
dec
jnp
mov
enter
shl
sbb
imul
scas
add
xchg
mov
aam
enter
sti
and
adc
jbe
repnz
push
and
in
push
dec
inc
mov
loop
pop
ss
or
push
dec
stc
xchg
lahf
fstp
es
sbb
mov
pop
add
xchg
xor
into
sub
ja
cwde
sahf
push
push
sub
call
pop
ss
xor
mov
push
xchg
les
dec
scas
jae
mov
js
and
inc
int
add
loop
ins
in
xor
call
mov
add
dec
mov
fiadd
rol
scas
mov
add
jecxz
pop
add
es
clc
mov
mov
(bad)
shl
inc
ss
repz
(bad)
sub
mov
dec
sbb
inc
pop
mov
ret
lods
mov
xchg
fld
mov
mov
(bad)
jmp
rcl
retf
popf
imul
or
fs
ja
sbb
adc
pop
inc
ja
mov
shl
jo
mov
setge
jmp
sub
push
push
in
or
or
inc
adc
xchg
add
and
pop
es
test
adc
clc
inc
(bad)
enter
mov
ret
and
into
cmp
or
adc
fldenv
outs
sbb
mov
pop
std
jl
add
ins
mov
imul
(bad)
iret
mov
ret
(bad)
cmp
adc
pop
jg
sbb
jle
sbb
and
push
lods
outs
retf
xchg
xor
xchg
mov
fstp
(bad)
call
cld
icebp
std
jae
ret
add
mov
xor
lods
pushf
stos
and
mov
fs
shl
fisttp
cmp
xchg
inc
lock
lea
daa
ud2
sub
sub
cld
mov
cwde
aad
ret
lock
xor
cmp
inc
nop
pop
outs
les
in
pop
fnsave
xchg
lods
add
and
push
mov
xchg
xchg
xchg
fstp
sub
mov
ret
sub
sbb
daa
jno
mov
adc
enter
fnstenv
cli
gs
(bad)
loop
push
jle
inc
retf
(bad)
push
cli
adc
(bad)
jmp
push
imul
int3
dec
in
mov
inc
lods
xor
mov
inc
jle
mov
addr16
adc
ss
jo
and
dec
ins
(bad)
imul
xchg
lds
mov
or
pop
std
mov
out
and
xor
loop
adc
icebp
sub
jecxz
adc
add
rcl
inc
pushf
lods
fs
add
mov
add
cs
jne
cli
mov
or
push
adc
jns
add
clc
dec
les
adc
xchg
mul
ficomp
(bad)
xchg
test
push
xchg
push
xor
mov
or
sub
scas
rcr
ja
mov
add
data16
xchg
loopne
xchg
dec
call
push
or
in
add
cmp
ss
cld
mov
add
jecxz
and
ss
jbe
ror
mov
repz
ror
add
enter
test
mov
push
push
dec
rcl
mov
jnp
popa
lock
lods
imul
sbb
push
jae
push
fldenv
int
je
jne
sbb
xchg
add
or
mov
imul
mov
xor
mov
add
mov
add
mov
arpl
lds
push
xchg
sar
fcomp
in
jl
test
call
xchg
adc
scas
and
sbb
sbb
ja
pop
jae
rol
lock
sbb
leave
push
xchg
cmp
sub
xchg
or
adc
adc
and
mov
dec
jbe
call
or
(bad)
stc
cmp
push
jg
icebp
jo
ins
xchg
and
xor
call
jmp
jns
in
xchg
ins
cmp
test
add
mov
inc
pop
jg
and
jmp
and
cmp
pop
movs
push
ret
int
repz
push
xor
repz
ficomp
mov
shl
ss
xlat
(bad)
jmp
xor
inc
push
ja
ds
js
push
daa
sub
mov
sar
jl
dec
mov
ja
adc
pop
shl
data16
adc
adc
cmp
ret
inc
adc
push
mov
or
xlat
jbe
xchg
sub
or
or
je
jno
pusha
pop
test
sti
jne
adc
les
or
inc
pop
xor
ret
loopne
test
scas
push
add
retf
int
xor
mov
outs
cs
xchg
sub
adc
xor
cmps
adc
jle
cmps
cmp
jle
loopne
jmp
sub
mov
call
push
hlt
out
sub
pop
or
xor
cld
pop
mov
pushf
mov
and
mov
enter
sub
xchg
dec
cmp
cmp
inc
int3
adc
xor
pop
mov
jb
sbb
pop
add
xchg
scas
or
or
call
dec
push
inc
push
fisubr
aam
adc
xor
or
pop
test
mov
mov
loopne
mov
nop
or
out
popa
pop
sahf
add
je
js
dec
inc
dec
inc
call
and
mov
dec
fdivr
jmp
leave
sbb
out
sahf
jne
inc
jbe
popa
jne
and
inc
dec
test
and
fs
(bad)
out
inc
fild
add
add
sbb
pop
ud1
push
pop
jo
adc
imul
mov
rol
mov
push
adc
sbb
add
add
(bad)
out
loopne
(bad)
mov
fisttp
fwait
jnp
lea
xor
dec
push
pop
mov
rol
sub
xchg
lahf
shr
add
in
xor
bswap
sti
add
or
cmp
add
jnp
loope
int
or
sub
pop
mov
xchg
(bad)
pop
jns
in
(bad)
sti
push
or
push
js
pop
push
pop
mov
jmp
push
dec
fwait
adc
cmp
jns
ss
mov
loop
jp
gs
cdq
sbb
out
rol
int
mov
push
call
fidivr
pop
cdq
imul
dec
jb
cdq
dec
lahf
mov
xchg
adc
stos
clc
stc
popa
or
cmp
arpl
mov
inc
dec
or
push
int3
add
inc
fistp
arpl
jne
sahf
mov
and
gs
jmp
mov
mov
js
(bad)
icebp
add
bound
and
mov
adc
adc
ins
pushf
sub
loopne
jns
jb
push
pop
les
pop
imul
xor
cmp
mov
push
or
and
or
push
add
inc
add
add
or
scas
sbb
mov
scas
mov
sbb
sbb
jbe
inc
icebp
pop
lock
cdq
pop
add
dec
sub
aas
add
or
mov
aaa
add
push
enter
and
pop
push
push
mov
mul
xor
jo
gs
neg
and
(bad)
js
add
jecxz
mov
in
xor
adc
mov
call
out
inc
cli
jae
pop
xchg
(bad)
out
fiadd
and
dec
jne
lods
loopne
pop
inc
jae
add
iret
clc
inc
cmp
ins
ins
push
and
jbe
(bad)
repz
pop
inc
push
push
loopne
add
(bad)
xchg
push
repnz
movs
daa
pop
in
lods
pop
xchg
pop
push
mov
xchg
push
push
das
je
add
fadd
jmp
repnz
sub
adc
in
das
push
xlat
jmp
bound
ss
and
or
push
xchg
and
out
add
xchg
std
add
inc
repnz
retf
jne
cmp
jne
mov
sub
jne
out
or
xchg
jmp
test
test
arpl
leave
jo
push
add
adc
push
fs
retf
pop
pop
cs
cmp
cli
push
ret
xchg
shl
lods
shr
pop
or
out
xlat
push
stos
shl
mov
or
data16
js
push
push
jnp
or
xchg
mov
or
fld
add
adc
call
cmc
cmp
inc
add
push
je
lds
sbb
rcr
or
pusha
rol
mov
mov
push
dec
cmp
sbb
or
or
jne
call
out
add
inc
clc
das
adc
inc
mul
cmp
repz
jbe
shl
ins
icebp
inc
bound
xor
mov
mov
je
xchg
dec
in
shl
xchg
scas
push
test
in
pop
pop
movs
stos
je
int3
push
cmp
daa
loopne
test
cmp
push
sub
xor
sub
movs
push
test
ret
xchg
fsub
jne
cmp
lahf
mov
jmp
jne
xchg
inc
xor
lds
mov
add
add
and
out
inc
inc
and
xor
xor
or
imul
sub
push
push
xor
xchg
rcr
push
pop
jne
(bad)
es
fcom
mov
ffreep
push
push
push
jmp
pop
test
add
xchg
add
add
cmp
cmp
xchg
mov
outs
ja
ss
xor
xchg
cmp
lods
addr16
push
call
add
inc
push
aad
xchg
push
or
push
mov
xor
sbb
ss
mov
rcl
mov
add
mov
fstp
mov
push
inc
adc
int
jne
mov
movs
push
das
xor
sub
and
push
xchg
mov
pop
adc
mov
add
add
jl
pop
or
xor
mov
out
in
sub
cmp
(bad)
aas
dec
les
inc
jnp
xchg
add
and
and
xor
inc
jb
xchg
add
xor
pop
loopne
xor
add
add
and
sbb
sbb
sbb
push
shl
movs
add
call
xor
adc
jg
xchg
push
sbb
mov
push
sbb
xchg
jmp
in
or
push
ja
mov
add
add
xchg
dec
push
(bad)
movs
pop
out
dec
xchg
mov
lods
add
cmp
and
push
xor
in
inc
sub
je
retf
mov
inc
pop
cmp
(bad)
in
fadd
inc
jp
outs
repz
ret
fmul
add
xor
je
sub
add
cmp
dec
push
cmp
je
sbb
ficom
cmc
shl
xchg
cmp
sub
jne
(bad)
into
xor
or
rcl
test
push
jmp
pop
sar
adc
add
dec
mov
push
test
shl
jo
rol
icebp
adc
mov
cdq
rcr
mov
add
pop
les
or
mov
cmp
jne
xchg
pop
cmc
mov
mov
adc
fld
jae
mov
add
sbb
add
addr16
ja
add
adc
add
ins
loopne
loope
iret
sub
jo
ds
adc
inc
add
ror
pop
dec
out
add
xchg
iret
test
lods
popa
loop
jne
aam
bound
fs
out
or
or
je
pop
sub
bound
jns
push
pop
popa
popa
daa
sub
sub
cs
mov
or
lahf
xchg
dec
dec
pop
or
sbb
jno
xor
test
or
sub
or
js
inc
cmp
(bad)
jnp
ror
movs
lea
jo
push
push
das
jnp
je
mov
push
mov
xchg
sbb
iret
sub
loope
fwait
push
iret
sbb
rcl
inc
push
xor
jge
mov
fmul
inc
jg
add
and
add
mov
fisttp
mov
jle
je
inc
sar
jge
je
push
sbb
pop
push
rcl
mov
enter
jbe
inc
lds
push
test
addr16
sbb
js
mov
pop
neg
lea
and
jne
xchg
mov
push
and
sub
fcom
imul
je
loope
or
shl
mov
inc
rcl
xor
sub
js
add
xchg
test
jne
mov
aam
adc
push
jmp
out
push
pop
push
jecxz
sbb
push
push
(bad)
lea
xor
cmp
bound
xchg
or
xchg
mov
push
sbb
and
cmp
pop
test
adc
adc
jne
dec
mov
mov
enter
(bad)
lock
dec
mov
ficomp
in
rol
test
mov
ret
leave
pop
jb
sbb
int3
mov
(bad)
retf
sub
or
adc
(bad)
fiadd
loope
bound
ins
mov
or
cmp
sub
call
(bad)
pop
cmps
pop
rcr
or
dec
or
add
mov
inc
aas
jmp
scas
jne
jle
sbb
push
xchg
retf
and
movs
add
lahf
xchg
mov
push
lahf
push
cmp
popf
pop
and
add
in
xor
xor
pop
aam
outs
push
nop
push
inc
jne
nop
stos
pop
or
mov
(bad)
addr16
pushf
add
rcl
movs
mov
sub
shr
and
add
clc
mov
mov
push
(bad)
xlat
cs
movs
mov
push
or
out
fadd
mov
inc
sub
push
and
ret
or
jns
sbb
inc
dec
and
popa
lods
cmp
in
add
aaa
xchg
pop
lock
lahf
jns
xchg
loop
les
jbe
out
mov
idiv
inc
adc
jg
sar
dec
pop
xor
mov
inc
adc
mov
popf
pcmpeqb
lods
mov
xor
push
fstp
inc
mov
in
pop
pop
sti
and
adc
jbe
movs
pop
test
mov
push
push
add
rcr
mov
pushf
xor
sbb
call
and
push
push
in
jmp
mov
lahf
or
jns
stc
int3
ss
into
mov
cmp
shl
loop
push
sbb
rol
retf
inc
sub
mov
ins
and
fsub
fstp
dec
pop
js
xchg
push
inc
test
daa
clc
loope
call
xor
push
test
ss
dec
je
idiv
or
adc
not
jecxz
dec
pop
and
into
popa
jmp
outs
jmp
fidivr
cmp
mov
mov
and
mov
inc
js
call
adc
push
mov
cmp
jle
fimul
and
sub
mov
push
sub
xchg
inc
cmp
mov
pop
xchg
xor
addr16
ja
sub
inc
sub
cmps
add
mov
xor
mov
daa
xor
call
aad
stc
or
fisttp
add
aaa
inc
sbb
out
rcl
adc
nop
inc
push
jns
pusha
fs
push
cmp
ins
outs
jb
pop
inc
xchg
je
adc
movs
fstp
or
push
pop
shl
test
adc
int3
iret
into
inc
inc
scas
add
scas
add
or
adc
dec
popa
mov
popf
out
adc
pop
jp
sbb
xchg
push
je
add
or
scas
pop
xchg
mov
xor
and
sub
xor
push
adc
call
retf
mov
xchg
retf
out
inc
test
or
mov
retf
push
mov
inc
pop
fmul
sub
lea
or
in
fsubr
jle
add
in
lods
repnz
add
mov
es
sbb
sahf
mov
inc
mov
pop
fsubp
jp
movs
dec
mov
fiadd
or
(bad)
cmp
out
lea
and
xchg
mov
sbb
cmp
cmp
ja
(bad)
push
sub
leave
sub
retf
xor
push
adc
inc
and
test
jmp
add
retf
xchg
mov
mov
or
movs
cmp
mov
mov
(bad)
lea
mov
test
jmp
imul
scas
jge
pop
add
dec
addr16
xor
jns
popa
add
rcr
mov
imul
lods
inc
or
movs
mov
test
call
mov
gs
ret
out
pop
add
add
cwde
xchg
(bad)
loope
cwde
jp
js
jo
aas
les
jbe
or
adc
pop
sar
cmp
mov
mov
sub
add
mov
lods
adc
retf
into
icebp
sbb
mov
push
stos
mov
fsubr
and
cs
sbb
repz
inc
jmp
mov
dec
imul
scas
les
jmp
sub
stc
ins
jmp
rol
in
fild
jne
retf
xor
sar
jp
push
and
jbe
xor
jnp
pusha
or
hlt
and
mov
loope
adc
xor
pushf
adc
cmp
hlt
cli
call
or
or
lods
xor
iret
lea
dec
cli
xor
xchg
ins
push
or
dec
push
or
call
add
and
mov
sbb
sahf
in
aas
in
mov
xchg
pop
jmp
mov
cmp
or
add
push
add
popf
or
mov
or
sub
fiadd
xor
sbb
cmp
cmp
ja
and
call
jp
movs
xor
test
inc
outs
sbb
lea
dec
push
pop
xchg
pop
push
into
or
or
and
and
xchg
loope
popf
add
mov
test
cmp
in
and
ret
push
mov
xchg
loopne
leave
jnp
xor
and
lods
js
hlt
xchg
js
icebp
pop
jp
test
pop
je
loopne
xchg
inc
dec
sub
ret
inc
retf
movs
loope
aam
fmulp
cmp
add
adc
fucomi
push
jb
mov
pop
adc
mov
cwde
or
xor
mov
adc
mov
pop
inc
jmp
inc
adc
xor
or
adc
(bad)
in
jnp
mov
mov
ret
cld
inc
add
cmp
out
and
das
jmp
jge
out
nop
cmps
or
ret
fidivr
in
int
aas
xchg
xlat
dec
sbb
pop
imul
cmp
mov
dec
in
fistp
xor
(bad)
cmp
adc
(bad)
and
clc
xchg
sub
push
mov
mov
rol
pop
sbb
jecxz
inc
js
jg
(bad)
and
xchg
cmp
je
rol
lods
sub
js
pop
aaa
add
lds
cs
sub
xchg
adc
shr
sub
je
mov
sbb
or
jbe
nop
inc
pop
mov
mov
and
popa
pushf
xchg
scas
push
sub
adc
add
sbb
or
sbb
shl
cmp
pop
jmp
add
rol
mov
cmp
je
jge
and
jne
jmp
xor
and
jne
push
jmp
mov
adc
(bad)
pusha
jge
into
pop
xor
inc
sti
dec
jmp
or
test
adc
sub
sahf
push
ja
lea
wbinvd
hlt
es
push
mov
cmp
(bad)
rol
xchg
lods
mov
mov
sbb
ss
add
ins
dec
fldcw
neg
fimul
sbb
lods
add
sub
add
xchg
push
add
push
test
push
add
jmp
pusha
sahf
(bad)
jg
adc
xchg
(bad)
xor
cmp
sahf
xchg
and
rcl
in
or
inc
push
push
and
cmp
cmps
jmp
mov
pop
jecxz
adc
rol
adc
push
jecxz
mov
out
enter
ret
test
mov
jle
inc
jg
adc
and
mov
pusha
sbb
test
inc
je
call
cmp
nop
jb
cmp
ret
push
lahf
je
les
sbb
adc
sbb
sbb
jnp
leave
xor
sub
pop
add
fs
sbb
lea
aam
mov
cmp
sbb
xchg
(bad)
cmc
test
cmp
adc
mov
(bad)
cli
adc
add
dec
add
(bad)
or
sub
inc
xchg
lods
sbb
frstor
(bad)
sbb
push
pop
mov
and
jb
jmp
or
adc
push
ror
lea
mov
lods
mov
dec
call
test
ror
dec
cdq
xor
loope
push
jmp
mov
cmp
mov
sti
inc
mov
or
jne
lea
sahf
lods
mov
pop
push
sbb
lahf
loope
lock
je
aaa
pusha
dec
inc
div
xchg
mov
add
daa
mov
in
test
xor
mov
in
push
loopne
out
cmp
xchg
pop
(bad)
jmp
pop
push
jmp
or
cwde
nop
xchg
ret
mov
and
cmps
sub
sbb
or
mov
sub
inc
shl
mov
es
jne
add
jnp
add
mov
call
inc
inc
sbb
jg
mov
adc
push
out
or
push
or
in
lods
daa
or
aam
or
(bad)
retf
jno
aas
call
mov
xchg
dec
adc
xor
lock
pushf
je
mov
pop
xchg
cld
mov
adc
push
nop
and
adc
dec
add
add
bound
into
pop
rol
imul
out
in
mov
cmovae
xchg
test
shl
or
fadd
aam
push
lock
xchg
or
sti
pusha
push
mov
mov
mov
mov
nop
loope
dec
test
xchg
jo
adc
fwait
out
mov
aad
or
mov
xor
lahf
cmp
pop
or
mov
(bad)
cmp
imul
ja
je
call
scas
adc
cmp
ins
add
adc
in
je
je
adc
(bad)
mov
dec
inc
pop
call
or
das
pushf
ret
loop
(bad)
dec
mov
inc
cmp
push
ins
mov
ror
sbb
inc
jmp
das
je
lea
mov
xor
mov
pop
inc
add
mov
dec
cmp
sbb
pop
xchg
pop
push
aaa
iret
xchg
or
mov
inc
nop
jecxz
and
jmp
lods
fsubr
jmp
and
dec
add
or
test
pop
je
fisttp
in
jo
sbb
je
mov
mov
mov
pop
mov
add
xchg
es
or
add
and
mov
lods
mov
ror
add
lea
sbb
jnp
imul
jno
dec
stc
loope
sbb
jmp
shl
dec
pushf
xor
jae
je
jnp
adc
sub
aam
pop
dec
imul
sub
push
inc
sbb
xchg
jl
xor
lahf
mov
push
je
ss
(bad)
push
cmps
xor
dec
out
neg
dec
test
mov
ret
call
hlt
call
mov
inc
and
push
aas
sti
ins
xchg
repnz
push
sbb
jmp
inc
jge
jecxz
add
adc
cmp
add
repnz
ds
add
push
ret
fsub
fsubr
push
cld
push
call
ins
xor
lock
mov
mov
add
icebp
jne
mov
xor
outs
mov
pop
jmp
sub
shl
mov
jg
pusha
jg
jno
test
mov
mov
lea
cmp
std
dec
push
push
sub
das
xchg
test
mov
add
mov
xchg
jne
test
mov
fimul
sbb
mov
shl
mov
add
mov
sbb
gs
repnz
(bad)
add
test
push
packsswb
mov
dec
pop
xor
jmp
lea
cmps
ficomp
call
je
xchg
or
dec
push
inc
sbb
push
mov
cmps
jo
and
xchg
fisubr
int
pop
sbb
push
push
inc
mov
cwde
jl
jo
pop
stc
mov
dec
xor
les
inc
sub
(bad)
jb
inc
adc
loopne
rcl
fsubr
gs
int
cs
pusha
xor
sar
push
cmps
imul
popa
add
das
daa
push
sbb
push
jl
push
(bad)
jl
rcl
retf
sar
inc
leave
popf
sbb
pop
adc
dec
and
test
or
or
lods
nop
adc
mov
dec
movs
mov
fisttp
retf
stc
xchg
in
sbb
adc
add
mov
sti
pop
or
sbb
xchg
icebp
adc
push
jge
mov
lods
lock
xor
ds
dec
push
jl
sub
rcl
or
mov
aam
inc
push
xor
push
jnp
movs
addr16
scas
je
jns
push
jns
aaa
mov
dec
ss
outs
pop
test
sahf
jge
sti
imul
add
loope
test
mov
test
mov
fs
das
pop
xchg
lea
add
or
xchg
scas
jg
aam
mov
retf
mov
inc
daa
push
stc
inc
rol
mov
je
(bad)
addr16
mov
and
xor
xchg
(bad)
xor
call
jnp
movs
add
or
push
xchg
and
cli
lea
xor
mov
xor
pop
ret
jecxz
shl
test
test
jae
push
lea
shl
xchg
or
mov
push
push
rcl
sub
sub
popa
jbe
data16
or
add
data16
imul
es
jg
dec
sbb
and
add
adc
mov
and
sahf
mov
fist
sbb
aaa
push
add
pop
movs
test
cmps
imul
dec
or
xor
jo
popa
arpl
pop
push
leave
inc
pop
daa
add
dec
stos
nop
aam
jmp
cmp
xor
aam
or
ja
cmps
or
(bad)
xchg
cmp
and
mov
pop
addr16
pusha
mov
aam
xchg
sub
mov
stos
mov
jmp
dec
loopne
mov
and
and
call
sub
and
mov
stc
pop
or
leave
xor
adc
jae
adc
std
jle
movs
adc
push
pop
stos
test
jno
data16
mov
js
jbe
out
xchg
sub
inc
into
xor
jmp
imul
fist
aad
jb
push
daa
cmps
pop
dec
imul
cmps
mov
ror
mov
jne
xchg
mov
dec
clc
rcr
jg
ret
add
xor
mov
push
in
jns
xor
or
push
adc
adc
sub
mov
cmps
add
repnz
and
add
add
(bad)
in
push
repnz
je
push
sub
inc
push
xchg
inc
add
call
jne
daa
inc
mov
mov
xchg
sbb
sbb
and
push
and
dec
mov
cmp
sbb
lock
test
movs
sub
(bad)
mov
mov
popa
pop
(bad)
and
mov
push
int3
xchg
cmp
pushf
bound
popa
push
and
fstp
mov
inc
shr
add
pop
jae
ja
hlt
vhaddpd
cmp
add
pushf
jmp
cmp
sub
popa
xchg
fstp
jmp
fiadd
rcl
cmp
jns
and
fdivrp
lock
lock
adc
ds
sub
ret
aaa
je
jmp
pop
or
jge
or
jb
push
mov
stc
jmp
adc
xor
loop
dec
in
sub
in
mov
je
les
push
jae
sbb
aaa
push
aaa
out
(bad)
arpl
sbb
adc
(bad)
lock
xchg
or
aaa
loopne
sbb
dec
repz
sub
div
adc
mov
lahf
sub
inc
add
cmps
(bad)
ins
inc
and
dec
retf
pop
pop
mov
adc
sar
push
loopne
and
mov
fistp
or
or
lea
sbb
push
pop
in
jg
imul
or
jne
std
add
call
ficom
dec
fwait
bnd
(bad)
js
arpl
jecxz
nop
fmul
push
mov
fld
cmp
arpl
scas
loopne
or
mov
and
daa
int
stos
pop
in
add
xchg
jne
shl
mov
lea
pop
sub
nop
add
mov
daa
pushf
test
rcl
inc
ret
cmp
or
loopne
or
mov
fld
movs
add
scas
push
mov
aaa
ret
adc
and
jl
pop
lds
shl
or
jmp
gs
add
mov
in
in
jmp
jmp
arpl
pop
cmp
test
(bad)
icebp
sbb
pop
sub
or
mov
xor
push
ror
pop
inc
add
push
inc
jo
xchg
lods
push
sbb
fsubr
fadd
cmp
in
push
ins
sbb
lds
in
shl
push
loop
mov
mov
xor
jge
retf
add
test
or
movs
inc
push
bound
pop
(bad)
sbb
movs
add
add
sar
mov
xchg
gs
cmp
ss
pop
mov
cmp
movs
sub
out
add
and
inc
mov
imul
jp
jb
push
xchg
cdq
ficomp
(bad)
xchg
or
test
dec
fisttp
sbb
xchg
adc
lock
xor
jge
bound
adc
cmp
ins
fld
jne
(bad)
mov
jbe
loopne
(bad)
(bad)
mov
and
jbe
mov
push
add
fcmovnu
pop
fs
test
xchg
push
movs
ret
adc
test
cmp
test
scas
js
ret
add
(bad)
cmp
mov
popa
inc
dec
ret
cwde
mov
enter
xor
aaa
pop
jg
les
adc
fidiv
mov
lock
(bad)
or
sahf
pop
and
fcmovu
xchg
add
mov
imul
dec
cmp
xor
js
push
mov
add
cmp
loope
xor
inc
jae
mov
or
(bad)
and
push
xchg
inc
je
cmps
movs
mov
shr
pushw
mov
fst
cmp
mov
outs
cmp
dec
mov
inc
mov
in
or
add
les
sbb
jo
mov
inc
push
and
(bad)
sbb
pop
mov
stc
add
gs
jp
xchg
pop
popa
lahf
or
xchg
cmp
xor
pop
in
xor
popf
addr16
or
inc
shr
ret
sbb
arpl
jno
clc
and
add
xchg
mov
sub
mov
push
push
mov
ins
ret
xchg
iret
pop
or
jo
adc
xchg
movs
(bad)
xlat
icebp
pop
and
(bad)
lock
shl
mov
cmp
mov
jno
js
int3
mov
and
movs
ds
in
pop
arpl
dec
xchg
daa
aad
cwde
(bad)
pop
into
push
aad
std
mov
xchg
sti
outs
xchg
ret
push
adc
mov
rol
popa
mov
push
in
mov
es
dec
pop
adc
jo
aaa
sbb
stos
ins
cmp
mov
lods
pop
out
daa
mov
stos
sub
push
aad
jle
outs
mov
es
ins
loope
cld
sub
fldenv
jne
add
out
nop
add
ret
mov
fisubr
sub
or
mov
mov
and
dec
fmul
int
inc
sbb
fdiv
adc
fs
push
mov
ss
jmp
xor
jle
pop
or
xchg
nop
cmc
pop
call
test
jmp
add
jge
jl
(bad)
rol
mov
add
xchg
ja
scas
out
call
mov
push
cdq
sbb
movs
push
pop
mov
pop
and
mov
pop
push
push
cli
addr16
add
das
sbb
lods
out
les
adc
pop
mov
and
rcl
call
xchg
and
pop
inc
loope
sbb
mov
sub
pop
call
sbb
in
cmps
in
sahf
ins
pushf
dec
sbb
in
pop
iret
push
push
sub
ja
ins
leave
sar
test
pushf
in
retf
int3
jp
ret
add
xor
pop
scas
cmps
rcr
cs
rcl
test
rcr
in
das
cmp
mov
cmovge
pusha
cmps
jle
push
shl
jge
je
dec
dec
mov
and
dec
sub
push
mov
sahf
(bad)
dec
fisttp
inc
push
into
xchg
dec
inc
xchg
fldenv
ins
outs
fsub
adc
adc
adc
sbb
mov
hlt
mov
adc
add
or
cmp
and
xchg
repnz
sar
je
sbb
adc
push
cmp
jno
mov
add
adc
pop
add
sub
push
or
push
jle
jne
xchg
dec
mov
mov
mov
cmc
sbb
xor
jmp
fidivr
ins
or
sub
and
fiadd
xchg
xor
les
xchg
ja
stos
push
data16
pop
adc
xor
and
nop
out
sub
dec
lods
fisub
fild
mov
push
push
jae
sub
adc
int3
fdivr
enter
mov
sbb
call
mov
pop
fadd
(bad)
or
retf
dec
lock
sbb
adc
add
sub
ret
xchg
or
mov
mov
clc
les
call
mov
ds
xor
aad
or
sub
into
lea
adc
jmp
nop
xlat
add
fdiv
leave
pop
cmp
das
xchg
fsubr
out
mov
mov
sbb
pop
or
arpl
cmp
jne
dec
or
out
shr
mov
jne
cmp
push
jns
es
jo
cli
movs
jg
test
add
jo
js
inc
mov
loope
pop
adc
sbb
fisubr
xor
mov
loopne
daa
xor
sar
add
mov
ds
push
clc
inc
dec
cmp
inc
pushf
add
cmps
dec
adc
xchg
jbe
test
mov
in
xchg
add
sub
into
mov
push
icebp
sub
mov
pop
jne
(bad)
sar
xor
mov
mov
mov
aam
loope
push
mov
sbb
call
retf
(bad)
cs
out
enter
and
xchg
xor
fcomp
xchg
xchg
sub
adc
or
and
nop
or
jae
xor
add
call
xor
fwait
or
push
xchg
mov
pushf
mov
or
je
fbstp
(bad)
cmp
adc
lock
inc
add
or
int
daa
clc
inc
das
fucom
adc
xor
enter
mov
inc
push
cmp
and
(bad)
in
sbb
or
in
add
fnstcw
mov
push
mov
mov
in
adc
jne
push
mov
outs
cmp
dec
sub
dec
mov
add
mov
test
pop
jne
xor
sbb
sub
push
sub
cmp
mov
jg
xor
add
adc
xlat
movs
adc
adc
cmp
push
fs
adc
jg
rol
sbb
hlt
dec
mov
mov
rcr
icebp
xchg
out
xchg
call
push
inc
ds
xor
mov
inc
lock
xor
movs
push
js
inc
inc
push
pop
shl
int
ret
mov
sub
stc
cmp
xor
pop
xchg
jne
mov
dec
jle
xchg
div
je
popa
pop
mov
dec
loope
and
mov
leave
pop
pop
movs
mov
ss
test
jae
pop
adc
popa
and
shl
xchg
mov
nop
mov
lea
pop
test
clc
push
xor
xor
inc
inc
cvttps2pi
push
enter
repnz
cld
push
and
sar
test
or
int
das
sub
lea
jo
sub
xchg
inc
fimul
into
scas
in
sbb
cwde
pushf
and
int
jb
pop
pop
jmp
sub
es
or
dec
stos
add
push
push
jns
add
mov
les
in
sub
sbb
push
ss
loope
int3
push
dec
pop
or
pop
sbb
pop
mov
xor
xchg
cdq
add
or
loopne
sbb
ja
jmp
xchg
sub
fdiv
sub
sbb
and
retf
adc
dec
psubusw
stc
rol
div
adc
adc
push
push
cmps
dec
shl
into
sub
mov
jmp
pop
rcl
mov
and
adc
sub
dec
add
push
push
daa
or
pop
mov
and
push
add
mov
cmp
xor
imul
aam
in
jbe
in
imul
xor
xchg
sub
adc
dec
fisubr
jmp
addr16
and
dec
adc
adc
adc
pop
mov
pop
and
test
loop
xor
push
jmp
pop
mov
pusha
push
sbb
inc
adc
sahf
cmp
jmp
inc
mov
hlt
jmp
mov
jb
xor
mov
add
mov
push
add
push
frstor
sub
es
or
je
loope
popf
push
xchg
adc
sub
or
leave
push
push
cmp
hlt
mov
fstp
inc
repz
jle
sub
fucom
adc
mov
xchg
ds
add
push
pop
sti
cmp
cmp
int3
ss
cmp
push
and
enter
sub
or
jmp
jg
adc
into
cbw
add
sub
sbb
inc
sub
xor
push
loop
dec
mov
pop
cmp
stos
bound
je
test
xadd
fnstcw
test
int3
sub
jmp
mul
rol
inc
retf
mov
xor
sbb
sbb
or
outs
(bad)
lds
inc
mov
cdq
inc
dec
xor
in
jmp
sbb
ins
(bad)
jo
jmp
mov
sar
call
and
and
jmp
and
enter
jae
add
enter
sub
fld
xor
adc
pop
inc
and
pop
(bad)
imul
xchg
(bad)
push
push
push
sbb
dec
jns
push
jecxz
cmp
mov
inc
and
jno
int
inc
and
add
jg
push
int
aas
jo
lahf
mov
add
xchg
mov
(bad)
jmp
popf
xchg
lock
pop
adc
dec
or
pop
fcomp
shl
dec
adc
adc
dec
adc
jle
mov
je
sub
sub
or
xor
pop
add
mov
jb
or
movs
inc
xchg
sbb
cmp
rcl
sbb
or
es
retf
in
jnp
add
jae
retf
in
inc
ror
jbe
imul
shr
loope
xchg
add
pop
push
das
es
pop
pop
out
or
pop
xchg
(bad)
lea
fimul
xchg
push
popf
sbb
call
or
sub
ds
add
pop
xchg
sahf
dec
jmp
stc
inc
xor
sahf
sub
dec
nop
mov
jp
pop
fcmovnb
adc
outs
add
in
nop
jbe
inc
mov
(bad)
imul
outs
aaa
xchg
aas
mov
call
or
pop
sbb
add
aam
popa
in
lods
fiadd
repnz
sbb
(bad)
inc
adc
add
ffree
neg
test
or
push
add
sbb
mov
adc
cli
jo
sbb
mov
push
pop
xor
sbb
add
mov
mov
mov
add
pop
cmp
js
ins
sbb
dec
inc
inc
push
inc
cmp
and
std
loopne
dec
call
inc
mov
dec
test
add
inc
cdq
dec
ror
mov
sub
retf
add
pop
mov
push
inc
add
test
push
push
add
lahf
retf
fnstsw
mov
sub
and
loop
ret
out
out
add
fmul
xor
pop
add
pop
dec
or
inc
push
cmp
arpl
sbb
sar
fild
jne
lahf
or
mov
sub
pop
inc
xchg
mov
sbb
xchg
icebp
mov
pop
loop
cmps
cmc
or
add
add
fxch
push
dec
(bad)
dec
sbb
push
sbb
cmp
aaa
and
mov
and
push
mov
nop
add
mov
xchg
js
ss
push
add
cmp
jle
xor
adc
leave
lock
cld
push
mov
daa
pop
(bad)
or
pop
and
repnz
mov
repz
add
sbb
ret
pushf
sbb
jne
lock
arpl
cmp
jle
popa
add
adc
scas
pop
call
mov
xchg
mov
test
or
xor
mov
jg
jmp
inc
mov
inc
sbb
or
loopne
nop
push
sbb
ror
scas
dec
adc
jne
inc
pop
xchg
mov
out
adc
sar
or
and
mov
out
add
or
js
pop
push
fisttp
int3
push
retf
dec
retf
pop
fist
dec
retf
mov
cmps
mov
inc
cdq
into
call
sbb
pop
push
push
sub
push
push
repnz
jmp
push
jge
push
iret
in
or
push
popa
cmp
push
(bad)
and
cli
sbb
dec
out
icebp
inc
mov
inc
sub
sbb
or
int
add
jg
add
ficomp
pop
push
jmp
pusha
call
cmp
xor
in
lock
xchg
adc
xchg
idiv
xchg
push
movs
adc
mov
xor
mov
xlat
inc
inc
cs
cmps
test
icebp
dec
mov
fsubrp
inc
inc
lds
cmp
aas
push
fisub
jno
pop
push
mov
mov
jp
fld
aas
je
xor
ret
lods
out
add
imul
int3
call
xchg
inc
jb
call
mov
bound
xchg
out
push
sub
or
push
dec
arpl
ins
lea
mov
(bad)
out
inc
or
cmp
xor
mov
mov
bound
js
or
add
jns
jl
fcom
ja
dec
or
jmp
add
or
or
mov
add
xor
or
adc
jns
sbb
or
test
inc
xor
jbe
bound
lahf
jl
sbb
(bad)
sub
xchg
gs
jne
mov
jmp
sbb
adc
cmp
xchg
shrd
mov
out
mov
lea
retf
fmul
inc
and
call
cli
popa
mov
mov
mov
(bad)
(bad)
shr
fdivr
(bad)
jno
fstp
and
pop
aam
or
adc
test
add
aam
push
mov
mov
ss
push
inc
ret
loop
jp
(bad)
dec
(bad)
repnz
shl
std
cld
mov
cmp
xlat
add
pop
jnp
xchg
lahf
out
inc
add
rcr
lds
cmp
lea
and
sbb
pop
cmp
mov
sbb
ins
jne
add
stc
sub
sbb
jne
popa
inc
test
inc
lods
and
add
movd
rep
pop
and
push
mov
xchg
stc
lock
lods
lods
mov
scas
pop
jns
inc
cld
sbb
push
push
push
out
test
call
push
movs
je
mov
pop
or
popf
call
jne
fwait
pushf
pop
inc
add
adc
enter
test
fcmovne
xchg
jmp
mov
jo
pop
iret
in
je
pop
add
xor
mov
xlat
push
sbb
xchg
movs
xchg
(bad)
icebp
adc
ret
jne
cmp
xchg
cdq
xor
mov
into
inc
add
clc
adc
mov
ja
sar
and
add
mov
push
data16
or
push
cmp
mov
and
jp
loopne
add
mov
cs
and
mov
jnp
or
out
mov
rcl
sbb
mov
xchg
retf
call
test
xor
mov
dec
cmp
sbb
lods
add
out
push
out
add
shr
movs
push
mov
loope
xor
rcl
sbb
xor
mov
aas
pop
or
loopne
aas
or
outs
in
push
inc
jp
es
retf
loop
mov
ror
es
mov
mov
call
sub
jmp
inc
mov
adc
and
(bad)
jl
ds
(bad)
rcl
pop
jp
enter
jmp
pusha
xchg
call
ficom
xor
sub
and
inc
xchg
adc
clc
add
pusha
jne
jmp
rol
sbb
and
lods
shr
sbb
push
and
sbb
adc
inc
xchg
mov
push
mov
cmp
mov
(bad)
and
jnp
rol
pop
mov
xchg
mov
out
xor
nop
sbb
call
mov
cmc
and
mov
or
test
jmp
jne
dec
add
push
fwait
xchg
inc
dec
call
punpckhdq
test
ret
mov
ret
dec
(bad)
fbld
movs
aam
inc
inc
adc
inc
xor
push
pushf
outs
inc
push
fsub
mov
test
or
ja
add
loopne
jecxz
sbb
mov
leave
xor
mov
cmp
adc
imul
es
inc
mov
inc
add
adc
nop
fisubr
loopne
ss
or
jle
dec
or
mov
nop
mov
sahf
mov
aaa
pop
xor
ins
lahf
leave
add
push
mov
outs
add
sbb
or
adc
test
push
inc
stos
cmp
mov
dec
scas
lods
mov
rcr
rol
lock
scas
sub
add
pop
xchg
xchg
and
sbb
mov
test
not
add
ins
xor
jl
bound
xor
and
lea
(bad)
rcr
sub
xchg
ret
mul
jg
lock
push
test
inc
les
pop
(bad)
dec
cmc
movs
push
mov
pop
call
cs
inc
ins
or
dec
mov
xchg
aas
ss
test
mov
sub
xchg
idiv
and
adc
sbb
jmp
shl
or
test
jb
arpl
mov
cmp
mov
xor
aam
and
cmps
in
sbb
add
das
inc
push
call
jne
add
mov
mov
lahf
cmp
(bad)
(bad)
cmp
or
rol
or
popf
sbb
shl
sub
das
ret
(bad)
mov
xor
fnsave
cmp
les
fwait
and
jmp
fiadd
adc
and
or
sti
push
push
jg
out
mov
push
cmp
movs
cmps
scas
jp
ret
mov
adc
sub
cmp
jne
or
shl
(bad)
jae
retf
pushf
and
push
mov
push
or
xor
rol
cmp
jb
mov
jns
fs
adc
rcr
in
shl
and
and
sub
loopne
adc
out
pop
jo
xchg
fwait
inc
aam
jl
mov
test
and
mov
sbb
cmp
shr
test
push
adc
pop
es
sbb
enter
dec
or
cld
xor
cmp
ja
fst
xchg
call
fistp
je
sar
out
mov
or
call
xchg
and
ss
adc
lods
pop
js
mov
test
lods
jmp
push
jne
call
mov
push
fmul
and
push
fild
jnp
inc
std
mov
dec
jne
cmc
clc
push
jne
add
jmp
call
rcl
clc
aad
mov
add
xor
adc
leave
pop
repnz
cwde
add
std
and
inc
jne
push
mov
js
inc
cmp
out
out
jmp
add
mov
stos
iret
mov
pop
jno
adc
cmp
mov
sbb
xchg
push
fcomp
mov
leave
mov
dec
sbb
popa
pop
(bad)
sub
mov
sbb
inc
sub
je
mov
adc
arpl
sub
out
xchg
ds
jne
jmp
movaps
sbb
adc
cs
xchg
adc
mov
sti
jmp
sub
xor
mov
sbb
je
test
cmp
nop
xchg
adc
stos
xchg
js
push
pop
mov
cmp
xor
cs
push
push
repz
fidivr
in
cmp
call
and
aaa
dec
jmp
cmp
or
and
jae
add
std
popf
xchg
ss
cmp
and
mov
repnz
in
test
sub
or
retf
add
dec
xor
xor
push
sub
sbb
pop
add
dec
xor
sub
fistp
mov
add
imul
and
sbb
mov
pop
outs
mov
push
and
pop
mov
lea
retf
clc
xor
and
leave
ins
jg
pop
mov
mov
mov
cs
test
(bad)
sbb
cmp
(bad)
or
sub
jl
add
add
mov
enter
movs
add
sbb
fidivr
sti
or
or
mov
add
cmps
das
and
mov
mov
xor
xchg
shr
dec
push
pop
push
mov
pop
push
dec
add
sub
mov
mov
in
or
dec
cdq
jnp
add
inc
movs
call
mov
cld
mov
fbld
scas
xor
pop
std
cmp
push
jno
sub
dec
inc
rcr
dec
jmp
pop
push
cmps
nop
adc
mov
sar
cli
ror
lods
imul
ss
inc
ffreep
(bad)
mov
sub
pop
or
movs
call
loopne
adc
mov
and
or
imul
push
arpl
sub
mov
inc
daa
cwde
daa
or
fisub
pop
pop
nop
add
loope
push
test
pusha
int
rcl
pop
outs
in
or
fsub
add
and
mov
imul
scas
test
jge
pop
xchg
xchg
sbb
or
sbb
jle
or
test
and
add
sub
push
icebp
and
adc
or
js
pop
jl
cmp
and
xchg
push
add
add
pop
or
mov
cli
call
daa
or
pop
dec
pop
jmp
dec
jnp
xchg
call
mov
and
cmp
sbb
dec
movs
jnp
xchg
rcl
pop
adc
jle
and
retf
aas
lea
or
sub
fidiv
mov
xor
ins
xchg
sbb
sub
adc
push
ss
inc
std
cmp
hlt
mov
adc
aam
inc
jo
sub
push
mov
push
call
mov
lahf
inc
mov
sub
jl
push
dec
imul
ret
test
pop
xchg
jp
shl
sbb
rcr
xchg
je
sub
daa
mov
add
add
dec
mov
outs
int
xchg
xor
inc
mov
call
adc
mov
push
pop
cmp
movs
lds
adc
pushf
xchg
mov
jns
test
mov
lods
jmp
icebp
lea
xor
cmp
pop
jne
test
and
dec
imul
sub
jne
(bad)
jne
mov
test
test
dec
jne
xchg
pop
cmp
inc
loopne
in
and
mov
mov
mov
mov
add
ins
dec
cmps
mov
movs
and
fiadd
add
out
inc
xchg
nop
call
mov
bound
test
mov
adc
shl
arpl
int3
add
loope
aaa
sbb
inc
pop
xor
mov
int
pop
mov
or
retf
or
xchg
push
fdiv
movs
and
mov
daa
ins
jmp
mov
mov
add
and
sbb
mov
mov
lods
les
aam
frstor
test
jmp
sub
shl
sub
mov
cmps
push
push
cmp
sub
les
test
push
xor
push
ret
add
push
push
loope
mov
mov
dec
inc
pop
in
dec
add
mov
adc
mov
sbb
das
adc
xor
xor
cmp
popa
xor
push
pop
(bad)
mov
xor
cmp
sub
inc
lea
les
xsaveopt
das
cld
push
call
ror
hlt
dec
mov
dec
push
sar
xchg
cmp
mov
pop
sub
pop
inc
sbb
xchg
pusha
aaa
adc
mov
inc
inc
add
psllw
clc
lea
daa
jl
lods
cmp
sub
push
(bad)
cmp
sub
in
call
mov
xor
loopne
jno
mov
or
push
stc
pop
xchg
sub
inc
jne
adc
mov
(bad)
shr
sar
(bad)
cmps
sbb
and
ror
push
sbb
dec
out
int
or
sar
mov
pop
imul
dec
mov
pop
sbb
call
scas
adc
xchg
sub
test
mov
and
push
jmp
cli
cmp
xor
cmp
jle
mov
pop
add
add
push
rcl
imul
add
mov
test
adc
fbld
adc
leave
sub
xor
push
movs
std
(bad)
daa
dec
sbb
test
add
aad
in
lods
xor
jmp
dec
xchg
scas
pop
test
or
cmps
or
xchg
(bad)
jnp
cmp
movs
mov
outs
sub
(bad)
loopne
sub
jb
mov
gs
add
neg
fs
sbb
adc
shl
inc
push
rcr
xchg
retf
pop
(bad)
add
jae
xchg
cmp
les
adc
inc
sbb
mov
jmp
mov
mov
push
mov
ins
shr
and
inc
xor
fisub
jge
hlt
dec
mov
push
mov
mov
pop
and
test
mov
inc
ret
call
jl
mov
and
pushf
aam
push
sbb
ret
and
clc
pop
mov
fist
add
mov
or
dec
loopne
add
cmp
jbe
cmp
xchg
dec
lods
push
or
cld
dec
add
cmp
cli
adc
mov
cmp
or
cli
ds
jae
aas
adc
inc
and
dec
xchg
xchg
xlat
clc
jmp
fiadd
lea
jp
jle
ds
aas
or
mov
ds
sub
int3
out
mov
mov
pop
and
mov
(bad)
stc
sub
repz
fs
adc
loope
cmp
push
call
add
je
sub
mov
and
ror
or
dec
nop
cmp
push
jb
add
shl
mov
movs
fadd
lea
add
push
sbb
cs
lea
mov
repz
sub
retf
scas
pop
pop
xchg
sahf
gs
ror
in
sub
add
sbb
pushf
jbe
shr
and
sub
or
or
mov
inc
jbe
jmp
fdivr
mov
outs
jmp
add
pop
ror
cmp
(bad)
call
or
add
dec
mov
mov
repnz
scas
cs
retf
jo
test
sbb
mov
(bad)
add
dec
or
pop
adc
call
mov
jae
sub
cs
inc
jae
pushaw
fidiv
(bad)
mov
loope
sbb
ja
jnp
mov
jno
pusha
xor
push
sahf
push
push
jge
cmp
in
sub
pushf
pusha
mov
pop
mov
je
pop
fisubr
sbb
stc
cmp
mov
jnp
(bad)
or
or
cmc
pusha
leave
scas
aas
push
mov
sub
dec
loopne
sub
mov
clc
cmps
pop
pop
jb
dec
jb
sub
mov
(bad)
cmp
cdq
inc
cmp
int3
add
jns
pop
sbb
add
nop
(bad)
outs
loop
cdq
and
add
add
dec
dec
xor
int
fsubr
sub
or
and
pop
(bad)
xchg
pop
mov
sbb
call
or
push
imul
xchg
mov
je
and
sub
into
and
jg
iret
and
push
iret
sub
ss
xlat
scas
push
push
xor
dec
ficomp
and
mov
mov
vcvtps2pd
inc
cmp
(bad)
cli
sub
(bad)
call
dec
sar
jecxz
add
in
stc
push
xor
cmp
dec
pop
hlt
mov
fs
into
push
pop
pop
push
cmps
out
sub
clc
add
add
sub
fwait
adc
and
push
lock
xchg
leave
je
dec
cwde
fild
sub
mov
popf
addr16
push
cmps
out
dec
jb
clc
add
sbb
adc
add
push
bswap
and
jb
cli
cld
mov
jne
mov
dec
movs
inc
xor
pop
mov
enter
xchg
xor
addr16
sub
jno
xor
pop
lds
cmp
cmp
popa
jns
dec
leave
push
cmp
adc
xchg
imul
mov
or
int
xor
cmp
and
aas
pop
add
cs
pop
rcl
mov
cdq
add
aad
lods
mov
aas
jmp
fs
or
fisttp
(bad)
in
pop
push
inc
aas
mov
or
outs
out
loope
xor
mov
add
in
and
enter
inc
add
push
out
mov
push
sub
scas
mov
add
cmps
stos
xchg
jmp
add
out
push
mov
pop
add
sub
aam
out
stc
sub
das
fbld
add
and
xchg
dec
dec
sub
ds
xchg
sub
push
repz
xchg
xchg
sbb
or
pop
in
or
test
cmp
push
jb
or
or
adc
or
push
imul
sbb
dec
xchg
add
cli
cmp
sbb
push
ja
mov
cmp
pop
xchg
sahf
dec
push
in
push
test
imul
sub
xchg
(bad)
jecxz
pop
xor
das
lahf
and
test
and
pop
add
ja
sbb
xor
mov
jo
dec
test
(bad)
in
mov
or
mov
xor
imul
or
addr16
adc
or
pushf
add
out
in
pop
pop
call
inc
mov
cmp
cmp
mov
sbb
push
adc
neg
fdiv
repnz
xor
mov
and
jb
(bad)
cmpxchg
or
pop
clc
sbb
cmp
addr16
clc
add
mov
popa
fadd
fild
jne
mov
popf
pop
adc
adc
inc
nop
push
and
retf
ins
mov
outs
push
les
repz
clc
xlat
ja
lds
in
xchg
aaa
mov
stos
sub
xchg
and
dec
aad
adc
pop
lods
sub
add
inc
cmc
inc
jns
or
fdiv
fisub
sub
xchg
mov
cmp
cwde
inc
mov
cwde
jmp
add
jb
or
push
xchg
jbe
cli
sbb
mov
push
adc
jbe
adc
and
add
setl
mov
fnstcw
mov
and
cmp
(bad)
pusha
in
or
push
fidivr
dec
adc
stos
repz
add
loopne
dec
rcl
arpl
cmps
sbb
aaa
rcl
sbb
rcr
xchg
pop
retf
xor
jo
mov
fisttp
stos
pop
imul
xor
lea
ficomp
je
push
mov
movs
cmp
fisub
mov
xor
mov
cdq
cmp
clc
push
lahf
push
pop
xor
pop
je
jmp
mov
mov
(bad)
xchg
ss
sbb
pop
inc
mov
repz
xor
repnz
mov
retf
add
mov
push
imul
jmp
fimul
mov
jbe
xor
cmp
call
or
pop
push
mov
ret
push
or
call
ret
call
jae
(bad)
lahf
icebp
mov
mov
dec
retf
retf
scas
inc
xorps
mov
xor
dec
add
leave
retf
out
pop
jbe
jns
push
fcmovnbe
inc
mov
cli
jae
jb
movs
out
rcr
lods
xor
daa
pop
inc
fisub
adc
mov
or
aas
add
pop
or
jae
add
push
dec
mov
xchg
inc
mov
xchg
push
or
cmp
mov
(bad)
out
es
shl
or
push
mov
xchg
ja
loopne
and
pop
cld
jmp
jecxz
fldcw
retf
sub
out
push
dec
aaa
or
mov
mov
lahf
cmp
in
push
pop
add
cmp
fcomi
adc
xor
jnp
pop
jne
or
or
sub
xchg
or
or
add
popf
dec
or
lea
jg
inc
mov
std
cmp
mov
mov
and
mov
inc
push
cmc
cmp
scas
call
mov
test
pop
pop
dec
loop
push
aaa
xor
fs
push
shl
lods
addr16
inc
mov
pop
clc
je
mov
jbe
test
das
iret
cmp
je
pop
xchg
jne
push
or
cmp
js
cdq
shl
push
or
add
dec
int3
mov
or
arpl
cld
fadd
dec
rep
adc
or
sbb
jns
movs
cmp
and
push
add
in
aad
inc
push
push
mov
adc
mov
jne
mov
sbb
pusha
dec
imul
lea
pushf
xor
cmp
sbb
in
cmp
cwde
add
mov
add
movs
shl
xchg
dec
(bad)
adc
lahf
retf
dec
lea
test
cs
adc
(bad)
adc
or
inc
push
pop
in
adc
push
cmp
cmp
sbb
js
test
ins
sbb
mov
jmp
lock
das
add
hlt
push
pop
sbb
enter
inc
lock
add
xor
add
xchg
fcom
adc
pusha
sbb
lea
je
retf
dec
shl
jo
call
pop
mov
jmp
dec
mov
fstp
or
and
mov
xor
cdq
pop
rcr
in
fbstp
cmp
xor
in
fs
add
imul
and
dec
pop
jne
cmps
popf
aam
scas
pop
arpl
std
push
addr16
rol
ret
or
cmp
push
sbb
xchg
or
and
and
or
xor
mov
push
test
pop
in
or
push
pop
pop
shl
fwait
stc
stc
sub
out
and
mov
push
sbb
call
enter
fwait
add
and
jnp
inc
add
loopne
pop
mov
or
jb
movs
pop
push
scas
and
inc
mov
pusha
or
(bad)
push
jge
aam
arpl
or
or
sbb
sub
jmp
ds
ret
les
add
add
(bad)
in
inc
mov
cmps
jl
mov
dec
sub
sahf
xor
mov
pusha
and
(bad)
sub
adc
add
add
xor
xchg
or
pop
sub
push
add
call
mov
push
add
mov
jb
(bad)
and
daa
clc
int3
push
jl
mov
inc
mov
push
push
add
inc
fisttp
add
push
call
sbb
std
xor
fcom
adc
mov
mov
cmp
xchg
in
(bad)
pop
mov
pushf
xchg
movs
in
push
mov
jo
sti
jmp
lods
mov
sti
sub
movs
pop
int
jecxz
ret
pop
fmulp
ja
and
mov
adc
daa
shl
mov
cs
xor
retf
xchg
or
pop
adc
(bad)
mov
adc
sbb
adc
sbb
jmp
sbb
mov
daa
pusha
and
fisttp
fist
lock
dec
inc
fcom
push
cmp
pushf
add
sahf
dec
adc
mov
xchg
dec
inc
enter
push
inc
pop
add
add
sbb
in
repz
mov
in
ins
jmp
rcl
adc
jecxz
addr16
jmp
or
retf
mov
xor
repz
dec
aad
les
aad
xchg
jge
je
dec
and
add
scas
add
and
invd
popf
and
inc
and
add
and
push
jbe
mul
je
daa
iret
(bad)
and
inc
jmp
push
sahf
scas
add
jg
rcr
js
mov
push
add
dec
ret
cs
enter
sti
call
fidivr
ins
sti
leave
inc
je
push
push
int3
popa
and
cmp
cmp
mov
pop
pop
sahf
inc
xor
jae
(bad)
xlat
popf
add
ret
and
or
pop
fwait
and
retf
inc
push
jb
adc
es
dec
shl
or
out
and
dec
xchg
shr
add
push
mov
shl
or
pop
daa
fcomp
push
sar
add
call
adc
push
mov
ss
add
mov
sbb
xor
sbb
pushf
call
or
jns
std
mov
rol
imul
daa
imul
shl
adc
jo
or
ficom
mov
and
xchg
mov
xor
mov
mov
sub
push
outs
mov
sbb
inc
jmp
loope
dec
sar
push
jle
in
and
or
sbb
xchg
mov
neg
in
sub
fscale
sub
or
xchg
mov
and
jbe
arpl
dec
add
je
imul
aad
ret
mov
push
adc
push
sbb
jns
cli
es
sub
ror
sub
sub
inc
or
pop
imul
mov
mov
mov
fnstenv
sub
pop
inc
and
and
scas
mov
xchg
pop
in
sub
sbb
and
popf
and
add
dec
xor
jae
movs
loopne
inc
pop
jb
cld
movs
popf
push
fidiv
push
jle
mov
(bad)
call
mov
push
popf
push
lss
and
sub
xchg
xor
je
clc
mov
int
push
imul
inc
lea
sub
xchg
inc
adc
out
inc
adc
gs
jmp
dec
and
mov
sbb
(bad)
mov
mov
cld
mov
add
mov
addr16
jns
mov
cmp
nop
pop
repz
call
paddb
cld
sti
daa
sub
es
cld
sti
inc
add
bnd
ins
jl
mov
scas
cmp
mov
retf
mov
fistp
or
adc
lods
xchg
mov
push
push
rol
sub
add
mov
xor
lods
rcr
jo
or
push
ins
cbw
sub
dec
lds
sti
or
popf
lods
inc
push
ss
ja
ss
fcomp
cmp
repnz
mov
push
mov
cmp
mov
jbe
jl
les
dec
outs
movs
ror
mov
js
loopne
jge
push
lea
xor
mov
scas
adc
mov
adc
jg
push
lock
sbb
cmp
sbb
sbb
mov
pop
fadd
pop
jl
or
call
js
cmp
jne
mov
retf
lds
je
or
xchg
adc
jno
jbe
mov
imul
add
adc
cmp
nop
and
ficom
adc
fcom
dec
xchg
push
add
jmp
mov
cs
in
mov
xor
jl
push
addr16
test
fs
lods
inc
movs
shl
and
pxor
or
mov
cmp
inc
xchg
xchg
xchg
pushf
and
mov
retf
movs
pushf
in
mov
pusha
jb
pop
mov
btr
inc
bound
xchg
cmp
je
jne
pop
call
pop
clc
and
fldl2e
cmp
inc
rcr
stc
rol
push
or
add
dec
add
pop
mov
jge
sub
js
mov
imul
rol
cmp
inc
push
pusha
cmp
mov
sbb
xor
sub
loop
je
fucomp
dec
push
xor
or
xchg
add
cld
mov
pop
lock
(bad)
dec
or
push
mov
data16
pop
test
pop
jmp
ret
jmp
mov
das
inc
mov
lock
jecxz
sbb
xor
in
dec
repz
mov
cld
pop
pop
aas
add
sbb
push
and
mov
and
cmp
jp
dec
(bad)
sub
and
mov
cmp
cli
sub
or
add
xor
and
add
jnp
add
out
add
in
add
jmp
into
or
je
jmp
mov
sbb
inc
mov
in
xchg
fs
neg
adc
neg
mov
inc
mov
adc
and
sub
mov
clc
mov
sbb
outs
jmp
ret
push
imul
sar
clc
or
jg
call
repz
mov
add
test
aam
clc
jne
mov
outs
inc
ret
dec
pop
arpl
loop
adc
mov
adc
movs
sub
inc
pop
ss
cmp
call
xchg
mov
pop
dec
mov
fidiv
adc
adc
test
mov
jle
hlt
popf
sub
inc
inc
pop
mov
bound
js
icebp
fwait
icebp
cmp
mov
call
rcr
sbb
or
out
pop
imul
push
outs
mov
mov
adc
pusha
pusha
pusha
push
adc
fcmovu
jo
sar
ja
push
cmp
imul
jecxz
arpl
nop
mov
jle
dec
dec
adc
ret
in
rcl
push
add
js
(bad)
shl
mov
adc
mov
and
and
jle
sbb
faddp
push
adc
xor
cmps
add
and
push
call
movs
pop
inc
sbb
pop
mov
and
fld
mov
sub
adc
push
push
pop
pop
adc
jle
sbb
adc
add
or
iret
add
add
jle
jb
add
call
sbb
test
inc
bound
ret
loopne
or
icebp
sbb
add
or
ret
or
and
adc
adc
mov
stc
or
sbb
cmp
jl
add
or
dec
jb
push
adc
pop
sar
and
pop
adc
imul
adc
mov
repnz
das
fwait
cmp
mov
adc
aad
mov
ret
push
xchg
loope
push
inc
shl
scas
mov
je
jg
ss
sbb
clc
(bad)
je
sbb
push
or
mov
push
ja
cld
cmps
movaps
stc
daa
test
js
xchg
sub
jmp
cmc
mov
shrd
shr
and
xor
jmp
neg
sbb
xor
shr
enter
adc
pop
jp
shl
mov
and
dec
sub
inc
sbb
push
xor
xor
xchg
push
cmc
mov
ret
pop
scas
jae
jnp
movs
adc
scas
fmul
jne
sahf
neg
adc
or
neg
mov
jmp
or
idiv
fsubr
mov
out
add
adc
shl
sar
mov
mov
adc
mov
mov
push
jmp
into
adc
mov
daa
push
rol
test
push
retf
mov
dec
cmps
or
inc
inc
(bad)
loope
push
cmp
push
jmp
mov
adc
add
ins
and
inc
adc
fidivr
xchg
repz
cmp
jno
je
in
add
sbb
cmp
add
les
and
fisubr
bnd
shl
push
mov
mov
aad
add
adc
push
test
dec
(bad)
mov
movs
sbb
jp
inc
jnp
cmp
mov
adc
stos
inc
sub
mov
sub
push
xor
or
call
and
or
push
rol
shl
dec
ret
fadd
loopne
cmp
xchg
rcr
sbb
or
xchg
popa
mov
dec
add
sub
or
and
cs
in
adc
inc
mov
push
not
adc
ins
pop
or
lds
and
fcomp
dec
cdq
sbb
rol
gs
stos
inc
push
sbb
neg
dec
push
fs
adc
and
add
pop
out
add
push
cld
mov
mov
clc
push
xchg
inc
fcom
pop
push
push
mov
mov
push
push
push
dec
out
push
sub
xor
adc
push
inc
std
inc
push
or
mov
inc
lock
bound
xor
cmps
rol
call
xchg
cmp
in
pop
jae
add
pop
sub
sbb
cmps
cmp
lods
jmp
ficomp
stc
jmp
fs
fdiv
dec
fsub
add
mov
cmp
int3
push
and
add
sahf
jg
push
call
cmp
jne
add
add
pop
adc
outs
mov
pop
add
fild
and
loopne
dec
and
loopne
or
or
jp
jmp
mov
inc
sub
enter
sbb
fwait
ja
jp
sub
inc
sar
cli
jg
xchg
mov
cmp
pop
fst
sbb
adc
daa
sub
mov
mov
inc
ror
or
jmp
imul
movs
push
adc
test
jge
not
inc
or
pop
shr
loopne
push
or
shl
dec
mov
add
sbb
out
imul
je
dec
sar
add
mov
in
ins
jne
xchg
enter
or
xchg
cld
push
mov
cmp
adc
inc
test
aaa
adc
pusha
dec
dec
cmp
add
push
imul
aam
xor
je
lea
jp
xor
mov
test
or
mov
and
je
pop
mov
dec
mov
lock
jmp
lea
test
xor
rcr
inc
lahf
sub
adc
or
or
push
adc
(bad)
mov
or
sar
mov
pushf
neg
jmp
mov
mov
nop
test
dec
pop
inc
cmp
enter
mov
call
sub
dec
sbb
xlat
jmp
push
add
(bad)
sub
nop
mov
push
das
inc
inc
dec
and
xchg
dec
inc
into
inc
rcr
dec
push
pop
push
retf
pop
and
and
add
xchg
add
jmp
mov
repz
mov
mov
adc
or
dec
mov
shr
push
xchg
lds
inc
mov
mov
and
xor
mov
cmp
jbe
shr
cdq
ins
and
push
and
lahf
sub
push
inc
push
ror
clc
iret
nop
pop
cmp
jne
jmp
pop
mov
or
jno
sbb
pushf
sbb
add
jne
add
(bad)
loopne
int3
mov
movs
add
inc
ja
mov
or
mov
ds
jmp
add
loopne
and
inc
add
fnstcw
mov
inc
fwait
dec
pop
cdq
cli
pop
push
mov
mov
pop
movs
cmp
or
inc
fidiv
(bad)
mov
xchg
sub
push
iret
imul
std
mov
inc
inc
(bad)
pusha
cmp
add
adc
clc
xor
icebp
hlt
(bad)
mov
(bad)
mov
or
add
loopne
(bad)
inc
mov
sbb
pop
xchg
stos
sti
cmp
mov
clc
(bad)
retf
sub
xchg
or
xlat
ins
add
jno
mov
xor
pushf
or
dec
and
sbb
out
sbb
adc
dec
lock
(bad)
adc
leave
dec
pop
mov
dec
test
or
or
pop
sahf
out
je
std
sub
inc
lea
ins
and
mov
sub
inc
adc
pop
mov
dec
xor
ret
sar
push
lea
cmp
ja
sub
icebp
jo
jl
xchg
push
inc
out
cmp
sbb
rcl
mov
ficomp
sbb
add
pop
hlt
rol
lahf
test
repnz
jae
mov
add
(bad)
pop
jbe
push
or
dec
sbb
movs
adc
call
shl
mov
call
jb
or
fisttp
mov
pop
cmp
or
sub
mov
aas
cmp
hlt
nop
pop
adc
rol
pop
jp
adc
js
push
fsubr
mov
sub
ins
in
push
mov
xchg
mov
sbb
push
(bad)
nop
mov
popf
add
mov
pop
(bad)
sbb
aaa
dec
xchg
retf
stos
mov
inc
mov
fcomi
ret
fidiv
inc
std
bound
push
dec
or
pushf
and
add
nop
cmp
mov
jbe
or
or
jmp
pop
and
mov
jo
and
cwde
dec
inc
xchg
xchg
inc
clc
jecxz
add
icebp
mov
jl
nop
jg
leave
add
arpl
jl
xchg
stos
into
xchg
jg
mov
sbb
jmp
push
sar
call
adc
pop
and
jmp
clts
mov
add
in
ins
jmp
inc
sbb
inc
jnp
enter
or
test
or
loope
cmc
lea
pop
jns
pop
cmp
pop
jl
out
test
je
test
adc
idiv
mov
push
cmp
jae
ret
jmp
test
jne
mov
dec
adc
add
(bad)
daa
jae
stc
sub
jb
fwait
dec
sbb
sbb
dec
ins
retf
push
adc
jmp
fdivr
jg
ja
and
aam
or
jmp
sar
scas
mov
dec
mov
and
popf
cmps
mov
adc
cmp
pusha
je
or
cmc
stos
dec
inc
and
sub
add
push
push
mov
jp
or
jnp
push
push
cmp
mov
add
or
cmp
jmp
in
sub
pop
push
mov
jmp
cmc
je
push
test
(bad)
jnp
mov
xchg
sti
push
dec
test
pop
cmp
xlat
push
fmul
or
dec
pusha
rcl
pop
int3
hlt
jmp
xor
jle
mov
mov
pop
cmp
jo
adc
xor
mov
dec
mov
popf
push
ss
jno
aam
mov
xor
(bad)
pop
adc
pop
sbb
cmc
xchg
mov
jo
jae
sar
in
jnp
lock
add
addr16
cmp
mov
pop
repnz
stc
icebp
out
mov
inc
dec
mov
mov
aas
and
repz
xor
jno
mov
cld
pusha
cmps
push
iret
adc
jnp
adc
test
leave
adc
call
dec
or
sub
inc
test
mov
aam
(bad)
cdq
xchg
je
stos
push
adc
mov
xchg
jno
in
jl
cmp
or
fs
add
lock
adc
pop
fucomip
xor
push
ins
fsubr
dec
xor
out
aaa
call
pop
sar
(bad)
clc
call
mov
or
jmp
jmp
iret
xor
inc
pop
fs
or
clc
mov
rol
daa
lea
mov
(bad)
in
adc
in
and
mov
mov
xchg
sar
push
inc
retf
lahf
dec
jecxz
fwait
call
add
int3
in
lahf
add
ficom
jne
(bad)
and
je
(bad)
jmp
or
cwde
aaa
cmp
adc
adc
mov
pop
push
inc
and
pop
cld
mov
mov
enter
ret
mov
push
adc
mov
push
mov
aas
inc
call
inc
cwde
mov
in
call
test
hlt
mov
(bad)
enterw
gs
jge
sar
imul
xor
movs
fmul
dec
aam
xlat
pop
mov
xor
sub
shl
cmp
movs
sbb
add
outs
xor
pop
sub
add
test
nop
cmp
push
repz
packuswb
and
clc
les
dec
jo
fsubp
pop
cmp
jge
loope
jmp
outs
sub
push
sar
or
aam
xor
and
dec
mov
xor
inc
inc
adc
dec
jnp
inc
or
mov
fsub
mov
popa
popf
fldcw
outs
push
and
sar
mov
clc
jle
sbb
cli
lea
inc
dec
jmp
jge
cwde
test
cmp
sub
jl
jbe
sbb
lea
inc
fadd
sti
mov
sub
jmp
pop
inc
call
xchg
ficom
inc
or
dec
adc
or
loope
test
and
inc
xchg
add
sub
or
dec
pop
inc
pop
xchg
jnp
jno
push
sahf
mul
dec
dec
jnp
hlt
in
jmp
adc
add
inc
or
lock
push
sub
in
push
mov
loopne
aam
inc
adc
push
pop
add
xchg
push
repnz
pop
inc
shl
dec
push
fidiv
js
mov
mov
push
inc
jg
pop
test
pop
dec
cmp
xchg
add
xor
or
or
test
ds
call
cmp
add
and
repz
sbb
mov
(bad)
scas
pop
imul
fsub
jne
rcl
xor
sbb
jle
and
addr16
loopne
pop
rcl
test
adc
adc
push
repnz
dec
or
call
test
fmul
push
dec
or
test
push
imul
inc
and
ror
add
mov
or
push
mov
xor
adc
push
mov
inc
js
(bad)
jge
mov
repz
jg
mov
or
sbb
and
fild
scas
dec
jg
push
push
leave
add
push
push
mov
ja
std
mov
test
jmp
adc
sub
hlt
push
fimul
adc
inc
inc
stos
sahf
push
sub
push
sahf
stos
pop
shl
inc
cmp
imul
add
loopne
or
jb
jae
or
inc
and
in
adc
pusha
sbb
inc
sahf
retf
and
xchg
xor
xor
repnz
push
cmp
cmp
cmps
or
shr
inc
sbb
jecxz
je
loop
or
aaa
cmp
(bad)
stos
(bad)
pushf
sub
add
leave
lods
aaa
lods
adc
loope
fadd
jmp
ret
mov
jge
pushf
stos
ror
add
nop
pusha
lock
inc
sbb
mov
(bad)
sbb
mov
mov
push
leave
and
xchg
push
pop
pop
ss
pusha
sbb
in
leave
aad
adc
dec
push
mov
xchg
cwde
pushf
mov
movs
loopne
call
inc
mov
xor
arpl
push
cwde
stos
movs
add
fisttp
add
bound
rcl
add
sub
cli
xlat
xor
dec
dec
xchg
sub
pop
sub
mov
fbstp
mov
dec
pop
(bad)
jmp
shr
dec
sar
jb
fdivp
and
popa
inc
dec
lods
in
or
dec
movs
add
and
and
inc
int3
pop
jg
or
adc
in
ins
aas
jge
call
imul
sbb
xchg
imul
add
popf
add
push
repnz
jmp
sbb
xor
sub
rcl
inc
sub
sbb
push
jl
(bad)
fadd
push
add
dec
adc
sub
out
jo
cmp
outs
adc
cmp
add
push
jae
jg
cmp
or
inc
shl
dec
test
push
fist
ins
stc
in
fnstcw
or
nop
push
or
add
(bad)
xor
ficomp
push
jmp
adc
add
cmps
or
sbb
add
push
mov
mov
add
xchg
inc
mov
add
mov
arpl
lods
aam
pop
add
and
pushf
ins
ss
and
(bad)
addr16
(bad)
loope
inc
add
push
sbb
loopne
sbb
inc
pop
sub
sbb
xchg
cld
icebp
in
mov
in
add
pusha
sti
outs
(bad)
adc
add
call
test
lods
pop
jne
pop
bound
clc
mov
push
test
pop
adc
fmul
adc
inc
ds
outs
and
sar
sbb
or
fcmovnbe
cdq
mov
sub
cmp
xchg
fidivr
mov
aam
test
add
sbb
pop
xor
adc
les
xchg
pop
scas
mov
fsub
or
adc
sbb
jp
je
arpl
iret
sub
push
ss
pop
bound
xor
cmps
pop
xchg
ror
in
sbb
outs
stc
or
dec
(bad)
in
sub
or
sub
adc
xchg
pop
xchg
loopne
mov
fcomp
rcl
pop
push
in
cli
mov
mov
pop
popf
movs
inc
shr
popa
cmps
imul
inc
aam
push
push
in
adc
(bad)
call
add
test
call
fwait
cmp
jl
scas
push
mov
pop
mov
inc
inc
and
mov
sbb
mov
push
shl
xchg
out
cmp
retf
je
aaa
or
or
add
add
lock
adc
repz
inc
idiv
or
enter
cmp
jne
mov
ins
icebp
jmp
mov
mov
mov
jecxz
mov
movs
jp
xchg
jne
mov
inc
popf
mov
or
movs
push
or
adc
cmp
daa
or
je
fdiv
test
pop
mov
je
pop
pop
or
ins
inc
and
test
jbe
jb
ret
gs
je
adc
pusha
cmps
sub
inc
mov
mov
adc
jns
loop
iret
shr
rol
mov
cmps
sbb
sbb
push
pop
mov
cmp
or
movs
mov
inc
inc
and
mov
mov
add
jl
and
and
aas
aad
mov
rcl
out
sbb
and
push
or
ret
push
pop
outs
dec
repz
call
repz
and
test
(bad)
adc
ret
jl
fidiv
pop
(bad)
pop
test
(bad)
out
aam
ins
ins
jl
push
cld
aad
cmp
aaa
loope
mov
aaa
popf
outs
or
pop
es
les
dec
cwde
dec
loope
(bad)
pop
shl
pop
or
frstor
cwde
add
jl
inc
ja
outs
aaa
scas
jns
and
ds
(bad)
jmp
push
jg
ja
ds
dec
jl
(bad)
es
dec
movs
jge
jns
es
add
add
push
imul
adc
xchg
mov
fs
add
popa
xchg
outs
pop
pop
pushf
scas
adc
sbb
and
xchg
mov
xlat
push
ror
dec
adc
xchg
mov
pop
sbb
inc
loopne
sbb
jle
push
push
je
mov
jle
sbb
cmp
shl
test
lea
fild
test
int3
and
mov
push
lods
call
fmul
dec
stos
outs
cmp
daa
pop
pusha
mov
or
adc
mov
aad
movs
pop
push
and
pop
hlt
ret
add
push
mov
pop
lock
xchg
jle
(bad)
sub
add
mov
mov
mov
test
push
sbb
jmp
mov
(bad)
jecxz
pop
adc
mov
(bad)
fadd
divps
test
and
inc
hlt
ins
ins
jl
or
mov
data16
and
mov
into
push
sbb
iret
and
lock
push
popa
add
je
call
sbb
mov
xchg
mov
outs
arpl
loopne
sti
or
clc
pop
dec
pusha
dec
dec
push
fisubr
das
push
add
and
fcom
cdq
xchg
pop
add
pop
std
sub
xlat
jge
push
aam
mov
sub
add
adc
in
out
sbb
xor
in
pmaxub
xchg
inc
pop
clc
mov
push
jl
mov
cdq
push
xchg
fidivr
add
inc
or
adc
xchg
shr
inc
sub
mov
sbb
mov
hlt
dec
pushf
and
ret
mov
xor
movs
xlat
push
xor
imul
sub
shl
adc
aam
std
aam
mov
pop
(bad)
sbb
jmp
or
popa
ret
je
add
xchg
das
dec
fs
or
inc
test
into
mov
fucomp
in
lods
mov
cmp
pop
inc
inc
mov
push
mov
cmps
test
inc
add
popa
test
add
inc
aas
xchg
jne
sub
loop
push
daa
cmp
adc
or
addr16
mov
into
jo
pop
and
cmp
jl
add
xor
je
je
xchg
push
dec
push
cmp
add
mov
test
pop
test
sub
inc
push
add
dec
jmp
jns
jmp
pop
std
dec
call
out
inc
fld
and
or
jg
pop
or
xor
fsub
add
and
add
sbb
lods
xor
(bad)
enter
ins
dec
(bad)
clc
xor
inc
loopne
jno
cmp
xor
xchg
push
(bad)
jbe
fmul
std
adc
or
pop
add
or
add
pop
dec
in
or
call
shl
mov
nop
adc
ror
inc
add
dec
pop
int
int3
xchg
pop
fdiv
loop
xchg
nop
add
clc
outs
pop
fst
outs
call
xor
push
add
je
hlt
popa
call
sbb
int3
out
add
test
add
add
inc
fld
in
out
sbb
inc
and
fcomp
push
mov
sbb
xlat
pop
pop
mov
mov
std
cmp
(bad)
adc
jmp
mov
call
mov
dec
dec
jmp
nop
clc
or
mov
mov
xor
or
cmp
shl
or
push
adc
dec
and
or
pop
inc
(bad)
jmp
lea
cmp
jb
lahf
push
jle
inc
mov
add
jb
js
test
lds
jne
xlat
add
add
jmp
enter
test
call
adc
adc
mov
or
jmp
call
aas
add
dec
push
ins
les
add
dec
popa
xchg
adc
adc
lds
ins
inc
test
inc
cmps
inc
push
popf
xor
pop
popf
add
adc
sbb
loope
fisub
or
cmp
ins
jo
dec
jnp
(bad)
and
shr
inc
sbb
or
adc
mov
and
mov
add
push
cmp
mov
xchg
sbb
jl
xor
add
or
add
cwde
cmp
adc
dec
(bad)
pop
jl
lock
rcl
mov
or
push
mov
jb
jbe
mov
mov
adc
inc
adc
sbb
xchg
movs
je
xor
int3
dec
push
mov
xor
cld
inc
add
ficom
cmp
cmp
sti
adc
xchg
pop
stc
sbb
xor
dec
loopne
shl
mov
sbb
neg
retf
sbb
test
rol
sbb
mov
push
inc
add
push
inc
daa
add
loopne
mov
pop
lea
cmps
add
mov
inc
int
fisub
jp
lock
xlat
loopne
sbb
jae
inc
push
mov
ror
and
mov
push
sbb
mov
or
add
stos
inc
xor
sub
cwde
cdq
cs
xchg
(bad)
sub
xor
loop
and
imul
mov
rol
jno
mov
lds
sub
mov
pop
test
pop
mov
ins
fld
add
into
jne
xchg
and
movs
push
mov
into
xchg
ret
movzx
and
pop
(bad)
aaa
leave
jmp
or
out
enter
sbb
adc
mov
sar
mov
jmp
sub
or
daa
add
pop
shl
nop
enter
fistp
sub
scas
adc
inc
push
pop
jmp
pop
test
jge
js
xchg
fnstcw
enter
dec
bound
add
(bad)
sub
sbb
loope
int
xlat
sub
jne
pop
and
xchg
sbb
inc
and
adc
(bad)
push
hlt
cmps
pop
push
lahf
les
ins
movs
sti
push
push
call
pop
mov
add
retw
inc
mov
rcl
mov
sbb
ja
rol
ja
jo
mov
cs
enter
mov
call
mov
sti
rol
fisttp
push
push
push
cmp
call
xor
cmp
sbb
daa
or
push
xchg
push
std
cmp
call
mov
add
xor
test
cdq
jp
sar
(bad)
call
cmp
inc
gs
jmp
cmp
pop
cmp
(bad)
or
fs
adc
out
cmp
ja
cmp
and
inc
daa
xor
jle
cmp
inc
mov
mov
dec
add
cld
les
into
popa
mov
stc
push
mov
test
in
aaa
push
lahf
imul
pop
xchg
mov
scas
in
es
pop
mov
jl
repnz
lahf
add
or
cmps
and
push
jmp
dec
jne
adc
inc
mov
ins
(bad)
jns
mov
gs
mov
sbb
jbe
icebp
jmp
not
and
jl
and
add
ss
adc
mov
test
or
pushf
sub
pop
(bad)
sub
mov
imul
mov
mov
lds
jo
or
inc
push
jo
ja
xor
enter
cmps
pop
or
ins
das
and
neg
adc
add
inc
es
adc
call
dec
cmps
inc
ja
push
(bad)
pop
or
or
push
adc
shl
mov
das
add
cmp
jp
loope
mov
pop
fadd
sub
mov
adc
fistp
sbb
push
jp
fld
xor
sub
lea
cmps
loopne
xchg
pop
inc
out
sbb
mov
dec
jnp
retf
sub
rcl
enter
mov
mov
pusha
pop
leave
xor
aam
jg
popa
pop
sahf
add
imul
test
and
dec
and
inc
test
jne
fidiv
lock
sbb
les
dec
sbb
int3
adc
test
ins
xchg
push
jns
aas
and
or
inc
div
es
sub
mov
data16
rcr
stos
mov
adc
sub
push
das
adc
jnp
add
hlt
add
sub
and
adc
jecxz
add
xchg
popa
lock
push
sbb
pop
adc
jle
or
dec
lahf
pop
inc
inc
cdq
and
jb
jmp
call
push
dec
pushf
mov
and
or
int
out
inc
cmp
and
and
retf
xor
popa
out
xchg
add
ja
jmp
repz
stos
add
dec
sbb
mov
sbb
ss
dec
jnp
in
add
mov
adc
or
inc
sbb
out
cmp
test
mov
inc
jo
sbb
pusha
and
and
pop
push
dec
inc
and
and
cmp
and
and
sbb
pop
pop
mov
call
cmc
arpl
sbb
xlat
dec
mov
aas
mov
mov
test
cwde
mov
mov
mov
mov
mov
mov
js
rol
adc
sub
add
xchg
test
je
push
and
jl
sbb
ret
les
(bad)
sbb
add
shr
shl
push
jne
out
out
push
jbe
pop
dec
sbb
retf
add
push
je
out
pop
inc
cld
sub
mov
les
cmp
push
jb
sub
dec
mov
jo
sub
fwait
test
jns
inc
adc
pop
mov
cmp
cmp
sbb
out
sub
push
imul
add
xchg
shl
test
loopne
push
std
push
fistp
test
into
mov
clc
inc
mov
mov
sbb
call
push
cmp
jge
lea
ror
loopne
sub
in
add
jmp
pop
or
outs
add
sub
mov
mov
or
mov
sub
mov
sub
xchg
aaa
add
fsubr
pop
fnstcw
jmp
sub
rol
pop
dec
movs
add
dec
sti
jno
adc
sti
mov
push
mov
mov
adc
dec
or
pop
das
inc
pusha
pop
mov
mov
mov
dec
dec
in
jbe
lods
not
push
outs
imul
ins
fmul
mov
mov
fcom
push
mov
out
jo
ins
ds
inc
pusha
movs
and
pop
dec
and
js
inc
or
cmp
jl
adc
push
retf
xor
pop
sbb
add
dec
std
jb
adc
aaa
and
popaw
and
push
mov
rol
pusha
pop
fs
shl
or
push
test
sbb
adc
inc
lea
push
aad
shl
gs
push
inc
mov
xor
pushf
sub
adc
fwait
mov
add
addr16
sbb
jmp
lea
add
mov
ins
shl
rcl
outs
mov
dec
mov
rol
arpl
clc
mov
or
fcom
or
popf
scas
retf
stos
sbb
sub
add
mov
ror
rol
imul
mov
jne
fcom
iret
shr
cmp
jae
mov
jge
pop
sbb
jl
cs
leave
dec
or
ss
mov
cmp
jmp
bnd
sub
dec
mov
or
pop
jno
cmp
sahf
xor
ror
add
cmps
or
sbb
adc
std
xchg
push
add
adc
mov
gs
lock
jge
sub
push
or
mov
mov
xchg
sbb
jbe
not
mov
jmp
call
pushf
cmp
mov
jo
movs
inc
shl
and
cdq
lea
mov
mov
inc
sub
xor
push
pushf
retf
dec
lods
(bad)
shl
jb
ja
add
mov
mov
mov
dec
inc
test
mov
jae
mov
repnz
xor
push
ret
pop
fadd
lock
push
sbb
inc
in
sub
jmp
cmps
out
imul
xlat
cmp
js
dec
call
mov
or
fiadd
stc
xchg
dec
mov
mov
cli
(bad)
(bad)
or
sub
add
lock
rcl
push
inc
outs
jo
adc
test
mov
aaa
test
pop
adc
jns
push
rcr
shl
mov
pop
xchg
je
push
mov
scas
jmp
pop
jb
pop
inc
push
pop
and
mov
add
fmul
lods
jmp
add
dec
rol
rol
pop
add
sbb
cmp
xor
mov
and
xor
mov
jae
fldcw
sub
outs
xor
xchg
iret
xlat
dec
mov
ins
ror
jo
movs
sub
in
dec
sub
mov
xor
jb
xlat
jle
push
in
and
icebp
pusha
inc
stos
rcr
mov
xchg
mov
push
push
inc
add
jp
xchg
or
daa
inc
or
mov
mov
push
add
arpl
test
ret
mov
mov
rol
pop
ror
dec
test
add
cmp
mov
out
retf
repnz
jns
fwait
mov
fisubr
cs
or
fldcw
or
in
jns
leave
rol
ins
cmp
adc
sbb
and
mov
icebp
add
in
xor
cmp
cmp
sbb
fild
(bad)
imul
sub
add
or
and
dec
inc
mov
jge
cmp
add
jmp
stos
mov
je
mov
(bad)
pusha
cs
pop
add
dec
cmps
(bad)
bound
sub
pusha
out
xchg
adc
sbb
inc
mov
add
(bad)
les
xor
and
cmp
mov
int3
aam
cmp
jae
push
in
cmps
outs
cmp
ins
and
dec
gs
retf
pop
xor
inc
stos
es
arpl
xor
inc
gs
stos
sub
and
sub
test
sub
and
and
ret
sub
sbb
and
call
loopne
stc
xchg
cmp
xchg
add
call
lods
inc
test
es
add
push
pusha
test
adc
mov
mov
shl
daa
dec
aam
add
adc
push
xor
dec
mov
ret
dec
sub
sbb
je
pop
sar
cli
dec
int3
add
and
pop
add
clc
pop
sub
add
sub
sub
add
imul
(bad)
jmp
shl
cmp
push
jmp
adc
and
fdiv
out
shr
mov
adc
cmp
call
and
cmp
jmp
xor
add
call
ja
fadd
xchg
xchg
inc
xor
out
retf
jle
and
mov
aad
mov
outs
xchg
and
mov
jge
shl
mov
adc
test
ror
jmp
push
sbb
xchg
retf
into
add
icebp
enter
mov
rol
pop
loopne
cmp
ror
sub
xchg
test
push
or
repnz
lock
inc
jmp
or
scas
cmp
movs
fs
inc
(bad)
cmp
dec
and
(bad)
out
mov
std
add
ficom
mov
cmp
sbb
jbe
mov
cmps
(bad)
sbb
adc
dec
xchg
pop
mov
mov
inc
(bad)
inc
cmc
shl
jmp
add
sbb
sti
std
push
push
add
mov
ficomp
dec
js
xor
adc
fadd
and
sti
shl
jae
jne
in
sub
mov
inc
mov
jmp
sar
inc
fimul
dec
mov
lahf
shl
mov
nop
adc
xchg
inc
jge
pop
or
fnstsw
push
mov
sub
jle
mov
ins
mov
ja
lods
jge
xor
outs
dec
dec
inc
in
push
push
call
dec
push
test
push
pusha
inc
cmp
jb
xchg
and
mov
out
adc
xchg
jmp
cmp
xchg
jae
lock
mov
push
pop
or
sbb
pop
inc
adc
mov
les
retf
inc
lea
movs
or
daa
dec
adc
adc
sub
mov
pop
mov
and
imul
mov
pop
sbb
pop
test
and
xor
dec
mov
or
adc
and
enter
fidiv
imul
cmp
add
cmp
inc
test
mov
cmp
inc
mov
cmp
ss
fadd
in
jmp
ror
dec
fs
mov
popa
outs
jmp
mov
and
push
pop
sub
shl
xor
lea
stc
inc
sub
add
sub
inc
mov
add
add
and
sti
dec
push
cmp
or
cmp
shl
add
std
or
ret
into
xor
xchg
ret
pop
retf
call
test
push
and
dec
sahf
push
sbb
mov
xchg
div
jae
pop
sub
stos
mov
sbb
cli
mov
scas
inc
sbb
pop
mov
push
mov
idiv
or
mov
or
push
xor
cmps
adc
sub
ss
mov
push
(bad)
cmps
push
adc
pop
mov
jb
add
dec
pop
or
sar
mov
data16
outs
ins
sub
std
cmp
jmp
lea
mov
jne
cmps
call
jns
add
cmp
outs
push
pusha
ffreep
cmp
je
mov
jae
push
and
ret
sbb
pop
push
or
xlat
lock
inc
dec
and
adc
jns
into
ret
rol
out
mov
shr
add
jae
mov
add
xchg
mov
loopne
push
or
mov
ja
test
mov
mov
pop
inc
push
in
ds
dec
jmp
ret
mov
dec
or
mov
sub
sbb
dec
in
xchg
and
mov
cmp
sub
into
mov
repnz
cmps
je
mov
sbb
mov
mov
fmul
retf
rol
and
lahf
popf
push
pop
jp
xchg
stos
add
pop
push
lods
jge
jecxz
fwait
sub
cmp
mov
xor
jl
or
pushf
push
jp
(bad)
xchg
sub
xchg
inc
inc
push
or
push
sbb
xor
lods
aas
(bad)
fsubr
sub
dec
test
add
cmc
and
mov
or
ret
and
mov
or
inc
fisubr
add
ror
sbb
cmps
jmp
lods
pop
rol
les
xor
inc
dec
and
cmp
mov
jbe
sub
cli
xchg
mov
sub
or
movs
ror
in
pop
inc
or
je
loopne
inc
outs
pop
cmp
mov
sti
xor
not
shr
mov
push
out
inc
push
and
jmp
or
(bad)
jp
jo
push
ror
xor
and
push
fwait
mov
dec
push
jae
mov
xor
cmp
mov
retf
pop
mov
sub
or
mov
inc
add
add
or
arpl
dec
popf
sbb
mov
or
repnz
or
add
fst
sbb
xor
sub
test
mov
sbb
inc
jg
xchg
xor
cmp
jmp
add
arpl
call
inc
push
xchg
loopne
xchg
retf
and
test
fcom
je
inc
jbe
inc
(bad)
xor
pop
mov
jg
hlt
adc
call
inc
add
or
iret
pop
push
add
or
ins
pusha
ret
inc
push
sbb
(bad)
repnz
test
and
mov
or
pop
(bad)
adc
xchg
mov
jge
adc
cs
push
sbb
add
add
ret
mov
pusha
stos
dec
shl
sbb
mov
xor
or
std
mov
mov
(bad)
mov
cwde
mov
xchg
lods
sbb
jl
call
inc
inc
or
inc
and
ja
sbb
loope
jmp
jge
adc
(bad)
fdiv
push
inc
lahf
push
movs
adc
div
sahf
xchg
sbb
xlat
cmps
adc
test
adc
mov
pop
inc
inc
push
xchg
inc
mov
dec
and
mov
ret
sub
cmp
test
jecxz
ss
mov
pop
lock
out
pop
ror
mov
cmp
ror
add
sbb
enter
inc
or
je
rcl
sbb
scas
add
cdq
pop
mov
fprem
out
mov
sub
or
mov
add
cdq
and
or
cmp
sub
ss
adc
add
shl
add
mov
es
or
shl
adc
movups
add
mov
ds
fisttp
and
push
gs
and
cs
xor
cli
adc
xchg
cs
daa
add
jns
dec
mov
in
mov
dec
cs
pop
mov
sbb
leave
in
jo
jo
adc
test
pop
push
add
push
push
adc
and
sub
or
(bad)
adc
ror
adc
jmp
out
pop
(bad)
sbb
adc
jmp
jbe
xor
dec
cmp
pop
retf
sbb
mov
pop
js
bound
add
out
div
xchg
leave
mov
loopne
nop
mov
div
mov
or
mov
add
or
repnz
push
call
fs
cmp
push
out
in
test
pop
in
ret
out
adc
sbb
or
out
push
dec
icebp
jle
mov
or
and
sbb
adc
sbb
fmul
aam
loopne
loope
or
aas
int3
add
mov
pop
or
xchg
mov
add
xor
sbb
mov
cmp
mov
ja
or
push
lahf
or
xlat
push
sahf
dec
fs
mov
shl
scas
cwde
mov
inc
pop
mov
daa
mov
in
inc
ficom
in
xchg
push
xor
addr16
fsub
adc
dec
adc
mov
lock
jmp
dec
cs
mov
mov
mov
cmps
(bad)
cld
lahf
jp
cld
fsubrp
enter
lock
or
sbb
sbb
push
shl
or
fidiv
mov
pop
dec
pop
scas
sahf
xlat
xlat
frstor
add
inc
sub
mov
ja
mov
aaa
imul
int
in
inc
and
(bad)
push
sbb
in
aas
xor
push
push
ret
xchg
inc
sahf
push
lock
out
xor
push
xchg
pop
mov
clc
or
or
push
mov
fild
shl
in
cli
adc
cmp
ja
inc
pop
cld
add
mov
mov
dec
es
fwait
or
xchg
xchg
pop
int3
arpl
scas
mov
and
dec
push
add
fisub
dec
loop
push
shl
add
(bad)
std
add
sbb
mov
adc
jge
or
popa
add
dec
xchg
xchg
adc
add
mov
loop
and
xchg
jge
adc
(bad)
adc
test
loopne
add
hlt
mov
sub
sbb
jmp
stc
inc
test
cmp
jae
jo
movs
daa
jb
push
(bad)
cmp
xor
inc
sbb
test
pop
jae
dec
and
mov
movs
xor
xchg
mov
adc
or
pop
mov
aam
sbb
bound
dec
ror
sahf
imul
mov
sub
sub
test
rcl
sub
in
call
scas
add
hlt
sub
daa
xchg
mov
test
sbb
test
sub
sbb
inc
js
jecxz
add
dec
adc
ficomp
xchg
xor
out
cmps
add
(bad)
push
call
push
cmps
test
or
sbb
test
sbb
ss
jne
stos
adc
cmps
scas
leave
mov
sub
jmp
xlat
xlat
scas
mov
pop
popa
addr16
scas
dec
adc
mov
mov
leave
jmp
jge
shr
pop
or
loop
sub
cmp
jmp
mov
add
sbb
pop
sbb
loop
push
ja
xor
call
push
or
mov
aas
adc
mov
out
les
cmp
push
inc
sub
add
and
mov
push
test
mov
imul
call
xor
or
push
lea
inc
and
mov
data16
sbb
aas
pop
or
or
inc
xchg
push
adc
xchg
cmp
fcom
cmp
mov
or
dec
jae
or
fdiv
mov
jle
int3
pop
adc
add
add
cli
cli
mov
xchg
je
jmp
sub
lods
enter
shl
pop
or
push
jmp
dec
je
(bad)
mov
call
add
xor
and
push
adc
xchg
xor
retf
fs
sbb
sbb
jle
mov
push
jp
jge
les
out
sbb
imul
rcl
push
jmp
cmp
aas
ja
mov
dec
inc
sub
dec
pop
js
test
je
rcl
xor
loope
adc
adc
dec
es
and
inc
ins
cmps
jne
and
push
xchg
cmp
aam
cmp
in
lds
pop
sbb
inc
enter
cs
popa
cmps
(bad)
lock
(bad)
lds
inc
xor
mov
mov
push
add
sbb
dec
push
push
dec
and
or
mov
mov
rol
lods
sar
sti
and
and
stos
sahf
push
inc
dec
fs
adc
shl
loope
xor
jl
(bad)
pop
and
std
cwde
js
adc
dec
nop
pop
add
sbb
rcl
ret
sbb
mov
mov
cdq
xor
add
pusha
cmp
fdiv
nop
xor
jmp
or
xor
push
cld
xor
adc
ret
sub
jne
fs
mov
ror
dec
test
loope
fst
ins
and
lods
add
add
gs
pop
cdq
mov
daa
enter
xor
adc
and
adc
pushf
xor
lods
sbb
mov
add
pop
jmp
retf
push
pop
pop
mov
ins
or
sub
push
add
mov
cmp
jmp
mov
jle
xor
das
or
sub
push
rcr
mov
sbb
ror
dec
pop
fidivr
jne
(bad)
ss
inc
pop
outs
mov
stc
in
push
add
mov
inc
add
xchg
or
xor
sbb
pop
dec
xchg
dec
movs
rcr
inc
inc
cmp
std
rcl
or
jne
and
add
xchg
nop
mul
push
ja
loop
jno
adc
fadd
or
mov
inc
(bad)
jge
jb
add
jne
rol
pop
in
dec
xchg
mov
dec
push
imul
mov
ins
jne
and
es
sbb
sbb
mov
ret
sbb
int
jne
sbb
xor
sub
sub
out
dec
mov
sub
pushf
push
popf
add
mov
aaa
add
xlat
adc
outs
add
imul
fidivr
loop
or
neg
inc
and
out
mov
stc
pushf
add
add
xchg
sahf
inc
cmp
clc
sub
popa
add
jmp
cmc
pop
mov
or
adc
mov
bound
in
sbb
xor
add
add
sub
call
and
xor
stos
cmp
xchg
mov
inc
out
imul
int
xor
xchg
inc
ins
dec
push
or
mov
add
push
fist
mov
push
sbb
add
and
mov
add
out
test
cmp
or
xchg
sti
and
xchg
or
jo
add
sbb
clc
call
adc
mov
clc
xchg
shr
enter
xor
clc
push
pop
ja
test
out
xor
push
retf
lock
cmp
sbb
push
add
pop
push
jge
pusha
fadd
push
jnp
add
sbb
push
xor
movs
inc
adc
fwait
sub
inc
aaa
xor
or
mov
xor
ds
sahf
sbb
lock
push
fnstenv
mov
int3
cmp
es
icebp
mov
jle
sahf
add
pusha
push
js
or
fcom
ror
adc
cmc
adc
dec
pop
xor
inc
adc
and
pop
je
mov
mov
jb
push
cmp
je
shr
sbb
xor
inc
push
and
sub
(bad)
sbb
adc
sub
add
stos
inc
aam
cmp
jl
sub
hlt
fs
sub
sbb
rol
push
dec
xlat
and
dec
lods
(bad)
fdiv
pop
add
add
(bad)
lods
adc
mov
jne
push
and
add
(bad)
mov
mov
sbb
int3
sub
jae
out
mov
mov
(bad)
sub
mov
retf
sti
xor
xlat
xor
cld
mov
push
mov
mov
stos
test
lds
mov
mov
jb
add
dec
sar
dec
test
rol
sbb
test
mov
adc
rcl
sub
sbb
jo
xchg
and
lods
rcl
adc
pop
sbb
mov
das
fwait
mov
add
push
in
cli
xor
call
sub
loope
sbb
cmps
icebp
and
std
and
retf
cmp
int3
xchg
nop
dec
lock
inc
stos
movs
out
call
xor
(bad)
sub
imul
push
and
mov
loop
jg
sub
push
pop
movs
repz
stc
call
(bad)
sbb
jl
jo
xor
shl
sub
cmp
jb
femms
scas
fmul
xchg
iret
mov
stos
sub
mov
cmp
mov
add
push
cmp
aas
push
add
call
xchg
or
xchg
add
call
or
clc
pop
mov
lods
xlat
mov
push
jge
pop
adc
add
scas
cmp
hlt
sub
out
sbb
sbb
push
or
inc
je
rol
shl
cmp
mov
sbb
pop
adc
sbb
add
mov
sti
or
mov
jbe
jl
xor
and
fild
in
int3
pop
ja
mov
cwde
sbb
add
adc
(bad)
neg
push
hlt
dec
jge
jp
fadd
sbb
jmp
fcom
out
adc
add
or
rcr
add
dec
fcom
xchg
movs
(bad)
(bad)
push
imul
or
or
inc
or
cmp
gs
rcr
outs
ins
mov
mov
mov
(bad)
xchg
cmp
fimul
inc
movs
dec
mov
sbb
inc
call
pushf
int3
adc
mov
xor
out
mov
jo
dec
sub
fs
push
cli
ror
fidiv
and
sbb
sub
sbb
fadd
adc
mov
lods
sti
sub
push
or
loopne
ret
or
int3
mov
lods
jne
lods
retf
sbb
clc
mov
xor
ja
pop
xchg
cmp
mov
pop
adc
shl
scas
or
mov
mov
mov
fs
div
mov
push
shl
les
inc
pop
ins
and
pop
(bad)
xlat
sbb
mov
jo
popa
aaa
pop
inc
sbb
call
cmc
mov
les
mov
push
imul
movs
fdiv
dec
or
sub
fsub
aam
mov
jo
call
repz
xor
mov
sbb
loope
pop
cmp
cmps
rcl
dec
inc
sub
mov
xchg
pop
dec
inc
shl
add
test
xlat
cmp
xor
jecxz
movs
nop
(bad)
xor
ret
test
and
sbb
stc
daa
add
leave
adc
stos
aam
rol
push
inc
add
lock
in
sub
jp
data16
pop
mov
push
stos
retf
adc
sbb
inc
es
push
fisttp
or
retf
push
imul
ret
xchg
pop
jle
or
push
mov
je
mov
or
or
or
mov
and
inc
jecxz
dec
aam
adc
xlat
xchg
and
jp
out
stos
mov
sub
push
and
je
push
push
je
or
adc
push
call
mov
push
or
ins
mov
mov
or
pop
cmp
jb
or
xchg
mov
mov
mov
aaa
sbb
and
add
mov
pop
sbb
call
adc
mov
add
jo
jne
push
lea
mov
push
out
(bad)
jbe
in
add
sbb
dec
pusha
cmp
icebp
push
adc
or
sub
jl
mov
adc
add
call
js
and
push
sbb
cmp
cdq
hlt
popa
pop
xchg
push
mov
out
mov
inc
add
and
fistp
cmp
outs
lock
sbb
adc
shr
xchg
xor
adc
mov
aaa
adc
mov
jbe
(bad)
push
inc
xchg
sub
fsub
outs
clc
add
push
ret
and
sub
mov
pop
inc
cmps
ret
or
lds
bound
stc
mov
cmps
pusha
xor
movs
ins
cmp
inc
and
leave
add
dec
(bad)
sti
adc
fdivr
jmp
lods
pop
inc
inc
or
adc
mov
(bad)
mov
xchg
shl
fwait
jbe
pop
xor
and
call
mov
aam
sahf
bound
or
or
mov
sbb
js
stc
xchg
aam
(bad)
in
lock
add
mov
push
xchg
(bad)
add
xor
and
sbb
clc
and
es
mov
pop
and
xchg
add
and
test
lock
push
aaa
lds
push
imul
pop
inc
add
out
push
call
xor
inc
add
cmp
jp
cmps
jne
or
push
out
jne
sahf
cwde
test
pop
push
cmp
sbb
aaa
or
cwde
sbb
cmp
sub
ret
rol
pop
jne
test
mov
aaa
jmp
nop
aam
or
dec
add
js
add
shr
test
push
push
cli
push
pop
xchg
stc
push
call
imul
jl
test
mov
add
or
mov
jne
je
or
icebp
add
cmp
pop
nop
push
aas
or
je
or
xlat
dec
pop
sbb
mov
xchg
push
pop
and
pop
mov
call
add
mov
xor
adc
jnp
push
mov
and
xor
and
mov
mov
mov
sbb
mov
push
inc
xchg
mov
push
mov
js
dec
mov
cmps
cmp
add
xchg
mov
jo
mov
ins
xchg
add
hlt
(bad)
dec
or
mov
xchg
hlt
add
add
mov
sbb
movs
add
pop
jl
imul
dec
add
or
push
push
pusha
pop
test
push
pushf
rcl
cmp
retf
sbb
mov
sti
and
mov
jmp
jo
push
fsubr
pop
sbb
in
mov
ror
and
mov
and
push
aaa
ret
sbb
mov
pushf
test
nop
into
mov
in
sub
ds
cmps
adc
sub
mov
adc
xor
or
or
pop
cmp
fcomp
cmp
push
popf
or
fst
add
out
and
dec
sbb
add
push
add
jbe
push
inc
rol
ficom
dec
adc
nop
lods
mov
movhps
into
jmp
sbb
scas
jno
call
xor
dec
cmp
xchg
icebp
std
aaa
mov
add
test
mov
mov
test
adc
es
test
add
xor
push
sbb
sbb
ret
loope
or
aaa
cmp
je
test
ss
ret
data16
adc
popf
sub
fild
leave
push
daa
or
xchg
sub
jb
jmp
pop
adc
xor
stc
push
jns
xchg
add
xchg
cmp
rol
inc
dec
lock
sti
add
xor
adc
xor
rcr
aas
rcl
iret
cmp
out
jge
into
push
add
xchg
sbb
add
scas
adc
and
cmp
xchg
inc
fisttp
mov
leave
jp
xchg
xchg
push
test
and
jge
cmp
dec
pop
sbb
pop
inc
push
cs
mov
pop
pop
jb
push
(bad)
and
lods
loopne
pop
mov
jmp
sub
inc
adc
ret
or
fild
pop
in
stos
jmp
or
pop
inc
xchg
fsubr
dec
adc
imul
xor
xor
movs
(bad)
mov
sete
jbe
inc
clc
call
jp
push
jp
je
mov
punpcklwd
(bad)
xlat
sbb
mov
jnp
nop
or
and
les
scas
add
dec
pop
cmp
push
sahf
out
jecxz
and
(bad)
add
push
cmc
mov
dec
and
add
pusha
pop
xor
stos
xchg
fwait
dec
scas
in
int3
xlat
and
and
dec
xchg
test
cmp
gs
je
pusha
or
adc
xlat
gs
push
adc
add
enter
adc
add
mov
inc
add
movs
adc
jb
add
mov
push
ficom
xchg
xor
mov
add
imul
in
push
sbb
in
mov
fiadd
push
sbb
call
xchg
or
fisubr
je
retf
int
jg
adc
xchg
sbb
test
push
hlt
and
jns
or
call
jns
push
imul
test
ja
clc
mov
dec
pushf
in
shl
int3
in
xor
pop
mov
sbb
aas
push
mov
pop
ror
sbb
cmp
(bad)
aam
and
shr
mul
imul
mov
retf
mov
or
cmp
aas
mov
or
xchg
scas
or
stos
xor
and
ja
and
mov
inc
sub
sar
add
test
push
outs
jno
jmp
es
aam
and
adc
sbb
pop
push
and
icebp
jne
int3
dec
mov
dec
in
cs
cmp
xchg
sub
lock
mov
icebp
pop
jnp
adc
mov
push
pop
dec
sub
test
scas
push
call
pop
xor
fadd
mov
loop
xor
inc
cmp
jne
pop
mov
lock
mov
add
push
vprotq
and
fisttp
gs
sub
xor
out
nop
pusha
shl
push
sti
mov
add
push
and
xor
xor
and
dec
xor
xor
(bad)
cmps
pop
clc
and
push
push
inc
jp
cli
pop
pop
mov
dec
inc
and
ds
sahf
cmps
push
add
cmps
cmps
xor
(bad)
sar
ja
jb
cmp
xchg
nop
xchg
sub
xor
test
scas
or
ret
jmp
cmp
cmp
repz
loop
push
cmp
ins
or
add
mov
adc
inc
nop
mov
nop
cmp
in
pushf
shl
call
call
cmp
inc
shl
ins
mov
or
jae
sar
adc
out
outs
xor
pop
push
repnz
nop
pop
loopne
scas
cs
sub
xor
xor
or
add
inc
jp
out
call
dec
pusha
ins
pop
push
mov
shl
movs
push
mov
ret
push
das
(bad)
fcom
mov
out
inc
nop
outs
imul
push
(bad)
jl
out
shl
loopne
in
xchg
adc
or
data16
push
loopne
or
mov
das
dec
jmp
mov
cmp
or
or
inc
ins
gs
adc
jb
pop
pop
test
add
stos
sub
or
jnp
push
lahf
xchg
arpl
jp
in
in
jns
jne
push
dec
inc
dec
popf
inc
sbb
inc
jmp
cmps
adc
add
repnz
mov
or
fisttp
add
mov
pop
mov
mov
in
xor
adc
inc
jo
and
in
and
xor
cmps
cmps
xchg
es
cmp
enter
mov
or
mov
add
mov
xchg
dec
shl
fwait
jne
sub
mov
test
jne
imul
fdiv
pop
push
int3
xchg
and
adc
seta
xor
and
mov
sub
xchg
add
add
leave
cmp
inc
ret
imul
jno
mov
dec
repz
jmp
add
jle
inc
cwde
ds
mov
push
xchg
jo
call
aas
das
jno
jbe
xchg
mov
inc
push
cmp
fsubrp
jl
cmp
cmp
push
call
inc
nop
jae
cmp
xor
das
add
out
and
or
ja
push
xor
dec
pusha
add
adc
int3
push
imul
mov
popa
sbb
or
sub
inc
jae
nop
pop
mov
ror
or
in
dec
inc
jne
or
pusha
inc
(bad)
hlt
out
nop
test
test
sub
ret
mov
xchg
add
dec
push
dec
call
pop
and
call
jbe
mov
mov
push
inc
(bad)
and
daa
jmp
mov
jne
mov
adc
mov
sbb
or
cs
cmc
test
push
out
and
addr16
lock
cmp
sar
shl
(bad)
stc
add
out
add
or
and
ret
adc
add
adc
les
inc
or
xchg
adc
aas
push
push
bsr
push
cmp
or
cmp
mov
cmp
add
and
leave
sub
mov
icebp
push
sub
jp
adc
pop
or
mov
and
sbb
mov
or
or
fisubr
dec
pop
or
and
mov
pop
or
daa
sub
sbb
mov
push
(bad)
arpl
ins
cmp
mov
sbb
icebp
pop
and
pushf
xor
scas
push
pop
movs
rol
scas
xchg
les
adc
push
cmp
es
jb
sub
mov
add
faddp
and
neg
je
enter
cmp
mov
push
or
je
and
shr
cmp
and
les
cld
jle
add
daa
inc
clc
jno
jo
sub
or
shl
mov
sti
fdivr
jp
cld
dec
out
pop
or
icebp
jb
cld
jb
pop
sbb
and
enter
mov
pop
inc
push
js
dec
out
mov
loop
adc
jmp
xchg
push
movs
in
push
and
pushf
xchg
mov
add
shl
sub
fdiv
gs
enter
dec
test
int3
add
xor
sub
inc
popf
(bad)
mov
lock
fmul
ror
sbb
add
hlt
xor
xchg
mov
push
push
cmp
mov
rcl
js
or
pop
adc
jb
jo
dec
cld
add
pop
cmp
add
and
mov
shl
sbb
inc
mov
dec
adc
inc
xchg
mov
rcl
push
loop
aas
push
(bad)
mov
jg
in
cdq
and
mov
add
cld
jle
sar
mov
movs
cmp
js
and
add
imul
sub
call
cli
and
jae
adc
cmp
out
and
mov
or
jmp
dec
and
push
cmp
xor
nop
mov
inc
sbb
cmc
pop
xchg
mov
ins
mov
out
sbb
push
inc
push
mov
nop
cmps
loope
dec
popa
lock
xor
sub
sti
mov
pop
or
jnp
popa
sti
lea
mov
sbb
movs
mov
(bad)
push
pop
aam
add
sbb
jbe
push
loop
add
test
sar
(bad)
fnstsw
add
cmp
jae
lea
imul
cwde
add
ror
pop
inc
push
or
add
rol
push
shl
dec
fbstp
dec
inc
add
xchg
pushf
clc
call
in
add
xchg
xor
inc
mov
cmc
push
push
nop
lds
push
hlt
xchg
cs
adc
mov
dec
hlt
xchg
xor
test
loope
mov
mov
lock
xor
pop
xchg
and
push
ds
or
xor
and
dec
cmp
fidiv
(bad)
add
mov
jo
sbb
call
and
cwde
pushf
std
xchg
and
sbb
bsr
lea
retf
adc
pop
fs
xor
cmp
out
fldcw
aam
leave
loopne
jle
imul
mov
sbb
xchg
mov
rcr
add
mov
sub
into
call
fwait
add
sub
push
(bad)
pop
push
cdq
lods
or
clc
cld
ret
xchg
sti
push
shl
dec
xor
add
pop
or
pushf
nop
cs
mov
inc
jo
dec
mov
sbb
retf
nop
fcom
add
shr
mov
push
mov
cld
call
aas
push
inc
stos
and
popa
xchg
sub
pop
pop
in
add
xor
cmp
sub
iret
jmp
xor
xor
jo
and
movs
lock
iret
mov
pop
xor
fsubrp
not
add
inc
xchg
loopne
add
jmp
dec
add
test
rol
mov
mov
sub
ror
mov
and
sbb
inc
loopne
aam
mov
push
call
(bad)
ror
call
inc
cmp
and
sub
rol
faddp
ss
mov
rol
aaa
push
call
push
pusha
add
xchg
mov
test
call
add
adc
lds
jp
dec
sub
cmps
rcr
push
or
ror
push
in
xchg
in
xchg
retf
aam
cmp
in
xchg
sub
dec
mov
jmp
ins
stos
retf
cld
test
pop
movs
pop
fmul
gs
out
movs
dec
outs
and
or
popa
mov
call
icebp
inc
jne
jae
jmp
(bad)
dec
pop
sbb
pop
dec
pop
popf
add
rcl
mov
xor
lds
mov
ja
sbb
sbb
push
mov
add
movs
add
and
ds
add
and
push
add
int
cwde
add
out
add
leave
adc
add
mov
sub
mov
mov
test
shl
inc
imul
ds
cmp
jmp
push
leave
ins
jb
leave
push
iret
hlt
ds
xor
dec
scas
mov
add
and
dec
imul
pop
xor
sbb
add
iret
add
or
or
je
aas
fcmovnb
sbb
sbb
test
sub
daa
js
in
loop
imul
fs
mov
(bad)
push
rcr
pop
and
sbb
sbb
pushf
ja
fcom
int3
inc
(bad)
(bad)
push
mov
fadd
add
mov
jns
sbb
mov
add
cli
loopne
adc
dec
and
sub
sub
repnz
jno
je
retf
or
jmp
inc
mov
and
ins
cmp
pop
aam
push
pop
hlt
js
adc
fs
ss
sbb
jmp
aas
add
sbb
or
movs
and
or
imul
inc
pusha
xor
xor
lock
cmp
call
sub
lea
mov
mov
nop
and
(bad)
sub
cli
out
fsub
push
ret
push
out
push
jae
push
sub
or
xor
es
cdq
inc
rcl
ins
add
cmp
jb
sub
sbb
(bad)
jnp
push
xor
or
gs
push
scas
xor
test
mov
stc
push
push
mov
xchg
adc
dec
out
or
inc
pop
sub
(bad)
and
stc
mov
nop
(bad)
fucomp
in
cmc
sbb
nop
inc
jo
adc
jmp
stc
push
sbb
lea
jo
mov
mov
das
or
or
shl
cmp
adc
pop
add
inc
or
sbb
sub
inc
inc
enter
outs
cmp
jl
xor
and
push
ins
jg
call
in
inc
aam
sub
fisttp
je
rol
mov
xchg
icebp
popa
sahf
cwde
sbb
mov
xor
(bad)
rcr
adc
push
jo
pushf
pop
pop
xchg
mov
mov
mov
mov
scas
and
jmp
xor
lsl
int3
sbb
clc
add
inc
jle
jmp
sbb
js
rcr
inc
ret
and
bound
or
or
fs
(bad)
jg
push
adc
aas
cmp
ret
sub
cmp
or
jmp
jge
inc
scas
mov
out
arpl
out
mov
sbb
lds
or
or
dec
sbb
and
(bad)
sbb
fbld
js
add
jle
jnp
pop
dec
shl
dec
add
cli
rcl
repnz
cmp
jae
pop
sbb
adc
push
pushf
mov
gs
cwde
in
add
cmp
sbb
ror
inc
pop
fwait
push
cwde
sysret
or
jp
xchg
sub
xor
push
jle
push
adc
pop
xchg
scas
push
dec
add
fwait
(bad)
out
pop
cmp
(bad)
shrd
shr
cmp
pusha
cmp
(bad)
push
mov
push
and
push
mov
push
jnp
fidiv
(bad)
fst
mov
jne
cmp
cs
sahf
lock
adc
or
sbb
jmp
ror
inc
lock
and
into
mov
and
dec
add
sti
pop
sub
cmp
mov
cwde
stc
sub
lock
mov
adc
mov
out
sub
ins
call
jmp
or
bound
inc
jle
jle
or
in
test
jo
and
sub
inc
mov
das
add
mov
sub
inc
push
bound
cli
sub
and
nop
hlt
and
jb
loope
sar
and
jne
xchg
test
fst
xor
stc
seto
add
shl
div
nop
adc
ret
cmp
jbe
rcr
imul
adc
test
cwde
scas
dec
stos
add
or
adc
pop
rol
fs
movs
loop
rcl
or
aam
or
sbb
fucom
or
loope
mov
shr
inc
xchg
stc
dec
dec
dec
xchg
sahf
mov
dec
mov
cmps
je
pop
test
cmp
in
xchg
(bad)
(bad)
jmp
hlt
push
cwde
push
int
xlat
mov
(bad)
popf
adc
leave
adc
test
pop
cmp
adc
nop
lahf
inc
leave
lods
outs
(bad)
call
jp
cmp
add
and
fiadd
jno
and
push
fxch
and
mov
mov
pop
jne
mov
or
mov
sbb
ficom
call
pop
add
dec
adc
inc
pop
lock
daa
div
loopne
pop
adc
test
jae
push
or
add
in
aam
or
and
jne
dec
dec
ret
es
inc
popa
int3
xor
or
lds
sbb
adc
or
je
test
mov
movzx
mov
icebp
adc
dec
test
dec
sbb
xor
dec
add
test
push
test
sahf
stc
retf
bound
fild
les
jmp
call
xor
outs
stos
sbb
pop
jg
inc
dec
(bad)
inc
mov
cmp
loop
inc
push
dec
(bad)
cdq
inc
mov
push
adc
outs
sbb
mov
cmps
and
cmp
js
push
push
push
clc
mov
fadd
out
pop
ret
rcr
and
and
js
cmp
or
dec
fild
test
stos
les
or
arpl
add
in
jo
test
nop
movs
jecxz
fcomp
gs
test
inc
call
sub
sub
movs
mov
jmp
jo
xchg
pop
or
or
aas
or
or
dec
mov
es
out
mov
pop
jmp
(bad)
jl
cmc
movs
xor
add
dec
rcl
fnstcw
xlat
inc
not
xchg
push
mov
xlat
pop
fdiv
cmp
fwait
ror
inc
xchg
adc
push
push
and
lea
mov
or
dec
or
outs
adc
call
inc
scas
pop
xor
jns
je
jge
inc
mov
fld
inc
pop
dec
or
outs
jecxz
cmp
mov
xchg
shr
lods
or
jne
pop
mov
mov
mov
cdq
add
push
rol
and
mov
ss
and
push
jmp
jo
lea
mov
mov
xchg
mov
movs
mov
rcl
mov
das
outs
nop
adc
adc
sar
or
outs
adc
lock
cwde
add
xchg
aam
mov
movs
add
sbb
sub
cwde
add
cmp
mov
mov
jne
or
push
jp
dec
or
imul
sub
or
jmp
shl
mov
or
add
arpl
cld
push
repz
stc
add
xchg
jmp
loope
sbb
mov
add
je
or
cmc
test
clc
push
or
add
fist
cmps
cs
mov
lea
adc
xchg
bound
pop
shl
icebp
shl
or
mov
lea
push
sar
cs
in
or
ret
bound
mov
xor
sub
pop
shl
shl
imul
jne
pop
adc
outs
sbb
xor
sbb
ret
sub
xchg
cmps
jecxz
imul
adc
adc
push
mov
sbb
mov
and
int3
(bad)
jp
sti
jnp
aas
or
les
add
into
xor
or
bound
inc
aaa
push
add
adc
paddsw
ds
or
loop
retf
pop
iret
pusha
das
or
and
adc
add
mov
xchg
xchg
pop
pop
lock
and
test
cmp
inc
inc
xchg
jge
pop
add
sar
loop
ins
jne
test
movs
sar
(bad)
mov
les
pavgw
jp
daa
arpl
jp
push
add
add
mov
ficomp
daa
mov
cmp
arpl
mov
add
sbb
push
je
add
cmc
sbb
push
pop
jne
push
fistp
mov
enter
mov
jp
pushf
jbe
push
inc
add
cwde
xor
fnstenv
out
sbb
inc
fstp
cmc
add
cld
mov
adc
and
push
jmp
xchg
lock
cdq
icebp
adc
je
inc
icebp
xor
ins
sub
xchg
push
cld
push
sbb
cmp
ret
jno
adc
and
push
xchg
cmp
call
ud2
mov
add
push
mov
inc
and
mov
mov
mov
(bad)
js
sbb
push
ret
fld
mov
sub
push
in
and
fs
sbb
inc
dec
or
adc
push
jp
sahf
and
push
cmp
xor
mov
adc
cwde
push
ja
push
mov
cmp
mov
cmps
popa
mov
mov
outs
or
xchg
mov
ds
ficom
mov
adc
adc
xadd
push
mov
xchg
and
mov
inc
retf
add
add
and
jne
add
adc
sbb
xchg
in
mov
or
sub
test
dec
test
fmul
mov
push
push
sbb
or
clc
outs
cmp
dec
sahf
pop
xchg
pop
aas
retf
xor
or
xchg
sbb
mov
and
lock
mov
int3
test
pop
xchg
jne
inc
push
push
fwait
jmp
ins
mov
jmp
mov
mov
pop
cmp
or
in
sub
sbb
mov
push
cli
adc
or
adc
cmp
or
xor
lea
and
sub
aas
mul
loop
dec
or
adc
pop
sbb
call
and
xor
adc
daa
mov
jne
loope
adc
stc
ror
dec
add
not
jo
push
mov
test
pop
repnz
inc
mov
or
cmp
xchg
and
dec
sbb
jmp
mov
jne
pusha
pop
mov
inc
inc
or
inc
adc
clc
jge
or
js
inc
mov
mov
sbb
sub
adc
das
sub
push
inc
sbb
or
or
inc
xor
cmps
mov
outs
stos
push
mov
or
add
enter
cmc
div
and
inc
pop
and
jle
std
je
inc
pop
fmul
ret
dec
push
mov
cmp
gs
push
scas
add
pop
iret
add
in
movs
scas
mov
inc
nop
in
or
push
cmps
shl
jle
push
(bad)
adc
mov
mov
call
lods
adc
sub
xchg
or
add
add
retf
push
add
inc
push
popa
push
fsubr
adc
mov
push
lock
(bad)
and
mov
cmp
rcr
neg
add
mov
adc
les
clc
sub
out
or
sbb
dec
jmp
add
jb
xor
xor
and
(bad)
(bad)
lods
pop
popa
ja
xor
xchg
or
and
mov
add
inc
loopne
outs
sbb
inc
inc
cmp
jle
pop
cli
out
iret
jmp
lea
or
xchg
push
add
mov
fadd
mov
adc
mov
inc
out
je
and
dec
push
mov
xchg
(bad)
or
(bad)
and
dec
xor
ins
(bad)
jnp
lea
popa
push
push
push
add
call
aaa
push
add
or
dec
mov
dec
push
mov
sbb
lods
pop
lahf
mov
or
movs
mov
sbb
xchg
daa
and
push
or
add
into
add
hlt
mov
retf
retf
call
mov
sar
add
or
and
add
cwde
add
sub
sub
and
enter
inc
fild
call
mov
inc
adc
xor
inc
push
push
mov
rol
dec
movs
enter
push
test
sbb
addr16
fdiv
mov
push
out
dec
in
int3
ret
add
adc
sub
mov
ret
or
xchg
mov
push
mov
into
add
push
ret
lock
enter
push
pop
add
nop
ds
cmp
xor
in
pop
and
and
push
and
mov
pop
dec
push
loopne
pop
(bad)
pop
jne
in
jo
loopne
push
adc
jmp
push
pop
in
ffreep
mov
adc
sbb
in
add
jae
inc
aas
popf
out
cli
dec
add
adc
jbe
push
mov
mov
xlat
ins
jp
sub
cmp
or
test
cmp
fidiv
pop
cmp
sbb
fsub
mov
or
test
fild
mov
push
and
ror
adc
sti
loop
add
leave
pop
jmp
ror
inc
dec
add
fs
test
dec
inc
adc
cdq
adc
inc
or
scas
std
scas
iret
add
jae
push
push
sbb
sub
add
mov
pop
nop
ret
cmps
add
push
lahf
stos
js
cmp
jo
shl
pop
adc
push
xchg
hlt
ret
mov
jg
test
js
cmp
call
dec
jb
cld
fcmovb
jecxz
loopne
sbb
cmp
or
test
or
das
jl
outs
fs
xchg
sbb
cmovl
adc
or
pop
mov
mov
push
nop
mul
int
pop
call
lea
not
pop
push
loope
cmp
nop
inc
test
push
stos
mov
fisttp
dec
das
adc
cwde
icebp
cmp
cmp
and
fwait
or
pusha
cmp
dec
rcl
lock
aas
dec
loopne
(bad)
adc
sub
jne
jmp
rol
jns
ja
pop
cwde
test
dec
aam
add
nop
dec
inc
mov
ret
add
mov
xchg
xor
mov
dec
lds
mov
pushf
shl
es
mov
scas
pusha
push
sahf
pop
int3
add
inc
(bad)
cmp
out
mov
or
push
and
push
push
pop
lock
fnsave
xchg
shl
xor
jnp
and
xchg
adc
cli
push
xchg
push
shl
shr
pushf
add
cmovge
push
sbb
je
cs
add
jne
add
inc
cmp
je
cld
sbb
(bad)
ficom
mov
stc
aaa
adc
inc
aam
mov
inc
data16
adc
jg
add
es
call
and
imul
cs
push
jbe
push
xchg
push
xlat
dec
jl
sub
(bad)
cmp
mov
nop
or
inc
fwait
sub
dec
jg
add
cmp
mov
jo
jbe
movs
push
je
pop
imul
push
fsubr
sar
ror
call
dec
pusha
mov
push
add
mov
jo
pusha
fadd
mov
out
ficom
mov
xchg
adc
sub
adc
fisttp
rol
add
lods
add
out
pop
mov
dec
jno
das
sbb
shl
jb
js
jecxz
js
rol
add
sub
jmp
out
pop
mov
call
shl
cmp
pushf
cmps
popf
add
jmp
inc
add
pop
dec
movs
and
cwde
inc
add
inc
add
into
clc
cmp
add
pushf
jg
pop
(bad)
icebp
repz
pop
jmp
sub
das
mul
retf
aad
sub
shl
mov
retfw
test
push
add
jbe
movs
hlt
jno
loopne
inc
add
xor
or
mov
cmp
xchg
mov
inc
shl
inc
jl
fnstenv
mov
test
js
or
mov
add
push
rcl
mov
hlt
pop
xor
mov
xlat
mov
test
push
or
retf
add
scas
dec
jno
sbb
(bad)
retf
scas
in
pop
and
push
mov
sbb
xchg
or
pushf
pusha
or
xchg
jp
jmp
sti
or
je
dec
and
and
scas
sub
sub
ins
pop
xchg
in
ret
popa
ret
jmp
mov
ins
je
sar
inc
ds
leave
xor
in
sub
xor
inc
sub
and
jg
sbb
xchg
das
test
je
xchg
add
xor
add
push
add
adc
or
sub
push
cmp
xchg
mov
mov
push
pop
add
mov
inc
outs
(bad)
dec
add
jg
xchg
cmp
pop
data16
xor
jmp
cmp
adc
adc
cmp
mov
pop
adc
jbe
sub
jb
fs
sub
adc
adc
mov
cmp
jmp
mov
(bad)
(bad)
xor
sahf
inc
lahf
push
add
xchg
jp
add
sti
mov
lea
jo
adc
dec
dec
aas
in
cmp
inc
js
push
add
test
in
pop
jne
data16
lods
mov
push
pushf
repz
pop
add
xor
dec
push
jp
mov
and
xor
adc
ret
fcomp
jmp
into
leave
sbb
push
sub
add
sar
and
inc
sub
sbb
ror
inc
ret
scas
or
push
or
push
pop
push
push
mov
pop
(bad)
adc
push
das
jno
bound
(bad)
das
sbb
hlt
mov
sub
xor
xchg
cmp
repz
js
jbe
add
ret
sbb
xor
in
or
or
xlat
sbb
cmps
inc
gs
push
pop
pop
mov
xchg
test
push
loopne
adc
call
sub
push
jle
adc
push
sbb
mov
pop
mov
jmp
repnz
lock
push
xchg
adc
jns
and
push
jge
and
or
je
cmp
jb
jmp
jne
popa
add
retf
pop
jp
scas
mov
rol
push
mov
iret
push
inc
inc
mov
jbe
ficom
inc
push
adc
inc
mov
out
adc
add
adc
pop
pop
or
pop
pushf
cmp
syscall
adc
fstp
icebp
lock
mov
xor
add
and
ins
pushf
adc
xor
dec
mov
xor
mov
jne
aam
sbb
dec
pop
inc
push
or
lsl
adc
sub
add
push
push
in
mov
sbb
mov
ret
(bad)
sahf
cli
mov
test
jle
test
mov
(bad)
scas
sbb
push
mov
pop
xlat
fst
add
push
fcmovnb
cwde
push
push
je
por
cmp
dec
inc
and
sbb
pop
mov
jb
sahf
out
dec
test
sti
adc
pop
mov
dec
pop
mov
cmp
test
push
retf
cmp
xor
sbb
inc
loope
retf
js
or
test
lods
push
cmp
push
push
ret
and
sbb
push
mov
push
stos
adc
dec
cmp
jmp
inc
daa
mov
mov
xor
cli
loope
imul
jge
dec
enter
or
dec
inc
hlt
fsubr
mov
pop
jle
mov
and
mov
or
add
sub
push
and
rol
and
jmp
inc
push
push
and
add
jmp
int3
test
out
(bad)
jmp
lods
scas
add
cli
cmp
sub
shl
fmul
mov
mov
jae
stos
or
mov
ja
add
cli
rol
cmp
and
mov
iret
sbb
push
xchg
xchg
cli
add
push
test
add
adc
push
(bad)
push
das
loop
and
jmp
or
xlat
push
movs
jb
push
daa
popf
in
push
pusha
mov
mov
test
xchg
rcl
retf
and
inc
push
push
adc
jecxz
xlat
cmp
xor
pusha
call
test
loopne
xor
push
test
xchg
gs
retfw
push
loop
repz
je
mov
jge
push
das
xchg
ror
fmul
mov
out
push
or
inc
mov
push
call
or
cmp
rcr
out
jne
sub
dec
fnstenv
xchg
sub
xchg
mov
and
out
adc
jg
popa
xchg
pop
je
sahf
pop
jne
adc
aam
ins
add
or
add
lods
imul
(bad)
and
addr16
sbb
inc
push
push
inc
retf
rcr
push
sbb
cmp
pusha
mov
add
dec
pushf
mov
sub
data16
jmp
in
xchg
inc
xchg
jns
pop
and
mov
push
inc
ror
(bad)
in
xor
jg
add
push
add
or
in
xor
fcmovnbe
dec
push
data16
add
daa
dec
inc
rcl
mov
sbb
dec
pop
jp
mov
mov
mov
int
xor
add
hlt
push
cmp
dec
inc
ret
outs
push
fdiv
add
jge
add
lar
movs
popa
cmc
sbb
mov
mov
xchg
neg
ret
dec
sbb
stc
push
popf
mov
in
mov
enter
sar
mov
xlat
jmp
jp
ret
xor
es
xchg
lea
fmul
pop
rol
arpl
neg
jbe
mov
jmp
sahf
loopne
jbe
retf
mov
mov
add
les
push
pop
add
push
xchg
and
dec
sbb
add
jmp
aas
pop
push
adc
out
push
adc
jmp
jl
or
sub
mov
int
in
inc
repz
scas
add
xor
mov
push
jg
test
pop
out
and
xchg
jns
mov
(bad)
(bad)
fdiv
daa
repnz
sbb
cmp
inc
ds
fdivr
sub
call
inc
or
xor
adc
hlt
sbb
and
inc
xchg
push
add
pusha
push
sbb
push
jns
xlat
mov
cli
xchg
add
outs
mov
test
out
test
or
xor
dec
and
dec
pushf
xchg
adc
loope
ret
jo
push
js
aam
sbb
sbb
rcr
inc
loopne
sub
clc
pop
les
popf
xor
and
ins
(bad)
mov
(bad)
jnp
sbb
ins
add
pop
add
jns
shl
dec
lods
dec
cmp
mov
xor
imul
sub
adc
mov
pushf
cmp
xor
mov
test
enter
ins
mov
adc
xor
adc
or
mov
inc
xor
add
jmp
daa
jo
pop
xor
sbb
movs
pop
mov
sub
jg
xchg
or
mov
mov
adc
inc
(bad)
mov
or
cwde
sub
adc
or
or
test
push
dec
fisubr
rcl
js
dec
add
sbb
xchg
ds
ret
mov
mov
or
call
adc
adc
xor
jo
mov
push
fist
loope
cmp
sbb
xor
inc
inc
and
adc
sub
inc
sbb
adc
fmul
pop
das
jno
ds
mov
xor
sbb
ja
into
jg
sbb
pop
pop
pop
sub
inc
adc
mov
pop
mov
dec
inc
adc
sbb
loop
repnz
mov
pop
mov
jae
cmps
or
jmp
dec
imul
pop
jbe
xchg
adc
fs
and
call
sbb
rcl
pushf
and
push
xchg
inc
(bad)
add
ss
mov
push
dec
dec
popa
fist
imul
pop
jmp
add
mov
fs
out
xor
out
push
ja
push
jmp
(bad)
jp
sbb
je
sti
jle
cld
(bad)
rol
or
lods
cmp
inc
mov
mov
xchg
push
mov
pop
inc
(bad)
shl
xchg
ins
and
cmp
nop
aas
popa
push
add
adc
cmp
push
sar
add
fstp
mov
xor
not
mov
ret
push
mov
ret
call
mov
cli
sub
jg
jmp
adc
inc
shl
cli
xchg
and
add
fnstsw
sub
je
mov
fadd
jecxz
in
add
or
es
sahf
cs
xor
pop
adc
jne
or
or
fs
lock
pushf
rcr
rcr
jmp
inc
pop
sbb
fild
add
fsub
add
dec
push
js
mov
imul
mov
call
lahf
fnstsw
sbb
not
adc
iret
push
xlat
jmp
cmp
(bad)
sub
adc
sbb
sub
xchg
dec
dec
in
mov
sbb
sar
lods
and
aaa
inc
push
inc
add
pop
pop
mov
loope
xor
cli
fmul
popa
cdq
mov
push
or
or
inc
dec
sub
or
inc
iret
arpl
pop
xchg
rcl
push
jmp
outs
pop
add
adc
mov
sbb
loopne
dec
xchg
xor
pop
arpl
pop
pop
movs
jno
aas
mov
dec
sub
pop
ja
dec
fsubr
dec
xchg
push
fld
cmp
ds
sub
cmp
ds
and
and
adc
and
xor
pop
push
std
rcr
jecxz
pop
adc
xchg
push
jmp
jmp
mov
gs
or
sbb
xchg
pop
(bad)
cmp
mov
add
shr
jmp
je
mov
mov
push
stos
pop
or
mov
inc
ss
cmp
test
or
outs
pop
es
mov
int
xor
cld
add
push
adc
jmp
pop
and
ja
dec
xor
pop
add
push
popw
jnp
jnp
mov
pop
and
ror
or
xchg
mov
mov
inc
push
repnz
pop
push
or
add
jo
and
sub
cs
jmp
and
test
sub
gs
cwde
pushf
lods
jmp
mov
lea
std
ss
retf
inc
(bad)
add
lods
sub
dec
and
aad
add
add
movs
xor
jne
adc
inc
inc
add
mov
adc
add
cmps
enter
aam
add
jmp
call
movs
dec
or
mov
or
jmp
push
jmp
xchg
mov
mov
dec
sbb
add
xor
sbb
cmp
retf
mov
push
mov
and
cmp
and
fld
push
xor
sbb
push
and
dec
(bad)
jbe
cmp
sbb
xchg
and
std
jmp
and
add
and
dec
cmp
and
and
add
movs
fwait
pop
test
or
jbe
push
lea
xor
add
aam
popa
push
sahf
xchg
jle
scas
inc
inc
xchg
inc
cmps
add
jnp
ins
hlt
stos
pop
jns
jmp
mov
and
jmp
popa
xchg
pop
inc
imul
sub
ins
jmp
jp
sbb
and
adc
outs
(bad)
lock
rcl
mov
scas
int3
sub
xchg
stos
xchg
dec
ret
es
lahf
and
das
into
and
add
jo
movq
jecxz
mov
(bad)
ss
mov
sbb
mov
pop
cmps
mov
dec
retf
pop
sbb
add
sbb
inc
jle
shr
dec
mov
and
imul
xchg
xchg
mov
push
push
pusha
pop
push
sub
pop
dec
and
adc
xchg
sbb
add
sahf
xor
sbb
adc
or
mov
sahf
or
add
inc
jecxz
enter
mov
dec
aad
or
and
popf
jae
inc
adc
(bad)
pop
jmp
popf
jne
add
jg
xchg
es
sbb
push
inc
inc
cmp
ss
les
xchg
jno
or
hlt
or
adc
das
loope
aad
dec
pop
pop
addr16
xor
jo
mov
test
sbb
mov
sub
xor
je
lahf
add
ficomp
loopne
ja
ret
rol
in
test
arpl
add
loope
dec
add
inc
xor
rol
xor
sar
into
fbstp
or
out
xchg
jge
les
push
test
into
and
cmp
and
test
sub
pop
mov
push
ret
dec
neg
test
adc
pop
rcr
adc
add
pop
sub
data16
sub
and
retf
push
mov
xchg
aaa
jmp
xor
ja
cmp
jl
das
sbb
cmp
and
sbb
adc
jl
jl
push
dec
ret
cmp
shr
ins
(bad)
(bad)
aaa
fcom
out
or
xor
cmp
push
out
test
xchg
push
mov
mov
push
push
sub
mov
xor
pusha
jmp
sbb
imul
cmp
shl
pop
(bad)
pusha
or
and
jmp
inc
push
adc
pop
dec
rcl
dec
xor
pop
dec
loope
adc
xor
mov
pop
clc
je
xor
cmp
lea
add
pushf
xor
ds
pop
and
outs
and
push
pop
ret
mov
xor
push
jno
cmp
hlt
cs
scas
cmps
cmp
cmps
adc
jl
jecxz
adc
call
adc
inc
sar
ret
xor
add
xor
ror
cmp
xchg
scas
or
jg
enter
test
push
call
push
in
inc
movs
dec
mov
test
test
xor
cmp
pcmpgtb
xor
mov
stos
movs
mov
jb
mov
mov
xchg
dec
add
fld
adc
jmp
inc
rol
test
dec
pushf
and
inc
icebp
and
in
pop
aaa
mov
xor
movs
inc
sub
push
pop
sub
sahf
dec
pop
pop
push
xchg
cmp
dec
das
fbld
xchg
add
je
cli
add
mov
adc
add
adc
sbb
sahf
(bad)
xchg
jo
adc
sbb
cwde
cmp
test
ret
out
addr16
jmp
xor
or
xchg
lock
and
pop
adc
out
out
or
ret
ror
mov
adc
push
xchg
dec
lock
xchg
out
fst
pusha
push
sbb
lahf
sar
gs
add
and
adc
sub
mov
out
xor
in
dec
push
cmp
cmp
pop
mov
mov
mov
jbe
mov
icebp
or
xor
pop
adc
dec
stc
es
dec
adc
add
scas
sbb
push
out
add
push
cmp
sub
dec
pop
pop
icebp
cmp
icebp
adc
xchg
add
jmp
movs
add
into
or
or
outs
and
lock
bound
mov
or
jl
test
test
sub
mov
adc
add
sbb
add
mov
mov
and
mov
push
and
push
jmp
jo
out
or
lods
stos
mov
cdq
out
xor
xor
rol
adc
push
pop
and
mov
pop
retf
inc
sbb
(bad)
mov
fild
push
push
imul
push
mov
mov
mov
rcl
cld
push
and
fwait
ja
aam
jge
dec
add
push
sbb
add
movs
je
jl
imul
xor
pop
cmp
jg
(bad)
cmp
aas
ins
loope
mov
icebp
push
loop
push
sbb
fst
cmp
repnz
and
push
adc
out
loop
cmp
dec
rol
add
adc
outs
nop
inc
nop
ss
add
outs
push
xchg
sbb
pop
xor
and
or
cmp
jmp
cmp
sti
ss
sub
scas
mov
and
js
mov
int3
(bad)
or
xchg
xlat
xor
(bad)
das
xchg
lock
(bad)
pushf
das
push
aam
add
in
mov
jl
shl
dec
data16
shl
daa
lahf
adc
push
jmp
xor
sub
mov
or
and
es
add
shl
(bad)
fnstcw
and
ds
ja
dec
cwde
xchg
mov
in
not
rcl
das
push
add
lea
xchg
aad
xchg
jbe
mov
pop
std
xlat
and
mov
push
sub
xchg
jmp
xchg
mov
cmp
pop
lock
inc
xorps
xchg
es
xor
push
xchg
(bad)
icebp
cmp
xor
inc
inc
fcom
jno
pop
cmp
xchg
push
rol
popf
adc
lds
xor
adc
sbb
sbb
inc
jno
fwait
(bad)
arpl
aam
test
adc
and
adc
push
ret
dec
pop
xor
sbb
xchg
pusha
and
stc
call
inc
pop
leave
mov
add
cmc
xor
push
nop
aas
add
mov
loope
fcom
add
inc
push
in
mov
xor
(bad)
jo
rol
mov
inc
es
mov
mov
cld
rol
jmp
cmc
inc
mov
push
xchg
mov
fist
mov
stos
push
rcl
dec
xchg
xchg
sbb
xchg
sub
je
xchg
popf
fldenv
xchg
push
aaa
mov
mov
xchg
outs
pop
and
outs
fcomp
stc
add
nop
test
ds
push
xor
fadd
fwait
or
pop
(bad)
adc
push
jae
loope
rcl
nop
mov
xor
lds
mov
add
jnp
in
inc
and
adc
mov
stos
add
jmp
jo
and
stos
mov
or
retf
mov
sbb
data16
call
cs
xor
ds
iret
test
add
adc
fisubr
xor
mov
and
inc
daa
push
add
cmp
or
mov
loope
imul
mov
inc
stc
inc
call
(bad)
call
test
push
and
or
xchg
ins
add
push
push
mov
ret
mov
sahf
and
mov
inc
xor
pop
sbb
stc
push
call
pushf
sbb
jmp
cmp
sub
jmp
in
nop
sub
jb
sub
and
or
ret
dec
dec
outs
and
sar
rol
test
mov
xor
sbb
sbb
sub
or
push
popa
add
push
and
jb
gs
inc
sbb
and
dec
shr
in
movs
jecxz
cmp
aaa
sub
adc
shl
mov
imul
add
dec
inc
(bad)
sub
jbe
je
xor
dec
adc
(bad)
aam
(bad)
nop
test
ins
and
cmps
dec
jp
xchg
ds
out
sbb
inc
pop
push
clc
fisttp
jp
cmp
iret
and
sti
push
jecxz
enter
dec
xchg
cmp
add
mov
clc
int3
and
(bad)
bound
or
jo
aam
mov
xchg
mov
into
jmp
mov
and
and
and
clc
add
mov
jecxz
pusha
cmps
inc
adc
mov
mov
sub
dec
dec
and
mov
(bad)
jge
sbb
pusha
or
adc
in
adc
(bad)
jmp
popa
add
and
cmp
retf
mov
jae
xchg
aam
in
retf
test
add
out
and
fcomp
or
xchg
hlt
gs
mov
pushf
jae
add
adc
mov
arpl
mov
jo
test
(bad)
mov
jno
retf
jo
pop
xchg
adc
cwde
(bad)
sbb
jbe
mov
and
mov
sbb
nop
hlt
pusha
and
xchg
add
adc
push
les
mov
repz
ret
and
mov
sub
repnz
add
xor
push
fs
int3
add
pop
xchg
(bad)
or
dec
jmp
xor
cdq
call
stos
or
cmp
or
sbb
sahf
mov
daa
aam
jg
cmp
xor
sbb
sbb
int3
retf
push
(bad)
mov
pop
adc
add
pop
push
in
push
cmp
and
push
add
xchg
fidiv
jmp
out
cmp
sbb
and
adc
lods
or
lock
addr16
inc
dec
shl
rcl
scas
mov
cld
adc
mov
mov
pusha
ds
ds
mov
call
or
or
add
add
test
mov
mov
mov
mov
mov
and
mov
inc
xor
mov
nop
out
fisubr
and
std
sti
sub
or
mov
hlt
xor
fsub
fcomp
leave
or
xlat
add
xchg
test
mov
jmp
inc
or
fnsave
retfw
dec
or
pop
add
sbb
aad
inc
into
and
les
jmp
dec
push
not
sub
xchg
add
pop
js
jae
sar
lock
add
(bad)
jg
dec
test
stos
jne
mov
adc
add
mov
aaa
in
pop
push
stc
movs
push
aam
inc
(bad)
or
shr
sub
pop
cwde
xchg
cmp
sub
stos
aad
scas
jle
aam
mov
in
adc
popa
mov
leave
dec
jge
mov
add
jb
rol
mov
or
jb
test
dec
movs
(bad)
shl
int3
scas
aad
(bad)
mov
in
int3
call
adc
aas
(bad)
add
adc
fist
sbb
xchg
dec
test
nop
ds
ja
mov
dec
test
cmp
imul
ins
push
test
ds
or
jbe
cmp
push
call
jp
or
out
and
ds
jmp
ror
adc
mov
clc
mov
call
adc
bnd
(bad)
rol
add
cmps
out
retf
jl
sub
ss
mov
cmp
dec
js
and
mov
lea
ret
retf
stos
mov
or
inc
mov
je
daa
xor
div
cmp
jg
loopne
jp
add
dec
jmp
jecxz
mov
(bad)
xchg
adc
mov
push
mov
(bad)
cmp
lahf
inc
or
std
xchg
sub
add
lea
ins
mov
mov
inc
or
loope
push
sar
sub
jl
cmp
adc
xchg
int
add
mov
movs
mov
xchg
or
mov
rcr
fwait
dec
push
sbb
aas
and
in
cmp
or
inc
or
cmp
inc
inc
adc
into
jl
inc
mov
addr16
cmp
cmp
std
(bad)
jl
movs
test
sbb
cld
cmp
add
lock
xor
push
lods
inc
xchg
push
cmp
or
push
jb
dec
ror
pushf
sbb
xchg
lea
or
les
push
ss
xchg
push
adc
add
lock
xchg
push
push
and
ja
lods
iret
movs
les
lock
sar
inc
test
mov
dec
ret
push
aam
add
out
jno
pop
ret
jbe
jnp
and
dec
or
mov
mov
xor
mov
mov
inc
leave
xor
xor
call
cwde
test
or
cmp
and
or
lahf
add
clc
and
adc
addr16
inc
sub
in
add
rol
mov
mov
jp
xchg
add
mov
pusha
popa
push
xchg
cmp
sbb
clc
dec
sbb
xchg
cmp
dec
cmp
je
xchg
add
jle
loop
add
in
jmp
movs
popf
cmps
scas
adc
nop
mov
lock
shl
mov
adc
push
push
bound
sar
in
or
pop
repz
jne
push
ins
and
lock
dec
or
xor
add
sbb
addr16
aad
imul
lea
shr
dec
sbb
sub
adc
cmps
inc
outs
dec
loopne
mov
mov
ror
add
sbb
push
dec
lds
pop
sub
add
xor
gs
sub
or
clc
cmp
xchg
out
dec
mov
mov
add
add
add
sbb
push
push
xor
adc
dec
int3
cmp
jo
pslld
mov
cmps
pop
(bad)
call
and
(bad)
jnp
cdq
or
daa
(bad)
fisub
(bad)
js
xor
mov
pop
jp
adc
inc
aam
pop
xchg
jo
adc
sub
dec
dec
pop
add
cmp
shr
sbb
inc
pusha
int3
fnsave
pusha
and
sbb
inc
adc
mov
sub
add
jns
xchg
mov
scas
je
int3
cmps
push
cmp
cmps
movs
push
imul
arpl
inc
dec
(bad)
(bad)
(bad)
push
clc
popf
sbb
inc
adc
ja
jecxz
add
pop
mov
stc
dec
pop
inc
shl
bound
stc
sub
data16
(bad)
call
pusha
mov
call
aaa
sub
retf
pusha
add
movs
xchg
mov
in
adc
lds
test
ss
xchg
retf
mov
cmp
les
push
add
mov
inc
ins
retf
mov
add
sub
in
pop
inc
mov
inc
mov
inc
ret
out
push
sahf
(bad)
jl
sub
test
je
push
push
xchg
(bad)
and
ins
aam
add
add
sti
xor
jae
ud0
push
imul
inc
je
daa
cmp
push
into
pop
dec
xchg
inc
push
adc
inc
mov
sbb
shr
mov
mov
push
push
or
mov
dec
imul
pop
jmp
adc
mov
pop
jmp
outs
cmps
or
fdivr
lea
nop
inc
mov
cmp
inc
dec
sbb
dec
cmp
mov
mov
push
cld
out
inc
or
sbb
xor
movs
std
cwde
cmp
inc
rcr
ret
jne
push
or
test
sub
push
test
adc
out
js
pop
retf
fwait
inc
cdq
mov
cmp
out
fldpi
cmovae
dec
push
xchg
lahf
pop
mov
inc
xchg
std
lods
cmp
les
jge
cmp
idiv
movs
fld
(bad)
cmp
push
jecxz
xor
shl
clc
mov
sbb
mov
xor
test
xchg
not
nop
lods
mov
adc
ret
xchg
shufps
(bad)
sti
cmp
mov
xor
js
lods
fs
ds
jle
cmp
cmp
cmp
or
inc
(bad)
and
daa
jmp
ret
sbb
call
pop
pop
loopne
pop
rol
imul
rcl
das
into
rol
mov
mov
sub
pop
out
add
mov
add
mov
sbb
add
sub
push
push
mov
call
repnz
lahf
in
pusha
adc
(bad)
stos
adc
call
fimul
int3
dec
idiv
and
lods
rol
xchg
dec
mov
aam
cdq
xor
div
adc
jmp
lods
mov
and
ror
xor
and
sbb
cmp
clc
ja
inc
gs
sbb
cmovo
shl
mov
loope
popf
int3
pop
mov
inc
push
(bad)
xchg
nop
aas
inc
popa
or
push
jmp
inc
jle
pop
(bad)
call
sbb
repz
and
or
dec
enter
inc
fcomp
or
mov
sahf
test
fmul
inc
sahf
pop
fmul
push
push
shl
xchg
(bad)
nop
adc
mov
sub
ds
sbb
lods
sub
loope
enter
int
call
push
and
popa
mov
mov
sti
in
cmp
mov
icebp
jge
adc
jb
xchg
cmc
movs
inc
(bad)
movs
pop
lahf
sbb
add
ja
jne
push
test
popa
ja
or
cmp
cdq
add
inc
aad
test
adc
cmc
xchg
xor
mov
jmp
out
in
sub
repnz
pop
xchg
jecxz
stc
and
(bad)
cmp
call
jb
lahf
jb
mov
sbb
jle
push
(bad)
dec
mov
pop
sbb
sbb
dec
cmp
ins
mov
scas
nop
and
inc
fdiv
add
leave
popw
jb
or
les
and
int
mov
adc
add
mov
mov
mov
mov
pop
adc
out
retf
push
pop
jmp
cmp
pop
mov
sbb
loopne
pushw
rcr
(bad)
xor
in
cmp
ss
fwait
or
out
fcom
int
or
or
mov
jecxz
cmp
data16
and
fst
inc
mov
iret
dec
xor
dec
and
xchg
and
outs
add
sub
ror
adc
and
inc
adc
aad
mov
xlat
jecxz
fwait
ds
jo
imul
pop
pop
mov
(bad)
movd
scas
xor
aaa
inc
scas
das
pop
inc
sar
push
jno
inc
into
add
cmp
into
fdiv
jl
cmp
ret
adc
jno
or
loope
dec
lsl
xchg
popf
(bad)
(bad)
daa
mov
dec
jmp
pop
rcr
rcr
pop
out
adc
lods
fnstcw
dec
cs
jmp
(bad)
retf
adc
(bad)
loope
or
std
loope
mov
ror
sbb
int
inc
cmp
rcr
cmp
pop
or
push
and
je
xor
add
or
out
inc
xchg
sbb
adc
adc
dec
andnps
push
xchg
js
sahf
jmp
or
sub
cmp
push
sub
inc
ins
push
dec
inc
sub
sub
js
jo
add
(bad)
cmp
or
jle
cld
inc
mov
xor
cmp
ror
push
pop
or
cs
loopne
iret
jmp
push
push
sub
sahf
jl
add
enter
(bad)
mov
(bad)
movs
fiadd
pop
enter
dec
test
xlat
ret
sub
sahf
fwait
mov
or
daa
in
call
and
mov
push
lods
xchg
nop
mov
scas
add
jns
sub
(bad)
cmp
sbb
jnp
mov
sbb
add
cli
jecxz
xchg
rol
ja
xchg
imul
shr
and
pop
adc
push
cmp
xchg
fs
and
fdiv
fdiv
and
mov
scas
xor
pop
jl
jne
adc
je
xchg
fist
pusha
js
test
jmp
sbb
daa
jno
fwait
dec
fcom
je
pop
(bad)
xchg
sbb
mov
mov
and
adc
xor
movs
adc
sbb
and
(bad)
and
test
inc
mov
aam
es
xchg
and
mov
adc
dec
dec
inc
aaa
sahf
push
xchg
je
dec
or
xsaveopt
sub
sub
jg
inc
push
adc
cmps
pop
or
or
scas
and
loope
and
push
push
push
in
xor
mov
xor
sub
or
pop
add
and
add
xor
call
lock
xchg
mov
movs
and
leave
int3
pop
sahf
cmps
lea
xor
mov
fisub
jne
fcomp
call
imul
pop
mov
icebp
push
shl
and
xchg
jns
push
loope
sbb
cld
cmp
dec
mov
pusha
sbb
jge
mov
or
mov
add
push
and
mov
ja
xchg
sbb
outs
std
inc
xchg
push
test
fwait
jl
in
mov
mov
jmp
mov
(bad)
push
pop
or
dec
or
dec
fcmovnb
mov
(bad)
jnp
dec
dec
ins
mov
or
out
adc
adc
shl
xor
clc
dec
push
imul
in
mov
push
mov
jmp
loopne
movs
lock
xor
pop
hlt
or
rcr
ss
cmp
and
inc
push
mov
push
in
cmp
loop
add
fld
xor
and
adc
push
lahf
mov
xchg
cmp
popf
jne
pop
test
mov
mov
jecxz
jo
call
pusha
sub
xor
push
enter
adc
push
mov
test
add
(bad)
mov
xchg
inc
rcl
lahf
fadd
cwde
loopne
cmp
xor
or
jmp
mov
enter
xor
and
sbb
jo
or
cmp
xor
push
push
call
nop
and
out
ret
jmp
adc
loop
sbb
in
adc
repnz
push
rcl
jmp
push
mov
xor
xchg
mov
outs
(bad)
jmp
ror
sub
call
sbb
push
lods
add
xor
mov
xor
push
mov
sbb
aaa
jbe
sbb
inc
fcom
push
and
xor
push
icebp
and
inc
dec
and
sub
xchg
scas
sbb
adc
ret
xor
lods
adc
repz
inc
adc
aas
or
cmp
add
fld
test
or
mov
adc
jl
cmp
xlat
daa
or
pop
add
cmp
xchg
and
cmp
outs
inc
ds
mov
mov
pop
mov
add
es
scas
nop
movs
jmp
mov
adc
movs
push
mov
lahf
push
xchg
(bad)
mov
and
add
sahf
test
mov
lea
sbb
lea
xchg
xchg
add
push
mov
add
lods
or
call
shl
lea
cdq
inc
inc
data16
mov
add
jbe
jl
mov
inc
aam
fsub
mov
pop
test
mov
dec
push
ret
push
aaa
mov
jo
inc
xchg
and
add
in
sub
and
fadd
ds
in
push
hlt
cdq
mov
arpl
mov
out
pop
xor
pop
pop
test
hlt
mov
and
pop
and
xor
pop
add
loopne
xor
mov
test
pop
(bad)
cwde
jmp
mov
xor
icebp
jl
daa
mov
xor
lock
cmp
dec
fs
and
adc
sbb
sbb
mov
cdq
pop
stc
add
jp
xchg
mov
or
or
int
das
or
xor
mov
mov
or
add
or
xor
inc
mov
and
fild
enter
movs
inc
push
xor
ds
add
and
fdiv
ds
adc
mov
in
inc
std
cmp
hlt
test
sti
xchg
das
cmp
and
mov
add
xchg
movs
xor
loope
test
int3
call
xor
rcl
push
add
pop
xor
push
gs
inc
js
pop
fadd
jne
jnp
push
sub
sbb
aas
push
mov
sbb
mov
push
inc
dec
pop
dec
mov
pop
mov
add
call
push
sbb
mov
xor
test
and
iret
xchg
fs
or
add
sbb
add
rcl
out
and
movs
je
and
pshufw
cvtps2pi
dec
sbb
inc
movs
jmp
adc
mov
retf
xlat
aaa
push
dec
rcr
push
repz
dec
cmp
mov
lods
and
push
fisubr
ja
dec
and
add
add
xor
dec
shr
dec
cmc
adc
xor
xchg
test
test
push
fprem1
add
ret
shl
inc
xchg
push
sbb
xchg
ds
pop
xchg
xor
adc
or
rcl
adc
push
add
retf
fcomp
fs
int
out
repnz
cdq
sbb
idiv
push
add
popa
loope
cmp
das
cmp
mov
loop
sub
mov
ret
or
sub
mov
xchg
or
jmp
ret
clc
div
xor
jecxz
sub
sbb
push
sub
pop
daa
push
je
or
aaa
mov
adc
or
rol
xchg
pop
clc
sbb
mov
dec
jne
into
retf
mov
mov
scas
(bad)
push
push
call
pop
mov
push
adc
mov
out
xor
dec
cmp
sub
jo
pop
pushf
push
and
xor
test
mov
xchg
mov
jp
out
gs
neg
mov
adc
mov
sub
or
arpl
add
and
mov
mov
lock
push
push
mov
das
jae
inc
mov
lods
ins
sbb
pop
push
jo
add
and
sar
movs
or
fcmove
outs
adc
ficom
fst
dec
xchg
mov
scas
inc
pop
out
fdivr
sub
sbb
xchg
dec
popa
push
push
inc
clc
sub
push
clc
xchg
fsubr
push
inc
dec
xchg
loopne
scas
sub
add
and
pop
cmp
pop
fmul
(bad)
fadd
mov
jp
add
and
sub
aas
jno
pop
sbb
sbb
in
arpl
sbb
movs
cmp
dec
push
dec
or
mov
mov
add
cmc
out
adc
jp
push
and
sbb
sub
cmp
cmp
fadd
fld
xchg
mov
sub
and
clc
loopne
sbb
pop
xchg
dec
push
dec
add
add
add
or
or
stos
push
add
(bad)
sbb
mov
add
daa
stos
sub
push
and
in
adc
test
adc
mov
add
lods
mov
mov
and
pop
pop
dec
xor
or
jbe
sti
inc
into
or
fisttp
add
ret
jb
fbld
ret
or
xchg
adc
sub
adc
cmps
adc
ds
add
and
dec
dec
lahf
add
lock
inc
test
in
mov
xchg
jmp
fistp
mov
and
sub
inc
sub
stos
mov
mov
xor
pop
sbb
sbb
adc
add
mov
call
das
push
and
sub
addr16
hlt
test
and
das
loope
cmp
jae
push
and
push
add
adc
xchg
ins
mov
out
sbb
leave
stos
xor
inc
adc
stos
pushf
mov
rcl
loope
push
mov
push
cld
inc
je
mov
out
or
push
push
sub
aas
sub
inc
jnp
rcl
add
out
js
ins
scas
sbb
dec
adc
xchg
jmp
repnz
xchg
nop
add
jl
mov
pop
xchg
mov
ds
je
pop
push
xor
inc
add
in
add
jmp
(bad)
push
(bad)
jmp
stc
js
inc
mov
fstp
cmp
jge
dec
(bad)
push
cmp
mov
push
inc
or
mov
push
lea
repz
cld
stos
mov
mov
or
test
adc
mov
ins
lds
push
mov
fsub
pushf
and
gs
and
sub
cdq
cmps
xchg
aad
push
dec
cdq
pop
lea
mov
cwde
cld
push
pop
mov
sub
mov
ja
mov
rcl
push
pushf
or
sub
xchg
dec
add
mov
add
sar
jl
mov
sbb
adc
fisub
addps
sub
jno
sub
ret
cmp
adc
ret
test
sbb
adc
call
test
cmp
mov
push
shr
push
mov
adc
mov
inc
inc
ds
les
xor
xor
xchg
adc
hlt
(bad)
jnp
pop
pop
mov
adc
push
aas
or
sahf
(bad)
shr
add
jl
and
sar
cmps
adc
mov
cmp
outs
outs
and
cdq
dec
imul
pop
dec
sub
mov
dec
sub
cs
test
gs
sub
loope
jmp
dec
movs
test
or
inc
jmp
ud2
pop
mov
inc
lock
and
xchg
push
xor
push
js
(bad)
xchg
cld
frstor
push
inc
pop
mov
cmps
fisttp
imul
daa
add
cmp
xor
mov
dec
cmps
je
ins
sar
adc
shr
int3
outs
adc
sub
jns
(bad)
movs
jge
xchg
mov
dec
and
xchg
lock
jmp
das
je
push
mov
adc
push
mov
push
jmp
pop
pop
lea
nop
ss
pusha
js
js
ror
daa
mov
xchg
stc
or
scas
jmp
mov
mov
sub
jo
loopne
std
inc
push
das
jnp
sar
dec
sub
xchg
sbb
lahf
add
inc
cmp
into
push
push
jg
rol
(bad)
mov
loopne
clc
loopne
cmp
add
mov
mov
mov
repnz
pop
shl
xchg
cli
call
and
fcomp
stos
add
pusha
in
and
jmp
or
xor
int
push
mov
fwait
add
adc
lock
adc
xor
lahf
mov
cmp
add
mov
xchg
jmp
sti
inc
leave
sub
pop
lods
pop
or
stc
sub
add
rcl
add
add
lock
ret
inc
add
(bad)
inc
(bad)
mov
xor
enter
inc
dec
mov
fstp
sub
adc
push
xchg
add
enter
mov
js
xchg
out
popa
lock
adc
int3
scas
push
je
stc
and
mov
sub
cmc
jg
int
repz
sbb
das
sbb
mov
pop
adc
dec
adc
pop
ret
push
je
ret
pushf
mov
dec
or
bound
rdpmc
sub
and
bound
jmp
push
fwait
pop
stos
sbb
mov
popf
push
mov
inc
or
popf
or
mov
adc
xor
ins
aaa
dec
cld
int3
and
adc
mov
add
adc
or
es
rol
push
cmp
cmp
or
dec
pop
nop
sbb
pop
xchg
xchg
xor
push
rcr
mov
rcr
cmp
push
xchg
loope
cmc
call
(bad)
bnd
mov
fsub
mov
or
mov
and
ins
nop
xchg
adc
std
cmp
or
mov
(bad)
(bad)
retf
add
je
lock
mov
sbb
inc
pop
shl
adc
sti
mov
sbb
push
or
mov
jne
daa
aam
push
lock
pop
add
aam
push
loopne
lods
push
push
fstp
jne
xor
std
jle
push
sbb
or
mov
push
xchg
adc
jecxz
sub
or
cmp
xor
xor
xchg
ins
or
fimul
jno
sub
loopne
test
sub
sub
dec
movs
mov
mov
ret
pop
mov
sub
dec
xor
fnsave
add
dec
inc
and
sbb
shl
and
mov
push
iret
inc
cmp
sub
jbe
icebp
ja
add
sbb
addr16
hlt
or
dec
ja
inc
cmp
inc
adc
or
fwait
aas
pop
jmp
push
jbe
movs
cmps
sub
inc
aas
in
ss
ret
ja
add
dec
push
xchg
xchg
xchg
ret
call
xlat
mov
push
sbb
or
pop
mov
pop
pop
push
fucomip
or
sbb
pop
out
adc
arpl
repz
or
inc
xchg
push
sub
imul
js
pop
push
mov
stc
cld
ja
cld
(bad)
pop
pop
je
xor
mov
pop
mov
ret
test
add
sbb
pop
xchg
adc
dec
dec
and
and
call
jns
mov
outs
or
push
call
xor
adc
mov
in
xchg
inc
mov
in
cmp
and
adc
jle
pop
mov
lods
sahf
push
and
test
aaa
test
inc
mov
add
lea
mov
cmp
lea
mov
data16
add
pop
push
mov
mov
inc
test
dec
add
lahf
int3
adc
push
jo
(bad)
data16
xor
mov
test
mov
cmp
push
rcl
in
std
adc
shr
clc
add
stc
xchg
in
add
mov
xchg
cli
xchg
or
std
mov
lock
jmp
add
inc
mov
je
or
fxch
adc
cmp
cwde
into
sbb
nop
pop
sbb
or
(bad)
call
inc
adc
stc
fsub
inc
xor
movs
loopne
in
push
and
or
inc
mov
mov
dec
dec
pop
arpl
mov
pop
sbb
ret
xchg
or
push
(bad)
sub
call
mov
cmp
sub
mov
sub
ret
and
fcmovb
mov
loopne
les
push
mov
outs
cmps
jmp
inc
xchg
addr16
test
cwde
dec
jl
js
and
inc
add
or
mov
nop
call
fldenv
jnp
fist
push
stos
cmp
imul
mov
mov
dec
add
les
mov
lods
mov
daa
popf
fsubp
mov
dec
cmp
xchg
or
or
mov
das
daa
or
(bad)
shl
sbb
in
(bad)
dec
ins
pusha
leave
mov
xchg
jo
xchg
and
movs
movs
mov
mov
sub
jnp
mov
cmp
inc
adc
cmp
cmp
push
fs
or
add
mov
loopne
loop
push
scas
pop
push
arpl
outs
adc
test
cld
mov
adc
movs
test
test
inc
adc
mov
mov
mov
mov
push
push
mov
xor
call
xor
or
je
push
test
sub
mov
sbb
cmp
cdq
sar
mov
jp
mov
push
aaa
pop
push
sbb
or
retf
aad
adc
pop
outs
sbb
lods
mov
cmp
add
test
jmp
push
xor
dec
mov
push
hlt
push
gs
inc
push
outs
loope
xor
or
retf
sbb
add
pop
fs
pop
cmp
pop
add
pop
or
add
mov
mov
ror
mov
je
sub
loop
sbb
dec
rcl
xchg
in
adc
sbb
cdq
sbb
mov
and
ret
je
jno
imul
xor
fst
pop
or
and
sbb
add
sub
and
dec
pop
out
stos
outs
mov
pop
inc
pop
inc
adc
sbb
fstp
and
popf
outs
stc
push
mov
sbb
adc
push
sbb
and
mov
fs
and
xchg
add
call
and
or
xchg
bts
clc
lds
cmp
int
inc
lock
or
inc
dec
out
adc
lods
rol
out
data16
add
and
inc
ret
pop
ret
add
(bad)
mov
or
inc
icebp
test
adc
push
test
jno
sub
push
stc
aaa
pop
add
call
jg
mov
adc
daa
jb
inc
icebp
fs
lea
pusha
adc
push
inc
arpl
in
and
clc
mov
std
neg
cmp
jmp
xchg
inc
or
pop
xor
addr16
pop
xor
call
cld
pop
(bad)
cmps
mov
jge
rol
call
dec
jmp
pop
sbb
push
mov
mov
cdq
outs
jle
fcom
daa
mov
popa
xchg
stos
loope
sbb
xor
enter
mov
cmp
and
rol
mov
mov
dec
or
push
or
shl
ret
loopne
sahf
call
sub
add
push
cmp
dec
ret
cli
test
add
sbb
repnz
mov
inc
test
movs
pop
ins
mov
in
jmp
into
cmp
jae
cmp
in
xchg
cmp
or
test
and
xchg
push
call
jmp
xchg
shl
cli
fs
inc
dec
gs
jmp
dec
fst
inc
in
inc
jle
lods
js
out
ret
aaa
sub
in
in
test
test
add
sbb
ror
fadd
out
inc
sub
or
test
popf
dec
call
(bad)
pusha
sbb
jmp
sub
sub
push
jle
inc
dec
mov
mov
les
jmp
push
mov
push
xchg
or
xchg
xor
lea
jmp
pop
shr
lods
inc
fcomp
add
ror
pop
call
or
pop
sub
cmp
mov
dec
add
cmp
xchg
inc
ins
cmp
add
pop
gs
adc
jo
mov
sbb
ins
(bad)
add
(bad)
cld
add
pusha
es
js
inc
add
adc
(bad)
les
cwde
xor
cwde
pop
cdq
cmp
pushf
pop
retf
adc
dec
adc
ret
sub
or
retf
mov
bound
sub
jle
sbb
xchg
das
pop
enter
push
jo
lods
adc
movs
sub
jo
lock
loope
shr
mov
cld
mov
ss
cmp
movs
inc
pop
sbb
adc
es
pop
repnz
or
and
call
shr
pop
push
nop
cmp
xchg
or
bound
fist
pop
xchg
mov
pop
lock
jae
push
ret
adc
outs
push
sub
xchg
outs
push
adc
rcl
out
imul
or
adc
mov
test
push
mov
mov
sbb
xor
mov
retf
sub
mov
mov
push
cwde
jnp
shl
and
push
mov
iret
icebp
adc
mov
es
jb
mov
pop
adc
xchg
loopne
jne
pop
cmp
scas
ins
fcomp
mov
jo
mov
mov
adc
and
jne
test
in
in
push
pushf
ins
stos
mov
mov
jg
in
inc
je
adc
fwait
cld
outs
lea
adc
pop
in
pop
mov
aas
jo
or
add
sti
sub
mov
add
add
inc
ror
ret
or
adc
pop
loope
imul
sbb
daa
push
xchg
pop
dec
retf
or
or
in
cli
sub
dec
js
lods
or
add
mov
sbb
lods
xor
je
call
adc
fld
shr
mov
sub
loopne
mov
and
ss
outs
cmps
xchg
push
cli
mov
add
push
adc
dec
pop
outs
leave
xchg
xchg
or
xor
push
cmp
and
xchg
and
repz
xor
add
in
inc
call
loopne
pop
push
jle
inc
sbb
and
inc
ds
cld
jnp
and
(bad)
sti
shr
jns
lods
push
clc
ins
cmps
popf
jb
ror
inc
les
adc
(bad)
stc
push
int3
fisttp
inc
add
loop
enter
adc
jo
les
add
adc
call
popa
repnz
add
cmp
adc
(bad)
loopne
enter
(bad)
add
add
xor
popf
inc
inc
aam
mov
add
xchg
dec
dec
mov
scas
fld
cmps
sub
shr
add
xor
(bad)
fcom
jmp
ror
xchg
add
(bad)
mov
movs
pop
xchg
sub
cli
scas
and
adc
push
jb
lea
hlt
cmp
mov
call
or
fild
clc
test
add
retf
cmp
pop
push
dec
les
loopne
xor
mov
nop
idiv
sbb
add
cmp
push
and
sub
pop
inc
sahf
outs
add
loopne
xor
add
xchg
in
push
cmp
xor
enter
adc
inc
mov
cmp
cmp
es
xchg
adc
add
div
mov
mov
jl
bswap
ja
bound
adc
xchg
xchg
add
pop
popa
nop
jl
setb
ins
loope
sahf
(bad)
xor
imul
fdivr
add
pop
xchg
mov
movs
cmp
rol
mov
adc
arpl
add
shl
inc
push
movs
add
xchg
imul
sub
dec
shr
cdq
mov
imul
icebp
xchg
jg
add
outs
in
or
dec
xlat
sbb
sub
test
dec
xchg
add
jg
inc
sbb
add
inc
rcr
fcmovu
jb
sbb
and
dec
jo
shl
arpl
fdivr
mov
xor
and
or
sbb
xor
cld
add
adc
xchg
pop
dec
ret
hlt
(bad)
test
(bad)
pushf
sbb
or
ror
xchg
dec
add
outs
inc
adc
shr
push
call
sbb
(bad)
jmp
sbb
cdq
mov
xchg
jmp
imul
fisub
cmp
add
movs
xchg
cmp
sbb
mov
jns
push
lods
sub
inc
inc
stos
sub
or
stos
jbe
pop
mov
repz
add
xor
sub
shl
(bad)
sbb
add
out
(bad)
cmps
inc
mov
cmps
jb
out
lds
mov
cmp
mov
jae
and
gs
loopne
leave
ret
adc
sar
fwait
xchg
cmp
mov
xchg
(bad)
out
out
sub
mov
xchg
repz
fsub
jbe
mov
adc
mov
pop
fsubr
cmp
sub
mov
sub
es
pop
fistp
fistp
push
jmp
push
adc
fisttp
mov
mov
in
in
xor
arpl
test
cli
or
jbe
popf
mov
lods
add
mov
inc
mov
and
(bad)
mov
sbb
stos
enter
cmp
das
or
cwde
call
mov
or
inc
sub
sbb
and
adc
inc
(bad)
xchg
jb
cli
neg
icebp
jae
adc
pop
and
icebp
or
or
push
cmp
cmp
adc
ret
sbb
push
icebp
(bad)
mov
add
sbb
mov
and
push
jmp
mov
dec
inc
retf
cmp
loopne
adc
push
push
fs
push
imul
adc
pushf
inc
leave
cs
ins
cmp
mov
sgdtd
inc
push
hlt
push
sbb
inc
cmp
mov
loopne
inc
jno
mov
adc
jae
or
add
jne
fidiv
dec
test
sbb
mov
(bad)
mov
push
mov
add
or
arpl
add
out
mov
mov
sbb
sbb
mov
cmp
jb
nop
xor
and
mov
xchg
and
in
call
push
add
icebp
add
adc
neg
push
mov
mov
adc
dec
or
push
and
mov
ins
popf
(bad)
fidiv
jbe
clc
cmp
repnz
mov
and
dec
mov
or
push
(bad)
cli
call
and
dec
shl
jnp
xlat
je
les
pop
es
ret
pushf
mov
sub
add
mov
cmp
push
add
push
jne
adc
lock
jmp
ss
dec
xor
movs
mov
(bad)
xor
pop
lds
daa
push
aas
add
and
add
xor
fld
add
sar
add
scas
ret
sar
xor
mov
jle
mov
or
fadd
pop
push
je
loopne
div
ror
repnz
cli
xchg
or
pop
xchg
jae
pop
add
xchg
addr16
mov
mov
pop
inc
retf
xor
or
sub
mov
add
mov
and
mov
mov
mov
(bad)
aas
outs
je
mov
aas
push
call
or
pop
lock
call
lea
ds
add
or
sub
add
sub
jl
cmp
mov
adc
push
mov
dec
fisttp
ret
add
xchg
cmp
arpl
or
mov
data16
push
jne
sbb
mov
aas
(bad)
iret
shl
adc
arpl
retw
mov
call
mov
sub
call
shl
je
dec
mov
mov
outs
xchg
pop
dec
jle
add
add
mov
cmp
or
out
mov
icebp
dec
mov
jmp
adc
jmp
ret
aad
rol
xor
xor
push
push
add
pop
push
dec
test
data16
call
pop
sbb
add
xchg
xchg
repz
(bad)
fxch
xchg
int3
in
ds
addr16
or
mov
xor
iret
je
aas
dec
mov
std
pop
xor
push
inc
jmp
xchg
xchg
push
iret
add
rol
dec
fwait
push
sbb
push
push
xlat
jge
push
hlt
lea
mov
lea
pop
jge
data16
or
sar
js
loopne
add
rcl
push
sub
add
jmp
and
stos
mov
jp
test
and
inc
cmp
lods
rcl
adc
mov
add
inc
sub
mov
iret
inc
sub
leave
xlat
add
xchg
test
xor
in
rcr
popa
jnp
inc
push
xor
jns
push
or
cmps
xchg
push
repnz
shl
rol
repnz
pop
add
adc
inc
inc
sub
pop
dec
mov
sub
push
movs
sub
ins
dec
mov
(bad)
ds
call
je
push
push
cs
jb
sub
mov
loopne
add
sub
ja
inc
dec
dec
pop
scas
cmp
jmp
adc
and
aas
dec
jbe
push
push
sbb
cmps
call
movs
icebp
sbb
pop
aaa
push
pusha
ret
sbb
or
pop
mov
fisttp
sub
int
data16
es
mov
push
inc
mov
dec
dec
and
pop
and
jbe
push
mov
dec
fiadd
pop
mov
jb
pushf
cmp
cli
add
dec
mov
and
add
dec
adc
push
call
aaa
cmps
popf
mov
inc
push
jge
movs
push
mov
sub
cmp
sahf
(bad)
pushf
dec
rol
stos
ret
add
push
nop
pop
adc
mov
jno
rcr
push
inc
imul
sahf
adc
pop
push
fcomp
cld
adc
jmp
fnstenv
push
call
push
cmp
sbb
push
sub
sub
cmp
mov
or
add
pop
scas
push
push
add
(bad)
repnz
xchg
dec
xor
in
repnz
add
xchg
mov
(bad)
or
inc
leave
test
sbb
jns
adc
aad
test
add
push
ss
cmp
or
pop
imul
add
dec
inc
or
xchg
and
xor
mov
push
push
fadd
cmp
dec
js
mov
jne
rol
push
add
inc
iret
sub
mov
push
in
pop
add
add
(bad)
and
inc
sbb
lea
xchg
and
nop
fs
cmp
mov
cmps
lahf
int
or
dec
std
fs
mov
xor
call
test
or
adc
rcl
lds
sbb
scas
push
or
pop
push
jl
adc
add
in
mov
rcr
(bad)
aaa
pop
ror
or
sub
adc
sub
call
adc
inc
stc
cmp
adc
jo
add
mov
jne
jno
inc
push
mov
cmc
sub
and
xor
nop
test
adc
loope
call
mov
cmp
(bad)
dec
sub
rol
jle
jge
arpl
mov
sbb
or
jne
(bad)
jg
mov
out
fiadd
ja
pop
gs
push
dec
mov
mov
sbb
inc
icebp
mov
lods
xor
daa
scas
loopne
nop
(bad)
push
test
push
mov
push
ror
adc
xchg
data16
pop
dec
sti
add
and
jp
jb
mov
or
push
rol
sbb
cmp
mov
lock
mov
cs
add
test
movs
mov
mov
(bad)
ret
jmp
push
push
mov
sub
xor
js
xchg
pusha
mov
mov
or
sbb
ror
movs
ret
jl
ret
ret
pop
sbb
popa
jno
mov
mov
dec
or
add
dec
add
les
cmp
sub
adc
mov
je
dec
add
add
sbb
fist
and
jge
mov
push
sbb
test
mov
paddusb
push
inc
pop
pop
jmp
jbe
loop
aaa
outs
out
pusha
mov
adc
push
jl
add
ret
bnd
xchg
or
mov
dec
xor
shr
aaa
movs
dec
lods
es
movs
mov
in
pop
pop
pop
sub
retf
outs
popa
xchg
arpl
or
jmp
loope
stos
xchg
test
imul
xlat
and
ret
fiadd
jns
cld
pop
sti
jmp
push
adc
(bad)
push
pop
adc
inc
(bad)
or
jns
rol
push
mov
pop
ret
repz
inc
std
jbe
cmc
jne
push
mov
fdivrp
(bad)
pusha
inc
or
pop
cs
call
dec
sbb
push
ins
sbb
mov
icebp
jmp
movs
ja
mov
(bad)
pop
scas
push
and
push
in
mov
std
icebp
or
imul
push
in
sub
lods
add
(bad)
stc
aad
pop
pop
rcr
jmp
pop
sbb
out
mov
xlat
inc
mov
push
push
mov
add
inc
and
jb
jae
dec
shr
pop
adc
gs
adc
pushf
mov
add
ja
mov
or
mov
xor
(bad)
xlat
lock
pop
pop
pop
jb
push
sbb
sbb
inc
add
and
cs
lea
add
inc
in
mov
retf
(bad)
mov
sbb
bound
sub
mov
pop
add
pop
sbb
sbb
fsub
mov
rcl
mov
stc
lock
jg
xor
hlt
push
push
add
adc
inc
shr
and
aad
fstp
in
pop
inc
sub
and
xlat
(bad)
loop
in
outs
bound
or
movs
dec
cmp
ins
mov
and
dec
push
in
pushf
adc
dec
(bad)
mov
dec
xchg
call
ins
dec
ja
popa
mov
adc
loop
mov
(bad)
push
enter
and
add
dec
mov
pop
jne
push
push
mov
jns
inc
dec
inc
xchg
adc
adc
xchg
(bad)
call
mov
out
call
lods
push
mov
js
rol
sub
or
add
stos
data16
ins
xchg
dec
jp
and
mov
call
add
mov
popa
add
aam
into
and
popf
adc
adc
cld
mov
jge
adc
test
adc
sbb
and
call
clc
mov
or
sbb
cmp
jge
retf
inc
mov
push
push
xor
(bad)
mov
mov
neg
movs
ret
sbb
js
mov
fiadd
ins
add
mov
push
test
mov
es
mov
loop
pop
rcl
nop
jno
mov
inc
pop
sbb
add
fcmovnu
in
pop
call
cmp
mov
jbe
dec
or
call
cs
and
fsubr
sbb
add
push
xor
fcom
or
push
cmps
addr16
aam
setns
icebp
or
lahf
xor
and
cmp
sub
xlat
add
rcl
addr16
mov
xchg
rol
xor
adc
int
cs
clc
imul
push
lds
add
xor
sbb
adc
dec
sub
cmp
int
and
fadd
sbb
cld
mov
cmp
test
lahf
sti
pusha
jns
fistp
jmp
pmaddwd
jmp
rcr
lods
and
add
xor
daa
push
xchg
mov
push
adc
jno
stos
retf
loop
xor
sbb
fsubr
neg
and
cmp
movs
dec
fcom
or
adc
sub
add
push
push
jo
int3
mov
dec
xor
loope
mov
sub
or
jp
mov
pop
mov
lock
jmp
push
sub
rcr
sub
add
lock
aam
or
push
lock
jp
cmp
add
add
mov
mov
jl
test
dec
add
fmul
xchg
(bad)
cmp
loopne
sub
xor
jge
call
pop
pop
mov
add
sbb
push
mov
xor
mov
leave
add
aaa
ds
jl
rcl
add
fdiv
test
loope
adc
ret
add
call
sbb
or
add
inc
idiv
dec
jp
out
push
jmp
outs
sbb
mov
or
sub
sub
dec
shl
retf
push
push
loopne
push
xor
or
add
in
mov
add
ror
xor
in
inc
sbb
push
imul
mov
shl
ja
or
mov
outs
loope
mov
lods
fld
xor
and
sbb
mov
int3
sbb
and
sbb
(bad)
hlt
sbb
leave
jle
jo
inc
cmp
js
outs
jmp
sbb
nop
xchg
jle
and
xor
ins
mov
shl
fs
sti
lahf
push
pop
push
sbb
ds
add
mov
bnd
inc
pop
retf
mov
and
lds
sub
icebp
aaa
sahf
xchg
mov
loopne
rcl
jge
rdtsc
idiv
call
jnp
mov
(bad)
jge
add
std
cmps
mov
add
adc
pop
mov
ficomp
mov
xchg
dec
jl
push
inc
aas
add
push
adc
sbb
and
outs
jae
dec
and
ds
or
or
mov
clc
(bad)
sbb
rcl
test
sub
neg
(bad)
aas
in
out
jmp
pop
les
add
push
rol
cs
cmp
je
nop
movs
mov
add
mov
sahf
cmp
mov
cmp
jmp
cmps
je
mov
ds
or
push
loope
nop
mov
dec
fldcw
mov
clc
or
pusha
mov
retf
pop
ds
imul
lahf
sbb
cmp
adc
popa
fadd
out
push
mov
pop
xchg
mov
inc
jmp
nop
movs
pop
mov
mov
loop
inc
mov
mov
jmp
mov
push
jnp
dec
or
or
push
cwde
dec
(bad)
xlat
data16
mov
mov
inc
icebp
hlt
dec
arpl
(bad)
outs
lea
and
push
push
mov
daa
dec
adc
or
xchg
(bad)
sub
mov
push
xchg
add
test
cmp
rcr
push
inc
or
in
or
mov
lea
add
inc
test
mov
mov
pop
sub
dec
cs
mov
mov
mov
mov
int
xor
test
imul
and
push
dec
add
(bad)
stos
cld
sub
fisttp
push
call
rcr
sub
pop
int3
jle
dec
sar
mov
ret
or
rcr
pop
mov
xor
sub
js
cmp
xor
jmp
push
xor
retf
xchg
arpl
mov
mov
cwde
or
mov
add
lods
push
int
call
(bad)
cmps
icebp
cmp
push
fidiv
pushf
jne
or
sub
(bad)
jmp
enter
inc
fidiv
outs
icebp
in
mov
jge
push
mov
nop
dec
mov
push
imul
nop
inc
pushf
mov
in
add
into
outs
sbb
jecxz
fstp
sub
lock
xchg
ror
scas
shr
push
call
sbb
lods
scas
pusha
(bad)
jle
js
in
in
mov
add
pop
or
fdiv
pop
loope
sbb
sub
les
std
add
cmp
and
lock
push
es
xchg
pop
pop
adc
loopne
lea
(bad)
lahf
xor
or
sub
fadd
call
push
arpl
xor
jbe
cwde
sbb
cmps
pusha
mov
cmp
nop
push
pop
mov
dec
mov
dec
fld
jo
adc
add
iret
adc
sub
lds
inc
mov
xchg
fcom
pop
loopne
aaa
mov
fwait
rol
push
dec
add
test
mov
cmp
das
or
enter
mov
sbb
push
mov
pop
popf
pop
add
add
call
push
dec
shr
lock
xchg
pop
xchg
or
sahf
movsx
or
cwde
mov
adc
sbb
mov
dec
jmp
data16
sahf
or
in
call
movs
xor
add
mov
das
mov
inc
pop
in
movs
lods
sub
rcl
adc
pushf
or
cli
cs
lea
add
or
inc
inc
in
fadd
adc
pop
movs
shl
jne
popa
mov
and
push
les
sar
rcr
and
inc
jb
push
mov
add
cmp
and
or
sbb
popf
xor
mov
mov
imul
ds
pop
jmp
shl
mov
cmc
scas
mov
mov
mov
jne
sub
cmp
adc
out
or
test
movs
xchg
stc
sbb
push
retf
jmp
sub
cvtpi2ps
into
ja
xchg
xchg
call
call
sbb
movs
cli
inc
mov
rcl
mov
loopne
sbb
and
cli
mov
or
or
das
inc
mul
mov
pushf
std
cmovl
(bad)
mov
and
rol
test
mov
sub
std
lock
bound
hlt
mov
sub
sub
adc
cdq
jae
mov
push
lock
ror
out
call
dec
mov
mov
fistp
call
outs
test
add
outs
aam
loopne
loope
add
test
jmp
aam
xchg
je
jae
loopne
xchg
in
add
jbe
dec
adc
je
jecxz
ret
movs
adc
cmp
sbb
or
add
and
or
dec
(bad)
call
sbb
push
ss
adc
fcmovnbe
jge
xor
cmp
jle
(bad)
loopne
scas
test
mov
jl
movs
and
sub
int3
(bad)
pop
jnp
inc
pop
add
pop
push
fild
and
inc
leave
adc
retf
inc
cmp
add
adc
lods
les
pop
lahf
push
push
inc
xlat
in
js
or
jmp
sub
fmul
xchg
push
pop
jecxz
dec
jmp
arpl
and
jne
add
mov
sti
jbe
stc
movs
addr16
jl
pop
push
outs
sbb
leave
pop
inc
mov
or
push
fcmovb
inc
adc
(bad)
or
frstor
add
test
outs
sbb
xchg
jecxz
adc
cmp
int3
mov
enter
fwait
mov
lock
(bad)
cmp
push
dec
add
adc
or
fsub
cmp
jle
cmp
mov
movs
repz
and
jmp
and
xor
sub
sbb
xor
jns
stc
push
mov
pop
pop
push
dec
call
movs
hlt
call
out
add
lea
call
xchg
cmp
cmp
pop
lods
imul
cmp
loopne
lahf
xchg
aaa
mov
mov
movs
add
inc
inc
sbb
stos
dec
sub
sub
inc
loopne
rol
cmc
pusha
push
adc
dec
leave
jp
movs
addr16
inc
dec
ss
cmp
xchg
loopne
adc
inc
sahf
cmps
adc
mov
pop
and
mov
push
xor
cmp
xor
xchg
dec
jmp
out
inc
or
cmp
int
sahf
dec
test
adc
or
or
xchg
repnz
(bad)
call
xor
(bad)
xchg
push
dec
ret
push
sbb
rol
fild
pop
sbb
xlat
daa
jo
xchg
or
loopne
enter
mov
xor
outs
mov
sub
mov
shr
ret
mov
or
jmp
push
enter
sub
imul
push
rcr
and
dec
dec
ss
(bad)
repnz
popf
pop
add
mov
push
sub
les
pop
dec
sbb
push
in
sub
test
sbb
cs
add
inc
(bad)
xor
jp
sbb
inc
sbb
add
jns
dec
call
push
jb
push
cs
jge
sub
mov
mov
gs
inc
xchg
loopne
add
jmp
mov
mov
cs
xchg
jns
test
mov
pop
pop
dec
push
xor
js
lods
in
test
sbb
push
jmp
loope
push
or
dec
daa
pop
pop
mov
fistp
add
add
cs
test
scas
adc
push
push
cli
pop
imul
test
mov
push
jmp
cdq
into
fsub
mov
in
mov
xchg
fldenv
jecxz
dec
iret
add
xchg
loop
ficomp
add
add
and
mov
pop
pop
(bad)
jmp
push
mov
movs
jmp
lods
ja
(bad)
jge
add
inc
sbb
cmp
cli
jge
ret
adc
pop
lea
jae
sub
push
add
push
loope
jb
sub
clc
adc
mov
mov
cmp
cmp
xor
ja
mov
xchg
xor
xor
and
mov
(bad)
lods
mov
xchg
sbb
inc
test
test
movs
and
mov
aas
inc
sbb
data16
xchg
jmp
test
jae
sar
inc
adc
cmps
jo
test
pop
jecxz
add
or
retf
push
arpl
inc
mov
test
add
xor
(bad)
repz
adc
jmp
daa
add
mov
movs
mov
pop
add
sub
ss
lods
inc
jb
out
adc
lea
jne
jne
or
es
pop
add
jg
dec
mov
mov
adc
jnp
push
and
ds
mov
call
dec
enter
rcr
mov
lods
add
jno
push
pop
or
or
mov
sbb
sbb
sbb
(bad)
rcl
call
xchg
rol
pop
stos
loopne
(bad)
cmp
pop
test
push
push
xor
clc
add
test
pop
cmp
stos
loop
and
mov
out
xchg
inc
jno
mov
cmp
sbb
cmps
jbe
sub
jle
sub
pop
(bad)
stos
ja
inc
fstp
pop
mov
test
and
cmp
xor
cmps
hlt
pop
mov
mov
xlat
stos
push
add
or
and
mov
je
les
loope
mov
repnz
popf
(bad)
xchg
inc
push
mov
sub
(bad)
jo
in
les
inc
jge
jbe
popa
or
lock
or
out
inc
call
push
call
jno
mov
stos
ret
push
add
jnp
icebp
mov
adc
push
jns
mov
hlt
add
xchg
scas
adc
mov
dec
pop
imul
add
push
mov
fstp
cmp
jmp
lods
ins
fdivr
mov
add
add
jmp
loopne
xchg
jle
ror
jnp
add
mov
fst
xchg
movs
fmul
jg
imul
jmp
xchg
shr
xor
fld
push
shl
leave
push
jae
fstp
lods
mov
mov
retf
lods
ret
push
mov
in
call
gs
or
scas
inc
dec
mov
add
call
adc
add
mov
add
adc
push
cmp
adc
popf
xor
sub
xor
jg
mov
mov
xchg
adc
(bad)
dec
ret
aaa
jne
cmp
add
lock
and
and
jbe
xchg
sub
ja
arpl
jae
in
jecxz
jle
push
les
jmp
sbb
fwait
les
fbstp
sub
push
out
add
sub
cmp
xlat
shl
add
cmp
adc
add
cmp
pop
clc
add
sbb
arpl
xor
add
pop
push
mov
cli
je
or
jg
inc
xchg
dec
retf
mov
push
nop
into
mov
inc
push
xchg
cmps
mov
aad
pop
movs
jmp
fwait
mov
(bad)
pop
adc
dec
sub
jp
sub
mov
test
movs
xchg
jp
add
xor
ret
jp
dec
or
mov
or
lds
pop
sub
test
xor
adc
dec
and
xchg
cmp
inc
push
push
dec
(bad)
jp
cmp
sbb
sahf
mov
fisub
and
retf
das
pop
ffreep
and
lahf
call
inc
push
out
pop
sbb
and
test
mov
mov
jnp
sub
enter
adc
adc
add
lock
leave
idiv
or
outs
add
adc
mov
dec
popf
cmp
jne
sub
mov
dec
sbb
xchg
(bad)
int
or
mov
sbb
mov
dec
cld
adc
xchg
imul
fcom
popf
mov
jmp
xlat
aas
dec
dec
(bad)
push
pop
jae
inc
or
add
mov
mov
add
dec
push
push
pop
xor
cld
push
mov
les
add
daa
jmp
dec
sub
xor
mov
ret
mov
shr
push
shl
call
nop
push
add
scas
sbb
cld
adc
xor
call
arpl
aas
adc
sbb
add
dec
stos
jmp
fcmovnbe
ret
shl
lods
add
mov
pop
pop
daa
lock
sub
push
in
pusha
pop
cmp
ret
(bad)
int
pop
(bad)
in
aad
mov
jns
repz
xor
push
push
inc
movs
jbe
test
test
mov
inc
add
jno
out
fwait
or
lock
or
std
dec
dec
movs
mov
jne
push
cli
jecxz
cdq
adc
ds
out
call
xor
jmp
aas
arpl
aas
mov
jmp
ret
dec
jmp
mov
sbb
pop
add
rol
in
call
push
xchg
loop
aaa
xchg
bound
jno
inc
(bad)
(bad)
cli
call
(bad)
sti
ins
and
bound
mov
in
adc
pushf
test
pop
pop
not
inc
inc
mov
adc
hlt
push
cmps
jmp
iret
jmp
jnp
add
add
rol
pusha
mov
pusha
(bad)
mov
stos
jae
jbe
xchg
mov
ja
sbb
js
mov
add
gs
mov
sbb
push
sbb
pusha
scas
rol
lds
icebp
sub
or
xor
lods
outs
pop
call
cdq
das
mov
xchg
cwde
lods
out
dec
dec
adc
push
fstp
sbb
stos
movs
mov
cmp
frstor
push
jmp
bound
movs
fwait
popa
and
outs
push
mov
in
movs
and
mov
in
fdiv
ja
mov
jmp
mov
jmp
xchg
jge
fdivr
jmp
movs
sti
mov
loope
xchg
dec
add
dec
xor
add
sar
imul
pop
sar
and
cmp
cmp
xchg
dec
cmps
mov
pop
out
inc
jmp
cwde
movs
or
xchg
rcl
popa
fs
cmps
mov
sub
jg
dec
aaa
enter
xchg
(bad)
mov
and
pop
push
and
sub
das
in
push
sub
sbb
nop
add
adc
retf
fs
xor
ret
std
scas
and
aas
mov
pop
cmp
dec
loopne
jp
dec
ror
add
or
push
cmps
xor
mov
int3
push
aad
rcl
mov
dec
es
jno
outs
add
dec
clc
in
dec
mov
xchg
aaa
xchg
outs
or
inc
mov
cwde
xchg
int3
cmps
push
dec
leave
repz
fs
dec
dec
nop
mov
cmps
je
stos
add
sub
shr
cmps
push
loope
in
mov
ds
or
fs
imul
das
mov
xor
imul
xchg
aaa
test
lods
(bad)
rol
mov
mov
sbb
outs
lock
inc
call
mov
xchg
mov
or
push
or
adc
lds
cmp
inc
call
and
sbb
ins
and
adc
scas
(bad)
pop
add
into
jbe
jmp
push
xchg
inc
or
fwait
sub
adc
sar
pop
lea
cwde
push
push
jb
cmp
movs
push
in
aam
mov
adc
enter
(bad)
pop
ret
and
es
pop
mov
and
in
lea
mov
call
inc
inc
es
retf
popf
pop
clc
repnz
inc
mov
xchg
cmp
cmp
or
push
sub
fmul
jnp
pusha
sub
adc
aam
dec
pop
jmp
add
inc
sbb
lock
popf
enter
pusha
cmp
xor
inc
jmp
sub
popa
dec
cmp
cmp
pusha
test
cwde
rcr
cmp
or
pop
or
es
cmps
mov
(bad)
xor
sbb
(bad)
mov
dec
dec
out
or
sub
jmp
push
and
push
jmp
dec
mov
pop
rcr
call
pushf
punpckhbw
push
mov
push
je
pop
outs
enter
inc
xchg
sbb
inc
std
jnp
mov
popf
test
or
sbb
dec
call
and
addr16
cdq
retf
sub
retf
adc
imul
push
add
cmps
imul
and
cmp
out
xor
xor
xchg
pop
cmps
hlt
dec
outs
cmp
pop
jle
popf
sti
pop
xchg
(bad)
std
jle
add
sbb
and
jle
inc
jecxz
fst
out
xchg
cwde
push
dec
movs
fild
stos
mov
call
pop
test
je
push
cmp
push
jmp
pop
cmp
(bad)
xor
add
inc
cmp
xchg
outs
adc
rcl
(bad)
imul
cwde
jns
cmp
ret
xchg
jb
js
cmp
cmp
sub
add
mov
pop
retf
test
cmp
cs
adc
in
mov
pop
pop
sub
jmp
call
addr16
mov
jnp
sar
stc
arpl
stc
dec
jmp
fcmovbe
stc
inc
mov
arpl
stc
mov
repnz
lahf
jmp
bnd
xchg
imul
outs
or
sub
sbb
and
dec
leave
in
xchg
aas
cmp
cdq
in
sub
sbb
mov
lock
sbb
xchg
std
fld
jp
add
xor
jge
cld
ret
xchg
jb
call
fidiv
jne
jecxz
shl
or
push
imul
xchg
or
push
dec
enter
test
sbb
sub
sbb
or
inc
inc
out
pop
jecxz
call
add
push
push
mov
cmp
nop
lock
test
mov
mov
or
pop
and
jmp
inc
cwde
jmp
pop
cli
sbb
daa
cmp
imul
les
rcl
ret
mov
mov
xor
imul
out
push
and
pop
in
dec
repz
ret
fimul
mov
sbb
sbb
sbb
xchg
xchg
div
daa
fild
adc
xor
and
cs
rol
aam
pop
mov
or
xchg
mov
ja
inc
or
imul
inc
jle
test
push
sahf
or
pop
sub
jne
push
push
jne
daa
fsubr
add
fsub
jmp
push
(bad)
mov
shl
or
ret
push
not
jmp
mov
push
mov
and
sahf
and
into
pop
loop
sbb
call
lock
push
push
call
dec
and
cs
imul
mov
mov
or
clc
sti
cli
add
add
dec
jmp
mov
ret
add
inc
jmp
adc
push
xor
out
cmp
es
pop
or
adc
and
fimul
leave
aam
jae
mov
mov
or
out
pop
gs
pop
mov
mov
and
(bad)
out
std
call
je
jne
jo
sbb
enter
outs
sbb
leave
push
hlt
mov
push
add
adc
xlat
mov
sub
scas
stos
mov
xchg
sub
loopne
dec
js
pop
ja
xor
xor
xor
or
jmp
cmp
shl
dec
dec
push
stc
(bad)
lock
add
xor
xor
add
inc
call
imul
jb
(bad)
in
push
adc
scas
mov
sub
test
shr
int3
xchg
loopne
push
aas
dec
jmp
add
jno
add
mov
mov
loop
call
inc
sbb
sti
mov
call
push
mov
aad
cmp
aaa
cmp
xchg
rol
add
xor
je
mov
and
adc
pop
or
nop
mov
and
cdq
inc
inc
loop
add
mov
dec
jne
mov
loopne
sar
pushf
mov
clc
call
jp
mov
sub
or
add
fwait
mov
mov
or
xor
ja
sbb
in
icebp
push
or
xchg
loope
aaa
mov
jg
cmp
push
test
mov
cmp
aam
add
test
js
jbe
push
jbe
out
push
scas
or
out
ds
push
aaa
push
jno
sbb
inc
(bad)
pop
(bad)
pusha
or
popa
rcr
sti
or
or
imul
gs
cmp
jne
push
mov
push
add
fadd
shl
mov
xor
and
popa
push
pop
dec
inc
or
mov
sub
pop
mov
(bad)
enter
add
jecxz
call
inc
out
out
xor
lahf
and
fsubr
xor
in
add
mov
scas
xor
push
imul
(bad)
pop
movs
jo
adc
outs
jb
repz
push
(bad)
sbb
js
cli
loope
add
jo
cmps
xlat
mov
jne
fistp
inc
push
or
sub
or
sub
js
jmp
aaa
adc
add
add
push
add
sub
shl
cmp
mov
lds
js
adc
sahf
dec
cdq
xor
outs
call
cwde
sub
xor
cs
mov
cmp
mov
inc
inc
pop
clc
dec
jge
cmp
dec
add
xor
sets
out
(bad)
ins
adc
out
add
inc
jne
cmp
pop
add
mov
push
pop
mov
inc
add
cmp
jl
(bad)
mov
inc
mov
fwait
sub
popf
dec
lea
sbb
pop
test
cmp
add
add
test
pusha
adc
jmp
pop
xchg
call
stc
push
push
jo
daa
nop
adc
xor
push
add
xor
inc
inc
or
add
jbe
mov
sbb
pusha
jae
hlt
jl
inc
cmc
movs
inc
cmp
rol
iret
xor
adc
pop
cwde
test
mov
clc
mov
call
mov
scas
mov
outs
jbe
aam
mov
inc
clc
xor
mov
sbb
pop
pushf
sbb
ret
adc
xor
movs
inc
inc
push
test
outs
pop
gs
cmp
xchg
sti
pop
pop
push
fidivr
pop
stos
dec
sar
inc
jmp
add
call
add
push
inc
pop
or
and
popa
iret
scas
dec
jo
mov
(bad)
shl
xor
in
shl
push
ret
push
add
loopne
jl
sub
dec
not
cmc
xor
call
adc
fmul
pop
cmp
push
js
sub
xchg
aas
(bad)
push
lahf
or
repz
sub
or
xlat
ror
iret
and
or
and
das
mov
sub
sbb
xchg
leave
call
aam
rcr
pop
or
jne
sub
fisttp
jae
pop
sub
jne
adc
cli
push
loop
sbb
jmp
push
das
adc
repz
add
and
int
jne
xor
adc
cmovp
jae
adc
pop
js
mov
xchg
adc
fcomp
sub
push
js
imul
sbb
pusha
gs
js
leave
outs
enter
pop
fs
and
mov
jmp
jb
adc
push
mov
(bad)
retf
out
(bad)
add
dec
cmp
mov
cld
push
inc
call
addps
shr
in
fiadd
fistp
pop
imul
loope
arpl
xchg
popf
jb
xor
add
or
mov
mov
clts
pop
sar
gs
add
clc
mov
mov
jg
xor
jb
clc
or
pushf
mov
or
es
arpl
mov
add
idiv
adc
add
push
std
inc
and
xor
push
imul
push
inc
dec
int3
push
loope
inc
xor
retf
xor
add
pusha
mov
dec
ins
inc
sbb
add
mov
mov
ret
inc
add
imul
push
sub
test
xor
fmul
push
mov
inc
sub
mov
pop
ja
sti
movs
mov
scas
push
mov
setae
mov
or
outs
data16
mov
and
test
add
mov
mov
ror
repnz
jmp
jle
and
or
add
rcl
mul
jne
scas
dec
fisttp
jp
loop
scas
add
push
jmp
ror
mov
sbb
push
outs
(bad)
mov
jmp
xor
aam
ss
test
aam
loopne
retf
pop
dec
loope
inc
movs
shr
xchg
imul
mov
mov
dec
pushf
fs
lods
mov
aam
lock
daa
hlt
mov
xor
or
ret
loope
into
(bad)
mov
fidiv
push
in
inc
adc
adc
xchg
arpl
dec
jle
test
imul
pop
mov
xchg
push
(bad)
iret
pop
enter
test
loopne
loopne
mov
imul
test
push
in
jo
ret
cmps
ins
mov
rol
inc
loopne
or
sar
push
xchg
and
adc
pop
or
fneni(8087
adc
push
sub
inc
call
pop
mov
rcl
jmp
adc
adc
mov
test
es
daa
shr
ror
call
and
imul
cmp
ja
das
lods
and
push
jg
mov
out
dec
movs
jg
or
mov
mov
js
jmp
aaa
push
cmovnp
call
jp
imul
add
xchg
repnz
lods
fwait
dec
nop
jne
mov
sub
mov
mov
int
push
lods
mov
dec
dec
cs
and
shl
lds
inc
outs
loopne
cwde
fisttp
pop
sub
popa
mov
sbb
inc
pop
cmp
lods
mov
in
fcom
movs
imul
jne
mov
xchg
sar
add
dec
xchg
ror
jbe
adc
mov
in
add
inc
add
or
and
push
(bad)
push
xor
sub
loop
push
adc
mov
dec
repnz
xchg
add
je
push
int3
xchg
inc
lock
adc
xor
movs
add
and
add
nop
and
mov
add
xchg
mov
xchg
out
loopne
adc
dec
test
call
xor
push
mov
mov
mov
js
adc
mov
mov
jne
add
loopne
out
loop
mov
daa
call
ret
ret
in
lods
add
out
stc
push
(bad)
pop
add
div
add
les
cmps
in
mov
xchg
inc
imul
xor
leave
sbb
push
inc
inc
call
inc
add
add
or
add
nop
daa
add
push
test
loopne
add
ins
leave
call
aam
addr16
mov
js
dec
cmc
add
loope
adc
(bad)
jmp
inc
(bad)
hlt
jecxz
xor
push
aas
ins
lea
xchg
xchg
(bad)
pop
rol
mov
jg
or
push
cmp
sahf
mov
cli
add
mov
jecxz
add
shr
out
mov
mov
cwde
lods
add
sahf
mov
ds
je
xchg
call
call
into
cmp
mov
out
xlat
lahf
aaa
(bad)
mov
out
shr
pop
dec
inc
mov
adc
cwde
jge
xor
mov
or
in
lock
mov
je
call
test
and
jbe
sbb
mov
sbb
mov
mov
mov
pop
jnp
in
jo
cwde
pusha
(bad)
call
jne
pusha
mov
nop
rol
cmp
into
pop
test
cmp
mov
adc
mov
mov
or
add
and
mov
xor
xchg
push
xor
daa
jle
mov
mov
sub
jne
and
mov
mov
leave
sti
cmps
sbb
rol
add
idiv
repnz
mov
ins
mov
sub
outs
ins
imul
adc
int3
lea
sbb
adc
push
dec
rol
imul
mov
xchg
and
(bad)
sbb
cwde
jo
push
push
jmp
adc
and
and
int3
(bad)
or
out
and
push
xlat
mov
in
fwait
or
xrelease
push
adc
mov
inc
cmp
xchg
jp
jecxz
and
pop
arpl
mov
in
inc
jg
adc
ret
sub
inc
mov
bound
test
fadd
mov
jne
pusha
inc
xchg
cmp
pusha
dec
imul
mov
xor
repnz
scas
in
cmp
popf
dec
mov
leave
icebp
pop
neg
ins
inc
and
inc
mov
inc
push
scas
or
mov
retf
mov
mov
pinsrw
mov
add
inc
cmp
in
jb
add
js
clc
mov
inc
inc
mov
inc
adc
inc
sub
(bad)
adc
push
xchg
and
xchg
inc
mov
sbb
(bad)
push
call
xchg
je
and
push
lods
or
and
add
stc
push
movs
jb
jmp
pop
jbe
daa
out
call
dec
xor
jbe
and
daa
add
loopne
jbe
movs
add
dec
xlat
daa
pushf
jle
jmp
mov
xchg
dec
xchg
sar
repnz
inc
inc
jbe
data16
push
push
adc
or
sub
xchg
pushf
xchg
inc
push
call
je
add
mov
int3
xchg
add
jle
inc
ror
push
stos
mov
imul
adc
mov
je
or
xor
add
or
and
or
mov
fnsave
test
out
(bad)
or
cmps
xchg
and
pop
cmc
je
outs
ja
stos
lods
push
stc
jnp
push
jo
mov
or
sub
jge
ins
into
xor
xor
sub
push
adc
xor
inc
push
dec
sbb
and
cmps
cmp
add
dec
or
jb
add
add
in
dec
mov
loop
mov
add
punpckhwd
dec
inc
jp
ins
mov
xchg
je
test
hlt
sahf
popa
push
or
or
mov
cmp
fcmovnb
jle
inc
fmul
hlt
mov
sub
xor
ins
lahf
and
mov
jne
imul
pop
or
dec
inc
fadd
fsub
xor
push
sub
mov
nop
fisttp
retf
xchg
aaa
jae
push
sub
retf
imul
fsubr
stos
sub
sub
stos
hlt
add
shr
lods
push
nop
pop
push
or
daa
jae
lock
and
sbb
js
inc
dec
push
xor
jb
sub
shl
aas
sub
imul
and
test
ins
inc
jmp
push
leave
add
xchg
cmp
xchg
and
fcom
add
jo
pop
dec
mov
imul
jns
push
sub
sub
ror
in
and
inc
or
jp
movs
xor
or
dec
outs
adc
das
pop
outs
jg
mov
ss
jg
sbb
xor
call
sbb
cmp
sub
pop
rcr
or
xor
pop
jno
rcr
pop
add
cmps
push
inc
cmp
sub
adc
add
dec
xchg
fisubr
in
(bad)
sbb
mov
xor
add
or
sbb
or
xchg
push
or
(bad)
mov
outs
mov
ja
jo
or
das
inc
(bad)
jne
cmps
and
outs
mov
ror
or
mov
cld
dec
add
add
jecxz
and
jb
lods
cmp
ror
jle
lock
ret
jp
sub
pop
or
sub
ins
sub
scas
fcom
mov
xor
dec
inc
pop
imul
jle
or
pop
dec
rol
mov
dec
or
in
stos
or
dec
dec
adc
xchg
mov
es
cmp
js
pop
inc
and
jbe
ins
fs
out
push
push
shr
xor
or
mov
push
test
hlt
hlt
imul
adc
jl
in
je
inc
mov
or
sub
add
jge
fisttp
call
scas
cmps
dec
adc
imul
int3
dec
pop
aam
call
mov
lea
or
test
sub
push
mov
popa
jge
lods
cmp
adc
cmps
dec
lods
pop
add
das
dec
pop
push
outs
adc
jns
push
pop
adc
push
sub
scas
adc
and
xor
rcr
int
bound
xor
xchg
fsubr
lods
sub
mov
push
push
xchg
rcr
imul
mov
(bad)
shl
adc
and
movs
xchg
ins
inc
xchg
sub
pop
add
and
sbb
sub
sub
push
sub
mov
and
add
and
inc
stos
test
or
test
dec
stos
push
inc
mov
jb
leave
or
or
and
test
sbb
mov
xor
nop
sub
shl
sub
push
push
mov
add
imul
and
or
mov
inc
imul
fistp
rcl
pushf
les
inc
cdq
push
mov
jae
push
sbb
les
popf
inc
add
rcl
mov
cmp
push
or
push
xchg
push
mov
inc
push
out
jge
shl
dec
inc
scas
inc
rcr
jmp
movs
sti
xor
mov
and
cmp
das
arpl
cmp
or
ds
ja
retf
jl
sbb
popa
int3
xor
jp
push
je
ss
cmp
dec
jmp
stc
xor
aaa
sbb
push
std
aas
jo
mov
es
sub
adc
push
ja
pusha
mov
ins
jno
adc
imul
cmp
pop
sar
pop
and
inc
dec
inc
pop
push
loopne
sub
repnz
scas
or
loop
add
movs
fist
lahf
adc
gs
pop
mov
lods
pop
test
imul
outs
das
bound
mov
xor
sub
inc
es
ins
imul
pusha
imul
inc
out
lock
lock
pop
lods
inc
xchg
jnp
movs
xor
cmp
add
arpl
inc
or
or
jo
(bad)
mov
out
loope
ror
mov
aaa
sub
(bad)
(bad)
imul
test
add
outs
or
js
pmulhw
push
push
(bad)
mov
mov
dec
xchg
add
lea
aad
adc
outs
arpl
xchg
cs
xor
push
mov
or
pop
imul
push
pop
jno
add
jne
or
xchg
sub
sub
jns
mov
add
and
stc
xchg
mov
lds
jno
leave
mov
ins
cmp
add
jno
dec
imul
outs
jl
sub
fs
lods
popa
jo
cmp
adc
movs
ins
xor
or
outs
imul
dec
xor
movs
add
or
loopne
dec
pop
push
pop
or
pop
jp
iret
mov
add
mov
outs
mov
mov
mov
pop
cmp
push
cwde
jae
cwde
imul
mov
add
inc
shl
pop
adc
loop
adc
jne
popa
and
cmp
cmps
jno
stos
xor
dec
jne
push
nop
mov
rcl
clc
mov
and
inc
inc
dec
push
clc
mov
sbb
ins
into
ins
lea
mov
push
add
mov
xor
push
lods
fnsave
adc
ret
sub
add
dec
xchg
ss
push
sbb
mov
or
jne
push
loope
cmp
aam
les
mov
adc
or
dec
mov
inc
adc
and
lock
mov
inc
or
xor
stos
jmp
push
cmp
pop
dec
push
pop
dec
clc
pop
and
scas
dec
adc
retf
add
ret
pop
cmp
dec
aas
sub
imul
out
ins
fsubr
dec
sbb
mov
lods
or
outs
mov
int
mov
or
retf
loope
ret
pop
arpl
add
push
das
mov
aas
sub
and
jecxz
inc
out
lahf
in
pop
lahf
sub
je
xor
push
leave
mov
call
inc
or
dec
pop
adc
popa
jnp
mov
push
or
dec
or
sub
gs
cmp
jae
dec
test
adc
inc
pushf
cmp
dec
pop
mov
add
sub
outs
je
inc
dec
inc
dec
clc
or
cmp
mov
data16
adc
adc
sahf
and
iret
push
dec
pusha
ja
(bad)
movs
enter
sub
das
cmp
pop
imul
rcr
xchg
cmps
lods
aas
sub
dec
imul
imul
test
cmp
jge
ins
ficom
jno
cdq
pop
lahf
xor
mov
sbb
aam
pop
inc
mov
sub
call
stos
push
loope
rol
mov
in
push
(bad)
cli
jmp
xor
cmp
and
test
push
inc
mov
popa
push
into
mov
dec
xlat
mov
fild
pop
dec
std
imul
pop
xor
xchg
add
push
pop
jmp
hlt
adc
lea
xor
pop
data16
inc
leave
cmp
or
ret
fdiv
mov
(bad)
mov
daa
fs
movs
fisub
xor
add
push
adc
test
and
movs
frstor
imul
dec
sub
dec
mov
adc
fldcw
and
mov
push
xchg
mov
imul
mov
pop
add
add
popa
add
cmps
icebp
pop
jmp
or
pop
cs
dec
sub
dec
scas
shl
inc
xchg
pop
add
sub
mov
(bad)
(bad)
pop
xor
mov
push
inc
pop
adc
pop
or
mov
mov
sub
cmp
les
add
jge
fimul
test
add
inc
jae
pop
leave
nop
mov
adc
(bad)
test
pop
out
jnp
ja
dec
inc
cs
ror
adc
add
sub
popf
(bad)
data16
push
jne
push
stos
gs
sub
test
arpl
out
not
ins
jae
dec
inc
inc
fst
or
repz
les
jge
push
aam
xchg
sbb
fst
inc
pop
dec
mov
push
adc
call
push
mov
out
mov
in
outs
inc
jo
sub
and
jae
add
dec
pop
cmp
or
cs
and
inc
mov
sub
and
pop
dec
(bad)
add
or
fist
not
pop
sbb
dec
push
or
dec
cmps
sbb
and
mov
add
push
test
xor
push
push
adc
shr
add
sbb
mov
pop
and
ins
or
jmp
dec
fwait
nop
rol
nop
push
or
js
stc
pop
jno
mov
loop
and
pop
ret
and
aad
xchg
pop
dec
aam
sub
jnp
les
aam
into
icebp
fisub
xor
and
mov
sbb
pusha
sbb
call
mov
das
cmp
ror
adc
adc
inc
add
xor
dec
mov
test
dec
ret
ds
lods
push
sar
(bad)
retf
push
mov
xchg
mov
add
add
and
stc
push
xor
aam
mov
inc
lods
adc
inc
dec
push
jb
adc
fldcw
xchg
mov
mov
add
and
pop
sbb
and
push
popa
sbb
jb
pop
mov
(bad)
xchg
gs
xor
xor
pushf
pushf
pushf
pushf
xor
ss
push
xchg
xor
sahf
or
xchg
xchg
xchg
xor
dec
push
mov
jge
jmp
pop
and
ins
xor
mov
xor
movs
fwait
pop
adc
sub
out
sbb
mov
adc
(bad)
mov
push
mov
fsub
sbb
test
int3
push
icebp
push
push
xor
(bad)
into
adc
fs
and
(bad)
xor
std
and
test
sub
pop
dec
dec
mov
fadd
inc
cdq
and
sub
fdiv
adc
fsubr
mov
pop
push
sbb
add
push
xlat
retf
inc
ins
mov
add
ja
aaa
inc
repz
mov
xchg
pop
inc
sbb
(bad)
push
dec
adc
xchg
test
pop
push
test
mov
retf
fcmovu
and
or
test
dec
inc
ins
push
pminub
push
call
push
xor
arpl
jns
ret
xor
cs
mov
push
pop
mov
cwde
lods
and
and
lods
cmps
xchg
jnp
cmps
popw
inc
sbb
rol
xchg
inc
lea
inc
push
mov
test
xchg
push
movs
ins
adc
xor
out
add
pusha
fcom
push
xchg
or
and
push
xor
addr16
dec
xor
pop
push
xor
or
je
push
xor
bound
imul
add
xor
mov
into
xor
xor
lods
or
or
test
push
xor
mov
jmp
push
pop
or
mov
mov
cmp
cmp
sbb
fiadd
enter
or
mov
fwait
push
add
adc
ror
push
adc
sbb
fild
stos
add
arpl
rol
sbb
les
cmp
int3
xlat
pop
outs
push
bound
add
jo
or
and
adc
lock
imul
xchg
dec
cmovbe
adc
pop
mov
xchg
adc
imul
cdq
jecxz
(bad)
outs
sub
sub
and
movs
pop
jo
mov
dec
fwait
and
inc
mov
in
ss
(bad)
das
pop
cmp
sub
popa
jb
adc
dec
cmps
sbb
and
and
inc
push
adc
sgdtd
adc
mov
push
cmc
sbb
push
xor
mov
adc
cmp
fild
test
test
imul
sbb
mov
sbb
outs
int
pushf
xor
call
rol
sbb
mov
xchg
outs
or
and
cs
outs
dec
js
pusha
push
mov
inc
and
xchg
test
sbb
shr
imul
icebp
fwait
jae
dec
fs
pop
daa
inc
and
push
or
popa
sbb
ja
js
test
into
add
sub
or
pusha
outs
adc
js
test
push
ins
sub
sub
pop
adc
sub
cmp
xchg
les
xchg
add
push
or
ja
or
or
xor
and
or
lods
add
movs
rcl
adc
push
mov
stos
or
fldenv
inc
mov
adc
adc
stos
sub
imul
push
pop
adc
jmp
nop
xchg
push
aam
lea
inc
push
push
jne
sub
ficom
xor
or
adc
movs
test
jo
nop
mov
and
pop
mov
mov
pop
dec
add
push
inc
mov
inc
loopne
mov
jle
pop
sbb
dec
push
pusha
imul
adc
sbb
int
jnp
xor
ins
or
inc
fld
cmp
test
jge
push
xlat
add
or
and
and
xchg
icebp
out
imul
or
push
mov
aaa
xor
dec
mov
sub
cmp
arpl
popa
adc
nop
push
push
push
sub
pop
fld
aaa
push
or
push
movs
xor
mov
push
mov
das
or
outs
mov
enter
in
inc
sbb
pop
adc
sbb
movs
mov
das
ror
outs
retf
retf
dec
pop
ds
mov
sub
mov
sub
es
ins
ja
mov
pop
inc
dec
push
inc
ins
dec
aam
push
or
and
or
test
adc
mov
add
push
push
aam
push
aam
mov
push
dec
ins
scas
adc
and
adc
or
lds
nop
pop
inc
adc
add
movs
or
xor
push
les
pop
pushf
test
sti
xchg
jge
lds
adc
or
cmp
and
test
(bad)
jle
xor
xor
nop
mov
and
nop
or
iret
xor
sbb
adc
stos
bound
cmp
mov
sbb
inc
rcl
lea
dec
or
(bad)
loop
gs
sbb
das
mov
daa
in
mov
mov
add
stos
mov
leave
sub
pop
mov
sub
pop
fs
out
mov
rol
adc
dec
outs
paddq
xor
aas
mov
and
mov
iret
push
daa
inc
inc
imul
dec
fwait
cmp
nop
(bad)
xchg
or
in
push
cmp
out
(bad)
sbb
rcr
mov
lods
mov
mov
outs
nop
cmp
outs
nop
mov
cmp
lea
sub
xor
inc
pop
inc
xchg
xchg
mov
fistp
dec
push
mov
rcl
push
pop
mov
sbb
and
frstor
xor
jae
gs
push
and
dec
lods
add
cmp
pop
adc
add
add
cwde
inc
jg
imul
das
jl
sub
mov
jmp
gs
rol
add
dec
inc
bound
int3
dec
les
pop
mov
inc
mov
add
lods
adc
adc
and
add
(bad)
dec
into
aad
or
mov
xlat
adc
push
imul
sub
adc
out
xchg
hlt
inc
fwait
fs
nop
adc
sub
and
add
add
jmp
push
pop
pop
fsubr
cdq
pop
lods
sbb
xchg
mov
outs
(bad)
add
jl
add
test
or
add
movs
sahf
jbe
lods
aam
mov
jge
xor
test
lds
cmp
mov
jne
jo
arpl
shl
(bad)
or
add
and
inc
xchg
stos
inc
retf
and
js
xor
sbb
mov
inc
loope
or
dec
sub
outs
aam
pop
call
imul
retf
add
imul
jmp
pusha
call
xor
push
sbb
xor
sbb
xchg
aad
outs
mov
mov
jmpw
test
jnp
ret
xchg
mov
dec
lods
adc
jmp
dec
and
sub
aam
or
push
add
sub
loope
sbb
sbb
adc
and
sbb
dec
es
test
xor
pop
lock
sub
inc
inc
lahf
jge
add
daa
ins
xchg
inc
add
adc
mov
mov
add
inc
jmp
daa
fbld
loopne
ror
jge
ror
lea
push
mov
movs
mov
dec
mov
popa
pop
sub
sub
mov
mov
push
push
in
push
js
and
mul
xor
dec
sub
mov
and
aas
pop
push
inc
dec
push
or
adc
xchg
mov
cmp
mov
clc
push
cs
inc
js
ficom
sub
adc
mov
mov
add
shr
add
cmp
sub
jmp
inc
or
mov
sub
and
into
adc
sub
inc
jl
jecxz
sahf
clc
pop
das
dec
sub
fs
fwait
xchg
or
sbb
test
scas
rol
adc
fimul
sub
xchg
jmp
dec
push
in
test
inc
movs
sbb
movs
inc
fnstenv
xchg
dec
lea
cmp
add
call
out
sahf
out
jne
popa
bound
out
sahf
fs
ins
xor
test
xor
ss
cmp
les
iret
repz
js
jns
add
jns
js
daa
cmp
fist
pop
enter
cmp
movntps
sub
pop
mov
add
or
(bad)
je
cmp
pop
add
or
mov
and
ja
and
xor
and
and
add
or
dec
in
pop
adc
ret
int3
push
ss
fidivr
jl
and
pop
and
sbb
ds
mov
outs
or
add
(bad)
xchg
lock
bsf
mov
inc
mov
jo
jne
sahf
out
xor
push
pop
arpl
out
push
js
add
or
pop
or
pop
adc
hlt
and
add
es
gs
test
pop
es
repz
mov
shl
mov
xchg
xor
inc
je
rcl
jo
in
mov
xor
mov
popa
dec
jno
inc
add
fwait
(bad)
shr
loop
dec
add
popa
and
iret
movs
or
das
mov
(bad)
mov
mov
push
fdiv
pop
pop
inc
inc
dec
or
loop
movs
inc
in
mov
dec
movs
inc
xor
and
or
outs
data16
adc
sub
scas
outs
push
sub
dec
mov
dec
or
imul
out
add
icebp
mov
xchg
inc
shl
mov
rcr
imul
mov
xor
fdiv
sub
dec
cmp
sub
dec
dec
mov
sub
sub
aaa
sub
ins
mov
mov
add
imul
sub
pop
sbb
test
imul
or
or
and
adc
mov
pop
add
add
and
or
lea
in
test
xchg
in
push
ds
jnp
jo
sub
test
mov
mov
movs
sbb
icebp
and
xor
add
add
push
popa
push
push
inc
sub
push
adc
adc
mov
add
arpl
fisub
lods
and
mov
popf
inc
and
jbe
stos
in
mov
mov
test
dec
cmp
mov
pop
test
cmp
ret
outs
fisub
pop
lds
sub
data16
arpl
cmp
xor
(bad)
dec
xchg
rol
xor
add
es
cmc
sub
movs
ret
and
repnz
inc
inc
mov
mov
sbb
and
arpl
or
into
pop
pop
xchg
and
aam
call
dec
adc
inc
inc
inc
dec
dec
and
inc
or
sbb
lods
sub
xor
cmc
push
pop
inc
inc
xor
and
loope
mov
mov
loopne
dec
inc
push
fmul
cdq
dec
xchg
push
mov
push
jl
push
cmp
in
add
push
adc
aaa
jns
jns
mov
add
push
xor
aas
sahf
out
sahf
inc
dec
push
pop
bound
sahf
out
jo
jg
mov
jns
out
mov
out
sahf
(bad)
call
(bad)
jl
mov
test
iret
repz
dec
dec
push
pop
imul
cmp
jns
xchg
xchg
xor
aam
dec
and
cmp
outs
xor
in
and
or
jne
xchg
xchg
lock
movs
or
push
arpl
sbb
aam
jge
sub
jle
and
add
add
(bad)
call
jecxz
jecxz
or
sub
add
xchg
add
xor
les
xchg
cmp
mov
or
sub
inc
rol
sub
rcr
popa
mov
cmp
scas
outs
add
pop
fucomp
inc
lods
nop
mov
pop
pop
loopne
pop
jmp
and
repz
das
xor
inc
pushf
xor
rcl
sub
gs
pop
fdivr
out
adc
jns
jp
inc
xor
xor
add
cmp
cs
das
push
xor
mov
xchg
add
sub
add
test
mov
cmc
xchg
and
mov
sub
pusha
jmp
or
push
retf
and
mov
sbb
and
jp
test
shl
ror
mov
and
ror
inc
(bad)
cmp
push
adc
xor
rol
sbb
cmp
mov
adc
cdq
push
loope
stos
and
push
lahf
enter
pop
and
fdivr
sub
ja
and
popf
add
mov
(bad)
cs
mov
sub
ins
ret
or
add
stc
jae
pop
inc
ins
adc
iret
rol
pop
or
add
xchg
jo
push
sub
inc
test
adc
xchg
popa
adc
dec
cs
and
or
cmp
sti
sbb
rol
jmp
or
fdivr
xor
js
aam
sbb
jno
jo
cs
sbb
add
lods
lock
stos
mov
fmul
loopne
adc
inc
sub
mov
add
or
pop
mov
or
js
in
mov
and
lea
dec
mov
push
mov
rcr
sbb
mov
das
jb
and
inc
cmp
inc
shl
mov
cmp
aaa
adc
xchg
push
loope
add
sub
addr16
inc
mov
jae
cmp
jg
mov
aaa
adc
icebp
and
adc
out
xor
ror
pushf
jae
sbb
aam
sub
and
xchg
sub
test
test
sbb
adc
jbe
arpl
mov
daa
gs
inc
push
cmp
std
sbb
or
fwait
add
ror
dec
add
add
add
add
stc
int
sti
xor
inc
xor
push
xor
add
dec
inc
fwait
int
mov
inc
dec
inc
dec
inc
dec
dec
inc
xor
cmp
push
arpl
xor
ins
dec
add
(bad)
popw
push
inc
jmp
xor
push
or
fidiv
xchg
cvttps2pi
jo
mov
push
or
pop
mov
add
xchg
inc
sbb
jo
lea
ins
jmp
mov
daa
das
dec
or
lahf
pop
das
inc
add
ins
out
outs
cwde
or
mov
and
pop
jne
hlt
xor
sbb
sub
test
mov
mov
mov
inc
loopne
and
pop
push
add
xor
lea
dec
leave
xor
push
mov
ret
add
xor
leave
cmps
mov
xchg
dec
arpl
iret
sub
or
xlat
pop
jge
sbb
dec
dec
inc
pop
(bad)
in
or
pop
(bad)
in
add
in
js
in
push
icebp
xor
cmp
jecxz
cmp
bound
xchg
xor
adc
cmp
xor
sub
scas
pop
sub
inc
inc
mov
push
iret
and
jne
jmp
in
and
test
or
pusha
lock
sbb
imul
xor
lahf
nop
jne
sbb
imul
add
mov
or
lahf
pop
mov
pop
and
call
jmp
shl
add
imul
and
adc
pop
ins
lea
fst
add
add
in
pop
out
call
repnz
jg
pop
pop
outs
punpckhwd
xchg
xchg
pop
dec
jmp
(bad)
jbe
popa
out
(bad)
outs
in
popf
dec
ds
mov
jmp
pop
out
aaa
sti
mov
in
mov
es
pop
js
outs
or
mov
inc
outs
sbb
xchg
dec
jnp
mov
sbb
out
pop
add
push
jo
int
jns
dec
xor
or
scas
in
iret
repz
mov
jns
rep
pop
in
dec
inc
xor
sbb
cmps
stc
cmp
hlt
lods
loopne
push
mov
movs
nop
jl
push
cmps
stc
cmp
inc
sub
lods
scas
add
iret
jnp
lock
push
fmul
push
mov
aam
repz
imul
sub
in
stos
fcomp
mov
mov
sahf
out
dec
cmp
cld
stos
repz
shr
aam
lods
cwde
iret
repz
test
dec
xor
mov
clc
test
repz
test
push
sub
into
pop
add
(bad)
sbb
ins
repz
fimul
(bad)
push
push
sti
xor
stc
std
mov
outs
push
ficom
dec
fisttp
cmp
cmps
hlt
cmps
push
mov
daa
int
ror
punpckhdq
dec
push
jo
ror
pop
(bad)
enter
jg
ins
jns
int
xor
or
mov
adc
mov
fwait
int
sbb
adc
sub
test
cmp
lea
xchg
movs
or
adc
or
out
push
and
push
or
jnp
fisttp
push
dec
mov
push
push
fs
cmp
sbb
mov
and
test
sbb
adc
ins
ss
sbb
adc
fwait
daa
int
push
sbb
dec
push
bound
mov
and
imul
fistp
jmp
inc
and
out
pop
outs
dec
cmp
xor
pop
push
cwde
sbb
es
mov
dec
loop
outs
lahf
out
sbb
retf
jmp
add
ins
ss
cmp
pop
and
and
cmc
enter
inc
push
pop
push
adc
xor
enter
inc
push
(bad)
es
in
int
fwait
and
daa
xchg
in
xor
dec
daa
iret
jae
xor
mov
and
push
and
xor
fld
pop
cmp
pop
imul
fstp
sub
es
jbe
fmul
fst
and
out
out
repz
dec
add
pop
dec
push
mov
aaa
ret
jbe
push
xchg
push
mov
addr16
fist
js
enter
iret
popf
nop
inc
lahf
out
and
jge
cwde
mov
mov
jbe
ds
push
inc
paddd
pop
xchg
adc
add
enter
push
sub
aaa
jne
push
pop
in
sbb
push
push
je
(bad)
fsub
xchg
dec
dec
lock
push
mov
jb
mov
ins
(bad)
ss
aaa
aam
dec
push
ja
fnstcw
out
mov
es
repz
ds
push
ins
je
and
out
cmps
addr16
gs
sahf
imul
push
int3
es
dec
xlat
jmp
pop
cmp
pusha
arpl
outs
push
scas
addr16
es
dec
add
mov
sbb
jns
movs
jmp
xchg
push
mov
idiv
mov
cdq
push
dec
not
push
jns
div
pop
addr16
and
inc
cmc
xchg
inc
push
jge
lds
jge
out
ds
push
pop
(bad)
out
sbb
lock
ds
mul
ret
test
jl
fwait
push
hlt
jl
int
jae
into
aas
repnz
inc
inc
cli
inc
sbb
cmp
inc
ss
cmp
jge
pop
inc
push
ja
push
push
dec
xor
and
neg
mov
mov
pop
dec
ss
mov
(bad)
xor
mov
fs
fisttp
dec
pop
and
xor
retf
iret
jnp
push
dec
cmp
pop
es
repz
je
push
fldcw
jnp
fwait
in
scas
dec
sahf
dec
dec
pop
xor
push
icebp
mov
sahf
push
sub
repnz
xlat
xchg
cmps
and
rcr
(bad)
xchg
push
enter
mov
les
inc
mov
ins
push
cmps
push
mov
aad
inc
mov
push
in
adc
je
push
push
xor
hlt
jns
mov
xor
sbb
adc
das
lock
stc
dec
cmps
inc
xchg
pop
mov
jnp
dec
adc
cmps
lds
dec
(bad)
dec
dec
push
xor
xchg
imul
push
cpuid
adc
nop
pop
fsubr
(bad)
(bad)
(bad)
jmp
adc
lahf
cli
mov
fcom
sahf
jl
cwde
in
aaa
jg
sar
out
enter
in
out
(bad)
(bad)
(bad)
push
js
xor
loop
mov
jge
dec
push
fucom
fdivr
lock
(bad)
(bad)
jmp
and
xor
loopne
mov
sub
test
mov
and
jmp
inc
or
dec
in
fxch
jmp
or
xor
fld
mov
or
(bad)
fdiv
(bad)
call
sub
jns
push
sti
cli
cmps
bound
cdq
adc
mov
div
xchg
into
mov
pop
out
inc
or
imul
test
ds
js
int3
pushf
push
(bad)
(bad)
(bad)
inc
push
sub
repz
adc
test
push
cld
push
jp
retf
fs
(bad)
(bad)
jmp
aaa
aas
xor
arpl
jns
mov
mov
pop
not
mov
xchg
mov
aas
stc
fnsave
ret
push
or
sbb
cmp
jge
(bad)
push
cld
dec
scas
pop
nop
cmps
jge
int3
out
sub
pop
pop
mov
push
shl
fs
call
(bad)
and
js
retf
es
(bad)
(bad)
(bad)
sti
sbb
xchg
adc
xor
push
neg
xchg
pop
or
imul
(bad)
jg
dec
cdq
sbb
cwde
pushf
cmp
int3
xchg
in
adc
adc
popa
cli
add
call
call
cwde
movs
xchg
hlt
ror
or
jmp
(bad)
shr
cmp
inc
ror
dec
pop
fist
push
call
xor
test
push
pop
dec
pushf
dec
or
fstp
jno
dec
out
(bad)
(bad)
(bad)
jmp
or
das
push
stos
mov
or
xor
loopne
repz
call
loopne
push
sub
mov
adc
or
(bad)
(bad)
(bad)
push
cmp
lds
dec
cmc
js
mov
push
ds
ficom
movs
(bad)
(bad)
(bad)
call
(bad)
in
pop
aaa
add
xchg
or
add
mov
xor
pop
(bad)
adc
dec
xor
lock
bound
cmovge
(bad)
call
xchg
and
or
mov
int
pop
ss
cmp
or
jg
shl
int
ja
push
lods
lock
or
(bad)
(bad)
dec
fsub
shr
fadd
aaa
repz
cdq
dec
hlt
popa
push
cli
fwait
jmp
or
(bad)
(bad)
jg
xor
in
hlt
mov
inc
mov
hlt
and
xor
ror
iret
(bad)
cmps
(bad)
(bad)
(bad)
call
cwde
mov
jo
push
or
mov
(bad)
std
inc
std
neg
or
cmp
jp
jae
mov
and
mov
xchg
mov
test
lods
sub
push
jmp
mov
outs
ss
pop
mov
ror
push
cmp
dec
pop
fidivr
cld
dec
jmp
jmp
cmp
(bad)
popa
sub
mov
bound
outs
and
mov
es
jb
fcmovb
add
and
pop
cld
(bad)
push
jo
mov
(bad)
sahf
and
cdq
add
and
cld
aas
cld
inc
push
stos
call
stos
push
pop
push
xchg
xor
push
pop
sahf
xor
xchg
pop
in
in
or
clc
jmp
mov
and
pushf
xchg
or
push
idiv
jmp
push
mov
or
ins
pop
nop
jnp
std
dec
and
(bad)
dec
cmc
mov
xchg
push
jle
xchg
cmp
and
push
int3
in
(bad)
(bad)
jmp
and
push
popf
mov
mov
and
pop
pop
hlt
enter
int
push
cld
inc
mov
sub
cmps
push
inc
dec
push
shl
gs
in
pop
inc
in
(bad)
call
pop
xchg
pushf
sub
lods
and
jbe
nop
jns
sbb
mov
jae
retf
(bad)
mov
daa
add
fsub
adc
outs
xor
mov
mov
into
mov
mov
pop
mov
pop
inc
ja
push
(bad)
jmp
fidivr
lods
dec
fbld
int3
jg
mov
stc
xor
scas
(bad)
sti
(bad)
mov
dec
jo
out
test
or
cmp
mov
movs
dec
(bad)
pop
loopne
add
ret
xor
jle
xlat
adc
test
(bad)
cld
jmp
dec
push
jp
pusha
or
mov
shl
push
jns
dec
mov
daa
(bad)
clc
push
push
mov
test
retf
push
sar
add
add
fild
pop
sub
lods
xor
stos
xchg
add
inc
jmp
stos
sbb
push
ret
pop
test
dec
mov
(bad)
cmp
(bad)
call
in
repz
pusha
inc
mov
push
loopne
push
(bad)
xchg
xchg
dec
(bad)
pop
(bad)
(bad)
(bad)
fbstp
leave
jle
jo
paddd
in
add
jb
inc
pop
xchg
mov
retf
xor
popf
xor
push
fidiv
jecxz
add
clc
leave
xchg
mov
not
mov
add
push
sbb
sahf
out
movs
stos
mov
lahf
out
sahf
retf
jmp
add
add
xor
add
mov
jl
out
out
push
dec
xor
out
repz
sar
outs
stos
ins
push
jl
dec
inc
push
push
mov
imul
mov
mov
(bad)
inc
jne
in
jecxz
or
ja
inc
popf
push
fstp
jecxz
pop
mov
ror
add
sahf
test
jg
mov
sahf
add
es
(bad)
mov
mov
jno
mov
mul
mov
jg
(bad)
(bad)
jnp
add
adc
not
add
cmc
sbb
shl
xchg
idiv
ins
pop
icebp
adc
nop
or
push
mov
(bad)
(bad)
(bad)
(bad)
jns
fsub
sar
pop
fcom
fisubr
es
dec
xor
(bad)
(bad)
(bad)
in
sbb
loope
dec
fild
add
rcl
dec
add
xchg
xchg
and
arpl
mov
(bad)
(bad)
out
repnz
dec
mov
repnz
or
xor
mov
ja
adc
sub
push
adc
adc
(bad)
jge
sbb
add
popa
sahf
pop
fcom
into
ficom
and
(bad)
(bad)
push
jmp
xor
(bad)
gs
xchg
inc
(bad)
sbb
loopne
ds
out
cli
(bad)
jmp
inc
pop
pop
mov
leave
mov
imul
sbb
(bad)
out
cs
mov
popa
shl
(bad)
pop
arpl
and
inc
xor
scas
or
cmp
or
mov
out
aad
cdq
ret
or
mov
lahf
or
loope
fisttp
rcl
xor
std
adc
fwait
sahf
imul
out
cmp
out
push
jnp
neg
push
out
call
iret
ret
xchg
push
cmovb
icebp
sahf
or
pop
es
push
mov
xor
jne
cld
push
push
ficomp
repz
push
xor
push
and
retf
mov
ds
xor
jnp
inc
cs
xor
fnstcw
je
push
xor
imul
push
cmp
xor
push
xlat
imul
pop
push
dec
cmp
sar
or
mov
in
sar
pop
cmp
push
xchg
sub
mov
(bad)
xor
fwait
sub
cmps
jl
cmps
stc
sub
cmp
sar
ret
lahf
out
ror
paddq
shr
(bad)
push
jmp
fcom
ins
fist
fild
inc
jl
int
dec
push
jb
inc
pop
push
jl
mov
mov
je
pop
adc
dec
repz
push
push
fsub
sar
imul
fnstcw
xlat
mov
sbb
repz
mov
sbb
push
push
in
sbb
jnp
pop
sbb
push
in
sar
dec
jge
or
push
push
push
fidiv
sbb
imul
jl
jle
and
inc
inc
repz
aam
inc
in
fnstcw
int
and
or
and
cmps
stc
mov
adc
and
shr
dec
cmp
and
out
imul
sbb
cmp
xor
out
push
cmp
daa
sub
call
cmp
cmp
out
pop
sub
mov
fidivr
cs
pop
sub
or
dec
mov
fiadd
arpl
xchg
inc
jl
mov
push
sbb
jbe
push
push
push
iret
cmp
bound
out
inc
fistp
(bad)
push
dec
push
and
sahf
ja
ror
cs
push
push
cmp
ds
sar
fs
das
xor
ins
aas
retf
cmp
shl
enter
sub
cmp
aas
inc
dec
push
imul
cmps
rcl
push
inc
pop
inc
movs
test
inc
jp
adc
dec
dec
mov
dec
rcl
call
xchg
cmps
push
mov
mov
movs
ret
push
retf
push
call
push
xor
cmps
shr
pop
repnz
cli
sub
mov
pop
add
or
push
imul
xchg
cmps
rcl
pusha
xor
movs
test
arpl
push
imul
nop
dec
test
les
adc
in
bound
mov
xchg
xor
xor
xor
xor
stc
sbb
add
mov
shl
mov
aam
ret
jb
test
sbb
imul
push
pusha
jmp
shl
dec
scas
xor
test
je
outs
jnp
sbb
inc
jle
add
icebp
xor
test
std
push
js
xor
add
mov
add
push
or
lahf
aaa
cdq
lods
test
adc
adc
adc
repz
push
repz
pushf
stos
add
add
mov
push
loopne
xchg
pop
lea
out
mov
jmp
pause
mov
out
sahf
cmps
inc
jne
into
jmp
repz
std
sbb
cmp
repz
mov
loope
jl
cmps
stc
adc
mov
iret
rcr
cmp
lods
sahf
out
out
pop
mov
push
jno
int
dec
repz
ss
ins
mov
stc
adc
imul
gs
adc
test
icebp
popa
xchg
test
(bad)
fmul
xchg
inc
dec
iret
repz
pop
jo
sahf
shr
out
add
push
mov
add
add
add
pop
(bad)
push
dec
stos
add
pop
in
mov
push
movd
mov
xor
push
push
or
bound
repnz
inc
xchg
mov
int3
cmp
data16
aaa
add
mov
dec
lock
pop
xor
sbb
or
cdq
push
dec
xor
add
xor
iret
ja
dec
movs
dec
jne
js
fldcw
push
mov
cs
jmp
add
in
retf
ins
inc
push
sbb
ins
movs
inc
cmp
scas
inc
fmul
mov
mov
jae
js
(bad)
test
fs
int
ss
scas
mov
lock
inc
test
fldcw
adc
js
popf
cmp
dec
and
inc
ret
add
cld
cmp
in
int
cmp
fs
adc
mov
cld
ror
xlat
loopne
aas
inc
or
sub
ss
call
mov
mov
pushf
xor
mov
cli
into
xor
add
mov
call
or
push
aam
push
or
sub
or
mov
out
popf
and
or
sahf
xchg
fcom
jne
jmp
jge
pop
mov
rcr
mov
and
mov
mov
sbb
lock
adc
jecxz
les
add
adc
pop
out
scas
push
cmps
and
jmp
and
(bad)
(bad)
jg
mov
mov
mov
sar
mov
repnz
retf
(bad)
fcomp
(bad)
(bad)
mov
xlat
(bad)
retf
mov
retf
ret
test
icebp
jmp
(bad)
(bad)
(bad)
mov
out
mov
loop
out
aam
cmps
mov
out
out
jecxz
sbb
pop
dec
jbe
pop
push
(bad)
(bad)
(bad)
call
add
pop
or
inc
add
inc
add
dec
or
add
jae
das
ds
(bad)
(bad)
(bad)
(bad)
cmp
and
cmp
and
aas
sub
and
and
bound
pop
push
push
dec
pop
adc
(bad)
(bad)
(bad)
call
sbb
add
rsqrtps
dec
inc
inc
dec
pop
or
push
inc
push
or
jo
imul
(bad)
(bad)
(bad)
jns
addr16
je
jg
jle
imul
imul
sub
(bad)
sahf
xchg
xchg
lea
nop
test
(bad)
nop
call
(bad)
(bad)
fwait
enter
mov
aam
(bad)
scas
mov
mov
(bad)
(bad)
push
mov
mov
out
retf
iret
mov
(bad)
(bad)
pushf
mov
(bad)
(bad)
(bad)
rcl
sbb
(bad)
fimul
retf
les
jmp
cld
jmp
(bad)
(bad)
push
cld
(bad)
loop
mov
out
cli
mov
mul
adc
pop
push
push
or
add
sbb
pop
or
add
or
add
or
or
xor
cmp
sub
jnp
jge
and
sub
inc
inc
sub
and
and
(bad)
(bad)
(bad)
call
adc
push
pop
dec
xor
pop
inc
pop
push
nop
dec
inc
pop
and
mov
sub
jb
jle
imul
jo
jnp
jmp
sbb
sub
or
imul
cdq
fdivrp
mov
mov
mov
call
mov
rol
mov
(bad)
push
test
mov
repz
movs
cmps
mov
mov
mov
in
mov
pop
icebp
scas
stos
mov
iret
(bad)
(bad)
rcl
(bad)
xchg
fwait
nop
std
retf
loopne
xchg
adc
fcomp
mov
leave
outs
add
int
jmp
stc
jmp
add
mov
mov
(bad)
std
(bad)
lods
int
test
lock
pop
(bad)
(bad)
(bad)
call
pop
push
push
nop
pop
push
adc
push
push
sbb
sbb
inc
and
xor
pop
add
(bad)
push
cmp
jp
jbe
pop
xor
cmp
sub
and
xor
popa
and
(bad)
push
dec
pop
dec
pop
sbb
adc
inc
pop
dec
inc
inc
hlt
inc
pop
adc
dec
inc
dec
push
loopne
js
cmp
adc
adc
pop
sbb
bound
pop
(bad)
jg
add
push
jae
mov
fst
clc
(bad)
aad
pushf
rol
test
mov
dec
lock
mov
mov
(bad)
mov
les
(bad)
mov
out
fwait
scas
cmps
scas
mov
ror
enter
(bad)
xlat
(bad)
(bad)
(bad)
call
rcr
pop
retf
retf
retf
ror
(bad)
lds
out
mov
in
idiv
mov
or
loop
clc
xchg
in
add
in
in
push
sbb
push
sbb
adc
add
dec
dec
sub
or
jg
or
into
pop
pop
inc
ja
cmp
jp
ja
xor
xor
(bad)
(bad)
(bad)
pusha
aaa
jbe
or
aas
and
jp
jno
pop
pop
xor
push
pop
sbb
adc
pop
pop
or
mov
mov
or
adc
inc
add
jg
inc
inc
bound
ins
cmp
xor
cmp
jmp
sub
(bad)
(bad)
fbld
lea
fwait
cwde
cwde
xchg
popf
xchg
xchg
cwde
pushf
mov
ret
loop
loopne
test
jmp
lock
test
lods
cmc
movs
mov
mov
test
mov
movs
test
lods
cmps
mov
in
xchg
xlat
(bad)
sub
outs
inc
enter
rcl
ret
mov
mov
leave
retf
add
or
sti
mov
mov
push
in
mov
idiv
loope
lods
mov
stos
hlt
jmp
jmp
or
push
push
sbb
add
push
inc
inc
add
add
add
(bad)
jg
dec
movntps
cs
or
jp
and
das
and
das
and
(bad)
sub
bound
push
push
dec
adc
pop
sbb
cld
sbb
jmp
(bad)
mov
inc
inc
dec
or
or
push
rcpps
push
jae
jbe
fs
(bad)
dec
jg
push
popa
pusha
push
bound
call
call
xchg
xchg
cwde
sbb
add
add
stos
mov
mov
stc
mov
mov
scas
stos
mov
icebp
sar
leave
mov
fcom
rcl
fnstsw
(bad)
(bad)
(bad)
fist
mov
fadd
retf
in
not
repnz
mov
loope
loope
(bad)
fisttp
in
in
cli
loop
jecxz
in
repnz
jmp
push
adc
sbb
pop
adc
push
pop
sbb
sbb
or
inc
push
or
loopne
out
xor
push
or
jl
es
cmp
(bad)
and
jmp
and
imul
xor
dec
push
pop
dec
pop
sbb
pop
push
pop
pop
inc
dec
stc
(bad)
(bad)
inc
dec
dec
or
inc
inc
push
or
ins
xor
jl
sbb
jl
mov
jle
and
out
movs
test
fst
xlat
sub
dec
adc
cld
ins
(bad)
out
mov
je
cmovbe
push
add
dec
add
ins
fwait
or
and
sar
push
sti
add
rep
mov
xchg
dec
sar
outs
out
test
push
je
cmovge
dec
and
mov
mov
inc
out
mov
lock
or
nop
add
pop
add
mov
fsub
mov
and
pop
push
adc
xor
ds
xchg
mov
cmps
mov
enter
mov
mov
shl
lock
mov
and
cs
mov
pop
add
mov
mov
movs
jg
xchg
sub
jnp
ins
in
pop
mov
pop
xor
fisttp
inc
outs
dec
popa
xor
push
adc
lock
mov
out
out
or
enter
xchg
xchg
or
sbb
adc
and
(bad)
leave
pop
and
test
or
pop
cli
sub
loope
mov
push
fisubr
fisub
mov
xlat
jne
push
in
dec
jecxz
push
shl
adc
dec
fnstsw
push
push
mov
hlt
push
std
cmp
mov
inc
lahf
ret
pop
jb
cmp
or
(bad)
push
add
pop
xor
jbe
out
ficom
inc
adc
and
ret
repnz
mov
es
lds
shl
fnstcw
push
push
or
push
add
add
add
push
pop
bound
jo
das
outs
mov
(bad)
stos
jmp
add
xchg
rol
push
sbb
pushw
push
sbb
pop
push
inc
mov
pop
mov
pop
pop
pop
push
add
in
or
call
fstp
or
call
xor
jmp
mov
mov
lods
cmp
mov
je
push
mov
pusha
popf
aam
cmp
fs
xchg
pusha
push
add
and
inc
sahf
adc
mov
test
imul
adc
adc
test
and
nop
hlt
inc
pop
movs
or
push
mov
xchg
xchg
cmps
dec
ss
aam
sub
js
out
xchg
movs
aad
inc
stos
add
mov
movs
or
pusha
add
push
inc
adc
jb
mov
push
add
scas
neg
mov
int
adc
add
leave
fidiv
in
xor
push
repz
add
xchg
add
dec
movs
mov
add
adc
fiadd
cmp
ds
add
push
mov
or
data16
arpl
(bad)
call
jns
push
and
mov
pop
or
out
call
addr16
and
data16
addr16
addr16
add
mul
add
jbe
loopne
adc
outs
outs
push
icebp
mov
sbb
dec
mul
mov
ror
repz
cmp
std
mov
push
ds
je
mov
add
add
push
shld
or
out
dec
in
or
inc
or
add
xchg
mov
test
aas
mov
xchg
mov
push
cmp
mov
xchg
add
mov
les
mov
mov
iret
fimul
mov
mov
xor
inc
xor
mov
popa
test
sti
ins
push
ins
mov
sub
movs
add
sbb
cmps
add
ror
jo
sar
retf
push
or
ins
fisubr
cdq
retf
cmp
ret
adc
adc
icebp
cmps
call
add
push
pop
call
pop
pop
ret
fld
pop
cs
adc
cmp
or
sbb
mov
fld
sub
or
xor
int
sub
dec
cmp
adc
pushf
lock
test
or
xchg
push
cmps
mov
push
add
pop
movs
add
stos
push
shl
repz
(bad)
(bad)
sub
inc
or
sbb
cmp
sbb
jb
call
xchg
data16
or
xchg
or
ret
pushf
repz
dec
jnp
int
push
and
(bad)
jb
rep
fwait
mov
lds
add
jno
cmp
aas
mov
adc
ss
mov
out
or
pop
call
fcomp
in
or
dec
jmp
enter
outs
push
sub
push
call
dec
xchg
ror
outs
inc
mov
test
lea
push
(bad)
movs
retf
ret
mov
push
loop
mov
or
clc
adc
ins
inc
dec
pushf
pop
jmp
jbe
imul
push
cmps
pop
inc
or
mov
cdq
and
loopne
loopne
push
pop
xor
fs
mov
fucomip
shl
add
or
or
mov
js
enter
ret
sbb
cmp
mov
data16
mov
lock
cli
ins
dec
call
push
pop
loopne
test
clc
std
dec
jbe
loope
pop
pop
iret
iret
pop
shr
jmp
icebp
(bad)
or
inc
inc
sbb
ss
push
es
das
push
dec
sub
push
cs
retf
pop
aaa
add
jmp
scas
cdq
retf
add
mov
mov
add
call
call
xlat
ss
sbb
test
stc
mov
push
jmp
cmps
adc
fistp
add
sbb
mov
mov
dec
push
jg
stos
jmp
push
scas
jge
sub
mov
cld
ficom
fwait
jmp
fdiv
faddp
xchg
fmul
cmp
movs
add
pop
sbb
xor
sub
push
rcl
retf
ror
mov
jne
pop
mov
call
mul
push
sub
mov
mov
xchg
add
add
dec
add
jmp
and
neg
or
(bad)
pusha
lock
pop
aam
or
icebp
imul
push
and
and
jecxz
push
push
push
push
push
or
mov
das
sbb
add
adc
cld
call
div
loope
mov
fst
xor
lock
add
sti
sar
imul
fcomp
pop
and
add
inc
loop
std
cmps
inc
mov
sbb
shr
fs
gs
mov
cmp
daa
cmp
jle
cmps
sti
movs
mov
jmp
nop
pop
rol
das
push
push
stos
jnp
in
bound
mov
pop
push
ds
pop
sub
push
pop
dec
(bad)
jo
cdq
inc
fisttp
push
adc
mov
ss
leave
(bad)
jno
push
cmp
cmp
mov
repnz
dec
cmp
ror
test
bound
or
inc
mov
ins
xor
or
jno
jnp
rol
lock
daa
or
(bad)
cmp
xchg
push
adc
adc
std
popa
das
pop
mul
into
ds
clc
icebp
call
jecxz
retf
and
stos
loopne
in
pusha
or
push
jmp
fsubr
les
mov
add
ret
mov
push
mov
mov
packuswb
leave
(bad)
ja
bound
mov
test
lock
and
ja
sar
inc
pop
pop
sub
das
ja
mov
in
movs
pusha
addr16
add
movs
mov
xor
jge
push
scas
or
push
jp
pop
and
add
out
mov
into
shl
inc
add
inc
adc
pop
mov
loopne
scas
or
mov
or
mov
in
outs
push
adc
(bad)
mov
push
inc
les
mov
dec
call
sbb
jb
jmp
dec
pop
jg
fst
outs
fidiv
push
(bad)
in
sbb
sar
(bad)
je
aaa
in
mov
push
jle
push
packsswb
mov
inc
ds
cmp
aaa
cmp
js
not
add
adc
jo
nop
dec
outs
cmp
icebp
cs
fucomp
and
ja
scas
ds
mov
xor
test
add
lock
sar
jo
cmp
adc
adc
push
push
or
xor
nop
push
cmp
das
sub
mov
or
and
and
mov
add
mov
adc
mov
dec
push
fdivr
push
pop
add
push
inc
push
mov
cmp
mov
mov
add
mov
in
add
jno
loope
xor
aad
pusha
add
and
mov
push
adc
cmp
pusha
and
call
mov
jl
dec
repz
in
div
rol
pop
dec
popa
scas
inc
jmp
jp
mov
bswap
sbb
and
sbb
mov
pop
push
call
xor
out
data16
xchg
mov
fistp
push
add
ja
add
fbld
or
adc
sbb
xor
mov
and
outs
cli
mov
call
push
inc
add
call
mov
mov
push
adc
out
xchg
aad
test
push
cmp
xor
push
and
rcr
out
add
inc
in
push
sbb
xor
mov
or
jne
inc
add
xor
sahf
add
pop
mov
lods
(bad)
ins
aam
ret
or
arpl
and
inc
and
xor
adc
cld
push
mov
psadbw
add
fdivr
sbb
retf
fcomi
cmc
and
cmp
icebp
xchg
add
clc
jb
push
jecxz
add
push
jnp
leave
jmp
nop
pop
dec
sub
cmp
repnz
inc
dec
sti
ins
jbe
leave
push
pop
call
xor
mov
nop
cli
inc
cmp
loopne
retf
std
call
mov
pop
sar
fsub
and
add
ds
mov
xor
jmp
pop
mov
cmp
mov
dec
icebp
mov
jmp
inc
sub
mov
dec
aam
xor
call
cs
pop
cmc
sar
mov
dec
ror
not
pop
inc
jmp
aaa
or
jae
push
pop
push
fimul
inc
inc
loop
dec
inc
pop
fimul
or
add
mov
mov
lea
scas
inc
pop
je
push
jge
jge
push
mov
call
hlt
pop
out
mov
stos
or
or
or
jle
cs
scas
pushw
add
clc
data16
pop
add
xor
jmp
push
jmp
sbb
jge
push
jbe
xchg
push
movs
sub
stos
jmp
xchg
cli
sub
jne
ret
push
popf
pop
nop
mov
and
pop
jmp
inc
sbb
xor
and
loopne
mov
into
(bad)
jmp
popa
into
gs
cmp
xchg
in
push
push
ss
daa
mov
cld
divps
loope
and
sub
outs
push
cld
lods
adc
mov
add
or
jmp
sti
push
call
je
mov
push
mov
and
js
(bad)
adc
test
push
cmp
xchg
and
mov
popa
jmp
popf
sub
jo
inc
dec
test
adc
leave
(bad)
mov
push
mov
add
imul
add
popf
jo
mov
push
jmp
and
les
sbb
ret
jno
push
push
cld
lea
sbb
aaa
sbb
mov
hlt
add
fisttp
je
cmp
lods
(bad)
sti
push
cmp
out
inc
and
rcr
(bad)
xor
jl
sti
pop
mov
jmp
das
jmp
pusha
cmp
(bad)
stc
out
les
(bad)
cmp
cwde
or
xor
inc
push
std
(bad)
jmp
inc
xchg
xor
daa
lock
dec
xor
sbb
inc
sti
(bad)
inc
cli
and
dec
push
je
pop
pop
xchg
add
movs
(bad)
pop
jmp
dec
cmp
je
lahf
and
or
call
aaa
das
mov
xor
movs
jmp
movs
push
cwde
sbb
pop
add
hlt
add
mov
repnz
or
sub
aam
call
popa
jmp
aaa
inc
xchg
xchg
jmp
inc
mov
cmp
rol
mov
in
(bad)
xor
and
mov
push
in
mov
jns
adc
or
out
pop
out
dec
add
and
adc
mov
add
mov
(bad)
in
jae
ret
xchg
or
push
dec
add
ss
xchg
add
add
rol
lock
mov
rep
jmp
push
or
mov
movs
into
mov
push
sub
mov
sbb
retf
pushf
or
dec
push
pop
js
pop
arpl
push
or
pusha
mov
mov
jg
lods
in
add
sti
push
mov
cld
js
fisub
cmc
jb
or
dec
ins
test
or
sub
fwait
xchg
dec
jnp
pop
mov
adc
sbb
pop
mov
aad
xrelease
rcl
sbb
rol
dec
adc
xor
test
and
popa
dec
je
mov
fmul
and
jnp
(bad)
(bad)
push
in
or
(bad)
lds
mov
add
(bad)
loop
clc
jmp
in
cdq
ja
dec
das
sbb
jbe
je
mov
pop
sbb
mov
out
add
loop
je
pusha
pop
or
jmp
(bad)
jmp
div
leave
imul
mov
add
dec
out
inc
xor
sub
push
fsubrp
mov
xchg
cmps
dec
jo
jg
fwait
out
retf
cmp
push
inc
dec
arpl
(bad)
(bad)
(bad)
stc
(bad)
retf
shl
mov
pop
inc
outs
pop
mov
fwait
es
int
sub
sbb
(bad)
(bad)
ds
mov
fcomp
jae
sti
and
or
add
clc
cmp
(bad)
repz
(bad)
(bad)
inc
dec
and
shl
imul
mov
jno
ror
or
sub
mov
cld
dec
xlat
loope
and
(bad)
mov
(bad)
sti
clc
pop
jno
push
sbb
jl
mov
pop
mov
pop
xchg
(bad)
(bad)
push
in
mov
push
sub
frstor
push
ss
add
inc
repz
sub
sub
(bad)
jmp
stc
mov
cmp
push
or
dec
xchg
fs
push
cmp
mov
mov
rol
or
iret
mov
mov
clc
rcl
(bad)
(bad)
(bad)
dec
lods
pop
pop
sub
xlat
sub
cmp
pushf
les
fucomip
push
xor
(bad)
dec
jg
fmul
add
add
cmc
idiv
lock
mov
push
xchg
mov
(bad)
jmp
shr
mov
adc
mov
xor
int
pushf
xchg
mov
jmp
adc
hlt
sub
push
push
dec
cwde
sub
ret
loopne
pcmpgtb
cmps
dec
fs
sbb
pop
jne
inc
inc
mov
fcmove
jp
ss
inc
mov
test
push
out
out
mov
mov
sbb
das
fld
popf
push
jp
push
dec
es
xchg
jo
repz
popa
pusha
push
push
push
push
push
call
mov
lahf
xor
ss
add
inc
xor
add
xor
add
dec
mov
test
pushf
xchg
clc
pop
cli
int3
enter
sti
pop
push
call
cli
xor
jb
add
inc
pop
sbb
or
imul
xchg
push
stos
dec
pop
je
pop
test
(bad)
mov
pop
call
call
lock
pop
push
pop
or
call
bound
call
dec
les
(bad)
sbb
jmp
push
and
adc
or
repnz
mov
pop
(bad)
ror
je
or
inc
pop
pop
mov
and
pop
push
ds
or
adc
sbb
pop
cmp
hlt
push
cli
or
cwde
fdivr
movs
and
push
cmp
and
push
mov
data16
add
push
mov
mov
xchg
mov
dec
lods
mov
jecxz
mov
out
adc
ret
bound
stc
(bad)
or
sub
or
or
jne
or
ins
leave
test
xchg
pushf
loop
mov
xor
movs
je
xor
sbb
and
js
sub
mov
sbb
or
jns
add
addr16
lods
or
std
cmp
adc
add
mov
mov
add
pushf
push
xor
jb
cmp
xor
pop
fadd
push
push
mov
sbb
xchg
stc
test
enter
and
xchg
mov
loope
push
fsubr
scas
mov
sub
dec
es
movd
stos
popf
ret
outs
push
shl
xchg
or
mov
scas
ret
pop
xchg
cmp
(bad)
adc
adc
xchg
sbb
icebp
dec
push
sbb
xchg
add
or
sbb
xchg
xor
adc
mov
push
push
sub
lods
in
sti
cmovs
pop
xor
sbb
ret
fs
jp
lods
push
and
(bad)
leave
dec
dec
push
lahf
sbb
data16
popa
sbb
addr16
outs
sahf
xchg
or
call
ds
xchg
mov
outs
cmp
mov
cmp
cmp
stos
fst
div
(bad)
or
push
jbe
(bad)
fcomp
pop
and
cmp
and
mov
adc
or
and
pxor
mov
call
loope
js
ja
loop
push
xor
jle
ds
mov
sbb
sbb
mov
pop
aaa
lods
or
xlat
call
jge
xchg
push
pop
es
pop
js
pop
pop
mov
cmp
outs
fucomip
sahf
(bad)
mov
shl
sbb
mov
ret
jbe
setp
xor
hlt
pop
or
mul
pop
add
sti
cmp
and
or
xor
add
push
mov
imul
and
nop
push
push
adc
fimul
push
je
mov
std
xor
(bad)
dec
out
jle
sub
xchg
sbb
push
mov
aaa
test
loop
push
fs
fidiv
cs
mov
addr16
inc
cmp
inc
loop
mov
pushf
or
dec
jmp
or
pusha
or
cmc
aaa
rol
sti
push
adc
push
cmp
pop
cmp
adc
xor
or
(bad)
je
jmp
mov
adc
add
mov
push
add
mov
(bad)
adc
add
and
ins
xlat
cld
sub
inc
lea
pop
mov
leave
inc
mov
loop
(bad)
jmp
dec
mov
sub
shl
adc
shl
(bad)
add
inc
push
push
xor
mov
mov
clc
test
repnz
jae
push
mov
adc
cmp
ja
and
add
sub
jae
je
push
call
adc
add
loop
or
jo
fiadd
loope
mov
push
ins
dec
and
ja
(bad)
aaa
add
mov
in
dec
lock
mov
jne
mov
and
or
jp
push
lods
dec
sub
lea
cmp
shl
aam
nop
sbb
jne
xor
jmp
jmp
add
dec
ret
cmp
mov
in
pop
mov
push
mov
neg
push
lds
mov
idiv
lods
xor
and
add
push
push
dec
mov
mov
cld
add
inc
mov
xlat
inc
mov
jo
mov
fsub
hlt
lods
xchg
rcl
fdivr
push
or
cmp
or
in
sbb
cwde
dec
xor
inc
add
adc
pop
or
sti
inc
push
jne
pop
xrelease
cmp
mov
inc
fist
call
cmp
in
dec
cmps
pop
and
sub
or
mov
adc
add
(bad)
push
sub
jl
leave
push
in
aas
sbb
test
pop
cli
jmp
inc
xlat
bound
mov
push
pop
loope
adc
mov
out
loope
mov
gs
cmps
mov
inc
call
(bad)
sbb
call
or
xor
add
and
or
adc
clc
in
inc
push
xchg
stos
cmp
loop
lahf
push
mov
movs
retf
loopne
ror
xchg
out
jae
dec
in
dec
add
push
or
dec
outs
imul
(bad)
dec
add
ds
jmp
push
add
xchg
xchg
xchg
ret
push
cmps
mov
jns
push
cmp
sti
jne
out
jb
sub
dec
ret
sar
les
daa
aas
sub
lods
in
or
jne
test
in
add
je
dec
ret
in
add
loopne
push
mov
je
cli
call
cli
call
iret
call
scas
sbb
es
ins
or
jo
sub
rcr
addr16
aad
push
xor
push
push
fstp
ret
popf
call
xchg
fdivr
sbb
add
cmp
or
mov
mov
mov
adc
add
jl
je
test
popf
repnz
sti
pushf
mov
mov
adc
(bad)
(bad)
(bad)
inc
add
cmp
popa
cmc
jmp
mov
aas
daa
cmp
push
add
and
xor
xlat
(bad)
mov
loop
inc
xor
out
in
or
push
jmp
jmp
dec
icebp
div
mov
mov
in
hlt
in
mov
(bad)
cmp
mov
rcr
js
cli
(bad)
(bad)
(bad)
jmp
dec
push
sbb
jge
push
adc
cmps
stc
xchg
jmp
es
xchg
aas
outs
lods
out
clc
daa
dec
(bad)
(bad)
(bad)
jmp
fimul
hlt
mov
or
mov
dec
add
in
fsubr
shl
outs
std
sbb
sahf
js
xlat
xchg
cmp
cli
ins
or
pop
(bad)
in
sbb
xchg
hlt
xor
das
mov
out
cmp
dec
xor
pop
out
lods
mov
outs
cld
adc
lods
test
scas
cmp
xor
push
std
lahf
mov
aaa
cmp
push
stos
inc
and
rcl
dec
sub
jg
js
cmp
push
add
hlt
loop
aas
(bad)
mov
sub
(bad)
call
fsubr
dec
imul
test
adc
data16
add
js
in
and
test
int3
mov
xchg
sbb
push
(bad)
(bad)
(bad)
(bad)
fadd
ja
out
cmp
mov
xor
mov
movs
cmp
stc
sub
(bad)
call
xor
mov
in
xlat
test
enter
pop
inc
outs
idiv
dec
push
(bad)
(bad)
std
jno
shl
or
jo
pop
dec
outs
gs
sub
div
mov
sub
(bad)
jno
test
pop
push
ss
arpl
add
add
cs
cmp
pop
xchg
jne
xor
adc
dec
test
int3
shl
add
add
or
lock
mov
lock
add
adc
dec
push
xor
ja
jle
jmp
pusha
sbb
xor
cmp
scas
xchg
add
cmp
add
not
xchg
loope
es
add
jns
and
xor
mov
mov
test
xlat
add
inc
sbb
jle
and
mov
cmp
retf
push
sub
mov
inc
and
and
and
pop
xor
and
add
pusha
outs
lea
stos
add
stos
inc
jmp
push
xor
adc
inc
mov
add
call
push
repz
pusha
xchg
mov
popf
mov
push
xchg
sub
push
out
push
(bad)
push
add
pop
cs
dec
pop
push
push
xor
loope
jge
adc
pop
ret
movd
test
push
inc
mov
jl
out
add
dec
cld
push
imul
or
(bad)
lahf
out
xor
push
aam
mov
jmp
icebp
pushf
(bad)
dec
push
out
(bad)
aas
xor
pop
inc
jmp
push
mov
call
adc
gs
mov
pop
adc
add
idiv
pop
dec
clc
push
pop
dec
sbb
mov
add
adc
mov
btc
stos
push
mov
xchg
push
call
call
xor
cli
cmp
sub
dec
push
xchg
pusha
and
xchg
xchg
(bad)
out
sbb
lock
push
adc
pop
xchg
cmp
sub
xchg
xchg
mov
(bad)
(bad)
sbb
retf
push
das
xchg
retf
pop
call
push
or
xchg
stc
and
stos
mov
xchg
adc
jbe
push
pop
pop
pusha
jmp
jno
or
es
mov
pop
add
cmp
jne
or
je
sbb
sbb
push
lahf
dec
xchg
xor
fsubr
aaa
push
add
jmp
push
and
add
call
shl
or
push
mov
cli
and
mov
xlat
mov
and
push
sbb
cmp
pop
lds
cmp
sbb
ss
pop
sbb
sbb
push
cmp
sbb
(bad)
into
jno
ja
pop
call
mov
xlat
mov
movs
push
pusha
cmp
test
movs
or
push
mov
lds
push
nop
push
xchg
pop
je
push
sbb
jmp
push
dec
jb
mov
call
cdq
(bad)
fst
pop
nop
and
(bad)
fimul
pop
cmp
jg
adc
or
jbe
dec
enter
ds
data16
pop
sbb
not
jmp
push
ja
add
cmp
push
mov
push
jbe
add
mov
cmp
mov
or
xchg
dec
and
xor
mov
jne
add
cmp
push
jne
add
jne
push
aad
add
or
push
xor
stos
pop
push
mov
clc
scas
(bad)
inc
ret
mov
push
fmul
cld
cld
cld
int3
add
pop
jne
dec
jne
inc
jne
mov
in
in
and
lea
xchg
movs
add
cmp
outs
data16
add
pop
fnstcw
inc
add
add
cmp
pop
icebp
sub
sub
add
inc
jle
imul
pop
mov
inc
sub
jne
popf
lahf
lahf
pop
inc
jne
inc
jne
or
mov
inc
iret
enter
inc
(bad)
push
dec
movs
std
lock
je
cmp
sbb
push
imul
(bad)
add
mov
inc
fidivr
add
div
push
push
(bad)
sti
inc
xor
mov
pop
ret
jmp
aas
pusha
loop
ds
mov
mov
adc
add
pop
cmp
add
out
push
movs
and
test
je
cmp
sbb
cmc
inc
adc
call
add
daa
and
clc
xor
ss
xchg
gs
inc
jl
inc
adc
push
pop
xlat
mov
xor
xor
popa
add
int3
enter
push
enter
cmp
(bad)
sub
fld
cld
(bad)
sbb
out
jo
sbb
pop
xchg
retf
(bad)
push
pop
or
cmp
dec
imul
outs
and
sar
sbb
ins
mov
outs
jl
loopne
jge
adc
add
in
cmc
xor
aam
mov
xchg
enter
retf
popf
mov
stos
jmp
xchg
ret
out
aas
fwait
push
fldenv
leave
popf
out
shl
jb
xor
cs
dec
movs
adc
outs
push
arpl
mov
dec
or
mov
ficom
out
aam
(bad)
fucomi
or
test
cmp
je
jmp
popf
es
pop
in
push
cmp
push
push
ror
movs
jb
mov
leave
dec
test
dec
dec
adc
ret
sub
add
cmp
push
mov
pop
test
call
not
push
inc
sbb
mov
pop
and
mov
cmp
cmp
gs
sti
push
adc
retf
je
mov
mov
inc
cmp
push
cmp
pop
cmp
gs
loopne
inc
cmp
pop
mov
dec
(bad)
xor
sbb
and
cmp
nop
add
es
test
inc
mov
pop
xor
cli
jb
push
adc
add
call
or
push
and
xor
or
cmps
cmps
mov
dec
add
enter
cmp
jge
sahf
in
repz
inc
stc
push
call
cmp
arpl
push
add
iret
cmp
sub
push
add
ins
xor
cld
call
xor
iret
call
adc
shl
adc
push
add
retf
pop
sbb
cld
push
xchg
push
push
cmp
and
(bad)
pop
cld
cs
jle
add
test
push
js
pop
push
inc
and
add
add
and
jl
ja
or
add
sti
push
test
xor
test
in
dec
push
push
jg
(bad)
fcomp
call
popa
aad
and
cmp
test
test
aad
mov
add
inc
push
push
dec
cld
mov
mov
push
push
inc
jp
dec
mov
call
push
popf
add
mov
add
push
cmp
inc
push
fisubr
das
and
inc
fwait
je
push
sbb
test
push
call
pop
cmp
push
ret
call
jo
mov
loope
cwde
pop
sahf
sub
adc
jnp
and
mov
mov
div
call
sahf
rcl
add
js
push
sub
rol
into
cmp
add
xor
cdq
push
cmp
mov
cmp
fdiv
cld
pop
mov
mov
scas
push
call
pop
js
outs
push
jp
add
cld
push
mov
push
ja
mov
cmc
inc
xor
(bad)
lea
call
rcl
sub
dec
pop
fild
adc
fld
mov
cmp
shr
ins
and
ror
cmp
adc
cmp
mov
in
mov
clc
inc
ror
hlt
mov
mov
(bad)
sbb
add
sar
retf
add
adc
loop
sub
ror
mov
mov
rol
push
and
jmp
push
shr
inc
add
ja
vminsd
pop
fnstcw
(bad)
pop
push
jne
jmp
adc
pop
shr
xchg
add
xchg
out
inc
xor
cmps
inc
mov
fs
pop
dec
mov
fcom
cmp
jnp
loope
push
sar
loope
aam
sub
add
dec
jg
xor
jne
dec
sbb
imul
lock
and
shl
(bad)
sti
cmp
jne
xchg
cld
add
mov
inc
in
ins
or
cmp
or
rol
jmp
sahf
test
or
ins
push
sbb
loope
call
mov
sbb
mov
test
out
dec
xchg
bound
mov
mov
inc
imul
hlt
sub
jae
retf
xchg
ins
(bad)
cmp
mov
shl
(bad)
call
js
and
sub
push
push
loopne
clc
pusha
pop
pushf
adc
inc
sub
dec
jp
sub
hlt
cmp
clc
loop
lea
cmp
je
mov
adc
shl
shl
push
cmp
pop
mov
pop
adc
add
and
into
sub
rol
lods
or
add
leave
adc
stos
xor
inc
add
cmp
jae
fiadd
pop
ret
ins
push
sbb
(bad)
mul
bound
clc
je
and
cmp
ret
jle
adc
inc
(bad)
xor
retf
dec
xchg
xchg
push
in
outs
sub
add
cmp
jae
push
xor
adc
lahf
data16
pop
ret
cmp
int
js
outs
lock
add
loopne
jne
(bad)
call
ret
push
lock
(bad)
rcl
push
xchg
pop
aam
fisttp
sub
inc
sbb
inc
jmp
dec
mov
mov
mov
jmp
enter
push
aam
push
mov
push
xchg
add
mov
push
mov
daa
lds
ret
jge
mov
push
jl
inc
jmp
sbb
jae
div
jne
in
dec
enter
pop
cmp
std
xor
jecxz
inc
mov
jnp
call
sub
push
push
push
jnp
xor
sar
dec
scas
push
jb
test
sub
pop
inc
jg
or
jmp
lock
xlat
lea
sbb
mov
adc
inc
loop
or
push
adc
sbb
xchg
je
call
je
push
push
je
jo
add
xchg
and
xor
push
and
es
neg
mov
cld
or
mov
sbb
adc
daa
jbe
sbb
mov
in
call
add
adc
ret
add
adc
adc
pop
jg
add
mov
push
mov
sbb
(bad)
or
adc
ins
nop
inc
cmp
inc
sub
sbb
push
add
push
jmp
inc
jo
and
inc
inc
(bad)
fldenv
movs
loopne
pop
push
xor
add
dec
ror
mov
xor
pop
jl
loopne
cmp
adc
mov
jle
add
inc
mov
inc
or
call
push
in
sub
push
or
adc
jbe
push
inc
jo
pop
test
push
lods
or
fsubr
add
adc
cwde
shr
lock
fild
adc
lea
lea
loope
pop
pop
mov
(bad)
(bad)
in
sub
std
lahf
pop
or
pop
je
push
call
or
shl
jle
stos
mov
ss
cmp
and
add
loop
lods
pusha
fcomp
mov
or
push
xor
and
inc
mov
fsubr
adc
or
cmp
mov
add
or
or
sub
retf
ja
push
pop
(bad)
cvttps2pi
pop
cmp
gs
mov
push
push
mov
sbb
lods
adc
test
fmul
movs
div
add
xchg
call
int
inc
adc
shl
pop
push
add
call
pusha
imul
xchg
das
push
pop
dec
out
hlt
mov
add
or
mov
hlt
fwait
mov
add
and
and
adc
xchg
jle
add
js
sgdtd
call
push
mov
push
push
push
imul
and
fidiv
sub
jne
xor
aad
and
add
pop
adc
icebp
sar
add
ret
inc
sbb
pop
add
push
ins
xor
mov
fmul
ret
jmp
jmp
cwde
or
rcr
cmp
popf
mov
je
add
push
inc
cli
arpl
cmp
cmp
add
pop
mov
(bad)
(bad)
cmp
enter
push
dec
inc
js
cmp
xor
pop
cmp
sbb
xor
jbe
jne
cmps
pop
inc
and
push
and
add
pop
call
adc
in
sbb
mov
cs
sbb
enter
jle
arpl
pusha
xor
adc
arpl
sbb
sub
mov
jmp
sbb
push
jno
push
(bad)
add
shr
sub
xchg
xchg
xchg
push
ins
cld
xor
xchg
inc
sbb
test
shl
and
sub
stos
sbb
mov
xchg
pop
jecxz
mov
stos
push
call
mov
mov
cmp
clc
(bad)
cmp
mov
push
lods
call
mov
pop
push
xor
jecxz
scas
or
cli
and
jp
sub
push
jecxz
push
xor
je
push
retf
adc
test
and
and
ret
lea
imul
mov
(bad)
add
push
sub
xor
sbb
mov
inc
and
xor
ds
lahf
or
adc
push
mov
dec
sbb
call
cmp
mov
push
sbb
xor
lock
scas
dec
ret
loopne
jmp
jne
dec
je
inc
inc
dec
add
(bad)
and
hlt
add
(bad)
cld
dec
xor
dec
and
pushf
mov
arpl
cwde
mov
mov
test
scas
sub
sti
retf
jl
jl
fsubr
inc
push
xchg
sar
sbb
pop
outs
dec
pop
pop
pop
hlt
and
pop
sub
mov
add
mov
xor
fiadd
dec
or
or
mov
sbb
loop
push
or
cmp
ja
or
je
neg
xlat
pop
fistp
sub
sub
push
pop
cmp
ret
int3
xor
pop
or
out
lods
jo
xchg
jmp
sbb
inc
inc
idiv
or
shl
or
jno
jae
inc
add
mov
cmp
cmp
je
call
dec
add
(bad)
mov
(bad)
jmp
jp
push
jo
and
adc
mov
mov
mov
in
adc
jns
pop
inc
push
loopne
pop
xor
clc
jo
push
adc
sbb
push
push
inc
pop
mov
and
mov
cmps
push
adc
bound
or
loopne
or
in
mov
outs
fild
mov
or
cmps
add
aad
add
pop
or
cdq
in
mov
ss
adc
fild
(bad)
push
or
pop
push
dec
stos
add
pop
jb
push
jbe
fidivr
sub
or
or
inc
push
cmps
adc
sbb
push
add
and
cmp
sub
mov
or
lock
cs
fsubr
add
(bad)
dec
fs
adc
jmp
std
push
inc
lock
mov
es
mov
sbb
aaa
js
gs
add
pop
pop
inc
data16
adc
jns
and
or
push
add
add
push
stos
push
jae
and
dec
std
cmp
jmp
dec
xor
xor
div
ds
push
jge
cmp
call
cld
cmp
je
cmp
mov
mov
sub
imul
lea
in
sbb
push
(bad)
cmp
jl
and
dec
jg
dec
pop
pop
sbb
loope
push
or
mov
stc
jp
fist
jle
inc
jno
aad
ret
xor
jb
add
sub
pop
mov
sbb
ins
and
fwait
push
gs
ins
dec
xor
js
enter
sub
pop
leave
or
nop
adc
jmp
xchg
sub
in
push
or
dec
add
or
rcl
and
xchg
(bad)
aas
hlt
call
hlt
hlt
sub
inc
push
add
adc
ins
loopne
dec
xlat
dec
call
or
(bad)
(bad)
jbe
adc
daa
inc
cld
adc
sbb
or
mov
push
or
cmp
push
pop
cs
ja
cmp
sbb
inc
frstor
mov
dec
jge
js
gs
inc
cmc
out
jmp
push
call
mov
sar
mov
pop
cmp
outs
imul
call
jle
mov
mov
adc
push
jae
pop
mov
sbb
dec
dec
sbb
xchg
in
xlat
add
mov
int3
inc
cmp
pop
cmp
xchg
inc
and
fimul
adc
dec
test
scas
add
sbb
sar
mov
or
bnd
clc
adc
ret
push
pusha
or
jo
and
push
call
mov
(bad)
sar
xchg
sub
mov
mov
push
cmp
ds
call
(bad)
sub
add
push
add
add
push
push
call
pop
pop
cwde
imul
mov
mov
dec
push
push
mov
in
or
out
jg
and
push
das
icebp
je
add
xchg
test
repnz
or
push
push
add
inc
adc
add
pop
sub
imul
in
pop
in
mov
mov
cmp
sub
mov
adc
fldenv
add
cld
push
mov
mov
push
add
in
call
in
dec
push
outs
ja
add
push
adc
mov
adc
adc
sti
sub
and
and
inc
dec
pop
push
cdq
scas
or
rol
lods
cmp
les
add
add
push
dec
push
dec
fsub
in
or
push
data16
xor
inc
sbb
mov
inc
ror
pop
mov
sbb
xor
in
nop
adc
mov
adc
push
xchg
mov
jnp
jno
in
add
or
or
push
test
and
aaa
test
cdq
call
mov
push
popf
add
xor
fs
xchg
loopne
pop
push
mov
or
adc
lods
je
push
add
xchg
pop
push
dec
adc
or
and
shl
loope
jno
inc
nop
add
dec
loope
inc
mov
sbb
not
inc
and
call
add
add
push
stos
stos
or
and
mov
bound
inc
or
cmp
push
mov
and
sub
shr
mov
aaa
sbb
stos
lea
lea
add
sub
dec
dec
add
inc
xchg
cmp
rol
push
xchg
sub
pop
inc
or
add
mov
inc
sbb
inc
rcl
inc
xor
sbb
dec
adc
ret
mov
jg
inc
pop
add
lahf
or
pop
call
call
jo
jae
xchg
sub
rcl
in
add
cmp
imul
retf
sbb
bswap
jle
mov
lods
les
xor
pop
pushf
xchg
jmp
data16
scas
inc
mov
push
add
mov
mov
das
sbb
push
rcr
cmps
and
adc
or
daa
cmp
cmp
fadd
inc
or
or
dec
or
or
out
mov
daa
mov
inc
push
imul
jne
adc
adc
ins
jae
pop
pop
in
jmp
ret
fdiv
int3
gs
loope
and
js
in
pop
or
outs
or
je
cmps
sbb
shl
add
aam
or
sbb
add
cmp
cmp
or
mov
add
call
js
xor
and
sahf
dec
xor
test
push
push
inc
cmp
les
mov
repnz
xor
sub
jp
sub
sub
int3
int3
test
add
cli
aaa
and
seto
push
neg
or
add
pop
mov
add
mov
pop
enter
jl
inc
adc
or
cdq
xchg
add
fdivr
xchg
cs
ret
int3
add
mov
push
imul
les
lds
ja
sub
hlt
mov
push
jo
sub
mov
xchg
xor
cmp
mov
retf
dec
cli
loope
add
mov
test
dec
pop
jne
call
clc
adc
and
push
mov
ficomp
pop
or
lahf
cmp
mov
iret
pop
xchg
xor
jbe
or
push
mov
es
imul
call
test
imul
push
daa
or
mov
push
push
rol
movs
mov
sub
sub
xchg
call
test
push
dec
mov
dec
pushf
push
dec
push
adc
jnp
mov
mov
mov
push
fwait
mov
xor
nop
jno
add
mov
push
call
mov
rol
cs
enter
mov
mov
push
xlat
sbb
les
sbb
push
push
push
push
add
sub
push
dec
adc
jno
mov
fcom
push
adc
push
sub
inc
lock
xor
fs
and
mov
cmp
(bad)
out
push
push
add
mov
lock
and
add
adc
xchg
dec
aas
rol
xlat
jmp
jg
xor
jmp
sub
mov
add
mov
mov
push
fcom
cmps
imul
xchg
adc
shl
or
les
push
aam
jmp
fimul
lahf
push
or
xor
adc
push
sbb
mov
inc
imul
inc
push
jo
jle
inc
jmp
inc
jmp
pop
shl
and
mov
adc
and
retf
xchg
div
daa
add
mov
fs
int3
mov
out
and
enter
adc
dec
loope
jo
cmp
int
sbb
xchg
popa
cmp
xchg
jne
in
mov
add
or
xlat
push
cs
xchg
cwde
nop
jge
rcr
sbb
fsubr
jle
cwde
imul
push
mov
xor
and
cli
add
popf
xor
call
retf
clc
dec
push
jb
jge
push
loopne
test
sub
push
add
(bad)
and
mov
mov
xchg
sub
jmp
lea
pop
mov
push
inc
push
fcom
pop
jb
xlat
(bad)
jnp
xor
(bad)
jg
push
jl
je
mul
cmp
jae
clc
push
inc
gs
xchg
xor
jp
push
inc
cmp
in
scas
inc
inc
mov
fdivp
ja
je
jo
push
sbb
stc
sub
in
fist
mov
xchg
inc
or
cmp
mov
rep
or
xchg
sbb
mov
cmp
outs
push
push
mov
pop
in
sub
sysenter
and
(bad)
sbb
enter
mov
add
jbe
add
inc
rol
xchg
leave
neg
jl
adc
pop
mov
add
adc
test
inc
fsave
(bad)
adc
cmp
call
(bad)
test
jb
shr
mov
mov
es
lock
xor
jns
sub
es
fisubr
push
mov
push
sbb
sahf
or
jle
pop
push
inc
mov
inc
cmp
jbe
xlat
add
add
or
mov
into
and
push
aaa
aam
or
(bad)
dec
aaa
inc
or
lods
inc
test
mov
xchg
and
aas
mov
jmp
clc
inc
mov
in
adc
ds
push
inc
call
aaa
and
push
push
cmp
aaa
jb
or
sbb
add
movs
dec
inc
dec
into
mov
add
inc
jne
retf
push
pop
mov
leave
sbb
sar
sub
adc
push
jge
cmp
mov
rep
push
movs
call
stos
add
sbb
add
xor
push
push
jnp
ja
jmp
push
adc
push
pusha
rol
pop
cmp
pop
mov
imul
pop
lahf
mov
cmps
or
(bad)
or
push
push
in
aas
push
cmp
in
mov
scas
inc
test
or
dec
jae
nop
and
dec
add
daa
pushf
lahf
push
mov
push
and
retf
les
fidiv
xchg
je
dec
mov
sub
dec
mov
mov
pop
(bad)
mov
aas
pop
or
pop
xor
adc
inc
aad
push
popa
neg
cmp
(bad)
mov
xchg
push
int3
push
test
sti
inc
jb
push
inc
add
aas
xchg
jle
push
je
mov
adc
push
loope
aaa
mov
jne
dec
xchg
sbb
cmp
push
lea
inc
push
sbb
call
mul
mov
add
or
dec
or
xchg
(bad)
mov
pushf
or
fimul
fisub
pop
rcr
mov
ret
lahf
pusha
jns
pop
cmp
int
jbe
adc
mov
adc
push
add
mov
mov
es
(bad)
or
movs
aas
cmp
cmp
aam
mov
push
jg
nop
push
sbb
push
or
inc
cmp
lods
stos
outs
mov
and
or
xchg
xchg
inc
push
mov
mov
push
fsubp
test
mov
adc
adc
and
push
out
cdq
inc
enter
mov
or
jge
adc
out
aaa
push
in
dec
movs
je
mov
xchg
cld
js
lahf
aaa
and
jb
js
xor
popa
mov
test
imul
jb
mov
mov
mov
lods
jmp
inc
sbb
push
test
pop
add
(bad)
and
push
add
cs
in
test
and
sbb
xchg
or
cmps
sbb
inc
xchg
out
or
adc
and
inc
inc
lea
jmp
iret
cmps
cmp
loope
xchg
lock
sbb
sub
lods
adc
call
xchg
jne
gs
xchg
stc
pop
data16
cmps
ror
cmp
push
mov
call
test
call
fdivr
inc
mov
mov
or
call
adc
xor
call
not
in
les
fsub
hlt
adc
ret
sahf
loope
xchg
adc
cmp
jne
mov
and
loop
pop
add
push
lock
icebp
int3
call
(bad)
dec
adc
push
sbb
adc
jno
mov
or
iret
adc
cmp
sub
add
jnp
fcom
sub
sub
fild
add
mov
push
sub
inc
push
(bad)
ds
or
call
call
sbb
push
lods
xor
inc
adc
lods
out
adc
das
jns
ja
cmp
daa
pop
pusha
inc
call
inc
iret
add
mov
add
dec
fcom
dec
push
inc
cli
xchg
lods
inc
in
push
push
jge
lea
push
cmps
cmp
mov
adc
int3
adc
mov
int
jns
out
repnz
push
add
or
mov
sbb
or
aaa
into
or
mov
in
push
dec
mov
xor
call
add
mov
ja
pusha
xor
jl
dec
jns
cmp
add
dec
and
call
push
test
int
(bad)
mov
ror
retf
aam
adc
into
and
pusha
call
in
mov
test
sub
adc
sbb
mov
sahf
inc
sub
popf
push
dec
xchg
mul
in
sahf
hlt
push
xor
add
lea
mov
cli
je
cmp
push
mov
cmp
cmp
stos
inc
fcom
sbb
mov
or
ss
push
ds
mov
cmps
in
ds
jp
push
cmp
rcr
and
ror
mov
add
xor
cmps
jne
ins
pop
fs
(bad)
fidiv
adc
mov
adc
and
push
xchg
and
inc
sub
add
or
shl
imul
pop
or
call
mov
mov
stos
xor
add
jge
movs
bound
mov
mov
push
test
cmps
dec
dec
les
mov
xchg
out
push
mov
and
or
push
popf
das
ja
test
les
add
push
mov
jo
mov
mov
shl
adc
aas
aas
(bad)
enter
pop
ficom
scas
call
movs
add
cld
inc
pop
cs
add
pop
cmp
dec
adc
inc
and
retf
push
in
sub
inc
(bad)
cs
js
call
xchg
xor
popa
or
push
rep
inc
arpl
cs
movs
mov
fisubr
push
mov
movs
out
jge
sbb
and
push
add
add
push
std
sbb
out
or
cld
jg
fld
popf
lods
pop
pusha
out
and
inc
shl
inc
in
call
call
or
fwait
jg
sub
adc
adc
jp
add
int3
inc
in
test
xchg
xchg
and
fcom
xchg
mov
and
ja
cmp
push
jg
and
cmp
or
sbb
mov
dec
and
add
adc
or
and
sbb
lea
mov
mov
pop
shl
cdq
push
shl
dec
test
push
dec
sbb
shl
pop
xchg
ss
cwde
fwait
add
das
stos
hlt
add
mov
nop
pop
xor
pop
push
lea
mov
push
ds
in
(bad)
out
add
push
sbb
pop
or
push
push
(bad)
das
and
iret
pop
push
push
ror
pusha
movs
call
pop
cmp
repz
fistp
sbb
ret
xchg
mov
add
push
ret
push
mov
ret
mov
sahf
sbb
push
inc
dec
and
imul
pop
or
push
jno
xor
pop
add
xchg
or
adc
sbb
dec
dec
mov
jo
jge
hlt
pop
jmp
push
ficomp
mov
add
jmp
in
nop
cmp
and
in
and
sbb
add
inc
sub
mov
xor
outs
test
sbb
sbb
sub
xor
or
and
jbe
adc
or
or
xchg
inc
jg
add
inc
and
sbb
in
icebp
fiadd
cld
or
and
pop
xchg
mov
inc
mov
sbb
jbe
cmp
inc
inc
adc
sbb
cmp
pushf
inc
inc
push
push
hlt
push
clc
xor
add
push
clc
div
inc
push
loopne
push
push
out
leave
ret
inc
xor
fistp
inc
sub
pop
jnp
jg
inc
add
and
dec
bound
shl
adc
adc
(bad)
add
adc
mov
ror
pusha
jl
dec
adc
dec
dec
sar
adc
xor
movs
inc
adc
mov
jno
inc
push
rol
add
ins
stos
mov
jecxz
cmp
mov
cmp
bound
stc
pop
adc
loopne
pusha
into
lock
jmp
push
pusha
cmp
adc
rol
daa
rcr
js
cmp
add
push
xchg
clc
cmp
stos
or
or
jmp
inc
lahf
(bad)
sub
push
push
jmp
aas
pusha
or
pop
(bad)
popa
or
sub
inc
sub
mov
pop
or
call
(bad)
fdiv
test
pop
add
rcr
adc
cwde
aam
mov
pusha
(bad)
push
out
adc
mov
add
and
mov
test
call
pop
orps
call
cmp
ss
or
mov
push
and
or
sub
sar
adc
jl
retf
jb
jmp
mov
jo
sbb
cwde
dec
pop
jle
and
(bad)
clc
push
jl
pop
and
pop
push
je
push
and
leave
loop
sbb
movs
and
mov
sub
lock
aas
add
mov
add
or
mov
repz
test
call
sbb
or
xchg
and
push
es
and
or
sub
mov
imul
iret
or
out
dec
xor
enter
cli
clc
xchg
pop
ss
mov
add
jecxz
jecxz
daa
inc
add
fild
or
or
inc
xor
cli
and
sbb
int3
jb
not
push
ret
inc
js
cmp
or
sub
push
pop
jg
cmps
mov
fwait
push
sbb
jmp
and
mov
pusha
push
sbb
std
inc
and
add
aaa
cmps
dec
add
popa
xchg
retf
stc
or
pop
adc
mov
push
adc
jno
aas
or
xor
push
sbb
jb
ss
adc
ret
pop
loope
xchg
inc
push
je
mov
jmp
(bad)
and
cdq
adc
rcr
arpl
dec
gs
loopne
pusha
sbb
ins
push
pop
push
mov
sbb
call
mov
int
mov
ret
adc
les
push
sub
cli
into
ja
xchg
lods
fild
dec
lea
cmp
adc
rol
mov
push
jle
jne
sub
arpl
or
movs
mov
popf
cmp
cld
mov
into
imul
or
mov
mov
test
cld
push
arpl
cwde
xchg
jae
xchg
and
adc
inc
and
pushf
cmp
xor
push
retf
out
pop
sub
aas
fidiv
push
loope
test
jns
push
xor
imul
das
ds
ret
sbb
pop
sahf
add
ror
inc
and
adc
jmp
bound
jns
arpl
dec
and
inc
sbb
pop
pop
dec
inc
mov
popf
mov
mov
imul
or
mov
push
jb
mov
and
mov
push
outs
and
repz
mov
sbb
ss
mov
mov
call
inc
ss
mov
xor
icebp
jno
rol
dec
or
sub
ins
icebp
cli
outs
push
adc
add
lahf
or
dec
and
adc
dec
push
push
sbb
test
aad
push
or
test
loop
sbb
retf
mov
int
(bad)
adc
adc
ins
test
jmp
push
popa
cmp
push
popa
add
add
xchg
mov
adc
inc
icebp
or
jmp
push
push
rol
adc
hlt
sub
jecxz
jne
xchg
test
call
(bad)
shl
and
adc
pop
aam
cmp
jae
xchg
add
cmp
cli
test
jge
sbb
sub
adc
sar
fwait
inc
add
dec
dec
int
cmp
loop
sbb
cmp
or
cmp
shr
retf
ds
shl
adc
mov
pop
or
int
sub
push
or
pop
mov
add
jle
push
pop
cmp
data16
out
push
mov
adc
cmps
cmp
les
repnz
std
ret
clc
mov
out
leave
jns
cld
inc
jbe
js
add
sbb
fdiv
add
aaa
or
dec
inc
ret
cmp
stc
mov
pop
adc
fnstenv
add
fild
or
mov
mov
pop
sti
fst
push
popa
inc
lahf
int
retf
call
and
test
cmp
jmp
mov
inc
addr16
adc
in
inc
sbb
and
and
stos
lock
jl
and
jb
test
pop
sub
jmp
fisttp
mov
ja
and
add
and
pop
mov
add
sbb
mov
pop
or
fadd
cmp
jle
jmp
sbb
dec
std
inc
adc
shl
jo
mov
(bad)
fidiv
push
mov
fmul
jecxz
ds
sbb
loope
mov
shl
mov
xor
push
cmp
inc
mov
push
mov
sub
add
xchg
ret
call
add
push
and
out
sbb
sub
mov
push
add
pop
jo
add
std
cmp
je
call
push
and
fcom
or
fmul
mov
jmp
or
jg
retf
pop
or
sti
mov
dec
sub
test
xchg
or
dec
stos
and
ror
cmp
(bad)
xlat
fisubr
mov
dec
popf
push
jecxz
mov
lods
mov
add
or
sub
fcomp
rcr
rcl
(bad)
call
mov
out
sbb
sar
add
add
sbb
cmp
jns
dec
jmp
nop
mov
dec
cs
push
mov
sub
cmp
xor
adc
push
dec
or
lods
cwde
push
cli
pop
jl
jg
adc
inc
xchg
mov
loop
inc
mov
add
sub
mov
mov
shl
ret
mov
(bad)
mov
adc
sahf
jns
and
(bad)
push
xlat
and
mov
test
pop
pop
mov
fmul
or
aaa
call
or
add
mov
scas
mov
call
and
stc
push
hlt
mov
(bad)
call
pop
inc
loopne
ret
add
pusha
mov
pop
shl
sbb
aaa
adc
cwde
or
add
jnp
inc
js
ret
cmp
inc
add
push
fidiv
ret
vpsubusw
xor
inc
(bad)
inc
mov
and
sbb
sar
mov
ret
or
xlat
es
and
popf
sub
clc
adc
push
aad
gs
add
pop
sub
pop
shl
ds
arpl
jecxz
jb
cmp
or
fisubr
mov
xchg
push
jge
test
movs
stc
loopne
addr16
cmovns
js
icebp
dec
retf
jb
and
inc
in
jmp
cmp
(bad)
jne
call
push
xchg
sbb
adc
jmp
xor
(bad)
outs
test
inc
sbb
xor
mov
jbe
jecxz
or
enter
test
add
mov
xor
jg
sub
mov
pop
push
adc
mov
push
loopne
lea
inc
and
cmp
pop
add
clc
adc
jne
dec
js
mov
jg
xchg
fsubr
and
inc
retf
sbb
jmp
push
mov
movs
test
call
cmovo
retf
call
mov
sbb
cs
xchg
jno
mov
add
call
adc
pop
push
adc
pop
loop
icebp
dec
dec
and
adc
loop
push
sbb
sbb
outs
test
sahf
mov
hlt
and
(bad)
mov
in
loope
ins
add
inc
push
int
or
out
dec
loope
fsubr
(bad)
lea
js
out
das
sti
cmp
jb
test
xor
push
movaps
dec
cmp
neg
jb
hlt
retf
scas
loopne
mov
clc
jb
std
das
sbb
cli
jge
sbb
cmp
pop
mov
cld
jo
aam
mov
sahf
ja
enter
sbb
sub
sub
hlt
adc
movs
adc
push
das
inc
sbb
sub
es
js
jg
xor
xchg
inc
xchg
inc
daa
in
adc
mov
(bad)
cmp
retf
jbe
jmp
jmp
mov
push
aam
inc
outs
and
ror
xor
(bad)
dec
inc
mov
inc
cmp
inc
outs
call
mov
mov
pop
dec
sbb
cmc
push
pop
lds
rcl
mov
(bad)
addr16
push
cmp
call
push
fcom
sub
cmp
mov
push
ret
bnd
popf
cmp
xor
and
sbb
dec
ret
mov
sar
inc
sub
test
inc
and
mov
data16
adc
or
ret
jmp
repz
dec
pop
push
adc
fwait
test
push
or
sbb
mov
or
and
mov
sbb
jno
pop
bound
stos
cmp
mov
jecxz
fwait
mov
aas
into
xchg
call
mov
jmp
push
sti
jmp
rcl
cmp
push
mov
movs
xchg
xor
stc
inc
or
and
mov
inc
lods
adc
daa
in
cli
pop
push
sub
test
pop
mov
and
add
pop
and
or
sub
sbb
adc
jge
jge
pop
rol
jecxz
pop
lock
cmp
jbe
clc
jb
pusha
pop
jb
xor
es
adc
mov
cmovs
jne
jmp
aam
int
mov
loop
push
jb
rep
test
and
mov
sar
fwait
mov
test
lea
fdivp
cmp
push
or
or
and
xchg
scas
xchg
je
inc
add
add
call
push
nop
dec
sar
add
cmps
test
inc
add
add
daa
or
push
or
cld
pusha
cld
lahf
div
in
push
in
inc
mov
mov
repz
repz
iret
repz
lock
hlt
clc
clc
cld
add
cmp
dec
add
add
sahf
xlat
pusha
sbb
(bad)
jmp
rcr
and
pop
xor
stos
inc
pop
and
sti
and
mov
ret
push
sbb
lea
jl
cld
pop
repnz
std
(bad)
cld
out
int3
bound
fst
mov
push
inc
sub
popa
pop
nop
loopne
inc
mov
push
fiadd
jl
mov
out
add
push
ficom
push
out
push
add
nop
dec
dec
arpl
dec
rcr
add
ret
outs
bound
push
cwde
mov
test
ret
bound
sbb
repz
sbb
sbb
adc
repz
or
or
dec
enter
inc
fsub
adc
push
hlt
or
sub
xchg
cmps
push
add
pop
shld
daa
ja
pop
dec
pop
jne
xor
add
js
inc
cmp
jl
pop
mov
call
js
push
mov
push
jp
adc
lahf
test
jp
adc
jge
into
push
shl
pop
push
mov
mov
call
fcmovu
sbb
push
sbb
mov
pop
fstp
cmps
cli
push
test
test
je
mov
enter
or
cmp
or
jne
into
push
pop
lahf
add
push
jne
push
adc
adc
inc
mov
push
xor
test
lahf
push
sbb
push
mov
mov
out
jnp
xchg
arpl
test
mov
loope
rcl
fs
inc
test
popf
std
fnstsw
and
push
push
or
movs
pminub
push
cmp
cmp
or
(bad)
call
sahf
xchg
cmp
sub
js
sbb
cmp
outs
(bad)
sub
pop
pop
cmc
rol
or
retf
and
popf
inc
outs
cmp
cwde
inc
push
stc
inc
aad
mov
pop
es
adc
or
sub
push
and
cmp
mov
dec
push
sub
pop
leave
adc
or
loope
or
add
ret
cli
sub
mov
add
lock
cmc
or
hlt
push
shl
and
fwait
mov
dec
and
dec
js
pop
add
push
adc
xlat
add
pmaxub
or
cmp
sbb
pop
sbb
out
mov
pop
hlt
jns
test
inc
pop
and
adc
dec
ins
cmps
adc
inc
pop
jmp
imul
call
ret
and
imul
and
add
and
or
pop
xchg
call
pop
jecxz
add
les
jnp
adc
and
add
fld
test
add
sub
push
push
retf
and
dec
jae
push
sub
outs
dec
paddw
js
pop
and
in
bound
or
ret
pop
sbb
rol
mov
and
pop
sbb
adc
test
xchg
pop
add
loope
xor
and
inc
xlat
cmp
test
pop
mov
out
push
jp
pushf
loopne
mov
lea
test
adc
dec
add
mov
repnz
rcl
mov
das
sub
mov
(bad)
adc
(bad)
dec
in
add
sbb
test
pushw
adc
add
sar
jne
or
mov
pop
shr
and
mov
out
sub
add
pushf
push
mov
fsubr
pop
cmp
dec
mov
mov
std
cmp
(bad)
xlat
loope
dec
or
jmp
mov
dec
pop
push
cmp
cmc
mov
xchg
shr
jmp
test
sbb
inc
sbb
fstp
or
mov
add
scas
repnz
or
iret
fisub
push
inc
inc
pop
pop
mov
fadd
loopne
push
jle
out
xor
inc
adc
ins
lock
pop
and
ss
sti
sar
into
sbb
call
dec
cld
sbb
jmp
jbe
cmp
mov
in
sbb
pop
mov
push
xchg
dec
test
call
add
adc
xor
imul
and
xor
test
aaa
not
and
call
or
xchg
lock
xchg
cmp
or
movs
dec
imul
sub
fld
and
into
jne
jmp
shl
call
adc
or
or
into
ins
sbb
in
pop
ja
rcr
xchg
mov
fnsave
movs
nop
(bad)
js
movs
int3
jne
push
bnd
stos
jmp
or
out
mov
mov
and
out
sub
or
inc
mov
push
je
push
jbe
xor
cmp
jo
inc
adc
fld
imul
imul
pop
push
cmp
mov
jne
std
dec
sbb
aas
xor
call
daa
add
cwde
(bad)
out
add
mov
repnz
and
call
push
shl
or
test
inc
xchg
out
fnsave
js
and
add
push
loopne
cdq
or
in
call
sub
inc
in
mov
stc
inc
dec
and
pop
sbb
lea
mov
gs
je
fcomp
dec
cdq
ret
cli
jns
loop
call
popa
adc
xchg
pop
repnz
out
ret
dec
jo
xor
aam
cmp
or
test
pop
les
jmp
pop
add
dec
jne
(bad)
sub
dec
ret
jb
push
mov
out
pop
pushf
ret
xor
dec
cmp
ins
stos
lahf
cmp
xor
outs
enter
in
inc
add
(bad)
pop
scas
dec
pusha
cmp
scas
retf
or
add
push
cmp
mov
enter
pop
sbb
adc
ror
jae
mov
shr
cmp
addr16
inc
pop
cdq
cmp
cmp
pop
scas
xchg
cld
scas
push
or
and
push
loopne
dec
fcmovbe
push
in
xchg
or
jne
xor
jns
adc
inc
sahf
jmp
(bad)
xor
bound
add
rcl
or
sbb
retf
lock
mov
sub
inc
push
daa
(bad)
dec
ins
clc
jmp
push
sub
lods
push
xor
adc
repz
dec
sahf
call
mov
aad
test
xchg
adc
push
sub
dec
(bad)
pop
jmp
xor
push
jl
mov
ss
jne
inc
fidiv
inc
rcl
add
dec
sub
xor
es
cdq
mov
cmps
or
sub
mov
arpl
mov
gs
push
push
retf
inc
lahf
or
inc
imul
sbb
and
add
jmp
fist
or
jne
jmp
rol
cmp
(bad)
(bad)
jle
pusha
or
sbb
test
in
mov
inc
cld
jb
test
mov
sar
or
jmp
dec
mov
sub
ret
adc
cmp
pop
and
inc
inc
pop
inc
dec
xchg
xchg
pop
enter
outs
shr
inc
movs
out
jne
in
adc
xor
pop
test
outs
iret
repz
mov
movs
push
pushf
xchg
mov
jmp
je
pop
mov
outs
jmp
push
inc
cli
clc
outs
pop
pop
jno
push
and
or
pusha
jo
inc
xchg
mov
xchg
push
mov
add
pop
jno
jno
repz
adc
push
and
xor
jmp
push
jno
jns
xchg
push
test
or
cli
es
add
or
mov
loopne
jmp
out
pop
sub
or
adc
add
add
cdq
add
mov
movs
pop
add
jne
xchg
or
xor
std
outs
mov
test
movs
test
ins
shl
fild
loopne
arpl
xchg
push
jno
dec
jnp
dec
fs
sub
jb
add
and
and
mov
xchg
sbb
or
and
inc
add
dec
push
cmp
fucomp
sbb
arpl
jge
add
imul
mov
mov
and
cs
ja
cld
jecxz
or
rol
fs
mov
js
adc
adc
sub
and
push
mov
push
mov
test
cdq
mov
xchg
push
xchg
jmp
xlat
lea
xor
imul
or
sbb
scas
sbb
pop
hlt
data16
lock
mov
jge
rcl
add
or
pop
int3
lock
or
call
aas
ins
add
cmp
mov
aam
js
ret
sub
xchg
pop
sub
jb
mov
bound
sub
retf
sub
pusha
call
(bad)
loopne
jmp
xor
mov
lods
add
mov
icebp
ins
jmp
push
mov
sbb
adc
aas
mov
xchg
adc
ret
inc
js
or
add
cld
std
retf
add
push
jl
mov
sbb
imul
dec
into
push
or
xor
inc
mov
jmp
xor
dec
arpl
xchg
pop
push
cld
div
xchg
dec
mov
imul
add
cmp
jge
cmp
adc
aas
or
dec
retf
cli
cs
push
pop
jge
adc
cli
push
push
les
sbb
cmp
cmp
jbe
(bad)
dec
imul
push
loope
xor
cwde
add
jle
fild
mov
sub
inc
xchg
sub
shl
or
or
cs
dec
mov
pavgb
jg
adc
push
pop
dec
add
mov
retf
call
cwde
pop
xchg
cmp
xchg
test
cmp
pop
pop
call
sbb
out
aam
adc
dec
scas
lahf
adc
retf
jecxz
mov
mov
lea
call
mov
fstp
in
push
fs
jle
xchg
pop
add
ret
mov
mov
mov
(bad)
jae
push
or
mov
and
mov
call
popa
mov
lock
in
das
lods
inc
in
into
test
js
call
jl
call
sbb
sub
dec
ror
adc
cs
add
mov
and
mov
jmp
cmp
adc
arpl
test
inc
sbb
rcr
mov
or
sahf
mov
sbb
js
cli
sub
lahf
push
jmp
call
mov
out
adc
or
adc
pusha
push
repz
inc
clc
addr16
in
push
adc
jne
rcr
les
fdiv
inc
lds
add
sbb
mov
mov
mov
inc
aas
jbe
xchg
cmps
mov
ds
sub
ficomp
stc
je
sbb
xlat
mov
mov
mov
dec
inc
xchg
pop
xor
outs
cdq
and
imul
jp
cmps
mov
xchg
shl
inc
xor
call
push
xchg
add
push
sbb
inc
sbb
sahf
dec
pop
dec
mov
mov
ins
push
dec
fs
ficom
loopne
(bad)
adc
sti
mov
push
cmp
aas
jne
jle
push
adc
adc
push
call
add
cmp
dec
adc
mov
pop
adc
fidiv
sbb
in
sub
or
mov
mov
push
inc
inc
loopne
pop
cmp
cmp
dec
loopne
sub
mov
and
adc
and
jle
call
fs
push
mov
jb
push
add
add
and
sub
cmps
sub
fs
movs
imul
lods
dec
adc
je
pop
jle
cmp
add
xchg
dec
test
sub
mov
cmp
jl
test
fnstsw
add
popa
push
dec
cmp
pushf
mov
sbb
in
call
pop
jo
add
or
cdq
pop
sbb
rcl
push
sbb
(bad)
call
xor
adc
jns
mov
cld
inc
inc
mov
cmp
mov
xor
push
fisubr
and
push
and
and
out
add
jne
inc
sbb
mov
sub
xor
clc
add
jp
inc
(bad)
jle
pop
or
mov
and
movs
mov
adc
push
and
push
cmp
outs
pusha
sbb
call
pop
fmul
call
or
jl
add
shr
test
push
add
add
mov
cmp
cmp
iret
loopne
cmp
adc
call
aas
ret
adc
pop
jle
push
push
shl
pop
mov
jmp
push
jbe
cmp
push
add
or
std
sub
inc
sbb
cld
jle
sbb
call
push
test
inc
mov
jl
or
cmp
pop
mov
leave
inc
xchg
dec
cli
ja
je
cmps
call
pop
adc
sbb
push
mov
inc
adc
pop
push
int
xchg
int3
push
push
dec
push
aam
fnstcw
bound
or
inc
mov
es
ret
mov
mov
mov
sbb
into
mov
loopne
push
mov
add
fmul
ret
cld
mov
and
mov
push
(bad)
pop
adc
outs
push
dec
pop
js
mov
dec
paddsb
hlt
xchg
pop
cmp
xchg
jb
mov
pop
clc
pop
jbe
cmp
jae
push
adc
pop
gs
retf
cmp
jg
fld
ror
pop
fsub
dec
pusha
in
aam
add
or
mov
cmp
cmc
and
ret
push
ds
outs
fdiv
xchg
stc
shl
sub
out
rcl
ret
cmp
mov
ror
mov
pop
cmp
sub
push
mov
ret
lods
rol
sbb
xor
mov
std
xlat
jp
mov
pusha
sbb
adc
sub
xchg
cmp
adc
or
neg
cmp
mov
js
stos
or
cmp
and
mov
or
cli
fdiv
and
sbb
loop
and
push
cmp
dec
sbb
mov
loopne
push
jmp
xchg
xchg
arpl
je
call
xchg
out
nop
push
cdq
pop
push
dec
loope
ret
mov
sub
jl
mov
jmp
cmp
and
ja
popa
cmp
in
nop
push
sbb
xchg
call
cmp
loopne
cmp
out
(bad)
sbb
enter
cmp
test
pop
mov
adc
add
dec
sbb
jg
pop
stos
xchg
and
ss
dec
in
pop
or
imul
sar
mov
sar
cmp
adc
adc
sbb
mov
add
pop
sbb
add
push
adc
add
repnz
ins
mov
adc
dec
jo
inc
dec
pop
dec
call
pop
push
or
push
jl
sub
inc
pop
mov
mov
add
dec
fild
aaa
les
cdq
stc
shl
ins
mov
shl
or
or
mov
sti
push
pop
push
loop
test
fdivp
pop
mov
xchg
jp
in
or
cs
loope
inc
movs
or
pop
scas
lea
mov
dec
push
adc
xor
mov
and
mov
and
outs
repnz
adc
add
cmps
popa
mov
mov
sbb
push
jb
xlat
and
stos
cld
push
cmp
jae
test
jg
imul
lea
cmp
jl
cmp
jg
mov
movs
outs
push
jbe
cmp
push
hlt
pop
or
sub
jo
imul
add
xchg
or
or
(bad)
faddp
shl
cmp
les
sbb
test
imul
rcl
dec
cmp
xor
inc
or
es
mov
lahf
mov
call
retf
and
(bad)
iret
xor
adc
pop
out
or
add
call
loopne
xchg
and
add
jne
call
or
xlat
dec
out
jnp
in
adc
cmp
jne
adc
fstp
and
or
rcl
dec
xchg
out
in
push
xchg
mov
inc
xor
out
and
pop
dec
xchg
mov
pop
sahf
(bad)
fwait
add
ficomp
jle
mov
mov
dec
add
aad
or
and
jecxz
fs
ss
sar
loop
pop
int3
(bad)
or
cwde
aam
popf
je
hlt
aam
or
int3
dec
and
push
mov
out
jg
add
inc
sbb
add
add
fwait
and
clc
movs
add
fwait
sbb
jle
push
sub
lea
jnp
aas
add
jg
adc
push
jmp
pusha
mov
out
or
xlat
and
push
mov
xlat
add
hlt
retf
mov
sbb
es
jg
adc
or
jg
jmp
adc
sbb
hlt
or
ret
ror
push
mov
pop
add
dec
xor
pop
or
retf
or
push
in
mul
jbe
loope
gs
pushf
and
fadd
and
retf
mov
or
mov
jno
adc
and
retf
jns
inc
bound
and
cld
in
cmp
loope
rol
pop
dec
jmp
not
call
jnp
es
rol
repnz
push
mov
sti
jmp
ja
dec
jecxz
add
xchg
and
xchg
sbb
pop
and
sub
jns
xor
pop
ficomp
push
jmp
ins
(bad)
mov
das
and
sbb
adc
adc
(bad)
cmp
jb
test
xchg
test
sub
lock
movs
loopne
jge
push
outs
hlt
jmp
inc
mov
fiadd
sbb
je
cmp
jne
cmp
sub
pop
adc
daa
js
and
add
push
out
cwde
inc
pusha
enter
arpl
push
call
and
jp
cmp
psubusw
test
mov
ror
adc
mov
push
adc
scas
cdq
sub
je
lock
cmp
je
shr
shl
push
jb
call
mov
dec
cmp
cmc
add
(bad)
and
jge
ins
cdq
xlat
dec
lea
aaa
and
enter
ret
rol
test
inc
add
mov
pop
icebp
pop
jge
pop
jne
sbb
push
or
test
add
jl
fisttp
fwait
movs
jb
xchg
mov
mov
add
es
adc
fcomp
jae
in
cld
jb
sbb
mov
cmps
rol
push
pop
or
jb
scas
mov
mov
scas
mov
lock
push
push
(bad)
rep
and
je
inc
pushf
fs
add
xchg
in
push
test
punpckhdq
jle
jecxz
and
adc
ss
xchg
or
fld
inc
add
jl
xor
fwait
or
popaw
sub
lock
add
sbb
push
je
push
loop
cs
adc
and
inc
add
setbe
loopne
mov
call
div
(bad)
into
ret
test
es
sbb
gs
mov
push
ins
or
std
mov
aas
and
pop
add
pop
lock
inc
jae
je
xlat
sbb
or
jmp
sub
sbb
push
(bad)
ss
jmp
(bad)
mov
jo
push
fmul
or
pop
ds
inc
mov
call
ss
push
test
cmp
sbb
mov
daa
inc
ins
adc
pop
(bad)
cmp
jnp
adc
or
cmp
sar
popa
sbb
jne
mov
sahf
push
inc
addr16
mov
cmps
inc
mov
inc
adc
push
test
adc
push
loopne
push
data16
xchg
add
xor
test
adc
add
pop
fs
pop
je
or
pop
fld
xchg
inc
inc
mov
icebp
ss
imul
pop
push
dec
or
cli
rol
es
sbb
sub
add
jl
and
ret
mov
add
sar
jne
cmp
dec
cmp
mov
dec
std
sub
in
mov
push
and
push
sub
push
pop
test
push
cwde
dec
ret
ret
fistp
dec
mov
jmp
sti
call
jge
unpcklps
cmp
cmp
xlat
and
sub
cmc
fisubr
lods
sbb
push
pop
pop
pop
fmul
cmp
mov
xor
xchg
clc
pop
ja
rcl
jno
adc
jno
push
fbstp
(bad)
fbstp
mov
add
cwde
mov
add
pop
push
adc
jae
pop
xchg
add
adc
add
call
jne
push
rcl
push
sbb
ret
daa
mov
js
ret
lods
push
ret
or
adc
or
and
test
(bad)
jae
adc
push
mov
jns
mov
cmp
pop
arpl
xchg
xchg
xchg
add
jecxz
push
sti
ss
mov
pop
aad
push
lock
xchg
sub
fdivr
mov
dec
push
jmp
sub
js
cld
lds
js
push
daa
jb
adc
add
lods
inc
loopne
pop
adc
fdiv
out
ret
pop
adc
push
pushf
xchg
xchg
xchg
pop
aam
xor
inc
cmp
add
nop
inc
ficomp
cmp
test
xchg
push
mov
add
ret
mov
pushf
leave
sbb
and
pop
add
out
bound
dec
or
dec
test
push
jl
or
and
js
xor
cld
dec
mov
adc
xchg
sub
push
jecxz
mov
call
mov
es
shr
inc
pop
rol
dec
loope
(bad)
lods
push
je
loope
dec
cmp
movs
ins
add
dec
inc
push
imul
add
push
mov
or
test
inc
ins
lock
jbe
mov
mov
xor
je
ins
adc
pop
or
into
pop
leave
inc
mov
add
ss
loop
inc
adc
dec
aad
inc
add
and
gs
sbb
out
(bad)
pop
(bad)
lock
pusha
and
xchg
and
jo
js
dec
nop
icebp
add
cmp
cmp
popf
and
push
adc
inc
mov
inc
add
std
std
loope
and
lea
outs
mov
out
pshufw
jne
sub
sbb
jbe
out
sbb
sub
push
push
or
push
and
jns
mov
hlt
jmp
sbb
inc
js
jg
in
imul
jno
adc
add
dec
mov
xchg
pop
cmps
(bad)
lock
sub
ret
xchg
and
das
jno
xchg
or
add
cmp
and
nop
test
pop
das
xor
xor
fs
imul
repnz
pop
pop
mov
or
jecxz
jmp
popa
inc
enter
in
fild
mov
add
add
xor
mov
pop
je
jne
sbb
test
mov
test
jecxz
retf
leavew
frstor
movs
dec
cmc
add
jmp
mov
cs
adc
fnstenv
add
js
fiadd
adc
pusha
xchg
sub
stc
stos
cmp
inc
add
or
and
jecxz
mov
lods
data16
in
scas
jbe
adc
inc
adc
add
fsubr
or
or
dec
push
sbb
inc
sahf
test
dec
xlat
sub
mov
mov
cmp
das
enter
aas
shl
mov
add
fadd
cmp
lods
out
or
in
je
fsubr
push
gs
mov
pusha
pop
pop
lock
jbe
dec
cmc
ffree
test
inc
push
push
xchg
loop
add
cmp
and
pop
cmp
(bad)
mov
test
dec
pop
cmps
mov
and
sbb
aas
xchg
mov
inc
sbb
cmp
cmp
mov
rcr
sub
lods
js
cmp
mov
in
(bad)
scas
sti
clc
sbb
push
pop
lea
xor
ret
push
adc
pop
cmp
add
jbe
rol
pop
inc
add
pop
fdivrp
add
inc
pop
add
stos
push
adc
xchg
stos
call
push
mov
or
out
dec
sbb
add
push
(bad)
iret
add
add
test
sbb
pop
dec
jo
idiv
inc
push
push
push
(bad)
mul
imul
or
call
dec
push
cli
xchg
ins
mov
cli
imul
add
mov
xor
xor
enter
push
add
(bad)
inc
stos
out
sbb
aad
ins
gs
or
inc
call
jg
test
jne
test
xchg
inc
jo
outs
push
pop
xchg
mov
fs
pop
mov
test
sub
cmp
pop
outs
cs
fwait
sbb
in
in
dec
sbb
(bad)
jmp
lock
loope
fidiv
shl
call
fisttp
out
mov
push
fucomp
popa
lds
int3
ret
pop
(bad)
mov
inc
or
arpl
mov
jge
js
in
dec
ins
mov
out
dec
dec
xor
inc
cmp
push
jo
call
out
mov
(bad)
popf
adc
cmp
push
aas
or
sbb
dec
ret
pop
out
inc
popf
test
ds
adc
sub
enter
push
push
div
adc
push
sbb
push
push
cmp
jle
mov
retf
or
jne
cld
mov
sub
dec
cmp
jge
jo
push
add
push
cmp
in
xor
adc
sub
dec
inc
aam
sub
sbb
dec
push
js
stos
das
mov
push
mov
mov
push
sub
inc
push
xor
pop
mov
idiv
inc
aas
or
push
ja
call
pop
sbb
adc
inc
dec
mov
out
(bad)
and
mov
clc
(bad)
lods
les
lods
dec
sub
adc
out
lods
es
clc
ss
ret
or
in
dec
sbb
pop
sub
and
push
and
push
dec
jo
jno
fs
lods
jge
loopne
pop
rol
cmp
ja
call
xchg
push
cmp
je
mov
test
imul
cmc
push
aas
(bad)
clc
lock
mov
add
je
pusha
lods
and
or
lock
push
mov
test
sahf
push
xchg
aaa
xor
call
fidiv
gs
pop
fwait
push
arpl
inc
rol
push
pop
(bad)
sub
jg
dec
mov
lds
push
imul
ins
and
xchg
pop
push
mov
jo
mov
aas
jb
dec
push
ins
lock
mov
push
jo
push
push
mov
fisttp
sub
lock
fidivr
lea
mov
xchg
jno
fldenv
imul
call
inc
fdivr
or
call
sub
xchg
cld
cs
retf
add
dec
aam
dec
imul
and
add
jne
(bad)
xor
cmp
or
mov
xchg
cmp
sbb
inc
xor
adc
pop
ror
loopne
xor
(bad)
adc
inc
adc
and
bnd
xchg
ret
adc
call
fdiv
dec
cli
popf
sbb
xchg
pop
cmps
fisub
xor
xchg
adc
jbe
outs
and
pop
(bad)
adc
test
mov
mov
(bad)
mov
push
cwde
jl
and
and
push
clc
daa
sub
xor
ja
daa
mov
cmps
data16
aaa
or
cmp
cmps
pop
cmovo
out
mov
cmp
inc
js
out
ja
add
or
or
mov
clc
inc
cmp
jle
sar
pop
xchg
add
sub
ins
mov
iret
push
dec
test
adc
cwde
rol
pop
into
and
or
xchg
jge
mov
push
add
xchg
test
mov
(bad)
outs
test
push
push
jp
xchg
pop
add
cld
(bad)
in
loop
adc
mov
adc
adc
in
lea
mov
sub
lea
push
in
xor
mov
cmp
dec
outs
dec
shl
rcr
loopne
retf
mov
mov
hlt
dec
int3
mov
sbb
ins
aad
jo
push
or
jle
adc
sbb
daa
in
mov
add
jne
mov
xchg
cmp
or
add
and
das
shl
div
sub
les
jge
xchg
mov
and
rcr
adc
mov
ret
mov
xchg
call
jae
in
and
adc
(bad)
rcr
les
dec
out
std
call
jle
ret
jmp
sbb
call
stos
jp
repz
call
push
inc
inc
push
sahf
cdq
or
mov
ficomp
cmps
lock
or
(bad)
test
or
mov
popf
push
fld
xlat
xor
cmp
sbb
jmp
int
dec
test
add
cmp
add
pop
xor
sbb
mov
data16
push
ret
lea
scas
or
sub
cmp
mov
(bad)
push
sbb
push
jp
fcomp
arpl
mov
ret
xchg
mov
pop
mov
test
shl
shl
push
jnp
push
scas
arpl
fucomip
push
adc
test
or
dec
cmp
adc
adc
jbe
outs
sub
mov
jne
xchg
shl
enter
or
out
sub
sub
retf
test
or
sbb
retf
cmp
ror
retf
sbb
mov
sbb
pop
(bad)
mov
pop
stc
lea
mov
ja
push
push
clc
int3
add
xchg
les
mov
mov
jo
mov
adc
(bad)
push
jno
add
and
push
int3
xchg
push
mov
in
or
push
add
mov
pop
mov
adc
sbb
data16
lahf
jnp
jl
dec
add
pop
lock
ins
psubsb
pop
inc
pusha
aam
xchg
mov
dec
jmp
pusha
test
fldlg2
aas
add
adc
gs
push
popf
loope
call
jmp
dec
pop
or
mov
and
push
mov
test
adc
xor
std
inc
pop
jmp
xor
mov
xchg
cmp
xchg
(bad)
lods
data16
dec
cmp
sub
sbb
dec
pop
cmps
imul
fxch
sbb
cmp
popw
lds
outs
movs
daa
inc
dec
push
adc
inc
mov
mov
push
xor
push
ds
mov
or
std
(bad)
fcom
push
popf
aam
sar
fistp
xchg
clc
or
test
or
lods
mov
and
add
hlt
shr
aam
aaa
dec
cld
sbb
(bad)
movs
adc
cld
jmp
and
in
daa
push
jo
(bad)
enter
jmp
repnz
mov
sub
bound
mov
jnp
scas
mov
call
jo
pusha
jo
(bad)
xor
mov
mov
loope
push
or
add
loop
or
int
push
je
jle
int
xor
in
push
adc
push
pop
cld
sti
stos
sub
add
pop
cmp
das
xor
or
push
shl
sub
mov
dec
mov
add
lea
jl
push
mov
add
mov
out
mov
inc
xor
daa
icebp
xor
lock
cmp
call
mov
addr16
pop
mov
mov
fs
arpl
and
add
cmps
push
mov
sbb
iret
add
call
dec
into
xor
call
and
xchg
cld
mov
mov
enter
data16
inc
adc
ror
js
mov
outs
mov
pop
lea
dec
xchg
inc
xchg
and
rol
dec
loope
mov
daa
jecxz
mov
fsubr
jne
and
xchg
and
dec
add
mov
and
pop
sbb
sub
data16
out
push
mov
pushf
psubsb
jl
add
jecxz
cmps
add
inc
push
or
cs
aaa
jp
or
fstp
pop
or
adc
shr
sub
fadd
int3
dec
or
mov
pop
shr
aaa
fdiv
dec
adc
lea
cmp
call
jo
sar
or
xor
fidiv
cmp
xlat
mov
(bad)
cli
bound
(bad)
sub
(bad)
out
mov
inc
pop
sbb
adc
ss
mov
jl
and
arpl
pop
and
adc
or
std
cld
(bad)
jmp
mov
ins
inc
shl
(bad)
jmp
mov
mov
or
inc
test
repz
popf
jmp
(bad)
popa
push
or
mov
lea
ret
jl
cmp
stos
retf
mov
scas
les
shr
call
and
pusha
or
aaa
fsub
sub
or
cld
rcl
jmp
mov
inc
jge
xlat
or
mov
jmp
add
or
or
je
or
sti
push
cmp
jne
sub
add
enter
xor
sbb
add
mov
adc
pop
je
adc
and
mov
jl
fsubr
add
jmp
xor
enter
outs
mov
mov
fwait
or
or
xchg
or
aaa
sub
retf
fsub
movs
repz
inc
rcr
adc
das
dec
push
push
push
in
and
push
push
or
int3
xor
push
outs
aam
sub
cmp
enter
pop
popa
pop
shl
fcomp
inc
pop
lock
mov
mov
clc
adc
jle
(bad)
mov
or
add
add
jbe
lock
lds
pop
or
push
xchg
add
sbb
or
inc
ins
(bad)
sbb
sbb
bound
inc
cmp
into
retf
adc
jnp
fisttp
mov
sbb
add
rcr
in
(bad)
fisub
push
les
(bad)
mov
push
pop
pop
(bad)
and
arpl
div
push
ds
cmc
add
mov
sar
inc
sbb
fdivrp
outs
mov
adc
lock
xor
rcr
fisttp
add
mov
jg
and
leave
xchg
mov
cmp
xor
les
xchg
jbe
pop
sbb
ret
sub
xchg
xchg
xchg
shl
cmp
xchg
xchg
xchg
mov
cmps
inc
lds
mov
cwde
sub
or
push
jo
push
rcl
outs
icebp
jno
call
aaa
xor
jno
cmp
(bad)
jbe
and
push
cmp
aad
jle
leave
or
mov
push
mov
push
sub
cdq
push
mov
ror
in
popf
pop
jge
or
push
adc
or
pop
or
pop
pop
scas
push
clc
inc
sar
int3
jns
fld
fdiv
mov
in
jb
lods
loopne
cmp
mov
sub
cmp
push
adc
jo
in
mov
imul
test
movs
push
mov
ja
mov
jae
or
xor
or
cmp
xor
pop
dec
mov
(bad)
fistp
inc
outs
cld
sub
push
xchg
aaa
jo
jle
and
xor
inc
cmp
(bad)
es
repnz
xchg
sbb
sub
sub
dec
and
dec
add
mov
sar
out
push
ins
sar
idiv
push
inc
push
pop
dec
and
dec
mov
add
movs
jle
lar
adc
loopne
mov
mov
test
sahf
rol
inc
jbe
inc
or
xchg
and
xor
mov
push
fmul
mov
mov
int
push
cmp
inc
movs
pop
test
retf
sbb
add
cmp
fnstsw
mov
jl
mov
cmp
dec
lock
aam
xchg
mov
add
pop
cmp
xor
and
pop
cmp
add
cmp
or
shl
mov
into
sub
rol
inc
xchg
rol
jl
dec
push
lods
cmps
mov
lock
movs
push
jbe
arpl
add
sbb
dec
or
hlt
imul
neg
iret
shl
add
out
add
jns
or
mov
jmp
cmps
push
push
push
adc
sub
pop
mov
jl
div
test
add
or
sbb
jno
add
pop
mov
xor
in
jle
add
cs
mov
xor
out
mov
fimul
adc
jne
into
push
pop
push
mov
inc
add
in
ret
push
mov
push
call
pop
jecxz
ins
les
retf
sbb
sbb
(bad)
pop
adc
call
pop
adc
pop
xchg
add
outs
cmp
xchg
fidivr
dec
repz
push
push
call
aam
add
adc
lea
(bad)
add
add
pop
inc
cdq
xchg
and
xor
ja
lea
cmc
pop
sbb
stos
mov
pusha
add
mov
push
fdivrp
rcl
pop
add
fcmovbe
pop
pop
cmps
ret
dec
mov
and
add
aaa
mov
xchg
adc
test
rcl
cmps
sbb
icebp
push
fsub
jb
or
push
adc
inc
daa
movs
mov
mov
imul
daa
cmps
xchg
in
jnp
xchg
test
(bad)
emms
lock
mov
or
and
pop
call
inc
or
mov
adc
cs
int3
inc
and
neg
ss
xor
dec
push
pop
fcmovnbe
cmp
jb
mov
inc
movs
into
mov
push
inc
fs
mov
dec
and
mov
or
add
and
push
clc
iret
mov
dec
sbb
pusha
adc
dec
retf
rcr
cli
mov
or
xchg
pop
pop
stc
mov
pop
add
scas
hlt
add
jmp
test
jbe
mov
sbb
(bad)
fisubr
stos
and
call
lahf
adc
sbb
xchg
test
jp
add
ds
fdiv
mov
sbb
stos
cmp
les
dec
aad
pusha
ror
adc
cmps
and
sbb
adc
inc
xor
leave
retf
loopne
loopne
loopne
fcom
lods
jo
jne
(bad)
jmp
sbb
add
call
fimul
sub
ret
call
adc
add
movs
jb
xchg
dec
pop
sub
cdq
xchg
sub
sbb
(bad)
pop
sbb
add
dec
loope
mov
cmp
sbb
iret
js
and
cmp
mov
lea
rcl
add
mov
(bad)
sbb
push
jns
aas
and
rol
xchg
and
mov
loope
push
icebp
xchg
movs
fmul
mov
sub
adc
outs
xchg
call
fs
and
cli
inc
imul
(bad)
ins
fcom
rcl
ror
pop
or
add
out
pop
add
mov
or
(bad)
xor
pop
mov
xchg
push
rcr
push
scas
aaa
pop
adc
or
rol
cmp
test
push
sub
xor
sti
jne
call
ja
dec
jmp
adc
adc
jne
or
lea
out
pop
mov
not
es
out
imul
out
xor
leave
inc
lock
dec
out
stos
sub
xor
and
lea
sub
and
and
adc
cmps
neg
pop
push
inc
test
dec
xor
fisttp
test
retf
add
or
clc
das
inc
test
dec
cli
push
cli
call
jecxz
stos
cwde
push
inc
push
push
adc
test
popf
sub
mov
inc
cdq
inc
add
lods
xor
lock
cmps
push
xchg
pop
inc
(bad)
call
aam
loope
call
add
or
cmp
ret
or
ret
into
or
into
sbb
clc
dec
(bad)
cmp
fcomp
cwde
sbb
pop
cmp
adc
jmp
push
dec
lods
(bad)
ret
mov
add
mov
jno
dec
loope
rol
push
fdiv
add
push
ret
sbb
popa
dec
mov
pushf
fld
and
xor
(bad)
fnstenv
sub
pop
retf
in
or
mov
in
xor
cmp
mov
add
pop
mov
pop
imul
adc
pushf
call
cdq
mov
cs
pop
call
mov
das
and
sbb
and
pop
add
and
sbb
add
clc
pop
mov
add
sar
jle
add
jle
mov
stos
jmp
(bad)
pop
scas
or
(bad)
mov
dec
xchg
and
push
inc
dec
mov
sbb
test
mov
xchg
cld
outs
jbe
or
sahf
add
pop
add
call
mov
dec
inc
ins
loopne
mov
mov
jbe
jmp
inc
xor
and
adc
push
jmp
or
xor
push
push
ds
popf
and
jns
push
sub
push
push
push
int3
xchg
sbb
mov
mov
xor
or
in
xchg
dec
inc
sbb
dec
or
push
xor
push
hlt
mov
and
dec
jl
shr
int
fisttp
cmp
shl
enter
ins
imul
add
test
add
jmp
shl
inc
push
outs
mov
mov
lea
adc
xchg
mov
lods
jnp
dec
xor
xchg
sub
and
adc
xchg
jo
lea
je
add
jl
js
or
xor
shl
jno
mov
add
fisub
in
in
add
pusha
in
(bad)
push
or
add
sub
xor
repz
mov
sbb
inc
loop
enter
rcr
sbb
mov
mov
repz
push
jmp
call
cmp
pusha
dec
iret
test
add
je
(bad)
sbb
lahf
sbb
add
dec
sbb
cmp
jb
or
sbb
mov
inc
mov
sbb
xor
cmp
into
xor
loope
cmp
xor
(bad)
shl
sar
xchg
retf
xor
sub
fs
cmp
out
cmp
mov
jg
outs
inc
loopne
shufps
inc
inc
mov
push
xchg
adc
sub
sub
xchg
outs
and
and
sbb
dec
add
mov
adc
mov
and
adc
les
jne
push
int
and
xor
pop
jns
cld
dec
lock
add
jg
sbb
mov
and
mov
idiv
sub
sub
test
ins
and
pop
jb
push
imul
sub
sub
daa
(bad)
dec
sub
mov
mov
inc
inc
or
and
jmp
mov
loope
inc
nop
test
cmp
fimul
push
push
jmp
push
out
int3
or
sub
cdq
mov
data16
mov
xor
adc
fdivr
fidiv
stos
loope
pusha
mov
push
lea
not
repnz
jmp
loope
dec
je
mov
pop
mov
or
adc
or
ror
push
pop
cmp
rcr
sub
add
xlat
movs
imul
ret
push
cmp
sti
xchg
xor
cmp
pop
sbb
jmp
xchg
cwde
sub
xchg
je
dec
mov
push
jg
leave
out
or
mov
and
call
not
sub
lock
movs
adc
call
out
rcl
sbb
daa
fstp
js
cmp
jb
call
xchg
dec
or
(bad)
ret
dec
jp
inc
fimul
sub
xchg
pushf
mov
xchg
xor
in
inc
in
(bad)
push
call
fdivr
es
xor
clc
fucomi
pop
call
rcl
fst
dec
mov
sbb
jae
or
push
pop
fldenv
adc
js
pop
cmp
in
add
jne
or
dec
xor
(bad)
sbb
mov
jo
fst
and
pop
imul
jle
call
in
pop
xchg
push
fiadd
sbb
cmp
sub
add
cmp
jmp
lods
inc
not
add
adc
stos
lods
mov
push
not
xor
inc
add
movs
jne
mov
hlt
push
push
xchg
jbe
jne
push
sub
jbe
imul
sbb
adc
xchg
add
lahf
adc
mov
pop
pop
leave
mov
and
ss
fadd
and
cmp
jle
mov
add
fst
fs
push
lock
push
adc
or
xchg
xchg
or
(bad)
arpl
leave
jle
mov
sub
loopne
shr
fiadd
loope
je
sub
jo
dec
adc
push
and
div
stc
fidivr
push
dec
and
push
jg
outs
inc
or
jnp
iret
outs
push
jbe
jle
xor
jg
adc
icebp
iret
jg
jg
jo
mov
(bad)
shr
jle
in
call
push
inc
and
ffreep
lea
lea
or
mov
inc
out
and
dec
rol
add
js
outs
push
mov
xor
dec
jne
rcl
cmp
cmp
idiv
inc
inc
push
neg
and
dec
dec
imul
das
(bad)
add
ret
mov
shr
jmp
or
push
xor
mov
and
adc
imul
sbb
adc
dec
add
cld
add
add
xor
fldenv
mov
jmp
in
ror
retf
push
rep
mov
retf
dec
jmp
sbb
jns
adc
jno
sub
call
pop
cmps
lds
(bad)
jecxz
mov
(bad)
mov
add
loop
lods
add
dec
sar
sahf
adc
adc
sbb
loop
iret
push
add
popf
inc
add
and
scas
(bad)
les
jnp
lods
push
xor
js
shr
jns
mov
loopne
mov
xlat
add
ins
shr
mov
cmps
rol
adc
cmp
loope
dec
out
repnz
or
out
sbb
pusha
xor
imul
or
sbb
ret
fucom
jmp
gs
mov
sbb
xlat
dec
jmp
xchg
and
arpl
sub
shr
ja
add
push
add
mov
jle
jge
(bad)
dec
push
dec
ret
aam
push
push
mov
cmp
xchg
inc
jno
mov
ror
cli
test
jae
enter
aam
mov
(bad)
jecxz
in
pop
mov
push
inc
shl
ret
mov
mov
dec
and
(bad)
sti
xor
sar
call
imul
clc
sbb
enter
cmps
aam
push
fs
sub
in
sbb
pop
add
jl
cmp
std
xor
cmp
cs
push
loopne
push
imul
aam
jmp
adc
shl
mov
cmp
add
cmp
movs
inc
movs
cmp
je
cmp
push
test
or
cld
push
adc
fstp
stos
iret
or
inc
loope
out
mov
inc
mov
fcomp
aad
mov
(bad)
aaa
push
cmp
ja
sub
fidiv
lea
dec
loope
es
mov
in
sahf
adc
jne
cmp
sbb
shl
jecxz
leave
xchg
inc
loope
inc
add
shl
and
adc
push
xchg
jo
or
or
outs
add
inc
xchg
adc
or
movs
cmps
push
xor
cmp
sbb
jge
sbb
or
movs
mov
xchg
add
outs
add
jne
and
or
arpl
or
jp
pop
fidiv
mov
mov
mov
adc
cmp
sbb
rcl
std
or
jmp
cmp
inc
mov
cmc
and
jmp
enter
xchg
pop
cld
xchg
std
loopne
or
mov
xor
rol
clc
cmp
cmp
clc
xor
jle
ins
mov
sbb
js
test
add
or
sbb
xchg
ins
loop
sbb
xchg
inc
add
mov
daa
mov
pop
call
fsubr
ror
mov
xchg
sbb
dec
mov
inc
jne
xchg
ins
test
mov
xchg
push
mov
dec
je
cld
sbb
mov
cmps
dec
mul
inc
pop
pop
or
and
add
push
fadd
mov
adc
sahf
fld
jae
icebp
add
call
fucom
sub
fiadd
into
push
call
imul
xchg
cmps
cmp
push
and
inc
add
and
add
scas
test
push
movs
xchg
in
pop
inc
mov
(bad)
xlat
dec
sub
fistp
fild
pushf
or
sub
inc
xchg
mov
sub
mov
aas
(bad)
and
add
or
ret
push
dec
dec
pop
dec
mov
sub
sbb
shr
xor
in
ret
mov
cmp
in
(bad)
lods
data16
cmp
call
dec
repnz
fsubr
fstp
fcmovnb
fcmovne
add
push
pushf
aad
push
push
ins
and
fld
retf
push
out
or
loope
aam
sahf
mov
sahf
mov
inc
add
cld
mov
loope
mov
inc
cld
push
push
adc
cmps
push
xor
and
lds
inc
sub
inc
push
jb
aad
dec
adc
add
test
cld
add
into
and
push
mov
pop
or
mov
aas
adc
or
dec
dec
sbb
pop
xchg
xor
xor
xor
cld
or
push
sbb
inc
adc
js
les
test
in
addr16
add
xor
add
pop
mov
mov
inc
dec
and
add
jbe
stos
test
push
mov
fiadd
sbb
adc
sub
sub
pop
fsub
dec
jmp
add
xor
enter
sar
push
test
movs
add
mov
rcl
stos
push
movs
add
add
es
push
in
mov
pop
and
and
jmp
scas
xor
inc
xchg
or
nop
inc
dec
or
mov
or
je
hlt
jb
(bad)
mov
or
loopne
ret
push
mov
and
xchg
movntq
mov
jno
and
sbb
in
and
adc
inc
test
out
loopne
sbb
hlt
pop
add
xor
add
scas
fimul
es
xchg
jo
push
cmp
inc
sub
popa
jne
push
cmp
add
xor
cmp
push
inc
neg
ss
daa
mov
mov
mov
pop
out
jmp
dec
jb
(bad)
pop
pusha
mov
push
idiv
inc
inc
adc
mov
and
pop
add
xor
or
fs
xchg
xchg
cmp
pop
adc
cmp
test
lea
enter
cs
pushf
mov
lea
cmp
ret
cwde
fs
push
dec
pusha
shl
xor
pop
mov
imul
sbb
mov
movs
call
cmc
and
dec
mov
adc
es
push
shl
mov
mov
xor
movs
shr
push
ret
sbb
lods
add
outs
cmp
popf
jbe
adc
js
and
fs
pop
add
inc
push
mov
jg
push
inc
adc
jle
add
call
jp
fcomp
and
mov
mov
jecxz
push
ret
dec
add
test
adc
add
mov
sbb
xor
inc
mov
dec
xor
cmp
movs
inc
sbb
and
mov
call
cmp
cdq
adc
(bad)
mov
push
ins
mov
pop
and
push
not
mov
shr
adc
dec
stos
inc
ret
outs
add
or
push
clc
and
dec
push
sahf
dec
(bad)
mov
fidiv
fadd
addr16
sti
jmp
dec
add
out
sub
fidivr
movs
out
push
add
jp
setp
push
je
cmp
test
es
mov
xor
xchg
or
sub
mov
jmp
dec
popa
push
pop
jle
(bad)
pusha
push
dec
in
add
and
cld
add
pusha
cmp
sbb
fisubr
adc
test
ins
push
mov
or
xchg
and
shl
mov
add
loopne
in
rcr
cmp
cmp
jecxz
mov
sahf
es
xor
clc
data16
inc
and
or
and
xor
dec
imul
pop
sub
cld
mov
retf
test
pop
aas
jae
or
xor
cmp
ficomp
push
push
je
rol
dec
xor
repnz
fidivr
daa
or
and
sub
shl
lods
mov
(bad)
rcr
or
inc
hlt
sub
add
icebp
stos
push
push
pop
test
clc
nop
xchg
ret
lock
sub
loopne
xor
inc
add
test
jbe
mov
mov
mov
adc
test
or
jg
inc
mov
and
push
mov
ret
mov
test
not
mov
mov
push
and
xor
xor
lock
xor
sub
sub
adc
(bad)
mov
repz
or
xchg
add
(bad)
push
or
pop
mov
in
or
cmp
mov
mov
xchg
retf
sub
jno
push
lods
mov
or
jle
and
popf
and
jp
js
push
icebp
pop
rcr
outs
mov
call
pop
sub
push
into
fisttp
mov
push
in
imul
dec
mov
sbb
ins
mov
mov
cmp
mov
sbb
xor
lea
lods
mov
fiadd
mov
gs
retf
push
add
mov
mov
push
ss
sbb
sbb
ss
call
out
xchg
int
push
push
inc
aas
mov
push
push
cs
call
mov
movs
loope
or
data16
jl
dec
mov
push
ja
cmp
cmp
inc
mov
adc
xor
imul
push
ds
repz
call
cmp
js
push
sbb
adc
outs
int
inc
ret
call
cli
pop
jl
jmp
cmps
or
movs
rcr
and
lahf
jge
es
push
mov
push
push
jg
push
push
pop
rol
jb
test
ins
cld
call
ds
push
es
jmp
sub
inc
inc
hlt
sub
pop
or
mov
xor
mov
mov
sub
mov
(bad)
fcomp
fistp
sti
ja
call
pop
in
rcr
gs
sbb
pop
rcl
aam
mov
lock
pusha
xor
ja
or
inc
in
and
rcr
sbb
push
inc
push
push
pop
pop
call
sbb
add
into
mov
btr
add
mov
arpl
call
add
test
loope
iret
or
and
sbb
xor
imul
jne
or
ror
js
loopne
call
retf
cmps
(bad)
je
shr
dec
test
outs
push
std
test
sti
xor
adc
jo
pusha
add
jae
popf
inc
dec
das
loopne
pop
loope
test
or
sub
mov
xchg
sbb
jmp
in
arpl
call
sub
inc
and
cld
dec
push
pop
add
cmp
xchg
out
xchg
addr16
dec
jmp
push
xor
and
jl
mov
or
lods
and
add
pop
or
or
or
shr
fimul
mov
addr16
push
sbb
nop
rol
std
les
es
and
xor
pop
sub
sbb
and
mov
mov
jg
xchg
cli
adc
bnd
lea
lea
or
imul
dec
mov
xchg
sbb
add
push
add
or
xchg
sub
adc
pop
or
cmps
mov
mov
stos
add
add
xlat
aam
adc
ds
cmps
push
mov
add
mov
sbb
and
adc
mov
jmp
and
call
pop
and
inc
loope
push
add
inc
call
clc
dec
cmp
shl
test
nop
lods
rol
fisub
imul
xchg
outs
cmp
mov
mov
arpl
dec
in
or
gs
(bad)
push
and
jp
sbb
out
and
xor
jb
and
in
dec
xchg
xor
or
clc
scas
mov
xchg
jmp
xor
add
push
inc
push
add
or
test
sub
jns
mov
or
leave
push
sbb
shl
mov
xchg
inc
int3
retf
pusha
cmp
push
dec
mov
lods
jmp
or
and
and
adc
jnp
(bad)
stos
iret
retf
adc
or
mov
ins
or
push
lock
add
cmp
das
inc
jmp
rol
into
or
dec
nop
pop
jecxz
and
paddd
add
(bad)
(bad)
jmp
mov
je
and
outs
jmp
mov
dec
push
sub
mov
sub
call
(bad)
inc
fnstcw
cld
(bad)
xor
and
xchg
sti
int
xor
and
pop
adc
popa
sub
add
ss
xchg
mov
test
adc
fcomp
jp
push
mov
bound
mov
mov
pop
das
cmp
je
push
push
push
jne
pushf
cmp
cld
dec
add
enter
xor
jnp
loope
rol
dec
or
add
bnd
inc
nop
cld
cmp
outs
sub
and
push
xchg
test
sbb
inc
jmp
sbb
adc
mov
pop
ja
adc
jmp
add
(bad)
cld
dec
push
ins
test
add
popf
mov
add
imul
out
js
cmp
or
mov
adc
lods
mov
cmc
fcom
bound
dec
call
dec
push
movs
sbb
or
sbb
mov
and
repz
or
xchg
int
into
movs
inc
retf
in
inc
repnz
leave
retf
leave
mov
inc
push
sbb
pusha
push
jb
xchg
mov
pop
leave
adc
in
int
test
mov
xor
dec
push
loope
pop
push
leave
jmp
das
add
fcmove
xchg
or
call
ret
or
xchg
xor
sahf
mov
aad
or
ins
add
cmp
pop
add
lods
cmp
clc
fsubr
fld
xchg
or
sar
adc
not
xor
sar
shl
into
push
sbb
add
add
shl
add
shl
ficomp
add
and
out
call
push
stos
sahf
xchg
mov
mov
lahf
sbb
and
inc
and
jp
add
cdq
ret
and
adc
sti
hlt
add
repz
jns
dec
call
adc
dec
and
add
push
sub
test
arpl
imul
ror
cmp
add
dec
mov
or
inc
sbb
ins
or
push
sub
push
lods
xchg
or
add
xchg
inc
dec
or
fdiv
dec
inc
jl
pop
js
push
mov
add
adc
imul
cmp
js
jl
repz
or
mov
or
fisttp
int
and
or
leave
adc
repz
xor
sahf
sbb
cmp
push
push
cs
jns
ins
sbb
call
sub
xor
inc
cmp
sub
es
push
imul
xchg
xor
xor
cmp
pop
imul
repnz
and
inc
inc
test
inc
and
leave
and
leave
or
xor
push
dec
push
push
dec
jae
dec
dec
inc
pop
dec
xor
xor
sbb
fs
sbb
dec
dec
out
icebp
push
sbb
ins
movs
cmp
icebp
popf
or
push
jo
cmp
movs
movs
cmp
cmp
xchg
nop
data16
or
mov
test
inc
daa
sbb
sub
mov
nop
outs
in
cli
lock
sub
fs
sub
push
cmp
ja
mov
ja
pop
pop
pop
mov
cdq
movs
xor
sub
test
or
dec
out
push
lahf
xchg
loop
mov
fwait
xchg
add
sub
leave
push
les
imul
adc
xor
xor
out
test
int3
popa
xor
and
leave
and
nop
retf
leave
cwde
fsubr
sbb
push
mov
inc
cs
cmp
cs
outs
xchg
and
popa
das
or
jb
out
aam
xor
out
lock
sbb
inc
(bad)
mov
sbb
out
clc
popa
inc
test
cld
sub
leave
and
enter
dec
mov
xor
jb
dec
or
mov
jb
dec
sbb
jl
or
dec
add
xchg
xchg
sub
sbb
mov
sub
and
inc
mov
mov
enter
popa
cmp
sub
in
xor
cmp
xor
sbb
cmp
sub
cmp
push
gs
xchg
inc
inc
(bad)
in
inc
stc
push
cmp
inc
call
push
stc
dec
push
into
dec
sub
pop
dec
push
sub
setne
pop
xor
xchg
not
jne
add
ins
addr16
das
fadd
out
and
das
fild
fwait
cmp
clc
test
(bad)
mov
sbb
out
cld
jge
sub
je
das
pop
mov
call
ss
(bad)
call
dec
mov
inc
sub
cmp
sub
xor
call
lods
shr
cmp
adc
xor
inc
stc
jb
retf
call
xchg
dec
call
das
pop
mov
push
call
pop
call
retf
ret
mov
mov
stos
jo
mov
call
das
jl
mov
jbe
(bad)
sbb
jno
in
mov
nop
push
cs
dec
push
xchg
inc
cwde
cmp
push
mov
mov
sbb
in
add
clc
xchg
lods
pop
sub
xlat
xchg
shl
leave
mov
test
test
sub
xchg
call
xchg
jl
test
lock
pop
xchg
retf
clc
push
cld
inc
add
pop
sahf
add
add
or
xchg
push
adc
or
sbb
test
jmp
and
sub
sub
movs
jb
mov
pop
sub
xchg
xchg
retf
inc
xchg
cs
push
gs
dec
mov
in
mov
pop
push
cs
dec
inc
pop
aaa
pusha
sub
xor
mov
mov
push
mov
pop
fcmovb
push
pop
inc
jl
(bad)
sub
cmps
pusha
inc
push
push
hlt
or
add
aas
imul
or
test
pop
imul
dec
fcom
sub
push
and
test
retf
mov
jecxz
and
movs
sbb
imul
jbe
cmp
(bad)
pop
sti
push
sub
dec
loope
lock
adc
test
cmps
xchg
js
clc
mov
or
add
add
mov
fbld
mov
sub
push
rep
sbb
hlt
mov
lock
jecxz
pop
adc
call
inc
jl
mov
adc
dec
dec
cld
call
ins
push
stos
bound
enter
popa
hlt
dec
push
clc
int
movzx
push
push
sub
in
mov
out
fsubr
addr16
(bad)
add
or
xor
and
out
out
ja
mov
pop
jl
dec
inc
pop
mov
(bad)
xor
ret
jnp
pop
or
dec
push
mov
test
xor
cmp
sub
mov
test
adc
outs
nop
fidiv
mov
mov
inc
fdivr
cld
pop
push
cmc
jmp
mov
mov
xchg
das
jg
dec
mov
loopne
mov
sbb
add
mov
ror
movs
mov
adc
adc
call
test
push
std
mov
(bad)
mov
and
pop
xchg
sbb
mov
mov
inc
jmp
sahf
adc
rcr
xchg
data16
or
enter
dec
clc
sbb
sbb
rcl
and
call
mov
cmp
cmp
sahf
inc
xchg
data16
lock
xchg
mov
clc
push
call
pop
mov
loope
sbb
daa
in
rol
push
lsl
retf
push
sub
icebp
and
call
xor
jmp
adc
shl
mov
into
add
shr
cmps
or
call
or
inc
call
movs
sbb
sbb
sbb
jecxz
sbb
and
cmp
movs
push
ret
sbb
scas
jecxz
sbb
xor
xchg
sub
sbb
movs
sub
dec
xor
pop
sub
cmp
inc
cs
xor
dec
jae
push
sbb
xchg
fsubr
movs
cmp
outs
xor
inc
daa
daa
fld
daa
leave
dec
ret
and
loop
inc
sub
fldcw
sahf
loop
pushf
scas
cld
cld
lea
paddb
jmp
ss
jae
inc
cmps
nop
sbb
inc
cmp
mov
or
jbe
ins
sub
dec
in
ins
add
dec
add
push
or
jne
sbb
xor
rcl
call
mov
pop
mov
imul
and
and
mov
jle
and
or
es
jns
jo
mov
dec
lea
mov
mov
lea
add
jnp
mov
or
cld
jecxz
scas
add
inc
add
ret
adc
dec
cmp
loopne
aam
add
arpl
(bad)
mov
jp
xor
push
sub
shl
lods
mov
adc
push
outs
cmp
mov
and
pop
add
inc
mov
xchg
mov
pop
ror
mov
mov
in
or
and
test
rol
int3
sbb
retf
add
stc
jnp
rcr
cmp
dec
mov
repz
sar
jle
cmp
(bad)
sbb
adc
mov
js
dec
cmp
adc
sub
aam
sub
push
cmp
(bad)
or
cmps
test
clc
iret
xor
xor
sub
retf
jbe
repnz
fimul
pop
cld
sbb
inc
mov
pop
imul
jb
lock
mov
inc
jo
and
adc
adc
mov
jo
dec
sar
mov
(bad)
jmp
jnp
sub
in
daa
je
(bad)
ins
enter
cwde
mov
pop
aas
shl
add
jnp
in
sub
lock
movs
mov
dec
mov
fcom
movs
or
push
or
and
xor
add
sbb
(bad)
loop
xor
and
adc
or
lock
stos
add
adc
pop
sub
mov
and
dec
jne
lea
outs
sub
daa
or
or
sub
xor
pushf
call
adc
mov
xchg
mov
or
adc
mov
mov
mov
mov
cmps
mov
add
xchg
sbb
fs
sub
inc
push
mov
xchg
push
call
sbb
inc
dec
das
inc
call
push
fnstsw
lods
aam
loopne
ficom
push
push
repz
dec
sbb
cmp
sahf
lea
adc
mov
in
movs
and
xor
mov
or
or
sub
add
add
outs
inc
add
nop
mov
and
loope
xlat
mov
or
lahf
cdq
sub
or
test
lea
cmp
aaa
int
(bad)
enter
and
sbb
and
popa
dec
ret
mov
fisubr
and
(bad)
xor
je
mov
mov
les
jg
push
mov
mov
scas
pusha
xchg
mov
jmp
push
lock
cdq
dec
dec
(bad)
das
and
xchg
xchg
dec
stos
test
ins
push
leave
aaa
call
pusha
xor
jne
mov
or
pop
mov
mov
jle
imul
and
out
push
mov
pop
int3
inc
mov
inc
outs
inc
std
jne
inc
jmp
sub
sbb
shl
cmp
les
mov
mov
mov
es
add
call
dec
xchg
mov
ins
push
mov
push
and
cmp
lea
xchg
(bad)
pop
shl
xchg
jb
or
aaa
xor
ret
addr16
pop
dec
cs
call
out
imul
push
adc
inc
aas
retf
xor
push
inc
mov
add
adc
loope
jmp
xlat
out
mov
test
inc
pushf
add
lods
mov
(bad)
clc
leave
and
aaa
inc
jp
dec
aaa
jmp
test
sbb
ds
std
popa
add
fs
xor
inc
cmp
call
sbb
fld
pop
(bad)
shl
inc
les
or
je
aam
ss
sub
push
mov
mov
pop
mov
mov
mov
jb
dec
mov
repz
xor
add
sbb
dec
loopne
das
jbe
mov
fnsave
add
adc
pop
les
test
addr16
sub
jmp
cmp
push
shr
loop
pushf
mov
movs
int
cmp
ds
mov
add
mov
(bad)
mov
out
lsl
pop
loop
fisubr
call
cmp
inc
mov
dec
and
fs
add
retf
adc
pop
add
loopne
les
ds
adc
dec
sbb
je
push
(bad)
imul
xlat
add
ins
jmp
fld
mov
or
mov
and
mov
xchg
hlt
clc
add
jecxz
ins
mov
inc
jmp
xor
or
mov
mov
add
out
add
ret
ss
pop
sbb
imul
cmp
sbb
pop
or
cmps
mov
jno
mov
sbb
push
call
imul
stos
add
mov
loope
xor
call
int3
imul
leave
scas
stos
popf
push
stos
test
pop
add
inc
add
stos
and
dec
push
in
pop
mov
mov
inc
into
sub
cld
jo
add
call
jbe
dec
inc
push
add
test
or
dec
add
xchg
ret
jmp
icebp
mov
push
pop
jl
push
xor
add
jae
es
mov
inc
and
inc
imul
ds
add
jg
sbb
je
sar
lea
push
mov
add
mov
and
or
cmps
cmp
or
dec
mov
fcmovnb
nop
mov
lods
sub
add
je
pop
retf
lods
mov
xor
push
xchg
js
cmp
cmp
(bad)
popa
xor
and
ja
add
xor
push
xor
dec
or
in
push
pop
je
in
mov
mov
push
cmp
jno
and
clc
adc
jmp
cdq
dec
mov
sahf
jmp
aam
add
xor
rcr
inc
mov
int
stc
scas
aad
cmp
lock
mov
fild
clc
pop
jle
sub
push
sbb
movs
pop
jl
jecxz
push
sti
call
or
cwde
lods
adc
js
sahf
mov
push
and
and
adc
(bad)
push
mov
add
icebp
mov
jecxz
nop
inc
jns
jg
je
or
cmp
or
data16
inc
xchg
adc
and
push
push
xchg
test
push
jb
xor
cmps
pusha
sub
mov
add
add
xor
and
idiv
lock
pop
lods
or
je
or
ret
jecxz
mov
push
add
mov
sbb
sbb
mov
mov
sbb
cmp
or
add
dec
or
adc
push
add
ss
mov
js
dec
or
lods
jmp
mov
adc
sub
push
mov
pop
or
sbb
sbb
and
cmp
inc
test
push
jne
jno
scas
jle
push
cmp
adc
xchg
std
enter
dec
loope
into
sub
adc
and
sbb
inc
dec
mov
xchg
dec
add
adc
test
cdq
sbb
ins
lahf
dec
test
push
dec
add
clc
outs
sbb
je
pop
nop
jae
das
js
mov
dec
jne
aaa
das
cdq
mov
mov
stos
(bad)
mov
lahf
cmp
stc
btr
and
sub
jmp
stos
inc
das
sbb
xchg
sbb
and
mov
pop
cmp
jne
or
aaa
xchg
cmp
lahf
mov
mov
dec
sbb
or
dec
ds
std
or
jp
mov
xlat
sub
xor
sub
mov
adc
pop
fsubr
push
and
push
add
pop
mov
or
aam
adc
pop
push
xchg
push
inc
mov
test
add
aad
js
test
jno
or
mov
test
inc
inc
ret
jb
aaa
int
cmps
inc
xchg
adc
sti
ret
repnz
cli
test
pop
xchg
jno
stos
push
mov
inc
out
dec
icebp
mov
(bad)
inc
daa
scas
add
hlt
movs
out
add
push
push
test
mov
call
jmp
sahf
imul
inc
mov
adc
or
mov
dec
mov
push
cli
xchg
dec
shl
data16
out
pusha
clc
jo
mov
stc
adc
dec
xor
sbb
sahf
jno
in
es
mov
rol
inc
and
sbb
inc
(bad)
xor
add
xchg
xor
pop
pop
test
adc
add
ret
arpl
push
mov
retf
(bad)
icebp
push
ret
fstp
pop
pop
mov
add
add
call
pop
add
xchg
cmps
adc
test
into
or
or
xchg
enter
xchg
push
aaa
mov
inc
push
cld
and
xchg
loop
and
fwait
xor
xor
pop
out
sbb
add
retf
not
push
push
push
(bad)
mov
pop
jmp
cmc
jl
mov
mov
pop
(bad)
lock
lods
jns
mov
dec
or
ins
and
sub
and
cmp
jmp
outs
inc
and
sub
mov
or
lea
(bad)
xor
push
pop
add
xchg
stos
cmp
sahf
out
in
add
add
dec
jne
sbb
inc
retf
mov
jno
je
xchg
add
scas
in
pop
mov
in
push
inc
push
push
push
gs
cs
addr16
pop
inc
or
out
ror
or
xchg
aaa
or
cld
add
push
inc
scas
in
fisttp
push
or
add
pusha
in
fimul
or
or
push
or
sahf
xchg
sub
pmaxub
mov
adc
iret
enter
adc
cmp
in
add
adc
repnz
adc
adc
cmps
adc
adc
adc
xchg
adc
inc
scas
in
push
push
inc
pop
int
add
and
sbb
xchg
sbb
add
sahf
xchg
sub
sbb
sbb
in
in
mov
fwait
retf
add
je
push
sbb
mov
ja
sbb
sbb
repnz
pop
xor
and
ret
sub
cmp
jae
cmps
lock
lar
xor
and
mov
xchg
repnz
cmp
je
repnz
sub
shl
cmp
xlat
in
in
in
cmps
mov
sub
jns
out
or
mov
je
call
or
jmp
xchg
jmp
push
inc
scas
push
jmp
jmp
js
xor
in
xchg
push
sbb
in
sahf
xchg
sub
in
mov
out
in
in
xchg
out
or
xor
je
lock
xor
dec
icebp
icebp
push
repnz
repnz
cmp
repz
std
in
cdq
push
push
hlt
hlt
imul
neg
std
cmc
cmc
cmp
inc
div
mov
das
nop
xchg
sbb
gs
clc
mov
clc
or
sbb
stc
and
sahf
xchg
sub
add
sti
mov
cld
cld
cld
je
idiv
sbb
push
push
nop
shl
mov
xor
iret
fwait
xchg
std
sbb
(bad)
(bad)
loopne
movs
mov
je
cmp
cdq
je
jmp
mov
mov
or
xor
stos
or
jecxz
jecxz
dec
fsubp
push
xchg
xor
mov
push
in
cmp
push
push
cmp
sti
out
out
or
call
leave
(bad)
sti
jo
or
dec
jmp
inc
xor
daa
in
cdq
pop
repnz
sti
jmp
and
push
and
out
xchg
mov
xchg
pop
cmp
or
push
in
xor
sbb
push
cli
stc
(bad)
retf
and
push
xchg
scas
imul
div
in
clc
cdq
jb
pop
repnz
push
stc
movs
test
stc
sti
sti
jns
push
sbb
xchg
or
cmp
push
retf
sub
clc
mov
in
test
fild
clc
stos
dec
inc
sub
mov
or
loop
ror
or
inc
clc
add
xchg
pop
and
shl
add
or
das
test
scas
fdiv
out
mov
and
test
push
sub
mul
xchg
cmp
pop
not
imul
daa
or
pop
dec
push
popa
xchg
into
idiv
mov
nop
idiv
ins
repnz
movs
repnz
inc
test
push
sub
cmp
in
mul
dec
push
div
nop
jo
mov
scas
mov
xor
clc
cmp
jmp
jb
or
xchg
cmp
and
aad
sbb
outs
and
hlt
or
adc
jns
jne
add
mov
adc
sbb
mov
shl
loope
(bad)
jp
jns
xor
pushf
pusha
pop
repnz
mov
hlt
rol
repnz
repz
repz
mov
inc
mov
or
xchg
repz
and
pop
repnz
sbb
cdq
or
in
jmp
jb
mov
and
mov
arpl
pushf
test
cmp
icebp
and
pop
repnz
inc
xlat
repnz
repnz
push
cmp
sbb
inc
jb
sbb
mov
mov
icebp
cwde
icebp
pop
push
or
mov
dec
icebp
cmp
cmp
icebp
pop
daa
or
or
test
movs
and
jmp
je
int
push
(bad)
push
sub
ffreep
push
inc
xchg
daa
sub
xor
cmp
cmp
push
repnz
cmp
pop
mov
add
mov
inc
jne
stc
xor
iret
icebp
dec
add
movs
xchg
dec
add
repnz
arpl
push
add
jmp
lock
or
fwait
or
test
xchg
add
adc
stc
xor
mov
test
jns
add
add
out
call
ja
imul
loopne
lock
sahf
out
jns
jmp
in
sbb
cmp
sbb
xchg
out
sbb
adc
icebp
lea
cmc
jg
cmp
push
mov
and
xor
mov
inc
or
cmp
js
clc
mov
fcmovb
adc
icebp
into
inc
cmp
ror
nop
jp
add
add
pop
fwait
nop
sub
pop
pushf
jg
in
nop
jo
jb
inc
xchg
push
ret
scas
retf
lock
sbb
test
inc
fst
retf
fwait
jb
add
lahf
ss
jne
das
adc
lea
outs
ret
aas
fisttp
sbb
jne
mov
push
cmp
out
outs
std
jne
(bad)
es
jne
fwait
shl
call
lock
or
cld
jb
mov
inc
out
stc
jns
(bad)
(bad)
jmp
std
std
jmp
pop
sbb
sub
add
or
cld
nop
adc
adc
inc
cmp
jb
dec
cmp
push
jmp
or
popa
pushf
xor
icebp
or
and
adc
adc
mov
sbb
or
pop
jmp
xor
dec
shl
or
call
jecxz
gs
add
adc
dec
jl
mov
jb
jne
sar
add
mov
pop
push
jge
(bad)
stc
xchg
mov
stc
mov
imul
xchg
mov
fimul
add
jl
or
test
adc
outs
jbe
mov
in
push
and
mov
pop
sub
hlt
lock
bound
sbb
icebp
cmp
psubsb
mov
adc
movs
sbb
cmp
sub
nop
call
(bad)
loopne
lods
xchg
test
add
imul
cmp
xchg
lock
or
rcl
mov
xchg
outs
xor
cmp
pop
and
jnp
pusha
mov
push
jo
or
push
sbb
push
(bad)
dec
push
jmp
add
pop
push
jmp
inc
es
jmp
cld
in
rol
mov
push
jp
nop
sub
inc
mov
popf
xor
aaa
loop
xor
mov
sbb
or
outs
xor
loopne
add
lea
or
mov
xchg
icebp
imul
add
call
jmp
leave
sbb
pop
cmp
retf
cmp
or
cmp
xor
mov
(bad)
call
add
mov
add
mov
push
or
jne
jo
imul
test
pop
sbb
and
mov
loop
or
push
push
mov
movs
sub
and
push
nop
jmp
jmp
dec
sub
add
retf
mov
mov
dec
ja
in
mov
mov
cmp
test
mov
push
dec
pusha
xor
fwait
or
jge
add
sbb
push
hlt
cmps
cli
sub
test
in
cwde
lea
sti
add
pusha
std
mov
pusha
in
inc
pusha
and
imul
jne
sbb
into
ins
repnz
sub
xor
lods
sub
adc
mov
sub
mov
in
fwait
inc
loop
add
fucomp
lahf
mov
fstp
xchg
mov
fs
loopne
sbb
xor
add
shl
ror
mov
xchg
daa
push
adc
fs
mov
lods
sahf
xchg
and
adc
or
xchg
out
popa
imul
xor
mov
mov
sbb
pushf
frstor
rol
inc
inc
adc
mov
or
inc
xlat
xor
push
adc
cwde
mov
data16
sub
xor
pop
cwde
arpl
or
cwde
and
jg
out
mov
and
cmp
mov
sbb
adc
add
jns
lahf
loopne
aam
and
in
xchg
mov
or
pop
lods
ror
dec
aam
xor
pop
fistp
xchg
pop
xor
lock
adc
mov
mov
repz
mov
and
sahf
inc
fdivr
jl
data16
ret
mov
pop
sbb
lods
addr16
sbb
or
sub
or
push
mov
shl
dec
movs
fmul
sub
(bad)
and
dec
inc
stc
enter
shr
lock
sar
or
push
lock
lock
cmp
arpl
jmp
and
jns
jno
inc
neg
jne
dec
(bad)
push
dec
loope
pop
and
or
les
add
dec
int3
pop
jge
mov
add
xor
repz
out
mov
jb
add
sub
jmp
and
pop
cmp
and
pop
jb
jo
adc
sbb
imul
sar
call
pop
sub
sbb
cmp
stc
pop
test
push
fild
pop
inc
push
bound
sbb
xor
cmp
dec
in
jbe
and
test
test
enter
xor
inc
cmp
mov
and
xor
or
imul
ja
mov
enter
add
jmp
push
push
into
mov
std
adc
or
cmp
idiv
push
jbe
dec
sub
sbb
in
or
adc
or
test
and
iret
pop
dec
sbb
div
xchg
add
mov
add
mov
rcl
bound
and
dec
sbb
cmp
or
fisttp
enter
sbb
in
jno
lods
mov
js
inc
or
call
test
stc
jb
jmp
repnz
sub
int
int3
lahf
push
push
or
or
or
add
out
fs
cmp
js
or
adc
sbb
cs
xchg
shl
jecxz
jo
test
lods
inc
pop
rol
cmps
adc
push
mov
shl
retf
push
in
xor
sbb
pop
pop
sbb
gs
push
xor
or
rol
mov
adc
push
in
inc
pop
push
mov
and
adc
mov
mov
enter
or
push
jmp
ret
loopne
and
mov
retf
xchg
and
xchg
mov
add
push
nop
aas
sub
aas
cs
ins
jl
fcomp
rol
and
sub
or
adc
inc
imul
es
or
cs
lods
clc
fdiv
fdivr
shr
mov
pop
pushf
ret
jno
call
(bad)
cmp
idiv
and
sar
call
test
inc
ret
pop
xchg
loopne
(bad)
(bad)
cs
cwde
pop
cli
add
mov
je
js
cmp
fidiv
xchg
ret
pop
jns
fiadd
sbb
imul
test
js
jbe
(bad)
xor
add
pop
sub
pop
adc
pop
mov
or
push
pop
hlt
or
fstp
cwde
xchg
fadd
clc
jmp
inc
out
mov
or
je
pop
push
loope
icebp
sub
je
ss
fdiv
fstp
or
or
imul
sar
lea
and
js
sar
adc
mov
or
shl
mov
in
sub
in
in
into
scas
adc
pop
jmp
les
scas
and
repnz
sbb
not
clc
dec
je
or
inc
or
lea
xchg
int
mov
adc
mov
fwait
loop
jne
jp
adc
(bad)
cmp
and
mov
or
mov
add
fwait
in
jno
ins
cmp
pop
and
cs
call
adc
xchg
out
pop
outs
xor
sub
movs
mov
movs
sub
(bad)
push
(bad)
ret
(bad)
retf
mov
push
(bad)
and
pop
mov
pop
in
ret
add
mov
push
sbb
inc
je
scas
push
dec
xor
mov
ds
call
lds
push
test
cld
or
xlat
push
pop
adc
lock
inc
scas
inc
addr16
push
aas
ficomp
add
xor
xchg
dec
inc
add
add
xchg
(bad)
imul
mov
ret
mov
and
jp
cmp
pop
cld
adc
xchg
stc
push
dec
loopne
dec
(bad)
or
mov
cs
cli
push
movs
dec
lock
fwait
jnp
mov
stos
shl
push
pop
clc
fucomip
in
or
add
push
ins
cmp
fadd
gs
call
add
sub
push
cmp
add
and
aas
sub
fucomip
sti
out
je
mov
in
push
mov
or
inc
push
sti
aas
push
or
mov
gs
call
aaa
inc
dec
xor
cmc
jmp
adc
pop
dec
push
xor
add
je
mov
add
jmp
ja
(bad)
push
xchg
mov
shr
jo
add
sub
int
mov
inc
or
je
or
fadd
outs
mov
mov
(bad)
xor
add
push
loopne
pop
dec
mov
call
popa
and
jae
addr16
mov
jmp
adc
adc
out
inc
mov
sub
adc
fimul
inc
clc
mov
movs
loop
dec
ficomp
addr16
mov
jmp
cmp
jo
cli
inc
out
mov
cmp
aaa
lea
sub
mov
test
adc
in
or
inc
sub
jo
mov
mov
daa
mov
nop
inc
cld
adc
push
jne
inc
hlt
cmp
push
js
xchg
xor
(bad)
sahf
sbb
ds
xchg
shr
inc
adc
outs
sbb
dec
popf
push
cmp
js
cmp
ud1
mov
cmp
mov
add
inc
imul
sbb
popf
mov
lods
xchg
dec
push
in
and
jae
cld
test
mov
sub
add
into
or
mov
lahf
shl
adc
add
push
sub
into
pop
(bad)
fcom
stos
pushf
fisttp
mov
xchg
popa
jbe
sbb
inc
aas
xor
mov
cld
cdq
jmp
aaa
mov
add
mov
dec
sub
loop
pop
jl
jae
push
pop
or
jecxz
loope
mov
outs
xlat
icebp
xchg
jmp
out
leave
jmp
shl
jle
inc
ret
or
ret
test
xchg
lea
xor
push
inc
dec
sahf
add
pop
and
adc
xchg
shl
mov
(bad)
cmp
sahf
add
jmp
push
movs
jecxz
fcom
jmp
pop
pop
xchg
mov
je
shl
lock
add
cmps
dec
mov
jmp
icebp
xor
ds
imul
data16
aad
and
rcl
sub
repnz
add
push
adc
jb
add
pop
sbb
add
sub
sub
retf
adc
and
or
int3
mov
pusha
sub
cmp
iret
adc
data16
xor
sub
dec
cmps
jae
mov
out
test
daa
pop
pusha
scas
push
jg
(bad)
mov
jl
or
dec
call
mov
mov
adc
pop
ins
retf
pop
fcomp
xchg
mov
mov
mov
jbe
push
fstp
push
pusha
push
mov
movs
sub
jmp
pop
dec
call
pushf
loopne
mov
cdq
fdivr
shl
jg
push
mov
icebp
jmp
mov
mov
mov
sahf
inc
jo
dec
add
and
xchg
je
gs
hlt
ja
sbb
mov
out
fisttp
fsub
pop
mov
cwde
adc
mov
loope
(bad)
mov
jmp
test
mov
pop
dec
cmc
rol
add
fucomp
sub
cmp
sbb
iret
shr
inc
push
and
and
mov
add
sti
fld
jbe
test
ins
imul
add
lea
sbb
dec
lods
or
or
gs
push
arpl
call
push
xchg
or
inc
xor
sub
push
mov
mov
cmp
jb
rcr
lea
pop
push
xchg
adc
xchg
dec
cdq
inc
mov
jae
rol
test
pop
ins
pop
popa
outs
movd
or
xor
jle
jne
sub
mov
cli
push
out
hlt
jmp
or
jmp
ss
(bad)
sbb
jp
repnz
lock
call
sub
dec
pusha
imul
inc
and
or
sar
jmp
imul
inc
inc
push
fidiv
adc
or
sbb
adc
add
or
adc
jbe
or
outs
adc
mov
pop
and
xchg
mov
in
ins
pop
dec
cmc
sbb
call
inc
dec
movs
jmp
ss
ss
xchg
ja
jmp
movs
aas
add
add
adc
clc
ss
movs
inc
ins
imul
xor
test
std
xchg
pop
or
dec
cmp
inc
call
add
jp
in
add
mov
imul
je
mov
mov
into
inc
sbb
outs
add
pop
inc
sub
or
leave
push
or
or
je
jbe
test
sbb
mov
je
jmp
call
xchg
inc
xchg
push
out
lea
mov
fadd
jge
or
mov
inc
mov
outs
or
inc
pop
sub
xchg
daa
mov
pop
jmp
in
inc
js
inc
xor
add
adc
sbb
sub
pop
push
pop
or
out
and
cmps
sub
and
cmp
ret
sti
sub
ins
adc
add
and
push
movs
cmps
sub
(bad)
xor
add
inc
cwde
pop
adc
loopne
ret
jns
add
mov
rdtsc
mov
ins
scas
je
lea
dec
adc
outs
push
push
retf
sti
rol
fiadd
or
or
or
ins
cmp
cli
xchg
push
mov
ds
cmps
adc
push
push
jl
mov
xor
add
enter
or
push
dec
or
clc
dec
dec
aam
push
pop
and
inc
inc
cmp
movs
add
xchg
jo
call
pushf
jl
xor
pop
movs
cmp
lahf
jnp
(bad)
push
call
add
mov
nop
fld
adc
adc
dec
jns
clc
sbb
ja
mov
mov
lods
xchg
mov
std
add
or
mov
jge
xor
rcl
ror
ds
je
dec
dec
add
sahf
ret
sub
ins
bound
sub
fsubr
lds
sub
test
ss
jo
adc
adc
mov
repz
jl
mov
arpl
adc
pop
(bad)
outs
add
std
pop
mov
jns
push
push
sub
add
add
out
es
mov
je
mov
push
dec
or
push
or
fadd
push
inc
xor
fld
imul
add
push
and
add
aas
mov
movs
jb
dec
add
sbb
dec
add
or
ss
adc
cmps
mov
push
popf
mov
in
pop
mov
cmp
repz
xchg
dec
hlt
lea
cmp
repnz
pop
dec
and
ror
je
or
and
fwait
shl
in
fadd
push
in
cmp
test
push
rcl
xchg
jp
sbb
je
sbb
inc
shr
(bad)
jmp
enter
sar
add
loope
dec
nop
xor
add
jmp
inc
or
add
jmp
ret
in
xor
or
or
mov
dec
dec
jbe
jmp
jbe
xchg
das
mov
jmp
mov
or
iret
addr16
pop
add
and
cwde
rcr
test
add
add
push
cmp
inc
lock
jnp
dec
sbb
or
js
inc
jmp
daa
sub
jg
clc
jb
dec
push
or
mov
lock
ret
mov
cmps
mov
and
mov
sub
push
inc
sub
add
xchg
pop
adc
push
xor
jo
fild
and
add
inc
sub
div
js
(bad)
fcomp
jo
mov
test
add
mov
xchg
pop
adc
xor
movs
mov
add
addr16
fisttp
sub
in
add
call
and
repnz
adc
paddd
xchg
rol
nop
mov
jmp
test
xchg
out
fild
sub
jge
popa
pop
push
dec
stos
sbb
adc
or
cs
cld
ret
xor
bound
mov
jmp
cmp
(bad)
cs
lea
mov
mov
stos
cmp
mov
jp
retf
mov
mov
push
dec
add
or
mov
cmp
rol
or
clc
adc
and
pushw
jmp
jae
pop
ins
fabs
mov
or
jle
sbb
cmps
je
add
sub
data16
add
test
add
mov
call
xor
cmp
push
add
addr16
ins
pop
sub
jmp
inc
add
and
in
imul
mov
cmp
retf
fisubr
push
push
dec
pop
loopne
es
lods
add
jmp
push
add
daa
and
xchg
stc
inc
push
push
fistp
lods
ret
pxor
push
imul
fisubr
sub
aaa
je
pop
inc
or
inc
adc
and
push
test
adc
mov
dec
jne
and
jge
aaa
mov
push
xor
mov
je
fiadd
jp
sbb
in
or
jne
sbb
add
inc
inc
cli
pop
pop
xor
test
fdiv
(bad)
ja
push
mov
bound
add
shr
add
add
push
adc
mov
push
dec
mov
dec
jno
retf
cmp
xor
jne
push
cmp
fs
adc
pop
call
(bad)
popa
daa
dec
js
out
xor
jmp
cs
mov
xor
movs
out
and
adc
cmp
mov
mov
cmp
mov
cmp
or
or
and
mov
pop
mov
and
ins
call
jle
popa
ret
mov
sub
cmp
lea
dec
ins
jnp
mov
add
sub
and
shl
ja
cmp
unpckhps
imul
xor
cmp
ficom
lea
cmp
out
mov
fwait
jmp
addr16
clc
dec
ja
js
dec
xor
gs
iret
push
nop
loop
adc
cmc
or
mov
mov
xchg
mov
dec
pop
push
or
cmp
cld
mov
ss
xlat
add
fadd
cmp
popa
pop
mov
add
jle
cmp
pop
test
repnz
ds
(bad)
dec
aad
add
imul
mov
in
lods
ret
(bad)
and
cmp
jne
or
push
mov
adc
mov
inc
daa
cmp
loop
push
xchg
inc
pop
sbb
sbb
inc
mov
icebp
pop
adc
pushf
sbb
(bad)
nop
or
sub
hlt
inc
lods
push
and
sbb
add
xor
dec
cld
xor
adc
and
adc
push
jno
cmp
cs
sbb
cs
or
sbb
(bad)
lea
mov
mov
fdivr
cmp
and
add
add
scas
pop
push
loopne
add
pop
popf
ins
in
and
mov
push
mov
cmp
adc
push
or
push
or
dec
push
stos
mov
adc
or
mov
dec
cmp
imul
scas
and
lock
shr
pushf
sbb
adc
enter
mov
push
adc
jo
js
or
push
push
shl
and
mov
call
sub
mov
rol
xchg
cmc
fidiv
pop
inc
test
add
mov
cmp
sar
(bad)
dec
mov
mov
and
adc
call
stos
leave
inc
push
sub
std
push
(bad)
out
repz
fs
sbb
loop
mov
shr
jp
int
pop
call
adc
in
cmp
or
push
sub
movs
cmp
dec
dec
das
or
cwde
(bad)
adc
mov
(bad)
in
or
or
dec
loope
xchg
adc
mov
and
inc
ret
jne
and
sar
cli
and
and
push
cs
mov
or
jne
mov
push
adc
cmps
jge
dec
rol
xor
push
push
rcr
ret
jmp
ret
into
arpl
pop
retf
arpl
mov
rol
jbe
imul
inc
mov
fdivr
cmps
les
dec
dec
sbb
inc
lock
xchg
imul
ror
jl
test
pop
add
jge
test
pop
aas
dec
int3
dec
push
xchg
test
pop
sbb
rcl
sbb
inc
adc
jne
call
call
push
push
fcomp
xor
dec
dec
adc
(bad)
arpl
out
in
mov
call
add
repnz
xchg
inc
and
mov
xlat
jle
sub
jnp
lods
jo
hlt
fs
jbe
or
mov
inc
bound
mov
ja
and
cmp
add
inc
in
inc
xchg
mov
cmp
call
sahf
bound
cli
mov
or
call
mov
and
ret
(bad)
shr
pop
mov
add
in
fild
cmp
add
mov
and
or
pop
fstp
test
inc
add
lahf
retf
shl
dec
xchg
mov
sbb
inc
les
popf
bound
out
inc
out
inc
pop
add
sub
lock
cmp
mov
enter
push
xor
or
mov
sbb
jmp
mov
(bad)
(bad)
sub
and
fsub
mov
call
sub
sbb
inc
cmp
mov
add
jne
ror
mov
aad
dec
and
cwde
add
add
or
mov
or
add
push
jle
jns
dec
inc
test
jne
cs
cmps
xor
rcr
fsub
push
sub
push
inc
jns
(bad)
pop
mov
outs
dec
jbe
mov
add
add
and
les
add
sbb
mov
push
jmp
jmp
jns
xchg
push
and
test
mov
stc
lock
arpl
jecxz
popf
ss
je
cs
push
push
popa
dec
fimul
pop
nop
hlt
jmp
inc
int
retw
push
ficom
imul
adc
sar
push
lea
mov
or
test
(bad)
mov
mov
and
loop
push
loop
mov
mov
test
sar
inc
mov
(bad)
(bad)
sbb
sti
pusha
push
repnz
retf
add
xor
call
push
pop
sahf
(bad)
push
or
push
js
xchg
call
fistp
push
scas
cmp
mov
mov
xor
and
xor
inc
mov
add
xor
loope
scas
xchg
cmp
mov
push
jmp
shr
sbb
retf
shl
jle
ret
js
xchg
or
jge
xchg
je
ret
int3
scas
scas
and
mov
int3
sbb
pop
iret
xor
js
push
in
xor
adc
and
cmc
push
add
ficom
jne
pop
popa
sub
scas
fldenv
mov
sub
aam
sbb
pop
mov
test
inc
js
test
dec
pop
adc
loopne
and
mov
icebp
je
mov
and
pop
dec
ret
mov
mov
mov
jae
dec
(bad)
test
je
or
adc
mov
lahf
pop
mov
arpl
mov
add
movs
mov
mov
xor
sbb
in
push
call
sbb
mov
add
test
fist
add
test
mov
fistp
mov
inc
jb
or
xor
and
in
test
lock
mov
mov
cli
data16
sub
popf
push
xchg
ret
cmps
push
ret
and
out
aam
es
pop
outs
movs
shr
add
jle
or
sbb
mov
add
sub
ins
pop
outs
pop
add
or
rol
mov
mov
(bad)
rol
pop
jmp
repnz
wbinvd
adc
icebp
mov
jae
rol
rol
retf
rcl
je
ret
adc
adc
sub
jno
sbb
pop
push
bound
adc
or
jbe
mov
out
pushf
or
pop
mov
pop
ffreep
pop
imul
fcmovb
mov
or
(bad)
jle
mov
ficomp
(bad)
and
outs
and
jno
ins
dec
out
call
test
call
(bad)
pop
push
pop
int3
loope
mov
push
push
nop
push
jmp
pusha
push
adc
arpl
xor
ficomp
jo
mov
aam
jns
cmp
loope
jmp
pop
sbb
xchg
call
or
mov
cmp
test
std
pop
pop
xchg
adc
in
loop
mov
rol
dec
dec
ret
adc
mov
mov
mov
adc
or
or
rol
push
daa
call
call
jnp
sub
push
je
add
mov
outs
call
jl
arpl
gs
stos
or
dec
ds
pop
inc
inc
cmp
shl
test
or
mov
mov
jge
push
jb
xor
pop
mov
inc
xchg
ja
and
push
sbb
ret
sbb
xchg
rol
add
gs
push
call
pop
or
shl
mov
jmp
cmp
pop
adc
aam
pop
mov
and
fild
inc
sub
leave
mov
mov
sbb
mov
lea
mov
mov
cmp
xor
jge
add
ret
imul
cmp
jb
or
or
jo
mov
mov
inc
jo
test
ss
dec
loop
sti
adc
push
jmp
and
jmp
lods
rol
sub
pop
dec
and
adc
call
and
jmp
pusha
mov
pop
inc
repnz
in
ror
xor
push
fiadd
fsubr
pop
or
(bad)
setno
enter
addr16
jmp
xchg
jno
inc
adc
inc
jo
call
sub
dec
fld
xor
invd
add
aam
xor
or
int3
sub
xchg
xchg
mov
and
mov
inc
daa
icebp
or
outs
cmp
mov
push
icebp
adc
sti
retf
mov
(bad)
jbe
add
sbb
test
mov
popa
adc
cmp
push
pop
sbb
dec
cmc
data16
loopne
jbe
mov
je
mov
jb
pop
movs
push
ret
hlt
push
aaa
sub
xchg
cmp
sbb
push
ja
call
js
pop
dec
mov
pop
mov
mov
xchg
xor
lea
fadd
ret
xor
adc
add
sub
mov
jo
je
sub
es
push
nop
retf
je
or
add
pop
adc
jae
sti
(bad)
retf
push
out
xchg
mov
jmp
in
inc
mov
xor
jp
pop
jae
daa
inc
or
loopne
cmp
adc
(bad)
mov
or
push
or
and
and
push
push
cmp
sar
rcr
icebp
add
add
jmp
cs
out
jo
mov
push
or
mov
mov
sbb
out
(bad)
pop
fisttp
push
push
jno
call
jmp
ja
std
int3
mov
inc
call
and
inc
mov
test
lock
js
test
or
jmp
call
mov
cmp
mov
cmp
or
push
push
push
stc
sbb
jg
movs
add
test
in
jecxz
ss
sti
dec
push
dec
js
push
jg
or
lds
fistp
xchg
add
jns
sbb
shr
xchg
out
xchg
add
call
dec
adc
push
inc
cmps
loop
lds
in
jae
push
popf
aas
jo
and
std
jns
sbb
sub
lock
aaa
dec
cwde
push
jnp
jbe
jb
add
adc
sub
jmp
(bad)
pop
adc
fiadd
add
mov
loop
mov
mov
outs
fnstenv
jp
jae
or
push
pop
sbb
pop
ret
adc
test
fidivr
push
movzx
and
or
push
call
push
movs
mov
xchg
push
cmp
xchg
lea
mov
das
xchg
jl
add
add
call
jmp
xor
das
adc
mov
mov
ins
and
add
mov
xor
jp
movs
push
cmps
pop
inc
or
mov
mov
pushf
or
aaa
xchg
inc
cmp
push
inc
sar
push
daa
dec
push
mov
xchg
dec
bound
dec
jg
add
imul
sbb
lahf
mov
lods
dec
dec
cmps
out
mov
retf
pop
je
inc
push
sub
fisub
ficom
push
mov
add
je
leave
and
pop
hlt
dec
push
dec
add
retf
mov
or
mov
inc
cmp
cs
mov
imul
cmp
jecxz
xchg
xor
gs
movs
cmp
mov
test
stc
int3
(bad)
inc
sbb
aas
cld
mov
mov
mov
stc
daa
mov
add
mov
push
xor
fs
push
clc
cmp
call
adc
jnp
inc
in
(bad)
push
scas
and
sub
or
call
call
xor
pusha
push
lds
add
stos
dec
or
repz
into
lock
or
repz
or
jl
clc
fwait
xor
and
retf
push
mov
push
lea
ins
push
popa
mov
rol
add
mov
pusha
paddsw
lahf
jmp
xchg
mov
xor
repz
and
in
js
and
sbb
adc
jne
sub
scas
mul
add
mov
sar
and
(bad)
cmp
add
repz
adc
mov
jns
mov
xchg
and
and
adc
jne
push
or
pop
pusha
dec
nop
or
cdq
add
mov
scas
and
por
mov
add
stos
add
pusha
jo
es
push
inc
dec
dec
dec
retf
sub
cmp
popa
mov
pusha
movs
mov
or
js
int3
jmp
mov
sbb
xchg
cld
jb
jne
push
clc
jbe
inc
xor
call
dec
loopne
mov
jo
xor
jbe
inc
lods
or
adc
shl
cld
std
mov
mov
add
loopne
mov
sbb
xlat
ja
shr
push
mov
es
(bad)
add
mov
clc
fld
add
(bad)
cmp
movs
cmp
in
pushf
ret
or
(bad)
mov
sbb
ins
test
lds
push
dec
iret
sbb
in
jno
adc
push
jb
retf
out
xchg
or
push
ret
rol
dec
(bad)
arpl
adc
jnp
inc
mov
mov
dec
sbb
in
je
idiv
getsec
repnz
out
push
cmp
ja
add
cmp
adc
lahf
ret
(bad)
cmp
jne
shr
add
in
mov
inc
mov
rcr
sbb
adc
jle
and
xchg
xchg
ja
inc
jo
aam
repnz
push
loopne
push
loope
jbe
retf
add
arpl
icebp
cwde
inc
mov
ret
mov
cdq
push
push
push
adc
adc
cdq
fs
ja
ss
sbb
mov
jg
pop
xchg
movs
fwait
adc
inc
bound
xchg
xor
dec
in
sbb
adc
inc
and
dec
inc
sbb
inc
mov
movs
cmp
or
xor
in
sbb
add
or
pop
daa
push
rcl
push
xor
popa
fistp
sub
mov
out
add
sbb
push
fmulp
sbb
fistp
jns
sahf
jbe
clc
cmps
adc
ss
dec
test
test
ss
pushf
das
dec
movs
repnz
push
rcr
or
sub
mov
enter
jmp
sbb
mov
popf
in
or
adc
clc
jb
sbb
lock
repz
pop
rcr
popf
xlat
and
dec
les
test
push
sahf
arpl
outs
mov
jns
pop
shl
cmp
pop
push
fiadd
dec
cs
cmp
aam
fcmovnbe
or
push
sub
pop
cld
add
push
dec
fldcw
or
jmp
jmp
lahf
mov
in
mov
out
adc
sbb
cdq
sbb
icebp
sub
jae
xchg
out
and
mov
xor
jo
rcl
setp
dec
jmp
push
pop
icebp
pop
mov
neg
call
sbb
inc
stc
jbe
fnsave
sbb
xchg
lds
inc
addr16
(bad)
es
add
dec
pop
sub
lds
add
enter
cmp
pop
(bad)
(bad)
push
or
les
push
pop
sub
mov
mov
(bad)
movs
xor
pop
ret
das
xchg
out
gs
and
xor
(bad)
ror
pop
add
xchg
push
dec
test
sbb
dec
fidivr
mov
loope
pop
mov
jl
mov
(bad)
and
clc
test
retf
cmp
std
xchg
inc
mov
adc
js
add
repz
enter
push
scas
cmp
repz
bound
je
test
repz
sub
repz
ss
inc
pop
data16
out
jnp
ds
mov
inc
fimul
push
push
mov
mov
jbe
push
jb
mov
mov
mov
sahf
out
adc
xor
pop
iret
jnp
out
or
call
or
sahf
out
inc
pop
outs
sbb
(bad)
fsub
repnz
sar
adc
inc
dec
repz
repz
mov
iret
aam
cli
or
sbb
and
cmp
repz
push
push
iret
mov
mov
scas
(bad)
sbb
push
fidivr
repz
jae
cmp
(bad)
mov
inc
add
pop
inc
add
js
fidivr
cmc
lds
ficom
ds
imul
ds
dec
mov
test
lahf
movs
movs
out
fld
or
inc
jge
pop
dec
inc
xor
test
dec
dec
bound
and
ds
inc
xor
push
pusha
pop
inc
sub
ret
push
xchg
and
mov
ffreep
pop
xchg
int
pop
adc
in
sbb
in
outs
int
arpl
pop
or
sbb
jns
out
sub
cmp
cmp
dec
push
add
ja
popa
pop
movs
dec
outs
fbld
ja
popa
sub
cmp
in
sub
out
fimul
add
add
or
jp
and
xor
dec
push
jle
or
xor
test
jp
inc
dec
fs
push
test
push
inc
mov
fisttp
loopne
sbb
adc
les
adc
inc
cwde
pop
or
ret
xchg
mov
adc
push
outs
div
imul
push
push
cmp
adc
sbb
cmp
pop
ror
(bad)
pop
ret
adc
nop
out
inc
daa
push
adc
cmp
inc
lods
push
mov
aaa
nop
push
dec
dec
dec
inc
push
inc
push
pop
inc
xchg
(bad)
fld
push
pop
dec
dec
dec
inc
push
inc
inc
pop
cmp
data16
cwde
fs
div
mov
push
inc
enter
xchg
inc
and
imul
inc
xor
mov
adc
jge
push
mov
xchg
push
sbb
push
pop
stos
lea
cdq
cmp
xchg
mov
dec
mov
test
cmp
xchg
dec
cs
adc
add
add
inc
rol
adc
add
fs
add
add
or
(bad)
jmp
mov
test
mov
sub
push
shr
and
je
add
xchg
or
mov
jmp
inc
inc
dec
adc
adc
sbb
jge
pop
clc
push
xchg
(bad)
sub
inc
ins
xor
out
cmps
punpcklwd
dec
xor
inc
mov
xchg
add
sub
enter
push
mov
retf
xchg
pop
push
jp
xor
popa
retf
ins
cmp
nop
dec
pop
imul
push
push
inc
cmp
aad
sub
push
adc
aas
int
pop
sbb
xor
adc
mul
sub
sub
add
movs
jg
fisttp
push
mov
daa
cmps
ins
mov
ins
push
add
jae
or
fs
pop
xchg
test
and
dec
test
and
push
(bad)
or
add
mov
jnp
dec
out
bound
push
pop
xchg
dec
daa
xor
sub
xor
imul
push
jbe
xor
xchg
pop
mov
dec
dec
sahf
xlat
lock
outs
dec
sub
xchg
call
ret
ins
call
lahf
add
add
in
lods
push
dec
or
adc
inc
daa
shl
test
fbstp
movzx
fwait
dec
adc
push
or
add
sahf
outs
fist
fld
in
scas
xor
sub
xor
mov
pop
xchg
aas
cs
rol
inc
or
daa
outs
add
add
cmp
jbe
dec
xor
push
aas
xchg
cs
fcomp
and
fild
dec
fist
scas
jne
push
shl
fidiv
jb
jne
jb
fld
xchg
popa
imul
js
das
mov
loop
mov
or
mov
ffreep
ss
mov
lahf
outs
aas
leave
add
arpl
imul
xlat
(bad)
in
dec
rcl
pop
xchg
xor
mov
imul
shl
push
mov
mov
sbb
jecxz
stos
pop
das
jae
ret
push
lods
sbb
add
aas
pop
sbb
push
inc
pop
fisubr
adc
mov
enter
cmp
add
mov
je
jg
xor
test
dec
sbb
xlat
push
nop
call
int3
addr16
add
sahf
out
jmp
outs
push
enter
imul
adc
dec
push
je
je
jae
jns
cmps
push
sbb
adc
int
cmp
mov
cs
push
push
call
jo
push
sahf
cmps
xor
and
jns
out
sahf
jnp
iret
push
cld
and
sub
xchg
jbe
loopne
imul
xor
push
push
mov
enter
dec
jp
je
or
add
dec
and
loopne
jae
xor
bound
ret
inc
add
push
fwait
cmp
mov
or
sbb
xchg
pushf
xchg
lea
mov
and
in
xchg
pop
xchg
xchg
mov
and
cs
mov
sahf
or
dec
ins
or
and
xor
daa
cli
add
int
cdq
mov
dec
adc
adc
jbe
in
imul
sub
inc
or
add
int
xor
mov
mov
push
sbb
imul
jne
adc
scas
jno
add
sbb
mov
jo
jo
std
jo
xor
jle
test
jo
stc
xor
imul
sbb
popa
pusha
(bad)
push
jb
push
pop
sti
ret
loope
cmp
push
js
xor
jo
ret
and
mov
jae
or
test
xchg
mov
inc
xchg
daa
scas
xor
or
fiadd
pop
ins
xor
or
or
add
sbb
add
xor
add
pop
ja
rcl
ret
add
(bad)
sub
imul
inc
fisub
test
pop
test
adc
push
(bad)
sbb
push
push
sahf
ins
pop
add
add
xor
mov
outs
js
or
push
push
xor
inc
xchg
dec
sbb
push
adc
fadd
push
out
dec
imul
or
mov
movs
pop
mov
ins
loopne
adc
pop
nop
mov
sub
inc
sbb
push
dec
mov
and
xchg
nop
in
arpl
xlat
rol
rcl
lds
dec
dec
cmps
(bad)
sbb
add
push
xor
dec
dec
add
pop
aad
or
cwde
inc
adc
or
inc
call
es
pop
stos
add
(bad)
aam
call
xchg
pop
push
rol
adc
dec
pusha
dec
mov
add
out
pop
inc
add
pop
pop
(bad)
fnsave
jns
call
xor
push
add
push
rol
pop
lahf
mov
inc
adc
and
xor
neg
iret
arpl
mov
(bad)
jg
iret
sahf
inc
cmp
cmp
dec
and
xor
add
push
das
das
adc
cwde
adc
inc
mov
sub
xor
ror
sub
or
aad
bnd
mov
js
fisubr
outs
xchg
inc
adc
cli
arpl
(bad)
fidivr
inc
ficom
out
scas
cmps
xchg
pop
pushf
jae
jg
addr16
aas
jae
gs
fmulp
je
and
daa
push
out
clc
sbb
not
adc
and
jbe
ja
pop
dec
inc
aas
add
mov
cdq
or
sbb
popa
mov
scas
scas
sbb
xor
pusha
es
shr
outs
inc
jae
push
dec
push
pop
popa
pop
cs
and
ins
xor
popa
imul
lods
(bad)
sub
jb
sar
cmp
and
push
gs
jp
or
mov
push
in
out
push
ins
daa
adc
push
xlat
enter
add
shr
cs
arpl
cdq
cmp
and
aam
push
push
add
adc
xchg
push
push
jmp
dec
xchg
add
ins
mov
fsub
popa
sbb
add
inc
lahf
and
and
push
movs
sbb
cmps
popa
imul
cli
popa
pop
or
(bad)
or
sub
mov
js
pop
jbe
fstp
cs
jae
push
rcl
adc
xor
cwde
adc
and
mov
dec
stos
test
daa
arpl
loopne
leave
push
push
fdiv
in
mov
inc
and
ins
and
div
gs
fcmovb
das
test
jbe
pop
jb
je
cmp
call
mov
outs
imul
sbb
inc
sbb
imul
push
jae
daa
mov
mov
jge
mov
imul
jmp
ins
jne
sub
ret
addr16
enter
das
and
daa
cdq
mov
aad
loopne
rcr
mov
(bad)
pop
(bad)
daa
inc
xlat
call
pop
mov
sub
dec
dec
es
pop
push
das
mov
pop
push
cmp
aas
(bad)
push
sbb
rcr
add
jg
outs
pop
cmp
aaa
or
adc
fs
xchg
pop
add
cmps
adc
push
pop
and
imul
popa
lock
daa
push
dec
jae
add
daa
pushf
dec
mov
clts
and
ins
push
call
in
inc
into
sub
std
fsubr
pop
ins
test
test
iret
xchg
fucomi
push
cmove
cmp
xor
cld
sti
repnz
inc
add
add
push
pop
dec
dec
add
add
jnp
pusha
or
add
in
sbb
sti
aaa
cmp
cmp
pop
push
add
fwait
std
sbb
xchg
add
maxps
pop
dec
add
add
add
in
das
push
add
push
add
add
sub
paddq
inc
add
inc
add
dec
add
inc
inc
add
repnz
add
add
dec
cmp
jb
scas
stc
push
dec
push
sub
dec
dec
push
add
add
call
push
push
fmul
ins
jl
repnz
dec
enter
mov
add
inc
add
fs
add
stc
repnz
add
add
dec
add
dec
add
xchg
das
push
jle
add
or
inc
add
pop
stc
repnz
add
push
add
mov
fsubr
jl
add
into
jo
scas
ins
sbb
in
pop
push
scas
push
call
inc
dec
sub
loop
ss
sub
and
call
mov
sahf
dec
dec
or
pop
out
jnp
fimul
paddb
lock
push
dec
add
push
push
dec
add
pop
inc
inc
add
dec
clc
pushf
fcomp
sahf
mov
movs
nop
push
push
cmp
outs
ins
fild
dec
push
pop
test
(bad)
pop
adc
add
or
adc
sbb
add
dec
dec
or
sub
xchg
pop
jnp
add
lea
pop
sbb
add
add
jmp
pop
imul
push
and
push
pop
pop
or
mov
add
push
push
pop
scas
push
add
jge
stc
or
pusha
add
js
js
pop
sub
pop
js
add
add
inc
loopne
xchg
mov
lods
jmp
adc
add
das
sbb
jns
and
and
jp
and
cmp
mov
dec
inc
pop
bound
xchg
and
add
mov
inc
mov
stos
and
sub
in
and
test
jb
cmp
shr
test
jbe
and
int
or
and
in
fisub
sub
xchg
pusha
inc
jbe
(bad)
push
mov
lahf
fs
xchg
jb
push
jp
ds
dec
or
push
pop
loopne
push
xor
and
push
and
sbb
dec
dec
(bad)
xor
enter
xor
push
mov
add
cmp
xchg
shl
pusha
ins
call
push
dec
push
add
loope
das
dec
adc
mov
mov
or
xchg
inc
push
push
xchg
ret
mov
test
jnp
adc
inc
cmp
fild
dec
jge
inc
dec
pop
jno
mov
call
inc
mov
jg
ret
push
inc
outs
jae
inc
js
xchg
ret
sub
push
in
pusha
lds
inc
aad
dec
pusha
push
or
pop
jne
pop
das
je
outs
xchg
ret
daa
xchg
mov
popw
int
sahf
neg
push
jl
cmp
cmp
sar
push
sub
jl
retf
frstor
push
les
xlat
add
cmp
iret
ds
xor
add
sub
sub
popf
xlat
sub
sub
inc
(bad)
jp
pop
inc
and
inc
je
lahf
cmp
or
mov
dec
xchg
inc
iret
push
jb
imul
adc
xor
lods
imul
enter
popaw
sbb
(bad)
xor
pop
test
cmp
jo
sub
sub
jl
mul
cmp
aad
lea
pop
dec
iret
repz
inc
xor
and
or
mov
cmp
sahf
arpl
mov
js
sahf
div
in
(bad)
jnp
out
int3
enter
push
ror
mov
lods
out
iret
repz
mov
jns
xchg
nop
mov
sahf
repnz
push
je
ins
sahf
out
sahf
push
push
jns
out
dec
cmp
sub
repz
out
lock
mov
out
cmp
jo
sub
in
mov
movs
mov
ins
jns
out
pop
cmp
and
repz
repz
mov
mov
pusha
cmp
ds
xor
hlt
mov
push
movs
js
mul
pop
mov
push
sub
sbb
xchg
and
inc
dec
sbb
pop
into
pop
retf
das
mov
outs
sub
inc
and
ss
cdq
xor
push
les
(bad)
mov
push
add
or
fcom
adc
xchg
repnz
hlt
or
adc
sub
push
push
inc
pop
clc
push
push
and
cmp
jb
push
stos
cmp
pop
js
jo
add
into
(bad)
pop
xlat
jnp
push
mov
dec
not
add
mov
xchg
xchg
pop
aaa
cs
add
adc
adc
dec
ja
mov
ja
pop
xor
mov
nop
ja
dec
mov
add
inc
(bad)
mov
mov
xchg
xor
ret
das
or
inc
push
sub
or
mov
push
add
cmp
verr
mov
pop
adc
xchg
cmp
dec
fld
pop
pop
repz
push
mov
mov
adc
test
inc
pop
xchg
fs
xchg
popa
mov
cmp
(bad)
scas
mov
jp
lods
iret
ins
popf
cmps
in
inc
fnstcw
sbb
fucomip
push
dec
sbb
fisub
xchg
cs
lahf
pop
in
repz
push
and
and
jle
fwait
jle
fs
cmp
fwait
xor
movs
jge
out
push
jecxz
and
rol
mov
pop
sbb
xor
or
push
and
xor
adc
(bad)
into
and
fisubr
xor
sbb
or
std
ins
inc
and
jg
pop
sbb
add
mov
shl
cmove
rcr
cmp
(bad)
shl
push
fcomp
cmp
ins
sub
jnp
repz
xor
iret
repz
lods
push
f2xm1
sbb
out
call
cwde
vmovss
adc
out
pop
call
ret
sbb
fistp
push
call
inc
inc
sbb
or
lods
stos
test
out
inc
test
inc
dec
cs
dec
push
push
addr16
xchg
sub
push
popa
pusha
shr
dec
hlt
pop
loop
xor
ja
gs
sub
add
sbb
add
aas
push
mov
push
addr16
outs
cmp
dec
pop
jnp
add
sbb
add
xchg
aam
shr
imul
aaa
fidivr
ins
dec
cmps
addr16
cmp
daa
and
mov
rcl
jb
push
lock
xchg
or
push
sbb
pop
enter
outs
ins
add
push
pop
xchg
aaa
dec
jns
mov
add
cmp
repnz
adc
add
int3
mov
cmp
call
and
aaa
fcomp
test
cmp
inc
dec
or
ja
repz
iret
sub
daa
mov
mov
fwait
sub
js
imul
pushf
shr
mov
call
or
fdiv
es
push
cmp
mov
mov
aas
(bad)
addr16
ins
dec
daa
pusha
les
cwde
dec
adc
ins
cwde
test
daa
es
push
enterw
sub
cmps
adc
mov
add
inc
icebp
or
(bad)
sbb
lahf
fdivr
(bad)
push
repnz
adc
cmp
rcr
mov
(bad)
adc
lods
iret
dec
lahf
ja
cmp
sti
aas
test
pushf
add
les
pop
jb
mov
mov
clc
mov
mov
mov
mov
sub
shr
aas
add
mov
dec
mov
inc
fidivr
es
xchg
call
out
imul
cmovg
sub
fsub
(bad)
dec
enter
cld
adc
and
cdq
xchg
push
mov
fdiv
fwait
ja
outs
adc
and
mov
imul
dec
es
pop
xor
enter
imul
push
clc
push
jo
push
push
add
aaa
add
imul
jecxz
rcl
push
retf
pop
ins
and
mov
aaa
enter
iret
xchg
add
mov
cmp
xor
lods
push
in
daa
in
ret
scas
out
enter
and
test
popf
adc
sbb
ror
push
pop
leave
imul
jnp
fidiv
cmp
nop
push
rol
enter
pushf
das
add
mov
dec
enter
call
shl
jae
mov
jne
cmp
push
push
jbe
mov
cmp
out
adc
scas
shl
jns
iret
not
push
ss
xchg
jns
test
ins
xchg
(bad)
repz
fild
inc
add
xor
cwde
push
mov
xor
fs
lock
fsub
inc
dec
cs
or
sbb
inc
push
ss
imul
add
inc
jae
sbb
imul
jmp
(bad)
aam
in
jnp
pop
mov
pop
xchg
adc
mov
pop
mov
inc
dec
and
cmps
xor
and
fs
mov
and
fmul
adc
imul
jg
or
sar
es
pop
push
dec
fcomp
add
imul
sbb
mov
adc
push
jecxz
aaa
and
daa
xor
jmp
aas
es
jl
dec
xor
jl
or
jg
jns
sar
stos
mov
popf
add
in
push
lock
in
les
and
xchg
xchg
popf
xchg
test
in
inc
push
pop
ins
xchg
outs
lds
popf
cmp
mov
in
cs
movs
inc
pop
out
and
movs
push
pop
pop
xor
sbb
lods
pop
shl
add
mov
popa
daa
fimul
mov
xchg
pushf
push
lds
mov
bound
into
aas
ror
int
iret
inc
iret
mov
popf
push
mov
shl
icebp
jg
cmc
jg
(bad)
sbb
fistp
ss
push
enter
(bad)
in
sub
mov
in
cs
bndldx
or
pop
ss
(bad)
std
inc
ins
ret
push
xchg
arpl
aaa
rcl
pop
mov
outs
hlt
pop
mov
pop
ins
in
xor
aaa
cmp
sbb
adc
daa
push
ror
daa
cmc
ins
in
in
cmps
outs
adc
in
and
xor
add
outs
(bad)
(bad)
push
loopne
cmp
in
cmps
fsub
cld
cmps
scas
(bad)
xchg
xchg
pushf
xchg
xor
cmps
in
enter
inc
pushf
das
nop
xchg
dec
mov
data16
xor
add
add
fmulp
test
xchg
cmp
sbb
xchg
jp
lea
cmp
cwde
mov
mov
jl
mov
xchg
out
test
stos
nop
test
add
mov
xor
(bad)
sbb
xlat
hlt
repz
test
jb
loopne
pop
adc
outs
sub
pop
fwait
dec
dec
pusha
test
pop
jb
jle
jb
pop
jb
in
cs
dec
pop
adc
enter
outs
bound
xchg
push
push
add
jno
pmaxsw
xchg
stos
pop
aam
mov
xchg
loopne
pushf
in
stos
fsubr
xchg
test
inc
shr
into
lds
int
xchg
add
jmp
sbb
fnsave
push
out
xchg
imul
ret
outs
cli
fmul
pop
inc
out
mov
pushf
add
hlt
add
fist
add
cmps
adc
scas
adc
lods
mov
ins
dec
nop
or
xor
pop
fadd
icebp
add
and
cdq
and
or
dec
adc
mov
push
add
lods
das
add
add
push
stos
or
or
ins
sub
push
mov
outs
data16
aad
test
push
add
addr16
jo
push
arpl
xchg
ins
and
cdq
add
push
add
inc
sbb
pop
or
shr
cmc
(bad)
test
adc
pop
push
dec
sbb
push
cmps
sub
jno
daa
sbb
push
push
fadd
add
xor
xchg
push
popa
add
bound
jg
adc
mov
js
add
gs
mov
sbb
or
test
mov
xchg
inc
push
inc
xor
dec
pusha
adc
inc
push
and
shl
add
ins
data16
adc
push
push
das
outs
sub
add
push
fwait
(bad)
and
xchg
add
je
push
icebp
cmp
movs
pop
add
sbb
cmp
lahf
cmp
adc
je
push
outs
ja
add
add
or
or
push
cmp
loop
popa
pusha
adc
mov
(bad)
not
xchg
das
out
or
add
sub
add
das
jmp
xor
cmp
into
loop
inc
inc
jae
adc
iret
test
mov
jecxz
test
leave
cmp
cmp
push
push
shl
div
add
xor
push
jbe
scas
cmp
add
popf
cmps
or
sbb
jb
dec
xchg
popf
pop
popa
not
popa
jmp
fild
xchg
punpcklbw
push
test
push
cmps
cmp
xchg
inc
xor
mov
jbe
and
cmc
vcvtss2si
jo
dec
(bad)
push
sub
sbb
push
or
ds
sbb
fidiv
popf
add
jne
push
add
push
push
cmps
xor
pop
pop
dec
mov
jb
popa
cwde
inc
or
jno
jecxz
mov
and
arpl
cmp
add
sub
and
call
in
shl
bound
int3
push
adc
mov
add
jae
inc
or
loope
cmp
and
mov
mov
data16
mov
push
add
xchg
repz
inc
mov
jb
sti
xchg
or
jmp
aad
cmp
jno
jae
fisub
xor
jmp
or
pusha
dec
icebp
pusha
pop
or
and
add
pop
pop
test
push
jmp
sbb
lods
mov
xchg
pushw
mov
jmp
aaa
dec
dec
inc
dec
pop
or
dec
xor
or
adc
sub
add
or
cmp
sahf
adc
nop
or
call
scas
es
(bad)
ret
aas
add
and
jnp
xchg
fdiv
cmp
adc
push
dec
dec
add
add
in
inc
(bad)
fsub
aas
inc
push
or
inc
add
and
and
inc
mov
or
inc
ins
sar
pop
pop
push
add
rcr
arpl
mov
dec
bound
outs
iret
xor
pop
pop
(bad)
(bad)
xchg
adc
ins
mov
das
mov
dec
sbb
or
dec
outs
adc
ret
ret
push
inc
mov
sbb
inc
adc
pop
das
lds
jmp
add
xchg
lock
sub
or
cld
push
cs
test
cmps
xchg
pop
sub
sub
add
outs
mov
imul
add
xchg
dec
mov
cmp
push
jbe
and
addr16
test
dec
sub
imul
js
in
sgdtd
not
mov
cwde
add
call
mov
dec
pop
xor
mov
test
fild
repnz
clc
mov
mov
ret
pop
add
add
sbb
sub
and
in
push
or
or
aaa
outs
mov
leave
or
adc
fucom
frstor
adc
adc
and
pop
inc
inc
push
addr16
fucomi
jbe
das
push
xorps
in
sahf
sub
jo
jb
jbe
in
push
pop
and
cmp
mov
(bad)
xchg
push
sub
mov
loope
shl
sbb
pusha
add
addr16
lds
mov
mov
pop
stos
mov
mov
sahf
aas
mov
mov
int
jns
dec
sub
add
jp
cmp
repz
movs
nop
test
iret
repz
dec
cmp
imul
iret
sbb
jns
lods
jns
sahf
out
outs
pushf
push
test
pop
dec
inc
fcmovu
leave
repz
xor
paddsb
fadd
test
js
sub
pop
popa
sub
ins
jg
cmp
repz
fs
pop
pop
push
repz
repz
inc
cmp
and
repz
sbb
or
add
sahf
out
ds
jle
hlt
lock
jns
out
call
out
sahf
out
mov
out
sahf
movs
cwde
nop
test
jl
out
jo
push
inc
or
jns
je
cmp
xor
and
push
jns
sbb
or
inc
fsub
jns
out
mov
nop
mov
jo
pusha
pop
pop
repz
repz
dec
inc
cmp
sbb
cmp
and
hlt
jl
push
sahf
out
(bad)
push
int3
mov
sahf
out
js
pop
xor
add
adc
ja
or
cmp
add
pop
dec
jnp
retf
or
inc
and
into
mov
leave
pop
xor
xchg
icebp
dec
(bad)
aaa
lahf
outs
and
xchg
fwait
push
jg
lods
pop
mov
sbb
adc
inc
add
add
add
add
and
adc
aas
or
call
adc
aas
mov
movs
add
inc
into
mov
sbb
sub
cdq
or
leave
in
cmp
and
mov
iret
mov
in
call
std
dec
jle
adc
push
ficomp
mov
xor
std
xchg
rcr
fsubp
stc
jb
jle
add
adc
js
jbe
popa
dec
nop
adc
pop
add
jns
adc
mov
jg
jmp
and
pushf
inc
inc
mov
aaa
push
xor
daa
dec
test
aas
(bad)
jle
add
arpl
adc
shl
inc
cli
inc
dec
jmp
rcr
xchg
bound
push
xchg
bound
mov
scas
popf
adc
push
retf
in
sbb
sbb
push
popa
test
outs
add
inc
retf
jnp
data16
xchg
add
ins
rcl
jns
inc
add
mov
jb
lods
cvtps2pd
jb
mov
lods
jbe
mov
aaa
xor
mov
sub
fnstcw
add
xchg
mov
xor
jp
scas
xor
inc
mov
scas
sbb
inc
pop
add
cmp
add
es
(bad)
jg
jae
rcr
rcl
mov
ds
cmp
pop
mov
push
shr
lahf
aaa
adc
cmp
int
or
outs
rcl
xor
cmc
sbb
das
lods
jge
cmp
sbb
repz
jp
ds
repnz
out
out
add
out
ss
ds
xor
push
mov
xchg
int
xor
add
dec
shl
and
push
sub
in
ja
add
add
push
and
cmp
fldenv
and
rcr
mov
mov
sahf
and
pop
iret
popa
addr16
pop
or
and
adc
stos
pusha
(bad)
mov
and
inc
setge
adc
dec
cmp
dec
shl
les
mov
dec
cmp
push
xor
dec
rcl
mov
aaa
xor
aaa
push
pmaxub
pop
pusha
movq
ret
inc
xchg
or
xchg
lock
mov
movs
cmovo
sub
stos
xor
mov
bound
dec
cmovs
push
mov
or
push
dec
lahf
or
dec
mov
dec
sub
adc
jmp
pop
call
iret
dec
arpl
inc
mov
dec
or
mov
add
cmp
je
dec
mov
inc
push
jg
and
inc
add
ret
pusha
pop
enter
dec
pop
rcl
add
jne
inc
push
dec
mov
lock
mov
mov
dec
mov
pop
cmp
pop
pop
sub
data16
outs
xor
scas
pop
je
mov
push
mov
fistp
fiadd
lahf
sbb
test
push
(bad)
xchg
xor
xchg
test
movs
jo
push
ror
(bad)
xchg
clc
mov
call
xchg
call
(bad)
test
or
(bad)
lea
sub
sbb
xor
das
(bad)
pop
mov
dec
shr
dec
aam
sub
mov
nop
ret
lea
mov
pop
or
or
jmp
and
add
mov
cmp
jl
pop
pop
das
add
pop
and
sbb
or
add
scas
fisttp
ds
sub
sub
movs
shr
lea
push
pop
lock
add
pop
push
xor
adc
cmps
xchg
cmp
pusha
std
adc
adc
std
test
jmp
dec
mov
call
es
stos
iret
inc
int
adc
test
mov
fxch
int
fisubr
pop
cmps
shl
mov
(bad)
call
add
xchg
outs
pop
icebp
lds
jmp
or
repnz
mov
sbb
lea
cmp
cmp
test
imul
aad
pop
or
mov
or
movs
pop
jecxz
dec
push
inc
sbb
retf
psubusb
add
add
add
adc
stos
pop
sbb
xlat
push
(bad)
adc
mov
out
clc
in
call
xor
jmp
xchg
add
and
sbb
adc
sbb
mov
mov
or
xor
ret
add
cmp
add
mov
ja
jmp
mov
jmp
xor
mov
mov
fidiv
fsubr
lea
test
adc
mov
sub
inc
mov
cmp
mov
push
outs
xor
pusha
xchg
or
sbb
jl
inc
sub
mov
sub
adc
mov
aas
mov
adc
inc
or
push
or
dec
mov
adc
pusha
cwde
dec
arpl
dec
or
sub
or
add
sub
pop
shl
ror
(bad)
ja
push
fbstp
js
dec
push
xchg
cmp
push
adc
mov
(bad)
in
enter
push
dec
jmp
adc
test
push
je
in
and
inc
mov
pop
movs
rol
pop
sbb
out
fldcw
mov
push
cmp
or
sbb
das
adc
pop
adc
aaa
dec
add
mov
sub
fwait
ins
js
enter
out
xor
sahf
xchg
xchg
mul
jne
data16
jne
ror
(bad)
push
cmp
cs
mov
in
fstp
(bad)
xchg
dec
inc
or
cmps
add
cmp
cmp
push
fisttp
jge
js
cmp
push
les
fnsave
scas
pop
mov
mov
in
jae
and
jbe
fld
mul
sbb
in
loope
mov
push
jno
stc
ins
mov
out
lods
fdiv
and
jo
punpcklqdq
fistp
inc
sbb
ja
jae
icebp
adc
or
cld
push
mov
sbb
pop
add
mov
push
mov
push
push
dec
push
add
enter
or
or
dec
nop
sub
pop
ret
in
ds
xchg
ss
mov
dec
xchg
and
in
xor
ss
sub
aaa
dec
ds
pop
mov
out
sbb
push
call
adc
sub
adc
cmp
or
enter
xchg
xchg
icebp
adc
dec
cdq
and
add
jle
int3
jg
inc
jmp
add
fincstp
sub
outs
sbb
lds
pop
xor
outs
push
mov
lock
jl
pop
and
xor
jbe
adc
sbb
sbb
mov
inc
xor
dec
push
jo
movs
mov
mov
or
sub
leave
jbe
or
jg
pop
sub
lea
push
dec
and
inc
inc
dec
cmp
je
cwde
call
sbb
sbb
pop
test
mov
shl
rol
cmp
fsubr
inc
sub
movs
stc
out
js
mov
or
mov
mov
jbe
mov
jmp
sub
cmp
jmp
add
adc
cmp
lds
push
stc
ins
cmp
sub
cmp
stos
call
dec
jae
data16
add
pop
imul
std
stos
mov
imul
clc
arpl
loopne
mov
or
pop
and
je
pop
repz
mov
jmp
mov
scas
xor
loope
push
lock
jae
mov
adc
inc
mov
and
cmp
addr16
mov
bound
inc
add
mov
test
jp
cli
movs
and
mov
(bad)
shl
dec
call
dec
test
call
(bad)
inc
fninit
je
and
jo
fdiv
push
xchg
mov
mov
jne
push
or
and
ret
inc
jg
jp
lods
push
bnd
scas
(bad)
mov
dec
lea
push
icebp
fimul
ficomp
sub
or
and
sbb
mov
dec
call
jnp
push
adc
mov
movs
mov
sbb
add
inc
mov
movs
jge
mov
dec
or
dec
push
(bad)
cmp
push
imul
fisub
or
push
mov
outs
xor
sbb
xor
in
jl
icebp
(bad)
jmp
jns
mov
dec
neg
pop
dec
adc
lock
jl
jo
or
leave
pop
mul
fadd
repnz
jmp
push
(bad)
jne
inc
test
je
cdq
xchg
sub
dec
mov
adc
add
jmp
adc
push
cmp
xor
call
clc
pop
pop
std
or
clc
je
mov
sbb
mov
mov
out
inc
iret
pop
sub
addr16
push
pusha
fld
fist
movs
test
enter
xchg
idiv
push
scas
mov
hlt
test
push
inc
cmp
rol
dec
xor
(bad)
rol
arpl
inc
mov
mov
popf
ss
lods
mov
and
push
xor
and
or
jns
xor
rol
dec
mov
mov
movs
ds
in
and
cs
into
sti
daa
or
inc
lea
dec
fisub
lods
mov
adc
imul
inc
leave
jmp
push
jge
mov
sub
inc
xor
sub
adc
sbb
sbb
(bad)
add
dec
sbb
mov
xor
cmp
fdiv
jnp
bound
in
xchg
stos
pop
shl
add
loopne
nop
rcr
stc
push
mov
je
lds
ret
add
jle
xchg
mov
add
jmp
retf
(bad)
xchg
sbb
jmp
jle
inc
mov
retf
sbb
and
in
push
or
ins
sub
or
ds
mov
jmp
ffreep
jnp
int3
es
sub
xor
rcr
mov
shl
sbb
or
inc
cmp
popf
push
xchg
rol
inc
mov
cmps
jmp
aas
clc
inc
test
sub
inc
mov
mov
in
xor
push
or
clc
dec
ror
fcomp
sbb
clc
aas
jmp
sar
test
push
dec
push
clc
addr16
ins
imul
jmp
inc
push
shl
mov
push
jmp
or
add
leave
sbb
mov
clc
mov
pushf
ror
adc
xor
dec
xor
adc
xlat
inc
sbb
cmc
jnp
outs
test
popf
add
aas
inc
jecxz
mov
cmp
sbb
add
nop
imul
jmp
push
inc
in
ss
ds
pop
ret
pop
push
push
push
popf
out
cmp
jecxz
loopne
sbb
dec
sub
daa
sbb
ror
pop
sbb
xchg
std
mov
mov
adc
cs
gs
pusha
jne
inc
cmps
jmp
nop
das
jns
mov
ds
push
call
xchg
sti
adc
out
fidivr
iret
adc
adc
push
enter
ds
jnp
push
mov
jmp
add
add
add
add
add
and
pop
adc
or
mov
and
js
aas
int
adc
adc
adc
adc
adc
sub
dec
sub
iret
jmp
mov
dec
mov
cdq
add
das
cs
adc
pop
sbb
jb
add
cmp
adc
or
mov
mov
ds
push
mov
(bad)
mov
retf
or
push
lea
and
lea
enter
out
or
mov
rcr
mov
ret
lahf
lods
push
sbb
bound
push
sub
cld
lahf
pop
mov
jmp
mov
add
or
or
cli
sub
sub
test
push
add
cmps
ret
inc
or
nop
and
movs
or
cmp
add
imul
sub
arpl
les
add
loope
adc
lds
mov
and
push
aam
cmp
stc
icebp
dec
or
sub
ds
lods
jmp
test
sub
nop
push
add
dec
dec
arpl
pusha
pusha
dec
cmps
and
and
xor
scas
int3
or
and
rcl
retf
cmovle
cmp
pop
out
ror
jb
mov
mov
push
adc
mov
push
cld
loopne
and
pop
call
mov
jle
iret
cmps
test
lea
nop
loop
pop
iret
push
or
sub
les
mov
dec
inc
lock
or
ret
pop
ret
ret
fiadd
pop
ins
das
mov
push
or
lods
std
inc
cli
ror
test
adc
pop
pop
js
sbb
fnsave
call
jns
cmp
rcr
add
sub
fimul
lods
arpl
pop
adc
dec
dec
dec
mov
push
(bad)
push
dec
mov
add
lock
inc
das
ins
gs
rol
adc
outs
dec
pop
jmp
sub
dec
pusha
ror
sbb
adc
rol
repnz
adc
jmp
scas
(bad)
fst
add
repnz
pusha
lock
fist
adc
sbb
(bad)
test
or
push
xor
out
lea
cs
and
sbb
push
adc
test
pop
dec
mov
rep
aas
jl
adc
data16
ret
call
add
rol
adc
imul
pop
xchg
adc
or
add
inc
mov
test
repnz
and
or
jecxz
mov
xor
js
int
or
pop
cmp
jg
push
add
adc
jne
sbb
inc
jg
sbb
cmp
mov
pop
push
jg
mov
pop
inc
jo
mov
adc
call
iret
repz
mov
dec
sbb
pop
jb
mov
test
mov
jo
jecxz
loopne
pop
inc
shl
inc
and
mov
dec
mov
add
nop
clc
sub
mov
adc
rol
inc
jne
jb
sub
and
cmp
xchg
or
or
mov
xchg
shl
inc
ret
inc
jg
jp
push
and
sbb
and
jne
mov
or
mov
in
ret
fldenv
bound
sbb
int3
arpl
fild
inc
cmp
push
jmp
repnz
mov
aas
sub
and
inc
ds
or
push
dec
xor
adc
lock
neg
out
les
sar
sbb
inc
mov
add
(bad)
cmp
ins
leave
aaa
cs
sbb
outs
xor
xlat
(bad)
push
jns
cmp
call
sub
ud2
sbb
add
push
xchg
add
cld
js
jmp
inc
cmp
sub
dec
inc
inc
push
es
and
cld
add
jo
push
js
pop
dec
inc
inc
add
inc
call
mov
xchg
lea
xor
ret
arpl
cmp
or
push
add
pusha
add
paddd
or
lds
dec
mov
push
inc
shr
xor
cmp
fimul
pop
mov
sub
inc
imul
add
sub
shl
repnz
pushf
inc
imul
fs
dec
push
ds
jnp
jae
inc
mov
dec
sbb
push
inc
xlat
dec
lea
int
call
jge
imul
and
pusha
ror
or
sub
not
add
push
int3
pop
ret
adc
les
lidtd
sbb
sub
add
cli
inc
retf
add
in
or
push
jo
adc
call
test
and
rol
sub
mov
pop
push
xchg
stc
sub
or
jb
or
push
xor
adc
ins
pop
push
imul
ins
ins
fiadd
inc
dec
cmp
pusha
mov
dec
lods
add
or
je
ss
lds
in
adc
jecxz
jae
or
sub
test
or
jmp
adc
fistp
cmp
adc
mov
sbb
ret
ins
call
or
mov
call
adc
jmp
rcr
inc
cmp
inc
push
inc
ror
outs
vpshufd
mov
fadd
mov
mov
add
and
adc
and
sar
(bad)
in
mov
mov
or
ja
iret
icebp
cdq
adc
pusha
sub
pop
pop
and
test
call
dec
mov
pop
cmps
or
mov
sbb
and
sbb
jmp
test
dec
sub
or
call
and
into
dec
push
iret
call
jmp
xor
xchg
xor
add
repz
pop
retf
or
loope
push
xchg
out
mov
push
or
sbb
dec
add
js
lods
jnp
movs
or
mov
push
outs
sbb
mov
xor
cmovns
adc
sub
jne
mov
push
enter
adc
mov
fsubr
jne
push
mov
add
mov
call
jle
pop
add
sti
dec
loopne
add
and
sbb
out
(bad)
ja
sub
mov
mov
sbb
cdq
push
loope
stos
mov
mov
clc
mov
jne
jne
repz
or
sub
mov
fsubp
pop
cmc
push
add
in
arpl
sub
add
xor
pop
jne
jmp
pusha
sbb
sub
add
sbb
push
loope
in
adc
dec
add
jecxz
sbb
xchg
cmps
mov
jo
or
mov
js
push
dec
and
jb
out
sub
sbb
inc
inc
ds
push
xchg
mov
das
jmp
test
mov
and
shr
dec
inc
dec
push
test
pushf
push
and
add
or
int3
sub
(bad)
mov
mov
aas
dec
loopne
mov
mov
mov
cmp
jmp
ds
push
inc
xchg
xor
mov
cmp
pop
fmul
cdq
test
mov
adc
ficomp
imul
fild
loope
adc
dec
pop
and
push
fiadd
adc
cmp
xchg
mov
cmp
aam
gs
data16
pop
push
in
rol
adc
mov
push
adc
in
mov
adc
pusha
mov
test
aaa
in
add
cld
les
int
push
jns
adc
mov
js
ret
add
pop
(bad)
ins
lea
ins
shr
(bad)
sbb
adc
push
xchg
xor
fistp
sbb
inc
mov
out
(bad)
and
fadd
int3
push
inc
enter
xor
(bad)
retf
jo
jne
add
sub
movs
adc
retf
lea
push
push
push
pusha
clc
or
dec
or
cs
stc
icebp
xor
jmp
jmp
retf
push
adc
push
mov
enter
mov
ja
pusha
call
in
jp
je
dec
dec
sti
inc
out
ss
or
mov
pop
xchg
mov
jno
je
pop
enter
fiadd
push
adc
sahf
pop
and
aas
lods
xor
jns
rcr
leave
test
push
aas
push
loopne
retf
and
fwait
dec
jae
dec
cmps
movs
inc
jns
mov
int
inc
enter
cmp
push
mov
retf
div
mov
xchg
xchg
fisttp
pop
repnz
js
loopne
fcom
adc
adc
(bad)
lock
scas
xchg
stos
and
cwde
mov
je
fild
dec
sbb
mov
push
dec
xor
jb
sub
sahf
inc
sub
mov
pusha
repnz
loopne
pop
pop
add
pop
dec
push
pushf
retf
jecxz
sbb
jmp
cmp
mov
pop
shl
call
pushf
imul
adc
pusha
or
addr16
mov
mov
fs
add
test
stos
inc
push
xlat
jnp
and
and
inc
bound
in
push
ret
mov
push
mov
arpl
sbb
pop
shl
lds
mov
push
stos
push
inc
pop
or
test
das
(bad)
dec
mov
ret
inc
jmp
loope
push
out
inc
cmps
mov
and
popa
aas
inc
ret
dec
sti
das
push
adc
mov
imul
xchg
add
stos
jo
jmp
push
aaa
das
push
and
add
popa
ret
sbb
fcmovnbe
mov
inc
xor
add
das
xlat
fwait
inc
add
aaa
fcmovbe
cs
outs
and
rol
xor
ds
ret
cmps
das
inc
inc
jb
or
jo
dec
mov
(bad)
jmp
cmp
pop
jnp
pop
sbb
outs
inc
test
hlt
inc
xor
fist
add
inc
imul
xchg
and
fwait
pusha
shr
jmp
and
imul
push
imul
push
mov
jne
ds
call
lahf
inc
pop
out
aaa
jae
push
dec
sbb
lahf
arpl
inc
lea
outs
jne
or
jno
inc
jno
js
outs
cmp
sbb
sbb
adc
add
mov
and
outs
xchg
dec
push
cmp
repnz
jle
loop
or
addr16
adc
inc
pop
lahf
ror
push
add
(bad)
xor
mov
daa
addr16
(bad)
ins
mov
mov
outs
aas
jb
xor
push
jmp
sbb
jae
call
ror
popa
add
and
add
cmps
dec
ss
cmp
ins
adc
stos
inc
ror
aas
sub
push
lods
fsub
inc
fiadd
and
retf
add
stos
and
shr
js
dec
inc
pop
push
fiadd
dec
(bad)
sbb
jmp
push
outs
shl
call
push
das
gs
adc
mov
call
sub
ja
sbb
add
jo
daa
or
and
xlat
pop
add
xor
scas
int3
das
daa
mov
xchg
pop
or
call
cli
mov
xor
pop
fdivp
ds
movq
xor
(bad)
add
inc
(bad)
ins
mov
rol
lock
stos
sbb
add
adc
fsubr
inc
mov
xor
pop
das
call
scas
xchg
outs
push
or
ins
rcl
mov
dec
imul
cwde
jg
add
sub
cmp
push
sbb
pushf
pushf
mov
sub
fadd
pushf
pushf
pushf
mov
pushf
pushf
pushf
js
pop
or
or
or
inc
xchg
sub
pop
or
dec
dec
dec
ror
dec
mov
push
dec
push
adc
adc
dec
dec
and
or
daa
and
daa
adc
daa
daa
rcl
sbb
add
pop
enter
add
add
es
dec
retf
rol
cmps
call
jecxz
mov
repz
pop
or
pop
cs
pop
pop
or
pop
imul
sub
imul
push
ins
push
jnp
in
outs
movq
add
add
pop
inc
add
adc
add
add
sub
outs
adc
sub
rcl
call
daa
aas
ror
push
mov
push
mov
xor
pop
bound
mov
dec
xchg
pop
fs
xchg
pop
imul
mov
sahf
out
add
(bad)
aaa
add
dec
fwait
jle
cmps
pusha
fwait
add
adc
adc
inc
movs
(bad)
(bad)
jmp
mov
pop
mov
mov
mov
sbb
clc
mov
(bad)
(bad)
jmp
pop
mov
mov
mov
mov
or
leave
aaa
(bad)
(bad)
ds
inc
push
push
pop
push
inc
inc
push
push
push
inc
inc
push
add
dec
dec
add
(bad)
call
mov
and
outs
out
cmps
outs
cmp
shl
mov
xchg
jg
(bad)
(bad)
call
mov
dec
push
ins
mov
mov
or
ja
aam
pop
pop
out
outs
sbb
sbb
loop
fwait
mov
fcom
jp
lock
dec
xor
xchg
xchg
jae
xchg
call
jle
pop
pop
daa
add
xor
dec
pop
int3
cmp
dec
add
(bad)
ficomp
xchg
cmp
adc
dec
nop
lods
xor
(bad)
(bad)
(bad)
call
sti
and
sub
call
sbb
mov
(bad)
(bad)
(bad)
jmp
pop
pop
jp
cmp
loopne
imul
sub
data16
aam
jb
(bad)
(bad)
jmp
mov
fcmove
jb
inc
(bad)
mov
xchg
push
mov
xchg
call
fwait
and
push
daa
out
jne
iret
push
inc
leave
cmp
sbb
movs
dec
pop
lds
mov
cmp
lock
es
bound
loope
fdivr
ins
outs
jae
and
adc
xor
adc
and
pop
hlt
imul
sub
xor
ds
ficom
pop
sub
jae
test
ret
add
push
jo
dec
cmc
dec
and
or
xchg
ror
sbb
add
xchg
inc
jge
jg
mov
(bad)
xor
popa
and
stos
push
stos
popa
fld
fcomp
add
dec
sti
sbb
nop
or
aaa
push
outs
movs
test
xor
push
xor
mov
ss
sub
xor
cmp
xor
mov
jge
jae
xor
aas
(bad)
cmp
popa
sub
bound
mov
popa
xor
xor
and
xor
das
aaa
mov
jns
dec
fild
xchg
call
pop
adc
push
mov
xor
pop
xor
cli
xor
movs
(bad)
fdiv
fidiv
in
xor
xor
xor
cdq
je
(bad)
push
mov
ret
xor
xor
xor
xor
xor
xor
xor
inc
xor
fs
(bad)
push
imul
ss
shl
loop
out
(bad)
ss
aaa
push
aaa
cmp
inc
aaa
les
push
cmp
push
inc
cli
cmp
cmp
cmp
cmp
cmp
and
(bad)
(bad)
cmp
cmp
je
nop
cmp
cmp
cmp
cmp
call
mov
xor
xor
xor
xor
(bad)
call
rcr
xor
xor
xor
inc
ss
ss
(bad)
push
aaa
and
mov
cmps
push
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
(bad)
(bad)
push
cmp
cmp
cmp
cmp
stos
cmp
cmp
cmp
aas
dec
aas
imul
aas
into
aas
hlt
aas
(bad)
call
das
xor
pop
xor
xor
jae
stos
jmp
xor
xor
xor
js
test
sahf
push
fdivp
push
mov
repz
xor
xor
xor
dec
xor
xor
or
mov
dec
xor
xor
xor
xor
xor
and
push
data16
fnsave
out
push
aaa
push
aaa
xchg
aaa
jmp
cmp
pop
jg
push
mov
outs
cmp
cmp
dec
cmp
xchg
cmp
jmp
cmp
adc
cmps
cmp
cmp
cmp
cmp
cmp
cmp
ja
and
pop
mov
cmp
cmp
cmp
cmp
cmp
(bad)
(bad)
push
cmp
cli
cmp
sbb
dec
ds
ds
lods
ds
les
xchg
and
call
ds
or
aas
imul
push
cld
pop
cld
push
sbb
push
xor
xor
push
into
into
xor
xor
pop
xor
(bad)
call
(bad)
mov
xor
xor
push
xor
ja
(bad)
xor
pusha
xor
xor
xor
push
mov
iret
aaa
(bad)
aaa
in
add
cmp
jnp
test
iret
jmp
cmp
sar
sahf
sar
or
call
cmp
(bad)
cmp
in
cmp
or
sub
inc
ds
xchg
ds
fdivr
jecxz
(bad)
ds
aas
cmp
jno
jg
dec
into
xor
xor
jns
mov
xchg
xor
jmp
clc
push
sbb
cmp
dec
xor
xor
xor
dec
imul
int
xlat
xor
xor
dec
jmp
adc
pop
xor
aaa
ss
ss
ss
ss
ss
ss
ss
ss
test
shl
aaa
xor
aaa
mov
loope
mov
cmp
cmp
(bad)
(bad)
inc
or
cmp
ins
cmp
test
test
cmp
cmp
cmp
cmp
sbb
cmp
jge
mov
sbb
inc
cmp
or
pop
lock
into
xor
cmp
pop
aas
arpl
jmp
sbb
xor
cmp
call
aaa
cld
(bad)
jg
lahf
xor
xor
xor
xor
xor
xor
xor
jmp
loopne
xor
mov
enter
jp
scas
fdiv
std
xor
xor
add
adc
call
xor
xor
xor
xor
xor
ss
(bad)
(bad)
aas
xchg
inc
aaa
nop
aaa
retf
cmp
push
cmp
outs
cmp
jle
xchg
push
jmp
xchg
xchg
scas
cmp
stos
idiv
add
adc
sbb
(bad)
(bad)
push
inc
cmp
cmp
cmp
cmp
cmp
cmp
mov
fdiv
mov
jb
cmp
rcr
cld
hlt
pop
push
fdivr
loopne
or
das
cmp
mov
aas
fs
add
aas
ins
aas
jo
mov
aas
enter
jo
js
icebp
hlt
cmp
pop
pop
xchg
xor
xor
dec
hlt
xor
xor
xor
or
or
push
xor
mov
pusha
xor
xor
xor
xor
xor
xor
xor
sar
bound
cwde
sub
aaa
xchg
aaa
push
cmp
cmp
inc
cmp
mov
dec
mov
cmp
cmp
cmp
cmp
push
xor
pop
lds
icebp
xor
fidivr
(bad)
(bad)
(bad)
inc
cmp
cmp
mov
xchg
cmp
cmp
cmp
cmp
(bad)
cmp
inc
cmp
cmp
ds
aas
jne
mov
retf
aas
mov
and
xchg
xor
syscall
or
inc
xor
in
adc
sbb
sub
xor
(bad)
call
xor
out
xor
xor
pop
xor
xor
xor
xor
lea
cli
pop
std
call
jns
test
test
cmp
cmp
push
cmp
mov
imul
jns
cmp
add
inc
(bad)
(bad)
inc
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
(bad)
cmp
adc
sub
inc
cmp
cmp
call
cmp
mov
(bad)
jmp
sbb
movs
ds
xchg
aas
mov
aas
repz
xor
mov
add
inc
xor
xor
xor
sbb
and
cmp
(bad)
(bad)
(bad)
mov
xor
ret
xor
xor
xor
aad
loope
out
lock
xor
xor
jmp
ror
inc
sbb
xor
dec
xor
(bad)
xor
mov
cmc
xor
sub
ss
out
and
sub
(bad)
stos
stos
jmp
aaa
mov
mov
loop
aaa
icebp
aaa
clc
aaa
inc
pop
sbb
push
or
das
cmp
inc
das
xchg
cmp
cmp
dec
cmp
cmp
(bad)
loop
inc
cdq
cmp
cmp
call
pop
or
inc
cmp
dec
mov
movs
cmp
pop
cmp
cmp
fwait
dec
cmp
cmp
cmp
inc
cmp
cmp
cmp
cmp
mov
(bad)
(bad)
(bad)
cmp
cmp
cmp
push
cmp
jae
js
xchg
cmp
fcos
jmp
ret
adc
dec
ds
ds
cmp
movs
ds
jg
iret
imul
aas
jl
aas
mov
mov
aas
cld
xchg
mov
stc
jg
(bad)
pop
adc
push
xor
xor
xor
std
call
push
jmp
xor
xor
xor
xor
pop
pop
cmp
mov
cmc
loopne
(bad)
cmp
push
mov
cmp
cmp
aam
inc
std
sbb
ds
aas
pop
sar
add
daa
xor
xor
xor
xor
inc
call
and
xor
xor
xor
xor
push
xchg
xor
mov
xor
cmp
jno
jne
(bad)
jmp
ss
ss
aaa
cld
pop
dec
cmp
ret
mov
mov
dec
cmp
push
cmp
pop
fdivr
sbb
mov
cmp
cmp
cmp
cmps
cmp
cli
enter
jmp
or
cmp
aam
and
sub
xor
and
clc
stos
push
mov
aas
mov
cmp
dec
xor
xor
xor
xor
cmp
ud0
xor
xor
and
sub
pop
xor
xor
push
imul
pop
add
xor
retf
loopne
ins
push
pop
loopne
(bad)
fild
xor
xor
pushf
mov
ss
(bad)
push
dec
aaa
pop
aaa
outs
aaa
xor
aaa
movs
aaa
mov
enter
in
call
sar
hlt
cmp
cmp
fwait
cmp
cmp
cmp
jbe
cmp
jg
push
ds
ds
push
lock
loopne
das
icebp
xor
jle
xor
popa
xor
je
test
sub
mov
inc
dec
or
xchg
(bad)
shr
std
pop
push
jnp
mov
xor
push
retf
xor
xor
mov
jb
es
push
xchg
mov
(bad)
mov
or
xor
inc
aaa
pop
aaa
(bad)
aaa
add
xchg
enter
cmp
add
(bad)
cmp
cmp
cmp
cmp
cmp
cmp
mov
jo
cmp
out
pop
xor
xor
adc
ror
scas
xchg
jae
xor
(bad)
call
xor
js
pop
pop
jle
pop
xor
or
xor
xor
js
cmps
mul
xor
ret
fcomip
pop
pop
arpl
cld
xor
add
pop
aaa
adc
sub
aaa
jl
xor
out
shl
call
aaa
pop
cmp
arpl
push
jbe
sar
dec
cmp
cmp
mov
call
jg
repnz
cmp
imul
pop
mov
xor
cmp
enter
xor
lea
mov
lahf
xchg
fbstp
cdq
xor
xor
and
mov
cmps
cmp
inc
ficomp
sti
jecxz
cmp
pop
cmp
(bad)
xchg
movs
cmp
lock
pop
cmp
pop
cmp
es
cmp
cmp
cmp
mov
pop
cmp
(bad)
sbb
and
fs
scas
ret
mov
or
ds
inc
aas
test
cli
and
aas
int
(bad)
sub
mov
mov
dec
add
xor
xor
xor
into
xor
pop
aaa
pop
lock
jg
jae
test
mov
aaa
mov
aaa
mov
pshufw
or
aaa
repz
cmp
mov
stos
lock
es
jno
cmc
ror
cmp
adc
pop
jle
call
cmp
das
loop
ds
inc
add
xor
xor
xor
xor
xor
out
sub
xor
xchg
cmp
cmp
test
das
mov
aam
fnstcw
fistp
lock
addr16
cmp
out
cmp
mov
or
xor
sbb
xor
xor
into
cld
xor
jno
shl
cmp
lock
ss
lds
call
aaa
jle
cdq
adc
icebp
aaa
data16
ret
outs
(bad)
jg
push
cmp
cmp
dec
mov
cmp
cmp
loope
idiv
cli
cmp
(bad)
jmp
scas
pusha
fsubp
test
mov
mov
nop
xor
mov
xor
xor
cmp
cs
xor
xor
or
sbb
xor
and
xor
dec
daa
cs
push
retf
cwde
xor
pop
(bad)
call
test
lods
cmps
mov
xchg
add
pop
xchg
xor
xor
shl
aam
cmps
pop
hlt
xor
xor
jle
inc
xor
xor
fisubr
xor
xor
dec
xor
mov
xor
dec
xor
xor
sbb
xor
xor
outs
cmp
cmp
ss
ss
(bad)
call
jg
lods
ss
mov
fdiv
in
in
ss
ss
ss
or
adc
lock
adc
sbb
movq
rol
xchg
js
cmp
loope
xlat
fidiv
fcmovnbe
mov
mov
adc
xor
loope
fisubr
xor
inc
jmp
jg
push
lock
nop
add
xor
pop
jle
xor
xor
clc
xor
rcr
sbb
and
sub
cmp
inc
mov
ss
jl
(bad)
pop
ss
ss
mov
nop
shl
(bad)
mov
mov
shl
call
lock
adc
add
aaa
add
mov
cmp
test
cmp
(bad)
cmp
test
lods
cmp
mov
outs
xor
enter
sahf
fdivr
mov
cmp
hlt
mov
cmp
or
(bad)
(bad)
push
and
sub
sub
xor
xor
cmp
cmp
inc
ds
ds
jmp
ficomp
push
loope
sbb
ins
ds
je
js
cmp
mov
mov
nop
ds
fisttp
ds
mov
ds
mov
ds
ds
rcr
call
and
lock
ds
pop
add
pop
add
push
cmp
pop
ss
in
xor
daa
sbb
bound
fild
xor
push
xor
pop
xor
call
cmp
jo
je
js
jl
xor
xor
jno
nop
xor
pushf
shr
push
les
mov
push
mov
xchg
ins
jle
xor
mov
aas
pop
pop
fdivr
xor
ss
call
jbe
ss
push
ss
ss
test
stc
loop
cwde
ss
shl
in
inc
cli
mov
retf
cmp
sbb
add
aaa
dec
aaa
pusha
aaa
jo
je
mov
xchg
out
add
sbb
rcl
in
adc
cmp
and
xor
cmp
pop
fnsave
fs
jl
mov
mov
cmp
lea
sar
aam
fdivr
hlt
outs
cld
(bad)
fucomip
or
sbb
sbb
and
and
sub
inc
cmp
cmp
call
push
je
jl
xchg
cmp
int3
cmp
cmp
cmp
cmp
sbb
cmp
call
cmp
js
jl
mov
cmp
enter
pop
(bad)
fdivr
cmp
cmp
cmp
add
mov
cmp
sbb
cmp
mov
cmp
inc
call
cmp
xabort
das
xchg
jg
and
cmp
cmp
cmp
mov
push
mov
push
mov
cmp
cmp
cmp
cmp
cmp
cmp
sahf
(bad)
scas
les
cmp
cmp
xor
dec
cmp
scas
call
sahf
mov
shl
inc
(bad)
data16
jmp
jecxz
scas
int3
cmps
mov
aas
adc
and
(bad)
push
cmp
dec
aas
cmp
mov
mov
mov
mov
inc
cmp
push
sub
add
div
and
inc
xor
pop
sbb
or
shl
loopne
add
sub
lock
dec
mov
loopne
push
into
xor
jo
cld
pop
clc
sahf
mov
lock
xor
xor
dec
push
xlat
jmp
push
xor
xor
rcr
sub
jne
xlat
xlat
push
cs
mov
xor
icebp
or
xor
pop
outs
pop
push
pop
fadd
imul
ret
mov
push
mov
jno
mov
aaa
test
enter
inc
mov
or
imul
cld
jg
jb
data16
lods
cmp
cmp
jmp
cmp
scas
mov
loope
sub
push
and
dec
cmp
pop
jl
cwde
repz
cmp
inc
pop
pop
fiadd
push
jno
mov
add
dec
sbb
cmp
outs
add
sub
push
xor
(bad)
lods
xor
ret
int3
xor
inc
pop
pop
push
ret
lahf
pusha
rol
push
pause
test
ret
mov
jg
clc
hlt
aaa
mov
mov
and
aaa
fsub
mov
das
ret
cld
rol
loopne
add
inc
adc
sbb
add
cmp
out
jmp
pusha
imul
jne
imul
nop
cmp
pushf
mov
je
cmp
loopne
or
cld
cmp
cmp
cmp
push
jb
or
je
movd
sub
xor
getsec
cmp
cmp
inc
cmps
dec
stos
push
or
pop
cmp
sti
js
jmp
cmp
clc
push
mov
or
dec
les
cmp
cmp
mov
sar
add
repnz
pop
jg
aam
loopne
call
cs
push
jne
push
add
iret
add
in
and
inc
pop
cmp
movs
mov
push
mov
push
inc
sbb
adc
push
xchg
cmp
or
push
scas
cmp
pop
sbb
sbb
adc
inc
mov
pop
idiv
les
mov
addr16
mov
cmps
cmps
push
aaa
xor
adc
jb
cld
repz
clc
xchg
sbb
mov
shld
nop
jg
sbb
add
addr16
cmp
mov
xor
adc
sub
push
dec
and
add
cmps
add
add
dec
or
ror
cmp
test
and
adc
xlat
sbb
cmp
sbb
aad
sahf
rcl
pop
pushf
dec
inc
aas
fsubr
pop
or
or
aam
xchg
add
nop
dec
mov
and
mov
or
add
imul
or
fild
cld
call
sahf
jbe
fild
(bad)
shl
cmps
out
ds
loope
hlt
loopne
enter
sahf
mov
ss
popf
iret
repz
call
int
loope
je
xchg
cmps
cmp
repz
retf
cli
(bad)
mov
push
cmp
repz
fild
enter
fsubr
dec
jnp
out
fstp
mov
sahf
out
push
ins
jp
mov
cmps
mov
int3
aam
out
sahf
fsubrp
hlt
dec
sbb
repz
sub
inc
dec
cmps
stc
mov
push
bound
jns
cwde
nop
xor
jns
out
push
dec
xor
mov
adc
inc
(bad)
add
fistp
out
push
lods
xchg
jbe
dec
imul
out
sbb
aaa
imul
push
sahf
out
sahf
sar
ret
dec
repz
and
add
out
and
sbb
outs
pop
ds
push
ins
add
add
and
dec
js
inc
push
movs
and
lods
mov
pop
dec
bound
fs
xchg
inc
sbb
adc
lods
dec
cmps
dec
fs
dec
les
pop
pop
aas
add
movs
adc
shr
out
addr16
and
inc
pop
push
adc
inc
aas
inc
mov
(bad)
ficom
add
jbe
das
push
inc
dec
push
inc
inc
punpckhdq
arpl
cmp
aam
mov
or
or
fmul
dec
dec
push
inc
and
test
scas
fldcw
and
int3
and
lods
(bad)
loope
xor
in
pop
jo
test
xchg
or
mov
test
adc
pusha
jp
ins
(bad)
sbb
pop
cmp
inc
pop
jp
aas
push
and
bound
push
mov
movs
sub
add
inc
add
mov
loope
mov
pop
imul
mov
add
push
jnp
jb
das
(bad)
push
lock
fistp
das
xchg
push
leave
mov
push
add
push
pop
ins
pop
mov
psubsw
lods
mov
mov
je
daa
pop
xchg
dec
fist
jl
push
push
inc
(bad)
mov
push
das
dec
lahf
dec
inc
dec
scas
fstp
gs
ja
ret
mov
pop
dec
scas
inc
iret
inc
mov
push
fisttp
push
mov
dec
dec
lahf
inc
bound
cmp
push
sbb
add
add
jo
repz
repz
out
sub
and
or
cmps
stc
cmp
or
push
xor
cmp
repz
adc
adc
sbb
sbb
adc
or
sahf
out
cmp
adc
adc
iret
jnp
push
call
jns
iret
fcom
or
pop
enter
iret
repz
and
add
or
sahf
out
iret
mov
pop
inc
sub
fmulp
sar
loopne
les
lods
leave
repz
fs
xchg
cmp
jae
sub
or
pop
test
nop
sub
scas
mov
lahf
add
bound
jecxz
cmc
inc
sbb
push
fwait
div
sub
push
jnp
and
push
aaa
xor
lea
xor
das
or
ret
mov
xchg
and
xchg
inc
pop
inc
(bad)
cs
repnz
sysexit
sub
jge
call
fisttp
and
(bad)
lock
arpl
dec
lods
or
daa
movs
xchg
push
mov
jne
add
inc
sub
fild
mov
mov
adc
jae
cmp
xor
aas
jae
ficomp
inc
push
adc
addr16
adc
inc
pop
add
fisttp
lods
add
(bad)
mov
pop
mov
popa
pusha
mov
inc
sahf
scas
outs
aam
(bad)
add
(bad)
bound
shr
rol
scas
iret
aas
popa
imul
add
in
ds
add
add
add
sbb
mov
push
stc
nop
outs
das
dec
add
add
jbe
out
hlt
ja
(bad)
push
add
das
ficom
dec
push
pop
inc
inc
mov
add
aaa
je
or
dec
jae
ret
sahf
mov
das
ja
pop
ja
ss
mov
enter
out
push
add
dec
dec
rol
push
fwait
mov
inc
bnd
pop
(bad)
fsubr
clc
shr
imul
xchg
xchg
outs
lahf
pop
add
pop
fisub
pop
xor
add
pop
stc
inc
push
mov
pop
push
inc
add
leave
(bad)
cs
addr16
add
inc
jnp
aaa
data16
call
push
push
push
or
out
push
xlat
shl
jmp
inc
dec
aas
lock
inc
inc
scas
cmp
push
mov
inc
xchg
and
push
dec
scas
(bad)
push
xlat
addr16
jno
mov
gs
mov
push
inc
scas
(bad)
mov
aas
dec
mov
fcmovu
shl
ins
out
xchg
rol
rcr
shl
sub
sub
or
das
jb
lods
js
jmp
out
add
push
(bad)
pop
aaa
fisub
mov
jmp
inc
fadd
xor
aaa
addr16
mov
mov
sahf
aas
pop
stos
push
sbb
outs
neg
pop
pop
inc
pop
or
iret
jmp
popa
daa
add
scas
mov
mov
ja
mov
mov
ja
push
pop
je
mov
mov
add
out
jp
ret
div
imul
jne
(bad)
fiadd
or
inc
out
and
je
xchg
outs
pop
addr16
jns
inc
dec
ins
mov
xchg
push
shl
dec
mov
iret
inc
xchg
dec
mov
out
cdq
js
bound
jbe
push
lock
push
aas
ins
inc
lahf
clc
mov
jns
dec
out
gs
push
inc
adc
cmp
cmps
pop
ja
or
add
dec
pop
jns
sbb
bound
shl
ins
div
loopne
into
retf
outs
mov
dec
xor
hlt
pusha
movs
adc
es
(bad)
jg
jae
jb
pop
fwait
and
in
inc
movs
or
and
xchg
pop
xor
fs
inc
jo
(bad)
je
inc
mov
or
je
push
lahf
ja
in
lock
push
dec
pop
inc
cmps
pop
mov
pop
xchg
mov
cs
xlat
imul
data16
(bad)
popa
cmps
inc
jbe
sbb
data16
xchg
pop
out
sub
pop
push
pop
mov
cs
(bad)
gs
inc
and
data16
cmps
push
add
adc
into
mov
push
push
arpl
xchg
sub
je
pop
jbe
out
je
xchg
or
hlt
loope
cmps
or
imul
push
jge
jnp
xlat
(bad)
jb
dec
mov
aas
push
pop
push
mov
jbe
jno
dec
das
imul
pop
ja
dec
retf
in
sbb
fist
outs
dec
mov
fistp
ret
dec
(bad)
in
ins
pop
xlat
aas
pop
dec
je
out
ret
push
dec
(bad)
out
cs
out
cmps
push
pop
jne
sub
ja
pop
(bad)
(bad)
data16
adc
mov
rcr
or
ins
dec
pop
xor
push
sti
push
popa
call
scas
pop
pop
outs
or
jmp
inc
(bad)
cwde
add
xor
xchg
or
push
sub
dec
nop
inc
add
pop
ins
das
pusha
add
add
pusha
jb
dec
imul
cmp
mov
push
cmp
sar
push
jbe
shl
jg
mov
pop
inc
pminsw
mov
dec
sbb
scas
outs
add
popa
pop
mov
inc
jo
mov
je
stc
push
cwde
int3
pop
outs
sahf
das
jo
jo
cmp
jmp
fbstp
jns
jno
add
jmp
sbb
sbb
das
(bad)
ss
fcom
ins
aas
scas
dec
push
mov
(bad)
(bad)
push
fild
cmc
xchg
ins
jg
mul
and
scas
test
jbe
mov
push
js
pop
jbe
das
fstp
out
gs
jne
pop
jb
sub
(bad)
movsx
jno
ins
or
aas
dec
push
bswap
leave
ja
outs
ins
out
jo
lods
es
outs
aas
outs
pop
imul
fld
pop
imul
int
mov
call
mov
scas
data16
mov
scas
push
pandn
aas
daa
daa
iret
imul
or
push
add
pop
jmp
jae
outs
out
pop
add
adc
stc
(bad)
leave
or
addr16
or
sub
hlt
or
cmp
sahf
or
or
out
aam
int3
adc
in
jns
adc
out
lods
adc
adc
pushf
push
xchg
pop
jns
sahf
xchg
mov
test
jl
out
cmp
je
ins
cmp
sahf
sbb
sbb
out
push
pop
dec
and
jns
and
xor
mov
and
pop
and
fwait
pop
es
or
out
cmp
add
cld
daa
pushf
cmp
iret
sub
sub
sub
leave
jae
in
fsubr
aam
pushf
cmp
das
int3
xor
daa
iret
leave
jae
mov
repnz
cmp
aaa
movs
cmp
iret
leave
pushf
cmp
pushf
cmp
iret
ds
ins
inc
iret
leave
jae
fs
pop
inc
push
int
cmp
inc
dec
inc
pop
pop
jae
(bad)
inc
(bad)
pop
inc
xor
cmp
iret
leave
sub
and
sbb
jae
pushf
dec
adc
or
ds
iret
dec
add
cld
es
out
cmp
dec
in
push
jns
sahf
xchg
in
fcom
xchg
out
cmp
push
les
jns
sahf
push
mov
xchg
out
lods
pop
movs
pop
pushf
in
jns
pop
xchg
pop
mov
xchg
out
test
arpl
in
jns
fs
gs
in
jns
pop
push
sahf
xchg
out
dec
ins
inc
ins
out
cmp
outs
xor
jns
sahf
xchg
sub
and
sbb
out
cmp
jl
mov
jle
jg
adc
and
dec
sahf
xchg
in
and
fcom
aam
int3
cmp
sahf
xchg
mov
mov
lods
add
cmp
repz
add
xrelease
add
pop
xor
add
ins
push
push
repz
repz
repz
or
inc
or
repz
and
or
pop
cmp
repz
push
or
mov
or
hlt
and
out
sahf
out
call
out
sahf
movups
adc
les
out
adc
mov
int
lods
pop
add
jns
cmps
push
xchg
adc
jns
push
sbb
jo
sahf
out
sbb
sbb
out
sahf
out
sbb
sbb
inc
sbb
xor
jns
out
pop
sub
and
jns
out
and
and
dec
repz
add
and
and
and
iret
repz
and
iret
repz
pop
daa
enter
sahf
sub
cmp
repz
sub
iret
repz
sub
push
iret
sar
push
push
sub
das
dec
xor
cmp
repz
xor
xor
sub
ss
aaa
cmp
repz
xor
add
jns
out
cmp
and
sahf
out
cmp
aaa
ds
out
sahf
aam
aas
enter
sahf
out
mov
out
sahf
out
movs
cmp
cmp
pop
add
add
out
sahf
je
inc
push
out
pop
inc
dec
push
inc
out
sahf
out
inc
inc
dec
cmp
dec
sub
dec
and
out
inc
dec
adc
dec
sar
or
cld
and
imul
add
iret
repz
dec
add
dec
push
int3
cmp
repz
push
ror
cmp
repz
push
movs
push
sahf
out
iret
pop
xchg
push
(bad)
pop
mov
sahf
out
pop
jo
pop
inc
fs
repz
push
popa
pop
push
bound
out
cmps
arpl
fs
sahf
out
pop
gs
ds
jns
push
add
cmp
repz
repz
repz
ins
aam
outs
iret
repz
enter
bound
iret
repz
arpl
fs
repz
gs
iret
repz
data16
sub
repz
and
repz
imul
iret
test
ins
test
outs
cmp
repz
sbb
or
cmp
repz
add
out
sahf
out
pop
jb
in
fdivp
cmp
add
cs
jns
push
and
sahf
out
sahf
add
cwde
push
or
or
or
je
jns
out
adc
adc
out
sahf
pop
adc
push
add
call
mov
jns
cmp
push
and
cmps
stc
dec
add
adc
dec
repz
add
out
cmp
clc
push
cmp
jl
idiv
cmp
inc
aam
add
cmp
rol
inc
push
mov
sar
pop
push
les
pop
cs
into
shl
jns
imul
aaa
dec
dec
call
or
add
dec
repz
pop
add
push
push
aas
xchg
int
out
inc
push
or
push
xor
out
jbe
or
pop
adc
repz
out
aaa
add
lds
(bad)
bound
add
push
clc
sbb
outs
push
in
sbb
adc
fstp
sbb
sahf
mov
add
adc
sbb
movs
sbb
push
mov
movs
sbb
in
jns
adc
dec
cmp
sbb
cmp
pop
movs
sbb
sar
adc
es
inc
call
cmps
ret
repz
lock
(bad)
mov
and
sbb
sbb
and
xor
cmps
xchg
dec
and
and
and
add
test
ins
sbb
and
mov
sub
int
int
inc
sub
and
mov
sub
xchg
int
int
or
sbb
fwait
out
jns
in
pop
xor
sbb
push
imul
xor
dec
in
test
xor
es
int
nop
xor
and
jnp
cmp
int
int
pusha
cmp
inc
call
cmp
imul
cs
and
add
push
imul
jnp
clc
das
push
dec
hlt
sbb
inc
call
nop
out
xor
push
add
rcl
ins
lods
pop
jo
cmps
popf
jmp
mov
dec
jnp
sahf
sub
jl
add
push
je
repnz
idiv
ins
(bad)
adc
fs
data16
push
ja
dec
cmp
repz
push
sub
rcl
repz
sbb
push
jl
sbb
adc
adc
jl
sbb
cld
sbb
cs
int
cmps
jnp
xlat
jl
sbb
es
xchg
sbb
push
mov
push
pop
test
push
cmp
xchg
mov
call
cmps
(bad)
out
test
(bad)
(bad)
enter
add
pushf
jmp
out
add
add
outs
mov
aas
out
pop
xor
xor
idiv
fsubr
add
or
sbb
jmp
pop
ds
add
shl
sbb
or
push
sub
and
xlat
pop
inc
es
fild
jl
or
out
xlat
add
lahf
pop
jp
or
pusha
mov
shl
dec
test
xchg
pop
pop
inc
inc
jmp
cmp
fidiv
iret
imul
add
(bad)
lock
fldcw
iret
sti
cmc
xor
xchg
jns
repz
push
and
add
jbe
fs
fdivp
out
fnsave
add
jo
out
aam
test
rcr
nop
push
iret
fistp
jns
inc
jns
pusha
pmaxsw
aas
jmp
mov
mov
repz
push
or
lahf
pop
dec
adc
(bad)
fwait
push
iret
repz
pop
jle
xchg
push
iret
dec
jnp
ds
sub
cmps
add
push
cmp
repz
loopne
or
shufps
inc
dec
enter
lahf
out
and
jl
adc
cmp
inc
or
inc
jmp
sahf
repnz
jl
pop
ds
ss
cmp
sbb
xor
jns
jns
inc
test
pop
sub
out
adc
lock
shl
push
xchg
out
push
add
jl
or
add
jg
add
out
fwait
out
inc
mov
das
add
repz
dec
pop
push
aas
push
sbb
out
jns
fmul
ins
cmp
push
xor
cmps
(bad)
out
cwde
cmps
sahf
aaa
cmps
daa
sub
push
sub
hlt
mov
aaa
iret
cmp
sbb
xor
test
ffreep
das
jl
pop
(bad)
in
add
xchg
out
sbb
call
sbb
pop
dec
retf
jle
jp
es
scas
in
jp
mov
push
pop
mov
lahf
dec
sbb
faddp
mov
push
mov
jno
xlat
sub
(bad)
repz
jle
pop
dec
jns
sub
xor
adc
add
push
lock
lea
scas
sahf
lds
mov
xor
inc
cmp
xchg
out
repz
mov
ds
aad
sbb
out
iret
movs
(bad)
pop
int3
push
call
sub
sub
mov
fadd
mov
ds
lock
pop
sbb
sti
mov
aaa
add
outs
pop
pop
jp
mov
xchg
out
lods
(bad)
aaa
fimul
xchg
cmps
aam
lods
out
inc
dec
movsx
daa
inc
sahf
out
iret
dec
pop
mov
test
aaa
mov
push
iret
pop
les
cmp
ffreep
repz
mov
rol
push
mov
out
pop
call
and
jle
adc
iret
pusha
fild
repz
mov
mov
cmovnp
push
xor
outs
sbb
out
repz
cli
xlat
data16
test
add
repz
scas
dec
mov
mov
lea
imul
aam
dec
jns
lods
mov
push
stos
pop
mov
cmc
test
dec
pop
xchg
add
jp
ds
leave
icebp
lea
adc
inc
movs
jns
mov
pop
adc
pop
push
out
mov
xchg
scas
dec
shl
mov
push
push
fdivr
and
sahf
out
iret
push
mov
xor
push
add
adc
or
lods
mov
movs
(bad)
jecxz
dec
jnp
es
retf
jg
divps
sahf
dec
lock
shl
outs
mov
push
push
(bad)
outs
(bad)
jae
jmp
out
daa
pop
mov
(bad)
dec
mov
push
adc
sahf
repnz
cs
push
pop
out
out
jns
mov
push
sbb
out
lods
mov
jo
or
sti
ror
(bad)
dec
mov
iret
aam
sub
lahf
(bad)
jle
adc
test
cmc
outs
push
push
cmp
jnp
(bad)
fisubr
mov
xchg
and
mov
sbb
sbb
imul
lods
fimul
fimul
push
push
pop
add
jae
jnp
push
jl
dec
push
daa
(bad)
cmp
out
mov
scas
ds
out
sbb
test
daa
pop
and
iret
sar
add
xor
sti
mov
jg
sub
mov
cmp
call
ins
sub
iret
jnp
cmp
adc
repnz
test
into
sbb
pop
jo
scas
cmps
ficomp
lds
sbb
inc
mov
out
add
inc
(bad)
push
mov
(bad)
daa
and
lock
dec
fwait
das
cmp
mov
pop
outs
cmp
lock
das
divps
dec
push
sub
out
aas
xor
push
data16
sahf
push
cld
fild
jns
push
push
fcmovu
mov
add
iret
repz
xchg
push
pop
sbb
movs
push
xor
sbb
add
mov
xor
(bad)
cmp
ja
mov
mov
outs
inc
loopne
add
daa
xor
sub
movs
divps
cmps
dec
outs
iret
pop
sbb
ss
xchg
outs
movs
and
add
adc
(bad)
aas
into
mov
jns
ja
mov
sub
scas
das
cs
icebp
adc
inc
iret
(bad)
inc
adc
push
into
or
xor
xchg
xchg
pop
xchg
xchg
leave
pusha
and
mov
cmp
das
fs
int3
cs
bound
cld
ins
xor
mov
add
mov
stos
push
mov
xor
inc
jbe
mov
add
inc
push
call
push
mov
mov
pop
dec
sub
test
dec
rol
or
mov
inc
xor
add
retf
call
leave
jne
sub
push
and
push
and
adc
out
adc
pop
call
popa
add
xchg
fstp
sbb
mov
and
aas
or
lock
dec
retf
xor
jmp
add
push
mov
aaa
push
test
or
push
mov
pop
dec
fsubr
aam
add
mov
and
push
sahf
xchg
sbb
adc
add
nop
pop
mov
sbb
mov
shr
loope
jge
ret
cwde
pop
dec
sub
pusha
loop
adc
call
mov
xchg
je
push
sbb
loopne
adc
add
fdivr
shl
push
cld
cmp
add
movs
pop
xchg
mov
or
ret
bound
sub
ja
dec
xor
rcl
in
gs
adc
or
add
jo
sbb
mul
adc
and
mov
sub
cmps
pop
aam
add
pop
out
add
add
push
xchg
adc
inc
xchg
pop
mov
mov
pusha
pop
sub
pop
add
loope
les
call
adc
loope
dec
maskmovq
xchg
out
test
popf
cwde
cs
pushf
mov
jge
mov
stos
imul
cmp
adc
jne
inc
adc
and
add
daa
pop
inc
pop
push
mov
ret
sti
or
adc
push
call
lea
ss
add
dec
nop
inc
mov
xor
sub
fsub
xor
jl
pop
adc
hlt
loope
push
cmp
pusha
dec
pop
or
pop
or
or
sbb
pop
push
mov
or
jae
push
addr16
imul
or
jle
into
push
push
mov
call
test
push
loope
push
ins
push
push
or
push
xor
mov
jmp
sar
jl
mov
adc
clc
cmp
and
aas
and
xor
cmp
jbe
call
cli
push
ds
adc
(bad)
enter
(bad)
fadd
loope
inc
(bad)
fst
dec
push
lahf
ffree
or
xchg
dec
push
(bad)
push
add
or
mov
push
cmp
mov
inc
mov
and
aam
xchg
dec
xor
or
adc
sub
cwde
bndstx
pop
mov
inc
test
jbe
jge
or
leave
test
or
jbe
push
push
(bad)
and
push
xorps
xor
shl
clc
cmp
push
and
lods
sbb
lds
pop
cmp
std
mulps
sbb
mov
les
mov
nop
ror
mov
(bad)
push
sahf
adc
pop
dec
push
sbb
add
add
mov
add
shl
or
dec
pop
or
add
jg
cwde
xchg
lods
dec
out
push
inc
mov
call
dec
fsubr
pop
or
inc
mov
loope
and
repz
prefetch
mov
mov
xchg
push
ins
cmp
out
or
clc
push
adc
aam
pop
and
leave
jg
add
mov
jbe
sbb
fwait
rol
mov
mov
leave
dec
cld
in
push
add
push
movs
or
sbb
clc
call
sub
xor
fistp
mov
sbb
scas
and
sbb
cmps
fdiv
fistp
push
sbb
jno
push
adc
gs
add
sti
cmp
imul
or
test
pop
rcr
int3
pushf
mov
push
dec
in
lods
xchg
lods
mov
aad
loop
push
pusha
dec
sub
jle
mov
jmp
inc
adc
add
or
adc
jge
push
and
add
add
push
mov
push
add
add
daa
push
or
loope
fwait
cmp
cmps
je
enter
xchg
jbe
or
jmp
rcr
fcom
test
pop
sub
add
push
add
adc
pop
cmps
mov
leave
jo
push
pop
cmp
test
pop
call
push
jo
outs
pop
mov
push
fld
mov
xor
mov
outs
jg
adc
dec
out
iret
fisttp
jmp
push
daa
leave
pusha
push
pop
mov
jb
test
xor
xchg
xor
xor
call
pop
jl
rol
jp
enter
xchg
add
aad
add
je
xor
mov
imul
inc
pop
rol
jo
cmp
pop
sahf
les
mov
mov
les
movs
hlt
movs
pop
test
ss
adc
fld
xlat
(bad)
pusha
clc
retf
fimul
mov
sbb
or
xor
jno
fcomp
cmp
jns
dec
gs
fisttp
dec
ds
or
and
inc
push
inc
add
cli
pop
or
jl
call
pop
ret
sbb
add
cdq
xor
dec
adc
fsub
push
jmp
dec
jmp
retf
je
add
cwde
xchg
xchg
xchg
pop
icebp
or
add
jae
inc
lea
mov
pop
and
push
add
pop
add
pop
pop
mov
inc
sbb
neg
ds
test
sub
add
sbb
jne
add
pop
pop
int3
daa
xchg
es
repnz
inc
xor
sub
xchg
cmps
cld
ret
lock
push
push
es
shl
fldenv
mov
add
(bad)
call
ins
retf
adc
pop
or
rcr
push
stos
jmp
adc
sub
arpl
lock
inc
cmp
shr
sbb
popa
in
push
std
pop
aas
sbb
inc
push
xor
sbb
sbb
enter
(bad)
call
xchg
imul
sbb
jl
mov
sbb
mov
push
fwait
outs
cmp
push
pop
sbb
and
jmp
jo
or
sbb
inc
push
adc
in
add
sub
sub
js
rol
cmp
xor
inc
ficomp
jmp
push
push
enter
dec
mov
pop
sub
mov
sbb
out
cmp
xchg
das
lea
push
int3
retf
cmps
cmp
lods
out
jle
xor
inc
mov
je
or
xor
cmp
cmp
mov
hlt
aam
jg
push
push
jne
push
or
adc
push
jne
add
mov
sub
sbb
jle
scas
or
cld
sbb
mov
mov
data16
push
sbb
or
mov
fild
mov
int
lods
icebp
jo
add
fidiv
jmp
adc
jp
(bad)
cmp
or
cmp
adc
div
jno
fild
jmp
dec
ds
call
fdiv
cmp
aaa
or
test
or
sub
pop
jb
cmp
aas
dec
loopne
xchg
cwde
adc
dec
add
addr16
push
mov
ins
push
mov
int3
dec
adc
jo
test
cmp
add
cli
xor
add
call
push
xor
push
pop
and
sub
ins
loopne
out
push
fild
imul
sub
enter
test
inc
inc
rcl
jnp
or
popf
sub
xor
inc
or
sbb
and
arpl
or
push
scas
add
xor
stc
ds
or
test
xor
sub
mov
stos
xchg
cmp
add
inc
sub
cmps
mov
inc
adc
repnz
in
add
popa
jmp
pop
(bad)
fadd
mov
in
or
xlat
cmp
data16
aaa
leave
aaa
push
and
sub
adc
ins
mov
mov
out
inc
cmp
push
push
mov
jl
mov
loope
stos
loopne
sbb
aas
nop
rcr
imul
jne
push
movs
pop
xchg
call
imul
xor
add
jne
jmp
mov
push
cmc
lea
les
(bad)
scas
add
push
and
or
cmp
mov
push
pop
gs
add
inc
cmp
add
push
popf
dec
hlt
in
add
mov
fs
shl
push
mov
xor
sbb
or
push
test
jmp
ins
cmp
jne
adc
pop
ss
push
js
or
mov
cld
mov
daa
add
inc
call
shl
cmps
xor
inc
add
jno
out
adc
sbb
dec
pop
lock
jecxz
(bad)
cmp
mov
test
xor
push
xchg
(bad)
daa
lock
add
pop
test
fwait
mov
scas
je
jl
jl
mov
xchg
retf
call
sbb
mov
or
or
push
ret
ins
sar
or
les
ins
push
or
mov
inc
xchg
sbb
dec
sahf
sahf
jl
adc
idiv
and
pop
mov
xor
andps
cmp
xchg
jo
in
cmp
rcl
sbb
pop
mov
mov
ficom
inc
xor
sar
push
mov
sbb
jb
test
jmp
add
into
add
mov
retf
call
jne
adc
lds
call
push
jo
mov
or
and
ja
push
pop
xor
fs
push
mov
aaa
jp
pop
pop
inc
xchg
dec
sbb
jo
adc
adc
or
rol
and
sbb
mov
inc
in
cmp
test
cs
adc
adc
jg
push
sbb
xchg
add
pop
sbb
ins
sub
cmp
popa
xchg
sub
mov
xor
out
inc
mov
ds
push
adc
or
loop
lock
test
into
xor
popa
test
inc
test
and
push
iret
imul
or
jne
push
fcomip
or
jg
sub
push
xchg
xor
add
xor
push
sub
cmp
adc
adc
dec
mov
pop
call
push
es
je
pop
stos
and
or
sbb
aam
test
mov
inc
movs
mov
enter
mov
add
ret
je
dec
(bad)
jb
rcl
cmps
sbb
jmp
cmp
call
jmp
call
fsubr
pop
scas
sbb
pop
and
iret
imul
test
xchg
arpl
popf
add
cmp
cmc
je
add
clc
inc
mov
xchg
fwait
cli
and
in
stos
push
stos
add
in
or
repz
sbb
mov
push
mov
cld
push
test
push
test
push
pop
inc
xor
inc
jl
push
call
hlt
add
nop
jnp
test
dec
clc
xor
imul
xchg
cwde
out
int3
xchg
mov
and
lea
push
xor
push
imul
adc
clc
dec
jge
and
scas
aam
hlt
mov
aas
add
adc
jg
push
sbb
cmp
xchg
mov
dec
xchg
or
xchg
cmc
mov
cmp
cwde
push
mov
test
dec
push
cs
dec
pusha
popa
dec
stc
pop
push
add
data16
test
add
shl
test
xor
lds
cmp
cmp
push
push
dec
mov
or
or
pop
add
test
xchg
pop
in
fdivr
pop
push
out
push
popa
loopne
popf
gs
pop
cmp
das
lea
hlt
push
xchg
push
rcr
loopne
clc
test
in
sbb
out
jl
pop
jge
popf
dec
push
sub
push
push
or
sbb
jbe
xchg
stc
jmp
lds
adc
mov
sti
int3
xor
fiadd
pusha
sub
xor
pop
dec
out
push
jmp
jno
daa
aas
add
or
and
invd
jo
mov
(bad)
xor
inc
push
hlt
pusha
pop
mov
xor
imul
nop
sbb
xor
adc
push
dec
nop
or
and
pop
pop
xor
dec
or
push
xor
fwait
jge
push
aaa
jbe
lea
(bad)
adc
sbb
or
aas
call
mov
push
or
imul
add
or
mov
mov
xor
shl
adc
adc
dec
add
adc
jl
dec
imul
pop
jb
loopne
loopne
mov
jmp
push
test
xor
pop
cmp
sahf
nop
pop
and
mov
daa
cmps
fdiv
jmp
cdq
aaa
rcl
dec
sar
loopne
cmp
fdivr
xlat
cld
cmp
add
(bad)
pop
mov
inc
aaa
js
push
sub
jmp
cmp
jns
imul
das
imul
and
sub
dec
pushw
lock
mov
inc
ins
cmp
jge
inc
bound
inc
jmp
out
xchg
lds
fcom
cmc
loopne
rol
jae
aad
sub
test
or
mov
pop
retf
push
jle
in
loopne
jnp
sbb
or
xchg
pop
cmp
in
or
int3
sub
dec
mov
jns
rcl
push
fadd
lock
fsubr
loopne
adc
sbb
in
dec
test
loopne
add
jno
cmp
or
pusha
mov
ja
or
mov
jbe
in
dec
imul
(bad)
adc
ja
jne
lock
dec
xor
sub
cs
imul
call
cmp
jle
stc
rcr
(bad)
jmp
aad
pop
add
xor
jecxz
retf
add
ficomp
xchg
arpl
sbb
cmp
or
xchg
push
movs
js
push
or
lock
push
lock
add
push
movs
(bad)
dec
std
jg
pop
cwde
retf
cdq
add
adc
mov
pop
aas
ss
or
adc
ret
sbb
xor
(bad)
aam
adc
shl
movs
cmp
add
jnp
fsubr
aad
xor
or
das
sbb
inc
inc
(bad)
rcl
ds
jmp
push
mov
mov
xor
jmp
mov
or
rcl
inc
jge
or
jle
dec
jb
mov
add
mov
clc
pop
jnp
out
inc
enter
rol
sub
xchg
push
adc
mov
repnz
test
bound
adc
js
out
dec
popa
xor
daa
xor
mov
pop
or
sub
jge
movs
xchg
test
mov
dec
jmp
rol
imul
jno
mov
mov
add
dec
xchg
mov
ja
rcl
lock
or
inc
shl
jmp
mov
retf
add
sub
test
pop
test
adc
cmp
and
sub
xor
sbb
and
xor
repnz
cmp
mov
pop
add
sub
shr
fwait
jb
ret
(bad)
iret
aam
add
pop
aam
fadd
and
xlat
clc
les
lar
xor
or
ret
fnstcw
fnstenv
(bad)
loopne
stos
(bad)
jmp
or
call
inc
outs
adc
mov
test
clc
sub
jbe
or
mov
icebp
add
out
mov
mov
inc
ds
and
push
sub
push
pop
xchg
add
ds
(bad)
loope
cmp
mov
mov
rcr
stos
sbb
popa
test
je
dec
mov
mov
adc
push
mov
cmp
mov
ins
xor
and
xor
jmp
jo
mov
jo
es
mov
repnz
adc
inc
push
out
rcl
jo
xor
jmp
sub
int3
pop
inc
or
call
and
ins
xchg
adc
cmps
cdq
(bad)
dec
fdiv
push
pop
icebp
pop
fwait
mov
dec
push
jl
push
jmp
push
stos
jo
stos
jb
mov
cmp
cmp
pop
pop
retf
sbb
or
adc
repnz
sbb
push
std
fisubr
out
mov
or
push
inc
add
cmps
pushf
test
loopne
mov
loopne
push
pop
stos
mov
jae
xor
sbb
push
sbb
mov
mov
inc
and
(bad)
inc
jmp
lea
cmp
lods
sbb
je
inc
loop
loopne
push
cmp
push
jbe
inc
clc
pop
add
push
mov
sbb
or
dec
sub
push
cmps
sbb
scas
or
loop
lock
or
mov
mov
mov
mov
aam
cmp
dec
and
pop
inc
add
call
add
ret
std
leave
mov
and
push
cmp
jo
jp
add
add
push
sbb
ins
adc
inc
add
jmp
inc
xchg
or
add
push
or
xchg
sub
pusha
repz
pop
lock
push
test
jmp
sub
inc
or
adc
scas
call
iret
xor
push
jo
dec
in
dec
xor
ds
data16
jmp
or
and
add
pop
cpuid
mov
cmps
movs
adc
retf
mov
lods
push
add
add
dec
lea
mov
dec
xor
pop
sbb
add
pop
add
popa
mov
pop
add
xchg
stos
call
fistp
fld
push
call
jge
mov
add
je
sti
and
mov
sub
adc
pop
pop
jo
inc
(bad)
cld
xlat
je
xor
pop
jg
fbstp
call
push
pop
rcr
mov
add
cmp
and
sub
sub
aaa
adc
inc
inc
inc
inc
data16
dec
jo
inc
dec
jno
shr
(bad)
popf
pop
jno
shl
add
xchg
add
jb
inc
rcl
sub
scas
or
idiv
outs
sub
mov
and
call
stos
xchg
adc
and
adc
adc
cmp
or
sbb
or
sbb
pop
xchg
push
adc
clc
adc
sbb
imul
ds
xchg
add
(bad)
(bad)
jl
jg
and
mov
inc
add
mov
int
inc
adc
inc
mov
call
imul
dec
adc
xor
adc
pop
cmps
pop
call
xor
fs
push
das
stos
sub
and
sbb
daa
and
test
loopne
and
sub
es
movntps
push
dec
and
cmp
push
inc
add
add
enter
mov
xchg
add
popa
or
sub
mov
cmp
(bad)
not
ror
add
js
xchg
and
xchg
cmp
imul
fwait
or
shrd
and
repz
imul
loop
and
jo
add
arpl
mov
xchg
cmp
imul
xchg
imul
add
xor
inc
in
adc
sub
ds
rol
cmp
mov
call
test
jl
cmp
push
sbb
inc
in
test
sbb
add
xor
or
or
add
int
inc
lock
push
(bad)
adc
jge
xchg
adc
mov
add
ret
ror
push
dec
and
add
jmp
sub
add
jb
sbb
xor
leave
sar
lock
add
mov
or
std
add
pusha
mov
add
mov
pop
push
xchg
in
jbe
nop
dec
push
or
sbb
lods
xor
mov
or
add
mov
cmp
stos
loopne
dec
add
xchg
(bad)
mov
inc
loopne
dec
add
loopne
add
ret
jnp
cmp
mov
pop
sbb
xchg
cmp
loope
adc
mov
mov
adc
sub
add
mov
cmp
lock
ss
adc
outs
pop
cmp
js
pop
loopne
mov
xchg
push
mul
daa
sbb
add
mov
mov
sub
cmovne
test
das
mov
adc
not
add
(bad)
call
pushw
frstor
pop
push
mov
push
lea
loopne
xor
adc
addr16
mov
adc
mov
pusha
inc
jge
fld
int3
sbb
loope
lods
push
jbe
fstp
dec
sbb
mov
lock
xchg
mov
test
in
repnz
push
mov
(bad)
test
pop
adc
fcomi
adc
in
stos
sub
cs
xor
add
js
pushf
xor
jl
inc
mov
xchg
and
dec
cmp
dec
repnz
cld
aas
or
ins
loopne
test
lahf
dec
(bad)
popf
dec
cmp
push
stos
mov
cwde
push
shl
mov
out
arpl
pusha
in
mov
jmp
push
jle
xor
xor
in
push
xchg
jne
cmp
sahf
retf
add
pop
call
push
rcl
sub
mul
add
mov
cs
retf
clc
shl
fmul
xchg
xor
dec
xor
pushf
lahf
and
jmp
mov
push
outs
loopne
or
and
into
retf
in
iret
xor
inc
cmp
mov
imul
inc
shl
outs
nop
adc
add
aas
out
add
ret
or
retf
ja
out
xor
add
adc
ror
dec
in
retf
cmps
mov
cmp
aas
ret
dec
dec
and
sbb
rol
test
sbb
cwde
or
je
rcl
test
xor
mov
pushf
outs
xor
lods
add
or
xchg
cmps
jo
leave
and
cdq
push
sar
leave
cmps
jb
ds
inc
adc
mov
sbb
test
pushf
mov
sbb
dec
sub
imul
mov
xchg
data16
sbb
jne
(bad)
imul
stc
sbb
js
mov
(bad)
xlat
ja
rol
aam
out
hlt
xor
ror
push
test
outs
cmp
pop
push
or
jp
rcl
call
inc
sub
or
js
cmp
int3
imul
cmp
cdq
fs
add
xchg
add
es
in
add
adc
retf
add
add
in
out
stos
mov
sbb
mov
call
xor
cmp
xlat
xchg
add
mov
mov
daa
int3
lea
push
jns
xor
dec
jge
dec
and
mov
mov
dec
cwde
rcr
pop
or
cmp
mov
mov
or
sbb
rol
xlat
pop
(bad)
sbb
adc
aam
out
jmp
mov
ins
imul
ret
mov
push
jns
pop
push
mov
jmp
xchg
xchg
xchg
pop
ds
sar
sbb
push
xchg
in
loope
or
add
jl
in
ins
ficom
shl
push
sub
jbe
(bad)
mov
mov
inc
pop
or
push
mov
mov
or
mov
jae
or
and
cli
enter
push
adc
mov
iret
push
mov
pushf
cld
mov
xchg
lea
push
push
(bad)
rcl
mov
sahf
adc
mov
test
xchg
mov
mov
retf
jb
xchg
mov
inc
sub
loopne
scas
mov
add
mov
add
mov
test
or
inc
gs
adc
out
cmp
cmp
or
dec
fimul
dec
mov
or
in
je
jg
push
call
push
movs
jb
add
xchg
clc
out
cmp
add
aam
pop
leave
or
lods
jae
add
add
mov
mov
pop
push
sub
fcomp
dec
mov
imul
add
mov
rcr
leave
out
(bad)
loopne
neg
or
pop
jnp
push
jp
inc
shl
xchg
add
pop
push
jne
mov
xor
pop
sub
sbb
in
test
and
or
mov
cs
mov
repnz
ins
into
pop
add
scas
into
cmc
out
jg
jmp
outs
inc
pusha
sbb
ror
mov
sub
loopne
je
and
sbb
or
je
mov
mov
add
test
or
jns
retf
(bad)
enter
nop
mov
sar
loopne
jno
retf
mov
sub
xor
sub
pop
cmp
pop
js
pop
push
ficomp
adc
ss
pop
movs
mov
sub
mov
aas
jbe
adc
xor
add
xor
push
nop
jmp
inc
mov
inc
jno
pop
imul
stc
loopne
in
inc
popa
fwait
imul
adc
je
or
jle
jge
lods
imul
pop
fsubr
or
sub
jle
sbb
mov
adc
std
xchg
mov
aad
fadd
sbb
jmp
cmp
and
xchg
ja
adc
loop
jne
or
pop
xor
xchg
mov
add
loope
xor
lods
cmp
xor
pusha
adc
test
push
push
push
add
aaa
call
push
add
mov
repz
sbb
cmp
sub
push
stos
pop
jmp
mov
pop
inc
add
inc
mov
shl
(bad)
imul
adc
mov
loop
(bad)
xchg
cwde
xor
lds
popa
xchg
loopne
xchg
dec
loopne
pop
or
adc
inc
shl
push
inc
mov
pusha
inc
cmp
ret
and
push
pop
call
fist
popa
pushf
and
push
ds
pop
xchg
inc
cli
enter
das
sub
adc
and
repz
adc
repnz
cdq
and
movs
(bad)
xor
jle
push
fadd
gs
adc
push
sbb
call
sbb
imul
dec
sbb
loopne
dec
shr
(bad)
mov
xchg
sbb
enter
ret
mov
sbb
sbb
pop
mov
fisttp
inc
mov
mov
dec
mov
jo
or
je
jb
mov
inc
nop
cli
push
retf
or
xor
test
jne
add
imul
inc
pop
xor
retf
es
cmp
fsubr
adc
inc
mov
out
jle
push
cmp
jb
jl
clc
test
adc
das
fistp
loope
add
sbb
lahf
shl
jmp
dec
div
call
jmp
add
sub
in
loopne
add
popa
imul
pop
sub
mov
push
test
inc
dec
movs
ss
sbb
inc
dec
mov
cmp
aad
and
xor
jmp
mov
pop
pop
pop
icebp
sub
mov
cs
xchg
(bad)
in
push
adc
test
fldenv
fcmovnb
bound
jne
mov
or
popa
sbb
movs
rol
mov
pushf
pushf
add
icebp
or
push
add
sahf
or
xchg
sti
sbb
or
sbb
mov
inc
push
les
inc
or
dec
push
inc
push
pop
inc
dec
cld
inc
stc
addr16
adc
pusha
push
push
je
adc
adc
jae
iret
mov
sub
fistp
fnstenv
test
out
sub
inc
js
shl
enter
push
xor
(bad)
pop
mov
add
jecxz
pop
inc
jmp
or
dec
sbb
and
sahf
pop
pop
dec
rol
jmp
sbb
push
popf
jo
cmp
iret
call
pop
xchg
mov
push
pop
cs
addr16
pop
clc
fidiv
sub
add
scas
dec
inc
clc
jmp
popa
sbb
clc
xor
add
xchg
push
cmps
mov
pusha
inc
sub
xchg
and
mov
add
dec
mov
add
pop
(bad)
loop
loopne
stc
hlt
jecxz
pushf
push
adc
adc
bound
or
adc
(bad)
mov
test
mov
xor
ret
jno
dec
push
adc
push
cmp
adc
xor
add
out
retf
or
sub
mov
call
pop
pop
jns
inc
or
add
jne
inc
dec
or
adc
push
sbb
or
lock
or
or
clc
cs
inc
inc
call
jbe
add
rcr
mov
add
arpl
ret
data16
add
popf
or
lods
cmp
push
out
mov
jmp
and
dec
jg
xchg
push
retf
sbb
push
mov
je
sub
jne
clc
call
add
cmp
cs
pop
add
xor
xchg
enter
mov
retf
test
push
xor
jle
mov
sbb
je
or
push
outs
je
inc
fnstcw
js
dec
pop
pop
jg
(bad)
rol
cmp
je
dec
ss
outs
or
cmp
cmp
mov
sub
sub
lea
lea
push
imul
cmp
adc
test
add
ins
dec
add
jecxz
cs
movs
ffreep
pop
mov
jnp
sbb
fst
sti
add
inc
jne
lock
jne
mov
cmp
pop
(bad)
int
jl
arpl
je
aas
cmp
pushf
mov
inc
lock
ror
leave
adc
sbb
(bad)
fldz
jae
daa
add
(bad)
pop
sub
movs
loopne
jmp
or
jae
add
mov
add
push
jle
inc
cld
inc
stos
push
clc
sbb
ja
xor
fldcw
fisubr
stc
jmp
pushf
outs
and
add
mov
sub
push
into
adc
imul
addr16
or
sbb
int
test
cmp
cld
push
out
sahf
push
pop
int3
pop
mov
jne
fimul
mov
mov
sbb
pop
ss
cmp
cmp
nop
push
lea
ret
push
ins
repnz
jge
and
hlt
mov
push
imul
dec
pop
adc
sbb
xlat
hlt
and
loopne
mov
and
push
or
pop
adc
add
push
call
inc
sbb
lea
pushf
and
inc
into
and
mov
fiadd
aas
lock
adc
push
call
jno
pop
and
push
and
pop
mov
repz
scas
or
jno
mov
loope
sub
or
inc
push
nop
mov
push
leave
dec
sbb
push
push
cmp
pop
pop
repnz
pop
xchg
xchg
or
and
dec
loope
movs
imul
and
inc
test
sbb
add
or
jmp
aaa
clc
pop
pop
pop
and
cmp
cmp
pusha
fst
mov
inc
je
popf
test
add
push
adc
and
jbe
in
das
mov
push
dec
pop
and
add
and
cmp
jbe
jno
pop
xchg
cmps
out
sbb
std
(bad)
out
add
mov
inc
cld
xor
idiv
add
in
jnp
inc
mov
or
push
xrelease
inc
mov
xor
call
xchg
push
addr16
sar
loope
sbb
pop
sbb
or
ja
sbb
jo
add
dec
jp
retf
js
sub
loope
cmp
push
xor
mov
mov
mov
dec
sub
lods
jle
leave
jmp
jmp
xchg
loop
daa
mov
mov
mov
jecxz
sbb
pop
mov
jns
and
js
outs
xchg
dec
jo
mov
mov
sbb
push
pop
push
or
push
jmp
ins
xchg
(bad)
mul
xor
inc
cmp
inc
in
fwait
pop
add
lods
scas
add
and
cmp
jmp
bound
(bad)
xor
call
or
outs
inc
lea
popa
sub
test
push
and
or
std
test
jmp
jno
gs
dec
hlt
sahf
mov
sbb
jl
adc
xchg
dec
loope
repnz
dec
pop
or
adc
(bad)
hlt
lahf
dec
jne
mov
or
(bad)
sbb
inc
movs
or
inc
sub
or
hlt
mov
adc
sahf
outs
adc
jl
popf
in
add
imul
cmp
xchg
adc
sbb
movs
rol
adc
jp
dec
gs
xchg
adc
adc
cmp
and
jb
push
neg
mov
or
fadd
into
ins
and
(bad)
cs
add
adc
fnsave
adc
xor
sbb
fld
or
int3
mov
or
sub
inc
or
inc
sub
or
in
and
add
enter
test
nop
xchg
call
cmp
shl
fisttp
jmp
xor
je
and
lock
jns
add
or
pop
add
mov
enter
sbb
(bad)
fist
xchg
neg
cmps
push
push
ins
movs
pop
arpl
or
xor
add
gs
mov
mov
test
stos
lods
add
adc
mov
dec
jmp
sub
jb
cmp
inc
add
loope
(bad)
cmp
sbb
mov
mov
retf
popa
ja
cmp
cmp
(bad)
sbb
lods
outs
jne
sub
call
inc
aaa
adc
(bad)
test
or
call
call
sbb
mov
dec
mov
packsswb
pop
aam
and
loopne
adc
cwde
sbb
sbb
movs
mul
dec
sbb
xor
and
out
jns
out
ja
pop
pop
stc
mov
adc
and
xor
mov
adc
xor
xor
pop
dec
aas
ja
or
pushf
sbb
cwde
cmps
pushf
mov
popa
loopne
bnd
sub
cmp
(bad)
sub
dec
adc
jbe
or
mov
adc
sub
into
jbe
lods
sub
fadd
mov
inc
pusha
gs
sbb
sub
adc
xor
adc
mov
pop
retf
or
loope
sbb
fisub
and
retf
ss
push
mov
enter
adc
add
push
cli
push
jle
pop
sbb
gs
adc
and
push
jbe
mov
push
ds
push
push
and
mov
cld
add
loopne
imul
add
test
xor
adc
lods
and
mov
dec
push
dec
or
add
imul
or
arpl
dec
push
jmp
ret
xor
mov
cmp
test
sub
loopne
cmp
hlt
sbb
and
imul
pop
jmp
adc
sar
add
push
icebp
das
aam
cdq
and
add
jp
or
rol
xchg
les
lea
pop
call
fnstsw
ins
hlt
jmp
push
inc
push
adc
bndldx
or
repz
ins
pop
and
mov
out
inc
mov
inc
ins
cmps
in
xchg
into
movs
pop
lea
stos
mov
repnz
xor
mov
inc
or
jmp
dec
mov
dec
cmp
ds
jb
dec
mov
iret
dec
or
cmps
inc
loop
mov
shr
mov
mov
cld
mov
and
ss
fsub
add
ja
enter
ins
rep
jmp
inc
mov
or
mov
stos
jmp
(bad)
femms
addr16
aam
xor
inc
inc
xchg
loop
add
movs
xor
inc
sbb
out
lock
add
sub
not
outs
pop
popf
cmp
pop
je
mov
and
cmp
ds
push
or
xor
out
or
or
jl
loop
xchg
inc
shl
aam
clc
loope
pop
sub
sar
je
mov
test
jmp
mov
in
xor
sub
pop
hlt
test
nop
pop
push
pop
jg
mov
call
lea
sub
invd
push
loop
cmp
fs
push
pop
xor
call
or
xor
test
fiadd
rol
or
mov
jecxz
add
cdq
ins
inc
mov
push
push
xchg
jp
cmp
cmp
pop
cmp
imul
pop
gs
xor
mov
xor
push
lock
add
push
mov
out
ret
lea
iret
and
push
out
and
jge
and
or
sub
ins
mov
adc
rol
movs
sub
pop
scas
lock
sbb
add
fnstenv
dec
rcl
jo
jo
inc
lock
cmps
cmp
and
or
pop
add
xor
ds
and
mov
stos
and
xor
xchg
test
and
adc
test
dec
gs
js
enter
mov
sbb
and
adc
outs
mov
or
inc
sbb
add
add
inc
xchg
ins
fs
dec
ret
push
mov
clc
inc
pop
sub
mov
lea
or
sbb
shr
leave
or
jbe
es
not
shr
or
jmp
shr
or
dec
daa
xor
or
bound
scas
push
bound
jno
popf
retf
sar
call
adc
fild
mov
mov
stc
jnp
stos
dec
adc
js
inc
test
and
inc
cmp
add
dec
mov
mov
shr
cmp
mov
fld
ins
inc
adc
or
mov
add
adc
test
pushf
jp
adc
sbb
mov
adc
je
lea
sub
pop
fs
adc
rol
dec
shr
or
xor
or
mov
into
xor
mov
dec
sub
loope
push
cli
dec
dec
xchg
or
(bad)
fnop
imul
dec
add
adc
mov
adc
aad
test
adc
lods
dec
pop
xchg
in
stos
imul
or
test
pop
outs
push
push
retf
test
je
repnz
or
inc
loop
cmp
xor
or
test
inc
daa
pop
leave
scas
dec
stos
jbe
jg
inc
push
push
nop
adc
pop
jnp
mov
add
movs
add
cmps
mov
sub
add
xor
loopne
or
jp
mov
sub
stc
push
std
ins
and
in
add
mov
enter
or
ret
cmp
fnstsw
inc
and
add
mov
je
cld
or
xchg
into
jmp
adc
xor
clc
ror
adc
jmp
(bad)
and
inc
(bad)
fistp
push
jmp
cmp
sub
je
cmp
jle
push
cmp
jle
cmp
push
push
gs
pop
push
jmp
dec
push
jmp
sbb
or
mov
test
lods
mov
popf
xchg
aas
enter
or
cmp
sbb
push
pusha
pop
sub
push
pop
mov
mov
push
jge
outs
int
cmp
je
imul
movs
pop
lds
es
hlt
dec
je
sbb
or
mov
lods
ret
cmp
test
lock
loopne
dec
(bad)
mov
(bad)
arpl
push
jmp
adc
rcl
cs
daa
jmp
push
pop
dec
cwde
adc
pop
push
adc
cmps
mov
jbe
inc
ret
xor
mov
stos
sub
dec
add
jmp
rol
dec
hlt
ds
mov
sub
pop
lock
test
arpl
xchg
sub
add
scas
jl
jl
inc
dec
or
ret
fiadd
jnp
(bad)
and
scas
and
in
mov
repnz
pop
in
and
sub
xor
cmc
std
mov
push
push
mov
push
adc
or
jno
icebp
jmp
dec
ss
fs
hlt
shl
add
mov
push
push
cwde
jge
neg
add
adc
sbb
xor
sub
cmp
cmp
lock
cs
nop
fsubr
pusha
mov
ret
add
stos
jmp
sub
jle
lock
sub
xor
jne
push
push
adc
pop
or
sub
inc
sar
push
je
fs
lock
sbb
pop
fild
in
fdivr
jb
nop
(bad)
or
cld
mov
mov
mov
and
pop
nop
into
mov
fld
lock
lods
adc
jne
and
shl
and
adc
sbb
std
mov
or
or
mov
inc
data16
dec
jl
inc
test
adc
jne
jne
or
jne
test
inc
add
jne
inc
or
mov
pop
cmp
int
pop
add
push
hlt
mov
aad
lds
mov
add
in
push
movs
lds
enter
lods
fldcw
int3
push
rol
movs
imul
pusha
mov
ds
shr
scas
sbb
cld
imul
lock
mul
inc
ja
inc
and
ins
mov
xchg
and
jg
inc
shr
call
add
jmp
std
es
(bad)
js
mov
loopne
mov
gs
push
or
add
aas
or
push
mov
jmp
pop
mov
jg
or
adc
test
test
inc
mov
(bad)
les
(bad)
pop
mov
mov
je
mov
add
mov
mov
mul
test
shr
pop
mov
pop
mov
loope
call
push
jne
ins
nop
in
xor
cld
mov
cmp
mov
outs
inc
ja
aam
loope
sub
inc
mov
(bad)
cmps
imul
(bad)
jo
mov
sar
pop
fidiv
in
fiadd
push
inc
mov
hlt
lds
fimul
shl
movs
cmp
out
push
fmul
(bad)
nop
dec
push
inc
rol
mul
pusha
or
sub
add
fmul
push
push
into
jmp
scas
inc
cmp
xor
add
mov
push
out
in
sbb
or
jne
push
retf
jmp
sub
add
cmp
jns
sub
(bad)
test
xor
add
test
retf
xchg
mov
push
aas
jg
sar
cmp
repz
call
test
iret
repz
dec
cmps
aas
out
push
lods
and
aam
xor
test
aaa
jne
xor
int3
daa
rcr
push
leave
in
shr
test
nop
adc
cmp
mov
adc
xchg
and
and
or
call
or
jb
clc
fwait
icebp
mov
or
or
or
ja
sbb
and
repz
cld
adc
dec
jae
or
lea
add
loop
push
fimul
cmp
or
jb
mov
cmp
test
push
aaa
inc
loop
push
pop
mov
ret
test
dec
and
and
add
push
push
sub
push
adc
sub
mov
or
add
lock
pop
add
lock
ins
cmp
repz
adc
mov
sbb
nop
or
inc
sbb
push
xor
add
add
dec
inc
inc
pop
or
add
out
pop
test
sub
es
iret
mov
add
(bad)
test
and
movs
sub
push
cmps
or
adc
pop
pop
xor
xchg
and
pusha
cmp
js
mov
xor
dec
mov
adc
add
enter
enter
inc
shr
xor
pop
mov
js
jge
and
push
cmp
dec
sub
jecxz
or
jne
and
add
add
add
mov
fisttp
ret
push
jecxz
mov
xor
xchg
push
push
shl
dec
outs
sub
add
and
imul
daa
call
or
push
mov
out
enter
cmp
jg
mov
sbb
das
cli
xchg
mov
dec
mov
cmp
add
xchg
dec
sub
sub
mov
cmp
jae
test
fcmovb
fistp
xchg
push
cdq
and
out
add
ror
add
xor
adc
cmp
sub
push
xchg
ror
repz
xchg
xlat
enter
adc
cmp
fild
lods
jle
jns
cmp
nop
jmp
loopne
jg
in
fimul
sub
push
fcom
cdq
jl
scas
xor
rol
aas
fst
jbe
je
jmp
mov
fst
jmp
xchg
pusha
xchg
or
movs
shl
shl
je
inc
(bad)
ror
fisttp
or
push
add
push
je
inc
je
popa
rcl
and
mov
(bad)
and
sub
jl
mov
jne
test
mov
sar
add
ins
lods
aam
pop
mov
pop
test
xchg
dec
jnp
or
mov
sub
and
xchg
aaa
aad
add
add
sub
or
push
movs
jo
cmp
js
xchg
mov
sub
mov
or
aas
sub
cmps
xchg
jmp
add
out
pop
push
jo
outs
and
pusha
out
xchg
dec
sbb
push
mov
and
lahf
outs
and
ror
test
xor
div
(bad)
or
dec
xchg
sub
dec
mov
pop
and
dec
xor
pop
push
and
push
ds
sub
push
sub
pop
out
or
adc
sub
add
and
jmp
or
xor
xchg
or
pop
add
mov
pusha
dec
sub
loope
jne
cmp
dec
(bad)
mov
adc
iret
add
mov
pop
cwde
mov
adc
or
adc
sub
test
mov
shl
sbb
sti
pop
or
jmp
jle
lock
data16
mov
jae
adc
add
(bad)
jle
push
sub
mov
repnz
outs
mov
add
add
hlt
imul
imul
xor
or
adc
add
dec
loopne
mov
push
call
or
dec
retf
pusha
sbb
loope
xlat
mov
mov
adc
sub
cld
addr16
push
mov
imul
mov
or
mov
xchg
xchg
mov
ror
xor
ret
and
test
in
sbb
adc
push
int
cs
push
and
xchg
sub
jge
fiadd
jl
jmp
test
add
push
mov
das
push
push
loopne
inc
or
xor
push
pop
lock
call
or
and
adc
and
mov
dec
inc
js
add
jno
cdq
dec
mov
xor
and
mov
jmp
add
repz
sar
add
adc
ds
adc
mov
push
xor
push
xor
mov
ret
or
scas
xchg
or
(bad)
add
imul
fwait
rcl
cld
aas
and
mov
mov
inc
out
and
and
call
jbe
fst
push
outs
push
xor
jo
push
and
leave
push
mov
add
rcl
mov
sbb
addr16
mov
mov
adc
je
jl
inc
stos
add
mov
jmp
and
std
dec
sub
push
sub
fisubr
aaa
cmp
sub
or
popf
mov
adc
mov
pop
push
neg
mov
jge
data16
and
push
mov
push
mov
inc
push
lock
cmp
jns
cmp
not
dec
and
pop
pop
fld
lock
jae
push
pushf
add
test
sbb
sbb
fbstp
xor
sub
adc
(bad)
ror
jle
and
mov
mov
(bad)
jb
mov
rcl
mov
ins
std
shl
jnp
add
imul
loopne
(bad)
es
adc
push
sbb
jl
dec
fmul
mov
mov
mov
fs
lea
sbb
inc
ins
inc
xor
add
in
std
dec
inc
mov
test
je
loopne
not
movs
xlat
call
das
or
push
(bad)
js
aaa
js
shr
ss
mov
push
ins
test
cld
mov
fcmovnb
arpl
retf
mov
add
add
xor
mov
xor
xor
call
in
shl
jmp
lock
dec
lds
rol
xor
ja
aaa
sub
test
inc
jb
sti
jle
xlat
add
jns
xchg
call
enter
sti
push
pusha
sub
inc
add
mov
(bad)
shr
xchg
jbe
ins
push
int
cdq
shr
test
pop
lea
std
jns
sbb
ds
test
xchg
sti
inc
pop
and
in
add
pushf
arpl
mov
push
call
add
mov
add
xchg
adc
pusha
rcl
xchg
lods
jb
adc
lahf
(bad)
outs
stc
fadd
and
in
(bad)
cli
sbb
popf
cli
test
cli
dec
adc
(bad)
ins
lock
jmp
jle
shl
cmp
cli
pop
add
test
push
gs
add
or
clc
xchg
stc
mov
xchg
add
fsubr
pop
addr16
inc
ss
mov
mov
xchg
add
das
in
je
fnstenv
push
pop
pop
loopne
movs
xchg
idiv
push
loope
jb
jge
repz
sub
adc
retf
loop
nop
jl
(bad)
jmp
repz
lahf
or
test
sbb
xor
fsqrt
test
je
call
out
push
dec
xor
je
cmp
xlat
mov
and
jo
inc
outs
push
stos
cdq
or
and
pop
or
imul
and
fsubr
or
pop
mov
aam
cmp
fadd
dec
or
or
xor
leave
test
sbb
or
jg
lock
or
inc
jg
mov
mov
pop
and
stc
rcl
lock
push
arpl
mov
and
leave
cli
test
add
push
pop
test
or
mov
dec
push
cmc
xchg
data16
leave
mov
(bad)
cmps
je
fld
and
clc
or
rcr
or
inc
xor
and
sub
sub
lea
sbb
lds
addr16
xchg
push
cmps
dec
ror
dec
dec
jno
sbb
loop
add
aad
fwait
ins
push
enter
shr
add
je
adc
push
sub
mov
push
push
leave
mov
fmul
das
das
add
cmp
and
in
inc
rcl
je
fadd
mov
jge
push
jmp
cmp
sbb
dec
or
cmps
sbb
jge
pushf
inc
jle
and
mov
sbb
jp
jns
xor
jl
mov
jle
(bad)
je
mov
xor
sbb
std
aas
xchg
ret
adc
inc
xchg
lea
fdivr
xor
cmp
retf
lea
lock
pusha
xchg
pushf
xor
cmps
push
cmps
add
and
pop
mov
push
adc
cdq
or
sti
xor
pop
adc
jns
sub
aaa
cmc
or
or
inc
fdiv
mov
or
loopne
add
pop
and
jl
jne
cmp
ret
pop
push
or
adc
dec
jecxz
pop
imul
sbb
ret
iret
push
xor
inc
je
stos
sbb
adc
movs
pop
rcl
sbb
mov
sub
fs
fadd
ret
ret
inc
stos
or
adc
mov
push
cmp
sbb
jb
(bad)
xchg
rol
je
adc
pop
mov
movs
mov
jnp
pop
mov
xchg
nop
jo
xchg
mov
add
jbe
and
dec
ja
retf
dec
add
fcomp
test
push
nop
and
arpl
das
inc
scas
dec
bound
jne
shl
(bad)
jb
out
mov
shl
cmp
jmp
nop
stos
ins
dec
dec
rcr
mov
scas
dec
loop
add
sbb
jo
dec
or
mov
inc
xor
mov
or
ds
pop
inc
jg
lods
add
cmp
(bad)
shr
call
push
test
mov
mov
push
cmp
(bad)
loope
xchg
jmp
sahf
out
pop
pop
lods
adc
mov
mov
scas
je
xor
fucomi
stos
xor
xchg
out
sub
xor
stos
xchg
dec
pop
shl
ins
dec
dec
shr
or
inc
adc
inc
and
jno
lock
call
sub
jge
cmp
in
test
inc
xchg
hlt
aad
mov
sbb
and
adc
jl
pusha
lods
xchg
and
mov
jo
jbe
xchg
mov
pop
movs
cmp
mov
pop
les
mov
pop
cmp
cwde
ins
jns
jo
jne
or
js
xchg
inc
jae
push
sbb
adc
not
pushf
call
pop
fcom
pusha
rcl
sar
push
es
call
pop
xor
fs
xchg
xchg
pop
and
test
test
ja
sar
(bad)
fdivp
dec
dec
out
cmc
xor
inc
std
xchg
mov
adc
sbb
add
sbb
int3
mov
in
fs
mov
shl
and
shr
xor
cmp
dec
pop
pop
movs
add
mov
cmp
cdq
mov
sbb
gs
jle
popa
icebp
mov
call
mov
cmp
out
sub
xchg
inc
int3
jno
push
xlat
lods
push
mov
mov
inc
add
shl
sub
or
clc
pop
lods
or
lea
leave
movs
mov
xchg
cmp
jbe
cmp
sbb
jne
inc
add
dec
sub
pop
pop
jmp
and
(bad)
jp
mov
je
add
mov
ret
scas
add
lock
shr
inc
push
sbb
cwde
add
stos
jmp
dec
mov
clc
xor
fwait
jne
push
mov
outs
inc
lock
bound
fbstp
xor
js
ss
sub
or
pop
and
pop
mov
inc
add
retf
or
xor
shl
pop
or
and
adc
push
or
mov
push
add
jl
adc
push
shr
out
xor
xor
or
fwait
dec
call
mov
pop
ins
pusha
adc
push
enter
repz
push
sbb
mov
xchg
loopne
add
or
fdiv
xor
mov
sbb
popa
xor
adc
call
xchg
add
and
add
bound
pop
mov
ret
sbb
cmps
jne
pop
pop
ret
xchg
or
push
dec
or
inc
xor
inc
mov
loopne
push
add
enter
or
popa
push
in
test
and
or
outs
jb
fdiv
cmp
mov
or
data16
pop
test
push
xor
call
pop
add
xchg
add
cmp
mov
pop
sub
ss
xor
or
push
fwait
in
and
adc
add
idiv
pop
mov
test
or
cmp
add
inc
hlt
mov
push
add
inc
inc
sub
loopne
jbe
rol
jmp
(bad)
leave
push
push
inc
cmp
push
sbb
adc
shr
(bad)
mov
or
push
and
or
sub
retf
arpl
adc
aad
xor
jmp
or
and
je
enter
jl
cmp
clc
cmp
mov
repz
or
mov
or
enter
in
cmp
leave
push
jle
and
cwde
mov
ins
or
cmp
(bad)
stos
pop
mov
mov
add
dec
popa
mov
xor
sbb
push
jb
retf
clc
clc
ret
sbb
push
xor
(bad)
add
sub
adc
sbb
xor
push
push
into
ins
or
cmp
movs
xchg
inc
xchg
shl
cmp
add
and
inc
call
and
and
inc
xchg
inc
sar
mov
xchg
pop
aad
push
aaa
jl
mov
push
or
stc
pop
pop
outs
and
adc
ins
test
cmp
mov
pop
loopne
or
xchg
test
test
adc
xor
push
push
(bad)
jecxz
das
fdiv
mov
mov
push
cs
mov
jmp
les
push
js
adc
sub
ins
loopne
mov
inc
arpl
mov
mul
imul
cmp
or
test
xor
(bad)
(bad)
sbb
stos
fwait
and
cmp
add
xor
mov
mov
in
sub
icebp
or
clc
mov
add
cmp
mov
adc
call
outs
stos
dec
sbb
mov
cdq
hlt
jno
push
lea
(bad)
adc
inc
mov
xor
xchg
jmp
fst
or
mov
push
add
inc
jo
js
or
lock
pop
ror
xchg
popf
pusha
mov
adc
cmp
imul
leave
ss
in
outs
test
pop
mov
jo
jnp
dec
leave
adc
in
fmul
cmp
ss
jg
mov
cmp
jbe
mov
mov
ror
adc
push
aas
in
add
fdivr
cmp
jb
popf
clc
jmp
push
cmp
imul
test
outs
leave
push
scas
aaa
inc
rcr
leave
sub
inc
pop
and
(bad)
cmp
add
push
xlat
aaa
sbb
rcl
xor
fld
jle
(bad)
shr
fdivr
outs
call
int
inc
cmps
mov
into
shl
ret
neg
and
dec
xor
clc
stc
xor
sub
repnz
fild
push
(bad)
fnstsw
shr
call
cmp
sub
dec
sub
push
adc
or
(bad)
enter
mov
sbb
ins
jne
or
jne
push
xchg
or
dec
ror
(bad)
out
sbb
mov
mov
cmps
adc
sbb
clc
mov
bswap
in
test
xor
adc
(bad)
retf
imul
or
inc
push
xor
sub
mov
mov
inc
or
sub
gs
sub
jb
xor
add
sub
pop
or
add
push
sbb
ins
repz
jbe
dec
xlat
adc
cmc
pusha
cmp
or
and
outs
or
inc
adc
lea
add
sbb
and
xor
or
inc
jnp
arpl
(bad)
cmp
leave
inc
pop
pop
stos
cmp
cmp
fisttp
pop
es
mov
push
retf
mov
inc
inc
(bad)
jmp
push
jo
aas
xor
(bad)
rol
fiadd
fstp
fcmovnu
(bad)
jo
mov
or
ret
push
mov
sbb
out
lahf
ins
call
daa
fstp
and
rcr
cs
xchg
dec
sbb
adc
push
mov
push
shr
addr16
(bad)
mov
(bad)
mov
xchg
or
pop
add
add
dec
pop
push
imul
jecxz
dec
and
iret
stc
mov
outs
sbb
mov
xchg
test
mov
scas
repz
outs
call
and
dec
dec
sbb
repz
ja
add
xor
mov
mov
xchg
fldcw
fild
outs
bound
xchg
and
add
pop
ja
imul
mov
adc
pop
cmp
or
pop
aad
xor
jle
adc
push
call
pop
mov
ins
rol
push
aas
push
sar
xchg
sub
mov
arpl
fs
and
faddp
cmp
xor
data16
hlt
imul
push
aaa
add
je
cmp
xchg
inc
inc
pop
inc
pop
pop
pop
add
xchg
leave
in
paddusw
jle
add
shr
outs
xor
cmps
bound
es
cmp
out
sbb
ja
jmp
mov
fld
xchg
xor
mov
sbb
sbb
xor
idiv
call
add
cmp
fwait
imul
shr
(bad)
gs
test
mov
int
and
pop
stos
push
rcr
add
dec
xchg
xor
popf
push
and
mov
(bad)
xor
sub
(bad)
jae
fnstcw
add
test
aaa
push
fwait
push
aaa
mov
pop
ret
and
outs
and
jmp
retf
es
dec
imul
ja
and
dec
adc
es
ret
fcomp
scas
and
inc
adc
sar
jg
add
mov
push
mov
stos
dec
cdq
or
dec
jnp
in
dec
jns
loop
mov
inc
add
dec
mov
aad
fadd
test
ret
cdq
xor
pop
mov
adc
xor
stos
pop
dec
pop
xchg
lods
cmp
mov
fisubr
sti
push
adc
push
repz
sbb
dec
jmp
mov
push
ins
dec
loope
sti
xor
dec
sub
pop
add
jmp
add
(bad)
add
stos
leave
(bad)
mov
call
sub
sub
ins
sub
fdivr
dec
mov
mov
push
add
pop
pop
mov
pop
jno
mov
bound
mov
dec
jo
nop
push
pop
mov
movs
(bad)
push
fdivr
js
mov
(bad)
out
add
dec
adc
cmp
ss
xchg
pop
popa
jmp
add
mov
add
hlt
push
fist
dec
cmp
subps
mov
cmps
inc
gs
mov
enter
idiv
xchg
sub
aaa
push
clc
or
(bad)
repnz
add
add
or
jnp
fldenv
test
dec
and
and
call
inc
add
mov
jmp
jl
cmp
mov
ins
gs
in
jg
add
adc
je
inc
adc
(bad)
jbe
fcom
push
push
or
adc
mov
pusha
enter
call
or
out
pop
or
ret
dec
test
dec
sbb
mov
cmp
xor
cwde
pop
lods
pop
pusha
mov
mov
jecxz
and
and
out
fsub
sub
cwde
inc
dec
mov
mov
aaa
out
(bad)
(bad)
push
int
mov
push
mov
mov
mov
idiv
push
and
or
mov
sub
(bad)
mov
sbb
or
jge
es
inc
sbb
lock
out
pushf
xchg
xor
pop
es
lock
stc
or
xor
mul
cld
(bad)
jmp
push
je
pop
adc
mov
xchg
add
xchg
push
(bad)
(bad)
retf
repnz
retf
cmp
add
push
mov
dec
jne
mov
mov
mov
and
clc
ret
inc
ss
pushw
xchg
and
and
xor
sub
call
sbb
jmp
pop
xor
mov
adc
adc
pop
(bad)
mov
mov
aas
call
ror
mov
mov
mov
in
call
xchg
rcl
add
inc
sbb
retf
sbb
inc
mov
or
push
(bad)
mul
or
add
dec
add
mov
ins
push
or
push
mov
mov
mov
push
fdivr
cs
add
std
pop
add
lds
loop
int
mov
adc
nop
mov
push
adc
ror
sub
or
cmp
div
xor
inc
arpl
sub
dec
sub
outs
mov
hlt
mov
push
loop
xor
add
les
xor
dec
aas
sub
xor
add
push
xor
dec
loopne
sahf
pop
and
jne
mov
add
add
test
add
jmp
sti
cvttps2pi
sub
pop
mov
dec
add
jbe
arpl
fstp
or
pop
jle
xor
jmp
mov
mov
mov
sbb
or
mov
aam
ja
mov
leave
in
jmp
and
loopne
push
ret
outs
or
test
test
ret
dec
mov
jnp
jae
and
add
arpl
or
aad
cld
mov
add
pop
mov
sbb
in
inc
add
aas
mov
pop
(bad)
(bad)
dec
pop
ror
mov
test
mov
ss
sar
dec
xor
(bad)
(bad)
(bad)
(bad)
js
sbb
sbb
pushf
call
jnp
cmc
and
loopne
mov
in
push
cmc
(bad)
(bad)
mov
fcomi
mov
jae
and
(bad)
(bad)
inc
push
adc
jmp
mov
fcmovbe
test
ss
ret
neg
jle
rcl
(bad)
(bad)
inc
or
fsubr
test
or
mov
movs
add
sub
or
xchg
clc
call
and
jle
rcl
dec
es
and
stc
and
push
sbb
mov
inc
std
push
pop
mov
add
(bad)
aas
aam
push
in
mov
cmps
mov
add
mov
push
push
(bad)
(bad)
(bad)
call
es
push
outs
call
xor
or
inc
sbb
cwde
(bad)
(bad)
(bad)
call
out
pop
or
mov
push
xor
div
rcl
test
adc
xor
inc
ret
(bad)
(bad)
jmp
mov
add
jge
movs
lock
xor
adc
leave
repz
adc
(bad)
(bad)
(bad)
dec
mov
xor
cwde
loope
jge
xchg
cmp
in
xor
gs
push
sbb
inc
add
adc
leave
and
xchg
test
push
add
adc
adc
and
pop
mov
aas
add
jo
push
retf
or
sbb
fcmovu
cld
lahf
inc
in
fild
add
mov
or
cmp
pop
enter
leave
dec
cli
or
and
retf
iret
fiadd
pop
shl
sub
push
push
retf
adc
mov
(bad)
(bad)
(bad)
call
pop
std
and
sbb
add
xlat
xchg
inc
push
add
inc
stc
mov
adc
add
mov
push
adc
jmp
adc
mov
push
adc
pop
mov
add
adc
mov
cmps
adc
jmp
add
push
adc
jmp
adc
mov
push
adc
sub
std
and
adc
das
stos
xchg
add
leave
iret
ins
adc
cmc
int
add
sti
aas
jno
(bad)
mov
mov
pop
fs
dec
lea
aas
ret
shr
mov
aas
ror
and
clc
(bad)
inc
cmps
out
aas
inc
cmps
mov
ins
scas
add
aas
xor
dec
aas
ret
into
popa
test
ja
stos
in
das
dec
pop
(bad)
(bad)
(bad)
jmp
dec
les
aas
xchg
les
jne
int
mov
addr16
push
mov
xchg
(bad)
fisttp
mov
mov
popa
push
pop
push
(bad)
inc
jle
push
jl
mov
das
lea
mov
inc
inc
aas
movs
jmp
jg
mov
jmp
mov
inc
rcr
push
ds
int3
and
call
sar
xchg
cli
cmp
jp
and
and
xchg
mov
call
cmp
mov
sbb
add
mov
aaa
fld
cmp
jno
shl
(bad)
(bad)
(bad)
push
out
dec
nop
pop
cmp
fisub
xor
push
lahf
inc
pop
mov
sub
dec
(bad)
jg
lods
in
dec
push
scas
into
imul
faddp
jge
in
(bad)
(bad)
(bad)
call
mov
xchg
cmp
push
and
dec
dec
gs
std
or
pop
fiadd
cmp
add
cmps
fmul
imul
sahf
cs
call
xchg
add
fist
or
or
xor
dec
mov
test
fcom
add
cwde
fs
push
jae
pusha
test
add
es
xchg
imul
and
mov
mov
inc
mov
sbb
add
inc
mov
xlat
add
add
push
addr16
jno
inc
loop
out
fild
cmovb
cs
add
add
push
push
adc
push
mov
daa
lock
sub
jb
into
outs
or
add
inc
sub
(bad)
sbb
sbb
iret
sub
add
es
dec
call
inc
add
dec
(bad)
stc
(bad)
ins
add
outs
fadd
jmp
cmp
xchg
push
ja
imul
inc
cmp
mov
or
xor
mov
stc
dec
sub
cmp
or
lahf
ins
cmp
test
mov
xor
add
adc
add
fwait
es
aam
inc
ja
push
adc
repz
stos
pusha
xchg
and
or
inc
mov
or
or
or
shr
ja
push
(bad)
mov
mov
inc
inc
or
pop
xchg
pop
popa
aas
sub
sub
xchg
(bad)
mov
add
outs
bound
and
sbb
loope
out
push
mov
cld
das
movs
sbb
stos
or
imul
adc
mov
add
pop
pop
or
mov
add
dec
push
cmp
shl
sbb
add
cli
arpl
shl
or
ins
add
sbb
xor
es
mov
sbb
sar
push
jae
ja
cwde
iret
jg
and
xor
ret
inc
rcr
xchg
dec
and
aam
imul
pushf
pop
fs
je
pop
outs
aad
out
fimul
or
or
test
mov
sbb
adc
test
shr
pop
pop
jae
js
pop
das
adc
lods
pusha
fcom
fbstp
ss
arpl
dec
push
cs
cmp
add
sub
push
fcomp
xlat
mov
mov
adc
(bad)
(bad)
mov
mov
xor
xchg
lock
fwait
push
sub
outs
or
add
sbb
out
aam
ret
cmp
das
xchg
dec
cmp
push
dec
jmp
stos
jmp
push
outs
outs
mov
jae
mov
sub
pop
sti
push
add
pusha
aas
pop
push
add
mov
outs
ins
imul
cmps
inc
daa
push
das
sub
push
pop
pop
pop
sub
mov
adc
aaa
sub
push
adc
ins
iret
packssdw
outs
aaa
xor
stos
and
pop
aaa
call
pop
or
and
sar
add
sub
inc
push
jecxz
(bad)
outs
fild
inc
add
outs
jmp
lahf
fidivr
push
mov
push
cdq
dec
nop
sub
jbe
inc
push
push
and
pop
ss
inc
push
aaa
mov
jle
push
mov
aas
ret
cli
pop
and
cmp
xchg
ja
cwde
cmp
inc
repnz
fs
mov
fild
and
push
add
fistp
add
or
ret
sub
mov
mov
mov
je
out
jg
push
shl
aas
arpl
add
test
nop
es
dec
stos
imul
ja
sub
add
xor
gs
outs
sub
dec
mov
or
add
fstp
jmp
out
pop
inc
or
jmp
cmps
push
ror
shr
popa
or
push
add
jnp
adc
dec
xchg
xchg
mov
call
or
jp
imul
xlat
popa
cmp
repz
aaa
je
mov
imul
mov
(bad)
jle
jmp
inc
sbb
jns
ins
inc
(bad)
sbb
bnd
xchg
lock
sub
sub
push
or
test
xchg
sbb
jo
sub
xor
test
mov
(bad)
ror
xchg
fidiv
xor
xlat
jae
push
inc
inc
push
iret
xchg
push
stos
xchg
sub
lods
or
adc
push
fistp
xchg
lea
test
add
ja
adc
psubd
popa
das
es
xchg
xor
popa
push
sbb
push
push
lods
div
jne
ja
test
fwait
mov
push
xlat
retf
arpl
ins
push
cmp
rcl
iret
sub
push
push
add
push
aas
and
mov
les
adc
push
lods
lea
(bad)
mov
sub
shr
repz
cmp
push
je
push
call
sub
sub
or
jb
sub
dec
mov
dec
jae
push
dec
movs
bound
add
stos
sub
stos
inc
sbb
mov
push
push
cmp
and
das
push
xor
jbe
jne
nop
test
pop
addr16
push
and
inc
out
pop
popa
stos
lahf
adc
and
fwait
retf
aad
repz
xor
fcmovnb
sub
scas
aas
shl
and
xor
or
pop
sbb
faddp
sub
mov
add
rcr
(bad)
sub
adc
out
pop
add
sub
sub
dec
mov
mov
(bad)
sub
and
daa
pop
xchg
dec
or
xchg
add
neg
pop
push
xlat
lahf
je
adc
mov
wrmsr
scas
scas
ja
push
mov
or
sub
add
inc
sub
add
lods
push
or
jae
sub
push
push
scas
lahf
adc
scas
jb
stos
push
stos
pusha
cmp
call
mov
add
aaa
lods
add
pusha
pop
aad
jnp
add
inc
and
mov
jle
xor
pop
jns
mov
push
stos
jecxz
and
rcl
inc
bound
(bad)
es
aam
mov
imul
add
shl
adc
ins
pop
inc
push
jge
aam
sub
mov
add
lahf
push
xor
jmp
(bad)
bound
mov
pop
xor
push
gs
loop
imul
fwait
ds
push
sbb
cmp
adc
cmp
xchg
add
scas
sti
pop
rol
ret
stos
fisubr
pop
mov
pusha
sbb
popa
push
mov
and
ret
bound
pop
imul
and
mov
mov
das
jmp
fcmovnb
sbb
dec
out
xlat
or
lock
sti
shrd
stos
sbb
ins
daa
adc
push
inc
mov
inc
shl
out
adc
ret
push
loopne
and
mov
push
add
test
inc
jmp
sbb
inc
pusha
aas
push
lods
pop
ror
fwait
mov
xchg
scas
cmps
ret
mov
addr16
sub
pop
push
repz
or
push
ins
cli
and
mov
push
mov
mov
xchg
ins
sbb
mov
sbb
jmp
and
jo
and
mov
push
imul
jmp
fwait
dec
dec
movhps
push
(bad)
(bad)
gs
and
lds
fwait
xlat
add
popa
add
fwait
dec
push
jmp
adc
push
cmovae
sub
pop
shl
bound
inc
or
and
add
jo
daa
push
call
test
sub
rcl
sahf
jmp
fwait
sub
sbb
test
mov
je
inc
xchg
cmp
movs
mov
sbb
shl
aad
lods
add
test
aas
cmps
and
outs
pop
mov
pop
jo
push
push
scas
adc
pop
xor
xchg
inc
mov
fbstp
ins
push
ficomp
mov
mov
pop
data16
outs
shl
dec
adc
sub
inc
aaa
lahf
arpl
add
adc
dec
xchg
cmp
pushf
xlat
xor
jp
ror
sbb
movs
jbe
arpl
test
xor
jl
add
sbb
not
test
push
stos
mul
xlat
adc
xor
daa
dec
jb
popa
movups
mov
dec
add
cdq
fisubr
mov
pop
sbb
imul
je
idiv
mov
int
dec
pop
add
scas
adc
xor
lods
je
imul
adc
shl
outs
mov
pusha
daa
and
rol
lods
adc
sbb
lahf
lahf
inc
in
pusha
adc
and
jae
and
xor
dec
jle
stos
mov
adc
dec
push
sbb
xor
pop
fistp
inc
stos
xlat
and
add
(bad)
mov
stos
pusha
das
test
pop
popa
adc
and
jo
test
ret
and
aad
pop
jecxz
xchg
popa
aaa
or
mul
and
shl
push
add
(bad)
sub
sbb
inc
and
ja
mov
and
mov
xchg
push
add
pop
ret
sbb
mov
not
outs
call
sub
sbb
mov
sub
fwait
aaa
sbb
push
sub
push
add
sti
push
rol
and
aas
push
mov
xor
or
sub
inc
mov
push
lea
and
stos
jae
pop
stos
mov
sti
inc
inc
sub
and
imul
sub
or
jecxz
sub
pop
cmp
xlat
jnp
ins
shl
mov
daa
jmp
fild
ss
sub
ror
push
lock
aad
xor
repz
inc
or
sbb
dec
out
and
loopne
xor
push
repz
sbb
mov
ja
ja
(bad)
test
sub
adc
push
(bad)
xchg
cdq
stos
mov
add
mov
aad
mov
adc
enter
add
std
(bad)
(bad)
jmp
mov
movs
lock
js
sub
jmp
cdq
rep
loopne
and
mov
movs
mov
push
push
in
cmp
cwde
or
enter
or
jns
cmp
or
adc
add
cwde
loop
adc
cmp
data16
and
or
cmp
add
lds
push
mov
push
cmp
js
jne
add
pushf
adc
cmp
enter
inc
push
inc
inc
and
inc
inc
and
or
push
movs
cmp
push
or
in
cmp
sbb
or
sub
xor
dec
cmp
jo
mov
xchg
sub
mov
sar
call
cmp
sbb
cmp
dec
cmp
nop
adc
js
cmp
test
mov
rcr
lock
push
adc
nop
add
sub
inc
cmp
clc
cmps
cdq
add
push
cwde
(bad)
inc
or
mov
mov
cmp
cmp
cmp
cmp
push
or
sbb
sub
out
mov
cmp
cmp
mov
test
xor
or
xchg
sub
and
cmp
sub
inc
push
sub
test
ins
and
pushf
outs
nop
and
ds
lock
ds
aas
sub
cmp
inc
aas
push
adc
(bad)
jg
aas
je
cmp
aas
cwde
aas
movs
aas
mov
mov
sbb
clc
jg
pop
inc
shl
adc
sbb
adc
scas
xor
add
jo
jl
or
mov
cmp
dec
(bad)
call
xor
out
sbb
and
xor
cmp
dec
xor
xchg
test
or
xchg
add
cli
rcr
or
call
sub
or
pop
cmp
bound
mov
inc
aam
clc
dec
add
adc
push
and
cmps
fs
adc
jl
mov
xchg
add
dec
outs
mov
inc
ror
pop
cmps
add
clc
or
sbb
push
xor
push
add
inc
push
mov
xor
movs
add
or
mov
dec
inc
mov
int3
push
dec
inc
movs
and
cld
xor
add
dec
shl
inc
movs
jb
xor
xchg
add
je
sbb
inc
mov
jo
push
in
xor
ror
ss
ss
pop
ss
jl
xchg
outs
lods
push
sbb
fsub
pop
or
and
sbb
push
dec
inc
js
cmp
cmp
nop
es
ror
nop
add
mov
inc
pop
adc
jp
and
or
add
add
imul
inc
add
and
in
cmp
add
adc
adc
sub
adc
or
aaa
push
dec
sar
mov
cmp
mov
repnz
rol
data16
or
cmp
outs
xor
cmp
inc
pop
jge
dec
cmp
pusha
cmp
js
cmp
pusha
hlt
nop
cmp
inc
pop
xchg
cmp
mov
cmp
mov
cmp
rol
jge
or
adc
cmp
inc
sahf
mov
cmp
jo
pop
dec
shr
cmp
mov
dec
add
fsubr
and
inc
retf
fstp
xchg
add
cmp
mov
cmp
retf
pusha
into
jo
js
aam
and
cwde
test
pop
adc
fidivr
inc
(bad)
hlt
call
cli
test
add
and
xor
ds
cmp
push
and
cwde
add
add
push
shl
cmp
jle
lock
adc
and
sub
cmp
inc
push
push
ds
and
jo
add
xchg
add
outs
mov
ss
call
cmp
ja
aas
sbb
ror
inc
sub
xor
aas
dec
dec
pop
aas
pusha
ror
std
dec
jo
js
mov
nop
push
mov
aas
std
hlt
mov
aas
fsub
aas
lock
push
popa
add
xor
push
xor
outs
add
jb
xor
pusha
xor
jmp
xor
sub
lahf
xchg
xor
mov
xor
jmp
adc
add
cmp
inc
cmps
mov
mov
push
dec
cwde
push
push
inc
add
mov
ror
mov
js
loop
push
cmps
sbb
sub
xor
dec
retf
pusha
lahf
jle
add
nop
(bad)
mov
cmps
test
mov
xor
loop
xor
daa
add
out
jmp
and
xor
cmp
dec
xor
pusha
xor
loopne
cmps
push
(bad)
nop
jge
aad
dec
test
mov
shl
or
xor
cmc
aad
pop
push
lock
adc
xor
push
and
add
jge
cmp
push
push
xor
and
sub
sub
mov
(bad)
stos
adc
xor
inc
out
pop
lods
add
add
fnsave
jecxz
pop
push
adc
dec
outs
outs
sbb
xchg
cmp
adc
cmp
cmp
push
aas
cmp
mov
pop
and
scas
cmp
dec
mov
cmp
mov
outs
mov
cmp
cmp
cmp
add
cld
cmp
sub
lock
inc
out
cmp
xor
dec
ds
xchg
adc
sbb
add
pop
fcmovu
mov
jbe
fbld
xchg
ins
xor
push
xor
cmps
aas
cld
xchg
push
xchg
xor
stos
xor
(bad)
dec
push
pop
xor
xor
xor
add
xor
xor
xor
xor
xor
xor
outs
aad
lock
xor
sub
sub
rol
dec
ins
fbld
popf
adc
jg
mov
push
mov
clc
es
outs
cmp
mov
cmp
sub
jmp
jmp
add
or
push
cmp
cmp
call
mov
dec
mov
loope
cld
cmp
cmp
push
cmp
sub
cmp
adc
mov
cmp
dec
cmp
cmp
cmp
cmp
cmp
fld
push
xchg
ds
ds
aas
xlat
cld
pop
dec
lock
lahf
dec
xor
cld
xor
mov
jl
data16
push
or
xor
jmp
xor
sbb
pop
popa
add
ss
xor
and
bound
retf
mov
out
ss
push
push
aaa
sbb
test
push
dec
inc
aaa
inc
ds
sub
stos
sub
push
cmps
outs
mov
sbb
mov
aaa
repnz
rcr
cmp
sbb
jge
inc
or
mov
sub
cmp
jmp
add
or
adc
std
mov
jg
les
cmp
xchg
or
mov
outs
nop
scas
xor
mov
outs
or
inc
xor
jg
jmp
sub
(bad)
cmp
cli
outs
xor
xor
xor
sub
dec
mov
out
xor
xor
xor
or
clc
out
call
xor
xor
xor
xor
xor
xor
xor
jbe
jnp
sub
xchg
xor
(bad)
adc
xor
pop
aaa
sub
aaa
cmp
lock
data16
cmp
cmp
loope
cld
add
imul
sub
(bad)
(bad)
stos
(bad)
ds
jmp
imul
xor
xor
push
push
dec
add
dec
push
ss
xchg
shl
sbb
and
cmp
cmp
cmp
mov
(bad)
ds
mov
(bad)
push
xor
ins
retf
xor
or
jns
shl
jo
fidiv
or
jp
cli
rcr
mov
(bad)
cmp
cmp
es
cmp
cmp
jb
mov
pop
aas
add
fbstp
cmp
jno
ja
sbb
pop
xor
arpl
mov
sbb
out
xor
stos
cli
ss
cmps
aas
mov
cmp
pop
cmp
gs
das
cmps
sub
cmp
cmp
jmp
cmp
inc
leave
pop
adc
adc
add
pop
rcl
push
outs
cmp
xor
mov
lods
aas
or
xor
xor
popa
dec
das
push
add
xchg
sbb
xor
lds
dec
fidiv
mov
push
xor
xor
(bad)
(bad)
jns
mov
mov
leave
add
mov
cmp
arpl
xor
xor
mov
add
aad
popa
push
adc
and
aas
aaa
gs
scas
aaa
ror
(bad)
jp
loopne
dec
and
inc
cmp
cmp
dec
enter
scas
mov
ds
aam
jne
add
scas
jmp
adc
cld
outs
jb
xor
push
jo
or
movs
xor
push
cs
or
xor
xor
mov
add
inc
dec
push
xor
ss
or
jp
adc
xchg
inc
dec
sub
cmp
cmp
cmp
arpl
ret
cmp
loopne
cli
cmp
xchg
test
cmp
push
jle
fadd
stos
adc
das
inc
(bad)
mov
jl
xchg
mov
ds
or
ucomiss
fstp
(bad)
ds
lods
fiadd
sar
dec
pusha
loop
sbb
sahf
jbe
mov
retf
xor
lock
popf
inc
cld
xor
sub
sub
add
movs
xchg
xor
loopne
add
xor
ret
xor
inc
adc
pop
push
xor
arpl
pop
js
cmp
xchg
and
cmp
cld
and
add
jle
int
adc
sbb
inc
xor
sbb
add
cdq
test
add
lahf
pop
std
lahf
xchg
push
xchg
outs
lahf
mov
jb
stc
xor
lahf
mov
and
xchg
into
pop
in
cs
push
add
mov
adc
and
scas
and
push
add
cmps
sub
cmp
clc
in
adc
sahf
cmp
xor
or
pusha
cdq
es
push
add
inc
push
push
dec
xlat
icebp
add
loope
dec
int3
add
daa
cwde
or
adc
inc
and
add
fist
xor
pusha
and
lods
and
push
ins
add
xchg
push
cmp
ja
dec
xor
stos
mov
push
shl
divps
imul
cwde
enter
or
imul
cmps
ds
mov
jno
xor
inc
add
mov
ja
or
lahf
pusha
pushf
inc
shl
clts
cs
add
dec
and
pop
sbb
or
jne
adc
inc
movs
jne
push
sbb
call
dec
in
and
pusha
(bad)
xor
das
ins
add
enter
sbb
mov
cld
xor
and
cmp
outs
sub
add
push
cmc
popa
cwde
add
inc
jmp
push
mov
into
or
add
mov
pop
bound
xlat
push
push
je
inc
push
inc
pop
sub
jne
inc
in
(bad)
dec
xor
bound
mov
popf
loopne
or
push
push
or
adc
inc
ja
enter
fcmovnb
lock
rcr
inc
push
aaa
(bad)
pop
mov
sub
retf
not
mov
out
inc
jmp
sti
mov
jae
movs
push
fbstp
xor
push
popf
xchg
je
or
test
jns
adc
sub
adc
ficom
pop
mov
dec
pop
les
xchg
inc
push
lock
or
les
push
adc
pop
mulps
sub
arpl
pop
sbb
or
stos
jp
pop
ins
sub
(bad)
pusha
arpl
js
pop
sar
or
push
pop
sub
push
cmp
mov
rcl
push
iret
hlt
jg
sahf
adc
add
mov
add
push
mov
(bad)
xor
mov
mov
(bad)
call
sahf
mov
int
jp
and
or
and
jns
out
dec
bound
sahf
out
sahf
nop
cwde
mov
iret
sar
push
and
dec
repz
xlat
aam
retf
mov
push
retf
inc
and
ins
test
das
test
cwde
sbb
loopne
fcmovnb
daa
mov
js
adc
data16
jp
stos
xor
push
mov
pusha
mov
dec
and
add
in
pop
adc
dec
push
je
mov
sub
sub
stc
add
test
adc
dec
cmp
das
repnz
add
add
adc
(bad)
into
xchg
mov
ret
add
xor
push
xchg
pusha
popa
sar
les
mov
dec
in
jno
xchg
stos
out
mov
mov
jecxz
fbstp
xchg
add
and
push
or
and
sub
aaa
adc
jg
mov
xchg
sub
pop
sub
sbb
adc
rcl
cmps
invd
add
mov
add
adc
cmp
sbb
mov
add
sbb
add
inc
jg
dec
shl
jge
aas
js
mov
push
xchg
inc
jbe
daa
daa
and
mov
add
push
arpl
and
push
iret
adc
jns
daa
aas
ds
jno
daa
daa
dec
add
or
xchg
and
or
adc
and
mov
outs
pop
cmp
ss
pusha
or
mov
adc
rcr
and
leave
das
sbb
(bad)
retf
ss
lock
adc
ins
das
add
sbb
cmp
mov
jle
xchg
xor
xor
and
or
sbb
in
shr
rcl
gs
or
fidiv
sbb
cmp
xchg
imul
test
inc
mov
lahf
cs
jp
xchg
push
cmp
aaa
sub
enter
or
inc
add
push
test
out
inc
sbb
(bad)
scas
push
cwde
mov
or
xor
dec
xor
pop
jb
test
stos
aam
and
add
es
call
in
xchg
cmps
imul
inc
push
ja
in
cs
mov
pusha
pop
sbb
or
rol
or
cmp
dec
pop
push
add
add
add
dec
sub
dec
stc
xor
fld
out
rol
in
pop
call
inc
xchg
dec
pop
aad
inc
add
push
repnz
add
inc
fld
repnz
add
dec
scas
test
into
xor
inc
dec
adc
mov
enter
or
inc
test
into
loopne
gs
xor
lods
mov
cmp
push
xlat
mov
je
xor
pop
(bad)
push
mov
in
mov
mov
dec
add
clc
test
jbe
movs
inc
and
call
xchg
sub
outs
retf
call
dec
mov
(bad)
js
add
push
push
jnp
sbb
cdq
js
inc
movs
push
inc
xor
cmp
or
rcr
movaps
xor
xchg
cmps
pop
ret
xchg
xlat
sbb
mov
verr
adc
mov
xlat
call
iret
push
fist
ins
and
dec
xchg
lock
mov
ins
cmp
sbb
sbb
cmps
imul
out
adc
addr16
jbe
inc
adc
imul
scas
inc
adc
jae
jnp
inc
sbb
ret
push
jno
jmp
repnz
fisttp
push
in
scas
test
mov
lock
clc
cmps
jb
popa
inc
or
cmps
pop
jl
hlt
into
and
push
lds
jo
fcom
mov
mov
out
push
sbb
clc
pop
inc
test
fadd
sbb
retf
inc
xor
add
sbb
mov
pop
sub
inc
ins
je
pusha
dec
mov
ret
inc
push
dec
xlat
sub
add
pop
mov
or
pop
cmp
pop
pop
sbb
or
push
dec
and
and
mov
lods
inc
mov
jnp
ss
dec
and
jle
push
xor
scas
or
add
dec
mov
dec
cmp
push
push
or
scas
xchg
inc
(bad)
mov
and
pop
outs
or
mov
xor
outs
or
mov
pop
sbb
out
jb
add
lock
sub
test
sub
pop
and
or
mov
jge
pop
out
repnz
shr
push
popa
xor
rcr
pop
mov
xlat
pop
call
mov
imul
adc
jl
add
pop
sti
ror
sbb
and
dec
mov
jecxz
ins
ficom
ret
add
adc
and
adc
and
pop
xchg
xchg
xchg
xchg
and
xchg
xchg
xchg
xchg
stos
rcl
leave
leave
enter
and
xor
leave
leave
leave
inc
push
data16
leave
leave
leave
mov
adc
shl
fistp
(bad)
xchg
fcom
push
data16
scas
or
add
pop
add
je
push
xor
gs
mov
ss
in
add
or
or
mov
cld
outs
jb
loopne
sbb
add
je
fs
xor
adc
add
adc
jns
xlat
or
or
jb
cmp
scas
inc
inc
out
push
push
fsub
and
test
cmp
cmp
dec
out
add
xchg
fsubr
out
test
push
nop
add
lea
cmps
inc
xchg
or
adc
add
xor
shl
nop
dec
enter
or
nop
dec
dec
stc
cwde
xchg
or
nop
xchg
enter
call
cmp
xor
(bad)
int
xor
cmp
nop
and
adc
out
push
movs
adc
mov
add
call
pop
add
and
inc
push
push
xchg
inc
repnz
inc
push
dec
pop
mov
or
add
inc
and
mov
sbb
lahf
add
in
and
dec
and
fs
mov
fs
aam
mov
sbb
push
sbb
sbb
push
or
sbb
or
adc
jb
stos
stos
fcomip
and
xchg
dec
xor
and
fbld
sub
fs
dec
xchg
lods
les
add
nop
push
push
xchg
call
mov
inc
in
push
or
nop
cld
dec
push
xor
add
add
inc
xor
nop
add
inc
jb
add
or
adc
dec
and
adc
mov
or
pop
or
jp
add
add
push
ss
and
xchg
es
dec
(bad)
nop
stc
mov
and
int
pushf
mov
out
mov
sub
fs
data16
add
add
fs
push
adc
and
test
adc
jnp
add
push
jne
inc
or
push
mov
dec
out
xor
push
cmp
jb
loope
inc
or
popf
xor
sbb
sub
adc
add
leave
adc
or
aaa
mov
and
popf
test
or
sub
cmp
xor
mov
lods
and
cli
pop
cmp
and
dec
cmps
pushf
xchg
and
jo
cld
mov
xor
stos
popf
xchg
dec
push
ins
add
adc
sbb
add
and
xchg
shr
push
out
mov
push
(bad)
mov
add
not
retf
mov
and
pop
sub
ret
push
sub
jo
sahf
wbinvd
in
popa
jg
inc
adc
jae
or
mov
sahf
push
pop
add
out
and
push
ds
inc
cdq
pop
movs
call
xchg
test
add
jmp
and
cld
add
push
sbb
(bad)
dec
add
and
aam
add
or
adc
dec
loop
aam
push
push
into
outs
dec
mov
lds
and
mov
leave
cwde
dec
bound
lahf
and
scas
xor
adc
inc
push
or
cli
mov
sub
(bad)
adc
and
jns
add
(bad)
and
cmp
cmp
mov
inc
inc
adc
nop
out
and
call
add
inc
imul
and
jb
sbb
xor
int
pop
inc
pop
repz
xor
xor
enter
(bad)
mov
inc
fs
adc
pop
jl
cmp
cmp
call
sar
(bad)
cmp
sbb
movs
mov
jle
inc
or
int
das
push
shl
cmp
or
hlt
sub
repnz
retf
adc
cs
dec
push
dec
and
nop
mov
mov
popa
sub
xchg
sbb
mov
popa
pop
retf
dec
sahf
addr16
adc
dec
sbb
nop
add
in
in
popa
jb
test
dec
iret
push
jb
dec
push
dec
enter
push
pop
push
mov
mov
pop
pop
sbb
xchg
stos
xchg
clc
(bad)
adc
nop
and
push
mov
test
pop
sahf
out
bound
inc
leave
push
adc
inc
cs
xor
adc
add
cmc
push
and
or
imul
push
retf
jb
sbb
repz
repz
xor
or
push
cdq
(bad)
(bad)
jg
pop
push
pop
cld
mov
push
push
push
mov
push
push
retf
adc
add
outs
cmp
jne
or
dec
hlt
int
mov
adc
je
cmp
neg
mov
and
pop
cld
mov
call
inc
loop
cmp
cmp
je
or
add
push
add
add
push
or
mov
mov
and
jp
fisubr
ror
mov
loope
mov
jb
mov
and
cwde
mov
mov
inc
mul
mov
imul
call
xchg
mov
shr
inc
mul
cmp
stos
jae
cld
daa
icebp
lahf
movs
mov
mov
push
dec
je
xchg
ror
dec
ja
or
cs
mov
jbe
xor
popa
pusha
dec
ins
imul
xor
push
jb
sub
sub
jae
test
or
inc
(bad)
popa
stc
mov
clc
adc
and
sub
mov
outs
ins
gs
in
in
mov
add
fild
aad
and
nop
add
aas
dec
add
inc
mov
add
sbb
dec
add
push
sub
or
sbb
xor
shr
or
and
aas
dec
add
and
test
sbb
inc
push
dec
dec
add
adc
add
inc
push
inc
aas
add
xchg
mov
add
add
adc
and
retf
adc
pop
dec
add
mov
bound
and
clc
scas
push
xor
add
inc
sub
inc
inc
add
inc
les
and
jle
or
arpl
enter
(bad)
(bad)
daa
jnp
xchg
push
mov
lock
jo
or
pop
gs
das
push
pop
in
test
push
inc
rcl
push
jo
add
adc
push
enter
cmp
sub
rcr
add
add
xchg
adc
cli
add
push
and
push
stos
add
cwde
inc
call
lods
test
in
shl
inc
fwait
sbb
pushf
clc
inc
or
inc
jmp
ret
cmp
xchg
add
or
mov
dec
jmp
jae
adc
enter
xor
or
inc
push
movsx
and
jmp
push
inc
inc
shl
test
je
inc
cmp
jle
xchg
or
(bad)
or
or
loope
dec
lock
push
das
add
sbb
xor
push
xor
push
repz
mov
icebp
dec
inc
les
and
inc
adc
mov
push
add
xor
dec
aaa
sub
inc
jg
and
mov
or
and
jmp
iret
rcl
xor
push
in
lock
(bad)
dec
jne
dec
mov
cld
(bad)
add
and
fild
sub
movs
aas
std
jl
jg
int
nop
cmc
sbb
pop
or
sahf
(bad)
in
sub
clc
jge
rep
pop
stos
or
mov
and
clc
adc
or
clc
xchg
dec
jne
or
and
pop
popa
imul
adc
push
push
sbb
jp
jns
xor
xor
leave
aaa
dec
cdq
xor
add
out
add
xor
loop
and
cmp
push
jmp
outs
add
push
call
sbb
lock
push
lods
push
in
mov
mov
in
loopne
(bad)
aad
push
cmp
or
cmp
mov
enter
lods
sbb
jp
js
sub
push
shl
and
inc
jmp
or
pop
mov
sub
ja
sbb
and
and
stos
call
adc
xchg
stc
xor
fist
dec
mov
dec
mov
jo
icebp
ja
sti
cld
cmp
je
lea
adc
pop
call
aaa
xlat
or
or
(bad)
in
and
mov
(bad)
dec
cld
add
ds
retf
loope
in
adc
mov
and
jmp
mov
rcl
enter
je
or
add
imul
jo
push
dec
push
test
clc
pop
dec
adc
cmp
mov
jnp
sub
ret
push
mov
fstp
aam
stos
cs
fcmovb
sti
jns
pop
or
lock
pop
sar
test
push
aaa
add
and
push
jp
sbb
sbb
push
rol
jne
mov
fstp
sbb
pop
cmp
xor
sar
jl
cmp
nop
stos
or
fist
dec
ins
jno
shr
outs
xor
movs
arpl
sub
nop
lahf
or
imul
sbb
adc
jo
out
dec
add
or
or
push
js
mov
loop
mov
mov
shr
int3
or
pop
mov
dec
loop
pop
call
sbb
aam
and
add
iret
inc
pop
or
and
jg
ret
xor
loope
jl
(bad)
lock
pop
dec
add
xor
jbe
in
push
or
cmp
out
fimul
test
push
xchg
movs
mov
shr
test
adc
xchg
out
cmp
pop
mov
and
andps
cs
inc
pop
loop
sbb
pop
shl
jns
retf
and
xchg
out
pusha
dec
je
jo
dec
sahf
inc
fs
push
mov
or
add
xchg
jo
add
icebp
and
cmc
add
push
adc
jg
in
add
jae
adc
je
pop
shl
fwait
mov
pop
retf
inc
add
or
inc
or
icebp
test
add
push
dec
push
adc
aam
pop
add
dec
adc
xchg
add
into
test
sub
xchg
call
add
es
pop
push
xchg
dec
adc
inc
and
dec
xor
or
jge
add
mov
adc
and
mov
and
and
aas
inc
inc
sbb
jb
dec
add
add
cmp
jb
ins
jo
or
xor
ja
fs
cmp
xor
data16
push
sub
(bad)
jmp
arpl
xor
sub
sub
xchg
push
cmp
xor
xor
mov
pop
and
leave
in
mov
or
(bad)
sar
cmp
das
ja
cs
das
inc
push
inc
push
sti
dec
pop
jb
dec
xor
push
dec
das
jbe
addr16
add
sub
push
dec
push
add
mov
ds
adc
cmps
not
ins
mov
xor
jb
je
adc
add
loopne
das
pop
hlt
and
shr
pop
call
(bad)
or
(bad)
popa
and
xor
(bad)
fstp
add
inc
push
xor
push
push
dec
inc
sbb
(bad)
(bad)
inc
jae
xor
push
pop
push
aaa
ins
push
ss
inc
push
js
gs
inc
jbe
push
ins
dec
(bad)
(bad)
inc
push
xor
inc
jb
inc
push
push
fs
jno
jb
dec
jp
outs
dec
inc
aaa
(bad)
call
dec
push
sub
cmp
pop
ins
jp
bound
fs
xor
ja
jo
(bad)
(bad)
cmp
jne
inc
push
push
jno
pop
inc
xor
cmp
dec
dec
je
push
push
dec
fild
sub
fsub
ins
inc
jp
(bad)
(bad)
cmp
xor
push
xor
pop
addr16
ss
pop
cmp
pop
sbb
push
jp
bound
dec
ins
add
jns
inc
xor
(bad)
pop
inc
push
cmp
jb
add
add
lods
cwde
mov
mov
sbb
cmp
sub
push
push
sti
scas
test
mov
das
adc
mov
adc
icebp
adc
adc
ss
jnp
ja
cs
inc
(bad)
or
retf
(bad)
cmp
inc
fs
and
imul
inc
mov
mov
push
dec
jno
loop
pop
inc
js
sub
sbb
movs
das
ins
ja
xor
pop
stos
push
shr
dec
imul
dec
ins
int3
cwde
add
jo
ffree
xor
pop
adc
push
int
pusha
pusha
pop
mov
or
test
mov
xor
pop
and
or
fld
std
xchg
call
push
fs
push
je
xor
aaa
push
dec
jo
push
add
jae
push
sbb
mov
das
lahf
or
scas
mov
push
jns
bound
xor
inc
imul
inc
std
(bad)
(bad)
outs
push
push
sub
aaa
pop
jae
push
jp
jno
imul
(bad)
(bad)
push
inc
jno
jb
push
addr16
xor
imul
jns
dec
inc
push
inc
jbe
cmp
sti
pop
cld
inc
dec
push
jne
data16
addr16
jbe
cmp
jo
pop
popa
pop
push
pop
push
inc
ins
dec
xor
aad
fwait
dec
push
dec
fs
js
push
inc
push
add
(bad)
aaa
cli
xor
jns
push
dec
dec
jo
imul
push
mov
dec
dec
cmps
call
jl
jno
push
ja
cmp
dec
dec
ins
push
push
data16
xor
jo
push
ins
or
bound
cmp
inc
push
dec
push
push
imul
xor
xor
invd
call
push
fs
jae
popa
mov
dec
dec
push
jo
fistp
push
jne
outs
xor
add
push
xor
inc
dec
push
push
dec
dec
dec
push
dec
fsub
xor
pusha
cld
add
inc
fs
outs
dec
jo
jne
inc
push
ja
(bad)
mov
push
call
dec
imul
sub
mov
sub
pop
(bad)
dec
nop
dec
pop
jo
imul
dec
push
jmp
sbb
xor
cmp
sbb
cmp
push
and
sub
jno
lock
lock
scas
je
outs
sub
push
dec
push
data16
bound
(bad)
out
fcomp
dec
inc
ins
inc
sub
xor
je
bound
pop
push
inc
cld
outs
inc
or
ja
inc
xor
dec
pop
cwde
or
jl
pop
es
push
pop
nop
dec
xor
inc
dec
nop
xor
add
das
cmp
inc
cli
xor
pop
mov
outs
push
inc
call
ins
xor
imul
inc
xor
push
add
xor
pop
jne
bound
push
push
mov
mov
mov
xor
jbe
aaa
inc
jbe
push
mov
lods
jp
gs
dec
push
pop
add
xor
sub
dec
push
pop
inc
inc
add
pop
dec
mov
imul
inc
ins
inc
xor
pop
add
push
outs
push
jo
ins
inc
xor
ja
js
push
cmp
bound
xor
repz
pop
addr16
ja
push
ins
push
ja
dec
push
ss
cmp
loopne
or
push
pop
fs
push
dec
bound
jo
pop
inc
(bad)
cmp
arpl
adc
inc
xor
xor
cmp
(bad)
(bad)
inc
jo
dec
push
dec
dec
pop
push
xor
bound
bound
push
inc
add
(bad)
jp
jo
arpl
jns
ss
and
int
and
cmp
push
fcomp
inc
inc
cs
and
das
adc
icebp
or
pop
cld
and
ins
gs
dec
lock
cmc
jmp
xor
sub
xor
xor
sbb
inc
cmps
jge
mov
xchg
loopne
repz
frstpm(287
mov
mov
test
add
and
ret
add
lea
xor
and
inc
imul
sbb
pop
add
arpl
enter
bound
inc
xor
xor
fild
add
arpl
xor
xor
imul
pop
jg
and
stos
push
jb
pusha
inc
or
push
inc
jne
adc
in
jbe
adc
jne
shr
jp
xor
ins
cmp
push
jb
mov
test
retf
xchg
das
mov
sbb
sbb
js
cmc
sbb
ds
cli
xchg
xor
bound
int
jno
mov
mov
xor
push
mov
data16
data16
push
dec
push
push
xor
cmp
inc
popa
mov
dec
dec
jbe
inc
dec
dec
jno
mov
imul
pop
inc
dec
aaa
xor
gs
cld
pop
sub
xor
push
cmp
xor
dec
aaa
dec
push
mov
push
push
dec
xor
jb
inc
fs
dec
bound
dec
push
cmp
sbb
push
push
push
sub
or
clc
scas
pop
inc
push
xor
das
dec
bound
outs
sub
pop
imul
jo
lods
pop
addr16
pop
jo
imul
push
ja
jmp
push
gs
pop
xor
arpl
push
cmp
or
jo
cs
outs
arpl
imul
xor
jp
dec
push
inc
or
das
inc
cmp
(bad)
(bad)
js
addr16
dec
pop
jb
bound
outs
push
pop
xor
fs
addr16
jns
jg
call
imul
inc
outs
dec
jns
dec
push
jno
ins
mov
push
arpl
sub
sti
jae
outs
jbe
fdiv
dec
cs
push
dec
call
pop
ins
popa
sub
push
dec
out
push
xor
push
outs
xor
pop
inc
inc
(bad)
jg
rol
rcl
push
ins
inc
dec
inc
push
cmp
outs
xor
ins
inc
pop
outs
dec
dec
dec
jbe
outs
pop
xchg
imul
add
dec
popa
inc
popa
push
(bad)
push
jbe
xor
push
enter
dec
jae
ss
cmp
push
push
outs
inc
inc
dec
push
hlt
or
dec
dec
ss
push
outs
rol
pop
push
push
call
dec
jo
push
push
in
jp
jns
cmp
push
fdiv
test
jbe
addr16
dec
dec
push
das
mov
jge
arpl
ins
xor
jns
(bad)
dec
push
push
jo
cmp
inc
inc
jne
pop
jno
cmp
ss
bound
jbe
jp
mov
ss
pop
ins
dec
inc
mov
jb
mov
ins
je
push
je
stos
(bad)
call
pop
jb
imul
dec
push
cmp
push
xor
pop
xor
jns
jp
cld
jg
push
popa
dec
ja
arpl
push
dec
xor
push
imul
push
addr16
aaa
jge
adc
inc
test
inc
inc
inc
jne
push
mov
dec
dec
ins
je
push
pop
inc
xor
arpl
(bad)
jnp
sub
xor
cmp
add
adc
cmps
popa
xor
and
nop
mov
add
inc
add
add
cmp
mov
add
ror
add
xchg
or
add
add
pop
mov
cld
jg
clc
aas
push
jns
sahf
das
pop
jmp
rol
daa
jns
pop
add
pop
or
push
aas
(bad)
jg
pusha
sbb
add
add
prefetch
or
pop
ror
mov
rcr
mov
xchg
jg
addr16
sahf
data16
push
out
ficomp
in
xor
out
ja
add
loopne
fs
xor
lock
sbb
pop
push
(bad)
aas
fcmovnu
cmp
xchg
xor
ins
push
out
pop
lock
xor
pop
std
out
int
cmp
add
xchg
cmp
out
jbe
jg
sbb
jns
mov
jo
nop
xchg
fisttp
inc
lock
push
or
push
add
and
jns
nop
es
js
out
push
add
nop
jne
inc
dec
push
add
add
call
loopne
add
ja
lods
fld
add
das
aas
dec
pop
pop
and
outs
daa
add
pop
data16
std
clc
lock
aas
sbb
clc
dec
add
push
mov
jnp
inc
pop
outs
clc
pop
xchg
mov
addr16
fcom
add
loopne
pop
sbb
sub
add
nop
in
fsubr
ds
jg
mov
sub
call
pop
fldenv
cmp
adc
adc
mov
pop
cs
add
and
pop
cld
pop
cmp
fdiv
aaa
pop
aad
add
add
adc
sub
iret
ss
cmp
or
mov
ins
cmp
sub
inc
add
inc
xor
inc
shl
xor
sbb
push
and
jp
push
sbb
xchg
jne
(bad)
jbe
sbb
clc
clc
dec
sbb
cmp
data16
push
sbb
or
test
cmp
push
pop
loope
add
fld
and
sub
mov
test
push
add
sub
add
sar
ror
cmps
sbb
fs
xor
lods
cmp
mul
mov
and
adc
mov
xchg
inc
pop
(bad)
sub
and
and
cmps
dec
inc
mul
and
mov
fidivr
push
sub
(bad)
and
stos
fwait
xchg
xchg
retf
push
inc
pop
or
retf
cmp
xchg
push
lods
cmp
cmps
push
mov
test
ja
add
arpl
dec
lea
push
and
fst
pop
xchg
dec
lods
mov
fild
(bad)
test
bound
adc
mov
sbb
pop
jae
loopne
mov
jne
and
inc
jecxz
and
sub
out
and
inc
stos
adc
pop
sbb
(bad)
cmp
dec
shl
adc
sub
rcr
push
cs
sbb
mov
push
add
dec
cmps
push
xor
mov
xlat
shr
sub
or
out
inc
push
jp
pusha
xchg
loopne
sbb
push
sbb
inc
adc
lods
pop
or
jae
or
inc
lods
add
pop
mov
jmp
aaa
(bad)
pop
xchg
push
(bad)
lea
inc
and
prefetcht0
mov
btr
add
out
packsswb
cli
frstor
inc
sbb
push
dec
xor
lods
push
or
push
js
bound
out
add
sub
inc
and
and
push
sar
dec
dec
push
xchg
adc
nop
push
push
adc
cmp
sar
or
ds
arpl
ret
inc
or
ror
ror
cs
sbb
cmp
daa
push
inc
push
fist
jo
push
or
sbb
mov
dec
mov
scas
loope
sub
jb
(bad)
imul
loopne
xor
xchg
sub
(bad)
or
push
dec
sbb
jg
inc
add
and
mov
add
adc
cmps
add
ins
mov
rcl
mov
les
(bad)
aas
sbb
add
and
rcr
push
push
ins
mov
or
and
popa
cmp
push
mov
sbb
dec
mov
push
xchg
xchg
cmp
push
xchg
inc
sub
push
xor
mov
mov
jbe
and
addr16
fisub
and
inc
mov
pop
jg
push
xchg
xchg
push
mov
ins
stos
scas
dec
daa
and
stos
add
xor
add
jnp
mov
(bad)
dec
add
or
jmp
ret
xchg
or
sbb
push
fwait
mov
outs
rcl
mov
xchg
dec
retf
movs
push
dec
cmp
imul
xchg
inc
push
and
pop
mov
jbe
cmp
sbb
and
push
loope
mov
jb
jmp
add
sub
ja
movs
imul
add
call
cdq
xor
xchg
pop
jo
xchg
inc
jl
idiv
and
pop
or
or
aas
lahf
dec
sar
add
fwait
pop
add
test
xor
(bad)
jo
dec
mov
pop
sub
inc
pop
mov
inc
(bad)
sub
push
addr16
in
pop
or
pusha
stos
jno
jne
xor
push
test
es
lods
cmps
jmp
outs
jae
aad
sbb
(bad)
mov
fisttp
aam
push
mov
data16
mov
sar
cmp
pop
sbb
inc
aaa
pop
sti
mov
fisttp
xor
jmp
out
je
inc
mov
push
test
push
jecxz
arpl
shl
scas
push
jbe
pop
ins
xlat
sub
cmp
adc
sbb
fsubr
push
mov
adc
shr
push
xchg
dec
addr16
imul
ret
sti
div
push
out
pop
mov
sub
mov
out
jnp
jo
xchg
push
daa
xchg
sbb
cmps
jecxz
mov
dec
dec
cli
pop
imul
push
inc
and
adc
or
sti
mul
add
out
and
dec
popf
xchg
and
pop
cmp
push
fisub
xor
push
in
(bad)
xor
lock
push
xchg
push
call
imul
sbb
and
shl
push
out
(bad)
push
mov
inc
xchg
push
adc
add
mov
add
xchg
push
out
rep
add
xchg
mov
les
push
aaa
ja
and
and
jmp
mov
and
shl
ins
lods
pop
cmp
xor
inc
push
(bad)
test
pop
sub
shl
or
mov
outs
pop
xchg
dec
test
test
fwait
cmp
or
inc
sbb
jnp
sbb
inc
stos
pusha
es
arpl
cmp
dec
push
out
imul
cs
pop
stos
test
sbb
ficomp
test
(bad)
adc
adc
xor
mov
dec
adc
and
inc
pop
test
jo
sub
popa
xor
adc
pop
xchg
and
inc
dec
adc
out
imul
pcmpgtw
jg
push
push
lods
aam
pop
mov
les
adc
adc
mov
push
jmp
(bad)
lds
imul
test
inc
xor
mov
sub
adc
aaa
push
add
or
cmp
fwait
and
push
ins
stos
lahf
dec
pop
cmp
xor
lahf
adc
pop
or
push
or
inc
fcomi
adc
and
in
sub
stos
ja
adc
push
and
mov
pop
cmps
lods
add
add
cs
xchg
ficomp
sub
cmp
pop
mov
push
add
stos
mov
pop
data16
cmp
mov
dec
loope
test
mov
push
ja
pop
sbb
adc
jb
jo
rep
ins
inc
adc
addr16
rcl
and
and
sbb
push
cmps
inc
pushf
retf
aas
sbb
lds
dec
loopne
adc
add
(bad)
movs
out
push
dec
shr
ss
or
je
pop
or
inc
adc
movs
ret
retf
jmp
jae
sbb
(bad)
mov
jnp
fcom
sbb
ret
popa
or
push
scas
push
and
cs
inc
aas
shl
popa
mov
jp
je
imul
arpl
repz
push
or
mov
push
cmps
inc
dec
scas
sbb
mov
popa
xor
stos
dec
stos
mov
test
pop
stos
scas
inc
retf
add
xor
dec
add
jecxz
loopne
or
jecxz
arpl
pop
(bad)
rcl
setnp
add
pop
arpl
fistp
inc
ins
push
xchg
imul
xchg
scas
push
repz
mov
arpl
fs
dec
mov
dec
and
popa
jecxz
stos
or
(bad)
fstp
outs
xchg
jmp
leave
(bad)
repnz
jno
loop
mov
gs
sub
dec
lock
(bad)
lods
shl
cli
jae
push
push
xchg
mov
stos
pop
loop
outs
xor
pop
cmps
mov
mov
ins
pop
shr
fninit
mov
xor
sbb
(bad)
fbstp
mov
inc
retf
(bad)
or
mov
push
sub
lock
repz
push
pop
pop
les
sbb
lods
mov
(bad)
je
rcl
pop
bound
imul
jg
and
add
sub
push
mov
mov
xchg
pop
mov
outs
ror
mov
add
inc
or
aad
and
lahf
sub
add
cmp
push
inc
xor
mov
loopne
sub
push
bound
dec
and
es
bound
adc
add
sub
sti
push
adc
lds
dec
xchg
(bad)
mov
test
sbb
push
push
mov
pop
mov
mov
sbb
or
(bad)
scas
mov
cwde
dec
dec
push
mov
jns
jg
mov
or
sub
lods
inc
pop
xchg
fild
movs
and
cmc
adc
pop
xor
mov
rol
xor
mov
das
fisub
inc
or
daa
test
inc
mov
loopne
push
cmp
xchg
call
inc
dec
jae
push
push
mov
adc
mov
and
and
sub
dec
mov
shl
stos
(bad)
out
pop
jbe
pop
jb
(bad)
ja
push
add
push
sub
retf
xlat
pop
outs
pop
and
aas
adc
inc
mov
lahf
ret
push
das
sbb
adc
aas
jno
cmp
xor
xchg
mov
ins
mov
mov
dec
xor
cmp
xchg
mov
jmp
in
call
push
lea
loope
and
jae
(bad)
adc
ss
sub
pop
adc
xor
stos
dec
jp
push
inc
add
cwde
xchg
test
not
dec
adc
ret
mov
xchg
sbb
xlat
test
adc
jb
mov
ret
sub
pusha
lods
push
outs
push
inc
and
jnp
or
jo
daa
push
or
pop
aad
adc
outs
add
and
scas
pop
fld
scas
imul
mov
and
and
jmp
lds
pop
pop
sbb
push
inc
mov
outs
and
nop
inc
ds
xor
pop
shr
adc
daa
inc
call
sub
iret
aaa
and
mov
out
mov
stos
sbb
xchg
mov
mov
punpckhbw
add
fild
popa
rcl
jae
xchg
jo
dec
out
mov
and
out
test
add
or
lock
sub
and
pop
xchg
imul
push
dec
cmp
test
xor
fistp
mov
das
outs
ficom
inc
xor
imul
loopne
js
or
ins
pop
loop
iret
or
mov
cmps
shr
fcomp
sysret
add
sub
push
xchg
cmp
push
push
aas
inc
inc
dec
jo
(bad)
adc
mov
jecxz
aaa
stos
or
jo
arpl
jns
mov
lods
cmps
daa
sbb
sub
pop
stos
call
adc
xchg
mov
dec
bound
and
push
ror
push
dec
xchg
push
xchg
aam
sbb
adc
ja
(bad)
or
arpl
pop
jae
fcmovnb
mov
ins
xchg
cmps
push
inc
mov
and
fisttp
(bad)
hlt
mov
xchg
cmp
neg
repnz
sub
cdq
mov
outs
fs
inc
sub
pop
test
jo
bound
jno
(bad)
pop
or
sub
jmp
push
add
add
xchg
jo
and
and
cmps
pop
ffreep
push
mov
push
mov
sub
push
mov
sbb
sub
add
pop
sub
push
out
and
lahf
hlt
mov
pop
xchg
jo
add
sub
push
mov
push
cmp
fistp
loopne
int
inc
and
imul
xor
and
sbb
jmp
aad
cmp
push
inc
inc
shl
pop
pop
dec
sbb
sbb
ins
fcomip
adc
dec
inc
les
ret
add
pop
repnz
inc
stos
push
or
add
inc
mov
sbb
or
dec
cs
(bad)
pop
mov
mov
and
sbb
rcl
or
xchg
not
pop
pop
aas
inc
add
cmp
call
sbb
push
and
push
xchg
stos
inc
and
outs
bound
jne
xchg
push
push
cmp
adc
sbb
push
psrld
lods
or
push
adc
or
movaps
add
loopne
(bad)
mov
inc
mov
sbb
cwde
bound
dec
daa
fld
or
xor
sub
outs
mov
out
jae
adc
test
and
sbb
dec
rcr
push
popa
pop
scas
or
ficom
sbb
bound
inc
add
mov
nop
xchg
mov
nop
stos
lock
ret
ins
push
retf
outs
rol
adc
and
mov
push
adc
retf
cmp
pop
dec
mov
jg
and
and
jae
nop
sub
out
and
mov
mov
(bad)
push
mov
ss
loopne
test
xor
bound
mov
jecxz
adc
xor
fbstp
loop
pop
imul
pop
test
push
iret
dec
ret
aas
inc
xchg
lods
inc
imul
mov
out
inc
ja
pop
pop
mov
jae
inc
ja
inc
and
mov
and
es
cmp
xlat
cwde
test
out
push
shr
aas
add
jb
mov
add
(bad)
pop
dec
jmp
cmp
ret
das
jecxz
add
and
xchg
lods
push
mov
js
add
inc
sbb
(bad)
inc
mov
xor
or
jno
dec
je
outs
adc
add
xchg
and
aam
(bad)
xor
(bad)
stos
sub
mov
xchg
pop
adc
push
arpl
push
fiadd
aaa
push
pusha
mov
loope
stos
(bad)
nop
jno
sub
mov
test
xlat
sbb
pop
sub
jae
xchg
sbb
sbb
jae
xchg
and
mov
adc
add
cmps
and
mov
jp
inc
inc
shl
adc
daa
dec
aaa
jo
arpl
ror
dec
(bad)
push
add
push
nop
push
xlat
pop
add
popa
xlat
inc
inc
das
xchg
push
cmp
cmp
bswap
neg
add
push
cmp
daa
push
xchg
add
sub
inc
aaa
mov
dec
and
sub
pop
mov
cmps
outs
outs
arpl
and
sub
push
jnp
aas
sub
sbb
dec
push
movs
ja
outs
adc
mov
inc
or
and
xchg
add
iret
jnp
ins
sub
push
pop
sbb
and
push
outs
data16
and
add
adc
mov
rcl
ret
ret
aam
adc
pop
jbe
xchg
pop
or
rol
mov
pop
xor
push
inc
inc
pop
cs
jmp
mov
pop
stos
add
fisubr
mov
rol
or
mov
push
xor
mov
adc
mov
mov
push
stos
add
and
adc
mov
adc
popa
fwait
mov
xor
lods
lds
or
xor
mov
pop
bound
(bad)
xor
or
test
mov
pop
aaa
sub
mov
jae
pop
arpl
mov
aaa
imul
adc
rol
inc
pusha
or
and
loop
sub
sbb
cwde
jo
cmp
adc
pusha
xchg
mov
ja
push
or
inc
xor
pop
xchg
mov
dec
and
pop
mov
scas
or
adc
ficom
jb
pop
shl
push
sub
pop
fst
fimul
iret
rcr
cs
inc
sub
dec
(bad)
pop
dec
lea
push
pop
pushw
push
popaw
sbb
or
dec
mov
aaa
jbe
or
xchg
jcxz
add
pop
add
mov
mov
pop
push
ja
push
mov
ret
and
jg
jb
mov
lods
iret
ret
push
sub
sbb
mov
popf
inc
mov
add
and
sub
push
adc
out
jg
mov
arpl
sbb
and
jo
fist
push
sbb
je
stos
retf
dec
addr16
add
push
call
sub
test
repz
imul
test
dec
sbb
pop
or
shl
call
adc
ja
jne
adc
iret
jo
shl
mov
and
fiadd
sbb
jmp
sub
test
js
inc
pop
xor
and
sahf
sbb
daa
(bad)
sbb
mov
mov
retf
adc
mov
inc
out
jae
loop
lods
and
fist
hlt
mov
fisttp
inc
aaa
jae
jl
stos
xlat
aaa
mov
add
in
loopne
pop
adc
add
adc
out
dec
call
lods
push
imul
xor
inc
stos
(bad)
pop
ins
popf
pop
push
inc
push
push
retf
xchg
fs
or
jae
adc
add
ror
dec
adc
add
bound
add
or
shr
ret
sub
ja
push
imul
pop
pop
pop
shl
add
dec
dec
pop
sub
lahf
sub
and
mov
mov
or
sub
call
pop
ja
push
pusha
add
mov
pusha
xor
int
pop
pop
push
imul
add
dec
inc
jmp
ja
mov
push
xlat
add
and
or
arpl
push
pop
fs
shr
pop
push
inc
adc
inc
xor
dec
push
aas
sbb
inc
adc
dec
jo
push
xor
adc
xlat
call
xor
add
push
sub
repz
push
jnp
xor
mov
jae
es
add
pusha
jnp
cmp
(bad)
fimul
out
inc
jbe
sub
xchg
adc
adc
adc
add
ins
cmp
pop
dec
fild
scas
adc
jae
and
or
in
xchg
(bad)
ins
daa
daa
daa
mov
add
sbb
das
push
dec
pop
cmp
outs
jae
adc
fild
rol
dec
inc
mov
outs
mov
pop
imul
sub
add
and
cs
daa
retf
dec
cmp
dec
sub
and
or
cmps
hlt
dec
test
cmp
das
les
and
pop
pop
pop
lea
jg
push
pusha
(bad)
mov
dec
sti
pop
adc
bound
fwait
sub
mov
imul
xor
mov
outs
(bad)
add
ret
xchg
sti
test
outs
retf
push
jg
daa
mov
outs
mov
sub
jmp
or
es
ja
mov
rcl
xlat
mov
mov
add
mov
jmp
(bad)
jae
jmp
push
adc
add
pusha
lods
xchg
xor
iret
fadd
adc
sahf
inc
jg
or
lahf
ins
rcr
fist
dec
stos
adc
or
scas
push
mov
ficom
outs
aaa
pop
rcl
rcl
inc
sbb
add
jae
dec
rcl
push
add
mov
sub
ja
fs
aaa
pop
adc
adc
fisubr
jecxz
nop
mov
xchg
pop
mov
and
sbb
int
sub
ja
push
and
lahf
jnp
adc
in
and
aad
and
inc
imul
and
sub
push
lods
lods
xor
push
retf
arpl
jmp
test
sub
mov
or
ins
inc
pop
dec
adc
pop
push
and
outs
rcl
adc
fmul
lods
sar
or
or
mov
pop
sub
push
pop
outs
mov
push
mov
dec
movs
out
jecxz
lods
mov
pop
and
add
adc
add
push
mov
pop
dec
imul
out
sbb
les
and
adc
fwait
lahf
sub
cs
adc
add
jae
inc
cmp
push
or
lods
mov
push
mov
inc
js
add
add
pusha
ins
mov
jg
mov
xchg
push
call
daa
push
sub
es
arpl
push
inc
push
aad
(bad)
jg
adc
stos
push
and
(bad)
fstp
jbe
stos
inc
add
fimul
xchg
jp
mov
push
data16
push
pop
js
xchg
add
ja
ds
add
jnp
inc
out
push
icebp
pop
mov
inc
jmp
push
add
cmp
add
sub
aas
movs
or
dec
pop
and
aad
not
dec
ret
ret
aas
adc
xor
jo
rol
fs
push
mov
or
add
fidiv
dec
adc
xor
les
sub
push
inc
nop
push
scas
add
adc
ror
xchg
sub
add
sub
sub
mov
cmp
mov
mulps
xchg
push
add
sub
xchg
pop
out
stos
inc
sub
inc
das
(bad)
mov
stos
or
ins
mov
sbb
pop
and
push
sub
cs
ss
sti
imul
push
xlat
xor
push
sub
cmps
outs
test
xor
adc
lea
icebp
scas
mov
cmp
add
test
add
or
call
fcmovb
push
sub
inc
add
inc
js
shl
ja
shl
jne
add
pop
rcr
adc
aas
out
xor
shl
(bad)
adc
push
sbb
dec
add
ror
lahf
push
or
retf
pop
inc
add
les
mov
ja
push
rol
xchg
push
add
mov
pop
je
mov
nop
sub
mov
ret
(bad)
sub
and
push
aaa
addr16
ror
(bad)
pop
or
mov
sbb
push
mov
arpl
jg
inc
pop
lock
lahf
inc
jmp
push
sub
ror
add
outs
mul
daa
dec
adc
(bad)
(bad)
xor
adc
cmps
daa
nop
inc
xchg
dec
push
(bad)
jns
sbb
les
cmp
pop
xor
adc
pushf
push
inc
xchg
and
arpl
sub
ret
scas
cmp
add
mov
sbb
scas
rcl
push
or
out
int
bound
loopne
xchg
daa
ins
stos
popa
mov
(bad)
imul
test
or
les
jnp
adc
fcmovb
test
and
dec
out
jbe
and
and
sbb
sub
sbb
mov
jne
(bad)
sar
add
pop
jnp
jae
or
push
jbe
arpl
cmp
pop
sbb
stos
push
add
mov
cmps
test
les
mov
add
mov
ss
cmps
es
jge
jne
aaa
pop
lea
stos
pop
aaa
(bad)
fcmovne
sub
mov
(bad)
mov
pop
mov
add
out
mov
and
mov
cmp
bound
(bad)
bound
loop
ja
dec
repz
inc
add
or
dec
test
xlat
push
or
push
and
nop
shl
or
push
rcr
das
sbb
repz
and
aaa
mov
das
fild
scas
push
or
inc
pop
ror
mov
arpl
inc
jo
div
add
pop
add
xor
add
push
call
mov
mov
pop
test
sub
pop
push
aad
adc
(bad)
aam
push
dec
sti
dec
stos
ret
jp
push
mov
inc
cmps
inc
(bad)
adc
push
out
push
repz
push
popa
cmp
adc
adc
repz
repz
mov
push
cmp
adc
or
inc
test
jmp
pop
jo
mov
push
test
stos
inc
fcomp
sbb
mov
repz
add
adc
or
adc
xor
jnp
mov
or
aas
add
xor
or
in
xor
xor
xor
stos
aad
inc
xor
jmp
dec
pinsrw
pop
cmps
adc
adc
and
adc
aad
mov
iret
and
pop
and
push
es
dec
inc
packsswb
and
jp
ss
scas
mov
sbb
cmps
mov
dec
adc
arpl
mov
pop
daa
das
or
out
inc
push
push
fld
add
outs
mov
sub
movlhps
push
inc
dec
(bad)
jae
pop
inc
sbb
xor
pop
bound
push
test
cmp
dec
mov
add
sbb
cmp
ins
ja
jo
ret
inc
mov
scas
movs
add
sti
or
and
imul
adc
aas
jne
xor
daa
aaa
add
add
adc
cmp
dec
sub
push
pop
ja
bound
sahf
in
sbb
sub
sub
adc
and
arpl
push
mov
adc
push
or
sub
push
dec
fadd
mov
neg
arpl
mov
cmps
pop
ins
movs
call
mov
shl
aaa
(bad)
adc
inc
mov
jmp
mov
jmp
sub
push
xor
and
xor
stos
mov
daa
fwait
scas
xor
dec
shl
xchg
cmc
inc
dec
mov
daa
fisttp
popa
inc
in
and
adc
mov
dec
adc
sti
dec
or
ror
inc
sub
fs
shl
(bad)
or
push
outs
xchg
sbb
nop
addr16
push
pop
int
xor
inc
sub
imul
shr
mov
sub
sub
inc
inc
sbb
adc
sub
loope
add
mov
sbb
mov
iret
sar
sub
sbb
sub
jecxz
daa
and
adc
aam
jl
outs
outs
(bad)
fld
add
jne
push
les
and
mov
jl
pop
out
pop
and
or
pop
inc
pop
push
mov
cs
pusha
ins
stos
aaa
adc
outs
xchg
xchg
shr
es
xor
xlat
dec
or
cs
xchg
sbb
inc
xchg
outs
jmp
sbb
and
and
mov
pop
jmp
and
nop
mov
les
lea
repz
shr
or
fsubr
out
mov
mov
xor
adc
sti
push
push
mov
test
daa
retf
cmp
pop
mov
xor
mov
cmp
push
jg
jmp
cwde
fsub
out
adc
addps
dec
daa
imul
jno
aad
jbe
sub
cmp
out
arpl
mov
xchg
push
fistp
push
jecxz
mul
jae
mov
adc
test
mov
pop
mov
fucomip
dec
dec
or
stos
dec
or
sbb
fsubr
mov
add
push
mov
xlat
or
pop
sbb
sub
sub
push
mov
shr
or
mov
push
rol
add
shl
shl
or
xor
test
inc
in
and
or
or
xor
pusha
mov
arpl
mov
fbld
test
and
add
sbb
sbb
inc
addr16
(bad)
pusha
mov
adc
mov
lods
mov
out
sub
sub
imul
fwait
sbb
call
pop
inc
loopne
add
rol
mov
xchg
(bad)
push
xor
rol
sub
out
pop
cmp
push
pop
inc
fisubr
nop
push
add
imul
push
or
cs
stos
push
dec
and
adc
and
dec
and
cmp
aas
out
adc
ja
mov
sub
push
jg
bound
and
ja
aam
lods
retf
sbb
shr
sbb
sbb
pop
and
adc
xor
dec
inc
shl
mov
pop
les
add
shr
mov
cs
les
scas
mov
mov
ret
mov
dec
mov
das
push
push
ins
sub
popa
add
sbb
mov
pop
daa
mov
pop
call
cmp
jecxz
cmps
adc
dec
ret
mov
push
and
dec
mov
mov
sbb
sbb
sbb
mov
ja
sub
mov
fnstsw
inc
push
or
dec
imul
fwait
(bad)
xor
sbb
or
out
repz
movs
add
sbb
fist
add
imul
outs
sub
xchg
add
(bad)
mov
mov
add
shl
cmps
rol
pop
pop
sub
fild
jae
retf
daa
adc
add
scas
and
outs
cmp
out
inc
aas
push
pop
outs
dec
add
xlat
mov
cmps
pop
jge
dec
pop
inc
sbb
inc
mov
push
and
daa
pusha
stos
retf
and
test
push
(bad)
popa
retf
test
inc
push
xor
add
sbb
mov
les
movs
fwait
loop
push
push
gs
out
ficom
pop
push
pop
push
adc
cmps
ja
mov
add
push
push
jnp
or
das
pop
or
add
or
mov
test
push
ret
aas
call
test
add
adc
packsswb
xor
jae
daa
dec
aas
add
ror
jbe
daa
pop
cdq
add
adc
leave
add
xor
add
xchg
add
retf
add
(bad)
push
push
sti
stos
xor
cld
lahf
or
pop
repz
adc
neg
jecxz
dec
sub
xchg
pop
imul
rcl
mov
ror
pop
(bad)
adc
push
iret
and
imul
arpl
and
cmps
adc
jecxz
shl
mov
sbb
mov
imul
sar
add
and
and
ja
ins
inc
test
maxps
add
push
movs
and
fwait
stos
xor
and
(bad)
jp
iret
push
outs
xor
into
std
push
sub
lods
add
mov
mov
xchg
add
pop
xlat
addr16
add
ret
(bad)
sahf
mov
jbe
add
dec
mov
sub
aad
xchg
neg
xor
sub
adc
pop
das
mov
inc
mov
aas
mov
jae
or
arpl
add
push
inc
inc
arpl
call
repz
es
cwde
xor
jb
add
stos
scas
lahf
inc
outs
cmp
mov
cmps
mov
xor
sbb
jmp
sar
push
(bad)
adc
imul
push
add
adc
xor
out
ins
push
pop
add
mov
xchg
dec
arpl
adc
pop
shl
inc
aaa
adc
nop
fimul
inc
xlat
sub
jns
or
popw
inc
mov
dec
fild
adc
mov
mov
add
jae
(bad)
rcl
jo
push
add
push
jmp
inc
lahf
mov
xor
xlat
xor
xchg
adc
push
test
rcl
xchg
(bad)
mov
das
jg
pop
es
pop
and
addr16
add
add
pop
jmp
or
test
addr16
mov
jb
aas
xor
push
repz
adc
push
dec
pushf
cmp
iret
out
adc
add
sbb
adc
sti
push
pusha
div
es
add
xchg
or
push
and
fimul
sub
jg
sub
lods
mov
mov
pop
iret
adc
mov
daa
adc
add
cmp
(bad)
and
rol
inc
arpl
mov
pop
pop
jg
(bad)
jb
ficomp
pop
out
add
dec
stos
or
scas
xor
mov
imul
and
pop
pop
outs
jmp
pop
adc
push
das
push
rcl
mov
or
dec
push
mov
and
dec
aaa
add
cmp
aad
daa
bound
dec
jecxz
lods
inc
xor
and
sub
mov
xchg
jge
add
sbb
arpl
and
add
(bad)
sub
xchg
add
div
inc
and
ficomp
test
sbb
or
add
lods
mov
add
add
fisttp
(bad)
jg
fstp
mov
ds
dec
fwait
outs
adc
adc
popa
or
js
aam
fwait
retf
jns
mov
scas
(bad)
(bad)
out
add
es
aaa
mov
pop
fwait
cmp
leave
and
sub
add
dec
push
fcmovb
and
adc
fst
jne
and
and
and
mov
les
fisub
xchg
scas
or
and
sti
(bad)
xor
dec
sbb
ror
jns
dec
xchg
add
push
xor
and
and
or
pop
adc
rcl
inc
mov
add
sub
xchg
or
and
push
lea
mov
mov
popa
call
data16
jmp
fwait
push
dec
or
inc
ror
push
les
sub
and
xlat
lds
ret
xchg
js
movs
and
fisttp
pop
ss
sub
dec
sub
jno
fs
push
mov
add
mov
adc
fistp
dec
add
pusha
leave
and
data16
(bad)
mov
mov
inc
or
xchg
or
adc
rcl
dec
add
jns
and
ins
adc
jmp
sbb
and
and
adc
mov
mul
or
outs
and
jnp
ror
mov
retf
loopne
dec
dec
mov
(bad)
fisubr
add
cs
mov
adc
lds
mov
add
mov
dec
sbb
out
jns
dec
fs
inc
sub
shl
fcmovbe
push
add
adc
dec
add
jb
add
test
xlat
pop
mov
jo
jmp
adc
mov
ss
dec
and
cdq
add
jmp
add
sbb
lock
fst
shl
dec
dec
pop
xchg
add
inc
(bad)
cmp
adc
das
xchg
push
xchg
xchg
xor
add
dec
add
mov
xchg
sbb
pop
xor
repz
dec
add
iret
adc
shl
dec
dec
add
(bad)
push
dec
xchg
add
test
sub
inc
pop
test
es
xor
pop
sbb
adc
xchg
add
xchg
retf
xchg
loopne
xor
xor
add
ins
adc
clc
or
add
and
mov
adc
add
pop
shr
and
cdq
jg
xchg
rcl
cmp
call
das
fisubr
inc
sub
jno
pop
das
into
xor
mov
or
sub
sub
xchg
push
mov
push
jmp
stos
push
mov
add
xor
jne
cmp
cmp
sbb
add
adc
ins
sbb
inc
pop
inc
xor
fadd
dec
adc
mov
lea
push
rol
leave
adc
imul
test
fisubr
lahf
aaa
das
lods
pop
mov
dec
adc
out
sbb
inc
mov
dec
or
mov
and
sbb
out
add
adc
xor
inc
pop
push
popf
cmp
add
inc
dec
popf
xchg
fwait
dec
cmp
or
fisubr
cmps
sbb
add
dec
mov
rol
and
dec
add
out
pop
adc
inc
sar
mov
and
xchg
add
rcl
(bad)
inc
test
ins
adc
and
pop
sub
adc
mov
mov
pusha
or
adc
mov
mov
dec
repnz
jl
push
outs
jae
or
mov
add
inc
xchg
sbb
dec
add
jno
cmp
mov
sub
xchg
rcr
mov
loop
mov
fs
nop
xor
cmps
and
(bad)
popa
test
jg
js
dec
dec
into
out
xor
icebp
or
cdq
pop
adc
cmp
adc
add
add
or
gs
xchg
mov
ffree
(bad)
adc
sub
ffreep
xchg
loope
into
cwde
xor
mov
sub
cmp
or
adc
aad
int
inc
inc
dec
pop
xchg
shl
stos
mov
gs
nop
sub
dec
mov
outs
mov
retf
jne
adc
inc
xchg
add
or
das
pop
push
mov
pop
(bad)
js
and
or
rcl
xchg
mov
pop
add
adc
pop
and
(bad)
mov
pop
inc
inc
lods
and
push
sub
call
sub
push
outs
dec
pop
sub
inc
stos
add
dec
aaa
out
retf
dec
add
mov
adc
data16
or
shl
or
iret
pop
or
fiadd
add
cwde
sub
ficomp
push
add
xor
add
cmp
push
add
pop
or
inc
mov
popa
arpl
sahf
cmp
in
dec
inc
cmp
jno
bswap
xchg
std
iret
leave
pop
inc
dec
inc
push
push
inc
push
or
xchg
fldenv
or
add
out
fldpi
add
or
inc
idiv
adc
add
scas
pop
outs
pop
xchg
rcr
add
or
or
pop
mov
imul
sub
or
mov
or
pop
add
test
ins
mov
add
mov
dec
adc
fisttp
addr16
and
pop
push
add
add
mov
xor
pop
jmp
or
popa
imul
push
xor
push
sub
add
sbb
(bad)
jg
adc
out
out
mov
mov
(bad)
in
mov
(bad)
nop
test
out
mov
mov
xor
enter
xchg
add
sbb
xchg
push
pop
and
hlt
pop
and
or
add
xchg
or
popa
adc
pop
sbb
or
inc
add
sbb
pop
mov
adc
mov
shl
test
add
mov
or
and
jb
stc
or
add
add
adc
add
leave
stos
repz
xor
daa
xchg
add
or
pop
pusha
or
add
jle
cmp
cmc
pusha
mov
cmp
imul
pushf
sbb
inc
std
outs
sub
xor
xchg
cs
sbb
ja
push
add
and
add
add
adc
mov
jecxz
addr16
cwde
sub
sbb
sbb
push
xlat
mov
stos
fs
push
dec
add
add
stos
jo
or
adc
or
push
adc
icebp
mov
or
or
mov
add
rol
adc
sbb
(bad)
(bad)
xchg
or
movs
xchg
xchg
test
sbb
dec
xor
mov
sub
mov
add
add
sub
lea
mov
add
fwait
inc
push
mov
pop
add
ss
ror
scas
xor
outs
dec
ins
aaa
push
adc
xor
shr
mov
pop
fnsave
dec
nop
cmp
inc
js
inc
mov
push
push
inc
pop
inc
out
xchg
fcomp
cmp
sub
pop
push
sbb
pop
cmp
cmp
out
or
imul
add
test
add
cwde
mov
add
sub
mov
fwait
mov
imul
ja
out
les
leave
add
push
in
adc
mov
imul
fcomp
xor
imul
push
std
and
adc
mov
pop
ret
and
test
movs
xchg
push
mov
cwde
mov
and
push
ret
fistp
stos
clc
(bad)
and
mov
push
xchg
mov
pop
icebp
sbb
popa
fs
jo
adc
add
jo
sbb
sbb
sbb
jo
dec
add
or
mov
mov
push
test
xchg
sbb
inc
in
enter
xchg
xor
sbb
retf
(bad)
pop
xchg
pop
cmp
ret
inc
movs
push
and
jge
movs
and
(bad)
push
inc
fs
xor
sub
ror
rcr
xlat
inc
and
and
and
(bad)
jg
test
(bad)
cmp
dec
fsub
inc
cs
test
jg
add
dec
dec
scas
pop
and
inc
mov
add
arpl
sub
imul
cs
adc
add
adc
sbb
or
xchg
or
lea
push
xor
fs
hlt
arpl
das
push
mov
daa
fisubr
sub
mov
add
clc
inc
jb
add
push
out
adc
push
ret
cmc
xchg
inc
movs
leave
inc
imul
or
mov
sub
dec
and
pop
xor
inc
push
xor
push
jbe
in
jne
xor
mov
dec
fsubr
push
or
adc
or
dec
daa
mov
pop
or
or
popa
push
mov
inc
(bad)
iret
ret
add
xchg
pop
imul
mov
sbb
mov
mov
loopne
dec
ret
adc
call
dec
cs
mov
nop
dec
inc
add
fstp
push
mov
adc
cmp
cmp
sub
lods
or
add
push
jne
add
push
sub
cmp
sbb
ins
out
inc
and
lds
push
inc
call
jno
popa
add
adc
inc
mov
jae
xor
push
jno
(bad)
mov
daa
sbb
pop
fldenv
sbb
push
push
mov
in
push
xor
push
mov
jns
mov
and
out
pop
push
pop
push
cmp
movs
test
mov
sub
popa
pop
mov
lods
inc
in
mov
gs
pop
jmp
in
daa
shr
mov
mov
push
imul
nop
pop
push
sbb
xchg
in
pop
and
pop
or
push
xchg
dec
jo
popa
arpl
(bad)
mov
movs
and
mov
sub
sbb
sbb
push
js
jmp
movs
pop
cmp
retf
xor
xchg
jecxz
sub
push
sbb
call
add
mov
push
ins
fist
lods
ror
sbb
jne
ret
add
in
test
rol
sbb
sub
shl
push
cs
fst
push
mov
maxps
mov
sub
sub
inc
test
sbb
pop
sub
inc
xchg
ret
mov
lods
mov
das
fidiv
push
pop
sub
das
and
outs
outs
inc
xor
fist
or
fmul
or
test
dec
outs
lock
jbe
enter
pusha
push
(bad)
sub
cmp
pop
and
add
loopne
mov
int3
xor
add
sbb
dec
ror
pop
add
sbb
aaa
sbb
test
sub
inc
sub
ror
ja
xor
sub
push
sub
xor
and
fld
add
clc
dec
sbb
leave
call
loopne
inc
cdq
dec
loope
jbe
sahf
sbb
fcmovne
adc
adc
loope
push
jne
dec
jb
fild
in
jbe
pop
dec
or
mov
inc
xor
movs
mov
loope
iret
neg
push
addr16
pop
dec
push
xor
push
popa
push
shr
push
into
inc
xchg
dec
mov
pop
ins
call
shr
and
sti
push
inc
bound
aad
push
sub
imul
or
inc
mov
inc
push
add
xchg
adc
xchg
adc
sbb
lds
mov
adc
add
sbb
lock
imul
rcr
xlat
fmul
outs
sub
and
shr
jnp
inc
sub
inc
adc
sub
hlt
adc
mov
inc
sets
xor
iret
mov
inc
push
and
loop
imul
lods
js
fst
outs
gs
sbb
adc
adc
and
lahf
pop
and
out
fcomp
les
test
push
sbb
cmps
loope
and
mov
les
imul
mov
ror
cmp
rcl
cs
xchg
sbb
fsub
dec
lods
pusha
ror
cmc
fld
in
inc
nop
pop
push
pop
sub
push
dec
xchg
aam
lods
inc
sub
cmp
fcom
sbb
and
test
outs
pop
xchg
and
push
push
ss
xor
inc
and
mov
and
ins
push
mov
and
mov
dec
addr16
xor
es
inc
mov
cs
jnp
inc
daa
mov
fwait
addr16
or
mov
sbb
push
inc
jns
mov
cmc
lods
out
or
inc
popf
cs
aad
lea
mov
jmp
ret
add
adc
addr16
adc
(bad)
adc
outs
mov
xor
fnstenv
mov
push
ins
cld
sbb
packsswb
jnp
bound
pop
lods
mov
or
xchg
loop
aaa
xor
ret
push
ins
dec
ins
clc
sbb
popa
and
ss
dec
push
les
mov
and
mov
mov
and
inc
push
js
dec
cmps
ror
(bad)
(bad)
adc
mov
loopne
imul
inc
and
jbe
and
dec
jne
es
pop
movs
and
retf
arpl
dec
and
shl
cmp
pop
sti
dec
cld
dec
mul
mov
and
sub
dec
stc
or
scas
(bad)
addr16
mov
mov
sbb
sbb
and
into
push
addr16
xor
mov
je
push
gs
xchg
popf
dec
cmp
pusha
pop
adc
idiv
pop
stos
and
out
adc
lods
das
sbb
pop
push
jo
inc
xchg
mov
jno
xchg
jp
dec
add
and
jo
xchg
jo
xchg
scas
mov
lea
and
mov
inc
add
popa
or
xchg
dec
call
add
inc
push
lock
test
adc
push
rol
push
sbb
sub
(bad)
sbb
outs
mov
icebp
and
pop
jmp
lahf
ret
pop
inc
and
mov
adc
into
test
mov
sub
dec
(bad)
daa
xchg
ins
or
nop
mov
(bad)
int
xchg
movs
lea
adc
xchg
aas
and
add
ret
test
mov
mov
(bad)
push
cmp
imul
sbb
xor
rcl
sub
mov
jmp
xchg
dec
aam
add
clc
sbb
jb
and
pop
jb
gs
push
(bad)
in
int
sub
jo
bound
cmp
sbb
add
dec
mov
jae
aaa
fdiv
je
ds
sbb
cmp
sbb
mov
das
xlat
jnp
lds
and
ficom
add
dec
call
and
arpl
test
ja
in
pop
(bad)
gs
dec
movs
loope
jb
mov
mov
push
and
out
in
retf
test
pop
inc
mov
pusha
inc
mov
pop
arpl
daa
push
xor
test
dec
dec
lds
xor
jmp
cmp
sbb
inc
test
sbb
push
enter
or
cs
push
dec
inc
test
xor
xchg
adc
sbb
ficomp
xor
(bad)
(bad)
xchg
and
sub
add
sub
push
pop
ret
aas
imul
sub
pusha
popa
and
sbb
push
rcr
sbb
(bad)
mov
imul
sbb
pop
and
fs
inc
and
ret
repz
cmp
sub
push
ins
sbb
mov
js
mov
nop
test
adc
fsubr
sbb
and
mul
icebp
scas
dec
pop
adc
xchg
movs
dec
mov
sbb
call
pop
add
enter
pop
mov
mov
jns
pop
pop
call
fcom
and
dec
retf
fs
jmp
and
shl
fist
sbb
sub
push
mov
lahf
push
(bad)
cmps
data16
and
shl
pop
add
mov
pusha
adc
sbb
fstp
pop
adc
sbb
loope
xchg
sub
(bad)
and
fcmovnu
mov
dec
daa
je
xchg
mov
pop
pop
popa
ret
push
loopne
and
xchg
arpl
aaa
and
rol
cmp
xchg
les
aaa
sbb
cs
inc
fisttp
pop
inc
outs
push
or
dec
sbb
mov
test
sbb
and
loope
ins
pop
cmp
cs
dec
lods
test
cmp
aad
mov
fidiv
inc
rcr
loope
and
inc
ins
test
push
push
add
xchg
sub
pushf
xor
jbe
dec
xchg
cmp
push
sbb
mov
jg
lahf
add
or
sbb
mov
add
xchg
xchg
sub
sbb
or
add
inc
and
sub
sub
mov
add
add
pop
rcl
cmp
fst
xor
mov
or
add
push
test
sbb
cld
pop
in
dec
popa
inc
or
nop
add
in
and
out
call
mov
push
mov
mul
push
in
sub
jge
or
int3
inc
mov
in
inc
pop
inc
bound
je
psubusw
lock
ins
push
cmovbe
cmp
sub
jl
add
dec
or
cs
lds
idiv
adc
fdiv
sbb
cs
jae
ds
push
xor
and
adc
sbb
repz
add
inc
(bad)
arpl
or
lahf
xor
xchg
lock
or
xor
add
add
pusha
mov
lea
push
or
jmp
nop
nop
nop
nop
nop
nop
mov
inc
mov
inc
add
jne
mov
sub
adc
jb
mov
add
jne
mov
sub
adc
adc
add
jae
jne
mov
sub
adc
jb
dec
add
jne
mov
sub
adc
adc
jmp
add
jne
mov
sub
adc
adc
jmp
xor
sub
jb
shl
mov
inc
xor
je
sar
mov
jmp
add
jne
mov
sub
adc
jb
inc
add
jne
mov
sub
adc
jb
add
jne
mov
sub
adc
adc
add
jae
jne
mov
sub
adc
jae
add
cmp
adc
lea
cmp
jbe
mov
inc
mov
inc
dec
jne
jmp
mov
add
mov
add
sub
ja
add
jmp
pop
mov
mov
mov
inc
sub
cmp
ja
cmp
jne
mov
mov
shr
rol
xchg
sub
sub
add
mov
add
mov
loop
lea
mov
or
je
mov
lea
add
push
add
call
xchg
mov
inc
or
je
mov
push
dec
repnz
push
call
or
je
mov
add
jmp
call
mov
lea
mov
push
push
push
push
push
call
lea
and
and
pop
push
push
push
push
push
call
pop
popa
lea
push
cmp
jne
sub
jmp
sbb
add
add
cmp
