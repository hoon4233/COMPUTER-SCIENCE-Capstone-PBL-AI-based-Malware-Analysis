push
mov
sub
mov
push
mov
push
push
mov
mov
mov
mov
mov
mov
call
push
push
mov
call
mov
mov
push
push
mov
mov
mov
call
lea
push
mov
call
pop
mov
pop
ret
int3
int3
int3
push
mov
mov
sub
je
dec
jne
mov
cmp
je
cmp
je
xor
pop
ret
mov
movzx
push
push
call
mov
pop
ret
mov
push
mov
push
push
push
push
mov
mov
mov
sub
mov
mov
mov
push
push
push
mov
mov
call
lea
lea
push
push
push
lea
push
call
add
push
push
call
add
mov
mov
mov
mov
cmp
jne
mov
inc
mov
test
je
cmp
jne
cmp
jne
inc
jmp
cmp
jbe
inc
cmp
ja
cmp
je
cmp
ja
inc
cmp
jne
mov
lea
push
call
test
mov
je
movzx
push
push
push
push
call
push
call
push
call
jmp
mov
mov
mov
mov
push
push
call
add
ret
mov
push
call
add
mov
mov
pop
mov
pop
pop
mov
pop
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
inc
mov
push
mov
push
push
call
test
pop
pop
pop
push
je
int3
(bad)
jmp
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
sub
push
mov
mov
and
push
mov
pop
test
jne
inc
push
inc
clc
mov
movzx
push
add
push
push
add
pop
dec
cmp
jne
add
mov
add
mov
xor
mov
mov
add
dec
mov
dec
inc
inc
mov
and
jne
mov
inc
mov
mov
cmp
jbe
mov
dec
mov
xor
add
jmp
nop
nop
nop
nop
nop
nop
nop
inc
mov
inc
and
test
jne
dec
cmp
jne
mov
add
push
push
call
test
mov
je
inc
mov
add
mov
cmp
jae
mov
cmp
jae
add
push
mov
add
mov
pop
add
add
xor
mov
mov
lea
mov
mov
add
jmp
xor
pop
pop
pop
mov
pop
ret
mov
sub
je
sub
dec
jmp
push
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
mov
mov
push
xor
call
push
ret
add
int3
push
mov
sub
push
mov
push
mov
push
push
push
push
call
push
push
push
push
call
push
call
add
push
push
push
push
push
push
push
push
push
push
push
push
mov
call
test
jne
pop
pop
mov
pop
ret
mov
push
push
push
lea
push
call
test
je
mov
push
mov
lea
push
call
lea
push
call
push
push
push
lea
push
call
test
jne
pop
mov
pop
pop
mov
pop
ret
int3
int3
int3
int3
int3
loopne
jo
sbb
cwde
lahf
inc
test
and
mov
add
push
push
push
push
call
dec
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
fsubr
in
ds
sub
fs
adc
popa
lods
(bad)
sub
fcomp
imul
int3
sti
sbb
pop
adc
in
xor
stos
addr16
or
(bad)
(bad)
dec
sub
xor
jmp
jno
and
(bad)
cdq
cld
test
or
std
sbb
cwde
in
inc
mov
stc
lahf
fucomip
vpmaxuw
or
sti
add
pusha
xchg
imul
xlat
sbb
pop
xor
ret
loop
pushf
fidivr
outs
mov
mov
ja
jnp
lods
enter
mov
lods
js
dec
test
xlat
in
xchg
aad
(bad)
jge
push
or
fist
lahf
jno
pop
test
(bad)
lahf
shl
and
push
pop
xor
out
mov
fucomi
mov
jp
cdq
ficomp
jno
pop
inc
and
retf
popf
shl
test
clc
cwde
int3
out
hlt
pop
and
fsub
push
nop
stc
fcmovnbe
stos
pusha
xchg
js
cdq
into
xchg
icebp
inc
enter
sub
enter
mov
mov
push
mov
call
je
push
and
jmp
adc
xchg
bound
out
repz
dec
jnp
or
fild
xchg
mov
jge
js
imul
sahf
nop
out
in
sbb
push
xor
loope
popf
std
mov
arpl
test
out
out
jge
jno
add
fdiv
scas
fsubr
jns
imul
mov
aad
enter
or
leave
loope
mov
scas
fsubr
bound
out
in
cmp
(bad)
cmp
mov
or
scas
cld
lds
sbb
push
xor
loope
popf
cld
mov
data16
xchg
idiv
(bad)
int3
in
inc
hlt
dec
sub
out
xchg
fcomi
lods
pusha
test
jae
loopne
test
in
jae
sbb
push
and
retf
fadd
outs
cmp
test
dec
outs
jae
fild
in
addr16
gs
jae
cdq
stc
pop
test
sbb
dec
aaa
or
(bad)
mov
idiv
hlt
dec
test
(bad)
loop
xlat
out
dec
loope
jge
ja
test
sbb
stos
xor
pop
int
repnz
retf
jae
sub
push
xor
(bad)
sahf
repnz
lahf
jno
popa
cmp
test
adc
cmp
push
xor
(bad)
popf
in
xchg
call
ja
in
in
cwde
nop
out
in
add
adc
(bad)
or
daa
repnz
mov
scas
sub
inc
adc
fcmovnbe
mov
ins
mov
mov
scas
sbb
imul
out
xchg
jmp
jne
in
mov
out
jl
imul
out
xchg
jmp
jne
in
mov
out
jo
imul
jmp
or
jne
in
mov
out
jo
imul
jmp
ja
stos
mov
and
adc
lahf
mov
mov
and
test
mov
and
adc
fwait
mov
mov
and
and
mov
sub
or
call
jmp
jne
in
mov
out
jo
imul
out
xchg
jmp
in
mov
out
jo
imul
cmc
mov
cmp
mov
test
adc
dec
popf
mov
mov
fbld
jmp
adc
imul
fist
fistp
lods
imul
jmp
push
imul
in
mov
fbld
jmp
adc
push
popf
mov
xchg
mov
cmp
or
pop
cmp
lods
es
and
js
cdq
mov
nop
mov
mov
jg
jne
xchg
(bad)
pop
mov
scas
mov
cmp
mov
scas
sub
imul
mov
jp
jno
ror
mov
sbb
mov
jb
movs
push
rcr
hlt
or
push
icebp
xchg
sub
mov
imul
fdivr
out
in
push
(bad)
cdq
mov
mov
sub
lods
test
sar
or
cdq
xchg
xchg
lahf
cmp
jle
(bad)
je
scas
neg
in
cmp
mov
or
popa
sub
or
sbb
mov
(bad)
mov
movs
mov
test
das
call
jmp
scas
inc
rcl
inc
xchg
dec
jge
mov
fcmovnu
inc
lea
push
outs
jle
fild
or
fs
pusha
cmps
clc
and
sub
mov
iret
jb
inc
or
repz
mov
xchg
daa
inc
jno
cmps
fstp
mov
fcomp
sbb
lea
and
fdivr
in
push
mov
jb
mov
or
je
scas
fucomi
push
push
dec
(bad)
xchg
ret
scas
push
xchg
xchg
test
pop
xor
pop
push
xor
(bad)
fadd
mov
jecxz
xor
jo
adc
inc
lea
dec
xchg
cwde
mov
loop
mov
aad
scas
mov
mov
sub
fnstcw
lods
cmc
loopne
fiadd
pop
mov
xor
hlt
test
and
sbb
pop
and
gs
inc
idiv
retf
inc
push
mov
cmp
sbb
cmp
scas
ja
xchg
cmp
fcmovne
inc
and
xor
or
aaa
sti
jo
popf
add
pop
fucomi
inc
and
cmp
aaa
fistp
jge
(bad)
je
pop
push
mov
jmp
jp
(bad)
mov
mov
mov
in
inc
push
retf
in
sahf
mov
cmps
adc
test
xor
shl
popa
jae
add
push
fadd
mov
inc
push
rol
test
pop
in
cmp
jmp
xchg
mov
mov
mov
sbb
adc
adc
and
rol
in
push
fcomp
jb
(bad)
sar
popa
das
dec
ins
fisubr
rcr
hlt
or
cmp
imul
push
jo
shl
sahf
push
mov
movs
cmc
mov
mov
lock
xor
(bad)
inc
lea
retf
push
push
aad
adc
into
and
data16
in
scas
fist
push
hlt
or
sub
fcmovu
jle
fcmovnbe
je
out
cmps
xor
fstp
xchg
cdq
(bad)
jmp
(bad)
mov
add
pop
adc
mov
adc
hlt
mov
pminsw
jg
mov
adc
or
jmp
pop
and
mov
dec
xor
jo
popa
scas
fstp
sub
jmp
push
inc
popa
lods
mov
sti
mov
out
fs
xor
lea
pop
mov
outs
and
lods
test
jg
jmp
xor
dec
ds
or
fstp
sbb
sub
fld
or
push
scas
add
adc
data16
dec
add
add
adc
pop
test
dec
push
mov
mov
(bad)
je
stc
xchg
icebp
jae
xor
por
in
jns
out
or
xlat
dec
pop
shl
cld
jo
rol
fild
and
(bad)
and
push
aam
popa
repz
mov
adc
cld
add
sbb
jb
sub
jg
inc
mov
pop
add
icebp
sub
(bad)
jae
add
jmp
fadd
in
sbb
xchg
lods
xchg
sub
mov
loope
lods
inc
jg
mov
push
mov
sub
ins
mov
mov
mov
dec
pop
mov
mov
(bad)
adc
scas
stc
mov
mov
call
dec
les
sub
int
lahf
or
cli
sub
in
ds
mov
(bad)
or
or
(bad)
pop
fisttp
inc
and
push
lahf
outs
cs
sub
ficomp
scas
fstp
mov
cmc
cwde
loop
pushf
jb
mov
fcomi
xchg
mov
arpl
ins
sti
inc
mov
pushf
out
in
lahf
(bad)
mov
mov
push
or
scas
xor
(bad)
mov
fnstsw
dec
mov
pop
aas
repz
jmp
xor
push
inc
es
mov
or
ret
cmp
dec
xchg
jmp
leave
and
adc
lahf
push
jge
enter
inc
popa
push
cli
enter
cmp
popa
sti
pusha
in
jle
call
test
push
ins
add
mov
jle
push
adc
leave
jb
xchg
pop
in
icebp
sar
scas
(bad)
mov
or
xchg
test
loop
pop
pop
jg
mov
(bad)
pop
lods
(bad)
std
lods
sub
jns
pop
and
in
popf
adc
enter
popa
sub
jmp
mov
sbb
test
popf
fcompp
add
xor
dec
dec
pop
daa
das
ja
lahf
mov
hlt
or
stos
dec
arpl
push
inc
xor
dec
ins
pop
scas
mov
adc
adc
cmp
sub
jle
and
jo
in
cs
inc
lods
mov
dec
and
inc
xlat
cmp
jge
ds
sub
ins
jl
push
mov
pusha
arpl
in
sub
arpl
lods
push
sti
iret
rcr
dec
(bad)
cld
mov
mov
mov
sub
in
pop
mov
sub
mov
sbb
cli
ins
test
inc
nop
cmp
loope
cmp
push
sbb
iret
and
adc
mov
inc
jb
xchg
(bad)
add
push
and
mov
lods
pop
mov
jmp
cmp
popa
lods
(bad)
hlt
mov
jmp
pop
mov
pop
mov
test
adc
fldenv
push
sti
jmp
pop
aam
shl
dec
sahf
add
scas
lds
and
in
scas
fidivr
jmp
lahf
jbe
jno
xchg
cmp
(bad)
je
test
mov
cwde
fisub
int3
cdq
cmp
idiv
sub
mov
outs
jle
(bad)
(bad)
pushf
sub
mov
aam
push
cld
sbb
xor
test
push
in
ins
popa
ret
lods
std
test
mov
popa
lods
fisub
push
fistp
out
daa
popa
cmp
mov
sahf
call
inc
cdq
test
mov
jmp
cmp
pusha
out
cwde
int3
push
aam
mov
or
lahf
push
jo
test
or
popa
test
rol
push
pop
xchg
xor
sub
or
neg
out
jmp
cmp
in
sbb
pop
movs
pusha
out
inc
lea
mov
in
imul
fidivr
scas
popa
daa
inc
fadd
inc
adc
in
ror
dec
mov
mov
mov
jmp
imul
push
jo
ins
inc
and
popf
mov
xchg
push
aam
mov
ins
hlt
shl
push
fisubr
(bad)
inc
lea
in
push
fcom
enter
test
repz
mov
out
popf
cdq
popa
mov
xor
mov
inc
jmp
cmp
adc
data16
retf
push
jno
lock
inc
popa
lods
iret
(bad)
in
sahf
loopne
cmp
jno
adc
and
enter
fcmovnbe
sbb
xacquire
lods
sbb
rcr
test
push
cmps
push
in
test
mov
inc
push
ins
mov
and
call
dec
leave
out
(bad)
xor
push
rcl
lahf
dec
adc
sar
adc
aaa
dec
out
inc
xlat
adc
and
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
push
push
add
pop
pop
pop
push
mov
inc
ret
push
int3
int3
int3
int3
mov
pop
pop
dec
jne
xor
push
mov
push
mov
push
mov
xor
mov
mov
inc
mov
inc
cmp
jne
test
jne
jmp
or
dec
mov
lea
xor
inc
pop
pop
mov
pop
ret
dec
inc
xchg
cmp
dec
xor
int3
xor
jmp
push
mov
mov
sub
push
push
push
cmp
ja
je
mov
dec
je
dec
je
sub
jne
mov
mov
shr
mov
cmp
je
cmp
je
mov
push
push
mov
push
push
call
pop
pop
pop
mov
pop
ret
mov
push
call
xor
pop
pop
pop
mov
pop
ret
mov
mov
push
push
push
push
push
call
xor
pop
pop
pop
mov
pop
ret
push
call
xor
pop
pop
pop
mov
pop
ret
mov
push
lea
push
mov
call
mov
push
mov
push
push
push
push
push
push
push
push
push
push
push
mov
mov
call
push
mov
call
push
lea
push
push
mov
call
mov
push
push
push
push
push
push
push
push
push
push
push
push
mov
call
push
mov
mov
push
push
push
push
push
push
push
push
push
push
push
call
mov
push
push
push
push
push
push
push
push
push
push
push
push
mov
call
mov
push
mov
push
push
push
push
push
push
push
push
push
push
push
call
push
mov
mov
push
push
push
push
push
push
push
push
push
push
push
call
mov
push
push
push
push
push
push
push
push
push
push
push
push
mov
call
mov
push
mov
call
test
je
push
push
call
push
push
push
push
call
xor
pop
pop
pop
mov
pop
ret
add
xor
pop
pop
pop
mov
pop
ret
mov
sub
je
sub
je
sub
je
mov
mov
push
mov
push
push
push
call
pop
pop
pop
mov
pop
ret
mov
call
xor
pop
pop
pop
mov
pop
ret
mov
push
push
push
push
call
add
xor
pop
pop
pop
mov
pop
ret
mov
push
push
push
push
call
mov
mov
mov
push
push
push
push
call
inc
cmp
jl
pop
pop
xor
pop
mov
pop
ret
int3
mov
mov
push
push
mov
pop
push
push
push
mov
push
call
test
pop
pop
pop
je
(bad)
fmul
int3
xor
push
push
xchg
push
lods
dec
xchg
dec
dec
xor
dec
jne
mov
mov
sub
mov
stos
pop
loop
pop
pop
ret
js
push
jnp
sub
sbb
and
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
mov
lea
push
mov
push
jmp
inc
inc
nop
push
mov
push
call
mov
dec
je
adc
int3
jmp
jmp
jmp
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
inc
xor
pop
inc
xor
push
mov
sub
push
push
push
push
cld
mov
mov
test
jne
mov
mov
mov
lea
mov
mov
mov
cmp
je
lea
cmp
je
push
push
lea
call
pop
pop
mov
or
je
js
mov
push
call
add
lea
push
push
call
add
lea
mov
mov
call
mov
lea
mov
jmp
mov
jmp
mov
jmp
push
lea
push
push
call
add
pop
mov
pop
pop
pop
pop
mov
pop
ret
push
mov
mov
mov
push
mov
push
call
add
pop
ret
