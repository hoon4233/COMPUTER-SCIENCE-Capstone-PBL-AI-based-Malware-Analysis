push
mov
push
push
and
push
push
push
push
call
mov
mov
mov
cmp
lea
jae
push
call
mov
lea
push
push
push
push
call
lea
mov
push
push
push
push
call
push
call
push
mov
push
call
mov
push
push
call
push
push
call
push
push
call
push
mov
call
mov
pop
pop
pop
leave
ret
sbb
mov
jo
out
mov
addr16
dec
xchg
fcom
ss
imul
(bad)
adc
adc
(bad)
mov
cmps
dec
repnz
test
push
aam
lods
test
retf
das
repnz
xchg
xchg
mov
push
movs
adc
or
push
jl
xchg
inc
(bad)
xor
repz
ja
std
sbb
mov
cmp
inc
call
std
or
fldcw
shl
(bad)
jb
mov
stc
adc
or
inc
or
cmp
push
movs
(bad)
retf
lods
mov
and
inc
mov
shl
pop
mov
popa
jo
mov
(bad)
and
push
pop
mov
sbb
jle
mov
fild
mov
sbb
pop
gs
lds
xchg
fdivr
std
rcl
jl
arpl
add
lds
or
inc
lds
rol
jo
pop
dec
fisttp
scas
add
das
inc
push
in
adc
cmc
call
mov
cmps
and
movs
dec
dec
test
sti
lds
mov
mov
pop
das
adc
xchg
lahf
or
mov
or
cli
sub
fucomp
add
mov
js
jnp
jno
jne
lods
xor
sar
xchg
add
sbb
test
bnd
mov
retf
jno
sub
mov
out
test
cmp
sahf
stos
psllq
fisub
cwde
stos
(bad)
jmp
push
jnp
push
and
gs
stos
xchg
mov
push
sbb
retf
sbb
mov
mov
in
movs
pop
inc
adc
(bad)
sbb
and
hlt
or
outs
push
cmpxchg
pop
jecxz
xchg
pop
imul
push
pop
test
jmp
ja
adc
aaa
push
les
lods
(bad)
mov
and
push
push
rcr
sbb
jae
push
std
push
xor
push
fcomp
xchg
cmp
jle
sbb
das
xor
mov
nop
sub
clc
cmps
cmps
(bad)
mov
dec
outs
xor
imul
pop
mov
mov
into
adc
hlt
neg
movs
jnp
lock
stos
mov
push
ret
(bad)
mov
out
hlt
sub
add
mov
pop
loope
je
fbld
jo
out
aas
xor
jnp
fstp
pushf
inc
sub
add
clc
add
push
and
sbb
popf
ds
push
dec
gs
push
jb
enterw
jns
aas
xor
(bad)
out
pop
fucomi
and
add
cmps
or
pushf
fs
nop
cmp
jp
pop
out
jmp
cmp
shr
xor
dec
sbb
jecxz
ja
(bad)
mov
pop
jo
ret
dec
dec
lahf
dec
dec
scas
pop
dec
lods
loopne
pop
add
push
in
retf
or
cmp
jmp
inc
cli
push
push
jmp
push
mov
mov
fidivr
mov
retf
ffreep
cmp
mov
push
pop
pop
push
or
daa
xor
sbb
(bad)
or
xor
enter
adc
push
movs
mov
cmp
sbb
sub
fidiv
and
jb
pop
inc
jle
sahf
cdq
add
sub
dec
dec
mov
pusha
jns
shr
inc
shl
and
repz
fisubr
or
dec
dec
pop
sbb
mov
push
shr
pop
dec
jge
and
lock
repnz
enter
lds
cmp
xchg
jns
cmc
arpl
lods
push
cwde
and
dec
fwait
adc
leave
adc
mov
sti
(bad)
xor
xchg
cwde
sahf
adc
ror
mov
sub
fs
sbb
dec
or
mov
scas
lods
fmulp
lods
pop
dec
pop
inc
mul
xlat
dec
scas
dec
scas
xor
icebp
fadd
mov
test
pop
imul
jb
lahf
out
sub
std
mov
mov
add
push
cld
inc
or
xor
cmp
cli
lahf
inc
cmps
jp
ja
nop
lahf
sbb
(bad)
fcmove
jno
in
push
inc
(bad)
cli
xchg
adc
fistp
dec
out
scas
push
push
vmptrst
cmp
fdivr
xchg
lds
push
sbb
arpl
shr
sub
mov
mul
daa
idiv
xchg
ds
dec
cmc
adc
iret
push
fist
test
jb
push
sbb
ins
aaa
enter
cli
jmp
xor
sbb
or
test
enter
adc
mov
mov
fcmovu
mov
ret
push
push
xchg
aam
ds
loopne
sub
(bad)
nop
mov
push
out
add
lahf
sbb
push
not
xchg
mov
cmp
in
leave
ret
xchg
sub
push
gs
xor
xor
mov
nop
mov
clc
fsubrp
jecxz
ss
xchg
inc
push
out
je
adc
jb
mov
mov
(bad)
lods
int
mov
sbb
lods
or
jmp
arpl
mov
cmp
movs
aam
test
(bad)
stos
dec
sub
cmps
xchg
outs
(bad)
or
shr
imul
call
push
xchg
shl
dec
push
lods
pop
arpl
pusha
imul
loop
icebp
cmps
jbe
dec
shl
rcl
pop
mov
jp
ins
jb
cs
sar
xlat
inc
ins
fwait
hlt
or
push
test
mov
sbb
imul
adc
inc
(bad)
int3
push
jae
popa
retf
mov
xor
mov
lds
xor
scas
inc
jle
cmp
fs
test
inc
in
jp
fs
lds
jg
and
jo
add
mov
and
xor
sbb
mul
mov
mov
or
dec
pop
hlt
mov
dec
cmp
fs
dec
push
imul
out
jmp
add
fs
repnz
icebp
cld
cs
mov
xlat
lock
ja
adc
jge
pushf
aaa
push
ins
jb
xor
jne
push
and
aam
cs
(bad)
pusha
and
popa
inc
jnp
mov
pop
sub
sbb
jge
cwde
popf
sahf
popf
fidiv
outs
cwde
or
aam
xchg
mov
mov
mov
xchg
retf
loope
scas
movs
sbb
inc
mov
fcom
sub
or
mov
push
xor
call
test
jbe
push
mov
sub
mov
push
xor
mov
inc
call
cmp
jb
pop
and
pop
pop
mov
pop
ret
mov
push
cmps
mov
jnp
sbb
pop
sub
pop
cmp
popa
(bad)
adc
ins
add
dec
cwde
mov
push
fld
outs
sbb
popf
outs
add
cmps
test
add
cmp
cmps
xlat
ror
push
scas
ins
xor
leave
sub
sbb
xchg
dec
xchg
fxch
out
dec
add
outs
call
jmp
dec
fdiv
gs
fmul
sub
hlt
call
add
sub
test
adc
jmp
mov
out
mov
loopne
test
xor
xor
xlat
lock
loope
jns
test
cli
mov
xchg
sahf
add
sar
xor
jle
sub
jb
hlt
jo
mov
mov
lea
and
jge
je
(bad)
ins
cmp
mov
fst
mov
xchg
pop
xor
pop
push
cmc
adc
retf
push
xor
ror
sti
adc
bnd
test
(bad)
or
repz
(bad)
mov
std
push
jnp
retf
fstp
add
mov
sbb
hlt
pop
xor
nop
in
cmp
mov
outs
sub
jmp
push
into
xchg
iret
imul
push
scas
pop
push
sbb
outs
mov
sub
push
cwde
add
leave
cmp
push
mov
push
scas
mov
popa
jmp
call
mov
clc
jmp
bound
dec
(bad)
add
mov
pop
je
xlat
cmp
jge
arpl
mov
push
sub
les
in
call
mov
mov
pop
call
mov
fld
bound
sub
jo
adc
inc
es
push
jge
mov
dec
lods
mov
jle
(bad)
(bad)
jno
push
jbe
and
and
xchg
xor
mov
rcr
pop
dec
sbb
shl
add
(bad)
ja
cwde
clc
inc
mov
gs
sbb
sub
lahf
rep
rol
sub
pop
push
fcomip
jns
loope
push
or
cli
(bad)
jle
fwait
(bad)
xchg
call
jbe
call
vmovdqa
dec
xchg
das
stos
push
jno
add
push
scas
movs
xor
xchg
repz
cmps
and
dec
push
xchg
pop
sbb
cld
or
imul
test
adc
or
jb
and
mov
mov
sub
lods
jno
jmp
or
aas
sbb
cmps
xor
imul
ins
cmp
cmp
sbb
cs
cmp
pop
cld
add
jp
xchg
(bad)
cwde
xchg
ror
push
into
mov
int3
pop
mov
or
inc
sbb
fbstp
dec
mov
lock
inc
shr
sbb
(bad)
(bad)
xor
sub
and
pop
or
enter
push
jecxz
push
rcl
jmp
gs
push
push
test
in
push
fiadd
cmp
push
and
js
lahf
(bad)
fcmovu
int3
(bad)
jecxz
fidiv
ss
mov
mov
fiadd
jge
retf
jb
cmps
or
ret
adc
mov
ret
std
xchg
movs
adc
cwde
mov
cmp
std
pop
pop
dec
jge
xchg
rcl
cld
push
in
lds
push
push
movzx
xor
test
jbe
lea
mov
cmp
jb
mov
add
cmp
jb
inc
add
cmp
jb
xor
pop
pop
pop
ret
lea
lea
mov
sub
add
jmp
push
mov
sub
and
push
push
xor
pop
lea
rep
stos
stos
push
lea
push
push
call
mov
mov
sub
push
push
lea
push
call
push
lea
push
push
call
add
call
push
call
pop
push
mov
sub
mov
push
push
push
xor
mov
mov
inc
cmp
jl
xor
mov
cdq
idiv
mov
inc
cmp
mov
mov
jl
lea
xor
sub
mov
mov
jmp
mov
mov
movzx
movzx
add
add
mov
cdq
idiv
mov
mov
mov
add
mov
inc
dec
mov
jne
pop
pop
pop
leave
ret
push
mov
sub
xor
cmp
mov
mov
jle
push
push
mov
push
mov
jmp
mov
inc
mov
cdq
idiv
mov
mov
lea
mov
movzx
add
cdq
idiv
mov
mov
lea
mov
mov
mov
mov
mov
movzx
add
movzx
add
mov
cdq
idiv
mov
xor
inc
mov
cmp
jl
pop
pop
pop
leave
ret
push
mov
push
push
mov
mov
mov
mov
mov
add
cmp
jbe
cmp
jb
test
jne
shr
and
cmp
jb
rep
jmp
mov
mov
sub
jb
and
add
jmp
jmp
nop
jmp
nop
add
inc
add
inc
add
inc
add
ror
inc
add
add
jmp
add
add
cmp
jb
rep
jmp
lea
and
mov
mov
mov
shr
mov
add
add
cmp
jb
rep
jmp
nop
and
mov
mov
inc
shr
inc
cmp
jb
rep
jmp
lea
iret
push
inc
add
inc
add
inc
add
inc
add
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
lea
add
add
jmp
mov
call
push
inc
add
push
inc
add
pop
inc
add
leave
ret
nop
mov
mov
mov
pop
pop
leave
ret
nop
mov
mov
mov
mov
mov
pop
pop
leave
ret
lea
mov
mov
mov
mov
mov
mov
mov
pop
pop
leave
ret
nop
lea
lea
test
jne
shr
and
cmp
jb
std
rep
cld
jmp
mov
neg
jmp
lea
mov
mov
cmp
jb
and
sub
jmp
jmp
nop
mov
inc
add
pop
inc
add
mov
dec
shr
dec
cmp
jb
std
rep
cld
jmp
lea
mov
and
mov
mov
shr
mov
sub
sub
cmp
jb
std
rep
cld
jmp
nop
mov
and
mov
mov
mov
mov
shr
mov
sub
sub
cmp
jb
std
rep
cld
jmp
lea
and
inc
add
inc
add
inc
add
inc
add
add
add
add
inc
add
inc
(bad)
sbb
inc
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
lea
add
add
jmp
mov
and
add
and
lods
and
mov
pop
pop
leave
ret
nop
mov
mov
mov
pop
pop
leave
ret
lea
mov
mov
mov
mov
mov
pop
pop
leave
ret
nop
mov
mov
mov
mov
mov
mov
mov
pop
pop
leave
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
mov
mov
test
je
xor
mov
push
mov
cmp
jb
neg
and
je
sub
mov
inc
dec
jne
mov
shl
add
mov
shl
add
mov
and
shr
je
rep
test
je
mov
inc
dec
jne
mov
pop
ret
mov
ret
