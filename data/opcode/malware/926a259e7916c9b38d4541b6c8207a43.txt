inc
mov
add
dec
add
add
add
add
add
add
add
add
add
mov
pop
add
add
sub
add
sub
add
xor
add
add
add
add
adc
lea
jb
add
jo
xor
add
pop
lea
add
add
or
or
sbb
adc
or
add
es
add
jo
lea
add
add
or
jg
add
adc
add
stc
add
jo
push
lea
add
add
or
add
mov
add
push
or
add
jo
and
add
pop
lea
add
add
push
adc
push
jb
add
jo
adc
sub
add
push
je
add
sbb
cmp
and
add
pop
lea
add
add
movups
push
jb
add
jo
adc
sub
add
push
je
add
sbb
jo
and
add
pop
lea
add
add
adc
adc
jb
add
jo
adc
sub
add
push
je
add
sbb
add
adc
add
jo
and
add
pop
lea
add
add
adc
adc
jb
add
jo
add
pop
lea
add
add
adc
adc
adc
add
add
push
mov
add
push
je
add
sbb
push
push
adc
sub
adc
adc
mov
jo
lea
add
add
adc
add
adc
adc
jb
add
jo
sub
add
push
adc
jb
add
jo
add
push
add
push
adc
sub
add
push
adc
adc
push
sub
add
push
or
add
jo
jg
add
pop
lea
add
add
adc
adc
push
mov
add
push
je
add
add
or
or
add
jo
or
add
je
add
add
or
add
jo
fld
add
or
lea
add
add
adc
adc
add
or
add
mov
add
push
ficom
adc
adc
sub
add
push
sub
add
push
fiadd
sub
inc
sbb
add
add
add
add
add
add
add
add
push
sub
add
xor
cmp
add
add
add
add
pop
lea
push
or
or
pop
add
xchg
pushf
pop
pop
pop
or
add
or
push
push
add
or
or
add
sub
push
sub
add
sub
add
xor
add
add
add
adc
sub
add
push
or
sub
add
push
or
adc
adc
adc
out
add
or
add
je
add
add
sub
add
push
sub
or
push
or
add
add
adc
xor
adc
or
add
add
add
xor
or
add
add
add
adc
add
sbb
add
add
add
adc
add
add
add
pop
lea
add
add
pop
push
adc
sub
add
or
add
sbb
add
add
sub
add
or
add
sbb
pop
add
push
add
push
sub
xor
add
add
push
add
adc
add
jo
dec
add
jo
sbb
or
push
add
push
add
add
jne
add
or
add
movs
push
add
add
push
sub
add
push
je
add
sbb
add
sub
add
sub
add
xor
add
add
add
add
adc
sub
add
or
add
sbb
jb
add
jo
rol
jo
sbb
or
push
add
or
or
add
sub
add
push
sub
add
rol
add
xor
jo
push
lea
add
add
or
add
sub
sub
add
sub
add
xor
add
add
add
add
adc
add
jo
jne
add
sbb
or
push
add
sbb
add
mov
push
sub
add
push
sub
add
sub
add
add
add
add
sub
add
add
or
push
add
push
add
or
push
add
pop
add
or
push
add
add
or
and
add
or
add
sub
add
add
add
or
add
sub
add
add
add
or
and
add
add
or
add
add
add
add
or
add
push
sub
add
sub
add
sub
add
sub
add
sub
add
sub
add
sub
add
sub
add
sub
add
sub
add
add
add
add
sub
sub
add
sub
add
sub
add
sub
add
sub
add
sub
add
sub
add
sub
add
sub
add
sub
add
add
add
add
sub
sub
add
sub
add
sub
add
sub
add
sub
add
sub
add
sub
add
sub
add
sub
add
sub
add
add
add
add
sub
sub
add
sub
add
sub
add
sub
add
sub
add
sub
add
sub
add
sub
add
sub
add
sub
add
add
add
add
sub
sub
add
sub
add
sub
add
sub
add
sub
add
sub
add
sub
add
sub
add
sub
add
sub
add
add
add
add
sub
sub
add
sub
add
sub
add
sub
add
sub
add
sub
add
sub
add
sub
add
sub
add
sub
add
add
add
add
sub
sub
add
sub
add
sub
add
sub
add
sub
add
sub
add
sub
add
sub
add
sub
add
sub
add
add
add
add
sub
sub
add
sub
add
sub
add
sub
add
sub
add
sub
add
sub
add
sub
add
sub
add
sub
add
add
add
add
sub
sub
add
sub
add
sub
add
sub
add
sub
add
sub
add
sub
add
sub
add
sub
add
sub
add
add
add
add
sub
sub
add
sub
add
sub
add
sub
add
sub
add
sub
add
sub
add
sub
add
sub
add
sub
add
add
add
add
sub
pop
add
mov
xchg
add
add
jae
gs
cs
gs
jne
arpl
cs
gs
jne
arpl
gs
fs
and
arpl
ins
imul
jae
outs
outs
cmp
xor
xor
inc
jne
je
jb
cmp
jb
ins
sub
push
jne
ins
imul
imul
bound
aaa
popa
xor
cmp
xor
xor
cmp
push
jns
je
ins
cs
gs
jne
arpl
cs
jne
je
ins
gs
gs
jne
arpl
gs
add
add
add
add
add
add
jae
gs
cs
je
imul
ins
jae
outs
jb
imul
jae
outs
outs
cmp
xor
xor
inc
jne
je
jb
cmp
jb
ins
sub
push
jne
ins
imul
imul
bound
aaa
popa
xor
cmp
xor
xor
cmp
btr
xchg
adc
mov
call
(bad)
mov
cmp
mov
mov
jle
push
outs
fcomp
pop
aad
jecxz
outs
mov
test
adc
or
cdq
or
cmp
sbb
aad
and
pushf
(bad)
pop
repz
lock
cmc
mov
arpl
add
add
add
add
add
add
add
stos
add
add
add
add
add
add
add
add
add
add
add
add
in
add
add
aaa
add
add
movs
add
add
stos
add
add
add
add
add
add
add
add
or
add
add
dec
cmovle
dec
sub
dec
adc
dec
cmp
dec
sub
dec
cmp
sbb
dec
push
dec
xor
dec
sub
je
sbb
add
add
dec
cmp
dec
push
dec
adc
dec
sub
dec
pop
dec
pusha
dec
daa
dec
add
sbb
dec
cmp
dec
push
dec
sbb
dec
addr16
xor
dec
dec
inc
dec
ins
dec
adc
dec
or
dec
pop
dec
or
dec
add
or
add
add
dec
push
dec
jg
ds
inc
dec
and
dec
dec
dec
jns
and
dec
pop
dec
cmp
add
dec
sub
bound
dec
adc
push
add
ss
dec
sbb
dec
dec
dec
js
adc
dec
imul
dec
dec
ja
or
dec
sub
dec
sub
dec
pop
dec
dec
dec
cs
pop
dec
push
dec
or
dec
es
xor
xchg
add
cmp
dec
dec
ins
dec
aas
dec
gs
or
dec
and
dec
pop
dec
cmp
dec
push
dec
pop
dec
sub
dec
jg
dec
dec
ins
dec
es
add
dec
add
dec
dec
dec
cmp
dec
push
add
dec
inc
dec
ss
imul
adc
dec
and
dec
pop
dec
adc
dec
jl
gs
dec
dec
cmp
dec
push
dec
popa
dec
push
dec
imul
add
dec
pop
dec
je
sbb
dec
or
and
dec
jno
xor
dec
pop
dec
sbb
dec
imul
arpl
dec
sub
dec
imul
dec
dec
bound
dec
push
dec
push
dec
das
dec
push
dec
adc
dec
add
jae
inc
dec
push
dec
imul
add
sbb
dec
ss
cmp
jp
jbe
cmp
dec
ja
dec
dec
cmp
dec
adc
dec
sub
push
dec
and
dec
adc
dec
popa
dec
push
dec
xor
fs
jbe
xchg
pop
add
ss
dec
cmp
dec
fs
sub
dec
pop
dec
or
or
dec
bound
dec
push
dec
dec
sub
jnp
sub
dec
je
adc
dec
jns
inc
dec
jnp
push
dec
and
dec
pop
dec
sbb
dec
add
pop
dec
daa
dec
inc
dec
cmovle
dec
dec
outs
dec
adc
dec
jbe
pop
dec
adc
push
dec
add
dec
sbb
dec
dec
dec
push
dec
add
pop
dec
dec
push
dec
adc
movs
repnz
inc
dec
dec
sbb
dec
aas
dec
adc
dec
jle
ss
gs
pop
dec
das
dec
push
dec
inc
dec
cmovle
addr16
imul
dec
sub
dec
pop
dec
je
sbb
cmp
dec
das
dec
cs
push
dec
inc
dec
sbb
dec
aaa
dec
enter
cmp
cmp
dec
dec
and
dec
jae
push
dec
push
dec
and
dec
cmp
dec
push
dec
adc
dec
push
dec
jae
jae
cmp
dec
push
dec
ins
dec
push
dec
jnp
pop
dec
mov
push
dec
sub
dec
das
dec
push
dec
or
dec
push
dec
je
ja
adc
dec
pop
dec
cmp
dec
js
jb
cmp
dec
inc
dec
dec
dec
cmovle
dec
jp
das
dec
or
sub
dec
add
dec
inc
dec
push
dec
and
dec
popa
dec
retf
add
xor
dec
or
and
dec
push
dec
dec
dec
pop
dec
gs
jae
inc
dec
xor
dec
push
dec
adc
dec
jns
dec
dec
add
dec
push
dec
adc
dec
sbb
dec
xor
dec
ins
dec
push
dec
inc
dec
add
dec
add
or
push
dec
pop
dec
inc
dec
cmp
dec
cmp
dec
xor
dec
dec
dec
or
dec
sbb
dec
addr16
inc
dec
dec
dec
pop
dec
dec
dec
pop
dec
outs
dec
cmp
dec
inc
dec
pop
dec
pop
dec
xor
imul
dec
or
dec
inc
dec
neg
add
xor
dec
dec
pop
dec
jo
adc
dec
add
dec
addr16
adc
dec
jp
jae
dec
dec
adc
dec
add
dec
imul
dec
pop
dec
(bad)
pop
add
sub
dec
pop
dec
push
dec
ss
and
dec
cmovle
dec
or
dec
aas
dec
or
pop
dec
dec
dec
xor
dec
xor
dec
js
pop
dec
inc
mov
add
pop
dec
pop
dec
adc
and
dec
je
and
dec
and
dec
or
dec
jno
jl
or
dec
fs
arpl
dec
push
dec
cmps
mov
or
dec
jo
pop
dec
or
dec
outs
dec
adc
ins
dec
jg
addr16
sbb
dec
sub
dec
ins
dec
xor
dec
push
dec
cmp
dec
inc
dec
push
dec
add
dec
inc
dec
pop
dec
cmp
dec
popa
dec
or
add
inc
imul
dec
or
dec
push
dec
or
dec
adc
dec
and
dec
add
push
dec
ins
dec
jbe
sbb
dec
jle
pop
dec
jae
push
dec
sub
dec
pop
dec
jle
adc
jmp
dec
dec
dec
push
dec
gs
jbe
sub
dec
cmp
dec
aaa
dec
push
inc
dec
sbb
dec
jae
add
dec
push
dec
pop
dec
outs
dec
dec
dec
pop
dec
xor
dec
cmp
adc
dec
dec
push
dec
jae
cmp
sbb
xor
pop
dec
jbe
inc
dec
jno
add
dec
and
dec
pop
dec
arpl
dec
outs
dec
cmp
pop
dec
jnp
sbb
dec
cmp
dec
jb
das
dec
sub
dec
add
xor
push
dec
das
dec
push
dec
add
dec
sub
dec
or
adc
dec
jp
das
dec
pop
dec
pop
dec
push
dec
cs
inc
dec
jno
push
adc
dec
and
dec
mov
ja
cmp
dec
push
dec
and
dec
ja
outs
dec
cmp
dec
popa
dec
aas
dec
cs
bound
dec
pop
dec
push
dec
outs
dec
cs
jg
and
dec
jo
add
dec
sub
dec
or
dec
jno
jl
sub
pusha
rol
dec
jns
cmp
dec
jbe
and
dec
xor
dec
and
dec
push
dec
jg
jp
pop
dec
cmp
dec
dec
dec
push
dec
ins
dec
dec
dec
imul
gs
jg
or
dec
jge
pop
dec
adc
dec
xor
dec
add
pop
add
add
add
(bad)
(bad)
inc
add
add
add
add
add
add
push
add
add
add
add
dec
in
xchg
in
mov
mov
in
xchg
in
and
and
nop
in
cmps
in
xchg
in
and
mov
mov
in
xchg
in
xchg
mov
in
test
mov
in
lahf
push
add
add
jne
mov
in
mov
mov
in
mov
mov
in
xchg
in
xchg
in
xchg
mov
in
popf
in
mov
mov
in
and
(bad)
in
mov
mov
in
mov
mov
in
and
and
mov
mov
in
mov
mov
add
aas
in
test
mov
in
xchg
in
mov
mov
in
xchg
mov
in
mov
mov
in
and
pushf
in
lods
in
mov
mov
add
inc
in
xchg
in
xchg
mov
in
xchg
in
xchg
in
popf
in
mov
mov
in
mov
mov
in
mov
mov
in
mov
mov
in
test
push
add
add
popf
in
and
mov
mov
in
mov
mov
in
mov
mov
in
mov
mov
in
lods
in
xchg
mov
in
mov
mov
in
xchg
in
mov
mov
push
pop
add
add
mov
in
mov
mov
in
stos
in
mov
mov
in
cmps
in
test
mov
in
mov
mov
in
cwde
in
mov
mov
in
and
lods
in
xchg
in
mov
mov
in
lahf
in
mov
mov
push
or
add
ins
in
mov
mov
in
movs
in
xchg
mov
in
(bad)
in
movs
in
mov
mov
in
mov
mov
in
mov
mov
in
(bad)
in
stos
in
lahf
in
movs
in
mov
mov
in
mov
mov
in
mov
mov
push
or
add
push
in
movs
in
mov
mov
in
mov
mov
in
test
mov
in
mov
mov
in
movs
in
stos
in
mov
mov
in
stos
in
mov
mov
in
movs
in
mov
mov
push
or
add
pusha
in
lods
in
mov
mov
in
mov
mov
in
lods
in
mov
mov
in
and
test
mov
in
xchg
in
xchg
in
cdq
in
scas
in
mov
mov
in
scas
in
mov
mov
in
mov
mov
in
mov
add
mov
in
xchg
in
mov
mov
in
mov
mov
in
(bad)
in
xchg
in
and
mov
mov
in
mov
mov
in
test
mov
add
dec
in
mov
mov
in
and
and
lahf
in
movs
in
cmps
in
mov
mov
in
scas
in
mov
mov
in
mov
mov
in
test
mov
in
test
or
in
mov
mov
in
mov
mov
in
mov
mov
in
scas
in
xchg
in
and
(bad)
in
sahf
in
cmps
in
stos
in
xchg
mov
in
cdq
in
pushf
in
mov
mov
in
mov
mov
in
test
mov
in
xchg
mov
in
mov
push
add
add
mov
in
lods
in
mov
mov
in
movs
in
lods
in
movs
in
cdq
in
mov
mov
in
stos
in
mov
mov
in
lods
in
cmps
in
and
xchg
mov
in
nop
in
(bad)
in
mov
mov
add
push
in
mov
mov
in
mov
mov
in
test
mov
in
(bad)
in
scas
in
xchg
in
mov
mov
in
xchg
in
nop
in
and
cdq
in
xchg
mov
in
test
mov
in
xchg
in
xchg
push
adc
add
push
in
(bad)
in
mov
mov
in
mov
mov
in
xchg
in
mov
mov
in
xchg
in
xchg
in
mov
mov
in
mov
mov
in
test
mov
in
lods
in
mov
mov
push
adc
add
dec
in
mov
mov
in
xchg
in
and
stos
in
lods
in
mov
mov
in
mov
mov
in
sahf
in
mov
mov
in
mov
mov
in
mov
mov
add
imul
cdq
in
and
mov
mov
in
mov
mov
in
mov
mov
in
and
cmps
in
xchg
mov
in
(bad)
in
xchg
in
scas
in
mov
mov
in
lahf
in
mov
mov
in
mov
mov
in
fwait
in
add
add
add
mov
in
and
test
mov
in
(bad)
in
xchg
in
test
mov
in
mov
mov
in
lods
in
mov
mov
in
mov
mov
in
lods
in
mov
mov
in
mov
mov
add
jne
mov
in
mov
mov
in
mov
mov
in
mov
mov
in
mov
mov
in
xchg
in
stos
in
mov
mov
in
test
mov
in
(bad)
in
mov
mov
in
scas
in
xchg
in
xchg
in
cwde
in
test
mov
in
xchg
in
test
adc
in
xchg
in
mov
mov
in
mov
mov
in
pushf
in
movs
in
mov
mov
in
cwde
in
xchg
in
xchg
in
mov
mov
in
and
mov
mov
in
nop
in
fwait
in
mov
mov
in
xchg
in
and
and
test
push
add
add
mov
in
sahf
in
xchg
in
movs
in
mov
mov
in
scas
in
mov
mov
in
scas
in
mov
mov
in
scas
in
scas
in
mov
mov
in
and
stos
in
mov
mov
in
mov
pop
add
add
mov
in
xchg
in
mov
mov
in
call
in
mov
mov
in
mov
mov
in
mov
mov
dec
add
int
aam
mov
aas
xor
lods
cli
jno
sar
pop
inc
pop
clc
or
jmp
adc
mov
mov
(bad)
mov
cmp
nop
adc
xor
xchg
sbb
inc
shr
aas
add
push
or
data16
sti
and
jg
mov
sub
dec
mov
ja
cwde
test
dec
out
jo
lods
xor
fsubrp
inc
shl
sub
dec
rcl
loopne
mov
mov
ret
xor
hlt
adc
or
dec
sbb
cdq
lea
xor
sar
and
mov
push
int3
jne
stos
out
leave
inc
pusha
pop
mov
out
xchg
dec
test
imul
or
or
fidiv
pop
movs
fcomp
and
out
stos
jnp
jmp
push
adc
mov
xor
call
mul
mov
pop
mov
add
test
mov
dec
stos
jmp
pop
cmp
dec
mov
jmp
jne
test
clc
inc
loopne
sub
mov
in
pusha
gs
and
aas
push
(bad)
or
leave
push
aad
sub
adc
sbb
lock
sub
mov
repz
mov
mov
jmp
and
sbb
in
dec
loop
mov
(bad)
int
mov
iret
inc
mov
xchg
out
and
and
push
lds
ja
or
cmovae
mov
push
stc
jbe
xchg
mov
xchg
popa
hlt
(bad)
in
push
pop
fcmovbe
int
cwde
movs
mov
lds
test
pop
sub
shr
loopne
test
fs
nop
cli
jmp
jb
dec
(bad)
cs
(bad)
mov
in
popa
xor
lock
jge
mov
call
push
cmp
or
out
ret
jmp
stos
pop
outs
mov
mov
(bad)
pop
inc
xchg
adc
inc
inc
test
mov
cwde
or
cdq
aam
cld
imul
sbb
clc
jecxz
test
mov
jb
iret
and
mov
pop
sbb
fs
jb
sti
repz
adc
in
mov
push
inc
and
cmps
push
shr
pop
push
sahf
mov
pusha
retf
cmc
cmp
jne
mov
clc
loope
icebp
inc
cwde
jmp
ss
mov
mov
loopne
int3
xchg
loope
and
aam
cmps
pop
xchg
repnz
out
add
out
leave
daa
imul
aad
int
push
and
outs
mov
pop
mov
pushf
sub
stos
add
aad
xor
inc
in
test
lock
test
test
pop
scas
push
mov
out
mov
out
xor
call
jbe
adc
add
(bad)
(bad)
pusha
fsubr
(bad)
(bad)
and
cmp
pop
inc
xor
cmc
and
xchg
inc
fst
scas
movs
and
scas
clc
retf
rcl
cmc
iret
or
push
fwait
fwait
in
out
cmp
cld
and
repnz
fs
and
push
xchg
and
xchg
loope
mov
cmp
call
inc
enter
aas
push
mov
je
pop
lock
inc
xor
scas
mov
push
out
in
aam
rol
aam
xor
in
cwde
cmp
dec
add
call
shl
(bad)
xor
ins
inc
push
xor
sub
or
mov
lods
(bad)
into
outs
xor
sub
inc
push
jno
mov
jmp
inc
dec
(bad)
out
aad
or
add
add
aaa
outs
addr16
pop
xor
adc
mov
sti
gs
stc
rcr
xchg
icebp
jmp
mov
push
jmp
inc
(bad)
data16
mov
or
dec
jle
je
outs
push
or
dec
jbe
test
and
into
push
and
inc
pop
dec
ss
idiv
jns
repz
ret
loopne
mov
nop
and
stos
dec
call
push
lods
shl
jmp
mov
(bad)
popf
loope
out
sti
push
sub
inc
xchg
int3
out
iret
jae
add
ins
ins
scas
mov
adc
aaa
outs
(bad)
fist
stos
or
into
movs
xchg
jmp
jo
xchg
inc
loope
sub
mov
shl
adc
push
hlt
arpl
outs
mov
test
movs
nop
int
(bad)
inc
cmp
jle
adc
out
push
leave
fwait
scas
mov
sub
inc
mov
leave
rol
push
jle
out
pop
dec
hlt
add
pop
sbb
int
sbb
or
xchg
mov
aaa
aad
or
xchg
ja
mov
pop
ret
lods
lahf
fs
pop
iret
enter
cmp
cmp
sbb
xchg
aaa
push
pop
jecxz
push
mov
sbb
fsub
int
dec
js
les
xor
stos
out
pop
aad
fisttp
aam
mov
(bad)
scas
push
cmps
iret
inc
or
aas
movs
rcr
iret
mov
ja
ret
cmps
(bad)
xchg
add
or
jo
out
inc
sub
xor
cmp
lds
jge
loope
pop
mov
inc
mov
jp
or
fld
loope
mov
aaa
retf
dec
loope
push
add
inc
or
dec
sahf
mov
xlat
pop
aaa
repz
(bad)
lds
movs
popf
adc
stc
lds
movs
int3
mov
mov
cs
push
mov
mov
sti
pop
cmp
jns
or
idiv
cmp
mov
neg
mov
outs
xchg
cli
call
inc
outs
out
jo
cmp
sti
das
inc
pop
sbb
dec
shl
mov
(bad)
aaa
dec
sub
jae
sahf
jns
out
in
dec
ror
je
dec
ror
and
mov
sti
or
adc
dec
mov
int
mov
in
sbb
add
das
mov
das
fisttp
es
or
scas
(bad)
xchg
push
mov
jge
inc
inc
movs
enter
mov
or
(bad)
xchg
add
mov
cmp
ror
lock
scas
and
(bad)
or
xchg
fcomip
outs
mov
retf
and
jle
outs
enter
loopne
add
jle
test
jbe
inc
imul
or
and
mov
call
rcl
mov
or
call
mov
lea
dec
ficom
inc
out
mov
aad
ret
dec
dec
sbb
pop
jnp
inc
ss
retf
mov
(bad)
bound
es
or
jae
sbb
aas
out
call
push
dec
mov
mov
mov
jo
ja
stos
(bad)
fisub
and
inc
(bad)
dec
fcmovnb
leave
add
js
xlat
mov
rcl
sub
add
mov
cmp
mov
sbb
cmp
iret
shl
pop
movd
int3
adc
jae
clc
stos
push
mov
jg
int
leave
sub
hlt
or
and
lods
cmp
loope
jecxz
stos
push
jle
sub
cmp
cld
mov
pop
scas
mov
or
lahf
cld
js
in
imul
shr
jge
dec
push
sub
xchg
data16
cli
sbb
test
pop
fs
ins
ud2
and
out
es
shl
sbb
or
scas
jp
test
mov
fsubr
(bad)
icebp
js
jle
dec
int
cwde
jecxz
test
mov
mov
loope
mov
arpl
jge
dec
push
retf
daa
stos
xor
ja
cwde
pop
or
push
es
std
stos
sbb
fdivrp
lahf
pop
call
dec
out
push
mov
pop
and
dec
add
movs
pop
xchg
jno
add
div
stos
sub
or
push
sbb
fild
xor
xchg
pusha
mov
cmp
pop
outs
push
inc
scas
fld
fisttp
add
scas
mov
(bad)
test
ror
jecxz
sbb
bound
push
mov
push
mov
iret
pop
(bad)
xchg
mov
jmp
xor
dec
and
xor
pop
inc
xchg
ret
pop
dec
and
sbb
imul
stos
xor
les
dec
pop
std
sub
ficom
cmps
or
lahf
loopne
mov
out
(bad)
xchg
adc
push
cmp
xchg
xor
pushf
(bad)
dec
dec
mov
inc
xor
and
mov
les
inc
aam
and
repz
push
sub
push
jle
add
leave
adc
cwde
mov
pop
inc
push
mov
mov
sti
call
ret
mov
pop
push
xchg
add
or
push
dec
sub
push
push
xchg
and
mov
sar
pop
mov
pop
lock
sti
or
jae
cmp
ds
or
popa
mov
out
pop
outs
out
sbb
dec
xchg
imul
call
jne
(bad)
cmp
cdq
fiadd
push
mov
test
mov
xchg
mov
jns
push
or
mov
enter
jle
and
fwait
ret
inc
jmp
mov
bound
or
dec
adc
iret
mov
mul
cmps
aas
movs
test
clc
pop
pop
xchg
stc
test
jmp
lds
and
pop
push
jno
clc
je
hlt
cli
mov
(bad)
imul
gs
cwde
clc
out
mov
push
loop
(bad)
ds
out
lods
(bad)
into
sbb
dec
and
push
sahf
and
push
shr
and
test
mov
jl
loop
test
xchg
xchg
add
push
movs
icebp
mov
popa
push
das
adc
mov
idiv
xchg
mov
fdivr
and
repz
jne
dec
popf
les
div
jmp
sub
xchg
add
inc
shr
dec
pop
int
cmc
sub
mov
push
and
xchg
inc
(bad)
cmp
cli
xor
pop
test
fs
cli
sub
inc
dec
pushf
xlat
cmps
add
out
cmp
pop
pop
adc
push
popa
xor
out
xchg
push
mov
dec
cmp
paddb
dec
das
sub
jb
test
mov
movs
mov
adc
mov
or
ins
push
or
or
lods
fbld
xor
in
outs
xchg
shl
mov
in
push
pop
clc
lahf
jecxz
xor
sbb
pop
or
(bad)
push
pop
das
movs
dec
mov
mov
je
call
(bad)
retf
out
jmp
outs
movs
pusha
add
inc
nop
jb
daa
in
inc
loopne
jle
clc
mov
push
inc
(bad)
mov
jmp
jecxz
out
sbb
pushf
xchg
neg
push
cmp
aas
fcomp
xor
sbb
aam
mov
cmps
popf
lods
pushf
inc
inc
call
call
inc
inc
jns
add
int3
(bad)
fadd
mov
jnp
daa
pop
stos
mov
inc
jmp
cs
lea
pop
ins
and
adc
les
inc
add
and
rcl
push
repz
add
dec
loopne
dec
or
outs
imul
push
das
mov
movs
pushf
(bad)
iret
mov
xchg
inc
push
gs
sti
ror
popa
xchg
sub
sbb
pop
out
retf
arpl
pop
adc
mov
fs
or
js
in
out
in
rcr
dec
fsubr
(bad)
xor
aas
jge
fdivrp
mov
cmp
aam
adc
and
xchg
mov
out
adc
leave
push
(bad)
mov
jno
loop
in
inc
adc
test
inc
(bad)
gs
inc
add
aad
jg
leave
aas
inc
adc
loop
pusha
loop
gs
inc
xchg
jno
in
mov
out
es
dec
sti
push
(bad)
mov
pop
in
loop
(bad)
retf
leave
xor
ret
xchg
cwde
xor
ret
cmp
sbb
pushf
leave
inc
stos
dec
sbb
mov
lods
inc
out
loope
add
sti
add
shr
xchg
rcl
ins
aam
mov
arpl
jp
iret
into
dec
xor
stos
pop
ror
mov
jns
movs
ins
inc
inc
cmp
aam
jb
xchg
xchg
out
mov
mov
ror
and
repz
sbb
push
pop
das
retf
out
enter
jmp
inc
icebp
(bad)
jnp
and
dec
fldcw
mov
cli
add
ja
jge
mov
hlt
mov
cmc
std
fcmovne
push
sub
push
jmp
fbld
mov
dec
jno
aad
stc
adc
sub
es
xor
lahf
imul
adc
je
js
mov
sbb
push
push
sub
xchg
and
ss
outs
aas
popa
xchg
jge
dec
adc
call
adc
fcomp
dec
push
aam
xor
jb
or
outs
inc
pop
or
sar
outs
push
push
mov
cdq
lock
ds
or
cmp
sar
mov
inc
int
inc
hlt
shl
pop
and
and
stc
sbb
and
pop
mov
in
call
je
adc
sub
inc
gs
pop
outs
xor
stc
jl
cmp
(bad)
aam
push
jb
cmp
sub
add
mov
add
ret
mov
mov
xor
push
loope
test
push
hlt
push
push
push
imul
dec
jo
xor
repz
rol
inc
popa
xchg
pop
ror
ret
or
fist
mov
jno
or
rcl
jo
sub
sar
ja
mov
cdq
adc
mov
cwde
sbb
lahf
mov
push
add
and
jmp
cmp
scas
cmp
mov
sub
inc
cmp
mov
mov
inc
stos
push
jb
mov
pop
aas
sub
repz
jmp
jae
rcl
push
test
js
retf
add
scas
cmp
jg
ret
and
lds
dec
inc
add
lock
addr16
dec
push
push
dec
ins
sub
mov
retf
test
xchg
or
cmp
sub
cmp
xlat
ja
push
xchg
dec
xchg
in
xor
mov
in
jg
das
lahf
iret
push
lock
and
push
pop
jle
mov
cmps
loope
add
std
movs
push
adc
jmp
jno
xor
xlat
xor
push
retf
jmp
mov
push
loope
fild
pop
movs
retf
mov
nop
(bad)
sahf
jle
dec
mov
jge
or
in
rcl
xor
dec
neg
(bad)
cmp
pop
aad
push
hlt
aad
xchg
maskmovq
imul
cmp
push
push
and
push
pusha
sub
imul
push
xor
pop
ds
imul
iret
retf
inc
adc
sub
retf
mov
fucomp
test
pop
lods
push
and
aas
in
adc
test
jae
xor
xor
mov
adc
inc
jmp
mov
div
fisub
mov
sti
cs
adc
lock
cmps
adc
je
into
sbb
out
in
aaa
pop
ins
mov
adc
jnp
mov
add
ret
fcmovne
dec
loopne
push
jmp
pop
mov
(bad)
rcr
dec
pop
jns
or
sub
adc
cmp
xchg
mov
mov
add
mov
fadd
retf
aaa
mov
mov
ret
pop
cwde
in
ja
fbstp
xchg
inc
inc
pushf
pop
aad
dec
daa
inc
xchg
stos
adc
sbb
retf
pop
mov
push
pop
jg
das
or
stos
ror
clc
dec
rcr
jno
mov
loop
adc
sub
dec
fcmovbe
enter
xchg
mov
movs
call
jbe
mov
cmp
inc
inc
cmp
ds
mov
inc
pop
cmps
sbb
fldenv
aas
adc
je
pop
jge
lahf
movs
push
fild
or
xchg
hlt
jnp
vmovupd
xchg
pop
into
dec
inc
test
inc
mul
add
push
sahf
jnp
test
shr
outs
xor
cmc
add
cli
or
iret
outs
ret
xor
int3
retf
pop
lock
cmp
add
scas
sbb
xchg
retf
add
pop
cwde
mov
lea
sbb
and
mov
cld
xchg
pop
push
sub
mov
(bad)
add
leave
jmp
push
mov
inc
pusha
dec
in
push
mov
(bad)
or
xor
lea
mov
bound
jmp
jno
rol
sbb
lods
or
or
cmp
scas
xor
sub
mov
daa
cli
adc
pop
jo
jnp
in
jne
push
cmps
jbe
jb
cmp
mov
cmp
test
push
jle
xor
out
cmc
mov
jmp
mov
mov
mov
cmp
pop
aad
jnp
test
(bad)
repnz
cmps
fdivr
adc
mov
jle
xor
adc
cmp
out
dec
sbb
pop
shr
je
pushf
sahf
mov
jno
rcl
mov
pop
xor
movs
or
stos
sahf
xor
push
adc
add
outs
movs
imul
aad
fadd
pushf
pop
pop
pop
dec
call
jmp
push
xor
test
pop
fld
scas
add
cmps
cdq
fldcw
and
iret
or
das
xchg
or
inc
pop
add
in
xor
adc
jmp
xchg
outs
add
aad
or
ror
aas
add
mov
lds
mov
xchg
dec
adc
pop
dec
sbb
jb
cmp
ds
test
mov
mov
or
iret
mov
sub
cmp
jmp
push
scas
dec
mov
out
call
add
push
mov
push
mov
bnd
in
jne
jbe
enter
shr
cmp
and
(bad)
(bad)
mov
cli
fild
ficom
xchg
cmp
or
pop
loope
stc
inc
enter
mov
add
dec
mov
loope
inc
add
push
js
jl
stc
xor
xchg
test
test
int3
dec
ds
push
fcomp
call
xchg
sbb
and
dec
sub
loop
xchg
fs
jo
lods
lds
pushf
in
cmp
inc
cld
lds
je
jle
cmp
cwde
push
and
call
mov
movs
pop
or
jmp
dec
inc
xor
mov
je
stc
sbb
cmps
inc
inc
jp
adc
outs
jl
repz
adc
lds
jg
mov
sub
lods
sub
lds
mov
pop
stos
pop
jnp
shl
in
xor
fnstcw
add
jae
or
push
(bad)
cwde
adc
call
movs
pop
lea
leave
pop
push
cmp
fst
not
sar
adc
push
push
div
cwde
add
stos
cmp
mov
mov
(bad)
jmp
ret
and
(bad)
mov
nop
inc
xchg
aaa
aam
lods
jns
jb
xchg
in
scas
arpl
fst
push
loop
retf
cmp
test
repnz
jno
pop
fld
mov
and
pop
jecxz
dec
das
retf
(bad)
or
cmp
fld
int
mov
inc
nop
cmc
sub
call
(bad)
dec
push
outs
mov
mov
xchg
or
je
pop
jmp
jg
cmp
mov
cmps
cmp
mov
dec
mov
jg
in
inc
and
inc
mov
por
or
jle
add
int3
nop
lds
inc
lock
iret
sbb
cmp
mov
out
pop
inc
ror
mov
and
push
inc
(bad)
pop
adc
push
xor
test
mov
xor
xchg
inc
fcmovnb
jnp
sahf
adc
add
add
mov
sar
ins
sub
cmp
test
mov
mov
ja
add
lea
jno
pop
js
pop
out
adc
movs
icebp
stc
stc
adc
arpl
cs
xor
cld
dec
repz
xchg
into
out
imul
test
add
test
aam
loopne
add
sub
mov
dec
pop
adc
dec
aad
in
mov
retf
xchg
add
xchg
mov
jno
jmp
jmp
sub
inc
xor
into
dec
jbe
push
leave
push
std
scas
dec
popf
cli
push
fdiv
cmc
or
movs
rcr
push
bound
lock
ja
pop
jg
dec
and
scas
in
sbb
or
pop
cmps
add
ret
adc
xor
(bad)
frstor
in
mov
lahf
dec
jnp
xor
mov
aas
sbb
int3
arpl
mov
(bad)
fsub
mov
jge
sub
(bad)
retf
inc
jmp
sar
lock
or
adc
idiv
bound
sub
repnz
mov
and
test
cwde
scas
push
xor
add
adc
mov
cdq
aam
xchg
xor
icebp
hlt
inc
push
cmp
push
push
jbe
sbb
pop
les
lock
mov
repnz
aad
and
cmp
loopne
xchg
mov
rcl
pop
addr16
cmp
das
lods
test
enter
jmp
push
jbe
fs
sti
jbe
out
sar
sar
add
xchg
mov
and
fsubr
fs
fsubrp
scas
jl
imul
cs
inc
popf
les
cwde
call
add
ss
test
mov
test
and
stos
pop
xchg
shl
retf
sub
add
icebp
inc
cmc
dec
mov
mov
inc
fistp
imul
(bad)
and
sbb
mov
scas
es
in
pop
fcomp
imul
mov
rcr
inc
xchg
mov
sub
ja
mov
scas
and
daa
sar
pop
pop
and
push
pop
adc
mov
sbb
and
cmp
push
cmps
cmc
iret
xor
jecxz
xchg
rol
xor
push
addr16
lock
adc
loopne
xchg
pushf
push
out
pop
fmulp
xor
xchg
sub
mov
push
nop
loope
(bad)
mov
jb
mov
jecxz
xor
adc
cmc
mov
jbe
xor
bound
jge
loopne
dec
dec
pop
xchg
ss
imul
jmp
xor
adc
das
and
test
pushf
cwde
jecxz
xor
jmp
push
and
or
(bad)
mov
sbb
adc
fucomi
ja
cld
test
or
jecxz
push
jg
movs
and
inc
lahf
xchg
aad
lods
xchg
xchg
popf
mov
jg
pop
and
jp
int3
call
cmp
inc
loope
add
iret
lock
div
or
clc
enter
push
call
cmp
and
pop
das
jp
pop
or
mov
leave
fdiv
adc
adc
sub
loopne
cmp
pop
push
jmp
adc
fwait
mov
daa
xchg
mov
popa
into
scas
jns
xlat
fs
es
jmp
cmc
add
es
cmp
nop
sbb
xlat
inc
sbb
xchg
pop
fs
add
add
cdq
lods
out
movs
adc
bound
aas
fisub
ss
rcl
clc
adc
xchg
ret
stc
imul
std
or
idiv
add
movs
mov
imul
loop
rcr
adc
pusha
cmps
jmp
icebp
fstp
mul
xor
jo
retf
pop
push
outs
mov
add
arpl
inc
jmp
push
shl
(bad)
movs
lods
pusha
js
scas
shl
mov
sahf
adc
mov
into
and
(bad)
jns
add
push
not
and
push
cs
aas
daa
cs
xchg
pop
shl
pop
pop
pusha
and
push
scas
not
push
inc
sbb
jo
push
popf
jecxz
push
(bad)
fcomp
mov
outs
stc
ret
cli
shl
push
add
adc
xlat
shr
jno
leave
loopne
mov
sub
add
fucomip
repnz
(bad)
push
movs
daa
je
and
(bad)
cmp
xor
and
push
jg
xor
inc
in
std
loope
dec
std
cmp
shl
dec
sbb
or
imul
inc
push
pop
das
push
arpl
push
mov
ins
dec
jnp
mov
test
out
jns
in
mov
jbe
test
pusha
mov
sbb
scas
jne
and
jb
mov
jg
add
xor
cmps
pop
xlat
jmp
push
jge
inc
cmp
lock
pop
clc
rcr
jbe
mov
inc
dec
(bad)
retf
and
loopne
sub
std
jp
or
cmp
lock
inc
jmp
outs
mov
outs
mov
rcr
and
xor
out
call
cmp
inc
xchg
shl
ret
dec
add
pop
inc
jp
xchg
lods
sbb
push
loopne
ds
xor
adc
mov
clc
(bad)
std
mov
xor
mov
mov
xchg
sahf
push
mov
push
mov
or
xchg
cmp
mov
xchg
les
or
cld
(bad)
leave
push
jmp
adc
pop
cmc
dec
lods
test
mov
fstp
dec
mov
(bad)
or
xchg
push
neg
(bad)
pop
push
or
in
shr
retf
cmp
(bad)
xor
repnz
(bad)
sbb
es
xor
fstp
test
push
outs
sbb
cmp
mov
aas
outs
fs
push
push
scas
fdivr
call
aad
add
jne
mov
dec
aas
retf
scas
(bad)
adc
ds
loopne
pop
xor
adc
dec
leave
sti
jle
pop
mov
or
in
mov
jmp
push
cmps
shl
sub
rcl
inc
in
pop
cmp
sbb
leave
scas
cmp
(bad)
inc
ficom
scas
shl
add
sbb
hlt
jb
and
js
(bad)
sub
cdq
jle
mov
je
xchg
add
out
and
mov
loop
sbb
scas
ret
add
mov
mov
inc
jne
dec
gs
daa
xor
push
js
jmp
xchg
(bad)
sti
push
clc
jb
mov
adc
adc
push
add
inc
pop
stc
jno
lods
into
jae
cs
cmp
outs
xor
cmp
scas
xor
lahf
cmp
inc
aad
jo
sub
je
add
and
icebp
call
repz
jnp
jno
call
aam
dec
xchg
aam
and
jae
jp
int
popf
cmp
mov
lds
jb
and
mov
sbb
lock
icebp
mov
jno
call
push
mov
fcmovnu
adc
push
imul
into
xchg
lea
xchg
dec
sub
sub
lods
cdq
sub
ins
aad
pop
inc
stos
push
mov
sbb
add
(bad)
fnstcw
cli
(bad)
nop
add
hlt
out
mov
push
fchs
ror
iret
push
(bad)
cmp
in
mov
and
xchg
(bad)
push
jmp
mov
jo
add
mov
xor
pop
sub
add
sub
jmp
cwde
inc
outs
xchg
sbb
and
outs
and
(bad)
lock
ret
jmp
aaa
dec
or
iret
dec
clc
inc
pop
cmp
sbb
pop
imul
sbb
and
xchg
mov
mov
out
dec
leave
jecxz
test
aas
fld
es
mov
push
inc
jbe
mov
jno
mov
scas
ret
sub
xor
sub
mov
push
js
fidivr
push
ret
jnp
push
outs
clc
jmp
out
add
push
bound
jge
xor
jo
lock
dec
dec
dec
(bad)
dec
push
test
mov
jge
xchg
out
stos
mov
cmp
enter
aam
adc
xchg
xor
push
dec
stc
xchg
inc
lods
iret
pop
aas
gs
shr
std
std
gs
fnsave
pop
mov
mov
out
test
dec
push
lds
test
pop
sbb
xchg
mov
lds
sbb
fsubr
jp
outs
lahf
add
fidiv
jae
and
mov
and
retf
mov
jp
mov
mov
jp
add
cwde
xchg
push
pop
stos
cmp
dec
cmp
mov
jb
outs
addr16
mov
shr
dec
cmp
xor
jne
cmp
fcomp
jne
icebp
xor
les
or
pushf
inc
fwait
sbb
dec
mov
icebp
shr
rcr
(bad)
xlat
lds
add
aaa
add
sbb
ret
xchg
inc
sub
stc
stos
and
gs
test
adc
call
push
dec
jne
inc
dec
cmps
cwde
jns
pop
mov
outs
xor
rep
les
xchg
clc
rcl
mov
test
pop
push
fwait
dec
lahf
and
pop
into
mov
sub
sti
sub
pop
call
sar
add
sub
mov
jge
push
dec
pop
ja
push
jo
pop
stos
add
inc
rol
mov
out
or
pusha
xchg
stc
ret
xchg
clc
adc
movs
test
cmp
sub
imul
and
push
add
ins
inc
xor
fcomip
push
cs
sub
lods
mov
sub
out
dec
adc
pop
ins
fwait
cmp
fs
stos
sub
jnp
mov
retf
adc
(bad)
loopne
dec
sbb
mov
and
dec
sahf
in
mov
and
int3
mov
push
or
stc
pop
std
sub
es
popa
inc
aam
adc
sbb
pop
cmps
cmc
neg
popf
dec
retf
mov
mov
(bad)
mov
xor
cmps
lahf
sub
jmp
cmp
cld
sub
xchg
outs
loop
cmp
mov
xor
out
inc
push
sar
out
adc
(bad)
jbe
push
or
xor
fisttp
lods
and
dec
out
pop
ror
push
inc
mov
in
inc
dec
fisubr
mov
adc
jno
push
iret
inc
inc
shr
aad
imul
ss
and
push
sub
jle
jne
pop
leave
or
xor
jl
dec
rol
cdq
dec
out
lahf
xchg
pop
fcom
call
xchg
call
mov
cmp
xor
xchg
jecxz
(bad)
fisttp
sub
outs
bnd
push
push
ror
jmp
icebp
inc
in
lods
pushw
pop
and
iret
sbb
pop
enter
(bad)
mov
or
sub
sub
jl
adc
retf
popf
sbb
push
call
or
mov
sub
push
xor
pop
sbb
loopne
and
lods
or
and
inc
pop
or
ret
pop
in
cmp
push
scas
mov
ins
(bad)
jo
xlat
cwde
out
mov
sbb
mov
xchg
sub
dec
lods
sahf
cmp
cmps
mov
mov
cmp
push
add
ins
lahf
(bad)
lahf
fstp
and
sbb
sbb
jl
mov
or
and
push
ret
push
inc
sbb
add
push
push
fwait
inc
mov
push
xchg
sti
xchg
lods
sub
cwde
cmc
mov
int
cmp
add
pop
ror
cmp
xchg
jp
std
xchg
(bad)
jmp
rcr
fwait
popa
jge
xor
and
add
int3
mov
mov
pop
xor
inc
cli
inc
sbb
loop
ds
movs
fdivr
pop
push
push
fstp
clc
push
std
mov
shl
ins
(bad)
jne
(bad)
fld
mov
scas
sbb
dec
test
xchg
es
test
mov
sbb
sbb
out
repz
pop
cs
loopne
or
dec
in
xor
jmp
xchg
push
mov
ret
test
and
div
movs
add
push
inc
xlat
pop
pop
and
in
cwde
adc
inc
and
fcomp
mov
xchg
ins
(bad)
jns
dec
jns
jns
scas
xor
lahf
inc
or
psrlw
sub
movs
mov
push
mov
mov
rcr
cwde
cmp
into
mov
and
add
add
mov
inc
jo
mov
addr16
and
(bad)
mov
sub
jo
mov
(bad)
ret
mov
jno
std
shl
je
stos
movs
in
adc
mov
ret
ja
les
push
enter
in
inc
mov
jl
dec
sbb
cs
dec
mov
push
(bad)
sub
mov
jns
fisub
xor
popf
scas
out
push
adc
dec
mov
or
ins
or
mov
outs
lahf
mov
arpl
adc
pop
jb
jnp
and
mov
or
movs
jmp
add
call
xor
out
push
xchg
sub
mov
popa
fldcw
adc
dec
jmp
jbe
push
mov
loope
ss
push
lsl
(bad)
inc
aam
or
dec
jmp
jnp
push
ret
daa
push
pop
shr
add
out
inc
sbb
pop
mov
xchg
sub
pop
int
addr16
scas
and
and
mov
fcom
jnp
push
push
imul
sub
jl
out
push
xor
pop
mov
popa
arpl
and
jmp
jns
repz
jl
xchg
(bad)
adc
popf
add
and
shr
adc
xchg
test
test
nop
mov
pop
fsub
dec
dec
pop
(bad)
out
js
cmp
sub
sbb
mov
xor
outs
add
dec
xchg
mov
retf
mov
rcr
pop
push
xchg
gs
sbb
arpl
xor
jmp
push
push
icebp
leave
push
mov
fmul
or
aad
int3
mov
mov
nop
and
lds
ret
mov
aad
in
ret
jle
call
push
push
cmp
or
add
push
xor
and
(bad)
cmp
inc
adc
xchg
jp
add
jne
aas
cwde
aas
enter
or
and
pop
xchg
push
push
adc
sub
or
stos
jbe
pop
dec
jae
push
cmp
imul
and
xor
push
jl
adc
xchg
ret
cmp
jl
arpl
mov
adc
and
scas
xlat
mov
cmp
sub
scas
push
sbb
xchg
test
fcmovb
enter
es
xchg
sub
jo
push
movs
cmp
push
jns
call
rol
data16
data16
inc
call
stc
(bad)
cli
jno
adc
in
mov
nop
js
jge
xor
xor
jbe
test
jae
dec
mov
ja
in
pop
addr16
dec
retf
pop
and
mov
mov
cmp
dec
lds
imul
xchg
in
out
mov
shl
push
xor
nop
dec
cmp
daa
ins
sti
mov
aad
scas
cld
xchg
cmp
mov
cmp
xchg
dec
mov
cmps
adc
pop
lock
and
jo
les
push
xor
mov
out
pop
cmp
xor
mov
mov
push
sahf
fwait
pop
ror
sahf
dec
or
pop
mov
push
xchg
popf
dec
in
aam
pop
sbb
jecxz
cdq
pop
jg
and
push
push
je
repz
mov
nop
adc
addr16
pop
mov
(bad)
xor
ret
xchg
push
mov
in
aaa
cwde
mov
mov
xor
xchg
outs
mov
adc
jnp
push
sbb
inc
enter
adc
inc
lea
or
push
outs
int
lahf
mov
xchg
(bad)
jmp
in
push
adc
test
(bad)
adc
scas
jno
rcl
(bad)
push
retf
mov
inc
inc
lahf
stc
xor
ds
jno
sub
in
movs
jmp
pop
cmps
(bad)
sbb
stc
add
leave
sahf
int
adc
fwait
xchg
push
pop
repnz
jmp
pusha
out
or
les
ds
mov
push
and
mov
sahf
mov
fisttp
mov
fisubr
retf
xchg
inc
mov
xchg
pop
popa
adc
scas
push
sbb
sub
xor
shl
xor
inc
inc
lock
movs
lahf
and
or
cwde
call
into
movs
adc
dec
fsubr
jecxz
inc
clc
pop
inc
pinsrw
pop
push
out
xor
or
mov
jae
movs
mov
popa
leave
shr
mov
nop
(bad)
sub
add
cmp
sub
mov
inc
or
adc
ins
minss
push
push
(bad)
cmp
int
sub
sbb
cmp
retf
dec
mov
push
aam
mov
dec
ja
repz
cli
out
push
mov
daa
pop
mov
push
jmp
jmp
add
jb
dec
daa
call
dec
jb
repnz
dec
shl
into
pxor
inc
dec
mov
popa
and
inc
cmp
adc
xor
xor
pop
fmul
xchg
xchg
es
push
neg
adc
cmc
xor
lods
pop
xor
push
add
call
cmp
sbb
pop
out
sbb
adc
lods
popa
adc
xor
ins
ret
dec
les
out
frstor
add
or
fld
es
or
mov
mov
imul
outs
out
js
or
jbe
jnp
mov
cmp
popa
push
pop
lea
or
inc
lock
call
sub
cmp
sub
jbe
cli
push
daa
jle
adc
mov
jae
je
add
das
aad
sbb
push
push
int
and
(bad)
jmp
pop
iret
ins
movs
pop
xchg
jp
fsub
fwait
push
push
xchg
fidiv
out
xor
cmp
(bad)
cld
int
mov
push
or
jmp
adc
mov
lods
sbb
(bad)
mov
mov
outs
xor
test
xor
mov
dec
mov
mov
add
inc
data16
imul
sbb
pop
pcmpeqd
jae
inc
pop
inc
dec
cld
xor
sbb
mov
aam
or
dec
xor
pop
aam
dec
es
mov
and
xor
test
mov
and
mov
xor
or
mov
jo
inc
cld
sti
push
aad
sub
mov
pop
jmp
and
fld
pop
add
repnz
mov
push
std
mov
mov
pop
rcl
jbe
into
xor
inc
lods
mov
jns
xchg
in
cmp
jmp
movs
in
scas
enter
xchg
push
lods
mov
(bad)
inc
pop
lock
mov
pop
xor
xchg
mov
pop
out
test
shl
inc
retf
jmp
lahf
test
adc
xchg
push
rol
jl
add
jge
inc
pop
mov
or
(bad)
push
add
in
jmp
push
xchg
scas
nop
ja
or
shl
sbb
pop
loope
mov
lods
call
sbb
mov
jl
add
cwde
leave
pop
fiadd
aas
jg
xchg
xchg
ja
cmp
ss
cmp
aaa
xchg
sbb
outs
inc
mov
loop
dec
inc
loopne
into
jmp
cmps
pop
loope
xor
xchg
pop
popa
stos
jmp
rcl
imul
inc
sub
(bad)
sbb
test
rep
stos
lods
or
xchg
add
cmps
jmp
sub
sbb
jp
loop
push
mov
xor
pusha
sbb
(bad)
aad
movs
mov
pop
in
add
in
cmp
cwde
add
in
dec
jp
dec
dec
(bad)
nop
jmp
mov
movs
adc
mov
sbb
in
sbb
lods
popf
mov
aaa
ret
loopne
jb
not
xchg
sub
add
jg
inc
addr16
sub
bound
xchg
add
sub
jb
pop
aad
pop
sub
xchg
mov
mov
adc
add
cmp
push
adc
(bad)
popf
and
push
push
(bad)
xor
mov
mov
cmps
(bad)
adc
cmp
add
inc
shl
and
cwde
popw
pop
xlat
xor
lods
and
mov
adc
adc
jg
pop
push
adc
cdq
pop
outs
push
pop
adc
rcr
mov
ficom
call
sbb
dec
inc
aaa
jbe
add
test
inc
(bad)
push
fstp
movs
mov
sbb
xor
cwde
sbb
mov
xchg
pop
sbb
(bad)
jp
cs
shl
or
aas
and
pop
div
xchg
aaa
cmp
arpl
xchg
lods
add
int
and
mov
aaa
sub
mov
test
and
mov
popf
inc
jb
fwait
addr16
fs
stc
jae
inc
(bad)
mov
retf
xchg
or
aas
xor
pop
dec
adc
ret
jle
pop
sbb
cwde
fdivr
int3
add
test
fidivr
sbb
repnz
(bad)
jno
inc
ror
movs
mov
xchg
leave
scas
xchg
outs
gs
xchg
lock
jne
into
xchg
push
call
adc
outs
mov
cmp
add
fwait
jae
mov
push
pushf
repnz
mov
lds
xor
xchg
jnp
pop
jg
pop
or
dec
sbb
fdecstp
inc
lods
adc
jmp
mov
xor
daa
pop
mov
mov
xchg
pusha
jmp
lods
lods
int3
dec
mov
imul
imul
int
mov
mov
(bad)
jo
add
push
icebp
out
cmp
jp
jmp
mov
xor
push
xor
and
movs
mov
sbb
inc
sbb
mov
rcr
sbb
test
lock
(bad)
addr16
retf
or
adc
jg
cmp
jle
xchg
ror
jmp
pop
daa
mov
aas
sti
enter
loopne
add
hlt
fmul
jecxz
xor
aad
popf
cmp
loope
cmp
adc
out
push
mov
dec
inc
in
aad
xor
pop
xlat
pusha
les
mov
xor
adc
stc
ror
jl
fstp
mov
idiv
xchg
xor
iret
jae
(bad)
sub
out
jle
sbb
test
adc
enter
inc
or
rcl
dec
repz
ja
xchg
mov
stc
loop
stc
sub
mov
xor
fs
push
and
lock
mov
and
jns
dec
jl
xor
adc
neg
jb
or
(bad)
(bad)
push
fisubr
cmp
retf
cmp
aam
scas
and
sub
pop
push
stos
and
mov
cmp
push
stc
mov
adc
xchg
shr
rcl
inc
dec
dec
xchg
or
fwait
das
addr16
pop
movs
pop
mov
loope
sbb
sub
call
inc
dec
sub
pop
inc
inc
jl
push
shl
xor
sub
lods
call
lea
xchg
add
jnp
and
adc
cmc
push
xlat
push
cdq
imul
cmp
scas
cmp
xor
fdivr
pop
inc
mov
stos
xor
jb
mov
movs
sti
cmp
out
in
push
cmp
sti
test
jge
js
mov
adc
xchg
sub
adc
inc
dec
sbb
dec
scas
test
pusha
arpl
inc
pop
dec
add
fadd
xor
mov
xchg
int3
test
mov
add
cmps
add
(bad)
pop
adc
das
out
push
into
ins
je
les
xchg
add
or
je
retf
ret
push
adc
xchg
leave
add
sub
mov
sub
push
in
adc
call
push
push
fbstp
add
dec
inc
aam
cs
add
loope
dec
das
adc
xchg
bound
sub
div
and
add
int3
mov
xor
retf
imul
stc
fistp
pop
or
adc
mov
xchg
xchg
inc
sbb
or
sub
gs
inc
stc
push
jg
daa
test
(bad)
mov
(bad)
into
jb
pop
movs
xor
test
int3
out
xor
xchg
and
mov
mov
ins
aad
fist
dec
push
mov
pop
sub
xchg
cmps
js
pop
pop
xchg
sub
lods
cmps
ret
call
mov
(bad)
cmps
icebp
aam
sub
and
xlat
jmp
sbb
push
jmp
stos
fldenv
mov
sti
ins
mov
xchg
sti
repnz
ret
inc
cli
sahf
call
inc
daa
jmp
das
adc
ficomp
mov
cmps
stos
js
inc
jns
(bad)
cmp
dec
fisubr
data16
ret
cdq
xchg
xor
and
and
loopne
cs
and
xor
dec
push
loopne
aas
sar
mov
mov
dec
(bad)
mov
add
out
(bad)
push
lods
jbe
fcmovu
popf
pop
or
inc
clc
enter
les
ret
mov
dec
scas
sbb
and
lea
pop
fist
iret
imul
xor
mov
pop
or
xor
pop
and
(bad)
dec
pop
aaa
popa
push
jge
ret
retf
shld
or
imul
ins
jae
retf
cmp
int3
jge
jo
popf
pop
add
leave
inc
sbb
jge
mov
jne
(bad)
push
dec
cwde
dec
iret
iret
dec
mov
push
push
jmp
adc
lds
sub
in
inc
or
cmp
xchg
add
test
icebp
fistp
adc
dec
lahf
mov
out
mov
repz
out
mov
lods
jecxz
xchg
inc
nop
push
std
sbb
sbb
inc
pop
mov
arpl
int3
mov
bound
mov
xchg
out
push
leave
jg
mov
fwait
lods
ret
into
movs
loope
lods
movs
push
loope
xchg
or
daa
cmp
mov
sbb
mov
lahf
sbb
lods
retf
sbb
fstp
lods
xchg
mov
retf
xchg
inc
push
mov
and
pop
xor
cmp
into
dec
mov
inc
jae
cmp
mov
in
popf
add
lock
loop
jo
jecxz
popf
popa
loopne
xor
mov
or
rcl
xor
das
sub
stos
movlps
std
adc
repnz
sbb
xor
loop
pushf
ins
and
inc
add
sbb
std
cmp
scas
lods
and
mov
sub
mov
nop
adc
ins
popf
mov
and
sub
aad
lahf
imul
test
test
push
ja
ret
sbb
int
inc
jmp
push
adc
pop
data16
xchg
addr16
jne
push
jge
jle
xchg
(bad)
or
dec
(bad)
out
cmp
cmp
push
push
mov
in
cmp
in
(bad)
int3
xchg
out
rol
jmp
rcr
das
mov
cmps
aad
sub
mov
pop
mov
inc
jmp
adc
(bad)
(bad)
cmp
add
aaa
rcl
pop
inc
inc
mov
pop
mov
or
fwait
pop
into
lock
test
sbb
fsubr
in
ret
push
and
xchg
hlt
adc
movs
inc
pop
ficomp
mov
mov
xor
(bad)
lock
bound
lds
out
jb
out
adc
sahf
sub
sti
and
rol
mov
ins
ss
imul
inc
rcl
pop
in
in
mov
mov
and
and
mov
shr
test
pop
in
sbb
leave
push
das
dec
xor
lahf
mov
xchg
add
inc
ins
into
jmp
popf
push
std
push
push
into
or
fmulp
mov
adc
arpl
jge
shl
iret
sbb
push
call
repnz
fisttp
ins
mov
call
jno
movs
xchg
aam
mov
jae
fidivr
in
xor
and
cmc
(bad)
call
mov
or
ins
mov
out
or
jg
push
(bad)
outs
add
sbb
daa
push
(bad)
ins
dec
cld
in
mov
(bad)
stc
aam
(bad)
daa
mov
sbb
rol
jmp
pushf
dec
test
int
xor
mov
cdq
pop
js
jo
jge
jo
(bad)
jnp
sub
daa
cmp
adc
jb
ret
cmp
pushf
ret
rcr
sti
cli
push
sub
push
jle
imul
fs
or
shr
retf
inc
jmp
sbb
add
mov
hlt
shl
pop
push
in
xchg
pop
push
xchg
xlat
stos
div
lods
mov
push
add
rcl
lods
sbb
sbb
shrd
dec
cmp
call
loop
adc
lock
rol
in
jns
stos
cmc
mov
inc
push
pop
jno
mov
enter
daa
adc
call
data16
xor
inc
ror
scas
add
lods
adc
iret
mov
stc
loope
sbb
sub
xlat
scas
das
adc
mov
xor
mov
(bad)
outs
mov
sub
mov
adc
or
lods
aaa
pop
sub
sbb
pop
and
dec
stos
and
xchg
nop
shl
test
sbb
cmp
cmp
enter
pop
xchg
push
fs
pop
fwait
loope
lds
je
xor
add
cli
fs
inc
daa
lea
push
fucomip
rcr
scas
sub
inc
mov
pop
mov
cmp
not
push
pop
scas
fisub
xchg
adc
aaa
mov
out
push
jmp
and
imul
and
sbb
neg
adc
fsubr
cmps
out
cmp
xor
cld
ds
popf
icebp
mov
popf
and
sub
push
dec
ror
into
and
in
ret
fimul
or
push
or
(bad)
inc
aad
das
mov
test
(bad)
and
les
mov
xor
mov
leave
fxch
cmp
in
sbb
in
mov
adc
cmp
xchg
mov
mov
xchg
test
adc
test
push
aad
test
in
aaa
ins
lods
test
xor
mov
aam
ja
stc
mov
aaa
inc
or
loop
mov
mov
(bad)
xlat
test
cmp
nop
inc
mov
mov
add
(bad)
neg
nop
jg
jmp
pop
xchg
xchg
outs
dec
and
jae
jo
push
jecxz
enter
ins
or
stc
add
sbb
fistp
and
sub
bound
dec
jmp
jmp
cmp
mov
push
jnp
push
sahf
cvttps2pi
push
(bad)
idiv
fmulp
fs
repz
adc
jnp
iret
push
ret
push
enter
mov
jge
sbb
cmp
mov
or
inc
ror
dec
shr
xor
pop
test
(bad)
jg
jb
xlat
pushf
mov
inc
popf
add
inc
retf
push
aas
and
jp
xchg
jae
sub
jns
ret
mov
mov
int3
(bad)
pop
push
fdiv
pusha
push
mov
gs
mov
pop
lds
inc
lock
fisttp
add
jmp
stos
ja
adc
and
push
mov
xor
sub
jne
xchg
push
mov
in
lds
jge
dec
into
out
cmp
jo
jp
retf
adc
mov
shl
lods
outs
push
sbb
mov
sbb
leave
fdiv
(bad)
lods
inc
push
push
daa
add
or
push
repz
or
nop
shr
loope
popf
add
push
mov
scas
or
jmp
lods
sar
dec
jns
lea
push
retf
aad
js
and
daa
cmp
jmp
inc
pop
lock
jae
sbb
leave
or
mov
lods
loope
mov
das
sub
mov
mov
int3
movs
and
stc
jl
push
retf
daa
dec
out
pop
pop
sti
add
pop
mov
jmp
ficom
or
xchg
inc
loop
jmp
dec
pop
push
popa
dec
mov
sub
fcomp
mov
push
add
xor
pop
ss
lods
popf
mov
(bad)
adc
mov
mov
pop
add
into
xchg
push
shl
push
jmp
div
mov
or
push
fcomp
sti
popf
jmp
out
sbb
xchg
sub
xchg
outs
xchg
in
int
leave
push
ss
scas
jge
push
retf
fs
sbb
lods
mov
sbb
inc
add
add
cmc
mov
test
jbe
pop
imul
sti
popf
inc
(bad)
cmp
loope
scas
int3
shr
jbe
and
dec
mov
ins
clc
dec
pusha
pop
xchg
pop
xor
js
add
dec
mov
and
adc
shr
repnz
fcomp
movs
mov
adc
jp
inc
rol
adc
and
jmp
push
ficom
loop
(bad)
scas
not
fstp
pop
aam
xchg
or
xchg
jmp
vmovsldup
xchg
out
mov
fs
jo
das
(bad)
push
inc
sti
mov
in
out
push
xlat
not
aas
int3
clc
in
imul
popf
pop
jae
stc
mov
add
lods
pop
xchg
and
cld
adc
ror
and
into
aam
pop
aam
adc
xchg
pop
mov
jne
mov
inc
dec
mov
shr
(bad)
lahf
mov
mov
mov
call
lahf
adc
jle
lahf
int3
popf
ret
idiv
pop
sbb
in
les
mov
dec
jl
mov
dec
out
push
iret
dec
xchg
shr
test
div
lds
cs
in
jmp
jecxz
loopne
into
repnz
xor
rol
arpl
jae
or
and
mov
pop
sahf
pop
sar
sub
pop
into
aam
das
icebp
or
add
jb
and
cmp
jnp
in
sar
nop
mov
sti
sub
loope
add
(bad)
or
into
clc
cdq
nop
cmp
pop
movs
push
leave
inc
call
mov
add
inc
adc
test
cmc
inc
push
mov
sub
stos
xchg
or
dec
inc
cmp
and
out
mov
(bad)
ror
pop
aas
mov
inc
scas
mov
in
mov
int3
std
aaa
jle
xchg
jge
pop
pop
(bad)
(bad)
jno
inc
sub
jo
cli
cmps
xchg
lea
and
push
ror
es
pop
mov
cmc
xor
ret
and
mov
int
sub
inc
stos
and
push
repnz
push
sub
ret
sbb
push
mov
xor
dec
mov
std
adc
outs
popf
xchg
mov
xchg
cmps
cmps
mov
loope
es
add
aad
ret
rol
stos
dec
scas
rcl
sbb
jecxz
cmp
call
out
or
adc
mov
push
cmps
sbb
inc
mov
sbb
xchg
daa
adc
loope
retf
adc
mov
push
mov
pop
xlat
jge
ficom
shr
pop
lea
fsubr
xchg
imul
and
out
mov
push
jns
mov
jns
hlt
dec
(bad)
sub
pop
push
stc
cdq
retf
arpl
repnz
imul
popf
test
pop
xor
xlat
outs
stos
icebp
test
in
push
pop
or
push
stc
pop
mov
imul
lds
lahf
(bad)
fcomip
and
(bad)
mov
adc
push
mov
ror
mov
push
xor
enter
out
push
push
(bad)
fwait
mov
icebp
sbb
mov
add
mov
add
push
jbe
ins
loopne
xor
mov
lock
mov
mov
xor
and
mov
out
out
pop
js
xor
test
bound
cmps
cmp
inc
xchg
push
fsub
jp
lods
popf
div
stc
loop
or
adc
adc
xchg
daa
and
cmp
mov
fs
les
lahf
aaa
inc
test
lock
aam
push
push
ja
mov
sbb
jl
and
xor
jmp
stos
sbb
je
sub
cs
or
stc
hlt
rcl
inc
scas
or
arpl
shr
nop
or
stos
xor
imul
adc
push
jecxz
sbb
repnz
cmp
add
dec
js
mov
adc
ins
sub
leave
aad
adc
lock
push
mov
mov
inc
mov
mov
shl
pop
mov
ficom
bound
jp
test
sub
sbb
or
(bad)
xor
jg
inc
ficom
aaa
popa
hlt
call
xor
sahf
add
inc
mov
in
std
push
shl
or
pop
pop
or
mov
int
(bad)
push
(bad)
fimul
(bad)
lds
lods
stc
out
sbb
xor
fadd
imul
stos
dec
enter
inc
jbe
fwait
jne
call
add
adc
xchg
push
jecxz
push
cdq
push
fs
lock
dec
push
leave
ins
popa
mov
dec
das
push
ins
popf
ins
(bad)
dec
push
pop
jae
repz
ret
jae
out
jge
sbb
stc
int3
add
adc
pop
cs
out
lahf
push
xchg
mov
int3
jle
iret
rcl
sbb
stos
fistp
nop
dec
and
rcl
imul
adc
in
pop
cmp
ins
frstor
out
ror
and
in
xlat
or
dec
lock
adc
and
pop
inc
scas
cmps
push
mov
enter
mov
inc
jge
jecxz
sbb
inc
aaa
mov
fdivr
lock
dec
push
pop
cmp
mov
arpl
(bad)
adc
fbld
les
cwde
in
dec
sar
test
adc
mov
dec
pop
retf
ret
inc
cmp
mov
outs
and
fisubr
jb
retf
pop
dec
and
and
xchg
jmp
scas
dec
pop
daa
mov
xlat
repz
(bad)
mov
scas
jnp
cwde
mov
or
xchg
pop
add
scas
imul
leave
lea
test
sub
sbb
or
enter
test
jmp
stos
mov
jae
mov
lock
inc
add
xchg
cmp
fnsave
cwde
dec
mov
std
movs
js
inc
xlat
jnp
inc
jle
inc
cmp
retf
lahf
ja
lds
mov
addr16
loopne
pop
sbb
xchg
icebp
and
lods
mov
jmp
movs
jne
ins
test
fcomp
out
mov
call
xor
(bad)
inc
(bad)
nop
add
ja
xchg
add
sahf
lods
out
ror
jb
popf
ss
mov
mov
repz
idiv
mov
mov
and
cmps
sub
and
cmp
sbb
fidivr
cwde
add
jecxz
test
hlt
pop
mov
out
repz
dec
mul
xlat
sub
mov
xchg
rcl
mov
mov
or
and
ss
or
xor
mov
inc
mov
ins
inc
imul
cmp
(bad)
sti
(bad)
test
ins
add
dec
arpl
(bad)
sti
add
inc
cdq
test
(bad)
stos
test
sub
jnp
cmp
mul
xchg
sbb
push
shr
pop
loopne
and
out
or
aaa
jae
jl
cmp
pop
(bad)
retf
fld
inc
aad
movs
mov
pop
push
adc
ins
mov
(bad)
cmp
arpl
fld
or
push
inc
cld
dec
aas
mov
xchg
and
ins
sub
in
pop
cld
or
(bad)
mov
push
stos
add
push
or
nop
retf
popf
and
jne
fisttp
push
adc
in
or
repnz
loope
mov
test
push
adc
xor
adc
mov
pop
std
sub
lock
pushf
das
bound
mov
arpl
mov
scas
das
adc
and
aad
mov
dec
gs
icebp
daa
inc
pusha
cmps
pop
push
jl
pop
sub
or
daa
enter
xor
leave
xor
xchg
movs
pushf
sbb
push
int3
ss
stc
cmp
pop
pop
xchg
mov
lods
ret
shl
jmp
xchg
and
int
xor
cs
(bad)
adc
mov
pop
sbb
add
test
loopne
cmp
jmp
in
adc
imul
outs
daa
sti
mov
stc
pop
jmp
inc
lahf
mov
into
mov
xchg
cs
inc
aas
je
arpl
pop
popf
pop
push
fiadd
rcl
dec
call
cdq
push
movs
sub
stos
cmp
dec
mov
ja
lods
add
enter
push
shr
cmp
add
mov
sub
movs
ds
inc
mov
les
jle
sahf
mov
jno
mov
mov
sbb
inc
inc
jb
inc
sub
or
dec
leave
mov
xchg
(bad)
mov
xchg
or
outs
cmp
pop
in
sbb
outs
xchg
mov
and
and
out
icebp
xchg
aaa
sub
in
inc
sbb
sbb
(bad)
add
mov
or
xchg
jns
aad
div
imul
adc
bound
stc
xchg
shr
jl
lea
ret
test
popf
mov
sbb
cmp
es
test
cli
in
push
lods
xchg
lods
aas
dec
pop
push
movs
mov
xor
pop
pop
ret
jg
int3
xor
sub
add
int
add
retf
je
push
mov
ret
jle
sbb
and
repz
(bad)
mov
(bad)
ins
mov
test
pop
xor
jmp
imul
cmc
mov
push
mov
or
lods
push
mov
fisub
stc
mov
sbb
jmp
sub
inc
movs
and
loope
sub
mov
addr16
loop
fld
xor
push
pusha
fnsave
or
jmp
push
jb
fidiv
mov
popf
mov
fcmovnbe
mov
into
xor
cmps
fsubr
pusha
and
shl
cmp
xchg
inc
mov
in
push
or
and
(bad)
mov
jnp
xchg
cmp
lock
jmp
gs
iret
add
icebp
adc
mov
cs
pusha
push
inc
rcl
xor
loop
mov
pop
jge
inc
stos
add
push
and
sbb
out
sub
lods
test
mov
mov
inc
mov
clc
sub
loopne
aam
push
mov
mov
mov
rcr
test
shr
pop
adc
retf
loop
mov
xchg
rep
in
and
jo
dec
xchg
stos
cmc
xor
cmps
mov
cmp
nop
pop
adc
pop
add
push
xor
fild
add
stc
scas
sar
and
les
dec
hlt
outs
aas
nop
gs
aaa
les
in
dec
cmp
js
test
dec
push
pop
mov
adc
and
fidiv
cwde
paddw
arpl
mov
inc
nop
icebp
or
sub
mov
lea
and
fsubr
addr16
call
call
leave
lods
xchg
xchg
std
dec
fprem1
pop
lds
xchg
shr
aam
xchg
lea
movs
in
in
jle
loope
inc
scas
test
call
push
cmp
jge
sub
sub
mov
cmp
loopne
fnstenv
rcr
xor
xor
stc
scas
xlat
repz
mov
jns
jb
in
outs
xchg
dec
mov
pop
mov
sar
jns
add
and
inc
ror
sbb
icebp
xchg
push
cmc
inc
out
out
nop
stc
in
fimul
mov
das
pop
in
xor
mov
mov
movs
daa
retf
xor
mov
jmp
loop
movs
dec
retf
push
jl
shr
(bad)
out
jmp
ja
cdq
adc
mov
add
and
lods
sub
or
sub
iret
push
mov
(bad)
fsubr
fld
mov
cmp
mov
es
into
mov
push
inc
mov
dec
jb
jp
popf
pusha
or
mov
lea
movs
out
iret
mov
xchg
mov
mov
jmp
sub
pop
mov
jmp
popa
cmp
or
cmp
out
push
xchg
shl
aad
imul
das
inc
imul
jb
fsubr
jne
mov
inc
jae
nop
ror
repnz
or
les
sub
lock
int3
(bad)
jnp
xor
inc
jge
imul
daa
push
sbb
loopne
ja
pusha
push
inc
cmp
pusha
xor
fs
mov
cmp
or
(bad)
and
cmps
xchg
jecxz
out
push
jno
and
jl
addr16
icebp
jb
and
call
int
out
popa
add
mov
loope
inc
mov
and
push
repnz
push
rcl
jno
stos
cmp
dec
bound
xor
lods
cli
cli
iret
sbb
cdq
lods
add
outs
dec
sahf
test
lock
mov
or
mov
sub
inc
call
ret
repnz
dec
inc
fdivr
inc
out
push
addr16
repnz
in
clc
rol
dec
xchg
adc
test
mov
idiv
enter
(bad)
jbe
mov
in
cmps
mov
inc
cmps
push
xchg
xor
pop
and
loope
test
(bad)
push
push
clc
fsubr
loope
sub
(bad)
adc
fstp
test
fxsave
add
and
fsubr
and
lods
test
inc
int3
add
xor
mov
je
mov
jo
push
retf
mov
and
adc
ja
jp
cdq
adc
and
aaa
inc
fcmove
lods
jmp
jl
dec
std
dec
aas
mov
mov
sar
cmp
adc
ds
stos
jecxz
adc
aam
pop
cmp
jnp
mov
dec
dec
call
test
push
xchg
les
mov
mov
movs
mov
push
mov
xchg
sub
and
xchg
xchg
fsubrp
aad
lea
out
repz
mov
pop
or
jmp
scas
xchg
les
stos
push
push
addr16
test
or
(bad)
cmps
sbb
mov
add
pusha
adc
sbb
mov
adc
ins
daa
psubd
imul
shl
mov
repz
gs
mov
mov
shl
sub
xchg
or
xor
mov
xor
xchg
xor
push
cmps
adc
int3
jmp
(bad)
mov
lahf
pusha
sbb
test
jbe
pop
call
(bad)
(bad)
adc
pop
aad
fdiv
sbb
repz
sbb
lahf
push
lods
xor
mov
dec
ja
sub
mov
xchg
inc
ret
or
ins
imul
and
xor
sub
xabort
loopne
retf
push
mov
in
sti
daa
rcr
sbb
sar
sbb
add
cmp
sbb
adc
dec
in
mov
dec
sub
stos
(bad)
je
cmps
mov
div
dec
nop
repz
test
aaa
fisttp
movs
das
loop
cmps
adc
cmps
jnp
test
or
mov
test
sub
cmp
cwde
mov
jg
pop
jnp
add
and
retf
(bad)
lods
add
xchg
cdq
mov
imul
pop
inc
xchg
inc
cs
jbe
push
lahf
xchg
pusha
sbb
adc
add
cli
jle
inc
outs
adc
sub
in
or
adc
fs
jae
iret
adc
mov
nop
jnp
mov
sub
mov
push
add
imul
loop
js
test
int3
jno
cld
fs
out
push
push
movs
pushf
adc
pop
(bad)
pushf
pop
fisubr
jg
cdq
add
in
(bad)
jb
(bad)
jg
nop
idiv
dec
imul
cmps
dec
test
test
test
inc
sar
aaa
imul
adc
mov
dec
xor
sbb
cmp
push
adc
lahf
ins
int3
adc
bound
shr
push
and
test
jno
sahf
mov
jl
test
fsubr
or
dec
adc
test
push
lahf
dec
ret
xor
(bad)
int
daa
in
aam
je
enter
inc
(bad)
jbe
cwde
not
or
add
dec
js
scas
push
pop
daa
dec
cmc
fidiv
loopne
inc
jp
mov
repz
(bad)
outs
sub
push
mov
js
cmp
push
fcom
daa
out
sti
pop
jg
push
xor
mov
push
cmp
jb
add
jae
test
jb
and
aad
sbb
cdq
or
(bad)
sbb
dec
dec
adc
xor
call
call
jbe
mov
mov
rsm
popf
sub
fstp
mov
xor
mov
xchg
dec
xchg
test
inc
cmp
lea
cmps
sub
std
mov
xor
shr
(bad)
adc
dec
rol
xchg
arpl
add
mov
jl
push
push
add
mov
ret
mov
popf
in
fst
cmp
and
xchg
xor
in
(bad)
test
adc
xchg
add
pop
or
add
outs
(bad)
jbe
pop
ja
or
push
mov
popf
into
mov
pop
mov
inc
pop
js
gs
les
ret
rcl
sbb
or
cmps
fmulp
mov
stc
(bad)
jle
inc
retf
jmp
add
jmp
in
sti
and
clc
push
pop
jmp
pop
aas
ror
mov
rol
rcl
imul
inc
mov
retf
scas
jae
or
sar
add
pop
aaa
nop
fsubr
into
sti
cdq
ss
dec
(bad)
dec
mov
hlt
xchg
ins
cli
add
sbb
jge
or
jmp
mov
cmc
ss
lahf
push
jge
mov
out
mov
fs
arpl
cmc
xchg
fnstenv
xor
jb
fsubr
cmp
xchg
outs
lea
test
pushf
jne
sbb
es
leave
ins
pop
push
in
lahf
arpl
std
cmp
outs
sub
jp
lea
cmp
call
mov
inc
rcr
mov
lea
dec
or
aad
adc
sti
imul
repnz
pop
dec
jp
test
push
sar
aaa
mov
add
stos
nop
das
pop
or
retf
test
pop
ficomp
sbb
neg
into
pop
jne
(bad)
test
enter
cmps
outs
adc
shl
stos
pop
and
stc
lods
sub
scas
xor
or
xor
mov
std
sbb
pushf
in
jne
shr
adc
xchg
add
adc
inc
test
fsub
fdivr
mov
or
outs
sbb
mov
loop
cwde
and
sar
hlt
adc
ret
imul
dec
pop
lea
movs
shr
or
jnp
in
and
pusha
dec
leave
push
aam
ss
out
jae
fwait
mov
(bad)
and
sti
sub
cmps
xor
int3
call
add
mov
fisttp
sti
cmp
xchg
cmps
mov
push
scas
retf
mov
xchg
pusha
clc
sub
jl
dec
pusha
pop
cli
sbb
imul
pusha
jmp
xor
push
dec
xchg
adc
sub
jae
pop
ret
push
ins
into
in
icebp
repnz
cs
jmp
cmp
pop
push
(bad)
retf
pop
add
jne
mov
and
stc
aam
or
inc
fisttp
inc
bound
cmp
or
mov
cmp
mov
ret
mov
sub
or
out
sbb
inc
jl
mov
pop
stos
add
adc
xor
stos
mov
je
and
mov
and
(bad)
int
ret
mov
cmp
lahf
(bad)
mov
test
repz
inc
xlat
mov
stc
pop
xchg
mov
hlt
movs
pop
mov
xchg
or
inc
jbe
retf
arpl
dec
mov
jbe
sub
test
repz
sbb
ret
pushf
push
psubsw
and
or
test
mov
cmp
lahf
loopne
shl
mov
xchg
cwde
rcl
xchg
sub
jmp
dec
push
pusha
add
jne
addr16
and
sub
inc
test
add
inc
pushf
xchg
mov
mov
aas
pop
retf
mov
into
rol
push
add
popa
mov
arpl
xor
enter
fwait
jno
jnp
sbb
fsubr
in
add
push
imul
mov
pop
out
dec
mov
movs
rcr
or
jge
call
push
enter
add
fst
sub
xor
rcr
(bad)
mov
loopne
das
es
cs
das
adc
ja
test
repz
cmp
xor
xchg
pop
mov
(bad)
ficom
xchg
leave
inc
(bad)
scas
sbb
push
mov
sbb
xor
mov
pop
adc
jns
int
mov
inc
int3
test
(bad)
xchg
cdq
sbb
test
push
or
mov
stos
mov
mov
stos
pop
fldcw
sub
inc
add
sbb
jmp
xor
frstor
or
pop
aas
movs
or
sub
test
cli
mov
cmps
stc
into
pop
or
fisubr
jae
sub
and
mov
scas
retf
inc
test
pop
mov
mov
outs
aam
call
sub
xlat
pop
cmps
pop
xor
(bad)
jecxz
add
sbb
test
or
daa
scas
test
aas
rol
std
shr
ins
fstp
adc
and
(bad)
inc
xchg
jecxz
in
mov
jge
sti
jp
pop
imul
or
push
rol
inc
and
ins
xchg
dec
repnz
mov
pop
dec
sbb
scas
(bad)
jg
inc
nop
jns
jl
xchg
shr
into
cmp
rol
mov
adc
enter
loop
mov
dec
std
dec
xchg
shl
mov
imul
adc
out
aad
and
pusha
cmp
les
out
mov
sbb
aad
pop
dec
movs
cmp
dec
sti
enter
mov
inc
add
retf
adc
je
mov
mov
mov
movs
mov
push
in
ja
jno
xchg
mov
std
sub
(bad)
pop
(bad)
xor
iret
ins
jo
daa
mov
xchg
call
dec
mov
das
mov
cdq
cmp
dec
shl
push
sahf
xchg
sbb
sbb
mov
sbb
mov
je
push
imul
adc
ret
dec
xor
inc
iret
adc
xchg
adc
stc
pop
ins
aad
mov
dec
cmp
enterw
jle
data16
mov
xor
jg
inc
in
arpl
jmp
inc
add
outs
(bad)
sti
out
sub
or
je
out
idiv
jns
ja
gs
add
outs
mov
jno
adc
ret
movs
or
and
js
retf
jmp
jne
ds
inc
scas
test
mov
pop
cmps
sbb
pop
dec
mov
mov
stos
shr
mov
and
nop
jno
clc
in
daa
xchg
sbb
jl
sbb
push
pop
js
lock
push
sub
cld
mov
dec
movs
xlat
xchg
test
pop
pop
xor
xor
out
psubsw
lods
daa
bound
mov
iret
mov
cmps
out
bound
add
sub
add
(bad)
hlt
sbb
(bad)
adc
cmp
push
pop
out
mov
mov
sbb
ins
xor
mov
int
sbb
das
in
xchg
ficom
jb
inc
add
mov
(bad)
cdq
ss
push
int3
xor
pushf
addr16
mov
es
ds
cmp
cs
xchg
stos
mov
xchg
jne
in
jecxz
test
repnz
and
leave
lods
(bad)
inc
cmc
call
xchg
cmps
push
push
dec
push
or
(bad)
mov
and
mov
xor
adc
pop
cmps
cmp
push
fldenv
cmp
fmul
out
jmp
shl
jne
sbb
xchg
nop
sub
sahf
and
je
(bad)
push
iret
aad
mov
(bad)
adc
movs
mov
cmp
nop
adc
xchg
retf
adc
xor
in
xchg
adc
dec
mov
je
arpl
cmps
nop
ret
in
jno
clc
cli
sub
mov
mov
ins
sub
sbb
xor
push
sbb
daa
xchg
sbb
adc
and
jbe
div
data16
xchg
fcomip
jae
push
pushf
rcr
or
push
fmul
mov
retf
dec
repz
lahf
cmp
fimul
sub
dec
ins
call
or
or
test
push
(bad)
xchg
jo
dec
dec
inc
bound
cmp
xor
xchg
fdivr
cmp
lods
dec
pop
jle
cdq
adc
(bad)
into
fsubr
loopne
pop
popf
and
fadd
retf
xor
and
or
add
lahf
int3
addr16
daa
popf
(bad)
dec
jb
retf
sub
movs
out
mov
push
out
pop
lea
adc
out
cmp
push
pop
loopne
pop
push
ins
ins
movs
adc
gs
sub
imul
and
jno
sbb
js
pop
cmp
call
jb
lods
lahf
outs
dec
dec
push
inc
push
pop
aas
mov
dec
repnz
dec
push
mov
aam
xlat
jo
jae
dec
adc
and
adc
xor
mov
ds
xor
push
and
add
push
pushf
push
lea
pop
scas
fld
mul
inc
scas
cdq
in
pushf
arpl
pop
popa
shr
(bad)
jns
jecxz
hlt
pop
and
repnz
mov
mov
adc
xchg
mov
sbb
popa
sahf
bound
mov
push
jns
xor
out
(bad)
sub
pop
test
push
shr
cmp
fadd
cld
jne
mov
test
enter
(bad)
sbb
cmp
push
ins
fldcw
movs
setp
cmp
out
dec
rcr
out
or
sbb
sbb
enter
mov
push
mov
and
dec
inc
int3
aaa
sbb
ret
jnp
scas
pop
ds
outs
mov
fisttp
pop
mov
cli
retf
xor
mov
cmc
ds
sub
mov
repz
loop
or
imul
push
dec
mov
inc
into
mov
push
mov
xchg
mov
cli
xchg
or
xlat
mov
int3
mov
test
dec
xor
sbb
je
push
pop
mov
push
add
sbb
das
push
(bad)
adc
aam
rol
xor
mov
inc
in
xor
shl
push
adc
fdiv
in
clc
out
and
mov
scas
jmp
mov
in
adc
mov
jns
test
dec
add
aaa
inc
repz
cdq
mov
mov
add
pop
lock
mov
loopne
lea
push
push
call
jb
test
xlat
sar
xlat
cmp
mov
sub
aam
ror
out
stc
push
mov
ret
es
dec
out
test
or
mov
ins
mov
and
outs
cmp
inc
imul
or
fadd
jb
mov
neg
xor
sbb
int3
lods
pop
ins
test
out
shl
shl
daa
jp
jl
cwde
div
jmp
push
push
(bad)
int
test
xchg
jb
rcl
or
in
outs
loop
xor
fst
test
sbb
jnp
add
cdq
mov
mov
or
je
jl
push
in
dec
sti
jecxz
ja
pop
sub
dec
repnz
sbb
cwde
mov
out
aam
push
cmps
rcl
sub
aas
cmp
pusha
fisub
or
dec
push
cmps
cli
or
mov
or
loope
rcl
je
movs
lahf
and
pop
sbb
mov
xchg
jl
addr16
xchg
push
dec
les
repnz
mov
inc
push
add
xor
cmpxchg
jne
add
fwait
xor
in
popf
dec
or
aam
mov
sub
inc
adc
int3
push
sub
mov
lock
(bad)
mov
xor
sub
icebp
or
push
jl
ror
aaa
shl
in
mov
add
ins
pop
ins
addr16
jne
xchg
mov
and
mov
ret
out
shr
inc
add
repnz
rcl
scas
sub
pop
retf
mov
jae
mov
jae
lods
add
ja
push
inc
or
sub
push
add
out
mov
adc
mov
hlt
mov
call
and
icebp
imul
lods
je
inc
dec
push
cwde
cld
ja
jb
push
or
(bad)
xor
or
mov
das
loope
call
and
add
xchg
dec
mov
loope
leave
and
or
push
add
out
stc
fwait
into
and
stc
cmc
(bad)
iret
mov
jae
push
xlat
inc
retf
push
and
retf
jmp
jmp
xor
mov
ds
sbb
loope
dec
aam
out
xor
mov
adc
mov
sub
mov
inc
mov
mov
sub
es
dec
mov
ins
outs
jo
pop
and
mov
dec
and
stos
jp
loopne
inc
call
mov
xchg
aaa
retf
lock
scas
int3
imul
pop
ja
mov
xor
push
sti
sub
dec
pusha
sub
cs
pop
mov
ins
and
mov
adc
mov
xor
ss
jmp
and
adc
cwde
fldcw
gs
(bad)
mov
test
jge
movs
lea
mov
outs
pop
mov
add
cmp
or
sti
stc
(bad)
mov
pop
push
test
pop
jp
fisubr
xchg
push
inc
sahf
push
retf
inc
arpl
mov
jecxz
inc
jle
inc
repz
add
shr
aad
mov
into
cld
loopne
sub
xchg
push
mov
addr16
add
push
aaa
loope
mov
inc
add
add
add
nop
add
xchg
add
cld
clc
fdivrp
mov
stos
imul
ins
ins
aam
sahf
js
fisttp
je
aas
fcomp
leave
(bad)
push
nop
xchg
sti
lods
cmp
xor
cli
jns
pop
fdivr
push
pusha
mov
xchg
push
adc
add
in
je
push
lods
inc
loopne
setbe
xchg
inc
xor
movs
leave
out
aam
sub
aad
retf
push
cmp
or
and
(bad)
sub
lds
jmp
inc
cmp
repz
and
icebp
rcl
pop
rol
ja
inc
mov
xchg
mov
adc
cmp
add
imul
ret
js
or
mov
idiv
in
(bad)
and
(bad)
push
cdq
push
add
dec
or
pop
ins
adc
or
int
lahf
mov
push
fstp
(bad)
cmp
fsub
fnsave
push
xlat
mov
in
lahf
pop
jo
xchg
jb
mov
cmp
shr
mov
sbb
pop
pop
inc
test
mov
pop
xor
scas
inc
ret
scas
sbb
outs
mov
cmps
and
push
mul
xor
mov
fst
push
ins
push
scas
sbb
or
int3
push
push
sub
jne
dec
sub
mov
add
aaa
and
inc
test
xlat
mov
in
cmps
pop
adc
mov
jge
jmp
xor
jno
test
and
inc
and
push
dec
jp
cmp
xor
pop
xor
pop
or
xor
mov
jns
and
clc
pop
in
out
jne
inc
mov
mov
popa
push
inc
mov
(bad)
fisub
addr16
and
popf
push
inc
mov
or
mov
add
mov
cmps
mov
lahf
cmp
adc
aas
pop
nop
jg
out
cs
pushf
dec
sti
fs
adc
imul
jne
xor
jns
pop
mov
jne
push
jmp
cli
fiadd
mov
loop
ror
cmp
pop
cmp
ins
sar
ret
jmp
cld
sbb
xor
aam
push
setge
out
mov
mov
sub
cmps
mov
adc
loope
ins
jo
add
scas
sbb
sti
dec
adc
imul
cld
cmp
test
stos
push
in
add
das
cmps
xchg
mov
pop
xchg
cmp
dec
ret
pusha
rcl
sub
add
jbe
mov
mov
sbb
mov
push
cmp
jge
xchg
dec
call
(bad)
hlt
cdq
cmp
shl
js
cmp
retf
in
ror
and
ret
into
mov
(bad)
fwait
dec
mov
pusha
sbb
scas
xor
mov
mov
sbb
add
xchg
dec
(bad)
pop
add
cs
outs
leave
dec
stc
stos
push
inc
fcom
jle
push
aad
mov
xchg
cdq
scas
xchg
loopne
cmp
add
sbb
pop
(bad)
xor
mov
dec
push
inc
hlt
loop
test
fs
jl
mov
inc
inc
cmp
inc
ja
aas
nop
pop
pop
fisubr
pop
sbb
push
retf
xor
push
dec
mov
jp
retf
fistp
in
mov
(bad)
inc
jmp
sub
lods
sar
fadd
sub
nop
pop
pop
pop
mov
add
ins
mov
(bad)
out
jb
push
imul
fisub
add
test
sub
xlat
fld
dec
inc
xchg
xlat
pop
jp
xor
icebp
je
and
jl
jo
ins
ds
movs
fld
push
jge
mov
mov
popf
sbb
jno
dec
mov
xchg
movs
cwde
es
pop
out
dec
adc
je
push
mov
mov
push
pop
into
fnstsw
xchg
xchg
enter
out
rcr
cmp
push
or
ficomp
shr
dec
stos
sbb
add
pop
shl
mov
dec
push
sub
cmps
sbb
jbe
mov
mov
xor
stos
pop
mov
mov
scas
aas
pop
jnp
and
ret
push
cmp
rcl
push
movs
fsub
xor
ja
clc
loopne
cmp
ret
xor
jnp
lods
cdq
cmp
push
xchg
xchg
call
adc
sbb
mov
cmc
or
test
(bad)
mov
inc
xchg
(bad)
loopne
(bad)
adc
mov
or
mov
xchg
test
shl
repnz
lahf
in
jmp
sub
stc
pop
dec
add
pop
cmp
je
and
sbb
call
sbb
retf
inc
daa
lock
pop
fist
push
movs
cmc
(bad)
cld
xor
jge
call
lods
push
(bad)
fist
jecxz
jns
cmp
popa
in
test
data16
jmp
test
xchg
retf
rcr
jns
sub
add
mov
fwait
in
fnsave
retf
jl
fcomip
xchg
(bad)
pop
js
push
icebp
retf
mov
(bad)
mov
int
outs
adc
mov
push
ror
xlat
ret
imul
and
or
inc
sub
mov
lock
push
push
(bad)
fistp
movs
outs
push
mov
int3
cmp
sub
push
fldenv
sbb
ret
inc
pusha
pusha
mov
loop
shl
adc
push
jle
shl
adc
rcl
add
sar
xchg
dec
aad
adc
sbb
test
and
(bad)
xchg
out
sub
jmp
cmps
leave
pushf
out
push
dec
jl
mov
nop
inc
pop
adc
fild
mov
in
cmp
dec
scas
cmp
retf
call
dec
shl
sub
adc
add
xor
repnz
das
pusha
inc
mov
mov
stos
gs
jnp
lahf
dec
out
inc
mov
out
lahf
scas
aas
movs
out
adc
mov
repnz
shl
push
aad
outs
inc
nop
aaa
ds
scas
inc
or
pop
jg
xchg
test
jp
and
push
jmp
sbb
movs
sub
(bad)
cli
sub
sbb
jg
adc
idiv
out
jno
cmp
outs
out
test
xchg
pushw
fisttp
add
or
jle
cmps
inc
push
sub
ret
je
xchg
movs
icebp
cmc
lods
mov
mov
pop
out
mov
mov
leave
sbb
pop
hlt
enter
retf
pop
inc
xchg
sbb
shl
xor
ret
das
not
rol
fiadd
pop
jbe
and
dec
add
jno
sub
xchg
mov
mov
mov
out
xor
call
std
inc
(bad)
sub
ret
imul
mov
cmp
xchg
or
fwait
inc
cmp
jb
shl
xchg
push
rol
mov
cmps
add
dec
aas
add
repz
out
push
and
inc
jne
(bad)
movs
mov
cli
in
sub
daa
test
dec
adc
add
test
std
sbb
out
xchg
jg
iret
sbb
jmp
jl
adc
je
mov
shr
outs
ins
jbe
xchg
out
cmp
stos
clc
ds
pop
test
shl
fbstp
mov
bound
rol
cmp
fwait
xor
and
mov
mov
sub
stc
push
ja
fisubr
movs
ss
pusha
test
test
fwait
mov
sahf
outs
call
outs
push
mov
fwait
dec
or
mov
loop
aas
retf
jp
mov
arpl
mov
fimul
xchg
not
push
ret
adc
lea
push
pop
mov
pushf
sbb
jmp
inc
movs
or
movs
popa
cld
push
repz
cdq
jecxz
adc
add
inc
mov
cmp
xchg
stos
mov
adc
movs
lea
out
popa
bound
mov
les
test
jmp
scas
adc
loop
mov
daa
mov
int
iret
nop
pushf
mov
rcl
cmps
add
call
pop
or
ficom
jb
les
mov
mov
loopne
ins
mov
xor
stc
ins
xchg
xchg
leave
call
je
cmp
les
aaa
mov
dec
mov
xchg
popf
shl
xchg
cli
stc
sbb
adc
mov
pop
lods
clc
xchg
mov
jmp
push
add
fisub
out
cwde
xor
movs
xchg
pop
shr
xchg
mov
cmp
adc
mov
add
leave
ins
adc
or
fsubr
mov
sbb
mov
div
scas
mov
iret
pop
and
xor
mov
mov
sub
xor
out
jle
sbb
ins
xor
scas
xlat
mov
mov
pop
xchg
or
inc
mov
add
aad
rep
mov
in
sbb
ja
push
retf
push
hlt
mov
mov
cli
pop
unpcklps
ret
cmp
lods
pop
lahf
addr16
inc
and
lea
shl
dec
push
call
adc
jo
mov
dec
jecxz
sub
push
jno
and
cmps
ds
sbb
frstor
mov
mov
pop
bound
sti
mov
in
pop
mov
clc
in
(bad)
or
aaa
push
gs
or
dec
dec
mov
pop
mov
pop
mov
fisub
les
iret
test
rcr
mov
mov
cmp
nop
xor
push
shr
mov
call
jmp
push
aam
ja
mov
mov
dec
dec
enter
add
gs
shr
mov
inc
push
fistp
sub
lock
imul
ret
mov
and
out
xchg
push
sar
inc
mov
pusha
movs
outs
repnz
scas
or
nop
push
cwde
cs
jp
inc
clc
(bad)
adc
fld
pop
test
jecxz
test
pop
inc
sar
ss
jmp
mov
aas
jecxz
sbb
cmp
jb
out
aad
sbb
(bad)
and
das
jns
mov
rol
or
cmc
sbb
inc
pop
and
iret
in
je
cmps
int
sbb
imul
add
sub
test
or
xor
xor
aaa
cmps
sbb
ret
xchg
into
aad
movs
add
dec
cs
scas
xor
test
imul
fisubr
data16
or
cmps
outs
mov
sar
mov
jno
leave
cmp
enter
cdq
les
cmp
jbe
call
jl
mov
ds
(bad)
shr
cmp
xor
mov
popf
mov
sti
dec
aas
(bad)
push
ds
scas
lods
xchg
cmp
jnp
retf
jmp
retf
or
rcl
ja
sub
pop
(bad)
(bad)
ret
loop
xor
push
or
dec
jge
sbb
xchg
or
cld
shl
cs
into
dec
pop
mov
dec
icebp
scas
and
mov
pushf
mov
stc
es
jo
cs
inc
cmp
fcom
fdivp
sbb
sbb
push
push
nop
adc
daa
stos
push
iret
pusha
lods
sbb
scas
xor
xchg
pop
retf
cmp
inc
jle
push
retf
rcr
lods
jl
pop
push
adc
or
mov
fisttp
scas
scas
xchg
cmc
sub
or
aas
pop
loop
fimul
mul
cli
push
dec
shr
cwde
cdq
add
mov
xlat
xor
jae
add
aas
frstor
push
inc
hlt
cmp
fist
popf
cmps
movs
add
rcl
jl
ja
inc
retf
movs
js
je
push
out
mov
push
xor
xchg
das
and
std
cmp
in
jg
sbb
imul
retf
ja
xchg
and
jge
pop
retf
jmp
push
lds
pop
sub
jne
cmc
imul
jecxz
adc
mov
outs
test
lock
jnp
pop
lea
scas
hlt
mov
jbe
sub
mov
test
ins
add
test
xor
cdq
jmp
jmp
jmp
pop
push
or
pop
leave
and
cmp
fcmovb
pop
or
les
xchg
inc
dec
mov
jo
push
ret
out
in
jl
retf
xchg
fs
enter
inc
enter
add
and
fldcw
in
pop
retf
mov
add
mov
into
leave
pushf
cmp
cmc
push
sub
mov
cmp
sub
shl
in
xor
into
out
pop
fidiv
sbb
mov
xor
pop
repnz
lods
inc
adc
pop
icebp
dec
movs
stos
imul
daa
outs
push
and
fcomp
sbb
add
sub
fnsave
inc
mov
mov
sbb
sbb
popa
push
pop
mov
ins
dec
(bad)
fldcw
imul
cmc
pushf
(bad)
mov
pop
loopne
dec
dec
push
imul
(bad)
mov
and
jae
dec
sbb
test
mov
sbb
or
xchg
stc
cmp
jecxz
retf
mov
xor
push
in
out
cmp
push
mov
mov
hlt
mov
inc
jb
(bad)
mov
dec
shl
lods
js
mov
js
in
cmp
sub
ds
sbb
in
xchg
cdq
int3
and
call
and
call
loop
jmp
sbb
sbb
cmp
stos
dec
push
test
pop
jo
fisub
les
add
sub
cld
(bad)
jmp
xchg
adc
popf
rcl
test
fwait
xor
sub
add
xchg
mov
and
dec
jp
inc
mov
or
ds
push
or
js
ds
lods
fdivp
repnz
xor
rol
cmp
les
out
mov
add
lock
les
inc
inc
jae
mov
mov
xor
psubd
popa
xor
outs
imul
lahf
(bad)
bound
loop
adc
dec
mov
sbb
cmp
lods
xchg
fbld
aaa
xchg
dec
cs
retf
fadd
retf
sti
outs
stos
jmp
loop
push
xchg
or
movs
pop
sub
mov
stc
fs
mov
push
ss
hlt
(bad)
js
xor
popf
and
mul
inc
scas
cmps
dec
fsubrp
in
das
xchg
cmp
fs
ret
lods
(bad)
data16
sbb
fistp
les
sahf
in
jns
and
stos
pop
pop
(bad)
nop
es
jg
xor
mov
cmp
jmp
jne
pop
dec
push
sbb
mov
fs
fs
int
ins
mov
aas
pop
lds
dec
push
leave
add
loopne
out
mov
fsubr
and
mov
jecxz
xor
fnstcw
mov
gs
ins
cmps
mov
jl
out
pop
popa
mov
push
call
(bad)
sub
mov
hlt
and
lods
out
in
sub
inc
and
push
jle
ret
push
jp
mov
push
stos
aad
push
mov
cmp
ret
das
fisub
add
jmp
and
mov
jns
mov
in
aam
(bad)
jo
jnp
out
cdq
adc
bound
mov
add
ins
jmp
ds
loopne
setp
mov
sub
xlat
dec
rol
ins
out
out
sub
pop
jae
mov
out
add
mov
and
mov
sbb
dec
xor
popa
sub
fdiv
mov
pop
inc
dec
(bad)
in
aaa
dec
pop
sub
fld
sbb
or
lods
mov
lea
hlt
out
or
das
das
aas
sub
pop
int3
pop
repz
xchg
clc
fist
in
add
cmp
pushf
rcr
lahf
cs
jo
ja
cli
pop
jmp
fwait
std
inc
cmc
sub
jmp
iret
mov
xor
xor
push
js
out
test
test
ror
jb
jns
or
dec
call
mov
mov
inc
jne
test
je
and
mul
rcr
adc
out
push
sub
clc
jge
pop
in
call
out
mov
pop
fisubr
add
fdiv
(bad)
daa
xchg
cmps
in
out
inc
sub
push
loope
push
lea
loop
inc
push
sti
loope
mov
test
ror
mov
xchg
imul
mov
add
add
ins
push
mov
ret
sbb
scas
and
cmps
inc
stos
std
push
mov
xchg
(bad)
(bad)
pop
test
pop
movs
aad
jge
retf
rcl
lods
or
inc
and
and
retf
gs
imul
xchg
fistp
xchg
popf
cmc
lods
mov
sub
out
mov
cmp
push
(bad)
in
retf
dec
mov
test
movups
xchg
inc
lods
outs
pop
jne
xchg
sahf
out
mov
out
ins
inc
cld
sbb
adc
mov
cdq
out
jl
mov
pop
lods
xchg
pop
xchg
add
mov
and
scas
in
xbegin
lds
and
sbb
imul
add
mov
nop
adc
xchg
inc
leave
add
shl
mov
jns
inc
out
jmp
stos
cmps
mov
loope
sar
mov
and
xchg
mov
adc
or
mov
and
repnz
jbe
and
adc
cmc
shl
cwde
addr16
dec
push
nop
sub
cmps
cmp
jge
iret
mov
in
mov
ins
not
pop
(bad)
dec
stc
push
push
push
add
xchg
retf
(bad)
setl
mov
stc
out
fwait
jmp
or
(bad)
jne
ror
add
loope
cld
or
out
js
in
das
fidiv
cmps
xchg
cmp
ins
ja
fidiv
mov
int3
(bad)
jmp
test
push
add
adc
sub
jbe
scas
push
test
cmp
dec
sbb
mov
loopne
xor
dec
mov
or
add
add
cmp
dec
push
cmps
cmp
push
and
fidivr
jo
add
mov
cwde
fs
jmp
add
scas
dec
sub
je
test
std
pop
push
xchg
call
in
pop
mov
sub
lods
movs
aaa
loop
fistp
(bad)
mov
stos
jae
sbb
mov
sbb
inc
addr16
sti
gs
iret
mov
push
loop
sqrtps
test
(bad)
cli
xchg
adc
or
fidivr
js
fidivr
mov
fcomp
inc
or
rcl
and
fisub
pop
xchg
and
inc
mov
mov
inc
adc
inc
fistp
xor
push
mov
xchg
dec
ds
js
or
shl
movs
lds
xchg
cmp
sub
mov
test
dec
lahf
jg
push
ins
fist
cwde
mov
sbb
jecxz
pushf
jmp
shr
push
inc
jmp
icebp
out
sub
xchg
push
gs
sub
mov
out
out
pop
(bad)
fcomp
movs
jmp
inc
push
(bad)
data16
ret
jmp
mov
inc
mov
xor
test
push
cmps
mov
sahf
mov
jecxz
ss
ins
push
sbb
add
add
es
adc
jg
test
cmps
mov
into
adc
mov
lahf
mov
loop
dec
int3
add
rcr
mov
adc
sub
mov
push
push
pusha
loope
aas
gs
pop
ds
cmp
not
inc
sti
pop
xlat
xor
ror
int3
cdq
lods
nop
mov
fcomp
xlat
jae
inc
mov
test
test
arpl
cmps
enter
fst
(bad)
fistp
cmps
cdq
enter
cmp
data16
(bad)
hlt
cmps
mov
fcmove
adc
sbb
addr16
loop
lea
cmps
xor
or
or
sbb
dec
test
and
fwait
and
xor
lds
data16
inc
ret
fs
les
test
imul
inc
push
pushf
arpl
xor
dec
inc
sar
or
push
jae
sub
cli
fs
xor
add
lods
test
jp
cmc
ds
inc
repnz
inc
xchg
or
mov
outs
call
cs
mov
jno
pmulhw
jo
js
sbb
xchg
ss
out
xor
cmp
js
push
setno
rcr
loopne
mov
fstp
pop
stc
repnz
sub
mov
jle
rcr
xchg
rcr
jmp
inc
aad
mov
pop
or
movs
dec
sub
out
retf
imul
pop
dec
shr
inc
adc
jo
mov
mov
std
loop
movs
out
and
(bad)
dec
push
adc
ret
aam
fisub
sbb
jnp
jg
push
aas
dec
or
int
inc
xor
outs
adc
or
pop
lock
pop
ins
pop
test
jmp
mov
sub
add
clc
sti
aam
(bad)
mov
(bad)
and
mov
out
out
adc
mov
pop
mov
jmp
sahf
iret
pop
push
mov
shl
jg
xor
inc
mov
rcl
fnstsw
aas
retf
jnp
neg
cdq
cwde
int3
pop
sti
mov
int3
adc
inc
into
pop
sub
ds
stos
cmps
xor
xchg
dec
and
mov
dec
lods
(bad)
test
push
in
push
xor
jns
test
jns
push
dec
ins
jecxz
std
xchg
push
cmps
xor
mov
lock
inc
aam
in
cmp
sbb
pop
fcomp
pop
cmp
mov
(bad)
imul
cmp
outs
ja
daa
out
bound
int3
sbb
mov
inc
popf
xchg
push
das
adc
retf
out
mul
scas
push
inc
ss
mov
push
inc
aad
scas
push
cmp
or
jo
cmp
fldenv
imul
movs
sub
xor
lock
clc
out
mov
into
pop
cmps
xor
addr16
push
mov
sbb
cmp
out
cs
xor
je
or
ss
into
push
rol
xlat
lock
push
fiadd
jmp
fst
aaa
aad
xor
mov
sub
imul
push
and
inc
cmp
jecxz
das
push
mov
int3
cmps
push
adc
xor
movs
ins
jo
loopne
add
xchg
ins
jge
cld
hlt
out
test
xchg
cmp
jge
mov
sbb
dec
cmps
mov
mov
cmp
jg
lahf
or
or
shl
jle
inc
in
icebp
push
mov
push
mov
loope
mov
adc
mov
scas
sbb
imul
lods
and
dec
jno
lds
jo
(bad)
(bad)
mov
rcl
sbb
mov
and
into
and
cld
in
(bad)
pop
shl
inc
aad
popa
adc
or
aam
pop
cmp
ja
jecxz
aaa
loope
mov
inc
adc
aaa
ret
fs
stos
daa
ret
mov
pop
xchg
repz
pop
sbb
jmp
sti
test
fistp
xor
dec
inc
sub
mov
mov
ds
jb
ds
dec
lea
sbb
aaa
mov
icebp
imul
mov
xchg
cs
daa
adc
in
cmp
dec
jns
clc
in
adc
add
hlt
cmp
mov
in
adc
lock
in
cmc
ins
les
sbb
pop
mov
fsub
cld
mov
imul
sar
sub
mov
cmps
inc
inc
xchg
cmp
mov
xchg
jns
mov
out
f2xm1
xchg
jmp
mov
pop
push
stc
mov
add
fistp
fcomi
mov
adc
mov
scas
outs
popa
mov
clc
loope
sub
add
dec
cwde
xchg
xlat
test
arpl
and
scas
jmp
sbb
movs
mov
mov
add
iret
and
nop
mov
xor
jmp
push
frstor
sub
push
adc
and
xchg
out
imul
cmp
not
aaa
pop
dec
cmp
xor
sub
jns
xlat
fistp
clc
jecxz
rcr
mov
out
jle
pop
mov
fdivr
mov
xchg
or
push
jno
ret
aam
sbb
xchg
cmp
sub
call
push
(bad)
pushf
fild
pop
loopne
inc
cli
mov
ins
call
inc
add
lock
adc
cs
mov
scas
inc
leave
scas
sti
aad
mov
cli
dec
aam
lahf
jmp
and
jb
inc
mov
sbb
ja
mov
or
test
mov
int3
ins
stos
cmp
pop
dec
and
ins
lods
mov
pop
dec
fistp
loop
lods
cmp
xchg
mov
scas
(bad)
(bad)
jle
mov
(bad)
cmp
push
in
ds
inc
jns
xor
mov
sub
adc
mov
xor
adc
cwde
dec
mov
clc
pop
lea
inc
inc
mov
(bad)
int
cwde
add
sbb
sub
mov
inc
daa
aaa
mov
nop
retf
lds
lods
cdq
push
fs
mov
je
sub
scas
sub
sub
push
das
adc
mov
cmps
sub
inc
shl
imul
(bad)
xchg
test
push
(bad)
ror
sub
mov
(bad)
loope
rol
fistp
cmp
push
mov
mov
arpl
jns
cmp
sub
es
dec
jp
lock
inc
jnp
jno
add
clc
mov
fsubr
jnp
into
sub
or
mov
stos
push
xchg
or
rcl
imul
jecxz
dec
idiv
ss
mov
not
jae
add
xor
or
scas
sub
and
mov
xchg
sub
dec
je
popa
xchg
xchg
test
pushf
mov
ror
push
adc
hlt
sub
dec
ins
out
dec
inc
adc
mov
pop
fistp
mov
stos
xor
fld
add
mov
adc
xchg
push
xchg
jbe
jo
mov
loopne
inc
mov
xor
add
inc
out
mov
add
sbb
jne
pop
cmp
rol
scas
push
inc
ds
push
inc
fisttp
das
fld
add
inc
ret
xor
cwde
mov
test
sub
cmp
push
sbb
outs
repz
out
xchg
movs
sbb
in
ss
push
add
cmp
mov
inc
xchg
add
out
or
daa
jnp
pop
gs
rol
dec
xchg
mov
mov
icebp
push
les
shl
dec
mov
adc
push
popf
enter
retf
test
push
int
xchg
ins
ins
adc
lea
inc
xchg
sbb
jg
cmp
cmps
(bad)
inc
inc
bound
lods
out
push
mov
mov
fdiv
js
sbb
fld
mov
jecxz
inc
dec
jb
nop
sbb
or
pop
inc
dec
adc
hlt
cs
push
xchg
push
or
cmp
dec
adc
int3
cmp
popf
inc
cmps
jns
retf
loopne
lock
and
aad
jae
jg
push
adc
inc
fnstenv
lock
push
test
cmp
je
fidiv
pop
cmps
add
add
call
sbb
adc
(bad)
push
jmp
jnp
and
jmp
int3
mov
lds
fnstsw
out
jl
popf
cmc
enter
mov
jo
shl
popa
sub
and
or
ins
sbb
ss
ret
mov
mov
dec
repnz
test
and
and
push
mov
xchg
mov
adc
push
xchg
or
(bad)
fnstsw
mov
and
sahf
sbb
cmc
push
sbb
mov
mov
neg
mov
loope
push
xchg
sbb
jne
xor
mov
mov
pop
(bad)
xor
mov
jg
bound
shl
inc
leave
adc
mov
cmp
or
jo
imul
inc
ds
dec
rcl
sub
sar
mov
sub
sub
scas
es
ins
fs
(bad)
cwde
push
xchg
arpl
pop
xor
out
or
mov
cmps
es
or
push
and
mov
xchg
push
mul
cs
clc
cmp
mov
jno
imul
inc
xchg
std
mov
shl
inc
popa
repnz
pop
push
pop
lahf
push
or
inc
dec
adc
jne
cdq
loop
add
adc
aas
ret
cmp
push
xchg
jmp
jecxz
adc
mov
or
retf
stos
cwde
xor
adc
mov
out
jmp
dec
xchg
call
fstp
retf
mov
xchg
mov
mov
cmp
shl
arpl
xor
in
jmp
scas
jb
cmp
pop
mov
xor
shl
xor
loope
nop
mov
popa
sbb
into
repz
mov
jge
lds
pop
xlat
sub
jge
sbb
shr
jl
jp
mov
repnz
enter
mov
test
sub
iret
aas
(bad)
jb
fstp
cwde
push
jne
push
xchg
in
loop
sub
imul
xor
leave
xor
fisttp
cmp
push
jmp
je
mov
inc
or
jg
mov
cli
pop
pop
xor
cmc
outs
mov
xchg
repz
ret
dec
or
loope
jns
in
mov
mov
pop
shl
jmp
jb
mov
add
push
loopne
cmp
dec
mov
dec
fstp
dec
xchg
jae
in
inc
push
push
dec
jle
es
xor
mov
aaa
jb
push
fcmovnu
dec
loop
xor
bound
cdq
jecxz
shl
mov
adc
xchg
sbb
clc
and
xchg
movs
test
in
push
mov
call
cmp
mov
cmp
jb
add
(bad)
mov
jb
inc
dec
mov
inc
jbe
or
in
or
xor
cmps
jne
imul
div
mov
sub
retf
mov
mov
dec
ds
and
fdivr
adc
add
test
and
add
pop
ror
inc
pushf
push
fnstsw
jmp
mov
(bad)
cmc
addr16
mov
ds
ins
or
in
nop
stos
add
xchg
inc
hlt
lods
pop
and
arpl
or
ret
gs
and
push
test
inc
mov
add
mov
hlt
fldcw
pop
lock
cmp
mov
inc
pop
mov
ins
repz
pop
push
ins
xchg
add
aad
movs
seto
mov
lock
fdivrp
out
push
xchg
fsub
jbe
xchg
xlat
jmp
ins
aaa
fs
sub
and
fdiv
adc
cmps
out
iret
jmp
or
mov
sahf
mov
rcl
repnz
stos
add
sbb
mov
inc
test
push
lods
mov
shl
mov
call
xchg
add
and
mov
adc
cs
into
gs
adc
or
std
pusha
loopne
dec
inc
xor
sbb
xchg
inc
adc
rcr
add
sbb
pusha
xchg
les
xlat
dec
out
aaa
sar
jnp
adc
xchg
fwait
mov
jnp
or
pop
push
mov
cmp
fild
add
mov
cli
iret
cmp
out
mov
inc
out
repz
xor
es
lods
xchg
(bad)
fldcw
aas
(bad)
fs
jo
adc
dec
call
fbld
inc
scas
out
mov
or
jecxz
push
push
or
inc
xor
pusha
push
mov
call
dec
dec
add
pop
xor
dec
and
sub
sti
lea
mov
cmps
pop
cdq
or
mov
xor
push
cmps
in
fimul
or
enter
(bad)
imul
inc
inc
(bad)
jmp
dec
sub
inc
mov
mov
jle
push
dec
adc
push
inc
mul
(bad)
pop
adc
ret
sbb
xchg
mov
jp
adc
dec
inc
jo
int3
sahf
repz
and
(bad)
jne
mov
push
rol
inc
imul
add
push
movs
jo
(bad)
and
and
mov
aam
or
xor
add
shl
loop
jge
xchg
mov
xchg
dec
jg
add
test
xor
sti
dec
iret
lahf
retf
aad
sbb
inc
lock
sub
call
retf
sar
cmp
hlt
sub
xchg
in
push
sub
push
daa
cdq
cmps
jno
(bad)
cwde
pushf
cmps
adc
xor
rcl
jmp
popf
mov
sbb
mov
jbe
add
push
push
daa
lods
sub
nop
add
mov
and
dec
out
jmp
sti
mov
outs
rol
sbb
data16
xchg
cli
or
push
push
xchg
sbb
movs
jmp
add
pop
inc
mov
adc
retf
xor
sub
jge
ss
pusha
jge
xlat
dec
jb
jmp
(bad)
or
push
fnstsw
sub
mov
push
arpl
jl
sub
mov
fild
lods
jmp
push
mov
movs
(bad)
xchg
xchg
mov
pop
ins
mov
popa
sysenter
(bad)
xchg
mov
test
js
inc
mov
sbb
rcl
sub
add
rol
fwait
in
add
test
and
imul
inc
fucomp
sbb
mov
scas
sub
inc
aas
jmp
cmp
ficomp
call
mov
andnps
push
push
out
loop
call
into
sbb
adc
stc
dec
and
add
dec
jbe
adc
xor
jle
aam
clc
mov
(bad)
pop
cld
fcom
pop
das
push
mov
sub
je
sbb
xacquire
hlt
adc
mov
icebp
ss
pop
pop
out
fidiv
icebp
or
loop
sbb
in
rcr
xor
retf
fadd
out
sti
pop
add
xchg
rcl
xchg
data16
jns
cmp
pop
jb
adc
sbb
jae
mov
mov
leave
or
cmp
xor
dec
xor
(bad)
call
daa
or
lods
out
rol
and
ret
dec
jbe
sub
cli
mov
in
and
cmp
fdivr
dec
in
fstp
mov
shr
into
(bad)
mov
out
xor
fs
fmul
aas
xor
repz
cmp
mov
jbe
repz
out
sub
loope
ins
pop
mov
mov
mov
leave
xchg
push
xchg
dec
pop
adc
xchg
cdq
lahf
sbb
test
mov
sar
aad
fstp
fisubr
scas
mov
or
out
mov
les
fdivr
sbb
dec
movs
dec
mov
retf
push
add
shr
int3
push
outs
loope
mov
or
mov
inc
or
adc
iret
pop
test
pop
std
es
dec
(bad)
into
push
loope
les
pop
xor
pop
jmp
cmp
push
push
loop
loop
imul
jno
cld
jl
je
cwde
push
xchg
adc
push
sahf
pop
in
(bad)
sbb
xchg
js
sub
cmps
mov
mov
or
push
push
aas
mov
xor
jno
and
fimul
sub
push
out
or
or
pop
jmp
mov
retf
cmp
mov
mov
pusha
push
call
xor
dec
cdq
gs
rsqrtps
or
cmps
test
mov
add
les
jae
data16
xchg
and
shr
loope
push
lock
dec
pop
std
sub
dec
lock
aas
xor
pop
and
mov
in
inc
pop
ins
std
cmp
pop
data16
push
add
repnz
call
jge
in
mov
inc
dec
fnstsw
xor
sar
adc
sti
and
icebp
sub
(bad)
call
mov
(bad)
pusha
movs
inc
mov
cmp
pop
and
cmp
cmp
push
or
sub
xor
(bad)
xchg
jbe
or
xchg
mov
lahf
out
dec
sub
retf
cld
sub
imul
pop
pushf
adc
xchg
aas
adc
xchg
mov
fimul
pop
test
push
std
fisubr
pop
movs
iret
lock
jecxz
inc
sbb
dec
repz
lods
jp
loop
push
pop
xor
int3
enter
add
pop
daa
in
std
jbe
mov
pop
rol
jmp
in
retf
xor
into
mov
mov
jbe
loope
iret
(bad)
mov
mov
sbb
ja
test
mov
dec
aas
xor
xchg
add
pop
xchg
push
push
add
out
xchg
push
cmp
call
mov
mov
ins
mov
test
repnz
fiadd
into
daa
xchg
sub
add
cwde
push
pop
neg
ret
mov
dec
ja
lahf
xchg
mov
movs
pop
inc
(bad)
jbe
or
test
adc
loopne
add
int3
(bad)
or
mov
adc
addr16
mov
mov
es
sbb
ret
(bad)
scas
gs
push
daa
push
in
dec
outs
adc
inc
hlt
pop
cdq
jae
push
aas
cmp
jmp
sbb
(bad)
call
shl
jl
add
and
add
add
sbb
and
fs
sub
aaa
pushf
and
pop
and
xor
mov
scas
aad
ret
add
add
cmp
pushf
inc
in
scas
shr
and
push
ficomp
shr
xchg
sub
mov
fs
mov
mov
sbb
popa
mov
mov
test
adc
xor
adc
shl
nop
cdq
aaa
jb
jge
into
xchg
lock
mov
leave
xor
jge
jnp
push
jl
mov
in
mov
ficomp
imul
clc
mov
mov
jle
sbb
cmp
xor
jb
push
movs
sub
out
push
xchg
and
sub
ret
pushf
fdivr
jnp
sbb
ficom
lar
jo
sbb
push
inc
pop
inc
add
ins
xor
add
imul
cli
jns
dec
push
pop
(bad)
mov
pop
mov
ss
cld
hlt
xlat
xchg
add
in
push
mov
frstor
xor
stos
scas
xor
arpl
xor
ja
jbe
or
iret
movs
jnp
push
cmp
pusha
aaa
xchg
adc
mov
xchg
mov
xchg
out
out
aaa
ror
cmp
or
push
popf
mov
push
(bad)
jb
(bad)
xchg
xor
cwde
sbb
ret
pop
std
mov
dec
aaa
mov
or
and
push
pop
(bad)
and
cwde
test
int3
outs
rol
test
int
mov
call
nop
or
jg
push
xchg
popa
je
fidivr
shl
fwait
pusha
adc
xchg
dec
ss
popf
in
fcom
add
leave
dec
add
sti
xchg
test
jge
sub
mov
jo
xor
outs
shr
shl
jb
inc
dec
pusha
jmp
imul
xchg
in
or
std
cmp
ja
mov
inc
je
and
rol
iret
fidiv
or
jno
xchg
aaa
lods
and
add
test
mov
fst
and
je
les
and
inc
mov
sbb
cmp
lds
mul
test
adc
inc
stos
outs
pop
xor
dec
sbb
jno
retf
sub
mov
cld
cmp
loopne
and
(bad)
mov
or
sbb
cdq
lods
pop
pop
mov
add
in
mov
push
adc
aam
adc
push
xor
and
inc
or
pop
adc
push
mov
cs
xchg
ss
lea
ficomp
xchg
jecxz
aad
mov
dec
inc
popa
sbb
(bad)
and
loope
and
push
and
scas
lock
rol
push
add
es
mov
mov
xor
push
test
mov
cs
pop
xchg
icebp
lahf
mov
jne
rol
cvtdq2ps
inc
leave
int
mov
xchg
fwait
sbb
xchg
add
ret
in
fsubr
mov
rcl
pop
add
inc
jg
mov
dec
xchg
mov
mov
xor
jb
aam
imul
push
or
repz
rol
jns
iret
dec
mov
add
xor
sbb
sub
fcmovne
mul
call
cmp
push
scas
cwde
shl
int3
int3
(bad)
jmp
xchg
imul
mov
jnp
lds
push
int3
or
arpl
or
jbe
std
ficom
mov
or
dec
mov
repnz
addr16
fs
mov
pushf
jg
(bad)
pusha
in
je
aad
out
push
mov
icebp
movs
xchg
inc
jno
cli
mov
cmp
inc
movs
inc
inc
pop
idiv
cmp
leave
stos
push
adc
loopne
jecxz
pop
test
cwde
jno
shl
mov
jbe
(bad)
jno
into
inc
pop
sbb
and
adc
jle
rcl
cmps
mov
pop
adc
xchg
push
push
mov
jb
mov
stos
or
xchg
mov
cmc
mov
xor
cs
dec
hlt
sub
jo
pop
(bad)
jo
jmp
push
jnp
int
or
jb
push
xchg
shl
outs
cmp
enter
test
sub
xrelease
scas
in
xor
arpl
loopne
iret
pop
xchg
xchg
ret
dec
out
fsubr
sub
push
dec
fidiv
inc
inc
pop
ss
lahf
xchg
ds
cmp
ret
adc
inc
and
sahf
(bad)
loopne
and
pop
test
fist
movs
mov
push
out
daa
jecxz
sbb
add
dec
inc
mov
in
je
xchg
aam
inc
sahf
cli
pop
in
sub
je
jmp
add
push
xor
mov
ror
add
adc
call
scas
sahf
dec
js
test
xlat
xchg
imul
push
cld
add
out
imul
push
das
push
outs
int
cmp
or
stos
xor
mov
fs
arpl
stc
outs
sub
jns
shl
push
in
jecxz
or
pusha
cmc
mov
ins
adc
jle
test
sti
jbe
or
inc
mov
cld
ror
sar
fsubr
test
dec
add
sub
dec
fs
cmp
ficomp
dec
icebp
mov
dec
addr16
mov
xchg
pop
mov
lds
push
add
mov
lods
daa
mov
xchg
mov
fcomi
fild
cdq
jns
jmp
movs
(bad)
mov
sub
and
ficom
sbb
mov
mov
or
jg
pop
adc
dec
retf
jns
fdiv
pop
push
test
pusha
jae
neg
popa
ss
fwait
cli
pop
or
out
push
test
pop
std
mov
test
lds
aas
pop
shl
push
xchg
jle
xor
sub
pop
jmp
xchg
inc
call
sti
(bad)
xor
shl
dec
dec
(bad)
retf
fadd
pop
push
adc
movs
scas
test
cmp
scas
or
pop
fwait
aad
add
and
and
movs
mov
ja
mov
jle
jecxz
idiv
lds
mov
movs
cmp
push
push
sub
loope
shr
stos
mov
sti
xor
shr
sar
(bad)
retf
out
je
clc
pop
enter
add
stos
cmps
in
outs
je
fcomp
imul
pop
xor
retf
xchg
aam
adc
push
lods
ins
push
mov
inc
adc
push
mov
or
fcmovu
lods
cmps
rol
fst
mov
pop
mov
movs
shl
int
adc
mov
push
dec
jmp
xchg
outs
xchg
lods
mov
inc
scas
add
pop
cmp
loope
dec
push
sbb
cs
hlt
mov
iret
xchg
outs
sti
fst
fdivp
pushf
ror
inc
sbb
mov
xor
push
dec
mov
into
stc
push
retf
aaa
mov
mov
nop
inc
push
popf
or
mov
jp
iret
xor
in
aaa
xchg
retf
inc
xor
xchg
ss
jb
(bad)
sar
mov
mov
jne
int3
xchg
sub
iretw
and
inc
neg
aaa
jae
sub
bound
scas
mov
gs
aaa
jno
jbe
push
cmp
jne
(bad)
push
(bad)
retf
adc
push
scas
jo
es
not
jbe
imul
outs
aas
jecxz
pop
leave
stc
push
fs
sub
push
daa
xor
int
call
les
dec
stos
jnp
int3
or
inc
enter
pop
mov
and
xor
xor
cmp
leave
fidiv
in
repz
xchg
popa
cmp
int
call
mov
jbe
ja
xchg
mov
xchg
call
pushf
pop
sub
xchg
sub
popa
sub
jecxz
pushf
sbb
mov
push
jmp
cwde
jns
bound
dec
xor
xchg
inc
push
(bad)
xor
add
and
adc
ins
add
and
adc
aad
(bad)
dec
cwde
sbb
adc
dec
jno
or
cmp
cld
push
das
popa
rcl
(bad)
out
xchg
mov
aad
clc
enter
jg
in
stc
in
adc
jge
test
mov
xchg
call
and
xchg
mov
cmp
in
jno
je
inc
ins
retf
test
add
push
sub
jmp
jae
popf
adc
ins
leave
push
inc
gs
mov
ins
aaa
mov
push
jle
and
ins
hlt
or
dec
outs
mov
lock
int3
inc
stc
mov
mov
and
mov
inc
cmp
sub
mov
movs
sbb
add
xchg
jle
push
mov
in
imul
add
into
and
repz
mov
gs
or
hlt
sub
xchg
aas
mov
adc
and
push
pushf
addr16
sub
sub
in
sub
outs
adc
xor
add
aad
fcmovu
pop
aas
mov
aam
sbb
fmul
xor
ficomp
xor
jbe
retf
sub
ret
inc
adc
dec
out
int3
popa
fimul
and
repnz
in
mov
(bad)
mov
or
movs
mov
xor
jmp
or
dec
sar
sbb
lods
add
ret
(bad)
inc
adc
sbb
add
add
adc
call
dec
stos
div
retf
clc
cs
(bad)
test
lods
sub
lods
push
or
xchg
or
aad
daa
jo
and
fcmovnu
fisttp
ja
icebp
inc
and
push
sbb
aas
hlt
xor
popf
push
mov
cs
mov
pop
js
push
jbe
rcl
push
sub
int
cmps
sub
xchg
sbb
jno
or
mov
inc
in
mov
xlat
adc
js
cmp
ss
mov
rcr
in
(bad)
aas
jmp
popa
push
out
cmps
sbb
xchg
adc
dec
movs
inc
test
je
mov
cmps
ins
sbb
sahf
retf
outs
(bad)
mov
push
mov
stc
lds
mov
mov
int
dec
stos
stos
(bad)
fcmovnbe
test
jge
mov
add
movs
jns
sub
(bad)
or
sub
aam
fs
push
cmp
inc
test
mov
mov
(bad)
and
sub
test
shl
sub
adc
mov
fcomi
mov
jmp
pop
push
shl
jne
lods
into
ret
mov
or
retf
test
xchg
dec
fs
jo
push
add
nop
xor
mov
mov
in
cmp
inc
sbb
into
data16
push
fwait
cmp
xchg
outs
push
cmp
pop
pop
rcl
int
jmp
dec
or
jnp
add
repnz
sub
sub
sahf
(bad)
rol
sbb
in
adc
es
jae
lock
(bad)
or
adc
pop
push
gs
and
sub
leave
jle
pushf
scas
or
cmps
sub
xchg
les
arpl
xchg
aas
sar
xor
sahf
or
pop
ror
aaa
or
jbe
xor
scas
and
gs
xor
and
js
jle
jg
(bad)
push
push
enter
imul
hlt
pusha
xchg
push
adc
xlat
mov
loopne
push
mov
popa
dec
push
pop
mov
cmp
lds
xlat
scas
xchg
add
xor
jne
aaa
pusha
cmp
dec
sub
jb
cld
retf
cmp
mov
stos
sbb
dec
push
loopne
adc
push
jno
arpl
outs
sbb
jnp
push
cmc
iret
add
stc
sbb
loope
mov
push
enter
arpl
rcr
or
stos
outs
dec
push
retf
jp
cmps
(bad)
and
inc
repnz
push
mov
loop
repz
fadd
movs
data16
outs
sub
mov
sub
pop
push
and
push
(bad)
mov
xchg
dec
loopne
push
xor
lock
repz
loope
adc
mov
addr16
div
fisubr
jno
ret
imul
pop
xchg
(bad)
(bad)
sub
mov
dec
into
dec
push
jmp
inc
(bad)
popa
adc
xchg
call
sub
stos
pop
mov
push
int3
dec
lock
loop
ins
faddp
loopne
jg
jmp
pop
inc
mov
icebp
div
dec
adc
test
cmp
push
ret
mov
mov
mov
ret
icebp
mov
pop
or
add
and
or
and
jg
inc
ja
ss
sti
mov
iret
mov
daa
pop
pop
xchg
push
icebp
lods
loop
fldenv
mov
js
into
xchg
adc
fucomp
je
xchg
outs
push
inc
fbld
xor
jb
fcomp
dec
push
mov
data16
movups
test
lahf
sbb
std
pop
cmc
(bad)
xor
or
and
outs
imul
(bad)
das
gs
pop
addr16
push
ja
imul
clc
aam
push
shr
adc
xchg
adc
int
cmps
xchg
mov
cmp
pop
es
adc
jecxz
lock
pushf
pop
mov
mov
cmps
outs
push
daa
sub
fsubrp
fmul
int
mov
cli
popa
cli
add
mov
retf
push
and
in
bound
add
(bad)
call
inc
das
fs
adc
and
push
sti
out
dec
mov
xor
adc
das
mov
push
and
aad
fwait
icebp
popf
sub
push
mov
ret
jnp
retf
xchg
xchg
jecxz
popa
adc
dec
pminub
xlat
push
jo
ds
xchg
sub
mov
dec
pusha
mov
mov
(bad)
hlt
sub
inc
bound
xor
mov
cmp
sub
div
mov
imul
repnz
sbb
cs
mov
cwde
jno
(bad)
hlt
mov
mov
mov
add
mov
js
pop
push
mov
and
in
rcr
out
xor
cli
cli
(bad)
stos
inc
iret
in
and
outs
or
rcl
in
cwde
cmc
icebp
and
sub
out
inc
gs
jle
cmc
popa
dec
repz
mov
pop
mov
movs
mov
out
popf
in
add
pop
mov
add
ss
push
addr16
inc
rol
xor
mov
and
rcl
dec
dec
scas
sbb
sub
dec
pop
imul
nop
imul
pop
push
scas
mov
cli
cmp
popa
das
in
pushf
jno
fwait
out
cwde
push
mov
pusha
enter
mov
sub
ficomp
test
pop
xor
add
(bad)
xchg
int
and
mov
or
and
out
outs
xor
mov
xor
adc
push
lods
les
push
in
test
pushf
cs
mov
ins
sahf
js
loop
iret
cmps
pop
mov
push
int
xor
fcmove
pop
mul
pop
rcl
mov
push
fcmovb
imul
stos
jbe
inc
xor
ja
xchg
es
inc
inc
mov
xchg
cmps
mov
push
fwait
ret
and
push
sub
arpl
das
jmp
inc
sub
dec
mov
out
mov
jp
cli
leave
adc
clc
cmps
mov
aad
mov
aas
sub
imul
je
jmp
push
imul
fadd
or
bound
ret
xchg
fs
fwait
out
cmp
fimul
cmp
jnp
mov
out
ja
mov
jg
pushf
aas
call
das
dec
pop
and
add
pop
cmps
jmp
add
mov
aas
push
inc
sub
mov
cmp
sbb
dec
test
scas
cdq
add
xchg
xor
stos
cs
into
les
and
(bad)
fmul
cmp
cdq
dec
nop
pusha
mov
addr16
xchg
fld
xor
cmps
adc
adc
dec
inc
aas
mov
push
dec
sub
adc
lea
sub
cmp
rol
imul
cwde
pop
mov
mov
retf
clc
xchg
xor
in
rcr
fistp
aaa
sub
in
pop
sub
adc
(bad)
stc
mov
sbb
popa
jmp
pop
jl
lock
or
orps
pushf
mov
xor
xchg
ins
mov
xor
jne
push
out
ins
cmc
ins
lahf
and
sub
retf
cli
into
js
fcomp
mov
xchg
adc
div
jl
push
lods
sbb
or
addr16
fld
push
xlat
jl
xchg
xor
enter
in
push
mov
lds
xor
and
add
xor
leave
pop
icebp
cmp
push
loopne
fs
lods
cmp
sahf
ret
sbb
sub
jb
jbe
(bad)
mov
icebp
out
mov
mov
mov
or
repz
pop
mov
and
pop
clc
arpl
scas
push
cmp
cld
xchg
jp
sbb
add
add
pop
jbe
mov
loope
jle
rol
xchg
stos
pop
jnp
je
mov
mov
test
pop
jns
cli
nop
push
jae
lods
ret
arpl
mov
ret
pop
sub
sbb
out
imul
cmc
sbb
loope
sub
test
gs
mov
mov
icebp
test
mov
aad
cvtps2pi
bound
and
or
ror
mov
les
mov
xchg
jbe
pop
sbb
(bad)
ss
mov
lock
xchg
ret
pop
sub
jp
cmp
lock
sbb
mov
mov
add
in
sub
push
mov
dec
xlat
cli
(bad)
adc
cmp
ret
cdq
or
shr
test
into
xchg
sub
mov
lods
arpl
in
jne
sub
(bad)
add
pop
jp
sub
retf
outs
dec
sub
sbb
inc
stc
push
imul
inc
pop
mov
and
sub
cmp
leavew
or
sub
adc
aas
pop
add
jecxz
adc
xor
mov
sbb
aaa
and
push
xor
jno
xor
jecxz
cmp
push
scas
mov
xor
in
out
xor
cli
mov
in
js
pop
sbb
movs
sub
mov
adc
inc
iret
mov
enter
mov
inc
ins
add
xchg
fist
pop
mov
xchg
retf
dec
int3
les
fwait
cmp
adc
gs
mov
pop
cmp
cli
sbb
mov
mov
jge
dec
mov
rcr
int3
and
or
out
in
and
add
xor
out
(bad)
(bad)
popf
mov
xchg
mov
pop
cmp
call
pop
out
imul
mov
sub
jmp
mov
(bad)
push
leave
mov
add
ret
cwde
nop
movd
sbb
pop
sbb
xchg
push
jecxz
and
mov
call
(bad)
adc
ins
push
mov
outs
inc
xchg
arpl
retf
lahf
cdq
test
movs
sbb
cld
gs
test
fcmove
shr
cmps
sahf
(bad)
retf
jp
fmul
mov
inc
sbb
pushf
mov
mov
fsub
stos
xlat
inc
push
stc
rcl
loope
fs
test
cmp
push
rol
jg
cmp
mov
xchg
pusha
mov
(bad)
xlat
test
xchg
and
scas
cmp
test
xchg
scas
mov
test
aam
hlt
pop
ins
pop
sar
jecxz
(bad)
(bad)
clc
jp
mov
push
inc
sbb
repz
(bad)
int3
push
ja
mov
aad
push
imul
mov
ret
push
loopne
rcl
shl
jge
pushf
mov
inc
cmps
arpl
gs
xchg
xor
sbb
cdq
jmp
adc
ins
shr
fisubr
adc
sub
sub
cmc
xor
xchg
rol
mov
ins
jp
clc
call
xor
shr
(bad)
jmp
ins
sub
(bad)
add
dec
inc
imul
or
mov
cmp
fdivr
movs
cmps
inc
or
pop
test
add
add
adc
adc
sbb
cs
in
mov
call
mov
adc
rcl
mov
rcr
pop
(bad)
out
jl
xchg
movs
movs
mov
mov
pushf
xor
int
ins
lds
in
jp
hlt
jbe
aaa
addr16
shl
or
mov
xor
dec
dec
mov
out
cmp
xchg
pop
pop
cdq
daa
xor
repz
ja
or
rcr
pusha
dec
xor
retf
fs
(bad)
jmp
xchg
add
pop
sub
std
pop
pop
cld
test
cs
aas
adc
and
or
ins
jmp
mov
jg
bndldx
hlt
xchg
test
in
adc
(bad)
adc
or
scas
mov
dec
inc
or
sub
cmp
enter
retf
push
inc
mov
hlt
hlt
xor
imul
mov
sbb
call
xor
outs
sbb
pop
pop
popf
es
add
add
hlt
or
mov
add
lds
test
mov
inc
and
xchg
cmp
add
add
popa
pop
mov
cmps
jp
xchg
fst
out
jo
cs
scas
push
cdq
jp
adc
pushf
repnz
jp
lea
sub
fwait
into
xor
imul
(bad)
lea
cli
inc
cmp
push
aam
jmp
pop
inc
jbe
xchg
xchg
mov
pop
mul
pop
dec
in
mov
nop
cmp
sbb
cmp
inc
movs
xchg
pop
in
fcmovbe
aas
pushf
pop
xchg
and
mov
jne
cmp
(bad)
daa
and
push
sbb
bound
ins
test
jecxz
mov
in
mov
ins
dec
(bad)
cmp
and
scas
push
rcl
mov
or
fidiv
dec
pop
cmp
mov
sbb
or
xlat
xchg
push
movs
push
pop
imul
pop
xor
xor
inc
in
cld
shr
out
mov
push
jb
stos
jne
add
fisub
xchg
pop
sub
icebp
dec
rcl
jae
enter
or
or
ret
sub
add
test
xchg
mov
cmp
jne
sub
or
ret
mov
dec
mov
push
pop
mov
(bad)
out
pop
scas
and
xrelease
xchg
outs
pop
je
cli
lods
imul
in
(bad)
in
jecxz
xlat
or
imul
aad
jp
jmp
pop
jo
mov
jle
scas
pushf
bound
in
jp
jge
xchg
ss
mov
ja
cs
mov
rcr
xchg
pushf
das
in
in
xchg
(bad)
fld
les
je
pop
jno
dec
cwde
xchg
cmp
xchg
sub
xchg
adc
cmp
pushf
jle
pop
into
cwde
xchg
xchg
xchg
dec
push
nop
xchg
push
dec
dec
lahf
test
sti
jbe
sbb
jle
fsubr
and
add
pop
push
jmp
ins
rcr
stc
shr
call
and
out
mov
inc
ret
icebp
pextrw
push
enter
inc
xor
adc
adc
pop
cmp
mov
fstp
xchg
pop
push
mov
and
add
(bad)
mov
out
or
aam
(bad)
fdivr
nop
jne
mul
repz
jmp
mov
(bad)
mov
xchg
sub
stos
leave
ret
cmps
inc
mov
inc
jbe
jl
adc
mov
dec
sbb
iret
fidivr
jl
(bad)
cmp
xchg
rol
or
fist
sbb
repnz
xchg
loope
ins
sub
shl
and
cmp
dec
imul
pop
or
pop
stos
xchg
ffree
loop
inc
jnp
jbe
int
int3
(bad)
rcr
and
inc
ret
(bad)
mov
or
jle
xchg
popa
call
sbb
hlt
jecxz
and
imul
or
jp
jl
movs
dec
mov
in
cmp
xor
xchg
ins
std
cs
repz
(bad)
ja
xchg
xor
cmp
sahf
sbb
jae
adc
into
pop
sbb
dec
scas
mov
jo
fstp
xchg
in
cmc
mov
cwde
iret
(bad)
jg
repz
daa
bound
pop
jae
fld
jmp
jle
fsub
mov
(bad)
mov
mov
add
inc
lods
fwait
pop
inc
(bad)
cmp
iret
(bad)
lea
cmps
or
out
cmps
jp
adc
jo
jecxz
mov
hlt
repnz
xor
jbe
in
movs
jl
add
sbb
pop
ficom
(bad)
jne
pcmpgtb
xor
jl
in
ret
int3
mov
pop
adc
jecxz
jecxz
test
mov
das
dec
mov
jae
test
sbb
or
js
leave
mov
rol
adc
fwait
sub
pop
inc
push
js
jecxz
jne
jge
adc
loop
sbb
dec
mov
lods
inc
shr
cld
jns
pop
iret
aas
adc
adc
mov
mov
sub
and
aaa
shl
push
xor
mov
in
mov
cli
mov
icebp
lods
xor
cmps
jb
pop
adc
sub
inc
jmp
or
std
rcr
in
adc
inc
pop
adc
inc
jmp
dec
mov
les
loopne
pop
in
int
xor
test
cs
jle
add
xchg
mov
aas
shr
loopne
dec
jl
pop
(bad)
push
movs
or
dec
add
arpl
sti
jne
js
push
outs
js
pop
call
fwait
sar
scas
xchg
inc
loope
cmp
mov
or
ror
jl
inc
cmps
(bad)
shr
test
mov
jne
mov
fwait
in
inc
loope
fild
int3
idiv
sahf
sbb
push
jge
ins
fwait
bnd
pop
fcmovne
sbb
xor
mov
mov
loopne
dec
gs
dec
fldcw
dec
dec
iret
xor
or
jbe
in
jecxz
adc
xor
push
inc
(bad)
call
mov
int3
jo
cmp
loop
neg
lods
jg
and
xor
hlt
(bad)
sub
bound
pop
lods
outs
cmps
adc
xchg
jo
sub
jns
add
mov
jne
call
xchg
aas
mov
xor
push
jl
adc
pusha
mov
aaa
and
adc
pop
inc
dec
push
call
rcr
inc
adc
adc
fild
sbb
nop
mov
inc
xchg
xor
cmps
shl
push
pop
and
shl
jecxz
movs
or
(bad)
call
inc
xlat
(bad)
std
push
cld
pop
or
xor
jmp
adc
mov
sahf
arpl
int3
and
jge
xlat
and
daa
add
jg
jmp
mov
imul
xor
dec
ins
cmp
mov
cmp
int
in
inc
retf
ins
hlt
mov
and
es
scas
push
fdiv
sbb
pop
imul
sbb
mov
xor
and
cmps
scas
test
retf
mov
adc
xlat
jae
cmp
(bad)
jmp
sbb
ficomp
rol
or
aas
call
jl
pop
mov
jmp
test
mov
pop
shl
imul
or
repz
adc
outs
push
(bad)
mov
adc
cmp
(bad)
jle
jl
stos
xchg
es
inc
and
icebp
pushf
or
bound
hlt
mov
daa
push
cmc
ficomp
pop
hlt
mov
pop
inc
adc
sbb
int
stc
sbb
movs
fidivr
shl
xchg
and
loopne
inc
xlat
fidivr
scas
int
lahf
aad
sub
pop
out
imul
push
loop
cmp
mov
aad
pop
fidiv
cli
inc
nop
sbb
fmul
jnp
or
cmp
cmp
xor
jbe
sub
repz
or
minps
movs
test
mov
xchg
pushf
sbb
push
in
popa
or
clc
in
adc
outs
push
and
out
call
xchg
dec
pop
fcmovb
xchg
ret
jge
add
mov
adc
add
inc
inc
xor
sbb
fs
rcl
xor
push
add
ds
or
xchg
dec
and
jno
mov
cmp
shl
jne
jne
(bad)
pop
and
xchg
add
inc
xchg
jbe
mov
sbb
inc
(bad)
adc
mov
push
fdiv
std
xchg
scas
loopne
sbb
jmp
add
inc
popf
jge
push
sbb
inc
fidiv
daa
mov
adc
xor
shl
je
jbe
pop
fucomp
cmp
bound
xor
add
ret
lahf
in
ins
pop
and
push
jbe
adc
xchg
jle
sub
fistp
in
nop
xor
outs
adc
add
push
mov
jmp
aaa
fist
jle
rep
push
jb
add
cdq
(bad)
dec
mov
movs
ret
fdiv
pushf
cmc
repz
in
jmp
sti
in
or
pop
popf
pop
pop
jmp
gs
clc
xor
jnp
jnp
and
adc
push
adc
das
imul
or
ins
je
xor
shl
test
mov
and
call
mul
xor
pop
inc
mov
or
daa
cmc
retf
sar
int3
loope
xor
mov
cdq
rcr
adc
adc
inc
scas
push
movs
lahf
(bad)
in
or
sub
mov
(bad)
ror
repz
je
mov
inc
cli
scas
jo
test
mov
inc
scas
repnz
add
mov
test
xchg
ror
aam
imul
adc
inc
push
scas
movs
or
sub
adc
mov
cmp
jmp
ss
inc
dec
jle
shr
inc
and
and
push
imul
das
ds
retf
pop
inc
adc
imul
outs
lahf
mov
ror
sar
cmc
dec
iret
int3
inc
(bad)
rol
cmp
mov
cs
jmp
jle
sbb
ret
xor
fcom
inc
mov
mov
mov
stos
sbb
fild
or
leave
arpl
xchg
enter
mov
xchg
add
sti
sub
fidiv
inc
repnz
mov
dec
fcmovnbe
mov
adc
mov
jecxz
mov
sub
push
icebp
and
ja
pusha
push
fptan
push
jmp
in
imul
mov
sbb
retf
gs
addr16
ins
and
scas
outs
xchg
mov
fwait
das
pop
aaa
sbb
cld
xchg
inc
xchg
(bad)
push
test
sub
aaa
pop
mov
test
pop
push
or
mov
add
or
adc
scas
dec
sbb
push
pop
ja
or
or
pop
fistp
xchg
je
mov
popa
jmp
fninit
das
mov
sub
mov
xor
mov
sub
lods
add
fiadd
xor
push
mov
rol
xor
jae
mov
ss
xchg
sbb
sbb
nop
sbb
jg
mov
scas
fisttp
scas
push
xor
add
mov
push
dec
nop
imul
cmps
mov
cld
xlat
mov
dec
gs
cmc
int
and
mov
or
es
cmovbe
movs
aaa
mov
data16
ins
lds
dec
imul
test
push
add
xchg
in
outs
mov
add
nop
lahf
(bad)
fldenv
call
adc
push
mov
push
js
jle
inc
outs
inc
scas
or
fdiv
and
js
les
daa
mov
(bad)
add
shl
dec
mov
cwde
mov
add
test
aad
into
xchg
dec
inc
push
push
xchg
push
in
aam
mov
test
sbb
add
div
jno
xor
cs
push
xor
xor
mov
jle
imul
pusha
adc
push
icebp
xor
add
xor
adc
push
mov
jmp
scas
cmp
retf
shl
jbe
push
(bad)
jo
mov
loop
aad
cmp
loopne
pop
clc
fild
std
in
pop
aas
push
jge
dec
cmps
lods
lods
jae
fidivr
xchg
jmp
out
(bad)
pop
mov
retf
sbb
(bad)
mov
fistp
mov
mov
fcom
ret
jbe
out
mov
pop
shl
dec
mov
out
scas
out
mov
fwait
scas
js
stos
and
aas
inc
jge
bound
mov
test
scas
mov
int3
push
stc
cmps
xor
outs
iret
scas
aaa
fst
pop
push
popa
cmp
fisttp
xchg
mov
pushf
cmp
pop
xor
xchg
ss
lock
push
cld
aaa
jns
mov
(bad)
adc
int
int3
inc
sar
mov
les
dec
pop
stos
movs
xchg
xchg
jb
outs
mov
cwde
in
pusha
outs
(bad)
out
ret
(bad)
mov
pop
or
push
paddb
ret
in
mov
sub
mov
cmc
lea
pop
jl
out
sbb
imul
js
mov
xchg
xor
xchg
xor
mov
and
xchg
jg
repnz
lock
sbb
push
pop
pop
int3
and
mov
fcom
xchg
mov
mov
push
mov
std
loop
cmp
aad
in
mov
push
aam
mov
retf
inc
sub
test
ret
cmps
adc
fwait
js
sub
rol
icebp
cli
cmp
fs
dec
push
sbb
xchg
retf
xchg
call
aad
fist
ss
xlat
mov
shr
mov
push
xor
gs
jge
pop
dec
mov
xchg
ret
retf
mov
xchg
jo
push
xor
bound
xor
(bad)
sub
arpl
mov
or
adc
lahf
leave
jge
fcmovbe
lods
mov
add
cmp
sub
mov
outs
leave
repz
and
leave
cmp
popa
fild
sbb
dec
push
aas
jge
add
repnz
add
shl
call
push
mov
sub
out
arpl
out
push
jmp
lods
inc
push
out
dec
mov
enter
dec
push
or
scas
dec
popf
sub
ss
test
cs
sets
pop
fiadd
dec
repnz
mov
imul
mov
mov
je
mov
inc
stos
adc
add
xlat
loopne
std
clc
jl
in
jp
cmp
mov
test
xchg
(bad)
pop
cmps
xor
mov
add
dec
call
popa
mov
lahf
cmp
push
(bad)
sar
push
data16
pop
mov
test
mov
cmp
sbb
test
shl
cld
xchg
lahf
or
pushf
push
(bad)
cmp
xchg
movs
scas
mov
loope
mov
stos
adc
test
cmp
and
js
iret
(bad)
lahf
mov
les
fsub
dec
xor
movs
jge
imul
adc
jge
repnz
xchg
jb
in
jge
gs
imul
sub
out
xchg
mov
jmp
or
mov
xchg
mov
pop
inc
mov
test
and
out
cmp
adc
push
sub
mov
dec
imul
dec
mov
fs
pushf
jmp
inc
jmp
(bad)
mov
mov
xor
and
imul
adc
pop
stos
jne
jbe
cvttps2pi
test
std
div
dec
cmp
dec
cmp
xlat
xor
pop
pop
aad
add
push
fisub
ss
cs
mov
retf
xlat
fidivr
scas
jmp
dec
cmps
sub
outs
call
data16
jp
mov
push
aas
xor
add
outs
sbb
mov
pusha
or
cmp
jecxz
es
adc
jg
jg
push
sar
or
inc
popa
cmp
shr
mov
push
xor
push
arpl
and
loope
loop
out
bound
jg
adc
rcr
jle
lea
mov
or
jo
or
scas
icebp
daa
(bad)
cmps
push
call
inc
sub
mov
scas
rcl
push
lea
jo
add
sar
xchg
out
push
jns
or
add
adc
xor
es
mov
mov
sub
scas
cmp
inc
add
je
daa
(bad)
dec
mov
or
lea
pop
mov
std
js
and
dec
pop
stos
retf
fs
das
sbb
aam
inc
sbb
lods
inc
test
mov
or
cmp
pop
push
xor
or
pop
mov
sbb
adc
repz
stc
aaa
add
pushf
cmps
xchg
pop
cs
push
mov
int3
jo
(bad)
cmps
cmp
pop
xor
test
iret
sahf
test
imul
aam
jno
stos
inc
(bad)
sbb
push
bound
fisubr
imul
stos
sbb
loop
jno
push
jmp
mov
sub
jp
xchg
mov
ins
push
fst
xor
push
sar
push
add
in
and
in
mov
ret
jg
jmp
jg
dec
adc
inc
in
jo
sar
push
sub
xor
sub
sar
mov
and
ins
repz
icebp
outs
(bad)
aad
xor
mov
hlt
js
mov
ins
push
xchg
lock
shr
int
cmp
mov
das
out
jg
or
mov
mov
mov
loope
xlat
sbb
mov
push
push
adc
arpl
cwde
popa
sub
pushf
sbb
out
aas
(bad)
adc
pop
mov
sbb
add
stc
rcl
and
xlat
dec
ss
xchg
rcl
xor
aam
or
pop
fild
jl
sub
retf
jns
add
mov
add
mov
or
imul
or
cmp
scas
jge
xor
lods
push
retf
cmp
shl
cmp
outs
jmp
shl
out
and
inc
mov
add
cmps
es
dec
loop
int3
cs
add
lahf
sbb
cmps
xor
sar
je
imul
pop
(bad)
test
push
daa
test
(bad)
mov
test
ss
mov
bound
scas
or
mov
bound
aad
fdivr
and
xchg
stc
cmp
ds
pusha
js
mov
sub
mov
jmp
mov
push
jae
ret
lods
jb
leave
jl
jno
mov
xor
sub
cmp
jmp
mov
in
clc
pop
or
mov
sub
and
pop
or
push
call
lea
inc
lock
and
mov
out
xlat
lods
sub
sbb
ds
sub
jae
aam
push
cmp
fprem
sahf
push
mov
jle
cdq
adc
jae
test
sub
outs
dec
jmp
gs
xor
std
fcomp
sub
scas
pop
rcl
mov
cmps
int
lea
loop
mov
jnp
shl
push
push
mov
jns
or
or
sti
movs
mov
add
stos
repz
repnz
sbb
sar
xor
push
out
push
inc
fbld
push
les
mov
or
or
or
add
xchg
fnstenv
shl
out
enter
test
jmp
mov
rep
retf
push
jmp
mov
lods
dec
scas
gs
and
jle
xchg
mov
sub
mov
jecxz
std
lods
in
or
out
imul
int3
shl
sbb
rol
jmp
enter
aas
mov
mov
adc
xor
jecxz
or
ror
cmp
adc
cld
xlat
mov
adc
jle
loope
fmul
rol
push
std
inc
xchg
mov
mov
mov
jbe
(bad)
jecxz
aam
cdq
adc
jo
add
xchg
lods
pop
jb
cdq
jp
inc
mov
dec
enter
sti
jae
(bad)
xchg
mov
or
pop
mov
inc
mov
mov
das
test
mov
js
sbb
stos
(bad)
int3
pop
dec
sub
movs
out
xor
or
ret
xchg
inc
inc
xchg
and
push
sbb
and
lds
mov
cmp
retf
dec
sub
sbb
adc
push
mov
push
mov
mov
mov
inc
popa
stc
cmps
xlat
dec
shl
mov
popa
test
gs
jp
or
fnstenv
out
sub
call
ret
sub
pop
jbe
jae
inc
test
movs
leave
lahf
sub
aas
mov
stos
clc
push
in
out
(bad)
xor
(bad)
je
dec
int
sub
sbb
shl
inc
cwde
adc
mov
or
pop
or
aaa
inc
jp
mov
xchg
and
push
add
jno
pop
retf
push
outs
ret
mov
movs
div
in
mov
inc
ss
mov
iret
sub
pop
xlat
mov
jg
or
cmps
call
sub
add
xchg
int3
xor
cs
and
push
sbb
das
push
in
fnstsw
jge
pop
xor
jbe
clc
xchg
lea
push
mov
sbb
pop
adc
in
sub
(bad)
jecxz
jg
repz
adc
mov
and
and
cmp
mov
mov
jne
push
xchg
(bad)
adc
sar
push
and
outs
or
push
pop
xor
xlat
push
xor
pop
sub
cmp
inc
ins
sub
repz
fdivrp
add
pop
add
mov
add
xchg
fld
xchg
push
adc
inc
mov
in
jmp
pop
fdiv
out
data16
sub
mov
data16
xor
(bad)
out
ror
xor
in
enter
inc
loop
js
or
mov
and
imul
xchg
push
leave
shl
fwait
cmp
(bad)
scas
loopne
sub
out
mov
mov
jnp
mov
mov
xchg
in
mov
mov
inc
test
ds
jne
lahf
jp
add
push
mov
fcos
inc
ficomp
sbb
inc
addr16
movs
cmp
jp
scas
mov
into
out
pushf
imul
mov
dec
jne
(bad)
jmp
les
out
jne
hlt
inc
mov
dec
movs
xchg
scas
bnd
bound
xchg
mov
lea
sbb
sub
push
and
mov
scas
test
lods
cs
in
rcl
push
je
add
jne
fdivr
mov
pop
xchg
adc
cmp
or
cmp
das
out
int3
inc
inc
cmc
sbb
jmp
les
pop
xor
std
ficomp
out
bound
add
(bad)
sub
add
jbe
xor
mov
push
lods
jo
adc
or
xchg
xchg
pop
stos
popf
outs
in
jno
enter
daa
js
pop
inc
pop
je
inc
mov
add
cmp
sbb
adc
adc
clc
sub
add
cli
push
fidivr
pop
mov
mov
push
or
mov
jbe
pusha
(bad)
in
pusha
xchg
jns
push
ds
in
add
mov
daa
ds
shl
pop
pop
ret
and
scas
call
lock
lahf
push
adc
std
je
or
stc
xor
fadd
test
jmp
adc
in
mov
fbstp
pop
mov
test
dec
enter
jns
inc
dec
aas
das
pop
pop
cmp
xchg
(bad)
shr
mov
shl
xor
mov
jbe
fdiv
repnz
and
mov
rcl
xchg
cmp
jae
mov
push
add
mov
jmp
adc
lods
outs
mov
inc
cli
stos
mov
jmp
pop
(bad)
dec
loope
clc
jmp
cmp
ficom
adc
das
sar
mov
inc
hlt
mov
mov
add
add
js
pop
mov
mov
mov
xor
adc
mov
stos
xchg
(bad)
shl
and
pop
push
add
imul
lods
cld
dec
add
dec
push
sbb
icebp
fdiv
imul
(bad)
loop
repz
ins
xchg
dec
adc
or
push
imul
out
test
fdivr
addr16
rol
repnz
jne
dec
test
jb
xchg
aaa
mov
xor
cmp
cmc
into
or
add
jne
mov
cmp
out
jae
adc
adc
or
xor
xor
dec
pop
or
repnz
icebp
mov
pop
or
aaa
sysexit
nop
push
ins
add
jecxz
xor
out
std
adc
sbb
outs
gs
inc
push
cmp
arpl
add
or
in
in
jno
fisubr
and
pusha
mov
das
xchg
fdiv
push
pop
mov
scas
xchg
loopne
mov
mov
movs
mov
jo
loop
sub
nop
cmp
lahf
add
lock
aas
pop
ja
push
test
sbb
jnp
jne
push
xor
inc
xchg
and
sbb
or
hlt
cmp
sti
imul
jmp
dec
sbb
sub
cmp
out
shr
or
inc
jb
mov
pop
jp
push
or
mov
sub
cmps
xor
jno
pop
xchg
or
mov
adc
fprem
rcr
movs
lds
vpsllq
gs
pop
jns
jp
xchg
cld
jge
lods
fs
cmps
sub
hlt
add
sbb
outs
push
add
mov
push
inc
sbb
cmp
or
inc
dec
jg
mov
call
loopne
mul
mov
xchg
je
add
add
xor
cmp
gs
jmp
jmp
pop
push
in
mov
mov
shr
sar
nop
mov
test
pop
adc
inc
sub
int3
gs
inc
pop
and
mov
push
mov
dec
test
js
enter
dec
ret
sub
shl
dec
fmul
xor
pop
hlt
mov
pop
or
mov
or
xor
adc
iret
cmp
movs
xor
ret
xor
out
jge
repnz
mov
adc
adc
iret
jb
dec
sti
pop
push
loopne
push
jb
pop
popa
xor
jge
fmul
xor
jge
rcl
(bad)
push
out
outs
cmc
inc
out
inc
dec
dec
mov
ficom
cmp
add
xchg
jo
sahf
cmp
inc
pop
push
test
repnz
(bad)
popa
inc
cli
pop
mov
sti
into
push
scas
push
jns
addr16
cld
lock
test
fild
adc
xchg
or
add
mov
and
rol
test
jo
jmp
cli
and
pop
sub
push
aad
xchg
into
mov
pop
push
retf
sbb
add
and
outs
mov
and
dec
or
mov
mov
jmp
xor
sbb
rcr
test
mov
(bad)
nop
lds
xchg
xchg
stc
push
mov
lock
in
and
dec
sub
mov
and
ds
arpl
push
xchg
std
cmp
cmps
data16
jo
jmp
test
fwait
and
mov
and
mov
mov
sbb
inc
sub
iret
mov
mov
shl
movs
repnz
mov
sti
(bad)
js
cmp
repz
and
mov
jo
add
aam
in
daa
mov
test
cmp
fld
in
mov
sbb
jb
imul
adc
hlt
or
sub
retf
add
in
push
push
clc
xchg
mov
femms
out
fld
sbb
in
jp
retf
aad
mov
data16
push
std
mov
inc
xor
(bad)
push
out
xchg
fisubr
sbb
jns
and
pushf
pusha
pop
(bad)
sbb
mov
into
iret
dec
sub
and
mov
iret
push
stos
ltr
xchg
add
fsubr
xor
add
out
jo
pop
movs
jl
mov
mov
mov
ins
push
test
fadd
adc
lods
push
leave
cmc
leave
inc
mov
pop
jmp
dec
out
xchg
stc
lock
xchg
cmp
ret
cs
mov
push
lock
loope
pop
fidiv
mov
pop
sub
mov
inc
lahf
into
and
(bad)
mov
cmps
mov
push
leave
das
ret
jo
ror
mov
gs
adc
ret
loopne
out
or
loopne
push
sub
retf
adc
add
sar
xchg
in
and
and
sub
sbb
mov
out
push
dec
mov
std
dec
cmp
push
mov
mov
jl
ror
sbb
stc
xor
loope
clc
test
xor
xchg
call
(bad)
or
adc
sti
or
stos
rcl
or
mov
jle
pushf
dec
(bad)
adc
sbb
push
mov
sbb
imul
dec
cdq
cs
jg
xchg
fwait
enter
test
mov
retf
into
movlhps
loope
(bad)
push
inc
mov
sahf
jl
lock
cmp
and
add
mov
push
int3
sub
shl
inc
adc
pop
or
or
cmps
ins
jle
in
sahf
jno
or
out
mov
fldz
cld
mov
(bad)
jmp
fadd
push
mov
clc
or
sbb
in
push
xchg
fs
xchg
sub
pop
les
and
test
jmp
adc
sub
iret
cmp
aaa
xor
adc
leave
inc
sub
sti
out
jns
cwde
cmp
or
je
fiadd
mov
int
push
imul
cmp
mov
leave
ja
inc
cmc
jae
push
loop
push
sahf
lds
mov
lock
dec
loop
ror
push
popf
jg
cmp
xlat
retf
sbb
jno
jne
jb
jae
mov
mov
cmp
jbe
push
inc
pop
jmp
dec
shl
xor
jl
imul
sbb
rcr
xchg
mov
out
push
cmp
movs
retf
loope
mov
in
inc
popf
xchg
mov
mov
mov
jmp
pop
and
push
jnp
inc
adc
cmp
mov
or
jb
stos
inc
sbb
sub
mov
or
lods
pop
sahf
pusha
or
inc
push
out
xor
add
pop
xchg
enter
adc
mov
inc
mov
and
jl
push
imul
popa
pop
mov
mov
cmps
inc
and
add
xor
mov
add
lahf
cs
xchg
movs
xchg
fs
cli
cs
jge
xchg
in
cwde
ret
cmp
mov
mov
movs
add
cmps
out
(bad)
xlat
xchg
ss
stos
mov
cmp
les
fwait
jnp
xchg
sbb
dec
pop
mov
test
in
xchg
mov
xor
lahf
push
add
pop
ins
jno
sti
adc
adc
enter
sti
imul
sbb
adc
pop
cwde
sbb
mov
inc
popa
add
and
inc
or
cmc
or
pusha
cmp
imul
xchg
in
dec
xchg
popf
out
jne
outs
lock
stos
cmc
sub
in
inc
pop
bound
lods
les
pop
inc
add
(bad)
add
push
push
in
dec
push
cmps
cmps
sbb
push
neg
frstpm(287
shl
mov
jnp
add
(bad)
call
es
movs
mov
shr
xlat
arpl
jl
out
(bad)
and
movs
in
cmp
inc
add
scas
cmps
xchg
loopne
movs
cs
dec
cli
shl
je
mov
jb
retf
mov
xchg
sbb
xchg
or
xlat
bound
pushf
sbb
not
push
jmp
xchg
das
shl
jecxz
lods
pushf
xor
push
outs
jmp
fld
mov
frstpm(287
outs
ror
mov
hlt
cmovno
mov
fwait
xor
mov
repnz
adc
dec
jmp
(bad)
rcl
inc
stos
adc
fadd
nop
inc
(bad)
or
xchg
fwait
mov
adc
xor
push
lods
test
movs
mov
add
loop
js
inc
pop
cwde
sub
retf
test
inc
cmp
dec
xor
sub
int
test
cld
movs
inc
xor
ds
pop
outs
xlat
push
pop
sub
pop
jb
jmp
jae
mov
retf
(bad)
enter
xlat
mov
sbb
ret
imul
push
push
fcom
aaa
mov
fnstenv
retf
mov
fist
xlat
jmp
ret
fdivp
shl
pop
dec
or
pop
aas
outs
scas
inc
data16
lds
(bad)
mov
int3
cmp
xchg
das
cld
mov
cmps
(bad)
fninit
and
loopne
inc
cmp
enter
dec
mov
shr
sar
in
xor
cmp
or
and
mov
cmps
repnz
jnp
pop
adc
fild
pop
xor
in
std
or
aaa
mov
mov
inc
call
pop
sub
rcl
mov
jb
push
inc
xchg
call
mov
xchg
dec
call
and
test
mov
jl
rcr
fild
add
cli
sub
fmul
outs
mov
dec
cli
adc
out
pop
scas
jns
sub
pop
ret
cmp
cmp
test
xchg
shl
sahf
ins
mov
mov
pop
sbb
lea
mov
lods
xor
dec
sbb
jbe
adc
adc
add
xchg
dec
sahf
inc
stc
je
xlat
in
lods
mov
push
dec
sbb
mov
push
dec
and
ins
js
jmp
ret
add
adc
add
mov
jbe
mov
in
sub
add
aam
mov
push
lods
mov
nop
xlat
inc
sahf
scas
mov
lods
icebp
cmp
add
gs
xor
movs
inc
sbb
xor
js
xor
in
jae
ins
clc
pop
push
mov
cmp
fdivr
sub
fdivr
test
inc
pop
lahf
pop
adc
icebp
sbb
sbb
nop
movs
div
ja
sbb
push
loope
movs
mov
fwait
sub
les
movs
fadd
sti
mov
pop
adc
and
push
jbe
add
outs
dec
mov
popa
push
mov
fucomi
dec
xor
jb
stc
push
mov
dec
cli
bnd
push
test
dec
or
enter
int3
add
push
xlat
jmp
sub
and
jmp
inc
xlat
lods
cwde
dec
gs
test
xlat
nop
push
sbb
add
push
xchg
inc
loop
call
das
adc
popf
aad
xlat
sbb
loop
jbe
add
fidiv
push
fwait
add
mov
or
imul
shr
icebp
adc
mov
pop
and
ss
stos
sti
loope
out
shl
lds
stos
jp
stos
jle
out
lock
jle
dec
sub
fcmove
loopne
sub
imul
mov
pusha
mov
bound
(bad)
jp
not
pop
out
pop
adc
mov
adc
cmp
mov
push
test
fstp
jns
or
repnz
add
int3
(bad)
fimul
loop
out
ds
push
repnz
ins
jp
mov
adc
in
(bad)
jne
(bad)
retf
(bad)
dec
pusha
movs
mov
mov
mov
mov
test
popf
call
xor
xchg
pusha
or
fisttp
aad
cmp
mov
mov
xchg
cwde
(bad)
dec
sbb
xchg
fistp
rol
fisttp
adc
pop
popf
ret
repz
mov
jmp
sar
(bad)
xchg
bound
jo
jmp
pusha
cdq
pop
mov
dec
fistp
pushf
jne
mov
call
sar
cmc
xlat
xchg
in
js
adc
out
out
mov
imul
je
jmp
stos
cmps
fcomp
push
add
iret
jae
popf
aas
aad
mov
and
pop
xchg
div
xchg
ja
stc
das
pop
mov
mov
push
mov
cli
jecxz
push
mov
push
and
shl
ret
enter
jp
mov
mov
imul
sbb
mov
mov
aaa
push
(bad)
fs
push
mov
sub
or
mov
and
sub
xchg
mov
dec
ins
xlat
aas
adc
shr
stos
mov
mov
scas
imul
dec
jp
test
cmps
pop
mov
mov
sbb
mov
or
ret
scas
cmp
pop
xchg
call
mov
out
mov
in
enter
sub
mov
ins
mov
pop
mov
mov
aad
xor
inc
ja
retf
in
fld
icebp
das
lea
jbe
and
pop
push
jl
fadd
es
int3
std
ret
sub
fisttp
mov
inc
out
jl
and
movs
shr
xchg
jp
popa
(bad)
je
movs
arpl
dec
pushf
mov
or
loop
mov
sti
push
cmp
mov
or
bound
jbe
xchg
mov
out
in
pop
mov
cld
ins
add
popa
sbb
cmp
mov
ds
sbb
out
je
sub
mov
or
daa
push
mov
jne
mov
mov
xor
call
sbb
jl
cmc
cmps
dec
xchg
movs
shl
daa
add
out
xor
call
fs
lods
daa
in
pop
inc
leave
or
fldcw
mov
xor
out
out
retf
xchg
lods
(bad)
jmp
pop
inc
sub
addr16
test
jo
jbe
imul
lods
stos
mov
cmp
icebp
pop
lds
loopne
xor
les
mov
mov
out
call
imul
and
ret
in
push
xlat
div
pop
jb
jecxz
inc
pusha
arpl
add
and
std
sub
out
xchg
call
jbe
cdq
(bad)
inc
cmp
xchg
mov
xchg
jb
(bad)
stos
fmul
je
lds
cmps
enter
ds
outs
movs
inc
mov
jle
jnp
aam
(bad)
test
in
cmp
adc
popa
js
ss
enter
jb
rol
dec
jmp
xor
test
add
sbb
jle
pop
mov
in
in
xor
cmp
push
pop
jmp
popa
or
mov
and
xchg
jp
gs
jmp
pop
dec
dec
lods
cmp
inc
cmp
pop
pop
mov
mov
fmul
pop
mov
sar
(bad)
jae
pop
xor
repnz
pop
mov
lods
jae
(bad)
movs
(bad)
neg
dec
inc
aam
jo
ret
je
sub
in
mov
jle
adc
(bad)
pusha
(bad)
push
pop
jge
add
adc
xchg
test
pop
cli
aam
jmp
push
jo
pop
pop
icebp
shl
rol
adc
mov
mov
sbb
iret
jl
cs
cli
mov
push
test
retf
mov
jne
xchg
push
cdq
icebp
fisubr
pop
ficomp
xchg
dec
dec
jecxz
sbb
stc
mov
sbb
and
scas
or
ja
jle
adc
test
(bad)
retf
mov
enter
dec
xor
sbb
mov
jmp
mov
les
punpckhdq
retf
inc
sub
cmps
push
xchg
stos
pop
xor
mov
cmp
fcom
fstp
int3
jmp
in
leave
mov
enter
push
stos
cmp
cmp
sub
dec
stos
(bad)
jge
mov
jnp
jg
mov
jmp
and
push
clc
std
loope
mov
(bad)
cld
cs
inc
aas
mov
pop
bound
nop
mov
push
(bad)
jmp
aam
aam
rcr
test
pop
test
or
sub
push
pop
cs
sub
inc
push
push
or
inc
sub
push
dec
(bad)
loopne
mov
fbld
push
fcomp
popf
adc
fidivr
fmul
and
ins
iret
stc
push
cmp
mov
lahf
adc
and
call
mov
add
sub
sub
pusha
mov
or
xor
xchg
jl
lods
xchg
adc
lock
in
inc
xlat
inc
neg
shl
outs
xor
push
dec
and
sub
call
fsub
repnz
gs
outs
shl
clc
jnp
fbld
and
rol
jge
dec
fisub
xor
and
or
test
adc
cli
inc
stos
neg
and
inc
cli
es
int
pop
stos
je
add
cli
inc
(bad)
and
sub
jmp
mov
cmp
mov
pop
dec
call
pop
xor
jb
jns
test
dec
retf
imul
out
mov
or
scas
mov
xchg
xor
dec
mov
(bad)
call
shr
add
mov
in
dec
adc
retf
inc
stos
jb
mov
in
or
scas
add
ss
jmp
call
pop
repnz
push
and
add
repnz
sub
mov
or
jmp
jl
sub
and
test
cmp
push
pop
bound
stos
lods
cs
mov
leave
inc
jbe
leave
xor
cmc
inc
dec
adc
and
enter
adc
xchg
ja
loop
push
movs
push
sbb
fld
mov
sahf
pushf
sub
pop
cli
imul
lock
push
mov
push
imul
aaa
cmc
loope
sub
mov
pop
mov
adc
sub
jo
in
mov
sub
or
test
cmps
dec
dec
and
jno
xchg
sub
mov
shl
test
test
movaps
movnti
inc
imul
lahf
add
add
retf
xor
add
add
fild
fs
in
data16
xor
jbe
mov
imul
int
fild
dec
aam
in
xchg
lahf
fdiv
xchg
push
sbb
leave
xchg
pushf
hlt
loope
retf
inc
and
out
test
inc
sub
repnz
xchg
scas
xor
cmc
pop
(bad)
xor
xor
shl
(bad)
sar
xlat
push
imul
cld
cmps
neg
jnp
sbb
and
and
lods
rcl
aam
jp
imul
xor
jns
shr
jne
pusha
(bad)
ret
fdivr
fwait
data16
ret
cli
clc
xchg
jp
or
mov
xchg
sub
cmp
ss
adc
pop
or
xchg
xchg
mov
stc
fist
mov
inc
lea
cmps
out
lods
test
pop
and
es
les
dec
int
nop
mov
push
mov
test
repz
xor
loopne
fimul
enter
cld
xchg
sub
xchg
scas
cmps
sub
(bad)
cmp
sub
jg
pop
enter
dec
xchg
jmp
mov
repz
mov
aas
mov
idiv
imul
idiv
and
fdivr
ds
imul
push
popa
or
mov
inc
or
addr16
fxch
inc
xor
in
scas
imul
dec
aad
ror
sub
ds
stc
(bad)
repnz
je
inc
xor
push
addr16
popf
jne
or
out
add
jns
stos
movs
sub
out
test
lods
leave
xchg
adc
pushf
add
call
mov
daa
mov
popa
inc
mov
xlat
push
sbb
add
inc
push
mov
inc
lea
std
retf
push
pop
mov
ins
mov
push
jbe
jbe
inc
bound
jecxz
mov
push
xor
shl
outs
aaa
test
jnp
out
push
neg
xlat
cmp
aaa
pushf
sbb
stc
(bad)
xchg
pop
rcr
sbb
push
sbb
test
stos
cmp
mov
mov
shl
mov
dec
inc
(bad)
cmp
ret
sub
fs
or
shl
and
sbb
(bad)
push
pop
adc
fisttp
cmc
in
xchg
or
or
push
or
fwait
xor
mov
xlat
repnz
xchg
arpl
adc
ror
int
jae
bound
icebp
mov
in
push
int3
test
mov
or
cmp
push
push
nop
sub
or
mov
pop
test
xchg
sti
rcr
lods
inc
popf
dec
add
pop
pop
pop
cdq
sar
movs
pusha
js
in
call
arpl
ins
cs
adc
jno
ror
pop
sbb
mov
cld
loop
std
aad
and
cmp
js
lahf
add
jbe
std
jl
push
(bad)
cdq
and
adc
ins
lods
adc
mov
std
cli
out
jae
jmp
ror
test
mov
fs
inc
add
clc
(bad)
fstp
popf
aad
aam
add
push
popa
je
mov
repnz
int
and
ins
stos
sbb
and
xchg
call
mov
ja
mov
or
(bad)
add
jo
mov
inc
mov
sbb
loope
frstor
sti
adc
imul
xchg
ret
pop
movs
fnstcw
lds
retf
loop
dec
adc
lods
dec
pop
(bad)
mov
sbb
jns
dec
lds
pop
mov
test
into
mov
adc
xor
add
jns
dec
jp
pop
cmp
jg
pop
pushf
xchg
jo
mov
or
xchg
lock
aad
fadd
and
repnz
inc
fiadd
repz
xchg
push
pop
test
retf
and
dec
mov
int3
lock
jecxz
lock
scas
dec
dec
clc
inc
or
stos
and
jl
aad
mov
xor
sbb
cmp
hlt
into
iret
std
or
out
push
xor
jmp
add
sub
jmp
pop
fucom
jno
imul
mov
sub
fisub
pusha
nop
sbb
push
xchg
xchg
xchg
push
dec
add
xchg
es
pop
xor
push
jmp
add
dec
in
(bad)
bound
in
dec
in
push
xor
test
mov
push
aaa
mov
or
pop
mov
ss
movs
xchg
and
sbb
jle
mov
xchg
mov
jbe
fwait
dec
daa
jg
sub
test
or
sbb
sbb
das
push
jle
adc
mov
ret
jbe
jb
sbb
xor
pop
repnz
mov
add
in
cmp
test
xchg
and
in
cmp
sahf
and
fucompp
jp
out
mov
xchg
lds
sub
(bad)
pop
jp
jmp
and
xor
fcomp
mov
push
out
xchg
stos
test
push
jne
or
shr
mov
mov
jno
mov
fwait
pcmpgtd
popf
or
add
add
in
ret
(bad)
out
in
(bad)
cmp
cmp
aas
hlt
repnz
ret
adc
js
add
mov
xor
mov
sub
xchg
mov
push
mov
retf
rcl
aaa
enter
bound
les
sbb
neg
pop
or
or
pop
add
mov
mov
or
aam
xchg
adc
sub
dec
xchg
addr16
test
ins
inc
rcl
stos
mov
shl
mov
fld
int3
mov
xlat
pop
fcom
les
hlt
js
loop
out
cmp
jmp
scas
or
dec
sub
fld
inc
lea
sti
push
mov
cmps
div
or
jmp
jno
push
ja
cdq
jmp
aaa
ja
popa
pop
outs
fdivp
mov
fadd
jle
je
lods
adc
fistp
ficom
cmp
mov
inc
(bad)
xchg
push
or
add
cs
sbb
fwait
fwait
push
mov
pop
cs
pop
jge
(bad)
fisub
loopne
push
sbb
push
imul
jle
add
xchg
test
inc
push
scas
(bad)
xchg
(bad)
xor
add
pushf
pop
cli
add
inc
add
xor
jmp
or
sbb
dec
out
out
out
cmp
mov
movs
or
popa
in
inc
fimul
dec
dec
sbb
add
inc
inc
ss
retf
mov
retf
fsubr
popa
out
int
mov
dec
or
mov
int
pop
in
mov
outs
jae
jmp
test
in
pop
inc
dec
mov
and
lahf
mov
out
jb
pop
mov
and
aas
(bad)
je
lods
sub
dec
aaa
sti
(bad)
in
mov
int3
push
xchg
sub
out
sub
and
add
cwde
jecxz
pushf
pop
sub
jno
retf
dec
data16
sahf
enter
mov
(bad)
pop
dec
push
sub
xchg
or
sbb
(bad)
push
mov
out
test
shl
loopne
cmp
sbb
mov
jle
adc
icebp
pushf
sbb
fsubr
add
inc
mov
pop
in
dec
cmp
sbb
mov
shl
enter
pop
xor
retf
or
jno
inc
in
pusha
std
loope
in
rol
dec
out
fisub
mov
jns
and
pavgb
mov
xor
and
sub
dec
sbb
adc
(bad)
out
xor
aam
adc
fisttp
dec
xchg
pushf
aas
add
lods
pop
push
fld
test
inc
pop
xor
sub
sbb
add
ins
dec
repz
add
pop
xchg
add
outs
fisubr
xchg
push
bound
jo
mov
sbb
mov
(bad)
sbb
add
fild
pop
(bad)
fistp
frstor
pmaxub
outs
lods
jbe
test
and
pop
imul
jbe
aas
or
dec
push
dec
and
add
test
loopne
xor
ficom
icebp
push
(bad)
inc
test
mov
test
inc
inc
sub
pop
mov
(bad)
add
adc
popa
adc
push
das
jecxz
and
(bad)
shr
hlt
xchg
push
sub
xor
stc
xchg
sub
inc
ret
push
xor
repnz
jno
mov
fld
pop
loop
(bad)
call
xor
cmp
pushw
push
xchg
adc
into
pop
add
adc
push
xchg
jp
pop
jp
(bad)
repz
or
lods
push
sbb
fisttp
xchg
mov
push
sbb
lds
jecxz
enter
sahf
movs
inc
pop
jo
aas
or
add
ret
push
movs
in
mov
xor
sub
mov
(bad)
dec
xchg
sub
jl
sub
add
sub
mov
sub
mov
in
call
adc
repnz
dec
xchg
or
and
mov
mov
imul
mov
mov
jg
stos
cmps
shl
inc
int
xchg
lods
rol
xchg
mov
dec
fidivr
out
jmp
dec
jbe
dec
xor
hlt
outs
in
out
aaa
jmp
xchg
popa
mov
cld
(bad)
xor
cmc
je
ror
test
aad
inc
imul
cli
dec
xchg
cld
lods
mov
pop
push
sbb
xchg
cmp
fistp
mov
sub
mov
cmp
adc
cli
ret
cli
add
push
enter
fwait
and
lock
mov
mov
mov
push
ror
push
mov
loopne
fcomp
iret
xor
dec
xor
fwait
sbb
push
dec
xchg
repz
pop
jnp
sahf
or
(bad)
xor
and
rcr
test
mov
iret
ret
and
pop
aaa
sbb
imul
xor
mov
(bad)
adc
fs
adc
icebp
cmps
jge
lods
xchg
xlat
mov
outs
fstp
rcr
mov
lock
shr
in
pop
or
push
sub
or
pop
rol
mov
and
rcl
xchg
mov
jno
aaa
adc
xchg
push
jecxz
sbb
out
and
into
(bad)
setne
adc
out
jecxz
pop
mov
mov
(bad)
stc
pop
mov
jne
pop
movs
std
out
push
dec
dec
sbb
push
lea
push
and
nop
test
mov
sbb
(bad)
jo
leave
mov
pop
stos
push
add
mov
cmp
(bad)
jno
outs
lods
movs
pop
adc
inc
(bad)
cli
mov
ror
(bad)
ja
(bad)
mov
jb
pop
push
dec
pop
mov
arpl
add
mov
cwde
xchg
xor
add
outs
outs
dec
(bad)
push
mov
scas
lock
jmp
fldenv
leave
push
ins
or
es
xor
dec
jl
aad
xor
enter
pop
shr
lock
mov
push
xchg
push
push
ror
add
test
clc
mov
push
stc
sbb
add
loop
pop
push
xchg
(bad)
cmc
sub
jmp
push
mov
lods
inc
loopne
cmps
sub
mov
and
pusha
mov
sub
or
sub
(bad)
cmp
adc
repnz
push
lods
inc
and
cmps
aam
mov
push
test
fwait
mov
loopne
arpl
out
mov
inc
test
mov
inc
pop
cwde
in
xlat
pop
test
leave
repz
idiv
addr16
cdq
pop
jecxz
daa
sbb
mov
pop
inc
sub
int3
aaa
mov
lea
and
jge
mov
fs
(bad)
or
inc
push
(bad)
adc
ins
js
std
loopne
pop
xchg
cmp
sub
pop
mov
dec
bound
inc
nop
xchg
pop
adc
rol
cmp
xlat
loopne
push
xor
inc
lods
pop
mov
test
xchg
mov
xor
add
(bad)
lds
sub
adc
ja
in
adc
add
shr
pop
into
cld
sbb
push
loop
test
sti
stos
cwde
and
dec
push
pop
mov
add
inc
ror
xchg
gs
push
out
xor
jp
pop
shr
inc
lds
sbb
into
retf
lea
stc
cdq
jmp
mov
inc
in
jns
sbb
ins
mov
mov
and
xor
and
add
mov
mov
inc
(bad)
and
mov
fidiv
test
in
mov
scas
fimul
or
cmp
sub
sub
data16
jle
xchg
outs
addr16
inc
fst
add
cmp
xchg
pop
xor
dec
jns
fimul
mov
xchg
shl
repz
les
int3
mov
or
es
add
jmp
aas
sbb
push
dec
mov
popa
xchg
test
mov
dec
out
les
mov
loope
stc
fadd
xchg
and
lds
loope
movs
fisttp
js
push
push
cld
ret
cmp
mov
rcr
cmp
xchg
leave
fild
pop
call
aaa
xor
gs
into
jns
cmp
bound
and
xor
or
pop
cmp
push
ds
adc
int
jge
stos
lock
pop
movs
adc
enter
add
out
mov
cmp
movs
nop
mov
jl
xchg
cmp
pop
sub
int3
or
ja
mov
leave
and
(bad)
daa
aam
scas
sahf
cmp
cmp
sti
popf
dec
enter
icebp
mov
mov
imul
dec
shl
(bad)
xchg
xor
mov
dec
push
in
mov
push
in
adc
sub
cmp
pop
lods
adc
popa
mov
and
jmp
xchg
mov
not
cmp
je
into
adc
xchg
daa
out
sahf
ins
or
xchg
jbe
lahf
in
and
inc
mov
push
sti
xor
pop
mul
int3
test
jo
aam
in
imul
push
xor
sahf
jbe
nop
mov
call
push
jo
inc
jo
in
ins
xchg
xor
ins
fmul
addr16
sub
sub
int
mov
xchg
push
ss
adc
inc
rcl
jne
jae
xchg
cs
dec
pop
shl
push
rcr
into
retf
add
lds
daa
adc
retf
movs
pushf
push
loop
jnp
jg
fidiv
dec
outs
xchg
xchg
xchg
cmp
neg
xchg
test
aam
imul
inc
test
mov
call
out
cmc
in
ret
sub
in
arpl
or
jecxz
stos
ficom
push
jns
ins
adc
add
mov
leave
call
push
mov
pushf
mov
data16
jge
popa
cdq
dec
nop
jmp
push
mov
and
popf
adc
cmp
dec
sub
push
fdivr
inc
inc
lods
mov
test
or
iret
lods
loopne
push
xchg
add
fmul
jae
mov
out
sub
or
imul
(bad)
jle
pop
cmps
jbe
fcmovnb
pop
popa
xor
push
dec
lahf
outs
inc
jge
or
cs
jmp
push
mov
xchg
dec
xchg
loope
sub
cwde
lahf
xchg
clc
test
mov
sar
add
dec
cmp
sbb
rcl
fst
inc
xchg
dec
int
int3
sub
and
mov
call
mul
xchg
jmp
ss
fwait
jns
jnp
mov
pop
or
cld
jb
adc
in
inc
fistp
sub
out
rol
std
jecxz
rcr
inc
and
pop
adc
enter
dec
xchg
xor
movs
mov
dec
mov
mov
push
xor
cmp
mov
or
(bad)
inc
xor
outs
push
retf
cmps
(bad)
jg
xor
cdq
stc
pop
jle
icebp
jne
mov
scas
dec
cmps
jge
stos
movs
inc
repnz
pop
sbb
ins
fdivr
scas
in
xor
adc
stos
xor
outs
vpsubsb
cmp
mov
dec
pop
icebp
jmp
in
pusha
sbb
and
out
out
hlt
push
lahf
pusha
inc
call
mov
push
mov
mov
cs
jbe
cmp
or
repz
push
push
pop
jecxz
outs
in
fsub
test
pop
jle
mov
leave
and
ja
jmp
sub
cwde
or
adc
or
mov
ret
lds
add
sbb
gs
xchg
imul
daa
ins
cmp
sahf
jle
mov
jnp
jbe
push
mov
jp
daa
sti
add
jecxz
fisub
cmp
je
push
movs
xlat
inc
stos
jo
movs
fs
mov
xor
inc
sahf
(bad)
mov
xchg
stos
or
fadd
push
sbb
scas
cmp
and
ret
loope
bnd
enter
js
push
ds
mov
lds
push
popf
inc
idiv
out
push
add
js
cmp
pop
imul
paddq
leave
out
fcomp
es
push
outs
lods
mov
inc
sar
inc
jns
mov
jae
adc
stos
dec
outs
push
jge
sahf
int
add
sbb
or
and
ins
xor
aas
scas
cli
adc
dec
call
push
popa
jae
xchg
and
sti
stos
inc
fld
repnz
jp
cmp
in
sub
lods
add
les
iret
cmp
inc
xor
int3
mov
rdtsc
jmp
mov
or
xchg
inc
pusha
push
ret
lods
jnp
xor
fs
mov
pop
mov
fstp
in
shl
cli
sub
mov
sub
pop
mov
pop
fistp
cmps
or
jle
mov
test
sbb
es
inc
loopne
iret
(bad)
xor
ret
and
aam
and
mul
cmp
lahf
into
in
jg
call
mov
sub
stc
test
or
ret
or
je
mov
dec
or
sbb
psllq
call
outs
not
jge
push
xchg
out
fwait
adc
outs
mov
fidiv
cwde
fsub
popf
cdq
popa
mov
fild
in
jge
scas
rcl
sub
mov
xchg
xchg
in
mov
mov
mov
push
cmp
jae
and
out
or
js
loop
inc
xchg
cli
add
(bad)
ja
dec
mov
fnstcw
add
mov
mov
cld
loop
add
retf
lds
stos
mov
push
ret
mov
jl
enter
shl
sbb
jmp
jmp
data16
sub
push
mov
mov
call
movs
stos
jl
test
dec
cmc
sub
push
xchg
(bad)
jmp
add
and
pop
ds
retf
data16
cmp
pop
push
push
inc
mov
sub
rcl
setno
(bad)
fs
scas
mov
cld
inc
pop
movs
int
mov
imul
pop
ret
push
mov
sti
jns
adc
inc
(bad)
js
pop
aaa
hlt
clc
mov
lock
imul
adc
test
call
xlat
int
and
gs
fcomi
push
pop
mov
out
jnp
sahf
xor
sbb
mov
push
lahf
shr
lahf
mov
iret
push
or
mov
inc
adc
leave
mov
xchg
fscale
outs
and
aaa
mov
js
jbe
retf
cmp
add
lock
jge
nop
ret
lock
fnsave
push
xor
jecxz
cmp
je
cwde
cld
add
das
test
outs
pusha
sub
ror
mov
xchg
fsub
inc
xor
sbb
repnz
fcmovb
ins
jo
enter
add
es
push
mov
leave
fld
inc
or
pop
test
xor
lods
xchg
es
lahf
push
fsubr
repnz
mov
call
dec
(bad)
push
pop
mov
fwait
add
ins
popf
sub
pusha
inc
and
mov
in
sub
dec
jmp
fs
fdivr
lea
inc
push
inc
cs
push
xchg
sti
jp
adc
shl
jmp
jecxz
xor
int
or
std
push
fsub
mov
cmps
out
fcmovnu
jmp
pop
xchg
ins
add
les
test
aaa
push
mov
xchg
(bad)
(bad)
ds
xor
cmp
pop
dec
rcl
mov
outs
pop
and
and
pop
rol
fcomip
mov
loopne
fldcw
xor
sbb
mov
inc
(bad)
ficomp
fiadd
pop
xor
dec
mov
repz
ins
xlat
movs
into
add
cdq
sbb
and
in
push
jmp
(bad)
ja
inc
enter
sbb
lods
sbb
mov
imul
lock
push
js
inc
sbb
xchg
add
leave
inc
dec
shl
icebp
cmp
ret
mov
call
xchg
xchg
sub
fadd
das
pop
fs
in
jns
pop
jne
push
retf
(bad)
jmp
fisub
fmul
pusha
ficomp
push
xchg
jae
pop
cmp
pusha
mov
push
xlat
fcomip
aaa
pop
xchg
bound
sahf
cmp
popf
aaa
adc
cmp
or
cmps
das
sbb
mov
mov
leave
mov
mov
sbb
pusha
pop
sahf
in
enter
aaa
mov
push
mov
sub
leave
dec
out
mov
stos
mov
dec
mov
cmc
hlt
push
pop
cs
in
cld
retf
and
jo
inc
scas
push
or
enter
push
sub
push
mov
cmp
rol
mov
pop
or
add
jg
into
and
xchg
test
cs
cmp
and
call
arpl
adc
(bad)
adc
dec
aaa
sub
pushf
fwait
loope
jns
jno
mov
js
pop
and
ret
out
rcr
jecxz
pop
repz
retf
xor
call
popf
cwde
cld
(bad)
mov
enter
jno
nop
push
stc
aam
adc
nop
pop
inc
jbe
mov
inc
dec
and
lods
test
(bad)
daa
mov
shl
std
push
sar
das
push
repnz
add
aam
and
pusha
pop
xchg
fs
add
cld
fst
inc
rcl
fdivr
fistp
sub
test
les
nop
and
cdq
retf
and
xchg
sub
xchg
jecxz
xchg
sub
adc
and
inc
in
inc
xor
cmp
mov
mov
test
push
test
daa
cli
int3
movs
push
cmp
jno
(bad)
pop
test
xchg
jecxz
mov
inc
jg
push
fmul
cs
mov
loop
sbb
out
adc
sbb
lds
pop
int3
retf
daa
sub
loopne
and
iret
jecxz
push
mov
add
mov
cdq
sub
mov
mov
repz
adc
les
loopne
rol
(bad)
mov
fstp
inc
cdq
sub
mov
dec
xor
mov
mov
jb
adc
fidiv
mov
push
xor
fst
cmp
dec
sti
fisubr
pop
bound
push
rcl
jns
sahf
ss
jecxz
xor
daa
arpl
add
jns
cli
cmp
movs
idiv
xor
sub
out
ss
aam
ficom
call
out
inc
test
cmp
mov
mov
xchg
mov
fisttp
jb
add
mov
je
xor
sub
cmp
fstp
fimul
ret
imul
test
int3
test
jl
mov
dec
sub
int
jge
cmc
out
retf
and
jb
mov
outs
ds
stos
inc
bound
jg
cmp
sar
mov
stc
fdiv
pop
jmp
mov
xchg
rcr
jmp
enter
mov
aas
sbb
push
sbb
dec
pop
or
lahf
sbb
xchg
adc
dec
add
sbb
or
stos
pop
out
mov
aam
rcl
pop
daa
push
test
mov
cmp
pop
sub
fsub
ret
adc
repnz
loope
xlat
outs
gs
fmul
inc
push
and
ins
ss
mov
xor
sbb
jno
or
out
adc
adc
cs
int
shl
neg
jns
mov
inc
(bad)
cmc
movs
sub
xor
bound
sbb
fcmovbe
jg
cmp
pop
mov
repnz
add
mov
sar
mov
sbb
arpl
cmp
in
lea
mov
dec
and
je
hlt
mov
mov
lds
popf
adc
and
enter
data16
push
pop
add
cmp
std
mov
pop
es
clc
push
rol
dec
shl
stos
in
sbb
sar
xor
mov
test
cli
cmp
mov
push
test
jecxz
popf
mov
js
xor
dec
dec
cdq
push
jb
inc
movs
(bad)
mov
add
cld
xor
dec
or
mov
push
push
sbb
test
dec
cs
sub
mov
xchg
mov
xor
dec
sub
mov
adc
add
and
jecxz
cmps
gs
pop
imul
shl
aas
je
imul
fiadd
icebp
movs
mov
shr
cmp
xchg
in
mov
jae
mov
das
mov
push
xchg
rcr
sbb
cmp
rcr
movs
ins
mov
mov
mov
lds
pop
sti
xchg
xor
sahf
jns
mov
outs
shr
mov
jno
iret
ins
mov
jecxz
sahf
xchg
scas
sbb
popf
xchg
pop
mov
test
xchg
push
mov
push
int3
stc
lahf
(bad)
(bad)
rol
cmp
in
sub
and
xchg
cmp
xor
movs
sub
nop
xchg
std
mov
lea
pop
sub
cmp
push
cmp
repnz
push
xor
dec
jge
call
movs
push
hlt
pop
sub
inc
mov
pop
push
cdq
dec
mov
cmp
(bad)
js
xchg
ja
outs
(bad)
in
inc
push
in
aas
fdiv
fiadd
jp
push
or
jae
imul
push
and
adc
jl
not
sbb
sar
loop
xor
cs
(bad)
out
(bad)
in
push
push
and
jno
jo
add
sub
or
icebp
push
stos
jmp
mov
dec
sub
xor
push
and
cmp
ret
loopne
pop
into
adc
ret
pop
xchg
xor
jl
push
pop
jo
dec
movs
push
mov
mov
inc
pop
sub
adc
lahf
and
push
paddd
gs
sub
xchg
jns
xor
js
push
frndint
mov
call
pop
or
sbb
shl
pop
mov
lahf
dec
mov
sbb
scas
addr16
mov
(bad)
fstp
inc
mov
mov
loopne
sbb
call
sub
push
xor
mov
push
mov
or
mov
mov
or
push
clc
pop
push
(bad)
(bad)
fwait
pop
iret
stos
mov
lahf
stos
add
push
daa
jge
jbe
repz
xchg
push
sbb
cdq
mov
and
inc
pushf
cmp
add
add
xor
dec
or
lock
jecxz
lock
jg
enter
addr16
push
add
enter
dec
fs
fdivr
popf
or
(bad)
je
test
dec
cmp
jmp
dec
daa
in
mov
inc
fst
mov
xchg
mov
ret
dec
ror
pop
test
jmp
pop
adc
popf
idiv
mov
stc
je
push
fsub
push
push
(bad)
jmp
fstp
retf
adc
ja
rcl
xor
push
jo
inc
xor
aam
cmp
es
loope
sub
push
dec
out
call
sub
aam
std
jns
lea
inc
adc
leave
int3
push
(bad)
cmp
fimul
inc
retf
mov
push
xor
sbb
shl
and
pop
retf
dec
clc
fucom
ret
outs
sahf
shr
test
dec
int
pop
js
jmp
(bad)
jmp
mov
dec
pop
aaa
jl
movs
push
ror
js
addr16
hlt
mov
xor
ins
dec
cmp
jne
push
cmp
stos
(bad)
fisubr
xchg
pushf
mov
xor
and
xchg
pop
sbb
mov
and
add
out
and
add
lds
jmp
call
lahf
and
xchg
xor
mov
pop
std
rol
ret
adc
xlat
scas
inc
ds
cmp
cmp
repnz
ins
pop
mov
add
ins
rol
xchg
dec
(bad)
sar
int3
pushf
mov
sbb
ds
repnz
shl
or
inc
add
stc
push
xchg
sbb
inc
dec
jecxz
xor
add
and
xchg
je
data16
mov
popa
and
ror
lock
sar
jno
aam
mov
leave
adc
push
in
xor
cwde
mov
push
ins
(bad)
fcomp
pop
or
sar
push
mov
pop
push
or
ror
icebp
in
jnp
outs
mov
out
add
or
inc
sub
xor
adc
and
fistp
sbb
mov
ins
pop
jb
mov
mov
outs
loop
leave
sub
ret
inc
fisttp
fwait
push
mov
mov
int3
add
jge
scas
and
ret
or
stos
push
adc
mov
xchg
jne
popa
in
call
adc
int3
or
dec
jne
ror
cs
push
xor
(bad)
into
outs
aad
rcr
sub
add
fisub
xchg
sub
add
faddp
or
xchg
or
push
loopne
repnz
cwde
in
xor
out
lods
jns
lock
mov
pop
imul
iret
enter
loop
(bad)
gs
retf
xor
pushf
enter
sahf
mov
(bad)
call
mov
call
adc
inc
stc
xor
xchg
mov
cmps
cmps
movs
ja
xchg
dec
pop
outs
mov
dec
inc
cli
cmp
mov
cld
fsubr
(bad)
gs
(bad)
push
mov
test
leave
loope
rol
xchg
jg
sub
jmp
es
pushf
push
out
lods
push
push
add
push
sub
mov
mov
or
mov
sbb
cdq
push
xchg
xor
inc
xchg
push
int3
ss
sub
cld
inc
enter
ret
cmps
ss
add
inc
mov
pop
pop
sbb
ret
nop
shl
mov
cwde
retf
pop
into
cmp
cld
fld
pusha
lock
outs
mov
mov
popf
sbb
ja
mov
push
hlt
adc
push
cmp
push
jge
push
sbb
and
xchg
mov
into
pop
xor
fdivr
and
adc
jnp
int3
retf
test
pop
push
out
call
dec
sbb
pushf
xchg
inc
mov
cmp
lahf
push
jo
sbb
inc
mov
(bad)
aad
jae
ret
or
lods
into
shl
pop
scas
retf
pop
sar
inc
dec
test
fisttp
popa
inc
and
fcmovnbe
inc
cwde
jp
je
retf
or
dec
cmp
js
mov
sub
pusha
out
and
(bad)
cmp
jg
dec
mov
push
sub
aas
dec
or
pop
pop
ins
out
and
mov
js
adc
sub
cmp
(bad)
imul
std
(bad)
dec
jmp
inc
fdiv
lss
mov
neg
sbb
out
sar
or
mov
xchg
jbe
ins
mov
add
add
sub
xchg
fcomp
test
mov
jbe
not
gs
pop
jno
add
cs
out
inc
into
sahf
xchg
(bad)
aam
mov
push
adc
sub
dec
mov
leave
(bad)
pop
retf
outs
lahf
add
cli
sahf
pop
and
push
ins
push
mov
dec
lods
cli
lods
xor
sbb
push
mov
icebp
aas
arpl
pop
retf
lods
sub
mov
popa
jecxz
pop
sub
fisubr
dec
movs
fcomip
test
fstp
test
repnz
outs
xor
retf
call
in
jp
rcr
pop
test
je
add
mov
es
xchg
loope
mov
stos
jne
mov
cmp
(bad)
cmp
in
stc
xor
push
sbb
ret
jno
inc
jecxz
mov
ins
xor
js
pop
jbe
push
lods
xchg
bound
mov
xor
ss
in
mov
mov
fist
mov
add
stos
jbe
aam
mov
aad
xlat
push
xor
ror
test
mov
repnz
ins
xchg
push
lea
aam
(bad)
sub
rcl
cmps
ds
sahf
aad
push
push
sbb
jnp
inc
pushf
aaa
push
jns
and
adc
dec
pushf
fdivr
hlt
inc
xchg
iret
adc
add
shl
xchg
push
xchg
sub
mov
test
out
(bad)
mov
xor
ror
out
push
stc
mov
mov
push
fwait
mov
jecxz
sti
add
test
aas
popf
sbb
les
dec
sbb
xchg
push
dec
push
add
test
mov
jg
xor
sbb
and
jmp
dec
sti
scas
out
ins
and
sbb
sbb
inc
mov
push
sbb
and
sti
rcl
adc
out
scas
inc
into
or
xadd
inc
xor
ret
fcom
jnp
cmp
(bad)
aam
je
pop
mov
sbb
jmp
push
bound
lds
(bad)
out
std
jmp
mov
xor
mov
push
jbe
ror
mov
enter
fcmove
mov
loopne
and
push
lea
fmul
mov
les
out
sub
jle
ret
test
jmp
movs
loope
pop
dec
cmp
addr16
mov
dec
les
dec
inc
loope
jb
mov
pop
retf
les
ja
shl
cwde
xchg
dec
outs
or
(bad)
jmp
ret
jnp
mov
movs
xchg
or
inc
test
inc
retf
pop
cmp
mov
cmp
leave
add
pop
gs
jb
out
dec
mov
jp
push
outs
sbb
jl
inc
jb
imul
int3
int3
or
inc
cmps
ja
push
cmp
nop
loope
or
scas
(bad)
mov
stc
scas
out
jmp
dec
nop
stos
xor
cwde
ret
icebp
mov
push
xchg
(bad)
sub
popf
mov
xchg
and
jo
add
sbb
enter
call
mov
ret
mov
adc
jo
push
cdq
in
lods
rdpmc
popf
arpl
jecxz
aad
dec
cmps
out
adc
mov
pusha
int
sub
xor
ror
repnz
in
frstor
jl
nop
dec
ja
aam
push
mov
retf
adc
and
push
jns
mov
cmp
es
movs
xchg
push
(bad)
movs
xchg
lods
add
and
xchg
jecxz
ds
inc
fmul
pop
stc
dec
mov
adc
mov
in
fxam
pop
mov
in
cwde
pop
mov
mov
ins
call
pop
jecxz
cli
mov
hlt
mov
xor
addr16
adc
xor
xor
jmp
sub
inc
and
dec
pop
inc
enter
jnp
inc
mov
(bad)
outs
dec
mov
outs
fmul
retf
lock
(bad)
fisttp
bound
xchg
cld
inc
add
mov
mov
add
fwait
or
push
call
outs
test
inc
cmps
fxch
ret
scas
call
shl
inc
loopne
xor
cmp
imul
xchg
xchg
lods
xchg
pop
jb
pop
mov
shl
repnz
jecxz
pop
mov
jge
arpl
scas
sub
out
mov
or
outs
ret
(bad)
out
(bad)
rcr
stos
push
movs
xchg
jle
cmp
popa
(bad)
enter
scas
and
cmps
imul
xchg
sub
scas
out
popa
lds
xor
jmp
sbb
in
and
xor
adc
sub
stc
and
ja
loope
loopne
xchg
hlt
stos
pop
sub
data16
ja
test
xchg
lea
cmp
xlat
or
dec
pop
jno
sub
ds
cli
mov
or
sbb
jno
xchg
int
push
pop
adc
into
cdq
sbb
gs
inc
jae
dec
aas
mov
adc
mov
call
ficom
mov
add
(bad)
dec
test
cmps
mov
jno
leave
jmp
bound
jo
xchg
jbe
dec
mov
out
adc
mov
lahf
adc
or
ret
push
and
push
sahf
push
xchg
xchg
adc
jne
mov
xor
hlt
loope
mov
push
jmp
inc
iret
ja
gs
jg
loope
inc
rol
inc
test
data16
fbld
cmp
scas
(bad)
push
jo
out
jge
js
lock
inc
sar
fisub
dec
aad
pop
int
ins
cmc
or
es
movs
jecxz
jae
adc
mov
je
mov
js
aam
aam
(bad)
inc
xchg
(bad)
rcr
cmp
outs
and
cmp
push
daa
pop
loope
into
aad
inc
nop
push
adc
inc
jp
outs
or
jle
fld
or
add
(bad)
sub
xchg
out
sub
jle
test
or
push
adc
mov
mov
pusha
ss
cmp
je
call
fld
mov
div
pop
aad
pop
arpl
das
icebp
xor
aam
jb
fst
push
xchg
in
mov
(bad)
dec
int
ret
fbstp
div
aam
cmp
mov
popf
shl
stos
push
xchg
or
in
pop
enter
inc
(bad)
outs
pop
pop
loope
(bad)
movs
lods
stos
in
xor
in
mov
xchg
fidiv
xor
outs
stc
xchg
outs
mov
dec
(bad)
or
inc
push
addr16
cwde
out
pop
cs
and
in
jns
int
in
cmp
push
daa
call
jmp
gs
sbb
retf
movs
retf
mov
cmps
scas
imul
or
sub
and
push
cld
inc
xor
jb
adc
xor
xor
mov
(bad)
cmc
add
mov
xchg
jnp
pop
les
imul
outs
out
cmps
ficom
sbb
sbb
push
arpl
sbb
bound
hlt
inc
clc
adc
shl
test
or
bound
sub
mov
cdq
loop
pop
push
sbb
pop
push
mov
mov
push
mov
dec
out
mov
sbb
sub
(bad)
dec
push
xchg
mov
mov
fld
xor
in
push
aad
into
ins
and
retf
shl
mov
test
loop
mov
arpl
mov
mov
test
and
adc
xchg
add
ret
dec
pop
lea
push
adc
mov
imul
imul
addr16
sar
xchg
out
mov
mov
inc
test
aaa
ins
pop
stc
jmp
clc
or
cwde
fnstenv
and
outs
outs
(bad)
cmp
iret
cdq
lock
aas
fcom
fucom
jae
mov
retf
and
repnz
mov
sub
cmps
xchg
jnp
stc
cmp
mov
pop
push
mov
mov
(bad)
jecxz
ret
ins
or
xor
add
pop
out
sbb
in
fucomi
xor
pop
sti
inc
retf
mov
or
sub
ficomp
jns
popa
sbb
mov
or
cdq
mov
pusha
mov
sub
add
mov
int
lock
mov
call
(bad)
dec
dec
jns
sbb
popf
xor
or
sub
nop
add
sahf
add
mov
mov
fs
jecxz
cmps
mov
mov
jnp
data16
cdq
aad
push
and
out
in
aas
pop
mov
jns
mov
into
dec
xor
or
lods
cld
sbb
imul
jb
leave
inc
and
add
xchg
cmp
mov
and
and
mov
inc
cwde
out
loope
dec
adc
lods
test
retf
sbb
enter
mov
jbe
push
xor
imul
pop
cmp
fwait
ds
aad
xor
stos
(bad)
enter
jg
and
add
or
ja
push
jns
cmp
jo
jno
jg
xor
lds
mov
xor
add
fadd
inc
scas
adc
shl
adc
xchg
adc
xor
cmp
es
pop
sti
inc
stc
sbb
mov
xchg
sbb
in
das
xchg
loop
jp
outs
lock
xchg
leave
std
repnz
inc
fwait
mov
out
cmp
nop
xchg
ret
mov
imul
inc
dec
repnz
cmp
dec
cld
pop
xor
fimul
or
inc
scas
adc
sub
inc
sbb
push
lock
shl
fidiv
inc
adc
jl
mov
fcmovnb
retf
pop
jl
mov
jns
pop
or
outs
inc
loop
dec
ja
fldl2t
lock
xchg
mov
test
aas
pop
stc
test
add
in
mov
adc
lock
cwde
adc
add
mov
sbb
inc
sbb
fld
das
iret
cmp
scas
repnz
cmp
jmp
aam
inc
inc
mov
mov
mov
mov
fwait
stos
xchg
adc
sub
dec
mov
mov
mov
lock
push
xor
mov
mov
stos
push
inc
or
cs
jno
sub
xchg
repz
push
popa
xchg
and
sahf
push
cmp
or
in
push
ret
xchg
add
shl
mov
xor
add
arpl
in
aam
jg
cdq
je
dec
test
mov
into
imul
pop
fistp
jge
loop
out
cmp
cdq
mov
pop
mov
loope
mov
(bad)
lods
sti
cli
push
sbb
mov
movs
inc
jb
mov
add
mov
(bad)
or
outs
and
cmp
adc
xchg
(bad)
xchg
fstp
lds
stc
stc
xor
or
xchg
mov
leave
push
sub
fild
or
jle
sub
sub
mov
cmp
shr
mov
(bad)
pop
and
movs
xor
mov
push
das
xor
fs
sbb
(bad)
je
jo
pop
lods
ror
inc
lods
jb
mov
repz
jmp
pop
sub
movs
and
pop
daa
out
cmps
pop
mov
inc
cmc
(bad)
adc
pop
or
retf
(bad)
or
lods
enter
push
mov
sbb
sub
jg
push
sub
cmp
mov
pop
xor
adc
mov
mov
jne
mov
sub
or
inc
clc
mov
xchg
sbb
push
pop
dec
retf
arpl
mov
clc
add
iret
cmp
or
addr16
jecxz
pop
push
cmc
retf
push
test
hlt
lods
ror
fmul
adc
pop
pushf
xchg
pop
push
adc
dec
push
arpl
sbb
xlat
jecxz
jno
mov
push
pop
mov
rol
inc
test
jmp
cmps
xchg
jb
cmp
(bad)
mov
(bad)
jb
or
movs
push
cmps
sar
cmp
nop
dec
iret
push
jle
sahf
or
jmp
pop
fsub
push
call
sbb
inc
call
sub
enter
push
fidivr
add
dec
test
push
push
and
cli
sbb
mov
xchg
jno
pop
or
xchg
or
xchg
and
loopne
add
adc
iret
nop
adc
les
enter
jbe
jns
cmp
in
pop
and
aaa
or
cmp
mov
ins
add
mov
es
xchg
fidiv
dec
xor
mov
popf
movs
out
dec
dec
inc
clc
cmp
and
stc
cmps
mov
and
rol
jbe
push
dec
in
add
and
fwait
repz
fmul
imul
pusha
neg
mov
popf
mov
push
(bad)
shl
in
cmps
nop
std
sbb
nop
push
cdq
call
add
mov
mov
xor
jmp
aam
test
shr
push
mov
mov
jmp
xor
cld
mov
call
or
cdq
stos
ret
jns
inc
jns
call
cmps
rol
ins
inc
adc
adc
add
call
push
punpckldq
cmp
or
mov
push
ins
mov
jmp
pop
mov
jnp
ficomp
test
test
scas
pop
pop
ds
inc
mov
mov
xor
sbb
shl
lea
arpl
mov
cmc
mov
scas
cmp
jne
mov
pop
out
ss
rcr
add
inc
repz
cmp
cld
aas
push
rol
inc
mov
push
dec
xor
neg
popa
inc
pop
lods
sar
dec
or
in
sti
scas
mov
push
inc
adc
cli
not
pop
outs
push
push
push
repnz
out
ja
fidiv
inc
in
mov
pop
inc
dec
shl
stc
int3
cmc
jle
mov
jo
cli
xchg
pushf
sub
mov
jge
mov
dec
pusha
lahf
(bad)
mov
sbb
cmp
xchg
out
push
sbb
cli
in
out
in
jl
enter
xor
std
sbb
xor
nop
aam
fdivr
lea
sbb
retf
sub
xor
enter
jl
ret
test
push
pop
inc
std
pop
cld
mov
pop
test
dec
mov
sbb
mov
dec
in
sar
clc
retf
rcr
(bad)
pop
ds
mov
mov
push
jl
in
int3
add
push
inc
test
mov
push
inc
mov
test
int
lahf
icebp
xchg
pop
in
jmp
mov
das
test
and
or
xchg
ror
mov
sahf
addr16
ins
add
sti
(bad)
push
rol
shr
test
fisttp
shl
jns
push
and
in
(bad)
call
mov
retf
rcl
mov
cmp
pop
mov
push
sbb
mov
push
(bad)
aas
ficom
sti
stc
adc
xchg
fistp
movs
pop
jl
movs
jo
mov
in
push
adc
sub
dec
mov
xchg
mov
call
and
sub
jae
jecxz
xor
add
test
inc
movs
fsubr
mov
cmp
es
push
xchg
push
inc
adc
jmp
mul
mov
cmps
mov
outs
imul
ss
sub
ja
lock
inc
aaa
xchg
mov
dec
cmp
cmp
and
jnp
ret
push
rol
mov
xor
rcl
pop
push
sahf
pop
int3
pop
es
sub
adc
cs
or
fidivr
mov
ficom
gs
stos
mov
and
clc
loop
mov
movs
scas
mov
jle
inc
sub
push
sub
hlt
mov
sbb
sbb
loope
das
sub
xchg
xchg
into
fstp
adc
mov
inc
xchg
cmp
and
rsm
retf
bnd
inc
jns
push
mov
call
scas
xchg
sbb
icebp
inc
aas
adc
test
sub
cmps
jl
and
mov
push
rcr
sub
popf
add
push
mov
sub
inc
out
push
es
(bad)
(bad)
hlt
cs
pop
pop
push
inc
dec
int3
xor
sahf
(bad)
stc
or
jg
popa
int
stc
sbb
data16
ret
xor
test
sub
jl
imul
mov
icebp
mov
adc
mov
push
fs
fistp
outs
sbb
cmp
pusha
xor
dec
psrad
cld
out
sub
jb
or
push
leave
movs
pusha
cli
fisttp
std
inc
mov
mov
pop
jns
retf
je
add
pop
jmp
mov
ret
popa
popa
scas
je
mov
push
in
out
mov
sbb
inc
push
pop
xor
loopne
sub
mov
dec
adc
outs
in
outs
pop
pop
sbb
imul
add
mov
dec
xor
pop
les
add
and
jp
cmps
push
push
and
push
sahf
push
inc
adc
or
cli
js
repz
mov
dec
fcomp
mov
pop
movs
and
dec
mov
adc
inc
mov
scas
cmp
or
stc
jne
repz
lods
fild
ror
pop
cmp
jmp
gs
cmp
sahf
xor
cmp
jne
jmp
les
fld
mov
in
or
ficomp
ins
dec
dec
test
das
ins
push
das
inc
lahf
sub
xchg
in
aam
bound
sub
lds
or
dec
(bad)
xor
xor
push
dec
jecxz
ds
mov
mov
cmp
or
sub
sti
fistp
cmc
mov
adc
shr
mov
call
retf
aas
enter
enter
ret
mov
mov
in
push
pop
in
push
sti
popa
xchg
(bad)
sar
aaa
jbe
mov
mov
in
cli
aam
add
test
pop
and
pop
mov
pusha
push
fiadd
cmp
scas
sbb
add
dec
int3
aam
shl
iret
pusha
xchg
int3
cwde
leave
retf
shr
jp
mov
lods
sbb
xchg
jg
and
add
lock
xor
ret
wrmsr
(bad)
sti
scas
pslld
mov
jo
sbb
push
test
sbb
mov
dec
stos
jae
aam
lods
movs
and
inc
add
dec
movs
mov
stos
mov
fnstenv
jae
(bad)
cmp
add
sahf
sbb
scas
outs
cmp
scas
pushf
pushf
loopne
clc
push
sub
js
mov
pop
mov
xchg
add
aaa
inc
test
add
sbb
adc
adc
sti
test
lock
mov
inc
mov
inc
or
adc
add
pop
and
not
cmps
pop
movs
test
xchg
(bad)
sub
out
pop
cmp
cld
addr16
rol
mov
sbb
mov
mov
xchg
push
mov
shl
add
jnp
adc
xchg
dec
or
pop
cmps
sub
dec
inc
lods
mov
jbe
inc
fcom
test
mov
out
sub
or
pop
icebp
iret
inc
jnp
shl
retf
pusha
jae
ss
fistp
dec
dec
pop
push
clc
ds
cdq
inc
ss
mov
test
dec
movs
ds
imul
sub
pop
mov
mov
sbb
pop
movs
aaa
in
call
adc
in
mov
mov
and
pop
(bad)
jg
push
fsub
and
rol
aaa
add
in
jbe
clc
pop
pop
aam
ficomp
dec
inc
cwde
mov
mov
(bad)
xchg
push
mov
outs
dec
cmp
in
jg
jnp
mov
dec
cwde
hlt
cs
sbb
mov
mov
xor
stos
inc
std
or
sbb
je
fild
call
sahf
jmp
leave
add
mov
jge
rcl
push
pop
loope
push
xchg
push
lods
pop
xlat
mov
jmp
cmp
xor
xchg
pop
add
xor
inc
inc
pop
jle
pop
fsubr
lea
loop
sbb
dec
mov
lock
lods
(bad)
xor
ss
mov
cld
inc
cmp
or
push
fdiv
pop
addr16
test
inc
(bad)
sahf
dec
das
nop
sub
(bad)
ins
sub
scas
mov
push
push
gs
mov
mov
jbe
adc
jae
or
jae
jmp
adc
and
(bad)
iret
sbb
sub
mov
test
push
movs
leave
pop
dec
js
cmp
nop
sbb
test
fxtract
dec
xchg
mov
in
sbb
inc
pop
stos
mov
or
jle
mov
lahf
pop
adc
pop
add
in
add
mov
pop
(bad)
jle
mov
cmp
cmp
popa
adc
std
outs
and
movs
test
into
test
retf
and
cmp
rep
pop
xchg
cli
dec
or
push
and
jnp
mov
jae
jae
aaa
lds
sub
stos
and
outs
int3
mov
sub
lahf
mov
mov
pop
push
inc
jge
add
jne
mov
inc
adc
aaa
pusha
add
inc
cdq
xor
push
fucomip
sub
mov
jle
adc
inc
mov
ins
fidivr
pop
fisub
ror
sub
adc
sub
hlt
sub
invd
in
cs
push
push
add
push
ret
cmc
outs
push
jne
mov
cli
xor
stc
cmp
push
xchg
test
sub
fld
mov
shr
(bad)
and
xor
inc
mov
or
xchg
loope
cmc
jnp
jno
push
pop
fucomi
mov
aas
push
mov
add
xchg
das
dec
fstp
mov
xchg
retf
pusha
or
es
outs
mov
xchg
ror
xchg
into
inc
fild
adc
lods
aad
pop
jno
pop
push
pop
push
sbb
js
sti
pop
mov
cmp
cmps
cmp
dec
sub
data16
bound
pop
mov
sub
xor
pop
loope
lds
mov
sti
sbb
push
sub
cmp
xor
lods
mov
daa
dec
cwde
in
add
shr
and
xchg
shl
lahf
enter
stc
sub
movs
adc
mov
sar
xchg
mov
sub
ja
pop
mov
dec
dec
js
jp
repz
retf
push
call
clc
ds
repz
xor
cdq
shl
pop
in
aam
dec
sahf
jmp
inc
ins
not
imul
adc
or
jge
adc
or
jle
xchg
stos
in
and
arpl
es
push
sbb
or
cmp
add
imul
(bad)
fcom
cs
rcl
lock
cdq
pop
mov
sti
in
jno
inc
mov
sub
jp
sbb
mov
lods
(bad)
mov
jns
arpl
adc
xchg
dec
fdiv
jno
or
lds
jns
mul
cmp
inc
adc
mov
les
mov
test
pop
xor
cmc
retf
push
mov
sbb
push
xchg
and
or
jge
stos
and
dec
movs
fisub
sub
cmc
lods
scas
add
arpl
retf
pusha
bound
retf
es
sub
sub
adc
sbb
dec
out
push
cmp
jb
or
lds
in
outs
and
das
pop
dec
jmp
xlat
jmp
test
mov
test
aas
(bad)
cmp
stc
mov
mov
mov
je
into
popf
aas
ss
jge
sub
cmp
xlat
jae
or
(bad)
lods
cli
cmps
xor
mov
popa
cmp
mov
push
adc
test
out
ss
xor
stos
and
adc
retf
mov
(bad)
pushf
and
imul
std
dec
daa
mov
mov
imul
retf
repz
adc
es
(bad)
je
cmps
and
inc
inc
and
pushf
fcom
pop
and
test
sbb
sub
xchg
mov
icebp
pop
jns
jbe
test
and
push
(bad)
loop
push
mov
(bad)
cmc
popf
je
mov
pop
das
adc
hlt
inc
hlt
jp
add
mov
rcl
es
ror
or
pop
retf
loop
stos
and
sub
or
(bad)
or
loopne
aam
out
data16
rcr
int3
sar
jnp
sub
xor
es
mov
clc
push
add
fsubr
inc
cmp
pop
popf
xchg
push
lea
fimul
ins
cmp
retf
cmp
xor
popa
cmps
jmp
xor
mov
paddusb
mov
mov
int
sub
lds
ins
mov
out
ss
adc
lock
out
inc
and
out
jp
sbb
push
mov
adc
xchg
inc
imul
push
jge
adc
xor
daa
add
(bad)
mov
mov
or
sti
xor
push
lods
cmp
xchg
mov
dec
jmp
xor
mov
sbb
jl
adc
jmp
inc
sub
push
imul
in
push
inc
xor
daa
sbb
mov
sbb
jge
shl
jo
mov
loopne
cld
mov
out
or
lods
xchg
xor
ins
fs
out
jle
adc
pop
cmp
loope
popa
sahf
jmp
xchg
xchg
(bad)
in
adc
enter
in
cmp
pop
cld
daa
cmp
hlt
push
sbb
jl
jmp
lods
mov
dec
push
add
cmp
push
or
jmp
mov
lods
std
and
pop
jl
sbb
and
ins
jo
pop
daa
and
inc
test
push
lock
push
cmp
cmps
cld
xor
jl
and
arpl
cmp
jecxz
pusha
imul
cmp
pop
std
pop
pop
mov
sub
lock
mov
mov
out
(bad)
xchg
lea
out
xchg
(bad)
jecxz
xchg
mov
adc
push
jge
add
mov
sbb
xor
shl
les
outs
arpl
cmp
lock
ins
mov
shl
std
scas
int3
sub
or
dec
jbe
(bad)
stos
pushf
and
arpl
pop
or
dec
push
push
or
js
mov
out
or
xchg
mov
cmp
pop
fild
dec
(bad)
xor
nop
popa
push
and
sub
in
fistp
jmp
cmp
sub
cmp
cwde
sbb
dec
xchg
ds
js
icebp
shl
push
into
leave
jmp
sub
in
fisubr
inc
stc
push
arpl
cmc
dec
aad
les
idiv
dec
sbb
fisubr
rol
jnp
or
push
mov
xchg
jl
xchg
sti
cmp
or
stos
in
mov
arpl
inc
and
mov
mov
cmps
xor
push
cmp
xor
xchg
jb
inc
mov
ins
push
fst
cdq
fbld
adc
mov
lea
fistp
rcl
sbb
daa
movs
and
in
std
xor
leave
pop
xchg
jge
movs
add
sub
mov
das
or
xchg
mov
stos
cmp
cdq
(bad)
pop
out
pop
push
aaa
jb
in
and
push
sub
popa
jg
out
or
leave
hlt
test
sbb
or
add
mov
sub
cwde
mov
movs
mov
jnp
inc
xrelease
leave
jmp
xchg
xchg
fcmovnu
push
dec
int
push
xor
pushf
mov
pop
cmp
fwait
sbb
cmps
or
sub
jbe
into
and
xchg
stc
mov
rep
push
and
mov
dec
mov
inc
mov
jnp
push
rol
push
sbb
cmp
and
cmps
dec
call
das
mov
sub
add
sbb
fs
xor
clc
push
mov
jno
outs
in
add
sbb
leave
sar
int3
mov
arpl
test
mov
pop
sahf
pushf
push
loope
sar
aas
dec
jmp
sbb
sbb
xlat
pop
fadd
ret
xor
pop
in
add
jecxz
jp
cmp
arpl
push
mov
jo
pop
push
xor
mov
jae
and
div
cmp
out
movs
(bad)
clc
mov
shl
jmp
pop
sbb
dec
jns
or
cwde
pop
std
xchg
ds
imul
das
shl
mov
jns
das
sbb
std
stc
push
test
sbb
push
xor
pop
push
clc
repz
dec
adc
sub
fstp
popf
aam
(bad)
cwde
xchg
rcr
and
stc
push
sti
push
out
jge
sub
or
test
xor
mov
movs
xlat
icebp
pop
dec
dec
or
jbe
(bad)
inc
xchg
inc
loopne
inc
out
pusha
xor
xchg
lea
ds
xor
mov
stc
enter
push
int
push
fistp
std
sub
add
ins
xor
add
xor
ins
push
inc
xlat
data16
cmp
aaa
test
inc
cwde
sub
jecxz
add
mov
cs
sbb
fwait
inc
aas
in
mov
adc
je
adc
adc
iret
xchg
adc
nop
mov
jmp
ret
aas
mov
cld
pushf
gs
stos
push
dec
popa
imul
repnz
data16
jae
jnp
xchg
pop
not
add
add
shr
dec
in
je
and
pushaw
lock
pop
cmp
test
jecxz
shl
or
and
cmc
xor
pop
mov
adc
(bad)
int3
lea
inc
or
call
(bad)
enter
mov
mov
(bad)
cmp
pushf
and
in
retf
pop
mov
test
(bad)
xlat
or
mov
nop
(bad)
(bad)
pop
xchg
ret
outs
adc
shr
sub
xchg
push
inc
xor
mov
cwde
pop
addr16
sub
sbb
or
mov
(bad)
sub
jnp
lock
xchg
call
clc
push
cmovge
sbb
pusha
sub
(bad)
xchg
fisttp
cld
jg
dec
je
mov
ficomp
adc
inc
gs
loopne
scas
or
sub
adc
adc
shl
test
mul
sbb
std
shr
arpl
push
jmp
jp
push
js
test
jae
push
not
test
ud2
fwait
mov
adc
pop
in
ins
dec
xor
jae
pop
mov
(bad)
xchg
jle
fcmovb
or
call
sbb
sub
inc
lods
and
(bad)
into
pop
arpl
imul
add
loop
jecxz
call
stc
lock
int3
jg
cmp
fistp
mov
(bad)
aam
int
adc
push
adc
sbb
aaa
sub
ret
sub
imul
xlat
add
push
scas
lea
xor
inc
popa
repnz
clc
ins
pop
mov
inc
mov
and
movs
in
or
pop
push
mov
(bad)
jmp
int3
loopne
cmp
shl
pop
dec
jnp
dec
push
jb
push
pop
add
(bad)
mov
ins
repnz
xchg
jg
mov
cdq
xchg
jnp
dec
jmp
or
fs
lds
dec
sahf
cld
aaa
pop
movs
int3
jecxz
aad
pop
pop
mov
loopne
pop
hlt
shl
cli
mov
ja
add
loope
imul
lea
push
out
test
imul
dec
sub
shr
shl
mov
jle
push
inc
or
sub
and
pop
hlt
mov
or
sbb
dec
js
push
cmp
popa
lock
out
jne
push
xchg
mov
cmp
mov
(bad)
sub
(bad)
pop
mov
xor
cli
push
ins
sub
in
sahf
loope
and
inc
and
push
jmp
dec
jae
pop
inc
push
mov
in
xlat
test
adc
arpl
into
rcl
aam
push
cmp
inc
or
pop
sub
cmp
adc
xchg
adc
stc
sub
out
xchg
push
ins
cmc
mov
pop
mov
fiadd
ret
sub
mov
pop
(bad)
out
cmps
push
cmp
fistp
nop
dec
sub
push
lods
iret
add
ins
clc
and
sbb
inc
(bad)
lock
jnp
jmp
xchg
loopne
dec
mov
mov
pop
mov
dec
mov
leave
neg
hlt
mov
movs
mov
mov
pusha
dec
fs
out
fwait
mov
mov
cmp
xchg
sbb
jmp
sub
jmp
xchg
dec
cs
daa
mov
sbb
pop
movs
mov
jmp
aam
push
push
pushf
pop
mov
xor
fnstenv
jge
call
fistp
mov
in
in
stos
jge
mov
xor
add
mov
cmps
cdq
pop
mov
movs
mov
bound
xlat
or
aaa
cwde
sbb
je
in
cmc
cmp
ror
cmp
or
lahf
and
jecxz
retf
stc
vpshufhw
inc
fwait
call
inc
imul
scas
ds
or
sub
push
mov
cmp
xchg
and
es
cmp
addr16
xor
sub
outs
or
call
(bad)
fistp
inc
mov
push
imul
or
sub
jo
or
fcmovnbe
adc
mov
retf
fldz
push
pop
idiv
mov
jle
sbb
call
fcmovb
adc
mov
sbb
xor
cmp
cwde
retf
(bad)
(bad)
(bad)
loop
out
jae
mov
fwait
inc
inc
cmps
or
(bad)
int3
test
(bad)
mov
xchg
inc
xchg
mov
jbe
or
inc
pop
retf
pop
sti
nop
jle
retf
(bad)
cli
adc
out
pop
cmp
pop
xchg
pop
or
jl
in
cmp
mov
mov
xor
mov
pusha
sbb
fs
icebp
pop
shl
int3
pop
cmc
outs
cmc
std
(bad)
std
jnp
xchg
shr
inc
jae
sub
xor
ficom
or
mov
mov
or
leave
push
fs
and
bts
pop
pop
enter
lahf
out
je
jbe
jno
cwde
mov
push
shl
add
mov
cmps
sub
jo
jnp
ret
push
sti
das
dec
adc
sub
inc
xor
lds
and
(bad)
fs
(bad)
and
and
(bad)
xchg
mov
adc
inc
add
ja
mov
cmp
jg
jns
fistp
fild
into
mov
push
sub
mov
jbe
(bad)
shr
pop
and
xor
das
adc
push
call
stos
mov
push
sub
ss
sbb
cmp
inc
jo
retf
xor
leave
mov
sub
popf
mov
lock
dec
ret
les
stc
mov
xchg
dec
test
dec
inc
aas
add
sub
jne
pop
jno
inc
cli
mov
jo
std
popf
dec
xchg
mov
push
(bad)
fldenv
rcpps
rcl
adc
retf
xchg
shr
test
xor
push
mov
add
mov
cmp
test
stos
mov
ins
xor
dec
pop
mov
add
cmp
daa
retf
mov
enter
or
rcr
adc
sbb
sbb
cld
aam
neg
data16
dec
into
in
push
aam
lods
pop
xchg
dec
jle
pop
cmp
mov
das
sbb
pop
pop
(bad)
jnp
jl
adc
pushf
fsubr
jae
cmp
fs
lahf
les
add
jmp
loop
mov
int3
mov
jnp
(bad)
iret
adc
cmp
(bad)
cld
ret
and
icebp
cmp
loop
sub
imul
aam
sahf
scas
loope
imul
outs
pusha
stos
pop
test
aad
adc
test
data16
(bad)
mov
cmps
inc
dec
test
dec
push
add
pusha
call
nop
add
push
and
pop
in
div
mov
or
test
cmp
cmc
mov
int3
lahf
addr16
sti
rcr
pop
jl
loope
inc
stos
pop
jmp
xor
push
movs
mov
out
xor
inc
mov
sbb
and
sbb
lods
lock
mov
icebp
mov
lock
les
jge
pop
je
inc
inc
loopne
mov
or
xchg
jo
clc
fcmove
cmp
jo
bound
add
pushw
inc
inc
jge
mov
enterw
add
mov
mov
inc
imul
push
xor
adc
mov
data16
fst
lods
cmps
and
rcr
aas
es
ror
and
pop
les
inc
dec
mov
and
jle
inc
sbb
add
inc
mov
(bad)
pop
(bad)
push
mov
clc
test
mov
mov
push
ins
out
jbe
lods
and
leave
dec
xchg
ss
mov
bound
sbb
xchg
nop
fild
cmp
dec
or
arpl
inc
iret
dec
pushf
sbb
xor
call
and
test
push
enter
call
test
rcl
add
sahf
or
and
dec
das
jo
cmp
cmp
stos
jmp
dec
test
push
cmp
jmp
inc
inc
cli
mov
mov
loopne
ret
inc
cmc
(bad)
xchg
add
push
inc
in
xchg
pop
sar
dec
dec
fmul
inc
pop
mov
xchg
in
lods
inc
loop
adc
sbb
test
pop
jmp
(bad)
dec
sbb
scas
rcr
mov
cmc
pop
daa
xchg
test
dec
cmp
fisubr
xchg
dec
ins
imul
xor
pop
leave
js
push
cmp
mov
fucomip
std
mov
popa
mov
or
fwait
nop
xchg
cli
push
sbb
sbb
sti
stos
mov
iret
call
push
mov
in
lods
jmp
jecxz
call
pop
imul
loop
xor
jl
pop
adc
stos
js
xchg
out
mov
push
(bad)
jo
call
(bad)
sti
rol
jb
and
fstp
ret
cld
aam
stos
je
lahf
test
out
and
int
cmp
out
inc
cmp
cmp
test
cmps
mov
cwde
fdiv
test
mov
cld
jle
les
das
test
push
das
and
leave
or
xchg
dec
out
cwde
push
mov
dec
not
not
les
mov
mov
or
pop
(bad)
mov
push
(bad)
xlat
xchg
dec
lods
shl
test
fidivr
cmc
(bad)
mov
lock
sub
cld
ror
mov
cdq
or
hlt
cmp
xor
jno
stc
hlt
fcomp
sub
jo
mov
shr
or
fdivr
push
sub
sbb
ins
push
ins
sbb
xor
loopne
aaa
cmp
pop
bound
aas
out
neg
(bad)
mov
mov
xchg
push
add
call
jae
mov
lods
ss
ss
mov
fmulp
cld
js
inc
push
inc
ret
or
icebp
rol
xlat
js
mov
shl
inc
imul
je
and
iret
jp
or
inc
lods
sub
sbb
das
js
or
adc
outs
dec
and
test
add
jmp
sub
out
aas
test
jns
sbb
icebp
mov
jmp
daa
push
iret
inc
ja
mov
xchg
sbb
sahf
ret
push
jmp
inc
sub
dec
cmp
loop
test
inc
ret
jae
pop
adc
adc
rcl
adc
jmp
data16
push
cli
gs
push
retf
jne
stos
push
xor
xchg
jae
mov
(bad)
jmp
outs
mov
mov
sar
jo
adc
out
mov
push
arpl
(bad)
sub
les
sub
push
mov
xchg
ret
movs
inc
imul
sbb
sbb
fldcw
fistp
imul
pusha
sahf
jmp
sub
pop
mov
and
fiadd
cld
mov
xchg
dec
xlat
cmp
fbld
jns
inc
jge
sbb
jmp
jae
mov
adc
mov
jo
call
push
shl
lahf
adc
pop
or
inc
mov
adc
iret
jo
jmp
lea
mov
rol
pop
add
sahf
xor
nop
aas
arpl
push
outs
stos
enter
cmc
sbb
retf
rol
arpl
iret
cmp
shl
leave
arpl
mov
xor
mov
fst
icebp
mov
xchg
cwde
sbb
test
mov
stc
mov
mov
and
lods
stos
pop
fistp
mov
xchg
mov
aad
inc
mov
ins
js
sub
clc
pop
inc
lahf
dec
or
xor
into
ficomp
bound
sub
or
test
lea
jecxz
push
loope
icebp
pop
movs
or
mov
gs
add
je
sbb
push
add
cmp
outs
xor
cwde
inc
mov
ja
and
inc
pop
push
jne
push
ins
scas
cli
pop
fs
in
es
jnp
add
sbb
dec
jge
test
sub
mov
loop
push
fsub
inc
fadd
jno
adc
sti
pop
xchg
movs
lahf
repnz
aam
stos
shl
les
sub
or
mov
fimul
cmc
xor
pop
and
cmp
push
mov
inc
push
sub
repz
test
ja
pop
scas
jne
or
lods
jmp
mov
pop
sbb
out
jne
stos
cmp
dec
push
repz
lods
sbb
repz
imul
shl
fdivr
lea
pop
loopne
mov
jns
fiadd
push
sahf
xchg
(bad)
add
inc
ret
push
push
fcomp
and
sub
push
xlat
pop
mov
or
mov
mov
(bad)
xchg
inc
sbb
movs
hlt
push
out
lea
out
sub
mov
out
lds
mov
cmp
lods
pop
bnd
mov
ds
popa
test
dec
fs
or
sbb
std
or
jecxz
adc
test
out
gs
jb
pop
mov
call
xchg
push
xor
lahf
dec
pop
add
ins
add
es
(bad)
lods
ret
adc
in
fistp
ins
loop
cmp
dec
mov
add
mov
out
jmp
(bad)
std
cli
sti
mov
cli
rol
ret
es
push
fcomi
stc
sub
lods
popa
sub
add
jmp
dec
(bad)
cmp
ins
dec
sbb
mov
jecxz
dec
cmps
leave
neg
fisttp
lock
(bad)
ds
call
mov
mov
movs
sbb
adc
push
(bad)
xchg
sbb
cmp
cmp
ret
je
into
movs
clc
sub
js
cmps
jmp
jo
adc
enter
sbb
sbb
xor
jae
dec
jbe
out
jmp
lods
xchg
in
xchg
xchg
adc
das
fcom
or
cmp
add
mov
or
ror
jge
fs
inc
xchg
cmp
xor
add
push
sti
call
mov
std
pop
ins
and
int3
je
data16
out
add
rcr
mov
into
jecxz
pop
movs
pop
inc
dec
(bad)
jmp
jle
retf
popa
pop
mov
fisub
ss
int
mov
es
jmp
test
xchg
test
xchg
stos
ins
pop
in
outs
push
daa
mov
iret
enter
dec
inc
in
jbe
push
inc
cmp
jg
xchg
mov
inc
sar
pop
mov
cmp
fcmovnu
out
jnp
and
daa
imul
adc
jns
aaa
xor
(bad)
sahf
ins
push
jns
fstp
dec
xchg
(bad)
jno
cli
mov
pushf
inc
push
mov
arpl
into
mov
mov
or
pop
scas
adc
repz
push
and
mov
push
lea
out
xor
or
and
cmp
sub
mov
jmp
lods
inc
inc
aas
in
mov
cdq
test
cmps
mov
jmp
and
shr
mov
stos
out
fild
popa
or
mov
lds
add
dec
jle
sti
test
mov
ffreep
loopne
mov
fsubr
adc
sbb
xor
push
sbb
dec
dec
push
xor
dec
popa
(bad)
scas
cmps
int3
jge
(bad)
cld
mov
rol
(bad)
cmc
cmp
in
jo
bound
jb
xchg
xchg
(bad)
pop
mov
sbb
int
stc
cwde
scas
dec
pop
les
addr16
cmp
sub
sti
fld
in
sub
daa
(bad)
and
movs
jns
fdivr
dec
adc
adc
inc
cmp
pop
pop
jo
cmp
fs
xor
loopne
data16
test
sub
dec
aas
mov
or
cwde
xchg
loope
hlt
aaa
adc
add
retf
popf
cmp
inc
dec
and
daa
push
stc
mov
ja
mov
fs
adc
out
ins
je
adc
popa
rcr
in
xor
lods
mov
inc
fldenv
xor
push
or
cmc
inc
mov
mov
shl
xlat
movs
adc
fcom
jbe
sbb
cmp
mov
adc
jmp
aaa
adc
je
mov
xchg
cmp
lock
out
jnp
movs
xchg
dec
and
lds
mov
mov
scas
sub
jb
aam
jle
xor
loop
sub
dec
ficomp
or
cmovg
call
jmp
popa
pop
mov
test
sub
stc
sub
mov
lock
mov
cmc
xor
sub
xchg
adc
cdq
into
test
leave
ret
icebp
mov
add
aam
cmps
cld
inc
mov
xchg
ins
popf
pushf
jle
inc
push
ss
adc
retf
aas
or
xchg
mov
test
push
stc
mov
cli
jmp
jae
int3
pop
loopne
mov
idiv
mov
sti
cmps
cmc
ss
cmp
push
sbb
or
mov
or
in
mov
pop
xchg
jnp
es
aam
loopne
xor
cwde
ins
fcomp
out
mov
jbe
lods
jb
xchg
dec
sbb
outs
cmp
data16
adc
pop
hlt
je
ror
inc
pushf
fld
cmp
loopne
es
xchg
fldcw
cdq
or
fistp
inc
adc
hlt
cli
or
sar
inc
lds
pop
loope
jecxz
clc
stos
mov
mov
call
outs
xor
mov
retf
in
fmul
in
ficom
rol
pop
pushf
adc
adc
mov
sti
adc
mov
mov
fistp
push
lock
mov
cld
imul
jae
sbb
cmp
fwait
and
(bad)
neg
outs
sahf
mov
(bad)
lods
jne
add
add
idiv
pushf
ja
push
mov
xor
aaa
mov
ins
jecxz
inc
dec
(bad)
leave
lahf
cli
cmps
sbb
push
stos
sub
dec
xlat
xchg
repz
outs
outs
fist
or
sbb
add
(bad)
(bad)
push
mov
test
test
mov
sub
xor
adc
mov
mov
push
cdq
(bad)
pop
adc
xchg
call
adc
mov
jo
jp
in
dec
aam
mov
leave
imul
shl
jmp
or
fmul
hlt
xor
(bad)
gs
adc
xchg
ja
cmp
lahf
aad
sub
icebp
or
cmp
sub
das
cdq
xor
and
(bad)
jbe
add
clc
xchg
fst
loopne
js
push
(bad)
mul
xor
cmps
fisttp
icebp
push
cmp
cmp
sub
fstp
push
arpl
push
dec
cmp
sbb
rep
les
ds
add
push
mov
mov
imul
mov
mov
cmp
into
push
ins
dec
pop
xor
mov
jmp
js
sahf
jmp
adc
test
or
add
mov
fistp
pusha
and
xor
sub
popa
(bad)
push
pop
shl
mov
inc
cdq
dec
into
jg
adc
jle
xor
xchg
fmul
cmps
pop
mov
dec
sub
cmps
jno
popf
dec
mov
add
fst
fidivr
popa
outs
ret
mov
clc
lds
fwait
pop
sbb
add
pop
mov
push
inc
xlat
call
enter
leave
push
pop
retf
pushf
cmp
outs
inc
stc
jl
add
jmp
sub
in
arpl
(bad)
clc
and
xchg
ror
out
shl
push
fwait
add
add
xchg
aaa
jmp
test
or
xchg
lods
push
test
add
jg
leave
pop
and
std
sub
mov
adc
ja
cmp
fidivr
dec
(bad)
mov
jl
dec
call
inc
sub
jbe
adc
dec
cmc
mov
sti
stos
ja
or
cmp
lea
into
fwait
jp
ins
jecxz
fistp
ins
or
mov
imul
mov
mov
xchg
int3
dec
and
and
bound
pop
fmul
and
xchg
add
mov
push
fwait
sub
neg
xchg
gs
lahf
mov
retf
cmp
or
xor
mov
mov
cdq
jb
rcl
mov
sub
add
sar
push
icebp
push
mov
pavgw
test
adc
mov
sbb
fist
xor
xor
dec
push
inc
aas
(bad)
loopne
outs
dec
ret
clc
loop
inc
pop
in
pop
pop
and
arpl
lods
xchg
push
movs
jmp
jmp
inc
jecxz
cmps
pop
add
or
sub
jne
fistp
xchg
bound
pushf
test
or
test
mov
pop
push
xor
pop
dec
mov
loope
cmp
lds
mov
mov
xor
xor
outs
(bad)
mov
pop
mov
sti
inc
jg
ja
(bad)
arpl
jmp
inc
loope
pop
repnz
in
dec
mov
push
pop
and
iret
out
shl
sub
inc
frstor
xor
add
mov
retf
je
inc
push
push
inc
les
jns
or
pop
repnz
push
in
std
je
inc
or
fbstp
shr
xchg
xor
dec
cwde
dec
push
fist
(bad)
mov
mov
pop
sub
xor
in
mov
rol
test
inc
pop
mov
dec
aam
ret
arpl
push
stos
jbe
in
cmps
retf
iret
push
sbb
cs
ret
nop
ja
aam
cmp
pop
out
js
repnz
stos
retf
fsub
int
jmp
cli
sbb
fcmove
inc
add
xchg
push
out
out
iret
addr16
mov
and
shr
int
pop
fiadd
sbb
out
sbb
pop
das
sbb
sbb
pop
pusha
sub
neg
fnstcw
or
add
inc
lahf
test
and
jns
mov
inc
imul
shl
rcr
loop
and
and
(bad)
ja
mov
dec
mov
loope
in
ror
sbb
and
repz
push
(bad)
push
xchg
add
add
xchg
js
cmc
jecxz
cmp
inc
adc
or
xchg
xor
add
test
cdq
(bad)
xlat
adc
cmps
pusha
rcl
mov
cmp
xchg
out
mov
mov
std
fs
jecxz
lfs
dec
xchg
fild
dec
xchg
cld
aam
jb
imul
lods
nop
mov
pop
inc
repz
mov
aas
bound
mov
mov
xchg
ret
and
stos
jg
sbb
xor
sub
in
or
xchg
cmp
rcl
mov
mov
dec
mov
pop
shl
push
jbe
jmp
mov
jbe
mov
mov
xchg
cmp
cmp
sti
sbb
mov
xchg
or
mov
cmp
push
imul
int3
xchg
loopne
xor
mov
jne
pop
iret
call
lds
jmp
je
pop
mov
outs
(bad)
lahf
jno
adc
xchg
jecxz
fmul
addr16
mov
push
rcl
out
pop
cmps
sbb
iret
inc
imul
mov
cwde
div
call
jmp
adc
jbe
es
adc
test
add
aas
out
sbb
ror
sbb
out
loopne
mov
addr16
pop
(bad)
inc
pushf
popf
leave
pushf
cmp
bound
and
imul
xlat
cmp
mov
or
aad
and
in
leave
xor
xchg
add
or
ins
dec
dec
xchg
jp
dec
push
rcr
adc
popf
popf
fsubr
ins
test
sbb
sub
fwait
adc
mov
fsubr
mov
sub
inc
and
push
out
into
rol
sub
mov
dec
xchg
mov
or
loope
nop
xor
add
mov
mov
fwait
(bad)
cli
mov
imul
ins
inc
sbb
push
cli
pop
mov
lahf
div
jne
xor
ds
pop
dec
sti
jp
inc
mov
jge
push
xchg
mov
sahf
outs
pushf
xchg
out
popf
dec
push
push
add
rol
xchg
xchg
(bad)
in
ret
imul
jp
dec
and
imul
stos
push
loope
and
mov
into
in
sti
nop
popf
pop
sahf
in
loope
jbe
xor
push
cmc
sbb
and
iret
or
push
cdq
sbb
daa
(bad)
in
xor
out
stos
stos
sub
push
cmp
jbe
xchg
xchg
cmc
xchg
outs
inc
cmp
in
scas
repnz
scas
cmc
mov
dec
aam
rol
mov
cld
push
sub
outs
cmps
fstp
pmullw
jns
lock
aas
int
push
jne
sbb
mov
add
add
cmc
mov
adc
repz
(bad)
mov
ins
inc
shl
mov
es
out
inc
loope
inc
inc
push
(bad)
cmp
cmps
addr16
push
cdq
jns
jmp
in
and
int
lds
ds
imul
lock
in
aam
out
movs
repnz
push
dec
not
jp
shl
div
(bad)
sbb
jb
jmp
xchg
shr
push
data16
push
fisttp
sbb
aas
pop
adc
mov
fstp
add
cli
test
mov
inc
mov
in
cmc
in
xchg
pusha
(bad)
call
mov
popa
cwde
jecxz
retf
inc
fisub
lods
enter
xchg
cmp
and
outs
xlat
cmp
sbb
stos
ret
sub
mov
xchg
pop
mov
cmp
popa
sub
pop
sub
or
ss
mov
fistp
aad
xchg
jmp
shr
(bad)
and
mov
dec
popa
ret
jo
mov
popf
add
sbb
sbb
fcomp
int
lock
out
ins
mov
out
sbb
push
sbb
xchg
int
fwait
add
gs
in
int
xchg
dec
fild
popa
mov
xor
in
xlat
and
jmp
adc
bound
sub
inc
das
stos
mov
fcomp
fwait
pop
mov
push
inc
mov
js
test
nop
xor
in
icebp
ins
ret
cmp
jmp
test
jmp
(bad)
mov
fld
xor
(bad)
cwde
cs
rcl
mov
mov
sti
sub
fmul
mov
scas
cmc
es
test
call
ror
jge
mov
dec
mov
(bad)
jo
dec
add
std
sub
pop
xchg
jbe
ret
cmp
and
lods
dec
jo
inc
(bad)
outs
pop
push
cmp
gs
ss
ins
lds
mov
and
dec
mov
bound
outs
mov
jae
mov
mov
outs
xchg
push
in
xor
clc
inc
cdq
jno
outs
rol
pop
imul
ja
rol
xor
lahf
add
rcl
inc
xor
repz
scas
addr16
jmp
inc
fstp
(bad)
add
mov
adc
bound
adc
(bad)
sub
cmps
xchg
cld
cs
push
or
fwait
jae
or
push
out
(bad)
out
test
pusha
mov
sub
cld
xor
clc
dec
gs
out
arpl
xlat
stc
xchg
jmp
sbb
pop
fnstenv
sub
aaa
xlat
add
push
hlt
cmp
mov
inc
pushf
and
popa
xor
mov
call
jmp
test
pop
push
ins
xchg
mov
pop
int3
xchg
mov
push
jns
and
adc
clc
pop
pop
and
loopne
aaa
je
mov
ins
cmc
mov
push
cmps
in
fmul
daa
and
jecxz
cmp
cmp
retf
imul
stos
test
shl
and
mov
in
mov
pop
fs
push
xlat
lahf
movs
ins
push
shr
jle
pop
sbb
mov
pop
xor
aaa
jle
mov
imul
adc
hlt
gs
pop
xchg
adc
dec
idiv
test
fld
sub
dec
lods
mov
cli
pushf
push
js
push
push
mov
jae
mov
xor
jns
in
push
imul
int
cmp
sub
out
ret
bound
lea
sti
(bad)
jmp
push
lods
inc
jmp
and
and
jge
call
sahf
dec
mov
mov
mov
sbb
mov
(bad)
repz
adc
and
(bad)
loope
jg
mov
cmp
or
fisub
mov
mov
enter
mov
and
adc
adc
sbb
repnz
out
push
out
ret
call
shr
or
xchg
mov
mov
dec
push
test
aad
add
add
inc
and
ins
cs
inc
mov
loopne
movs
int
mov
scas
sbb
call
(bad)
cmp
mov
shr
adc
out
lock
sub
mov
and
xor
add
inc
retf
cwde
cmp
ja
lahf
cmp
jmp
loope
and
fnstcw
cmp
push
push
clc
jmp
jmp
sub
push
imul
sti
popa
add
outs
pop
push
pop
lock
shr
or
call
xor
pop
rcl
push
xor
and
fcomp
call
inc
and
dec
or
sub
fisubr
xor
ror
jmp
sub
call
jno
or
fist
cdq
scas
mov
ret
fstp
xchg
inc
aaa
dec
jg
pop
in
stc
out
out
adc
in
sbb
sbb
inc
and
rcr
fs
in
test
or
xchg
loopne
test
sbb
pushf
in
mov
pop
or
imul
outs
jp
add
xchg
(bad)
idiv
gs
imul
mov
sbb
pop
adc
es
call
movs
add
lods
or
adc
add
ficom
retf
adc
lea
(bad)
shl
cmc
cwde
hlt
ds
ss
lods
pushf
into
paddd
pop
std
out
enter
stos
imul
test
cs
and
fs
cmp
fdiv
push
add
popa
cmps
mov
cmp
aas
adc
push
test
xor
scas
mul
and
jo
mov
mov
jno
or
rcl
jns
dec
dec
ds
xor
cmp
test
push
cmps
lahf
int3
adc
out
gs
int3
mov
enter
sub
or
and
arpl
jmp
cmp
test
xchg
mov
stc
and
leave
mov
ret
arpl
shl
lods
mov
dec
pushf
and
hlt
imul
inc
pop
or
sbb
inc
push
aam
add
mov
int3
ss
outs
xlat
lahf
lock
mov
in
mov
xor
cmp
pop
popf
xor
fist
dec
cwde
sub
mov
sub
push
inc
xchg
ret
add
jno
push
push
jl
sub
push
fisubr
dec
cmp
dec
pop
js
es
(bad)
lahf
cmp
jmp
in
cmp
xchg
test
(bad)
std
hlt
cmp
aas
mov
mov
inc
fsub
push
out
jg
or
call
cdq
sbb
aaa
ja
jp
aam
sub
add
adc
mov
pop
cmc
add
xor
repnz
out
pop
call
test
test
xchg
mov
stc
adc
sbb
push
in
mov
loopne
ret
call
into
push
sub
add
xor
(bad)
fimul
sbb
nop
out
xchg
(bad)
cli
scas
and
xlat
ror
js
dec
lods
sub
loope
and
mov
push
inc
or
retf
sub
mov
push
call
movs
fcomp
(bad)
cld
cmp
push
pop
or
xor
retf
mov
mov
out
inc
fcom
push
xchg
mul
movs
cmp
mov
fdivr
xor
lods
xchg
add
xor
mov
push
mov
stos
test
dec
inc
cmp
lods
inc
sbb
fs
adc
xchg
cs
popa
out
add
adc
and
jl
out
inc
clc
out
enter
dec
sbb
dec
scas
jg
into
xchg
stos
mul
sbb
nop
lea
jle
call
in
xlat
pop
jg
jb
inc
scas
pop
dec
jmp
push
je
stc
cli
inc
iret
ins
lahf
inc
push
fwait
sbb
shr
sub
mov
clc
pop
sub
loope
aaa
push
jae
xchg
jb
add
xchg
test
nop
and
jnp
jnp
(bad)
dec
push
dec
adc
mov
inc
(bad)
movs
adc
sbb
xchg
outs
xor
jno
mov
in
pop
add
lods
aas
inc
sbb
jnp
xchg
(bad)
outs
sbb
mov
xchg
iret
mov
mov
cmp
jno
sbb
mov
sub
add
xchg
mov
push
stc
out
xchg
adc
cmp
adc
cmc
push
or
fistp
mov
fldenv
(bad)
adc
popf
fwait
dec
jg
hlt
xor
jno
sbb
xor
pop
call
cmps
sbb
mov
arpl
jle
inc
cmps
test
mov
xlat
mov
adc
daa
push
nop
cmp
or
das
loopne
out
mov
test
(bad)
outs
push
mov
mov
mov
add
lds
mov
sbb
iret
repnz
and
add
mov
jo
mov
gs
mov
jae
jge
movs
adc
cdq
cmc
and
inc
xchg
lock
sub
pop
sub
push
or
cmp
rcr
cmps
push
inc
das
mov
sub
lods
shr
push
test
scas
sub
scas
push
mov
fidivr
xlat
sub
movs
xchg
xor
dec
cmc
jae
les
adc
mov
imul
imul
push
stos
jns
or
test
mov
jmp
dec
sbb
mov
pop
mov
mov
cmc
retf
sbb
loopne
jecxz
and
add
cmp
rcl
scas
pop
push
push
push
inc
movs
bound
xor
or
pushf
in
icebp
fsub
sbb
xlat
mov
fwait
enter
ficom
in
sar
jmp
push
loopne
rol
add
test
pop
addr16
popf
and
jecxz
les
add
push
xchg
mov
mov
es
or
xchg
fimul
jbe
arpl
cli
push
ins
xor
shl
sbb
sti
mov
xor
adc
jae
pop
mov
in
mov
daa
or
dec
mov
sub
popf
and
sub
cs
popa
sbb
mov
sar
stc
sub
neg
add
xor
(bad)
pop
ja
xchg
cmp
dec
pop
rol
pop
movs
inc
cs
pop
ins
xchg
jl
inc
dec
or
push
fist
cmp
jne
inc
scas
xchg
xchg
ds
clc
sub
push
xor
jae
sar
test
jbe
mov
mov
inc
add
lods
pushf
adc
rol
in
push
xchg
test
xchg
mov
test
pusha
movs
mov
lods
mov
mov
ds
js
cmps
into
aam
and
fdiv
xchg
push
adc
retf
xchg
and
push
mov
retf
add
or
(bad)
mov
mov
aad
mov
into
xchg
fild
jae
lahf
jl
dec
shl
or
js
and
dec
cmp
pop
into
adc
cwde
push
dec
pop
in
cwde
jo
dec
push
call
sub
add
call
or
pop
cmp
cmp
gs
jno
jne
fild
xchg
fsubr
sahf
push
out
xchg
xor
or
idiv
xor
sar
leave
cmp
test
pop
test
jae
add
not
cmps
sbb
xor
or
dec
mov
in
cdq
cdq
inc
mov
pop
mov
mov
(bad)
jnp
jmp
pop
out
fist
add
mov
xchg
sub
mov
push
jne
sbb
jp
sub
aam
jmp
mov
into
xchg
jl
dec
nop
jmp
push
inc
aam
and
mov
inc
lea
hlt
inc
fstp
movs
push
out
(bad)
cmc
mov
js
inc
pushf
stc
lods
inc
mov
stc
adc
ja
nop
stos
fidivr
pop
cmp
jge
inc
sbb
sbb
in
inc
fild
gs
jp
adc
ficom
dec
sub
dec
xor
xor
stc
mov
pop
lock
leave
dec
fdivr
ins
xchg
inc
enter
(bad)
in
test
mov
movs
leave
mov
dec
mov
in
je
push
cmps
jne
xor
dec
pushf
imul
aam
nop
add
fmul
cmp
hlt
inc
repz
sbb
inc
xchg
or
repz
adc
call
mov
xchg
in
and
dec
add
xlat
mov
pop
pop
(bad)
pop
(bad)
mov
test
ret
mov
push
xchg
retf
xor
aaa
loope
adc
xchg
adc
test
mov
sbb
sub
into
cdq
sub
xchg
js
mov
inc
scas
pusha
out
and
sbb
je
shl
test
and
mov
pop
add
rol
inc
pop
pop
dec
sahf
dec
outs
or
aaa
or
add
jae
mov
mov
fstp
aad
shr
xor
mov
sub
pop
sti
out
ret
jmp
xchg
mov
out
adc
mov
out
add
repz
fnstcw
aaa
stos
pop
cs
test
lock
pop
clc
xchg
retf
scas
add
pop
loope
pop
mov
jne
ins
in
neg
mov
push
sub
jle
loopne
mov
in
or
scas
adc
push
shr
or
fmul
mov
cdq
sti
fidiv
mov
sbb
adc
ins
aam
test
push
mov
jmp
js
cmp
cmc
pushf
retf
mov
(bad)
stc
sbb
cld
test
(bad)
push
mov
je
imul
test
fnop
in
bound
repnz
pop
js
push
mov
aam
(bad)
cld
and
lock
add
sbb
mov
scas
cli
ret
clc
sbb
dec
test
jno
add
pop
(bad)
pushf
loop
or
dec
cmp
add
(bad)
(bad)
sbb
test
dec
cmp
pop
inc
addr16
dec
call
dec
shl
test
pop
jo
call
stc
push
pop
or
lods
inc
add
mov
jl
inc
lahf
pop
arpl
push
cdq
aas
fld
sbb
(bad)
pop
test
jne
es
add
and
out
loopne
(bad)
sub
sub
mov
shl
push
(bad)
mov
cmp
inc
cdq
sti
dec
test
in
imul
add
mov
call
stos
pop
adc
sub
in
inc
or
cmp
add
mov
xchg
jmp
sbb
pop
ss
test
sbb
inc
dec
mov
mov
push
and
push
cld
jne
iret
sbb
jmp
jl
jae
fiadd
push
leave
xor
fsub
xlat
push
mov
jae
cmp
inc
(bad)
out
fld
pop
cmp
mov
sub
pop
dec
push
xor
or
(bad)
sahf
push
out
mov
imul
fwait
pop
jl
xchg
mov
push
pop
mov
ja
ret
push
mov
imul
mov
pop
jmp
adc
xor
jge
and
mov
xchg
dec
pop
sbb
into
adc
cmc
pop
and
adc
mov
inc
push
xchg
out
test
retf
lods
sar
adc
test
(bad)
(bad)
ds
in
mov
pop
sahf
mov
lahf
cli
and
push
das
rcl
adc
sbb
inc
call
push
rcl
lods
fwait
out
pop
mov
add
call
rcl
or
dec
jmp
mov
xchg
mov
out
xor
(bad)
adc
je
ins
fwait
and
xor
popa
ins
push
lds
mov
out
inc
xor
shr
fmul
jmp
mov
loopne
mov
ss
movs
sub
stos
imul
(bad)
rcr
repnz
sbb
ror
stc
cld
sbb
mov
cmp
dec
outs
nop
hlt
pop
cs
xchg
imul
inc
xor
ins
nop
pusha
pushf
add
call
pop
adc
inc
(bad)
setns
cmp
adc
test
pop
pusha
test
cwde
retf
adc
mov
jge
sar
cmp
xchg
loop
les
mov
cmp
mov
cmp
xlat
or
ret
sbb
push
pop
cmp
lock
sub
xor
and
stc
jecxz
aad
jle
in
pop
mov
sub
call
jecxz
scas
and
mov
enterw
das
(bad)
sub
mov
dec
adc
and
int3
stos
pop
into
push
std
in
rcl
out
jae
xchg
repz
cdq
daa
dec
js
push
mov
int
daa
aad
test
mov
int3
cmps
or
push
cmp
jp
inc
clc
fstp
les
in
jg
jecxz
jmp
imul
ret
rcl
fcmovnbe
in
mov
xchg
xchg
es
sub
shr
push
mov
xchg
call
push
cwde
push
gs
adc
mov
push
fdivr
in
scas
fwait
add
cmp
sti
test
push
xchg
inc
loope
aam
xchg
outs
jge
cli
sub
inc
mov
push
push
das
cmp
adc
shr
fiadd
add
sbb
xchg
movs
(bad)
jmp
adc
mov
scas
stc
xchg
push
jmp
jecxz
sbb
xchg
sub
cmp
cmc
in
fldenv
mov
aaa
mov
sub
jbe
popa
nop
inc
pop
sbb
xchg
pop
mov
aas
mov
dec
jbe
lds
(bad)
adc
mov
ret
rcl
out
pop
mul
add
mov
dec
sbb
cmc
mov
dec
(bad)
test
test
fld
int3
inc
add
int
stos
push
cmp
pop
push
pop
cmp
leave
mov
in
xchg
jns
push
push
inc
(bad)
mov
nop
xor
cmp
mov
jmp
push
xchg
push
inc
fcom
in
sub
and
cmps
dec
mov
fsubr
inc
jmp
bswap
add
jnp
bound
xchg
jnp
and
jecxz
aad
retf
mov
inc
jp
ins
xor
adc
push
mov
push
sbb
add
push
and
in
mov
push
xor
shl
fdiv
(bad)
movs
(bad)
aam
xchg
(bad)
in
xchg
xchg
push
ins
fistp
test
or
xor
inc
out
add
sub
pop
in
xchg
iret
pusha
(bad)
(bad)
loopne
inc
mov
mov
jne
sar
(bad)
mov
mov
mov
mov
aas
fistp
call
jge
cmp
test
xchg
push
xchg
or
add
outs
or
jns
inc
inc
xchg
popa
imul
sbb
xchg
jle
retf
mov
pop
mov
lds
lea
call
mov
xor
jo
adc
arpl
cmp
mov
test
movs
icebp
dec
mov
lods
ins
mov
jb
movs
mov
jmp
jo
inc
push
push
push
mov
adc
and
or
push
jo
inc
retf
lahf
inc
jp
xchg
jno
pop
mov
loopne
imul
shl
out
rcl
xchg
add
mov
cmps
outs
jnp
and
mov
test
xchg
add
jns
in
aam
mov
cld
mov
sbb
clc
jbe
aas
jnp
dec
je
test
push
shl
ficom
imul
mov
ficom
repnz
shr
inc
je
xchg
jno
push
popf
mov
mov
out
imul
cld
das
jb
sbb
mov
mov
loopne
popa
test
mov
push
or
popa
jl
add
fxch
push
adc
dec
or
pop
cdq
std
jecxz
mov
sub
mov
and
jne
int
mov
pop
gs
sahf
cmp
stos
pop
shr
(bad)
es
scas
fincstp
push
cmp
iret
dec
mov
data16
push
pop
mov
inc
xor
pop
dec
stc
xlat
xchg
xor
iret
pop
push
(bad)
aas
iret
int3
add
pusha
sbb
out
lahf
mov
daa
mov
dec
mov
jmp
push
int
and
rol
in
lahf
in
mov
adc
push
int
dec
out
jg
xchg
dec
sahf
mov
cmp
sub
adc
cwde
retf
stos
xor
stos
mov
mov
aam
(bad)
mov
add
jl
outs
stc
pushf
push
mov
lock
retf
lds
data16
and
aaa
pop
and
or
or
in
in
in
dec
add
ss
(bad)
fistp
pop
push
imul
test
sub
mov
adc
cmp
and
stos
mov
or
xchg
rol
mov
lock
inc
dec
sub
sub
add
sbb
mov
dec
lahf
xor
mul
cs
and
das
jg
icebp
jmp
dec
scas
daa
pop
aad
addr16
data16
jle
mov
repz
ja
mov
sti
cmp
aam
sub
jo
add
push
cwde
add
mov
or
scas
inc
out
and
and
stos
scas
dec
add
sbb
pop
mov
jl
dec
pop
cmps
cmp
ja
and
hlt
jo
adc
pop
mov
data16
fs
push
sbb
jo
repnz
add
push
sbb
aam
dec
cmp
into
xor
movs
adc
push
or
jmp
stos
iret
jp
cwde
mov
xor
inc
pop
lahf
test
rol
icebp
xchg
loope
xor
cdq
mov
add
add
xor
fidiv
sbb
pop
adc
data16
xor
inc
push
pop
mov
arpl
jl
cmp
inc
add
push
pop
arpl
fidivr
sub
loop
push
test
shl
jb
outs
jmp
jecxz
xchg
sub
enter
pop
push
imul
out
outs
cmps
jge
mov
jbe
lods
arpl
xor
mov
pushf
mov
pop
sub
mov
stos
lahf
or
cs
pop
dec
cmp
pop
adc
jne
mov
repnz
pop
xor
test
xchg
xor
mov
sub
ja
cld
rcl
int
sbb
jle
pop
(bad)
sbb
call
out
mov
push
cdq
ss
push
sar
(bad)
jp
and
lods
xlat
xor
adc
fidivr
in
repz
lahf
cmps
in
xor
jmp
xlat
push
lea
mov
xchg
xor
sub
pop
jmp
mov
jmp
call
jl
icebp
int3
shl
ja
ficom
cmps
jae
ret
jmp
pop
mov
pop
cmps
in
mov
inc
xlat
pop
mov
mov
push
js
push
loopne
mov
jo
sbb
fstp
xchg
(bad)
movs
movs
dec
pop
jbe
pop
pop
jp
mov
sbb
mov
push
and
nop
cmc
sbb
or
hlt
dec
mov
xchg
loop
adc
xor
add
pop
mov
ins
jg
aad
fsincos
arpl
(bad)
xchg
adc
dec
sub
movs
sahf
shl
cli
shld
scas
fs
lock
pushf
or
jbe
dec
add
imul
push
pop
mov
outs
pop
out
dec
scas
lea
xlat
cli
jns
push
retf
popf
fs
jecxz
jmp
bound
out
enter
clc
stos
or
test
mov
ret
jmp
fld
iret
cmp
(bad)
test
icebp
clc
lods
mov
mov
push
shl
jae
jge
jns
pop
es
mov
jp
mov
xchg
xchg
ins
test
jno
push
loope
mov
dec
inc
cmp
inc
(bad)
mov
frstor
call
test
mov
outs
aaa
or
stos
ins
stos
sar
adc
push
(bad)
ins
push
add
and
mov
jae
pop
stos
or
cmp
mov
xchg
adc
pushf
mov
(bad)
(bad)
js
jne
push
js
jecxz
es
mov
mov
sbb
loopne
data16
adc
inc
mov
aad
adc
push
mov
mov
add
sti
in
dec
jne
mov
push
pop
sub
daa
fimul
sbb
movs
and
cmps
lahf
or
cmp
in
and
or
sub
repnz
xchg
mov
adc
jg
fld
mov
bound
jmp
pop
cmp
sub
psubb
mov
lds
loopne
inc
fwait
sub
dec
loope
push
mov
sbb
and
push
mov
out
cmp
pop
bound
jo
dec
lock
add
mov
xchg
sub
xor
and
fst
xor
in
xchg
imul
add
mov
push
xor
(bad)
pushf
jmp
xchg
ret
popa
fimul
ror
fs
dec
add
add
cli
sbb
xchg
(bad)
aas
and
je
pop
(bad)
bound
and
daa
lea
jb
(bad)
loope
dec
cmp
jge
mov
ret
in
(bad)
cmp
adc
das
add
ss
sub
div
mov
jne
push
sub
sub
sbb
xrelease
bound
(bad)
push
mov
jne
or
in
mov
mov
add
shr
pop
(bad)
iret
and
add
fadd
sbb
mov
daa
ret
nop
loop
push
mov
or
pushf
clc
adc
push
stos
xor
push
out
cwde
push
clc
sub
add
ficomp
sub
ins
call
adc
popf
mov
test
jecxz
into
pop
loope
pop
frstor
jl
ja
xchg
gs
adc
push
sub
imul
jmp
cmp
push
push
ss
rcl
mov
arpl
adc
int3
mov
lock
xchg
shl
mul
add
lahf
aas
xchg
call
out
pushf
scas
sbb
dec
or
sbb
lods
xor
fcom
cs
aas
sbb
mov
push
dec
fs
aaa
xchg
das
pop
xchg
jne
xchg
adc
mov
sbb
out
mov
xor
ss
xchg
inc
dec
pop
mov
jl
lods
call
or
sub
test
add
mov
jnp
and
shr
cmp
cs
xchg
data16
sub
imul
sbb
imul
pop
xor
test
shr
dec
iret
out
pop
aad
sub
pop
imul
inc
not
xor
or
mov
test
test
xor
pushw
jmp
push
pop
data16
ja
push
mov
loop
adc
bnd
dec
cmps
(bad)
push
rcr
icebp
cmp
xor
xchg
mov
mov
out
sahf
fwait
ss
adc
scas
jg
in
jmp
arpl
loope
cmp
mov
hlt
mov
mov
mov
mov
les
aas
arpl
or
sub
jns
dec
inc
adc
jne
shl
ins
mov
mov
adc
test
jmp
mov
mov
ds
jno
scas
mov
push
ret
in
or
xchg
mov
outs
pop
retf
loope
test
ret
mov
mov
aam
jg
mov
xor
sbb
add
sti
mov
jecxz
sbb
test
xchg
nop
sbb
xchg
aas
je
mov
adc
inc
sub
ficom
js
cmp
retf
mov
fwait
sub
jmp
aaa
inc
dec
ftst
sar
jl
xor
jne
(bad)
sbb
mov
stc
adc
dec
popa
xor
add
aam
stos
mov
push
ins
jp
retf
call
in
jb
int
mov
sar
imul
or
imul
ret
stos
outs
mov
call
ret
addr16
cmc
test
push
clc
cmp
pushf
jb
outs
push
rol
lock
outs
dec
mov
jbe
xor
sub
scas
sti
aad
mov
imul
in
sbb
push
icebp
arpl
mov
sub
push
xchg
(bad)
mov
loop
jno
mov
sbb
movs
(bad)
popf
fadd
pushf
in
outs
inc
cwde
aaa
ds
cwde
(bad)
pop
push
or
stos
mov
mov
imul
ds
aam
mov
ss
mov
int
cmp
jae
imul
jnp
pop
inc
jg
jnp
stc
cmp
sbb
inc
pusha
aaa
imul
cmp
fist
jge
cmp
lods
loop
jecxz
push
cmp
data16
shr
jo
pusha
dec
out
test
sub
clc
out
movs
jge
jo
mov
scas
addr16
in
sub
dec
mov
(bad)
add
(bad)
dec
or
add
in
mov
push
mov
fwait
cmp
stos
jo
pop
stc
mov
or
or
mov
cmp
inc
push
sbb
ins
fdivr
ds
add
sub
popf
sub
xor
mov
mov
push
js
cmp
dec
add
sub
mov
dec
aaa
mov
mov
mov
fisttp
jns
test
jne
cmp
xor
adc
(bad)
or
inc
movs
mov
mov
push
pop
xor
out
add
loop
imul
mov
cmp
fcmovb
mov
ss
mov
loop
icebp
inc
or
shr
mov
mov
cmp
fadd
test
push
inc
jl
inc
mov
sbb
push
xchg
pop
jge
inc
ds
mov
mov
xchg
cli
xchg
pusha
mov
xchg
cmps
sahf
ds
xchg
shl
ficomp
pusha
fs
lahf
push
dec
dec
not
or
adc
jmp
fist
cmc
jl
call
aaa
push
pop
cld
test
xchg
xor
and
enter
mov
out
jne
leave
scas
std
jo
int
xor
inc
sahf
cmp
sub
sub
xor
gs
repz
inc
jbe
inc
icebp
pop
sbb
jp
sub
jge
sbb
jmp
outs
cmp
inc
xchg
test
pop
lahf
push
arpl
scas
gs
(bad)
adc
cwde
retf
ins
movs
retf
xchg
cli
jecxz
xchg
push
or
daa
f2xm1
inc
cmp
xor
hlt
jae
nop
push
ret
jmp
icebp
sbb
mov
rcr
cmp
jecxz
ja
lahf
add
add
pop
sub
adc
out
int3
in
pop
call
and
out
popf
add
pop
icebp
or
ret
cs
push
mov
push
inc
es
mov
dec
cmp
retf
js
pop
sbb
xor
test
jns
or
(bad)
repz
fwait
arpl
inc
xor
in
mov
pushf
push
jae
out
mov
push
fs
push
xchg
std
xor
aaa
gs
push
add
in
test
dec
movs
jmp
fild
jno
leave
lock
sub
mov
js
(bad)
cwde
(bad)
xor
pop
hlt
jecxz
or
fnstenv
addr16
js
pop
push
push
sti
mov
movs
dec
cmp
mov
das
mov
xchg
push
std
pop
in
push
jns
test
mov
into
or
and
cmps
inc
push
js
scas
add
or
es
pop
ins
mov
adc
push
push
xchg
or
or
push
jp
xchg
test
add
xor
mov
stos
mov
rcl
mov
or
sub
loopne
sbb
push
adc
push
loop
jnp
cmp
jne
and
jg
repnz
fiadd
mov
out
sub
mov
jl
aas
sbb
push
clc
jmp
add
mov
dec
inc
scas
jp
imul
adc
xor
stos
fcom
cli
icebp
aaa
aam
shl
push
pop
mov
js
adc
sbb
test
inc
sbb
fidiv
dec
clflush
push
into
mov
xchg
jle
mov
ss
adc
adc
push
test
jae
int
inc
xchg
adc
inc
sub
lods
xchg
cmps
mov
retf
cmps
inc
dec
and
cmps
outs
sub
jge
adc
cmp
inc
loope
test
cmp
cmp
pop
pop
mov
dec
rcl
mov
neg
retf
das
jbe
rcr
jne
out
(bad)
push
fcomp
popa
push
xchg
adc
icebp
(bad)
push
push
mov
retf
add
mov
shr
in
imul
mov
fwait
test
pop
mov
inc
in
dec
sbb
mov
arpl
inc
out
inc
and
xor
movs
fwait
inc
ret
pop
gs
jmp
jle
jae
xchg
mov
repnz
je
gs
mov
(bad)
fsub
dec
fs
xchg
sub
mov
push
mov
xor
ficom
aad
jno
test
out
inc
loopne
add
repz
std
aaa
test
(bad)
(bad)
xor
push
mov
out
mov
sub
adc
xor
daa
adc
mov
aad
cmp
jb
movs
mov
int
loop
sbb
retf
outs
push
mov
test
imul
shr
mov
retf
ins
scas
mov
xchg
jmp
adc
stc
pop
xchg
pushf
stc
cmp
push
ja
lahf
dec
pop
pusha
(bad)
jbe
cmp
sti
xor
add
rcl
sbb
test
shr
lds
jno
mov
loop
and
(bad)
cmc
or
jl
dec
cli
adc
aad
outs
xor
call
mov
retf
pop
cmc
mov
or
loop
inc
add
or
loopne
mov
iret
and
adc
(bad)
std
sub
inc
add
xchg
adc
push
clc
fwait
add
retf
dec
xchg
adc
mov
push
repnz
cmp
popf
ret
mov
pop
es
lods
xor
test
iret
ds
sbb
je
sbb
inc
shr
call
jl
ret
cwde
cmc
lock
sub
add
mov
fadd
mov
cmp
add
in
clc
cmp
imul
or
adc
pop
push
in
push
xchg
jb
aam
and
mov
mov
addr16
fwait
mov
out
imul
out
mov
cli
arpl
mov
inc
sub
xchg
push
push
mov
jmp
daa
add
(bad)
mov
pop
aam
out
ror
test
xor
dec
pop
inc
jae
cmp
dec
mov
push
jmp
push
ror
jl
dec
in
pop
dec
sub
lahf
shl
and
hlt
add
push
rcl
xchg
shl
(bad)
jne
mov
push
jnp
arpl
adc
inc
(bad)
jg
and
ss
mov
sub
mov
aaa
out
cwde
arpl
mov
adc
fdiv
cmp
cs
ss
hlt
mov
adc
fsubr
sub
nop
in
ret
icebp
mov
addr16
mov
retf
out
sub
lea
cmc
aam
adc
in
loopne
inc
es
data16
iret
cmp
mov
(bad)
cmc
push
sub
inc
cmps
jbe
lods
imul
mov
in
out
hlt
aas
(bad)
aad
mov
mov
dec
mov
cld
retf
(bad)
mov
jne
pop
push
pop
sbb
dec
pop
mov
push
cmc
mov
sub
rol
xchg
fmul
cli
stc
outs
mov
sub
idiv
pop
(bad)
add
xchg
inc
and
(bad)
pushf
sbb
push
and
out
(bad)
cs
xor
retf
int
(bad)
test
in
pop
mov
mov
in
idiv
ffree
(bad)
xlat
mov
iret
test
sti
popa
mov
xor
add
outs
sub
hlt
scas
xor
mov
mov
push
adc
jl
push
in
jnp
pop
cmp
dec
mov
cwde
stos
and
or
ja
ja
add
pop
loop
js
mov
or
inc
icebp
xchg
loopne
xchg
xor
pop
fcomi
cmps
(bad)
cmp
sbb
sbb
adc
or
or
(bad)
lods
push
xor
dec
dec
xchg
jp
and
aam
mov
jnp
loope
xor
mov
test
icebp
or
shl
lods
cmp
scas
test
sub
retf
cwde
xlat
dec
cld
add
push
repnz
(bad)
jecxz
iret
cwde
add
ffree
push
push
add
out
mov
lahf
jp
or
jmp
fidiv
jne
lock
ror
mov
mov
jae
ret
jg
bound
xchg
ds
imul
mov
sbb
xlat
or
adc
sub
sar
in
test
push
xchg
mov
jmp
lds
jbe
loop
repz
jmp
mov
fmul
jecxz
std
push
fdiv
rcl
js
fldenv
(bad)
mov
lea
inc
jo
mov
(bad)
ret
cs
mov
imul
movs
and
loope
fwait
cmps
jmp
aas
xor
inc
stos
arpl
mov
xor
inc
stos
aad
push
in
movs
cwde
mov
cwde
scas
sbb
(bad)
neg
fwait
gs
sti
cwde
aad
ret
(bad)
dec
fisub
(bad)
push
cld
adc
dec
arpl
in
and
(bad)
adc
cmp
daa
cmp
ss
les
push
iret
jmp
cmp
test
xor
or
popa
fwait
out
icebp
fidiv
jmp
pop
hlt
cmps
movs
fstp
aaa
mov
(bad)
adc
std
clc
inc
add
mov
std
xchg
out
addr16
int3
mov
and
movs
xchg
fs
repnz
mov
cmp
fadd
pusha
push
enter
dec
dec
das
jp
jg
bound
(bad)
rcl
outs
fiadd
mov
cmp
and
xchg
mov
or
sub
in
pushf
jge
cmp
push
mov
push
push
sbb
aas
imul
push
movs
cmp
or
push
mov
das
idiv
xchg
and
mov
popa
adc
popa
mov
and
(bad)
mov
jl
xor
xchg
cmp
hlt
(bad)
test
stos
or
(bad)
enter
cmp
scas
or
mov
iret
out
cmp
dec
cdq
and
cmp
jge
cmp
mov
inc
bound
repz
mov
push
pop
jge
sub
inc
in
xor
xchg
test
dec
fidiv
dec
xor
inc
mov
add
ret
repz
pop
js
cmp
out
loope
jne
js
or
scas
dec
ficom
push
mov
stos
test
push
popf
call
push
es
shl
sub
ins
mov
imul
jns
adc
sbb
xor
mov
imul
sti
pop
pop
arpl
fild
push
fiadd
dec
sub
aaa
push
xor
push
jmp
aaa
pop
jmp
sbb
mov
dec
push
pop
mov
xchg
test
leave
ins
inc
adc
lods
jne
mov
jecxz
sar
or
mov
imul
fwait
or
outs
inc
leave
sbb
lods
and
ins
fmul
cli
clc
jp
sbb
nop
push
fisubr
in
(bad)
push
cmps
add
cmp
add
xchg
jl
and
xchg
std
cld
(bad)
xchg
inc
mov
(bad)
out
adc
test
sub
sbb
inc
mov
and
test
dec
std
aam
sti
jp
jecxz
or
aas
jl
(bad)
popa
mov
call
std
cmp
mov
dec
or
mov
in
cmp
hlt
or
mov
fisub
adc
jmp
jno
jmp
inc
cmp
lahf
mov
mov
xchg
ret
cmp
rcl
inc
jo
pushf
clc
jo
push
sti
(bad)
mov
pop
pop
stos
push
cmc
test
std
ret
pop
add
imul
xchg
pop
push
xchg
ja
dec
push
fwait
adc
cmc
(bad)
call
sbb
jg
mov
jb
in
stos
push
(bad)
and
fwait
or
inc
jo
ins
loope
into
sub
push
xchg
mov
jo
(bad)
loope
and
push
aad
outs
xchg
add
stc
ror
mov
cs
push
fsubr
jns
bound
push
sti
push
xchg
div
sbb
fdiv
mov
dec
xchg
(bad)
sub
mov
mov
pop
fild
sub
pop
rol
push
sbb
shl
jmp
pop
dec
pop
xchg
xchg
adc
loope
sti
ror
xchg
cwde
add
loope
je
aaa
mov
jns
pop
pop
jecxz
cmp
and
add
ds
sar
add
sti
or
js
jo
inc
call
xchg
dec
shl
adc
sahf
rcr
pop
loope
popf
fld
pop
(bad)
loope
ins
cmps
jecxz
jne
mov
stos
aaa
daa
push
ss
xor
nop
pop
push
test
daa
dec
ins
rol
fistp
xor
je
mov
mov
arpl
mov
jnp
fwait
es
pop
adc
call
pop
(bad)
jne
hlt
imul
add
push
dec
test
cmp
and
aaa
(bad)
ins
xchg
xor
dec
jnp
mov
cdq
fld
push
push
or
(bad)
xor
cs
dec
test
es
xor
or
pushaw
movs
test
sti
xchg
jnp
scas
shl
push
and
or
xchg
mov
mov
mov
push
inc
push
hlt
(bad)
sti
outs
xor
xchg
push
sbb
repnz
in
(bad)
sub
je
cs
scas
test
imul
(bad)
mov
outs
out
push
(bad)
(bad)
clc
test
pop
std
inc
lock
or
arpl
jge
clc
mov
or
cmp
jbe
repz
sub
inc
loope
jno
sub
retf
cmc
fcom
ins
enter
popa
push
in
add
pop
mov
pop
push
fldenv
ss
out
pop
ret
xchg
les
push
sbb
out
xor
loop
mov
mov
sbb
pop
or
xlat
out
mov
idiv
jmp
add
xchg
jae
jmp
lahf
push
or
push
fnsave
stos
adc
sahf
mov
(bad)
cmp
fwait
mov
jb
ins
mov
lock
test
mov
retf
xor
add
cli
sar
repz
stos
xor
out
cdq
lea
xor
or
hlt
jb
les
xchg
cmovae
pop
mov
mov
jge
(bad)
mov
stos
jnp
call
mov
pop
fwait
cmp
gs
push
fwait
inc
xchg
mov
test
mov
mov
xchg
inc
inc
inc
mov
xor
popf
xor
je
das
mov
repz
mov
outs
inc
repz
cdq
dec
add
dec
fnstsw
out
inc
sbb
outs
push
loope
jmp
pop
mov
pop
or
mov
(bad)
jae
mov
jle
test
cmps
ret
xor
(bad)
leave
add
pop
(bad)
daa
mov
int3
cs
push
fcmovbe
mov
lock
mov
xor
sahf
push
jae
(bad)
fdiv
dec
lahf
ins
pop
and
inc
nop
push
mov
or
retf
dec
jle
jo
ja
sub
enter
mov
retf
dec
(bad)
xor
and
xor
adc
mov
cld
push
sbb
jae
or
imul
lods
es
cld
cli
fldcw
cmp
mov
test
xchg
aas
inc
lock
cdq
mov
sub
xor
inc
popa
mov
rcr
unpckhps
cdq
clc
adc
or
push
imul
inc
and
fwait
data16
jne
call
push
dec
dec
pop
ret
xlat
add
push
rcl
dec
addr16
add
inc
inc
add
push
ret
stos
jae
in
jmp
mov
hlt
scas
ss
push
fdiv
or
sub
retf
push
add
or
and
xor
clc
je
sar
mov
add
jb
rol
sbb
popf
aaa
pusha
shl
mov
leave
ss
je
mov
mov
adc
or
xchg
xchg
ins
in
mov
cld
addr16
adc
mov
jns
sbb
ret
jnp
cmp
mov
inc
scas
jg
push
cmps
les
outs
add
daa
sahf
in
jo
dec
hlt
(bad)
ror
mov
mov
dec
push
mov
mov
imul
(bad)
push
shr
xchg
ror
test
popf
xor
push
int3
pop
fyl2xp1
idiv
xchg
mov
mov
fcomip
inc
add
mov
push
in
pushf
jns
inc
fs
test
sub
iret
push
xor
mov
or
cmp
imul
add
leave
aas
sti
pop
dec
add
int
sbb
cs
into
mov
pop
sub
out
xor
ins
sbb
sbb
scas
fiadd
inc
xchg
dec
repnz
push
test
sbb
mov
(bad)
sub
je
mov
into
mov
aam
mov
xchg
mov
jno
inc
(bad)
adc
hlt
pop
movs
mov
sti
fxtract
jg
imul
aad
dec
mov
or
jns
cmps
sbb
inc
mov
and
in
fsubr
push
sahf
adc
js
fwait
mov
jg
adc
sti
in
mov
cmp
ret
(bad)
mov
in
and
add
sub
mov
aas
cmps
popa
arpl
pop
jmp
in
mov
mov
push
loope
loope
cwde
pop
addr16
popf
arpl
jecxz
fsubrp
aad
shl
xchg
imul
sbb
je
in
jne
aad
add
(bad)
in
ret
lea
sbb
jno
ret
dec
inc
mov
lahf
dec
fsubr
std
push
stc
out
dec
scas
and
(bad)
hlt
adc
xchg
inc
add
inc
jg
es
(bad)
shr
(bad)
and
bound
call
shl
mov
mov
sub
jge
push
push
jecxz
ds
mov
cli
popf
add
call
mov
movs
cmp
daa
clc
mov
jnp
xor
sbb
fidiv
mov
add
popf
dec
ja
popf
mov
jle
mov
sbb
cmp
(bad)
jno
lahf
(bad)
mov
(bad)
xchg
add
jne
jo
jnp
daa
ja
gs
xor
int
shr
push
mov
mov
push
out
adc
call
cmps
aas
fs
or
pop
and
scas
hlt
mov
fadd
scas
inc
es
xor
fldcw
cmp
aad
inc
ffreep
movs
fist
push
dec
inc
push
dec
ror
imul
int3
jle
push
sub
xor
fadd
maskmovq
neg
sub
loop
repz
xchg
add
test
xor
jnp
(bad)
sti
ror
jbe
test
repz
mov
cld
dec
test
or
retf
lods
mov
shl
pop
adc
mov
mov
loopne
or
nop
mov
mov
pop
cmp
cli
out
fidiv
repz
enter
inc
mov
mov
mov
pop
scas
mov
jl
adc
mov
(bad)
mov
das
mov
mov
(bad)
pop
test
repnz
es
cmp
mov
inc
(bad)
pushf
mov
fisub
addr16
add
dec
in
enter
and
cmps
int3
pop
jo
xchg
iret
push
mov
(bad)
pusha
mov
mov
pop
leave
push
mov
xor
sar
imul
sbb
mov
mov
rol
cmps
sar
(bad)
fstp
add
js
(bad)
data16
sub
xlat
push
dec
pop
xchg
(bad)
stos
std
inc
adc
fistp
inc
mov
mov
jl
aas
xchg
mov
aaa
xchg
lds
setns
bound
aam
cmc
aaa
adc
push
ins
popf
std
aam
adc
std
lods
pop
xor
xchg
ins
jge
adc
push
sbb
dec
popa
push
bound
dec
pop
adc
(bad)
imul
out
push
(bad)
adc
es
and
sub
xor
mov
lods
mov
aad
fld
xor
rol
ret
inc
mov
repnz
push
lea
mov
data16
mov
sar
sahf
cmps
pop
jno
cli
add
pop
mov
mov
pop
push
xlat
cmc
outs
xor
rcr
sub
ret
test
push
push
pop
jmp
ret
out
push
out
mov
test
or
es
cmp
test
inc
jle
and
cmp
mov
cmp
jae
dec
cmp
ror
sub
add
daa
repnz
cmp
aas
add
mov
aaa
mov
test
test
sbb
sbb
push
scas
jmp
sub
push
fsubr
mov
repnz
lds
xor
mov
test
pop
(bad)
(bad)
mov
cmps
dec
and
bound
and
push
nop
(bad)
fiadd
aam
shl
xor
aad
rol
mov
(bad)
(bad)
std
xchg
mov
inc
push
pop
jge
leave
jg
sub
pop
popa
mov
scas
sar
dec
add
mov
mov
fistp
sub
cld
or
adc
adc
jbe
ret
cmps
repnz
or
movs
into
in
test
or
adc
fimul
shl
xchg
out
mov
xchg
mov
pop
je
jge
sbb
inc
and
xlat
imul
scas
(bad)
mov
jg
data16
xor
ds
pop
rcl
mov
add
out
mul
test
sub
leave
cli
lock
adc
ret
jbe
imul
mov
dec
lea
int
es
out
shr
push
inc
xor
mul
push
cmp
xchg
add
stos
jb
fcomp
add
pop
ins
dec
pushf
lds
cdq
call
ins
pusha
push
dec
ss
mov
(bad)
gs
dec
pop
mov
fcos
add
test
sbb
sahf
out
adc
test
jmp
pop
mov
sbb
mov
and
dec
sbb
das
hlt
mov
mov
pop
arpl
mov
mov
icebp
jb
or
or
ret
stc
repnz
in
(bad)
out
pop
hlt
add
jo
psrld
or
xor
or
jne
xchg
adc
inc
dec
leave
jle
xchg
ins
movs
cmp
cmp
aad
hlt
dec
icebp
mov
jle
adc
stos
inc
adc
int
push
cmps
ins
sahf
stos
adc
mov
stos
and
pop
jmp
lods
dec
push
sub
fld
cdq
mov
out
add
sbb
or
or
out
sub
add
add
dec
adc
cmp
cmp
imul
lods
adc
jmp
add
(bad)
pop
mov
mov
call
(bad)
rcl
pop
sbb
repz
and
mov
or
mov
mov
xchg
cs
inc
dec
test
jl
add
cdq
mov
outs
lods
adc
push
cs
outs
mov
fdiv
cwde
les
and
ret
jne
xchg
ror
jae
fdiv
movs
add
hlt
call
push
test
mov
push
xor
push
mov
in
cwde
cli
test
test
sbb
or
ds
retf
js
pushf
test
data16
add
push
mov
jo
mov
ds
cmp
je
loopne
xor
cmp
mov
sbb
outs
push
mov
es
jns
and
push
call
xchg
sar
aam
outs
xchg
dec
ret
cmp
mov
jbe
mov
bsr
icebp
jmp
pop
(bad)
scas
mov
pop
ins
ja
jb
ss
int3
es
xchg
sti
and
call
movs
sub
adc
sti
xor
mov
mov
das
in
pusha
scas
daa
and
in
sub
xchg
push
pop
imul
adc
cmp
dec
sub
inc
sub
inc
repz
in
movlps
in
cdq
fistp
mov
jle
fiadd
inc
add
retf
shr
ja
ss
jbe
jg
icebp
cdq
ins
mov
jg
mov
fs
int3
jne
sbb
sbb
push
or
add
xchg
pop
mov
push
adc
out
fidiv
mov
pushf
xchg
dec
test
or
mov
mov
inc
ficomp
inc
loop
push
repnz
and
jmp
mov
cdq
shl
les
popa
xchg
push
pop
mov
sbb
in
push
xchg
stc
std
pushf
or
mov
jae
scas
sub
cli
retf
ins
xor
repz
xor
xchg
mov
imul
push
mov
sub
sbb
sub
mov
pop
movs
(bad)
leave
fs
ds
sub
movs
push
sar
cmp
cdq
mov
xchg
sbb
repnz
push
loopne
jge
and
fwait
dec
sub
mov
adc
xchg
xchg
in
sysexit
jge
test
arpl
xor
dec
jmp
out
nop
icebp
or
adc
scas
movs
repnz
or
fs
jl
mov
fsubr
shl
mov
imul
and
sbb
xchg
and
and
cwde
jne
out
mov
inc
out
aam
icebp
cmp
mov
jb
cmp
mov
cli
icebp
pusha
xchg
loopne
aas
push
xchg
lods
lds
(bad)
jecxz
or
mov
adc
pop
and
pop
ret
in
jmp
lods
loope
imul
fwait
and
inc
mov
clc
push
xchg
push
pop
test
sahf
in
sbb
xchg
rcr
cmp
adc
adc
cmp
cmps
sub
push
cmp
cmp
mov
call
jb
cmc
int3
ins
inc
xchg
jl
push
xchg
lods
pop
aas
xlat
cld
in
and
mov
out
leave
xlat
daa
or
pusha
adc
outs
jp
adc
mov
fxch
in
pushf
mov
fmul
or
inc
aad
push
aaa
add
xor
ins
rcl
enter
stos
inc
lock
cmp
repnz
out
lds
(bad)
add
xchg
pop
adc
aas
sbb
ret
in
jecxz
fistp
xlat
mov
push
mov
mov
bound
repz
jne
push
cmp
xchg
adc
mov
push
and
push
sub
xor
outs
push
pop
cdq
xor
(bad)
in
mov
and
fstp
aam
mov
cmp
jb
push
jmp
or
adc
ja
xchg
loopne
leave
push
mov
adc
out
outs
stos
outs
sub
mov
sub
xor
lods
or
mov
mov
add
and
mov
sar
es
imul
xlat
adc
xor
inc
js
stc
xor
fdivr
cli
mov
jle
xor
mov
jge
push
jg
scas
push
xchg
jo
cld
inc
in
and
xor
dec
and
mov
push
xchg
sbb
in
mov
pop
push
adc
and
pop
ja
test
lods
jle
cmc
pop
movs
fisubr
and
ds
das
retf
sbb
and
jl
mov
adc
stos
scas
loope
scas
outs
mov
push
pop
icebp
mov
push
add
cld
(bad)
fisub
pop
dec
dec
fadd
movs
or
push
push
adc
fcmovnu
and
push
inc
pop
test
xchg
cli
popf
and
imul
mov
movs
cmp
loope
mov
test
(bad)
jmp
std
push
mov
sbb
pop
ja
retf
js
and
(bad)
or
jecxz
pop
inc
scas
pop
bound
push
mov
test
in
and
pop
cwde
cli
or
mov
or
pop
mov
pop
and
dec
test
ins
mov
push
push
aaa
jbe
or
or
fst
xchg
push
mov
jnp
jmp
and
pop
mov
dec
mov
xor
mov
jo
in
call
dec
cli
test
imul
xor
fcomp
jns
test
stc
inc
jb
in
or
add
in
jns
sar
mov
jb
mov
mov
inc
dec
mov
cld
mov
repz
cmp
ficom
aad
cmp
adc
cmp
out
add
ds
sbb
dec
sub
scas
pop
pop
mov
sub
jo
(bad)
pop
sar
jne
pop
addr16
aas
repz
or
and
adc
sahf
inc
mov
mov
(bad)
sub
mov
pop
fldcw
imul
outs
addr16
jmp
mul
push
inc
xchg
mov
mov
pop
xchg
xor
vpmovdw
fwait
jne
(bad)
xchg
mov
dec
outs
call
mov
lds
xchg
mov
(bad)
sub
mov
adc
cwde
out
dec
not
bound
or
lahf
(bad)
and
ror
xor
or
adc
xor
cli
adc
test
shl
aad
cdq
lods
ret
xlat
dec
and
pop
in
push
pop
js
xor
mov
addr16
ja
in
loop
xor
cwde
add
ret
jbe
ja
hlt
pop
cld
inc
leave
mov
sbb
scas
iret
cs
push
sbb
mov
mov
push
pop
cmps
inc
inc
daa
fild
mov
cmp
pop
int3
in
jnp
sub
push
retf
xor
push
xchg
jmp
xchg
cmp
mov
sbb
ja
jnp
inc
int
push
mov
cmp
call
cmp
rcr
adc
cld
imul
pusha
out
inc
imul
retf
(bad)
mov
lods
mov
xchg
add
sbb
jl
pop
ins
(bad)
xlat
lods
outs
shr
mov
ins
scas
retf
ins
adc
or
mov
jl
outs
sbb
mov
or
pushf
push
retf
adc
es
cld
adc
pop
push
fucom
fisttp
xchg
int3
push
and
jno
hlt
in
inc
cmp
fimul
sahf
mov
jo
mov
sub
call
or
push
push
jb
test
loop
cdq
sar
cs
dec
out
mov
sbb
push
cmps
(bad)
mov
xchg
jno
sahf
cld
call
data16
or
inc
xchg
jno
into
imul
rol
jmp
or
cmp
jmp
daa
lds
xchg
sub
adc
pop
cmp
pop
pop
and
(bad)
sahf
cmp
xor
mov
ins
(bad)
push
dec
cmp
push
inc
push
repnz
sub
imul
adc
jge
in
jmp
inc
mov
fcomi
pop
mov
or
iret
add
pop
(bad)
pavgw
push
neg
add
add
inc
repz
sar
xor
mov
mov
lods
in
icebp
pop
rcr
mov
mov
sbb
push
(bad)
pop
clc
lods
jbe
std
hlt
clc
xor
and
pusha
adc
mov
cld
mov
les
inc
sub
pop
pop
cld
std
and
pop
shl
xchg
add
or
pop
sub
inc
mov
loopne
push
pop
jp
xor
sbb
addr16
rcl
lods
mov
fdivr
in
pop
pop
mov
cs
adc
sub
clc
data16
push
stos
mov
mov
int
inc
fdiv
jns
or
shr
push
adc
cwde
and
retf
imul
movs
jae
push
inc
sub
scas
cmps
jno
jp
aam
mov
mov
pop
bsr
xor
addr16
and
jns
push
repnz
jg
push
das
push
sub
or
call
add
pop
jge
adc
or
mov
fistp
jmp
cmps
fcom
mov
daa
cli
pop
dec
pop
cmps
repnz
push
and
adc
popa
fst
jns
mov
or
daa
xor
into
mov
sbb
jns
mov
xor
(bad)
cmc
test
sar
daa
outs
adc
dec
ret
jp
mov
fwait
sub
test
mov
ror
cli
sahf
pusha
xor
(bad)
popf
dec
lock
mov
test
mov
cs
or
and
sbb
(bad)
mov
inc
dec
shr
jle
jmp
adc
sub
retf
lock
cmp
cmp
xor
or
mov
jbe
stc
aam
dec
dec
add
dec
out
mov
mov
retf
inc
sahf
dec
int3
stos
sub
add
call
cmp
jp
retf
out
dec
xor
push
dec
jge
pop
call
idiv
call
dec
int3
inc
int
test
nop
add
xchg
and
xchg
cmp
and
xor
dec
sahf
inc
out
and
fcom
jo
mov
mov
lea
cmps
jmp
ds
clc
movs
and
sar
push
shl
adc
push
xor
cmp
into
add
fs
adc
cs
sub
out
sbb
leave
fdivr
pop
dec
mov
cdq
dec
or
dec
popa
or
add
dec
sub
je
cs
inc
push
push
pop
pop
movs
dec
mov
dec
jns
mov
enter
std
lock
mov
xchg
sbb
das
sbb
mov
fld
out
and
xchg
ins
shl
ja
es
pop
outs
(bad)
mov
aaa
cli
or
xor
sub
sub
(bad)
xchg
push
fbld
retf
jmp
loope
dec
arpl
jns
push
mov
pop
xchg
fidivr
jmp
outs
push
mov
cmps
call
(bad)
scas
lods
sub
test
mov
mov
loop
mov
xor
dec
sar
push
aad
mov
adc
daa
(bad)
imul
sub
dec
pop
pop
jno
ja
iret
xlat
adc
mov
push
fcmovnbe
sub
and
fbstp
cwde
cmp
dec
adc
sub
sahf
jmp
loopne
aas
je
mov
fsub
xor
add
ja
cmp
retf
cmp
shl
add
stos
inc
cmp
pushf
adc
mov
inc
push
jecxz
mov
sbb
imul
outs
outs
jnp
retf
or
and
adc
(bad)
fimul
call
xchg
(bad)
call
out
or
f2xm1
and
sub
jae
test
pop
(bad)
jecxz
push
jmp
dec
sub
xlat
ds
push
mov
loope
cmp
push
jecxz
dec
pop
ds
mov
ror
push
mov
cmp
movs
cmp
(bad)
scas
xor
popa
sbb
cwde
loope
and
mov
out
lea
push
dec
out
dec
push
adc
(bad)
fldenv
cmp
mov
dec
cmp
aad
std
adc
test
xchg
xchg
inc
sbb
retf
mov
aaa
(bad)
pop
push
addr16
jbe
sub
add
idiv
jmp
sbb
xchg
test
and
mov
sar
test
rol
jnp
pop
or
dec
cdq
xor
or
inc
in
repnz
sub
(bad)
jno
xor
retf
and
inc
inc
and
test
std
aad
shr
sbb
mov
popa
ins
xchg
push
imul
addr16
pop
call
repnz
ror
les
or
out
movs
test
cmp
(bad)
aad
fld
push
or
dec
mov
jge
in
push
pop
in
lods
test
(bad)
dec
dec
mov
xchg
adc
and
repnz
fbld
rdpmc
dec
shl
imul
imul
aad
adc
mov
hlt
lea
cmp
lods
ja
test
loopne
loopne
fimul
push
es
push
cmp
mov
scas
adc
(bad)
push
inc
and
and
icebp
jmp
mov
pop
stos
mov
ins
cwde
push
add
push
mov
jl
ret
sbb
bound
xor
je
rcr
push
pop
popa
fnstenv
or
pushf
pop
xlat
xchg
add
adc
xchg
mov
sbb
and
mov
sbb
fld
repnz
fldenv
scas
stc
push
imul
shr
mov
adc
test
sti
outs
sub
and
jmp
ds
xchg
mov
sahf
push
ins
iret
mov
cmp
sbb
enter
cdq
stc
dec
xchg
pop
adc
add
add
and
sbb
dec
dec
ins
lods
mov
sbb
sbb
xchg
dec
cmp
rcl
add
pop
jg
fisttp
int
xchg
jecxz
repnz
into
lods
(bad)
mov
inc
push
adc
(bad)
pushf
(bad)
push
cli
mov
jb
inc
xlat
mov
add
jge
fcmovbe
mov
mov
add
adc
sar
repnz
cmp
inc
scas
xchg
(bad)
mov
iret
and
lods
rcl
dec
push
mov
push
loope
pop
ins
stos
hlt
mov
xor
add
cmp
aad
inc
add
popf
pop
push
sti
pop
cmova
jns
adc
clc
out
arpl
jb
xchg
cs
xor
adc
mov
and
in
sbb
cmps
loope
(bad)
jae
mov
or
out
jb
cmp
dec
or
lds
in
imul
sub
mov
or
cmps
(bad)
int
outs
and
mov
mov
mov
adc
mov
jbe
adc
sbb
mov
dec
mov
cli
mov
mov
xor
cmp
fdivrp
(bad)
jecxz
test
dec
stos
shl
and
cld
xor
and
add
mov
jmp
jle
inc
shr
xor
fistp
inc
add
retf
xor
push
or
fstp
mov
gs
fsubr
js
cmp
pop
sub
int3
jbe
out
jo
mov
mov
cmp
stc
hlt
nop
mov
push
adc
inc
push
scas
mov
push
push
sti
fmul
xor
mov
stc
cdq
or
jae
cmp
cmps
dec
mov
enter
xchg
call
jle
and
inc
imul
sub
pop
or
in
mul
pop
(bad)
call
mov
cmp
sahf
call
inc
movs
and
and
xchg
movs
inc
add
retf
mov
jmp
pop
adc
xlat
mov
sub
in
xchg
or
cmps
xor
in
or
out
adc
pop
and
ds
inc
adc
dec
call
pop
add
cmp
inc
call
lods
jge
dec
add
adc
frstor
sbb
pop
add
sbb
rcl
dec
cmp
test
cmp
mov
pop
sub
xchg
push
imul
out
lods
je
cmp
test
and
popf
sub
dec
mul
cmp
lds
and
push
push
imul
mov
cmp
aaa
pop
adc
push
or
dec
clc
dec
cmps
jae
jb
inc
(bad)
fs
mov
sar
mov
add
repz
mov
mov
je
into
fisttp
and
mov
test
int
hlt
outs
inc
in
inc
jns
(bad)
aaa
mov
jae
lods
jnp
fsubr
cld
mov
test
int3
xchg
sub
fucomi
dec
jecxz
aas
xor
test
dec
pop
in
in
clc
test
fstp
inc
mov
out
push
dec
rcl
inc
or
jecxz
mov
lea
jp
mov
ins
sub
movs
popa
jg
jge
movs
les
lods
push
arpl
lea
and
fnstcw
lahf
mov
push
mov
es
jle
cmp
loope
popa
shr
mov
mov
arpl
cwde
std
xor
test
pusha
xor
xor
add
jecxz
(bad)
int
push
xor
(bad)
and
loope
mov
fnstsw
jge
inc
loope
xor
mov
aam
stc
les
(bad)
mov
and
xor
int3
stos
inc
xor
jmp
pop
pop
movs
push
call
ins
mov
out
faddp
daa
loopne
mov
lods
push
and
pop
adc
sub
out
outs
jns
add
mov
xor
mov
arpl
hlt
(bad)
call
out
int3
jmp
add
or
cmps
fst
or
add
mov
lock
and
and
(bad)
out
mul
sub
sar
movs
mov
sbb
sub
add
out
mov
and
(bad)
gs
sbb
stos
cmps
xchg
test
lea
xchg
sub
jnp
fistp
pop
into
fs
adc
sub
xor
cld
pop
mov
aaa
inc
iret
or
mov
lock
dec
retf
or
add
arpl
pop
sbb
pop
leave
mov
retf
dec
dec
mov
retf
cmp
push
inc
fs
pop
inc
or
jae
movs
xchg
fistp
jno
clc
icebp
sub
lock
pop
jnp
jecxz
fs
xor
mov
mov
cmp
sbb
jb
in
ror
imul
mov
mov
dec
pop
clc
sbb
cdq
ret
loope
push
ins
mov
pop
das
jnp
lock
addr16
repz
call
mov
xchg
scas
adc
lock
mov
loopne
cdq
xor
dec
frstor
aaa
mov
retf
data16
repz
call
lea
or
sbb
dec
sub
and
in
push
es
call
nop
adc
data16
in
repnz
push
inc
push
mov
mov
repnz
jae
dec
fwait
mov
retf
jg
cli
xchg
fadd
push
jmp
mov
aam
sbb
in
retf
or
mov
scas
outs
shl
gs
cmp
js
dec
pop
jae
xor
leave
call
mov
loop
dec
sub
mov
aam
setne
mov
icebp
add
popf
lds
mov
and
jae
xchg
xor
retf
cwde
out
lds
mov
lods
aas
xor
push
mov
fs
inc
xchg
(bad)
cld
mov
movs
pop
push
scas
mov
jo
push
mov
cli
mov
sbb
sub
rol
dec
push
jle
and
add
out
scas
into
push
inc
adc
dec
inc
scas
dec
mov
push
sub
push
jb
pop
gs
ret
sub
or
pop
mov
push
add
cli
fs
sbb
mov
scas
or
jno
dec
pop
sub
push
test
pop
cli
pop
push
sub
inc
push
xor
xchg
xor
adc
jp
mov
imul
add
ins
int3
clc
dec
adc
ret
pop
cmovo
and
mov
lock
sbb
add
gs
add
(bad)
dec
pushf
inc
add
mov
(bad)
adc
pop
test
daa
or
inc
loop
mov
mov
lahf
mov
hlt
(bad)
jge
mov
fcomp
mov
xor
hlt
pop
dec
inc
mov
push
push
js
in
sti
pusha
jno
dec
in
jmp
mov
cmp
add
daa
sub
add
mov
cmps
pop
adc
xchg
cmps
push
fdivr
pop
inc
push
or
push
and
(bad)
adc
int3
inc
lds
rol
mov
push
push
stos
enter
ret
add
lea
pop
or
mov
jg
jmp
jecxz
sbb
or
adc
push
jge
les
xchg
fld
jle
mulps
leave
xor
int3
xchg
add
cwde
mov
outs
nop
pop
scas
bound
fcom
adc
icebp
or
test
xor
pop
pop
stc
in
outs
cs
psrlq
adc
cld
mov
push
add
int
retf
cmp
jle
jae
mov
(bad)
jmp
add
repz
imul
leave
mov
sbb
aas
xchg
add
add
fstp
(bad)
mov
pop
sbb
das
or
fs
into
aaa
stc
loope
ror
dec
aad
sub
dec
sub
mov
sbb
ins
out
inc
rcr
jecxz
int3
cmp
stos
shl
or
adc
test
popf
and
mov
pop
aam
fild
sbb
int
jl
xchg
xchg
push
(bad)
xchg
aad
mov
sbb
div
call
or
mov
popa
push
cmp
mov
in
fsubr
jmp
es
lods
jno
fisttp
loop
int
jp
or
mov
sbb
mov
jbe
rcl
jmp
or
dec
xchg
retf
or
icebp
cmps
rcl
mov
xchg
iret
and
cmp
mov
add
pusha
loopne
push
imul
inc
jmp
loop
js
addr16
xchg
scas
xor
jne
mov
jle
stos
add
dec
xchg
push
lods
rcl
jbe
pusha
xchg
jae
push
rol
jne
adc
xchg
pushf
pushf
mov
pop
xor
add
dec
xchg
jno
stos
jp
push
push
pop
mov
std
jne
xchg
inc
mov
push
and
mov
imul
idiv
out
fs
inc
cmc
fucom
in
rol
cmp
dec
xor
inc
adc
jo
movs
(bad)
sbb
and
mov
xchg
icebp
inc
nop
cmp
mov
xchg
xchg
call
cs
scas
fcos
push
jmp
out
pop
aam
aaa
mov
leave
das
stos
rol
pop
stos
arpl
leave
cmp
jle
pop
cmps
mov
sub
cmp
outs
repz
pop
ins
popa
cmp
or
mov
inc
icebp
and
push
ror
push
int3
cmp
or
pop
mov
das
pop
xchg
jb
or
or
into
and
xchg
and
hlt
sub
mov
mov
gs
xchg
mov
shrd
and
sbb
imul
push
pop
adc
inc
imul
ss
mov
repz
jb
inc
and
in
ins
push
fisub
mov
push
aam
lock
fs
(bad)
adc
mov
dec
mov
cwde
ja
(bad)
mov
mov
daa
scas
ja
stos
mov
loopne
ret
push
dec
leave
push
ins
repz
mov
scas
push
adc
dec
mov
mov
dec
dec
ret
loopne
popf
or
mov
out
mov
inc
call
jp
or
lea
mov
ror
js
add
jns
pop
icebp
pop
cmp
dec
dec
mov
cmp
inc
and
es
fnstsw
xor
bound
inc
mov
mov
lods
imul
dec
sbb
xor
popf
(bad)
sbb
fimul
vaddsd
jae
loope
test
jmp
xchg
sub
ds
mov
data16
pop
jmp
xor
jecxz
out
and
cmc
daa
das
pop
mov
cmp
sar
cmp
loope
mov
jmp
mov
add
mov
cmp
jmp
aas
jmp
pop
dec
mov
mov
iret
mov
inc
push
(bad)
in
xchg
sub
jbe
adc
jns
xlat
xchg
cmp
loope
das
mov
cmps
addr16
inc
bswap
stc
jge
xchg
(bad)
std
mov
lods
sbb
aad
cdq
xchg
mov
(bad)
pusha
jmp
movs
stos
mov
pop
push
pop
loopne
loop
inc
adc
nop
xchg
jmp
sub
jno
mov
and
jno
add
js
and
mov
mov
inc
(bad)
lods
jmp
cmp
dec
mov
mov
in
push
arpl
out
jnp
sub
fisub
adc
jns
mov
rcr
mov
inc
jle
inc
lds
ja
repnz
nop
sub
ins
xchg
push
push
inc
cmp
xor
xor
or
mov
not
mov
aam
xchg
or
into
adc
pusha
mov
test
inc
jecxz
inc
and
idiv
(bad)
cmps
and
adc
(bad)
mov
fmul
addr16
fimul
pushf
mov
cld
sbb
mov
out
xor
or
aam
mov
rol
scas
sar
push
fisubr
je
leave
xlat
leave
sti
mov
mov
repz
ret
or
sbb
retf
rol
pop
pop
sub
dec
loop
cli
jmp
xor
test
(bad)
(bad)
cmp
mov
jo
jno
push
in
fninit
movs
gs
jge
(bad)
push
ds
jb
or
push
and
adc
add
xchg
mov
repz
jne
lds
call
fwait
std
imul
in
movs
inc
cmp
dec
inc
xor
(bad)
(bad)
sbb
jg
dec
fwait
jb
mov
xchg
addr16
sub
and
cdq
mov
les
adc
pusha
xlat
push
mov
gs
mov
pop
scas
fstp
xchg
into
pop
pop
jae
rcr
ror
popf
pop
push
dec
out
call
adc
jmp
pop
xor
in
sub
clc
dec
ins
cmps
mov
adc
jbe
mov
aad
push
aas
mov
and
and
in
neg
add
push
or
(bad)
push
xchg
stc
scas
mov
pop
xchg
cs
dec
rcr
out
xor
sahf
mov
ins
out
xchg
fcmovnb
out
and
xchg
div
xchg
test
ds
fistp
or
aad
sub
xchg
cwde
test
lahf
push
out
dec
inc
jle
sub
jecxz
cs
cmp
push
xor
jbe
mov
(bad)
call
loope
sbb
ffreep
imul
and
or
(bad)
push
sub
mov
xchg
retf
and
sbb
scas
jns
int3
jne
ror
pop
cld
shl
mov
stos
xchg
fdivr
push
or
pop
fnsave
add
fucomip
call
rol
xchg
jl
xlat
jbe
or
jns
cli
arpl
test
arpl
out
dec
inc
pop
xchg
sub
inc
jp
push
clc
or
cmps
add
or
stos
retf
pop
das
dec
push
clc
xor
jmp
ficomp
push
les
xchg
cs
aaa
push
bound
mov
xchg
xchg
mov
je
int
ins
in
xor
inc
or
rcr
adc
stc
cmp
dec
and
imul
and
fs
jg
push
jno
mov
scas
ja
mov
jl
add
cmp
inc
add
add
xchg
and
movs
ins
mov
or
outs
jno
scas
dec
adc
mov
inc
std
arpl
adc
lods
test
cmp
test
or
xchg
sbb
mov
bound
fst
inc
and
fcom
jno
cmc
mov
mov
(bad)
sub
mov
or
jmp
push
or
mov
or
xchg
inc
mov
ins
retf
fstp
nop
xchg
sahf
test
stc
fcomp
lods
jno
inc
aam
ss
shr
dec
xchg
in
int3
cmp
rcl
sahf
test
lods
cmp
inc
mov
add
shl
or
imul
(bad)
jl
(bad)
in
popa
xchg
rol
cmp
sbb
sub
sbb
mov
push
push
dec
popa
ins
out
shl
mov
es
sbb
push
jg
fwait
inc
xchg
jge
mov
fnstsw
fwait
cmp
xchg
or
or
lods
cmp
stos
mov
cmp
es
pop
and
into
push
push
sub
lock
cdq
into
push
adc
call
jle
les
mov
xchg
xor
mov
and
jne
or
and
or
push
cmps
aad
push
mov
jno
or
xor
lods
xchg
sbb
inc
es
retf
xchg
mov
jno
shr
pop
fs
dec
daa
mov
xlat
jle
xchg
std
into
cld
push
adc
ror
sub
fbstp
out
icebp
mov
cmps
aaa
cmps
out
add
mov
call
in
sbb
xchg
lahf
mov
adc
mov
test
aam
add
test
mov
xchg
dec
pop
adc
pop
cwde
mov
sbb
outs
popa
xlat
pop
in
push
jbe
xchg
rcl
call
adc
push
mov
or
fmul
loope
xor
test
push
dec
retf
xchg
out
adc
out
rol
ins
retf
leave
pop
popf
adc
mov
adc
stos
pop
dec
leave
dec
pusha
mov
pop
imul
jbe
push
fcom
sbb
repnz
fmulp
inc
adc
cs
xlat
out
push
movs
(bad)
or
lock
push
jb
test
mov
test
add
in
mov
cmc
mov
lea
dec
sub
jl
jae
test
push
in
in
push
ins
std
xchg
sub
into
inc
in
push
ss
adc
call
xor
inc
pslld
sub
dec
loope
ret
lahf
movs
jmp
out
pop
or
xchg
or
jne
xor
mov
dec
popa
scas
cld
sbb
mov
mov
daa
mov
int3
cmp
cli
xor
xchg
xor
stos
(bad)
mov
jbe
mov
cmp
fcmovne
mov
adc
or
imul
lods
stc
out
mov
cmp
dec
jne
std
add
lds
sbb
stos
movs
inc
adc
ret
cmc
mov
jg
aas
push
aad
push
inc
daa
pop
and
inc
cmc
(bad)
shr
outs
inc
arpl
cs
mov
in
mov
or
sbb
std
clc
and
mov
and
fnstenv
stos
and
dec
loop
mov
lods
mov
imul
mov
pop
js
imul
sbb
jbe
ins
pop
test
repz
push
hlt
repz
inc
sbb
and
mov
test
ins
test
fisubr
push
mov
adc
cmp
sub
sbb
mov
cdq
mov
mov
pop
pop
xchg
or
leave
add
jbe
push
jl
jnp
mov
push
sbb
adc
inc
int3
shl
mov
xchg
xchg
xchg
mov
in
ss
les
mov
add
or
jecxz
loopne
xor
div
js
jg
outs
scas
push
mov
pusha
ret
popa
sbb
(bad)
add
je
dec
pop
add
mov
push
or
sub
pushw
movs
dec
push
pop
mov
inc
push
mov
mov
rcr
add
dec
sbb
lahf
(bad)
dec
dec
mov
hlt
ds
xchg
add
push
imul
mov
jl
imul
cs
loop
test
add
mov
ret
jns
xchg
and
mul
test
dec
mov
lods
dec
inc
push
pop
pop
adc
imul
fnsave
jl
(bad)
xor
lahf
cmp
imul
ret
ins
fild
mov
std
cmps
ja
int3
bound
and
cmp
xchg
jbe
cmps
stos
retf
push
jl
mov
out
lock
xlat
sbb
fldcw
sar
mov
cmps
movs
push
into
pop
(bad)
rcr
and
xchg
enter
mov
mov
pop
loopne
in
(bad)
mov
jmp
ins
enter
dec
pop
lock
rcl
mov
add
push
ds
fnstcw
fbld
lods
idiv
je
daa
call
mov
aad
int3
sub
shl
icebp
add
sahf
xchg
jg
jl
dec
or
and
js
xlat
mov
push
push
pop
sahf
gs
ds
sub
mov
sahf
int
sub
call
pop
mov
mov
fisttp
inc
ficomp
pushf
mov
mov
jo
loope
aad
enter
stos
in
aad
iret
test
icebp
repz
arpl
mov
gs
xor
inc
ss
fisttp
xchg
add
jns
xchg
loopne
mov
sub
push
push
cmp
aaa
inc
aaa
cmps
mov
mov
add
add
inc
push
lahf
fcmovne
pop
xlat
jp
xor
jbe
push
out
sar
jle
mov
test
pop
mov
jle
jnp
lods
mov
mov
mov
xchg
cmc
clc
call
xchg
(bad)
ds
adc
sub
aaa
ja
xor
sbb
cmp
loope
jmp
movs
je
into
sbb
out
sub
mov
mov
push
dec
in
test
mov
mov
cmp
jp
cmp
lds
cli
and
test
push
loopne
test
retf
mov
jmp
fmul
clc
mov
rcr
leave
cdq
call
in
xlat
aad
jns
jb
pop
test
jns
imul
aas
cmp
mov
(bad)
and
or
and
cmps
mov
int3
dec
push
mov
loope
and
leave
lea
sbb
cdq
xchg
movs
loopne
mov
cmp
loop
fwait
jecxz
div
jnp
mov
fldpi
jns
sub
inc
add
imul
fist
sti
pop
cmc
pop
mov
out
aad
cmc
jno
mul
mov
lods
sbb
xchg
inc
cmp
xor
ja
cdq
les
cmp
adc
scas
pop
jecxz
aaa
sub
outs
loopne
sbb
sub
dec
xor
push
call
push
and
dec
xor
jp
(bad)
and
mov
mov
test
inc
lea
popa
outs
mov
idiv
push
push
pop
mov
mov
stos
imul
cmc
(bad)
sahf
cmp
es
into
addr16
jb
pushf
mov
pop
(bad)
mov
out
and
xchg
cmp
sbb
xor
lea
jl
loop
out
ret
pop
jnp
popa
jbe
jl
test
inc
(bad)
jl
push
or
add
and
mov
dec
gs
shr
pop
and
fsubrp
ror
fldenv
adc
and
lds
mov
hlt
addr16
scas
rcl
nop
sub
call
mov
and
push
mov
add
jg
sub
stos
push
arpl
in
in
loopne
(bad)
aad
in
shl
xor
xor
adc
mov
dec
stc
sbb
cmp
push
in
ins
sbb
add
pop
lds
or
test
lock
mov
imul
or
xchg
push
jl
push
enter
fld
ss
xor
cli
add
sbb
(bad)
movs
jns
gs
sahf
cmc
xor
cmc
jne
inc
loope
ins
inc
scas
scas
out
test
cmc
cmp
cmp
in
push
(bad)
in
pop
add
jmp
adc
fs
shr
ins
into
(bad)
fisubr
mov
and
cmp
nop
push
hlt
loopne
sub
jbe
repz
and
cwde
bound
ss
loopne
outs
scas
fstp
(bad)
add
das
inc
inc
mov
mov
add
stos
imul
jb
pop
cmp
cdq
sbb
aas
sub
out
cmp
enter
push
clc
add
dec
icebp
dec
jo
add
xchg
pop
cmp
enter
out
lods
lds
fsub
add
shl
mov
fmulp
inc
pop
neg
jns
adc
fidivr
out
lods
ins
aad
inc
das
into
sub
push
or
test
mov
xor
dec
out
xchg
dec
fisttp
js
rep
div
stos
outs
nop
popf
out
scas
cs
pop
repnz
inc
fsub
and
mov
movs
out
cli
gs
retf
dec
and
in
push
jne
push
pop
outs
cs
xchg
mov
ds
or
leave
push
les
ins
inc
retf
out
ja
xchg
lods
adc
and
lea
mov
int
rcr
das
or
out
pusha
cmp
ds
cmp
movs
sub
stos
fiadd
sbb
dec
jle
sub
dec
xor
cmps
out
lods
and
(bad)
fsubr
je
ret
je
imul
ret
add
lds
add
hlt
clc
and
jnp
xchg
popa
sbb
xor
push
das
cwde
xchg
sub
jb
out
jmp
pop
inc
jle
xchg
dec
cwde
xchg
dec
mov
push
lods
jae
adc
push
push
or
ja
stos
jo
xor
sbb
mov
scas
fcom
popf
scas
pop
pop
lods
adc
and
pushf
sbb
adc
ins
jge
adc
inc
mov
adc
stos
pop
push
rol
sbb
xchg
shl
(bad)
inc
repz
repz
js
dec
and
cmc
pop
pop
(bad)
into
sbb
pop
push
pop
(bad)
mov
push
inc
or
push
jle
fidiv
arpl
jns
jns
adc
ss
mov
mov
ret
inc
mov
scas
movs
jmp
int3
sub
xchg
push
add
fwait
push
jmp
cmps
call
sbb
push
and
ja
and
data16
xor
xor
call
mov
sbb
inc
dec
mov
xchg
push
inc
(bad)
in
js
aad
jb
and
inc
mov
push
inc
adc
pop
xchg
fsub
iret
adc
add
xchg
retf
pop
ds
shr
add
add
cs
inc
cmp
cmp
cli
pop
cmp
add
dec
and
icebp
push
lods
adc
mov
add
nop
popa
sub
push
out
sub
inc
int3
pop
xchg
push
cld
push
xor
dec
sub
(bad)
leave
nop
repz
test
enter
int3
fisttp
popf
mov
add
ss
out
cwde
scas
adc
inc
dec
std
mov
cmp
xor
popf
mov
mov
mov
mov
leave
mov
inc
pop
int3
push
(bad)
test
movs
and
lods
mov
dec
dec
sti
push
xchg
jge
adc
ins
ret
lock
jmp
(bad)
mov
cwde
mov
cmps
mov
jo
sbb
jecxz
pop
retf
fidivr
jmp
mov
xchg
imul
idiv
xchg
and
xlat
repnz
push
frstor
addr16
adc
adc
in
out
and
mov
shl
mov
and
push
pop
push
(bad)
xchg
jns
test
in
mov
push
dec
cdq
and
cmps
pop
pop
sub
sti
mov
mov
lahf
mov
add
call
cli
xor
movs
cmp
ja
sbb
sub
cwde
mov
retf
(bad)
retf
mov
mov
jmp
jns
push
mov
std
fdiv
dec
xlat
sub
jl
push
add
push
ds
inc
aas
dec
out
stc
out
mov
rcr
jns
mov
gs
mov
pop
stos
xor
sbb
sbb
and
repz
and
mov
mov
loop
xchg
fnstsw
popf
mov
xchg
push
loope
test
movs
sar
dec
test
mov
add
cmps
aaa
mov
fistp
lock
out
add
sub
rol
pop
fild
mov
ds
sahf
cmp
popf
sbb
pusha
in
stos
popa
inc
jns
arpl
jbe
push
jns
aas
repnz
mov
sahf
ss
jecxz
jecxz
inc
add
fdivr
mov
jbe
test
fdivp
rol
xor
and
in
jmp
cmps
inc
inc
scas
pop
loop
mov
mov
int
push
jnp
mov
sub
jbe
ror
push
dec
loopne
cmp
aad
xchg
cmp
adc
pop
in
ds
(bad)
inc
test
add
jbe
sub
pushf
mov
ret
cmc
jns
lods
jmp
aam
pop
lock
jg
sbb
dec
mov
repnz
int
cli
sti
jecxz
push
loopne
jl
sub
push
hlt
mov
stc
push
in
ins
mov
and
stos
pop
or
fdivr
push
dec
sbb
imul
shr
mov
not
and
aam
cmc
js
mov
inc
jne
mov
iret
fist
pusha
cdq
sub
pop
je
pop
jg
push
aaa
pop
cmp
add
jne
scas
mov
push
inc
dec
dec
cdq
push
xor
call
lock
fcmovu
push
(bad)
les
sti
inc
ret
jecxz
ins
imul
cmp
mov
je
outs
scas
test
jnp
jmp
push
push
cmp
cld
(bad)
fwait
je
and
add
pusha
jg
push
das
vpermil2ps
inc
lods
sar
sub
daa
in
inc
in
in
jbe
call
pop
fimul
push
rol
dec
or
or
scas
mov
inc
adc
call
test
fld
jno
or
mov
pop
hlt
imul
mov
mov
imul
xor
pop
rol
mov
push
repz
movs
bound
dec
mov
repnz
mov
pop
cmp
ss
mov
fbstp
fnstsw
xchg
and
cmps
rcl
nop
das
imul
pusha
aas
pop
fdiv
lahf
adc
mov
fcom
leave
sti
mov
cmp
or
inc
jle
xchg
pop
jg
imul
adc
dec
mov
out
fidivr
jno
(bad)
jbe
mov
repz
sub
and
push
test
mov
lods
fistp
test
cli
inc
imul
movs
cmp
sbb
cmc
shl
or
inc
sbb
cld
test
in
sbb
jle
mov
jl
inc
shr
sub
jle
jmp
shl
test
sub
xchg
push
out
pop
mov
push
push
add
mov
loope
fcom
cmp
ins
xchg
cld
and
(bad)
fld
daa
mov
adc
pop
addr16
shl
lock
xchg
push
add
int3
or
jo
cmp
mov
pop
sub
aam
fcmovbe
pop
into
inc
pop
or
inc
ret
not
mov
mov
popf
(bad)
sbb
xchg
sub
and
fsub
xchg
cmp
sub
jecxz
nop
cmc
sub
pop
jmp
ins
sub
mov
popf
sahf
and
xchg
adc
xor
mov
std
or
or
shl
xchg
ror
sysret
fs
outs
adc
aam
repnz
out
call
imul
inc
imul
adc
cwde
or
sub
mov
inc
xor
iret
jo
out
xor
pop
push
pop
mov
dec
xchg
mov
jb
push
sub
adc
xchg
loopne
push
push
dec
cdq
outs
ret
hlt
inc
jno
call
aaa
xchg
cld
xchg
cld
mov
jnp
adc
movs
ror
add
repnz
test
cmp
cwde
cdq
or
dec
outs
adc
sti
jmp
xchg
fidiv
mov
or
lods
test
scas
lock
pusha
add
mov
outs
inc
fwait
js
test
repnz
call
hlt
adc
popf
jnp
jecxz
ins
ret
mov
mov
xor
add
ins
dec
hlt
mov
mov
ja
nop
adc
das
cs
dec
in
test
adc
cld
cmp
push
imul
dec
cwde
add
and
movs
pop
dec
cmp
push
xchg
sahf
mov
xchg
inc
mov
fcom
and
xor
hlt
push
push
mov
sbb
jecxz
or
test
jo
in
sbb
daa
jl
and
test
inc
pushf
sub
stc
loop
adc
dec
fldenv
js
daa
xchg
adc
push
pop
mov
loope
sbb
cmc
jne
pop
icebp
pop
xchg
lock
dec
mov
xchg
push
jmp
fidiv
in
and
mov
adc
lods
in
or
jp
push
outs
adc
inc
sub
sbb
mov
int
cmps
jmp
movs
sar
cli
jge
push
retf
mov
add
fadd
mul
pop
push
mov
ins
add
ins
adc
dec
push
add
test
add
inc
cmp
aas
mov
cli
movnti
mov
push
inc
xchg
in
call
dec
adc
lds
sbb
aam
and
(bad)
daa
xchg
scas
sub
pushf
out
movs
dec
cli
or
test
xchg
add
mov
std
add
pop
push
fnsave
fwait
retf
les
es
cmp
scas
ds
mov
xchg
div
sub
mov
mov
jno
sub
test
or
imul
nop
lea
xor
aaa
add
mov
out
push
pop
mov
int3
sub
arpl
mov
pop
cs
mov
mov
cmp
xchg
jl
icebp
(bad)
clc
leave
inc
push
push
dec
test
mov
mov
xchg
dec
mov
add
movs
xchg
and
clc
xchg
pop
jo
adc
cmp
mov
and
shl
sbb
cmp
jo
cmc
das
inc
scas
ins
jp
sub
lods
into
pop
js
popf
rcl
scas
inc
cmp
sti
jmp
out
xchg
xlat
sbb
outs
jne
retf
jmp
(bad)
mov
inc
jb
adc
cs
add
and
sub
adc
mov
mov
sub
push
mov
add
movs
sub
xor
rcl
(bad)
and
jg
popf
xchg
sbb
fiadd
push
popf
xor
sbb
push
retf
loope
out
sub
ret
fldcw
arpl
mov
jns
cs
pop
pusha
aas
or
xor
mov
push
mov
add
cwde
inc
mov
int3
inc
inc
push
arpl
repnz
cmp
cmp
add
cli
dec
add
jg
sub
sbb
cmp
mov
fwait
sub
xchg
imul
ja
je
cwde
fisubr
clc
xor
adc
rol
aaa
jmp
inc
xchg
test
retf
rol
and
fidiv
push
push
popf
mov
je
jmp
sti
cdq
out
aad
stc
lock
aas
xlat
xlat
sub
imul
pop
pop
out
push
cmp
and
jmp
cmc
xor
jg
scas
repnz
aas
int
daa
sub
ja
out
pop
in
mov
mov
mov
push
call
sub
xchg
push
inc
repz
cwde
cmc
xchg
rol
retf
test
push
hlt
repz
xchg
cmp
mov
or
add
gs
xchg
push
push
(bad)
sbb
dec
fdivr
xor
sbb
pusha
sti
push
adc
out
(bad)
leave
inc
fadd
push
ja
test
mov
inc
mov
clc
add
repnz
fs
adc
sbb
call
retf
ror
test
adc
inc
mov
clc
int
sub
and
xchg
std
data16
ret
fimul
imul
fadd
cwde
cmp
test
push
retf
inc
jle
jno
fcmove
cmp
or
imul
lea
cli
add
xchg
push
and
add
pushf
jge
xchg
popf
push
dec
push
sar
mov
jae
or
jmp
test
or
push
xlat
arpl
cmp
push
jmp
dec
jp
and
inc
lods
in
fbld
sub
addr16
into
xlat
fisubr
push
pop
dec
jle
cmp
bound
out
call
mov
or
mov
mov
mov
xchg
adc
and
xor
dec
add
out
dec
mov
push
mov
pop
dec
mov
cmps
out
jbe
pop
jae
lods
icebp
aad
enter
sbb
outs
xchg
outs
mov
and
sbb
add
cmp
fidiv
ret
mov
xchg
jl
icebp
pop
dec
inc
in
sub
loope
popa
outs
pop
jl
push
enter
jmp
dec
xor
loope
cmc
sbb
jmp
sar
arpl
jecxz
out
(bad)
int3
call
mov
jo
jp
sbb
jmp
imul
xor
ficomp
inc
je
in
popf
jle
(bad)
stc
data16
js
shr
pusha
ss
sub
aam
aaa
js
loope
das
outs
push
(bad)
stc
arpl
jp
adc
dec
inc
add
mov
das
fcmovne
xor
ins
inc
dec
iret
cli
dec
(bad)
mov
xchg
pop
xchg
sbb
pop
leave
shr
das
pop
mov
pushf
lds
pop
mov
xchg
or
fcom
pop
outs
jae
jge
ja
cmps
add
dec
fistp
jmp
cmp
push
inc
jmp
xchg
push
enter
dec
mov
stos
inc
pusha
add
and
je
mov
jecxz
pop
(bad)
test
cmps
sbb
and
sub
int
scas
add
test
loopne
push
push
mov
mov
sbb
mov
sub
inc
clc
neg
addr16
push
mov
cmp
pop
aad
xchg
je
mov
push
adc
mov
lds
push
cmp
jle
sub
pop
js
test
lods
loopne
stc
adc
xchg
xchg
call
mov
mov
rol
jg
scas
repnz
pushf
ret
adc
xchg
sti
push
push
out
jmp
xor
std
lods
pop
icebp
and
shl
in
jge
daa
push
mov
xchg
mov
stc
pop
lods
sbb
sti
arpl
dec
jecxz
xor
ja
stos
sbb
leave
push
dec
mov
push
bound
inc
xchg
sub
jle
add
push
mov
movs
rol
mov
adc
imul
push
push
in
xchg
fsubr
push
in
pop
out
ja
adc
dec
test
addr16
jns
les
stc
loope
cli
aad
les
push
mov
sbb
aad
mov
daa
xor
sub
jmp
sub
inc
(bad)
call
or
fist
xchg
stos
xor
mov
test
stos
mov
(bad)
xor
xor
dec
mov
xor
les
dec
fs
sbb
ret
leave
dec
jno
cmp
imul
adc
js
xchg
and
push
dec
inc
add
and
mov
imul
mov
mov
xchg
sbb
cwde
add
test
pusha
dec
das
fidiv
daa
xor
lds
iret
adc
or
mov
cli
imul
sub
sub
shl
in
push
icebp
mov
dec
sub
adc
pop
stos
add
in
jle
dec
sti
shl
jmp
gs
leave
es
xor
mov
cmc
dec
and
inc
in
cmps
cmp
fadd
or
mov
(bad)
adc
jae
mov
mov
pop
sbb
add
out
in
(bad)
jp
jne
or
shl
fstp
popf
mov
(bad)
idiv
aam
cmps
cld
inc
adc
fstp
repz
and
xchg
inc
add
ret
retf
fstp
rol
cmp
add
out
int3
fld
fisttp
outs
jne
cmc
les
loopne
add
jg
call
outs
lock
jmp
pop
mov
lahf
add
mov
push
or
scas
icebp
adc
cmp
or
and
(bad)
add
test
(bad)
icebp
cmps
ret
arpl
(bad)
jmp
pop
xchg
fucomi
imul
(bad)
in
mov
cmp
pop
ret
jno
mov
and
push
jnp
sar
inc
or
ror
mov
(bad)
arpl
out
xchg
dec
test
adc
out
mov
push
pop
loop
sbb
and
ret
test
or
push
add
scas
pop
add
jnp
mov
leave
and
ret
mov
aas
lods
dec
int
or
scas
lahf
xchg
or
adc
sub
(bad)
call
pop
push
arpl
leave
push
xchg
dec
mov
or
ins
cmp
dec
adc
jo
jl
fidiv
xchg
and
fs
add
mov
jecxz
xchg
movs
push
test
sub
mov
popf
pusha
shl
ins
mov
lods
pop
div
lock
mov
icebp
push
cdq
imul
aam
sub
je
sub
out
push
pop
stos
pop
sbb
sti
in
movs
pop
movs
sar
loopne
jae
std
mov
jbe
xchg
lods
pop
ss
sub
inc
xchg
adc
mov
push
movs
jp
xchg
sub
es
pop
arpl
loopne
(bad)
sbb
lds
cmc
mov
shl
inc
sbb
cdq
retf
fcmovu
nop
jb
jo
mov
test
jp
sub
repnz
fdiv
repnz
xor
adc
xchg
adc
repz
idiv
pushf
push
bound
gs
shr
mul
xor
shl
enter
and
cmp
in
adc
sbb
and
data16
dec
sub
retf
inc
js
xchg
ss
iret
mov
inc
adc
cmp
pop
outs
cmp
fnstenv
data16
lds
mov
imul
sti
scas
leave
lods
inc
push
adc
les
jnp
mov
fmul
mov
pop
add
or
pusha
rol
jle
pushf
cmp
cmps
jmp
xchg
(bad)
xchg
inc
xchg
cmp
std
mov
mov
gs
leave
(bad)
call
in
(bad)
xlat
mov
leave
push
sbb
xchg
ret
ret
push
dec
shr
inc
ds
aaa
xchg
sbb
aas
cs
jns
and
retf
xlat
dec
add
cmc
sub
cmps
loop
call
adc
(bad)
fldcw
fcmovne
inc
cdq
dec
sar
jl
add
mov
add
mov
scas
mov
mov
xor
xor
jecxz
mov
out
scas
fistp
inc
ret
hlt
inc
shr
cmc
ror
fsubr
je
pop
lods
nop
push
call
push
in
cmp
hlt
(bad)
in
aad
aaa
jmp
mov
mov
int3
cs
cmp
mov
leave
fnstsw
out
nop
inc
out
dec
(bad)
std
rcr
push
jns
dec
mov
pop
fcom
shr
sbb
adc
mov
test
sbb
js
fsin
sbb
lock
stos
push
add
gs
arpl
mov
fwait
push
xor
sbb
(bad)
out
int3
fs
push
push
mov
cmps
mov
and
or
rol
(bad)
fisttp
retf
pop
and
inc
jne
jmp
mov
pop
aad
jmp
loopne
inc
loope
shl
push
in
fadd
bound
sub
imul
sbb
cmps
jmp
jne
or
sub
aas
sub
cs
adc
pusha
mov
ret
call
xor
pmaxsw
pop
out
xor
inc
and
adc
mov
ret
cmp
stos
add
inc
cmp
mov
lods
loopne
lea
or
mov
ret
pop
scas
nop
sub
fbld
popa
push
push
retf
repz
clc
fisubr
add
dec
pop
or
jmp
jmp
gs
ja
fs
mov
test
push
jae
or
lds
sbb
retf
adc
xchg
daa
xchg
xor
lea
pop
in
popa
mov
sub
sub
pop
add
aas
out
mov
and
mov
out
push
daa
leave
ins
jecxz
(bad)
repnz
pop
icebp
jb
and
not
and
cmp
pop
hlt
fist
fs
dec
fwait
cwde
jmp
test
sbb
push
imul
(bad)
and
test
mov
dec
xchg
stc
push
and
fldenv
mov
cmp
adc
mov
pop
jmp
fcom
js
jp
loopne
loop
jge
std
pop
mov
sti
cmp
loope
push
push
test
dec
dec
adc
mov
add
mov
sti
jmp
xor
stos
xchg
shr
or
test
add
mov
sub
mov
xchg
inc
rdmsr
pop
fstp
shl
retf
pusha
add
or
popf
and
fucom
mov
or
mov
scas
sub
clc
sbb
pause
sub
jp
inc
movs
cmps
pusha
js
sahf
lds
(bad)
cmp
lods
add
mov
cmps
sbb
cmp
das
lods
out
mov
cmp
cmps
pop
bound
hlt
sbb
or
bound
dec
cmp
jge
mov
scas
mov
adc
sbb
mov
cld
shr
fs
jno
cmps
cmp
imul
cmps
jp
nop
cmp
call
es
xchg
sub
xor
dec
clc
sti
add
scas
imul
lock
dec
call
xor
dec
call
jmp
and
gs
mov
dec
shl
and
mov
adc
stc
xlat
pop
mov
cli
xchg
jb
mov
mov
pushf
mov
mov
inc
inc
dec
enter
sub
add
push
mov
sti
pop
das
mov
push
push
cld
sbb
adc
in
fwait
mov
mov
xchg
fcomp
jbe
stc
pop
mov
sub
ins
add
inc
in
cmp
lea
push
sub
(bad)
dec
and
and
sar
inc
stos
xchg
imul
jns
imul
add
fisttp
aaa
push
scas
adc
fdivr
cmp
or
sbb
jmp
aas
push
repz
dec
sbb
xchg
mov
lods
(bad)
jne
ss
adc
jbe
jle
(bad)
xchg
popf
xchg
xor
mov
dec
sub
pop
or
jnp
dec
or
jg
(bad)
add
or
sar
mov
call
aad
cmp
repz
test
cmps
mov
jmp
fsub
(bad)
loope
call
ss
mov
push
jl
xor
(bad)
cmp
sub
sahf
nop
idiv
mov
mov
bound
popa
std
test
call
movs
sti
dec
push
ret
xchg
pop
fcmovu
add
test
mov
ret
mov
or
aaa
out
xchg
data16
lods
stos
ds
fucom
mov
sub
daa
inc
test
sub
inc
call
test
bound
add
sub
pop
sar
fidiv
shr
(bad)
jmp
cmp
femms
rcr
push
mov
mov
dec
xor
or
xlat
sbb
imul
(bad)
xor
xchg
out
lds
nop
dec
mov
sbb
jmp
and
ja
pop
dec
les
push
jo
push
pop
jb
jge
neg
sbb
jo
and
push
sahf
outs
into
sub
nop
cmp
sti
inc
mov
mov
push
push
sahf
sti
in
stc
test
sub
add
lea
add
xor
mov
and
push
das
in
jp
out
(bad)
fbstp
add
pop
dec
ds
inc
int
call
jbe
mov
inc
retf
scas
jno
ja
mov
cmps
add
(bad)
jb
pusha
inc
push
adc
jecxz
jle
retf
mov
sahf
aas
or
in
sahf
sbb
mov
adc
dec
aad
scas
pop
push
xchg
cmp
shl
mov
xchg
(bad)
sbb
icebp
mov
and
sbb
pusha
pop
mov
sti
sub
and
pop
(bad)
lds
mov
ret
out
dec
or
cdq
push
sub
jnp
movs
dec
dec
dec
add
mov
stos
movs
pop
mov
pop
lods
pop
or
mov
neg
mov
mov
stos
out
leave
xor
cmps
push
dec
add
jecxz
pop
je
add
sub
add
or
or
adc
dec
and
adc
adc
mov
es
adc
add
stos
jp
or
pop
pop
and
aam
push
lds
pusha
scas
mov
jg
xchg
lahf
fsin
dec
stos
or
add
push
dec
sbb
cmp
cmp
pop
xor
pop
xchg
or
cwde
adc
pop
cli
jl
outs
xchg
push
cmp
cmc
(bad)
xlat
loope
sub
ins
push
pop
add
mov
and
push
imul
scas
sub
adc
xlat
jmp
ret
xlat
pop
cmp
stos
inc
arpl
ds
jo
sbb
xlat
dec
ds
adc
not
sbb
mov
xor
fwait
pop
or
dec
iret
inc
lds
pop
xchg
jl
adc
loope
dec
gs
hlt
shr
or
jae
mov
hlt
call
es
mov
ror
stos
loopne
mov
inc
pop
je
mov
push
dec
mov
gs
addr16
int
shl
xchg
mov
add
sbb
pop
dec
aam
mov
je
into
scas
repz
rol
(bad)
lahf
or
(bad)
lock
pop
lock
in
mov
jne
test
jmp
push
sub
or
cmp
adc
lea
lods
mul
imul
mov
pop
lods
retf
mov
dec
jne
mov
jbe
push
jne
push
sub
mov
out
lea
iret
jl
pop
pop
retf
test
test
cwde
mov
xchg
adc
imul
enter
sbb
add
jae
es
or
xor
repz
dec
sti
je
xor
ins
xchg
(bad)
out
adc
mul
rcl
ds
mov
and
add
je
arpl
xor
and
push
cmps
in
je
mov
div
loop
movs
and
std
mov
jo
push
popa
or
jne
call
sahf
out
retf
mov
add
and
ds
aas
pop
stos
scas
fcmovu
ja
inc
mov
test
sbb
push
imul
jno
int3
jg
jmp
push
mov
push
jmp
cmp
xor
ret
inc
rcl
lods
jne
rcl
repz
sbb
adc
clc
lods
mov
jnp
xchg
xchg
cmps
mov
and
mov
inc
in
ret
js
jno
mov
push
add
push
fidiv
inc
xchg
push
xor
mov
sahf
sti
sbb
cmp
cmp
je
jns
inc
cmp
or
jmp
sub
rcl
jne
dec
stos
std
aam
jo
aaa
or
jge
and
stos
dec
call
hlt
push
stc
push
xor
pushf
nop
push
push
dec
(bad)
jmp
fsubr
leave
jle
inc
cmp
sub
mov
clc
out
not
mov
jl
sub
(bad)
sub
and
mov
add
sub
fptan
clc
cmps
jl
es
iret
movs
sbb
mov
mov
test
les
xor
push
push
fnstenv
in
cmp
gs
div
add
test
imul
cld
push
sbb
cld
ret
sar
push
fdiv
in
xchg
mov
jmp
mov
pop
loopne
(bad)
mov
ss
sahf
push
pop
jns
cmps
cmp
aad
pop
add
sar
addr16
mov
add
sbb
stos
jge
sbb
jle
sub
add
jo
clc
adc
rep
(bad)
jl
test
add
dec
pop
pusha
push
lea
dec
mov
addr16
sbb
xor
mov
lods
movs
mov
cmp
dec
cmp
dec
mov
mov
int3
ins
mov
jge
mov
pop
sub
mov
cld
pop
or
adc
mov
lea
(bad)
clc
pop
xchg
xor
aas
repnz
xchg
mov
jle
push
enter
int3
fs
jne
xchg
shl
push
pop
fnstsw
bound
dec
pop
cmp
mov
cmp
(bad)
psllw
movs
in
ins
xor
xor
xchg
leave
and
mov
sar
loop
jae
xchg
cwde
and
inc
(bad)
in
and
pop
mov
cmp
jne
aam
fwait
dec
sbb
add
push
jg
mov
xchg
outs
aaa
fld
sub
arpl
or
adc
rol
add
lock
mov
cmovno
pop
sti
mov
lods
jmp
jmp
shl
xor
adc
hlt
inc
shr
jmp
push
call
call
loope
int3
add
pop
outs
gs
inc
or
inc
cld
dec
xor
dec
dec
jmp
leave
mov
mov
inc
mov
add
adc
(bad)
push
cs
xlat
cmps
dec
movs
popf
push
xchg
mov
and
push
adc
mov
and
mov
sbb
push
add
popa
pop
push
pop
data16
jno
push
sbb
icebp
or
jp
lahf
push
cmp
mov
xchg
icebp
push
test
clc
add
in
xchg
into
cmp
(bad)
jp
dec
dec
mov
in
add
test
sub
mov
inc
(bad)
hlt
jl
sahf
pop
jo
mov
fs
cs
sti
loope
jg
pop
and
add
xor
(bad)
sbb
lea
cli
mov
pop
or
pop
cmp
loope
dec
mov
adc
push
pop
sbb
outs
jmp
or
jnp
cmp
fistp
icebp
aam
daa
xchg
movs
sub
xchg
adc
ins
mov
fiadd
cmp
(bad)
sub
or
bound
xor
dec
arpl
aam
js
jle
cwd
inc
addr16
xor
xor
or
xchg
mov
pop
out
scas
icebp
inc
sti
jg
or
movs
sub
shl
ins
cmp
sbb
ret
adc
inc
inc
in
pop
push
call
dec
adc
push
je
loopne
sub
pusha
push
cmps
push
mov
mov
mov
push
pop
mov
repz
aam
or
adc
daa
mov
mov
mov
push
inc
into
cmp
adc
ret
(bad)
clc
mov
stc
cmp
push
xchg
jnp
lahf
pop
dec
mov
mov
cmp
cmp
sti
scas
in
clc
aam
sub
or
retf
sub
test
push
in
addr16
add
aas
dec
sub
pop
(bad)
sbb
mov
jbe
mov
sbb
mov
add
aad
paddusb
sub
inc
jmp
lock
lods
iret
mov
jg
sub
sti
adc
movs
ds
mov
retf
inc
das
dec
cwde
inc
pop
mov
or
jecxz
mov
add
(bad)
mov
test
stos
adc
mov
loopne
sub
add
pop
add
into
mov
sar
push
fsubr
cdq
pushf
cdq
mov
mov
loop
int
es
cmp
mov
pop
cld
or
sbb
add
cmps
je
ret
add
lahf
out
ror
xchg
imul
sar
mov
fidiv
call
std
jp
test
xchg
xor
cmp
icebp
stos
cmp
xor
cmp
call
adc
jnp
push
mov
cmps
das
imul
imul
faddp
out
int3
push
cmp
movlps
or
ret
xchg
in
mov
(bad)
jne
inc
cmp
stc
and
aas
sar
repz
jmp
push
push
imul
in
push
adc
xor
sub
or
dec
cmp
mov
fild
push
repnz
out
mov
fst
mov
xchg
inc
loopne
push
add
ret
xor
pop
dec
inc
jp
pop
fwait
cmps
les
sbb
mov
xor
enter
aas
push
xchg
(bad)
adc
dec
movs
jge
adc
mov
stc
jecxz
in
add
pop
mov
mov
xchg
inc
loop
sbb
scas
jmp
and
movs
jge
mov
sbb
sbb
mov
nop
inc
retf
jo
inc
(bad)
in
in
or
mov
push
jae
stos
fist
and
out
(bad)
aad
mov
mov
mov
rol
xlat
sbb
pop
add
ret
sbb
or
cmp
loope
(bad)
sub
cld
mov
ret
mov
in
adc
mov
xchg
mov
sbb
shl
sub
stos
dec
mov
pushf
sub
(bad)
xchg
mov
xor
adc
inc
(bad)
loop
in
add
fidiv
ret
xor
(bad)
cdq
shl
movs
xor
enter
pop
xchg
daa
call
(bad)
out
imul
and
aas
pusha
jp
mov
call
and
mov
enter
inc
mov
pop
adc
mov
xchg
(bad)
cmp
dec
jb
cmp
push
sbb
add
mov
ror
push
xor
daa
je
jmp
push
add
dec
add
(bad)
int
into
adc
adc
add
mov
popw
sub
ja
out
test
push
fcomp
nop
lods
into
retf
into
xor
pop
fdivr
aad
movs
stos
mov
jle
xchg
mov
and
jg
popf
adc
xchg
push
push
jg
in
std
leave
(bad)
jg
inc
scas
jle
add
push
pusha
imul
cli
pop
cmc
adc
frstor
jns
xlat
ret
stos
ffreep
(bad)
mov
cld
fiadd
or
js
sub
out
pop
outs
iret
cmp
fwait
shr
call
fbstp
inc
mov
xchg
cdq
nop
jmp
div
sbb
cmps
ja
mov
divps
out
mov
pop
movs
aam
(bad)
dec
je
push
push
ret
out
mov
fwait
xor
test
jns
jg
test
dec
dec
test
jbe
pushf
repnz
ds
stos
xor
(bad)
dec
xor
pushf
in
push
add
mov
aas
xchg
out
mov
aas
enter
and
push
push
jnp
mov
imul
push
or
call
and
out
frstor
cwde
cs
dec
daa
ficom
mov
push
aam
clc
lahf
in
sbb
mov
sub
pop
loope
jmp
fdivr
aad
xchg
xchg
movs
std
and
and
cmp
xchg
ret
movs
int3
lds
or
jecxz
jns
mov
xchg
jbe
mov
lea
int
mov
inc
cli
push
or
imul
(bad)
fisubr
cld
or
cld
dec
fs
fs
mov
mov
lods
and
repnz
or
int
inc
push
lods
not
in
push
(bad)
les
js
and
mov
mov
aad
sbb
mov
lods
mov
iret
les
sbb
push
(bad)
push
jle
mov
cmp
xchg
out
popa
inc
pushf
push
mov
scas
sahf
in
movs
pushf
xchg
aad
(bad)
sar
cmc
into
sbb
test
mov
add
stos
jl
push
popa
ja
aam
mov
pop
movs
es
fistp
push
xchg
scas
loope
jmp
pop
pop
mov
loope
mov
inc
test
fisttp
mov
(bad)
gs
and
jno
pop
mov
aam
fs
cld
out
adc
pop
cmp
lock
jle
and
aaa
hlt
fwait
into
(bad)
cmp
pop
sub
push
fisubr
(bad)
sbb
daa
or
icebp
inc
dec
jp
inc
mov
inc
retf
mov
sub
shr
scas
fs
push
icebp
shl
bound
clc
sbb
in
jo
inc
fucom
sub
jmp
test
xor
(bad)
(bad)
lahf
mov
push
jno
push
ds
ror
mov
mov
push
aaa
xchg
stc
mov
and
retf
push
aas
inc
inc
cmp
push
adc
test
out
clc
or
stos
sub
ret
and
(bad)
fs
iret
jp
in
and
or
inc
mov
imul
adc
sub
repz
shl
or
imul
sbb
cmp
xchg
inc
and
test
sbb
rcl
sub
jns
pop
cmp
test
ds
cld
jne
fisubr
mov
pop
mov
mov
pop
test
(bad)
mov
mov
pop
add
(bad)
adc
jno
adc
push
dec
dec
jp
xchg
movs
es
push
retf
and
sbb
jecxz
dec
adc
es
push
pusha
push
mov
push
iret
sbb
jg
out
mov
rcl
jbe
xchg
fdivp
pushf
and
mov
xchg
and
fldenv
cdq
inc
or
aam
add
call
fistp
fnstcw
shl
mov
ins
push
ds
push
iret
(bad)
hlt
sahf
outs
mov
sar
xchg
xchg
push
add
aaa
scas
inc
and
mov
sbb
imul
cmp
cli
cmp
push
mov
test
retf
mov
sbb
mov
push
cmps
sbb
inc
push
in
rcl
jecxz
mov
setno
mov
loop
cmp
cmp
mov
ret
jmp
sbb
or
(bad)
fmul
clc
cli
je
clc
dec
fs
push
xor
dec
jg
(bad)
pop
data16
mov
cmp
inc
push
mov
or
cmp
mov
mov
je
(bad)
jmp
aad
or
push
into
pushf
pop
cmps
pop
ss
dec
shl
inc
test
mov
add
stos
fwait
sahf
call
js
push
cmp
clc
xchg
jecxz
xor
push
rcr
inc
sub
aas
js
pop
shr
dec
mov
dec
adc
mov
mov
xchg
popa
pusha
daa
and
data16
pop
push
cmp
test
imul
call
test
mov
mov
jne
mov
cmc
lea
xchg
int3
xor
mov
nop
pushf
imul
loop
mov
xor
into
retf
lea
mov
mov
adc
and
into
xchg
xor
dec
outs
pop
pop
xchg
or
cmp
ds
cmp
leave
outs
xchg
pushf
retf
pop
sbb
jmp
(bad)
adc
sub
and
adc
in
js
mov
mov
sbb
out
aam
pop
arpl
inc
push
outs
inc
lods
and
mov
cmp
xchg
in
push
mov
call
dec
lods
sub
bnd
cwde
je
mov
aaa
mov
sub
ret
gs
xchg
push
mov
jg
and
jns
and
inc
push
pop
out
ret
dec
je
xchg
sbb
rcr
outs
and
icebp
mov
inc
daa
push
add
clc
push
(bad)
fisttp
call
test
and
dec
out
ins
or
xchg
and
ret
or
pop
inc
into
lods
bound
mov
call
xchg
call
lods
and
call
sbb
fst
sti
repnz
mov
(bad)
jns
sbb
push
mov
push
pop
int
pop
mov
pusha
mov
push
cmps
outs
mov
test
aad
js
adc
in
and
cmp
fs
jg
hlt
rcr
cwde
and
inc
sbb
int
push
or
dec
and
fimul
dec
adc
and
sub
ret
cmps
mov
inc
mov
push
gs
fwait
add
jmp
and
xor
push
adc
dec
add
inc
cmp
in
dec
add
test
push
mov
out
in
repz
and
loopne
push
imul
push
sub
adc
shl
lock
push
cmp
loopne
mov
cmps
and
xchg
test
pop
gs
cli
adc
out
ins
push
ds
pop
sbb
fld
shl
cmp
imul
cmp
mov
stos
adc
adc
call
jne
or
in
push
adc
neg
push
push
(bad)
jne
addr16
(bad)
jne
leave
inc
mov
and
inc
add
in
(bad)
std
iret
push
das
mov
mov
sub
leave
(bad)
pop
out
mov
(bad)
and
and
and
loopne
sub
fdiv
pop
(bad)
sub
test
and
fld
ror
sub
push
in
sub
cmp
sub
jmp
mov
push
daa
xor
pop
inc
dec
pop
(bad)
mov
inc
mov
xchg
inc
pop
push
push
xchg
scas
dec
jl
jmp
inc
xchg
inc
out
sbb
adc
fnstcw
popf
aaa
mov
adc
add
mov
and
inc
mov
pop
jne
sbb
pop
cmps
leave
pop
ins
out
sbb
clc
mov
jmp
movs
and
repz
xchg
(bad)
jmp
or
mov
pop
mov
pop
mov
shl
and
retf
xchg
ja
or
jge
adc
cmps
and
adc
jl
push
push
mov
nop
sbb
mov
(bad)
mov
sub
cmp
push
sbb
cld
into
xlat
lahf
jnp
cmp
add
sub
(bad)
mov
ret
sbb
xor
cld
clc
fidivr
fsubr
popa
jl
and
dec
cwde
sbb
ins
sub
and
xchg
xchg
ja
data16
fucomp
mov
xchg
jl
outs
dec
mov
push
and
out
inc
(bad)
sbb
add
adc
jmp
mov
xchg
arpl
test
sub
lock
lea
ja
mov
mul
outs
test
in
cmp
mov
mov
scas
push
jb
cmp
jp
inc
xchg
pop
jl
adc
push
push
dec
in
lea
sub
xchg
repz
and
push
inc
xor
jl
sbb
ror
inc
push
jne
in
dec
xchg
(bad)
cmp
and
repnz
cld
aas
inc
scas
gs
mov
cli
and
clc
jb
jmp
xchg
jl
xor
outs
out
xchg
aaa
jnp
pop
xchg
xor
std
scas
aas
test
sub
xchg
adc
mov
and
inc
movs
sub
pop
or
test
push
or
inc
sbb
and
or
push
sbb
js
ins
sbb
cli
into
out
out
jnp
ret
cwde
das
cmc
outs
into
scas
sbb
jns
call
rcl
dec
dec
retf
pop
aaa
lock
popf
inc
cmp
call
pop
pop
xchg
mov
cmp
lods
mov
stos
aaa
daa
jge
hlt
fbstp
cmp
dec
(bad)
cmp
cmc
mov
sar
sub
cmc
out
sbb
jmp
ror
ret
push
cmp
pop
xor
ret
pop
bound
sbb
clc
popa
sbb
cmp
jmp
pop
push
(bad)
xchg
std
mov
mov
call
push
std
pop
mov
sbb
sar
sub
jle
enter
pop
sub
push
test
cmp
loope
xor
lds
jmp
call
loopne
xor
pop
add
out
(bad)
jle
call
fs
sbb
jo
push
push
sub
push
clc
les
sub
aad
pop
push
or
ins
hlt
addr16
sbb
mov
or
and
shl
test
xor
scas
jb
inc
mov
into
push
nop
xchg
xchg
jge
retf
imul
ret
popf
movs
outs
mov
mov
out
sti
mov
mov
int3
fsubr
dec
fiadd
loope
fisub
jle
rcl
xor
and
das
xlat
pop
jmp
ins
dec
push
paddusb
ins
(bad)
jecxz
mov
xor
xchg
pop
mov
mov
out
gs
cmps
repnz
cdq
adc
cmp
add
(bad)
mov
pop
(bad)
mov
xchg
jecxz
arpl
sbb
cmp
sub
add
(bad)
mov
aas
mov
jnp
adc
pushf
aaa
add
jne
or
(bad)
xor
(bad)
jmp
rcl
dec
stos
dec
jecxz
jmp
je
adc
pop
dec
push
int
jbe
pop
cld
mov
ss
cwde
jle
push
mov
inc
out
dec
or
shl
mov
dec
fadd
inc
cmp
mov
xor
cld
out
push
lds
inc
sub
push
test
jnp
cld
inc
xchg
jle
inc
mov
adc
mov
test
and
stos
rcr
pop
je
mov
cld
sbb
rol
or
popa
(bad)
mov
mov
dec
inc
mov
test
scas
fild
popa
mov
scas
loope
imul
pop
aaa
loope
fs
lds
cwde
aas
cmc
repnz
hlt
and
jns
in
xor
rcr
mov
mov
fisub
loop
jmp
cli
and
and
jb
cli
call
pop
ds
call
test
out
xor
movs
and
dec
cld
inc
cmp
repz
sti
(bad)
xor
(bad)
pop
(bad)
(bad)
pop
fcmovbe
mov
dec
ret
cmp
sbb
mov
les
fiadd
and
out
pop
add
cmps
jle
std
loopne
xor
fwait
dec
(bad)
cmp
ds
push
loopne
(bad)
sbb
inc
stos
mov
and
mov
daa
mov
outs
adc
(bad)
adc
inc
mov
mov
popf
mov
xchg
cmp
sub
les
jg
inc
mov
out
stos
lea
div
addr16
icebp
mov
cmp
cmp
cmp
cmp
mov
mov
xor
xchg
in
pop
and
fisubr
imul
jl
loopne
mov
lock
sbb
and
pop
inc
repz
movs
retf
xor
push
cwde
sub
nop
out
sti
mov
retf
xchg
fmul
cmovae
add
outs
xor
mov
jb
inc
inc
test
sbb
sahf
mov
ds
outs
pop
xor
sub
(bad)
sub
fist
rcl
mov
inc
repz
mov
dec
je
adc
ret
into
imul
loop
(bad)
mov
cmp
add
loopne
mov
fsubr
lock
jp
imul
imul
pop
out
rol
xchg
lea
sar
pop
sar
sbb
sub
fwait
bound
sub
cmc
es
sbb
add
loopne
pop
cmp
jae
fdivrp
xchg
test
dec
adc
out
lock
in
xlat
(bad)
neg
push
xor
daa
std
jbe
mov
push
pop
cdq
rol
sbb
xor
push
xchg
dec
jnp
scas
mov
ja
(bad)
jle
cli
mov
jns
dec
cmp
jl
adc
mov
int
dec
lock
fidiv
or
sub
test
test
movs
xor
bound
push
mov
mov
pop
adc
mov
(bad)
cmps
ret
sbb
xchg
(bad)
int3
or
xchg
xchg
ret
mov
xchg
pop
dec
movs
rol
es
int
sbb
xchg
retf
mov
sub
ins
and
bound
ror
sub
(bad)
clc
mov
shl
cmp
mov
xor
dec
mov
neg
sbb
bound
mov
xor
push
pop
inc
mov
add
fsub
xor
das
lods
cmp
xchg
mov
mov
jle
mov
loopne
or
popa
loopne
out
movs
adc
ins
xchg
cmps
mov
mov
jmp
xchg
mov
jnp
add
add
cmps
jl
(bad)
jmp
cmp
and
or
mov
cwde
sahf
jae
sub
cwde
sub
scas
mov
jp
mov
popa
cmp
unpcklps
xchg
cmp
sub
mov
cmp
mov
pop
dec
cwde
hlt
sbb
fmulp
add
mov
add
test
mov
push
push
push
(bad)
sbb
dec
daa
fild
cs
or
retf
xchg
push
and
loope
xchg
inc
mov
cmp
xor
(bad)
les
mov
into
rcr
pusha
mov
div
push
add
adc
lods
mov
push
xor
adc
(bad)
out
inc
dec
mov
mov
mov
push
je
shl
scas
shl
fild
dec
add
lahf
ins
dec
ret
sub
shr
and
aad
xlat
or
add
dec
cs
into
adc
jp
add
daa
xchg
sub
popa
sar
sub
mov
or
rcl
cmp
test
das
and
mov
(bad)
pop
test
cmc
mov
xor
mov
mov
loop
cmp
iret
test
xor
push
lods
out
and
retf
add
adc
call
cmp
paddq
sub
xor
fwait
rcr
inc
mov
jae
jmp
mov
in
mov
mov
mov
sti
mov
into
and
cmps
out
call
popa
jmp
add
jmp
xlat
mov
push
pop
jne
fnsave
xchg
adc
and
hlt
fidivr
mov
retf
mov
or
mov
aad
outs
(bad)
je
jns
pop
inc
gs
cmp
mov
mov
sar
test
dec
fisttp
lods
jl
arpl
push
push
dec
scas
clc
xchg
es
mov
pusha
popf
(bad)
mov
adc
and
lahf
retf
mov
push
xchg
xor
inc
add
push
and
mov
mov
or
dec
out
scas
jbe
push
sbb
jo
arpl
push
imul
inc
pop
dec
cdq
inc
mov
xor
sub
lock
test
sub
push
or
mov
int3
sbb
test
aad
sar
xchg
pop
dec
mov
cdq
mov
unpckhps
mov
push
push
mov
in
repnz
mov
sbb
pusha
call
sbb
xor
mov
mov
das
jg
aaa
das
add
and
push
fsub
sbb
lds
or
ror
stc
jo
jge
add
pop
mov
pcmpeqw
xlat
(bad)
dec
mov
punpckldq
mov
push
adc
push
xchg
mov
and
test
outs
push
das
jge
or
enter
cli
ds
es
outs
jmp
leave
xor
lods
cdq
xchg
call
or
int
std
xor
fisttp
pushf
ficomp
xor
mov
jmp
imul
(bad)
inc
popf
idiv
or
push
lods
dec
push
dec
repz
push
pop
movnti
iret
jle
(bad)
push
fsubr
push
xchg
pusha
retf
repnz
dec
enter
mov
mov
xchg
nop
and
push
mov
jl
pop
stos
cmp
fidivr
inc
xor
(bad)
or
xchg
mov
stos
gs
xor
arpl
mov
clc
call
loop
dec
clc
icebp
les
mov
ror
inc
fldcw
icebp
popf
outs
lock
dec
sbb
inc
mov
adc
mov
inc
hlt
into
daa
jbe
adc
setns
test
pop
xor
mov
scas
adc
sti
or
rol
dec
add
data16
mov
cmp
loopne
xor
mov
cmp
(bad)
and
lds
sub
ret
inc
cmc
addr16
push
pop
xchg
pop
pop
jno
dec
clc
or
and
and
sub
inc
call
repz
mov
sub
scas
mov
jmp
and
je
or
(bad)
xchg
mov
pop
fnstenv
call
cs
ins
adc
adc
in
xor
mov
inc
push
ror
mov
leave
out
xchg
test
out
cmp
mov
pop
push
add
push
cmp
and
mov
aam
xor
pop
leave
xor
addr16
or
loope
sub
data16
into
push
and
lods
ins
add
and
jp
inc
ss
loopne
ret
add
(bad)
or
mov
sbb
and
pop
aas
cmp
or
aad
cmp
dec
add
mov
aaa
inc
add
shl
fwait
sub
cld
mov
dec
fisubr
loop
lock
dec
inc
rcr
jb
cmp
ret
pop
jmp
add
jmp
ins
sub
xchg
sbb
pop
xor
cdq
in
push
add
jb
push
adc
inc
and
pop
dec
pop
push
outs
adc
jno
add
xlat
xchg
inc
stc
dec
and
movs
pusha
pop
pop
inc
sbb
test
(bad)
jo
daa
mov
inc
or
repz
in
mov
das
fisttp
(bad)
outs
ret
adc
sub
imul
shl
in
mov
push
popf
sbb
repz
or
das
dec
mov
inc
cmp
fldenv
pop
sub
montmul
cmps
pop
mov
(bad)
in
xor
out
jecxz
sbb
ret
mov
daa
lahf
cmp
cmp
push
test
adc
sub
mov
push
cmp
fs
add
iret
scas
test
cmp
xor
dec
xchg
xor
pusha
jae
stos
je
fisttp
mov
lds
fadd
(bad)
cmp
fistp
and
push
scas
rcl
fisttp
push
movs
loop
mov
popf
sub
push
ffreep
lock
pop
push
arpl
repnz
xor
mov
mov
dec
in
xor
sar
dec
dec
jo
test
icebp
xchg
aad
adc
xchg
pop
es
mov
dec
pop
add
sahf
mov
mov
imul
sub
je
iret
shr
dec
inc
mov
jle
lods
mov
in
or
arpl
and
call
xchg
imul
sub
setge
mov
cdq
fistp
ins
sbb
mov
pop
mov
mov
adc
js
imul
sub
mov
pop
xor
pop
(bad)
inc
sub
pushf
dec
sbb
mov
pushf
leave
mov
stc
frndint
jne
xchg
repz
in
nop
int
sub
fs
call
movs
jno
jmp
dec
xchg
mov
add
inc
int
mov
pop
jecxz
cmp
int
fsub
add
cs
loope
icebp
test
fs
fs
fnstenv
xor
lahf
test
ins
mov
mov
(bad)
mov
push
dec
jo
mov
mov
jo
xchg
cld
int3
mov
mov
sub
movs
jp
xchg
push
sahf
pusha
cmps
aas
push
hlt
jae
jo
mov
sbb
dec
push
inc
push
mov
retf
cmc
fcomp
xor
cmp
sbb
xchg
dec
xchg
mov
xor
mov
push
dec
imul
ja
xchg
inc
idiv
xor
mov
shl
inc
pop
xchg
dec
mov
cld
jbe
push
jle
popa
imul
outs
mov
cmp
out
add
mov
mov
les
sbb
popf
xor
test
push
shl
cmp
sbb
outs
data16
xchg
movs
dec
mov
mov
mov
imul
xchg
sbb
mov
push
fnsave
out
nop
repnz
or
retf
jnp
popf
inc
frstor
cmp
push
push
scas
push
jp
inc
and
lds
or
mov
push
and
test
push
xor
mov
test
repz
repz
mov
test
fiadd
mov
mov
jp
shr
repz
pop
test
shl
stos
ret
and
inc
daa
aaa
push
test
bound
cwde
mov
cmp
dec
movs
cmps
sbb
push
xchg
sar
(bad)
mov
das
cmp
sbb
mov
iret
and
in
push
sbb
iret
popf
fwait
pusha
fcomp
mov
clc
dec
sub
sub
sbb
or
(bad)
xor
(bad)
stc
repz
bnd
mov
sbb
pop
stc
add
pop
inc
nop
(bad)
mov
clc
das
les
or
js
jmp
jns
xor
sub
mov
imul
jle
cdq
dec
dec
mov
xchg
sbb
mov
in
scas
and
sti
or
popf
add
or
shr
fwait
cmp
shl
mov
stos
pop
xor
add
in
call
adc
pop
sbb
fidiv
test
es
ins
push
lods
mov
xchg
and
out
nop
pop
dec
add
xlat
outs
add
ret
or
mov
xchg
iret
pop
inc
into
(bad)
and
or
ror
or
and
dec
mov
or
inc
frstor
fcmovnbe
aad
mov
xchg
dec
js
jo
sar
adc
jbe
and
fcomp
jb
push
xlat
scas
mov
sub
test
leave
ret
cmp
stos
inc
push
es
mov
std
mov
jae
ds
jecxz
ret
jg
xor
mov
clc
inc
cmp
lds
arpl
cli
jg
xchg
in
(bad)
dec
ins
jmp
push
jns
adc
fs
in
fidiv
mov
and
push
test
xor
and
pop
movs
xor
icebp
mov
ja
shl
out
dec
cmps
outs
add
retw
movs
inc
mov
push
cmp
call
imul
arpl
popf
int3
sbb
adc
mov
mov
xor
movs
dec
pop
mov
mov
mov
shl
mov
push
aad
out
and
adc
pop
(bad)
call
push
movs
pop
lods
push
or
pop
xor
and
loope
icebp
mov
jge
stos
ror
inc
mov
dec
sub
and
or
cli
(bad)
nop
adc
or
xchg
mov
test
mov
dec
fmul
push
out
fsub
(bad)
jp
shr
retf
fmul
dec
add
(bad)
xchg
(bad)
jl
int
xchg
out
pop
dec
ret
lea
mov
movs
sbb
scas
adc
pop
mov
shl
xchg
cmp
mov
in
cli
xchg
aad
push
cmp
or
bound
mov
inc
addr16
loopne
xor
or
hlt
jo
dec
lea
jmp
rol
cdq
and
add
sbb
jecxz
cmp
adc
bound
xchg
ins
sbb
sbb
mov
jmp
mov
xor
mov
jge
iret
inc
mov
in
sar
cmc
mov
(bad)
sbb
imul
add
mov
push
xlat
jmp
clc
std
pop
mov
outs
daa
dec
mov
and
stos
jle
cmp
test
add
inc
mov
das
loop
addr16
cli
mov
in
cld
push
mov
add
fild
out
add
retf
xchg
dec
mov
jmp
retf
or
sub
jb
out
add
push
push
xor
and
mov
mov
rol
mov
das
in
push
jp
push
les
or
pop
sbb
and
arpl
sub
sbb
adc
cmp
les
mov
mov
in
repz
cwde
jb
or
xlat
test
in
cmp
jns
pop
push
xor
push
push
cmps
sub
fdiv
cmp
or
fist
cld
int
retf
out
push
or
pop
mov
in
cmc
xor
into
cmp
cld
out
push
inc
shr
(bad)
repnz
push
cmp
sub
rol
out
cmp
jle
and
ret
shl
imul
xor
popa
mov
fnsetpm(287
xor
daa
hlt
ds
add
sub
adc
fimul
ret
cmps
mov
sbb
dec
mov
sub
mov
ss
xlat
sub
retf
add
dec
loope
and
popa
cmps
adc
enter
or
je
cmps
sbb
fadd
mov
xor
inc
lea
xchg
dec
push
cmp
iret
and
leave
mov
push
xor
xchg
(bad)
mov
scas
pop
cli
push
or
cmp
frstor
les
sub
daa
cmp
push
push
jno
inc
jge
neg
fdivp
mov
loopne
ret
or
add
pop
add
mov
jae
aas
sbb
mov
je
jle
inc
test
(bad)
fdivr
sub
mov
shr
repz
in
jbe
imul
inc
cmps
add
inc
aaa
push
fist
inc
arpl
sbb
ins
and
out
in
movs
mov
bound
in
fs
outs
inc
shl
mov
dec
mov
sub
imul
sub
inc
adc
aad
enter
loop
or
push
mov
(bad)
(bad)
or
retf
dec
nop
mov
xchg
in
sbb
mov
test
cmp
ss
jnp
sbb
mov
test
fiadd
repnz
outs
scas
mov
cmps
mov
outs
mov
and
cwde
mov
fs
pop
(bad)
dec
sub
arpl
lods
jle
jmp
mov
fwait
jl
add
in
mov
cwde
outs
sub
pop
inc
dec
dec
scas
out
push
push
and
dec
stc
loope
fidiv
shl
pop
jmp
add
lock
bound
mov
in
jns
add
mov
mov
or
mov
add
not
ret
cmp
test
xchg
add
mov
addr16
mov
adc
jp
dec
push
mov
pop
mov
pop
add
fsubr
icebp
pop
jmp
and
aad
ja
cld
mov
jp
sbb
cs
push
push
shl
mov
ffree
fistp
cmp
lea
adc
imul
mov
inc
and
(bad)
hlt
fld
(bad)
jle
pop
jne
inc
sbb
ins
mov
sbb
(bad)
outs
adc
sbb
cmp
push
sbb
jp
dec
mov
lods
movs
mul
mov
inc
pop
pop
jno
adc
push
mov
add
lods
push
leave
retf
and
mov
rcr
movs
test
mov
mov
adc
js
and
xchg
imul
call
pop
mov
ret
inc
xchg
push
sar
sub
arpl
or
daa
fild
ja
sub
inc
push
fcmovu
or
retf
(bad)
dec
clc
add
repnz
fsub
mov
das
or
mov
lods
xor
mov
mov
not
sub
jne
out
xor
(bad)
pop
sbb
ins
fmul
push
call
add
outs
cmp
jne
mov
outs
pop
dec
sbb
fs
sub
mov
jl
mov
adc
inc
or
inc
jo
and
jno
inc
(bad)
cld
mul
in
test
push
push
mov
leave
or
jmp
or
in
popf
mov
fnsave
xor
clc
add
cmp
mov
mov
lods
mov
push
imul
ret
js
jg
fisttp
or
test
sbb
ds
cdq
rcl
cwde
in
cmc
pop
lds
adc
arpl
pop
ins
inc
mov
cmps
sub
xor
pop
inc
jmp
cdq
dec
push
es
ss
iret
and
(bad)
dec
inc
daa
int3
dec
cdq
aam
in
dec
in
leave
xor
rol
pop
xor
lods
gs
retf
inc
dec
xor
sbb
mov
and
and
jb
adc
sub
mov
adc
dec
ins
repnz
call
push
adc
xlat
test
pop
repnz
ja
xchg
retf
dec
push
call
sbb
sbb
xor
js
cmp
pop
shl
leave
arpl
out
push
aaa
enter
cmps
cmp
in
sub
outs
loope
cmp
rcr
xchg
jmp
jmp
mov
loopne
mov
stos
ins
(bad)
aaa
dec
push
out
sbb
test
xchg
add
inc
mov
mov
leave
shl
outs
retf
xor
xchg
dec
and
out
int
push
nop
mov
mov
lock
inc
ins
rcl
fnsetpm(287
stc
dec
mov
sub
pop
jo
push
cs
cwde
mov
stos
jle
scas
lods
aaa
and
sbb
xor
aas
js
mov
mov
pop
data16
mov
add
cmp
daa
call
xor
clc
jmp
mov
push
out
sbb
pop
sub
les
loope
les
dec
pop
clc
int
retf
call
inc
stc
retf
push
data16
stc
repnz
sbb
cmp
jnp
xchg
nop
test
in
or
jb
xchg
in
leave
les
xchg
movs
lea
adc
repnz
dec
xor
test
cmp
push
test
jbe
push
popa
dec
into
retf
bound
mov
push
pop
dec
mov
mov
mov
push
dec
cmp
cmp
cmp
xchg
push
and
data16
mov
(bad)
mov
iret
retf
xchg
jle
push
mov
retf
sbb
mov
lock
mov
scas
sar
mov
mov
mov
push
mov
inc
cwde
pop
das
jno
pop
jl
je
mov
sbb
and
call
cmc
jg
(bad)
jo
ja
cmps
and
mov
lods
stos
lahf
outs
fwait
cmps
jecxz
inc
push
dec
xor
push
fistp
retf
in
ret
popf
sub
and
outs
retf
cmp
and
shl
mov
dec
(bad)
call
mov
pop
mov
fsubr
ds
push
mov
ja
push
std
and
xlat
aaa
mov
lods
cmc
mov
jge
mov
or
jo
inc
enter
outs
pop
lock
arpl
test
pop
fistp
jp
dec
xchg
inc
inc
je
pop
mov
cmp
pop
push
add
fisttp
cmps
mov
lods
jmp
jmp
loopne
inc
neg
push
cmp
xchg
movs
push
neg
pop
out
pop
jmp
push
mov
mov
aam
cmp
add
test
mov
xchg
mov
cmp
jmp
or
lods
fld
jmp
je
pop
jge
inc
lods
cld
shr
xchg
and
lods
push
xlat
jle
cld
adc
jle
mov
ret
imul
cwde
jae
loopne
lds
xor
pop
loop
ss
movs
movs
aam
mov
dec
loopne
adc
xchg
in
lea
xor
icebp
cld
push
push
sub
xlat
das
mov
sub
std
xchg
fisubr
pop
out
mov
pop
test
mov
pop
pop
dec
push
movs
(bad)
sbb
jno
in
jb
mov
xchg
add
retf
int
jmp
out
setnp
push
mov
add
inc
test
das
sbb
cs
mov
(bad)
and
movd
mov
fs
lahf
pop
jp
ret
mov
pop
jmp
add
sbb
imul
movs
mov
sub
cmp
push
xlat
je
jl
xchg
mov
and
test
push
sar
and
cmp
add
pop
pushf
in
jo
test
dec
adc
movs
jle
jle
scas
fcom
movs
or
jl
add
fist
mov
jmp
cmps
ins
call
pop
cmp
ficom
loop
aaa
mov
iret
adc
cmc
int
repnz
jp
aad
pop
push
or
es
fdivr
aaa
dec
fstp
call
sbb
push
or
out
cmps
mov
ficom
xchg
nop
pop
adc
mov
push
daa
xchg
fwait
push
retf
ins
fwait
or
cmps
cmp
mov
mov
aaa
sub
sub
ror
jns
clc
jae
in
into
repnz
fcomip
xor
mov
and
repz
imul
nop
pop
fnstcw
jo
outs
sahf
call
pop
mov
adc
(bad)
mov
test
out
xor
emms
or
pop
gs
add
movs
leave
stos
mov
dec
stos
pop
mov
fsubp
out
fmul
jg
call
rcl
jmp
jbe
pop
mov
adc
sbb
cmp
cs
add
or
pop
adc
sbb
pop
sbb
inc
inc
jnp
cmovbe
int
movs
cmps
adc
inc
movs
mov
and
outs
jae
hlt
movs
test
fisub
push
and
adc
cwde
inc
test
cmp
sbb
or
movs
rol
inc
sbb
ins
cmp
rol
jmp
and
lahf
lahf
jb
mov
call
jo
into
daa
(bad)
cmp
dec
retf
jp
xchg
pop
dec
out
mov
push
ins
cmps
pop
jmp
sahf
mov
or
pop
scas
xor
popa
mov
jle
push
jg
jle
push
pop
fdiv
call
dec
mov
push
sti
ja
cs
push
pop
cmp
push
cmc
call
dec
ror
jge
or
lahf
cli
jnp
push
add
fwait
xchg
mov
mov
xchg
inc
mov
add
mov
xchg
jb
mov
cmp
bound
inc
xchg
rcl
jl
mov
movs
mov
mov
fprem1
cli
jb
repnz
imul
jo
sub
cmp
jb
mov
inc
test
sub
push
push
inc
mov
ds
adc
popa
gs
and
ja
int3
movs
inc
enter
shl
and
ins
add
mov
call
push
add
fcmovnu
or
call
jne
call
and
movs
sub
movs
cs
lods
jl
mov
add
dec
mov
inc
sub
sbb
jbe
add
call
mov
pop
add
inc
nop
(bad)
clc
sbb
outs
sbb
test
out
lds
mov
loopne
shl
cmp
mov
xchg
jge
cs
dec
out
call
jge
imul
lea
(bad)
push
(bad)
mov
ficom
adc
test
push
sbb
adc
jnp
pop
jle
lods
dec
(bad)
mov
push
jmp
pop
shl
in
addr16
xlat
adc
lods
sbb
(bad)
ds
addr16
sti
pop
add
mov
aas
mov
mov
jge
stos
or
into
push
aas
std
outs
cmps
pmulhw
sbb
xchg
jecxz
sub
int
mov
and
add
div
rol
push
cmp
inc
std
xor
add
pop
sbb
cld
or
mov
je
aaa
inc
xlat
push
clc
xchg
sub
int3
dec
xchg
or
add
call
push
arpl
dec
push
jmp
dec
aad
fnstcw
sub
imul
sub
sbb
sar
xchg
dec
mov
sti
ret
mov
push
test
mov
je
daa
popa
jmp
push
xlat
jne
dec
fs
mov
push
movd
mov
ins
in
jne
int
popf
xchg
(bad)
mov
xchg
ret
push
cs
dec
dec
aas
retf
or
sub
add
dec
daa
in
(bad)
xor
cmp
lods
mov
int3
cmp
jbe
sub
shl
mov
dec
adc
shl
dec
dec
mov
pop
dec
push
and
mov
dec
push
push
ins
pop
cmp
pop
stc
xor
sti
push
leave
mov
mov
add
push
cmp
je
xchg
shl
cmc
cmp
mov
ret
mov
(bad)
xor
loope
mov
call
fs
out
pop
aam
add
inc
sbb
push
jbe
fistp
inc
test
mov
(bad)
sub
add
add
lods
fwait
js
je
ror
sub
es
call
movs
scas
(bad)
push
test
je
dec
or
aad
aaa
mov
ret
and
ror
dec
js
xchg
pop
scas
jnp
add
cdq
les
push
ja
clc
inc
jmp
jns
xor
add
xor
cdq
test
mov
call
icebp
xchg
lahf
nop
sbb
cmps
imul
mov
adc
fs
lock
xchg
pop
mov
std
adc
cwde
mov
sub
xchg
fst
loopne
and
fcom
scas
movs
mov
in
jns
push
mov
or
cmc
mov
mov
in
sub
loop
mov
and
cli
cli
(bad)
inc
add
cmp
into
aam
push
pop
pop
xor
dec
inc
adc
lods
jmp
outs
cmp
sbb
stos
fs
adc
outs
cmp
arpl
xor
bound
call
(bad)
xchg
dec
inc
test
ret
mov
or
aaa
add
mov
(bad)
in
aad
dec
je
movs
mov
call
mul
cmp
(bad)
push
push
es
shr
sbb
jg
xchg
ror
jne
cmp
jo
in
mov
push
mov
xchg
add
scas
stos
push
or
retf
je
jmp
aad
dec
cdq
add
outs
push
stos
rcr
cmps
das
cs
push
sahf
xor
pop
scas
adc
adc
pop
mov
mov
push
dec
cmp
sbb
ror
daa
push
mov
xchg
(bad)
dec
repz
shl
movs
pop
push
ficom
sbb
mov
mul
xor
inc
push
add
and
hlt
push
mov
cmps
cmp
iret
push
ret
add
daa
xchg
cld
inc
cmp
sub
adc
pusha
js
movs
retf
stos
ss
pusha
cwde
mul
ins
jae
push
xor
inc
jmp
mov
(bad)
mov
lods
mov
mov
cmp
(bad)
sti
dec
push
(bad)
jg
or
mov
jmp
pop
or
push
mov
sbb
cmps
adc
ficom
sub
xchg
mov
xchg
js
call
xchg
adc
sub
mov
mov
fmul
sub
add
adc
popa
test
jmp
xor
push
icebp
bound
cmp
fwait
sub
fld
daa
jne
shl
daa
div
sub
iret
pusha
or
dec
aas
cmp
dec
out
jns
jg
pushf
stc
in
inc
cwde
push
jb
pop
clc
fwait
jl
scas
scas
xor
inc
push
repnz
loope
je
adc
aas
icebp
push
outs
jmp
sub
(bad)
push
call
xchg
bound
push
push
enter
ds
xchg
dec
data16
aas
adc
cmp
sub
add
paddq
nop
out
test
js
pop
fs
leave
repnz
shl
cmps
mov
cdq
xchg
cs
loope
push
dec
mov
adc
sahf
mov
and
mov
repz
out
daa
test
clc
cs
pop
loop
pusha
sbb
(bad)
mov
es
add
lods
inc
mov
mov
adc
sbb
push
fwait
dec
pop
aam
and
jl
mov
pop
mov
pop
sub
aam
jno
pop
jb
cmp
mov
pop
imul
daa
cmp
mov
ret
sub
dec
sbb
rdpmc
xor
aad
es
push
mov
mov
add
jae
mov
push
inc
xor
inc
mov
adc
cwde
adc
add
cld
lods
or
icebp
push
int3
popf
adc
cmp
ins
and
call
sahf
bswap
ret
and
adc
ss
data16
in
cmp
sbb
loopne
or
jno
sbb
arpl
idiv
sti
scas
mov
popf
mov
mov
xor
mov
xor
xchg
in
cmp
(bad)
(bad)
xchg
hlt
imul
mov
sub
cmp
pop
pop
sub
aaa
cdq
add
jmp
cmp
aam
push
jb
add
xor
icebp
in
stos
inc
mov
jecxz
and
test
dec
imul
push
or
fisubr
stos
hlt
inc
jns
jnp
fimul
xor
scas
scas
push
xchg
xchg
stos
out
outs
leave
leave
push
test
mov
cdq
dec
jg
jecxz
inc
lea
dec
imul
pop
inc
sub
(bad)
and
xor
movs
jl
(bad)
cmp
daa
or
out
mov
or
test
fld
mov
clc
push
mov
iret
cmps
mov
shr
adc
ret
mov
mov
popa
mov
sbb
or
sti
add
ins
xchg
ds
sbb
push
stos
lods
sub
dec
jecxz
test
rcr
(bad)
aad
fdivp
sbb
out
ja
cmp
push
stc
es
dec
cld
inc
rcl
jbe
push
sbb
push
xchg
into
push
cmps
jo
js
pop
retf
data16
and
inc
call
fild
pop
xchg
mov
jecxz
pop
inc
push
pop
push
loopne
neg
or
fldenv
add
cmp
and
fmul
jne
shl
sub
out
js
xor
(bad)
adc
or
sar
fadd
sbb
call
xchg
mov
pop
push
push
inc
sbb
loopne
mov
mov
in
(bad)
pop
mov
fnstenv
dec
sbb
push
adc
jg
cwde
push
nop
and
and
push
mov
aaa
inc
bound
loop
dec
shr
xchg
inc
xor
cmp
dec
aaa
and
into
cmp
movs
les
mov
scas
aaa
sub
mov
xchg
xchg
ret
out
les
pushf
push
lods
nop
jns
inc
loopne
sub
enter
pop
(bad)
pop
xor
inc
repz
fsubrp
jne
pop
ja
pop
mov
mov
cmps
aam
sub
test
fdivr
out
pmuludq
popf
pushf
cmps
jmp
adc
inc
js
jno
dec
xchg
add
je
mov
cmp
pop
add
(bad)
sub
shr
jb
add
out
dec
mov
jne
push
mov
arpl
ror
call
mov
lods
push
push
pop
lods
int
push
shl
stos
add
xchg
mov
sbb
xchg
add
add
in
out
dec
mov
stos
movs
scas
in
mov
cmp
test
pop
mov
mov
std
(bad)
fiadd
sbb
dec
aas
bnd
int
jp
cmp
outs
hlt
xchg
jmp
push
inc
les
aaa
and
push
test
test
cmc
dec
and
add
inc
ret
aam
into
out
adc
xchg
imul
stc
movs
push
gs
mov
xlat
loope
xor
and
ror
(bad)
stc
or
jbe
mov
movs
sbb
mov
rcr
jnp
dec
mov
pop
pop
cmps
xor
(bad)
jo
inc
mov
lock
and
xchg
pop
jg
(bad)
rcl
jecxz
mov
cmps
ret
iret
pop
mov
mov
out
fld
sbb
mov
test
pop
(bad)
pop
xchg
rol
or
pop
xor
pusha
cmp
jns
jge
nop
and
test
sbb
xor
loope
ins
dec
pop
lock
sub
fnstsw
jp
sbb
jl
movs
adc
stc
stos
push
and
pop
aad
dec
mov
pushf
jno
stc
aam
lods
jp
bound
adc
aad
or
or
cmp
cmp
pop
add
mov
loopne
idiv
fld
rol
retf
stos
stos
mov
mov
loop
es
js
add
aas
add
and
adc
pop
dec
jmp
(bad)
and
lss
out
adc
add
cmps
mov
pop
sti
movs
mov
js
jae
inc
out
sub
pop
mov
loop
push
fs
out
dec
in
rcl
sub
sbb
mov
pop
sub
lods
std
sub
in
jmp
mov
pop
into
std
pop
hlt
fisub
dec
paddq
gs
and
push
sahf
xor
push
imul
jmp
add
dec
push
and
or
xchg
out
sahf
push
icebp
mov
(bad)
cmp
cmps
xchg
sbb
ss
xor
sub
test
xor
test
xor
lods
or
jb
add
push
jo
iret
adc
xor
jno
in
or
cmps
inc
and
shr
pop
push
scas
jmp
rcr
nop
(bad)
loop
pushf
mov
cmp
adc
jne
mov
sub
adc
div
cmps
or
mov
push
cmps
ror
dec
pop
cli
rcr
pop
movntq
out
mov
or
mov
add
and
push
adc
mov
push
test
and
cmp
mov
jne
dec
pop
push
test
xor
nop
int
fist
cmc
in
or
pop
sbb
cdq
or
fs
shl
mov
or
rcl
add
jg
push
sbb
stos
call
mov
call
jbe
pop
sbb
mov
mov
in
mov
and
lods
scas
mov
sahf
jge
or
call
mov
das
xor
mov
push
outs
xor
inc
int
mov
jb
add
mov
jmp
pop
mov
push
adc
aaa
in
mov
(bad)
movs
mov
jmp
mov
std
or
and
pusha
xchg
push
dec
outs
adc
mov
and
cli
and
(bad)
les
(bad)
push
dec
imul
or
xor
(bad)
xchg
sbb
ret
sub
xor
ss
hlt
xchg
push
add
xchg
sub
fucomp
in
data16
fnstsw
push
lock
cld
xor
mov
sbb
sub
jmp
mov
xor
dec
adc
fdivr
push
daa
or
mov
cmc
popa
pop
dec
or
(bad)
in
sbb
and
enter
adc
add
sbb
shl
mov
lods
rcl
push
lds
test
mov
jg
dec
mov
and
sbb
or
ret
mov
jp
iret
out
adc
jae
mov
fidiv
lock
mov
stos
lea
jo
out
ds
sub
(bad)
out
movs
add
adc
call
popa
cmp
mov
sti
pop
add
pop
idiv
jns
cli
gs
dec
mov
das
xor
push
dec
mov
mov
gs
sbb
jbe
cmc
dec
shr
shl
fnsave
push
cli
dec
nop
xor
(bad)
sbb
mov
stos
and
shl
push
pop
aas
mov
pop
(bad)
rol
mov
push
sbb
sbb
and
rcr
lahf
mov
out
add
stos
jne
mov
loop
test
in
pop
js
loope
or
(bad)
mov
sbb
xor
cmc
cwde
out
sbb
fidivr
out
add
and
mov
call
inc
loopne
movs
xor
les
sbb
dec
nop
stos
loope
cmp
call
(bad)
test
fcmovnbe
pushf
xchg
sbb
prefetchwt1
or
sub
ins
push
mov
repnz
shr
mov
mov
iret
js
sbb
cmps
push
dec
hlt
loop
out
adc
not
mov
inc
push
add
in
test
iret
fwait
aad
cmp
adc
and
hlt
mov
jmp
sar
imul
pop
dec
adc
in
pop
aas
inc
ret
lea
xchg
push
std
fcmove
cmps
mov
adc
sbb
test
bound
xchg
push
pop
pop
mov
icebp
mov
loope
ins
and
add
mov
out
sbb
(bad)
sbb
call
outs
jecxz
push
xlat
(bad)
(bad)
cmp
jb
mov
nop
adc
mov
mov
in
dec
aas
aad
mov
sbb
xchg
pop
and
sbb
xor
push
mov
jo
dec
shl
fwait
mov
mov
mov
push
mov
ins
push
outs
ret
xor
pop
inc
(bad)
push
mov
(bad)
(bad)
mov
sbb
pop
xor
fcom
adc
out
and
sti
sbb
sub
and
jmp
(bad)
loop
inc
cmp
cld
and
out
cmp
aaa
or
mov
mov
pop
in
(bad)
jbe
jl
add
inc
in
or
fadd
enter
xchg
add
dec
fwait
sbb
sbb
(bad)
sub
out
movs
pop
out
rcr
sub
mov
sbb
ror
push
pop
and
out
ins
dec
push
add
and
mov
add
pusha
mov
mov
mov
retf
cli
mov
int
cwde
iret
(bad)
test
xlat
sub
movs
int3
mov
cmp
mov
repnz
fcom
sub
pushf
jae
mov
cmp
repz
and
loopne
test
pop
xchg
loop
imul
jb
retf
mov
mov
cli
in
scas
mov
cdq
aam
push
push
(bad)
pop
push
dec
aam
mov
jbe
adc
jl
(bad)
aas
inc
pop
jo
dec
out
retf
scas
data16
push
sub
popf
fs
xor
in
pop
div
add
mov
jg
push
fwait
cmp
js
shr
(bad)
xor
scas
mov
ss
mov
mov
fisub
pop
enter
rcl
and
ret
mov
pop
daa
jne
es
call
enter
fistp
dec
cld
jb
jbe
or
dec
sbb
fmul
push
sbb
adc
jne
mov
(bad)
mov
xchg
inc
or
shl
xchg
inc
pop
jno
scas
jo
pop
adc
test
cmp
xchg
inc
cmp
dec
and
clc
cmps
dec
sbb
mov
ficom
cmp
mov
fwait
ins
or
xor
inc
clc
lods
sub
mov
scas
fwait
add
cmps
fcmovnbe
les
lods
js
loopne
ds
(bad)
fsubr
aas
div
lods
jne
outs
adc
ficom
stos
add
in
adc
int3
movs
shl
pop
mov
ins
mov
repnz
xchg
std
fidivr
and
test
mov
cmp
leave
dec
cmp
loope
dec
mul
sub
xor
(bad)
nop
imul
cmc
jnp
fmul
inc
cmps
push
pop
out
shl
iret
(bad)
jmp
fimul
mov
push
mov
ss
lahf
mov
outs
pop
dec
test
and
sub
jge
dec
dec
rcl
fwait
inc
mov
or
outs
adc
jmp
sub
leave
mov
sub
addr16
jnp
mov
fwait
js
sbb
inc
jb
push
cld
xlat
rcl
pop
or
jns
sbb
outs
sub
retf
sbb
sub
fwait
and
jp
add
(bad)
sbb
push
sub
fistp
jne
out
adc
jecxz
xlat
retf
inc
mov
pop
pop
cmp
mov
sub
fcmovnb
out
sub
jp
dec
pop
mov
cmp
mov
add
(bad)
je
cmps
stos
add
fwait
dec
add
pop
sbb
hlt
and
jae
les
ins
add
cli
nop
jmp
lahf
mov
xchg
xchg
sub
pop
outs
and
out
jae
add
into
cmps
into
xchg
sbb
xchg
mov
and
jb
mov
test
cli
inc
out
sti
pop
sub
pusha
adc
xor
mov
jnp
outs
push
fisttp
pop
addr16
add
fcmove
shr
ins
jmp
push
push
xor
adc
popa
int3
inc
adc
sbb
les
jg
ins
aaa
cvtdq2ps
mov
repnz
mov
jg
ins
popf
cld
int
fst
dec
pushf
or
mov
adc
pop
test
addr16
out
ss
imul
pusha
(bad)
pop
dec
mov
or
lock
jbe
into
push
imul
lods
adc
imul
push
xchg
xchg
dec
push
inc
aam
rcl
cwde
cwde
adc
inc
xor
add
stos
(bad)
stos
push
mov
add
cmp
rcpps
push
mov
sahf
jmp
mov
cdq
dec
and
ins
pop
imul
shr
add
lock
aad
xchg
ins
add
mov
adc
shr
sub
int3
stos
pop
push
and
dec
test
mov
daa
mov
call
or
iret
shl
xchg
inc
das
cli
int3
cmp
pushf
mov
jno
jl
sub
stos
out
push
jl
cmp
(bad)
int3
fwait
out
mov
push
fwait
xor
aam
scas
dec
inc
std
inc
scas
dec
dec
mov
mov
sub
add
es
push
(bad)
push
int3
xor
stos
clc
or
mov
(bad)
cmp
xchg
out
cmp
dec
js
(bad)
js
in
and
or
dec
and
pop
fadd
(bad)
movs
call
ja
(bad)
jl
xchg
rcl
jg
dec
xlat
pop
xor
data16
mov
std
ins
jnp
shl
daa
das
mov
pop
repz
imul
aad
call
sub
ret
adc
xor
jp
xchg
mov
mov
fisubr
sbb
sar
or
daa
(bad)
jp
push
scas
dec
pop
(bad)
mov
cs
and
bswap
mov
(bad)
or
pop
jno
push
dec
idiv
adc
sahf
stos
jl
sbb
imul
popf
mov
scas
movs
(bad)
xor
cmc
adc
mov
sub
fimul
mov
lock
arpl
mov
mov
ret
jnp
loop
js
or
sbb
loopne
repz
int
add
ret
xchg
fld
mov
fs
xor
push
xchg
pusha
and
clc
mov
cmp
xor
cmp
mov
nop
mov
mov
repz
leave
pop
movs
loope
ins
push
jb
and
jmp
stos
rcr
and
xchg
iret
jle
xchg
imul
test
or
or
jbe
adc
mov
cmp
xchg
dec
ficom
fsub
pop
mov
ja
sub
mov
pop
pop
ja
xchg
fwait
add
cmp
jno
ret
or
fidivr
mov
repnz
mov
sbb
jb
ret
loopne
sbb
fistp
or
xchg
(bad)
ins
mov
xchg
sbb
jecxz
call
or
mov
cdq
sbb
jmp
fiadd
outs
inc
lds
aas
xor
nop
sub
cmps
out
gs
pop
and
mov
ja
sub
out
pop
leave
sub
add
out
movs
repnz
std
imul
aad
jno
xchg
cmp
ins
fnstenv
or
loopne
adc
loop
xchg
sub
movs
js
out
lds
icebp
out
nop
stc
mov
jae
xor
or
pop
jp
mov
movs
into
mov
adc
add
dec
adc
stos
mov
xor
jno
loop
pop
out
ss
add
cmc
pop
push
or
xor
mov
and
or
xlat
jns
jae
hlt
test
popf
(bad)
nop
rcl
sub
ja
mov
ins
mov
inc
sti
iret
(bad)
push
fild
call
fidivr
adc
pushf
pusha
and
cmp
jo
aaa
mov
sub
ins
cmp
or
mov
cmps
test
addr16
loop
sar
arpl
in
call
mov
mov
inc
add
test
or
dec
or
stc
pushf
adc
scas
call
add
pop
pop
sub
xor
stos
stc
bound
jne
addr16
shr
scas
pusha
cwde
mov
ds
and
div
data16
cmps
dec
xchg
xlat
stos
pop
enter
or
dec
adc
es
jnp
pusha
inc
fmul
cmc
or
adc
mov
xor
adc
cld
adc
test
cmp
imul
enter
and
dec
fdiv
lock
cli
sbb
mov
mov
add
xlat
add
imul
fwait
adc
retf
jecxz
je
pop
or
inc
and
mov
push
inc
xabort
std
push
dec
daa
jp
jmp
lds
jno
shl
mov
enter
cli
and
je
sti
div
nop
xor
aad
sbb
xlat
fcom
out
call
loop
in
push
mov
add
dec
mov
or
dec
mov
sub
shr
cmp
add
repnz
mov
mov
push
iret
call
fimul
fimul
icebp
xor
jge
jg
cmovnp
xchg
push
add
fiadd
test
xor
add
add
mov
mov
mov
mov
mov
fist
inc
aad
ret
iret
popf
clc
sbb
lock
test
jp
or
in
cld
cmp
out
out
shl
stos
data16
loope
push
cmp
add
scas
out
fld
lock
jp
sub
jle
pusha
int3
xchg
push
jmp
ret
pop
outs
fmul
aad
cmp
in
clc
push
dec
xchg
test
movs
cmp
js
adc
ret
popa
jns
cwde
mov
inc
push
psadbw
adc
sbb
push
scas
add
sub
into
cwde
and
(bad)
jg
or
(bad)
sbb
stos
inc
sub
arpl
and
mov
out
mov
scas
sbb
aas
movs
jmp
icebp
fild
jmp
add
push
mov
push
xchg
dec
jecxz
xchg
mov
inc
ds
adc
dec
sbb
retf
ins
fsubrp
(bad)
ins
inc
adc
jb
push
stc
aas
pop
push
adc
push
cli
mov
scas
jge
mov
(bad)
lods
out
ds
outs
and
mov
test
push
add
add
and
movs
fs
leave
fmul
push
sub
loope
add
adc
mov
or
fld
scas
jl
lods
xchg
in
or
aad
mov
mov
sbb
scas
outs
inc
mov
or
fdiv
mov
das
mov
push
enter
lahf
into
loope
sub
lea
jge
iret
outs
int3
call
jnp
lods
inc
out
mov
xchg
jl
(bad)
xor
sar
pop
sub
pop
out
and
xchg
sbb
je
scas
mov
in
fucomp
or
mov
aaa
inc
pusha
or
mov
cmp
inc
cdq
ins
mov
cmc
cmp
rol
(bad)
inc
sub
cmp
(bad)
mov
add
test
imul
popa
rcl
dec
inc
push
in
cmps
adc
sbb
fucom
daa
retf
cmp
jno
jnp
jecxz
adc
daa
add
fisttp
xor
xor
fidivr
xlat
or
retf
test
adc
rcl
or
push
fwait
mov
test
jbe
fld
xchg
std
fs
data16
rol
sub
test
xchg
hlt
gs
int
inc
xchg
cmc
and
pusha
imul
sahf
xor
leave
jbe
pop
cmp
lods
pop
into
mov
nop
mov
rcr
cmp
dec
pop
adc
sub
xchg
sbb
les
mov
cmp
loopne
xor
adc
pushf
jb
dec
inc
jmp
gs
into
xor
cs
or
dec
cmp
push
shl
pop
push
jp
out
and
outs
mov
xchg
mov
xchg
and
rol
scas
adc
and
xchg
call
and
sbb
fs
loope
enter
fild
add
dec
dec
dec
out
mov
stc
xchg
stc
mov
movs
cmp
test
test
imul
and
or
loopne
ror
jmp
and
jmp
shl
mov
sub
rcr
and
mov
xchg
stc
popa
icebp
ins
repz
inc
xchg
(bad)
xchg
sbb
sbb
pop
mov
adc
pushf
xor
cld
mov
fdivr
call
arpl
adc
mov
ret
cmp
fiadd
jle
push
and
(bad)
adc
pop
jmp
out
add
test
ds
push
push
inc
xchg
mov
retf
lahf
hlt
fisttp
or
fiadd
cmps
dec
(bad)
cmp
inc
xor
cmps
sbb
jl
push
cs
add
adc
call
jmp
cs
pop
adc
mov
and
xchg
mov
dec
out
sahf
xor
xor
or
test
or
inc
cmp
(bad)
pusha
aad
int3
and
and
sub
sbb
pop
cmp
js
retf
adc
xlat
retf
sub
adc
shr
movs
loope
and
test
mov
pop
retf
pop
sub
ins
pop
lahf
cmp
jecxz
iret
enter
mov
mov
xchg
mov
add
int
sbb
test
fsub
inc
jmp
repnz
adc
fs
push
call
ja
or
mov
adc
test
cmp
inc
xlat
leave
imul
test
mul
ficomp
or
adc
mov
scas
jl
inc
add
pusha
and
push
(bad)
or
popa
lods
push
sar
out
xchg
xor
ret
push
(bad)
mov
and
mov
cmp
xchg
sahf
cli
fistp
imul
loop
ffreep
ins
fldcw
hlt
or
pushf
ret
jmp
inc
mov
adc
mov
jbe
call
push
xor
call
loopne
js
xchg
xor
push
jg
cld
les
ins
cld
cmps
mov
sub
mov
jmp
sahf
lds
lds
(bad)
xlat
jne
mov
pop
ret
mov
push
out
sub
aas
xchg
xchg
inc
or
cwde
fld
hlt
pushf
loope
ret
loope
(bad)
gs
fstp
pop
dec
cmp
in
and
sahf
out
push
xor
or
retf
int3
fild
(bad)
outs
nop
ins
mov
mov
les
jne
dec
fdivr
inc
cdq
push
push
fwait
inc
(bad)
pusha
mov
xor
(bad)
jle
push
cmp
mov
out
cs
fsub
adc
fsubp
or
mov
sar
retf
mov
stos
aam
out
dec
and
mov
cmp
gs
fdivr
fs
pop
jae
loop
or
adc
std
lods
aas
in
test
pop
ds
sub
and
popf
cmp
xchg
fadd
and
add
stos
aas
aam
fldenv
cmp
or
pop
mov
jl
mov
xchg
mov
(bad)
pop
test
pslld
fild
cmp
dec
add
xchg
stc
add
push
mov
cmp
cmp
(bad)
ficomp
cmp
cdq
xchg
fstp
cmp
xlat
mov
adc
xor
dec
push
pushf
jbe
icebp
mov
mov
inc
pop
int
adc
fcomp
in
jbe
dec
inc
xchg
cmp
stos
jbe
(bad)
mov
lods
int
sub
inc
lods
fidivr
pop
jae
addr16
xor
sub
xor
dec
sub
(bad)
mov
dec
xchg
ds
loope
movs
fimul
push
test
test
(bad)
sti
pop
fisub
sbb
or
test
out
push
sub
pop
cmps
movs
rcl
jo
cmp
out
movntps
xchg
xlat
fnstenv
bound
or
mov
nop
scas
lock
and
jns
add
mov
or
cwde
jo
dec
and
inc
jne
cdq
add
mov
cmp
adc
pop
inc
(bad)
pop
dec
(bad)
fcomp
(bad)
xlat
retf
aas
mov
mov
jle
push
ds
cmp
add
cmps
sbb
shl
cmps
dec
ret
pop
repz
retf
mov
adc
mov
call
retf
push
xchg
repnz
cmps
pop
fld
arpl
sub
xor
popf
pop
sbb
test
mov
inc
sbb
cmp
(bad)
push
cmp
xlat
sub
je
loope
imul
mov
jecxz
dec
mov
fs
mov
out
or
mov
sbb
fild
pop
les
repnz
and
bound
dec
cli
ins
in
div
sub
div
dec
push
jg
mov
mov
out
les
aam
lock
icebp
jne
(bad)
pop
mov
xchg
jnp
pop
inc
jne
sbb
xchg
inc
push
test
add
mov
fisubr
test
arpl
rol
mov
mov
les
out
daa
inc
inc
movs
nop
mov
js
pop
fsubr
mov
xor
daa
ror
pop
mov
stos
cdq
ins
out
dec
rcr
leave
cmps
dec
aaa
push
jno
test
push
jmp
sbb
shrd
movs
mov
leave
sub
cs
es
repz
cld
xor
rcl
mov
(bad)
jb
jg
ret
ficomp
(bad)
shl
aam
jp
xor
xor
and
in
imul
sbb
imul
stos
jmp
mov
fcomp
sbb
in
push
ins
std
dec
stos
(bad)
jmp
lods
adc
aas
mov
mov
iret
mov
popa
inc
(bad)
outs
popa
xlat
stos
and
xchg
fnstsw
lea
mov
pop
inc
lahf
mov
imul
dec
fcom
icebp
push
scas
pop
mov
ffreep
or
sbb
or
and
mov
dec
out
out
dec
rcr
xor
jecxz
push
mov
loopne
and
xor
imul
fild
div
add
or
into
int3
sbb
lods
or
cmp
adc
mov
pop
pop
xchg
xchg
mov
test
fisttp
jae
pusha
add
jmp
nop
cmp
fist
pop
adc
cwde
mov
sub
push
mov
push
sbb
outs
push
mov
ret
adc
nop
push
xchg
rcr
loop
push
bound
call
xor
fisttp
push
adc
cmp
in
pop
mov
ins
or
stc
mov
sub
in
fmulp
test
add
fcomp
popf
mov
mov
mov
fcom
push
loopne
es
jnp
or
lahf
cdq
xchg
clc
cdq
sbb
ret
ret
sub
and
repz
xchg
nop
clc
dec
mov
push
cmps
jmp
stos
std
cmp
mov
fdivr
push
out
cwde
jg
inc
lds
dec
dec
inc
mov
mov
js
popa
ficom
out
les
xchg
je
jg
fiadd
dec
sub
mov
stos
(bad)
pop
loop
mov
jae
fld
clc
dec
xor
retf
das
out
test
mov
pop
mov
mov
aaa
int
test
mov
sbb
mov
ret
mov
inc
jnp
push
repnz
inc
and
push
push
rol
fsubr
cmc
ins
pop
xchg
add
(bad)
sub
out
arpl
out
cld
test
dec
jmp
shr
dec
sub
jmp
mov
or
jle
repz
mov
add
scas
xlat
seto
dec
mov
cmp
fistp
retf
add
lea
aad
test
adc
xlat
fdiv
push
outs
pop
and
or
shl
fwait
pop
push
adc
mov
movs
call
fdiv
out
pop
loope
addr16
imul
add
lea
ret
dec
je
test
sbb
pop
sbb
and
push
adc
dec
gs
mov
test
xor
or
shl
pop
or
or
fcmovu
push
cmp
xor
in
jne
lods
clc
pop
sahf
test
pop
sub
dec
(bad)
iret
loopne
dec
inc
aaa
push
sar
(bad)
push
adc
cmp
mov
xchg
jmp
mov
repnz
call
pushf
jp
fxch
sub
dec
jo
fwait
out
jnp
pop
ins
outs
mul
pop
test
adc
or
ficom
jp
movs
js
ins
loop
push
shl
scas
mov
or
adc
arpl
push
jnp
mov
mov
js
cmps
scas
lahf
cdq
scas
add
dec
cli
xor
outs
bound
inc
shl
popf
call
out
outs
mov
mov
rcr
xchg
rol
cmp
scas
sti
sub
lds
lahf
movs
push
popw
movs
ds
sbb
inc
mov
xrelease
cmc
aad
mov
rcr
or
std
or
jno
or
sub
inc
add
sbb
inc
fdiv
cmp
dec
or
mov
push
cmp
mov
pop
out
fcmove
xchg
push
(bad)
push
mov
fist
inc
jle
pop
inc
fs
mov
test
add
popa
cli
mul
arpl
sub
jo
aam
lahf
out
enter
sub
out
mov
outs
xchg
outs
jns
sub
xor
jg
cmp
adc
stc
and
leave
jle
jg
and
cmc
mov
push
push
pop
add
repnz
jg
lods
push
bound
mov
(bad)
popa
lock
lods
and
div
pop
mov
in
test
or
mov
dec
jmp
or
xchg
pop
ret
lods
lock
nop
cmc
cmp
call
jae
shl
push
jns
sbb
xor
sbb
push
push
lods
movs
out
push
push
cs
shr
in
dec
call
sbb
cmp
fs
sub
gs
add
popf
int
lods
push
mov
in
cmps
je
mov
cli
lea
fist
mov
xor
pop
test
sbb
or
mov
xchg
imul
inc
sbb
or
div
ret
ds
aas
dec
mov
pop
mov
sar
imul
pop
cwde
add
movs
sbb
jmp
fxch
lds
call
mov
arpl
push
or
mov
cmp
fiadd
iret
das
cmp
jne
jge
lahf
adc
mov
int
cmp
mov
cwde
test
cdq
lods
cmp
add
fwait
into
push
inc
ins
ds
or
mov
jns
ret
test
(bad)
jmp
cld
dec
shr
mov
xchg
int3
dec
mov
and
cdq
cmp
fild
daa
jb
ret
dec
push
stos
or
xchg
dec
test
das
jae
lea
inc
imul
inc
cmp
and
or
fnstsw
cmps
mov
mov
imul
add
jmp
or
or
fidivr
mov
inc
cmps
sahf
inc
lahf
(bad)
cli
lds
cmp
and
mov
ret
xor
aas
inc
xor
jecxz
aad
mov
mov
or
in
mov
mov
in
and
dec
mov
mov
push
fadd
fldenv
rol
push
dec
add
push
push
pop
hlt
call
stos
mov
pop
jmp
mov
push
fs
mov
inc
in
dec
mov
mov
into
cmps
lahf
std
in
lods
fbstp
cmp
popf
div
jno
ret
test
ss
std
lods
inc
movs
mov
dec
jae
repnz
adc
mov
and
cwde
sub
repz
es
test
xor
ins
jne
pop
add
dec
daa
push
mov
xchg
lods
pushf
mov
pop
jnp
xlat
pop
inc
adc
jns
jp
mov
adc
lods
stos
lahf
mov
shl
leave
mov
sahf
push
jns
cmp
repz
pop
inc
aaa
and
(bad)
cmps
cdq
add
push
xchg
int3
out
push
mov
in
fwait
jne
cdq
dec
cmp
ins
cmp
bound
jb
(bad)
(bad)
adc
cs
and
add
int
sbb
push
xchg
call
(bad)
jle
into
jecxz
adc
pop
adc
es
retf
aam
dec
imul
add
pop
inc
sbb
outs
cmp
bound
mov
cmp
in
inc
into
lea
xchg
sbb
add
xchg
xchg
jae
push
sbb
jbe
xchg
mov
inc
or
xor
sbb
xor
popa
in
cmc
repnz
outs
retf
jno
push
jnp
je
and
jle
cmps
mov
addr16
(bad)
mov
pop
(bad)
out
mov
fstp
jl
xlat
jnp
popa
jecxz
xchg
rcl
mov
(bad)
push
popf
mov
ss
dec
scas
xchg
rcl
int3
add
aad
sti
inc
push
shr
sub
imul
push
call
xor
sub
push
adc
cmp
sti
int
mov
cmp
adc
fwait
(bad)
mov
mov
ror
add
add
lods
mov
es
retf
stos
ror
dec
sub
mov
lea
sbb
mov
xchg
sar
lahf
jb
jnp
push
xor
or
add
fidivr
outs
push
mov
fcmovnb
mov
mov
ror
aas
xor
fwait
push
push
stos
iret
xor
int3
scas
pop
mov
shl
inc
push
mov
mov
push
cli
bound
xor
push
loope
repnz
jecxz
icebp
addr16
int3
mov
cs
js
push
pusha
sub
out
xor
std
outs
jns
test
jecxz
pushf
adc
sar
ja
ret
(bad)
pop
addr16
gs
ffree
push
retf
(bad)
mov
js
lods
aad
xor
mov
int
jno
push
jp
sbb
push
pop
pushf
fwait
loopne
ja
xchg
cmp
xchg
std
pop
les
mov
add
add
push
fild
jmp
ins
fbstp
xchg
test
clc
cli
(bad)
shr
rcr
jns
inc
mov
das
das
push
stos
out
jge
stos
or
add
push
and
ins
mov
xlat
imul
je
pop
enter
inc
ficom
sub
xor
jp
mov
mov
xor
imul
jb
retf
popf
mov
sbb
dec
test
and
imul
cli
gs
xor
push
retf
or
adc
leave
mov
push
or
ret
ins
sbb
cli
mov
fimul
fld
scas
aad
loop
sub
enter
js
in
adc
pop
je
arpl
nop
jmp
icebp
enter
call
or
ds
pop
pop
scas
mov
ins
mov
and
jae
mov
(bad)
cmp
scas
cmp
div
xchg
les
call
push
mov
adc
add
add
cmps
fsub
sbb
add
or
nop
cwde
test
cdq
xchg
adc
cmp
pop
loope
inc
add
xor
mov
lds
pop
(bad)
into
enter
mov
sar
cld
push
or
ror
cmp
push
out
inc
into
mov
hlt
ss
cmc
retf
in
xchg
scas
or
ss
mov
cmp
ins
xchg
nop
je
push
sbb
outs
pop
enter
popa
pop
cdq
inc
rol
xor
push
or
gs
std
sbb
inc
in
adc
xchg
mov
adc
mov
(bad)
retf
cmp
push
sub
mov
mov
iret
cld
push
inc
test
pop
imul
and
lahf
cmp
xchg
adc
inc
mov
xchg
mov
aad
imul
fwait
(bad)
test
jb
sbb
dec
xchg
ds
cmp
es
xor
test
sub
cmp
sbb
dec
mov
popf
sbb
add
out
and
dec
cmp
cmps
imul
mov
add
push
jp
call
adc
push
mov
movs
mov
test
fdivr
sub
fistp
aaa
adc
sub
fstp
ins
and
pop
inc
ror
inc
icebp
jmp
lock
aad
or
xlat
mov
retf
or
cmp
add
sub
fist
xor
pusha
(bad)
pusha
xor
pop
push
or
and
or
retf
ss
jae
fld
pop
ins
(bad)
or
pop
out
sbb
das
or
pusha
clc
test
xchg
repnz
dec
cwde
imul
xchg
fsub
or
jno
xchg
jp
inc
ins
les
sub
daa
sub
xlat
ret
popa
inc
ret
inc
cmc
push
(bad)
sbb
push
neg
push
dec
cmp
mov
push
popf
js
pop
add
and
in
jae
pop
mul
popf
in
push
cdq
xchg
movs
add
pop
movs
in
mov
aaa
inc
pop
mov
out
inc
inc
es
dec
fwait
in
mov
jmp
mov
push
mov
fmul
fisttp
rcl
and
mov
loop
adc
stos
dec
mov
jmp
arpl
pop
cmp
daa
rcr
adc
jmp
dec
cmps
ret
sub
jbe
outs
dec
or
mov
mov
inc
xor
and
adc
mov
dec
inc
outs
add
xchg
xchg
xchg
cmp
shr
xor
adc
xchg
push
rcl
in
or
imul
pop
stos
aam
or
stc
setl
xor
mov
sub
int3
add
add
or
mov
add
push
sub
mov
js
jne
push
daa
aam
add
(bad)
xor
out
jmp
aas
imul
push
fstp
mov
pop
pop
or
add
fistp
jge
(bad)
adc
jmp
idiv
cld
out
mov
fdiv
aad
xchg
and
into
out
inc
test
xor
div
call
pop
mov
xor
or
nop
cmps
push
call
inc
xor
push
sub
mov
sbb
iret
mov
and
(bad)
add
push
inc
call
movs
and
mov
cld
push
mov
push
xchg
hlt
mov
jae
adc
clc
in
xor
pop
aaa
arpl
les
outs
clc
or
imul
(bad)
fcmovb
push
stos
lahf
mov
stos
(bad)
mov
xor
mul
jmp
shl
dec
or
out
xor
sub
pop
inc
push
jp
test
inc
dec
jmp
ss
adc
jp
and
push
cmp
xchg
mov
xor
cmp
pop
out
(bad)
retf
dec
xor
adc
or
sbb
dec
ror
loope
adc
ror
psubusb
(bad)
cmp
mov
into
jmp
dec
and
fucomp
les
or
dec
add
adc
pushf
out
ret
bound
or
add
mov
sbb
fimul
or
jl
add
mov
ds
push
jp
ds
xchg
hlt
add
lods
xorps
pushf
mov
push
sub
ret
inc
stc
jg
outs
mov
adc
aas
cmp
or
cmps
lds
mov
mov
lahf
loop
sbb
ffree
or
jp
aas
dec
push
lods
sbb
mov
div
(bad)
mov
mov
adc
ins
dec
inc
xchg
sbb
dec
sub
cwde
pop
adc
shr
inc
repz
inc
dec
hlt
inc
or
xchg
repz
(bad)
ror
lods
or
mov
shl
mov
jl
pop
or
call
iret
lahf
mov
iret
add
add
mov
lahf
inc
xor
sub
adc
cmp
(bad)
gs
test
ret
push
mov
dec
xchg
outs
push
sbb
dec
mov
mov
test
(bad)
pop
pop
sbb
dec
gs
add
in
mov
push
leave
pop
push
add
mov
call
les
les
loope
jae
cwde
jl
lahf
sbb
aam
push
cmp
sub
mov
add
stc
leave
dec
mov
sbb
mov
scas
ror
ror
adc
or
xchg
dec
nop
int
aas
xor
dec
ins
popa
imul
xchg
and
xchg
dec
jl
and
loop
in
movs
fdiv
call
sar
movs
sbb
cmp
push
hlt
cmp
pop
pop
ds
ror
in
into
sbb
popa
jmp
jns
pop
sbb
std
and
cmp
jne
pushw
loope
xchg
(bad)
adc
xor
adc
scas
xchg
pop
xor
pop
sbb
mov
inc
fst
push
cmp
scas
jae
inc
and
ds
cmp
fs
jge
push
xor
or
ret
xlat
popa
bound
or
rcr
mov
hlt
cld
add
aad
es
arpl
test
rol
icebp
in
mov
loope
cmps
sbb
cmp
inc
inc
jmp
popa
pop
popf
fisubr
out
pop
mov
mov
or
out
push
pop
jnp
or
dec
ja
inc
cmp
or
and
arpl
outs
mov
sub
sub
push
imul
dec
ret
int
mov
push
out
arpl
out
in
mov
sub
adc
xchg
xchg
jns
(bad)
xchg
sbb
mov
leave
rcr
pop
sbb
mov
and
outs
xchg
lods
test
mov
stc
mov
adc
inc
scas
xor
push
arpl
stos
je
test
add
out
mov
dec
fidivr
push
add
add
dec
cmp
cmp
(bad)
daa
adc
fisubr
shr
jbe
cmc
ror
ffreep
shl
add
out
sbb
sbb
adc
(bad)
ds
mov
test
jne
aas
dec
push
xchg
xlat
add
popf
imul
jp
loopne
cmp
cdq
xchg
bound
xor
add
jno
movs
jmp
pop
retf
sar
ror
or
xchg
pop
xchg
or
adc
jbe
aam
push
imul
fdiv
lock
scas
adc
stos
std
pop
into
call
mov
sub
and
or
dec
rcr
dec
mov
cs
pop
ror
lods
adc
rcr
or
scas
outs
(bad)
hlt
sub
add
in
push
and
sahf
int
cmps
sub
add
lock
enter
pop
bound
lock
dec
leave
jp
push
test
cmp
movs
mov
inc
not
cmc
addr16
pop
jbe
and
pop
mov
mov
sub
iret
push
mov
vcvtpd2ps
xchg
(bad)
shr
ins
pusha
enter
les
aas
rcr
inc
sub
push
jmp
add
loope
inc
(bad)
bswap
jae
ret
or
mov
jl
jecxz
pop
out
lea
lods
sbb
xchg
fild
xchg
rol
push
loopne
pop
pop
addr16
lock
ds
retf
je
fsubr
cmc
daa
cmp
mov
movs
adc
jmp
sub
pop
mov
int3
retf
sbb
and
add
addr16
xor
lods
inc
cld
repnz
mov
in
inc
loope
cs
jbe
fstp
shl
and
pop
adc
jo
jp
or
imul
push
inc
mov
int
jne
adc
xchg
enter
add
in
sbb
xchg
push
xchg
pop
add
add
cmp
rol
cmp
iret
cmp
repz
push
jns
out
call
push
fisubr
dec
mov
int
shl
fmul
xchg
push
and
cs
in
mov
lods
cmp
lods
je
mov
mov
cmp
jb
aaa
es
sub
addr16
shl
gs
mov
dec
mov
and
push
push
xchg
mov
jl
int3
inc
dec
outs
imul
icebp
add
inc
add
cmps
int
pop
push
test
fistp
mov
cmp
jg
and
inc
arpl
ins
in
sub
repnz
jge
xchg
fimul
xlat
inc
js
inc
lods
fcom
pop
mov
fsub
inc
xchg
loopne
inc
arpl
push
repnz
test
sub
inc
iret
sub
mov
mov
push
(bad)
cmp
xchg
pop
xchg
aam
ja
xor
adc
pop
add
adc
lock
pop
mov
popf
pop
xor
mov
adc
in
cmp
lock
movs
popa
sbb
xchg
inc
fld
call
xchg
mov
sub
out
fadd
test
add
jae
fcomi
add
into
pop
mov
ins
mov
xor
jl
aam
out
stc
adc
push
ins
fistp
jnp
je
sub
mov
retf
xchg
jmp
test
in
std
fdivr
push
and
jne
jns
xchg
hlt
loope
fisubr
mov
ins
adc
pop
mov
mov
mov
loope
loop
pop
mov
clc
jns
or
sub
push
jge
mov
add
or
jmp
pop
fdivr
or
xor
xchg
add
cli
mov
xor
mov
sti
inc
out
inc
mov
cld
pop
pushf
xchg
mov
inc
shr
cmps
push
packsswb
fistp
or
jle
rcr
jge
push
lahf
mov
xor
or
pop
inc
or
shl
xor
pop
ja
xchg
push
scas
aaa
mov
add
jo
xor
stc
push
pop
fstp
retf
sub
mov
fneni(8087
adc
call
sti
cmp
mov
dec
mov
stos
mov
lahf
pop
jnp
ret
dec
into
mov
jnp
or
sbb
(bad)
std
sub
mov
inc
clc
into
cmp
addr16
(bad)
cld
add
ror
or
bound
xlat
pop
cmp
test
stc
inc
cs
in
xchg
lods
fisub
cvtps2pi
mov
retf
fucomp
jg
rcl
mov
mov
push
fwait
and
sbb
mov
int
sbb
adc
mov
sti
jns
neg
mov
push
js
sbb
jmp
pop
fs
inc
ds
dec
xor
das
xor
int3
clc
jo
push
cdq
ja
push
cwde
aad
pop
call
mov
inc
ror
jnp
jmp
cmp
sbb
lahf
sbb
icebp
mov
call
in
mov
daa
or
or
sub
das
xchg
dec
out
xchg
mov
push
test
gs
pop
jp
inc
pop
xor
imul
test
cmps
int
pusha
push
pop
lods
fldcw
enter
sbb
cwde
das
rcr
fld
js
jl
sbb
repnz
xchg
lock
push
retf
and
std
lods
sbb
outs
aas
pop
pop
cmp
retf
push
push
xchg
mov
loope
nop
int3
(bad)
dec
lahf
addr16
aas
ss
mov
pop
repz
mov
pop
mov
xor
inc
into
jne
test
lock
sub
jae
popf
fidivr
aas
stos
jle
mov
xchg
or
sub
cmc
mov
das
sub
lods
aas
ret
pop
mov
iret
fisttp
add
movs
(bad)
(bad)
adc
jnp
jmp
jmp
xchg
frstor
mov
std
imul
rcr
mov
(bad)
sub
and
repz
sub
sbb
sbb
icebp
ja
outs
cmp
fdiv
mov
push
pop
fsubr
xacquire
sar
call
call
movs
inc
in
out
cmp
pop
dec
push
pop
push
push
lods
mov
lods
out
cmp
fmul
xchg
test
push
vmwrite
mov
push
fadd
xor
rol
mov
add
xchg
mov
jl
fstp
enter
lods
int
mov
adc
mov
mov
xchg
rol
mov
out
inc
fist
cmc
jmp
xchg
jmp
dec
ficom
sbb
out
sub
adc
inc
sub
jb
push
xchg
out
loopne
dec
movs
dec
arpl
div
mov
cwde
cmp
push
xor
in
xchg
mov
jle
jge
or
test
out
cmp
push
scas
call
test
xor
scas
jae
call
sub
and
test
add
dec
sahf
dec
fstp
push
cwde
sub
xchg
or
mov
jge
(bad)
jo
(bad)
push
call
pminsw
mov
(bad)
dec
push
add
mov
mov
cs
das
ja
sbb
int
inc
and
add
fsubrp
fcom
sahf
fdiv
pop
xchg
and
xor
or
movs
push
test
popf
int3
dec
sar
mov
jb
ins
mov
push
add
push
inc
test
enter
loopne
xor
pop
scas
mov
xchg
push
popf
sbb
hlt
xchg
mov
lea
fcmovne
ffree
cmp
xchg
lds
test
xchg
mov
(bad)
jno
(bad)
out
cdq
jecxz
cmps
lahf
fucomip
sub
xor
pop
jmp
xor
inc
lea
in
arpl
ins
retf
pushf
addr16
ja
pop
sbb
shl
jmp
xor
xlat
test
in
inc
cwde
sbb
dec
mov
aad
cmp
in
fadd
arpl
mov
es
xchg
rcr
call
call
clc
ins
adc
stos
xor
outs
retfw
jge
test
dec
test
jp
cmc
push
clc
pop
mov
push
test
hlt
jmp
lods
inc
jmp
aam
shr
cld
mov
das
xlat
shl
sbb
push
xchg
mov
sbb
adc
xchg
cmp
xchg
scas
pop
xchg
and
frstor
inc
(bad)
xchg
mov
xchg
movs
fwait
test
mov
xor
pop
rol
fwait
jecxz
mov
test
lahf
icebp
in
outs
sub
mov
xor
hlt
jnp
mov
xchg
sbb
fmul
lea
or
cmp
cwde
ret
call
inc
sub
test
setl
pop
or
mov
push
pusha
test
out
add
or
cmc
pop
cmc
jge
dec
ret
in
mov
jae
div
push
ss
mov
sti
mov
pop
jg
cmp
mov
push
add
jmp
lahf
inc
(bad)
jb
retf
inc
arpl
xor
in
aam
outs
mov
shr
inc
dec
jge
push
stos
icebp
mov
cmps
lock
cmp
js
out
icebp
cmp
or
jmp
push
mov
jbe
cmc
stos
arpl
mov
loope
push
lea
mov
shr
cmp
popa
adc
xor
lahf
push
repz
inc
inc
mov
and
pop
sbb
shr
nop
test
sar
jo
cmp
arpl
mov
xchg
fwait
pop
fisttp
add
cmp
mov
and
out
or
inc
bound
dec
retf
js
cmp
xchg
xchg
cmps
xor
push
mov
(bad)
loopne
inc
mov
and
jbe
fist
mov
push
jl
adc
daa
stc
xlat
sar
xchg
push
repz
inc
lods
in
repz
fldcw
sub
or
cmps
pop
push
mov
xchg
mov
addr16
mov
xor
cs
sub
pop
jg
out
mov
pop
call
outs
aaa
stos
lds
adc
jle
jb
iret
js
sub
xchg
cwde
shl
jae
aas
push
ins
mov
mov
add
lods
sub
adc
clc
inc
pop
repz
and
dec
push
add
movs
int
add
jmp
in
loopne
stos
pop
mov
pusha
or
mov
imul
or
outs
jb
and
xchg
xchg
inc
shl
aaa
mov
imul
jb
cli
push
jae
mov
fcomp
mov
pop
pop
add
jns
out
addr16
or
xor
pop
lds
aad
push
aam
movs
dec
fwait
lock
add
iret
cwde
sbb
pop
iret
add
in
lds
jle
out
inc
shr
cmp
or
stc
cmps
push
cs
sub
jl
data16
lahf
ror
push
aaa
mov
nop
add
mov
fldenv
std
and
icebp
adc
retf
sbb
inc
pusha
pop
(bad)
jnp
mov
fwait
scas
lods
push
mov
test
inc
stos
add
sub
pop
mov
test
and
in
call
jmp
mov
mov
sub
lods
xchg
pop
cmp
inc
jnp
ret
fucomp
push
out
daa
out
jne
pop
sbb
cmp
sbb
jmp
out
neg
sub
jnp
ds
add
lods
daa
xor
aam
and
call
sbb
jo
test
enter
jmp
jbe
scas
mov
outs
sbb
mov
xor
jle
fwait
sbb
push
hlt
sbb
jmp
fwait
jle
lods
(bad)
or
fstp
out
jb
dec
out
stc
or
pop
sahf
fbld
dec
cmp
daa
or
xchg
mov
pop
push
movs
test
mov
test
cmp
cmp
mov
fucomi
loop
js
pop
sub
in
or
sbb
sub
push
aam
add
and
xchg
jge
pop
(bad)
jle
inc
mov
ret
out
cmc
retf
lock
xchg
test
jmp
les
xor
mov
push
xchg
out
mov
jmp
mov
cdq
pop
fucomp
xor
(bad)
push
or
js
add
imul
inc
pop
repz
(bad)
fistp
and
jmp
or
in
daa
inc
hlt
cmp
(bad)
lock
pop
jns
std
outs
mov
repz
push
jmp
push
or
and
xchg
fidivr
cmp
mov
das
cli
push
xchg
lods
iret
and
sbb
mov
pop
cmp
outs
mov
rcl
rcl
outs
arpl
inc
fdiv
mov
aam
push
in
jmp
sbb
pop
outs
(bad)
mov
dec
int
bnd
in
nop
inc
cmp
ss
out
cmc
shl
xchg
or
sbb
outs
jnp
push
test
fmulp
pop
and
cmp
inc
or
div
push
stos
leave
ja
les
in
ror
loope
mov
mov
and
pushf
loop
inc
sub
mov
int
inc
pop
cmp
or
xchg
sbb
scas
cli
call
outs
int3
xchg
and
jge
cld
mov
aas
xchg
(bad)
mov
add
mov
les
test
jno
aaa
xlat
mov
(bad)
call
cmp
push
call
mov
pusha
gs
xor
push
cwde
enter
sub
daa
hlt
dec
out
loope
xor
pop
jb
inc
pop
mov
add
sti
mov
in
jl
je
dec
cmp
jae
loop
arpl
(bad)
sbb
je
test
jns
or
sub
and
jecxz
and
dec
cmp
cmc
mov
int
(bad)
loope
inc
out
sbb
retf
and
cmp
and
ret
xor
(bad)
lock
xor
and
mov
lds
inc
push
fwait
mov
dec
mov
push
icebp
in
imul
iret
jne
xor
inc
shl
leave
mov
test
jo
repz
push
xor
or
sbb
mov
addr16
ds
mov
(bad)
mov
sub
test
fdiv
mov
jno
pop
pop
sub
out
das
lahf
cmp
addr16
sbb
adc
icebp
xor
(bad)
aas
adc
in
and
push
rcr
test
push
add
test
jns
test
pop
ins
inc
and
pop
inc
and
or
fwait
and
push
push
inc
mov
pop
(bad)
push
jl
movs
std
cmps
cs
test
cwde
sar
xchg
xchg
(bad)
xchg
das
push
push
dec
gs
ret
xchg
ret
xchg
push
popa
jecxz
pop
mov
out
cmp
sbb
mov
mov
repnz
mov
loopne
xchg
sub
int
inc
xor
in
std
push
sbb
or
rcl
out
mov
or
sub
mov
xor
(bad)
aad
adc
inc
mov
scas
xor
jno
ficom
pop
or
in
loope
sbb
in
(bad)
rcr
or
bound
lahf
sar
lods
add
jle
xor
inc
fsubr
push
inc
ret
sbb
adc
mov
inc
or
es
data16
mov
or
lods
stos
push
push
pop
nop
movs
sbb
outs
mov
inc
xchg
cmps
push
movs
jmp
xchg
sub
pop
xor
inc
mov
cmp
std
mov
mov
and
js
mov
stos
lahf
jno
adc
dec
lea
sbb
pop
and
cwde
out
dec
scas
sbb
test
in
sub
pop
jmp
lock
js
lods
aam
jo
push
jae
cmp
add
pop
clc
fcom
pop
jbe
xor
cwde
pushf
aaa
aaa
jmp
adc
jae
imul
cmc
mov
xchg
or
mov
fwait
call
and
pop
and
std
pop
pushf
pop
sbb
(bad)
or
(bad)
cmp
mov
out
dec
rol
outs
ds
adc
push
repz
jg
push
(bad)
pop
inc
imul
lods
xchg
daa
arpl
lods
sub
pop
cmps
xchg
xchg
adc
loope
push
sti
fs
call
add
sub
into
jno
add
jmp
aad
push
sti
fidivr
mov
in
pop
fdiv
xor
nop
jnp
sub
jge
jg
jl
outs
stos
and
sub
call
imul
loop
sub
xchg
pop
sub
inc
xchg
push
ds
sbb
push
mov
jnp
sub
les
nop
push
jnp
or
repnz
xor
mov
mov
jb
hlt
xchg
pop
push
xchg
dec
lahf
jg
loop
mov
cmp
(bad)
cld
dec
xchg
mov
xor
push
scas
call
popf
pusha
inc
mov
mov
add
mov
jo
mov
(bad)
pop
cmp
pop
mov
mov
dec
leave
mov
xchg
aam
xchg
mov
ins
nop
std
sub
push
jmp
sub
rcl
(bad)
jecxz
push
pop
das
inc
push
sti
movs
mov
mov
daa
icebp
mov
mov
in
jmp
arpl
out
mov
push
push
pop
cwde
sub
test
ja
popf
stos
or
inc
pop
push
sbb
inc
add
jmp
rcl
imul
xchg
push
rcr
jo
jl
or
cmc
popa
push
pop
les
pop
xchg
addr16
mov
into
xchg
sbb
add
push
jmp
mov
push
mov
clc
neg
arpl
sbb
je
popa
sbb
scas
adc
out
jecxz
xor
lahf
(bad)
and
sbb
sub
movs
test
pop
gs
mov
mov
int3
scas
mul
pop
or
mov
imul
or
(bad)
xchg
cmc
or
xor
mul
retf
(bad)
adc
scas
lds
fisttp
aam
in
sub
cwde
add
sbb
in
cmp
idiv
cmp
shl
or
sub
fisttp
rol
ffreep
enter
adc
jl
adc
sub
push
mov
sbb
or
leave
mov
xor
call
jno
inc
test
cmps
imul
js
retf
out
les
inc
jne
cmc
dec
pop
mov
jp
dec
and
jmp
ret
sub
xor
(bad)
pop
test
mov
sub
push
(bad)
sbb
sub
dec
inc
fstp
mov
(bad)
aad
cdq
(bad)
fnstsw
jno
and
jg
ja
dec
hlt
mov
movs
mov
dec
mov
setnp
cmp
test
fs
ja
sbb
jb
bound
enter
mov
fnstsw
aam
jo
jne
dec
lahf
inc
inc
push
push
pop
outs
repz
into
cs
cmp
sub
fucomp
cmp
cld
iret
lods
cs
dec
mov
dec
test
in
pusha
imul
mov
pop
outs
xchg
vzeroupper
data16
adc
jno
lock
or
leave
lods
jns
int
cmp
gs
sub
jmp
inc
cwde
sub
add
stos
leave
(bad)
cmc
pop
jno
jmp
sti
ror
sbb
push
sbb
dec
sbb
dec
fcom
sub
sub
(bad)
lods
repz
loopne
jp
cmp
imul
imul
aas
sub
jecxz
(bad)
ja
cli
mov
aam
lahf
xchg
xchg
inc
hlt
sub
adc
push
popf
mov
inc
pushf
and
xchg
retf
test
mov
mov
repz
jecxz
cli
idiv
pop
(bad)
mov
xor
icebp
loope
dec
push
faddp
mov
dec
and
cwde
or
in
sahf
pop
inc
jbe
or
push
mov
or
mov
and
clc
test
int
xor
inc
push
push
jecxz
in
outs
xor
dec
movs
pop
(bad)
push
mov
out
outs
xor
cmp
mov
stos
scas
int3
jo
or
push
(bad)
jle
fsub
xlat
(bad)
mov
mov
shl
inc
aaa
call
lds
inc
add
inc
xlat
mov
mov
cwde
jmp
jno
xor
jne
test
xor
les
test
and
jo
imul
and
xchg
dec
not
mov
xchg
mov
mov
das
inc
test
dec
lods
push
test
mov
ins
mov
or
fs
xchg
jecxz
add
jns
popf
mov
cdq
ins
stc
fnstcw
jnp
es
enter
fs
not
inc
popa
jle
adc
push
add
sbb
jp
sbb
jmp
sub
xchg
push
int
or
test
fbld
icebp
dec
cli
inc
shr
mov
mov
int
pop
and
cmp
xor
xchg
inc
or
and
aam
mov
cld
loopne
popa
adc
sub
push
add
into
push
in
jae
add
push
scas
or
fcmovnb
test
dec
sbb
aam
xor
ins
mov
aad
xchg
test
push
call
pop
push
(bad)
dec
cdq
sub
xor
jg
sahf
and
dec
test
lahf
sub
mov
popf
fstp
xor
cmc
adc
mov
iret
in
xchg
outs
(bad)
outs
or
xor
js
sbb
les
add
mov
xor
sar
shl
ins
(bad)
popf
les
aaa
or
push
fisttp
and
dec
cmp
out
adc
jge
mov
cmps
sti
hlt
mov
sbb
and
daa
fisub
mov
(bad)
retf
pop
sar
xchg
in
fst
mov
xor
inc
or
aam
bound
sub
leave
pop
mov
xchg
arpl
or
imul
or
out
mov
xlat
int3
into
(bad)
in
add
dec
aam
add
loop
jg
(bad)
call
call
shr
dec
mov
pop
retf
cmp
(bad)
movs
mov
cs
mov
aaa
in
add
xor
xor
ret
ja
add
mov
inc
(bad)
push
aaa
mov
movs
jl
je
pop
cdq
xor
jae
dec
or
int3
lods
xor
adc
sub
sbb
push
sbb
push
dec
xlat
jmp
sub
xor
xchg
xchg
scas
jnp
dec
lahf
(bad)
enter
xor
adc
jb
ja
shl
ret
cmp
mov
push
inc
(bad)
aas
aas
push
mov
pop
(bad)
cmp
imul
push
mov
cmp
xor
xor
mov
retf
push
sbb
aas
adc
mov
fistp
xchg
test
loopne
pop
cmc
(bad)
inc
out
xchg
and
outs
pop
(bad)
(bad)
xor
jns
push
pop
das
loop
jae
xchg
fiadd
(bad)
je
mov
gs
or
or
aas
fisub
cld
cmc
push
pop
cmp
inc
pop
imul
pop
xchg
(bad)
lods
js
shl
push
cs
xchg
aaa
mov
enter
or
add
dec
xchg
mov
fist
(bad)
outs
xlat
and
movs
and
retf
bt
js
ror
mov
lods
xor
ret
xchg
call
mov
add
repnz
pop
test
fstp
adc
push
fwait
mov
xlat
imul
dec
imul
ret
sti
xlat
loope
pop
pusha
sbb
push
shr
outs
rcl
popf
sbb
mov
mov
cmc
and
mov
pop
imul
outs
test
cmp
inc
int3
rcl
mov
retf
ds
push
mov
mov
fstp
inc
stos
js
pop
pop
sti
and
adc
sbb
pop
mov
call
push
sbb
cmc
mov
retf
pusha
bound
push
mov
push
arpl
push
mov
and
into
in
dec
fadd
ret
out
test
dec
add
aam
xor
cdq
mov
sub
lods
mov
aaa
clc
lds
das
sbb
xchg
and
stos
mov
retf
movs
dec
dec
sub
jno
adc
push
icebp
movs
push
push
stos
call
jmp
test
sub
sbb
shl
scas
mov
aaa
jne
mov
pusha
or
jno
mov
jne
and
bound
fcom
push
jo
leave
mov
test
sti
xchg
sahf
and
aam
nop
and
sbb
call
push
jno
sub
push
repnz
mov
popf
mov
hlt
stos
call
inc
imul
cmc
test
loop
cmp
push
adc
inc
jns
cli
pop
imul
sub
in
push
inc
inc
out
mov
or
push
retf
mov
leave
mov
dec
xor
lds
mov
or
repz
sbb
mov
cli
sahf
mov
jo
cmp
add
mov
loope
in
mov
lods
dec
or
aad
mov
dec
dec
call
pop
jl
ss
rol
xchg
sbb
or
stos
cli
mov
fstp
nop
dec
adc
inc
mov
call
test
inc
loope
sub
inc
add
repz
dec
pop
push
nop
push
retf
arpl
xchg
loope
in
or
std
(bad)
jge
stc
and
or
sbb
retf
mov
lds
into
dec
sar
cmp
scas
inc
push
cwde
jo
add
in
out
aad
shl
pop
sbb
dec
push
xor
mov
inc
aam
pop
imul
sub
pop
fnsave
add
push
das
cmp
xchg
pop
test
jo
ins
test
pop
iret
jnp
push
enter
cs
mov
sub
sbb
add
pop
pop
test
loop
(bad)
cs
test
popa
lds
inc
inc
dec
imul
int
pandn
fdivr
popa
imul
(bad)
pop
xchg
jp
xchg
fisttp
stc
push
ins
mov
cmp
retf
adc
pop
cmc
add
sub
lods
out
call
and
div
test
push
in
xor
add
test
push
mov
sub
pushf
mov
dec
dec
lods
or
sbb
xchg
aam
xchg
sub
mov
into
sub
mov
dec
jl
lods
out
inc
addr16
sub
sbb
sahf
fs
cdq
xchg
aam
jecxz
call
cmp
inc
imul
hlt
imul
icebp
mov
ins
jnp
fnstenv
daa
xlat
ret
add
sub
outs
sub
dec
pop
and
cmc
mov
sbb
sub
test
sbb
loop
hlt
mov
xor
(bad)
stc
js
jge
mov
ins
pop
ins
fsubr
es
dec
and
adc
xor
inc
call
inc
ds
std
cmp
(bad)
dec
pushf
(bad)
es
sub
sbb
jbe
ins
hlt
test
outs
fcmovu
dec
cwde
ret
jo
pop
mov
push
add
repz
js
adc
data16
mov
and
jp
push
icebp
rcl
mov
mov
jno
or
jns
(bad)
out
dec
inc
xchg
pop
xchg
sub
(bad)
sbb
push
ret
jmp
dec
add
aam
fidiv
push
xor
sbb
push
push
aam
push
add
push
cmps
mov
mov
addr16
test
out
in
into
and
rol
repz
sub
rol
sub
inc
movs
retf
dec
mov
dec
adc
adc
call
int3
fist
mov
arpl
mov
push
lea
loope
in
xor
sub
mov
loop
and
leave
outs
test
leave
dec
in
xchg
scas
outs
pop
jnp
add
out
(bad)
adc
popf
jns
loopne
cmp
mov
fwait
mov
pusha
js
jg
jns
xchg
es
pop
pop
xchg
pushf
xchg
sbb
add
dec
xchg
int3
mov
adc
repnz
shl
dec
mov
jl
aaa
in
sbb
xlat
retf
call
push
outs
xchg
call
mov
addr16
xchg
add
mov
shl
(bad)
mov
sar
pop
and
pop
jns
push
fs
jge
retf
add
loopne
pop
stos
popa
stc
dec
mov
ja
popa
rcr
xor
pop
adc
sbb
sbb
fwait
add
dec
xor
lods
sbb
rcl
mov
add
movs
xor
out
pusha
mov
rol
std
sbb
std
in
neg
cmp
fwait
xchg
push
push
cmp
test
mov
call
loopne
cmc
add
loope
ins
cmps
cmps
cs
(bad)
js
or
cdq
gs
retf
mov
fisttp
popf
cmp
xor
push
enter
mov
imul
mov
cmp
push
lahf
lods
int
jecxz
imul
std
mov
adc
inc
pop
pop
sbb
xchg
loop
(bad)
loopne
dec
ror
cmp
xchg
sbb
add
leave
loopne
inc
mov
inc
in
fdiv
jns
mov
sbb
iret
xor
sbb
inc
imul
fisttp
sti
pop
sub
xchg
int
inc
mov
loopne
adc
xchg
and
out
lahf
pop
pop
mov
lock
mov
leave
repz
dec
xchg
add
scas
mov
push
mov
pop
mov
rol
sbb
mov
movs
xchg
loopne
ret
pop
sbb
jnp
inc
xchg
mov
ret
ins
movs
push
xor
push
pop
jl
call
sbb
mov
in
pop
or
imul
and
or
pop
fwait
push
jmp
mov
cmp
ret
ret
scas
push
dec
xchg
xor
je
jmp
ja
sub
fs
xor
xchg
add
fsub
pop
add
(bad)
clc
stc
into
push
jp
into
clc
jo
stos
outs
push
cwde
(bad)
mov
test
aam
stc
das
push
pop
aam
sub
jbe
(bad)
imul
fstp
shr
shl
pop
xchg
sbb
cmp
cmc
shl
adc
mov
add
clc
xchg
lods
repnz
xlat
or
push
retf
sbb
lods
xchg
into
stos
daa
cmp
(bad)
fdivr
jbe
dec
ja
aaa
mov
movs
xlat
in
fistp
shl
xchg
inc
jbe
dec
push
adc
jmp
(bad)
stos
and
lods
sub
dec
mov
mov
clc
retf
mov
lods
xor
and
mov
dec
jl
addr16
xchg
sbb
mov
mov
cld
test
iret
mov
pop
xchg
out
lock
pop
lahf
sub
es
or
test
(bad)
movs
out
(bad)
stc
pop
add
repnz
aad
jne
xchg
sub
adc
push
dec
mov
jno
sar
adc
imul
xchg
iret
adc
arpl
call
lea
test
test
pop
popf
je
adc
call
test
mov
xchg
retf
and
outs
fdiv
adc
and
push
hlt
fbstp
and
adc
fsubr
jecxz
add
ins
retf
imul
cmc
mov
fnstcw
ja
push
pop
fimul
lods
sub
test
sahf
sbb
dec
mov
in
imul
iret
sbb
mov
jbe
bt
sbb
(bad)
push
mov
ins
dec
iret
push
pop
jmp
cwde
xlat
sbb
cmps
addr16
add
xor
cmps
cwde
movs
js
or
pusha
sub
and
call
adc
sti
sbb
xor
pop
mov
cmp
push
cli
shr
inc
mov
adc
or
cmp
movs
and
mov
mov
nop
jnp
daa
imul
xchg
inc
movs
int
js
test
fst
inc
add
fisttp
aam
lods
(bad)
(bad)
and
xchg
call
xchg
sbb
outs
sbb
fs
repz
sbb
(bad)
retf
in
fdiv
pop
out
sub
repz
or
inc
push
mov
jmp
sbb
mov
shl
jge
mov
xlat
pop
push
add
jecxz
addr16
pop
sbb
fcom
or
ja
pop
mov
sub
pop
inc
push
out
pop
cmp
fwait
mov
es
adc
mov
cmp
push
cmp
mov
arpl
xchg
psubq
das
cmp
mov
or
es
jae
ja
loope
add
sar
int
sbb
lock
inc
mov
cdq
xchg
mov
xor
popa
inc
daa
aam
dec
xchg
add
fstp
int3
push
jns
push
lock
push
and
add
dec
push
in
pop
popa
adc
inc
ins
jb
mov
(bad)
jo
pop
or
daa
(bad)
cmp
jmp
xor
xchg
add
sub
out
lahf
jmp
mov
push
sbb
push
in
push
push
cmp
ss
or
daa
cmp
sub
jo
gs
ds
sbb
shl
push
xor
shr
inc
cmp
jecxz
adc
inc
dec
cmp
cmps
pop
dec
jle
shl
xor
retf
sub
xor
retf
or
ds
mov
arpl
cmp
push
dec
pusha
rol
sbb
sub
popa
ffreep
shl
dec
adc
xor
jno
test
mov
mov
ds
jmp
into
add
or
mov
int3
scas
xchg
xchg
sar
div
xchg
sbb
inc
mov
pop
sbb
in
xchg
in
hlt
fld
add
xchg
call
fild
adc
out
(bad)
jl
xor
cmps
xlat
mov
sub
hlt
icebp
cmp
mov
pop
mov
ror
das
inc
cmps
pop
retf
shl
xor
cs
popf
push
lock
xlat
out
inc
mov
int3
inc
add
(bad)
cdq
sub
mov
mov
xor
in
jnp
rcl
mov
dec
sti
cwde
xor
jbe
sbb
jnp
js
dec
inc
inc
xor
xor
popa
call
fidivr
xchg
xchg
in
test
inc
mov
aaa
adc
pop
int
mov
test
cmp
jmp
inc
retf
add
aaa
adc
inc
leave
xor
fimul
adc
inc
jecxz
xlat
hlt
fs
sar
push
inc
repnz
rcl
leave
in
push
scas
ds
pushf
xchg
out
dec
iret
pusha
jb
pushf
mov
jge
xchg
xchg
outs
retf
shl
cmp
pop
jle
leave
jl
fbstp
dec
push
inc
and
mov
inc
dec
mov
data16
sbb
jmp
mov
adc
cdq
mov
jno
or
xor
imul
cwde
mov
or
or
cld
ret
iret
shr
add
push
fnstsw
mov
xlat
jge
sub
test
or
sub
add
mov
dec
enter
aam
xor
mov
pusha
jo
out
mov
and
mov
xlat
aad
pop
int
ins
sar
aaa
sbb
scas
cmc
cdq
adc
ret
dec
xor
mov
jnp
lods
shr
mov
stos
(bad)
cmp
cmc
pop
cdq
cwde
sbb
gs
inc
dec
gs
retf
inc
sbb
push
xor
mov
adc
add
test
jno
(bad)
ret
pushf
call
or
aaa
es
jno
adc
pop
(bad)
jp
mov
xor
adc
cmp
shl
popf
test
imul
cmp
nop
adc
or
mov
stos
and
fist
push
mov
int3
enter
mov
pop
stos
xchg
(bad)
lods
jg
pop
xor
retf
loope
add
mov
gs
sti
ins
aaa
in
cwde
aam
jnp
adc
ret
ins
mov
(bad)
mov
push
dec
sbb
push
dec
jle
rcr
ds
shl
xchg
ds
ret
bound
inc
mov
ficomp
into
into
cld
out
inc
dec
add
mov
dec
cmp
pop
mov
cli
ror
int
in
fdiv
push
into
stos
lods
cmps
aaa
xchg
push
push
sbb
rcl
mov
adc
sar
out
mov
and
mov
repz
shl
je
pop
imul
or
xor
mov
mov
mov
cmp
jae
or
pop
cmps
out
lahf
outs
and
xchg
inc
xor
out
stos
mov
mov
xchg
fstp
enter
in
inc
loop
fist
push
mov
loopne
push
cmp
dec
sub
jbe
sbb
and
rcl
sbb
cwde
xchg
push
repz
imul
and
inc
cmp
pop
gs
ss
leave
(bad)
arpl
stos
jb
push
or
call
bound
cmp
pop
xchg
out
xlat
(bad)
out
pop
jae
jbe
dec
scas
jmp
and
out
xor
mov
mov
xor
shl
jge
retf
add
push
call
jnp
push
leave
aaa
xor
sbb
sub
dec
into
jae
push
xlat
push
stos
push
add
xor
cwde
dec
(bad)
aad
inc
add
push
mov
mov
lea
dec
cmp
jg
fdivr
mov
or
xchg
aam
push
xchg
push
hlt
jnp
xor
jae
jne
sub
je
(bad)
push
push
nop
xor
jo
jb
cdq
cld
(bad)
out
ret
lock
lods
out
leave
mov
push
push
clc
add
fisub
std
or
shl
pusha
sub
aas
xor
fcomp
cli
push
jl
adc
movs
or
dec
in
cmp
sbb
iret
sahf
fist
bound
xor
(bad)
pusha
pop
call
loope
mov
cmp
aam
sbb
adc
ret
adc
stos
dec
jl
and
lea
jnp
adc
shr
cmc
sub
pop
mov
ror
mov
sub
les
mov
cmp
adc
enter
lock
ins
loop
aam
mov
fwait
cmps
pop
gs
mov
cwde
fmul
jp
call
inc
push
repz
or
or
push
jp
mov
inc
arpl
mov
mov
sti
add
pop
lods
sbb
jl
jge
jmp
fist
test
out
fbstp
jae
cmp
mov
outs
or
adc
fidivr
and
addr16
push
in
or
jnp
sub
add
adc
pusha
push
or
cmp
out
mov
jmp
in
call
cdq
and
call
xchg
adc
add
jo
xchg
mov
inc
mov
push
cmp
lds
(bad)
add
dec
pushf
inc
(bad)
out
daa
push
in
(bad)
arpl
das
ficomp
adc
mov
inc
sbb
mov
gs
sbb
and
push
and
or
loope
aaa
loopne
sub
inc
ficom
pop
mov
lods
nop
fldenv
lahf
adc
push
wbinvd
sbb
ja
imul
mov
in
mov
or
xor
out
leave
out
adc
sahf
test
inc
out
pusha
shr
in
dec
repz
data16
xor
push
adc
push
pop
push
inc
(bad)
into
cmp
add
push
sub
cld
les
push
adc
pusha
cld
(bad)
lahf
cmc
mov
out
mov
cli
(bad)
fmul
ds
mov
sub
nop
cwde
iret
ja
and
iret
daa
out
cli
sar
mov
adc
mov
xor
in
jg
in
inc
loopne
mov
mov
and
sbb
fs
std
std
call
fwait
cmp
jg
addr16
cmps
(bad)
cli
pop
addr16
cmc
lds
cmps
mov
jbe
ins
leave
mov
lds
adc
(bad)
sti
gs
(bad)
movs
cmp
and
fistp
int
jnp
in
gs
outs
jl
cmp
pop
daa
sub
dec
ss
icebp
pop
fucomi
(bad)
neg
lock
mov
fimul
repz
sar
push
ret
xchg
mov
mov
and
add
enter
cmp
dec
cmp
sbb
nop
aam
fs
add
pop
mov
add
add
xor
or
retf
add
test
and
and
aas
pop
in
add
inc
fsubp
mov
mov
fwait
outs
mov
inc
push
jnp
adc
jmp
sti
(bad)
cwde
inc
mov
fcomp
xor
mov
mov
cmp
das
push
(bad)
adc
mov
test
mov
popa
sub
mov
iret
ins
cdq
movs
mov
or
pop
sbb
jnp
mov
jnp
and
(bad)
sub
mov
sub
dec
dec
push
xchg
pop
and
lea
mov
icebp
cmc
adc
sbb
lods
mov
in
sbb
dec
mov
call
push
jb
repnz
pop
aam
sub
and
stos
cmp
ror
repnz
aad
cwde
clc
sub
cwde
push
pop
scas
and
out
bound
ret
repnz
scas
iret
inc
or
test
movs
mov
jns
and
mov
in
xlat
bswap
inc
test
bound
retf
rcr
out
mov
fwait
mov
jg
inc
imul
pop
bound
mov
je
adc
retf
das
outs
mov
cmp
not
push
repnz
scas
std
xor
xchg
ror
mov
mov
jg
xor
xor
push
inc
cwde
(bad)
mov
pop
mov
(bad)
mul
inc
pop
and
loope
fcmovnbe
add
fwait
adc
sub
inc
sub
adc
jae
pop
sbb
das
je
mov
outs
mov
(bad)
adc
push
test
ror
adc
(bad)
jecxz
aaa
outs
adc
sub
mov
retf
(bad)
data16
inc
or
mov
xchg
data16
pop
lock
ss
or
and
xor
pushf
pop
fidivr
aad
and
aam
mov
add
sub
xor
xor
and
push
fdivp
shl
sbb
popa
mov
inc
sub
mov
adc
test
cmc
scas
xor
rcr
cmc
jo
pop
jp
fpatan
add
jnp
pop
jbe
pop
pop
sbb
and
and
mov
sub
fstp
ficom
jnp
shl
mov
rcl
cmp
mov
lock
jns
add
push
inc
jp
jle
loop
ja
xchg
enter
xor
xchg
(bad)
jg
cmc
sbb
mov
inc
or
cld
retf
jle
jmp
inc
lds
shl
pop
or
add
pop
enter
cs
repz
(bad)
mov
retf
adc
nop
test
aas
popa
push
lods
jg
ja
sti
mov
sbb
jle
jmp
out
inc
xchg
push
inc
push
sbb
adc
dec
cwde
repnz
ja
cs
fistp
ret
mov
pop
cs
(bad)
stos
adc
mov
or
mov
mov
mov
test
rol
pop
fld
push
inc
pop
xchg
mov
loopne
loope
inc
aam
fld
leave
mov
lock
add
or
adc
ds
fstp
addr16
mov
inc
in
dec
shl
in
mov
stos
mov
inc
das
jo
sbb
pop
test
push
mov
jns
dec
pop
push
pop
test
test
mov
push
push
xchg
mul
jl
sbb
(bad)
jg
imul
stos
push
adc
popf
mov
jmp
(bad)
mov
and
xchg
xchg
adc
jns
aad
bound
cmp
inc
ins
test
xor
push
pop
inc
xor
adc
sbb
xchg
pop
cwde
cmp
cmp
push
repnz
add
dec
int3
ins
add
and
jbe
call
fiadd
ror
mov
into
cmps
clc
mov
(bad)
test
iret
jno
sbb
inc
mov
retf
fs
cmp
int3
in
int
pop
(bad)
push
xor
cdq
sub
sub
push
out
pop
(bad)
icebp
xor
or
xchg
test
leave
mov
inc
lds
ins
jge
mov
and
aad
or
fsubrp
cmps
out
movs
sbb
push
in
and
xchg
popa
mov
cmp
scas
test
mov
pop
or
push
dec
cmp
loopne
dec
sub
push
fidiv
aam
and
pop
mov
xchg
lds
(bad)
or
shl
jae
nop
pop
dec
(bad)
mov
sbb
sub
ret
jle
iret
cdq
push
cli
(bad)
push
cmp
ins
(bad)
clc
push
test
out
dec
out
clc
xlat
lock
xor
adc
arpl
out
popa
es
mov
stos
(bad)
cmp
lock
pop
loop
xor
cmp
repnz
das
sbb
xchg
movs
add
adc
popa
sbb
push
xor
leave
jge
push
jge
and
lea
inc
imul
and
jae
jmp
mov
outs
sub
clc
xor
dec
inc
inc
outs
stos
dec
lods
pop
add
lea
pop
inc
add
ds
and
jge
jb
mov
fcom
leave
inc
jae
std
aam
push
shl
jbe
repnz
or
dec
mov
out
rcr
and
into
scas
aam
bound
dec
int
mov
add
mov
inc
push
jne
bnd
inc
cdq
cwde
dec
xor
(bad)
sub
cmp
lods
sub
out
push
lods
add
adc
in
mov
(bad)
cmps
xor
adc
sbb
popf
(bad)
div
xor
inc
leave
push
or
jge
sbb
inc
sbb
lahf
cmp
xor
ficomp
push
icebp
out
jge
pop
and
retf
add
pop
cmps
lock
cmp
fstp
jbe
mov
xor
iret
loopne
and
xchg
inc
mov
lods
das
mov
(bad)
sub
stos
mov
add
cmp
jo
rcr
stos
add
fmul
jmp
mov
hlt
add
xchg
ds
push
cmps
jb
xchg
xchg
mov
mov
ret
xlat
fwait
cmps
xor
jbe
movs
cmp
cmp
movs
xor
loopne
cmp
push
imul
sti
cmps
xor
pop
lahf
daa
xor
bound
scas
mov
icebp
jns
add
call
push
aam
or
xchg
mov
or
imul
add
dec
xchg
loop
leave
jns
mov
push
sbb
in
lea
xlat
or
xchg
pop
dec
aad
mov
call
jb
sahf
xchg
jnp
dec
aad
dec
or
shl
add
test
sub
mov
xlat
in
push
dec
xchg
ins
call
fnstcw
sub
inc
stc
xchg
gs
test
in
xor
sub
xor
jns
pop
mov
or
pop
mov
xchg
mov
jmp
xchg
dec
pusha
push
add
mul
or
push
pop
cmp
pop
and
(bad)
retf
mov
add
mov
fidiv
cdq
mov
jb
(bad)
dec
or
jmp
pusha
xor
sub
(bad)
pushf
movups
pop
icebp
jge
push
sahf
je
adc
sbb
mov
rol
sub
loope
dec
xchg
add
mov
rcl
push
jmp
arpl
mov
pop
iret
jno
call
or
push
jb
lock
jmp
cs
push
xlat
pop
stc
push
xchg
mov
in
mov
hlt
push
mov
out
mov
add
cdq
add
xchg
mov
mov
cmp
into
sub
inc
loope
cmp
adc
xchg
lock
xchg
cmps
pop
ins
add
cld
push
clc
and
stos
in
add
xchg
sub
add
mov
xchg
jmp
dec
xchg
jne
es
in
sar
dec
mov
xchg
sbb
jb
test
xchg
and
shl
add
xchg
adc
push
popa
popf
jmp
jb
inc
int3
es
ds
lods
jecxz
movs
mov
lods
jle
xlat
dec
sub
sub
adc
or
push
ins
cdq
test
(bad)
ret
mov
mov
out
inc
test
fldcw
xchg
xor
fdiv
pop
(bad)
sbb
inc
fisttp
mov
fldenv
or
dec
sub
jmp
push
(bad)
and
les
jmp
adc
imul
or
pop
bound
pop
lahf
jne
in
cdq
ret
dec
xlat
adc
inc
into
add
cmp
call
or
and
jmp
hlt
mov
xor
rol
add
adc
scas
dec
out
out
out
adc
retf
adc
data16
mov
mov
inc
aad
jmp
lahf
or
jmp
adc
xchg
addr16
add
xchg
pop
jno
jle
push
cmp
popa
fsub
iret
sub
mov
sbb
inc
add
int
jmp
aam
push
mov
jnp
add
inc
mov
dec
jbe
(bad)
loope
push
xchg
lea
push
aas
mov
xor
shl
jne
jne
test
and
clc
stc
shr
push
imul
add
sysret
cwde
adc
vmwrite
fild
mov
jns
xor
lds
dec
mov
neg
out
add
call
sti
in
popa
add
add
cmp
xchg
movs
cmp
cmp
and
enter
sbb
(bad)
fs
js
in
dec
movs
inc
or
std
dec
xchg
shr
and
pop
jne
jle
jmp
and
inc
test
or
ret
loop
cdq
or
call
push
sub
call
sbb
movs
sahf
pop
fsub
inc
loope
and
inc
sub
(bad)
sub
nop
add
aad
(bad)
test
cs
ins
(bad)
add
fcomp
cmp
inc
jo
scas
push
mov
outs
out
pop
push
sbb
aaa
push
pop
add
xor
fwait
xor
fs
call
mov
rol
pop
push
nop
mov
xchg
xchg
iret
test
repz
dec
clc
pusha
jl
adc
imul
in
scas
leave
ret
dec
push
sub
dec
fwait
pop
call
pop
push
fs
bound
and
add
aas
daa
mov
ret
jmp
dec
sbb
mov
adc
outs
or
xchg
jns
loope
mov
fadd
push
adc
mov
lea
sbb
repnz
dec
mov
sbb
out
aad
cmp
pop
loop
sbb
test
and
icebp
xchg
rcl
sub
sbb
add
or
test
test
rol
inc
imul
sbb
or
lock
mov
mov
aam
pusha
retf
fidiv
dec
(bad)
imul
ret
push
fcmovnu
(bad)
std
adc
stc
xchg
sbb
cmps
xchg
bound
adc
adc
inc
and
lock
test
popa
mov
mov
dec
jae
pop
xchg
leave
push
inc
pop
jge
std
xchg
cmc
nop
push
xchg
mov
repz
outs
xor
sbb
add
stos
or
xchg
mov
retf
push
rcl
lock
sub
mov
iret
cmc
into
pushf
int
jne
out
sbb
push
sub
cmps
fwait
or
loop
add
fsub
sub
xchg
inc
jl
inc
and
rcl
cmp
jg
ds
adc
neg
fstp
imul
ror
xchg
xchg
jle
aaa
ja
jmp
sbb
sub
add
out
or
push
add
je
jo
jbe
pop
jbe
in
add
mov
add
and
call
lds
and
push
push
out
(bad)
inc
imul
(bad)
loopne
int3
lds
sbb
push
movs
out
jno
mul
scas
outs
mov
retf
xchg
loopne
sti
pop
neg
jns
mov
daa
int3
inc
bound
adc
adc
push
pmuludq
lock
mov
test
and
dec
mov
stos
and
cmp
add
std
cdq
sti
push
mov
aaa
mov
mov
(bad)
dec
cmp
inc
shl
mov
add
ss
mov
mov
(bad)
shl
sub
xor
xor
pop
lods
mov
pop
cmp
cmps
and
pop
(bad)
ins
(bad)
aaa
inc
jg
pop
call
mov
mul
and
xchg
repz
int3
aaa
mov
and
inc
inc
stc
daa
dec
scas
push
push
add
or
adc
idiv
cmp
clc
aas
sahf
fstp
add
add
mov
loope
pop
cmp
add
push
in
push
in
mov
push
xchg
cs
mov
push
popf
test
and
and
jb
les
idiv
mov
push
jae
mov
sub
leave
add
xor
mov
shl
dec
or
add
mov
xor
cdq
jp
rcpps
std
and
sar
inc
push
pop
jle
cwde
mov
scas
mov
push
sub
mov
sbb
movs
or
div
dec
movs
inc
jbe
adc
fisttp
cmp
retf
repnz
lea
ss
cmp
leave
cmps
in
int3
mov
jp
mov
aad
push
xchg
imul
stc
ins
in
leave
iret
iret
es
xchg
adc
int
xlat
ins
inc
or
div
outs
out
jmp
mov
in
sub
lea
xor
test
stos
or
jl
jl
fldenv
inc
pusha
ret
in
iret
fs
jecxz
mov
jg
mov
pushf
push
jmp
push
xchg
outs
popf
add
mov
hlt
or
fisub
shr
jl
push
mov
and
pop
aam
adc
retf
pop
ds
into
cmp
aas
push
fist
cmps
in
xor
sbb
lock
fsqrt
push
xchg
aaa
inc
inc
test
sub
call
fwait
movs
cdq
ror
ud2
cwde
bound
mov
and
je
dec
nop
jne
cmp
sub
xchg
cmp
dec
push
pusha
mov
add
fs
fistp
mov
rol
lods
push
imul
(bad)
in
mov
mov
(bad)
out
pop
mov
mov
ja
hlt
xlat
stc
rol
xor
pop
(bad)
xchg
push
fst
inc
or
stos
loope
sub
jo
lods
test
jnp
cwde
or
aam
and
push
mov
dec
into
and
dec
cmp
cmp
mov
or
in
adc
add
xchg
lock
int3
popa
stc
xchg
jmp
retf
sbb
ror
or
out
jo
aam
mov
mov
scas
xor
test
out
dec
jmp
lods
mov
scas
mov
mov
imul
or
adc
clc
jns
add
bound
sub
pop
and
cmps
das
mov
push
mov
hlt
test
cmp
loop
xor
dec
sub
or
rol
stc
inc
mov
xchg
ror
cmps
sbb
or
adc
jmp
cmp
outs
test
dec
mov
inc
xor
lods
adc
out
popa
jb
nop
out
mov
and
jmp
push
inc
xchg
sub
push
js
(bad)
popf
cmps
dec
in
mov
sub
xlat
int3
cs
add
dec
push
xchg
sub
mov
dec
dec
mov
imul
cmp
cld
xchg
jmp
shr
mov
jne
xchg
inc
sub
adc
addr16
jmp
(bad)
fld
imul
aam
jno
pushf
shl
pop
push
in
mov
cmc
movs
dec
fstp
mov
int3
retf
hlt
sar
cmp
dec
ins
stos
out
pop
in
mov
jno
xor
push
or
jl
aad
mov
sbb
ins
xor
jmp
mov
bound
mov
das
sub
retf
in
or
mov
or
adc
enter
out
dec
addr16
cdq
push
in
mov
adc
aad
cmc
aad
stos
mov
mov
out
loopne
cmp
jb
lods
jg
cwde
jg
mov
xchg
bound
enter
daa
push
jmp
mov
pop
mov
xchg
sub
adc
and
ret
loope
(bad)
stos
push
repz
idiv
and
xchg
out
mov
dec
or
and
mov
out
mov
push
xchg
xlat
mov
xlat
enter
aaa
lods
mov
call
div
jecxz
dec
sar
cmps
push
out
in
test
(bad)
jbe
cli
sbb
xlat
mov
clc
in
jecxz
scas
cmp
int3
jg
dec
mov
(bad)
movs
xchg
pop
mov
push
pop
loopne
inc
add
ror
jmp
mul
jle
jne
dec
cld
aaa
jbe
jne
in
das
jmp
mov
push
jbe
mov
ins
outs
cmp
sbb
or
or
pop
cmp
test
ins
stos
das
and
dec
sub
movs
jmp
jmp
test
pop
ror
inc
aaa
aad
lods
jb
xchg
lods
imul
or
rcl
mov
add
jmp
outs
xchg
cmp
mov
(bad)
test
mov
stos
adc
fs
pop
push
adc
or
inc
repz
jb
dec
add
xchg
xor
sbb
cmp
(bad)
mov
cmp
inc
jb
add
cmp
iret
mov
popf
lahf
ret
mov
cdq
shl
lods
repz
or
and
xchg
imul
mov
push
fsub
(bad)
jo
out
and
cli
ret
add
inc
ret
jmp
je
adc
(bad)
sbb
jmp
mov
push
or
mov
fucomip
push
mov
cmp
rcl
dec
pusha
cld
sub
mov
stos
imul
or
fsubp
js
xchg
mov
clc
nop
dec
frstor
scas
cmp
fwait
sbb
mov
movs
xor
fmul
outs
push
das
shr
pop
pop
add
add
arpl
je
add
out
xor
sub
xchg
fdiv
loopne
adc
movs
rcl
cmp
pop
pop
seto
jmp
and
xchg
push
or
sbb
sub
sbb
push
call
xor
sahf
and
and
cmp
sub
sub
daa
rcl
and
stos
mov
in
pusha
ret
push
mov
jns
xor
lods
stc
mov
sub
popa
imul
jns
ja
mov
popf
in
test
inc
mov
ja
fs
je
mov
icebp
dec
or
aas
xchg
out
cmp
push
mov
jb
pop
lea
and
mov
inc
loopne
stc
dec
imul
xor
pushf
pop
cli
gs
mov
pop
jg
fwait
int
aam
jae
mov
out
dec
mov
sub
push
mov
mov
fimul
mov
pop
push
int
pop
xchg
rcr
je
sbb
dec
cmp
neg
ret
xchg
repz
mov
xor
bound
mov
hlt
inc
rcr
(bad)
in
dec
cmc
clc
sahf
cmps
sbb
dec
ds
mov
inc
aaa
cmp
shl
push
lock
dec
jo
xchg
jno
jg
(bad)
loop
ins
mov
fiadd
rcr
(bad)
xlat
push
push
pusha
xor
inc
mov
jmp
int3
ins
adc
rol
test
mov
ins
xchg
mov
jecxz
aam
sub
jge
jne
enter
lahf
add
sub
dec
adc
cmp
test
push
fist
mov
data16
imul
cli
ror
movs
fs
in
into
xchg
out
shr
test
add
(bad)
mov
xlat
inc
jecxz
dec
add
adc
cmp
or
outs
loopne
jbe
jp
test
pop
lea
pop
xchg
mov
cmps
jle
popf
lock
imul
icebp
mov
xor
xchg
stc
xchg
retf
xchg
aam
mov
mov
imul
xchg
mov
(bad)
mov
stos
sbb
jle
xlat
call
jge
stc
sti
popf
dec
dec
jbe
push
pop
push
dec
cli
in
inc
shl
dec
mov
xchg
cmc
daa
ss
add
mov
add
mov
adc
sbb
pop
shl
cmps
cwde
(bad)
cmc
mov
xor
pop
xchg
lods
adc
sbb
jmp
nop
mov
sub
mov
ficomp
pop
push
fucomip
and
mov
and
fdiv
leave
jns
mov
add
fsub
movs
pop
cmp
movs
cmc
jno
jl
jbe
jp
(bad)
cmp
fnstcw
mov
je
mov
push
add
in
movs
cmp
arpl
xchg
push
(bad)
sub
(bad)
(bad)
das
out
mov
push
pop
cmc
push
fsub
push
jne
jns
adc
cdq
xor
setle
cmp
dec
mov
inc
cld
out
add
movs
add
popa
cmps
sbb
pop
add
push
fucomp
sub
pop
mov
inc
jge
cld
std
xor
lds
jge
sbb
cmp
leave
dec
(bad)
mov
(bad)
and
xchg
sti
jb
in
cdq
jno
pusha
shr
pop
addr16
loope
jecxz
pushf
mov
dec
sti
data16
and
cmp
dec
sbb
repnz
xchg
xchg
sub
cmp
mov
out
in
dec
clc
das
aam
jge
loope
xor
ja
ja
pop
ds
cmps
jp
jmp
aam
adc
sbb
adc
mov
dec
jnp
jne
mov
test
jp
loopne
mov
mov
enter
lock
leave
in
call
xlat
dec
xchg
sbb
jno
jne
cmp
push
cmps
sbb
repz
(bad)
into
xor
fidivr
inc
push
push
dec
sub
push
or
int3
(bad)
or
jle
xchg
cmp
jg
dec
mov
call
mov
adc
push
mov
pushf
sbb
les
repz
jle
jnp
bound
inc
adc
sub
sub
cmp
pusha
jp
loopne
mov
adc
pop
mov
pop
mov
addr16
push
idiv
or
or
xor
pushf
and
mov
mov
and
push
fs
jle
fstp
and
das
dec
stos
stos
mov
sar
ins
or
lea
push
sar
xor
jbe
bound
or
(bad)
jecxz
mov
push
push
das
loopne
mov
xchg
xchg
(bad)
dec
jns
loope
rol
dec
push
dec
in
enter
adc
scas
mov
mov
jmp
inc
add
adc
sbb
rol
or
stc
jmp
push
cwde
out
push
(bad)
clc
repnz
xor
into
xor
out
clc
push
nop
vcomiss
push
and
loope
clc
mov
mov
mov
mov
(bad)
xor
sbb
in
(bad)
push
mov
ins
aas
imul
pop
push
or
sub
xchg
fwait
push
in
jo
push
jp
mov
out
cmp
inc
cld
jle
aad
push
xor
sbb
push
push
fcom
int3
std
out
push
dec
cmps
je
rol
mov
movs
sbb
(bad)
mov
mov
icebp
and
add
fcmove
mov
mov
or
mov
mov
out
pop
call
add
push
mov
jge
jno
lock
push
retf
or
scas
xlat
loop
mov
ficom
cmp
test
mul
xchg
add
sbb
call
and
xor
xor
mov
push
inc
jmp
sbb
or
aad
cmp
mov
addr16
sbb
loopne
mov
mov
mov
cmps
or
aas
push
push
xchg
and
cmps
cmp
dec
inc
push
in
retf
mov
vpunpcklwd
or
sub
jb
pop
add
inc
or
aam
mov
(bad)
dec
es
imul
je
shr
test
(bad)
mov
stos
pop
cmp
movs
jo
push
push
daa
pushf
out
xor
push
repz
lods
and
cmp
xadd
mov
addr16
(bad)
mov
loopne
and
dec
repz
jecxz
fwait
xchg
sub
pminub
jp
or
cmps
adc
push
or
imul
std
mov
mov
or
pop
mov
jg
cmps
out
inc
repnz
arpl
loop
dec
sbb
or
jbe
stos
cmp
nop
pop
mov
das
stc
mov
aas
test
xor
rcr
not
add
adc
ret
retf
pop
scas
xor
mov
icebp
mov
mov
jg
(bad)
out
call
in
leave
jne
push
loopne
aam
xchg
sbb
jns
int
aad
scas
cmp
inc
or
(bad)
xchg
inc
fild
and
retf
xchg
pop
bound
pushf
jne
fiadd
pop
mov
push
jo
(bad)
mov
push
mov
out
test
loope
pushf
int3
add
add
gs
icebp
ins
lods
or
pop
xor
ret
mov
dec
mov
jmp
shr
mov
in
pop
loope
(bad)
push
movs
xor
movs
popf
mov
mov
push
enter
mov
sub
mov
adc
push
adc
dec
jnp
sub
sub
push
call
stc
mov
inc
icebp
dec
jbe
fcmovnb
fisttp
sub
movs
test
or
arpl
pusha
rcr
pop
jge
push
aaa
pop
push
movs
dec
aam
dec
pop
jmp
cmps
adc
leave
xchg
jne
xchg
les
push
or
fbstp
hlt
jnp
dec
jge
add
aas
iret
out
int
and
scas
cli
jg
mov
inc
clc
xor
xor
popa
sub
xor
les
arpl
in
pushf
cli
fwait
scas
cmp
mov
dec
call
sub
mov
cmps
dec
mov
or
push
(bad)
mov
addr16
data16
repz
and
cmp
add
or
les
add
call
mov
adc
push
mov
and
push
bnd
enter
sub
sub
imul
add
sub
ds
dec
lock
test
sbb
test
or
scas
imul
in
pop
adc
jae
jmp
push
mov
fs
pushf
cld
retf
in
rcr
mov
mov
aas
jl
mul
mov
ss
or
jne
sub
sub
movs
fadd
and
cs
mov
jecxz
popa
mov
popf
(bad)
pop
(bad)
jbe
adc
dec
or
in
or
mov
xchg
icebp
(bad)
das
jmp
int
sbb
sbb
mov
xor
call
iret
xchg
mov
adc
cmc
mov
rcr
dec
mov
push
sub
lods
xor
aas
imul
es
cdq
leave
jl
adc
adc
sbb
cmp
mov
mov
ficomp
into
inc
mov
push
dec
inc
mov
mov
or
and
pop
cwde
push
addr16
and
std
pop
les
hlt
adc
mov
mov
sub
or
sti
xchg
adc
into
jns
pop
add
and
mov
mov
sti
loope
xchg
(bad)
xchg
mov
out
jg
mov
rcl
sub
notrack
scas
inc
idiv
lahf
push
pop
jle
lods
and
dec
pop
push
rcr
popf
inc
push
ss
aas
in
hlt
dec
pop
sub
xchg
or
mov
in
aas
pusha
mov
(bad)
(bad)
and
retf
jl
sahf
fwait
shl
and
ret
sbb
cs
cs
jo
loope
dec
call
stos
nop
push
xchg
jge
jecxz
lock
fs
xor
cld
in
imul
retf
mov
aas
push
movs
xor
push
inc
sar
or
inc
jp
aas
xchg
xor
jg
sub
cmp
sub
cmp
pop
icebp
loope
popf
adc
sbb
adc
mov
xchg
dec
push
inc
mov
test
push
and
gs
int3
test
jmp
push
push
jp
shl
jne
dec
xchg
rcr
mov
dec
retf
push
ror
and
push
pop
arpl
std
and
fs
mov
sub
cmps
sbb
and
out
add
mov
sub
mov
and
in
aaa
jno
aaa
fisttp
mov
(bad)
and
cmp
or
pop
ret
lahf
lea
ja
and
(bad)
jecxz
cwde
shl
or
mov
cmps
out
add
out
arpl
push
sub
add
push
adc
inc
and
int
mov
ret
adc
(bad)
push
mov
add
dec
xchg
scas
inc
push
out
inc
into
ja
fild
add
(bad)
loope
jge
das
test
jge
movs
out
sub
jb
mov
jmp
retf
xor
gs
cld
cs
clc
mov
cmc
xor
dec
xchg
mov
outs
aam
repnz
mov
push
mov
push
addr16
inc
jo
stos
sbb
dec
movs
fadd
pop
pop
test
mov
pop
leave
(bad)
push
daa
xchg
popa
and
inc
mov
push
in
xor
rol
cmps
sbb
mov
dec
cmovl
outs
push
and
xchg
daa
jge
inc
xor
pop
call
mov
rcl
jmp
sub
jle
adc
push
loop
aad
xchg
mov
inc
cdq
xchg
mov
xor
push
fist
mov
xchg
test
shl
jne
test
push
loopne
pop
sub
out
cmp
pusha
mov
or
jecxz
add
xor
fst
or
int3
(bad)
dec
pop
and
mov
pop
add
mov
pop
mov
sub
push
inc
scas
mov
scas
(bad)
rol
cld
xchg
lods
jge
sbb
add
add
cmp
jb
sbb
xor
jecxz
fidivr
add
and
and
xchg
ret
(bad)
into
shl
sub
leave
pusha
dec
cdq
xor
push
jo
popf
inc
fs
push
push
dec
jns
or
sbb
(bad)
movs
cmp
or
sbb
jne
cmp
xor
loope
inc
mov
push
ret
add
dec
sbb
aaa
je
xchg
stc
or
in
into
sbb
or
cmp
(bad)
aaa
fidiv
xchg
jmp
xchg
xor
in
pop
adc
outs
or
in
aad
xor
out
(bad)
mov
jp
ret
mov
retf
ret
xchg
mov
mov
outs
push
lods
or
retf
mov
add
push
mov
in
aam
arpl
and
ins
jmp
jne
outs
ds
mov
fs
das
inc
mov
fidiv
cs
jae
push
inc
fdivr
lea
fs
popf
adc
dec
ret
cli
mov
sub
pushf
cmp
nop
sbb
adc
cmp
mov
mov
sub
pop
sub
cmc
loope
jno
movs
(bad)
loope
jne
stos
(bad)
mov
dec
and
xchg
arpl
aas
(bad)
popa
dec
fdiv
pop
out
sar
je
scas
test
inc
push
fs
(bad)
sub
ret
rcr
jne
mov
pop
xor
push
inc
sub
fst
pop
and
cmc
or
ffreep
push
rcl
(bad)
jo
dec
dec
rcl
std
dec
or
jmp
imul
add
mov
sub
inc
into
mov
pop
jo
pop
xor
sar
lds
mov
add
gs
sysenter
jo
add
sti
test
mov
rcr
dec
dec
inc
mov
js
in
cmp
fs
jg
mov
xor
imul
sbb
mov
dec
int3
or
cmp
adc
pushf
pop
(bad)
mov
mov
js
imul
dec
mov
push
aas
jl
cmp
xor
mov
pop
mov
adc
cli
hlt
shr
test
aad
cli
xor
inc
dec
xchg
add
mov
jbe
fisubr
dec
add
and
daa
out
not
mov
push
pop
or
mov
jecxz
add
std
aas
mov
inc
loop
fadd
stc
sar
stc
frstor
mov
xchg
cli
daa
pop
sub
adc
sar
stos
punpcklbw
pushf
test
jle
sbb
mov
and
and
push
push
pushf
popa
test
push
cli
mov
mov
and
dec
stos
xchg
addr16
sub
mov
and
sbb
or
adc
shl
push
cwde
xchg
repz
call
add
leave
daa
call
cld
jge
jmp
mov
call
cs
sbb
push
mov
es
sub
xchg
mov
push
dec
push
push
imul
xchg
adc
jae
inc
dec
jge
pop
xchg
pushw
ds
imul
ss
cwde
mov
movntps
fisttp
nop
pop
out
clc
test
icebp
xchg
jp
sub
mov
and
push
xor
inc
fisubr
cmp
les
in
sub
dec
inc
dec
mov
aad
fwait
pop
mov
mov
mov
icebp
and
jl
outs
xor
aam
or
xchg
pop
xchg
dec
xor
clc
dec
jae
add
dec
pushf
ja
ja
nop
test
cmp
das
call
test
jne
inc
dec
xor
cwde
imul
in
mov
les
mov
sub
addr16
mov
mov
inc
xchg
jo
stos
les
fidivr
bound
fimul
mov
mov
xor
sub
mov
push
inc
push
sbb
aaa
ins
mov
pop
mov
jle
jge
and
icebp
lods
inc
lock
aam
test
cmc
jge
jp
pop
arpl
cmp
pop
pop
xor
xor
jnp
jg
dec
dec
enter
jnp
cmp
inc
or
(bad)
push
and
fstp
jg
dec
cmp
into
mov
pushf
sub
js
mov
pop
inc
mov
jle
std
push
inc
mov
add
cmps
shr
mov
int
xor
in
in
in
fcmovnb
push
dec
jmp
pop
fcomi
sub
cmps
frstor
inc
out
jmp
adc
push
retf
daa
mov
pop
fwait
cmp
das
aas
jb
mov
pop
dec
cmps
sbb
mov
dec
sub
mov
aas
push
push
sub
sbb
jle
repz
sub
cmc
xchg
jno
xor
mov
rcr
mov
pusha
xor
stos
icebp
call
aad
test
xchg
inc
jl
int3
jmp
fisub
push
test
mov
data16
dec
add
mov
in
es
push
sub
lahf
adc
mov
inc
sti
fidivr
xor
iret
xlat
lds
mov
sbb
pop
(bad)
leave
les
jnp
leave
cmps
jo
jo
pop
fld
aas
jmp
dec
xor
push
pusha
test
dec
cwde
dec
pop
adc
push
imul
sbb
stc
mov
btr
sbb
mov
fincstp
cwde
repz
jle
pop
mov
push
out
movs
dec
test
call
jne
test
or
(bad)
jnp
enter
repnz
rcr
cmp
ds
in
popf
iret
push
pop
pusha
bound
adc
pop
dec
es
sahf
fmul
inc
pop
jg
outs
xor
xlat
xchg
aas
xor
pop
or
(bad)
pop
loopne
mov
and
imul
shl
push
or
or
add
cmp
sahf
cs
popf
sub
in
cmp
(bad)
pop
ds
dec
mov
mov
and
imul
aam
inc
jg
imul
pop
loop
mov
imul
in
out
lods
push
push
cmp
jnp
push
or
test
ja
mov
or
lea
dec
cmps
sahf
retf
rol
ret
rol
cmps
in
aam
hlt
stos
add
and
arpl
jnp
jp
or
shr
mov
and
in
adc
data16
out
adc
lea
pop
xor
retf
add
xor
and
mov
lea
add
aad
cmp
cmp
or
mov
cmps
or
sbb
adc
and
scas
and
add
ret
mov
popa
push
inc
add
fist
daa
in
pop
cdq
fwait
out
mov
lea
(bad)
sub
mov
ror
xchg
jns
xchg
ret
mov
push
das
or
gs
(bad)
sub
aam
out
test
jg
xchg
jp
cld
fnsave
sub
adc
cwde
or
push
scas
aas
mov
dec
daa
or
test
dec
dec
jmp
cld
ds
jns
push
imul
sub
ss
jae
aam
rcl
popf
les
jb
and
cdq
add
(bad)
not
pop
iret
and
pop
dec
sti
das
pop
mov
cmps
pop
loop
mov
repnz
movs
movs
mov
cmps
push
fst
test
mov
xor
xor
and
sbb
clc
popa
jo
jne
les
jbe
jp
push
jbe
sbb
pop
mov
test
mov
icebp
cs
add
popa
sub
inc
es
arpl
push
jg
call
mov
mov
das
sub
mov
stc
adc
jbe
xchg
ins
add
cwde
inc
rcr
repz
nop
cmp
sub
psadbw
jb
add
fs
sti
inc
adc
or
sbb
(bad)
mov
cmp
rcr
imul
dec
lods
and
lahf
popf
or
jne
ret
outs
in
push
hlt
xchg
shl
pop
(bad)
lock
in
js
std
pop
or
hlt
fbstp
mul
fdivr
xor
sbb
and
and
in
(bad)
sub
shl
sbb
cmp
fild
mov
sbb
xchg
cmp
pop
ss
es
popa
inc
xlat
inc
vpaddb
pop
inc
scas
hlt
sub
pop
fucomip
enter
jno
add
pop
cmp
iret
mov
cmc
ins
dec
fld
push
fistp
(bad)
mov
fdiv
imul
in
stos
popf
fild
jle
retf
mov
mov
call
jae
xchg
mov
cmp
add
jne
mov
cmp
jmp
or
mov
mov
push
loopne
adc
ret
clc
mov
push
pop
je
dec
sub
enter
gs
sar
cmp
mov
rol
shl
jae
push
ja
push
(bad)
xor
je
aad
mov
mov
(bad)
mov
add
lock
scas
push
adc
aam
jp
pop
mov
(bad)
fsubr
jmp
jg
movs
repz
imul
push
mov
stc
nop
jae
dec
xor
loopne
or
int
mov
dec
cmps
div
into
in
arpl
jg
sbb
push
lods
gs
ds
sub
shl
lds
idiv
add
xchg
xchg
cmp
xor
and
cmc
(bad)
shl
sbb
scas
mov
sti
out
pmaxsw
sbb
stos
mov
lods
add
lds
or
add
push
aad
aam
push
and
add
stos
je
jae
movs
mov
pop
sbb
leave
fisttp
or
mov
inc
cmps
cmp
lahf
cmp
hlt
push
bound
gs
js
retf
jg
sub
inc
(bad)
movs
jecxz
mov
stos
inc
pop
mov
sub
ins
int3
push
ror
pop
daa
xor
popf
retf
inc
sbb
popa
inc
jp
and
es
lock
jle
adc
cld
loope
xchg
sbb
in
jmp
mov
mov
adc
sub
and
jno
(bad)
inc
or
jb
cli
inc
sub
dec
adc
fiadd
push
call
cwde
sahf
push
cmp
inc
enter
lds
xchg
inc
push
push
add
or
mov
mov
mov
and
ja
cdq
inc
xchg
popf
sbb
mov
(bad)
mov
dec
cs
sahf
and
pop
arpl
int3
scas
mov
xchg
popa
add
jb
xchg
or
adc
pop
push
stos
addr16
sahf
out
inc
and
cmp
push
mov
sub
xchg
jno
mov
push
dec
cmp
mov
retf
or
int
pop
jmp
fiadd
and
les
mov
sub
xlat
sbb
add
or
test
aaa
xor
fwait
dec
adc
mov
cmp
loopne
dec
dec
mov
xchg
cli
cmp
outs
and
push
cmp
test
fistp
xchg
leave
or
(bad)
pushf
pop
lock
sahf
stos
das
mov
pusha
add
sahf
(bad)
daa
lock
movs
aaa
enter
sub
cmps
test
enter
movs
mov
loope
or
int
xlat
xchg
jnp
test
pop
sub
push
das
ror
mov
mov
enter
add
out
cdq
fnsave
add
jl
jle
or
push
fs
mov
and
push
inc
jnp
adc
test
imul
push
gs
jl
dec
sub
shl
cmp
mov
inc
ss
pop
icebp
bound
div
cmp
mov
cmp
sub
mov
scas
pop
ret
and
mul
push
mov
movq
jae
imul
in
scas
das
push
push
retf
add
sub
ins
inc
je
xchg
fdivr
int3
fnsave
mov
lea
pop
cmp
cmp
shr
jmp
ret
stos
ja
in
or
sbb
adc
call
fsub
pop
add
retf
jno
sub
xlat
adc
sti
fnstcw
pop
mov
gs
shl
or
mov
fcmovne
fwait
cmc
in
icebp
retf
rcl
idiv
hlt
sbb
adc
int
ins
cmp
jl
retf
or
test
inc
pop
test
sub
inc
lea
cwde
inc
sbb
or
stc
(bad)
mov
fld
push
mov
jge
mov
sbb
out
arpl
mov
mov
gs
fidiv
sbb
pusha
adc
addr16
pop
ror
sub
std
(bad)
fstp
add
out
shr
(bad)
call
movs
adc
clc
clc
push
cmps
fwait
pop
jne
test
pop
cs
call
in
fwait
enter
bound
mov
inc
int3
sub
mov
cmp
mov
push
or
inc
test
jne
pop
xchg
pusha
mov
and
test
sub
push
dec
dec
cwde
dec
js
push
adc
ss
adc
scas
scas
push
push
mov
arpl
mov
mul
cs
aaa
sti
ret
pop
es
inc
xlat
mov
dec
cmp
inc
shl
mov
xor
xchg
add
iret
stc
int
pop
mov
retf
icebp
mov
movs
sbb
(bad)
jno
test
in
jb
icebp
pop
inc
cmp
mov
push
popf
shr
and
cmp
enter
inc
sub
add
pop
adc
jl
and
cwde
stos
and
ror
iret
sbb
cli
adc
inc
jbe
pusha
movs
div
pop
(bad)
retf
and
sti
pop
imul
mov
mov
(bad)
jp
add
dec
xchg
xor
xor
fld
retf
sbb
pop
lea
rcr
and
inc
ret
psubsb
or
inc
aam
fnstsw
pmulhuw
xor
pusha
nop
(bad)
call
sub
or
loopne
fdivr
xchg
dec
xchg
and
mov
xchg
mov
(bad)
call
out
add
das
icebp
frstor
addr16
dec
push
fisub
mov
jne
fcmovnbe
mov
sbb
pop
push
stos
scas
imul
xchg
add
outs
jbe
js
sub
das
setne
mov
or
mov
mov
cmp
sar
inc
mov
dec
xor
adc
fidiv
inc
push
sub
mov
sub
sbb
dec
mov
push
xchg
cs
sub
fild
mov
loope
mov
and
mov
lea
lds
fsub
xor
movs
icebp
arpl
jle
ror
cld
lods
mov
mov
lods
adc
xchg
ins
and
mov
(bad)
(bad)
in
int
call
jns
inc
test
push
dec
adc
push
ja
loopne
repnz
das
fstp
cmp
in
call
pop
dec
je
sar
jg
add
(bad)
in
retf
xchg
fild
pop
les
sub
jnp
and
dec
mov
mul
out
sub
cdq
push
test
loopne
fnsave
pop
mov
xchg
lahf
mov
js
fidiv
arpl
jmp
les
ror
and
or
stos
cmp
mov
out
in
retf
or
fld
mov
pop
test
sub
mov
cmp
aas
cwde
jge
push
and
cli
int3
pop
js
test
inc
ins
cmp
es
imul
push
xchg
inc
push
inc
jg
dec
loopne
xor
jae
sar
call
es
in
nop
adc
loopne
ret
mov
cmp
out
mov
xchg
call
in
int3
dec
xchg
fnstenv
(bad)
mov
mov
ja
mov
aad
das
out
inc
mov
inc
and
adc
add
push
lea
mov
int
or
ins
push
jle
add
pop
fmul
movs
test
pop
or
or
xor
cmps
aam
imul
int3
pop
xchg
imul
or
arpl
and
js
aam
mov
sbb
lods
iret
mov
out
adc
xchg
pop
inc
sub
cmp
test
int
adc
xor
mov
fs
mov
cmp
mov
aam
ins
cdq
ins
addr16
sahf
ins
push
cmp
sub
adc
rcl
or
inc
sub
rcl
test
mov
or
clc
je
imul
(bad)
enter
aad
mov
xor
icebp
add
pusha
in
jl
mov
add
out
out
mov
jo
push
dec
(bad)
mov
add
adc
movs
xchg
sbb
pop
test
mov
ins
loop
rcr
mov
into
inc
jp
pop
mov
jg
push
stos
scas
pop
ins
lods
inc
mov
(bad)
test
push
jae
push
pushf
mov
cwde
lea
adc
push
mov
loopne
pushf
popa
inc
out
lea
sub
dec
push
sbb
mov
add
cmp
ror
js
dec
sahf
jno
imul
cwde
sbb
mov
dec
dec
(bad)
aad
aas
sbb
xlat
ja
push
dec
pop
std
(bad)
repz
jge
mov
test
pop
gs
std
adc
add
stos
bndldx
test
loop
dec
push
movs
xchg
sbb
cmps
das
cwde
js
out
dec
outs
dec
rcr
lods
sub
fld
lock
aas
mov
xchg
sub
ins
push
retf
aas
cmp
and
fsubp
or
stos
cs
ror
int3
mov
jae
xchg
jmp
dec
pop
pop
mov
bound
test
(bad)
pop
mov
xchg
in
cs
xor
(bad)
cmp
pop
dec
add
sbb
push
scas
rol
stos
xchg
retf
xchg
movs
addr16
or
gs
lock
nop
mov
out
push
dec
inc
sub
and
jecxz
or
jge
leave
mov
sti
xor
cmps
pop
push
mov
add
mov
adc
mov
push
mov
xor
mov
leave
fst
(bad)
xchg
ins
ss
scas
out
clc
xor
jge
lahf
mov
mul
inc
push
jnp
repz
retf
inc
loop
in
adc
jp
mov
movs
push
add
aas
xor
adc
data16
cmc
or
mov
bnd
loopne
or
xor
and
or
pop
retf
pop
jno
cmps
enter
fsub
in
mov
in
fs
jbe
(bad)
stc
sub
push
lds
imul
scas
jb
lahf
retf
xchg
add
push
mov
xor
push
or
mov
mov
pushf
test
sbb
xchg
add
fisttp
mov
xor
and
xchg
or
pushf
sub
jmp
les
shr
dec
sub
enter
sub
leave
pop
cmps
repz
inc
xlat
push
add
fld
scas
cmps
std
jp
(bad)
aad
outs
pop
push
add
sahf
retf
cmp
jge
scas
mov
outs
(bad)
cdq
lds
lahf
sub
lds
ins
div
xchg
stos
popa
loop
loop
pop
inc
adc
popf
jle
push
ffreep
mov
mov
pop
adc
or
dec
sbb
sub
and
test
ja
mov
pushf
sti
dec
push
pushf
jo
stc
inc
jp
pop
out
mov
inc
mov
loop
or
sub
lds
push
sbb
fcom
lahf
sbb
aas
movs
lock
popa
mov
xchg
inc
outs
xchg
das
shl
or
add
rol
inc
cmc
lahf
data16
fwait
pop
and
sti
cld
into
pop
pop
inc
pop
pop
jecxz
inc
mov
add
mov
pop
or
inc
sub
daa
scas
xchg
xchg
cmp
cmp
add
xchg
dec
jo
icebp
jle
or
call
fcom
jle
jmp
call
sti
pop
in
mov
mov
mov
jmp
retf
inc
sub
rcl
or
jne
mov
and
mov
pushf
int3
loope
les
and
mov
mov
and
and
mov
iret
das
cld
mov
sbb
push
dec
(bad)
test
ja
dec
sub
out
or
out
add
sbb
jmp
pop
cdq
adc
jno
jecxz
pushf
xchg
loop
mov
in
pop
push
retf
mov
cmp
test
or
pop
inc
push
fs
dec
jl
movs
mov
pusha
pop
jge
sbb
jl
icebp
or
cmp
loop
aam
sub
pop
xchg
dec
shr
into
adc
dec
xchg
add
enter
pop
mov
pusha
pushf
movs
rcr
jmp
rol
pop
aam
or
add
adc
sbb
and
gs
aad
icebp
js
ins
mov
push
push
clc
and
pop
std
std
sub
lahf
pushf
jo
fnstsw
aaa
sahf
adc
push
xchg
(bad)
int
fwait
cmp
enter
mul
inc
and
push
sbb
clc
fistp
and
imul
mov
and
dec
mov
in
ins
js
retf
add
mov
test
inc
retf
xchg
mov
ror
mov
mov
mov
mov
rcr
push
jne
sbb
addr16
and
or
xor
dec
pop
pushf
hlt
or
cmp
bound
xor
push
xchg
int
iret
retf
push
call
addr16
sub
iret
ror
sub
jnp
mul
push
mov
mov
in
xor
adc
mov
xor
outs
jecxz
xor
xchg
mov
jns
dec
inc
adc
les
fld
inc
ins
ds
sahf
jne
xlat
loop
bound
dec
dec
inc
dec
outs
test
push
xchg
push
pusha
add
in
push
cmp
mov
in
dec
(bad)
or
test
mov
push
sbb
(bad)
jne
int3
add
lock
(bad)
xor
sbb
pop
mov
dec
aas
mov
mov
out
in
pushf
jne
daa
stc
aad
sub
jne
outs
mov
cmps
ins
or
cld
cmp
ins
js
aaa
xchg
dec
add
pusha
aas
sub
inc
mov
mov
cmp
adc
add
push
ja
inc
sbb
ficomp
pusha
xor
cli
dec
data16
adc
pop
pop
clc
dec
inc
lods
outs
jnp
xchg
mov
sbb
xchg
dec
jge
into
js
pop
inc
add
test
jmp
fcomip
fistp
hlt
jmp
jb
or
xor
xchg
dec
dec
or
(bad)
fmul
(bad)
dec
mov
and
mov
push
push
inc
into
icebp
fstp
xor
js
dec
call
sub
adc
pop
imul
call
in
sub
adc
daa
mov
int3
aam
sbb
icebp
inc
neg
mul
out
(bad)
jecxz
pop
add
imul
out
fcmovne
adc
or
cvttps2pi
mov
aam
int3
sbb
out
mov
or
retf
mul
inc
hlt
invd
out
jmp
jle
inc
nop
int3
fistp
fimul
mov
cmp
mov
in
ficom
dec
dec
push
das
xor
add
mov
test
mov
lds
add
mov
and
xchg
xchg
shr
push
in
dec
popa
xchg
(bad)
jae
and
pop
cmps
addr16
mov
push
retf
out
clc
jecxz
sti
add
lds
std
das
mov
pusha
sahf
xor
cmp
jecxz
es
add
pop
lock
in
jecxz
sahf
mov
inc
pop
cmp
jae
sbb
call
push
push
xor
cmp
call
push
fcmovbe
xchg
jle
mov
cdq
(bad)
pop
and
es
dec
test
pop
outs
pusha
lahf
xchg
fwait
cmp
aam
cmp
pop
shr
in
movs
retf
push
jl
pop
into
inc
cdq
sbb
popf
jne
sbb
add
ss
fwait
das
inc
iret
mov
scas
cmp
jg
mov
jge
aad
ficomp
mov
add
push
pop
xchg
dec
ins
dec
aas
imul
imul
nop
jns
dec
bound
in
xor
(bad)
ins
push
push
xor
sbb
cwde
xchg
sbb
lock
aas
bound
xor
nop
outs
lahf
mov
daa
jno
hlt
int3
div
jg
rcr
jae
aas
dec
popf
jbe
push
jb
sbb
int3
and
inc
jge
in
inc
jae
push
mov
adc
outs
mov
add
pop
adc
dec
cmp
sbb
xor
mov
int
sbb
ds
cmp
inc
adc
cmp
mov
xor
mov
xchg
pop
sub
int
popf
movs
and
push
cmp
cmc
pusha
xchg
aam
adc
fisttp
dec
sub
mov
and
cmc
loope
nop
dec
cmp
pop
mov
repnz
in
lods
and
pop
in
push
push
jecxz
lods
cs
cmp
xchg
mov
cli
xchg
pushf
cld
sub
mov
mov
sbb
push
fwait
xchg
dec
popf
and
mov
and
nop
adc
pop
inc
ds
pop
(bad)
movs
sbb
and
scas
push
int3
imul
mov
xchg
aas
aam
fisttp
mov
jle
dec
or
test
jle
rcr
out
arpl
pop
or
mov
ja
mov
sub
inc
retf
hlt
or
mov
gs
daa
xchg
shr
jge
(bad)
cmp
xchg
pusha
lock
aam
xchg
jle
(bad)
cs
lds
in
daa
lds
add
fwait
jno
xchg
addr16
push
mov
push
mov
sub
loopne
adc
pause
xchg
mov
in
xor
inc
push
push
cmp
mov
int3
mov
(bad)
mov
lods
inc
fadd
add
ret
adc
sub
imul
lods
adc
lea
sti
push
frstor
lea
rcr
jae
(bad)
fsub
push
dec
ins
ins
out
sbb
jmp
pop
std
dec
jno
jo
adc
and
dec
sbb
adc
jbe
add
out
mov
popa
xor
mov
push
or
int3
bound
mov
pop
or
and
sahf
xchg
mov
movs
mov
sahf
hlt
dec
xchg
retf
jne
jmp
stos
stos
add
into
xor
lock
int3
add
or
jmp
ss
cmp
inc
pop
or
mov
lods
inc
pop
sub
retf
ror
mov
add
add
push
enter
ja
xchg
icebp
and
mov
in
in
xchg
daa
ret
retf
rol
xchg
aaa
adc
mov
in
xchg
jae
push
ins
push
cmp
enter
xchg
push
out
pop
das
lods
or
shr
xchg
mov
pop
or
in
push
sahf
data16
push
xchg
xchg
addr16
mov
push
xchg
dec
sub
fwait
mov
(bad)
aam
shl
lahf
ins
loop
ret
mov
jmp
test
mov
push
scas
mov
jno
xchg
pop
inc
pop
mov
jg
daa
ror
cmp
inc
add
push
jae
push
inc
test
sbb
push
mov
fld
in
and
nop
push
pusha
repz
es
sti
sar
or
cs
pop
xor
repz
pop
xor
xor
adc
push
(bad)
push
mov
int3
stos
shl
pop
adc
add
add
adc
outs
jo
mov
outs
ins
add
lock
mov
cmps
inc
shld
je
fist
fadd
inc
daa
sbb
add
add
sbb
clc
push
mov
or
push
scas
adc
dec
aam
sar
mov
dec
jbe
icebp
sbb
(bad)
call
mov
(bad)
loop
xchg
add
fdivrp
jnp
cmp
add
jg
jns
adc
push
adc
jo
jnp
jo
jb
addr16
int3
jno
pop
cmp
sar
sti
push
sbb
nop
stos
or
in
mov
aam
aaa
not
daa
inc
inc
int3
inc
push
xchg
push
fwait
jnp
ror
pop
(bad)
sbb
js
jo
sbb
mov
call
adc
aas
cmc
pop
xor
and
pop
test
pop
fcmove
mov
mov
inc
popf
inc
jns
or
mov
outs
xor
xchg
xchg
sub
adc
xor
push
in
rol
adc
(bad)
pop
fidivr
or
leave
jno
jge
mov
iret
push
ss
push
mov
pop
out
sahf
mov
fwait
jecxz
pop
imul
repnz
xor
and
lods
sbb
mov
hlt
fist
or
rol
mov
dec
pop
mov
aaa
sub
in
mov
test
sub
mov
popf
inc
and
push
cld
scas
sbb
mov
leave
dec
mov
add
movs
or
push
outs
daa
xor
or
(bad)
xchg
dec
dec
cmc
jo
popa
outs
inc
xchg
mov
inc
fldenv
mov
in
mov
data16
mov
inc
movs
cmps
imul
fwait
inc
pop
out
(bad)
mov
je
(bad)
ret
(bad)
mov
adc
fstp
ss
xchg
lahf
mov
das
inc
and
jbe
jnp
outs
push
stos
adc
or
jecxz
out
stc
sahf
test
jp
xadd
dec
jmp
je
mov
pop
mov
cmp
add
cmc
clc
imul
mov
mov
test
pop
retf
stc
xchg
adc
loop
pop
xlat
jp
in
mov
cmp
leave
pop
pop
leave
xstore-rng
cmps
add
add
push
pop
xor
push
js
popa
lahf
sub
sub
pop
cli
pop
push
cdq
stos
and
cmp
or
mov
jle
cmps
xchg
aam
dec
adc
int
inc
imul
mov
jb
cld
xlat
cmp
movs
int
xor
pusha
or
stos
(bad)
jbe
jmp
(bad)
dec
pop
xchg
xchg
sahf
push
out
sbb
or
xor
mov
fadd
shl
pusha
mov
adc
out
xor
xor
enter
mov
dec
icebp
les
jno
(bad)
in
dec
jno
enter
inc
call
jmp
addr16
xor
sub
sub
hlt
sti
je
fwait
xchg
shl
lahf
mov
(bad)
jnp
mov
ror
popa
mov
and
fsub
mov
xlat
sti
movs
dec
pop
icebp
add
(bad)
repnz
ss
push
out
xchg
or
test
jp
lahf
idiv
fidiv
jp
push
push
jae
pop
test
sar
push
arpl
sar
or
or
jmp
jno
loopne
add
pop
push
jmp
sub
movs
cs
pop
or
call
out
fiadd
mov
inc
mov
test
repz
or
stos
stc
inc
cmp
aas
pop
and
cli
sar
push
sub
mov
xor
stos
and
repz
sahf
xor
(bad)
pop
in
das
or
jne
xor
(bad)
xor
shl
in
mov
adc
es
jmp
mov
sbb
pusha
cmp
imul
lods
mov
jbe
out
sti
xor
sub
and
fld
in
mov
(bad)
jae
sbb
enter
loopne
rol
ss
in
mov
xchg
xor
in
jle
inc
lds
outs
cmp
enter
jp
scas
in
iret
xor
or
xchg
stos
inc
cdq
xchg
inc
push
pop
es
aam
repnz
mov
stos
sbb
xor
ror
mov
(bad)
sar
jbe
pop
mov
mov
rcr
push
(bad)
adc
xchg
and
jecxz
or
cmp
mov
ins
clc
je
or
push
add
jne
pop
mov
cmps
fild
add
int
inc
aad
add
push
inc
loope
add
pop
sahf
jge
adc
push
cmpps
leave
sahf
inc
js
lea
int
jmp
xor
cmp
sub
lds
imul
popa
mov
push
aas
mov
scas
js
push
cmp
cli
and
sub
xchg
aam
pop
fcomip
in
cmovg
pop
mov
iret
jl
inc
mov
pop
pop
lods
(bad)
gs
or
pop
push
push
loop
pop
xchg
out
mov
call
and
lea
xor
ins
pop
push
sub
popf
pop
xchg
sub
jmp
scas
inc
push
rcl
in
xchg
mov
adc
mov
mov
inc
adc
jge
or
ret
mov
test
dec
mov
dec
jmp
adc
adc
lds
xchg
cwde
or
cmp
add
in
cwde
mov
xlat
sub
cwde
push
fwait
pop
jle
jo
mov
jmp
xor
(bad)
test
push
outs
aad
sar
or
rcl
pop
popa
sbb
push
add
jae
dec
fistp
xchg
dec
push
sahf
inc
lea
fsubr
mov
cmp
jb
fmul
mov
xor
clc
leave
test
jp
mov
aas
sub
push
sub
iret
mov
retf
cmps
mov
aam
xchg
jne
pusha
add
mov
in
fbld
les
inc
dec
imul
imul
fisttp
call
cli
lock
mov
shl
mov
retf
and
fdivr
xor
push
lods
imul
cmps
fild
push
call
cmp
scas
push
int3
inc
jbe
imul
(bad)
in
adc
cs
ror
jo
jns
sbb
mov
ins
add
inc
cld
add
pop
pop
mov
jno
xchg
mov
mov
dec
sub
cli
frstor
shl
rcl
lods
push
sti
add
sbb
pop
ror
pop
sbb
inc
push
iret
inc
mov
and
add
popf
jp
int3
idiv
cmp
cli
call
nop
cmps
test
(bad)
fst
mov
cmps
les
cmc
xor
and
mov
fmul
ror
imul
push
pop
stos
mov
push
in
sbb
push
je
pushf
dec
fs
push
push
mov
clc
cmp
jl
stos
imul
sbb
loopne
lods
ret
mov
bound
adc
out
clc
push
aad
jno
and
push
dec
shl
(bad)
sbb
or
or
jb
mov
rcl
xchg
xchg
aas
repnz
jmp
pop
jmp
dec
and
lock
pop
xchg
mov
sub
mov
pop
mov
iret
mov
inc
lods
and
aam
inc
dec
js
dec
call
jmp
popa
pop
adc
xchg
pop
adc
sbb
mov
dec
aam
pop
push
es
aad
xchg
lods
mov
cmp
shl
fidivr
and
ins
out
into
shl
xchg
aam
mov
add
cs
out
inc
dec
xchg
mov
out
popa
cmc
shl
sub
and
push
inc
cwde
cmp
enter
cmp
add
xchg
cmp
mov
int
ret
or
xor
jle
mov
retf
fwait
or
addr16
inc
jge
es
repnz
out
inc
and
and
sub
leave
mov
mov
mov
test
xchg
pop
jp
(bad)
scas
xlat
jb
adc
inc
sahf
shl
and
pop
mov
ret
rcl
movs
or
dec
div
enter
(bad)
aad
jl
mov
lahf
jmp
and
sbb
fdiv
jbe
int3
mov
leave
aad
or
ret
in
shl
mov
and
jp
mov
jnp
icebp
pop
and
loopne
cmp
xor
aam
push
sbb
sub
xor
mov
movs
int
push
pop
retf
dec
mov
hlt
mov
std
movs
mov
neg
cs
jecxz
xor
call
push
mov
cli
jge
iret
cmp
scas
adc
push
leave
jecxz
sbb
mov
cmp
inc
addr16
gs
add
int3
inc
dec
(bad)
test
ds
xchg
jmp
mov
(bad)
int
outs
pop
push
pop
hlt
clc
stc
lahf
icebp
sbb
imul
(bad)
bound
pop
push
in
pop
into
std
nop
push
cld
mov
mov
test
mov
ins
sbb
hlt
cld
cmp
shr
dec
retf
inc
jg
nop
mov
lods
jnp
sbb
or
loopne
push
or
stos
sbb
xor
or
inc
mov
leave
fnsave
scas
and
or
out
cmc
rcl
in
stos
xchg
jae
fld
or
sbb
shl
jno
mov
pop
xchg
enter
cmp
adc
jnp
mov
rcr
jbe
lahf
outs
adc
cmp
adc
movs
xor
mov
jbe
mov
add
inc
stos
loope
(bad)
(bad)
dec
stos
in
push
popf
(bad)
mov
inc
out
fwait
dec
(bad)
and
mov
lods
sbb
sahf
sbb
lock
pop
je
mov
imul
pop
pusha
fstp
fadd
cmp
outs
mov
add
mov
cs
mov
sub
es
in
or
das
sbb
mov
addr16
xchg
enter
mov
xchg
or
pop
cmp
(bad)
mov
ror
adc
dec
iret
aad
pop
cwde
jne
mov
jnp
dec
out
sbb
mov
or
mov
(bad)
mov
adc
(bad)
mov
dec
or
clc
or
dec
jge
adc
cmp
loope
sbb
pop
xchg
movs
rol
or
xor
add
lods
pop
adc
sub
mov
inc
sbb
cmp
sub
adc
les
jp
js
shl
fxch
and
cmc
call
fist
add
(bad)
push
dec
or
outs
pop
jo
cmps
sbb
xchg
inc
jo
scas
jp
mov
iret
fwait
mov
cmc
push
dec
stc
mov
xchg
dec
jmp
stos
pop
outs
or
int3
adc
xor
or
int
inc
xor
fild
lods
bound
sar
ins
pop
(bad)
jb
test
xor
out
int3
sub
(bad)
fimul
jne
mov
sar
in
cmps
push
rol
xchg
adc
push
dec
adc
stos
sbb
pop
pop
dec
call
pop
addr16
cmp
nop
iret
jle
adc
stc
idiv
mov
xor
(bad)
jle
outs
repnz
xchg
sbb
or
jl
mov
jle
lods
(bad)
jmp
ror
xlat
inc
sbb
or
lea
pop
nop
imul
cmp
ret
pop
in
cs
nop
adc
pop
push
xchg
pop
out
fwait
xchg
lods
push
jle
lods
sbb
sbb
ins
push
out
loop
and
push
and
mov
sbb
outs
push
jle
add
sub
ins
push
cmp
cmp
outs
pop
es
add
outs
sahf
in
sti
lods
out
out
pop
div
mov
lds
repz
xor
push
das
and
jge
sbb
jle
fld
push
mov
mov
call
pop
adc
out
out
pop
or
fnsave
mov
ror
test
xor
repnz
jae
inc
(bad)
je
into
mov
adc
add
lock
out
repz
sub
sbb
pop
mov
xchg
push
scas
sbb
push
pop
pop
test
pop
sub
sbb
mov
cmps
xor
jne
js
repz
mov
xor
mov
repnz
aad
adc
jnp
stc
dec
ds
xor
lock
call
push
dec
sub
call
fisttp
sub
in
jp
std
int3
es
or
cmp
and
jbe
dec
pop
std
cmp
pusha
cs
in
retf
sbb
lock
adc
mov
das
daa
sbb
push
pop
iret
arpl
mov
sub
pop
repnz
and
(bad)
out
push
fidivr
stc
mul
arpl
pop
(bad)
sbb
cmp
lds
xchg
mov
pop
dec
dec
lea
inc
mov
ficom
push
daa
jecxz
pop
cmp
jecxz
rcr
lock
xchg
sub
cld
pop
push
cmp
out
in
ret
nop
sbb
xlat
stos
fnsave
adc
pop
lock
addr16
push
push
jl
fwait
rol
mov
nop
ss
or
aas
pop
adc
mov
jno
daa
sub
add
mov
cs
popf
outs
(bad)
sbb
(bad)
rol
nop
mov
push
inc
and
rcr
adc
int
cmp
sbb
or
das
(bad)
xchg
es
mov
movs
adc
leave
or
cmp
ins
cmp
pminsw
lea
por
call
in
(bad)
push
jmp
out
es
and
scas
call
push
lock
add
mov
sub
inc
or
push
sbb
leave
cwde
inc
inc
push
out
cmp
mov
(bad)
xchg
xchg
rol
jbe
retf
out
jp
jg
and
outs
in
les
sbb
push
cli
fstp
cs
scas
xchg
cmp
and
add
xchg
iret
inc
jmp
mov
mov
ja
cmp
mov
xchg
cs
pop
mov
icebp
pop
sub
xchg
adc
xor
or
test
(bad)
js
rol
cmp
pop
imul
and
push
inc
(bad)
retf
and
sub
neg
pop
js
loope
jle
push
mov
add
xchg
mov
cmp
(bad)
mov
(bad)
mov
pop
pop
jle
movs
adc
inc
mov
and
test
mov
leave
cmp
mov
imul
stos
adc
fisubr
adc
inc
mov
ficomp
xchg
mov
popa
jg
inc
pop
in
pminsw
(bad)
mov
cmp
jecxz
call
pop
fcom
out
ret
sub
mov
sbb
push
test
xchg
in
mov
pop
mov
adc
in
in
mov
fidiv
inc
cmp
xchg
out
mov
frstor
mov
neg
js
mov
lods
mov
sbb
stos
iret
xor
cwde
adc
test
jnp
jl
lods
ret
adc
in
out
push
aaa
adc
dec
sbb
inc
and
inc
cmp
dec
pop
push
inc
and
(bad)
aaa
fisub
push
adc
dec
mov
pop
sub
loopne
mov
rcl
lods
or
push
loop
bound
aad
mov
pop
(bad)
jns
sub
dec
mov
xchg
aas
rol
inc
adc
adc
daa
pop
int3
(bad)
enter
adc
push
mov
ret
or
xor
mov
cmp
mov
add
and
ret
stc
into
fiadd
mov
sahf
mov
cmovo
popf
(bad)
out
int
(bad)
adc
push
mov
js
mov
loop
adc
icebp
jl
and
movs
push
out
repz
xor
add
daa
ins
(bad)
push
frstor
xor
or
ins
cmp
or
sbb
dec
jg
jb
jle
gs
repz
cmc
inc
aad
cdq
out
test
call
push
ret
ja
loope
mov
jmp
(bad)
ins
xchg
add
xchg
and
jmp
and
xor
test
bound
shl
mov
jecxz
pop
and
into
daa
jmp
mov
mov
xchg
movs
pop
bound
je
jb
cmc
rcr
sbb
iret
enter
pusha
mov
dec
mov
repz
pop
push
loope
into
and
(bad)
daa
hlt
mov
ins
nop
xchg
hlt
sbb
stc
inc
lods
xor
mov
sbb
pop
or
xchg
jg
scas
lahf
cld
pop
xor
popa
(bad)
test
xlat
es
jmp
test
in
stos
cmps
fisttp
sub
ret
stos
and
out
jne
imul
aad
iret
push
js
xchg
jg
mov
pusha
jo
loope
mov
sub
cmp
push
in
push
xchg
movs
xor
sub
sbb
imul
and
xor
(bad)
aam
call
mov
push
push
adc
inc
mov
ss
mov
pop
and
push
mov
outs
mov
dec
push
xchg
pusha
repz
(bad)
std
adc
sbb
addr16
in
xchg
cmps
xor
cmp
mov
and
mov
popf
and
mov
push
or
xchg
sub
cli
mov
sbb
pop
stos
sbb
cmps
js
rcl
sub
icebp
rcr
stc
push
adc
call
leave
icebp
inc
aaa
sbb
sub
fist
sti
pop
mov
add
pop
mov
dec
cmps
xor
cmps
mov
je
jbe
cmps
adc
ja
or
and
imul
xchg
or
retf
xchg
jbe
push
push
movs
jecxz
aad
jnp
sbb
xchg
ja
inc
jno
push
daa
aaa
hlt
push
mov
aad
jl
mov
push
mov
fcom
push
(bad)
div
dec
repz
scas
mov
xlat
mov
cmps
sbb
mov
cli
sbb
outs
xor
mov
movs
pop
or
push
rol
lea
iret
nop
pop
imul
repz
xchg
jl
lock
mov
call
jecxz
pop
dec
add
mov
cmp
and
popa
call
jae
dec
fdiv
jmp
mov
pop
scas
frstor
popa
cmp
imul
lahf
fwait
pop
and
fisttp
into
test
rol
jg
sub
pop
xchg
xchg
pop
aas
mov
sahf
lds
ret
or
movs
test
pop
cmps
pushf
ret
xor
jmp
xchg
jb
sbb
inc
mov
fcom
fiadd
cmps
pop
rcl
adc
xchg
xor
jle
cdq
lea
mov
sub
xchg
add
mov
nop
sub
mov
jle
aad
mov
mov
and
js
outs
xor
jp
imul
out
ficom
add
out
jge
or
and
imul
aam
xchg
lods
pop
push
pop
or
cmps
or
mov
test
call
jnp
or
xchg
pop
out
cmc
movs
stc
cmp
jle
(bad)
std
test
or
xchg
(bad)
fsubr
cmp
pop
mov
out
(bad)
mov
push
(bad)
or
jns
push
jl
jecxz
cs
or
rcr
mov
test
pushf
sub
dec
mov
out
cmp
ror
lods
mov
jo
(bad)
outs
mov
loop
arpl
fmul
push
adc
sbb
fxch
int3
(bad)
mov
mov
outs
pop
lods
sub
jae
ins
(bad)
and
inc
push
mov
popa
imul
jns
cmps
or
or
or
cld
icebp
out
xchg
adc
addr16
push
mov
das
push
push
movs
mov
inc
jbe
inc
mov
mov
xchg
lea
imul
fild
sbb
shl
retf
push
in
in
cld
mov
outs
push
cld
xor
lods
sti
jl
or
cmp
in
call
mov
pop
sub
jnp
add
mov
push
sub
sbb
sub
adc
pop
scas
jb
(bad)
jo
push
addr16
push
push
xor
test
xchg
dec
cmps
pop
cmp
or
sar
push
or
pop
fild
in
nop
repz
arpl
adc
(bad)
and
(bad)
out
mov
jnp
adc
push
mov
sti
add
ret
push
jns
inc
xchg
loopne
push
test
mov
repz
mov
pop
popa
call
xor
pop
les
pop
retf
push
mov
out
or
mov
outs
dec
lahf
gs
ins
leave
(bad)
and
xchg
sub
mov
add
jb
fdivr
in
inc
scas
jecxz
xor
aaa
sub
or
jl
out
inc
je
in
push
mov
jb
repnz
jb
push
cmp
es
fcmove
mov
dec
push
loopne
push
dec
lods
jge
xchg
xor
retf
cmp
ss
and
push
push
push
xor
rcr
shl
pop
ss
and
ins
mov
test
popa
sbb
mov
loope
xchg
js
pop
and
lea
sar
sub
cli
mov
mov
cdq
rcr
fsubr
push
sbb
inc
fcmovu
cmps
or
inc
hlt
or
xchg
vcvttpd2dq
jmp
mul
popf
stos
jbe
cdq
or
jp
adc
daa
pop
mov
je
push
retf
dec
adc
mov
adc
repnz
test
push
sbb
data16
fmul
gs
enter
scas
mov
dec
or
pop
out
or
push
dec
mov
and
xchg
pop
sbb
test
in
adc
cld
push
sahf
dec
cmp
mov
push
or
add
ret
dec
je
add
cmp
sub
jecxz
(bad)
popa
ja
sbb
cmp
push
inc
lods
cmps
mov
stos
ja
xchg
mov
cmps
rol
cs
aam
inc
dec
mov
call
sbb
mov
ret
dec
mov
push
adc
in
adc
push
xchg
mov
pop
outs
jl
mov
mov
and
imul
jl
(bad)
retf
add
ins
and
in
ficom
fs
jl
loopne
jno
pop
std
cmp
shl
cmps
(bad)
ret
daa
sub
ins
cmps
sbb
out
dec
enter
mov
test
mov
out
retf
shr
dec
cld
scas
jno
daa
sub
fisttp
in
js
push
push
adc
scas
push
in
clc
icebp
retf
pop
ins
push
and
pop
or
nop
mov
push
cmp
aad
dec
std
sar
mov
xchg
rcl
arpl
or
add
inc
push
dec
dec
mov
jnp
ror
xchg
mov
rol
jno
sub
std
mov
lea
inc
lods
jmp
adc
mov
daa
mov
adc
jp
and
in
lds
mov
pop
sbb
xchg
sar
and
push
scas
sbb
cmp
loope
add
shr
test
loope
jnp
xchg
inc
cmps
or
xlat
dec
in
gs
jmp
jns
fninit
or
popf
clc
and
add
push
xor
xchg
mov
mov
inc
adc
add
cmp
and
xchg
mov
sub
sub
xchg
or
mov
pop
repnz
cmps
or
xchg
pop
add
add
jp
and
rol
fistp
imul
sbb
fist
sub
xchg
imul
outs
push
cld
int3
(bad)
in
mov
dec
sbb
mov
arpl
imul
push
fisub
clc
mov
jne
mov
push
pop
(bad)
mov
adc
adc
sbb
popf
shl
ds
xlat
hlt
and
aam
outs
cwd
sbb
push
loope
stos
test
adc
jne
add
xor
xchg
or
adc
cmp
sub
sbb
or
xchg
pusha
mov
xor
popf
div
and
(bad)
lods
lds
scas
pop
jnp
cmp
into
popa
adc
mov
repz
test
ds
lods
dec
outs
xchg
inc
add
popf
and
jg
jne
jp
fidivr
(bad)
fadd
jns
pop
push
push
mov
inc
fs
cmc
push
push
add
push
and
dec
inc
mov
dec
sub
ret
xor
adc
xchg
(bad)
mov
mov
jmp
pop
jo
mov
mov
push
rcr
aas
adc
fst
sub
shl
in
xchg
sbb
(bad)
neg
pop
cmps
rcl
adc
cld
ret
add
and
jo
ror
addr16
mov
sbb
cmp
jbe
cmp
mov
jne
in
xor
es
(bad)
outs
mov
cdq
xchg
xor
xor
das
mov
mov
xor
fisub
mov
xor
push
sub
aam
outs
mov
les
retf
dec
inc
inc
sbb
leave
push
push
(bad)
fiadd
mov
sub
or
pop
mov
adc
sub
ror
sub
popf
push
ret
das
push
leave
sub
pop
mov
lahf
or
shl
das
ret
popf
adc
in
mov
push
aas
dec
test
mov
sbb
jmp
es
or
std
movs
sahf
add
daa
xor
pop
xchg
leave
ret
stc
sahf
icebp
stos
add
cmp
mov
ret
dec
(bad)
mov
sbb
mov
mov
cmps
mov
in
inc
jns
les
sub
sbb
fsubr
pop
cmc
cmp
mov
les
xchg
jmp
div
arpl
cmp
inc
cmp
push
or
adc
icebp
cdq
ja
mov
fadd
fwait
sbb
and
enter
movs
sub
push
lock
xchg
call
cmps
ja
ja
lock
aad
xchg
stos
(bad)
jmp
or
int
pslld
adc
mov
out
iret
idiv
mov
mov
add
dec
and
or
daa
cmp
mov
fisttp
inc
call
cmps
jbe
sbb
mov
mov
pop
sub
mov
push
or
test
cmps
imul
ins
scas
leave
sub
push
aas
out
or
pop
lea
jns
dec
xchg
adc
shl
xchg
and
(bad)
in
ds
jp
xchg
sbb
test
push
xchg
test
xchg
push
add
dec
mov
scas
xchg
sbb
or
inc
hlt
push
movs
jb
loop
nop
std
pusha
cmc
call
add
lea
bnd
(bad)
fisttp
push
pop
jne
stos
test
loopne
xchg
test
repnz
and
push
ja
xor
(bad)
ins
ds
jge
adc
jae
sub
adc
xlat
and
and
jg
fcmovu
mov
stc
test
popa
ficom
into
lock
and
sbb
enter
mov
not
mov
cmp
bound
lock
xchg
cs
shr
ret
add
mov
mov
mov
stos
lods
cmc
mov
sahf
aad
cs
sbb
out
mov
cmp
inc
adc
imul
loopne
mov
fistp
dec
jg
shr
movs
or
std
adc
and
push
outs
and
enter
xchg
pusha
mov
xrelease
mov
adc
(bad)
sahf
movs
js
into
xchg
sub
pop
and
and
neg
push
loope
test
rol
cmp
addr16
mov
and
aaa
sub
mov
dec
pop
test
or
iret
mov
cli
lea
bound
ins
les
stos
push
je
hlt
jne
test
adc
push
jmp
xor
xchg
(bad)
dec
cmp
fstp
or
aad
and
sar
sub
fnstenv
sub
dec
iret
sub
ror
jl
push
repz
lods
dec
inc
jnp
imul
push
mov
jge
movs
mov
movs
inc
mov
ror
cmc
lahf
sti
sbb
es
shr
xchg
fs
xchg
cmp
cmp
fistp
mov
cmp
vcvtsi2ss
ins
ja
scas
mov
ror
popf
(bad)
out
cmc
in
mov
into
call
mov
(bad)
adc
mov
dec
jb
inc
jmp
sbb
push
ret
sbb
jbe
sbb
aad
push
sub
push
add
das
and
sti
lea
out
mov
sbb
loop
clc
jae
retf
das
fldlg2
icebp
ins
int3
fcmovbe
inc
ret
test
call
scas
(bad)
icebp
enter
dec
mov
inc
xchg
pop
test
retf
clc
mul
fist
push
scas
jnp
dec
or
icebp
mov
repnz
leave
test
arpl
lea
or
jmp
fcom
dec
pop
out
shl
add
mov
sub
mov
or
gs
sbb
jle
or
pop
lods
mov
xchg
xchg
push
shr
test
add
mov
mov
and
retf
mov
add
cmp
rol
jmp
jl
lahf
nop
mov
mov
xor
dec
pop
cmps
imul
aaa
add
stc
cwde
and
push
(bad)
pop
into
cmp
(bad)
aas
jecxz
loopne
add
rol
loopne
les
or
adc
adc
out
es
xor
jge
jg
cmc
mov
ret
push
xor
aad
inc
dec
push
and
nop
mov
ds
and
inc
jne
dec
sbb
jecxz
cmps
arpl
xchg
mov
fcmovnb
mov
in
pop
sub
lods
stos
pop
mov
cmp
ss
mov
add
scas
push
mov
test
mov
jecxz
ss
inc
jb
sub
xchg
fidivr
cmp
mov
icebp
dec
pusha
or
sub
add
sub
outs
fidivr
jbe
mov
stc
push
mov
pop
aam
shl
out
leave
or
fnstenv
shl
ins
gs
(bad)
out
lock
cli
(bad)
popa
push
mov
and
sub
adc
xor
fisubr
out
test
sar
mov
fcmovnu
add
mov
push
inc
push
out
ret
inc
and
popa
push
fimul
stos
push
jne
in
cmp
test
xor
sub
ror
cmp
cmp
mov
dec
lds
pop
(bad)
iret
mov
jp
(bad)
sti
les
iret
inc
or
jo
mov
xor
pop
xor
pop
mov
xchg
out
dec
fwait
push
arpl
and
push
sub
daa
push
das
mov
aaa
pop
add
mov
btr
push
std
inc
out
js
test
and
jae
xchg
pop
aaa
std
pushf
jnp
inc
popa
sbb
sbb
in
ret
movs
leave
mov
add
and
xchg
sbb
jmp
and
push
push
jnp
jmp
or
cli
pushf
(bad)
sub
test
push
(bad)
scas
add
fdiv
mov
ret
and
mov
xor
jmp
add
mov
dec
fsubr
fwait
pop
retf
ret
pop
pop
sbb
mov
cmp
sbb
popf
fiadd
sub
xchg
cmp
daa
ins
call
dec
adc
and
xor
cld
jg
cwde
jl
inc
pushf
jmp
jmp
dec
cmp
mov
push
lahf
iret
fisubr
adc
inc
ss
pop
int3
jo
jbe
xchg
jge
imul
sub
mov
sub
hlt
rdtsc
cmp
(bad)
push
shr
xor
out
mov
jecxz
pop
jne
mov
lds
pop
xchg
(bad)
or
scas
fdivr
cmp
(bad)
sbb
es
cmp
or
xchg
mov
fidiv
stos
pop
aas
into
mov
sub
sbb
lea
inc
out
jno
(bad)
enter
aaa
mov
mov
xchg
push
gs
repnz
bnd
adc
test
lock
push
xor
stc
cmc
cmp
push
enter
in
lock
icebp
push
cmp
inc
test
add
adc
xor
mov
or
out
sahf
add
lods
mov
pusha
sbb
push
(bad)
sbb
sbb
or
test
jle
scas
jmp
fld
xor
mov
and
outs
sbb
jbe
fcomp
push
daa
sub
pop
xchg
daa
rcl
movs
in
jb
and
jp
daa
rcl
test
neg
jg
pop
jno
into
outs
or
pop
push
inc
mov
in
and
out
(bad)
cld
pop
sub
out
xor
push
es
arpl
je
aad
dec
and
aam
cmp
aad
int3
shl
ins
dec
and
out
mov
xor
sub
dec
lock
loope
jbe
mov
ins
ret
(bad)
mov
sbb
pop
lock
add
sub
jo
add
aad
mov
in
test
pop
add
mov
pop
ins
call
cmps
fldcw
mov
iret
cmp
iret
rol
in
ret
xor
les
icebp
mov
ja
xlat
inc
test
loope
xor
dec
in
jbe
retf
arpl
test
inc
dec
inc
gs
iret
or
sbb
popf
fcom
out
jne
cmp
lods
repz
out
call
or
inc
fdiv
mov
xor
ss
xchg
fidivr
popf
cmp
jle
fidivr
jb
ret
fidivr
nop
paddsw
cmp
jge
sbb
xchg
sbb
pop
mov
add
and
and
or
retf
inc
loop
(bad)
mov
dec
mov
inc
arpl
(bad)
fadd
cwde
lock
mov
int3
repnz
push
xchg
call
mov
sub
mov
pushf
adc
(bad)
sbb
or
into
jmp
rcl
and
or
mov
sti
add
cmp
adc
rcl
or
rcr
aaa
pop
in
xchg
sub
adc
std
scas
xchg
cmps
lods
(bad)
fist
mov
out
ffreep
jae
cli
pxor
jge
in
mov
pushf
loope
int
xor
push
out
jecxz
inc
add
xchg
jns
scas
loopne
adc
add
aas
push
or
or
in
cmps
outs
hlt
icebp
push
(bad)
sbb
(bad)
ins
cmp
or
out
(bad)
hlt
arpl
cmc
jg
mov
es
(bad)
(bad)
call
in
je
ins
sub
jns
test
in
jmp
xchg
sti
add
push
fidiv
repz
shl
movs
sbb
repz
(bad)
push
sub
stc
and
push
jge
jl
or
call
mov
clts
sbb
out
jmp
test
inc
mov
cmps
and
in
mov
or
sahf
sbb
rol
scas
bound
push
mov
xchg
jmp
mov
mov
scas
shr
sub
imul
bound
aaa
fs
cdq
hlt
xor
sub
or
cmps
mov
fst
leave
popa
gs
inc
into
pop
adc
mov
push
push
xchg
dec
add
retf
adc
push
das
fisub
push
(bad)
shr
or
inc
sbb
(bad)
cld
(bad)
outs
cwde
sar
inc
loop
inc
and
js
adc
hlt
arpl
sbb
aam
adc
aad
ret
popa
or
pushf
out
ds
test
mov
rcl
outs
inc
mov
xlat
popf
loopne
inc
daa
pop
mov
push
mov
clc
leave
xor
and
int3
mov
jle
outs
inc
mov
stos
and
dec
cli
add
and
pop
gs
xchg
mov
mov
inc
mov
mov
jmp
lahf
shl
test
lods
xchg
(bad)
xor
push
retf
les
ss
inc
mov
pop
sub
sar
(bad)
adc
sbb
hlt
lods
stc
aaa
add
test
loopne
pop
dec
out
(bad)
sbb
xor
out
in
test
icebp
jmp
nop
(bad)
aas
shr
stos
xchg
outs
jb
pop
jno
inc
mov
cli
sbb
sub
or
int
jbe
les
or
inc
cmp
retf
mov
cmc
xor
adc
adc
repnz
mov
and
cmp
mov
ror
out
dec
cwde
lods
fcompp
in
js
addr16
pop
hlt
mov
enter
cmc
pop
and
add
scas
(bad)
dec
jo
xchg
enter
xchg
mov
jmp
iret
(bad)
adc
mov
test
xchg
jno
les
jnp
dec
lahf
ja
(bad)
jne
imul
jne
add
jb
repnz
mov
mov
pop
test
sbb
mov
xor
mov
out
pop
mov
pop
paddb
imul
mov
shl
xor
xchg
mov
jecxz
cmp
movs
sti
dec
pop
sub
fnop
pop
push
push
cmps
mov
sar
scas
sbb
outs
cmp
xchg
adc
les
and
pop
sbb
jns
xor
xor
mov
js
lds
inc
add
ds
cmp
xchg
pop
daa
(bad)
lahf
ins
mov
cmps
xchg
mov
inc
call
retf
xor
(bad)
cmps
adc
cld
mov
xlat
inc
sbb
push
sbb
mov
imul
fnclex
ss
aaa
data16
and
sbb
sbb
ror
xlat
xor
(bad)
or
call
stos
push
pop
jnp
sbb
repnz
(bad)
push
jnp
mov
and
dec
xchg
shl
or
pop
push
xor
dec
pop
dec
arpl
adc
pusha
push
ss
or
pop
pushf
xchg
xchg
cmp
test
jmp
push
loope
jbe
fldcw
inc
mov
das
mov
xor
cmp
sub
mov
jecxz
mov
rcr
push
loop
in
and
fld
js
cmp
retf
and
rcl
push
arpl
leave
ficomp
xor
pop
mov
mov
xor
neg
bound
xchg
mov
mov
call
jae
das
and
(bad)
xlat
imul
int3
xor
out
jge
adc
sar
mov
lock
imul
out
cmps
push
rcr
out
movzx
rol
clc
cmp
mov
and
cwde
and
or
outs
cmp
ja
ret
inc
push
jg
popf
ficom
or
inc
xchg
call
fincstp
xor
(bad)
push
adc
data16
loopne
jns
push
(bad)
js
stos
and
pop
int
dec
jne
test
mov
dec
mov
sar
ror
outs
or
push
lods
(bad)
repz
shl
pop
mov
data16
stos
test
adc
fs
retf
cs
pop
iret
fnstcw
or
outs
dec
cdq
inc
dec
sti
and
pop
ret
mov
(bad)
dec
gs
xchg
ret
scas
mov
fstp
je
mov
jns
lea
pop
std
ss
xor
das
add
mov
(bad)
movs
test
xchg
xlat
add
adc
ror
cmp
fnstenv
mov
cwde
jae
and
sbb
pop
push
in
ror
in
and
fld
lahf
adc
loop
inc
test
jno
imul
test
mov
aas
dec
push
mov
xchg
aas
mov
dec
xchg
or
inc
in
mov
inc
jmp
xor
aas
and
jecxz
es
test
hlt
cdq
dec
jno
xor
int3
jl
ficomp
lds
xchg
jge
push
std
xor
push
das
mov
out
push
ror
ret
or
xchg
push
jmp
aad
fwait
icebp
mov
mov
add
xchg
add
xchg
repnz
dec
loope
sbb
pop
mov
jo
retf
mov
mov
and
or
pop
mov
mov
nop
sbb
pop
sahf
rcr
xchg
mov
inc
jl
jl
lsl
lahf
bound
jo
push
(bad)
repnz
xchg
mov
es
mov
and
pop
imul
aaa
push
mov
ins
dec
popf
pop
(bad)
add
lods
add
loope
xor
in
icebp
and
fs
fcomp
sbb
sbb
in
outs
adc
push
xchg
out
pop
jmp
jl
fsub
mov
ins
sbb
outs
dec
mov
repz
sbb
add
int
dec
jmp
sbb
jle
dec
add
shr
xor
call
mov
out
and
fstp
into
inc
cwde
push
add
jle
pop
sbb
adc
movs
add
shr
sbb
pop
ret
test
je
add
mov
clc
mul
inc
cmovne
movs
pop
mov
mov
test
test
retf
mov
mov
xchg
cmp
push
sbb
dec
data16
mov
fidiv
add
test
loopne
mov
jmp
(bad)
jno
mov
push
mov
iret
(bad)
jmp
(bad)
pushf
ja
push
mov
sbb
adc
arpl
ds
push
pop
call
test
and
adc
lds
sti
mov
arpl
mov
xor
ja
push
jae
adc
ret
jl
lock
mov
mov
xlat
loop
(bad)
xchg
arpl
mov
les
call
nop
jnp
fisubr
mov
in
vmwrite
in
mov
fstp
add
adc
mov
dec
sub
frstor
aas
jbe
jmp
jl
ret
push
cmp
inc
or
inc
ins
cmps
lods
push
xchg
les
(bad)
mov
ror
sub
(bad)
mov
and
dec
out
ins
jg
lds
sbb
sbb
iret
mov
(bad)
sbb
or
ds
dec
repnz
mov
jg
mov
cmp
lods
xchg
pop
mov
out
int
add
push
ret
repz
imul
and
sti
jnp
push
loope
pop
cdq
mov
in
inc
ja
sbb
stc
fimul
and
repz
cmp
pop
push
cmp
clc
mov
jns
xchg
pop
xor
sub
mov
sbb
pop
ins
pop
cdq
jbe
shl
jbe
leave
or
jnp
and
ficomp
ficomp
stos
fld
cmc
movs
movs
push
inc
fs
stos
dec
inc
je
movzx
add
outs
not
mov
pop
pop
dec
fidiv
aas
mov
fstp
pop
xor
xchg
fidiv
ror
aad
dec
cmp
mov
sub
(bad)
push
and
mov
lahf
xchg
mov
(bad)
sahf
mov
imul
inc
in
fs
and
xlat
sub
jp
mov
xor
xor
mov
leave
int
pusha
sbb
imul
cmp
jae
iret
ins
and
sub
bound
bound
xchg
popf
push
dec
inc
cld
test
das
fld
(bad)
aam
adc
xchg
nop
jo
sbb
sub
loope
call
add
retf
and
test
lods
cs
mov
push
dec
add
jns
pop
leave
sub
inc
cmp
das
fsubr
add
in
fadd
les
xor
enter
sub
mov
imul
push
fild
mov
mov
inc
ror
push
stos
push
out
dec
ficom
jmp
sub
ja
push
out
jbe
xchg
les
push
repz
add
loopne
push
ret
dec
js
ja
jb
inc
xor
pop
or
cmp
push
mov
test
mov
mov
jge
loop
and
cmp
jmp
hlt
loope
popf
fimul
into
push
mov
int3
out
movs
cmc
jmp
ret
push
cld
shl
enter
jge
call
adc
push
cmp
push
cmp
pop
pmullw
into
in
dec
inc
add
dec
pushf
inc
data16
jg
pop
les
repz
cmp
dec
pop
mov
mov
retf
movs
fs
and
xor
or
sar
rcr
sub
mov
mov
in
xchg
mov
lds
xchg
outs
(bad)
test
pop
jne
outs
jb
xlat
or
jne
cld
inc
scas
cli
jb
popf
scas
out
dec
call
rcr
ret
push
les
rcr
xchg
clc
clc
imul
aaa
cmps
dec
int3
shl
inc
push
aam
pop
(bad)
cld
in
js
es
jmpw
into
scas
aam
pop
lds
cmp
in
and
sub
sbb
scas
lock
and
hlt
and
shr
or
dec
adc
cld
xor
dec
div
or
outs
icebp
std
push
daa
nop
out
and
sub
cmp
xchg
call
int
xor
lock
call
std
jnp
mov
outs
popf
and
stc
jle
dec
push
daa
ror
jmp
std
jnp
loop
mov
(bad)
mov
push
or
and
or
push
popa
push
jne
xchg
cmp
psrld
mov
sub
movs
ja
sbb
adc
out
mov
js
or
push
cdq
repnz
mov
(bad)
adc
lock
mov
int3
mov
adc
imul
sub
xor
sbb
iretw
xlat
packsswb
pop
scas
iret
repnz
fmul
push
retf
sbb
jl
bound
adc
dec
sbb
ror
push
dec
jnp
movs
ja
test
pop
fwait
mov
inc
enter
push
adc
loope
add
add
rol
sbb
sub
cld
adc
push
pop
pop
inc
out
fdiv
fldcw
add
and
(bad)
sub
cmp
jge
mov
test
lods
push
fwait
and
(bad)
jecxz
mov
les
xor
lahf
pop
lock
xchg
add
cdq
pop
cmp
jns
pusha
jbe
add
xlat
daa
xor
fldcw
test
cmps
outs
daa
ficom
inc
xlat
in
in
dec
(bad)
cs
call
test
repnz
add
xor
cld
mov
and
rol
ret
popf
lods
(bad)
imul
(bad)
sbb
xchg
leave
inc
cmp
arpl
dec
lods
ret
movs
mov
inc
push
sbb
scas
mov
mov
out
ret
or
adc
in
(bad)
mov
mov
and
jg
add
xchg
and
sbb
inc
call
aad
lods
out
sbb
ror
js
xchg
test
retf
xor
push
js
adc
loop
mov
cmp
mov
cmp
sbb
mov
jb
inc
call
push
aaa
rol
mov
je
pop
mov
mov
xor
xchg
cs
sbb
cmp
pop
add
sub
xor
add
clc
scas
xchg
je
sbb
bnd
icebp
sub
stos
stos
mov
nop
stos
test
repnz
mov
loop
rol
add
daa
adc
outs
mov
sbb
mov
test
sar
sbb
adc
rcl
mov
jg
out
cmp
jnp
or
jge
in
out
scas
in
and
xchg
xchg
rcl
loopne
mov
jmp
cmp
mov
or
jo
sbb
int3
cld
sbb
xchg
push
jg
repnz
inc
in
or
repz
pushf
stos
add
sub
out
and
stos
mov
sbb
sbb
dec
int
xchg
pop
push
inc
mov
inc
pop
cmp
jo
fcmovnbe
jnp
xchg
sub
xor
xor
pop
in
icebp
inc
ret
pop
sar
inc
std
push
fadd
pop
bound
std
xchg
sar
call
jmp
ja
pop
sbb
das
mov
or
ins
ds
test
or
cmps
icebp
jns
test
pop
add
jbe
je
push
(bad)
jo
ss
psrld
push
xor
loop
or
mov
imul
hlt
adc
xor
push
inc
stc
iret
psllq
inc
jns
xchg
xor
mov
or
push
push
loopne
neg
int3
jne
cmps
(bad)
idiv
imul
push
dec
adc
add
lods
cmp
cmp
jl
pop
lock
das
loope
fiadd
mov
pop
syscall
(bad)
jno
mov
bound
fwait
scas
enter
js
fiadd
fld
push
ret
in
icebp
mov
cmps
fild
lea
xor
fwait
push
jmp
outs
ret
mov
xchg
dec
jp
mov
xlat
add
jmp
mov
cmps
jo
xlat
cmc
rcr
cmps
sbb
push
(bad)
sub
fs
rcl
ret
mov
xor
jo
jge
sbb
xor
or
adc
and
add
and
xor
xchg
xlat
sub
pop
push
xlat
xor
push
pusha
retf
(bad)
mov
out
cmp
fisub
bound
mov
mov
pop
stos
repnz
jno
mov
out
retf
push
inc
sub
(bad)
jnp
inc
add
mov
adc
rep
(bad)
jge
es
and
imul
mov
and
loopne
cld
sbb
or
adc
arpl
pop
aam
mov
stos
and
jle
push
pop
sbb
and
xchg
mov
sub
popf
lds
add
sar
ins
(bad)
shl
test
add
jmp
push
out
mov
fld
xor
pop
ror
mov
int3
add
jp
call
stc
lock
cmp
movs
das
jns
cmps
imul
sbb
lea
ficomp
xor
idiv
movs
test
mul
jno
and
fldcw
loope
adc
or
mov
mov
pushf
or
or
scas
and
scas
in
push
movs
push
sub
sub
cld
out
js
mov
fbld
add
cmp
jno
xor
pop
stc
inc
pop
push
fwait
mov
sub
cld
je
mov
outs
pushf
cli
sbb
jb
scas
xchg
jmp
cmp
ja
into
fmul
nop
xchg
mov
bound
lds
test
dec
test
inc
cmp
pop
pop
mov
push
(bad)
aaa
sbb
call
cdq
sbb
cmp
js
(bad)
aam
jg
addr16
inc
and
(bad)
mov
js
sub
fisttp
icebp
loopne
inc
mov
shr
add
cli
repnz
pop
or
pop
xchg
jl
and
hlt
inc
push
and
stc
mov
mov
push
mov
adc
pop
push
jecxz
or
js
dec
jle
push
inc
lock
lock
pop
sahf
push
icebp
lods
test
push
inc
test
nop
cmp
and
cmp
adc
aad
ror
(bad)
je
push
fld
mov
cld
lea
jp
cdq
sbb
push
ror
xchg
pop
sub
sbb
loop
xchg
das
xor
push
xchg
xchg
jmp
xor
rcr
cwde
add
sar
jmp
jne
je
mov
and
and
(bad)
arpl
adc
cmps
mov
gs
xchg
in
jb
hlt
aad
ds
mov
push
pop
lock
(bad)
addr16
pop
pusha
mov
push
sbb
sub
mov
push
aas
imul
js
sbb
adc
mov
les
and
cmp
ror
out
sub
adc
rcr
lods
push
out
test
jl
ins
loopne
hlt
xchg
and
ss
xchg
je
aaa
pop
out
sbb
dec
mov
arpl
xor
ret
xchg
mov
fwait
aas
cdq
dec
(bad)
cmps
xlat
int
adc
pusha
outs
leave
test
clc
mov
fstp
inc
popa
push
enter
and
xchg
mov
and
ins
mov
mov
xchg
jle
pop
push
jg
jl
int3
jbe
adc
stc
mov
cmp
add
jmp
xchg
imul
dec
sub
inc
adc
jg
push
add
scas
mov
(bad)
(bad)
icebp
ficomp
enter
ins
movs
pop
aam
jecxz
inc
(bad)
mov
pop
stos
sub
in
push
mov
repnz
mul
fdiv
stos
lea
nop
sub
mov
mov
pop
pop
xchg
rcr
or
jecxz
(bad)
jp
push
ins
sbb
mov
outs
sub
scas
test
and
pop
fisub
and
inc
sub
sbb
idiv
loop
inc
arpl
xchg
int
in
es
sub
pop
outs
dec
fiadd
push
mov
pop
mov
pop
retf
daa
sub
arpl
jl
fisttp
mov
fs
add
mov
test
or
xor
inc
retf
fstp
xchg
das
or
sub
shr
push
in
stos
sub
dec
dec
movs
and
inc
inc
push
pop
mov
int
mov
aad
popf
test
ds
pop
push
and
mov
sub
push
sub
fdiv
inc
jg
clc
imul
shl
add
pushf
out
je
addr16
adc
scas
(bad)
ins
lods
push
and
ret
adc
mov
sahf
mov
clc
and
xor
test
loop
add
in
xchg
fidivr
bound
mul
jbe
repnz
dec
retf
ins
bound
test
pop
inc
aas
pushf
push
daa
push
scas
push
xchg
mov
inc
sub
in
bound
stos
mov
xor
xchg
lahf
inc
test
jge
inc
repnz
in
call
sbb
sub
push
ins
inc
in
sbb
nop
imul
pop
pop
xor
push
pushf
push
(bad)
pop
xor
jmp
(bad)
push
out
jne
nop
cmp
inc
addr16
pop
out
fild
push
(bad)
ret
not
cli
mov
xor
adc
pop
or
(bad)
fisubr
(bad)
aas
pop
push
or
sbb
ret
inc
mov
dec
adc
imul
movs
jb
pop
clc
push
or
mov
ins
les
pop
hlt
add
or
or
call
adc
rcl
les
jo
cmps
xchg
add
clc
fist
sbb
sbb
mov
pop
adc
hlt
xor
mov
popf
pop
cmp
(bad)
loop
cld
ss
add
and
lahf
push
pushf
push
sub
push
push
xor
dec
sub
jbe
mov
xor
pop
pop
stc
jg
mov
mov
push
push
fst
retf
mov
add
jne
xchg
fidivr
outs
inc
xchg
dec
in
std
xchg
test
jmp
xor
and
ja
(bad)
hlt
(bad)
jno
and
jnp
ret
popf
call
mov
inc
jmp
mov
mov
out
pop
stos
(bad)
out
pushf
sbb
stos
and
icebp
sbb
inc
scas
stc
cmp
xchg
test
sar
xchg
pop
pushf
sbb
add
test
mov
jle
xchg
sub
add
je
idiv
sub
xchg
ss
repnz
ja
or
movs
scas
nop
mov
movs
or
stc
xor
add
(bad)
loop
loope
push
rcr
jns
test
in
jmp
sbb
mov
or
retf
fisubr
sub
dec
sbb
push
xchg
push
sbb
sub
pop
jo
ins
or
jmp
pop
push
rcl
iret
pop
mov
pusha
push
call
loopne
test
fld
xlat
xor
les
fs
adc
jno
dec
sub
xchg
jo
pop
clc
fwait
ja
mov
adc
paddsw
(bad)
lds
inc
adc
jmp
or
mov
mov
cmps
pusha
loope
sbb
mov
mov
mov
jnp
adc
cmp
jns
mov
jmp
imul
push
dec
or
sub
lock
mov
jo
inc
xchg
mov
xchg
mov
xor
mov
xor
stos
enter
in
push
push
sbb
xlat
rcr
fmul
movs
hlt
fwait
jb
test
stos
xchg
mov
mov
aaa
mov
lods
imul
aas
push
fisttp
xchg
mov
sti
fcom
dec
es
pop
mov
cmp
pop
and
loopne
sahf
mov
adc
cwde
sahf
sub
test
inc
mov
ins
aam
pusha
(bad)
hlt
pop
loop
or
push
jmp
or
jo
pop
jo
and
xchg
loope
push
mov
push
aas
add
movs
fnstcw
loope
mov
jg
inc
cmp
stos
cmp
jnp
mov
dec
sub
inc
fstp
lahf
push
mov
leave
aad
push
pop
fld
out
xor
hlt
js
mov
sbb
leave
dec
adc
adc
aam
push
das
or
xor
mov
jb
xchg
arpl
add
push
(bad)
cdq
gs
je
rcl
loopne
(bad)
jmp
in
sbb
enter
out
mov
mov
pop
sbb
or
(bad)
clc
test
pop
sub
dec
out
jg
jo
(bad)
scas
test
pop
dec
jns
sti
adc
sbb
push
enter
loope
xchg
cmps
push
xor
daa
adc
push
cmp
xor
sbb
mov
stc
pop
mov
cmp
into
push
push
xchg
pusha
cmp
(bad)
(bad)
in
sub
jp
push
mov
or
bnd
xor
xchg
cmps
pop
pop
pop
mov
pusha
add
dec
aas
into
pop
daa
std
jae
mov
(bad)
jnp
or
fs
or
rcl
ins
pmaddwd
lods
out
push
icebp
inc
and
pop
(bad)
adc
mov
xor
cmp
(bad)
jge
out
ss
arpl
mov
and
out
sti
xchg
xchg
push
call
retf
int3
xor
aad
ret
cwde
rol
push
repz
mov
or
jmp
cmp
cli
fcomp
push
and
push
fmulp
lea
jg
fst
div
adc
or
fdiv
rol
push
arpl
inc
lea
(bad)
dec
inc
popa
into
in
ins
sbb
jne
shl
popf
mov
push
inc
imul
repz
adc
inc
fcmovne
pop
sub
test
imul
fnsave
ss
cmps
mov
and
retf
fidivr
xchg
mov
cmp
leave
push
mov
xor
ret
icebp
out
sbb
push
push
mov
dec
xchg
ret
mov
push
into
arpl
adc
cmp
sbb
sbb
pop
lock
add
xor
mov
pop
call
fwait
das
mov
(bad)
enter
jno
imul
mov
pop
aaa
xchg
call
cmps
sub
cmc
dec
std
ds
add
cmps
mov
mov
mov
push
adc
mov
out
idiv
cmp
push
ins
retf
pop
dec
pop
and
lea
ror
das
xchg
in
mov
in
jno
or
push
xchg
add
dec
int3
repnz
sub
xor
inc
dec
dec
mov
pop
int3
add
adc
jmp
cdq
pushf
mov
mov
shr
pop
add
scas
imul
inc
push
fwait
sbb
and
les
xchg
push
(bad)
push
out
or
call
fdiv
dec
inc
jmp
jno
(bad)
inc
push
and
sub
sub
rcl
mov
in
cs
cdq
push
clc
xor
push
loope
rol
cmp
and
push
sub
fsubr
add
mov
(bad)
xlat
dec
ret
push
into
sub
cmp
and
in
je
scas
fadd
sbb
bound
sub
sub
jne
in
pop
icebp
(bad)
retf
cld
ror
fs
jge
sbb
(bad)
xlat
out
adc
push
dec
or
and
mov
fldcw
jns
push
daa
adc
imul
outs
mov
and
jmp
sub
stos
in
lock
mul
dec
adc
test
dec
loope
adc
sbb
ja
adc
dec
call
ss
loopne
ret
mov
cli
retf
pusha
ss
test
add
jo
popa
jae
loop
fidiv
add
xchg
mov
call
jge
rcl
fcom
adc
mov
sub
mov
sub
xchg
cmc
add
test
into
(bad)
outs
test
int
ins
mov
sub
aad
cmps
stc
mov
cmps
outs
outs
mov
xchg
ja
sub
pop
dec
aam
jg
jbe
mov
inc
ret
push
or
ins
(bad)
lds
in
sub
push
addr16
mov
dec
lea
and
xchg
or
jl
add
and
call
push
sbb
pop
and
dec
int3
cmp
popf
cmp
mov
lds
(bad)
fstp
bound
pusha
sbb
das
cmp
pop
pop
das
adc
outs
xor
mov
jne
adc
fs
adc
mov
mov
inc
xadd
xchg
xor
fstp
jmp
cmp
cmp
cmc
adc
mov
add
adc
sub
inc
fs
popf
mov
jne
jbe
xchg
iret
jbe
retf
imul
dec
(bad)
(bad)
add
push
pushf
push
push
in
sbb
fisttp
add
in
(bad)
sbb
js
xchg
and
int3
aad
xor
out
fldz
hlt
out
(bad)
scas
pop
stc
push
inc
retf
aad
pop
cmp
bound
jmp
jg
dec
ss
jae
cmps
mov
pusha
mov
and
mov
add
pop
cmp
cmp
arpl
jmp
and
cmp
daa
xchg
inc
fsub
cmp
sub
cmp
mov
call
ret
lahf
xchg
repnz
mov
pop
jmp
repnz
pop
movs
or
jecxz
xor
mov
fimul
mov
mov
mov
mov
fsubr
and
mov
pop
into
lahf
pop
pop
les
callw
sbb
pop
and
sqrtps
out
call
retf
xchg
lods
and
fmul
sbb
clc
push
pushf
inc
push
xchg
outs
dec
popa
retf
popa
mov
pop
pop
cmp
sbb
and
cs
stos
cwde
mov
inc
int
xchg
jnp
pop
xchg
fsubr
sub
inc
ins
fild
fisttp
imul
scas
mov
fst
leave
mov
pop
dec
mul
mov
test
xchg
or
lods
retf
enter
out
xchg
cmp
mov
jns
pop
or
fmul
xor
outs
inc
int
data16
lea
sbb
idiv
sbb
fucom
mov
test
cmc
jbe
iret
pop
add
aad
pop
inc
push
pop
jae
outs
xor
push
pop
xchg
repnz
mov
lock
fs
inc
sub
(bad)
ret
and
or
outs
inc
retf
cmc
sub
dec
mov
stc
test
gs
in
inc
pop
imul
mov
sub
mov
jmp
aas
sub
xor
jp
xor
cli
in
leave
push
(bad)
add
ins
xchg
sub
jb
aad
cld
and
xor
idiv
je
xchg
outs
cli
push
aas
loop
push
call
jb
inc
mov
fsubr
jge
movs
push
js
repz
outs
xlat
pop
rcr
loop
out
ror
popa
inc
sub
jnp
test
pop
sub
and
and
dec
jmp
jmp
test
or
sub
or
inc
mov
xor
rcl
push
pop
jnp
fisubr
mov
pop
movs
mov
shl
push
jmp
adc
dec
es
stc
stos
sbb
adc
sub
fistp
mov
stos
popf
xchg
jecxz
xor
pop
adc
pop
int3
lods
ja
adc
sbb
add
sti
sub
pop
arpl
dec
icebp
sub
(bad)
cmc
scas
adc
call
pop
inc
test
leave
inc
xor
cld
add
and
jne
fst
jg
ja
jbe
jmp
mov
xchg
ds
dec
lahf
jb
push
imul
inc
or
aad
and
and
mov
outs
gs
pusha
mov
repnz
xchg
pop
scas
mov
push
sar
inc
fldcw
popa
test
ins
pusha
sub
cdq
sub
cmp
add
pop
cs
shr
int
adc
into
es
adc
jg
pop
push
clc
popa
cwde
loope
xchg
dec
sti
fwait
xchg
mov
push
ins
mov
in
fwait
push
iret
test
xor
iret
jae
fsubr
dec
hlt
hlt
sbb
mov
test
rcr
rol
and
shr
cmp
mov
xchg
sti
inc
imul
stos
or
stc
dec
pop
out
(bad)
std
out
loopne
dec
repz
jmp
outs
pop
mov
repnz
mov
inc
dec
cwde
jne
inc
pop
rol
std
push
xchg
mov
fs
(bad)
shl
sbb
xchg
out
pop
add
gs
push
pop
lahf
dec
loop
lahf
aam
jno
add
add
xor
xchg
jnp
in
aam
lahf
push
jecxz
sub
and
lods
jo
bound
ret
push
outs
loop
mov
sahf
dec
jae
or
ret
dec
sbb
jge
mov
loope
push
repz
movs
jmp
or
gs
test
adc
test
jne
jae
test
dec
sbb
xchg
cmc
cmp
pushf
push
hlt
xor
adc
cmps
sub
(bad)
jns
sar
mov
xlat
cmp
jae
xchg
pop
aas
add
adc
mov
or
enter
add
xor
popf
test
jmp
in
out
rcr
inc
ret
int3
or
xor
sbb
sbb
mov
jp
inc
or
sub
xor
xor
mov
push
popf
ret
xlat
popa
mov
fidivr
xrelease
mov
ret
hlt
cld
push
jl
jg
mov
jbe
or
fistp
movq
jge
mov
fmul
ss
int3
cmp
(bad)
imul
jnp
mov
dec
xchg
jae
push
ror
cwde
mov
pop
test
mov
mov
cmp
mov
push
js
ja
addr16
inc
sub
add
test
outs
ds
mov
xchg
ss
dec
fisub
cmp
dec
and
inc
mov
les
jecxz
sbb
or
and
shr
inc
xchg
or
xchg
dec
xchg
jo
xor
call
popf
(bad)
pop
xchg
adc
fwait
push
jbe
(bad)
stc
add
push
test
adc
arpl
jno
inc
aaa
inc
dec
pop
sub
jae
mov
ins
mov
in
pop
sbb
outs
sbb
ror
jno
mov
push
rcr
sbb
(bad)
jno
pushf
xchg
xchg
sbb
dec
push
jge
jecxz
mov
jo
loopne
mov
es
outs
sbb
loopne
arpl
sub
ds
push
mov
call
pop
mul
mov
jo
mov
ja
hlt
ja
vpcmpeqd
xchg
sub
out
xor
lahf
mov
push
adc
ss
jno
in
ret
pushf
jle
jmp
fld
xchg
jmp
cmps
scas
or
cli
add
mov
cmp
adc
out
inc
mov
repnz
cmp
pop
int
jecxz
adc
cmp
xchg
mov
mov
xchg
aam
add
aaa
cs
and
int
mov
aas
mov
fcmovne
cmc
stc
sub
gs
push
push
out
movs
mov
jbe
ret
in
pop
and
push
rcl
cld
mov
jo
hlt
push
mov
push
fsub
aaa
jnp
mov
shl
pop
fild
jo
pop
xchg
dec
rcl
out
mov
(bad)
(bad)
in
jnp
push
fwait
stos
dec
jo
repnz
adc
loopne
or
call
js
mov
fidiv
iret
in
dec
movs
pop
push
mov
jo
scas
cmps
mov
fadd
push
jp
push
nop
mov
das
imul
add
and
sub
data16
(bad)
sahf
int3
aas
or
jge
lea
mov
inc
push
ret
mov
inc
loopne
sbb
nop
xchg
lods
lock
pop
and
adc
lock
popa
push
xchg
test
jne
cmp
popf
xor
push
fwait
mov
mov
xor
pop
lods
mov
sub
repz
pop
adc
adc
test
or
imul
lahf
scas
pop
sbb
jecxz
add
dec
jecxz
sbb
dec
loop
out
cmp
ja
cld
loope
scas
fsubr
push
jne
or
jmp
mov
fucomp
pop
iret
test
rcr
(bad)
add
fisttp
sub
scas
loop
push
dec
mov
loopne
pop
fisttp
out
pop
push
mov
mov
xlat
loopne
cmps
rol
pop
(bad)
sahf
lock
push
in
outs
dec
adc
(bad)
push
dec
int3
or
loop
jecxz
jmp
out
cmp
jno
js
rcl
les
xchg
aas
out
sub
popa
or
ret
jmp
add
jp
retf
outs
lods
pop
ret
mov
sbb
movs
rol
mov
jo
cld
mov
and
adc
mov
mov
(bad)
fdivr
add
xor
(bad)
out
adc
das
scas
repz
mov
out
test
ficom
inc
int
retf
mul
cmp
mov
pop
retf
mov
pop
or
cmp
int3
(bad)
adc
not
mov
test
call
pushf
je
inc
loopne
arpl
pusha
movs
dec
sub
push
les
inc
xchg
fs
jne
call
sub
push
mov
xor
call
aad
cmp
and
inc
repnz
gs
loope
in
int
movs
cmp
fild
cmps
mov
mov
test
dec
je
fsub
push
push
jb
push
sahf
ficomp
add
(bad)
in
xchg
nop
xchg
sar
leave
hlt
sti
mov
mul
loopne
sbb
icebp
popa
dec
xor
jbe
prefetchwt1
cld
lahf
cwde
jns
dec
cmc
mov
daa
sbb
jp
mov
es
or
and
mov
dec
rcl
dec
sti
jae
pcmpeqw
jp
push
jbe
in
dec
movs
lea
loope
pop
dec
pusha
dec
inc
sbb
les
mov
xchg
aaa
or
jmp
and
aaa
cli
sub
or
inc
out
or
movs
add
xor
pop
sub
xchg
xor
test
push
icebp
dec
bound
adc
lds
fs
mov
aam
inc
and
or
jb
cmps
cmp
cdq
adc
fld
pushf
fild
sti
outs
mov
lods
aam
pop
jo
test
adc
cli
adc
in
cmp
sub
test
sub
mov
jmp
(bad)
sahf
call
int3
inc
add
stos
ret
shl
mov
jbe
in
cmp
adc
cmc
fs
icebp
pop
and
fwait
popf
das
pop
lds
retf
mov
cmp
xchg
jnp
fstp
enter
sbb
outs
adc
adc
test
pop
adc
aas
xor
in
push
mov
cmp
bound
hlt
out
sbb
fdivr
cmps
cmps
mov
jg
retf
dec
pop
in
cmc
adc
and
mov
sub
mov
cmp
daa
arpl
fs
cld
les
and
aam
push
cmps
vmaxps
cld
cmps
sbb
ret
xchg
stos
sahf
int
enter
add
inc
sub
sbb
cld
mov
es
pop
fisub
sahf
cmps
jp
mov
call
mov
movs
pop
adc
or
jmp
mov
sbb
add
cld
dec
sbb
and
jge
xor
retf
inc
fwait
add
(bad)
mov
push
ds
lahf
mov
cs
daa
ins
ror
adc
fbld
scas
jp
sub
icebp
push
pop
or
push
dec
cmp
into
lock
mov
jo
push
test
pop
mov
frstor
retf
data16
push
fwait
jmp
and
ret
jge
out
icebp
enter
or
(bad)
call
stos
or
push
mov
xchg
pop
jns
lock
in
mov
loopne
add
xor
int3
loop
cmps
mov
and
inc
pop
xchg
rol
mov
rcr
outs
leave
or
xchg
(bad)
xor
dec
push
pop
inc
pop
int3
pop
push
or
repnz
stos
dec
jl
(bad)
xchg
bound
or
inc
shr
sete
aaa
ficomp
das
mov
movs
call
xchg
fninit
sar
movs
into
add
sbb
aas
jno
retf
add
cmp
jg
xchg
and
jno
jl
ret
cmps
data16
or
movs
add
outs
xchg
add
push
test
dec
nop
inc
adc
mov
(bad)
sbb
jp
mov
xchg
mov
xchg
mov
scas
aam
sbb
call
push
jmp
outs
mov
mov
xor
push
std
rcl
add
dec
in
adc
pop
call
pop
jge
jb
das
aaa
dec
xchg
or
mov
mov
mov
cmps
and
popf
bound
push
shl
ret
push
call
lds
inc
sbb
(bad)
jmp
push
dec
dec
xlat
push
inc
imul
jecxz
icebp
mov
fst
lea
xchg
(bad)
aas
mov
arpl
or
jmp
jmp
or
xchg
idiv
sbb
or
fisttp
push
or
mov
pop
and
retf
add
pop
popf
cmp
push
ror
mov
push
fwait
inc
popf
rol
out
push
test
mov
mov
out
dec
retf
(bad)
lods
add
out
mov
mov
mov
loopne
xchg
inc
out
push
adc
test
mov
scas
gs
outs
pop
xor
xor
xor
xlat
loop
out
dec
mov
add
and
and
call
outs
out
leave
adc
cmp
aas
inc
aam
cmps
lock
inc
arpl
cmp
or
dec
outs
adc
out
loope
repnz
aad
sbb
xlat
scas
add
icebp
jb
adc
jp
sub
icebp
aaa
fiadd
jno
jmp
retf
cwde
jno
les
xor
push
mov
test
lea
das
aam
cmp
adc
pop
mov
movs
adc
cmps
add
aad
shl
rcr
lahf
repz
stos
dec
js
jb
dec
aaa
dec
or
and
push
pusha
ficom
stos
adc
mov
pop
aaa
fsub
sbb
stos
nop
adc
div
shl
inc
pop
xor
dec
clc
mov
popa
je
xchg
dec
rcr
(bad)
adc
cmc
sti
pop
jno
fnstsw
pop
cwde
fisttp
push
inc
aas
pop
fcom
mov
sbb
push
xor
pop
lods
jge
into
sub
sbb
call
add
or
cmovp
sub
js
inc
xchg
fsubr
outs
pushf
push
imul
rcr
or
inc
pop
jecxz
push
or
lahf
push
cmps
push
lods
add
adc
dec
mov
cmp
repnz
mov
dec
mov
mov
jg
jae
pop
daa
fdivr
stc
out
sub
retf
or
dec
movs
mov
or
adc
adc
jmp
jle
cmc
xchg
jmp
add
xor
call
xlat
cmp
gs
test
leave
sub
jg
mov
pop
mov
icebp
popf
push
aad
pop
ins
cs
inc
sbb
inc
fcomp
out
jnp
loopne
pop
push
outs
sub
cmps
mov
or
aas
popf
mov
push
lods
in
dec
sti
stos
push
bound
jle
xchg
and
xor
cmp
mov
mov
fild
pop
pop
inc
inc
pushf
add
test
pop
gs
push
rol
mov
fcom
int
leave
pop
je
jp
mov
push
pop
ret
push
sub
push
movs
sar
sar
mov
dec
adc
push
jae
cwde
inc
cmps
outs
add
loop
adc
add
outs
ret
mov
inc
pop
dec
(bad)
mov
adc
mov
aam
jecxz
adc
inc
cmp
pop
inc
adc
in
push
jmp
jge
dec
je
enter
pop
sbb
call
xor
pop
mov
jb
xlat
(bad)
fmulp
inc
cli
rcr
pop
jg
call
imul
add
lea
cmp
lods
add
pop
pop
mov
inc
movs
jb
rcr
retf
int3
cmc
mov
add
jecxz
mov
stos
mov
push
mov
aad
mov
es
mov
inc
sub
fnsave
addr16
sbb
jb
movs
push
rol
es
call
mov
idiv
out
adc
dec
inc
jne
push
(bad)
sbb
fbld
addr16
lock
aad
(bad)
(bad)
fmul
adc
xchg
(bad)
rol
fld
xlat
ret
jmp
ds
aam
leave
ss
fimul
and
arpl
in
sub
xor
mov
push
stos
sbb
jmp
xchg
mov
cmp
jnp
sub
adc
mov
int3
sbb
cld
add
jle
xchg
adc
out
imul
neg
mov
imul
inc
inc
xor
cld
push
les
repz
xor
cdq
test
pop
stos
inc
xchg
dec
rcl
add
leave
mov
jne
lods
or
cmps
rcl
out
xor
hlt
bound
mov
dec
add
push
push
adc
and
pop
aas
lea
shr
popf
mov
pop
sbb
pop
mov
jno
int
jg
cld
in
mov
(bad)
push
xchg
sub
cmp
stos
sti
enter
rcl
inc
addr16
push
push
jno
push
sbb
cmps
lds
out
mov
jp
sub
xor
leave
mov
xchg
dec
sub
sti
ss
xor
dec
daa
pushf
stos
lods
xlat
or
scas
xchg
cmp
xchg
fsub
adc
xchg
pop
cmp
xchg
aam
cmp
inc
add
mov
ret
pop
sub
paddq
mov
xchg
or
xor
ficom
(bad)
imul
movs
je
xchg
lds
xor
pop
push
into
sub
jle
sahf
xor
sbb
pop
mov
shr
mov
inc
dec
int
sbb
push
loopne
xchg
mov
enter
icebp
das
test
inc
repnz
sbb
(bad)
mov
jmp
lods
push
mov
outs
imul
dec
mov
in
inc
es
jp
in
rcl
push
imul
or
and
jo
mov
push
outs
mov
inc
retf
stos
aaa
mov
xor
imul
arpl
push
clc
cmps
mov
add
les
aam
inc
sbb
push
or
mov
pop
(bad)
aad
mov
das
int3
ss
test
jno
in
jp
push
mov
inc
fist
dec
xor
stc
cmp
xchg
mov
in
shr
fcom
gs
cld
xor
xchg
dec
jmp
mov
adc
(bad)
mov
inc
mov
cld
cwde
aaa
outs
and
mov
sub
retf
xchg
ret
fucom
cwde
jbe
adc
add
rcr
or
ja
jmp
push
sub
pop
cs
imul
addr16
xor
sbb
int3
xchg
and
fimul
(bad)
sbb
mov
inc
sbb
or
mov
lock
jns
jbe
les
out
and
in
mov
push
jno
leave
mov
xchg
jge
in
nop
scas
jb
pop
mov
loope
jecxz
je
mov
sub
inc
xor
cld
xchg
push
aad
jle
push
mov
jp
or
movs
mov
iret
ret
(bad)
in
mov
mov
or
xchg
dec
add
adc
add
dec
or
jmp
shr
out
inc
lea
mov
cli
rcl
inc
aad
xlat
in
mov
mov
pop
jno
nop
jbe
or
enter
or
loop
outs
pop
retf
sub
cmps
fdiv
and
add
outs
adc
xchg
push
sar
xchg
cwde
xchg
test
sbb
mov
loope
or
popf
pop
in
in
add
jno
sub
mov
imul
mov
sbb
jne
aad
out
mov
ja
loop
inc
arpl
sub
pop
or
push
push
loopne
push
jecxz
jg
pop
cmp
xor
and
retf
inc
mov
aad
sbb
pop
out
fnstsw
mov
in
jbe
clc
retf
inc
mov
or
es
jl
inc
repz
sub
jecxz
mov
js
cmp
out
sub
mov
mov
(bad)
repnz
ins
add
test
sbb
test
dec
jbe
ins
mov
or
js
das
test
sub
loopne
lahf
sbb
cmp
and
(bad)
mov
enter
add
cs
mov
call
ins
mov
xor
mov
jo
test
inc
push
arpl
pop
fld
aad
push
inc
nop
xchg
dec
rol
repnz
loopne
sbb
ss
dec
pop
jbe
lds
mov
clc
out
xchg
test
mov
mov
add
out
retf
test
in
cmp
jno
dec
dec
mov
in
ds
push
lahf
adc
xchg
stos
mov
cmp
push
and
dec
pop
mov
or
iret
gs
in
jle
pushf
mov
cli
lea
sub
movs
repnz
fmul
xchg
ficomp
stc
mov
outs
cwde
dec
dec
les
or
jle
fist
lods
sub
nop
jb
mov
stc
push
out
mov
sub
test
inc
inc
inc
sub
test
or
inc
outs
xor
cs
inc
arpl
add
push
mov
call
lock
sub
add
(bad)
xchg
cmps
jns
or
sub
sbb
repnz
jecxz
push
inc
js
xchg
pop
popf
pushf
leave
cld
inc
or
dec
(bad)
ds
cmp
push
mov
jne
jmp
xor
and
or
jmp
cwde
popf
inc
retf
xchg
(bad)
cmp
fnstcw
pushf
mov
cwde
xchg
(bad)
stos
push
pop
push
pushf
mov
add
xchg
and
mov
(bad)
mov
outs
cmp
cs
cmp
popa
pop
dec
stc
bound
mov
loope
or
pop
sub
outs
cmp
pop
xor
packuswb
dec
into
mov
movs
cmps
es
and
add
push
pop
push
or
test
pop
cwde
call
cmc
cvtpi2ps
push
pop
lea
jbe
lods
jecxz
out
sar
dec
jnp
mov
das
xchg
inc
mov
push
jge
pop
lods
sub
pusha
jo
pop
mov
sbb
(bad)
daa
gs
outs
push
or
jbe
pushf
dec
and
add
bound
xor
repnz
arpl
loop
or
in
push
push
sti
mov
xchg
dec
sti
shl
mov
cmp
scas
cmp
js
jg
push
neg
loop
ret
dec
jbe
imul
sbb
xchg
add
cmp
(bad)
add
mov
clc
jno
inc
movs
adc
ja
std
(bad)
jmp
add
push
mov
in
jbe
or
or
or
popa
bt
dec
stc
fiadd
cmp
xchg
sub
fldcw
sub
pop
jb
dec
xor
cli
enter
popa
push
aam
mov
arpl
push
ret
push
mov
(bad)
xchg
fcom
pop
jge
pop
loop
ins
xor
sar
sub
add
ds
jmp
test
(bad)
shl
imul
pop
jmp
ffreep
ficom
je
adc
ret
or
out
cwde
(bad)
stos
push
bound
jmp
in
dec
xchg
adc
int3
jmp
popa
xchg
or
rcl
sbb
mov
stos
xchg
add
test
push
pop
ret
cs
in
retf
movs
cmp
shr
pop
push
mov
(bad)
mov
mov
xor
pop
pop
push
push
pop
jb
das
or
hlt
jecxz
jnp
jmp
mov
cmc
xor
mov
sahf
retf
les
scas
retf
sbb
push
pop
stos
pop
or
(bad)
movs
(bad)
scas
call
sbb
mov
cli
scas
nop
ret
lods
popf
inc
pop
sub
idiv
ret
sbb
inc
push
lock
jae
loopne
sub
nop
xchg
push
cmps
lock
ret
sbb
into
cmp
xchg
repnz
or
ss
cmp
pusha
add
fbstp
pop
std
or
div
and
inc
mov
pushf
cmp
test
push
add
scas
and
std
(bad)
xchg
xchg
jns
adc
sub
das
jmp
fwait
scas
and
cmp
pop
(bad)
cmp
es
call
or
sub
lds
iret
pushf
adc
stos
stos
das
in
cmps
fisub
pop
inc
or
fisttp
rol
mov
hlt
mov
movs
xor
repz
clc
or
pop
mov
stos
call
pop
dec
or
add
stc
sbb
stos
cmp
dec
pop
out
movs
pop
xlat
adc
inc
stc
mov
adc
ror
pop
out
data16
scas
jne
push
inc
inc
imul
pop
xchg
jae
pop
and
int3
bound
and
mov
fcomp
out
cmp
jmp
mov
sbb
or
lods
push
movs
push
enter
aas
inc
mov
jns
add
sahf
loop
jg
and
add
popf
add
stc
xchg
pusha
das
out
mov
cdq
sbb
rcr
dec
leave
adc
stos
test
lahf
fwait
xchg
icebp
jmp
rcr
dec
shld
inc
mov
mov
ins
adc
mov
pushf
jae
(bad)
cli
jmp
jmp
pop
dec
sbb
adc
(bad)
mov
fimul
pop
pop
or
call
out
xchg
xchg
xor
and
push
test
fcomip
cwde
cmp
ret
jge
jb
cmp
mov
rcr
jno
ins
add
or
jo
in
jo
leave
out
jl
loopne
cmc
in
push
push
push
ins
push
adc
mov
fs
xchg
in
shl
push
out
sbb
test
call
cmp
mov
jae
mov
mov
(bad)
addr16
sub
cmc
adc
call
(bad)
stos
jle
push
adc
mov
adc
daa
sbb
into
dec
add
or
in
mov
adc
inc
jbe
add
jle
and
inc
mov
pop
fist
jae
mov
repnz
dec
pop
jecxz
fnstenv
ins
or
stos
enter
jl
adc
mov
sub
pop
pop
xchg
stos
xor
in
and
ins
sub
xchg
mov
stos
jle
in
sub
adc
jg
test
push
cdq
jae
test
mov
in
movs
xor
push
add
fs
jnp
xchg
movs
inc
push
test
add
dec
dec
push
cmp
mov
mov
push
out
ins
fadd
iret
pop
arpl
loopne
or
(bad)
mov
ror
and
(bad)
jnp
fs
mov
adc
dec
xchg
das
inc
mov
fidiv
stos
pop
jecxz
jmp
int3
push
push
cmp
ret
and
stos
inc
xchg
(bad)
leave
sub
daa
inc
mov
rcr
jg
loop
push
adc
sub
sbb
add
add
inc
pop
outs
xor
add
int
cmp
sub
int
sub
jl
jo
dec
dec
call
pop
retf
inc
pop
jne
push
xor
jb
sbb
jg
ds
sbb
cmp
(bad)
mov
cmps
cmp
cmp
jl
mov
and
jmp
fcom
rcr
mov
and
lds
push
pop
idiv
ds
xchg
(bad)
mov
xchg
clc
jle
lods
repnz
movs
xor
(bad)
add
jecxz
arpl
sub
inc
pop
ja
(bad)
bound
add
sub
in
add
popf
(bad)
cdq
jne
aas
jge
dec
mov
pusha
les
xchg
mov
adc
mov
pop
and
xchg
shl
mov
adc
ret
dec
push
(bad)
stos
xor
(bad)
leave
lea
dec
adc
rol
xor
and
xchg
sub
mov
xchg
mov
sub
sahf
xor
jb
adc
pop
pop
mov
repnz
out
adc
mov
or
cli
test
fwait
mov
lods
mov
pop
mov
scas
push
and
mov
pop
mov
ins
imul
ficomp
jmp
adc
aaa
bound
xor
mov
enter
sub
rcr
enter
call
nop
lock
xchg
or
ret
fdivp
mov
sub
fcmovb
outs
mov
cdq
push
pop
sub
repnz
or
lea
mov
or
mov
retf
xchg
ds
cwde
pop
jmp
adc
dec
mov
jle
dec
and
add
and
sub
xor
and
jae
enter
xor
sub
cmps
add
xor
pop
pop
mov
sbb
and
lods
push
dec
dec
and
test
cli
scas
stos
ficomp
test
push
es
add
daa
pushf
mov
(bad)
cwde
push
pusha
sub
inc
movs
cmp
cmp
dec
mov
mov
jne
aad
mov
sti
inc
popa
mov
inc
(bad)
or
dec
es
inc
xchg
sbb
cmps
jmp
imul
jbe
xor
push
dec
es
cmp
and
mov
cmp
xchg
cs
xchg
sub
cmps
cmc
xchg
int3
scas
xchg
sbb
dec
and
stos
lods
and
jns
mov
mov
stc
jno
ret
jb
cs
movs
call
aad
dec
sar
fwait
sahf
ret
xchg
sbb
out
mov
iret
and
push
pop
add
push
cdq
out
imul
lods
push
sub
repz
or
push
jb
clc
cld
rcr
dec
sbb
pushf
outs
leave
push
lock
jnp
add
adc
(bad)
lahf
push
push
inc
adc
dec
outs
cmp
ja
(bad)
jmp
fistp
scas
out
or
or
sub
aam
and
stos
mov
jnp
and
sub
enter
inc
pop
test
scas
dec
push
pop
cmps
sbb
clc
mov
hlt
push
ror
and
jle
sub
les
inc
lods
and
mov
mov
loope
mov
test
rcl
dec
push
sbb
jge
pop
sub
mov
adc
lea
cdq
movs
inc
pop
jo
inc
and
sub
ins
neg
jae
xlat
pop
sbb
or
ror
fst
lds
iret
mov
in
sub
aad
xor
cwde
mov
xchg
(bad)
repnz
loop
cmp
mov
ds
sahf
rol
ja
xchg
or
xchg
jbe
mov
ins
jne
xchg
xchg
xchg
js
gs
pop
dec
jo
in
in
lods
push
mov
imul
xchg
cmp
or
jne
pop
mov
inc
out
lds
in
gs
mov
mov
push
in
sub
adc
stos
cmps
and
mov
inc
ss
out
les
sub
add
ret
ss
xchg
pop
pop
mov
xor
lock
mov
mov
mov
sub
rcr
lds
sbb
xchg
xchg
dec
push
jnp
sbb
lds
add
sar
cmps
inc
dec
push
(bad)
pop
ret
jae
adc
(bad)
jmp
adc
mov
push
xor
dec
pop
lods
xor
pop
sub
fistp
pop
mov
loop
das
clc
test
mov
out
sbb
sbb
mov
inc
xor
repnz
push
ret
jmp
xchg
into
es
cmps
mov
sahf
mov
gs
clc
sbb
scas
(bad)
ja
cmc
inc
jl
jmp
int3
ja
es
cld
jmp
add
sbb
dec
push
push
daa
push
shr
xchg
loope
add
lods
outs
fstp
retf
cmp
fldenv
daa
bsr
fisub
clc
mov
sbb
int
ror
xor
retf
or
cwde
jge
pop
or
lods
jmp
movs
and
jle
push
xchg
xchg
dec
out
cld
jge
sbb
movs
idiv
scas
and
(bad)
sti
movs
loop
cmps
sbb
ds
xor
mov
rcl
les
mov
sub
pop
call
xchg
sub
aaa
(bad)
or
mov
in
repnz
xor
cli
sbb
loop
rcl
ins
dec
mov
adc
add
nop
pushf
xchg
test
add
cmps
bound
out
stc
jl
xchg
pxor
or
mov
add
(bad)
mul
and
jg
add
sbb
fist
mov
add
popf
les
dec
pop
dec
fisub
stos
leave
out
adc
enter
ret
sub
jle
sbb
repnz
mov
scas
pop
mov
bound
jmp
add
test
xchg
out
sbb
xchg
cli
aam
popa
ds
pop
(bad)
cdq
sbb
inc
pshufw
and
push
int
call
add
push
mov
test
cmp
imul
jbe
adc
pop
shr
adc
xor
out
sbb
imul
shl
sub
and
push
adc
mov
cmp
fstp
pop
ins
out
fsub
xchg
cld
movs
dec
call
aas
inc
cmp
and
ss
std
push
fscale
gs
add
bound
sti
mov
add
(bad)
inc
call
mov
xchg
jae
xor
inc
xchg
loop
or
mov
fimul
mov
mov
int3
test
iret
xor
xor
inc
inc
mov
int
std
test
cwde
outs
int3
fstp
pop
in
ins
stos
sub
sub
fst
das
mov
into
adc
add
cld
std
xchg
movs
popaw
pushf
cmps
cwde
int3
cmp
pand
(bad)
fild
mov
mov
dec
leave
cli
inc
cmp
out
mov
mov
sar
fistp
(bad)
mov
loope
das
xlat
iret
adc
dec
pusha
xor
or
ret
fwait
jl
xor
mov
lods
ret
repz
rcr
cli
sbb
pop
retfw
adc
cmp
mov
inc
mov
mov
fsubr
imul
sub
ss
loope
nop
xor
cli
into
mov
sub
ret
scas
mov
mov
scas
push
add
sub
icebp
mov
je
sahf
jmp
cmp
stos
test
repnz
pop
fcomi
ret
iret
gs
cmp
es
jno
adc
retf
lea
movups
dec
dec
scas
gs
repz
push
jmp
pop
outs
jecxz
mov
adc
std
movs
lea
push
xchg
cmp
mov
push
test
and
jp
int3
test
add
cmp
xor
mov
push
inc
popa
inc
xchg
dec
xchg
fimul
into
outs
lods
xchg
mov
jge
idiv
daa
or
mov
pop
sub
call
add
and
xchg
jge
lods
addr16
inc
xor
mov
adc
ja
in
jne
sti
arpl
cli
jmp
adc
mov
ficom
sbb
jge
sbb
call
ror
iret
jmp
jl
xchg
or
add
loopne
out
mov
sbb
add
pop
xchg
pushf
add
jg
in
adc
outs
(bad)
in
mov
out
dec
inc
sbb
mov
adc
sbb
sub
scas
das
push
jnp
dec
xor
fcomp
push
sysret
mov
das
push
in
imul
and
add
xor
stc
scas
xchg
pop
jo
add
inc
jns
xor
sar
cdq
lock
outs
add
adc
mov
shr
jno
arpl
ds
cmc
xchg
dec
sub
shr
adc
loopne
ror
dec
arpl
mov
push
lahf
push
add
mov
mov
jg
xchg
jo
add
adc
sbb
in
ret
loopne
jns
stc
mov
jmp
cmp
mov
std
xchg
jp
das
int3
mov
out
xor
aam
movs
sbb
call
mov
jmp
pop
jge
imul
inc
rcr
rcl
sub
loope
dec
je
out
sub
in
ret
inc
inc
adc
and
sub
mov
add
jne
jmp
xchg
stc
push
mov
cmp
push
mov
pop
push
or
xacquire
scas
out
je
std
movs
sub
ins
push
test
mov
aam
sti
addr16
outs
pop
lock
retf
repnz
pop
into
mov
fimul
or
push
jne
icebp
sbb
imul
stos
xor
sbb
pop
or
(bad)
fadd
xor
(bad)
sub
or
repz
fidivr
in
push
xchg
scas
sbb
dec
mov
add
in
nop
xchg
in
fcom
push
repnz
outs
jmp
(bad)
shl
in
xlat
movs
sbb
mov
inc
jb
das
xchg
aaa
mov
pop
ret
call
mov
clc
inc
cmp
inc
ficom
mov
cld
test
in
and
test
imul
int
ret
inc
inc
mov
addr16
and
sub
xchg
mov
xchg
push
jle
jmp
xchg
or
xchg
fstp
cdq
pop
fbld
xor
je
push
and
and
pop
adc
mov
mov
test
mov
add
push
sbb
push
aas
call
push
inc
push
adc
imul
in
leave
ins
mov
jge
lods
add
(bad)
(bad)
dec
movs
push
(bad)
push
add
add
dec
inc
jb
xchg
dec
xlat
mov
push
cmp
pop
ret
sti
nop
lock
jmp
imul
(bad)
das
les
mov
mov
mov
adc
pop
call
ret
cdq
ret
sub
stos
leave
jp
mov
dec
inc
mov
les
adc
jle
dec
fs
mov
pop
sbb
pop
lods
dec
stos
pop
retf
adc
in
jecxz
jp
jo
leave
xchg
ins
imul
jle
adc
lahf
mov
fisub
add
inc
or
dec
mov
in
jmp
mov
push
les
sub
neg
sub
in
test
inc
inc
xchg
cmp
mov
outs
xchg
sbb
sti
xchg
pop
mov
int3
push
mov
pop
aaa
and
hlt
retf
mov
jnp
pop
add
dec
popf
movs
mov
mov
retf
or
lea
adc
fcomp
sbb
and
les
add
add
jle
mov
xor
fs
and
inc
push
dec
mov
adc
(bad)
outs
xchg
adc
lods
neg
pop
mov
mov
push
sub
pop
adc
mov
add
daa
xchg
movs
inc
push
in
pop
mov
(bad)
fcmove
into
ds
popf
popf
and
ja
pop
test
fcomp
sbb
es
les
and
sub
dec
pop
fcompp
xchg
in
push
push
and
xor
xchg
loope
ret
movs
rol
and
jbe
mov
push
dec
lahf
sbb
sub
mov
mov
vrsqrtss
push
out
xor
xor
or
push
test
jl
rol
loope
or
pop
sti
mov
clc
cwde
jl
cs
sbb
retf
gs
sbb
pop
xor
aam
pop
out
and
xor
(bad)
push
imul
fldcw
inc
mov
(bad)
cmp
sub
shl
js
push
rcr
mov
mov
sub
mov
fisttp
ds
into
push
and
aas
or
ss
ins
fucom
xor
xor
adc
or
xchg
ret
ds
pop
push
pop
stos
(bad)
jg
push
std
movs
sub
prefetch
inc
jno
pop
div
and
icebp
cmp
lods
rcl
pusha
jb
dec
mov
mov
jecxz
sahf
jl
retf
inc
jecxz
and
adc
(bad)
mov
cmp
ffreep
mov
mov
addr16
sbb
aaa
add
adc
push
dec
clts
pop
cdq
adc
mov
pop
inc
ret
xor
xor
test
inc
stos
out
mov
xor
adc
inc
xor
sti
int3
dec
movs
cmp
repnz
or
dec
shl
(bad)
lods
gs
xchg
pop
das
ss
es
inc
push
adc
mov
fsubr
mov
mov
jnp
data16
mov
in
sbb
adc
push
xchg
sub
jno
arpl
arpl
dec
repz
ss
push
mov
sti
popa
sbb
fidiv
fimul
pop
jnp
add
xchg
div
xchg
mov
and
mov
js
sti
out
sbb
fist
addr16
sub
push
rcr
push
inc
(bad)
ja
outs
imul
mov
push
fdiv
fdiv
les
(bad)
arpl
and
and
test
xor
std
jecxz
dec
jg
cmps
and
out
rcl
jmp
dec
cmps
inc
jno
enter
in
sbb
xor
stos
fstp
xor
cwde
and
adc
cmp
(bad)
neg
adc
cmova
jno
adc
jno
inc
pop
push
cwde
inc
sbb
dec
out
jge
shr
and
sbb
ds
push
fisttp
cmp
pop
shl
rcl
cmp
leave
jo
inc
in
dec
movs
fsubr
call
dec
pop
sbb
std
data16
fild
and
mov
add
loope
pop
pushf
stos
sbb
mov
xchg
call
jnp
cmp
shr
retf
pop
scas
daa
mov
cmp
(bad)
push
fmul
cdq
xchg
loop
sbb
jge
cmps
mov
test
push
inc
in
fnstsw
xchg
(bad)
nop
adc
in
and
push
pop
mov
add
add
jns
fsubr
aad
add
xchg
fsubr
add
adc
pop
push
in
jge
out
cli
pop
xor
inc
std
dec
xchg
(bad)
push
inc
and
rcr
and
dec
ror
jmp
mov
jno
or
das
jge
mov
xchg
pop
or
adc
(bad)
cmp
mov
cmp
ret
rcl
mov
mov
dec
cmp
and
lock
rcr
xor
ror
scas
adc
xchg
add
ds
iret
mov
mov
dec
pop
xchg
push
push
cmps
cmp
xchg
daa
not
lods
xor
cwde
cmp
fxch
cmp
jae
adc
adc
into
ja
xchg
xor
pop
dec
cmps
dec
and
(bad)
lds
clc
add
neg
mov
pop
sub
ror
cs
add
pusha
sar
jg
repz
imul
sbb
or
cmps
in
mov
sbb
cmp
imul
fldcw
mov
cmp
sub
rcl
es
retf
or
pop
jno
(bad)
mov
add
enter
cmps
addr16
mov
ret
push
clc
pop
mov
mov
cmps
mov
mov
fbstp
retf
dec
ja
hlt
jnp
xor
nop
hlt
dec
cmp
dec
test
jmp
test
out
repnz
jb
leave
inc
dec
fadd
sbb
ins
das
push
pop
aad
dec
sbb
test
mov
call
dec
push
adc
push
cmp
mov
ret
pop
sub
ins
test
repz
pop
sub
inc
popa
jle
nop
int
pop
retf
inc
adc
rol
arpl
lds
js
dec
cmps
or
xor
mov
cmp
fist
jnp
(bad)
call
ja
call
ror
xor
mov
cld
mov
mov
adc
lock
aas
inc
or
push
mov
sub
shl
pop
dec
or
push
sub
lock
cmc
dec
lods
cmp
inc
add
jo
cmp
nop
cmp
je
sbb
pop
dec
js
mov
rcl
mov
jl
inc
fxch
mov
inc
lds
push
lods
jns
jg
pushf
fidivr
sub
int
mov
cmp
mov
xor
test
sbb
sub
pop
mov
fs
mov
sbb
or
repz
jge
scas
fwait
mov
add
xor
ret
neg
in
je
dec
popw
add
xor
sub
sbb
and
jmp
std
mov
pop
inc
popf
or
inc
pop
mov
sbb
and
dec
mov
dec
lock
outs
xor
pop
ror
mov
cmp
push
mov
sub
cmps
sahf
test
(bad)
jl
rcr
xor
xchg
cdq
or
fsubr
sub
jno
jae
cmp
lea
jne
xchg
sbb
sub
dec
js
mov
cmp
mov
push
inc
sbb
test
in
ror
(bad)
stc
mov
pop
out
loop
retf
and
inc
mov
rol
pusha
xchg
pushf
rcr
pop
pop
scas
retf
mov
fcomp
inc
xchg
sub
cs
or
jg
sbb
cmps
pushf
popa
jnp
movs
shr
movs
cli
and
stos
jb
popa
mov
xchg
add
imul
pusha
in
lds
jp
shr
imul
jnp
xor
fisttp
std
inc
ja
leave
test
repnz
fwait
stc
pop
imul
cmp
and
jbe
add
mov
jne
xor
addr16
in
inc
fnstsw
add
lea
sti
call
mov
lods
mov
jecxz
and
xor
add
or
and
jg
xchg
or
sbb
out
in
ficom
xor
mov
inc
xor
je
dec
outs
sbb
pop
push
cmp
scas
inc
xor
sub
dec
add
mov
in
popf
cmp
call
xlat
pop
mov
or
loope
repnz
shr
retf
ret
mov
std
jb
bound
adc
lock
dec
(bad)
and
test
adc
mov
add
imul
push
shr
cli
adc
test
push
jne
sahf
(bad)
std
xor
fsubrp
cmp
xor
jecxz
sub
xchg
call
push
loope
cmps
xor
imul
adc
xor
xchg
(bad)
in
or
in
jo
mov
scas
mov
mov
mov
(bad)
dec
add
int
pop
cdq
push
repnz
in
pusha
xchg
xchg
fcom
scas
inc
popa
lock
push
inc
lods
fsubr
mov
add
rcl
push
jmp
inc
xchg
imul
in
jecxz
shl
push
push
xor
into
aam
fiadd
xchg
mov
cmp
bound
in
fistp
adc
test
popf
sbb
cmc
or
stos
mov
aam
or
dec
mov
push
xchg
pop
cmp
fs
fld
sbb
add
inc
push
cld
stc
mov
ror
pop
cmps
rcl
xchg
pop
es
jle
mov
ins
mov
ins
out
pusha
push
jo
fwait
jmp
fiadd
outs
(bad)
clc
jno
call
je
inc
(bad)
les
hlt
lods
sub
gs
arpl
lods
movs
inc
rol
fsub
test
and
enter
mov
cdq
pop
cmps
ret
or
fmul
xor
cmp
xor
loop
or
jp
pop
push
push
xchg
xchg
push
xchg
adc
(bad)
jmp
cwde
cwde
cwde
ss
or
xor
adc
push
inc
push
addr16
sbb
mov
xor
fs
sbb
test
(bad)
fisttp
repz
cdq
xchg
sbb
in
(bad)
cmp
inc
cmp
xchg
add
outs
(bad)
mov
push
adc
cmp
loopne
dec
sub
inc
mov
xchg
pop
(bad)
xchg
mov
in
push
jmp
mov
mov
ret
iret
mov
in
dec
ins
pop
dec
dec
cmp
cmp
mov
push
cmp
mov
mov
dec
mov
adc
dec
or
pop
dec
movs
mov
cmp
aad
adc
retf
cmp
adc
jnp
adc
out
push
into
and
mov
sbb
scas
push
sub
push
(bad)
mov
retf
(bad)
push
push
inc
into
es
xchg
ja
inc
pop
mov
scas
inc
cli
push
ffree
dec
bound
inc
test
cmp
rol
xor
and
push
pop
pop
dec
(bad)
leave
or
or
leave
xchg
or
mov
mov
pop
icebp
sbb
fsubr
push
bound
pop
in
mov
test
and
(bad)
jmp
jl
jp
pop
pop
or
cmc
pop
inc
aam
int
pusha
inc
dec
fidivr
adc
fimul
add
mov
sub
jno
jmp
xchg
add
pop
cs
outs
push
or
sub
pop
or
push
inc
jecxz
out
cmp
ja
fcomp
icebp
je
adc
and
cdq
fwait
test
mov
sub
xchg
push
loope
cmps
fisubr
popa
or
push
sub
out
cmp
popf
add
xchg
xchg
popa
cmp
lahf
or
test
pop
sub
pop
call
in
mov
add
push
sbb
stos
rcr
sbb
add
push
push
jp
xchg
out
mov
cmp
cmp
sbb
fsubr
add
lahf
or
cli
test
test
mov
xor
jae
xor
int
mov
pop
rol
das
push
dec
mov
pop
mov
sbb
xchg
lea
dec
lods
loop
xchg
mov
lods
(bad)
in
dec
loop
mov
ja
enter
ds
mov
push
loop
adc
addr16
push
inc
ins
jp
jne
jae
shr
or
popa
es
js
mov
sar
fadd
push
clc
cs
dec
(bad)
mov
aad
push
outs
xor
popa
enter
xor
jl
(bad)
push
jb
bound
leave
sbb
pop
dec
sbb
shr
gs
push
jnp
popf
dec
add
or
mov
dec
or
xchg
push
sbb
or
cld
dec
jbe
mov
add
aad
xor
dec
and
push
arpl
pop
fnsave
call
loop
dec
clc
shl
fld
pusha
pop
jmp
push
and
sbb
pop
imul
stos
ret
mov
sbb
mov
xchg
cmc
add
xchg
not
ins
add
mov
and
mov
(bad)
jo
mov
mov
pop
dec
push
mov
hlt
shl
out
ret
lahf
ja
fxtract
xchg
popa
fs
in
jg
leave
xor
jp
mov
ins
nop
shr
jo
js
sbb
mov
dec
shr
out
ror
aaa
pop
jbe
push
pop
je
jns
xor
jmp
std
mov
inc
fcmovnu
jmp
ja
hlt
(bad)
mov
popa
mov
xchg
loope
dec
fwait
outs
or
gs
xchg
ret
imul
cmps
xchg
adc
fstp
xchg
scas
popf
retf
pop
dec
push
retf
sbb
in
cmp
aaa
lahf
sbb
push
pop
ins
bound
imul
or
cmp
lock
cmc
inc
add
cmp
lds
nop
mov
into
pop
adc
push
push
popf
ja
loopne
and
mov
or
xchg
cmp
cmp
ins
mov
lea
jmp
(bad)
lods
add
add
outs
sub
mov
popf
jecxz
inc
fwait
push
sub
mov
ficomp
lds
xor
sub
xor
dec
mov
lahf
sub
aad
int
sbb
mov
test
push
xchg
inc
dec
xor
ja
mov
call
adc
xchg
jle
or
jb
jnp
int3
mov
dec
iret
std
out
mov
jecxz
jmp
sbb
adc
push
fsubr
xchg
cs
adc
(bad)
lock
jg
mov
xchg
jmp
retf
movs
inc
xchg
jecxz
(bad)
ret
rcr
and
push
jnp
es
(bad)
stc
dec
jb
pop
loopne
out
cmc
sbb
sbb
int
out
ret
mov
push
ja
lods
iret
jmp
xchg
aam
mov
add
adc
inc
pop
enter
dec
push
sub
jp
(bad)
push
sub
inc
inc
inc
mov
sbb
ins
push
fs
jns
dec
mov
test
mov
or
mov
sahf
pop
jecxz
mov
movs
xor
mov
pop
or
push
add
xchg
jg
mov
std
adc
push
dec
jl
fst
sbb
jge
sbb
push
dec
je
scas
push
or
shl
int3
and
enter
ficomp
cmc
movs
add
xchg
(bad)
adc
imul
ds
xchg
pop
daa
pop
mov
out
push
aad
and
mov
ret
xor
ins
pop
jno
lea
imul
add
add
jecxz
out
les
jo
sbb
stos
shr
es
and
dec
dec
inc
in
add
(bad)
jecxz
aaa
adc
repnz
fnstcw
aad
stos
jne
cdq
call
xor
cwde
sbb
leave
inc
loop
aaa
arpl
cld
(bad)
aam
mov
(bad)
jmp
cmc
xchg
xor
xor
adc
xor
xor
ins
add
sub
add
push
shld
pop
mov
sahf
rcl
stos
sbb
inc
dec
sbb
dec
inc
lock
repnz
cmp
movs
mov
(bad)
jnp
mov
loope
xchg
(bad)
jb
jle
scas
dec
cli
dec
ret
sub
sbb
call
clc
in
mov
sbb
push
or
cli
jno
mov
es
adc
xor
leave
aaa
idiv
sub
fwait
push
out
ds
test
pusha
pop
mul
lea
xor
fst
or
dec
adc
fsubr
fwait
and
retf
jle
dec
es
scas
fdiv
push
pop
or
enter
sbb
sbb
addr16
pop
mov
sub
xchg
and
xchg
push
xchg
stos
push
cli
mov
jno
cmp
pop
cmps
clc
dec
push
movs
jae
mov
add
ss
mov
pushf
adc
adc
or
(bad)
pop
out
popf
cmp
sbb
mov
sub
sahf
outs
add
mov
xchg
pop
sbb
sbb
sub
enter
xlat
cmp
stos
xlat
js
test
xor
mov
push
xchg
or
inc
je
and
movs
loope
jne
mov
jg
mov
mov
mov
fwait
les
mov
or
mov
mov
jg
dec
popa
leave
fsubrp
mov
cmp
or
sbb
rcr
movs
pop
imul
sub
outs
mov
xchg
movs
fsubr
(bad)
pop
not
xor
fadd
sbb
cmp
std
not
cmps
stos
pop
bound
test
mov
pop
pop
jno
cmp
je
fcomip
pop
dec
lods
mov
aam
mov
in
outs
xor
cld
adc
jmp
fldcw
fistp
(bad)
hlt
ror
jmp
sbb
jbe
cdq
adc
test
xchg
and
add
cmp
clc
pop
mov
adc
xchg
mov
pop
test
leave
mov
pop
sti
adc
sub
mov
dec
movs
loop
(bad)
mov
push
push
cmp
cmp
daa
cmps
fcom
mov
or
cli
mov
push
push
sbb
in
test
jp
repnz
stos
mov
mov
jmp
sbb
mov
(bad)
je
add
nop
ret
ret
xor
cs
pop
scas
daa
inc
and
pop
mov
pop
pop
aam
mov
stc
sbb
fsubp
data16
popa
mov
outs
stos
repnz
sbb
retf
loope
jge
inc
dec
mov
jno
test
(bad)
sbb
outs
sahf
or
pop
mov
(bad)
jno
movs
jp
imul
in
(bad)
adc
test
mov
mov
cmps
mov
ret
int
dec
retf
lock
out
(bad)
shl
ins
ret
stc
dec
ror
dec
clc
inc
stos
jno
fsubr
mov
pop
push
push
xor
dec
mov
push
mov
xor
imul
push
neg
push
mov
nop
bound
adc
mov
(bad)
or
arpl
out
or
cdq
cli
into
fsqrt
inc
into
pop
sub
sbb
jp
into
cmp
dec
popa
int
add
inc
clc
mov
fs
scas
mov
cmp
in
addr16
stos
cmps
push
push
es
sub
jle
push
lods
push
mov
pusha
jge
jmp
fbld
jbe
arpl
mov
stos
repnz
fwait
xchg
or
pop
xchg
cs
mov
mov
jmp
or
inc
imul
cmps
jns
pop
bound
outs
cmp
or
cli
jne
cmp
cmp
pop
mov
js
cmp
test
jno
pop
add
mov
repnz
loopne
xchg
sbb
ret
push
inc
mov
or
rol
mov
loope
adc
scas
xchg
cwde
fsub
inc
push
mov
dec
or
scas
jns
or
sti
stos
xchg
ret
cmps
push
(bad)
lea
sbb
stc
jmp
retf
mov
(bad)
in
(bad)
jle
xor
dec
and
adc
fidiv
xchg
add
jmp
inc
or
cmp
imul
fld
popa
pop
mov
hlt
(bad)
(bad)
and
in
pop
ins
arpl
add
(bad)
cli
push
cmp
popa
mov
mov
imul
pop
popf
adc
shl
and
mov
mov
push
mov
lea
mov
inc
cmp
push
outs
xchg
out
dec
out
push
mov
fidiv
(bad)
leave
jne
lods
and
rcl
lods
lods
adc
(bad)
xchg
rcl
mov
aaa
aaa
dec
add
hlt
imul
pop
pop
mov
xor
(bad)
arpl
sahf
aaa
jl
jge
stc
mov
push
push
aam
jne
dec
fucom
call
repnz
or
outs
iret
div
mov
and
push
out
add
test
add
ins
cmps
add
mov
dec
aas
repz
out
pop
jl
and
in
mov
push
cmp
dec
or
popa
inc
pop
xchg
test
push
xor
ja
xor
xor
xchg
arpl
pop
or
dec
jno
cld
ins
addr16
push
push
dec
out
pop
mov
cmps
ss
addr16
sub
faddp
dec
mov
and
pop
push
mov
jl
popf
xor
or
arpl
adc
and
jae
aam
int
dec
or
fdivr
bound
ret
xor
neg
adc
lods
add
mov
xor
push
dec
ss
cmp
and
test
aam
pushf
or
test
inc
rcr
jge
mov
dec
pusha
cmp
cmps
cmp
cmp
sub
jbe
nop
cmp
in
imul
mov
jmp
mov
inc
add
pusha
inc
pop
(bad)
mov
or
sub
scas
and
adc
je
pusha
pusha
inc
pop
das
dec
repnz
shl
and
sub
(bad)
xor
mov
pop
cmps
sahf
scas
stos
mov
xor
int3
mov
cmp
clc
mov
jne
cwde
sbb
adc
test
jne
shl
xchg
or
pop
push
test
push
ret
fucomi
clc
mov
addr16
aas
pop
jbe
popf
stos
fisubr
push
or
sbb
fistp
cmp
fwait
pop
pop
(bad)
mov
and
fwait
pop
and
push
adc
cmc
cs
inc
ins
fist
cs
xchg
dec
(bad)
jle
test
lahf
dec
pop
pop
add
and
in
test
mov
aam
test
xchg
push
xchg
fcomi
shl
test
clc
adc
scas
sub
inc
xor
add
sbb
sbb
shr
dec
mov
daa
mov
cmp
les
xchg
jmp
or
lock
sub
test
or
test
fisttp
loope
or
or
js
clc
mov
cld
fisttp
sub
imul
add
adc
dec
je
inc
ins
js
stos
and
ret
inc
push
jle
sub
lods
clc
jno
jno
mov
ins
inc
jb
outs
mov
mov
ds
aam
push
mov
pop
mov
add
pop
out
mov
daa
(bad)
in
mov
ret
or
icebp
xchg
cld
fsubr
xchg
cwde
arpl
add
inc
cmp
out
retf
hlt
dec
push
inc
aam
sbb
or
adc
mov
adc
sub
or
adc
daa
inc
mov
bound
data16
fbstp
lods
daa
push
fs
jo
or
nop
add
ds
and
and
loop
pop
pop
sub
mov
mov
jnp
and
xchg
mov
xlat
pop
mov
neg
cmp
adc
sub
inc
jb
mov
xchg
add
clc
stc
lods
cmp
cld
retf
imul
pusha
nop
call
ss
repnz
or
xchg
fistp
pop
fstp
xchg
adc
mov
push
jmp
repnz
scas
dec
test
xchg
inc
les
fwait
jp
fbld
pop
sub
or
test
ret
sbb
retf
retf
fidiv
inc
adc
(bad)
or
test
pushf
sub
es
lea
pop
cmp
cmc
call
aas
test
in
adc
mov
adc
inc
push
cmp
js
mov
jnp
jne
push
out
mov
sub
xor
call
xchg
imul
sub
mov
inc
nop
mov
xor
push
cmps
jmp
ret
adc
sbb
div
push
sub
dec
loop
dec
mov
cmps
push
dec
lock
jno
sbb
mov
xor
mov
imul
stos
inc
test
pop
sub
jl
clc
ins
lods
cmps
xchg
mov
rol
movs
cmps
or
mov
out
jl
nop
push
xchg
icebp
ins
inc
sbb
clc
mov
out
dec
aaa
xor
ja
pop
dec
xor
int3
mov
pop
inc
xor
pop
sub
movs
jne
in
lods
cmp
and
pop
stc
inc
or
sub
push
mov
mov
test
mov
or
out
mov
in
sbb
xor
xchg
(bad)
ror
pushf
(bad)
sbb
inc
movs
into
sbb
mov
retf
xchg
imul
pop
cmp
inc
inc
cmp
jge
and
int
mov
into
inc
dec
call
jne
push
push
cwde
and
xchg
jmp
add
out
jl
fidivr
enter
add
imul
popf
bound
sub
sbb
and
mov
xchg
push
or
or
mov
(bad)
cmp
push
pop
push
scas
mov
loopne
dec
cmc
fcmovb
sub
push
fstp
xchg
js
push
jae
movs
cwde
cmps
nop
jno
inc
stc
mov
shl
std
or
pusha
ficomp
cmps
jmp
(bad)
lods
lahf
mov
inc
mov
mov
(bad)
(bad)
ja
xchg
mov
mov
xchg
jno
fldenv
lahf
fisub
xchg
add
popf
lods
sahf
or
mov
stc
in
xchg
xchg
in
inc
jle
or
jge
movs
adc
out
sbb
jl
cmps
into
retf
cmp
dec
lds
pop
imul
and
sbb
addr16
loop
out
hlt
pop
sub
not
mov
jae
or
cmp
les
jo
sbb
push
outs
and
mov
jmp
mov
inc
pop
sbb
retf
outs
(bad)
push
inc
or
push
jmp
imul
(bad)
xlat
pop
in
shl
arpl
pusha
sub
xchg
lods
cmp
bound
aaa
jge
repnz
jge
stc
sahf
stc
in
pop
loope
fimul
jmp
mov
sti
jp
ror
into
add
add
jecxz
jmp
xchg
outs
dec
loop
(bad)
(bad)
xor
dec
mov
xor
dec
in
cdq
and
jno
mov
daa
sub
rcl
jnp
mov
cmp
ror
push
stos
shr
push
jb
lea
retf
repz
loope
imul
add
and
das
mov
shr
sbb
repnz
iret
inc
jo
pop
push
jle
dec
or
aam
sub
imul
or
(bad)
test
fidiv
xchg
out
inc
dec
ja
addr16
xchg
mov
adc
iret
or
stos
add
lds
sub
adc
out
dec
jmp
mov
dec
js
mov
push
and
pop
in
sbb
or
cdq
ret
push
push
in
je
add
sbb
fmulp
sar
(bad)
nop
es
test
xchg
xor
and
add
jno
shl
or
mov
and
pop
xor
push
ins
dec
int
push
xor
mov
out
mov
sub
xchg
icebp
ret
inc
gs
and
movs
shl
and
jmp
or
enter
loop
enter
add
mov
scas
inc
push
jl
retf
div
sub
pop
mov
repnz
mov
rol
js
mov
das
pop
imul
imul
push
fdiv
hlt
xor
cli
std
out
xchg
out
retf
sub
jbe
xchg
mov
sbb
mov
and
mov
test
fwait
retf
(bad)
out
dec
mov
sub
pusha
ja
je
repz
xchg
loope
jo
ins
pop
shl
cmp
fsub
(bad)
imul
push
movs
cli
popf
mov
and
sub
(bad)
jp
repnz
es
jbe
xchg
cmp
pop
out
(bad)
and
mov
loopne
repnz
xchg
aam
sahf
push
cmp
mov
imul
mov
mov
mov
mov
pop
in
jae
loope
dec
stos
mov
mov
(bad)
jmp
cmps
imul
fisubr
(bad)
fdivr
hlt
jp
xchg
xor
push
sbb
or
adc
cmp
int3
mov
push
cmps
iret
inc
mov
int
or
mov
xchg
adc
leave
cmp
mov
sbb
test
test
retf
popa
or
sbb
rol
push
fwait
sub
inc
movs
js
jns
cmp
cmc
test
inc
mov
(bad)
daa
xor
mov
xor
or
scas
sbb
cmp
mov
and
repz
loope
or
mov
sbb
xor
mov
jg
loop
xchg
lea
sbb
das
lea
imul
push
xor
adc
rcl
and
cdq
in
aaa
mov
retf
jae
mov
xchg
mov
imul
pusha
inc
adc
xchg
cdq
xchg
dec
pop
mov
into
test
jae
scas
daa
mul
sub
test
push
push
sbb
mov
mov
mov
adc
pop
int
mov
aad
(bad)
push
cs
sahf
adc
dec
xor
push
int3
mov
je
xchg
add
mov
add
scas
dec
daa
das
push
ins
hlt
push
mov
and
cmps
inc
test
call
ins
mov
add
cmp
ret
mov
outs
fs
mov
sbb
(bad)
fnsave
mov
xchg
jne
mov
(bad)
outs
scas
or
push
mov
inc
jg
setne
int
movs
mov
daa
lahf
sbb
jl
out
in
inc
ins
fs
pop
lods
ss
jmp
rcr
ds
neg
pcmpeqw
add
test
sbb
and
or
fiadd
inc
xlat
add
fyl2x
push
outs
pavgb
sbb
pop
jmp
adc
test
sub
hlt
sbb
stos
lahf
cwde
add
arpl
gs
dec
push
cwde
pop
sub
mov
(bad)
iret
or
xor
ror
dec
mov
daa
cmp
sbb
and
int
sar
sub
mov
pop
call
mov
and
cmp
add
es
pop
or
call
mov
jae
add
dec
or
or
(bad)
idiv
rcr
push
or
xlat
add
xchg
cmp
outs
cmp
sbb
lods
inc
sbb
cmp
sbb
sub
xor
mov
dec
adc
shl
inc
sbb
inc
cmp
push
call
add
imul
jp
or
xor
jae
xchg
push
ret
in
push
xchg
push
lea
xchg
mul
adc
adc
fs
mov
pop
inc
push
retf
jo
dec
sub
repz
dec
repnz
iret
fst
(bad)
sti
cmp
sub
popf
sub
adc
(bad)
jb
aaa
mov
sar
int3
push
xor
adc
fist
push
lsl
adc
jno
cmp
sub
jnp
enter
rcr
jmp
jae
movs
sbb
inc
loopne
mov
std
dec
xchg
dec
pop
xor
lods
movs
cmp
int
mov
in
pop
push
int
inc
int3
jmp
sbb
xor
add
ret
sub
scas
sbb
cmp
out
addr16
cmp
ins
addr16
movs
add
pop
pop
pushf
stos
dec
je
push
jb
adc
xor
retf
inc
push
in
jmp
aas
jl
inc
jecxz
jne
xchg
cdq
push
mov
int
xor
stos
xchg
pop
mov
xor
adc
pop
cmp
div
jp
xchg
jp
xchg
enter
jp
cmp
ret
sub
inc
push
cmps
lods
stos
mov
mov
adc
mov
sbb
outs
push
clc
dec
dec
test
jl
nop
in
cmps
sub
jmp
imul
mov
out
fwait
mov
loope
imul
adc
mov
jle
dec
sahf
fstp
jae
rol
or
cmp
loope
mov
push
js
jmp
jmp
push
pushf
push
xor
and
and
jg
fldenv
and
push
pop
ficom
out
dec
xor
pop
cmp
jb
mov
(bad)
cmps
add
ss
(bad)
cmp
or
dec
jne
pop
cmp
mov
and
int
mov
pop
imul
ins
xchg
xor
(bad)
ins
or
call
lahf
and
adc
sub
dec
pop
imul
je
push
pop
data16
cmp
sti
push
inc
xchg
lahf
jno
leave
mov
add
mov
push
push
fistp
mov
cmp
cs
cmp
fs
jge
xchg
and
sub
(bad)
rcr
ror
mov
push
xor
imul
mov
test
cli
loop
push
mov
mov
call
das
std
call
shl
jmp
xchg
dec
mov
dec
mov
cmps
sbb
dec
mov
mov
push
sub
mov
fst
mov
jne
adc
retf
add
pop
push
sub
fild
sti
cmp
lods
pusha
(bad)
add
xor
sbb
shl
test
fwait
xchg
inc
sub
mov
push
mov
jmp
dec
mov
sbb
pusha
ins
xchg
icebp
stos
jmp
lods
mov
lods
ror
retf
out
addr16
repnz
inc
stos
clc
cmp
mov
test
push
loop
add
pop
das
pusha
xchg
sbb
mov
cmp
pop
sub
(bad)
pushf
pushf
cmp
inc
xor
mov
or
push
ror
adc
dec
cmp
xor
sysenter
xchg
mov
xor
outs
stos
add
out
call
xor
fdiv
imul
xchg
fdiv
cdq
sbb
push
xlat
push
mov
or
mov
jle
leave
cmp
pop
mov
lods
(bad)
xchg
pop
lahf
inc
shl
(bad)
mov
xor
dec
or
mov
mov
pop
movzx
stos
pop
dec
js
ret
js
mov
push
pop
jle
aas
fild
das
dec
movs
inc
pop
cmps
push
sbb
enter
shl
add
call
sti
xchg
jp
add
imul
stc
mov
in
ror
inc
sbb
xor
pop
add
push
movs
pop
cmp
aad
or
sub
pop
mov
mov
cmp
mov
inc
cmp
std
xor
dec
leave
pop
out
xchg
xchg
and
sub
ret
ds
jp
mov
movs
adc
mov
add
cld
cmps
mov
ror
cmp
mov
adc
fadd
or
inc
nop
in
pop
outs
xchg
loopne
push
xor
push
adc
gs
loopne
jbe
mov
mov
push
xchg
mov
adc
pop
cli
sub
cmp
fdivr
fmul
add
mov
rol
xchg
dec
mov
or
inc
loope
sbb
ret
(bad)
je
in
pop
fwait
jne
dec
test
push
shr
push
cmp
mov
xchg
adc
xchg
add
fdiv
sahf
dec
cli
ss
enter
jmp
loop
xchg
test
xchg
aad
cdq
and
pop
mov
loope
movs
cmc
je
out
xchg
add
sahf
cmp
inc
mov
mov
xor
add
out
adc
test
mov
sub
imul
push
and
scas
and
int3
hlt
in
push
jbe
mov
sub
cdq
(bad)
stos
stc
repnz
enter
mov
ret
call
(bad)
sub
leave
out
call
mov
lods
int
push
xchg
clc
and
jne
cmp
push
cmps
fisubr
fwait
adc
rcr
cmp
cwde
comiss
mov
fstp
ins
mov
or
mov
xchg
shl
dec
mov
fild
mov
enter
push
sub
pop
sub
stc
das
lods
repz
push
fdivr
popf
and
xor
cmp
mov
pop
add
neg
jnp
repz
dec
sbb
pusha
xchg
jl
repz
or
out
sub
xchg
cmc
cmp
mov
aad
pop
inc
fist
nop
pop
jmp
xor
mov
sbb
adc
call
les
mov
cli
clc
ret
aas
imul
out
jg
pop
or
pop
ds
or
aad
aas
mov
adc
cmps
or
test
jecxz
jmp
outs
push
stos
pop
sbb
repnz
test
sbb
nop
cwde
rcr
adc
fstp
loope
(bad)
jge
xchg
test
rcr
cmp
dec
fldcw
add
in
push
stos
add
pop
push
dec
out
int
popa
sbb
pop
call
loope
xor
in
movs
std
push
xchg
push
inc
out
lods
fldenv
jnp
jl
in
push
(bad)
mov
mov
sub
mov
pop
ret
fs
xchg
add
xchg
stos
ins
and
fs
div
int3
jno
call
bswap
mov
xchg
dec
sbb
inc
push
sbb
xor
mov
dec
out
mov
mov
sub
mov
leave
jno
cmps
cli
jle
js
lods
push
sub
shl
stc
sbb
adc
popa
sbb
or
or
jno
dec
push
mov
cmp
sbb
inc
repz
call
sbb
aaa
push
bound
imul
mov
sub
ret
cld
fmul
or
push
ja
jmp
and
jnp
outs
in
int3
add
call
mov
test
loope
lods
xchg
shl
hlt
imul
xchg
shl
pop
sub
xchg
(bad)
cli
bound
jp
cmp
icebp
dec
sbb
cmp
jno
movs
adc
(bad)
pop
or
sub
sbb
adc
cmp
jnp
pop
mov
xchg
mov
inc
pushf
ds
pop
xor
call
in
and
and
popf
or
adc
shl
pusha
mov
clc
es
ins
movs
sub
dec
int3
cdq
lods
(bad)
jl
rcr
lea
add
push
sbb
mov
cmps
aam
dec
jno
cmps
xchg
in
cmp
mov
jp
subps
sbb
ret
sbb
jecxz
pop
repnz
push
daa
movs
jmp
in
sub
rcl
ins
ret
push
sub
jl
aaa
mov
aad
mov
jecxz
es
sbb
shr
push
test
fistp
hlt
mov
ret
ss
push
ja
in
push
sar
ret
inc
test
mov
sbb
scas
stos
jb
push
xchg
mov
and
inc
inc
and
int3
ret
xchg
(bad)
xchg
js
iret
sbb
xchg
adc
dec
(bad)
ins
xor
sahf
pop
retf
adc
push
adc
xchg
out
ror
call
mov
dec
mov
add
mov
call
jecxz
repz
mov
jne
fs
fiadd
cwde
mov
aad
jl
cmp
jae
nop
scas
ss
xchg
sbb
sbb
inc
test
add
mov
add
or
fst
es
inc
mov
mov
add
pop
rol
popa
sub
dec
adc
adc
out
aaa
ja
sub
pop
test
and
cmp
loop
icebp
mov
mov
aas
in
push
jnp
mov
jb
cs
sbb
or
mov
jb
fmul
stc
lds
pop
xor
sub
mov
push
hlt
and
rol
(bad)
xor
mov
dec
xchg
iret
inc
cld
hlt
xchg
jno
aaa
clc
ja
(bad)
xor
pop
add
test
or
in
bound
stos
rol
push
push
inc
xor
int
(bad)
pusha
ret
jns
sbb
mov
push
bound
fmul
or
fwait
cli
bound
sub
cmp
pop
mov
ret
test
cmp
add
rol
cli
inc
nop
(bad)
mov
lods
inc
pop
dec
test
imul
xor
push
jecxz
push
cmps
lea
mov
rcl
fwait
std
inc
push
fadd
js
lods
add
push
push
in
adc
inc
xchg
out
fnclex
icebp
fisubr
clc
pop
mov
pop
dec
test
xchg
or
xchg
sub
imul
leave
mov
daa
mov
or
jmp
je
and
push
inc
aaa
fldcw
add
lock
jl
in
pop
mov
add
sub
push
mov
(bad)
xor
int
out
ja
ss
pop
dec
push
adc
bound
sbb
jge
imul
sbb
pop
ins
dec
add
mov
scas
retf
js
fmul
loope
call
mov
push
push
rcl
dec
add
mov
dec
pop
mov
sbb
rcl
scas
jnp
cs
mov
fbstp
ins
imul
les
sar
push
ret
pushf
pop
push
pop
out
(bad)
or
sub
out
popa
sub
mov
rol
mov
dec
dec
test
imul
adc
mov
pushf
(bad)
sbb
outs
cmp
call
lods
ret
cs
mov
mov
jp
ret
xchg
adc
call
pop
ds
mov
(bad)
or
or
bound
cmc
loope
xlat
dec
call
push
shl
ror
das
pop
ss
loope
bound
xchg
int
sbb
dec
adc
sbb
js
push
push
outs
shr
jle
dec
loopne
push
sub
jg
movs
mov
in
mov
mov
push
push
pop
out
stos
inc
pop
mov
outs
push
mov
pop
imul
and
loop
dec
push
leave
mov
lods
popa
push
xchg
add
stos
pop
icebp
popf
pushf
xchg
push
daa
call
jg
mov
mov
xor
xor
adc
mov
xchg
call
std
aas
cmp
and
addr16
and
xor
push
dec
or
dec
sub
aaa
shl
push
stc
movs
inc
fcomp
fs
pop
jg
ret
jecxz
inc
add
jl
mov
inc
out
(bad)
repz
cdq
pop
mov
add
inc
js
pop
fiadd
aam
leave
in
and
(bad)
mov
push
adc
jb
mov
pusha
sbb
ror
clc
stc
jmp
inc
scas
jo
popf
dec
in
push
aas
mov
call
icebp
iret
mov
jle
push
lock
mov
mov
rcr
xor
mov
pop
or
fadd
inc
in
mov
xchg
ss
cmp
ret
fdiv
push
jno
ret
jmp
sahf
add
int3
sub
push
pop
rcl
das
and
mov
add
fdiv
fsub
fidivr
mov
sbb
mov
in
mov
mov
and
dec
lock
jg
sbb
mov
inc
cdq
inc
not
mov
(bad)
mov
inc
mul
ficom
ss
mov
clc
or
enter
lock
and
daa
mov
ror
inc
lock
mov
das
das
xchg
inc
rcr
cmp
cmp
out
shl
pop
dec
cmc
fidiv
mov
sahf
jnp
retf
add
sbb
push
mov
int3
push
pop
adc
rol
jb
gs
cs
cmc
enter
je
imul
stos
cmp
inc
and
retf
test
sahf
imul
dec
stos
test
je
mov
inc
ins
fmul
mov
mov
push
loop
push
sub
call
cmps
aad
add
xor
mov
sbb
fld
lds
aam
in
jmp
mov
not
mov
ins
in
add
inc
mov
cmp
dec
daa
enter
iret
dec
leave
out
mov
pop
shl
push
push
loope
inc
cs
dec
mov
push
sbb
arpl
sub
and
fld
cmp
in
pop
dec
mov
jno
pop
cwde
sbb
mov
pop
push
in
push
leave
fisttp
daa
xchg
fldcw
icebp
inc
inc
sbb
dec
sahf
sbb
sbb
(bad)
sbb
cmps
or
retf
inc
leave
push
adc
sbb
cmp
sbb
lds
or
sbb
icebp
dec
fwait
mov
in
mov
sbb
test
dec
push
bound
lods
daa
test
lahf
sti
mov
jle
loop
retf
(bad)
pop
sub
sbb
jbe
(bad)
aaa
in
push
out
dec
(bad)
jle
or
loope
push
stos
popa
addr16
mov
lahf
mov
sub
rcr
in
out
push
xor
dec
sub
mov
pop
mov
shr
ret
fs
sbb
mov
jno
adc
mov
sub
sub
jg
push
mov
sbb
and
out
or
je
jp
data16
pop
mov
jecxz
neg
in
neg
dec
repz
retf
bound
adc
cmp
jo
test
push
dec
les
dec
(bad)
popf
xor
std
test
in
ret
jne
inc
cli
cs
xchg
lock
xor
or
fs
add
or
xor
bound
adc
std
in
outs
jmp
inc
inc
cmps
and
mov
aaa
adc
jo
push
shl
ja
(bad)
in
mov
pusha
scas
in
mov
pop
pop
and
in
push
push
test
iret
adc
test
ds
mov
into
or
jnp
outs
sti
jno
inc
push
xchg
enter
dec
xchg
das
repnz
sub
mov
sbb
xor
aad
xchg
mov
sbb
adc
inc
loop
lock
nop
stos
out
sti
adc
into
add
xor
test
dec
mov
or
cmps
pop
add
ins
jbe
std
dec
cmp
ds
cmp
xor
das
cmps
data16
popa
shl
push
and
fwait
mov
adc
or
pop
dec
jl
push
rol
outs
inc
xchg
push
pop
pop
lods
repnz
stos
hlt
inc
xor
dec
inc
dec
cmp
or
sub
lods
ds
jae
stos
or
pop
mov
xchg
cdq
cmc
aad
pop
cmc
mov
ins
mov
xchg
add
mov
clc
in
out
imul
push
pop
clc
mov
push
aas
dec
call
cmp
gs
add
dec
or
push
prefetch
gs
pop
ja
ret
mov
clc
pusha
mov
push
push
shl
add
adc
lods
xlat
call
pop
push
mov
jno
imul
frstor
push
enter
les
aas
in
and
std
scas
jb
cdq
ins
fst
loopne
dec
add
jnp
adc
lods
or
rol
jne
xchg
add
add
push
mov
hlt
jb
push
mov
imul
adc
dec
push
sbb
pop
pop
xor
or
sti
jns
mov
mov
jae
pop
xchg
and
push
push
das
fimul
rcr
add
ror
(bad)
pop
jle
dec
adc
pushf
mov
push
dec
iret
dec
out
cmps
lahf
movs
dec
or
adc
(bad)
ss
xchg
data16
out
and
mov
daa
pop
jecxz
xchg
add
dec
js
jnp
jmp
adc
xchg
mov
pop
mov
out
jg
pop
push
push
adc
cs
sbb
ret
inc
push
ret
mov
(bad)
nop
aas
mov
cmc
bound
dec
mov
mov
outs
pop
xchg
mov
jnp
jmp
aas
cmp
push
mov
dec
push
cmp
into
shr
or
jns
pop
or
and
push
fwait
add
aas
rol
push
jl
sub
mov
mov
dec
arpl
loopne
mov
frstor
aas
push
and
inc
push
repnz
sbb
lock
add
std
test
mov
inc
sbb
push
push
mov
add
jg
les
out
arpl
inc
and
out
call
or
add
sub
push
enter
jmp
cmps
xor
push
push
jg
lods
jnp
push
call
jns
shl
stos
ss
fwait
cmc
loop
test
xor
scas
pop
frstor
jle
fwait
clc
xor
and
dec
aaa
xchg
adc
pop
or
mov
jle
mov
cwde
sahf
inc
jle
add
xchg
iret
mov
loop
stc
jo
cld
jo
or
jbe
push
or
jno
popf
mov
inc
pop
pop
ret
mul
ins
sar
hlt
mov
mov
dec
push
lods
daa
sub
out
cs
sub
xor
sbb
(bad)
pop
push
jns
ins
sub
mov
loope
push
xchg
(bad)
mov
(bad)
pop
enter
in
(bad)
sbb
inc
xchg
xchg
addr16
xchg
std
mov
shr
push
jge
sub
fisttp
movs
mov
in
ret
ficom
push
inc
push
scas
or
mov
jbe
hlt
stos
sbb
jae
sbb
xor
cld
pop
stc
das
lahf
push
mov
inc
rcl
mov
sbb
in
lods
add
sbb
sbb
gs
pop
in
in
dec
(bad)
int
test
pop
push
adc
pop
cmp
mov
xor
jl
push
mov
or
test
mov
(bad)
mov
or
mov
lea
xchg
and
pop
jmp
sbb
dec
jnp
mov
mov
sbb
add
pusha
cli
or
mov
retf
sbb
js
xor
jnp
add
xchg
fadd
mov
cmp
cmp
and
jbe
jo
std
xchg
ins
outs
daa
clc
and
lock
sbb
dec
adc
mov
inc
mov
mov
sub
mov
xor
xor
inc
push
add
in
pop
dec
sub
sub
cmps
pop
stos
mov
mov
pop
or
std
aad
sti
rol
sbb
inc
fldz
inc
push
cmp
mov
test
mov
rcr
xor
aas
or
pop
fisttp
fwait
popf
push
dec
xor
xchg
xor
repnz
xchg
out
sub
dec
lock
loope
test
xchg
mov
xor
cmps
popa
fwait
push
retf
les
xchg
or
icebp
mov
add
mov
sbb
adc
pop
movs
cmp
les
pop
imul
push
xor
int3
xchg
and
or
or
cld
retf
fwait
add
test
adc
imul
shr
dec
jns
push
inc
scas
stc
add
out
enter
xchg
and
push
and
daa
or
mov
cmps
(bad)
call
cmps
cmc
xchg
sbb
mov
shr
stos
mov
nop
movs
xor
jbe
jecxz
pushf
or
(bad)
pushf
int3
mov
es
mov
stos
div
in
push
mov
mov
outs
xor
(bad)
mov
js
and
xor
(bad)
push
and
sahf
xchg
stos
dec
mov
cdq
xor
dec
pop
aam
add
xchg
jl
pop
popa
fidivr
xchg
daa
mov
stc
cmps
sahf
in
movs
pop
and
out
gs
lea
xlat
dec
lods
pop
test
pop
out
test
std
sbb
retf
stos
and
pop
pushf
mov
cmps
sub
xor
mov
leave
adc
fbld
push
xchg
add
and
aad
dec
ja
test
in
retf
ret
call
cmp
xchg
mov
and
int3
ret
fcomp
lds
call
into
or
(bad)
add
pusha
push
push
out
push
loope
mov
out
cwde
pop
ficomp
mov
mov
lds
outs
(bad)
mov
fwait
rcr
lea
dec
push
mov
shl
daa
ret
adc
(bad)
imul
push
lods
pop
fldcw
dec
mov
jnp
iret
jns
and
inc
fbld
sbb
fldl2e
inc
out
mov
loope
jge
shl
retf
out
add
xchg
jle
ss
lds
sub
fidiv
jg
adc
ins
mov
(bad)
mov
mov
inc
adc
fnsave
in
sub
xor
(bad)
sbb
sub
cmp
ret
inc
adc
cmp
outs
push
jns
xchg
lods
mov
ins
loop
dec
mov
xor
sbb
ja
push
ds
mov
inc
jge
mov
xchg
ins
in
sti
ja
pop
adc
outs
cmp
sub
lea
xchg
jle
test
ret
add
push
mov
add
sbb
lds
mov
push
(bad)
and
shr
fbld
loopne
movs
push
test
jb
sbb
rol
pop
pop
mov
(bad)
(bad)
xor
fwait
aaa
je
test
pop
scas
adc
xchg
push
cmp
cld
cdq
sub
push
cs
dec
jecxz
test
ret
mov
jge
ins
jg
outs
lods
out
lods
in
sar
in
pop
(bad)
cmp
ja
cmp
xor
inc
mov
mov
movs
inc
xor
sahf
scas
jb
test
and
fcom
pusha
xor
rcr
mov
in
or
adc
popf
das
adc
lds
push
inc
imul
leave
dec
inc
mov
adc
push
pop
or
inc
test
pop
cli
sub
jns
and
and
es
inc
std
loopne
mov
and
or
cdq
xlat
add
clc
mov
mov
out
leave
cdq
ror
dec
add
movs
inc
loope
pop
cmp
fbstp
jge
cmps
mov
pop
fistp
pop
cmp
adc
and
push
pop
push
lahf
mov
shl
jecxz
clc
and
mov
cmp
add
pusha
fimul
arpl
call
sub
into
mov
(bad)
pop
out
arpl
jb
aaa
adc
inc
pop
sbb
cmp
jbe
sbb
adc
xor
imul
jge
sbb
push
sub
dec
shl
cs
nop
arpl
jp
shl
dec
loope
mov
fdivr
push
or
jmp
in
dec
(bad)
stos
enter
stos
out
sub
cwde
sysenter
pop
pop
push
sub
int3
push
in
and
sbb
test
push
es
push
pop
xchg
mov
and
cmp
out
(bad)
inc
out
rep
out
or
push
xchg
adc
dec
push
mov
cwde
sub
sub
scas
test
fsubrp
adc
adc
out
je
push
mov
addr16
mov
movs
cmp
aam
push
sub
xchg
jge
aas
or
out
fsub
(bad)
inc
cmc
push
pop
fimul
mov
push
mov
inc
dec
jmp
inc
mov
xchg
push
pop
sub
sbb
retf
mov
mov
mov
inc
loop
fwait
std
or
loop
iret
les
into
cmp
mov
call
cld
jns
jae
aaa
sub
mov
cmp
fidiv
test
ins
mov
jl
xchg
dec
push
xor
mov
push
stc
xor
outs
jl
adc
cmp
and
sub
inc
add
fistp
add
les
mov
out
xchg
in
xor
cmp
(bad)
(bad)
lock
cs
test
test
addr16
es
hlt
xchg
mov
(bad)
and
cli
or
sbb
xlat
lods
adc
iret
ret
fdivr
popa
loopne
push
push
pusha
mov
cmp
cwde
std
push
mov
xchg
test
sar
jp
inc
jno
outs
loope
mov
nop
outs
xchg
pop
dec
or
lahf
dec
cs
xchg
mov
outs
xchg
dec
push
fadd
leave
or
(bad)
xchg
pop
cmps
pop
sub
aad
jmp
outs
inc
inc
mov
lods
dec
xchg
stos
mov
aad
jo
sbb
xor
xor
sbb
mov
dec
gs
lods
xchg
inc
mul
adc
sbb
sti
xchg
sbb
fs
pop
movs
sub
fidivr
imul
xor
sub
dec
add
fs
inc
push
jns
loop
pushf
xor
cwde
mov
xchg
enter
add
sub
xor
sub
sbb
lds
and
mov
call
push
rcr
dec
out
fiadd
dec
lods
xchg
xchg
push
mov
xchg
adc
sbb
xchg
jmp
inc
inc
call
scas
les
nop
movs
test
popf
icebp
push
(bad)
sbb
shl
dec
cmps
xchg
xchg
ins
test
mov
pop
les
es
les
jae
inc
std
sbb
call
imul
ficomp
ds
xlat
or
mov
pop
pop
test
inc
popa
shl
int3
in
push
push
xor
out
cmp
jbe
les
mov
(bad)
jae
mov
push
or
jle
ins
cmp
push
dec
fs
push
push
sub
retf
mov
sub
inc
jo
or
popf
jmp
lock
add
out
sbb
popf
xchg
rcr
or
inc
adc
retf
ret
jo
xor
outs
jne
mov
cwde
or
lds
cs
popa
les
ret
movs
ins
ret
dec
xor
xlat
imul
mov
das
pop
out
out
loopne
scas
xlat
cmp
arpl
xchg
les
cmc
lock
es
cmp
jge
xchg
pop
pop
pop
and
lods
fld
rol
lods
ja
pop
xchg
daa
aam
mov
lahf
jns
cs
ja
pop
cmp
retf
cli
inc
(bad)
data16
std
test
mov
push
push
inc
or
dec
mov
dec
lds
add
in
cmc
push
out
bound
xor
jmp
mov
push
pusha
inc
mov
add
fdiv
mov
(bad)
add
sahf
xchg
test
add
cmp
lds
cs
jns
xor
inc
mov
cmp
push
pop
shr
sub
in
sti
mov
and
mov
les
jl
outs
dec
scas
adc
std
and
dec
mov
sub
push
sub
(bad)
mov
call
cld
and
ror
aam
scas
stos
fdivrp
jp
das
enter
add
lock
rcl
out
mov
add
xchg
jnp
add
inc
or
mov
and
ja
mov
mov
sub
add
lods
mov
loopne
sti
cmps
jbe
imul
hlt
imul
add
and
fisubr
jbe
lods
fimul
fsub
xchg
and
daa
jge
mov
xor
outs
outs
jecxz
mov
cmp
pop
mov
adc
mov
add
pop
cmps
leave
push
sub
mul
push
fcmovnbe
stos
push
iret
pushf
add
mov
inc
shr
and
fnstsw
movs
jmp
mov
imul
lods
jp
lock
and
add
data16
jae
fisubr
mov
mov
test
dec
out
mov
sub
aad
dec
dec
dec
outs
int3
dec
jns
xchg
out
pop
add
cmps
mov
neg
mov
push
fwait
and
(bad)
test
out
sbb
sbb
(bad)
lea
aad
pop
cs
xchg
xor
inc
xchg
adc
ds
rcl
mov
xor
jnp
sahf
add
pop
lds
inc
in
outs
dec
ret
push
push
mov
mov
bound
xchg
dec
imul
xlat
movs
pop
push
inc
dec
popf
mov
xchg
dec
imul
(bad)
out
sbb
out
xor
das
cld
mov
or
mov
sub
ds
sub
test
pop
jecxz
mov
sub
xor
xlat
dec
xchg
push
data16
shl
push
inc
jl
xlat
fninit
int3
mov
push
test
cdq
sub
rol
mov
pop
cmps
sar
bound
jb
scas
xor
dec
ret
fisttp
push
xchg
mov
add
lods
movs
jp
or
pop
loope
inc
mov
into
cmp
mov
or
test
or
xchg
cli
and
xlat
pop
cmp
jnp
lods
push
stc
sahf
push
stos
mov
mov
push
cmc
xor
sbb
shr
and
lods
adc
cmp
mov
cmp
stc
xor
sahf
ss
adc
mov
mov
fwait
pop
sahf
jle
(bad)
pushf
(bad)
adc
mov
jae
fist
retf
inc
ins
pop
add
add
fisubr
mov
inc
cld
imul
mov
cwde
gs
repnz
mov
push
sub
fmul
sub
enter
test
cmps
cmp
adc
lds
sbb
hlt
rcr
and
sbb
div
jnp
sub
mov
xor
lahf
mov
outs
psrld
in
xadd
mov
adc
aaa
jg
adc
retf
sub
mov
add
mov
fidivr
pop
dec
xchg
xchg
cmp
add
inc
inc
push
add
fdivp
int3
mov
mov
pop
in
loopne
mov
mov
mov
aas
scas
dec
adc
(bad)
call
leave
stos
adc
cmp
nop
int3
nop
xlat
out
jae
dec
je
hlt
pop
xor
push
gs
jne
stos
ds
(bad)
cmp
mov
inc
xor
movs
call
cli
enter
cmc
data16
mov
popf
mov
mov
setge
pop
int3
leave
(bad)
jae
and
(bad)
dec
xchg
push
jae
mov
push
sbb
adc
pop
out
jg
or
inc
test
cmc
fild
jne
xor
imul
das
daa
cwde
xchg
or
lds
xlat
sbb
dec
jne
inc
push
mov
inc
mov
dec
int
push
hlt
neg
adc
jbe
ret
jg
cld
mov
stos
icebp
mov
das
into
push
test
test
adc
adc
int3
push
hlt
mov
mov
nop
or
(bad)
pop
retf
adc
ror
lahf
cli
cmp
inc
shr
xor
and
mov
maskmovq
sar
lea
pop
mov
jno
lds
gs
and
mov
stos
pusha
enter
data16
dec
mov
movs
fst
cmc
mov
loope
mov
rcr
fs
pop
inc
mov
mov
imul
cmps
jle
inc
jmp
and
movs
pop
in
jge
lods
xor
popf
pop
xchg
mov
iret
leave
adc
out
dec
sub
fdivr
fs
scas
push
push
sti
neg
lds
xor
repz
jl
pop
adc
and
dec
fiadd
and
add
addr16
mov
pop
ret
and
lea
pusha
loop
pop
push
or
mov
movs
aad
cmp
xor
push
ret
or
ins
hlt
(bad)
or
into
or
popf
jl
xor
popa
push
fist
pop
or
sti
mov
hlt
es
and
jb
fist
xor
iret
ins
and
inc
repnz
mov
mov
leave
sbb
adc
mov
cmp
xchg
fldcw
mov
adc
dec
add
aaa
jno
popa
inc
add
jne
add
rcl
out
pop
daa
xchg
sub
leave
push
es
dec
rcl
sti
cs
in
cmc
pushf
mov
aad
mov
nop
and
test
dec
push
dec
add
jns
aam
jb
xchg
shl
pop
jg
fadd
mov
xor
pop
jp
es
xchg
xchg
cmp
jecxz
out
xchg
cmc
mov
sti
xor
sti
push
inc
das
xor
pop
lahf
sbb
sbb
jmp
push
daa
xchg
cmc
dec
inc
mov
stc
and
mov
push
out
arpl
or
clc
ss
sbb
or
jmp
not
aad
and
jge
cmp
add
pop
ficomp
add
inc
mov
mov
mov
xchg
jle
cmp
jo
mov
out
rol
mov
sbb
cmp
movups
mov
(bad)
pop
(bad)
lock
xchg
mov
dec
call
adc
ja
and
push
jg
ret
pop
sbb
inc
idiv
jns
push
xor
inc
sbb
into
adc
ret
(bad)
and
mov
pop
jbe
inc
xchg
jno
ss
push
and
std
ins
dec
or
cmps
or
clc
jnp
pop
jns
inc
aaa
popa
cs
cdq
jnp
jge
mov
xchg
mov
inc
or
cmp
push
retf
cli
pop
lds
arpl
ret
psrlw
aas
cmps
loope
outs
shl
pop
out
jns
sbb
loopne
mov
fsqrt
das
and
pop
adc
call
mov
push
out
mov
xchg
cmp
mov
or
add
(bad)
inc
or
or
mov
test
sub
push
mov
jo
add
call
add
jb
movups
cdq
adc
push
into
fmulp
dec
mov
cdq
ret
xor
iret
push
mov
int3
out
mov
retf
addr16
dec
outs
dec
mov
inc
into
fcomp
(bad)
xchg
mov
fisubr
lock
sbb
shr
mov
xchg
or
sbb
and
jp
call
inc
fwait
cdq
jl
xor
mov
inc
sub
or
aaa
push
pop
cmp
cdq
loope
sbb
jmp
pop
ds
cs
push
or
pop
dec
lods
mov
add
call
fwait
adc
ret
inc
(bad)
cmp
and
std
aas
movs
pop
mov
fnstenv
dec
or
mov
mov
push
cmp
mov
mov
ins
or
and
out
fisub
inc
jbe
idiv
sub
fist
pop
lds
das
aam
dec
mov
push
xchg
xchg
xchg
cmp
call
mov
sbb
dec
pop
fcom
jmp
je
sbb
repz
enter
sti
lock
jb
sub
inc
aad
mov
loopne
mov
jno
cmp
mov
ss
xchg
into
dec
pop
daa
in
or
push
xchg
cwde
imul
mul
mov
or
jmp
pop
rep
js
in
out
pop
ficom
jns
(bad)
or
inc
in
shr
nop
sar
shr
jb
jne
push
or
sub
adc
bound
les
fstp
sbb
popf
lock
clc
loopne
push
mov
out
shr
add
cmps
sub
add
mov
aad
clc
and
or
repz
xchg
fadd
loope
imul
iret
mov
call
sbb
fs
in
jmp
mov
pop
jb
fdivr
test
in
ins
xchg
push
xchg
ss
out
mov
iret
or
xor
inc
ror
inc
stc
and
push
jge
aaa
scas
je
or
arpl
mov
sbb
cmps
imul
lods
call
mov
bound
in
shl
pop
push
inc
aaa
pop
mov
mov
mov
js
fdiv
cld
and
cmps
icebp
(bad)
sbb
xor
inc
pop
add
in
mov
icebp
ja
scas
enter
cmc
mov
or
push
push
jne
fwait
shr
hlt
sub
out
ins
shl
add
ret
rcr
mov
fld
fucomip
out
ja
es
add
mov
inc
clc
neg
movs
imul
jecxz
adc
jns
sbb
cmp
pop
inc
outs
std
push
xchg
call
rcl
push
aas
add
xchg
aas
jne
das
mov
adc
dec
pop
mul
jl
cs
sub
inc
pop
lea
dec
or
loope
sbb
test
sub
add
cdq
fdivr
push
cmp
fmulp
jnp
sar
jmp
mov
xchg
ja
shl
add
test
inc
das
in
popa
add
pop
mov
inc
sar
in
in
xchg
xor
(bad)
fist
mov
retf
push
pop
xchg
mov
aas
test
ins
xchg
mov
in
xchg
or
pop
cmps
int
test
sbb
sub
dec
je
(bad)
js
gs
clc
or
sbb
jl
cwde
sub
push
jb
hlt
stc
ins
in
movs
add
inc
jle
xchg
pop
fucomip
or
icebp
xor
xor
outs
sti
(bad)
sti
or
mov
inc
sub
ret
xchg
cmp
xchg
push
sbb
add
xchg
sbb
hlt
ja
pop
ret
arpl
jmp
jno
arpl
jb
or
inc
ret
aam
and
lds
les
imul
fldcw
gs
cmp
mov
cld
mov
rcl
pop
mov
inc
in
inc
xchg
xor
fnstsw
xor
mov
cwde
jge
aad
int3
repnz
mov
mov
dec
test
mov
add
adc
fs
pop
das
pop
shl
call
icebp
int3
bound
repz
je
sub
pusha
cli
or
mov
xchg
cmp
cmps
or
les
xor
ja
cs
jmp
cld
xchg
mov
fdiv
in
jnp
dec
cs
adc
dec
or
sub
jnp
inc
popa
fistp
pop
imul
addr16
hlt
loop
push
retf
fmul
inc
ins
shl
push
leave
cmp
jecxz
and
xchg
mov
ror
stos
or
mov
xor
mov
lahf
fld
xor
jmp
frstor
mov
pop
int3
dec
lahf
in
jae
xlat
mov
dec
adc
retf
jmp
into
xchg
cmp
mov
xchg
jg
mov
sahf
out
lods
xchg
mov
xor
mov
push
cld
xchg
xor
mov
call
ret
xchg
(bad)
lods
clc
retf
jae
jns
push
pop
dec
pop
xchg
or
pop
(bad)
cmp
aas
mov
ds
sbb
fimul
mov
rcr
into
pop
jge
and
(bad)
pop
bound
push
sbb
mov
mov
out
cmp
(bad)
movs
mov
xlat
loopne
cmp
and
and
mov
xchg
jmp
mov
mov
fstp
pushf
mov
add
mov
neg
es
fs
mov
add
mov
pop
mov
and
int
jae
les
or
call
xchg
loop
ja
or
ret
cli
sub
mov
push
(bad)
loope
add
or
push
adc
fsubr
ret
les
add
mov
(bad)
nop
pop
jecxz
and
push
outs
mov
or
call
cmp
add
push
cmp
pop
pop
ds
xchg
push
and
(bad)
fiadd
push
adc
cmp
in
fsubr
pop
xor
iret
jmp
push
xchg
inc
jae
scas
or
int3
mov
fcom
xchg
aam
cdq
in
out
dec
sbb
ins
repz
inc
or
adc
fisubr
std
sub
cmp
xchg
xchg
mov
pop
enter
adc
cmp
xchg
adc
inc
sbb
jmp
and
sub
int
cmp
call
outs
mov
aam
rol
xchg
mov
in
daa
not
pop
jb
lea
mov
jmp
inc
ficomp
or
adc
stos
retf
add
jae
jl
push
pop
icebp
arpl
fiadd
cmp
std
dec
inc
ret
sbb
nop
popf
xchg
jno
frstor
call
dec
lea
(bad)
sub
mov
xor
xchg
stc
jb
std
cmp
std
and
jne
call
xlat
mov
adc
sub
mov
xchg
mov
icebp
jmp
scas
cli
loope
mov
pop
or
mov
mov
cmp
inc
push
adc
or
call
loope
js
rcl
(bad)
(bad)
dec
out
jno
dec
pop
dec
retf
pushf
xchg
mov
inc
xlat
mov
pop
push
jo
iret
and
xchg
ret
arpl
cmp
je
or
ds
fucomip
xchg
or
movs
dec
and
test
(bad)
jmp
mov
std
mov
xchg
xor
cmc
les
inc
sbb
jl
aam
nop
cmp
xchg
or
gs
pop
call
nop
mov
in
cli
add
addr16
push
inc
add
(bad)
scas
fldenv
loope
lds
push
into
sbb
jmp
cs
(bad)
xlat
sub
jecxz
js
sti
inc
stc
imul
inc
jmp
inc
push
ret
sbb
jae
daa
push
cmp
xor
sar
call
adc
(bad)
mov
arpl
push
sbb
movs
sbb
sbb
add
cmp
xor
addr16
or
cmps
cmp
xchg
mov
ret
test
sbb
popf
cmp
cli
aaa
mov
fidivr
pop
imul
xor
and
stos
inc
pop
mov
and
jnp
mov
leave
(bad)
xchg
(bad)
jge
pop
pop
mov
mov
pop
in
fld
sbb
sbb
adc
inc
jge
xor
xchg
add
jge
mov
or
jnp
push
imul
mov
push
scas
cmp
push
outs
sub
enter
cmp
pop
cli
adc
fwait
xlat
jle
in
(bad)
mov
cmps
sahf
add
xor
sbb
(bad)
pushf
inc
lods
inc
(bad)
iret
push
stos
jmp
fsub
in
popf
xor
adc
mov
data16
pusha
int
arpl
test
mov
sub
cmps
xor
ret
or
push
outs
xchg
adc
test
mov
add
dec
mov
mov
dec
add
mov
mov
push
cmp
mov
setbe
add
das
xchg
outs
jle
mov
jge
cmps
pop
fs
fcmovnu
xor
mov
das
sbb
pop
and
push
dec
stos
fidivr
inc
push
push
push
pop
mov
out
dec
ds
cmp
pop
add
xchg
rcl
push
or
test
loopne
repz
je
mov
mov
aas
xchg
mov
outs
out
xor
out
or
and
aam
shl
add
mov
addr16
mov
aad
jge
stos
icebp
fcmovnb
sbb
jbe
push
nop
or
or
inc
retf
xor
fcom
inc
cld
pop
out
ins
pop
sbb
scas
loopne
(bad)
xchg
pop
jo
jae
pusha
fs
push
mov
cli
inc
xchg
xor
(bad)
ror
data16
pop
jne
add
sub
dec
mov
jl
inc
inc
sub
test
dec
and
push
stc
dec
aas
adc
xor
lea
fdivr
add
jmp
mov
mov
jo
jnp
mov
inc
out
adc
test
pop
push
mov
mov
mov
mov
jg
cmps
mov
mov
or
ret
div
in
cli
rcl
cmp
lock
xchg
sbb
jns
or
jae
cmps
add
sub
sub
and
in
lds
or
aad
mov
mov
mov
test
jle
mov
int3
mov
fidivr
push
mov
mov
and
lock
cs
pop
sbb
sbb
ret
mov
xchg
pop
movs
ins
in
sub
sar
aas
and
scas
mov
cmp
xchg
imul
cmp
cwde
sub
pop
or
jo
cli
neg
loope
jle
cmp
add
stc
add
sub
mov
pop
push
fisttp
outs
xchg
pop
add
ret
jne
nop
outs
es
push
das
fwait
sysenter
data16
push
ss
xchg
or
adc
push
out
lds
sub
mov
and
push
or
xchg
xchg
add
mul
in
repnz
add
xchg
mov
scas
xor
aas
mov
scas
test
cdq
dec
pop
jp
div
lock
adc
pop
add
repnz
mov
gs
gs
js
cmc
aas
cmp
imul
fld
(bad)
stos
add
jne
push
movs
dec
inc
mov
mov
mov
and
jmp
(bad)
push
jno
loopne
pop
aaa
cmp
sbb
hlt
cmp
daa
fmul
(bad)
pop
int3
aam
loop
cdq
sub
adc
mov
xchg
sbb
adc
jg
test
mov
fimul
jmp
pushf
cs
into
or
sub
cmp
je
mov
cmp
dec
cli
imul
jo
mul
sub
imul
jno
in
ret
clc
pop
pushf
(bad)
cli
retf
ins
sbb
cli
push
std
imul
cmp
mov
int3
mov
sub
loopne
mov
sub
(bad)
mov
adc
rcl
sbb
out
sub
loopne
addr16
pop
mov
mov
repnz
mov
mov
movs
push
mov
call
pop
xchg
mov
dec
mov
add
call
aad
loope
mov
xor
shl
(bad)
stos
stc
in
pop
mov
outs
pushf
xor
jno
jb
ins
in
cdq
pop
outs
mov
sub
mov
push
mov
xor
push
push
test
ja
jge
fwait
mov
mov
mov
mov
std
sti
idiv
dec
mov
scas
cwde
rcr
iret
xor
pop
test
push
pop
lods
adc
dec
add
stos
inc
mov
and
les
cdq
add
fs
cdq
clc
jp
add
out
jecxz
hlt
mov
mov
xchg
out
outs
add
idiv
sub
mov
push
call
(bad)
neg
rcl
add
xor
inc
and
scas
bound
mov
mov
pop
imul
jle
loopne
inc
inc
sbb
push
pop
push
mov
adc
adc
test
jge
lock
or
mov
pop
(bad)
test
hlt
mov
mov
pop
pop
iret
cmp
adc
(bad)
adc
mov
dec
loopne
(bad)
sbb
dec
(bad)
cmp
fisub
std
adc
(bad)
ss
and
mov
clc
in
in
cdq
loop
outs
dec
js
cmp
push
add
add
cmps
popf
pop
push
sbb
hlt
mov
jge
sbb
dec
dec
inc
sbb
sbb
xor
lods
call
arpl
imul
pop
fsub
loop
jmp
shl
and
scas
pop
ret
(bad)
push
dec
xor
test
arpl
jbe
add
sub
inc
and
pop
or
int3
cld
mov
inc
mov
inc
nop
and
fist
lds
nop
popf
ins
nop
add
xlat
dec
sbb
xchg
push
pushf
xchg
out
jae
cmp
test
out
mov
lods
sti
sbb
jnp
mov
or
leave
pop
ret
xchg
test
dec
inc
jae
mov
and
fisttp
movs
dec
mov
daa
mov
mov
(bad)
dec
jl
cmp
fdiv
ror
cmp
jl
jmp
push
and
stos
retf
add
sub
bnd
mul
xor
mov
ror
int
ds
jmp
lods
sbb
rol
ins
pushf
or
sub
leave
js
fs
lods
jl
mov
dec
mov
xor
cmps
jo
xor
and
mov
enter
fdivr
dec
in
mov
inc
and
mov
pusha
or
add
xlat
pop
les
(bad)
jbe
or
jge
repnz
fcom
push
jbe
or
jmp
pop
sbb
mov
and
jp
push
xor
cmps
call
adc
push
mov
inc
sbb
sbb
inc
dec
cdq
fbld
std
fadd
cmps
jge
(bad)
xchg
mov
call
push
call
cmc
inc
pop
jne
lea
inc
xchg
jae
fwait
jg
add
les
(bad)
ret
or
lahf
pop
mov
dec
push
inc
(bad)
inc
call
xchg
int3
cs
add
xor
xchg
mov
mov
sbb
mov
pop
jae
mov
in
popa
inc
dec
mov
add
ficom
aam
jmp
loope
imul
push
(bad)
rcr
out
fwait
push
or
adc
loope
es
test
inc
jp
xchg
pop
out
ins
or
bound
jae
and
in
jns
cmp
(bad)
inc
mov
shl
add
sbb
aas
sahf
mov
mul
cmps
cbw
retf
mov
push
inc
dec
daa
mov
pop
in
iret
data16
xchg
sar
(bad)
xlat
dec
shl
jmp
dec
repnz
inc
add
adc
jl
mov
sub
mov
fcmove
mov
outs
jmp
jns
sar
push
mov
inc
pop
mov
xchg
ja
sbb
out
push
and
out
fs
mov
int3
push
xchg
outs
sti
adc
cmps
add
push
(bad)
call
imul
xor
inc
fdiv
imul
pop
dec
add
push
xchg
jmp
movs
jl
clc
pop
push
pushf
push
test
mov
ja
sub
mov
clc
data16
adc
adc
xchg
dec
xchg
add
loopne
pusha
ins
push
retf
pop
add
jecxz
sub
xchg
inc
inc
(bad)
dec
ins
shr
fst
icebp
sub
cmp
sahf
push
mov
or
mov
push
pop
mov
mov
dec
outs
out
not
call
mov
dec
sbb
ja
ins
movs
shl
cmp
je
pop
je
xor
mov
hlt
jl
imul
push
jns
(bad)
or
xchg
pop
push
(bad)
xchg
jnp
or
ins
pop
and
mov
ins
pop
mov
inc
push
mov
mov
data16
pop
fisttp
add
cmp
movs
or
arpl
mov
arpl
(bad)
adc
mov
je
cmps
mul
xchg
es
(bad)
mov
pop
movntq
pop
or
nop
inc
mov
cmps
(bad)
das
je
or
les
jae
out
es
fidiv
sbb
jl
into
add
into
xchg
sub
retf
aaa
retw
jb
outs
loope
pop
mov
leave
or
cmp
sbb
div
loopne
int
mov
fsubr
aad
test
or
and
xchg
out
mov
outs
scas
not
jns
and
jle
cmps
aad
push
aas
mov
imul
cmp
xchg
add
xor
and
mov
pop
inc
mov
rcl
js
cdq
pop
test
mov
push
in
stc
dec
lds
adc
into
in
pop
mov
clc
and
adc
shr
dec
cmc
lahf
icebp
cmp
ins
mov
jb
rcl
jl
adc
in
mov
nop
sbb
icebp
test
in
or
sbb
mov
jp
push
or
cmps
and
stos
xchg
cmp
pusha
push
aas
ins
ss
mov
enter
inc
add
xchg
stc
mov
gs
xchg
stc
cmps
scas
xchg
or
xchg
lds
jecxz
loopne
es
xchg
mov
cmc
sub
cld
shl
sub
mov
repz
gs
cmc
jp
xor
jmp
fsubr
add
jno
dec
push
pop
xchg
shl
pop
or
inc
ins
inc
fistp
push
mov
out
jmp
push
lock
enter
inc
sti
or
and
loopne
adc
in
sbb
inc
stc
jbe
mov
mov
aas
jecxz
pop
ins
cmc
movs
cwde
mov
cmc
mov
les
pop
(bad)
add
inc
cmps
sbb
pcmpeqb
jle
jno
scas
jb
lahf
adc
shr
xchg
mov
xchg
ins
sti
inc
in
adc
inc
inc
mov
(bad)
jmp
mov
lods
fmul
aam
shr
sub
push
jb
cld
pop
pushf
mov
sbb
inc
dec
jle
inc
mov
or
xchg
cwde
inc
and
sti
addr16
(bad)
(bad)
and
js
xor
adc
inc
fnstsw
sti
mov
lahf
(bad)
xchg
call
xchg
add
test
daa
cmc
ss
fidivr
adc
adc
mov
adc
add
repnz
nop
sub
mov
jmp
test
xchg
xor
adc
mov
cmp
mov
stos
sbb
pop
sub
push
pop
(bad)
dec
popa
dec
pop
push
mov
std
fs
outs
mov
and
sub
and
dec
test
ins
inc
nop
mov
xchg
icebp
jb
cld
mov
repz
fxch
push
sar
loop
shr
dec
mov
inc
and
test
mov
adc
dec
xchg
cli
or
mov
dec
ret
inc
jae
cmp
fdiv
pop
sbb
and
sbb
enter
and
mov
addr16
mov
outs
push
jb
out
(bad)
jp
scas
add
nop
data16
addr16
(bad)
push
int3
jne
and
mov
or
mov
lea
and
mov
push
(bad)
cmp
sub
pop
mov
retf
push
or
mov
imul
dec
into
push
cli
fmul
jb
shl
cmp
dec
mov
das
cmp
pop
push
imul
mov
push
lods
popf
or
(bad)
xchg
sbb
and
pushf
iret
lods
inc
sub
push
pop
add
loopne
in
mov
pop
test
jo
mov
and
mov
sub
and
call
outs
sub
test
out
sub
out
inc
test
pop
test
dec
in
hlt
inc
repz
xor
or
jno
sbb
enter
push
scas
mov
outs
inc
repz
in
sbb
mov
dec
inc
rol
xlat
adc
jp
mov
test
mov
xchg
xchg
add
clc
jmp
js
mov
js
and
jne
push
movs
stos
out
adc
into
pop
ror
jmp
mov
aad
xchg
sahf
out
js
pop
inc
lods
jo
ins
test
dec
xchg
adc
das
rep
nop
sbb
ja
sti
or
add
cmp
movs
mov
cmp
mov
sub
mov
mov
in
or
pop
leave
out
adc
mov
in
mov
jb
pop
sub
dec
hlt
das
adc
jp
loope
dec
sbb
ficomp
lea
jge
test
les
test
fcom
jmp
push
fistp
es
jecxz
es
ret
cli
inc
inc
ja
mov
and
sbb
mov
stos
inc
addr16
cli
push
cmp
cld
xchg
dec
mov
adc
xor
shr
mov
fwait
and
xor
adc
jp
push
gs
pop
pop
inc
dec
cs
mov
shl
sar
push
aaa
inc
fadd
mov
sub
(bad)
jmp
call
test
les
idiv
mov
(bad)
xlat
aas
popa
sti
mov
push
fnsave
fdivr
mov
xchg
lahf
mov
cdq
cmc
add
and
mov
cmc
sbb
aam
in
mov
push
cmp
mov
cli
cli
mov
jge
cld
outs
call
dec
sahf
jl
call
int
scas
inc
mov
in
rcl
inc
ss
fmul
cld
inc
test
outs
dec
or
mov
inc
fisttp
outs
sbb
cmp
lock
and
retf
fisub
test
pop
add
inc
or
sub
ss
xchg
dec
mov
pop
sbb
jns
rol
in
or
mov
outs
mov
mov
mov
mov
in
sub
mov
icebp
loope
hlt
pop
aas
jp
ds
popa
loop
(bad)
idiv
adc
nop
in
push
inc
cli
xor
and
sti
and
and
xchg
adc
call
test
repnz
ins
imul
(bad)
mov
jnp
dec
stc
push
sbb
sbb
mov
pop
mov
enter
jns
hlt
jb
adc
retf
fiadd
sub
and
jae
xchg
dec
mov
ret
jle
int
rol
retf
pop
in
or
pop
fisubr
sub
loop
add
or
rcl
xchg
pop
cmc
mov
mov
pop
jae
and
iret
in
jmp
adc
pop
scas
aad
ret
adc
xlat
mov
int
imul
mov
and
inc
test
cmp
pop
cmc
pop
mov
pop
mov
jo
xor
dec
xlat
sbb
lods
push
inc
cld
xchg
retf
lods
idiv
out
jbe
lods
lock
popf
in
lahf
push
ja
and
cmp
fcmovnu
mov
dec
mov
push
cmp
rcr
in
gs
loopne
xor
das
mov
shl
aaa
and
sbb
adc
mov
mov
mov
(bad)
cli
jae
ds
inc
scas
mov
mov
lea
inc
mov
mov
cmc
mov
sbb
xchg
fist
test
fist
int
mov
arpl
cdq
in
push
inc
and
ds
dec
sub
arpl
rcpps
pop
or
pusha
call
sbb
and
call
lahf
sti
aad
jae
cmp
pop
dec
daa
popa
push
mov
(bad)
jg
retf
es
daa
out
aaa
push
push
add
adc
push
mov
inc
cwde
adc
cmps
jns
pushf
imul
sti
popa
add
dec
xchg
sub
outs
idiv
jle
dec
jge
push
rcl
addr16
out
or
mov
jmp
adc
push
pop
rol
ud1
pusha
(bad)
std
mov
jnp
sub
test
pop
fnstsw
jno
jae
push
les
ja
gs
mul
cmps
popa
mov
pop
daa
pop
and
repz
jmp
cwde
sar
pop
add
int3
imul
pop
or
cwde
fst
xchg
sbb
out
xor
pop
jmp
jmp
mov
xchg
fisubr
test
pop
sub
pop
mov
push
push
es
adc
push
jmp
fwait
push
dec
or
aad
lods
and
pop
ins
inc
not
and
popf
jle
jmp
scas
jno
adc
lods
int
pop
add
or
aad
add
pop
mov
in
adc
and
adc
push
cmp
out
stos
sbb
add
xor
mov
mov
fnsetpm(287
jne
xchg
jp
push
xor
enter
inc
jmp
rol
(bad)
nop
cmp
jbe
lds
in
push
sbb
scas
cld
and
retf
push
or
sti
dec
imul
xchg
adc
(bad)
dec
add
outs
and
les
cld
mov
outs
lea
pop
sbb
popf
sar
push
mov
aam
push
adc
cdq
sbb
and
test
call
(bad)
xchg
mov
scas
or
cmp
adc
mov
mov
cmp
push
push
mov
mov
sub
jno
mov
push
jmp
sub
sub
push
pop
retf
pop
retf
mov
xchg
pop
jl
adc
xchg
and
arpl
xor
test
mov
mov
inc
mov
adc
push
loop
mov
mov
push
mov
(bad)
imul
icebp
stos
push
pop
dec
les
cmps
ins
mov
sti
(bad)
cmp
imul
mov
dec
mov
aam
in
sub
adc
cmp
int3
cld
jle
push
push
or
push
adc
or
push
stos
and
int3
cmp
repz
fdivr
mov
fs
addr16
inc
out
add
inc
mov
cli
dec
retf
loop
pop
pop
imul
pop
lock
aam
loop
je
cmp
mov
mov
rcl
cmp
cmp
and
mov
movs
leave
push
jge
loop
popa
int3
push
cmp
(bad)
cmp
inc
int
aas
cmp
int3
xchg
lds
stos
xlat
adc
or
stc
ss
jnp
push
dec
lods
or
les
fs
mov
stos
movs
push
push
cli
adc
jg
sahf
jns
xlat
(bad)
mov
dec
mov
test
mov
push
je
(bad)
scas
mov
inc
mov
pop
push
jmp
aas
jne
mov
fsincos
arpl
inc
daa
push
or
inc
xchg
cmp
jbe
aaa
pop
ins
xlat
stc
add
add
xor
jp
inc
stos
mov
jae
int
xchg
call
sar
jmp
stos
retf
sub
xchg
leave
push
sbb
jmp
add
mov
ins
xchg
adc
pop
sbb
cwde
inc
mov
ret
and
cdq
rcr
in
ret
mov
lock
inc
aas
pop
and
xor
xor
mov
popa
lods
sbb
lods
pop
push
fnstcw
ret
cli
cmp
cdq
inc
add
or
mov
mov
dec
mov
lock
ss
ds
lods
in
movs
or
gs
xor
mov
jp
dec
mov
inc
ret
mov
pusha
addr16
in
aad
ds
movs
out
int3
movs
xchg
xor
mov
pop
data16
sbb
fimul
pop
jno
cdq
mov
mov
xor
lea
xor
mov
cwde
scas
mov
mov
lahf
mov
jle
cld
outs
xor
das
pop
shl
sbb
xor
xchg
inc
sub
jb
iret
dec
xlat
xor
mov
ret
push
cmps
xlat
jmp
arpl
jp
or
jecxz
pop
sar
or
cmps
push
test
lock
and
ds
jge
mov
jae
inc
adc
dec
imul
out
or
lock
jg
in
adc
adc
and
loopne
adc
outs
sbb
jle
call
and
pop
icebp
ins
in
dec
fmul
hlt
mov
xor
add
pop
add
out
push
test
retf
ds
test
pop
fst
fdivrp
add
popf
sti
data16
xor
xor
aad
dec
or
pop
jb
xor
js
adc
and
movs
repz
test
xor
(bad)
bound
js
shl
xlat
stos
test
cmp
aad
jb
xchg
js
push
xlat
addr16
ins
cs
addr16
jns
arpl
xor
or
dec
xchg
adc
sub
pop
in
retf
jmp
xchg
sub
mov
in
lods
repz
push
inc
test
sbb
popa
xlat
cmps
into
in
fadd
jl
mov
(bad)
or
fst
xchg
pop
(bad)
jecxz
xor
lahf
sti
mov
(bad)
cmp
add
sub
mov
pop
jg
in
repnz
(bad)
hlt
ds
inc
lea
jno
and
xor
sub
iret
in
mov
pop
pop
repz
pop
daa
in
das
div
add
cs
dec
inc
out
loop
xor
jl
mov
nop
xor
sub
mov
inc
sar
daa
cmp
aas
retf
sar
sbb
jg
ins
call
mov
inc
shl
(bad)
adc
sub
inc
jmp
dec
(bad)
test
dec
and
retf
shr
add
fdiv
cmp
popf
add
or
sbb
sub
sbb
mov
or
sbb
std
push
aaa
pop
mov
(bad)
fiadd
(bad)
leave
or
add
fstp
cs
xchg
fbstp
xor
aaa
or
push
xchg
mov
xchg
sar
arpl
aad
cmps
or
jmp
mov
repz
cmps
js
ins
cmp
mov
jmp
inc
nop
test
jae
xchg
inc
imul
outs
sar
retf
mov
mov
dec
mov
mul
fidiv
jge
jle
xchg
push
mov
dec
scas
sub
in
xchg
retf
push
ins
inc
mov
push
in
fcom
jmp
hlt
xchg
push
rcr
sbb
jae
mov
xor
loop
aad
jnp
cmp
out
ds
arpl
cmp
(bad)
aam
outs
and
int
aad
mov
iret
mov
dec
push
adc
sar
push
das
rcl
dec
cmp
inc
xchg
dec
pop
pop
xchg
mov
lods
xchg
sbb
shl
sbb
in
jno
sahf
mov
pop
push
ja
and
mov
xchg
cdq
in
popf
pop
jnp
rol
repnz
pop
jno
leave
add
fwait
jmp
enter
pop
ins
leave
add
lds
jmp
lods
sub
jo
dec
inc
xor
lea
imul
loopne
out
lds
sahf
lds
out
outs
dec
lock
bswap
pop
retf
scas
pop
cmp
neg
int
jbe
and
test
nop
xor
xchg
mov
in
jg
inc
push
xchg
xchg
cld
(bad)
cmps
in
xchg
push
popf
sub
aaa
sub
cmps
popf
cmps
push
dec
lds
loopne
jmp
(bad)
stos
add
out
rol
push
add
call
push
dec
pop
add
popf
test
xchg
je
push
mov
jo
retf
stc
mov
shr
cmp
idiv
pop
add
ss
div
mov
call
mov
jne
adc
push
mov
sub
es
jecxz
sub
lea
lahf
pop
aad
ficom
jo
jl
jnp
ins
test
cdq
in
dec
lods
mov
inc
js
in
retf
jbe
fcomp
mov
xchg
xchg
jns
and
sar
dec
in
jg
fdivr
fwait
pop
sbb
lods
mov
xor
je
ins
xor
pop
loopne
cmp
into
loopne
cli
ret
cdq
or
in
sub
cmps
retf
sub
pop
imul
leave
dec
jecxz
int3
test
adc
outs
sub
sub
push
iret
out
imul
and
cmp
mov
adc
cs
sbb
fcomip
jne
dec
in
ins
gs
sub
clc
rcr
sbb
lods
rcl
fst
stos
fisub
leave
pop
mov
(bad)
cmp
out
or
shl
cmp
lods
push
sbb
pminsw
inc
cmc
dec
ret
lahf
pushf
dec
pusha
in
pop
aas
aas
push
cmp
xchg
out
aam
ror
test
sbb
sahf
hlt
pushf
pop
dec
stos
cmc
js
dec
inc
adc
fist
or
bound
dec
aaa
not
js
(bad)
std
pushf
add
mov
test
popa
jmp
(bad)
and
push
fstp
sub
adc
and
lods
sub
jnp
loope
push
cwde
(bad)
popf
xlat
mov
inc
scas
in
mov
popf
adc
outs
mov
lods
xor
and
popa
push
ret
cmp
adc
out
jg
jg
sbb
add
add
outs
add
int
in
rcr
ja
mov
and
jnp
adc
push
movs
mov
mov
push
cmps
push
mul
xor
icebp
or
cmp
nop
mov
mov
xchg
out
dec
cmc
lea
sub
add
sbb
cdq
mov
into
jmp
loope
fld
out
push
shl
lods
outs
xchg
sub
dec
aam
data16
add
(bad)
in
xchg
dec
add
repnz
or
rcr
ret
adc
pop
pop
add
pushf
xor
mov
ds
adc
jb
dec
es
mov
sbb
sbb
call
in
and
data16
push
(bad)
adc
sbb
pop
inc
aad
loop
cdq
pop
sub
enter
aam
shr
sub
jp
jne
xor
cld
mov
mov
jbe
fadd
fiadd
retf
daa
in
test
repz
xchg
pop
les
shl
cmp
pop
add
out
outs
cs
imul
stos
sbb
xchg
and
pop
ret
xor
outs
addr16
mov
fwait
push
pop
jo
adc
mov
int3
fdivr
pop
adc
neg
out
sbb
xchg
xchg
mov
jns
(bad)
jmp
je
(bad)
mov
repnz
xor
push
inc
enter
shl
jne
push
or
lea
lods
jns
int3
pop
fsub
jg
mov
and
mov
mov
iret
int
pop
sbb
push
pop
inc
push
and
mov
cwde
mov
jo
mov
sub
clc
jns
retf
mov
dec
xchg
and
repnz
sub
mov
inc
(bad)
adc
jmp
mov
mov
lds
outs
sub
add
inc
dec
mov
repz
mov
shr
and
jle
mov
cwde
jno
lods
dec
rol
push
cmps
fadd
xor
mov
jmp
add
jno
addr16
mov
je
sbb
sar
cmp
sub
out
dec
ins
cld
cli
and
stos
and
fsubr
add
jmp
imul
xchg
dec
dec
fwait
lods
push
lods
jb
out
xchg
add
inc
bswap
jo
or
retf
sbb
icebp
pushf
jge
iret
imul
pop
or
jp
sbb
jp
mov
push
xlat
clc
movs
movs
jbe
push
jle
out
sbb
and
sub
inc
pop
lods
pop
fwait
(bad)
shl
jno
stos
mov
ja
mov
mov
fcomp
jmp
in
test
idiv
pop
and
pop
scas
push
mov
jbe
test
hlt
nop
rcl
jmp
cmps
icebp
es
mov
pop
pop
add
dec
(bad)
xor
cmp
inc
in
frstor
fsubr
push
shl
fiadd
xor
fnstsw
add
push
xchg
mov
dec
idiv
leave
xchg
loop
xor
xchg
xchg
sbb
fcomi
mov
xchg
dec
js
push
push
adc
cmp
ss
or
rol
lock
scas
xchg
sub
js
outs
jae
test
add
add
mov
adc
fiadd
iret
pop
fidivr
pop
jmp
sbb
inc
dec
jp
and
aad
pop
mov
test
(bad)
mov
push
lea
add
nop
in
popf
mov
xchg
mov
and
mov
pop
sbb
nop
lahf
mov
xchg
ret
(bad)
dec
mov
xchg
sahf
popf
fidivr
xor
popa
cmp
clc
inc
mov
ins
cmp
aad
into
int
jmp
in
jmp
pop
pop
rcl
pushf
jno
push
pop
std
fadd
scas
jge
cdq
popf
add
test
int
pop
xchg
jns
or
xor
xlat
push
fsubrp
or
inc
push
mov
mov
enter
sub
aad
mov
into
daa
sbb
lahf
call
out
mul
sahf
pop
fcmovu
mov
outs
mov
lea
hlt
push
test
aam
test
das
std
jo
adc
test
and
int3
jae
xchg
pop
hlt
jns
xchg
sub
out
add
cli
inc
jae
lahf
outs
movs
xor
pop
dec
and
xchg
push
add
mov
inc
jnp
cmp
sbb
xchg
pop
imul
(bad)
inc
add
mov
ja
daa
xor
inc
dec
imul
les
repnz
dec
aas
mov
pop
inc
test
bound
xchg
stc
mov
stos
(bad)
sti
push
inc
div
loop
aam
iret
inc
(bad)
and
add
mov
hlt
inc
call
xor
pushf
push
dec
es
test
adc
ja
add
mov
sbb
mov
int3
jns
jg
sub
jg
adc
daa
std
adc
sbb
popa
loopne
jb
push
(bad)
shl
lods
inc
adc
lock
test
pushf
jp
lea
mov
inc
mov
aam
mov
cmp
sub
mov
imul
or
cmc
int3
sub
sbb
jmp
nop
mov
ret
pop
pop
pusha
adc
xor
jae
pop
retf
and
push
sbb
unpcklps
in
mov
es
jl
in
mov
(bad)
xchg
fs
std
jmp
jl
cs
push
push
mov
outs
pushf
lock
popf
mov
(bad)
push
push
adc
xlat
fnstenv
pop
push
in
mov
jae
sbb
jns
pop
cs
xchg
shl
jge
cmp
pop
es
xor
fsubr
lock
mov
push
sub
mov
sub
retf
fnstcw
push
push
dec
fs
repz
pop
add
xchg
cmp
xchg
cmp
adc
ret
jmp
ins
imul
ret
push
mov
mov
sbb
ds
sti
jbe
mov
int3
jbe
out
xor
xor
xchg
and
clc
lods
in
add
test
jge
and
nop
inc
lods
mov
sbb
enter
neg
jmp
push
cmp
outs
inc
xchg
push
sti
test
iret
xor
xchg
cmp
mov
out
inc
inc
inc
call
iret
mov
mov
jg
mov
aas
mov
inc
adc
daa
jo
js
scas
pop
sub
arpl
cmp
push
repz
enter
pop
ins
shr
fcmovnb
adc
or
mul
fsub
repnz
adc
jg
dec
xor
mov
fs
or
and
test
inc
inc
sbb
js
cmp
mov
mov
nop
scas
sub
pop
ret
ins
inc
in
lds
and
arpl
push
lods
test
mov
call
imul
cmc
mov
pop
lea
dec
push
xor
scas
cmovo
daa
gs
addr16
lahf
push
outs
aam
xor
hlt
push
inc
pop
mov
shl
cmps
or
push
outs
retf
push
fadd
test
(bad)
jmp
ins
xor
ds
sbb
into
push
jp
cmp
jo
fisttp
dec
xor
loope
sbb
add
cmp
stos
sub
mov
mov
lahf
movs
xchg
ins
fwait
and
cmp
bound
sub
and
mov
dec
fs
int3
ins
ins
jb
dec
imul
mov
ins
cmc
aam
mov
je
imul
add
push
in
out
out
lds
lods
and
inc
xlat
add
adc
fsub
jno
sbb
sub
clc
leave
mov
repz
(bad)
pop
arpl
mov
(bad)
out
and
test
popa
add
lds
jo
movs
ins
or
dec
daa
cmp
dec
dec
inc
push
or
gs
sbb
or
dec
sbb
call
out
mov
imul
inc
mov
adc
gs
xchg
aaa
arpl
(bad)
pushf
das
dec
jae
adc
cmc
push
sub
call
test
inc
stos
cwde
stos
adc
aad
mov
jmp
out
xlat
out
(bad)
movs
pop
out
repnz
sbb
ds
mov
call
icebp
mov
int
ss
test
cmp
std
out
xor
les
inc
xchg
xchg
in
lahf
cmps
iret
sbb
adc
dec
xor
(bad)
jl
outs
sahf
cmp
jbe
push
jmp
xlat
leave
push
xchg
ficom
stos
push
fdivr
pop
sub
mov
ja
mov
push
inc
jle
and
sbb
mov
xchg
xchg
je
out
cmp
xchg
repnz
stos
push
jne
sub
pop
loope
xor
loope
mov
mov
repz
repz
inc
outs
enter
sub
pop
adc
and
ds
cmc
lea
lahf
mov
push
jmp
and
mov
mov
push
mov
inc
test
in
add
ins
xchg
mul
dec
dec
std
icebp
lock
mov
and
adc
mov
cmp
jmp
(bad)
cmps
rol
leave
lea
sbb
mov
mov
(bad)
jno
iret
mov
sbb
push
int
pop
dec
jmp
cmp
(bad)
push
jg
pushf
imul
fisttp
scas
lea
std
lahf
addr16
cmp
mov
cs
jno
call
cs
or
pop
inc
mov
xor
bound
call
stc
jb
in
sub
adc
icebp
pop
sti
jo
fldenv
mov
in
aas
jp
aas
cmp
xchg
mov
dec
dec
not
push
push
shl
repnz
in
es
enter
add
pop
outs
push
and
sub
hlt
jl
pop
outs
xchg
repz
int
dec
mov
add
and
jp
popf
mov
or
leave
add
mov
loope
and
dec
jge
lds
jmp
push
dec
push
pop
inc
aas
sbb
cmps
and
pop
(bad)
cmc
cmp
hlt
or
or
mov
push
mov
scas
mov
lods
sub
push
mov
adc
dec
sub
pop
cmp
sahf
sbb
xor
or
push
in
test
sub
test
mov
shl
cwde
jp
lods
push
pop
dec
int
xchg
mov
xchg
jbe
lods
fisttp
mov
push
cmps
add
mov
xor
xchg
sub
iret
outs
leave
pop
(bad)
int3
cld
(bad)
cdq
jp
cmp
push
bound
pop
test
mov
dec
inc
sub
or
je
shl
mov
inc
cmc
jl
mov
imul
ds
dec
stos
aad
jg
mov
imul
or
mov
xor
sub
enter
sbb
in
mov
add
loop
lahf
xchg
stos
out
jae
test
jl
div
repnz
mov
pushf
fiadd
(bad)
das
xchg
sbb
xchg
scas
ds
cmp
daa
fxch
nop
cmp
iret
and
call
mov
push
add
ficom
lods
push
add
std
idiv
mov
into
call
mov
adc
xchg
in
and
xchg
out
and
ins
fisub
mov
aad
push
sbb
dec
test
push
outs
add
sbb
cmp
or
aaa
ret
addr16
mov
data16
fadd
jnp
(bad)
fwait
inc
adc
mov
pop
adc
mov
mov
pop
rcr
fcmovb
ins
mov
daa
jecxz
cmp
jns
mov
inc
sbb
imul
jnp
fwait
pop
sti
sub
mov
mov
sbb
scas
push
cmp
mov
movs
jle
adc
sar
shr
in
or
mov
push
rcr
mov
or
jno
pop
(bad)
lea
xor
test
ficom
inc
scas
xor
cli
jo
mov
out
das
movq
sbb
gs
scas
and
das
dec
inc
test
and
pop
jo
rcl
or
aas
sbb
xchg
adc
aaa
adc
inc
fs
hlt
dec
or
cmp
inc
cli
lahf
inc
fld
xlat
aad
push
and
ss
cs
sbb
test
shl
in
loop
lock
sub
cmp
jno
mov
dec
and
je
fdiv
sbb
push
mov
fistp
sub
std
hlt
daa
ds
rcl
ret
(bad)
dec
aas
adc
adc
sbb
adc
inc
xchg
jmp
test
cmps
pop
pop
dec
mov
sar
aad
and
mov
push
(bad)
xor
inc
jp
shr
xchg
mov
jbe
clc
push
arpl
stos
jmp
mov
cmp
and
or
out
jmp
or
lahf
pusha
xor
aam
sbb
mov
jle
push
mov
das
repnz
je
xchg
jecxz
xor
lods
(bad)
int3
loop
test
mov
or
ror
shl
push
sub
mov
dec
test
icebp
mov
ss
push
vmovshdup
or
shl
fs
loopne
sub
mov
sub
fimul
stos
mov
pusha
or
xchg
mov
ds
sahf
std
dec
mov
retf
mov
sbb
jmp
sbb
test
cmp
aam
and
pop
mov
loope
lods
loopne
xor
add
mov
(bad)
xchg
ja
pop
dec
mov
dec
cld
pop
mov
inc
lea
dec
cli
fs
mov
jge
leave
add
gs
jle
inc
xchg
loop
(bad)
hlt
add
xor
nop
enter
mov
(bad)
xor
mov
pop
pop
sbb
outs
test
cmps
pop
sub
or
xor
int3
jecxz
xchg
or
cmp
mov
xchg
test
jns
xor
mov
jmp
sbb
sub
mov
ffreep
(bad)
retf
jmp
sbb
ret
lea
pop
sub
or
dec
or
daa
add
lahf
(bad)
cs
in
(bad)
jecxz
jno
adc
or
adc
aas
sub
mov
cmps
shl
mov
lods
mov
jmp
jbe
in
pop
inc
in
aam
in
or
scas
(bad)
enter
sub
sbb
dec
in
jmp
js
or
dec
mov
cmp
jb
dec
add
jne
pop
mov
mov
sbb
inc
(bad)
ja
out
or
push
cmp
movs
and
test
in
mov
pusha
cdq
icebp
sti
inc
test
sbb
(bad)
mov
add
ins
out
rcl
add
push
sub
dec
pop
inc
pop
fcmovnbe
xlat
and
dec
mov
imul
inc
mov
pop
movs
dec
fwait
xlat
add
sub
je
mov
jo
mov
inc
dec
xor
cmc
out
xor
jbe
adc
add
push
fmul
mov
push
xchg
mov
fcomp
jne
push
mov
fucomp
xor
pop
mov
jns
mov
jne
imul
mov
dec
imul
xchg
ds
sub
push
icebp
fmul
stc
xor
int3
jp
jp
lea
mov
add
or
shl
retf
std
shrd
jecxz
sub
clc
pusha
and
and
dec
dec
loopne
xchg
(bad)
addps
xor
push
in
clc
mov
clc
pop
cld
mov
pop
je
sti
mov
adc
popa
sub
gs
or
fwait
out
mov
iret
mov
dec
outs
(bad)
scas
adc
sub
pop
fwait
into
nop
push
xchg
arpl
mov
lock
les
pusha
pop
mov
push
cwde
pop
sbb
bound
sbb
fist
pop
cdq
sbb
lea
inc
out
and
aaa
fs
ins
inc
sub
or
dec
sti
cmp
and
xchg
in
fs
push
repnz
(bad)
fdivr
xor
shr
mov
in
iret
cmp
jecxz
pop
pusha
push
cs
data16
mov
cmps
shl
mov
mov
loope
jg
or
pop
jo
adc
dec
or
je
leave
inc
cmp
scas
push
add
xchg
out
ret
out
icebp
leave
xchg
cdq
xor
and
xor
lods
pop
ret
(bad)
repz
push
adc
shr
push
aad
stos
or
shl
lock
sbb
add
mov
xor
jecxz
sar
xchg
or
push
rol
rcr
lock
repz
out
rcl
dec
or
es
add
push
push
fisttp
sub
test
mov
xchg
gs
adc
inc
pop
retf
add
jecxz
fsub
pop
jb
mov
stos
cli
lahf
add
nop
mov
repnz
fwait
out
stos
pop
mov
cmp
dec
ss
mov
out
mov
dec
mov
fldcw
xor
fnsave
dec
mov
fwait
add
and
(bad)
repz
inc
fstp
push
ins
xchg
mov
fcom
aaa
push
add
xor
loopne
mov
adc
xor
loopne
into
bound
aaa
fldcw
add
sub
inc
in
or
add
pop
hlt
ret
dec
dec
xchg
mov
adc
jmp
das
pushf
dec
sbb
cs
push
sbb
and
fdiv
push
or
mov
ins
(bad)
dec
mov
out
dec
push
push
mov
sub
xor
inc
outs
ret
xchg
push
jbe
das
and
dec
in
sub
mov
or
mov
mov
xchg
(bad)
cmc
jns
test
stc
in
adc
pop
(bad)
pop
cld
or
aas
arpl
aas
(bad)
xchg
jo
and
sbb
jb
mov
iret
out
es
mov
mov
ret
dec
out
inc
and
addr16
mov
inc
adc
ins
xor
pop
xor
stos
cmps
f2xm1
test
push
xchg
cmc
jmp
sbb
hlt
add
mov
add
sub
(bad)
pop
push
lods
div
sahf
push
test
jno
imul
ja
and
loope
mov
je
mov
scas
jns
mov
int3
(bad)
mov
and
inc
mov
sbb
fstp
cmp
aaa
sti
in
inc
mov
aas
nop
stos
cs
std
xor
push
push
popf
fsubr
into
cmp
enter
int
inc
ret
ret
cmp
xchg
cmp
repz
fs
xchg
sti
popf
jns
mov
scas
fstp
pop
jl
cmp
sub
fs
int3
(bad)
les
stc
cmp
lods
or
inc
pop
(bad)
icebp
stos
cmp
into
clc
loop
adc
out
out
jl
scas
popa
pusha
test
adc
retf
inc
ret
inc
mul
loope
cmp
mov
retf
mov
les
cli
sub
in
pop
xor
push
mov
xchg
pusha
aad
and
xchg
and
iret
sub
mov
ja
push
xchg
and
movs
in
or
adc
out
sbb
lock
xchg
aad
pop
out
sub
push
xor
test
jge
xlat
jne
pop
adc
jg
mov
xchg
cmp
daa
pop
lds
mov
les
xchg
stos
(bad)
mov
movs
test
iret
popa
fistp
sbb
test
jne
test
sti
jge
push
mov
dec
lock
inc
test
fadd
rcr
cs
or
jl
mov
iret
das
sub
cld
dec
pop
pop
cdq
jmp
xor
mov
adc
out
add
jbe
mov
mov
mov
ins
cmp
out
test
rcr
cmp
xchg
adc
sbb
ds
add
or
push
mov
outs
jmp
in
sub
jmp
dec
pop
push
add
je
mov
pop
mov
jo
mov
outs
fnstenv
dec
js
jb
jg
mov
xchg
les
sbb
add
sub
repnz
inc
mov
push
lods
mov
arpl
xor
sbb
cli
daa
push
out
push
test
ret
les
cmp
aam
push
ss
adc
ins
inc
stc
xchg
xlat
mov
jne
aaa
dec
inc
pusha
mov
sbb
inc
and
lods
jmp
xchg
mov
scas
in
leave
retf
in
cmp
dec
call
and
adc
pop
ins
push
ficom
fwait
sbb
mov
jnp
jbe
hlt
test
adc
dec
cmc
mov
bound
mov
jmp
push
shr
cld
shl
mov
push
sub
add
leave
sbb
fistp
fistp
cmp
mov
mov
stc
and
ret
mov
(bad)
dec
fst
lods
in
dec
mov
adc
lds
pop
pop
fist
loope
xchg
mov
fnstsw
jmp
stc
xor
inc
adc
pop
loop
mov
pop
movs
xchg
dec
jo
movs
sub
or
aad
pop
jmp
mov
push
test
inc
ret
add
lods
sub
neg
iret
int
and
hlt
aaa
cmps
gs
ds
xchg
fnsave
lahf
mov
psubq
sahf
out
mov
pusha
sahf
outs
mov
mov
or
xlat
fidivr
out
xchg
rol
and
(bad)
adc
xchg
je
imul
les
jno
retf
fbld
repnz
mov
stos
cld
or
jge
add
inc
jg
sub
(bad)
mov
lods
mov
and
xor
(bad)
je
and
mov
jae
cmps
fst
shr
xor
jne
mov
pusha
xchg
call
call
test
nop
(bad)
mov
je
fidivr
aaa
add
sbb
(bad)
mov
lahf
out
(bad)
adc
and
das
fldenv
shl
lock
xchg
popa
outs
nop
cmps
lock
cwde
ja
xor
fmul
inc
loope
add
pop
cmps
mov
out
imul
pop
xchg
test
mov
add
test
jnp
sub
sbb
fst
jecxz
sbb
cmp
add
dec
fist
mov
push
inc
movzx
lock
pop
mov
ret
aad
mov
jmp
jb
int
mov
mov
in
shr
pop
je
stos
inc
xchg
mov
xchg
je
xor
inc
loope
jo
cmp
shl
inc
aam
push
jg
and
aad
and
sub
jae
or
mov
lahf
xor
ror
push
das
test
pop
jp
push
out
hlt
(bad)
lea
daa
xor
mov
push
(bad)
sbb
jb
aad
push
and
xor
push
loopne
mov
in
repz
push
cli
in
enter
shl
loope
adc
push
ds
ret
shl
lods
repnz
(bad)
pop
mov
inc
add
(bad)
fld
popf
cmps
sbb
dec
scas
cmp
xchg
inc
stc
mov
into
push
(bad)
imul
mov
add
leave
ret
ins
sub
scas
cld
ror
dec
lods
les
enter
retf
mov
mov
mov
or
ror
sbb
fidivr
inc
lds
and
push
aaa
mov
lock
push
xadd
arpl
mov
and
add
jg
mov
inc
and
lahf
pop
pop
push
mov
mov
pop
mov
es
out
jbe
sbb
jl
jns
jecxz
sub
lea
mov
dec
cli
push
icebp
dec
inc
fisttp
cwde
(bad)
jno
popf
cs
loop
test
pop
inc
jbe
std
sbb
ficomp
(bad)
push
jmp
fwait
and
sbb
inc
xor
pop
fdivr
or
mov
xchg
dec
sbb
push
inc
icebp
addr16
fbld
cmps
rcl
mov
cmp
in
into
jo
sub
mov
cmp
xchg
xor
rcl
inc
dec
pop
xchg
cwde
push
pop
aad
xlat
xor
or
jmp
adc
mov
popf
pop
out
test
or
jbe
mov
cs
int
mov
mov
jecxz
movs
enter
and
jl
mov
xchg
(bad)
ja
mov
test
lock
ret
mov
retf
fnstcw
push
add
mov
pop
and
test
inc
fucom
add
cli
dec
bound
mov
mov
push
sub
das
mov
xor
and
loope
(bad)
pop
cmp
mov
pop
pop
cli
sbb
pop
adc
push
inc
mov
daa
xor
sbb
je
pop
cmp
iret
push
mov
and
xchg
inc
aaa
aas
lods
or
add
arpl
push
xor
and
mov
arpl
in
sub
aas
popa
sub
sub
outs
mov
fsub
ins
adc
xlat
es
in
sub
inc
adc
loope
iret
cmp
(bad)
xlat
inc
lods
jnp
push
fistp
mov
xchg
addr16
mov
push
loop
retf
ret
push
push
pop
mov
dec
push
adc
xor
out
push
js
jne
add
out
xchg
sub
mov
movs
mov
scas
mov
xlat
or
sub
dec
pop
inc
outs
adc
out
sub
mov
scas
fild
stc
addr16
das
and
mov
pushf
jno
in
popa
sti
test
(bad)
cmp
in
adc
jbe
out
push
jp
test
pop
and
pop
mov
xor
ins
lahf
mov
sub
into
jbe
xchg
nop
and
push
fist
aad
arpl
clc
mov
or
ins
push
les
jne
gs
jno
cmp
pop
daa
fwait
mov
retf
call
mov
inc
mov
add
cmp
push
into
call
pop
adc
jg
ror
jne
(bad)
lahf
pop
and
push
or
pop
gs
push
add
or
mov
mov
inc
inc
icebp
mov
xchg
lods
pop
add
xor
arpl
mul
jge
outs
js
adc
adc
cdq
mov
or
sbb
jo
push
xor
xchg
fcmovnu
inc
jmp
mov
mov
pusha
jmp
mov
nop
cwde
dec
les
jns
and
or
and
xor
test
push
push
xchg
scas
sahf
retf
std
daa
xor
mov
das
ins
enter
inc
clc
mov
xor
jecxz
repnz
jmp
mov
sbb
cmp
mov
add
addr16
dec
cs
xchg
push
xchg
dec
aaa
push
es
adc
and
(bad)
cli
mov
mov
mov
push
sub
jne
jmp
(bad)
xor
xchg
jae
aaa
test
push
add
dec
xor
sub
hlt
inc
in
ins
je
xor
add
loopne
push
fisub
jo
or
ficom
pop
outs
fstp
or
movs
lods
cmp
mov
loope
adc
retf
or
jecxz
(bad)
mov
push
sub
xor
int
cmp
ror
imul
mov
and
mov
hlt
push
fidiv
xchg
push
into
mov
loope
(bad)
int
mov
pop
and
(bad)
pusha
adc
pop
inc
pushf
sbb
sub
adc
mov
iret
push
in
xchg
inc
jecxz
sub
add
jae
lds
or
pop
test
rcl
loopne
sbb
xchg
mov
sbb
push
leave
cmp
stos
stc
inc
je
dec
jg
int
in
sbb
fadd
sub
or
js
cmps
and
pop
inc
scas
jl
cmp
cmp
(bad)
mov
or
imul
fnstsw
push
sbb
movs
lods
mov
jp
xlat
mov
dec
mov
leave
neg
pop
adc
popf
jno
ja
mov
test
test
lahf
iret
push
cmp
iret
in
jns
in
ins
jmp
je
test
sub
aas
xchg
and
adc
inc
push
add
neg
popa
cmps
mov
jecxz
inc
jae
add
push
vfrczps
add
rcl
ret
jle
mov
mov
inc
nop
xor
xor
ret
xchg
inc
out
mov
jmp
add
adc
xchg
(bad)
push
retf
push
push
add
std
pop
pop
sbb
out
pop
mov
jno
dec
movups
jns
test
push
(bad)
popa
sbb
mov
dec
xor
jmp
sbb
mov
aas
daa
arpl
outs
jg
fwait
adc
sub
leave
shl
leave
lock
dec
pop
sbb
mov
cmp
mov
(bad)
adc
xchg
leave
and
cmp
adc
das
data16
cli
cmp
inc
jb
cdq
xlat
arpl
push
into
dec
fdivr
and
rol
fcmovu
or
sbb
test
gs
cmc
les
xchg
stos
mov
mov
mov
(bad)
dec
pop
(bad)
jns
xchg
push
popa
push
lea
or
lods
jp
sbb
fstp
loopne
inc
pop
ss
push
inc
ja
out
es
mov
push
and
mov
dec
mov
ins
push
mov
and
xor
outs
jo
cs
(bad)
sahf
xchg
mov
cli
inc
retf
cdq
push
jle
push
inc
sub
aam
mov
pop
pushf
jle
inc
push
out
in
outs
add
mov
cld
clc
hlt
movs
mov
or
fisttp
or
outs
adc
icebp
or
scas
aam
jbe
(bad)
bound
cld
aas
pop
(bad)
(bad)
jb
or
ror
adc
xor
mov
(bad)
adc
std
xchg
pop
fisub
sub
add
out
adc
fucomp
rcr
mov
movs
loopne
push
es
mov
cmp
fimul
outs
sbb
fwait
jecxz
jmp
push
stc
mov
(bad)
sub
test
jne
dec
dec
idiv
rcr
push
popa
push
pop
rcr
xchg
fimul
repnz
jae
and
(bad)
pop
shl
inc
aad
dec
adc
push
loopne
inc
mov
aaa
push
int3
arpl
inc
jo
jge
ds
fdivr
adc
xor
lods
cmps
mov
pop
(bad)
rcl
test
mov
cld
xor
neg
push
mov
rol
loop
in
rol
jecxz
dec
loope
ins
lock
int3
xchg
mov
(bad)
ins
or
inc
in
jp
daa
test
mov
mov
stos
add
lock
lahf
movs
inc
cli
lods
fisttp
xchg
jb
fcom
mov
inc
outs
or
aad
call
xor
int
std
idiv
cmc
sub
mov
inc
jmp
outs
inc
shl
inc
dec
inc
cmp
in
pop
add
adc
idiv
push
cmp
jmp
inc
mov
push
add
shl
jns
adc
out
xchg
cmp
fcomp
fmul
jge
or
fist
cwde
cmp
outs
xchg
in
pop
xchg
(bad)
pop
pop
aad
xlat
scas
mov
lods
push
scas
popf
push
adc
repz
sti
mov
imul
xor
test
xchg
xchg
loope
pop
xchg
faddp
push
or
cdq
pop
mov
push
int
bound
adc
sub
sbb
xor
cmc
ja
ins
and
dec
adc
xor
inc
mov
sbb
in
dec
repnz
mov
sub
call
dec
sbb
add
inc
xchg
ja
fsubr
sub
dec
enter
or
lock
mov
fadd
out
inc
push
fcom
mov
add
cmps
mov
cs
cli
das
pop
cdq
into
arpl
jae
loope
add
std
push
test
ins
or
out
or
xchg
xor
and
push
jb
(bad)
out
xor
loop
adc
push
pop
xor
lods
and
add
sub
and
and
test
jno
js
inc
sbb
movs
lea
fild
sub
cwde
cmp
sbb
rol
push
hlt
scas
or
sti
shl
and
cmp
das
jecxz
cs
aaa
push
cmps
inc
jmp
inc
movs
jbe
pop
push
inc
sti
cmp
nop
dec
int
xor
ins
(bad)
inc
(bad)
adc
cs
out
push
inc
cmp
icebp
cdq
aas
inc
cmp
push
push
aam
mov
inc
in
inc
mov
mov
stos
jno
jae
fcom
adc
enter
call
ins
jno
cli
cmc
scas
inc
pop
or
push
in
push
imul
pop
xchg
sbb
outs
and
cmp
stc
and
cli
mov
mov
xor
lds
dec
mov
and
dec
scas
mul
retf
or
js
xchg
lea
xlat
adc
fisttp
jmp
cmp
sub
mov
sub
in
dec
dec
aas
add
pop
outs
daa
ins
mov
jne
sar
or
and
fbld
imul
in
jmp
xchg
(bad)
dec
and
pop
sbb
mov
ret
jmp
fcom
cli
jns
repz
mov
dec
add
data16
enter
hlt
cmp
add
sub
mov
add
mov
stos
xchg
jno
(bad)
hlt
(bad)
or
int3
cli
inc
push
cs
das
pop
mov
xchg
push
dec
sahf
fcom
fcmovne
mov
sbb
lods
test
retf
xor
cli
inc
sub
mov
mov
xlat
xchg
imul
pop
push
mov
xor
dec
sbb
je
ret
lods
cmp
inc
jge
cmc
sbb
cld
mov
fcomp
mov
enter
xor
jmp
test
aaa
je
xchg
sti
ds
lds
ja
pop
popa
cs
push
inc
sub
pusha
(bad)
sub
ret
mov
xchg
popa
test
inc
std
dec
push
and
jg
into
push
pop
in
sti
xor
cli
sbb
arpl
je
mov
loopne
mov
jl
mov
sahf
push
ret
mov
xchg
cli
ds
retf
mov
adc
inc
ja
stos
mov
cmp
popa
jg
ret
(bad)
rol
fld
call
inc
cli
xor
mov
fcomp
loop
mov
retf
ins
popf
jle
sti
mov
xor
lods
stos
xor
cli
ins
sbb
fidiv
std
bound
adc
sub
pop
fidiv
in
mov
je
lock
jp
jl
sbb
je
cmps
push
xchg
loopne
xor
je
push
cli
bound
ins
push
out
movs
pop
imul
(bad)
mov
mov
cli
add
mov
inc
mov
add
sub
adc
push
sbb
fadd
rol
not
lods
cwde
adc
mov
outs
add
sbb
sub
inc
adc
mov
(bad)
scas
nop
pusha
push
xor
xlat
aaa
xchg
add
jmp
aaa
(bad)
jl
ins
iret
mov
js
add
inc
rcr
outs
fst
cmp
push
movs
nop
push
stos
lods
cmp
mov
in
jge
loopne
out
bound
lea
push
mov
dec
sahf
sbb
add
xchg
stos
add
clc
xchg
pop
cmc
xor
pop
ds
movs
or
or
push
pop
shr
sub
loope
dec
(bad)
cdq
mov
inc
aaa
sbb
xor
mov
sbb
cmp
sub
lahf
data16
jbe
mov
mov
add
outs
push
fistp
inc
pop
mov
fistp
jns
loopne
xor
pop
mov
ds
inc
dec
jae
sbb
push
test
add
imul
popa
sub
loopne
in
ja
inc
movd
cli
movs
loopne
arpl
push
stc
xor
or
lds
loopne
pop
jae
push
cdq
mov
ja
pop
out
call
and
rol
call
lahf
shl
ret
mov
retf
jno
xchg
and
arpl
adc
inc
(bad)
fimul
loopne
mov
mov
adc
pop
push
repz
ror
scas
jo
pop
retf
push
pop
imul
and
inc
or
jmp
mov
retf
push
push
mov
add
imul
add
dec
jmp
fwait
(bad)
push
push
das
outs
mov
sahf
cld
jge
cmps
daa
mov
jl
jmp
jle
add
fmul
mov
leave
cwde
mov
fs
and
js
stos
jge
dec
jge
jns
add
adc
(bad)
mov
fild
sbb
and
adc
fidiv
pop
pop
psubsb
lahf
xchg
sti
jnp
fmul
xor
dec
mov
or
fsub
dec
bound
pop
stos
fwait
mov
aad
xchg
and
ret
aaa
xchg
js
jae
pop
mov
aas
mov
cdq
dec
mov
mov
test
and
ror
sbb
mov
ds
out
xchg
xchg
mov
(bad)
in
(bad)
fsubr
fdivr
out
leave
mov
mov
int
out
(bad)
sub
ins
loopne
cmps
pop
xchg
or
sbb
movs
xor
add
pop
fs
add
inc
mov
retf
pushf
or
ss
cmp
aad
fsubr
aaa
(bad)
push
jl
or
and
pop
mov
icebp
ja
daa
ret
std
mov
das
daa
mov
add
pusha
inc
xchg
ds
adc
jo
and
or
je
xchg
ror
ds
mov
out
mov
cmp
mov
or
stc
cmp
lds
(bad)
cmps
or
scas
cmc
idiv
rol
rcl
inc
or
sub
jbe
sub
aam
cli
div
or
mov
data16
jbe
pop
mov
sar
mov
mov
inc
sub
data16
ja
push
repnz
add
(bad)
ds
mov
xor
test
fwait
xor
(bad)
adc
call
ret
ret
addr16
lds
(bad)
jmp
les
fild
call
inc
dec
call
jnp
xor
and
xor
mov
adc
stos
push
imul
cmc
xor
jge
dec
mov
dec
jns
cmp
stos
pop
out
push
ror
xchg
and
repnz
sub
jne
xchg
adc
mov
out
jb
or
inc
mov
lods
rol
push
or
xchg
loope
sub
les
inc
xor
pop
icebp
push
ja
test
inc
or
add
and
dec
cmps
lods
sbb
inc
mov
test
push
imul
push
in
dec
dec
lea
fmul
iret
pop
in
cmp
fist
jmp
shr
xor
sub
cli
jl
sub
stos
rol
jmp
(bad)
mov
push
mov
pusha
jmp
xor
sar
add
aas
xchg
les
jns
push
test
es
fcomp
sub
out
imul
fnsave
adc
jb
cmp
cli
int3
or
push
sbb
es
jno
es
adc
mov
sbb
les
add
push
jbe
sub
stc
inc
fstp
fcmovne
mov
mov
mov
test
mov
dec
inc
jnp
xchg
pop
lahf
xor
pop
aas
adc
push
imul
sbb
dec
jecxz
add
or
nop
ret
popa
aas
(bad)
data16
jae
adc
ret
imul
sbb
adc
nop
ds
cmps
fs
pop
inc
push
sub
mov
daa
icebp
ja
sub
and
imul
mov
test
mov
mov
sub
jmp
sub
mov
ins
test
xchg
bound
movs
pop
popf
call
mov
mov
xchg
mov
addr16
xor
mov
mov
mov
xchg
lds
cmps
cmp
ins
(bad)
add
add
mov
lea
jmp
cdq
pop
cwde
cmp
jne
pop
jge
jne
arpl
add
cmps
adc
rcr
fist
xchg
out
cmp
ret
push
repnz
(bad)
pop
enter
mov
repnz
fucomp
mov
add
push
retf
pop
out
sub
jno
lds
jp
mov
in
xchg
xchg
mov
sti
pop
ss
jnp
int3
mov
xor
or
dec
dec
xchg
stos
push
push
mov
(bad)
pop
iret
dec
adc
sub
and
push
aam
sub
mov
push
repz
cdq
adc
aas
inc
ret
adc
int
icebp
sahf
into
mov
add
scas
mov
int3
ins
or
gs
test
and
inc
rol
(bad)
push
xchg
fcomp
sub
push
popa
out
ds
(bad)
adc
and
enter
dec
mov
je
xor
or
dec
adc
sbb
mov
sub
pop
adc
sub
sahf
cs
xor
jle
sbb
or
mov
cmp
jg
mov
push
cli
cmp
jg
push
lock
lods
and
mov
fwait
xor
pop
(bad)
mov
daa
push
or
sub
inc
add
or
xchg
out
xor
xchg
mov
xchg
mov
rcr
(bad)
aam
gs
xor
scas
pop
out
pop
sbb
cmp
jno
test
ins
loopne
jg
add
fwait
popa
call
rcl
adc
mov
jp
adc
cwde
or
ret
push
test
enter
xchg
jne
mov
add
movs
aam
pop
rcr
ret
xchg
sbb
jmp
(bad)
das
push
out
lahf
adc
pop
add
imul
xor
jecxz
out
xchg
popf
movs
(bad)
sbb
dec
and
ret
cs
xchg
ds
in
mov
shrd
add
fisubr
jo
lea
mov
cmp
ins
jbe
sbb
dec
(bad)
cmc
mov
mov
inc
enter
jg
pop
out
lods
addr16
adc
enter
rcl
cmp
jae
and
inc
jo
fsubr
mov
and
jmp
xchg
jl
out
dec
or
cmp
sbb
arpl
dec
(bad)
or
std
mov
mov
in
cmp
es
jmp
out
fsubr
mov
js
sti
cdq
adc
call
pusha
loope
hlt
jecxz
ret
or
inc
in
sahf
inc
aad
xor
dec
mov
rcr
hlt
inc
sub
(bad)
out
iret
cmp
cmps
cdq
mov
cmp
jecxz
push
and
and
(bad)
adc
rcr
iret
into
mov
stos
fsubr
test
xchg
mov
call
xor
shl
xchg
mov
popa
(bad)
clc
adc
sti
or
xchg
mov
int3
sahf
out
xchg
retf
lock
out
and
inc
outs
inc
jmp
es
xchg
loope
xor
xor
pop
cmp
pushf
fdivr
ins
out
push
lds
mov
daa
bound
mov
mov
bound
mov
xchg
xor
sub
inc
push
in
inc
mov
pop
cmp
daa
dec
mov
out
ret
lods
xlat
jmp
sub
in
imul
daa
push
outs
test
dec
adc
in
inc
rcr
dec
(bad)
fimul
rep
mov
mov
push
aam
or
push
outs
xor
mov
dec
mov
shr
call
mov
mov
(bad)
xor
xchg
push
or
mov
cld
shr
xor
test
and
sub
mov
outs
dec
fldenv
ror
jnp
retf
add
jo
call
mov
or
jae
pop
or
push
adc
outs
mov
aam
inc
xlat
add
or
mov
arpl
mov
or
jne
cdq
addr16
pop
mov
in
push
mov
sbb
(bad)
cmps
repnz
rcr
ror
pop
pavgw
cli
jle
pop
mov
in
es
inc
lods
sub
and
add
gs
clc
ret
adc
cmp
ss
test
out
data16
xchg
sub
adc
dec
and
fwait
xor
jp
mov
mov
and
inc
mov
test
inc
ins
xor
pushf
bound
sub
mov
jns
call
cmp
out
aaa
mov
daa
dec
ret
mov
ins
jnp
xchg
lds
mov
hlt
adc
mov
adc
retf
adc
mov
cwde
loope
pop
or
sbb
and
jb
loopne
outs
movs
adc
push
and
movs
adc
jmp
stos
stos
xor
mov
nop
popa
mov
movs
inc
bound
push
aas
dec
outs
js
jecxz
cli
retf
ins
pusha
mov
ficomp
push
bound
ss
inc
leave
rcr
cmp
inc
gs
retf
push
fs
lock
pop
in
sahf
mov
ins
vpmadcswd
pusha
pop
pop
ja
mov
fwait
inc
retf
daa
sbb
pop
enter
mov
mov
xchg
cmps
jmp
(bad)
pop
bound
sti
pop
lea
aad
pop
push
mov
pop
push
iret
call
jmp
dec
xchg
jl
or
aad
inc
mov
sbb
adc
mov
mov
xchg
jg
inc
jb
xor
movs
std
neg
mov
ret
xchg
imul
test
repz
test
cmp
and
enter
sbb
xchg
stos
mov
fdiv
mov
ins
test
nop
push
lock
push
call
pop
mov
rcr
ja
cmp
jecxz
stos
xchg
xchg
sbb
xor
dec
sti
mov
dec
jne
inc
xor
test
jns
sbb
into
call
out
push
pop
fidiv
add
jns
jle
das
dec
(bad)
mov
dec
pop
shr
int3
sub
dec
outs
dec
mov
dec
sbb
mov
test
int3
call
les
ret
aas
adc
or
sahf
or
pusha
addr16
jge
fst
xchg
movs
jg
sub
call
mov
push
in
adc
rcr
outs
fwait
jp
(bad)
or
outs
imul
lods
imul
call
shl
call
dec
das
aaa
pop
mov
sbb
dec
or
jnp
gs
inc
mov
jno
adc
not
cmp
pushf
icebp
mov
lds
into
jp
jb
(bad)
mov
mov
rcl
push
ror
out
jns
adc
(bad)
loop
inc
ret
dec
mov
(bad)
push
daa
or
or
idiv
adc
xor
stc
repz
je
je
and
pop
fisttp
dec
mov
cmps
cmp
xchg
sub
add
ja
or
and
je
stos
mov
xchg
int3
fs
jne
(bad)
push
mov
(bad)
lds
mov
push
push
idiv
(bad)
cld
cmp
adc
sar
or
inc
xor
jmp
jnp
push
ja
enter
or
fiadd
out
sbb
repz
pop
mov
or
fisub
or
cmp
(bad)
fwait
xor
cli
and
xor
ret
(bad)
or
scas
(bad)
jae
int
mov
sub
sahf
inc
push
mov
xchg
or
pop
jnp
jg
inc
lahf
lock
jmp
pop
push
pushf
pop
and
sahf
mov
stos
or
je
and
inc
push
int
lahf
inc
dec
sbb
loopne
mov
imul
dec
test
icebp
ds
mov
movs
retf
xchg
(bad)
xchg
or
mov
outs
sbb
les
and
mul
cmc
jb
jmp
shl
mov
leave
push
xor
das
dec
and
fdiv
cmp
cli
(bad)
push
mov
loop
sbb
pop
iret
and
jge
ror
ror
mov
(bad)
mov
dec
repnz
cs
(bad)
loope
adc
sub
movntq
cmp
rcr
jo
out
mov
pop
xor
inc
mov
out
pop
jl
sub
sub
xchg
mov
or
lock
lea
call
rol
mov
fsubr
jmp
ja
lock
ret
jnp
(bad)
enter
aad
in
sbb
mov
das
mov
sbb
mov
in
xor
(bad)
je
pop
jmp
les
dec
movs
repz
mov
mov
cmp
xchg
add
in
push
mov
pop
lock
retf
sbb
fnstcw
mov
call
fwait
push
adc
mov
push
sbb
push
dec
or
adc
out
inc
ret
xor
jmp
sqrtps
add
xlat
sbb
retf
sbb
sahf
jecxz
sub
jge
out
shr
mov
xchg
cmp
mov
mov
cmp
retf
sub
stc
repz
xor
cli
int
sbb
pop
stos
cld
xchg
call
mov
das
inc
clc
sub
pushf
in
inc
outs
mov
xchg
jne
gs
daa
scas
jl
(bad)
rcl
cmp
jmp
clc
jle
xor
sub
adc
bound
xor
aad
jb
cmp
mov
or
cmp
push
fadd
push
xor
xor
or
call
add
jl
or
retf
adc
mov
and
sahf
xchg
cwde
scas
mov
fstp
lahf
mov
pop
inc
outs
outs
fsubr
cmp
cmps
push
inc
sti
cmp
mov
icebp
in
dec
xchg
push
std
sbb
lea
je
cmps
cmp
test
les
cwde
fs
jle
mov
das
mov
xchg
or
jle
add
add
adc
outs
das
rol
dec
popf
test
fwait
pinsrw
mov
pop
add
js
lea
mov
sub
or
xor
mov
cmovl
xor
pop
inc
xor
xchg
push
pusha
arpl
call
pusha
ret
inc
in
inc
jecxz
cmp
imul
in
and
aaa
daa
jno
bnd
inc
imul
imul
inc
xor
pop
xchg
and
xchg
aaa
dec
mov
outs
daa
adc
aam
repz
movs
jne
push
jmp
inc
(bad)
mov
cs
(bad)
and
test
clc
sub
jb
push
mov
or
addr16
mov
gs
jo
stos
aad
ror
jle
clc
adc
frstor
ror
add
inc
inc
and
jne
retf
les
adc
adc
jnp
jmp
mov
lds
es
(bad)
ds
leave
pop
paddb
jnp
fld
jp
test
mov
add
jno
arpl
nop
xor
test
fs
scas
adc
in
inc
arpl
stc
mov
leave
enter
ror
push
add
cwde
cmp
mov
jae
jnp
push
pop
movs
imul
cld
(bad)
pop
and
mov
cmp
xchg
ss
xchg
mov
pop
test
std
(bad)
cld
or
into
sub
cmp
and
add
or
pop
mov
and
call
pusha
imul
fwait
clc
out
mov
test
repnz
shl
sub
(bad)
into
lock
inc
cmps
xor
push
mov
mov
cmps
repnz
lahf
cdq
fldenv
or
test
test
sti
(bad)
pop
dec
mov
lods
jge
daa
(bad)
ds
and
inc
mov
mov
adc
fwait
rol
sbb
mov
jbe
jecxz
movs
stos
mov
sbb
and
pop
cld
push
jmp
retf
xchg
xchg
or
clc
(bad)
in
inc
sbb
mov
mov
mov
sti
pusha
dec
jb
fisub
or
aam
aad
mov
cmp
sub
and
fwait
lods
jne
mov
pop
out
sub
push
arpl
mov
(bad)
dec
lods
movs
mov
jno
mov
dec
sar
fwait
int3
(bad)
aam
dec
and
sbb
jmp
in
bound
inc
jg
xor
mov
jp
push
xchg
mov
mov
bound
dec
push
mov
sub
cmp
add
ror
mov
leave
inc
cmps
ja
mov
out
dec
mov
sub
jecxz
dec
push
lock
mov
in
lds
push
int3
es
int
neg
xor
add
leave
or
and
cmp
push
imul
xchg
jbe
or
cli
cmps
add
loopne
(bad)
sub
and
push
movs
pop
jb
dec
adc
and
pop
dec
push
hlt
sub
cmp
addr16
je
stos
xchg
pop
mov
push
inc
lds
out
push
in
fsub
cmp
movs
pop
shl
inc
imul
(bad)
adc
jg
pop
cmp
adc
or
ins
sbb
js
add
std
push
out
inc
retf
jne
sub
sti
leave
push
sbb
rol
xor
dec
jmp
xchg
pop
repz
cmp
fsincos
mov
jecxz
sub
or
mov
dec
dec
cmp
iret
shl
dec
jp
aam
rcr
or
cli
dec
rcr
(bad)
jmp
scas
std
xlat
add
push
sub
jl
sub
loop
enter
inc
into
sbb
cmp
aaa
xchg
lods
addr16
movs
aaa
bound
cli
ins
and
or
sub
or
mov
ins
lea
inc
xchg
in
pop
(bad)
cmc
xchg
xchg
add
in
lahf
push
add
fbld
xor
or
js
out
out
push
mov
and
mov
imul
and
mov
sbb
iret
inc
lods
add
cli
push
pop
xchg
pushf
addr16
shl
ins
cmp
pop
data16
cmp
dec
jb
push
push
jge
jmp
mov
std
jns
clc
add
test
and
add
je
data16
lock
in
jl
mov
xor
fwait
imul
or
xchg
mov
xor
jecxz
cld
aam
dec
jmp
sbb
mov
jo
not
cli
mov
(bad)
or
ins
je
or
push
stos
mov
pop
push
add
and
std
or
je
add
in
mov
xchg
(bad)
pop
sbb
into
out
cld
icebp
push
stc
xchg
jle
bound
call
jne
jae
cmp
movs
(bad)
out
(bad)
(bad)
or
jo
pushf
mov
push
sub
sbb
dec
inc
sbb
lahf
and
or
push
mov
or
int3
pop
mov
jno
mov
les
ret
aaa
mov
dec
pop
repnz
dec
adc
imul
sub
das
mov
cmp
push
jg
ret
mov
cwde
xchg
iret
ret
sbb
gs
lods
sar
sti
es
cli
cmp
(bad)
sub
ret
xlat
(bad)
out
jb
or
dec
push
hlt
in
out
push
retf
xor
adc
sub
and
(bad)
pop
jl
dec
test
sbb
and
lahf
retf
pop
mov
jne
outs
scas
cmps
clc
data16
mov
(bad)
sub
rol
push
mov
out
icebp
or
js
in
rol
xchg
dec
jge
xchg
xchg
cmp
popw
(bad)
pusha
cwde
jnp
add
test
fcmovb
adc
dec
jl
shl
jg
shl
jno
pop
call
xchg
pushf
leave
mov
mov
jg
dec
out
imul
and
imul
aas
dec
out
fnstsw
push
add
inc
stos
scas
sub
and
hlt
push
daa
push
mov
or
pop
sbb
js
jp
sub
inc
sbb
fisub
sub
sub
arpl
ins
out
in
add
ds
or
test
mov
inc
imul
jl
ret
(bad)
aas
pop
jmp
jg
xchg
inc
lock
mov
mov
std
inc
(bad)
leave
jp
sahf
jo
sbb
stc
inc
cdq
(bad)
pop
lods
dec
je
popf
adc
test
mov
(bad)
fadd
xor
rcl
push
sub
sti
scas
mov
(bad)
dec
pop
mul
xlat
sbb
xchg
dec
mov
jo
jl
inc
fwait
mov
outs
rcl
xchg
bound
std
sub
mov
mov
sub
ja
xor
and
or
xchg
mov
icebp
leave
dec
cmp
fmul
imul
and
xor
hlt
mov
jae
aad
fdiv
rcl
jp
pop
adc
jmp
inc
and
xor
push
sub
inc
(bad)
sti
mov
das
xor
repnz
loopne
and
add
cmc
jecxz
(bad)
cmp
inc
(bad)
setbe
xchg
push
push
mov
add
xchg
or
cmp
push
psubusb
inc
movs
ins
add
pop
outs
dec
lahf
dec
or
push
sahf
pop
pusha
xor
jle
fadd
loop
cld
or
push
sbb
push
in
cmp
js
ins
mov
mov
jl
loopne
xor
mov
test
jo
inc
inc
mov
xchg
xor
aad
les
sub
mov
into
xchg
repnz
bound
xchg
ss
icebp
pop
push
call
sbb
sub
add
mov
mov
xor
dec
inc
out
(bad)
dec
mov
bound
or
aad
ja
cmp
jae
movs
push
sub
dec
mov
scas
fcomp
jns
pop
jmp
xor
xchg
xlat
push
sub
les
or
mov
sub
mov
adc
adc
(bad)
nop
int3
pop
push
into
ins
mov
repnz
fcomp
icebp
es
dec
push
or
adc
jmp
cmp
clc
iret
aaa
adc
(bad)
in
xchg
in
sub
xor
cmps
jbe
push
sub
xchg
(bad)
jns
repz
push
out
mov
cmp
mov
mov
gs
pop
mov
fst
sbb
mov
jmp
lods
out
jo
fisub
(bad)
jecxz
jmp
cmp
mov
sti
push
pop
daa
cdq
inc
fbld
call
or
xor
sub
mov
pusha
or
in
jae
xor
sub
hlt
fnstenv
push
pushf
inc
or
pop
scas
adc
add
mov
xchg
cs
dec
retf
popf
xchg
enter
cmp
sub
sub
mov
xor
add
pushf
xchg
(bad)
pop
movs
jb
jg
pop
or
jecxz
jae
movs
into
popa
xor
fld
push
cmp
aaa
arpl
inc
xor
gs
pop
stc
inc
bound
icebp
es
inc
push
or
xchg
arpl
cmp
out
cmps
mov
pop
in
inc
mov
jb
dec
inc
and
je
push
add
sti
in
popa
mov
xor
jb
(bad)
retf
out
sub
jmp
(bad)
lods
xor
or
pop
loopne
aas
ror
inc
nop
js
sub
sar
nop
hlt
sub
ficomp
inc
pop
mov
outs
hlt
xor
jmp
or
stc
cmc
ret
push
dec
movs
(bad)
ins
rcr
lea
cmps
dec
data16
retf
out
push
cmpps
outs
fidiv
ss
stos
inc
or
nop
mov
lock
test
(bad)
dec
sub
lods
mov
add
std
scas
arpl
out
aaa
popa
inc
ror
imul
xchg
dec
jg
aam
sub
xchg
popa
inc
mov
test
mov
xchg
daa
in
pop
sub
adc
sub
jae
std
leave
icebp
cmp
aam
add
mov
sahf
cs
jmp
iret
push
dec
pop
push
sbb
cmp
fisttp
and
mov
aaa
test
pop
push
push
jmp
pushf
jns
jge
mov
cmps
xor
gs
add
out
mov
retf
outs
loope
rcl
dec
enter
adc
pop
inc
or
loop
in
sahf
push
iret
shr
enter
stc
dec
jle
mov
push
repz
sub
mov
xchg
inc
pop
push
aaa
sahf
pop
xlat
xor
mov
inc
mov
pop
fimul
push
jmp
ror
test
pop
leave
ret
mov
mov
retf
fild
int
sub
imul
out
ja
cmp
cmps
fcomp
jg
test
ja
test
jmp
loop
shl
add
mov
push
out
jbe
mov
xor
mov
mov
mov
dec
lahf
jne
adc
sar
mov
int3
mov
push
mov
mov
adc
cmps
dec
dec
add
fs
push
xchg
or
jp
cmp
scas
mov
push
or
cmp
repz
xor
sub
or
lods
and
sbb
sub
sbb
mov
adc
dec
mov
dec
aas
mov
lahf
aam
jo
cld
and
inc
inc
lods
sar
push
jmp
cmps
or
aas
push
pop
lods
adc
stc
sbb
pop
dec
push
mov
mov
jns
mov
pop
pusha
rcr
call
cmps
mov
test
jg
push
mov
jmp
cmps
idiv
sbb
daa
mov
(bad)
mov
mov
ror
(bad)
(bad)
stos
xor
pop
mov
jl
mov
and
xchg
and
retf
repnz
out
hlt
xchg
sub
mov
push
in
xor
shr
nop
retf
lods
pop
mov
cmps
jo
fisub
or
mov
add
xor
(bad)
mov
dec
mov
mov
jb
add
bound
push
scas
aam
std
ins
adc
sti
in
push
retf
pop
and
and
shl
(bad)
push
rol
stos
fimul
mov
jge
ins
fstp
and
test
ret
test
add
lods
imul
pop
stos
xchg
je
inc
push
test
xchg
sbb
daa
inc
fisub
dec
push
nop
pusha
add
retf
sbb
jns
and
fcmovne
dec
dec
loop
cmp
and
gs
jmp
sub
mov
cmp
lea
iret
test
popa
sbb
sub
call
jbe
pop
push
vcmpsd
add
xchg
nop
arpl
dec
pop
dec
pop
pushf
push
pop
sbb
mov
retf
cmp
mov
cmp
pop
pusha
mov
inc
dec
shl
sbb
inc
sub
popf
int3
xor
xchg
leave
jecxz
dec
push
gs
mov
jns
cmps
lods
or
xchg
xor
push
ja
imul
out
aaa
mov
mov
push
mov
mov
cmps
cmp
mov
xchg
push
xchg
mov
dec
and
inc
outs
popf
xchg
pop
stc
mov
(bad)
ret
pop
scas
addr16
mov
jae
cli
scas
mov
mov
out
(bad)
ss
jle
nop
xchg
dec
adc
mov
sub
(bad)
(bad)
mov
ror
sbb
and
pop
ret
ror
test
cwde
ds
add
test
sbb
jle
xlat
xlat
test
cmp
icebp
jmp
call
dec
test
inc
imul
adc
popa
lods
xor
pop
push
stc
add
mov
arpl
add
push
fcomip
pop
and
pushf
pop
dec
lea
movs
push
mov
out
jbe
mov
out
xor
js
xor
neg
loop
push
sbb
push
jbe
xchg
test
(bad)
and
mov
pavgb
not
sbb
xor
cmps
out
sub
mov
pop
adc
movs
jmp
jmp
adc
cmp
sbb
cmp
(bad)
pop
jmp
and
mov
or
mov
mov
std
aas
aam
mov
data16
sahf
pop
inc
cmp
test
or
cmp
sbb
cmp
push
ds
daa
mov
les
pop
jmp
lods
mov
mov
jae
jecxz
mov
je
call
loopne
cmp
js
lods
sub
movs
inc
xor
mov
or
jo
sbb
fwait
xlat
rcl
and
xchg
and
lea
outs
aad
xchg
or
pop
je
aad
jbe
push
jne
pop
mov
adc
inc
add
inc
(bad)
mov
sub
scas
pop
mov
push
(bad)
std
fidiv
stos
iret
push
add
sub
add
retf
and
xor
inc
sbb
(bad)
aam
nop
js
pop
or
inc
and
pop
inc
lock
aaa
cwde
jnp
fwait
jmp
push
sub
mov
aad
pop
retf
movs
je
test
dec
rcl
cmovae
push
movs
add
stc
in
sbb
sbb
mov
xlat
fwait
shl
in
sbb
mov
out
(bad)
xor
fstp
add
add
rol
sahf
mov
mov
cmp
pop
xor
or
jl
fwait
sbb
repz
leave
mov
cmp
cld
jl
in
sub
mov
outs
sbb
dec
add
cmps
enter
in
(bad)
call
daa
in
les
sbb
pop
fsubr
iret
add
je
and
sub
and
jb
shr
jge
pop
pop
push
pop
ins
jo
inc
jns
pusha
retf
mov
mov
ss
cld
xchg
xor
jne
or
mov
mov
cmp
xor
xchg
retf
ins
and
or
or
xlat
cmps
jnp
imul
dec
xchg
inc
or
nop
and
sbb
test
jp
movs
mov
sbb
inc
loopne
push
fsubp
and
in
jmp
test
jmp
push
cmps
out
mul
adc
or
add
popa
movs
pop
xor
cmc
je
ss
dec
fnstsw
lods
cmp
sbb
mov
pop
jne
inc
cmp
and
sub
sbb
xchg
sti
popf
rcl
push
adc
pop
mov
repnz
mov
add
test
adc
dec
inc
stos
inc
push
xchg
scas
pop
dec
jge
cmps
fnstcw
daa
push
sub
imul
pop
retf
or
xchg
sub
iret
and
repz
or
jge
mov
hlt
test
push
push
mov
or
push
cmps
inc
xchg
cli
es
mov
int3
dec
mov
xchg
jecxz
clc
test
call
inc
and
mov
mov
cli
sbb
jnp
jb
mov
mov
pop
pop
xchg
or
push
mov
jl
repz
sub
jmp
clc
out
js
retf
inc
dec
adc
in
add
sub
into
xchg
fistp
inc
and
iret
push
xlat
push
ret
and
pop
in
sub
adc
cmps
add
cmp
mov
push
jecxz
ins
fsubr
fs
bound
jnp
lods
mul
into
sti
and
imul
(bad)
in
fadd
inc
jns
dec
inc
push
pop
mov
movs
not
cmp
mov
call
leave
fst
mov
mov
or
lahf
out
leave
push
pop
add
retf
test
push
test
jno
dec
mov
loope
xor
sbb
push
daa
push
dec
mov
push
add
and
mov
add
pop
dec
xchg
call
pop
jmp
inc
stc
data16
lock
xchg
mov
fdiv
idiv
stc
popa
aam
inc
daa
fs
or
pop
xlat
push
jle
in
retf
call
mov
pop
push
test
cmp
adc
and
xchg
mov
dec
push
mov
adc
mov
int
adc
das
cmp
jbe
fsub
xchg
ja
fidiv
call
mov
arpl
jmp
jne
inc
add
push
add
mov
es
nop
dec
pop
(bad)
adc
scas
ins
mov
or
das
or
(bad)
mov
(bad)
sub
sbb
ret
ss
pop
stos
adc
and
sahf
mov
jp
and
call
loopne
out
push
sbb
mov
or
sahf
lods
daa
fisttp
lods
inc
test
mov
leave
aam
out
popf
inc
mov
fstp
xor
jb
mov
fst
icebp
jecxz
aas
fmul
cmp
daa
dec
push
test
xchg
ds
jb
inc
xor
rcr
pop
in
stc
pop
add
es
mov
outs
mov
stos
mov
sahf
je
sbb
adc
sbb
push
pop
push
out
repz
sahf
mov
xor
jno
sub
adc
in
mov
mov
jp
cmc
int3
popa
sbb
test
data16
shl
test
mov
loopne
inc
mov
je
sti
rcr
inc
push
pusha
inc
dec
xchg
push
jo
xchg
adc
aaa
pop
nop
(bad)
cmp
xchg
pop
mov
cdq
push
retf
int3
gs
bound
sub
push
scas
xchg
or
jb
scas
mov
sbb
mov
or
sbb
inc
mov
sub
in
cmc
mov
enter
mov
enter
sar
jns
or
in
pop
hlt
outs
mov
xor
mov
jecxz
sar
cs
push
and
call
sahf
pushf
xchg
jecxz
pop
push
ja
jmp
cmp
arpl
icebp
in
lods
inc
sub
retf
adc
xor
ja
jns
xchg
xchg
adc
sbb
repnz
xchg
jp
cdq
or
or
mov
loopne
add
add
arpl
jp
fstp
jl
fisub
dec
xchg
or
data16
lahf
loopne
sub
sub
add
xor
sub
popa
fcom
push
ja
xchg
fs
mov
push
daa
mov
jp
repz
pop
data16
adc
ficomp
enter
fadd
sti
sahf
das
mov
mov
jle
(bad)
sub
inc
test
fstp
sti
test
imul
sti
dec
js
out
push
fwait
repz
ins
inc
sar
pop
stos
dec
add
pop
enter
outs
cli
nop
mov
cmp
loopne
adc
ror
push
neg
cmp
add
enter
sub
mov
rcl
mov
push
xor
xor
in
pop
arpl
aaa
dec
mov
ins
nop
cvtps2pi
mov
les
push
and
push
or
aaa
pop
enter
jb
test
outs
lods
xchg
add
push
adc
fs
ins
and
or
add
adc
sbb
bound
call
ror
mov
sbb
das
mov
into
inc
and
or
dec
pop
dec
(bad)
or
call
repnz
sbb
mov
pop
je
imul
or
jp
jnp
fcom
mov
xchg
push
sbb
js
test
ror
in
mov
jmp
and
mov
sar
dec
cdq
cmp
(bad)
sub
(bad)
mov
mov
jmp
pop
jb
pushf
(bad)
sar
pop
outs
enter
xor
ja
mov
jne
mov
not
fadd
arpl
imul
pop
out
add
sub
cmps
jle
xchg
push
adc
fisubr
mov
sti
test
scas
pusha
xchg
ja
sub
sbb
push
movs
rol
dec
adc
xchg
in
and
or
inc
ret
inc
and
out
sbb
sbb
imul
ja
sbb
add
pushf
push
repnz
adc
bound
sti
push
add
jno
je
or
jl
push
fwait
and
cmp
mov
ins
call
adc
cmc
push
repz
out
adc
sub
mov
ss
ins
adc
leave
sub
nop
jnp
sahf
out
fdivr
dec
movs
scas
pop
ins
and
xor
xor
xor
xor
push
(bad)
mov
maxps
pop
lahf
dec
mov
jns
pop
push
dec
jg
imul
xbegin
gs
fadd
inc
pushf
xchg
sets
sub
in
mov
icebp
fild
scas
outs
push
cld
and
daa
jecxz
(bad)
in
popa
dec
cmps
mov
lods
aad
test
test
push
xor
scas
mov
jnp
sti
mov
cmp
das
rcl
clc
std
ret
cmps
stos
push
inc
jmp
dec
xchg
push
or
les
push
inc
inc
sbb
ret
repnz
dec
aam
sub
rcl
inc
dec
arpl
popa
and
dec
or
mov
hlt
clc
or
scas
mov
bound
and
push
xor
pop
xchg
outs
cmps
push
or
mov
and
cli
int3
mov
inc
pop
jg
std
retf
aaa
std
or
or
dec
popf
std
call
and
pop
pop
addr16
and
jmp
cdq
rol
loop
sar
call
dec
ss
sti
dec
pop
pop
jmp
xchg
mov
xchg
and
dec
or
cwde
cmp
pop
pop
mov
pusha
push
add
cmp
dec
fmulp
pusha
fdivr
mov
mov
enter
movs
sbb
pop
push
xchg
pop
(bad)
mov
mov
and
pop
enter
cmp
push
pop
push
test
enter
pop
in
pop
pop
sahf
dec
xchg
add
push
stc
mov
inc
push
push
fldcw
repnz
das
ins
jp
ss
xor
push
or
sbb
sub
or
jo
scas
dec
push
xor
jle
adc
call
mov
lahf
imul
das
mov
and
xchg
leave
shl
mov
or
loop
jmp
fbld
push
xchg
imul
dec
inc
fisttp
outs
ror
aaa
gs
mov
cmps
xor
xchg
xchg
arpl
add
xchg
pop
clc
iret
xor
repz
(bad)
mul
pushf
inc
loopne
cmp
jg
mov
ins
xor
mov
or
pop
mov
test
add
push
jg
(bad)
pop
or
js
xchg
sub
xchg
idiv
inc
mov
push
pushf
xchg
mov
rcr
mov
push
cmp
adc
mov
sti
xlat
mov
dec
cld
xchg
xor
jle
cld
jnp
jnp
xor
cmps
test
mov
lock
xchg
inc
outs
(bad)
sbb
rcr
sub
test
outs
add
fcomp
mov
add
add
add
sub
in
(bad)
and
and
cs
xchg
clc
jnp
mov
fucomi
jne
ss
dec
dec
cmp
fldcw
pop
and
adc
aas
mov
repnz
lea
cmps
push
int3
xchg
dec
sahf
jecxz
addr16
add
pop
pop
sbb
push
mov
push
addr16
in
ret
mov
mov
shl
lds
add
(bad)
fcmove
leave
xor
pop
mov
cmp
out
push
aad
push
enter
jne
add
push
fidivr
(bad)
jbe
iret
test
std
inc
add
out
cmp
mul
aam
icebp
jl
push
(bad)
in
fsub
inc
or
sahf
ret
sbb
loop
mov
clc
jmp
mov
aam
pop
popf
aam
clc
imul
std
cmc
jae
test
in
bound
cld
daa
inc
xor
xor
mov
sbb
nop
mov
push
jge
rol
mov
sub
xchg
nop
aad
mov
mov
repnz
add
mov
push
mov
jo
test
pop
cmc
dec
push
jmp
add
iret
fnstcw
dec
out
cmc
and
mov
retf
sbb
fdiv
xchg
inc
ds
(bad)
sub
sti
sbb
push
ja
popa
fs
and
rol
jmp
adc
in
loopne
je
add
shl
mov
scas
dec
cs
mov
sub
mov
icebp
cli
aam
or
mov
adc
adc
dec
cdq
xchg
push
inc
ins
scas
mov
dec
jns
div
ins
jle
xor
stc
dec
stc
pop
aad
test
scas
cmp
jns
sub
outs
jecxz
sub
call
(bad)
(bad)
fcom
dec
int3
repz
inc
icebp
add
scas
sbb
mov
dec
mov
lods
sbb
mov
adc
iret
push
data16
cs
out
ret
pop
neg
sub
add
outs
and
inc
xchg
cs
pop
(bad)
jmp
inc
dec
mov
dec
iret
dec
adc
repz
popa
adc
mov
push
xlat
cmovge
xor
sbb
aaa
repz
psubd
or
pop
imul
(bad)
cs
lods
into
outs
ja
inc
bound
ds
pop
pop
pop
or
stos
iret
dec
or
jbe
pop
lds
pop
mov
xor
mov
push
and
pusha
or
ja
and
sbb
cmps
stos
xor
dec
jns
iret
push
neg
pop
sub
pushf
ins
lods
jle
gs
cwde
pushf
and
(bad)
(bad)
sbb
xchg
movs
adc
xor
mov
cmp
inc
sub
aam
in
js
mov
xchg
in
shr
outs
int
xor
xchg
repz
and
mov
sbb
sbb
push
sub
xchg
ins
sub
movs
pushf
es
or
xor
imul
mov
loopne
mov
retf
js
xchg
push
in
pushf
cs
cmp
popf
cdq
in
(bad)
push
fld
aad
dec
std
cld
mov
int
call
adc
movs
ja
fwait
pop
jnp
jle
je
test
sub
jle
jl
sub
inc
cs
xor
mov
rcl
sub
pop
icebp
mov
pop
pusha
xchg
pop
mov
fistp
jno
aad
lds
xchg
jae
outs
sar
lods
or
dec
mov
fidiv
mov
mov
ja
or
cld
jnp
cmp
push
jae
cmp
(bad)
sbb
loop
push
push
cmp
fs
or
cmp
bound
dec
sub
addr16
pop
sti
pop
adc
enter
ja
jmp
daa
fmul
ret
dec
or
cvttps2pi
add
out
mov
jecxz
aam
cmp
call
js
sti
ja
call
dec
ror
call
xor
xchg
cmp
sub
adc
cmp
push
outs
cdq
pop
ins
fwait
das
dec
sbb
push
pop
pusha
or
jecxz
fimul
loope
(bad)
push
and
nop
pop
mov
inc
mov
sub
or
jle
cmps
push
inc
mov
jmp
or
pop
inc
xor
sahf
retf
retf
mov
dec
inc
xchg
in
mov
fidiv
shr
movs
dec
jae
cmp
push
pop
fadd
call
clc
mov
call
sub
retf
les
inc
sub
sti
sbb
dec
js
addr16
bound
arpl
mov
aad
xor
aad
(bad)
jge
jp
test
xchg
cmp
aam
call
cmp
(bad)
or
stc
push
mov
rcl
call
cmps
xchg
mov
leave
test
dec
test
pop
out
xchg
lods
div
push
push
fld
dec
adc
mov
mov
cmp
inc
scas
inc
out
cmc
call
clc
ret
aam
fild
dec
shl
and
test
mov
push
inc
test
or
cdq
test
adc
jl
sbb
ret
(bad)
je
pop
test
in
in
mov
push
nop
pop
fcmovnu
inc
idiv
popf
cli
add
pop
les
mov
stos
pusha
or
xor
cmp
sbb
cmps
pushf
jp
(bad)
dec
xchg
mov
jmp
push
add
popf
addr16
xchg
mov
adc
loop
aaa
shl
test
fstp
mov
and
mov
mov
pop
xchg
sbb
(bad)
xor
(bad)
xor
or
xor
add
sbb
mov
js
jnp
cdq
mov
loope
xor
jmp
mov
push
scas
jno
sbb
aam
jne
push
and
je
icebp
rcr
dec
cli
call
loope
movs
push
(bad)
loop
jmp
sahf
fld
fistp
(bad)
pop
into
pop
shl
stos
push
outs
pop
stos
and
outs
cdq
std
jnp
adc
div
dec
stos
outs
sub
jg
in
cmp
stos
jl
cli
loope
xchg
arpl
or
cmp
repz
dec
mov
repnz
mov
dec
push
test
(bad)
pop
in
ja
sub
inc
(bad)
shr
or
add
mov
push
sbb
dec
and
fld
test
adc
in
test
jecxz
pop
mov
add
outs
xchg
add
stos
ds
xor
dec
xchg
retf
push
push
jbe
aas
out
repnz
shl
enter
inc
test
pop
mov
mov
xor
rcr
in
std
das
cmps
test
(bad)
jbe
xor
sbb
add
cmp
fiadd
xchg
shl
cmp
mov
mov
pop
fisttp
in
cdq
outs
and
inc
ins
mov
ds
loope
inc
test
push
lds
sbb
aas
pop
pop
push
mov
sti
aas
mov
cli
pop
cmp
sahf
xchg
mov
loopne
outs
les
and
loopne
fdiv
mov
pusha
lods
lods
fwait
mov
xor
jnp
dec
jg
aaa
dec
push
dec
lock
jg
cdq
sub
xlat
in
icebp
pusha
xchg
mov
fwait
jg
mov
ins
stos
adc
push
jae
imul
or
test
xchg
repz
movs
mov
and
push
js
sub
xor
add
mov
inc
adc
adc
lea
sahf
mov
push
icebp
stc
push
dec
fcom
jge
fstp
hlt
shl
popa
ins
dec
dec
adc
rol
sub
popf
sar
das
mov
cmps
js
daa
mov
cwde
test
sahf
out
rcr
cmp
outs
int
call
xor
inc
adc
adc
leave
xchg
aad
shl
mov
imul
jne
ins
xor
pushf
cmp
inc
mov
jns
push
xchg
add
lea
adc
loope
and
faddp
retf
hlt
es
add
dec
das
fcom
mov
xor
sub
add
inc
and
jno
cmp
mov
pop
mov
(bad)
jmp
jmp
xchg
pop
mov
mov
push
mov
and
xchg
and
mov
sbb
cld
frstpm(287
cmp
outs
std
sti
adc
xchg
(bad)
mov
cmps
(bad)
xchg
jmp
stc
test
mov
xchg
call
xchg
mov
add
mov
xor
movs
out
dec
(bad)
test
jb
adc
rcr
and
std
lahf
sbb
sbb
xor
sahf
not
or
mov
xor
and
jmp
and
dec
xchg
lock
adc
mov
sub
aaa
icebp
gs
fstp
in
inc
cmc
jmp
jmp
lods
sub
dec
dec
mov
pusha
fsub
mov
in
in
inc
ret
cmp
or
cmp
push
xor
pop
sahf
shld
jns
test
das
mov
or
outs
sub
jnp
pusha
push
ins
pop
imul
ficomp
or
jae
jae
adc
mov
pusha
test
mov
ins
outs
sar
shr
push
data16
adc
fcomp
cmp
arpl
pop
dec
popf
xchg
xor
pop
sbb
cmps
pop
out
mov
xlat
cwde
inc
xchg
lock
pandn
fisub
push
or
pusha
hlt
daa
sar
ds
jmp
fnstsw
pop
sub
jbe
popf
jge
push
push
outs
movs
mov
or
daa
aaa
cmp
int3
push
pop
pop
retf
push
sub
(bad)
adc
xchg
mov
mov
stos
dec
fisubr
fwait
ss
pop
bound
jp
inc
add
push
bound
daa
retf
mov
sbb
jg
mov
ret
retf
dec
(bad)
fmul
mov
xor
sbb
aaa
arpl
dec
rcr
sub
lods
call
xchg
adc
push
sub
fidivr
je
xchg
add
mov
jp
inc
pop
or
sbb
xchg
cmp
push
push
popa
das
(bad)
call
inc
pop
(bad)
pop
hlt
cmove
jecxz
ss
enter
sbb
iret
retf
scas
push
sbb
test
bound
mov
shl
sub
(bad)
in
push
mov
pop
fldcw
js
sbb
jp
mov
mov
mov
xor
and
pushf
fmul
call
push
in
sbb
scas
and
push
into
push
in
push
test
adc
xor
fidiv
jns
movs
sub
in
(bad)
mov
aas
cmp
dec
and
outs
in
mov
sti
mov
lds
push
cmp
jae
pop
sbb
push
inc
icebp
jo
jbe
push
push
pop
mov
call
loope
in
out
test
mov
inc
pusha
and
add
add
inc
in
(bad)
sbb
shl
pop
daa
sbb
aam
add
sar
xchg
jp
lahf
pop
int
mov
movs
jl
pushf
or
cmp
stc
dec
mov
jae
xlat
rol
mov
dec
call
adc
lods
xor
mov
xchg
jbe
pushf
aad
(bad)
xchg
cmp
shr
movs
lock
adc
xchg
jmp
repz
enter
cwde
xor
jmp
sub
or
xchg
add
jno
cwde
xchg
leave
repnz
pop
jae
pop
neg
push
and
inc
cmp
sahf
scas
fnstcw
or
cwde
xchg
sub
cmp
add
cmp
rcr
fwait
add
and
loope
lods
cmp
pop
out
cmp
ror
les
mov
push
and
fdivr
mov
sbb
sub
push
fdivp
mov
out
fild
sahf
inc
adc
push
int
in
mov
les
push
sbb
sti
and
fidiv
test
or
retf
push
rol
mov
sub
nop
fadd
xor
push
lahf
sub
outs
sub
jle
arpl
add
mov
jmp
stos
inc
mov
dec
pop
mov
push
call
pop
xchg
clc
mov
xor
jb
dec
addr16
jle
in
adc
(bad)
jb
xor
cmp
ins
xlat
bound
mov
(bad)
cmp
pop
in
jecxz
push
jl
je
fwait
cmp
xor
or
jne
(bad)
ss
idiv
xchg
ja
pushf
xchg
rcl
push
test
or
mov
adc
pop
dec
adc
lea
cmp
(bad)
cmp
push
pop
mov
test
out
addr16
xchg
aaa
dec
mov
xchg
mov
retf
in
cmp
shl
jecxz
data16
add
pop
es
daa
mov
aad
fwait
hlt
xor
adc
mov
and
dec
jge
es
shl
repnz
jge
lods
dec
enter
stos
sub
xor
test
out
nop
or
lods
dec
jmp
or
mov
and
shl
test
std
jge
inc
cwde
adc
movs
dec
xchg
ret
(bad)
jo
movs
and
fnstenv
nop
(bad)
xchg
adc
push
cmps
in
leave
into
mov
(bad)
push
sub
in
dec
popa
xor
adc
pop
jmp
pop
rcr
shl
fstp
es
inc
xchg
out
xor
push
repnz
sbb
and
xchg
jne
pop
pushf
call
fs
xchg
jmp
sbb
aas
rcl
je
fidivr
imul
jle
(bad)
add
sbb
dec
sub
(bad)
sbb
jl
stos
push
mov
adc
mov
pop
jae
jge
cmp
fadd
daa
pop
sbb
sbb
sub
(bad)
pop
ret
out
jno
ds
bnd
int3
cmp
fsub
mov
loope
(bad)
test
cwde
js
dec
(bad)
cdq
push
or
ins
jbe
cli
mov
mov
rol
jge
dec
je
gs
ins
sar
(bad)
sti
and
fisttp
mov
mov
mov
sub
adc
push
dec
ret
add
in
inc
sub
cmp
rol
mov
mov
cmps
out
mov
fild
cmp
pop
ds
test
clc
sub
mov
(bad)
xor
scas
xor
pop
iret
jnp
shl
in
cld
pusha
mov
pop
fild
jge
cmp
cmc
pusha
out
push
inc
xor
pop
dec
jg
push
adc
dec
mov
retf
loop
dec
dec
inc
xor
jae
and
pop
popa
mov
leave
jmp
sub
jae
(bad)
cli
int
stos
iret
adc
je
aad
fst
mov
cmps
leave
or
out
(bad)
shl
push
pop
mov
div
(bad)
aaa
push
shl
pop
xor
or
and
push
jnp
add
outs
jno
shl
mov
in
int3
movs
leave
mov
cmp
add
addr16
stos
in
push
arpl
add
fs
popf
cmp
sar
(bad)
out
int
loope
nop
shr
sti
xor
mov
push
dec
mov
fcmovne
hlt
jge
adc
mov
or
cmps
ror
mov
jge
out
xchg
push
hlt
or
pop
sbb
outs
test
push
fsubr
rol
mov
stos
icebp
loope
(bad)
fidiv
push
and
pop
inc
jmp
sbb
inc
dec
cmp
xchg
sbb
stc
hlt
push
dec
js
or
sbb
xchg
ds
pop
push
into
xchg
push
cmps
cwde
stc
mov
aad
inc
sub
and
dec
sub
gs
or
into
sbb
lods
inc
div
sub
or
hlt
sbb
ins
fcomi
das
add
xor
push
ss
mov
adc
sbb
mov
dec
jbe
sub
mov
mov
clc
stc
sti
test
scas
dec
(bad)
and
lods
call
push
push
jae
push
not
dec
mov
mov
out
xchg
(bad)
out
mov
test
jle
stos
sub
or
push
add
push
xchg
or
inc
daa
pusha
pop
xchg
fsub
bound
pop
push
imul
ja
jge
add
das
dec
xor
push
xchg
sub
jecxz
movs
jns
xor
lds
ins
mov
into
clc
jmp
aad
mov
(bad)
cwde
mov
mov
clc
mov
add
test
mov
jge
inc
mov
leave
(bad)
fst
lods
sub
lods
test
(bad)
dec
pop
nop
fimul
or
loope
mov
push
call
fnstenv
xchg
xor
sbb
dec
mov
mov
jmp
add
pop
xor
pop
mov
arpl
data16
rcr
sbb
sbb
pop
fwait
dec
or
sub
mov
(bad)
pop
dec
lods
mov
mov
fild
out
push
mov
loop
out
pop
jp
jns
xor
or
add
sbb
adc
jae
sbb
mov
jnp
icebp
inc
lea
jmp
movs
pop
add
sbb
push
jmp
push
mov
repnz
mov
sbb
movs
mov
mov
dec
pop
nop
add
and
sahf
pop
(bad)
fdivr
rcl
sub
xor
or
sbb
stos
mov
outs
inc
iret
or
arpl
fbld
pop
fs
sub
or
jo
pop
mov
push
mul
je
test
push
pop
fidiv
jns
push
sbb
pushf
sbb
cmp
cmp
icebp
aaa
sub
xor
push
gs
cli
jae
sbb
popa
lods
xchg
wbinvd
fld
mov
adc
lock
gs
jno
lds
cs
pop
cmp
xor
adc
sub
push
adc
push
jge
mov
loope
ror
sar
in
push
xor
push
in
lock
ja
ss
xchg
push
cdq
dec
mov
scas
pop
out
dec
inc
mov
mov
xchg
sbb
push
pop
push
xchg
in
outs
xchg
jbe
pop
cmps
(bad)
lods
(bad)
sti
push
fdiv
fild
push
cli
adc
mov
jns
push
fisub
lahf
cmps
xor
jns
mov
or
mov
dec
or
jmp
push
jmp
(bad)
push
inc
es
adc
fwait
bound
adc
sbb
xchg
(bad)
dec
jp
pop
pop
pop
xor
je
mov
jnp
lea
lahf
nop
fstp
xor
xchg
inc
add
cmp
inc
loopne
jno
in
xor
xchg
rol
mov
bnd
cld
ret
(bad)
mov
inc
push
xchg
mov
pop
cmp
scas
cmps
scas
imul
test
jmp
and
bound
xchg
outs
jne
jmp
xlat
outs
leave
and
test
dec
sbb
ins
push
mov
in
mov
mov
stos
lods
data16
in
pop
not
(bad)
fcom
outs
cmps
mov
push
dec
les
(bad)
xchg
mov
jmp
jg
push
push
lahf
push
cli
es
or
dec
cmp
inc
jnp
xchg
jp
test
push
jb
aas
xchg
mov
sbb
pop
add
jge
les
cmc
adc
scas
outs
xchg
fs
int
arpl
jl
dec
mov
push
push
or
mov
aad
xor
in
imul
dec
adc
push
pusha
pop
nop
add
je
mov
push
sbb
fcmovnu
leave
das
icebp
addr16
and
shl
enter
fnsave
mov
stc
(bad)
enter
sbb
jnp
popa
jg
sub
mov
stc
lahf
movs
xchg
test
add
cdq
std
into
enter
sbb
into
cld
jmp
lahf
fldcw
ret
dec
pop
nop
in
push
dec
jp
lods
test
sbb
sahf
jg
and
or
(bad)
imul
cdq
pop
repnz
stc
cmp
mov
outs
pushf
fwait
jns
dec
xor
xor
dec
jecxz
les
xor
retf
cmc
push
pusha
or
pushf
pop
inc
and
xor
arpl
cmp
loop
sub
jle
icebp
repnz
push
(bad)
aaa
dec
leave
adc
shr
cmp
int
push
fwait
mov
add
sbb
in
dec
or
shl
pop
fidiv
cs
sub
and
cmp
shl
frstor
cld
cmc
pop
or
xchg
pop
fsubrp
aaa
xchg
mov
cwde
jge
movs
jne
(bad)
test
cmp
je
ret
idiv
pop
xchg
xchg
mov
sbb
push
pop
cmp
sub
out
xor
shl
and
cmp
xchg
sub
stos
ret
test
aas
(bad)
rcr
xchg
sbb
push
int
lds
ror
xor
and
out
jmp
xchg
push
xor
shr
mov
dec
cmp
jnp
jo
fld
mov
xlat
sub
mov
add
aas
repnz
dec
ficom
mov
clc
ret
shr
das
sar
(bad)
or
cmp
pop
dec
add
inc
push
adc
sub
jmp
sbb
xchg
nop
cli
push
movs
cdq
xor
jmp
icebp
add
test
sbb
adc
lahf
jbe
adc
mov
inc
call
ret
mov
push
cmps
jge
imul
div
lds
scas
mov
and
sti
mov
ret
and
ss
in
pop
and
test
pushf
or
popf
mov
in
mov
jns
clc
pusha
outs
and
(bad)
mov
sbb
adc
inc
push
std
xor
js
push
xor
fmul
or
xor
xchg
fmul
retf
and
pop
(bad)
jmp
jbe
pop
cmps
jl
inc
lods
jge
sbb
dec
repnz
dec
ja
retf
sbb
mov
retf
mov
push
jmp
test
push
rcl
cmc
cmp
in
adc
in
sub
and
ret
sbb
pushf
xor
loopne
jmp
cmp
add
mov
popf
xchg
cmps
cwde
mov
mov
(bad)
sub
add
addr16
rcr
fs
fnsave
sbb
mov
xchg
clc
and
mov
lods
jo
stos
imul
inc
xchg
(bad)
push
mov
pop
dec
cli
movs
stc
cmps
sub
push
cli
sub
fwait
inc
xor
xchg
or
xchg
push
lods
(bad)
fisubr
mov
outs
mov
add
jmp
add
test
mov
mov
xchg
sbb
ja
mov
push
inc
inc
mov
int3
in
sbb
neg
mov
xor
lds
cdq
dec
out
sub
and
push
aas
add
adc
popf
iret
repnz
iret
cmp
xchg
dec
adc
mov
cmp
add
mov
(bad)
cld
push
xor
mov
xchg
adc
mov
test
cmp
sub
repnz
loope
sub
leave
(bad)
sbb
jne
stos
int
arpl
hlt
scas
mov
imul
adc
add
fbstp
pop
jnp
(bad)
rol
retf
jmp
xor
movs
cmps
xlat
jns
sbb
scas
adc
out
jmp
mov
xor
adc
sub
test
mov
cmp
and
daa
dec
fucom
add
add
mov
mov
imul
jns
test
mov
mov
data16
out
mov
sub
and
mov
(bad)
cld
outs
jge
pop
fiadd
sbb
mov
rdtsc
fwait
and
out
dec
out
mov
dec
icebp
mov
xchg
(bad)
or
lds
dec
icebp
rcl
and
repz
adc
pop
xrelease
cmps
inc
xor
ja
aaa
xchg
jne
and
jecxz
into
sub
cmp
loopne
bound
icebp
(bad)
or
iret
xor
daa
jae
retf
popa
inc
test
js
int
fisttp
sbb
push
inc
fmul
mov
lock
mov
stc
arpl
xchg
fsub
outs
sbb
sti
pop
shl
repnz
retf
jmp
es
inc
data16
mov
or
and
cmp
js
js
inc
imul
mov
mov
js
js
sbb
in
cmps
call
dec
fisub
outs
sbb
sub
(bad)
(bad)
pop
or
test
stc
movs
adc
sahf
mov
mov
mov
out
inc
loope
mov
das
mov
mov
cmp
push
xchg
divps
(bad)
enter
sbb
add
dec
lahf
and
nop
gs
xchg
xlat
imul
ins
icebp
cmp
ss
movs
cmp
and
cmp
ins
sar
jns
(bad)
mov
jnp
scas
xchg
jo
out
nop
inc
and
(bad)
int3
sbb
jo
aas
repnz
dec
pop
pop
jg
mov
or
imul
xchg
loope
lock
call
loopne
nop
mov
push
xor
jmp
enter
pop
and
aaa
sub
lods
mov
jo
sub
mov
test
addr16
test
pop
add
mov
cs
ins
in
jb
mov
push
xchg
daa
jae
xor
push
out
out
das
stos
mov
xchg
out
or
push
ja
inc
jg
out
(bad)
jle
stos
adc
lds
ds
add
test
adc
ins
jp
inc
ins
mov
jg
dec
dec
mov
jmp
out
(bad)
and
mov
adc
fs
into
adc
mov
adc
pop
ret
mov
or
stos
mov
ret
xchg
xchg
add
lods
xchg
aas
xor
cdq
sbb
cmp
aaa
adc
loope
jp
dec
addr16
cmp
stos
daa
aaa
(bad)
or
pop
xchg
sbb
push
fstp
inc
jne
mov
not
cmp
sub
add
fistp
int3
pusha
inc
bound
cdq
clc
dec
aaa
jb
pusha
sub
std
loopne
out
mov
and
xchg
jno
icebp
and
sub
push
stos
ret
mov
add
fstp
push
pop
mov
cdq
xor
stc
sbb
mov
icebp
xor
stos
xchg
or
loope
pop
push
pusha
leave
add
jns
repnz
push
into
lock
shr
pop
xor
repnz
jmp
iret
cmp
add
rcl
ror
inc
jno
jmp
or
pushf
call
ins
inc
cmp
sub
das
sub
sbb
push
test
mov
push
push
cs
mov
dec
sbb
or
inc
and
repnz
and
and
jg
jle
and
and
test
ret
icebp
lock
mov
and
inc
addr16
popf
push
and
repz
jno
inc
cwde
xchg
pop
xchg
je
ss
(bad)
xchg
aam
cwde
repz
pusha
int
or
enter
xchg
pushf
ret
inc
mov
(bad)
pop
(bad)
fwait
lea
fisub
and
out
fdiv
mov
lds
jae
ins
div
cmc
sbb
push
xchg
sub
clc
outs
les
fiadd
mov
dec
xor
xor
inc
adc
aaa
mov
(bad)
mov
and
mov
cmp
jne
shl
ds
sub
xchg
loopne
scas
or
mov
add
mov
shr
mov
sbb
(bad)
ins
(bad)
mov
ins
jae
test
scas
adc
xor
push
or
mov
gs
inc
pop
(bad)
in
mov
push
lods
mov
jne
lods
adc
repnz
mov
xlat
stos
les
xor
mov
movs
mov
xor
fs
cs
mov
xchg
pop
ds
mov
dec
js
mov
imul
or
or
hlt
fldcw
sub
add
xor
aam
outs
ss
sub
xor
and
mov
cmp
stos
jae
(bad)
dec
mov
add
push
cmp
xor
push
pop
cs
jmp
dec
xor
outs
ret
mov
jb
pusha
cmps
and
fld
xlat
sub
cmp
jg
popf
shl
inc
mov
(bad)
fnstsw
xchg
xor
lods
adc
pop
mov
jb
fmul
mov
sub
ins
icebp
dec
mov
in
lock
push
in
pop
and
nop
rcl
(bad)
bound
aaa
repz
ror
mov
arpl
lods
in
xor
add
inc
mov
mov
xchg
cld
dec
cmps
aaa
push
dec
xor
int
retf
sub
xchg
std
sub
sahf
ds
sub
fadd
adc
int3
shl
imul
push
test
push
sub
js
pop
fidiv
xor
push
mov
call
jo
stos
mov
vmovhpd
je
repnz
add
adc
cdq
pop
xchg
cs
push
sub
cmp
pop
data16
pop
mov
sub
pop
dec
jecxz
jecxz
push
jl
inc
iret
push
ret
nop
scas
cmp
nop
pushf
out
mov
jo
jg
push
and
jbe
lds
adc
call
data16
xor
mov
hlt
mov
sti
pop
add
sahf
ds
adc
lods
adc
xor
lds
and
mov
mov
ror
xor
jg
adc
int
pop
mov
adc
cld
xor
jmp
shl
and
ds
stos
mov
cmp
rol
xchg
adc
fwait
inc
inc
dec
imul
xchg
mul
cmp
shl
xor
rcl
push
cmps
and
pop
cmps
test
test
pop
cdq
mov
mov
loopne
adc
pop
pop
rol
repz
or
aad
mov
xchg
ret
outs
int3
fwait
add
call
push
cmp
push
cmp
lahf
mov
sub
movs
xchg
fcom
pushf
rcl
mov
mov
mov
mov
ficom
pop
lods
inc
add
dec
fwait
xor
loopne
ja
movs
and
sbb
jnp
pop
pop
push
nop
cs
push
enter
cmp
inc
popa
fadd
mov
rcr
jecxz
cmp
sbb
mov
pop
sbb
or
mov
or
sub
jnp
mov
out
adc
pop
sbb
scas
pop
out
into
dec
dec
add
cmc
dec
out
in
or
xchg
shr
mov
je
cmp
fs
mov
push
pop
shl
aaa
or
mov
adc
pop
call
sbb
test
push
fist
dec
aam
jmp
or
adc
sub
nop
out
pop
jmp
stos
mov
mov
or
sbb
jmp
cmp
mov
mov
jmp
lds
rcr
out
jbe
into
pop
sub
or
(bad)
push
cli
out
scas
push
nop
mov
pop
xchg
mov
jmp
scas
es
adc
jbe
and
rcr
and
jbe
sar
dec
inc
imul
ret
cwde
and
xchg
int3
jmp
fs
(bad)
out
xchg
xchg
outs
rol
xor
movs
cmp
test
dec
jns
pushf
jb
mov
pop
(bad)
push
cld
aaa
(bad)
imul
add
add
pop
dec
repnz
or
lods
dec
mov
lods
push
jmp
jno
je
popa
sub
pop
outs
cmp
or
ror
call
ins
or
fdiv
mov
ds
sar
cmc
leave
pop
mov
inc
fbld
mov
int3
imul
sub
xchg
outs
pop
xor
cmp
xor
arpl
push
cld
retf
loop
jne
jo
out
bound
push
sti
out
imul
ret
(bad)
repnz
lods
je
in
sbb
xchg
and
lods
in
call
mov
addr16
fisub
mov
inc
cmps
ss
cmp
mov
int3
sub
movs
mov
fsub
imul
shl
int
sahf
lahf
push
cmp
or
mov
cmps
xchg
push
jbe
popf
sub
dec
and
cwde
or
inc
xchg
jl
push
ins
dec
mov
push
ins
addr16
scas
mov
cmp
pop
scas
stos
cmp
test
mov
lods
and
sub
test
xchg
push
pop
or
movs
ret
xchg
and
call
clc
lock
loopne
dec
inc
dec
push
sahf
adc
xchg
stos
lahf
lds
imul
std
sbb
mov
gs
and
jg
test
cmc
jg
push
dec
dec
je
xor
xor
mov
pop
push
xor
dec
leave
test
ja
add
mov
out
out
les
(bad)
mov
movs
sbb
call
jnp
pop
xlat
add
jl
outs
les
jae
xlat
pop
pushf
jecxz
ja
mov
or
outs
mov
call
addr16
int
mov
repnz
lds
retf
jbe
and
xor
mov
daa
xor
push
dec
xchg
inc
cmp
das
cmp
push
xor
sbb
mov
sbb
fwait
icebp
mov
xchg
int
mov
pop
clc
xor
add
cmp
push
xchg
repz
sbb
fnstenv
stos
je
and
sbb
pop
lods
test
scas
cdq
add
and
in
and
mov
lahf
fs
movs
inc
ret
push
jmp
inc
fisub
or
vminsd
dec
mov
push
dec
out
sub
sbb
pop
ja
int3
setg
pop
jo
sbb
pop
cmp
xor
dec
pop
sbb
ss
dec
call
data16
mov
(bad)
or
push
test
sub
call
jecxz
xor
inc
ret
mov
sub
pop
inc
ds
push
push
xor
sub
pop
dec
in
int
in
sbb
sbb
cmp
stc
arpl
into
in
add
js
and
(bad)
xchg
push
dec
jne
add
dec
(bad)
jne
sub
and
test
in
(bad)
leave
sbb
jmp
clc
dec
mov
mov
push
call
scas
xor
mov
xchg
pop
stos
das
enter
sar
mov
retf
ins
scas
adc
add
mov
and
data16
cmps
sbb
or
daa
push
xor
push
jle
ret
xchg
std
inc
jnp
or
or
push
mov
jg
xor
xchg
xchg
scas
test
and
sub
cs
cmp
inc
call
cli
(bad)
mov
mov
xor
in
or
dec
lea
cmc
xchg
pop
out
lods
pusha
mov
xchg
sahf
adc
jb
lea
outs
jl
push
pop
xor
dec
mov
push
or
loopne
loope
aad
add
mov
retfw
mov
mov
fbstp
cmp
inc
jb
addr16
cmp
xor
lahf
ret
cs
adc
push
fdivrp
dec
push
loopne
es
xor
ret
dec
push
xchg
or
push
jecxz
lds
iret
sbb
xchg
adc
and
sbb
xor
popf
and
add
and
pushf
inc
pop
adc
jb
jecxz
movs
push
and
pop
lods
pusha
enter
out
ret
jne
ret
(bad)
inc
dec
mov
fild
pop
and
aaa
cmp
out
into
mov
push
dec
mov
xor
push
movs
imul
cmp
xor
inc
fistp
push
fwait
out
nop
call
popf
das
arpl
mov
cld
push
popw
xor
vmsave
into
in
jge
(bad)
mov
mov
aad
jae
icebp
jmp
jnp
lock
aas
sbb
fcom
popf
jns
fsubr
pop
out
retf
clc
js
pushf
fmul
cmc
jae
push
fisttp
mov
push
rol
sub
std
inc
addr16
mov
and
fistp
inc
xchg
adc
mov
mov
cmp
inc
mov
jne
mov
inc
jne
and
inc
fnstcw
add
icebp
xor
lods
xchg
loope
jae
inc
jg
inc
aad
call
movs
sbb
fild
outs
adc
and
in
inc
dec
stos
fstp
pop
mov
aad
(bad)
push
cwde
xor
inc
xchg
mov
or
cmp
call
xchg
data16
imul
sahf
aad
cmp
cmc
mov
sbb
pop
mov
or
push
clc
test
sti
mov
in
shr
es
or
cmp
jmp
sub
dec
pop
scas
jmp
daa
clc
fdivr
pushf
mov
cld
mov
lds
or
dec
add
popa
sbb
cmp
out
lds
pop
mov
cmp
inc
jecxz
cmp
js
mov
out
outs
test
hlt
and
add
xchg
pop
xchg
imul
pop
pop
and
mov
in
rcl
adc
fmul
and
sub
stc
fcom
mov
adc
sbb
(bad)
std
sub
jbe
test
push
or
jbe
out
call
(bad)
push
cmps
mov
stos
inc
jns
test
push
fwait
rcr
xor
inc
push
mov
aas
fnstenv
push
inc
lahf
cmp
test
add
mov
call
test
imul
scas
cmp
sar
mov
inc
scas
add
or
xchg
movs
push
mov
std
pop
sbb
movs
xlat
inc
xor
pop
fs
test
mov
pop
call
lock
xor
mov
mov
add
dec
cmp
lahf
jmp
xchg
imul
mov
stos
xchg
into
pop
(bad)
jge
sub
jno
jle
int3
jbe
push
push
mov
fucomp
out
lahf
pop
jge
pop
add
ja
push
adc
lds
jnp
and
and
lods
xor
rcr
fidiv
xchg
cdq
mov
test
mov
jns
inc
jmp
push
ret
jbe
dec
mov
pop
push
call
mov
sub
jns
push
jnp
cs
pop
lock
mov
or
jge
mov
inc
popf
xor
pop
shr
dec
inc
in
aad
mov
repnz
fidivr
mov
jle
inc
fidivr
xor
(bad)
adc
in
rcr
bound
pop
aad
pop
enter
clc
call
push
adc
mov
jmp
xor
scas
loope
out
fisub
into
test
aam
shr
mov
pop
icebp
call
leave
or
add
mov
xor
cmc
mov
loopne
fstp
and
iret
push
sub
(bad)
daa
icebp
xlat
scas
cmp
sar
push
retf
data16
ror
pop
cwde
pop
rol
adc
xor
mov
pop
mov
and
mov
mov
or
jg
inc
pop
xchg
push
sbb
frstor
sbb
cmps
nop
mov
mov
cmps
in
dec
pop
lahf
sub
cwde
lods
out
pushf
jmp
xor
jmp
leave
add
jmp
jcxz
cmp
jbe
mov
cmp
repz
jb
retf
(bad)
ds
stos
out
mov
addr16
imul
cmp
test
or
pop
or
mov
dec
dec
adc
ss
in
sbb
sub
xchg
sbb
cmps
adc
mov
add
xchg
jg
rcl
cmp
nop
push
inc
dec
push
imul
ins
movs
pop
jle
mov
cmp
xor
scas
je
stos
add
imul
popf
out
fs
pop
jno
push
test
in
mov
cmp
loop
sub
or
inc
fsubr
push
sbb
inc
rol
and
shr
push
mov
movs
sub
xchg
mov
add
jno
jge
adc
nop
adc
dec
pop
jae
xor
jp
jnp
scas
mov
sub
and
adc
cli
inc
cmps
dec
movs
(bad)
in
std
mov
sbb
sub
pop
lahf
mov
xchg
fsubr
pop
out
mov
ss
xchg
retf
and
jl
cmp
sbb
ins
cmp
sahf
cmp
xchg
outs
cld
std
dec
fbstp
outs
push
dec
(bad)
pop
xchg
jo
not
sbb
in
int3
data16
push
fwait
in
fucomi
adc
push
dec
lods
fs
jg
pop
dec
mov
mov
mov
leave
mov
fisub
mov
or
jns
push
pop
sbb
jno
stc
in
jecxz
ror
(bad)
mov
mov
jp
aam
and
or
sbb
lahf
inc
sbb
stos
leave
std
(bad)
xlat
ins
inc
lahf
add
and
dec
mov
call
add
xchg
xor
mov
outs
loopne
jbe
add
mov
fld
inc
fild
cld
ret
call
inc
jns
adc
or
xchg
xchg
sbb
lods
add
in
mov
push
add
adc
movs
cmps
or
in
aam
movs
fs
mov
sbb
pop
aad
lds
scas
sbb
sub
or
std
mov
inc
mov
lock
mov
inc
push
xor
add
push
pop
push
xchg
sahf
jb
and
dec
loopne
rcl
fxam
aam
mov
imul
dec
cmc
sub
ror
jns
outs
dec
mov
add
adc
hlt
xor
mov
(bad)
loopne
mov
push
leave
mov
inc
outs
leave
pusha
pop
jg
cmps
mov
cli
pop
mov
jne
xchg
cs
mov
adc
(bad)
or
adc
xchg
jae
lea
and
push
cmp
push
inc
icebp
test
mov
xchg
loopne
and
lods
ret
mov
mov
adc
or
inc
add
iret
mov
cmps
mov
xchg
xor
es
and
xor
push
pop
imul
xor
dec
dec
mov
push
das
sub
mov
cmc
test
je
jo
out
mov
jno
outs
xlat
idiv
in
xchg
test
xor
adc
mov
and
adc
sub
jne
sub
stos
stos
pop
outs
retf
push
jae
jge
int3
mov
stos
push
xchg
pop
push
sti
pop
mov
xor
js
push
sbb
or
mov
pop
push
or
cmp
add
sahf
addr16
jle
shl
mov
cmps
dec
push
or
jbe
inc
xchg
sbb
fild
cmp
lods
jno
pop
dec
call
out
mov
fwait
jno
push
pushf
movs
arpl
lahf
shl
daa
push
xor
(bad)
jmp
inc
xor
inc
add
jo
test
jb
add
out
lds
fist
sti
cmp
adc
sahf
and
mov
jg
bswap
dec
fidiv
(bad)
in
sub
xor
enter
jnp
ret
xor
sub
lds
out
aas
mov
jnp
mov
lock
das
adc
sub
pop
mov
jae
out
pop
ret
loop
push
int
push
jns
add
imul
in
stos
sbb
fistp
pop
jb
shr
sbb
sub
pop
imul
and
(bad)
mov
mov
fcom
int3
xor
mov
lds
aad
scas
or
shr
call
imul
lock
xchg
jecxz
ret
add
(bad)
adc
popfw
jno
retf
aas
out
test
push
int3
mov
sbb
pusha
and
push
mov
push
cmp
mov
imul
ret
push
adc
and
stc
sahf
pop
push
add
cld
sti
stc
add
shl
into
and
lahf
and
fiadd
push
adc
lahf
ss
xor
mov
pop
sub
stc
ins
lods
cli
mov
das
xor
pop
mov
sub
xchg
push
fimul
push
dec
gs
(bad)
bnd
enter
add
shr
lods
add
fnstcw
mov
imul
xor
out
pop
add
(bad)
leave
push
mov
push
es
outs
or
and
xor
out
das
out
or
cwde
or
ficom
jbe
mov
mov
das
sbb
add
sbb
cld
dec
mov
mov
cmp
(bad)
and
outs
sahf
rcr
jecxz
retf
add
mov
sub
and
inc
enter
idiv
sahf
and
cdq
sbb
ret
push
add
pusha
lahf
cmp
in
push
stos
ror
call
mov
(bad)
sub
mov
mov
mov
movs
in
test
retf
xchg
nop
xchg
(bad)
jmp
dec
xchg
leave
pop
cmp
ins
ds
shl
cmp
imul
xchg
test
(bad)
inc
mov
je
pop
pop
add
ja
das
fs
cmp
test
(bad)
out
dec
movs
or
fnclex
xchg
dec
and
faddp
out
jmp
adc
(bad)
repnz
jle
jno
adc
adc
jne
add
ficomp
cmps
cmps
push
mov
scas
test
pushf
or
sti
pop
fiadd
in
adc
dec
jg
(bad)
sbb
fwait
div
pop
arpl
fcomp
call
outs
sti
loop
adc
mov
add
stc
xchg
mov
loopne
in
fidivr
sar
retf
mov
ss
push
xor
out
fst
add
(bad)
ja
xchg
dec
stc
out
(bad)
es
addr16
inc
dec
and
cmc
lea
add
add
out
push
adc
mov
mov
or
test
(bad)
sar
mov
fmul
rcr
or
in
fisttp
mov
data16
arpl
cmp
out
inc
add
xchg
mov
cmp
jge
cmp
jmp
outs
cdq
imul
nop
div
push
cmp
loop
fisub
int3
pop
cmp
stos
cmp
dec
pushf
or
mov
xchg
ret
fwait
and
imul
into
in
cdq
fnstsw
push
add
lods
ror
mov
or
popa
std
mov
out
mov
dec
jb
stc
fsubr
mov
outs
push
lods
or
movlps
(bad)
ficomp
push
outs
scas
scas
les
mov
xchg
mov
and
in
and
jnp
test
xor
cli
dec
imul
ds
outs
shl
into
cdq
mov
adc
ins
mov
inc
lods
xchg
pop
outs
scas
sub
mov
add
lods
sub
mov
add
sbb
jns
fadd
pop
repz
in
fs
pop
out
jo
int3
out
sar
mov
inc
out
adc
jbe
lods
sub
push
xrelease
dec
enter
mov
lahf
jo
cmp
stos
pop
mov
push
fld
test
loopne
mov
lods
cmp
stos
inc
sub
pop
push
mov
(bad)
ins
movs
sahf
cmps
sbb
loop
and
dec
popa
jbe
push
rcl
fidivr
and
fisub
fcomp
push
cs
cmp
sbb
jge
movs
iret
fbld
mov
pop
adc
xchg
icebp
cli
mov
jmp
cmp
pop
xchg
inc
adc
sbb
sar
or
pop
fstp
cmps
scas
pushf
cmp
jg
sahf
test
icebp
cld
add
jg
(bad)
imul
in
xor
fld
sbb
lods
or
addr16
aaa
mov
mov
mov
gs
xor
mov
add
aad
stos
scas
pop
ds
fisttp
dec
mov
sbb
ja
and
dec
loope
jmp
or
push
gs
movs
mov
and
sbb
icebp
retf
cmp
push
cmp
stos
sbb
mov
jle
sub
push
fmulp
lea
jl
mul
test
xor
jmp
loope
jmp
and
cmp
inc
sub
gs
push
sbb
dec
test
aaa
sbb
jmp
xchg
(bad)
xor
mov
xchg
sbb
sbb
xor
imul
or
fs
(bad)
sub
in
sbb
cmps
push
scas
test
sahf
popf
aas
jecxz
push
es
add
(bad)
ins
sbb
stos
in
popf
adc
jns
in
sbb
rol
xor
call
xchg
iret
retf
ret
and
outs
cmp
inc
xor
imul
push
cs
cwde
dec
lods
or
xor
jns
out
out
dec
push
pop
dec
push
test
mov
ret
iret
mov
pop
adc
sahf
je
push
inc
cmp
push
xor
out
dec
ins
int3
stc
xchg
(bad)
sti
mov
das
or
lea
cwde
es
jmp
dec
inc
outs
adc
jne
lods
addr16
push
xlat
pop
js
fbld
(bad)
or
fcomp
xchg
xchg
jne
mov
jae
stos
loopne
push
adc
dec
call
jg
push
les
in
jp
(bad)
(bad)
jle
mov
cwde
gs
inc
popf
sbb
cld
mov
repnz
jne
jp
push
jno
test
scas
add
nop
xor
or
hlt
ror
push
cmp
les
jmp
div
(bad)
das
adc
mov
ds
cli
test
int
in
xchg
daa
aaa
adc
dec
call
mov
inc
push
cwde
push
outs
(bad)
in
test
fld
mov
mov
jns
pop
jns
ja
aas
jns
xchg
int3
(bad)
sub
pop
dec
sub
das
fst
outs
std
jp
mov
mov
mov
push
in
xchg
mov
in
(bad)
out
pop
xor
std
mov
mov
xor
sub
sbb
daa
call
imul
push
cmp
test
fidivr
add
out
(bad)
iret
lock
push
fidivr
or
cld
add
into
neg
loopne
push
xchg
popf
inc
(bad)
ins
aam
(bad)
mov
fstp
mov
xor
xlat
sti
js
pop
les
into
mov
mov
push
push
mov
in
mov
xlat
dec
mov
pop
pop
jo
pop
xchg
lahf
dec
out
adc
dec
sub
into
ja
sbb
adc
mov
mov
push
xor
jmp
stos
push
pusha
cld
sbb
cmp
inc
mov
ret
outs
ror
mov
pop
xchg
test
fmul
inc
cmp
scas
add
ror
das
stc
mov
call
xchg
lods
ret
shl
xor
rcr
push
int
dec
test
outs
xchg
arpl
scas
adc
sbb
adc
sub
pusha
retf
pop
(bad)
popf
shr
jge
test
mov
es
dec
xchg
adc
cwde
test
jle
das
mov
lds
or
or
cmp
imul
cld
push
jo
popa
push
mov
push
sbb
push
xor
popf
xor
dec
mov
in
and
pusha
add
movs
shl
push
loope
jmp
imul
vmread
daa
dec
or
and
sub
mov
jno
mov
mov
dec
fdiv
add
retf
add
inc
rcr
(bad)
movs
push
repnz
daa
hlt
(bad)
or
and
ins
or
add
scas
sbb
mov
fdiv
ret
jno
pop
cs
js
rol
pop
and
pop
nop
xor
shl
adc
sbb
add
add
jae
jl
imul
push
sbb
mov
adc
data16
xchg
push
aas
aad
pop
mov
add
popa
cld
or
(bad)
test
ds
(bad)
mov
and
xchg
xchg
call
dec
(bad)
aam
leave
push
scas
rcr
loope
fild
ret
movs
add
mov
inc
cmp
dec
mov
shl
dec
loopne
out
shr
scas
pop
pop
mov
leave
lods
jmp
xchg
adc
push
daa
sbb
dec
lds
mov
pop
test
(bad)
inc
pop
push
or
sti
mov
pop
adc
adc
scas
push
cs
push
cmp
fidiv
lods
sub
out
jle
cmp
push
jns
fdivr
int
sub
sbb
(bad)
in
(bad)
pop
cmps
test
retf
jb
sub
push
scas
xchg
fistp
scas
cdq
imul
lgs
sbb
cwde
out
mov
xor
xor
cmp
rol
sbb
cmps
xor
add
in
(bad)
push
ret
push
jmp
push
scas
jecxz
sub
mov
cwde
xor
(bad)
sub
ins
and
lock
xlat
xchg
jecxz
xchg
mov
xchg
push
lock
dec
mov
ja
nop
mov
scas
(bad)
xor
mov
add
shr
mov
loop
pop
daa
fisttp
ins
enter
data16
jnp
adc
dec
stos
call
out
push
in
mov
aaa
push
jle
sub
cmps
(bad)
cwde
mov
ret
pop
fcmovu
jmp
jne
sti
test
leave
xlat
call
or
adc
cmp
scas
cmc
pop
sbb
inc
popf
movs
sub
(bad)
jmp
lahf
retf
dec
movs
cmp
sahf
mov
into
repz
mov
div
push
in
mov
add
or
mov
push
add
xchg
cmp
mov
push
fisttp
push
cmp
fmul
push
pop
push
mov
push
call
and
outs
xchg
rol
push
sbb
in
mov
hlt
jg
mov
sahf
and
push
test
setl
mov
jo
(bad)
fstp
retf
movs
cmp
mov
out
dec
repz
cmp
sbb
jecxz
mov
hlt
xchg
nop
add
mov
aaa
rcr
sbb
mov
cld
and
pop
and
hlt
mov
cmp
out
or
jmp
xor
add
fistp
inc
pop
dec
xchg
sub
and
stos
test
inc
sub
dec
pop
xor
adc
pop
jne
inc
in
rol
daa
aas
inc
or
push
sbb
dec
push
inc
cmp
and
inc
sbb
jo
imul
das
imul
jo
mov
out
in
cmp
into
fmul
mov
repnz
sbb
shr
mov
add
(bad)
mov
and
adc
aam
fld
jno
sbb
cld
retf
aaa
push
pop
sub
mov
ds
push
nop
jns
bound
jl
cmp
clc
jl
repz
inc
push
push
cmp
mov
test
jg
sbb
add
std
lea
mov
xchg
sub
and
imul
(bad)
(bad)
xchg
in
ss
xor
test
(bad)
out
inc
imul
push
sar
xor
cli
arpl
fadd
mov
xor
(bad)
mov
mov
mov
jns
pushf
or
mov
cmp
mov
xchg
addr16
adc
cmp
or
arpl
dec
add
mov
push
or
cmp
push
xchg
add
cdq
add
lods
cmc
pop
mov
xor
arpl
sub
jae
xchg
sbb
leave
fldenv
out
inc
ins
jl
mov
shl
fcomp
adc
push
add
sbb
aaa
and
sbb
inc
mov
cmp
dec
loope
push
push
or
xlat
dec
xchg
cmp
push
hlt
test
fild
lods
cli
lds
mov
nop
lods
mov
pop
shr
lock
mov
call
ret
push
push
(bad)
sbb
sbb
jnp
cmc
inc
cmp
adc
(bad)
stos
lock
enter
sub
or
jge
std
loope
adc
out
pop
xchg
gs
ins
(bad)
mov
push
jg
or
dec
push
xchg
sub
cmps
or
popa
sahf
hlt
inc
das
cmp
(bad)
pushf
sub
xchg
jae
mov
dec
lock
pop
mov
js
adc
jae
dec
(bad)
in
push
push
dec
jge
sbb
push
sub
jo
pusha
pop
loop
push
or
push
xchg
mov
jl
aaa
add
ins
fnsave
jmp
(bad)
(bad)
es
loopne
retf
mov
sub
push
jae
mov
call
jge
xchg
aad
cmp
jnp
loopne
shl
rcr
mov
cmps
lahf
or
jp
movs
dec
push
das
xchg
jle
lds
mov
push
pop
in
adc
pop
(bad)
mov
jp
push
jnp
test
or
jl
push
lds
fistp
dec
push
push
mov
jp
stc
mov
jnp
inc
cmp
fdivr
(bad)
xlat
push
dec
xor
adc
call
jmp
(bad)
retf
stos
sbb
outs
js
adc
jo
push
sub
xor
dec
fisubr
in
cmp
xchg
xor
mov
jecxz
xor
(bad)
jecxz
loopne
lods
ss
mov
in
cmc
fwait
mov
int
into
pop
push
xlat
dec
mov
jno
mov
jb
les
ins
pop
adc
xchg
sub
mov
xor
push
adc
ror
push
in
test
xchg
pop
inc
xchg
cmp
xchg
pop
jno
push
or
mov
pop
fidivr
arpl
pop
add
lahf
cmp
mov
ret
mov
push
xchg
fisub
loop
cwde
cmps
loop
inc
inc
inc
(bad)
and
mov
pop
xlat
mov
fisub
retf
push
push
pushf
jno
iret
call
call
sub
(bad)
(bad)
inc
icebp
sbb
inc
fsub
daa
int3
jne
jmp
cmp
mov
cld
cmp
sbb
and
cmp
sub
add
pop
jmp
popa
test
ror
sub
imul
neg
push
shl
mov
push
into
mov
ret
hlt
ss
xchg
adc
or
es
cdq
inc
push
out
out
inc
je
jecxz
sub
add
adc
lods
ins
or
inc
loopne
jne
or
inc
test
add
mov
add
pop
ins
cwde
inc
adc
ss
(bad)
jnp
adc
mov
jns
lods
fsubr
mov
es
mov
mov
push
mov
iret
jge
xlat
cmps
frstor
dec
mov
in
cmp
stos
pop
lahf
push
jmp
pop
out
(bad)
pop
sti
scas
call
loop
mov
adc
repnz
fs
mov
or
scas
sbb
inc
fst
pop
int
adc
(bad)
sbb
jae
imul
fcomi
and
pop
mov
sub
add
add
nop
mov
xchg
jl
pop
fmul
or
aas
xor
sbb
and
call
call
test
and
cwde
mov
adc
cld
lds
movs
ds
xchg
add
add
ins
or
inc
stc
mov
call
xchg
fwait
cmp
or
dec
push
cmp
mov
jg
sti
pop
and
add
and
inc
sub
sub
inc
jo
adc
loopne
mov
call
jb
jns
mov
sub
cmp
add
xchg
or
sub
and
daa
push
sahf
out
ret
xor
xor
cmps
cmps
jp
inc
jne
sbb
jp
mov
imul
cdq
mov
adc
dec
mov
sbb
aaa
or
mov
and
sti
enter
ja
out
sbb
loopne
cmps
lods
xchg
jp
call
cli
or
loop
lahf
dec
or
out
push
ss
sbb
out
add
inc
das
mov
jmp
push
ds
fwait
mov
dec
rol
fs
jmp
mov
jno
cmps
popa
loopne
mov
mov
scas
push
rcr
imul
add
scas
jb
repz
sub
jp
mov
dec
xor
adc
mov
les
repz
xchg
sbb
es
cli
mov
add
lock
pop
jae
lods
inc
imul
jno
(bad)
and
in
jae
jg
pop
xchg
pop
push
xlat
or
jo
nop
fwait
push
push
mov
in
mov
lock
gs
fs
stc
sbb
sbb
iret
stos
int3
lds
jmp
test
dec
sbb
mov
retf
push
ins
sub
dec
and
ret
(bad)
lds
dec
stos
mov
aas
lahf
push
dec
cmp
sar
pop
cmps
retf
dec
cli
scas
jb
fdiv
call
inc
or
sub
mov
mov
pop
mov
xchg
adc
addr16
cli
das
xchg
out
rcr
popa
or
cmp
xor
jne
sub
lods
push
mov
(bad)
hlt
mov
mov
rol
enter
ret
xor
mov
push
sar
push
(bad)
lock
xchg
add
xchg
jno
inc
cmp
jns
imul
loope
cs
int
mov
mov
or
retf
sbb
pop
pop
je
jge
aas
and
pop
ret
xor
mov
(bad)
sub
sub
es
fwait
cmps
add
std
stos
mov
lock
mov
loop
shl
and
pop
jo
push
in
int
add
imul
and
jnp
out
in
push
hlt
cmp
and
mov
xchg
cmp
lahf
pop
stos
nop
xchg
and
mov
dec
scas
xor
mov
sbb
out
cs
iret
add
icebp
pop
sbb
jns
inc
xchg
das
cmp
sahf
pop
jae
test
mov
(bad)
aaa
test
fxam
mov
push
ds
popf
sbb
cwde
xor
out
jno
pushf
dec
aaa
inc
mov
aaa
mov
push
leave
pushf
pop
sbb
rcr
ins
ror
xchg
scas
mov
call
(bad)
cmp
popa
adc
cld
movs
adc
or
fs
iret
jge
cmp
push
dec
aas
dec
and
ss
mov
(bad)
sbb
mov
loopne
pop
add
adc
dec
or
sbb
aad
(bad)
imul
rol
icebp
pushf
pop
sbb
imul
and
ror
dec
sub
(bad)
inc
in
add
add
data16
arpl
jmp
stos
sti
lds
mov
cs
xlat
test
clc
push
addr16
xor
jnp
popf
imul
test
push
mov
nop
int3
shl
jg
xlat
enter
js
or
call
pop
xlat
idiv
adc
aas
cmc
dec
iret
mov
push
mov
in
fnstenv
push
les
mov
dec
xor
adc
cmc
jecxz
dec
cmp
repnz
pusha
xchg
fs
rcr
test
cmp
lods
pop
rcr
(bad)
movs
dec
(bad)
(bad)
sbb
test
cmps
xchg
test
cmc
push
pop
lahf
in
daa
lods
add
packssdw
arpl
push
movnti
addr16
push
loope
ins
je
mov
gs
test
push
addr16
(bad)
jecxz
out
add
jecxz
sub
sar
test
cmp
adc
cmp
arpl
and
out
lea
xor
jge
ret
sbb
and
les
adc
daa
push
or
mov
add
cli
jecxz
fwait
imul
xor
pop
ret
mov
test
(bad)
dec
add
sbb
sub
cmp
or
dec
xor
daa
aaa
movs
movs
add
sub
push
xlat
xor
push
je
mov
mov
stos
retf
mov
mov
or
in
sbb
push
push
lahf
mov
sub
fild
xchg
pop
ret
stos
cmps
clc
and
sub
jmp
ja
sahf
mov
(bad)
mov
fst
mov
rcl
inc
lea
pop
in
(bad)
inc
aad
cld
push
in
cmp
jmp
dec
sti
xor
je
mov
pop
adc
lods
loope
add
(bad)
add
fisub
and
loopne
jecxz
dec
xchg
dec
imul
fs
stos
fdivr
mov
movs
mov
push
ins
mov
or
sbb
fwait
jle
movs
cmp
(bad)
retf
xchg
pushf
mov
pusha
push
mov
test
in
js
dec
xchg
sahf
push
or
imul
add
push
pushf
in
lea
outs
retf
stc
push
mov
mov
pop
xlat
(bad)
push
xlat
pop
adc
loope
outs
cmp
jnp
(bad)
mov
xchg
push
(bad)
fist
push
cwde
jo
clc
jecxz
pop
movs
sti
pop
or
imul
mov
retf
cmp
xchg
mov
lods
sahf
mov
out
rol
add
cwde
jecxz
fcmovne
adc
lods
cmc
jns
xor
push
ja
fld
jl
call
and
aas
or
sti
lock
xchg
dec
dec
in
push
dec
xlat
cmp
pop
fs
ror
cmp
push
sbb
jnp
jo
in
mov
mov
mov
stos
xchg
xor
xchg
mov
ins
sub
xor
lock
mov
ret
adc
int3
lods
inc
sbb
inc
pop
xor
(bad)
push
xchg
cmps
in
mov
fnsave
xchg
(bad)
adc
int
popa
cmps
xor
sbb
pop
mov
sub
hlt
sub
(bad)
mov
xor
xlat
push
out
jae
jmp
lock
ins
clc
loope
dec
xchg
mov
jge
jl
inc
and
movs
lds
les
inc
jmp
imul
adc
add
call
add
fistp
push
stos
push
(bad)
adc
push
fs
inc
push
mov
lahf
mov
ja
sahf
jae
pop
xchg
xor
ins
test
push
xor
std
icebp
into
jnp
test
loope
das
and
jecxz
cmp
test
inc
popf
push
xchg
(bad)
test
pop
push
inc
mov
add
retf
scas
push
or
pushf
sbb
cmps
sbb
inc
dec
or
jb
or
cs
dec
dec
out
pop
and
in
mov
xor
adc
push
and
cmps
jae
push
pop
test
ins
push
push
in
outs
std
fidivr
rcr
jae
mov
xchg
add
test
cmps
or
xchg
sub
int3
mov
lock
cmps
jl
xor
ror
mov
push
xor
sub
jp
pop
push
mov
sub
xor
mov
ror
sbb
adc
ja
les
add
repnz
xchg
gs
mov
aam
mov
cmp
sbb
inc
or
fidiv
hlt
xor
cmc
int
ins
(bad)
pop
xchg
or
xchg
xor
mov
sbb
bound
sub
adc
push
ror
mov
mov
clc
movs
aam
pop
xor
(bad)
ret
jmp
pop
mov
int3
add
xchg
xor
ficomp
test
add
xlat
mov
ret
call
xchg
jbe
mov
ret
(bad)
xor
inc
mov
push
das
fild
mov
std
iret
shl
push
or
mov
sub
sub
mov
mov
js
in
mov
aaa
jnp
sbb
adc
jle
push
cld
jp
popw
push
push
mov
cld
mov
movs
pop
push
aas
outs
cmp
inc
xchg
adc
stos
pop
shl
cwde
sbb
jnp
mov
sbb
(bad)
retf
sbb
push
cmps
call
xchg
cld
movs
inc
sahf
cdq
jp
inc
and
mov
rcl
and
mov
imul
test
jecxz
test
sub
dec
test
pop
test
ins
scas
popa
in
xchg
pop
adc
xchg
(bad)
lahf
mov
scas
(bad)
push
ror
loopne
pop
mov
pop
sbb
fdiv
popf
xlat
sar
hlt
inc
ror
xchg
adc
fnsave
or
dec
iret
xlat
jecxz
shl
sbb
sub
jb
sbb
cmp
dec
cmp
dec
fmul
xchg
clc
(bad)
call
push
push
in
je
mov
pop
push
popa
jg
mov
xor
cwde
and
in
or
sbb
and
and
xlat
adc
pop
shl
xor
icebp
sahf
lahf
push
xchg
dec
inc
fs
mov
cmp
xor
pop
adc
sub
in
push
pop
stc
push
mov
mov
dec
mov
rcr
add
or
sbb
les
aad
cmps
psllw
mov
pushf
inc
sub
call
dec
and
es
add
xor
push
stos
mov
sub
out
(bad)
push
mov
or
in
cmps
dec
dec
fcmovnb
shl
xchg
xor
jg
jmp
es
mov
movs
aad
mov
retf
cld
popa
call
pop
xchg
out
inc
icebp
shr
or
out
out
mov
data16
dec
add
jl
jecxz
sub
sbb
jmp
cmp
mov
mov
fistp
and
adc
push
cmp
or
shr
cdq
and
add
xchg
or
add
mov
fsubr
xchg
dec
or
mov
ja
clc
adc
and
lds
out
leave
pop
push
dec
mov
jmp
pcmpgtb
stc
pusha
ds
loope
aas
push
mov
cmp
dec
cdq
and
push
fdiv
rol
retf
dec
cmp
cwde
xchg
sub
sub
mov
fld
or
shl
movs
ds
jecxz
(bad)
scas
(bad)
adc
mov
dec
popa
fsubr
into
dec
or
push
scas
xor
add
mov
pushf
xchg
inc
sbb
sub
stos
data16
daa
ja
cmc
call
xor
repz
retf
arpl
inc
rol
stos
movs
adc
sahf
xchg
dec
jmp
xor
in
mov
mov
push
dec
pop
ror
repnz
out
outs
fwait
sahf
xor
xchg
or
ret
jg
xchg
jmp
sti
mov
xchg
inc
hlt
xlat
jno
call
jo
jne
mov
imul
push
es
arpl
sub
mov
rcr
xor
push
sbb
sub
out
add
push
and
fbld
pusha
or
dec
cmp
cmps
test
test
push
aad
add
rcl
mov
mov
or
(bad)
mov
pop
cmp
ret
aas
fst
jg
xor
movs
enter
jns
lea
cdq
mov
mov
push
cdq
enter
add
add
mov
enter
or
shl
pop
mov
arpl
fild
sahf
scas
inc
outs
jl
jne
je
shr
jno
mov
sbb
out
aad
xchg
fadd
mov
push
rcl
adc
cmps
push
push
xor
mov
mov
ins
dec
push
xchg
fs
call
dec
ins
pushf
popa
hlt
adc
xor
adc
cmp
int3
inc
loop
out
gs
mov
clc
pop
ret
jge
fmul
out
int3
fnsetpm(287
xor
mov
enter
(bad)
adc
add
movs
je
xchg
scas
(bad)
push
mov
xchg
sbb
xchg
pop
lahf
push
pop
pop
loopne
or
es
sbb
inc
fbstp
gs
cmp
das
jle
out
jmp
xchg
or
add
fimul
jmp
inc
sbb
mov
pushf
neg
push
or
stc
sbb
xchg
nop
push
ret
jge
fmul
mov
jmp
mov
fisub
xor
dec
aam
mov
movs
mov
add
adc
ins
pop
imul
jl
inc
mov
jae
inc
xor
or
jl
retf
pop
dec
mov
lods
and
shl
lods
test
inc
js
ins
scas
dec
dec
jmp
jle
dec
out
nop
rcr
lahf
sti
xor
test
fstp
aam
(bad)
cmp
add
leave
std
es
enter
cmp
push
in
stc
(bad)
jmp
xchg
ret
mov
jge
sar
sub
ss
js
ficomp
ret
xor
shl
addr16
pop
sub
and
push
wrmsr
sbb
xchg
and
sar
push
jbe
mov
sbb
shl
(bad)
lock
sbb
adc
inc
dec
xlat
int
push
and
dec
or
retf
mov
push
dec
add
in
mov
retf
fucomip
jecxz
int3
cmp
leave
ja
add
fnsave
jmp
adc
(bad)
iret
clc
xchg
(bad)
fs
jne
lock
add
mov
mov
mov
inc
cdq
fld
call
and
int3
push
popa
push
stc
fstp
push
lds
dec
scas
add
mov
rcr
xor
sahf
cmp
ret
in
sbb
mov
dec
xlat
sub
cmp
(bad)
outs
adc
in
push
addr16
add
fsubr
imul
out
sub
(bad)
lahf
repnz
cmps
outs
outs
fwait
stc
(bad)
icebp
push
test
mov
adc
repz
push
mov
xchg
mov
aaa
enter
je
into
pop
cld
or
(bad)
inc
jo
mov
cld
pop
fist
test
icebp
xor
outs
int
sub
mov
dec
add
lds
cmc
and
adc
lods
idiv
retf
dec
imul
push
das
jecxz
xchg
int3
or
ret
pop
and
sbb
cli
stc
xor
sti
mov
sbb
jp
fxch
cmp
sub
inc
dec
cld
fucomp
add
push
aaa
pop
xchg
push
add
enter
push
xlat
adc
and
scas
clc
xor
mov
pushf
in
adc
xchg
push
mov
out
test
pushf
mov
dec
std
adc
test
cli
mov
ud0
dec
sub
mov
jmp
cdq
pop
js
cmp
sub
inc
xchg
ret
sahf
xor
xchg
enter
mov
cmp
clc
dec
cld
jne
mov
ins
cwde
dec
xchg
movs
push
(bad)
push
rcr
ds
and
xor
retf
push
xchg
(bad)
xor
outs
inc
je
jge
jl
sub
inc
mov
add
push
mov
and
sahf
test
bound
pushf
(bad)
ja
rol
cmp
sar
aaa
jb
adc
loop
mov
mov
loopne
xchg
shl
mov
xchg
fiadd
pop
dec
sub
aam
xchg
fild
dec
or
xchg
adc
xchg
leave
imul
pop
imul
inc
and
mov
inc
imul
push
jge
retf
test
js
cmp
xor
push
jb
inc
and
push
xchg
pop
push
scas
add
xchg
daa
out
outs
shr
je
sub
pop
arpl
hlt
add
cmp
fbld
es
ret
in
repnz
and
adc
fst
(bad)
loop
ds
cmp
sti
ds
in
int3
fiadd
test
push
or
sbb
or
jne
inc
jne
lds
xchg
pop
inc
sub
push
mov
loop
ss
pop
in
jg
bound
xchg
sbb
fcom
jae
jl
daa
jle
mov
or
retf
fwait
cmps
xchg
mov
nop
fstp
or
outs
out
aam
jp
dec
data16
and
shr
sbb
cli
sbb
mov
jp
shl
sbb
jo
fild
aas
inc
push
xor
fst
jne
daa
or
test
fisub
dec
popa
add
outs
call
mov
imul
dec
mov
adc
cmp
pop
pop
movs
mov
sbb
aam
inc
push
cmp
rol
ins
out
retf
lds
cli
mov
and
aam
push
pop
mov
test
jmp
int
js
call
jge
(bad)
idiv
pop
daa
fincstp
mov
mov
aas
adc
xchg
outs
mov
jecxz
dec
or
add
lds
xor
and
jmp
scas
shl
push
dec
lods
xchg
sub
mov
lods
xor
mov
popf
fs
push
jg
add
fnsave
add
test
inc
pop
mov
mov
(bad)
pop
or
mov
pusha
pop
rcl
clc
add
mov
mov
mov
nop
xchg
dec
outs
xlat
cmp
test
mov
adc
pop
and
jecxz
add
aaa
push
dec
stc
mov
dec
xor
sub
ret
mov
in
mov
dec
and
dec
aad
push
xchg
inc
sub
ins
int
mov
and
call
ins
cwde
prefetch
fisubr
leave
imul
test
rcl
jns
sbb
retf
arpl
(bad)
scas
push
inc
push
std
call
loope
and
(bad)
cli
adc
mov
pusha
fs
mov
or
mov
sub
dec
push
dec
test
jp
retf
retf
mov
push
rcl
and
bound
int3
jmp
add
adc
not
mov
mov
jp
and
push
shr
fld
sbb
gs
mov
inc
or
mov
outs
sbb
imul
(bad)
cmps
leave
or
or
mov
rcl
push
fldenv
movs
fdivr
(bad)
out
jmp
inc
mov
mov
hlt
xor
adc
addr16
mov
adc
cld
jno
arpl
mov
lds
jmp
jns
xchg
js
ds
enter
sbb
aam
xchg
adc
rol
(bad)
fbstp
cs
scas
and
pop
nop
sbb
arpl
ss
push
inc
cli
test
fsub
inc
xor
xor
je
xor
loope
in
rcr
xor
mov
dec
inc
js
dec
hlt
mov
jae
xchg
lds
mov
adc
sub
adc
test
int3
dec
xor
sbb
ficom
mov
leave
cdq
adc
mov
(bad)
hlt
movs
dec
rcl
fdiv
and
inc
dec
adc
and
push
mov
lds
dec
aaa
int
jnp
gs
xchg
xor
or
rcr
loopne
jne
outs
mov
mov
inc
lea
std
inc
jmp
ror
and
pushf
es
in
popf
shl
xor
fld
or
pop
repz
aaa
inc
out
jecxz
or
fmul
sub
lods
mov
sbb
loope
sbb
dec
outs
and
call
inc
dec
lds
mov
retf
popf
sahf
jmp
mov
enter
test
ret
and
xor
cmp
pop
mov
jmp
ret
es
mov
xor
cli
dec
add
jne
adc
sub
gs
imul
mov
mov
or
push
pop
loope
frstor
out
punpckhwd
and
sbb
inc
std
dec
repnz
sub
stos
movs
rcl
ins
mov
push
loopne
inc
enter
push
or
xor
int3
into
pop
jne
xchg
fsubr
stos
cmp
or
les
jnp
in
xor
out
js
popf
loopne
dec
repnz
sbb
aas
push
inc
jge
mov
inc
jae
mov
enter
or
ror
dec
mov
fisub
pop
stos
dec
xchg
sbb
imul
fs
xor
cmp
sbb
inc
into
cmps
jne
(bad)
daa
gs
(bad)
sbb
repnz
fsubr
pop
ins
xchg
retf
sbb
and
pop
adc
popa
mov
pop
movs
add
pop
dec
xchg
fwait
mov
fs
push
adc
push
mov
adc
xor
and
adc
cmp
js
mov
dec
sbb
push
mov
std
add
cmp
cmp
fiadd
adc
and
das
and
xlat
push
repz
xchg
dec
push
dec
data16
std
sub
(bad)
loop
shl
jmp
sbb
add
mov
sbb
repz
mov
and
stos
push
frstor
rcr
mov
loopne
adc
(bad)
(bad)
xchg
in
sahf
dec
or
cdq
mov
aas
(bad)
adc
movs
pop
inc
adc
out
and
shl
je
sahf
sbb
xchg
or
out
retf
cwde
fbstp
shl
sub
test
xor
call
jle
aaa
cmps
or
xor
fcom
dec
xchg
xor
push
mov
or
std
(bad)
mov
lea
mov
rol
mov
imul
gs
mov
pop
scas
mov
mov
dec
cmp
xlat
jo
xchg
fbstp
int3
and
cmp
and
and
xlat
inc
pop
call
mov
mov
sub
nop
pop
push
inc
sbb
cmp
jecxz
mov
sahf
int
shl
ret
jb
fistp
adc
and
adc
out
daa
xchg
pop
loop
cmp
xchg
sar
cmp
arpl
and
(bad)
dec
xor
and
sub
jb
push
xchg
dec
jnp
push
mov
loope
fisubr
xchg
cmps
mov
sahf
lods
jnp
int
mov
mov
jae
call
lahf
add
hlt
int3
fiadd
mov
or
popf
push
ret
push
inc
fsubrp
loop
add
ja
xchg
out
cmp
jno
mov
pushf
call
lock
fisubr
repnz
sar
and
scas
mov
fsubr
(bad)
cmp
inc
call
data16
dec
sub
stos
xlat
call
mul
mov
dec
in
lahf
or
xchg
scas
fcmovb
add
mov
stc
leave
push
ja
mov
cmp
adc
arpl
ror
jae
outs
and
inc
shl
sbb
xor
and
inc
and
mov
pop
sub
push
in
jmp
or
inc
aam
js
cmp
loope
mov
dec
dec
mov
pop
xchg
mov
mov
movs
xor
xchg
mov
retf
and
call
cwde
popa
stc
dec
sub
xchg
popa
push
or
mov
mov
push
out
stos
js
lods
and
jp
shl
cmp
aaa
cli
fidivr
in
sbb
jne
mov
mov
fwait
ret
lea
in
pop
movs
ins
ins
mov
sbb
sub
sub
(bad)
imul
ficom
clc
ror
xchg
(bad)
cmp
iret
cdq
dec
and
sub
pop
pusha
addr16
jns
in
hlt
lahf
ins
xchg
and
call
adc
repnz
jmp
or
stc
std
adc
je
pop
test
cmp
sbb
movs
push
(bad)
add
int3
add
ds
inc
cmp
push
adc
add
sub
and
rcr
and
jmp
imul
cdq
mov
cmp
inc
sti
movs
stc
mov
xchg
add
cwde
cmc
inc
mov
jecxz
xchg
es
xor
dec
jecxz
clc
and
in
jmp
daa
rcl
pop
jae
ins
cwde
int3
scas
fwait
sbb
sub
or
or
sub
cs
ret
mov
mov
pop
sbb
xchg
or
frstor
mov
mov
adc
mov
adc
lock
out
fistp
fcmovbe
adc
stos
mov
xchg
mov
mov
stos
mov
add
xor
ins
ds
jne
push
std
inc
loopne
mov
out
lods
cld
(bad)
arpl
inc
cmp
sub
dec
retf
xor
fld
inc
mov
jns
movs
mov
jp
and
in
(bad)
xor
fwait
jae
test
and
or
and
popf
sub
dec
mov
test
retf
push
leave
mov
add
mov
ds
pop
sub
mov
sbb
push
in
xchg
in
bnd
nop
xor
out
jecxz
iret
iret
xchg
and
(bad)
movs
rol
out
pop
xchg
mov
shl
fldenv
sar
pushf
push
inc
or
add
jnp
(bad)
loope
gs
std
mov
repnz
inc
pop
sar
add
xor
icebp
mov
rcr
sbb
mov
mov
cmc
fcomp
jns
and
in
or
cmp
lock
ror
les
mov
jne
imul
and
out
cwde
fidivr
test
fcom
cld
inc
xor
sub
xor
out
nop
inc
stos
jmp
fiadd
jb
mov
fadd
mov
xchg
jnp
pop
sub
cwde
(bad)
xor
jne
cmps
and
lea
sub
push
fwait
test
jge
xchg
movs
imul
in
in
push
out
scas
ss
push
push
cmp
pushf
add
push
xor
cmp
into
jb
out
jmp
adc
cmp
mov
and
ss
ins
idiv
jle
or
sahf
add
pop
inc
ficomp
inc
and
ror
fs
mov
imul
rcr
icebp
(bad)
shr
imul
ins
push
data16
xchg
mov
test
jne
push
jne
adc
pop
or
jmp
xor
sar
jle
gs
retf
loope
cmps
aad
adc
std
shr
in
mov
and
jae
xlat
push
lods
dec
not
(bad)
aaa
(bad)
pop
cmp
das
jmp
popf
in
push
inc
inc
cmp
nop
frstpm(287
test
adc
jp
dec
cmc
mov
in
push
jmp
call
mov
fs
mov
and
pop
in
jl
mov
mov
shl
jnp
lods
scas
mov
leave
xor
push
pusha
cmc
cwde
add
stos
push
pop
addr16
jge
or
inc
std
out
jmp
mov
pop
jo
push
les
repnz
bound
pop
gs
add
mov
xchg
int
pop
xor
lock
dec
dec
call
iret
jnp
mov
pop
and
sbb
mov
rcr
fwait
inc
shr
dec
dec
ret
aad
and
xlat
mov
xor
xchg
or
jmp
mov
jmp
out
add
pushf
lea
out
ss
je
xor
or
add
inc
mov
dec
lods
movs
ja
jns
test
pop
ficom
fwait
pop
cmp
xchg
sub
in
sbb
add
or
and
int3
push
stos
xor
test
movs
push
dec
sub
in
int3
int3
or
dec
fdivr
in
and
cmp
xchg
xchg
addr16
dec
pop
ja
jecxz
jl
xchg
push
out
jne
in
cmc
jg
inc
cmps
stos
retf
arpl
fimul
in
test
fdivr
and
es
enter
pop
sub
dec
sbb
test
mov
imul
ds
aam
and
ins
ret
stc
dec
push
adc
jne
lock
cmps
loope
aaa
or
pop
inc
data16
jnp
test
cmc
fsubr
push
mov
leave
test
je
movs
scas
push
sbb
sub
push
clc
rcl
stc
pop
xor
loope
jo
push
or
mov
dec
push
and
cmps
sbb
xor
mov
dec
cli
fisubr
or
lods
and
mov
(bad)
sar
(bad)
fnstcw
jb
enter
daa
sub
fwait
dec
adc
fs
enter
fidiv
xchg
and
rcl
add
rol
sti
addr16
scas
cmp
jo
cmp
mov
mov
hlt
mov
inc
outs
outs
fsubr
in
sub
sar
aad
jne
jge
es
inc
cmp
imul
dec
jns
inc
outs
mov
and
push
outs
adc
adc
clc
cmps
int3
mov
pop
je
xlat
push
xor
mov
mov
xor
mov
inc
jb
mov
les
fcomp
inc
and
bnd
loope
push
ret
push
push
cli
loop
(bad)
push
xchg
add
add
dec
movs
into
sahf
pop
test
mulps
xchg
jg
mov
(bad)
sbb
push
loope
mov
into
mov
push
jecxz
xchg
jp
xchg
fist
jp
mov
in
lea
arpl
ficom
push
cmp
call
not
jp
inc
out
cmp
and
dec
dec
inc
mov
jno
outs
dec
pushf
loop
adc
pop
(bad)
cmps
mov
bound
and
mov
sbb
mov
pop
test
pop
fmul
and
adc
(bad)
jmp
adc
fdivp
mov
fucomi
std
push
jecxz
or
add
popf
push
mov
js
pop
mov
hlt
fmul
leave
aas
jo
jmp
cli
fcom
pop
neg
shl
inc
dec
sub
dec
loopne
and
je
mov
mov
lock
shl
mov
cdq
mov
mov
fistp
iret
push
or
inc
pop
outs
mov
je
pop
or
sub
not
push
jg
(bad)
mov
inc
clc
add
jp
lea
ret
cmp
add
pop
repnz
out
mov
jno
out
inc
push
jecxz
inc
js
movs
mov
scas
mov
int
(bad)
into
xor
(bad)
dec
and
fs
rcl
push
or
mov
mov
jns
imul
mov
in
add
mov
mov
clc
test
fcomp
sub
lods
lds
sbb
es
clc
iret
add
dec
imul
pop
adc
inc
mov
iret
mov
xchg
mov
xchg
inc
leave
jmp
jmp
mov
or
sub
not
cmp
and
leave
jp
je
inc
push
mov
mov
addr16
fmul
cmp
mov
jo
push
push
outs
push
iret
rcl
ins
in
pop
add
fcmovu
sub
sbb
push
cmps
stos
aaa
xchg
mov
shl
cmps
mov
mov
(bad)
fstp
push
fs
sub
out
pop
mov
frstor
dec
int
inc
add
push
scas
jmp
jns
mov
inc
push
push
icebp
repz
push
jae
jo
mov
mov
mov
jge
push
(bad)
mov
mov
xchg
setns
ds
sbb
jae
mov
push
mov
push
xchg
inc
loope
xchg
push
repz
mov
enter
cmc
sbb
mov
mov
add
sar
dec
je
mov
mov
rol
adc
mov
cwde
js
mov
int
loopne
(bad)
xchg
xlat
jge
xchg
aam
push
cmp
adc
and
scas
and
and
iret
push
ins
pop
aas
outs
(bad)
je
push
(bad)
retf
cmp
xchg
mov
mov
dec
dec
in
sbb
mov
mov
mov
mov
adc
cmp
fwait
or
lds
xor
scas
xor
or
ds
mov
jge
xor
adc
push
push
(bad)
aam
push
mov
out
mov
pop
and
jl
mov
(bad)
and
repz
aas
sub
std
inc
shr
xor
mov
sbb
jno
mov
pushf
xor
shl
cmps
mov
(bad)
fist
push
repz
push
cmovns
stc
out
clc
jno
mov
or
mov
mov
test
dec
ror
hlt
out
xchg
add
fld
fdiv
ret
call
aad
loope
(bad)
in
pushf
push
dec
jmp
xchg
mov
jbe
xor
pop
inc
push
jg
xchg
mov
pop
popa
push
lahf
outs
and
pop
sbb
cwde
stc
jmp
sbb
mov
mov
ins
and
and
push
(bad)
ret
cmp
xor
sub
iret
(bad)
popa
and
cwde
or
push
ror
fs
dec
in
jne
adc
mov
pop
scas
(bad)
push
cld
imul
sub
mov
aas
jge
and
jb
xor
je
cmp
pop
add
sar
mov
repz
in
in
adc
mov
jo
call
movs
stos
test
fcomp
pusha
push
sbb
daa
out
cmps
mov
pop
iret
inc
daa
mov
out
fisubr
(bad)
pop
dec
ins
cs
xchg
add
sub
shl
je
jne
(bad)
and
shl
or
push
nop
push
xor
lea
jmp
add
adc
mul
in
sbb
push
test
jnp
jno
ins
add
jle
jno
hlt
xlat
sbb
xchg
fs
xchg
inc
cs
inc
inc
and
data16
dec
pop
aam
pop
jbe
mov
dec
ret
imul
dec
mov
aad
pop
js
addr16
(bad)
pop
pop
or
add
test
cmps
cli
(bad)
fcmovnbe
adc
mov
adc
mov
mov
push
inc
adc
loope
(bad)
jmp
lea
mov
cld
mov
hlt
add
pop
call
scas
mov
sbb
mov
mov
leave
pop
add
push
cmc
inc
push
push
inc
in
mov
xchg
sbb
dec
mov
mov
ficomp
retf
mov
je
adc
xor
cmp
gs
sar
cmp
cmps
dec
xchg
mov
xchg
push
movs
adc
rol
or
in
loope
call
movs
pop
fdiv
dec
add
shr
je
outs
loope
jg
add
loop
and
and
pop
and
and
mov
fistp
pop
and
cmp
enter
adc
pusha
ret
push
dec
push
(bad)
push
and
call
dec
in
dec
iret
(bad)
in
sbb
mul
jp
xchg
cmp
bound
(bad)
cmp
adc
push
push
test
sbb
mov
imul
repnz
inc
ins
xchg
and
cmps
dec
xor
cmp
repz
fldenv
ins
cmp
hlt
ss
into
mov
push
sbb
jae
xor
repz
xor
mov
fcomi
xchg
sub
inc
addr16
add
aaa
xchg
sbb
test
inc
stos
jmp
jae
retf
gs
cmc
(bad)
dec
pusha
cli
dec
pop
lods
mov
mov
add
in
xchg
outs
inc
xchg
cli
aam
sub
xchg
in
mov
xor
mov
rol
sbb
jl
ja
push
sbb
mov
cmps
push
daa
xchg
inc
jmp
mov
add
xchg
repz
jge
mov
outs
stc
(bad)
std
imul
cmps
std
stos
stc
std
pop
pop
lock
push
push
add
lods
dec
push
aas
mov
mov
aad
mov
lea
mov
mov
and
addr16
push
leave
in
clc
idiv
(bad)
icebp
xchg
xchg
pop
sbb
gs
imul
ds
outs
push
leave
les
or
movs
pop
mov
cdq
dec
push
sbb
mov
retf
jb
js
cs
mov
xlat
dec
mov
in
fs
ds
pop
popf
sti
fbstp
cmp
push
ret
and
mov
outs
ja
jne
mov
enter
pop
iret
fdiv
jge
es
aam
xor
int
adc
ds
pop
mov
cld
(bad)
ins
pause
push
pop
clc
not
daa
or
mov
jle
(bad)
fwait
sbb
or
es
ins
mov
inc
xchg
mov
(bad)
test
sub
ret
pop
mov
jmp
into
fwait
pop
jmp
sbb
and
mov
aas
adc
pop
(bad)
sub
jge
push
xchg
xchg
lock
xor
pushf
inc
add
xchg
cmp
sub
dec
push
sbb
movs
pop
sub
push
and
cmps
jp
jns
mov
dec
daa
jg
xchg
jbe
jo
(bad)
jg
ja
mov
inc
jnp
sbb
or
and
sub
jmp
stos
mov
rcl
inc
lock
arpl
cmp
call
daa
scas
xchg
stc
xor
mov
inc
test
mov
jg
dec
retf
cdq
dec
pop
add
aaa
mov
stos
int3
mov
movs
sbb
cli
pop
xor
lea
push
jg
inc
lahf
adc
mov
pop
mov
addr16
adc
(bad)
lock
cs
mov
and
mov
loop
int
inc
push
sub
imul
lods
les
jecxz
pusha
arpl
xor
loope
pop
(bad)
rol
enter
mov
fsubp
add
pop
loopne
push
rcl
mov
sahf
add
dec
adc
aad
daa
(bad)
and
enter
add
sbb
sbb
scas
xlat
xchg
fimul
test
vcvtss2sd
pushf
mov
fs
mov
push
or
inc
lods
jnp
addr16
sub
lea
xor
(bad)
push
lods
fild
xchg
adc
fstp
sub
repnz
dec
cmp
(bad)
pusha
dec
lds
lds
and
ss
popa
fcmovnbe
movs
jmp
sbb
pop
arpl
mov
cdq
in
xor
shl
lahf
test
(bad)
retf
sbb
dec
fwait
sub
cmc
or
add
mov
in
adc
xchg
idiv
sbb
mov
(bad)
stc
into
stos
sbb
jns
mov
pop
fdiv
pop
dec
xchg
mov
mov
mov
mov
fild
test
push
push
xchg
loope
mov
loope
mov
bound
xor
xor
xchg
daa
pop
cmps
push
xchg
int3
fwait
pop
xor
out
xchg
rcr
lea
hlt
movs
repnz
test
inc
retf
cmps
ss
adc
arpl
pop
mov
or
mov
test
mov
je
int
lods
jne
mov
out
arpl
add
jge
or
out
out
es
mov
cwde
data16
into
imul
fsubr
mov
xchg
lea
dec
and
les
pop
mov
add
je
mov
lahf
lds
ja
pop
sar
imul
mov
scas
pop
pop
dec
lea
sbb
les
push
ja
dec
(bad)
loope
bound
sub
mov
mov
xor
out
sub
adc
sti
(bad)
out
dec
pusha
xchg
daa
jno
cmc
aad
inc
mov
ror
call
es
data16
out
cwde
aaa
shr
sbb
sbb
fidivr
sahf
xlat
jno
xor
aad
fucomi
adc
xchg
mov
int3
xchg
xchg
sub
inc
mov
push
jmp
mov
mov
xor
(bad)
sbb
cmp
outs
cmp
stc
retf
stc
mov
(bad)
push
mov
pop
or
cs
pushf
iret
or
pusha
push
jmp
das
movs
test
sub
loopne
inc
xor
jecxz
mov
lods
inc
fiadd
cld
popf
sti
jmp
pop
sub
lock
pop
sbb
(bad)
out
push
in
(bad)
imul
call
adc
sub
mov
inc
in
xchg
adc
test
mov
push
(bad)
lds
gs
and
sbb
or
xchg
add
stos
sti
jg
outs
cmp
mov
add
faddp
cmps
sbb
jmp
popf
test
gs
in
pop
rcr
cmps
lea
mov
and
xor
scas
or
cmp
lods
push
jnp
lods
or
(bad)
lods
jp
(bad)
sub
pop
jmp
fwait
sbb
mov
(bad)
gs
cmps
jecxz
pop
in
dec
stos
dec
out
mov
jo
jecxz
cmp
dec
gs
jg
js
leave
and
stc
xlat
lock
add
sbb
push
inc
int3
xchg
jo
stc
lods
lods
push
dec
fimul
jmp
in
pop
in
je
add
stos
inc
adc
xor
icebp
push
adc
mov
cmp
shl
pusha
bound
push
pop
xchg
xchg
nop
jg
dec
stc
jae
xchg
(bad)
mov
test
das
cmovno
sub
popa
adc
sbb
and
bound
adc
daa
(bad)
mov
cmp
mov
loop
cmp
adc
daa
xchg
ins
adc
aaa
and
jnp
idiv
cdq
dec
(bad)
jmp
ja
stos
enter
rcl
and
mov
fsin
dec
xor
addr16
sub
add
adc
pop
cmp
jg
cli
mov
shl
sub
jns
repz
js
xchg
or
xor
jb
mov
leave
sar
dec
cmc
out
xchg
jnp
mov
jns
jbe
in
xchg
inc
push
arpl
or
lahf
jne
je
(bad)
imul
sti
fstp
scas
dec
leave
jp
lods
lahf
ds
pop
adc
(bad)
daa
cmp
mov
xchg
lds
imul
mov
push
cmps
jns
mov
bound
push
into
dec
or
int
je
jge
call
dec
(bad)
push
aad
xor
in
mov
push
lock
ins
push
add
(bad)
lock
jns
sub
mov
bound
fs
mov
cmc
test
cmp
shufps
push
jbe
cli
inc
jae
mov
movs
out
ja
das
rol
iret
pop
pop
jbe
mov
js
mov
je
neg
les
loope
imul
push
sub
sub
push
add
xchg
test
push
mov
in
pop
mov
test
stos
cmp
mov
dec
std
cmp
xchg
out
mov
dec
arpl
outs
adc
cmps
mov
enter
fldenv
imul
jno
sub
pop
jne
pop
mov
sahf
shl
mov
mov
ins
push
pop
sti
and
movs
inc
pop
mov
loope
imul
mov
leave
sub
xchg
pop
(bad)
mov
dec
cmp
jge
rol
xchg
dec
sbb
sbb
sub
sub
push
mov
mov
in
test
lods
cmp
xchg
mov
or
cmp
xchg
shr
mov
(bad)
xor
or
push
gs
imul
movs
daa
add
imul
ret
ds
dec
sub
pusha
inc
jae
ins
shl
cmp
fimul
loope
push
and
or
scas
shr
add
fimul
adc
jle
cmp
(bad)
push
cmp
dec
stc
and
cmp
or
cwde
(bad)
ins
push
addr16
push
pop
adc
ja
sbb
aaa
xchg
fwait
mov
leave
loop
int3
sub
jbe
or
jle
lea
in
in
add
xor
dec
sahf
retf
imul
xor
mov
dec
xchg
mov
ds
adc
jg
inc
aas
test
sub
lahf
and
dec
int3
push
xchg
loop
inc
es
out
xor
add
inc
xchg
repnz
jmp
das
test
rcr
sbb
in
cmc
test
aad
jo
or
in
push
(bad)
call
push
jb
leave
stc
or
or
cmp
push
mov
int
(bad)
daa
dec
fdiv
mov
test
call
xchg
inc
mov
inc
add
xchg
lds
or
add
inc
mov
add
add
sbb
sbb
and
jns
jbe
repnz
imul
loope
mov
sbb
addr16
lds
jecxz
and
leave
mov
jns
or
lds
aaa
push
push
rcr
clc
push
mov
or
aaa
add
jecxz
in
lods
retf
gs
or
arpl
sbb
jmp
rcr
gs
retw
adc
xchg
stos
sub
mov
mov
enter
xlat
retf
cmc
out
gs
mov
movs
sar
xchg
je
push
push
sub
ins
inc
jne
fidivr
or
xchg
xacquire
call
mov
inc
push
arpl
clc
loopne
pop
test
fcmovnbe
in
aam
xchg
call
(bad)
xchg
jnp
mov
adc
jmp
clc
add
adc
cmp
adc
dec
add
scas
gs
out
inc
scas
in
fnstcw
dec
outs
ja
sbb
fistp
jb
ja
popf
(bad)
pop
pusha
loopne
ja
jae
and
cmp
and
enter
(bad)
or
fcom
pop
dec
imul
mov
stos
test
push
int
or
sbb
sub
leave
rol
ror
stos
sbb
mov
mov
inc
adc
xchg
dec
test
stos
mov
pop
(bad)
mov
jecxz
push
(bad)
sbb
loop
cmc
sub
imul
stc
adc
sbb
dec
push
jg
fcom
push
dec
push
dec
mov
in
sbb
xchg
ins
fbstp
xor
in
rol
xchg
jbe
xor
xchg
jno
mov
push
pop
push
sbb
cdq
add
int
imul
test
push
lgs
into
xchg
out
xchg
leave
in
pop
mov
and
sbb
in
inc
repnz
test
sbb
pushf
cmc
mov
pop
(bad)
pop
mov
(bad)
sub
stos
push
mov
mov
mov
jle
add
in
cmp
adc
mov
js
sub
mov
add
xor
add
sbb
add
and
pop
idiv
call
fstp
les
cmps
push
jbe
call
and
jno
ret
mov
leave
shl
cdq
inc
push
nop
mov
mov
mov
pop
inc
sub
jg
xchg
in
lahf
add
sub
sar
fwait
jns
push
ror
and
xor
ficom
enter
repnz
dec
push
(bad)
mov
gs
jmp
mov
sbb
push
jmp
shl
mov
pop
push
xor
mov
loope
push
cdq
mov
retf
xor
and
fadd
lds
add
or
stc
cmp
je
jecxz
sahf
in
outs
adc
jl
or
mov
loopne
outs
jmp
in
or
mov
push
push
fldln2
call
jecxz
add
pop
into
(bad)
cs
mov
and
out
cmc
and
int
scas
jne
test
ins
(bad)
mov
scas
lods
xchg
xchg
cli
push
dec
or
ins
repz
outs
loope
aaa
stc
pop
icebp
mov
int3
stos
cwde
push
shl
dec
and
loope
test
je
scas
cmc
(bad)
and
ds
cli
sub
inc
rcr
lock
xor
push
es
aam
mov
cs
xor
icebp
mov
outs
and
loope
jle
retf
call
cmp
je
pop
cli
add
xchg
mov
cmps
inc
aaa
pop
dec
sub
test
sbb
in
mov
pop
pop
cmc
xor
xchg
bound
or
scas
leave
or
arpl
cmp
inc
xchg
imul
and
adc
xor
xchg
xchg
fcomp
stc
std
int
inc
or
push
(bad)
mov
hlt
call
jbe
jg
and
sub
test
lahf
test
not
or
icebp
push
jge
xor
pusha
sahf
adc
dec
ror
pop
jne
jnp
pushf
mov
pop
aas
cdq
dec
jnp
push
scas
out
xchg
and
jnp
movs
xchg
mov
or
rcr
out
jb
loopne
jno
xchg
mov
mov
imul
int3
or
add
jmp
pop
cmps
clc
pop
shr
jle
mov
test
inc
sahf
popf
jecxz
sub
and
in
dec
ja
xor
xor
xchg
xchg
pushf
or
into
sub
push
iret
sub
mov
and
mov
pop
jg
sub
rcr
fsubr
mov
and
fisub
arpl
mov
imul
jmp
xor
out
push
shr
pop
mov
push
pusha
sar
leave
repz
test
hlt
inc
in
pushf
movs
cmc
mov
adc
push
sahf
pop
add
xchg
pop
retf
jg
pop
sbb
scas
in
xor
fld
aam
xlat
and
les
pop
outs
pop
cmps
push
pop
outs
jmp
pop
fs
jge
out
mov
data16
sub
fisttp
xchg
out
das
sbb
inc
movs
add
in
es
test
xchg
adc
ja
jnp
stos
ins
iret
sbb
aam
push
(bad)
call
ror
jnp
dec
pop
mov
aaa
push
sbb
pop
sub
pop
mov
fild
test
sti
push
cmp
mov
fdiv
sahf
pop
sahf
data16
pop
and
cmp
mov
cmps
dec
nop
pushf
ss
add
mov
xchg
cmps
cli
push
jnp
sub
sub
inc
fdivr
loope
ret
push
cld
or
jge
enter
pop
gs
push
loope
pop
leave
sbb
fnstcw
movs
push
popf
movs
xchg
adc
out
cmps
mov
and
push
aaa
stc
push
in
ret
sub
fst
imul
in
out
rcl
jp
cmps
aaa
push
xchg
inc
mov
test
mov
sbb
repnz
fsub
ret
xor
sbb
cmp
mov
jg
hlt
jmp
dec
adc
pop
jmp
pop
sar
push
adc
mov
push
push
jne
fdiv
push
les
in
leave
scas
pop
cld
mov
ss
and
mov
stos
out
pop
cmp
aam
jmp
pop
retf
mov
and
sub
pop
sbb
mov
arpl
sahf
inc
loopne
xlat
mov
sbb
cli
imul
popf
std
mov
pushf
mov
mov
push
dec
cmp
jne
repnz
je
into
jmp
retf
inc
or
xchg
jmp
aas
or
in
icebp
and
call
jne
imul
mov
xor
xor
imul
into
(bad)
cmp
scas
fisub
cmp
jnp
cmp
test
fistp
push
mov
std
nop
add
cmp
mov
add
push
pop
mov
pop
push
out
mov
add
dec
test
push
in
mov
ficom
mov
xchg
adc
cmp
add
(bad)
cwde
retf
enter
xor
out
xor
or
sar
jge
mov
dec
sub
test
not
test
xchg
jmp
add
and
mov
dec
mov
adc
cli
test
xchg
test
mov
jns
ss
and
and
jno
je
mov
aas
sbb
cmp
xchg
pop
xor
int3
retf
pop
hlt
add
out
add
jg
cmps
popf
inc
stos
jo
push
cmp
ja
push
xor
mov
aam
cdq
popa
inc
enter
pop
jmp
addr16
jmp
aaa
and
mov
cmc
xchg
out
dec
inc
push
sti
inc
outs
out
cwde
adc
push
xchg
sub
nop
lods
xor
call
mov
xchg
les
xor
test
sub
and
xchg
iret
xchg
mov
sub
pop
cdq
dec
rcl
fwait
pop
sub
not
add
and
cmps
sub
dec
mov
loopne
pop
mov
test
xlat
mov
mov
xchg
inc
mov
neg
mov
xchg
inc
imul
idiv
push
addr16
xchg
sbb
movs
mov
out
and
inc
imul
adc
lods
test
add
pop
(bad)
repnz
std
sar
push
pop
loope
outs
pop
int
in
in
pop
add
sub
xchg
jo
mov
jne
add
vmovapd
shl
out
xchg
dec
adc
cmp
fwait
movs
mov
jp
movs
jp
xchg
and
cmps
aam
adc
add
mov
test
inc
in
cmp
call
jae
push
movs
aaa
xor
hlt
jno
enter
dec
pop
mov
jae
retf
pusha
mov
add
pop
xchg
je
fist
or
xchg
jo
lock
les
ins
jmp
nop
mov
adc
adc
sbb
and
inc
push
adc
jge
mov
jnp
mov
jl
push
mov
cmp
in
push
mov
jbe
stos
test
dec
inc
daa
out
js
or
mov
pusha
call
xchg
outs
in
add
xchg
mov
sbb
fist
out
out
test
cdq
xor
mov
sbb
stos
into
mov
xchg
daa
mov
push
adc
dec
das
lods
es
xor
cmp
mov
adc
outs
in
mov
imul
lahf
push
sub
pop
pop
push
inc
cmp
push
mov
add
call
mov
repz
stc
(bad)
mov
pop
(bad)
jl
aam
dec
out
mov
es
popa
xor
shl
jle
cli
ret
mov
xchg
call
jmp
xlat
outs
ds
or
(bad)
xchg
inc
dec
cmp
mov
stc
(bad)
popa
mov
aas
and
sub
push
sbb
cmc
popa
(bad)
out
push
or
jp
ins
test
shr
pusha
add
jbe
jnp
fbstp
pop
(bad)
dec
dec
fs
add
inc
push
into
cmps
pop
outs
jae
scas
test
pop
outs
pop
dec
ins
fcom
(bad)
enter
adc
aad
aad
or
mov
inc
adc
scas
or
imul
cld
or
pop
adc
adc
out
daa
enter
jae
mov
dec
mov
inc
sub
inc
inc
or
jecxz
rol
aaa
lahf
pop
mov
fincstp
hlt
push
add
rcl
cwde
push
jge
add
adc
cmp
lods
lods
or
pusha
(bad)
(bad)
ror
sbb
scas
and
dec
xchg
jmp
inc
pop
jne
daa
imul
xor
outs
dec
push
(bad)
and
pop
in
push
and
adc
(bad)
shr
mov
outs
and
stos
xlat
fild
sub
gs
js
jo
test
pop
xchg
xchg
cmps
mov
jmp
mov
das
(bad)
fisub
in
mov
into
add
push
push
add
test
xor
mov
sub
pushf
retf
adc
xchg
gs
outs
xchg
xchg
fs
arpl
cmp
sbb
scas
mov
cmp
stc
nop
jno
sub
es
mov
in
or
pop
push
test
add
int3
add
ds
mov
mov
not
int
mov
in
jae
dec
dec
arpl
les
shl
fisubr
addr16
and
sbb
sbb
lock
ror
mov
mov
rcl
sub
inc
jp
push
jb
mov
dec
inc
outs
mov
sbb
dec
jp
inc
sti
pushf
sbb
sahf
jmp
fisttp
out
push
inc
outs
inc
sub
cld
repz
iret
pop
push
data16
pop
mov
sbb
mul
xchg
fild
ds
movs
sbb
mov
paddq
test
jbe
mov
inc
mov
pop
mov
ins
add
jno
das
popf
std
in
data16
test
bound
push
std
(bad)
jl
xor
fistp
add
mov
shr
sub
(bad)
nop
jge
movs
fsub
inc
nop
or
mov
ret
xor
adc
(bad)
aaa
icebp
push
jb
inc
ins
fcom
xchg
pop
cmp
mov
lds
ins
outs
imul
bound
push
fsqrt
cli
iret
cmps
push
stos
(bad)
(bad)
cmc
sahf
fldenv
(bad)
js
jl
out
mov
fwait
dec
cmp
and
xor
cmc
cmps
cmp
fistp
dec
das
dec
fucom
scas
cmp
loope
xchg
aas
pop
jnp
and
jb
dec
cmp
xor
loopne
in
mov
dec
cli
cmp
add
and
sub
pop
jmp
or
scas
add
xchg
cmps
mov
fdiv
fnstsw
mov
mov
and
cmps
adc
mov
adc
fiadd
push
in
mov
fwait
cwde
sbb
add
jno
jmp
fldcw
aas
mov
mov
sub
inc
mov
ret
into
jne
loop
cli
pushf
sbb
xchg
sub
adc
mov
mov
pop
leave
pusha
push
sub
lods
scas
cld
inc
sub
inc
mov
dec
mov
rol
ins
popa
pop
out
(bad)
fiadd
or
int3
or
inc
ror
and
and
push
xchg
popa
scas
jecxz
aas
lock
ins
push
mul
das
push
movs
fisttp
jo
adc
mov
rcl
pop
cmp
lods
out
mov
sahf
xchg
addr16
inc
lds
enter
jbe
lods
aam
fcom
pop
inc
gs
outs
push
cmp
mov
cmp
loope
adc
and
sbb
clc
push
arpl
sbb
xor
push
mov
(bad)
fcomp
jne
outs
mov
dec
sbb
(bad)
ds
sti
mov
imul
test
icebp
mov
pop
sbb
mov
pop
xchg
add
movs
mov
in
mov
mov
sti
test
sub
icebp
inc
inc
enter
ret
std
pushf
dec
xchg
cmp
dec
idiv
xchg
xor
call
sub
mov
arpl
xor
and
xchg
dec
cmp
xchg
cmp
sti
push
mov
shl
xor
movs
jmp
lods
out
cwde
xor
lahf
jbe
xchg
cmp
adc
push
neg
adc
inc
popf
add
mov
push
sub
xor
repz
outs
ja
test
push
pop
mov
jmp
push
dec
fidivr
cmps
std
fwait
xrelease
scas
jmp
sahf
or
jmp
(bad)
gs
jecxz
mov
mov
push
loop
int
jns
xor
push
xor
ja
loopne
cld
xchg
adc
adc
movs
clc
pop
xor
movs
sbb
and
adc
push
mov
xchg
add
out
loop
or
test
retf
dec
int3
(bad)
jb
(bad)
test
mov
dec
dec
and
cmp
pushf
xor
clc
(bad)
mov
scas
sahf
jmp
jmp
cmp
dec
shl
jg
ret
ret
push
push
(bad)
jnp
adc
cmp
pop
xchg
sub
mov
call
lahf
iret
imul
mov
pop
pop
not
dec
xor
cmp
add
sti
cs
and
dec
push
leave
add
add
mov
mov
cvtdq2ps
push
jle
pop
int3
jns
jge
pop
sbb
cmp
in
jno
inc
popa
pop
leave
adc
dec
or
push
sar
in
mov
inc
arpl
cmp
je
inc
jo
ja
sub
pop
sbb
jo
adc
neg
mov
mov
sbb
dec
retf
jp
xor
outs
or
gs
es
sti
sbb
xchg
add
inc
mov
cld
push
fldz
jg
cmps
aas
sub
je
push
lea
and
mov
xchg
mov
cdq
xchg
inc
leave
call
or
pop
or
xor
jne
or
jle
dec
fild
mov
xchg
xchg
loopne
cs
mov
and
outs
cmp
mov
(bad)
mov
mov
xchg
aad
inc
cwde
xchg
xor
add
adc
repnz
xor
in
sahf
xor
sahf
xor
test
sbb
call
clc
cmp
mov
(bad)
adc
ror
(bad)
aam
jmp
pushf
push
popa
ins
push
mov
fst
std
mov
ffreep
and
or
out
pop
sub
dec
aam
hlt
repnz
stos
xor
or
mov
je
push
mov
bound
mov
jae
jmp
dec
lods
data16
push
xchg
xor
jecxz
test
fmulp
data16
stc
cmc
or
add
cmp
js
inc
faddp
mov
mov
call
fcmovu
cdq
out
jp
(bad)
xlat
bound
sbb
sub
xor
add
cli
leave
or
add
cmp
sbb
mov
inc
call
ja
cmp
loope
fwait
push
push
call
fnstenv
scas
lahf
mov
push
fsubr
pop
mov
xchg
jg
mov
int3
add
adc
inc
fcom
cmp
test
sbb
sbb
in
ins
gs
mov
and
inc
popf
cmps
mov
pop
sbb
mov
(bad)
int
hlt
add
mov
mov
arpl
aam
or
in
pop
cmp
dec
adc
daa
(bad)
std
mov
(bad)
sub
xchg
retf
fimul
(bad)
mov
movs
cmc
pop
xor
mov
mov
enter
mov
retf
retf
dec
mov
sbb
adc
mov
mov
lods
outs
data16
sbb
std
mov
jns
call
ret
adc
inc
ret
mov
stos
shr
mov
mov
cmp
fsub
stos
(bad)
xchg
and
in
push
adc
scas
mov
jnp
popf
cli
and
loope
shr
stos
ja
jecxz
push
dec
(bad)
add
mov
cli
fsubrp
and
pop
adc
je
push
dec
sub
cmp
mov
lea
push
(bad)
int3
adc
mov
jmp
or
mov
lods
xchg
not
jns
mov
ror
mov
dec
fcmovnb
cmp
int3
outs
push
dec
or
mov
xor
movs
adc
adc
pop
xor
xchg
jae
dec
add
cmp
addr16
and
inc
push
cmc
add
mov
xor
xchg
mov
push
les
adc
test
icebp
jbe
mov
arpl
add
js
pop
dec
xor
mov
je
rcl
outs
inc
(bad)
xchg
jg
add
push
cdq
retf
dec
push
(bad)
daa
jle
in
mul
and
ins
mov
mov
adc
dec
retf
mov
out
cmps
cmp
pop
dec
jnp
sbb
jns
mov
popa
xor
add
ins
xchg
stos
mov
ror
xchg
xchg
jp
push
jo
cwde
sbb
pushf
scas
dec
mov
lods
mov
inc
pop
xchg
loopne
xchg
not
jb
xchg
adc
push
xchg
push
mov
cli
and
sbb
mov
jnp
lods
int3
sbb
sub
pop
sbb
test
mov
jb
pop
mov
xchg
lods
(bad)
jnp
jp
lahf
mov
cmc
push
sub
cmc
cs
cmps
shr
lods
lea
call
nop
outs
std
fsubrp
sar
lock
dec
sub
or
fdivrp
cwde
add
mov
enter
addr16
rcl
sub
daa
push
sub
sahf
xchg
test
lds
push
das
sbb
add
out
iret
ins
fimul
mov
idiv
adc
fidivr
mov
sub
clc
xlat
(bad)
out
retf
mov
mov
adc
jbe
jbe
dec
movs
mov
js
fld
push
clc
fisub
pop
or
add
xchg
jo
inc
loopne
outs
push
mov
(bad)
push
fcmovnbe
imul
mov
leave
pusha
retf
pop
fnsave
xchg
dec
push
push
jle
adc
into
xor
cli
(bad)
sar
push
or
and
add
cmp
mov
mul
loope
jo
stos
aad
pop
jno
cld
adc
aam
ja
not
or
mov
or
adc
and
mov
add
xchg
push
jecxz
fld
mov
cli
(bad)
lahf
pop
test
nop
sar
rcl
jno
push
out
fbstp
out
outs
sbb
fadd
pop
mov
mov
adc
addr16
dec
jmp
and
mov
rcl
int3
int3
pop
stc
add
lea
mov
mov
gs
jbe
pop
sahf
sahf
ss
sub
dec
sub
movs
mov
push
call
ja
ja
dec
mov
sub
pop
dec
stos
adc
stc
xor
test
pop
mov
stos
sti
mov
pop
and
and
push
ja
pop
lock
mov
into
mov
pop
cmp
ficom
cmp
cmp
cmp
mov
jnp
mov
movs
xor
push
dec
inc
dec
jo
test
sub
ds
lds
sub
fwait
(bad)
sub
jno
nop
test
out
je
xor
mov
lahf
test
inc
stc
test
jle
inc
adc
ret
scas
movs
pop
gs
fstp
pop
add
cmp
(bad)
ficomp
sub
cmp
fs
mov
dec
jecxz
dec
xchg
pop
cdq
shl
pop
jmp
pop
(bad)
inc
jbe
inc
popa
cdq
(bad)
stos
dec
jp
and
rcr
cld
sub
pop
adc
jmp
adc
cmp
cld
fbstp
outs
dec
into
into
cmp
mov
cwde
ret
add
inc
mov
mov
pop
test
out
stos
ja
pusha
mov
imul
lea
cmps
jbe
pop
out
addr16
icebp
mov
test
dec
in
test
sub
je
addr16
adc
pop
jg
cld
dec
popa
lea
hlt
cvttps2pi
inc
fwait
mov
push
sub
ins
mov
(bad)
in
(bad)
repz
jg
and
jecxz
into
lods
shl
mov
or
ret
in
(bad)
dec
call
mov
fwait
or
xor
repz
dec
idiv
dec
add
xchg
pusha
mov
jl
sub
ins
sub
jle
mov
cmc
ss
jecxz
mov
dec
test
adc
out
xor
aad
inc
int3
xchg
fnclex
mov
ds
cdq
xor
js
in
adc
fstp
and
out
jne
(bad)
out
pop
pop
sbb
jmp
mov
icebp
mov
and
fprem1
and
lds
sub
pop
jg
mov
dec
xor
fimul
(bad)
pop
enter
adc
xchg
jl
retf
jne
aas
xor
(bad)
cmps
mov
addr16
add
ds
mov
xlat
rcl
(bad)
int
xchg
(bad)
cmps
lea
stos
les
mov
call
call
loope
jmp
xlat
xor
add
mov
ins
mov
loopne
popa
push
mov
and
pop
loopne
sub
mov
outs
cmp
inc
hlt
mov
jns
xchg
out
call
sub
jmp
pop
mov
mul
je
jmp
xor
push
test
loop
sbb
(bad)
in
adc
pop
ret
jecxz
test
adc
lods
popf
mov
loope
jne
das
das
jg
outs
xchg
inc
scas
sbb
test
jbe
push
out
aam
and
movs
and
in
and
fbld
add
cmp
mov
iret
cmc
not
imul
leave
and
fcomp
jae
out
imul
ins
mov
cmp
sbb
jbe
cmp
pop
mov
jecxz
add
in
mov
pop
inc
jne
sti
js
lods
inc
sbb
cmp
cmp
adc
lds
dec
rcr
ds
pop
es
sub
pushf
inc
paddsb
test
sbb
loopne
xor
inc
mov
push
mov
or
in
cwde
scas
aas
outs
push
adc
scas
out
stos
stos
jmp
and
outs
jo
fbld
cmps
imul
jmp
mov
je
hlt
repz
push
leave
mov
imul
aam
xchg
movs
js
js
out
mov
test
fidivr
scas
lahf
fsubr
mov
sti
sbb
mov
jno
jne
mov
xchg
scas
mov
icebp
and
xor
and
arpl
loope
retf
adc
not
pop
pusha
shl
and
pop
inc
ror
adc
dec
cmp
leave
dec
inc
les
mov
mov
xchg
xor
(bad)
cmps
sahf
mov
pushf
mov
daa
cld
fldcw
mov
add
push
sbb
cmp
sub
clc
ss
hlt
mov
lock
sub
push
mov
daa
mov
outs
pop
sub
and
cmps
loopne
ret
cmps
inc
popf
std
sub
adc
outs
leave
movd
popa
loopne
ins
out
mov
cs
sbb
adc
das
std
retf
mov
sbb
fcmovnb
push
iret
jmp
jg
xor
hlt
test
lods
pop
out
test
scas
rcr
pop
add
lea
fist
out
adc
cs
fsubp
vandpd
xor
int
inc
inc
shl
cmp
or
push
scas
ins
out
daa
jmp
bound
ret
xor
sub
or
dec
sbb
sub
adc
jmp
enter
lock
mov
fwait
loop
out
push
mov
in
(bad)
out
push
push
pop
xchg
inc
hlt
push
or
out
jecxz
out
dec
push
int
mov
int
inc
test
lods
scas
std
dec
mov
push
aaa
test
sub
sub
cld
xor
mov
push
inc
iret
mov
adc
inc
jmp
cmp
sub
jb
inc
pop
ja
in
xchg
sbb
imul
cdq
mov
inc
sbb
mov
test
lds
pop
push
leave
xchg
lods
rol
gs
jne
sbb
and
lds
js
arpl
popf
cmp
mov
xor
mov
adc
cld
das
jb
xlat
or
pop
inc
fnstcw
lea
xchg
and
int3
cmp
dec
call
fnstsw
arpl
sbb
repnz
mov
pop
in
pop
sbb
test
div
pop
fs
stos
mov
call
push
add
cmp
adc
fistp
neg
inc
mov
sbb
jg
and
gs
jae
push
rcr
sbb
stc
addr16
bnd
pop
fcmovbe
stos
daa
imul
adc
or
cmp
jo
dec
cmp
sub
inc
mov
push
push
mov
xchg
mov
sbb
and
sub
or
out
ficom
pusha
imul
pusha
and
xchg
out
dec
adc
inc
bound
pop
into
ret
pushf
mov
jecxz
pop
rcl
inc
inc
inc
pop
stos
xchg
push
push
loop
mov
pop
bnd
fadd
leave
call
and
or
add
les
fisttp
clc
add
scas
sbb
jmp
(bad)
sbb
mov
sub
xchg
outs
cwde
adc
pop
add
jns
jge
mov
inc
push
add
cmps
or
cwde
int3
call
dec
int
inc
(bad)
rcl
cmps
push
ins
adc
xor
call
ficomp
jns
fmul
scas
push
ret
inc
adc
test
sahf
(bad)
stc
jmp
pop
xor
mov
mov
retf
mov
sub
into
and
jne
stc
int3
inc
xlat
adc
inc
cmp
sub
push
daa
mov
ins
aas
iret
add
icebp
mov
leave
sub
sbb
mov
(bad)
xchg
leave
jge
mov
popa
push
push
outs
inc
pop
cmc
clc
adc
fnstenv
nop
mov
js
dec
aas
cmp
fs
pop
cmps
xchg
(bad)
push
pop
pop
icebp
sbb
rcr
push
dec
dec
push
dec
inc
push
icebp
jo
xlat
das
outs
int
cwde
sub
stc
add
imul
jne
xor
jp
push
test
arpl
loopne
scas
sbb
cwde
imul
lods
add
cmps
xlat
inc
in
jno
popf
dec
hlt
sub
inc
retf
inc
xchg
jg
sbb
in
jmp
xor
mov
mov
mov
out
test
xor
cmp
xchg
ret
icebp
adc
movs
xchg
mov
inc
aaa
ror
test
pop
das
sbb
call
mov
(bad)
out
push
mov
cld
test
xchg
adc
data16
jecxz
inc
mov
pop
ret
int
out
sbb
xchg
arpl
cs
inc
lock
loope
pop
gs
cmp
loope
test
(bad)
hlt
test
ins
ss
sub
push
mov
cmps
xchg
fs
stos
cmp
pop
inc
cmps
lahf
in
and
xor
push
inc
or
mov
addr16
add
pop
push
and
ds
xchg
scas
rcl
add
in
daa
mov
dec
es
cwde
cmp
pop
cdq
sbb
js
jnp
push
sub
jne
dec
pop
sbb
mov
inc
xor
fiadd
cmp
pop
xor
mov
xchg
ret
fadd
pop
leave
push
js
pop
ror
adc
push
sub
push
xor
mov
movs
hlt
sti
shr
test
xchg
(bad)
cmc
mov
mov
jmp
push
test
repnz
(bad)
mov
mov
sub
and
loop
push
adc
stos
add
loopne
adc
out
test
or
mov
loop
dec
mov
dec
cwde
sbb
mov
cmp
xchg
dec
xlat
enter
jge
clc
pop
cli
jne
fild
nop
pop
jp
sub
push
lods
gs
in
jns
(bad)
movs
xor
or
(bad)
(bad)
movs
cmp
out
cdq
sub
pushf
and
shl
or
(bad)
push
in
push
cmp
dec
add
jo
jo
inc
jae
push
push
adc
ins
mov
ror
mov
and
movs
das
xchg
dec
sbb
pop
je
sub
cs
sbb
jge
dec
inc
jp
es
fmul
les
inc
jmp
inc
push
jge
cmps
xor
test
push
or
jno
in
out
lds
cmps
es
jnp
mov
mov
adc
fwait
stos
scas
imul
cmp
cmc
mov
mov
adc
(bad)
fnstenv
cmp
dec
fidiv
mov
mov
retf
mov
bnd
mov
sbb
xchg
jne
jge
out
inc
scas
mov
rep
mov
das
or
not
lods
aad
pop
cdq
neg
stc
je
jb
dec
(bad)
idiv
adc
scas
cmp
dec
and
fbstp
sub
aaa
mov
enter
jl
push
or
and
div
adc
cmp
jbe
aam
add
shl
mov
push
or
retf
push
sub
ret
sub
paddw
dec
mov
mov
xor
cwde
nop
dec
adc
test
jge
dec
pop
les
arpl
outs
or
push
inc
jle
sub
lahf
pop
sub
pop
push
add
xor
ja
jmp
repz
and
push
or
mul
mov
ins
dec
dec
jb
jl
outs
dec
inc
add
nop
outs
xchg
push
pop
sbb
bound
ins
imul
cdq
jo
and
nop
sub
sar
int3
xchg
add
fisub
popa
enter
std
fisubr
or
push
jb
jg
add
outs
xchg
fiadd
js
fcom
fistp
cmps
ds
sar
iret
sub
leave
and
aaa
pop
jbe
sbb
movs
and
ret
mov
cmc
repnz
pop
cmp
pop
add
mov
mov
add
sub
rcr
es
leave
or
jnp
jno
jo
fs
(bad)
lock
popa
push
fsubr
push
push
and
test
(bad)
jmp
add
loop
neg
stos
shl
xor
inc
add
sub
pop
cs
push
out
mov
or
ss
popa
push
sub
sub
out
cmp
or
sbb
rol
dec
pop
jns
sub
bound
in
imul
retf
xor
add
popa
cmp
push
sbb
add
push
jp
pop
sub
cmps
or
inc
lds
or
and
mov
push
out
(bad)
(bad)
nop
out
out
push
arpl
xchg
in
(bad)
sti
mov
dec
push
test
xchg
xchg
sub
loope
ret
jne
jl
call
or
xchg
pop
dec
cdq
aam
xchg
xor
shr
inc
mov
mov
aad
mov
xor
fsubr
mov
sbb
movs
sub
jno
mov
rol
ficomp
and
ins
scas
inc
mov
pop
push
stos
mov
out
pusha
push
(bad)
aad
in
and
aad
push
push
push
je
ja
xchg
push
repz
mov
xor
int
xchg
or
lds
inc
or
xor
push
sti
push
iret
(bad)
adc
mov
pop
mov
aam
ja
jmp
mov
or
sub
mov
fprem
call
add
cli
mov
cwde
call
inc
daa
jmp
sub
out
scas
adc
lock
cmps
push
mov
sub
cmp
mov
pop
mov
(bad)
in
(bad)
cmp
pop
lods
jle
sbb
in
mov
mov
leave
sbb
test
mov
add
mov
inc
xchg
lods
xchg
fcompp
rol
enter
ficom
shr
adc
or
and
xor
ins
cmp
je
jmp
jno
dec
push
fnstenv
jmp
fwait
cmp
jmp
enter
repnz
ins
int
clc
dec
xchg
xlat
in
sbb
mov
jecxz
aad
dec
pop
popa
aam
(bad)
ret
stc
std
add
sbb
ja
in
xchg
inc
retf
pop
jmp
mov
sub
mov
push
pop
or
icebp
push
xor
sub
mov
inc
mov
pop
out
add
mov
cmp
popf
jne
push
test
dec
add
ja
xor
mov
inc
sti
cmp
mov
sub
xchg
rcr
sub
pop
gs
fcompp
(bad)
lds
fild
push
call
mov
push
or
lods
lar
out
or
lahf
cvtpi2ps
call
mov
xchg
lahf
xchg
jp
out
inc
push
inc
dec
mov
fisttp
jle
adc
push
sub
in
aam
scas
or
jecxz
adc
enter
jne
stos
inc
cmp
nop
scas
xchg
out
int
sub
dec
fiadd
out
cs
pop
jne
xlat
lea
je
mov
call
or
add
fcom
add
iret
(bad)
outs
lea
cli
outs
fist
popa
add
fsubr
dec
sbb
pop
data16
aaa
jnp
adc
xchg
or
enter
cdq
sar
sbb
pop
test
aad
and
pop
movs
das
xchg
or
cs
mov
fadd
pop
mov
ja
push
or
cmp
cld
mov
(bad)
ds
mov
repnz
(bad)
and
in
add
dec
rcl
dec
mov
stos
cmp
or
cmps
mov
stos
ja
aam
shl
push
cwde
pop
leave
xor
sbb
sbb
push
adc
jbe
inc
jno
lock
xchg
xlat
scas
jne
ins
cmp
sub
mov
(bad)
cld
cmp
fwait
and
aaa
retf
xchg
dec
push
add
stos
pushf
xor
sti
rcl
adc
mov
out
dec
cmps
test
pusha
ds
outs
fcmovnu
inc
and
(bad)
sbb
repnz
mov
cmp
das
xchg
jb
jne
pop
cmp
test
jae
fadd
jo
adc
mov
(bad)
sbb
sbb
scas
pop
sahf
dec
aaa
mov
and
cmp
xchg
push
jne
mov
repnz
lfs
pop
inc
out
sbb
aas
add
test
dec
push
repnz
pop
xor
jns
popf
or
jmp
js
fst
imul
cmp
ror
cld
ins
cmp
push
enter
dec
dec
call
sar
in
pusha
mov
mov
and
(bad)
iret
mov
dec
dec
fild
pop
rol
push
jmp
or
lahf
jl
jne
push
cmps
(bad)
inc
add
mov
fld
cmp
ds
popf
icebp
ret
push
cli
call
es
retf
xchg
cs
es
je
or
xor
fnsave
loop
dec
and
sub
mov
jp
cs
jge
add
pop
(bad)
cmc
dec
mov
cmps
fbld
cmp
in
(bad)
or
iret
fs
adc
inc
imul
cmp
mov
add
std
add
push
push
movs
pusha
sbb
(bad)
dec
push
dec
hlt
jo
js
mov
pop
nop
ret
push
mov
in
in
test
fsubrp
inc
xchg
out
popf
xchg
or
mov
out
jl
pop
(bad)
sbb
dec
and
mov
cmp
shl
lea
dec
lods
push
(bad)
sbb
xor
pop
add
jp
or
rcr
xor
mov
add
jbe
movs
call
js
pop
pop
jnp
inc
fldcw
sub
jno
xlat
dec
fcomp
mov
cmp
mov
pop
dec
leave
pop
hlt
aaa
ins
ret
jge
call
xchg
mov
ja
cs
dec
inc
push
outs
jmp
das
aam
jne
(bad)
ins
sbb
int3
daa
mov
ins
mov
xor
cmp
sti
fmul
cmp
mov
pop
pop
inc
pop
xchg
repz
push
retf
retf
fist
inc
mov
adc
cmps
shl
mov
mov
leave
lods
adc
and
div
sbb
xchg
or
int
push
into
jb
stos
and
mov
repnz
rcl
in
jnp
test
cmp
call
mov
push
inc
jmp
xor
cld
test
mov
and
pop
adc
sar
mov
and
sbb
sbb
mov
cmp
push
cs
cmp
pop
xchg
movs
test
je
out
push
xor
dec
xchg
jge
pop
mov
movs
mov
jmp
xor
out
lahf
xor
jecxz
mov
cli
out
shr
mov
push
xchg
and
mul
lds
stos
in
pop
mov
test
sahf
sub
mov
cmp
scas
push
jmp
mov
pop
arpl
retf
add
out
jle
pusha
push
iret
sahf
mov
pop
mov
mov
icebp
mov
mov
or
sbb
mov
cmc
add
xchg
mov
into
rol
pop
in
xchg
add
clc
out
mov
dec
or
mov
jo
sub
mov
mov
fidivr
lods
dec
outs
jg
xor
and
out
sub
loopne
sbb
pop
add
in
stos
inc
fist
inc
adc
ret
sub
jecxz
popf
cmc
sub
pop
sbb
or
sbb
hlt
sbb
adc
add
(bad)
(bad)
fidiv
add
push
je
mov
mov
mov
xor
and
out
add
push
cli
mov
fist
push
test
sub
xor
xchg
jg
les
inc
je
sub
dec
mov
add
(bad)
adc
inc
mov
icebp
fs
mov
inc
xchg
ins
mov
jbe
xchg
(bad)
rcr
lods
(bad)
adc
retf
xlat
lea
scas
or
pop
push
jnp
mov
add
lods
xor
repnz
and
pusha
pop
pop
aas
movs
stos
mov
out
and
imul
(bad)
shr
mov
int
push
cmps
dec
jmp
cmps
mov
mov
ret
inc
leave
test
dec
xor
test
add
sti
inc
xor
test
sbb
imul
jne
daa
fst
inc
xor
mov
test
fdivrp
int
loopne
loop
dec
sub
int3
popf
xchg
add
inc
lods
dec
mov
sar
dec
ds
cld
inc
int
out
lods
lahf
dec
cli
out
inc
inc
add
lds
movs
jecxz
es
push
jns
mov
inc
adc
xlat
cmc
shl
outs
push
adc
sub
sbb
add
js
cmp
movs
sub
inc
inc
cld
adc
pop
faddp
in
lahf
pop
pop
mov
mov
int
push
push
iret
jo
lahf
shr
add
mov
or
aaa
cmp
sbb
frstor
rol
sbb
dec
out
xor
js
in
sub
mov
jp
mov
cmps
adc
dec
scas
ror
xchg
mov
mov
and
jns
xor
gs
clc
jg
mov
mov
ss
ror
outs
pop
pusha
aas
cmp
adc
clc
lods
pop
ja
stos
stos
sar
inc
arpl
push
pop
or
jge
fimul
xor
lahf
cmps
out
mov
cmps
xchg
inc
test
mov
mov
adc
out
das
dec
inc
mov
retf
mov
outs
popf
aaa
sub
push
mov
stos
and
hlt
xor
jg
jnp
stos
scas
mov
int
cwde
neg
std
adc
out
xlat
xchg
shl
jne
(bad)
mov
mov
mov
jp
sbb
mov
(bad)
sahf
mov
cmp
sub
mov
outs
rol
mov
pop
mov
fs
inc
pop
xor
dec
cmp
(bad)
jne
cmp
clc
cmps
neg
ins
stos
imul
jns
push
xchg
or
mov
jno
jno
nop
push
add
stos
xchg
in
push
sti
ins
icebp
jns
push
std
xchg
call
fucomip
fdivr
adc
lock
std
ins
ss
sub
mov
cmp
and
push
mov
inc
inc
stos
push
mov
fcom
push
mov
add
add
cmp
pop
add
pop
pop
xchg
pushf
ja
fs
mov
aam
stos
(bad)
popf
into
retf
popf
push
pop
les
es
or
(bad)
retf
pop
pushf
or
xor
inc
mov
icebp
xor
ret
pop
(bad)
mov
scas
xor
hlt
out
add
sbb
pop
jge
test
xchg
out
sahf
loopne
loop
(bad)
out
cli
ret
icebp
add
dec
ror
(bad)
daa
bound
(bad)
mov
pop
outs
and
cmps
adc
xor
(bad)
sub
addr16
cwde
jo
and
fld
or
outs
cs
ja
pop
xchg
loopne
(bad)
inc
add
enter
(bad)
adc
add
ins
shl
add
outs
stos
adc
pop
cmps
jle
fcomp
jns
(bad)
imul
loop
inc
repnz
(bad)
push
das
xor
mov
mov
(bad)
mov
mov
dec
in
and
test
loop
fs
ret
shl
retf
in
mov
cmp
mov
xchg
mov
jae
mov
xchg
outs
cmp
pop
push
push
das
test
jge
sbb
call
iret
in
push
sub
rcr
retf
cli
mov
jo
pop
jl
lods
in
popa
and
and
jno
push
lods
enter
shr
fs
shl
dec
cdq
pushf
and
popa
stc
fldcw
mov
xor
js
daa
out
and
pop
add
sbb
jb
ret
adc
or
jno
xchg
ins
xchg
pop
jbe
push
xor
loop
xor
imul
pop
pop
push
or
adc
push
inc
pop
mov
call
jl
push
gs
jnp
add
dec
fmul
outs
and
cmp
fdiv
scas
inc
or
mov
cli
pop
arpl
fild
mov
or
jb
push
cld
mov
test
cmp
gs
lea
ret
fs
lahf
sti
mov
add
popa
mov
pop
movs
adc
inc
ss
adc
mov
dec
imul
cs
stos
stos
inc
xor
fxch
outs
mov
or
push
cmps
retf
repz
add
(bad)
pop
push
jno
pop
mov
dec
jmp
fst
mov
in
pop
and
leave
xor
jno
scas
pusha
jecxz
retf
mov
adc
mov
cmp
xchg
xor
fdiv
push
add
mov
(bad)
(bad)
or
pop
sub
mov
mov
aas
(bad)
ficom
dec
dec
loope
loop
and
push
mov
sbb
cmp
cmp
fsub
mov
jbe
jmp
mov
mov
sub
cmp
popa
mov
pusha
aaa
retf
push
xchg
or
gs
and
inc
movs
out
push
push
mov
les
mov
mov
mov
int
and
dec
fnstenv
imul
loope
outs
test
sbb
ins
or
js
mov
scas
sub
mov
out
xchg
scas
jecxz
cmp
nop
call
cld
fadd
neg
fidivr
stc
dec
xor
imul
mov
mov
add
cmp
clc
push
and
xchg
inc
add
inc
stos
inc
push
outs
test
loope
pushf
mov
push
xor
adc
xor
ficomp
test
scas
mov
retf
mov
(bad)
popf
or
mov
vxorps
test
cmp
out
loopne
xor
push
push
mov
into
pushf
cdq
cmp
hlt
sbb
retf
xor
lock
stos
adc
inc
mov
push
retf
pop
cmp
xlat
movs
imul
cmps
test
adc
fdivr
aad
ret
je
out
shr
dec
fidivr
xor
test
lock
pop
mov
les
mov
pop
xchg
not
sub
int
cdq
test
cdq
stc
retf
fucomip
in
shl
cdq
cdq
xchg
ds
scas
mov
fist
sub
adc
lock
daa
nop
push
dec
arpl
scas
push
mov
int3
sbb
inc
call
ja
mov
inc
jecxz
jecxz
push
(bad)
std
or
sbb
mov
xor
icebp
stc
sbb
mov
mov
sbb
call
aad
xor
lahf
cmp
xchg
out
push
mov
ja
xchg
outs
lods
push
cld
dec
movs
scas
iret
mov
and
(bad)
aam
sub
jb
pop
jle
sti
paddw
xor
mov
in
cld
sub
mov
xlat
js
mov
jmp
fiadd
mov
jne
inc
aad
mov
ds
mov
cs
dec
adc
fadd
push
fbstp
inc
pusha
jmp
sbb
jmp
cmp
fsubp
xlat
mov
adc
call
shl
or
dec
popw
inc
cs
movs
aam
sar
xchg
dec
pushf
popa
es
and
pop
(bad)
sbb
fmul
and
pop
stos
jmp
daa
cmp
xchg
cmp
mov
cmp
jecxz
es
frstor
inc
cwde
(bad)
in
mov
dec
int
dec
or
leave
dec
xchg
scas
and
xchg
push
jge
leave
jg
sbb
jo
push
lahf
les
jecxz
or
pusha
imul
add
fmul
adc
mov
cmps
jle
cmps
add
or
mov
dec
sub
fimul
push
movs
add
sbb
cmp
adc
xor
xchg
ret
(bad)
lahf
add
fwait
clc
mov
mov
icebp
xchg
nop
xor
push
jo
pop
adc
ins
or
retf
inc
cmp
cli
xor
mov
jl
jmp
fld
shr
lods
push
cld
sub
mov
inc
xor
in
xchg
pop
call
clc
retf
cli
(bad)
pusha
pop
mov
stos
mov
fcmovbe
push
clc
fwait
sub
mov
sti
and
ucomiss
and
adc
inc
ret
gs
rol
pop
ins
mov
mov
cli
mov
inc
test
into
jb
sbb
fstp
cmp
data16
cmp
pop
or
jle
sub
mov
xor
cmp
mov
inc
add
mov
repz
test
fcmovb
loopne
inc
pop
dec
mov
leave
repz
adc
and
fst
stos
inc
push
stos
pushf
aad
retf
popa
enter
in
addr16
push
ds
lock
aad
jo
pop
pop
test
sub
(bad)
(bad)
loop
dec
or
(bad)
das
fsub
sub
ins
xchg
outs
ins
pop
mov
inc
add
loope
icebp
adc
outs
ret
push
fwait
ins
and
fucomip
cmp
int
iret
fwait
jb
(bad)
mov
xor
into
mov
imul
dec
in
ja
push
pusha
ja
adc
xchg
ds
hlt
movs
adc
pushf
mov
out
sub
je
mov
xor
(bad)
ds
daa
push
ins
mov
leave
dec
pop
jmp
or
pop
push
cmp
sub
std
sbb
mov
cli
mul
xor
(bad)
shr
jo
inc
sar
add
hlt
push
shl
scas
cmp
ins
cmps
gs
mov
out
mov
jne
fld
mov
and
mov
repz
dec
pop
jle
push
mov
pop
pop
outs
xchg
pop
sbb
pop
or
fistp
jecxz
mov
push
in
nop
mov
mov
outs
not
cmps
jge
xor
inc
sbb
mov
jmp
dec
cwde
xor
into
loopne
xchg
ins
sub
inc
stos
jle
inc
push
push
inc
sub
mov
mov
dec
in
mov
add
push
ins
div
or
das
dec
pop
rcr
fdivr
mov
push
and
lahf
cmp
sbb
mov
adc
(bad)
push
ins
xor
sub
mov
add
xchg
imul
jns
pop
xchg
dec
fwait
addr16
in
sar
jle
inc
mov
(bad)
scas
loop
cld
(bad)
fidivr
pop
stos
sbb
lahf
adc
cmp
sbb
push
out
jb
ret
xchg
loop
xor
mov
xor
cmp
cmp
popa
xor
mov
mov
mov
loope
outs
dec
dec
jmp
clc
nop
jecxz
cmps
icebp
sar
in
rcl
mov
mov
out
or
jmp
inc
lods
add
pop
xor
dec
sbb
stos
or
push
std
ins
fs
push
int
pop
dec
or
add
aad
dec
mov
test
jmp
mulps
add
mov
jp
repnz
clc
pop
cmps
mov
or
dec
mov
mov
lea
mov
xchg
hlt
jnp
xchg
xor
(bad)
push
cmp
add
push
lock
push
mov
div
xchg
mov
mov
push
xlat
retf
std
add
push
mov
lds
rcl
out
cmp
inc
push
int
stos
jbe
sti
ret
mov
mov
fidiv
add
jmp
xabort
inc
hlt
shl
into
sub
das
lds
mov
push
bound
inc
fstp
ror
not
cmp
jmp
jecxz
mov
enter
popf
int3
mov
adc
mov
pushf
ret
sahf
lods
mov
mov
mov
mov
shl
fistp
stos
test
or
push
cmp
xor
jl
cmp
in
add
xchg
sbb
repnz
add
mov
adc
push
pop
add
pop
cmps
movq
jecxz
sbb
(bad)
mov
and
xchg
push
adc
inc
das
fwait
imul
dec
jo
stos
(bad)
int3
ret
or
retf
jo
and
popa
adc
xchg
xor
call
(bad)
jle
pop
dec
and
out
inc
ins
jmp
aam
test
mov
or
or
xchg
mov
sub
fnsave
ret
add
jmp
cmp
mov
lea
test
jmp
cli
sbb
test
iret
retf
repnz
rcl
adc
push
arpl
mov
in
adc
mov
inc
enter
jne
imul
push
inc
push
xchg
dec
jae
jge
mov
jge
push
repz
mov
or
bnd
add
sub
xchg
mov
cld
mov
cmps
not
div
push
jbe
inc
fisttp
pushf
and
pop
mov
inc
(bad)
test
test
shr
test
fs
clc
and
arpl
sbb
loop
cdq
aaa
lods
jmp
push
call
sar
xchg
mov
neg
jb
jl
nop
stc
jp
bound
xchg
addr16
pop
in
dec
add
(bad)
adc
or
cmp
sti
adc
neg
push
ja
aas
or
mov
into
sbb
mov
mov
jge
cmp
and
mov
cmp
mov
lea
mov
fs
iret
xor
in
not
sub
jmp
push
scas
add
push
jmp
and
loope
jg
or
std
int3
popf
popf
mov
add
daa
pop
mov
data16
rcr
retf
mov
jbe
mov
imul
mov
jmp
fadd
ja
out
mov
jge
aas
aam
ss
movs
das
xlat
test
push
add
push
cmps
mov
pop
mov
imul
icebp
and
test
mov
call
loope
in
mov
inc
popf
aaa
xor
mov
repz
js
sub
push
push
xchg
out
mov
pop
inc
(bad)
or
retf
ja
mov
mov
imul
js
adc
sub
pop
pusha
mov
ret
sub
cdq
fmul
je
cmps
test
sub
or
sub
ja
inc
movs
jg
sahf
push
retf
pop
cmp
xchg
or
shr
stos
mov
(bad)
imul
stos
dec
test
and
stos
or
push
and
in
xor
mov
sub
pop
popa
mov
jecxz
push
repz
int
mov
popf
test
sub
sahf
pop
outs
pop
pop
call
and
(bad)
mov
(bad)
dec
sbb
out
aad
mov
vpmaxub
push
sbb
xor
or
jo
aaa
mov
or
cli
cmp
add
sti
fwait
dec
les
push
test
test
fisttp
xchg
mov
test
out
cmps
jg
xchg
pop
add
mov
mov
sahf
and
jb
cmp
push
(bad)
bound
and
cmp
xchg
dec
inc
hlt
es
outs
xchg
(bad)
sbb
into
sub
je
dec
lods
sub
dec
inc
imul
jmp
pop
push
cmc
pop
mov
rcr
inc
cwde
cmp
mov
out
loop
jle
pop
pop
lods
inc
(bad)
jmp
cmp
xlat
std
adc
push
push
jae
aad
repnz
mov
sub
push
mov
(bad)
and
loopne
fwait
mov
push
(bad)
xchg
lods
adc
stos
xchg
pop
and
repnz
adc
push
nop
xchg
(bad)
xchg
call
xchg
ror
add
jne
hlt
ret
or
cdq
lock
xchg
dec
outs
les
jmp
cli
mov
xchg
xchg
(bad)
sbb
jg
jo
(bad)
dec
sub
mov
daa
arpl
int
and
cmp
pop
mov
retf
push
cmp
arpl
mov
test
shl
fs
rcl
xor
jmp
xor
and
daa
ds
test
pop
push
out
jecxz
lods
fmul
xchg
adc
shl
outs
inc
in
push
push
mov
mov
xchg
stos
pop
push
shl
push
int3
pop
adc
pop
or
sub
jnp
stc
ins
aad
sbb
mov
neg
add
scas
div
mov
not
aas
sub
fucomi
mov
loope
call
rcr
cmps
mov
aam
pop
cmovnp
mov
jo
int
or
cdq
or
in
mov
jae
mov
cmp
sub
(bad)
adc
(bad)
jge
push
and
arpl
outs
cdq
retf
jp
and
mov
scas
xchg
pop
fistp
movs
loope
sub
aad
inc
(bad)
and
and
imul
dec
ds
dec
inc
jge
xor
sar
cmp
out
hlt
xchg
and
push
cmp
inc
mov
popa
shl
fsubr
lods
clc
jl
lods
out
in
(bad)
jmp
js
inc
rol
hlt
inc
fdivrp
fldcw
add
dec
or
jmp
mov
push
add
in
in
in
cmp
dec
sbb
mov
cmc
(bad)
or
jge
mov
adc
in
retf
push
in
popf
(bad)
out
out
repz
lds
sub
sbb
jle
leave
cmp
cmp
in
inc
fstp
pop
pop
jnp
pop
shl
sahf
test
sti
mov
push
cmp
lahf
cmps
and
pop
pop
mov
pop
pop
sbb
jb
cld
adc
dec
popa
in
imul
sbb
inc
rol
ror
ss
fs
jge
clc
lock
and
mov
out
popa
and
sbb
leave
lock
jl
mov
or
mov
mov
inc
push
mov
sub
mov
loop
icebp
pop
inc
fxch
cmp
pop
mov
lods
enter
fnstsw
out
ret
adc
fucomi
aaa
mov
lahf
fimul
or
pop
inc
mov
cmp
clc
dec
mov
dec
push
xor
fdivr
jno
fstp
lahf
sub
mov
mov
mov
(bad)
and
clc
sub
mov
push
cmps
and
rcl
sub
loop
mov
xchg
rol
in
and
pop
nop
xlat
or
dec
repnz
icebp
adc
and
dec
rcl
cmp
mov
test
fldcw
xchg
cmp
stos
xchg
call
add
lahf
gs
sbb
sti
or
cmp
mov
or
xchg
outs
xor
adc
add
leave
outs
and
out
jge
(bad)
mov
inc
mov
jle
jae
imul
es
stos
jle
add
call
cli
and
mov
jno
xor
adc
push
dec
pusha
popa
sbb
mov
inc
fwait
xor
sar
dec
jmp
dec
pop
(bad)
fistp
cld
pop
test
inc
sbb
push
add
(bad)
out
mov
fwait
push
push
push
mov
loope
sub
movs
scas
and
aam
shl
out
xor
retf
xor
jns
js
ja
xor
dec
test
dec
dec
inc
scas
inc
lahf
inc
ss
adc
inc
lds
mov
jge
iret
dec
inc
xor
mov
jnp
dec
mov
retf
cli
jle
cs
inc
cdq
and
loope
mov
in
loop
or
mov
mov
inc
mov
movs
std
retf
mov
in
jmp
mov
add
pop
inc
mov
or
jp
add
jo
das
or
push
pop
cmc
dec
or
leave
xchg
arpl
or
push
or
loope
leavew
pop
xchg
mov
out
pop
adc
std
loopne
mov
call
xchg
mov
or
rcl
adc
cmp
inc
ds
les
add
mov
cmp
out
cmp
pop
inc
jne
dec
cmc
in
sbb
cmp
cmp
loope
loope
add
sbb
fild
inc
xor
pusha
and
sub
push
mov
sbb
out
inc
adc
test
sub
xchg
daa
cld
inc
pop
lea
jl
sub
arpl
inc
adc
mov
fnstsw
pop
add
fsubr
sahf
sub
fisub
mov
fdiv
sub
mov
jne
sub
pop
dec
fs
pop
fld
cmps
pop
adc
mov
loopne
enter
out
cwde
ins
xchg
push
addr16
or
jmp
cli
add
mov
mov
or
(bad)
(bad)
(bad)
or
enter
fnstcw
into
and
xchg
repnz
cmp
shr
xchg
div
inc
mov
jmp
or
(bad)
popa
xor
mov
out
adc
inc
cmps
mov
cmp
adc
inc
inc
aas
shl
movs
or
int3
mov
jmp
jns
rol
jmp
cmp
mov
push
test
mov
sbb
mov
sub
mov
push
mov
std
inc
dec
icebp
gs
test
jmp
shl
sti
call
xchg
popa
jne
mov
dec
pop
je
sbb
(bad)
jb
cmp
xchg
xor
stos
add
mov
pop
and
mov
mov
push
in
js
jmp
out
sbb
push
pop
fcmovbe
data16
jl
call
mov
mov
in
sub
pushf
jnp
and
xchg
loop
fnstenv
loop
cmps
fcom
aaa
mov
test
jl
pop
jp
(bad)
int3
aas
idiv
jno
xchg
adc
(bad)
(bad)
cmp
push
jg
add
xor
xor
cmps
xor
ror
mov
adc
adc
call
mov
int
mov
je
cmp
mov
ss
push
(bad)
lea
clc
jmp
xor
mov
lods
fs
stos
ins
fisttp
xor
movs
mov
push
add
add
xor
mov
cmps
imul
add
out
sets
(bad)
pop
mov
jp
or
(bad)
sub
lahf
call
in
push
dec
fidivr
enter
jge
cld
sbb
xchg
aaa
fild
into
push
cmp
pusha
repz
mov
(bad)
mov
stc
mov
ret
dec
push
jg
vphaddubd
mov
xor
(bad)
sub
adc
repnz
dec
popa
mov
xchg
jmp
(bad)
fist
(bad)
cmp
scas
add
add
xor
xor
mov
xor
rol
xchg
jo
cmp
mov
gs
mov
imul
mov
shr
call
das
or
add
enter
stos
and
cdq
ins
mov
icebp
mov
push
add
adc
push
std
out
sbb
in
mov
stos
push
daa
dec
lods
fbld
nop
in
sbb
stos
shl
lahf
mov
in
jge
data16
test
xor
mov
pop
mov
hlt
arpl
outs
cld
shl
ficom
lds
sti
mov
fs
js
sahf
js
push
push
lods
fstp
aaa
call
inc
test
jmp
sahf
mov
mov
cmp
jmp
shl
dec
sub
pop
push
in
sbb
int3
ret
jb
or
dec
or
pop
cmp
mov
rcr
cmp
(bad)
sbb
ins
xchg
in
popa
cdq
ret
data16
inc
jno
pop
adc
loop
dec
lods
mov
jge
inc
gs
or
je
neg
ins
call
jo
and
cmc
les
cmc
mov
cmps
popa
sub
stc
test
sti
aam
mov
jge
inc
adc
inc
icebp
cmp
es
outs
inc
aad
cmps
cmp
popf
cdq
hlt
je
lock
mov
fs
dec
adc
cli
jns
xor
xchg
and
ins
jb
xchg
les
ds
loopne
mov
adc
push
xchg
mov
bound
jne
iret
adc
push
(bad)
push
pop
sub
stos
mov
retf
ror
inc
jb
repz
int3
stc
add
(bad)
mov
sbb
addr16
psubsb
inc
inc
inc
imul
or
mov
pop
repnz
sbb
mov
pop
aam
mov
mov
jmp
in
addr16
mov
push
sub
or
pop
pmovmskb
cld
dec
(bad)
xchg
fmul
enter
or
mov
aas
add
stos
jnp
jmp
cmps
mov
add
mov
mov
lea
popf
inc
sbb
and
pop
bound
cmps
test
pop
xchg
leave
push
adc
outs
adc
mov
sub
jg
push
dec
sbb
cdq
rcl
add
in
test
add
and
push
lods
int
and
xchg
pop
popf
les
pop
movs
xor
push
pop
rcl
xchg
add
mov
or
imul
cmps
cmps
loop
leave
add
call
nop
aad
xor
and
xor
cvtdq2ps
or
mov
mov
push
and
daa
jns
add
xchg
das
sub
jg
call
(bad)
test
(bad)
ja
movs
pop
jmp
pusha
jmp
cdq
jns
ss
mov
and
mov
pop
(bad)
int
js
sti
sbb
sub
or
xor
(bad)
sahf
add
jmp
inc
mov
enter
(bad)
jl
out
mov
jb
fsubr
fcomp
mov
sti
dec
sbb
sub
aad
int
aam
add
sbb
ja
pushf
xchg
test
push
int3
retf
sbb
repz
adc
pop
rcl
pop
mov
push
dec
lahf
xlat
push
adc
jl
xor
outs
rol
dec
ret
push
xor
mov
push
pusha
fistp
iret
xor
test
push
jae
adc
xor
pop
sti
sbb
out
jge
mov
or
iret
adc
adc
cmc
cdq
push
fst
mov
mov
repnz
daa
loope
(bad)
xor
sbb
mov
pop
icebp
mov
ss
pusha
lods
outs
call
mov
dec
cmp
xor
lahf
or
xchg
xor
mov
pop
mov
mov
push
call
pop
push
js
jmp
mov
add
jge
in
jmp
pop
and
mov
mov
ret
fidiv
test
and
xor
cmc
ficom
fadd
lea
sti
bound
lahf
xor
(bad)
mov
into
and
pusha
rcl
add
ret
jl
dec
cs
pop
repz
pop
das
sub
xchg
pop
push
push
cmps
add
and
aad
add
and
adc
sar
mov
(bad)
aam
jns
les
pop
retf
shl
jo
(bad)
lods
cmp
pushf
test
push
cmc
iret
ja
(bad)
pop
out
stos
call
rcr
fisttp
cmp
mov
hlt
push
cwde
xor
dec
dec
(bad)
retf
and
xor
mov
dec
addr16
inc
ins
mov
cmps
pop
stc
jno
sar
pop
imul
xor
mov
mov
ror
scas
and
push
retf
push
xchg
mov
sbb
sti
push
mov
fsub
cmp
pop
mov
xchg
inc
mov
fnstenv
out
cmps
and
push
mov
mov
in
outs
inc
sbb
or
mov
leave
pushf
popf
pop
xor
inc
mov
sub
mov
int3
lods
pop
cld
retf
sub
sahf
xchg
mov
aas
stos
popf
mov
enter
ds
in
jecxz
mov
xchg
mov
jge
je
popf
dec
pop
or
ficomp
or
scas
push
add
and
int
pop
inc
aam
std
lods
in
adc
outs
aam
sub
sbb
add
mov
enter
out
pop
repnz
mov
inc
adc
sbb
les
pop
lods
js
xor
add
aad
fistp
inc
inc
int
add
repnz
and
jbe
ret
cmp
jmp
(bad)
or
pop
add
mov
mov
ja
mov
rol
add
repz
popf
xor
push
imul
mov
(bad)
call
add
push
into
push
outs
add
loope
movd
cmp
add
cmp
pop
imul
fild
imul
std
or
pop
jg
jecxz
not
jns
sbb
cmp
mov
movs
add
(bad)
sbb
enter
mov
test
xchg
gs
imul
sti
push
out
mov
add
cs
jns
das
jg
fucom
jo
add
mov
retf
(bad)
shl
cli
imul
jbe
ret
sti
push
mov
mov
pushf
cmp
adc
loopne
inc
mov
jnp
xchg
sub
jp
rol
pop
push
push
sti
push
push
jnp
(bad)
arpl
pop
mov
cmp
test
add
pop
mov
call
imul
nop
mov
dec
sar
out
push
sti
mov
add
sub
mov
std
xchg
add
inc
sbb
mov
into
repnz
mov
ror
data16
push
cdq
gs
aam
push
sbb
out
fiadd
xchg
pop
sub
or
(bad)
sbb
test
inc
or
jmp
fcmovbe
jg
rcr
mov
pop
pop
mov
cmp
hlt
xor
fisttp
xor
mov
adc
enter
sub
mov
push
outs
lock
(bad)
mov
(bad)
gs
and
(bad)
push
xchg
sub
adc
pop
(bad)
sbb
in
jmp
lock
jmp
(bad)
(bad)
jmp
ficomp
xchg
retf
and
rcl
mov
enter
cmp
clc
xchg
ins
and
mov
pusha
movs
mov
or
mov
xor
popf
out
xor
mov
mov
jb
jl
(bad)
sbb
jnp
sbb
rcl
aam
jo
jp
cvttps2pi
dec
xchg
adc
sbb
lock
leave
(bad)
add
mov
into
enter
mov
repz
iret
ins
mov
mov
and
xor
xchg
into
or
arpl
xchg
mov
push
popa
push
sbb
cmp
repz
daa
cli
pop
in
ins
(bad)
mov
xchg
add
lds
jne
je
es
mov
in
in
cmp
dec
int3
pushf
lds
movs
sbb
ss
mov
mov
aas
js
(bad)
rol
pop
dec
xor
loop
in
inc
out
jmp
mov
inc
sbb
aaa
xor
sub
sub
adc
mov
movs
rol
test
lock
je
repnz
cdq
push
hlt
mov
stc
inc
int3
push
or
xlat
jg
mov
stos
adc
int3
popa
push
hlt
push
and
adc
push
imul
ins
push
aaa
cwde
test
jmp
(bad)
fbstp
pop
mov
jb
push
mov
sar
imul
and
inc
mov
jmp
in
lock
sbb
std
mov
and
adc
into
out
adc
pushf
ss
pop
cs
or
scas
sar
bnd
jo
xor
retf
out
fs
daa
or
shl
sahf
pop
push
jl
dec
imul
dec
and
sar
jae
mov
mov
aas
daa
sub
or
shl
dec
mov
push
cmp
dec
lock
jnp
sbb
xchg
imul
and
pop
push
ret
push
xchg
add
or
repz
inc
gs
ins
mov
lea
clc
mov
jge
cli
mov
pop
(bad)
pop
mov
sbb
imul
loope
push
stos
jle
arpl
adc
push
pop
push
out
pusha
lahf
inc
jno
repz
jno
mov
rcl
lds
add
xchg
(bad)
(bad)
pop
jg
inc
push
xlat
mov
out
ret
das
sbb
mov
daa
mov
imul
dec
addr16
lods
push
push
sbb
inc
jmp
mov
sbb
jmp
xchg
jmp
scas
fisubr
xor
fisttp
scas
imul
adc
test
or
mov
arpl
xchg
xchg
mov
pop
inc
test
add
retf
fcmovnbe
bound
lea
pop
lahf
jmp
stos
mov
or
rcl
fnstenv
cmp
leave
dec
sti
push
cld
jno
in
cwde
imul
mov
stos
xlat
jbe
loopne
aaa
fidivr
test
push
add
jmp
fcomi
or
popa
sbb
sbb
mov
xchg
icebp
cmp
cwde
xlat
mov
jno
jecxz
pop
pop
aaa
inc
cmp
dec
add
mov
cmps
sub
mov
mov
(bad)
aad
xor
mov
xlat
jae
mov
push
push
pop
fiadd
add
mov
(bad)
aad
int
cmp
call
in
data16
xor
inc
mov
movs
sub
add
sti
out
pop
push
enter
sbb
mov
inc
js
push
inc
enter
in
test
and
dec
pop
inc
cmp
mov
xor
fst
jo
xor
push
outs
adc
inc
fwait
and
test
lods
cdq
ss
mov
lods
push
test
test
jbe
ret
(bad)
inc
add
std
mov
add
pusha
fdiv
data16
mov
push
lock
outs
jg
xchg
jb
repnz
or
and
aad
sub
xor
jns
repz
push
retf
mov
jne
movs
icebp
stc
inc
int3
into
mov
repz
or
cmp
loope
xchg
movmskps
and
fcom
out
lods
outs
push
mov
das
lods
sti
data16
jl
add
add
dec
push
enter
jmp
xchg
dec
add
inc
or
xchg
mov
lea
push
push
mov
adc
imul
push
fidivr
jg
xor
dec
jge
xor
js
cmp
push
mov
push
push
rol
loop
cmps
jmp
sub
shr
add
inc
mov
bound
xchg
mov
test
xor
mov
pop
popa
das
push
imul
popf
ja
dec
jo
push
or
and
in
and
and
xlat
je
sub
cmp
call
aam
cmp
pusha
aad
sub
pop
cmc
imul
retf
xor
adc
gs
jle
mov
pop
fisttp
ja
pop
jns
out
fmul
fsub
push
mov
xlat
mov
mov
mov
jmp
inc
push
adc
xlat
cmp
ins
xchg
retf
mov
inc
daa
out
pushf
neg
xor
pop
stos
mov
addr16
push
jae
cdq
(bad)
and
ret
ret
sub
test
and
pop
int
mov
mov
hlt
lea
mov
stos
and
retf
inc
mov
popa
mov
rol
fwait
jl
cmp
in
rol
lods
pushf
cwde
test
std
mov
ja
stos
leave
in
xlat
mov
add
fisub
xor
mov
jle
in
loope
sbb
push
xor
and
mov
push
mov
cmp
xchg
mov
xchg
cld
mov
jp
jo
pop
fwait
into
inc
das
dec
inc
out
mov
sub
in
std
inc
ja
addr16
ins
pop
movs
jecxz
adc
call
shl
mov
mov
fnstsw
and
iret
sbb
xor
sub
or
clc
push
sub
dec
push
mov
mov
aam
xor
scas
test
add
and
(bad)
pop
inc
sub
fisttp
aad
jg
loopne
sbb
stc
mov
mov
stc
int3
or
mov
sbb
out
sub
add
jno
iret
and
pop
js
rol
xchg
inc
in
and
jae
jecxz
mov
and
xchg
mov
jp
mov
call
(bad)
mov
pop
mov
cmp
push
adc
xchg
retf
sahf
or
jno
jnp
push
rcl
pop
test
aas
and
mov
popf
xchg
pop
jae
pushf
gs
jmp
or
jmp
xchg
or
mov
cli
cmp
ret
jbe
cmps
sti
sub
gs
jle
je
push
fnstenv
pop
mov
fmul
mov
xchg
bound
out
enter
scas
lock
mov
jae
xor
ror
mov
mov
movs
(bad)
xor
mov
xor
sbb
je
cmps
out
push
outs
mov
fimul
push
or
jnp
pusha
daa
es
dec
mov
xchg
mov
or
jb
dec
loope
sub
or
xlat
fiadd
iret
dec
(bad)
imul
leave
enter
movs
push
jecxz
sbb
push
sub
mov
jns
jne
test
sbb
leave
call
aam
mov
cli
and
pop
in
out
add
push
hlt
cmps
sbb
mov
ret
cmp
jmp
lock
xchg
fadd
adc
push
mov
popa
lods
jmp
add
mov
pop
jno
fbld
push
mov
mov
pop
pop
push
pop
add
call
inc
inc
sbb
xchg
fmulp
dec
(bad)
int
out
mov
push
mov
std
mov
xchg
xchg
xor
or
mov
pop
loope
or
cmp
sub
adc
jae
icebp
into
(bad)
clc
push
ror
pop
push
xchg
and
xor
xchg
push
add
lahf
fwait
mov
pop
arpl
add
and
cmp
inc
inc
int
cmps
aaa
pusha
xor
or
push
adc
dec
adc
repnz
ror
pop
adc
ja
test
or
(bad)
div
idiv
pop
lahf
rol
mov
cmc
or
clc
fwait
jmp
aas
movs
pop
bound
mov
push
sbb
aad
inc
sub
mov
xor
int3
daa
clc
fwait
aaa
inc
cmp
bnd
loop
inc
pop
popa
mov
cli
(bad)
sbb
imul
fisubr
sahf
fnstenv
test
sbb
jmp
push
call
inc
(bad)
ds
(bad)
xor
dec
mov
push
sbb
jl
cwde
test
push
pop
or
xor
jno
mov
and
unpckhps
and
or
movs
movs
push
dec
pop
push
adc
add
sar
add
call
lea
lahf
sub
call
mov
and
dec
arpl
inc
out
xor
xlat
iret
clc
mov
push
cmp
jns
sub
dec
or
rcl
dec
sbb
inc
sub
int
inc
inc
jns
cmps
mov
cmps
mov
mov
(bad)
leave
mov
movs
fst
push
rcr
test
xchg
dec
loope
and
dec
aam
cld
loope
jg
mov
mov
imul
lds
aaa
mov
movs
popf
xor
sahf
nop
fidiv
jmp
or
xlat
or
addr16
je
jmp
inc
imul
sub
popa
in
cli
lods
push
jmp
xchg
aam
jbe
cmp
mov
mov
retf
data16
rcl
jle
pop
rol
cld
retf
push
mov
icebp
jae
jne
mov
imul
inc
sbb
xor
fadd
shr
sub
test
add
int3
out
xchg
push
fldenv
loop
pop
adc
push
(bad)
and
mov
xor
in
pop
cmc
adc
pushf
ja
add
fs
mov
repz
inc
push
aam
lods
in
sbb
cmps
pop
fist
pop
xor
dec
mov
or
pop
pop
nop
mov
cmps
out
mov
call
jl
adc
ja
fwait
(bad)
call
stc
(bad)
jle
jge
xlat
and
jne
adc
add
xchg
aad
test
scas
pop
(bad)
(bad)
push
ins
ins
stc
xor
mov
dec
dec
pop
in
and
sbb
inc
mov
lods
inc
cs
(bad)
sub
inc
rcr
mov
adc
ret
ins
ins
xor
mov
push
(bad)
loope
dec
in
adc
xchg
jecxz
leave
popf
jns
dec
mov
sbb
mov
cdq
inc
packssdw
dec
mov
dec
and
lods
loope
pcmpgtb
cmp
aaa
push
cdq
jnp
xor
loopne
int3
adc
cwde
jne
and
dec
push
std
cmp
retf
mov
or
xchg
dec
ror
(bad)
pop
outs
ss
int3
xchg
out
adc
imul
and
pop
pop
loope
cmc
imul
hlt
or
retf
mov
and
aad
in
mov
retf
xor
push
pushf
mov
cmp
sub
mov
nop
or
push
and
add
or
(bad)
imul
(bad)
mov
aas
out
adc
stos
in
pop
or
mov
popf
mov
and
lods
test
out
ins
inc
imul
cld
pop
mov
dec
mov
ss
test
adc
cmps
mov
loop
cmp
into
jmp
pop
sbb
sbb
mov
pop
sub
mov
in
lds
inc
jns
pop
inc
xor
test
psraw
xchg
cmp
sti
pop
or
daa
fcomp
mov
or
fiadd
push
bound
xchg
inc
outs
mov
jmp
inc
pop
mov
ins
cmp
jge
mov
cmp
fisttp
add
inc
(bad)
fisttp
loop
adc
cmc
xchg
jae
pop
push
repz
adc
push
prefetch
or
sar
stc
pusha
fcom
fldenv
out
jg
mov
sbb
xor
lods
fistp
out
mov
adc
inc
jns
sub
cmps
dec
in
jo
mov
jno
repnz
pop
inc
xlat
ins
jnp
int
cmps
jmp
loope
movs
xlat
jecxz
icebp
int3
jb
sbb
push
xor
stc
icebp
mov
mov
fs
ret
mov
adc
mul
(bad)
or
xor
or
adc
fcmovnbe
cmp
test
hlt
adc
or
mov
push
cmp
ds
ja
cmp
stos
int
idiv
cdq
loop
sub
jb
pop
ficom
sbb
pop
hlt
movaps
fcmovnbe
dec
dec
push
xchg
cdq
mov
mov
in
or
inc
and
sbb
test
pop
mov
std
lock
pop
sbb
xchg
retf
push
or
jp
movs
call
mov
imul
mov
jo
retf
leave
std
xchg
gs
pop
inc
arpl
add
dec
push
xor
jge
pop
inc
sub
cs
dec
sbb
in
lods
aaa
bound
loopne
adc
mov
push
fistp
or
dec
pop
daa
inc
retf
mov
sub
fwait
enter
fwait
cmp
call
or
jb
mov
add
ret
lds
icebp
in
inc
aas
iret
xlat
es
sbb
push
in
jle
xor
rol
sbb
aaa
test
jecxz
pushf
ds
mov
inc
out
jbe
cmp
ret
icebp
pop
xchg
lds
inc
test
cmp
jg
(bad)
cs
pop
les
data16
cmp
retf
mov
retf
daa
jnp
jns
imul
add
push
mov
cmp
stc
cmp
and
xor
ret
inc
cmp
and
(bad)
faddp
or
(bad)
cmp
dec
or
dec
xor
mov
jo
les
out
jp
inc
push
adc
xor
inc
sti
out
and
fistp
imul
popf
std
xchg
dec
add
adc
in
popf
lods
adc
cmp
mov
xor
loopne
mov
fwait
jo
sbb
out
retf
add
rcr
ins
das
lods
aam
mov
shl
cmp
mov
xchg
(bad)
std
mov
jl
mov
and
inc
int
and
mov
lods
adc
sbb
xchg
dec
adc
lock
push
xchg
call
jno
pop
clc
mov
idiv
pushf
push
fbld
popa
mov
xor
inc
jp
mov
daa
int
mov
xor
bnd
push
fs
loope
xor
jmp
lea
hlt
pop
jne
cmps
cdq
mov
out
add
cmps
xor
mov
call
loope
addr16
aam
push
ficom
mov
jae
push
jmp
fdiv
adc
sbb
lock
call
pop
adc
mov
mov
cmps
out
sti
popf
lock
mov
popa
aam
scas
push
imul
and
or
loopne
mov
retf
jb
sbb
cmp
sbb
dec
jbe
ins
xchg
out
in
and
sub
(bad)
cmps
vfnmsub132ss
movs
outs
xchg
in
jbe
inc
iret
pusha
and
or
cmp
and
jns
and
loope
sbb
push
ds
cmps
ins
jne
cmp
pushf
jae
or
jge
das
mov
ja
movs
mov
mov
jecxz
stos
pushf
adc
bound
mov
mov
inc
in
movs
aaa
sub
out
push
push
cmps
fsub
push
in
loopne
adc
mov
mov
loopne
jg
inc
xor
push
mov
cwde
sbb
xor
mov
jl
and
fstp
push
lods
les
fnstcw
aam
jne
nop
cmp
retf
shl
enter
into
fsubr
inc
test
test
mov
pushf
jmp
mov
in
cdq
sub
sbb
js
xchg
xor
jbe
call
cs
pop
xchg
sub
(bad)
mov
jl
push
jbe
test
xlat
rol
call
adc
jbe
and
add
mov
xor
sub
xchg
aam
dec
fisttp
rcl
pushf
pop
sbb
fcom
int
xor
adc
hlt
push
xor
pop
sbb
ror
je
(bad)
in
call
(bad)
out
(bad)
sub
inc
add
pop
adc
scas
nop
dec
sbb
sbb
loop
jns
int3
add
out
jae
loopne
jecxz
daa
into
and
ins
in
in
stc
out
dec
sbb
aaa
jle
dec
in
popf
cmc
dec
lahf
fs
add
cmp
stos
cmc
daa
arpl
sub
push
dec
fcomp
aam
pushf
stc
pusha
sub
sti
imul
fs
ror
test
(bad)
adc
lock
loope
or
sbb
push
cmp
mov
popa
cs
hlt
jecxz
push
add
cs
repnz
cmps
inc
mov
loopne
sub
pop
sub
jno
bound
fcomp
fist
add
bswap
mov
jb
xlat
rcr
push
int
or
jl
push
cmps
fst
stos
ds
adc
lds
mov
popf
enter
jb
vpmulhw
cdq
mov
push
cmp
shr
push
jmp
(bad)
int
loopne
inc
pop
loop
ret
mov
call
(bad)
stc
call
fmulp
fwait
popa
jg
out
xor
mul
stos
jne
daa
daa
lods
xor
mov
lahf
in
pop
xchg
mov
(bad)
mov
lock
jno
icebp
pop
xchg
neg
sub
out
(bad)
jecxz
jp
jnp
jmp
pushf
out
pop
add
mov
pop
fwait
dec
enter
pop
xchg
mov
call
cli
test
jo
sbb
test
loop
and
clc
lods
sub
mov
push
cmps
sub
mov
out
jbe
inc
mov
fistp
lods
clc
int
popf
test
nop
adc
popf
shl
push
ficomp
loope
mov
test
lock
push
add
(bad)
jp
stos
loopne
adc
loop
mov
adc
adc
cmp
cli
ror
adc
sub
(bad)
aaa
(bad)
shl
(bad)
xchg
es
ins
arpl
sar
enter
inc
adc
dec
pop
rcl
mov
add
sti
push
mov
sbb
and
popf
dec
lock
bound
das
push
pop
inc
arpl
lods
(bad)
xlat
jae
pop
dec
aas
jnp
shr
pop
pop
loope
fimul
mov
xchg
add
aaa
add
or
shr
adc
stos
cmp
xor
add
cwde
sahf
sbb
inc
mov
fsub
nop
sbb
leave
call
cmp
out
shl
xor
cmp
into
movs
xor
add
gs
daa
repz
int3
dec
mov
cdq
(bad)
sti
sbb
adc
fyl2x
loopne
not
jecxz
adc
xor
ss
(bad)
mov
lahf
cmp
cdq
or
or
pop
bound
test
pop
xor
push
dec
call
xor
out
in
or
ins
dec
popf
inc
push
adc
dec
leave
or
stos
es
call
xchg
mov
shl
sbb
inc
pop
xchg
sar
mov
retf
push
mov
sub
int3
or
push
arpl
dec
pop
lods
and
cmp
rcl
dec
sub
dec
push
xchg
dec
nop
xor
je
(bad)
cdq
mov
push
cmp
sbb
call
les
xlat
iret
ja
nop
jmp
fwait
cmc
push
xor
adc
popf
mov
cwde
(bad)
mov
movs
sbb
fsub
mov
mov
(bad)
add
jnp
lock
pop
test
sbb
mov
(bad)
psubb
loopne
aaa
mov
sub
and
dec
cmp
(bad)
cmc
loopne
pop
dec
repz
mov
arpl
dec
push
lods
icebp
test
pop
or
and
stos
mov
push
pop
push
iret
ret
into
shl
movs
stos
movs
loop
jnp
or
stos
inc
mov
pop
push
dec
pop
or
or
inc
lods
in
push
inc
ret
jecxz
adc
in
mov
or
adc
(bad)
sbb
jecxz
mov
dec
(bad)
mov
jb
mov
sbb
loop
std
xor
call
jne
popf
rcr
std
popa
mov
ret
push
xlat
icebp
ja
sar
push
add
shld
fadd
rol
addr16
xor
jns
je
lahf
jnp
in
out
gs
mov
jle
add
cmps
push
push
jp
ficom
dec
mov
jmp
faddp
dec
cmc
fdivr
mov
jns
repnz
je
cmp
out
pop
pop
rol
retf
xor
mov
icebp
rol
mov
(bad)
dec
and
lahf
ror
cmc
out
fimul
lock
jmp
idiv
sub
out
movs
push
pop
xor
xchg
int
outs
mov
test
(bad)
call
icebp
les
iret
mov
rcr
repz
or
jno
pop
(bad)
aam
xor
mov
enter
sub
dec
popf
adc
xor
movs
jl
push
call
or
sbb
nop
dec
not
push
sbb
int
inc
(bad)
push
loope
fwait
jge
stos
clc
ret
dec
inc
or
ficomp
out
jo
jmp
loope
outs
mov
mov
cmp
and
ror
pop
outs
or
xor
cdq
outs
fisubr
xchg
xchg
xlat
adc
out
xchg
mov
retf
push
loop
push
mov
mov
mov
hlt
sub
mov
sbb
jp
test
mov
pop
fcomi
pop
gs
std
pop
dec
add
inc
faddp
(bad)
add
or
mov
dec
push
sub
pop
fs
xor
pusha
test
cmp
int3
sbb
clc
mov
pop
jbe
and
cmp
jns
(bad)
inc
xor
sbb
call
add
mov
mov
call
pop
push
lds
dec
dec
into
cmp
jbe
mov
(bad)
xor
push
or
lods
mov
push
fidivr
adc
push
lods
cli
rcl
xor
rcl
mov
cmc
sub
loope
mov
and
mov
mov
icebp
outs
cmp
push
dec
mov
pop
xchg
das
mov
nop
add
add
and
in
pop
xor
mov
add
jb
inc
cmps
icebp
xor
adc
fadd
call
shl
mov
push
scas
in
jns
daa
neg
push
test
xchg
cmp
fwait
ret
or
jno
push
call
fwait
xchg
jle
in
mov
adc
cld
adc
gs
cmps
mov
push
xor
ins
scas
leave
ret
inc
rol
xchg
sbb
push
aaa
push
and
repz
loop
ret
jg
mov
add
or
sub
mov
addr16
mov
sbb
mov
int3
mov
adc
xchg
adc
jl
in
dec
xchg
dec
(bad)
das
stos
lock
loop
mov
movups
cmp
push
pop
(bad)
fcom
adc
das
xchg
or
stos
lds
cmc
add
or
movs
adc
pop
jns
cmp
stos
xor
std
jmp
sub
gs
das
xor
cwde
repz
and
mov
dec
dec
jo
test
add
jmp
push
inc
cld
(bad)
and
pop
xchg
and
jmp
adc
int
int
mov
retf
jnp
call
cwde
inc
adc
mov
(bad)
les
pop
inc
xchg
in
int3
xchg
movs
sub
lea
rcl
xor
shr
xchg
cmp
(bad)
mov
push
push
ret
rol
jle
jb
push
aad
add
xlat
adc
rcl
push
jge
adc
xor
fisub
push
lock
jae
cld
jns
dec
mov
xchg
xchg
sub
cli
pop
ficom
into
adc
cwde
call
pop
xchg
je
xchg
or
imul
call
mov
cmp
jmp
mov
and
shl
push
and
and
pushf
and
shl
mov
inc
addr16
rol
jg
and
cld
add
push
dec
push
rcr
fcomp
xor
mov
stc
dec
and
jae
stc
mov
inc
imul
sbb
pop
outs
push
add
out
push
push
loopne
fld
sti
sub
ins
sub
jo
and
inc
in
(bad)
arpl
into
dec
jo
aad
pop
adc
loop
xchg
mov
add
pop
inc
fst
adc
es
inc
or
jmp
push
sbb
mov
hlt
cld
out
jne
jo
jle
add
popf
sar
stos
data16
das
xor
cmp
xor
xlat
mul
sub
ror
(bad)
fwait
scas
mov
push
dec
(bad)
mov
ffree
bsr
sti
push
jns
imul
xchg
and
cmc
dec
stos
pop
fs
mov
mov
jnp
sbb
int3
dec
lods
mov
enter
fld
mov
(bad)
mov
retf
jno
ficom
push
sti
mov
iret
adc
sbb
cmp
loopne
cli
xchg
cli
not
or
inc
mov
jmp
mov
enter
les
int
ret
loope
inc
jo
inc
pop
fadd
adc
adc
mov
cld
ror
and
std
add
or
cmp
cld
dec
pop
test
mov
dec
fwait
and
fs
popa
inc
or
inc
adc
dec
mov
rcl
popf
jmp
or
clc
xor
jne
xor
ret
jp
leave
mov
mov
call
shl
out
mov
or
xor
or
dec
inc
stos
lods
out
jnp
push
sub
test
test
fist
scas
fstp
shl
das
popf
sub
fs
es
fisttp
lock
push
prefetch
hlt
and
in
mov
pusha
dec
or
popa
inc
sub
or
add
push
or
xchg
arpl
inc
stos
or
fwait
push
outs
jp
mov
and
(bad)
popf
mov
loop
in
lds
fidivr
lahf
cmp
(bad)
(bad)
mov
ret
data16
in
jl
xor
jp
icebp
fisub
dec
lods
jl
jb
std
inc
div
int
imul
pop
rol
xchg
push
js
or
call
or
inc
cmp
mov
sbb
shl
hlt
imul
idiv
dec
fbld
retf
rcl
push
mov
pop
aaa
ss
dec
push
rcr
mov
arpl
dec
pop
fwait
popa
data16
and
sar
push
adc
mov
test
lods
ror
es
call
mov
outs
inc
mov
or
arpl
xor
ins
(bad)
int3
hlt
cmps
jb
add
push
outs
inc
je
sub
jl
dec
mov
pop
sbb
add
pop
jle
xchg
fmul
addr16
adc
mov
or
test
test
out
rol
push
(bad)
pop
pop
cmp
inc
lds
xchg
mov
arpl
rcl
in
push
movs
dec
bnd
adc
dec
cmp
and
int
jl
mov
xor
int3
scas
in
outs
push
retf
mov
out
cdq
icebp
mov
ficom
gs
mov
push
sbb
fs
lea
fwait
in
xor
mov
xchg
shl
cmps
out
in
retf
nop
mov
and
dec
cmp
stos
mov
stos
add
movs
mov
push
pop
rcl
mov
dec
cmp
xchg
repnz
sub
idiv
adc
and
call
(bad)
pop
lock
aaa
mov
rcl
or
pop
jmp
loopne
ja
add
out
sub
cli
aas
xchg
add
push
iret
or
inc
cmp
mov
ret
mov
or
dec
lea
pop
xor
out
lock
dec
not
out
xor
loop
aam
jo
cdq
inc
xchg
or
cli
enter
xor
cld
mov
inc
cmp
daa
adc
xchg
gs
jl
dec
sahf
imul
loope
int3
mov
pop
sbb
rcl
sbb
movs
fsubr
scas
(bad)
cmps
jae
stc
fild
xchg
pop
cmp
xchg
dec
jae
pop
jge
push
aaa
adc
mov
push
jns
mov
jge
outs
inc
lock
repnz
mov
shr
jle
sbb
aam
ss
ficomp
dec
add
fiadd
mov
pop
(bad)
adc
push
repz
call
bnd
jle
cmps
(bad)
inc
or
mov
xchg
pop
(bad)
or
push
or
mov
mov
jb
mov
cwde
fs
sahf
sub
in
xor
pop
xor
mov
push
retf
pushf
pop
stc
call
xchg
pop
ror
imul
mov
mov
imul
fdivr
sar
(bad)
aam
inc
inc
inc
mov
stc
shl
rol
fimul
mov
rcr
out
add
jl
jmp
mov
ins
(bad)
and
dec
jmp
cmc
test
call
stc
push
mov
inc
adc
js
rcr
jg
cmp
ja
or
xor
(bad)
fiadd
pop
inc
xor
sub
stos
inc
xor
cmp
fidivr
pushf
xchg
push
mov
retf
mov
inc
mov
ds
sti
sbb
xlat
sahf
div
(bad)
scas
vpmullw
sbb
outs
push
movs
sbb
pop
out
add
mov
pop
sub
shl
aaa
stc
imul
loope
inc
fidiv
pop
dec
push
jns
hlt
(bad)
xchg
scas
xchg
stos
ss
dec
adc
push
cwde
rol
imul
xor
cwde
ins
enter
outs
cld
sbb
(bad)
stc
retf
(bad)
ret
mov
stc
dec
cmp
adc
mov
push
cs
shr
jno
popf
hlt
out
inc
retf
dec
push
shl
cmps
sar
xlat
inc
or
jb
rcl
mov
fiadd
stos
pop
and
mov
xchg
loope
notrack
test
cmp
add
xchg
cs
jnp
adc
popa
dec
lmsw
jno
ins
cli
std
loopne
or
dec
test
or
ret
lods
xchg
pop
js
aas
xchg
mov
(bad)
(bad)
(bad)
in
out
jg
push
sbb
daa
jmp
cmp
out
mov
gs
out
out
cld
jmp
mov
jmp
shl
imul
loope
xlat
ja
sbb
not
popf
cmp
xor
(bad)
leave
adc
(bad)
outs
aam
loop
icebp
jno
push
pop
cmp
cmp
cmp
add
icebp
dec
sbb
inc
cmc
sub
shl
jo
dec
mov
sbb
adc
mov
dec
inc
fmul
icebp
mov
mov
inc
aaa
std
ret
push
leave
cmp
add
sub
in
cmp
add
pusha
test
inc
call
or
inc
fisubr
and
ret
sar
shl
or
sbb
or
mov
cmp
inc
sar
pop
retf
pop
xchg
push
mov
xchg
arpl
clc
pop
mov
add
mov
mov
mov
(bad)
in
outs
aaa
and
and
cmc
dec
mov
dec
pop
xlat
xor
out
push
popf
jmp
in
js
or
sbb
mov
jnp
aam
and
lock
aad
sub
mov
in
shr
in
push
lahf
adc
jne
ret
cmp
stc
sbb
lock
(bad)
icebp
and
dec
sub
jbe
ds
addr16
(bad)
xlat
and
pop
jne
jg
mov
xor
pop
lds
div
retf
jne
mov
jecxz
movs
inc
xor
sub
sub
xor
enter
xchg
push
cmp
fimul
out
test
cdq
jle
and
shr
xor
inc
cmp
cmp
bt
mov
jle
sbb
stos
cmp
dec
mov
repnz
mov
clc
rcl
pop
mov
cmp
xchg
pop
jge
in
mov
mov
shr
pusha
(bad)
sbb
shr
js
fsub
jg
push
sbb
cmps
jae
movs
jmp
out
push
mov
push
sbb
xlat
jmp
fcom
push
mov
int
inc
ror
dec
shr
mov
call
push
cdq
sub
shl
es
out
sbb
call
int3
test
pop
sbb
inc
or
sub
nop
jle
test
movs
mov
int3
cmp
pop
aas
stos
adc
dec
mov
out
cdq
jns
and
mov
fwait
xchg
dec
pop
mov
and
hlt
sbb
leave
icebp
ret
lock
je
cmp
mov
fisttp
call
dec
jno
mov
xchg
push
mov
cld
pop
imul
pusha
xor
mov
mov
sub
std
xchg
xor
sbb
cdq
inc
mov
sti
add
inc
push
xor
mov
ins
xor
inc
add
sub
push
jns
push
dec
fild
xchg
ret
addr16
push
dec
sbb
mov
hlt
pop
mov
adc
js
sub
lea
xchg
sbb
mov
jb
add
mov
pop
sub
mov
ret
idiv
dec
mov
jle
jmp
outs
and
sbb
icebp
test
add
in
push
push
sahf
rol
sub
cmps
cli
int3
sub
fisttp
dec
(bad)
fistp
mov
xor
xchg
fwait
ret
mov
mov
stos
cmp
sbb
outs
mov
jp
pop
lods
or
fisub
into
lea
xchg
add
dec
inc
loopne
loopne
sbb
in
enter
into
jmp
sar
mov
inc
inc
xor
test
mov
(bad)
and
pushf
cs
lahf
in
push
mov
xchg
mov
(bad)
jg
cmps
adc
pop
mov
dec
add
sub
sub
sub
ds
pop
frstor
sbb
adc
inc
mov
cdq
stos
arpl
ror
add
pop
jg
lea
push
add
js
pop
outs
push
fisubr
mov
jae
xor
nop
mov
pusha
push
inc
ret
xor
xor
jne
inc
sbb
leave
pop
cdq
stc
mov
lods
ret
fst
mov
dec
xchg
fisubr
mov
pop
ds
add
jae
mov
mov
fild
fidivr
mov
test
pop
jmp
adc
mov
jecxz
nop
nop
ss
pop
push
repnz
or
or
addr16
cmp
add
rcr
pop
adc
ja
push
mov
cwde
(bad)
scas
sbb
pop
inc
cmp
leave
jge
cmp
xchg
rcl
mov
xchg
sbb
rol
xor
sbb
sbb
sub
or
jge
retf
adc
cmp
movs
jne
outs
enter
xchg
mov
mov
xchg
mov
hlt
cwde
pop
adc
xor
inc
add
mov
push
push
jge
inc
ins
push
jecxz
cmp
xor
sub
inc
add
shr
punpckhdq
sbb
jnp
out
xchg
test
dec
aas
dec
xor
adc
(bad)
fisttp
mov
inc
sub
das
sub
pop
arpl
mov
(bad)
jmp
push
jmp
pusha
arpl
or
adc
fwait
pop
dec
and
xchg
lea
cmp
stos
jmp
jmp
xor
rcr
int3
jo
int3
shl
xor
clc
adc
popf
mov
lods
mov
neg
fst
push
mov
cmp
cmp
movs
mov
mov
xor
inc
push
pop
push
fisttp
addr16
push
out
dec
and
sbb
sti
ss
jmp
cdq
cwde
and
repnz
bound
mov
inc
sbb
ins
xchg
imul
inc
stc
shl
data16
mov
clc
outs
(bad)
jmp
adc
pop
mov
out
jnp
(bad)
imul
pop
int
test
push
mov
test
dec
push
arpl
adc
pushf
push
call
or
rcr
jp
imul
push
ds
inc
mov
mov
ret
lods
adc
stos
outs
push
pop
fistp
xor
mov
jmp
das
xchg
xor
sub
ins
or
iret
push
cs
cmp
aas
ja
mov
push
addr16
movs
add
gs
cdq
inc
lods
sbb
or
mov
xchg
shl
dec
outs
jp
test
push
sbb
lahf
push
test
jbe
pop
fs
imul
stos
push
push
popa
enter
enter
icebp
popa
push
in
or
es
pop
mov
dec
mov
add
loopne
mov
jecxz
inc
lds
addr16
jb
adc
pushf
out
jp
pop
push
dec
popf
or
and
icebp
cmp
rcl
cmp
fimul
sbb
aad
stos
xor
movs
fld
shr
loope
out
and
and
into
push
mov
outs
jecxz
adc
(bad)
scas
adc
call
xchg
into
rol
leave
dec
mov
aaa
dec
and
push
fist
mov
ror
js
bswap
or
push
push
xchg
lods
addr16
int3
nop
sub
repz
into
mov
in
and
ds
mov
pop
stos
xor
stos
fwait
loop
out
pop
je
pop
cmps
fild
pop
sti
xor
mov
cmps
cmp
into
(bad)
mov
retf
push
ret
mov
lods
movs
int
or
daa
or
inc
jno
aad
test
pop
jbe
sti
jge
jmp
sub
xor
outs
or
and
data16
lods
mov
cld
xor
mov
mov
out
scas
xchg
sub
adc
xor
movs
mov
pop
jecxz
movs
dec
cs
imul
out
pop
sbb
in
dec
xchg
inc
and
cmps
cbw
adc
stc
lahf
mov
lea
cs
cmp
push
push
imul
mov
call
icebp
hlt
fidivr
or
jecxz
sub
popa
aam
adc
add
add
jns
push
inc
or
dec
xor
pop
inc
in
shl
(bad)
repnz
mov
xchg
test
sahf
mov
mov
iret
jmp
adc
mov
inc
rol
push
add
cmp
data16
cmp
dec
mov
scas
jl
cmp
ror
sub
lock
mov
aam
scas
inc
inc
sar
std
je
or
dec
daa
push
ds
mov
popf
bound
ret
cli
mov
mov
mov
xor
data16
outs
test
dec
or
inc
sub
mov
cmp
and
dec
mov
add
jne
push
xchg
cmp
sbb
cld
dec
stc
out
sub
push
sbb
in
pop
push
push
pop
jg
mov
cmp
nop
mov
jo
cmp
cwde
mov
sub
push
lods
push
(bad)
mov
mov
mov
xchg
clc
andnps
mov
cli
ja
xchg
fwait
inc
or
(bad)
jge
adc
(bad)
jae
dec
pusha
xchg
inc
movs
jnp
cmp
inc
stos
mov
out
and
xor
push
ins
fwait
bound
adc
cwde
ds
mov
fld
pop
jae
enter
jne
cmp
jae
in
ret
imul
jmp
lock
loop
pop
cli
arpl
dec
ss
cmp
mov
sti
ss
inc
dec
jecxz
mov
mov
push
in
xor
pop
inc
or
push
xor
mov
adc
sbb
sub
ds
(bad)
xchg
rcr
pusha
cmp
ins
mov
js
iret
inc
loop
push
hlt
mov
jb
pop
sbb
mul
repnz
popf
arpl
call
(bad)
jnp
mov
out
mov
and
stos
push
out
or
or
pop
adc
sbb
ds
mov
xchg
icebp
cmp
dec
inc
es
jl
(bad)
jg
mov
dec
add
out
push
mov
jmp
dec
loop
mov
sub
mov
inc
inc
push
out
in
push
shl
xor
sub
daa
jne
mov
mov
in
aas
pop
cmp
scas
jge
std
and
and
push
cld
lea
imul
add
push
pusha
outs
inc
adc
pushf
xor
mov
in
imul
int
cld
loopne
push
cmp
jno
(bad)
cwde
rcr
xor
cmc
popf
daa
push
out
adc
mov
sub
jo
adc
cwde
jb
aas
adc
and
mov
mov
jg
xor
sbb
mov
fwait
inc
out
jbe
sbb
dec
xchg
cmp
mov
sar
inc
popf
call
mov
into
sti
test
movs
shr
fwait
inc
mov
xchg
add
call
retf
mov
shl
xchg
xchg
cdq
pusha
fucomi
pushf
mov
pop
inc
sub
es
jmp
je
or
jg
test
sbb
pop
mov
mov
ret
pop
mov
inc
cmp
shl
test
iret
sbb
jge
cmp
mov
inc
ret
adc
push
mov
sbb
pop
scas
cmps
lods
lods
mov
xor
repnz
xchg
ins
push
cli
aad
cmps
sub
xchg
xor
xor
fcomp
imul
dec
repnz
xchg
mov
pop
outs
fadd
test
adc
(bad)
(bad)
in
mov
test
push
sbb
mov
pop
popa
jmp
aas
cmps
fisubr
push
and
push
fcom
jp
xchg
and
ret
or
sub
mov
dec
xchg
aas
pushf
inc
ds
wrmsr
(bad)
ror
leave
mov
ds
lea
adc
ds
inc
test
or
adc
(bad)
test
mov
fisttp
js
ja
leave
call
inc
push
sub
nop
pop
dec
movs
mov
jg
xor
clc
stc
(bad)
in
or
fimul
inc
fisub
fwait
pop
fiadd
fisub
mov
inc
imul
sub
repz
mov
xor
jns
pusha
cli
vmwrite
mov
shr
rcr
call
shr
dec
aam
mov
ins
jns
iret
push
or
test
neg
push
or
add
dec
test
scas
jbe
xor
aaa
cmp
adc
fcomp
in
xchg
lahf
sub
and
mov
add
adc
pop
jmp
stos
(bad)
mov
call
sbb
cmp
loop
jno
sub
(bad)
dec
fcmovbe
ficomp
pop
xor
and
cmp
cmp
loopne
and
in
inc
dec
je
mov
icebp
sti
adc
sub
xchg
hlt
dec
fistp
jg
sub
int3
enter
sahf
leave
jp
addr16
dec
mov
cmc
jo
cmp
inc
adc
in
mov
int
inc
(bad)
mov
std
inc
cmps
dec
movs
lea
loope
rcr
adc
(bad)
out
scas
int
push
cmc
adc
stos
fwait
push
sbb
pop
xchg
inc
in
les
add
popa
mov
repz
mov
aas
stos
push
mov
mov
out
pop
loop
fistp
mov
popa
std
sbb
mov
data16
xchg
add
rol
xchg
push
sub
fdiv
add
jnp
loop
jmp
jecxz
xor
loop
jnp
test
xor
push
pop
xor
jl
pop
mov
jo
cmc
and
xchg
pop
fstp
imul
ins
leave
pop
ss
bnd
pusha
and
push
movs
test
outs
push
jnp
inc
out
jns
inc
xchg
je
fnstsw
pop
jae
daa
fadd
and
aas
js
jp
bound
and
mov
or
mov
sub
loopne
pop
xchg
jne
loop
push
sub
dec
push
ja
mov
leave
movs
or
dec
cmp
xchg
mov
repz
(bad)
adc
add
scas
repnz
daa
mov
add
add
ins
(bad)
mov
int3
pop
shl
cmp
sub
push
das
sbb
add
data16
stc
push
xor
mov
sub
pop
call
in
outs
sbb
stos
ds
jbe
cmp
stos
scas
cli
into
inc
inc
ins
pop
cmp
adc
push
mov
out
xchg
stos
retf
pop
fst
aaa
mov
std
(bad)
shl
push
adc
icebp
ds
mov
and
jbe
pushf
cs
dec
sub
mov
fistp
ror
gs
xlat
aad
cli
sub
out
jae
pop
cmp
lock
cmps
dec
enter
movs
sub
div
mov
mov
fsubr
std
retf
dec
dec
mov
test
int
push
cs
push
push
push
ds
mov
sbb
repz
das
add
xor
push
jp
pop
mov
inc
jae
jge
mov
outs
dec
push
pusha
mov
inc
xor
leave
test
aad
mov
inc
and
scas
and
cmp
inc
loope
cmps
fwait
popa
jg
mov
pop
lods
and
or
loope
data16
jae
jge
dec
push
dec
addr16
mov
int3
mov
addr16
or
gs
mov
pop
push
retf
mov
xchg
scas
inc
sub
mov
rcl
cmp
outs
inc
(bad)
xor
mov
or
xlat
adc
loop
mov
xor
(bad)
frstor
nop
bound
inc
jae
jecxz
lds
test
sub
dec
mov
push
add
push
cmp
icebp
das
lods
jl
pop
add
das
push
xor
cmps
add
movs
inc
cmp
sti
cmps
arpl
pop
stc
fucomip
lock
sub
sub
mov
loope
lods
into
push
inc
add
out
xchg
out
rol
mov
out
or
push
call
mov
cmp
pop
rcr
cmp
neg
add
imul
or
fs
addr16
or
retf
and
dec
or
ins
lds
shl
call
jmp
mov
push
and
add
mov
int3
jnp
xor
mov
(bad)
fidivr
xchg
lds
push
push
pop
add
xchg
out
cmps
ins
xchg
int
repz
ret
call
es
add
imul
mov
inc
pop
loop
xor
cmps
idiv
adc
xor
dec
cmp
mov
loopne
scas
rcl
sub
stc
add
sahf
not
push
sbb
mov
mov
xchg
mul
mov
dec
sbb
cmc
jmp
clc
mov
mov
add
mov
and
outs
(bad)
call
pusha
cmp
in
and
stos
daa
fld
mov
jb
sbb
stc
int3
(bad)
sbb
les
out
movs
mov
cmp
in
neg
push
test
bound
xchg
jge
ins
fimul
inc
icebp
jecxz
loop
xchg
jo
push
sbb
jnp
pop
push
cld
lods
inc
inc
scas
mov
gs
fidivr
inc
pop
add
mov
sti
ins
movs
stc
push
cmps
(bad)
cwde
retf
sahf
movs
jo
sbb
jge
lds
gs
jno
int3
loop
fcomp
stos
xchg
sbb
dec
xor
inc
(bad)
sub
xchg
mov
jne
cwde
scas
xchg
cmp
sub
js
lods
sbb
mov
sub
mov
ret
push
call
not
scas
dec
push
(bad)
loope
js
inc
mov
pop
fld
in
cmp
mov
fidiv
push
outs
pop
daa
pop
fstp
hlt
sahf
mov
fst
mov
fadd
or
add
jbe
dec
je
jno
daa
push
xchg
loop
arpl
sbb
push
rcl
mov
add
cmp
in
inc
jne
pop
and
(bad)
retf
or
setno
jecxz
ins
mov
not
pop
adc
jno
cmps
push
popa
pop
dec
jg
test
adc
rcl
popf
dec
popa
dec
dec
add
repnz
sbb
and
scas
movs
div
mov
mov
and
sub
ja
or
xchg
hlt
mov
fisub
dec
les
pushf
pop
or
or
retf
popa
dec
or
inc
sahf
dec
pop
inc
cdq
and
jne
dec
adc
div
cs
add
jbe
mov
retf
ja
sbb
push
mov
ror
sahf
xchg
push
fs
nop
repz
adc
sbb
and
mov
mov
xor
fwait
and
jge
loopne
cmp
pop
jmp
inc
sbb
pop
loope
xor
push
aad
test
add
jecxz
repnz
retf
inc
sub
ds
shl
inc
aad
(bad)
stos
fimul
aaa
aad
or
xor
sahf
es
test
cmp
cmps
xor
push
cld
nop
mov
xor
cli
jae
int
jae
dec
xor
lock
xlat
mov
inc
inc
aam
std
fild
lods
iret
push
dec
xlat
movs
mov
retf
mov
jae
out
pop
add
push
leave
inc
ret
inc
mov
xchg
dec
or
ss
call
mov
add
push
jge
push
mov
fcomp
iret
mov
xchg
fnstcw
pusha
pop
or
lods
test
xlat
pusha
dec
lea
xchg
bound
mov
in
jb
ret
popf
(bad)
fnstenv
pop
ficom
popf
retf
nop
stos
arpl
mov
mov
jns
imul
iret
xchg
cdq
shl
jl
xlat
aam
cmps
jmp
dec
sahf
shl
lds
and
jne
pop
mov
outs
fsubr
imul
adc
stos
lods
push
leave
pushf
scas
fild
pop
sti
or
jge
(bad)
add
les
test
mov
fld
dec
mov
mov
inc
cli
lock
lea
in
jb
fwait
shr
rol
and
dec
dec
jae
push
push
adc
lahf
pop
and
adc
out
(bad)
js
jmp
pop
rol
push
out
imul
repz
cmp
pop
pop
fdiv
pop
fcomp
int
and
fdivr
xor
fwait
jnp
jge
fwait
sbb
mov
jl
sbb
daa
shl
mov
cwde
out
xchg
(bad)
out
movs
addr16
jg
nop
add
int3
cwde
cmp
retf
ror
enter
adc
and
mov
pushf
pop
or
xchg
sub
mov
inc
test
sub
xchg
xor
push
cmps
cmp
outs
test
dec
dec
inc
sbb
or
(bad)
cmc
sar
mov
jns
ret
mov
mov
mov
mov
scas
mov
rcl
adc
pop
push
pop
frstor
addr16
xchg
mov
icebp
mov
aam
xchg
loop
pop
int3
fs
shr
xor
test
mov
add
mov
fdiv
daa
fs
clc
out
push
mov
jno
mov
lods
inc
mov
xlat
aad
sar
(bad)
lods
cmc
call
loop
retf
xchg
daa
adc
cdq
test
inc
out
xor
and
pop
mov
xchg
sbb
ret
stos
fs
repz
pop
or
and
les
imul
dec
xor
mov
(bad)
not
mov
xor
sbb
rcl
sbb
stc
push
xchg
cli
jmp
add
adc
loopne
cs
pop
sbb
cld
and
xor
inc
xor
dec
pop
cmp
inc
mov
xor
add
xchg
sahf
arpl
out
and
cli
stc
push
call
scas
(bad)
dec
lds
jmp
or
aas
sahf
loopne
mov
jge
push
in
pushf
push
retf
mov
addr16
and
add
pop
xchg
xchg
lods
push
into
sbb
mov
enter
hlt
shl
call
cld
call
in
aad
dec
cmps
out
fmul
lock
gs
pop
retf
inc
adc
ret
cs
test
stos
movs
lock
fild
sti
(bad)
hlt
sub
popa
push
fcmove
inc
mov
ja
xchg
jne
ja
or
xor
mov
scas
and
push
mov
cmp
adc
aam
pop
(bad)
mov
ins
adc
ret
mov
mov
pop
les
push
sub
ficom
(bad)
jmp
inc
es
jp
pusha
leave
popa
(bad)
paddq
mov
jecxz
and
xchg
js
sub
ins
pop
xchg
or
add
std
sbb
sub
shr
xlat
mov
fadd
lds
lds
or
and
add
xchg
cmc
mov
push
int
cli
jp
push
fistp
pop
jnp
js
inc
or
rol
push
(bad)
mov
out
pop
iret
xchg
shl
in
cdq
call
add
fisttp
loopne
mov
shr
xor
mov
pushf
(bad)
div
and
out
dec
and
sti
std
cmp
mov
jmp
out
lds
add
push
and
xchg
aad
sbb
fmul
push
gs
dec
adc
cmps
ret
in
push
xchg
push
shl
add
pop
outs
push
xchg
adc
imul
daa
(bad)
lds
addr16
inc
sbb
push
cwde
bswap
xchg
shl
pop
(bad)
push
es
je
pop
mov
cmp
fs
sahf
retf
out
ret
push
sbb
pop
pop
rcr
daa
fcomp
mov
dec
gs
addr16
jns
push
cmps
shl
mov
and
cwde
in
jecxz
add
les
icebp
outs
or
lock
cmps
fcmovnu
jmp
addr16
xor
inc
jns
outs
cs
cmp
mov
pop
pop
adc
daa
int3
jge
jnp
daa
and
rcr
inc
or
mov
jo
rcr
loop
movs
lods
xchg
mov
jp
dec
fild
fsubr
shl
sbb
(bad)
cmp
xchg
hlt
push
scas
push
ss
daa
lods
mov
dec
and
xchg
nop
aam
jns
ds
xor
adc
daa
ror
and
mov
xor
xchg
jae
and
xchg
aaa
inc
adc
into
mov
loopne
xchg
cwde
xor
fcom
in
add
jns
out
hlt
push
pop
call
mov
push
add
cdq
and
stc
sti
js
pop
(bad)
sub
aam
call
adc
(bad)
mov
lods
fmul
outs
popa
jp
adc
and
xchg
cmc
addr16
lock
add
iret
jg
pop
xor
and
and
or
dec
jmp
sti
frstor
jb
cmp
dec
(bad)
mov
faddp
mov
rcr
dec
xor
mov
std
jmp
bound
pop
or
rcr
int
outs
add
jge
xor
cwde
out
pop
jne
cli
sbb
outs
scas
call
or
pop
test
xor
and
es
sbb
(bad)
stc
mov
xor
mov
xor
dec
data16
sub
add
adc
fnstenv
mov
lods
cmc
in
pop
pushf
add
mov
sbb
mov
fisttp
lea
pop
jecxz
enter
sahf
out
loope
loopne
or
lahf
jmp
xchg
rol
not
pop
sbb
dec
call
(bad)
sub
mov
test
sbb
cmps
push
aaa
ret
xor
jae
add
es
cdq
adc
lahf
sbb
shr
mov
push
stos
mov
addr16
mov
ss
jg
add
jp
and
mov
pop
call
inc
rol
mov
mov
imul
fnstcw
arpl
jmp
jg
popf
xor
rcl
cmp
idiv
loope
pop
sbb
pop
add
stos
gs
and
in
mov
jbe
rcl
mov
jle
shr
mov
test
inc
mov
pushf
sub
leave
ins
pop
imul
and
push
xor
(bad)
(bad)
and
inc
xor
cwde
pop
xchg
retf
mov
jle
ins
mov
pxor
push
pop
aad
stos
add
lock
lds
jge
loop
mov
outs
mov
cmp
adc
test
mov
jp
call
dec
icebp
in
xor
mov
fcom
or
jmp
mov
xchg
fistp
repnz
ss
pop
rcl
rcr
call
xchg
dec
(bad)
pop
in
popf
dec
sub
or
rol
mov
sbb
sub
in
cli
jge
and
call
repnz
pushf
dec
adc
and
je
mov
in
test
push
mov
out
rcr
outs
push
and
jmp
cmps
add
das
out
cli
add
xchg
mov
xchg
std
dec
cmp
push
loope
and
cwde
retf
int3
xor
push
dec
in
dec
retf
in
mov
adc
inc
(bad)
push
hlt
ret
and
jb
sbb
(bad)
daa
leave
cld
popa
inc
mov
xor
xchg
xor
inc
(bad)
cmp
mov
inc
pop
cmps
je
add
pop
ins
fbld
arpl
push
clc
outs
int3
jmp
jns
cwde
inc
pushf
addr16
(bad)
xchg
sbb
call
call
inc
repnz
cmp
test
sbb
lods
rol
rcl
ss
test
xor
bound
xlat
mov
mov
xchg
mov
pusha
fwait
out
pop
sub
(bad)
dec
push
into
push
mov
rcl
push
and
jp
mov
jo
cmp
ficomp
pop
out
mov
sti
push
sbb
imul
stos
(bad)
fsubrp
push
aam
cs
jle
mov
scas
cli
mul
rcr
mov
clc
adc
xor
xchg
and
fmul
es
scas
xchg
(bad)
mov
push
mov
mov
int3
sbb
lahf
jle
test
or
or
mov
sbb
das
nop
push
jo
dec
xlat
add
pushf
loope
jno
jl
(bad)
sahf
cmp
call
daa
sahf
or
push
cli
ret
clc
dec
and
fild
rcr
xor
(bad)
sti
push
sbb
fdiv
cmp
pushw
and
inc
add
dec
jmp
pushf
lds
cmp
push
xchg
xchg
jne
inc
sub
repz
int
jp
xor
mov
mov
push
call
xor
add
popa
mov
cli
fldpi
retf
xor
call
pop
sbb
out
mov
shr
lods
sahf
pandn
mov
push
xor
icebp
in
jp
adc
icebp
scas
mov
or
mov
shl
add
pop
inc
(bad)
xor
dec
lahf
mov
sbb
imul
inc
shl
pop
fldcw
fidiv
fdivr
push
test
cmps
daa
jo
ja
stos
fidiv
sub
pop
mov
sbb
cdq
cmps
mov
pop
leave
(bad)
or
fdivrp
scas
push
and
rcl
jl
loope
cli
push
cmp
clc
out
push
cmc
pop
pop
out
and
out
sbb
pop
and
fld
mov
push
mov
mul
lock
push
xor
(bad)
addr16
(bad)
jb
xchg
xor
mov
jle
(bad)
loope
cmp
xchg
(bad)
push
cmp
dec
call
pushf
movs
rcl
icebp
jmp
ror
ficomp
cmp
sbb
xchg
and
das
push
or
jg
sbb
movs
pop
cmp
in
std
les
mov
adc
popf
pop
stc
pop
repnz
cmp
mov
adc
lds
add
sub
mov
push
test
je
dec
xlat
inc
pop
mov
jae
inc
mov
into
mov
(bad)
jg
mov
sbb
loopne
cmc
sahf
ss
lahf
jo
clc
xor
push
test
sahf
mov
loope
cmps
sbb
int3
shl
enter
sub
pop
bound
mov
sbb
loop
jns
add
(bad)
test
inc
mov
loopne
bound
pop
xlat
int
sub
es
pop
sbb
ret
pop
sbb
jle
sub
mov
push
inc
mov
ins
jmp
aas
xor
ss
int
sbb
lea
xchg
pop
bound
stos
out
(bad)
dec
mov
retf
in
dec
es
adc
lea
and
add
xchg
mov
ret
jns
cmp
pop
ins
mov
mov
mov
adc
fisubr
dec
je
pop
adc
scas
mov
mov
xchg
xchg
push
hlt
ds
xchg
inc
jnp
mov
mov
pushf
jecxz
pusha
sub
mov
jle
cmp
sbb
pop
cmp
push
dec
fs
(bad)
jecxz
push
bound
cmp
pop
jg
retf
inc
aam
gs
clc
sbb
dec
push
cmp
pop
out
aas
and
fadd
stos
ror
aas
and
sbb
ror
stos
icebp
push
push
shl
jb
popf
mov
or
xor
jnp
or
aad
add
in
mov
pop
ins
imul
shl
or
imul
int
xor
call
in
retf
cwde
gs
jno
pushw
push
out
push
(bad)
into
in
retf
cs
mov
push
mov
xor
inc
and
pop
jb
or
push
sbb
cdq
mov
rcl
(bad)
sub
not
cld
daa
popa
jne
push
in
stc
cs
lea
adc
popf
les
fdivrp
(bad)
lock
pushf
jnp
ja
gs
fwait
pop
and
gs
or
mov
(bad)
jb
cmc
in
inc
retf
popf
(bad)
jle
or
sar
cmp
or
xchg
(bad)
test
cmp
repnz
push
push
in
lods
clc
inc
(bad)
pop
sbb
sub
imul
mov
out
pop
xchg
int
fmul
inc
aad
mov
xor
stc
in
sub
and
xlat
dec
jnp
ins
xchg
pop
mov
push
lea
pop
jecxz
loopne
mov
loop
add
in
out
sub
push
pop
inc
cmp
mov
xor
jo
jg
pop
imul
out
xchg
sub
jb
rcr
xor
jle
adc
dec
cmp
aaa
imul
xchg
out
inc
call
in
mov
ins
jl
aam
xor
fst
call
sub
fcmovnbe
jo
xlat
fs
out
jae
xor
sbb
imul
mov
in
cld
cdq
fs
jb
outs
aas
in
add
mov
mov
cmp
mov
mov
in
dec
test
or
imul
sub
sahf
dec
xor
shl
jnp
adc
fisubr
(bad)
outs
add
repz
push
push
daa
hlt
std
lods
jmp
bound
xor
dec
movs
mov
inc
or
xchg
movs
imul
cli
or
or
adc
adc
jbe
aam
mov
enter
ja
push
popa
fild
retf
aaa
cmp
inc
cmp
cdq
xchg
retf
out
xchg
push
mov
arpl
sahf
(bad)
inc
adc
das
and
push
(bad)
mov
cmps
inc
mov
out
stos
mov
sbb
mov
clc
inc
daa
jl
loop
fistp
rcl
outs
sbb
(bad)
fisttp
(bad)
icebp
cmp
cld
xor
(bad)
sub
cs
pop
add
cmp
pop
popf
add
jmp
jnp
and
or
pop
mov
mov
push
cs
push
jo
daa
in
push
dec
xchg
cld
or
rcl
inc
sub
adc
lods
(bad)
push
xchg
rcl
enter
cmps
mov
mov
mov
jecxz
add
xor
adc
jecxz
sub
ds
jle
rcl
and
scas
cld
mov
idiv
(bad)
loop
mov
add
ins
rcr
into
and
pop
movs
inc
addr16
cmps
mov
inc
fnstcw
cmp
mov
fsubr
cmp
lock
shr
aad
cmp
rcl
sahf
test
lock
jnp
aam
jecxz
icebp
repnz
cld
pop
ins
enter
es
jnp
xchg
vrcpss
and
shl
sub
pop
call
xor
(bad)
fimul
nop
push
jno
pop
inc
adc
and
daa
call
sub
lea
xor
mov
shr
(bad)
js
add
ret
int3
push
push
cmp
shr
movs
lahf
loop
add
rcl
lahf
mov
pop
stos
out
push
loop
add
mov
jno
and
in
adc
lods
sbb
inc
(bad)
mov
outs
mov
push
icebp
ds
lods
lahf
les
and
ror
pop
(bad)
jecxz
mov
jp
push
mov
stos
adc
xchg
cs
fsub
jo
xchg
jp
xor
hlt
(bad)
in
jg
arpl
int3
inc
mov
lock
jne
xor
and
in
lods
(bad)
cmp
sub
rcl
push
or
jo
cmp
aam
mov
inc
fucomip
out
rcr
xor
jge
pop
scas
es
pop
and
fsubr
dec
psubq
dec
inc
out
test
xor
xlat
je
mov
sub
mov
xchg
out
or
cwde
(bad)
or
scas
sbb
inc
in
dec
add
xchg
inc
int
dec
rol
mov
icebp
or
or
push
mov
loop
lahf
and
shr
mov
cwde
sbb
int
xor
cdq
mov
lock
imul
or
inc
loopne
mov
xchg
pop
ret
hlt
jne
adc
cli
sbb
cmp
cdq
push
cdq
in
sub
(bad)
arpl
mov
loop
fnsave
fiadd
mov
cmp
(bad)
mov
mov
dec
ins
aad
mov
and
pop
aaa
dec
es
iret
cmp
and
lea
inc
jl
pop
sub
and
hlt
push
dec
pop
mov
stos
into
adc
out
and
jge
mov
in
jne
jae
cmps
adc
pop
or
jmp
iret
fidivr
cli
jecxz
sub
je
aaa
cmc
xchg
cmps
cmps
inc
sar
mov
mov
rcr
outs
pop
test
mov
out
or
daa
inc
add
out
push
xor
mov
jbe
(bad)
sbb
cmp
(bad)
lahf
add
jns
push
neg
jbe
jge
dec
cmp
hlt
ins
dec
fild
es
icebp
inc
fdivrp
stc
inc
pop
aas
imul
scas
loopne
movs
and
pop
mov
dec
dec
mov
mov
mov
add
jmp
mov
loope
add
mov
inc
iret
adc
pushf
retf
(bad)
cdq
stc
jo
adc
mov
cmps
xchg
dec
int3
test
ret
push
ds
ds
pop
scas
cdq
gs
mov
inc
(bad)
jl
(bad)
fsub
push
push
test
inc
or
fistp
xchg
test
leave
add
ror
adc
or
push
dec
push
mov
(bad)
stos
fbld
movs
icebp
adc
fstp
fidiv
mov
fwait
inc
cmp
jnp
inc
xchg
sbb
out
sbb
popf
or
sahf
xchg
jb
mov
and
(bad)
cli
loopne
sbb
mov
jnp
push
and
scas
or
es
(bad)
cmc
xchg
cmp
int
imul
push
push
mov
(bad)
das
jmp
mov
xchg
dec
cmps
jle
into
popf
lock
adc
cmp
pop
mov
clc
popa
xor
mov
call
aam
data16
ja
leave
adc
cld
dec
aam
cmps
add
pop
sub
push
jge
and
adc
adc
in
daa
ret
dec
gs
ins
and
push
repnz
pop
add
in
ja
in
call
lea
push
sub
aas
push
cwde
repnz
cmp
lods
push
jmp
cld
mov
xlat
dec
ja
xchg
inc
xchg
push
jo
pop
sbb
inc
and
dec
jecxz
push
sbb
loopne
jns
int3
repz
dec
ds
or
lods
mov
xor
scas
sbb
jge
mov
jns
jmp
cmp
jecxz
in
add
adc
lods
imul
imul
push
mov
sub
sub
mov
cmps
(bad)
int3
stc
and
test
int3
cmps
dec
pop
jle
cmps
add
jp
jp
push
in
jmp
ds
das
sbb
stos
cmp
fmul
inc
ss
shl
xchg
mov
fnsetpm(287
pop
jp
cmp
push
stos
rcl
fdivr
mov
ret
pop
xchg
icebp
push
sbb
pop
inc
ret
(bad)
js
das
fcmovbe
cmp
mov
mov
xor
jns
xor
jb
add
push
adc
sub
ins
sub
jae
xchg
ss
pop
out
adc
pop
cmp
cmp
push
iret
sub
sti
add
add
xchg
mov
push
scas
leave
daa
and
sbb
jo
jno
push
pusha
leave
call
ret
cmc
dec
push
pop
shr
fcomp
mov
cmp
xlat
mov
scas
fdiv
mov
scas
std
int
iret
pop
repz
jnp
out
stos
shr
xchg
mov
in
mov
call
fs
lea
data16
cmp
adc
lea
clc
sbb
adc
and
test
or
add
clc
neg
push
and
ror
inc
out
imul
sbb
aas
fcmovnb
mov
mov
movs
ror
xchg
test
test
cwde
xchg
call
push
je
into
adc
mov
mov
push
and
cmps
inc
xor
mov
data16
or
mov
sbb
add
es
push
sub
into
push
xor
and
sub
or
jmp
sub
sti
inc
in
rcr
adc
test
push
out
aas
shl
(bad)
icebp
daa
xchg
pop
movs
ror
popf
sub
icebp
and
mov
push
mov
inc
pop
test
add
xor
jp
and
jmp
pop
add
repz
popa
retf
ficom
push
stos
cmp
cli
out
shl
gs
sbb
cmp
clc
fild
cmp
lods
adc
pop
inc
xor
dec
dec
mov
cmp
pop
popf
sbb
push
jp
sahf
mov
rcr
inc
shl
cld
int
or
test
(bad)
std
mov
mov
popa
push
dec
push
xchg
cld
lea
sbb
pop
cmps
repnz
rcl
aas
xchg
push
cs
(bad)
stc
fld
adc
repz
sti
int3
or
into
sbb
hlt
fbstp
repz
in
jo
shr
xchg
push
nop
or
jle
inc
cwde
and
iret
cmp
imul
stos
sahf
pusha
test
lds
push
ret
mov
stos
ss
pop
cmp
and
fisubr
adc
lea
xchg
push
mov
or
dec
aas
cmp
inc
mov
in
jbe
mov
js
inc
sub
(bad)
(bad)
cmc
pop
scas
add
xchg
test
ret
push
lods
mov
int3
jmp
aam
inc
mov
fcmovnb
and
shl
ins
jo
or
das
xchg
xchg
inc
stos
mov
fisubr
jl
cmp
cmps
cmp
jne
js
mov
pop
nop
inc
push
test
mov
pop
rol
xchg
jecxz
pop
jnp
xchg
dec
push
iret
jb
out
int
add
mov
div
lods
test
pop
(bad)
cmp
iret
sub
out
push
aaa
xchg
(bad)
ja
and
sahf
into
xor
lahf
pause
js
sti
dec
mov
call
retf
and
pop
xor
mov
jle
dec
xor
mov
cwde
adc
(bad)
and
sbb
movs
adc
add
adc
loop
pop
fisubr
mov
push
out
sbb
jge
icebp
pushf
rcr
jnp
in
and
into
mov
lds
aam
imul
and
inc
imul
dec
dec
inc
inc
and
call
in
add
test
adc
jp
add
(bad)
xchg
dec
cwde
cmp
push
aam
movs
sub
jmp
shl
lock
xchg
inc
mov
shl
sub
scas
mov
aaa
push
jle
(bad)
cmp
xor
neg
xor
mov
jae
or
mov
lock
and
daa
out
dec
mov
cli
arpl
add
ret
call
aam
xchg
xchg
mov
sub
pop
cli
or
adc
push
arpl
frstor
xor
aaa
lods
shl
xor
jecxz
test
cmp
dec
add
and
mov
add
mov
cmp
(bad)
clc
pusha
aad
lds
sub
dec
fcomi
jge
sbb
enter
das
jl
jp
jg
cdq
mul
xchg
and
pop
xor
stos
mov
jle
xor
xor
jp
mov
dec
data16
mov
mov
mov
lods
cmp
and
shl
mov
(bad)
cmp
push
or
adc
sub
and
das
xor
int3
inc
jo
lds
mov
push
pop
inc
in
inc
cmc
dec
pop
shl
xchg
sahf
mov
lea
xor
and
ret
ss
in
jp
inc
fimul
nop
mov
scas
repnz
ficomp
xlat
gs
icebp
call
(bad)
je
pop
cs
js
lds
push
jmp
push
mov
push
xor
loope
pushf
pop
push
popa
adc
daa
push
ret
cmps
ficomp
(bad)
fild
cmc
test
popf
xchg
data16
test
stos
sbb
aad
es
sar
lods
imul
or
push
mov
xor
outs
cdq
out
and
fucomip
jmp
fsub
or
sbb
int3
fcomp
imul
mov
ror
(bad)
fisub
mov
mov
pop
inc
jge
lea
inc
mov
mov
pop
repz
out
test
test
aas
dec
mov
mov
repnz
jmp
pushf
imul
data16
fldenv
dec
add
dec
mov
scas
in
push
adc
push
or
bound
pusha
jl
cdq
add
jmp
or
aaa
mov
push
cmps
and
jp
fisub
pop
mov
cmc
cmp
les
aas
add
inc
adc
or
mov
xchg
push
mov
cmp
js
pop
ficomp
(bad)
mov
lods
xacquire
mov
int
jne
pop
xor
push
sub
mov
data16
cmp
repnz
mov
inc
cmps
div
pop
les
js
(bad)
nop
call
outs
shl
xlat
jne
imul
inc
mov
mov
rcl
scas
rol
sar
or
push
ret
int3
and
iret
mov
and
mov
pop
xchg
lock
repz
sbb
adc
test
fdivr
mov
mov
xchg
inc
inc
mov
push
mov
call
xchg
sub
xor
sub
mov
retf
mov
jecxz
lock
jecxz
mov
ds
lds
push
rcr
add
mov
repz
ret
int3
les
mov
pop
cmp
adc
(bad)
sub
mov
jmp
mov
repz
movs
or
hlt
inc
shl
mov
lahf
xchg
inc
cmc
sbb
lea
inc
xchg
add
pop
loop
add
ins
fwait
cwde
outs
pusha
add
jbe
and
jl
inc
scas
retf
push
xor
xchg
pusha
inc
xchg
retf
leave
(bad)
leave
sub
div
stos
pop
retf
es
test
mov
(bad)
fist
jb
in
or
lock
push
sub
inc
js
cmp
addr16
sub
in
mov
jge
shl
loop
ins
pop
pop
je
adc
mov
fldenv
or
adc
jg
xchg
jns
mul
nop
and
leave
adc
sub
mov
mov
sahf
and
pop
and
xlat
rcl
in
mov
ret
mov
sub
scas
dec
add
out
fmulp
add
repz
repnz
hlt
sub
shl
add
pop
add
sbb
mul
mov
imul
xchg
hlt
pusha
push
dec
pop
stos
lds
imul
out
and
es
cwde
jne
xchg
pop
(bad)
pop
ins
mov
sbb
mov
cmp
jmp
sub
cmp
and
fwait
rol
test
push
jmp
out
sub
xchg
dec
or
stos
iret
push
pandn
mov
mov
add
scas
call
in
sub
jno
call
nop
cmp
dec
scas
sbb
sub
jp
jbe
push
and
out
nop
mov
mov
push
pop
push
pop
push
mov
jecxz
bnd
and
jmp
imul
xchg
nop
dec
les
stc
pop
test
or
rcl
xor
lds
ja
sahf
fldcw
adc
in
xchg
pop
sar
test
dec
mov
lds
mov
adc
loopne
inc
outs
sbb
mov
and
or
mov
shr
jae
mul
mov
adc
push
arpl
pop
push
cmc
out
xchg
adc
cs
cwde
pop
or
pop
repz
clc
xacquire
jnp
mov
sub
pop
mov
mov
lahf
pop
les
mov
popf
xor
add
sub
add
dec
push
push
add
int3
sub
(bad)
cli
popf
loopne
mov
in
mov
or
fst
and
mov
bound
icebp
push
icebp
aad
or
push
loopne
and
sbb
outs
lods
or
arpl
out
mov
mov
push
and
fs
add
fdivr
inc
daa
jns
addr16
pop
jg
push
adc
add
test
cdq
cmp
aas
call
ins
push
test
fwait
or
mov
push
lahf
dec
loope
leave
mov
jne
mov
lahf
xchg
je
sti
push
push
mov
and
pop
adc
add
(bad)
pop
jmp
and
clc
iret
xlat
pop
cdq
inc
movs
xchg
lahf
ja
leave
xlat
adc
or
mov
cmp
and
jnp
stos
jb
fwait
pop
and
into
outs
into
(bad)
es
in
jb
dec
jne
mov
or
cmp
inc
pushf
cmp
xchg
cmp
sbb
push
mov
mov
cmp
dec
(bad)
(bad)
adc
dec
aad
fcomp
or
(bad)
fwait
jo
push
scas
mov
push
push
pop
mov
je
adc
in
dec
lahf
mov
ins
push
or
jmp
mov
(bad)
pop
xor
jns
fldz
sbb
cmp
push
xor
add
sub
add
outs
inc
or
xchg
cmp
and
xchg
daa
add
cmps
dec
repz
xor
mov
loop
aam
sub
jno
pop
jno
cmp
mov
pop
in
movs
je
lock
pop
xchg
mov
and
mov
(bad)
int
pusha
xor
mov
dec
cld
sbb
jo
test
mov
cmp
clc
ficomp
pop
movs
add
ds
ret
dec
loopne
push
jecxz
mov
jmp
cdq
(bad)
xchg
pop
stos
jp
or
test
dec
iret
fmul
shl
shl
cmp
fnstcw
jo
ss
mov
cmp
movs
sbb
jle
mov
int3
prefetchnta
cmc
mov
cmp
xchg
xor
push
xchg
dec
add
mov
gs
ror
div
or
stc
jmp
scas
int3
pop
push
push
pop
and
mov
or
out
push
xor
imul
push
and
push
hlt
cmp
push
xor
add
mov
jg
or
or
mov
sbb
ret
jns
cmp
fnstsw
leave
loope
out
jae
push
jne
fcom
mov
jg
fdivrp
fnstenv
pop
aad
sub
cmp
sub
scas
sub
xor
sbb
xchg
stc
cmp
in
gs
mov
loop
daa
(bad)
fst
jns
sub
add
fst
jmp
aad
nop
icebp
inc
jmp
fwait
test
test
pop
mov
sbb
mov
(bad)
or
adc
hlt
nop
aas
arpl
arpl
hlt
push
fld
add
fstp
lock
imul
dec
rcr
mov
hlt
rcl
test
cmc
sti
mov
pop
sub
and
imul
shr
jle
shr
push
repnz
xor
cmp
pop
mov
push
mov
and
mov
or
cwde
out
or
lahf
push
sbb
fwait
mov
or
leave
das
pop
and
xchg
jne
fstp
out
jbe
push
js
(bad)
jnp
pop
loop
add
xchg
pop
and
iret
sub
and
add
or
movs
dec
mov
cmp
xor
cmps
or
push
or
and
jecxz
dec
std
inc
repz
sbb
test
or
out
xchg
daa
push
push
pop
fcomp
mov
add
pushf
dec
jbe
inc
ret
jp
jmp
out
push
mov
push
add
cmp
ret
xchg
stos
push
loop
inc
mov
aas
ja
jb
cld
retf
mov
ret
pop
add
jl
or
jno
adc
mov
sub
push
cmc
or
(bad)
or
fnsave
leave
cmp
movs
mov
sub
test
test
pop
lahf
fld
jns
lods
jmp
int3
mov
mov
stos
cmp
dec
push
lods
mov
rcr
out
ret
and
in
push
cmp
and
xchg
shl
arpl
xor
jmp
sub
or
cmp
or
mov
mov
nop
out
in
div
test
cwde
xor
fisttp
cwde
shr
ss
(bad)
adc
mov
das
and
jl
jg
cld
iret
mov
nop
mov
lock
cmp
mov
(bad)
cmc
xchg
rol
dec
xor
or
les
add
dec
das
test
loop
lods
lods
push
loope
mov
jmp
mov
pop
shr
mov
shl
jmp
and
mov
xchg
arpl
jmp
jne
outs
mov
adc
inc
outs
inc
sub
xchg
push
faddp
ds
inc
test
cmp
pop
aam
mov
stc
shr
repz
push
pop
(bad)
aas
lds
push
push
adc
xchg
push
cmp
mov
les
imul
ins
push
xchg
xor
dec
sbb
scas
mov
fnsave
mov
xor
outs
jecxz
mov
mov
cmp
pop
inc
inc
sbb
jecxz
daa
sbb
stos
ret
mov
mov
xchg
ins
mov
xchg
adc
push
retf
sub
ds
in
sub
enter
xchg
out
aaa
push
rol
push
xor
mov
cs
shl
adc
inc
mov
adc
and
shl
popf
xchg
or
push
xor
mov
push
sbb
cmps
dec
imul
xor
push
ins
sahf
push
fadd
test
push
(bad)
xor
jcxz
mov
outs
ins
xchg
repnz
mul
inc
dec
add
mov
pop
cmp
sbb
mov
dec
leave
test
int3
cmp
dec
and
outs
jecxz
lea
lea
and
add
inc
aas
(bad)
dec
js
add
int3
outs
rcr
enter
ins
gs
clc
lahf
lea
add
mov
addr16
jns
out
mov
mov
cmp
and
movs
rcl
sbb
es
(bad)
cmps
mov
push
fstp
or
ret
jbe
mov
lods
daa
idiv
push
in
push
xor
out
jle
dec
ds
(bad)
into
jp
inc
xor
(bad)
xchg
sub
jns
shr
jp
cmp
xchg
push
cli
mov
ss
jp
cmp
sbb
push
pop
mov
(bad)
mov
or
(bad)
icebp
inc
add
lahf
push
mov
adc
add
mov
cdq
cmp
adc
aas
cdq
ja
lock
pop
push
data16
adc
movs
imul
xchg
sar
inc
sub
aad
lea
into
mov
aad
js
call
xor
lods
adc
ss
jb
adc
pop
mov
js
sbb
sbb
das
ret
mov
inc
dec
test
or
mov
shl
lods
pushf
xchg
out
jae
adc
mov
lock
pop
dec
sbb
adc
push
jp
mov
sbb
sub
shr
mov
loope
(bad)
pop
push
jb
scas
stos
hlt
dec
mov
xor
pop
std
dec
jmp
mov
push
sbb
lods
out
adc
jle
and
scas
add
or
ja
enter
jmp
inc
cmps
ins
fistp
clc
push
stc
shl
pop
pop
xor
dec
into
sub
sub
int
sub
int
test
ins
mov
enter
gs
push
pop
sbb
mov
jmp
cmps
jle
sbb
push
ss
fnstcw
mov
xor
push
mov
test
std
cmc
(bad)
sbb
loop
cmc
data16
leave
sub
xchg
mov
fcom
dec
xor
xor
into
dec
aas
cli
sbb
sub
push
out
lock
sub
jbe
or
lock
mov
adc
cwde
mov
fist
jo
imul
int
jp
inc
ins
xor
std
fnsave
adc
mov
sub
mov
or
out
(bad)
adc
adc
retf
mov
sbb
out
std
pop
xor
lds
retf
mov
je
pop
icebp
xchg
inc
test
ss
rol
and
jno
dec
cld
jae
bnd
call
xor
mov
adc
mov
or
add
or
mov
jo
add
loop
inc
ror
cs
push
arpl
rol
xchg
sahf
daa
je
push
sub
loope
push
jbe
pop
jbe
inc
mov
cmp
sub
packsswb
int3
sbb
xor
adc
cmp
dec
and
(bad)
mov
ins
cdq
add
mov
sub
(bad)
stc
push
outs
cmp
push
popa
dec
popa
cmps
cwde
push
mov
nop
rcr
or
xor
movs
add
cmps
add
mov
iret
out
(bad)
call
cmp
mov
loope
outs
adc
cmp
bound
mov
jp
std
std
push
shr
pop
cmps
scas
fisubr
addr16
cs
push
xor
enter
popa
jmp
jb
xchg
and
lea
outs
push
iret
mov
jb
inc
jg
test
fcomp
out
dec
call
nop
cmps
(bad)
xor
jmp
(bad)
push
xchg
cmp
data16
mov
(bad)
adc
cwde
mov
push
lds
stos
lock
js
(bad)
fldenv
pop
test
or
nop
out
mov
shl
cmp
mov
loopne
mov
inc
out
or
inc
cmc
setge
add
icebp
lea
mov
cmp
mov
lods
inc
movs
nop
in
data16
test
xchg
pop
xor
jno
lods
push
sti
aam
mov
fidiv
cmc
inc
in
jle
inc
icebp
pop
(bad)
repz
stos
ss
jg
daa
dec
mov
mov
jo
xor
mov
rcr
adc
shld
(bad)
jno
in
shl
es
inc
cmp
dec
push
push
lea
(bad)
jae
mov
dec
cmc
dec
inc
xor
push
pop
xor
sub
jp
and
and
or
pop
cmp
add
pop
push
mov
xor
adc
jnp
cmc
das
ret
mov
xor
or
jecxz
xor
loop
jg
ds
imul
loope
mov
push
push
jne
jae
pop
fistp
push
add
lods
daa
mov
std
sub
push
aam
ror
dec
jo
cwde
fcomp
ss
xchg
or
out
or
in
idiv
test
push
outs
xchg
push
mov
add
mov
xchg
js
outs
inc
int3
fst
mov
add
xor
cld
adc
mov
fmul
cmp
sbb
xchg
cld
xor
add
inc
xchg
dec
push
pushf
stc
aad
dec
and
ret
jmp
mov
test
add
aaa
mov
sub
out
pop
mov
aas
pop
xor
nop
push
cmps
mov
xor
fdiv
jp
sub
mov
bound
iret
cld
add
movs
add
or
and
rol
mov
or
test
add
test
pop
mov
jbe
sub
repz
aam
pusha
xor
push
and
std
xor
push
push
jmp
push
test
rcr
mov
push
sub
and
xor
popf
jae
iret
sar
or
in
rcl
sar
mov
add
cmp
leave
dec
adc
es
retf
jecxz
test
add
movs
in
push
nop
sti
loope
cmp
jnp
add
add
xor
ret
sbb
adc
dec
mov
ret
jno
jmp
pop
icebp
push
dec
sbb
pop
in
imul
cld
or
imul
hlt
inc
sbb
and
(bad)
or
adc
outs
pop
cld
(bad)
call
(bad)
jl
sbb
iret
fsub
mov
in
das
mov
xlat
scas
les
es
add
movs
fnstenv
lods
(bad)
and
dec
mov
iret
xor
push
adc
sar
aas
or
xor
dec
fwait
loope
lds
enter
mov
not
mov
ror
ins
push
call
xchg
jge
mov
stos
icebp
pop
in
das
ins
pop
das
repz
xor
jns
repz
pop
or
push
mov
pop
jecxz
les
retf
xchg
push
add
into
mov
cwde
pop
dec
and
cs
sbb
dec
or
mov
dec
jp
icebp
adc
bound
and
idiv
leave
test
inc
scas
add
jo
mov
test
pop
xchg
lea
or
mov
outs
das
xchg
fistp
or
test
(bad)
pop
or
mov
gs
add
push
mov
(bad)
test
pop
(bad)
push
enter
sbb
je
cmps
ja
xor
mov
movs
pop
addr16
bsr
or
dec
not
in
lods
ud1
mov
jae
out
out
push
xor
and
sbb
push
mov
outs
and
xlat
jb
movs
mov
movs
cdq
push
or
pusha
xor
outs
imul
push
push
adc
retf
sub
inc
repnz
dec
(bad)
fwait
xchg
pop
shl
data16
movs
sti
fdivrp
outs
jmp
out
mov
pop
call
rcr
repnz
pushf
ret
pop
out
xchg
fdivr
dec
icebp
adc
push
mov
sbb
lods
sbb
fnclex
push
bound
dec
mov
mov
lds
idiv
push
push
or
imul
pop
call
mov
shl
dec
(bad)
rcr
jmp
es
cmp
repz
es
mov
sub
pop
dec
cmp
pop
add
outs
fimul
movs
cmp
jecxz
jbe
aaa
and
add
lahf
or
dec
adc
add
mov
mov
sub
xor
in
push
sbb
push
stos
xor
jae
mov
inc
jl
cdq
pop
sar
scas
movs
jbe
ja
push
mov
cmp
sbb
add
aas
and
icebp
les
xchg
add
icebp
movs
(bad)
push
inc
or
jno
push
adc
push
lea
mov
lods
test
pop
and
xchg
mov
dec
sti
retf
push
mov
dec
not
adc
push
sahf
adc
popa
in
jno
mov
popa
sub
popa
sbb
push
add
repz
repnz
fbstp
or
pushf
xchg
or
adc
jle
not
idiv
mov
ret
mov
dec
out
fsub
lods
mul
cwde
xor
icebp
ins
jb
or
in
mov
inc
and
jnp
inc
sbb
cmp
scas
or
mov
mov
clc
sbb
loopne
xor
outs
xchg
sub
cs
xor
push
sub
pop
aad
int
ins
xor
sbb
sahf
mov
mov
mov
pop
js
pop
test
push
rol
and
rcr
pop
js
jno
sbb
(bad)
int3
mov
xor
xor
je
jno
mov
jge
dec
xchg
sahf
popf
sub
sar
mov
cmp
pop
ins
int3
xchg
(bad)
cld
aaa
mov
mov
inc
stos
push
loope
pop
or
out
je
stc
sub
repnz
sti
dec
retf
xchg
cmp
lea
(bad)
cmp
pushf
shl
jno
in
add
sub
sub
push
repz
add
das
jae
test
ror
jg
push
adc
int3
aad
push
aas
adc
rcl
inc
push
ja
loop
cmps
sub
mov
not
inc
sbb
push
push
xor
xchg
xor
inc
push
cli
mov
inc
test
call
cmp
cmps
enter
and
call
test
pop
iret
xor
sbb
clc
adc
shl
fs
dec
imul
and
push
mov
mul
outs
lea
mov
mov
cmp
push
xchg
jb
data16
mov
or
jns
popf
mov
bound
pusha
xor
or
push
sbb
or
cmp
dec
add
adc
movzx
sub
ret
or
push
sbb
movs
xchg
inc
jmp
inc
test
or
inc
out
mov
outs
add
scas
dec
into
add
inc
xor
add
int3
cmp
inc
es
nop
pop
or
mov
pop
test
push
pop
sti
jg
aam
inc
xchg
mov
mov
push
mov
pushw
xchg
lock
loope
jo
add
cmp
push
lea
or
adc
je
mov
jno
mov
adc
xchg
pop
ror
dec
out
(bad)
jb
jp
dec
xor
sbb
stos
xor
aas
or
xchg
add
xchg
(bad)
shr
std
sub
(bad)
loope
aam
xchg
mov
rcl
pop
aaa
mov
dec
xchg
(bad)
xchg
push
cdq
mov
cwde
cli
xor
js
jl
xchg
sub
mov
push
jge
cmc
xor
jl
fwait
mov
and
stc
loop
fdiv
ror
(bad)
fadd
or
mov
dec
push
xchg
mov
jge
data16
cmp
std
shl
call
sbb
fwait
xchg
retf
jge
pop
das
cmp
jle
cmp
fs
ds
or
inc
adc
mov
pop
dec
jle
sar
pop
add
rcl
adc
pushf
jg
cmp
mov
fiadd
out
jae
push
mov
popa
imul
lods
ja
repz
or
xor
fidivr
xor
(bad)
dec
scas
fiadd
inc
clc
xchg
fwait
sub
clc
jmp
jle
xor
loope
ret
push
adc
jnp
std
stos
cwde
into
mov
lahf
jge
inc
sahf
jns
vpunpckhbw
lock
and
mov
mov
(bad)
jnp
test
xchg
mov
aaa
push
xor
cmp
iret
pusha
test
xlat
pop
mov
jb
dec
test
sar
rol
std
je
lock
in
mov
ficom
jmp
mov
and
or
mov
test
push
iret
stos
vpunpckhwd
mov
cwde
mov
xchg
lock
pop
out
movs
imul
jno
imul
ror
xchg
add
sub
test
pop
mov
aam
xchg
push
pop
(bad)
out
jbe
xor
dec
call
push
sahf
lock
xchg
test
dec
pop
inc
add
and
(bad)
sbb
adc
or
adc
xchg
adc
outs
inc
stos
fnstenv
or
mov
cmc
mov
adc
cmp
(bad)
or
test
push
cmc
mov
in
add
mov
(bad)
xchg
mov
cdq
(bad)
ficomp
xor
cmp
call
stc
push
adc
les
mov
movs
loopne
repnz
in
mov
repnz
mov
push
pusha
nop
pop
aas
pop
push
pop
test
(bad)
dec
loopne
inc
mov
fnstsw
data16
not
aas
mov
add
push
inc
mov
xchg
addr16
or
movs
fist
push
ins
hlt
sahf
mov
mul
aad
cmp
aaa
sub
in
xor
add
imul
loopne
push
pop
stos
fcomp
and
out
mov
adc
(bad)
cmp
test
cld
fcomp
call
fsub
sub
or
adc
test
xchg
nop
lods
cwde
xchg
shl
jae
xor
cmp
jg
mov
loop
push
ins
adc
inc
sub
or
mov
ins
lahf
mov
and
push
dec
sbb
lea
cli
sbb
mov
retf
fistp
imul
fidivr
bound
repnz
rcr
mov
xchg
push
retf
mov
hlt
add
(bad)
cmc
popa
add
jp
int
call
inc
xor
out
in
pop
ins
(bad)
xchg
std
dec
test
gs
nop
fdivp
aam
pop
sbb
pushf
jno
popf
dec
xlat
sbb
shl
xchg
jmp
mov
sbb
pop
inc
sbb
sub
push
push
xchg
scas
ss
sbb
sub
add
sahf
jae
sbb
mov
jae
rcl
pop
(bad)
test
out
and
inc
dec
movs
daa
sub
sub
and
jmp
shl
shr
inc
dec
pop
repnz
stc
shl
jg
daa
mov
sahf
adc
inc
das
dec
hlt
stos
sub
push
pop
add
dec
dec
mov
fdiv
jne
fs
jl
mov
lock
fs
jmp
dec
(bad)
in
mov
xchg
mov
push
retf
shr
xor
jo
and
jmp
pop
ins
and
clc
sub
mov
cmc
stos
test
js
push
hlt
jns
jmp
add
js
sbb
mov
js
adc
mov
repnz
test
mov
out
dec
cmp
jmp
(bad)
(bad)
push
pop
movs
mov
mov
ins
mov
lods
shl
xor
rcl
mov
sahf
addr16
xchg
xchg
ds
jle
adc
jl
mov
or
push
(bad)
cld
neg
stos
mov
ins
fisttp
jo
jno
xor
sbb
sbb
sbb
popa
jnp
movs
fsub
outs
sub
push
mov
dec
adc
inc
out
rcr
cld
jae
shl
cmp
std
add
iret
in
ret
or
fst
loopne
push
lds
ins
mov
xchg
cmp
movs
fidivr
clc
fldln2
xor
jecxz
enter
xchg
leave
fld
sub
xchg
outs
cwde
(bad)
ror
repz
xor
repz
and
pop
xor
mov
fdivr
cmp
mov
push
das
mov
push
inc
pop
and
retf
xchg
push
in
rol
test
pop
cmps
push
aaa
fwait
je
aam
sub
xor
test
jg
js
stos
xor
in
sbb
stos
mov
dec
fcomp
jne
pop
lock
retf
int3
xor
cmp
sar
dec
jl
in
xor
push
icebp
sub
xor
jnp
xor
mov
stos
xchg
pop
loopne
scas
cmp
ja
xor
lods
mov
ins
(bad)
pusha
fisttp
pop
daa
les
jmp
jmp
mov
mul
fadd
push
push
sub
out
adc
fadd
popa
dec
pushf
ret
popf
in
mov
je
sbb
aam
fdiv
jmp
or
enter
ds
aas
nop
push
jp
and
loope
mov
shl
jle
jns
mov
sub
mov
add
loopne
sub
stc
stos
add
mov
movs
pop
or
fs
fwait
cmp
cdq
dec
retf
inc
lock
out
outs
and
sub
sub
xchg
mov
mov
iret
in
push
shr
(bad)
and
sbb
pusha
jl
mov
bnd
arpl
das
xor
arpl
call
cmp
pop
scas
push
je
cmps
lods
js
jno
pop
pop
into
ss
sub
xchg
jmp
mov
std
or
sub
test
hlt
xlat
mov
fucom
xchg
pop
jno
push
cs
aaa
mov
pusha
xor
inc
sbb
sub
mov
inc
sti
call
sub
or
push
sub
pop
cmps
inc
pop
mov
(bad)
out
out
ret
outs
adc
test
inc
inc
lods
mov
xchg
mov
pop
or
enter
mov
fwait
(bad)
lods
pop
and
mov
sub
les
stc
jnp
aam
aad
mov
mov
add
out
jb
pop
ds
int3
fist
out
rol
or
or
(bad)
cmp
mov
neg
fcom
scas
stos
bsf
mov
mov
aam
or
xlat
fimul
stos
test
sub
loopne
fcomp
aam
cmp
push
inc
mov
movs
xor
mov
mov
loope
sbb
ins
adc
xchg
loopne
jb
stos
cmp
or
cmps
pop
fwait
jnp
and
mov
mov
xor
xlat
(bad)
sbb
stc
cmc
mov
in
gs
dec
or
dec
jge
scas
clc
pop
(bad)
push
dec
push
jae
jmp
addr16
xchg
cmp
and
push
movs
push
mov
xor
and
push
mov
jns
pushf
sbb
ss
scas
repnz
add
push
xchg
adc
out
dec
pop
cmp
repnz
inc
and
out
bound
test
ins
ins
push
push
repnz
ror
jge
xchg
lock
les
stos
pop
or
jmp
add
shr
bound
sub
pushf
or
inc
mov
fst
mov
mov
cmp
fwait
mov
aas
std
cmc
mov
les
cmp
jno
je
xchg
call
pop
add
test
(bad)
jge
sub
adc
mov
imul
not
cmp
jge
test
(bad)
cmp
loopne
and
lods
push
call
frstor
mov
addr16
data16
jmp
stos
into
retf
fld
dec
stos
push
pop
inc
and
push
ds
pop
daa
fs
aas
aas
cld
or
aas
call
cli
xchg
pop
push
(bad)
sti
push
cmp
dec
and
push
push
inc
cld
push
retf
cld
loope
fmul
lds
jne
outs
fcom
icebp
xor
push
adc
fiadd
in
out
shl
adc
mov
mov
inc
pop
xor
das
sub
adc
push
mov
sub
push
dec
scas
sbb
push
jbe
xor
lock
out
dec
jp
test
mov
scas
jno
sub
adc
jmp
call
fstp
cmp
sub
imul
jb
mov
sub
fisttp
out
mov
push
fadd
or
mov
fucom
cmp
mov
inc
leave
fimul
imul
call
pop
jae
or
bound
and
inc
cli
xor
in
loope
loope
inc
jmp
in
aad
push
inc
dec
loop
mov
ret
xchg
call
mov
adc
aad
push
cmp
jl
push
leave
jmp
pop
sub
sbb
xchg
fistp
aam
fdivp
cmps
clc
sbb
fistp
xchg
lds
jae
cdq
dec
sbb
fsub
lea
pop
sbb
(bad)
sbb
cmp
jmp
imul
cmp
outs
mov
sbb
pop
push
inc
xor
stc
es
xchg
dec
xchg
int3
cmps
imul
repz
xchg
leave
push
fcomip
or
mov
add
mov
cmp
or
pxor
xor
daa
or
mov
pop
cmp
mov
data16
jnp
jno
out
stos
imul
mov
imul
fst
pop
out
push
pop
inc
cmp
jl
sub
cmp
inc
hlt
add
retf
cwde
add
int
push
add
xchg
stos
inc
aaa
jmp
jmp
sub
cmp
mov
out
and
adc
and
scas
xchg
add
shl
mov
out
aad
xlat
or
dec
push
int
ret
sar
stc
mov
inc
cmp
or
wrmsr
(bad)
xchg
loopne
fadd
cld
retf
add
in
mov
fcmovnu
addr16
dec
sub
je
int3
sub
fistp
push
xchg
mov
sbb
test
dec
out
call
test
clc
out
in
call
data16
cmp
(bad)
adc
push
and
ror
jl
jbe
stos
xchg
mov
push
mov
ss
(bad)
fisubr
or
rcr
pushf
aam
dec
mov
cmps
pushf
out
aad
or
fstp
fcomp
popa
popa
xchg
in
or
jmp
sti
out
je
imul
jns
mov
cmc
in
cmp
pop
retf
push
test
dec
mov
jbe
enter
fsubr
adc
sub
scas
jb
pop
std
in
pop
dec
pop
rcl
cmove
fs
sbb
and
bnd
fild
mov
jmp
fstp
xor
lods
sbb
arpl
stos
adc
nop
mov
outs
lahf
pop
loopne
push
fsubr
sub
mov
jg
push
lock
not
aam
mov
cmps
les
popf
(bad)
lock
in
jp
jg
dec
repnz
jmp
cmps
fmul
stc
les
lods
push
and
sbb
dec
arpl
sbb
test
or
cmp
jae
adc
aad
shl
in
je
mov
jb
movs
jb
and
mov
push
sub
rcr
sub
jo
mov
mov
out
push
dec
in
in
scas
push
sbb
xor
push
add
dec
cwde
loope
add
dec
(bad)
pop
xlat
cmp
ds
jle
push
rcr
mov
(bad)
in
dec
(bad)
in
sub
not
xchg
shl
xlat
inc
ins
adc
inc
pop
mov
push
(bad)
or
mov
sti
xchg
pop
pop
fild
loope
jns
in
iret
sar
popa
push
mov
adc
icebp
add
int
sahf
addr16
nop
add
imul
xchg
popf
fistp
scas
xor
aad
push
cdq
xchg
mov
daa
out
inc
int
ficomp
cwde
in
inc
jmp
inc
add
scas
push
jnp
(bad)
push
mov
mov
(bad)
ss
dec
in
xchg
xor
push
inc
popa
scas
ins
aad
mov
cli
rcr
loop
cmp
ss
cmp
test
stos
ins
cmp
repz
shl
xlat
jns
pop
jmp
cmps
int
(bad)
clc
pusha
fidiv
popa
out
mov
xchg
icebp
idiv
jl
jo
mov
inc
int
loope
(bad)
xor
sub
or
call
sub
pushf
cmps
push
aaa
and
das
lods
daa
xor
mov
repz
les
ror
lods
pop
xor
push
xchg
push
sub
cmovbe
cs
or
test
aad
ret
ss
les
add
loop
pop
dec
cmps
and
mov
sub
pcmpeqb
pusha
das
fist
ja
out
pushf
jo
mov
imul
mov
jns
push
mov
xchg
sub
in
cli
mov
sub
or
sub
or
mov
cmp
inc
add
xor
repz
ss
psrlw
mov
push
js
mov
jmp
and
mov
push
jle
icebp
push
(bad)
cwde
dec
and
loopne
mov
sub
xor
or
lahf
data16
mov
pushf
lock
(bad)
into
nop
push
dec
aam
das
enter
push
xchg
and
dec
xchg
xchg
add
pushf
movs
sbb
pop
inc
jmp
in
stos
je
dec
fist
push
adc
mov
mov
out
xchg
fst
(bad)
jmp
neg
pop
add
cmp
mov
sub
cs
clc
ret
scas
fild
mov
repnz
jmp
pop
and
ds
scas
xchg
ret
enter
ret
push
mov
jmp
push
mov
xchg
fst
jb
push
sahf
arpl
retf
pusha
xor
sahf
out
ins
int3
jmp
inc
mov
pop
jno
mov
inc
test
xor
xor
sti
sbb
inc
(bad)
repnz
cmove
rcl
pop
add
pop
out
cmp
mov
jb
or
rcl
jp
(bad)
mov
mov
adc
cdq
mov
cld
xor
jbe
fisubr
mov
popf
pushf
imul
imul
push
mov
test
xor
or
pop
or
aas
xor
xor
add
add
dec
(bad)
lock
inc
or
xchg
popa
sbb
add
mov
mov
push
dec
out
scas
mov
jns
loope
or
adc
xchg
aaa
adc
jg
lea
retf
sti
xchg
dec
fmul
minps
mov
push
iret
jo
and
xchg
cmc
gs
clc
rcr
lea
out
cwde
xchg
push
push
adc
pop
imul
sub
push
push
scas
adc
retf
xchg
ja
imul
loopne
int3
dec
jmp
add
xchg
dec
movs
test
jmp
mov
mov
mov
ins
popf
xchg
inc
cli
adc
popf
and
hlt
and
pop
in
pop
scas
sub
push
and
sub
mov
jae
or
dec
push
popa
aaa
(bad)
pop
mov
jne
add
out
xor
xlat
mov
pop
xchg
ins
fwait
jno
dec
mov
lock
sub
(bad)
mov
pop
xor
xchg
mov
iret
cmc
fs
in
mov
ja
lds
lods
movs
push
mov
adc
jnp
inc
nop
push
mov
mov
out
add
iret
test
inc
inc
movs
dec
out
(bad)
fsub
push
adc
std
lock
out
fcom
push
lods
loope
add
pop
push
mov
pmullw
xchg
dec
or
setp
sbb
ret
cmp
leave
cdq
stos
xchg
push
and
mov
hlt
or
loopne
fidiv
or
sbb
clc
xor
retf
or
(bad)
clc
jge
pop
push
sbb
add
jno
or
xchg
in
xor
fwait
(bad)
movs
sbb
or
xor
bound
add
(bad)
mov
pop
out
cld
jb
and
inc
or
jmp
push
and
or
jbe
cmp
cdq
push
pop
mov
mov
imul
int3
mov
es
mov
cmp
xor
mov
adc
ss
mov
enter
ins
pusha
pop
push
mul
aam
sbb
jae
shl
(bad)
push
loope
into
pop
daa
push
sub
xchg
cmp
cs
into
test
cmp
dec
sub
mov
stos
in
push
data16
cmp
int
sbb
pop
rol
inc
dec
pop
lahf
fscale
xchg
fwait
lods
cmp
sub
shl
push
mov
retf
or
mov
(bad)
lds
xor
xor
fwait
mov
dec
or
adc
gs
popf
retf
ret
ret
mov
fsubr
test
inc
xor
mov
pop
sub
aaa
aas
lea
add
xchg
(bad)
sub
in
in
aaa
mov
test
mov
cmp
sti
cmp
out
or
inc
outs
pop
loop
push
sbb
pop
dec
stc
iret
xor
sbb
test
xchg
(bad)
fstp
out
loope
jge
xor
jmp
retf
mov
sub
sbb
cmc
ret
lahf
lock
test
bound
aas
vmwrite
shl
push
call
cs
fstp
pop
test
ret
pop
jns
add
mov
jo
adc
ret
scas
mov
gs
xor
cwde
in
push
add
out
test
iret
push
mov
and
jecxz
outs
inc
add
push
jmp
or
mov
fnsave
dec
sahf
xor
lea
lock
jns
dec
addr16
push
sub
pop
test
xlat
sub
dec
daa
repz
push
mov
mov
ret
cmps
sbb
or
outs
clc
pop
icebp
loop
sbb
xor
pushf
xor
adc
(bad)
aad
add
jl
dec
loop
bswap
in
and
ss
aaa
ins
cmps
mov
popa
jbe
icebp
retf
stos
mov
inc
in
push
push
and
(bad)
les
ds
mov
pop
fadd
jmp
cdq
pop
call
repnz
add
push
es
and
mov
add
ins
jle
call
cmp
lock
mov
out
jno
ins
inc
in
mov
adc
push
add
cmp
sub
adc
sbb
mov
cmp
mov
pusha
inc
aad
shr
pop
das
sahf
fstp
out
cmp
lock
out
out
or
rcr
clc
idiv
sub
mov
adc
out
xor
pop
pop
arpl
cld
cmp
push
push
inc
pop
push
push
das
push
cmp
dec
pop
shl
add
cmp
pop
dec
jmp
imul
jge
inc
dec
jae
outs
sub
xlat
movs
inc
inc
xchg
jo
push
mov
cmp
jle
test
call
jns
push
sbb
mov
mov
cdq
mov
jp
aas
or
ja
cmp
add
lock
sub
lds
je
mov
mov
xchg
and
stos
dec
inc
lods
sub
xchg
mov
push
xlat
sti
rcl
or
pop
pop
outs
mov
dec
popf
mov
iret
into
and
sbb
cli
sbb
mov
into
add
(bad)
cmc
ins
adc
(bad)
repnz
out
inc
fdiv
cmps
sbb
arpl
outs
push
pop
sahf
add
mov
adc
into
int3
idiv
xchg
ret
cmp
push
fisubr
sbb
loopne
add
imul
dec
aaa
mov
arpl
and
cmp
sbb
stos
xchg
pop
nop
pop
(bad)
sub
(bad)
xchg
mov
shr
push
pop
in
mov
lds
mov
mov
push
je
les
fsub
js
sbb
xlat
jge
lods
out
mov
mov
push
out
add
dec
inc
fnstcw
leave
or
popa
aam
stos
and
mov
int
or
arpl
lahf
ret
dec
mov
cmp
push
enter
das
in
cmps
mov
mov
push
sub
pop
mov
xchg
lods
jae
mov
in
(bad)
out
rcr
outs
fst
aas
and
mov
cmps
pop
push
mov
dec
mov
dec
sub
enter
xor
xor
and
movs
lds
fcom
sub
inc
cwde
jmp
xchg
xlat
sbb
sar
data16
push
inc
push
add
sti
int
jno
in
out
call
sbb
adc
outs
xor
sub
push
cli
out
or
mov
(bad)
mov
call
sbb
mov
pop
scas
and
fs
arpl
cmp
jg
and
inc
popf
adc
cmp
pop
xor
out
dec
cmp
sbb
adc
add
pop
cld
mov
xor
sub
mov
jecxz
sub
retf
push
sahf
push
cmps
or
repnz
call
push
icebp
mov
or
mov
mov
sbb
xchg
popf
cli
es
fsubr
jae
rol
mov
mov
sub
dec
xor
pop
inc
sub
les
cmp
std
test
loope
ja
mov
imul
or
mov
and
adc
leave
or
rcl
mov
mov
jmp
xchg
and
call
fld
push
pop
lds
pop
adc
add
das
les
cli
lahf
xor
jl
fild
and
call
es
sbb
pextrw
call
jb
rcl
and
mov
mov
jle
ins
push
pop
pop
xchg
pop
pop
call
mov
call
cdq
pop
jne
mov
mov
cs
ror
xor
jns
or
jge
mov
fldenv
inc
or
sbb
into
iret
pop
inc
adc
fdiv
stos
mov
cli
std
cmp
xor
repnz
cmp
xor
into
gs
(bad)
cmps
push
adc
mov
je
shl
aaa
xchg
outs
and
mov
xchg
push
xor
xor
xchg
mov
int
and
aad
mov
xor
adc
out
xchg
lea
mov
xor
ret
mov
movs
aam
jo
jbe
or
add
test
nop
lds
cmp
icebp
cmp
imul
icebp
ret
das
sub
imul
and
mov
jecxz
mov
xor
cs
jae
ret
in
sbb
mov
fdiv
or
mov
dec
mov
add
mov
daa
push
add
mov
adc
cmps
xchg
jo
movq
into
movs
fmul
dec
sbb
push
in
mov
leave
lahf
and
stos
lea
sub
push
test
clc
out
dec
add
xor
xchg
sbb
xor
dec
sub
fsub
sbb
add
push
push
inc
and
cmps
in
mov
sub
out
adc
stos
call
iret
lds
cmp
pop
fwait
popf
cmp
outs
cmp
cmp
das
mov
sub
or
dec
push
sub
lock
add
repz
mov
movs
cmp
arpl
xor
lods
cmp
cs
sub
cld
jnp
arpl
add
xor
stos
in
jmp
scas
push
push
popa
jne
add
loop
sub
sub
fadd
test
packsswb
xchg
repz
outs
push
shl
push
stc
dec
or
in
cmp
pop
pop
push
pop
test
arpl
fcom
(bad)
mov
sbb
cli
jle
neg
rol
inc
scas
push
repz
es
pop
sub
cmc
call
sbb
es
call
movs
cmps
je
mov
or
or
sti
cmp
pusha
sub
enter
adc
or
and
pushfw
out
push
push
jne
cmp
addr16
push
cmc
add
stos
mov
cmp
gs
and
push
in
(bad)
sbb
xor
or
ins
fs
xor
addr16
dec
arpl
pop
les
outs
or
cmp
pop
dec
xor
sbb
ds
ror
jecxz
cmp
xchg
cmps
push
mov
and
shr
xor
mov
push
pusha
and
lds
add
ins
add
mov
inc
les
mov
mov
mov
call
mov
mov
in
icebp
push
dec
into
mov
cwde
scas
xchg
ret
xor
out
xchg
add
mov
retf
jb
daa
mov
mov
pop
jno
sbb
loope
adc
pop
mov
ss
adc
mov
cmc
call
sub
(bad)
movs
ror
nop
int3
fadd
xor
mov
fcom
lahf
aam
test
jmp
test
xchg
scas
icebp
push
(bad)
loopne
mov
aas
aad
pop
jge
jmp
jecxz
jo
sar
shl
cwde
fsubrp
lods
push
imul
xor
or
ins
pop
ret
inc
xor
lea
or
in
fbld
loopne
dec
cld
push
ret
cmp
aad
fnstsw
xor
jb
adc
iret
inc
movs
cli
in
(bad)
hlt
xor
cmp
clc
or
sbb
cmps
and
fdiv
or
push
retf
xor
mov
pop
scas
mov
test
inc
pop
xchg
jno
ins
xchg
pop
cmc
mov
sbb
pop
or
int
adc
pop
dec
lock
mov
xchg
jmp
or
mov
arpl
jbe
shl
pop
xchg
jecxz
out
lods
iret
mov
in
push
add
je
popf
mov
and
xor
xchg
xchg
shl
outs
sub
cdq
add
cmp
es
mov
jl
mov
shl
adc
dec
and
mov
jmp
inc
dec
dec
and
pop
mov
mov
mov
pop
xor
cli
xor
stc
pop
mov
(bad)
repz
(bad)
mov
cmp
push
inc
dec
call
fsub
mov
jb
daa
sbb
and
es
add
lods
push
loope
or
jmp
jecxz
(bad)
cwde
xchg
fild
dec
sar
test
sbb
lahf
(bad)
or
movs
cmps
test
mov
mov
mov
sub
sbb
jmp
sbb
fdiv
test
add
je
movs
scas
push
mov
fs
je
pop
cmp
pop
and
adc
inc
rcr
in
and
inc
mov
mov
daa
cmps
push
pop
inc
inc
repz
sbb
jle
(bad)
pop
add
lahf
mov
int3
push
push
je
ret
lods
and
test
add
int
ins
push
les
pushf
mov
outs
mov
push
retf
popf
aad
push
je
add
in
add
in
or
retf
pop
push
lock
jecxz
mov
lock
(bad)
sbb
test
jmp
mov
(bad)
lods
das
das
cmp
xchg
sbb
inc
in
and
leave
inc
cmp
push
ret
push
mov
inc
enter
in
outs
pop
and
call
push
cmp
and
aaa
jecxz
jmp
inc
adc
adc
loop
dec
daa
repnz
or
xor
and
dec
imul
out
sub
enter
pop
push
movs
mov
push
ins
mov
cmp
pop
movs
pop
(bad)
in
mov
mov
mov
xor
imul
outs
push
and
scas
addr16
mov
add
sar
dec
in
jle
aad
ds
jmp
sub
call
mov
daa
pop
push
fiadd
mov
sbb
inc
sti
dec
mov
sub
sbb
mov
dec
fstp
or
pop
call
xchg
test
sub
jo
popf
add
jge
ja
mov
mov
adc
es
stos
add
ss
cs
out
fcmovnbe
pop
sbb
sub
jbe
mov
fldenv
adc
fist
(bad)
push
xchg
pop
sbb
sbb
(bad)
in
jmp
aaa
jge
stos
test
popf
mov
lea
inc
mov
cwde
jg
inc
add
mov
int3
aas
add
xlat
or
cmp
xchg
das
or
(bad)
(bad)
imul
scas
mov
loop
cld
into
ret
inc
les
mov
aad
sub
jge
fcom
mov
push
jno
and
(bad)
cmp
pop
cmp
nop
jecxz
xor
ins
xor
imul
fsub
lods
and
jmp
cmc
jg
mov
aad
or
fs
outs
leave
shl
lock
ds
or
mov
or
imul
cmp
add
mov
addr16
sahf
mov
in
mov
xchg
in
bound
lea
or
mov
mov
ins
sub
push
(bad)
sub
scas
test
call
fisttp
pop
loop
lds
jns
or
std
xchg
mov
pop
cmc
adc
jge
add
fld
je
mov
(bad)
mov
outs
(bad)
ins
mov
or
inc
test
ja
aas
arpl
pop
push
aad
mov
fs
cmp
jecxz
lds
or
les
test
push
mov
push
push
sbb
and
jne
aad
aas
cs
shl
mov
and
jnp
cmps
imul
push
loopne
lods
test
jae
push
aas
xchg
add
cmps
add
jns
pop
(bad)
mov
push
jle
repz
jp
sar
popa
and
inc
in
push
repnz
push
jmp
or
movs
div
push
or
cmp
mov
scas
add
push
aaa
or
jne
or
adc
ret
sub
push
jge
les
sbb
lahf
mov
js
clc
leave
mov
add
push
mov
mov
(bad)
jmp
mov
adc
test
xor
xchg
sbb
jno
pop
mov
adc
aas
in
enter
inc
push
dec
xor
or
mov
clc
pop
fdivp
adc
mov
xor
and
push
daa
in
add
sub
cmp
cmp
repz
or
jl
inc
mov
sub
jl
iret
loope
push
mov
or
xor
push
push
xchg
cmc
and
lock
addr16
stc
dec
dec
add
sbb
leave
push
sbb
sub
mov
and
pop
aad
jae
jns
mov
fist
(bad)
pop
icebp
out
jns
ss
cmps
push
(bad)
arpl
imul
dec
and
outs
pop
push
pop
mov
xchg
fmul
inc
dec
mov
jnp
icebp
loop
mov
ja
mov
jge
fidivr
inc
dec
mov
test
xchg
sbb
xchg
ins
frstor
test
xor
nop
jne
jno
les
pop
push
dec
mov
or
mov
pop
scas
fcmovnbe
ins
mov
mov
out
not
mov
dec
cwde
in
dec
nop
mov
xchg
add
add
fcmovbe
jae
or
push
mov
std
aaa
pop
xor
mov
ficomp
sbb
pop
and
adc
cwde
ret
cs
add
push
sbb
cmps
setne
mov
mov
imul
cmc
rol
xchg
dec
les
js
mov
add
mov
aam
jmp
cmc
push
xor
lock
inc
in
mov
pop
mul
dec
mov
lock
cs
call
enter
fimul
jb
xchg
(bad)
sbb
pop
and
aaa
dec
pop
jp
je
jae
out
js
and
xor
mov
jmp
aaa
pop
test
rcl
cmp
dec
call
fistp
sbb
popf
das
addr16
outs
psrlq
shl
sbb
fs
push
and
push
xchg
je
loopne
dec
fwait
mov
hlt
retf
adc
stos
es
jmp
xchg
mov
icebp
sub
or
cmp
sbb
xor
call
retf
dec
test
cmc
xchg
xor
fucom
rcr
jp
jbe
pop
fbld
xor
mov
cdq
iret
jl
xchg
inc
mov
aaa
mov
fcom
(bad)
ficom
nop
inc
sbb
(bad)
xchg
xor
imul
pushaw
jb
inc
(bad)
scas
loopne
ret
and
sbb
scas
jl
cli
dec
xchg
fstp
rcl
lods
xchg
or
out
cdq
std
jns
mov
dec
test
or
fpatan
add
retf
inc
mov
or
std
mov
add
mov
sti
sbb
gs
sub
repz
mov
(bad)
das
adc
nop
iret
mov
jnp
mov
cmp
retf
push
pushf
(bad)
push
es
adc
sub
aad
lods
sbb
or
or
ss
js
sub
out
mov
ret
cmp
or
pusha
add
add
iret
mov
push
xlat
inc
jne
push
push
clc
push
pushf
mov
xchg
push
fistp
call
lods
inc
jno
pop
movs
inc
mov
mov
repz
out
mov
cmp
int
pop
scas
out
popa
pop
xchg
fsubr
inc
inc
cld
je
xchg
cmp
lods
cmp
pushf
ins
or
and
mov
mov
xchg
es
lods
mov
shr
fsub
mov
movs
pop
imul
loope
fisubr
mov
pushf
ss
jmp
dec
push
add
adc
arpl
or
js
lock
sbb
icebp
dec
xor
or
dec
lods
in
sbb
cmp
mov
out
mov
les
mov
fistp
dec
pop
das
(bad)
xor
(bad)
lds
into
push
cwde
or
sbb
add
retf
xchg
dec
xchg
fistp
dec
fchs
not
movs
pusha
rcr
mov
fist
inc
es
retf
pushf
loope
adc
rcl
adc
mov
outs
cdq
push
leave
sub
push
dec
repnz
aas
mov
adc
ss
push
or
xor
iret
lock
mov
add
adc
inc
ror
and
aam
jo
sub
mov
clc
pusha
and
fs
sub
(bad)
out
aaa
or
aas
sub
adc
xchg
ds
stc
es
sub
idiv
pop
xchg
inc
repz
mov
stos
xchg
add
mov
xchg
outs
jge
sti
adc
jbe
jne
xchg
jmp
loopne
pop
mov
inc
cld
adc
lock
inc
xchg
pop
fmulp
mov
pop
(bad)
mov
cmps
int3
out
daa
loope
push
inc
push
and
xchg
sub
or
mov
mov
mov
inc
ja
stc
bound
loope
test
ja
rep
mov
call
aam
cld
stos
cmp
adc
xchg
xchg
cmps
fbstp
out
pop
fstp
cmp
jno
push
ret
sti
(bad)
pushf
sbb
movs
lods
ss
cmps
jns
and
lds
dec
cwde
mov
nop
cmp
sbb
jmp
inc
or
cld
sar
(bad)
sbb
push
pusha
cmp
lahf
or
sbb
add
adc
cli
dec
das
or
(bad)
mov
cmc
popa
xchg
mov
mov
adc
mov
add
or
xor
mov
test
adc
pushf
stos
and
in
mov
jge
adc
adc
dec
cmps
out
and
in
sub
push
or
addr16
cmp
mov
mov
ds
imul
pop
je
leave
out
mov
pop
ins
xor
xchg
pusha
stos
dec
or
pop
stos
add
outs
ds
push
arpl
ffree
pop
fisttp
cli
sub
push
push
push
test
gs
std
nop
push
mov
jns
sbb
out
sbb
shl
push
bnd
add
aas
out
adc
jmp
daa
and
fcomp
pop
or
push
mov
pop
cs
or
fst
and
and
or
push
dec
sti
fs
cmc
movs
jle
push
fwait
inc
cld
inc
les
jb
mov
outs
cmps
or
dec
jle
fbstp
mov
call
mov
test
daa
sahf
loope
mov
inc
in
sahf
pop
inc
inc
scas
adc
aas
push
pop
cmp
sbb
out
aad
push
mov
sbb
sbb
ds
push
cmp
sbb
add
push
add
pop
fwait
popf
(bad)
mov
xlat
test
mov
arpl
js
mov
div
jmp
adc
cld
retf
shr
mov
xor
or
fnsave
jmp
sub
xor
mov
sbb
daa
shr
cmp
(bad)
mov
dec
scas
xor
(bad)
aas
sbb
push
fistp
sub
jno
je
int
ss
push
in
mov
push
mov
push
mov
mov
shr
movs
inc
or
pop
pop
(bad)
loop
pop
pop
mov
call
mov
sbb
(bad)
adc
ja
cmps
adc
or
lea
add
push
idiv
lds
pop
std
adc
mov
loope
dec
or
push
mov
pop
sub
fdiv
out
sbb
dec
pusha
pop
into
and
sub
cmp
mov
mov
push
repz
bound
mov
pop
add
mov
jo
push
push
and
mov
push
mov
fcom
push
jge
inc
mov
je
mov
sbb
(bad)
cdq
cwde
push
sub
ss
mov
cmps
jb
mov
pop
mov
cld
or
ret
cld
test
mov
dec
mov
jns
cmp
push
mov
pop
sbb
pusha
mov
dec
push
push
jmp
lock
into
test
icebp
add
sbb
inc
mov
js
arpl
popa
dec
addr16
call
jb
shr
push
pusha
mov
test
push
outs
pusha
push
test
mov
cmp
(bad)
mov
push
rcl
or
mov
fbld
out
neg
xor
scas
xchg
call
ret
fild
dec
push
cmp
sti
lea
jl
inc
inc
movs
adc
popa
push
pop
pop
ins
(bad)
sbb
fild
push
push
std
xchg
xchg
popf
les
push
dec
fisttp
add
push
mov
mov
sbb
add
push
xchg
dec
bound
data16
int3
stos
mov
jmp
(bad)
pop
sub
lods
mov
loop
pmovmskb
or
popa
mov
sahf
call
and
inc
js
xchg
push
add
fst
adc
lods
xor
or
or
out
jno
xchg
add
jno
arpl
cmc
push
jg
mov
arpl
or
mov
cmp
sti
ret
sbb
aaa
add
or
outs
sbb
pop
mov
and
pusha
sub
out
pop
daa
pop
adc
ficom
pop
imul
jb
pop
mov
pop
(bad)
jnp
cmp
push
sahf
ins
dec
std
ins
(bad)
(bad)
ins
lahf
pop
loope
xlat
retf
cmp
sub
rol
push
xor
pop
retf
mov
jge
and
add
jmp
mov
inc
int
aad
int3
mov
cwde
retf
mov
mov
retf
push
loopne
and
xchg
das
das
enter
cld
or
stos
rcr
aad
jmp
cmp
test
dec
dec
nop
mov
xchg
sqrtps
push
and
ret
adc
das
cs
push
xor
(bad)
nop
or
pop
in
ret
jl
jmp
mov
push
push
cmp
cmc
push
ficomp
ins
push
xlat
fsub
push
xchg
pop
shl
xchg
cmp
fld
call
(bad)
test
jnp
imul
dec
cmp
or
adc
aas
push
xchg
xor
imul
sub
and
ins
iret
mov
mov
xlat
icebp
dec
inc
jl
mov
xchg
cdq
jns
hlt
les
imul
pop
rcr
xchg
jg
mov
xor
into
xchg
into
sbb
les
ins
jg
push
jl
xchg
xchg
add
push
jne
stc
mov
jnp
fld
sub
cld
ss
lock
xor
mov
push
add
movs
mov
ins
(bad)
pusha
bound
imul
sti
shr
pop
dec
test
push
mov
in
outs
xchg
push
lods
cwde
nop
fisub
add
out
pop
ds
icebp
mov
int
inc
rcr
dec
jmp
dec
adc
ja
xor
jge
clc
mov
pop
or
loope
adc
xor
xchg
mov
pop
push
cmp
stos
ret
dec
call
xor
adc
mov
sar
outs
int3
mov
out
sub
(bad)
movs
shl
pop
mov
adc
inc
jmp
int
inc
xchg
jle
(bad)
imul
inc
push
cmps
mov
adc
idiv
cdq
mov
loop
sti
dec
aad
adc
outs
inc
mov
leave
out
xor
mov
jg
dec
lds
xor
inc
inc
ret
sbb
xor
cmp
cs
sbb
movs
jp
ds
les
lds
and
(bad)
mov
pop
(bad)
mov
pop
fisubr
cmp
int3
add
cmps
movs
xchg
gs
add
loop
inc
cli
pushf
inc
test
mov
idiv
mov
inc
sub
hlt
mov
add
test
les
movs
shl
push
test
outs
fidiv
dec
daa
jb
mov
pop
cmp
mov
mov
pop
outs
jno
mov
popf
cmps
push
sbb
add
int3
call
in
inc
pop
in
popw
mov
pop
mov
aas
popf
push
iret
push
out
loopne
dec
loopne
sub
cmps
mov
cmp
iret
out
retf
mov
test
sub
popa
out
(bad)
mov
loope
mov
pavgw
jnp
mov
cwde
(bad)
and
and
pop
jmp
cmps
dec
xor
lahf
shl
push
sub
mov
inc
loope
lods
mov
fist
scas
xor
push
or
mov
mov
lods
push
sbb
fs
out
push
or
push
pop
in
jg
add
test
adc
sub
outs
adc
cmp
or
push
cmp
pop
xor
ffreep
(bad)
and
mov
outs
jae
mov
shl
inc
xor
sub
cmp
or
xor
xor
push
dec
jb
movs
icebp
inc
cmp
adc
imul
dec
sub
add
inc
push
cmp
add
jno
lods
cmp
jbe
xor
adc
jl
clc
and
pushf
cmc
sub
jb
push
jne
das
jnp
pusha
rol
cmc
test
and
dec
(bad)
rcr
fldcw
out
adc
mov
jecxz
repz
imul
lds
(bad)
xchg
in
cmps
jb
add
pop
(bad)
push
mov
mov
jle
pop
pushf
sbb
pushf
pushf
popa
or
std
push
call
dec
pop
push
mov
stc
or
js
stos
xchg
test
fbstp
push
mov
out
dec
mov
mov
dec
push
lods
shl
aam
test
les
scas
push
out
aaa
push
xor
mov
adc
cmp
in
pusha
sbb
cwde
popf
test
sahf
shr
aam
add
xchg
or
fcmovnb
mov
sbb
inc
gs
xchg
fwait
sub
and
add
js
out
popa
inc
dec
call
sbb
in
add
js
rcl
and
jno
inc
mov
inc
push
cld
xor
sub
or
mov
and
push
lea
out
or
jmp
in
or
pop
mov
cld
push
inc
test
xchg
dec
loope
add
sti
sahf
adc
mov
inc
and
mov
test
sub
mov
pop
or
mov
mov
xor
dec
or
add
adc
ds
adc
jp
mov
cmp
int
cld
mov
inc
scas
inc
(bad)
xor
shr
div
stc
ja
imul
jo
dec
(bad)
mov
imul
or
ds
out
add
add
xor
fcomip
test
pop
test
sbb
es
aad
adc
es
mov
scas
js
call
push
lds
je
cld
push
(bad)
outs
jne
(bad)
mov
add
ja
icebp
int3
mov
ficom
popf
jo
popf
and
jmp
dec
dec
js
xlat
in
push
into
je
(bad)
jge
pop
gs
dec
pushf
push
push
stos
scas
inc
push
(bad)
icebp
mov
sub
xchg
fst
jbe
mov
push
rcl
(bad)
lock
and
adc
push
mov
out
mov
lods
or
repnz
or
jns
clc
inc
adc
and
cmps
push
in
daa
(bad)
push
add
les
in
sbb
cmc
ss
rcr
sub
mov
dec
mov
les
mov
int3
outs
cmp
aas
es
lock
mov
mov
sub
int3
pop
popf
and
jo
cmp
mov
or
push
arpl
mov
pop
cmps
mov
inc
mov
repnz
fidiv
pop
cmp
out
test
adc
sti
outs
lods
cli
sub
push
fwait
pop
cmp
sti
das
inc
leave
push
pop
aad
or
inc
shl
in
pop
pushf
js
push
adc
cmp
arpl
or
pop
ss
xchg
scas
out
dec
in
mov
sbb
das
mov
cs
test
rcr
cs
jo
lea
into
adc
dec
mov
and
jp
test
popa
les
add
jge
mov
shl
outs
jge
jae
fwait
hlt
mov
dec
add
daa
push
nop
mov
xor
outs
je
shl
push
pop
sti
aad
loopne
lea
(bad)
int3
leave
stc
or
xor
and
popf
adc
mov
pusha
cmp
int
mov
push
cmc
inc
dec
scas
or
jnp
lds
movs
mov
xchg
popf
leave
cmp
mov
call
sub
(bad)
repz
cwde
test
neg
adc
shl
daa
pop
pop
call
mov
hlt
xor
inc
xor
mov
add
hlt
or
cmc
(bad)
fild
in
add
aas
dec
cmp
mov
(bad)
push
icebp
(bad)
stc
lock
inc
lods
call
leave
mov
jg
movs
jg
sbb
or
pop
sbb
or
dec
(bad)
xlat
mov
and
mov
cmp
mov
adc
and
test
push
fidivr
cwde
mov
fwait
mov
div
push
xor
outs
outs
or
fnstsw
pop
ret
imul
fidiv
mov
fcom
dec
jl
lods
nop
sahf
xor
mov
sbb
and
sbb
mov
sub
mov
test
adc
adc
out
mov
pop
or
mov
cmps
daa
pop
mov
jbe
stc
xchg
jg
clc
xchg
sahf
xlat
sub
jo
test
pop
sub
xchg
nop
loopne
cmp
pop
adc
cld
test
push
jno
dec
js
or
cdq
stc
or
pop
or
push
pop
xchg
call
mov
cmp
push
xchg
cmp
push
mov
push
xor
jge
nop
mov
add
jb
mov
es
push
or
pushf
bound
push
jnp
xor
pushf
ds
movs
adc
add
add
fld
ret
mov
xor
xchg
stos
sub
dec
pop
add
push
sbb
adc
pushf
pop
sub
jecxz
push
pop
das
sbb
mov
xor
call
(bad)
and
scas
sub
cwde
and
add
enter
or
hlt
sbb
dec
jmp
push
xlat
ins
xchg
enter
push
inc
cmp
cld
xor
pop
mov
out
push
pop
rcr
xchg
lock
mov
lods
add
xor
pop
(bad)
sub
cmp
push
sbb
imul
dec
lds
stos
pop
call
mov
mov
aad
or
shl
jmp
mov
outs
dec
test
into
ins
sbb
pop
addr16
mov
cli
cmp
or
and
jge
(bad)
xchg
ror
xorps
mov
mov
(bad)
popf
gs
jmp
retf
pop
pop
lock
add
pop
mov
outs
jns
mov
(bad)
cmc
aas
push
cmps
jecxz
xlat
pop
imul
movs
test
cmp
outs
dec
(bad)
retf
xchg
retf
lea
scas
mov
xor
dec
arpl
sub
add
sbb
sbb
adc
mov
(bad)
mov
cld
xor
sbb
jmp
push
inc
and
retf
sub
mov
mov
adc
int3
rol
push
jno
xchg
out
or
stc
inc
out
ds
cmp
cld
add
test
mov
jbe
movs
mov
sub
in
sub
loopne
pop
mov
dec
aas
mov
cmps
cmp
fcomp
(bad)
out
mov
cmp
in
cmp
push
sar
dec
mov
jne
arpl
xlat
or
mov
push
cmp
lock
inc
pop
jl
push
or
push
mov
fbstp
fisub
mov
rcl
pop
mov
iret
leave
adc
add
inc
sub
pop
push
push
cli
jns
sar
or
jbe
mov
pop
adc
mov
dec
xchg
xchg
nop
push
mov
mov
push
and
cwde
int3
popf
in
ret
sub
rcl
sbb
stos
jle
xchg
int3
cld
mov
jg
adc
ror
pop
push
or
test
mov
movs
jl
pop
shr
dec
cmp
push
pop
dec
xchg
popa
mov
sti
out
popa
push
or
mov
ret
sar
cli
icebp
into
pop
fsubr
fisubr
test
in
push
sti
push
ror
inc
enter
xchg
jns
mov
cmpxchg
in
xor
mov
sbb
jle
jge
(bad)
sbb
ins
pop
shl
mov
pop
add
pop
aas
mov
xchg
jl
mov
pop
scas
or
xor
(bad)
lods
retf
jbe
(bad)
scas
retf
icebp
aam
call
das
mov
sbb
xor
fmul
stos
dec
xor
shl
jae
in
pop
push
iret
not
pop
clc
add
jp
jp
dec
in
or
push
leave
in
or
push
fmul
loope
stc
hlt
sti
movs
fwait
lods
mov
push
pop
inc
adc
lds
cmps
rol
scas
fidiv
push
push
mov
aas
retf
cmp
fld
inc
cmps
test
sbb
lds
jne
adc
iret
xlat
or
push
pop
jmp
stos
xchg
jmp
dec
push
sub
(bad)
push
and
push
pop
pop
cmp
jns
sub
test
push
dec
and
push
mov
(bad)
(bad)
fnsave
sbb
xchg
enter
inc
push
dec
inc
add
add
add
add
or
add
jbe
xor
xor
add
add
add
add
add
jle
add
or
add
sldt
and
jb
outs
addr16
add
add
add
add
push
push
add
add
add
add
inc
push
dec
inc
add
add
add
add
add
inc
ins
outs
bound
add
add
add
inc
push
add
or
add
add
add
add
add
add
add
adc
add
or
add
mov
add
adc
add
adc
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
in
add
add
add
add
add
add
add
add
add
add
add
add
add
inc
add
add
add
and
or
ins
add
add
add
add
jbe
push
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
or
add
add
add
add
or
add
add
add
add
add
add
add
adc
ss
add
add
add
add
or
add
add
add
add
add
add
add
adc
dec
or
add
ins
add
add
add
or
add
ja
add
adc
test
fiadd
add
add
add
add
xchg
sbb
add
add
add
add
add
add
add
add
add
xchg
add
cmp
and
add
add
add
add
add
add
add
add
and
add
add
add
enter
add
xchg
add
add
and
add
add
add
cmp
add
add
xchg
add
xchg
add
add
add
add
add
add
add
add
add
and
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
xchg
add
xchg
add
add
add
add
xchg
add
or
adc
inc
and
add
add
add
add
add
add
add
add
add
add
xchg
add
add
add
add
add
add
add
add
adc
loope
int
adc
mov
add
add
add
rol
adc
xchg
and
add
add
add
add
add
add
adc
test
movs
and
add
add
add
push
in
add
add
add
add
add
adc
adc
or
adc
les
add
add
add
shl
add
add
add
or
adc
fsub
add
add
add
add
and
add
add
add
add
and
add
add
add
add
and
add
add
add
add
and
add
add
add
add
and
add
add
add
add
and
add
add
add
add
and
add
add
add
add
and
add
add
add
add
and
xchg
add
or
add
add
xchg
add
adc
or
add
add
xchg
add
or
adc
adc
xchg
add
or
adc
adc
add
add
xchg
add
add
add
and
xchg
add
or
adc
sbb
add
add
xchg
add
add
and
xchg
add
add
xchg
add
add
and
xchg
add
add
xchg
add
or
add
add
and
xchg
add
or
add
add
xchg
add
adc
cmp
add
add
xchg
add
or
add
add
add
add
xchg
add
or
add
add
add
add
add
add
add
add
xchg
add
or
add
add
add
add
add
add
add
add
xchg
add
or
add
add
add
add
add
add
add
add
xchg
add
or
adc
pop
and
xchg
add
or
adc
pusha
and
xchg
add
or
adc
fs
xchg
add
adc
ins
and
xchg
add
jo
add
add
xchg
add
add
add
add
add
add
add
add
xchg
add
or
add
add
add
add
add
add
add
add
add
xchg
add
or
add
add
add
add
add
xchg
add
or
add
add
add
add
add
xchg
add
adc
pushf
and
xchg
add
or
adc
mov
add
add
add
xchg
add
or
adc
test
add
add
xchg
add
add
add
xchg
add
add
add
add
add
xchg
add
add
add
add
add
xchg
add
or
add
add
and
xchg
add
or
add
add
and
xchg
add
adc
int3
and
xchg
add
add
and
xchg
add
or
add
add
and
xchg
add
or
add
add
and
xchg
add
add
and
xchg
add
or
add
add
and
xchg
add
or
adc
in
add
add
xchg
add
or
adc
call
add
add
add
and
xchg
add
or
adc
lock
xchg
add
add
and
xchg
add
adc
cld
and
xchg
add
add
add
add
xchg
add
or
add
add
add
add
xchg
add
or
add
add
add
add
xchg
add
or
add
add
add
add
xchg
add
or
add
add
add
add
xchg
add
or
add
add
add
add
xchg
add
or
sbb
add
add
xchg
add
or
sbb
add
add
xchg
add
or
and
add
add
xchg
add
or
and
add
add
xchg
add
adc
sub
add
add
xchg
add
or
adc
xor
add
add
xchg
add
or
adc
xor
add
add
xchg
add
or
adc
cmp
add
add
xchg
add
add
add
add
xchg
add
add
add
add
xchg
add
add
add
add
add
add
add
add
xchg
add
or
dec
add
add
xchg
add
or
push
add
add
xchg
add
or
push
add
add
xchg
add
adc
pop
add
add
xchg
add
push
or
adc
pusha
add
add
xchg
add
push
or
adc
fs
add
xchg
add
push
or
adc
push
add
add
add
add
add
add
add
add
add
xchg
add
or
adc
je
add
add
xchg
add
or
adc
js
add
add
xchg
add
or
adc
jl
add
add
xchg
add
add
add
add
add
xchg
add
adc
mov
add
add
xchg
add
add
add
add
add
xchg
add
push
or
adc
cwde
add
add
xchg
add
push
or
adc
pushf
add
add
xchg
add
push
or
adc
mov
add
add
add
xchg
add
or
adc
test
add
add
xchg
add
(bad)
add
add
xchg
add
add
add
add
add
xchg
add
adc
add
add
dec
add
add
add
add
add
xchg
add
add
aad
add
add
out
add
add
test
or
add
add
jbe
add
add
movs
add
add
add
add
add
add
add
add
add
add
add
add
xor
add
add
cmp
add
add
add
add
add
add
add
sbb
add
add
add
and
aad
leave
add
push
add
add
add
add
fild
inc
add
add
xchg
push
repz
add
add
add
add
add
or
add
add
add
mov
add
daa
add
add
and
add
in
or
outs
add
add
or
push
add
push
add
push
add
add
add
add
add
adc
add
add
add
add
sbb
add
add
add
add
add
and
add
add
aaa
add
add
add
inc
dec
dec
inc
xor
dec
inc
outs
inc
fs
push
push
add
jne
jne
ins
jae
outs
jb
imul
gs
cs
imul
inc
outs
jb
jae
in
xchg
in
mov
mov
in
mov
mov
in
mov
mov
in
mov
mov
in
mov
mov
in
movs
in
mov
mov
in
xchg
mov
in
test
mov
in
mov
jb
jae
jne
arpl
add
cmp
jno
imul
xor
xor
outs
inc
push
ja
add
arpl
outs
jb
ins
js
push
jp
inc
push
ins
push
add
je
imul
dec
bound
arpl
jns
je
ins
add
xor
push
push
dec
pop
dec
imul
inc
jae
gs
bound
push
jns
je
ins
cs
gs
arpl
outs
add
je
outs
fs
outs
outs
add
arpl
je
outs
outs
add
je
add
je
xor
jns
pop
dec
xor
dec
pop
jae
inc
add
jp
xor
add
push
cmp
pop
bound
xor
add
push
ins
inc
outs
push
inc
popa
inc
inc
pushw
add
push
push
xor
jno
dec
add
bound
dec
push
ins
push
push
jbe
xor
xor
jb
inc
aaa
push
dec
dec
push
add
push
push
xor
push
push
arpl
cmp
add
add
jb
outs
add
dec
xor
xor
ins
push
cmp
outs
fs
add
pop
inc
xor
imul
inc
fs
inc
xor
dec
outs
dec
cmp
inc
outs
inc
arpl
push
push
arpl
push
ja
inc
push
imul
imul
push
push
jae
add
pop
push
push
jo
inc
aaa
ss
push
add
jb
ins
inc
jb
popa
jns
je
jb
bound
add
arpl
add
jns
popa
ins
jne
push
popa
imul
jae
gs
cs
outs
ins
ins
arpl
outs
jae
inc
outs
gs
arpl
addr16
dec
gs
dec
xor
jb
inc
je
push
bound
jno
add
push
je
jbe
jbe
dec
pop
pop
jae
add
outs
jo
jb
jns
outs
outs
add
ss
inc
bound
xor
dec
jae
push
bound
inc
add
jno
pop
jns
dec
data16
je
xor
gs
cmp
jns
dec
outs
ins
add
inc
fs
arpl
outs
dec
pop
inc
pop
push
add
push
inc
xor
xor
pop
xor
push
push
gs
aaa
dec
push
aaa
aaa
push
ins
dec
arpl
xor
outs
js
addr16
jbe
dec
jne
inc
gs
jp
cmp
ins
add
imul
jns
push
add
imul
dec
pop
jbe
push
add
imul
ja
push
bound
gs
ins
xor
inc
popa
js
xor
add
xor
outs
xor
dec
pop
add
dec
fs
ins
je
inc
cmp
add
xor
imul
xor
xor
outs
inc
js
add
inc
pop
pop
jns
dec
jno
dec
jp
dec
add
outs
xor
jns
inc
xor
ja
cmp
inc
ins
ja
jne
imul
jbe
dec
push
js
dec
ins
outs
jae
pop
add
aaa
outs
push
je
dec
inc
jb
push
add
jo
dec
xor
dec
imul
dec
jae
jb
dec
add
je
dec
gs
popa
addr16
sub
stos
loop
mov
sub
scas
loop
lods
loop
stos
loop
scas
loop
stos
loop
lods
loop
mov
sub
loop
(bad)
loop
stos
loop
mov
sub
loop
mov
or
scas
loop
mov
sub
(bad)
loop
scas
loop
scas
loop
scas
loop
(bad)
loop
stos
loop
lods
loop
(bad)
loop
scas
loop
(bad)
loop
scas
add
jae
popa
addr16
outs
js
push
push
imul
jae
ins
je
loop
mov
sub
(bad)
loop
lods
loop
(bad)
loop
stos
loop
lods
loop
mov
or
(bad)
loop
mov
sub
mov
sub
stos
loop
mov
or
scas
loop
lods
loop
stos
loop
stos
loop
stos
loop
(bad)
loop
stos
loop
scas
loop
stos
loop
scas
loop
stos
loop
stos
loop
lods
loop
stos
loop
(bad)
loop
stos
loop
stos
loop
scas
add
je
jns
gs
or
stos
loop
lods
loop
(bad)
loop
mov
sub
loop
stos
loop
stos
loop
mov
sub
stos
loop
lods
loop
mov
sub
stos
loop
stos
loop
stos
loop
mov
sub
loop
scas
loop
stos
loop
lods
loop
stos
loop
lods
loop
scas
loop
lods
loop
stos
loop
scas
loop
stos
loop
lods
loop
(bad)
loop
scas
add
je
gs
outs
fs
loop
(bad)
loop
(bad)
loop
(bad)
loop
mov
sub
stos
loop
stos
loop
lods
loop
stos
loop
(bad)
loop
stos
loop
(bad)
loop
stos
loop
lods
loop
mov
sub
stos
loop
scas
loop
mov
sub
stos
loop
stos
loop
scas
loop
(bad)
loop
scas
loop
mov
sub
lods
loop
lods
loop
stos
loop
(bad)
loop
lods
loop
scas
loop
scas
loop
scas
add
pop
inc
jno
popa
ins
imul
sub
lods
loop
(bad)
loop
mov
or
mov
sub
scas
loop
lods
loop
stos
loop
lods
loop
(bad)
loop
scas
loop
lods
loop
scas
loop
lods
loop
scas
loop
(bad)
loop
stos
loop
scas
loop
scas
loop
stos
loop
stos
loop
scas
loop
scas
loop
lods
loop
stos
loop
lods
loop
lods
loop
scas
loop
scas
loop
scas
loop
(bad)
loop
mov
sub
outs
fs
popa
jae
add
jbe
imul
sub
mov
sub
stos
loop
stos
loop
lods
loop
lods
loop
lods
loop
stos
loop
scas
loop
lods
loop
lods
loop
stos
loop
scas
loop
mov
sub
scas
loop
lods
loop
lods
loop
(bad)
loop
scas
loop
stos
loop
mov
sub
stos
loop
scas
loop
stos
loop
(bad)
loop
lods
loop
mov
sub
(bad)
loop
mov
sub
sub
stos
loop
(bad)
loop
scas
loop
stos
loop
stos
loop
scas
loop
lods
loop
lods
loop
scas
loop
stos
loop
lods
loop
lods
loop
scas
loop
stos
loop
stos
loop
lods
loop
mov
sub
stos
loop
scas
loop
(bad)
loop
mov
sub
loop
stos
loop
mov
sub
scas
loop
(bad)
loop
mov
or
scas
add
je
jb
jo
jb
jns
loop
scas
loop
stos
loop
mov
or
lods
loop
mov
sub
(bad)
loop
stos
loop
stos
loop
mov
or
lods
loop
lods
loop
stos
loop
scas
loop
mov
sub
stos
loop
(bad)
loop
scas
loop
lods
loop
scas
loop
(bad)
loop
(bad)
loop
mov
sub
scas
loop
lods
loop
stos
loop
(bad)
loop
lods
loop
stos
loop
scas
add
je
popa
ins
jne
add
sub
stos
loop
stos
loop
stos
loop
lods
loop
lods
loop
lods
loop
scas
loop
lods
loop
mov
sub
lods
loop
stos
loop
(bad)
loop
scas
loop
(bad)
loop
scas
loop
mov
sub
lods
loop
mov
sub
stos
loop
lods
loop
scas
loop
stos
loop
stos
loop
stos
loop
scas
loop
stos
loop
mov
or
ins
inc
pop
cmp
js
jb
pop
jp
add
inc
inc
pop
ja
xor
push
add
jne
push
pop
imul
outs
fs
xor
dec
outs
inc
outs
push
push
dec
add
inc
xor
cmp
jbe
arpl
imul
jb
push
cmp
js
push
cmp
xor
jne
add
cmp
inc
push
arpl
jb
cmp
jbe
gs
add
dec
push
dec
jns
jb
dec
ins
dec
inc
cmp
push
cmp
je
push
dec
xor
je
dec
fs
cmp
xor
xor
bound
inc
aaa
push
dec
add
jno
jb
dec
push
jo
jb
xor
xor
push
dec
ins
jbe
jp
dec
inc
push
xor
push
inc
ins
dec
xor
ss
jbe
dec
inc
dec
popa
popa
xor
cmp
add
xor
data16
xor
push
je
add
ins
dec
ja
xor
xor
jb
push
add
dec
ss
dec
push
dec
inc
add
inc
xor
xor
ja
add
inc
jp
push
xor
dec
imul
imul
dec
js
push
ins
aaa
addr16
add
inc
addr16
dec
jno
push
pop
jbe
add
xor
push
pop
dec
xor
dec
js
dec
je
bound
add
inc
ja
jo
jae
dec
arpl
ins
imul
dec
dec
push
push
imul
bound
dec
add
inc
push
aaa
jae
dec
popa
push
push
dec
dec
push
popa
push
jo
add
push
data16
inc
pop
pop
imul
push
addr16
imul
dec
jns
popa
jne
jbe
jo
cmp
pop
xor
dec
push
push
xor
push
inc
push
xor
inc
add
xor
push
push
inc
dec
dec
add
dec
xor
ins
outs
dec
jo
dec
xor
js
jbe
add
push
push
fs
arpl
pop
jne
outs
imul
xor
aaa
bound
dec
jb
inc
xor
dec
xor
add
jns
push
jne
popa
outs
push
dec
push
arpl
inc
push
dec
jno
inc
xor
push
dec
add
pop
ja
outs
xor
dec
inc
jp
xor
ins
outs
push
inc
jns
arpl
popa
ss
addr16
cmp
inc
dec
js
jne
jo
jne
inc
jno
cmp
jae
add
dec
addr16
cmp
cmp
add
jae
push
arpl
xor
add
push
cmp
jo
ja
inc
dec
push
jae
dec
push
add
dec
push
popa
pop
add
jae
data16
dec
fs
dec
dec
ins
push
jne
inc
push
imul
outs
add
jae
ins
jae
xor
ins
outs
add
push
push
jbe
push
cmp
add
jb
push
ins
ss
jae
dec
addr16
jae
add
js
push
jns
fs
dec
push
inc
cmp
xor
add
popa
cmp
dec
dec
push
outs
xor
ins
pop
outs
addr16
xor
jae
add
inc
outs
jb
arpl
outs
inc
push
imul
jp
aaa
dec
dec
jae
jne
push
je
addr16
dec
add
jo
jb
arpl
pushw
cmp
inc
inc
dec
inc
add
xor
dec
xor
ins
push
fs
outs
ja
add
inc
outs
jp
dec
inc
outs
outs
outs
ins
inc
push
outs
add
dec
popa
jbe
pop
imul
fs
inc
dec
jno
add
xor
imul
inc
ss
dec
push
jb
xor
outs
jne
xor
push
imul
push
dec
push
jae
add
dec
jp
dec
push
xor
xor
cmp
add
push
popa
push
popa
inc
inc
imul
inc
dec
push
jae
dec
imul
jns
inc
add
xor
imul
arpl
imul
pop
outs
add
xor
imul
inc
jns
aaa
xor
inc
bound
jp
jns
dec
inc
cmp
push
outs
push
jp
dec
add
inc
inc
cmp
xor
xor
push
add
dec
outs
inc
ins
push
ins
cmp
xor
inc
add
inc
pop
push
push
outs
push
push
xor
push
jb
add
jb
addr16
xor
push
jp
cmp
imul
dec
dec
outs
add
xor
inc
xor
pop
fs
inc
push
xor
pop
outs
push
dec
popa
pop
inc
jb
push
dec
imul
inc
jne
js
dec
xor
inc
arpl
outs
add
xor
popa
dec
dec
push
dec
je
imul
xor
gs
inc
pop
xor
add
jae
dec
addr16
jo
cmp
xor
arpl
xor
imul
push
gs
add
inc
ins
gs
push
inc
add
inc
inc
dec
push
js
inc
push
gs
aaa
jno
jp
aaa
add
dec
popa
cmp
ins
cmp
dec
add
ja
push
dec
jbe
inc
dec
je
xor
pop
dec
jo
dec
outs
push
push
jbe
push
inc
add
outs
dec
cmp
dec
dec
inc
xor
dec
push
push
add
push
push
jne
push
push
add
push
jne
xor
pop
dec
pop
push
dec
imul
push
aaa
push
push
inc
xor
cmp
outs
xor
dec
outs
push
pop
cmp
inc
push
push
js
push
inc
push
push
ja
fs
inc
ins
jae
xor
ins
push
dec
add
dec
ja
push
imul
pop
jb
jno
add
jne
pop
push
ja
inc
jo
jbe
xor
cmp
jne
inc
cmp
jo
xor
outs
jne
jo
add
inc
cmp
imul
push
outs
arpl
add
jbe
addr16
data16
js
jne
outs
inc
aaa
addr16
push
push
jno
jne
js
add
xor
dec
dec
gs
add
ins
arpl
dec
push
xor
push
xor
data16
xor
xor
push
dec
jbe
imul
addr16
push
add
xor
dec
popa
arpl
cmp
push
jno
jae
xor
dec
xor
jno
push
imul
push
js
xor
inc
add
jp
push
ins
push
ja
xor
arpl
jns
inc
dec
je
inc
dec
gs
push
add
jno
ja
arpl
dec
jb
je
ins
ja
inc
add
ja
push
ja
dec
push
push
add
xor
push
gs
xor
push
ja
add
dec
inc
push
popa
xor
jae
ja
push
jne
je
ins
gs
outs
ins
jo
je
bound
imul
bound
add
jae
gs
cs
jne
je
ins
gs
outs
ins
jo
ins
gs
gs
imul
ins
jo
ins
popa
je
outs
outs
push
gs
popa
js
je
outs
outs
jae
je
jb
bound
add
jbe
jb
imul
inc
outs
fs
je
jb
bound
add
jae
gs
cs
arpl
imul
jns
jae
je
add
add
add
add
add
outs
add
add
add
add
add
or
ins
add
add
add
add
jae
je
add
add
add
outs
add
jb
arpl
add
add
add
outs
add
jb
arpl
add
popa
add
popa
add
add
add
dec
cmp
dec
sub
dec
outs
dec
dec
dec
dec
dec
adc
xor
dec
or
dec
cmp
dec
jnp
or
dec
dec
gs
inc
dec
push
dec
cs
push
dec
add
inc
dec
push
dec
and
dec
add
jae
je
add
add
add
ins
add
arpl
je
imul
add
jae
jae
add
bound
ins
add
add
inc
add
je
inc
add
add
jne
je
imul
inc
add
jae
add
bound
ins
add
add
inc
add
je
dec
add
push
add
je
add
add
dec
cmovle
dec
sub
dec
adc
dec
cmp
dec
sub
dec
cmp
sbb
dec
push
dec
xor
dec
sub
je
sbb
aaa
pop
dec
sbb
dec
dec
dec
js
adc
dec
imul
dec
dec
ja
or
dec
sub
dec
sub
dec
pop
dec
dec
dec
cs
pop
dec
push
dec
or
dec
es
xor
inc
imul
dec
pop
dec
or
dec
outs
dec
adc
ins
dec
jg
addr16
sbb
dec
sub
dec
ins
dec
xor
dec
push
dec
cmp
dec
inc
dec
push
dec
add
dec
inc
dec
pop
dec
cmp
dec
popa
dec
add
push
add
jae
je
add
add
je
jb
imul
pop
add
add
inc
add
je
push
add
ins
add
add
pop
push
add
jae
je
add
add
add
jne
jb
imul
add
jb
jns
jo
je
outs
add
jb
popa
add
push
add
imul
add
add
add
outs
add
add
add
pop
dec
add
jns
add
add
dec
add
popa
add
adc
je
jb
jns
push
add
imul
add
push
add
jae
je
add
add
add
ins
add
arpl
je
imul
add
add
add
add
outs
add
outs
add
or
jbe
outs
add
add
or
popa
add
add
pop
push
add
jae
je
add
add
add
jne
jb
imul
add
jb
jns
jo
je
outs
add
jb
popa
add
push
add
inc
add
jns
jo
je
outs
add
add
outs
add
data16
jb
ins
add
daa
push
add
popa
add
jae
data16
jb
ins
add
imul
ins
add
ins
add
arpl
imul
or
outs
add
je
push
add
jae
je
add
add
add
ins
add
arpl
je
imul
add
jb
outs
add
add
je
jns
dec
add
data16
add
push
add
je
push
add
ins
add
add
pop
push
add
jae
je
add
add
add
jne
jb
imul
add
jb
jns
jo
je
outs
add
jb
popa
add
push
add
jns
ins
add
add
add
arpl
inc
add
add
jb
imul
ins
add
pop
inc
add
add
je
add
add
jb
jns
jo
je
outs
add
add
push
add
jae
je
add
add
arpl
je
imul
je
outs
add
add
add
je
add
outs
add
je
popa
add
arpl
add
add
pop
rol
icebp
inc
scas
mov
ret
add
mov
pop
push
sbb
mov
add
add
pop
adc
push
sbb
sbb
or
or
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
add
push
push
pop
add
add
sbb
add
sbb
or
or
add
push
push
sbb
sbb
and
add
add
add
pop
add
sbb
sbb
adc
sbb
and
add
add
add
add
add
add
push
pop
add
sbb
add
push
add
add
sbb
or
add
sbb
push
add
add
sbb
add
sbb
sbb
push
add
adc
push
add
push
add
or
adc
add
push
push
push
and
sbb
sbb
sbb
cmp
adc
sbb
adc
adc
add
sbb
sub
add
add
push
add
push
jb
jo
outs
outs
inc
js
gs
imul
ja
add
add
or
add
or
add
add
sbb
jns
je
ins
cs
arpl
imul
imul
cs
arpl
imul
jae
imul
imul
ins
jae
outs
jb
imul
jae
outs
outs
cmp
xor
xor
inc
jne
je
jb
cmp
jb
ins
sub
push
jne
ins
imul
imul
bound
aaa
popa
xor
cmp
xor
xor
cmp
push
imul
gs
imul
outs
outs
add
add
add
add
add
add
add
add
add
add
add
add
add
outs
jb
js
dec
popa
imul
jb
gs
ins
add
add
add
and
