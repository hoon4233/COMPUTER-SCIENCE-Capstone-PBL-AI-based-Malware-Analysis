scas
rcl
mov
aaa
xchg
leave
ficom
xchg
ds
adc
xor
mov
adc
mov
push
adc
cmp
int3
inc
shl
in
(bad)
ds
push
xchg
pop
pusha
es
ds
adc
mov
adc
sbb
arpl
push
movs
addr16
jmp
sbb
jmp
pop
mov
adc
fwait
mov
jmp
out
sti
pushf
xchg
ds
adc
pusha
(bad)
rol
mov
inc
shr
xchg
push
lahf
jnp
fist
push
inc
lahf
adc
popa
ror
ret
imul
adc
xchg
inc
shr
retf
push
lahf
popf
adc
pop
mov
adc
fwait
adc
adc
(bad)
sbb
(bad)
call
lahf
sahf
rol
push
push
imul
nop
imul
lahf
adc
xor
nop
jmp
fwait
adc
inc
leave
inc
sbb
cwde
rcl
adc
sbb
cmp
daa
jl
cwde
ret
adc
das
push
xchg
mov
pop
xor
das
push
xchg
push
lahf
adc
jl
cwde
mov
int
sahf
stos
add
push
xchg
mov
daa
daa
jl
dec
enter
sbb
ret
arpl
imul
mov
push
mov
add
ins
ja
imul
adc
loope
fwait
pushf
sbb
xchg
in
ret
mov
cwde
in
adc
loope
stos
pushf
jle
pusha
in
push
imul
xchg
jg
popa
in
push
ds
push
xchg
lahf
adc
xor
lahf
nop
push
ss
shl
pop
cmc
adc
(bad)
mov
xchg
ds
sbb
loop
xchg
mov
jmp
aad
nop
outs
shr
mov
lahf
sti
movs
inc
lahf
adc
xchg
in
mov
(bad)
xchg
outs
xchg
ds
xchg
xchg
dec
leave
gs
dec
std
sbb
mov
dec
cwde
stos
xchg
ds
adc
aas
daa
jl
jns
sar
aas
lahf
adc
ds
adc
shl
daa
jl
jnp
fist
(bad)
pop
push
ss
ds
adc
pop
imul
das
mov
push
pop
mov
pushf
retf
sbb
xchg
push
lahf
jns
push
mov
aad
div
daa
jl
jnp
mov
adc
jecxz
xchg
shr
mov
shr
mov
das
push
xchg
(bad)
(bad)
fs
ds
(bad)
orps
movs
inc
lahf
adc
sti
mov
ds
adc
call
ja
loopne
lahf
inc
shr
loope
rcr
into
sub
push
push
lahf
jns
push
lahf
jns
push
lahf
adc
jle
sti
ins
inc
lahf
adc
std
push
aam
jns
adc
pop
clc
into
push
lahf
sahf
adc
sub
push
aas
lahf
sahf
adc
sub
push
inc
lahf
adc
(bad)
arpl
scas
in
aas
test
imul
lahf
adc
xchg
cs
cmp
xchg
pusha
sub
add
in
fbld
neg
fistp
fwait
push
jbe
push
(bad)
sahf
jmp
stc
adc
outs
adc
outs
cmc
adc
add
jns
push
lahf
in
loop
pusha
data16
(bad)
and
ds
aad
stc
sti
xor
cmp
pop
jmp
shr
push
inc
lahf
adc
clc
pusha
imul
imul
daa
sbb
outs
aas
jmp
aad
call
push
aam
(bad)
fisttp
pop
inc
push
fcmovne
inc
rol
jmp
(bad)
push
aam
jnp
inc
jmp
lahf
adc
xor
lahf
(bad)
(bad)
imul
(bad)
je
push
sub
mov
loop
pusha
imul
imul
inc
lahf
adc
(bad)
je
cmps
(bad)
(bad)
xchg
mov
lahf
dec
leave
neg
fistp
mov
leave
inc
sbb
xchg
aam
(bad)
enter
adc
outs
mov
jecxz
jnp
in
into
push
push
jg
(bad)
push
ds
arpl
sbb
imul
jge
in
push
outs
mov
neg
jnp
in
ficom
push
dec
mov
jmp
cmp
cmps
aad
scas
in
jl
adc
imul
cwde
ret
lods
xchg
cmp
lods
add
ret
loop
fcomp
xlat
mov
data16
in
ror
adc
xchg
(bad)
loop
adc
imul
xchg
rol
ficom
xchg
fcomp
xlat
mov
data16
sub
rol
adc
lahf
mov
nop
pop
rcr
stos
aas
lahf
data16
pop
(bad)
cwde
mov
daa
in
push
gs
rol
mov
stos
xchg
ds
adc
jmp
dec
xchg
cwde
retf
xchg
imul
in
adc
jne
mov
repnz
ds
push
jecxz
fst
sbb
xchg
call
mov
sub
xchg
aad
aas
lahf
in
push
leave
je
push
(bad)
mov
sbb
xchg
cdq
add
xchg
aas
lahf
in
push
aam
xchg
imul
in
push
cld
mov
push
stos
arpl
imul
pop
xchg
xchg
aas
lahf
in
push
ds
in
enter
push
imul
adc
add
adc
fwait
stc
(bad)
es
inc
sbb
arpl
arpl
cli
jmp
jnp
call
ja
out
ds
cwde
jmp
inc
push
jmp
push
les
fstp
out
(bad)
call
test
scas
loopne
lds
xchg
aad
es
cwde
rol
push
push
jnp
(bad)
pusha
pop
jae
rcr
push
push
imul
pop
std
retf
mov
enter
pop
push
imul
repnz
mov
out
push
cld
mov
push
imul
aad
sti
jne
lahf
adc
xchg
test
(bad)
mov
in
jmp
push
mov
shl
mov
and
pop
inc
outs
inc
rcr
shl
pop
pop
(bad)
ds
imul
in
(bad)
push
push
addr16
out
enter
push
imul
adc
pop
imul
push
jnp
push
fild
loop
rol
push
rcl
rcr
pusha
aad
cwde
shl
nop
lods
xchg
push
push
jmp
fwait
xor
pop
xchg
dec
addr16
maxps
daa
fsubr
dec
inc
jg
rol
push
push
outs
mov
out
pop
addr16
pop
dec
leave
gs
rol
mov
inc
shr
lahf
xor
int3
addr16
adc
jmp
aad
pusha
data16
push
shl
ds
sti
aam
pusha
in
push
jnp
cwde
jmp
push
xchg
push
pusha
inc
sbb
arpl
ja
push
pusha
nop
push
sbb
dec
pop
std
retf
outs
int3
inc
shl
and
adc
pop
in
loop
ja
loop
lahf
call
pusha
or
ds
inc
push
push
lahf
sti
ins
dec
lahf
adc
lods
adc
into
je
das
dec
scas
adc
ret
enter
push
imul
(bad)
ins
leave
inc
sbb
xchg
lods
in
and
jmp
stc
sbb
or
xchg
mov
popf
fst
(bad)
mov
in
les
adc
xchg
shr
sbb
pusha
inc
lahf
mov
in
mov
ss
jmp
fst
push
imul
adc
pusha
(bad)
ficom
not
mov
data16
sbb
jmp
(bad)
push
aam
sbb
jns
(bad)
daa
bound
outs
test
or
adc
std
push
cld
push
sbb
adc
mov
xchg
shl
addr16
jnp
fstp
adc
cmp
adc
jnp
inc
jg
out
adc
aaa
inc
sbb
(bad)
push
push
jg
pop
mov
cmp
jnp
fstp
adc
pusha
and
cmp
adc
leave
js
rcr
push
aam
(bad)
xchg
enter
call
scas
rcl
aad
inc
jg
pusha
in
push
dec
lahf
adc
neg
(bad)
and
dec
lahf
adc
push
ret
std
or
cs
fst
push
cmp
out
mov
adc
cmps
push
fwait
xor
ficom
xor
and
fisub
pusha
fst
xchg
dec
shl
std
sbb
or
xchg
(bad)
mov
in
shl
loopne
inc
lahf
adc
add
jl
rcl
xchg
push
pusha
in
xchg
adc
mov
in
adc
(bad)
adc
mov
iret
sti
mov
pusha
in
adc
xchg
cs
xor
or
rcl
xchg
ds
xchg
mov
mov
(bad)
push
mov
out
mov
sbb
fwait
inc
sbb
pusha
inc
mov
imul
mov
sbb
imul
xchg
(bad)
aas
lahf
adc
adc
cmps
aad
pusha
in
xchg
ds
push
out
retf
push
std
pusha
push
jmp
fst
sbb
imul
inc
sub
dec
cwde
nop
mov
sub
ds
and
rol
push
clc
mov
lahf
adc
ds
loop
lahf
dec
push
out
retf
push
std
stc
aam
ficomp
call
lahf
sahf
ror
iret
sahf
loop
sbb
xchg
lahf
adc
outs
lahf
mov
pop
shl
push
imul
sbb
les
popf
fst
(bad)
(bad)
jl
xchg
mov
jecxz
mov
in
add
adc
aaa
pop
data16
mov
in
mov
ret
push
mov
iret
push
mov
adc
push
ds
push
imul
data16
outs
and
push
xor
in
jecxz
push
retf
mov
add
mov
ds
addr16
lahf
add
cmps
ror
push
retf
outs
xor
nop
mov
cmp
xchg
ds
retf
cmps
out
ror
pusha
(bad)
ficom
not
xchg
inc
shr
cmps
sub
addr16
cmp
pop
nop
bnd
shl
pop
das
cmps
cmp
adc
jnp
adc
mov
lahf
clc
out
mov
cmp
sbb
xchg
cwde
shl
adc
daa
jecxz
mov
jbe
ds
lahf
mov
adc
jl
sti
mov
cli
xchg
xchg
js
out
xchg
clc
call
mov
pop
addr16
mov
cmp
pop
nop
jmp
mov
ds
and
fistp
lahf
nop
bnd
dec
aad
call
inc
addr16
pop
ins
xchg
aad
cwde
shl
adc
ins
xchg
add
out
xchg
mov
lahf
push
sbb
xchg
xchg
stos
push
lahf
sbb
or
push
mov
nop
in
loop
mul
push
jle
sti
jno
lahf
adc
jmp
(bad)
push
aam
ds
adc
cmp
adc
not
xchg
fistp
mov
out
adc
cmp
adc
ds
sti
fisttp
adc
xchg
call
mov
call
into
inc
push
(bad)
ja
out
lahf
jns
mov
out
push
popf
jnp
(bad)
adc
addr16
jmp
rol
sub
ds
outs
(bad)
mov
ror
pop
inc
push
(bad)
mov
test
push
fidiv
push
out
retf
push
std
pop
xchg
push
popa
in
xchg
push
jnp
aad
ja
cli
ds
call
sbb
push
mov
xchg
rcr
ds
retf
mov
ds
in
lahf
sti
add
adc
mov
push
clc
mov
lahf
adc
mov
xlat
push
cmp
push
add
mov
ds
addr16
mov
lahf
sahf
adc
pusha
in
push
jl
inc
sbb
pusha
inc
fbstp
jmp
ror
neg
fst
sbb
jg
imul
mov
xchg
ds
adc
jnp
xchg
push
push
adc
fs
adc
shl
mov
adc
push
ret
cmps
out
rcl
arpl
cwde
mov
test
(bad)
pusha
in
push
rcr
mov
push
push
and
rcl
shl
push
push
xchg
mov
lahf
sahf
adc
ds
xor
lahf
inc
sbb
pusha
inc
jmp
(bad)
sahf
(bad)
nop
xchg
inc
cmp
lods
push
mov
pop
scas
push
popa
in
xchg
xor
cmps
nop
ds
jns
push
shl
adc
(bad)
(bad)
inc
in
rcr
mov
jne
sub
pusha
fst
xchg
cmp
popa
in
push
std
nop
movs
adc
in
xchg
ds
xchg
stos
cmp
adc
shl
mov
out
push
outs
aas
push
xchg
(bad)
scas
bound
xor
xchg
and
cmp
adc
sub
imul
sub
ds
xchg
push
aas
lahf
adc
cdq
ret
leave
jl
adc
pop
jns
push
dec
icebp
aad
test
enter
cli
xchg
cs
sbb
adc
lock
xchg
mov
out
push
or
in
push
shl
dec
xchg
aam
mov
push
push
sahf
jnp
(bad)
adc
outs
aas
push
xchg
(bad)
xchg
in
rcr
add
xchg
ds
std
aas
imul
sub
pusha
in
push
shl
xor
addr16
stc
sbb
xchg
ds
jns
push
xor
aad
test
retf
pusha
in
adc
xchg
cs
sbb
adc
xchg
xchg
mov
out
push
nop
push
push
shl
dec
xchg
aam
mov
push
mov
lahf
jns
push
cmp
aad
test
retf
pusha
in
adc
xchg
cs
sbb
adc
xchg
xchg
mov
out
push
pop
push
push
shl
dec
xchg
aam
mov
push
push
sahf
jnp
(bad)
adc
outs
aas
push
xchg
(bad)
fsubp
push
add
xchg
ds
push
mov
sahf
adc
mov
iret
mov
ds
(bad)
pusha
nop
push
xor
addr16
stc
sbb
xchg
ds
jns
push
out
aad
test
retf
adc
xchg
cs
jp
adc
xchg
xchg
mov
out
push
in
in
push
shl
dec
cmp
out
icebp
aad
adc
rcl
out
rcr
add
xchg
ds
push
mov
sahf
adc
or
in
imul
call
mov
iret
sti
pop
les
into
aad
aad
dec
sub
aas
ds
aaa
jl
mov
mov
adc
out
retf
push
std
pop
xchg
push
popa
in
xchg
xlat
mov
xchg
ds
retf
cmps
out
rcr
mov
iret
cwde
adc
pusha
in
push
imul
rcr
adc
(bad)
mov
retf
push
push
pusha
inc
mov
(bad)
push
out
retf
push
std
sbb
imul
xchg
inc
cmp
in
imul
inc
call
pusha
adc
daa
in
imul
lahf
adc
ds
jne
mov
mov
push
mov
sahf
adc
shl
mov
mov
sbb
inc
in
imul
leave
movlhps
test
adc
(bad)
push
(bad)
aad
adc
aaa
shl
mov
in
add
adc
aaa
pop
sbb
ins
fwait
adc
shl
mov
iret
cwde
scas
ror
xchg
ds
call
push
rcl
arpl
cwde
mov
adc
(bad)
mov
ret
push
push
pusha
inc
scas
mov
out
sahf
(bad)
jmp
jle
pushf
adc
shl
mov
iret
cwde
scas
ror
push
jnp
call
loop
xchg
xor
not
jl
adc
pop
sahf
adc
pusha
in
push
shl
mov
in
rcr
push
imul
sbb
dec
pushf
adc
ds
in
imul
outs
in
imul
pusha
in
push
adc
(bad)
(bad)
repz
ds
fwait
mov
pusha
adc
pushf
adc
push
lahf
adc
out
retf
push
std
pusha
cmps
jnp
popa
in
sbb
iret
jnp
(bad)
adc
mov
iret
sti
in
push
lahf
adc
mov
mov
popf
adc
jae
imul
popa
in
sbb
iret
sahf
and
jae
push
fldenv
pop
xchg
ds
loopne
mov
sub
nop
jnp
push
hlt
cmp
cwde
sub
pusha
in
push
imul
adc
cmp
adc
aaa
in
imul
pusha
in
push
jl
cwde
adc
adc
push
ds
call
lahf
adc
cmp
adc
mov
iret
cwde
adc
adc
push
ret
in
ds
in
mov
lahf
push
mov
sbb
xor
jbe
xchg
ds
jns
(bad)
mov
xchg
ds
call
pusha
in
push
mov
popf
adc
xor
imul
popa
in
sbb
iret
sahf
and
in
push
fldenv
pop
xchg
ds
loopne
mov
arpl
pusha
nop
jnp
push
hlt
cmp
cwde
sub
adc
push
ret
scas
das
lahf
adc
aas
lahf
adc
pop
in
imul
pusha
in
push
jl
cwde
adc
adc
push
ds
call
adc
ds
pop
shl
xor
add
pop
pusha
in
push
mov
imul
popa
in
(bad)
mov
in
rcr
push
imul
lock
mov
push
rcl
arpl
cwde
mov
stc
nop
sub
in
push
ds
adc
imul
imul
lahf
adc
ret
pusha
inc
push
shl
shl
ss
aam
mov
inc
push
(bad)
mov
dec
push
mov
pop
xchg
shl
ds
adc
cmp
cmp
popa
in
sbb
iret
jnp
(bad)
adc
mov
iret
sti
lds
adc
mov
push
mov
out
push
rcr
stos
aas
lahf
data16
mov
jmp
shl
push
out
push
ret
pusha
inc
sbb
addr16
imul
pusha
in
push
ds
nop
push
xor
pop
sbb
iret
jnp
(bad)
adc
mov
iret
sti
popa
push
lahf
adc
(bad)
call
and
jecxz
adc
adc
popa
in
(bad)
mov
in
shl
mov
ds
in
mov
inc
push
rcr
push
call
push
cmp
push
shl
push
pusha
inc
lahf
mov
mov
shl
push
pusha
inc
lahf
rcr
push
fisub
push
shl
loop
in
push
shl
cmp
push
popa
in
xchg
mov
adc
pop
cwde
adc
pusha
in
push
push
pusha
in
push
mov
iret
cwde
cmps
ror
das
xor
adc
xchg
pusha
in
push
jmp
sbb
dec
in
imul
leave
sbb
inc
in
imul
leave
sbb
inc
in
imul
leave
sbb
sub
call
pop
cwde
adc
pusha
in
push
push
pusha
in
enter
push
imul
std
shl
and
or
lahf
lahf
adc
sbb
dec
pop
ja
rcr
int3
aas
cmp
outs
jae
addr16
mov
repz
jg
jmp
adc
or
popf
adc
ds
xchg
(bad)
mul
push
mov
adc
xchg
xchg
ds
iret
sbb
inc
call
pusha
in
push
loop
adc
std
adc
jg
fcmove
test
xor
push
push
inc
mov
ds
clc
xor
(bad)
push
pusha
les
xor
lahf
adc
ds
outs
leave
inc
sub
mov
ret
and
pop
jnp
mov
adc
ds
adc
adc
jns
(bad)
jmp
xchg
ds
aad
(bad)
jae
xchg
ds
adc
(bad)
push
stc
ror
retf
mov
adc
lahf
xchg
ins
lahf
imul
mov
cmp
cmps
aad
push
int
sbb
stos
push
and
push
imul
push
xchg
ds
scas
mov
mov
adc
jae
(bad)
ds
adc
xor
mov
ds
adc
mov
mov
cmps
ficom
cwde
mov
sbb
adc
ds
adc
ds
aaa
adc
xchg
or
jg
push
jle
popf
adc
jl
and
mov
pop
adc
fwait
push
push
jnp
adc
xlat
xlat
adc
mov
cdq
sub
imul
xchg
dec
xchg
mov
mov
cmps
mov
ds
push
ds
cli
test
lahf
adc
popf
adc
jg
cli
xchg
cmp
adc
jmp
aad
imul
xchg
and
fst
xchg
ds
and
ds
in
mov
jecxz
call
push
(bad)
mov
fisttp
pop
jle
cli
mov
cmp
addr16
maxps
cmp
das
xchg
ds
push
(bad)
mov
xchg
in
push
mov
cwde
and
ins
adc
mov
push
adc
pop
mov
cmps
ficom
xor
xlat
jg
push
mov
cwde
and
pop
adc
mov
pop
xor
rol
push
xchg
cmp
adc
shr
mov
cwde
and
add
fstp
xor
aam
jp
push
xchg
cmp
adc
shl
mov
adc
cmps
mov
ds
(bad)
xor
cli
popf
aas
lahf
adc
rol
push
xchg
aas
call
aas
push
call
lahf
push
jle
lahf
adc
ds
xchg
aas
call
ds
adc
jp
push
xchg
aas
call
ds
adc
rol
push
xchg
aas
call
ds
adc
jmp
aad
sbb
scas
mov
aaa
adc
ds
in
mov
call
call
scas
mov
movlps
loope
adc
jg
xor
pop
pushf
adc
(bad)
push
rcr
into
fstp
aad
nop
movs
xchg
outs
aas
push
xchg
aaa
pop
outs
ret
mov
pusha
aaa
adc
pop
adc
icebp
lahf
adc
mov
pop
push
(bad)
mov
test
xchg
dec
sub
aad
mov
mov
cmps
mov
ds
push
ds
rol
sbb
mov
ds
call
adc
div
push
jecxz
fst
popa
cmp
sbb
stc
lahf
adc
ds
call
push
rcr
jl
ss
ds
adc
jnp
sbb
cmp
mov
ds
nop
mov
in
mov
in
(bad)
lahf
adc
ds
xchg
jmp
sbb
jle
stos
cdq
inc
lahf
adc
push
push
jnp
pop
sbb
jnp
cs
ds
adc
xor
lahf
adc
mov
lahf
adc
sub
outs
pusha
ds
js
push
lahf
scas
fist
xchg
aad
xchg
jmp
or
jg
xchg
push
neg
jecxz
mov
mov
mov
call
cmp
push
popa
mov
xchg
xchg
jmp
sbb
jle
pop
adc
xchg
adc
lahf
clc
(bad)
mov
push
sbb
xchg
adc
adc
sub
jg
in
xchg
xor
push
xchg
lahf
xchg
adc
cmps
push
fwait
scas
fist
in
push
loop
add
adc
lahf
clc
(bad)
mov
push
sbb
xchg
adc
adc
mov
xchg
xor
push
xchg
lahf
cmps
mov
cmps
push
fwait
scas
fist
in
pusha
push
jecxz
fst
push
into
mov
xor
rcpps
cmp
shl
lahf
adc
gs
rol
mov
inc
(bad)
push
cmp
mov
jns
rol
push
aad
cmp
cmps
aad
neg
sub
pop
lahf
adc
stc
test
jg
call
xchg
popf
ret
mov
idiv
sub
ja
adc
ds
sub
jno
(bad)
push
clc
imul
sub
adc
adc
neg
jl
inc
jg
call
xchg
popf
scas
mov
test
xor
adc
ror
retf
mov
enter
(bad)
adc
push
std
pusha
push
jecxz
fst
(bad)
mov
fidivr
aaa
jl
aam
(bad)
xchg
xchg
ds
retf
xchg
out
rcl
jae
sbb
call
lahf
adc
mov
lahf
nop
bnd
xchg
dec
sub
mov
inc
push
xchg
ds
call
fcmove
xchg
ds
adc
inc
adc
dec
and
repz
ds
push
daa
cmp
adc
ds
aam
mov
jbe
adc
mov
ret
cmp
sahf
rcl
iret
jnp
ds
adc
jnp
inc
push
ds
shl
lahf
adc
jnp
inc
std
adc
outs
cmc
adc
ds
pop
std
cmp
jae
pop
jno
adc
outs
pusha
xor
sahf
sti
adc
push
ds
adc
aas
jns
push
lahf
jns
push
cdq
in
loop
ja
cmc
ds
xchg
jl
les
xchg
shr
jg
rcl
rcr
rcl
iret
in
loop
adc
outs
pusha
push
arpl
jnp
xchg
mov
lahf
dec
leave
gs
rol
mov
nop
jnp
pop
push
imul
mov
(bad)
push
cld
mov
push
imul
xor
push
addr16
add
jae
nop
repnz
inc
mov
call
jnp
jns
push
lahf
jns
mov
jmp
mov
sti
mov
adc
outs
cmc
in
push
push
add
mov
out
xor
xchg
ds
in
ret
jae
(bad)
pop
std
retf
imul
xchg
pusha
xchg
adc
jl
in
loop
cmc
in
push
ror
push
not
xchg
inc
shr
lahf
mov
pop
push
ds
in
cwde
mov
adc
jp
adc
dec
mov
and
adc
dec
sbb
test
stos
rcr
and
pop
stos
rcr
xchg
ds
cwde
shr
adc
cmp
sub
pusha
adc
mov
adc
cld
nop
xchg
add
lahf
adc
(bad)
aad
and
mov
push
xor
fwait
xchg
ds
call
mov
push
les
xchg
xor
pop
add
addr16
jg
nop
movs
xchg
cmp
leavew
xor
push
push
cmp
inc
jg
ret
xor
inc
push
sub
inc
(bad)
(bad)
retf
dec
xchg
ds
push
outs
mov
(bad)
sahf
ret
sub
jne
mov
mov
imul
cmp
cwde
ret
pop
xchg
aas
lahf
adc
jnp
js
sub
das
xchg
in
and
ds
pop
jnp
adc
pusha
in
push
jl
xchg
stos
add
pop
pop
add
jmp
(bad)
popf
xchg
stos
cmp
nop
jg
pop
das
xchg
cmp
es
(bad)
sbb
xchg
xor
pop
xchg
add
test
and
xchg
ds
push
(bad)
sbb
xchg
mov
mov
sbb
push
adc
fwait
nop
push
cmp
pop
cmp
adc
dec
cli
call
jmp
mov
into
call
cdq
adc
js
jmp
(bad)
fwait
sbb
cmp
adc
cmp
mov
in
sbb
(bad)
sahf
ret
sub
jne
mov
(bad)
fwait
call
fist
xchg
aas
addr16
jg
adc
outs
mov
push
xchg
ds
adc
add
jmp
mov
(bad)
call
cdq
adc
add
jmp
(bad)
pushf
xchg
stos
cmp
nop
jg
nop
movs
xchg
cmp
in
xchg
ds
addr16
add
xchg
ds
mov
add
push
push
xchg
les
xchg
mov
push
xchg
ds
adc
mov
lahf
sbb
mov
push
std
retf
mov
enter
sub
mov
sbb
in
jl
pop
das
test
mov
lahf
gs
xchg
ds
pusha
test
push
fwait
adc
xchg
cmps
aad
out
cli
xchg
ds
nop
push
xor
push
jecxz
fst
cwde
mov
add
popf
cwde
stos
sub
enter
retf
(bad)
(bad)
sbb
push
dec
sub
xor
pop
mov
ja
xchg
ds
stos
xlat
lahf
adc
ret
cdq
mov
adc
ret
nop
mov
adc
xchg
scas
fist
scas
jnp
popa
jg
mov
pop
mov
lahf
call
mov
push
les
push
arpl
retf
cs
push
xchg
scas
fist
adc
call
int3
sahf
leave
mov
in
ret
adc
fwait
call
adc
aas
adc
outs
mov
in
xchg
dec
sub
mov
adc
cmp
call
fwait
cs
ds
adc
push
pop
icebp
xchg
shr
jg
arpl
push
pusha
(bad)
ficom
imul
bound
dec
xchg
ds
inc
rcl
jmp
pusha
in
xchg
(bad)
das
dec
xchg
mov
pusha
nop
clc
sbb
dec
shl
mov
lahf
nop
xchg
dec
sub
cmp
scas
je
pusha
in
xchg
dec
mov
mov
pop
das
xchg
pop
and
aas
jmp
pop
cmp
lahf
test
sub
pop
add
adc
cmp
dec
cwde
mov
loopne
shl
xchg
inc
in
push
xor
inc
jg
lds
xchg
mov
mov
xchg
stos
iret
mov
ds
movs
add
jo
push
xor
inc
push
fcomp
in
push
cmps
ficom
jg
(bad)
adc
shl
sub
xchg
shl
xchg
xor
xchg
shl
cld
inc
test
ds
sbb
jae
in
push
shl
mov
loopne
shl
cmp
das
sbb
push
xchg
ds
xchg
or
mov
loopne
shl
cmp
pop
sub
xchg
mov
(bad)
dec
shl
dec
sub
mov
pusha
adc
ds
outs
shl
out
in
push
jl
cwde
add
inc
in
push
sub
xor
imul
shr
xchg
lahf
inc
jg
(bad)
adc
aas
pop
cmc
xchg
mov
scas
outs
shl
sar
lahf
sub
retf
push
mov
ja
into
ds
in
xchg
dec
sub
mov
pusha
adc
lahf
adc
ds
cmps
jnp
pusha
in
push
shl
shl
xor
push
imul
addr16
mov
pusha
adc
pop
int
shl
push
leave
push
aam
shl
pushf
inc
imul
sub
and
shr
sar
lahf
popa
dec
mov
lahf
popa
cwde
mov
push
xchg
cs
adc
mov
je
push
std
lahf
add
into
lahf
adc
mov
imul
jmp
adc
jo
push
mov
lahf
dec
shl
rcr
push
shl
cmp
cmps
aad
pusha
cmps
dec
loope
in
jg
(bad)
adc
ds
movs
add
jo
push
sub
call
cmp
js
pusha
adc
imul
rcr
mov
sar
pop
repnz
cmp
mov
push
shl
push
fcomp
adc
popf
adc
ret
pop
xor
in
adc
jo
push
shl
ds
popa
and
call
fld
push
pusha
and
(bad)
aas
inc
xchg
ds
xchg
aaa
loopne
in
push
cld
pushf
pop
xchg
add
(bad)
nop
push
inc
pushf
adc
mov
adc
aaa
loopne
in
sbb
pop
int
rcr
cmp
inc
in
push
shl
stos
inc
in
push
scas
inc
in
push
shl
jmp
dec
shl
mov
stos
dec
shl
mov
push
ds
cwde
adc
inc
in
push
shl
mov
xlat
dec
shl
mov
push
shl
fld
push
ds
adc
add
jne
lds
pusha
sar
int
call
int3
push
cmp
cmps
aad
nop
movs
add
jo
push
mov
int3
push
loope
in
push
xor
sbb
stos
ins
cld
push
mov
push
mov
fist
push
stos
imul
shl
xchg
lahf
inc
jg
enter
sbb
push
xor
jae
ds
xchg
jmp
adc
shl
mov
addr16
mov
sbb
xchg
ds
cli
mov
lahf
adc
imul
rcl
aas
lahf
adc
jp
pop
push
mov
pop
xchg
xor
pusha
in
xchg
mov
pusha
push
sbb
jnp
push
mov
push
jecxz
(bad)
popf
xchg
scas
ds
mov
push
jecxz
(bad)
fwait
xchg
scas
ds
mov
sar
pop
rcr
and
pop
icebp
xchg
mov
push
xor
pusha
in
pop
mov
sahf
sbb
cmp
xor
adc
pusha
sahf
ror
fwait
call
sbb
cwde
adc
jo
push
mov
fwait
xchg
scas
jae
pusha
in
in
pop
mov
xchg
xor
xchg
pusha
in
push
fcomp
leave
push
mov
lahf
adc
add
mov
lahf
adc
add
popfw
mov
lahf
adc
not
in
push
mov
sbb
ins
cld
push
loop
in
push
shl
(bad)
pusha
in
adc
xchg
xchg
sub
inc
in
push
fwait
imul
rcr
push
out
cli
xchg
(bad)
jle
xchg
jae
cwde
adc
ja
push
rcr
js
pusha
xchg
sub
jo
push
dec
dec
in
xchg
dec
sub
xlat
mov
push
shl
xchg
xor
xchg
shl
cld
inc
test
ds
sbb
adc
popa
ror
retf
mov
enter
pop
push
outs
scas
rcr
xchg
jbe
mov
fistp
jnp
aad
rcr
jecxz
fst
cs
lahf
adc
(bad)
push
sar
mov
retf
sbb
sbb
xchg
ds
loopne
mov
ret
or
xchg
ds
loopne
mov
fcomp
mov
mov
(bad)
xchg
aad
cdq
xchg
xor
inc
imul
xchg
rol
fwait
clc
popf
mov
loop
xchg
cli
(bad)
lods
outs
xchg
ds
push
push
jbe
xchg
ds
cdq
xchg
xor
inc
push
fild
dec
xor
adc
sahf
sbb
jge
cs
ds
adc
push
daa
push
les
lahf
in
(bad)
push
push
pop
mov
jmp
mov
adc
mov
pop
push
push
aas
push
rcl
cwde
nop
ins
cmp
sbb
call
cmp
push
push
aas
imul
ficomp
pop
pop
jnp
adc
(bad)
lahf
adc
ds
jnp
cmp
cmp
lahf
popfw
enter
dec
fwait
xchg
rol
fwait
xchg
rol
sahf
xchg
jmp
in
push
aad
cdq
xchg
xor
inc
imul
inc
dec
cdq
xchg
rol
sahf
clc
popf
mov
loop
nop
dec
jnp
rol
push
push
pop
mov
xlat
pusha
pop
push
call
sub
stos
mov
fwait
xchg
rol
sahf
sbb
jnp
dec
leave
gs
rol
mov
inc
les
cwde
loop
and
int3
pusha
lahf
adc
push
push
imul
adc
push
lahf
sti
jge
lahf
adc
iret
sbb
push
ds
add
push
mov
jno
in
xchg
inc
jb
leave
gs
rol
mov
stos
lahf
push
lahf
adc
int
xchg
push
lahf
jo
out
adc
leave
js
adc
inc
in
push
xor
in
loop
adc
(bad)
(bad)
lahf
inc
xchg
ds
mov
ds
in
mov
jmp
shl
mov
adc
pusha
inc
jg
lahf
adc
enter
(bad)
push
aam
pusha
push
rol
mov
inc
rol
jae
ds
in
mov
out
push
stc
cmc
adc
ds
data16
push
lahf
sti
in
lahf
adc
neg
fistp
xchg
inc
sub
jo
xchg
lahf
jns
push
pop
adc
ds
adc
ds
adc
shr
jg
int
xchg
mov
nop
imul
xchg
adc
cmp
fwait
mov
call
ds
sar
adc
(bad)
inc
inc
xchg
ds
rcl
pop
jle
mov
ds
call
lahf
in
mov
out
stc
cmc
adc
xchg
adc
ss
fwait
mov
jecxz
cmp
push
outs
mov
jecxz
dec
outs
inc
push
cmps
int
xchg
push
lahf
call
(bad)
enter
push
imul
(bad)
outs
int3
inc
rol
cld
jl
lahf
adc
not
xchg
push
lahf
jns
push
lahf
adc
(bad)
rol
ds
aad
shl
maxps
idiv
lahf
jns
push
lahf
jns
push
lahf
cwde
shl
push
rcl
pusha
push
pop
add
sar
adc
ins
int3
in
loop
leave
sti
or
std
adc
outs
cmc
adc
into
jge
xchg
push
lahf
inc
jg
into
adc
ds
cwde
rol
push
aam
aas
lahf
adc
std
retf
outs
iret
inc
rol
in
add
xchg
xchg
ds
jns
push
lahf
jns
push
lahf
adc
(bad)
das
inc
xchg
ds
aad
(bad)
sahf
jmp
stc
sbb
push
aad
jns
push
lahf
jns
push
lahf
jns
mov
out
mov
xchg
inc
jg
int
xchg
push
lahf
stos
test
lahf
adc
push
push
outs
mov
and
ror
retf
mov
enter
pop
push
imul
mov
ja
lahf
adc
cmp
rcl
add
int3
in
loop
not
jl
sti
shr
adc
arpl
ret
sub
lahf
sti
movs
push
adc
(bad)
and
sbb
cmp
push
xchg
(bad)
add
sbb
lahf
jge
dec
fwait
inc
ja
push
add
sub
fwait
inc
outs
inc
call
jge
xchg
(bad)
imul
sbb
lahf
mov
out
push
jnp
call
(bad)
push
jnp
dec
leave
gs
rol
mov
nop
jnp
int3
inc
shl
aam
ret
mov
mov
jmp
jnp
in
(bad)
push
push
addr16
out
inc
aaa
inc
xchg
ds
and
mov
cmp
xchg
(bad)
or
ds
lahf
jns
in
xlat
div
adc
mov
lahf
adc
pusha
(bad)
ficom
not
scas
inc
shr
cwde
stos
xchg
pusha
fst
push
dec
mov
jne
jnp
adc
mov
cli
not
or
aad
adc
mov
lahf
xchg
jmp
push
jne
lahf
cwde
shl
nop
movs
xlat
cmp
push
push
leave
jl
shl
push
rcr
mov
push
mov
xchg
jnp
xchg
jmp
call
mov
dec
stos
mov
fst
push
dec
mov
cwde
shl
nop
movs
xlat
cmp
push
imul
popa
sbb
jp
loop
inc
outs
imul
adc
out
retf
push
std
pop
jle
aas
pop
outs
imul
mov
xchg
leave
jl
shr
push
rcr
xchg
sbb
ds
lahf
xor
add
aas
lahf
adc
xchg
pop
adc
ficom
jg
push
cmp
rcl
repnz
jnp
adc
ficomp
shr
jnp
sbb
jle
cwde
ret
movs
lds
mov
cwde
mov
icebp
cwde
xchg
pop
adc
ficom
fwait
xor
push
lahf
mov
sbb
out
sahf
push
jae
(bad)
enter
push
pop
jae
xchg
fist
pop
test
pushf
xlat
ds
fidiv
sub
pop
mov
packuswb
seta
pop
scas
jae
pop
scas
rcpps
scas
jae
pop
scas
cvtpi2ps
jae
pop
scas
bts
test
aad
rsm
mov
mov
packuswb
seta
push
cmp
add
inc
add
pcmpgtd
jae
pop
scas
pcmpeqb
mov
push
scas
jae
xchg
mov
xchg
scas
mov
stos
jle
sbb
add
adc
xchg
scas
jae
pop
scas
scas
add
scas
jae
pop
scas
cmps
fadd
scas
jae
pop
scas
sbb
fwait
scas
jae
pop
scas
jmp
scas
jae
and
(bad)
in
xchg
fist
sti
mov
adc
xor
cmp
fstp
adc
pop
jae
xchg
fist
pop
push
fwait
add
cmovl
scas
jae
pop
scas
packuswb
scas
jae
xlat
setp
jae
pop
scas
mov
scas
jae
pop
scas
setp
jae
pop
scas
jb
pop
jae
shrd
xor
cmp
imul
outs
scas
jae
pop
scas
bts
mov
packuswb
scas
jae
aad
setp
jae
pop
scas
mov
scas
jae
pop
scas
setp
jae
pop
scas
jb
pop
jae
shrd
imul
outs
scas
jae
pop
scas
(bad)
pop
scas
jae
xchg
pusha
rcl
not
mov
dec
lahf
mov
pop
icebp
mov
pop
push
jnp
outs
lock
mov
ds
in
jnp
call
cli
call
jnp
call
lahf
adc
lahf
adc
outs
ja
pusha
shl
cld
pop
inc
ins
mov
out
push
cld
sahf
rcr
imul
lds
jmp
gs
adc
jnp
stos
push
cmp
inc
ins
mov
cmp
push
push
ja
push
inc
ins
mov
or
stos
inc
call
jecxz
xor
add
hlt
pop
add
fcomp
call
(bad)
sbb
jae
cmp
(bad)
stos
add
lahf
adc
arpl
imul
ds
adc
jnp
inc
jg
rcl
xchg
xor
push
ins
outs
push
retf
xchg
into
iret
sahf
ror
nop
movs
ret
ret
(bad)
(bad)
scas
pop
xchg
ds
adc
push
out
jecxz
(bad)
mov
xlat
mov
(bad)
push
cld
scas
rcr
imul
cmp
in
ror
nop
movs
shl
xlat
sub
sbb
dec
leave
gs
rol
mov
nop
jnp
int3
inc
rol
jecxz
fcom
push
dec
mov
sti
cdq
jno
adc
outs
push
shl
sahf
fst
xchg
shr
mov
push
out
(bad)
call
push
call
lahf
adc
cmp
adc
shr
jg
addr16
push
std
xchg
rcr
ds
movs
jmp
cmp
mov
call
nop
movs
jmp
cs
sbb
push
loope
cs
sbb
rcl
pop
xchg
ds
data16
lahf
in
mov
(bad)
push
clc
cmc
pop
std
ds
retf
xchg
cmp
aad
pushf
push
jg
ja
fnstcw
lahf
nop
push
es
jl
call
pushf
push
imul
and
mov
nop
rol
fwait
mov
sbb
xchg
cmp
aad
cmps
push
imul
sbb
push
jnp
clc
xor
call
inc
scas
aad
scas
add
addr16
ss
sub
rol
in
retf
rcl
xchg
mov
ret
jg
rcl
xchg
mov
ret
cwde
mov
push
xor
rcl
sbb
mov
sti
dec
jae
adc
jnp
sti
inc
jae
adc
push
sbb
rcl
cwde
mov
jne
xchg
les
add
aad
push
std
mov
lahf
adc
jle
stos
sub
dec
cmp
lahf
inc
jg
rcl
xchg
mov
and
mov
out
and
jecxz
fcom
push
pop
mov
call
dec
scas
aad
scas
add
imul
mul
push
xchg
cmp
lahf
sub
retf
ss
jl
push
jecxz
into
push
aad
out
push
addr16
iret
sub
xchg
dec
scas
aad
pushf
push
dec
sbb
scas
jnp
popa
dec
mov
adc
xor
inc
js
jge
sub
push
inc
sbb
push
xor
xlat
sub
and
ret
mov
sbb
inc
scas
aad
push
pop
lods
mov
in
mov
fistp
clc
pop
outs
js
jmp
mov
sti
(bad)
mov
adc
outs
ja
imul
nop
push
ss
adc
ds
adc
ds
adc
ds
adc
shr
jg
(bad)
adc
adc
outs
pusha
data16
pusha
data16
xchg
pop
xchg
ds
std
das
pop
lahf
adc
jnp
or
adc
(bad)
rcr
ds
rcl
popa
ror
retf
mov
lahf
inc
shr
test
iret
xchg
jns
lods
adc
jl
mov
mov
jle
xchg
mov
and
pop
sti
int
lahf
adc
outs
push
shl
pop
jmp
mov
mov
nop
push
jg
jmp
push
aas
je
jg
rcl
xchg
xor
outs
push
cs
call
pop
jmp
push
rcl
(bad)
fwait
add
pusha
in
push
aas
adc
gs
clc
sbb
shl
iret
aam
xchg
mov
in
aas
jmp
shr
or
jecxz
fcom
xchg
jnp
pusha
in
push
clc
adc
(bad)
push
(bad)
aad
mul
jbe
lahf
sahf
adc
(bad)
in
push
ds
jns
push
lahf
jns
push
lahf
jns
push
lahf
adc
ret
pusha
in
(bad)
(bad)
neg
ds
xchg
arpl
pusha
in
push
into
mov
push
clc
pusha
data16
xchg
(bad)
ds
sti
add
adc
adc
(bad)
push
sahf
or
jl
in
and
(bad)
in
push
ds
cmps
arpl
pusha
in
jg
fcom
xchg
rcr
jmp
jle
xchg
mov
in
imul
aam
xchg
mov
cmp
pop
sahf
adc
(bad)
in
push
jl
sahf
adc
popa
in
push
ds
sti
sar
lahf
adc
jmp
aad
not
jbe
lahf
jnp
(bad)
adc
mov
iret
jnp
ds
xchg
jg
lahf
adc
jl
jnp
(bad)
adc
cmp
adc
(bad)
xchg
adc
mov
lahf
dec
leave
gs
rol
mov
inc
(bad)
push
and
js
(bad)
adc
jl
xchg
push
pop
fst
xchg
mov
(bad)
(bad)
mov
out
(bad)
push
lahf
jnp
ds
adc
ds
adc
ds
data16
shr
jg
(bad)
adc
mov
call
mov
call
cmc
adc
ds
xchg
jmp
shr
jg
(bad)
adc
imul
(bad)
imul
call
push
aam
dec
mov
cmp
adc
aas
iret
in
loop
pusha
xchg
jmp
ds
adc
xchg
retf
imul
xchg
js
mov
xchg
push
fwait
jns
mov
pop
mov
xchg
in
loop
ja
xchg
ds
nop
push
ror
push
test
enter
mov
inc
xchg
adc
outs
adc
outs
cmc
adc
cmp
jns
push
lahf
in
loop
pusha
data16
(bad)
lahf
pop
xchg
ds
shl
cmp
pop
jmp
shr
push
ja
adc
dec
arpl
jne
lahf
adc
(bad)
sahf
jmp
stc
pusha
imul
pop
xchg
ds
rcl
popa
push
rol
mov
nop
jnp
leave
inc
sbb
mov
shl
and
xchg
dec
(bad)
call
cdq
adc
(bad)
scas
jmp
stc
adc
outs
test
xchg
shr
push
jbe
adc
(bad)
je
sbb
inc
rcl
shr
push
jbe
adc
dec
arpl
icebp
jbe
adc
dec
arpl
int
lahf
adc
aaa
push
jmp
fst
push
addr16
dec
leave
neg
fcmovne
inc
shr
rol
call
lahf
adc
sbb
lahf
inc
jg
fcom
xchg
mov
jmp
leave
je
xchg
ds
inc
jl
sub
(bad)
jmp
push
lahf
jnp
ds
adc
ds
adc
div
jl
sti
xchg
jns
adc
dec
push
xchg
mov
lahf
sbb
fwait
and
mov
mov
(bad)
outs
push
xchg
ds
push
imul
xchg
push
int
adc
xchg
loop
cmp
adc
mov
repnz
push
inc
lahf
std
retf
outs
int3
inc
shl
add
mov
lahf
cwde
jmp
push
loop
adc
fwait
mov
cmp
push
loope
cld
int
loop
ja
fistp
lahf
nop
push
xor
jmp
jnp
cwde
ret
pop
xchg
ds
jmp
(bad)
popf
clc
out
mov
cmp
pop
push
pop
add
outs
fwait
ds
pop
add
jmp
mov
mov
xchg
mov
in
mov
out
push
std
adc
fwait
jle
push
push
into
pushf
push
fwait
outs
ja
sar
lahf
call
pop
sbb
sbb
jg
fcom
xchg
mov
in
mov
out
push
std
adc
fwait
aas
addr16
call
in
mov
out
push
std
ror
pop
inc
push
fistp
sub
sbb
xchg
aam
into
ret
and
sub
ins
ja
sar
lahf
call
sbb
lahf
imul
adc
jnp
call
scas
in
sub
jecxz
aaa
pop
addr16
xor
pop
movs
mov
lods
push
lods
dec
addr16
jb
pop
push
imul
sub
xor
das
lods
mov
stos
lea
lahf
adc
leave
call
shl
adc
leave
jge
jge
push
inc
jnp
dec
nop
push
pop
enter
enter
fst
rcl
push
xchg
ds
sbb
imul
(bad)
in
adc
arpl
xchg
cwde
ror
push
rcl
popa
ror
retf
xchg
adc
ds
inc
shr
retf
call
cmp
push
fwait
jae
push
lahf
sahf
adc
pusha
in
push
(bad)
into
jecxz
rcr
mov
xchg
push
mov
adc
maxps
scas
xor
addr16
imul
ja
aam
lahf
and
mov
adc
push
xchg
ds
xchg
dec
shl
daa
lahf
adc
shl
jmp
push
out
out
push
shl
and
std
jle
int3
aad
lahf
call
inc
inc
xchg
ds
in
push
push
shr
xchg
jnp
aas
lahf
adc
fst
xchg
xchg
inc
xchg
ds
in
push
push
rcr
xchg
call
pop
nop
pop
rcr
stos
aas
lahf
data16
mov
jns
mov
fld
pusha
adc
ja
pop
shl
test
ss
sar
lahf
nop
push
neg
jl
in
and
pusha
in
push
ds
lahf
(bad)
das
push
xchg
ds
(bad)
sbb
xchg
inc
mov
(bad)
adc
arpl
imul
lahf
nop
push
ss
sar
lahf
stos
popf
ds
adc
leave
xchg
ins
cmp
xor
ficom
xchg
xchg
adc
ins
adc
imul
in
rcl
aad
enter
lahf
adc
(bad)
call
iret
push
xchg
ds
(bad)
sbb
xchg
inc
mov
(bad)
adc
arpl
imul
lahf
nop
push
mul
jl
in
and
pusha
in
push
ds
lahf
(bad)
xchg
ds
(bad)
sbb
xchg
inc
mov
(bad)
adc
arpl
imul
lahf
nop
push
ss
sar
lahf
stos
popf
ds
adc
leave
xchg
ins
cmp
xor
fist
xchg
xchg
adc
ins
adc
imul
in
rcl
aad
enter
lahf
adc
(bad)
in
loop
test
adc
pusha
in
push
jl
inc
jg
fist
xchg
mov
scas
retf
push
std
ja
sar
lahf
stos
popf
ds
adc
leave
xchg
ins
cmp
add
into
jge
xchg
shr
push
jp
adc
xchg
jnp
(bad)
adc
arpl
imul
lahf
nop
push
ss
sar
lahf
stos
popf
ds
adc
leave
xchg
ins
cmp
add
into
jge
xchg
shr
push
jp
adc
xchg
jnp
(bad)
adc
arpl
imul
lahf
nop
push
ss
rcl
sbb
adc
ds
in
mov
ja
sar
lahf
stos
hlt
ds
adc
leave
inc
sbb
arpl
imul
fst
rcl
push
xchg
ds
xchg
outs
push
xchg
ds
xchg
ds
mov
int
push
fst
sbb
enter
lahf
adc
mov
iret
in
loop
adc
imul
in
(bad)
push
dec
repz
iret
sti
inc
jge
adc
mov
adc
xor
adc
les
push
xchg
ds
ds
mov
int
sub
pusha
in
push
jl
inc
jg
fcom
xchg
mov
out
xchg
leave
jl
adc
pusha
out
push
jge
adc
xor
adc
les
icebp
aad
pusha
cmps
imul
in
jg
fcom
xchg
mov
fcom
xchg
xchg
in
mov
neg
ja
lahf
in
and
pusha
in
push
ds
lahf
(bad)
mov
sbb
(bad)
sbb
xchg
inc
mov
(bad)
adc
arpl
imul
lahf
nop
push
ss
clc
jmp
test
jmp
ror
or
(bad)
arpl
ds
adc
push
xchg
ds
(bad)
sbb
xchg
inc
mov
(bad)
adc
arpl
imul
lahf
nop
push
ss
aad
lahf
stos
popf
ds
adc
leave
xchg
ins
cmp
add
into
jge
xchg
shr
push
jl
adc
xchg
sti
add
xor
adc
les
push
xchg
ds
ds
mov
int
sub
pusha
in
push
jl
inc
jg
fst
xchg
mov
mov
adc
shl
xlat
ficom
xchg
ds
xchg
xchg
ds
in
xchg
xchg
lock
mov
push
rcl
and
push
lahf
clc
out
sbb
push
and
add
pusha
pusha
push
pusha
adc
and
xor
das
test
ds
adc
leave
xchg
push
pop
int
outs
xchg
pop
jnp
shl
jne
jne
push
stos
sub
push
push
les
inc
lahf
adc
enter
fst
sbb
enter
lahf
adc
mov
adc
and
xchg
ds
popa
adc
sub
push
adc
(bad)
mov
out
push
pop
jg
xchg
outs
ja
(bad)
ds
nop
push
es
loopne
dec
lahf
adc
ficom
xchg
xchg
in
mov
test
ret
push
ds
lahf
(bad)
ret
push
xchg
ds
(bad)
sbb
xchg
inc
mov
(bad)
adc
arpl
imul
lahf
nop
push
ss
(bad)
ds
stos
popf
ds
adc
leave
xchg
ins
cmp
add
into
jge
xchg
shr
push
jg
adc
xchg
xchg
adc
pusha
out
push
rcr
push
(bad)
pusha
in
push
ret
pusha
sbb
xchg
popa
in
push
ret
pusha
xchg
fs
not
xchg
xlat
push
adc
mov
jmp
shl
aas
lahf
adc
sbb
adc
xchg
mov
lahf
cwde
shl
call
(bad)
pusha
in
push
ds
cwde
adc
pusha
in
push
ret
pusha
in
loop
test
retf
push
ds
nop
push
xor
sahf
arpl
(bad)
in
adc
pusha
push
pop
add
aam
mov
shr
pusha
call
sbb
xchg
shl
mov
shr
pusha
sahf
adc
imul
ror
and
mov
iret
sti
xor
pusha
in
adc
fwait
call
sub
push
es
cmps
shl
mov
iret
jnp
(bad)
adc
(bad)
stos
push
xchg
ds
(bad)
(bad)
mov
ds
(bad)
sbb
xchg
inc
mov
(bad)
adc
arpl
imul
lahf
nop
push
ss
shl
xlat
mov
adc
mov
neg
ja
lahf
in
and
pusha
in
push
ds
lahf
(bad)
pop
sub
ds
(bad)
sbb
xchg
inc
mov
(bad)
adc
arpl
imul
lahf
nop
push
ss
cmps
shl
outs
mov
out
shl
leave
jl
adc
pop
sahf
adc
lahf
in
push
shl
(bad)
xchg
in
rcr
mov
jmp
shl
xor
sahf
imul
fst
push
shl
ds
nop
push
ss
clc
repz
adc
ds
in
mov
test
ret
push
ds
lahf
(bad)
mov
sbb
(bad)
sbb
xchg
inc
mov
(bad)
adc
arpl
imul
lahf
nop
push
ss
test
ds
adc
leave
xchg
ins
cmp
add
into
jge
xchg
shr
push
add
jnp
(bad)
adc
arpl
imul
lahf
nop
push
ss
retf
mov
and
xchg
ds
in
mov
ja
test
ds
adc
leave
inc
sbb
arpl
imul
fst
rcl
sub
xchg
pop
sub
xchg
ds
mov
sbb
xchg
inc
mov
(bad)
adc
arpl
imul
lahf
nop
push
ss
test
ds
adc
leave
xchg
ins
cmp
add
cmc
jg
xchg
shr
push
add
sti
test
xor
adc
les
icebp
aad
pusha
cmps
imul
in
jg
mov
sbb
aad
jnp
ds
test
ds
adc
leave
xchg
ins
cmp
xor
mov
adc
ins
adc
imul
in
rcl
aad
enter
lahf
adc
(bad)
jnp
(bad)
adc
arpl
imul
lahf
nop
push
ss
stos
ds
stos
popf
ds
adc
leave
xchg
ins
cmp
add
into
jge
xchg
shr
push
add
stos
cwde
jp
adc
push
xchg
push
shl
std
test
and
pusha
in
push
ds
lahf
(bad)
sbb
xchg
ds
(bad)
sbb
xchg
inc
mov
(bad)
adc
arpl
imul
lahf
nop
push
test
and
pusha
in
push
ds
lahf
xchg
cmp
ds
in
push
push
sar
mov
adc
mov
mul
jne
lahf
in
and
pusha
in
push
ds
lahf
mov
int
ret
pusha
inc
sbb
arpl
imul
fst
(bad)
(bad)
sub
ds
xchg
arpl
xchg
ds
(bad)
sbb
xchg
inc
mov
(bad)
adc
arpl
imul
lahf
nop
push
not
ja
lahf
in
and
pusha
in
push
ds
lahf
mov
lahf
sti
sub
lahf
adc
xor
adc
les
icebp
aad
pusha
cmps
imul
in
jg
mov
sbb
mov
adc
mov
xchg
push
cs
scas
imul
in
rcl
aad
enter
lahf
adc
(bad)
sti
stc
add
adc
les
icebp
aad
pusha
cmps
imul
in
jg
mov
sbb
xor
adc
xchg
push
loope
adc
arpl
imul
lahf
nop
push
ss
stos
ds
stos
popf
ds
adc
leave
xchg
ins
cmp
add
into
jge
xchg
shr
push
add
sti
xchg
add
adc
les
sub
ds
mov
int
sub
pusha
in
push
jl
inc
jg
movs
adc
out
inc
push
xchg
shr
push
add
xchg
jns
push
lahf
jns
push
lahf
jns
push
lahf
adc
(bad)
out
xchg
ds
xchg
jg
(bad)
in
push
out
retf
push
std
pusha
cmps
imul
in
jg
cmps
adc
retf
push
ret
push
ret
pusha
sti
inc
push
lahf
adc
ja
push
ja
mov
ret
push
ds
lods
push
lahf
cwde
adc
pusha
out
push
std
retf
mov
lahf
inc
sub
loope
(bad)
mov
and
pop
aad
rcr
outs
mov
sbb
jnp
inc
push
sbb
imul
movs
adc
loope
adc
mov
iret
jnp
ds
xchg
jg
outs
in
push
jnp
adc
dec
and
push
cmps
int3
aad
neg
jl
jnp
ds
xchg
jg
outs
in
push
ds
jl
fst
(bad)
cmp
cld
jecxz
rcr
mov
and
pop
dec
pop
std
retf
mov
lahf
inc
shr
std
sub
adc
pop
nop
xor
adc
lahf
mov
pop
nop
ja
push
xchg
pop
ret
pusha
in
sbb
xchg
cwde
xchg
cmp
xchg
sbb
pusha
in
push
(bad)
push
out
push
in
push
lahf
mov
nop
push
cmp
sti
sub
lahf
adc
xchg
sahf
ret
cmp
push
push
stos
aas
out
push
or
out
push
ret
pusha
in
jg
test
xchg
mov
sbb
jmp
push
cmp
inc
xchg
aas
fstp
push
mov
inc
jg
test
xchg
mov
arpl
pusha
in
and
sti
and
ds
xchg
sti
ret
pusha
in
push
shl
ds
cwde
ret
sahf
out
pusha
in
sbb
push
sbb
repz
push
aas
adc
aas
fstp
push
ds
jnp
out
adc
test
xchg
pusha
xchg
pusha
movs
lock
mov
mov
shl
dec
cmps
adc
ds
sti
and
cmp
cmps
push
pusha
inc
call
sub
aad
not
xchg
ds
sti
jae
pusha
in
adc
mov
inc
jg
test
cli
lock
adc
rcl
xchg
ds
imul
addr16
adc
(bad)
mov
cmps
push
pusha
inc
jg
stos
adc
shl
scas
(bad)
in
push
shl
mov
in
push
shl
sahf
(bad)
in
push
ret
pusha
in
(bad)
(bad)
mov
push
mov
(bad)
sbb
xchg
inc
jg
stos
adc
aas
lahf
adc
sahf
inc
push
xchg
mov
out
imul
cmps
adc
ds
sahf
adc
adc
(bad)
(bad)
sub
mov
adc
push
jns
push
lahf
sahf
adc
ja
scas
ds
nop
push
and
in
cmp
in
push
ds
xchg
jae
pusha
in
xchg
ds
adc
stc
sbb
imul
and
jecxz
stc
aam
(bad)
popa
in
push
pop
addr16
pusha
inc
jg
jo
push
ret
pusha
in
(bad)
mov
stos
imul
cmc
adc
push
cmc
adc
ds
adc
mov
iret
jns
(bad)
(bad)
es
ds
rcr
ds
cmps
aas
ret
pusha
in
jg
stos
adc
ds
out
push
mov
out
push
jl
jnp
loopne
adc
mov
iret
sti
xchg
push
lahf
adc
(bad)
aad
push
(bad)
in
push
(bad)
mov
push
stc
adc
(bad)
push
jmp
ds
call
ja
xchg
ds
mov
push
(bad)
in
push
ret
pusha
in
stos
cmp
fistp
ds
xchg
(bad)
cmp
xchg
ds
pop
ret
pusha
in
xchg
dec
xchg
jnp
into
lahf
adc
stos
adc
adc
(bad)
ins
ja
mov
push
cmc
int
adc
(bad)
(bad)
or
fwait
add
xchg
ds
rcr
push
pusha
adc
shl
adc
fwait
add
push
mov
push
ds
xchg
push
push
cld
adc
ds
jns
shr
push
pusha
sti
mov
mov
out
push
ds
cwde
adc
xchg
call
(bad)
in
push
gs
rcl
mov
enter
and
sub
call
jmp
mov
jne
imul
xor
jmp
mov
jne
imul
cs
mov
pop
push
inc
popa
ins
ja
mov
pop
push
inc
arpl
sub
xor
inc
imul
sbb
imul
xor
inc
arpl
cmc
adc
lods
adc
cmp
push
push
addr16
and
loop
xchg
xor
rcr
jnp
fwait
xchg
push
fwait
sahf
shl
iret
call
lahf
adc
xchg
in
loop
push
jecxz
(bad)
call
mov
lahf
in
loop
nop
movs
rol
adc
cmp
inc
jg
scas
adc
mov
in
sbb
push
cwde
mov
out
sbb
adc
(bad)
repz
jnp
sahf
sar
call
xor
inc
popa
mov
add
lahf
stos
push
lahf
adc
push
push
jg
pop
sahf
rol
iret
jns
push
lahf
jns
push
lahf
sti
lds
cmc
in
rcl
and
outs
leave
sti
sbb
lahf
adc
(bad)
push
call
lahf
cwde
rol
ror
pop
inc
push
(bad)
pop
mov
lahf
sti
inc
push
lahf
adc
push
and
outs
aas
addr16
jg
push
cmp
jle
adc
shl
mov
iret
jnp
loopne
adc
scas
adc
xor
adc
ins
pusha
cmps
push
fisub
jg
stos
adc
(bad)
jmp
shl
(bad)
pop
and
(bad)
push
aam
(bad)
(bad)
idiv
sbb
mov
lahf
sahf
adc
adc
(bad)
push
lahf
sbb
stos
call
pusha
cmps
push
fisub
jg
stos
adc
(bad)
jmp
shl
(bad)
stos
and
xor
(bad)
fwait
aad
and
cdq
call
ror
retf
xchg
clc
mov
imul
inc
add
std
add
adc
into
sahf
jecxz
clc
int3
jnp
aas
lahf
adc
scas
adc
rcr
stos
aas
lahf
data16
mov
jns
mov
adc
ja
sub
pusha
nop
push
ss
jecxz
into
push
aad
imul
ins
ja
mov
ss
jecxz
fcom
xchg
arpl
pusha
in
sbb
imul
rcl
push
push
xchg
mov
adc
pusha
inc
jg
stos
adc
adc
adc
mov
mul
jne
lahf
sahf
adc
jg
push
ds
nop
push
ss
mov
ds
adc
leave
xchg
ins
cmp
cmp
lods
adc
ds
in
ins
adc
rcl
aad
adc
rcl
and
(bad)
push
and
ds
mov
sbb
xchg
inc
mov
(bad)
adc
mov
iret
sti
jge
lahf
adc
xchg
xchg
jns
movs
adc
adc
(bad)
(bad)
dec
and
(bad)
adc
xchg
ds
(bad)
sbb
xchg
inc
mov
(bad)
adc
mov
iret
sti
cmp
cli
xchg
sti
icebp
or
lahf
adc
les
and
ds
mov
int
sub
jg
push
jl
sahf
sub
jg
push
ds
nop
push
cs
xchg
repnz
adc
(bad)
push
mov
xchg
xchg
fisub
(bad)
(bad)
mov
xchg
ds
xor
sti
xchg
or
lahf
adc
les
icebp
aad
adc
(bad)
(bad)
mov
xlat
lahf
push
xchg
repnz
adc
(bad)
(bad)
xchg
and
(bad)
push
and
ds
mov
sbb
xchg
inc
mov
(bad)
adc
mov
iret
sti
jno
lahf
adc
xchg
jnp
(bad)
adc
mov
iret
sti
inc
or
adc
xchg
call
pop
and
ds
mov
sbb
xchg
inc
mov
loope
lahf
adc
pop
lahf
adc
mov
adc
pusha
inc
jmp
push
xchg
mov
adc
pusha
inc
jg
lods
adc
pop
jg
xchg
mov
adc
pusha
inc
jg
lods
adc
pop
lods
adc
ds
in
mov
mul
jne
lahf
sahf
adc
jg
push
ds
nop
push
ss
add
ds
in
mov
jecxz
shl
push
aam
aad
adc
(bad)
(bad)
stos
and
(bad)
outs
and
ds
mov
sbb
xchg
inc
mov
(bad)
adc
mov
iret
sti
cdq
or
adc
xchg
jnp
(bad)
adc
mov
iret
sti
ins
setg
adc
xchg
xchg
push
in
call
xchg
(bad)
das
and
ds
mov
sbb
xchg
inc
mov
(bad)
adc
mov
iret
sti
pop
setg
adc
xchg
in
loop
adc
(bad)
push
mov
aad
adc
(bad)
(bad)
adc
xchg
ds
xchg
repz
ds
mov
sbb
xchg
inc
mov
(bad)
adc
mov
iret
sti
sbb
cli
xchg
jnp
(bad)
adc
mov
iret
sti
loope
lahf
adc
xchg
sti
movs
setg
cs
adc
les
icebp
aad
adc
(bad)
(bad)
iret
and
xchg
xchg
ds
int3
push
ret
scas
adc
ds
in
mov
xchg
push
cs
scas
xchg
fisub
rcl
aad
adc
rcl
and
(bad)
push
and
ds
mov
sbb
xchg
inc
mov
(bad)
adc
mov
iret
sti
jge
lahf
adc
xchg
jnp
loope
adc
mov
iret
sti
inc
push
lahf
adc
xchg
call
inc
in
push
push
lahf
adc
xor
adc
les
icebp
aad
adc
(bad)
(bad)
cmp
xchg
ds
lahf
(bad)
jmp
xchg
ds
(bad)
sbb
xchg
inc
mov
(bad)
lahf
adc
pop
lahf
adc
mov
adc
pusha
inc
jmp
push
xchg
mov
adc
pusha
inc
jg
scas
adc
out
inc
push
xchg
mov
adc
pusha
inc
jg
scas
adc
ds
adc
cmp
adc
not
xchg
fild
out
mov
xchg
mov
out
dec
shl
cmp
adc
shl
imul
sub
inc
in
push
ds
push
loope
in
jg
mov
xchg
shr
dec
shl
adc
(bad)
xchg
mov
lahf
dec
leave
gs
rol
mov
xchg
jnp
fwait
adc
mov
jo
mov
lahf
nop
xor
scas
in
shl
push
xchg
ds
lahf
ins
ja
mov
adc
aas
push
xchg
ret
pusha
in
push
(bad)
push
call
jg
mov
xchg
outs
ja
mov
retf
das
cmps
not
xchg
leave
js
adc
pop
jnp
out
adc
mov
xchg
mov
mov
shl
leave
js
adc
in
push
push
lahf
sahf
adc
ja
mov
aas
lahf
adc
mov
iret
jnp
loopne
adc
mov
xchg
push
popf
adc
shl
sbb
adc
ds
sahf
adc
popa
in
push
ret
pusha
in
(bad)
(bad)
jmp
xchg
ds
jmp
(bad)
push
aam
mov
out
push
mov
push
shl
xor
adc
jl
sahf
adc
popa
in
push
ds
sahf
adc
adc
(bad)
(bad)
dec
cmp
jb
pusha
call
push
jns
push
lahf
sahf
adc
ja
mov
and
mov
mov
imul
push
stc
sbb
xchg
ds
aam
fisub
push
mov
pusha
adc
sbb
aam
(bad)
popa
in
push
aaa
lahf
adc
push
xchg
jecxz
pusha
in
push
stc
adc
(bad)
(bad)
add
push
call
das
shl
push
lahf
jns
push
mov
jns
mov
out
imul
ja
mov
xor
test
xchg
(bad)
in
push
ds
jmp
(bad)
push
aam
mov
out
push
jl
jnp
loopne
adc
mov
iret
sti
dec
adc
aad
dec
fs
push
(bad)
push
call
sbb
iret
jnp
loopne
adc
mov
xchg
mov
sbb
test
cmp
mov
xchg
mov
pusha
adc
shl
cwde
mov
not
addr16
sti
in
lahf
adc
cmp
sub
inc
rcl
cmp
push
idiv
jl
sahf
adc
ja
and
xor
sbb
jmp
adc
shl
(bad)
loop
push
aaa
pop
sbb
sbb
and
sbb
jg
mov
xchg
mov
(bad)
inc
push
shl
shl
xchg
fs
ds
call
push
shl
ds
jnp
loopne
adc
mov
xchg
outs
neg
dec
jl
inc
jg
mov
xchg
mov
jmp
(bad)
xchg
xchg
ds
or
pusha
in
adc
movs
inc
push
std
sahf
loopne
shr
push
pusha
sti
adc
pusha
in
adc
xchg
clc
mov
pusha
nop
jg
iret
inc
push
shl
shl
xor
in
jno
adc
(bad)
mov
xchg
or
pusha
in
xchg
ds
adc
(bad)
scas
jmp
stc
adc
(bad)
(bad)
inc
cmp
mov
out
push
ds
call
fs
push
call
xchg
ds
or
pusha
in
enter
push
cmp
inc
arpl
outs
push
stc
mov
xchg
ds
sti
std
pop
lahf
adc
jnp
in
loop
ja
mov
(bad)
adc
cs
xlat
(bad)
(bad)
xchg
ds
aad
(bad)
mov
push
stc
int3
inc
jg
mov
sub
xor
inc
xchg
aas
int
mov
lahf
adc
(bad)
jmp
xchg
ds
jmp
(bad)
push
aam
jnp
inc
std
ds
jnp
popa
fist
std
ds
adc
mov
xchg
mov
jns
push
lahf
stos
add
pop
sahf
rol
iret
inc
jg
mov
ins
mov
lahf
cwde
rol
je
push
(bad)
push
call
retf
xchg
mov
or
cmps
(bad)
push
aam
cmp
lahf
(bad)
fwait
cmp
enter
(bad)
je
push
(bad)
scas
jmp
stc
imul
cwde
ds
sahf
adc
outs
in
push
push
lahf
adc
aas
pusha
data16
mov
adc
pusha
inc
jg
das
in
push
shl
dec
fwait
call
ja
mov
aad
dec
leave
neg
fistp
sub
stos
ret
outs
leave
js
rol
push
aam
stc
(bad)
xchg
ds
push
(bad)
scas
jmp
stc
nop
movs
rol
iret
jnp
loopne
adc
jnp
inc
jg
mov
xchg
mov
std
(bad)
push
lahf
jnp
aas
lahf
adc
pop
mov
ds
mov
jnp
nop
push
cmp
fst
sbb
inc
jg
mov
xchg
mov
jno
std
not
ds
in
mov
(bad)
fwait
cmp
pop
lahf
adc
rcr
cwde
mov
in
adc
xchg
outs
sbb
rol
mov
inc
(bad)
push
cmc
inc
push
into
push
call
lahf
jns
push
call
push
lahf
jnp
aas
lahf
adc
ds
adc
cmp
add
mov
xchg
mov
jns
imul
mov
ds
mov
imul
mov
ds
mov
leave
jns
rol
push
aad
aas
enter
stos
xchg
ss
sti
in
push
lahf
adc
aas
enter
stos
aas
or
sti
std
push
lahf
adc
aas
enter
stos
lar
sti
int
lahf
adc
aas
enter
stos
cmp
jg
sti
fst
lahf
adc
shr
jg
ds
adc
push
scas
in
mov
(bad)
stos
cmp
push
scas
in
mov
(bad)
mov
adc
push
scas
in
mov
(bad)
mov
xchg
ds
std
pop
or
enter
stos
and
jg
sti
imul
enter
stos
jecxz
jg
sti
jns
lahf
adc
aas
enter
stos
xchg
lahf
sti
dec
sbb
jns
shr
pop
sbb
rol
sub
jmp
(bad)
push
aam
ret
jg
ficom
jg
mov
xchg
ds
adc
jns
shr
lds
lahf
adc
ret
pop
lahf
fst
jg
mov
mov
ds
adc
jns
shr
mov
ret
mov
sub
mov
ds
adc
jns
shr
popf
sbb
jmp
stc
cmc
out
push
ds
mov
lahf
mov
scas
fist
call
sbb
push
arpl
mov
(bad)
jg
xchg
ds
out
push
ds
mov
lahf
mov
lahf
fst
call
sbb
push
arpl
mov
(bad)
and
push
ds
mov
lahf
mov
cmps
fist
call
sbb
push
arpl
mov
(bad)
pop
xor
push
ds
mov
lahf
mov
mov
sbb
push
arpl
mov
(bad)
jmp
xchg
ds
mov
nop
jnp
leave
inc
sub
and
pop
jnp
jecxz
adc
xchg
sti
xor
pusha
in
push
clc
idiv
dec
jl
inc
jg
arpl
push
add
push
lahf
inc
jg
mov
mov
into
iret
inc
jg
mov
in
mov
push
lahf
inc
sbb
arpl
ror
iret
cwde
rol
mov
outs
cmc
adc
not
xchg
mov
fst
(bad)
fild
xchg
push
lahf
adc
ds
mov
sahf
ficom
std
ds
mov
ds
jns
mov
jmp
jnp
nop
jg
iret
jns
push
mov
ds
inc
(bad)
cli
inc
push
xchg
push
inc
into
aad
cmc
adc
mov
mov
ds
cld
pushf
dec
lahf
adc
ds
mov
ds
rcr
sahf
adc
jnp
nop
jg
iret
jns
push
mov
ds
inc
jmp
jle
xchg
push
inc
into
aad
cmc
adc
mov
mov
ds
adc
cmp
adc
ds
push
std
aas
cmc
adc
ds
adc
sbb
xchg
push
xchg
jns
(bad)
mov
aad
aas
leave
jns
shr
adc
ds
mov
ds
rcr
mul
repz
mov
xchg
ds
inc
call
push
xchg
push
inc
into
aad
cmc
adc
mov
mov
ds
adc
stos
mov
ds
adc
(bad)
call
out
mov
outs
test
dec
jecxz
adc
ds
mov
lahf
mov
popf
fst
push
(bad)
push
call
add
push
lahf
in
mov
push
(bad)
jnp
aas
lahf
adc
sahf
lahf
adc
ds
inc
push
inc
push
xchg
push
inc
into
aad
cmc
adc
mov
mov
ds
adc
stos
mov
ds
adc
(bad)
inc
adc
ds
cmp
ds
adc
push
adc
aad
test
xchg
(bad)
pop
aaa
xchg
ds
or
jns
shr
xchg
shr
repz
sti
jnp
ds
adc
sub
adc
(bad)
adc
mov
lahf
sti
sbb
lahf
adc
add
mov
lahf
jnp
loop
adc
not
ds
inc
jg
mov
iret
aad
cmc
adc
jge
adc
jg
sti
mov
ds
mov
ds
neg
sahf
adc
ds
adc
inc
not
xchg
mov
fst
(bad)
mov
lahf
sti
mov
lahf
adc
ds
xchg
push
lahf
in
mov
push
lahf
in
mov
push
mov
xchg
ds
das
call
adc
mov
fst
(bad)
mov
lahf
sti
jge
lahf
adc
add
(bad)
mov
adc
stos
mov
ds
adc
(bad)
std
add
lahf
jnp
aas
lahf
adc
ds
adc
push
hlt
iret
aad
test
xchg
(bad)
xor
xchg
ds
xor
lahf
call
push
aam
ds
mov
ds
rcr
not
push
sub
adc
jl
jnp
jecxz
adc
ds
mov
lahf
mov
lahf
fst
std
ds
mov
ds
rcr
cmc
je
es
adc
not
xchg
ds
jnp
loop
adc
in
push
xchg
push
lahf
sti
mov
push
push
push
xchg
push
lahf
in
mov
push
lahf
in
mov
push
(bad)
jnp
ds
adc
setle
xchg
push
sti
jnp
ds
inc
jmp
inc
into
aad
cmc
adc
mov
mov
ds
adc
stos
mov
ds
adc
(bad)
std
push
lahf
jnp
ds
adc
ds
adc
push
cdq
iret
aad
test
xchg
(bad)
and
xchg
ds
xor
lahf
jns
shr
xchg
shr
(bad)
push
mov
xchg
test
pop
outs
test
xchg
loop
adc
ds
adc
ds
ss
jns
shr
xchg
shr
(bad)
push
sbb
rcl
push
lahf
adc
outs
test
(bad)
ds
adc
ds
add
xchg
pusha
inc
mov
xchg
push
lahf
in
mov
push
lahf
in
mov
push
xchg
push
inc
adc
ds
xchg
(bad)
push
inc
repnz
not
dec
jl
jnp
cmp
adc
mov
mov
ds
adc
stos
mov
ds
adc
push
std
pop
mul
xchg
ds
jns
push
lahf
adc
outs
test
xchg
loop
adc
ds
adc
ds
or
jns
shr
xchg
shr
adc
xchg
idiv
mov
adc
outs
div
dec
jl
jnp
in
adc
ds
mov
lahf
mov
popf
fst
jg
addr16
push
mov
sti
pop
(bad)
pusha
in
enter
ret
nop
jnp
leave
inc
sub
rol
ds
jnp
jecxz
adc
xchg
sti
aad
pusha
in
push
clc
idiv
dec
jl
inc
jg
push
add
add
xchg
hlt
push
jnp
call
add
(bad)
mov
push
outs
leave
sti
lea
lahf
adc
leave
es
ds
adc
stos
mov
ds
adc
mov
out
mov
jnp
cmp
into
iret
jns
push
lahf
jnp
ds
inc
jmp
jle
xchg
push
jle
aad
not
xchg
ds
sti
jno
lahf
adc
aas
push
xchg
push
lahf
in
mov
push
lahf
inc
std
add
outs
adc
sti
inc
std
sub
pop
(bad)
ds
xchg
(bad)
push
push
enter
leave
dec
jl
jns
(bad)
das
xor
jg
jns
shr
xchg
shr
mov
jnp
cmp
into
sbb
rep
cmc
inc
std
sub
sbb
(bad)
adc
in
push
xchg
push
lahf
sti
in
lahf
adc
aas
push
xchg
push
lahf
jns
push
lahf
jns
push
call
push
lahf
jnp
cmp
adc
ds
adc
ss
pop
jg
mov
xchg
push
loop
adc
push
pusha
es
mov
mov
in
mov
push
lahf
in
mov
push
sti
jns
push
mov
push
pushf
adc
outs
test
adc
fst
std
ds
mov
lahf
mov
mov
scas
jmp
stc
imul
jl
jns
push
fcom
xchg
ds
es
ficom
jg
adc
push
jmp
jge
adc
jg
sti
xor
lahf
adc
add
mov
ds
adc
rcl
xchg
ds
es
ficom
jg
adc
aad
jns
push
lahf
jnp
aas
lahf
adc
ja
(bad)
ds
mov
lahf
jns
shr
xchg
shr
mov
or
pop
std
inc
not
xchg
mov
fst
(bad)
mov
lahf
sti
icebp
and
push
xchg
mov
and
pop
jns
shr
xchg
shr
mov
add
pop
call
pushf
adc
outs
test
adc
fst
std
ds
mov
lahf
mov
mov
push
push
or
push
xchg
push
lahf
in
mov
push
(bad)
jnp
ds
adc
push
test
xchg
ds
inc
jmp
push
xchg
push
inc
into
aad
cmc
adc
adc
aad
push
in
push
lahf
adc
ds
mov
ds
rcr
cmc
je
mov
pop
adc
ds
jnp
loop
adc
in
push
xchg
push
lahf
sti
cmp
push
push
push
xchg
push
lahf
in
mov
push
lahf
in
mov
push
(bad)
jnp
ds
adc
sahf
lahf
adc
ds
inc
jmp
inc
into
aad
cmc
adc
adc
(bad)
ds
adc
stos
mov
ds
adc
(bad)
std
push
lahf
jnp
ds
adc
ds
adc
push
cdq
iret
aad
test
xchg
(bad)
cmps
or
xor
lahf
jns
shr
xchg
shr
xchg
adc
ds
jns
push
lahf
adc
jl
jnp
jecxz
adc
ds
mov
lahf
mov
lahf
fst
push
(bad)
scas
jmp
stc
cmc
adc
stos
mov
ds
adc
(bad)
inc
lahf
adc
ds
or
(bad)
push
enter
test
xchg
(bad)
pop
push
xchg
ds
xor
lahf
jns
shr
xchg
shr
(bad)
push
sbb
ds
sub
adc
pushf
fst
(bad)
aas
inc
push
xchg
push
lahf
adc
ds
mov
stos
fist
std
ds
mov
ds
neg
cmc
cmp
js
pop
(bad)
ds
xchg
(bad)
push
inc
repnz
not
dec
jl
jnp
cmp
adc
adc
popf
mov
(bad)
ds
in
outs
lahf
adc
ds
mov
ds
neg
cmc
ja
popa
cmc
pop
(bad)
ds
xchg
(bad)
push
inc
repnz
not
dec
jl
jnp
cmp
adc
adc
popf
mov
adc
stos
mov
ds
adc
(bad)
jmp
fist
xchg
ds
or
(bad)
push
jl
aad
imul
dec
jl
jns
(bad)
inc
seta
cmp
xor
lahf
sti
push
int
in
jg
imul
mov
lahf
dec
leave
neg
fistp
(bad)
ins
leave
inc
sub
xchg
xchg
pop
xchg
ds
call
lahf
adc
cmp
not
xchg
ds
in
loop
ja
lea
lahf
call
push
adc
(bad)
xor
xchg
ds
rcl
shr
push
xchg
ds
sti
push
daa
lahf
adc
arpl
push
jnp
pop
xchg
ds
sahf
ror
iret
sahf
ror
iret
sahf
rol
iret
in
loop
imul
and
xchg
ds
xchg
jg
cmp
or
(bad)
push
call
cmc
adc
arpl
in
adc
push
push
xchg
shr
push
fsub
adc
xchg
xchg
(bad)
push
aam
inc
addr16
and
pop
std
cmp
push
outs
outs
pusha
xchg
cmps
aad
not
xchg
ds
sti
adc
pusha
in
adc
xchg
push
rol
mov
xchg
jnp
sahf
adc
xor
push
into
scas
jecxz
clc
push
aad
push
lahf
adc
pushf
das
push
xchg
mov
adc
pusha
inc
jg
xchg
xchg
(bad)
fwait
push
xchg
ds
ds
mov
push
rcr
pusha
xchg
jmp
mov
xchg
shl
(bad)
fisttp
xchg
ds
outs
push
out
push
xchg
mov
adc
pusha
inc
jg
xchg
xchg
mov
lahf
xchg
jmp
mov
xchg
shl
(bad)
xchg
or
cmp
add
sub
push
xchg
mov
adc
pusha
inc
jg
mov
xchg
mov
mov
(bad)
fst
sbb
iret
sti
dec
sub
adc
es
sahf
adc
pusha
in
push
ds
xchg
popa
daa
leave
adc
dec
mov
(bad)
fst
sbb
iret
sti
cmp
inc
pusha
sbb
das
not
adc
pusha
in
push
ds
xchg
jmp
mov
xchg
shl
(bad)
jecxz
xchg
ds
outs
push
loope
push
xchg
mov
adc
pusha
inc
jg
mov
xchg
mov
in
mov
out
imul
loop
pushf
dec
mov
mov
adc
mov
iret
sti
aad
lahf
adc
inc
pusha
pop
loop
div
and
ds
in
push
ds
xchg
jmp
mov
xchg
shl
(bad)
mov
ds
outs
push
imul
push
ret
mov
xchg
push
lahf
jns
push
(bad)
aad
neg
jl
sahf
adc
pusha
in
push
jg
sti
add
add
and
or
sti
rol
in
(bad)
(bad)
mov
or
mov
adc
pop
cli
movs
shl
gs
rcl
outs
int3
inc
shl
sahf
in
mov
xchg
ds
call
xchg
xchg
mov
adc
xchg
shl
adc
xchg
sbb
xchg
jns
imul
leave
gs
rcl
mov
lahf
inc
shr
mov
icebp
call
outs
adc
pop
jnp
mov
adc
mov
iret
sti
lods
sub
adc
ds
in
mov
loopne
shl
int
in
push
xchg
sub
(bad)
pusha
shl
xor
adc
mov
push
aad
sub
popf
data16
mov
jp
pusha
in
(bad)
(bad)
jnp
xchg
ds
scas
fs
pusha
in
xchg
dec
mov
mov
adc
mov
iret
sti
pop
sub
jmp
rcr
aad
adc
(bad)
(bad)
das
push
xchg
ds
scas
fs
pusha
in
xchg
dec
mov
(bad)
fst
sbb
iret
sti
add
lahf
adc
into
push
in
rcl
pop
sub
cdq
data16
mov
jp
pusha
in
(bad)
(bad)
out
push
xchg
ds
scas
fs
pusha
in
nop
dec
mov
(bad)
fst
sbb
iret
sti
shr
adc
sub
xchg
data16
mov
jp
pusha
in
(bad)
(bad)
mov
jecxz
fcom
xchg
dec
leave
pusha
in
push
clc
pop
scas
fs
pusha
in
sahf
dec
mov
(bad)
fst
sbb
iret
sti
sub
ins
jmp
rcl
aad
adc
(bad)
(bad)
arpl
xchg
ds
scas
fs
pusha
in
pushf
dec
mov
(bad)
fst
sbb
iret
sti
jne
lahf
adc
sub
xchg
data16
mov
jp
pusha
in
(bad)
(bad)
push
pop
xchg
ds
aad
inc
lahf
adc
sub
xchg
data16
cmps
aad
adc
(bad)
(bad)
aaa
pop
xchg
ds
scas
fs
pusha
in
cdq
dec
mov
mov
adc
mov
iret
sti
sbb
lahf
adc
dec
aas
push
xchg
mov
(bad)
pusha
shl
cmp
in
push
ds
jnp
sahf
fst
push
jb
push
mov
sti
pusha
shl
int
in
push
xor
rcr
xchg
mov
and
pop
xchg
push
mov
inc
jns
push
out
mov
ds
push
shl
ss
xchg
jnp
pusha
in
sahf
(bad)
nop
xchg
sub
adc
popf
adc
shl
mov
pop
scas
imul
in
lods
xor
cmp
shl
add
xchg
mov
lahf
adc
pusha
out
push
aas
outs
call
pusha
inc
dec
inc
push
xchg
mov
out
imul
inc
jg
xchg
xchg
mov
addr16
rcr
xchg
ds
inc
push
jmp
push
les
fstp
out
(bad)
call
pusha
in
cwde
mov
sbb
mul
test
pop
lahf
fst
call
push
xchg
mov
out
imul
xchg
xchg
mov
lahf
jnp
lahf
fst
jmp
inc
push
xchg
mov
out
outs
shl
sub
or
adc
ret
push
ds
xchg
popa
mov
adc
shl
cs
push
xchg
mov
out
imul
mov
xchg
push
pushf
enter
xchg
imul
in
(bad)
(bad)
imul
sbb
xor
inc
jg
mov
xchg
mov
out
imul
nop
push
cmp
sahf
adc
addr16
push
jl
sahf
adc
addr16
push
ds
nop
push
cs
adc
mov
iret
sti
pop
sub
out
jl
sahf
adc
arpl
push
shl
xor
adc
ret
adc
call
addr16
xchg
outs
(bad)
pusha
in
push
into
sahf
jecxz
clc
sbb
outs
(bad)
pusha
in
popf
xor
cmp
and
addr16
push
ds
dec
jl
sahf
adc
addr16
push
ds
nop
push
neg
ret
push
ds
sahf
adc
popa
in
push
ds
call
mov
in
push
shl
dec
(bad)
cwde
adc
push
push
imul
in
xchg
aad
in
sbb
push
retf
pusha
shl
out
push
in
inc
lahf
adc
addr16
rcl
imul
in
(bad)
push
dec
leave
aad
adc
(bad)
(bad)
das
add
xchg
pusha
inc
jg
mov
xchg
mov
(bad)
pusha
shl
ret
push
ds
cwde
sub
push
adc
imul
adc
shl
ret
push
(bad)
pusha
in
jg
mov
xchg
mov
out
outs
shl
xchg
mov
xchg
mov
out
imul
imul
rcl
nop
aas
enter
lahf
adc
enter
adc
(bad)
push
lahf
in
and
addr16
push
ds
adc
ds
test
lahf
inc
jg
lea
xchg
mov
out
imul
inc
(bad)
outs
shl
repz
in
adc
xchg
call
(bad)
in
push
shl
sub
adc
shr
jge
not
and
lahf
adc
xlat
push
jmp
int3
neg
xchg
imul
das
push
mov
xchg
(bad)
jae
xchg
ds
inc
rol
rcl
lahf
adc
out
retf
push
std
test
mov
ja
test
lahf
call
pop
addr16
outs
ja
xchg
lahf
jns
(bad)
stos
push
xchg
ds
cwde
shl
cmp
or
stos
lea
adc
push
xchg
and
pusha
in
push
std
pop
push
(bad)
mov
lahf
adc
outs
add
(bad)
lar
ds
jnp
lahf
fst
jg
mov
xchg
(bad)
sti
add
sub
daa
xchg
not
xchg
ds
sahf
adc
pusha
data16
(bad)
arpl
xchg
ds
adc
scas
ds
xchg
mov
mov
jg
add
add
xor
and
dec
sub
ss
ss
fst
push
ds
movs
test
mov
mov
pusha
call
and
inc
push
jmp
push
les
fstp
out
(bad)
call
pop
xchg
pusha
in
push
mov
sahf
clc
mov
ds
movs
sub
dec
pop
cmc
cs
call
pop
jmp
push
aad
clc
(bad)
call
pusha
in
pop
mov
sahf
cdq
adc
xchg
gs
clc
sbb
jg
mov
xchg
mov
in
aas
jmp
shr
or
retf
xchg
out
rcr
mov
iret
jnp
lahf
fst
push
inc
push
xchg
mov
mov
pusha
inc
jg
mov
xchg
push
lahf
sahf
adc
adc
(bad)
(bad)
jmp
xchg
adc
(bad)
(bad)
push
xlat
push
shl
(bad)
(bad)
call
push
mov
and
pop
jns
mov
mov
pusha
inc
jg
mov
xchg
xchg
push
mov
push
sar
aas
ja
cwde
ds
jnp
in
adc
scas
ds
xchg
push
pop
leave
aad
not
jg
sti
sub
in
xchg
adc
sbb
fwait
retf
aad
xor
fwait
mul
pop
lahf
fst
(bad)
clc
inc
push
xchg
push
out
mov
ds
test
lahf
sahf
sub
jno
push
jl
stos
mov
lahf
adc
call
xor
aad
test
call
rcpps
adc
sbb
pop
retf
aad
xor
fwait
div
pop
lahf
fst
(bad)
clc
inc
push
xchg
push
lahf
(bad)
(bad)
ds
test
lahf
nop
push
jle
scas
sub
pusha
in
sbb
pop
retf
aad
sbb
mov
lahf
jns
push
lahf
jns
push
lahf
jns
push
lahf
adc
jg
sti
cmp
lahf
adc
jnp
jns
push
lahf
jns
outs
ja
cwde
ds
xchg
push
ret
test
xchg
stc
fisubr
sbb
inc
sbb
iret
sti
cmc
xor
cld
push
jle
das
xchg
ds
push
jo
push
(bad)
jae
xchg
ds
adc
jnp
inc
std
cmp
jecxz
jl
in
loop
ja
cwde
ds
aam
xchg
xchg
adc
outs
adc
(bad)
(bad)
pop
add
shl
adc
pusha
push
pop
add
adc
dec
daa
inc
(bad)
mov
cmps
js
pusha
inc
push
xor
push
das
outs
cmc
adc
into
jge
xchg
shr
jg
nop
adc
pop
xchg
adc
mov
sahf
xchg
fild
xchg
mov
repz
push
xchg
mov
fistp
cmp
xlat
ds
push
push
push
lahf
ins
xchg
ds
adc
nop
adc
cwde
rcl
xchg
leave
jl
adc
sbb
push
push
pushf
ins
xchg
ds
adc
nop
adc
jnp
adc
(bad)
aaa
add
stc
fisubr
push
aad
sbb
ds
adc
ds
adc
jnp
inc
jg
nop
adc
or
push
xchg
push
lahf
jns
push
lahf
jns
push
lahf
jns
push
lahf
adc
div
dec
jl
jnp
jecxz
adc
ds
xchg
lahf
mov
mov
das
push
xchg
push
lahf
jns
(bad)
(bad)
sbb
jg
sub
pop
jg
xchg
adc
mov
inc
push
xchg
(bad)
scas
push
xchg
imul
jl
inc
jg
xchg
adc
shl
pop
lahf
adc
push
xchg
aas
shl
sbb
aaa
(bad)
push
not
inc
push
rcr
shl
xchg
ds
adc
aad
gs
adc
(bad)
mov
mov
call
push
xchg
push
out
aad
test
ds
xchg
jg
or
push
(bad)
jmp
ds
aam
push
sub
aas
lahf
adc
rcl
xchg
out
rcr
mov
iret
jns
push
lahf
jnp
dec
fist
std
ds
adc
xchg
adc
ds
sahf
adc
cmc
adc
ds
in
lahf
jns
push
lahf
sti
popa
xor
pop
xchg
ds
adc
retf
xchg
push
sahf
in
mov
(bad)
call
sbb
inc
jg
xchg
adc
mov
sahf
rcr
iret
sti
sub
lahf
adc
ds
adc
adc
outs
ja
cdq
ds
sbb
dec
dec
leave
gs
rol
mov
lahf
inc
shr
in
lods
xchg
js
in
xchg
mov
pop
adc
(bad)
sbb
movs
sahf
adc
cmp
xchg
out
lahf
adc
xchg
adc
ds
xchg
out
lahf
adc
dec
test
xchg
lahf
adc
mov
sbb
mov
or
xchg
ds
dec
sbb
xchg
ds
jnp
jecxz
adc
mul
jae
pusha
call
addr16
mov
xlat
push
pusha
call
pusha
cmps
jnp
pusha
in
jg
jnp
push
mov
adc
mov
pusha
sti
test
lahf
adc
ds
adc
mov
iret
in
mov
(bad)
addr16
xchg
ds
shl
push
adc
ja
pusha
in
mov
rcr
mov
ret
push
pusha
cmp
mul
push
mov
imul
pusha
cmp
loop
in
push
stos
dec
out
push
ret
pusha
in
scas
out
jmp
std
aas
adc
jae
pusha
in
mov
ror
adc
(bad)
in
push
shl
ds
adc
(bad)
call
call
lahf
adc
ds
jl
mov
mov
adc
(bad)
sahf
jmp
stc
sbb
repz
adc
jl
adc
xor
dec
je
push
mov
adc
ds
in
mov
(bad)
shl
rol
(bad)
cmp
jmp
stc
adc
jg
sub
ss
xchg
ret
cmp
adc
cmp
push
xchg
pop
ficomp
loop
pusha
data16
(bad)
(bad)
push
xchg
ds
jmp
(bad)
push
aam
adc
fiadd
push
mov
push
in
xor
mov
ds
lods
cmp
mov
ds
lods
cmp
daa
lods
cmp
(bad)
ds
lods
cmp
mov
ds
lods
cmp
mov
ds
lods
cmp
mov
ds
lods
cmp
pop
lods
cmp
xchg
inc
cmp
xchg
ja
xchg
ds
outs
shl
cmp
mov
ds
lods
cmp
mov
ds
lods
cmp
push
dec
jmp
push
pusha
in
push
(bad)
cmp
xchg
ds
cld
sar
jg
push
fisub
push
ret
pusha
in
(bad)
(bad)
add
xchg
ds
xchg
jnp
pusha
in
jle
cdq
adc
mov
cli
iret
cmp
sbb
ds
xchg
ds
sahf
adc
pusha
in
push
mov
xchg
adc
shl
push
cmc
adc
test
(bad)
call
xchg
ds
es
ficom
jg
xchg
adc
ds
in
or
in
push
ret
pusha
in
push
mov
lahf
xchg
stos
dec
sub
aas
nop
xchg
push
ds
adc
rcr
push
or
mov
ds
popf
ds
sahf
sbb
pusha
in
push
mov
xchg
outs
cmp
push
std
aas
test
aas
pusha
in
push
shl
xor
data16
lahf
jns
push
lods
leave
aad
cmc
adc
xchg
adc
jl
sti
jmp
pop
call
mov
sahf
adc
pusha
in
push
ret
pusha
in
(bad)
push
mov
aad
adc
(bad)
(bad)
or
xchg
ds
xchg
adc
shl
shr
imul
sahf
in
push
push
lahf
jns
push
xchg
leave
aad
cmc
adc
xchg
adc
jle
sti
xor
adc
shl
rcr
stos
aas
lahf
data16
mov
cmc
adc
ds
dec
jl
jns
(bad)
stos
sbb
stos
fist
jg
xchg
adc
ds
xchg
xchg
shl
aad
sbb
mov
adc
in
push
add
jns
push
js
aad
cmc
adc
xchg
adc
jle
sti
xor
mov
adc
shl
mov
mov
jmp
(bad)
push
aam
mov
iret
sahf
adc
(bad)
in
push
jl
sahf
adc
(bad)
in
push
ds
nop
push
cs
xchg
ds
sahf
adc
pusha
in
push
lahf
fst
jg
xchg
adc
shl
push
cmc
adc
ds
dec
jl
jns
(bad)
jecxz
xchg
ds
es
lahf
fst
jg
xchg
adc
ds
pop
xchg
ds
in
mov
jmp
pusha
call
pusha
inc
sbb
iret
jnp
in
adc
mov
iret
sti
mov
cli
(bad)
jnp
ds
adc
mov
iret
in
mov
(bad)
aas
sbb
shl
dec
mov
jnp
out
adc
ds
sahf
ds
in
mov
(bad)
daa
sbb
ds
sahf
adc
pusha
in
push
ret
pusha
in
(bad)
push
cmp
xchg
(bad)
pusha
in
(bad)
(bad)
dec
sbb
push
pusha
adc
shl
shr
test
sbb
mov
lahf
jns
push
hlt
retf
cmc
adc
xchg
adc
jg
sti
shl
adc
pushf
adc
shl
rcr
stos
aas
lahf
data16
mov
cmc
adc
idiv
dec
jl
jns
(bad)
jmp
xchg
ds
es
pop
xchg
adc
ds
xchg
push
aad
sbb
mov
adc
in
push
add
jns
push
mov
aad
cmc
adc
xchg
adc
jg
sti
jne
lahf
adc
popf
adc
shl
mov
mov
jmp
(bad)
push
aam
mov
iret
sahf
adc
(bad)
in
push
jl
sahf
adc
(bad)
in
push
ds
nop
push
cs
xchg
ds
sahf
adc
pusha
in
push
mov
cwde
adc
shl
push
cmc
adc
test
xchg
(bad)
and
ds
es
ficom
jg
cwde
adc
ds
xchg
imul
mov
in
push
aas
pusha
in
push
add
jns
push
jno
aad
cmc
adc
cwde
adc
jg
sti
mov
cs
adc
shl
mov
in
push
jle
das
xchg
ds
shl
dec
aaa
call
(bad)
in
push
shl
mov
adc
pusha
inc
sbb
iret
jnp
in
adc
mov
iret
sti
test
lahf
adc
(bad)
call
(bad)
in
push
shl
push
lahf
jns
push
fwait
jns
push
lahf
jnp
ds
push
(bad)
jle
push
xchg
(bad)
add
xchg
ds
xchg
arpl
pusha
in
std
cmp
adc
ds
cmps
arpl
pusha
in
jg
call
jl
adc
jns
push
cmps
cmps
fist
adc
pusha
push
pop
add
sar
adc
lds
and
jle
in
and
popa
in
push
ds
adc
mov
iret
jns
push
outs
icebp
aad
pusha
cmps
arpl
pusha
in
jg
call
shl
rcr
stos
aas
lahf
data16
push
lahf
sahf
add
(bad)
in
push
retf
(bad)
in
push
shl
cmps
call
into
(bad)
in
push
into
jge
xchg
shr
imul
lahf
adc
(bad)
sahf
jmp
stc
pusha
cmps
arpl
pusha
in
jg
fwait
adc
jg
sti
sub
lahf
adc
ds
adc
cmp
adc
not
xchg
fistp
scas
fist
jg
fwait
adc
shl
jnp
adc
push
lahf
in
and
popa
in
push
adc
pop
pushf
fst
adc
pusha
push
pop
add
sar
adc
lds
xor
popa
in
push
ds
adc
mov
iret
jns
push
jae
aad
pusha
cmps
arpl
pusha
in
jg
fwait
adc
shl
cmp
repz
aad
sahf
adc
(bad)
push
aam
cmp
pop
call
push
xchg
push
out
aad
test
ds
xchg
jg
adc
push
cmp
lahf
mov
call
mov
repz
pusha
call
pusha
xchg
jmp
cmp
ficom
lahf
inc
push
fistp
fwait
ins
leave
inc
sbb
xchg
lods
loope
sub
das
cmc
xchg
adc
ret
sbb
xchg
cs
aas
lahf
adc
ds
xchg
nop
xchg
push
ds
adc
jmp
ds
xchg
ds
stos
xor
adc
push
push
arpl
add
dec
xchg
in
mov
(bad)
pop
pop
xchg
movs
es
lahf
fst
loop
pusha
es
dec
fwait
adc
jg
pushfw
shr
cmc
cmp
jmp
stc
movs
mov
pusha
es
ja
adc
jg
pushfw
shr
mov
or
pop
pop
add
cmps
aad
lahf
pushfw
shr
lea
lahf
adc
(bad)
mov
push
stc
movs
es
ficom
loop
pop
cs
fst
xchg
dec
xchg
in
mov
(bad)
adc
enter
mov
ds
ds
jmp
(bad)
push
aam
or
mov
ds
movs
es
cmp
mov
ficom
lods
or
adc
xlat
movs
es
cmp
out
lahf
fst
push
leave
cdq
sub
mov
ficom
loop
adc
mov
or
mov
ds
ds
enter
add
add
xchg
inc
(bad)
(bad)
jecxz
xchg
ds
das
popf
stos
adc
retf
enter
push
cs
adc
int
adc
scas
lahf
adc
int
adc
scas
lahf
adc
int
adc
scas
lahf
adc
int
adc
scas
lahf
adc
int
adc
scas
lahf
adc
int
adc
scas
lahf
adc
int
adc
scas
lahf
adc
int
adc
scas
lahf
adc
outs
enter
lahf
adc
stc
pop
sub
dec
mov
push
(bad)
(bad)
iret
push
xchg
ds
lahf
mov
out
sahf
(bad)
jmp
push
stc
fdivr
xchg
jns
sub
dec
gs
mov
lods
nop
aaa
pop
addr16
mov
je
shl
and
(bad)
jmp
adc
mov
sti
push
ds
adc
aas
enter
ja
js
pusha
dec
pop
std
(bad)
xchg
jnp
(bad)
adc
sbb
mov
lahf
add
cli
sbb
mov
jle
xchg
ds
mov
scas
shr
shl
mov
inc
sahf
faddp
adc
mov
or
xor
mov
adc
int
adc
scas
lahf
adc
int
adc
scas
lahf
adc
int
adc
scas
lahf
adc
int
adc
scas
lahf
adc
int
adc
scas
lahf
adc
int
adc
scas
lahf
adc
int
adc
scas
lahf
adc
int
adc
scas
lahf
adc
int
adc
scas
lahf
adc
int
adc
scas
lahf
adc
int
adc
scas
lahf
adc
int
adc
scas
lahf
adc
int
adc
scas
lahf
adc
int
adc
scas
lahf
adc
int
adc
scas
lahf
adc
int
adc
scas
lahf
adc
int
adc
scas
lahf
adc
int
adc
scas
lahf
adc
int
adc
scas
lahf
adc
int
adc
scas
lahf
adc
int
adc
scas
lahf
adc
int
adc
scas
lahf
adc
int
adc
scas
lahf
adc
int
adc
scas
lahf
adc
int
adc
scas
lahf
adc
int
adc
scas
lahf
adc
int
adc
scas
lahf
adc
int
adc
scas
lahf
adc
int
adc
scas
lahf
adc
int
adc
scas
lahf
adc
int
adc
scas
lahf
adc
int
adc
scas
lahf
adc
int
adc
scas
lahf
adc
int
adc
scas
lahf
adc
int
adc
scas
lahf
adc
int
adc
scas
lahf
adc
int
adc
scas
lahf
adc
int
adc
scas
lahf
adc
int
adc
scas
lahf
adc
int
adc
scas
lahf
adc
int
adc
scas
lahf
adc
int
adc
scas
lahf
adc
int
adc
scas
lahf
adc
int
adc
scas
lahf
adc
int
adc
scas
lahf
adc
int
adc
scas
lahf
adc
retf
pop
scas
lahf
adc
retf
pop
scas
lahf
adc
retf
pop
scas
lahf
adc
retf
pop
scas
lahf
adc
retf
pop
scas
lahf
adc
retf
pop
scas
lahf
adc
retf
pop
scas
lahf
adc
retf
pop
scas
lahf
adc
retf
pop
scas
lahf
adc
retf
pop
scas
lahf
adc
retf
pop
scas
lahf
adc
retf
pop
scas
lahf
adc
retf
pop
scas
lahf
adc
retf
pop
scas
lahf
adc
retf
pop
scas
lahf
adc
retf
pop
scas
lahf
adc
retf
pop
scas
lahf
adc
retf
pop
scas
lahf
adc
retf
pop
scas
lahf
adc
retf
pop
scas
lahf
adc
retf
pop
scas
lahf
adc
retf
pop
scas
lahf
adc
retf
pop
scas
lahf
adc
retf
pop
scas
lahf
adc
retf
pop
scas
lahf
adc
retf
pop
scas
lahf
adc
retf
pop
scas
lahf
adc
retf
pop
scas
lahf
adc
retf
pop
scas
lahf
adc
retf
pop
scas
lahf
adc
retf
pop
scas
lahf
adc
retf
pop
scas
lahf
adc
retf
pop
scas
lahf
adc
retf
pop
scas
lahf
adc
retf
pop
scas
lahf
adc
retf
pop
scas
lahf
adc
retf
pop
scas
lahf
adc
retf
pop
scas
lahf
adc
retf
pop
scas
lahf
adc
retf
pop
scas
lahf
adc
retf
pop
scas
lahf
adc
retf
pop
scas
lahf
adc
retf
pop
scas
lahf
adc
retf
pop
scas
lahf
adc
retf
pop
scas
lahf
adc
retf
pop
scas
lahf
adc
retf
pop
scas
lahf
adc
retf
pop
scas
lahf
adc
retf
pop
scas
lahf
adc
retf
pop
scas
lahf
adc
retf
pop
scas
lahf
adc
retf
pop
scas
lahf
adc
retf
pop
scas
lahf
adc
retf
pop
scas
lahf
adc
retf
pop
scas
lahf
adc
retf
pop
scas
lahf
adc
retf
pop
scas
lahf
adc
retf
pop
scas
lahf
.byte
xchg
ds
