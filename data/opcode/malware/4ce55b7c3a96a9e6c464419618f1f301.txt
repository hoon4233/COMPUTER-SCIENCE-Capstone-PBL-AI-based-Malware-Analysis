fcomp
(bad)
dec
and
lea
push
mov
or
sbb
jmp
push
mov
push
or
call
test
jne
pop
pop
ret
push
push
aas
int
rcr
mov
test
je
cmp
lods
add
cmp
(bad)
jmp
pcmpeqd
cmp
jae
sub
movzx
lea
jne
push
jb
pop
pop
xor
std
(bad)
fwait
ins
and
neg
sbb
and
pop
xchg
add
inc
fdivr
fnstcw
push
push
test
rcr
test
jne
pop
ret
push
cmp
or
pop
sbb
add
les
and
ins
shr
adc
xor
push
mov
inc
add
iret
or
inc
sub
lahf
out
aas
push
test
jne
mov
scas
inc
push
push
push
in
xchg
int
push
mov
xor
push
lods
std
dec
mov
pop
je
xchg
inc
mov
pop
lock
and
pop
push
pop
ret
pop
adc
sbb
dec
shr
inc
or
lock
dec
test
jg
cmp
adc
inc
test
add
jmp
mov
in
(bad)
fstp
mov
in
adc
push
mov
les
(bad)
cmp
or
push
fadd
adc
loopne
push
adc
mov
mov
pushf
push
push
aaa
stc
or
ficom
jno
and
(bad)
push
add
push
inc
mov
icebp
sbb
add
push
lock
dec
add
mov
sbb
sub
add
push
mov
in
add
or
icebp
rcr
xor
xor
(bad)
(bad)
fcomip
fbstp
add
inc
hlt
push
push
adc
push
push
xchg
sub
sbb
push
mov
push
adc
inc
ja
push
(bad)
leave
or
leave
fld
leave
add
add
add
adc
or
and
inc
pop
repnz
shl
fs
or
aaa
or
fld
int3
mov
add
mov
and
in
adc
outs
cs
imul
cs
push
push
ins
push
jo
dec
add
ss
aad
or
push
push
call
cmps
xor
xchg
out
mov
sub
xchg
adc
mov
mov
lahf
mov
adc
cmp
cmp
pop
dec
sub
push
push
adc
push
and
es
ror
inc
add
cmp
inc
add
or
fld
add
in
push
mov
xor
jb
xor
xor
jl
and
inc
les
daa
inc
(bad)
and
lea
or
mov
dec
sub
adc
xchg
dec
xor
les
push
add
add
pop
mov
test
add
pop
sub
call
in
mov
xchg
dec
push
inc
cmp
pop
jge
mov
outs
cmp
in
ret
xor
mov
cmp
and
dec
dec
push
inc
aaa
enter
ins
sbb
add
pop
cmp
(bad)
jl
xor
mov
inc
sbb
clc
loop
sbb
ret
mov
cli
aaa
fwait
rcr
or
and
mov
push
push
or
sub
mov
sbb
jne
sub
jg
or
or
int3
cmp
cmp
sub
inc
lock
mov
sbb
fsubr
adc
fist
push
cmp
dec
or
adc
push
jne
mov
mov
sbb
dec
push
adc
sbb
jnp
inc
add
inc
add
sub
dec
fdivr
cmp
out
out
mov
or
add
and
jecxz
add
sbb
iret
hlt
push
and
and
out
sub
sub
add
nop
sbb
pusha
push
mov
and
mov
push
inc
loopne
xacquire
dec
aaa
(bad)
(bad)
mov
sbb
or
inc
mov
mov
mov
add
aam
fdivr
mov
add
inc
add
sub
neg
leave
repz
and
cmp
dec
push
pop
aas
in
xor
push
pop
xchg
imul
inc
bnd
or
sbb
inc
jb
or
inc
and
pop
push
movs
inc
pop
fiadd
stos
cdq
nop
aas
jl
ret
xor
lea
lds
arpl
cmp
ds
push
(bad)
clc
scas
scas
shl
mov
pop
push
call
pushf
mov
fdivp
push
sbb
loopne
jmp
int3
mov
sbb
add
mov
xchg
cdq
mov
pop
popf
test
sub
adc
sbb
pop
dec
push
mov
and
and
jecxz
ins
test
stc
jae
jne
test
je
adc
add
cmp
push
mov
add
push
push
xchg
cmp
in
test
jno
and
xchg
fld
sbb
scas
je
push
pusha
sub
sete
add
rol
xchg
sub
in
jb
lea
mov
shl
cmp
dec
ficom
add
pop
mov
jmp
pop
jge
scas
ins
xor
push
repnz
xchg
cmps
jmp
xchg
dec
ds
scas
pusha
mov
jno
pop
cwde
mov
mov
leave
add
fs
xchg
retf
sbb
adc
leave
adc
jnp
cmp
cmp
clc
and
xor
push
push
inc
and
push
mov
fwait
pop
punpckhbw
adc
push
push
aam
clc
push
and
pop
push
push
nop
dec
inc
in
and
xor
push
cmp
movaps
add
or
add
leave
lea
bound
add
dec
fcomp
mov
leave
data16
adc
sbb
or
adc
or
jb
jmp
push
add
sbb
mov
sbb
das
inc
in
sub
leave
or
mov
inc
fisub
nop
jge
fsub
mov
mov
and
jmp
push
pop
and
icebp
(bad)
sbb
jge
inc
ja
int
or
bound
and
mov
sub
int3
push
push
mov
(bad)
call
leave
mov
(bad)
sti
arpl
test
lods
mov
cwde
push
cmp
push
mov
nop
xor
mov
jecxz
mov
add
mov
js
out
xor
pusha
mov
cmc
cmps
mov
shr
movs
inc
mov
cmp
mov
pop
cld
fsub
push
cmp
repnz
jb
outs
add
or
or
(bad)
sti
push
in
or
cli
lea
data16
test
mov
nop
mov
add
hlt
add
test
jae
sti
loopne
or
push
dec
adc
mov
pop
add
adc
adc
int3
not
adc
sar
cld
rol
dec
pop
push
pop
movs
arpl
add
adc
push
out
int
mov
add
enter
cli
mov
adc
adc
adc
into
push
fs
adc
das
xchg
sar
das
je
outs
sub
icebp
jae
mov
cmp
and
ins
mov
inc
mov
add
mov
dec
lods
add
adc
jmp
fnsave
jge
mov
mov
dec
popa
push
mov
stc
and
aad
bound
pop
pop
dec
mov
js
cmpxchg
jae
jne
es
adc
stos
add
mov
std
ret
movs
movaps
in
jg
adc
inc
cmc
lea
mov
jl
je
fld
int3
xor
(bad)
in
add
jmp
adc
aad
mov
xor
iret
(bad)
cmp
jb
fild
les
mov
push
push
inc
and
ins
xor
cmp
inc
cmp
add
dec
inc
add
mov
cmc
pop
adc
aas
adc
outs
hlt
jne
mov
pusha
lock
pop
cmp
jo
inc
test
push
adc
js
(bad)
push
add
push
jmp
xlat
cmp
je
sub
cmp
je
xchg
add
mov
and
adc
sub
pushf
xor
lock
sub
push
fwait
cmp
test
mov
push
push
dec
shl
push
and
pop
jg
lock
push
sti
int3
add
sbb
jg
dec
shr
push
stos
xor
xor
std
inc
(bad)
jg
shr
adc
call
inc
cmp
jl
outs
add
ret
outs
lea
or
jp
push
js
jne
fisttp
cmc
jbe
pusha
ins
push
push
pushf
push
xor
mov
push
fsub
mov
pop
sahf
xchg
push
rol
xchg
fild
and
(bad)
cmps
push
movzx
int3
push
shl
(bad)
lods
mov
sub
loopne
push
int
jl
sbb
jmp
sbb
(bad)
cmp
test
jne
sub
mov
push
mov
hlt
sbb
and
mov
mov
adc
jo
mov
in
nop
(bad)
mov
jne
lods
push
mov
xchg
ret
mov
sahf
add
pop
inc
lods
and
stc
loop
enter
cwde
or
add
test
sbb
ret
fld
mov
sub
das
or
lock
imul
pop
call
sbb
push
ins
popa
sbb
add
add
push
rol
mov
fadd
or
inc
lahf
push
dec
jmp
jmp
push
jge
mov
jbe
in
mov
shr
inc
(bad)
pop
cmp
jle
jb
cmp
(bad)
out
movs
xor
inc
cld
mov
lea
sub
or
jge
mov
adc
cmp
(bad)
fbld
ja
add
jmp
mov
ret
push
push
mov
pusha
jl
pop
inc
add
js
mov
mov
mov
ret
xchg
retf
pop
mov
das
ret
aas
mov
cmp
js
fdivr
push
sub
add
hlt
cmp
stos
push
fistp
shl
or
leave
xor
push
mov
aad
mov
mov
ror
jge
add
push
push
setb
ret
fisub
or
or
not
lods
jne
add
pusha
fldcw
fdivr
stos
ficom
cld
jb
hlt
mov
sub
or
ss
push
push
push
cmp
ja
push
push
loope
fisubr
sbb
pop
in
jmp
add
push
fdiv
ret
sbb
add
jl
push
cmp
cmps
imul
pop
mov
xor
js
lahf
ss
std
sbb
cmp
shl
jmp
adc
addr16
adc
pop
int3
ffree
mov
or
popa
or
fcmovu
outs
aam
push
lea
push
adc
jb
rol
or
(bad)
out
mov
mov
mov
dec
jl
out
arpl
jo
ss
push
jbe
add
cmp
cwde
push
mov
adc
nop
rcr
test
outs
and
mov
ret
pop
ins
imul
add
mov
mov
inc
or
sahf
xor
cmp
je
cmp
lea
jl
aas
rcr
das
mov
push
jne
push
(bad)
call
mov
repz
dec
test
push
test
aad
sub
pushf
pop
sub
mov
pop
push
inc
jl
or
inc
clc
outs
shl
push
mov
dec
dec
je
ret
loope
pop
fdiv
mov
or
shl
pop
add
fist
sbb
test
into
push
cmp
loopne
pop
mov
push
push
outs
add
add
mov
fcmovnb
retf
and
mov
jb
or
and
xor
sahf
cmps
adc
aaa
jp
sub
mov
jle
pop
mov
loopne
adc
pop
push
adc
mov
call
lea
clc
ret
outs
ja
dec
adc
outs
adc
mov
lea
xchg
xlat
inc
mov
adc
inc
sub
mov
push
mov
push
shl
idiv
add
push
sub
int3
out
test
pop
or
add
rol
or
out
por
add
pop
jge
dec
and
push
add
hlt
and
push
adc
push
stos
inc
jo
and
add
sub
pop
shl
jnp
cli
addr16
lock
jge
fdivr
cmp
mov
pop
sub
pop
adc
cmp
and
jg
ds
add
and
add
lea
push
shl
inc
adc
or
or
mov
pop
pop
daa
inc
popa
lahf
mov
jmp
dec
or
je
pop
pop
push
xor
or
jmp
jg
cmp
mov
loope
cmp
jb
(bad)
mov
add
sti
les
pop
pop
adc
mov
inc
das
mov
rcr
push
in
ins
in
pop
sbb
stos
push
pop
mov
test
retf
mov
addps
je
retf
in
mov
ins
cmc
adc
xor
xchg
push
mov
pop
out
mov
les
jo
sbb
adc
mov
dec
cmp
inc
adc
or
sub
adc
loopne
push
sub
(bad)
int3
push
and
inc
sbb
or
out
call
test
inc
inc
enter
ds
pusha
mov
je
push
int3
in
adc
add
jae
inc
pop
popf
ret
(bad)
jge
adc
mov
pop
lea
sbb
sbb
pop
and
sbb
push
das
(bad)
aaa
popf
lea
ret
jne
xor
jb
lea
add
adc
ror
push
data16
mov
add
push
call
clc
mov
mov
dec
inc
test
mov
call
aas
add
xchg
pop
or
or
popa
mov
icebp
mov
ja
imul
mov
outs
adc
enter
ret
enter
popa
lahf
adc
in
or
xchg
dec
ins
and
pop
and
loope
aad
sbb
aas
sbb
mov
mov
push
lock
into
dec
pop
sub
sbb
pop
pop
loope
mov
aad
or
and
fisttp
cmp
pop
jbe
xchg
or
(bad)
lock
and
fimul
je
or
scas
or
jne
ss
push
movs
rcl
and
into
push
ret
lods
ror
fmul
outs
jb
stos
push
adc
sub
mov
fist
add
test
cmp
and
jle
push
(bad)
dec
or
jmp
ret
pop
add
sbb
ret
and
sar
rcr
jle
je
sbb
repz
(bad)
jecxz
in
icebp
mov
inc
pop
and
xor
or
ja
je
jbe
ja
inc
adc
jmp
mov
push
les
sar
xchg
jne
cmps
fst
ss
aas
cmp
mov
loope
in
ins
(bad)
mov
mov
mov
inc
inc
or
repz
push
inc
dec
adc
or
push
add
mov
push
icebp
repnz
push
js
jmp
dec
(bad)
cmp
mov
ror
imul
xchg
nop
pop
push
mov
lds
movs
aaa
cmp
inc
mov
fstp
leave
and
mov
jo
inc
int3
fsubr
test
sahf
out
(bad)
test
sahf
in
(bad)
in
xor
adc
ret
popa
bswap
push
mov
(bad)
mov
dec
mov
movs
shl
sub
dec
sbb
jne
jmp
inc
push
mov
lahf
jmp
out
mov
sahf
or
mov
in
div
test
push
mov
sub
jl
retf
fldcw
je
lods
or
push
adc
movs
aaa
clc
imul
cmp
out
out
pop
cmp
xchg
repz
repz
adc
or
repz
inc
sbb
add
mov
or
and
mov
adc
mov
push
pusha
rcr
in
popf
push
adc
jae
out
jno
mov
or
clc
cmp
xrelease
loop
jns
mov
add
mov
lahf
popf
pop
enter
push
aam
mov
inc
inc
xor
pop
push
lea
push
(bad)
push
call
shl
lea
psrlw
ret
icebp
xor
cmp
aam
les
and
nop
mov
cmp
aas
enter
and
mov
sbb
sbb
sub
cmps
stos
jge
mov
add
cli
cmp
jae
sbb
mov
sti
dec
jne
add
sbb
jle
lock
push
stos
sti
cmps
ins
push
jle
ficomp
add
pushf
ins
ror
lock
test
push
pusha
mov
stos
and
icebp
das
sbb
mov
fisttp
sbb
inc
mov
and
add
jle
cmp
xchg
dec
or
jne
push
sub
push
sub
push
xchg
dec
in
scas
xchg
sbb
movs
shl
sbb
sub
in
jno
xchg
(bad)
out
sbb
xchg
movs
lods
adc
div
mov
js
mov
and
call
push
enter
sub
or
mov
ss
pop
add
setne
push
add
jp
fmul
jmp
or
xchg
cs
pop
dec
in
popf
push
cld
mov
push
push
cmp
cmp
je
gs
push
push
(bad)
test
mov
xchg
pushf
push
mov
lahf
gs
jle
sahf
pop
and
push
mov
movs
cmp
pop
shr
ret
cmp
xor
psubd
push
pop
and
test
xchg
in
sub
(bad)
mov
sub
rcl
retf
test
xor
push
lea
fisttp
sub
(bad)
call
push
mov
mov
ins
push
dec
dec
mov
push
push
xor
push
push
lea
add
mov
out
je
sub
and
sbb
rcr
rcr
mov
mov
(bad)
call
push
mov
add
mov
inc
add
mov
cmp
cs
mov
pop
xor
or
and
and
inc
jp
ins
or
jbe
sbb
sub
repz
sbb
push
adc
xor
cmp
inc
(bad)
or
jle
cmp
sub
jae
jae
push
push
arpl
mov
inc
test
pusha
rol
fistp
jmp
icebp
ror
push
add
iret
pop
mov
sbb
push
mov
movs
push
jg
dec
add
adc
adc
push
xor
push
push
sub
mov
mov
jmp
sub
push
add
js
cmp
add
mov
and
or
or
add
cmp
retf
out
adc
pushf
test
mov
sbb
dec
adc
push
cwde
pusha
lock
pop
sar
inc
push
bound
add
mov
push
data16
icebp
mov
(bad)
cwde
add
jmp
retf
xor
xor
pop
push
push
push
and
jbe
push
inc
mov
mov
retf
push
mov
ins
xor
sbb
and
xchg
push
sbb
imul
adc
xlat
push
pop
or
pop
mov
pusha
rcr
clc
add
je
add
div
cmp
jbe
call
retf
call
lea
(bad)
jmp
pop
or
stos
push
pushf
mov
(bad)
jo
pop
(bad)
stos
adc
rcr
xlat
or
les
mov
sahf
fldz
fdivp
jb
add
cmp
fsubr
mov
(bad)
dec
and
fld
pop
inc
push
ret
lds
mov
aas
mov
ins
add
adc
adc
jne
pop
mov
sbb
sub
mov
jne
push
mov
jl
lods
mov
leave
js
ror
pop
outs
jo
adc
or
aad
jb
pop
pusha
xchg
fstp
sbb
clc
out
xor
push
mov
pop
dec
cmp
loope
sub
mov
enter
adc
add
les
pop
jns
lods
and
xchg
adc
in
mov
xor
nop
add
inc
mov
or
jnp
sbb
dec
xor
sbb
push
push
sub
add
fmul
js
inc
inc
lahf
push
ror
fcom
pop
push
pusha
mov
sar
or
add
and
loopne
mov
jle
cmp
pop
sub
push
push
lea
aam
fdiv
sbb
or
dec
loope
sub
fs
inc
sub
push
retf
push
jl
push
cmp
or
out
or
cmp
xor
adc
or
push
test
imul
add
dec
sbb
xchg
xor
test
xor
mov
lds
or
and
(bad)
push
push
push
and
daa
jo
sbb
add
je
add
push
int
ja
mov
ror
adc
in
aaa
fadd
sub
int
in
imul
cwde
inc
fld
fmul
add
pushf
test
push
inc
jl
and
mov
push
jb
push
lahf
push
mov
fisubr
pop
repnz
or
mov
fisttp
or
add
dec
mov
push
dec
ret
or
repnz
push
xlat
icebp
lock
aaa
adc
sbb
mov
je
int3
push
loop
and
mov
imul
xor
push
pop
dec
(bad)
push
add
push
mov
gs
or
daa
repnz
movs
pop
jl
mov
inc
lock
sbb
leave
or
push
jo
adc
push
ins
push
rsqrtps
pop
add
pop
mov
and
and
adc
mov
push
nop
add
push
inc
adc
popa
ret
xchg
test
ins
pusha
push
push
ficomp
movs
mov
push
cwde
add
aam
icebp
and
push
mov
sbb
add
hlt
(bad)
cmp
call
ror
enter
lods
lock
push
(bad)
loopne
xor
das
cs
sub
push
pop
inc
test
fs
nop
in
int
dec
push
mov
pop
jnp
push
push
and
mov
dec
push
xor
push
outs
loope
ret
xor
xchg
or
push
pop
ins
push
pushf
jp
pop
inc
shr
dec
sbb
push
jmp
push
push
loope
je
ret
jo
dec
outs
xor
add
cld
inc
sbb
cmp
data16
sbb
ja
adc
inc
inc
push
sbb
mov
adc
push
clc
ret
lea
dec
enter
dec
mov
or
lock
fldcw
enter
add
popf
enter
(bad)
mov
cs
sub
xchg
mov
ret
test
or
cmp
add
(bad)
mov
jmp
(bad)
cdq
and
pop
lock
sar
lock
cmp
pop
pop
adc
jl
push
lods
xor
add
jecxz
(bad)
sti
jnp
call
push
or
ror
adc
out
add
std
inc
cli
push
mov
shr
add
mov
imul
push
retf
out
pop
test
jle
mov
out
das
and
enter
call
fdivr
add
mov
retf
imul
lea
outs
loopne
adc
cmp
je
cmp
pop
ret
or
xor
jne
rcr
jmp
in
dec
inc
sbb
xor
fisubr
jne
mov
hlt
push
arpl
lea
or
(bad)
js
pop
mov
and
cmp
dec
inc
push
push
push
clc
div
idiv
lock
inc
lock
and
xchg
(bad)
mov
jae
test
sbb
sub
inc
or
push
mov
fstp
push
int3
je
test
fisubr
sahf
hlt
sbb
or
(bad)
je
int3
jl
fstp
push
call
add
aaa
rol
lods
and
int3
inc
cmp
mov
sbb
sahf
imul
scas
push
add
jl
ins
arpl
outs
jo
loope
adc
jle
cmp
ins
xchg
cmp
mov
adc
sbb
xchg
(bad)
sbb
and
test
inc
or
jmp
(bad)
out
pop
lea
cmp
or
out
or
jp
(bad)
jge
jmp
mov
pop
(bad)
sub
sbb
jge
fadd
or
or
ror
fild
or
xor
sbb
mov
pop
mov
mov
xchg
add
jns
inc
ret
mov
outs
cmp
add
shl
ror
je
nop
or
adc
je
pop
pushf
or
lods
add
sbb
pop
mov
enter
cwde
sub
mov
pop
jecxz
leave
jge
cwde
push
or
bound
sub
push
aad
sbb
push
outs
das
pop
and
cmp
xchg
or
call
je
sbb
es
inc
rcl
mov
jl
jo
pop
jbe
xchg
xchg
and
jns
and
cmp
sbb
ins
rol
push
dec
lea
xchg
xchg
adc
cmp
sub
and
ror
(bad)
out
test
dec
inc
jg
sbb
clc
sbb
add
xor
xchg
or
add
xchg
mov
scas
add
lea
or
inc
(bad)
xor
mov
pop
les
adc
loopne
ins
pop
cmp
or
into
aam
sbb
pop
ss
or
and
inc
mov
into
mov
push
sbb
sbb
iret
pop
clc
adc
nop
sbb
or
test
cmp
mov
or
add
push
outs
ret
pop
sbb
cmc
push
pop
test
je
rcl
test
jmp
pop
not
inc
mov
fisttp
pop
lea
push
push
mov
mov
fs
ffreep
outs
jne
xchg
fstp
inc
mov
cmp
lods
dec
test
push
sahf
adc
ds
test
not
inc
fdiv
das
adc
jg
mov
cmp
sbb
mov
adc
pop
mov
pop
mov
in
clc
pop
out
and
sub
lea
pop
test
push
mov
sbb
sbb
add
call
adc
dec
mov
retf
add
inc
jle
push
mov
lahf
pop
and
or
test
lahf
or
int
pop
or
mov
push
cmp
test
dec
and
clc
and
pop
dec
cld
sub
clc
setb
scas
push
mov
sub
cmp
setae
or
aad
pushf
sub
add
icebp
ja
push
add
(bad)
mov
int
and
mov
push
or
cmp
movs
fnsave
in
fcom
dec
sub
cmp
lods
cmps
stc
aas
mov
push
mov
and
adc
movs
and
call
pop
pop
fistp
icebp
loope
je
ror
cld
jecxz
outs
rcl
mov
push
push
mov
inc
push
push
cmp
push
inc
shr
je
aam
sbb
pop
jp
add
inc
movs
adc
push
imul
push
cmp
dec
push
leave
test
inc
pushf
daa
scas
sbb
mov
xchg
push
aam
dec
mov
dec
adc
add
in
mov
dec
push
ja
movzx
or
cmps
rcr
mov
out
and
dec
fwait
idiv
aaa
push
inc
dec
add
add
adc
fsubr
add
pop
stos
or
push
jo
psrlw
lea
lahf
inc
dec
adc
push
dec
enter
and
and
aas
or
icebp
repnz
adc
movs
dec
out
mov
add
es
xchg
jmp
add
inc
pusha
jmp
lods
int
dec
das
push
add
add
lea
aaa
bound
mov
fwait
out
imul
xor
add
and
movs
mov
retf
ror
xchg
ror
and
shl
jle
inc
les
jl
or
mov
mov
push
push
pop
mov
dec
push
pop
or
enter
ret
cmp
movs
ss
add
push
fmul
lahf
(bad)
add
adc
je
dec
sub
or
mov
mov
sbb
fsubr
test
jmp
ja
sahf
jns
jo
inc
ins
sbb
or
dec
(bad)
push
adc
setle
nop
cmp
dec
push
pop
and
push
cmps
hlt
mov
shl
mov
push
dec
add
push
popf
rol
repz
dec
push
pop
xchg
mov
push
mov
shr
sub
adc
in
stc
je
xor
sub
or
xchg
shl
ret
in
sub
ret
mov
icebp
(bad)
(bad)
push
push
push
movs
pop
sub
and
dec
adc
cli
call
mov
out
mov
sahf
jl
sbb
push
stos
mov
setg
fld
sbb
pop
das
inc
sub
dec
jge
mov
dec
cmp
sbb
xchg
dec
mov
mov
fwait
xchg
ds
fstp
cs
jo
mov
and
int3
push
xchg
push
xor
loope
sub
sbb
and
test
sbb
cmp
jb
sub
xor
and
or
add
push
push
push
rol
xchg
iret
push
add
dec
pop
iret
cwde
pop
mov
xchg
lds
mov
mov
jmp
push
mov
in
mov
(bad)
push
aad
outs
ror
add
add
add
mov
xor
pop
in
xchg
or
mov
repnz
adc
movs
push
or
nop
outs
or
xlat
pop
or
aam
out
xlat
inc
jb
push
or
jle
push
ja
movs
fwait
or
cmp
or
add
add
popa
cmp
mov
push
fdivr
test
pushf
lods
mov
cdq
cmp
sub
enter
or
and
aas
push
out
cdq
or
ret
push
mov
je
call
rol
leave
lds
iret
inc
dec
add
std
fisub
fdiv
jl
ror
outs
mov
es
pop
mov
pmulhuw
xchg
test
add
test
push
or
sbb
pmaxub
dec
add
push
pusha
sub
xchg
pop
adc
ins
test
sub
cli
not
out
leave
or
fsub
jns
mov
and
sub
sub
push
dec
cmp
les
cmps
mov
cli
or
frstor
sub
and
mov
add
aad
lahf
aaa
dec
adc
cmp
imul
xchg
bswap
jae
cmp
push
ficom
sbb
push
jo
sbb
push
(bad)
(bad)
cmp
int3
xor
push
adc
mov
cmc
loop
cmp
sbb
jo
popf
sbb
bound
mov
sub
stos
sub
or
push
mov
fmul
pop
adc
sub
out
pushf
mov
xor
sbb
sbb
dec
push
push
sbb
push
lods
call
cmp
stos
inc
loopne
xor
sub
call
sub
scas
push
push
add
push
clc
dec
adc
inc
sub
lahf
add
pop
leave
in
jl
or
(bad)
and
push
(bad)
mov
adc
push
sar
cmc
xlat
rdmsr
mov
push
in
mov
push
push
imul
in
push
stos
repnz
stos
popa
push
and
mov
dec
or
in
clc
xor
mov
es
push
pop
mov
adc
loopne
pop
ja
or
add
in
xchg
or
sbb
xchg
xchg
iret
pop
out
cmp
or
xor
mov
enter
push
dec
ja
test
mov
rol
push
and
in
sbb
sbb
inc
jl
mov
sub
aad
ret
cwde
pop
push
adc
icebp
movs
je
sbb
shl
inc
jne
in
out
mov
mov
adc
xchg
movs
in
mov
int
sub
add
lods
cli
xor
adc
sbb
cmp
jnp
sbb
pop
pop
pop
cmp
push
push
sbb
aad
pop
aas
pushf
icebp
push
push
add
lds
ins
fdivrp
xor
nop
cmps
pop
cmp
test
cld
fsubr
icebp
push
cs
sbb
pop
mov
(bad)
mov
je
or
add
pop
dec
mov
or
or
in
mov
mov
push
add
xor
adc
loope
sub
xor
add
inc
out
and
sub
jmp
mov
or
and
mov
xchg
sub
jl
call
xor
das
jle
adc
sub
pop
add
es
or
push
pop
add
xchg
popa
pop
or
in
and
mov
fnstsw
aam
fwait
lods
push
push
cdq
push
adc
add
sub
sti
fucom
add
stos
repnz
out
mov
inc
and
or
adc
lds
push
push
clc
sbb
xor
sub
ror
inc
or
rcr
int3
jb
mov
push
or
push
or
add
sti
add
mov
cmp
pusha
mov
add
js
mov
das
jge
sbb
rcl
nop
sbb
jp
enter
mov
push
mov
adc
ficom
mov
add
mov
pop
pop
push
push
lahf
sub
mov
and
(bad)
pusha
nop
and
push
add
cld
sbb
push
add
bound
repnz
and
push
int3
dec
jle
adc
das
push
fs
and
stc
jl
dec
xor
add
mov
iret
xchg
sbb
add
or
and
cs
or
hlt
sti
push
push
cld
rcl
jb
jb
sub
xor
mov
arpl
jmp
(bad)
jmp
jne
adc
pop
add
cmp
and
adc
adc
je
in
hlt
push
test
in
test
sbb
add
ror
add
cmp
inc
xor
hlt
xor
push
mov
xor
adc
push
pop
shl
dec
mov
cmp
sub
or
add
adc
leave
fadd
mov
jbe
jg
pushf
jmp
push
sbb
ins
pop
mov
pop
lds
je
or
mov
mov
jb
push
and
cdq
dec
scas
retf
cmp
nop
xchg
mov
or
imul
test
xor
call
lods
dec
cmp
mov
icebp
sbb
inc
rol
pop
add
std
lods
and
mov
popa
jo
sar
sub
(bad)
sub
or
fdivr
mov
or
inc
cwde
pusha
fild
inc
mov
add
jge
mov
mov
(bad)
dec
ds
rcl
pop
push
sete
and
outs
loopne
mov
lds
mov
adc
and
fild
outs
mov
and
jg
push
mov
or
add
or
call
pushf
out
in
push
push
mov
push
jne
push
xchg
push
lods
outs
add
pop
stos
enter
mov
mov
adc
mov
test
mov
push
mov
es
or
or
test
add
adc
sbb
outs
or
imul
xor
xor
mov
jg
add
add
sbb
aas
aaa
push
inc
sbb
mov
cmp
push
inc
sub
adc
aam
and
xchg
xchg
cld
rcr
inc
mov
ret
clc
and
xor
xchg
stos
pop
lahf
bound
inc
dec
pop
lds
or
dec
inc
xor
mov
fsub
jmp
ds
add
push
(bad)
and
adc
push
add
lea
loopne
add
les
std
psrad
(bad)
ficomp
sub
mov
add
push
jo
into
into
inc
test
sar
(bad)
repnz
pop
push
sub
xchg
mov
je
or
sahf
mov
and
clc
mov
imul
dec
adc
and
pusha
push
pop
pop
adc
mov
push
(bad)
mov
test
je
popf
pop
scas
cwde
cmc
and
or
imul
jo
push
sub
jle
je
loopne
clc
lea
push
sbb
or
adc
mov
int3
jo
es
pop
fimul
dec
push
fnstsw
push
and
xchg
(bad)
popa
inc
ds
push
and
cdq
or
adc
imul
adc
ficomp
les
add
or
push
jmp
or
std
and
pop
test
retf
repz
jb
add
mov
dec
jae
pop
(bad)
or
mov
es
std
sti
test
inc
push
push
and
pop
inc
or
push
jns
cmp
mov
dec
and
xchg
test
pop
mul
loopne
xchg
jae
xor
jo
in
es
dec
adc
sbb
dec
loopne
xchg
cs
xor
es
test
nop
cmps
cmp
and
nop
retf
(bad)
and
fild
push
sub
pushf
xchg
stos
jbe
mov
imul
nop
inc
adc
inc
movs
ins
jae
pop
inc
out
jo
adc
add
dec
inc
and
cmps
add
clc
or
nop
mov
lock
adc
adc
setg
test
jns
mov
jecxz
sub
and
mov
dec
mov
je
ss
xor
push
add
inc
popa
in
xor
leave
pop
dec
pushf
and
bts
jb
and
pop
xor
push
out
movs
inc
add
inc
jb
cmp
adc
push
mov
aam
dec
shl
sbb
add
popa
loopne
and
les
cdq
and
cmp
ret
mov
shr
sbb
sub
mov
jle
lea
push
mov
mov
mov
sbb
mov
stos
sub
mov
mov
les
ret
xor
fcomp
cmp
and
repnz
leave
test
sbb
cwde
jmp
pop
(bad)
mov
mov
jmp
add
adc
mov
fidiv
ror
ds
nop
(bad)
jg
adc
sub
push
mov
dec
xchg
lods
cmp
hlt
sub
sbb
ja
test
inc
push
imul
cmp
inc
and
mov
shr
push
add
add
mov
add
and
sbb
movs
enter
jne
mov
or
add
sbb
jae
push
xor
jb
mov
push
cmp
retf
cmp
mov
jno
pop
and
mov
push
push
push
pop
fs
stos
xor
push
pop
sbb
sbb
sub
cld
out
jnp
push
and
adc
push
mov
ror
sbb
xor
add
shl
pop
jb
cmps
pusha
xchg
repnz
jl
les
pusha
xor
and
movs
pop
mov
push
push
les
outs
ja
dec
cmps
adc
rol
js
push
and
xchg
dec
iret
and
pop
push
cmps
fwait
mov
imul
or
push
add
push
and
push
lds
or
mov
pop
(bad)
mov
dec
add
ja
je
cld
test
hlt
dec
clc
aas
sub
dec
call
jge
mov
push
nop
mov
pop
push
add
sub
test
ror
fidivr
jg
push
mov
es
cmps
add
sub
add
xchg
pop
jl
hlt
lahf
cmp
psubd
xor
jne
xor
pop
sub
and
popf
dec
pop
pop
out
inc
xchg
mov
pop
int3
call
inc
jp
in
mov
xor
mov
rcr
ret
mov
or
scas
imul
push
pop
dec
je
std
mov
call
or
inc
add
mov
out
cmp
lea
jl
icebp
lods
clc
add
push
cmp
jl
inc
cmc
enter
adc
push
into
repz
pop
pop
rol
sbb
mov
mov
jno
test
push
inc
or
mov
pop
mov
sbb
mov
sbb
shl
repnz
add
cmp
dec
add
nop
cmp
leave
js
inc
outs
and
(bad)
adc
push
dec
mov
push
test
add
cmp
push
jmp
fisttp
or
ret
pusha
cmp
or
xchg
ret
inc
push
cmps
dec
ins
add
iret
pusha
add
ds
lock
jge
pop
daa
add
das
enter
addr16
sbb
scas
or
jo
or
sbb
or
mov
fucomip
cs
jmp
sub
sbb
inc
jbe
je
out
xor
(bad)
cmp
jl
shl
movs
test
add
ds
cli
mov
xchg
and
mov
das
cs
sbb
mov
mov
xor
inc
jle
adc
mov
mov
push
sbb
add
add
push
add
inc
scas
neg
ss
add
rcl
pusha
mov
mov
je
iret
fs
aad
jp
mov
sar
jl
mov
add
push
imul
ret
pop
test
ja
dec
leave
inc
pop
push
stos
add
loop
sub
dec
mov
(bad)
jle
and
add
inc
add
int3
pop
cmp
dec
cld
lea
sub
pop
mov
dec
jb
sbb
loopne
cmp
dec
push
dec
or
jo
(bad)
cmc
or
sbb
or
pop
data16
mov
cld
mov
(bad)
shr
cmp
loopne
loop
cmp
enter
sbb
xchg
icebp
test
inc
push
rcl
or
adc
xor
or
lock
lds
and
xor
or
test
leave
(bad)
xor
std
add
aad
jb
jno
cmp
push
xor
and
fadd
or
push
test
inc
scas
stos
or
push
shr
xchg
mov
dec
inc
leave
pusha
push
xor
ror
(bad)
adc
mov
mov
dec
dec
xchg
xor
sub
or
xchg
xor
inc
xor
lea
pop
xor
pop
test
push
push
mov
cmp
sbb
jmp
inc
add
pop
(bad)
pop
hlt
data16
je
inc
loopne
outs
sbb
push
clc
mov
xor
pushf
jmp
iret
shl
test
push
icebp
push
push
push
push
sbb
(bad)
jmp
mov
cmp
add
sbb
add
arpl
xrelease
add
jnp
test
mov
adc
xor
mov
mov
pop
test
add
xchg
sub
or
xchg
cmp
test
inc
and
fwait
inc
inc
into
scas
and
(bad)
and
and
daa
push
or
aaa
in
lock
add
mov
pop
leave
mov
nop
inc
and
or
fld
scas
cmps
add
cmp
jg
cmps
(bad)
push
loope
dec
pop
xchg
setnp
les
movups
or
pop
lds
and
jo
push
dec
add
clc
mov
cmp
push
add
dec
and
inc
sar
push
mov
aam
and
pop
jnp
icebp
push
mov
cmp
sahf
xor
leave
cmp
and
sbb
or
popa
outs
cmp
pop
sbb
xchg
hlt
cdq
loopne
dec
pop
and
mov
or
pop
jg
push
push
stos
mov
cwde
or
push
jmp
mov
xor
add
lea
(bad)
jo
data16
cmp
and
imul
pop
shl
inc
loope
or
xchg
mov
sub
jge
adc
adc
wbinvd
mov
and
shl
movs
xor
shl
mov
add
enter
je
add
dec
inc
and
js
pop
adc
push
push
or
scas
xchg
sub
adc
cmc
mov
sbb
stos
aaa
jnp
push
sub
xor
pusha
adc
dec
bound
mov
test
orps
scas
int3
or
pop
nop
xchg
xchg
sub
cmp
push
call
adc
push
dec
fisubr
leave
outs
xor
dec
mov
loope
adc
push
push
mov
sbb
rol
mov
inc
test
add
mov
ret
(bad)
pop
hlt
push
xchg
data16
inc
adc
mov
jbe
pop
and
sub
push
arpl
cmp
add
inc
and
or
or
scas
push
push
mov
and
sub
loopne
push
(bad)
fstp
mov
or
aas
rcr
inc
into
cmp
aaa
je
test
mov
pop
and
mov
add
xchg
loop
add
mov
shl
cmp
jmp
push
dec
(bad)
xor
stos
mov
push
inc
cwde
shr
call
test
pop
je
push
xchg
xor
mov
mov
lods
ror
and
jmp
adc
or
cmps
mov
add
iret
sbb
bnd
xor
add
cmp
add
ret
jge
xchg
cmc
push
ss
stc
in
(bad)
ja
lock
add
icebp
popf
fwait
and
mov
repnz
sub
mov
out
and
call
(bad)
cmp
mov
mov
pop
mov
mov
test
add
outs
mov
push
cld
lea
ret
adc
mov
mov
jbe
adc
sub
cmps
or
adc
out
pop
(bad)
mov
add
mov
sbb
push
mov
cmp
jne
mov
rol
cli
cmp
jl
scas
sub
test
adc
add
mov
pop
loop
push
daa
cmp
int
ror
mov
sbb
and
or
push
push
add
jl
xor
mov
push
shl
test
or
xchg
cdq
dec
dec
adc
(bad)
(bad)
jmp
mov
sub
dec
or
sub
adc
ja
add
jle
inc
jg
adc
pusha
cmp
mov
sahf
adc
lea
add
cmp
icebp
mov
sbb
adc
in
int3
jo
(bad)
sub
int
add
or
mov
add
repnz
mov
into
(bad)
pop
hlt
pop
adc
pop
or
mov
dec
hlt
jge
cmp
push
pop
cmp
fld
inc
push
push
das
lds
mov
cdq
aaa
pop
dec
mov
es
push
inc
or
je
fisubr
inc
sbb
pop
push
es
or
or
or
adc
sahf
jl
mov
cmps
add
pop
push
jg
push
add
push
dec
add
sub
sbb
push
ret
pushf
fcmovnu
test
vorpd
xlat
call
ins
enter
adc
pop
pop
dec
jb
add
test
cwde
push
ret
mov
jmp
and
pop
push
sbb
add
stos
ret
dec
jmp
add
and
outs
or
pushf
push
adc
sbb
push
retf
test
or
dec
pop
jb
imul
sub
mov
sbb
dec
jb
add
lods
rol
inc
xchg
cmp
lds
ds
mov
push
mov
adc
cdq
adc
sbb
jmp
inc
jle
pop
idiv
add
inc
cmp
adc
xor
or
rcr
or
ja
or
femms
push
pop
mov
add
test
repnz
add
(bad)
je
jns
sbb
and
or
dec
add
jecxz
push
mov
xchg
ror
jge
clc
sbb
xchg
mov
jl
mov
loop
std
dec
ins
lea
cmp
jle
pusha
sub
cmp
jle
sub
sub
call
xlat
cmp
cwde
pop
shl
sbb
sub
and
mov
(bad)
cli
and
xor
rol
add
loopne
xchg
cmp
xchg
push
push
push
push
loope
rcr
addr16
push
add
and
ficomp
xchg
mov
jno
push
add
ror
repz
jmp
mov
scas
and
or
hlt
gs
mov
ror
dec
in
call
inc
or
push
jo
inc
or
adc
mov
push
and
cld
fmulp
mov
jo
jl
in
xor
rol
shr
add
adc
mov
or
sar
adc
imul
push
mov
sbb
inc
(bad)
pop
jmp
or
or
xor
inc
cmp
ins
xor
cmp
out
and
xchg
fldenv
adc
add
or
pop
xchg
call
and
xchg
dec
sbb
js
dec
lods
xchg
xor
in
pop
fsub
(bad)
out
xchg
jmp
adc
sub
push
push
push
js
mov
cmp
mov
push
ror
xor
lock
xor
leave
leave
and
jg
jle
jmp
and
jl
jns
icebp
out
xor
test
dec
mov
mov
push
icebp
mov
push
sub
popa
fnstenv
fcmovnu
add
shl
and
mov
jecxz
push
sub
or
(bad)
jns
ficom
pop
mov
shl
inc
cmp
cmp
jne
test
sbb
(bad)
sub
fisubr
or
jp
pop
sbb
jle
xchg
jne
mov
push
es
mov
int
sbb
adc
or
xchg
sbb
or
mov
and
push
add
add
xchg
dec
push
addr16
je
dec
or
nop
in
sbb
push
add
sub
enter
xor
(bad)
adc
test
mov
jae
add
in
or
jb
and
mov
cdq
nop
and
lahf
push
xchg
xchg
push
jae
movs
xor
stc
sub
sbb
mov
push
jns
sub
cmp
stc
xor
xor
ds
repnz
jnp
sbb
test
adc
xchg
pop
adc
push
sub
cmp
js
leave
inc
or
sbb
add
movs
retf
dec
mov
pop
jb
adc
mov
xchg
or
pop
rol
sbb
test
sbb
imul
inc
mov
stos
daa
cs
or
xor
and
dec
test
adc
mov
push
mov
fwait
dec
sub
jmp
xor
pop
pop
xor
adc
(bad)
add
xlat
jmp
dec
sar
mov
das
cmp
push
cs
in
ja
xlat
dec
loope
push
mov
push
push
add
pop
add
add
xchg
daa
pop
add
mov
push
sbb
sbb
adc
pop
push
adc
xor
imul
js
inc
push
push
cmp
popa
test
sti
mov
and
jne
aaa
jg
repnz
push
movs
paddusb
dec
pop
sar
xlat
daa
movs
or
sub
and
push
mov
pop
or
in
dec
lsl
dec
js
adc
ins
push
add
mov
sbb
(bad)
dec
mov
pop
push
push
add
inc
sahf
and
call
pop
push
lds
dec
add
stc
adc
or
add
jp
push
ret
test
mov
sbb
in
xchg
out
mov
(bad)
mov
cmp
sbb
stos
adc
cmp
pop
scas
push
aam
mov
push
cmp
into
and
mov
push
pusha
cmp
cmp
js
add
jmp
fsubr
(bad)
lock
sub
cwde
inc
pop
dec
jnp
ret
mov
jmp
mov
adc
pop
xor
addr16
shl
xchg
adc
fdivr
adc
mov
into
gs
bound
mov
inc
(bad)
xor
mov
mov
adc
mov
jae
in
fild
fs
inc
lea
clc
xchg
ja
fld
sub
scas
push
cmps
add
pop
cmp
pop
mov
xor
xor
idiv
xor
stos
mov
pop
push
or
add
ins
imul
xchg
cmp
sub
xchg
mov
mov
outs
push
adc
jl
add
vmread
ins
enter
cmp
je
and
add
das
rol
cmp
pop
shr
ins
xchg
xor
jo
and
icebp
jne
(bad)
sub
add
(bad)
movd
adc
add
jb
push
or
nop
add
sbb
call
(bad)
aam
cld
(bad)
shr
(bad)
je
test
inc
mov
aad
mov
sbb
push
pop
xchg
mov
xchg
sub
add
fbstp
cmps
mov
shl
sbb
push
pop
sub
add
dec
clc
or
xor
xchg
movs
sbb
sub
ficom
mov
iret
adc
add
ds
in
out
ss
loopne
adc
stc
repnz
or
loopne
add
add
cmp
mov
mov
add
pop
stos
out
js
lea
lar
ret
ret
and
mov
or
sub
xor
les
repnz
test
and
dec
les
loop
jmp
or
adc
mov
push
pop
std
push
push
jnp
frstor
xchg
inc
call
nop
in
sbb
fld
sub
xor
icebp
add
daa
outs
add
cmp
inc
dec
add
or
jae
xor
arpl
sbb
push
sub
xor
jle
pop
dec
push
pushf
adc
in
inc
and
lock
int3
cs
push
push
lock
ret
inc
sbb
(bad)
mov
add
movs
or
or
imul
or
xchg
call
fnop
fstp
test
add
inc
(bad)
push
cmp
clc
jb
pop
imul
lods
pop
clc
jg
mov
push
xchg
lea
sbb
in
push
push
inc
sub
push
imul
sbb
jl
add
and
and
jle
sahf
cli
adc
(bad)
sti
sub
imul
add
in
aaa
adc
ret
add
pop
lock
clc
sub
or
jmp
push
jbe
adc
add
pop
out
add
push
inc
(bad)
pushf
outs
mov
sub
or
pop
push
cdq
hlt
adc
sub
sub
loopne
add
cmps
jle
sub
push
out
add
call
pop
out
ret
and
jmp
into
not
add
add
xchg
sar
adc
icebp
mov
int3
ins
sub
and
and
punpcklbw
or
add
movs
imul
scas
adc
out
mov
dec
pop
push
bt
dec
out
ffreep
clc
repnz
inc
dec
mov
mov
ret
je
aad
push
add
loope
rcl
add
sbb
or
fs
(bad)
push
int3
inc
jno
js
mov
or
lea
ret
xor
add
pop
jp
std
ins
or
push
pop
daa
add
mov
popa
xlat
int
mov
in
or
adc
loope
loopne
ds
mov
mov
enter
or
sub
push
push
out
push
rcr
or
das
inc
add
add
sub
icebp
jnp
add
add
jmp
js
popa
push
push
faddp
add
cmp
jo
jno
add
sub
add
sbb
movzx
add
push
push
cdq
sub
xchg
push
lods
mov
test
push
push
(bad)
push
cmp
push
adc
or
sub
(bad)
sub
movs
add
inc
clc
add
int3
aad
sbb
push
js
(bad)
jns
mov
push
add
adc
or
das
pop
loop
xor
mov
sbb
or
ficomp
addr16
push
pop
scas
call
cmp
cld
dec
add
shr
inc
(bad)
je
mov
jnp
or
pusha
adc
xor
dec
inc
push
fnsave
push
xor
sbb
cwde
addr16
sti
(bad)
(bad)
pop
push
call
push
nop
fmul
aad
xchg
shr
cmp
or
sub
bndldx
sub
and
push
mov
sbb
pop
shl
pusha
pop
xchg
add
xor
test
mov
add
sbb
arpl
xor
push
lea
add
dec
and
cdq
add
fnsave
movs
xor
mov
ins
ror
aas
and
and
fimul
mov
fidivr
xor
adc
add
popf
aad
jp
shl
inc
push
fwait
xor
cld
sbb
call
push
ror
es
dec
cmp
pop
push
inc
mov
inc
clc
aaa
lock
xlat
or
bound
dec
mov
inc
mov
shr
imul
adc
dec
rcr
test
push
push
dec
cmps
(bad)
call
jge
adc
clc
xor
push
sbb
mov
inc
loopne
call
clts
popa
mov
clc
in
and
add
sar
ret
aam
push
push
mov
pusha
mov
jle
lock
cmp
jbe
add
dec
push
and
movs
popf
inc
aaa
lock
cld
push
push
xchg
jo
inc
popf
cmp
popa
push
stos
or
push
jp
push
jmp
je
and
das
inc
jnp
cmp
jae
mov
loop
and
jg
cmp
add
jb
pop
lea
je
aam
pop
adc
fadd
mov
jo
out
fistp
adc
pop
and
inc
and
or
jb
pop
mov
movs
rcl
mov
xor
jg
xchg
dec
cmp
and
mov
sbb
lods
dec
ret
outs
test
and
add
dec
imul
(bad)
xor
ret
jg
das
add
or
or
push
cmp
push
cmp
lea
jne
push
push
mov
adc
push
fisttp
jl
(bad)
mov
mov
(bad)
mov
lods
rcl
xchg
(bad)
push
pop
cld
fsubr
repnz
in
mov
loopne
shl
pop
sbb
popf
xor
(bad)
call
mov
xlat
add
loope
add
pop
mov
push
inc
(bad)
mov
sub
sbb
fcomp
call
jl
adc
mov
mov
push
jl
std
xchg
adc
xchg
cmp
jbe
jnp
jmp
add
xor
movs
xchg
cmp
inc
and
mov
cwde
cmps
daa
sub
fmul
cs
pop
mov
inc
mov
push
pop
push
fiadd
mov
rcl
call
cmps
xor
data16
sub
das
or
out
int3
sub
or
pop
mov
scas
push
rcr
je
sub
jp
dec
xor
xor
in
(bad)
pop
sub
in
sub
clc
je
ins
fistp
mov
mov
jecxz
add
inc
inc
ret
jo
test
sbb
dec
push
dec
xchg
add
hlt
hlt
pop
sub
ror
xchg
fst
ret
(bad)
hlt
(bad)
jle
inc
je
jge
les
cld
jg
inc
js
sub
adc
xor
test
jmp
jecxz
lods
mov
mov
push
sbb
es
jne
adc
xchg
lods
mov
outs
pop
in
neg
pop
sub
add
push
loopne
xor
sub
dec
inc
les
enter
and
jl
mul
jne
cmp
push
inc
adc
and
inc
pop
pop
lods
mov
scas
es
sub
in
mul
fisub
jecxz
mov
jl
aad
ss
movs
cmp
ret
jmp
dec
je
aas
lods
(bad)
bound
jne
aas
mov
addr16
imul
pop
imul
lods
in
or
dec
add
sub
cmp
jne
sub
pushf
pushf
xchg
ror
fptan
sbb
push
aas
dec
add
push
repnz
and
push
add
add
mov
les
fisttp
sar
ror
pop
or
in
sbb
dec
fmul
cwde
jo
xor
iret
pop
sbb
xchg
ds
add
rcr
aad
in
dec
fstp
xchg
xchg
jb
lods
fwait
mov
pop
test
push
cdq
push
in
mov
dec
(bad)
xchg
mov
ins
push
movs
jl
adc
call
sub
push
retf
sub
jmp
cmp
popa
cmps
mov
sbb
pusha
or
pop
mov
push
pusha
inc
ins
push
push
or
or
cs
leave
push
or
hlt
pop
dec
mov
push
imul
sbb
adc
loopne
jo
loopne
push
mov
inc
mov
sbb
inc
fiadd
xor
(bad)
mov
loopne
mov
dec
out
add
stos
pop
ret
loope
and
pop
rcr
dec
add
or
sub
or
lock
imul
cs
fcom
fwait
sub
lock
ja
cmps
les
dec
xor
dec
call
pop
lea
imul
push
add
or
mov
xchg
push
es
popa
ror
and
lea
mov
jge
movs
jo
xchg
imul
and
dec
repz
xchg
xchg
sbb
in
adc
sub
gs
inc
and
jae
and
push
fdiv
cmp
sub
loopne
mov
lock
mov
adc
inc
lods
lock
add
and
xor
jo
sub
out
push
imul
in
adc
int3
mov
push
or
dec
jmp
test
call
imul
cwde
daa
loopne
hlt
add
push
mov
rcl
add
push
mov
mov
push
addr16
push
jo
lea
test
dec
adc
mov
pusha
pop
std
ret
or
mov
xor
push
mov
push
cmc
jns
daa
and
mov
push
pop
adc
jno
shl
in
ins
push
sbb
pop
(bad)
rcr
push
pop
pop
ds
ins
push
mov
jmp
inc
ret
jns
push
inc
stc
add
xor
sbb
adc
and
rcl
or
mov
xchg
jge
push
add
cmp
mov
jge
ins
mov
in
pop
dec
adc
daa
push
xor
enter
mov
jbe
icebp
cmp
lahf
push
fsub
hlt
sbb
or
cmp
mov
scas
add
sbb
inc
in
pop
or
test
pusha
cmp
sub
mov
adc
cld
aam
xor
lea
adc
xor
push
ja
or
pop
arpl
(bad)
fs
out
pop
int
mov
inc
retf
and
dec
sub
cmc
mov
ror
xchg
rcl
push
sti
mov
outs
pop
test
sbb
push
cli
hlt
(bad)
mov
test
sbb
mov
clc
push
mov
shl
and
(bad)
pop
cmps
mov
push
xchg
jbe
cmp
and
cdq
or
in
stos
xor
test
aad
dec
jle
push
xor
test
and
inc
mov
pushf
mov
push
and
or
cmc
nop
or
sub
es
mov
cmc
sub
jle
mov
sbb
leave
daa
adc
sub
and
or
test
jae
xchg
ss
push
sub
pop
and
(bad)
pop
mov
inc
repz
sbb
aad
jge
test
push
dec
cs
test
jmp
outs
sbb
push
js
arpl
jns
popf
mov
xor
je
add
test
stc
sbb
loopne
push
xchg
enter
pop
push
loope
into
push
xchg
and
lods
dec
push
lock
sub
mov
lods
mov
sub
outs
pop
cs
inc
pusha
or
pushf
das
js
xchg
push
and
daa
sub
in
jmp
aas
mov
xor
xor
dec
das
cmp
pop
leave
push
lods
pusha
leave
stos
pusha
sbb
mov
movs
rcl
ds
lods
loope
or
inc
imul
add
ins
push
xchg
xchg
xchg
mov
push
xor
mov
mov
pusha
cmps
or
mov
pop
or
mov
iret
xor
mov
push
div
mov
pop
shl
ret
push
push
cdq
xchg
add
mov
push
push
push
mov
jmp
or
push
movs
mov
adc
pop
fnstenv
cld
(bad)
int3
dec
verr
xchg
jo
cdq
adc
(bad)
mov
cmp
cmp
pop
xor
cmc
enter
dec
mov
and
rcl
mov
pushf
sub
pop
cmp
cmp
mov
xchg
mov
sbb
out
inc
movs
retf
dec
out
arpl
int3
xor
mov
in
push
cmp
mov
cmp
pop
rcr
imul
inc
mov
scas
jbe
jmp
repz
pop
or
xor
xor
fs
push
xor
loope
inc
mov
xor
popa
je
popa
xor
push
cmp
jecxz
sbb
ret
xor
mov
(bad)
mov
dec
fimul
retf
mov
push
movaps
push
test
adc
add
ins
mov
jno
loop
jle
inc
adc
xor
stos
push
xor
adc
sbb
xchg
xor
sub
pop
fdivr
lea
scas
and
dec
jne
ds
sbb
dec
cmp
data16
sub
out
and
push
(bad)
aaa
mov
fcom
mov
repnz
gs
hlt
adc
xchg
xchg
fwait
mov
and
enter
ds
jmp
repz
cwde
in
dec
push
ret
jl
mov
sub
inc
into
(bad)
mov
ja
jnp
jmp
push
mov
mov
nop
cwde
sub
pushf
in
adc
pop
and
jp
in
call
or
and
xchg
in
sbb
add
dec
pop
jge
push
cdq
sub
cmp
jo
test
mov
clc
or
sub
or
and
retf
shl
push
inc
jae
das
ret
fsub
jge
or
sub
mov
(bad)
je
and
inc
mov
jnp
jns
and
add
(bad)
pop
xlat
add
mov
push
daa
js
cli
cmp
fimul
and
inc
aas
push
mov
dec
fdivr
mov
pop
push
mov
div
fcmovne
cmp
push
adc
gs
sub
cmp
pop
and
sbb
mov
ret
mov
xor
sub
int
das
es
pop
(bad)
mov
mov
dec
sbb
jne
or
dec
jbe
lds
pop
ins
aas
xchg
mov
cmp
into
push
inc
aas
mov
sub
in
pusha
daa
lds
cs
push
fs
and
ror
pop
mov
and
push
rcr
or
mov
test
cmp
mov
stc
adc
mov
outs
push
xchg
jp
push
mov
js
leave
adc
push
sub
xchg
dec
and
sbb
cwde
mov
push
ficomp
push
jmp
mov
repz
hlt
(bad)
sub
push
xchg
(bad)
sbb
aad
popa
enter
hlt
and
or
std
les
add
jge
mov
push
inc
inc
scas
jo
pop
call
add
arpl
fisttp
push
sbb
push
cmp
pop
dec
adc
sub
dec
imul
cmp
(bad)
dec
mov
jae
dec
push
adc
sub
aas
inc
push
xchg
out
pop
loopne
adc
jl
push
sbb
xchg
jno
push
add
dec
popa
push
adc
push
js
das
rcl
and
add
adc
inc
jge
pop
and
xchg
ror
stc
cmp
or
aas
dec
enter
xchg
dec
sahf
test
hlt
lock
push
push
or
ficomp
les
pop
loope
push
lea
sbb
cmp
add
adc
loopne
push
sub
in
add
add
scas
pop
fdivr
repz
or
cdq
and
sub
adc
add
in
pop
add
mov
push
rol
jnp
or
xchg
fmul
mov
loopne
sar
or
push
xlat
jmp
lea
out
in
dec
loopne
push
popa
test
outs
mov
or
cmp
je
adc
pusha
pusha
fsubr
and
call
out
and
sbb
xchg
es
data16
add
jge
pop
mov
cmp
pop
and
inc
aaa
popa
push
pop
mov
inc
hlt
daa
cmp
ins
or
mov
and
nop
dec
cmps
popa
pusha
dec
fs
pop
inc
mov
ja
push
or
and
cld
adc
sub
mov
sub
sbb
arpl
scas
out
add
xchg
test
xor
dec
test
push
js
push
or
in
add
dec
mov
fisttp
push
add
fwait
ret
xor
mov
outs
mov
sub
xchg
adc
cmp
push
add
push
es
dec
iret
jns
mov
add
rol
adc
or
dec
dec
and
xor
xchg
xchg
enter
xchg
sbb
xor
mov
push
in
movs
cmp
call
mov
mov
inc
adc
or
leave
cmps
fwait
xchg
xchg
adc
inc
pop
mov
xor
cmp
inc
dec
xlat
jnp
enter
sub
xor
cmp
aas
sbb
jb
cmp
pop
inc
adc
or
dec
jp
dec
int3
mov
sbb
xor
lea
cmp
cmps
jmp
ret
int3
clc
ror
loop
push
dec
add
retf
shr
movzx
ss
outs
fucomi
or
enter
push
push
push
mov
sbb
push
cmp
dec
push
mov
ss
fbld
clc
shl
mov
cmp
xchg
sub
(bad)
sbb
fs
lods
add
das
pusha
and
pop
in
or
add
movs
jbe
push
sahf
cmp
fcomp
add
int3
mov
mov
clc
push
pop
es
lahf
popa
fadd
sub
pop
push
fwait
mov
inc
(bad)
sbb
jle
adc
outs
xlat
iret
std
ret
dec
mov
ins
push
push
cmp
pop
add
mov
sbb
cmp
jecxz
xor
or
mov
stos
jg
popa
lea
mov
or
add
dec
(bad)
and
adc
nop
push
leave
daa
cmps
push
adc
js
xchg
and
call
or
rcl
xchg
enter
dec
push
push
cmp
mov
les
lds
test
xchg
jne
pop
add
mov
sub
inc
xor
fimul
popa
cs
and
pushf
(bad)
lods
(bad)
rcl
push
mov
dec
pop
dec
or
adc
mov
xchg
adc
add
jnp
add
(bad)
ins
dec
adc
pop
jge
cmp
jne
push
mov
les
adc
enter
mov
add
jmp
daa
push
adc
retf
clc
fstp
pop
mov
fild
and
mov
add
sub
cld
je
scas
mov
inc
add
inc
sub
loopne
es
add
cmp
mov
lahf
push
jb
add
push
pop
xor
mov
aas
push
lea
push
das
and
cmp
cmp
out
xor
inc
or
xchg
les
aas
jge
push
sub
adc
call
xchg
fild
or
or
adc
hlt
hlt
stos
add
aaa
jno
iret
fbstp
mov
mov
in
jg
mov
in
mov
loopne
inc
clc
sub
cmp
dec
std
mov
add
fst
ret
inc
jl
cmp
push
add
ret
call
loopne
pop
inc
or
fadd
inc
xchg
sub
push
push
(bad)
sub
cmp
je
dec
hlt
sub
mov
mov
pop
push
mov
mov
jge
cdq
test
aaa
pop
inc
test
repz
push
lea
push
inc
push
xor
pop
fnsave
dec
(bad)
mov
dec
mov
addr16
xchg
adc
or
iret
cdq
push
enter
adc
jb
adc
enter
cmp
fs
inc
xchg
jbe
leave
add
pusha
xor
xor
xlat
mov
aaa
add
ds
and
pop
nop
fwait
pop
mov
imul
sub
aaa
push
jecxz
pop
or
in
es
movs
adc
sub
cld
inc
pop
jnp
fistp
inc
ss
or
hlt
or
dec
push
xor
or
lock
mov
mov
push
mov
xchg
loopne
xor
adc
push
adc
jns
test
lods
cmp
xor
cmps
mov
lods
adc
js
add
mov
ror
sub
or
in
cmp
cmp
jne
jmp
mov
or
or
loopne
shr
mov
mov
sub
adc
jbe
call
mov
sbb
pop
and
inc
adc
ret
mov
or
xchg
adc
sbb
push
pop
mov
xor
je
push
pushf
pop
push
inc
add
lods
add
xchg
jb
and
daa
mov
sub
mov
popf
scas
lods
sbb
movs
mov
adc
or
pop
mov
pop
inc
or
inc
dec
je
scas
inc
mov
and
inc
test
sbb
xor
xor
jmp
jmp
mov
push
add
test
movs
(bad)
push
lea
mov
in
iret
pop
adc
mov
pop
dec
xor
ret
ror
int
(bad)
mov
inc
or
mov
rcr
xchg
nop
enter
out
paddq
movs
sub
dec
test
add
add
sbb
loopne
bnd
push
jne
add
push
cmps
in
std
sbb
sub
inc
sub
cmp
push
das
test
arpl
(bad)
stos
add
add
push
inc
xor
mov
enter
sbb
add
test
ds
inc
push
push
cmp
bnd
jns
add
sar
adc
clc
movs
push
ret
inc
in
inc
hlt
sub
xchg
push
cs
mov
xchg
adc
in
xchg
xchg
sub
sub
repnz
sub
and
sbb
rol
adc
adc
ds
mov
popf
je
dec
es
and
xor
les
into
and
inc
lods
mov
push
xchg
push
push
pop
int
hlt
movs
mov
inc
inc
xchg
add
rcr
or
and
push
mov
fwait
loop
or
jecxz
das
jne
cmp
add
dec
aaa
(bad)
rcl
js
jmp
and
mov
add
fst
xchg
fidivr
nop
or
and
cwde
inc
js
sbb
out
jb
mov
cmp
push
scas
pop
ret
lea
je
mov
sbb
adc
retf
sbb
cmp
push
jl
add
lock
loopne
add
xchg
into
shr
push
and
mov
mov
movs
mov
and
jl
jo
test
rol
fidiv
sub
mov
inc
mov
or
js
push
je
add
add
add
add
je
mov
fdivrp
adc
jmp
pop
jmp
push
cmp
lea
jge
data16
mov
cmps
scas
ret
and
jne
lds
in
jo
adc
cmp
pop
jmp
je
imul
add
in
xchg
push
stos
test
push
stos
add
xchg
mov
ret
mov
mov
and
jmp
cmp
mov
and
xchg
sbb
push
ficom
xor
js
js
das
mov
test
jmp
add
sbb
adc
add
iret
rcl
inc
scas
xchg
push
lds
adc
sub
out
dec
sbb
push
cmps
mov
jl
pop
add
and
into
or
fisubr
sub
mov
and
vpmacsdqh
sbb
and
add
stos
jb
into
pop
and
xchg
sbb
cdq
xchg
xchg
je
add
add
xchg
cmc
add
xchg
sub
cmps
dec
lock
jbe
pop
cmc
mov
xchg
jb
mov
push
cwde
and
(bad)
push
push
test
outs
sti
push
rcr
dec
bnd
gs
push
loop
call
sub
test
dec
je
jg
test
xchg
leave
jne
mov
dec
jne
(bad)
sub
inc
int3
sub
and
pop
out
into
rol
xchg
adc
(bad)
retf
les
dec
aad
sub
xchg
loopne
loopne
or
pop
and
lahf
sub
sbb
shl
jb
fdivr
add
mov
jne
adc
sbb
icebp
(bad)
cmp
pop
and
fs
xchg
cmps
xchg
aam
and
dec
scas
retf
xchg
add
add
enter
cdq
stos
aaa
nop
add
or
out
mov
call
mov
sub
lahf
xchg
cdq
adc
fldenv
nop
rol
imul
ja
push
pop
sbb
and
(bad)
push
rcl
sub
jns
nop
out
out
pop
in
adc
fimul
sub
xor
mov
scas
ret
add
or
adc
fist
test
add
xchg
clc
aam
lock
out
jge
mov
cmp
repz
lods
sbb
xor
jg
mov
push
pop
mov
(bad)
mov
and
inc
ret
mov
rcl
sti
add
inc
call
scas
test
inc
lea
ins
xor
or
add
xchg
push
xchg
inc
adc
adc
add
lea
ins
(bad)
lods
dec
add
push
imul
into
test
mov
cmp
jge
mov
push
loopne
pop
and
xchg
mov
lock
push
mov
jb
ror
(bad)
aam
adc
inc
and
movs
imul
adc
jmp
cmp
mov
ret
xor
and
xchg
or
clc
push
scas
into
adc
call
mov
pop
test
dec
cli
mov
add
push
inc
xchg
repnz
sbb
int3
leave
push
add
ret
inc
mov
pop
dec
add
aas
push
push
push
pop
sub
and
jb
rcl
retf
shl
xchg
mov
ret
push
mov
pop
cmp
rcl
int3
(bad)
and
pop
lds
push
pop
bound
mov
mov
shl
arpl
inc
inc
cmp
or
adc
and
mov
adc
or
iret
fxch
push
sub
push
jno
pause
xchg
nop
cmp
pop
and
call
inc
movs
jns
adc
sbb
and
aas
pusha
mov
and
push
mov
inc
jp
lods
nop
loopne
(bad)
jp
sbb
fistp
add
lea
cmp
fcom
hlt
jne
cmp
aaa
iret
or
pushw
sbb
jle
add
lahf
(bad)
dec
outs
sbb
add
mov
cmp
loope
push
push
jmp
pusha
mov
sbb
aaa
std
ss
add
nop
jae
mov
xor
call
jo
push
mov
ins
bound
retf
jmp
xchg
shl
lods
imul
pushf
sub
sbb
mov
cmc
dec
xor
push
je
inc
add
cmp
jl
jmp
add
mov
repz
shr
(bad)
hlt
pushf
xor
test
xchg
les
enter
mov
daa
fldcw
sbb
jmpw
(bad)
xor
xor
add
lods
not
or
cmp
push
inc
push
sbb
push
loopne
add
not
cdq
jmp
mov
pop
mov
cmp
or
mov
mov
shr
add
or
dec
push
push
js
(bad)
js
das
pop
in
push
sbb
fistp
mov
and
adc
xor
std
and
loopne
cmp
inc
cmp
push
adc
push
push
aaa
and
icebp
dec
call
inc
jne
jmp
cmp
xchg
or
fs
fld
imul
nop
add
xor
jo
dec
push
sbb
sub
push
sbb
push
mov
dec
and
mov
mov
or
push
and
adc
dec
add
gs
adc
adc
ss
xchg
mov
push
mov
sub
call
push
sbb
loopne
test
pop
loopne
mov
or
test
pop
movs
cmp
mov
xor
or
lock
dec
inc
mov
adc
push
cli
jno
pop
and
or
adc
mov
add
add
sbb
inc
inc
or
add
cmp
pop
or
xor
sub
sbb
fdivr
inc
mov
dec
stos
movs
pop
test
popa
push
mov
mov
lock
xchg
push
mov
inc
pop
ret
bound
movs
sub
nop
add
jo
xchg
adc
mov
push
js
sub
sub
and
leave
xor
adc
and
mov
and
adc
adc
jge
add
imul
push
cli
test
push
mov
cs
cmp
cs
ret
or
dec
and
add
lds
mov
cs
cmp
cmps
(bad)
xor
or
jmp
push
xor
push
stos
xchg
push
or
rcr
and
xchg
imul
cmp
imul
scas
push
shr
pop
or
or
sbb
imul
sub
push
push
mov
mov
sbb
adc
ins
mov
xchg
rcr
mov
sub
add
and
xor
fcmovnb
popa
mov
inc
xor
jne
lock
mov
stc
jb
sbb
add
cmp
jae
xchg
gs
pop
mov
push
xor
test
cmp
stos
add
ja
push
push
push
je
mov
add
or
lods
call
pop
mov
inc
(bad)
inc
or
in
cmp
xor
hlt
push
dec
dec
outs
add
das
inc
xor
push
jmp
inc
pop
cmp
jl
pop
ds
int3
xor
cs
mov
mov
inc
and
(bad)
jl
mov
cmp
leave
xchg
adc
jb
xor
add
xor
adc
sub
or
xor
mov
clc
pop
mov
add
out
inc
add
add
mov
or
test
mov
pop
shr
push
aas
mov
add
and
loope
jo
xor
sbb
sbb
xor
scas
and
ins
dec
or
stc
scas
ins
inc
(bad)
cmp
das
adc
pop
xchg
rol
cmp
push
das
pop
mov
add
mov
push
inc
add
lds
retf
mov
sbb
rcr
xchg
push
add
sbb
cmp
mov
rol
and
loopne
sbb
inc
test
outs
dec
out
sbb
int
dec
and
cmp
lods
sub
cmps
inc
pop
jmp
aaa
mov
adc
aam
cmp
outs
sbb
add
pusha
jmp
or
fs
mov
push
or
ror
call
ss
add
xchg
or
dec
test
mov
jl
fisub
fcom
pop
cs
jno
pop
jge
mov
shl
in
andps
push
dec
sahf
or
xor
mov
cmp
into
adc
mov
adc
and
sbb
mov
dec
scas
sqrtps
pop
mov
clc
or
sub
fadd
inc
xchg
es
jbe
cmp
les
or
or
xchg
dec
retf
add
lock
or
or
and
mov
or
lock
outs
adc
movs
jge
data16
cmp
mov
inc
popa
es
mov
aad
add
xlat
aad
push
rol
div
xor
inc
sbb
aam
sbb
add
sbb
repnz
jp
or
inc
xchg
push
mov
in
xor
mov
loopne
fisub
adc
hlt
jg
std
call
les
mov
mov
out
mov
stos
mov
adc
mov
xchg
les
ret
daa
xor
jmp
dec
hlt
scas
push
arpl
dec
pop
add
jne
push
dec
inc
fldenv
dec
stc
dec
and
mov
push
pop
mov
je
cmp
and
adc
mov
jne
pop
leave
pop
mov
test
movs
ret
add
pop
jb
ret
jle
mov
push
and
cmp
imul
push
jno
xchg
mov
sti
adc
pop
call
mov
add
add
add
sub
xchg
jg
popa
xor
cmp
dec
cwde
stos
adc
xor
sbb
popf
dec
es
out
test
jb
add
push
push
nop
ret
add
add
daa
or
xor
add
sub
dec
gs
sbb
and
push
push
nop
retf
sub
add
or
xchg
xor
cmp
add
add
inc
push
sbb
or
retf
pcmpgtb
cli
cmps
sbb
jl
push
jo
add
jl
mov
xchg
into
sar
adc
in
or
in
add
adc
test
shr
inc
enter
pop
add
dec
mov
in
sub
and
fcomp
xchg
js
sub
pop
push
inc
pusha
sbb
mov
mov
(bad)
adc
sbb
jbe
inc
and
and
cmp
mov
popf
pop
and
or
adc
or
or
lea
dec
pop
sbb
cmp
and
(bad)
sbb
pop
ror
push
rcr
adc
and
lea
int3
rcl
sbb
ins
data16
hlt
setne
mov
xchg
xor
dec
dec
or
xor
or
dec
xor
xchg
xor
or
xor
xchg
xor
dec
and
and
dec
xor
add
dec
xor
xchg
xor
add
ds
adc
mov
sub
add
mov
in
int3
aaa
add
adc
and
add
add
lods
push
lea
add
and
sub
dec
pushf
cmps
sbb
pop
pop
in
adc
add
xchg
sbb
inc
call
sub
pop
jne
cwde
call
jmp
or
dec
push
cmp
adc
mov
sbb
add
inc
loope
jmp
and
pop
lods
call
loopne
add
dec
sbb
dec
movs
cmp
cmp
and
aaa
push
add
xor
mov
test
add
cld
into
fiadd
and
add
sbb
rcr
inc
pop
xor
add
push
fdiv
add
sub
in
pop
and
and
test
push
outs
and
add
nop
xor
loope
fild
int
sub
fucomi
sar
add
lds
or
push
ins
mul
sub
sub
mov
loopne
pusha
push
mov
out
mov
lea
lds
sub
lds
pop
or
adc
sbb
sbb
cdq
dec
inc
push
cmp
sub
std
sbb
mov
in
or
lods
sub
dec
push
dec
sub
push
ror
pop
cmp
dec
push
push
(bad)
sbb
mov
xor
dec
hlt
cmc
es
pop
pop
or
sbb
enter
cmovnp
jl
and
mov
inc
sub
inc
and
jnp
hlt
mov
jne
inc
jns
mov
xchg
inc
mov
and
dec
jl
sub
or
xchg
dec
push
hlt
repnz
sbb
dec
mov
push
hlt
push
leave
xor
or
mov
and
sbb
and
shl
je
sbb
mov
add
out
push
mov
test
scas
adc
xlat
popa
push
mov
iret
push
es
or
cmp
push
mov
fbstp
out
pop
dec
mov
push
stos
dec
xchg
cs
mov
pusha
xlat
adc
push
sbb
cli
scas
inc
cmc
sbb
push
or
ins
fs
inc
mov
inc
cmp
aad
mov
jb
xor
aaa
jnp
xor
and
and
xchg
mov
je
mov
fs
push
mov
jmp
inc
cmp
leave
and
adc
leave
mov
or
aas
adc
inc
movs
add
push
cmp
push
call
mov
mov
add
outs
(bad)
sub
mov
int3
fbstp
inc
mov
cmp
xor
push
jmp
add
mov
ins
xor
jo
(bad)
or
push
pop
pop
ret
fmul
add
nop
cmp
xchg
mov
test
sar
in
xchg
mov
cld
jge
add
xor
push
xchg
pop
push
push
fiadd
mov
sbb
test
add
fisttp
fistp
sbb
icebp
mov
add
or
sub
rcr
dec
or
jns
scas
cld
dec
fsub
loope
pop
lock
cmp
or
pop
mov
push
loopne
inc
aas
mov
pop
sbb
xchg
cmp
das
cld
mov
(bad)
je
sub
js
push
pop
in
shr
mov
cmp
jmp
pop
(bad)
out
or
cmp
test
or
retf
ret
je
lods
cmp
call
pop
add
xor
in
pop
adc
inc
pop
rol
push
sbb
jb
jecxz
mov
ret
lods
mov
btc
push
mov
lea
xor
aad
mov
push
cmp
adc
sub
adc
fadd
xchg
fmul
adc
int
cmp
or
xchg
scas
das
push
lods
xor
jo
inc
mov
cmp
pushf
jmp
lea
pop
mov
lahf
inc
sub
inc
pop
xlat
fbstp
or
inc
arpl
pusha
loop
xor
fs
xor
jle
cmp
das
test
in
cmc
sbb
jge
jae
push
push
xchg
sbb
sti
jmp
mov
adc
lea
or
in
in
loop
xchg
dec
fdiv
imul
cwde
add
add
lock
jmp
mov
sbb
add
ins
pushf
(bad)
xchg
adc
adc
xchg
jo
and
push
es
add
add
iret
push
lods
dec
fnstenv
js
pop
or
adc
inc
mov
ret
or
pop
ret
and
xchg
push
jl
sbb
lds
retf
xor
int3
add
inc
and
cmp
adc
dec
adc
pusha
and
inc
lods
or
xor
mov
mov
(bad)
loope
pop
jne
stos
inc
mov
adc
adc
int3
xor
add
ret
leave
adc
pop
aad
cmps
add
mov
xor
pop
adc
jns
cmp
data16
int3
add
std
or
lahf
test
rcr
jl
rcr
cmp
sub
ror
inc
cmp
stc
imul
push
lock
mov
mov
jae
imul
xchg
sbb
test
push
dec
adc
push
sbb
pusha
inc
sub
cmp
push
pop
push
in
in
pop
xor
into
pop
daa
ret
aas
push
xchg
jbe
ret
pop
push
pusha
bound
(bad)
nop
pop
and
ds
push
pop
pop
and
or
xchg
retf
mov
and
(bad)
mov
inc
jo
leave
lea
push
nop
fstp
xchg
xchg
xor
and
std
les
mov
or
and
sub
sar
cmp
lods
mov
in
mov
fld
or
call
adc
or
adc
pop
mov
push
hlt
push
fstp
dec
fcomp
dec
push
cs
dec
outs
or
dec
dec
add
inc
mov
in
nop
adc
sub
adc
push
adc
mov
jne
cmp
mov
je
(bad)
add
jns
jl
mov
test
sbb
mov
push
hlt
outs
aam
xchg
sahf
(bad)
(bad)
(bad)
call
add
xchg
stc
pop
repnz
nop
push
sbb
mov
je
jo
pop
add
pop
push
outs
push
test
cld
movs
aad
push
adc
mov
adc
mov
sbb
or
lea
dec
push
push
mov
jb
adc
pusha
sub
jmp
fisub
xchg
cs
inc
js
sbb
push
xor
inc
jecxz
push
lock
cmp
aas
or
adc
pop
mov
mov
rcr
stos
hlt
sahf
mov
cwde
sub
movs
cdq
xchg
xchg
sub
sub
pusha
xchg
xor
ror
sub
test
add
mov
shl
sahf
ja
push
add
add
rcl
inc
js
mov
push
jnp
dec
push
mov
and
push
in
jl
dec
loop
call
add
xor
ficom
mov
jne
imul
sbb
inc
lea
enter
add
add
cmps
add
mov
mov
dec
and
addr16
add
mov
dec
les
aaa
dec
mov
inc
cmp
test
jae
loopne
stc
ret
or
adc
add
loop
cmovg
pushf
jne
nop
int
add
add
or
cmps
and
js
pop
mov
xchg
xor
adc
push
aad
hlt
pop
aaa
or
fs
or
sbb
jne
test
sub
rcr
inc
dec
push
mov
mov
xor
test
pop
or
or
inc
sub
xlat
add
sub
and
scas
ret
out
mov
pop
mov
lods
mov
cmp
push
xor
mov
cli
and
sbb
pop
clc
adc
jmp
idiv
push
stc
cld
sbb
sbb
push
push
addr16
sub
test
jmp
into
aam
and
cmp
mov
stos
jp
scas
je
or
mov
cli
movs
nop
and
lock
inc
cmp
jmp
or
jl
mov
xlat
push
add
mov
and
gs
dec
jne
xchg
lock
cdq
xlat
cdq
mov
mov
mov
jmp
sti
inc
cmp
mov
add
sar
sub
pop
mov
adc
test
lea
adc
sbb
xchg
inc
fiadd
jno
rcr
out
jmp
pop
dec
jns
les
cdq
xchg
add
rcl
stos
imul
inc
cli
mov
cmp
aaa
adc
aas
push
adc
sbb
pop
dec
or
in
pop
add
jb
push
dec
lahf
pushf
sbb
fidivr
movs
sub
mov
ds
inc
sub
sbb
cmp
add
or
inc
in
xor
and
pop
push
or
fs
pusha
jg
dec
add
pop
push
and
pop
xchg
adc
data16
mov
cmps
lea
daa
ins
aas
aad
stos
or
push
(bad)
sub
ror
sbb
scas
mov
repnz
idiv
cmp
pop
push
inc
jnp
dec
mov
xchg
icebp
enter
mov
outs
adc
cmps
and
adc
movs
dec
adc
adc
jo
inc
sbb
mov
lea
add
and
ud2
test
inc
xchg
mov
ins
sti
ds
imul
add
add
out
hlt
and
dec
jl
stos
in
push
rcr
mov
(bad)
fstp
push
cmp
ret
das
add
sahf
push
xchg
sbb
nop
jb
add
add
gs
mov
mov
jno
imul
mov
cdq
cs
dec
test
and
mov
sub
sub
mov
gs
cs
ret
pop
xor
dec
ret
sub
push
and
mov
pop
pop
push
ret
xor
retf
and
or
stc
fs
std
arpl
add
test
and
add
adc
or
cmp
or
das
add
mov
mov
add
into
push
adc
dec
rol
movs
fs
sub
pop
or
ror
push
or
shl
and
mov
retf
int
add
bound
ins
sbb
sbb
bt
bound
leave
and
mov
dec
out
inc
dec
push
sbb
pop
jmp
and
stos
int3
ror
imul
cmp
iret
fdiv
push
std
les
ins
fldcw
jb
jmp
mov
stos
jle
mov
ficomp
push
or
leave
pop
cmp
ss
jmp
out
aaa
push
xchg
pusha
add
rol
fisubr
or
add
mov
sbb
fcomp
inc
and
icebp
push
pop
inc
push
(bad)
rcl
add
inc
push
or
xor
stos
popa
xor
std
movzx
movs
and
and
or
inc
dec
pop
sub
call
push
dec
push
in
push
(bad)
fs
and
in
sbb
or
adc
push
shl
push
sub
add
inc
xlat
cmp
or
push
pusha
movs
push
add
sbb
push
push
fisttp
(bad)
ss
push
repnz
inc
hlt
push
xchg
ja
and
cdq
adc
imul
jns
mov
mov
or
inc
adc
and
xchg
sbb
fistp
cmp
inc
shr
push
pusha
sbb
loopne
scas
mov
loope
mov
inc
add
push
ficomp
scas
mov
inc
sbb
clc
cmp
dec
push
dec
popf
es
pop
xchg
mov
sbb
xchg
or
call
sub
sub
ret
je
or
xchg
jo
test
xor
movs
add
pop
pusha
add
rcl
or
pop
push
mov
jmp
inc
lahf
add
and
pop
enter
or
int3
sub
adc
or
shr
cs
push
cld
push
lock
(bad)
aad
adc
je
mov
jg
mov
fsubr
push
lds
inc
pop
push
(bad)
shl
sbb
xchg
enter
lds
ficomp
push
lods
inc
cmp
jb
(bad)
mov
sub
into
pop
push
push
mov
xchg
and
dec
jne
mov
ins
dec
or
mov
xor
outs
cmp
sbb
gs
or
leave
and
adc
mov
push
mov
jecxz
mov
aaa
loope
add
add
adc
adc
add
add
push
imul
add
cmp
jmp
inc
jmp
xchg
adc
add
lea
pop
and
add
cs
pop
cmp
cmp
dec
inc
push
into
adc
adc
cdq
out
test
xchg
dec
add
xor
or
aaa
jge
mov
inc
add
pushf
dec
xor
retf
aam
stos
stc
nop
push
retf
and
cmp
in
das
push
not
jl
jl
sbb
test
inc
js
sbb
inc
sbb
dec
adc
xchg
sbb
add
adc
mov
mov
and
test
lea
retf
les
aam
dec
out
mov
and
mov
mov
stc
bound
add
fs
cmp
test
dec
inc
add
inc
aam
pop
(bad)
and
shr
ret
sub
mov
aam
pop
sbb
daa
adc
add
jg
rcl
cs
mov
into
sub
pop
dec
fsubr
sub
dec
cmp
jae
inc
cmp
sbb
lock
outs
sub
mov
push
pop
and
mov
scas
cmps
out
jns
mov
sahf
jge
mov
add
or
mov
js
aaa
sbb
inc
hlt
push
repnz
(bad)
repnz
mov
adc
in
adc
cmp
mov
add
push
test
mov
inc
or
es
jmp
sbb
and
in
jne
lea
sbb
jle
or
stc
mov
ror
xchg
and
pop
sbb
outs
nop
popa
outs
push
stos
pop
test
add
pusha
mov
mov
shr
dec
jbe
sbb
jae
sbb
int3
scas
jge
movzx
mov
mov
add
std
hlt
push
fdivr
push
nop
shl
daa
push
or
push
inc
leave
mov
loop
xor
add
sub
pop
aaa
stos
test
movs
sub
es
outs
sub
cmp
mov
data16
and
and
sbb
pop
int3
rol
mov
cmp
push
enter
mov
mov
psubb
stc
jbe
or
xchg
(bad)
(bad)
jbe
sub
adc
lahf
push
pushf
clc
mov
add
pop
mov
cs
add
and
or
call
lods
push
sub
mov
inc
jbe
mov
or
imul
xchg
xlat
or
push
mov
add
sbb
inc
ja
test
sub
add
push
sub
call
sbb
imul
je
pop
cdq
adc
imul
es
mov
sub
loop
jbe
push
inc
mov
inc
jmp
inc
adc
dec
pusha
mov
pop
pop
lock
pop
ja
out
add
call
add
cmp
jae
inc
sbb
adc
add
sbb
in
not
(bad)
mov
jns
ret
sbb
add
pop
and
pop
mov
or
rcl
and
nop
mov
bound
fst
aaa
hlt
adc
sar
or
add
or
adc
adc
sbb
fld
jmp
add
rcr
xor
je
shl
dec
push
push
arpl
pop
xor
pop
add
pusha
push
ja
jne
add
imul
je
sbb
fiadd
in
jnp
or
inc
xor
ja
and
(bad)
in
rol
and
or
pushf
mov
sbb
lea
pop
inc
mov
jb
test
add
jns
adc
mov
sahf
test
bound
pop
sti
push
pop
inc
dec
test
out
dec
lea
dec
or
into
jecxz
push
clc
add
xor
or
jmp
push
test
or
jl
sbb
js
ror
je
jo
and
push
pop
ins
cmp
push
dec
fs
ret
push
inc
and
dec
pop
add
in
dec
push
or
xchg
sub
aaa
mov
inc
and
pusha
adc
inc
or
ss
mov
repz
lahf
jmp
or
leave
pop
int
adc
pop
add
push
xor
cs
pop
inc
cwde
push
imul
xor
and
pushf
dec
and
imul
setge
int
sub
xchg
adc
mov
pop
rol
add
inc
nop
jmp
xchg
jns
inc
pop
ror
cmp
xor
cmp
aam
push
cld
push
push
mov
out
fwait
sub
adc
aam
sub
inc
inc
xor
es
push
dec
jg
pop
nop
fwait
ret
out
inc
clc
rol
mov
cmp
ret
lahf
in
outs
lock
outs
xor
or
lea
lods
and
add
mov
xor
sti
jle
push
(bad)
les
push
arpl
or
sbb
dec
aaa
and
pop
pop
rcl
cdq
out
(bad)
test
retf
(bad)
les
dec
loope
mov
sub
in
cdq
mov
inc
dec
and
(bad)
dec
or
xchg
or
js
adc
sbb
les
xchg
push
jne
adc
push
adc
mov
cmp
add
pop
and
test
xchg
or
dec
mov
adc
pop
adc
push
mov
rcr
imul
(bad)
shr
xchg
cmp
inc
jne
xlat
push
ds
inc
test
stos
js
sbb
cmps
inc
pop
pop
dec
xor
retf
mov
xchg
(bad)
ret
cmp
outs
xlat
call
pop
pop
cwde
inc
lar
mov
dec
push
dec
fmul
mov
rcr
cmp
adc
or
xor
mov
and
inc
mov
xor
sub
jecxz
(bad)
je
push
jne
lea
scas
je
mov
fistp
mov
or
(bad)
xlat
icebp
push
add
or
dec
movs
shl
and
add
push
or
pop
jo
dec
cmp
push
outs
pop
push
(bad)
mov
jno
adc
arpl
mov
push
sbb
and
je
mov
push
mov
pop
sti
dec
das
dec
mov
arpl
sbb
out
mov
lea
add
inc
adc
(bad)
push
xor
mov
xor
pop
inc
pop
add
ins
popa
lds
lahf
ss
mov
add
dec
fcomp
mov
mov
jp
stos
inc
push
pushf
and
and
jo
fcmovnbe
xchg
push
cmps
push
test
mov
pop
or
inc
cli
arpl
pop
xchg
push
ret
add
xor
cmp
sbb
add
push
xor
add
sub
fild
pop
fs
fs
jmp
test
movs
add
inc
push
mov
inc
sahf
dec
or
push
mov
push
scas
or
add
lock
je
jb
mov
cli
sbb
jmp
jmp
mov
retf
dec
loop
push
push
adc
jl
sbb
inc
lds
rep
and
lea
retf
xor
fcomp
retf
and
sub
call
test
mov
mov
inc
sbb
test
cwde
test
dec
outs
push
js
dec
dec
mov
dec
push
sbb
movs
xchg
ss
jne
add
push
add
push
cmps
fwait
jns
retf
jmp
test
add
mov
dec
pop
bnd
push
dec
shl
ins
mov
and
mov
xor
iret
stos
push
adc
xchg
out
pusha
adc
outs
(bad)
jmp
es
or
mov
shr
mov
ins
in
and
push
lea
jg
std
aaa
test
xchg
push
(bad)
and
and
and
xchg
jns
lahf
jnp
sbb
cdq
out
jmp
nop
mov
push
mov
add
pop
sbb
and
jmp
pop
jbe
shl
jo
xchg
sbb
push
fdivr
aad
sbb
sub
push
push
cwde
in
test
mov
cmp
adc
popa
cmp
dec
xor
push
in
call
repz
and
add
push
pop
call
sbb
pop
push
sbb
shl
jns
test
test
xchg
movs
xor
mov
sbb
inc
aaa
jno
jns
xor
adc
leave
and
and
inc
and
xchg
sbb
sbb
and
and
test
jmp
mov
and
add
loop
sbb
test
les
les
or
inc
inc
add
mov
push
push
je
cmp
popa
movaps
inc
or
sbb
adc
add
(bad)
and
add
es
pop
push
jg
int
inc
das
test
add
add
mov
mov
push
dec
mov
fmulp
dec
push
aad
xchg
cmp
popa
jo
xchg
add
mov
mov
lahf
push
or
lods
inc
push
popa
xchg
xchg
or
xor
add
jb
inc
retf
and
(bad)
mov
mov
fadd
call
in
or
sub
sub
push
or
icebp
sub
aad
test
sbb
sbb
or
je
mov
int
dec
mov
fcom
push
or
push
cmp
nop
push
dec
push
sub
cmp
dec
sbb
test
sbb
or
add
add
aaa
push
cmp
dec
js
inc
test
dec
push
push
xor
mov
jne
mov
cmp
inc
gs
movs
mov
pushf
ret
add
mov
or
jne
xchg
or
and
fisubr
and
and
icebp
xor
neg
xchg
push
mov
xor
aam
lods
call
pop
sub
push
or
fnsave
ret
add
clc
add
push
pop
call
mov
pop
ins
in
or
outs
sub
repz
mov
dec
add
push
dec
dec
es
xor
push
mov
ss
mov
fild
and
cmps
inc
ins
mov
xor
movs
cmc
fidivr
adc
dec
fist
or
sbb
push
je
sbb
and
and
aaa
and
pusha
test
daa
sub
cmp
lods
outs
or
movs
sbb
(bad)
retf
and
adc
js
stos
inc
shr
add
sbb
cmp
adc
xchg
or
ds
popa
mov
mov
outs
iret
movs
add
out
push
sub
adc
test
lds
adc
cmp
lods
sub
or
jecxz
sub
jp
xchg
inc
pop
or
or
and
iret
cmps
or
jp
inc
push
mov
xor
sti
dec
cmp
or
and
or
rcl
add
jecxz
iret
add
mov
sub
inc
or
lods
ss
or
inc
inc
arpl
fisttp
sti
(bad)
mov
and
loope
inc
mov
(bad)
fcmove
or
ret
popf
in
mov
jnp
sub
sbb
fadd
inc
pop
in
popa
jmp
aaa
sbb
popa
movs
ins
fist
enter
mov
dec
push
adc
jp
or
cmp
adc
or
push
xchg
lods
add
cdq
and
adc
movs
sbb
push
nop
pop
cmp
add
sub
fs
sub
adc
adc
push
inc
enter
adc
add
push
nop
mov
stc
pop
push
xchg
mov
sbb
add
add
or
or
mov
cmc
test
mov
mov
fldl2t
mov
sbb
and
xor
ins
sbb
mov
add
jno
sbb
add
sbb
xor
jns
fs
xchg
cs
mov
pusha
push
inc
aad
and
scas
and
mov
push
xor
inc
xor
sub
(bad)
js
sub
add
and
add
jb
dec
push
inc
pop
push
mov
and
sti
xchg
mov
dec
xor
mov
and
push
and
dec
and
mov
outs
sbb
loopne
dec
mov
and
or
sbb
out
ss
inc
ins
pop
mov
inc
das
pop
or
sbb
adc
sbb
xchg
push
enter
cmp
or
popf
shl
and
dec
fs
stos
mov
and
dec
cdq
inc
popa
add
add
add
retf
push
xchg
or
pop
push
xchg
sbb
xor
and
sbb
sub
or
cmps
fldenv
adc
jne
es
movs
cs
enter
push
enter
leave
dec
adc
jbe
test
cmp
jno
pop
movs
stc
add
cmp
inc
push
mov
add
add
int
push
push
push
push
push
jp
add
hlt
retf
add
pop
sub
and
movs
lahf
add
imul
mov
aaa
mov
inc
cmp
ret
and
mov
je
xchg
icebp
push
das
add
test
push
pop
add
push
sub
sbb
add
or
adc
push
add
adc
cli
pop
xchg
adc
dec
rcr
push
push
xor
ret
jl
xchg
push
inc
pcmpeqw
mov
push
nop
loopne
mov
push
jg
test
pop
jb
(bad)
aam
push
mov
scas
and
or
push
pusha
sbb
pop
test
cmps
int3
dec
inc
add
retf
pop
xchg
int3
sub
sub
jns
(bad)
retf
sahf
aam
xchg
inc
les
mov
mov
sbb
stos
add
mov
fld
dec
push
jl
call
add
cs
adc
sub
outs
std
cmp
and
pushf
pop
dec
dec
pop
mov
aad
mov
inc
or
push
out
sbb
es
adc
cmp
dec
pop
inc
or
out
mov
mov
lods
shl
inc
mov
mov
and
pop
cmp
dec
fdiv
push
fistp
jl
ror
mov
cmp
test
sbb
pop
sbb
dec
jnp
shr
mov
cmp
cmp
push
add
test
sahf
and
pop
imul
xor
mov
fisttp
cs
or
or
stos
in
or
inc
test
mov
ret
jmp
rol
adc
in
pop
test
es
push
aas
adc
popa
and
xchg
es
mov
iret
adc
mov
push
mov
(bad)
sub
or
sbb
adc
lea
mov
jl
xor
xchg
push
nop
loopne
ror
outs
les
out
add
push
mov
sbb
xor
sbb
fcomp
sbb
mov
push
cdq
xchg
sbb
in
push
shl
add
xchg
enter
sbb
sbb
push
and
xchg
xor
adc
iret
sub
repnz
cmp
mov
and
iret
es
rol
dec
sub
iret
add
xor
fsubr
test
cmp
and
enter
bound
cmp
test
cmc
jo
les
jnp
cs
push
sub
or
sahf
mov
scas
imul
inc
inc
xchg
mov
pusha
pop
jne
sbb
adc
sub
or
repnz
sbb
ja
pop
pop
pusha
dec
fs
mov
xor
add
cs
jne
lds
mov
pusha
lods
jmp
outs
xor
je
pop
shr
jg
or
sub
xor
inc
ror
sar
arpl
push
loope
or
popa
add
fimul
mov
mov
bound
mov
cmc
add
mov
ret
aaa
push
mov
sbb
xor
cld
mov
icebp
sbb
loopne
mov
ret
fs
push
push
push
jae
inc
xlat
js
inc
shr
push
call
addr16
movs
or
or
adc
sbb
or
push
sub
and
push
lds
push
loopne
push
or
pop
lods
ss
pop
inc
(bad)
jmp
xor
cwde
pop
push
aaa
dec
xor
adc
push
adc
out
adc
xchg
lahf
sbb
mov
lods
outs
ror
and
loopne
(bad)
dec
or
mov
stc
les
and
pop
jns
inc
jl
sbb
push
mov
add
xor
bnd
shl
arpl
aas
mov
xor
inc
push
arpl
dec
jb
cmp
in
sub
lods
jns
add
call
outs
jp
or
inc
rol
mov
push
xor
pushf
push
and
cmps
sbb
movs
cs
adc
rcr
mov
out
adc
push
push
hlt
fdivr
and
inc
cmps
add
stos
and
out
dec
jae
and
inc
fiadd
inc
push
mov
jns
inc
cwde
or
cmps
es
sahf
movs
cmp
mov
cmp
fs
(bad)
cmp
add
cmp
pop
adc
xchg
repnz
inc
fprem
xchg
pop
clc
lea
das
jns
ficomp
adc
sub
mov
jno
and
xchg
sub
data16
loop
js
pusha
jp
add
ffreep
sbb
(bad)
mov
push
or
sub
xlat
call
pusha
inc
test
ins
das
or
test
leave
inc
pop
push
sub
js
xor
es
leave
sub
sbb
adc
inc
test
adc
nop
cwde
(bad)
add
xor
aam
in
cmp
or
aas
push
xchg
scas
or
mov
sub
popf
jo
dec
lods
add
sub
cmps
shr
add
cwde
mov
sub
sahf
data16
dec
or
stos
cs
cmps
(bad)
dec
dec
aas
loope
popa
test
pop
mov
test
loope
pop
and
inc
and
fisttp
sbb
mov
lock
and
nop
in
dec
ins
fld
push
sub
push
add
dec
int3
sbb
fld
cmp
mov
sub
lock
jmp
lds
or
and
and
and
pop
retf
mov
sub
lock
adc
fs
scas
js
sub
and
push
push
retf
inc
shr
sbb
cmc
xchg
mov
pop
bnd
cmp
xor
and
aaa
sub
bound
and
dec
out
jae
punpckhbw
pusha
and
or
pop
sbb
jbe
cdq
push
mov
xchg
ins
add
scas
add
je
mov
dec
xchg
jmp
cmp
pop
lds
push
jbe
les
or
or
mov
lahf
push
sub
or
mov
mov
mov
aas
pop
dec
scas
xor
dec
sti
js
xor
add
cs
es
sbb
(bad)
jb
sbb
pushf
js
rcl
enter
dec
sub
clc
fs
int3
mov
aad
rcl
int
sbb
pop
xchg
mov
andps
in
or
sbb
ins
aam
push
dec
xor
xchg
arpl
pop
pop
push
xor
xchg
or
jge
cmp
sahf
xchg
fistp
cmp
add
pop
adc
sub
jge
cmp
push
je
lea
in
and
mov
add
icebp
ins
inc
mov
xor
bound
jbe
not
movs
mov
cdq
sar
pop
dec
into
test
mov
adc
xchg
mov
je
mov
adc
ins
inc
push
leave
jae
cmp
push
leave
dec
adc
data16
adc
jge
sub
xchg
push
adc
pusha
add
inc
les
inc
add
in
push
dec
add
sar
add
rcl
add
fwait
pop
nop
inc
or
sub
int3
and
inc
cmps
add
xchg
shr
jecxz
push
call
xchg
xchg
fimul
jo
push
xchg
or
daa
fs
xchg
adc
(bad)
js
and
out
ds
(bad)
in
jl
cmp
jae
fidiv
cmp
in
add
xchg
sbb
jmp
mov
cmp
jae
movs
bound
mov
push
pop
dec
cmp
jecxz
sbb
and
mov
and
loopne
inc
jns
push
adc
test
and
dec
jmp
aam
push
push
xor
adc
test
inc
mov
and
xlat
or
add
xor
dec
or
cmp
aam
mov
mov
gs
jmp
push
push
pop
ins
cdq
jg
test
aad
jo
push
mov
inc
adc
ret
add
push
sub
pop
mov
lock
les
mov
popf
jb
jp
xor
push
pusha
mov
add
jne
sbb
add
data16
ins
leave
sbb
aaa
hlt
adc
add
and
mov
adc
fisub
add
pusha
mov
push
add
(bad)
mov
push
nop
mov
mov
or
cmp
enter
xchg
or
xor
mov
sub
sbb
and
dec
xchg
out
aaa
les
jecxz
add
cmp
sti
bound
out
xchg
adc
xor
sbb
mov
stos
movs
ss
jne
popa
sub
and
add
inc
bound
test
mov
ror
inc
out
in
lea
add
test
push
adc
cmp
dec
mov
mov
xchg
loop
mov
sub
sbb
inc
mul
jnp
pusha
push
and
retf
cmp
add
sub
mov
dec
sub
push
mov
inc
sub
or
inc
sbb
cmp
and
arpl
adc
inc
sbb
cmp
pop
dec
cwde
nop
xor
dec
aas
push
push
jge
add
lods
test
or
sub
dec
and
les
add
adc
push
sub
call
and
cli
mov
or
xchg
pop
repnz
sti
jp
movs
add
pop
adc
add
dec
pop
xor
imul
aas
or
and
gs
push
adc
adc
or
adc
mov
imul
out
and
push
jnp
jae
mov
xchg
dec
add
test
jg
sbb
std
jl
in
sbb
ds
add
fmul
xor
fs
add
add
push
ret
inc
inc
outs
pop
xchg
add
inc
and
or
sub
add
aas
pop
mov
pusha
xchg
sar
jns
add
stos
lods
xchg
loope
hlt
dec
push
les
jg
imul
mov
shr
sub
pop
pusha
xor
and
enter
jb
mov
add
jmp
mov
add
add
jg
add
outs
xor
jb
call
pop
sbb
inc
(bad)
dec
push
sbb
adc
(bad)
mov
add
and
mov
cmp
lock
mov
ret
xchg
ins
movs
xchg
xlat
pop
fsubr
jmp
cmp
inc
lahf
sbb
scas
or
leave
mov
mov
push
xor
and
imul
jb
inc
and
pop
push
inc
push
pop
pop
or
fld
dec
imul
dec
fs
ins
fstp
sub
retf
mov
adc
pop
add
ror
call
adc
popf
lods
xor
add
sub
or
xchg
add
jle
pop
dec
pop
fild
pop
push
or
mov
add
cwde
rol
xlat
not
dec
js
add
inc
push
cmp
pop
and
ins
shl
add
mov
adc
or
or
add
imul
(bad)
(bad)
jmp
lods
mov
adc
sub
push
jns
punpckhwd
nop
outs
and
inc
xlat
(bad)
jmp
pusha
ja
pop
mov
push
inc
inc
cmp
adc
sbb
add
lahf
or
mov
lds
sbb
test
shl
sub
lea
adc
mov
or
pushf
lahf
mov
test
test
xchg
inc
fwait
or
fistp
push
les
jnp
mov
mov
mov
adc
inc
push
rol
jno
int3
add
sahf
sbb
sbb
popa
mov
call
pop
pop
imul
xchg
sbb
jnp
movs
jns
mov
dec
xor
sub
mov
aaa
push
xchg
sub
or
xor
fneni(8087
sbb
push
lock
inc
in
inc
xchg
into
movs
test
enter
xchg
mov
sbb
mov
sysret
push
movs
mov
pusha
iret
ins
movs
mov
les
push
sub
push
(bad)
fldcw
inc
js
js
dec
mov
or
movs
lea
and
loopne
mov
in
or
test
inc
add
dec
cmps
repz
inc
or
rcl
enter
rcl
push
dec
repnz
pop
dec
pop
add
push
sub
inc
push
jp
dec
mov
dec
add
loop
sbb
xchg
mov
lock
adc
cmp
pop
or
jo
aas
add
mov
(bad)
jg
xchg
outs
push
jne
cmp
je
cmp
je
cmp
(bad)
or
je
push
inc
cmp
or
cmc
or
mov
dec
hlt
jne
and
push
mov
add
cli
outs
push
stos
pop
loope
xchg
mov
cmp
je
stos
mov
pop
popf
test
shl
data16
pop
sbb
mov
(bad)
bound
adc
and
sub
mov
cli
xchg
mov
adc
lds
in
adc
je
nop
xchg
aam
cld
icebp
int3
xchg
sub
clc
hlt
push
adc
jno
push
jo
and
and
add
adc
and
rcl
lock
pusha
or
loopne
sbb
ret
push
cmp
fst
xor
mov
mov
ds
cmp
call
push
lock
adc
mov
push
push
mov
push
pop
push
sbb
cdq
mov
cmp
or
aam
jb
pusha
add
mov
and
jle
or
inc
sahf
push
clc
sbb
in
sub
dec
loopne
mov
and
and
sbb
sub
dec
sbb
mov
ret
js
or
sub
sbb
fmul
mov
cmp
mov
push
and
(bad)
mov
mov
adc
nop
xchg
into
xchg
sub
test
push
dec
(bad)
lock
add
sub
pusha
sbb
clc
lock
inc
clc
popf
gs
and
fsub
adc
fs
or
mov
lock
stc
(bad)
int
inc
sub
adc
push
mov
pop
xor
shl
mov
sahf
jmp
xchg
xchg
jne
adc
xchg
and
cdq
lock
ss
out
int3
es
add
mov
push
push
push
daa
dec
les
int3
push
mov
pushf
test
fsubr
ja
mov
out
xchg
add
mov
and
lea
mov
inc
dec
bound
adc
iret
or
mov
push
push
push
inc
sbb
out
push
aas
sub
or
call
call
mov
adc
dec
pop
ret
push
call
adc
mov
push
dec
fwait
dec
or
jl
and
mov
push
mov
dec
inc
mov
aam
je
lea
inc
aam
shl
rcl
xor
int3
inc
sub
fdiv
dec
xor
sub
das
xchg
out
cmps
into
mov
je
jecxz
mov
aaa
add
jns
jnp
shl
fld
or
pop
mov
pop
clc
jge
and
imul
out
imul
fbstp
or
jg
inc
mov
loopne
add
pop
hlt
stos
outs
or
cmp
movs
mov
fs
in
call
sti
push
xchg
sti
je
mov
scas
mov
scas
jne
dec
fcomp
mov
cmp
jnp
scas
ret
xchg
cwde
mov
xchg
jmp
mov
jmp
ds
pop
pushf
cmp
repnz
pop
or
(bad)
int
jne
loop
dec
pop
lds
sbb
adc
pop
push
or
shl
or
mov
push
pushf
mov
adc
cwde
pop
inc
pop
fcom
jmp
mov
inc
add
jo
sub
lods
or
jge
and
xor
imul
dec
loopne
sbb
lahf
mov
xchg
(bad)
cmp
cmp
xchg
mov
je
pop
bound
(bad)
stc
and
ret
jne
inc
xchg
sbb
stc
jns
out
add
mov
inc
mov
les
call
dec
dec
cmp
push
mov
jge
pop
mov
pusha
and
inc
mov
mov
jmp
mov
adc
push
sub
xor
xchg
xchg
movs
mov
aad
cmp
mov
and
xor
push
maxps
aas
adc
pop
mov
clc
pusha
push
movs
stos
test
cmp
fs
pop
dec
add
add
inc
iret
or
fild
lea
les
dec
ss
cmp
jg
or
adc
(bad)
cmp
cmp
mov
pop
mov
adc
jmp
cmp
add
aas
push
int3
push
adc
in
adc
jnp
hlt
sbb
dec
sub
push
(bad)
lea
or
sub
cmp
jbe
inc
sbb
pop
cmp
adc
add
lock
sub
inc
or
loopne
xor
pop
test
mov
pusha
adc
inc
mov
adc
sub
jl
xchg
(bad)
sub
sub
add
or
std
sub
stc
xchg
or
fcom
stc
push
outs
ins
pushf
popa
add
or
lods
push
jl
sub
mov
cmp
call
xchg
in
jge
jne
cmp
jne
int3
scas
push
jp
jns
push
sbb
pop
pop
mov
push
xor
xor
push
pop
or
iret
movs
mov
add
enter
and
test
sub
call
adc
cmp
lds
out
or
xor
sub
or
jmp
fs
rol
jle
xor
pop
das
test
fs
(bad)
je
dec
push
and
pop
and
das
inc
inc
cdq
push
dec
out
fmul
inc
test
pop
jo
js
dec
xchg
xlat
mov
push
dec
fadd
add
mov
xor
cld
cmp
add
pop
push
mov
sbb
pusha
cmp
mov
stos
inc
(bad)
lods
cld
adc
mov
ror
adc
adc
adc
inc
enter
ja
mov
data16
pop
das
mov
ret
cmp
or
xor
dec
ss
pop
or
mov
sbb
pop
add
stos
lea
cmp
sbb
repnz
mov
icebp
push
push
push
movs
adc
inc
xchg
mov
push
inc
add
movhlps
sbb
inc
adc
ins
sbb
iret
cmp
pusha
fs
test
push
push
lods
dec
xor
call
push
shl
fimul
inc
sbb
dec
out
and
cmp
outs
inc
add
inc
shr
xchg
push
pushf
push
movs
sahf
jl
out
pusha
jecxz
sub
or
outs
push
mov
bndstx
rol
jbe
(bad)
or
push
inc
sbb
inc
daa
(bad)
dec
cmp
and
add
call
inc
sbb
aas
mov
add
mov
xchg
push
cmp
pop
ds
push
pop
addr16
lods
dec
and
inc
add
lahf
movs
push
mov
or
push
add
dec
add
add
ficom
or
dec
div
jne
(bad)
jo
and
jnp
sbb
jne
add
add
loop
adc
mov
add
mov
push
add
sti
lahf
out
movs
rcl
pop
lock
dec
loopne
mov
cmp
jne
test
je
mov
cmp
jmp
add
call
push
sbb
jo
pop
add
cmp
std
or
aad
mov
ins
adc
jle
sub
hlt
ss
int3
jg
inc
pushf
ja
add
pop
or
cwde
pop
pop
sub
das
sub
adc
pop
retf
pop
dec
rol
mov
or
inc
dec
(bad)
dec
popf
add
fadd
pop
xor
dec
pop
jl
add
mov
je
push
repz
jbe
or
daa
pusha
and
xlat
xor
jnp
cmps
mov
inc
push
mov
inc
test
out
adc
scas
imul
pop
or
adc
rol
xchg
mov
add
dec
jo
dec
xchg
ss
repnz
push
ficom
or
popa
imul
cmp
mov
mov
mov
sbb
in
mov
mov
in
and
and
pop
sub
adc
pop
jmp
push
add
popa
add
movs
mov
push
cwde
push
pmulhw
ins
push
push
xor
or
push
test
movs
push
fs
add
or
xor
push
mov
push
or
out
dec
repnz
pop
inc
xor
xchg
je
adc
or
leave
es
and
imul
push
adc
or
mov
add
pop
dec
jo
sar
sbb
dec
push
and
sub
xor
(bad)
aam
inc
dec
into
jle
sbb
or
xchg
jmp
dec
sub
dec
aad
adc
arpl
sahf
adc
aam
sbb
or
ret
push
push
out
mov
push
add
sbb
pop
imul
add
push
sub
sbb
cmp
sub
add
out
ja
xor
cmp
and
pop
das
jl
mov
les
and
sbb
or
or
and
ret
mov
xor
ret
fldcw
pop
lods
loopne
arpl
icebp
les
fild
pop
adc
adc
inc
in
add
dec
xchg
cs
sub
test
clc
gs
dec
(bad)
mov
cld
xor
inc
scas
gs
nop
test
sub
adc
sar
mov
ins
xor
mov
lods
mov
stos
inc
or
pop
add
sbb
dec
dec
xchg
in
arpl
mov
sbb
test
test
(bad)
inc
jne
cmp
jb
sub
jmp
push
dec
movzx
sbb
aaa
dec
pop
cmp
push
setl
movzx
sbb
mov
push
push
and
jae
mov
loopne
xchg
imul
loope
xor
and
sahf
adc
pop
cmp
or
cmp
mov
cmp
rcl
jg
push
push
or
test
and
and
test
inc
push
lahf
xchg
je
lea
(bad)
or
int
mov
fsub
pop
ds
mov
cmp
test
enter
sbb
adc
add
mov
push
mov
cs
xchg
inc
add
xchg
pop
ds
jmp
add
sbb
and
dec
dec
or
mov
dec
daa
push
cmp
adc
xor
je
and
add
dec
ror
add
jg
sbb
or
push
adc
mov
xor
adc
dec
push
adc
inc
mov
and
and
ds
mov
das
adc
rol
and
push
sar
fs
stc
cmp
cwde
clc
sbb
and
ret
adc
add
mov
jb
clc
dec
pop
or
test
push
jb
iret
das
sbb
push
mov
xchg
or
inc
fiadd
sbb
push
and
xchg
pop
add
pop
nop
xchg
add
inc
test
bound
or
pusha
push
mov
push
sbb
or
adc
or
imul
jmp
sbb
jns
add
dec
xor
pop
and
cmp
add
adc
fst
xchg
push
aas
and
mov
sub
add
pop
jnp
cmp
ror
cmp
mov
jg
sbb
sti
retf
adc
sbb
mov
pop
int
fiadd
mov
dec
mov
sbb
pop
or
rcr
adc
dec
je
enter
sbb
sbb
or
jge
ds
adc
cmp
jne
push
pop
add
dec
(bad)
jbe
mov
rol
jns
pop
add
push
loope
sbb
add
dec
adc
faddp
jmp
mov
js
mov
dec
add
jg
sbb
sub
mov
jp
sub
movs
add
add
mov
push
mov
ret
inc
mov
(bad)
jg
or
cmp
jle
lea
cmp
jl
fild
cmp
jne
jbe
sbb
sbb
cmp
mov
add
xor
push
es
cmp
mov
or
adc
nop
mov
fcom
xor
rcr
sub
add
sub
pusha
cwde
sbb
push
xchg
and
shl
dec
arpl
and
or
add
cmp
jecxz
nop
adc
fidiv
add
dec
dec
inc
push
adc
adc
jb
push
jmp
add
and
sbb
fcom
dec
sbb
ss
rol
and
aam
xchg
mov
ror
jbe
cmp
mov
sub
pop
bound
inc
jae
shl
xor
mov
mov
mov
adc
leave
inc
sbb
aad
jge
ret
adc
add
sub
ss
mov
mov
push
adc
cmps
(bad)
dec
imul
ins
imul
(bad)
test
not
push
xor
jo
jg
fidiv
push
inc
jmp
add
fmul
mov
pop
xchg
adc
push
push
fisttp
aad
dec
call
mov
mov
inc
add
mov
xchg
add
inc
jge
sahf
xchg
fstp
mov
xor
sub
mov
jns
out
xchg
aas
push
imul
push
add
mov
push
sbb
add
xor
pop
sbb
dec
lods
test
jmp
and
add
pop
add
xor
push
push
sbb
push
add
imul
int
fwait
dec
jns
retf
mov
sub
and
jmp
ins
iret
sub
lahf
ret
and
jo
push
push
and
xor
movs
xchg
xchg
add
mov
push
xor
push
enter
or
je
dec
or
test
loopne
dec
jl
xlat
xor
fsub
inc
fisttp
daa
xchg
xor
sub
callw
inc
pop
pop
ror
stos
dec
inc
sub
and
add
add
or
and
xor
add
push
pusha
(bad)
jo
adc
pop
dec
dec
xor
lods
or
sbb
pop
push
jno
xor
stc
xor
outs
fs
mul
or
push
jne
xor
fadd
sbb
jbe
or
inc
addr16
retf
add
cwde
inc
inc
pop
lahf
mov
rcr
sbb
mov
rcr
rol
xchg
sub
add
mov
test
dec
pop
lahf
push
mov
xor
xchg
out
mov
popf
outs
shr
push
data16
sub
cs
cmps
addr16
pushf
push
inc
add
cmp
aas
movs
enter
sub
loopne
lods
add
fldcw
(bad)
and
int3
ror
int3
sar
outs
xor
mov
fsubr
dec
pop
(bad)
int
dec
push
push
in
in
inc
cmp
stos
add
shl
inc
std
sbb
push
mov
test
leave
pop
or
bsr
adc
enter
push
dec
or
cmps
test
iret
jg
mov
stc
and
push
lea
inc
pop
movs
je
call
ins
popa
mov
ret
xor
scas
sbb
push
inc
test
cmp
jmp
xchg
adc
fidivr
add
lea
cmps
int3
sub
fild
or
sbb
sub
and
xchg
push
imul
and
sub
cs
jae
mov
lahf
test
jmp
sub
mov
aaa
sbb
pushf
sbb
push
add
xchg
inc
out
pusha
push
dec
inc
or
inc
fld
add
xor
rol
clc
mov
lods
enter
sub
and
adc
gs
shl
aam
and
stos
in
lahf
inc
add
pop
sub
lea
cmp
(bad)
iret
add
push
xchg
and
sub
pop
fisttp
jne
dec
gs
dec
xlat
or
and
sbb
and
push
and
mov
mov
clc
out
(bad)
retf
(bad)
mov
jmp
sar
add
jne
repnz
outs
ret
jne
mov
jg
mov
ror
test
popa
add
call
push
pop
sub
neg
cmc
jl
test
mov
test
jl
push
push
cmp
retf
repz
(bad)
pop
shr
mov
(bad)
jle
dec
push
adc
in
cmp
dec
push
mov
mov
push
js
cmp
imul
mov
push
push
out
mov
div
jle
icebp
fwait
mov
adc
cmc
sbb
xchg
nop
sub
pushf
movs
sahf
clc
movs
retf
mov
xchg
mov
xchg
dec
and
fild
rol
lock
push
data16
icebp
mov
inc
xlat
rcr
out
add
or
pop
sub
aas
sti
push
push
fwait
movs
lahf
and
fldcw
cld
pop
ret
call
(bad)
xchg
nop
or
in
sub
push
adc
mov
and
sub
ret
div
mov
mov
adc
pop
mov
dec
rol
xor
xchg
rol
fadd
lods
fimul
pop
or
xor
cs
jbe
shufps
xor
mov
xor
fs
jo
enter
stos
mov
sub
mov
popa
xor
popa
jl
dec
inc
fisttp
add
sub
or
lock
or
mov
je
and
xor
fild
ds
pushf
push
rol
gs
xchg
ins
push
inc
add
ret
jnp
dec
test
fdivr
and
sub
adc
sub
stos
out
xchg
rol
mov
daa
clc
xchg
fnstsw
push
jge
and
push
sub
mov
sbb
cs
or
mov
seto
mov
neg
or
iret
out
or
daa
push
ss
movs
push
lds
cwde
jne
jp
sub
(bad)
or
and
adc
push
pop
(bad)
jo
pushf
xor
jg
pop
dec
and
clc
ror
push
adc
or
je
js
xor
and
jae
sbb
mov
fst
inc
push
movs
sub
pusha
push
mov
pop
add
pop
inc
out
paddsb
loope
daa
sub
sub
call
push
sub
push
push
cwde
(bad)
mov
cmp
test
or
outs
popa
nop
call
fidiv
mov
ror
xchg
mov
bound
jb
push
fs
mov
fs
adc
(bad)
hlt
add
in
push
or
fadd
movs
(bad)
fdiv
fldcw
mov
add
ins
cmp
data16
fldcw
jl
pop
shl
mov
or
adc
fild
add
inc
push
jle
sbb
adc
add
ficom
lock
and
cs
inc
and
adc
aas
shl
cmp
jne
aam
jb
push
inc
loopne
jge
sbb
push
and
rol
loop
mov
xor
shl
hlt
(bad)
mov
push
sub
push
ss
adc
push
mov
movs
cwde
xchg
ret
adc
outs
push
ret
push
es
inc
mov
imul
jg
call
fcomp
cmp
mov
ja
clc
cmp
jbe
or
test
std
ret
xlat
mov
cmc
imul
cmp
mov
movs
sub
or
sub
mov
sub
sbb
pop
aad
dec
adc
mov
jne
push
pop
pop
mov
(bad)
adc
retf
adc
jg
sbb
fld
fld
cmp
les
aam
pop
jl
fmulp
retf
leave
iret
sbb
push
sbb
sub
fmul
push
sbb
pop
out
dec
inc
sbb
jae
(bad)
adc
lock
sbb
fdecstp
xor
push
lahf
movs
aas
and
pop
jns
pop
add
add
jnp
adc
cmp
or
adc
call
add
push
or
push
cmp
dec
inc
jb
add
xor
(bad)
pop
cmp
sub
jae
js
push
or
xchg
inc
jecxz
(bad)
cld
or
les
push
test
jge
mov
jmp
mov
or
lods
pop
(bad)
imul
scas
sar
sub
fisttp
push
pop
xchg
mov
lea
mov
jo
enter
sub
dec
adc
adc
push
push
inc
add
lock
scas
add
or
jo
ret
xor
add
cmp
mov
push
call
mov
or
mov
in
push
dec
sbb
dec
add
lea
jl
into
push
fsub
cmps
fmul
push
or
cmp
dec
call
mov
push
dec
pop
iret
push
iret
ds
push
punpckhdq
pop
js
lock
je
sub
xchg
cmp
fnstsw
inc
retf
pop
je
push
dec
mov
vcvttsd2si
loop
mov
or
loop
inc
xchg
pop
inc
call
add
sbb
lods
adc
sbb
cmp
add
push
call
jmp
xor
jg
mov
jg
adc
mov
pop
jmp
fistp
sub
add
push
jg
push
inc
cwde
pop
cld
or
inc
cmps
cwde
popf
mov
jmp
push
out
or
(bad)
push
ror
mov
sbb
or
adc
xor
jne
and
xor
pop
popf
add
jle
mov
(bad)
or
add
push
push
pop
imul
push
push
sbb
sar
xor
cmp
sbb
jg
call
cwde
cmp
jne
mov
je
test
imul
or
mov
dec
fst
pop
push
mov
push
push
call
iret
add
cmp
mov
cmp
scas
rcr
inc
push
lock
(bad)
or
or
call
mov
repnz
mov
clc
mov
jb
inc
je
hlt
scas
retf
aam
lods
int3
test
adc
sbb
loopne
lea
push
push
les
push
adc
daa
mov
cmp
fwait
ds
push
mov
adc
sub
jp
adc
mov
adc
mov
jmp
inc
sbb
or
pop
mov
or
push
xor
mov
jo
jl
xchg
cmps
push
mov
pop
jmp
out
daa
push
push
mov
jle
push
inc
scas
push
icebp
mov
add
push
mov
and
mov
ret
sbb
inc
mov
aaa
push
inc
scas
shl
int
fs
sbb
xlat
sub
mov
adc
popa
outs
push
push
add
jle
mov
mov
scas
dec
sahf
push
sub
pusha
dec
ret
sbb
sbb
inc
ins
test
call
test
dec
sbb
push
mov
or
push
test
and
repnz
adc
call
ins
dec
popf
call
out
loope
dec
push
adc
loop
fbld
fisubr
and
inc
inc
add
push
adc
ror
push
cld
sbb
test
pop
sbb
call
push
icebp
fsubp
mov
lods
fwait
ret
repz
xor
and
das
add
push
cmp
sbb
push
add
in
mov
jbe
lock
rcl
pop
xor
xor
sub
mov
in
mov
(bad)
imul
int3
pop
loop
inc
inc
add
push
push
aaa
mov
scas
in
lods
xor
mov
add
push
push
icebp
div
stos
loopne
aam
pop
addr16
jp
cmp
je
inc
or
inc
mov
(bad)
or
ins
lock
or
ins
movs
lock
sbb
sub
push
jecxz
adc
jl
push
ja
jecxz
mov
sub
jne
xor
ins
push
out
or
inc
add
arpl
or
cmp
push
rol
hlt
rcr
inc
jecxz
inc
push
iret
or
sbb
jle
and
add
js
ror
cmp
cmp
mov
bound
push
ins
das
dec
dec
(bad)
mov
or
sub
jns
cli
sub
push
(bad)
sub
dec
sti
mov
mov
mov
cwde
nop
cmps
pushf
mov
popa
and
jl
jl
dec
add
push
mov
test
add
xchg
xor
xor
shl
ss
pop
test
cmp
and
cwde
inc
mov
mov
ret
push
push
push
je
rcl
pop
ret
xor
adc
cs
pop
ret
inc
and
out
mov
int3
fst
or
rcl
mov
ror
and
retf
inc
or
inc
inc
jmp
rol
cmp
push
and
out
mov
retf
out
das
push
into
xor
add
bound
cwde
imul
xor
mul
sbb
or
lods
cmp
ins
aam
or
add
pop
cmp
sti
das
call
dec
sub
idiv
add
mov
push
cli
cwde
sub
inc
test
pop
jge
push
in
xor
dec
jmp
cmp
in
xor
test
xor
mov
hlt
lea
movzx
mov
mov
into
loopne
cmp
into
pop
mul
inc
add
aam
cld
add
jmp
setb
jb
rcl
jge
cmp
push
fwait
inc
mov
hlt
in
lea
je
popf
xchg
dec
pop
inc
pop
jbe
jns
pusha
cmp
mov
dec
inc
ret
sbb
in
adc
sub
xchg
adc
ins
out
mov
adc
call
adc
add
scas
mov
mov
into
pop
outs
push
dec
rol
pop
sub
stos
test
add
lea
loopne
push
xor
mov
ror
mov
fs
push
ror
mov
fsubp
sahf
ret
ss
cmp
push
dec
sbb
push
mov
push
xchg
add
daa
bound
je
jo
js
outs
mov
or
or
adc
mov
push
jmp
jbe
push
push
lea
aaa
dec
xor
jmp
push
lods
retf
and
pusha
add
(bad)
add
je
push
cmp
pop
rcr
xor
and
push
mov
imul
pop
out
mov
pusha
(bad)
adc
xchg
xor
mov
jnp
inc
rol
cmp
test
adc
jnp
mov
(bad)
mov
lds
or
out
sbb
sti
push
dec
mov
cli
cmp
jb
push
push
or
cmps
adc
loop
or
xor
dec
jecxz
dec
movs
mov
scas
cdq
fwait
mov
inc
lahf
mov
push
rol
jl
push
lock
pushf
adc
xchg
movbe
jl
aaa
push
fwait
push
cmp
das
scas
loopne
add
mov
lahf
mov
jmp
cmp
cwde
ins
rol
mov
jbe
or
push
add
push
lock
xor
or
sub
push
inc
push
ret
jb
jl
and
out
(bad)
retf
push
arpl
fs
xlat
push
sub
sbb
xor
rcl
mov
in
inc
fs
push
pop
stos
int3
ret
jne
add
movs
(bad)
sbb
jae
fs
fiadd
sbb
in
and
adc
sti
cmp
inc
add
sub
adc
clc
mov
mov
cld
div
out
push
icebp
pusha
(bad)
pop
sbb
stos
mov
js
and
inc
in
push
or
call
mov
not
and
pop
jno
pusha
(bad)
fistp
clc
dec
xor
ins
jne
cs
add
push
repz
mov
dec
push
das
iret
push
push
je
inc
or
loop
in
push
or
and
jle
cmp
into
mov
into
push
push
pushf
sbb
mov
cmp
ret
xlat
in
call
mov
repz
cs
dec
push
or
push
ret
jle
xor
icebp
sbb
push
push
fidiv
pop
jp
adc
and
push
in
mov
xchg
je
push
cmova
cmc
sahf
sbb
sbb
and
mov
mov
hlt
adc
mov
mov
xlat
adc
or
add
in
es
rcr
sbb
jb
push
push
pop
sahf
xchg
les
fimul
out
mov
mov
fucom
nop
(bad)
and
pop
push
sbb
out
jecxz
(bad)
push
sub
xor
or
mov
cmp
sbb
jnp
jae
je
rcr
add
adc
out
fwait
inc
cmp
jne
clc
les
or
lea
cmp
pop
je
imul
add
push
ja
sub
cdq
or
sbb
scas
dec
xor
sub
mov
pop
aam
mov
(bad)
and
ds
pop
popa
xor
push
cmps
pop
scas
inc
xor
mov
sbb
ins
popa
and
push
or
ja
mov
lahf
adc
pop
jae
into
or
add
cmp
imul
push
or
fmul
fsubr
mov
out
cmps
cwde
mov
or
push
mov
inc
int3
inc
xor
mov
scas
sub
dec
jnp
dec
in
and
pop
les
xchg
add
xchg
int
adc
jbe
pop
loopne
ds
add
xor
push
ret
ret
pop
cmps
rcl
pusha
xor
add
mov
inc
jl
js
and
xor
jo
xor
add
push
and
push
cmp
jbe
rcl
xor
push
and
push
sbb
lock
leave
cmp
jne
adc
js
sub
and
imul
cmp
jne
mov
sbb
rol
cdq
icebp
test
sub
arpl
or
in
mov
adc
mov
add
sub
popa
add
fs
cs
fcomip
inc
retf
leave
in
pop
and
sbb
mov
jne
sbb
jmp
and
test
xor
inc
cli
add
push
ja
adc
pop
fsubp
xbegin
inc
mov
jb
mov
mov
or
pop
xor
pop
mov
mov
cmp
sub
jmp
sbb
and
push
sbb
cld
call
bound
fadd
adc
jbe
pop
cmc
iret
add
add
and
dec
mov
jmp
add
and
add
lea
xchg
add
jne
lea
add
lods
pop
jns
or
adc
push
add
not
xchg
push
or
ret
inc
sbb
fst
mov
adc
cmp
(bad)
out
add
scas
jp
das
or
(bad)
(bad)
movs
cmp
in
add
repnz
out
add
iret
cmp
adc
jmp
mov
mov
imul
fisttp
nop
fnop
add
lods
je
mov
arpl
shr
sub
mov
iret
rcr
ret
ss
push
or
push
or
je
icebp
jne
jge
push
xor
mul
fwait
or
sub
popf
pop
jne
sbb
dec
sub
les
scas
ja
mov
iret
or
cli
js
jno
mul
fucomp
jbe
je
ret
adc
shr
jne
mov
mov
sbb
add
push
retf
clc
dec
cmp
add
ror
cmc
or
jmp
cmp
shr
cmp
sbb
ror
invd
ret
shl
or
dec
sbb
xchg
rcl
cli
or
add
sub
pusha
mov
add
dec
add
inc
adc
inc
(bad)
test
pop
xor
push
or
xchg
out
jge
loop
mov
jl
stc
test
enter
std
inc
or
mov
xchg
dec
add
push
xchg
into
pusha
imul
outs
ror
je
pusha
push
lea
or
fild
arpl
scas
jo
push
ds
sbb
push
out
or
int3
lock
sbb
cwde
adc
loopne
jnp
not
xchg
and
ret
rcr
lods
cwde
cmp
nop
gs
je
enter
pop
fs
or
jecxz
and
push
jmp
shr
clc
je
ds
ret
ja
add
jecxz
and
outs
outs
or
mov
je
cmp
je
imul
add
mov
pop
stc
loop
mov
adc
iret
je
xor
adc
mov
push
push
lock
push
sub
inc
pop
inc
or
sub
pop
lds
call
push
add
xchg
out
push
add
lock
adc
add
sahf
pop
in
lock
cmps
add
jmp
jns
push
adc
push
ror
add
repz
fs
cmp
or
xchg
int
mov
(bad)
test
fbstp
into
add
push
mov
lahf
mov
into
lea
mov
sub
cs
sub
adc
xchg
dec
cmps
mul
push
je
loopne
cmp
or
adc
test
rcl
fs
and
jge
sub
sbb
lods
and
xlat
test
test
jmp
sbb
adc
loopne
jecxz
outs
scas
cmp
jle
leave
enter
js
push
sbb
jns
fsub
dec
ins
clc
push
push
jge
jne
rol
push
enter
add
and
cs
es
stos
popa
sub
jne
outs
and
cmp
push
xor
xchg
add
imul
cdq
div
stos
(bad)
or
ins
jbe
imul
add
cmc
add
push
test
sar
sub
jo
cmp
je
sahf
retf
sbb
add
js
data16
or
cwde
dec
push
lea
push
pop
cwde
push
adc
xchg
add
lea
fsub
add
retf
push
or
or
or
sbb
lods
add
xchg
jbe
data16
xchg
fcom
cli
les
jl
(bad)
imul
xchg
pop
xor
pop
add
mov
mov
push
rol
push
enter
adc
fsubr
mov
in
jge
push
(bad)
pop
arpl
(bad)
and
pop
pop
xor
inc
sbb
jmp
inc
std
mov
and
sbb
adc
sbb
adc
js
sbb
mov
inc
or
je
sbb
inc
bound
cmp
je
ss
mov
rol
ss
inc
lahf
mov
ud2
and
sbb
jg
mov
pop
adc
sbb
scas
xchg
jnp
mov
adc
add
pop
adc
inc
push
pop
sbb
pusha
pop
movs
mov
sub
or
mov
add
and
or
push
pop
push
or
push
and
fadd
cmp
fist
into
and
(bad)
fsub
(bad)
adc
lds
in
cmp
ds
loope
(bad)
cld
inc
aam
retf
sbb
cmp
out
pop
add
fs
call
loop
fist
mov
or
adc
push
inc
ins
push
cmp
and
jmp
sub
and
pop
or
enter
add
por
fwait
push
adc
xchg
pop
in
cmp
sar
jns
mov
lea
pop
xor
add
pop
in
pop
pop
and
(bad)
mov
xchg
sti
dec
jne
mov
pop
mov
movs
add
idiv
je
mov
int
mov
arpl
xor
xor
cmp
es
push
push
cli
pop
mov
ds
mov
cmp
(bad)
in
cdq
push
xchg
mov
lods
add
pop
lock
test
mov
and
mov
mov
xchg
cmp
popf
pop
dec
or
aaa
cmc
jmp
pop
aas
ds
popa
and
lods
movzx
cmp
cmps
mov
jle
inc
mov
push
sahf
xchg
out
dec
push
rcr
or
int3
daa
or
aas
aam
outs
xchg
cmp
push
arpl
cwde
cmc
repnz
push
xor
push
xor
retf
mov
shr
enter
jno
mov
pop
sub
in
xor
mov
fbstp
inc
dec
or
pop
loop
pop
xor
adc
add
jb
sbb
sub
addr16
mov
stos
sbb
mov
add
js
pop
lds
pop
and
ds
dec
pop
xchg
cmp
or
vmread
mov
or
ret
xchg
mov
addr16
aas
(bad)
push
pop
jmp
xor
mov
cmp
xor
out
mov
nop
mov
scas
dec
mov
pop
sub
pushf
xchg
ror
pop
cmps
inc
pop
pop
dec
and
(bad)
cmp
dec
(bad)
push
xchg
dec
and
cs
int3
mov
xor
mov
mov
inc
jnp
arpl
xchg
in
sar
jecxz
dec
xor
call
mov
loop
shl
push
sub
in
push
jo
bound
mov
test
sbb
mov
xor
dec
stos
push
outs
push
or
push
and
push
ss
(bad)
and
adc
shr
fmul
add
or
add
or
xchg
add
ficomp
out
std
push
and
fild
xor
mov
sub
movs
cs
sub
dec
jle
ficomp
neg
sbb
push
cmp
ret
and
xor
and
sub
adc
lods
sar
sbb
adc
js
pop
or
xor
lea
pop
xor
es
adc
test
inc
sbb
inc
mov
inc
xchg
dec
pop
inc
test
inc
loope
outs
xor
xor
fidivr
sbb
inc
jmp
push
xchg
stos
push
pop
mov
iret
call
inc
lea
lock
ja
push
(bad)
cmp
shr
push
ror
or
in
adc
xor
cli
jo
inc
idiv
and
pop
out
(bad)
cmp
jl
inc
push
add
adc
ror
jl
cld
and
push
je
adc
or
imul
jecxz
fistp
xchg
cmp
cdq
pop
push
sahf
push
xchg
dec
outs
mov
in
adc
mov
xor
sbb
cwde
jo
lods
dec
pop
xor
jmp
lds
loop
and
xchg
inc
xchg
aad
add
mov
mov
or
loopne
pusha
jno
pop
test
inc
dec
cmp
xchg
shl
sbb
jl
inc
aaa
adc
or
inc
sub
adc
adc
xor
xlat
push
outs
ror
jmp
add
mov
ins
dec
dec
adc
jecxz
xchg
pop
inc
push
inc
or
inc
push
and
rol
and
je
push
out
ret
stc
mov
cld
jmp
movs
cmp
pop
pop
frstor
(bad)
mov
sbb
cmc
or
push
xor
es
sbb
sbb
or
cmp
cmp
cmp
cmp
xchg
xor
add
out
jg
ret
test
je
and
inc
movups
cmp
dec
jl
loope
xor
xchg
push
sbb
movzx
mov
add
mov
dec
mov
push
shl
inc
mov
mov
mov
push
inc
retf
stc
push
imul
pushf
mov
add
movs
xor
aas
fstp
mov
xor
xchg
and
cmp
sbb
inc
add
xchg
into
mov
add
pusha
and
add
aaa
sub
sbb
sbb
push
push
test
mov
sbb
pop
fs
sbb
cmp
test
push
fild
sbb
cmp
lea
inc
xor
aas
adc
push
push
stos
mov
xor
jp
mov
daa
mov
dec
push
test
and
in
cdq
mov
mov
nop
jmp
gs
xor
nop
data16
push
pushf
pushfw
inc
xlat
adc
aam
mov
pop
mov
test
rcl
mov
or
inc
push
mov
lock
pop
add
pop
ret
ins
mov
mov
mov
cmp
pop
(bad)
pop
bound
(bad)
repnz
push
pop
cmp
push
jne
add
mov
in
ror
in
sbb
imul
ins
mov
cwde
mov
mov
adc
inc
adc
xchg
ret
loop
jne
cmp
jo
inc
out
ds
aad
enter
frstor
add
xor
pop
sub
mov
in
or
add
push
cmp
cmp
and
aaa
and
aaa
push
add
and
cmc
neg
push
loopne
add
xchg
and
in
je
lock
mov
adc
call
daa
add
adc
mov
inc
dec
inc
xchg
ss
sub
cmp
test
jl
add
push
xor
jae
movs
mov
dec
push
clc
test
cli
shl
test
sahf
xchg
sub
movs
dec
push
scas
sub
mul
add
push
push
mov
xor
test
or
add
inc
cld
sbb
pop
lock
cmp
xor
cmp
mov
sub
rcl
shl
cmp
test
pop
jae
push
movs
sbb
sbb
push
aas
add
vmovaps
or
or
xchg
cmp
pop
push
clc
or
sub
dec
push
push
rsqrtps
dec
ins
add
int3
or
add
adc
pop
add
nop
push
mov
lahf
hlt
lods
mov
or
jge
enter
adc
sbb
out
xadd
ins
lea
cmp
jne
mov
inc
pop
pop
mov
call
and
(bad)
mov
lea
loop
mov
inc
inc
inc
call
adc
or
sbb
rcl
sahf
push
pop
and
aas
xchg
inc
xlat
rcl
int
jbe
xlat
cmps
adc
adc
jno
and
ficom
inc
cli
push
cld
mov
add
mov
push
aam
pop
cli
test
pop
adc
inc
ins
shr
sar
test
popa
and
adc
repnz
adc
adc
das
cmp
sbb
xor
stos
pusha
ins
std
mov
ret
mov
icebp
dec
adc
fucom
xchg
push
add
pop
jb
and
call
lock
js
lods
lock
dec
pop
add
cmps
bound
clc
jne
xor
loop
out
movs
push
sbb
push
pop
adc
es
ja
sub
rcl
xchg
jmp
hlt
add
jns
pop
xchg
pop
dec
jnp
js
push
push
in
test
cmp
mov
ins
(bad)
adc
not
aas
push
push
or
sbb
and
xor
or
shr
into
cmp
inc
mov
add
shl
fisub
xlat
or
jns
sub
adc
push
mov
(bad)
out
movs
add
ret
movs
ins
sbb
loope
or
jg
call
in
mov
inc
add
and
push
add
inc
xor
out
loop
or
xor
je
pop
lods
add
adc
mov
sub
daa
ss
jl
adc
dec
adc
add
stos
das
(bad)
push
mov
push
push
sub
push
pop
mov
aaa
(bad)
push
lea
mov
or
inc
xor
cmp
xchg
inc
aaa
jbe
fimul
mov
dec
push
mov
sub
or
push
mov
adc
pop
mov
mov
jo
push
fwait
sbb
mov
xor
mov
add
nop
sbb
pop
jge
jo
out
xchg
jmp
cmp
inc
adc
sub
mov
lods
mov
push
mov
push
xchg
pop
adc
sbb
cwde
mov
xchg
clc
push
jmp
out
cmp
xor
pop
cli
adc
add
mov
jae
push
inc
shr
and
aam
pop
dec
cmp
lea
mov
(bad)
lock
inc
push
dec
dec
cmp
xchg
sub
xchg
push
push
rcl
and
inc
push
dec
retf
call
inc
sub
xlat
aas
mov
(bad)
movs
pop
cmp
or
push
or
xor
pusha
out
xor
inc
(bad)
xor
imul
lock
fs
dec
sbb
(bad)
cmps
out
pop
test
cld
adc
pop
in
inc
pop
shr
fiadd
out
aas
sahf
(bad)
mov
lahf
cmp
push
push
add
(bad)
inc
mov
cmp
xchg
jbe
(bad)
and
cmp
loope
or
or
xchg
aaa
sbb
xor
outs
sbb
jmp
or
xchg
sub
dec
sub
mov
dec
ret
retf
add
ins
nop
nop
adc
fnsave
(bad)
shl
les
lock
mov
mul
xchg
nop
sub
xor
mov
push
adc
int3
add
jae
ror
in
adc
mov
cmp
and
ins
dec
add
imul
or
or
or
mov
mov
bnd
push
into
std
xchg
pop
es
jl
mov
pop
pop
push
push
jl
or
ins
or
add
data16
xor
sub
xchg
sbb
mov
in
dec
mov
lods
or
sbb
push
gs
fwait
mov
and
push
loopne
clc
push
test
mov
iret
jae
imul
dec
push
mov
push
ror
adc
or
(bad)
jge
mov
pop
lods
adc
fst
mov
jge
and
mov
sbb
pop
sub
add
adc
sahf
test
dec
lds
in
mov
mov
shr
jo
in
xchg
xor
cmp
orps
push
cmp
test
int
add
or
push
xor
jo
call
or
scas
inc
push
push
in
sub
dec
loop
pop
dec
xchg
sbb
jbe
push
push
and
sbb
rol
mov
pop
icebp
outs
das
ins
shl
add
ret
div
push
cmp
lods
(bad)
imul
push
cmp
loop
push
and
mov
out
push
push
jbe
add
adc
add
mov
sti
dec
ja
je
or
je
or
sub
sub
scas
adc
adc
cmp
stos
(bad)
jl
add
adc
push
or
add
fist
sbb
call
mov
sbb
cli
push
jmp
cmp
movs
test
bound
sub
cmp
rol
inc
mov
dec
mov
push
sti
scas
movzx
add
push
(bad)
call
fdivr
adc
ret
and
(bad)
mov
ret
and
jmp
mov
test
gs
add
je
loope
mov
ret
movs
push
add
or
adc
push
dec
dec
cmp
das
ret
test
movs
and
es
mov
fadd
add
push
mov
and
pop
fild
mov
pop
test
ins
loop
jp
cmp
aad
and
hlt
add
push
inc
push
adc
in
mov
or
ds
out
daa
or
(bad)
push
adc
lods
loopne
das
inc
pop
xchg
push
pop
jo
inc
imul
not
imul
fisttp
jge
inc
or
push
inc
aas
ja
imul
imul
sub
in
and
mov
or
push
add
loop
push
mov
dec
paddsb
pop
out
test
mov
mov
into
hlt
ror
pop
test
adc
pop
fcom
pop
add
pusha
xor
stc
sti
je
inc
bound
mov
inc
push
inc
mov
(bad)
shl
pop
loopne
sbb
fs
fs
aam
stos
fsub
nop
sbb
enter
ss
inc
inc
or
push
push
jecxz
(bad)
inc
data16
ficom
call
mov
loope
mov
pop
stos
mov
loope
clc
ds
jbe
mov
inc
dec
add
pop
das
xchg
les
je
test
and
push
push
and
test
jns
sbb
sbb
dec
add
jo
nop
data16
sbb
xchg
push
lock
out
push
xor
push
push
call
(bad)
fdivr
outs
inc
push
mov
add
jge
scas
mov
sbb
sbb
enter
fadd
in
mov
pop
sub
mov
add
push
mov
imul
movs
aam
int3
inc
mov
nop
sub
add
sbb
mov
mov
adc
cmp
add
and
xchg
mov
cwde
call
xchg
cmc
mov
fisub
mov
sbb
rcl
fwait
cmc
inc
sub
or
popa
push
mov
jnp
icebp
mov
adc
or
dec
test
jmp
xor
imul
jmp
jle
xchg
xchg
movs
sub
xchg
mov
inc
shl
nop
sahf
je
push
xor
xor
addr16
xchg
fisub
push
mov
xor
mov
les
pushf
or
call
fld
daa
icebp
xlat
fwait
adc
xor
inc
enter
in
cmp
inc
push
jne
jle
sbb
or
lahf
dec
in
ss
imul
in
nop
sahf
cmp
test
sub
adc
and
mov
nop
or
push
sub
push
and
mov
je
and
fucomip
add
add
or
mov
lds
pop
mov
cmp
or
pop
stos
pop
adc
dec
inc
dec
adc
inc
lea
cmp
cmp
in
sbb
push
cmp
fs
das
cmps
xor
or
push
push
mov
mov
add
cli
cmp
xor
mov
dec
push
fsubr
add
cmp
sahf
mov
test
add
jg
inc
aam
fmul
int
call
xor
push
in
add
mov
mov
sbb
add
inc
jb
or
in
les
gs
xor
inc
pop
stos
pop
shr
add
pop
xor
mov
mov
add
xchg
dec
cli
jne
pop
jp
inc
mov
push
mov
retf
nop
dec
cld
pop
xor
mov
daa
call
xor
sbb
test
cli
les
cmp
adc
mov
lock
push
add
xchg
stos
call
ror
cmp
aam
fdiv
das
and
pushf
int3
push
add
xchg
(bad)
push
xchg
sbb
dec
cwde
pop
fs
or
pushf
loopne
add
push
pop
jg
dec
jne
mov
in
adc
loopne
shl
push
(bad)
fild
add
call
dec
xchg
xchg
cmp
cmp
adc
in
xchg
lock
jg
xor
cmp
in
mov
sti
cs
sub
jne
es
push
cdq
pop
sub
aam
or
imul
ret
mov
mov
cs
rcl
ja
push
movs
sbb
push
jns
or
mov
js
je
xchg
js
cmps
push
jg
mov
or
inc
loope
cmps
outs
sar
sbb
xchg
inc
int
push
inc
fcom
add
sbb
pop
add
ret
inc
(bad)
jecxz
lea
scas
(bad)
dec
adc
and
add
or
adc
pop
add
xor
and
mov
fcom
add
push
or
adc
jae
sbb
inc
cs
mov
push
jecxz
cwde
sbb
inc
mov
add
jo
(bad)
xchg
sub
les
inc
jle
push
push
adc
rcl
jne
add
(bad)
mov
mov
sbb
fcom
(bad)
adc
fcom
adc
pop
sbb
cmp
sub
push
push
inc
xor
rcl
sti
add
fchs
inc
(bad)
inc
add
sub
add
not
sbb
out
cmp
sub
mov
adc
hlt
sbb
pop
and
push
out
sub
test
(bad)
ror
or
in
aaa
stos
(bad)
mov
adc
xchg
mov
call
je
into
hlt
je
sub
sub
mov
or
cli
call
dec
fadd
pop
movs
jmp
sbb
jnp
sbb
xchg
pop
add
xchg
or
punpcklbw
sub
mov
mov
mov
aam
fstp
sti
and
add
lock
and
push
push
dec
dec
out
es
and
lock
push
cmp
add
and
arpl
add
stos
jo
mov
adc
inc
dec
movs
test
cld
mov
bound
dec
sahf
sub
or
jo
inc
cmp
mov
stos
fs
sbb
pop
jmp
dec
adc
movs
xchg
fsin
in
add
outs
pop
inc
mov
aam
inc
add
inc
push
add
stos
add
mov
sbb
ja
add
(bad)
adc
and
mov
push
je
lods
sbb
out
int3
adc
push
cld
push
cmp
cmp
fdivrp
mov
scas
pop
nop
add
repz
nop
retf
and
pop
inc
loope
mov
push
jae
push
jg
sub
repnz
jl
jb
xor
adc
fcmovbe
mov
in
pop
xor
dec
or
ficomp
dec
push
push
xor
mov
cmp
and
pusha
mov
pop
mov
inc
sbb
xchg
out
xchg
push
pop
inc
xor
and
and
or
adc
enter
push
fs
jb
sub
inc
pop
sub
clc
or
hlt
xchg
cmc
ja
clc
push
fisub
add
mov
leave
test
push
xchg
xlat
xor
adc
sub
xor
jns
xlat
pusha
and
adc
or
sbb
retf
push
inc
cmp
or
add
test
ret
xchg
xlat
dec
jo
mov
cs
inc
retf
pop
inc
xor
inc
fwait
inc
sub
inc
fadd
sub
or
inc
xor
dec
dec
in
cmp
xor
dec
imul
push
mov
jb
sub
addr16
mov
out
(bad)
jmp
ins
pop
adc
fnstenv
xchg
and
push
imul
and
mov
cmp
aaa
inc
cmp
frstor
cmp
call
push
dec
jmp
call
sbb
movs
push
(bad)
test
push
call
add
mov
in
loopne
movs
les
push
sbb
ins
movs
dec
mov
jmp
push
dec
inc
test
add
mov
inc
add
pop
retf
dec
loopne
inc
js
xor
add
push
or
cmp
or
lock
push
sbb
cwde
push
movs
shl
xor
sbb
ret
push
sbb
cmp
adc
cmp
cmp
add
dec
fmul
or
(bad)
jecxz
dec
shr
xchg
dec
loopne
retf
jl
clc
sub
pop
or
dec
jno
je
xchg
in
divsd
les
(bad)
adc
mov
retf
enter
scas
in
push
imul
gs
jns
cmp
pop
mov
je
add
inc
sbb
cmp
out
in
popa
add
or
jo
mov
lock
jle
sbb
out
int
cmp
(bad)
lea
push
aaa
repz
jl
or
out
pop
push
loopne
push
pushf
lock
and
iret
lahf
pop
add
push
or
test
mov
adc
int3
jns
xchg
add
out
mov
jne
cwde
sub
nop
add
pushf
loopne
push
aaa
in
dec
dec
xchg
js
mov
das
sub
int3
or
sub
push
dec
rcr
pop
fmul
dec
or
loope
push
test
or
in
cmps
cmp
and
jmp
sbb
in
mov
scas
jmp
add
test
mov
retf
xchg
push
mov
mov
loopne
repz
cld
add
mov
xchg
cld
jge
lds
add
jns
jne
neg
xor
xor
jecxz
mov
and
mov
ficom
add
out
aam
or
iret
jns
(bad)
dec
cmp
cli
sbb
xor
jg
adc
jne
push
push
add
call
xchg
jp
mov
pop
pushf
jb
sub
inc
inc
push
mov
jae
scas
pop
nop
pop
and
scas
push
jl
mov
fs
mov
or
(bad)
shl
mov
pop
cmp
jne
sub
(bad)
stos
fld
adc
lock
imul
dec
dec
popf
inc
jp
sbb
push
sbb
push
jo
and
mov
mov
xor
cmp
in
or
inc
popa
mov
jl
bound
sbb
mov
jp
in
fbld
enter
jns
sbb
cmp
or
je
aam
cs
mov
je
loope
or
mov
rol
out
pop
and
es
int3
call
popf
or
mov
inc
pop
stos
jle
jb
cmp
mov
sti
push
(bad)
push
mov
cmp
pop
and
and
nop
push
jl
fidivr
imul
loopne
outs
sbb
js
jbe
mov
fidivr
push
or
in
xchg
push
out
push
add
(bad)
dec
and
push
xchg
and
or
dec
add
xor
pop
sbb
stos
add
push
(bad)
and
cmp
sub
(bad)
shr
push
inc
xchg
push
sub
pop
adc
mov
cmp
ja
inc
lahf
add
mov
call
jbe
push
xlat
push
fsubr
cmp
stc
sbb
xlat
adc
(bad)
into
cmc
scas
adc
jmp
lods
fnstenv
fsubr
pop
sbb
fnstenv
dec
sbb
adc
vmovshdup
sub
dec
test
(bad)
adc
imul
or
cmp
rol
push
xchg
xor
stos
in
xor
add
(bad)
jle
add
or
test
mov
cmp
sbb
cli
add
ror
and
inc
push
sub
das
sub
adc
xor
cmp
adc
int
fwait
cmp
sub
xor
or
push
push
jmp
lock
adc
jmp
sbb
jb
dec
dec
inc
cmp
xor
jmp
aad
jmp
in
dec
push
adc
push
xor
mov
adc
stc
iret
iret
and
add
cmp
mov
leave
add
sbb
out
jnp
push
and
jae
lock
loope
inc
or
out
popa
or
js
rol
and
lahf
pop
push
xchg
add
retf
out
sub
xchg
inc
ret
adc
or
push
jns
xlat
jb
cdq
pop
enter
add
adc
enter
enter
mov
inc
jg
and
adc
out
repz
jmp
hlt
and
or
in
test
mov
push
add
mov
push
push
mov
cmp
jb
lea
cmp
mov
shr
push
mov
rdmsr
or
sub
loope
aaa
cmp
add
mov
add
jle
sbb
cs
sub
or
(bad)
jmp
ficomp
or
inc
loopne
push
je
push
or
inc
or
lock
add
mov
dec
fdiv
and
(bad)
lea
push
push
and
xchg
push
or
(bad)
pop
inc
xchg
or
mov
fcomp
test
test
jns
mov
fcmove
push
jb
jecxz
jns
jo
xchg
(bad)
xchg
ret
dec
lea
mov
dec
adc
xchg
or
sub
adc
pop
add
ret
pop
or
out
in
enter
aaa
xor
gs
int
add
inc
adc
jne
inc
mov
jle
or
cmp
or
sub
push
stos
inc
adc
lods
mov
adc
jp
dec
retf
mov
pop
ret
call
scas
and
xor
imul
dec
sbb
imul
xchg
dec
pop
and
jne
mov
test
or
xchg
xchg
add
movs
mov
stos
xchg
mov
jmp
pop
mov
mov
add
nop
leave
retf
jg
xor
dec
xchg
loop
mov
mov
icebp
movs
mov
nop
push
les
dec
fdivr
pop
rcr
pusha
clc
push
add
and
pushf
dec
imul
adc
inc
popf
jp
push
adc
push
sbb
push
loopne
pop
push
pop
mov
rep
std
mov
je
and
sub
mov
ins
fs
adc
mov
mov
dec
xor
pop
fisttp
push
sbb
sbb
add
lea
mov
rol
cmp
enter
popa
dec
mov
ss
xchg
icebp
aas
inc
pop
ret
push
mov
ficom
pop
movs
sub
adc
add
test
xor
loope
in
mov
ds
sbb
inc
xchg
jecxz
jb
in
mov
dec
and
mov
xlat
mov
clc
xor
inc
dec
rol
rcl
push
and
fcomp
andps
cmp
mov
add
sub
je
cdq
cmp
fsubr
adc
mov
add
leave
fadd
push
xor
ret
fcmove
jmp
outs
push
clc
sti
add
rcr
mov
fisub
push
call
clc
imul
xor
lods
mov
mov
repz
cmp
and
clc
lea
ret
push
push
shl
sbb
push
inc
inc
cmp
jb
in
loope
loopne
jg
dec
jb
mov
xchg
fs
hlt
call
imul
cmp
pop
fadd
retf
out
lea
or
les
or
xor
push
cld
push
xor
xchg
int3
cmp
mov
inc
je
add
test
movs
rcr
fiadd
mov
mov
cmp
cdq
push
mov
inc
std
pop
add
sbb
gs
mov
imul
mov
retf
inc
push
pop
sbb
out
adc
imul
mov
jb
inc
inc
or
dec
std
inc
je
or
ret
mov
aam
inc
and
or
leave
push
lahf
cmp
inc
(bad)
lods
jle
dec
add
jmp
mov
test
push
push
aas
popf
into
mov
out
and
div
push
shl
push
xor
dec
scas
pop
retf
sub
call
jl
or
pop
inc
in
aaa
fadd
das
das
das
mov
sub
xor
xor
xchg
xchg
xchg
xchg
sbb
cmp
inc
push
xchg
mov
cmp
push
cmp
sbb
ror
mov
jno
jmp
ins
std
lods
rol
cld
cdq
test
mov
into
sub
dec
jno
mov
mov
scas
or
add
lods
ficom
js
loopne
xor
mov
jmp
add
adc
push
mov
ss
iret
fidivr
jns
pop
sub
icebp
mov
cmp
pop
or
js
ins
ins
inc
push
sbb
imul
scas
test
inc
sub
add
push
jp
xor
or
xchg
xor
add
sbb
inc
add
and
pusha
jl
loopne
pushf
add
(bad)
mov
cmps
add
push
xor
les
movs
xor
sahf
xchg
je
or
je
xor
je
cmp
cmp
jb
mov
or
sti
push
outs
adc
cmp
ins
inc
xor
mov
adc
aad
sbb
sub
retf
and
pop
cmp
add
aas
sub
dec
pop
ja
aam
(bad)
pop
jecxz
rep
rol
inc
xor
or
paddq
int
or
sbb
cmp
jae
nop
idiv
pop
popa
lock
add
sbb
call
arpl
mov
jnp
and
jne
push
push
push
xor
(bad)
adc
push
les
(bad)
dec
or
(bad)
cdq
rep
add
fwait
int3
loopne
adc
js
fnsave
data16
inc
sub
call
les
add
cmp
inc
mov
xchg
sbb
shl
test
jbe
sbb
aam
xchg
mov
xor
pusha
dec
jg
xlat
xchg
sar
push
xor
cmps
sub
mov
xor
xor
lock
inc
and
xchg
and
add
xchg
adc
retf
arpl
arpl
or
inc
sbb
mov
add
mov
or
cmp
sete
xor
mov
jmp
mov
and
push
inc
adc
js
ja
and
cld
sub
cdq
add
ds
cmp
into
mov
repnz
mov
mov
mov
clc
pop
das
xor
test
xor
add
sbb
add
jnp
add
push
push
aas
or
rcr
mov
pop
adc
sbb
in
mov
ins
nop
call
push
adc
mov
cmps
or
mov
push
mov
outs
mov
and
pusha
sub
int3
add
jge
jo
push
cmp
icebp
imul
dec
rcl
(bad)
imul
clc
fcmovbe
mov
adc
pushf
sbb
mov
add
adc
xor
push
add
outs
bound
call
mov
leave
lea
sbb
and
sar
ret
add
and
mov
inc
sbb
add
mov
push
rol
xchg
dec
xchg
xchg
xchg
jo
inc
cmp
aas
pop
pop
jp
push
lahf
mov
add
push
and
je
inc
fisub
js
test
clc
je
pop
cdq
cmp
jl
pop
sbb
dec
and
gs
jo
stos
push
jo
sub
(bad)
icebp
ss
push
sub
cld
add
dec
sub
sbb
xor
sar
adc
lods
(bad)
fisttp
sub
xor
call
aad
mov
add
dec
mov
leave
adc
inc
dec
jb
inc
mov
mov
sub
clc
adc
pop
sub
mov
adc
dec
adc
inc
ins
jge
shr
inc
pop
nop
sub
js
dec
inc
add
add
pop
pop
add
push
add
jmp
adc
add
nop
movs
add
es
xor
mov
retf
dec
sub
daa
movs
loope
ins
push
adc
xchg
push
and
shr
push
cmp
or
test
cmp
pusha
lea
mov
outs
cmp
je
and
cmp
shr
aas
(bad)
(bad)
sub
sar
cmp
jbe
or
add
shl
jo
call
inc
(bad)
pusha
in
adc
push
and
sub
ss
push
leave
add
movs
ficom
(bad)
movs
inc
cmp
or
lahf
pop
sub
and
shr
js
fiadd
add
lock
sbb
pop
push
(bad)
lea
mov
fdivp
test
mov
push
imul
or
push
aam
jb
jo
mov
loopne
cmp
lock
jnp
in
mov
aad
test
and
lea
xchg
mov
or
push
or
dec
xchg
or
xchg
nop
shl
xor
push
aas
imul
cmp
cmps
iret
pop
lods
add
mov
inc
pop
pop
sbb
or
inc
imul
call
loopne
leave
or
cmp
or
xor
mov
push
inc
sbb
enter
jmp
dec
add
(bad)
jne
sub
outs
neg
add
cmp
lahf
add
add
cmp
jb
into
xchg
call
mov
pop
icebp
or
ret
or
pop
jmp
xor
jae
sub
push
push
add
add
xchg
and
sbb
add
rcl
or
in
xlat
add
test
push
cs
test
fwait
sbb
cmps
je
jmp
pop
xchg
push
pusha
jnp
js
cmp
adc
shld
jle
sub
rol
push
or
sub
into
add
daa
xor
mov
xor
ret
pop
lock
pop
movs
(bad)
lods
pop
xor
jmp
test
sub
or
movs
push
xor
adc
inc
and
mov
push
gs
movs
mov
dec
add
pop
jne
jo
(bad)
or
rol
pop
cmp
enter
push
pop
mov
sbb
push
rcl
sub
cli
jbe
test
sub
or
jecxz
mov
push
push
jmp
fimul
sub
sbb
mov
aam
outs
rol
call
xchg
imul
and
mov
inc
mov
cmps
out
mov
pop
mov
ret
jmp
fisub
or
cmp
sbb
or
popf
dec
push
add
dec
iret
mov
dec
outs
pop
in
pop
mov
ins
mov
mov
or
adc
and
addr16
mov
sub
mov
cmp
mov
ja
mov
add
and
dec
inc
mov
pop
xor
ror
mov
inc
std
push
mov
(bad)
pop
sbb
not
xor
xor
mov
inc
int
push
adc
add
mov
dec
cmps
pop
aad
cmp
imul
sbb
test
cmps
mov
and
mov
and
(bad)
push
or
inc
aas
and
nop
inc
fsub
enter
lock
pop
enter
sub
and
enter
enter
pop
sub
mov
and
enter
in
add
adc
pop
or
jmp
push
mov
pop
xor
retf
inc
push
pushf
mov
xor
or
xor
mov
mov
fsub
pop
stos
or
stc
adc
xor
jmp
cmp
fadd
in
sar
cld
or
int
or
pusha
push
test
add
shl
adc
inc
inc
add
adc
sbb
mov
sbb
xor
adc
xchg
clc
add
mov
ja
pop
adc
inc
adc
sbb
test
test
adc
jae
pop
mov
sub
out
and
dec
pushf
sub
outs
push
inc
adc
adc
retf
les
mov
sub
xor
cmps
ror
jae
add
clc
rol
dec
and
ja
hlt
add
jnp
adc
pop
out
dec
sub
push
jae
jne
jge
lea
mov
int3
pusha
mov
hlt
test
add
out
les
ds
cmp
and
fild
pop
push
mov
inc
and
sbb
and
or
pop
mov
push
sub
dec
out
and
rol
and
iret
cmps
test
out
pop
jmp
cmp
cmps
bound
add
lea
mov
add
sub
push
in
shl
ds
pop
test
jno
(bad)
add
lock
stos
lea
or
and
leave
ret
push
adc
push
add
or
les
cli
add
out
lea
hlt
xor
jne
push
loop
popa
add
mov
repnz
fistp
mov
inc
sub
add
sbb
and
or
and
mov
or
bound
push
jo
pop
adc
stos
lock
sub
ror
dec
sbb
fnstsw
pop
xchg
adc
cmp
shl
(bad)
pop
call
dec
repz
xchg
push
pop
call
push
test
or
(bad)
je
cld
dec
cdq
loopne
and
clc
jnp
das
test
pop
push
into
mov
push
cmp
cdq
ret
imul
jae
outs
js
ins
mov
jae
xor
mov
test
jg
cmp
jecxz
lods
mov
xor
add
test
cmp
mov
je
ins
lock
push
inc
jmp
add
adc
loop
add
call
fisttp
push
in
jle
mov
(bad)
xor
sbb
in
cmp
jg
aaa
and
lea
and
and
dec
add
inc
inc
dec
test
loop
add
aaa
inc
add
adc
call
mov
add
jo
pusha
popa
(bad)
leave
in
inc
mov
pmulhuw
jo
or
call
add
imul
jmp
push
sub
aad
xchg
mov
xor
lock
or
pop
inc
loopne
sbb
leave
add
inc
mov
mov
outs
pop
cmp
test
dec
inc
jg
jmp
sbb
and
sub
lock
scas
aam
pop
or
push
test
push
or
dec
mov
xchg
retf
inc
xchg
xchg
fdiv
pusha
lock
or
mov
sub
ret
xchg
leave
jmp
mov
es
add
push
or
data16
add
fistp
rol
pop
push
xor
mov
mov
cmps
je
pop
out
push
fs
dec
mov
mov
cmp
and
adc
push
jb
ret
xor
jnp
jmp
jl
fs
movs
fwait
movs
mov
cld
xchg
ds
mov
sbb
xor
mov
xchg
test
and
inc
ret
gs
fmul
arpl
push
jns
adc
add
cmp
out
inc
push
cwde
mov
or
sbb
ds
sub
and
gs
shl
and
mov
std
jg
dec
push
mov
cmp
jl
cmp
jle
cmp
push
jp
or
pop
push
jae
ret
aas
stos
mov
sar
bound
js
cmp
mov
(bad)
jns
fcomp
sbb
xor
je
cmp
je
ret
js
(bad)
pop
push
push
mov
dec
sbb
push
imul
rcr
ret
imul
pop
inc
sub
add
push
leave
or
sbb
and
(bad)
jmp
add
cld
gs
hlt
mov
cmp
jl
pop
mov
xor
jle
cmc
das
mov
ss
jge
dec
data16
pusha
dec
ret
das
jne
fwait
mul
mov
mov
and
lods
sbb
mov
mov
inc
add
sub
add
cld
lock
push
or
xchg
or
push
add
mov
(bad)
pop
(bad)
and
mov
dec
xor
or
lock
mov
pop
outs
xchg
pop
movs
add
(bad)
(bad)
jge
xor
test
popa
clc
or
mov
jne
pusha
sbb
xchg
and
scas
sub
push
lock
push
push
in
mov
mov
sbb
jle
cmp
iret
lock
sbb
jne
leave
cmp
(bad)
mov
ror
jo
push
mov
frstor
test
out
dec
sub
retf
mov
fmul
or
push
mov
(bad)
in
and
shl
xchg
inc
add
sbb
in
dec
xchg
adc
mov
lea
arpl
dec
or
push
push
add
pop
adc
mov
hlt
jg
inc
sbb
pop
popa
inc
mov
jp
adc
xchg
fisttp
sbb
movs
shl
or
jne
xchg
pop
mov
add
xor
adc
sbb
push
mov
jb
adc
rol
adc
push
push
pop
ins
push
sahf
out
pusha
fs
push
retf
test
xor
jmp
xchg
int3
jge
and
sbb
repnz
in
sbb
mov
ja
shl
dec
adc
add
add
adc
jne
mov
pop
and
cmp
mov
sbb
sbb
sub
add
pop
and
cmovle
jp
(bad)
push
xor
xor
mov
imul
je
loope
cmps
or
jne
inc
mov
jmp
cmp
lock
jl
iret
add
call
jle
in
in
stos
call
int3
mov
sub
jle
and
push
xor
sub
jb
icebp
loopne
aam
test
xor
popa
pop
mov
and
and
jo
sub
add
cmp
dec
and
push
or
leave
inc
jle
mov
(bad)
pop
mov
sub
icebp
movq
xor
add
cmp
enter
rol
adc
xchg
cld
pop
call
inc
push
lds
jmp
inc
shr
jmp
cmp
dec
sti
ins
lds
popa
or
mov
or
sbb
repnz
dec
mov
arpl
arpl
push
xchg
xchg
in
sub
push
push
add
cmp
push
test
sbb
push
pusha
gs
pop
je
sbb
lods
adc
push
dec
sub
push
imul
(bad)
fs
icebp
sti
loop
arpl
mov
cmp
loopne
sub
les
pop
stos
loope
mov
hlt
dec
dec
xor
xchg
push
inc
pop
cmps
test
xchg
pop
fmul
(bad)
lea
nop
or
jg
mov
mov
cmp
je
or
je
cmp
sub
adc
and
sub
clc
rol
cmp
push
pop
and
pop
mov
lea
hlt
mov
arpl
xor
and
or
and
mov
rol
dec
add
inc
and
pusha
jne
or
adc
in
mov
and
push
or
push
inc
repnz
mov
and
mov
shl
fnstenv
pusha
shl
adc
add
or
call
cmp
inc
(bad)
rcr
jno
add
or
ficomp
lock
mov
mov
push
dec
inc
and
pusha
pop
push
adc
fs
inc
xor
jo
stc
es
jns
or
repz
mov
adc
arpl
loope
or
mov
aaa
ret
pop
fadd
xor
dec
repnz
dec
fmul
fdiv
mov
cwde
mov
add
or
or
pushf
pop
xchg
sbb
add
cld
mov
pop
retf
cmp
ss
or
dec
mov
iret
push
arpl
int
fild
and
sub
sub
inc
jo
xor
and
add
push
cmp
lahf
mov
sub
push
mov
pop
xor
into
xor
int
call
sub
ret
fcomp
jl
daa
inc
adc
lods
pop
cwde
adc
push
pop
inc
pop
sub
(bad)
push
cs
jmp
mov
sub
push
mov
fimul
clc
push
add
dec
ficomp
ret
test
hlt
sahf
fisttp
add
cmp
inc
nop
sbb
into
xor
jae
jg
movs
jne
mov
mov
jg
aam
stos
push
mov
rcl
sub
sbb
fist
shr
ds
add
into
mov
in
cmp
int3
fisub
fdiv
xchg
adc
dec
add
mov
ins
add
or
rcr
pop
data16
jle
pop
retf
scas
jmp
pusha
mov
popf
dec
sahf
scas
mov
adc
jle
ins
ret
sub
fld
cmp
or
int3
push
jb
fdivr
add
stc
cwde
mov
cwde
and
cwde
cwde
fadd
es
jmp
push
popa
popa
jae
neg
retf
inc
pushf
mov
ret
loopne
inc
add
add
pop
inc
jb
jmp
and
retf
add
xchg
mov
inc
xchg
add
mov
adc
jmp
fiadd
inc
push
or
ss
cmps
push
out
in
sbb
sub
push
add
add
add
jb
xchg
ret
adc
loop
add
sbb
jae
sahf
push
mov
cdq
leave
xchg
dec
sbb
sahf
retf
push
inc
sbb
test
enter
div
dec
sub
ret
sub
ret
sub
lock
inc
jns
or
hlt
push
xor
mov
inc
loope
cmps
jle
dec
je
push
inc
and
pop
dec
mov
jo
sub
stos
add
(bad)
fsubr
scas
outs
dec
mov
push
fld
pop
add
fstp
add
fist
cld
adc
cmp
adc
cld
cmp
iret
jne
push
div
or
jne
add
repz
jne
or
push
ss
ror
out
or
pop
and
mov
inc
and
icebp
push
inc
dec
adc
sbb
imul
and
dec
or
mov
int
in
aam
arpl
in
pop
sub
or
or
jbe
mov
in
pop
aam
dec
sbb
cmp
mov
mov
or
rol
cmps
mov
ins
lds
add
fdiv
test
sti
dec
push
dec
add
jne
movs
test
push
pop
push
sbb
bound
daa
aam
popa
mov
push
sahf
pusha
mov
pop
cmp
add
aam
push
inc
repnz
repnz
or
sti
jbe
mov
fmul
movs
pminub
jp
stos
aam
or
push
pusha
pop
mov
lock
jnp
nop
and
xchg
imul
sub
add
push
pop
mov
mov
jmp
outs
and
or
movs
push
jbe
mov
inc
add
fcmovbe
daa
pop
in
sbb
cs
jge
and
aad
dec
mov
stos
fld
pop
push
push
(bad)
cmp
push
and
cmp
enter
xchg
add
jl
sbb
push
pusha
inc
pop
pmulhuw
xchg
add
and
jo
iret
jmp
jns
or
inc
std
inc
fiadd
jno
mov
and
add
pop
test
ret
push
inc
dec
sbb
push
push
mov
push
shl
nop
push
push
adc
adc
sub
push
stc
lock
add
inc
xchg
arpl
test
imul
mov
or
mov
lods
pop
pusha
daa
sbb
shl
mov
outs
dec
dec
test
loop
shl
inc
jno
add
in
add
fadd
or
imul
and
push
push
les
mov
add
stc
cld
mov
mov
or
xor
enter
or
ins
xchg
adc
imul
and
fmul
and
dec
enter
jo
loopne
mov
nop
or
adc
pmulhuw
adc
nop
and
or
adc
in
shl
test
daa
sub
les
daa
daa
daa
sar
mov
test
pop
mov
mov
push
loope
jb
mov
xor
mov
and
in
push
push
push
fild
xchg
js
push
adc
push
xor
pop
popf
push
rol
xlat
pop
ret
icebp
retf
(bad)
in
add
ret
jge
arpl
cmp
bound
loop
daa
cwde
sbb
(bad)
fwait
adc
pop
mov
cwde
or
add
js
add
add
sbb
jmp
or
aam
push
jae
cmp
jp
push
push
add
push
cs
push
icebp
scas
or
sub
mov
add
(bad)
lea
jmp
inc
push
jb
push
xchg
push
pop
enter
add
lods
mov
call
shl
popf
push
and
pop
add
jmp
push
push
or
or
mov
ds
shl
mov
xor
test
mov
mov
push
mov
xchg
xchg
push
call
cmp
push
aad
data16
sbb
add
daa
enter
stc
push
enter
or
hlt
dec
jl
pusha
mov
cmp
dec
xchg
mov
jbe
mov
mov
cmp
fld
mov
add
cld
mov
rol
push
add
adc
xor
and
inc
inc
jnp
push
shld
cmp
push
dec
and
sub
pop
dec
adc
out
mov
test
dec
inc
ja
mov
rcr
ja
ss
cmps
sbb
adc
fs
fdivr
xchg
dec
push
pusha
add
cs
dec
mov
inc
out
sub
push
(bad)
jge
int3
adc
pop
jle
cmp
je
shr
inc
pop
cmp
pop
rol
mov
cld
pop
xchg
pushf
mov
push
jmp
xor
loope
jns
mov
stos
sbb
xchg
adc
mov
les
xchg
jne
loope
push
dec
movs
xchg
inc
sbb
jge
cs
mov
mov
pop
shl
in
and
inc
repz
jge
mov
retf
pop
mov
sub
gs
stos
rol
or
fdivr
jmp
push
fisub
iret
jecxz
pop
popf
aaa
clc
sub
(bad)
mov
jle
(bad)
mov
outs
dec
cmp
add
inc
push
rol
and
adc
and
jmp
dec
cmp
fwait
call
inc
or
cwde
mov
mov
cmps
mov
shl
add
cmp
iret
(bad)
in
call
push
mov
daa
daa
ret
add
aad
add
shr
clc
into
inc
or
loope
or
mov
add
sbb
test
pop
fcomp
pushf
jae
push
mov
jl
adc
jmp
ror
adc
in
jbe
or
xor
icebp
mov
bound
sbb
or
test
and
mov
push
jmp
clc
inc
xor
xchg
loope
jmp
mov
inc
and
jecxz
nop
sub
ds
or
xchg
push
mov
or
sub
xchg
xchg
popf
mov
mov
imul
pop
movs
popa
mov
adc
sbb
xchg
nop
add
pop
(bad)
add
push
mov
int
mov
jmp
dec
test
push
loope
stos
dec
xchg
push
hlt
setne
mov
add
in
cmp
jo
jbe
fld
int
pusha
dec
dec
pusha
in
jmp
sbb
ins
dec
loop
rol
jp
mov
cld
jbe
pop
xor
and
shr
jp
rcl
loope
adc
aad
adc
cs
mov
push
mov
or
sub
inc
jbe
and
add
dec
loopne
adc
js
add
mov
rcr
xchg
jp
fistp
ss
mov
sbb
jo
fs
and
mov
ret
pop
pop
(bad)
popa
push
xchg
mov
mov
rcr
sbb
aaa
ret
fisttp
mov
inc
sbb
add
inc
leave
ror
rol
pop
ret
in
mov
shr
and
loopne
retf
inc
test
ret
cdq
and
fisubr
mov
not
aaa
jno
jns
mov
adc
push
xor
push
sub
pop
ret
(bad)
repz
add
xchg
popf
xor
mov
sub
(bad)
sti
inc
push
(bad)
mov
mov
dec
jl
push
fdivr
adc
mov
retf
inc
sub
add
dec
jge
in
adc
cmps
inc
adc
push
mov
jnp
sbb
or
das
shl
sbb
mov
jne
mov
cdq
je
loopne
or
mov
mov
or
add
push
pop
adc
mov
cmps
inc
xor
xor
xor
xor
pop
inc
push
cmp
lock
enter
mov
cmp
in
push
ss
lea
or
xchg
add
cs
push
je
and
mov
rcl
mov
sub
sbb
jne
les
dec
pop
xchg
movs
jmp
adc
mov
pusha
(bad)
jge
popa
jnp
xor
loop
xchg
jmp
sbb
jg
inc
mov
xchg
fld
xor
outs
add
fcom
and
sahf
sbb
jne
cmps
clc
jno
in
cmp
ret
xor
clc
pushf
add
mov
fst
sbb
add
shl
iret
or
stos
push
rcr
and
ret
sbb
outs
clc
or
mov
scas
or
fnstcw
jo
dec
cmc
sar
or
and
ins
jns
call
push
or
lahf
dec
mov
lea
loopne
jne
loope
adc
push
jns
and
push
jo
mov
jbe
or
(bad)
sub
xchg
inc
mov
pop
popa
sub
clc
or
adc
js
inc
xlat
xchg
ret
inc
ins
stos
out
jns
ror
repz
inc
call
test
pop
aaa
add
call
push
xchg
ins
pop
arpl
sbb
stos
dec
adc
dec
fs
jns
mov
and
movs
addr16
and
leave
adc
sbb
sub
xchg
out
scas
add
xchg
xor
sbb
inc
sbb
cwde
cmp
xchg
dec
push
cmp
pop
pop
cmp
cwde
cmp
lods
or
and
mov
xchg
retf
enter
sub
xchg
xor
inc
shr
movs
or
cmps
loope
ja
or
inc
push
cld
sub
push
mov
xchg
mov
cmp
pop
hlt
mov
bound
jecxz
cdq
jmp
mov
jp
dec
cld
sahf
call
fadd
fwait
sbb
push
sub
dec
add
mov
and
cmp
lahf
push
inc
push
inc
fcom
add
sbb
das
fs
dec
add
mov
push
xor
rol
dec
pop
cmp
mov
addr16
push
and
and
xor
jne
jbe
xor
pop
out
dec
ret
add
bound
(bad)
nop
push
in
mov
int3
std
sbb
in
rol
and
cmp
sub
sbb
call
cmp
scas
pop
fldcw
mov
ja
and
retf
xor
sub
sahf
mov
cmp
popf
adc
and
daa
and
gs
nop
inc
and
(bad)
mov
adc
or
aam
ret
mov
inc
and
mov
jle
sbb
ins
nop
and
mov
pop
sub
imul
cmp
and
sbb
js
aas
scas
shl
inc
int
push
inc
add
push
jnp
adc
jle
push
rcr
sbb
push
pop
out
sbb
sbb
add
in
mov
(bad)
mov
std
mov
adc
and
mov
mov
xor
push
add
inc
mov
add
test
add
push
sbb
daa
cmp
jmp
es
add
or
aas
xor
push
sub
add
lds
mov
xchg
out
xor
ror
and
sub
int3
and
aaa
ins
pop
push
sbb
jmp
inc
stos
or
inc
inc
hlt
jg
add
in
or
jg
int3
or
add
jnp
xor
pop
lock
repz
mov
int3
dec
push
sbb
nop
not
adc
outs
in
dec
lock
imul
xor
mov
fwait
jne
aam
out
sbb
jnp
or
or
cs
add
in
rol
push
pop
adc
in
stos
sub
int3
xchg
fstp
dec
or
(bad)
fstp
sbb
adc
shr
adc
push
leave
or
mov
xchg
and
sub
leave
in
(bad)
xor
popa
les
push
hlt
mov
mov
pop
aas
mov
leave
push
loopne
xchg
sahf
inc
mov
rol
loope
xor
fcom
cmp
jne
rol
cmps
pushf
ja
jmp
out
jae
clc
ror
pop
test
icebp
pop
xchg
retf
adc
cs
mov
mov
and
pop
inc
inc
ds
pop
jle
bound
lock
push
movs
sbb
pop
mov
ror
sti
mov
mov
call
dec
inc
cmp
jb
pop
pop
push
int
movs
inc
or
mov
out
loop
or
and
xchg
(bad)
mov
es
xor
push
xor
adc
mov
xchg
jle
push
or
clc
shl
ss
or
dec
jp
loop
and
cld
das
push
test
pop
pop
xor
mov
clc
pop
adc
inc
cmp
jae
inc
lea
push
cdq
or
call
or
das
jecxz
cld
test
ds
std
(bad)
loopne
popf
push
pusha
cmp
ror
push
je
inc
cmp
mov
vxorps
cmp
fild
fisttp
pop
adc
mov
fisttp
jecxz
popa
add
add
xchg
jle
fdiv
xor
add
inc
lds
mov
xor
out
pop
call
mov
mov
enter
imul
movsx
add
inc
mov
jb
dec
jge
add
or
jmp
xor
je
cmp
or
ins
pusha
or
dec
jmp
push
push
jmp
(bad)
xchg
pop
les
fnstsw
jne
and
cmps
daa
mov
fidivr
cmp
ds
loop
inc
add
mov
sbb
cmp
add
dec
ja
push
inc
and
pop
jmp
xchg
outs
test
xor
loopne
daa
rcr
add
aam
call
inc
adc
bswap
push
push
or
cmp
adc
xor
fadd
jbe
cmp
or
sbb
push
nop
jmp
xlat
(bad)
dec
lahf
push
or
jne
dec
popa
dec
pop
icebp
add
add
xchg
mov
les
adc
nop
add
mov
test
inc
add
sbb
xor
(bad)
jp
mov
fnstsw
adc
sub
sti
xor
fsubr
push
mov
push
adc
enter
jnp
xchg
hlt
fcomp
jmp
pop
fsub
pop
fsubrp
ja
push
stos
call
and
sbb
jp
jl
pusha
movs
inc
jg
cmp
icebp
xor
dec
add
sbb
sahf
call
ins
and
es
ds
imul
int3
cmp
je
add
es
shl
adc
mov
fsubr
or
and
sbb
repz
lock
sub
fdivr
repnz
sub
push
push
push
movs
adc
sbb
adc
js
adc
mov
pop
push
and
fcom
movs
imul
add
cmp
retf
push
movs
jge
not
outs
call
add
push
in
jo
mov
sbb
(bad)
cmp
xchg
clc
push
push
push
lds
xor
push
imul
lea
ja
repnz
xor
repnz
and
sbb
lock
and
sahf
movhps
adc
adc
jns
enter
mov
dec
adc
stc
and
(bad)
and
adc
push
cs
imul
pop
and
sbb
and
sbb
iret
vmwrite
sbb
add
mov
push
xor
mov
push
jecxz
in
xor
cmps
pop
pop
sub
aas
in
and
and
push
nop
out
push
push
push
pop
repnz
push
jo
repz
push
ret
xchg
mov
retf
sbb
cmp
or
movs
sbb
pop
or
or
sbb
and
xor
dec
push
xchg
sub
or
jle
repz
sbb
or
or
iret
prefetch
push
jo
and
or
shl
cmpxchg
xchg
out
and
movs
(bad)
sbb
mov
push
or
loopne
and
cmp
(bad)
sbb
add
fstp
and
clts
jns
sbb
push
xor
cwde
and
push
inc
xchg
push
call
add
dec
mov
int3
mov
test
dec
repz
adc
gs
repz
xchg
out
repnz
sahf
out
pop
imul
pushf
lods
mov
iret
sar
adc
repz
push
test
mov
and
aam
add
add
jmp
test
or
cmp
int3
xlat
lods
push
movs
inc
or
push
retf
mov
icebp
rcl
popf
adc
les
or
dec
in
jno
and
arpl
or
push
jb
mov
adc
loopne
stos
call
sub
ins
jne
mov
push
xor
fwait
pop
jo
fild
cmp
mov
jl
ret
xchg
or
cmp
daa
add
pop
test
shl
jns
lock
sub
sbb
mov
add
int
sub
add
push
mov
jp
mov
push
inc
call
add
jb
jl
mov
or
stc
or
loop
(bad)
out
call
add
sub
sbb
mov
cmp
rol
push
arpl
and
xor
ret
push
lods
jge
push
push
push
in
fwait
adc
cwde
aas
(bad)
mov
sbb
fcmovnu
mov
and
and
dec
hlt
mov
mov
nop
pop
mov
fldcw
or
add
and
add
loop
pop
sub
mov
push
cmp
fld
adc
add
nop
xchg
mov
in
loopne
inc
scas
sub
icebp
add
call
call
in
mov
pop
mov
sub
adc
lods
push
in
push
je
push
fwait
mov
in
test
lock
push
or
nop
or
or
imul
dec
pop
and
dec
add
adc
call
or
stc
push
scas
xchg
and
test
pop
leave
shr
mov
add
and
movs
mov
(bad)
mov
out
or
mov
loopne
pusha
xchg
or
pop
jl
inc
push
in
or
pop
les
repnz
pop
or
inc
xor
cmovge
mov
rol
xchg
fwait
mov
lock
mov
repnz
repz
xchg
push
push
mov
enter
mov
lahf
adc
aaa
fdivr
push
push
test
push
enter
sbb
add
push
enter
add
xor
mov
js
mov
push
push
or
and
push
leave
or
push
adc
add
mov
sbb
adc
pop
dec
push
fs
adc
in
pop
xor
xor
stos
mov
add
stos
pop
and
inc
lock
xchg
bound
push
inc
dec
xchg
pop
mov
sub
repnz
add
and
fmul
and
push
adc
xor
push
sub
jo
popa
inc
sub
icebp
sbb
bound
adc
add
mov
test
fmul
sbb
add
mov
icebp
daa
add
test
jb
xor
mov
or
jns
push
or
(bad)
or
pushf
jb
loope
sub
or
cmp
add
dec
or
adc
xchg
xor
adc
aam
sbb
add
(bad)
xor
test
inc
adc
cdq
ret
inc
jns
pop
push
jecxz
and
inc
hlt
add
outs
jno
fs
pop
adc
xchg
movs
add
dec
xor
and
jne
cmp
xor
jo
(bad)
push
scas
std
push
dec
dec
fnstsw
das
cmc
arpl
call
icebp
inc
dec
pop
and
enter
add
mov
scas
lahf
add
and
push
es
stos
lods
xor
mul
or
outs
cmp
mov
adc
rol
xrelease
cmp
hlt
add
xchg
add
sbb
or
or
mov
sbb
or
pusha
adc
test
push
test
test
inc
(bad)
dec
or
xor
adc
or
int
push
mov
ds
push
loope
ds
add
cmp
push
stos
inc
inc
pop
movs
cmp
cmp
inc
xor
addr16
mov
ret
loopne
pop
cmp
daa
push
rcl
adc
add
popa
add
scas
adc
ins
push
mov
or
cmps
adc
or
pusha
inc
gs
sub
mov
les
add
in
arpl
out
mov
cmps
aaa
push
cmp
repz
adc
mov
popf
test
in
or
mov
adc
push
clc
jle
push
adc
pop
shl
je
inc
or
or
test
push
ins
adc
inc
or
adc
jle
lods
push
fild
sub
push
xchg
add
sbb
add
stos
dec
bound
xor
mov
out
sbb
popf
clc
and
add
xchg
push
push
jp
je
mov
jns
rcr
outs
test
push
and
dec
dec
outs
sub
push
and
pushf
sbb
into
fistp
mov
not
dec
push
popa
xor
cmp
mov
into
lea
sub
fwait
je
push
icebp
test
sub
cwde
lods
ins
xchg
add
xor
int3
cmp
fldcw
sub
(bad)
cs
dec
pop
push
pop
ins
jne
xor
sub
and
ss
les
sub
push
or
add
loopne
pop
ins
adc
fcomp
or
mov
dec
pop
or
movs
xchg
adc
loope
mov
sbb
xchg
xor
jl
add
mov
mov
and
push
push
inc
ret
popa
dec
push
popa
sbb
adc
adc
mov
jo
dec
cmp
cmps
adc
add
pop
mov
mov
sti
pop
inc
retf
aas
jp
cmps
add
outs
or
inc
xor
in
mov
jo
iret
dec
sbb
mov
loop
jl
lds
inc
shl
add
xor
(bad)
adc
es
adc
(bad)
pushf
push
xchg
cwde
fiadd
mov
mov
push
sbb
push
jmp
loope
sub
rol
add
mov
jbe
mov
jecxz
cmc
or
adc
dec
jbe
cmp
in
sbb
mov
inc
test
adc
sub
inc
sub
dec
pop
sbb
cmp
push
add
and
mov
mov
ret
sub
bound
adc
aas
pop
mov
xchg
sub
pop
pop
call
sbb
add
leave
sbb
jmp
or
fcomp
mov
mov
pusha
aam
dec
fwait
shl
imul
ret
outs
(bad)
(bad)
dec
adc
jl
xor
jmp
cmp
jl
or
sbb
popa
dec
movs
mov
add
cmp
je
mov
mov
(bad)
mov
inc
jmp
mov
mov
push
and
idiv
mov
stc
jne
sub
cmps
pusha
xchg
adc
inc
push
in
inc
push
ins
and
pusha
cmp
loope
je
and
jmp
movs
pop
pop
mov
lods
retf
mov
push
inc
cld
std
rcl
inc
nop
lahf
sub
mov
xor
mov
xor
jmp
or
dec
add
retf
shr
dec
inc
push
in
in
dec
test
xchg
into
inc
sahf
call
nop
jl
add
xchg
out
mov
dec
aam
push
sbb
lods
cmp
aam
jg
imul
dec
adc
inc
push
inc
test
ror
idiv
cmp
pop
int
sbb
cmps
pop
xchg
and
jnp
rol
pop
cmp
adc
mov
or
adc
mov
dec
or
mov
outs
shl
fistp
push
clc
les
or
test
or
dec
mov
push
sub
push
fwait
rcl
sbb
cmp
push
shl
xchg
test
add
add
lds
pop
loop
jmp
push
sub
xchg
adc
pushf
stos
mov
and
or
pop
push
push
mov
sar
adc
xor
pop
push
pop
cmp
xor
outs
mov
push
in
adc
fnstenv
push
cmp
js
push
cmp
and
addr16
push
test
ret
sbb
xor
and
push
add
popf
jo
sbb
or
adc
bnd
sbb
leave
and
loopne
sbb
push
push
xor
aam
loopne
aam
ficomp
push
leave
fimul
cwde
sbb
int3
sahf
dec
es
push
mov
int3
repz
jo
les
shr
fdiv
enter
jmp
jbe
out
xchg
(bad)
icebp
fcomp
xchg
out
mov
jns
les
mov
pop
fwait
nop
and
icebp
xor
pop
push
imul
push
lods
outs
pusha
adc
into
jae
jge
test
xchg
push
fwait
jo
push
out
daa
and
xlat
jns
jne
fs
fist
lahf
sub
mov
enter
push
enter
pop
outs
test
(bad)
loope
and
xchg
fsub
xor
leave
cwde
pop
nop
inc
daa
xchg
pushf
dec
mov
cmp
dec
repnz
dec
jo
ss
and
push
jb
jb
movs
pushf
xchg
cdq
in
jb
test
dec
es
(bad)
push
cwde
call
stos
mov
call
call
mov
push
add
xchg
inc
or
push
sub
stos
cmp
(bad)
mov
cmp
je
out
mov
mov
or
daa
cs
mov
xchg
adc
sbb
shl
das
push
and
add
int3
push
push
dec
mov
push
add
rcl
inc
mov
ins
mov
cmps
pop
fldz
lea
mov
pop
mov
sbb
dec
inc
mov
or
xchg
clc
mov
or
cmp
xchg
and
call
mov
mov
sub
pusha
test
ds
push
pop
add
push
in
call
mov
adc
iret
sub
sar
jl
aad
push
pop
mov
push
out
pop
push
fsubr
es
data16
and
outs
sbb
push
pop
push
inc
inc
add
add
or
arpl
in
cmp
adc
scas
xchg
loopne
jg
ror
or
out
inc
in
sub
xchg
mov
rol
std
ror
cs
and
cmp
shr
inc
rcl
shl
jmp
mov
and
jecxz
xchg
inc
leave
inc
cmps
push
inc
dec
bound
dec
xor
push
jmp
jb
je
jne
dec
dec
rcr
mov
pusha
fs
jnp
fs
repz
lock
movs
(bad)
mov
adc
cmp
inc
imul
adc
jmp
fst
lock
dec
push
je
mov
xor
repz
fsubr
sub
ds
sbb
sub
ss
bound
push
imul
out
and
sub
test
and
pop
retf
and
push
enter
pop
arpl
cdq
aaa
sbb
mov
sbb
lods
and
daa
inc
sahf
add
mov
sbb
sbb
push
das
inc
adc
pop
inc
imul
xor
sbb
ins
dec
cdq
and
loope
pop
call
sub
add
ss
lods
mov
push
mov
(bad)
fnstsw
fild
xor
inc
adc
add
inc
sbb
ror
dec
ja
addr16
pop
(bad)
sub
ins
out
or
pusha
addr16
add
xor
and
add
mov
nop
daa
and
add
cli
dec
rol
xlat
nop
les
jecxz
mov
gs
fsubr
cmp
ja
adc
or
and
movs
lods
fwait
dec
loop
in
sbb
pop
stos
iret
mov
pushf
push
fild
cmp
sbb
outs
mov
mov
std
inc
and
js
dec
into
adc
loopne
(bad)
push
add
into
push
aas
ss
leave
ss
pop
adc
cs
push
pop
adc
or
xchg
jmp
rol
je
jp
loop
and
push
inc
push
test
add
das
icebp
xor
loope
add
(bad)
inc
out
cs
jg
mov
xchg
es
cmps
and
mov
sahf
adc
mov
cmp
mov
ret
aaa
xor
test
out
fcomp
pop
or
call
mov
sub
sub
push
(bad)
sbb
daa
call
xor
in
es
add
gs
sbb
xor
adc
mov
sbb
(bad)
iret
push
add
je
shl
jae
aam
fmul
cmc
in
cmp
mov
xchg
mov
mov
dec
xchg
add
enter
repnz
adc
test
add
icebp
xchg
(bad)
adc
jmp
fcom
adc
adc
pop
adc
scas
xlat
jmp
sub
pop
divps
adc
mov
inc
enter
jns
adc
das
add
or
push
push
jle
ror
(bad)
mov
dec
icebp
lea
pop
mov
jo
cdq
sub
test
add
add
xchg
fs
fmul
jo
add
aam
jmp
or
cmp
or
rol
push
fadd
(bad)
in
ss
in
push
cmp
sub
and
rcl
int3
mov
xor
dec
and
inc
cmp
push
lea
ss
add
jmp
sbb
sub
lahf
aad
push
daa
xchg
vmptrld
aam
mov
sbb
adc
dec
xor
mov
test
mov
leave
mov
mov
jnp
test
mov
jge
mov
push
adc
popa
cmps
or
lock
mov
aas
cmp
cmp
retf
cmp
iret
or
push
jp
ror
mov
shl
aam
cmp
xchg
sub
push
cmp
inc
cmp
in
cmp
sub
cmc
lahf
push
scas
pop
pop
cmp
adc
xor
xchg
xchg
pop
shr
hlt
out
pop
jl
loopne
cmp
xor
add
cdq
xchg
adc
xchg
pop
mov
leave
cdq
mov
pushf
jne
cs
sbb
lods
inc
sahf
inc
pop
or
xor
fiadd
imul
neg
fimul
cli
inc
mov
call
scas
leave
cmp
into
aam
jae
ja
sar
inc
xchg
sub
clc
in
aas
je
es
cmp
jne
cmp
rol
mov
add
ret
sub
(bad)
test
sub
or
mov
call
loop
sub
or
push
jno
add
jo
push
test
lock
mov
sbb
(bad)
ror
adc
pop
outs
lea
cwde
add
xchg
pop
mov
adc
add
or
xchg
je
lea
or
or
int
test
dec
add
add
lock
aad
enter
leave
push
add
in
pop
mov
add
mov
and
adc
test
push
inc
xchg
test
mov
sbb
lods
xchg
test
push
pusha
dec
mov
cmps
stc
(bad)
lock
ja
push
dec
xchg
xchg
pop
in
stc
in
fadd
pop
inc
or
mov
jmp
pop
sub
xchg
or
sbb
or
popa
xor
inc
stc
inc
cs
or
pop
or
outs
inc
hlt
cmp
jmp
jg
and
dec
sub
mov
adc
push
dec
push
mov
lock
and
imul
sbb
add
dec
ror
pop
aam
add
sbb
jne
jne
retf
aam
jo
mov
ret
into
xchg
adc
dec
ss
xchg
or
enter
fcom
mov
call
add
xchg
xchg
xor
push
or
fild
or
pusha
addr16
mov
adc
pop
and
mov
out
add
cwde
adc
fcom
and
add
sub
icebp
jns
add
xor
sbb
fisub
xchg
in
mov
mov
xchg
lock
lahf
push
push
push
dec
repz
rol
(bad)
adc
es
add
xchg
fcmovbe
in
mov
loope
push
or
rol
test
shl
add
or
ss
sti
fld
xor
push
add
jno
ret
cli
dec
mov
pop
sub
in
ins
sbb
jo
repz
enter
pushf
sbb
dec
add
add
xchg
adc
popa
sbb
and
sub
das
add
std
xor
inc
ds
clc
xor
out
sbb
push
push
mov
mov
jmp
push
lods
mov
mov
cmp
inc
fisub
adc
add
pop
adc
int
mov
push
add
pop
mov
cdq
jb
or
inc
nop
jbe
movs
sbb
inc
pop
push
inc
pop
add
cmp
(bad)
mov
loopne
xor
(bad)
fild
jmp
shr
or
add
ret
pop
shl
lods
addr16
clc
push
dec
clc
or
sub
cmp
rcl
sub
inc
jae
mov
xor
rcr
loopne
or
sub
cld
lds
mov
movs
(bad)
and
cmp
jne
and
cmp
cli
push
fadd
add
dec
jmp
rol
sub
lods
enter
pop
and
jge
push
pop
pop
pop
in
sub
cdq
pop
dec
mov
je
xchg
push
enter
add
je
ret
and
leave
jg
adc
cmc
mov
jmp
mov
mov
scas
(bad)
pop
adc
cmp
loope
inc
cmp
pop
add
xchg
stos
push
inc
pop
imul
fisttp
cli
mov
or
outs
daa
cli
test
inc
add
jb
add
je
cmp
jge
dec
push
dec
add
test
add
push
popa
cmp
xor
or
jnp
xchg
iret
or
sub
add
xchg
outs
sub
and
xor
lock
popf
xchg
or
int
jmp
sbb
pop
push
cmp
rcpps
adc
xor
mov
or
dec
mov
add
pop
pop
pop
fild
xor
or
adc
xchg
or
adc
and
and
js
mov
push
jge
stc
sti
and
jne
add
jns
jmp
adc
test
jo
dec
xchg
out
std
je
push
sbb
pusha
or
add
shl
mov
inc
cdq
nop
test
ins
ss
jne
dec
push
bsf
adc
add
pop
sub
stc
mov
sbb
cmp
in
cmc
push
fcomp
hlt
and
sub
add
fs
sub
sbb
push
sti
inc
pop
pop
sbb
add
jb
fcmovbe
xchg
jne
das
jbe
and
cmp
and
xor
adc
inc
adc
lds
dec
push
(bad)
in
sub
sbb
adc
jge
adc
mov
(bad)
ret
xor
int3
and
add
add
mov
dec
pop
add
gs
rcr
loopne
jg
sub
sbb
xor
jp
sbb
gs
adc
or
jmp
or
jns
push
sbb
mov
add
and
cmp
pop
mov
and
mov
or
cmp
add
stos
adc
push
mov
dec
into
lahf
stos
pop
lods
lahf
movs
push
stos
je
mov
mov
jmp
mov
js
mov
aam
pop
ret
dec
and
lock
sbb
add
adc
mov
test
lock
pop
test
mov
or
cld
sub
(bad)
aad
dec
(bad)
jae
bound
mov
inc
test
or
sub
and
inc
and
nop
pop
or
call
or
imul
stos
mov
mov
ret
adc
sub
dec
or
and
mov
xchg
mov
pop
and
xchg
or
pop
in
xor
or
inc
and
sbb
inc
inc
and
invlpg
pop
mov
mov
xchg
ror
inc
or
dec
cmps
inc
dec
dec
mov
nop
inc
mov
pop
rcl
push
jmp
sub
sub
jb
add
dec
xchg
ror
fisubr
sti
and
cmps
sbb
out
ret
ins
adc
and
or
repnz
mov
mov
mov
ror
pop
sub
xor
add
loopne
xor
or
and
sbb
mov
sub
adc
sub
punpckhbw
sub
es
daa
push
call
and
pop
or
ret
mov
pop
pop
cmp
add
mov
das
fwait
sbb
rol
xor
dec
dec
rol
push
xor
inc
shl
push
ror
xor
adc
or
adc
add
test
js
adc
xor
fs
and
xchg
xor
lock
adc
or
inc
sbb
push
or
lock
out
and
mov
adc
loope
sar
cmp
inc
sub
or
sub
adc
(bad)
in
sahf
sbb
adc
and
mov
sbb
mov
sbb
push
inc
fcomp
push
movs
nop
jae
xchg
pushf
jns
jne
sbb
gs
shr
les
dec
js
dec
int3
adc
pop
ret
call
adc
test
iret
adc
and
jmp
adc
rcl
inc
xor
adc
ret
ret
sub
inc
and
adc
sbb
push
inc
jmp
stos
mov
adc
push
fwait
xchg
sub
or
mov
xor
or
jmp
sub
pop
sbb
mov
popf
adc
fdiv
dec
xor
adc
jecxz
adc
mov
cwde
movs
dec
pop
jo
sar
and
outs
call
sahf
push
add
jl
pop
dec
hlt
jecxz
adc
push
mov
stc
clc
sub
xchg
ror
cmc
add
jl
cmc
inc
push
je
or
and
pop
mov
pop
in
xor
and
rol
loopne
push
call
daa
dec
faddp
test
scas
out
sbb
mov
dec
push
dec
iret
add
pop
inc
into
inc
push
xchg
cmp
dec
call
add
repz
and
xor
add
into
in
int
add
lds
cmp
adc
jmp
xlat
mov
in
push
shr
adc
test
push
add
xchg
ja
rcl
adc
in
dec
xchg
lock
push
or
jg
pop
mov
pop
pop
in
fst
jmp
or
add
lea
push
das
pusha
adc
and
nop
xchg
cs
in
xor
movs
push
inc
call
mov
adc
sar
pop
and
lds
les
pop
not
cmp
pop
sub
dec
mov
or
and
or
sub
popf
cmps
xor
cmp
push
inc
add
or
or
or
jne
(bad)
lock
mov
xor
add
mov
sbb
xor
out
or
add
or
xor
mov
movs
sti
lods
cld
add
sbb
adc
movs
mov
aam
add
out
push
loope
add
sahf
lods
mov
and
scas
int
add
and
mov
sahf
loope
push
mov
fisubr
add
mov
into
sbb
rol
mov
sti
fcmovnu
outs
mov
jne
gs
cmp
mov
push
int
punpcklwd
jnp
sbb
push
movs
div
lock
lock
push
or
repnz
dec
add
scas
sub
repnz
push
and
scas
enter
mov
cmp
test
je
sbb
out
and
xor
mov
push
(bad)
ja
pop
add
jg
sbb
dec
add
add
out
adc
or
mov
adc
jl
inc
or
cdq
push
or
loop
mov
sub
inc
retf
push
push
adc
dec
pop
psubw
out
or
inc
ja
xchg
xchg
xlat
cmp
sar
shr
or
adc
and
sti
mov
cdq
ret
stos
stos
vmread
loopne
cmp
jmp
aas
test
xor
xor
xchg
push
lea
loopne
jp
cli
bound
daa
in
cmp
xchg
jmp
mov
not
or
push
or
loop
ret
dec
pop
push
jne
sbb
adc
mov
add
mov
std
jb
or
mov
cmp
mov
add
jecxz
test
jmp
rcl
sub
xor
lea
sbb
clc
mov
add
dec
cwde
and
je
movs
leave
mov
pop
adc
xor
repnz
and
dec
test
inc
sahf
(bad)
xchg
dec
jae
push
sub
dec
sub
sahf
adc
fadd
push
push
mov
push
push
push
mov
(bad)
add
mov
fmul
inc
sbb
mov
push
xchg
into
pushf
icebp
pushf
adc
es
or
loopne
(bad)
dec
cmp
sti
adc
popa
inc
stos
add
popa
push
xchg
imul
cld
cmp
into
leave
xchg
inc
dec
pop
call
pop
or
xchg
jne
es
mov
pop
pop
je
in
jnp
or
xor
movs
test
(bad)
sbb
or
add
iret
sub
pop
scas
add
push
push
hlt
daa
xchg
sbb
test
loopne
jbe
xchg
adc
jo
retf
(bad)
sbb
dec
ds
ss
ins
test
lock
add
lock
sbb
adc
cmps
and
loopne
call
jle
inc
pop
adc
sbb
sbb
out
(bad)
or
or
out
sar
test
mov
or
test
pushf
lods
repz
inc
ins
push
push
mov
jo
aaa
into
in
cmp
popf
les
enter
ror
adc
or
or
xor
lea
fcom
push
or
push
dec
arpl
(bad)
adc
nop
mov
push
iret
out
dec
ror
mov
cmp
lock
inc
lea
mov
or
lea
and
out
adc
mov
cmp
loopne
and
rcr
dec
lods
mov
mov
scas
es
dec
shr
push
xchg
aas
push
or
xchg
popa
lea
movs
mov
movs
or
test
pop
aam
rol
cmovle
mov
adc
or
mov
push
mov
mov
leave
jno
adc
rcl
adc
mov
push
sub
loopne
(bad)
(bad)
out
lock
cmc
je
mov
push
pop
cdq
pop
and
xchg
push
cmp
cmp
pop
dec
lods
clc
das
(bad)
add
cmc
inc
in
sub
imul
or
mov
jnp
aam
scas
mov
or
mov
jp
ins
adc
mov
or
pop
pop
sbb
pusha
pop
(bad)
call
pusha
jnp
mov
inc
mov
ret
mov
lea
mov
jb
aam
imul
pop
sub
dec
retf
les
loopne
and
or
xor
sub
xor
sbb
pop
push
sub
jb
xchg
or
pop
hlt
je
cmp
jbe
nop
sbb
jmp
mov
mov
ret
pop
add
jmp
and
push
into
adc
jns
imul
leave
mov
ins
dec
in
sub
and
sbb
add
loopne
sub
push
jnp
outs
inc
sahf
add
fs
and
call
sub
enter
or
and
add
pop
ror
and
xchg
push
or
inc
adc
dec
or
xor
vrcpps
loope
mov
mov
add
enter
imul
xchg
aaa
and
sub
dec
in
xor
ror
std
fcmovnb
or
and
inc
jle
adc
adc
out
mov
popf
rcr
or
fadd
xchg
xor
jecxz
adc
mov
and
mov
and
adc
mov
cmp
outs
sub
xchg
sbb
pop
scas
das
fwait
adc
leave
jae
sub
and
enter
in
add
inc
push
sub
and
sbb
outs
in
pop
push
xchg
hlt
fimul
scas
pop
setge
jo
jge
je
ins
add
xor
xchg
retf
dec
aam
or
mov
repz
push
xchg
sar
cmp
mov
push
adc
add
daa
es
nop
fdiv
xchg
(bad)
sahf
dec
lock
and
test
push
es
add
xchg
test
push
arpl
or
xchg
jle
in
outs
mov
sar
sub
movs
inc
dec
sti
inc
push
(bad)
push
push
movzx
push
or
retf
in
jmp
nop
jb
test
out
sbb
pop
and
fadd
cmp
push
shr
jo
jb
push
imul
ins
and
push
mov
ret
ret
push
push
jne
push
mov
sub
sub
add
sub
lock
dec
hlt
mov
adc
aad
stos
pop
push
cmps
lds
retf
popa
lds
sbb
cmps
add
mov
dec
call
adc
xchg
pop
push
inc
push
addr16
aam
inc
sub
inc
out
push
lea
stc
push
fist
or
mov
push
jle
pop
jmp
outs
imul
dec
(bad)
or
mov
addr16
add
xlat
js
adc
cmp
mov
xor
dec
(bad)
out
call
cmp
cmp
jbe
cmp
jbe
mov
sbb
rol
xor
(bad)
jnp
sbb
pop
sar
mov
iret
popa
add
sub
push
or
fincstp
mul
ja
mov
fs
adc
mov
nop
jmp
sahf
jnp
add
(bad)
jne
push
or
je
retf
(bad)
in
inc
and
in
push
mov
cmps
(bad)
pop
jmp
push
sub
ret
xchg
cmp
jmp
jmp
sbb
ret
out
ins
(bad)
movs
sbb
das
or
push
cmp
loope
mov
mov
add
mov
fst
pop
add
add
sub
(bad)
inc
push
in
mov
daa
or
and
adc
enter
mov
in
pop
rcr
mov
sar
movs
mov
add
ins
cmps
xchg
jo
add
or
jmp
mov
inc
rcl
and
push
mov
inc
dec
(bad)
mov
mov
dec
or
mov
sub
fs
pop
ret
push
mov
bound
sbb
mov
or
addr16
rcl
mov
xchg
adc
jmp
mov
imul
adc
adc
push
(bad)
in
sbb
cld
adc
lock
shl
loope
xor
sbb
loope
call
push
pop
loopne
inc
dec
and
sbb
dec
(bad)
pop
fstp
pop
or
push
fcom
out
add
adc
and
out
fist
and
mov
jecxz
jl
push
sbb
stos
lock
into
shl
pop
mov
popa
adc
dec
inc
pop
pop
out
pop
add
mov
lea
cmp
dec
outs
mov
sub
adc
loopne
jnp
dec
imul
and
jle
loopne
cmp
movs
or
repz
push
push
loopne
add
jmp
je
ror
gs
sahf
movs
push
nop
add
xor
sub
add
mov
cs
ss
pushf
xchg
or
pop
cs
cmps
loope
xor
lods
mov
xor
xchg
out
in
lahf
enter
or
int3
add
int3
int3
cs
call
jecxz
xchg
test
mov
adc
jge
sub
inc
pop
test
(bad)
cmp
mov
mov
(bad)
fld
adc
mov
jno
mov
shl
xchg
hlt
popa
daa
popa
xlat
movs
jmp
fnclex
or
sbb
mov
test
loope
(bad)
xchg
or
add
mov
inc
push
mov
or
out
mov
mov
or
(bad)
ds
sbb
popf
sub
scas
mov
inc
rol
or
movs
int3
inc
adc
dec
ret
pop
xor
sbb
stc
fdivr
divps
out
je
ror
jae
adc
dec
or
mov
rol
and
push
add
and
mov
es
sti
mov
hlt
push
mov
int3
push
adc
mov
jmp
mov
add
cmp
sbb
pop
mov
sbb
scas
ds
call
lods
popa
mov
jns
push
add
mov
pop
push
jl
es
push
add
ret
loopne
add
movs
loopne
cmps
xor
test
mov
sub
fsub
fistp
pop
sbb
xor
ror
fs
mov
aam
pop
cdq
ror
stc
neg
pop
sbb
pop
inc
inc
inc
sub
shr
or
aad
imul
add
jns
test
std
push
xor
xchg
pop
push
dec
mov
sbb
outs
gs
dec
fsub
jp
lds
jbe
stos
mov
dec
ins
rcl
ret
mov
xlat
dec
or
push
dec
cmp
nop
mov
mov
sbb
(bad)
mov
adc
or
(bad)
mov
in
jne
rcl
mov
pop
arpl
in
lods
mov
add
stos
add
(bad)
dec
fdivr
xlat
mov
sub
jle
sub
sbb
es
sbb
adc
push
sbb
fsub
cmp
mov
pop
loopne
ss
aam
lahf
je
rol
pop
clc
jne
loopne
lock
push
iret
xor
jmp
cmp
mov
sub
or
sub
rcl
aad
add
cmc
jns
and
push
sub
add
arpl
adc
aam
or
test
stos
test
add
fwait
pushf
int3
pop
jmp
sbb
push
push
push
mov
enter
cmp
(bad)
ss
and
fiadd
imul
scas
sar
fiadd
cs
xchg
and
push
ror
xchg
mov
sub
ret
pop
sub
sahf
div
aam
les
lea
pop
or
dec
jmp
jae
jle
add
pop
mov
icebp
pop
mov
lds
ret
daa
add
loopne
ret
mov
mov
fisub
xor
mov
aam
(bad)
fisttp
xor
jp
and
loopne
dec
arpl
cwde
xor
cs
jp
sub
fdivr
mov
xor
cmp
pop
pop
jo
adc
add
mov
sbb
mov
pusha
sub
ins
test
xchg
add
mov
mov
push
mov
shl
add
jge
aam
fwait
push
xlat
fnstsw
sti
cmp
jbe
mov
call
adc
mov
mov
add
icebp
mov
sub
js
xchg
mov
dec
fsub
jl
fistp
or
ins
shl
push
stc
fidivr
fmul
pop
(bad)
(bad)
dec
jae
mov
aam
push
bound
adc
adc
cmp
lock
fisttp
sahf
pop
jp
ror
mov
mov
aaa
mov
mov
cmp
call
dec
arpl
cmps
aam
fsubr
dec
pop
mov
mov
jl
mov
sbb
cmp
pop
adc
adc
lds
add
add
and
loopne
cmp
inc
cmp
ror
mov
push
loop
hlt
or
cmp
mov
arpl
jbe
adc
stc
inc
cmp
xchg
jl
mov
inc
sbb
pop
sar
repnz
das
pushf
and
add
js
lods
add
jmp
cld
sti
rep
movs
push
push
(bad)
gs
movs
mov
call
mov
shr
mov
fdivr
or
mov
inc
inc
cmp
jle
mov
sbb
pushf
mov
into
in
push
inc
ret
mov
mov
cmp
movsx
movs
fld
ss
push
fbld
adc
and
push
cld
xor
in
je
push
push
xchg
test
scas
or
or
xor
mov
jl
pop
pop
jge
xchg
add
push
or
mov
jmp
add
jmp
or
add
push
mov
sub
outs
dec
mov
cmp
cmp
pusha
or
pushf
sbb
and
cmp
jl
add
mov
cmp
mov
int
sbb
add
sbb
inc
mov
inc
ja
imul
ss
push
gs
add
xchg
push
cmp
add
data16
jo
mov
pop
inc
test
ror
or
add
cmp
mov
fld
add
and
dec
push
mov
(bad)
adc
add
add
pushf
pushf
pushf
pushf
push
pop
or
outs
outs
outs
lahf
or
jnp
or
jbe
jmp
or
outs
outs
push
jmp
por
jmp
adc
pop
outs
outs
outs
outs
adc
push
adc
dec
adc
dec
adc
outs
outs
push
jmp
pop
jmp
sbb
xor
outs
outs
outs
sbb
sub
jmp
sbb
and
outs
outs
push
jmp
pop
jmp
and
or
movq
jmp
and
pop
hlt
out
inc
push
cvtdq2ps
jmp
lea
test
pop
xchg
adc
imul
imul
push
out
and
idiv
iret
repz
push
and
push
push
es
repz
cmp
dec
repz
repz
push
pop
pop
arpl
repz
push
cmp
nop
xchg
call
test
mov
add
and
or
or
(bad)
(bad)
dec
adc
adc
push
pop
sbb
sbb
sbb
push
pop
and
and
aas
test
cmp
mov
repz
and
lds
mov
ret
push
pop
and
dec
sbb
es
cmp
add
idiv
mov
enter
inc
jmp
and
(bad)
shl
cmp
cld
jo
stos
popa
loope
in
jae
sub
pop
push
jne
popa
push
sti
sbb
pop
cmc
xchg
sbb
xchg
sar
or
pop
pop
dec
leave
jl
loopne
sub
clc
test
inc
ss
mov
inc
cmp
jbe
sbb
arpl
xchg
push
mov
js
push
push
out
retf
add
push
add
push
push
mov
fwait
sub
test
sbb
pop
ret
mov
add
adc
xor
or
cmp
add
adc
ins
test
xor
test
sub
lahf
cmp
pusha
xchg
aam
sub
pop
cmps
sub
lods
ret
add
push
dec
push
dec
cwde
in
test
push
and
jbe
push
cwde
clc
and
das
adc
rcl
xor
ins
adc
fisttp
iret
lahf
add
push
add
adc
push
call
push
and
push
mov
pop
adc
lods
adc
bound
inc
add
js
jns
cmp
push
pop
mov
fdivr
bswap
mov
add
adc
add
cmp
test
mov
xor
add
xor
rcr
fcmovu
sub
pop
arpl
jmp
ror
inc
adc
cli
mov
sbb
mov
outs
add
or
inc
adc
dec
movs
sbb
call
pushf
ds
cmps
cmc
retf
push
(bad)
fmul
add
sbb
xor
jmp
movs
push
push
sbb
pop
ficomp
add
cmp
or
shl
(bad)
nop
push
cmp
sub
out
loopne
rcl
and
loopne
push
shl
inc
js
adc
add
or
jo
inc
nop
call
loopne
arpl
jne
stos
sbb
sbb
cmc
or
inc
inc
cmp
aaa
inc
add
xor
xor
test
ins
pusha
mov
adc
jge
and
adc
test
(bad)
aaa
mov
pop
fwait
cmp
jmp
test
mov
jg
jno
lds
inc
adc
or
mov
je
popa
dec
cdq
loop
xor
dec
jbe
aaa
js
rol
retf
lock
pop
or
adc
mov
cmp
pop
hlt
or
outs
dec
stos
enter
or
jp
mov
adc
jmp
sbb
or
rcr
in
fst
jnp
inc
movs
dec
mov
nop
cmps
jae
dec
je
dec
sbb
lock
dec
jge
xchg
xchg
ins
int3
mov
jbe
dec
push
(bad)
shl
in
pushf
pop
push
xchg
push
jno
push
xchg
not
dec
shl
xchg
icebp
sub
enter
or
and
lds
and
and
sar
cmp
jl
lock
cs
push
dec
pop
adc
adc
mov
clc
or
sub
cmp
adc
(bad)
dec
iret
mov
sbb
stc
loopne
(bad)
fidiv
xor
push
jne
es
stos
pop
push
inc
scas
test
iret
shr
loopne
sub
ror
cmps
jge
xchg
fmul
stc
fadd
mov
imul
xor
call
fcomp
test
xchg
push
fimul
cmps
add
in
xchg
div
popa
jb
jnp
push
lock
jbe
dec
and
pop
mov
jmp
aas
sbb
inc
xor
cmp
lods
xchg
mov
cmp
cmp
jmp
bndldx
ss
fdiv
imul
sub
pop
repnz
and
jns
popa
mov
or
sbb
sbb
pop
push
xor
(bad)
cmp
call
add
add
inc
cmp
cmp
or
ins
cld
cmps
pusha
add
xchg
sbb
cmp
dec
push
cdq
nop
loopne
loopne
sub
xor
sahf
enter
push
sbb
dec
jae
int3
or
inc
sbb
idiv
add
enter
das
sti
std
sbb
cmps
xchg
dec
shl
sub
cmp
or
(bad)
rol
push
sbb
cmp
pop
push
test
adc
push
mov
inc
push
xor
pop
mov
mov
popf
pusha
rcl
cs
int3
out
mov
push
lock
cld
movs
adc
cmp
add
cmp
push
mov
jp
lahf
dec
arpl
or
sub
mov
sub
mov
push
retf
dec
or
call
push
rol
xor
adc
push
mov
shl
cmc
bound
push
or
inc
or
inc
call
fsub
bound
dec
jp
hlt
loop
adc
int3
enter
sub
jp
arpl
pop
jmp
ret
movs
aad
or
in
pushf
sbb
mov
jnp
repz
push
cmc
pop
jno
xchg
popa
and
xor
aas
fsub
shl
dec
adc
pop
and
add
cdq
in
sub
out
ds
dec
mov
aaa
add
(bad)
or
sub
in
daa
sub
add
in
mov
je
cmp
jmp
aam
inc
pop
or
xor
sub
es
dec
sub
mov
cmp
push
cmp
std
add
xchg
mov
push
or
add
xchg
or
test
jmp
loopne
jmp
pop
xor
cmp
gs
in
mov
add
call
aam
or
mov
xchg
push
mov
ret
sbb
pop
lock
test
mov
dec
inc
sbb
cwde
mov
and
es
inc
call
dec
cmp
jne
lods
jg
add
jmp
cmp
je
push
fwait
mov
mov
ficomp
(bad)
pminsw
xor
jl
into
sub
adc
adc
pop
aas
xchg
and
push
sbb
mov
jne
xchg
xchg
sar
(bad)
in
or
xor
add
stos
js
add
sbb
adc
arpl
dec
push
fdivr
mov
inc
mov
xor
rol
cmp
xor
xor
mov
cwde
data16
hlt
jns
push
cmp
sub
push
add
test
rcr
aas
cmp
xchg
shl
ret
cmp
mov
loope
sbb
pop
rol
jo
add
and
in
fs
add
adc
inc
pop
xchg
cmp
fsub
rol
and
cmp
and
(bad)
cmp
loopne
lea
xor
cmp
dec
push
mov
ins
push
push
add
jecxz
loope
femms
test
add
iret
pusha
or
jns
inc
push
xor
enter
mov
or
mov
push
xor
and
enter
push
adc
test
xchg
pop
and
cmp
adc
outs
adc
popa
xlat
ret
xchg
cmps
fsubr
(bad)
jmp
add
add
add
popf
add
nop
inc
and
movzx
js
fadd
loope
cmps
adc
adc
inc
xor
xor
shl
inc
add
cmp
aaa
lea
pushf
cmp
inc
xor
add
inc
jbe
push
aas
and
push
pop
jb
retf
xor
pusha
cmp
inc
push
xor
ins
xor
je
jg
movs
fwait
movs
fwait
jl
lock
cdq
movs
fwait
mov
mov
dec
cwde
pushf
mov
ins
or
mov
mov
cmp
into
psrld
paddq
inc
or
dec
test
dec
js
sbb
add
or
xchg
int3
sahf
retf
adc
and
nop
or
fmul
je
jl
and
cmp
or
inc
cmp
jl
sub
cwde
cmp
mov
cmp
in
in
push
jne
inc
cmp
xor
stc
xor
inc
sti
je
out
xor
xor
mov
push
das
bound
mov
adc
leave
jmp
imul
sub
add
xchg
sub
(bad)
adc
fs
push
(bad)
push
(bad)
push
iret
or
mov
cmp
jne
(bad)
div
sub
je
repnz
xchg
mov
mov
ins
jns
into
jmp
inc
sbb
hlt
push
jl
fisttp
push
in
sti
and
jmp
xchg
clc
add
shr
(bad)
xor
mov
mov
sbb
loopne
fwait
test
xor
lds
jge
mov
pushf
inc
das
sbb
or
or
push
pushf
movs
xchg
cmps
popa
jo
xlat
shl
add
xchg
aam
xchg
push
pop
cmp
jge
je
fcmovb
pop
retf
jl
jle
lock
rcr
add
sub
pop
mov
neg
pop
pop
sbb
xor
scas
pop
adc
and
inc
bound
mov
movs
stos
sbb
inc
pop
add
inc
sub
sub
adc
or
push
hlt
cmp
cmp
(bad)
mov
js
add
and
sbb
pop
jne
push
inc
pop
inc
ins
push
out
adc
add
pop
xchg
stos
hlt
jo
push
push
cld
mov
pusha
cmp
jge
mov
jmp
mov
(bad)
dec
or
push
call
mov
lods
sub
ret
test
jmp
fwait
or
or
xor
push
mov
fdiv
(bad)
imul
xchg
xchg
inc
ret
sbb
shr
cs
ins
mov
xchg
out
add
cmp
add
jle
cmp
sub
pusha
call
call
add
je
pusha
pop
jecxz
dec
cs
aaa
nop
push
imul
std
adc
test
mov
jo
popa
dec
mov
pop
inc
rol
sub
and
fnstcw
pop
pop
es
xor
rcl
idiv
jo
push
scas
dec
add
pusha
cmps
push
mov
jmp
test
out
sbb
add
(bad)
fdiv
xor
ret
out
fst
or
xchg
and
enter
cmp
mov
call
mov
bound
mov
add
xchg
dec
mov
add
pop
fild
adc
adc
xchg
shl
retf
push
inc
cmp
lds
xchg
ror
xlat
inc
jge
inc
or
sub
dec
call
repnz
dec
cs
xchg
out
mov
add
ins
adc
xor
add
mov
jecxz
add
rcl
(bad)
(bad)
shr
xor
pop
xchg
mov
mov
xlat
push
shl
call
out
sbb
int3
sub
jno
std
scas
push
enter
pop
pop
gs
push
ds
icebp
sbb
outs
adc
inc
lahf
pop
sbb
stos
mov
mov
dec
cdq
(bad)
pop
popa
or
push
mov
adc
cmp
mov
aas
in
imul
ret
jmp
push
js
xchg
or
sbb
sub
mov
jo
jo
imul
loopne
adc
pop
mov
push
add
mov
movups
ja
add
retf
cmp
push
push
(bad)
(bad)
jmp
and
dec
mov
je
add
ret
retf
inc
out
add
ret
sub
aam
cdq
loopne
ins
adc
add
or
or
mov
xor
add
or
loope
dec
jle
sbb
cmps
mov
push
call
iret
aam
or
shl
enter
add
dec
or
inc
test
xlat
mov
jmp
push
popa
or
jg
nop
jno
and
push
pusha
setle
dec
xchg
leave
(bad)
in
inc
push
and
loope
or
xor
mov
lock
add
sar
scas
ret
cmp
test
pop
movs
call
push
or
in
push
fist
js
mov
sar
addr16
push
inc
push
jg
aam
push
xchg
iret
add
push
(bad)
cmp
mov
push
or
repz
sub
or
sbb
push
jne
jno
cld
fsub
outs
sbb
cmp
dec
jb
jne
pop
cmp
pop
mov
xor
je
xlat
or
fiadd
call
or
push
fcmove
add
mov
xor
test
into
cld
add
or
push
xor
daa
push
mov
push
dec
push
ret
lea
xor
js
ds
mov
fs
xor
cmp
dec
push
push
mov
cmp
arpl
sbb
iret
ds
and
inc
push
xor
setg
push
xor
add
aas
push
test
pop
(bad)
jmp
xchg
out
or
imul
stos
adc
inc
cmps
test
add
clc
lea
or
test
mov
pop
mov
mov
inc
cmp
mov
jl
mul
out
fs
cmp
cmp
out
cs
pusha
sub
mov
pop
mov
xor
sub
movzx
outs
fsub
adc
mov
pop
cwde
xor
mov
mov
pop
xor
xchg
mov
xchg
ror
shl
(bad)
and
or
mov
mov
add
inc
or
in
xchg
add
add
mov
mov
adc
aam
pop
das
pop
daa
mov
inc
push
jmp
push
and
jmp
fwait
push
ror
adc
shr
pop
sub
sar
xor
mov
cmp
sub
push
jp
out
adc
jo
or
xlat
add
test
mov
push
pop
fs
push
push
das
jge
or
cdq
push
xchg
call
push
sub
bound
test
or
(bad)
in
movs
xchg
hlt
out
mov
sahf
fisubr
imul
add
mov
jmp
jnp
fisttp
jmp
js
and
dec
icebp
movs
adc
and
lea
mov
mov
cld
jl
jmp
je
(bad)
pop
popf
nop
(bad)
push
push
iret
mov
mov
push
xchg
push
mov
inc
imul
or
adc
jmp
push
cs
cmp
inc
cmp
jl
daa
push
mov
jne
mov
mov
cmps
push
fstp
adc
and
mov
jle
push
call
xor
mov
jl
test
fcom
adc
and
sahf
sub
add
adc
inc
movs
sbb
mov
in
cmp
push
cs
lods
xor
fimul
xchg
dec
leave
in
cmp
push
push
dec
ret
icebp
pop
cmp
inc
pop
sbb
rol
push
fcmovnu
sub
ret
add
shl
xchg
sub
aam
aam
add
adc
add
pop
cmc
jmp
aad
inc
mov
popa
xchg
add
loopne
cmp
shl
adc
fisttp
jmp
mov
test
not
fcom
pop
or
sbb
pop
(bad)
cmp
repz
push
out
aam
xchg
mov
je
or
adc
in
das
jne
push
mov
inc
sbb
adc
mov
or
mov
pop
retf
mov
jl
mov
mov
mov
add
jmp
add
add
or
(bad)
(bad)
dec
shr
shl
add
and
shl
xor
mov
mov
jo
idiv
jne
movs
movs
mov
lahf
inc
mov
js
mov
adc
fist
push
pusha
inc
cmp
cmp
inc
cmp
sbb
dec
call
push
mov
cmp
outs
pop
or
jl
fisubr
dec
sbb
inc
jecxz
cmp
mov
sbb
push
dec
pop
add
add
aaa
pop
cmp
inc
inc
dec
es
add
add
jmp
ror
add
adc
fldz
fcomp
aas
scas
fwait
(bad)
fnstsw
aaa
add
or
or
(bad)
jmp
data16
push
dec
cmp
mov
js
mov
adc
outs
inc
push
test
hlt
imul
adc
mov
sub
outs
xor
sub
cmp
stos
ror
xor
pop
cmp
sub
sub
test
inc
pop
push
sub
dec
outs
xor
in
xchg
mov
cmc
push
iret
jge
cmp
add
push
int3
mov
fisttp
call
jmp
inc
adc
sub
es
pop
pop
xor
xchg
add
adc
in
aas
mov
xchg
ret
jne
cmp
lock
xor
aaa
sbb
or
adc
scas
cmp
loope
mov
test
jmp
fld
push
ja
call
push
add
cmps
jns
push
xor
shr
jge
loop
fimul
enter
repz
jae
xor
loopne
in
ret
aam
mov
jne
mov
in
sbb
fadd
pop
outs
cmp
xchg
pop
add
pop
cmp
cmp
xchg
push
daa
mov
fdivr
mov
test
mov
or
(bad)
pop
outs
and
je
add
inc
(bad)
dec
pushw
jo
sub
push
les
adc
lock
jo
mov
push
push
xor
or
xchg
retf
ror
push
xchg
dec
push
icebp
pop
sbb
jae
pushf
mov
sbb
xchg
jmp
ins
xor
cwde
add
scas
aaa
test
mov
cld
push
xor
ja
and
or
call
cmp
add
ror
add
arpl
mov
add
jmp
sbb
shl
loopne
rol
jmp
push
adc
xchg
dec
xor
and
test
jne
movs
mov
inc
cld
out
add
ss
pop
mov
aaa
pop
ss
cmp
pop
mov
pop
xor
fnsave
push
push
add
mov
and
and
push
adc
jne
xor
dec
dec
dec
mov
mov
mov
cmp
retf
rcl
mov
push
mov
movs
xor
inc
add
pop
add
cs
and
mov
jne
imul
je
jge
adc
dec
add
sbb
mov
adc
inc
cwde
or
das
add
cdq
cmp
pop
add
mov
sub
push
cmp
cwde
pop
xor
push
lock
loopne
mov
test
pusha
xor
adc
cwde
inc
adc
arpl
add
jbe
mov
xchg
jne
ret
daa
dec
repnz
mov
das
jno
cli
and
nop
aad
mov
mov
nop
jbe
mov
adc
adc
push
enter
pop
adc
push
ins
jl
xchg
cmp
add
sub
add
add
dec
push
add
xchg
les
xchg
push
xchg
pop
push
nop
push
sbb
push
xor
push
jmp
cmp
cwde
jne
outs
cmp
pop
add
cmp
or
nop
nop
fidivr
das
xor
push
cmp
rol
sbb
xchg
(bad)
ffree
fdiv
(bad)
adc
fcom
es
nop
retf
inc
movs
aaa
add
push
jo
add
(bad)
(bad)
loope
adc
test
mov
fbstp
sbb
xor
test
jnp
aam
mov
push
xor
mov
inc
popa
push
movs
adc
ins
pop
xor
icebp
push
inc
xchg
add
leave
inc
ins
add
jae
wrmsr
pop
push
and
and
xor
push
push
push
dec
pop
or
pop
arpl
push
dec
jbe
inc
and
add
inc
xchg
push
and
sar
or
movs
cmp
push
shl
cs
ja
or
inc
sar
or
out
sbb
add
jp
push
test
retf
fst
jmp
pop
idiv
and
mov
cmp
test
or
mov
xor
adc
cmps
(bad)
push
jb
push
sub
rcr
xchg
lods
leave
and
dec
popf
xor
enter
jecxz
ins
jg
ins
shl
jl
xchg
cmc
sbb
inc
and
pop
push
sbb
mov
test
mov
cmps
icebp
sub
jo
dec
push
bnd
lods
cmp
inc
das
js
aad
dec
cmp
sbb
sete
or
pop
dec
adc
xchg
lock
pop
push
arpl
dec
rol
repnz
or
shl
test
and
xor
inc
mov
pop
das
(bad)
int
js
add
fcom
test
mov
push
jne
xor
pop
repnz
pop
aam
in
mov
cmp
fild
and
rcr
and
adc
mov
ss
add
dec
lahf
add
sbb
mov
jne
sub
ret
leave
mov
int3
das
in
(bad)
leave
ins
aas
or
and
call
aam
xchg
mov
(bad)
(bad)
and
in
inc
mov
movs
dec
test
test
aas
add
dec
or
adc
inc
dec
mov
mov
inc
add
sbb
into
xchg
mov
sbb
pusha
in
cmps
test
test
add
xchg
arpl
pop
xor
add
inc
push
ror
mov
jbe
mov
shl
test
or
(bad)
xor
pop
add
mov
add
out
(bad)
mov
adc
lock
push
xchg
sbb
dec
pop
das
sbb
or
sub
fwait
cli
cmc
test
cmps
sub
in
je
push
push
sbb
hlt
shr
inc
imul
add
push
xchg
jmp
daa
jg
xor
je
push
jecxz
ss
je
retf
fadd
cmc
std
sub
lock
test
rol
add
xor
pop
inc
and
movs
or
or
arpl
sbb
cld
fnstsw
pop
pop
test
adc
dec
push
mov
add
sbb
shr
inc
mov
or
sub
aad
xlat
movs
and
outs
out
xlat
push
and
mov
out
push
push
jecxz
mov
mov
test
push
(bad)
clc
icebp
cmp
and
mul
push
sbb
adc
retf
push
ret
addr16
adc
pop
movs
gs
dec
xor
or
rol
jbe
add
pop
or
loopne
jnp
(bad)
in
movs
cmp
jns
popa
sbb
xor
push
push
shr
add
xor
inc
push
mov
pop
xor
popf
movs
out
xchg
xor
outs
loopne
stc
push
jp
push
mov
add
(bad)
sbb
pop
ror
jnp
add
iret
call
pop
sti
gs
das
sahf
call
mov
mov
inc
pop
dec
jg
enter
jb
jae
jmp
inc
ret
pop
dec
push
sbb
dec
inc
aaa
test
xor
jl
test
dec
loopne
push
push
add
in
test
cld
das
sub
jl
mov
movs
mov
lds
ror
scas
retf
inc
or
(bad)
jmp
addr16
rcl
loopne
les
or
inc
sbb
adc
xchg
pop
pop
pcmpeqw
and
and
add
and
dec
mov
sub
fsub
or
or
cmp
adc
les
sbb
mov
bound
or
ins
outs
and
mov
inc
push
pop
inc
push
push
aam
or
pushf
and
loopne
out
xchg
cmp
xor
shr
dec
or
les
add
or
(bad)
ret
xchg
enter
or
retf
or
(bad)
mov
pop
sub
leave
inc
imul
cmp
rcl
mov
enter
clc
pop
je
xchg
push
adc
inc
sbb
inc
xchg
xchg
sbb
std
cmp
aas
sti
cmp
pop
or
movs
cmp
in
fst
xchg
adc
sbb
adc
adc
shr
dec
cmp
sbb
xor
adc
fldcw
cmp
rol
ficomp
out
or
and
icebp
les
push
ins
leave
nop
js
xchg
and
fincstp
and
out
sbb
lea
dec
js
mov
dec
outs
loopne
pop
push
and
mov
xor
or
jle
pop
enter
fs
pusha
shl
icebp
adc
jmp
add
mov
add
fldcw
loopne
sbb
push
push
sbb
add
jg
ret
xchg
jmp
(bad)
sbb
test
fdiv
movs
push
fisttp
inc
and
or
out
and
sbb
xchg
xchg
dec
add
mov
push
pop
(bad)
jle
rol
cmp
adc
sti
sub
sbb
pop
cli
shl
or
xchg
push
add
push
jae
xor
sub
fs
out
dec
ret
fcomp
fadd
jo
ucomiss
sbb
inc
and
ja
mov
fild
push
push
outs
mov
shr
sbb
loopne
and
je
test
pop
scas
cmps
push
jns
bound
xor
mov
push
or
or
jo
lds
mov
sbb
loopne
jne
test
fmul
mov
or
mov
mov
(bad)
xor
cmc
add
or
xchg
loopne
ja
cmp
push
mov
inc
pop
movs
cmp
jl
mov
stc
and
je
test
loope
dec
push
push
cmp
je
xor
push
push
inc
mov
aas
push
and
es
mov
in
or
adc
ret
inc
pop
ficomp
(bad)
call
and
js
sbb
lods
adc
sahf
xchg
cli
mov
je
fwait
les
add
push
cwde
sbb
pop
or
jns
das
pushaw
in
and
pop
push
jl
sub
lea
test
mov
push
xor
mov
inc
and
add
sahf
add
add
int3
adc
loop
out
or
jb
outs
dec
lock
movzx
cmp
and
jmp
clc
inc
sub
jge
push
mov
(bad)
loop
lock
jl
mov
scas
inc
or
fld
add
out
bound
dec
jo
test
mov
dec
dec
fcmovb
mov
idiv
add
inc
pusha
push
sub
sti
jge
inc
mov
aam
xor
movs
add
adc
sbb
push
test
inc
test
add
xchg
mov
jecxz
and
popf
dec
cmp
xor
dec
enter
test
xchg
pop
test
and
mov
mov
call
hlt
sub
ds
jno
add
xchg
inc
shr
and
repz
push
aaa
inc
inc
cmp
enter
push
je
jl
add
and
dec
scas
jne
cmp
inc
xchg
mov
ss
jne
mov
(bad)
inc
xor
cmp
nop
push
adc
ficom
out
push
adc
and
push
xchg
jp
loopne
push
mov
cmp
and
xchg
pop
mov
dec
mov
jne
sub
scas
xchg
lds
push
pop
lahf
out
enter
std
ficomp
je
nop
(bad)
mov
fidiv
push
add
inc
add
std
add
jb
aas
pop
dec
(bad)
add
adc
push
pushf
push
mov
cmp
nop
sbb
xchg
cmp
ins
sbb
push
xrelease
fdivp
jns
adc
loope
into
add
lahf
adc
retf
ret
mov
jmp
xchg
push
mov
movs
push
inc
jl
(bad)
fwait
das
pop
pop
fwait
adc
clc
test
sbb
rol
xor
pop
stc
inc
push
sti
loopne
add
(bad)
(bad)
pop
cmp
xor
es
cwde
leave
adc
adc
jge
add
mov
das
xchg
mov
xchg
rol
jo
shl
popf
mov
pusha
add
adc
iret
loopne
push
pop
sbb
aaa
sti
mov
xor
popf
and
push
ins
mov
js
jg
xchg
pushf
movs
jg
movs
pop
pop
or
mov
dec
fs
test
xchg
mov
loope
sub
mov
pop
mov
test
cld
cld
or
sbb
mov
inc
icebp
or
xchg
idiv
sbb
adc
inc
adc
rol
pop
enter
jns
dec
or
call
les
jl
push
stos
ret
fiadd
xchg
push
add
jb
outs
stos
adc
xor
sbb
push
inc
pushf
lea
jns
dec
mov
adc
inc
lea
mov
lods
cmp
inc
add
lods
mov
jmp
test
pop
ja
pop
inc
pop
cmp
stc
cs
out
xor
je
ja
add
mov
adc
push
cs
xor
adc
mov
mov
scas
xchg
mov
push
xchg
xchg
adc
pusha
lods
or
inc
sbb
push
cmp
addr16
dec
aam
xlat
sbb
and
jae
nop
dec
nop
cwde
sub
fldenv
mov
jne
xor
push
popf
inc
mov
mov
and
adc
leave
movs
cwde
mov
test
std
and
push
inc
mov
retf
aaa
or
mov
inc
mov
or
pop
and
mov
or
daa
cmp
in
dec
ror
mov
or
mov
xchg
pop
mov
pop
cwde
push
xchg
out
pop
adc
xor
xor
arpl
enter
test
daa
inc
jae
cs
out
call
pop
xor
ror
or
inc
cmp
xlat
mov
or
imul
mov
xor
push
fadd
dec
add
dec
mov
xchg
mov
int3
xchg
and
or
daa
das
push
add
sbb
mov
sub
loopne
loop
in
cs
mov
push
pop
mov
sub
enter
cmp
add
xchg
and
sbb
xor
jae
add
loopne
jne
enter
mov
cmp
add
sub
push
and
push
jo
aas
mov
mov
push
fmul
cmp
dec
xor
dec
ret
cmp
dec
inc
dec
dec
aaa
rol
ss
or
mov
retf
retf
lock
and
test
xchg
mov
cmp
xchg
in
mov
xchg
mov
test
loopne
and
inc
in
cmp
add
cmp
enter
and
xor
add
jge
jnp
mov
(bad)
ins
jno
xor
jmp
sub
inc
sub
inc
call
retf
popa
jecxz
sbb
add
dec
inc
mov
inc
mov
adc
lods
and
xchg
pusha
aaa
fimul
add
mov
and
pusha
dec
sub
jmp
push
pop
mov
in
dec
xor
sbb
cwde
stos
test
adc
xor
xor
ret
xchg
mov
cmp
scas
call
retf
xor
add
and
cmp
jle
mov
xor
mov
or
jmp
adc
adc
cmp
je
xor
cmp
and
sbb
inc
add
cmp
jg
mov
mov
cmp
or
inc
(bad)
pop
add
test
mov
adc
pop
movs
mov
push
in
pop
jmp
xchg
lea
pusha
dec
hlt
cmp
jle
pop
jle
jl
(bad)
imul
sbb
movs
jns
xchg
ins
jle
rcr
sub
push
or
leave
std
fs
jmp
or
fnstenv
inc
inc
jmp
inc
fs
and
sbb
cmps
outs
sub
mov
pop
repz
int3
sbb
rol
and
dec
mov
adc
xchg
fisttp
mov
jne
mov
sar
or
enter
mov
add
dec
push
scas
push
mov
add
xchg
push
aam
pop
in
lahf
jl
clc
xchg
xor
xchg
and
ror
and
inc
movs
pop
ret
aam
pop
in
mov
inc
mov
and
in
or
pop
dec
fwait
outs
out
dec
jnp
xor
rol
test
xchg
mov
out
add
lods
fcomip
push
scas
adc
pop
push
ror
inc
mov
les
add
add
cmp
test
mov
test
call
push
pop
jae
add
push
pusha
xor
fcom
fmul
cmp
(bad)
xchg
ds
les
sbb
into
xor
and
jnp
and
outs
and
adc
jp
inc
test
repz
movs
loope
adc
mov
jno
je
(bad)
mov
and
cdq
fiadd
(bad)
jmp
(bad)
push
out
aam
ret
sar
sub
xor
test
or
mov
jae
cmps
jo
xchg
in
sbb
jmp
push
mov
push
mov
dec
not
repz
xor
and
sbb
js
sahf
test
push
push
lods
test
push
mov
sbb
fst
fiadd
repnz
ret
mov
xchg
xor
mov
adc
sub
in
loope
aas
jmp
adc
push
mov
scas
dec
sub
or
pop
rcl
add
adc
push
call
test
cdq
rcr
stos
cmc
add
pop
in
push
dec
jmp
push
dec
jne
mov
ror
aam
fld
jmp
dec
sub
in
repz
push
out
and
enter
or
dec
rol
inc
or
jnp
add
sub
stc
cmc
inc
ret
xlat
es
xchg
test
mov
psubsw
or
xor
or
inc
inc
xor
ss
cdq
test
jbe
mov
xchg
xchg
pop
leave
xchg
cmp
or
push
jae
sub
sub
push
mov
add
cs
mov
jo
adc
jnp
add
and
enter
nop
and
and
daa
lea
mov
fld
stos
jl
bound
jge
xchg
je
sub
mov
call
cdq
fnstcw
fcomp
jo
adc
inc
loop
jno
xlat
push
cli
jge
mov
pushf
sbb
add
cmp
pop
les
dec
stos
mov
mov
inc
ret
(bad)
lds
mov
mov
sub
mov
jge
or
mov
mov
mov
pop
shl
fcmovb
jmp
clc
xor
adc
push
lock
fcomp
lea
cmp
test
test
add
jo
sbb
xchg
cmp
pop
cmp
jbe
add
jmp
add
mov
cmp
and
mov
add
inc
push
imul
add
add
add
sbb
adc
daa
icebp
xor
pop
ins
es
adc
add
or
int
sub
stos
(bad)
int
push
fsubr
lea
mov
add
inc
fisubr
add
cs
(bad)
sbb
sbb
add
pop
jnp
add
lahf
xor
push
stc
add
and
jecxz
iret
rcr
and
jge
pop
sub
mov
ds
push
aad
cld
nop
(bad)
cld
in
push
sbb
or
loopne
jne
and
mov
call
or
add
push
sub
add
xchg
in
push
rcr
jmp
lds
inc
sbb
add
adc
cmp
movs
sub
stos
add
or
adc
jge
inc
mov
dec
hlt
ins
mov
mov
nop
stos
sub
cmp
inc
loopne
push
adc
dec
int
jle
(bad)
mov
popa
dec
daa
lock
pop
sbb
pop
jae
add
add
ins
(bad)
leave
add
and
push
jb
push
mov
cmp
xchg
ins
or
mov
inc
enter
mul
jge
cmp
lea
retf
movs
rol
xor
sub
sbb
sbb
sub
jae
rol
out
nop
icebp
lahf
and
test
jp
adc
add
adc
or
pop
and
mov
das
push
adc
or
pop
cmp
cmp
and
xor
sub
call
jmp
das
add
xchg
cmp
push
add
pop
cmp
push
push
cmp
mov
add
iret
fist
pop
cmp
inc
adc
jno
test
mov
and
pusha
push
in
push
push
push
cwde
je
adc
jb
dec
push
inc
inc
xor
push
outs
inc
mov
mov
daa
inc
add
push
jp
push
fs
xlat
rol
cdq
sub
sub
ret
sub
ror
xlat
dec
xlat
push
xor
imul
jns
icebp
ds
or
daa
cmp
cld
or
pushf
cmp
adc
adc
sar
sbb
aaa
xor
fs
jge
adc
pop
add
pop
xor
inc
mov
test
aam
push
inc
or
ret
mov
pusha
bnd
fnstcw
push
push
aas
shl
and
and
mov
push
loopne
add
push
call
pop
cmp
adc
mov
jl
jns
test
sahf
das
sbb
inc
je
mov
sub
rcl
test
push
test
or
xchg
cmp
pop
pop
push
movs
adc
or
dec
xlat
and
mov
fistp
aad
sub
arpl
ret
test
adc
and
push
cmp
fs
das
jp
inc
push
fiadd
xchg
adc
sbb
sbb
mov
and
(bad)
or
sub
dec
inc
push
sbb
ror
and
pop
cmp
rcr
lock
mov
push
dec
sub
xor
or
push
dec
adc
or
push
cmp
es
(bad)
and
enter
mov
add
push
test
hlt
(bad)
dec
mov
push
dec
and
in
inc
lods
mov
cmp
mov
pop
xor
daa
add
and
cld
mov
sbb
adc
mov
xor
in
mov
push
ins
add
scas
mov
adc
das
jmp
adc
ss
mov
mov
les
bound
pop
add
iret
jnp
(bad)
je
mov
sbb
inc
mov
xor
sbb
dec
pop
dec
or
fs
shr
adc
inc
xchg
retf
jae
mov
cmp
cmp
mov
push
xchg
sub
jb
pop
cs
dec
or
sub
pushf
imul
outs
push
mov
in
in
jbe
es
mov
leave
lods
push
mov
fdiv
pop
mov
in
cmp
sar
mov
test
push
cdq
or
xchg
mov
add
fwait
(bad)
enter
mov
fwait
and
into
je
xchg
xor
and
sub
jmp
pusha
jle
fnsave
inc
iret
ja
and
inc
repnz
pusha
sub
pop
stos
cs
push
sbb
or
cmp
and
enter
(bad)
xor
addr16
inc
and
rol
mov
rcr
mov
xor
sub
or
ss
enter
inc
lock
sbb
and
fidiv
cmp
jb
push
je
add
mov
jmp
and
dec
lods
mov
arpl
add
cli
test
ss
push
pop
(bad)
int
jl
mov
add
rol
push
adc
lock
sbb
xor
not
sbb
push
sbb
mov
mov
sbb
xchg
and
add
or
out
ret
mov
loop
xchg
test
and
lahf
pop
mov
xchg
sbb
push
(bad)
cmp
push
add
gs
and
rcl
scas
inc
xlat
lods
iret
adc
in
push
dec
push
fstp
nop
das
in
jmp
push
inc
or
lfs
movs
xchg
push
jmp
xchg
mov
jmp
shl
pop
add
je
add
jmp
ss
test
or
ret
lock
cmp
test
jno
dec
jp
jno
adc
aas
fs
cmp
xchg
cmp
push
adc
pop
movs
pop
(bad)
pop
jnp
adc
mov
mov
push
inc
push
pushf
cmps
add
cs
aad
sbb
(bad)
in
mov
inc
seta
adc
movs
out
sub
imul
test
loopne
xor
push
test
aas
fwait
movs
fst
(bad)
dec
repnz
outs
jecxz
pushf
call
mov
test
daa
sar
lea
in
sahf
aam
sub
push
cmps
sub
test
inc
xchg
retf
or
or
pop
aam
aam
(bad)
cli
push
push
mov
xor
add
xor
fiadd
add
push
(bad)
push
sbb
movs
adc
into
cmp
and
jge
stos
fst
mov
sub
lock
push
popf
ficom
test
jmp
test
stos
nop
dec
and
ja
or
xchg
or
push
xchg
push
shr
jbe
jl
or
retf
jo
ret
cmp
sub
xchg
loopne
les
movs
mov
out
push
ins
ins
enter
aas
adc
add
pop
call
jge
shl
and
pop
pop
jle
push
cmp
dec
add
push
leave
sbb
dec
ins
fisttp
inc
adc
jmp
icebp
mov
jge
mov
xchg
add
xor
clc
mov
push
add
sub
pop
stc
jmp
fadd
outs
and
add
repz
sar
add
sub
sub
inc
lea
add
push
add
add
pop
mov
pusha
and
ror
cli
xor
mov
pop
jo
adc
pop
xor
lods
pop
imul
mov
inc
ins
mov
add
cmp
pop
sub
push
cmc
es
adc
jg
out
sbb
test
xchg
lock
dec
jl
adc
loope
adc
jl
mov
sbb
sar
loopne
jnp
cmp
sub
xchg
xor
or
push
dec
pop
clc
popa
push
test
nop
aaa
lock
add
or
add
or
fwait
jae
add
ss
xor
jle
push
nop
jo
rol
pop
je
xor
aaa
mov
push
ror
pushf
(bad)
fadd
dec
cld
pop
or
shl
mov
pop
retf
clc
ret
mov
or
je
bound
sub
mov
je
jo
es
cld
mov
add
push
jne
jecxz
out
sub
xor
call
push
or
nop
or
dec
cli
mov
jmp
in
adc
push
mov
ins
mov
sbb
inc
sub
jmp
cld
push
push
(bad)
mov
and
add
test
push
nop
addr16
repnz
or
xor
mov
xchg
jno
das
nop
(bad)
(bad)
out
pop
jo
add
sub
dec
sbb
out
mov
call
ss
inc
or
add
pop
inc
push
add
push
mov
dec
inc
cmp
jns
(bad)
and
push
(bad)
lock
inc
hlt
inc
cs
push
inc
xlat
pop
popa
jmp
add
add
adc
jl
out
jge
xchg
ret
inc
adc
pop
clc
mov
inc
lock
es
or
int
sar
xchg
sub
push
cmp
or
sbb
gs
cmp
out
mov
xor
push
add
out
lods
fidivr
into
nop
jmp
inc
sub
push
loop
add
frstor
out
add
pop
ss
loopne
shl
push
aas
sub
push
out
and
cmp
popa
dec
push
fadd
jbe
addr16
dec
xchg
(bad)
or
cld
cmps
push
push
xchg
cs
add
mov
rol
shl
mov
adc
inc
mov
ja
jl
mov
or
xchg
or
shr
(bad)
or
fs
and
retf
je
push
inc
xchg
fcmovne
aas
(bad)
cwde
push
mov
add
movups
fmul
jmp
out
or
packsswb
in
or
sbb
loop
ins
push
loop
jecxz
jmp
sub
ds
mov
nop
xchg
test
pop
mov
(bad)
sahf
cmp
js
in
jecxz
mov
jb
cld
push
fcom
mov
cs
mov
push
call
lock
push
repz
xor
push
or
mov
ss
xor
push
ds
sub
addr16
add
inc
sub
pop
mov
jno
add
mov
jno
cld
adc
push
fcomp
inc
fmul
je
push
push
dec
add
or
mov
fisttp
xor
or
pop
dec
adc
jb
mov
xchg
adc
mov
dec
ror
popa
sub
retf
mov
or
adc
sar
dec
pop
fldenv
bound
add
pop
pop
sbb
lahf
lods
push
jo
or
pop
mov
xchg
std
ror
add
aaa
test
jmp
cmp
in
dec
clc
(bad)
mov
xchg
jle
cli
loopne
lahf
subps
or
jno
add
push
or
jnp
dec
xor
mov
mov
sbb
adc
mov
fwait
icebp
imul
cwde
lock
icebp
ret
xor
push
hlt
dec
cmc
ret
(bad)
int
xchg
imul
adc
fst
mov
bound
(bad)
lock
cdq
add
enter
ret
or
aam
test
cmp
push
movs
add
fsub
cmp
or
add
enter
cmp
bound
pop
mov
pop
jno
inc
dec
arpl
inc
cwde
(bad)
mov
add
pushf
sub
loope
inc
dec
mov
inc
sub
xor
pusha
mov
adc
(bad)
push
mov
ror
xor
shr
xor
xor
(bad)
jnp
xor
sar
repz
xor
add
add
add
mov
mov
fs
or
cli
push
jge
jae
or
and
fiadd
sti
add
in
mov
outs
sub
jge
jl
lods
loop
inc
sub
repnz
cli
fisubr
iret
xlat
test
or
add
xor
and
and
xchg
push
or
xor
push
cmps
in
push
fs
test
push
sub
fmul
mov
push
or
xlat
ret
jo
lods
sbb
rol
test
hlt
add
cmps
inc
push
xor
fsubr
or
push
cmp
aam
call
push
xor
sub
int
out
jmp
rol
out
(bad)
add
cli
push
xor
pop
inc
call
xor
sbb
in
shl
in
push
sub
bound
inc
push
push
inc
push
bound
pop
add
pusha
mov
pop
aaa
jno
or
fadd
les
call
loopne
cmp
shl
call
xor
loopne
xor
pop
cmp
aam
in
cmp
pop
xor
adc
sti
mov
repnz
mov
or
push
xor
and
dec
sti
or
or
lods
mov
hlt
xor
add
dec
xchg
pusha
pop
inc
adc
adc
or
inc
jo
pop
sub
ficom
adc
mov
dec
push
sub
xor
(bad)
adc
(bad)
call
jne
mov
fild
cdq
int3
scas
leave
fimul
inc
fadd
pop
(bad)
(bad)
jbe
call
add
retf
push
clc
jp
jle
pusha
xor
xlat
add
gs
fdivr
dec
xor
rol
call
in
rcl
mov
popa
jle
inc
mov
push
sub
adc
clc
jo
cli
push
and
popf
stos
adc
or
aaa
cmp
inc
call
(bad)
pop
push
cmp
aam
shr
mov
add
cli
stos
mov
and
xor
rol
rcl
ror
dec
shl
add
loopne
cld
add
dec
add
xor
xchg
inc
push
and
dec
xor
and
fmul
add
dec
xor
mov
jb
push
xor
adc
dec
pop
dec
cmp
or
movs
mov
and
stos
inc
stos
fs
mov
xchg
out
sahf
push
add
(bad)
ror
inc
pop
test
add
pop
xor
rcr
inc
xchg
retf
adc
lock
ret
mov
in
ror
adc
and
in
xor
hlt
fs
sbb
icebp
stc
stc
xor
icebp
sbb
mov
adc
jns
mov
es
imul
dec
jmp
adc
adc
sbb
fisubr
loopne
or
and
add
and
add
dec
mov
jbe
cli
push
dec
aam
out
and
(bad)
aas
pop
add
sub
mov
sbb
jg
js
call
inc
aaa
mov
pop
add
sub
sub
lea
pop
xor
ins
adc
or
clc
sub
test
xchg
lock
mov
call
jo
lock
ror
shr
(bad)
jl
jae
mov
push
and
sub
aaa
pop
xor
aas
lea
jmp
rcl
push
out
mov
pop
call
(bad)
mov
lahf
mov
mov
dec
jne
pop
add
loope
lock
fcom
inc
leave
jl
sub
mov
out
sbb
adc
or
imul
mov
outs
mov
inc
add
jae
push
pop
fadd
adc
sub
stos
or
mov
inc
lods
cli
cmps
jmp
std
fld
push
pop
loopne
ror
mov
js
stos
call
mov
addr16
inc
adc
int3
mov
and
cmp
leave
pop
add
jb
cmp
ja
inc
sub
jns
xchg
cmps
sbb
inc
aaa
popa
data16
cmp
push
xor
dec
je
add
push
or
sub
cmp
cdq
cmps
std
ins
or
push
inc
adc
push
ins
mov
lock
mov
add
xchg
mov
mov
mov
movs
jno
test
das
je
or
movs
loopne
or
popa
cmp
jne
sbb
in
dec
test
mov
push
dec
inc
lea
inc
mov
pop
dec
xor
rol
test
add
imul
adc
in
or
loop
adc
add
pop
add
inc
cmp
fs
dec
inc
push
inc
and
inc
clc
adc
mov
xor
bound
pop
mov
add
sbb
sbb
cwde
xchg
clc
lahf
outs
imul
ss
sbb
mov
lea
and
push
mov
call
shl
add
outs
fnstenv
lods
or
jbe
sahf
lods
shl
outs
pop
cmp
jne
not
mov
sbb
dec
cmp
clc
je
adc
sub
jno
jge
inc
in
xchg
in
ja
pushf
push
inc
push
inc
ss
pop
cmp
push
add
inc
int
jne
pop
inc
stos
push
pusha
adc
xchg
fild
sub
popa
loop
jne
dec
push
pushf
dec
mov
clc
out
adc
xchg
inc
movzx
xchg
fstp
sahf
jb
aaa
jb
cmps
mov
rcr
cmp
inc
sti
add
fsubr
adc
aas
les
sti
int
push
inc
or
adc
test
jne
xor
and
sub
test
mov
or
or
unpcklps
pop
jae
mov
jmp
dec
rcr
inc
dec
mov
test
(bad)
dec
push
sub
push
push
mov
mov
sbb
push
inc
call
mov
push
push
xadd
mov
fwait
imul
stc
inc
jg
or
jge
and
aaa
aaa
aaa
and
es
sub
sub
and
ins
(bad)
jmp
cmp
jl
pop
jle
pusha
jo
sub
inc
test
rol
iret
and
jbe
mov
test
fwait
jle
daa
mov
adc
je
test
jne
je
imul
outs
and
push
sbb
xor
dec
mov
into
dec
daa
dec
fdivr
rol
loop
xchg
push
daa
jb
or
push
popa
sahf
inc
(bad)
push
sbb
call
fdiv
outs
xchg
ret
push
mov
scas
call
inc
es
xor
inc
stos
xchg
mov
lahf
lahf
imul
push
mov
(bad)
mov
cmp
xchg
push
jg
jle
mov
or
xor
push
xchg
mov
ret
xchg
push
add
adc
cmc
ins
or
sbb
mov
bound
and
mov
test
jmp
xlat
loope
adc
sbb
push
fiadd
test
inc
mov
inc
jnp
xor
cli
sub
push
jno
cld
or
(bad)
push
push
push
pop
add
pop
cld
xor
inc
cmp
push
mov
out
out
retf
adc
xor
mov
or
xchg
sbb
imul
xor
add
lahf
inc
mov
stos
dec
daa
mov
add
xchg
iret
outs
mov
arpl
dec
fadd
dec
shr
inc
and
jae
mov
fcomp
jne
cmp
je
xchg
ret
test
call
inc
popf
movs
lahf
adc
sti
mov
pushf
mov
fs
test
mov
dec
in
and
push
and
or
add
and
cmc
in
ret
cwde
mov
dec
lods
xchg
push
and
fs
sbb
mov
in
scas
scas
jl
add
cmp
adc
stc
push
sbb
add
mov
inc
jmp
add
sahf
and
popf
push
cmp
lock
popa
add
pop
pop
add
hlt
inc
xchg
xchg
stos
cmp
add
(bad)
rol
data16
jmp
add
inc
mov
mov
mov
lock
movs
int
je
clc
sub
pusha
jb
cs
push
(bad)
fisttp
fcomp
fwait
es
add
inc
fisttp
mov
(bad)
shl
sub
push
shr
add
out
pop
push
mov
push
adc
sbb
or
cmp
pop
cmp
fmul
jmp
xchg
pushf
lods
sbb
jne
lahf
jne
add
xchg
xchg
xchg
xchg
push
fwait
pop
(bad)
fs
xchg
jbe
das
or
jne
iret
leave
xchg
or
push
leave
mov
adc
or
and
cmp
or
sbb
and
or
movs
xor
test
addr16
mov
push
dec
icebp
mov
sbb
cmp
jge
xchg
mov
sahf
rcr
les
add
jnp
fbstp
(bad)
mov
ror
clc
mov
ins
sahf
mov
fmul
loopne
jne
fnstsw
mov
in
sub
fs
sbb
and
and
pusha
test
adc
push
pop
ins
in
adc
je
cmp
das
nop
or
inc
add
bound
in
add
into
cmp
adc
xchg
inc
cmp
add
xor
mov
shl
sbb
and
cmp
je
mov
cmp
jmp
add
inc
int
sub
in
cmp
and
inc
mov
das
lods
ss
les
call
out
popf
dec
imul
cld
inc
shl
fsubr
cmp
imul
push
push
rcl
fwait
adc
in
mov
dec
sbb
jmp
ins
jne
jl
sub
pushf
arpl
fwait
ror
jae
jo
sub
ss
inc
push
jo
test
inc
dec
shr
pop
cmp
jne
les
aam
adc
jmp
cmp
cmps
or
mov
inc
cmp
call
and
dec
mov
push
jmp
test
movs
push
adc
in
out
jb
sub
retf
loope
cmp
cmp
xor
and
mov
fadd
jae
push
jns
nop
mov
lods
test
add
out
loope
enter
aas
add
lds
nop
jmp
inc
push
jnp
sub
(bad)
sbb
cmp
je
pop
or
lock
add
rcr
cs
adc
inc
mov
add
(bad)
jne
cwde
mov
push
mov
xchg
mov
sub
and
call
xor
cmp
or
sub
movs
jns
or
test
pusha
ret
push
mov
push
cmp
add
xchg
ficom
xchg
add
das
mov
rcl
imul
xchg
cmps
pop
xchg
pop
call
imul
and
out
xchg
inc
and
mov
fadd
mov
xor
cs
retf
in
xor
cmp
or
inc
dec
sub
pop
mov
inc
mov
jl
ror
push
sbb
data16
imul
(bad)
push
cmp
ror
and
inc
mov
push
std
push
add
es
movs
in
mov
fsub
aam
loop
mov
push
inc
retf
movs
cmp
je
cdq
inc
gs
int3
sbb
add
cmp
jmp
movs
mov
leave
inc
clc
pop
dec
ret
jbe
nop
inc
push
je
jno
loopne
add
dec
xor
fs
sub
pop
stos
xlat
sahf
or
or
push
repnz
add
fiadd
push
cmp
jmp
dec
xor
clc
(bad)
and
ss
xchg
not
jne
sbb
dec
rol
movs
out
dec
vpsubusb
mov
lahf
push
push
movzx
loopne
rol
add
jmp
add
cmp
dec
inc
jnp
sbb
(bad)
mov
je
call
sti
sub
repz
jmp
hlt
xchg
mov
xor
jae
pop
inc
shl
push
dec
jmp
cmp
dec
int3
mov
jno
and
fiadd
mov
xor
dec
ds
lock
dec
sbb
push
jno
add
sbb
cmp
push
jbe
data16
call
mov
les
pop
lods
sbb
mov
mov
or
icebp
adc
dec
sbb
xlat
dec
cmp
or
dec
mov
stos
sbb
sub
cld
push
sahf
not
data16
mul
adc
push
test
in
repnz
aam
or
pop
adc
xor
mov
bound
adc
jl
mov
arpl
mov
sbb
xchg
adc
cmp
or
cmps
movs
add
or
or
inc
inc
pop
and
js
dec
mov
or
loopne
push
test
test
movs
(bad)
dec
repnz
jne
imul
jge
cld
or
and
and
or
ret
push
jns
popa
adc
pop
or
scas
aaa
js
mov
cld
aam
inc
not
mov
jbe
push
and
imul
push
pop
sbb
pop
pusha
sbb
lods
inc
jne
pop
xchg
push
(bad)
repz
mov
mov
xor
or
add
and
add
imul
push
adc
dec
sbb
push
mov
cmp
and
add
pop
repnz
dec
hlt
push
inc
adc
pusha
cmc
add
push
and
adc
mov
fdiv
ja
mov
mov
pop
test
mov
cmp
fs
cld
xor
int
into
inc
add
test
jno
fistp
pop
pop
dec
sub
cmps
pop
pop
sub
ror
mov
mov
mov
aas
pop
cmp
mov
icebp
sahf
pop
inc
das
add
mov
sub
sbb
lds
mov
or
adc
jae
and
pop
jae
pop
fistp
pushf
push
out
mov
dec
popa
faddp
sti
add
and
sbb
daa
int
jle
pop
mov
push
or
pop
dec
fimul
dec
add
ins
jo
shl
daa
ins
imul
push
sbb
cwde
mov
add
pusha
retf
inc
push
cmc
inc
add
add
mov
loope
xor
pusha
jmp
js
and
sub
xor
pop
inc
jle
inc
cs
mov
adc
mov
xchg
or
adc
and
mov
shl
cwde
clc
inc
dec
test
stos
and
cmp
mov
jbe
or
push
aam
(bad)
rol
sbb
and
clc
clc
mov
and
add
mov
and
push
sub
or
sub
ret
js
cmp
or
mov
leave
je
xor
sub
xchg
sti
cs
rcr
adc
in
enter
add
jnp
dec
mov
fwait
or
xchg
ror
js
mov
inc
or
add
adc
xor
mov
inc
inc
push
pop
arpl
imul
push
push
adc
sbb
es
pop
call
sbb
rep
add
mov
mov
mov
mov
pop
js
add
inc
and
or
fidiv
scas
addr16
inc
jnp
and
adc
jmp
xor
push
inc
adc
and
dec
adc
jge
push
adc
push
xor
mov
dec
and
and
dec
sub
push
js
mov
pop
adc
push
mov
inc
movs
inc
pop
movs
je
jnp
sub
mov
cmp
xchg
loopne
or
imul
out
sub
pop
inc
rol
adc
inc
stos
ror
(bad)
test
sbb
jne
mov
pusha
inc
mov
rol
inc
popa
inc
pop
and
ss
push
inc
cmp
adc
jmp
sbb
push
sub
jne
xchg
xor
or
das
push
lahf
bound
lahf
lods
fmul
and
add
sub
lahf
mov
mov
inc
or
ss
cmp
dec
rcl
pop
add
pop
repnz
cwde
mov
add
pop
stos
fidiv
xor
scas
hlt
xor
sbb
add
dec
in
jne
and
mov
inc
imul
add
pop
bound
sbb
leave
fadd
adc
sub
lods
ret
data16
inc
and
fadd
cmp
jbe
lds
jbe
mov
xor
xor
jnp
enter
push
push
jp
stc
pop
ret
dec
in
(bad)
ins
xor
and
adc
inc
push
div
mov
jnp
test
repz
add
sbb
js
jl
nop
movs
or
aam
mov
push
push
lea
les
inc
gs
and
dec
or
sbb
add
sbb
cmp
out
repnz
sub
pop
adc
push
push
dec
xchg
sub
cmp
push
cmp
add
hlt
clc
pusha
cmp
call
ins
mov
sub
lahf
or
in
add
out
mov
mov
mov
add
adc
aas
imul
mov
cld
or
and
jae
push
inc
(bad)
fs
add
jmp
xchg
test
sahf
jl
gs
jle
call
shl
outs
dec
push
scas
loopne
dec
loopne
inc
mov
inc
mov
loopne
push
push
jg
cmp
hlt
enter
cdq
cdq
xor
es
fidivr
push
(bad)
and
mov
jmp
mov
push
xchg
fs
push
out
int3
adc
mov
adc
cmp
jbe
iret
or
ret
adc
pusha
sbb
loopne
mov
loop
repz
jbe
add
add
mov
and
lods
mov
and
jle
adc
or
inc
jae
rcr
adc
lock
or
mov
sbb
and
sub
aam
pusha
retf
cmp
jbe
sub
add
fadd
das
sahf
push
mov
pop
push
pop
fisubr
add
push
pop
push
adc
inc
neg
sub
adc
clc
pop
test
or
mov
js
(bad)
dec
fld
ret
add
mov
inc
mov
and
or
sub
ret
push
(bad)
aad
inc
xor
push
scas
rcr
mov
clc
dec
cmp
or
pop
out
inc
cmp
shr
je
mov
clc
add
push
enter
sub
and
push
and
add
repnz
push
cmp
cmp
imul
cmp
mov
adc
je
or
das
xchg
mov
xor
jmp
adc
les
pop
ret
sub
dec
pop
mov
nop
dec
mov
push
pop
leave
ins
sbb
xchg
mov
in
inc
push
jmp
int3
jnp
sbb
mov
jne
ds
mov
(bad)
(bad)
into
push
mov
cmps
push
outs
ss
sti
ret
test
cmc
add
mov
adc
ss
in
xchg
mov
and
or
aas
adc
inc
add
inc
int
pop
jmp
xor
sbb
inc
fsub
pop
cmp
dec
sti
shl
outs
cmp
or
pop
jge
clc
inc
inc
lea
push
sbb
push
pop
jb
mov
sbb
dec
jecxz
inc
sub
cmp
jl
pop
scas
sub
lods
frstor
scas
call
test
fstp
xor
loopne
packsswb
stc
ja
and
jne
adc
mov
iret
jb
sbb
clc
add
mov
jle
mov
ror
mov
inc
push
mov
add
loope
add
pop
push
jmp
psrlq
sbb
push
stos
xchg
hlt
pop
ror
lea
fadd
test
inc
mov
xchg
outs
daa
cli
fcom
xchg
mov
lea
sbb
jmp
xor
xchg
aas
and
rcl
pop
sub
dec
cld
jge
cmp
shl
adc
or
sar
aaa
jmp
fwait
add
mov
sub
movs
push
adc
push
push
inc
mov
inc
xor
fsubr
ror
fisttp
push
dec
pop
add
arpl
mov
sbb
dec
jg
mov
push
ret
or
bnd
add
lock
bndstx
int3
xchg
mov
cmp
jne
jbe
sub
adc
push
rcr
pop
cmp
jmp
iret
mov
ret
pop
cmp
xor
dec
stos
mov
dec
cmp
cwde
ss
(bad)
loop
int3
jmp
fld
push
pop
mov
add
rol
sbb
mov
mov
adc
stos
cmp
nop
mov
push
xor
or
jle
cld
(bad)
or
int
dec
mov
xor
loope
inc
das
pop
xchg
jb
js
test
mov
inc
add
bound
xchg
add
ret
adc
add
mov
add
and
push
cmps
and
fcmovb
mov
in
inc
scas
rcl
stos
inc
movs
dec
shr
icebp
and
jmp
cld
add
popa
rcl
(bad)
mov
pushf
arpl
sub
xchg
das
lock
ret
cmp
cmp
cmp
cdq
(bad)
fistp
add
push
lock
and
and
pop
mov
mov
xchg
pusha
mov
cmp
aad
cld
push
push
iret
add
sbb
mov
call
or
enter
inc
cwde
mov
dec
loope
add
(bad)
scas
mov
push
sbb
fld
mov
mov
jno
add
sub
add
rol
js
or
add
clc
dec
push
cmp
or
daa
jo
mov
inc
xor
clc
mov
lahf
push
cmp
call
sub
pop
sub
inc
rcr
(bad)
mov
xchg
add
not
pop
pusha
mov
mov
cmp
je
add
xor
push
adc
out
pop
mov
jmp
popaw
push
mov
ret
mul
(bad)
push
add
dec
lea
data16
mov
fwait
mov
es
call
mov
inc
shl
mov
lahf
loopne
pushf
add
pop
sbb
mov
sbb
loopne
sbb
inc
scas
xchg
adc
test
loop
pushf
lea
add
dec
das
inc
adc
dec
sbb
and
pop
sub
add
and
mov
add
(bad)
rol
inc
fnsave
mov
fld
push
and
add
push
call
add
mov
mov
inc
pop
dec
addr16
cmp
lock
cli
add
or
les
and
pop
jne
and
adc
push
fsubp
push
imul
sub
call
xor
mov
pop
fst
test
dec
mov
cmp
jo
ret
or
inc
stos
push
shr
and
ss
xchg
mov
mov
adc
xor
push
adc
(bad)
xlat
inc
push
shl
mov
xor
and
sbb
xchg
sbb
ret
mov
leave
ret
pop
mov
jno
sub
cmc
mov
pop
lods
fwait
shl
push
mov
or
call
dec
add
add
pop
in
and
or
sti
out
addr16
aas
mov
or
and
adc
mov
pusha
dec
(bad)
jbe
stos
stc
adc
add
cmp
jmp
clc
jmp
sbb
stos
sub
fisubr
es
data16
cmp
jbe
jecxz
ret
das
sub
retf
adc
mov
cmp
fstp
aaa
call
adc
sub
jnp
addr16
cmps
mov
mov
mov
int3
xor
in
adc
mov
jp
inc
cmp
lea
mov
jge
sbb
mov
sub
sub
add
shr
loopne
sbb
push
sahf
sbb
mov
jne
lods
adc
push
xchg
xor
inc
push
clc
cmp
jo
das
mov
pusha
mov
loope
js
mov
lock
inc
cmp
push
pop
add
popa
std
sti
ds
jmp
push
add
inc
mov
mov
je
xor
inc
cwde
inc
test
rol
ja
push
cmp
call
outs
(bad)
arpl
lea
sub
int
cmc
inc
out
popa
imul
add
out
cmp
call
inc
or
aam
shr
cwde
adc
mov
and
adc
sub
inc
or
add
pop
dec
xchg
inc
or
lock
and
pop
cmp
les
mov
push
mov
add
and
ins
inc
xchg
pop
clc
dec
cmp
push
or
cdq
cmp
loop
add
jp
in
and
jl
jmp
mov
sbb
xor
sub
mov
adc
popf
je
jns
and
dec
je
dec
mov
push
sbb
mov
ret
mov
jp
stos
daa
sti
lods
mov
lea
mov
icebp
sti
pop
sbb
loop
dec
adc
jmp
cmp
xchg
push
jo
and
repz
mov
jne
cmp
and
jp
test
fbstp
mov
cdq
js
mov
xlat
sub
adc
sbb
xchg
out
sbb
inc
retf
xor
and
jbe
jno
adc
adc
out
dec
sub
xchg
mov
inc
div
push
push
fsubr
rcr
ins
cmp
sub
lods
ret
fs
call
inc
mov
cmc
into
shl
fs
push
adc
lds
popf
add
or
cmp
int3
push
sub
jge
out
js
retf
int3
jb
add
jns
push
lods
xchg
call
dec
popa
call
mov
out
adc
test
mov
pop
sbb
sbb
add
sbb
or
inc
fcomi
and
xor
clc
sbb
cmp
cmp
fadd
add
aam
mov
xchg
(bad)
iret
mov
push
inc
lods
lea
shl
lea
stos
setge
ss
push
lahf
mov
loopne
or
mov
pop
add
gs
sub
fcmovne
(bad)
in
cmp
je
shl
add
or
adc
lods
shr
(bad)
in
in
push
xor
jle
ret
bound
div
nop
sbb
call
outs
test
or
xchg
pop
jmp
adc
in
(bad)
pop
sbb
sbb
pop
mov
lods
jae
dec
ret
test
sub
std
loop
jb
xor
add
outs
adc
sbb
add
cmp
je
dec
xchg
push
xchg
pop
add
daa
or
inc
add
xor
sbb
std
pop
bound
push
add
cs
or
pop
adc
or
lock
test
push
enter
or
imul
data16
and
(bad)
inc
jns
add
mov
lock
push
cmp
cmp
cmp
dec
aas
mov
xor
test
rol
add
push
retf
or
gs
jmp
(bad)
jnp
sti
sbb
mov
push
or
mov
ins
in
cmp
sub
sbb
jns
xchg
cmp
clc
jne
mov
push
test
out
add
nop
sub
push
movs
cmp
stos
mov
(bad)
sbb
mov
dec
and
xchg
nop
xchg
sbb
xchg
mov
hlt
sbb
scas
xchg
hlt
jns
or
inc
loopne
pusha
ret
rcr
dec
xor
outs
and
rcl
cmp
jae
in
scas
and
retf
fxtract
jne
and
fist
dec
ror
cld
loopne
fnstenv
mov
push
mov
fcomp
add
or
call
retf
adc
push
inc
call
bound
mov
shr
mov
daa
mov
daa
sbb
(bad)
iret
retf
movs
popf
rol
(bad)
or
xor
ds
xchg
cmp
xchg
pop
cmp
cmp
pop
dec
mov
mov
hlt
mov
iret
rcr
loop
sub
or
jge
lea
or
pop
retf
mov
inc
and
dec
fimul
aaa
sbb
adc
inc
inc
aaa
out
shl
test
or
cmp
mov
nop
adc
add
jmp
data16
push
adc
es
push
adc
or
adc
outs
inc
in
call
mov
div
cmp
cmp
popf
pop
(bad)
jne
push
jns
sahf
add
sub
jmp
and
ja
loopne
pushf
sub
pop
imul
sbb
add
popa
lds
and
push
push
pop
in
retf
ror
in
inc
das
mov
imul
lock
inc
sub
bts
xor
sub
movs
inc
ins
bound
pop
and
loopne
sub
mov
out
movs
and
sbb
add
call
in
or
xchg
mov
sbb
inc
adc
ds
jecxz
mov
push
in
(bad)
xor
pop
pop
sti
jne
mov
mov
fdivr
pushf
or
(bad)
int
lock
push
push
inc
(bad)
out
sbb
leave
frstor
sbb
pop
sub
dec
fnstenv
(bad)
test
cdq
addr16
pop
pop
inc
cli
cmps
rol
or
clc
or
neg
add
nop
scas
pop
xchg
cli
jecxz
loop
xchg
pop
call
int3
leave
adc
xlat
pop
pop
mov
addr16
add
ds
inc
inc
adc
dec
test
lods
add
adc
sub
test
xor
xor
rcr
jo
(bad)
adc
inc
test
jmp
dec
inc
mov
jge
mov
test
mov
imul
fwait
call
ret
test
cs
mov
add
cmp
test
adc
fwait
loop
cwde
add
jl
jmp
or
xchg
mov
mov
(bad)
pushf
icebp
mov
mov
jmp
ret
imul
mov
adc
fsub
leave
adc
sbb
sbb
or
es
push
lds
add
fs
mov
push
in
stos
add
fimul
push
ret
sbb
jne
jg
in
xchg
mov
and
push
mov
jb
(bad)
dec
push
jbe
addr16
or
mov
sahf
adc
cmp
mov
rol
fdivr
xor
cwde
or
cs
loopne
xlat
sub
cmp
cli
cmps
mov
add
push
jae
stc
sbb
ret
mov
loope
fcmovnb
jp
outs
int3
outs
sahf
inc
lods
or
dec
out
(bad)
aaa
div
mov
inc
jmp
enter
lea
lods
pshufw
mov
popf
aaa
xchg
mov
adc
cmc
mov
test
mov
aad
popf
dec
adc
add
sub
push
pop
loop
adc
int3
pop
int
fiadd
ins
shl
add
(bad)
into
lods
es
push
push
adc
inc
sbb
aam
clc
pop
gs
cmp
jmp
xchg
dec
cmc
jp
push
dec
jns
iret
call
pop
add
frstor
push
adc
loopne
push
(bad)
pop
jno
mov
call
sub
add
movs
xor
call
jbe
add
cs
inc
and
jmp
cdq
retf
enter
cmp
es
scas
mov
out
in
jl
cmp
test
mov
sbb
dec
enter
sbb
inc
xchg
aad
sbb
sub
bound
xchg
sub
out
mov
pop
pop
in
mov
fdivr
clc
add
clc
jno
mov
add
or
sub
mov
icebp
or
sub
jne
(bad)
sbb
or
cmp
sub
sbb
or
sti
mov
arpl
dec
inc
adc
pop
lea
call
pop
into
iret
popf
rol
test
leave
popf
fmul
out
cmps
sbb
popf
loopne
or
aas
(bad)
adc
pcmpeqw
add
dec
fsubr
push
movups
jnp
mov
and
loopne
js
verr
inc
stos
sub
outs
fidiv
movs
popa
or
test
mov
not
mov
mov
shl
fwait
sub
sbb
push
ins
xchg
mov
jb
mov
test
adc
xor
jmp
mov
pop
pop
popf
xor
in
push
sbb
mov
dec
and
ficomp
imul
xor
lea
mov
dec
pop
xchg
mov
shl
not
add
sbb
das
sub
adc
xlat
xchg
mov
cmp
in
cmp
movs
or
fdiv
dec
xor
mov
retf
retf
in
dec
or
sbb
inc
loope
add
je
dec
adc
xchg
lods
mov
movs
adc
repz
jo
jg
inc
and
adc
icebp
mov
sbb
mov
xchg
xchg
xlat
mov
fdivr
sbb
ss
ret
sub
add
sbb
pop
das
mov
test
mov
shl
(bad)
jmp
sar
sbb
mov
mov
int
or
enter
jmp
bound
xor
repz
and
dec
(bad)
push
pop
(bad)
jl
mov
add
lds
fwait
gs
mov
inc
mov
xor
jle
pop
(bad)
leave
cmp
push
daa
repz
push
fcomi
mov
mov
iret
into
es
enter
push
mov
xchg
pop
mov
jo
lea
push
cmp
lea
xchg
(bad)
aas
or
rcl
ror
(bad)
add
xchg
call
cld
pop
test
or
inc
popa
lds
add
sub
(bad)
fild
push
push
adc
sbb
push
add
xor
cmp
dec
add
outs
(bad)
ins
dec
test
sub
inc
push
dec
jbe
int3
adc
ret
add
in
cmc
je
test
inc
mov
sbb
aaa
stos
test
mov
cmps
jge
jmp
cwde
repz
mov
imul
cmps
scas
xor
or
jmp
and
xchg
add
adc
in
mov
clc
inc
push
jmp
pop
mov
sub
mov
jge
inc
cld
or
and
inc
retf
jmp
movs
push
fs
mov
ficom
cmp
push
cmc
stc
mov
gs
push
jo
push
out
add
enter
pusha
dec
or
bnd
adc
xchg
push
or
js
repz
push
jae
lea
push
sub
sbb
fsubr
xchg
sub
shl
sub
xchg
or
xlat
or
popa
jo
ins
ja
or
call
mov
icebp
add
fldln2
push
pop
ins
ss
ror
push
cmp
jae
ja
test
jp
sub
xor
cmps
ins
lea
xchg
ret
cmp
test
sbb
sub
imul
call
clc
and
and
mov
outs
mov
retf
xchg
pop
imul
add
push
adc
push
push
adc
push
push
jne
sbb
movs
add
push
and
sbb
mov
fs
dec
mov
arpl
or
hlt
fstp
mov
jl
loopne
out
bnd
sahf
inc
xor
imul
mov
mov
(bad)
mov
add
push
push
and
fdivr
mov
push
add
mov
cmps
sub
xor
sbb
or
or
ror
inc
cmp
call
or
dec
sbb
imul
add
imul
inc
cmp
ja
jmp
cmp
xchg
pop
mov
xor
sbb
pop
jecxz
sbb
pop
inc
dec
in
add
ds
push
sbb
cmp
(bad)
clc
invd
enter
sub
jmp
pop
stos
lods
(bad)
sub
push
inc
or
mov
dec
adc
bnd
das
inc
jo
sub
cwde
dec
inc
add
(bad)
and
xor
aaa
jmp
mov
adc
shl
lea
cli
or
adc
ret
push
jmp
daa
lock
add
mov
mov
add
iret
aam
test
push
scas
pop
test
dec
cmp
fisttp
add
cmps
imul
imul
add
add
movs
or
inc
and
in
inc
(bad)
lods
and
adc
repnz
fwait
sbb
daa
cld
outs
pop
inc
and
and
hlt
pop
pop
imul
or
sub
je
cwde
(bad)
stos
es
pop
mov
cmp
test
sbb
str
jne
neg
js
cmps
aad
sub
mov
dec
popa
hlt
lea
push
adc
push
and
xor
test
cmp
jmp
aam
ds
mov
dec
aad
mov
or
adc
jle
sbb
sub
dec
es
adc
xlat
push
mov
xor
cs
or
fisubr
mov
test
xchg
outs
out
adc
xor
xor
and
inc
add
jne
push
inc
(bad)
scas
sub
cdq
adc
push
cmp
addr16
mov
adc
and
repnz
jge
cmp
add
or
inc
test
push
push
jbe
cmp
ror
xlat
jmp
add
jmp
push
cmps
adc
dec
push
fcom
sub
or
pop
inc
adc
imul
sbb
dec
jne
mov
les
outs
sub
cmc
imul
ja
int3
mov
retf
cld
mov
sbb
ror
mov
pop
sbb
pop
sbb
sub
cmp
adc
mov
inc
shr
mov
mov
push
push
or
cmp
mov
adc
adc
mov
or
mov
jmp
clc
cmps
mov
(bad)
out
fs
js
jge
jo
xor
stos
cmp
mov
jnp
pop
mov
loope
cmps
mov
test
pop
adc
cmp
add
adc
test
stos
cmp
add
xchg
pop
ins
lea
pop
repz
push
cwde
icebp
dec
fst
js
xor
and
or
push
jle
mov
pop
nop
fst
fiadd
mov
cmc
nop
fidiv
mov
adc
scas
in
(bad)
xchg
jae
hlt
(bad)
cmp
push
les
add
mov
add
nop
or
pusha
loope
jo
mov
jne
xchg
cmps
push
or
imul
(bad)
jmp
ds
retf
call
inc
dec
sbb
sti
div
xchg
pop
xor
or
cmp
lock
inc
xchg
inc
or
and
mov
pop
lods
jbe
mov
mov
push
ret
aaa
mov
cmps
jno
adc
dec
sub
shl
sbb
ss
aas
add
enter
das
lods
or
pop
push
cmp
ss
imul
pop
(bad)
jmp
push
js
jbe
mov
jmp
das
adc
xor
jle
int
fwait
retf
inc
or
dec
adc
loope
pop
adc
jp
add
adc
and
(bad)
cdq
push
sub
dec
retf
cmp
aas
pusha
jecxz
push
sysret
push
ret
mov
mov
add
sub
inc
cmps
popf
mov
cmp
jne
clc
or
mov
out
and
or
es
imul
das
mov
mov
(bad)
or
add
vdivsd
inc
and
jp
fimul
adc
(bad)
xor
inc
ficomp
sbb
mov
popa
and
aad
jo
adc
fcomp
mov
or
and
ror
(bad)
inc
or
(bad)
xor
cmp
inc
jo
sub
xor
push
and
loop
push
push
ret
push
xor
cmp
jae
fsubr
aam
and
push
adc
dec
pop
lock
adc
mov
mov
adc
arpl
or
enter
adc
loopne
and
sub
inc
(bad)
into
sti
jmp
aam
mov
or
jmp
adc
mov
jns
fadd
add
or
xor
inc
cmp
mov
or
or
push
fidiv
jb
mov
and
aam
cwde
enter
push
push
gs
in
and
not
lods
ds
bound
dec
inc
mov
cmp
in
jae
jbe
dec
inc
mov
cmp
out
push
mov
mov
or
sbb
mov
jecxz
scas
push
mov
sbb
mov
cmp
sahf
outs
and
sbb
mov
test
dec
push
push
popa
or
gs
lock
push
das
push
push
fcom
aas
test
loope
pop
icebp
cmp
int3
or
out
inc
add
in
or
pop
push
(bad)
mov
jecxz
rol
mov
pop
push
jmp
push
push
push
adc
jb
inc
out
push
cwde
push
fdiv
add
inc
loopne
pop
adc
inc
(bad)
push
and
mov
repnz
jb
repnz
or
sub
loop
(bad)
cmp
cmp
jne
(bad)
sbb
pop
or
pop
inc
cmps
or
add
push
ror
rol
inc
or
mov
cld
int
repnz
cmp
jle
push
test
(bad)
out
and
add
jnp
mov
mov
inc
cmp
in
mov
sbb
and
shr
sbb
jne
push
in
xor
push
xor
mov
fcom
adc
pop
push
inc
ret
stos
xor
movs
pop
cmp
and
or
adc
inc
sub
(bad)
in
add
and
sub
mov
push
dec
ins
mov
or
push
push
ins
ror
mov
jo
out
das
xor
dec
dec
sbb
pop
add
clc
dec
adc
int3
aas
or
jno
call
sub
inc
jo
jne
add
inc
mov
imul
mov
pop
inc
stos
loopne
in
stos
hlt
add
or
jne
pop
cmp
cdq
sbb
mov
(bad)
out
push
call
sub
gs
add
add
add
xor
xor
idiv
or
jo
sub
clc
mov
sar
sbb
inc
lock
test
je
cmp
mov
aad
data16
push
cmp
je
dec
or
jmp
sub
jb
lahf
cmps
mov
add
add
daa
and
sub
cdq
jge
(bad)
rol
imul
or
mov
loope
add
aas
mov
push
pop
mov
push
add
mov
adc
jae
fld
pop
data16
jmp
(bad)
mov
popa
sbb
cli
dec
cdq
loope
mov
fisttp
(bad)
jne
jg
sub
jo
dec
xor
add
cmovl
sbb
inc
outs
cmp
ficomp
ins
pop
addr16
jo
and
push
pop
pop
add
push
movs
xor
cmp
cli
sub
mov
dec
or
or
inc
mov
ror
adc
leave
jno
adc
jbe
xchg
fstp
adc
push
push
mov
repz
xchg
add
mov
mov
cli
pop
mov
sbb
int
rol
lock
ror
sbb
sbb
imul
or
inc
fiadd
pop
cmp
leave
jmp
ror
adc
and
and
inc
sbb
jne
adc
sbb
pushf
push
lods
mov
retf
into
jne
data16
popa
shr
cmp
pop
out
adc
stc
jmp
mov
test
retf
jmp
push
xchg
pushf
mov
pop
pop
xor
dec
ss
xor
sbb
icebp
push
xor
inc
loopne
cwde
dec
or
cwde
inc
inc
or
xor
xor
mov
adc
imul
push
mov
es
jo
jno
inc
jp
repz
jg
jne
cmp
jne
push
imul
or
push
cmp
lods
pushf
mov
add
cmp
jg
xchg
jo
jp
ror
out
aaa
les
fimul
push
repnz
loop
inc
push
test
not
and
inc
nop
push
or
rol
xor
sbb
xlat
xchg
inc
jno
dec
mov
mov
ja
mov
sub
sub
sti
sub
jbe
push
or
into
cmp
mov
mov
lea
jp
push
and
and
push
pop
int3
ins
add
or
mov
je
inc
nop
or
call
clc
sbb
cs
jmp
adc
sar
mov
sbb
call
adc
mov
pop
dec
adc
and
cmp
add
dec
out
add
ja
push
mov
sub
dec
bound
xchg
loopne
jae
sub
mov
test
jo
jo
loopne
mov
mov
bound
sbb
leave
add
pusha
es
adc
sar
pop
inc
pop
fisub
adc
cmp
jbe
push
adc
adc
outs
mov
add
add
cmp
ins
loopne
and
or
(bad)
jmp
inc
adc
push
xchg
nop
rdmsr
lock
add
gs
mov
jae
fisttp
sub
aad
in
or
retf
popf
out
xchg
xchg
lock
pop
cmps
xor
sti
push
and
mov
cmps
add
loop
scas
jl
sti
mov
adc
cmp
pop
dec
and
stos
stc
cmp
ffree
stos
lahf
xor
mov
xchg
ss
sbb
stos
or
sub
sbb
retf
js
ins
mov
xchg
pusha
cmp
adc
push
addr16
cdq
inc
pop
pop
fstp
aas
add
pop
cmp
add
ficomp
outs
pop
in
sbb
sub
scas
xor
dec
dec
pop
dec
in
shr
(bad)
xchg
xor
cmp
cmp
in
jmp
cmp
aam
(bad)
push
xchg
and
or
inc
fidivr
out
int
and
mov
jnp
xchg
aaa
in
dec
cmp
and
test
jo
push
inc
adc
test
or
fisubr
(bad)
dec
loopne
clc
out
add
ja
jmp
push
ds
jae
mov
pop
dec
lock
jo
(bad)
jmp
add
data16
inc
je
sar
mov
cwde
repz
mov
push
inc
sbb
ins
xor
push
scas
mov
test
ss
pushw
xor
and
mov
out
sub
sbb
ret
es
int3
adc
or
adc
loope
add
movs
lds
in
cmps
je
dec
add
out
(bad)
push
scas
add
outs
popa
out
xchg
sub
cmp
hlt
cmp
sbb
pop
gs
sahf
mov
inc
push
out
jb
cmps
or
adc
sub
push
in
push
push
pop
lods
scas
pop
out
bound
pop
xchg
jno
add
or
shl
inc
push
fmul
sbb
pop
push
lock
jo
test
mov
jge
xor
dec
movs
jbe
ror
or
cmp
fdivr
movs
sub
cmp
in
pop
clc
das
loopne
lods
xor
or
shl
sub
xchg
add
inc
(bad)
nop
xchg
mov
mov
mov
sbb
sub
jmp
mov
add
adc
(bad)
call
arpl
mov
je
sub
stos
mov
jne
repnz
cs
mov
push
and
add
sub
popa
or
jmp
dec
push
add
adc
fst
pusha
mov
push
movs
jmp
pop
sbb
lahf
daa
jne
je
jmp
or
push
dec
dec
xchg
and
push
dec
rcl
repnz
cs
xchg
or
in
inc
sbb
imul
jg
jmp
loopne
adc
jecxz
mov
ins
(bad)
jecxz
sbb
call
and
jnp
mov
shl
bound
dec
mov
inc
test
aaa
and
push
and
out
pushf
es
sbb
mov
dec
inc
(bad)
aaa
mov
pop
pop
and
add
sbb
or
mov
pop
fist
or
cs
and
sub
or
adc
mov
sub
dec
inc
mov
dec
icebp
pusha
add
retf
int3
(bad)
rcr
sbb
cdq
outs
or
nop
cmp
(bad)
xor
xor
jb
mov
jmp
push
cs
pushf
push
jge
cmp
rcl
xchg
push
push
push
xchg
or
test
push
xchg
adc
mov
cmps
and
loopne
adc
add
adc
xor
test
mov
mov
sbb
arpl
inc
bound
ins
fs
inc
jne
and
adc
ja
sar
push
ja
loopne
sbb
dec
je
xchg
jno
add
push
test
dec
inc
xor
dec
sbb
pusha
push
loop
int
rol
nop
repz
mov
mov
je
mov
or
sub
mov
repnz
pop
mov
scas
ret
cdq
test
rcr
inc
js
ds
xor
dec
arpl
inc
add
add
cmps
and
jnp
push
inc
clc
xchg
mov
hlt
push
xchg
jp
stmxcsr
dec
push
jmp
sbb
fisttp
or
or
cmp
add
mov
loopne
clc
jg
sar
xchg
jo
movq
movaps
out
push
enter
shl
jle
xor
cmc
or
das
cli
rcl
retf
je
in
(bad)
dec
mov
repz
or
jg
sub
or
pushf
fst
dec
fwait
xor
jnp
mov
pop
jg
sbb
adc
or
add
adc
or
pop
lock
xchg
pop
add
ffree
rol
add
scas
std
imul
enter
push
sub
xchg
cmps
mov
adc
dec
sbb
mov
in
ret
cmp
sub
ja
loop
adc
daa
inc
jo
mov
popa
scas
iret
xor
push
add
pop
dec
rcl
pop
repnz
movs
adc
repnz
push
ret
jge
mov
xchg
push
loop
ret
xchg
push
movs
leave
or
lds
xchg
fwait
icebp
ret
sar
inc
jbe
call
rcr
inc
sbb
dec
daa
mov
movs
pop
and
and
(bad)
popa
adc
into
bound
(bad)
cs
dec
pop
ror
push
mov
push
arpl
xchg
cdq
adc
sahf
lods
inc
add
ja
jle
mov
cmp
mov
sub
mov
mov
cmp
jne
jb
sbb
sub
lds
(bad)
xor
xchg
xor
lock
js
mov
cmps
and
jnp
out
mov
scas
or
mov
popa
pop
pop
or
add
dec
push
stc
aam
sbb
cli
add
jmp
sub
hlt
fcomi
add
jp
pop
sub
js
stc
arpl
jmp
push
test
push
mov
push
pop
add
rcl
xchg
inc
push
popa
frstor
mov
mov
aad
mov
adc
inc
cmp
jne
inc
cmp
pop
inc
movs
mov
bound
and
nop
mov
and
inc
xor
ins
out
push
adc
adc
and
xchg
jmp
clc
loop
mov
nop
or
inc
inc
cmp
jb
add
cmp
add
sahf
retf
adc
dec
adc
push
add
push
push
retf
pop
mov
adc
or
push
shr
or
add
cwde
sub
cli
push
mov
pusha
mov
cs
and
inc
or
jg
les
inc
hlt
cmp
jecxz
pushf
shl
dec
inc
outs
push
fiadd
xlat
enter
rcr
xchg
mov
shl
shl
dec
leave
shl
daa
hlt
sbb
stos
or
inc
pop
cmp
dec
shl
mov
mov
mov
inc
inc
cmp
aam
pop
pop
mov
retf
jne
sbb
js
loope
jg
jmp
jnp
and
sti
xor
test
or
dec
mov
(bad)
inc
ss
add
jmp
mov
popa
cmp
ins
xchg
sbb
seta
sbb
or
or
add
sub
sub
js
sbb
jae
jo
shr
or
out
cmp
dec
bound
mov
iret
or
push
and
cmps
cmp
stc
jne
and
cmc
push
dec
xor
xchg
fiadd
mov
push
jne
(bad)
call
lea
stos
mov
dec
mov
je
dec
or
cmp
lock
jmp
fsub
or
and
and
or
mov
(bad)
jne
idiv
and
pop
sub
xchg
cs
jle
loopne
rol
or
cmps
add
mov
add
cmp
cwde
pop
lods
loopne
mov
add
and
sub
sbb
dec
pop
and
inc
pop
inc
ins
xor
cmps
inc
test
js
pop
popa
push
xor
push
push
out
adc
mov
add
adc
sub
fisttp
test
jl
jg
mov
pop
mov
inc
xchg
jbe
push
add
adc
rol
int3
xchg
test
mov
loopne
rcr
icebp
shl
daa
in
inc
or
imul
adc
adc
dec
jb
xchg
cmp
jecxz
call
add
jae
adc
fidiv
sub
pop
ret
or
imul
push
fwait
into
add
mov
add
sub
add
ds
pop
pop
test
inc
push
sbb
push
dec
(bad)
push
popf
call
sub
xchg
adc
xchg
fwait
jle
push
fstp
xchg
add
sti
and
repz
aam
ret
adc
lock
add
inc
push
sbb
lds
pusha
jb
iret
mov
sbb
xchg
push
(bad)
jnp
cmc
movs
inc
ror
in
pop
cmp
clc
fmul
push
sbb
mov
lods
lds
adc
out
repz
clc
bound
mov
push
aam
push
push
mov
xor
fcom
inc
mov
out
pop
lock
movs
popf
nop
adc
mov
jle
or
or
mov
pop
dec
cmp
pusha
fisttp
lea
mov
js
cmp
mov
mov
pop
push
fadd
inc
xchg
hlt
fsubr
(bad)
ficomp
add
cmp
jb
xor
pop
(bad)
in
sbb
ss
jp
div
daa
or
sub
xchg
bound
push
cmps
loope
xor
fcomp
push
cs
mov
adc
or
loop
add
add
sub
loopne
in
(bad)
idiv
stos
ds
mov
add
jge
sub
xchg
je
into
sbb
pop
sbb
pop
(bad)
fistp
mov
push
shl
xchg
push
pop
pop
(bad)
lods
leave
mov
ret
adc
or
mov
inc
adc
add
push
(bad)
je
hlt
push
cmp
dec
scas
ins
cmp
inc
and
mov
mov
xor
push
pop
test
or
mov
dec
jmp
mov
adc
inc
push
pushf
in
fstp
(bad)
push
aas
push
sbb
dec
adc
out
add
cmps
je
adc
and
scas
jecxz
jb
push
aad
stos
lock
xlat
xor
push
dec
jl
jbe
push
call
mov
adc
mov
adc
add
and
mov
and
mov
add
ret
pop
addr16
add
ffree
int
dec
fld
inc
stc
inc
ja
mov
pusha
repnz
push
add
and
push
imul
push
gs
pop
lods
mov
(bad)
pop
mov
mov
push
jp
out
cmp
push
jmp
mov
sbb
mov
mov
js
call
push
dec
shl
cmp
sbb
cmc
outs
add
sbb
adc
dec
inc
and
test
jb
xchg
xor
push
mov
mov
mov
or
mov
mov
or
or
mov
pop
push
inc
adc
pop
mov
test
dec
mov
dec
enter
and
mov
stos
inc
xor
jne
adc
jbe
add
pop
sahf
fcom
pusha
dec
or
imul
jmp
add
sub
test
add
and
clc
pop
adc
lea
and
imul
xor
fcom
mov
push
jne
or
cwde
dec
mov
pop
imul
pop
in
test
je
sbb
shr
sub
bound
or
or
ret
lea
repz
imul
ss
push
pop
add
jb
cmp
add
daa
arpl
iret
xor
add
pop
test
jp
add
iret
sub
sar
jno
jle
add
add
pop
push
fld
add
sahf
xchg
mov
or
sbb
push
pop
jb
cmp
or
or
pop
enter
or
sub
cmp
or
pop
xchg
inc
enter
loop
or
enter
or
or
in
jns
add
push
nop
addr16
push
ja
jae
inc
push
push
rsqrtps
jb
fimul
pop
adc
fwait
sub
fdiv
adc
inc
or
mov
adc
add
call
adc
xchg
add
pop
adc
adc
xor
mov
push
iret
enter
push
push
pop
pop
movs
mov
sbb
cmp
sbb
cmp
pop
enter
sbb
jb
jb
(bad)
sbb
sbb
dec
in
mov
jb
sbb
pop
and
add
cmp
sbb
sbb
and
pop
pop
cs
add
add
sub
cmp
rol
mov
xchg
movups
aaa
cld
and
sti
sub
inc
push
pslld
in
push
in
jno
repnz
sub
sar
sar
aad
cmp
inc
sahf
add
xor
out
fld
inc
fmulp
dec
call
nop
adc
dec
dec
cwde
jmp
xor
jmp
jmp
jmp
inc
in
in
cdq
sbb
out
repnz
sahf
enter
out
out
jge
inc
enter
out
pop
lock
imul
in
icebp
icebp
ud1
sahf
repnz
std
repz
hlt
hlt
cmp
pushf
ror
pusha
hlt
fwait
mov
cmc
cmc
inc
jg
xor
cmp
pop
test
cmp
clc
clc
inc
push
fsub
clc
cdq
adc
iret
in
repnz
stc
lock
cli
cli
sbb
sbb
iret
sti
sbb
jb
jns
stos
cld
cld
cld
je
sbb
xchg
aaa
cld
push
setle
jns
inc
ss
xor
sbb
inc
or
jns
adc
clc
fisub
or
mov
sbb
fimul
call
cmps
sbb
es
retf
add
sti
sub
mov
pop
inc
scas
mov
inc
mov
xor
xchg
sti
out
out
cmp
out
outs
call
add
sub
mov
pop
jmp
add
movs
jmp
cdq
(bad)
mov
adc
in
add
leave
popf
cli
sbb
nop
cmps
out
out
out
cdq
push
xchg
inc
pop
and
add
cli
and
sbb
jmp
cdq
add
(bad)
push
xlat
xchg
mov
cs
in
pop
stc
div
div
fwait
xor
repnz
add
stc
out
clc
test
retf
enter
sti
sti
cdq
mov
cld
inc
cld
cmp
cli
mov
sbb
inc
scas
xchg
sbb
cli
cld
sub
mov
in
sbb
(bad)
mul
pop
leave
mov
adc
imul
popa
jg
mul
enter
sbb
out
bound
pop
inc
div
pusha
leave
and
sbb
xchg
cmps
jmp
shl
pop
mov
adc
xchg
pop
xchg
neg
ins
out
out
jno
mov
pop
and
add
pop
and
neg
(bad)
repnz
xchg
xchg
mov
jae
imul
cmc
div
popf
add
jne
jns
and
pop
add
clc
clc
push
scas
retf
add
hlt
stc
popa
cmp
mov
xchg
inc
pop
jno
hlt
pop
dec
pop
and
jne
push
hlt
push
cmp
add
das
pushw
(bad)
data16
pop
ja
and
hlt
idiv
jo
pop
int3
jbe
(bad)
sti
lahf
lock
add
adc
test
loope
loope
push
jno
es
scas
repz
test
imul
push
jno
inc
repz
cmp
repz
sbb
bnd
leave
and
cmc
mov
leave
mov
jo
int
mov
dec
in
in
leave
and
cmc
and
leave
mov
loope
mov
mov
lea
inc
xlat
mov
xchg
icebp
jb
test
les
sub
mov
dec
push
cmc
cmc
cmc
mov
inc
jb
icebp
jecxz
or
lock
popf
lock
stc
popf
dec
push
jno
jne
push
lock
pop
je
xor
sbb
push
lock
test
ss
(bad)
jmp
stc
adc
sub
out
ret
mov
mov
cmovno
push
add
enter
add
stos
fsub
and
dec
add
push
add
sub
lods
loopne
dec
adc
or
dec
add
jmp
pop
dec
add
or
jp
mov
pop
add
and
ins
mov
push
pushf
pop
inc
add
mov
stc
cmp
jmp
or
push
outs
fnstcw
jnp
popf
sub
loopne
in
and
or
jle
call
and
and
sub
lahf
out
xor
pusha
rcr
movs
xchg
push
rcr
add
rol
mov
add
xchg
and
add
dec
xchg
or
(bad)
(bad)
jle
rol
add
ret
add
xor
test
mov
xor
imul
call
imul
add
and
pop
push
in
popa
js
retf
inc
or
cld
ins
test
hlt
ror
xor
popa
xchg
mov
xchg
lock
clc
adc
test
jge
push
imul
mov
clc
push
or
pop
pop
add
sbb
(bad)
cs
or
adc
mov
sub
lea
lea
mov
jo
(bad)
pop
push
inc
fmul
and
add
sub
in
mov
inc
mov
ins
inc
adc
inc
mov
mov
add
dec
mov
sbb
jmp
imul
adc
and
cmp
mov
push
fdivp
add
xor
fst
sub
sub
mov
add
enter
push
pop
add
or
dec
cdq
mov
rep
mov
dec
jmp
and
and
shr
loope
cmp
push
rcl
xchg
add
mov
inc
ins
mov
test
dec
pushf
out
loopne
in
push
push
mov
xor
and
cld
add
jno
out
and
and
(bad)
ins
out
repz
adc
cmp
jb
nop
data16
ja
add
sbb
pop
or
mov
aam
out
adc
lock
enter
ja
mov
jbe
mov
push
inc
in
xchg
js
jl
add
iret
hlt
mov
adc
mov
sbb
nop
cmps
pusha
jne
cmps
or
mov
mov
repnz
je
pop
rol
sub
inc
inc
pop
cmp
enter
inc
in
inc
rol
or
push
sbb
xchg
pop
fistp
sbb
mov
lea
xor
xchg
bound
and
pop
cli
add
stos
xor
or
add
and
(bad)
lods
push
mov
repz
sub
lea
mov
and
pushf
add
fcomp
out
xchg
mov
std
jg
rcl
jmp
cmp
jne
or
mov
sub
sub
imul
cs
xchg
xor
and
(bad)
cmp
or
jge
sub
mov
xor
xor
pop
sub
cmp
and
or
int
(bad)
adc
dec
add
add
lds
sbb
and
outs
or
retf
or
div
or
imul
mov
je
mov
sub
cmp
cs
scas
shr
leave
cmp
jae
push
dec
ins
jb
movs
repnz
add
and
dec
mov
and
add
inc
mov
and
neg
nop
inc
aad
fdiv
mov
sbb
or
mov
clc
or
ja
retf
push
es
mul
jmp
or
loopne
pop
add
mov
sbb
ret
test
or
sbb
mov
pop
in
inc
adc
(bad)
push
and
pop
push
dec
xor
add
and
sub
popa
bound
push
inc
dec
lock
cli
cld
fild
mov
sti
or
push
pop
out
lea
or
mov
rol
push
cmp
jne
mov
outs
sahf
out
push
cmp
jne
(bad)
es
jne
popa
ins
out
call
jmp
fsubr
push
or
jns
fimul
repz
adc
(bad)
jmp
std
fs
xor
push
sub
frstor
adc
adc
xchg
inc
inc
mov
jb
jmp
xor
mov
jmp
mov
mov
and
aas
mov
repz
adc
cs
gs
pusha
cmp
adc
or
pusha
test
jns
lds
std
or
sub
leave
inc
or
gs
push
and
adc
nop
adc
adc
cmp
xchg
xchg
and
arpl
mov
add
sbb
fimul
push
sub
jne
jo
mov
sub
xchg
sbb
shl
aaa
xor
push
jb
adc
sbb
push
stc
push
pop
mov
push
jmp
fdivr
shr
push
pop
push
jne
or
inc
rol
push
push
jmp
sbb
lods
mov
out
jns
mov
dec
mov
xor
lahf
out
mov
push
call
es
cwde
inc
push
mov
mov
add
inc
add
add
popw
loop
popf
ret
sbb
dec
sub
popa
push
dec
pop
fdiv
mov
push
pop
cli
std
test
pop
hlt
jb
xchg
push
jae
ret
jmp
retf
clc
test
pop
rcr
call
adc
stc
imul
inc
shr
stos
add
test
popf
les
xchg
adc
or
pop
mov
mov
test
cli
jp
jne
mov
mov
xor
jns
inc
adc
add
push
iret
cmps
icebp
dec
sbb
jmp
xor
das
int3
add
sar
add
cmp
jbe
cmp
daa
(bad)
icebp
pusha
and
fst
ins
pop
and
cmovs
scas
sbb
pop
test
(bad)
mov
adc
mov
rep
jmp
add
dec
imul
push
ss
dec
add
xor
push
push
stos
out
out
cmp
xchg
push
mov
add
mov
or
scas
cmp
mov
(bad)
mov
add
movs
push
dec
add
mov
cmps
inc
add
add
jnp
push
mov
or
push
and
sbb
lahf
out
adc
add
cmp
out
in
inc
(bad)
in
call
sahf
out
lock
hlt
clc
push
xor
cld
pushf
lea
add
add
fldcw
pop
inc
sbb
jl
inc
mov
lods
sbb
out
inc
pop
sti
xchg
xor
and
sbb
vpunpcklwd
je
into
jl
cld
or
stc
or
std
(bad)
cld
out
loopne
neg
adc
inc
jno
lea
jae
sub
nop
hlt
movups
push
fiadd
jl
mov
outs
dec
gs
add
outs
sub
push
add
nop
dec
dec
addr16
add
jmp
fwait
xchg
or
push
movs
lods
mov
pop
jl
mov
sbb
out
sahf
out
sbb
adc
or
or
add
or
jns
inc
lock
sub
cmp
add
pop
sldt
inc
pusha
daa
ja
lahf
call
push
xchg
hlt
idiv
mov
inc
inc
dec
cs
pop
pop
push
push
iret
nop
outs
inc
inc
(bad)
outs
ja
xor
jbe
push
cdq
pop
idiv
add
mov
pusha
or
adc
add
cmp
(bad)
aaa
dec
mov
mov
out
test
xor
shl
jmp
cmp
jae
dec
xor
pop
jae
pop
jbe
mov
dec
les
pusha
add
sub
push
call
hlt
mov
cmp
out
or
(bad)
mov
mov
aaa
dec
sbb
out
gs
or
adc
dec
or
sbb
dec
dec
jb
les
and
xlat
je
imul
neg
xor
mov
xor
pop
dec
sti
inc
shr
mov
xor
xchg
out
movs
sbb
push
das
arpl
and
mov
jo
xchg
add
or
enter
push
jl
mov
test
push
pop
add
add
adc
sub
xor
test
cmp
imul
(bad)
pop
dec
adc
lods
pusha
mov
stos
or
mov
arpl
aam
pop
cmp
enter
ja
ins
loopne
fnstsw
or
aas
jge
lock
mov
pop
idiv
cmp
inc
cs
cmc
jge
int
push
xchg
inc
out
cmp
cs
shr
jmp
or
xchg
xchg
push
rcr
test
mov
imul
mov
ret
jl
mov
sbb
call
(bad)
or
xchg
mov
sub
sbb
shl
repnz
sbb
and
outs
mov
out
sbb
mov
mov
jns
adc
cmp
cmp
sbb
(bad)
sti
cmp
fwait
mov
mov
mov
push
adc
jae
inc
loopne
fidivr
fadd
push
dec
dec
daa
adc
jg
shl
xor
mov
jge
pop
je
sbb
mov
jecxz
jl
fs
sti
(bad)
sub
xor
mov
int
int3
dec
jo
push
pop
je
dec
inc
mov
jne
mov
scas
mov
or
(bad)
sub
call
pop
pop
(bad)
call
lods
push
and
out
ja
push
fs
or
in
mov
push
aaa
or
adc
cmp
pop
stc
add
push
adc
call
push
inc
jmp
push
pushf
in
leave
test
adc
pop
dec
xor
mov
gs
mov
fld
ret
push
je
mov
push
enter
movs
xchg
outs
cmp
sub
and
fld
or
push
cld
arpl
lock
adc
pop
or
sub
inc
iret
repz
push
out
call
popa
push
mov
cli
or
pop
push
adc
call
add
fstp
cmp
(bad)
xchg
ror
mov
sub
pop
pop
clc
push
loop
out
sub
inc
cld
mov
or
and
(bad)
adc
adc
aam
xor
icebp
mov
mov
add
ret
pop
sub
adc
aam
or
mov
pop
mov
das
lock
fisub
mov
adc
dec
inc
inc
cmp
je
xchg
mov
(bad)
fs
or
adc
add
fidivr
dec
dec
mov
and
mov
or
mov
mov
pushf
add
push
adc
mov
inc
jmp
push
outs
pusha
push
mov
push
inc
sbb
jae
inc
xor
adc
pop
les
dec
or
bound
sub
or
dec
jmp
mov
das
dec
push
add
sbb
retf
(bad)
add
add
push
or
mov
addr16
pop
dec
std
add
test
adc
clc
ror
out
ret
and
cmp
je
inc
xor
or
cmp
fsubrp
adc
xor
lock
mov
pop
(bad)
inc
ror
dec
int
shl
sub
push
cs
and
repnz
lods
sbb
dec
movs
jb
jmp
add
or
retf
retf
mov
xchg
adc
fiadd
dec
dec
mov
jl
and
ss
lea
popa
bound
mov
mov
popa
dec
or
pusha
pslld
xor
cs
dec
jmp
jmp
repz
imul
jne
adc
xor
ror
mov
ret
sbb
dec
and
cmp
aaa
mov
gs
xor
mov
xor
inc
cdq
ret
in
inc
cld
xor
or
dec
adc
lea
hlt
mov
push
xchg
cmp
je
push
mov
mov
add
push
adc
push
mov
push
mov
dec
or
and
call
inc
push
shr
jmp
cmp
ja
or
sbb
jg
and
inc
inc
call
push
call
outs
inc
inc
cli
push
push
ins
ja
or
out
inc
push
fisubr
jge
(bad)
cdq
pop
stos
call
adc
lock
and
pusha
js
imul
es
inc
jmp
aas
sbb
pop
movs
jl
push
xor
nop
add
inc
push
enter
(bad)
nop
inc
call
dec
push
in
add
and
mov
fstp
imul
push
push
pop
pop
sbb
and
not
jmp
inc
fld
inc
rcr
xchg
sub
dec
ins
push
je
sbb
mov
or
loope
sub
stc
and
and
pop
cmc
xor
test
mov
lea
or
or
stc
enter
(bad)
out
movs
push
add
jmp
push
adc
mov
or
aad
adc
push
cld
jb
mov
xlat
(bad)
fs
mov
dec
js
add
pop
inc
clc
push
adc
ret
mov
or
jne
(bad)
dec
rol
add
or
cmp
std
jne
ret
fistp
xor
dec
les
sub
adc
(bad)
cmp
pop
je
inc
out
xchg
or
adc
cmp
jg
add
or
push
in
std
cmp
adc
lods
and
sub
clc
xor
and
test
loope
push
cmp
fbstp
ror
out
(bad)
fdiv
and
xor
cmp
jle
xchg
mov
jb
rcl
mov
loopne
clc
add
(bad)
loopne
mov
lods
mov
sbb
pop
push
les
adc
movs
push
outs
cmp
adc
sub
(bad)
mov
sub
adc
jp
call
jno
adc
ins
imul
xor
cmp
popa
ret
mov
mov
inc
inc
data16
mov
out
nop
dec
sar
dec
xor
cs
pop
adc
dec
mov
icebp
lea
push
adc
push
pop
dec
ss
pop
inc
ficom
add
enter
add
js
retf
xlat
out
jecxz
aam
cwde
mov
es
and
mov
mov
pop
dec
test
jne
or
push
add
or
inc
outs
adc
das
or
add
fldpi
or
add
mov
fcom
int3
ror
lock
push
pop
call
in
pop
sub
cmp
sbb
sbb
ds
xchg
or
sbb
mov
cwde
or
mov
add
jmp
push
jmp
call
pop
jmp
leave
push
add
sub
std
add
not
jo
push
cmc
add
and
add
add
add
or
xlat
sub
push
inc
cmc
adc
lahf
mov
ja
dec
loopne
cli
rol
push
clc
popf
ins
push
lea
or
sub
jmp
cwde
lds
(bad)
mov
sbb
ret
stos
fwait
test
xor
imul
jae
lahf
inc
push
sbb
cmp
hlt
aas
das
xchg
sbb
add
iret
call
imul
mov
jmp
mov
jmp
push
call
pop
cmp
mov
rcl
sti
sbb
fild
xchg
adc
pop
or
xchg
dec
jmp
add
push
aaa
jl
jg
xchg
lock
pop
retf
into
cdq
and
je
and
add
jb
hlt
pop
jp
sbb
jmp
mov
push
shl
fisttp
jne
fdivr
icebp
and
cmps
pop
xchg
and
popa
inc
sbb
rcr
clc
movs
push
arpl
or
addr16
adc
sub
jbe
clc
xor
push
or
imul
sar
aas
inc
pop
sub
sub
sub
mov
sbb
and
das
mov
push
or
add
das
and
pop
adc
lods
cmp
add
inc
mov
mov
adc
add
sbb
add
xor
sar
popa
and
test
xor
movs
adc
loope
sar
xor
clc
lds
and
call
inc
xchg
fsubr
sti
pop
dec
cmp
xor
pop
fisubr
bound
or
push
jns
cdq
add
adc
or
dec
inc
or
jo
mov
sbb
pop
adc
cs
rcl
or
dec
sub
loope
or
add
test
mov
sub
mov
and
mov
inc
dec
jne
lea
ja
or
rcl
add
pop
test
cli
aad
xor
outs
add
test
dec
jmp
out
push
mov
sub
jecxz
popf
out
lds
ja
sub
popf
rcr
push
int3
xchg
or
outs
push
jle
rol
fsubr
fisubr
bound
cld
ficom
push
inc
les
hlt
lock
push
cmp
and
cld
fbld
and
dec
push
jo
push
push
or
mov
lods
jmp
and
je
and
mov
push
jle
add
mov
mov
lahf
jge
idiv
lods
leave
sub
mov
cmp
and
imul
ret
push
clc
push
fiadd
jmp
add
rol
add
xchg
std
pop
or
inc
push
test
arpl
mov
mov
and
ins
add
and
sub
test
(bad)
and
mov
or
mov
xor
gs
ss
clc
push
push
jg
mov
cmp
cmp
mov
fst
or
ins
push
cld
add
jno
pop
inc
out
jmp
adc
sub
fs
inc
mov
sub
cmps
add
mov
cmps
push
sub
dec
cmp
aam
inc
sti
or
in
cmp
std
jne
fsubr
fld
mov
dec
cld
stos
inc
add
jmp
adc
cs
sar
or
or
sbb
inc
retf
adc
mov
push
jnp
inc
dec
mov
mov
rol
nop
xchg
repz
push
lock
sbb
cmp
or
add
in
in
push
jmp
mov
push
popf
xchg
ss
push
and
xor
xor
sub
test
cld
dec
adc
or
cmp
jbe
pop
fwait
in
lea
mov
cmps
push
mov
inc
pop
jle
fadd
lea
xor
sub
call
aad
pop
mov
adc
sti
sti
inc
jmp
loopne
adc
or
call
xor
int3
inc
inc
or
lds
jne
outs
inc
mov
add
jb
mov
xor
mov
cs
jmp
out
adc
mov
inc
mov
imul
inc
cld
inc
dec
jne
mov
inc
mov
inc
das
or
add
out
and
mov
mov
in
ds
mov
inc
dec
jne
mov
jnp
retf
mov
jmp
push
inc
enter
jmp
cmp
mov
push
xor
sub
loopne
add
movs
dec
adc
mov
movs
sub
mov
ret
loop
push
(bad)
bt
and
mov
inc
sbb
xchg
lods
mov
(bad)
add
dec
jns
je
ror
out
mov
push
sbb
sahf
cmp
xor
push
and
xchg
and
popa
xchg
lock
aas
cwde
dec
movs
lods
xor
(bad)
in
pop
xor
fs
and
pop
or
add
jnp
mov
pop
sub
jmp
xor
mov
dec
sbb
mov
add
jmp
push
bound
ret
rol
and
jno
jmp
fwait
inc
mov
jmp
xchg
sub
(bad)
mov
push
(bad)
xchg
les
out
jl
leave
cmp
std
xchg
loopne
xchg
pop
and
xor
psllw
pop
retf
retf
in
mov
or
push
movs
adc
mov
adc
push
mov
mov
int3
pop
and
lahf
das
jnp
mov
inc
inc
sbb
sub
ss
jae
xchg
sub
and
nop
mov
shl
aam
pop
cmp
push
push
cwde
sub
inc
lds
mov
out
jle
or
push
and
clc
rol
adc
bound
pop
cld
sahf
inc
add
add
dec
jne
sbb
push
xor
xchg
push
mov
push
sbb
mov
lea
inc
outs
(bad)
sbb
or
out
pusha
fsubr
ret
jo
cmp
or
in
xor
clc
add
sub
sub
test
cmps
dec
xor
je
push
sub
dec
pop
pop
mov
push
adc
xchg
inc
push
in
pop
add
cmp
add
jbe
(bad)
dec
and
ret
cmp
jle
sbb
jo
loope
lea
add
inc
shl
les
ficomp
add
rcl
or
or
mov
mov
and
stos
add
mov
rol
xor
mov
jmp
mov
cmc
loopne
pusha
pushf
sbb
pop
push
cs
sbb
(bad)
sbb
adc
out
jmp
cld
fisttp
jns
add
cmp
(bad)
retf
call
jns
and
(bad)
fild
shl
sub
out
fucomp
stos
pop
or
aas
push
inc
push
cs
sub
pop
dec
and
pop
sub
loope
xchg
and
(bad)
jle
cwde
and
sbb
je
sti
retf
fmul
cmp
inc
push
cld
push
jo
arpl
pop
or
mov
push
adc
movs
xchg
dec
jb
cmp
push
or
ins
push
jno
push
mov
push
cmp
fnstcw
adc
or
outs
mov
dec
test
(bad)
xchg
add
sub
rcl
adc
test
jbe
dec
test
cmp
or
imul
dec
mov
jnp
push
sbb
xor
not
aam
add
les
jae
iret
adc
or
nop
arpl
jmp
and
mov
fcomp
sbb
sbb
enter
dec
pop
cmp
xchg
and
jle
(bad)
xor
cmps
bound
(bad)
jmp
repz
and
jbe
retf
mov
mov
adc
pop
aaa
push
hlt
test
rol
xchg
cmp
mov
jge
sub
adc
cmp
mov
ficomp
ja
bt
jnp
mov
cmp
cmp
push
lods
mov
pushf
add
and
daa
fstp
mov
jno
pop
inc
xor
jae
xor
xchg
mov
out
mov
xchg
mov
fwait
popf
je
xchg
ss
mov
es
cmp
loopne
aaa
pop
mov
push
sbb
push
xchg
mov
mov
je
inc
add
pop
das
pusha
sbb
pop
mov
jmp
add
mov
cmp
ins
rol
das
mov
sub
xor
sbb
or
(bad)
fcom
fcomp
int3
data16
clc
or
test
movs
adc
lahf
xchg
shr
mov
fs
sar
enter
dec
cld
adc
mov
pop
aam
xchg
or
jmp
lea
jb
js
mov
and
sbb
push
dec
in
test
and
jmp
jge
mov
inc
cmp
fbld
sbb
dec
and
xchg
add
ins
or
xchg
mov
push
or
(bad)
mov
push
ins
test
call
arpl
arpl
mov
or
and
push
push
mov
repnz
arpl
jnp
fadd
ror
sar
test
pop
repz
(bad)
push
jmp
sub
sub
pop
nop
sub
xchg
fs
(bad)
pop
nop
movs
push
enter
pop
and
inc
dec
nop
gs
gs
fst
mov
or
push
push
pop
and
iret
rep
je
fimul
and
mov
loop
push
mov
xor
lea
mov
icebp
cmp
jo
mov
push
rol
scas
add
shl
sbb
inc
jmp
fs
add
mov
and
or
xchg
shl
jne
add
sub
push
ror
jge
inc
mov
leave
cmp
pusha
into
ins
popa
test
mov
and
push
add
mov
(bad)
call
scas
(bad)
and
adc
rcr
and
add
or
and
sub
mov
aaa
lea
in
sbb
mov
adc
imul
xlat
adc
je
fwait
xor
pop
and
enter
dec
xor
or
inc
or
je
into
(bad)
dec
cmps
xchg
sbb
dec
adc
adc
jae
mov
sub
(bad)
or
xchg
push
and
add
imul
sbb
push
mov
adc
push
mov
add
jmp
adc
add
fidivr
data16
stc
jbe
push
lahf
add
je
fcomp
imul
and
das
xor
mov
pop
in
outs
cmp
in
retf
xchg
xor
out
mov
add
outs
push
leave
cmp
pushf
or
out
aam
loope
imul
loope
not
cmp
sbb
cmp
sub
inc
ds
pop
sub
clc
movs
rcr
jp
mov
in
lds
adc
jecxz
or
dec
add
and
push
mov
push
inc
and
add
or
ret
pop
sbb
jl
jmp
mov
pop
xchg
mov
test
adc
inc
pop
mov
mov
or
pop
and
adc
push
loope
les
add
and
rcl
addr16
mov
lea
inc
stos
sbb
ror
add
push
pop
popf
leave
push
add
pop
(bad)
shl
inc
imul
inc
adc
xchg
mov
adc
jmp
push
jbe
inc
ret
out
retf
mov
and
out
push
pop
or
sub
mov
daa
pop
or
jmp
fmul
inc
pop
test
aam
ret
or
adc
push
nop
(bad)
jp
cmp
aaa
jecxz
add
and
and
test
xchg
test
pop
icebp
fdiv
mov
adc
jbe
push
inc
hlt
test
test
mov
loopne
and
xor
(bad)
push
or
inc
ret
icebp
pop
and
pop
div
in
cmovns
inc
xor
sbb
clc
dec
xchg
outs
add
out
jle
push
inc
out
sahf
add
adc
add
sub
out
jbe
(bad)
or
inc
loopne
test
das
xor
add
add
inc
push
jp
mov
es
or
and
lock
xchg
int3
and
or
pop
add
push
(bad)
add
lock
test
jmp
aam
push
or
dec
dec
or
push
jns
inc
gs
sbb
fdiv
das
add
add
push
mov
push
push
mov
nop
xchg
dec
pop
into
call
sub
jg
sbb
mov
fadd
ret
lea
sti
sub
or
in
mov
mov
fadd
outs
loop
idiv
mov
mov
push
mov
mov
into
popa
je
mov
addr16
xchg
(bad)
jo
dec
leave
movzx
test
in
mov
mov
clc
mov
lods
or
pop
ret
sar
stos
jl
scas
mov
lea
ss
sbb
pop
ja
mov
movsx
psubsw
div
xor
test
call
clc
sub
mov
pop
(bad)
lea
pop
dec
vmread
shl
lea
(bad)
loopne
cs
aam
clc
fcomp
mov
dec
or
je
call
jne
(bad)
jmp
pop
or
jb
in
push
pop
add
xor
sbb
adc
pop
nop
cli
sub
mov
or
aam
out
mov
xor
mov
mov
or
push
imul
retf
or
cmps
xor
movs
mov
mov
popf
repnz
hlt
out
sbb
hlt
hlt
stc
xor
mov
cwde
je
or
inc
ins
je
adc
into
pusha
lock
test
outs
loope
ins
cmp
sub
adc
sbb
pop
fcmovnu
pop
mov
mov
pop
or
xor
mov
inc
outs
jg
dec
xor
cwde
nop
push
inc
movs
(bad)
jg
jmp
iret
in
jb
or
imul
xor
cmc
jne
js
movs
loope
and
je
ret
pusha
loope
mov
mov
push
(bad)
jbe
movs
dec
jecxz
pop
mov
cmp
jnp
push
sbb
cmp
cmp
adc
or
add
mov
ret
add
hlt
sbb
loop
fdivr
xchg
stos
push
cmp
dec
nop
and
lahf
mov
jae
pop
test
in
mov
xchg
popa
dec
aaa
jne
das
mov
cmp
mov
and
cmp
in
xchg
lock
enter
mov
mov
test
xor
mov
mov
jmp
mov
add
push
test
scas
jl
xor
push
add
dec
neg
out
fadd
dec
retf
inc
imul
sbb
cmp
xchg
(bad)
jae
pushf
je
mov
push
mov
push
jg
mov
cmps
lods
iret
xor
push
pop
(bad)
mov
mul
jge
call
mov
inc
(bad)
mov
dec
mov
pop
xor
inc
dec
in
jecxz
movs
push
sbb
mov
or
cmp
fistp
out
pop
push
test
icebp
adc
outs
jo
add
add
add
mov
mov
pop
push
outs
je
mov
test
jae
sub
ins
out
je
aas
add
xor
ret
ret
mov
or
or
mov
je
add
adc
xchg
xor
sbb
or
add
and
fiadd
ret
fidiv
mov
jne
mov
fnstsw
cmp
jle
ins
cmp
inc
lock
xor
in
sbb
adc
push
mov
call
push
sub
inc
cld
adc
xchg
dec
sub
es
mov
or
xor
popf
test
aaa
xlat
cmps
push
lea
stc
call
pop
add
cwde
inc
call
(bad)
sbb
dec
add
ds
inc
and
popa
push
push
bound
push
mov
mov
push
cmp
addr16
dec
test
test
dec
mov
push
cdq
movs
loope
pop
data16
push
sub
mov
inc
jecxz
jne
push
jne
adc
inc
fbstp
inc
inc
xchg
or
mov
inc
jmp
or
pop
lea
int3
je
cdq
mov
fisubr
jl
mov
sbb
push
fcom
rcr
neg
jecxz
nop
mov
mov
pop
fimul
mov
or
cmp
mov
retf
out
test
pop
mov
or
jne
and
lea
mov
das
sbb
or
sub
push
inc
or
clc
jg
icebp
cdq
push
arpl
mov
stc
cmp
shr
clc
sahf
add
mov
dec
jmp
add
xchg
sub
inc
cmp
bts
je
and
sub
and
mov
mov
inc
jmp
bswap
push
sahf
stos
aaa
mov
loope
or
add
xchg
ret
inc
mov
adc
sar
rol
je
gs
sub
add
sub
sub
repnz
je
push
test
cmps
and
scas
push
sub
sub
mov
(bad)
shl
push
push
xchg
mov
xor
dec
data16
fdivr
les
idiv
stos
ds
jns
pop
daa
test
movs
adc
push
jbe
jno
or
dec
sbb
jne
add
inc
jno
aaa
cmp
mov
lock
call
add
nop
in
push
sub
popa
jle
sbb
leave
cmp
lods
add
cmps
sbb
push
sub
or
push
and
or
jl
test
push
xchg
jo
adc
push
or
daa
pop
mov
in
(bad)
mov
mov
add
idiv
movs
cmp
adc
pop
pop
fbld
adc
mov
lods
push
cmp
jmp
xchg
mov
sbb
ss
rol
and
push
add
push
pop
mov
xchg
mov
ret
xor
mov
das
(bad)
cmp
fmul
pushf
push
lea
push
push
cmp
cvtps2pd
ss
(bad)
sbb
scas
stc
mov
and
pop
xor
call
pop
aam
daa
sub
add
call
mov
ret
rol
or
ja
inc
fistp
pop
lahf
push
add
jae
add
out
cmp
xor
pop
in
js
neg
mov
cmp
(bad)
push
les
push
sub
cmp
add
push
inc
js
arpl
push
xor
cmp
call
xor
cmp
ror
adc
dec
or
aad
push
dec
js
into
std
or
shl
sbb
xor
test
pop
adc
sub
xor
jl
sahf
sub
mov
pop
jbe
push
or
adc
enter
popa
cmps
mov
es
fadd
rcl
pop
sbb
xchg
push
mov
stos
cmp
sub
cld
shr
inc
ins
xor
mov
int3
add
dec
or
push
add
jbe
xor
lds
push
lea
mov
loop
push
cld
dec
sub
dec
jmp
div
sar
dec
cmp
jbe
push
pop
in
sbb
mov
dec
or
sub
inc
loop
push
mov
shr
lea
not
and
dec
jne
(bad)
scas
jp
and
adc
mov
pusha
cmp
pop
push
mov
push
push
sbb
dec
pop
add
add
cmps
and
push
or
lods
mov
jmp
clc
and
std
dec
(bad)
sub
and
sti
add
mov
dec
pop
cmp
out
retf
pop
test
clc
imul
(bad)
push
lea
inc
or
jno
mov
cmp
shr
test
add
xor
fild
adc
loopne
mov
sub
push
jle
pop
dec
add
cmps
gs
adc
lock
stos
and
outs
outs
test
mov
mov
inc
adc
dec
xchg
jns
or
dec
pusha
mov
sbb
inc
mov
mov
js
push
xchg
ds
call
inc
(bad)
push
fisttp
dec
or
jmp
dec
adc
(bad)
push
mov
or
movs
mov
add
je
xchg
adc
jp
add
and
test
pop
mov
neg
loope
add
scas
jp
icebp
mov
(bad)
aas
gs
push
or
push
and
lahf
cmp
dec
adc
cmc
mov
and
push
push
push
mov
imul
and
xor
sbb
add
mov
fild
enter
arpl
push
jl
add
sub
cmp
dec
or
mov
sbb
das
mov
pushf
pop
mov
test
lock
and
adc
test
push
ja
add
js
add
dec
adc
les
or
mov
jmp
or
xor
adc
xor
js
adc
sar
fwait
or
inc
lds
mov
pusha
pop
or
and
test
shl
aaa
rol
inc
jmp
ror
pop
xchg
or
rol
repz
sub
or
hlt
or
add
sub
popa
sbb
popa
outs
add
movs
adc
jl
pop
xchg
inc
(bad)
sub
shr
out
paddb
clc
inc
nop
cld
or
ja
mov
cld
lock
jne
fld
iret
dec
jne
je
test
movs
or
xor
dec
sbb
test
sub
fs
inc
push
jge
cmp
mov
mov
lock
jmp
jne
or
lds
jmp
mov
ds
or
adc
sbb
sub
pop
shr
and
inc
jb
cld
sub
dec
cmp
add
add
jle
or
inc
jl
test
sub
fnstcw
repz
stc
add
mov
add
pop
xor
mov
pop
inc
stc
sbb
clc
and
nop
es
test
in
add
cmp
nop
inc
inc
jae
dec
or
push
jns
popa
aas
push
dec
sub
add
dec
dec
mov
sub
adc
push
inc
mov
cs
fst
xor
fwait
pop
hlt
lea
call
adc
jle
mov
jns
cmps
imul
xor
push
pop
call
iret
mov
pop
add
and
and
cmp
test
or
sbb
adc
cwde
stos
ins
xor
mov
mov
sub
cmp
(bad)
clc
jl
loope
or
mov
sub
pop
xor
adc
add
dec
jp
movs
(bad)
adc
push
mov
mov
push
cmp
xor
xor
cmp
dec
mov
sbb
xchg
fisttp
mov
mov
ja
add
dec
ficom
out
sbb
fiadd
fimul
or
mov
mov
sahf
jbe
lock
or
mov
xchg
xchg
cmp
lods
dec
into
mov
out
cmp
(bad)
xchg
xor
jns
dec
cli
sbb
cs
mov
add
mov
and
add
lods
pop
and
inc
cmp
push
sbb
xchg
clc
push
push
jge
(bad)
shr
adc
aas
mov
dec
in
or
scas
pusha
inc
fsubr
push
je
fldcw
push
nop
cmp
and
dec
xlat
or
adc
out
or
push
jne
mov
lahf
or
fnstenv
jb
in
jbe
or
jae
xor
aaa
jno
popf
outs
arpl
clc
ins
and
push
and
and
icebp
gs
leave
cmp
dec
dec
push
ret
nop
loopne
adc
or
mov
dec
sbb
and
loope
and
mov
dec
lock
outs
pop
iret
jne
mov
or
mov
lods
mov
adc
mov
dec
mov
fiadd
jne
mov
push
pop
outs
leave
inc
test
adc
xchg
push
pushf
mov
sub
icebp
and
jbe
fdivr
rcl
call
dec
add
aad
push
pop
xchg
sbb
iret
push
and
dec
sbb
sbb
inc
mov
dec
jne
cwde
popf
pop
lock
repnz
jmp
jp
mov
adc
and
jne
aaa
pop
sbb
dec
push
and
shl
jp
mov
inc
call
push
or
das
pop
imul
jle
push
push
or
mov
cld
or
sbb
inc
or
push
mov
inc
inc
mov
ja
jle
push
mov
call
add
shr
aaa
lods
lods
test
lea
ds
sbb
mov
into
(bad)
cmp
and
call
add
and
idiv
mov
sbb
loopne
push
sbb
pop
jb
or
xor
jp
pop
arpl
fdiv
jge
and
mov
fcomp
xor
push
(bad)
icebp
push
mov
jp
or
ins
test
scas
jp
fldcw
and
add
and
retf
xchg
std
ss
shl
int3
mov
add
divps
dec
jnp
jmp
pop
lock
inc
cmp
cmp
sub
add
push
mov
or
add
ja
pop
es
adc
or
inc
push
and
in
add
dec
push
mov
xchg
inc
fisttp
or
push
sub
add
aam
ins
sti
ficomp
fcomp
(bad)
imul
sub
adc
push
daa
xlat
lock
je
out
pop
jne
imul
adc
push
std
pop
or
pop
mov
sbb
ret
mov
les
jno
es
mov
fcom
js
push
or
or
jmp
iret
inc
test
or
int
inc
fisubr
clc
hlt
and
fisttp
push
add
(bad)
mov
pop
adc
or
jae
cld
loopne
(bad)
fdivr
xor
sbb
ret
add
pop
push
hlt
inc
inc
dec
test
js
jne
daa
into
sub
aas
xor
nop
pusha
push
or
jns
into
shl
jae
or
push
ds
popf
call
jp
mov
popa
push
jns
xor
jecxz
shl
and
mov
fwait
ins
add
adc
jge
jmp
call
or
push
push
mov
int3
cmp
(bad)
xchg
and
add
cmp
mov
cmp
ror
sub
mov
cs
test
dec
cs
pushf
mov
sub
jbe
stc
sbb
mov
xchg
(bad)
push
xchg
push
and
add
addr16
(bad)
dec
add
es
adc
ret
adc
lods
or
ins
push
ret
pop
add
imul
xchg
arpl
fsubr
mov
pop
rol
lea
add
leave
sub
nop
fist
repnz
sbb
fidivr
add
mov
inc
sahf
push
inc
pushf
fistp
xor
adc
sbb
pop
and
popf
mov
or
adc
and
sbb
(bad)
or
cmp
call
xor
and
loope
adc
and
les
std
xchg
push
call
aaa
int
ret
test
shl
(bad)
enter
jle
leave
jl
xchg
sbb
inc
call
xor
test
sub
aaa
sbb
nop
sub
(bad)
lahf
call
enter
inc
leave
adc
mov
enter
pusha
call
add
pop
sbb
fmulp
call
inc
sub
pusha
push
xchg
call
xchg
inc
push
jns
mov
shl
xchg
addr16
add
mov
mov
and
or
sub
push
ds
test
mov
cmp
mov
in
rep
popf
or
push
hlt
xchg
xchg
push
sub
and
and
jle
nop
add
or
mov
ret
push
enter
and
enter
or
xchg
xchg
in
mov
les
add
(bad)
in
xchg
add
jmp
lahf
call
(bad)
cld
ins
js
cmps
enter
cmp
rol
mov
sysret
pusha
cmc
or
push
push
xor
(bad)
cli
and
(bad)
mov
iret
rol
dec
test
xor
aas
ss
jne
mov
mov
sub
jbe
push
mul
adc
lea
cdq
js
mov
push
jmp
mov
push
xor
sbb
or
xchg
pop
rcr
je
lock
dec
xor
je
mov
or
adc
data16
sbb
popa
imul
sbb
add
fisttp
lods
inc
jno
dec
push
mov
mov
lea
dec
jo
add
es
push
jnp
adc
push
imul
mov
shr
lds
inc
push
fincstp
ret
clc
cmp
cmp
add
add
push
cmp
sbb
bound
dec
add
shr
adc
add
xchg
sbb
push
das
mov
push
sub
js
cmp
sub
mov
mov
out
add
add
mov
mov
js
add
add
add
pop
mov
in
(bad)
jnp
or
adc
fwait
call
inc
std
jne
popf
push
call
or
fidiv
inc
cld
push
ds
sbb
add
jmp
cmp
add
add
push
adc
das
fnstenv
mov
int3
in
mov
inc
int3
and
not
and
inc
mov
or
and
adc
adc
sub
push
dec
loope
inc
loopne
add
cmps
imul
sub
enter
mov
pop
pop
(bad)
mov
push
dec
adc
cmps
inc
retf
outs
jmp
(bad)
je
pop
sbb
add
in
shr
fwait
outs
cmp
sub
sbb
dec
mov
jmp
movs
xchg
je
push
or
aam
fadd
clc
and
enter
fnstsw
fsub
call
dec
jae
lock
jns
dec
sub
icebp
cwde
push
or
retf
sti
ins
leave
pop
jmp
jo
push
mov
jge
mov
mov
xlat
das
mov
sbb
outs
dec
sti
je
dec
je
add
and
sbb
push
cdq
xor
call
ins
ins
jmp
dec
mov
into
add
int
push
jbe
sub
sbb
iret
out
jo
fwait
add
das
sbb
inc
test
stos
cmp
aaa
xchg
adc
dec
fmulp
jl
push
je
push
jo
sub
ins
pop
push
or
fst
push
shl
push
icebp
inc
push
inc
aaa
jne
mov
cmp
repz
lock
mov
and
sub
lahf
aas
retf
mov
push
push
sub
iret
jnp
push
imul
fwait
mov
jecxz
fdivr
pop
pop
sub
test
or
sti
inc
push
push
mov
mov
push
xor
ins
jl
xchg
in
jle
push
jle
inc
out
jge
adc
pop
push
inc
std
adc
or
in
mov
push
ja
xchg
jmp
inc
fadd
pop
sub
or
aas
pop
lods
sub
test
fmul
shl
pop
enter
cmp
test
push
add
jne
push
push
sbb
imul
add
sub
and
mov
adc
cmp
fcmovnb
outs
sbb
add
push
pusha
cdq
and
out
ret
into
adc
lods
adc
out
cdq
js
xchg
(bad)
push
or
and
pop
cmps
mov
fdiv
pop
push
test
add
in
sar
and
pusha
cdq
mov
lods
std
jge
inc
lock
mov
mov
dec
cmps
push
clc
mov
ror
inc
add
pop
inc
pop
jecxz
movs
jnp
jg
xchg
dec
sbb
pop
sar
cli
fld
arpl
and
repnz
add
xchg
inc
cmp
stc
mov
aas
xchg
mov
mov
mov
ds
inc
pop
push
inc
push
or
std
pushf
lea
mov
or
mov
mov
mov
mov
cdq
cmps
mov
mov
leave
ror
sbb
lock
adc
dec
xchg
fldpi
xchg
push
pop
or
add
inc
retf
in
sub
in
adc
test
mov
cmp
hlt
lahf
pop
imul
or
mov
pop
std
cs
sbb
jmp
or
mov
mov
sub
je
or
inc
pusha
call
mov
or
jne
inc
sub
pop
aad
pop
cs
pop
and
ss
xor
lea
inc
jne
movs
pop
mov
xor
or
adc
xchg
cmps
rcl
out
cmp
push
int
lds
movs
test
pop
lods
jl
cmp
movs
dec
ror
dec
push
leave
inc
(bad)
dec
xchg
fwait
test
inc
mov
push
lea
retf
cs
sub
(bad)
xor
test
add
clc
mov
imul
xchg
icebp
je
call
dec
adc
inc
push
inc
cmp
jl
lods
jne
in
mov
push
inc
jne
and
inc
mov
(bad)
cwde
add
and
push
and
jne
xor
in
jno
stc
mov
rcr
jg
test
mov
mov
sbb
xchg
(bad)
jns
pop
in
sbb
daa
mov
sahf
add
(bad)
ret
cmp
dec
adc
std
loopne
fisub
in
mov
call
jmp
mov
fs
not
loopne
sub
ret
pop
and
scas
leave
sbb
mov
adc
lea
pop
ins
add
ror
mov
std
dec
sub
jecxz
xchg
xor
xor
mov
shr
std
dec
mov
or
addr16
in
dec
sahf
lods
lock
fdivr
adc
sbb
ret
sub
lods
out
and
shr
push
nop
(bad)
xchg
je
in
or
ins
add
mov
jle
push
and
pop
cmp
lahf
cmc
pop
call
aas
mov
dec
mov
cs
cmp
mov
std
fsubr
jns
mov
fdivr
fwait
gs
mul
in
mov
inc
fxch
pop
aad
sub
movq
or
lea
mov
mov
ja
cmps
and
mov
(bad)
jmp
mov
mov
mov
cmp
inc
daa
mov
and
mov
xchg
sbb
mov
mov
cs
xor
mov
push
mov
xor
imul
xchg
xchg
push
clc
popa
xor
rol
mov
inc
into
inc
inc
adc
(bad)
mov
xchg
jl
push
cmp
cmp
mov
sbb
std
xor
and
std
lock
push
sub
(bad)
xor
mov
mov
test
xchg
push
loopne
mov
dec
std
inc
repz
lods
push
ja
push
mov
popa
lods
mul
mov
fdivrp
or
and
out
mov
dec
cs
pusha
aad
outs
(bad)
sub
test
sub
inc
push
popa
enter
pop
das
rcr
add
movs
mov
sar
lock
xor
int3
jp
or
jmp
int3
sbb
jmp
sub
lods
pop
(bad)
adc
and
out
in
ds
cmp
jne
loopne
int
test
xchg
lahf
int
test
and
xchg
mov
mov
lock
dec
into
mov
enter
rol
push
xor
bound
mov
retf
xchg
mov
movs
adc
add
or
js
inc
push
inc
retf
push
pusha
jp
jne
cmp
xchg
sbb
cmovge
or
fnstcw
das
or
pop
jno
push
enter
je
inc
cmp
movs
dec
std
std
std
sub
sub
loope
sub
fsubr
test
mov
jno
(bad)
add
mov
adc
aad
popf
jg
loope
out
sar
ss
and
push
xor
mov
or
push
iret
shl
adc
sbb
gs
aas
aam
xchg
lock
pop
pop
leave
fs
retf
mov
sub
sar
and
cmp
and
loopne
add
jae
sahf
retf
adc
adc
sub
cmp
ja
fimul
scas
add
or
add
jo
mov
loope
jecxz
mov
mov
ret
sub
jmp
xlat
jo
(bad)
lock
in
and
dec
dec
lods
inc
pop
gs
lock
rep
aad
cmps
pop
add
xor
add
enter
out
test
mov
inc
scas
movs
call
xchg
or
mov
xchg
inc
test
inc
(bad)
in
adc
adc
and
cmp
inc
mov
enter
mov
mov
lods
sbb
iret
xor
stos
fs
(bad)
outs
add
xchg
sub
push
cmp
ja
sub
(bad)
xchg
cdq
stos
xchg
or
sti
pushf
pop
xchg
pop
push
inc
sahf
sbb
push
and
es
es
mov
fdivr
sti
mov
sbb
(bad)
std
mov
jb
loope
xor
pause
retf
mov
cmc
sbb
mov
mov
mov
and
pop
pop
and
or
nop
pop
xor
inc
cs
xor
sbb
sbb
imul
xchg
cpuid
(bad)
stc
pushf
loop
aaa
xchg
stos
mov
ds
mov
mov
and
cmp
inc
dec
add
aad
lahf
std
push
inc
es
pushf
movs
bound
sbb
dec
push
xor
adc
test
enter
test
test
adc
pop
jb
adc
leave
enter
pushf
and
push
sub
or
push
mov
addr16
mov
je
stc
outs
movs
data16
xchg
jg
aaa
fidiv
pop
add
inc
add
iret
sar
jns
retf
sti
shl
ret
cmp
mov
(bad)
loopne
and
xor
xchg
or
add
pop
outs
or
mov
jmp
jmp
add
jecxz
mov
test
fadd
loop
inc
sbb
xor
popa
cmp
push
mov
mov
into
mov
sub
add
jne
push
xchg
mov
mov
dec
or
xor
or
test
add
push
into
cmp
mov
or
cdq
mov
pop
mov
inc
pop
or
mov
lahf
and
dec
push
retf
jle
jge
jno
test
je
mov
xor
bound
ret
push
mov
sbb
addr16
add
repnz
in
ret
and
mov
jmp
add
sub
add
les
mov
push
mov
shl
fucomip
lock
mov
bound
scas
jb
or
or
inc
ret
cs
call
out
pop
mov
and
add
add
clc
mov
mov
cmp
lock
push
xchg
xor
icebp
gs
add
lods
mov
addr16
push
xor
cwde
lahf
or
xor
mov
mov
fistp
das
dec
mov
push
add
je
and
clc
inc
push
inc
jle
shr
sbb
jae
test
outs
add
sub
pushf
pop
sub
inc
jp
adc
mov
and
inc
cmps
gs
and
cmp
(bad)
movs
movs
and
pop
push
adc
or
inc
cdq
add
xchg
sub
xchg
shl
add
mov
pop
jae
and
ror
sahf
lea
gs
mov
mov
add
xchg
jbe
dec
pop
jmp
or
inc
add
mov
or
mov
mov
xchg
call
ret
bound
and
inc
mov
in
push
and
jno
add
addr16
lea
adc
dec
mov
mov
mov
jo
and
xor
mov
xlat
fsub
iret
add
inc
pop
mov
push
jns
test
add
sbb
stos
add
push
adc
cmc
dec
test
push
inc
imul
fwait
imul
out
jo
int
ror
fmulp
cmp
sub
fnsave
dec
push
add
je
js
adc
(bad)
and
xchg
(bad)
pop
push
cli
mov
mov
out
inc
cmp
retf
imul
push
pop
sub
and
push
pop
push
clc
add
dec
je
repz
gs
xchg
aas
fcmovb
lea
and
cld
add
les
loope
mov
inc
rcr
adc
add
adc
shr
call
mov
daa
shr
rcr
shr
rcr
or
sub
div
mov
fs
inc
mul
add
mov
push
cmp
or
cmp
add
or
and
add
jmp
or
(bad)
jae
pop
adc
icebp
and
mov
xchg
dec
push
pop
sub
mov
or
add
dec
xor
cmp
add
jb
inc
add
stos
and
test
inc
cmp
and
loop
cmp
dec
daa
and
push
imul
pop
xchg
ror
bound
push
mov
jno
push
jp
shl
cmp
ret
fimul
pop
or
or
or
(bad)
adc
push
dec
or
lahf
ret
pop
enter
imul
sbb
pop
ja
push
cs
leave
mov
push
and
sbb
movs
adc
and
pop
jbe
inc
scas
aad
pop
hlt
invd
mov
mov
push
pop
mov
or
add
add
fcmovnu
or
dec
pop
or
fidiv
out
imul
or
adc
or
xor
mov
test
dec
mov
adc
les
dec
mov
int
mov
je
pusha
rcl
inc
add
test
test
lods
movs
mov
cmp
rcl
data16
jge
imul
jle
pop
pop
stc
out
cmp
xor
and
sar
or
loop
lock
fs
arpl
cli
inc
sbb
in
mov
pop
or
sbb
test
cmp
sbb
pop
sub
push
pop
das
jbe
dec
aam
fs
ror
pop
leave
add
pop
push
sbb
xor
mov
dec
or
xor
shr
out
push
sub
dec
arpl
mov
loopne
adc
in
hlt
add
sub
cmp
xlat
mov
adc
push
mov
add
(bad)
sti
or
mov
int
mov
and
or
xor
xor
and
or
shl
cli
jmp
push
push
dec
lods
out
mov
rcl
pop
xchg
jg
pop
sub
sub
fisttp
jmp
mov
push
mov
pop
dec
or
ror
in
xchg
pop
xchg
pusha
iret
xchg
les
pop
es
add
jae
scas
or
or
je
idiv
arpl
clc
mov
aam
inc
pusha
cs
sbb
call
mov
fwait
outs
ja
lods
sub
adc
cmp
jge
mov
ffreep
or
adc
jb
js
jmp
fnsave
scas
lahf
mov
sbb
push
push
test
sub
ins
in
test
nop
or
xor
sub
adc
fs
pop
or
and
sub
push
inc
out
cdq
ins
loop
ins
in
das
jg
fldenv
push
data16
xor
addr16
es
retf
jo
cdq
sub
popa
loope
je
scas
mov
inc
xchg
test
ror
pusha
xor
jp
es
loop
cmps
adc
add
retf
je
xor
pop
test
ja
jmp
fsub
shl
push
adc
mov
retf
clc
rol
cmp
xor
add
xor
(bad)
mov
xchg
push
and
ins
mov
in
or
out
inc
clc
or
jne
push
icebp
and
sub
cli
ss
push
jecxz
es
cmp
je
push
out
repz
repnz
fadd
aam
xchg
pop
xor
out
add
inc
(bad)
outs
or
cld
pop
xor
les
repnz
mov
sbb
cmp
jo
les
and
scas
cld
pop
pop
sub
adc
sub
(bad)
push
hlt
cmp
hlt
cmp
and
icebp
les
cmp
add
xchg
inc
dec
dec
pusha
and
jno
mov
dec
inc
repz
adc
int3
and
jo
retf
test
and
jo
imul
daa
sub
test
jmp
into
js
jge
pop
inc
jb
cmc
fcom
mov
stos
cmps
lods
and
sbb
int3
cmp
jmp
mov
lahf
bound
jge
sbb
imul
push
xchg
mov
jnp
js
mov
jmp
les
xchg
xchg
popa
inc
cmp
pop
je
pop
loope
fcomp
pop
push
cmp
or
fild
popa
ss
or
call
daa
xchg
add
add
test
pop
mov
sbb
aad
adc
stc
aam
dec
push
out
mov
push
icebp
adc
add
cwde
or
in
fcomp
adc
cld
mov
inc
push
push
adc
call
inc
or
pop
inc
mov
push
jl
and
xchg
adc
and
jae
or
inc
sub
(bad)
rcr
mov
sub
push
dec
jne
xchg
add
popa
push
sbb
fcom
sub
sar
popa
mov
jecxz
rol
push
(bad)
dec
inc
inc
adc
mov
mov
inc
lods
enter
pop
je
sti
xor
push
pop
es
pop
int
push
push
mov
or
and
push
xchg
test
pop
fcmovnb
loopne
mov
jmp
add
add
test
mov
xchg
lock
or
je
loopne
and
sar
or
mov
add
movs
sar
inc
add
sar
pop
mov
(bad)
pop
add
add
arpl
sub
adc
and
pop
pop
cwde
sbb
ins
cmp
xchg
dec
adc
sbb
mov
sbb
lods
mov
mov
outs
mov
test
or
push
aas
aad
aaa
in
jge
mov
cmps
mov
aaa
and
fcmove
sbb
(bad)
inc
dec
shl
setle
push
jmp
sub
(bad)
push
push
sbb
mov
or
inc
fldenv
ins
or
loope
add
push
xor
inc
inc
cmp
call
jo
and
rol
inc
mov
ins
sahf
cmp
dec
inc
inc
mov
(bad)
fmul
jne
repnz
add
jl
hlt
mov
std
xchg
xor
and
mov
dec
dec
inc
clc
mov
sub
add
pusha
jb
jo
hlt
ret
jmp
test
call
jb
fadd
push
xchg
aam
or
into
fadd
cmp
shl
pop
mov
adc
shl
sbb
jbe
dec
xor
icebp
push
push
shl
pushf
xchg
add
(bad)
push
pop
push
dec
aam
and
mov
rol
mov
xor
or
or
or
push
and
sub
cmp
xor
inc
mov
ins
mov
js
into
mov
into
add
mov
mov
adc
push
adc
es
sub
(bad)
jl
pop
pusha
jo
or
sbb
cmp
jo
cmp
ror
add
nop
and
sub
and
and
push
cmp
daa
adc
(bad)
movs
test
mov
sar
sar
jg
popf
or
or
adc
inc
and
mov
add
mov
push
mov
mov
fiadd
pop
or
xchg
cmp
mov
add
out
add
and
pusha
sub
and
int3
xchg
mov
mov
mov
or
inc
adc
jl
mov
xchg
pop
repz
and
or
or
jb
xchg
adc
std
adc
ret
mov
cmc
push
push
inc
dec
sub
clc
or
test
pusha
add
xor
ds
test
add
mov
adc
adc
sub
cmp
and
sti
add
push
ret
xor
loope
pop
sbb
not
stos
or
mov
aad
or
jbe
test
jb
out
mov
cli
add
mov
xor
out
push
imul
pop
cmc
lock
cmps
cmp
push
rcr
(bad)
imul
xor
and
ret
(bad)
mov
test
adc
loopne
or
dec
jo
adc
not
push
ror
add
enter
and
les
jb
sbb
dec
add
ret
sub
loope
jge
sub
jmp
nop
out
cmps
sar
fiadd
nop
sbb
jg
adc
and
xchg
dec
movs
xor
pusha
jo
mov
and
popf
(bad)
xchg
xor
add
push
pop
cmp
cli
pop
cmp
inc
jnp
mov
adc
retf
xchg
jo
add
push
mov
cmps
jge
lods
mov
stos
ss
neg
pop
cmp
or
lock
push
dec
mov
mov
xchg
fimul
sar
cmps
mov
push
dec
xlat
and
cwde
popa
mov
ins
loope
not
in
sbb
test
and
push
dec
add
aad
add
jp
jae
test
stos
pusha
pop
js
mov
jmp
ins
in
(bad)
add
jmp
retf
jle
jo
push
add
xor
jnp
cmp
push
jae
jmp
arpl
xor
mov
ret
mov
xchg
rcl
je
add
inc
mov
call
test
or
hlt
clc
inc
dec
adc
in
mov
test
shr
xor
push
pop
mul
in
cmp
add
or
pop
verw
push
pop
adc
fsubr
push
dec
adc
push
and
out
cmps
push
mov
outs
inc
or
ds
push
jbe
jle
sahf
outs
sbb
push
test
sub
out
sbb
hlt
call
adc
ror
ja
dec
dec
retf
loope
or
jecxz
mov
ret
test
into
and
call
sub
or
mov
sub
ja
cmc
addr16
add
sub
jge
imul
add
sub
(bad)
lock
in
lock
rep
sbb
jne
mov
xchg
in
in
mov
sbb
mov
or
and
jne
push
adc
pop
cmps
dec
add
stc
add
add
sbb
hlt
pop
test
cmp
push
sub
(bad)
lea
jno
call
or
inc
mov
mov
inc
mov
fsub
sub
fadd
adc
sar
pop
in
add
push
test
test
jno
xlat
add
sbb
mov
mov
out
or
fcomp
sub
popa
nop
sar
and
scas
ins
lock
or
or
sahf
push
xor
push
push
mov
xor
xchg
xor
push
push
and
jne
fadd
xchg
mov
add
inc
pop
mov
and
push
pop
xor
mov
or
mov
cmp
pop
and
xor
sbb
enter
mov
or
imul
fiadd
sub
aam
sar
ret
xor
cs
sbb
sub
inc
xor
adc
mov
push
sbb
ds
adc
adc
push
jns
fist
xor
jne
dec
and
xlat
adc
outs
jo
push
sub
mov
jae
adc
inc
add
movs
je
imul
mov
imul
fld
inc
movs
fsubr
dec
lahf
mov
mov
call
aaa
movs
push
popa
cmps
inc
adc
movs
jge
xchg
adc
repnz
imul
fsub
cmp
adc
cld
outs
push
xor
cmp
inc
jmp
fs
popa
mov
mov
sub
cmp
imul
ret
jmp
aas
sbb
movs
add
add
add
fsub
popa
push
mov
adc
xchg
jle
inc
push
mov
cwde
dec
sub
xor
fadd
xor
mov
mov
clc
idiv
xor
jle
ins
outs
ja
cld
and
add
sbb
pushf
mov
mov
call
xlat
ret
add
sbb
or
test
pop
sub
rol
push
leave
and
sbb
or
sar
add
adc
push
int3
and
or
pop
pop
sbb
adc
lsl
jmp
sbb
adc
push
push
inc
sbb
adc
or
cmp
or
daa
test
xor
or
pop
mov
ficom
scas
push
add
jmp
sbb
stos
imul
popa
add
scas
push
inc
leave
out
pop
clc
inc
in
jne
mov
ret
repz
lock
adc
dec
rcl
or
rcr
inc
pop
dec
sbb
ror
rcl
cmp
jo
cmp
pop
add
std
cmp
add
lea
loopne
or
push
jae
fwait
and
mov
and
jae
sub
inc
jp
test
ret
mov
mov
add
dec
inc
sahf
test
and
sbb
mov
lock
les
xchg
add
mov
pop
popf
ss
sbb
movs
adc
into
pop
inc
jb
pusha
jl
mov
or
push
pop
loop
sbb
mov
ret
sub
pop
add
or
mov
js
test
hlt
aam
add
inc
jmp
mov
ret
push
aas
test
sbb
fild
push
je
xchg
cli
adc
lea
lea
or
cmps
mov
or
xor
mov
or
mov
mov
pop
or
jl
out
add
mov
mov
push
sahf
mov
sbb
lea
adc
ja
push
je
pusha
inc
mov
or
mov
mov
mov
jno
add
sub
pop
xor
clc
xchg
ds
sbb
call
pop
sbb
shr
ficom
sahf
mov
out
dec
jl
adc
fwait
aad
xor
mov
test
push
mov
aam
inc
adc
movs
adc
cld
push
jl
and
inc
leave
aaa
push
or
dec
dec
dec
adc
cmp
mov
and
sub
cmp
cmp
xor
cmp
dec
cmp
inc
and
jb
jb
inc
cmovs
pop
jo
push
pop
add
pushf
pushf
fs
pushf
pushf
je
jl
rcr
test
mov
dec
cwde
pushf
mov
movs
test
sub
inc
push
sub
sub
ret
cmp
cmps
mov
inc
mov
and
shl
movs
mov
data16
dec
adc
dec
int
xor
adc
sbb
xor
sbb
pop
and
int
xor
and
and
inc
imul
mov
pop
push
pop
mov
adc
enter
cmp
inc
xor
push
leave
ret
cmp
sar
(bad)
mov
add
dec
jne
out
cmp
adc
push
retf
inc
sbb
mov
cmp
dec
add
mov
cli
fsubrp
add
adc
cmp
and
push
cmp
add
aam
pop
rol
add
dec
int3
cmp
pushf
repnz
add
xor
rcl
inc
jge
scas
shl
xor
jge
add
pop
or
inc
pop
sahf
xor
inc
pop
clc
les
nop
cdq
mov
lock
inc
sub
xor
xchg
ret
dec
push
lea
shr
jl
je
sub
mov
push
xor
mov
retf
(bad)
imul
sub
sbb
out
mov
add
fmul
in
call
scas
mov
inc
pop
int3
pop
sbb
fisub
cmp
pop
adc
sbb
sbb
cmps
aam
add
or
sub
pushf
jne
xchg
idiv
out
inc
push
dec
and
loopne
jge
or
ret
dec
sbb
es
popa
sahf
add
stos
mov
push
enter
push
popa
shl
xor
ret
inc
cmp
pop
mov
int3
nop
cmp
xchg
mov
or
push
jae
push
pop
cmp
jne
ret
mov
dec
jg
mov
xlat
aad
clc
cmp
mov
or
lock
adc
pusha
les
xchg
jmp
cmps
dec
or
pusha
jmp
jle
cmps
push
dec
xchg
add
loopne
cmp
pop
add
dec
dec
loop
pop
mov
call
or
gs
call
hlt
xor
dec
cmp
mov
pop
pop
add
cmp
mov
jle
push
push
mov
push
add
jp
or
sbb
xor
and
inc
and
push
lods
stos
enter
and
adc
ret
add
neg
sub
fwait
icebp
jp
cwde
retf
ficom
lods
ins
push
js
sbb
cmp
mov
cmps
jge
(bad)
mov
in
sbb
push
mov
repz
in
cmp
xor
and
mov
das
inc
sub
pop
cmp
add
xchg
inc
ret
and
out
mov
add
sar
mov
or
push
mov
jle
ins
mov
popa
retf
aad
sbb
inc
iret
lods
add
ins
or
push
adc
aad
pop
popf
add
cld
mov
cdq
add
pusha
inc
add
test
outs
adc
inc
push
mov
cdq
sub
sub
ret
rol
inc
rol
ret
fiadd
rcr
ss
imul
cld
or
pop
cmp
in
shl
sub
adc
(bad)
adc
push
hlt
mov
lods
test
sar
add
loope
cmps
cmc
fstp
(bad)
out
retf
add
xchg
pusha
cwde
push
mov
xchg
loope
retf
(bad)
cmp
inc
inc
mov
ds
sbb
inc
or
dec
loope
add
push
(bad)
ins
rcr
lea
mov
lods
xor
std
push
mov
jne
xchg
cmp
ja
test
add
xor
dec
sub
shl
shl
cmp
mov
or
sbb
scas
test
rol
jno
mov
mov
sbb
scas
mov
rol
cmp
cmp
jne
movzx
or
popa
xchg
sbb
shl
inc
into
sbb
out
inc
int
popf
ficomp
push
jmp
inc
stc
ins
jmp
jl
ins
iret
test
stos
cmp
add
js
pusha
and
sahf
cmp
sbb
mov
jb
ds
adc
push
sysenter
sbb
enter
dec
add
sub
loop
jo
movs
lahf
mov
jnp
(bad)
jmp
xchg
mov
add
pop
mov
aaa
xor
xlat
mov
cmp
mov
icebp
pop
scas
sub
or
dec
mov
adc
cmp
fmul
scas
loop
stos
push
and
inc
xchg
cmp
push
pop
inc
add
mov
daa
jmp
loopne
cli
or
inc
xor
mov
dec
add
js
add
xchg
mov
xor
adc
lods
push
sub
fisttp
or
inc
inc
sbb
or
sub
mov
cmps
in
bound
pop
add
fs
aas
mov
lods
adc
push
inc
sbb
adc
into
int3
(bad)
push
xchg
push
xchg
(bad)
sub
and
add
push
cs
sbb
push
pop
lock
scas
xor
fs
std
add
add
jno
push
sbb
mov
fstp
es
outs
out
data16
test
je
add
jmp
add
repz
clc
mov
mov
sub
sbb
(bad)
lea
mov
dec
ret
ret
mov
lods
adc
dec
mov
mov
dec
push
cs
jmp
ins
cmp
adc
xor
jle
xchg
fidivr
xor
fild
inc
cmp
outs
lods
mov
sti
and
sbb
addr16
das
or
mov
cmp
pop
pop
pop
test
or
cmp
mov
mov
nop
cwde
leave
je
xlat
test
int
pop
inc
sbb
in
aad
add
inc
jo
push
add
inc
push
mov
sbb
and
sbb
test
and
push
push
or
pop
jmp
lods
loopne
cmp
adc
fdiv
and
push
lahf
or
das
loope
jmp
push
adc
sub
outs
repz
or
xor
adc
and
jmp
mov
add
mov
mov
call
sub
ja
mov
or
inc
sbb
scas
xor
or
shl
ret
ins
movs
fiadd
pminsw
pop
inc
nop
movs
adc
icebp
push
mov
out
pushf
cli
mov
pop
mov
(bad)
iret
imul
inc
pop
add
lock
hlt
pop
adc
mov
cmp
in
mov
sbb
or
jne
mov
push
mov
dec
mov
retf
xchg
(bad)
into
sub
sub
pop
add
or
cs
into
loopne
(bad)
pusha
vunpcklps
mov
dec
sub
push
ret
cs
mov
sbb
jo
xchg
gs
jle
stos
jecxz
pop
cmp
lods
jg
cs
fstp
rcl
xchg
dec
sub
adc
adc
jge
addr16
test
sbb
mov
ror
movs
inc
leave
mov
push
cdq
push
mov
mov
popa
cmp
and
mov
adc
push
pop
lods
pop
pop
cdq
js
dec
pop
pop
or
inc
and
fadd
and
cmp
call
dec
call
sub
je
xor
nop
push
mov
inc
into
(bad)
call
push
dec
cli
ds
cwde
js
test
jecxz
cs
cmp
or
push
test
push
sub
je
inc
cmp
shl
test
mov
js
add
js
pop
sbb
push
add
ja
mov
push
popa
add
mov
and
loop
sbb
add
loopne
inc
cmp
pop
adc
push
add
ins
mov
add
push
or
inc
fst
dec
mov
push
dec
jns
jmp
ret
sbb
xor
jecxz
jo
dec
pop
mov
loop
jle
adc
push
fwait
mov
cmp
ret
push
rcr
cmp
inc
dec
mov
gs
cmp
sahf
sbb
out
fcom
add
add
and
sbb
es
dec
lock
inc
push
(bad)
(bad)
out
push
cmp
mov
or
pop
ins
sub
cmp
cmp
movs
lea
jmp
sub
jns
lods
sub
jmp
sub
adc
adc
cmp
sub
jmp
dec
xor
mov
mov
das
push
mov
push
inc
ja
inc
dec
cmp
das
lock
pop
sbb
pop
adc
sub
sub
inc
inc
arpl
sbb
push
xchg
sbb
xor
mov
in
push
rol
jne
or
and
dec
scas
xor
mov
sbb
adc
dec
sbb
xchg
int3
cmp
ret
mov
fidivr
aas
repnz
das
adc
mov
rcr
inc
and
ror
jl
or
or
call
mov
in
sub
or
pop
mov
popf
inc
push
cmps
popf
mov
mov
and
jne
dec
sbb
or
data16
cdq
push
inc
xchg
(bad)
xor
sub
in
addps
pop
das
out
xchg
sbb
fs
and
inc
popf
test
pop
pop
jecxz
push
mov
ror
pop
sub
xchg
push
mov
pushf
leave
std
jmp
fwait
mov
loopne
sbb
mov
or
push
imul
inc
push
inc
cmc
nop
cmp
mov
xor
dec
push
popf
pushf
pop
sub
je
push
popf
mov
cmp
lods
mov
mov
push
data16
pop
div
mov
je
push
dec
(bad)
and
adc
inc
ror
pop
shl
add
xor
or
or
shl
or
adc
push
pop
fsub
jge
dec
add
and
test
and
mov
and
ret
adc
out
and
shl
dec
xor
adc
or
dec
push
jb
shr
add
xor
in
shr
and
and
arpl
adc
test
adc
dec
pslld
adc
test
xor
cmp
and
add
and
add
mov
jg
popa
jmp
jp
inc
jmp
sbb
std
or
jmp
inc
and
mov
and
inc
jl
and
jecxz
jge
add
jmp
xchg
jmp
(bad)
push
cld
or
sub
pop
xor
sub
jbe
test
mov
jle
and
push
fbstp
out
sbb
add
fstp
aas
pusha
mov
pusha
loope
pop
sub
pop
gs
and
and
mov
repnz
adc
fnstsw
sbb
pusha
(bad)
ins
jae
hlt
or
adc
sbb
pop
or
xchg
cmps
repnz
xchg
(bad)
adc
sti
add
adc
scas
cmp
out
test
fisttp
aam
xor
sbb
icebp
or
sub
lock
or
mov
xchg
inc
or
test
cmp
and
sub
xor
sbb
jmp
push
and
jnp
and
inc
add
adc
mov
inc
push
fld
fmul
sub
pushf
fimul
or
out
and
arpl
pop
xchg
clc
cmp
pop
jl
inc
fistp
pop
sub
fsubp
leave
adc
xchg
add
ret
adc
xor
retf
mov
mov
or
pop
xchg
push
and
inc
inc
aaa
sbb
out
add
sbb
aaa
neg
rol
les
sub
pushf
sbb
pop
sub
jmp
sub
push
mov
lock
psubusw
inc
(bad)
test
int3
adc
inc
push
or
div
add
push
dec
or
mov
add
cmp
stc
in
add
les
fstp
mov
imul
stc
into
jbe
or
xor
fmul
fadd
sub
add
(bad)
enter
(bad)
enter
add
xchg
xor
push
test
inc
sti
sbb
in
sbb
jp
mov
jno
dec
in
jbe
lock
pushf
or
jp
push
adc
push
sahf
jmp
pop
movs
adc
aam
bound
adc
test
and
out
pusha
pop
aam
add
sub
jbe
and
push
add
aaa
inc
call
sub
sub
mov
xchg
sbb
pop
or
inc
icebp
dec
xchg
out
ins
cdq
pop
push
pop
add
and
pop
sbb
test
and
cwde
mov
(bad)
les
fs
jl
push
dec
rcr
or
call
lock
sbb
adc
or
inc
retf
inc
add
jo
sub
hlt
xor
fild
jo
dec
out
loop
pop
clc
or
data16
add
or
call
jno
mov
xlat
inc
and
cmp
dec
neg
or
or
dec
inc
shr
ficom
pusha
jmp
dec
loopne
or
imul
imul
pop
sar
(bad)
mov
and
lahf
adc
mov
add
cli
cmp
and
xor
mov
or
jbe
(bad)
sub
xor
ds
loop
es
rcr
out
jecxz
mov
or
adc
mov
mov
jecxz
in
sar
xor
pop
mov
add
adc
imul
iret
sub
cs
shr
in
cmpps
lods
mov
rcr
icebp
stos
shl
jne
repnz
in
ret
(bad)
gs
lock
add
mov
fdivp
mov
adc
call
(bad)
cmp
push
pop
fadd
into
sub
mov
xchg
hlt
sub
add
cwde
out
mov
jl
dec
js
ret
imul
dec
in
stos
pop
or
mov
movs
push
icebp
sbb
or
ins
cmp
mov
dec
xchg
adc
xor
push
out
mov
(bad)
je
mov
addr16
push
cld
push
add
fidiv
sub
jmp
mov
jmp
mov
fstp
sbb
add
adc
xchg
imul
inc
lock
and
xor
push
or
ins
or
push
mov
iret
add
sub
shr
enter
fwait
int3
and
sub
cs
fwait
sbb
and
pushf
loopne
xchg
jle
call
jb
fsubr
mov
or
inc
mov
inc
iret
not
je
mov
xor
inc
xchg
inc
and
repnz
test
fsub
pop
call
jmp
and
cmp
repz
cmp
jbe
out
add
(bad)
fld1
and
or
popf
jno
jbe
imul
push
pop
inc
popa
pusha
push
sub
inc
mov
adc
ss
add
(bad)
je
or
or
lea
pop
lahf
ins
push
push
stos
test
mov
sub
jns
add
loopne
jbe
retf
mov
jnp
push
adc
cdq
add
fwait
pop
es
and
in
add
cdq
jp
pusha
push
jo
std
push
in
call
je
pop
nop
stos
and
mov
sub
psubsb
xchg
xor
in
out
cmp
fild
pop
in
adc
enter
in
popa
adc
loope
or
mov
lods
inc
add
xchg
in
or
nop
mov
mov
dec
jle
mov
dec
cmp
add
es
hlt
mov
ret
sub
movs
loopne
sbb
gs
in
xor
xor
push
dec
or
push
xchg
dec
and
mov
or
cmps
add
jle
xchg
shr
sub
add
mov
jg
test
add
scas
cwde
pop
test
jne
leave
(bad)
mov
hlt
mov
outs
shr
stos
repnz
pop
pop
jl
add
leave
push
jge
loope
add
dec
jo
pop
add
mov
cdq
and
add
push
inc
or
jns
dec
xchg
loopne
lea
push
jmp
sub
inc
shl
les
xchg
add
test
mov
aam
xor
sti
loop
rol
adc
outs
inc
aas
or
jmp
dec
cdq
ins
pop
and
mov
out
pop
hlt
int
mov
inc
push
into
inc
mov
lea
xor
repnz
cs
or
jb
cmp
sbb
lahf
imul
sub
adc
fld
dec
bnd
inc
jae
or
dec
mov
adc
or
push
xor
test
and
jge
push
pop
mov
add
loopne
mov
inc
mov
cmc
loope
(bad)
cmp
dec
dec
stos
inc
in
xor
pusha
mov
(bad)
addps
push
aam
xor
cmp
push
imul
movs
xor
ret
inc
hlt
push
out
dec
sahf
out
and
push
cld
not
inc
pop
lock
into
and
push
adc
sahf
push
ds
push
or
jne
shl
shr
mov
xor
and
shl
sbb
test
mov
sub
sar
call
fs
aam
adc
mov
pop
pushw
lds
dec
mov
lds
adc
push
or
leave
adc
or
cmp
jbe
sub
mov
cli
(bad)
mov
adc
dec
scas
data16
clc
pop
add
js
call
sub
or
jns
inc
lock
nop
inc
inc
add
inc
jo
pop
ret
jecxz
sbb
loope
mov
loopne
dec
jae
cmp
mov
out
add
mov
or
lea
push
jge
pop
sbb
js
and
xchg
push
cmps
into
out
outs
xchg
push
loop
lea
and
mov
sbb
ret
jge
xor
add
es
and
jecxz
or
sbb
(bad)
or
dec
and
cmps
(bad)
enter
mov
loop
stc
and
and
jl
rcr
pop
pop
xchg
in
mov
pusha
fs
jb
and
and
fs
sub
fstp
sbb
dec
gs
ins
repz
mov
movs
cmp
add
pop
inc
xor
adc
mov
or
shl
and
lds
cmp
nop
cli
xlat
inc
push
sub
and
lods
mov
or
mov
jae
sub
or
jmp
xor
rcr
xchg
add
call
xchg
dec
fcmove
sub
cmp
ja
inc
add
mov
fs
(bad)
fwait
mov
mov
add
xor
push
call
or
fisttp
aaa
jmp
pop
ds
pop
pop
mov
adc
jmp
adc
push
lock
mov
or
or
neg
test
ds
mov
cmp
cmp
cmp
jle
cmp
push
xor
(bad)
xor
int3
push
jmp
dec
push
hlt
fcom
sbb
mov
int
and
push
callw
jo
add
push
jmp
fadd
add
inc
repnz
jae
mov
ret
mov
jmp
adc
(bad)
pop
mov
mov
add
mov
nop
add
jne
clc
dec
jae
and
sbb
mov
jmp
and
outs
mov
call
inc
out
push
sub
out
adc
gs
or
test
push
and
scas
mov
xor
sub
mov
stos
sub
mov
and
je
mov
mov
jge
mov
mov
fldcw
pop
cmp
adc
add
inc
test
shl
rcr
repnz
mov
jle
outs
add
shr
mov
or
cli
and
sub
fdivr
es
dec
xor
cmp
or
jecxz
sub
push
push
out
pushf
jmp
push
cwde
xchg
mov
aam
icebp
xor
xor
dec
loopne
loopne
fiadd
in
mov
add
rol
idiv
dec
push
cwde
jge
neg
add
mov
outs
call
xlat
test
cmp
adc
cmp
adc
lock
jmp
push
mov
jge
jle
push
adc
xor
sbb
les
lods
inc
(bad)
in
dec
test
adc
mov
sar
popf
into
call
popf
mov
dec
outs
test
stos
dec
cmp
jb
mov
dec
mov
add
dec
or
add
es
pop
icebp
inc
(bad)
mov
mov
mov
push
and
and
adc
nop
jbe
sub
rol
aas
out
jle
iret
sbb
ja
pop
or
or
jae
mov
mov
test
mov
enter
mov
or
into
jne
outs
add
gs
or
cmp
cmp
jne
xchg
data16
sub
or
pop
(bad)
mov
rol
cwde
or
sbb
rcr
xor
pop
(bad)
add
ss
or
add
add
scas
sbb
cld
lock
out
shl
dec
lock
inc
push
and
mov
fdivr
sub
sahf
sub
sub
popa
call
stc
jg
add
add
mov
cs
test
js
mov
mov
xor
adc
aam
mov
(bad)
fild
jmp
push
idiv
or
in
mov
jg
or
sub
push
pop
mov
je
mov
movs
dec
fcom
ins
fadd
and
shr
or
mov
sahf
dec
or
popf
loope
jne
ins
mov
mov
push
inc
add
test
and
inc
mov
call
(bad)
add
ficomp
mov
push
call
inc
jmp
call
push
sbb
mov
mov
pop
jle
jb
jmp
mov
ror
or
ins
xor
jmp
test
or
lods
or
add
retf
push
outs
push
push
into
jmp
scas
test
out
int
jmp
jno
les
int3
xor
and
int3
test
bound
retf
das
sub
add
sar
jns
sub
nop
cdq
lds
adc
(bad)
aam
sbb
shl
inc
mov
(bad)
inc
or
xor
mov
repz
jno
mov
add
jns
iret
fist
push
sub
sahf
lock
lods
add
mov
out
push
retf
iret
je
or
sbb
push
test
pop
jne
cmp
and
ret
inc
scas
sbb
mov
or
mov
ror
jo
cmp
in
push
or
popa
dec
adc
xchg
adc
fidiv
retf
cs
or
jmp
or
stc
gs
or
out
mov
dec
cmp
je
call
add
sbb
sbb
add
or
mov
fbld
add
out
call
jp
gs
jne
push
pusha
cmc
pop
mov
or
adc
push
or
pusha
movs
ins
add
jmp
xor
adc
loope
mov
popf
xor
push
and
mov
je
xor
test
jl
pop
jno
or
leave
sti
pop
and
xchg
sbb
jp
test
add
xchg
mov
scas
add
imul
aam
xor
jbe
or
add
or
stos
gs
mov
icebp
dec
in
je
setg
jmp
push
cmp
in
clc
add
mov
mov
jg
add
add
adc
sbb
test
mov
xor
mov
es
sahf
fwait
pop
cmp
add
add
(bad)
jmp
retf
mov
retf
pop
adc
shl
sbb
fucomi
mov
sar
dec
add
pop
xchg
jb
inc
out
cs
jne
inc
dec
jns
les
sub
call
pop
mul
xchg
xlat
movs
cld
xor
push
or
add
adc
add
mov
add
cmps
outs
xor
lea
test
jo
mov
mov
adc
mov
aam
inc
lock
dec
inc
push
adc
ins
js
adc
push
xchg
out
and
mov
loope
clc
dec
shl
adc
jge
mov
rcl
mov
lods
mov
xor
shl
enter
les
sbb
shl
(bad)
cdq
popf
ror
cld
leave
inc
pusha
imul
jl
(bad)
cmp
push
inc
jl
jmp
ret
sbb
icebp
movs
call
sbb
scas
cmp
jmp
arpl
cwde
test
int
add
adc
add
sbb
mov
push
dec
rol
clc
add
mov
cmp
enter
test
or
rcl
aad
jnp
dec
sar
sub
and
lea
jno
sub
add
enter
cmps
jo
push
push
inc
rol
or
xchg
add
push
xor
push
push
add
btc
and
add
cld
loope
repnz
scas
mov
dec
je
push
xor
jg
dec
and
add
mov
and
sti
add
gs
je
movs
or
dec
fwait
pusha
(bad)
fwait
sub
inc
neg
sbb
jecxz
fdivr
das
jle
lock
ret
daa
xor
or
jne
pop
cmp
inc
inc
adc
sahf
(bad)
add
mov
or
mov
pop
int
(bad)
xor
push
xor
nop
inc
sub
sbb
sub
or
bound
mov
ja
sub
in
cmp
dec
xchg
sub
adc
test
ins
or
out
push
movsx
popa
cld
loope
les
lods
data16
lods
add
mov
mov
rcr
add
mov
add
dec
shrd
nop
add
add
jle
cmp
imul
jge
sbb
aaa
pop
pop
add
mov
or
cmp
call
stc
inc
add
dec
jmp
ret
cs
clc
sub
fs
cmp
or
ret
jo
and
inc
rol
push
mov
xor
push
and
aad
rol
lock
mov
mov
mov
das
pop
inc
out
and
dec
dec
push
pop
sbb
js
jg
pop
jl
mov
inc
jmp
cmp
adc
clc
fidivr
ror
(bad)
sbb
lahf
inc
shl
xchg
mov
(bad)
jbe
(bad)
xlat
jg
add
mov
test
jl
jg
lods
jb
lods
cmp
dec
inc
dec
mov
mov
sbb
cmps
adc
nop
add
daa
ror
add
mov
stc
mov
add
sub
mov
add
lods
or
jnp
je
int
adc
add
adc
loopne
test
or
lds
and
sub
or
sub
inc
ss
enter
push
lock
inc
sub
xchg
aam
push
cdq
test
jge
mov
jne
push
shl
adc
push
mov
pop
xor
xor
ficomp
out
into
mov
pusha
bound
pushf
out
add
mov
xor
enter
je
push
shl
and
cmp
int
xchg
js
add
ficom
dec
lods
xor
inc
test
lea
sbb
or
mov
sbb
enter
push
ins
xchg
pusha
mov
ins
cmp
cld
cld
jl
sub
add
shr
mov
xor
add
fwait
mov
inc
shr
fsub
sbb
sbb
call
(bad)
ds
fld
nop
jle
gs
or
pop
data16
jo
xchg
lock
mov
sub
add
inc
je
fsubr
ss
add
jmp
xor
inc
and
movs
enter
add
stos
xchg
pop
(bad)
or
xchg
test
cmp
fild
and
(bad)
es
and
add
jbe
call
call
dec
add
push
pop
clc
fstp
mov
mov
or
mov
push
shl
inc
inc
mov
add
mov
ret
das
add
or
je
arpl
ins
pop
arpl
js
std
sar
or
je
dec
pop
aas
push
mov
inc
add
adc
cmp
loopne
rcr
jecxz
mov
push
cmp
jne
jp
pop
and
(bad)
dec
sub
pop
in
shr
xchg
mov
jmp
int3
adc
sub
adc
add
jmp
lods
fnsave
imul
push
xor
ficom
jno
jne
push
jne
pop
add
(bad)
sub
jmp
add
mov
and
retf
int
or
cmp
add
lea
jmpw
push
pop
inc
mov
rol
or
inc
jmp
ins
lds
cmp
retf
mov
cmp
pop
or
or
push
ds
pop
sbb
dec
push
mov
mov
fcmovnbe
mov
imul
dec
pop
add
adc
ret
repz
mov
mov
xchg
add
retf
mov
and
enter
pusha
jnp
(bad)
imul
popa
loop
cmp
mov
sar
sbb
(bad)
int
lock
or
das
out
pop
cmp
push
pusha
push
mov
sbb
pop
out
mov
xor
ja
add
xor
add
sbb
call
push
push
jmp
or
jmp
mul
outs
jecxz
ja
or
inc
adc
test
add
sbb
jb
xor
mov
cmp
jne
xchg
(bad)
aam
pop
or
xor
mov
(bad)
mov
mov
xchg
ror
or
or
mov
xlat
shr
push
sbb
or
ror
inc
pusha
mov
and
stos
lea
cmp
jg
fnstcw
cmp
add
adc
sub
aad
add
jno
xchg
jns
js
sbb
dec
dec
mov
(bad)
xchg
lods
or
cmp
lea
jp
jo
push
inc
sbb
jo
xchg
xor
jns
jne
int
fisub
int
mov
cmp
cdq
fwait
or
fs
jecxz
mov
aam
push
mov
je
mov
rcl
js
lea
mov
add
mov
and
gs
ins
add
in
xlat
call
jge
cmp
inc
push
nop
inc
in
jno
cmp
adc
je
fdivr
or
sbb
push
lock
push
xor
adc
sub
les
inc
(bad)
fucomip
and
xor
adc
loop
call
inc
jmp
or
or
add
or
inc
aas
in
dec
fdiv
inc
inc
test
inc
inc
in
outs
xor
xchg
sub
adc
push
test
outs
bnd
std
mov
jmp
or
retf
cld
jo
mov
or
pop
arpl
inc
js
or
das
adc
adc
inc
in
adc
push
pop
fs
jl
lds
fisubr
int3
mov
push
sbb
ret
fsub
popa
inc
(bad)
mov
xchg
in
mov
adc
pop
mov
add
mov
xor
fist
cmp
mov
adc
or
push
jecxz
aam
mov
adc
push
rcr
pop
sahf
jmp
mov
adc
pushf
mov
add
or
or
adc
sub
sbb
sbb
popa
es
loope
fwait
jo
not
jmp
xor
push
adc
adc
or
cmp
aaa
add
cwde
inc
sbb
retf
xor
xor
cmp
push
les
sbb
adc
adc
pop
add
pop
or
jmp
pushf
xor
sti
and
fwait
dec
or
(bad)
in
mov
ret
and
loop
inc
les
(bad)
adc
inc
enter
sbb
xor
aaa
push
mov
test
adc
push
jo
push
xchg
out
mov
retf
icebp
pop
and
lea
or
fdivp
shr
add
or
idiv
fxch
jns
das
clc
shr
or
mov
add
add
or
bound
scas
push
loopne
sub
in
push
sub
push
or
mov
pushf
cdq
fild
push
add
(bad)
int3
cld
push
mov
adc
fnstcw
sub
sub
popf
pop
adc
inc
add
lea
sbb
or
mov
shr
cmp
mov
icebp
or
fimul
add
push
jp
adc
or
jae
adc
or
mov
inc
dec
adc
iret
adc
pop
or
inc
movs
add
adc
addr16
or
jmp
cmp
ficom
add
adc
iret
shl
and
push
mov
mov
and
ss
test
add
dec
in
mov
shr
push
sysret
xchg
test
test
adc
scas
sub
retf
je
dec
call
test
sbb
addr16
das
cmp
and
imul
out
(bad)
push
dec
leave
hlt
cld
jo
shl
push
(bad)
lock
fld
neg
add
idiv
pop
call
sub
cld
sub
jne
add
call
scas
push
jmp
adc
dec
out
(bad)
and
xchg
aam
dec
cmp
mov
(bad)
jmp
adc
pop
adc
fucomp
mov
jle
push
xor
ja
les
pop
adc
jle
add
retf
out
leave
inc
xor
dec
dec
cmp
lock
jl
fdiv
cmp
jl
xor
cmp
idiv
add
xor
add
xchg
adc
or
jo
adc
cmps
scas
sub
loopne
iret
inc
and
mov
inc
adc
(bad)
rol
jmp
adc
xchg
or
cmp
sub
jmp
in
adc
dec
add
add
(bad)
call
fild
stc
and
aas
sub
ret
enter
out
or
test
jne
cmp
fld
mov
or
mov
dec
pusha
mov
loope
dec
jo
or
hlt
scas
or
ds
aam
jno
and
and
jg
xchg
(bad)
aam
adc
jl
push
inc
jne
movs
xor
pop
leave
xor
outs
ror
or
les
or
xchg
out
xor
or
(bad)
pop
mov
stos
xor
in
sub
inc
inc
out
sahf
loopne
out
neg
neg
sbb
sub
dec
repnz
sbb
cwde
sub
adc
push
lods
int
lods
push
inc
and
fst
xor
xchg
fcomi
sbb
nop
mov
sbb
int3
(bad)
pop
pop
test
mov
mov
dec
jne
pop
pop
pop
nop
nop
mov
js
mov
jae
or
jae
lods
rcl
jmp
dec
and
shr
mov
or
jmp
lods
test
call
lock
je
xabort
pop
inc
bnd
mov
adc
cli
daa
cmp
inc
out
cwde
ficom
xor
ins
pop
cmp
sub
ret
gs
xchg
dec
push
push
jne
push
inc
jno
shl
pop
and
gs
int
add
into
jbe
jns
xchg
add
jmp
and
adc
and
push
(bad)
fldcw
mov
out
mov
push
or
adc
sbb
xor
or
jbe
aaa
adc
or
(bad)
mov
or
cmp
inc
push
cdq
xor
xor
pushf
jp
xor
aam
popa
mov
cld
and
les
push
dec
(bad)
ss
push
sub
sub
mov
and
cmp
add
sub
jne
(bad)
mov
inc
jmp
dec
xchg
or
je
jmp
lods
dec
jnp
inc
mov
mov
xchg
push
dec
es
mov
je
and
out
jg
mov
push
cmp
ja
add
cmp
adc
popa
pop
inc
cli
(bad)
cmp
jne
(bad)
shl
leave
adc
hlt
mov
jb
idiv
pop
xlat
nop
jp
mov
add
in
dec
add
rcl
push
mov
cmps
ret
cmp
or
lea
je
pusha
mov
mov
and
add
mov
or
sbb
or
fidiv
not
je
(bad)
push
cmp
push
xor
mov
sbb
jmp
mov
test
pop
sub
xor
dec
or
imul
xchg
fwait
add
dec
sahf
push
push
ret
cmp
cdq
outs
mov
add
das
sub
lods
add
push
xor
mov
inc
std
out
outs
fdiv
mov
test
jns
and
dec
test
add
cmps
sub
mov
mov
cmp
popf
push
call
test
fwait
(bad)
and
xchg
and
hlt
or
jnp
sub
dec
and
or
daa
in
or
cmp
push
adc
inc
arpl
cmp
or
sub
mov
and
mov
inc
and
inc
mov
push
shl
cmp
repz
aam
(bad)
mov
cmp
xlat
fcomp
(bad)
fstp
mov
aaa
nop
data16
adc
mov
jmp
or
or
nop
xchg
data16
adc
ss
jno
push
jbe
mov
jbe
inc
push
or
mov
add
sbb
test
inc
fsubr
jl
and
daa
cmps
sub
(bad)
pop
dec
nop
mov
ins
maskmovq
in
lock
mov
icebp
adc
in
stc
mov
das
or
push
loopne
and
nop
push
inc
add
adc
cmp
push
or
ins
pop
in
fld
xor
sub
sar
lahf
stos
sbb
dec
lea
sar
inc
sbb
jecxz
dec
movsx
aam
sub
fndisi(8087
mov
jmp
loop
or
pushf
shl
sti
mov
sub
(bad)
loopne
push
mov
rol
sti
leave
shr
fisub
addr16
pushf
push
jp
mov
clc
(bad)
jb
test
fild
outs
or
dec
(bad)
fwait
push
or
and
test
sbb
popa
shl
and
and
lea
pop
(bad)
sbb
xor
sub
mov
xchg
push
sub
and
ja
lock
or
add
and
test
loopne
inc
neg
repnz
push
loope
loopne
dec
icebp
retf
mov
inc
inc
or
cmp
add
inc
mov
mov
jne
mov
rcr
xchg
rol
test
sub
add
mov
ds
mov
xchg
dec
xchg
mov
cmps
ror
or
dec
push
ins
enter
retf
push
mov
ret
movs
xor
sub
lds
add
mov
cmp
mov
ins
inc
test
rol
add
retf
(bad)
jle
jle
jne
dec
inc
test
aaa
out
add
rol
shl
loopne
cld
or
ror
dec
je
neg
push
retf
(bad)
adc
xchg
fs
push
lods
jge
push
call
clc
mov
add
jmp
ffree
ret
rol
lock
iret
and
lock
cmps
repnz
cli
adc
retf
cli
div
xor
outs
loope
mov
mov
dec
dec
loopne
mov
outs
mov
(bad)
adc
pop
xchg
aaa
mov
mov
ror
ja
test
leave
mov
xor
mov
rol
jecxz
clc
mov
mov
dec
rol
pop
xor
mov
xchg
add
mov
out
stos
mov
push
repnz
pushw
sub
cmps
or
clc
out
jge
les
mov
and
inc
xchg
nop
add
sbb
inc
xor
call
mov
and
shl
add
cmp
ss
inc
test
nop
and
jge
mov
cld
lods
dec
xor
int
pushf
adc
xor
call
retf
lock
jns
mov
mov
mov
adc
fld
les
rol
cdq
add
sahf
idiv
sbb
mov
sbb
idiv
mov
test
push
push
sbb
mov
out
and
jge
adc
enter
jecxz
rcl
in
movs
adc
cmp
sub
add
jne
in
cmps
jne
xchg
fnsetpm(287
loopne
lock
hlt
push
inc
into
mov
repz
jge
dec
cwde
jno
ja
sub
ins
sbb
out
inc
add
inc
mov
pop
hlt
popa
mov
add
push
nop
cmp
push
call
mov
adc
out
dec
sub
into
pop
loop
popa
pop
shr
and
or
push
shl
test
jne
sbb
neg
and
sub
sub
call
imul
imul
addr16
pusha
call
push
pop
add
pop
ret
and
sbb
cmps
mov
shl
push
adc
sti
les
daa
push
jo
(bad)
and
push
xor
or
xchg
mov
jmp
sub
mov
add
cmps
out
into
or
adc
nop
retf
add
jge
xor
cmp
xabort
pop
cmc
mov
call
xor
xor
not
jae
add
out
adc
rol
outs
jne
cmp
sbb
test
lock
inc
jmp
push
xor
ja
dec
dec
mov
dec
cmp
jge
pop
cmc
cmps
push
sub
cmp
or
add
dec
cmp
jae
jb
add
dec
add
add
fadd
add
adc
inc
pusha
ret
pop
lock
jmp
add
or
dec
xor
mov
adc
and
add
push
add
cwde
jbe
add
or
add
add
jne
test
and
ret
dec
out
fidiv
enter
retf
mov
xchg
retf
xchg
and
ins
loope
push
je
pop
or
retf
sub
test
scas
or
int3
pop
fisub
nop
push
je
push
add
or
push
test
add
adc
push
ret
mov
xor
add
push
ret
xchg
dec
retf
ficomp
add
mov
add
mov
iret
and
xchg
out
retf
into
pusha
inc
xor
jmp
mov
rcr
add
int3
sahf
(bad)
mov
ret
cmp
mov
cmp
xor
sub
inc
push
pop
imul
or
or
jo
dec
push
add
add
inc
or
add
mov
cmps
inc
or
mov
jle
(bad)
in
xchg
adc
xlat
jp
(bad)
mov
add
je
jl
jne
and
fsub
test
jge
(bad)
sbb
mov
mov
data16
add
pop
sub
push
push
pusha
xor
aas
movs
add
cld
cld
adc
xchg
xor
add
and
inc
stos
jg
cmp
sub
into
xchg
and
loopne
sbb
jge
dec
cld
or
(bad)
mov
stmxcsr
pop
dec
pusha
xor
pop
test
push
ss
or
add
or
adc
xchg
sbb
mov
mov
iret
je
and
sbb
inc
jg
push
xchg
xchg
xchg
into
into
into
mov
test
pusha
inc
pop
sub
fsubp
or
pop
cwde
pop
imul
or
shl
(bad)
or
(bad)
pop
std
daa
movs
cmp
mov
popa
lock
or
pop
call
add
leave
lahf
pop
test
xor
adc
add
add
bound
and
fld
test
sbb
je
and
push
test
and
call
sbb
retf
inc
mov
retf
pop
or
xor
xchg
jo
xor
(bad)
push
scas
adc
fidiv
xor
dec
xchg
sub
sub
sub
mov
fmul
cmp
pop
adc
push
mov
sbb
cmp
and
add
test
sub
jmp
es
pop
movs
pusha
push
fisub
mov
jne
xlat
jle
and
daa
or
je
or
jge
inc
add
cmp
jl
shl
cmps
pop
or
fdivr
movs
mov
xchg
ror
loopne
jp
xor
aas
je
dec
sbb
xor
or
(bad)
jmp
cdq
sub
cwde
or
adc
sub
jmp
mov
fmul
ror
add
mov
out
je
add
call
ror
retf
inc
inc
inc
retf
sahf
call
jle
inc
xchg
imul
xor
outs
adc
or
cmp
loope
jmp
loope
into
pusha
and
js
push
stc
push
ss
(bad)
push
loope
adc
mov
frstor
stc
repz
mov
mov
test
and
rcl
xchg
loopne
ins
dec
jmp
or
sbb
sbb
and
adc
pusha
out
clc
movs
xor
stos
cmp
add
sbb
jle
(bad)
cld
inc
sbb
je
sti
test
xchg
test
push
xor
mov
out
je
and
clc
cmp
fcom
add
cmps
mov
and
xor
jmp
jge
sbb
shr
adc
or
je
mov
test
push
rcl
fcom
cmp
retf
xchg
push
cdq
in
inc
sbb
clc
(bad)
fsubr
sub
jge
pusha
or
and
mov
ins
(bad)
lock
pusha
push
pop
push
imul
movs
lea
shr
add
add
dec
leave
jae
lods
push
shr
sub
(bad)
inc
outs
inc
push
dec
cmp
mov
(bad)
jae
mov
inc
aas
outs
add
pop
loop
sub
lods
imul
sbb
sub
add
xchg
sbb
stc
jmp
xchg
lock
push
mov
sub
neg
ins
push
adc
xchg
sub
inc
add
sub
jmp
adc
xor
adc
push
mov
iret
dec
inc
cmp
jl
mov
inc
mov
push
inc
add
add
lods
inc
push
loope
rcl
jmp
xchg
xor
mov
neg
cmp
rol
add
xchg
icebp
or
imul
fsubr
loope
xor
(bad)
aaa
test
cwde
and
push
pop
add
std
xchg
retf
sbb
dec
add
mov
clc
mov
(bad)
loopne
or
adc
mov
dec
les
and
inc
pop
ret
je
shl
xchg
add
test
cmps
push
test
sbb
xor
nop
sar
lock
inc
push
add
push
pop
jl
mov
lea
adc
test
int3
lock
push
xchg
stc
adc
shl
daa
and
sbb
pop
nop
mov
jae
fsub
mov
mov
push
jmp
and
cmovg
out
out
rcr
add
(bad)
mov
or
js
xchg
mov
inc
aas
fs
mov
je
aad
loopne
sbb
inc
js
fmul
inc
add
push
sar
fcomp
mov
sub
movs
mov
add
ror
dec
in
inc
je
inc
pop
and
push
repnz
or
retf
and
jmp
push
and
add
adc
mov
pop
cmps
inc
hlt
xor
mov
sub
rol
push
mov
(bad)
sub
add
or
dec
test
add
mov
push
push
mov
pop
adc
sbb
xchg
mov
or
xor
pop
jbe
mov
shl
mov
push
pop
inc
xlat
add
and
inc
data16
jns
add
dec
sar
add
inc
add
xor
popa
jecxz
les
test
cli
int
sahf
sub
imul
cmp
push
(bad)
or
mov
cmps
or
sbb
sbb
ja
outs
or
loop
xor
(bad)
mov
(bad)
and
shr
adc
and
jl
and
sub
popa
stos
outs
cmps
mov
cvttps2pi
mov
or
fs
por
out
test
lods
(bad)
fld
(bad)
push
xchg
fild
push
mov
push
cmp
jmp
fst
or
icebp
add
add
lahf
jnp
enter
jno
add
sub
das
fdivr
adc
test
cmps
inc
mov
loop
rcr
cld
mov
add
mov
loopne
fcomp
xchg
add
fs
sub
lahf
inc
or
clc
in
add
hlt
jmp
ins
sub
les
cmp
mov
frstor
popa
lock
cld
adc
mov
adc
stc
inc
ins
test
or
adc
loope
and
xchg
fld
jbe
adc
adc
or
adc
mov
fdivr
adc
cmps
inc
les
add
add
add
fmul
inc
sahf
stos
xchg
xor
sub
nop
retf
mov
in
paddq
lock
arpl
pop
sbb
and
add
popf
sub
retf
adc
xor
call
pushf
enter
pusha
mov
sub
jb
mov
pop
mov
cmp
cdq
mov
in
push
sti
dec
or
dec
cmp
ins
imul
out
ss
and
ins
jmp
out
add
pop
test
or
sbb
cmps
ss
inc
js
shl
mov
sti
adc
xor
add
sbb
mov
sub
jo
arpl
imul
rcl
or
pusha
sub
sbb
mov
pop
loopne
adc
add
or
retf
xor
pop
inc
add
push
jge
cmp
jle
inc
or
add
xor
ror
push
inc
mov
sbb
ja
push
dec
sbb
pusha
lds
fdiv
sbb
xor
mov
lods
das
pop
mov
mov
repnz
dec
test
jg
adc
or
fsub
xchg
or
icebp
rol
adc
pop
ror
fstp
xor
sub
call
adc
lock
fadd
add
pop
ins
mov
popa
push
mov
pop
pop
ss
in
pusha
popa
cs
cmp
sub
ror
push
cmp
sub
mov
mov
lahf
cmp
sub
sbb
push
imul
imul
pop
movs
aad
fcomip
sbb
push
movs
mov
in
int3
dec
stos
add
iret
les
scas
lods
mov
inc
inc
daa
push
fst
rol
push
add
add
pop
mov
popa
sbb
sbb
adc
or
pop
xchg
cmp
int
mov
push
or
test
sub
pop
gs
push
mov
ins
outs
das
dec
inc
test
sbb
in
or
sbb
sub
mov
cmp
add
inc
loopne
adc
add
mov
sub
mov
xor
and
sbb
ret
pop
mov
xlat
xor
and
sar
jg
dec
shr
out
out
xor
jne
je
push
push
stos
gs
cmp
ins
push
je
shl
dec
or
jbe
dec
add
lods
loopne
mov
adc
sbb
push
leave
cli
scas
add
xchg
sub
cmp
xchg
rcr
(bad)
or
(bad)
out
jmp
popf
cmp
jmp
sahf
mov
in
adc
or
ret
in
pop
and
xor
xor
cmp
out
adc
and
or
push
and
inc
sbb
(bad)
retf
jmp
add
fs
pop
xchg
(bad)
cs
push
mov
and
inc
push
call
es
cmps
mov
pop
bsf
mov
jo
scas
cmp
cwde
retf
test
sbb
push
sbb
mov
(bad)
push
jl
aas
ins
cmp
les
jmp
retf
and
jg
inc
sbb
inc
aas
iret
jle
not
sbb
pushf
sbb
add
sub
add
(bad)
call
sub
add
iret
add
or
jg
jmp
jmp
cmp
jl
stc
and
lods
sbb
mov
leave
xchg
or
fst
and
call
fneni(8087
test
test
mov
fnstcw
loop
dec
xchg
gs
or
mov
inc
dec
loope
dec
push
push
mov
xor
imul
mov
sbb
movs
shl
shl
aaa
loope
rcl
fst
fdiv
aaa
inc
dec
push
xor
(bad)
iret
fmul
mov
test
mov
in
xor
sbb
gs
pop
cmp
cmps
sbb
cmp
adc
ret
ja
inc
or
sbb
push
popa
and
sar
add
shl
fnstcw
ja
in
aam
jo
cmp
cmp
call
cmps
and
sub
outs
fcomp
pop
xchg
sub
pop
mov
rcl
(bad)
call
jle
mov
push
mov
movs
and
inc
xchg
leave
mov
out
sar
ret
(bad)
sbb
ret
fwait
mov
test
int
jb
cdq
and
mov
push
cmc
xchg
jbe
cmp
int
push
add
test
and
mov
xchg
rol
or
gs
lea
mov
push
push
inc
mov
jbe
data16
sbb
dec
adc
cmp
push
mov
js
into
cmp
pop
jnp
mov
pop
je
(bad)
int
cdq
aam
stos
mov
adc
or
jg
sub
mov
stos
out
jl
jae
mov
push
mov
sbb
cdq
mov
xchg
je
mov
cdq
neg
add
cmp
and
add
iret
cmp
std
add
test
int
xor
xchg
or
jno
shl
add
in
xchg
cmp
xchg
shl
sar
inc
dec
test
add
sbb
les
xchg
adc
sbb
leave
cmp
push
test
or
add
ja
fcom
inc
mov
jmp
xor
inc
xor
je
adc
dec
mov
add
call
aaa
(bad)
push
icebp
rol
cli
fild
or
mov
or
push
add
(bad)
cmp
or
mov
jns
and
mov
test
mov
xchg
out
bnd
fild
in
lss
je
pop
cmc
rcr
test
cmp
pop
mov
ror
add
cli
jp
pop
mov
push
test
fdiv
jmp
loope
addr16
pop
push
cmp
jl
lock
adc
jg
sub
adc
les
xchg
movs
dec
hlt
scas
idiv
dec
add
lock
jne
clc
mov
jmp
rcr
sar
mov
push
jmp
mov
cmps
movs
sub
cvttps2pi
cmp
add
pushf
xor
cmps
or
mov
add
mov
mov
stos
mov
mov
fwait
push
mov
push
adc
or
lods
and
add
lods
mov
bound
or
dec
jb
jle
sbb
jns
jne
jmp
fcomp
vpand
or
push
mov
jl
sbb
dec
pop
mov
sbb
dec
into
pop
jle
add
push
and
or
or
jecxz
mov
nop
mov
sub
adc
jg
hlt
fsub
mov
and
jle
sbb
(bad)
add
xchg
in
retf
clc
dec
test
push
pop
cmp
and
xchg
adc
mov
jl
nop
cmps
fs
ret
sub
ins
aam
je
dec
dec
mov
and
cld
add
jnp
retw
sbb
cmp
mov
sbb
dec
jg
adc
or
call
retf
pop
hlt
cmp
ret
aad
cmp
mov
add
rol
cmp
or
push
dec
std
std
loopne
inc
pop
cld
pop
std
jb
shl
jg
icebp
adc
push
pop
test
or
cmp
popa
ret
not
repnz
add
mov
call
pusha
adc
dec
or
lock
lock
out
jbe
pop
and
sub
mov
push
pop
clc
cmp
cmc
push
pop
pop
dec
cmp
xor
shr
test
(bad)
mov
sbb
and
inc
inc
adc
xlat
je
cmp
adc
(bad)
cmp
fidiv
jb
test
xchg
test
cmp
hlt
or
mov
daa
jmp
inc
mov
popf
test
pop
je
data16
mov
div
cmp
jbe
mov
push
or
xchg
cwde
retf
pop
xor
shr
sti
xchg
mov
jmp
das
xor
(bad)
aas
out
cmp
loop
adc
test
push
imul
and
fstp
push
pop
xchg
cmp
es
jmp
push
cli
jne
jbe
push
inc
pop
pop
(bad)
inc
mov
mov
add
ret
inc
lea
and
dec
in
mov
sbb
enter
sbb
cmp
int3
add
mov
and
enter
dec
adc
jns
pop
call
pop
fcmovbe
sahf
push
push
or
shl
and
call
in
test
add
push
jge
test
or
nop
arpl
xor
jns
inc
in
adc
imul
adc
aam
inc
dec
sub
nop
inc
sub
loope
add
mov
sub
sub
jo
inc
imul
inc
je
leave
iret
mov
inc
jne
xlat
or
and
jmp
mov
enter
ins
adc
sbb
jne
cmp
retf
ins
xchg
retf
xchg
sbb
inc
adc
repnz
mov
std
or
cld
sti
push
jmp
(bad)
xchg
shr
pop
adc
fimul
pop
xor
jo
ins
or
push
cmp
cmp
dec
fsubr
leave
adc
push
addr16
imul
sbb
or
ins
fwait
cmps
mov
adc
mov
(bad)
xchg
sbb
sub
outs
xor
test
call
dec
xchg
daa
int
mov
cmp
movs
sub
test
outs
or
xor
movups
jo
outs
movs
fadd
jmp
iret
jo
popa
imul
sub
fsub
mov
int
mov
(bad)
mov
lock
pop
hlt
add
push
and
call
mov
mov
loopne
or
xor
adc
fnstsw
(bad)
arpl
adc
repnz
sbb
add
xchg
outs
ds
sbb
test
shr
fidiv
ins
cmp
inc
shl
push
loopne
and
cmp
sbb
mov
or
aaa
aam
cmp
sbb
jg
dec
push
fdivr
js
and
jno
jl
fcomp
ss
sbb
cdq
xor
cdq
aam
mov
bound
and
cmp
cmp
inc
out
shr
ins
dec
ins
fcom
jbe
test
adc
adc
xchg
dec
es
and
dec
es
xor
es
fs
cmp
inc
dec
fs
dec
fs
int
ins
add
sbb
ja
in
jnp
inc
add
mov
fsub
rol
add
jbe
sbb
int3
cmp
add
rcl
loopne
pop
imul
je
scas
imul
pop
jb
inc
mov
lock
add
add
shl
cmp
fisubr
fcom
repnz
push
cmp
and
fadd
mov
jmp
sub
cdq
in
aam
addr16
and
fsub
call
xchg
cmp
or
rcr
or
jbe
inc
inc
inc
xchg
inc
pushf
cmps
movs
and
sub
cmps
rcr
cmps
add
loope
push
movs
rcl
sar
xor
das
sbb
ja
cwde
popa
push
pushf
bound
push
mov
and
fistp
jb
dec
hlt
pop
js
or
imul
adc
leave
or
pop
call
lods
mov
dec
cs
in
inc
xchg
adc
fcomp
xor
loope
add
jne
aaa
cmps
sub
adc
fisub
outs
in
in
nop
sub
call
xor
jp
pushf
xor
(bad)
in
call
inc
adc
jp
dec
fisubr
pop
(bad)
hlt
or
scas
mov
cmp
sbb
and
call
jnp
mov
or
fadd
call
jnp
push
mov
lods
jnp
adc
mov
dec
add
out
lock
sbb
mov
jl
xor
sub
stos
pop
and
ins
jl
stc
xor
loopne
sub
ret
int3
push
call
inc
stc
add
rcr
and
dec
adc
shr
int3
xor
cmp
and
test
mov
out
inc
dec
ss
add
or
sbb
out
stos
jmp
inc
lock
fcomp
dec
les
pop
nop
out
add
fstp
push
repnz
fcom
sar
sub
shr
pop
jle
cmp
sbb
aas
lods
in
sbb
xchg
test
jg
pushf
pushf
fmul
mov
pushf
pushf
pushf
mov
pushf
pushf
pushf
enter
adc
ret
push
push
and
movs
fisttp
mov
add
mov
cmps
lock
dec
add
mov
and
pusha
cmp
in
sub
push
push
int3
enter
(bad)
cld
add
sti
xor
inc
pop
aas
xchg
sub
nop
nop
or
adc
sub
fsub
add
neg
add
cmp
ins
inc
sub
add
ret
lds
ss
aam
unpcklps
inc
adc
(bad)
call
outs
adc
add
xor
mov
loopne
inc
gs
mov
pop
cwde
pop
inc
mov
test
jmp
sub
imul
rol
sbb
test
inc
es
or
dec
imul
mov
mov
adc
(bad)
scas
pop
jo
and
pusha
xchg
mov
jo
mov
gs
dec
mov
adc
mov
icebp
sub
dec
mov
pop
cdq
fisub
(bad)
add
jbe
je
jb
call
xor
or
ror
xchg
fs
movaps
sbb
mov
add
mov
jne
rol
jmp
add
jecxz
pop
lock
stos
adc
push
dec
lds
xchg
or
sbb
movs
jg
inc
add
pop
fldcw
cmp
sub
xchg
cld
cmp
pop
jno
mov
and
lock
popf
scas
add
jmp
sbb
call
cmp
xor
xor
dec
(bad)
dec
call
ins
or
push
int
clc
xor
and
lods
pushf
loopne
sub
pop
sub
call
cmp
xchg
xor
pop
push
or
xor
je
jnp
mov
pcmpgtb
rcl
sbb
and
or
mov
enter
or
enter
or
or
adc
mov
enter
in
aaa
call
call
push
pusha
mov
pop
aam
cmp
pop
arpl
and
mov
fs
add
mov
dec
repnz
xor
(bad)
push
inc
pop
leave
mov
xlat
ins
mov
mov
shl
push
xor
and
test
fmul
es
add
jmp
stc
cmp
push
and
enter
sub
lea
mov
mov
add
mov
xor
mov
nop
cmp
rol
movs
mov
lds
dec
or
mov
inc
test
dec
pop
mov
lock
or
or
mov
or
ret
cs
add
adc
xchg
stc
push
stos
or
push
adc
add
ins
jg
dec
adc
and
sahf
js
mov
loopne
push
inc
pop
and
fdiv
mov
xchg
adc
rol
nop
(bad)
rol
fwait
nop
inc
sbb
pushf
mov
sub
aas
or
inc
or
imul
imul
add
cmp
push
mov
push
cmp
mov
lods
leave
leave
leave
ins
nop
bswap
enter
leave
leave
sar
mov
cwde
mov
pushf
sti
mov
je
xchg
pop
shl
test
aaa
stos
cdq
cmc
test
popa
xor
ins
inc
inc
lds
push
mov
das
and
in
fadd
mov
and
push
jb
xchg
popa
mov
lods
xchg
movs
enter
xchg
nop
sub
or
mov
retf
(bad)
ficom
mov
mov
fdivr
mov
dec
and
push
shl
inc
dec
sbb
in
jne
or
xchg
jo
push
fsubr
sbb
mov
xchg
jae
in
or
stc
add
jp
xchg
lahf
outs
sbb
push
jg
dec
or
iret
pop
sbb
inc
or
sbb
mov
sub
test
mov
adc
movs
jnp
sbb
pusha
pop
call
cmp
xchg
sub
mov
push
call
xchg
inc
test
or
or
xor
fimul
adc
add
ret
int
pop
movs
imul
push
mov
push
sub
inc
xchg
aam
es
shl
lods
sub
loopne
es
dec
xlat
jmp
pop
fsub
ins
add
nop
mov
test
ror
lock
add
imul
call
shr
push
pop
ret
les
popa
arpl
xor
std
int3
enter
jae
inc
sti
nop
in
outs
movs
or
and
sub
xchg
hlt
inc
repnz
idiv
shl
sti
add
and
adc
add
stos
xchg
mov
jnp
mov
mov
dec
outs
cmp
repz
shl
jbe
xor
lods
mov
pushf
adc
dec
ret
call
pop
fcom
push
ins
adc
inc
sub
inc
lock
mov
push
mov
outs
in
mov
(bad)
dec
popf
add
xchg
fidiv
call
jno
adc
xor
adc
push
ficom
cmp
adc
pop
cmc
cld
imul
dec
pop
and
adc
pop
adc
jns
lds
push
inc
arpl
dec
sub
add
cmp
sar
int3
sti
cmp
lds
jns
in
push
pop
or
push
push
outs
push
loope
imul
imul
mov
sbb
(bad)
pushf
ror
aaa
test
fsub
mov
adc
stos
pop
call
arpl
int3
ret
push
xor
mov
dec
shl
cmp
mov
inc
mov
or
loopne
xlat
or
(bad)
jmp
pop
mov
and
push
movs
adc
inc
pushf
pop
enter
cwde
adc
sbb
js
push
repnz
(bad)
pop
push
jmp
loope
mov
mov
or
dec
stos
adc
out
jg
sub
dec
push
movs
pop
inc
dec
pop
jo
outs
mov
cwde
movs
mov
in
in
movs
call
push
sub
fs
movs
xchg
push
test
mov
lea
ret
movs
(bad)
sub
mov
fisub
cmp
mov
add
ins
cwde
movs
xchg
xchg
pop
pushf
mov
or
and
jle
add
or
xor
pop
movs
add
lock
push
add
retf
ins
mov
imul
dec
xor
ja
sub
fs
lock
adc
dec
dec
and
mov
xchg
test
or
push
xor
mov
xchg
xor
mov
xor
xor
lea
and
(bad)
in
je
or
add
push
push
sub
test
lahf
push
fs
or
sbb
push
fcmovu
arpl
test
pop
mov
mov
rcl
push
lods
lods
(bad)
out
das
dec
pop
mov
xchg
push
test
push
xor
test
add
push
sbb
push
out
fistp
xor
pop
shl
mov
aam
sub
aas
in
jb
dec
sbb
cs
add
inc
fcom
mov
sar
sbb
inc
mov
adc
out
or
xchg
or
add
dec
add
test
fneni(8087
mov
push
mov
dec
adc
xchg
test
(bad)
out
inc
mov
jo
dec
fs
pop
ins
nop
out
adc
xchg
pusha
out
out
lods
and
sbb
loopne
mov
test
and
push
mov
ficom
pop
ror
mov
stos
shl
loopne
ss
(bad)
pop
mov
xchg
push
ret
sub
cmp
arpl
imul
int3
adc
stos
lods
cmps
in
add
jecxz
icebp
sub
pusha
scas
pop
call
fisttp
lahf
in
std
enter
test
aas
mov
lock
add
pop
adc
adc
dec
mov
lock
add
dec
out
jl
mov
int3
jg
cmps
cmps
pop
das
sar
adc
pop
adc
sub
int3
inc
sbb
dec
pop
cmovne
dec
bnd
and
mov
test
jne
ins
xchg
mov
(bad)
ror
and
pop
fstp
add
aad
(bad)
mov
mov
or
mov
adc
stos
or
and
fadd
dec
mov
lds
fist
adc
xchg
fmul
sub
mov
(bad)
iret
nop
add
mov
fcom
and
sub
mov
lods
xlat
dec
aam
fsub
pop
adc
les
adc
fdiv
cmps
stos
mov
inc
test
lahf
inc
fadd
jns
aad
mov
jnp
ds
mov
data16
sub
pop
mov
(bad)
ins
js
mov
aaa
and
int
cdq
add
or
clc
pushf
cmp
int
ror
test
out
xor
adc
nop
and
sbb
cmps
mov
fwait
dec
inc
test
mov
mov
lock
and
aad
cmova
add
pop
xor
xchg
(bad)
mov
inc
sub
add
pop
mov
push
xchg
or
aad
iret
or
cs
sub
adc
jl
cwde
in
test
jo
add
cmp
or
sub
add
or
stos
push
lahf
add
pop
ret
jmp
les
mov
add
jb
inc
test
and
out
fsubr
push
mov
jl
inc
xor
xchg
repz
or
push
xchg
or
push
stos
xchg
imul
mov
ret
imul
xor
lock
or
mov
jne
shl
add
add
adc
dec
and
pop
ins
test
test
mov
imul
xor
imul
cmp
and
mov
leave
and
inc
nop
pop
loope
jb
cwde
cmp
or
cdq
xchg
pusha
inc
pop
ret
jno
cdq
in
fmul
inc
push
pop
leave
sar
nop
mov
enter
popf
or
jbe
shr
mov
push
dec
test
mov
jg
xchg
mov
lahf
inc
aam
mov
int3
inc
push
stc
xchg
add
add
nop
or
fs
or
adc
and
sub
xchg
inc
inc
mov
jae
sysenter
add
jge
int3
mov
add
or
mov
and
nop
cmp
std
mov
ja
add
sub
xchg
add
inc
test
cmp
push
in
gs
out
xor
fild
popa
and
and
sbb
inc
stos
add
gs
in
and
add
(bad)
(bad)
mov
xchg
fsubr
dec
invd
pop
das
sahf
add
or
(bad)
jo
mov
xor
daa
sub
pop
test
cmp
test
das
push
mov
sbb
add
scas
pop
inc
or
pusha
mov
pusha
mov
mov
inc
or
add
and
hlt
shr
nop
xchg
in
(bad)
in
add
stc
jb
add
adc
push
in
cld
cdq
mov
mov
lock
lds
adc
lock
or
sub
mov
and
sbb
sub
push
in
jl
cmp
cmps
aam
stc
sub
popf
push
jmp
and
pop
sub
mov
enter
mov
shr
sub
pop
dec
adc
(bad)
add
rol
and
adc
xor
xchg
and
leave
or
cmp
ret
jmp
xor
mov
ins
or
(bad)
gs
ins
pop
shl
lds
ins
push
lods
cld
xchg
(bad)
sub
mov
inc
les
(bad)
adc
test
adc
bound
clc
or
adc
js
stos
mov
mov
(bad)
loopne
es
inc
adc
call
sbb
fcom
sti
mov
xor
push
nop
mov
cmp
xchg
dec
pusha
xor
add
ins
jno
add
xor
ins
mov
mov
lods
shr
(bad)
xchg
bound
test
push
mov
adc
mov
les
jo
leave
mov
pop
ins
pusha
push
enter
pop
dec
inc
push
push
xlat
push
cdq
cmp
dec
retf
mov
lea
and
cmp
clc
fmul
jno
pop
leave
shl
cld
or
sub
les
xchg
dec
es
in
mov
movs
lods
mov
jecxz
cmp
adc
push
mov
iret
fs
aam
xor
dec
cmp
lea
aam
and
lahf
pop
ins
(bad)
lea
push
nop
xchg
cmp
mov
inc
add
xor
adc
inc
clc
adc
inc
sahf
sbb
pushf
dec
xor
mov
pop
outs
mov
dec
jmp
mov
lock
call
(bad)
or
xchg
test
fsub
iret
fwait
adc
pusha
inc
sar
add
test
mov
xadd
mov
pushf
in
adc
movs
or
test
and
and
in
push
loopne
fwait
loopne
fsubr
call
or
jns
push
into
push
fdiv
aam
in
add
and
clc
add
mov
shl
cdq
enter
sub
fstp
imul
lock
sub
mov
ret
sbb
test
sbb
or
iret
imul
add
pop
leave
jae
rol
std
sub
in
jo
les
add
cmp
cli
xchg
inc
xchg
xor
mov
das
cmp
push
mov
mov
leave
call
cdq
mov
aam
add
loopne
fadd
inc
sahf
in
sbb
add
int3
cmp
lock
jo
aam
fild
daa
fild
enter
mov
in
mov
cmp
jmp
adc
xchg
jno
inc
add
lahf
adc
add
xchg
imul
or
xor
pop
popf
inc
mov
jmp
add
or
aad
(bad)
jae
xor
cmp
rcl
fadd
and
adc
jae
lods
jne
dec
jl
add
dec
adc
in
add
stc
test
xor
es
ss
sub
and
mov
xchg
sbb
in
lock
cdq
pusha
cmp
dec
xor
dec
dec
push
dec
in
fisub
inc
scas
js
ficom
mov
ins
inc
push
rcr
dec
clc
cli
ins
inc
test
add
push
cdq
add
hlt
cli
repnz
stos
pop
and
pop
sbb
xchg
xlat
(bad)
add
into
xor
loope
cli
call
or
cwde
aad
stos
adc
pop
mov
xor
in
bswap
add
mov
jne
iret
lods
pop
xor
add
mov
nop
pop
mov
mov
rcr
adc
add
es
fcomp
add
retf
iret
call
pusha
das
loopne
xchg
add
push
inc
and
push
rol
rol
and
mov
pop
out
rcr
rol
push
test
neg
dec
and
nop
out
pop
add
or
pusha
and
pusha
shl
push
inc
(bad)
mov
xchg
scas
scas
sub
imul
cmp
jno
cmc
inc
inc
fidiv
xor
idiv
mov
mov
or
push
push
rol
push
pop
inc
or
(bad)
jle
adc
add
jbe
out
shl
and
pop
push
loopne
xchg
jl
je
out
in
push
mov
add
inc
push
enter
xor
xor
mov
mov
and
mov
imul
jno
and
push
(bad)
nop
mov
lea
movs
add
add
rcl
sbb
xor
in
out
addr16
sbb
aaa
adc
fidiv
sbb
cmp
xchg
ret
push
lods
sub
ds
stc
stos
jmp
xlat
mov
test
add
push
lds
pop
ds
repz
sub
inc
add
test
out
and
add
jae
mov
rcl
out
mov
lahf
not
sar
inc
not
add
cdq
push
pop
out
jnp
add
lahf
rol
(bad)
out
(bad)
(bad)
dec
or
cmp
dec
mov
(bad)
fistp
or
jnp
mov
sbb
mov
or
and
daa
push
adc
mov
rcl
xchg
adc
or
cmp
shl
adc
jnp
jns
mov
out
ds
push
mov
div
jmp
lock
xchg
jmp
cmp
outs
je
jb
outs
arpl
fs
outs
jo
in
sbb
sbb
push
dec
imul
push
sbb
jb
gs
xor
cs
ins
push
bound
and
pop
in
(bad)
pop
popa
je
outs
outs
push
inc
inc
add
aas
push
jnp
popa
rdpmc
add
(bad)
push
sub
or
mov
mov
outs
jb
js
je
jb
gs
cmp
or
outs
add
jg
push
mov
cli
add
push
gs
push
rol
inc
jne
jb
stos
inc
(bad)
outs
cmps
pop
imul
dec
xor
xor
out
xlat
movs
pop
cmp
cmp
(bad)
sub
dec
and
jns
add
das
das
push
jl
ja
add
push
inc
inc
gs
ins
(bad)
fmul
dec
outs
jbe
dec
arpl
fucom
ret
push
push
jo
sub
addr16
dec
jne
out
sbb
xchg
xchg
rol
jb
ins
and
pop
stc
dec
popa
jb
push
inc
pushf
jae
sahf
ins
adc
xchg
jae
cmp
jns
jg
xor
cwde
inc
push
jne
xor
xor
daa
push
mov
sti
sub
sbb
dec
and
jne
into
cmp
ins
xchg
pop
dec
inc
push
mov
jbe
push
popa
das
jo
or
cmp
sub
fcomip
mov
push
test
push
sub
mov
adc
inc
mov
dec
and
sub
sub
cs
xor
xor
xor
ss
cmp
cmp
cmp
ds
(bad)
out
test
inc
inc
inc
inc
dec
dec
dec
dec
dec
dec
dec
dec
mov
push
push
mov
pop
pop
pop
pop
pop
adc
popa
bound
gs
addr16
ins
outs
sbb
js
fs
jle
ja
movs
jnp
jge
jg
add
inc
mov
imul
(bad)
mov
dec
xchg
xor
jnp
fcom
ins
jae
out
push
dec
mov
push
jne
inc
dec
adc
cmps
inc
jge
lock
in
pop
mov
ins
and
jb
ss
dec
push
push
sbb
or
fimul
inc
and
or
xor
xor
sbb
cdq
(bad)
push
scas
xor
ins
imul
mov
mov
cs
xor
inc
and
test
xor
and
add
cld
jo
out
imul
sti
mov
push
ins
xor
inc
popa
cdq
ins
xlat
sahf
and
daa
mov
jne
pop
fidiv
ins
and
ins
push
xchg
inc
cs
xor
lock
or
dec
rol
jne
call
dec
and
jbe
and
mov
mov
sbb
lock
movs
add
or
fs
popf
jmp
jbe
je
or
fld
and
push
ds
xor
mov
shl
push
mov
pop
xchg
sub
movs
inc
add
sub
arpl
cmp
ss
dec
popa
sub
neg
fiadd
inc
xchg
xchg
pop
pop
push
sub
imul
xor
or
cmp
push
ret
add
sbb
popa
or
sbb
pop
xor
dec
jno
mul
push
push
fild
push
sar
nop
aaa
xor
mov
fs
xor
hlt
inc
and
cwde
pop
dec
add
xor
fisub
outs
ss
sub
and
fs
xor
imul
sar
xor
pop
pop
ficomp
gs
das
mov
mov
lds
test
outs
push
or
outs
mov
cmp
cmp
xor
inc
aaa
and
jecxz
ins
in
jmp
imul
pop
shr
or
stos
jmp
add
leave
nop
xchg
lds
inc
ins
imul
push
cdq
cmp
xor
or
ins
popa
and
and
pop
pop
adc
push
cmp
addr16
popf
mov
xor
fsubr
pop
pop
pusha
jo
sub
add
sub
push
sub
retf
inc
sub
jne
jo
pop
dec
jmp
mov
pop
cmp
push
and
cmp
mov
mov
cwde
ja
ds
inc
inc
and
jbe
and
ud0
sahf
pop
fisub
add
mov
in
push
rol
das
retf
outs
dec
mov
inc
mov
clc
ret
movs
add
xor
jae
jae
push
loop
adc
imul
jle
fisttp
xchg
add
add
xor
in
adc
jae
outs
js
mov
addr16
dec
pop
add
add
icebp
jne
and
xor
imul
rcr
add
add
adc
test
add
add
add
add
jns
(bad)
cmp
pop
or
aaa
ds
push
pop
hlt
and
(bad)
in
pop
or
pusha
add
(bad)
js
or
sub
push
data16
sbb
add
cmp
push
xchg
test
add
fisub
pop
(bad)
daa
push
cmp
in
popf
fnstenv
xor
int3
push
(bad)
lods
pop
into
jo
add
sub
dec
adc
lods
mov
push
stos
push
mov
push
jge
mov
pop
push
movs
add
jo
sbb
or
cmp
lea
mov
nop
inc
xchg
xchg
lods
pusha
inc
cs
retf
pop
xchg
push
inc
mov
adc
push
inc
or
test
xchg
pop
pop
add
adc
adc
adc
loope
dec
pop
dec
cmp
test
adc
pop
cmp
in
and
sub
xchg
scas
xchg
and
adc
and
adc
add
push
inc
stos
jmp
and
add
cmps
sbb
add
push
mov
inc
ja
dec
pop
stos
pusha
inc
adc
fadd
(bad)
sbb
add
and
pop
shr
ja
test
add
test
mov
xchg
xchg
xchg
xchg
xchg
xchg
cwde
cdq
call
mov
(bad)
jmp
stos
stos
lods
lods
scas
scas
mov
mov
mov
mov
mov
mov
ret
(bad)
(bad)
inc
(bad)
enter
int3
int
iret
rcl
rcl
aam
(bad)
xlat
fcomp
fcmovu
(bad)
(bad)
loopne
loop
hlt
(bad)
(bad)
jmp
in
out
jmp
out
out
lock
repnz
cmc
div
clc
stc
cli
sti
cld
std
(bad)
dec
adc
dec
nop
push
call
pop
sbb
add
xchg
push
sbb
xor
ja
sbb
push
jae
jb
push
call
dec
stos
inc
sbb
ja
ss
popa
mov
bnd
mov
daa
pop
lea
dec
mov
popa
addr16
outs
js
push
push
inc
push
push
dec
out
es
dec
and
ins
gs
mov
mov
jne
dec
jl
daa
add
ins
outs
aas
retf
scas
in
dec
imul
mov
imul
ds
and
inc
jb
test
ins
jns
daa
pop
enter
mov
jo
mov
sbb
call
addr16
cmp
outs
adc
pushw
mov
inc
movs
jns
imul
pusha
inc
jbe
(bad)
push
ror
jns
sbb
shl
retf
push
clc
pop
test
clc
mov
pusha
gs
stos
loopne
and
or
test
mov
cwde
xchg
pop
pop
pop
push
push
jae
ins
mov
jp
aas
cmp
mov
shr
imul
xor
outs
gs
mov
data16
xchg
xchg
les
push
push
push
dec
test
aam
cwde
repnz
js
mov
cmp
mov
arpl
xchg
mov
imul
mov
fistp
xchg
inc
outs
jae
pop
cmp
in
xchg
jg
addr16
shl
adc
push
pop
aaa
mov
pusha
push
or
aad
sbb
je
outs
xchg
or
arpl
daa
xchg
mov
data16
jns
arpl
pop
cmp
cmp
add
idiv
xor
sub
sysexit
dec
jl
jle
dec
fstp
addr16
sub
sub
push
cmp
dec
in
jp
and
cmp
fst
mov
dec
pop
pop
xor
lods
retf
addr16
push
jb
imul
adc
xor
retf
ret
xor
push
xor
in
add
es
cmps
inc
out
jo
sub
fucomip
jo
lahf
sub
mov
inc
add
out
pusha
push
dec
inc
mov
sub
hlt
dec
xchg
jmp
fs
iret
repz
sub
lock
jnp
xor
adc
adc
or
lahf
out
cmp
add
out
lock
imul
jl
test
xor
jl
in
and
cmp
out
iret
pop
loopne
push
(bad)
push
aam
neg
repz
enter
cmp
repz
iret
lods
test
movs
push
xchg
mov
cmp
repz
out
call
pushf
int
jns
js
cmp
lock
aam
iret
repz
sar
repz
pusha
inc
and
iret
repz
cld
in
pop
push
lods
and
out
repz
jmp
push
test
cmps
pop
push
cmps
and
ds
mov
mov
outs
push
xor
add
jne
data16
xchg
cmps
pop
push
movs
fdiv
push
push
ins
fs
sbb
jns
jno
je
or
sti
push
jmp
sub
add
sar
inc
inc
dec
jae
mov
adc
mov
(bad)
mov
push
inc
dec
xor
repnz
inc
dec
dec
dec
push
push
push
and
inc
dec
add
dec
dec
inc
add
(bad)
out
xor
adc
sub
adc
add
fs
call
rcl
mov
dec
test
jnp
inc
loop
mov
ds
jnp
rcr
adc
clc
retf
sbb
jb
pop
repnz
aas
xchg
jge
arpl
cmp
adc
dec
scas
jp
das
in
sti
adc
fisubr
and
cmp
dec
repz
iret
retf
add
inc
mov
mov
int3
push
test
sub
fwait
ss
sbb
pop
jmp
pop
jns
ds
xor
inc
int3
dec
dec
xor
dec
popf
pxor
(bad)
(bad)
call
outs
retf
aaa
push
div
inc
sub
dec
xchg
cmp
cmps
das
xchg
pop
(bad)
(bad)
jmp
and
xchg
retf
sahf
icebp
mov
cld
or
loopne
cmp
inc
mov
dec
out
fcom
cmps
xor
ds
dec
mov
(bad)
lods
aas
cld
mov
push
xor
sbb
or
test
repnz
jmp
mul
and
es
mov
jle
add
shl
sbb
outs
xchg
sub
out
(bad)
scas
ins
push
mov
out
leave
jmp
jg
test
fucomi
dec
push
push
push
inc
inc
or
outs
jbe
and
add
shr
cs
(bad)
(bad)
(bad)
jmp
push
into
mov
and
daa
or
inc
add
cs
push
inc
sub
(bad)
(bad)
inc
add
add
adc
sbb
add
sub
cmp
pop
pop
cmp
dec
and
ficomp
xor
dec
pop
inc
add
pop
jbe
in
sti
mul
sbb
ss
push
or
inc
xchg
add
cmp
inc
sub
sbb
pop
push
daa
pop
add
xor
push
push
push
adc
ins
(bad)
out
sbb
pop
aas
adc
cmp
xor
pop
sub
lods
inc
mov
push
ret
push
inc
dec
adc
jmp
cmps
out
dec
sub
cmp
sub
inc
dec
jmp
jnp
adc
out
inc
inc
push
(bad)
fild
pop
cmps
sub
dec
pop
sub
pop
adc
sub
and
adc
sub
sbb
sbb
sub
push
sbb
outs
ins
ret
and
sbb
pop
scas
mov
mov
pop
aad
daa
add
inc
push
inc
pop
pop
daa
es
add
je
lea
pop
dec
add
fwait
cmp
push
daa
pop
or
pop
pop
mov
xor
fnstsw
add
xor
adc
sbb
sbb
pop
fidiv
pop
sbb
fisubr
sbb
pusha
imul
and
dec
inc
or
int3
push
sub
outs
je
sub
inc
adc
xor
adc
adc
push
add
sub
cmp
mov
cwde
pop
mov
arpl
cmp
jecxz
jg
es
pop
push
gs
out
(bad)
(bad)
mov
push
xor
push
cmp
inc
or
xor
aas
push
dec
inc
dec
fimul
and
sub
adc
or
sub
ja
(bad)
loope
pop
push
or
mov
cmp
movs
push
(bad)
fild
mov
jnp
inc
pop
adc
dec
nop
dec
cwde
in
push
cmp
xchg
pop
adc
lock
push
adc
xchg
out
xor
jns
dec
push
jo
mov
jnp
shl
push
inc
outs
jg
ja
fidiv
push
inc
add
shl
mov
and
mul
add
pop
scas
daa
xor
int3
hlt
adc
xor
adc
push
popa
push
clc
or
pop
and
test
mov
mov
or
push
popa
ret
popf
fild
mov
push
xor
ror
and
aaa
jb
outs
outs
push
rcl
push
xor
int
jns
jo
mov
adc
cmp
repz
mov
jnp
and
push
jo
rcl
jl
sub
inc
nop
cmp
ds
mov
rcr
adc
add
sub
adc
pusha
sbb
scas
xchg
cmc
call
daa
xlat
push
add
ret
and
adc
ss
pop
adc
aad
lods
pop
pop
js
inc
jbe
mov
dec
pop
or
push
aaa
inc
mov
adc
mov
push
fisttp
and
push
(bad)
out
out
push
adc
pop
xor
and
push
jmp
jb
pop
arpl
inc
and
sbb
xor
or
sbb
mov
jno
ins
push
push
inc
and
shl
aas
sbb
push
fild
sub
sub
ds
or
or
adc
pop
in
dec
jno
push
inc
xor
mov
mov
cmp
xor
adc
ja
push
fst
push
add
xchg
out
pop
daa
push
and
cmp
jecxz
pop
add
mov
mul
or
scas
inc
dec
ret
imul
pop
test
add
fs
daa
pusha
popa
push
cmp
ret
dec
and
jae
daa
dec
or
mov
cs
ss
adc
push
inc
and
push
add
push
cmp
(bad)
cs
sub
pushf
add
mov
cdq
mov
xor
sub
cwde
gs
or
daa
and
inc
in
push
xchg
stos
pop
mov
pop
and
adc
cmp
push
mov
sub
inc
scas
adc
or
rcr
add
outs
add
xchg
loop
adc
loope
inc
mov
dec
push
add
sbb
and
fistp
enter
xor
xchg
adc
inc
xor
inc
(bad)
xor
pop
sub
add
out
in
inc
pop
pusha
mov
mov
push
push
mov
pop
sbb
push
out
cmp
test
mov
cdq
into
scas
daa
out
loope
int
xor
in
cmp
mov
mov
add
and
enter
jmp
xor
sub
iret
pop
and
add
mov
cmp
sbb
pop
call
add
mov
pop
cli
push
ret
or
hlt
push
or
cmp
cmp
push
mov
cmps
adc
push
aas
es
mov
ins
jne
jle
out
add
or
movs
(bad)
sub
stos
inc
mov
pop
shr
mov
out
lock
in
sbb
add
test
mov
call
cwde
push
jne
or
pop
push
ret
bound
xchg
clc
aaa
inc
cmp
ret
push
mov
xchg
jbe
lea
fs
into
mov
pop
push
jbe
push
add
inc
sbb
push
or
add
jae
mov
add
add
dec
icebp
push
ja
xchg
sub
mov
pop
add
je
and
or
dec
int
shl
inc
adc
loopne
push
adc
pop
(bad)
jle
inc
sbb
xor
inc
sbb
pop
pop
sub
xlat
and
push
dec
xor
call
fwait
push
jns
xor
imul
or
out
mov
lods
into
xor
fist
sub
xchg
dec
pop
int3
call
mov
add
add
inc
add
cmp
and
cmp
pop
fimul
fsubr
add
das
pop
pop
or
or
iret
cmc
xor
push
sub
add
xchg
shr
ror
push
imul
in
xor
mov
xlat
mov
mov
data16
xor
cmp
ror
push
dec
xor
push
inc
dec
test
sub
xchg
das
or
aaa
out
and
and
sbb
cs
in
cmp
add
je
cmp
sbb
int3
add
sub
mov
cmps
into
add
sbb
or
mov
xchg
(bad)
xor
jmp
ins
outs
jb
bound
es
push
out
addr16
and
movs
arpl
loopne
push
pop
and
aas
jb
push
sub
fsub
outs
das
mov
and
stos
ret
pop
add
add
push
inc
inc
fmul
push
xor
inc
mov
inc
jl
push
and
mov
mov
inc
add
xor
sub
jbe
xor
pop
mov
dec
dec
jg
and
dec
push
adc
push
cmp
push
mov
push
inc
mov
or
inc
inc
and
sub
sbb
mov
push
mov
and
jb
sbb
ins
add
aas
sub
repnz
mov
ins
pop
sbb
jle
push
cs
pop
pop
sub
pop
mov
jmp
cmp
adc
adc
or
cmp
inc
leave
push
and
shl
jbe
sbb
cmp
inc
daa
inc
(bad)
xor
pop
fidivr
imul
inc
into
add
call
jnp
rol
inc
adc
cli
push
add
push
inc
fsubr
mov
mov
inc
sbb
push
adc
(bad)
xchg
add
sub
or
adc
add
cmp
push
jl
or
mov
out
adc
mov
dec
xor
push
scas
xor
daa
popf
sub
push
sbb
xchg
push
xchg
sbb
bound
add
lahf
shl
sub
sbb
mov
ins
fidiv
push
jo
repz
mov
daa
mov
pop
std
daa
mov
push
push
hlt
mov
sub
retf
test
push
xor
(bad)
in
push
jo
cmp
stos
jo
ds
pop
dec
cmp
cmp
add
enter
outs
pop
xchg
mov
or
pop
cmp
dec
jle
pop
push
dec
enter
pop
sub
mov
out
xor
sbb
jo
test
jo
mov
loop
push
ss
js
jnp
mov
inc
xor
jg
cmp
cmp
push
das
enter
mov
and
push
add
pop
adc
cmp
or
sbb
xchg
fmul
push
pop
dec
or
or
inc
mov
xor
push
rcr
inc
and
xor
xchg
jo
pop
cmps
test
adc
mov
sbb
iret
cmp
les
test
xchg
pop
jno
and
inc
daa
es
xchg
dec
sub
pop
cdq
inc
xor
mov
dec
sbb
mov
mov
push
rol
aaa
mov
push
and
lahf
sub
xchg
aaa
adc
and
popa
inc
daa
imul
adc
adc
push
sbb
dec
ins
into
mov
and
add
mov
fsub
pop
sub
adc
test
push
(bad)
mov
add
dec
xor
dec
push
push
pop
xor
aaa
lods
in
dec
sub
add
cmp
xor
ins
or
mov
cmp
xchg
aas
shl
ficomp
sub
idiv
or
add
pop
das
xor
and
sub
inc
add
sbb
sub
adc
add
fistp
dec
das
sbb
inc
pop
sub
pop
mov
daa
sub
data16
test
add
sbb
pop
pop
or
out
cmps
inc
hlt
lds
adc
push
and
or
(bad)
pop
inc
shr
ret
and
push
outs
sti
mov
add
adc
xor
adc
mov
sbb
inc
and
adc
jae
sbb
inc
push
imul
cs
xchg
add
cmp
push
lea
pop
imul
add
clc
pop
add
pop
sub
push
out
sbb
and
sub
(bad)
xor
jecxz
sub
push
and
inc
pop
movs
pop
aaa
adc
jge
cmp
sbb
adc
adc
and
mov
ss
sbb
inc
jo
push
arpl
(bad)
mov
sbb
fwait
(bad)
aad
and
and
cmp
mov
in
ins
and
dec
pop
or
pop
inc
repz
and
adc
aaa
xor
cwde
xor
jo
sub
movs
push
loop
adc
das
out
movs
jmp
adc
dec
lods
ror
pop
cli
aas
loope
loop
cmp
das
pop
sbb
sbb
jmp
add
or
sub
fild
pushf
pop
dec
jg
or
jg
lock
xor
dec
ja
xor
or
fidivr
adc
or
xchg
mov
outs
test
daa
push
jmp
imul
xor
and
add
test
cs
inc
dec
inc
push
loope
icebp
inc
or
dec
and
pop
sbb
out
fisttp
pop
xor
loop
push
addr16
dec
pop
mov
xchg
pop
pop
sbb
push
dec
(bad)
inc
xor
arpl
cmp
inc
adc
call
adc
pop
jns
inc
clc
out
sbb
push
dec
sub
dec
inc
or
dec
iret
(bad)
aas
aam
dec
ins
and
or
sbb
inc
fadd
icebp
scas
fist
sub
mov
xchg
add
sub
aaa
mov
lods
mov
es
adc
sub
push
and
cmps
iretw
ja
fs
gs
gs
sbb
add
push
mov
fs
inc
add
pop
shl
add
pop
cmps
add
das
push
fsubr
mov
hlt
lods
dec
inc
cld
outs
sbb
cmp
jecxz
adc
cmp
repz
and
cmp
repz
and
sahf
out
add
or
xchg
int
xor
dec
sbb
jmp
sbb
mov
xchg
adc
adc
mov
ins
(bad)
jns
and
sub
xor
inc
neg
mov
mov
mov
mov
mov
add
sbb
fldcw
sub
add
or
fwait
dec
mov
adc
pop
add
mov
ins
adc
push
push
dec
verw
int
mov
and
das
imul
inc
inc
cmps
inc
jb
push
mov
ds
xor
mov
rol
ror
jge
jo
(bad)
ds
into
cmp
fldcw
iret
inc
rcl
push
nop
mov
mov
loopne
dec
(bad)
fbld
inc
(bad)
mov
neg
jmp
inc
cmp
mul
pop
add
inc
test
dec
push
ds
push
aaa
shl
mov
mov
call
push
and
mov
add
adc
mov
mov
lods
pop
(bad)
out
(bad)
dec
out
dec
push
push
mov
inc
push
ins
ss
adc
cli
mov
sub
(bad)
jle
sub
mov
sbb
mov
ds
pop
sbb
cmps
add
jle
jo
(bad)
fsub
das
add
xor
dec
xchg
mov
mov
cmp
pop
in
pop
cmp
adc
jmp
aaa
aaa
mov
and
lock
pop
sbb
fisttp
sbb
hlt
rol
pop
push
and
jb
mov
arpl
outs
push
and
fidiv
dec
clc
adc
pop
fsubr
enter
dec
dec
mov
daa
iret
in
cdq
cwde
xor
mov
jae
pushf
cmp
push
leave
leave
dec
dec
cmp
add
sub
ins
inc
js
jae
in
scas
cmp
pop
add
mov
dec
pop
int3
repnz
pop
or
or
clc
push
push
dec
(bad)
call
test
ss
cmp
xor
sub
adc
inc
sbb
sub
xor
inc
push
xor
lds
adc
mov
cmps
or
jnp
ins
push
outs
add
add
dec
mov
sub
les
das
js
dec
mov
mov
jb
inc
arpl
dec
jp
push
shl
pop
push
jb
jo
cld
jg
arpl
bound
je
bound
imul
psraw
adc
mov
jecxz
fbld
or
fsub
(bad)
out
test
sub
mov
outs
pusha
jecxz
in
inc
mov
xlat
inc
(bad)
movd
outs
movs
inc
dec
es
push
cmp
or
out
mov
pop
and
aaa
sbb
push
pop
fiadd
ret
daa
sbb
test
outs
(bad)
fbstp
push
and
dec
sbb
daa
out
loopne
fidivr
ins
aam
loope
sbb
mov
push
aaa
ret
or
cmp
jno
mov
inc
pop
xor
pop
jns
(bad)
adc
aas
sbb
push
or
add
scas
add
rcr
adc
inc
imul
mov
add
hlt
pop
adc
in
mov
mov
out
add
test
arpl
add
pop
jecxz
or
cmp
and
loope
pop
(bad)
in
out
div
mov
xor
clc
push
inc
jns
pop
int
inc
imul
sahf
pop
js
ins
bound
push
aas
in
repz
push
push
push
pop
cmp
inc
ja
fisub
in
stos
sub
nop
mov
pop
in
push
ds
push
push
idiv
sbb
push
es
cmps
mov
jns
cmps
push
aad
cs
imul
inc
xchg
pop
test
loope
outs
in
jns
mov
mov
and
cmp
cmps
div
dec
inc
push
cmps
fldcw
push
lahf
pop
push
sbb
aaa
mov
mov
mov
rcl
ja
sahf
adc
fiadd
out
test
sahf
out
xor
out
or
jns
xor
pop
and
inc
pop
pop
fistp
stc
xor
out
sbb
sahf
push
adc
mov
repz
adc
pop
in
pop
idiv
out
jne
mov
push
dec
push
pop
call
scas
sbb
cmps
sbb
mov
rcr
push
lock
add
stc
cmp
xor
sub
ret
(bad)
mov
nop
push
cld
inc
test
jl
repz
adc
pop
mov
and
xlat
call
push
sti
sahf
cmps
stc
inc
push
dec
repz
or
dec
in
push
push
sbb
(bad)
sahf
xor
or
and
fs
push
add
push
jnp
enter
dec
cwde
inc
xor
iret
repz
fst
or
in
cmps
stc
cmp
sbb
cmp
mov
lods
repnz
push
cld
dec
adc
int
test
dec
imul
in
into
adc
push
repz
out
scas
iret
lock
iret
repz
xor
mov
ins
and
push
cmp
jo
iret
repz
cmps
(bad)
(bad)
push
iret
repz
push
jle
lock
inc
cmp
xchg
aad
pop
dec
sbb
scas
sub
cld
add
cs
adc
stc
add
adc
jg
push
push
mov
xor
adc
mov
lds
mov
scas
int
mov
cs
aas
leave
loop
and
push
pop
mov
mov
loopne
mov
dec
sti
das
jbe
pop
int3
push
and
pop
sbb
enter
das
in
sub
xchg
inc
repnz
iret
pusha
or
daa
or
add
push
push
cmps
add
add
outs
pop
scas
or
pop
(bad)
retf
dec
push
mov
cmp
dec
popa
lahf
aas
jns
inc
fadd
stos
in
imul
sbb
or
pop
loope
addr16
push
mov
jnp
dec
mov
jae
fisub
mov
and
mov
fidivr
out
add
dec
call
je
push
jmp
cmps
dec
add
lods
xor
mov
pop
push
aam
pop
push
dec
pop
je
in
ffree
mov
aaa
push
fisttp
jp
das
add
sbb
repnz
gs
sar
outs
push
inc
imul
xchg
ret
dec
test
or
mov
ja
mov
pop
sub
add
add
in
fstp
pop
xchg
cmp
pop
cmp
in
ror
adc
cwde
es
ins
jo
es
ins
je
push
addr16
jo
jae
es
in
cmp
xchg
outs
and
cmp
sub
sub
push
cmps
mov
aad
push
or
cmp
xor
xor
xor
fwait
jge
xor
xor
xor
xor
cmp
push
add
add
pop
pop
or
pop
or
into
pop
sti
sub
sub
dec
outs
add
bound
xor
add
inc
adc
add
mov
dec
mov
cmp
imul
sub
cmp
push
cmp
or
daa
pop
(bad)
ret
add
sub
(bad)
adc
das
or
push
mov
cmps
inc
pop
and
xchg
imul
outs
outs
aas
push
neg
push
sbb
inc
sar
and
xchg
lock
ret
pop
push
inc
cmp
sbb
xchg
into
inc
adc
out
pop
ret
sahf
loop
adc
pop
sbb
nop
mov
mov
mov
int3
cmps
sub
int3
sbb
daa
push
pop
dec
test
call
test
mov
add
or
jge
cmp
push
push
push
jbe
or
test
sbb
dec
fld
add
ret
and
cmps
pop
cmp
pop
xchg
das
xor
add
mov
sbb
pop
movs
das
sub
inc
sbb
push
sbb
fcom
dec
and
(bad)
out
sbb
xor
fcom
sahf
loopne
inc
aaa
and
mov
daa
jecxz
xor
adc
jno
hlt
pop
inc
adc
push
mov
sbb
das
sbb
and
iret
mov
push
scas
push
ficomp
add
ins
and
mov
stos
add
shl
dec
daa
lods
daa
jge
adc
push
(bad)
das
div
jle
rcl
adc
mov
xor
or
or
pop
jno
mov
mov
(bad)
imul
popa
daa
pop
sub
add
push
das
dec
pop
and
dec
add
test
inc
pop
push
repnz
xor
movs
arpl
icebp
mov
or
(bad)
inc
mov
aaa
add
das
mov
outs
pop
pop
mov
pop
cdq
daa
sbb
xchg
outs
ficom
or
(bad)
fmulp
pop
addr16
stos
adc
jg
jno
sbb
mov
or
arpl
add
arpl
pop
shr
ins
and
mov
sub
mov
shl
add
outs
retf
into
inc
dec
jecxz
xor
fs
sbb
push
xor
jmp
mov
add
sub
mov
and
push
pop
adc
out
and
add
inc
mov
dec
js
fisttp
jo
outs
ja
clc
adc
shl
fwait
retf
shl
loopne
stc
or
in
sub
dec
push
add
loop
or
sbb
inc
inc
sbb
or
sahf
loopne
(bad)
push
das
das
mov
lods
jo
xor
pusha
dec
xor
push
test
aam
pop
ja
not
xor
or
(bad)
das
lahf
or
inc
fsub
or
pop
sub
dec
jnp
ds
sub
push
mov
sbb
xchg
cmp
add
pop
jb
sbb
cmp
nop
fisttp
ret
and
cmp
push
in
aam
add
ret
scas
xor
adc
je
push
push
push
pop
dec
test
and
xchg
sub
popa
clc
mov
pusha
jg
outs
push
mov
rcr
das
xchg
dec
sub
xchg
mov
adc
movs
pop
ret
and
ins
push
xor
and
mov
daa
(bad)
lock
xor
das
and
pushf
or
adc
adc
daa
les
and
gs
sub
fcmovbe
mov
inc
push
and
popf
or
or
adc
mov
pop
push
sub
scas
adc
pop
or
push
mov
push
add
mov
push
sbb
retf
rcr
mov
pop
push
push
inc
add
add
push
push
jnp
fs
les
sbb
xor
dec
popa
or
push
mov
int3
dec
lods
pusha
push
adc
fcom
(bad)
fs
pushf
add
push
xor
cdq
and
push
push
enter
push
cwde
pop
or
adc
es
data16
push
inc
retf
dec
popa
lock
dec
nop
jecxz
or
inc
or
and
imul
sbb
test
mov
scas
mul
push
das
push
mov
mul
dec
pop
mov
cs
push
pop
inc
or
jle
dec
ja
pop
pop
inc
push
std
or
call
cmp
in
pop
aad
inc
in
je
idiv
cmp
pop
pop
dec
pop
jecxz
fild
pop
jmp
pop
xor
cmp
xchg
sub
inc
xchg
xor
mov
fsub
adc
in
push
aaa
push
pop
cmps
jmp
inc
push
lahf
sbb
aas
jge
xor
rcpps
imul
sub
inc
push
mov
mov
rol
add
ror
push
dec
pop
sbb
pop
inc
lahf
test
jo
call
les
fsub
mov
xor
add
lock
push
pop
dec
adc
test
pop
adc
imul
adc
inc
dec
pop
add
inc
inc
add
push
mov
dec
add
dec
and
adc
dec
pop
xor
or
and
cmps
(bad)
(bad)
inc
or
sbb
xor
dec
add
push
pop
sbb
dec
sub
(bad)
call
push
push
dec
adc
aas
pop
xor
inc
sbb
pop
xor
inc
push
and
and
inc
xor
pop
in
dec
pop
dec
and
xor
shr
call
out
adc
dec
sub
xor
add
inc
mov
std
cmp
inc
dec
and
or
adc
push
xor
sbb
sub
(bad)
(bad)
push
add
dec
pop
pop
push
dec
dec
pop
ss
sub
das
sbb
cmp
pop
sub
sub
inc
movlps
push
inc
adc
sbb
and
push
and
sub
les
mov
cmp
or
adc
and
dec
ficom
mov
pop
push
jne
hlt
mov
mov
sbb
inc
aas
adc
or
sub
add
loop
add
or
or
test
les
lock
xor
out
aas
(bad)
dec
js
push
cmp
sub
sbb
stos
adc
xchg
inc
and
xchg
push
push
dec
cmps
nop
clc
cs
push
outs
inc
mov
or
and
mov
dec
ins
jne
adc
push
retf
add
sbb
inc
pop
sub
push
xlat
test
xor
inc
ds
cld
jmp
push
push
pop
jmp
push
inc
push
dec
inc
dec
push
dec
call
add
add
(bad)
inc
sub
(bad)
mov
xchg
inc
aaa
jno
sti
shl
ret
icebp
adc
pop
movs
cmp
aad
jg
ins
std
sbb
cwde
stos
pop
fsub
and
jge
(bad)
(bad)
dec
(bad)
mov
and
fwait
rol
fwait
in
inc
mov
ud0
cmp
and
sub
sub
fsubr
stc
jbe
lock
(bad)
call
cwde
ins
(bad)
xor
(bad)
jg
mov
inc
xchg
cmps
aad
arpl
push
inc
call
adc
or
cs
ins
sub
(bad)
cmp
jae
gs
call
leave
ret
sub
xchg
mov
data16
mov
call
xchg
shl
cdq
(bad)
test
push
push
shl
dec
daa
mov
std
(bad)
(bad)
mov
sbb
dec
stos
fmul
retf
rep
cs
arpl
cmc
adc
enter
mov
(bad)
mov
movs
mul
jno
addr16
cli
(bad)
(bad)
jmp
scas
addr16
cmp
dec
movs
jg
push
push
mov
fwait
stos
fld
pop
dec
aam
cmp
mov
(bad)
(bad)
dec
data16
or
jae
jne
dec
and
sub
jb
sub
dec
(bad)
(bad)
(bad)
jmp
pop
imul
inc
jbe
xor
jnp
and
xor
xor
pop
fs
cmp
push
cld
jmp
inc
je
and
pop
or
push
jno
(bad)
ds
inc
pop
inc
and
cmp
cmp
push
outs
inc
and
xor
pop
loope
clc
out
jg
push
dec
inc
inc
dec
inc
cmp
push
sub
ins
dec
xchg
sub
jnp
or
push
cmp
aas
addr16
mov
push
inc
add
sub
push
inc
das
out
mov
mov
daa
pop
daa
and
mov
fisttp
push
dec
aas
dec
and
out
dec
cmp
and
inc
mov
jns
sub
push
aaa
push
xor
fisub
xor
xor
popf
in
inc
push
xor
xor
and
fstp
jbe
aaa
inc
push
inc
cs
inc
cmc
mov
scas
ss
cmovb
pop
ss
lahf
ss
sub
test
add
mov
ret
imul
outs
aas
ins
sbb
adc
inc
dec
retf
mov
outs
sub
(bad)
ss
mov
xlat
adc
sub
mov
movs
scas
bound
into
jle
adc
cmp
aam
mov
or
int
fsubr
ja
fld
out
nop
(bad)
arpl
xchg
rol
faddp
or
jo
out
daa
sbb
fs
push
mov
xchg
popa
or
push
pop
push
push
sub
mov
mov
daa
sahf
pop
push
out
xor
xor
sub
daa
sbb
or
push
sbb
mov
adc
les
pop
jp
xchg
cmc
aam
call
cmps
aas
lods
and
push
mov
test
add
mov
jp
pop
mov
jo
pop
ins
push
sbb
stos
xor
or
sahf
and
mov
or
pop
mov
or
pop
cmp
scas
pop
mov
mov
leave
and
lds
retf
rcl
jge
pop
pop
cmp
mov
add
dec
mov
adc
or
pop
add
aaa
add
mov
shl
push
fidiv
mov
push
jb
jg
fldcw
cmps
dec
pop
or
mov
sbb
or
add
inc
sbb
icebp
sbb
sub
add
sahf
and
mov
enter
pop
inc
adc
jne
adc
test
adc
add
stos
sbb
pop
outs
outs
push
pop
mov
je
xor
js
xor
test
jbe
mov
jo
into
(bad)
cmp
je
pop
out
or
outs
and
sub
sbb
inc
aad
cmp
xor
ins
loop
adc
pop
push
lea
out
mov
fwait
jno
jp
outs
ins
loop
popa
je
fs
ins
js
cmp
push
and
adc
test
aas
pop
or
pop
push
gs
or
and
dec
and
and
sbb
pop
adc
scas
push
ins
inc
aas
sub
sbb
rol
bound
pop
dec
lods
pop
mov
gs
add
add
(bad)
(bad)
cmc
test
and
push
fsub
push
cmp
push
adc
out
shl
div
aas
inc
jnp
loope
mov
das
pop
inc
stos
add
movs
adc
or
mov
ss
mov
jo
push
push
faddp
inc
inc
sbb
retf
rcl
pop
ja
cld
sbb
and
aas
sub
push
pop
nop
sub
inc
aaa
push
add
sbb
sub
dec
popa
dec
or
push
xor
push
outs
ja
jb
pop
mov
cld
add
jne
jp
lea
outs
adc
pusha
push
sbb
push
and
das
test
imul
push
bound
dec
ds
push
test
or
test
pop
das
pop
sub
fiadd
adc
sbb
mov
and
call
fcom
sub
or
add
fs
jo
xor
nop
mov
stos
or
stos
push
outs
imul
sub
stos
push
(bad)
adc
test
dec
retf
(bad)
xlat
xchg
dec
xor
jmp
rol
or
pop
or
scas
aam
and
push
inc
arpl
and
and
mov
and
pop
in
adc
cli
test
aam
sub
dec
ja
and
mov
sbb
cmp
and
pop
inc
or
sbb
push
ja
cmp
dec
call
and
or
std
rcl
xor
fstp
inc
ja
imul
pop
sub
dec
xor
mov
into
lds
add
(bad)
imul
dec
and
jnp
bndldx
or
aam
shl
test
test
adc
es
add
xlat
ficomp
adc
lods
xchg
jbe
xchg
jbe
pop
pop
pop
(bad)
or
mov
or
daa
fcomp
dec
xchg
enter
dec
pop
movs
mov
pop
(bad)
and
je
ins
daa
imul
aad
mov
inc
xor
pop
std
push
adc
pusha
mov
add
ins
and
dec
push
ror
loopne
sub
aas
dec
cld
retw
sub
sub
inc
dec
mov
add
jo
out
inc
and
inc
add
push
sbb
in
or
add
cmp
add
fst
dec
push
aaa
adc
gs
add
adc
pop
gs
mov
std
movs
mov
dec
and
addr16
popa
pop
pop
xor
cli
outs
dec
outs
sbb
imul
cmps
punpckhwd
ss
lea
push
je
scas
and
mov
pop
scas
jl
cmp
rcl
cdq
cli
pop
ds
inc
pop
push
dec
inc
dec
inc
push
pop
test
xlat
fisttp
gs
icebp
daa
adc
es
inc
xchg
gs
pop
or
push
mov
jb
add
(bad)
inc
bound
and
test
dec
mov
inc
call
push
(bad)
fldenv
jle
or
jle
lahf
inc
jl
add
mov
cdq
add
dec
or
push
or
pop
xor
jns
jb
jnp
inc
pop
push
adc
push
push
inc
add
push
xchg
or
fild
dec
ins
sbb
jae
ja
xor
pop
addr16
loopne
jl
push
iret
cmp
js
inc
pop
fisubr
outs
adc
ds
out
outs
cs
pusha
add
mov
pop
push
out
out
ins
ja
pop
cmp
dec
xlat
les
(bad)
outs
clc
sbb
dec
or
mov
or
lods
cmp
xchg
xchg
mov
jle
push
pop
daa
mov
sbb
dec
dec
dec
shl
pop
int3
cmc
dec
add
jge
test
and
adc
mov
add
nop
adc
xor
mov
add
or
bound
(bad)
jne
or
lods
add
cmc
pop
pop
sar
push
pop
addr16
add
cmp
movs
nop
sbb
jbe
stos
arpl
stos
loopne
or
pop
adc
inc
push
inc
outs
test
ins
adc
outs
and
or
pop
xlat
das
loopne
or
fimul
scas
push
icebp
dec
adc
push
ror
fiadd
xchg
aas
xlat
outs
jbe
xor
jg
outs
mov
and
push
push
ror
inc
loopne
xor
jbe
and
(bad)
into
cmp
mov
call
das
add
outs
jg
out
sub
inc
outs
ins
pop
xor
dec
jnp
iret
scas
and
xor
push
mov
jnp
jge
dec
dec
dec
inc
mov
outs
xlat
setbe
mov
push
out
gs
fwait
ins
outs
imul
push
mov
ins
push
hlt
mov
test
in
and
in
sub
jmp
sbb
or
out
test
xadd
sbb
inc
pop
out
ins
mov
inc
(bad)
mov
lock
adc
cmp
aas
lods
fbstp
ror
pop
inc
mov
cmp
push
lods
inc
inc
scas
cmps
add
rcr
add
aaa
daa
idiv
add
add
je
inc
mov
cmp
ds
data16
sbb
popa
addr16
imul
dec
and
daa
add
dec
sahf
xchg
neg
fcom
mov
iret
adc
ficomp
cmp
inc
lahf
add
iret
lds
push
jg
push
daa
aas
out
dec
scas
fs
aaa
pusha
sbb
dec
inc
dec
scas
in
inc
cmp
dec
scas
in
xor
in
scas
sub
out
adc
dec
add
rcl
sbb
adc
inc
and
or
cmps
fnstcw
pusha
push
mov
repz
jnp
sbb
cld
dec
test
out
sahf
out
dec
xchg
js
inc
out
repz
in
dec
rol
or
dec
repz
repz
dec
dec
push
jl
stc
cmp
pusha
inc
sub
xor
js
adc
inc
out
dec
inc
sbb
xchg
sub
sahf
es
js
adc
in
ret
pop
dec
out
dec
fisttp
test
sbb
dec
fadd
dec
call
loop
aaa
in
add
sti
sahf
out
nop
rcr
out
pop
inc
mov
add
mov
jg
jg
adc
and
xor
sbb
xchg
dec
repnz
push
mov
ins
pop
fs
dec
inc
enter
mov
das
cwde
dec
mov
push
mov
lods
fs
or
add
in
xchg
inc
in
mov
and
or
dec
and
es
dec
in
dec
cmp
test
outs
cmp
push
mov
add
xor
scas
push
adc
adc
(bad)
xchg
enter
xor
xor
cmp
cwde
dec
test
out
dec
enter
push
mov
jl
pop
adc
sbb
ret
push
sbb
add
dec
xchg
xor
xor
dec
push
lods
fs
fisub
fild
test
sub
and
test
push
rol
push
dec
loopne
adc
das
fs
sbb
int3
dec
shl
aaa
fcomp
jo
hlt
push
xor
push
lahf
sub
xchg
scas
(bad)
and
add
pusha
dec
ja
stos
loope
jg
int3
bound
scas
in
sub
out
out
mov
fsubp
dec
xchg
fbld
enter
outs
and
inc
xor
sub
push
adc
outs
and
test
jo
pop
and
mov
add
pushf
outs
out
mov
add
cmps
add
sbb
xlat
cmps
call
aaa
push
lock
repnz
in
sbb
pop
ins
push
je
(bad)
pop
leave
mov
add
mul
push
mov
mov
mov
push
mov
push
jo
push
jg
push
cmp
dec
call
push
xchg
xchg
call
sub
sbb
add
loop
cwde
faddp
sbb
arpl
les
push
div
sbb
enter
cmp
(bad)
popa
push
push
outs
jg
cmpxchg
pop
sub
jge
je
daa
test
lahf
data16
ins
push
jl
pusha
enter
fst
dec
xor
adc
push
out
or
mov
dec
cmps
bound
inc
sbb
xlat
mov
xchg
and
fcmove
pop
xlat
and
add
xlat
dec
shl
or
cwde
push
xchg
sbb
loopne
jo
dec
push
lahf
ins
and
inc
jno
pop
mov
pop
les
xor
add
inc
mov
and
add
aam
add
loopne
push
scas
js
cs
ror
xor
xor
aaa
leave
adc
hlt
outs
add
daa
cmp
and
pusha
cmp
out
outs
mov
add
pop
leave
jae
jg
add
int3
ja
mov
ins
fsub
push
clc
jg
addr16
adc
add
push
xchg
or
dec
cmp
push
add
sub
das
and
and
push
jb
jge
js
das
outs
add
ss
xor
pushf
sub
call
adc
push
cmp
and
aaa
add
movs
or
leave
test
js
ins
ins
pusha
pop
iret
movs
xlat
jo
push
xor
sahf
iret
in
xor
(bad)
daa
and
xor
jb
mov
daa
or
pop
shl
xchg
inc
sar
out
loope
mov
fcomp
shl
xor
les
xchg
stos
or
dec
or
push
add
or
dec
jno
scas
(bad)
or
and
or
daa
in
cld
push
or
sub
movs
push
pop
outs
add
dec
pop
or
dec
sahf
and
add
xchg
dec
adc
repz
loopne
clc
pop
add
xor
push
pop
pop
scas
add
sbb
push
pop
leave
push
lock
clc
add
mov
cwde
lahf
addr16
mov
or
jbe
xchg
push
xor
out
daa
in
scas
in
add
es
sub
pop
cmovl
xor
das
sub
xchg
pop
mov
addr16
xchg
out
add
mov
call
sar
push
mov
dec
and
fsub
fwait
cmp
and
inc
les
pop
dec
ja
pop
pop
outs
xchg
mov
xchg
test
enter
pushfw
xlat
mov
cmc
loopne
fild
pop
out
(bad)
iret
lds
sub
xbegin
fistp
(bad)
addr16
out
(bad)
adc
mov
mov
pop
push
fwait
sbb
int
in
outs
outs
mov
push
xor
add
out
xor
inc
mov
push
sahf
out
sahf
inc
jl
ret
cmp
push
cmp
iret
cmp
adc
mov
lahf
out
add
push
push
pop
call
pop
pop
inc
jge
out
jo
(bad)
repnz
mov
fisubr
push
bound
int
jns
pop
pop
and
repz
test
xor
out
addr16
ret
inc
sti
cmp
repz
js
retf
sub
call
fisubr
bound
lahf
out
mov
push
dec
repz
mov
test
loope
gs
cmp
repz
pop
data16
inc
jbe
call
int
stc
cmp
repz
imul
xchg
jl
iret
out
imul
xor
out
ins
fstp
outs
jnp
repz
out
outs
dec
mov
jl
dec
popa
add
sub
cmps
stc
cmp
js
into
push
jae
iret
repz
retf
add
les
repz
jne
rol
inc
ins
sahf
out
cmp
out
ja
xchg
inc
js
jns
loop
iret
sar
sar
jnp
ds
repz
cmp
cmp
jl
out
jg
enter
xor
cmps
fld
jg
jnp
xor
dec
xor
call
dec
cmp
xchg
push
sbb
call
and
mov
sar
dec
push
mov
jl
cmps
stc
or
outs
mov
ds
ror
rol
lea
int
fucom
mov
enter
iret
shr
nop
sub
out
call
pop
sahf
cmps
stc
cmp
xor
sar
cmp
add
jns
mov
xchg
xchg
aas
call
out
fwait
rcr
pushf
push
sahf
test
iret
sar
shl
mov
jns
mov
clc
sbb
sar
mov
adc
outs
cmp
out
mov
scas
jl
out
stc
xor
ja
dec
stos
jns
iret
rcl
jl
cmp
out
adc
out
jl
mov
mov
ror
mov
adc
ins
ss
mov
mov
mov
mov
dec
mov
mov
mov
in
add
(bad)
bswap
inc
jnp
pop
push
stc
inc
aas
shl
in
pop
sar
sti
int3
pop
fidivr
ds
sti
sahf
dec
dec
and
(bad)
jg
inc
out
add
pop
xchg
or
pop
bound
push
test
daa
out
fcmove
dec
jg
inc
aaa
inc
mov
ins
jns
(bad)
(bad)
xchg
adc
je
pop
jb
movs
push
ss
and
das
inc
lds
mul
int3
jg
fimul
pop
aas
jo
das
jbe
mov
pop
jg
dec
xor
mov
and
push
(bad)
jns
fistp
(bad)
or
aas
fimul
xchg
xchg
aas
xlat
pushf
bound
int
mov
repnz
iret
rcr
adc
mov
mov
adc
(bad)
mov
aas
mov
movs
nop
pop
mov
movs
or
xchg
fnstsw
fisttp
cmp
mov
mov
dec
div
push
idiv
enter
pop
sbb
int3
in
je
pop
loop
pop
scas
iret
push
sub
aas
cwde
test
pushf
loop
mov
pushf
cmp
subps
js
lahf
mov
or
inc
nop
jp
jns
push
push
add
out
add
int
neg
aam
clc
add
xor
les
in
jns
pop
mov
xchg
inc
addr16
xchg
and
sbb
cmp
adc
fmulp
and
pop
repnz
out
xor
inc
lods
in
xchg
movs
xchg
mov
xlat
push
jno
xchg
mov
sti
push
inc
sbb
mov
xchg
xchg
aaa
out
push
sbb
push
(bad)
sub
add
sahf
pop
das
push
pop
push
xchg
cmp
mov
mov
jl
push
and
sar
cmps
movs
in
out
cmp
daa
xchg
sbb
popf
cmp
jb
xor
xchg
sub
(bad)
enter
in
cs
and
add
pop
pop
push
cmps
mov
ins
scas
cmp
mov
jb
inc
dec
(bad)
iret
mov
arpl
enter
inc
push
cmc
inc
outs
leave
xor
add
sbb
add
test
sub
mov
jmp
imul
inc
test
imul
adc
xchg
lock
adc
in
add
push
jns
aaa
jb
push
dec
push
add
out
sahf
out
add
icebp
jns
pop
or
push
fisttp
dec
sahf
and
dec
ins
xchg
inc
and
repnz
ins
mov
pushf
xchg
adc
leave
add
in
ins
xor
in
lds
into
cmc
ins
push
mov
ins
xchg
inc
sbb
push
inc
sbb
jb
pop
pop
dec
pop
push
pop
pop
xchg
pop
leave
jae
int3
test
xchg
popf
cmps
add
add
push
adc
jb
xor
fsubp
out
xchg
pop
jb
idiv
fs
mov
and
pop
xor
pop
xor
xchg
and
dec
pop
mov
ins
pcmpeqb
fucomi
test
mov
pop
outs
pop
leave
adc
mov
and
out
mov
pcmpgtd
jo
mov
pop
cvtps2pd
add
xchg
aas
pop
loopne
xor
iret
sbb
inc
das
(bad)
and
jo
jo
jo
sbb
mov
mov
popf
nop
inc
mov
xchg
dec
jo
scas
pop
stos
adc
and
mul
lock
xchg
pushf
and
sub
fdivr
(bad)
push
jno
cmp
daa
imul
adc
mov
xchg
pop
in
push
adc
mov
adc
dec
repnz
sahf
test
push
jb
jb
aam
inc
fs
xchg
out
mov
clts
pop
push
pop
mov
leave
dec
pushf
jb
pop
xchg
inc
mov
enter
pop
push
xchg
cmps
in
leave
call
jae
rcr
and
push
daa
dec
out
cmp
add
xchg
lahf
jo
pop
iret
fcomp
out
xchg
xchg
xchg
xchg
pop
stc
pop
add
minps
out
xchg
xchg
pop
and
cmp
inc
or
pop
jns
out
or
out
sahf
out
adc
jns
adc
jns
out
adc
xor
sahf
out
sbb
sbb
adc
sbb
fisubr
lods
je
push
leave
dec
cs
fcom
cmp
les
inc
pop
dec
int
stc
fcomp
inc
push
fld
daa
fdivr
jbe
add
push
mov
push
push
js
jg
pushf
in
hlt
pop
les
lea
pop
pop
pop
pop
daa
push
xchg
js
stc
or
das
pop
int3
mov
lea
aas
add
push
and
inc
leave
and
pop
pop
jbe
or
xchg
imul
lahf
jo
cmp
mov
in
popf
fadd
(bad)
fild
hlt
popf
in
mov
pusha
and
ja
xchg
adc
pop
je
fsubr
into
mov
fs
test
std
push
int3
mov
fcom
in
adc
rcl
jbe
cmp
lock
enter
popa
or
adc
fst
and
pop
je
jae
dec
push
push
add
xor
and
aaa
inc
push
leave
pop
sub
inc
cmp
pop
leave
retf
sub
jns
popa
pop
mov
addr16
iret
retf
leave
jae
repnz
pop
leave
mov
(bad)
out
bound
in
in
ss
pop
push
(bad)
(bad)
(bad)
jmp
xchg
and
inc
or
bnd
and
in
(bad)
js
push
pop
enter
push
sar
ins
xchg
push
in
jb
jns
aad
jnp
arpl
xchg
dec
inc
push
arpl
fisub
mov
xchg
movs
iret
push
push
inc
dec
jb
loopne
sar
jns
push
lock
mul
jnp
push
fs
movhps
fs
das
xchg
add
fs
in
das
xchg
nop
jne
xchg
jge
jbe
inc
fwait
mov
addr16
leave
inc
mov
repnz
and
inc
repnz
inc
push
jge
cmp
add
jns
push
gs
gs
cs
out
jge
add
mov
out
sub
out
push
inc
push
ror
repnz
cmp
mov
jle
adc
adc
jle
popf
bnd
and
jle
scas
add
cmps
loopne
pop
data16
cmp
dec
scas
dec
xchg
push
fs
push
ins
xchg
jae
mov
stc
sbb
outs
(bad)
data16
out
sbb
jns
jmp
addr16
jns
pop
addr16
addr16
addr16
addr16
jns
aaa
addr16
addr16
addr16
addr16
jns
push
addr16
addr16
pop
daa
daa
daa
fisttp
femms
or
daa
or
or
daa
daa
daa
daa
pop
push
add
daa
add
add
xchg
cmp
mul
mov
in
jbe
addr16
xchg
ss
jl
xchg
add
pop
das
xchg
out
pop
or
pop
test
jae
push
ja
mov
and
daa
lea
in
inc
scas
jne
mov
mov
in
outs
push
fcmovnbe
jecxz
xchg
jmp
div
push
ud2
sahf
out
mov
push
or
or
xor
lahf
or
dec
imul
xchg
pcmpeqd
jle
add
iret
mov
mov
iret
(bad)
add
push
(bad)
out
es
scas
popf
test
push
push
mov
dec
(bad)
mov
push
push
movd
wrmsr
or
dec
cmovo
sahf
sbb
push
aas
movs
add
pop
jns
(bad)
pop
or
mov
es
adc
sbb
cmp
xor
leave
repz
dec
add
pop
out
jns
popa
push
add
add
jg
xchg
cld
outs
popf
push
test
popf
pushf
pushf
fsub
into
(bad)
fsubp
ror
adc
enter
imul
das
push
add
imul
push
iret
enter
pop
(bad)
popa
imul
dec
dec
es
test
jns
scas
add
in
iret
mov
lods
add
and
ins
adc
sahf
aaa
jb
sub
aas
push
push
dec
jns
out
pop
push
or
out
sahf
out
or
or
ins
pcmpeqd
push
shl
xchg
shr
addr16
das
xchg
out
movs
adc
push
leave
sub
ins
outs
fadd
outs
outs
jns
jno
cmp
fist
push
test
mov
mov
iret
pop
dec
shr
or
and
add
push
inc
outs
cmp
inc
cmps
dec
outs
push
outs
pop
outs
mov
outs
enter
dec
and
adc
rcr
mov
call
cmp
xchg
jae
add
outs
call
outs
push
lock
das
lods
and
and
outs
mov
xchg
cmp
xchg
outs
cwde
xchg
jecxz
jb
ror
ja
leave
leave
inc
repnz
sbb
jo
ret
popa
mov
pop
addr16
inc
jo
(bad)
lea
dec
jo
jo
push
stos
(bad)
repnz
ja
mov
int3
jb
pusha
mov
mov
neg
stos
mov
inc
jo
jb
enter
jo
jo
jo
jl
cmp
jo
or
mov
jno
sub
jno
jb
enter
jno
jno
jno
inc
mov
jno
jno
jno
leave
xor
xchg
jno
jno
or
daa
daa
daa
push
mov
daa
daa
daa
in
sti
push
inc
ds
adc
sbb
in
pop
leave
adc
fsubr
xchg
out
test
add
inc
repnz
jb
pop
mov
shufps
xchg
iret
add
mov
jmp
add
dec
xchg
or
ds
push
jae
jae
test
ss
outs
add
jae
pushf
jmp
das
xchg
(bad)
jae
nop
push
push
out
jb
das
repz
mov
leave
sub
add
je
mov
xchg
xlat
outs
sub
cmps
aaa
push
pop
mov
mov
mov
scas
push
add
shr
lea
bnd
xchg
xchg
aaa
lds
jne
or
add
pop
inc
jle
out
adc
and
es
mov
xor
or
sahf
out
or
dec
jne
mov
movaps
mov
pop
mov
les
mov
jae
out
addr16
outs
daa
adc
(bad)
adc
dec
xor
jg
leave
and
das
xor
cmp
repnz
daa
pop
pop
fs
lods
leave
leave
leave
inc
xchg
jbe
ja
enter
adc
add
add
nop
xchg
sbb
xchg
add
ja
leave
jae
push
xchg
in
scas
pop
dec
ja
ja
es
mov
ja
fwait
dec
push
fnsave
mov
fucomi
jbe
mov
rcr
inc
mov
out
(bad)
ja
and
add
fisttp
mov
xchg
cmp
ins
js
push
js
js
js
in
sbb
mov
push
js
jp
pop
pop
pop
pop
cmp
xchg
js
js
pop
pop
pop
mov
js
js
pop
pop
pop
ret
js
pop
bswap
leave
leave
dec
or
or
leave
leave
leave
leave
pop
push
add
leave
add
sbb
sbb
cmp
repz
jmp
sbb
pop
cmp
sahf
or
and
sbb
out
and
and
loope
(bad)
cmp
fsub
in
pop
pop
data16
movs
cmp
leave
cmp
cdq
pop
repnz
out
outs
ret
push
retf
outs
jb
jns
(bad)
pop
(bad)
inc
repnz
or
jns
inc
mov
and
int3
sahf
adc
in
in
in
jp
pusha
push
into
jo
push
fbstp
push
add
cmp
repz
nop
or
mov
test
prefetch
push
and
pushf
cmp
adc
xchg
iret
in
in
loopne
lock
aam
xor
and
jnp
xor
xor
jnp
stc
int3
xor
or
xchg
mov
outs
sub
mov
pushf
fsubr
mov
mov
jne
aas
xchg
sub
or
pop
aas
or
push
push
aad
rcr
js
daa
shl
pop
xor
in
jnp
xchg
inc
jl
in
pushf
jl
xor
xchg
xchg
mov
jo
add
bnd
daa
jmp
test
mov
pushf
pushf
pop
loopne
test
adc
and
jge
mov
cdq
mov
lock
and
inc
push
jge
jge
push
xor
and
inc
int
pop
stc
dec
test
pop
and
xchg
xchg
popf
jmp
pop
mov
and
iret
add
cld
popf
xchg
add
lds
adc
add
push
cwde
inc
lds
jecxz
mov
in
jle
jle
(bad)
jle
xchg
xchg
(bad)
pop
sub
jle
cmove
jns
dec
dec
push
or
dec
sahf
or
je
repz
cmp
jl
test
mov
xchg
pushf
jle
inc
dec
and
mov
jb
jle
jbe
pusha
pop
clc
aas
jns
jmp
sbb
pop
call
or
in
in
sub
xor
cmp
inc
add
dec
aaa
jns
push
das
push
jg
mov
push
jb
inc
dec
push
xchg
setle
sahf
ja
push
add
xchg
pop
jb
loopne
nop
mov
sub
sbb
inc
mov
outs
dec
imul
push
add
jno
aas
aad
fmulp
nop
repnz
call
adc
aaa
or
sbb
js
into
popf
xchg
add
fcomp
cvtps2pi
repnz
ds
call
dec
mov
clc
add
out
or
inc
push
mov
cmp
push
scas
inc
adc
mov
sub
je
pop
test
dec
sahf
out
add
jbe
leave
pushf
movs
pop
lods
pop
mov
or
repz
or
or
popf
aam
fadd
fnstcw
in
cmp
add
pop
adc
add
mov
pushf
adc
pushf
jnp
push
push
fsubr
fidiv
iret
add
daa
leave
xchg
cmp
inc
mov
add
sbb
adc
hlt
cld
cmp
in
scas
pop
adc
dec
ja
pop
adc
jns
mov
push
outs
jo
and
add
add
inc
enter
fsubr
leave
enter
sub
fstp
xor
fs
push
and
adc
je
stos
add
and
enter
test
test
test
cmp
repz
inc
ds
out
int
fadd
test
lahf
push
shr
cmp
test
test
enter
das
add
cmp
cwde
test
push
add
sbb
add
out
cmp
sbb
ss
dec
jb
adc
test
jns
xchg
xchg
xchg
xchg
lds
sub
push
pop
xor
cmp
push
fwait
pop
out
pop
xchg
mov
seto
jmp
test
lock
lods
repnz
inc
dec
push
add
into
or
sbb
packsswb
inc
enter
lahf
sub
or
fstp
es
scas
dec
push
pop
dec
call
out
in
add
push
add
repz
or
in
xchg
fsub
stc
out
mov
or
addr16
xor
outs
ja
pop
push
aas
push
pop
leave
jae
cmps
push
enter
daa
daa
js
add
mov
nop
pop
daa
daa
adc
sbb
mov
ret
mov
daa
retf
out
xchg
enter
mov
push
add
ficom
jns
pop
mov
mov
cs
push
cmovp
dec
(bad)
mov
xchg
movs
outs
mov
push
fisub
ja
mov
cmp
mov
cs
xchg
pop
verr
das
das
mov
mov
jb
pop
das
sub
mov
dec
sbb
mov
or
in
jle
xchg
and
mov
adc
outs
mov
shl
pop
in
int3
sahf
fdivr
add
xchg
add
lods
daa
mov
mov
jbe
cmp
mov
cmova
dec
fucom
jns
add
add
cmp
or
addr16
mov
xchg
mov
jae
dec
ds
mov
pop
leave
mov
iret
call
pop
and
iret
fsub
addr16
outs
mov
daa
ss
xchg
test
jp
xchg
push
mov
inc
mov
ja
mov
addr16
lock
int3
and
dec
add
and
cmps
pop
lea
pop
pusha
lea
pshufw
movs
fwait
mov
add
mov
pushf
lea
jns
mov
and
movs
in
outs
(bad)
fimul
cmp
aas
clc
add
dec
sahf
out
adc
sbb
add
dec
dec
dec
add
and
sub
inc
das
dec
sahf
ja
ins
dec
(bad)
adc
push
adc
out
pop
adc
adc
cmp
js
fistp
rcl
(bad)
or
or
sub
stos
and
(bad)
mov
out
pop
movs
adc
outs
pop
(bad)
push
add
sbb
ss
(bad)
(bad)
pop
iret
repz
sub
pop
xor
cmp
sahf
out
cmp
dec
push
or
xchg
out
jns
pop
push
pusha
(bad)
repz
push
adc
add
pop
mov
out
jns
add
and
loopne
(bad)
out
repz
repnz
or
or
nop
cmp
jg
setp
cmp
mov
leave
repz
mov
retf
dec
mov
nop
lahf
retf
retf
retf
retf
mov
ficom
loop
jmp
iret
adc
xchg
or
mov
xchg
pop
sbb
lods
xchg
push
pop
es
iret
lods
dec
ja
xchg
lods
jo
in
dec
js
pop
adc
cmp
pop
mov
ja
push
or
jns
or
or
or
ja
ror
or
shl
daa
pop
add
fwait
iret
les
add
scas
pop
pop
push
and
xchg
cmp
repnz
dec
xchg
push
das
movntq
mov
pop
or
bound
inc
subps
not
cmp
inc
xchg
imul
sub
out
jg
adc
repnz
call
out
pushf
dec
ror
enter
sahf
add
in
dec
inc
add
cmp
cmovs
jb
sbb
xchg
inc
mov
add
daa
iret
cmp
loope
iret
repz
jmp
push
repz
call
repz
add
xchg
sahf
pushf
cmp
and
xchg
in
bnd
adc
pop
in
xchg
pop
(bad)
add
add
inc
dec
repnz
jb
mov
ret
iret
mov
in
or
mov
xchg
jmp
and
xor
xchg
xchg
mov
xchg
xchg
in
or
adc
mov
fcmovne
fwait
xchg
mov
xchg
out
mov
mov
pop
rcr
mov
lock
addr16
addr16
xchg
sbb
and
mov
dec
es
pop
punpcklbw
mov
xchg
add
mov
inc
ins
pop
rcl
mov
and
adc
pushf
cmp
repz
add
add
inc
sahf
xchg
out
pop
pop
push
adc
out
stc
add
pop
jb
ror
jp
scas
adc
xchg
scas
clc
mov
xchg
xchg
or
xchg
xchg
xchg
xchg
enter
pcmpeqd
adc
bndstx
pop
ucomiss
push
pushf
pushf
pushf
pushf
je
mov
inc
sahf
pushf
pushf
fprem
sbb
inc
repz
mov
nop
sbb
sbb
bnd
iret
push
lock
push
and
call
push
push
and
pop
movs
ds
jae
push
jne
mov
push
add
xchg
mov
cld
mov
sub
mov
push
fsubr
pop
test
das
fcom
repnz
setnp
fwait
sbb
inc
mov
fwait
sub
dec
xor
(bad)
daa
pop
leave
xor
mov
daa
daa
xchg
mov
outs
daa
retf
add
cmp
sbb
or
iret
retf
and
add
cmp
ss
ds
cmp
repz
or
push
out
in
iret
or
mov
push
push
gs
cmp
ucomiss
das
(bad)
xchg
int
pusha
mov
pushf
mov
xchg
inc
pushf
pushf
pushf
pushf
fist
mov
xchg
pushf
repz
(bad)
pushf
push
popf
push
xchg
xchg
xchg
xchg
popf
push
popf
and
xchg
xchg
xchg
popf
aas
popf
inc
popf
dec
popf
push
xchg
xchg
xchg
xchg
popf
pop
popf
addr16
outs
popf
jp
aas
mov
nop
popf
fwait
xchg
xchg
xchg
xchg
popf
cmps
popf
mov
mov
out
push
pop
int3
and
and
jns
out
and
and
dec
repz
and
and
inc
shl
cmp
sbb
outs
sahf
mov
sub
cvttps2pi
jns
inc
cs
sahf
outs
stos
mov
dec
jno
jae
ins
in
vmwrite
jmp
push
das
cdq
sahf
test
sahf
mov
in
les
in
iret
dec
dec
mov
add
add
jns
(bad)
std
sahf
mov
jmp
lahf
mov
setg
rcl
jns
mov
cmp
jns
mov
out
cmp
minps
daa
iret
cmp
ins
dec
adc
dec
dec
dec
outs
jne
in
dec
std
mov
push
add
sub
jns
leave
repz
cmp
and
in
cmp
xchg
(bad)
xchg
in
dec
sahf
es
sub
and
add
push
sub
daa
das
getsec
push
das
dec
sahf
out
aas
inc
xor
enter
maxps
mov
mov
adc
enter
mov
pop
aad
mov
inc
das
pop
push
sbb
xchg
and
xchg
mov
leave
out
cmp
dec
mov
rcr
xchg
mov
test
in
push
add
xor
inc
add
cmp
leave
push
cmp
cmps
or
daa
iret
jae
stos
mov
jae
cmp
ftst
adc
sbb
cmp
cli
push
add
jns
ficomp
push
sbb
sbb
in
dec
sahf
sbb
cmp
inc
jns
sahf
out
pop
pop
push
in
jle
fbld
pop
xchg
movs
lahf
movs
stos
movs
cmp
ss
das
sub
mov
xchg
xchg
adc
push
mov
repz
add
cs
out
jns
pop
push
pusha
pop
cmp
jo
or
in
xchg
dec
out
cmps
push
or
sahf
out
fisttp
push
ds
push
adc
iret
cmp
mov
adc
jns
adc
lar
outs
or
repz
fmul
scas
add
pop
mov
inc
sbb
pop
mov
pop
rcr
mov
push
sahf
neg
cmps
iret
push
call
push
add
pop
fimul
and
aas
xor
repnz
in
push
imul
mov
imul
cmps
push
outs
xchg
mov
cmps
ud1
pushf
fmul
xchg
leave
add
inc
in
hlt
paddb
in
enter
test
lods
push
or
fld
addr16
pmaxsw
pop
dec
xorps
xchg
cmp
dec
test
or
pushf
pop
jo
mov
fs
pop
ret
and
in
in
aad
add
cdq
lea
or
test
pop
popa
jb
cmp
ret
mov
outs
outs
pcmpeqd
repnz
iret
add
add
mov
push
sahf
cmps
test
pushf
pusha
ret
leave
xlat
shr
in
in
loope
icebp
cmps
inc
pop
and
push
int3
adc
sbb
dec
ret
xchg
and
sub
xchg
les
cdq
test
inc
stos
xchg
dec
sahf
out
pop
add
out
and
xchg
call
stos
mov
mov
add
shr
mov
jg
(bad)
shr
xchg
stos
stos
fistp
sbb
into
leave
repz
xor
fwait
dec
sub
outs
or
push
mov
stos
pop
adc
jae
test
mov
ret
retf
daa
pop
leave
and
int
outs
paddd
fimul
push
lods
iret
xor
neg
repnz
cmp
push
je
daa
pop
leave
jae
les
daa
cmps
pop
scas
ja
pop
mov
add
jb
inc
repnz
add
ror
(bad)
xor
lods
lds
outs
lods
pop
lods
dec
xor
daa
cmp
nop
mov
lods
lods
ja
daa
daa
pop
leave
(bad)
(bad)
je
leave
add
syscall
jg
enter
scas
adc
das
das
das
sub
dec
scas
fisubr
das
das
push
scas
pop
scas
push
jne
repnz
jo
scas
repnz
scas
ret
repnz
fsubr
repnz
scas
add
imul
scas
fmul
in
and
das
sbb
sbb
pushf
pushf
pushf
pushf
push
adc
iret
repz
sub
ja
push
das
pop
daa
fucom
out
rdmsr
aas
addr16
leave
rep
(bad)
push
mov
out
sahf
cmp
sahf
out
mov
out
sahf
aad
loopne
jmp
cmp
out
test
inc
or
jns
test
out
jns
sub
sahf
out
xchg
dec
cmovp
pop
dec
fs
repz
(bad)
dec
test
iret
repz
push
fwait
push
cmps
cmp
mov
(bad)
shl
cmp
push
call
jb
repz
mov
xchg
and
cmp
push
ds
test
enter
sbb
sahf
out
add
mov
fmul
pop
(bad)
mov
addr16
jo
cmp
in
push
add
shr
mov
rcr
pavgb
adc
iret
repz
and
setle
mov
push
sub
fidiv
mov
add
retf
jle
enter
mov
pop
js
iret
repz
add
jns
pop
cwde
or
int3
push
leave
add
mov
or
daa
mov
dec
mov
mov
mov
daa
daa
daa
iret
push
adc
push
pop
sub
mov
pop
push
add
xor
mov
leave
inc
pop
dec
mov
int3
pop
sbb
and
adc
pop
mov
pop
push
add
aaa
jp
xor
int
mov
mov
in
call
cmp
add
pop
leave
into
cs
cmp
push
add
mov
out
outs
daa
pshufw
sahf
out
sahf
or
pushf
pushf
fmul
pop
mov
enter
pushf
rcr
adc
lahf
sahf
xchg
imul
or
adc
out
sahf
out
sbb
sbb
ror
sbb
push
popf
cmp
leave
push
bound
ins
js
mov
out
and
fcmovne
rep
outs
scas
push
daa
mov
xor
shl
jns
movs
pop
(bad)
mov
add
aam
sbb
add
mov
cmp
and
dec
mov
pop
mov
xchg
xchg
test
nop
cmp
xchg
mov
cmp
cmp
push
push
fiadd
jmp
syscall
or
in
mov
mov
or
fild
pop
movups
adc
out
adc
dec
cmp
out
push
push
bound
repnz
jae
sbb
xchg
outs
movhps
sahf
cmps
fwait
mov
and
lds
and
(bad)
pop
out
icebp
mov
out
mov
push
pop
mov
jns
sub
add
dec
sar
push
call
inc
add
daa
sub
and
rcl
fcmovne
sub
pusha
mov
pop
ja
repnz
xchg
movs
cs
in
sahf
push
mov
mov
fwait
loopne
mov
in
adc
jae
in
hlt
push
idiv
outs
mov
dec
jle
or
push
mov
and
mov
add
daa
iret
repz
or
xchg
outs
sysret
ret
sahf
or
repz
(bad)
pmaxub
mov
out
icebp
mov
popa
sub
adc
xor
enter
pop
xor
mov
xchg
dec
sahf
out
cs
add
mov
add
mov
mov
cmp
cdq
dec
loopne
idiv
mov
add
add
sub
mov
aas
cmp
xchg
and
mov
pop
mov
fs
outs
dec
sysret
adc
test
in
pop
cmps
mov
sbb
aas
aad
loopne
aad
out
jmp
test
out
sahf
aaa
femms
and
and
pop
xor
cs
repz
adc
ins
jns
leave
repz
scas
sub
sub
addr16
das
cld
inc
loopne
sar
mov
and
push
mov
in
in
or
cs
pop
jns
xchg
xchg
ds
dec
orps
jns
out
pop
adc
ins
in
inc
out
outs
mov
in
mov
xchg
jle
jns
out
sbb
cmp
nop
out
sahf
(bad)
and
and
out
jns
fisub
out
sbb
lds
push
mov
cmp
and
sub
es
out
jns
sub
mov
inc
dec
orps
pop
outs
mov
out
data16
pcmpeqd
repz
cmp
sahf
jbe
cmp
cmps
cmp
stc
int3
icebp
mov
aad
adc
pop
cmp
jo
mov
dec
es
aad
out
sub
in
in
push
inc
dec
test
nop
cmp
dec
inc
push
xchg
xchg
pop
xor
mov
dec
add
jl
outs
sub
in
jmp
in
pusha
repz
outs
mov
popa
(bad)
ftst
fld
push
inc
imul
inc
inc
mov
and
xlat
aam
movs
aas
mov
aas
inc
push
xor
adc
inc
aas
cmp
ja
or
push
xchg
xchg
inc
aaa
xor
cmp
rcl
call
jns
in
loopne
fcom
sar
out
enter
mov
cwde
pop
mov
iret
repz
je
ins
push
fs
pop
push
dec
out
daa
iret
inc
cmp
push
sub
dec
repz
adc
add
xlat
lock
mov
repz
int3
ror
ja
loop
das
jo
pop
repz
push
push
add
(bad)
sbb
repz
add
or
popf
pushf
cmp
or
aaa
or
in
(bad)
sub
scas
adc
in
movs
fwait
mov
and
leave
inc
inc
push
addr16
das
push
jo
(bad)
push
mov
ins
popf
cmp
jae
and
jb
mov
and
cmp
in
cmp
leave
in
in
movs
fbld
in
into
aas
xlat
sbb
data16
arpl
jp
sbb
inc
call
xchg
and
and
add
and
call
inc
or
cmp
cmp
jp
add
add
movs
add
cmp
cmps
fisttp
mov
stos
mov
jle
test
shl
fldenv
cmp
(bad)
jg
pop
inc
mov
iret
mov
in
call
popf
inc
jle
adc
push
ficomp
mov
pop
fisubr
xor
fcomp
loopne
jb
jle
jecxz
jno
in
inc
lahf
es
mov
add
pop
add
test
pop
cmp
inc
mov
jle
ja
or
fdivr
jne
inc
xchg
add
or
xchg
test
ins
aas
pop
aas
or
int3
ja
mov
pop
inc
xor
out
push
or
or
iret
repz
adc
add
jns
iret
adc
fstp
pushf
sbb
sbb
add
mov
(bad)
mov
mov
fsubr
fild
(bad)
jns
ror
jp
cmp
jns
cld
jl
inc
(bad)
(bad)
push
add
cmp
fsub
outs
loopne
add
inc
mov
js
and
test
add
lahf
fsubr
push
cwde
jbe
xor
push
push
push
push
mov
inc
dec
or
or
and
out
cli
mov
pop
mov
cs
dec
call
add
pop
and
xchg
or
(bad)
sgdtd
pusha
lea
add
xor
xchg
lods
test
fst
(bad)
loopne
cmp
mov
sbb
mov
adc
sahf
js
ds
push
test
and
lods
out
adc
cmp
adc
ins
and
out
jns
out
or
or
pusha
jnp
out
sbb
je
pop
adc
iret
repz
push
sbb
inc
pop
cmp
repz
and
xor
cmp
repz
and
cmps
into
sbb
clc
popa
adc
jnp
jg
(bad)
outs
xchg
movs
adc
mov
lods
inc
cld
xor
inc
cmp
and
(bad)
and
cmp
cmp
pop
js
mov
lahf
cmps
stc
cmp
adc
xor
add
movs
imul
xor
xor
mov
jae
adc
cli
mov
add
jns
mov
inc
pop
enter
and
cli
or
or
ret
seto
repnz
adc
in
jl
mov
leave
sbb
into
sbb
sar
(bad)
(bad)
dec
and
sahf
mov
sub
inc
rcr
and
sbb
add
xlat
xchg
inc
push
in
(bad)
(bad)
inc
inc
stc
mov
adc
mov
dec
js
inc
fcomip
(bad)
jmp
loopne
jmp
xchg
test
mov
cmp
mov
(bad)
(bad)
fdivrp
popf
sti
jmp
stos
push
inc
mov
repnz
test
pop
stos
clc
scas
adc
(bad)
(bad)
(bad)
(bad)
inc
aam
imul
loope
jp
iret
inc
gs
(bad)
xchg
push
cmps
scas
mov
or
add
dec
pop
inc
in
xchg
cmp
xor
dec
cmps
in
cmp
sahf
xchg
pop
call
(bad)
(bad)
(bad)
push
mov
mov
popa
sar
mov
fsub
stos
xchg
clc
repz
mov
adc
cli
jmp
leave
fwait
xchg
and
and
(bad)
(bad)
addr16
aas
jno
or
mov
pop
fs
dec
lea
(bad)
(bad)
(bad)
(bad)
aas
ret
shr
mov
icebp
aas
ror
and
cmps
out
aas
inc
cmps
mov
ins
scas
add
mov
xor
aad
mov
std
std
into
popa
test
ja
stos
in
das
dec
pop
(bad)
(bad)
(bad)
jmp
dec
les
aas
xchg
les
jne
int
mov
addr16
push
mov
xchg
(bad)
(bad)
(bad)
(bad)
aas
and
(bad)
loop
mov
jp
popa
push
pop
sar
jl
mov
das
lea
mov
test
movs
jmp
jg
sub
jge
mov
inc
rcr
push
ds
(bad)
(bad)
(bad)
jnp
int3
and
call
cmp
jp
and
cmp
mov
cmp
(bad)
(bad)
(bad)
(bad)
std
xlat
cmp
mov
sbb
add
mov
aaa
fld
cmp
jno
shl
(bad)
(bad)
(bad)
(bad)
(bad)
out
dec
nop
pop
cmp
fisub
xor
push
lahf
inc
pop
mov
sub
(bad)
(bad)
(bad)
dec
sub
scas
into
imul
faddp
jge
call
mov
xchg
cmp
push
cli
(bad)
inc
gs
std
or
pop
ficomp
frstor
mov
pop
out
inc
ret
dec
mov
pop
xchg
adc
xchg
retf
fnstsw
cmps
add
xor
popa
push
out
mov
les
(bad)
hlt
push
xor
movs
arpl
mov
mov
push
movs
mov
aad
mov
rcl
mov
(bad)
(bad)
(bad)
jmp
mov
sbb
dec
jno
repz
test
ficomp
jmp
(bad)
(bad)
(bad)
(bad)
push
rol
shr
std
in
leave
mov
add
ins
push
arpl
(bad)
(bad)
(bad)
cmp
or
pop
adc
in
pusha
aad
jno
mov
inc
aam
dec
std
jmp
(bad)
inc
or
ins
cwde
mov
(bad)
leave
mov
ins
fdiv
jne
push
(bad)
fild
or
shr
push
ficom
push
xlat
enter
mov
push
mov
and
mov
cdq
xchg
mov
mov
or
or
and
or
(bad)
jl
das
adc
stos
sbb
data16
inc
fdiv
jno
add
aad
mov
mov
pop
mov
push
movs
in
lahf
xor
mov
js
(bad)
(bad)
call
xchg
sbb
push
sub
ins
fs
add
hlt
(bad)
(bad)
(bad)
call
imul
sbb
xor
dec
add
in
xchg
push
ins
jnp
add
shl
adc
cmc
(bad)
(bad)
(bad)
(bad)
(bad)
fnstenv
adc
mov
mov
bound
ficom
gs
aam
pop
pop
(bad)
fcomip
popa
mov
into
pop
cmp
mov
inc
movs
fisttp
fdivr
(bad)
jmp
(bad)
shl
jmp
outs
xor
mov
sar
add
in
(bad)
(bad)
call
or
cmp
add
daa
adc
or
and
(bad)
(bad)
(bad)
inc
mov
popa
into
push
stc
ficomp
leave
fldcw
and
xlat
(bad)
pop
cmp
(bad)
(bad)
dec
mov
shl
mov
call
mov
cmp
jmp
rcr
adc
jae
or
test
fs
ds
or
or
push
in
(bad)
(bad)
(bad)
(bad)
dec
xchg
daa
scas
add
mov
pop
jge
xchg
(bad)
shl
add
inc
push
imul
(bad)
(bad)
jmp
xor
sbb
push
imul
aam
loopne
ror
int3
dec
frstor
fistp
(bad)
(bad)
out
mov
pop
aad
mov
call
xchg
shl
push
repnz
(bad)
(bad)
push
addr16
cmps
fld
mov
dec
ss
fisubr
or
scas
test
pusha
jp
inc
cli
(bad)
(bad)
inc
out
pusha
fist
addr16
mov
jns
imul
and
shr
ss
(bad)
jmp
push
xchg
ja
int3
add
mov
das
es
lds
or
add
push
pop
cmps
call
ret
shl
(bad)
jmp
ret
es
pushf
mov
ins
add
ss
jmp
addr16
(bad)
(bad)
(bad)
push
push
add
adc
mov
jnp
sbb
xchg
or
out
fdivr
(bad)
(bad)
(bad)
jl
(bad)
or
rcl
xchg
aam
clc
mov
push
int
mov
mul
ja
(bad)
(bad)
cmp
outs
ja
mov
out
cli
jo
ud0
cmp
pop
or
adc
sahf
gs
call
std
(bad)
clc
sar
imul
push
js
or
push
add
mov
cmp
xor
cmps
not
pusha
ror
imul
scas
aad
adc
fcomp
fldenv
fild
aaa
mov
mov
fidivr
mov
jmp
jg
repnz
retf
mov
cmps
mov
sar
sub
push
mov
(bad)
jmp
cs
mov
dec
popa
les
sbb
xchg
sub
aaa
mov
or
sbb
add
outs
dec
ror
sub
sub
mov
add
or
add
in
popf
cmp
out
(bad)
push
pop
(bad)
int3
loop
adc
push
in
aad
sahf
out
cmp
push
xlat
fcomp
(bad)
jns
out
(bad)
fsubp
jns
dec
sahf
jecxz
in
jmp
jmp
jns
hlt
cmc
div
clc
stc
push
mov
cld
pop
adc
hlt
or
aas
iret
adc
sbb
sbb
pop
and
mov
jae
dec
xor
(bad)
jmp
jbe
inc
vfrczps
sub
inc
ins
bound
push
into
popa
je
push
in
mov
and
cmp
adc
xor
inc
jno
xor
pop
inc
in
dec
bound
xor
xor
popa
arpl
cmp
arpl
in
mov
sub
xor
xor
xor
scas
cmp
inc
jbe
pop
ins
imul
inc
ins
gs
and
push
dec
inc
leave
aam
xor
inc
or
or
sub
popa
or
adc
gs
mov
or
je
(bad)
ss
jbe
sbb
enter
or
inc
aas
xor
mov
add
inc
push
loope
mov
push
add
or
add
pop
aaa
adc
add
pop
xor
add
xchg
ins
popa
jns
push
mov
or
ins
mov
add
aaa
je
aaa
rcl
pop
aas
inc
push
bound
add
sar
add
pop
ins
dec
mov
and
jae
sub
add
daa
push
mov
aas
sbb
mov
inc
fisubr
inc
(bad)
sbb
inc
aas
pop
add
pop
ds
jo
inc
push
add
ds
mov
scas
add
call
iret
int
push
dec
mov
inc
mov
xor
lods
fistp
enter
outs
jne
push
fist
stos
pop
pop
in
jge
(bad)
mov
adc
arpl
add
out
mov
push
clc
xchg
in
imul
pop
jo
in
pop
cmp
test
jg
or
aas
aaa
jb
jmp
cdq
dec
jl
sub
add
pop
ss
adc
pop
mov
lahf
dec
aam
sbb
fwait
mov
mov
push
mov
jmp
mov
jb
sub
and
inc
and
popa
jo
lahf
test
sahf
xchg
mov
ror
pop
in
mov
stos
cmp
push
mov
xor
pop
in
jno
cwde
sbb
test
pop
cmp
adc
sub
mov
or
mov
pop
jo
push
sub
test
ins
jns
add
inc
jb
push
push
shr
ss
inc
call
arpl
ins
lfs
push
bound
ja
pop
(bad)
dec
push
inc
jbe
xor
jg
push
dec
sbb
les
fld
mov
or
push
inc
push
sub
jg
dec
and
pop
add
popa
pop
or
(bad)
dec
mov
adc
mov
loope
mov
sbb
push
xor
(bad)
sbb
sbb
push
mov
inc
push
inc
dec
(bad)
mov
pop
bound
outs
arpl
je
data16
adc
push
jo
sub
pop
retf
sub
and
dec
xlat
out
or
push
daa
add
push
adc
mov
adc
and
inc
or
add
push
lahf
jg
mov
inc
adc
add
fadd
inc
std
jmp
add
dec
inc
fsubr
mov
add
fisttp
add
add
in
(bad)
mov
or
pop
push
or
or
or
or
or
adc
adc
push
adc
pusha
add
pop
sbb
adc
(bad)
ficomp
adc
adc
add
data16
or
pop
adc
inc
add
fsubr
aaa
mov
add
add
add
adc
jp
add
add
js
add
add
jge
mov
stos
and
(bad)
(bad)
(bad)
frstor
jno
xor
inc
mov
adc
xor
and
adc
sar
dec
add
add
push
rol
xchg
or
add
sbb
inc
outs
or
aaa
cmp
pusha
fcom
adc
add
pushf
pop
add
add
add
cmp
cmp
inc
lods
push
adc
pop
popa
jno
and
adc
mov
mov
lock
loope
icebp
or
push
or
mov
sbb
add
loopne
scas
fiadd
or
js
(bad)
jmp
adc
sub
rcr
push
ret
xchg
(bad)
(bad)
(bad)
jmp
jae
sub
std
cmps
xor
aas
imul
fdivr
add
mov
mov
adc
xchg
mov
inc
dec
test
(bad)
mov
cmp
mov
xor
and
fistp
jg
inc
add
std
push
iret
xchg
inc
jl
repnz
dec
or
adc
pop
inc
inc
xchg
inc
leave
push
add
adc
pop
std
or
add
(bad)
(bad)
call
cld
cli
and
mov
fiadd
jg
fnstsw
ficomp
cmps
xor
mov
test
rcr
push
lahf
std
movs
jecxz
pop
mov
mov
or
xchg
jg
or
push
push
addr16
out
or
(bad)
push
push
xchg
add
repnz
inc
lock
(bad)
(bad)
call
xor
fdivrp
cmp
fisubr
in
mov
or
int3
call
std
aaa
cmp
mov
scas
mov
pop
pop
mov
pop
mov
(bad)
(bad)
(bad)
call
adc
adc
mov
xor
lods
scas
xchg
test
aam
and
(bad)
(bad)
jmp
sbb
sar
and
rol
fwait
movs
jmp
push
retf
push
out
in
and
(bad)
stos
lahf
fdiv
aas
repz
cmps
pop
outs
icebp
mov
pop
lock
std
or
pop
mov
(bad)
(bad)
(bad)
jmp
test
aaa
dec
dec
pop
push
(bad)
out
outs
loope
loope
ror
mov
int
arpl
mov
jp
push
out
or
(bad)
(bad)
push
sahf
pop
clc
sti
jg
jno
(bad)
(bad)
(bad)
lock
jg
inc
icebp
xchg
std
sar
xor
hlt
and
xchg
(bad)
(bad)
jmp
and
fcomp
call
jle
mov
jb
mov
mov
mov
sub
pop
add
arpl
dec
jp
push
gs
jg
jg
aas
stos
hlt
push
add
stc
loope
(bad)
mov
sar
and
aas
icebp
idiv
aad
or
mov
scas
fadd
(bad)
(bad)
jmp
jns
mov
in
repnz
jno
pop
sub
jg
scas
cld
or
push
inc
sbb
paddb
jmp
sbb
jb
adc
push
lock
lods
jp
test
(bad)
jmp
sbb
into
fcomp
sbb
sbb
into
and
aas
loopne
mov
adc
aaa
xchg
in
add
inc
adc
loope
fnstsw
out
aas
std
cli
push
push
push
idiv
(bad)
mov
sub
(bad)
inc
scas
inc
mov
jg
cs
sub
jg
(bad)
(bad)
(bad)
jmp
mov
scas
call
les
jne
gs
jns
enter
or
push
pushf
push
scas
xlat
sub
push
inc
cmp
sti
punpckhbw
cmps
or
mov
clc
xor
jmp
xchg
pop
clc
outs
pop
dec
fist
hlt
sub
movs
add
lea
push
jg
gs
std
xor
jg
aad
adc
ret
(bad)
call
loopne
das
pop
pop
pop
shl
out
sar
sbb
jno
or
(bad)
mov
cmp
pop
les
cli
mov
mov
inc
arpl
stos
mov
call
ins
add
leave
push
scas
loop
jge
push
shr
mov
push
mov
(bad)
jg
call
and
sbb
xchg
jo
and
out
test
jae
push
iret
sti
cmp
(bad)
(bad)
(bad)
(bad)
ficom
aam
sahf
imul
fcmovnu
ror
ins
stos
arpl
add
(bad)
(bad)
call
ss
cmp
scas
lods
hlt
cmp
fist
mov
adc
push
movs
xchg
lock
dec
pop
mov
stos
dec
lods
xor
cs
cmps
addr16
(bad)
mov
pop
or
mov
xlat
pushf
cld
aas
clc
jge
jnp
sbb
outs
mov
(bad)
(bad)
(bad)
call
into
jecxz
inc
adc
mov
adc
adc
push
jo
pusha
imul
add
inc
das
adc
cmp
xchg
mov
(bad)
cwde
pop
xchg
ftst
jbe
xchg
inc
retf
cli
jb
and
jae
shr
(bad)
jmp
jg
mov
lahf
cld
sub
aas
stc
add
out
gs
jno
fidivr
lock
(bad)
clc
mov
pop
cld
add
adc
and
int3
mov
push
enter
jecxz
scas
sub
add
mov
mov
dec
(bad)
inc
fisubr
aas
mov
(bad)
or
cld
inc
or
pop
jo
pop
ret
cmps
push
pop
jg
add
jg
mov
cmp
sub
adc
mov
mov
iret
call
mov
push
push
sbb
stos
icebp
pop
inc
jg
out
dec
jno
adc
push
inc
jecxz
sbb
sar
jbe
(bad)
(bad)
adc
loopne
(bad)
(bad)
sar
adc
lahf
push
sti
ror
xor
imul
dec
loope
clc
sti
push
in
aas
mov
fsubr
pop
fcom
ss
(bad)
and
pop
inc
call
xchg
pushf
mov
repnz
sbb
mov
adc
inc
aas
(bad)
inc
push
push
rcr
rol
pop
inc
jb
fistp
adc
call
sub
pop
pop
nop
mov
inc
(bad)
push
(bad)
sti
arpl
daa
std
or
sbb
mov
inc
cmps
popf
push
loop
sbb
or
imul
xor
mov
dec
dec
xor
fsubr
fistp
lds
fidivr
jg
(bad)
jmp
stos
pop
add
dec
mov
sub
jge
xor
push
les
sbb
sbb
cld
add
mov
jg
sbb
mov
lahf
outs
int3
push
sbb
(bad)
jg
xchg
pop
test
bound
pop
outs
pop
loopne
push
in
jge
popa
push
test
jbe
(bad)
jg
jmp
sti
fsub
shl
dec
cs
adc
lahf
mov
or
out
call
sub
shl
cld
mov
in
(bad)
mov
(bad)
pop
jg
pop
shr
rcl
jg
adc
xor
push
fisttp
sub
jmp
lea
jp
(bad)
jnp
jecxz
(bad)
(bad)
out
cld
adc
inc
lds
push
pop
adc
imul
or
inc
pop
mov
xor
ror
and
add
cmps
push
sbb
mov
pop
inc
cmps
enter
call
iret
inc
mov
into
test
xchg
movs
ins
or
and
xchg
fisubr
call
test
aas
cld
out
fcomi
fistp
outs
lock
in
jmp
stc
out
mov
clc
push
std
mov
jl
icebp
or
out
jne
or
(bad)
(bad)
jmp
jl
push
mov
fsubrp
dec
sahf
enter
fcmovb
inc
adc
inc
loopne
test
(bad)
rcr
push
loop
call
jne
pop
cld
or
dec
div
and
mov
lods
movs
or
repnz
(bad)
clc
dec
cmc
mov
jl
call
or
or
(bad)
pop
in
cmp
int
pop
mov
fidiv
clc
adc
jmp
hlt
dec
mov
dec
mov
sbb
xlat
inc
call
loopne
(bad)
aas
mov
jg
mov
sub
addr16
sbb
test
outs
(bad)
cld
daa
jp
std
adc
cdq
or
mov
ret
adc
stos
pop
nop
cmp
das
inc
lock
pop
pop
div
(bad)
cld
idiv
adc
sbb
stc
lahf
loope
pusha
push
jmp
dec
shl
fbstp
out
xchg
add
lock
mov
out
icebp
(bad)
mov
loope
mov
cmps
popf
and
cld
and
mov
fbstp
test
das
mov
inc
sub
cmp
mov
popf
js
data16
dec
adc
sbb
scas
mov
and
call
pop
inc
cdq
add
push
sbb
mov
inc
add
(bad)
pop
out
or
aaa
std
(bad)
lock
cdq
dec
dec
inc
sbb
xchg
jmp
mov
aas
icebp
ret
ror
sbb
inc
adc
mov
mov
sub
mov
pop
clc
loope
in
scas
xor
mov
lahf
jp
dec
add
xlat
sbb
fbstp
xchg
or
iret
fdivr
xchg
call
dec
repz
shl
jo
push
cld
imul
out
jg
jno
ret
cwde
scas
xchg
xchg
arpl
aas
mov
inc
sbb
iret
push
dec
jge
pop
clc
xchg
cmps
jmp
(bad)
push
mov
jne
in
sbb
xchg
imul
(bad)
jmp
outs
test
jmp
into
daa
jmp
fadd
mov
add
jae
jg
push
pop
pop
add
pop
bound
std
(bad)
stc
push
dec
out
fstp
(bad)
mov
enter
or
(bad)
jmp
daa
icebp
push
lahf
sti
inc
pop
imul
push
xchg
cmps
scas
les
pop
xor
or
and
xchg
xchg
mov
fild
fsubr
dec
add
inc
inc
inc
or
add
push
sti
pop
inc
dec
push
jbe
int3
les
bsf
(bad)
aas
pop
mov
add
int
scas
leave
iret
imul
jg
cmp
retf
add
data16
outs
push
stc
jo
outs
lods
sar
(bad)
dec
dec
ds
sbb
xlat
pop
outs
cdq
sbb
push
ds
cmp
out
call
repnz
dec
(bad)
(bad)
(bad)
call
movs
(bad)
and
in
xchg
mov
sahf
daa
jnp
dec
js
jmp
in
mov
fnstcw
mov
(bad)
(bad)
dec
mov
xor
test
sbb
push
push
inc
cmp
stos
xchg
inc
(bad)
(bad)
(bad)
(bad)
clc
nop
shl
adc
jb
sub
xlat
mov
les
fisubr
cwde
mov
(bad)
(bad)
(bad)
jmp
pop
nop
xor
in
loopne
aas
jbe
adc
pop
aam
mov
(bad)
jmp
add
sbb
dec
call
icebp
xor
repz
(bad)
(bad)
jmp
lds
jne
fidiv
cmc
cwde
dec
int
mov
jg
adc
push
jge
mov
sub
mov
sub
std
scas
popa
(bad)
retf
mov
sub
or
mov
cmp
xor
xor
pop
fcomp
ss
mov
pop
lods
jge
fdiv
cmp
jmp
test
and
call
(bad)
mul
jmp
jl
(bad)
(bad)
jmp
or
fnop
(bad)
xchg
mov
add
rcr
in
jecxz
fild
inc
mov
xchg
xchg
fnstsw
sbb
(bad)
aas
sbb
push
(bad)
jp
mov
repz
cmp
movs
and
jle
scas
test
inc
mov
add
xchg
xchg
sub
(bad)
(bad)
jmp
mov
in
or
sub
push
jecxz
push
imul
daa
pop
xor
sbb
jnp
(bad)
lock
xlat
jp
pop
jp
xchg
mov
add
mov
mov
lds
repz
ins
lods
(bad)
in
(bad)
(bad)
(bad)
(bad)
call
pop
xchg
fdivr
iret
es
xor
mov
and
loopne
js
(bad)
mov
out
push
cwde
imul
(bad)
dec
inc
cmps
dec
or
mov
inc
cmc
fs
or
lods
push
cmp
jo
(bad)
(bad)
jmp
in
iret
jmp
lods
inc
xchg
enter
push
mov
sub
(bad)
rcr
jo
cmp
(bad)
(bad)
call
gs
xchg
mov
aaa
pop
mov
cmp
add
cwde
leave
jecxz
push
inc
cmp
clc
(bad)
(bad)
jmp
inc
cmp
pop
sub
xor
test
jmp
(bad)
fistp
sbb
call
push
clc
fld
in
pop
mov
inc
push
shr
(bad)
(bad)
(bad)
call
mov
loop
mov
pusha
push
dec
pop
jg
out
push
jo
icebp
fisub
cmc
inc
mov
(bad)
(bad)
push
inc
mov
sub
fiadd
push
gs
int3
inc
add
adc
mov
out
push
(bad)
(bad)
(bad)
call
mov
mov
mov
sub
pusha
test
dec
dec
std
lds
dec
test
adc
and
mov
pop
(bad)
in
(bad)
(bad)
(bad)
call
shr
daa
inc
or
mov
push
mov
sub
fisttp
loopne
loope
adc
icebp
jae
test
stc
adc
jl
imul
imul
cmp
dec
pop
mov
out
js
cli
adc
(bad)
(bad)
jmp
in
cmp
int
add
jne
sti
jmp
xchg
inc
push
jge
lea
(bad)
call
or
fs
movs
and
sbb
or
in
out
(bad)
push
(bad)
(bad)
(bad)
(bad)
call
mov
ret
pop
push
mov
sub
xchg
mov
pop
jmp
cmp
outs
ud0
(bad)
dec
mov
cmc
adc
loope
xor
(bad)
hlt
mov
stos
mov
out
loope
(bad)
(bad)
jmp
gs
(bad)
shl
repz
popf
pop
push
pop
or
nop
or
ins
sub
mov
dec
(bad)
xor
inc
call
aas
addr16
sub
and
scas
cli
(bad)
inc
inc
mov
jo
mov
or
or
lds
dec
jg
or
je
ds
js
mov
es
js
jmp
jge
in
or
(bad)
inc
out
out
lds
dec
inc
out
xchg
pop
sbb
lods
pusha
inc
xor
lds
inc
scas
sti
push
adc
(bad)
call
icebp
inc
push
sbb
loope
shr
jo
dec
pop
sbb
cmps
inc
or
test
(bad)
mov
and
jno
push
inc
jecxz
pop
jmp
sti
stos
xchg
dec
pop
pcmpeqd
call
xor
xchg
mov
push
cmp
mov
or
(bad)
(bad)
(bad)
(bad)
fisttp
fstp
mov
aas
mov
adc
push
rcr
mov
inc
out
sbb
(bad)
call
mov
pop
jae
add
mov
jnp
sbb
(bad)
(bad)
(bad)
dec
xor
test
xchg
xor
adc
aam
leave
in
jnp
ja
addr16
pop
mov
int
(bad)
(bad)
push
cmp
xor
dec
xchg
dec
mov
pop
bnd
aam
mov
(bad)
(bad)
fstp
idiv
jbe
stc
fadd
loopne
addr16
fld
jne
pop
ret
or
call
sub
jg
sub
lods
das
jns
and
add
dec
push
(bad)
jns
lock
push
pop
(bad)
or
retf
gs
clc
push
fst
cli
mov
mov
add
inc
cmc
bound
ss
ins
(bad)
pop
and
aam
adc
jne
imul
or
fcomi
pmaxsw
mov
adc
je
jbe
addr16
js
and
dec
inc
aam
ja
(bad)
dec
pop
int3
test
mov
pop
pop
fsub
imul
pop
or
call
or
fsubp
icebp
outs
pop
cld
(bad)
jmp
inc
cdq
mov
ss
mov
pop
(bad)
into
dec
or
mov
cli
(bad)
call
int3
push
cmps
inc
repnz
stos
jo
int
adc
fistp
and
movs
lea
or
ret
pop
test
mov
stc
stos
mov
dec
ins
push
loopne
repnz
ss
mov
scas
icebp
jno
or
retf
sub
(bad)
(bad)
(bad)
(bad)
fsub
pop
sar
lock
jns
shl
mov
dec
inc
xor
push
inc
out
inc
dec
scas
popf
fiadd
daa
test
mov
mov
std
and
das
mov
xlat
(bad)
(bad)
out
mov
jno
mov
leave
dec
sub
sbb
(bad)
(bad)
jmp
mov
fstp
xor
jp
jecxz
mov
jecxz
(bad)
mov
lods
adc
inc
inc
push
scas
scas
call
loop
xor
(bad)
(bad)
(bad)
call
pop
and
xchg
jns
or
std
mov
sar
pop
int3
pop
inc
xlat
lahf
pop
sti
addr16
jmp
addr16
push
jmp
lock
pop
popf
cli
js
sbb
adc
cmp
adc
icebp
cmp
rcr
xor
dec
dec
sti
popa
mov
call
retf
mov
sub
sbb
popf
arpl
xor
fwait
ja
mov
int3
repnz
(bad)
call
lds
repnz
int3
nop
stos
cmp
arpl
ss
(bad)
(bad)
(bad)
in
sbb
ins
and
add
ja
push
add
adc
add
jne
or
push
test
ins
xchg
int
cli
or
ja
(bad)
mov
xlat
adc
shl
fsub
loopne
jg
dec
sar
jg
jno
fmul
fadd
ja
add
and
out
push
push
gs
(bad)
(bad)
jg
mov
lods
shl
or
retf
cmp
xor
inc
dec
rcl
xchg
outs
rcl
(bad)
jmp
mov
test
cmp
sbb
mov
adc
mov
js
nop
jns
push
push
pushf
mov
mov
adc
ds
inc
(bad)
xchg
dec
jle
mov
mov
xchg
(bad)
(bad)
dec
(bad)
pop
pushf
xchg
cs
test
dec
outs
and
mov
cmps
pop
mov
leave
cs
or
(bad)
(bad)
(bad)
inc
xor
or
dec
jb
fs
push
lds
call
mov
or
mov
(bad)
ins
dec
cmp
pop
lock
shl
pop
(bad)
(bad)
(bad)
push
retf
aad
and
xor
stc
mov
test
cmps
in
loop
mov
xor
fdivr
(bad)
(bad)
(bad)
call
ja
mov
iret
jge
out
sbb
jp
mov
xchg
pop
inc
mov
(bad)
(bad)
(bad)
(bad)
jp
inc
push
ins
jle
mov
push
scas
fwait
jg
add
fadd
jae
pop
push
repnz
(bad)
(bad)
jmp
sbb
cmp
xchg
xor
or
sub
pop
outs
adc
push
cli
cmc
out
(bad)
(bad)
(bad)
call
ret
jo
sub
sub
jae
ja
xor
xchg
mov
das
pop
arpl
scas
adc
(bad)
(bad)
(bad)
call
jb
sub
daa
scas
push
xchg
arpl
lods
fimul
fsubr
add
scas
clc
adc
movs
add
dec
pusha
popf
scas
shl
popa
pop
stc
std
adc
or
(bad)
dec
sub
ja
lock
pop
cwde
aaa
ins
jo
xor
and
mov
add
icebp
mov
mov
jg
pop
mov
clc
nop
(bad)
ret
ss
pop
push
ds
(bad)
(bad)
dec
dec
in
jmp
dec
and
out
mov
mov
fimul
jo
pop
out
ret
mov
(bad)
(bad)
(bad)
jmp
jmp
add
hlt
stos
mov
mov
adc
cli
xor
lock
cmp
aaa
(bad)
jmp
ror
(bad)
(bad)
jmp
fadd
gs
int
sbb
out
mov
xor
sub
pop
(bad)
(bad)
(bad)
inc
std
mov
push
or
sbb
inc
push
xlat
jb
jno
sahf
xchg
xchg
hlt
push
or
sahf
push
push
jp
mov
dec
mov
sub
jg
rcr
cmp
cs
or
aas
sub
mov
push
mov
mov
pop
popa
jmp
xor
jmp
(bad)
(bad)
inc
jb
push
push
push
aad
movs
lods
xor
xor
or
sub
sbb
(bad)
(bad)
call
cmps
adc
add
aam
gs
ins
jge
or
add
int
sbb
call
sbb
jbe
aaa
gs
mov
xchg
repz
call
mov
ds
jo
in
xchg
imul
dec
jne
(bad)
(bad)
push
jns
mov
clc
pop
pop
adc
adc
lds
inc
retf
mov
cld
sub
(bad)
jmp
clc
jmp
push
popa
jl
xchg
ins
push
inc
sbb
jbe
mov
es
fimul
xor
and
(bad)
(bad)
jmp
xor
sbb
ins
mov
int
add
mov
das
ror
xchg
aam
(bad)
(bad)
(bad)
call
jle
adc
push
and
or
push
scas
scas
push
rcl
pop
push
cmp
call
fiadd
adc
xchg
icebp
xchg
aaa
xchg
(bad)
(bad)
inc
mov
fst
xor
pop
gs
daa
aaa
pop
clc
out
sbb
lods
test
aas
mov
inc
(bad)
(bad)
mov
mov
fwait
(bad)
mov
add
loop
mov
loop
not
add
mov
outs
xchg
mov
inc
(bad)
cmp
xor
(bad)
(bad)
(bad)
call
jg
push
add
rcl
and
daa
push
inc
in
mov
xor
mov
inc
sbb
jnp
sbb
out
(bad)
cld
loope
xchg
mov
mov
(bad)
(bad)
dec
popa
ja
mov
test
ret
jbe
mov
ficomp
fwait
stos
(bad)
fild
push
in
pop
test
inc
cmp
jle
call
or
test
or
and
(bad)
adc
out
sub
mov
sub
jp
fiadd
(bad)
(bad)
(bad)
dec
jbe
ror
scas
outs
inc
add
dec
shl
mov
and
imul
shr
push
mov
sub
inc
test
lods
fimul
retf
sbb
mov
(bad)
(bad)
(bad)
(bad)
jmp
mov
hlt
mov
push
pop
outs
xor
sub
mov
test
loop
adc
(bad)
(bad)
(bad)
call
dec
cmp
cmp
ins
(bad)
(bad)
jecxz
loope
cmps
into
dec
loopne
out
mov
lods
fwait
repnz
adc
outs
mov
div
jl
and
inc
mov
add
sub
cmp
push
fild
lds
cmps
push
sub
mov
call
retf
sbb
fsubr
dec
mov
aas
clc
jnp
pop
add
sbb
mov
into
(bad)
(bad)
(bad)
(bad)
stc
lods
sub
and
mov
inc
popf
mov
mov
dec
xlat
scas
call
inc
(bad)
(bad)
(bad)
inc
data16
mov
fld
dec
push
xor
fstp
jle
mov
das
scas
cmp
fwait
outs
(bad)
(bad)
(bad)
inc
test
retf
xchg
frstor
push
push
sbb
ror
mov
mov
fild
call
jp
cmp
ins
or
jnp
rol
push
mov
mov
mov
jle
adc
not
jns
imul
(bad)
jmp
and
imul
or
jno
pusha
call
(bad)
fcomip
push
fucomip
add
jmp
xor
cmp
or
loop
cmp
call
mov
push
ds
rcr
idiv
mov
mov
into
jg
jg
neg
add
retf
lods
lds
mov
cwde
movs
sub
idiv
jg
jmp
jmp
adc
add
fisubr
inc
ins
js
sbb
mov
(bad)
mov
bound
push
das
lods
es
movs
(bad)
fld
add
mov
(bad)
(bad)
(bad)
jmp
rcl
pop
adc
or
mov
xor
mov
loop
pop
outs
adc
sahf
mov
and
pop
js
lds
call
test
(bad)
(bad)
(bad)
jmp
call
pop
sbb
into
enter
push
dec
dec
ins
add
sbb
movs
inc
in
jmp
lds
sub
push
pop
or
pusha
pushf
mov
xor
fs
(bad)
(bad)
call
fs
sbb
out
push
xchg
push
and
push
dec
xor
aas
cmp
lods
clc
(bad)
or
aad
push
inc
ret
xor
pop
sbb
dec
sbb
push
in
pop
inc
mov
(bad)
jmp
dec
cwde
sbb
jnp
jae
push
test
test
call
(bad)
mov
sar
sbb
stos
cmp
or
outs
popf
mov
repz
xchg
xchg
fdivr
sbb
mov
clc
mov
mov
jns
(bad)
mov
inc
push
jne
push
or
add
add
push
xor
es
push
push
push
aam
mov
lar
sub
jg
sbb
imul
sub
call
imul
in
into
out
movlps
shl
(bad)
(bad)
(bad)
dec
in
push
add
cmc
jg
(bad)
shl
(bad)
jge
stc
mov
stos
aad
dec
out
ret
gs
hlt
sti
out
mov
and
pop
inc
pop
std
(bad)
dec
and
mov
cmp
xchg
pusha
jne
out
sbb
jecxz
ins
call
mov
(bad)
(bad)
mov
sbb
lock
push
dec
jl
inc
push
test
push
(bad)
(bad)
(bad)
jmp
jmp
cmps
iret
xchg
push
mov
dec
and
xor
sbb
adc
and
(bad)
(bad)
jmp
retf
leave
jecxz
pop
stc
add
mov
test
(bad)
or
bound
(bad)
fwait
cmc
(bad)
(bad)
(bad)
call
add
stos
retf
ret
mov
dec
push
and
ja
(bad)
test
call
bound
fcom
jle
enter
mov
xor
cmc
call
pop
lahf
xchg
pop
or
shl
ss
xchg
mov
popf
call
aaa
pop
cmp
scas
(bad)
cli
test
cmp
mov
inc
aaa
add
(bad)
(bad)
push
xor
xchg
and
pop
in
or
sub
add
jecxz
jno
cdq
(bad)
(bad)
(bad)
jmp
retf
out
mov
jbe
xchg
pop
out
fwait
sub
cmp
cli
hlt
push
repnz
fidivr
or
(bad)
(bad)
(bad)
jl
xor
dec
into
mov
test
imul
out
push
psraw
jp
(bad)
(bad)
(bad)
jmp
retf
mov
mov
jno
cli
outs
scas
jno
push
pop
retf
or
pop
fistp
shr
js
mov
mov
inc
mov
push
imul
movs
mov
imul
cmp
fidiv
stos
jnp
jmp
xchg
push
retf
jo
jp
pop
(bad)
and
pop
sti
loopne
pop
test
stos
sar
(bad)
xor
add
xchg
inc
inc
loope
dec
xor
iret
and
push
pop
mov
push
dec
test
(bad)
(bad)
(bad)
jmp
sbb
push
mov
add
push
in
jb
shl
cmp
(bad)
call
sti
ss
mov
pop
jae
dec
push
into
and
aas
pushf
jmp
add
or
inc
sub
mov
imul
loop
adc
retf
mov
call
mov
jb
inc
sub
(bad)
(bad)
push
sub
add
int3
jbe
fwait
adc
fmulp
cmp
fist
(bad)
(bad)
(bad)
(bad)
mov
icebp
sbb
outs
call
cli
push
mov
sub
pop
cmp
int
(bad)
(bad)
jmp
jp
push
adc
dec
clc
and
adc
int3
arpl
jns
aam
outs
push
dec
test
sub
cs
xor
adc
jmp
add
and
clc
push
je
jo
push
cmp
(bad)
mov
call
test
xchg
call
pop
or
into
out
(bad)
(bad)
jmp
mov
popf
xor
movs
movs
pop
xchg
push
icebp
shl
int
mov
enter
stos
cmp
jmp
in
and
stos
push
es
adc
outs
and
aaa
shr
xor
aas
das
adc
iret
jmp
(bad)
call
in
sub
fcomi
pop
cli
sub
push
outs
cmp
xchg
and
sbb
jl
push
pop
or
mov
mov
mov
jnp
cmp
ret
stc
les
retf
(bad)
fimul
and
inc
dec
imul
jle
add
dec
mov
sbb
or
aaa
fistp
pop
inc
(bad)
dec
das
(bad)
(bad)
(bad)
call
cmps
push
adc
mov
in
das
lods
mov
lods
add
cld
mov
cmc
les
(bad)
(bad)
dec
clc
inc
icebp
ja
js
stos
call
adc
aas
sbb
mov
test
jmp
cmc
(bad)
or
sub
cmps
movs
(bad)
repz
(bad)
(bad)
(bad)
inc
xchg
or
ret
out
mov
sub
jge
mov
int3
xor
movs
in
cmp
and
(bad)
(bad)
(bad)
fld
mov
and
(bad)
out
inc
sub
push
test
ficomp
outs
cmp
(bad)
inc
cld
or
xor
ffreep
sbb
mov
aaa
dec
sbb
inc
lahf
fstp
(bad)
mov
push
test
sbb
mov
in
in
ret
jge
not
inc
xlat
call
(bad)
call
rcr
pop
or
mov
inc
cld
fisubr
pop
std
(bad)
(bad)
dec
movs
adc
mov
daa
pop
adc
leave
sub
xor
jg
retf
add
mov
pop
lds
mov
fs
push
ins
int
cmp
mov
jle
pop
fcmovbe
pop
(bad)
(bad)
(bad)
call
xor
fld
movs
add
test
(bad)
cmp
inc
or
movs
pop
retf
pop
in
pop
fdivr
(bad)
(bad)
call
lea
dec
aad
adc
fdivr
jb
sahf
inc
lock
mov
test
mov
(bad)
(bad)
(bad)
push
mov
jae
cmp
xchg
out
rol
add
scas
or
(bad)
jns
mov
push
loopne
xor
push
and
inc
mov
mov
(bad)
(bad)
jmp
je
or
xchg
jb
test
pop
addr16
stos
aad
sbb
test
out
push
jmp
jno
mov
(bad)
(bad)
(bad)
inc
jae
mov
popf
mul
in
push
repz
mov
in
jl
fcom
cld
clc
dec
pop
push
sub
dec
sbb
fmul
fst
mov
cwde
rol
iret
or
(bad)
(bad)
dec
mov
lods
gs
adc
mov
inc
sbb
das
xor
(bad)
and
lods
(bad)
(bad)
fld
mov
push
inc
ins
sub
fwait
push
outs
xchg
lock
jl
nop
inc
dec
mov
push
jl
fdivrp
(bad)
dec
stos
cdq
push
inc
push
(bad)
adc
mov
daa
dec
call
cli
mov
xchg
cmp
rol
sub
cmp
inc
imul
(bad)
sub
jp
repnz
mov
pop
mov
mov
test
std
jmp
(bad)
(bad)
jmp
ficomp
ins
pop
test
pop
imul
or
cmp
xor
adc
ret
(bad)
call
cmps
pop
in
ss
pop
mov
cmp
call
call
sar
jnp
jecxz
ror
pop
outs
mov
(bad)
(bad)
(bad)
push
jb
(bad)
or
ja
jge
fstp
(bad)
sub
lods
mov
icebp
call
jp
ja
inc
pop
dec
lahf
les
loopne
ret
call
ja
push
jno
test
push
and
ins
or
jge
ficomp
out
inc
fwait
dec
xchg
lods
(bad)
adc
(bad)
(bad)
inc
push
sub
cmc
fld
aad
xchg
dec
xchg
nop
retf
push
pop
mov
ins
xchg
mov
shl
jl
add
call
popf
add
mov
lahf
mov
nop
out
mov
imul
adc
out
jb
sbb
mov
mov
movs
cmp
or
movs
and
xor
or
push
test
paddd
ja
cmc
loop
jb
int
test
push
jecxz
repnz
cli
cmc
mov
jmp
sbb
dec
jl
and
shl
mov
cmp
fisttp
retf
int3
in
mov
push
jo
xor
pop
out
fidivr
rcl
cmp
jmp
sbb
push
jle
fisubr
jmp
or
popa
adc
(bad)
jmp
mov
inc
add
sbb
test
push
enter
add
out
or
lea
or
pushf
xor
js
(bad)
(bad)
jmp
xor
test
mov
out
inc
xchg
lods
or
(bad)
(bad)
jmp
ss
ss
loopne
cmps
(bad)
add
inc
test
scas
in
stc
dec
stos
fnstsw
(bad)
(bad)
(bad)
(bad)
mov
jmp
mov
xor
jp
mov
loop
dec
aas
sbb
(bad)
(bad)
(bad)
jnp
cmp
(bad)
fmul
inc
(bad)
aas
jecxz
gs
jmp
ins
dec
in
cwde
mov
or
stos
(bad)
aam
sbb
and
fdivrp
xchg
add
mov
(bad)
(bad)
jg
mov
pop
dec
stos
xchg
test
mov
(bad)
push
dec
xchg
iret
das
lahf
jecxz
xchg
push
aaa
(bad)
(bad)
(bad)
call
jbe
test
imul
stos
das
jle
fwait
pusha
cmp
lds
inc
push
mov
(bad)
jg
ror
jae
fs
call
in
xor
(bad)
(bad)
(bad)
inc
or
lea
ror
pop
xchg
cmp
sub
lea
jl
xchg
sti
ja
aam
(bad)
(bad)
(bad)
jmp
pop
sub
mov
adc
aaa
push
bound
dec
pop
xchg
push
mov
call
enter
repnz
or
jbe
xchg
cld
jne
shl
pop
imul
dec
jb
in
aam
shl
stc
pop
(bad)
(bad)
(bad)
jmp
cdq
shr
xlat
pushf
or
inc
xchg
mov
cdq
call
xchg
aad
bound
(bad)
(bad)
(bad)
push
out
xchg
fs
xor
cwde
lds
adc
data16
retf
push
sbb
mov
(bad)
(bad)
jmp
shr
das
mov
and
test
or
and
push
mov
mov
call
mov
test
pop
pop
cmps
xchg
(bad)
xor
int
(bad)
(bad)
(bad)
jmp
cdq
inc
je
inc
movs
cwde
aas
repz
rcl
pop
lock
push
sub
inc
and
ja
cmp
in
xor
add
jmp
(bad)
(bad)
dec
and
or
clc
mov
push
push
gs
push
leave
in
retf
(bad)
(bad)
cmp
imul
in
ja
inc
push
jmp
fdivr
xchg
mov
cmp
fdivr
(bad)
inc
push
ins
(bad)
cmps
lock
dec
pop
jne
popf
(bad)
sbb
(bad)
(bad)
mov
inc
call
daa
push
cmps
in
xchg
ror
mov
sbb
cld
and
aad
(bad)
call
(bad)
cmp
mov
stos
aaa
scas
out
inc
rol
js
fdivrp
mov
xlat
xchg
cdq
clc
(bad)
jg
ss
push
les
repz
sub
cmp
mov
scas
(bad)
(bad)
dec
fs
sbb
cmp
sub
jecxz
pushf
mov
push
(bad)
(bad)
(bad)
call
sub
(bad)
(bad)
adc
clc
cmp
jp
push
outs
ja
gs
pushf
into
xor
nop
repnz
(bad)
(bad)
(bad)
cmp
call
add
or
and
mov
dec
xchg
ror
pop
xor
jmp
lods
mov
pop
push
pop
and
iret
cmp
mov
cmp
pop
loop
cs
fwait
test
or
(bad)
push
sub
(bad)
not
ror
sbb
mov
jecxz
mov
(bad)
(bad)
(bad)
sti
lahf
sbb
adc
and
call
xchg
cmp
jg
rcr
(bad)
call
leave
pop
xor
mov
mov
bound
sbb
repz
clc
(bad)
fistp
sbb
mov
push
loope
mov
mov
fst
out
(bad)
(bad)
(bad)
inc
adc
xchg
(bad)
jmp
jnp
in
and
inc
cdq
fdiv
mov
mov
call
mov
xor
iret
xor
inc
ss
aas
(bad)
adc
and
adc
xchg
push
dec
push
cld
(bad)
dec
pop
mov
push
mov
movs
xor
rcr
xor
push
pop
sub
stos
add
adc
cmp
ret
icebp
(bad)
(bad)
call
mov
(bad)
mov
(bad)
xor
or
and
push
sbb
call
and
push
push
into
xor
cdq
and
jnp
xchg
(bad)
dec
mov
ret
xrelease
aam
sub
inc
(bad)
(bad)
call
mov
or
cmp
cmp
xchg
mov
dec
and
(bad)
(bad)
(bad)
inc
enter
mov
test
sahf
pop
jnp
cmp
adc
or
adc
adc
(bad)
(bad)
(bad)
jmp
neg
cdq
into
lock
sti
pushf
cwde
pop
jae
imul
and
push
jns
(bad)
(bad)
(bad)
jmp
test
jge
xlat
pop
sub
sbb
mov
add
icebp
push
cwde
mov
jle
pop
xchg
mov
mov
mov
mov
call
cmc
(bad)
push
mov
icebp
or
jb
inc
js
xchg
icebp
cmps
fsubr
jmp
pop
(bad)
jg
(bad)
mov
mov
xchg
stos
and
cmp
popf
ret
add
and
inc
mov
add
fisub
jle
jg
xchg
test
les
xor
(bad)
(bad)
fistp
lahf
popa
ins
or
mov
cld
inc
mov
mov
(bad)
(bad)
jg
push
sbb
dec
jge
inc
lahf
dec
shl
mov
pop
pop
xchg
inc
push
mov
mov
mov
iret
inc
cmp
sbb
adc
shl
(bad)
(bad)
dec
sbb
movs
shr
clc
ins
call
repz
mov
dec
pop
add
sbb
xchg
pop
mov
inc
mov
and
sahf
imul
out
add
stos
(bad)
(bad)
cmp
sti
cmp
aam
or
std
repnz
and
(bad)
(bad)
inc
and
jo
sub
push
int3
in
movs
dec
and
ret
mov
sar
(bad)
(bad)
(bad)
(bad)
(bad)
js
push
xchg
retf
ret
std
mov
test
mov
or
mov
jbe
xchg
(bad)
jmp
js
cs
dec
dec
shr
aas
test
inc
and
(bad)
(bad)
(bad)
inc
xchg
pop
repnz
or
je
(bad)
cwde
ja
sub
(bad)
(bad)
(bad)
call
xor
loop
xchg
in
or
pop
stc
xchg
mov
mov
mov
xor
addr16
psrad
rcl
cld
push
dec
call
int3
out
pop
cmp
arpl
pop
jne
bound
(bad)
(bad)
(bad)
std
inc
sbb
rol
repz
outs
je
inc
int3
ret
push
adc
cmp
(bad)
inc
retf
pusha
mov
xor
pop
call
es
push
jo
mov
jmp
movs
adc
jmp
sub
inc
mov
ins
lods
jbe
(bad)
(bad)
(bad)
inc
mov
jno
leave
xchg
aaa
mov
push
cmps
sub
mov
push
aaa
(bad)
(bad)
jg
push
adc
dec
add
xor
stos
sti
repz
push
movs
or
(bad)
(bad)
call
sti
or
mov
jbe
test
mov
xchg
shl
das
sub
pop
scas
pop
(bad)
(bad)
(bad)
push
dec
fsub
push
(bad)
cmc
pop
push
mov
or
cmps
dec
mov
imul
clc
(bad)
jp
xchg
cmp
lods
mov
ficom
fdiv
test
pop
addr16
cmps
(bad)
(bad)
(bad)
push
xor
call
sbb
add
cmc
sbb
pop
mov
(bad)
scas
mov
push
pusha
scas
fs
sti
movs
call
xchg
or
hlt
jmp
imul
(bad)
add
lods
xchg
(bad)
std
(bad)
(bad)
(bad)
push
sbb
jno
mul
push
mov
test
push
mov
(bad)
(bad)
(bad)
call
cmp
(bad)
(bad)
cmp
cwde
cli
jmp
xchg
add
lock
(bad)
dec
dec
pop
int3
adc
movs
sbb
xchg
lock
loopne
int3
inc
push
fdivr
(bad)
(bad)
push
leave
stos
shl
mov
sahf
add
fidiv
in
retf
inc
or
cmp
xor
ins
jg
(bad)
(bad)
call
push
scas
jl
inc
jp
loopne
add
cld
imul
jp
jae
xchg
mov
ret
add
jae
in
jecxz
lahf
xor
fisttp
(bad)
mov
xchg
loop
fdiv
xlat
mov
cmps
add
cmps
or
dec
adc
jmp
pop
mov
cmp
xor
loopne
popa
inc
out
into
fs
idiv
mov
(bad)
jmp
cmp
sub
(bad)
xor
mov
pop
and
(bad)
(bad)
jg
nop
test
lods
ins
shl
fstp
xchg
ins
daa
(bad)
mov
mov
clc
(bad)
(bad)
(bad)
push
mov
adc
xor
ja
adc
pop
fisttp
(bad)
(bad)
inc
dec
add
and
xlat
add
xor
stc
stc
imul
lds
push
ds
(bad)
push
rcl
(bad)
pop
inc
add
jle
mov
dec
mov
int
xor
pop
loopne
outs
xchg
ins
xor
mov
pop
test
(bad)
(bad)
(bad)
jmp
xchg
ret
hlt
inc
sub
add
imul
sub
repz
mov
sbb
xchg
add
inc
inc
add
pop
or
add
aas
xor
adc
cli
repnz
and
or
inc
sbb
push
scas
sub
(bad)
(bad)
call
jne
dec
sub
xor
rcr
and
mov
adc
in
push
xor
cmp
mov
or
or
(bad)
mov
cli
xchg
test
cwde
mov
adc
enter
(bad)
dec
xor
mov
mov
xchg
adc
outs
rcr
or
jae
(bad)
(bad)
fcomip
xchg
and
push
loopne
sub
outs
cmp
daa
fwait
dec
mov
push
jp
inc
retf
(bad)
(bad)
(bad)
call
and
push
ss
ja
pop
mov
mov
mov
shl
mov
adc
pop
mov
lds
fisttp
mov
mov
dec
dec
or
add
ja
lods
adc
(bad)
(bad)
(bad)
fisubr
mov
adc
pop
imul
nop/reserved
ret
ror
(bad)
(bad)
(bad)
mov
or
push
retf
scas
xlat
xor
fcmove
and
aad
push
fiadd
aam
mov
adc
aaa
xchg
retf
arpl
and
cld
stos
push
mov
pusha
add
jno
in
push
push
xchg
outs
(bad)
call
jae
fcmove
add
mov
push
into
adc
out
pop
jne
mov
push
cld
shl
adc
imul
or
xor
mov
xchg
sbb
(bad)
(bad)
(bad)
cli
ja
rcl
xor
vmovq
iret
fucomp
pop
cld
mov
iret
add
mov
call
fst
pop
int3
(bad)
in
xchg
js
in
or
pop
dec
and
(bad)
(bad)
(bad)
mov
aam
(bad)
sar
jl
popa
lds
outs
(bad)
cmp
pusha
rcr
(bad)
inc
out
adc
inc
jbe
retf
cmp
cmp
jns
or
(bad)
mov
lods
dec
jecxz
push
and
aam
pushf
aaa
inc
fiadd
retf
push
xchg
sub
xor
add
(bad)
cli
jg
mov
imul
(bad)
(bad)
in
push
movs
daa
mul
mov
sbb
ins
mov
stc
add
jo
loopne
(bad)
(bad)
(bad)
jmp
mov
out
inc
sbb
in
dec
addr16
xor
adc
(bad)
(bad)
(bad)
call
mov
ds
(bad)
adc
mov
retf
dec
pushf
mov
inc
sbb
leave
xor
call
(bad)
dec
mov
cdq
sahf
int3
aad
lods
push
xchg
dec
pop
cmps
retf
fs
mov
(bad)
fild
sub
add
fimul
adc
lock
(bad)
(bad)
inc
clc
inc
adc
mov
mov
rol
pop
(bad)
enter
xor
(bad)
call
mov
or
cmp
xlat
lods
sbb
(bad)
call
jle
sbb
movs
repnz
scas
fimul
mul
mov
dec
mov
or
dec
jmp
pop
jbe
sub
fnstenv
or
jmp
adc
popa
dec
pusha
jo
test
out
vprotb
cmps
test
nop
jmp
(bad)
mov
clc
add
popa
int
jmp
sub
fmul
mov
cmp
(bad)
(bad)
jmp
pop
xchg
into
push
sahf
xchg
mov
push
mov
in
in
repnz
popf
add
mov
sub
push
pop
add
imul
dec
fwait
mov
enter
icebp
(bad)
jmp
pop
fild
jnp
cdq
test
mov
lea
cmc
pop
and
pushf
retf
mov
sahf
imul
xchg
cld
stc
jecxz
movs
out
(bad)
dec
xchg
pop
int3
stos
sub
sahf
stos
push
call
cs
mov
rol
out
cwde
mov
rcl
cmp
cwde
sbb
or
push
out
add
add
jg
adc
(bad)
fild
std
js
dec
(bad)
sub
lds
nop
adc
jmp
jge
jbe
and
add
shl
ret
jl
mov
sbb
in
call
arpl
lds
pop
pop
dec
inc
(bad)
jl
cmp
test
xor
sub
mov
xchg
(bad)
mov
and
or
out
pop
mov
sub
or
das
cli
(bad)
jmp
iret
ins
adc
xchg
in
add
dec
(bad)
(bad)
in
aas
sbb
cs
stos
jge
loope
and
imul
add
scas
push
jbe
jg
das
rcl
popf
das
in
mov
fs
mov
js
(bad)
(bad)
call
aaa
and
and
push
daa
ss
paddw
js
xchg
or
and
lahf
cmp
inc
inc
bound
(bad)
(bad)
jmp
cmp
cdq
int
popa
ss
stos
loop
push
pop
das
mov
ss
(bad)
ja
call
mov
and
daa
mov
push
std
call
pushf
mov
and
stos
xor
ds
sbb
(bad)
or
or
js
mov
ret
cs
cmps
xchg
cdq
add
jmp
pop
out
leave
(bad)
xor
mov
outs
stc
jle
jno
or
pop
jg
(bad)
(bad)
(bad)
jmp
std
div
cwde
mov
add
sub
add
das
mov
bound
stos
adc
xchg
xor
sti
das
mov
(bad)
(bad)
mov
fmul
dec
mov
fild
inc
add
inc
jl
test
(bad)
(bad)
jmp
stos
int
xchg
mov
out
mov
out
add
mov
outs
xchg
call
jmp
mov
mov
test
out
mov
clc
movs
adc
(bad)
(bad)
(bad)
call
jg
sub
mov
jo
mov
lahf
cdq
mov
pop
out
test
fsub
ret
(bad)
(bad)
push
repnz
jmp
mov
and
and
je
xchg
dec
cld
call
je
add
xor
and
(bad)
jg
and
sbb
mov
adc
push
adc
sar
xor
mov
retf
repnz
(bad)
(bad)
inc
add
mov
xchg
mov
mov
frstor
push
sub
arpl
mov
dec
aaa
(bad)
(bad)
(bad)
(bad)
dec
jbe
jnp
dec
out
add
push
out
xchg
xchg
popa
aad
mov
jle
in
(bad)
(bad)
(bad)
jmp
into
neg
inc
ins
mov
das
jge
add
mov
jle
mov
mov
sti
mov
jno
or
rep
into
jl
or
pop
sub
retf
add
lds
stos
retf
jne
(bad)
(bad)
fcomip
sbb
push
jnp
popf
or
mov
mov
mov
lock
(bad)
jg
(bad)
sbb
cmp
add
and
adc
jl
repz
jbe
sbb
xor
(bad)
(bad)
push
or
out
bound
in
mov
imul
jle
repz
adc
(bad)
cmp
dec
mov
pop
jg
dec
pop
and
frstor
aam
(bad)
(bad)
jmp
sbb
ins
in
sub
or
aad
cwde
pop
pop
jno
xchg
mov
(bad)
(bad)
push
sub
xchg
dec
adc
mov
inc
add
sub
inc
das
mov
repnz
(bad)
(bad)
(bad)
fisttp
int3
(bad)
rcl
mov
inc
lock
cdq
in
mov
sub
sub
call
(bad)
es
test
lahf
ror
arpl
hlt
pop
gs
ror
fs
test
jmp
call
jl
test
push
(bad)
(bad)
(bad)
push
mov
cwde
xchg
cdq
iret
mov
cwde
add
mov
imul
leave
push
cli
(bad)
(bad)
jl
or
bound
repz
or
jne
repnz
add
call
loopne
(bad)
jmp
loopne
mov
lods
int3
pop
mov
lahf
jns
mov
push
jle
sbb
mov
stc
pop
stos
(bad)
push
ret
jne
imul
xor
jecxz
int3
ins
push
add
gs
(bad)
(bad)
push
mov
xchg
mov
xchg
or
cdq
sub
or
and
jae
push
test
xchg
clc
(bad)
(bad)
push
push
add
call
fidivr
pop
add
imul
das
pushf
lds
or
push
out
adc
mov
nop
js
(bad)
dec
out
pop
sbb
jb
ja
out
push
ret
cwde
pop
pop
stos
adc
push
cli
cs
adc
dec
imul
xlat
jg
inc
jmp
mov
and
lock
(bad)
(bad)
(bad)
jmp
push
sahf
push
fidivr
cmc
ret
sub
pop
and
pop
ds
shr
jbe
or
stc
mov
pop
push
add
stos
enter
jno
jmp
das
out
nop
idiv
jo
enter
dec
sar
push
leave
xchg
jg
sbb
(bad)
push
jnp
les
jl
pop
(bad)
call
test
jnp
and
test
cmp
clc
ss
maskmovq
test
(bad)
mov
into
mov
push
aad
push
jbe
sbb
cmps
pop
fstp
out
imul
jmp
addr16
xchg
aaa
into
inc
imul
jne
mov
pop
sahf
cli
mov
push
(bad)
(bad)
(bad)
call
xchg
jge
fistp
mov
in
pop
mov
(bad)
loope
add
sub
retf
aam
pop
popa
lock
mov
shl
sti
xlat
mov
(bad)
(bad)
inc
inc
adc
(bad)
(bad)
call
mov
mov
push
and
inc
jbe
es
push
add
sbb
xor
jmp
mov
gs
pusha
dec
mov
rcr
mov
movs
icebp
(bad)
(bad)
(bad)
call
xchg
add
in
ins
aaa
push
cdq
push
cli
pop
jae
push
or
pop
adc
(bad)
(bad)
inc
push
aaa
jnp
jmp
adc
adc
das
cmp
aas
pusha
dec
sub
fimul
ror
fistp
sub
iret
dec
push
data16
push
xor
cs
jo
or
cli
or
jmp
cli
inc
js
xchg
cmps
js
push
pop
push
sbb
xor
(bad)
call
ja
rcl
xchg
and
idiv
lock
mov
inc
sbb
push
into
(bad)
push
pop
ss
nop
cmps
(bad)
and
call
(bad)
(bad)
(bad)
cmp
jb
xchg
lock
cmp
dec
pop
adc
push
add
(bad)
inc
(bad)
sar
cmp
or
xchg
sbb
sub
add
jl
fcos
cmp
mov
(bad)
mov
dec
(bad)
sti
cmp
add
or
mov
fs
dec
push
(bad)
call
add
fwait
stos
jp
push
popf
or
out
mov
clc
fabs
jmp
mul
sbb
mov
add
jb
add
cmps
mov
pop
sbb
add
(bad)
(bad)
in
inc
sbb
lods
jns
and
ins
dec
push
cmp
xchg
mov
jmp
(bad)
(bad)
(bad)
call
int
sub
ds
mov
frstor
mov
mov
jb
ja
cli
dec
inc
ss
mov
sub
les
mov
(bad)
(bad)
(bad)
push
xchg
lahf
imul
shr
sbb
inc
or
add
xor
pop
cli
jns
aam
loop
sar
jmp
mov
lea
mov
or
lods
lods
in
test
mov
lock
mov
sub
iret
xor
or
jne
ins
cmp
jp
rol
test
(bad)
div
div
lea
cmp
out
call
push
ins
addr16
xor
add
call
sub
loopne
test
packsswb
push
mov
(bad)
pop
sub
movs
out
xlat
jno
inc
xchg
mov
popa
mov
std
(bad)
(bad)
(bad)
cmp
les
aad
sbb
dec
xchg
sub
jmp
xor
push
les
in
fmul
shl
shl
xchg
arpl
mov
jmp
xchg
mov
pop
push
push
push
vmovdqa
mov
ins
mov
jle
and
cmp
jno
cmps
mov
xor
mov
adc
int
rep
mov
(bad)
(bad)
jmp
inc
dec
mov
cld
or
in
push
fwait
xor
stos
jmp
lods
mov
(bad)
(bad)
inc
ins
and
iret
mov
repnz
rol
inc
popa
adc
iret
cmp
(bad)
(bad)
(bad)
jmp
pop
iret
stos
mov
std
sti
popf
mov
add
dec
das
stos
loope
xchg
xchg
inc
(bad)
(bad)
(bad)
jmp
sbb
adc
in
cmp
push
inc
mov
add
jmp
jp
dec
(bad)
(bad)
jmp
jne
pop
not
add
lods
(bad)
jbe
ret
cmps
pop
ja
popf
dec
(bad)
jmp
inc
pop
jp
push
cmp
sbb
jns
push
ret
retf
cli
inc
sub
(bad)
mov
xchg
loope
dec
aas
and
dec
movs
push
xchg
or
and
dec
lods
and
jae
dec
xchg
xor
fisttp
out
sub
jmp
sbb
inc
(bad)
std
daa
scas
xchg
mov
or
stos
pushf
mov
sub
(bad)
(bad)
call
arpl
cmp
add
cmps
sub
cmp
out
jmp
das
sar
idiv
add
or
jmp
pop
cwde
pushf
das
sub
cmp
icebp
(bad)
(bad)
jmp
xchg
cmp
popa
movs
jns
(bad)
sbb
mov
cmp
(bad)
fistp
scas
daa
sbb
and
aas
(bad)
xchg
fwait
ret
sbb
test
jge
mov
(bad)
jnp
push
mov
push
mov
dec
repz
imul
sbb
push
pop
ins
sbb
je
(bad)
jmp
cli
push
(bad)
or
imul
popf
stos
adc
clc
popf
push
mov
mov
(bad)
(bad)
(bad)
jmp
adc
rcl
push
mov
gs
add
aas
gs
repnz
outs
int3
(bad)
jmp
shl
rcr
retf
sbb
xchg
mov
leave
hlt
mov
jle
adc
(bad)
(bad)
call
retf
sar
cmp
aad
into
aas
and
push
mov
fwait
pop
dec
and
mov
bound
push
sbb
lahf
adc
inc
jbe
push
ds
(bad)
(bad)
(bad)
inc
inc
movs
inc
lods
inc
gs
daa
std
pop
daa
hlt
xchg
fmul
neg
mov
jge
jmp
push
rcl
sbb
pusha
sbb
jmp
pop
inc
aam
std
rcl
inc
mov
xchg
and
outs
cmp
inc
ror
fwait
(bad)
aam
js
pop
cwde
scas
push
ja
pop
sub
inc
jno
cmp
jl
pop
adc
cwde
aad
(bad)
(bad)
(bad)
call
push
outs
and
retf
mov
ins
inc
sub
out
js
icebp
pop
test
scas
pop
test
push
into
dec
mov
dec
push
jp
stos
adc
jl
mov
hlt
call
loope
in
outs
jmp
inc
(bad)
add
fwait
push
outs
pop
mov
(bad)
(bad)
inc
cmp
sbb
pop
sub
fimul
or
js
cdq
(bad)
lea
test
xchg
(bad)
(bad)
call
jmp
mov
jns
out
out
retf
out
dec
mov
push
stos
fs
add
dec
adc
iret
cs
or
inc
add
adc
pop
cdq
fcomip
repz
dec
cmp
cli
push
in
(bad)
mov
and
or
pop
cmp
jge
daa
pop
imul
(bad)
(bad)
(bad)
fistp
leave
dec
dec
(bad)
cwde
out
push
sbb
add
push
das
les
das
rcl
call
sub
xor
and
add
fs
sub
daa
pop
push
rol
scas
and
cmp
(bad)
push
out
or
ds
dec
test
push
or
sub
arpl
ret
sar
adc
dec
cmp
jo
(bad)
(bad)
jmp
adc
ret
jge
inc
dec
pop
push
pop
add
push
shl
cld
imul
into
dec
mov
add
pop
je
sbb
sahf
popf
out
jmp
mov
(bad)
fild
jmp
dec
or
aad
scas
xlat
cmp
es
push
scas
adc
jmp
mov
call
dec
mov
aam
adc
stos
dec
pop
fild
mov
pop
lods
jmp
push
leave
(bad)
(bad)
(bad)
jmp
repz
pop
fs
add
mov
mov
out
loop
adc
xor
ja
test
loope
cdq
mov
or
ins
ror
pop
add
ins
imul
mov
mov
mov
xchg
(bad)
dec
add
test
pop
pop
in
xchg
fisttp
and
ffree
(bad)
fwait
mov
sbb
push
loopne
jmp
xor
std
cmp
cs
fmul
scas
es
out
cmp
in
jg
jmp
sbb
mov
nop
pop
xchg
and
call
push
mov
sar
cmp
clc
(bad)
(bad)
jl
xchg
fnsave
pop
aam
out
sbb
inc
outs
sbb
cwde
loope
pop
jmp
push
xor
push
shl
cdq
js
inc
xor
ret
push
cmp
(bad)
mov
xchg
pop
arpl
mov
(bad)
inc
push
pusha
aad
out
inc
cmp
movs
adc
add
fcom
outs
or
jg
(bad)
push
mov
les
adc
add
call
sahf
les
mov
sar
(bad)
call
dec
and
sub
inc
ins
arpl
jle
retf
retf
jo
mov
adc
push
clc
push
cld
jg
rcl
mov
mov
push
push
movs
jbe
(bad)
in
aas
in
(bad)
jmp
dec
mov
cmc
push
mov
jnp
ds
repz
(bad)
aam
jo
inc
pmullw
push
jmp
cmp
jle
and
int
pop
test
outs
jmp
(bad)
(bad)
(bad)
call
xor
and
cmp
scas
arpl
std
push
out
scas
mov
cmp
(bad)
(bad)
(bad)
jmp
addr16
inc
inc
dec
dec
xchg
mov
or
fwait
scas
test
and
movs
or
mov
xor
sets
(bad)
(bad)
dec
loop
sbb
test
nop
cmp
les
push
jo
or
(bad)
push
adc
adc
jecxz
loop
(bad)
add
std
rol
adc
xchg
cmps
xchg
jo
xor
dec
pop
or
les
(bad)
cld
dec
in
push
or
rcr
call
popf
push
xchg
sti
lea
cdq
imul
es
sub
dec
rcl
dec
sbb
(bad)
(bad)
(bad)
dec
jmp
dec
(bad)
addr16
int
mov
aam
add
adc
fld
or
test
add
ror
ins
dec
aad
lods
into
pop
sbb
mov
adc
cmp
inc
stos
push
xchg
(bad)
(bad)
(bad)
jg
and
jno
mov
mov
ins
adc
pop
mov
sti
jl
xor
loop
pop
inc
cmc
(bad)
(bad)
(bad)
call
retf
add
xor
xor
cmp
sub
cmp
in
sbb
(bad)
(bad)
(bad)
mov
xor
jmp
or
clc
in
cmp
test
fsubr
in
mov
inc
pop
hlt
(bad)
jmp
movs
and
inc
or
(bad)
push
push
or
push
gs
scas
scas
xor
and
push
jbe
dec
jmp
cmc
sbb
daa
ins
cld
jae
js
mov
mov
mov
dec
dec
arpl
in
aam
or
repz
js
out
mov
not
js
cmp
js
shl
(bad)
(bad)
jg
pop
or
fst
movs
mov
mov
adc
icebp
test
sahf
(bad)
(bad)
(bad)
push
lea
dec
cwde
xchg
xor
das
ror
pop
sub
and
rol
das
sar
out
mov
call
xchg
mov
jle
sbb
(bad)
(bad)
(bad)
push
je
sbb
push
scas
mov
xor
cmp
xor
(bad)
(bad)
(bad)
jmp
scas
fldcw
adc
sub
mov
shr
iret
and
inc
stc
xchg
out
inc
push
push
add
test
sbb
popf
and
(bad)
jmp
retf
xor
add
and
push
cmps
inc
dec
into
mov
aad
gs
ins
mov
(bad)
call
scas
inc
inc
mov
dec
not
(bad)
cld
pop
std
and
sahf
dec
test
icebp
adc
jmp
add
fdivrp
sbb
jg
imul
xor
(bad)
call
jle
pop
xlat
push
outs
icebp
mov
into
mov
popa
and
int3
xor
xchg
mov
(bad)
(bad)
sti
mov
repz
sbb
add
lea
xchg
or
cld
(bad)
(bad)
jmp
repnz
ss
inc
sub
jecxz
inc
jecxz
xor
es
aad
daa
retf
mov
daa
adc
call
jmp
push
retf
pop
xchg
(bad)
(bad)
(bad)
inc
sbb
sub
retf
or
inc
dec
imul
ret
(bad)
inc
cld
imul
mov
inc
pop
mov
jno
out
(bad)
(bad)
(bad)
call
jmp
and
and
add
dec
sbb
repnz
retf
lods
pop
push
jne
dec
xlat
inc
and
jmp
add
adc
(bad)
jmp
hlt
mov
dec
xor
in
push
leave
jmp
cmps
sbb
mov
repz
(bad)
(bad)
inc
adc
sub
mov
aas
jp
gs
cs
pushf
or
lods
or
movs
dec
jg
pop
icebp
jmp
push
cmp
push
xchg
(bad)
jmp
push
jmp
mov
mov
ret
outs
ss
sbb
(bad)
call
sub
add
pop
mov
sbb
pop
xchg
xor
fwait
(bad)
sub
adc
(bad)
(bad)
dec
cmp
ja
mov
pop
arpl
xchg
into
mov
movs
and
mov
(bad)
(bad)
(bad)
inc
call
(bad)
adc
outs
jg
ins
clc
movs
xor
adc
out
sbb
pop
mov
jge
imul
sub
dec
cwde
popf
cdq
fldcw
xchg
fwait
out
call
test
lods
jg
ja
aad
cmc
push
xchg
cmps
push
mov
or
fiadd
xchg
or
out
push
in
xchg
das
vcvtsi2sd
sub
std
jge
ret
(bad)
inc
test
aam
sahf
add
dec
ins
mov
push
fdivr
fs
push
mov
push
aam
(bad)
(bad)
inc
bound
fdivr
sbb
in
jno
mov
call
jmp
cmp
xor
pop
sbb
shl
int
xchg
loop
test
mov
mov
ret
out
mov
push
(bad)
dec
cmp
inc
ror
and
push
xchg
pop
cmp
xchg
push
fwait
(bad)
call
jmp
movs
mov
ret
sbb
add
or
retf
je
int
loope
(bad)
cmp
call
push
mov
adc
test
shr
cmp
stos
lea
imul
pop
ds
sbb
cwde
mov
dec
ins
adc
clc
dec
sbb
(bad)
(bad)
fisttp
mov
mov
aas
test
adc
loope
test
dec
aas
mov
xchg
ret
adc
inc
pop
cmp
(bad)
(bad)
(bad)
call
leave
cwde
jno
(bad)
sahf
and
and
or
retf
or
or
(bad)
jg
idiv
(bad)
(bad)
jns
sub
or
add
mov
out
mov
(bad)
(bad)
(bad)
push
aad
inc
add
add
scas
out
xchg
popa
sbb
pop
jmp
cmp
pop
loope
sti
(bad)
(bad)
(bad)
jmp
xchg
sbb
das
fnstcw
inc
inc
fidiv
int3
int
and
sub
sbb
(bad)
(bad)
(bad)
call
lea
test
add
leave
sub
push
retf
outs
pop
lods
sbb
sti
push
cdq
aam
jnp
inc
rcl
jo
jle
loop
(bad)
(bad)
(bad)
(bad)
in
sbb
(bad)
aaa
jno
fs
in
dec
or
jb
jg
ds
mov
scas
add
push
(bad)
(bad)
(bad)
jmp
add
std
fcomi
jns
out
into
mov
in
call
fwait
add
push
(bad)
call
sbb
fcmovnb
cli
sub
retf
lock
nop
loopne
out
fstp
(bad)
(bad)
call
aam
repnz
iret
fsub
icebp
cmp
leave
mov
mov
sbb
(bad)
mov
jb
loop
icebp
ret
fwait
or
mov
imul
ds
push
jp
in
out
stos
dec
(bad)
(bad)
(bad)
push
scas
adc
out
mov
fnstcw
push
dec
shl
pop
xchg
loope
jne
sub
xor
(bad)
(bad)
jmp
sbb
cmc
and
mov
leave
or
ins
add
inc
inc
movs
push
dec
repz
xchg
and
in
dec
cwde
cld
jp
jns
sbb
or
push
and
adc
(bad)
dec
iret
add
pop
xor
and
adc
lea
(bad)
(bad)
push
cmps
movs
sbb
(bad)
retf
mov
ror
cmp
xor
call
into
push
ret
fbld
ins
inc
mov
push
jo
ins
sbb
jmp
add
hlt
inc
int
push
xchg
jae
adc
dec
or
push
mov
xor
scas
dec
sub
test
mov
push
in
(bad)
(bad)
(bad)
call
icebp
pop
sub
pop
aaa
push
(bad)
pop
cs
inc
sbb
inc
pop
inc
adc
sub
popa
call
(bad)
(bad)
pop
dec
adc
faddp
jecxz
dec
pop
sub
test
or
mov
test
cmps
mov
xor
test
call
jmp
inc
mov
stos
adc
int3
add
xchg
inc
stos
adc
int
mov
cld
(bad)
(bad)
push
and
pop
mov
cmp
aam
repz
jno
cdq
fild
call
pop
ret
mov
outs
retf
scas
imul
int3
(bad)
(bad)
(bad)
(bad)
cmp
mov
out
push
div
cmp
stos
fdiv
pop
dec
rol
loop
(bad)
(bad)
(bad)
(bad)
cmp
pop
out
out
pop
jle
push
mov
(bad)
push
mov
cs
push
ja
(bad)
rcl
(bad)
(bad)
(bad)
(bad)
jmp
add
add
lods
ins
dec
pop
movs
push
inc
push
lds
(bad)
(bad)
(bad)
push
inc
aas
add
add
into
cdq
lock
hlt
cmp
jo
cld
out
or
(bad)
jmp
xchg
lds
(bad)
jmp
pop
jp
mov
(bad)
(bad)
jmp
mov
push
xchg
jno
imul
xor
test
cmps
(bad)
(bad)
call
and
add
sbb
mov
mov
(bad)
out
(bad)
sub
mov
mov
(bad)
(bad)
(bad)
call
loop
adc
test
aaa
adc
pop
cmps
pop
aaa
push
and
jo
xor
stos
cmp
xchg
push
cmp
pushf
nop
push
(bad)
(bad)
jmp
inc
mov
aam
mov
frstor
and
dec
jne
int
xchg
lds
add
mov
inc
cld
jb
inc
outs
or
add
test
pop
and
mov
(bad)
jmp
into
mov
pop
cs
mov
sub
adc
fdivr
dec
push
mov
(bad)
mov
movs
xchg
les
pop
sub
xor
jns
dec
and
mov
cmp
stos
add
(bad)
call
push
or
jecxz
mov
pop
cs
xchg
cli
out
cmp
mov
movs
add
(bad)
push
push
inc
test
in
hlt
int
pop
popf
stc
xchg
int3
or
cmc
jg
jmp
inc
jmp
imul
repnz
retf
cmp
pop
adc
sbb
sub
shl
adc
cdq
test
mov
and
pusha
pop
cmp
(bad)
(bad)
in
push
sub
enter
xor
xor
ins
adc
dec
cmp
pop
pop
adc
(bad)
(bad)
jmp
push
cs
jge
jne
dec
lea
mov
xlat
addr16
scas
inc
std
mov
call
std
test
mov
lods
sub
dec
leave
ja
pmuludq
jae
ss
jns
and
cmp
(bad)
(bad)
(bad)
inc
mov
push
loopne
mov
xor
retf
cmc
xchg
add
dec
aas
(bad)
(bad)
(bad)
push
outs
stc
(bad)
inc
sbb
ins
pop
push
dec
xchg
aam
dec
(bad)
das
cmp
xor
lds
int
js
lock
retf
mov
pop
push
cmp
jl
test
iret
(bad)
fisubr
dec
je
cli
dec
mov
je
jae
mov
(bad)
xor
or
jb
movs
mov
(bad)
(bad)
(bad)
call
sahf
loope
call
aas
adc
fbstp
cmps
call
pop
ret
(bad)
(bad)
(bad)
jmp
out
xchg
aad
in
fisttp
cli
call
jbe
ds
inc
mov
(bad)
(bad)
(bad)
jmp
out
mov
jnp
inc
imul
loop
dec
adc
stos
mov
int3
(bad)
mov
(bad)
(bad)
jmp
fimul
in
dec
and
aad
pop
adc
add
xchg
imul
les
call
and
(bad)
(bad)
mov
lahf
out
mov
inc
loopne
push
dec
and
nop
in
fisub
(bad)
(bad)
(bad)
jmp
into
mov
ja
sahf
cli
ret
cmc
fisttp
xchg
movs
mov
cwde
ret
(bad)
jmp
or
je
and
mov
jmp
mov
inc
push
xor
outs
data16
sub
(bad)
(bad)
(bad)
jmp
push
jg
(bad)
out
stc
add
imul
retf
mov
fidivr
dec
mov
out
hlt
adc
xchg
fldln2
out
loope
mov
xchg
adc
outs
pop
(bad)
(bad)
(bad)
push
dec
mov
lock
pop
stos
lahf
sub
xchg
fdiv
mov
loopne
daa
ds
inc
enter
mov
(bad)
call
sub
outs
sahf
mov
adc
mov
and
js
xor
in
fmul
rcl
(bad)
push
lock
repz
mov
or
and
enter
mov
xlat
stc
test
into
call
sbb
adc
mov
(bad)
aas
pop
rol
in
adc
lea
outs
in
iret
retf
data16
int3
call
add
cmp
(bad)
inc
xchg
mov
call
mov
jge
outs
pop
xor
sub
scas
in
mov
mov
xchg
(bad)
(bad)
(bad)
call
mov
mov
push
bound
outs
sbb
lods
and
lock
(bad)
(bad)
push
or
pop
xor
sbb
sub
out
int
and
mov
pushf
(bad)
(bad)
(bad)
dec
add
clc
xor
lea
xor
cmc
mov
fwait
(bad)
cmp
sahf
push
pop
sar
(bad)
push
jmp
jp
addr16
jp
dec
and
pusha
arpl
jp
(bad)
(bad)
mov
sub
xor
dec
jge
inc
dec
leave
pop
jge
sub
(bad)
jmp
aaa
retf
out
or
mov
adc
cmp
(bad)
repnz
call
scas
xchg
push
add
stos
cmp
mov
push
repz
(bad)
(bad)
(bad)
cld
or
jb
dec
mov
clc
mov
mov
and
push
mov
daa
lahf
push
in
(bad)
es
pop
std
mov
dec
outs
pop
sbb
mov
(bad)
and
imul
(bad)
call
es
push
mov
inc
pop
sub
stc
ror
(bad)
(bad)
jmp
cmp
scas
or
(bad)
jnp
rcl
(bad)
mov
(bad)
(bad)
mov
and
jmp
add
lea
cmc
add
dec
enter
fsubr
(bad)
and
pop
loopne
add
(bad)
loopne
scas
aaa
outs
ss
sub
aam
stc
popf
or
jae
or
add
fdiv
out
mov
(bad)
icebp
sub
(bad)
(bad)
jmp
into
test
loopne
lahf
xor
pop
cdq
call
mov
ret
push
and
(bad)
jmp
fstp
xchg
shl
repnz
aam
or
(bad)
out
pop
ja
(bad)
fcomip
(bad)
aas
dec
cmp
in
sub
fisttp
movs
mov
stos
sar
(bad)
inc
scas
div
fs
aaa
jge
inc
daa
stos
or
test
fistp
jae
popf
(bad)
(bad)
(bad)
fcomip
mov
sbb
outs
sbb
jbe
rcl
test
mov
inc
idiv
cli
dec
cdq
dec
push
test
ss
push
mov
and
add
out
jmp
mov
mov
cmp
std
(bad)
(bad)
(bad)
mov
rol
or
sub
(bad)
xchg
adc
cdq
jge
sbb
pop
jb
(bad)
(bad)
(bad)
cmp
ss
js
mov
cmp
sbb
test
mov
(bad)
inc
pop
adc
add
dec
jp
sbb
ins
pop
sub
das
clc
call
les
daa
mov
(bad)
cmps
jp
int3
xchg
lahf
pop
dec
jb
sub
fst
out
or
push
clc
rcr
push
or
loop
into
cmp
and
jmp
jo
dec
(bad)
(bad)
(bad)
push
lds
push
mov
shl
mov
lock
fcomp
xor
push
shl
es
xchg
mov
push
dec
clc
(bad)
mov
js
mov
lea
xor
push
xlat
mov
shr
ins
aam
inc
add
(bad)
jmp
les
lahf
or
dec
inc
add
cmp
lds
sbb
push
enter
(bad)
push
pmulhuw
pusha
cmp
into
add
into
leave
inc
sbb
xchg
sbb
in
dec
test
(bad)
(bad)
(bad)
(bad)
(bad)
stos
mov
mov
imul
or
cli
sbb
or
clc
in
cld
xlat
xchg
(bad)
(bad)
(bad)
jmp
sub
out
or
outs
add
(bad)
jle
xchg
out
mov
imul
(bad)
(bad)
dec
push
sbb
xor
dec
or
xchg
cdq
jg
aam
jmp
or
aaa
inc
xchg
mov
pop
pop
xlat
(bad)
push
ja
jmp
push
jno
cmps
sub
mov
sti
mov
stos
xchg
cmp
ss
(bad)
mov
mov
jl
cmps
mov
mov
push
gs
xchg
fild
fistp
mov
cli
je
fs
dec
lods
push
ja
fild
jle
(bad)
mov
das
sub
sub
sbb
movs
lea
and
out
enter
mov
(bad)
push
mov
lods
or
stos
or
pop
inc
out
(bad)
(bad)
dec
int
push
js
pop
adc
jmp
mov
int
fst
pop
inc
aas
ret
int
sti
fdivr
(bad)
(bad)
inc
mov
jmp
cmp
sbb
xor
jg
jae
call
imul
lods
(bad)
(bad)
(bad)
(bad)
jns
xchg
cmc
fisubr
inc
sub
outs
jge
push
mov
gs
or
out
sbb
mov
(bad)
dec
sub
in
retf
push
inc
es
xchg
pop
movs
movs
std
pop
movs
sar
lods
pop
mov
nop
arpl
or
(bad)
mov
pop
mov
aad
push
je
(bad)
xor
(bad)
aad
jmp
(bad)
jmp
and
mov
push
fadd
(bad)
stos
aam
ja
fld
std
(bad)
(bad)
(bad)
fiadd
mov
aaa
(bad)
addr16
jecxz
xor
leave
add
xchg
imul
pop
outs
add
fsub
ja
ins
jmp
pop
mov
inc
es
xor
dec
xor
dec
or
inc
pop
fiadd
(bad)
(bad)
(bad)
push
jecxz
iret
lock
mov
cmp
ins
pop
popa
pop
xor
movs
inc
(bad)
jl
adc
jmp
jns
sub
sbb
mov
xchg
jp
jg
fucomp
stos
xor
mov
inc
inc
stos
ins
xchg
mov
sub
sub
sbb
mov
push
aad
cmps
ds
mov
sbb
push
cmp
mov
enter
dec
maxps
add
popf
sub
mov
(bad)
(bad)
(bad)
push
or
cmp
lods
push
xchg
add
shl
enter
mov
and
dec
ret
aam
(bad)
(bad)
call
leave
xor
shl
sub
aas
ds
into
inc
(bad)
cld
(bad)
(bad)
(bad)
out
pop
mov
(bad)
je
or
pop
sbb
lods
loope
and
and
inc
(bad)
(bad)
(bad)
call
std
mov
sbb
sub
jnp
xor
mov
std
outs
clc
(bad)
(bad)
jl
push
(bad)
dec
jo
idiv
inc
mov
outs
scas
aas
dec
cmc
dec
push
imul
stos
inc
imul
repnz
xor
add
lock
fld
cmps
fwait
das
pop
(bad)
(bad)
inc
add
iret
sub
in
fs
(bad)
call
inc
cld
pop
pop
adc
outs
push
mov
mov
push
out
inc
call
loopne
adc
data16
xor
cld
(bad)
ss
mov
ret
aas
inc
cld
(bad)
(bad)
dec
pop
pop
mov
mov
test
or
push
ror
fcomp
inc
mul
add
leave
push
std
call
bound
cld
push
popf
ins
dec
test
fidivr
and
jmp
push
arpl
(bad)
jns
inc
call
fwait
daa
adc
xor
repnz
rol
inc
mov
stc
(bad)
inc
cld
mov
or
xlat
and
xor
mov
(bad)
(bad)
(bad)
call
add
jns
adc
push
aad
cmp
outs
stc
nop
push
ja
popf
scas
pop
(bad)
(bad)
(bad)
inc
shl
xchg
jecxz
shr
mov
dec
lock
(bad)
(bad)
(bad)
fcmove
fwait
xlat
pop
cmp
(bad)
popa
(bad)
test
daa
lea
inc
dec
sub
sti
dec
(bad)
cdq
aad
(bad)
(bad)
dec
xchg
outs
fnstenv
sbb
sbb
pop
in
fiadd
pop
add
rcl
cmp
cwde
mov
fnstsw
push
(bad)
jg
jmp
imul
in
pop
jnp
les
shl
cli
mov
jns
mov
mov
int3
loop
sar
xor
retf
test
add
xor
into
imul
mov
(bad)
(bad)
(bad)
push
add
dec
inc
loope
fdivr
dec
jp
adc
loopne
pop
daa
(bad)
loopne
inc
shl
(bad)
dec
or
in
xchg
sbb
push
fild
mov
out
inc
ret
xchg
mov
and
(bad)
aam
or
sub
(bad)
(bad)
jmp
mov
fcomp
std
into
lds
js
cmps
add
pop
xlat
loope
in
push
xchg
mov
inc
inc
pusha
loop
inc
push
push
sbb
pusha
sahf
data16
cdq
mov
cmp
rcr
xchg
call
cmp
ret
cld
mov
shl
push
mov
cmps
(bad)
icebp
adc
(bad)
(bad)
push
add
(bad)
(bad)
push
sbb
leave
fcmovb
sbb
pop
or
inc
mov
mov
dec
xor
sub
sub
(bad)
(bad)
inc
or
test
inc
adc
adc
rcl
test
mov
(bad)
(bad)
(bad)
mov
enter
repz
lock
and
cmp
retf
cmps
dec
push
add
(bad)
inc
inc
loopne
pop
rcr
out
pop
cmp
inc
cld
cmp
lahf
xor
test
or
or
int
jmp
ss
xchg
mov
dec
loopne
and
or
ficomp
and
(bad)
jae
xor
cli
(bad)
(bad)
jmp
mov
pop
dec
or
xchg
(bad)
mov
cmp
ret
jecxz
cmp
mov
out
or
rcr
mov
adc
add
lahf
cmc
pop
call
inc
mov
dec
cmps
adc
ja
clc
(bad)
jmp
cwde
imul
sbb
ins
adc
loop
test
dec
cmp
hlt
outs
clc
(bad)
push
mov
push
jo
xchg
ja
sub
mov
les
add
push
pop
ud0
(bad)
(bad)
sti
cli
jle
mov
adc
cmc
add
adc
sub
lods
dec
mov
daa
pop
or
mov
inc
inc
sub
fsubp
cmp
sub
daa
xor
cmp
(bad)
(bad)
(bad)
(bad)
call
jae
jno
ss
inc
dec
sbb
neg
(bad)
jmp
push
cmp
(bad)
in
not
ret
inc
jle
mov
jp
and
mov
aas
arpl
add
call
xchg
jl
add
(bad)
pop
sbb
inc
xchg
aaa
sar
(bad)
(bad)
jmp
in
adc
pop
rcl
dec
mov
pop
ret
loopne
or
push
(bad)
jmp
call
sub
mov
into
mov
mov
mov
jle
dec
call
(bad)
(bad)
sti
je
scas
popa
push
xchg
das
(bad)
lods
ins
sahf
xor
cbw
and
outs
push
int
cmc
scas
inc
mov
test
out
mov
pop
add
and
scas
adc
pop
jg
mov
ins
xor
mov
js
(bad)
(bad)
(bad)
jmp
pop
jmp
loop
sbb
cmps
es
sar
das
dec
mov
push
push
ins
(bad)
(bad)
(bad)
dec
aaa
push
xlat
clc
jno
xlat
retf
pop
leave
jbe
aam
adc
cmp
stc
jmp
push
call
nop
ror
mov
mov
push
lock
(bad)
jnp
retf
add
(bad)
jmp
aam
jmp
jge
out
out
out
mov
mov
int3
xchg
(bad)
dec
call
adc
movs
sbb
test
push
push
xchg
dec
mov
call
dec
mov
jne
xor
hlt
cmp
(bad)
inc
sar
xchg
and
xchg
xchg
std
or
arpl
xlat
mov
(bad)
(bad)
(bad)
call
jge
jns
cs
or
test
or
sti
inc
inc
mov
(bad)
(bad)
jmp
(bad)
fld
push
aad
cmp
stos
inc
mov
sbb
(bad)
(bad)
(bad)
(bad)
inc
mov
and
mov
fnstenv
dec
mov
rol
mov
jbe
push
fs
or
int
inc
and
(bad)
(bad)
call
sub
push
sub
mov
jge
pop
cmp
lea
jo
cmps
sbb
nop
pusha
popf
mov
(bad)
(bad)
inc
cld
xor
loopne
mov
dec
dec
mov
xor
xor
mov
or
push
outs
cli
(bad)
push
sbb
out
add
ud1
outs
scas
mov
mov
inc
(bad)
(bad)
(bad)
(bad)
std
cmp
sub
and
pop
adc
cmp
les
iret
jge
(bad)
(bad)
(bad)
call
sbb
xchg
lods
nop
jb
shr
lods
push
mov
mov
shl
retf
(bad)
call
inc
cmps
push
xchg
adc
imul
and
(bad)
call
sub
fcmovnb
dec
lock
sub
dec
add
repnz
(bad)
inc
lds
dec
cmp
sbb
adc
pushf
sbb
addr16
clc
inc
(bad)
(bad)
jmp
icebp
add
inc
push
out
aas
bound
mov
add
jmp
mov
(bad)
inc
test
cwde
aas
lds
rcl
nop
aad
inc
out
test
jp
outs
iret
dec
adc
pop
cmp
leave
(bad)
add
fnsetpm(287
jge
dec
stos
adc
push
cmp
lahf
ret
adc
(bad)
(bad)
(bad)
mov
jl
jnp
test
test
int
xchg
not
sbb
xchg
adc
or
xlat
mov
lds
das
mov
cmc
mov
jp
xor
ficom
pop
push
(bad)
(bad)
(bad)
(bad)
call
repz
scas
adc
cmc
loope
sahf
sar
ror
daa
js
data16
or
fs
mov
(bad)
(bad)
jnp
push
(bad)
adc
int3
jmp
dec
movs
ret
mov
sbb
lock
mov
mov
adc
cmps
fiadd
fcmovbe
ds
mov
jl
lods
jl
jne
sub
(bad)
inc
sbb
xchg
mov
in
shr
cmc
push
cmp
(bad)
(bad)
(bad)
jle
mov
scas
sbb
adc
mov
imul
ret
xor
xchg
mov
sbb
fcomip
dec
ret
jmp
adc
lods
add
jmp
stc
movs
outs
ja
(bad)
(bad)
(bad)
mov
cmps
fcomp
push
imul
adc
fwait
out
cmp
mov
shl
(bad)
(bad)
out
cli
add
xchg
push
icebp
fs
ins
inc
mov
cmps
add
ja
int
(bad)
(bad)
(bad)
(bad)
(bad)
jmp
add
mov
or
jbe
sub
stc
mov
xor
daa
push
inc
nop
lahf
mov
sub
inc
aaa
dec
fisubr
and
mov
into
xlat
jg
repz
(bad)
dec
push
inc
out
push
dec
loop
cdq
xchg
cmp
(bad)
call
mov
sub
in
dec
lahf
cli
(bad)
in
mov
push
mov
xor
(bad)
(bad)
cld
call
fisubr
addr16
ficom
jne
in
daa
jns
xor
cs
pop
lock
je
or
mov
pop
push
pushf
xor
fist
(bad)
(bad)
(bad)
call
into
test
adc
xchg
fadd
add
xchg
ret
xchg
mov
int3
cmp
stos
ud0
(bad)
call
ret
mov
shr
jmp
pop
inc
out
xchg
inc
nop
mov
jmp
adc
mov
xchg
cli
fsubr
mov
movs
pop
repz
inc
pop
int3
addr16
lods
add
pusha
cmp
inc
mov
fs
mov
aaa
xchg
data16
(bad)
(bad)
(bad)
jmp
cwde
mov
and
int
retf
daa
xchg
or
div
pop
sbb
xchg
out
adc
cli
loope
(bad)
jns
clc
and
sub
shr
dec
push
and
mov
push
mov
popf
fistp
mov
or
stos
data16
fisubr
cmp
dec
or
jb
jp
rcr
pop
adc
cmp
mov
ins
dec
jbe
push
loopne
ror
xor
les
and
aam
bound
pcmpgtw
enter
cmp
sbb
jge
call
js
aad
cwde
aaa
pusha
or
(bad)
mov
xor
xchg
pop
cwde
or
or
ds
dec
mov
adc
(bad)
dec
dec
mov
or
inc
into
popa
jns
add
sub
xor
push
daa
fimul
inc
or
lods
(bad)
fcom
out
add
test
(bad)
(bad)
inc
lds
sbb
movs
xor
mov
xchg
and
sbb
and
mov
shr
shl
lock
stc
and
pop
jo
sbb
pop
fisub
push
gs
xchg
call
or
into
mov
jle
out
mov
pusha
push
mov
sub
pushf
pop
mov
clc
jge
(bad)
(bad)
(bad)
jg
(bad)
dec
into
xchg
mov
push
or
clc
xchg
arpl
ror
mov
inc
sbb
(bad)
(bad)
(bad)
dec
popw
or
sub
clc
not
sub
pop
sub
mov
int
not
lahf
pop
test
jmp
cmps
mov
mov
test
out
(bad)
mov
mov
je
je
(bad)
(bad)
(bad)
cmp
mov
mov
xchg
jl
fnstenv
das
cmps
cdq
rcl
call
mov
shl
push
jmp
inc
int
ret
adc
xor
ja
lock
ficom
mov
push
lea
ins
sbb
cmp
fdiv
popa
pop
sti
xor
popf
pop
adc
mov
cmp
mov
(bad)
(bad)
jmp
pop
(bad)
jmp
sub
add
sub
mov
and
fimul
mov
jne
push
popf
pop
mov
(bad)
(bad)
push
hlt
sbb
(bad)
sar
cmp
leave
xchg
ins
jmp
lods
adc
das
lds
test
sub
(bad)
(bad)
jmp
adc
inc
dec
lock
les
nop
rep
mov
and
inc
(bad)
(bad)
(bad)
(bad)
out
in
xchg
das
xor
shl
sub
dec
dec
repnz
sub
jo
(bad)
in
out
xor
mov
mov
in
hlt
(bad)
sahf
test
jp
gs
add
je
sbb
dec
int3
mov
(bad)
jb
aam
or
push
hlt
into
or
sbb
call
clc
out
jmp
(bad)
dec
pop
leave
adc
dec
clc
pop
sbb
push
add
jecxz
(bad)
adc
(bad)
(bad)
(bad)
jg
mov
sub
(bad)
stos
sbb
xchg
lods
add
repz
push
ja
shr
jg
(bad)
call
shl
or
cmps
js
pop
lods
int
push
lock
adc
add
push
push
cdq
dec
jg
lods
and
pop
pop
icebp
rcr
jle
aaa
jmp
mov
mov
jle
sahf
sub
cmp
dec
jl
dec
in
pop
aas
jg
addr16
xchg
or
loope
xor
cs
push
mov
jmp
lea
je
adc
push
ds
sub
test
and
jp
jnp
(bad)
(bad)
dec
mov
call
mov
mov
xor
sub
or
or
dec
movs
test
push
test
jge
jne
and
ret
lods
sbb
push
arpl
add
aas
cmp
rol
fwait
(bad)
(bad)
(bad)
dec
cdq
iret
cli
and
and
jecxz
jo
cmp
sub
push
(bad)
xor
pop
cmps
push
dec
cli
(bad)
dec
out
xchg
scas
rcl
and
push
mov
pop
dec
cmp
cmp
test
or
push
ins
jno
nop
pop
sar
fisttp
pusha
movs
jo
into
scas
push
daa
mov
lods
inc
(bad)
(bad)
(bad)
(bad)
cmp
imul
mov
mov
stos
cdq
ret
es
and
(bad)
(bad)
push
call
iret
sbb
dec
retf
add
sbb
(bad)
jmp
push
inc
dec
sahf
xchg
call
(bad)
jg
fstp
mov
xor
jmp
inc
xlat
idiv
mov
dec
call
daa
push
call
jl
jge
dec
mov
in
ja
jg
inc
outs
fbld
pop
xor
xchg
jne
add
pop
clc
(bad)
(bad)
push
data16
loop
pusha
in
dec
pop
sbb
stos
adc
sbb
cmps
push
(bad)
xor
xor
add
inc
cdq
pop
loope
mov
loop
mov
(bad)
(bad)
(bad)
jg
ret
movs
push
dec
inc
vpxor
or
push
xor
mov
outs
adc
fbld
outs
je
adc
mov
test
call
mov
push
icebp
pop
int
retf
xchg
dec
es
cmp
(bad)
call
pop
or
inc
fdivr
xor
outs
dec
stos
mov
xchg
xchg
and
xchg
adc
not
cmps
fdiv
movs
mov
add
jae
sub
jo
jae
(bad)
(bad)
(bad)
call
push
aad
and
add
les
rcl
imul
cmp
retf
(bad)
(bad)
(bad)
fimul
repnz
test
or
cmps
dec
ins
pop
push
pushf
mov
movs
data16
dec
jp
mov
dec
out
jns
in
mov
lods
pop
rsqrtps
dec
jmp
inc
movs
int3
call
jne
(bad)
cli
mov
pop
xchg
mov
add
or
xchg
(bad)
std
std
fs
mov
mov
jecxz
mov
and
test
loopne
cld
mov
popf
stos
aad
(bad)
cmp
outs
(bad)
(bad)
(bad)
jmp
ror
xchg
push
jo
xor
jp
dec
and
ret
in
push
shl
nop
mov
(bad)
adc
scas
jae
jmp
data16
pop
mov
ja
sar
(bad)
(bad)
jg
mov
xor
shl
fnstcw
pop
add
or
(bad)
(bad)
(bad)
push
jle
pop
test
(bad)
or
pop
loopne
inc
pushf
cmps
jmp
pop
pop
mov
std
rcr
sar
call
rep
mov
mov
movs
outs
jno
sahf
xor
(bad)
push
lods
mov
add
sub
or
mov
and
push
xchg
retf
jl
in
pop
je
gs
(bad)
dec
ror
sti
stos
in
test
(bad)
call
neg
test
adc
icebp
aaa
out
inc
or
out
shl
pop
pop
imul
pop
pop
mov
sar
(bad)
mov
inc
test
fwait
in
stc
push
into
mov
cmp
sar
sbb
cli
lods
mov
iret
pop
add
xchg
push
mov
lea
dec
jno
in
fs
aas
icebp
and
inc
pop
iret
xlat
movs
sub
cli
push
lea
rcr
es
(bad)
(bad)
dec
(bad)
jbe
lock
jo
aam
icebp
ds
pop
(bad)
sbb
adc
arpl
test
add
inc
push
pop
fstp
mov
jecxz
lods
jnp
fs
arpl
mov
jl
fsubr
xchg
xchg
dec
adc
fcomip
std
jge
sbb
sti
mov
popa
sahf
jno
inc
ds
jg
cli
push
xor
movs
(bad)
(bad)
(bad)
(bad)
cmp
pushf
add
je
xor
cmc
mov
lods
cmc
sub
sbb
xchg
xor
(bad)
call
retf
dec
jmp
sbb
jge
jle
pop
or
in
in
cli
(bad)
(bad)
call
push
int
xor
push
out
push
sbb
daa
jbe
data16
ret
adc
loop
(bad)
(bad)
out
mov
cli
out
into
scas
retf
movs
pop
mov
cdq
imul
jmp
int3
lods
xchg
mov
test
inc
or
adc
(bad)
call
mov
sub
call
xor
sbb
mov
xor
cmp
ret
xchg
ins
fcom
(bad)
dec
push
pushf
sti
mov
int3
aas
xchg
(bad)
(bad)
or
sti
inc
cmp
out
cli
stos
fbstp
mov
inc
(bad)
imul
cdq
sub
sbb
jo
(bad)
(bad)
call
test
and
jbe
lea
es
xchg
push
pop
mov
hlt
jge
(bad)
(bad)
inc
mov
pop
mov
fidivr
pop
pop
int3
pop
sar
fdivr
add
(bad)
(bad)
push
dec
in
fistp
daa
mov
stos
fwait
out
cmp
sub
mov
sbb
xchg
gs
mov
dec
icebp
(bad)
jne
mov
mov
movs
dec
push
test
bound
inc
dec
jb
lods
pop
fdivr
(bad)
dec
shr
das
outs
xchg
and
pop
or
dec
mov
sub
(bad)
(bad)
push
data16
in
dec
jmp
xor
mov
pop
loope
adc
mov
ficom
std
(bad)
call
inc
(bad)
loopne
dec
xlat
fxch
xchg
sub
sub
call
call
xchg
(bad)
xchg
stos
movs
iret
mov
(bad)
ja
xchg
mov
and
push
or
lock
sbb
repz
mov
and
fist
cld
push
ds
xchg
jge
pop
bound
jmp
es
pop
mov
pop
mov
mov
fmul
mov
mov
push
retf
jno
ja
cli
xchg
adc
sub
cli
call
shr
pop
and
fwait
jb
mov
add
clc
mov
lods
mov
mov
loopne
(bad)
gs
inc
inc
and
inc
(bad)
(bad)
(bad)
dec
data16
pop
add
adc
imul
daa
sbb
fcmove
das
jmp
(bad)
(bad)
call
(bad)
mov
push
paddw
cmp
and
jae
idiv
cmc
fdiv
ficom
pop
cmc
call
aas
clc
or
stos
push
mov
in
inc
sub
mov
jbe
movs
inc
call
mov
pop
push
mov
(bad)
popa
add
in
adc
mov
and
lock
(bad)
jmp
gs
imul
into
or
mov
out
hlt
sbb
and
(bad)
(bad)
(bad)
fist
shl
xor
mov
push
popa
nop
lea
rol
sub
stos
cmc
mov
idiv
(bad)
dec
dec
pusha
mov
mov
inc
mov
mov
cmps
jmp
push
bound
or
sbb
pop
cmp
mov
sar
xchg
dec
in
sub
pushf
repnz
and
jb
dec
cmps
lahf
sbb
jb
jg
nop
loop
xchg
call
loopne
test
and
pavgb
xor
push
lods
or
push
(bad)
jg
xchg
ins
iret
imul
lods
call
pop
inc
push
inc
mov
mov
rcr
(bad)
(bad)
inc
push
rcr
icebp
mov
xor
push
or
push
aas
inc
scas
jg
(bad)
(bad)
(bad)
jmp
(bad)
addr16
scas
or
jnp
sub
push
fsubr
mov
jne
test
push
scas
add
aad
(bad)
(bad)
(bad)
call
leave
movs
and
mov
gs
inc
mov
(bad)
jb
ficom
pushf
fs
sbb
mov
adc
out
push
(bad)
xor
jmp
xor
or
jmp
cmc
push
and
ja
test
scas
addr16
mov
icebp
pop
sub
retf
in
pop
add
push
inc
adc
test
push
loope
add
(bad)
jg
int
mov
jmp
inc
ret
repz
adc
cwde
repz
frstor
sbb
dec
ja
imul
ins
sbb
cmp
lods
xor
ja
jmp
aaa
mov
xor
pop
aad
sub
stos
div
loope
and
cmp
pop
(bad)
cmp
ret
fisttp
out
call
push
cld
or
add
jg
(bad)
jg
cmp
test
fwait
or
pop
outs
xor
xchg
xor
jl
push
addr16
mov
pop
ret
and
mov
ret
out
fwait
sar
dec
shl
scas
test
inc
mov
pop
push
mov
sub
ss
adc
jns
aaa
sbb
pop
dec
es
(bad)
jmp
in
out
mov
mov
mov
stc
(bad)
cld
(bad)
dec
pop
push
cmp
(bad)
fdivr
addr16
loope
sbb
test
enter
mov
jp
mov
or
loop
inc
shr
mov
fiadd
ret
inc
xor
test
jl
mov
sbb
adc
sbb
xlat
sub
push
cmp
loope
test
movs
jns
in
nop
leave
fidiv
xchg
(bad)
jmp
cli
add
adc
call
push
sub
push
in
nop
pop
cmp
dec
add
inc
jb
retf
arpl
(bad)
(bad)
(bad)
jmp
sar
adc
imul
mov
inc
xor
(bad)
out
push
mov
fiadd
cmp
call
jo
sub
and
out
pop
xchg
dec
jg
xchg
dec
arpl
aam
call
(bad)
mov
xor
fdivr
clc
and
lea
(bad)
(bad)
jg
int3
repz
rcl
loope
movs
cmp
and
int
loopne
(bad)
(bad)
(bad)
jmp
dec
js
fst
mov
push
or
fsubr
dec
and
pop
scas
mov
pop
sub
mov
pop
loopne
mov
scas
cmp
adc
rol
jp
arpl
(bad)
(bad)
(bad)
jmp
arpl
xchg
xchg
add
pusha
cmp
push
repz
push
idiv
nop
repnz
sub
mov
mov
jge
call
(bad)
inc
add
mov
(bad)
and
sar
into
pop
and
fadd
adc
sub
inc
push
mov
loopne
jp
imul
rcr
pop
jnp
mov
xchg
in
ret
push
mov
mov
adc
pushf
aas
hlt
xor
outs
cmp
popa
test
push
(bad)
pop
(bad)
(bad)
add
hlt
lock
(bad)
(bad)
dec
jg
movs
mov
mov
inc
in
lods
sub
cmp
inc
out
inc
push
cdq
idiv
fwait
inc
jmp
nop
mov
sub
in
jl
push
loopne
test
data16
fst
mov
lds
cmc
aaa
push
(bad)
jmp
shr
sbb
push
xchg
(bad)
or
or
enter
enter
jg
pop
mov
fcomp
popa
je
or
mov
xchg
dec
push
push
aam
dec
js
xchg
xor
(bad)
cld
out
mov
xor
je
loope
cmp
add
ret
(bad)
jg
sub
jmp
repnz
jmp
loope
jae
add
(bad)
jg
push
cmp
pop
retf
jae
call
mov
dec
mov
(bad)
(bad)
push
jae
hlt
retf
pop
outs
adc
js
out
cmp
pop
push
sbb
jns
clc
(bad)
es
(bad)
(bad)
call
mov
sbb
movq
inc
loope
sub
inc
scas
xor
push
xchg
or
enter
ja
or
adc
out
cs
loopne
popf
mov
cmp
push
cmps
repnz
lea
call
mov
jmp
inc
cli
(bad)
(bad)
call
xchg
mov
mov
gs
xchg
mov
scas
cwde
sub
jg
(bad)
dec
cli
jl
push
mov
push
outs
movs
dec
jge
daa
ja
fist
mov
(bad)
inc
jg
test
out
mov
pop
outs
retf
sti
ja
movs
xor
(bad)
pop
xor
mov
lock
shl
pop
pop
push
push
sub
xor
(bad)
jg
inc
xor
sub
inc
fistp
pop
aad
jo
jmp
push
pop
and
(bad)
(bad)
jmp
dec
jb
stos
xor
push
jecxz
cwde
popa
js
fcmovbe
mov
jno
cmc
cmps
ret
cmp
add
jecxz
inc
loopne
or
pop
pop
(bad)
jl
mov
cmp
(bad)
(bad)
(bad)
jmp
push
out
sub
or
dec
cmp
ds
addr16
lahf
pop
jecxz
fidiv
movs
les
xchg
les
(bad)
(bad)
(bad)
jmp
inc
mov
mov
push
mov
adc
push
adc
or
fimul
xor
imul
mov
push
mov
sbb
and
cwde
idiv
or
mov
(bad)
(bad)
(bad)
ds
(bad)
cmc
xor
sub
mov
ret
out
jns
fcmove
sub
dec
xor
retf
(bad)
(bad)
(bad)
call
aam
sub
ficomp
(bad)
cmp
jg
jno
inc
xor
mov
(bad)
(bad)
(bad)
dec
ds
imul
repnz
xchg
inc
jns
lahf
xor
pop
sbb
cmp
(bad)
(bad)
(bad)
jmp
xor
std
mov
fst
pop
cs
sti
repnz
out
push
add
ja
lods
les
clc
(bad)
(bad)
mov
sub
lock
jmp
addr16
dec
das
sar
icebp
dec
pop
dec
mov
add
stos
pop
lea
mov
(bad)
(bad)
jmp
sub
and
sub
(bad)
(bad)
into
jmp
pop
scas
xlat
mov
mov
xor
icebp
xchg
(bad)
(bad)
(bad)
push
jmp
clc
jmp
sub
mov
xchg
out
add
sub
fs
inc
dec
sub
jmp
and
push
shl
and
das
adc
sahf
inc
sbb
mov
xchg
(bad)
(bad)
mov
push
cdq
into
(bad)
add
jp
sahf
pusha
adc
mov
cmp
push
sub
mov
mov
hlt
or
inc
mov
push
clc
push
fdivrp
(bad)
(bad)
jmp
(bad)
push
sahf
push
xor
dec
cmp
inc
faddp
push
jge
and
std
and
(bad)
(bad)
(bad)
jmp
cs
shr
sub
jae
ja
mov
dec
in
movs
mov
xlat
(bad)
(bad)
(bad)
call
xchg
sar
int3
and
xchg
inc
sar
cmp
ror
call
aaa
sub
aad
push
and
jb
into
and
call
pop
sar
(bad)
jmp
iret
add
and
lods
stc
scas
mov
jbe
push
(bad)
lock
dec
inc
adc
cdq
sub
xor
pop
and
dec
lahf
imul
je
xor
lods
push
(bad)
test
scas
icebp
and
dec
or
in
stc
mov
(bad)
(bad)
(bad)
(bad)
fdivr
push
js
push
fld
mov
mov
shrd
jle
pop
pusha
jmp
shl
int
adc
outs
jge
icebp
shr
fistp
dec
xchg
adc
mov
xchg
in
cmps
in
pusha
mov
out
jae
jnp
imul
pop
(bad)
(bad)
(bad)
(bad)
fmul
into
or
cwde
jns
and
lock
popf
retf
out
je
popa
lahf
outs
jbe
pop
jp
sbb
jmp
xchg
stos
xor
sub
add
inc
in
dec
(bad)
hlt
mov
pop
test
push
(bad)
(bad)
(bad)
inc
ret
mov
pop
ja
ds
adc
(bad)
cwde
add
add
loop
(bad)
ss
add
call
and
(bad)
(bad)
mov
out
mov
dec
(bad)
jmp
enter
pop
dec
cwde
or
(bad)
(bad)
mov
lock
call
imul
shl
sub
aas
stos
or
(bad)
fisttp
or
mov
dec
mov
out
lods
add
mov
(bad)
(bad)
(bad)
dec
mov
sub
dec
adc
nop
mov
movs
ret
cmps
mov
(bad)
jmp
ss
push
jge
ret
push
dec
xchg
xor
cmps
pop
dec
retf
lods
add
(bad)
dec
adc
neg
ret
cmps
imul
jp
sbb
out
dec
add
mov
(bad)
(bad)
call
not
sbb
sbb
or
scas
imul
fsubp
pop
leave
pop
jo
hlt
pop
push
jp
(bad)
(bad)
inc
call
popa
stc
push
cmp
jae
lods
dec
rcr
mov
cmp
(bad)
(bad)
push
or
js
movs
jno
daa
push
push
cmp
mov
mov
pop
enter
(bad)
mov
repz
xchg
inc
add
xchg
aaa
cld
jmp
mov
jns
mov
out
fdiv
mov
cmps
push
and
(bad)
(bad)
call
cmp
mov
push
xchg
sti
(bad)
daa
sbb
loope
stos
cmp
xchg
(bad)
(bad)
push
stc
adc
ss
xor
cdq
pop
aam
sub
into
in
pop
sahf
addr16
scas
out
dec
mov
(bad)
(bad)
jmp
daa
and
scas
pop
and
mov
add
jbe
pushf
(bad)
out
mov
jae
(bad)
(bad)
(bad)
(bad)
call
pushf
mov
push
sub
cmps
and
imul
sub
mov
jmp
sbb
sbb
and
mov
dec
push
mov
cmp
xor
mov
xchg
cmps
in
xchg
adc
dec
loope
icebp
sub
dec
jle
pop
mov
push
in
inc
mov
adc
movs
or
loope
lods
retf
xchg
stc
jecxz
or
sbb
inc
loopne
retf
les
xchg
or
retf
cwde
push
xor
enter
jo
or
sub
pop
mov
push
test
test
call
dec
popa
cmp
ret
inc
(bad)
in
aas
dec
arpl
jns
pushf
je
ins
(bad)
(bad)
(bad)
call
add
js
xchg
inc
xor
cmc
or
loop
lock
dec
(bad)
in
jne
cmps
ds
push
(bad)
(bad)
(bad)
jmp
push
mov
jns
out
mov
rcr
cmps
add
xlat
bound
ss
pop
es
pop
std
push
bound
xor
add
in
jne
repz
xlat
fidivr
cmp
hlt
(bad)
(bad)
(bad)
(bad)
(bad)
out
aaa
sub
lds
call
cs
xchg
xor
(bad)
(bad)
(bad)
jmp
jae
mov
cld
mov
jg
daa
icebp
and
mov
push
inc
out
pushf
and
jne
scas
mov
pusha
pop
jno
dec
cmp
outs
out
cld
bswap
outs
(bad)
(bad)
push
sbb
pop
in
add
pop
dec
in
add
neg
adc
mov
adc
mov
fdivp
cmc
mov
outs
mov
in
push
addr16
shl
js
mov
inc
shl
dec
cmp
arpl
das
scas
(bad)
fnsave
jmp
call
sbb
rcl
aad
fiadd
jo
outs
dec
pop
or
cdq
retf
jg
add
lea
mov
ja
sub
(bad)
(bad)
call
mov
and
clc
cmp
icebp
rsm
mov
push
sbb
sbb
push
jl
lods
call
mov
call
clc
(bad)
(bad)
(bad)
dec
mov
das
cmp
enter
or
add
sbb
inc
mov
(bad)
mov
inc
retf
mov
push
in
in
or
sti
dec
fcomip
call
jae
dec
mov
inc
xchg
out
cwde
jmp
clc
(bad)
(bad)
fcmovbe
ins
out
or
pop
jb
ror
mov
mov
mov
fiadd
add
add
mov
(bad)
sub
pop
rcl
(bad)
(bad)
call
xor
in
mov
add
int
cmp
jb
adc
cmp
inc
and
(bad)
(bad)
(bad)
jmp
int
retf
jecxz
in
mov
xchg
sbb
pusha
push
icebp
ror
cmp
shl
sahf
cld
rcl
cld
sub
pop
(bad)
jl
jmp
xor
(bad)
sbb
std
(bad)
(bad)
dec
rcr
(bad)
out
mov
es
inc
sbb
(bad)
(bad)
(bad)
push
sub
add
leave
bound
xchg
loop
and
js
xor
call
pop
hlt
call
push
inc
repz
pop
ret
push
jmp
or
lds
fstp
(bad)
(bad)
(bad)
inc
cmp
loope
and
jmp
adc
or
jo
inc
lahf
int
int
(bad)
(bad)
(bad)
inc
fwait
movs
cwde
cmps
lds
jecxz
jae
fimul
sub
ins
cmps
sar
or
xor
dec
mov
ja
aas
out
jb
push
pop
in
sbb
mov
inc
sbb
dec
inc
(bad)
call
ret
das
jle
jge
pop
call
add
cmp
jmp
dec
and
lds
es
xor
jmp
jae
(bad)
(bad)
(bad)
call
cmp
dec
add
mov
sbb
pop
mov
sbb
mov
pop
mov
(bad)
(bad)
call
out
lods
dec
sub
aas
test
jnp
xor
test
xchg
push
arpl
cmc
push
fild
sar
jg
arpl
add
add
adc
inc
test
jae
clc
(bad)
(bad)
(bad)
jg
ret
adc
mov
or
add
lds
adc
pop
dec
pop
add
mov
test
(bad)
(bad)
(bad)
push
test
(bad)
(bad)
xlat
sbb
cmp
inc
frstor
mov
and
xchg
(bad)
(bad)
dec
mov
inc
imul
retf
clc
mov
xor
movs
dec
sbb
(bad)
(bad)
(bad)
(bad)
sti
mov
in
cdq
hlt
adc
push
inc
cdq
mov
cld
mov
out
das
js
mov
call
sbb
pop
sub
test
(bad)
(bad)
(bad)
call
sbb
cmp
adc
adc
cmp
jmp
dec
imul
sub
ins
out
add
test
dec
push
clc
add
xchg
jmp
jmp
sub
push
dec
pop
ret
into
leave
adc
call
inc
mov
sub
push
or
mov
call
sbb
stos
dec
push
sbb
leave
xlat
xor
push
shr
push
cmp
std
fsubrp
(bad)
(bad)
(bad)
inc
or
lds
imul
mov
int3
ror
push
or
in
mov
xchg
lods
mov
(bad)
(bad)
inc
leave
xchg
xor
dec
mul
jmp
pop
inc
(bad)
pop
cmp
or
and
(bad)
(bad)
(bad)
cmp
jno
(bad)
mov
mov
pusha
cmp
jp
or
retf
icebp
or
jp
push
(bad)
(bad)
jmp
inc
and
mov
jmp
sub
xlat
aaa
cmp
push
std
out
cli
and
pop
dec
xor
nop
mov
inc
mov
xchg
or
(bad)
push
movs
ret
cmps
lock
add
cmps
jo
xor
add
lods
test
fdiv
mov
xchg
mov
xor
adc
adc
push
mov
xor
in
or
add
dec
addr16
rcl
(bad)
(bad)
(bad)
mov
jb
pusha
push
sbb
lock
push
jae
cmp
ror
outs
adc
lahf
aaa
xchg
xor
test
push
pushf
sub
shl
dec
jnp
loope
out
and
jae
mov
sti
(bad)
(bad)
inc
add
xor
sub
push
in
push
fucomi
(bad)
(bad)
(bad)
call
dec
fiadd
mov
movs
lahf
add
daa
jecxz
test
mov
not
(bad)
(bad)
(bad)
push
push
add
call
and
push
aad
(bad)
fcomp
jae
dec
or
out
stos
imul
mov
(bad)
dec
jbe
in
xchg
ror
clc
(bad)
mov
add
inc
xchg
xchg
xchg
movs
and
scas
jbe
mov
call
xchg
loopne
jg
dec
cmc
movs
test
outs
(bad)
stos
retf
lods
push
push
sbb
sub
dec
out
mov
scas
clc
(bad)
push
push
inc
lea
fwait
inc
out
push
jg
or
sar
cdq
std
(bad)
fcomip
dec
inc
retf
adc
add
mov
hlt
out
xor
dec
jecxz
(bad)
call
icebp
adc
mov
data16
sbb
nop
sar
(bad)
mov
pop
sub
or
aaa
imul
nop
stos
add
push
loope
jae
mov
out
jne
add
mov
dec
rcr
stos
or
es
push
push
or
(bad)
(bad)
jmp
adc
in
pop
outs
in
mov
test
mov
or
dec
movs
(bad)
(bad)
(bad)
dec
jle
aaa
cmps
push
push
mov
cmc
out
pop
popa
inc
and
in
jnp
mov
pop
cmps
(bad)
(bad)
(bad)
jmp
ret
inc
in
outs
bound
push
out
repnz
call
dec
push
add
(bad)
(bad)
call
xchg
ja
test
iret
jge
cmp
inc
test
dec
xor
pop
lock
call
jp
push
adc
mov
mov
outs
outs
lods
in
cld
fstp
(bad)
(bad)
inc
(bad)
or
mov
jb
push
int
pop
push
push
std
idiv
(bad)
call
loopne
jb
and
(bad)
test
mov
mov
and
sub
call
fidivr
sub
and
and
add
cmp
repz
mov
and
inc
push
dec
mov
add
mov
mov
(bad)
dec
movs
mov
sub
dec
mov
cdq
sbb
loope
inc
sub
sbb
push
sbb
retf
add
ss
and
xor
fsub
std
outs
clc
jmp
sub
mov
fiadd
and
or
cli
jg
sub
xchg
popa
dec
sbb
aas
cmp
(bad)
jmp
mov
imul
inc
push
xchg
popf
jle
repz
pop
jl
sub
adc
jmp
mov
and
mov
std
pop
rol
dec
test
aad
or
fs
(bad)
(bad)
std
add
(bad)
cmp
test
push
loope
sbb
imul
call
leave
adc
jmp
jge
dec
pop
mov
sbb
lahf
dec
sbb
cli
imul
aaa
mov
(bad)
(bad)
jmp
inc
add
or
(bad)
enter
sub
aas
push
out
push
fsub
stos
movs
out
call
push
push
test
(bad)
push
jl
ds
out
pusha
dec
test
push
sub
inc
int3
out
sbb
jmp
daa
xor
or
pop
outs
pop
jge
mov
out
movs
cmp
mov
sub
sbb
(bad)
(bad)
mov
jb
outs
ret
jg
inc
popa
push
xchg
adc
outs
or
(bad)
dec
xlat
pop
cmp
fisttp
sbb
cmps
loopne
call
(bad)
out
mov
js
stc
lock
movs
jne
push
cmps
ret
fwait
jmp
mov
outs
pop
mov
mov
dec
xchg
cwde
fist
out
(bad)
(bad)
jmp
data16
xchg
rcl
lods
lock
pop
add
test
ffreep
add
(bad)
fnsave
mov
js
out
pop
sbb
ja
(bad)
inc
jmp
pop
pop
inc
jg
sub
jl
in
lea
pop
add
(bad)
jmp
(bad)
icebp
dec
xchg
loope
neg
inc
pushf
call
or
jecxz
mov
fsub
(bad)
inc
mov
add
and
add
ret
(bad)
or
or
in
fwait
(bad)
cmps
sbb
sub
aaa
out
nop
mov
pushf
in
inc
mov
(bad)
(bad)
fucom
cmp
dec
mov
dec
rdmsr
and
mov
sbb
loope
mov
repz
loopne
adc
int3
mov
xchg
call
jmp
out
fwait
mov
mov
mov
cmp
jg
repnz
daa
iret
(bad)
(bad)
(bad)
dec
bound
mov
dec
stos
cmp
push
outs
test
lds
dec
xchg
cmp
(bad)
fld
shl
rcl
dec
xchg
dec
addr16
sub
cmps
popa
mov
or
or
(bad)
popa
fdivr
cld
(bad)
push
std
popf
ds
pop
dec
in
aas
mov
jle
or
push
inc
xchg
sub
(bad)
(bad)
jg
mov
repz
repnz
into
inc
retf
lahf
cdq
push
dec
xchg
loopne
inc
(bad)
(bad)
(bad)
dec
or
lea
leave
mov
lea
add
test
adc
(bad)
(bad)
dec
pushf
xor
and
fwait
xchg
sub
add
mov
jecxz
(bad)
cmp
std
adc
ds
jnp
inc
mov
xchg
fwait
into
icebp
cmp
loopne
(bad)
(bad)
dec
rol
fild
sbb
push
pop
dec
retf
push
out
push
and
out
js
xchg
or
(bad)
jg
fld
and
(bad)
pop
push
icebp
shl
and
(bad)
jl
jbe
cmp
dec
je
jp
pushf
std
jmp
push
scas
mov
(bad)
(bad)
mov
mov
xchg
out
adc
xlat
call
jae
adc
inc
stos
sbb
mov
inc
pushf
(bad)
cld
add
scas
stos
popf
jl
adc
pop
dec
adc
dec
mov
xchg
(bad)
(bad)
mov
jg
dec
daa
adc
gs
inc
xchg
or
jmp
jecxz
xchg
sub
sub
mov
add
(bad)
call
in
cli
mov
lock
jp
pop
repnz
les
inc
sub
cmp
in
aaa
fwait
out
adc
and
(bad)
std
scas
clc
dec
fadd
and
ret
in
inc
mov
add
mov
bound
mov
mov
mov
paddd
shl
aaa
std
(bad)
aas
out
push
dec
cmp
(bad)
mov
scas
cmp
out
mov
rcr
xor
and
(bad)
(bad)
inc
fisubr
and
aad
xchg
lods
out
popa
xchg
mov
inc
jmp
call
mov
and
cs
adc
loope
push
outs
push
fstp
cmps
add
mov
call
fnstsw
mov
and
xor
sbb
loope
imul
mov
cmp
mov
jmp
mov
inc
push
adc
mov
xchg
pop
loopne
outs
cmp
(bad)
(bad)
jmp
inc
cmp
add
movs
pushf
push
(bad)
imul
in
xor
ss
mov
push
call
(bad)
int
dec
cwde
push
xchg
mov
out
aaa
fstp
clc
arpl
inc
(bad)
(bad)
(bad)
(bad)
clc
sub
mov
jbe
js
push
lahf
mov
ins
adc
dec
aad
add
(bad)
(bad)
jmp
out
sbb
mov
pop
icebp
bound
cmps
outs
stos
pushw
call
add
jecxz
(bad)
dec
icebp
les
adc
ds
and
sub
stos
and
cmp
outs
mov
fidivr
(bad)
out
cmc
(bad)
jg
js
mov
loopne
cmp
sbb
cmps
xchg
cld
jecxz
(bad)
call
inc
lea
xor
int3
adc
iret
dec
fs
cmp
sbb
(bad)
(bad)
jmp
pushf
imul
sbb
movs
fsubp
jb
iret
lock
inc
dec
sahf
jno
js
inc
cld
mov
(bad)
mov
add
jl
sbb
dec
mov
out
retf
jmp
add
call
cmps
pop
adc
(bad)
fisttp
mov
sub
xor
sbb
jmp
jg
into
in
mov
mov
push
jbe
mov
(bad)
push
cld
ffree
sbb
sub
jae
repz
xchg
push
ins
xor
pop
idiv
(bad)
(bad)
inc
dec
jno
xchg
into
mov
xor
adc
cmps
fisub
shl
(bad)
(bad)
cmp
or
adc
mov
and
adc
gs
cmp
push
outs
xor
dec
mov
sbb
push
sub
inc
out
or
bound
mov
pop
call
(bad)
(bad)
(bad)
fisubr
mov
stos
test
pop
nop
sar
(bad)
loope
mov
and
(bad)
(bad)
(bad)
(bad)
jmp
pop
loop
fist
inc
scas
cmc
fistp
sub
shr
or
jbe
mov
aad
(bad)
jg
mov
int3
cmc
mov
add
test
and
xor
(bad)
(bad)
push
jmp
xlat
cdq
inc
cmps
jnp
frstor
add
lea
mov
jp
call
std
push
in
aam
(bad)
hlt
jnp
jmp
jnp
jmp
dec
(bad)
ins
imul
push
lods
mov
xchg
(bad)
(bad)
(bad)
dec
push
mov
mov
xor
or
xchg
dec
jge
mov
pop
dec
mov
mov
sti
push
add
inc
clc
ror
dec
(bad)
test
push
in
sahf
retf
imul
popf
jb
mov
push
xor
dec
imul
dec
and
or
cmp
imul
xchg
dec
shl
mov
(bad)
(bad)
out
fmul
jle
mov
(bad)
jbe
xlat
les
ud2
mov
loopne
jo
(bad)
pop
hlt
(bad)
push
push
or
clc
inc
jge
dec
dec
mov
inc
movs
mov
(bad)
(bad)
jmp
push
inc
sbb
imul
xlat
(bad)
frstor
inc
mov
ja
(bad)
(bad)
dec
fisub
repnz
daa
hlt
stos
call
push
retf
(bad)
(bad)
(bad)
jg
sti
stos
xor
out
push
leave
sub
stos
jge
daa
jecxz
push
xchg
or
push
xchg
and
test
lea
ins
xchg
or
and
pop
call
into
mov
xchg
mov
loope
cmp
cwde
mov
mov
jle
adc
jmp
jg
or
cmp
sub
xlat
pushf
sub
mov
out
scas
dec
call
int3
jns
mov
mov
xor
fsubr
pop
iret
adc
cmps
test
test
adc
jnp
sub
test
push
(bad)
std
(bad)
(bad)
jmp
cs
adc
push
neg
fdivr
std
and
cwde
pop
push
jg
(bad)
(bad)
call
jns
mov
mov
jmp
sub
ins
mov
mov
sub
(bad)
jmp
add
jmp
xchg
mov
inc
outs
hlt
adc
adc
aas
xchg
xchg
cmc
ss
fs
pop
(bad)
(bad)
(bad)
call
and
test
leave
xlat
nop
loop
ja
(bad)
rcr
imul
imul
(bad)
(bad)
(bad)
dec
mov
aas
out
or
cmp
dec
xor
fdivr
fst
sub
and
(bad)
(bad)
call
popf
sub
cmc
mov
xchg
out
out
push
sbb
mov
cmp
jl
aas
pop
retf
(bad)
(bad)
(bad)
call
pop
into
fstp
lds
leave
bound
add
jl
cmps
jo
jns
(bad)
(bad)
(bad)
call
stc
in
dec
fidiv
pop
xor
ficom
cmp
lock
cmp
addr16
or
(bad)
(bad)
(bad)
call
into
retf
fwait
xor
outs
add
ror
imul
jnp
shl
(bad)
(bad)
(bad)
(bad)
cmp
jns
mov
add
leave
push
(bad)
and
movs
loopne
sar
test
push
sar
(bad)
(bad)
call
add
mov
mov
jge
rol
jne
(bad)
jg
jmp
or
stc
in
daa
in
push
dec
out
mov
(bad)
hlt
dec
loop
xchg
leave
arpl
or
mov
sbb
ret
add
(bad)
call
stos
test
leave
stc
add
push
lock
(bad)
(bad)
call
loope
sbb
sbb
push
retf
out
fsub
adc
enter
jnp
imul
(bad)
jl
mov
mov
or
dec
jl
mov
les
jmp
test
retf
and
cmp
adc
cmp
pop
and
or
(bad)
call
cs
sub
daa
xchg
pop
rcl
jnp
loopne
stos
or
xchg
loopne
(bad)
jmp
add
in
jmp
jge
lahf
aad
jp
sbb
or
mov
jmp
arpl
cmps
adc
in
cmc
or
sub
jg
outs
inc
(bad)
fdivr
cmps
aam
in
out
xor
leave
mov
sar
inc
xor
scas
cli
xchg
aas
jne
cs
jb
sub
add
xor
test
jmp
fild
leave
cmp
mov
(bad)
jmp
jno
(bad)
sub
ficom
xchg
out
push
jmp
cwde
xor
push
pop
retf
(bad)
dec
call
pop
test
call
sti
xchg
xchg
std
into
mov
out
cmp
dec
mov
and
inc
and
aam
in
ins
mov
sub
sub
cmp
xor
cmp
cmc
in
cmp
hlt
(bad)
(bad)
push
in
sbb
scas
inc
aad
jg
pop
jmp
ja
call
cmp
call
cmp
es
xor
inc
daa
or
das
cli
(bad)
(bad)
out
sub
xchg
shl
jae
xor
mov
hlt
sbb
fsubrp
(bad)
(bad)
jg
mov
bound
mov
xor
jb
jns
out
cdq
mov
(bad)
(bad)
call
imul
fidiv
adc
or
(bad)
div
(bad)
call
xor
jecxz
rcr
mov
xor
mov
jns
retf
or
call
cld
pop
mov
cmp
sar
js
loope
lods
cmp
adc
ds
std
(bad)
dec
inc
inc
dec
mov
fcom
stos
xchg
jne
jae
xchg
xchg
shl
je
mov
iret
inc
xor
out
iret
neg
das
pushf
addr16
ins
push
mov
pop
les
pop
fcomip
(bad)
jmp
popa
daa
add
jns
inc
gs
loopne
aas
pop
xchg
xchg
lock
bound
jg
pop
lock
(bad)
fdiv
and
aaa
aaa
aad
add
aam
cmp
xor
aad
(bad)
(bad)
jmp
and
adc
fild
cmp
cld
inc
pushf
dec
(bad)
(bad)
(bad)
jmp
into
loopne
mov
ror
js
xor
or
jmp
out
xchg
jmp
push
sub
(bad)
(bad)
inc
jbe
add
inc
(bad)
fmulp
or
(bad)
cmp
repnz
cmp
fidivr
out
(bad)
(bad)
(bad)
(bad)
fnstenv
stos
arpl
mov
or
(bad)
xor
inc
mov
inc
je
jl
fistp
add
dec
dec
dec
adc
clc
xchg
das
jp
mov
ins
dec
xchg
repnz
adc
jmp
ret
fisttp
ss
push
ds
retf
jmp
sub
mov
into
jne
imul
push
sar
mov
ret
fwait
sub
(bad)
jg
test
out
or
call
or
mov
mov
push
leave
inc
add
dec
jmp
xchg
xor
lods
fiadd
test
in
push
push
repz
inc
adc
cs
push
(bad)
mov
xchg
jmp
ja
lods
data16
clc
shl
pop
hlt
mov
mov
pop
(bad)
(bad)
(bad)
jmp
fsub
and
xchg
pop
sahf
ins
xor
mov
jg
mov
retf
in
fdiv
(bad)
aas
mov
fisub
int3
les
jno
pusha
lods
xor
inc
fsub
loopne
aas
cwde
(bad)
(bad)
(bad)
(bad)
mov
repz
lock
xchg
or
mov
sar
or
fcmovne
nop
cwde
jmp
clc
(bad)
(bad)
(bad)
jnp
mov
popa
dec
inc
inc
movs
and
or
jno
pop
fcmove
call
ins
repnz
sub
jge
clc
scas
or
mov
sub
or
js
(bad)
out
cli
dec
(bad)
sbb
pop
adc
cmc
les
in
sbb
xor
inc
jecxz
(bad)
(bad)
(bad)
dec
pop
push
loopne
cmp
push
(bad)
popf
pop
imul
fs
lock
fdivr
sahf
and
xchg
dec
or
ret
loope
mov
adc
in
push
adc
push
push
fisttp
loope
addr16
push
retf
jns
ret
mov
out
lea
jecxz
(bad)
(bad)
(bad)
push
push
out
jp
xchg
xor
push
xchg
loope
bound
and
in
(bad)
(bad)
(bad)
faddp
cmp
out
fldenv
gs
je
and
pushw
cmp
ins
call
call
pop
popf
std
and
ins
inc
stos
dec
or
movs
out
mov
push
mov
pop
push
fisubr
pushf
mov
pop
jmp
repnz
mov
(bad)
test
sbb
imul
mov
mov
sub
(bad)
dec
movs
(bad)
clc
cmp
scas
sub
mov
sub
cdq
and
dec
mov
dec
(bad)
(bad)
(bad)
call
dec
dec
test
xor
inc
xor
jnp
repnz
pushf
out
inc
std
(bad)
(bad)
push
jmp
mov
add
pop
mov
loop
and
xchg
dec
ins
imul
call
loope
lods
mov
hlt
test
pop
pushf
ds
jmp
fbld
push
push
lods
sbb
push
inc
xchg
add
es
test
fiadd
mov
leave
ds
fs
sahf
fadd
adc
mov
jns
inc
xor
out
and
sub
movq
xchg
outs
int
pusha
mov
mov
xchg
(bad)
(bad)
jg
movs
cmps
lds
pusha
dec
add
xchg
add
fwait
jp
div
aaa
cld
dec
nop
mov
sbb
jb
jne
out
sti
add
xchg
mul
out
(bad)
(bad)
call
cmp
jmp
test
mov
pop
(bad)
mov
cld
cwde
mov
iret
jmp
push
test
aaa
std
call
scas
hlt
sbb
push
add
mov
cmps
shl
cli
(bad)
(bad)
dec
sbb
in
leave
sbb
mov
mov
xchg
xchg
jnp
sar
jb
add
and
xor
ja
imul
jg
mov
test
stos
fbstp
out
clc
(bad)
mov
ffree
ret
xchg
mov
xor
(bad)
(bad)
(bad)
out
jb
jnp
shl
stc
adc
inc
fisttp
cwde
jl
lods
scas
sbb
and
(bad)
(bad)
(bad)
inc
call
aad
jmp
pop
repz
mov
mov
fwait
adc
dec
xchg
mov
call
cmps
or
dec
dec
cmc
shl
ins
mov
rsm
aas
aaa
cld
(bad)
(bad)
mov
inc
mov
mov
mov
push
dec
retf
in
cmp
test
(bad)
(bad)
(bad)
call
sub
shl
into
les
or
push
xchg
cdq
pop
in
and
adc
push
and
test
(bad)
(bad)
inc
call
jo
xchg
sub
out
dec
cmc
mov
and
mov
sub
(bad)
jmp
and
mov
mov
outs
movs
ret
push
mov
xor
jg
mov
sar
(bad)
(bad)
inc
mov
or
fcomp
cmc
xor
sbb
sbb
dec
lods
sub
push
repnz
in
test
fimul
fsub
mov
fist
mov
xchg
movs
bound
fstp
xchg
sub
xlat
gs
mov
sub
sahf
out
loopne
aam
minps
jno
dec
cmp
test
cld
fidivr
(bad)
adc
(bad)
(bad)
jmp
(bad)
add
cmp
or
xor
mov
dec
call
xchg
test
loop
inc
ss
adc
bound
jbe
sti
iret
add
fdivr
mov
push
push
jne
(bad)
(bad)
(bad)
call
pop
inc
pop
adc
ret
mov
ss
add
pushf
pop
js
mov
(bad)
(bad)
(bad)
call
test
dec
cmp
ins
jns
popa
sbb
xchg
xor
and
outs
push
aas
movs
xchg
xor
(bad)
(bad)
jmp
or
adc
repnz
dec
icebp
xchg
xor
pop
dec
mov
push
call
cmc
jge
jbe
aaa
cld
(bad)
(bad)
cmp
jmp
daa
sti
lods
(bad)
pop
fsub
xor
inc
or
pop
(bad)
(bad)
(bad)
jmp
mov
gs
push
sahf
dec
add
xor
es
push
push
xlat
mov
out
cli
call
inc
mov
mov
lock
xor
fwait
mov
xchg
xchg
cmp
push
pop
add
movs
mov
imul
push
and
mov
jle
xchg
dec
xor
ret
(bad)
std
xor
adc
cmc
dec
adc
lods
div
aam
mov
(bad)
dec
(bad)
popf
retf
sbb
test
fldenv
(bad)
inc
fisubr
and
jg
push
aaa
cmp
dec
inc
cld
cmp
popf
(bad)
cs
push
mov
push
loop
xchg
(bad)
(bad)
(bad)
(bad)
cmp
pop
ds
gs
jg
idiv
aas
je
pushf
(bad)
fs
mov
jle
mov
(bad)
jmp
pop
mov
sub
jmp
test
pop
mov
outs
cli
stos
push
or
pop
mov
cdq
and
adc
xchg
mov
push
(bad)
dec
adc
mov
(bad)
cs
rcr
test
ss
mov
or
(bad)
(bad)
(bad)
push
inc
icebp
push
cmps
mov
clc
jbe
pop
add
cmp
jge
lock
sar
adc
push
(bad)
(bad)
(bad)
dec
inc
repnz
sbb
push
xor
imul
sub
mul
xchg
gs
loop
(bad)
(bad)
(bad)
push
gs
call
pop
push
out
stc
ins
retf
push
jge
or
xor
aam
(bad)
(bad)
(bad)
call
jns
xchg
mov
mov
popf
and
cld
sbb
loope
test
cmps
gs
(bad)
(bad)
dec
test
xor
sub
adc
xchg
call
xchg
adc
(bad)
(bad)
(bad)
call
sbb
in
inc
add
call
dec
jp
push
mov
and
inc
push
retf
xchg
retf
pop
sbb
ja
inc
out
push
arpl
and
scas
add
(bad)
(bad)
inc
xor
sub
scas
mov
cs
add
xor
cmp
fnsave
je
dec
and
cmp
cli
repnz
mov
test
jb
and
ret
mov
call
fwait
out
test
std
mov
mov
inc
xor
jns
push
scas
xchg
lods
(bad)
inc
popa
or
repz
dec
leave
pop
shl
aam
(bad)
(bad)
(bad)
(bad)
jmp
pop
lahf
lds
xor
cmp
mov
xlat
pop
sub
mov
imul
movs
(bad)
(bad)
(bad)
push
test
push
loope
ins
push
mov
or
mov
repnz
adc
push
mov
sub
inc
aam
dec
dec
push
push
arpl
(bad)
test
push
pop
xchg
call
or
add
add
xchg
inc
mov
out
test
retf
ins
(bad)
call
(bad)
mov
xor
and
sbb
mov
call
rcr
push
ror
sub
mov
xchg
sub
(bad)
(bad)
out
mov
pop
lock
mov
lea
(bad)
inc
mov
xchg
not
jl
or
out
ins
fsubr
sti
pop
xor
sub
jns
(bad)
(bad)
(bad)
jmp
jl
outs
jp
or
(bad)
sub
fisub
mov
mov
bound
ss
push
(bad)
out
(bad)
(bad)
call
outs
rcl
or
pusha
xchg
pop
mov
xor
mov
aaa
mov
and
jge
fld
ret
pop
or
or
push
mov
popf
in
dec
sbb
adc
cmp
adc
popf
cmps
dec
jecxz
cmc
mov
inc
pushf
(bad)
(bad)
(bad)
(bad)
cmp
icebp
jmp
sbb
repz
dec
popa
pop
xlat
pop
fimul
pop
inc
call
inc
fbld
add
cmp
outs
pop
add
push
scas
jb
mov
dec
(bad)
xor
push
scas
xchg
or
adc
inc
je
in
nop
xor
(bad)
(bad)
inc
sbb
jbe
cs
scas
lea
xchg
lahf
mov
lea
in
in
push
cmps
sub
(bad)
jg
pusha
cmp
call
or
mov
leave
adc
(bad)
(bad)
jg
fisubr
pushf
movs
jae
pop
fistp
ss
inc
inc
lea
push
js
jo
(bad)
(bad)
jmp
cmp
sar
std
int3
cwde
call
imul
clc
sbb
jg
(bad)
(bad)
(bad)
call
adc
or
repnz
movs
mov
push
xlat
das
imul
pop
icebp
call
outs
pop
daa
mov
jle
out
jb
test
or
pop
pop
(bad)
(bad)
(bad)
call
jmp
jg
cmp
cld
sub
into
inc
jne
cdq
lock
stos
xchg
loop
ins
es
push
mov
(bad)
(bad)
(bad)
jmp
sub
add
xor
push
cmp
fld
jmp
(bad)
bound
(bad)
jmp
jp
ret
bound
inc
sti
dec
push
cmp
push
lock
bound
or
(bad)
jmp
leave
js
mov
or
sub
les
lds
(bad)
(bad)
(bad)
inc
ins
cmps
std
jb
ror
sub
outs
mov
mov
add
(bad)
(bad)
(bad)
call
mov
or
pop
cmp
xchg
out
push
into
inc
ss
push
fsubr
adc
(bad)
(bad)
call
mov
sbb
fld
ret
mov
jmp
add
sbb
stos
jge
sbb
jg
popf
mov
sub
das
ss
push
mov
daa
in
test
je
adc
into
mov
les
inc
push
retf
fucom
dec
mov
iret
lods
stos
(bad)
(bad)
(bad)
jmp
jno
push
jp
mov
xor
outs
mov
sbb
jg
mov
js
(bad)
fs
(bad)
dec
mov
add
fsubrp
pop
pop
leave
adc
jecxz
inc
cmp
out
retf
(bad)
(bad)
jg
into
xor
pop
mov
sbb
pop
repz
mov
jecxz
inc
outs
cmp
fdiv
scas
clc
(bad)
dec
inc
aas
aaa
(bad)
loop
movs
adc
jbe
fidiv
scas
mov
hlt
xchg
in
(bad)
push
dec
dec
out
push
out
sbb
push
sub
das
mov
jge
(bad)
aaa
or
sub
and
push
xchg
(bad)
fist
adc
cli
aas
das
lods
aaa
hlt
(bad)
(bad)
(bad)
in
stc
popa
and
test
inc
push
jle
ds
fs
cmp
(bad)
(bad)
(bad)
call
mov
in
adc
jle
push
cli
and
jb
jp
scas
and
push
ins
inc
cmp
or
popa
loopne
sub
or
and
mov
pushf
cmps
stos
mov
jge
mov
inc
outs
ss
(bad)
push
stc
sti
std
fstp
(bad)
(bad)
push
outs
sti
pop
mov
lods
(bad)
jge
cmp
das
pop
or
call
add
and
dec
ja
sub
out
xchg
(bad)
(bad)
(bad)
jmp
add
mov
jae
adc
push
loop
mov
jo
mov
inc
push
(bad)
(bad)
(bad)
push
cdq
mov
and
jo
in
mov
ret
xchg
dec
inc
arpl
les
lods
(bad)
(bad)
(bad)
call
cmp
(bad)
fadd
cmps
mov
jg
in
push
jb
in
jbe
xchg
shl
inc
cld
dec
iret
ret
and
jle
retf
sbb
ss
add
mov
sti
pop
dec
push
cld
add
jo
call
and
sbb
pop
stos
jle
fidivr
mov
push
test
jp
sub
mov
adc
sbb
cmp
mov
mov
enter
cld
jmp
adc
mov
mov
push
dec
xor
out
ins
and
dec
adc
dec
lock
scas
push
or
ds
(bad)
and
stos
pop
push
push
mov
popf
jns
outs
add
jmp
repz
or
xchg
cwde
popa
in
add
jmp
xor
outs
mov
pop
jmp
push
and
aaa
cmp
pop
adc
or
out
test
sar
xchg
pop
pop
sahf
mov
lahf
clc
pop
(bad)
pop
lock
(bad)
(bad)
(bad)
dec
mov
call
repnz
leave
inc
pop
jbe
sbb
xor
inc
fwait
and
mov
(bad)
jmp
rcl
mov
pop
aas
je
add
mov
xchg
add
or
jmp
fst
retf
sar
(bad)
jmp
xchg
lods
xchg
sbb
inc
popf
cmp
sar
or
push
ret
shl
add
xor
push
aaa
or
push
nop
rcr
(bad)
(bad)
(bad)
(bad)
fild
in
pusha
mov
inc
mov
and
cmp
jo
nop
sar
movs
sar
adc
add
(bad)
(bad)
(bad)
jmp
mov
add
iret
aas
movs
cdq
sar
fisubr
movs
sbb
adc
xor
adc
xor
(bad)
jg
repnz
push
in
popf
push
add
adc
mov
pminub
lock
jmp
push
lods
pop
icebp
fmul
mov
xchg
outs
add
add
inc
(bad)
(bad)
(bad)
(bad)
cmp
shl
neg
xor
jmp
xchg
or
mov
(bad)
aad
mov
fcomip
(bad)
inc
add
push
sbb
lods
sbb
mov
cdq
sub
cwde
adc
das
sar
test
ficomp
(bad)
xchg
and
loope
(bad)
(bad)
(bad)
dec
mov
xor
adc
sbb
inc
aad
or
pop
imul
jecxz
or
pop
pop
cmc
mov
js
aaa
data16
iret
pushf
add
mov
sbb
jmp
dec
or
sub
shl
loope
jp
frstor
cmp
div
fucom
(bad)
(bad)
(bad)
(bad)
mov
add
or
pop
mov
mov
les
mov
mov
int
or
(bad)
(bad)
jmp
jge
jnp
jmp
popa
loope
push
inc
scas
push
jo
into
jno
sbb
mov
(bad)
(bad)
(bad)
call
icebp
cld
fimul
mov
pop
enter
scas
push
arpl
stos
cwde
inc
mov
std
(bad)
(bad)
jp
clc
xchg
jmp
inc
push
xchg
leave
std
xlat
jg
outs
sub
jmp
mov
mov
jmp
pop
mov
jnp
jnp
clc
cmp
daa
and
and
push
dec
pop
(bad)
jg
jmp
pop
ss
psrlq
jb
shr
(bad)
inc
ss
adc
or
(bad)
call
js
mov
and
mov
cs
mov
dec
cmps
xor
jmp
xchg
retf
add
mov
or
enter
(bad)
(bad)
(bad)
call
fwait
lock
mov
call
sbb
jmp
ror
rcr
or
(bad)
mov
cmp
rcl
(bad)
sbb
inc
pop
cmps
add
bound
jmp
or
xor
repz
sti
fs
mov
push
pop
mov
lahf
xchg
jp
in
inc
scas
lods
fcom
enter
out
add
std
(bad)
(bad)
jmp
ret
pop
stos
jmp
pushf
stos
inc
(bad)
jmp
inc
cli
fucom
sub
mov
and
(bad)
arpl
loope
sbb
in
jno
and
cmp
jns
xlat
arpl
dec
xchg
sbb
nop
(bad)
hlt
xlat
cmp
jb
sbb
(bad)
out
cli
inc
push
cmp
push
sti
inc
jns
jl
dec
iret
mov
dec
std
out
rol
xchg
sbb
scas
inc
js
adc
pop
pop
enter
rcl
cmp
icebp
(bad)
(bad)
(bad)
jmp
bound
mov
pop
jno
sti
call
ret
or
(bad)
outs
push
(bad)
(bad)
inc
sbb
test
mov
dec
(bad)
shl
cmp
jmp
inc
out
fisubr
sbb
(bad)
jmp
push
aas
hlt
xchg
mov
mov
shl
mov
mov
fldcw
out
jo
add
jae
or
lea
pop
inc
dec
and
(bad)
jmp
jno
inc
fwait
(bad)
xor
daa
pop
hlt
fild
mov
ja
dec
je
jle
retf
or
cmp
(bad)
(bad)
jg
mov
(bad)
rol
push
add
test
mov
mov
mov
(bad)
(bad)
(bad)
(bad)
fcom
retf
xor
into
es
clc
outs
hlt
imul
lds
mov
jp
ins
mov
inc
xor
(bad)
call
call
add
xchg
aam
movs
push
pop
mov
daa
push
xor
scas
(bad)
cld
sub
sbb
repz
enter
(bad)
or
(bad)
out
mov
popf
or
fnstsw
bound
and
popa
dec
iret
scas
sbb
and
(bad)
(bad)
(bad)
dec
dec
shl
and
sub
repnz
js
mov
loope
inc
repz
xchg
sbb
pop
call
(bad)
(bad)
call
out
shr
fwait
test
adc
mov
(bad)
js
xor
test
inc
(bad)
(bad)
(bad)
dec
dec
mov
xor
dec
jg
xor
daa
in
and
xor
lods
mov
(bad)
jg
test
xor
mov
les
pop
sbb
ja
ficomp
inc
in
(bad)
(bad)
inc
dec
(bad)
sti
add
push
neg
xchg
or
xchg
xor
cli
(bad)
jg
stos
push
xchg
movs
shr
sub
push
outs
add
fstp
push
lods
cmc
icebp
(bad)
jmp
pusha
xchg
retf
sbb
lock
pop
and
jecxz
add
into
mov
(bad)
(bad)
(bad)
fbstp
and
push
adc
into
inc
ret
push
nop
loope
mov
pop
cmp
mov
sub
(bad)
(bad)
jmp
aaa
push
xor
loope
adc
into
dec
fcomp
arpl
push
add
repz
clc
stos
test
pusha
imul
sbb
sub
(bad)
call
xchg
cmp
pop
sbb
adc
pop
mov
mov
pop
dec
mov
pop
push
mov
sar
das
rcr
mov
lds
mov
fsub
loopne
inc
jns
and
pop
(bad)
(bad)
(bad)
(bad)
mov
adc
lds
repz
dec
add
nop
or
retf
call
stos
neg
(bad)
(bad)
mov
nop
das
clc
loope
ins
fucomp
push
pop
push
or
cmp
sbb
shl
or
(bad)
(bad)
(bad)
jmp
lock
adc
dec
sub
or
pop
mov
inc
retf
addr16
(bad)
(bad)
jmp
cli
dec
push
fwait
ret
movs
int3
movs
add
fsubr
xchg
jle
sbb
sti
test
call
jae
inc
loope
jb
mov
jb
pushf
daa
push
stos
int3
movs
call
and
(bad)
(bad)
jp
loopne
add
pop
fistp
push
loope
jle
dec
sbb
xlat
retf
(bad)
(bad)
call
mov
popf
push
ins
sar
call
aad
pop
jns
mov
ficomp
ror
inc
popa
mov
sbb
(bad)
(bad)
(bad)
inc
in
and
dec
mov
adc
outs
popf
call
(bad)
mov
inc
pop
int3
xor
(bad)
dec
xor
gs
imul
sbb
dec
(bad)
aaa
mov
clc
or
jmp
ret
retf
cmp
lock
mov
add
std
(bad)
(bad)
jmp
mov
jl
repnz
mov
inc
sub
push
push
jmp
or
jg
(bad)
push
mov
js
mov
adc
out
xor
int3
lods
or
jg
inc
sub
test
inc
xchg
out
add
push
ret
imul
cmp
jnp
(bad)
(bad)
call
dec
frstor
out
mov
sub
push
(bad)
in
(bad)
call
scas
(bad)
(bad)
(bad)
(bad)
sti
pop
mov
pop
push
or
scas
mov
rol
mov
xlat
inc
mov
cmp
sbb
fcom
xchg
adc
(bad)
jmp
test
aam
ins
rcr
out
shr
loop
iretw
addr16
loopne
mov
(bad)
call
rol
push
lock
adc
and
les
pop
or
push
sbb
(bad)
(bad)
jmp
mov
div
ds
dec
or
enter
ds
sub
push
mov
dec
sar
or
ret
inc
daa
cs
jmp
loope
out
(bad)
(bad)
(bad)
call
cmp
sub
jnp
or
or
pop
adc
cmps
outs
jmp
inc
lods
shr
nop
loopne
cli
stos
mov
jbe
(bad)
fbld
stos
cmps
push
ret
cli
shl
xlat
ret
sbb
cmp
(bad)
jmp
outs
pop
in
jl
mov
inc
shl
repz
cs
cmp
mov
(bad)
(bad)
(bad)
call
ins
sub
cwde
push
sbb
mov
rcl
imul
aas
add
xchg
mov
push
lock
nop
inc
push
add
test
xlat
test
(bad)
(bad)
(bad)
(bad)
push
add
retf
ret
retf
mov
fisttp
sahf
xchg
xlat
gs
mov
enter
(bad)
(bad)
(bad)
(bad)
push
push
popf
xor
cmc
mov
cmp
dec
retf
pop
jnp
and
jg
jmp
loop
mov
sahf
repnz
push
sti
jp
xchg
imul
mov
sub
(bad)
(bad)
call
ss
dec
xor
stos
mov
jmp
loopne
mov
addr16
inc
push
sbb
or
(bad)
xor
scas
mov
mov
pusha
cld
gs
sbb
mov
loope
icebp
scas
test
loopne
call
xor
sti
inc
int
(bad)
(bad)
jmp
shl
jge
outs
xchg
(bad)
xor
in
mov
or
icebp
mov
(bad)
jmp
into
push
dec
test
jmp
inc
pushf
sub
mov
push
xor
lahf
push
mov
xor
loope
sbb
outs
push
push
in
mov
push
mov
(bad)
(bad)
(bad)
dec
dec
inc
inc
aam
sbb
dec
push
push
pusha
push
jecxz
bound
sub
jne
xchg
cwde
retf
movs
adc
(bad)
push
adc
sub
dec
cmps
mov
and
sub
fsub
test
js
mov
sbb
sub
dec
jnp
fisub
(bad)
jmp
aas
jnp
mov
ss
inc
and
cmps
mov
mov
fst
jmp
(bad)
lods
sbb
les
jp
ja
test
xchg
inc
retf
sets
js
or
sub
inc
jecxz
cwde
and
or
xchg
cmp
ja
nop
pop
lock
push
fs
ficom
out
jmp
(bad)
(bad)
push
sbb
test
sahf
sar
gs
mov
mov
(bad)
call
jmp
adc
xchg
bnd
adc
cmc
js
xor
(bad)
cli
test
inc
jbe
add
sbb
out
div
and
xchg
and
add
add
add
sti
pop
pop
cmps
xor
xor
(bad)
clc
test
xor
mov
sub
(bad)
mov
jp
out
clc
(bad)
call
fst
jp
lods
cmp
cmps
repnz
sti
xlat
mov
ss
(bad)
(bad)
(bad)
call
jbe
adc
(bad)
aas
push
ds
and
sbb
cld
dec
lds
dec
push
sbb
into
test
lods
ins
lea
aaa
ja
(bad)
(bad)
(bad)
jg
mov
out
sub
cs
enter
out
sub
xchg
jg
retf
(bad)
(bad)
(bad)
jmp
mov
sahf
sbb
mov
push
shr
push
mov
fcomp
jne
jle
(bad)
(bad)
(bad)
jmp
test
fsubr
xchg
std
stos
xor
mov
mov
cwde
or
add
les
push
inc
cmps
xchg
hlt
mov
and
cmp
or
xchg
adc
sbb
aaa
or
lock
and
dec
and
push
mov
addr16
inc
and
add
test
(bad)
retf
add
inc
sub
bound
cmp
adc
push
jle
es
jo
imul
or
sub
add
pusha
arpl
push
imul
and
cmp
dec
test
and
push
fcomp
ins
mov
lds
pop
dec
add
inc
fidivr
sbb
test
dec
mov
adc
test
mov
outs
outs
ins
push
div
xor
jo
push
and
gs
or
loope
push
scas
sbb
nop
fcmovnu
data16
shl
je
or
into
adc
imul
test
js
stos
pop
add
or
mov
xchg
inc
stc
outs
mov
inc
jns
push
imul
loopne
aam
loope
test
pop
push
es
jmp
test
push
popa
push
add
mov
sub
(bad)
sub
sub
pushf
add
fiadd
bound
ficom
push
outs
dec
xor
inc
xchg
xchg
out
fst
(bad)
xchg
punpckhwd
lock
ret
mov
xor
icebp
inc
adc
push
and
pushf
bound
jo
pop
ins
inc
xlat
push
pop
ds
lock
icebp
inc
ins
jne
mov
jne
data16
push
xor
mov
ret
mov
push
add
dec
call
in
enter
and
or
push
pop
ds
jne
arpl
fs
push
sbb
popa
push
mov
cs
mov
lods
push
push
out
pusha
js
stos
sub
popa
adc
and
(bad)
lock
adc
cmp
shl
or
fsub
inc
add
inc
or
dec
movzx
sub
dec
push
pop
mov
test
mov
dec
inc
dec
sbb
imul
into
in
xchg
jae
arpl
and
das
rcr
(bad)
mov
pop
xchg
out
mov
js
add
in
push
sub
cs
sub
pop
clc
outs
data16
into
imul
call
cwde
dec
fdivp
jge
dec
adc
push
jne
and
xor
adc
cmps
mov
aaa
sbb
sub
jecxz
fld
jae
enter
fcomi
clc
ror
adc
adc
out
or
pop
inc
sub
int
fimul
jge
xor
mov
jmp
jno
xchg
lods
xor
call
pusha
aaa
inc
or
xchg
pop
push
push
dec
jno
sub
xor
loopne
or
out
or
es
jp
bound
inc
mov
inc
jae
adc
push
sbb
mov
add
fdiv
ret
mov
cmp
fcmovnb
bswap
outs
jns
int
adc
push
sti
sbb
jae
gs
and
pop
pop
imul
pop
repz
int
ins
outs
mov
cmc
xor
pop
mov
sbb
pop
rol
or
push
sub
inc
xchg
div
and
ins
adc
add
push
es
pop
sub
outs
and
fld
push
adc
arpl
and
outs
inc
js
pop
stos
(bad)
loope
xor
es
xor
fld
inc
js
js
sbb
outs
jne
or
jmp
adc
mov
outs
pop
pop
mov
or
clc
sahf
and
aaa
inc
in
mov
out
pop
stos
jno
mov
add
arpl
xor
cmp
and
add
daa
jecxz
mov
fdiv
dec
xchg
lea
add
mov
sub
pushf
rcr
push
cmp
sbb
repz
sub
xchg
aad
jae
out
outs
jecxz
cmps
sbb
dec
sbb
or
jbe
test
dec
sbb
dec
and
jmp
xchg
fwait
mov
leave
aaa
or
push
or
jp
push
and
mov
js
test
stos
mov
dec
xor
shl
sub
arpl
cli
mov
pop
fs
cmps
adc
cmp
jb
add
vpunpckhqdq
dec
and
or
xor
cmp
aaa
dec
adc
cmps
jae
sbb
int
and
test
mov
jmp
sub
and
and
aaa
or
pop
ja
sbb
outs
fisttp
loopne
cmp
nop
popa
ffreep
jae
and
fs
inc
mov
retf
(bad)
fstp
shl
out
push
outs
(bad)
mov
and
inc
jb
and
test
das
or
inc
push
into
lods
pop
popf
pop
jo
inc
inc
lds
arpl
loope
std
inc
imul
loop
shl
add
cmp
js
ins
out
lock
out
outs
inc
ins
jle
punpckldq
xchg
cmps
inc
lea
stos
mov
jp
je
jae
jno
and
jl
lds
mov
leave
lods
ret
mov
jns
cmp
rcl
loopne
dec
inc
cmp
sbb
xchg
rcl
sub
push
mov
dec
aam
adc
adc
jge
loop
pop
out
mov
push
push
pop
xor
add
adc
in
mov
outs
inc
push
push
adc
and
(bad)
scas
dec
in
push
pop
jnp
or
dec
outs
dec
push
dec
shl
xchg
sub
lahf
xchg
aam
jnp
ret
(bad)
xor
fild
add
mov
mov
imul
xor
push
adc
shl
push
add
pop
jo
sbb
mov
fild
scas
and
pop
(bad)
outs
inc
fs
mov
jo
sbb
adc
add
push
push
jb
inc
jae
cmp
push
pop
jo
les
inc
jb
imul
and
xchg
dec
ins
daa
(bad)
mov
imul
cwde
push
sahf
and
rcl
sbb
xlat
psrlw
and
inc
enter
outs
mov
pop
cmp
lods
pop
fsubr
jmp
aaa
cmp
pop
lock
jne
cmps
push
movs
in
xchg
test
adc
pop
lods
dec
mov
ins
addr16
jo
out
rol
nop
scas
arpl
in
pop
adc
sbb
mov
imul
mov
icebp
or
sbb
push
cld
xchg
xchg
mov
fcmovnb
or
push
outs
jmp
inc
jno
jmp
or
inc
(bad)
jb
xchg
sbb
pop
dec
and
jns
pop
add
inc
ins
mov
xchg
ret
cld
popa
imul
movs
pop
pop
xchg
mov
xor
xchg
and
jmp
fs
inc
leave
add
xchg
adc
sub
add
sub
mov
sbb
popa
shl
mov
call
sar
lea
dec
push
mov
push
mov
std
imul
mov
and
mov
or
cmp
mov
sub
rcl
add
cmp
loop
lds
aas
adc
shr
sub
sub
xchg
jp
push
icebp
pop
popf
push
and
mov
adc
jo
outs
fist
mov
lods
dec
ins
mov
mov
mov
push
imul
or
inc
lds
sub
ret
outs
add
(bad)
xchg
popa
mov
jmp
push
fwait
push
stos
mov
(bad)
scas
outs
adc
data16
shr
(bad)
fs
inc
cmp
cwde
inc
outs
rcr
dec
dec
test
pop
rcl
addr16
adc
icebp
push
sub
add
push
jg
call
inc
xor
sbb
mov
mov
retf
push
push
inc
out
adc
cmp
repz
sub
and
pop
sti
ret
fdivr
sbb
sub
les
inc
mov
push
jne
fnsavew
or
cmp
ffreep
jo
cmp
add
sub
mov
ds
es
imul
dec
sbb
and
cmp
mov
push
push
add
sbb
fs
test
push
add
mov
push
add
rol
in
mov
add
or
lods
out
in
mov
cvtdq2ps
inc
pop
jne
fld
add
adc
ror
inc
xor
arpl
inc
mov
bound
lods
pop
dec
add
pop
dec
mov
and
or
sub
jb
bound
(bad)
call
mov
mov
cs
out
fcmovnbe
mov
fiadd
dec
rcr
lea
int
inc
mov
jle
or
lahf
clc
and
jg
les
add
mov
add
pusha
mov
lea
push
jmp
nop
mov
inc
mov
inc
add
jne
mov
sub
adc
jb
mov
add
jne
mov
sub
adc
adc
add
jae
jne
mov
sub
adc
jb
dec
add
jne
mov
sub
adc
adc
jmp
add
jne
mov
sub
adc
adc
jmp
xor
sub
jb
shl
mov
inc
xor
je
sar
mov
jmp
add
jne
mov
sub
adc
jb
inc
add
jne
mov
sub
adc
jb
add
jne
mov
sub
adc
adc
add
jae
jne
mov
sub
adc
jae
add
cmp
adc
lea
cmp
jbe
mov
inc
mov
inc
dec
jne
jmp
mov
add
mov
add
sub
ja
add
jmp
pop
mov
mov
mov
inc
sub
cmp
ja
cmp
jne
mov
mov
shr
rol
xchg
sub
sub
add
mov
add
mov
loop
lea
mov
or
je
mov
lea
add
push
add
call
xchg
mov
inc
or
je
mov
jns
movzx
inc
push
inc
mov
push
call
or
je
mov
add
jmp
call
mov
lea
mov
push
push
push
push
push
call
lea
and
and
pop
push
push
push
push
push
call
pop
popa
lea
push
cmp
jne
sub
jmp
add
add
add
mov
pop
inc
add
add
