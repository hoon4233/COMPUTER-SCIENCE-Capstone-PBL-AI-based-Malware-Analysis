ds
call
dec
(bad)
cwde
inc
test
enter
enter
push
dec
(bad)
in
mov
ret
dec
pop
cld
sbb
test
cmp
in
dec
(bad)
mov
sub
dec
psadbw
inc
test
cwde
push
jnp
popa
jl
mul
sti
test
enter
loopne
jae
call
sbb
jne
cdq
imul
dec
(bad)
in
retf
retf
jno
push
push
mov
mov
and
adc
adc
(bad)
mov
push
es
push
mov
outs
movs
pop
cs
inc
test
in
cmp
mov
sbb
or
dec
(bad)
imul
dec
test
pop
hlt
test
or
lock
ret
jl
xor
(bad)
adc
(bad)
popa
inc
jns
nop
(bad)
or
xor
pop
imul
dec
lods
dec
sub
psadbw
jl
aas
in
ret
dec
jns
jo
aas
in
push
pop
sub
pop
(bad)
in
lds
inc
sub
psadbw
jl
aas
in
mov
iret
aas
in
shl
sub
(bad)
mov
lock
push
and
add
daa
add
mov
mov
mov
mov
mov
(bad)
sub
jno
ret
or
or
cmp
xor
cmp
add
jns
xchg
popf
sbb
lock
icebp
adc
retf
jno
dec
enter
dec
jge
dec
(bad)
xchg
es
dec
paddd
inc
push
mov
sub
mov
in
dec
gs
or
in
retf
retf
jne
mov
push
dec
(bad)
in
mov
jnp
mov
or
xchg
into
aaa
(bad)
outs
mov
sbb
iret
aas
in
mov
mov
in
dec
push
and
mov
in
cmp
(bad)
pop
mov
(bad)
out
out
and
in
mov
(bad)
in
sbb
addr16
sub
unpckhps
dec
jge
sub
pop
in
dec
(bad)
outs
movs
pop
cs
sbb
inc
enter
enter
shr
and
pop
in
and
mov
sub
unpckhps
mov
add
jno
in
mov
push
sub
jb
in
mov
pop
sub
pmuludq
pop
iret
aas
in
mov
mov
mov
ss
and
dec
(bad)
das
dec
pop
hlt
or
pop
xor
dec
out
xchg
dec
ucomiss
mov
cld
add
inc
jge
and
pop
in
and
in
and
adc
test
cmp
in
dec
xchg
gs
mov
sub
jg
in
lds
sub
in
lds
sub
in
dec
mov
mov
dec
mov
or
lock
mov
xchg
lds
jge
mov
inc
adc
ds
sbb
ins
jge
retf
leave
ins
xlat
std
sti
into
adc
in
push
daa
adc
mov
mov
and
shr
add
sub
ins
lahf
add
mov
ror
(bad)
test
cmp
sbb
jge
ja
jb
and
pop
in
and
sbb
fwait
add
dec
xchg
fisttp
pop
sbb
jb
adc
xchg
call
jns
mov
outs
xor
mov
in
dec
setbe
shl
or
dec
lea
ds
das
sbb
pop
ret
push
inc
gs
test
cmp
sbb
in
dec
(bad)
in
mov
jno
cmp
(bad)
mov
mov
jnp
or
mov
imul
mov
ins
adc
(bad)
gs
or
mov
push
mov
inc
ds
sub
jge
pop
push
mov
sbb
pop
cs
(bad)
push
test
xor
aas
in
retf
push
in
retf
push
in
mov
dec
test
es
jmp
jns
xchg
test
dec
sub
inc
mov
out
inc
mov
shl
or
or
cmp
cdq
mov
mov
sbb
dec
ins
aad
sti
or
ret
dec
add
dec
jp
sbb
dec
test
mov
std
ror
or
mov
and
mov
test
mov
adc
in
mov
xchg
adc
push
es
lock
in
dec
out
fwait
dec
ucomiss
repz
dec
dec
xchg
adc
mov
in
nop
xchg
sub
enter
cmp
push
mov
adc
push
gs
lea
pop
idiv
jb
jmp
adc
xor
cld
xor
hlt
xor
xlat
hlt
das
ret
dec
ins
lds
jb
in
dec
lock
xchg
mov
push
mov
sbb
pop
sub
add
loop
test
adc
int
rcr
mov
je
in
ret
jb
push
fwait
inc
pop
cld
sbb
xchg
mov
(bad)
lds
int
sub
mov
adc
int
rcr
or
mov
adc
mov
mov
inc
enter
cbw
stc
leave
dec
add
mov
jne
in
ret
jb
push
fwait
inc
pop
cld
sbb
xchg
mov
(bad)
lds
int
sub
mov
xchg
mov
addr16
paddb
dec
push
and
lods
pop
cs
ret
push
imul
xor
test
dec
lock
mov
gs
pop
jb
dec
aaa
hlt
push
popa
std
mul
pop
lods
cwde
dec
ds
aad
jae
addr16
int
mov
push
push
mov
sbb
pop
sub
sbb
dec
mov
enter
retf
aas
in
mov
jno
into
cld
aas
in
push
out
adc
test
loopne
pop
adc
mov
mov
div
mov
mov
mov
jge
scas
xchg
adc
enter
(bad)
mov
mov
div
test
mov
mov
stos
aas
(bad)
mov
xchg
xor
ucomiss
dec
gs
mov
jge
leave
clc
mov
dec
btc
jnp
hlt
sbb
push
es
pop
hlt
or
pop
sub
pop
ret
es
gs
test
mov
sti
dec
jge
cmp
fdiv
dec
jge
ret
pop
cmp
jns
addr16
lock
test
cmp
hlt
mov
jne
mov
jge
pop
push
es
pop
hlt
or
jecxz
mov
inc
mov
lods
dec
jbe
sbb
pop
jge
retf
sub
mov
test
mov
call
mov
lds
mov
dec
out
lahf
dec
pmuludq
leave
clc
jg
dec
cmovl
aam
jo
xchg
add
or
or
pop
call
mov
(bad)
mov
mov
sub
dec
xchg
in
jp
gs
addr16
or
imul
mov
idiv
mov
push
mov
jge
mov
cmps
jecxz
iret
hlt
test
dec
ds
adc
div
sub
out
adc
push
and
lods
mov
in
dec
setne
cmp
jge
push
pop
mov
mov
nop
movs
mov
jge
mov
jge
dec
mov
mov
in
jmp
ss
inc
mov
test
or
hlt
xor
xlat
hlt
das
retf
xor
pop
or
jge
push
scas
loope
or
sub
in
sub
pop
or
jge
nop
clc
sahf
gs
adc
xchg
in
dec
adc
(bad)
imul
mov
jl
push
cld
aas
in
lds
sub
adc
retf
jno
mov
jge
cmp
mov
pop
in
dec
pmuludq
xlat
hlt
das
lds
mov
or
sub
lock
xor
xor
mov
adc
clc
(bad)
jge
sub
(bad)
mov
in
dec
jnp
gs
movs
gs
js
mov
addr16
retf
aas
in
ds
leave
enter
dec
scas
std
sub
pmuludq
nop
xchg
in
dec
gs
pop
js
in
adc
mov
ror
das
cs
psadbw
jmp
mov
sbb
or
retf
jecxz
gs
mov
in
dec
jle
addr16
or
addr16
sub
ror
mov
push
mov
pop
or
adc
addr16
lock
ror
nop
clc
sahf
gs
adc
xchg
cdq
jg
clc
xor
xchg
into
scas
dec
pop
not
mov
jmp
test
xor
jge
mov
sub
mov
in
dec
test
loopne
mov
ror
in
mov
paddd
aam
aas
in
dec
jnp
dec
aam
aas
in
sbb
test
stos
xchg
cmp
icebp
and
cmp
jno
test
retf
adc
dec
jge
pop
push
es
retf
jecxz
mov
or
test
mov
xchg
adc
daa
imul
or
dec
jne
je
jns
int
jge
dec
push
cmps
cdq
pop
enter
(bad)
in
sar
repz
xchg
sbb
enter
call
mov
test
dec
xor
inc
xor
dec
mov
adc
cmp
lds
in
sbb
pop
or
xchg
hsubps
pop
hlt
adc
div
sub
(bad)
add
clc
adc
iret
or
retf
push
in
shl
or
dec
mov
mov
adc
sub
mov
mov
gs
test
mov
adc
cmps
pop
push
mov
in
jnp
aad
jp
pop
pop
test
in
or
jno
jns
js
jns
sub
pusha
pop
in
dec
dec
imul
dec
add
int
lock
jge
xor
lock
and
aam
dec
out
pushf
dec
sete
jge
mov
call
(bad)
in
and
pop
in
and
adc
test
cmp
mov
xchg
sbb
or
sub
in
ret
dec
jne
mov
in
dec
jp
mov
popa
add
jp
adc
(bad)
push
xchg
es
mov
test
add
enter
dec
lea
dec
jge
cmp
(bad)
adc
(bad)
mov
push
mov
sbb
movq
mov
pop
sub
push
mov
gs
movs
gs
clc
adc
add
or
imul
sub
adc
push
mov
in
dec
mov
mov
jp
adc
in
scas
dec
(bad)
in
mov
out
sahf
dec
pmuludq
lock
cmp
mov
cmp
mov
pop
or
jge
xchg
jge
nop
clc
sahf
gs
adc
xchg
adc
dec
jge
ret
aaa
cmp
iret
or
cld
inc
jmp
adc
addr16
pop
or
imul
lock
test
pop
xor
dec
pmuludq
int
jne
dec
mov
popa
int
adc
pop
fdiv
dec
jge
ret
aaa
cmp
iret
jb
cmp
pop
int
dec
lock
add
adc
retf
jne
(bad)
mov
adc
xlat
dec
xor
int3
imul
lock
pop
int
dec
mov
popa
int
adc
pop
fdiv
dec
jge
ret
aaa
cmp
iret
jb
ins
pop
jge
cs
push
mov
sub
mov
push
mov
adc
add
out
(bad)
xchg
sti
pop
or
lock
lock
sub
mov
mov
adc
pop
jge
inc
mov
adc
lock
inc
mov
out
dec
(bad)
pop
int
adc
dec
sub
adc
dec
jge
mov
retf
jno
dec
mov
lods
dec
paddd
lock
mov
mov
ror
das
retf
xor
jecxz
sbb
in
dec
gs
dec
cld
aas
in
and
lods
dec
out
sbb
xor
retf
and
adc
popa
cmc
repnz
pop
xchg
cmc
mov
add
mov
jge
inc
enter
icebp
sub
(bad)
gs
push
movs
mov
test
int
dec
out
sbb
xor
retf
and
adc
popa
cmc
repnz
pop
xchg
cmp
mov
inc
adc
enter
icebp
sub
(bad)
xchg
movs
push
or
adc
add
cli
adc
retf
jno
mov
jge
cmp
pop
in
and
(bad)
scas
dec
add
mov
cmp
mov
in
dec
jnp
sub
mov
jge
dec
gs
xchg
aas
in
and
lods
dec
out
sbb
xor
retf
and
adc
popa
cmc
repnz
pop
xchg
mov
mov
inc
adc
enter
icebp
sub
(bad)
ins
mov
gs
idiv
aas
in
and
lods
dec
out
sbb
xor
out
mov
adc
(bad)
in
and
sub
adc
inc
adc
enter
icebp
sub
(bad)
xchg
ficomp
or
adc
add
sti
adc
retf
jno
mov
jge
cmp
pop
in
and
(bad)
scas
dec
add
mov
cmp
mov
in
dec
jp
xchg
out
or
lock
mov
adc
out
sbb
xor
out
mov
adc
pextrw
(bad)
sbb
icebp
and
fadd
icebp
sub
push
adc
test
mov
mov
mov
mov
in
dec
jnp
xchg
or
mov
add
adc
retf
jno
mov
jge
cmp
mov
adc
jge
leave
int3
test
dec
paddd
lock
jp
sub
mov
imul
lock
pop
leave
js
mov
in
jmp
lods
adc
pop
test
jge
mov
jge
popa
or
rcl
xor
int3
hlt
xor
xlat
hlt
das
lds
sub
adc
pop
and
repz
inc
mov
imul
test
xor
icebp
cmp
cmp
leave
int3
pop
in
dec
pcmpeqb
mov
dec
pushf
lock
xchg
outs
in
fild
push
lock
add
push
dec
(bad)
push
(bad)
jp
in
mov
lock
int3
sbb
int
adc
sbb
int
adc
push
jge
dec
cmp
mov
cmp
sub
adc
pop
popa
gs
movs
mov
cmp
clc
je
icebp
cmp
jge
dec
xchg
adc
jb
or
mov
addr16
adc
pop
not
mov
lods
in
dec
pmuludq
stos
xchg
fs
and
add
dec
add
in
dec
(bad)
popa
int
adc
pop
imul
lock
test
pop
aaa
hlt
test
int
jle
dec
mov
pop
outs
cmp
mov
cmp
sub
aam
dec
and
mov
adc
clc
es
(bad)
ins
mov
cmp
mov
cmp
sub
enter
in
add
xchg
jge
mov
mov
sbb
icebp
sub
mov
adc
popa
int
adc
pop
xchg
es
outs
mov
dec
lock
out
out
dec
(bad)
in
mov
xchg
adc
jecxz
adc
icebp
cmp
clc
adc
xlat
adc
dec
mov
xor
int3
sbb
int
adc
or
adc
xchg
je
icebp
and
adc
pop
lock
fdiv
adc
jecxz
gs
mov
in
dec
jle
adc
xchg
in
mov
lock
test
pop
and
test
nop
xchg
jecxz
jns
in
dec
mov
inc
mov
sub
xlat
jl
ror
imul
addr16
or
imul
lock
test
pop
xor
dec
pmuludq
int
jg
dec
mov
popa
int
adc
pop
imul
lock
test
pop
arpl
test
int
jl
dec
mov
inc
mov
sub
sar
gs
lds
in
adc
mov
mov
lock
ret
mov
adc
lock
mov
adc
ja
adc
call
jge
in
or
mov
sub
hlt
or
or
dec
cld
fsub
cmps
adc
pop
not
mov
or
repz
xor
xlat
hlt
das
retf
jb
in
inc
mov
in
dec
paddd
lock
cmp
mov
cmp
clc
fs
cmp
jge
dec
xchg
adc
in
cli
dec
pcmpeqb
mov
dec
paddd
lock
add
in
(bad)
popa
int
adc
pop
pop
in
mov
mov
mov
imul
lock
test
pop
das
hlt
test
nop
xchg
jecxz
aam
in
dec
imul
adc
clc
and
jge
cmc
jg
adc
(bad)
in
lds
sub
adc
lock
sub
mov
adc
xlat
hlt
das
enter
mov
jge
int3
cmp
enter
icebp
sub
(bad)
gs
movs
mov
adc
mov
clc
adc
push
(bad)
scas
dec
cmp
mov
cmp
mov
adc
dec
std
ror
or
mov
sbb
adc
mov
mov
sub
adc
lock
out
or
sub
lds
cmp
mov
cmp
clc
adc
pop
adc
dec
mov
xor
int3
(bad)
push
(bad)
lock
jnp
addr16
adc
pop
neg
mov
jne
int
adc
test
dec
mov
adc
mov
(bad)
(bad)
mov
and
adc
pop
neg
mov
jne
nop
clc
sahf
gs
adc
xchg
adc
pop
jne
int
adc
test
or
jecxz
adc
lock
adc
invd
jmp
mov
ins
mov
pop
in
dec
test
add
icebp
cmp
sar
sub
add
imul
pop
cld
das
loopne
jge
retf
mov
adc
test
cmp
aas
cmp
icebp
cmp
clc
xor
aas
cmp
xchg
adc
pop
jne
hlt
stc
adc
push
es
and
adc
test
pop
cmp
in
dec
cvtps2pi
dec
paddd
push
pop
sub
or
adc
xchg
lods
xchg
or
(bad)
addr16
icebp
hlt
cdq
lods
addr16
jle
(bad)
outs
mov
xchg
in
mov
mov
out
mov
xchg
or
lock
in
sub
psadbw
mov
ds
ret
jb
gs
call
xchg
xor
and
in
dec
enter
lock
push
es
dec
lea
dec
sahf
mov
dec
movntps
pop
xchg
test
retf
aas
in
and
pop
in
and
jge
dec
out
mov
hlt
sub
out
mov
hlt
adc
div
sub
push
mov
add
addr16
test
clc
pushf
gs
or
xor
sub
or
jge
cmp
gs
iret
fdivp
out
jge
jo
cmp
jmp
(bad)
xchg
dec
or
dec
enter
dec
jge
dec
(bad)
gs
dec
aam
dec
add
jmp
inc
iret
jb
fisttp
jge
dec
add
fs
(bad)
adc
sub
paddw
push
mov
or
dec
jb
in
jns
std
shr
call
call
dec
or
or
xchg
mov
inc
pop
shr
jo
clc
test
(bad)
sbb
aam
dec
push
or
jmp
push
js
out
jge
dec
lock
out
jge
mov
out
hlt
test
pop
or
inc
inc
or
xchg
loopne
(bad)
adc
mov
hlt
out
jge
cmp
dec
sub
pop
jle
dec
mov
jmp
jp
mov
jge
call
lods
ins
dec
or
xchg
les
pop
shr
jns
xchg
int3
dec
(bad)
ins
mov
(bad)
jo
out
jge
mov
stc
js
out
jge
cmp
dec
sub
icebp
jg
dec
mov
inc
pop
shr
loope
jge
or
adc
stc
js
out
jge
cmp
dec
sub
fnstsw
dec
mov
inc
pop
shr
movs
mov
jge
rol
and
into
xchg
inc
mov
sbb
pop
shr
jns
xchg
dec
dec
(bad)
ins
inc
pop
shr
jns
hlt
sub
or
jg
dec
sete
dec
ja
scas
dec
lock
out
jge
mov
(bad)
jo
out
jge
mov
scas
xchg
inc
or
jl
jo
cmp
lock
dec
in
dec
clc
pushf
gs
add
or
cmp
in
jmp
mov
inc
or
xchg
cmp
jge
or
cmp
dec
or
or
xchg
sub
jge
movs
mov
inc
inc
or
xchg
pop
dec
(bad)
adc
mov
aam
dec
jge
mov
mov
dec
aaa
shr
dec
(bad)
fisttp
paddw
push
mov
mov
add
in
jmp
jmp
inc
iret
add
dec
lock
imul
(bad)
jge
dec
jae
rol
xor
mov
hlt
out
jge
mov
retf
aas
in
mov
dec
jge
dec
aaa
shr
dec
aaa
shr
add
lods
dec
dec
xchg
(bad)
jns
xchg
test
jge
test
jge
mov
xchg
dec
stc
js
out
jge
inc
mov
sbb
test
cmp
jl
ror
pop
dec
jg
scas
dec
sub
test
cmp
jp
or
cld
inc
sub
(bad)
jecxz
cmp
pop
pop
or
adc
(bad)
(bad)
jecxz
dec
mov
enter
cmp
dec
jge
dec
pop
(bad)
dec
jge
cmp
invd
mov
jb
jmp
cmp
ins
xor
(bad)
jo
out
jge
lock
pushf
gs
(bad)
cmp
lods
cdq
inc
or
jb
dec
jmp
lods
dec
mov
ins
xor
pop
pop
dec
jp
outs
dec
pop
(bad)
or
retf
sub
or
jge
push
xchg
dec
or
imul
ror
aam
dec
jge
dec
add
lods
dec
scas
jne
or
inc
jmp
cmp
hlt
and
out
hlt
test
ins
add
lods
dec
setbe
sar
addr16
add
lods
dec
test
dec
sbb
pop
or
sub
scas
cmp
lods
dec
ss
call
lock
mov
gs
scas
cmp
pop
dec
xchg
mov
(bad)
mov
xchg
push
inc
hlt
adc
div
sub
unpckhps
or
mov
in
ror
sti
or
mov
lods
and
hlt
adc
div
sub
and
pop
sub
jge
pop
mov
mov
dec
pop
xchg
dec
sub
jge
mov
inc
mov
dec
pop
xchg
jp
(bad)
dec
js
cmp
shl
adc
enter
dec
jge
mov
lods
and
mov
pop
hlt
or
jecxz
mov
das
imul
movs
gs
js
mov
test
lds
in
lds
mov
or
mov
in
dec
mov
outs
sub
cmps
hlt
test
or
jge
retf
push
in
rcl
xor
int3
dec
xor
aas
in
retf
push
in
lock
or
push
in
(bad)
dec
(bad)
push
cdq
pop
jge
mov
xchg
in
dec
(bad)
jmp
ror
dec
ja
scas
dec
enter
(bad)
in
leave
in
xlat
dec
bts
mov
push
dec
xchg
popa
xor
mov
in
dec
jle
mov
dec
cmp
sbb
push
push
imul
test
or
cmp
sbb
xchg
jns
dec
lock
mov
cmp
sbb
or
dec
int
and
xchg
push
sub
jge
dec
ja
scas
dec
gs
cmp
(bad)
call
lods
out
(bad)
xor
xlat
hlt
das
mov
cdq
add
outs
jge
mov
add
test
clc
cmp
sbb
push
addr16
xlat
mov
ror
mov
mov
int3
sub
mov
loopne
in
inc
addr16
xchg
or
push
gs
test
loopne
dec
lea
pop
hlt
mov
dec
ds
gs
gs
dec
gs
or
out
adc
dec
mov
lock
addr16
les
dec
clc
sbb
ror
or
xchg
mov
mov
mov
scas
dec
lock
and
cmp
mov
pushf
in
dec
mov
mov
or
jecxz
mov
inc
test
loopne
or
adc
jns
jne
jge
dec
jp
jecxz
dec
dec
in
jne
jge
dec
jp
jecxz
dec
dec
out
jne
jge
dec
jp
jecxz
dec
dec
out
jne
jge
dec
jp
jecxz
dec
dec
call
dec
add
out
(bad)
addr16
or
clc
jbe
imul
inc
mov
jns
cs
aas
in
inc
mov
jb
fisttp
jge
shl
jecxz
sbb
mov
clc
fs
(bad)
gs
xchg
out
inc
mov
or
dec
add
clc
pop
ss
outs
mov
or
dec
(bad)
cdq
push
add
test
lds
js
test
mov
dec
add
mov
lds
push
mov
dec
pmuludq
ret
pop
ins
popa
sbb
js
mov
xchg
call
mov
xchg
call
or
or
out
addr16
push
jge
dec
in
jecxz
dec
add
fnstenv
jecxz
dec
sub
cmp
xchg
mov
ins
je
jns
sbb
test
inc
hlt
adc
out
ins
je
jns
or
std
ror
or
shl
add
add
call
pop
xor
in
dec
wbinvd
out
idiv
add
pop
ins
jp
gs
or
cld
lds
jmp
mov
hlt
call
dec
pop
dec
jp
gs
std
ror
or
dec
pop
dec
jp
gs
xchg
out
enter
cmp
out
jecxz
or
mov
or
dec
(bad)
cdq
mov
pop
ins
popa
sbb
js
mov
xchg
call
retf
out
gs
cmp
dec
push
test
or
mov
dec
(bad)
in
enter
cmp
pop
dec
jp
gs
xchg
out
enter
cmp
out
ins
je
jl
jnp
test
or
dec
or
cmp
inc
adc
jge
dec
xor
hlt
mov
test
cld
lds
jmp
dec
xchg
dec
(bad)
in
jle
jge
retf
adc
int3
sub
mov
adc
mov
in
adc
or
shl
or
jle
jge
mov
(bad)
lahf
pop
dec
imul
dec
cmove
xlat
xchg
add
mov
aas
in
inc
mov
jg
je
pop
dec
or
dec
aaa
shl
xor
out
sbb
ja
scas
dec
add
call
dec
wbinvd
retf
jne
jge
dec
jnp
outs
sub
xchg
clc
dec
xchg
mov
or
dec
sbb
push
cmp
dec
test
or
aad
cmp
cmc
jl
dec
fcomip
test
dec
test
sbb
pop
jle
dec
scas
cmp
sahf
ret
mov
ss
fcomip
push
dec
aad
cmp
out
gs
out
test
push
idiv
dec
ja
scas
dec
mov
mov
retf
out
gs
xchg
dec
(bad)
in
sbb
pop
sbb
lock
stc
adc
aas
in
mov
mov
and
lock
pop
in
dec
out
mov
ucomiss
mov
mov
adc
xchg
dec
paddw
xchg
lock
mov
outs
dec
ja
scas
dec
or
push
stos
rol
jecxz
mov
ror
mov
dec
push
or
enter
mov
jge
pop
add
imul
dec
jge
cmp
mov
and
mov
jecxz
add
test
mov
dec
test
inc
xchg
lock
sub
pop
(bad)
xchg
adc
add
or
mov
jg
(bad)
dec
stc
sbb
es
dec
test
dec
xchg
lock
pop
dec
or
std
imul
loopne
adc
iret
arpl
lahf
daa
or
jge
int
adc
leave
clc
pop
cmps
lock
mov
sub
das
fsubr
or
inc
mov
sub
pop
aam
dec
xchg
cmp
ja
scas
dec
pop
seta
sub
mov
in
dec
setne
mov
and
mov
xchg
mov
addr16
mov
sub
pop
xchg
in
ror
adc
(bad)
mov
dec
xchg
or
leave
push
mov
adc
mov
xlat
aad
xchg
adc
mov
dec
adc
jge
dec
ja
scas
dec
mov
add
cmp
adc
jb
adc
lock
jecxz
lock
hlt
test
sub
in
ret
xchg
std
xor
lock
ss
jg
stos
or
dec
push
retf
jmp
test
mov
or
jle
jge
xchg
mov
sahf
inc
xchg
in
ror
mov
dec
paddb
dec
(bad)
jge
ds
outs
push
mov
and
int
xchg
adc
test
pusha
xchg
lock
lock
jno
xchg
add
lock
or
pop
nop
rol
in
dec
out
out
dec
(bad)
pop
(bad)
xchg
adc
sbb
jmp
sti
xchg
adc
lock
call
dec
xchg
dec
or
adc
add
sbb
jns
loopne
adc
into
xchg
out
mov
jg
add
add
xchg
adc
lock
(bad)
sahf
push
js
mov
ins
cmc
in
mov
mov
ins
mov
dec
out
mov
pmuludq
rol
clc
dec
xor
dec
xchg
jo
lock
jle
ror
imul
call
push
or
gs
mov
dec
xchg
lock
mov
gs
mov
inc
xchg
lock
mov
xor
cmp
xchg
lock
xchg
dec
adc
jge
int
mov
push
xchg
lock
lock
mov
xor
in
mov
das
and
jge
push
mov
xchg
loopne
test
push
xchg
lock
(bad)
in
mov
shl
mov
xchg
ja
or
pop
(bad)
xchg
adc
and
pushf
rol
fsubr
dec
jge
(bad)
call
dec
test
push
call
pop
(bad)
mov
dec
xchg
pop
xchg
lock
add
mov
jge
xor
xor
clc
sbb
cmovo
inc
pop
in
add
ror
jge
push
push
jge
ret
mov
clc
dec
push
jge
dec
mov
call
mov
mov
adc
ror
xchg
lock
mov
hlt
sbb
pop
cmp
out
ins
jo
or
sar
add
pop
cmp
out
ins
jo
or
sar
add
pop
cmp
xor
test
js
mov
jecxz
call
dec
xchg
stc
in
aad
adc
mov
xor
or
dec
(bad)
cdq
pop
test
dec
(bad)
in
retf
out
popa
or
jns
int
mov
gs
sti
xchg
adc
test
pop
dec
inc
push
lods
rol
inc
jmp
adc
add
jns
rol
addr16
sbb
ss
mov
ror
jge
dec
jp
ins
je
jg
dec
(bad)
cdq
push
pop
dec
(bad)
in
dec
jp
ins
je
jns
dec
(bad)
cdq
inc
pop
dec
(bad)
in
dec
jnp
stos
mov
lods
mov
xchg
in
pop
in
jnp
jecxz
mov
adc
shl
cmp
test
cmc
in
mov
scas
retf
stos
mov
mov
jge
(bad)
xchg
adc
(bad)
mov
out
dec
inc
and
lock
call
cmps
lock
xchg
adc
jge
adc
mov
adc
loopne
adc
retf
imul
or
jecxz
and
mov
int3
sub
mov
addr16
xor
xor
jge
mov
in
lds
popa
jge
mov
dec
mov
in
dec
jle
mov
mov
xchg
nop
or
dec
jge
inc
(bad)
in
mov
or
dec
jge
dec
(bad)
in
mov
xchg
adc
xor
cdq
inc
dec
std
test
mov
gs
dec
leave
cmp
dec
in
dec
add
mov
scas
jp
ins
or
(bad)
cmp
dec
pop
push
pop
jge
ins
or
btc
dec
(bad)
dec
add
mov
nop
add
jno
(bad)
ins
and
paddw
or
inc
sub
(bad)
xchg
and
retf
scas
dec
sub
adc
jp
ins
or
repz
cs
hlt
mov
dec
xchg
push
dec
jnp
outs
mov
or
retf
idiv
pop
dec
add
scas
dec
stc
ds
mov
outs
test
(bad)
adc
jp
ins
or
repz
cs
hlt
mov
dec
sub
ins
dec
(bad)
cdq
dec
(bad)
cmp
dec
mov
adc
jge
inc
mov
jge
cmp
aaa
or
enter
enter
enter
inc
lea
adc
setbe
ret
pop
sbb
fimul
jmp
std
test
mov
invd
ret
dec
and
clc
sbb
ror
or
xor
in
dec
invd
call
inc
mov
es
sbb
mov
repz
xchg
adc
int3
adc
mov
sbb
jge
mov
pop
dec
jp
gs
in
ins
je
and
dec
setbe
pop
mov
sahf
adc
jge
stos
xchg
adc
int3
and
shr
call
jne
jge
push
pop
ret
adc
gs
call
xchg
in
dec
or
push
lock
lds
sub
in
lds
sub
in
retf
retf
ins
gs
test
mov
test
push
and
pop
mov
mov
xor
and
pop
in
mov
jne
dec
out
mov
mov
or
jecxz
mov
jl
arpl
test
gs
enter
and
in
and
adc
(bad)
mov
xchg
inc
wbinvd
jmp
cld
add
sub
jns
xchg
(bad)
and
sub
int3
lds
(bad)
sbb
enter
iret
ins
mov
sbb
jge
or
div
sub
paddd
ret
dec
jno
or
dec
test
inc
cdq
mov
xchg
sbb
jge
mov
test
adc
call
mov
das
sbb
pop
sub
sub
retf
dec
(bad)
in
and
jns
dec
gs
dec
(bad)
sub
jp
add
pop
jge
ror
adc
div
sub
icebp
sbb
gs
dec
gs
mov
mov
addr16
mov
das
and
lock
cmp
pop
jge
and
lock
and
mov
sbb
jge
mov
mov
push
dec
(bad)
in
pop
push
es
sbb
mov
jge
test
mov
mov
in
mov
xchg
in
dec
(bad)
call
and
jge
mov
or
mov
xchg
call
and
sub
pop
jge
shl
adc
enter
dec
cmp
pop
jge
push
out
mov
popa
div
sub
cmp
mov
push
pop
neg
inc
imul
aas
(bad)
fst
int
rcr
mov
jp
dec
inc
in
mov
xchg
inc
jae
mov
or
aas
in
mov
addr16
push
or
xchg
mov
pop
dec
aaa
mov
adc
in
mov
mov
loopne
out
test
mov
xchg
out
xor
cmp
and
xlat
xor
addr16
push
or
xchg
repnz
pop
and
shr
mov
adc
enter
imul
in
dec
clc
sbb
ror
or
dec
jge
mov
add
add
call
mov
pop
jge
retf
retf
jne
jno
syscall
leave
bound
test
aas
in
mov
push
and
shr
add
sub
sub
mov
ror
mov
test
sub
out
outs
sub
std
lock
ret
icebp
or
in
dec
cld
fsubr
mov
in
dec
pop
cld
dec
jp
mov
test
in
mov
add
mov
jecxz
dec
and
dec
js
retf
iret
arpl
or
or
xchg
out
rcl
xor
int3
std
xor
dec
jno
dec
fs
xlat
jl
ror
pop
or
or
mov
jp
outs
and
add
mov
xchg
ins
xor
mov
cmps
dec
jp
mov
addr16
lods
test
add
mov
dec
dec
cdq
addr16
dec
xchg
jecxz
inc
lahf
sbb
dec
cdq
addr16
or
mov
dec
lods
jecxz
pop
lahf
jecxz
int
test
dec
jp
mov
in
pop
jne
call
lds
dec
cdq
pop
dec
xchg
mov
push
mov
sub
vaddps
jl
push
in
lods
dec
lahf
les
int
in
jl
lahf
or
fcomp
in
jl
lahf
cmp
jl
lahf
in
jl
lahf
cmp
jl
lahf
in
jl
lahf
inc
xor
lahf
in
jl
aad
jl
lahf
(bad)
dec
jge
repz
jl
iret
in
jl
lahf
or
fcomp
in
jl
lahf
(bad)
sub
lahf
in
jl
xlat
in
jl
lahf
or
fcomp
in
jl
lahf
sbb
mov
jl
lahf
in
mov
push
in
jl
lahf
in
jmp
fsub
ins
ror
paddsw
lahf
in
jl
test
sbb
in
jl
outs
jl
lahf
in
outs
mov
in
jl
ss
fcomp
in
jl
mov
outs
jo
in
jl
jp
jl
lahf
in
(bad)
fcomp
xchg
pop
dec
repnz
dec
jge
(bad)
sahf
sub
jge
mov
inc
adc
sub
vaddps
jl
or
jl
lahf
and
in
jl
idiv
fcomp
in
jl
push
in
lods
dec
lahf
hlt
xor
popa
into
in
jl
lahf
dec
fcomp
in
jl
lahf
hlt
and
lahf
in
jl
clc
in
jl
lahf
in
jl
lahf
in
jl
lahf
in
jl
lahf
ret
sahf
sub
in
jl
lahf
jl
fcomp
in
jl
lahf
(bad)
dec
jge
retf
idiv
fcomp
in
jl
test
jl
into
in
jl
lahf
dec
fcomp
in
jl
lahf
hlt
and
lahf
in
jl
clc
in
jl
lahf
in
jl
lahf
in
jl
lahf
in
jl
lahf
ret
hlt
or
aas
in
jl
lahf
jl
fcomp
in
jl
lahf
sbb
fcomp
inc
in
mov
mov
outs
movs
sbb
mov
xchg
loopne
cmp
movs
in
nop
xchg
lds
dec
mov
dec
out
in
dec
paddb
dec
arpl
ret
dec
jne
mov
lock
pop
adc
jnp
or
out
mov
mov
cmpps
(bad)
jecxz
pop
and
lods
jne
div
sub
mov
pop
and
imul
dec
xor
fwait
pop
test
in
(bad)
cmp
pop
add
pop
imul
dec
xor
std
ret
dec
jne
mov
add
mov
pop
mov
xchg
in
in
dec
(bad)
test
sbb
jge
dec
mov
mov
add
mov
mov
xchg
xchg
cmp
sbb
add
pop
jge
retf
retf
pop
gs
clc
sahf
gs
leave
jnp
mov
mov
dec
movs
jno
jb
inc
lock
push
es
retf
jecxz
mov
sbb
shl
out
mov
dec
or
mov
dec
lds
popa
(bad)
adc
hlt
sbb
push
sub
xor
cdq
inc
ds
in
sar
sbb
leave
lock
inc
out
adc
lock
sub
mov
iret
dec
(bad)
jecxz
jb
sub
jne
mov
dec
and
shl
ret
rcr
gs
jb
sub
jne
mov
dec
xchg
scas
dec
pop
xchg
jp
(bad)
xchg
gs
or
and
dec
jge
or
inc
jge
retf
retf
gs
test
aas
in
ror
pop
mov
gs
or
adc
sbb
cld
retf
dec
sub
dec
or
cmp
dec
jge
or
xlat
mov
dec
xchg
adc
sbb
xor
dec
test
out
mov
dec
ds
gs
mov
adc
scas
movs
and
movd
xchg
ret
jno
test
dec
pmuludq
dec
psadbw
ror
pop
call
rcr
ds
dec
setne
pop
(bad)
gs
(bad)
addr16
xchg
push
pop
push
stos
gs
mov
dec
gs
in
rcl
jmp
sbb
(bad)
mov
inc
scas
mov
or
hlt
test
mov
fcomi
sub
xlat
jle
mov
dec
jge
pop
mov
sbb
and
movd
cwde
ret
jno
mov
or
hlt
test
nop
or
sbb
sbb
cld
retf
dec
(bad)
call
dec
or
xor
dec
xor
sar
add
in
inc
mov
idiv
fucomp
mov
dec
test
test
gs
xor
jge
rcl
rol
mov
idiv
fucom
mov
dec
test
test
gs
xor
or
retf
bound
add
xchg
scas
dec
pop
xchg
jno
lock
pop
in
and
pop
out
and
pop
in
and
jge
or
or
mov
xchg
or
loope
mov
lds
mov
mov
cdq
add
inc
jge
mov
cdq
add
inc
jge
sbb
loop
dec
pmuludq
jmp
mov
mov
(bad)
mov
add
jge
sbb
push
out
push
iret
lock
xor
dec
clc
fwait
gs
adc
xchg
scas
dec
movs
jge
dec
and
dec
jge
cmps
(bad)
push
in
dec
out
mov
add
into
mov
mov
jp
mov
push
es
gs
mov
jns
icebp
adc
(bad)
jl
ror
test
mov
add
xchg
mov
scas
mov
mov
xchg
sub
push
es
cwde
push
hlt
cs
int
fdiv
adc
lock
test
mov
jne
or
jmp
lock
and
in
dec
xchg
loop
mov
mov
dec
sub
or
sbb
push
sub
mov
test
mov
mov
mov
cmp
jge
dec
gs
dec
gs
dec
(bad)
lods
lds
sub
in
ror
cdq
inc
mov
xor
cvtps2pi
leave
xor
dec
(bad)
in
lds
sub
in
and
mov
dec
lock
add
jge
mov
mov
mov
xchg
jbe
(bad)
adc
mov
xor
lock
pop
xchg
jp
(bad)
ins
mov
add
dec
cmp
mov
cmp
clc
adc
(bad)
in
enter
dec
jb
in
and
mov
or
lock
(bad)
xchg
ror
push
mov
jmp
adc
leave
test
aas
in
and
scas
dec
addr16
dec
(bad)
xchg
in
(bad)
outs
mov
mov
(bad)
mov
add
sub
mov
stos
iret
leave
clc
repnz
xor
aas
in
shl
or
dec
mov
mov
adc
cmp
cmp
sbb
test
jb
and
pop
in
and
sbb
div
in
dec
mov
loope
jp
pop
cmp
cdq
mov
cmp
jp
mov
mov
ins
adc
(bad)
adc
(bad)
ins
mov
push
and
lods
pop
ret
sbb
ss
dec
lock
mov
gs
mov
imul
inc
lock
mov
mov
mov
cmp
aad
leave
enter
(bad)
call
pop
pop
sbb
jp
add
(bad)
in
retf
retf
gs
dec
mov
mov
int3
sub
mov
cmps
push
lds
scas
xchg
sbb
enter
sbb
in
lds
mov
and
adc
xchg
jge
dec
lock
mov
jne
pop
inc
jge
inc
iret
or
jns
xchg
shl
sbb
adc
out
cmps
dec
pcmpeqb
add
movs
dec
cmovl
sbb
movs
dec
pextrw
sbb
jge
scas
xchg
sbb
enter
push
mov
sbb
pop
sub
or
pop
ret
mov
gs
test
mov
jmp
jp
gs
lds
mov
dec
gs
cmp
out
movs
dec
pcmpeqb
or
cmp
test
dec
gs
cmp
out
movs
dec
pcmpeqb
add
movs
dec
cmovl
sbb
hlt
sub
inc
jge
inc
mov
mov
sbb
add
mov
push
xchg
outs
jne
xchg
scas
dec
wbinvd
lds
pop
xchg
mov
or
(bad)
sbb
enter
dec
jge
or
iret
cmp
test
(bad)
in
and
adc
add
inc
jge
jmp
xchg
scas
dec
xchg
mov
fisttp
test
lock
in
mov
dec
jge
ror
push
(bad)
mov
push
lock
xchg
mov
ror
mov
sbb
inc
mov
mov
or
jecxz
mov
inc
test
loopne
dec
xor
jp
dec
pmuludq
mov
add
ffree
not
xchg
cdq
pop
out
movs
dec
paddd
inc
xchg
cld
mov
jg
leave
bound
gs
mov
in
dec
dec
std
shl
or
inc
aam
(bad)
enter
cmp
pop
inc
jp
addr16
mov
(bad)
dec
jp
adc
dec
and
(bad)
jl
sbb
inc
stos
dec
pmuludq
ret
dec
and
repz
cmp
hlt
sbb
xlat
sub
cli
or
jge
or
int
mov
mov
imul
in
addr16
xchg
sbb
push
test
or
xchg
rcr
sub
pop
mov
ret
cmp
dec
xchg
gs
xchg
or
dec
lea
dec
xchg
adc
enter
enter
dec
xchg
push
or
jge
or
pusha
add
dec
mov
pop
add
call
inc
iret
or
inc
mov
or
dec
cmp
xlat
cmp
enter
setbe
mov
(bad)
test
jne
div
cmp
leave
sbb
shl
test
push
pop
jecxz
mov
dec
xchg
or
fdivr
sub
pop
not
mov
sti
cmp
dec
mov
adc
cmp
jae
test
ror
or
xchg
cmp
dec
lea
sti
and
shr
movs
dec
or
jge
sbb
push
cld
inc
dec
leave
leave
lods
xchg
dec
paddd
lock
mov
add
call
leave
lock
jmp
adc
int3
je
cmp
jge
in
dec
mov
adc
icebp
sub
sbb
add
dec
jge
jns
xchg
mov
(bad)
gs
lock
mov
xchg
xor
repnz
in
mov
lock
imul
push
push
nop
lock
test
cmp
xor
sub
dec
pmuludq
lock
stc
and
inc
addr16
dec
setne
or
jge
or
lock
into
(bad)
and
dec
std
ror
or
ret
call
sbb
mov
mov
(bad)
sub
mov
test
jp
add
dec
jge
retf
retf
jne
push
(bad)
aas
in
mov
adc
push
(bad)
outs
mov
xchg
jp
(bad)
push
inc
(bad)
in
sar
test
or
jmp
pop
mov
mov
add
jne
cmp
in
icebp
add
mov
imul
stos
dec
pinsrw
imul
addr16
repz
pop
adc
mov
dec
mov
out
dec
setne
push
(bad)
push
inc
(bad)
in
sar
test
or
jmp
pop
mov
mov
add
jne
jg
aas
in
mov
adc
push
(bad)
outs
mov
xchg
adc
(bad)
in
sar
test
or
jmp
pop
mov
mov
add
jne
mov
aaa
in
dec
out
test
dec
(bad)
jne
idiv
push
dec
jb
add
dec
jge
icebp
ins
jge
dec
xchg
mov
mov
cmp
pop
xchg
push
or
pop
sbb
psadbw
lock
addr16
sbb
jmp
retf
imul
out
test
dec
(bad)
jne
idiv
push
dec
jb
test
aas
in
mov
adc
or
pop
adc
adc
repz
out
test
inc
out
test
dec
(bad)
jne
idiv
push
dec
jb
test
aas
in
mov
adc
or
pop
cld
sub
jge
and
scas
dec
lock
add
jge
retf
retf
jne
dec
dec
jge
icebp
add
mov
imul
test
pinsrw
imul
addr16
repz
pop
adc
mov
dec
mov
sbb
leave
xchg
es
jge
mov
clc
test
dec
add
mov
cmp
cmp
mov
cmp
adc
pop
adc
mov
dec
mov
in
dec
mov
in
dec
pmulhuw
mov
xchg
xor
(bad)
push
sub
jge
sar
test
mov
sub
out
test
paddd
pop
mov
add
dec
jge
icebp
add
mov
pop
addr16
or
sbb
adc
jg
in
dec
mov
in
dec
mov
in
dec
pmulhuw
mov
xchg
xor
dec
jge
std
repz
out
test
paddd
inc
out
test
pinsrw
(bad)
jne
idiv
push
dec
jb
test
aas
in
mov
adc
or
jge
mov
cld
sbb
sub
in
and
or
ret
mov
test
(bad)
aas
in
sbb
mov
sub
scas
dec
pinsrw
(bad)
jne
idiv
push
dec
jb
test
mov
xchg
xor
(bad)
outs
mov
hlt
sbb
jmp
adc
leave
xchg
bound
(bad)
push
inc
(bad)
in
sar
test
or
jmp
pop
mov
mov
add
jne
and
icebp
add
mov
imul
scas
dec
pinsrw
imul
addr16
repz
pop
adc
mov
dec
mov
in
inc
mov
in
dec
paddd
lock
out
in
dec
btc
jb
lds
retf
adc
setbe
mov
jle
mov
adc
mov
xchg
lock
jp
dec
clc
fwait
gs
adc
xchg
adc
repnz
xor
mov
addr16
dec
pmulhuw
mov
mov
push
push
(bad)
in
repnz
xchg
sub
clc
lahf
sub
hlt
lock
fdivr
sub
pop
lock
dec
jb
sbb
dec
jb
scas
dec
paddd
pop
lock
sub
retf
adc
(bad)
jge
dec
add
popf
mov
adc
sti
adc
lock
lds
sub
adc
dec
jge
mov
mov
in
dec
clc
fwait
gs
adc
xchg
in
icebp
add
mov
pop
and
or
sbb
adc
imul
dec
mov
in
dec
mov
in
dec
pmulhuw
mov
xchg
xor
dec
jge
std
repz
out
scas
dec
paddd
inc
out
lods
dec
pinsrw
(bad)
jne
idiv
push
dec
jb
test
aas
in
mov
adc
or
jge
mov
cld
imul
mov
imul
lock
fdivp
adc
mov
sbb
push
sub
test
lock
mov
cmc
(bad)
adc
push
jge
leave
stc
mov
dec
psadbw
dec
cmove
lock
mov
in
dec
psadbw
lock
mov
cdq
pop
addr16
or
lock
(bad)
sub
sbb
lock
cdq
mov
mov
adc
jmp
adc
mov
sub
mov
mov
sub
adc
sti
adc
pop
xchg
xchg
popa
int
adc
pop
xchg
lahf
mov
sub
hlt
imul
lock
repnz
adc
pop
adc
mov
dec
mov
sbb
leave
xchg
sub
(bad)
push
inc
(bad)
in
sar
test
or
jmp
push
lea
mov
add
jne
jmp
add
mov
pop
addr16
or
sbb
adc
iret
cmp
in
jae
in
dec
mov
in
dec
pmulhuw
mov
xchg
xor
dec
jge
std
repz
out
lods
dec
paddd
inc
xchg
adc
inc
ror
sub
adc
mov
mov
sub
adc
lock
hlt
imul
icebp
adc
xor
enter
add
jne
inc
dec
jge
icebp
add
mov
pop
and
or
sbb
adc
daa
cmp
in
(bad)
jl
ror
xor
jge
inc
(bad)
in
sar
test
or
jmp
les
adc
xor
retf
retf
jne
icebp
xor
icebp
add
mov
pop
addr16
or
sbb
adc
xlat
inc
in
dec
mov
scas
dec
lock
add
jne
and
jge
mov
lock
leave
xchg
sahf
ja
jge
inc
(bad)
in
sar
test
or
iret
mov
mov
in
dec
pmulhuw
mov
not
lock
addr16
sbb
adc
retf
ins
add
xor
icebp
add
mov
pop
and
or
sbb
adc
push
inc
in
dec
mov
in
dec
mov
in
dec
pmulhuw
mov
xchg
xor
dec
jge
std
repz
out
ror
(bad)
sub
lea
scas
xchg
sub
out
ror
(bad)
out
(bad)
jne
idiv
push
dec
jb
test
aas
in
mov
adc
ja
jge
mov
xchg
cs
jge
inc
(bad)
in
sar
test
or
iret
mov
mov
in
dec
pmulhuw
mov
not
lock
addr16
sbb
in
jge
retf
retf
ins
test
aas
in
mov
adc
jbe
jge
mov
hlt
sbb
push
sub
mov
in
dec
pmulhuw
mov
xchg
xor
dec
jge
std
repz
out
ror
(bad)
sub
popa
sbb
jb
adc
mov
in
dec
mov
in
dec
pmulhuw
mov
xchg
xor
dec
jge
std
repz
out
ror
(bad)
sub
addr16
jb
adc
mov
in
dec
clc
fwait
gs
adc
xchg
in
icebp
add
mov
pop
addr16
or
sbb
adc
sbb
dec
mov
adc
repz
pop
adc
mov
dec
mov
in
dec
mov
in
dec
pmulhuw
mov
xchg
xor
dec
jge
std
repz
out
ror
(bad)
sub
(bad)
in
mov
(bad)
aas
in
mov
adc
jne
jge
mov
xchg
call
jge
sar
test
or
jmp
pop
mov
mov
add
jne
sbb
jge
icebp
out
in
dec
xchg
mov
pop
sub
pop
test
adc
out
scas
dec
pop
xchg
stos
jne
jge
mov
hlt
sbb
push
sub
mov
in
dec
pmulhuw
mov
xchg
xor
dec
jge
std
repz
out
ror
(bad)
sub
mov
pop
mov
adc
and
dec
mov
in
dec
mov
in
dec
pmulhuw
mov
xchg
xor
dec
jge
std
repz
out
ror
(bad)
sub
xchg
mov
cmc
xor
icebp
add
mov
imul
ror
les
mov
repz
pop
adc
mov
dec
mov
scas
dec
lock
add
jge
retf
retf
jne
dec
gs
dec
gs
dec
addr16
dec
dec
sbb
pmuludq
lock
(bad)
jl
ror
pop
mov
adc
mov
in
dec
gs
cmc
sti
adc
pop
sub
adc
repnz
jge
mov
xchg
adc
(bad)
adc
repz
out
aam
pextrw
fwait
inc
(bad)
sbb
repnz
xchg
push
jo
jge
int
adc
in
gs
mov
adc
push
mov
sbb
pop
jl
dec
pop
ret
mov
gs
call
xchg
pop
jae
test
mov
mov
mov
dec
cmp
mov
cmp
jge
into
loopne
in
lds
sub
ins
mov
mov
in
ret
ror
ret
xchg
inc
add
unpckhps
dec
(bad)
ins
mov
stos
add
unpckhps
cmps
dec
jge
mov
or
in
enter
mov
(bad)
sub
test
mov
mov
lods
mov
mov
push
push
pop
push
pop
jns
in
mov
repnz
enter
repnz
test
in
aaa
jl
fmul
dec
xchg
jl
lock
mul
dec
push
jge
dec
xchg
pusha
mov
sub
cmp
dec
cmps
mov
aam
psadbw
dec
dec
hlt
jns
repnz
test
aaa
jge
ror
pop
call
cmp
dec
test
in
add
inc
or
mov
fst
xchg
cli
jo
jge
int
adc
lock
add
or
pop
shl
adc
sti
dec
in
dec
test
in
or
mov
lock
cmp
adc
pop
ja
lds
in
or
adc
in
mov
repnz
enter
dec
jge
cmp
jmp
adc
div
sub
pop
pop
in
lds
sub
in
mov
pop
xchg
cmps
jb
jge
dec
push
jge
lds
sub
in
and
jg
dec
(bad)
xchg
and
sbb
add
cmp
jns
xchg
xchg
dec
(bad)
ins
cmps
ret
dec
out
adc
div
sub
or
cmp
mov
cmp
sub
in
mov
jmp
pop
fdiv
adc
mov
sbb
adc
mov
sbb
adc
cmp
mov
cmp
mov
adc
sbb
add
cmp
shl
adc
enter
movq
dec
fld
or
lock
hlt
adc
div
sub
mov
adc
repz
pop
xchg
data16
jge
jl
adc
mov
adc
div
sub
dec
pop
in
lds
sub
in
retf
retf
popa
gs
test
enter
lock
jmp
adc
imul
adc
call
adc
enter
repnz
jnp
mov
lock
shl
adc
enter
icebp
adc
out
add
stos
adc
pop
lock
gs
dec
gs
xchg
jge
dec
cmp
mov
cmp
jge
mov
stc
xor
jge
std
cmps
adc
out
fmul
cld
add
jge
mov
jmp
(bad)
mov
loope
in
lds
sub
in
retf
retf
ins
sub
push
xchg
ret
adc
imul
xchg
out
(bad)
mov
mov
out
dec
setne
int
adc
push
imul
repnz
or
and
aam
mov
syscall
in
dec
out
(bad)
cld
sub
jge
retf
mov
adc
addr16
dec
setne
jge
jge
dec
push
jge
lds
sub
in
dec
gs
and
aas
in
lds
sub
adc
retf
jno
mov
jge
cmp
repnz
in
outs
in
xchg
adc
paddb
push
adc
mov
repnz
mov
popa
int
adc
pop
xchg
sar
jge
mov
call
xchg
in
dec
gs
std
stos
adc
out
fmul
hlt
adc
div
sub
lock
outs
jnp
jge
int
adc
push
and
sbb
adc
mov
mul
test
scas
xchg
sbb
enter
(bad)
sbb
enter
out
fmul
hlt
cs
adc
cmp
ror
gs
call
mov
data16
jge
mov
mov
jl
jge
mov
mov
js
jge
dec
jecxz
pop
sub
mov
pop
mov
pop
push
mov
jnp
jge
mov
jge
mov
sub
dec
cdq
fs
gs
or
dec
sub
in
retf
retf
jno
cmp
iret
js
mov
xchg
adc
icebp
lock
or
in
dec
lock
inc
mov
jnp
inc
mov
ins
out
sbb
mov
jecxz
dec
and
js
call
in
cwde
add
mov
dec
pop
xchg
cs
jge
or
pop
adc
xchg
jge
cdq
cmp
in
ror
adc
div
sub
lock
cmp
in
lds
mov
dec
movntps
cmp
push
adc
enter
push
and
lods
mov
repz
setne
push
pop
div
pop
pusha
lds
scas
xchg
push
test
and
test
enter
lock
popf
adc
out
adc
sbb
or
xchg
jp
(bad)
mov
mov
in
dec
xchg
mov
mov
xchg
mov
jge
mov
je
cmp
out
adc
jp
add
ds
shl
adc
enter
in
sub
mov
adc
mov
popa
int
popf
adc
out
adc
pop
xchg
scas
js
jge
mov
mov
mov
xchg
loop
(bad)
outs
mov
je
cmp
out
adc
jp
add
aas
jge
shl
adc
enter
in
pop
loop
mov
cmp
jge
push
push
mov
sbb
das
jge
mov
pop
sub
aad
in
sar
sbb
leave
lds
jge
scas
xchg
sbb
pop
adc
add
ds
sar
sbb
leave
hlt
xor
enter
cmp
pop
hlt
ss
cmc
das
add
mov
adc
retf
jne
sbb
out
(bad)
(bad)
sub
lea
scas
xchg
sbb
lock
mov
test
(bad)
aas
in
lds
sub
in
retf
retf
jne
aad
jge
icebp
add
mov
pop
addr16
or
lock
(bad)
fmul
(bad)
sub
imul
dec
jp
xor
addr16
in
dec
mov
in
dec
pmulhuw
mov
xchg
xor
(bad)
push
sub
jge
sar
test
mov
sub
mov
or
lock
retf
ins
add
cmp
icebp
add
mov
pop
addr16
or
lock
fmul
(bad)
sub
dec
sbb
dec
out
adc
out
fmul
(bad)
sub
(bad)
fnstsw
cmp
in
icebp
add
mov
pop
addr16
or
lock
jbe
dec
paddd
inc
out
fisttp
(bad)
out
(bad)
jne
idiv
push
dec
jb
add
cmp
in
icebp
ins
jge
dec
xchg
mov
test
cmp
add
test
cmp
mov
test
aas
in
lds
sub
in
lds
sub
in
retf
retf
imul
out
fisttp
(bad)
out
(bad)
jne
idiv
push
dec
jb
test
aas
in
lds
sub
in
retf
retf
jne
inc
(bad)
aas
in
lds
sub
in
retf
retf
jne
mov
in
dec
out
fisttp
(bad)
out
(bad)
jne
idiv
push
dec
jb
test
aas
in
lds
sub
in
retf
retf
jne
dec
(bad)
aas
in
lds
sub
in
retf
retf
jne
mov
add
mov
popa
out
fimul
les
mov
setge
mov
adc
popa
cmc
setge
mov
xchg
and
jge
mov
adc
popa
int
popf
adc
(bad)
outs
mov
(bad)
(bad)
sbb
lock
neg
dec
pinsrw
(bad)
jne
idiv
push
dec
jb
test
aas
in
lds
sub
in
retf
retf
jne
add
aas
in
lds
sub
in
retf
retf
jne
sbb
jge
dec
xchg
mov
pop
addr16
or
lock
adc
dec
paddd
inc
addr16
(bad)
imul
fimul
(bad)
sub
(bad)
lds
cmp
jge
dec
xchg
mov
pop
addr16
or
lock
push
fimul
(bad)
sub
or
lds
sub
in
lds
sub
in
retf
retf
ins
add
ds
icebp
add
mov
pop
addr16
or
lock
xchg
fisttp
(bad)
sub
jge
or
lock
stos
fisttp
(bad)
sub
(bad)
fnstsw
ds
icebp
add
mov
pop
addr16
or
lock
(bad)
fisttp
(bad)
sub
sbb
dec
pinsrw
jge
mov
enter
cvtpi2ps
setge
mov
adc
popa
cmc
setge
mov
xchg
mov
mov
xchg
fidivr
jge
inc
(bad)
in
sar
test
or
clc
and
mov
test
cmp
mov
or
mov
sub
rcl
in
test
cmp
mov
in
dec
mov
in
dec
pmulhuw
mov
xchg
xor
dec
jge
int
popf
adc
(bad)
outs
mov
xchg
es
jge
inc
(bad)
in
sar
test
or
lds
mov
in
dec
pmulhuw
mov
lock
dec
out
adc
addr16
push
dec
out
adc
out
fmul
(bad)
sub
lods
add
(bad)
imul
ret
paddd
inc
gs
dec
gs
dec
gs
dec
(bad)
lods
sbb
inc
ror
imul
lock
ret
(bad)
in
lds
sub
lock
std
repz
ror
pop
mov
adc
aas
push
in
dec
mov
jmp
ror
sub
cmp
in
mov
push
mov
sbb
mov
dec
pop
sub
push
mov
les
mov
ror
sub
stos
loope
mov
jge
mov
test
mov
pop
cs
and
ret
pop
jne
sbb
jl
fstp
xchg
in
popa
(bad)
gs
call
xchg
in
sbb
mov
dec
setne
lock
test
addr16
or
xchg
(bad)
fs
gs
adc
gs
xchg
clc
dec
mov
cmp
jns
dec
(bad)
imul
rol
or
adc
test
jge
mov
mov
push
and
jl
dec
cmp
mov
cmp
sub
in
shl
adc
enter
repnz
cmp
mov
cmp
mov
push
and
clc
adc
dec
push
in
dec
cmp
mov
cmp
sub
in
mov
xchg
je
lock
test
cmp
mov
cmp
mov
adc
enter
icebp
adc
(bad)
in
(bad)
mov
jl
dec
paddd
repnz
jnp
mov
lock
leave
loopne
stos
dec
(bad)
imul
out
or
stos
adc
pop
lock
gs
dec
gs
xchg
jge
dec
cmp
mov
cmp
jge
mov
stc
bound
jge
std
cmps
adc
out
(bad)
dec
paddb
xchg
imul
mov
adc
test
mov
add
and
retf
retf
ins
sub
jo
adc
clc
rol
dec
(bad)
imul
xchg
sub
jge
mov
mov
out
dec
setne
arpl
jge
int
xchg
mov
imul
hlt
adc
or
and
stc
jb
pop
push
jge
and
(bad)
in
dec
out
(bad)
dec
pmuludq
div
sub
or
cmp
mov
cmp
pop
in
and
scas
dec
cmp
mov
cmp
mov
in
dec
add
ds
(bad)
popa
int
xchg
mov
cs
clc
adc
retf
jne
mov
stc
push
dec
(bad)
xchg
enter
and
xchg
mov
xchg
push
popa
(bad)
ins
cmps
sbb
dec
cmp
mov
cmp
xchg
ds
lock
xchg
adc
jge
std
fwait
adc
out
(bad)
dec
unpckhps
cmps
dec
jge
stc
and
jbe
or
sub
retf
imul
inc
loope
in
mov
test
jo
lock
cs
mov
mov
xchg
es
lock
xchg
repz
mov
adc
pop
sub
std
fwait
adc
out
cmp
mov
mov
dec
enter
lock
(bad)
ins
(bad)
movs
jge
dec
cmp
mov
cmp
test
mov
mov
dec
mov
add
fst
mov
xchg
inc
pusha
(bad)
addr16
adc
in
gs
test
push
and
sbb
add
mov
test
xchg
lods
cmp
jmp
in
dec
xchg
adc
jp
add
es
ret
pop
test
or
xchg
out
(bad)
mov
jge
push
out
retf
dec
ucomiss
jp
popa
sbb
jl
mov
pop
xchg
add
jge
or
pop
adc
xchg
jge
in
es
ror
lods
inc
(bad)
sbb
enter
out
lds
lock
popf
sub
push
out
retf
dec
pmuludq
div
sub
dec
xor
dec
pop
jge
mov
pop
sub
adc
leave
enter
(bad)
jmp
shl
in
ror
sbb
inc
hlt
adc
div
sub
lock
dec
cmp
mov
out
lds
pop
in
mov
jno
int
lea
mov
xchg
add
lock
inc
adc
xchg
lds
pop
xchg
(bad)
popa
(bad)
gs
shl
shr
add
scas
xor
cmp
mov
call
enter
setbe
enter
icebp
sub
in
lds
mov
dec
cmp
sbb
test
push
jge
mov
std
pop
or
xchg
pop
popa
(bad)
jecxz
dec
sub
sub
in
lds
mov
dec
mov
mov
dec
(bad)
adc
shr
dec
paddb
jo
jge
lock
inc
mov
jo
(bad)
push
mov
sbb
pop
sub
jg
loop
idiv
enter
or
pop
jmp
and
pop
in
and
jge
dec
gs
pop
out
lds
hlt
sub
loopne
leave
dec
(bad)
in
push
gs
adc
int3
scas
dec
out
lds
pop
in
push
gs
adc
shr
dec
pmuludq
div
sub
push
sub
stc
dec
jge
mov
jge
and
sub
out
jge
mov
push
sub
in
dec
jge
xchg
daa
jge
shl
adc
enter
gs
adc
shr
dec
(bad)
in
push
gs
adc
shr
dec
(bad)
in
push
gs
adc
into
scas
dec
out
les
pop
in
push
gs
adc
int3
scas
dec
out
les
cld
add
jge
and
sub
loope
jge
xor
push
sub
in
jge
and
test
mov
fdivr
in
dec
gs
and
sbb
mov
push
in
dec
mov
mov
ror
(bad)
push
and
sbb
arpl
sbb
gs
test
adc
dec
out
retf
dec
pmaxub
in
dec
jge
popf
xchg
fldenv
mov
in
dec
adc
dec
out
retf
dec
pmaxub
out
jge
popf
xchg
fxch
mov
pop
in
dec
xchg
adc
enter
cmp
or
xchg
sahf
outs
(bad)
dec
ins
mov
hlt
lods
dec
adc
dec
out
retf
dec
movhps
mov
popa
dec
or
xchg
mov
dec
scas
cmp
lods
dec
adc
dec
out
retf
dec
movhps
mov
push
inc
or
xchg
(bad)
outs
(bad)
dec
xor
hlt
lods
dec
adc
dec
out
retf
dec
paddb
xlat
push
jge
and
sbb
mov
pop
in
dec
lods
push
inc
or
adc
xchg
jge
mov
repz
mov
pop
in
dec
lods
popa
inc
or
adc
xchg
jge
cdq
sub
shl
adc
enter
pop
hlt
or
jecxz
mov
mov
div
sub
cli
nop
scas
dec
lock
mov
xchg
in
push
out
adc
lods
jne
or
cld
sbb
jge
and
sub
in
leave
loopne
xlat
dec
(bad)
test
xchg
sub
and
sbb
mov
sub
repz
test
mov
cmp
gs
dec
addr16
enter
mov
loop
in
and
jg
dec
out
retf
fisubr
dec
lock
fsub
dec
jge
dec
pop
pop
rol
dec
test
or
pop
pop
clc
and
adc
test
nop
scas
dec
gs
cmp
or
lods
dec
xchg
add
enter
cmp
or
pop
in
mov
cmp
adc
addr16
mov
xchg
in
enter
mov
loop
in
and
xchg
ret
jge
sub
pop
out
and
pop
in
and
pop
in
and
pop
in
and
adc
xchg
jge
inc
imul
leave
pop
in
push
gs
adc
shr
dec
(bad)
in
mov
dec
inc
or
pop
in
mov
cmp
pop
cld
and
jg
dec
sbb
dec
pop
adc
test
setne
ins
(bad)
dec
xor
aas
in
leave
loopne
(bad)
pop
in
mov
dec
inc
or
pop
in
mov
cmp
pop
cld
and
in
dec
gs
in
dec
pop
adc
test
setne
(bad)
dec
call
jb
in
and
sbb
mov
adc
test
(bad)
in
and
adc
test
in
nop
scas
dec
gs
add
add
lods
dec
gs
jge
shr
jge
int
dec
gs
test
push
jge
and
push
test
jge
and
lahf
add
(bad)
in
mov
lods
imul
cmp
or
pop
in
mov
sbb
mov
imul
pop
addr16
enter
mov
jecxz
in
and
xchg
xor
dec
mov
enter
unpckhps
dec
jge
dec
addr16
dec
cvtps2pi
jb
scas
dec
gs
or
jge
mov
xchg
inc
or
xchg
push
(bad)
xchg
dec
fsub
dec
jge
dec
lock
mov
dec
jge
fs
jge
and
jge
xor
in
enter
mov
jecxz
in
and
xchg
call
aas
in
and
sbb
mov
sbb
mov
jl
dec
gs
test
(bad)
in
and
jle
enter
mov
jecxz
in
and
xchg
(bad)
ins
(bad)
dec
mov
dec
in
dec
clc
call
or
jge
jge
shr
jge
int
dec
gs
xchg
fwait
in
dec
unpckhps
(bad)
mov
dec
addr16
add
(bad)
in
mov
lods
in
pop
or
cld
add
or
in
and
sbb
mov
sbb
mov
adc
test
sbb
addr16
dec
pop
adc
test
setne
(bad)
dec
cmp
aas
in
and
sbb
mov
sbb
mov
pop
mov
pop
jl
dec
addr16
in
dec
cvtps2pi
in
nop
scas
dec
gs
cmp
aas
aam
dec
gs
jge
shr
jge
int
dec
gs
test
ds
dec
sbb
adc
scas
dec
addr16
add
(bad)
in
mov
lods
lea
pmuludq
div
sub
jb
in
and
sbb
mov
pop
mov
dec
addr16
dec
unpckhps
dec
cvtps2pi
in
nop
scas
dec
gs
mov
jge
jmp
into
scas
dec
gs
jge
shr
jge
int
dec
gs
in
and
imul
addr16
or
adc
add
sub
int3
scas
dec
gs
jge
shr
jge
int
dec
gs
(bad)
in
and
jge
dec
imul
addr16
or
adc
add
sub
fsubr
xchg
fsub
dec
jge
dec
lock
mov
dec
jge
push
gs
test
adc
test
xchg
scas
dec
addr16
dec
setne
pusha
mov
sbb
mov
sbb
mov
pop
mov
cli
jge
dec
imul
addr16
or
adc
add
sub
shr
jge
shr
jge
int
dec
gs
ror
jge
and
arpl
in
scas
dec
addr16
or
pop
in
mov
lods
in
or
xchg
aad
lock
in
mov
xchg
adc
push
mov
sbb
pop
sub
pusha
mov
test
jp
add
stc
adc
leave
adc
mov
mov
mov
lods
dec
xchg
xchg
dec
in
dec
jge
sub
jge
shl
or
dec
xchg
pop
xchg
mov
dec
lock
fsub
dec
jge
dec
pop
imul
sbb
mov
and
jge
sbb
sbb
movs
dec
jge
dec
or
pop
in
dec
lods
cmp
pop
in
mov
dec
inc
or
pop
in
sbb
addr16
mov
xchg
in
enter
mov
loop
in
and
xchg
add
jge
dec
mov
push
adc
enter
cmp
or
pop
in
mov
cmp
adc
addr16
mov
xchg
in
enter
mov
loop
in
and
xchg
inc
push
mov
pop
out
and
pop
in
and
pop
in
and
pop
in
and
adc
xchg
jge
inc
imul
gs
adc
shr
dec
(bad)
in
mov
dec
inc
or
pop
in
mov
sbb
mov
imul
and
adc
test
xchg
scas
dec
gs
or
jge
jmp
shr
mov
mov
in
and
adc
adc
shr
dec
unpckhps
dec
addr16
dec
jb
in
mov
pop
cli
dec
jge
cmp
push
adc
adc
shr
dec
setbe
and
pop
in
and
in
dec
lock
add
dec
jge
stc
adc
and
sbb
mov
sbb
mov
jl
dec
gs
xchg
test
std
mov
dec
lock
(bad)
in
mov
lods
std
pop
or
lds
sub
jge
scas
xchg
add
enter
cmp
or
pop
in
mov
sbb
ror
xchg
test
(bad)
in
and
sbb
movs
dec
jge
dec
out
repz
pmaxub
out
jge
jnp
adc
jb
in
and
sbb
mov
adc
xchg
addr16
dec
cvtps2pi
in
nop
scas
dec
gs
imul
int3
scas
dec
mov
xchg
dec
fsub
dec
jge
dec
lock
test
dec
jge
pop
sbb
int3
jge
dec
addr16
dec
pop
adc
test
setne
push
(bad)
dec
js
cmp
and
sbb
mov
sbb
mov
adc
test
(bad)
in
and
in
dec
cvtps2pi
in
nop
scas
dec
gs
loope
jge
jmp
shr
inc
(bad)
xchg
dec
fsub
dec
jge
dec
lock
test
dec
jge
pop
sub
scas
jge
dec
addr16
dec
pop
adc
test
setne
fdivr
fnstcw
in
and
sbb
mov
adc
test
adc
test
in
in
and
nop
scas
dec
gs
jns
jge
jmp
int3
scas
dec
gs
jge
shr
jge
int
dec
gs
test
lock
dec
arpl
push
xchg
scas
dec
addr16
add
(bad)
in
mov
lods
fstp
(bad)
in
mov
dec
inc
or
pop
in
mov
sbb
hlt
and
push
xchg
in
enter
cli
dec
jge
inc
jecxz
in
and
jg
dec
out
icebp
dec
pmaxub
in
dec
jge
mov
test
gs
jge
shr
jge
int
dec
gs
cmp
enter
mov
jecxz
in
and
jg
dec
out
icebp
dec
pmaxub
out
jge
dec
lock
fsub
dec
jge
dec
lock
mov
dec
jge
push
sbb
dec
paddw
addr16
or
adc
add
adc
jmp
shr
jge
shr
jge
int
dec
gs
ror
jge
and
in
dec
arpl
in
scas
dec
addr16
or
pop
in
mov
lods
in
or
xchg
xchg
mov
test
out
sbb
int3
sub
mov
push
sbb
loopne
out
dec
(bad)
in
and
jle
dec
gs
dec
(bad)
ins
mov
jne
movs
adc
(bad)
adc
(bad)
xchg
xchg
push
push
(bad)
mov
jge
mov
mov
adc
cmp
dec
(bad)
in
leave
enter
(bad)
test
mov
pop
sbb
unpckhps
dec
paddw
scas
adc
retf
gs
repz
stos
and
sbb
unpckhps
cmp
out
or
xchg
adc
iret
or
and
pop
call
mov
ins
test
aas
in
and
jge
enter
mov
(bad)
sub
test
mov
mov
das
sbb
or
pop
sub
push
mov
lock
in
dec
clc
fwait
gs
adc
xchg
in
dec
addr16
or
lock
fdivp
dec
setne
push
(bad)
push
inc
(bad)
in
sar
test
xchg
adc
jb
in
cmp
dec
jge
int
adc
pop
xchg
xchg
push
(bad)
ins
xor
addr16
or
lock
push
hlt
dec
pmuludq
push
sub
jb
out
cmp
dec
jge
int
adc
pop
xchg
stos
push
(bad)
ins
xor
addr16
or
lock
push
hlt
dec
paddw
and
mov
in
mov
cmp
mov
ins
xor
addr16
imul
xchg
dec
paddw
and
mov
in
mov
cmp
add
inc
jp
test
mov
mov
sub
in
enter
cmp
dec
jge
int
adc
pop
xchg
pop
pop
(bad)
ins
cmps
or
dec
pop
adc
ins
test
mov
mov
sub
in
enter
cmp
dec
jge
int
adc
pop
xchg
outs
pop
(bad)
ins
xor
addr16
sub
dec
lock
out
sti
dec
paddb
inc
add
enter
cmp
dec
jge
int
adc
pop
xchg
mov
xor
sbb
or
lock
dec
sti
dec
(bad)
in
and
adc
test
in
in
lds
sub
in
mov
addr16
or
adc
test
mov
adc
addr16
(bad)
push
(bad)
outs
mov
hlt
sbb
push
sub
push
es
shr
mov
cmp
ja
push
inc
outs
jge
mov
xchg
xchg
add
jge
mov
sub
dec
xchg
adc
pop
xchg
push
cmps
lock
je
cmp
pop
in
sbb
out
hlt
dec
paddb
das
das
jge
pop
push
es
shr
add
jge
sbb
push
xlat
cmp
sar
or
mov
sub
(bad)
jl
ror
add
loop
adc
(bad)
add
adc
jge
dec
xchg
mov
mov
std
push
mov
jp
test
aas
in
lds
sub
in
sar
sbb
leave
std
push
mov
jp
test
int3
aas
in
lds
sub
in
enter
mov
jle
pop
addr16
das
or
lock
paddw
test
in
lds
sub
in
lock
pop
in
dec
clc
fwait
gs
mov
mov
mov
adc
fwait
mov
add
mov
rcr
lock
push
adc
popa
int
mov
mov
xchg
jbe
(bad)
ins
cmc
cld
test
mov
or
and
mov
add
(bad)
xchg
ins
cmc
cld
test
mov
or
and
dec
cmp
mov
outs
push
pop
mov
and
push
adc
popa
int
mov
mov
xchg
stos
pop
(bad)
ins
cmc
cld
test
mov
or
and
clc
add
and
dec
xchg
ins
cmc
cld
test
mov
or
and
mov
add
add
dec
pop
pop
mov
and
push
adc
popa
int
mov
mov
xchg
push
pop
(bad)
ins
cmc
cld
test
mov
or
and
clc
add
xlat
imul
mov
and
push
adc
popa
int
mov
mov
xchg
push
pop
(bad)
test
mov
nop
sbb
jecxz
adc
loope
mov
clc
dec
jge
inc
int3
aas
in
mov
mov
sbb
test
adc
sub
dec
mov
ins
mov
mov
gs
cmps
xchg
or
mov
pop
hlt
imul
jge
mov
pop
adc
into
out
dec
paddw
repz
add
(bad)
jge
cmc
lock
pusha
push
jge
mov
jge
mov
cmp
mov
cmp
clc
adc
gs
dec
mov
adc
lock
popa
out
hlt
dec
xsaves
fist
mov
mov
jp
mov
push
es
gs
mov
adc
mov
dec
paddd
sub
dec
test
mov
xchg
scas
dec
cmp
mov
cmp
xchg
mov
(bad)
test
mov
xchg
scas
dec
cmp
mov
cmp
mov
in
dec
(bad)
popa
int
test
mov
xchg
mov
ins
cmps
mov
in
dec
cmp
mov
cmp
clc
adc
or
dec
addr16
or
lock
(bad)
sub
adc
push
push
adc
sub
adc
dec
jge
int
test
mov
xchg
cs
(bad)
outs
mov
pop
in
lds
sub
in
sar
or
mov
sub
push
adc
popa
int
adc
shl
sub
je
inc
mov
in
dec
(bad)
imul
push
dec
push
hlt
imul
paddd
add
ret
jge
std
test
add
repz
mov
xchg
stos
pop
(bad)
outs
mov
adc
popa
int
adc
pop
xchg
xchg
pop
(bad)
popa
int
adc
pop
xchg
xchg
pop
(bad)
gs
mov
mov
pop
addr16
mov
mov
shr
icebp
adc
jp
addr16
mov
mov
stc
jmp
dec
in
adc
ror
xor
fdivp
sbb
push
sub
lock
lock
(bad)
sub
clc
adc
pop
imul
mov
repz
pop
xchg
adc
jge
cmc
xlat
mov
mov
add
pop
pop
pop
lods
mov
xchg
sbb
repz
mov
sbb
adc
(bad)
ins
in
dec
xchg
popa
int
test
mov
xchg
cs
(bad)
popa
cmc
repz
pop
not
test
std
dec
(bad)
imul
sti
test
mov
pop
cdq
or
pop
in
and
xchg
dec
pop
(bad)
mov
dec
cmp
mov
cmp
add
adc
retf
jno
mov
mov
adc
lock
jge
sar
sbb
leave
adc
add
sbb
adc
mov
mov
(bad)
mov
or
imul
out
std
dec
ucomiss
gs
hlt
xor
xlat
hlt
das
leave
cld
pop
mov
mov
xchg
jl
push
setne
int
xchg
adc
pop
xchg
jp
(bad)
xchg
xor
dec
(bad)
ins
mov
test
in
cmp
lods
dec
enter
dec
jge
dec
(bad)
gs
push
movs
mov
inc
or
xchg
inc
pop
(bad)
test
lahf
int3
scas
dec
out
std
dec
setne
(bad)
mov
dec
xchg
test
in
lds
sub
neg
jge
dec
addr16
pop
or
lock
out
je
lock
sub
adc
(bad)
imul
add
cmp
dec
lock
mov
push
or
in
mov
jecxz
adc
int3
xchg
or
push
fwait
inc
pop
cld
sbb
xchg
mov
(bad)
lds
enter
xchg
adc
lock
cmp
jecxz
mov
add
ins
ins
mov
mov
jp
mov
push
es
mov
js
test
adc
lock
mov
add
iret
mov
adc
adc
dec
pmuludq
mov
leave
clc
inc
movs
lock
mov
add
scas
sub
dec
cmp
movs
lock
test
imul
out
clc
dec
(bad)
in
lds
sub
adc
(bad)
popa
int
xchg
adc
lock
nop
adc
lock
cld
das
pop
dec
jge
and
lock
out
std
dec
pmuludq
xlat
hlt
das
and
xchg
sahf
inc
(bad)
gs
movs
mov
push
or
adc
test
dec
shr
dec
(bad)
push
sub
adc
cmp
or
(bad)
int
(bad)
pop
cs
cld
pop
pop
gs
and
in
pop
or
adc
test
mov
outs
in
dec
add
cmps
lock
xchg
scas
dec
mov
in
dec
jle
mov
jp
add
mov
in
pop
or
adc
test
cmp
in
dec
add
movs
lock
xchg
scas
dec
mov
in
dec
jle
repz
(bad)
test
in
in
and
mov
or
adc
add
sbb
in
retf
retf
cmp
adc
dec
jge
inc
(bad)
in
mov
(bad)
sbb
lock
jge
dec
gs
dec
gs
dec
(bad)
lods
and
shr
dec
pmuludq
jp
jge
dec
gs
dec
pop
xchg
sub
jge
or
(bad)
test
std
loopne
adc
out
loop
(bad)
popa
std
loopne
adc
mov
in
lds
mov
cmps
lock
add
and
lock
and
mov
mov
mov
sub
(bad)
test
std
loopne
adc
out
std
dec
(bad)
popa
std
loopne
adc
mov
in
lds
mov
cmps
lock
add
and
lock
and
mov
mov
lock
sub
dec
mov
(bad)
dec
jp
add
loop
adc
int3
lock
ror
jl
cmp
ror
dec
mov
cmp
xlat
dec
xor
int3
adc
xchg
mov
dec
pmuludq
dec
(bad)
in
mov
xchg
cmp
dec
mov
gs
movs
mov
add
pop
jge
ror
or
bts
mov
sub
(bad)
test
inc
(bad)
xchg
dec
fsub
dec
jge
dec
gs
dec
gs
dec
gs
dec
movzx
and
nop
scas
dec
addr16
add
(bad)
in
mov
lods
jge
or
adc
xchg
jge
sbb
setne
mov
xchg
push
(bad)
ror
jge
cmp
adc
add
add
and
xchg
(bad)
inc
(bad)
gs
nop
adc
xchg
in
and
sub
adc
lock
(bad)
ins
mov
cmp
movs
lock
sub
in
and
scas
dec
addr16
sub
unpckhps
dec
paddw
pushf
adc
retf
gs
jp
outs
ins
jg
scas
dec
setne
nop
push
movs
mov
cmp
push
lods
dec
gs
dec
out
loop
cvtps2pi
mov
add
gs
idiv
in
and
pop
in
mov
pop
xchg
push
(bad)
xchg
mov
dec
(bad)
in
mov
jge
or
xchg
call
cmp
sbb
stos
loop
paddb
jb
jge
lds
mov
dec
gs
dec
gs
or
add
inc
iret
or
pop
push
es
shr
add
in
sbb
push
jno
mov
leave
enter
psadbw
inc
mov
in
dec
lar
retf
idiv
int3
popa
jl
dec
out
in
cmovo
dec
(bad)
jecxz
jae
in
dec
xor
dec
wbinvd
div
jl
dec
add
pop
inc
(bad)
shl
jge
inc
mov
in
dec
sete
(bad)
outs
jne
mov
push
and
nop
scas
dec
lock
or
adc
mov
sub
imul
jecxz
scas
dec
pop
xchg
push
stos
lock
hlt
imul
enter
repnz
lock
add
jb
ret
(bad)
in
lds
sub
lods
dec
out
loope
pcmpeqb
jp
imul
lock
test
cmp
lock
mov
or
rol
call
mov
push
jns
repnz
fisttp
(bad)
push
imul
repnz
mov
addr16
adc
and
xor
lock
cmp
xchg
sub
jge
mov
call
xchg
scas
dec
(bad)
push
jmp
lods
adc
or
cld
add
je
in
retf
sub
ins
jne
mov
jmp
out
pop
mov
and
jne
mov
loopne
cmp
sub
setne
scas
lock
enter
(bad)
gs
test
scas
jge
or
inc
test
dec
(bad)
xchg
data16
sete
or
in
mov
repnz
enter
dec
jge
or
or
mov
jne
pop
add
mov
xchg
add
lock
cmp
ror
jmp
cmp
inc
jmp
cmp
inc
jmp
cmp
inc
jmp
cmp
inc
jmp
cmp
inc
jmp
cmp
inc
jmp
cmp
inc
jmp
cmp
inc
jmp
inc
mov
mov
ins
add
add
ret
mov
jmp
cmp
inc
jmp
cmp
inc
jmp
cmp
pop
jge
cmp
(bad)
test
jp
add
add
leave
enter
paddd
repnz
mov
xor
idiv
enter
repnz
out
loopne
pmuludq
repnz
push
jnp
dec
mov
test
mov
lock
lods
dec
out
out
paddw
lock
jp
xchg
jge
pop
in
in
and
xchg
xchg
jge
jge
shr
dec
sete
cmps
pop
sbb
dec
test
in
mov
and
adc
lock
xor
sub
(bad)
jecxz
xchg
jge
dec
addr16
(bad)
imul
dec
push
rol
jl
mov
(bad)
and
dec
std
ror
or
push
gs
into
cld
aas
in
lds
cs
lahf
adc
retf
jno
mov
jge
cmp
unpckhps
mov
out
out
jb
in
mov
out
jmp
add
jge
scas
xchg
or
cmp
mov
cmp
sub
in
lds
sub
in
retf
retf
ins
test
mov
lock
lods
dec
out
in
paddw
lock
jp
xchg
jge
pop
in
in
and
xchg
xchg
jge
jge
fsubr
sete
lds
adc
mov
in
dec
jp
outs
mov
or
and
pop
in
and
xchg
scas
dec
gs
jge
jge
mov
popa
dec
or
xchg
push
inc
(bad)
add
mov
jge
jne
retf
imul
js
mov
adc
jae
shl
pop
xchg
jge
mov
setne
inc
(bad)
adc
fsubr
sete
(bad)
ins
int
adc
push
imul
lock
pop
andnps
idiv
enter
lock
cmp
mov
cmp
clc
sbb
cmps
jbe
dec
mov
in
dec
cmp
mov
cmp
xchg
inc
jge
cmc
push
adc
invd
int3
and
pop
in
and
xchg
scas
dec
gs
xor
cmp
pop
or
xchg
mov
add
shl
or
mov
sub
mov
lock
adc
dec
jge
int
adc
pop
xchg
(bad)
inc
(bad)
outs
mov
adc
popa
int
adc
pop
sbb
mov
jne
dec
pop
in
mov
sub
das
pop
in
and
adc
xchg
jb
dec
jb
in
mov
out
out
dec
pmuludq
div
sub
mov
lock
adc
dec
jge
int
adc
pop
xchg
ds
(bad)
outs
mov
adc
popa
int
adc
pop
sbb
mov
jne
dec
pop
in
mov
sub
das
pop
in
and
adc
xchg
(bad)
dec
jb
in
mov
out
out
dec
(bad)
popa
dec
lock
mov
adc
jnp
xchg
jge
js
aas
in
and
xchg
sahf
inc
(bad)
adc
shr
dec
sete
dec
(bad)
sub
lock
setbe
inc
mov
and
jl
mov
inc
fdiv
inc
aad
das
pop
in
and
adc
xchg
dec
in
jb
in
mov
out
out
dec
paddw
icebp
adc
test
adc
jge
gs
test
cmp
mov
cmp
sub
in
lds
sub
in
retf
retf
ins
test
mov
lock
lods
dec
out
jmp
paddw
lock
jp
xchg
jge
pop
out
in
and
xchg
push
dec
(bad)
adc
shr
dec
sete
int
adc
setbe
inc
mov
and
jl
mov
inc
fdiv
inc
aad
das
pop
in
and
adc
xchg
push
jmp
jb
in
mov
out
out
dec
paddw
icebp
adc
xor
mov
sub
cmp
cdq
mov
retf
jns
icebp
adc
int
inc
leave
loopne
ret
lock
clc
sbb
ds
scas
dec
cmp
mov
cmp
mov
in
and
pop
in
and
adc
test
mov
js
dec
xchg
sbb
clc
call
test
or
lock
jg
dec
gs
std
sti
adc
out
jmp
cmp
aas
in
dec
jp
popa
inc
aas
aam
dec
mov
in
dec
jp
mov
popa
(bad)
adc
pop
test
cmp
adc
(bad)
xchg
clc
sbb
lock
jge
std
sti
adc
out
jmp
mov
mov
in
lds
das
mov
mov
cs
sti
adc
out
jmp
lds
sub
pop
or
sbb
adc
xchg
dec
mov
adc
sti
adc
out
call
or
cmp
mov
gs
dec
gs
dec
gs
dec
(bad)
lods
and
(bad)
pmuludq
icebp
adc
loopne
scas
dec
(bad)
out
and
pop
in
mov
mov
mov
xchg
es
(bad)
popa
inc
lahf
iret
scas
dec
mov
in
dec
jp
mov
popa
(bad)
adc
pop
cs
mov
mov
mov
xchg
out
(bad)
xchg
clc
sbb
lock
jge
std
sti
adc
out
call
dec
div
sub
lock
outs
dec
(bad)
sub
mov
in
dec
mov
xchg
test
retf
aas
in
and
scas
dec
addr16
sub
unpckhps
dec
paddw
xchg
xchg
dec
in
dec
jge
lods
or
shl
or
mov
sub
lock
mov
jno
cmp
(bad)
mov
push
mov
pop
movaps
mov
addr16
mov
mov
call
dec
jno
dec
push
jge
inc
mov
adc
div
sub
jb
in
mov
fxch
mov
sbb
mov
jns
dec
xchg
xlat
jge
shr
jge
int3
scas
dec
out
call
enter
cmp
mov
jns
dec
xor
shl
jge
inc
lock
lock
dec
jge
and
jge
shl
adc
enter
stos
cmp
fldenv
cmp
mov
xor
(bad)
out
jge
inc
lock
int3
out
jge
jne
jge
lock
in
dec
clc
call
cmp
or
or
enter
or
jge
inc
lock
add
dec
jge
pop
or
jae
pop
inc
or
or
enter
or
jl
pop
lock
push
mov
jge
mov
div
sub
inc
fldenv
or
icebp
push
idiv
enter
mov
div
je
cmp
jae
push
inc
or
or
ret
adc
or
hlt
adc
div
sub
popa
dec
or
or
ret
adc
or
inc
fldenv
cmp
cmp
mov
pop
inc
or
or
ret
adc
or
inc
fxch
mov
div
push
mov
or
mov
imul
inc
pop
cs
or
mov
div
sub
push
es
dec
lock
in
dec
jge
fmul
jge
dec
lock
loopne
dec
jge
fmul
jge
dec
lock
cld
dec
dec
jge
fmul
jge
dec
lock
clc
dec
dec
jge
fmul
jge
dec
lock
int3
dec
dec
jge
fmul
jge
dec
lock
ror
jl
(bad)
in
dec
lock
fmul
jge
fmul
jge
dec
lock
fmul
jge
fmul
jge
dec
pop
hlt
or
pop
xchg
push
dec
(bad)
gs
pop
cmp
idiv
in
dec
mov
in
jnp
gs
jg
xchg
lock
jmp
iret
or
retf
neg
mov
mov
in
jnp
outs
mov
or
and
xchg
sub
jge
dec
pop
pop
in
sbb
xchg
add
push
cld
add
jge
gs
in
dec
mov
jne
ins
in
dec
jl
lds
jge
dec
test
enter
push
mov
adc
cmc
pop
(bad)
lock
mov
cmp
inc
cdq
not
fimul
jns
inc
(bad)
in
dec
lock
lods
dec
dec
jge
fmul
jge
dec
lock
test
dec
jge
fmul
jge
dec
lock
movs
dec
dec
jge
fmul
jge
dec
lock
mov
fmul
jge
dec
lock
mov
fmul
jge
dec
lock
mov
fmul
jge
dec
lock
mov
dec
jge
fmul
jge
dec
lock
mov
dec
jge
fmul
jge
dec
lock
mov
jge
fmul
jge
dec
lock
mov
jge
fmul
jge
dec
lock
test
jge
fmul
jge
dec
lock
or
jl
(bad)
in
dec
lock
pushf
dec
dec
jge
fmul
jge
dec
lock
cwde
dec
dec
jge
fmul
jge
dec
lock
xchg
dec
dec
jge
fmul
jge
dec
lock
nop
dec
dec
jge
fmul
jge
dec
lock
ins
dec
dec
jge
fmul
jge
dec
lock
push
fmul
jge
dec
lock
fs
dec
jge
fmul
jge
dec
lock
pusha
dec
dec
jge
fmul
jge
dec
lock
jl
dec
jge
fmul
jge
dec
lock
js
dec
jge
fmul
jge
dec
lock
je
dec
jge
fmul
jge
dec
lock
jo
dec
jge
fmul
jge
dec
lock
dec
dec
dec
jge
fmul
jge
dec
lock
dec
dec
dec
jge
fmul
jge
dec
lock
inc
dec
dec
jge
fmul
jge
dec
lock
inc
dec
dec
jge
fmul
jge
dec
lock
pop
dec
dec
jge
fmul
jge
dec
lock
pop
dec
dec
jge
fmul
jge
dec
lock
push
dec
dec
jge
fmul
jge
dec
lock
push
dec
dec
jge
fmul
jge
dec
lock
sub
dec
jge
fmul
jge
dec
lock
sub
jge
fmul
jge
dec
lock
and
dec
jge
fmul
jge
dec
lock
and
jge
fmul
jge
dec
lock
cmp
dec
jge
fmul
jge
dec
lock
cmp
jge
fmul
jge
dec
lock
xor
dec
jge
fmul
jge
dec
lock
xor
jge
fmul
jge
dec
lock
or
dec
jge
fmul
jge
dec
lock
or
jge
fmul
jge
dec
lock
add
dec
jge
fmul
jge
dec
lock
add
jge
fmul
jge
dec
lock
adc
dec
jge
fmul
jge
dec
lock
adc
jge
fmul
jge
dec
lock
in
dec
dec
jge
fmul
jge
dec
lock
call
fmul
jge
dec
lock
in
dec
jge
fmul
jge
dec
lock
loopne
dec
jge
fmul
jge
dec
lock
cld
dec
dec
jge
fmul
jge
dec
lock
clc
dec
dec
jge
fmul
jge
dec
lock
hlt
dec
dec
jge
fmul
jge
dec
lock
lock
dec
jge
fmul
jge
dec
lock
int3
dec
dec
jge
fmul
jge
dec
lock
enter
jl
(bad)
in
dec
lock
les
jl
(bad)
in
dec
lock
ror
fmul
jge
dec
lock
fmul
jl
(bad)
in
dec
lock
fmul
jl
(bad)
in
dec
lock
aam
dec
jge
fmul
jge
dec
lock
ror
jl
(bad)
in
dec
lock
lods
dec
dec
jge
fmul
jge
dec
lock
test
dec
jge
fmul
jge
dec
lock
movs
dec
dec
jge
fmul
jge
dec
lock
mov
fmul
jge
dec
lock
mov
fmul
jge
dec
lock
mov
fmul
jge
dec
lock
mov
dec
jge
fmul
jge
dec
lock
mov
dec
jge
fmul
jge
dec
lock
mov
jl
(bad)
in
dec
lock
mov
jl
(bad)
in
dec
lock
pushf
dec
dec
jge
fmul
jge
dec
lock
cwde
dec
dec
jge
fmul
jge
dec
lock
xchg
dec
dec
jge
fmul
jge
dec
lock
nop
dec
dec
jge
fmul
jge
dec
lock
ins
dec
dec
jge
fmul
jge
dec
lock
pusha
dec
dec
jge
fmul
jge
dec
lock
jl
dec
jge
fmul
jge
dec
lock
js
dec
jge
fmul
jge
dec
lock
je
dec
jge
fmul
jge
dec
lock
jo
dec
jge
fmul
jge
dec
lock
dec
dec
dec
jge
fmul
jge
dec
lock
dec
dec
dec
jge
fmul
jge
dec
lock
inc
dec
dec
jge
fmul
jge
dec
lock
inc
dec
dec
jge
fmul
jge
dec
lock
push
dec
dec
jge
fmul
jge
dec
lock
push
dec
dec
jge
fmul
jge
dec
lock
sub
dec
jge
fmul
jge
dec
lock
sub
jl
(bad)
in
dec
lock
and
dec
jge
fmul
jge
dec
lock
and
jl
(bad)
in
dec
lock
cmp
dec
jge
fmul
jge
dec
lock
cmp
jl
(bad)
in
dec
lock
xor
dec
jge
fmul
jge
dec
lock
xor
jl
(bad)
in
dec
lock
or
dec
jge
fmul
jge
dec
lock
or
jl
(bad)
in
dec
lock
add
dec
jge
fmul
jge
dec
lock
add
jl
(bad)
in
dec
lock
sbb
dec
jge
fmul
jge
dec
lock
sbb
jl
(bad)
in
dec
lock
adc
dec
jge
fmul
jge
dec
lock
adc
jl
(bad)
in
dec
