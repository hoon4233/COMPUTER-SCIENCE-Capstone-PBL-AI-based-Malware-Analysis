inc
mov
add
add
add
add
add
add
add
pop
add
add
add
fiadd
add
test
add
fsubr
or
add
xor
add
add
add
add
adc
add
push
sub
es
sub
or
add
cmp
and
add
add
jg
add
sub
add
push
cmp
add
and
push
add
sub
add
push
and
add
add
pop
add
add
xchg
add
add
mov
add
sub
add
push
and
add
add
add
cmp
add
add
add
cmp
add
add
add
jle
stc
popa
and
add
add
push
add
add
(bad)
(bad)
cmp
add
add
dec
add
dec
add
add
add
(bad)
push
(bad)
jmp
(bad)
inc
add
add
(bad)
(bad)
inc
add
and
add
add
sar
(bad)
inc
and
and
jmp
jmp
xchg
(bad)
(bad)
jmp
pop
add
add
or
add
and
add
add
add
xor
add
pop
add
add
fwait
(bad)
(bad)
jmp
add
xor
add
add
add
add
sub
es
add
sub
add
push
sub
xor
add
add
adc
add
push
and
mov
dec
inc
adc
and
add
dec
mov
sub
add
or
adc
add
adc
adc
pop
jae
add
or
pop
cmp
add
add
and
add
add
add
add
and
popf
les
pop
push
pop
inc
push
add
add
add
clc
add
add
add
sub
add
mov
(bad)
push
add
add
add
add
add
add
add
mov
add
(bad)
(bad)
(bad)
inc
add
add
and
add
pop
adc
pop
add
add
or
inc
add
cmp
add
add
push
adc
and
and
(bad)
mov
cmp
sub
add
push
or
add
add
cmp
add
add
or
inc
repnz
ret
outs
sub
pop
(bad)
(bad)
inc
or
adc
add
and
add
add
cmp
pop
push
adc
adc
or
adc
add
and
add
add
xchg
add
add
or
and
and
loop
inc
popa
cmp
(bad)
(bad)
inc
sub
add
push
pop
or
and
add
add
cmp
add
adc
and
xor
jg
jge
cmp
(bad)
(bad)
call
or
loope
outs
mov
dec
hlt
sbb
popa
cmp
(bad)
(bad)
call
add
aas
test
(bad)
call
sub
add
cmp
(bad)
(bad)
jmp
and
add
cmp
add
add
or
sahf
out
mov
(bad)
push
popa
cmp
adc
cmp
(bad)
jmp
add
push
or
dec
add
add
add
inc
add
dec
(bad)
(bad)
dec
(bad)
(bad)
jmp
add
das
add
add
add
add
(bad)
(bad)
inc
(bad)
(bad)
call
(bad)
(bad)
inc
call
(bad)
(bad)
jmp
(bad)
call
add
add
or
add
cmp
or
or
mov
pop
and
cmp
(bad)
inc
sub
add
push
adc
add
mov
(bad)
inc
jae
add
or
and
add
add
or
jbe
(bad)
jmp
adc
and
out
pop
and
pop
adc
(bad)
push
add
push
or
add
add
cmp
(bad)
call
or
ret
add
mov
(bad)
(bad)
inc
or
sbb
adc
add
and
add
add
sub
(bad)
jmp
cmp
cmp
adc
add
pop
aas
pop
bound
and
or
add
(bad)
jmp
adc
and
in
inc
pop
and
scas
aam
popa
cmp
push
sub
adc
or
add
add
sub
es
and
add
add
pop
add
pop
or
pop
pop
or
popa
sahf
adc
out
or
and
cmp
call
pop
pop
push
adc
pop
push
xchg
or
push
xchg
popa
sahf
and
and
mov
add
and
and
test
jno
cmp
pop
sbb
pop
sbb
sahf
and
add
add
lock
add
or
push
and
adc
rcr
cmp
add
add
pop
pop
adc
pop
xchg
or
xchg
popa
sahf
and
add
pop
cmp
add
add
adc
pop
push
mov
jno
popa
cmp
add
push
adc
add
mov
or
loope
loope
pop
and
(bad)
fwait
sub
cmp
sbb
pop
sbb
sahf
adc
sbb
pop
sbb
sahf
adc
jg
(bad)
movs
pop
and
cmp
add
sub
add
push
adc
adc
cmp
pop
cmp
cdq
scas
jle
popa
cmp
add
add
pop
pop
or
pop
pop
or
or
or
popa
sahf
cmp
and
add
add
sub
add
or
add
fidiv
and
in
popa
cmp
add
add
or
adc
adc
and
add
add
cmps
pop
mov
add
add
fld
cmc
push
and
add
adc
pop
pop
adc
adc
fisttp
xor
mov
cmp
add
adc
add
add
rol
add
or
pusha
rcr
sti
pop
and
lock
cmp
add
push
sbb
sub
add
push
adc
adc
gs
shl
pop
and
pushf
push
add
adc
adc
(bad)
(bad)
jmp
or
add
cmp
add
adc
pop
adc
or
xchg
test
or
sbb
sti
jbe
cmp
add
add
pop
pop
movups
pop
setne
pop
setne
and
add
add
or
add
cmp
add
adc
call
and
cmp
add
add
or
adc
add
add
add
or
add
sub
in
(bad)
jmp
and
add
add
or
pop
add
add
add
add
adc
cmc
mov
adc
push
add
add
pop
pop
or
pop
pop
or
popa
sahf
and
add
add
(bad)
add
add
or
into
push
pop
rcr
(bad)
daa
sub
cmp
add
and
push
adc
adc
add
cmp
or
jp
retf
and
cmp
add
add
or
adc
inc
add
and
add
add
cmp
and
sub
add
push
adc
adc
ja
mov
and
rcr
add
adc
adc
and
adc
pop
sbb
and
add
add
dec
add
add
adc
sahf
and
aas
add
add
popf
xchg
or
add
add
or
or
popa
or
add
cmp
add
add
adc
clc
xchg
pop
and
test
mov
add
jecxz
add
and
add
add
or
add
cmp
add
add
adc
add
(bad)
lahf
popa
cmp
adc
pop
add
and
add
or
add
add
and
add
add
ret
add
or
pop
adc
and
add
add
mov
add
adc
in
mov
pop
and
test
add
or
push
and
adc
pop
adc
and
add
add
test
add
adc
daa
mov
push
sub
push
add
add
or
(bad)
dec
add
and
cmp
add
add
adc
adc
add
and
add
push
add
push
or
adc
adc
add
or
pop
add
add
cmp
add
pop
adc
and
add
add
sub
popa
pop
add
cmp
add
add
add
add
es
add
add
pop
sbb
pop
sbb
or
add
add
add
add
and
push
dec
push
add
pop
adc
pop
adc
sahf
and
add
cmp
add
add
or
mov
and
cmp
add
or
pop
sbb
or
fs
or
add
mov
add
adc
fild
shr
dec
sahf
popa
cmp
add
adc
adc
xchg
adc
and
add
add
xchg
add
add
or
mov
and
scas
and
add
add
pop
sbb
pop
sbb
sahf
and
add
add
push
js
add
adc
pop
or
pop
pop
or
popa
sahf
adc
dec
(bad)
cmps
dec
pop
and
mov
cmp
add
add
adc
and
add
add
xor
add
adc
(bad)
cmp
outs
xchg
popa
cmp
add
add
or
push
and
adc
push
rcr
and
add
add
push
or
add
add
add
cli
(bad)
inc
cli
(bad)
dec
std
(bad)
(bad)
fdivrp
(bad)
jmp
(bad)
(bad)
cmp
(bad)
(bad)
(bad)
(bad)
jmp
(bad)
jmp
(bad)
(bad)
jmp
cli
(bad)
jmp
sti
(bad)
dec
add
add
add
add
(bad)
call
add
(bad)
(bad)
jmp
(bad)
inc
std
(bad)
inc
cli
(bad)
jmp
sti
(bad)
push
(bad)
call
cld
(bad)
(bad)
sti
(bad)
(bad)
push
add
add
(bad)
(bad)
jmp
sti
(bad)
dec
add
add
(bad)
(bad)
jmp
(bad)
jmp
add
and
add
add
pop
(bad)
(bad)
jmp
dec
mov
retf
and
adc
es
inc
add
add
std
(bad)
(bad)
fdivrp
(bad)
call
add
sbb
(bad)
inc
cli
(bad)
dec
(bad)
(bad)
jmp
(bad)
(bad)
std
stc
(bad)
call
cli
(bad)
jmp
add
add
(bad)
call
(bad)
call
sti
(bad)
inc
(bad)
jmp
(bad)
mov
(bad)
(bad)
call
std
(bad)
(bad)
fsqrt
(bad)
jmp
(bad)
(bad)
jns
(bad)
dec
cld
(bad)
push
(bad)
dec
(bad)
push
cld
(bad)
dec
cld
(bad)
inc
add
add
sti
(bad)
dec
(bad)
dec
cli
(bad)
dec
add
and
add
cmp
dec
lahf
pop
and
add
mov
cmp
(bad)
(bad)
call
pop
pop
or
xchg
or
or
and
add
push
cmp
(bad)
jmp
adc
push
daa
sbb
fmul
cmp
(bad)
(bad)
call
pop
sbb
or
pop
push
adc
push
xchg
or
xchg
popa
sahf
and
add
push
cmp
(bad)
(bad)
jmp
adc
inc
push
cmp
and
adc
(bad)
(bad)
call
pop
push
adc
push
xchg
or
xchg
popa
sahf
and
add
add
paddd
call
adc
and
add
(bad)
jmp
mov
push
add
add
pop
arpl
dec
and
(bad)
jmp
add
adc
push
add
add
add
add
push
add
mov
and
test
popa
adc
add
push
or
xchg
jecxz
stc
and
cdq
mov
adc
pop
divps
add
add
add
add
add
add
add
(bad)
(bad)
jmp
add
and
add
fadd
add
push
add
add
add
add
add
add
add
add
outs
add
add
add
adc
adc
and
psubsb
pop
jne
loop
cmp
add
add
and
loopne
jle
add
add
and
loopne
push
bound
add
add
and
loopne
pop
adc
jle
add
add
and
loopne
pop
sbb
adc
sbb
add
add
outs
add
add
adc
or
push
jle
add
add
adc
push
adc
pop
sub
add
or
push
movs
add
add
or
pop
and
xchg
mov
xor
cmp
and
(bad)
(bad)
aas
pop
adc
adc
and
daa
jmp
popa
cmp
(bad)
(bad)
inc
outs
pop
push
or
add
and
cmp
add
add
inc
loopne
jmp
(bad)
(bad)
(bad)
jle
add
add
and
loopne
jle
add
add
and
loopne
push
bound
add
add
and
loopne
pop
adc
jle
add
add
and
loopne
pop
sbb
adc
pop
and
mov
pop
and
bnd
popa
cmp
(bad)
call
lea
add
sbb
sbb
sbb
call
dec
push
mov
or
pop
and
fdiv
nop
push
aam
cmp
(bad)
call
pop
and
inc
jnp
pop
and
adc
jno
cmp
outs
push
push
or
add
and
cmp
add
add
neg
mov
(bad)
(bad)
inc
sbb
add
pop
and
and
std
std
(bad)
(bad)
jle
add
add
or
(bad)
sbb
add
sbb
push
add
or
pop
and
add
pop
pop
and
sahf
retf
xlat
std
(bad)
inc
outs
sbb
or
add
and
sti
cmp
push
add
add
ja
mov
adc
and
pusha
xor
popa
cmp
add
add
and
loopne
jle
add
add
and
loopne
push
bound
add
add
and
loopne
pop
adc
jle
add
add
and
loopne
pop
sbb
or
pop
add
or
add
add
or
add
or
or
add
movs
add
add
or
pop
and
mov
pop
and
aas
std
(bad)
inc
sub
xor
add
add
sub
es
add
push
fistp
retf
fsubr
(bad)
mov
inc
pop
loope
and
pop
inc
or
add
mov
add
add
add
add
add
add
add
iret
add
add
add
add
add
add
sub
add
push
outs
sbb
or
add
and
cmp
add
add
stos
mov
std
and
(bad)
inc
outs
pop
push
or
add
and
cmp
add
add
and
cs
adc
and
rcr
(bad)
(bad)
(bad)
jle
add
add
and
loopne
jle
add
add
and
loopne
push
bound
add
add
and
loopne
pop
adc
jle
add
add
and
loopne
pop
sbb
or
pop
and
ins
pop
ret
rcl
popa
cmp
(bad)
(bad)
inc
outs
push
push
or
add
and
lock
cwde
and
add
mov
ror
(bad)
inc
pop
push
or
pop
and
movs
fs
pop
and
xchg
pop
popa
cmp
(bad)
(bad)
(bad)
jle
add
add
and
loopne
jle
add
add
and
loopne
push
bound
add
add
and
loopne
pop
adc
jle
add
add
and
loopne
pop
sbb
adc
add
add
and
loopne
jle
add
add
and
loopne
push
bound
add
add
and
loopne
pop
adc
jle
add
add
and
loopne
pop
sbb
adc
sbb
add
add
outs
add
add
adc
or
push
jle
add
add
adc
push
adc
pop
sub
add
or
push
movs
add
add
or
pop
and
and
cmp
(bad)
(bad)
jmp
pop
add
or
add
add
or
add
or
or
add
movs
add
add
or
pop
and
js
test
in
sbb
popa
cmp
std
(bad)
call
add
adc
add
(bad)
(bad)
(bad)
aas
pop
adc
add
bound
add
pop
and
ins
aad
and
cmp
std
(bad)
call
lea
add
sbb
add
or
(bad)
sbb
add
sbb
push
add
or
push
mov
or
pop
and
repnz
stos
popa
cmp
sub
xor
add
add
add
add
push
add
das
mov
int3
jb
dec
popa
adc
and
xor
and
pop
inc
sldt
add
add
add
add
add
add
add
add
or
add
cmps
add
add
add
add
add
add
add
add
add
sbb
add
pop
add
add
je
add
adc
and
and
cmp
add
add
adc
push
adc
pop
sub
add
or
pop
and
sub
xor
xlat
adc
jbe
(bad)
inc
outs
sbb
or
add
and
cmp
add
add
test
jno
cmp
(bad)
call
add
adc
adc
and
sti
add
(bad)
mov
(bad)
inc
and
(bad)
(bad)
aas
pop
adc
add
bound
add
outs
pop
push
or
add
and
cmp
add
add
data16
jge
adc
and
cmp
cmp
(bad)
inc
outs
sbb
or
add
and
cmp
add
add
push
arpl
sbb
(bad)
(bad)
(bad)
jle
add
add
and
loopne
jle
add
add
and
loopne
push
bound
add
add
and
loopne
pop
adc
jle
add
add
and
loopne
pop
sbb
adc
sbb
add
add
outs
add
add
adc
or
push
adc
and
jmp
sti
pop
and
pop
inc
popa
cmp
(bad)
inc
pop
push
or
pop
and
xchg
inc
pop
and
mov
(bad)
(bad)
jle
add
add
and
loopne
jle
add
add
and
loopne
push
bound
add
add
and
loopne
pop
adc
jle
add
add
and
loopne
pop
sbb
adc
pop
and
xor
mov
(bad)
(bad)
call
push
movs
add
add
or
pop
and
fisttp
mov
in
popa
cmp
std
(bad)
call
lea
add
sbb
add
or
(bad)
sbb
add
sbb
push
add
or
pop
and
and
mov
(bad)
std
(bad)
dec
push
mov
or
pop
and
lds
and
cmp
add
add
and
loopne
jle
add
add
and
loopne
push
bound
add
add
and
loopne
pop
adc
jle
add
add
and
loopne
pop
sbb
or
pop
add
or
add
add
or
add
or
or
add
movs
add
add
or
pop
and
addr16
and
cmp
std
(bad)
inc
sub
xor
add
add
add
add
push
add
sbb
adc
pop
and
or
(bad)
and
and
loope
dec
popa
and
pop
inc
adc
add
and
add
add
add
add
add
add
add
lods
add
add
add
add
add
call
add
add
add
add
add
add
add
add
xchg
add
add
push
or
add
adc
adc
and
mov
push
repz
cmp
push
mov
or
pop
and
sbb
(bad)
(bad)
(bad)
jle
add
add
and
loopne
jle
add
add
and
loopne
push
bound
add
add
and
loopne
pop
adc
jle
add
add
and
loopne
pop
sbb
adc
add
add
and
loopne
jle
add
add
and
loopne
push
bound
add
add
and
loopne
pop
adc
jle
add
add
and
loopne
pop
sbb
adc
repz
retf
cmp
(bad)
(bad)
jmp
pop
add
or
add
add
or
add
or
or
add
movs
add
add
or
pop
and
and
cmp
outs
sbb
or
add
and
push
add
add
(bad)
loop
cmp
cmp
lea
add
sbb
aas
dec
pop
and
inc
jne
cmp
(bad)
(bad)
jle
add
add
and
loopne
jle
add
add
and
loopne
push
bound
add
add
and
loopne
pop
adc
jle
add
add
and
loopne
pop
sbb
or
pop
and
and
or
(bad)
popa
cmp
(bad)
(bad)
call
push
movs
add
add
or
pop
and
sub
pop
and
cmp
(bad)
(bad)
inc
outs
push
push
or
add
and
push
add
add
jmp
les
es
std
(bad)
inc
and
(bad)
(bad)
aas
pop
adc
adc
and
and
out
enter
std
(bad)
call
pop
and
out
lock
and
loope
push
popa
cmp
add
add
or
(bad)
sbb
add
sbb
push
add
or
pop
and
cld
imul
nop
dec
popa
cmp
add
add
sub
add
or
add
or
add
or
push
jle
add
add
adc
push
adc
pop
sub
add
or
pop
and
mov
pop
and
cmp
(bad)
inc
sbb
add
outs
sbb
or
add
and
or
add
and
les
and
xchg
int
rcr
cmp
std
(bad)
inc
sub
adc
push
add
add
add
add
push
add
sub
and
sbb
mov
pop
push
or
add
adc
and
jl
icebp
mov
pop
push
pop
inc
push
add
add
add
add
add
xor
add
test
add
pop
add
add
add
add
add
add
add
add
add
add
add
add
push
add
add
outs
push
push
or
add
and
dec
inc
out
cmp
add
add
movs
or
cmp
add
add
sub
add
or
add
or
add
or
push
adc
and
into
test
pop
and
cmp
(bad)
(bad)
jle
add
add
and
loopne
jle
add
add
and
loopne
push
bound
add
add
and
loopne
pop
adc
jle
add
add
and
loopne
pop
sbb
or
pop
and
dec
outs
pop
pop
and
ret
and
(bad)
(bad)
(bad)
jle
add
add
and
loopne
jle
add
add
and
loopne
push
bound
add
add
and
loopne
pop
adc
jle
add
add
and
loopne
pop
sbb
adc
pop
and
setbe
shl
sar
dec
push
mov
or
pop
and
test
and
sbb
popa
cmp
outs
sbb
or
add
and
cmp
add
add
ret
loope
call
(bad)
(bad)
call
lea
add
sbb
add
or
(bad)
sbb
add
sbb
push
add
or
pop
and
in
mov
and
dec
imul
inc
and
(bad)
(bad)
aas
pop
adc
add
bound
add
outs
pop
push
or
add
and
cli
pusha
jmp
cmp
add
add
aaa
inc
and
das
pop
scas
jmp
(bad)
jle
add
add
and
loopne
jle
add
add
and
loopne
push
bound
add
add
and
loopne
pop
adc
jle
add
add
and
loopne
pop
sbb
adc
adc
and
cmc
add
int
(bad)
jmp
pop
add
or
add
add
or
add
or
or
add
movs
add
add
or
pop
and
and
and
test
popa
cmp
push
movs
add
add
or
pop
and
jne
into
pop
and
cmp
add
add
adc
push
adc
pop
sub
add
or
pop
and
dec
ja
and
cmp
(bad)
inc
sub
add
sub
es
add
in
add
push
sub
sub
es
add
add
add
sub
xor
add
add
add
add
add
add
push
pop
sub
add
xor
add
add
add
add
add
add
push
push
sub
add
xor
add
add
add
add
add
add
push
add
or
add
or
add
or
add
sub
adc
or
push
add
add
add
add
add
push
dec
add
outs
or
add
sub
add
xor
add
add
add
add
add
add
push
dec
add
outs
or
add
sub
add
xor
add
add
add
add
push
dec
add
dec
add
dec
add
dec
add
dec
add
outs
das
add
push
sub
add
xor
add
add
add
add
add
add
push
dec
add
dec
add
outs
xor
add
sub
add
xor
sbb
add
add
add
sub
es
dec
add
dec
add
dec
add
dec
add
outs
or
add
adc
or
sldt
add
add
add
add
push
add
or
add
add
add
sub
adc
or
adc
add
add
add
sub
es
add
add
add
add
add
adc
or
fadd
add
push
add
adc
add
push
pop
sub
and
mov
cwde
fadd
add
add
jnp
add
add
bound
jnp
add
add
sbb
add
and
push
add
add
inc
pop
or
inc
sldt
add
add
rol
add
add
add
add
add
add
add
add
add
add
test
add
mov
add
mov
(bad)
push
add
add
add
add
add
add
add
sub
add
push
and
add
and
add
sbb
add
add
(bad)
(bad)
call
sub
add
es
or
xchg
add
add
add
add
add
add
add
sbb
add
add
sub
add
push
and
(bad)
call
inc
add
add
idiv
(bad)
jmp
and
push
and
dec
loop
es
and
cmps
shr
popa
sub
add
add
bound
add
add
or
xor
(bad)
inc
jnp
add
add
inc
popf
add
add
inc
add
add
idiv
(bad)
jmp
clc
in
mov
scas
xor
or
or
add
cwde
(bad)
(bad)
call
add
ret
(bad)
(bad)
(bad)
jnp
add
push
add
add
(bad)
(bad)
(bad)
mov
add
add
add
add
or
fsin
(bad)
inc
and
xor
add
sub
add
add
bound
jnp
add
add
sbb
add
and
push
add
add
or
jmp
adc
sub
and
push
xchg
and
lods
sbb
(bad)
(bad)
inc
and
add
pop
jge
add
add
push
cmp
(bad)
inc
and
repz
enter
(bad)
push
push
popa
cmp
(bad)
call
sub
pop
adc
cmp
(bad)
(bad)
inc
jnp
add
add
add
add
aaa
lods
sbb
add
add
idiv
(bad)
call
cmp
(bad)
(bad)
inc
and
leave
popf
and
popa
cmp
(bad)
(bad)
inc
and
add
pop
jge
add
add
and
add
jnp
add
add
fs
jge
add
add
cmp
std
(bad)
inc
jnp
add
add
or
add
add
or
sub
add
push
and
(bad)
call
idiv
(bad)
jmp
add
add
bound
add
add
dec
(bad)
(bad)
jmp
push
cmp
pop
add
add
add
add
inc
push
(bad)
(bad)
call
add
(bad)
(bad)
call
cmp
inc
add
add
idiv
(bad)
jmp
sub
add
jge
add
add
sub
add
push
and
(bad)
call
inc
add
add
idiv
(bad)
jmp
and
add
(bad)
call
sub
xor
add
add
add
add
add
add
push
pop
sub
add
xor
add
add
add
add
add
add
push
push
sub
add
xor
add
add
add
add
push
add
add
or
add
xor
and
add
add
add
sub
es
sub
es
add
jge
add
add
pop
add
pop
pop
bound
jge
add
add
add
add
xor
push
add
add
add
adc
add
push
sbb
pop
pop
and
leave
mov
and
mov
add
add
jnp
add
add
loopne
add
add
sub
sub
cmp
add
add
outs
pop
add
add
add
pop
pop
bound
lods
add
add
add
(bad)
(bad)
call
sub
add
cmp
or
inc
or
add
cmp
add
aas
add
add
add
test
(bad)
call
add
add
sub
add
push
and
inc
add
add
idiv
(bad)
jmp
sub
xchg
je
and
sbb
add
add
add
(bad)
dec
add
push
(bad)
(bad)
(bad)
fdivr
(bad)
(bad)
cmp
jmp
sbb
xchg
pop
or
sub
add
push
and
inc
add
add
idiv
(bad)
jmp
sbb
jbe
(bad)
jmp
je
mov
and
and
and
pop
pop
or
cmp
(bad)
jmp
sub
out
sub
xor
pop
add
add
add
adc
add
push
pop
cmp
add
add
and
test
clc
pop
and
adc
and
and
add
add
inc
add
add
idiv
(bad)
call
sub
add
es
cmp
add
add
sar
dec
push
and
cmp
popa
and
pop
add
add
(bad)
(bad)
(bad)
call
add
add
add
add
add
add
add
sbb
cmp
inc
add
add
idiv
(bad)
jmp
or
addr16
pop
and
cmp
ja
(bad)
jmp
push
sub
add
push
and
inc
add
add
idiv
(bad)
jmp
dec
pop
or
add
add
pop
bound
jnp
add
add
loopne
add
add
add
push
add
push
and
sub
and
retf
xor
arpl
(bad)
dec
and
xor
fst
popa
cmp
(bad)
inc
jnp
add
add
sub
or
add
call
(bad)
(bad)
jmp
(bad)
(bad)
call
(bad)
jmp
call
(bad)
call
(bad)
(bad)
call
add
add
sub
add
push
and
(bad)
call
inc
add
add
idiv
(bad)
jmp
sbb
mov
jae
sub
and
xlat
jb
es
(bad)
(bad)
inc
pop
add
add
add
pop
pop
bound
add
xor
xchg
add
add
add
adc
add
push
pop
sub
add
push
and
add
sbb
add
add
idiv
(bad)
call
sub
add
es
cmp
add
add
mov
or
sub
or
pop
or
cmp
add
add
or
cmp
add
add
retf
mov
and
add
pop
inc
or
add
retf
(bad)
(bad)
call
add
add
add
add
add
jl
add
inc
add
pop
add
mov
or
lods
add
add
add
int3
neg
xchg
dec
lods
popa
sub
add
add
rol
add
sbb
add
add
(bad)
(bad)
call
add
or
or
ja
add
pop
or
pop
pop
pop
bound
pop
or
and
add
and
inc
add
add
idiv
(bad)
jmp
push
cmp
or
add
sbb
dec
adc
(bad)
adc
js
mov
(bad)
(bad)
call
add
arpl
xchg
rcr
(bad)
inc
les
inc
(bad)
(bad)
inc
jnp
add
add
loopne
add
add
add
push
add
push
and
bound
cmp
(bad)
call
adc
add
add
(bad)
(bad)
(bad)
(bad)
(bad)
dec
(bad)
(bad)
call
(bad)
(bad)
(bad)
jnp
(bad)
dec
(bad)
inc
add
add
push
jmp
(bad)
(bad)
call
add
add
sub
and
aas
out
sub
and
es
(bad)
(bad)
inc
or
push
sub
or
fs
mov
(bad)
inc
sub
xor
test
add
adc
add
push
sbb
mov
add
or
or
mov
push
pop
mov
shl
daa
xchg
and
add
cmps
xor
and
ret
popa
sub
push
or
pop
sbb
xchg
add
add
add
push
jg
rcr
and
popa
sub
push
pop
bound
push
or
pop
sub
in
cmp
and
push
mov
pop
or
or
add
add
add
add
add
add
add
(bad)
(bad)
push
(bad)
(bad)
inc
(bad)
(bad)
call
sub
add
push
and
inc
add
add
idiv
(bad)
call
sub
add
es
movs
call
mov
popf
or
pop
or
mov
add
sbb
add
add
add
add
add
add
cmp
(bad)
(bad)
aas
add
add
add
add
(bad)
(bad)
push
(bad)
(bad)
dec
(bad)
(bad)
call
(bad)
inc
add
add
sub
pop
or
or
ret
and
and
fsincos
sbb
cmp
(bad)
(bad)
inc
add
pop
loopne
add
add
add
push
add
push
and
pop
sub
add
add
(bad)
(bad)
jmp
sub
or
pop
pop
pop
bound
push
cmp
(bad)
call
add
sub
and
popa
int
popa
cmp
(bad)
(bad)
dec
add
call
inc
add
add
idiv
(bad)
jmp
pop
add
push
and
add
and
(bad)
call
inc
add
add
idiv
(bad)
jmp
push
cmp
(bad)
(bad)
jmp
jp
fs
mov
sub
add
adc
or
push
add
add
add
add
add
push
pop
sub
add
xor
add
add
add
add
add
add
push
push
sub
add
xor
add
add
add
add
adc
add
push
sub
es
add
sub
add
sub
adc
or
jb
add
or
add
sub
es
sbb
nop
add
add
and
and
sub
add
add
bound
jnp
add
add
or
add
and
push
add
add
sub
pushf
ficomp
and
mov
or
add
sar
(bad)
dec
add
add
add
add
add
add
add
add
push
sub
sbb
add
add
(bad)
(bad)
call
sub
add
es
and
and
ins
pop
and
xor
scas
push
or
jae
(bad)
call
or
inc
or
add
sub
add
test
add
outs
(bad)
(bad)
call
add
inc
add
add
add
add
add
add
(bad)
(bad)
push
add
add
sub
pop
and
and
arpl
dec
popa
cmp
(bad)
inc
sbb
jle
add
pop
inc
add
add
idiv
(bad)
call
or
movs
and
loop
dec
cmp
(bad)
(bad)
inc
pop
pop
or
xchg
sub
adc
add
ins
(bad)
(bad)
jmp
pop
or
jle
(bad)
inc
add
add
add
daa
add
push
and
add
and
inc
add
add
idiv
(bad)
jmp
sbb
(bad)
call
inc
add
add
idiv
(bad)
jmp
add
jge
add
add
cmp
fsubr
jmp
sub
and
scas
jg
and
(bad)
jmp
add
adc
or
adc
add
add
add
sub
es
add
add
add
or
add
adc
or
add
add
adc
add
push
pop
sub
add
push
and
add
pop
inc
add
add
idiv
(bad)
call
sub
add
es
inc
push
and
clc
loopne
pop
and
sub
jnp
add
add
add
add
inc
mov
add
sbb
add
add
(bad)
(bad)
call
sbb
inc
mov
push
sub
add
add
bound
add
add
mov
pop
add
add
add
add
(bad)
(bad)
inc
add
add
add
add
add
sub
sub
jg
jecxz
popa
pop
popa
and
add
(bad)
(bad)
call
add
jnp
(bad)
dec
add
fdivr
(bad)
jmp
adc
sbb
sub
pop
inc
add
add
idiv
(bad)
jmp
sub
add
add
add
bound
jnp
add
add
or
add
and
push
add
add
cmp
(bad)
jmp
sub
fs
adc
sub
adc
or
push
add
or
add
sub
es
sbb
aad
add
add
jge
add
add
(bad)
add
add
pop
xchg
and
mov
adc
add
push
and
add
add
add
sbb
add
add
(bad)
(bad)
call
sub
add
es
or
add
sbb
add
add
(bad)
(bad)
jmp
push
or
cmp
add
push
push
bound
sbb
jae
icebp
outs
and
add
adc
rcr
push
arpl
popa
cmp
add
pop
push
bound
jnp
add
add
sub
add
and
pop
or
aas
add
cmp
and
push
popa
cmp
add
add
pop
bound
adc
pusha
or
add
cli
pop
and
cmp
add
add
pop
pop
or
add
push
adc
inc
adc
add
jl
(bad)
inc
add
out
add
add
(bad)
(bad)
inc
add
dec
add
add
(bad)
inc
(bad)
inc
(bad)
push
add
add
add
add
add
add
(bad)
(bad)
inc
add
or
mov
add
in
and
sub
push
jge
add
add
(bad)
(bad)
(bad)
jmp
pop
or
daa
add
push
and
inc
add
add
idiv
(bad)
jmp
and
push
scas
and
dec
push
pop
or
cmp
(bad)
inc
jnp
add
add
pop
sub
add
push
and
inc
add
add
idiv
(bad)
jmp
push
pop
cmp
(bad)
call
inc
add
add
idiv
(bad)
jmp
pop
push
pop
pop
pop
adc
jmp
cmp
int
and
imul
and
pop
inc
or
add
out
(bad)
(bad)
js
(bad)
jmp
add
add
(bad)
(bad)
call
(bad)
(bad)
(bad)
cmp
add
mov
(bad)
(bad)
dec
(bad)
(bad)
(bad)
cmp
(bad)
dec
push
cmp
sbb
add
add
(bad)
(bad)
call
push
cmp
(bad)
(bad)
call
inc
add
add
idiv
(bad)
jmp
adc
in
pop
and
jge
mov
mov
jnp
add
add
pop
push
push
cmp
inc
add
add
idiv
(bad)
jmp
and
test
and
ins
out
and
out
inc
cmp
popa
cmp
inc
push
adc
pop
pop
pop
or
cmp
(bad)
dec
sub
add
xor
add
add
add
add
add
add
push
pop
sub
add
xor
add
add
add
add
add
add
push
push
sub
add
xor
add
add
add
add
push
add
add
or
add
xor
add
add
add
add
add
add
push
add
push
add
or
add
xor
add
add
add
add
adc
add
push
sub
es
sbb
sub
add
and
aam
cmp
add
add
and
or
inc
pop
and
jae
popa
cmp
add
add
pop
pop
or
and
mov
mov
mov
add
push
push
push
xchg
add
add
inc
add
add
idiv
(bad)
call
sub
add
es
adc
cmp
add
add
add
(bad)
(bad)
jmp
push
or
push
cmp
pop
jb
lea
add
add
add
add
cmp
jae
add
push
jge
add
add
fbld
sbb
xchg
add
add
sub
add
push
pop
or
add
pop
or
lea
add
add
add
add
adc
xor
add
and
inc
add
add
idiv
(bad)
jmp
add
rol
add
lea
add
add
add
add
pop
or
lea
add
add
add
add
or
inc
pop
and
sub
cwde
cmp
mov
add
add
add
add
pop
add
add
sbb
add
add
adc
adc
add
add
jge
add
add
popf
add
add
or
inc
adc
add
xchg
(bad)
(bad)
inc
(bad)
(bad)
fadd
add
add
(bad)
jmp
add
inc
add
add
(bad)
(bad)
dec
(bad)
(bad)
mov
(bad)
(bad)
inc
add
add
(bad)
(bad)
push
add
add
add
imul
(bad)
inc
(bad)
(bad)
call
add
add
add
sbb
test
sbb
add
push
jge
add
add
or
cwde
add
add
push
jge
add
add
jae
add
push
jge
add
add
sub
add
and
(bad)
call
add
(bad)
(bad)
(bad)
cmp
(bad)
inc
jae
add
push
jge
add
add
pop
cmp
call
add
(bad)
(bad)
jmp
and
(bad)
mov
dec
lds
or
add
or
(bad)
(bad)
inc
add
add
(bad)
(bad)
(bad)
sti
std
(bad)
jmp
(bad)
(bad)
(bad)
cmp
add
add
adc
add
or
xor
add
and
(bad)
call
inc
add
add
idiv
(bad)
(bad)
cmp
(bad)
(bad)
inc
pop
or
lea
add
add
add
add
movhps
(bad)
(bad)
call
inc
add
add
idiv
(bad)
jmp
add
rol
add
lea
add
add
add
add
xor
add
and
add
and
(bad)
call
inc
add
add
idiv
(bad)
jmp
pop
adc
xor
add
and
(bad)
call
inc
add
add
idiv
(bad)
jmp
add
add
push
jge
add
add
or
jne
(bad)
inc
pop
or
lea
add
add
add
add
cmp
(bad)
jmp
test
and
mov
or
(bad)
jmp
add
adc
or
pop
add
add
add
adc
add
push
sub
add
push
and
add
and
add
sbb
add
add
(bad)
(bad)
call
sub
add
es
cmp
add
add
idiv
(bad)
jmp
and
hlt
and
arpl
popa
and
push
add
add
add
ins
add
add
(bad)
(bad)
call
add
add
add
add
cmp
jnp
add
add
cmp
add
add
inc
add
add
idiv
(bad)
call
xchg
add
cmp
add
add
add
add
add
cmp
add
and
and
test
add
jnp
add
add
sub
es
add
add
sub
and
mov
mov
(bad)
inc
jnp
add
add
add
add
sub
or
mov
sbb
or
and
inc
(bad)
(bad)
inc
jnp
add
add
outs
pop
add
push
sub
or
add
xor
(bad)
(bad)
push
(bad)
(bad)
push
(bad)
inc
(bad)
(bad)
jmp
(bad)
dec
add
add
pop
sub
add
add
(bad)
(bad)
jmp
pop
and
push
es
and
out
(bad)
jmp
adc
or
adc
add
add
add
sub
es
add
add
add
add
add
push
sub
add
xor
add
add
add
add
adc
add
push
sbb
into
add
add
add
pop
pop
bound
pop
sub
add
and
add
sbb
add
add
(bad)
(bad)
call
sub
add
es
add
add
sub
add
push
sub
add
push
and
add
and
add
sbb
add
add
(bad)
(bad)
jmp
sbb
xor
add
and
add
sbb
add
add
idiv
(bad)
jmp
arpl
push
add
add
add
outs
inc
add
push
sbb
push
pop
and
pop
xchg
pop
and
sub
add
pop
pop
jge
add
add
sub
add
and
inc
add
add
idiv
(bad)
jmp
and
(bad)
jmp
xchg
popa
and
add
add
loopne
(bad)
jmp
(bad)
jmp
sub
or
inc
or
add
js
(bad)
push
(bad)
(bad)
inc
add
add
(bad)
(bad)
push
add
add
jae
(bad)
jmp
push
sub
sub
adc
or
ret
add
add
adc
add
push
pop
or
sub
add
add
(bad)
(bad)
call
sub
add
es
sbb
mul
xchg
jp
and
add
push
pop
or
add
add
sbb
add
add
(bad)
(bad)
(bad)
cmp
add
add
or
add
add
sbb
add
lahf
add
add
add
add
add
add
add
add
loope
add
xchg
add
add
add
add
add
fild
add
and
add
push
add
add
add
add
(bad)
jmp
add
repnz
add
add
add
add
add
add
add
add
mov
add
nop
add
add
add
pop
adc
xor
add
and
inc
add
add
idiv
(bad)
jmp
add
add
add
loopne
add
add
sub
cmp
(bad)
inc
jnp
add
add
loopne
add
add
sub
and
cmp
xor
and
mov
sti
popa
cmp
add
add
or
sub
add
push
and
(bad)
call
inc
add
add
idiv
(bad)
jmp
or
int3
push
scas
sahf
pop
and
mov
test
add
or
mov
and
cmp
or
movs
add
add
sbb
xor
add
and
(bad)
call
inc
add
add
idiv
(bad)
jmp
or
xchg
out
fisub
cwde
mov
cmp
add
jnp
add
add
loopne
add
add
sub
add
push
push
pop
pop
or
or
mov
jnp
add
add
sub
add
push
pop
adc
test
jnp
add
add
loopne
add
add
sub
push
cmp
inc
add
add
idiv
(bad)
jmp
and
test
inc
add
add
add
add
loopne
add
add
sub
pop
pop
or
and
lods
push
ficomp
outs
cmps
js
popa
cmp
add
add
pop
jb
and
(bad)
call
idiv
(bad)
call
push
cmp
(bad)
(bad)
dec
and
and
adc
loop
cmp
pop
pop
or
adc
sbb
mov
leave
movs
and
xchg
xchg
mov
add
push
sbb
pop
or
adc
cld
std
(bad)
dec
and
sub
cmp
addr16
sub
jnp
add
add
cmp
add
pop
push
cmp
std
(bad)
dec
and
adc
and
add
jmp
dec
add
add
add
cmp
add
pop
adc
mov
mov
xlat
(bad)
sub
push
or
(bad)
std
(bad)
dec
and
jl
fistp
test
sub
add
add
add
loopne
add
add
sub
or
cmp
jmp
cmp
mov
lahf
popa
and
inc
pop
add
add
add
add
(bad)
(bad)
call
(bad)
push
cld
(bad)
push
std
(bad)
call
add
add
add
add
(bad)
(bad)
inc
(bad)
call
std
(bad)
inc
(bad)
(bad)
cmp
add
and
(bad)
inc
(bad)
(bad)
(bad)
cmp
add
mov
add
add
(bad)
(bad)
jmp
add
sbb
cmp
std
(bad)
call
inc
add
add
idiv
(bad)
jmp
cmp
add
add
add
add
add
add
add
cmp
add
or
fnstsw
fsubr
pop
(bad)
(bad)
inc
pop
pop
or
xor
add
and
add
and
(bad)
call
inc
add
add
idiv
(bad)
jmp
push
sub
add
push
and
(bad)
call
inc
add
add
idiv
(bad)
jmp
or
sbb
lods
fcomp
jle
inc
adc
or
jl
add
add
sbb
add
pop
or
js
(bad)
inc
jnp
add
add
loopne
add
add
sub
or
jmp
adc
(bad)
(bad)
call
or
adc
push
and
(bad)
call
add
(bad)
(bad)
jmp
or
ror
inc
pop
and
in
or
popa
cmp
jnp
add
add
cmp
add
push
pop
cmp
cld
(bad)
call
add
(bad)
(bad)
jmp
or
push
hlt
mov
and
fidivr
(bad)
(bad)
inc
sbb
sbb
add
(bad)
(bad)
jmp
xchg
outs
cs
mov
cmp
(bad)
inc
add
add
add
adc
inc
add
add
idiv
(bad)
jmp
arpl
xchg
jecxz
mov
cmp
(bad)
(bad)
inc
jnp
add
add
loopne
add
add
sub
pop
cmp
xor
(bad)
(bad)
jmp
add
adc
push
add
add
add
sub
es
sbb
add
sar
and
xchg
xor
in
adc
int
add
push
or
psubusw
and
cmp
jnp
add
add
add
add
add
pop
add
add
jnp
add
add
push
add
push
and
inc
add
add
idiv
(bad)
call
sub
add
es
and
popa
and
inc
xchg
and
add
adc
sub
push
pop
push
cmp
push
add
sbb
cwde
push
add
adc
and
jo
adc
dec
cli
mov
popa
cmp
add
adc
(bad)
(bad)
call
inc
add
add
idiv
(bad)
call
sbb
cmp
add
sbb
add
add
(bad)
(bad)
jmp
adc
and
ret
xchg
pop
and
jns
or
pop
add
add
adc
push
pop
pop
pop
bound
pop
or
cmp
add
and
pusha
jnp
sub
and
sbb
and
add
adc
and
and
shl
lds
int3
add
add
or
pop
push
add
and
push
add
add
add
add
add
push
sbb
and
sbb
or
rcl
add
add
or
add
mov
xchg
popa
cmp
or
sub
mov
mov
push
(bad)
fstp
inc
cmp
add
add
jnp
add
add
or
inc
add
push
and
popa
pop
xor
push
add
add
add
add
jnp
add
add
sbb
es
or
push
cmp
add
adc
and
and
cmp
add
add
jnp
add
add
add
add
add
bound
or
pop
add
add
jnp
add
add
push
add
push
and
inc
add
add
idiv
(bad)
jmp
inc
sub
and
push
and
adc
and
adc
popa
cmp
add
add
mov
call
add
popa
cmp
add
add
cmc
add
add
idiv
(bad)
jmp
and
dec
cmp
jae
inc
and
add
adc
sub
add
adc
and
mov
xchg
lods
popa
cmp
add
or
add
push
cmp
inc
add
add
idiv
(bad)
jmp
adc
and
xor
test
ins
push
jmp
add
jnp
add
add
sub
add
push
and
xor
add
and
add
and
add
sbb
add
add
(bad)
(bad)
jmp
pop
sub
xor
add
and
add
sbb
add
add
(bad)
(bad)
jmp
and
sub
aas
cmp
add
add
add
add
add
or
add
add
(bad)
(bad)
call
cmp
add
add
jnp
add
add
add
add
add
bound
or
pop
add
add
jnp
add
add
push
add
push
and
add
sbb
add
add
(bad)
(bad)
call
pop
cmp
add
add
inc
add
add
idiv
(bad)
jmp
and
cmps
dec
and
xor
add
add
add
or
daa
push
cmp
add
add
inc
add
add
idiv
(bad)
jmp
and
sub
sub
jnp
add
add
add
add
add
pop
add
add
jnp
add
add
push
add
push
and
inc
add
add
idiv
(bad)
jmp
stc
popf
out
and
inc
data16
adc
and
popa
sub
or
and
sbb
adc
es
cmp
add
sbb
add
add
(bad)
(bad)
jmp
and
dec
repz
and
pop
inc
cmp
add
test
(bad)
call
add
add
pop
push
add
cwde
sti
(bad)
push
add
nop
std
(bad)
jmp
(bad)
(bad)
push
push
add
fld
(bad)
(bad)
jg
(bad)
jmp
cld
(bad)
inc
add
or
add
pop
add
add
add
(bad)
add
add
add
mov
sti
(bad)
dec
(bad)
(bad)
jmp
add
add
(bad)
inc
(bad)
(bad)
jmp
push
add
and
add
sub
add
add
popf
(bad)
(bad)
dec
add
dec
std
(bad)
dec
add
add
sti
(bad)
(bad)
add
add
(bad)
inc
cld
(bad)
push
(bad)
call
add
dec
sti
(bad)
push
std
(bad)
inc
add
add
add
add
add
add
(bad)
(bad)
(bad)
cmp
(bad)
jmp
add
add
(bad)
push
push
add
or
add
add
sub
inc
add
add
add
add
add
add
idiv
(bad)
jmp
and
ficom
sbb
fdivr
(bad)
call
mov
cmpxchg
and
hlt
xchg
leave
(bad)
(bad)
call
add
add
add
add
idiv
(bad)
call
or
add
jnp
add
add
or
cmp
es
add
add
add
add
add
sbb
add
and
mov
ds
sbb
imul
inc
adc
call
inc
add
add
idiv
(bad)
call
and
xor
add
and
add
sbb
add
add
idiv
(bad)
jmp
and
test
and
xor
mov
ficomp
dec
pop
popa
cmp
(bad)
(bad)
call
add
add
add
adc
pop
das
cmp
add
adc
and
leave
adc
and
add
(bad)
(bad)
inc
jnp
add
add
jnp
add
add
add
push
add
push
and
sub
add
and
add
sbb
add
add
(bad)
(bad)
(bad)
cmp
add
add
mov
jp
mov
pop
add
sar
call
or
pop
cmp
add
add
inc
add
add
idiv
(bad)
jmp
and
sub
and
imul
adc
and
push
rcr
cmp
jnp
add
add
add
add
add
(bad)
loopne
add
add
add
add
add
push
add
push
and
and
and
mov
call
or
or
xor
xchg
add
add
mov
adc
sbb
sub
mov
(bad)
inc
jnp
add
add
inc
add
push
sbb
xor
add
and
inc
add
add
idiv
(bad)
jmp
popa
add
add
add
jnp
add
add
sub
add
push
and
add
pop
sbb
inc
cmp
add
adc
sub
add
pop
and
sub
mov
sub
and
sub
adc
and
popa
cmp
cld
(bad)
inc
jnp
add
add
pop
sub
add
cmp
std
(bad)
call
inc
xor
add
nop
cli
(bad)
inc
(bad)
(bad)
(bad)
fdivr
(bad)
(bad)
mov
add
add
(bad)
(bad)
inc
add
add
(bad)
call
add
add
cld
(bad)
call
add
add
add
add
(bad)
(bad)
call
(bad)
push
stc
(bad)
call
add
(bad)
clc
(bad)
(bad)
js
(bad)
dec
(bad)
call
std
(bad)
(bad)
jmp
std
(bad)
jmp
add
add
clc
(bad)
call
add
add
sti
(bad)
(bad)
clc
add
add
cli
(bad)
(bad)
mov
add
add
add
mov
add
xchg
clc
(bad)
(bad)
jns
add
jmp
jmp
add
xor
add
mov
add
add
sti
(bad)
dec
add
pop
or
cmp
(bad)
(bad)
call
inc
add
add
idiv
(bad)
jmp
add
add
add
inc
add
push
pop
and
cmp
(bad)
(bad)
call
add
(bad)
(bad)
jmp
adc
and
and
cmp
(bad)
call
or
add
sbb
add
(bad)
(bad)
call
sub
(bad)
(bad)
call
mov
or
loop
in
popa
cmp
or
mov
lea
test
and
cmp
(bad)
inc
jnp
add
add
adc
sub
push
adc
adc
cmp
(bad)
call
add
imul
push
cmp
stc
(bad)
jmp
pop
sub
call
mov
dec
hlt
add
adc
xchg
and
es
(bad)
inc
jnp
add
add
jnp
add
add
or
add
push
and
or
adc
cmp
(bad)
call
inc
add
add
idiv
(bad)
jmp
and
pusha
popa
and
adc
dec
and
lea
cmp
cli
(bad)
inc
add
add
add
adc
jnp
add
add
push
sub
add
push
and
mov
cmc
push
jg
and
mov
lods
cli
(bad)
call
add
ins
add
push
and
(bad)
call
add
(bad)
(bad)
call
and
sar
(bad)
inc
jnp
add
add
jnp
add
add
push
outs
push
add
push
and
adc
mov
(bad)
call
mov
mov
sub
lods
popa
cmp
call
or
adc
adc
and
or
push
cdq
scas
push
popa
cmp
(bad)
inc
jnp
add
add
add
add
add
pop
add
add
jnp
add
add
push
add
push
and
inc
add
add
idiv
(bad)
call
or
push
std
(bad)
call
mov
jle
sub
inc
push
and
cmp
stc
(bad)
call
add
imul
sub
add
push
and
(bad)
call
inc
add
add
idiv
(bad)
jmp
and
or
sub
and
jp
and
(bad)
inc
jnp
add
add
jnp
add
add
add
jnp
add
add
sub
add
push
and
add
and
mov
sbb
fwait
es
cmp
adc
add
inc
add
push
pop
sbb
xor
add
and
(bad)
call
inc
add
add
idiv
(bad)
jmp
add
add
add
push
pop
pop
cmp
add
push
add
pop
sbb
cmp
inc
add
add
idiv
(bad)
jmp
push
or
mov
cld
xor
pop
and
cmp
stc
(bad)
call
mov
(bad)
or
and
add
(bad)
call
mov
das
sbb
and
lock
mov
(bad)
call
add
add
add
jnp
add
add
or
cmp
add
and
pop
sbb
sub
(bad)
jmp
rcl
and
jae
inc
and
(bad)
call
or
sbb
or
(bad)
jmp
and
pop
cmp
mov
mov
icebp
imul
or
(bad)
call
add
add
sti
(bad)
jmp
mov
xchg
clc
(bad)
call
add
cli
(bad)
call
inc
add
add
idiv
(bad)
call
cmp
adc
and
xor
add
and
(bad)
call
inc
add
add
idiv
(bad)
jmp
and
mov
cmp
(bad)
inc
outs
adc
call
inc
add
add
idiv
(bad)
call
adc
jle
(bad)
jmp
jecxz
mov
and
cmp
adc
pop
sub
add
and
(bad)
call
inc
add
add
idiv
(bad)
jmp
adc
(bad)
adc
pop
sbb
call
mov
jle
ins
pop
and
jae
mov
out
(bad)
inc
jnp
add
add
add
add
add
pop
add
add
jnp
add
add
push
add
push
and
idiv
call
inc
add
add
idiv
(bad)
call
movhps
hlt
cli
(bad)
call
inc
add
add
idiv
(bad)
jmp
adc
and
and
rcr
jmp
adc
or
fiadd
add
or
add
push
sbb
cmp
inc
add
add
idiv
(bad)
call
sub
add
es
pop
pop
adc
add
add
xchg
pop
or
sbb
push
add
add
imul
add
add
sbb
add
add
(bad)
(bad)
call
push
cmp
add
add
inc
add
add
idiv
(bad)
jmp
adc
and
movs
add
pushf
push
push
popa
sub
sbb
adc
and
and
sub
push
adc
add
push
and
and
dec
or
push
add
add
sub
add
sub
sbb
fadd
add
and
enter
in
std
xchg
popa
and
pop
inc
or
add
(bad)
(bad)
(bad)
push
add
xor
(bad)
dec
add
add
call
add
mov
(bad)
call
cmp
or
sub
add
add
sub
or
add
push
and
mov
pop
inc
xor
lahf
adc
pop
adc
push
pop
pop
pop
pop
bound
add
or
pop
add
xchg
pop
or
pop
or
push
and
sub
and
pop
mov
(bad)
(bad)
call
push
and
xchg
and
adc
cmp
(bad)
inc
sbb
push
sub
add
push
and
(bad)
call
inc
add
add
idiv
(bad)
jmp
push
sub
push
adc
pop
adc
inc
push
add
add
(bad)
(bad)
push
(bad)
jmp
(bad)
inc
(bad)
jmp
(bad)
jmp
(bad)
(bad)
call
(bad)
(bad)
call
(bad)
dec
(bad)
(bad)
jmp
(bad)
(bad)
jmp
(bad)
(bad)
jmp
(bad)
dec
add
add
pop
sub
add
add
(bad)
(bad)
jmp
sub
add
xor
add
add
add
add
adc
add
push
pop
sub
add
and
add
sbb
add
add
(bad)
(bad)
call
sub
add
es
sub
test
ficom
inc
pop
popa
and
add
add
jae
add
xchg
add
fdivr
(bad)
jmp
add
add
and
or
inc
push
add
add
add
add
add
add
add
add
add
add
sub
sub
sbb
xor
inc
add
add
idiv
(bad)
call
sub
add
and
inc
add
add
idiv
(bad)
jmp
add
pop
dec
add
sub
and
push
and
es
and
jmp
(bad)
(bad)
inc
sub
and
and
mov
pop
(bad)
(bad)
call
sub
add
adc
or
or
add
add
add
sub
es
add
push
add
or
add
xor
add
add
add
add
add
add
push
pop
sub
add
xor
add
add
add
add
add
add
push
push
sub
add
xor
add
add
add
add
add
add
push
add
add
sldt
or
xor
add
add
add
add
push
add
add
dec
add
push
sub
add
adc
or
or
add
add
add
sub
es
add
outs
inc
add
push
sub
xor
add
add
add
add
sub
es
add
outs
and
add
sub
xor
add
add
add
add
push
add
add
pop
add
push
sub
add
adc
or
or
add
add
add
sub
es
add
add
push
sub
adc
or
or
add
add
add
sub
es
add
add
push
sub
adc
or
sldt
add
add
add
add
push
add
add
dec
add
push
and
xor
add
add
add
add
add
add
push
add
sub
add
push
and
adc
or
push
add
add
add
add
add
push
add
outs
arpl
add
and
adc
or
adc
add
add
add
sub
es
add
add
push
and
add
xor
add
add
add
add
push
add
add
push
add
push
add
push
and
adc
or
or
add
add
add
sub
es
add
add
push
sub
adc
or
or
add
add
add
sub
es
add
add
push
sub
adc
or
or
add
add
add
sub
es
add
outs
bound
add
sub
xor
add
add
add
add
push
add
add
popa
add
push
sub
add
adc
or
or
add
add
add
sub
es
add
add
push
sub
adc
or
retf
add
add
add
adc
add
push
sub
es
sbb
push
add
add
adc
sub
sbb
add
add
add
add
add
sbb
add
daa
add
add
add
(bad)
(bad)
(bad)
inc
add
add
add
test
add
pop
sub
add
dec
add
push
push
sub
add
jae
add
push
jge
add
add
sub
add
adc
sub
add
push
and
inc
add
add
idiv
(bad)
call
sub
add
es
adc
lea
add
add
add
add
sub
add
and
inc
add
add
idiv
(bad)
jmp
push
cmp
(bad)
inc
pop
adc
lea
add
add
add
add
cmp
(bad)
jmp
add
xor
add
add
add
add
adc
add
push
sbb
inc
cmp
add
add
add
add
loopne
add
add
sbb
add
push
add
sub
add
add
add
push
sub
add
loopne
add
add
sbb
add
push
add
xor
or
inc
or
add
and
add
mov
(bad)
push
(bad)
(bad)
call
add
add
add
add
add
fwait
add
add
sub
add
and
add
pop
inc
add
add
idiv
(bad)
call
sub
add
es
scas
sub
and
and
test
popa
and
add
(bad)
(bad)
inc
(bad)
jmp
add
add
add
add
add
cmp
(bad)
inc
pop
pop
or
cmp
(bad)
jmp
and
and
push
mov
sub
add
or
push
(bad)
(bad)
jmp
loope
scas
sub
sbb
add
add
idiv
(bad)
jmp
retf
cmp
(bad)
(bad)
inc
and
and
es
(bad)
jmp
add
add
xor
add
add
adc
add
push
sbb
cmp
add
add
inc
add
add
idiv
(bad)
call
sub
add
es
and
and
cmp
jl
add
add
adc
cmp
add
add
jl
add
add
adc
or
dec
add
push
and
add
sbb
add
add
(bad)
(bad)
(bad)
cmp
add
add
and
retf
and
adc
inc
push
or
cmp
push
push
pop
jle
sub
and
xor
js
sub
add
add
add
loopne
add
add
sub
add
push
pop
push
cmp
inc
add
add
idiv
(bad)
jmp
and
pushf
jle
lea
xor
popa
and
or
add
int3
(bad)
(bad)
dec
add
add
add
add
(bad)
dec
add
add
sub
add
and
add
pop
inc
add
add
idiv
(bad)
jmp
pop
or
xor
in
scas
pop
and
icebp
addr16
popa
sub
add
sbb
add
pop
or
pop
add
add
add
loopne
add
add
sub
add
push
sub
or
inc
or
add
cli
(bad)
(bad)
push
add
sar
(bad)
jmp
(bad)
(bad)
(bad)
add
add
add
add
add
add
(bad)
inc
add
sbb
push
add
add
add
or
(bad)
call
idiv
(bad)
call
sub
dec
cmp
(bad)
(bad)
inc
and
and
mov
sub
cmp
(bad)
(bad)
inc
pop
pop
or
ins
(bad)
(bad)
jmp
sbb
test
adc
or
sahf
add
add
add
adc
add
push
sub
add
and
add
and
inc
add
add
idiv
(bad)
call
sub
add
es
mov
add
cmp
add
add
add
add
loopne
add
add
add
sbb
add
and
jns
clc
inc
pop
and
add
popa
cmp
add
add
jl
add
add
sub
add
push
and
inc
add
add
idiv
(bad)
jmp
sbb
sbb
cmp
xchg
sbb
add
add
popa
cmp
add
add
or
or
and
push
and
adc
push
and
and
mov
add
add
push
pop
or
xor
or
add
add
add
xchg
(bad)
(bad)
(bad)
jp
add
nop
(bad)
(bad)
jmp
add
add
add
add
add
add
(bad)
push
sub
push
add
add
sub
add
and
push
sub
sbb
add
add
(bad)
(bad)
jmp
and
movs
jae
sub
add
add
add
loopne
add
add
add
sbb
add
and
sub
add
sub
add
push
and
(bad)
call
add
(bad)
(bad)
call
sub
add
and
(bad)
call
idiv
(bad)
jmp
and
jmp
and
xchg
pop
popa
and
pop
add
add
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
jmp
(bad)
inc
(bad)
(bad)
dec
cmp
(bad)
(bad)
jmp
sub
cmp
add
adc
or
push
add
add
add
add
add
push
pop
sub
add
xor
add
add
add
add
add
add
push
push
sub
add
xor
add
add
add
add
add
add
push
add
push
add
or
add
xor
add
add
add
add
adc
add
push
sub
es
add
push
add
push
sub
adc
or
popf
add
add
add
adc
add
push
push
sub
add
and
inc
add
add
idiv
(bad)
call
sub
add
es
jecxz
add
add
sbb
(bad)
add
add
bound
add
pop
add
add
add
jnp
add
add
pop
pop
pop
bound
sbb
push
and
add
sbb
add
add
(bad)
(bad)
jmp
add
add
add
in
add
add
inc
add
add
idiv
(bad)
jmp
ds
or
xchg
add
and
jmp
fwait
sub
jnp
add
add
cmp
add
add
inc
add
add
idiv
(bad)
call
or
push
and
add
sbb
add
add
(bad)
(bad)
jmp
and
data16
popa
and
inc
or
add
add
add
add
add
add
(bad)
(bad)
push
add
add
add
cdq
add
add
add
add
add
add
add
add
or
add
add
and
push
and
int3
cmp
push
loopne
or
add
jge
add
add
cmp
add
add
adc
sub
and
cmp
mov
push
popa
cmp
(bad)
call
or
and
add
pop
and
loope
popa
cmp
(bad)
inc
add
add
add
or
cmp
inc
add
add
idiv
(bad)
jmp
or
addr16
lods
loop
and
sbb
(bad)
(bad)
inc
jnp
add
add
loopne
or
add
sub
add
push
sub
pop
pop
or
or
sub
add
add
(bad)
(bad)
jmp
or
inc
fwait
clc
nop
pop
and
frstorw
cld
(bad)
(bad)
inc
jnp
add
add
adc
inc
add
add
idiv
(bad)
jmp
and
and
sub
dec
scas
pop
jge
popa
cmp
(bad)
(bad)
inc
push
inc
sbb
(bad)
call
add
(bad)
(bad)
(bad)
cmp
(bad)
(bad)
call
or
add
sbb
(bad)
(bad)
jmp
(bad)
call
(bad)
(bad)
inc
(bad)
(bad)
jmp
std
(bad)
inc
add
add
(bad)
jmp
(bad)
(bad)
push
(bad)
(bad)
in
std
(bad)
(bad)
cmp
(bad)
jmp
add
add
sub
or
jno
push
hlt
lods
popa
cmp
(bad)
inc
pop
add
pop
pop
bound
pop
jge
add
add
sub
push
and
and
or
jge
mov
pop
popa
cmp
and
and
and
and
(bad)
jmp
add
add
xor
add
add
adc
add
push
pop
cmp
cmc
add
add
or
mov
mov
mov
jp
popa
and
add
add
add
add
fdivr
(bad)
inc
add
add
(bad)
(bad)
call
cmp
add
add
add
add
jnp
add
add
pop
pop
pop
bound
sbb
pop
or
sub
pusha
call
out
lods
xchg
mov
add
add
add
loopne
or
add
sub
add
sub
es
sub
or
movs
lods
and
pop
and
popf
clc
adc
jg
(bad)
inc
push
xor
sbb
add
add
(bad)
(bad)
call
sub
add
sub
or
add
jns
(bad)
jmp
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
jmp
(bad)
(bad)
call
add
add
sub
add
and
inc
add
add
idiv
(bad)
jmp
sbb
mov
mov
jmp
add
add
xor
and
add
adc
add
push
add
jnp
add
add
add
add
add
pop
pop
bound
add
add
add
pop
pop
pop
arpl
add
add
xor
and
add
add
add
sub
es
add
add
add
add
sub
add
and
add
add
sub
add
and
xor
and
add
adc
add
push
add
add
add
add
sub
add
and
add
add
push
add
pop
add
push
and
add
xor
add
add
add
add
add
add
push
pop
sub
add
xor
add
add
add
add
add
add
push
push
sub
add
xor
add
add
add
add
add
add
push
add
push
add
or
add
xor
add
add
adc
add
push
add
add
add
lea
add
add
add
add
add
add
xor
add
add
add
add
adc
add
push
pop
sub
add
and
add
add
outs
sbb
add
add
idiv
(bad)
call
sub
add
sub
pop
or
inc
or
add
push
add
add
add
mov
(bad)
jmp
add
add
add
add
add
add
ret
add
pop
add
push
and
add
and
inc
add
add
idiv
(bad)
jmp
sbb
sub
add
add
(bad)
(bad)
jmp
and
sub
and
sahf
pusha
mov
add
add
add
pop
add
add
adc
add
push
sub
cdq
sub
pop
and
and
sub
push
pop
pop
or
call
or
popa
(bad)
(bad)
jmp
push
setno
fsub
or
inc
push
add
add
(bad)
(bad)
call
(bad)
(bad)
inc
(bad)
(bad)
push
add
add
sub
add
and
(bad)
call
inc
add
add
idiv
(bad)
(bad)
cmp
(bad)
(bad)
inc
and
and
ror
adc
or
loop
add
push
add
adc
add
push
push
cmp
or
pop
add
push
and
add
and
inc
add
add
idiv
(bad)
call
sub
add
es
jno
add
push
and
add
add
add
sbb
add
add
(bad)
(bad)
call
pop
and
ss
and
and
sbb
add
add
jno
add
sbb
add
loopne
(bad)
jmp
push
sbb
pop
add
push
and
inc
add
add
idiv
(bad)
jmp
sub
pop
bound
jnp
add
add
loopne
add
add
add
push
add
push
and
xchg
push
or
inc
pop
add
add
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
(bad)
mov
add
add
sub
and
aam
and
scas
ss
and
(bad)
inc
shr
add
adc
or
inc
add
add
add
adc
add
push
pop
or
call
add
push
pop
bound
jnp
add
add
loopne
add
add
add
push
add
push
and
push
cmp
add
inc
add
add
idiv
(bad)
call
sub
add
es
jae
cmp
and
pop
pop
and
cmp
and
add
add
add
add
inc
add
add
idiv
(bad)
call
or
sub
pop
inc
add
add
idiv
(bad)
jmp
and
sub
cdq
inc
jo
sub
pop
bound
pusha
or
ds
or
add
add
or
add
add
add
pop
add
add
(bad)
jmp
add
add
add
add
add
add
add
add
add
xor
(bad)
inc
add
sub
pop
or
add
add
inc
add
add
idiv
(bad)
call
sub
and
and
inc
or
add
gs
(bad)
call
add
add
add
add
add
add
add
dec
add
add
(bad)
(bad)
inc
add
add
(bad)
(bad)
call
or
ins
(bad)
(bad)
call
or
pop
add
push
and
add
and
add
sbb
add
add
(bad)
(bad)
jmp
push
pop
cmp
(bad)
call
inc
add
add
idiv
(bad)
jmp
or
mov
shl
cmp
jnp
popa
cmp
(bad)
inc
sbb
sbb
(bad)
jmp
aad
sbb
(bad)
inc
and
add
add
(bad)
(bad)
call
inc
add
add
idiv
(bad)
call
sub
add
and
(bad)
call
inc
add
add
idiv
(bad)
jmp
and
push
and
sahf
sub
or
test
mov
sbb
(bad)
inc
(bad)
add
and
and
pop
pop
cmp
(bad)
(bad)
inc
jnp
add
add
pop
pop
push
bound
pop
loopne
add
add
add
push
add
push
and
(bad)
(bad)
jmp
sbb
xchg
(bad)
jmp
mov
sub
and
scas
stc
pop
and
(bad)
dec
and
les
add
addr16
cmp
shr
add
xor
add
add
add
add
add
add
push
pop
sub
add
xor
add
add
add
add
add
add
push
push
sub
add
xor
add
add
add
add
adc
add
push
sub
es
add
push
add
or
add
xor
add
add
add
add
adc
add
push
sub
push
and
add
and
inc
add
add
idiv
(bad)
call
sub
add
es
push
push
and
xchg
adc
pop
and
jns
popa
cmp
add
sub
add
push
and
add
scas
add
add
sbb
push
and
inc
add
add
idiv
(bad)
jmp
push
and
stos
cmp
and
das
mov
push
jge
add
add
lods
sbb
pop
inc
or
add
sldt
add
add
mov
add
add
(bad)
(bad)
inc
add
add
add
sbb
sub
add
add
(bad)
(bad)
jmp
add
add
add
cs
sbb
add
add
idiv
(bad)
call
sub
jmp
(bad)
out
inc
lahf
popa
and
push
add
add
add
add
add
add
(bad)
(bad)
inc
(bad)
(bad)
jp
(bad)
call
sub
pop
cvtps2pd
xchg
aas
js
popa
sub
add
jge
add
add
cmp
(bad)
jmp
adc
push
jge
add
add
cmp
(bad)
jmp
sub
sub
sub
add
xor
add
add
add
add
adc
add
push
sbb
jge
add
cmp
add
add
push
jge
add
add
movs
add
add
sbb
push
add
sbb
add
(bad)
(bad)
call
sub
add
sub
push
and
add
and
inc
add
add
idiv
(bad)
jmp
sbb
sub
sbb
add
add
(bad)
(bad)
jmp
and
cmps
mov
and
leave
ret
or
pop
inc
add
add
js
add
(bad)
(bad)
(bad)
jmp
(bad)
(bad)
jmp
xchg
or
inc
or
add
add
add
(bad)
call
add
add
(bad)
(bad)
jmp
(bad)
dec
add
add
(bad)
(bad)
cmp
add
sbb
inc
add
add
idiv
(bad)
jmp
add
jge
add
add
sub
add
push
push
sub
sbb
add
add
(bad)
(bad)
jmp
add
jge
add
add
sub
idiv
mov
popa
cmp
(bad)
jmp
add
xor
add
add
add
add
adc
add
push
push
cmp
and
cld
aas
pop
and
cmp
jnp
add
add
sbb
imul
and
add
add
add
add
add
sbb
imul
sbb
push
add
pusha
add
push
sub
add
and
add
and
add
sbb
add
add
(bad)
(bad)
call
sub
add
es
sub
sbb
add
(bad)
(bad)
jmp
sub
add
cmp
(bad)
call
or
inc
pop
add
add
add
add
add
add
(bad)
(bad)
inc
add
add
(bad)
jmp
add
add
sub
and
mov
std
jno
popa
and
add
add
loopne
(bad)
(bad)
cmp
(bad)
jmp
movs
sbb
mov
add
xor
retf
add
add
adc
add
push
sbb
dec
push
cmp
add
sbb
add
add
(bad)
(bad)
call
sub
add
es
pop
sub
add
add
(bad)
(bad)
jmp
cmp
pop
and
out
cs
and
retf
in
popa
cmp
add
add
jge
add
add
xor
or
inc
or
add
cmp
add
xchg
(bad)
call
add
add
add
add
add
add
add
add
add
add
int
add
sbb
sub
sbb
add
add
(bad)
(bad)
jmp
add
add
add
jnp
add
add
or
sub
add
and
inc
add
add
idiv
(bad)
jmp
call
stc
mov
sbb
add
mov
add
jnp
add
loopne
add
sar
(bad)
dec
add
pop
(bad)
(bad)
dec
(bad)
call
sub
add
and
inc
add
add
idiv
(bad)
jmp
sbb
push
and
(bad)
call
inc
add
add
idiv
(bad)
(bad)
cmp
(bad)
(bad)
jmp
or
mov
sub
lea
or
test
sub
add
add
sub
add
or
cmp
(bad)
call
add
(bad)
(bad)
jmp
pop
and
and
inc
popa
cmp
(bad)
inc
jnp
add
add
jnp
add
add
jnp
add
add
sub
add
push
sub
push
and
(bad)
call
inc
add
add
idiv
(bad)
jmp
and
and
(bad)
inc
jnp
add
add
jnp
add
add
jae
(bad)
call
inc
add
add
idiv
(bad)
call
xchg
(bad)
(bad)
jmp
es
(bad)
(bad)
jmp
add
adc
push
add
add
push
add
adc
add
push
push
cmp
icebp
sub
cmp
add
add
add
add
add
push
add
add
inc
add
add
idiv
(bad)
call
sub
add
es
sub
add
and
add
sbb
add
add
(bad)
(bad)
(bad)
cmp
add
lahf
mov
push
and
xor
add
add
jnp
add
add
and
add
or
pop
jge
add
add
loopne
jnp
add
add
and
xchg
pushf
cmp
add
es
add
and
pop
sub
popa
jp
xor
inc
add
pop
dec
add
pop
or
loope
add
and
push
and
sub
add
xor
add
add
(bad)
(bad)
call
or
cmp
inc
add
add
idiv
(bad)
jmp
and
dec
adc
or
or
or
add
add
add
add
add
(bad)
jmp
add
add
(bad)
(bad)
inc
(bad)
(bad)
inc
add
add
sbb
add
push
or
sub
add
and
(bad)
call
idiv
(bad)
jmp
push
sub
and
lea
pop
and
mov
popa
sub
add
add
or
sub
add
pop
pop
pop
or
sub
and
jae
in
and
mov
or
imul
popa
(bad)
(bad)
inc
sub
add
sub
or
add
ja
(bad)
jmp
(bad)
(bad)
dec
(bad)
(bad)
call
(bad)
(bad)
call
(bad)
(bad)
inc
add
xchg
(bad)
(bad)
(bad)
mov
(bad)
(bad)
inc
add
add
sub
push
and
inc
add
add
idiv
(bad)
jmp
or
mov
and
aam
xor
(bad)
inc
add
add
add
mov
inc
add
add
idiv
(bad)
call
xchg
jnp
add
add
jnp
add
add
sbb
inc
add
add
idiv
(bad)
call
or
push
push
sub
and
nop
es
(bad)
(bad)
jmp
adc
or
add
add
push
add
adc
add
push
sub
push
and
add
and
add
pop
inc
add
add
idiv
(bad)
call
sub
add
es
and
into
add
add
jnp
add
add
jnp
add
add
cmp
add
(bad)
(bad)
jmp
daa
sbb
inc
pop
add
add
add
add
add
push
add
add
add
add
add
add
sub
and
sub
and
pop
das
mov
inc
xor
sub
sub
add
sbb
add
push
and
inc
add
add
idiv
(bad)
jmp
add
add
add
and
add
or
pop
jge
add
add
loopne
pushf
sub
sbb
mov
shr
shl
(bad)
popa
and
add
add
adc
(bad)
(bad)
(bad)
fdivr
(bad)
jmp
cmp
(bad)
inc
and
and
cdq
and
int3
sub
add
xor
add
add
add
add
adc
add
push
sub
add
and
add
and
add
sbb
add
add
idiv
(bad)
call
sub
add
es
and
inc
and
adc
sbb
add
add
xchg
add
add
add
(bad)
(bad)
jmp
cmp
or
inc
pop
add
add
add
xor
add
inc
add
add
add
add
add
dec
add
add
sub
add
and
inc
add
add
idiv
(bad)
jmp
leave
sub
add
add
add
or
mov
add
pop
pop
pop
or
sub
add
add
and
add
idiv
(bad)
(bad)
cmp
(bad)
jmp
sbb
xchg
pop
and
popa
sbb
fbstp
popa
cmp
(bad)
inc
jnp
add
add
loopne
sub
add
xor
add
add
add
add
add
add
push
pop
sub
add
xor
add
add
add
add
add
add
push
push
sub
add
xor
add
add
add
add
push
add
add
add
or
add
add
xor
push
add
add
add
add
add
push
add
add
outs
adc
add
sub
add
xor
add
add
add
add
sub
es
add
jge
add
add
adc
or
jno
add
add
add
sub
es
sbb
data16
in
scas
pop
and
or
add
sub
and
ss
pop
and
push
jb
cmp
add
add
jnp
add
add
or
sbb
add
add
(bad)
(bad)
call
sub
add
sub
add
add
add
add
add
add
add
push
add
add
add
add
add
repnz
add
outs
add
push
and
add
and
inc
add
add
idiv
(bad)
jmp
sbb
mov
add
or
sub
and
add
pop
jge
add
add
sub
sbb
xchg
add
add
add
inc
data16
(bad)
call
inc
add
add
idiv
(bad)
call
pop
cmp
(bad)
call
add
(bad)
(bad)
jmp
sub
and
and
icebp
lods
popa
sub
add
add
pop
jge
add
add
push
cmp
(bad)
call
add
(bad)
(bad)
jmp
and
add
addr16
jmp
popa
and
pop
add
add
(bad)
(bad)
jmp
(bad)
jmp
jmp
add
add
add
add
sub
add
and
(bad)
call
inc
add
add
idiv
(bad)
jmp
sub
push
jge
add
add
cmp
(bad)
(bad)
jmp
rol
sub
add
adc
or
sub
add
add
add
sub
es
add
jnp
add
add
aaa
pop
sbb
add
add
(bad)
(bad)
call
sub
add
es
or
add
add
adc
or
sub
add
add
add
sub
es
add
jnp
add
add
aaa
pop
sbb
add
add
(bad)
(bad)
call
sub
add
es
or
add
jge
add
add
adc
or
sub
add
adc
add
push
add
jnp
add
add
aaa
pop
sbb
add
add
(bad)
(bad)
call
sub
add
es
or
add
or
add
add
add
add
xor
add
add
add
add
adc
add
push
add
add
add
inc
xor
add
add
add
add
add
add
push
pop
sub
add
xor
add
add
add
add
add
add
push
push
sub
add
xor
add
add
add
add
adc
add
push
sub
es
add
js
add
sub
adc
or
and
add
add
add
sub
es
sub
push
and
add
and
add
and
add
add
lea
add
and
or
cwde
add
add
add
adc
add
push
sbb
push
and
add
pop
inc
add
add
idiv
(bad)
call
sub
add
es
push
int3
cmp
add
add
add
add
add
add
add
add
add
sub
add
xchg
add
add
add
sbb
add
rol
add
lods
add
add
add
add
enter
cmp
pop
pop
adc
add
add
add
jle
add
add
pop
or
hlt
add
add
add
add
push
pop
or
out
add
adc
pop
xor
add
add
add
add
adc
add
adc
and
and
adc
call
sub
pop
sub
add
push
and
add
add
add
push
and
add
add
add
add
movs
cmp
add
add
add
pop
push
popa
inc
add
add
arpl
(bad)
call
outs
add
add
inc
or
add
sub
adc
(bad)
inc
pop
pop
or
sub
pop
add
add
std
(bad)
(bad)
jmp
jae
add
and
sub
add
and
inc
add
add
idiv
(bad)
jmp
and
add
add
sbb
pop
aas
push
(bad)
call
add
(bad)
(bad)
(bad)
cmp
(bad)
jmp
pop
or
add
or
or
add
add
(bad)
(bad)
call
(bad)
push
(bad)
(bad)
inc
add
add
(bad)
(bad)
call
add
add
(bad)
dec
(bad)
(bad)
jmp
(bad)
(bad)
call
(bad)
(bad)
jmp
(bad)
(bad)
dec
add
add
sub
add
and
inc
add
add
idiv
(bad)
jmp
pop
movntps
add
pop
sbb
jbe
add
and
inc
add
add
idiv
(bad)
jmp
cmp
(bad)
fisub
popa
and
inc
or
add
cmp
add
push
add
add
(bad)
(bad)
call
(bad)
(bad)
push
std
(bad)
dec
(bad)
(bad)
inc
cs
(bad)
call
or
push
outs
dec
pop
pop
and
mov
mov
push
es
sub
add
and
(bad)
call
add
(bad)
(bad)
jmp
and
xchg
adc
pop
inc
xchg
and
jb
add
add
movs
cmp
(bad)
call
or
or
jmp
(bad)
call
xor
add
add
add
add
sub
es
sub
add
and
or
or
add
add
add
push
add
mov
add
and
add
xor
add
add
add
add
add
add
push
add
sub
add
and
adc
or
push
add
add
add
add
add
push
pop
sub
add
xor
add
add
add
add
add
add
push
push
sub
add
xor
add
add
add
add
add
add
push
add
push
add
or
add
xor
add
add
add
add
push
add
adc
add
and
add
xor
add
add
add
add
adc
add
push
sub
es
add
add
sbb
push
add
add
add
add
adc
add
push
sbb
push
jle
add
add
push
sub
sbb
or
add
add
(bad)
(bad)
call
(bad)
(bad)
inc
add
add
add
add
add
add
add
add
add
sbb
fnstsw
add
add
popf
add
push
and
int
cmp
add
or
sub
add
and
inc
add
add
idiv
(bad)
call
sub
add
es
sub
add
and
add
and
add
add
add
add
and
add
push
or
or
sbb
add
and
add
push
and
add
and
add
add
adc
push
and
and
inc
push
add
add
add
sbb
add
add
add
add
add
(bad)
(bad)
(bad)
cmp
add
adc
pop
pop
xchg
and
cmc
add
pop
adc
pop
sub
add
and
inc
add
add
idiv
(bad)
jmp
icebp
(bad)
arpl
dec
sub
and
add
add
add
add
(bad)
jmp
add
add
and
cmp
(bad)
call
or
(bad)
xor
cs
add
(bad)
call
sub
add
and
add
fcomp
adc
and
mov
and
inc
push
add
add
add
sub
add
add
add
pop
add
add
add
sar
(bad)
jmp
imul
inc
push
add
add
add
add
add
pop
add
add
add
imul
mov
pop
sub
add
push
and
inc
add
add
idiv
(bad)
jmp
jne
and
and
dec
addr16
sub
in
cmps
jp
jle
(bad)
call
or
mov
mov
pop
and
repz
imul
call
or
test
add
xchg
and
adc
rol
sub
add
push
and
add
fcomp
adc
and
pop
add
mov
and
inc
push
add
add
add
add
add
pop
add
add
(bad)
(bad)
jmp
add
add
add
add
imul
inc
push
add
add
add
pop
add
add
add
adc
add
dec
add
add
add
out
into
jnp
mov
adc
and
cmps
push
sub
add
push
and
inc
add
add
idiv
(bad)
jmp
cmc
xor
and
cmp
(bad)
call
or
push
mov
inc
pop
and
popa
inc
jns
cmp
(bad)
call
sub
add
and
add
fmul
sub
add
push
and
add
movd
add
add
setae
add
add
pop
xchg
pop
pop
jle
popf
sub
inc
dec
add
add
add
nop
add
add
add
add
add
add
add
add
add
add
add
add
add
mov
add
add
add
add
add
mov
add
and
add
scas
add
add
add
add
xor
add
add
add
add
adc
add
push
jae
add
or
add
adc
or
or
add
add
add
sub
es
add
add
push
sub
adc
or
adc
add
add
add
sub
es
add
add
test
sub
xor
add
add
add
add
add
add
push
pop
sub
add
xor
add
add
add
add
add
add
push
push
sub
add
xor
add
add
add
add
add
add
push
add
push
add
or
add
xor
add
add
add
add
add
add
push
add
add
or
add
xor
add
add
add
add
adc
add
push
sub
es
add
xchg
add
sub
adc
or
add
add
adc
add
push
add
pop
add
push
and
push
pop
imul
and
adc
or
push
add
add
add
add
add
push
pop
sub
add
xor
add
add
add
add
add
add
push
push
sub
add
xor
add
add
add
add
add
add
push
add
push
add
or
add
xor
add
add
add
add
adc
add
push
sub
es
add
mov
add
sub
adc
or
or
add
add
add
sub
es
add
push
add
or
add
xor
add
add
add
add
adc
add
push
sub
es
add
cwde
add
push
sub
adc
or
retf
add
add
add
adc
add
push
sub
es
sbb
xor
out
ret
cmp
add
add
add
sub
or
add
add
sub
add
push
and
add
add
adc
adc
inc
adc
add
xchg
add
add
add
add
add
jnp
(bad)
push
add
add
add
add
add
add
add
xor
add
add
add
add
add
outs
add
add
add
sbb
add
push
add
add
add
add
add
daa
add
add
adc
cmps
and
loope
sub
and
add
and
xor
add
add
pop
or
and
int3
out
pop
and
mov
leave
popa
sub
adc
lods
pop
and
sub
push
sub
add
and
sbb
add
(bad)
(bad)
jmp
out
ret
and
pop
retf
popa
and
pop
inc
push
add
add
(bad)
(bad)
(bad)
mov
add
add
add
add
add
add
add
add
(bad)
call
add
jl
(bad)
push
add
ins
(bad)
(bad)
inc
(bad)
(bad)
(bad)
out
add
add
add
add
add
add
add
add
ins
add
add
sub
add
and
add
add
nop
pop
and
cmp
(bad)
call
mov
add
es
push
and
(bad)
call
idiv
(bad)
call
sub
add
es
push
pop
and
cmp
(bad)
(bad)
call
or
adc
jnp
(bad)
jmp
shl
(bad)
call
add
xchg
retf
add
(bad)
dec
pop
dec
xchg
or
dec
xchg
pop
or
cmp
(bad)
call
add
and
inc
cmp
popa
cmp
(bad)
(bad)
inc
sub
add
and
push
add
popf
pop
or
sbb
add
and
add
or
pop
(bad)
(bad)
jmp
div
in
cmp
(bad)
(bad)
inc
sub
add
and
push
add
popf
and
test
(bad)
dec
inc
or
add
inc
add
xor
add
jo
(bad)
jmp
add
add
(bad)
(bad)
call
add
add
(bad)
jmp
jbe
push
cmp
(bad)
(bad)
call
add
cmp
add
sbb
cmp
inc
add
add
idiv
(bad)
jmp
and
sbb
call
dec
sub
add
push
and
add
add
nop
add
push
sub
add
sub
es
std
(bad)
call
add
(bad)
(bad)
jmp
pop
adc
fs
(bad)
call
or
or
pop
std
(bad)
jmp
mov
dec
cli
cmp
sub
add
and
cmp
add
(bad)
call
std
(bad)
jmp
mov
jae
cmp
std
(bad)
jmp
adc
mov
and
jl
popa
cmp
std
(bad)
inc
sub
add
push
and
sbb
add
std
(bad)
(bad)
jle
add
add
pop
sub
es
cld
(bad)
call
inc
add
add
idiv
(bad)
jmp
adc
(bad)
pop
and
cmp
sub
add
push
and
sub
add
(bad)
call
add
inc
pop
and
cmp
(bad)
inc
sub
add
and
and
add
cld
(bad)
(bad)
jle
add
add
add
cmp
and
js
imul
jmp
add
xor
add
add
add
add
sub
es
and
fiadd
add
adc
add
and
add
add
nop
add
push
sub
xor
add
add
adc
add
push
sbb
call
xor
add
pop
pop
sub
cmp
inc
add
add
idiv
(bad)
call
sub
add
es
mov
adc
add
cmc
popa
and
pop
inc
or
add
out
add
add
add
add
add
mov
add
add
add
aam
add
fild
add
cmc
add
add
add
add
add
add
add
add
push
cmp
add
sbb
add
(bad)
(bad)
jmp
adc
pop
pop
xchg
and
adc
add
pop
pop
or
mov
pop
or
push
and
add
sbb
add
add
idiv
(bad)
jmp
and
sbb
pop
xor
inc
add
add
idiv
(bad)
call
movhps
sgdtd
add
inc
add
add
idiv
(bad)
jmp
sbb
add
add
add
push
pop
pop
xchg
and
add
pop
adc
add
sub
or
add
push
pop
inc
xchg
and
adc
stc
pop
sub
add
push
and
pop
imul
pop
adc
add
add
fild
(bad)
call
or
add
lahf
cmp
(bad)
(bad)
call
or
movs
je
fcomp
and
lds
retf
call
or
mov
cmp
pop
and
jl
popa
cmp
add
add
add
add
(bad)
call
(bad)
call
add
add
(bad)
jmp
add
add
(bad)
(bad)
(bad)
jmp
(bad)
(bad)
jmp
add
add
add
add
or
xor
mov
jbe
(bad)
call
or
stos
cs
pop
and
cld
mov
cmp
(bad)
inc
popa
pop
push
pop
push
popa
inc
add
add
lock
add
bound
adc
adc
inc
adc
add
mov
add
dec
add
add
std
(bad)
(bad)
jnp
add
stc
std
(bad)
jmp
add
push
add
add
(bad)
inc
(bad)
(bad)
dec
std
(bad)
(bad)
mov
add
add
add
scas
(bad)
(bad)
(bad)
(bad)
(bad)
dec
(bad)
(bad)
inc
add
add
or
sub
add
add
(bad)
(bad)
jmp
and
in
(bad)
call
or
outs
adc
cdq
pop
and
in
sub
sar
(bad)
call
adc
add
and
(bad)
call
idiv
(bad)
jmp
sub
lea
add
es
pop
(bad)
(bad)
jmp
add
jmp
(bad)
call
or
dec
(bad)
(bad)
jmp
pop
push
cmp
jmp
cmp
add
or
(bad)
(bad)
jle
add
add
push
pop
or
sub
(bad)
call
or
aam
push
out
and
xchg
aas
popa
cmp
(bad)
call
cmp
(bad)
(bad)
jle
add
add
pop
or
xchg
add
push
and
(bad)
call
inc
add
add
idiv
(bad)
jmp
cmp
add
adc
or
add
add
adc
add
push
sbb
pop
add
add
cmp
add
adc
sub
add
and
add
and
pop
push
cmp
add
add
nop
and
add
pop
adc
pop
adc
push
and
add
sbb
add
(bad)
(bad)
call
sub
add
es
or
push
cmp
add
add
or
pop
adc
sbb
push
pop
adc
xchg
add
push
and
add
sbb
add
add
(bad)
(bad)
(bad)
cmp
add
add
add
add
adc
adc
rol
add
and
inc
jg
and
dec
sub
and
add
sbb
push
pop
or
mov
add
sbb
push
pop
pop
sub
cmp
add
add
idiv
(bad)
(bad)
cmp
adc
cld
pop
scas
cwde
pop
and
cmp
add
add
add
add
or
es
call
add
add
idiv
(bad)
call
or
pop
add
add
cmp
add
adc
adc
rol
add
sbb
add
add
idiv
(bad)
(bad)
cmp
pop
adc
xchg
add
push
and
add
sbb
add
add
(bad)
(bad)
jmp
adc
and
and
adc
popa
cmp
and
jnp
inc
popa
add
sbb
add
nop
and
dec
add
pop
adc
cmp
add
add
sub
adc
pop
punpckldq
or
sbb
add
and
pop
pop
adc
adc
adc
sbb
and
pop
add
pop
adc
pop
sub
cmp
inc
add
add
idiv
(bad)
(bad)
cmp
pop
cmp
sub
add
push
and
or
sbb
pop
popa
or
cmp
sub
add
push
and
pop
xchg
adc
sbb
jb
add
cmp
(bad)
jmp
cmp
or
adc
or
add
push
(bad)
(bad)
jmp
(bad)
(bad)
push
add
add
add
add
add
(bad)
(bad)
call
(bad)
(bad)
jmp
add
add
(bad)
cmp
push
inc
adc
add
jbe
(bad)
jmp
add
(bad)
(bad)
mov
add
add
add
(bad)
dec
add
add
(bad)
(bad)
(bad)
cmp
std
(bad)
jmp
add
mov
add
mov
add
add
add
scas
add
add
pop
cmp
add
add
inc
add
add
idiv
(bad)
jmp
and
(bad)
(bad)
call
adc
adc
and
ret
fldenv
cmp
(bad)
call
nop
xchg
and
add
pop
adc
and
and
(bad)
call
adc
dec
push
mov
jle
scas
popa
cmp
(bad)
(bad)
call
push
pop
movaps
es
add
add
(bad)
(bad)
jmp
and
jmp
(bad)
(bad)
jle
add
add
pop
or
(bad)
(bad)
call
push
pop
and
inc
(bad)
(bad)
call
inc
add
add
idiv
(bad)
call
sbb
sub
adc
push
sub
cmp
(bad)
(bad)
jmp
xchg
add
push
and
or
and
add
and
adc
call
adc
adc
inc
sbb
add
(bad)
cld
(bad)
jmp
add
add
(bad)
(bad)
jmp
(bad)
(bad)
dec
(bad)
jnp
(bad)
push
cld
(bad)
jmp
(bad)
dec
(bad)
(bad)
(bad)
mov
add
add
add
add
std
(bad)
inc
(bad)
inc
add
(bad)
std
(bad)
jmp
(bad)
jmp
(bad)
call
(bad)
inc
add
inc
std
(bad)
inc
add
add
add
pop
adc
xchg
adc
cmp
(bad)
call
or
sub
add
push
and
add
and
add
add
or
es
or
adc
add
and
adc
pop
sbb
dec
(bad)
(bad)
(bad)
cmp
(bad)
(bad)
call
add
or
add
and
or
sbb
add
and
pop
pop
adc
pop
xchg
popa
adc
sub
add
push
and
or
pop
adc
or
popa
shr
xchg
add
push
and
add
(bad)
call
push
pop
pop
pop
adc
and
inc
add
arpl
pop
sbb
add
push
and
add
and
(bad)
call
inc
add
add
idiv
(bad)
jmp
pop
or
(bad)
(bad)
(bad)
call
movlps
cmp
or
pop
adc
or
cmp
inc
add
add
idiv
(bad)
jmp
adc
and
xor
and
xchg
sbb
sub
(bad)
call
mov
add
es
push
cmp
xchg
rol
cmp
std
(bad)
call
adc
outs
xchg
and
mov
(bad)
std
(bad)
dec
sub
add
and
sbb
add
and
add
sbb
add
and
adc
adc
sbb
inc
(bad)
(bad)
(bad)
jle
add
add
bndldx
xor
(bad)
(bad)
cmp
std
(bad)
dec
sub
add
and
adc
or
mov
add
adc
add
push
jle
add
add
add
add
push
cmp
add
add
popa
cmp
and
push
popa
and
pop
inc
or
add
mov
add
add
add
add
add
(bad)
(bad)
inc
add
add
add
adc
add
add
leave
add
add
pop
and
push
cmp
into
jo
popa
sub
push
es
or
add
popa
cmp
sub
add
add
add
add
add
add
add
add
(bad)
(bad)
push
add
add
add
add
add
rcl
(bad)
(bad)
call
pop
and
add
(bad)
pop
and
mov
dec
(bad)
(bad)
inc
add
pop
dec
pop
push
popa
inc
add
add
inc
add
add
sub
push
(bad)
call
or
outs
mov
(bad)
(bad)
call
add
aas
clc
pop
scas
cmp
(bad)
(bad)
call
add
fild
add
add
pop
and
fcmovnb
push
pop
and
aad
into
popa
cmp
(bad)
(bad)
call
sub
jle
add
add
sbb
add
inc
(bad)
(bad)
inc
mov
add
sbb
xchg
add
push
and
pop
xor
add
pop
adc
daa
(bad)
(bad)
inc
pop
pop
or
and
pop
or
adc
adc
(bad)
dec
sbb
and
add
idiv
(bad)
call
sub
add
adc
pop
and
add
add
jmp
push
sbb
add
in
pop
sub
add
push
and
and
and
add
pop
adc
mov
xor
add
add
add
add
sub
es
add
sub
adc
or
or
add
adc
add
push
add
call
add
add
xor
add
add
add
add
adc
add
push
jae
add
or
add
adc
or
push
add
add
add
adc
add
push
add
outs
push
add
or
adc
or
or
add
adc
add
push
add
add
or
add
xor
add
add
adc
add
push
add
fwait
add
push
and
add
xor
add
add
add
add
add
add
push
pop
sub
add
xor
add
add
add
add
add
add
push
push
sub
add
xor
add
add
add
add
add
add
push
add
push
add
or
add
xor
add
add
add
add
push
add
add
or
add
sub
add
adc
or
push
add
add
add
add
add
push
add
sub
add
or
adc
or
or
add
add
add
push
add
add
or
add
xor
add
add
add
add
adc
add
push
sub
es
add
movs
add
push
sub
adc
push
add
add
adc
add
push
and
add
and
add
sub
add
and
add
add
add
add
push
and
mov
es
add
add
stos
add
add
add
add
and
add
and
add
add
jle
add
sub
add
and
add
and
add
and
mov
sub
cmp
add
mov
add
jle
add
add
mov
add
xchg
jle
add
add
or
pop
popf
sub
add
xor
add
add
adc
add
push
add
add
sbb
add
sub
add
adc
or
or
add
add
add
sub
es
add
outs
sbb
add
sub
xor
add
add
add
add
adc
add
push
add
sub
sub
add
xor
add
add
add
add
sub
es
add
sub
adc
or
or
add
add
add
push
add
mov
add
and
add
xor
add
add
add
add
add
add
push
pop
sub
add
xor
add
add
add
add
add
add
push
push
sub
add
xor
add
add
add
add
add
add
push
add
push
add
or
add
xor
add
add
add
add
add
add
push
add
outs
sbb
add
and
adc
or
or
add
add
add
sub
es
add
outs
sbb
adc
or
sldt
add
add
adc
add
push
sub
es
add
mov
add
sub
sbb
push
add
add
add
add
adc
add
push
push
sub
cmp
add
sbb
add
add
(bad)
(bad)
call
sub
add
es
sub
add
sbb
cmp
adc
sbb
add
or
add
lods
add
add
(bad)
(bad)
inc
add
add
add
add
sub
cmp
add
add
sub
add
and
add
and
add
sub
pop
or
or
or
add
add
add
add
add
add
add
add
(bad)
(bad)
inc
add
add
sub
cmp
add
add
idiv
(bad)
jmp
push
pop
sub
add
add
(bad)
(bad)
jmp
and
(bad)
(bad)
dec
inc
push
add
add
add
add
(bad)
jmp
add
add
(bad)
call
add
and
add
sbb
lods
xor
push
rol
test
pop
hlt
popa
cmp
sub
add
push
and
sub
imul
and
add
add
push
add
sub
inc
(bad)
(bad)
jmp
add
push
cmp
(bad)
(bad)
inc
and
fild
add
sub
add
sub
(bad)
(bad)
jmp
sbb
sbb
(bad)
jmp
fld
(bad)
(bad)
(bad)
fstp
adc
pop
and
and
inc
add
add
add
add
add
(bad)
(bad)
call
add
sub
add
sub
inc
pop
add
add
add
pop
add
add
add
pop
add
add
add
pop
add
add
add
and
mov
sub
add
and
inc
add
add
idiv
(bad)
jmp
jnp
hlt
jo
sub
and
movs
dec
aas
and
adc
pop
cmp
(bad)
call
icebp
push
sub
add
and
add
fcomp
adc
sub
sbb
add
sub
or
sub
and
movs
jb
and
and
inc
add
add
(bad)
(bad)
jmp
add
add
sub
adc
adc
inc
pop
add
add
std
(bad)
jmp
add
add
(bad)
(bad)
jmp
add
add
sub
sub
adc
inc
add
add
add
add
add
add
add
add
add
add
add
mov
push
cmp
dec
sti
popa
sub
add
and
add
push
add
add
add
add
push
add
add
add
jne
pusha
pop
sbb
add
add
add
add
sub
add
push
add
add
add
fwait
add
add
add
add
xor
add
add
add
add
adc
add
push
jle
add
add
push
and
adc
and
jne
popa
and
pop
inc
or
add
add
add
add
add
add
add
add
add
mov
(bad)
call
add
add
add
add
add
add
add
add
jle
add
add
pop
adc
and
hlt
shl
pop
and
sub
or
add
ss
pop
and
xor
ss
sub
out
pop
and
cmp
(bad)
call
or
add
and
and
popa
cmp
(bad)
call
or
(bad)
ds
movs
pop
and
cmp
(bad)
call
adc
fdivr
inc
(bad)
(bad)
call
push
pop
push
xchg
and
add
pop
adc
pop
mov
int
popa
cmp
(bad)
(bad)
inc
popa
pop
jnp
push
popa
inc
add
add
arpl
add
and
push
dec
repnz
(bad)
(bad)
call
or
ins
dec
sbb
call
stos
add
push
and
out
(bad)
(bad)
call
add
add
add
add
add
add
add
add
add
add
add
add
(bad)
(bad)
(bad)
mov
(bad)
(bad)
jmp
aas
das
adc
cmp
cmp
(bad)
(bad)
jle
add
add
sbb
add
add
add
sub
or
pop
pop
pop
xchg
and
add
pop
adc
jle
add
add
pop
jle
add
add
pop
xchg
add
pop
dec
pop
popf
pop
or
movs
add
add
or
add
sbb
pop
xor
sbb
add
add
(bad)
(bad)
call
sub
add
es
adc
call
pop
and
add
xchg
and
add
pop
sub
pop
sub
add
push
and
and
and
pop
add
pop
adc
inc
add
xor
add
add
adc
add
push
add
add
push
add
or
add
add
xor
add
add
add
add
adc
add
push
add
mov
add
sub
adc
or
or
add
adc
add
push
add
add
or
add
xor
add
add
add
add
add
add
push
pop
sub
add
xor
add
add
add
add
add
add
push
push
sub
add
xor
add
add
add
add
add
add
push
add
push
add
or
add
xor
add
add
add
add
add
add
push
add
add
or
add
xor
add
add
sub
es
sub
es
sbb
rol
push
and
inc
add
add
idiv
(bad)
call
sub
add
sub
jae
add
push
jge
add
add
sub
es
sbb
add
add
idiv
(bad)
jmp
sbb
mov
es
add
add
(bad)
(bad)
jmp
add
and
add
sub
sbb
pop
inc
push
add
add
add
add
(bad)
(bad)
inc
add
add
(bad)
(bad)
dec
add
add
add
push
sub
add
mov
add
sbb
aam
adc
or
push
add
add
add
adc
add
push
sbb
add
adc
or
sub
add
add
add
sub
es
sub
add
push
and
add
and
add
sub
add
sub
add
push
and
add
sub
add
xor
add
add
add
add
adc
add
push
sbb
into
add
add
pop
sub
add
pop
or
and
add
or
dec
xchg
and
add
pop
sub
add
add
add
sub
add
mov
or
fwait
add
add
push
mov
sub
mov
add
and
cmp
and
lods
cld
popa
and
pop
add
add
add
add
add
add
(bad)
(bad)
inc
add
add
add
enter
sub
add
push
and
add
and
add
sbb
add
add
(bad)
(bad)
call
sub
add
es
sub
or
shr
mov
pop
and
push
pushf
popa
sub
retf
jmp
xchg
add
test
inc
add
add
idiv
(bad)
(bad)
cmp
adc
add
or
add
and
add
popf
(bad)
(bad)
jmp
add
add
add
add
add
(bad)
push
(bad)
(bad)
push
(bad)
call
add
add
sub
es
add
add
(bad)
(bad)
jmp
add
sub
add
push
pop
or
scas
sub
and
mov
mov
adc
(bad)
inc
inc
pop
add
add
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
(bad)
mov
(bad)
(bad)
call
(bad)
jmp
add
add
cmp
(bad)
jmp
xchg
dec
pop
loop
sub
and
out
mov
fdivr
(bad)
call
cmp
(bad)
(bad)
inc
jnp
add
add
sub
add
xor
add
mov
xor
add
mov
jle
add
add
add
add
popf
cmp
(bad)
call
inc
add
add
idiv
(bad)
(bad)
cmp
(bad)
jmp
sbb
(bad)
jle
add
add
sbb
add
(bad)
jmp
add
xor
add
add
add
add
adc
add
push
add
mov
or
add
add
sub
add
push
and
add
adc
or
xchg
add
sbb
add
sub
es
jle
add
add
and
movs
scas
and
and
pop
inc
or
add
test
add
dec
add
add
add
add
add
add
add
add
(bad)
(bad)
jmp
add
add
add
add
mov
or
jno
retf
mov
and
and
add
adc
and
jge
sub
in
adc
push
and
and
mov
into
popa
sub
mov
data16
js
cmp
(bad)
dec
inc
or
add
pop
add
add
add
add
add
push
add
add
add
add
add
add
add
add
add
mov
inc
(bad)
(bad)
call
or
outs
or
(bad)
(bad)
call
adc
and
and
movs
jb
popa
cmp
(bad)
(bad)
inc
push
popa
inc
add
add
or
add
and
nop
imul
call
cmp
(bad)
call
or
jg
(bad)
inc
mov
add
sbb
sub
pop
or
sbb
and
inc
add
add
idiv
(bad)
call
sub
add
or
inc
xchg
and
inc
add
pop
or
inc
(bad)
(bad)
call
or
not
or
cmp
(bad)
jmp
sbb
add
add
add
add
add
add
add
add
add
add
add
add
add
mov
add
sub
data16
(bad)
inc
adc
or
mov
add
sbb
add
sub
es
jle
add
add
add
jg
jb
and
scas
or
adc
pop
or
or
add
aam
add
and
add
jge
add
dec
add
add
add
aaa
add
add
add
add
add
add
iret
add
add
or
arpl
mov
or
pop
adc
and
sub
add
add
mov
pop
and
push
or
sub
popf
sub
enter
popa
cmp
(bad)
dec
add
pop
pop
push
popa
inc
add
add
ja
add
and
fstp
cmp
call
or
stos
sbb
jns
popa
cmp
(bad)
call
or
dec
and
jmp
push
mov
xor
(bad)
call
or
(bad)
mov
cmp
(bad)
(bad)
dec
inc
or
add
sub
add
sub
add
(bad)
(bad)
(bad)
dec
add
sbb
add
cmp
add
outs
add
add
add
add
(bad)
(bad)
jmp
mov
retf
outs
cmp
(bad)
(bad)
call
add
inc
xchg
adc
inc
xchg
pop
cmp
(bad)
(bad)
call
add
add
add
sub
add
add
push
push
pop
pop
or
add
pop
or
add
pop
or
or
pop
sub
add
add
(bad)
(bad)
call
sub
add
es
cmp
(bad)
call
or
imul
sbb
pop
adc
inc
add
add
add
add
add
add
add
add
add
add
add
mov
sub
out
(bad)
call
xor
mov
add
adc
add
push
jle
add
add
push
jle
add
add
pop
cmp
add
add
jmp
outs
xor
dec
cmp
or
or
or
add
sub
add
add
(bad)
(bad)
push
add
add
add
add
add
add
add
add
add
mov
adc
test
pop
and
movs
and
adc
pop
xor
xor
and
xor
xor
lahf
sar
and
mov
sub
pop
pop
push
popa
inc
add
add
ja
add
and
into
pop
cmp
(bad)
call
add
add
add
add
add
add
add
add
add
scas
(bad)
(bad)
dec
add
add
add
mov
(bad)
(bad)
jmp
sub
dec
cmp
(bad)
(bad)
call
push
pop
or
add
add
mov
ficomp
jmp
leave
or
push
(bad)
(bad)
call
or
or
(bad)
(bad)
call
or
pop
(bad)
(bad)
(bad)
jle
add
add
adc
and
add
xchg
and
inc
add
add
inc
mov
add
sbb
mov
or
push
and
add
add
add
add
inc
pop
pop
or
add
mov
add
or
xor
add
or
sbb
pop
xor
sbb
add
add
(bad)
(bad)
call
sub
add
sbb
add
call
or
cmc
sbb
add
inc
sub
add
push
and
and
and
adc
call
xor
add
add
add
add
adc
add
push
add
ret
add
push
sub
adc
or
or
add
add
add
sub
es
jae
add
or
add
adc
or
or
add
add
add
sub
es
add
sub
add
push
sub
xor
push
add
add
add
adc
add
push
add
add
sub
add
push
sub
add
xor
add
add
adc
add
push
add
add
or
add
xor
add
add
add
add
add
add
push
pop
sub
add
xor
add
add
add
add
add
add
push
push
sub
add
xor
add
add
add
add
push
add
jno
add
and
add
xor
add
add
add
add
sub
es
add
sub
add
or
adc
or
or
add
add
add
sub
es
add
add
or
add
xor
add
add
add
add
sub
es
add
sub
add
sub
xor
push
add
add
add
add
add
push
add
add
outs
adc
add
sub
add
xor
add
add
add
add
adc
add
push
sub
es
sub
add
push
and
add
and
add
sbb
add
add
(bad)
(bad)
call
sub
add
es
inc
cmp
sub
add
push
sbb
(bad)
add
push
and
inc
add
add
idiv
(bad)
jmp
and
and
into
std
jae
popa
and
add
add
push
add
add
(bad)
(bad)
jmp
(bad)
(bad)
jmp
and
or
inc
pop
add
add
add
add
add
add
add
add
add
add
(bad)
(bad)
call
xchg
sbb
fld
sub
add
push
sbb
rol
jae
add
push
jge
add
add
sub
push
and
sbb
and
mov
sub
xor
add
add
sub
es
push
sub
add
push
and
add
sbb
add
add
(bad)
(bad)
call
sub
add
es
add
add
and
add
pop
inc
pop
add
add
add
jle
add
test
add
xor
add
and
add
add
sub
add
push
and
add
sbb
add
add
(bad)
(bad)
jmp
sbb
pushf
add
add
or
mov
jnp
add
add
sub
add
int
add
push
pop
cmp
add
sbb
add
add
(bad)
(bad)
jmp
sbb
pop
cmp
add
and
jb
and
xchg
and
push
add
add
add
adc
add
add
(bad)
(bad)
call
(bad)
(bad)
call
sub
or
xor
push
lds
sub
or
mov
and
xor
mov
or
cmp
pop
add
lods
add
sbb
add
(bad)
(bad)
jmp
xor
or
add
pusha
(bad)
(bad)
jmp
(bad)
inc
add
add
add
add
(bad)
(bad)
jmp
(bad)
(bad)
call
add
add
add
sbb
int
cmp
pusha
and
and
push
(bad)
(bad)
call
sub
add
sub
add
push
(bad)
(bad)
call
inc
add
add
idiv
(bad)
call
sub
add
push
and
inc
add
add
idiv
(bad)
jmp
sub
xor
add
add
push
sbb
je
add
cmp
add
hlt
cdq
(bad)
adc
test
popa
cmp
sub
add
push
and
add
add
sub
add
push
and
add
cmp
add
add
add
add
sub
add
push
and
add
and
inc
add
add
idiv
(bad)
call
sub
add
es
or
add
and
dec
push
mov
mov
and
or
or
out
add
add
dec
pop
add
sub
inc
add
add
add
add
add
(bad)
(bad)
push
(bad)
jmp
add
sahf
add
add
sbb
ret
add
fcomp
std
sub
sbb
or
cmp
inc
add
add
idiv
(bad)
jmp
and
aas
scas
xchg
inc
mov
popa
and
pop
inc
or
add
dec
add
add
(bad)
(bad)
inc
(bad)
(bad)
jmp
(bad)
inc
add
or
add
std
(bad)
(bad)
push
sub
loope
js
sub
add
and
add
add
int3
add
add
or
add
pop
or
dec
jle
add
add
push
jle
add
add
push
xchg
jle
add
add
cmp
add
pop
popf
sbb
xor
sub
add
add
add
add
and
out
sub
es
add
push
sub
add
add
(bad)
jmp
(bad)
(bad)
(bad)
jle
(bad)
(bad)
std
(bad)
(bad)
jmp
(bad)
(bad)
jmp
(bad)
(bad)
fdivr
(bad)
dec
(bad)
(bad)
inc
(bad)
(bad)
inc
add
add
sub
adc
fwait
cmc
mov
mov
(bad)
(bad)
jmp
add
adc
(bad)
icebp
add
add
add
sub
es
jle
add
add
add
add
push
and
push
dec
pop
and
in
arpl
popa
and
pop
inc
or
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
in
add
adc
and
and
mov
scas
adc
cmp
add
add
add
jecxz
add
mov
add
add
add
add
add
add
add
xor
add
and
ins
(bad)
(bad)
call
or
add
pop
and
and
movs
test
cmp
(bad)
call
pop
and
and
mov
and
inc
(bad)
(bad)
call
or
outs
shl
and
aaa
(bad)
(bad)
inc
ds
push
popa
inc
add
add
dec
add
add
test
(bad)
(bad)
call
leave
add
push
and
mov
cmp
(bad)
(bad)
call
or
add
pop
and
(bad)
(bad)
pop
and
rcl
popa
cmp
(bad)
(bad)
call
add
add
add
add
jle
sub
(bad)
call
push
pop
sbb
add
out
cmps
add
add
sbb
add
adc
(bad)
inc
mov
add
sbb
mov
add
sbb
rol
add
and
pop
outs
xchg
and
mov
add
jmp
or
stos
add
add
and
add
add
mov
add
jle
add
add
mov
add
xchg
jle
add
add
je
pop
pop
outs
pop
popf
pop
sbb
and
add
idiv
(bad)
call
sub
add
adc
lea
add
add
nop
(bad)
(bad)
call
or
cmc
pop
or
add
cmp
inc
sub
or
add
js
(bad)
inc
add
adc
or
xchg
add
add
add
adc
add
push
jle
add
add
add
pop
and
jnp
dec
popa
and
pop
inc
or
add
scas
add
add
add
xchg
add
add
add
add
(bad)
(bad)
jmp
add
add
mov
add
adc
add
add
add
or
addr16
inc
call
test
popa
sub
test
scas
pop
and
fldcw
popa
sub
add
add
add
add
add
add
pop
add
add
add
jb
add
xor
add
jl
add
ret
add
add
in
pop
sbb
(bad)
(bad)
(bad)
jle
add
add
push
push
adc
or
mov
jmp
inc
popa
cmp
call
adc
int3
adc
pop
cmp
(bad)
(bad)
inc
push
popa
inc
add
add
push
add
add
outs
mov
and
sbb
(bad)
call
or
leave
out
add
adc
(bad)
call
sub
sbb
add
outs
(bad)
(bad)
inc
mov
add
sbb
sub
add
push
push
pop
pop
or
call
and
add
add
mov
sbb
pop
xor
add
idiv
(bad)
call
sub
add
adc
pop
jns
and
pop
add
pop
adc
and
(bad)
call
add
add
add
jmp
adc
inc
add
add
add
add
add
add
add
add
add
add
add
retf
push
sub
inc
(bad)
(bad)
inc
adc
or
fadd
add
pop
add
adc
add
push
jle
add
add
push
and
std
lods
pushf
and
and
pop
inc
or
add
mov
add
add
add
add
add
add
add
add
add
add
add
add
add
cmp
add
add
add
add
pop
adc
and
mov
test
fldcw
add
add
add
add
add
je
add
xor
add
xor
add
sbb
add
add
add
add
add
aad
add
dec
add
add
icebp
out
(bad)
cmp
(bad)
call
or
test
pop
and
cmp
(bad)
inc
pop
push
popa
inc
add
add
pop
add
add
jecxz
mov
(bad)
call
adc
jbe
ficomp
outs
pop
leave
pop
popa
cmp
(bad)
(bad)
call
retf
add
push
and
out
mov
call
add
jmp
retf
pop
and
push
jns
cmp
(bad)
(bad)
call
or
pop
mov
(bad)
(bad)
call
adc
mov
jecxz
(bad)
call
push
pop
je
and
in
add
out
cmps
add
add
adc
and
and
adc
inc
mov
add
sbb
sub
add
push
and
sbb
and
adc
inc
pop
pop
or
xchg
add
add
add
fisttp
add
or
sbb
xor
add
idiv
(bad)
call
sub
add
adc
pop
inc
xchg
and
inc
add
pop
adc
call
sub
adc
pop
pop
xchg
and
add
pop
adc
inc
sub
add
push
and
add
call
xor
add
add
add
add
adc
add
push
jle
add
add
add
add
push
and
xchg
and
and
adc
pop
or
or
add
push
add
add
add
add
(bad)
(bad)
jmp
add
add
add
add
add
add
add
fild
add
push
adc
or
repnz
(bad)
jno
and
sub
add
add
add
add
add
add
add
add
add
add
add
and
add
(bad)
(bad)
call
or
fstp
movs
pop
and
ins
adc
popa
cmp
(bad)
inc
popa
pop
push
jle
add
add
jl
cmp
add
jl
jle
add
add
mov
add
xchg
pop
and
add
add
pop
push
popa
inc
add
add
dec
add
add
fist
(bad)
(bad)
call
add
mov
adc
xchg
dec
mov
cmp
(bad)
(bad)
call
or
rol
arpl
popa
cmp
(bad)
(bad)
call
or
add
sub
add
add
xchg
sbb
cmp
(bad)
(bad)
call
add
push
xor
add
mov
pop
(bad)
(bad)
inc
mov
add
sbb
rol
add
push
pop
pop
or
popf
add
add
scas
add
add
and
add
pop
or
pop
pop
xor
add
idiv
(bad)
call
sub
add
adc
pop
imul
pop
adc
sar
(bad)
call
or
cmc
sbb
add
(bad)
(bad)
(bad)
jmp
sbb
or
or
add
add
add
add
add
add
add
add
int3
add
push
sub
call
xor
add
add
add
add
adc
add
push
add
xlat
add
push
sub
adc
or
or
add
add
add
sub
es
jae
add
or
add
adc
or
or
add
add
add
sub
es
add
sub
add
push
sub
xor
add
add
add
add
adc
add
push
add
add
fld
add
and
xor
add
add
add
add
sub
es
add
sub
add
push
sub
xor
add
add
add
add
adc
add
push
add
sub
add
push
and
adc
or
or
add
add
add
sub
es
add
fadd
add
sub
adc
or
or
add
add
add
sub
es
add
add
or
add
xor
add
add
add
add
add
add
push
pop
sub
add
xor
add
add
add
add
add
add
push
push
sub
add
xor
add
add
add
add
add
add
push
add
add
or
add
xor
add
add
add
add
sub
es
add
outs
daa
add
or
adc
or
sldt
add
add
add
add
push
add
add
sub
add
and
xor
add
add
add
add
sub
es
add
outs
sub
add
sub
xor
add
add
add
add
add
add
push
add
outs
sbb
add
and
adc
or
or
add
add
add
sub
es
add
add
or
add
xor
add
add
adc
add
push
sub
es
pop
sub
add
push
and
inc
add
add
idiv
(bad)
call
sub
add
es
loope
add
and
add
sbb
add
add
(bad)
(bad)
jmp
and
sti
add
add
add
add
inc
sub
add
jae
add
or
or
add
and
add
and
add
sbb
push
sub
add
push
and
add
sbb
add
(bad)
(bad)
jmp
and
pop
lds
add
inc
add
add
add
add
add
(bad)
(bad)
(bad)
jl
add
pop
or
loopne
add
and
add
sbb
add
add
(bad)
(bad)
jmp
pop
or
cmp
add
add
sub
add
push
and
push
and
add
add
add
add
sub
inc
sub
mov
and
add
add
sub
inc
sub
mov
and
add
add
add
add
and
fild
add
and
adc
and
add
add
add
add
sbb
out
sub
add
push
and
adc
and
add
add
add
add
adc
out
sub
add
push
and
adc
and
add
add
adc
out
sub
mov
and
add
add
push
jnp
inc
sub
add
push
and
adc
and
add
add
add
and
out
sub
mov
add
sub
and
push
cmp
sbb
or
add
add
add
and
out
sub
add
push
and
add
cmc
(bad)
(bad)
call
or
add
mov
add
add
(bad)
(bad)
push
add
add
(bad)
(bad)
inc
(bad)
(bad)
inc
add
add
inc
add
add
idiv
(bad)
jmp
sub
and
pusha
sbb
dec
jne
in
popa
sub
or
sub
add
push
and
inc
add
add
idiv
(bad)
jmp
and
dec
jbe
and
(bad)
dec
fldenv
or
pop
inc
pop
add
add
(bad)
(bad)
(bad)
(bad)
(bad)
jmp
(bad)
(bad)
call
add
add
(bad)
(bad)
call
sub
add
push
and
(bad)
call
inc
add
add
idiv
(bad)
jmp
and
mov
add
adc
or
or
add
add
add
sub
es
sub
add
xor
adc
add
add
add
sub
es
add
add
push
and
add
xor
add
add
add
add
add
add
push
pop
sub
add
xor
add
add
add
add
add
add
push
push
sub
add
xor
add
add
adc
add
push
sub
es
add
out
add
add
in
add
sub
add
adc
or
mov
add
sbb
add
sub
es
sbb
cmp
pop
and
fs
jo
cmp
inc
pop
add
add
add
add
add
add
mov
add
pop
add
add
add
add
sbb
add
add
or
add
inc
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
cmp
add
add
pop
or
lds
or
add
or
pop
xchg
and
or
repz
ins
aaa
cmp
and
push
pop
and
cmp
or
sub
or
sub
add
push
pop
or
cmp
call
inc
add
add
idiv
(bad)
call
sub
add
es
je
and
in
add
cmp
(bad)
(bad)
call
sub
add
add
add
in
add
push
cmp
dec
and
adc
pop
pop
and
rcr
popa
sub
add
cli
(bad)
(bad)
call
inc
add
add
idiv
(bad)
jmp
call
es
add
push
and
(bad)
call
inc
add
add
idiv
(bad)
jmp
sbb
add
(bad)
jmp
add
ss
or
add
add
add
add
(bad)
(bad)
jmp
(bad)
(bad)
call
(bad)
(bad)
(bad)
cmp
(bad)
call
(bad)
call
pop
cmp
(bad)
(bad)
call
add
(bad)
(bad)
jmp
and
mov
and
mov
repz
(bad)
inc
jnp
add
add
inc
(bad)
(bad)
call
add
(bad)
(bad)
call
jmp
add
xor
and
add
add
add
sub
es
add
out
add
and
add
pop
and
add
add
fild
add
sub
add
sub
add
xor
add
add
add
add
adc
add
push
add
jmp
add
sub
adc
or
or
add
add
add
sub
es
jae
add
or
add
adc
or
or
add
add
add
sub
es
add
xor
add
sub
adc
or
push
add
add
add
add
add
push
pop
sub
add
xor
add
add
add
add
add
add
push
push
sub
add
xor
add
add
add
add
sub
es
add
sub
add
or
adc
or
or
add
add
add
sub
es
add
add
or
add
xor
add
add
add
add
add
add
push
sub
es
add
lock
push
sub
or
or
sldt
add
add
add
add
push
sub
add
push
fiadd
fiadd
sub
add
add
add
add
pop
or
add
add
add
xor
add
add
add
add
add
add
push
pop
sub
add
xor
add
add
add
add
add
add
push
push
sub
add
xor
add
add
add
add
add
add
push
add
push
add
or
add
xor
add
add
add
add
add
add
push
sub
es
add
adc
add
sub
adc
or
adc
add
add
add
sub
es
sub
es
jae
add
or
sub
sbb
or
fld
add
pop
add
adc
add
push
sub
add
sub
add
push
and
add
and
add
and
sub
sbb
add
add
(bad)
(bad)
call
sub
add
es
or
pop
sbb
inc
pop
add
add
add
fdivr
(bad)
call
add
dec
add
add
(bad)
(bad)
inc
add
add
add
push
sub
push
jb
add
jo
stc
add
push
and
inc
add
add
idiv
(bad)
call
sub
add
push
and
inc
add
add
idiv
(bad)
jmp
sbb
stos
fiadd
jb
add
jo
stc
add
push
and
inc
add
add
idiv
(bad)
jmp
add
sbb
mov
or
cli
add
push
and
(bad)
call
idiv
(bad)
jmp
fiadd
fiadd
fiadd
push
sub
sub
add
add
add
add
add
into
rol
add
xor
add
add
add
add
add
add
push
sub
add
push
adc
push
test
push
jae
add
or
std
add
push
fiadd
fiadd
sub
adc
add
add
sbb
add
xor
add
add
adc
add
push
pop
adc
adc
add
adc
sub
add
push
and
out
add
sbb
add
(bad)
(bad)
call
sub
add
adc
pop
sub
add
and
cmp
add
add
or
jp
add
add
and
push
inc
adc
add
jb
add
jo
sub
add
push
and
adc
pop
sub
adc
outs
aaa
add
or
add
or
add
adc
add
add
add
add
and
add
sbb
add
add
(bad)
(bad)
call
adc
ja
add
adc
add
inc
add
and
add
pop
or
add
loop
add
adc
sbb
or
adc
cmp
add
pop
inc
add
add
idiv
(bad)
jmp
adc
adc
pop
pop
sub
adc
sbb
sub
inc
add
and
add
push
and
add
and
cli
add
push
and
add
sbb
add
(bad)
(bad)
jmp
pop
adc
test
pop
je
add
add
and
push
inc
adc
pop
adc
fld
add
sub
adc
call
and
add
sbb
add
add
(bad)
(bad)
call
or
mov
add
or
pop
sub
add
push
and
sub
add
push
and
add
pop
inc
add
add
idiv
(bad)
jmp
adc
or
push
add
push
and
aas
cmp
add
sbb
add
add
(bad)
(bad)
(bad)
cmp
add
add
push
sub
pop
or
push
add
push
and
xor
add
idiv
(bad)
call
push
or
pop
pop
pop
call
adc
jnp
add
add
add
add
and
add
sbb
add
add
(bad)
(bad)
jmp
inc
add
and
cmp
add
add
and
add
and
add
add
adc
push
adc
inc
sbb
add
and
add
jg
add
cs
(bad)
(bad)
fdivr
(bad)
(bad)
mov
(bad)
(bad)
inc
(bad)
(bad)
dec
add
dec
(bad)
(bad)
jmp
(bad)
inc
add
add
(bad)
(bad)
jmp
(bad)
(bad)
dec
std
(bad)
call
(bad)
dec
(bad)
(bad)
jmp
(bad)
jmp
(bad)
(bad)
call
add
add
add
add
sub
call
pop
sbb
pop
sbb
mov
adc
adc
pop
push
cmp
(bad)
call
add
add
add
and
add
add
inc
add
add
idiv
(bad)
call
movhps
pop
(bad)
(bad)
call
inc
add
add
idiv
(bad)
jmp
push
adc
cmp
or
add
and
(bad)
call
inc
add
add
idiv
(bad)
dec
adc
pop
pop
call
(bad)
(bad)
(bad)
jle
add
add
adc
pop
add
push
pop
pop
sub
add
push
and
(bad)
call
inc
add
add
idiv
(bad)
jmp
adc
push
sub
or
or
in
(bad)
(bad)
jle
add
add
add
cmp
add
and
inc
add
add
idiv
(bad)
(bad)
jle
add
add
add
cmp
add
and
out
add
add
or
add
and
or
add
and
or
retf
add
idiv
(bad)
call
or
or
add
and
adc
adc
add
and
or
or
or
add
and
sub
sbb
add
add
(bad)
(bad)
call
or
push
and
stos
add
add
push
adc
sub
add
add
(bad)
(bad)
call
or
push
and
or
pop
adc
fiadd
es
adc
fiadd
adc
cmp
add
add
inc
add
add
idiv
(bad)
push
add
jo
cmp
add
and
cmp
add
and
or
lahf
add
add
adc
add
or
cli
add
push
and
add
and
add
sbb
add
add
(bad)
(bad)
jmp
sbb
je
add
adc
adc
sbb
imul
pop
sub
movaps
add
or
push
adc
adc
sub
add
push
and
sub
add
push
and
inc
add
add
idiv
(bad)
jmp
sub
jnp
add
add
push
add
jo
push
add
push
and
sub
adc
sub
add
or
xchg
pop
or
adc
add
add
add
add
(bad)
(bad)
jmp
(bad)
(bad)
(bad)
mov
add
add
add
add
add
add
(bad)
push
(bad)
push
add
add
sub
adc
sub
add
push
and
inc
add
add
idiv
(bad)
call
sub
repz
push
and
(bad)
(bad)
jmp
sbb
lahf
adc
sub
add
push
and
add
fiadd
jle
add
add
add
push
outs
inc
add
or
push
adc
fimul
or
adc
adc
add
fcom
adc
sub
inc
add
add
add
loopne
add
or
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
dec
add
add
add
add
adc
or
or
add
add
add
push
add
add
or
add
xor
add
add
add
add
push
add
add
or
add
xor
add
add
add
add
add
add
push
add
add
lar
push
and
xor
add
add
add
add
add
add
push
pop
sub
add
xor
add
add
add
add
add
add
push
push
sub
add
xor
add
add
add
add
push
add
inc
add
or
add
xor
add
add
add
add
sub
es
add
outs
inc
add
or
adc
or
or
add
add
add
push
add
add
or
add
xor
add
add
add
add
push
add
pop
add
or
add
xor
add
add
add
add
add
add
push
add
outs
inc
add
or
adc
or
push
add
add
add
add
add
push
add
sub
add
and
adc
or
or
add
add
add
push
add
add
or
add
xor
add
add
add
add
add
add
push
add
outs
dec
add
or
adc
or
push
add
add
add
add
add
push
add
outs
dec
add
or
adc
or
sldt
add
add
add
add
push
add
add
dec
add
or
xor
add
add
add
add
add
add
push
add
outs
dec
add
or
adc
or
or
add
add
add
sub
es
add
sub
add
sub
xor
add
add
add
add
push
add
dec
add
or
add
xor
add
add
add
add
add
add
push
add
outs
dec
add
or
adc
or
or
add
add
add
push
add
add
or
add
xor
adc
add
add
add
sub
es
add
add
outs
or
sub
xor
add
add
add
add
add
add
push
add
sub
add
push
and
adc
or
push
add
add
add
add
add
push
add
sub
add
and
adc
or
adc
add
add
add
sub
es
add
add
or
add
and
or
push
add
add
add
add
add
push
add
sub
add
and
adc
or
push
add
add
add
add
add
push
add
add
outs
adc
add
sub
add
xor
add
add
add
add
add
add
push
add
sub
add
and
adc
or
or
add
add
add
sub
es
add
sub
add
sub
xor
add
add
add
add
add
add
push
add
push
add
or
add
xor
repnz
add
add
adc
add
push
sub
es
pop
adc
sbb
add
and
add
sbb
add
add
idiv
(bad)
call
sub
add
es
sub
add
push
and
pop
sub
or
sbb
add
and
cmp
add
add
inc
add
add
idiv
(bad)
jmp
add
add
or
add
add
push
cmp
add
add
inc
add
add
idiv
(bad)
jmp
cmp
adc
or
adc
loope
add
add
add
add
add
add
sub
add
push
and
add
sbb
add
(bad)
(bad)
jmp
add
add
or
add
add
push
cmp
add
add
jb
add
jo
push
add
or
add
sbb
add
add
(bad)
(bad)
call
adc
test
add
push
sub
or
jb
add
jo
push
add
push
and
add
sbb
add
add
idiv
(bad)
call
or
pop
add
add
jle
add
or
add
add
cmp
add
add
push
sub
add
push
and
add
jnp
add
add
dec
add
jo
lar
push
and
inc
add
add
idiv
(bad)
inc
jle
add
or
add
add
or
sbb
add
and
add
sbb
add
add
(bad)
(bad)
(bad)
cmp
add
add
add
pop
adc
cmp
add
add
pop
pop
movq
or
add
cmp
add
add
add
sub
add
push
and
(bad)
(bad)
call
add
(bad)
(bad)
call
adc
cmp
inc
add
add
idiv
(bad)
jmp
add
add
or
add
add
cmp
sahf
add
jge
add
add
xchg
es
or
push
and
inc
add
add
idiv
(bad)
jmp
add
add
add
pop
add
jo
and
add
and
(bad)
call
inc
add
add
idiv
(bad)
call
pop
sub
add
add
(bad)
(bad)
jmp
add
push
sub
add
push
and
add
jge
add
add
xor
jb
add
jo
push
add
push
and
(bad)
call
add
(bad)
(bad)
(bad)
cmp
adc
add
add
add
(bad)
dec
(bad)
(bad)
(bad)
cmp
(bad)
(bad)
(bad)
(bad)
call
add
add
(bad)
(bad)
(bad)
in
std
(bad)
(bad)
mov
std
(bad)
jmp
jmp
(bad)
(bad)
mov
std
(bad)
jmp
(bad)
(bad)
inc
(bad)
(bad)
dec
std
(bad)
jmp
(bad)
(bad)
(bad)
cmp
add
pop
or
sbb
add
and
inc
add
add
idiv
(bad)
jmp
xchg
push
adc
sub
add
push
and
(bad)
call
inc
add
add
idiv
(bad)
jmp
pop
or
jb
(bad)
jmp
add
adc
or
mov
add
and
add
sub
es
sbb
pop
push
add
add
add
pop
add
push
and
add
add
or
inc
or
add
lea
add
aad
add
lea
add
and
add
ins
add
add
add
add
add
add
add
or
add
add
add
add
add
or
mov
add
push
add
or
sbb
add
and
add
sbb
add
(bad)
(bad)
call
sub
add
es
sub
add
sbb
add
and
inc
add
add
idiv
(bad)
inc
jnp
add
add
add
jo
push
add
or
cmp
(bad)
inc
jb
add
jo
sbb
add
and
cmp
(bad)
call
inc
add
add
idiv
(bad)
jmp
add
ja
add
pop
inc
add
add
idiv
(bad)
inc
jnp
add
add
cmps
add
add
push
add
push
and
inc
add
add
idiv
(bad)
call
cmp
(bad)
(bad)
inc
jb
add
jo
push
add
or
idiv
(bad)
inc
add
add
add
dec
add
or
inc
add
add
idiv
(bad)
inc
jnp
add
add
add
jo
sbb
add
and
sar
inc
jb
add
jo
push
add
or
es
cmp
adc
pop
or
popf
(bad)
(bad)
inc
outs
pop
add
or
adc
or
sldt
add
add
add
add
push
add
add
and
add
and
xor
add
add
add
add
add
add
push
add
outs
push
add
or
adc
or
push
add
add
add
add
add
push
add
outs
push
add
or
adc
or
or
add
add
add
push
add
add
or
add
xor
add
add
add
add
add
add
push
pop
sub
add
xor
add
add
add
add
add
add
push
push
sub
add
xor
add
add
add
add
add
add
push
add
outs
aaa
add
or
adc
or
or
add
add
add
push
add
add
or
add
xor
add
add
add
add
add
add
push
add
outs
push
add
or
adc
or
push
add
add
add
add
add
push
add
outs
dec
add
or
adc
or
sldt
add
add
add
add
push
add
add
lar
push
and
xor
add
add
add
add
add
add
push
sub
es
add
and
add
sub
adc
or
or
add
add
add
sub
es
add
pop
add
or
add
xor
add
add
add
add
add
add
push
sub
es
add
and
add
sub
adc
or
or
add
add
add
sub
es
add
pop
add
or
add
xor
add
add
add
add
adc
add
push
sbb
sub
sbb
add
add
idiv
(bad)
call
sub
add
es
jle
add
add
add
jle
add
add
add
lock
add
idiv
(bad)
(bad)
cmp
add
add
pop
or
pop
push
or
imul
add
add
add
(bad)
(bad)
inc
add
add
add
add
add
add
add
(bad)
(bad)
jmp
add
add
pop
add
or
add
and
das
add
push
and
inc
add
add
idiv
(bad)
jmp
push
pop
sub
add
add
(bad)
(bad)
jmp
sub
pop
or
push
sbb
add
add
(bad)
(bad)
call
cmp
(bad)
dec
pop
sub
imul
add
add
(bad)
(bad)
call
or
das
add
push
and
(bad)
call
inc
add
add
idiv
(bad)
jmp
add
add
or
add
and
cmp
(bad)
call
sub
pop
pop
or
cmp
sub
sub
sbb
add
add
(bad)
(bad)
call
cmp
(bad)
(bad)
call
sub
add
xor
add
add
and
add
sub
es
jae
add
or
add
pop
sbb
add
add
(bad)
(bad)
call
sub
add
es
add
sub
add
push
and
add
sub
add
push
and
push
sub
sbb
add
add
(bad)
(bad)
inc
outs
adc
add
fadd
sub
add
add
add
or
das
cmp
adc
add
add
xor
add
add
and
add
push
jae
add
or
add
pop
sbb
add
add
idiv
(bad)
call
sub
add
es
add
sub
add
push
and
add
sub
add
push
and
push
sub
sbb
add
add
idiv
(bad)
inc
sub
add
push
fadd
sub
add
add
add
or
das
cmp
adc
add
add
xor
add
add
adc
add
push
pop
pop
cmp
dec
add
or
cmp
inc
add
add
idiv
(bad)
call
sub
add
es
push
and
add
sbb
add
add
(bad)
(bad)
jmp
push
sub
add
push
and
cmp
add
push
adc
pop
sub
add
and
sbb
sbb
sub
imul
add
and
sbb
add
push
and
adc
sub
sbb
add
(bad)
(bad)
call
sbb
xor
add
fcom
nop
add
add
inc
add
add
idiv
(bad)
call
adc
adc
add
and
add
add
cmp
add
adc
cmp
add
add
pop
adc
fild
add
or
add
push
and
(bad)
add
add
adc
adc
adc
sub
add
push
and
push
cmp
inc
add
add
idiv
(bad)
jmp
adc
or
or
sbb
imul
and
cmp
adc
adc
adc
adc
adc
nop
add
add
add
(bad)
(bad)
call
or
sub
sbb
add
add
(bad)
(bad)
jmp
push
sub
add
push
and
add
add
cmp
add
adc
push
sub
add
push
and
add
add
cmp
add
adc
sbb
cmp
adc
push
adc
sub
add
push
and
sub
or
xor
adc
pop
sbb
sbb
adc
adc
sub
add
push
and
add
add
pop
adc
adc
inc
sub
add
mov
add
(bad)
(bad)
(bad)
out
std
(bad)
inc
add
add
add
add
add
add
add
popf
add
add
add
add
add
add
add
inc
add
add
add
add
add
add
add
add
add
add
add
add
add
add
dec
add
loope
add
pop
add
add
(bad)
call
add
arpl
add
lahf
(bad)
(bad)
jmp
add
add
add
add
(bad)
(bad)
jmp
(bad)
(bad)
(bad)
mov
(bad)
(bad)
call
(bad)
(bad)
push
(bad)
(bad)
(bad)
jge
(bad)
dec
add
add
add
add
adc
das
add
push
and
(bad)
call
inc
add
add
idiv
(bad)
(bad)
cmp
(bad)
(bad)
jmp
xor
add
and
and
(bad)
call
or
adc
add
and
sub
push
(bad)
(bad)
push
add
jo
pop
add
or
sub
add
push
and
cmp
(bad)
(bad)
call
or
or
add
sbb
add
add
(bad)
(bad)
call
and
cmp
(bad)
(bad)
call
add
(bad)
(bad)
jmp
adc
sbb
sub
imul
add
and
sbb
push
and
adc
adc
add
(bad)
(bad)
call
sbb
xor
add
fdiv
add
jo
pop
add
or
outs
cmp
or
sub
cmp
(bad)
call
inc
add
add
idiv
(bad)
jmp
or
add
push
and
sub
adc
pop
sbb
push
(bad)
(bad)
call
pop
push
cmp
(bad)
call
inc
add
add
idiv
(bad)
call
and
cmp
(bad)
dec
outs
cld
add
push
and
add
push
dec
add
mov
add
sbb
add
add
(bad)
(bad)
dec
sub
es
cmp
(bad)
(bad)
dec
sub
add
push
and
add
push
and
cmp
std
(bad)
inc
push
sub
add
and
add
sbb
add
add
(bad)
(bad)
call
push
sub
add
push
and
(bad)
call
add
(bad)
(bad)
jmp
adc
sub
add
push
and
or
lods
std
(bad)
call
or
push
adc
pop
adc
das
add
push
and
(bad)
call
inc
add
add
idiv
(bad)
(bad)
cmp
adc
sbb
imul
and
sub
add
push
and
(bad)
call
inc
add
add
idiv
(bad)
(bad)
cmp
(bad)
call
adc
push
adc
sub
cmp
(bad)
call
inc
add
add
idiv
(bad)
jmp
adc
push
ds
(bad)
call
idiv
(bad)
call
adc
push
std
(bad)
call
or
adc
add
and
cmp
adc
adc
add
and
std
cld
(bad)
call
sbb
sbb
sub
add
push
and
and
call
sub
jae
add
push
or
cmp
cld
(bad)
call
prefetchnta
sti
(bad)
call
inc
add
add
idiv
(bad)
call
sub
add
push
and
(bad)
call
inc
add
add
idiv
(bad)
jmp
pop
and
test
(bad)
call
or
adc
add
and
daa
cmp
add
std
(bad)
call
inc
add
add
idiv
(bad)
call
sbb
add
push
and
(bad)
call
inc
add
add
idiv
(bad)
jmp
or
add
push
and
add
push
dec
add
inc
std
(bad)
call
inc
add
add
idiv
(bad)
call
inc
cld
(bad)
call
push
cmp
std
(bad)
call
inc
add
add
idiv
(bad)
call
pop
cmp
(bad)
call
inc
add
add
idiv
(bad)
jmp
pop
adc
adc
add
and
add
add
cmp
add
adc
pop
sbb
cmp
cld
(bad)
call
inc
add
add
idiv
(bad)
jmp
push
adc
cmp
(bad)
dec
sub
add
push
and
cmp
sti
(bad)
dec
sub
add
push
and
add
push
and
adc
add
and
cmp
outs
cld
add
push
and
push
cmp
adc
sbb
imul
and
sub
add
push
and
(bad)
call
inc
add
add
idiv
(bad)
jmp
jle
add
add
or
call
add
sbb
movups
nop
bound
add
add
jnp
jge
inc
ret
call
inc
add
add
idiv
(bad)
call
movhps
(bad)
(bad)
call
inc
add
add
idiv
(bad)
dec
sub
add
push
and
or
sub
(bad)
dec
sub
add
sbb
add
add
and
add
add
add
add
jecxz
and
add
add
add
adc
or
adc
add
add
add
sub
es
add
adc
cmps
add
add
aas
add
push
and
or
adc
add
add
add
sub
es
add
add
sub
add
and
or
adc
add
add
add
sub
es
add
add
aas
add
push
and
push
add
add
add
sub
es
jae
add
push
or
cmp
add
add
add
(bad)
(bad)
call
sub
add
es
add
push
or
inc
add
push
and
sub
add
and
add
pop
pop
jg
pop
sbb
add
pusha
add
or
pusha
adc
sub
add
and
pusha
adc
sub
add
and
pusha
adc
sub
add
and
adc
sub
or
outs
or
add
adc
add
and
add
add
cmp
add
adc
adc
push
adc
add
sbb
imul
add
push
add
pop
and
xchg
popa
and
add
add
xchg
adc
push
fs
adc
adc
pop
pop
and
fstp
inc
add
add
idiv
(bad)
call
push
adc
and
add
inc
add
push
push
pop
adc
inc
add
push
push
push
sub
add
push
push
sub
add
push
or
inc
add
push
push
adc
sub
add
push
outs
add
or
push
sub
add
push
add
sbb
imul
sub
add
and
add
inc
add
push
and
adc
sub
imul
push
push
sub
add
push
adc
push
adc
sub
imul
pop
add
inc
add
push
sub
add
add
sub
add
push
and
adc
outs
mov
adc
or
xor
sbb
add
add
(bad)
(bad)
inc
adc
push
adc
inc
add
push
pop
sub
add
and
inc
add
add
idiv
(bad)
inc
outs
sahf
add
push
sub
add
add
sub
add
push
and
adc
push
and
push
push
xor
pop
inc
add
add
idiv
(bad)
inc
adc
adc
add
pop
sub
add
and
inc
add
add
idiv
(bad)
inc
outs
popf
add
push
and
and
add
sub
add
push
pop
adc
stc
add
push
push
pop
adc
inc
add
push
push
push
sub
add
push
push
outs
stc
add
push
push
or
inc
add
push
push
adc
sub
add
push
adc
imul
push
add
sbb
imul
push
adc
sub
imul
push
push
sub
add
push
push
sub
add
push
push
sub
add
push
push
sub
add
push
push
sub
add
push
push
sub
add
push
adc
push
adc
sub
imul
push
and
add
add
push
push
sub
add
push
push
sub
add
push
pop
sub
add
push
pop
sub
add
push
pop
adc
sub
imul
push
pop
push
adc
sub
imul
sub
add
push
push
sub
add
push
adc
push
outs
data16
or
punpckhwd
inc
add
push
cmp
pop
inc
mov
add
sbb
add
add
idiv
(bad)
inc
and
jge
sub
add
push
add
sbb
imul
push
adc
cmp
add
add
(bad)
call
add
sub
imul
add
push
and
add
and
adc
adc
push
adc
sub
imul
push
sub
add
push
and
push
outs
cli
add
push
push
adc
sub
imul
jae
add
push
adc
adc
adc
outs
mov
xor
add
adc
add
and
adc
adc
dec
add
push
and
adc
inc
add
add
idiv
(bad)
inc
adc
adc
push
adc
outs
mov
es
sbb
add
add
idiv
(bad)
call
adc
add
push
sub
add
adc
add
and
adc
push
sub
add
and
pop
push
xor
sbb
add
add
(bad)
(bad)
inc
adc
push
adc
sub
add
adc
sub
add
and
inc
add
add
idiv
(bad)
inc
sub
add
push
and
adc
outs
add
or
adc
sub
add
and
add
push
push
adc
sub
push
adc
adc
sub
imul
sub
imul
sbb
add
add
idiv
(bad)
(bad)
cmp
add
add
sbb
js
inc
add
add
idiv
(bad)
inc
and
jge
sub
add
add
adc
cmps
add
add
aas
add
push
and
add
add
and
sbb
sbb
adc
sub
imul
adc
push
adc
push
adc
sub
imul
fisttp
sbb
sbb
add
add
idiv
(bad)
call
sbb
xor
add
fadd
sbb
jne
inc
add
add
idiv
(bad)
inc
and
jge
outs
cli
add
push
add
adc
cmps
add
add
aas
add
push
and
add
add
and
sbb
sbb
sbb
imul
adc
push
adc
push
adc
sub
imul
push
adc
add
add
idiv
(bad)
call
sbb
push
fadd
sub
add
push
sub
add
push
sub
add
and
push
adc
jb
add
jo
pop
sub
add
and
add
and
add
sbb
and
add
inc
dec
add
add
add
add
add
xor
add
add
add
add
add
jle
add
sub
add
add
add
add
aad
add
fld
add
add
add
xor
add
add
add
add
push
add
add
or
add
xor
add
add
add
add
add
add
push
pop
sub
add
xor
add
add
add
add
add
add
push
push
sub
add
xor
add
add
add
add
add
add
push
add
add
push
add
and
xor
add
add
add
add
add
add
push
add
add
imul
or
xor
add
add
add
add
add
add
push
add
add
or
add
xor
add
add
add
add
push
add
ins
add
or
add
xor
add
add
add
add
add
add
push
add
add
and
sub
adc
or
or
add
add
add
push
add
add
push
and
add
xor
add
add
add
add
push
add
add
push
and
add
xor
adc
add
add
add
sub
es
add
add
outs
or
sub
xor
add
add
add
add
push
add
add
or
add
xor
add
add
add
add
push
add
add
or
add
xor
adc
add
add
add
sub
es
add
add
outs
push
add
push
and
or
or
add
add
add
push
add
add
or
add
sub
add
adc
or
adc
add
add
add
sub
es
add
add
daa
add
push
and
or
adc
add
add
add
sub
es
add
add
outs
push
sub
xor
add
add
add
add
add
add
push
add
sub
add
push
and
adc
or
adc
add
add
add
sub
es
add
add
push
and
add
xor
add
add
add
add
push
add
ins
add
or
add
xor
add
add
add
add
sub
es
add
outs
cli
add
push
sub
xor
add
add
add
add
sub
es
add
outs
stc
add
push
sub
xor
add
add
add
add
push
add
pop
add
or
add
xor
add
add
add
add
add
add
push
add
outs
inc
add
or
adc
or
push
add
add
add
add
add
push
add
add
outs
adc
add
sub
add
xor
add
add
add
add
sub
es
add
outs
mov
adc
or
or
add
add
add
push
add
add
push
and
add
xor
add
add
add
add
push
add
add
push
and
add
xor
add
add
add
add
add
add
push
add
add
outs
add
or
xor
add
add
add
add
add
add
push
add
outs
mov
sub
add
xor
add
add
add
add
push
add
add
push
and
add
xor
add
add
add
add
sub
es
add
outs
add
or
adc
or
or
add
add
add
sub
es
add
add
or
add
xor
add
add
add
add
add
add
push
add
add
or
add
xor
add
add
add
add
push
add
add
or
add
xor
add
add
add
add
push
add
add
or
add
xor
add
add
add
add
add
add
push
add
add
sbb
add
and
xor
add
add
adc
add
push
sub
es
sub
add
and
add
and
inc
add
add
idiv
(bad)
call
sub
add
es
push
add
add
push
jge
add
add
cmp
pop
sub
jnp
add
add
push
add
sbb
imul
sbb
push
and
inc
add
add
idiv
(bad)
jmp
add
jge
add
add
sub
add
add
push
jge
add
add
jmp
or
add
sldt
add
(bad)
(bad)
call
(bad)
(bad)
call
(bad)
(bad)
dec
add
add
add
add
pop
sub
add
add
(bad)
(bad)
jmp
add
push
add
push
sbb
ret
sub
adc
or
fadd
add
sub
add
sub
es
sub
es
push
sub
add
and
inc
add
add
idiv
(bad)
call
sub
add
es
jne
add
pop
sbb
push
and
add
add
add
push
add
add
and
sbb
push
pop
push
sub
add
push
and
add
add
add
push
add
add
sub
pop
sbb
push
and
add
add
add
push
add
add
sub
pop
push
sub
add
push
and
add
add
or
add
add
sub
pop
add
add
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
jmp
(bad)
(bad)
call
sub
add
and
inc
add
add
idiv
(bad)
jmp
sub
xor
jmp
adc
add
push
sbb
xor
add
add
add
add
jnp
add
add
imul
or
push
das
adc
add
idiv
(bad)
call
sub
add
es
sub
jnp
add
add
jnp
add
add
pop
add
push
pop
adc
out
add
add
sbb
add
add
sbb
loopne
add
pop
and
add
add
add
add
inc
add
add
idiv
(bad)
inc
push
cmp
add
add
idiv
(bad)
call
add
sub
jle
add
add
xchg
jge
add
add
jle
add
add
xchg
jge
add
add
jnp
add
add
ds
add
sbb
add
add
(bad)
(bad)
call
sub
add
and
add
sbb
add
add
(bad)
(bad)
(bad)
cmp
add
add
or
add
add
adc
push
add
add
push
das
mov
add
idiv
(bad)
call
pop
cmp
add
add
push
cmp
lods
add
add
jnp
add
add
add
add
pop
inc
add
add
sahf
add
add
add
aaa
add
add
(bad)
call
or
add
sub
jle
add
add
and
add
add
jge
add
add
sub
add
and
inc
add
add
idiv
(bad)
jmp
pop
cmp
add
add
jnp
add
add
jnp
add
add
pop
add
push
and
cmp
sub
jnp
add
add
jnp
add
add
push
add
cmp
add
add
pop
adc
cmp
add
add
idiv
(bad)
jmp
add
add
add
ds
(bad)
(bad)
call
inc
add
add
idiv
(bad)
inc
push
jge
add
add
sbb
jo
jle
add
add
and
add
add
jge
add
add
or
pop
add
or
add
add
adc
sub
add
add
(bad)
(bad)
jmp
add
add
add
jnp
add
add
pop
add
push
and
sub
add
add
add
pop
add
push
and
sbb
and
add
pop
jge
add
add
lahf
(bad)
(bad)
call
adc
add
add
(bad)
(bad)
jmp
(bad)
(bad)
jmp
(bad)
call
(bad)
(bad)
jmp
add
(bad)
(bad)
call
(bad)
(bad)
call
add
add
add
add
(bad)
(bad)
dec
add
jbe
add
stos
std
(bad)
inc
add
add
(bad)
dec
(bad)
push
(bad)
(bad)
jmp
(bad)
(bad)
push
(bad)
call
std
(bad)
jmp
std
(bad)
inc
add
add
sub
add
and
(bad)
call
inc
add
add
idiv
(bad)
jmp
pop
sub
jnp
add
add
jnp
add
add
mov
add
and
add
(bad)
call
push
pop
inc
add
add
idiv
(bad)
call
(bad)
(bad)
(bad)
(bad)
cmp
jnp
add
add
sub
push
push
pop
pop
and
add
das
mov
inc
add
add
idiv
(bad)
call
or
adc
add
add
add
or
sbb
add
or
cmp
(bad)
(bad)
call
inc
add
add
idiv
(bad)
jmp
push
sub
adc
push
add
add
adc
loop
(bad)
dec
push
cmp
(bad)
(bad)
call
inc
add
add
idiv
(bad)
call
cmp
(bad)
(bad)
inc
and
add
pop
jge
add
add
sub
add
and
(bad)
call
idiv
(bad)
(bad)
cmp
jnp
add
add
jnp
add
add
jnp
add
add
pusha
add
push
pop
push
cmp
and
add
add
std
(bad)
call
inc
add
add
idiv
(bad)
call
sbb
pop
add
push
and
(bad)
call
inc
add
add
idiv
(bad)
jmp
pop
sub
add
xor
add
add
add
add
adc
add
push
pop
sbb
mov
add
pop
push
cmp
add
add
idiv
(bad)
call
sub
add
es
sbb
pop
add
add
add
add
jnp
add
add
jnp
add
add
popa
add
push
and
add
add
pop
push
sub
add
and
inc
add
add
idiv
(bad)
jmp
adc
lea
add
jmp
add
push
pop
sub
add
add
(bad)
(bad)
jmp
push
sub
add
add
add
add
push
and
add
pop
sub
add
add
(bad)
(bad)
jmp
add
cmp
sbb
push
adc
inc
sbb
add
call
add
(bad)
jmp
add
add
add
add
(bad)
(bad)
(bad)
cli
add
add
add
add
add
sbb
add
outs
add
add
(bad)
(bad)
inc
add
add
add
add
(bad)
call
add
add
add
add
add
add
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
mov
add
add
add
inc
add
add
add
popf
add
add
add
add
or
pop
add
push
and
(bad)
call
inc
add
add
idiv
(bad)
jmp
add
add
cmp
(bad)
inc
sbb
add
add
adc
jle
add
add
dec
add
add
cmp
(bad)
call
sub
add
add
add
adc
add
push
and
jge
add
add
add
add
sbb
add
add
(bad)
(bad)
call
sub
add
and
(bad)
call
idiv
(bad)
(bad)
cmp
(bad)
(bad)
inc
and
add
pop
jge
add
add
pop
cmp
(bad)
(bad)
inc
jnp
add
add
pop
adc
loopne
(bad)
jmp
xchg
add
add
push
jge
add
add
cmp
(bad)
(bad)
call
sub
jnp
add
add
bound
add
and
sub
jnp
add
add
jnp
add
add
arpl
add
and
(bad)
call
inc
add
add
idiv
(bad)
call
(bad)
(bad)
(bad)
inc
jle
add
add
push
add
add
sub
add
and
(bad)
call
inc
add
add
idiv
(bad)
jmp
pop
adc
addr16
(bad)
inc
pop
pop
sub
sbb
add
add
(bad)
(bad)
inc
pop
jge
add
add
pop
arpl
add
cmp
(bad)
call
sub
jnp
add
add
adc
pop
add
push
add
jge
add
add
or
cmp
(bad)
(bad)
call
inc
add
add
idiv
(bad)
jmp
add
add
add
adc
add
push
and
pop
cmp
inc
add
add
idiv
(bad)
jmp
cmp
add
add
add
add
adc
inc
add
add
idiv
(bad)
inc
pop
or
inc
add
add
sub
jnp
add
add
sub
add
and
(bad)
std
(bad)
inc
sbb
add
add
adc
call
sub
jnp
add
add
sub
add
pop
sbb
pop
add
push
and
(bad)
call
inc
add
add
idiv
(bad)
jmp
or
pop
inc
or
add
data16
(bad)
call
(bad)
(bad)
(bad)
ds
(bad)
dec
cld
(bad)
jmp
add
add
add
add
add
add
push
std
(bad)
inc
push
das
popf
sbb
add
add
(bad)
(bad)
call
adc
inc
std
(bad)
inc
jnp
add
add
push
(bad)
call
inc
add
add
idiv
(bad)
call
or
inc
add
add
add
add
push
and
add
sbb
add
sbb
pop
add
push
and
(bad)
call
inc
add
add
idiv
(bad)
jmp
push
sub
jnp
add
add
adc
pop
add
push
add
jge
add
add
or
pop
add
push
and
(bad)
call
inc
add
add
idiv
(bad)
(bad)
cmp
outs
std
(bad)
inc
jnp
add
add
ins
add
push
push
cmp
sub
push
and
push
sub
xor
inc
add
add
add
adc
add
push
sbb
cmp
add
sbb
add
add
(bad)
(bad)
call
sub
add
es
add
add
idiv
(bad)
call
push
and
inc
add
add
idiv
(bad)
jmp
add
add
add
or
adc
inc
add
add
idiv
(bad)
call
or
sub
sub
sub
add
and
inc
add
add
idiv
(bad)
call
sub
push
pop
pop
or
or
pop
pop
dec
add
sub
or
add
gs
(bad)
inc
(bad)
(bad)
call
add
imul
add
add
add
(bad)
(bad)
inc
add
add
add
add
sub
add
add
add
jl
add
and
sbb
add
add
(bad)
(bad)
call
sub
pop
add
push
and
inc
add
add
idiv
(bad)
jmp
pop
or
nop
add
add
add
add
sub
add
and
pop
dec
add
cmp
(bad)
jmp
sbb
cmp
(bad)
call
inc
add
add
idiv
(bad)
jmp
add
add
add
or
(bad)
(bad)
call
add
(bad)
(bad)
call
or
inc
(bad)
(bad)
inc
sub
add
adc
or
or
add
add
add
sub
es
add
push
add
or
add
xor
push
add
add
add
add
add
push
add
add
outs
jno
add
sub
add
xor
add
add
add
add
add
add
push
pop
sub
add
xor
add
add
add
add
add
add
push
push
sub
add
xor
add
add
add
add
push
add
add
push
and
add
xor
add
add
add
add
sub
es
add
outs
jbe
add
sub
xor
add
add
add
add
sub
es
add
outs
push
add
sub
xor
add
add
add
add
add
add
push
add
outs
mov
add
and
adc
or
push
add
add
add
add
add
push
add
outs
imul
sub
add
xor
add
add
add
add
push
add
add
js
add
sub
add
adc
or
sldt
add
add
add
add
push
add
add
jns
add
and
xor
add
add
add
add
push
add
add
push
and
add
xor
add
add
add
add
add
add
push
add
outs
xchg
add
push
and
adc
or
or
add
add
add
push
add
add
push
and
add
xor
add
add
add
add
push
add
add
push
and
add
xor
adc
add
add
add
sub
es
add
add
outs
jge
add
and
or
or
add
add
add
push
add
add
or
add
sub
add
adc
or
sldt
add
add
add
add
push
sub
es
add
push
add
or
add
xor
add
add
add
add
adc
add
push
sub
add
and
add
and
add
sbb
add
add
(bad)
(bad)
call
sub
add
es
jae
add
and
inc
add
add
idiv
(bad)
jmp
adc
push
add
add
jnp
add
add
and
add
or
pop
jge
add
add
xchg
and
add
add
jnp
add
add
and
add
or
pop
jge
add
add
xchg
and
add
add
bound
jnp
add
add
pop
pop
bound
push
add
add
daa
sbb
inc
pop
add
add
add
add
add
cmp
inc
add
add
add
add
add
sbb
fadd
and
add
adc
push
add
add
sub
add
add
add
jnp
add
add
pop
(bad)
(bad)
call
inc
add
add
idiv
(bad)
call
sub
add
das
sbb
inc
add
add
idiv
(bad)
jmp
int
sbb
sub
sbb
add
add
(bad)
(bad)
jmp
add
add
add
pop
add
pop
pop
bound
pop
push
imul
xor
and
add
add
add
sub
es
add
add
pop
pop
pop
fs
add
add
and
add
pop
jge
add
add
adc
or
or
add
add
add
sub
es
add
add
add
add
xor
add
add
add
add
add
add
push
add
add
add
jnp
add
add
add
add
add
arpl
add
xor
sub
add
add
add
sub
es
add
add
jnp
add
add
pop
pop
pop
pop
fs
add
add
and
add
clc
pop
jge
add
add
adc
or
adc
add
add
add
sub
es
add
add
add
jnp
add
add
add
add
xor
add
add
sub
es
pop
or
pop
add
add
or
or
jae
add
and
add
sbb
add
add
idiv
(bad)
call
sub
add
es
add
add
jnp
add
add
add
sub
push
sbb
add
and
add
pop
jge
add
add
pop
pop
dec
add
push
pop
pop
or
push
cmp
add
add
inc
add
add
idiv
(bad)
jmp
pop
dec
add
push
cmp
add
add
add
inc
add
add
idiv
(bad)
call
or
rol
add
add
jnp
add
add
and
add
or
pop
jge
add
add
xchg
and
add
add
push
add
add
push
jge
add
add
adc
mov
sbb
add
add
add
add
add
add
pushf
pop
push
pop
cmp
inc
add
add
idiv
(bad)
jmp
add
add
add
jnp
add
add
pop
pop
cmp
add
add
inc
add
add
idiv
(bad)
jmp
test
push
sub
jnp
add
add
fs
add
add
or
inc
add
inc
add
add
idiv
(bad)
jmp
jb
add
and
add
and
inc
add
add
idiv
(bad)
jmp
sbb
push
push
sub
jnp
add
add
jnp
add
add
or
push
pop
or
or
add
add
(bad)
(bad)
inc
add
add
add
int
(bad)
(bad)
aas
(bad)
(bad)
inc
(bad)
(bad)
dec
(bad)
(bad)
jmp
add
add
(bad)
jmp
(bad)
(bad)
call
(bad)
(bad)
call
(bad)
call
(bad)
jmp
(bad)
push
(bad)
call
add
pop
sub
(bad)
call
inc
add
add
idiv
(bad)
call
pop
sub
add
add
(bad)
(bad)
jmp
add
add
pop
jge
add
add
sub
add
ds
(bad)
(bad)
call
inc
add
add
idiv
(bad)
call
(bad)
(bad)
(bad)
inc
add
xor
add
add
add
add
adc
add
push
add
add
push
and
add
and
add
and
add
jge
add
add
add
xor
add
add
adc
add
push
sbb
jb
add
and
add
sbb
add
add
(bad)
(bad)
call
sub
add
es
add
or
add
add
add
add
add
add
jnp
add
add
call
add
idiv
(bad)
call
or
jecxz
add
add
push
cmp
add
add
push
jge
add
add
or
enter
push
add
jge
add
sbb
add
add
(bad)
(bad)
jmp
jb
add
and
add
and
add
sbb
add
(bad)
(bad)
jmp
sbb
jae
add
and
add
sbb
add
add
(bad)
(bad)
jmp
push
add
sbb
imul
add
add
(bad)
(bad)
call
or
addr16
xor
sbb
add
add
idiv
(bad)
call
push
add
add
pop
jge
add
add
or
inc
jae
add
or
pop
pop
cmp
add
sbb
add
add
(bad)
(bad)
inc
and
add
add
pop
pop
dec
add
xchg
and
add
add
jnp
add
add
pop
pop
bound
push
add
add
lods
sbb
pop
inc
or
(bad)
(bad)
push
(bad)
inc
(bad)
(bad)
jmp
(bad)
jmp
(bad)
(bad)
(bad)
(bad)
(bad)
inc
(bad)
jmp
(bad)
(bad)
call
add
add
add
add
add
add
push
sub
pop
inc
add
add
idiv
(bad)
jmp
add
jge
add
add
leave
(bad)
(bad)
jmp
sbb
xor
add
add
add
add
add
add
push
pop
sub
add
xor
add
add
add
add
add
add
push
push
sub
add
xor
add
add
add
add
push
add
add
add
or
add
add
xor
add
add
add
add
add
add
push
sub
es
add
add
add
push
and
add
sub
add
adc
or
out
add
add
add
adc
add
push
sbb
cmp
inc
add
add
idiv
(bad)
call
sub
add
es
add
(bad)
jg
add
push
add
add
cmp
and
add
xor
inc
add
add
idiv
(bad)
jmp
push
sbb
jg
add
and
inc
add
add
idiv
(bad)
jmp
add
add
or
pop
jge
add
add
add
push
and
add
and
inc
add
add
idiv
(bad)
jmp
push
sub
es
add
add
(bad)
(bad)
jmp
sub
add
or
jnp
add
add
and
add
or
pop
jge
add
add
add
pushf
cmp
(bad)
call
or
inc
pop
add
add
dec
call
(bad)
push
(bad)
push
(bad)
push
add
add
sub
sub
adc
push
add
add
add
add
push
sbb
pushf
add
add
add
push
xor
pop
inc
add
add
idiv
(bad)
call
sub
add
es
cmp
add
sbb
add
(bad)
(bad)
jmp
add
add
(bad)
jg
add
push
add
add
inc
sbb
push
sub
add
and
add
or
pop
jge
add
add
add
add
add
and
add
xchg
pushf
push
sub
add
and
inc
add
add
idiv
(bad)
jmp
push
sub
add
(bad)
jg
add
or
add
addr16
(bad)
call
or
inc
pop
add
add
(bad)
push
(bad)
inc
(bad)
(bad)
inc
(bad)
dec
(bad)
(bad)
dec
add
add
push
sub
sbb
add
add
(bad)
(bad)
jmp
sub
adc
push
add
add
adc
add
push
pop
or
jg
add
and
add
pop
inc
add
add
idiv
(bad)
call
sub
add
es
add
or
jnp
add
add
pop
and
jg
add
push
cmp
and
add
xor
sbb
add
(bad)
(bad)
jmp
jg
add
and
add
and
add
sbb
add
add
(bad)
(bad)
jmp
sbb
xlat
add
add
add
cmp
inc
add
add
idiv
(bad)
inc
jnp
add
add
add
add
add
jnp
add
add
sub
add
pop
or
test
add
add
ja
add
pop
or
add
and
add
push
xor
pop
inc
add
add
idiv
(bad)
call
or
jl
add
add
add
pop
and
add
sub
pop
xor
add
idiv
(bad)
jmp
cmp
pop
or
push
sub
jnp
add
add
and
add
or
add
add
add
add
add
and
pushf
sbb
sub
add
or
and
jnp
add
add
cmp
(bad)
(bad)
call
inc
add
add
idiv
(bad)
(bad)
cmp
(bad)
(bad)
call
or
add
add
push
add
add
(bad)
(bad)
call
(bad)
(bad)
jmp
(bad)
(bad)
jmp
(bad)
call
(bad)
(bad)
in
(bad)
(bad)
jmp
(bad)
jmp
add
add
(bad)
call
(bad)
(bad)
jmp
add
add
jnp
add
add
pop
jge
add
add
sub
es
sbb
add
(bad)
(bad)
jmp
sub
add
xor
add
add
adc
add
push
sbb
pop
push
pop
inc
mov
inc
add
add
idiv
(bad)
call
sub
add
sub
sbb
inc
or
add
cld
add
add
add
adc
add
push
add
add
add
add
add
add
add
add
add
cmp
add
sub
sub
add
and
add
sbb
add
add
(bad)
(bad)
jmp
push
pop
sub
add
add
(bad)
(bad)
jmp
add
jnp
add
add
jnp
add
add
outs
outs
add
push
and
push
sub
pop
inc
add
add
idiv
(bad)
jmp
add
jnp
add
add
pop
and
jg
add
push
add
add
sub
add
and
(bad)
call
inc
add
add
idiv
(bad)
jmp
sub
add
jnp
add
add
jnp
add
add
sub
or
cmp
(bad)
(bad)
inc
add
jnp
add
add
add
pop
sub
es
or
retf
es
cmp
(bad)
(bad)
inc
xor
sbb
add
add
idiv
(bad)
call
inc
add
pop
add
add
sub
add
add
push
and
add
and
add
cmp
(bad)
(bad)
jmp
add
push
add
add
or
or
mov
and
add
pop
jge
add
add
or
add
push
and
(bad)
call
inc
add
add
idiv
(bad)
(bad)
cmp
sub
xor
add
add
adc
add
push
sbb
mov
add
jae
add
or
and
add
xor
inc
add
add
idiv
(bad)
call
sub
add
sub
sub
add
and
inc
add
add
idiv
(bad)
jmp
sbb
jg
add
and
inc
add
add
idiv
(bad)
jmp
add
and
add
pop
pop
dec
add
sub
sbb
inc
add
add
idiv
(bad)
jmp
add
jnp
add
add
add
push
sbb
sub
sbb
add
add
(bad)
(bad)
jmp
add
add
add
ds
(bad)
(bad)
call
add
(bad)
(bad)
call
sub
and
add
dec
add
sub
or
add
xchg
(bad)
(bad)
jmp
(bad)
(bad)
push
(bad)
inc
(bad)
(bad)
inc
add
add
(bad)
dec
(bad)
(bad)
jmp
sub
add
add
push
add
add
sub
add
and
inc
add
add
idiv
(bad)
jmp
sub
add
xor
add
add
add
add
add
add
push
and
add
add
add
add
sub
add
adc
or
or
add
add
add
sub
es
add
add
add
add
xor
add
add
sub
es
pop
or
add
add
add
add
add
sub
sub
add
and
inc
add
add
idiv
(bad)
call
sub
add
es
iret
add
add
push
xchg
add
sbb
add
add
(bad)
(bad)
call
cmp
jnp
add
add
or
add
sub
add
and
add
sbb
add
add
(bad)
(bad)
jmp
add
add
add
add
add
sub
add
sub
es
or
ja
add
add
pop
dec
add
push
dec
add
pop
or
addr16
add
mov
add
inc
add
add
idiv
(bad)
call
pop
sub
add
add
(bad)
(bad)
jmp
add
add
add
add
sub
and
add
pop
jge
add
add
sub
es
add
add
(bad)
(bad)
jmp
or
cmp
or
or
add
add
(bad)
(bad)
call
jmp
add
add
add
add
add
pop
(bad)
(bad)
push
(bad)
(bad)
inc
(bad)
dec
inc
(bad)
(bad)
inc
(bad)
(bad)
dec
add
sbb
inc
add
add
idiv
(bad)
jmp
add
add
add
das
cmp
inc
add
add
idiv
(bad)
call
or
pop
or
xchg
sub
add
add
add
jnp
add
add
add
add
pop
or
cmp
(bad)
push
add
or
sub
add
xor
adc
add
adc
add
push
add
push
and
add
jge
add
add
add
add
xor
add
add
add
add
add
add
push
pop
sub
add
xor
add
add
add
add
add
add
push
push
sub
add
xor
add
add
add
add
add
add
push
add
add
outs
add
or
xor
adc
add
add
add
sub
es
add
add
outs
outs
add
push
and
or
add
add
add
add
push
add
add
add
or
add
add
xor
add
add
add
add
add
add
push
add
push
add
or
add
xor
(bad)
add
add
add
adc
add
push
sub
es
pop
push
cmp
or
or
add
add
and
add
sub
add
push
and
sub
add
add
(bad)
(bad)
call
sub
add
es
and
add
add
std
add
add
inc
add
add
idiv
(bad)
call
inc
push
jae
add
push
sbb
add
and
adc
add
and
mov
add
and
inc
add
add
idiv
(bad)
jmp
pop
and
add
add
pop
sbb
add
add
(bad)
(bad)
(bad)
cmp
add
add
push
or
inc
adc
add
xor
(bad)
jmp
add
dec
add
add
add
mov
add
add
add
add
add
add
(bad)
call
(bad)
jmp
add
add
(bad)
(bad)
push
add
add
sub
and
pushf
pop
or
sub
sbb
add
add
idiv
(bad)
jmp
sub
push
pop
and
pushf
push
sub
es
sbb
add
add
(bad)
(bad)
jmp
pop
or
(bad)
call
inc
add
add
idiv
(bad)
jmp
pop
and
enter
add
add
(bad)
(bad)
(bad)
cmp
(bad)
(bad)
inc
pop
and
or
es
or
aas
(bad)
(bad)
call
or
popa
push
pop
and
pushf
sbb
(bad)
call
add
(bad)
(bad)
jmp
push
jae
add
push
sbb
add
(bad)
(bad)
(bad)
jmp
push
push
pop
and
pushf
sbb
(bad)
(bad)
(bad)
inc
and
add
add
jmp
idiv
(bad)
call
or
cmp
(bad)
(bad)
call
add
(bad)
(bad)
jmp
pop
pop
and
call
idiv
(bad)
call
cmp
(bad)
(bad)
jmp
add
adc
or
push
add
add
add
add
add
push
sub
es
add
mov
add
add
sub
add
adc
push
add
add
add
add
adc
add
push
pop
or
add
sbb
add
add
(bad)
(bad)
call
sub
add
es
add
sbb
imul
sbb
add
add
(bad)
(bad)
call
es
add
add
push
ds
add
add
inc
add
add
idiv
(bad)
inc
or
and
add
pop
or
cmp
add
add
adc
pop
maxps
pop
pop
bound
adc
sbb
mov
add
and
add
sbb
add
add
idiv
(bad)
jmp
adc
adc
aas
add
add
inc
add
add
idiv
(bad)
inc
adc
adc
pop
adc
mulps
pop
pop
bound
pop
and
add
add
inc
add
add
or
add
and
add
and
add
sbb
add
add
(bad)
(bad)
jmp
pop
and
push
add
add
or
or
add
add
or
adc
pop
or
pop
pop
bound
or
or
xor
add
sub
adc
adc
pop
pop
cmp
add
add
jnp
add
add
adc
adc
or
adc
sbb
punpcklbw
pop
adc
add
add
add
add
add
adc
push
sbb
punpcklbw
pop
or
cmp
add
add
inc
add
add
idiv
(bad)
jmp
adc
pop
rdtsc
stos
sbb
add
(bad)
(bad)
inc
adc
push
and
add
add
add
adc
pop
movlps
cmp
add
add
add
cmp
add
or
and
cmp
inc
add
add
idiv
(bad)
jmp
or
pop
or
adc
add
push
pop
pop
adc
pop
push
cmp
add
(bad)
(bad)
inc
jnp
add
add
adc
inc
add
pop
xchg
adc
pop
(bad)
add
add
adc
arpl
adc
adc
push
add
add
adc
add
add
and
cmp
add
adc
pop
adc
pop
pop
pop
bound
adc
cmp
add
add
adc
cmp
(bad)
(bad)
inc
adc
xchg
adc
adc
sub
sbb
add
add
(bad)
(bad)
call
and
push
and
add
sbb
add
(bad)
(bad)
jmp
pop
adc
xchg
adc
pop
cmp
add
add
or
add
add
inc
add
add
idiv
(bad)
call
or
pop
adc
adc
pop
or
(bad)
(bad)
call
inc
add
add
idiv
(bad)
call
or
mov
adc
sub
cmp
inc
add
add
idiv
(bad)
jmp
adc
cmp
add
or
push
cmp
inc
add
add
idiv
(bad)
jmp
adc
pop
pop
adc
pop
adc
jne
add
adc
and
add
add
gs
(bad)
call
inc
add
add
idiv
(bad)
call
cmp
add
adc
mov
add
and
nop
cmp
sbb
add
add
(bad)
(bad)
call
sbb
xor
add
or
sub
imul
sbb
add
add
(bad)
(bad)
call
and
adc
add
adc
cmp
add
or
add
pop
pop
adc
push
pop
pop
pop
pop
arpl
add
add
add
add
add
adc
loope
add
sbb
add
add
(bad)
(bad)
jmp
pop
adc
add
add
and
pop
sbb
mov
add
and
add
sbb
add
add
(bad)
(bad)
jmp
adc
pop
adc
pop
pop
pop
bound
adc
sub
(bad)
jmp
sbb
add
adc
sbb
nop
add
add
push
pop
or
add
inc
add
add
idiv
(bad)
inc
adc
xchg
and
adc
pop
push
sub
add
adc
xchg
pop
adc
push
pop
pop
pop
pop
bound
add
adc
push
adc
adc
xchg
pop
adc
or
pop
pop
bound
add
push
sub
pop
inc
add
add
idiv
(bad)
jmp
adc
add
or
cmp
(bad)
inc
jnp
add
add
or
push
and
sbb
or
popf
cmp
or
inc
daa
add
add
(bad)
jmp
cld
(bad)
jmp
(bad)
inc
std
(bad)
dec
(bad)
(bad)
(bad)
jmp
jmp
(bad)
(bad)
push
std
(bad)
push
(bad)
(bad)
jmp
std
(bad)
inc
(bad)
dec
std
(bad)
(bad)
cmp
(bad)
(bad)
inc
(bad)
(bad)
(bad)
jg
(bad)
jmp
(bad)
(bad)
(bad)
(bad)
(bad)
inc
(bad)
(bad)
call
(bad)
inc
std
(bad)
dec
cld
(bad)
(bad)
mov
sti
(bad)
call
cld
(bad)
dec
(bad)
push
(bad)
(bad)
jmp
cld
(bad)
jmp
(bad)
dec
(bad)
(bad)
dec
std
(bad)
inc
add
add
sbb
jmp
add
adc
or
jp
add
sub
add
sub
es
push
push
cmp
add
sbb
add
add
(bad)
(bad)
call
sub
add
es
sub
es
sbb
add
add
(bad)
(bad)
call
adc
dec
pop
sbb
add
pop
add
and
or
ss
pop
maxps
add
add
inc
add
add
idiv
(bad)
call
or
sub
sbb
add
add
(bad)
(bad)
jmp
add
pop
maxps
add
push
sub
adc
adc
inc
adc
add
test
add
add
add
add
add
(bad)
call
add
add
add
cwde
add
add
add
add
add
add
(bad)
(bad)
aas
add
add
add
add
(bad)
jmp
add
add
(bad)
(bad)
jmp
sbb
stos
add
add
imul
or
jnp
add
add
push
pop
or
xchg
or
pop
maxps
add
sbb
inc
add
add
idiv
(bad)
inc
pop
pop
maxps
mov
add
pop
sbb
adc
add
push
and
push
cmp
(bad)
call
idiv
(bad)
jmp
add
add
push
and
mov
add
and
(bad)
call
inc
add
add
idiv
(bad)
(bad)
cmp
(bad)
inc
pop
pop
maxps
add
push
pop
adc
sbb
(bad)
inc
push
aas
or
add
sbb
add
add
idiv
(bad)
call
or
add
(bad)
inc
jnp
add
add
xchg
or
mov
add
and
(bad)
call
inc
add
add
idiv
(bad)
jmp
pop
sbb
pop
sbb
or
or
inc
jnp
add
add
push
pop
or
xchg
or
(bad)
(bad)
(bad)
inc
pop
or
lea
add
and
aas
cmp
(bad)
call
inc
add
add
idiv
(bad)
call
or
mov
add
and
(bad)
call
add
(bad)
(bad)
(bad)
cmp
pop
maxps
mov
add
sbb
je
(bad)
inc
jnp
add
add
xchg
and
sbb
add
add
(bad)
(bad)
jmp
mov
add
and
add
and
(bad)
call
inc
add
add
idiv
(bad)
jmp
pop
sub
cmp
(bad)
(bad)
call
inc
add
add
idiv
(bad)
jmp
pop
pop
maxps
sbb
(bad)
call
inc
add
add
idiv
(bad)
jmp
pop
sbb
adc
xor
add
add
add
add
add
add
push
pop
sub
add
xor
add
add
add
add
add
add
push
push
sub
add
xor
add
add
add
add
add
add
push
add
push
add
or
add
xor
add
add
add
add
add
add
push
add
sub
sub
add
xor
add
add
add
add
add
add
push
add
outs
imul
sub
add
xor
add
add
add
add
sub
es
add
outs
push
add
sub
xor
add
add
add
add
push
add
add
push
and
add
xor
add
add
add
add
add
add
push
sub
es
add
xchg
add
push
sub
adc
or
stos
add
add
add
adc
add
push
sub
es
sbb
sbb
add
and
add
add
or
add
sbb
add
and
or
inc
push
add
add
add
add
(bad)
(bad)
inc
add
add
(bad)
(bad)
jmp
add
add
add
add
push
sub
pop
adc
add
add
and
add
add
fwait
add
push
sub
add
sub
sbb
add
add
and
add
add
fwait
add
push
sbb
sub
sub
es
sbb
add
add
idiv
(bad)
call
sub
add
es
jg
(bad)
jmp
add
adc
or
add
add
adc
add
push
sbb
cdq
add
push
and
add
sbb
add
add
(bad)
(bad)
call
sub
add
es
add
add
jnp
add
add
and
add
adc
pop
pop
jge
add
add
pop
add
add
add
pop
sbb
js
add
add
add
add
imul
push
push
rcr
add
and
add
sbb
add
add
(bad)
(bad)
jmp
adc
sub
add
add
add
add
add
add
add
add
adc
cdq
add
push
and
add
pop
inc
add
add
idiv
(bad)
jmp
push
sub
sbb
xchg
add
push
sbb
add
add
cmp
add
add
sbb
xchg
add
push
and
add
jnp
add
add
cmp
add
add
inc
add
add
idiv
(bad)
call
and
rol
add
push
sub
pop
adc
lahf
add
add
inc
add
add
idiv
(bad)
call
and
mov
add
or
cmp
pop
inc
add
add
idiv
(bad)
call
cmp
jnp
add
add
adc
add
and
add
(bad)
add
add
push
jge
add
add
and
je
add
add
add
add
jnp
add
add
or
inc
add
add
idiv
(bad)
call
sub
sbb
add
add
and
cmp
(bad)
(bad)
call
add
(bad)
(bad)
call
and
cmp
sbb
xchg
add
push
push
sub
add
jge
add
add
pop
pop
adc
data16
add
sbb
sbb
push
cmp
(bad)
(bad)
call
idiv
(bad)
(bad)
cmp
(bad)
(bad)
call
adc
adc
inc
add
add
add
add
(bad)
(bad)
(bad)
out
(bad)
(bad)
jmp
add
add
add
jmp
(bad)
dec
(bad)
(bad)
push
add
add
(bad)
call
add
cmp
add
aam
add
and
add
push
add
add
(bad)
call
add
adc
add
or
add
pusha
(bad)
(bad)
call
add
add
(bad)
jmp
add
mov
add
add
add
add
(bad)
push
add
add
(bad)
(bad)
jmp
(bad)
(bad)
call
add
add
add
add
add
add
or
cdq
add
push
and
(bad)
call
idiv
(bad)
jmp
add
add
add
jnp
add
add
in
add
sbb
add
add
idiv
(bad)
call
sbb
sub
(bad)
inc
add
add
add
jnp
add
add
jge
add
add
pop
cmp
(bad)
(bad)
inc
sbb
add
add
push
sub
es
(bad)
(bad)
call
idiv
(bad)
jmp
sub
jnp
add
add
and
add
adc
add
add
add
adc
jge
add
add
push
pushf
add
add
add
jnp
add
add
or
inc
add
add
idiv
(bad)
call
sub
jnp
add
add
sub
es
sub
sbb
add
(bad)
(bad)
call
sbb
push
and
(bad)
call
idiv
(bad)
jmp
push
sub
and
add
add
add
pop
jge
add
add
cmp
(bad)
(bad)
cmp
(bad)
(bad)
inc
sbb
xchg
add
push
and
cmp
(bad)
inc
add
outs
imul
jge
add
add
jnp
add
add
das
or
inc
add
add
idiv
(bad)
call
sub
and
add
pop
jge
add
add
or
inc
sbb
xchg
add
push
sub
sub
es
sbb
add
add
(bad)
(bad)
jmp
pop
or
cmp
std
(bad)
call
idiv
(bad)
jmp
push
sub
or
xchg
add
push
or
add
add
jnp
add
add
pop
or
jmp
pop
sbb
mov
(bad)
inc
add
sub
es
add
add
or
call
popa
add
add
cmp
push
jge
add
add
adc
jg
(bad)
inc
jnp
add
add
add
pop
cmp
(bad)
inc
and
add
pop
jge
add
add
sbb
cmp
(bad)
call
idiv
(bad)
jmp
add
jge
add
add
adc
inc
std
(bad)
inc
add
add
add
xchg
add
jge
add
add
jle
add
add
pop
add
add
cmp
std
(bad)
inc
sbb
add
add
push
pop
cmp
std
(bad)
call
inc
add
add
idiv
(bad)
jmp
add
add
add
das
or
inc
add
add
idiv
(bad)
call
sub
and
add
pop
jge
add
add
adc
cmp
cld
(bad)
call
inc
add
add
idiv
(bad)
jmp
jle
add
add
jnp
add
add
or
or
add
push
and
cmp
(bad)
(bad)
call
inc
add
add
idiv
(bad)
call
cdq
add
push
and
(bad)
call
inc
add
add
idiv
(bad)
jmp
add
outs
push
add
add
adc
adc
add
and
add
adc
inc
sbb
add
add
cmp
(bad)
(bad)
cmp
(bad)
(bad)
inc
add
adc
or
add
add
adc
add
push
add
add
add
adc
add
and
pop
add
add
push
push
add
add
add
jae
add
push
jae
add
push
sub
add
adc
or
add
add
adc
add
push
add
add
add
adc
add
and
pop
add
add
jnp
add
add
push
add
add
add
jae
add
push
jae
add
push
sub
add
xor
add
add
add
add
add
add
push
add
push
add
or
add
xor
add
add
add
add
add
add
push
add
outs
imul
sub
add
xor
add
add
add
add
sub
es
add
outs
push
add
sub
xor
add
add
add
add
add
add
push
add
outs
mov
add
and
adc
or
push
add
add
add
add
add
push
pop
sub
add
xor
add
add
add
add
add
add
push
push
sub
add
xor
add
add
add
add
push
add
add
or
add
sub
add
adc
or
cmps
add
add
add
adc
add
push
sub
es
sub
sub
sub
sbb
add
add
(bad)
(bad)
call
sub
add
es
sub
sbb
add
add
(bad)
(bad)
jmp
add
mov
sub
add
add
push
jge
add
add
and
or
inc
pop
add
add
add
add
(bad)
(bad)
inc
add
add
add
add
(bad)
(bad)
push
add
add
sbb
pop
sub
add
adc
add
add
push
sub
sbb
add
add
(bad)
(bad)
jmp
add
jnp
add
add
xlat
add
push
jge
add
add
sub
or
or
add
add
add
sub
es
add
add
add
add
xor
add
add
add
add
sub
es
add
add
or
jge
add
add
adc
or
xor
add
add
add
sub
es
add
add
add
push
xor
sbb
add
(bad)
(bad)
call
sub
add
add
add
add
cmps
add
push
and
add
add
xor
add
add
add
add
add
add
push
add
add
add
cmps
add
push
and
adc
or
adc
add
add
add
sub
es
add
add
add
outs
fild
add
sub
add
adc
or
push
add
add
add
adc
add
push
pop
cmp
or
or
mov
jnp
add
add
push
pop
sub
es
add
add
cmp
inc
add
add
idiv
(bad)
call
sub
add
add
add
add
push
cmp
add
add
inc
add
add
idiv
(bad)
(bad)
cmp
add
add
sbb
push
sub
add
pop
or
add
push
adc
or
add
add
xor
sbb
add
add
(bad)
(bad)
call
push
sub
push
or
sub
add
add
add
adc
add
add
inc
add
add
idiv
(bad)
(bad)
cmp
add
pop
adc
add
add
(bad)
call
add
add
add
add
(bad)
(bad)
jmp
add
add
(bad)
(bad)
call
(bad)
call
(bad)
(bad)
call
(bad)
inc
add
pop
add
add
add
add
add
lods
add
add
add
add
or
stos
push
or
pop
adc
sub
sbb
add
add
(bad)
(bad)
jmp
add
sbb
imul
add
add
add
jnp
add
add
pop
push
inc
push
inc
add
add
add
pop
push
inc
push
inc
outs
fiadd
add
and
(bad)
call
add
(bad)
(bad)
call
adc
dec
(bad)
(bad)
call
add
add
add
test
es
pop
or
cmp
(bad)
(bad)
call
inc
add
add
idiv
(bad)
jmp
add
push
jge
add
add
adc
adc
(bad)
inc
jnp
add
add
out
add
push
push
cmp
(bad)
(bad)
inc
and
add
push
jge
add
add
or
push
sub
cmp
inc
add
add
idiv
(bad)
jmp
sbb
cmp
(bad)
(bad)
call
inc
add
add
idiv
(bad)
jmp
cmp
(bad)
(bad)
inc
jnp
add
add
sbb
adc
(bad)
call
inc
add
add
idiv
(bad)
call
push
cmp
inc
add
add
idiv
(bad)
jmp
or
pop
sub
jnp
add
add
adc
leave
sbb
add
(bad)
(bad)
call
(bad)
(bad)
(bad)
inc
pop
adc
add
add
cmp
(bad)
(bad)
cmp
std
(bad)
dec
pop
pop
sub
add
xor
add
add
add
add
add
add
push
add
push
add
or
add
xor
add
add
add
add
add
add
push
pop
sub
add
xor
add
add
add
add
add
add
push
push
sub
add
xor
add
add
add
add
push
add
add
push
and
add
xor
add
add
add
add
push
add
add
push
and
add
xor
adc
add
add
add
sub
es
add
add
outs
repnz
push
and
or
or
add
add
add
push
add
add
push
and
add
xor
and
add
sub
add
push
sub
es
pop
or
cmp
add
add
inc
add
add
idiv
(bad)
call
sub
add
es
add
add
and
pushf
push
and
test
add
pop
inc
add
add
idiv
(bad)
call
sub
es
add
add
idiv
(bad)
jmp
sub
js
add
and
add
add
pop
sbb
add
and
sub
cmp
inc
add
add
idiv
(bad)
jmp
jle
add
add
sbb
add
push
pop
pop
or
pop
push
aas
dec
add
add
inc
add
add
idiv
(bad)
call
adc
add
add
xor
add
idiv
(bad)
call
adc
mov
es
sbb
add
add
(bad)
(bad)
jmp
jle
add
add
and
pushf
sbb
sub
add
add
(bad)
(bad)
jmp
cmp
add
jle
add
add
and
(bad)
(bad)
inc
pop
pop
or
mov
es
sub
pop
or
pop
inc
push
add
add
(bad)
(bad)
push
add
add
add
je
add
pop
add
add
add
add
add
add
add
add
add
add
add
adc
(bad)
jmp
(bad)
(bad)
push
add
add
add
cmp
add
add
(bad)
inc
add
add
add
add
adc
lahf
jle
add
add
and
or
and
add
add
fadd
add
pop
inc
add
add
idiv
(bad)
call
push
sub
add
push
and
add
adc
fs
(bad)
(bad)
cmp
(bad)
(bad)
jle
add
add
pop
xor
pop
push
bound
mov
es
pop
adc
inc
(bad)
(bad)
call
or
pop
cmp
(bad)
(bad)
call
inc
add
add
idiv
(bad)
jmp
pop
adc
add
add
and
add
add
mov
outs
add
add
sub
es
add
add
inc
add
add
idiv
(bad)
jmp
pop
or
call
push
sub
add
push
and
add
cmp
(bad)
(bad)
jmp
push
add
add
adc
add
and
add
push
cmp
(bad)
(bad)
call
inc
add
add
idiv
(bad)
jmp
push
and
add
add
cwde
(bad)
(bad)
call
inc
add
add
idiv
(bad)
(bad)
cmp
(bad)
(bad)
(bad)
jle
add
add
pop
test
pop
push
bound
mov
es
pop
or
cmp
inc
add
add
idiv
(bad)
jmp
jle
add
add
and
pushf
pop
adc
ins
(bad)
(bad)
call
adc
adc
add
and
add
add
mov
outs
add
add
push
add
add
sub
add
and
add
pop
(bad)
(bad)
jmp
sbb
call
or
cmp
(bad)
(bad)
(bad)
cmp
jp
add
push
pop
or
mov
es
pop
or
mov
add
and
(bad)
call
inc
add
add
idiv
(bad)
jmp
sub
xor
add
add
adc
add
push
sub
es
sbb
mov
and
inc
add
sub
add
push
and
add
xor
push
cmp
add
add
add
cmp
add
push
add
add
add
add
pop
(bad)
mov
push
jge
add
add
cmp
add
add
add
add
adc
add
and
add
or
bound
add
adc
sbb
push
jge
add
add
sub
sub
mov
sub
es
sbb
add
add
(bad)
(bad)
call
sub
add
es
sub
add
add
(bad)
(bad)
jmp
add
pop
push
pop
pop
(bad)
mov
push
jge
add
add
mov
or
add
pop
(bad)
(bad)
push
(bad)
(bad)
(bad)
cmp
(bad)
(bad)
(bad)
mov
(bad)
(bad)
jmp
(bad)
(bad)
call
(bad)
(bad)
inc
add
add
sub
sub
add
adc
or
cmp
add
add
add
sub
es
jle
add
add
pop
maxps
outs
add
add
sbb
maxps
outs
add
add
push
arpl
maxps
outs
add
add
pop
or
xchg
pusha
push
add
add
add
add
add
add
push
add
jge
add
add
push
jge
add
add
add
xor
add
add
sub
es
sbb
push
and
and
add
add
sbb
inc
add
arpl
or
add
add
pop
sub
add
das
sub
add
idiv
(bad)
call
sub
add
es
inc
add
xor
sbb
add
(bad)
(bad)
call
sub
sub
push
sbb
sub
sbb
pop
inc
or
add
test
(bad)
jmp
(bad)
(bad)
call
(bad)
call
(bad)
call
add
add
mov
sub
es
sbb
add
add
(bad)
(bad)
jmp
sbb
mov
adc
or
mov
add
sub
add
push
sub
sub
cmp
inc
add
add
idiv
(bad)
call
sub
add
es
sub
add
add
(bad)
(bad)
jmp
add
das
nop
add
add
(bad)
(bad)
call
ds
push
sbb
pop
sub
es
add
add
(bad)
(bad)
jmp
push
or
sub
es
add
add
(bad)
(bad)
jmp
add
arpl
or
add
and
or
inc
pop
add
add
(bad)
jmp
add
add
(bad)
(bad)
inc
add
add
mov
sbb
fld
add
adc
or
pop
add
sub
add
push
push
cmp
add
add
test
add
add
add
add
jnp
add
add
jge
add
outs
add
add
xchg
xchg
sbb
add
push
sbb
cmp
add
sbb
add
add
(bad)
(bad)
call
sub
add
es
add
add
jnp
add
add
jg
add
add
add
pop
sbb
mov
sub
es
add
add
idiv
(bad)
jmp
add
add
add
leave
add
push
pop
or
test
jnp
add
add
jnp
add
add
jg
add
pop
sbb
mov
cmp
or
cmp
add
push
(bad)
(bad)
call
inc
add
add
idiv
(bad)
call
or
ins
add
add
add
mov
or
pop
add
add
add
jnp
add
add
mov
jnp
add
add
jnp
add
add
into
add
push
pop
or
jno
add
mov
sub
push
pop
pop
or
mov
pop
pop
inc
add
add
idiv
(bad)
jmp
add
add
add
sbb
sub
inc
push
or
inc
push
add
add
(bad)
(bad)
(bad)
cmp
(bad)
call
(bad)
call
(bad)
(bad)
jmp
(bad)
(bad)
(bad)
cmp
(bad)
inc
(bad)
call
(bad)
call
(bad)
(bad)
dec
(bad)
(bad)
call
add
add
sub
es
sbb
add
add
idiv
(bad)
jmp
pop
sub
or
add
add
adc
add
push
pop
or
push
add
add
jnp
add
add
add
push
cmp
add
add
pop
or
push
and
add
sbb
add
add
(bad)
(bad)
call
sub
add
es
sub
adc
add
add
inc
add
add
idiv
(bad)
jmp
adc
xor
sbb
add
add
idiv
(bad)
call
sub
cmp
inc
add
add
idiv
(bad)
jmp
adc
ds
add
add
inc
add
add
idiv
(bad)
inc
jnp
add
add
pop
adc
pop
pop
bound
pop
pop
adc
mov
mov
add
add
add
add
sub
adc
cmp
add
sbb
add
add
idiv
(bad)
jmp
add
add
add
add
add
sub
adc
mov
add
and
add
sbb
add
add
(bad)
(bad)
jmp
add
sub
es
add
and
add
sbb
add
(bad)
(bad)
jmp
add
add
add
outs
mov
add
sbb
add
or
out
add
add
pop
pop
or
cmp
add
add
add
cmp
sbb
add
add
idiv
(bad)
call
push
cmp
add
add
inc
add
add
idiv
(bad)
jmp
push
or
mov
sub
cmp
inc
add
add
idiv
(bad)
jmp
pop
push
pop
cmp
inc
add
add
idiv
(bad)
jmp
sub
jnp
add
add
xchg
and
add
add
add
add
add
xchg
or
or
mov
es
add
add
(bad)
(bad)
jmp
pop
or
fdivr
(bad)
call
add
(bad)
(bad)
call
inc
adc
adc
movntps
push
add
add
add
movs
sbb
add
add
(bad)
(bad)
call
sub
add
add
add
pop
adc
pop
pop
bound
pop
pop
adc
lock
push
cmp
or
push
adc
inc
adc
add
pop
(bad)
(bad)
jmp
(bad)
(bad)
jmp
(bad)
(bad)
call
std
(bad)
inc
std
(bad)
dec
(bad)
(bad)
call
(bad)
jmp
std
(bad)
push
(bad)
(bad)
jmp
(bad)
jmp
(bad)
(bad)
dec
(bad)
(bad)
inc
(bad)
(bad)
call
add
add
sub
es
add
add
(bad)
(bad)
jmp
popf
sub
add
adc
or
sub
add
sub
add
sub
es
pop
sub
es
add
add
inc
add
add
idiv
(bad)
call
sub
add
es
mov
add
and
inc
add
add
idiv
(bad)
jmp
add
add
add
data16
add
push
cmp
or
inc
or
add
adc
add
add
(bad)
(bad)
inc
add
add
add
xchg
add
add
add
mov
add
sbb
mov
add
and
inc
add
add
idiv
(bad)
jmp
add
add
add
add
or
add
idiv
(bad)
call
sub
pop
sbb
mov
push
sub
pop
inc
add
add
idiv
(bad)
jmp
add
lods
add
push
push
pop
sub
add
add
(bad)
(bad)
jmp
add
add
add
rol
push
sbb
mov
add
and
(bad)
call
add
(bad)
(bad)
jmp
add
add
add
sub
add
push
cmp
(bad)
(bad)
jmp
sbb
inc
(bad)
(bad)
inc
jnp
add
add
add
outs
in
add
push
pop
pop
cmp
(bad)
(bad)
call
add
(bad)
(bad)
jmp
sub
adc
or
add
add
adc
add
push
pop
or
rol
add
add
lods
add
push
sub
jnp
add
add
push
add
push
sbb
add
add
idiv
(bad)
call
sub
add
es
sub
pop
pop
sbb
add
push
sbb
add
sbb
add
add
idiv
(bad)
jmp
add
add
add
ret
push
add
add
add
jnp
add
add
ret
add
push
pop
sub
cmp
add
add
idiv
(bad)
jmp
pop
sbb
pop
add
add
push
add
mov
add
pop
or
sub
sbb
add
(bad)
(bad)
jmp
add
sub
sub
adc
sub
inc
add
add
add
add
add
jl
add
add
add
add
cmp
add
add
or
push
adc
inc
push
add
add
add
add
add
add
add
add
add
add
add
add
(bad)
(bad)
cmp
add
lea
add
add
add
add
add
add
add
add
add
add
add
(bad)
(bad)
inc
add
add
(bad)
(bad)
(bad)
mov
add
add
add
sub
(bad)
jmp
add
add
add
add
add
add
add
add
or
(bad)
cmp
add
add
add
add
add
jl
add
add
jle
add
add
add
pop
pop
or
adc
sub
cmp
(bad)
call
idiv
(bad)
(bad)
cmp
(bad)
(bad)
call
add
pop
sbb
cs
(bad)
(bad)
cmp
add
add
jnp
add
add
jge
add
outs
add
add
xchg
xchg
push
ds
add
add
inc
add
add
idiv
(bad)
inc
pop
pop
or
movaps
es
(bad)
(bad)
call
idiv
(bad)
jmp
add
add
add
ret
push
sub
es
sbb
aam
(bad)
call
or
adc
pop
push
cmp
(bad)
(bad)
inc
jnp
add
add
jnp
add
add
ret
add
push
pop
sbb
mov
(bad)
inc
aas
push
add
add
inc
add
add
idiv
(bad)
call
push
cmp
sbb
sbb
cmp
add
sbb
add
add
(bad)
(bad)
call
pop
cmp
inc
jnp
add
add
ret
push
pop
adc
push
(bad)
dec
or
mov
inc
add
add
idiv
(bad)
call
or
cmp
call
inc
add
add
idiv
(bad)
jmp
pop
push
cmp
sbb
add
add
(bad)
(bad)
call
push
push
sbb
add
add
add
int3
add
push
and
jno
add
int3
add
push
and
jb
add
les
add
and
ja
add
or
cmp
std
(bad)
inc
sub
adc
cmp
std
(bad)
call
inc
add
add
idiv
(bad)
jmp
adc
std
(bad)
call
inc
add
add
idiv
(bad)
call
sbb
(bad)
std
(bad)
inc
sub
sbb
inc
pop
pop
or
cmp
adc
adc
cmps
std
(bad)
call
add
push
add
add
and
(bad)
call
idiv
(bad)
call
adc
cmp
inc
add
add
idiv
(bad)
jmp
add
add
add
jp
add
jnp
add
lds
add
pop
adc
(bad)
call
inc
add
add
idiv
(bad)
jmp
sub
or
cld
(bad)
call
inc
add
add
idiv
(bad)
inc
jnp
add
add
push
add
or
add
idiv
(bad)
call
sub
pop
pop
sbb
mov
jnp
add
add
js
add
jns
add
lds
add
push
sub
cmp
std
(bad)
call
inc
add
add
idiv
(bad)
jmp
or
sub
es
cld
(bad)
call
idiv
(bad)
jmp
add
add
add
pop
or
into
cld
(bad)
inc
jnp
add
add
jl
add
add
add
(bad)
dec
add
add
add
pop
push
add
cmp
add
adc
or
adc
add
add
add
push
add
add
add
add
add
add
inc
sub
add
adc
or
mov
add
sub
add
push
sub
sub
es
add
add
(bad)
(bad)
call
sub
add
es
push
add
add
add
jl
add
(bad)
dec
add
add
add
pop
push
add
sub
add
add
add
jnp
add
add
popf
sub
sbb
pop
add
add
add
and
add
or
pop
jge
add
add
add
pushf
sub
push
add
add
(bad)
(bad)
inc
(bad)
(bad)
dec
(bad)
(bad)
dec
add
add
pop
sub
add
add
(bad)
(bad)
jmp
add
mov
add
and
add
xor
test
add
sub
add
sub
es
sub
sub
cmp
add
sbb
add
(bad)
(bad)
call
sub
add
es
aam
add
add
add
sbb
pop
pop
jge
add
add
or
mov
jnp
add
add
jl
add
(bad)
dec
add
add
add
pop
push
add
cmp
jnp
add
add
jl
add
(bad)
dec
add
add
add
pop
push
add
or
jae
jnp
add
add
and
add
or
pop
jge
add
add
add
pop
rcr
sbb
scas
add
push
and
inc
pop
sbb
fadd
add
sbb
add
add
(bad)
(bad)
call
sub
add
add
add
jnp
add
add
push
push
add
add
and
sbb
jge
add
add
mov
add
sbb
add
xchg
(bad)
(bad)
push
(bad)
call
(bad)
(bad)
dec
(bad)
push
add
xor
(bad)
jmp
(bad)
(bad)
call
add
add
dec
add
popa
add
add
or
sub
add
add
(bad)
(bad)
jmp
push
and
add
add
aaa
sbb
add
add
(bad)
(bad)
inc
and
and
add
idiv
(bad)
(bad)
cmp
(bad)
jmp
sbb
push
and
inc
add
add
idiv
(bad)
jmp
add
pop
pop
sub
or
cmp
(bad)
inc
sub
sub
xor
add
add
add
add
add
add
push
pop
sub
add
xor
add
add
add
add
add
add
push
push
sub
add
xor
add
add
add
add
push
add
add
or
add
sub
add
adc
or
push
add
add
add
add
add
push
add
sub
sub
add
xor
add
add
add
add
add
add
push
add
push
add
or
add
xor
add
add
add
add
add
add
push
add
add
push
sub
adc
or
or
add
add
add
push
add
add
lock
push
sub
add
adc
or
or
add
add
add
sub
es
add
outs
into
add
push
sub
xor
add
add
add
add
sub
es
add
outs
mov
xor
add
add
add
add
add
add
push
add
add
push
sub
adc
or
or
add
add
add
sub
es
add
outs
in
add
push
sub
xor
add
add
add
add
add
add
push
add
add
push
sub
adc
or
or
add
add
add
sub
es
add
outs
int
add
sub
xor
add
add
add
add
push
add
add
push
and
add
xor
add
add
add
add
push
add
add
enter
sub
add
adc
or
loopne
add
sub
add
sub
es
sub
es
push
sub
add
add
sub
or
inc
or
add
jnp
add
data16
add
add
add
add
add
add
add
(bad)
(bad)
call
rol
add
and
add
and
add
pop
inc
add
add
idiv
(bad)
call
sub
add
es
lods
add
jge
add
add
sub
add
push
and
inc
add
add
idiv
(bad)
jmp
nop
add
add
sub
add
push
and
(bad)
call
inc
add
add
idiv
(bad)
jmp
add
add
add
add
and
add
cmp
inc
sub
add
push
sbb
push
(bad)
(bad)
inc
add
sub
add
and
add
iret
es
cmp
(bad)
(bad)
jmp
adc
or
sub
add
add
add
sub
es
add
add
add
jo
add
jnp
add
add
xchg
and
inc
add
jnp
add
add
xchg
sub
add
push
sub
adc
or
adc
add
add
add
sub
es
add
jge
add
add
add
jge
add
add
xor
add
add
adc
add
push
push
sub
or
or
cs
or
sub
or
jnp
add
add
add
add
add
(bad)
(bad)
call
sub
add
cmp
adc
add
add
(bad)
(bad)
inc
add
add
add
(bad)
(bad)
push
add
add
add
add
add
xchg
(bad)
(bad)
(bad)
inc
add
in
add
push
add
add
add
add
add
pop
add
add
push
sub
add
add
and
add
and
add
push
and
add
pop
sub
add
add
(bad)
(bad)
jmp
sub
add
add
add
xchg
adc
or
push
and
(bad)
call
idiv
(bad)
(bad)
cmp
dec
add
add
add
rcl
inc
add
add
idiv
(bad)
call
(bad)
(bad)
(bad)
inc
jnp
add
add
add
add
and
add
push
and
add
and
add
sbb
add
add
(bad)
(bad)
jmp
sbb
sbb
(bad)
inc
adc
pop
(bad)
add
add
pop
adc
add
pop
pop
pop
bound
dec
add
add
pop
pop
or
(bad)
(bad)
call
add
xor
sbb
add
(bad)
(bad)
call
or
xlat
(bad)
(bad)
inc
jnp
add
add
push
adc
pop
xchg
sub
add
push
and
mov
mov
(bad)
inc
or
sahf
pop
add
add
add
xchg
pop
invd
pop
pop
pop
pop
bound
sbb
push
and
(bad)
call
inc
add
add
idiv
(bad)
jmp
or
pop
or
push
(bad)
(bad)
jmp
pop
or
cmp
(bad)
call
inc
add
add
idiv
(bad)
jmp
push
or
(bad)
jmp
add
add
xor
add
add
adc
add
push
sbb
add
sbb
add
add
(bad)
(bad)
call
sub
add
es
pop
or
add
add
sub
add
and
or
pop
pop
sbb
sub
add
push
and
add
and
inc
add
add
idiv
(bad)
jmp
pop
sbb
sub
push
add
add
add
xor
inc
add
add
idiv
(bad)
inc
jnp
add
add
push
pop
sbb
pop
add
add
pop
pop
adc
pop
or
add
add
pop
pop
push
sahf
cmp
add
add
pop
cmp
add
add
add
add
push
pop
adc
add
add
add
add
popa
add
add
inc
add
add
idiv
(bad)
call
cmp
add
add
add
pop
(bad)
add
add
pop
or
add
add
add
pop
(bad)
add
add
pop
or
cmp
add
push
sub
add
push
and
(bad)
add
add
jnp
add
add
or
adc
push
add
add
or
jnp
add
add
pop
aas
int
add
sbb
add
add
(bad)
(bad)
dec
push
cmp
sbb
add
(bad)
(bad)
call
or
rol
add
and
add
sbb
add
add
(bad)
(bad)
(bad)
cmp
add
add
add
pop
adc
rol
add
and
add
sbb
add
add
idiv
(bad)
(bad)
cmp
add
add
add
sbb
add
add
adc
adc
and
or
leave
add
add
or
pop
adc
pop
sbb
mov
add
add
add
and
add
and
add
push
and
add
or
call
add
add
add
add
or
pop
xchg
adc
cmp
add
add
add
or
xchg
pop
adc
push
sub
or
inc
jnp
add
add
push
sahf
pop
push
pop
sub
add
add
(bad)
(bad)
jmp
or
add
add
(bad)
(bad)
jmp
add
add
add
pop
adc
pop
pop
sub
or
pop
or
sub
add
push
and
inc
add
add
idiv
(bad)
jmp
add
add
add
sbb
add
adc
idiv
(bad)
call
inc
and
add
(bad)
std
(bad)
call
add
xchg
add
mov
(bad)
jmp
(bad)
jmp
(bad)
(bad)
call
(bad)
(bad)
push
std
(bad)
push
add
add
add
add
std
(bad)
dec
(bad)
(bad)
jmp
add
add
(bad)
call
std
(bad)
dec
add
add
(bad)
(bad)
inc
(bad)
dec
add
call
(bad)
mov
add
add
add
add
(bad)
(bad)
inc
std
(bad)
call
add
add
(bad)
jmp
rol
add
and
(bad)
call
inc
add
add
idiv
(bad)
jmp
add
add
add
pop
pop
pop
(bad)
add
add
pop
or
cmp
(bad)
(bad)
(bad)
cmp
add
add
pop
cmp
or
pop
adc
adc
cmp
inc
add
add
idiv
(bad)
call
and
pop
(bad)
(bad)
call
add
add
sbb
add
(bad)
(bad)
call
sub
add
push
and
(bad)
call
inc
add
add
idiv
(bad)
(bad)
cmp
(bad)
(bad)
inc
jnp
add
add
or
pop
and
lock
inc
add
add
idiv
(bad)
call
sbb
mov
or
cmp
sbb
add
add
(bad)
(bad)
call
push
pop
cmp
inc
add
add
idiv
(bad)
jmp
add
or
pop
xchg
adc
add
add
idiv
(bad)
call
or
jns
(bad)
inc
jnp
add
add
or
and
add
pop
or
add
pop
pop
and
add
add
add
pop
or
add
add
add
pop
adc
pop
pop
pop
pop
bound
or
ds
add
add
(bad)
(bad)
call
push
(bad)
(bad)
inc
pop
pop
adc
inc
sbb
add
adc
call
inc
add
add
idiv
(bad)
call
adc
in
std
(bad)
call
or
sbb
inc
jnp
add
add
adc
adc
rcr
(bad)
jmp
add
add
xor
add
add
push
pop
adc
mov
add
pop
adc
cmp
adc
pop
or
add
add
inc
add
add
idiv
(bad)
call
sub
add
cmp
add
add
sbb
add
adc
add
and
inc
add
add
idiv
(bad)
jmp
sbb
add
sbb
add
add
(bad)
(bad)
jmp
adc
adc
xchg
adc
pop
sbb
cmp
add
pop
inc
add
add
idiv
(bad)
jmp
adc
adc
pop
and
xor
add
adc
adc
adc
push
xor
add
idiv
(bad)
inc
jnp
add
add
adc
pop
pop
sbb
adc
xchg
xchg
adc
add
inc
add
add
idiv
(bad)
inc
adc
adc
sbb
repnz
add
or
adc
add
sbb
add
add
(bad)
(bad)
call
pop
cmp
add
add
adc
adc
and
cmp
add
add
add
(bad)
(bad)
jmp
pop
push
xchg
adc
cmp
or
adc
add
add
pop
adc
add
aas
adc
add
add
idiv
(bad)
(bad)
cmp
add
add
sbb
add
add
inc
add
add
idiv
(bad)
call
push
cmp
add
pop
or
pop
and
pop
sbb
bound
add
adc
pop
adc
pop
pop
sbb
adc
xchg
xchg
adc
cmp
sbb
add
add
(bad)
(bad)
inc
adc
adc
sahf
pop
and
cmp
inc
add
add
idiv
(bad)
jmp
adc
sbb
pop
adc
pop
sub
sbb
add
adc
or
addr16
(bad)
call
inc
add
add
idiv
(bad)
call
or
push
and
add
sbb
add
(bad)
(bad)
jmp
adc
adc
xchg
and
add
add
or
adc
and
add
add
aad
add
and
sub
add
push
and
add
sbb
add
add
(bad)
(bad)
jmp
pop
push
xchg
adc
pop
adc
cmp
add
add
idiv
(bad)
jmp
cmp
adc
pop
adc
xchg
sahf
pop
adc
cmp
add
add
idiv
(bad)
jmp
or
xor
sbb
add
add
(bad)
(bad)
call
pop
cmp
add
or
adc
pop
pop
sbb
adc
xchg
xchg
adc
xor
add
idiv
(bad)
inc
adc
adc
sahf
pop
adc
inc
add
add
or
pop
sub
add
push
and
xor
cmp
inc
add
add
idiv
(bad)
jmp
push
sub
or
and
or
add
add
or
adc
adc
sbb
or
sahf
pop
push
cmp
add
add
adc
xor
cmp
add
add
inc
add
add
idiv
(bad)
jmp
or
or
sbb
retf
add
add
or
or
add
push
xchg
push
bound
add
add
ret
std
(bad)
inc
adc
and
add
or
pop
sub
add
push
and
or
or
sbb
mov
add
adc
and
cmp
(bad)
call
inc
add
add
idiv
(bad)
call
sbb
ins
add
add
or
add
add
inc
add
add
idiv
(bad)
jmp
adc
pop
adc
xchg
xchg
adc
pop
adc
pop
pop
xchg
xchg
xor
sbb
add
(bad)
(bad)
call
sbb
push
and
add
sbb
add
add
(bad)
(bad)
jmp
adc
pop
pop
adc
pop
adc
pop
adc
xchg
sahf
pop
sub
add
adc
mov
(bad)
call
inc
add
add
idiv
(bad)
call
sub
rol
add
and
add
sbb
add
add
(bad)
(bad)
jmp
add
pop
pop
add
add
add
aam
add
and
add
or
les
add
cmp
(bad)
(bad)
inc
adc
pop
adc
xchg
sahf
pop
or
mov
add
or
push
cmp
inc
adc
pop
adc
xchg
sahf
pop
and
rol
add
and
add
sbb
add
add
(bad)
(bad)
(bad)
cmp
add
or
aas
out
cld
(bad)
call
inc
add
add
idiv
(bad)
call
pop
sub
add
add
(bad)
(bad)
jmp
push
sub
add
push
and
push
adc
pop
adc
xchg
xchg
adc
pop
adc
pop
pop
xchg
xchg
xor
add
(bad)
(bad)
call
adc
pop
adc
pop
das
sub
adc
xchg
sahf
pop
movntps
pop
adc
cmp
add
add
adc
pop
or
in
inc
add
add
idiv
(bad)
jmp
mov
adc
push
adc
inc
xor
add
pop
add
add
(bad)
(bad)
jmp
sti
(bad)
call
std
(bad)
dec
(bad)
call
(bad)
inc
(bad)
jmp
std
(bad)
(bad)
cmp
(bad)
jmp
(bad)
jmp
(bad)
call
(bad)
jmp
(bad)
call
(bad)
push
add
cmp
sti
(bad)
(bad)
mov
(bad)
(bad)
push
(bad)
(bad)
call
sti
(bad)
inc
add
add
add
mov
(bad)
inc
(bad)
(bad)
dec
std
(bad)
jmp
add
add
cli
(bad)
inc
cld
(bad)
push
cli
(bad)
(bad)
cmp
add
stos
cld
(bad)
jmp
std
(bad)
call
add
(bad)
(bad)
mov
(bad)
(bad)
jmp
add
add
(bad)
dec
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
dec
std
(bad)
(bad)
cmp
(bad)
dec
add
add
push
cmp
(bad)
call
or
adc
or
sete
or
adc
pop
adc
adc
sahf
push
adc
pop
or
add
(bad)
call
or
adc
pop
pop
pop
adc
pop
or
lock
(bad)
call
adc
pop
pop
pop
adc
adc
or
(bad)
(bad)
(bad)
call
add
(bad)
(bad)
call
and
iret
(bad)
(bad)
call
or
pop
pop
adc
adc
or
adc
pop
adc
sahf
pop
sub
mov
(bad)
inc
jnp
add
add
and
add
and
sub
add
push
and
(bad)
call
inc
add
add
idiv
(bad)
jmp
push
adc
out
(bad)
inc
jnp
add
add
add
adc
cli
(bad)
call
inc
add
add
idiv
(bad)
call
sub
fs
(bad)
call
adc
add
push
and
(bad)
call
inc
add
add
idiv
(bad)
jmp
add
or
retf
push
pop
xor
rol
add
and
(bad)
call
inc
add
add
idiv
(bad)
jmp
push
adc
pop
cmp
add
xor
mov
add
add
adc
add
push
pop
cmp
add
pop
pop
pop
or
pop
es
rol
add
and
inc
add
add
idiv
(bad)
call
sub
add
es
add
add
add
and
add
and
sbb
add
add
(bad)
(bad)
call
push
sub
push
or
sub
add
push
and
inc
add
add
idiv
(bad)
jmp
sub
push
add
add
add
xchg
add
add
add
xchg
pop
pop
or
sub
or
inc
or
add
sar
jmp
(bad)
(bad)
jmp
(bad)
jmp
(bad)
jmp
(bad)
call
add
add
sub
add
push
and
(bad)
call
add
(bad)
(bad)
jmp
sbb
rol
add
adc
or
fld
add
sub
add
sub
es
pop
or
cmp
add
add
inc
add
add
idiv
(bad)
call
sub
add
es
add
add
adc
and
add
pop
push
add
adc
cmps
add
add
jnp
add
add
add
add
add
pop
push
add
or
add
pop
adc
push
add
add
jnp
add
add
add
adc
add
push
and
inc
add
add
idiv
(bad)
jmp
push
adc
sub
add
push
and
inc
add
add
idiv
(bad)
jmp
sbb
inc
add
add
idiv
(bad)
jmp
cmp
add
add
or
adc
and
or
sub
sub
sub
cmp
add
add
add
pop
adc
ret
add
or
push
adc
inc
pop
add
add
(bad)
dec
(bad)
(bad)
(bad)
stc
(bad)
(bad)
(bad)
clc
add
add
add
add
(bad)
(bad)
jg
add
xchg
add
add
(bad)
(bad)
inc
add
xlat
(bad)
(bad)
call
add
add
add
dec
(bad)
(bad)
call
add
add
add
add
(bad)
(bad)
push
add
xchg
add
add
adc
cmp
(bad)
call
add
(bad)
(bad)
call
adc
xchg
jnp
add
add
adc
and
add
pop
push
add
sub
pop
or
pop
inc
add
add
idiv
(bad)
call
or
rol
add
and
(bad)
call
idiv
(bad)
jmp
adc
jnp
add
add
pop
(bad)
(bad)
call
inc
add
add
idiv
(bad)
call
push
cmp
(bad)
(bad)
jmp
loopne
sub
pop
inc
add
add
idiv
(bad)
call
adc
or
(bad)
call
rol
add
and
(bad)
call
inc
add
add
idiv
(bad)
(bad)
cmp
(bad)
(bad)
jmp
stos
add
add
add
adc
and
add
pop
push
add
push
cmp
(bad)
(bad)
dec
add
add
add
add
cmp
inc
add
add
idiv
(bad)
call
adc
cmps
(bad)
(bad)
dec
adc
call
idiv
(bad)
call
cmp
jnp
add
add
(bad)
dec
add
add
add
push
add
add
sub
add
push
and
(bad)
call
inc
add
add
idiv
(bad)
jmp
or
cmp
(bad)
(bad)
call
inc
add
add
idiv
(bad)
call
or
dec
pop
pop
and
sbb
add
add
(bad)
(bad)
call
add
jnp
add
add
int3
sbb
add
add
(bad)
(bad)
call
sbb
(bad)
jmp
mov
add
or
cmp
(bad)
jmp
add
add
xor
add
add
add
add
adc
add
push
pop
cmp
add
add
mov
add
adc
pop
adc
sbb
rol
add
and
add
sbb
add
(bad)
(bad)
call
sub
add
es
adc
adc
cmp
add
add
inc
add
add
idiv
(bad)
jmp
add
add
add
jo
add
sbb
sub
add
push
cmp
add
sbb
rol
add
and
add
sbb
add
add
idiv
(bad)
jmp
push
or
add
pop
adc
or
mov
add
or
add
add
add
idiv
(bad)
call
adc
jb
add
add
add
add
jo
add
sbb
sub
add
push
pop
or
pop
adc
jnp
add
add
and
inc
add
add
idiv
(bad)
dec
add
add
add
add
cmp
inc
add
add
idiv
(bad)
dec
pop
cmp
add
add
inc
add
add
idiv
(bad)
call
sub
or
pop
and
sbb
add
add
(bad)
(bad)
jmp
stos
pop
adc
adc
inc
sbb
add
(bad)
(bad)
(bad)
jmp
add
add
add
sbb
add
bound
add
and
(bad)
dec
(bad)
(bad)
push
add
cmp
add
cmps
add
add
add
add
add
mov
(bad)
call
add
add
add
cmp
(bad)
jmp
add
add
add
(bad)
(bad)
call
add
add
add
stc
(bad)
(bad)
(bad)
jp
(bad)
push
add
pop
adc
(bad)
cmp
(bad)
(bad)
call
pop
adc
inc
add
add
idiv
(bad)
jmp
add
add
add
add
adc
sbb
add
add
(bad)
(bad)
call
cmp
(bad)
jmp
mov
add
or
or
adc
dec
(bad)
(bad)
dec
and
xor
sbb
add
add
idiv
(bad)
call
or
xor
(bad)
jmp
in
or
(bad)
add
push
pop
push
cmp
(bad)
(bad)
call
add
jnp
add
add
cmps
add
add
idiv
(bad)
call
sbb
rol
add
and
(bad)
call
inc
add
add
idiv
(bad)
(bad)
cmp
(bad)
(bad)
inc
pop
adc
(bad)
add
push
push
cmp
(bad)
(bad)
inc
jnp
add
add
jo
add
pop
or
outs
lock
push
sbb
jmp
mov
xor
idiv
(bad)
call
or
lods
(bad)
(bad)
jmp
mov
sub
sbb
add
add
(bad)
(bad)
inc
pop
adc
add
push
sbb
(bad)
(bad)
(bad)
(bad)
cmp
(bad)
inc
pop
adc
add
push
pop
(bad)
(bad)
(bad)
call
or
jae
(bad)
(bad)
cmp
(bad)
call
or
sub
add
push
and
(bad)
call
add
(bad)
(bad)
jmp
pop
push
sub
add
push
and
(bad)
call
idiv
(bad)
jmp
add
add
push
pop
pop
cmp
(bad)
call
and
(bad)
jmp
add
xor
add
add
add
add
add
add
push
add
push
add
or
add
xor
add
add
add
add
add
add
push
pop
sub
add
xor
add
add
add
add
add
add
push
push
sub
add
xor
add
add
add
add
push
add
add
lock
push
sub
add
adc
or
push
add
add
add
add
add
push
add
sub
sub
add
xor
add
add
add
add
add
add
push
add
add
je
add
and
xor
add
add
add
add
add
add
push
add
add
outs
add
or
xor
add
add
add
add
sub
es
add
outs
mov
xor
and
add
sub
add
push
sub
es
push
sub
add
push
and
add
sbb
add
add
(bad)
(bad)
call
sub
add
es
jge
add
add
sub
add
push
and
add
sbb
add
add
idiv
(bad)
jmp
add
add
add
push
and
add
xor
sbb
jbe
add
add
jae
add
push
jge
add
add
sub
sub
add
push
pop
sub
add
push
and
inc
add
add
idiv
(bad)
jmp
add
add
add
push
and
add
push
sub
sbb
add
(bad)
(bad)
jmp
add
pop
and
add
jge
add
add
or
pop
add
add
add
sub
add
push
and
add
xor
or
inc
or
add
ins
(bad)
(bad)
jmp
(bad)
(bad)
jmp
(bad)
(bad)
inc
(bad)
call
inc
(bad)
(bad)
call
(bad)
call
add
add
sub
add
push
and
(bad)
call
inc
add
add
idiv
(bad)
jmp
sbb
mov
xor
add
add
add
add
push
add
jnp
add
add
jnp
add
add
sbb
jnp
add
add
jnp
add
add
pop
xchg
popa
jge
add
add
add
adc
or
rol
add
add
adc
add
push
push
cmp
test
add
bound
jnp
add
add
jnp
add
add
pop
xchg
popa
and
jg
add
pop
cmp
add
add
jge
add
add
sub
add
push
and
inc
add
add
idiv
(bad)
call
sub
add
sub
jnp
add
add
jnp
add
add
(bad)
jg
add
jnp
add
add
xchg
and
jecxz
add
and
inc
add
add
idiv
(bad)
jmp
sbb
adc
jnp
add
add
add
add
add
popf
sub
or
inc
pop
add
add
(bad)
call
(bad)
(bad)
inc
add
add
(bad)
(bad)
push
(bad)
dec
add
add
imul
jmp
sbb
(bad)
push
and
inc
add
adc
or
add
add
adc
add
push
push
sub
add
push
and
add
pop
inc
add
add
idiv
(bad)
call
sub
add
es
pop
cmp
add
sbb
add
add
(bad)
(bad)
jmp
add
add
add
mov
add
cmp
add
add
add
add
xchg
add
pop
cmp
add
add
inc
add
add
idiv
(bad)
jmp
cmp
add
add
jnp
add
add
xchg
and
inc
add
pop
or
cmc
add
add
and
add
xor
add
idiv
(bad)
call
push
sub
add
push
and
add
pop
inc
add
add
idiv
(bad)
jmp
sub
add
add
add
xchg
and
inc
add
push
cmp
pop
pop
or
mov
add
add
and
add
add
mov
add
or
or
loop
add
and
add
sbb
add
add
(bad)
(bad)
jmp
push
or
cmp
add
add
add
add
or
add
sbb
add
add
(bad)
(bad)
call
sub
or
add
popf
sbb
dec
add
add
add
pop
and
add
das
or
add
idiv
(bad)
call
sub
pop
and
add
pop
push
and
pop
pop
or
and
add
aas
push
(bad)
(bad)
call
inc
add
add
idiv
(bad)
jmp
mov
adc
add
sldt
add
add
add
add
add
(bad)
(bad)
dec
(bad)
(bad)
push
(bad)
call
(bad)
(bad)
push
(bad)
(bad)
dec
(bad)
call
(bad)
(bad)
call
(bad)
(bad)
jmp
(bad)
(bad)
push
or
push
and
inc
add
add
idiv
(bad)
jmp
add
add
add
add
lea
add
and
add
sub
add
push
sbb
mov
add
adc
or
add
add
push
push
sub
and
add
pop
jge
add
add
sub
jnp
add
add
push
add
add
add
add
inc
add
add
idiv
(bad)
call
sub
add
es
or
sub
sbb
add
add
(bad)
(bad)
jmp
add
add
pop
jge
add
add
inc
push
or
inc
push
add
add
add
add
add
add
add
add
add
inc
add
add
(bad)
push
add
adc
add
or
add
and
add
inc
add
add
add
addr16
(bad)
jmp
sbb
mov
add
aas
sub
add
pop
inc
add
add
idiv
(bad)
call
sub
add
jnp
add
add
mov
add
sbb
add
(bad)
(bad)
call
or
jg
(bad)
inc
jnp
add
add
cli
inc
add
sub
(bad)
call
add
(bad)
(bad)
call
sub
add
push
and
(bad)
call
inc
add
add
idiv
(bad)
jmp
push
add
add
add
jnp
add
add
mov
add
sbb
add
add
(bad)
(bad)
inc
jnp
add
add
jnp
add
add
or
sub
add
push
and
(bad)
call
inc
add
add
idiv
(bad)
jmp
pop
or
cmp
(bad)
(bad)
call
inc
add
add
idiv
(bad)
jmp
add
fadd
add
pop
or
inc
sub
add
push
cmp
add
add
add
add
add
add
add
add
or
cmp
(bad)
(bad)
inc
and
add
pop
jge
add
add
cmp
jnp
add
add
jnp
add
add
jnp
add
add
jnp
add
add
jnp
add
add
push
sub
add
push
pop
or
test
(bad)
jmp
add
adc
or
pop
add
add
sub
es
pop
adc
add
sbb
add
add
(bad)
(bad)
call
sub
add
es
pop
sub
add
push
and
add
sbb
add
add
idiv
(bad)
jmp
sbb
sub
sbb
add
add
(bad)
(bad)
jmp
add
add
add
add
push
sub
add
sbb
add
add
add
pop
pop
and
lea
add
add
pop
and
mov
add
pop
inc
add
add
idiv
(bad)
(bad)
cmp
add
add
adc
inc
and
add
mov
add
adc
add
das
(bad)
(bad)
push
add
add
add
adc
add
push
add
add
add
add
add
sbb
add
add
add
push
add
add
add
(bad)
(bad)
call
add
mov
add
add
add
add
add
add
(bad)
push
add
add
add
add
add
jp
add
jmp
add
add
bound
add
in
add
add
sbb
loop
add
and
(bad)
call
inc
add
add
idiv
(bad)
jmp
or
add
add
inc
add
add
idiv
(bad)
inc
add
add
add
adc
cmp
(bad)
call
inc
add
add
idiv
(bad)
jmp
add
add
add
pop
pop
and
lea
add
add
pop
and
mov
add
idiv
(bad)
call
cmp
(bad)
(bad)
dec
adc
aas
into
(bad)
(bad)
call
inc
add
add
idiv
(bad)
call
or
icebp
(bad)
(bad)
inc
pop
pop
and
add
sbb
add
add
idiv
(bad)
call
sbb
inc
jnp
add
add
add
add
add
pop
or
sar
inc
jnp
add
add
pop
pop
and
lea
add
add
pop
and
inc
(bad)
(bad)
call
inc
add
add
idiv
(bad)
call
adc
xchg
(bad)
(bad)
inc
jnp
add
add
add
or
jnp
add
add
add
jnp
add
add
pop
sbb
imul
jmp
add
add
sbb
pop
(bad)
(bad)
dec
adc
add
add
adc
pop
or
dec
(bad)
(bad)
call
push
pop
cmp
add
add
inc
add
add
idiv
(bad)
jmp
cmps
es
sbb
das
(bad)
(bad)
call
push
push
aas
and
inc
add
add
idiv
(bad)
call
adc
push
(bad)
(bad)
inc
jnp
add
add
jnp
add
add
adc
(bad)
dec
add
(bad)
jg
add
and
inc
add
dec
add
adc
ds
add
sbb
add
add
(bad)
(bad)
call
push
cmp
std
(bad)
call
inc
add
add
idiv
(bad)
jmp
add
add
add
pop
pop
and
lea
add
add
pop
and
dec
(bad)
(bad)
call
inc
add
add
idiv
(bad)
inc
jnp
add
add
pop
pop
and
lea
add
add
pop
and
and
(bad)
call
inc
add
add
idiv
(bad)
call
or
(bad)
call
inc
add
add
idiv
(bad)
jmp
add
add
add
pop
pop
and
lea
add
add
pop
and
in
(bad)
call
inc
add
add
idiv
(bad)
call
pop
cmp
adc
add
add
add
out
add
and
add
pop
cmp
std
(bad)
inc
jnp
add
add
xchg
add
add
add
xchg
inc
add
(bad)
call
inc
add
add
idiv
(bad)
call
adc
repz
(bad)
inc
jnp
add
add
pop
pop
and
lea
add
add
pop
and
jb
(bad)
call
inc
add
add
idiv
(bad)
call
cmp
cld
(bad)
inc
jnp
add
add
sub
add
push
and
push
cmp
jnp
add
add
pop
pop
xchg
add
add
add
pop
pop
xchg
inc
xchg
(bad)
(bad)
call
inc
add
add
idiv
(bad)
call
movhps
cmp
call
inc
add
add
idiv
(bad)
jmp
add
add
add
add
add
pop
pop
pop
adc
add
add
add
add
or
push
cmp
(bad)
call
add
(bad)
(bad)
jmp
add
add
add
cli
jle
add
sub
add
push
and
or
sub
(bad)
inc
jnp
add
add
adc
pop
pop
pop
xchg
adc
inc
push
(bad)
(bad)
call
inc
add
add
idiv
(bad)
call
push
cmp
cld
(bad)
inc
sbb
pop
add
add
add
sbb
add
(bad)
(bad)
inc
jnp
add
add
pop
adc
loope
(bad)
inc
jnp
add
add
adc
pop
xchg
adc
inc
into
std
(bad)
call
add
(bad)
(bad)
call
inc
jnp
add
add
pop
pop
and
lea
add
add
pop
and
ds
(bad)
call
inc
add
add
idiv
(bad)
call
sbb
(bad)
sti
(bad)
inc
jnp
add
add
inc
inc
sub
adc
or
add
add
adc
add
push
pop
and
cmp
add
add
inc
add
add
idiv
(bad)
call
sub
add
es
jge
add
add
sbb
adc
add
add
idiv
(bad)
call
sbb
jmp
add
add
push
add
add
inc
add
add
idiv
(bad)
call
and
add
and
add
pop
jge
add
add
sbb
mov
jnp
add
add
jnp
add
add
and
adc
add
test
inc
add
add
idiv
(bad)
call
and
call
mov
add
pop
jge
add
add
cmp
and
add
pop
jge
add
add
jnp
add
add
jmp
aas
add
add
inc
add
add
idiv
(bad)
call
sub
add
push
and
add
sbb
add
add
(bad)
(bad)
jmp
add
add
add
jnp
add
add
or
add
add
jnp
add
add
inc
sub
push
adc
jnp
add
add
jnp
add
add
jnp
add
add
adc
call
adc
cmp
add
add
inc
add
add
idiv
(bad)
jmp
or
pop
or
call
inc
add
add
idiv
(bad)
jmp
add
mov
inc
add
add
idiv
(bad)
call
or
leave
add
add
pop
jge
add
add
sbb
add
sub
add
push
and
pop
and
(bad)
(bad)
call
inc
add
add
idiv
(bad)
call
or
add
sub
add
push
and
xchg
add
add
add
add
cmp
sbb
add
add
(bad)
(bad)
call
and
ins
push
sub
jnp
add
add
cli
inc
add
add
add
inc
add
add
idiv
(bad)
inc
sub
add
push
cmp
add
es
or
inc
add
add
add
jnp
add
add
jnp
add
add
pop
xchg
and
add
add
out
add
and
sub
add
add
(bad)
(bad)
jmp
pop
sbb
cmp
(bad)
(bad)
call
and
add
add
add
(bad)
(bad)
inc
add
add
std
(bad)
push
add
add
add
add
(bad)
(bad)
jmp
add
idiv
(bad)
call
(bad)
(bad)
jmp
(bad)
(bad)
push
(bad)
push
add
add
add
add
std
(bad)
call
add
add
add
add
add
add
add
add
add
(bad)
(bad)
jmp
(bad)
call
(bad)
(bad)
(bad)
fdivr
(bad)
dec
std
(bad)
jmp
add
add
(bad)
inc
add
mov
add
pop
std
(bad)
jmp
add
add
(bad)
dec
add
pop
adc
loop
add
and
(bad)
call
add
(bad)
(bad)
jmp
add
add
add
jnp
add
add
jnp
add
add
jnp
add
add
jnp
add
add
add
call
add
add
add
mov
add
loop
add
and
add
and
(bad)
call
idiv
(bad)
jmp
pop
pop
cmp
(bad)
(bad)
inc
jnp
add
add
add
add
add
add
add
add
aas
xlat
cld
(bad)
call
inc
add
add
idiv
(bad)
call
cmp
(bad)
(bad)
inc
and
add
pop
jge
add
add
jnp
add
add
aas
(bad)
std
(bad)
call
inc
add
add
idiv
(bad)
call
sbb
lahf
(bad)
(bad)
inc
push
jge
add
add
adc
xchg
(bad)
(bad)
inc
and
add
pop
jge
add
add
cmp
(bad)
inc
jnp
add
add
pop
and
jle
add
sbb
add
(bad)
(bad)
inc
or
fadd
add
and
(bad)
call
add
(bad)
(bad)
inc
jnp
add
add
cmp
sbb
add
add
idiv
(bad)
call
and
cmp
(bad)
(bad)
call
inc
add
add
idiv
(bad)
jmp
add
add
add
jnp
add
add
pop
push
pop
pop
sub
add
push
and
pop
cmp
std
(bad)
call
idiv
(bad)
jmp
or
jmp
(bad)
call
inc
add
add
idiv
(bad)
call
push
cmp
std
(bad)
inc
and
add
pop
jge
add
add
and
add
pop
jge
add
add
push
jge
add
add
push
cmp
jnp
add
add
test
(bad)
call
inc
add
add
idiv
(bad)
call
or
xchg
std
(bad)
call
sub
jnp
add
add
pop
std
(bad)
call
inc
add
add
idiv
(bad)
call
adc
inc
jnp
add
add
iret
(bad)
(bad)
call
inc
add
add
idiv
(bad)
call
or
pop
std
(bad)
inc
sub
add
add
(bad)
(bad)
call
push
cmp
(bad)
inc
jnp
add
add
popa
cld
(bad)
call
inc
add
add
idiv
(bad)
call
and
sub
add
inc
sub
jnp
add
add
push
add
add
test
idiv
(bad)
call
pop
sub
add
push
and
(bad)
call
inc
add
add
idiv
(bad)
jmp
add
jge
add
add
jae
(bad)
inc
jnp
add
add
pop
cld
(bad)
call
idiv
(bad)
inc
jnp
add
add
jnp
add
add
jnp
add
add
pop
xchg
and
add
add
out
add
and
cmp
mov
add
push
add
add
inc
add
add
idiv
(bad)
call
push
cmp
inc
add
add
idiv
(bad)
jmp
add
add
add
inc
jno
(bad)
call
inc
add
add
idiv
(bad)
call
sbb
cmp
(bad)
call
idiv
(bad)
jmp
pop
sub
add
adc
or
lds
add
cmp
add
sub
es
sub
add
push
and
add
and
inc
add
add
idiv
(bad)
call
sub
add
es
addr16
cmp
inc
add
add
idiv
(bad)
call
xchg
add
add
icebp
add
push
and
add
sbb
add
add
(bad)
(bad)
call
sub
inc
add
add
idiv
(bad)
jmp
add
pop
sub
add
add
add
jnp
add
add
add
add
or
pop
add
fld
add
and
sbb
inc
or
add
add
add
mov
(bad)
(bad)
inc
(bad)
(bad)
inc
add
add
add
add
sub
add
fild
add
sbb
iret
push
sub
add
adc
or
mov
add
sub
add
sub
es
sub
add
push
and
add
and
inc
add
add
idiv
(bad)
call
sub
add
es
push
add
sub
imul
sub
push
jge
add
add
and
or
inc
push
add
add
add
add
(bad)
(bad)
inc
add
add
(bad)
(bad)
inc
add
add
add
add
ret
es
sub
add
jge
add
add
sub
add
push
and
inc
add
add
idiv
(bad)
jmp
sub
add
adc
or
adc
add
add
add
sub
es
add
add
add
jnp
add
add
add
add
xor
add
add
add
add
add
add
push
add
push
add
or
add
xor
add
add
add
add
add
add
push
pop
sub
add
xor
add
add
add
add
add
add
push
push
sub
add
xor
add
add
add
add
push
add
add
add
or
add
add
xor
add
add
add
add
add
add
push
add
add
je
add
and
xor
add
add
add
add
add
add
push
add
add
outs
add
or
xor
add
add
add
add
add
add
push
add
outs
mov
add
and
adc
or
add
add
add
add
push
add
add
push
add
mov
add
sub
xor
add
add
add
add
add
add
push
add
add
mov
add
and
xor
add
add
add
add
push
add
add
push
and
add
xor
add
add
add
add
add
add
push
sub
es
add
add
add
sub
add
push
and
add
sub
add
push
sub
add
adc
or
cmp
add
sub
add
push
add
add
add
and
add
or
pop
jge
add
add
add
pushf
add
add
add
and
add
or
pop
jge
add
add
add
arpl
pushf
sub
adc
or
add
add
add
add
push
add
jnp
add
add
jnp
add
add
sub
add
add
add
pop
jge
add
add
add
xor
add
add
add
add
add
add
push
add
add
add
add
xor
pop
add
add
add
adc
add
push
pop
sub
add
push
and
add
sbb
add
add
(bad)
(bad)
call
sub
add
es
push
cmp
inc
add
add
idiv
(bad)
jmp
add
add
add
and
add
or
pop
jge
add
add
add
add
add
pushf
sbb
jle
add
add
jge
add
add
cmp
add
add
add
add
xor
sbb
add
add
(bad)
(bad)
call
push
and
inc
add
add
idiv
(bad)
jmp
add
jge
add
add
sub
add
add
add
xor
add
idiv
(bad)
jmp
add
sbb
add
add
add
and
add
or
pop
jge
add
add
add
add
add
rcr
inc
or
add
data16
(bad)
jmp
(bad)
push
(bad)
(bad)
call
(bad)
(bad)
call
(bad)
push
(bad)
inc
add
add
aam
add
xor
add
add
adc
add
push
push
cmp
add
add
add
add
add
add
pop
pop
bound
xchg
add
add
sub
add
push
and
inc
add
add
idiv
(bad)
call
sub
add
es
add
add
and
add
or
pop
jge
add
add
add
add
add
rcr
xchg
add
add
and
add
or
pop
jge
add
add
add
add
add
pushf
sub
push
or
inc
or
add
sub
add
sbb
add
mov
(bad)
jmp
add
add
add
add
(bad)
(bad)
call
(bad)
call
mov
sbb
hlt
add
push
and
inc
add
add
idiv
(bad)
jmp
mov
add
add
adc
add
add
sub
add
add
adc
cwde
add
add
or
xchg
add
add
add
adc
push
sbb
add
add
(bad)
(bad)
jmp
hlt
add
push
and
add
and
inc
add
add
idiv
(bad)
jmp
sbb
push
and
(bad)
call
inc
add
add
idiv
(bad)
jmp
add
add
pop
jge
add
add
cmp
(bad)
(bad)
jmp
add
xor
add
add
add
add
add
add
push
add
add
add
inc
sub
add
xor
add
add
push
sbb
jge
add
add
or
dec
add
jge
add
add
sub
add
add
add
jnp
add
add
ds
add
add
inc
add
add
idiv
(bad)
call
sub
add
es
sub
add
add
add
jnp
add
add
add
sub
add
sub
add
add
(bad)
(bad)
cmp
add
scas
(bad)
(bad)
push
(bad)
call
(bad)
(bad)
inc
add
add
add
add
add
add
test
add
jbe
(bad)
jmp
push
sub
add
push
and
inc
add
add
idiv
(bad)
jmp
add
add
fs
add
add
and
add
pop
jge
add
add
sub
add
jnp
add
add
dec
add
sub
add
push
and
add
and
inc
add
add
idiv
(bad)
jmp
sbb
pop
(bad)
(bad)
inc
jnp
add
add
aas
or
inc
add
add
idiv
(bad)
call
or
hlt
add
push
and
(bad)
call
inc
add
add
idiv
(bad)
(bad)
cmp
(bad)
(bad)
inc
and
add
pop
jge
add
add
or
adc
(bad)
jmp
inc
add
add
add
jnp
add
add
add
sub
add
push
sbb
idiv
(bad)
inc
jnp
add
add
and
add
or
pop
jge
add
add
add
add
add
pushf
pop
or
sar
(bad)
inc
or
push
add
add
add
add
add
push
pop
sub
add
xor
add
add
add
add
add
add
push
push
sub
add
xor
add
add
add
add
push
add
add
add
or
add
add
xor
add
add
add
add
add
add
push
add
push
add
or
add
xor
add
add
add
add
add
add
push
sub
es
add
adc
add
sub
adc
or
adc
add
add
add
sub
es
sub
es
add
push
sub
add
push
sub
add
adc
or
and
add
add
add
sub
es
add
and
add
add
outs
jne
add
add
push
arpl
inc
add
pop
shr
std
add
push
sub
adc
or
push
add
add
add
add
add
push
add
sub
add
push
add
pop
adc
stc
add
push
sub
add
xor
add
add
add
add
add
add
push
add
add
add
and
add
push
and
sub
xor
add
add
add
add
add
add
push
add
sti
add
push
and
add
push
and
pusha
sub
add
adc
or
or
add
add
add
sub
es
add
outs
jne
add
sub
xor
add
add
add
add
add
add
push
pop
sub
add
xor
add
add
add
add
add
add
push
push
sub
add
xor
add
add
add
add
push
add
add
or
add
xor
add
add
add
add
push
add
add
add
add
sub
add
push
add
add
sub
add
sub
add
add
sub
add
add
add
push
add
add
sbb
push
add
add
sub
add
add
add
push
add
sub
add
add
jbe
add
sub
add
add
add
sub
add
push
add
sbb
push
add
add
sub
add
sub
add
sub
add
push
add
sub
add
add
sub
add
sub
add
sub
add
add
add
push
add
add
sub
add
add
add
push
add
add
add
push
add
add
add
and
add
js
add
sub
add
push
add
sub
add
add
sub
add
sub
add
adc
add
sub
add
sub
add
sub
add
push
add
add
add
push
add
add
add
push
add
pop
add
sbb
push
add
add
sub
add
add
add
push
add
add
sub
add
sub
add
jge
adc
pop
push
mov
or
mov
mov
and
retf
rcl
dec
mov
or
cmp
add
ins
dec
mov
xchg
xor
ror
(bad)
or
rol
fsubr
aad
mov
jmp
sbb
and
pushf
test
fdiv
and
push
ins
cmps
pop
pop
mov
lea
scas
jmp
push
cmp
dec
mov
call
arpl
mov
scas
int3
hlt
mov
jmp
gs
aaa
jp
stc
stos
jns
js
dec
out
mov
retf
ja
dec
jle
mov
ja
sbb
inc
pop
std
movs
mov
js
sbb
dec
mov
fild
pop
je
push
and
pop
xor
sbb
icebp
fs
cmps
xchg
cmp
xor
jb
or
or
push
pop
sub
jp
add
jle
push
fnsave
out
(bad)
jns
jmp
in
lahf
jb
cli
and
imul
inc
fwait
ret
fisttp
jl
jnp
aam
(bad)
jl
sbb
mov
repnz
popf
test
mov
fst
sbb
dec
outs
inc
jle
les
mov
add
lods
xor
push
ja
pop
cmp
jne
sti
cmp
push
mov
jge
fimul
push
popf
cwde
add
addr16
call
fisttp
outs
(bad)
bound
ret
in
mov
add
jl
loope
xor
hlt
sbb
pushf
inc
cmp
inc
push
jg
out
xor
rol
xor
ds
pop
sub
add
jmp
mov
sub
adc
ss
pop
shr
or
add
xor
pop
fadd
(bad)
and
xchg
push
cmp
nop
lock
loope
test
jmp
mov
out
sub
jge
mov
scas
inc
mov
inc
mov
sub
je
ja
pop
push
xchg
inc
into
jae
pop
mov
and
adc
aam
repnz
fistp
xor
or
(bad)
js
push
mov
ret
mov
ror
push
sub
pop
mov
cmp
xchg
mov
int3
fmul
inc
int3
mov
cdq
xchg
pushf
adc
icebp
mov
je
jo
aaa
add
ins
dec
imul
int
jbe
sti
std
jl
ins
sar
jne
inc
cmc
dec
and
shr
xor
pop
inc
and
jmp
pop
fild
out
in
mov
call
push
and
and
shr
cli
sbb
into
and
popf
in
dec
ins
xor
call
(bad)
cmps
add
les
sbb
adc
sub
sub
mov
call
adc
ret
sbb
fisttp
jns
imul
cmp
bound
enter
inc
jnp
xchg
and
pop
shl
fcmovbe
lds
pop
sub
sahf
test
fdivr
rcr
jns
ror
mov
icebp
call
mov
jmp
(bad)
add
jle
mov
stos
mov
les
out
ins
movs
add
mov
fldcw
xchg
ja
stos
adc
fcomp
inc
loopne
adc
mov
jb
mov
cmp
or
jne
int3
mov
push
mov
xchg
jle
retf
movhps
mov
shr
jl
push
sbb
inc
ins
pop
cld
jl
mov
dec
jbe
dec
hlt
ins
mov
cli
inc
lahf
cld
adc
or
xchg
jo
fadd
icebp
into
mov
les
pop
cmp
dec
pusha
mov
inc
pusha
pop
sbb
gs
or
mov
add
push
add
pop
jg
push
jo
call
cmp
inc
mov
aad
cmp
jmp
push
stos
jbe
ss
ret
leave
pop
pop
call
cmp
mov
daa
adc
pop
push
push
cmp
jbe
inc
cmps
cmp
aaa
std
dec
add
mov
sar
movs
sbb
jmp
cmp
push
call
mov
adc
rol
stos
dec
scas
loope
mov
or
ror
sub
(bad)
fisttp
mov
pop
fcomp
les
clc
push
fstp
inc
out
(bad)
adc
push
mov
push
xchg
enter
inc
and
aas
dec
push
arpl
(bad)
pop
lock
cmp
mov
push
jecxz
out
loopne
popa
call
and
cvtpi2ps
mov
adc
pop
sti
mov
test
gs
pop
dec
pop
gs
add
inc
scas
pop
and
pop
mov
retf
sub
ficomp
jne
(bad)
xchg
clc
jb
mov
ror
cmp
pop
in
rcl
mov
dec
aad
ins
scas
sub
mov
dec
lea
retf
jecxz
or
adc
(bad)
xor
mov
mov
cmp
out
mov
push
mov
dec
push
and
out
dec
loope
xlat
cmp
add
pop
pop
push
aaa
jb
cmp
arpl
add
fld
pop
(bad)
push
adc
jg
loopne
sar
mov
retf
add
fiadd
mov
push
sahf
xor
pop
lock
into
call
out
mov
repz
mov
cmps
aam
push
in
cld
add
mov
mov
fstp
cmp
and
add
test
mov
xor
jge
aas
ficom
xlat
in
xlat
ror
or
dec
loopne
hlt
pop
loop
mov
in
add
sub
data16
xor
lods
addr16
fstp
loope
fst
mov
leave
out
mov
aam
dec
pop
xchg
stos
outs
out
ins
les
(bad)
sbb
mov
xor
fdiv
push
lods
outs
int
cmc
push
frstor
and
sbb
or
mov
inc
sub
push
mov
call
mov
outs
xchg
enter
jle
or
dec
xchg
pop
out
dec
repnz
add
add
cmc
add
ds
pop
add
push
iret
jnp
scas
cmp
jmp
repz
(bad)
jp
sti
das
shl
(bad)
sbb
or
cmps
inc
xchg
cmp
ins
out
(bad)
cmp
(bad)
inc
jp
mov
push
push
inc
pop
jnp
and
leave
sbb
cdq
in
cmp
mov
(bad)
loop
es
add
jg
jne
xor
test
mov
dec
mov
xor
sar
aaa
sub
pop
rcl
inc
dec
xchg
scas
cmp
pop
cdq
lods
clc
and
xor
(bad)
xor
mov
push
ins
mov
mov
lock
ins
push
in
pop
repz
ds
cdq
out
push
cwde
xchg
pop
xor
jmp
das
add
xchg
dec
dec
cmp
fistp
(bad)
push
dec
add
shl
push
mov
dec
les
add
adc
pop
jnp
add
push
mov
mov
fsubr
mov
push
data16
outs
xchg
das
jo
inc
and
icebp
scas
hlt
sbb
mov
xor
xlat
push
xor
inc
fs
adc
jle
mov
mov
setne
and
pusha
xor
stc
fcom
xor
jg
push
add
cs
rol
cmps
sub
je
scas
shl
sub
push
xchg
add
js
inc
ret
cmc
shr
push
sbb
aad
dec
shl
sub
mov
xchg
or
inc
mov
add
outs
in
js
leave
sahf
mov
rcr
adc
fld
jae
mov
pop
nop
jne
(bad)
aad
pop
mov
cmp
cmp
das
outs
adc
movs
enter
xor
into
in
inc
aas
ror
mov
fistp
mov
xchg
mov
repz
imul
fcomi
mov
mov
pop
pop
inc
dec
bound
cmp
loope
mov
xor
mov
push
call
push
add
fist
jne
and
inc
out
mov
sbb
outs
jnp
inc
mov
(bad)
mov
call
lds
outs
not
je
ds
sub
xchg
dec
or
add
and
sbb
push
imul
cli
(bad)
fdiv
test
repz
pop
inc
push
push
push
xchg
sub
pop
pushf
adc
ins
loop
or
lahf
jmp
mov
and
xor
xor
popf
mov
(bad)
jb
sbb
pop
or
cmp
jnp
mov
icebp
pop
scas
jg
mov
aam
in
sub
stc
(bad)
out
cmp
aas
pop
ret
sbb
rcl
fsub
sub
push
push
mov
jmp
cs
xor
inc
(bad)
adc
js
outs
cli
xchg
jo
mov
sahf
fnsave
or
adc
int
arpl
icebp
push
cmc
movs
adc
retf
outs
icebp
stos
dec
xchg
jmp
cmp
rol
push
mov
inc
fdivr
cwde
push
movs
push
xchg
lds
aas
scas
jp
scas
mov
and
cs
or
lahf
mov
cmps
add
and
mov
add
aad
jne
test
jmp
(bad)
cdq
push
cmps
add
pop
pop
inc
xchg
xchg
xor
jp
adc
lods
out
(bad)
retf
loope
imul
push
(bad)
xchg
pop
stos
push
fld
loopne
jge
inc
fsub
and
adc
jnp
jge
and
dec
ror
lods
and
jmp
out
mov
stos
clc
fbstp
adc
sub
push
fcmovnbe
or
loope
pop
pop
shl
mov
in
xor
jg
out
repnz
out
mov
jbe
mov
dec
in
push
lahf
pop
(bad)
psrlq
dec
or
shr
jo
and
push
mov
jecxz
jge
sbb
cdq
adc
xor
sbb
pop
and
jo
xchg
int3
(bad)
aas
fnstsw
in
iret
loop
mov
enter
(bad)
aam
addr16
lock
or
mov
dec
mov
mov
push
cmp
(bad)
mul
or
scas
inc
clc
sahf
stos
cmp
sbb
jb
ret
mov
fidivr
mov
test
aaa
scas
xor
lods
xchg
sub
in
mov
sbb
jnp
cmp
pop
push
inc
cmp
fidivr
pusha
dec
inc
not
and
dec
mov
xchg
mov
ss
jo
sub
inc
dec
clc
jnp
or
inc
push
test
mov
iret
adc
sbb
gs
cli
mov
js
(bad)
mov
mov
movs
xlat
sti
out
mov
inc
sbb
aas
je
inc
(bad)
movs
pop
pop
lods
into
repz
adc
xchg
inc
pop
add
ja
dec
ret
xchg
mov
mov
das
in
mov
mov
aad
inc
(bad)
xchg
pop
pop
(bad)
icebp
push
mov
call
cmps
jp
push
mov
fcom
repz
adc
jae
sub
xchg
aas
daa
mov
aad
and
repnz
fdivr
fbld
test
ret
jge
int3
add
sbb
inc
ret
mov
cmps
cmp
xchg
inc
out
or
aas
pop
push
call
(bad)
in
xlat
mov
xor
mov
push
or
or
and
loop
rcl
and
cmps
mov
ins
sbb
mov
les
(bad)
retf
inc
test
jb
pop
pusha
dec
lds
movs
mov
jae
sub
or
in
scas
mov
fist
into
cwde
jmp
cmp
sbb
push
(bad)
es
dec
pop
pop
and
push
pushf
test
push
push
xchg
enter
or
push
push
xchg
dec
or
pop
push
imul
ret
dec
and
jmp
xor
hlt
lods
sub
sar
push
icebp
dec
jb
jmp
sub
gs
mov
jp
xor
dec
dec
add
imul
cmp
int
div
sbb
call
test
daa
push
fxam
icebp
mov
mov
cwde
cmps
lahf
imul
push
sub
aad
loop
jno
or
cmp
pusha
xchg
ss
ret
dec
cwde
retf
in
jnp
dec
jecxz
icebp
mov
pusha
rcl
fs
das
mov
pop
push
push
into
int3
fs
pop
add
push
je
dec
mov
cli
dec
push
(bad)
je
stc
movs
adc
xor
mov
pop
shr
push
jmp
sub
lahf
cs
dec
mov
sar
sbb
add
mul
outs
das
mov
loopne
adc
iret
movs
cmp
dec
cmc
mov
outs
lods
xor
adc
ret
int
out
sub
cmp
xor
inc
adc
out
outs
arpl
stc
and
ret
or
jne
test
adc
mov
add
clc
retf
xchg
sti
test
cmp
jmp
(bad)
lods
in
and
out
dec
mov
mov
dec
mov
in
fdiv
adc
pop
jge
xchg
pop
push
adc
lahf
pop
cmp
adc
or
mov
sbb
adc
aam
add
loope
adc
out
call
lods
mov
pop
sbb
jecxz
and
cmps
add
inc
fldenv
xlat
(bad)
scas
mov
in
sbb
fld
(bad)
fmul
inc
xchg
fucomi
sbb
jecxz
push
xlat
mov
ret
int3
xchg
jmp
push
mov
dec
fwait
leave
ins
inc
dec
adc
mov
mov
xchg
sub
xor
jmp
cmp
xchg
pop
frstor
sti
std
pop
mov
sbb
mov
test
cmp
out
push
jb
scas
pop
mov
or
iret
add
sahf
fs
and
addr16
sbb
aad
stos
add
mov
xchg
(bad)
sbb
push
pop
mov
xchg
bound
es
push
call
push
std
not
cli
idiv
and
stc
repz
cmps
out
sub
dec
cmp
shr
jns
neg
in
xchg
scas
jl
or
addr16
pop
or
sbb
cli
stos
test
cld
adc
repz
jl
(bad)
ja
sub
sub
pop
adc
adc
sbb
push
outs
add
fcomp
sub
push
sub
sbb
sahf
outs
push
cmp
cli
(bad)
mov
adc
fistp
in
adc
ja
sub
pop
aas
fs
add
mov
in
or
and
mov
js
(bad)
or
mov
dec
in
add
out
dec
push
ror
in
push
jne
sbb
dec
mov
inc
data16
pop
mov
fs
xor
or
ficom
mov
push
mov
call
push
mov
mov
mov
pop
imul
cmp
(bad)
jl
cld
aam
scas
jo
sbb
in
jo
rcl
pushf
dec
sub
or
pop
dec
dec
(bad)
inc
sub
daa
imul
(bad)
mov
push
jmp
mov
cmps
fisttp
sbb
(bad)
imul
sub
out
xchg
test
add
pop
mov
ds
cmp
(bad)
out
jecxz
cmp
ds
sbb
es
cmp
enter
dec
data16
(bad)
dec
pusha
pop
ins
mov
repz
dec
mov
pop
(bad)
sti
cld
mov
sahf
and
xor
dec
add
sub
sbb
sub
xchg
outs
push
cdq
lds
xor
xchg
int
mov
leave
(bad)
fmul
sbb
fldcw
iret
aaa
fcomp
jb
into
in
fs
dec
leave
jge
imul
dec
scas
sbb
jbe
loope
and
ins
inc
cmp
clc
in
or
aas
(bad)
imul
hlt
data16
dec
aas
std
lahf
adc
ror
jns
fnstcw
lods
jnp
popf
sub
aaa
mov
iret
push
cmp
jmp
fisub
lock
push
xlat
sub
imul
cmp
jmp
adc
xchg
lock
or
jne
lods
mov
jge
jo
xchg
mov
pop
jmp
fist
dec
fidivr
ret
inc
xchg
xchg
fstp
pushf
pop
(bad)
out
add
loop
pop
cs
call
jb
or
inc
les
xchg
scas
fmul
adc
test
out
les
xor
xchg
push
and
cli
shl
ror
jo
jge
cld
add
xchg
mov
retf
inc
or
lds
and
fdiv
out
xor
jmp
mov
aad
inc
fdiv
push
je
xchg
mov
pusha
push
loope
push
rcl
pop
push
lea
stos
or
sbb
popa
push
fisub
dec
mov
test
mov
cmps
lods
aaa
pop
or
ret
cdq
je
(bad)
js
(bad)
cmp
jmp
repnz
out
hlt
paddusw
dec
or
mov
mov
test
sahf
call
cmp
push
nop
jp
cmp
add
cli
retf
and
outs
ins
lods
add
mov
xor
das
push
xor
jmp
into
push
push
repz
sar
adc
mov
cmp
test
jne
sbb
(bad)
xor
in
mov
sbb
int3
stos
outs
iret
jmp
or
stos
loopne
or
adc
ret
sub
xchg
iret
jle
in
dec
sbb
test
jnp
xor
mov
(bad)
dec
popa
jge
xchg
retf
test
faddp
test
sti
loopne
es
xor
pop
xlat
(bad)
call
mov
add
pop
ins
cmp
or
pop
or
cmp
mov
inc
cmp
adc
jecxz
inc
mov
xor
sbb
push
dec
sub
jmp
hlt
es
popa
push
dec
pop
mov
ret
adc
push
sub
mov
jbe
cmc
sub
mov
test
mov
cmp
push
sub
push
jmp
int
push
mov
fild
sbb
je
xor
jnp
popa
enter
adc
(bad)
sti
xchg
(bad)
fwait
mov
jmp
xor
jbe
mov
xchg
or
scas
sbb
jno
add
and
cmp
in
jge
sbb
stc
adc
jmp
loopne
jmp
ret
enter
xchg
jle
out
xor
pop
or
das
int3
leave
mov
mov
xchg
cwde
jbe
mov
imul
or
(bad)
lock
mov
add
gs
icebp
out
inc
mov
ror
sub
mov
or
sbb
fs
test
in
ss
(bad)
in
inc
mov
xchg
es
inc
fcom
lahf
push
outs
ud1
pop
outs
nop
mov
test
jge
mov
xchg
xor
repz
xlat
cdq
fs
repz
in
lock
sar
cli
sub
enter
movs
jecxz
inc
iret
and
add
push
lds
ds
adc
push
or
or
jnp
xchg
sbb
(bad)
int
inc
or
(bad)
and
cs
cmp
fnstcw
dec
es
mov
gs
push
mov
mov
mov
stos
jns
das
popa
or
mov
fwait
inc
jle
pop
fnstsw
cpuid
sbb
xchg
in
push
xor
imul
sub
xchg
aas
ret
call
inc
scas
int3
sub
mov
leave
pop
and
adc
cmps
xchg
test
pop
xchg
adc
add
fwait
or
cmp
pop
adc
xor
mov
jae
or
dec
mov
ja
push
punpcklbw
mov
inc
leave
or
mov
mov
inc
sahf
(bad)
syscall
retf
and
dec
and
ret
clc
push
adc
pop
std
push
movs
sub
dec
loope
push
data16
(bad)
cmp
call
shr
scas
(bad)
or
mov
pushf
sbb
div
movs
loop
push
mov
push
mov
push
loopne
scas
cmp
(bad)
sti
in
retf
inc
sub
mov
jae
adc
xor
fild
pop
xchg
adc
dec
outs
dec
(bad)
mov
xchg
jge
stos
push
js
mov
and
sub
xchg
xchg
adc
pop
and
add
push
ins
fsub
into
das
retf
cmp
jmp
push
fidiv
lahf
jb
out
sbb
xchg
adc
fimul
loopne
xor
pop
mov
(bad)
push
ja
jmp
cld
sub
add
shl
or
movs
push
(bad)
int
adc
cmp
pop
jecxz
ins
das
mov
mov
repz
jae
leave
push
out
lds
adc
xchg
retf
xchg
push
jmp
push
and
inc
out
adc
push
vandnpd
ins
inc
cmp
sub
neg
adc
mov
dec
in
iret
rcr
data16
enter
adc
jo
call
retf
(bad)
fsubr
cmc
push
xor
sti
jg
push
out
mov
dec
out
mov
or
imul
or
sbb
pop
nop
jae
push
add
push
cmp
pop
push
mov
pop
xchg
scas
and
and
lods
movs
test
pop
or
xor
pop
mul
and
bound
ret
xchg
lahf
push
fbld
sbb
out
idiv
outs
pop
jbe
sbb
icebp
jmp
pop
mov
popf
jnp
mov
ds
and
in
jl
mov
call
in
xor
call
xor
in
inc
rcr
xchg
add
std
jmp
adc
adc
mov
test
pop
and
aas
inc
jae
in
mov
mov
push
ins
mov
push
nop
das
or
cmp
jne
sbb
push
(bad)
iret
push
or
test
in
adc
dec
xchg
aas
inc
call
pop
aam
jns
add
sbb
outs
jb
fsubr
ins
retf
loope
cmps
loop
rcr
(bad)
fisubr
mov
ror
pop
fsubr
add
test
ret
or
in
(bad)
(bad)
lods
jg
add
mov
ins
aaa
cmp
xchg
mov
outs
test
push
xchg
ret
adc
jns
stc
das
add
(bad)
sar
jns
xchg
or
fld
test
ret
fcmovnbe
inc
in
rcr
cdq
ret
cdq
dec
dec
dec
pop
cmp
and
ins
add
sub
aaa
or
and
call
sbb
cld
out
aam
sbb
dec
cld
jnp
push
or
pop
ror
dec
lds
je
out
dec
mov
push
std
ds
data16
push
or
aam
pop
stos
mov
in
call
(bad)
xchg
cmp
push
or
fs
(bad)
cli
dec
sbb
pop
ret
mov
push
cmp
iret
inc
cwde
push
mov
jne
in
fs
and
push
mov
or
push
mov
gs
pop
or
movzx
(bad)
frstor
loopne
push
mov
and
call
xchg
sbb
and
pop
(bad)
and
inc
into
push
xor
push
sub
jge
fsubr
push
mov
clc
sbb
jmp
pop
aaa
ficom
jmp
fwait
ins
repz
mov
jg
jno
push
pop
scas
adc
jno
retf
out
xor
hlt
push
jp
scas
(bad)
mov
add
cmp
test
push
ss
ins
lods
jecxz
add
mov
arpl
es
cli
or
and
or
push
or
mov
ficom
xor
shl
es
pop
scas
and
mov
mov
sbb
push
sbb
dec
push
in
(bad)
mov
pop
lods
inc
lods
dec
ret
out
pushf
mov
pop
jnp
int
ins
push
ret
(bad)
cmp
out
xor
pop
cld
mov
cld
jp
xchg
xor
jno
ss
or
mov
jae
mov
mov
push
xor
ja
cwde
jle
mov
cmc
imul
cmp
retf
clc
cmps
sub
cmp
hlt
add
inc
xchg
pop
push
cs
dec
xlat
sbb
(bad)
js
pusha
in
mov
sub
jecxz
and
dec
outs
outs
lds
test
adc
mov
and
rcl
outs
or
inc
sahf
pop
push
shl
pop
xchg
xchg
lods
(bad)
cmp
jo
shl
retf
imul
push
push
in
pop
mov
xchg
addr16
gs
cli
dec
sbb
push
mov
fwait
pop
xor
and
mov
or
xor
lds
sbb
(bad)
fdiv
sbb
pop
dec
push
adc
fs
push
stos
ins
repnz
(bad)
pop
cs
stc
pop
fimul
fsubp
or
mov
clc
sub
loop
push
mov
push
das
call
rcl
push
xor
jae
test
(bad)
das
clc
push
int
xor
push
inc
xchg
imul
les
ss
nop
mov
shl
retf
jno
xchg
mov
adc
xchg
jecxz
jg
ja
shl
pop
fidivr
aam
popa
adc
les
push
inc
inc
sub
jge
pop
mov
xor
popa
iret
jle
and
pop
mov
pop
jmp
sbb
fwait
stos
cs
pop
and
ficom
inc
push
cmps
jb
repnz
or
pop
in
xchg
or
adc
sbb
mov
ror
jbe
pushf
xchg
add
(bad)
ss
jecxz
rol
xor
test
mov
ins
lds
jo
mov
ja
jl
sub
mov
dec
xchg
(bad)
adc
ds
add
sti
je
imul
mov
jmp
mov
mov
fucom
cmp
ret
lea
pushf
add
shl
cdq
popf
add
adc
mov
sar
mov
xchg
loop
add
cmp
pop
movs
not
scas
dec
push
cmp
xor
loop
leave
popa
sahf
mov
pop
lock
mov
repnz
ins
cmp
aam
int
(bad)
fmul
test
hlt
sub
ror
movs
pop
ds
xor
data16
in
dec
push
loope
dec
fidiv
sub
add
push
out
sub
adc
jmp
xor
shl
or
sub
pop
push
mov
xor
dec
mov
call
mov
repz
sti
scas
cmp
stos
mov
add
xor
cmp
xchg
cdq
sub
(bad)
jmp
inc
(bad)
lea
mov
sbb
call
call
or
cbw
les
lock
mov
rol
arpl
jb
(bad)
ret
cmc
fimul
mov
nop
nop
clc
(bad)
jb
aad
repz
push
mov
or
enter
fpatan
xor
pusha
push
mov
ins
pop
dec
inc
test
jnp
stc
clc
imul
mov
xor
and
mov
jno
(bad)
fidiv
mov
fiadd
pop
jae
cmp
dec
cmps
mov
sbb
or
sub
(bad)
cmps
(bad)
fcomp
dec
dec
inc
push
and
adc
push
dec
nop
push
push
sbb
(bad)
xor
ins
nop
sub
daa
adc
cmp
sub
fdiv
lods
fnstcw
sbb
data16
push
mov
cmp
push
sub
dec
push
mov
push
mov
ins
gs
xor
push
sbb
mov
xchg
stos
dec
stc
xchg
aas
in
sbb
in
popf
xchg
call
ins
mov
sbb
and
(bad)
std
mov
lahf
pop
xchg
add
prefetch
or
sbb
aad
arpl
and
adc
mov
xor
repnz
sub
(bad)
repz
call
jecxz
and
ret
int3
xor
push
inc
and
cmc
(bad)
ficomp
pop
jp
sbb
push
xchg
icebp
mov
aas
int
test
inc
inc
xor
xchg
and
cdq
jnp
xor
pop
mov
push
imul
push
xchg
push
jmp
jmp
push
mov
cmp
sub
cmp
fwait
pop
xor
pop
mov
fst
push
jmp
jg
add
enter
adc
pusha
jecxz
mov
adc
jl
lahf
fldenv
cmps
aam
iret
xchg
(bad)
jns
push
sub
fiadd
mov
leave
dec
(bad)
aad
lods
rcl
aam
scas
int3
cmps
test
call
aaa
pop
xor
fst
jge
popf
je
and
add
dec
(bad)
mov
adc
xor
or
and
push
stos
ins
(bad)
pop
mov
test
xor
pop
mov
xor
popf
mov
scas
test
lods
xor
push
rol
cmps
push
imul
fist
sti
lods
cli
jp
clc
xor
xchg
aaa
mov
mov
loop
dec
scas
adc
enter
and
xlat
xchg
sub
and
into
repz
jmp
adc
(bad)
xchg
lds
mov
(bad)
movs
lock
sti
call
(bad)
cdq
pop
clc
jnp
push
test
and
xor
sub
hlt
frstor
cmps
(bad)
sti
int
sub
enter
jp
lahf
sbb
in
pop
xchg
and
test
sub
das
cmp
jg
(bad)
(bad)
mov
out
movs
jmp
push
popa
dec
neg
(bad)
lock
xchg
lods
mov
push
xchg
pop
mov
(bad)
jae
leave
out
push
movs
mov
pushf
jmp
not
lahf
rol
pop
mov
inc
(bad)
push
fs
mov
mov
sub
and
xchg
imul
cli
add
call
pop
sbb
ret
jge
lods
xchg
adc
stos
inc
xchg
jl
or
ss
inc
clc
movs
fwait
cdq
shl
arpl
mov
cmp
dec
xor
xchg
dec
dec
fcom
out
fild
into
lock
jo
or
jge
adc
mov
(bad)
dec
cli
test
jb
leave
mov
adc
bound
gs
add
repz
cmp
ins
inc
push
add
scas
fst
xchg
pop
jne
call
add
(bad)
mov
adc
in
jmp
cli
imul
js
jle
out
mov
adc
cmps
or
stos
jo
push
mov
sbb
jmp
push
cmp
ret
pop
add
loopne
mov
sub
in
cli
pop
sub
enter
sub
xchg
repnz
mov
sub
adc
les
les
std
cli
inc
mov
or
daa
cmp
xchg
fimul
inc
mov
inc
(bad)
mul
cdq
add
xchg
out
or
inc
fcmovnu
xchg
inc
test
cmps
sub
aam
push
jg
cmp
xchg
xchg
lds
add
hlt
fwait
add
mov
mov
jmp
or
or
xor
push
int3
fadd
pushf
adc
ret
or
enter
mov
bsr
sbb
aaa
jl
dec
es
vmovaps
popa
fcomp
rol
mov
xchg
dec
call
out
mov
jl
popa
dec
lock
push
fisub
(bad)
and
stos
add
or
movs
ss
popa
xor
div
push
imul
je
and
or
and
xor
int
dec
mov
cmps
jp
mov
add
pop
cmp
push
out
das
(bad)
std
js
jb
push
(bad)
aam
cld
push
sbb
push
sbb
shl
pop
loope
cmp
xchg
inc
scas
lods
xchg
jle
fucomip
pop
push
sbb
and
div
sbb
or
or
imul
aam
adc
fs
jge
ins
jmp
loop
push
ret
loop
pop
shl
pop
outs
jo
add
pop
sbb
xchg
pop
movs
cmps
inc
lock
call
repnz
adc
test
and
push
sub
mov
neg
pop
sub
cmps
hlt
inc
sar
nop
mov
shl
cmp
add
into
add
mov
(bad)
push
xchg
add
call
add
xchg
adc
xchg
adc
ja
ror
jp
out
jl
jno
lods
add
sub
jno
sar
add
xchg
stos
nop
mov
inc
or
enter
int
mov
xor
dec
mov
es
das
int3
add
retf
jno
jg
add
pop
push
fsub
jae
clc
mov
cmp
cmps
mov
test
push
cmp
cmps
cmp
call
movs
stc
sbb
sbb
xchg
jne
cmp
movs
pop
sub
mov
mov
xchg
test
lock
xchg
retf
mov
cmc
inc
and
pop
inc
sbb
mov
fcomp
xlat
jb
imul
mov
inc
xor
not
shl
sar
add
mov
fs
dec
mov
aaa
call
push
jb
jl
xchg
jne
push
aam
sub
cs
int
fwait
lds
(bad)
repnz
cmps
jp
mov
adc
out
jp
push
mov
ja
fcomi
and
jg
push
stos
sub
jmp
(bad)
and
(bad)
inc
into
add
ins
out
add
scas
sub
cs
bound
push
ret
out
stos
jmp
adc
mov
cld
push
mov
dec
popa
and
jge
pop
mov
mov
adc
cmp
hlt
cld
ins
cmp
fdiv
fwait
xor
js
pop
repnz
ret
pop
pop
jne
push
jno
fwait
or
gs
das
mov
or
mov
add
std
(bad)
jmp
scas
sar
pop
lahf
cmp
ds
mov
leave
add
pushf
add
retf
aaa
gs
push
jle
push
mov
hlt
push
sbb
adc
movs
cdq
inc
(bad)
xor
mov
xor
push
into
stc
mov
and
dec
lds
gs
into
cli
adc
mov
cs
cdq
sahf
mov
jg
cwde
les
mul
(bad)
les
aaa
jge
sbb
mov
test
fmulp
loopne
sti
outs
cmps
pop
push
mov
shl
sbb
mov
and
std
sbb
pop
mov
pop
mov
inc
pop
dec
dec
fist
cld
sub
mov
or
jmp
pop
xchg
enter
sbb
push
(bad)
push
call
lods
dec
xchg
push
int3
jbe
add
ss
push
addr16
cmp
sub
je
jo
inc
jb
jae
shr
adc
mov
outs
enter
add
sbb
fstp
dec
imul
jo
xchg
std
mov
mov
pop
mov
not
sbb
mov
retf
in
test
push
repnz
jae
icebp
jecxz
jp
push
clc
int3
movs
fild
mov
pop
mov
dec
and
push
jns
sub
jge
mov
test
push
mov
inc
cmp
mov
shl
push
fs
nop
aad
(bad)
mov
and
xor
add
inc
shr
adc
xor
pop
dec
movs
iretw
xchg
(bad)
xor
outs
jecxz
adc
push
clc
retf
inc
rol
or
ss
sub
aaa
mov
int
or
inc
push
cs
fldcw
jne
dec
adc
call
rol
in
test
push
bound
mov
rol
clc
add
movs
rol
je
(bad)
lods
mov
pop
cld
outs
xchg
cmp
push
test
and
ret
enter
sub
lods
or
and
pop
clc
mov
cli
sub
dec
inc
dec
sbb
rcr
cmp
fcomp
aas
inc
call
adc
int3
pop
clc
lods
inc
mov
test
retf
test
inc
and
mov
(bad)
fadd
mov
mov
sub
sub
imul
jae
mov
add
push
mov
(bad)
xor
pop
ins
in
cld
jb
inc
outs
xor
push
jnp
ja
pop
adc
cmp
inc
(bad)
cmp
stc
inc
mov
sbb
scas
in
push
imul
fidiv
out
dec
jbe
call
and
jmp
xor
out
stos
(bad)
les
jnp
scas
dec
push
mov
pop
ror
adc
aam
outs
mov
push
ins
scas
lds
call
xor
xor
enter
mov
movs
mov
repz
sub
push
mov
cmp
stc
xchg
pop
pop
std
fs
inc
mov
addr16
aad
ds
aad
jle
(bad)
mov
pop
lods
mov
add
movs
xor
jnp
mov
add
inc
dec
xlat
mov
fnstcw
icebp
mov
mov
jb
cmp
inc
or
add
cli
inc
out
sbb
(bad)
int
push
mov
mov
sahf
add
push
test
xor
push
es
pop
xchg
shl
mov
hlt
retf
test
mov
daa
push
in
push
lds
or
jns
call
dec
arpl
int
pop
xchg
stc
sbb
xchg
fdivr
movs
jae
cmp
jg
push
push
sub
loopne
pop
ja
stos
and
bound
push
sbb
shl
sbb
cmps
xchg
(bad)
cmps
cmp
addr16
mov
pushf
mul
cwde
add
aaa
cmp
xchg
dec
movs
arpl
fmul
mov
push
and
imul
xor
add
sub
in
or
test
call
pop
sti
push
scas
adc
pop
bound
pop
xchg
jg
cdq
pop
out
fld
idiv
pop
push
lods
and
(bad)
mov
(bad)
pop
test
mov
(bad)
sub
js
pop
in
dec
xchg
and
push
lock
div
loop
gs
inc
mov
shl
call
inc
cmp
scas
jecxz
or
cdq
daa
push
es
icebp
es
jg
inc
(bad)
fmul
mov
das
sub
popf
xchg
inc
and
test
push
cld
dec
fs
inc
test
cmp
dec
xor
jae
jg
jp
fdivrp
pop
or
outs
inc
cmp
std
sbb
ret
push
sar
das
cwde
jno
arpl
imul
pop
dec
push
pop
or
sbb
mov
mov
and
inc
adc
(bad)
(bad)
xor
sub
(bad)
ss
sahf
mov
movs
enter
mov
int3
jo
push
in
sub
(bad)
mov
adc
dec
vphaddwq
add
mov
push
mov
pop
aaa
mov
sub
sbb
pushf
je
gs
sbb
sti
out
and
and
jle
addr16
inc
xchg
sbb
pop
xchg
ins
and
shl
push
fcom
sbb
mov
mov
or
loop
xchg
mov
adc
mov
and
and
stos
test
int
sahf
and
sub
mov
jge
mov
mov
push
dec
loop
cld
popf
ins
inc
push
shl
mov
push
out
cmp
daa
jne
mov
sub
sahf
cmp
mov
fldcw
push
add
xor
xor
pop
les
push
cmp
jns
push
cmp
push
clc
mov
fidiv
mov
adc
aaa
jmp
sub
mov
enter
bound
add
ins
push
jle
out
jne
retf
add
fwait
mov
sub
out
or
jb
das
not
jno
push
or
mov
test
cmp
cld
lods
sub
js
js
xchg
dec
push
or
inc
cmp
imul
je
shl
push
sub
inc
aas
arpl
paddusb
dec
inc
aam
es
mov
aas
jae
sbb
sbb
(bad)
cmps
pop
scas
push
enter
pop
jmp
sti
push
sbb
arpl
mul
xchg
push
das
xor
hlt
movs
sub
ins
jnp
movs
inc
mov
fmul
mov
xchg
ror
and
out
lahf
mov
jne
shl
jp
loope
xlat
cmp
inc
(bad)
jmp
or
mov
fisubr
mov
cld
xor
mov
xor
jne
cmp
ins
loop
push
mov
sub
sub
sbb
data16
cmp
inc
jo
mov
sbb
dec
or
jbe
jno
mov
xchg
mov
pop
loopne
cmp
fisttp
lds
add
xchg
push
shl
mov
mov
push
leave
jmp
xor
sbb
push
mov
outs
mov
dec
call
push
xor
rcl
push
arpl
jnp
aas
imul
out
int
pop
shr
pop
out
jne
aam
fucomp
sub
mov
mov
mov
and
out
mov
sbb
xor
ror
mov
test
inc
ror
dec
es
icebp
cli
jge
dec
frstor
popa
ds
vpermw
add
fimul
add
dec
dec
fld
ror
xchg
out
cmp
out
mov
push
mov
int3
leave
pop
cmp
push
mov
cwde
loope
into
dec
jge
fcom
push
dec
sbb
lahf
rol
mov
les
jns
stos
sbb
enter
jmp
cmps
repnz
xor
adc
div
dec
(bad)
out
inc
sub
jbe
cli
gs
clc
rcr
call
loop
icebp
inc
xor
test
leave
pop
aas
rcl
mov
ror
adc
adc
push
adc
inc
jmp
pop
xor
push
retf
adc
dec
adc
jl
inc
push
addr16
sub
stc
out
jno
nop
aaa
(bad)
jnp
jae
push
(bad)
jne
sti
inc
(bad)
pop
cs
mov
scas
test
jmp
mov
aad
div
(bad)
inc
xchg
inc
push
ins
rol
mov
les
xor
(bad)
enter
or
rcr
in
jmp
xor
sub
push
mov
mov
adc
enter
jb
hlt
hlt
test
xchg
imul
sbb
mov
add
mov
pop
cmp
popa
aam
pop
out
mov
(bad)
xchg
retf
cmp
add
in
mov
push
jne
ror
fld
sti
sti
and
dec
int3
sub
and
dec
retf
push
shr
or
cmps
(bad)
out
push
adc
add
dec
mov
stos
in
xchg
adc
jo
sbb
loope
into
mov
jbe
dec
jne
cmc
mov
retf
aas
mov
sar
ror
cmp
cmp
test
jecxz
nop
test
mov
sub
cmps
psraw
loopne
push
or
push
icebp
inc
rdmsr
lock
inc
(bad)
mov
inc
and
loope
mov
retf
arpl
jnp
enter
pop
stc
ins
ror
sub
retf
pushf
jbe
cmp
mov
push
xchg
jle
(bad)
in
enter
push
(bad)
dec
in
add
clc
cmp
(bad)
in
cmps
sub
lahf
aaa
int
jge
aaa
fstp
ins
call
pop
sbb
movs
mov
div
push
retf
iret
repnz
push
mov
js
and
or
mov
clc
mov
addr16
sub
xchg
push
mov
or
int
mov
sbb
fistp
daa
sbb
jb
mov
(bad)
shl
loop
call
jbe
sbb
sar
push
inc
inc
aad
mov
mov
mov
mov
jle
stc
dec
aam
jmp
(bad)
nop
or
xor
int
fst
mov
out
sbb
or
repz
mov
out
inc
push
xor
xor
outs
fsub
add
cmps
fwait
(bad)
mov
jne
pop
dec
mov
mov
in
sub
jb
push
cmp
jge
ins
jns
xchg
pop
add
stos
rcr
mov
pop
push
xor
dec
jge
sbb
dec
jg
retf
into
mov
imul
aam
sub
jb
push
add
mov
fwait
lods
push
sbb
jne
scas
jns
fist
cmp
sub
(bad)
test
sti
inc
xchg
inc
mov
sbb
pop
sbb
je
in
hlt
mov
adc
mov
or
jmp
adc
fwait
jb
xor
into
dec
sbb
jmp
bound
retf
ja
and
xor
xor
mov
aas
enter
lods
mov
mov
aad
mov
es
ins
push
push
add
and
adc
fnsave
loop
add
call
jmp
jp
add
leave
adc
pop
and
push
push
test
test
or
mov
and
fcmovbe
jl
push
enter
xchg
pop
xchg
lock
lds
inc
jno
das
pop
add
je
mov
mov
adc
icebp
inc
inc
pop
not
in
adc
mov
add
cli
jns
xor
pop
xor
add
cli
es
adc
mov
push
arpl
jg
and
and
mov
sbb
(bad)
shl
sahf
lock
jmp
jo
or
fstp
aad
push
lds
sub
jne
ins
nop
pop
aas
xchg
adc
cmp
xchg
cmp
test
jmp
ds
pop
popf
clc
inc
retf
retf
sub
sub
push
mov
fstp
mov
sbb
pop
xor
push
push
xor
div
inc
mov
pop
xchg
fisub
leave
push
dec
push
and
out
test
pop
sar
out
inc
retf
jmp
xchg
or
or
mov
push
fild
ficom
cmps
add
sub
pop
adc
movs
pop
xor
loop
movs
(bad)
(bad)
fisub
sub
arpl
jb
inc
pop
sbb
cmp
mov
mov
mov
call
addr16
fsub
scas
fs
nop
push
js
push
fidiv
dec
push
hlt
or
movs
push
mov
add
cmp
leave
mov
ins
push
int
push
inc
cmc
out
fild
jg
dec
shl
xor
cmp
ja
enter
pop
pop
sbb
cmps
bound
lock
int3
popf
dec
int3
aas
out
sbb
or
xchg
shr
hlt
inc
mov
pusha
mov
movs
cs
aam
push
xchg
jno
pop
mov
pusha
aad
add
mov
mov
rcr
pop
and
pop
pop
cs
push
ficomp
scas
out
les
dec
cmc
sbb
push
enter
psubd
(bad)
inc
adc
push
lds
ja
cs
mov
cdq
ror
loope
push
xor
inc
ret
dec
sbb
mov
loop
(bad)
popf
pop
ret
mov
push
inc
mov
gs
loop
sbb
fcom
adc
mov
scas
int3
(bad)
test
out
stc
jg
add
int
sbb
cmps
out
adc
cmp
retf
sti
test
cli
mov
fimul
repnz
not
jle
push
inc
sahf
inc
ins
out
lds
rcr
lds
xlat
hlt
mov
frstor
test
mov
add
outs
mov
xor
pop
daa
cmp
popf
adc
jmp
xor
enter
xchg
mov
jo
(bad)
xchg
cld
inc
popf
rol
ret
jle
xchg
lea
and
dec
das
adc
mov
mov
fwait
movs
fld
cli
pop
test
lock
jb
jl
mov
xchg
mov
cs
jns
adc
jae
test
adc
pushf
pcmpgtb
or
xchg
stos
int3
call
jbe
cld
pop
out
ror
jb
jmp
or
into
cmp
xchg
cwde
dec
dec
adc
call
neg
sti
mov
and
movups
in
addr16
push
mov
retf
ja
shl
xchg
ror
mov
enter
jo
inc
push
fld
lods
push
push
shl
adc
movs
push
push
mov
cmp
and
adc
push
mov
and
mov
inc
(bad)
pop
mov
imul
mov
in
jmp
pop
repz
ja
ss
loopne
ins
push
loop
mov
mov
(bad)
(bad)
pop
mov
sbb
xor
sti
sub
xchg
mov
cmp
jle
out
cmps
les
sar
inc
fwait
and
xor
inc
cmp
not
imul
out
loop
call
jbe
xchg
icebp
pop
gs
stc
and
push
repnz
movs
sbb
mov
mov
add
test
jb
xchg
outs
pop
pushf
in
(bad)
pop
push
mov
fcmovbe
dec
cwde
mov
in
(bad)
adc
add
test
cmp
adc
stos
(bad)
leave
call
call
cmp
repnz
pop
dec
imul
adc
adc
sbb
test
fisttp
jl
mov
mov
in
les
call
mov
add
rcr
imul
mov
jno
pop
dec
sub
test
jle
(bad)
dec
loope
cmp
stos
sbb
pop
push
pop
jmp
jg
das
int3
jmp
pop
ficom
cwde
(bad)
shl
repnz
sbb
pop
and
cmc
loopne
lods
call
sbb
in
fs
xchg
lahf
out
or
ffreep
(bad)
lods
mov
dec
mov
cmp
pop
xor
pusha
xor
or
addr16
jo
aad
jmp
movs
cld
fiadd
je
xchg
jns
inc
ror
push
mov
shl
lea
mov
pop
inc
or
aad
sahf
xchg
inc
rcr
jl
inc
mov
shl
sbb
mov
test
rcr
jmp
(bad)
shl
xchg
das
jnp
test
fldcw
dec
xor
call
inc
loopne
mov
jno
fwait
into
ret
cmps
and
cmp
xchg
in
je
or
mov
xchg
add
add
jae
gs
cs
gs
jne
arpl
cs
gs
jne
arpl
gs
fs
and
arpl
ins
imul
jae
outs
outs
cmp
xor
xor
inc
jne
je
jb
cmp
jb
ins
sub
push
jne
ins
imul
imul
bound
aaa
popa
xor
cmp
xor
xor
cmp
push
jns
je
ins
cs
gs
jne
arpl
cs
jne
je
ins
gs
gs
jne
arpl
gs
add
add
add
add
jns
je
ins
cs
jb
ja
outs
addr16
imul
jns
je
ins
cs
jb
ja
outs
addr16
push
gs
imul
xor
xor
inc
jne
je
jb
cmp
jb
ins
sub
push
jne
ins
imul
imul
bound
xor
data16
xor
fs
push
inc
inc
push
inc
inc
rol
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
dec
add
add
dec
add
add
dec
add
add
dec
add
add
dec
add
add
dec
add
add
dec
add
add
dec
add
add
dec
add
add
dec
add
add
dec
add
add
dec
add
add
dec
add
add
dec
add
add
dec
add
add
dec
add
add
dec
add
add
dec
add
add
dec
add
add
dec
add
add
dec
add
add
dec
add
add
dec
add
add
dec
add
add
dec
add
add
dec
add
add
dec
add
add
dec
add
add
dec
add
add
dec
add
cmps
dec
or
cmps
dec
or
cmps
dec
or
cmps
dec
or
dec
or
cmps
dec
or
cmps
dec
or
cmps
dec
or
cmps
dec
or
ins
jle
add
add
add
add
jle
add
ins
jle
pop
ins
jle
or
or
inc
ins
jle
inc
ins
jle
inc
ins
jle
inc
ins
jle
inc
ins
jle
inc
ins
jle
inc
ins
jle
inc
ins
jle
dec
ins
jle
dec
ins
jle
pusha
ins
jle
popa
ins
jle
bound
arpl
fs
jle
gs
jle
data16
jle
ins
jle
push
ins
jle
sub
ins
jle
sub
ins
jle
test
test
xchg
xchg
mov
lea
mov
ins
jle
mov
ins
jle
movs
ins
jle
movs
ins
jle
cmps
ins
jle
cmps
ins
jle
stos
ins
jle
stos
ins
jle
shr
ins
jle
ret
je
ins
jle
les
lds
(bad)
ins
jle
(bad)
ins
jle
into
ins
jle
iret
ins
jle
loopne
jle
loope
jle
loop
jle
jecxz
jle
in
jle
in
jle
out
jle
out
jle
in
ins
jle
in
ins
jle
(bad)
ins
jle
(bad)
ins
jle
enter
leave
ins
jle
retf
je
ins
jle
int3
ins
jle
int
jle
into
ins
jle
iret
ins
jle
outs
jle
daa
outs
jle
sub
je
outs
jle
sub
je
outs
jle
sub
jle
sub
outs
jle
das
outs
jle
test
add
jge
add
dec
add
push
push
add
sub
add
stos
push
add
jg
add
add
add
aad
add
cmps
or
add
or
add
or
add
or
add
add
jge
add
test
add
ror
add
or
add
or
add
and
or
add
or
add
or
add
or
add
or
add
add
daa
or
add
add
jns
add
clc
pop
add
and
add
cli
or
add
or
add
or
add
add
jnp
add
clc
push
add
int
add
dec
pop
add
and
add
dec
push
add
and
add
mov
push
add
movs
pop
add
jns
add
test
and
add
ja
add
dec
add
add
add
mov
add
add
add
add
jne
add
dec
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
jae
add
repnz
add
add
add
add
add
add
add
add
add
add
adc
add
call
add
adc
add
add
dec
add
add
sbb
add
sbb
add
add
add
add
xchg
sbb
add
sbb
add
sbb
add
add
mov
add
mov
add
ficomp
add
cmp
add
out
add
adc
add
push
push
add
mov
add
das
push
add
pop
push
add
rcl
add
test
add
and
add
cli
push
add
jne
add
dec
pop
add
(bad)
pop
add
sahf
pop
add
sbb
add
lock
add
or
add
xor
add
pop
adc
add
add
mov
add
mov
add
loopne
add
lods
adc
add
adc
add
adc
add
add
adc
add
add
sbb
add
repz
add
adc
add
adc
add
add
push
or
add
cmps
or
add
add
add
add
add
dec
add
add
sldt
push
sldt
jno
add
dec
adc
add
adc
add
sldt
movs
sldt
pop
adc
add
sldt
adc
adc
add
sbb
add
loope
add
or
add
mov
sbb
add
add
jmp
add
adc
add
fwait
sbb
add
add
dec
sbb
add
sbb
add
sbb
add
sbb
add
sbb
add
add
sub
add
dec
and
add
cmp
xor
add
add
add
add
add
cmp
sub
add
add
add
add
add
add
add
add
xor
add
add
cmp
xor
add
add
add
add
add
add
add
add
xor
add
add
cmp
xor
add
add
add
add
and
add
add
add
add
add
xor
add
add
cmp
xor
add
add
add
add
add
es
add
add
add
add
xor
add
add
cmp
xor
add
add
add
add
add
cmp
add
add
add
add
add
add
xor
add
add
cmp
xor
add
add
add
add
add
add
add
add
add
add
xor
add
add
cmp
xor
add
add
add
add
add
pusha
add
es
add
add
add
add
xor
add
add
cmp
xor
add
add
add
add
add
add
es
add
add
add
add
xor
add
add
cmp
xor
add
add
add
add
scas
xchg
add
add
add
add
add
add
xor
add
add
cmp
xor
add
add
add
add
add
add
add
add
add
add
xor
add
add
cmp
xor
add
add
add
add
add
add
es
add
add
add
add
xor
add
add
cmp
xor
add
add
add
add
add
rol
es
add
add
add
add
xor
add
add
cmp
xor
add
add
add
add
add
aad
add
add
add
add
add
add
xor
add
add
cmp
xor
add
add
add
add
add
add
add
add
add
add
xor
add
add
cmp
xor
add
add
add
add
sti
add
es
add
add
add
add
xor
add
add
cmp
xor
add
add
add
add
add
add
es
add
add
add
add
xor
add
add
cmp
xor
add
add
add
add
add
and
add
add
add
add
add
add
xor
add
add
cmp
xor
add
add
add
add
add
add
es
add
add
add
add
xor
add
add
cmp
xor
add
add
add
add
add
add
add
add
add
add
xor
add
add
cmp
xor
add
add
add
add
out
pop
add
es
add
add
add
add
xor
add
add
cmp
xor
add
add
add
add
add
add
add
add
add
add
xor
add
add
cmp
xor
add
add
add
add
add
add
add
add
add
add
xor
add
add
cmp
xor
add
add
add
add
add
xchg
add
es
add
add
add
add
xor
add
add
cmp
xor
add
add
add
add
add
add
es
add
add
add
add
xor
add
add
cmp
xor
add
add
add
add
add
mov
add
add
add
add
add
xor
add
add
cmp
xor
add
add
add
add
rol
add
add
add
add
add
add
xor
add
add
cmp
xor
add
add
add
add
add
add
add
add
add
add
xor
add
add
cmp
xor
add
add
add
add
add
clc
add
es
add
add
add
add
xor
add
add
cmp
xor
add
add
add
add
add
add
es
add
add
add
add
xor
add
add
cmp
xor
add
add
add
add
add
push
add
es
add
add
add
add
xor
add
add
cmp
xor
add
add
add
add
daa
xor
add
add
add
add
add
add
xor
add
add
cmp
xor
add
add
add
add
add
add
add
add
add
add
xor
add
add
cmp
xor
add
add
add
add
add
pop
add
es
add
add
add
add
xor
add
add
cmp
xor
add
add
add
add
add
add
es
add
add
add
add
xor
add
add
cmp
xor
add
add
add
add
add
add
add
add
add
add
xor
add
add
cmp
xor
add
add
add
add
add
xchg
add
and
add
add
add
add
add
xor
add
add
cmp
xor
add
add
add
add
add
es
add
add
add
add
xor
add
add
cmp
xor
add
add
add
add
add
mov
add
add
add
add
add
xor
add
add
cmp
xor
add
add
add
add
add
int
add
add
add
add
add
add
xor
add
add
cmp
xor
add
add
add
add
add
add
add
add
add
add
xor
add
add
cmp
xor
add
add
add
add
add
repz
es
add
add
add
add
xor
add
add
cmp
xor
add
add
add
add
pop
pop
add
es
add
add
add
add
xor
add
add
cmp
xor
add
add
add
add
add
add
add
add
add
add
xor
add
add
cmp
xor
add
add
add
add
add
add
es
add
add
add
add
xor
add
add
cmp
xor
add
add
add
add
add
add
es
add
add
add
add
xor
add
add
cmp
xor
add
add
add
add
add
push
add
es
add
add
add
add
xor
add
add
cmp
xor
add
add
add
add
add
add
and
add
add
add
add
add
xor
add
add
cmp
xor
add
add
add
lods
jnp
add
add
add
add
add
add
xor
add
add
cmp
xor
add
add
add
xor
push
pop
add
add
add
add
add
add
xor
add
add
cmp
xor
add
add
add
xor
outs
mov
add
add
add
add
add
xor
add
add
cmp
xor
add
add
add
xor
shl
add
add
add
add
add
xor
add
add
cmp
xor
add
add
add
xor
xor
add
es
add
add
add
add
xor
add
add
cmp
xor
add
add
add
xor
xchg
fadd
add
add
add
add
add
add
xor
add
add
cmp
xor
add
add
add
xor
add
add
add
add
add
add
xor
add
add
cmp
xor
add
add
add
add
add
es
add
add
add
add
xor
add
add
cmp
xor
add
add
add
aaa
add
add
add
add
add
add
xor
add
add
cmp
xor
add
add
add
cmp
sbb
add
add
add
add
add
xor
add
add
cmp
xor
add
add
add
cmp
cmp
cmp
aaa
add
add
add
xor
add
add
cmp
xor
add
add
add
add
add
add
add
add
add
xor
add
add
cmp
xor
add
add
add
fs
es
add
add
add
add
xor
add
add
cmp
xor
add
add
add
ja
add
add
add
add
add
add
xor
add
add
cmp
xor
add
add
add
mov
es
add
add
add
add
xor
add
add
cmp
xor
add
add
add
sahf
add
es
add
add
add
add
xor
add
add
cmp
xor
add
add
add
mov
add
add
add
add
add
add
xor
add
add
cmp
xor
add
add
add
lds
es
add
add
add
add
xor
add
add
cmp
xor
add
add
add
fadd
es
add
add
add
add
xor
add
add
cmp
xor
add
add
add
jmp
add
add
add
add
add
add
xor
add
add
cmp
xor
add
add
add
inc
es
add
add
add
add
xor
add
add
cmp
xor
add
add
add
adc
cmp
aaa
add
add
add
xor
add
add
cmp
xor
add
add
add
add
es
cmp
aaa
add
add
add
xor
add
add
cmp
xor
add
add
add
add
add
add
cmp
aaa
add
add
add
xor
add
add
cmp
xor
add
add
add
add
add
dec
add
cmp
aaa
add
add
add
xor
add
add
cmp
xor
add
add
add
add
add
pusha
add
cmp
aaa
add
add
add
xor
add
add
cmp
xor
add
add
add
add
add
add
add
add
add
add
xor
add
add
cmp
xor
add
add
add
add
sti
xchg
cmp
aaa
add
add
add
xor
add
add
cmp
xor
add
add
add
add
add
add
add
add
add
add
xor
add
add
cmp
xor
add
add
add
add
add
lods
add
cmp
aaa
add
add
add
xor
add
add
cmp
xor
add
add
add
add
add
rol
add
add
add
add
xor
add
add
cmp
xor
add
add
add
add
add
add
add
add
add
add
xor
add
add
cmp
xor
add
add
add
add
add
out
add
add
add
add
add
add
xor
add
add
cmp
xor
add
add
add
add
add
cmp
aaa
add
add
add
xor
add
add
cmp
xor
add
add
add
add
add
add
add
add
add
add
xor
add
add
cmp
xor
add
add
add
add
add
add
add
add
add
add
xor
add
add
cmp
xor
add
add
add
add
add
add
add
add
add
add
add
xor
add
add
cmp
xor
add
add
add
add
add
dec
push
add
add
add
add
add
add
xor
add
add
cmp
xor
add
add
add
add
inc
pop
push
add
add
add
add
add
add
xor
add
add
cmp
xor
add
add
add
add
add
add
add
add
add
add
xor
add
add
cmp
xor
add
add
add
add
add
add
es
add
add
add
add
xor
add
add
cmp
xor
add
add
add
add
add
push
add
add
add
add
add
add
xor
add
add
cmp
xor
add
add
add
add
add
test
add
add
add
add
add
xor
add
add
cmp
xor
add
add
add
add
add
mov
add
add
add
add
add
xor
add
add
cmp
xor
add
add
add
add
push
add
add
add
add
add
add
xor
add
add
cmp
xor
add
add
add
add
add
add
add
add
add
xor
add
add
cmp
xor
add
add
add
call
add
add
add
add
add
xor
add
add
cmp
xor
add
add
add
add
push
add
add
add
add
add
add
xor
add
add
cmp
xor
add
add
add
add
push
pop
add
add
add
add
add
add
xor
add
add
cmp
xor
add
add
add
add
and
add
add
add
add
add
add
xor
add
add
cmp
xor
add
add
add
add
add
add
add
add
add
xor
add
add
cmp
xor
add
add
add
clc
dec
pop
add
add
add
add
add
add
xor
add
add
cmp
xor
add
add
add
add
add
add
add
add
add
xor
add
add
cmp
xor
add
add
add
add
add
add
add
add
add
xor
add
add
cmp
xor
add
add
add
add
add
and
add
add
add
add
add
xor
add
add
cmp
xor
add
add
add
add
add
add
add
add
add
xor
add
add
cmp
xor
add
add
add
add
test
add
add
add
add
add
xor
add
add
cmp
xor
add
add
add
pop
add
add
add
add
add
add
xor
add
add
cmp
xor
add
add
add
add
add
add
add
add
add
xor
add
add
cmp
xor
add
add
add
add
in
add
add
add
add
add
add
xor
add
add
cmp
xor
add
add
add
add
pop
add
add
add
add
add
add
xor
add
add
cmp
xor
add
add
add
add
or
add
add
add
add
add
add
xor
add
add
cmp
xor
add
add
add
cmp
or
and
add
add
add
add
add
xor
add
add
cmp
xor
add
add
add
add
add
add
add
add
add
xor
add
add
cmp
xor
add
add
add
add
inc
or
and
add
add
add
add
add
xor
add
add
cmp
xor
add
add
add
add
or
and
add
add
add
add
add
xor
add
add
cmp
xor
add
add
add
add
imul
and
add
add
add
add
add
xor
add
add
cmp
xor
add
add
add
add
jg
add
add
add
add
add
add
xor
add
add
cmp
xor
add
add
xchg
xchg
or
and
add
add
add
add
add
xor
add
add
cmp
xor
add
add
xor
mul
add
add
add
add
add
xor
add
add
cmp
xor
add
add
xor
push
mov
add
add
add
add
add
xor
add
add
cmp
xor
add
add
xor
mov
or
and
add
add
add
add
add
xor
add
add
cmp
xor
add
add
xor
sbb
or
and
add
add
add
add
add
xor
add
add
cmp
xor
add
add
xor
xor
add
add
add
add
add
add
xor
add
add
cmp
xor
add
add
xor
add
add
add
add
add
add
xor
add
add
cmp
xor
add
add
add
or
and
add
add
add
add
add
xor
add
add
cmp
xor
add
add
aaa
add
add
add
add
add
add
xor
add
add
cmp
xor
add
add
cmp
or
add
add
add
add
add
xor
add
add
cmp
xor
add
add
cmp
jno
or
and
add
add
add
add
xor
add
add
cmp
xor
add
add
add
add
add
add
add
add
xor
add
add
cmp
xor
add
add
jnp
add
add
add
add
add
add
xor
add
add
cmp
xor
add
add
mov
add
add
add
add
add
add
xor
add
add
cmp
xor
add
add
mov
add
add
add
add
add
xor
add
add
cmp
xor
add
add
mov
add
add
add
add
add
add
xor
add
add
cmp
xor
add
add
enter
add
add
add
add
add
xor
add
add
cmp
xor
add
add
fmul
add
add
add
add
add
add
xor
add
add
cmp
xor
add
add
out
or
and
add
add
add
add
add
xor
add
add
cmp
xor
add
add
add
add
add
add
add
add
add
xor
add
add
cmp
xor
add
add
push
or
and
add
add
add
add
add
xor
add
add
cmp
xor
add
add
sub
add
add
add
add
add
add
xor
add
add
cmp
xor
add
add
add
add
add
add
add
add
xor
add
add
cmp
xor
add
add
add
add
or
and
add
add
add
add
add
xor
add
add
cmp
xor
add
add
add
add
arpl
add
add
add
add
add
add
xor
add
add
cmp
xor
add
add
add
add
ja
add
add
add
add
add
add
xor
add
add
cmp
xor
add
add
add
add
add
add
add
add
add
xor
add
add
cmp
xor
add
add
add
neg
add
add
add
add
add
xor
add
add
cmp
xor
add
add
add
add
add
add
add
add
add
xor
add
add
cmp
xor
add
add
add
add
add
add
add
add
add
xor
add
add
cmp
xor
add
add
add
add
fmul
add
add
add
add
add
add
xor
add
add
cmp
xor
add
add
add
add
add
add
add
add
add
xor
add
add
cmp
xor
add
add
add
add
dec
add
add
add
add
add
add
xor
add
add
cmp
xor
add
add
add
or
and
add
add
add
add
add
xor
add
add
cmp
xor
add
add
add
add
add
add
add
add
add
xor
add
add
cmp
xor
add
add
add
add
add
add
add
add
add
xor
add
add
cmp
xor
add
add
add
add
or
and
add
add
add
add
add
xor
add
add
cmp
xor
add
add
add
add
pop
or
and
add
add
add
add
add
xor
add
add
cmp
xor
add
add
add
cmp
add
add
add
add
add
add
xor
add
add
cmp
xor
add
add
add
add
add
add
add
add
add
xor
add
add
cmp
xor
add
add
add
add
call
add
add
add
add
xor
add
add
cmp
xor
add
add
add
add
or
and
add
add
add
add
add
xor
add
add
cmp
xor
add
add
add
add
ror
and
add
add
add
add
add
xor
add
add
cmp
xor
add
add
add
add
aam
add
add
add
add
add
add
xor
add
add
cmp
xor
add
add
add
add
add
add
add
add
xor
add
add
cmp
xor
add
add
add
add
cli
or
and
add
add
add
add
add
xor
add
add
cmp
xor
add
add
add
add
add
add
add
add
add
add
xor
add
add
cmp
xor
add
add
add
add
add
add
add
add
add
xor
add
add
cmp
xor
add
add
add
add
xor
add
add
add
add
add
xor
add
add
cmp
xor
add
add
add
or
and
add
add
add
add
add
xor
add
add
cmp
xor
add
add
add
add
add
add
add
add
add
xor
add
add
cmp
xor
add
add
add
add
or
and
add
add
add
add
add
xor
add
add
cmp
xor
add
add
add
add
add
add
add
add
add
xor
add
add
cmp
xor
add
add
add
add
xchg
or
and
add
add
add
add
add
xor
add
add
cmp
xor
add
add
add
add
add
add
add
add
add
xor
add
add
cmp
xor
add
add
add
mov
add
add
add
add
add
xor
add
add
cmp
xor
add
add
add
add
or
and
add
add
add
add
add
xor
add
add
cmp
xor
add
add
add
add
add
add
add
add
add
xor
add
add
cmp
xor
add
add
add
add
or
and
add
add
add
add
add
xor
add
add
cmp
xor
add
add
add
add
or
cmp
aaa
add
add
add
xor
add
add
cmp
xor
add
add
add
rcr
add
add
add
add
add
xor
add
add
cmp
xor
add
add
add
add
add
add
add
add
add
xor
add
add
cmp
xor
add
add
add
add
add
add
add
add
add
xor
add
add
cmp
xor
add
add
add
add
push
or
cmp
aaa
add
add
add
xor
add
add
cmp
xor
add
add
add
add
or
cmp
aaa
add
add
add
xor
add
add
cmp
xor
add
add
add
add
jle
add
mov
add
inc
add
add
add
(bad)
(bad)
inc
add
add
add
add
add
add
jns
je
ins
cs
jb
ja
outs
addr16
push
gs
imul
xor
xor
inc
jne
je
jb
cmp
jb
ins
sub
push
jne
ins
imul
imul
bound
xor
data16
xor
fs
add
adc
gs
cs
jb
ja
outs
addr16
imul
add
popa
je
pop
add
add
add
add
add
lsl
add
mov
mov
inc
or
add
or
add
add
add
add
or
add
add
pusha
outs
rol
add
add
inc
dec
inc
add
mov
or
popa
add
jo
pop
jae
add
ret
add
push
ret
add
outs
test
add
adc
inc
inc
push
pop
inc
in
shl
adc
and
je
rcr
sub
fstp
xor
dec
dec
ja
mov
sub
shr
add
lahf
idiv
scas
(bad)
div
sbb
and
ficomp
jecxz
addr16
mov
dec
jnp
inc
imul
lahf
bound
mov
cmp
inc
xchg
test
jg
jp
ss
sbb
mov
or
sbb
cmp
ret
in
push
mov
out
cmps
hlt
inc
mov
clc
mov
pop
push
test
push
loop
sub
movs
(bad)
imul
push
clc
jmp
in
(bad)
and
repz
xor
xchg
pop
mov
push
dec
pusha
adc
mov
mov
cmps
pop
push
sbb
adc
mov
inc
pop
rcl
or
xchg
lods
jg
cmp
jmp
sub
arpl
loope
and
daa
mov
in
mov
ds
lahf
jne
cwde
push
push
jmp
out
cdq
xor
cmp
mov
jg
pop
mov
mov
or
outs
and
icebp
ins
mov
into
ret
sbb
int3
push
jle
sbb
xor
lock
sub
jmp
loopne
xchg
xchg
jl
push
fistp
iret
clc
add
sbb
cmp
shr
mov
inc
sti
mov
adc
add
retf
adc
aaa
cmp
inc
pop
sti
je
dec
pushf
cmp
push
xchg
add
sub
pop
ror
add
xlat
mov
or
mov
pop
out
pushf
xchg
or
mov
mov
ret
addr16
jae
lock
aad
fwait
outs
inc
cmp
mov
mov
sub
jge
xlat
adc
adc
in
mov
(bad)
cmp
arpl
inc
push
push
adc
jb
(bad)
sbb
pop
jne
push
das
iret
into
or
sub
mov
xchg
ror
push
cmps
(bad)
idiv
retf
inc
push
mov
stos
(bad)
inc
out
cmp
cdq
adc
into
in
xchg
sub
xchg
bound
movs
aam
mov
xor
pop
mov
inc
ret
jnp
mul
dec
gs
test
and
mov
test
test
stos
jo
add
(bad)
mov
push
imul
jg
pushf
and
repz
xchg
or
imul
aam
cmc
sub
arpl
sti
test
cli
fnstsw
adc
adc
mov
(bad)
mov
xor
pop
inc
jmp
jmp
cld
mov
retf
sar
fmul
jne
inc
push
shr
mov
dec
dec
mov
mov
xlat
ficom
jecxz
add
sbb
inc
in
jle
or
clc
inc
fwait
add
push
jle
not
arpl
or
mov
aam
mov
mov
inc
cmp
push
cld
mov
icebp
fcom
jno
popf
dec
pop
shl
jnp
lods
sub
outs
fimul
imul
nop
add
xor
xchg
push
mov
sub
pushf
sahf
cmp
cli
sbb
or
popf
stos
shr
enter
imul
push
xchg
arpl
sbb
or
lods
push
cmc
retf
ret
out
jns
scas
pop
ins
(bad)
sbb
call
and
cmp
sbb
outs
imul
hlt
popf
push
ins
and
xchg
mov
sbb
and
pop
push
loope
cs
mov
test
mov
cmp
pop
xor
icebp
mul
repz
lods
xchg
js
fld
lods
(bad)
pop
in
cmps
mov
cli
or
adc
add
bound
(bad)
push
jns
in
rol
mov
dec
and
movs
mul
fldcw
test
push
add
mov
mov
lods
jnp
xor
and
in
dec
leave
xchg
xchg
arpl
mov
cli
cli
xchg
mov
(bad)
arpl
xchg
std
sub
jg
push
dec
test
jne
fs
and
push
fldcw
cwde
gs
sahf
push
(bad)
jno
inc
or
mov
inc
xchg
or
sbb
dec
mov
pop
mov
jmp
and
std
enter
fisttp
mov
pop
mov
aaa
paddb
and
jb
sbb
cmp
adc
xchg
enter
leave
jo
movs
cmp
outs
in
retf
xchg
xor
and
adc
add
cmp
(bad)
mov
mov
mov
mov
ss
mov
xor
movs
(bad)
pushf
cli
xchg
dec
aaa
enter
push
fadd
lahf
test
jnp
repz
repnz
test
stos
xor
aaa
and
aam
jno
shl
sub
push
int3
cmp
push
jo
mov
inc
in
mov
ins
(bad)
cmps
sbb
mov
sbb
in
test
jnp
shr
mov
out
sub
sbb
(bad)
aas
mov
cmc
mov
inc
retf
add
xchg
int
jae
sbb
sbb
pop
pop
imul
dec
mov
mov
pop
jecxz
mov
jle
mov
sub
jne
adc
in
jle
push
inc
arpl
leave
inc
cs
jmp
xor
sub
(bad)
mul
iret
adc
or
cld
in
cmps
mov
leave
aas
(bad)
invlpg
icebp
mov
fidiv
push
mov
xchg
inc
inc
jne
or
lock
pushf
fwait
arpl
rcr
pop
(bad)
retf
cmps
sar
inc
xor
popf
or
adc
arpl
test
pusha
mov
push
loop
xor
ror
cmc
xchg
cmp
fidivr
xor
mov
test
xchg
dec
cmps
mov
test
cli
ror
dec
movs
scas
shl
push
ja
and
je
mov
pop
cdq
(bad)
fnstcw
mov
mov
mov
lods
push
test
call
fcmovnbe
ins
adc
sar
pop
int
pop
mov
jp
pop
pushf
test
clc
cmp
in
sub
jno
je
clc
stc
or
cmp
dec
inc
ss
push
movs
mov
retf
jo
sahf
popa
scas
cwde
in
outs
into
sbb
out
adc
(bad)
icebp
mov
pop
scas
(bad)
and
pop
sub
cmp
cwde
mov
inc
jbe
mov
pop
jne
out
xchg
pushf
cdq
push
push
and
add
mov
adc
ins
test
inc
stos
push
jbe
call
aas
mov
mov
je
or
ja
jne
sbb
cmp
mov
mov
xchg
and
cmp
sbb
mov
push
mov
retf
mov
adc
loop
cwde
ficom
scas
mov
jmp
fwait
adc
jmp
or
icebp
test
push
ins
pop
retf
adc
mov
xchg
stos
in
dec
repnz
maxps
xor
fdiv
in
mov
jl
stc
movs
ins
aaa
mov
ins
ror
data16
out
xchg
clc
sti
test
setg
in
out
hlt
lock
neg
cld
pop
xchg
jecxz
sbb
imul
xchg
sub
mov
(bad)
int3
lahf
mov
push
inc
pop
inc
adc
adc
add
inc
sub
les
retf
into
sar
xor
mov
out
push
ret
int
pushf
(bad)
mul
mov
pop
cmc
imul
rcr
dec
pop
popf
aad
dec
ror
test
xchg
fidiv
retf
in
adc
adc
loope
lds
frstor
xchg
sbb
xchg
enter
adc
fdivr
mov
sub
xlat
icebp
mov
add
dec
pop
fs
jnp
cmc
and
dec
inc
xchg
add
fld
sbb
bound
inc
(bad)
(bad)
popf
pusha
out
nop
mov
push
rcl
cmp
push
int
in
neg
mov
gs
out
lea
pop
mov
and
mov
mov
xor
repnz
aad
add
sub
jle
nop
mov
leave
push
push
or
jp
std
jbe
pop
add
xchg
scas
int
lds
and
jns
loope
sub
fwait
xor
dec
push
cmp
xlat
(bad)
jns
aam
scas
mov
inc
xchg
imul
sbb
jmp
mov
mov
arpl
pop
daa
mov
pop
(bad)
cli
test
add
mov
(bad)
lods
dec
sub
lock
ds
icebp
and
push
pop
adc
mov
adc
push
dec
retf
nop
mov
sub
push
in
inc
js
dec
add
clc
mov
test
push
jae
rcr
sub
and
mov
dec
retf
push
and
fnstcw
xchg
and
jno
imul
arpl
adc
mov
loop
jle
out
outs
mov
or
mov
xchg
arpl
test
lahf
add
daa
fs
popf
push
and
push
data16
icebp
(bad)
pop
imul
push
cs
cmp
lea
fstp
das
div
dec
xchg
jl
xchg
sbb
jmp
sti
sbb
inc
fidivr
mov
adc
push
cmc
cmps
adc
jbe
pop
inc
push
cmp
add
adc
mov
push
rcl
mov
pushf
inc
sbb
push
movs
inc
xlat
rol
sar
out
movs
sub
mov
out
mov
sub
js
cmp
movs
cmc
xchg
mov
push
inc
sbb
cdq
ds
xor
adc
jp
and
pop
es
jne
mov
sub
cmp
or
lds
out
cwde
pop
je
pop
sub
and
mov
jmp
std
idiv
inc
push
jnp
test
loope
test
fwait
mov
ins
syscall
dec
popf
jmp
data16
loopne
adc
cmp
mov
inc
idiv
inc
push
dec
mov
jle
push
dec
or
test
test
add
pushf
mov
aas
shr
inc
iret
clc
mov
jle
inc
xchg
mul
gs
cmp
cwde
push
xchg
rcl
(bad)
fsubp
shr
jle
or
mov
imul
popa
in
fs
das
adc
adc
mov
inc
out
and
fistp
dec
in
mov
add
sbb
jmp
(bad)
xchg
push
test
(bad)
adc
in
sub
lock
adc
push
leave
xlat
push
(bad)
xor
(bad)
outs
fsubr
mov
cmp
push
add
movs
loop
iret
popa
ss
xor
pop
pop
js
outs
push
mov
xchg
popa
out
icebp
repz
mov
jb
shr
push
mov
and
cmps
and
dec
pop
sub
dec
jmp
(bad)
pop
or
sub
push
arpl
fwait
push
jnp
sub
dec
dec
inc
pop
fst
cs
sub
rcl
test
fcomp
pop
xchg
or
xchg
push
out
xor
cmc
nop
push
jl
dec
outs
mov
aaa
sar
add
clc
int
ins
mov
xor
xchg
mov
cmp
sbb
ret
test
test
mov
mov
mov
xchg
sti
pop
xchg
cmp
fxch
(bad)
ja
sti
inc
and
jp
mov
add
sub
jge
aam
call
adc
ins
cmp
test
and
push
repz
inc
mov
les
xchg
call
ror
and
out
push
or
jg
mov
int
nop
popf
fcmovnb
jbe
jmp
xchg
dec
jge
in
jmp
and
pop
sub
dec
das
inc
push
int3
dec
rcl
cmp
inc
pop
lods
jo
fisttp
or
fwait
sbb
fwait
inc
or
jo
pusha
mov
dec
into
dec
dec
sub
jns
test
div
mov
retf
mov
mov
jl
mov
mov
fdiv
imul
clc
sub
jp
xor
mov
pushf
clc
test
into
lahf
jle
inc
push
sbb
loop
(bad)
shl
cmp
jo
mov
push
xor
dec
ins
ins
jg
fsub
jmp
ror
mov
push
(bad)
out
jnp
repnz
sub
add
popa
int
push
ds
mov
mov
fwait
mov
mov
mov
imul
push
aad
shl
js
and
dec
sub
jl
push
out
dec
iret
or
xchg
ret
jg
sbb
vandps
aaa
retf
pop
lea
imul
cmps
mov
fnstcw
arpl
add
xchg
mov
es
and
popf
sub
xchg
push
mul
jmp
cmp
es
test
lea
mov
in
mov
test
lods
cmp
call
es
fxam
xor
cmp
push
ss
push
bound
xchg
or
jecxz
dec
bnd
jecxz
pop
lea
retf
fnstcw
mov
cld
fild
iret
sub
cmps
add
pop
fwait
loopne
test
fld
in
hlt
xor
jmp
push
lds
jno
clc
mov
sbb
jmp
mov
pop
mov
sub
jne
iret
push
push
pop
mov
(bad)
xchg
dec
(bad)
mov
lods
mov
addr16
test
mov
ret
repnz
push
adc
mov
les
pop
arpl
mov
xor
mov
sbb
push
inc
adc
mov
repz
shl
imul
das
cwde
dec
xor
sbb
stos
fistp
pop
inc
ds
xchg
out
lods
or
jg
jne
in
ss
rcl
pop
cmp
inc
fst
fdivp
dec
adc
repnz
pushf
add
lahf
(bad)
iret
(bad)
push
imul
jge
or
test
dec
jle
data16
xchg
or
push
arpl
pop
(bad)
cmp
xchg
loopne
pop
aaa
xor
dec
pop
jno
ret
sub
mov
mov
pop
les
idiv
jl
push
jbe
inc
cld
mov
fs
mov
or
(bad)
mov
pusha
imul
neg
stos
adc
and
xor
rcl
(bad)
loopne
lea
dec
repnz
or
mov
or
xlat
inc
mov
fsubp
xor
sar
jmp
mov
adc
dec
jne
test
shl
jbe
ds
or
in
jl
xchg
pop
icebp
mov
fmul
or
cli
bnd
mov
out
jns
lods
push
mov
rcl
mov
ins
jecxz
push
jnp
mov
xchg
loope
jmp
sub
lods
inc
cmc
jns
shr
outs
inc
xlat
fcom
fs
jmp
xchg
out
movs
test
jg
movs
push
cmp
push
push
std
aad
imul
xchg
cmp
pop
test
jp
imul
adc
mov
daa
es
dec
lds
xchg
out
div
mov
mov
outs
sub
aaa
xor
out
pop
cmp
sbb
arpl
nop
dec
jae
push
inc
retf
sbb
mov
stos
jle
cmps
mov
inc
cmp
pop
xchg
mov
push
(bad)
and
std
push
mov
ficomp
(bad)
cs
retf
sti
ret
addr16
movs
inc
mov
adc
lods
scas
pushf
in
add
or
aas
cld
sahf
xchg
(bad)
xor
stc
push
hlt
jl
dec
mov
and
int
xor
add
in
mov
int
jo
mov
or
jecxz
outs
jl
test
xor
mov
push
jbe
(bad)
pop
mov
out
mov
pop
es
mov
das
in
idiv
dec
cmc
pushf
lods
cmp
popa
inc
shl
jbe
lock
aas
(bad)
cld
repz
aas
(bad)
cld
repz
add
jg
mov
xlat
pop
add
add
dec
inc
dec
inc
scas
inc
pusha
or
add
add
add
(bad)
(bad)
inc
add
add
add
add
add
add
jns
je
ins
cs
jb
ja
outs
addr16
push
gs
imul
xor
xor
inc
jne
je
jb
cmp
jb
ins
sub
push
jne
ins
imul
imul
bound
xor
data16
xor
fs
add
adc
gs
cs
jb
ja
outs
addr16
imul
add
popa
je
pop
add
add
add
add
add
lsl
add
mov
mov
inc
or
add
or
add
add
add
add
or
add
add
pusha
outs
rol
add
add
inc
dec
inc
add
mov
or
popa
add
jo
pop
jae
add
ret
add
push
ret
add
outs
test
add
adc
inc
inc
push
pop
inc
in
rol
loopne
cmps
imul
out
data16
int
xlat
imul
int
ja
test
mov
cmp
jo
mov
sub
cdq
cmp
push
test
stos
bound
pop
jns
es
sub
inc
scas
pop
xor
loopne
push
adc
loop
fisub
test
aas
loopne
fiadd
das
mov
cmp
in
xor
es
push
sub
push
int3
sub
out
ds
or
push
or
rcl
or
jmp
scas
test
lods
mov
mov
adc
test
push
xchg
icebp
stos
push
jmp
xor
pop
test
cmps
inc
xor
sub
mov
add
in
inc
call
pop
scas
cli
ret
dec
jge
cmp
xor
xor
xchg
mov
mov
test
xchg
xor
push
rol
jmp
mov
popa
sub
dec
jmp
int
lds
xchg
inc
jmp
xor
jg
mov
outs
pop
sti
inc
loope
mov
xchg
aas
aam
mov
mov
std
out
loope
icebp
push
mov
(bad)
fcmovnb
inc
cmp
and
adc
sbb
xor
xchg
data16
xchg
pop
xchg
mov
retf
or
sar
add
movs
adc
neg
int
mov
popf
cmp
push
fistp
mov
pop
imul
adc
lods
inc
enter
add
aam
jnp
ins
cmp
dec
add
xor
jle
ret
xchg
fs
enter
or
adc
cmp
and
or
add
and
sub
inc
pop
push
iret
jnp
xchg
jbe
cmp
inc
in
aaa
adc
adc
pushf
mov
sub
iret
daa
ins
add
xor
fadd
sub
ret
pop
mov
adc
popa
mov
popa
rcr
pop
jbe
pop
xlat
rcr
out
test
leave
outs
es
cmp
xchg
pusha
nop
and
out
pop
outs
pushf
gs
sub
push
add
mov
movs
out
dec
adc
xlat
jl
mov
popa
inc
cmp
sahf
cli
ja
pop
pop
popf
xchg
dec
clc
fist
jge
dec
inc
ja
(bad)
ror
shl
scas
sahf
push
mov
mov
pop
push
mov
js
pushf
pop
fldcw
in
sbb
sub
pop
imul
dec
pop
jae
mov
sbb
shl
adc
sbb
pop
stc
add
ficom
int3
push
push
aad
xlat
mov
sub
ficom
dec
inc
cmp
jmp
mov
rcr
das
cs
xchg
inc
push
mov
add
mov
sub
imul
movs
outs
fmul
(bad)
jle
in
popf
push
loop
dec
mov
xchg
call
adc
add
lods
fsub
out
sub
aad
lods
fs
xchg
jmp
cmps
jbe
leave
jns
sbb
cmp
adc
xchg
pop
out
xchg
inc
(bad)
fstp
imul
into
push
fsubp
loop
gs
in
and
adc
scas
and
lods
xor
xor
cmp
pop
mov
jo
out
xor
sbb
js
xchg
push
or
stc
jmp
imul
aaa
sub
cmp
pop
adc
pusha
and
lea
cmp
fs
std
pop
test
xchg
jne
cmp
push
fld
mov
mov
mov
mov
loop
mov
into
pushf
dec
test
pop
int
mov
retf
push
ret
inc
add
cmp
xor
mov
sub
imul
mov
xor
nop
fwait
in
daa
icebp
daa
loopne
cs
int
or
test
mov
(bad)
push
jg
xchg
in
sub
out
test
test
retf
js
cmps
outs
dec
push
xchg
and
pop
jnp
jmp
rol
mov
add
xor
rcr
fwait
cmp
ret
scas
xor
or
ret
jne
aad
addr16
add
xchg
mov
xchg
jns
sbb
retf
scas
hlt
das
xchg
xor
lods
pop
call
mov
in
enter
test
cdq
outs
xchg
adc
cmps
nop
mov
adc
mov
mov
xor
xchg
cmps
inc
jp
rcr
mov
enter
jo
fdivr
xor
loopne
push
mov
mov
retf
mov
adc
aad
push
jbe
inc
fwait
and
retf
and
mov
ins
jne
pop
adc
jb
into
mov
mov
mov
mov
mov
xor
push
xor
mov
add
sar
movs
mov
or
sbb
lds
fisubr
test
ror
pop
pop
loop
lock
cmc
add
add
xor
or
loop
aam
test
cmc
sbb
ds
xor
(bad)
shl
into
cmp
adc
aam
mov
cmc
xor
jnp
arpl
aad
pop
push
xchg
(bad)
(bad)
sar
sbb
pop
fdiv
adc
pushf
ror
ret
inc
pop
data16
stc
and
test
leave
sbb
inc
stos
dec
or
ja
mov
cmps
xchg
xor
push
test
shr
inc
jmp
mov
in
mov
lock
mov
jecxz
out
aaa
mov
test
pop
sub
into
dec
push
sub
pop
adc
push
cmp
test
stc
(bad)
inc
aaa
cmp
or
retf
ja
mov
outs
and
cdq
mov
sbb
adc
cmp
aaa
lock
in
int3
jae
cmp
jmp
scas
rol
psubb
xchg
or
sub
out
ins
xchg
lds
xchg
mov
jmp
xor
or
dec
mov
repnz
mov
jmp
push
sub
jp
jnp
push
scas
retf
gs
xchg
sub
scas
hlt
and
out
(bad)
and
cmp
out
mov
pop
jg
jbe
inc
and
jo
xor
in
jne
cmp
stos
sub
sub
fstp
cmp
xor
ret
mov
sbb
mov
mov
stc
jle
xchg
int3
jmp
ds
and
xchg
add
fs
call
jmp
icebp
push
inc
pop
xchg
mov
lahf
ficom
pop
sahf
push
mov
ds
add
and
xor
push
or
sbb
xchg
pushw
and
add
jmp
inc
cmp
and
sub
mov
inc
lods
pop
jl
scas
or
(bad)
aam
add
add
inc
sti
inc
cmc
(bad)
rcl
lahf
stos
push
cmp
call
mov
xchg
pop
scas
xor
push
mov
cmp
int
mul
xor
xor
pop
mov
xchg
(bad)
aad
jbe
xchg
sub
pop
arpl
leave
dec
mov
aam
clc
fscale
cmp
movs
add
shr
xor
cwde
sub
pop
jg
pop
add
mov
scas
push
(bad)
gs
mov
stos
(bad)
in
mov
jge
or
add
jne
xlat
out
jmp
dec
gs
shl
mov
cmps
sub
xchg
sub
pop
add
punpckldq
scas
push
repnz
mov
cmp
int3
sub
push
jmp
mov
daa
cmp
push
push
jecxz
imul
jecxz
movs
pop
xchg
dec
xor
cld
or
pushf
mov
fistp
and
cmp
mov
ret
aad
xor
cdq
adc
test
mov
loope
int3
fidivr
cs
cmps
frstor
fsubrp
imul
xchg
loope
add
ins
pusha
call
leave
shr
in
jmp
cmp
in
sbb
add
sub
push
mov
mul
push
in
xchg
lock
xor
ret
aam
push
pop
movs
icebp
lds
mov
jecxz
xor
pop
retf
cli
dec
js
cmp
mov
repnz
add
loope
sahf
adc
fwait
mov
jg
jmp
sti
dec
jp
mov
sbb
xchg
int
adc
jmp
pop
sahf
push
shl
stos
jb
fst
push
sbb
rcr
xchg
and
cmps
leave
jae
add
arpl
mov
and
and
cdq
sub
out
retf
xor
icebp
pop
mov
ficom
cwde
je
scas
cli
shr
jbe
ret
and
(bad)
ret
mov
xchg
jo
mov
pop
adc
pushf
xchg
aas
retf
xor
aad
aas
mov
outs
sub
out
inc
jnp
dec
sub
hlt
or
xchg
cmp
push
lods
stos
push
push
mov
jge
iret
cmps
dec
lock
push
cld
xchg
xor
adc
jb
leave
ret
stos
test
loope
enter
dec
enter
dec
test
adc
imul
mov
lahf
mov
or
push
xor
xor
bound
scas
push
inc
pop
cmp
je
mov
mov
inc
loope
mov
fdivr
push
sbb
sti
sbb
push
lea
jmp
fisttp
ret
retf
fwait
mov
push
xchg
or
call
fisttp
push
mov
mov
cmp
retf
jg
and
std
inc
stos
inc
push
ja
ss
test
(bad)
out
ins
bound
xchg
icebp
shld
inc
fimul
lahf
push
jl
int
jl
imul
(bad)
pop
mov
rol
ret
jle
xchg
pop
cmp
imul
ret
shl
bound
out
cmps
push
outs
add
sub
push
je
pushf
jo
xchg
int
shr
and
lea
ret
push
test
mov
mov
push
neg
jmp
repnz
int
xor
push
jl
inc
push
xor
out
test
fisub
or
jnp
shr
test
rcr
xchg
outs
ficom
jge
std
or
mov
sub
es
or
pop
jae
cmp
xor
mov
call
in
pushf
sub
xchg
popa
jmp
and
addr16
adc
outs
xchg
aad
mov
int
push
outs
aad
sub
pop
cmp
enter
lods
mov
adc
push
stc
(bad)
ja
mov
inc
pop
mov
push
adc
stos
call
sub
xchg
rol
pop
mov
dec
inc
cli
inc
iret
repnz
mov
mov
add
test
mov
inc
out
jp
xor
mov
dec
mov
enter
adc
stos
xchg
dec
stos
cmps
inc
mov
pop
jns
call
outs
mov
mov
cmp
lea
and
int
clc
shl
nop
ja
ret
jmp
mov
inc
xor
es
ds
pushf
dec
xchg
push
aas
cmp
add
mov
xor
data16
mov
sub
(bad)
in
icebp
cwde
lahf
mov
das
add
sub
add
das
cld
xchg
hlt
nop
dec
jecxz
scas
das
leave
adc
outs
dec
sahf
ins
push
ins
mov
ins
fild
mov
daa
fsubp
jo
add
(bad)
daa
jb
in
scas
fdiv
and
add
adc
leave
call
xchg
sbb
inc
pop
fs
sbb
mov
pop
std
movs
into
test
fisubr
daa
pop
pop
xchg
inc
mov
add
pusha
(bad)
fninit
in
(bad)
cmp
and
jae
ds
add
and
fs
das
pop
(bad)
stos
dec
adc
jg
sar
xlat
pop
jbe
sar
adc
idiv
aam
imul
xlat
xchg
cmp
std
pop
cmps
xchg
mov
lock
pop
cld
fmul
pop
pop
movs
lock
repnz
push
mov
in
daa
jle
cmp
mov
ja
push
repz
jne
adc
jnp
(bad)
mov
add
adc
fdivr
add
sbb
test
pop
cmp
mov
ror
dec
sub
(bad)
es
jecxz
daa
fs
loopne
pop
aas
dec
(bad)
js
nop
add
add
sbb
repz
inc
push
or
sub
sahf
lahf
lahf
mul
push
mov
push
out
xor
int
dec
cmp
test
xchg
ret
jl
and
in
xor
pop
dec
aad
mov
int3
retf
dec
pop
cmp
push
loope
es
sar
inc
addr16
sahf
test
fadd
ja
(bad)
adc
jbe
sbb
add
sub
into
pusha
mov
call
adc
and
adc
gs
fs
in
cdq
lods
in
mov
test
(bad)
and
inc
mov
dec
jns
fld
and
jp
(bad)
xchg
out
ret
addr16
in
call
imul
pop
pop
sbb
inc
imul
repz
push
xor
aam
xlat
or
rol
pop
dec
mov
xlat
aad
shl
dec
adc
inc
sub
mov
mov
sti
cmp
adc
jnp
leave
jle
push
mov
in
sti
bound
cmc
inc
mov
and
mov
popf
jmp
xlat
dec
popa
std
lahf
sbb
aas
push
loope
add
dec
jbe
dec
mov
xchg
pop
jnp
inc
sub
fisub
mov
imul
ins
fwait
test
xor
cmp
adc
in
pop
mov
jmp
in
into
push
cmps
lods
jne
jne
inc
jl
xchg
jecxz
retf
sbb
cli
xchg
inc
repnz
sbb
and
iret
daa
mov
sub
clts
int3
jle
mov
or
cdq
fild
pop
adc
jp
mov
je
dec
arpl
xchg
bound
out
pop
jmp
xor
pminsw
inc
dec
xlat
add
jbe
hlt
hlt
ror
cld
xchg
in
jge
ret
jecxz
mov
fwait
stc
into
loop
jle
jb
mov
and
add
sbb
mov
sub
mov
xlat
lock
pusha
test
retf
sub
jecxz
popa
xchg
out
stos
or
inc
sbb
jno
cmp
aad
ja
xor
push
jle
dec
out
sbb
loope
data16
out
(bad)
ins
out
sbb
mov
inc
jecxz
and
sbb
imul
ins
jecxz
adc
arpl
inc
xor
(bad)
pop
inc
sbb
adc
push
mov
movs
xchg
xchg
test
jno
retf
in
xchg
mov
lods
ret
cmp
inc
js
gs
aas
jae
jb
aad
aaa
bound
aam
adc
xor
sub
adc
jmp
pop
sbb
test
stc
rol
popa
(bad)
adc
sbb
pop
test
jo
mov
jge
pop
push
aaa
es
sbb
cmp
stos
leave
call
mov
mov
pand
pushf
pop
dec
mov
stos
je
shl
addr16
pop
sbb
rcl
cmps
out
xor
rcl
xor
dec
xor
xor
mov
or
mov
rol
mov
sbb
jo
xor
lock
mov
out
sbb
or
mov
cmp
dec
hlt
das
test
jmp
dec
pop
pop
xor
cmp
bound
(bad)
(bad)
pop
sar
xchg
adc
scas
fs
icebp
cli
push
lods
(bad)
inc
push
xor
push
push
cmp
sbb
clts
dec
fbstp
movs
push
sbb
mul
and
mov
dec
mov
and
cmc
loopne
lds
imul
pop
dec
pop
jo
mov
movs
loop
cmp
bound
mul
adc
adc
adc
adc
mov
and
mov
push
sub
inc
cmp
neg
jae
push
imul
test
ror
fsubr
lahf
jg
stc
out
jg
stc
mov
xchg
sahf
data16
test
add
add
dec
inc
scas
inc
pusha
or
add
add
add
(bad)
(bad)
inc
add
add
add
add
add
add
jns
je
ins
cs
jb
ja
outs
addr16
push
gs
imul
xor
xor
inc
jne
je
jb
cmp
jb
ins
sub
push
jne
ins
imul
imul
bound
xor
data16
xor
fs
add
adc
gs
cs
jb
ja
outs
addr16
imul
add
popa
je
pop
add
add
add
add
add
lsl
add
rcl
add
mov
inc
or
add
or
add
add
add
add
or
add
add
pusha
outs
rol
add
add
inc
dec
inc
add
mov
or
popa
add
jo
pop
jae
add
ret
add
push
ret
add
outs
test
add
adc
inc
inc
push
pop
inc
in
retf
cmc
and
pop
add
mov
sbb
ret
jmp
mov
pop
data16
mov
hlt
in
hlt
je
sahf
call
(bad)
scas
fistp
lock
inc
xor
mov
mov
imul
jl
mov
adc
test
adc
sbb
les
mov
pop
idiv
cmp
push
out
imul
xor
aad
push
sub
inc
cmp
repnz
in
iret
jo
aaa
inc
cmps
xor
movs
scas
cmp
cmp
jl
cmps
push
cld
jne
cmps
xor
add
mov
pusha
popf
pushf
jb
jge
sub
push
push
push
in
push
pop
mov
push
push
ins
lods
mov
rol
jg
hlt
leave
retf
ret
imul
mov
enter
int
repz
ins
imul
stos
adc
hlt
imul
jmp
pop
inc
out
xchg
inc
xchg
in
mov
loopne
cli
jl
cmp
xor
arpl
cmp
mov
sahf
lock
into
push
aaa
and
hlt
ss
arpl
pop
adc
sbb
mov
xor
sub
mov
outs
lods
cwde
mov
mov
lds
or
out
adc
cmc
sub
out
cmp
(bad)
cmovo
hlt
jno
jno
dec
cmp
xchg
jecxz
xchg
and
rol
scas
fdiv
lahf
xchg
dec
lahf
xor
push
js
mov
stc
lea
loopne
loopne
xor
test
dec
popa
mov
mov
dec
and
ins
scas
cmps
out
fisub
sti
cmps
and
jl
int
inc
test
or
call
sub
pop
xchg
lods
push
leave
sbb
stos
je
fstp
jnp
push
(bad)
xchg
sbb
icebp
repnz
loop
sub
(bad)
dec
das
sub
out
int
and
je
inc
mov
mov
in
mov
sti
test
loope
push
(bad)
sbb
adc
pusha
xor
fs
adc
call
jno
mov
or
sti
cmp
ja
dec
call
xor
lods
mov
or
and
pop
lahf
stos
enter
scas
pop
xor
popf
mov
movs
sbb
iret
cmp
jno
pop
rol
dec
out
and
outs
mov
je
popa
and
stc
mov
adc
and
mov
iret
loop
es
jnp
loop
fs
aas
stos
adc
leave
or
retf
rol
pop
enter
mov
mov
mov
sbb
dec
fisttp
lock
int
test
fadd
dec
jecxz
imul
gs
push
mov
fwait
jg
jmp
add
fldcw
fstp
adc
mov
dec
rsm
add
jae
cmp
inc
and
rcl
jge
in
je
cdq
scas
xchg
cmp
sub
push
fdivr
repnz
and
fcom
inc
fld
sbb
xor
mov
jno
sbb
loope
mul
ja
test
and
mov
sbb
je
and
push
push
dec
popf
jns
fst
dec
sbb
jns
jmp
repz
or
fisub
scas
adc
fwait
outs
repnz
pop
sbb
jp
call
pop
rcl
sub
std
retf
outs
xor
stos
out
cld
imul
mov
or
jns
add
ins
ret
lods
jo
inc
dec
icebp
jecxz
addr16
pop
ins
js
out
xchg
imul
mov
dec
mov
xchg
aad
in
jmp
add
cld
cmp
(bad)
fwait
cs
sub
cmp
add
adc
inc
or
xchg
jl
cmps
dec
stos
mov
dec
shl
pop
sbb
pushf
cmp
or
jl
rcl
sbb
xchg
sbb
xor
sbb
cld
pop
loope
xchg
sbb
aaa
cdq
test
cmp
jl
outs
sbb
mov
inc
mov
inc
dec
mov
fidivr
(bad)
iret
adc
lock
sub
add
or
xor
xchg
xchg
not
test
xlat
cmp
and
leave
push
jg
mov
jmp
das
gs
shl
sbb
retf
or
fadd
iret
jb
jmp
aam
repz
out
and
pusha
(bad)
int3
mov
ins
movs
jmp
mov
push
call
leave
pop
push
jl
jp
lea
inc
in
cmp
inc
es
push
aad
mov
lea
mov
jns
fs
scas
lds
xchg
mov
mov
into
lock
push
lea
ret
iret
cwde
bound
adc
scas
xor
cmc
dec
les
jae
test
nop
movs
push
and
cli
cmp
arpl
fs
pop
push
pop
pop
sub
jns
sbb
out
out
jmp
scas
pop
int
mov
fsub
daa
push
and
mov
les
sub
inc
xor
mov
cmp
mov
(bad)
stc
adc
(bad)
lock
lock
sti
(bad)
jecxz
mov
and
(bad)
out
out
in
sub
clc
mov
cmp
nop
cmc
ret
xchg
mov
mov
xchg
push
pop
(bad)
sub
nop
mov
dec
dec
pop
call
(bad)
hlt
fincstp
sub
(bad)
repz
inc
adc
inc
xor
dec
add
adc
sub
stos
mov
cmps
xchg
or
add
jo
adc
and
adc
adc
ja
ret
lods
mov
adc
daa
cmp
jbe
dec
xor
mov
(bad)
jb
jo
repz
push
adc
jo
ins
cmp
dec
jecxz
push
loopne
add
push
xchg
or
push
pusha
gs
mov
xchg
pop
ss
pop
ss
inc
addr16
scas
sub
int3
xor
mov
and
mov
sti
fwait
lock
and
(bad)
iret
dec
iret
stos
pop
leave
mov
int
adc
pusha
cmc
retf
xor
sub
sahf
sbb
lock
retf
ja
fdiv
cli
scas
mov
or
in
es
mov
arpl
mov
(bad)
xor
jbe
fxrstor
jge
push
pop
maxps
retf
mov
mov
loope
fld
inc
mov
sbb
jns
inc
fidiv
rcr
popa
sbb
cwde
pop
loopne
mov
popf
retf
xchg
jmp
js
jbe
aam
fsub
lock
or
ds
retf
mov
add
je
pop
mov
xchg
jmp
movs
test
shr
lock
test
push
mov
pop
mov
mov
fiadd
sbb
(bad)
gs
jo
and
and
mov
add
or
movs
xchg
in
movs
dec
push
jecxz
adc
jge
pusha
sahf
xchg
dec
in
ret
stc
inc
cmp
out
movs
sub
xlat
dec
loope
std
inc
sub
adc
das
xchg
sbb
xchg
shr
sbb
jmp
mov
fnstenv
loope
pop
cli
lds
(bad)
aam
vpcmpeqb
or
xor
inc
lea
jb
sar
js
mov
adc
iret
sbb
xchg
test
sub
int
repnz
add
shl
shl
arpl
aam
lea
test
and
test
leave
aas
gs
sahf
push
or
xor
lock
and
push
push
or
xchg
jmp
inc
retf
in
inc
dec
adc
leave
mov
xchg
popf
adc
sbb
test
dec
call
adc
pop
adc
mov
push
shl
mov
xchg
test
enter
xchg
neg
icebp
aam
es
fcomp
mov
and
jbe
cli
addr16
jno
sub
pop
out
pop
cmp
arpl
dec
xchg
push
push
mov
xchg
nop
fadd
pop
or
dec
pop
mov
xchg
xor
dec
icebp
sbb
sub
cmp
aas
jbe
cli
xchg
icebp
ficom
mov
push
jnp
clc
mov
js
imul
pop
jb
add
inc
int3
xor
dec
fcmovbe
jne
stc
jle
addr16
pop
jl
outs
arpl
movs
fst
push
mov
jecxz
je
pop
pop
inc
xor
aad
pop
ja
je
sbb
fmul
and
ror
shl
xor
test
mov
sub
lahf
lahf
mov
cdq
mov
inc
hlt
inc
cwde
lds
push
add
push
jp
scas
mov
in
xor
cmp
fcom
sub
test
and
xlat
jmp
stos
gs
lahf
and
jle
xor
arpl
ins
mov
test
rdmsr
les
cwde
clc
shl
pop
xchg
xchg
ss
xor
fld
iret
jge
mov
daa
outs
dec
mov
lock
xor
out
lods
(bad)
xor
mov
cmp
adc
iret
movs
jmp
outs
loop
ins
xlat
adc
out
test
(bad)
cdq
pop
ja
lahf
xor
sub
pop
imul
sub
adc
outs
test
inc
cmp
inc
dec
dec
jg
push
mov
lahf
pushf
icebp
mov
sub
popa
popa
arpl
mov
jmp
adc
pop
mov
jo
jecxz
ret
cmp
mov
loop
stc
mov
jle
aam
test
adc
fs
lahf
inc
xchg
in
mov
fimul
sbb
xor
dec
xor
pop
data16
fwait
dec
(bad)
cmp
fcomip
cmc
push
scas
jb
dec
sbb
nop
(bad)
mov
jae
xchg
shl
out
mov
addr16
outs
repnz
hlt
sbb
pop
(bad)
scas
repz
jecxz
adc
mov
add
and
cs
and
dec
dec
vaddps
or
adc
adc
push
add
or
into
cmp
sbb
dec
jno
xor
sub
call
xor
retf
in
les
out
and
push
xor
fdiv
mov
icebp
(bad)
xor
dec
or
mul
push
add
mov
dec
pop
push
push
rcl
mov
sbb
ror
cmp
sub
mov
push
out
mov
xor
imul
push
mov
jecxz
hlt
dec
or
sub
sbb
(bad)
xchg
sbb
cli
hlt
inc
xchg
(bad)
sbb
in
cmc
add
test
xchg
movs
cmc
pop
stc
mov
ret
dec
cmp
and
outs
xor
sub
sub
pop
xor
out
fimul
xor
jbe
or
mov
mov
test
je
cmps
cmp
neg
inc
mov
clc
push
aam
cmp
cld
xchg
aas
das
aas
retf
imul
sub
retf
iret
dec
push
(bad)
xor
inc
mov
ror
lock
cmp
(bad)
cmp
sahf
clc
push
mov
cmp
call
ds
and
test
mov
in
clc
cmp
cld
cld
clc
adc
pushf
imul
and
mov
push
in
jle
cmp
les
pop
inc
fs
cmp
adc
push
dec
sbb
mov
xchg
xchg
shl
or
mov
cld
xor
retf
outs
jmp
arpl
fild
xchg
arpl
xor
popa
xor
movs
pusha
scas
jge
add
inc
ins
scas
pop
and
xor
adc
loope
lods
sbb
loop
cmp
xor
dec
jecxz
mov
inc
ror
jo
in
rcr
mov
test
adc
imul
mov
sbb
push
fstp
popf
fldcw
sahf
sti
xor
mov
lods
push
(bad)
push
push
push
add
jmp
pop
dec
je
xchg
ret
add
push
mov
sub
cmp
movs
jp
dec
jmp
aad
retf
retf
cmp
out
clc
jmp
add
xor
or
js
lds
clc
sub
gs
int3
push
jle
and
mov
mov
test
mov
push
sbb
and
adc
jp
adc
add
lods
push
mov
scas
jle
xor
jnp
scas
xor
cs
repz
scas
ss
loope
cmps
sbb
mov
lds
and
inc
iret
outs
popa
mov
pop
pushf
jo
fiadd
jns
aaa
cdq
or
push
(bad)
std
loope
int
imul
add
adc
ja
and
adc
test
jg
pusha
mov
(bad)
push
or
fwait
es
lea
pop
cmps
push
jae
xchg
mov
gs
xchg
mov
mov
scas
pushf
push
mov
dec
mov
pop
ss
inc
pop
and
call
shl
stc
les
js
jge
lods
lahf
aad
mov
pop
push
adc
movs
push
neg
into
inc
pop
pop
add
cmp
xchg
popa
jge
ds
xchg
cs
sub
adc
add
or
and
neg
(bad)
in
sub
jecxz
mov
sbb
jno
arpl
jmp
mov
mov
dec
inc
jmp
sub
call
in
mov
cmps
and
cmp
cli
mov
xchg
out
popf
adc
push
mov
lock
into
push
mov
mov
gs
js
loopne
push
xchg
mov
gs
mov
inc
sub
fwait
int3
vpaddusw
mov
or
xchg
int
into
adc
je
sbb
jecxz
adc
jp
sbb
xchg
(bad)
pusha
sub
pop
mov
push
sub
imul
repnz
jp
(bad)
inc
ins
or
mov
or
outs
push
lahf
pop
jo
or
jmp
outs
mov
inc
int3
mov
jne
push
and
mov
cmp
mov
jl
fs
fwait
pop
xchg
pushf
mov
mov
stos
or
push
arpl
pop
outs
sub
gs
push
mov
shr
cmps
aad
pop
jmp
jmp
cmps
leave
fild
dec
(bad)
mov
inc
cmc
call
loopne
xchg
push
out
push
aam
lods
pop
xchg
mov
xor
outs
pop
fnsave
xor
push
mov
in
outs
out
out
ins
jle
arpl
sbb
xor
pop
fnstenv
add
sbb
pop
aas
pop
sub
mov
xor
adc
mov
mov
cmps
xor
movs
jns
push
mov
pop
xor
lods
movs
ds
jmp
push
dec
mul
ret
mov
add
dec
pop
xchg
sub
dec
into
or
sbb
mov
or
mov
fwait
jae
js
adc
clc
inc
mov
enter
(bad)
adc
lods
jbe
sar
xor
add
mov
mov
retf
mov
mov
jle
jp
add
pop
dec
mov
call
test
imul
mov
sub
push
pushf
xchg
or
ss
pop
push
stos
hlt
xchg
mov
jne
addr16
sar
and
je
sti
mov
push
or
sub
call
(bad)
pop
sub
movs
push
sub
xor
neg
adc
jle
or
or
addr16
out
push
repz
ficom
jmp
inc
mov
imul
in
retf
int3
outs
cli
sub
iret
lds
scas
rcr
mov
push
xlat
jle
sbb
mov
call
jle
imul
inc
pop
inc
fucomp
pusha
sbb
loopne
and
mov
mov
xor
stc
lds
pop
lahf
xchg
cmp
test
loope
lock
shr
out
jg
stc
out
jg
pop
add
icebp
and
adc
add
dec
inc
scas
inc
pusha
or
add
add
add
(bad)
(bad)
inc
add
add
add
add
add
add
jns
je
ins
cs
jb
ja
outs
addr16
push
gs
imul
xor
xor
inc
jne
je
jb
cmp
jb
ins
sub
push
jne
ins
imul
imul
bound
xor
data16
xor
fs
add
adc
gs
cs
jb
ja
outs
addr16
imul
add
popa
je
pop
add
add
add
add
add
lsl
add
mov
mov
inc
or
add
or
add
add
add
add
or
add
add
pusha
outs
rol
add
add
inc
dec
inc
add
mov
or
popa
add
jo
pop
jae
add
ret
add
push
ret
add
outs
test
add
adc
inc
inc
push
pop
inc
in
rol
loopne
sahf
sbb
popf
shr
dec
pushf
into
jmp
out
iret
cmps
mov
leave
shl
int
xor
jns
cmp
inc
xor
pop
add
cmp
lock
jns
fadd
std
retf
mov
dec
jle
push
mov
push
into
js
test
movs
nop
push
imul
(bad)
popa
pop
scas
popa
and
out
clc
int
int3
and
std
(bad)
mov
and
outs
es
add
pop
inc
xor
test
daa
stc
leave
and
out
inc
icebp
out
jge
mov
loopne
sahf
popa
or
data16
cmp
pop
dec
sbb
lods
pop
mov
test
inc
mov
enter
xchg
and
ret
jbe
sub
jl
std
jnp
pop
sub
scas
fldcw
mov
rol
ret
mov
and
not
sub
xchg
fsubr
movs
jecxz
pop
mov
sub
jbe
mov
sti
jge
cmp
pusha
cmp
cmp
push
inc
mov
xchg
jbe
lea
pop
sar
inc
push
aad
into
lahf
movs
pop
or
sbb
and
mov
(bad)
cld
adc
(bad)
out
mov
es
cli
push
pop
cmp
xor
lods
pop
movs
out
icebp
lea
sbb
jle
retf
(bad)
sub
mov
adc
push
pop
xlat
je
mov
jg
jecxz
das
out
sbb
xor
loope
cmp
xchg
dec
outs
and
stos
icebp
sub
inc
or
cmp
sbb
pop
clc
xchg
imul
icebp
add
stos
dec
mov
cld
cmp
xchg
jne
lock
shr
sbb
or
add
rcr
xchg
fmul
ins
sub
sbb
xchg
jne
fwait
dec
xlat
jb
push
pop
and
xchg
push
inc
fwait
sub
retf
push
call
movs
dec
cld
cdq
aaa
call
cmps
hlt
hlt
dec
pushf
push
xchg
iret
inc
jnp
and
(bad)
dec
jbe
dec
ror
mov
jg
pop
outs
xor
adc
jmp
xor
xchg
punpckhdq
test
adc
mov
lahf
or
push
xchg
push
rol
ins
adc
(bad)
lods
cmps
mov
lahf
xor
movs
sbb
movs
dec
cmp
inc
rol
pushf
fidiv
pushf
mov
pop
stc
sub
je
retf
movs
in
dec
test
outs
mov
ins
and
das
fist
icebp
xchg
push
push
sbb
adc
xchg
xchg
imul
or
mov
mov
ds
xchg
inc
xor
inc
ror
xchg
retf
push
rcr
add
rol
pop
pop
sbb
ja
and
fimul
add
pop
jnp
jnp
ja
mov
xchg
mov
and
sahf
dec
add
aas
lahf
pop
out
sub
xchg
xor
sbb
je
jbe
les
xor
pop
jecxz
sbb
sbb
pop
scas
or
sub
movs
inc
xor
jb
mov
xor
push
mov
push
add
je
out
push
jns
inc
add
shl
sar
sub
(bad)
sub
mov
mov
out
or
jae
or
gs
push
call
jne
jle
loope
pop
lods
fsub
addr16
dec
mov
retf
sbb
ins
(bad)
repz
gs
hlt
jne
adc
jbe
aad
scas
cmp
out
pop
xchg
mov
add
mov
and
xchg
mov
mov
je
cdq
inc
fild
jmp
test
dec
pop
push
ror
lock
or
sbb
lods
push
cmps
stos
and
ins
mov
lea
xchg
(bad)
ret
ins
jmp
imul
dec
ja
dec
jl
jmp
adc
add
stos
loope
lods
popw
pop
mov
jmp
aas
jmp
pushf
rcr
mov
mov
xchg
cmps
cmp
xor
and
mov
out
or
rcl
mov
int
sbb
jl
shr
mov
cmps
add
jle
addr16
lods
cdq
xchg
pusha
pusha
sbb
xor
ja
pusha
xchg
inc
test
push
mov
repz
jmp
jg
push
mov
inc
outs
push
leave
jmp
shr
inc
push
xchg
mov
sub
jl
push
jge
movs
pop
sub
adc
(bad)
std
adc
mov
mov
and
addr16
mov
ins
adc
gs
push
xchg
cmp
repnz
imul
xchg
jmp
and
dec
xor
mov
les
xor
pop
jbe
xlat
test
cli
(bad)
mov
out
idiv
lods
mov
and
sbb
hlt
push
retf
into
cmp
inc
and
dec
dec
(bad)
js
popa
adc
mov
mov
jecxz
xor
lods
enter
push
leave
sbb
push
scas
cmp
retf
pop
repnz
ds
jns
jbe
test
(bad)
dec
ret
and
or
test
adc
mov
xchg
push
fs
inc
(bad)
or
xchg
mov
adc
popa
loop
sbb
and
jle
mov
mov
lahf
mov
push
shr
nop
inc
mov
inc
cmp
call
pop
out
fisttp
sbb
pop
and
adc
test
or
out
aas
and
sbb
dec
sub
aad
test
das
sbb
add
mov
out
jae
jns
push
fstp
mov
aaa
inc
cld
ret
cmp
dec
cwde
sub
pop
adc
inc
mov
jb
ss
imul
sub
mov
cmps
int
adc
xchg
lods
xchg
rcr
mov
repz
in
test
scas
xlat
(bad)
adc
sbb
lods
inc
jmp
out
cmp
sub
and
sti
dec
xchg
jg
push
arpl
leave
jle
dec
fist
clc
mov
jbe
enter
ud1
das
adc
sbb
xchg
je
loope
push
xchg
int
inc
(bad)
std
mov
or
(bad)
mov
xrelease
lea
sbb
jmp
add
cwde
inc
inc
ds
mov
repz
pop
icebp
leave
stos
inc
rcl
cmp
pop
push
in
jl
sub
dec
sbb
pop
push
dec
pop
jns
mov
in
popa
ror
mov
sub
test
push
cmp
cmp
and
addr16
out
out
cmp
jo
xor
aam
outs
outs
ror
into
mov
xchg
cdq
push
sub
xchg
jmp
test
imul
xchg
clc
mov
inc
mov
in
mov
push
popa
mov
movs
dec
into
scas
dec
jmp
in
mov
jp
mov
inc
jae
lods
inc
add
mov
mov
jbe
sub
ins
sub
fisub
test
mov
adc
mov
std
fild
test
imul
push
or
xchg
push
add
sahf
pop
xchg
fldl2e
adc
add
push
popa
mov
sbb
jg
sub
mov
mov
mov
in
xor
ja
mov
sbb
in
lods
fistp
or
cmp
add
jo
mov
daa
stc
sub
xor
pop
arpl
out
or
lds
push
cli
enter
inc
mov
push
in
icebp
and
sbb
xor
and
scas
(bad)
jnp
aam
jnp
mov
movs
std
jecxz
mov
push
jg
cwde
(bad)
inc
loop
mov
fwait
push
inc
xchg
or
mov
or
rol
mov
add
leave
jp
in
dec
call
call
and
push
pop
mov
fldcw
test
cmp
(bad)
cmc
loope
int
inc
xchg
dec
jle
or
mov
das
sub
xor
cld
popf
out
jno
or
jmp
ror
enter
pop
mov
rcl
out
xor
pop
into
xchg
push
aad
fdiv
shl
jge
fimul
pop
enter
call
int
in
outs
push
mov
adc
push
nop
cmp
lods
xchg
push
sahf
int
pusha
imul
inc
or
stos
push
mov
outs
xor
leave
loop
stos
adc
cmp
cmp
hlt
cmp
pop
add
fdivr
in
sbb
mov
aad
and
xor
sub
pop
cmp
adc
mov
xchg
daa
mov
gs
inc
cwde
dec
or
adc
cwde
xor
xchg
movs
std
mov
test
mov
jbe
ror
mov
xor
je
ds
add
call
lods
sub
lods
mov
out
sbb
in
mov
mov
or
hlt
mov
push
leave
pop
push
inc
and
add
mov
stc
cmp
test
xor
mov
xchg
sub
cmp
mov
sub
push
out
adc
sbb
leave
inc
lahf
pop
inc
adc
enter
push
inc
or
cmps
out
mov
stos
add
dec
mov
mov
or
fdivp
xor
push
cmp
adc
out
lods
mov
mov
fisttp
and
sbb
and
cmp
xchg
lods
outs
or
fs
jp
push
inc
clc
cmp
scas
mov
push
pusha
add
aas
jl
not
ds
jns
test
mov
mov
addr16
cmps
cmps
xchg
xor
repnz
lea
(bad)
cld
leave
repz
jle
pop
mov
xor
std
test
in
add
(bad)
sub
outs
test
inc
mov
sub
sbb
out
loop
lahf
sbb
rol
sti
mov
(bad)
clc
ss
xor
idiv
sub
or
mov
or
sahf
cmp
ss
mov
jo
push
pop
sbb
fidiv
add
mov
cli
sbb
mov
ins
sar
hlt
aaa
xor
jae
call
out
sbb
cmp
push
in
idiv
xchg
data16
cmp
xor
sti
int
loopne
mov
mov
dec
scas
(bad)
fst
ds
les
push
push
test
jmp
gs
pop
pop
test
cdq
lock
cmc
stos
repz
jl
icebp
gs
or
jb
and
fidivr
aas
(bad)
(bad)
sub
push
push
jb
pop
dec
pop
sbb
inc
xlat
jmp
adc
cmp
push
xchg
or
add
fcmovbe
xchg
mov
mov
add
test
and
sub
fistp
loope
out
cmp
jae
stc
jl
jns
sahf
mov
dec
gs
or
stos
movs
cmps
lds
xchg
sbb
cmc
lahf
and
adc
cmp
and
sub
xchg
add
adc
sar
hlt
neg
mov
dec
push
cmp
nop
mov
jnp
pusha
clc
xchg
jg
imul
mov
mov
sti
sbb
test
repnz
jne
fcmove
pop
inc
ret
cmc
(bad)
data16
out
add
pop
mov
inc
xor
les
test
sub
pop
push
repz
ret
and
mov
aaa
outs
jo
sar
pop
push
pushf
in
lahf
inc
mov
mov
cmp
push
jmp
mov
jmp
fldpi
sbb
xchg
sub
push
movs
push
mov
popf
shl
mov
sub
fidivr
(bad)
cmp
cmp
cmp
jecxz
test
popa
and
adc
loopne
jg
mov
fstp
(bad)
std
sub
es
sbb
lea
shl
outs
jg
inc
sbb
mov
xchg
loop
jp
mov
mov
outs
mov
gs
ins
enter
push
push
xor
repz
adc
data16
ja
je
into
pop
or
adc
sub
shr
imul
add
addr16
std
jo
mov
xchg
scas
inc
mov
lods
dec
stc
push
xchg
cmp
fsubr
movs
jbe
imul
mov
mov
out
test
push
xchg
stos
xchg
adc
sub
data16
aas
in
cmp
mov
inc
sbb
cmp
clc
jmp
mov
mov
nop
repnz
in
repnz
lock
inc
pop
cld
mov
lods
cld
loope
mov
fidiv
pop
in
fcom
lock
aam
or
movs
pushf
out
fwait
push
sahf
aas
pop
stos
gs
dec
cdq
or
push
push
jns
and
loop
dec
ds
leave
jg
outs
jecxz
xchg
xchg
cld
inc
shl
or
lea
lea
das
cmp
lds
mov
sti
repnz
out
std
dec
dec
inc
inc
jmp
popf
bnd
hlt
or
push
jae
mov
dec
xor
push
fucomp
fst
out
jns
xor
and
push
adc
test
or
cmp
inc
ss
inc
punpckhwd
or
and
mov
pop
lds
loop
inc
daa
sbb
enter
outs
in
jo
stos
aaa
(bad)
and
lods
js
hlt
inc
mul
das
shl
ret
cmp
jns
cli
aam
iret
cld
sbb
aad
ret
cmp
cmp
adc
sbb
in
pop
fs
fnstenv
loopne
dec
cmp
mov
jne
jb
popa
outs
mov
adc
or
xchg
add
into
mov
addr16
push
inc
ds
sbb
dec
sbb
pop
cmps
imul
ins
clc
mov
out
fadd
xchg
dec
js
push
daa
or
scas
xor
jne
cmp
inc
mov
mov
rcr
xchg
jmp
and
test
fcomp
(bad)
cli
inc
mov
mov
pop
les
and
mov
movs
cmp
pop
adc
xor
dec
(bad)
bound
add
and
retf
out
pop
xchg
stos
daa
xchg
dec
sub
mov
cmp
or
(bad)
add
adc
xor
and
mov
mov
xor
ins
dec
mov
mov
and
and
stos
jbe
lahf
das
mov
ror
ret
or
hlt
pusha
cmc
leave
xlat
or
inc
jmp
icebp
clc
inc
inc
jbe
loop
push
sbb
and
push
sar
shr
bound
sti
sbb
dec
enter
adc
repz
fcmovu
adc
push
sbb
lea
pop
push
adc
mov
xchg
jbe
inc
adc
lock
aas
aas
or
popa
or
push
xor
sub
cdq
and
ret
xor
div
test
mov
scas
fst
(bad)
push
(bad)
ret
mov
xor
cmp
jge
rcr
sbb
sbb
ins
arpl
jae
pop
push
cwde
mov
or
xchg
ss
das
clc
jnp
out
scas
push
pop
lods
xchg
ja
test
fucomi
movs
aas
mov
shl
inc
jbe
lahf
gs
adc
imul
inc
div
scas
adc
stc
mov
mov
dec
xor
neg
dec
cwde
push
fistp
ret
iret
dec
lods
in
mov
nop
bnd
pop
cmp
or
xor
arpl
iret
div
cwde
cmp
pop
out
pop
cmp
ror
mov
pop
sti
mov
out
(bad)
iret
pop
pop
dec
and
pop
mov
mov
je
xor
push
mov
inc
cli
retf
cld
jno
sub
mov
(bad)
mov
int
clc
nop
int3
div
hlt
enter
xchg
pop
jno
(bad)
in
or
cmp
rol
mov
and
rol
rcl
pop
jne
in
push
clc
out
jg
stc
out
jg
stc
mov
mov
pop
mov
retf
(bad)
lods
add
add
dec
inc
dec
inc
scas
inc
pusha
or
add
add
add
(bad)
(bad)
inc
add
add
add
add
add
add
jns
je
ins
cs
jb
ja
outs
addr16
push
gs
imul
xor
xor
inc
jne
je
jb
cmp
jb
ins
sub
push
jne
ins
imul
imul
bound
xor
data16
xor
fs
add
adc
gs
cs
jb
ja
outs
addr16
imul
add
popa
je
pop
add
add
add
add
add
lsl
add
rcl
add
mov
inc
or
add
or
add
add
add
add
or
add
add
pusha
outs
rol
add
add
inc
dec
inc
add
mov
or
popa
add
jo
pop
jae
add
ret
add
push
ret
add
outs
test
add
adc
inc
inc
push
pop
inc
in
rol
add
adc
or
test
fstp
and
test
nop
sbb
stc
dec
ja
push
jno
(bad)
jo
add
leave
dec
or
fstp
xchg
add
dec
ret
ds
call
jmp
push
fistp
stos
mov
push
push
add
ret
add
test
jg
lahf
adc
push
push
fsubr
and
xchg
cmc
dec
inc
test
or
mov
adc
lds
lock
xchg
jb
ins
xlat
leave
sub
jnp
clts
cli
or
xchg
(bad)
cdq
js
in
adc
dec
cmp
imul
jne
mov
data16
pop
call
push
add
and
lahf
mov
mov
test
xchg
push
cmp
movs
fadd
mov
add
add
inc
add
sub
mov
ja
sti
inc
pop
retf
data16
loope
xchg
jb
lahf
inc
inc
pop
in
imul
popa
push
(bad)
int3
xchg
idiv
in
pop
inc
mov
ret
push
fnstcw
ins
int3
mov
(bad)
icebp
jmp
fdiv
sar
dec
mov
ret
fist
ss
cli
inc
int3
xor
call
pop
inc
movs
and
stc
adc
ins
push
sub
bound
mov
inc
out
lahf
push
fadd
mov
imul
ins
dec
jp
icebp
dec
(bad)
in
sti
mov
jmp
icebp
sbb
into
mov
xor
xor
inc
in
push
nop
jp
cmps
dec
fimul
sar
mov
dec
pop
mov
xchg
mov
sbb
dec
and
daa
push
stos
test
cmp
call
(bad)
iret
xchg
lods
fwait
mov
sub
jmp
in
jge
mov
push
xchg
jae
aam
fwait
es
ds
int3
fidiv
iret
cwde
mov
retf
mov
sbb
jmp
mov
push
xchg
inc
clc
ins
hlt
jne
jns
aad
inc
pop
lods
or
fwait
and
jge
in
(bad)
pop
adc
mov
mov
push
fidiv
stos
rcl
ret
cmps
sub
call
lahf
jg
sbb
shr
loop
enter
call
aaa
jo
sbb
cmp
and
dec
sub
shl
pop
xor
dec
lods
retf
int3
cmps
lock
mov
push
adc
cmp
xchg
ins
lahf
aas
cdq
fwait
pop
cmp
pop
lds
lahf
mov
cmp
jbe
daa
loop
test
out
es
ins
and
shr
mov
call
pop
push
xlat
cdq
cld
sbb
mov
inc
pusha
push
cmp
add
cmp
xor
xchg
inc
cdq
or
fisubr
jns
cmc
inc
je
push
xor
(bad)
in
mov
sbb
mov
xchg
dec
les
inc
dec
pop
sub
mov
cmp
jg
sub
xor
mov
add
jmp
xchg
outs
xchg
mov
cdq
fmul
jmp
or
inc
sbb
popf
mov
xor
outs
(bad)
or
fldcw
inc
loopne
cmps
div
sbb
imul
dec
repz
cli
fiadd
repz
test
add
rcr
bound
jecxz
cmp
shl
mov
cmovge
lds
into
or
mov
test
sbb
push
sbb
fwait
loopne
stos
fisub
sub
xor
adc
pcmpeqw
jmp
sbb
outs
fst
scas
out
jp
loope
mov
cmp
push
adc
xor
pushf
xchg
pop
iret
loope
arpl
cmp
sub
ja
inc
pop
dec
add
pop
shr
pop
dec
xchg
or
xor
test
push
pop
shl
or
cli
pop
xlat
inc
aad
mov
mov
or
clc
loope
sub
pop
sub
lods
pop
sub
adc
out
sub
stos
fidivr
sub
shl
cmp
push
cmp
retf
hlt
lock
aad
bound
mov
push
cmp
mov
sub
cmps
push
lds
mov
lods
jno
cmp
pop
mov
std
int3
not
pop
xor
jbe
mov
xor
call
xchg
dec
and
addr16
mov
or
pop
(bad)
xchg
in
sar
sub
stos
xlat
adc
and
rcl
xchg
mov
gs
dec
inc
pop
repnz
sub
dec
popa
and
addr16
(bad)
subps
jo
push
pop
je
inc
mov
pop
scas
inc
lock
jmp
call
xchg
mov
sti
sub
xchg
aas
ror
mov
sub
push
movs
xchg
xor
cmp
pop
jle
jbe
rcr
pop
mov
dec
stos
lds
(bad)
jo
push
(bad)
sub
mov
mov
in
pop
ror
test
dec
sub
mov
or
ss
adc
pusha
movs
cmps
pusha
maskmovq
test
sub
js
(bad)
push
pop
add
stc
sub
sbb
pop
and
rol
out
aas
mov
cmp
and
sahf
in
sti
pop
push
mov
add
std
jne
aam
es
adc
fisttp
xchg
lds
xchg
dec
push
fwait
jne
out
add
aad
jmp
push
mov
aas
inc
mov
xor
pop
cli
ret
retf
hlt
loope
xchg
popa
push
inc
pop
outs
pop
cmp
mov
dec
push
fcmovu
adc
push
(bad)
jb
sub
inc
fs
and
inc
sar
jnp
out
add
aas
cmp
push
jbe
popa
(bad)
in
ins
dec
repnz
mov
pusha
mov
mov
das
dec
pop
add
test
cmp
or
adc
inc
movs
js
sbb
bound
xchg
test
rcr
xor
rol
mov
lds
pop
jg
sub
fwait
or
jp
bound
jae
mov
push
mov
xor
inc
iret
add
mov
rcr
repnz
iret
push
ins
inc
push
pop
push
(bad)
test
jbe
push
pop
(bad)
in
mov
mov
mov
inc
out
scas
nop
aad
not
xchg
(bad)
mov
lds
cmp
mov
jns
adc
test
repz
and
out
idiv
or
mov
out
mov
dec
push
jmp
mov
das
pop
ds
pop
lds
test
pusha
jno
fbstp
mov
xchg
mov
or
jno
stos
stc
mov
mov
sar
sahf
(bad)
jp
outs
out
movs
call
push
dec
lods
shl
(bad)
ror
in
in
ret
call
les
repnz
sbb
pop
sub
inc
cwde
jbe
clc
mov
push
and
sbb
int
shl
add
enter
cmp
inc
into
fcomp
out
xor
mov
gs
mov
mov
iret
or
jne
pop
imul
into
push
jns
jb
ins
dec
and
xchg
cs
cmps
lds
mov
cmp
icebp
pop
pop
nop
mov
inc
(bad)
pop
cmps
lods
daa
pop
(bad)
xchg
fcomip
cli
out
mov
repnz
je
dec
mov
js
xor
das
push
cld
int
shr
xchg
and
ror
inc
(bad)
out
or
(bad)
pop
cmc
mov
ins
push
jmp
push
test
dec
iret
cmp
add
xchg
add
je
mov
mov
aaa
jmp
xor
nop
call
mov
pop
sbb
mov
cwde
out
xchg
mov
sub
into
mov
inc
pusha
jp
dec
out
cmps
adc
fisub
ss
(bad)
fidiv
cmp
bound
lahf
rol
xchg
fadd
mov
push
cmp
in
or
out
add
pop
inc
in
imul
sahf
aaa
push
stos
cmp
ins
push
mov
sbb
jo
push
in
sub
sub
sbb
xor
or
mov
cli
push
clc
adc
xor
arpl
daa
mov
or
sub
mov
mul
push
xor
lds
mov
cdq
mov
mov
sub
adc
in
mov
cmc
jb
or
xchg
stos
adc
clc
sahf
jo
js
enter
ins
add
inc
inc
sbb
scas
push
adc
(bad)
pop
cmp
std
xor
sbb
ret
mov
and
dec
sti
mov
push
ficomp
jns
test
in
jbe
outs
daa
or
sub
dec
push
std
mov
adc
loop
jnp
sahf
cmp
icebp
inc
push
popa
or
das
dec
and
imul
dec
push
(bad)
pop
ss
dec
jmp
adc
xlat
push
neg
cmps
popf
jge
pop
test
xchg
mov
test
test
int3
xor
sbb
or
xor
test
es
mov
(bad)
enter
and
sub
jecxz
movs
out
fdiv
fwait
sahf
jne
jp
jbe
and
xchg
xor
fistp
inc
outs
sub
mov
cmp
sub
sar
xchg
ins
xchg
xlat
addr16
cmp
call
pushf
push
scas
push
mov
jmp
in
js
retf
shl
mov
sub
mov
ins
sahf
sar
jbe
(bad)
pusha
cmp
mov
xor
mov
cwde
inc
nop
(bad)
push
dec
cs
mov
jne
push
push
mov
out
jmp
jne
pop
sub
sar
sbb
push
ins
or
mov
lods
dec
scas
popf
fcomp
ja
sbb
cld
pop
sub
mov
inc
ds
or
lods
aad
jle
test
pop
int
cwde
imul
sbb
mov
adc
repnz
loop
sub
je
pop
dec
addr16
stc
int3
push
lds
adc
fmul
mov
jmp
imul
clc
inc
pusha
test
adc
push
adc
in
cmps
repz
mov
or
cmps
jno
push
rcr
xchg
bswap
imul
dec
mov
(bad)
cmp
mov
jae
aam
cli
(bad)
mov
inc
dec
(bad)
out
std
cli
mov
fcomp
ins
xor
in
js
cmp
inc
movs
jg
xor
xor
fisub
pop
imul
pop
pop
jmp
push
jmp
adc
mov
je
in
jmp
icebp
cmp
imul
test
dec
in
xlat
mov
leave
faddp
jbe
test
push
mov
add
xchg
test
and
pop
sub
mov
dec
lea
xor
dec
ret
xor
add
or
mov
cmps
(bad)
loopne
pop
and
inc
(bad)
in
loopne
enter
mov
fwait
add
fldenv
pop
scas
sbb
ja
adc
ins
fwait
test
dec
in
outs
mov
jmp
pop
ins
push
loopne
mov
mov
aam
xor
(bad)
and
out
les
loop
pop
push
test
mov
loop
(bad)
jmp
add
xchg
jo
add
pop
or
mov
jb
dec
jns
and
and
pop
mov
test
cmp
xchg
mov
jg
cmps
dec
mov
ror
mov
sub
inc
xor
dec
or
(bad)
push
pop
in
jmp
int3
imul
ss
dec
popf
je
cwde
call
enter
xor
out
jnp
repz
rcr
mov
(bad)
das
pop
inc
je
and
hlt
popf
mov
jmp
xor
xchg
int
cld
ja
fbld
fcmovu
mov
daa
cmp
movs
dec
and
add
pop
(bad)
outs
xchg
mov
push
out
mov
dec
sbb
(bad)
and
(bad)
in
pop
jae
cs
fidivr
or
jmp
mov
mov
add
dec
ret
test
imul
jns
jge
div
les
add
xlat
mov
mov
cmp
mov
push
and
lea
hlt
jo
cmp
mov
jl
inc
sti
inc
xor
(bad)
sbb
int
pop
cli
cli
push
outs
push
mov
dec
(bad)
std
fwait
dec
test
push
retf
loope
fs
sbb
movs
dec
jmp
xor
outs
(bad)
int3
dec
and
add
sub
sub
test
pushf
cdq
lods
pop
rcr
mov
cmp
ss
push
shl
mov
fsubr
cmp
clc
ins
and
out
dec
or
pushf
lahf
gs
jecxz
push
jmp
iret
inc
sub
jge
xor
js
xlat
and
dec
and
push
jl
js
mov
inc
cwde
mov
pop
push
adc
repz
sub
test
and
imul
out
inc
in
loopne
aad
call
xor
cmp
xlat
out
mov
movs
dec
and
xchg
and
xchg
test
das
fucomp
or
mov
jo
jo
and
push
jmp
xor
arpl
ins
xchg
jnp
push
mov
test
xchg
inc
mov
jle
push
test
or
lea
int
sbb
mov
pop
mov
shl
popa
div
xchg
push
std
sar
xchg
cwde
das
or
ins
mov
jle
xor
xchg
xor
push
imul
movs
sahf
jmp
pop
sbb
mov
pop
fidivr
or
sbb
cld
inc
mov
es
sub
js
push
or
hlt
ss
bound
js
clc
(bad)
mov
mov
inc
ins
xchg
xor
mov
cmps
jae
pushf
out
push
mov
xor
pop
mov
cmc
stos
jle
aad
cmps
jmp
mov
push
outs
jno
out
(bad)
outs
(bad)
add
jno
ds
mov
and
lahf
outs
jp
aaa
dec
sbb
mov
and
out
mov
mov
pcmpgtw
sar
inc
xor
or
adc
mov
stc
ins
mov
push
inc
mov
(bad)
push
popf
jle
push
jge
jo
mov
pop
call
out
pop
adc
out
leave
movs
cmp
(bad)
mov
test
in
daa
sbb
data16
or
aam
xchg
dec
push
and
fsubr
fidivr
and
jbe
ja
and
mov
int
and
add
pop
jne
jmp
loope
movaps
or
fild
jnp
out
test
clc
sbb
inc
inc
sub
in
retf
push
cmc
xchg
scas
idiv
inc
test
(bad)
enter
stos
and
push
push
ficomp
mov
xchg
repz
shl
popa
adc
mov
hlt
pop
cmps
test
std
retf
cmp
sbb
or
rol
or
ss
cmp
pop
gs
out
inc
push
arpl
xchg
call
loop
mul
mov
xor
pop
mov
xchg
add
movs
xchg
sub
inc
inc
and
(bad)
scas
xchg
push
cmps
cli
dec
fldenv
xlat
add
hlt
xchg
push
mov
hlt
aaa
mov
push
sbb
xchg
ins
pop
and
arpl
jno
inc
icebp
(bad)
pop
int
sbb
add
sbb
cdq
in
test
pusha
jl
fldenv
sub
jl
xchg
pop
adc
cmp
xchg
(bad)
lods
jl
adc
adc
and
lock
gs
(bad)
mov
idiv
push
fild
data16
sar
sbb
dec
inc
scas
push
test
cdq
sbb
push
dec
jecxz
(bad)
stos
sti
scas
cwde
push
and
nop
mov
ins
movs
sbb
sbb
test
je
movs
pop
fcmovne
std
or
outs
fnsave
mov
(bad)
movs
out
test
cmps
xchg
les
ins
(bad)
adc
out
inc
dec
jmp
mov
inc
dec
daa
into
xlat
inc
dec
jl
scas
xlat
mov
or
xor
jp
xchg
sbb
lods
shl
jns
cdq
push
ficom
add
inc
inc
cmp
add
cld
repz
aas
(bad)
cld
repz
aas
jmp
pushf
cld
dec
add
add
dec
inc
dec
inc
scas
inc
pusha
or
add
add
add
(bad)
(bad)
inc
add
add
add
add
add
add
jns
je
ins
cs
jb
ja
outs
addr16
push
gs
imul
xor
xor
inc
jne
je
jb
cmp
jb
ins
sub
push
jne
ins
imul
imul
bound
xor
data16
xor
fs
add
adc
gs
cs
jb
ja
outs
addr16
imul
add
popa
je
pop
add
add
add
add
add
lsl
add
rcl
add
mov
inc
or
add
or
add
add
add
add
or
add
add
pusha
outs
rol
add
add
inc
dec
inc
add
mov
or
popa
add
jo
pop
jae
add
ret
add
push
ret
add
outs
test
add
adc
inc
inc
push
pop
inc
in
aad
and
pop
add
das
cmp
fwait
mov
imul
adc
jno
sub
mov
jnp
iret
mov
popf
sbb
fldenv
fs
push
ds
(bad)
dec
jl
cmp
or
jl
gs
fst
jmp
mov
inc
xor
scas
sar
out
(bad)
jno
sar
sbb
imul
ds
rcl
cli
mov
or
ret
call
pushf
in
pop
ja
js
aaa
sbb
ret
test
pushf
jae
in
jle
mov
mov
icebp
xlat
push
imul
(bad)
fbld
and
out
xchg
sbb
and
(bad)
push
mov
mov
adc
push
xor
or
retf
fsub
add
push
sahf
icebp
dec
and
adc
or
(bad)
mov
jno
jns
daa
push
jne
cmp
mov
mov
icebp
mov
cs
pop
mov
les
daa
lods
rol
inc
pop
or
and
xor
rcr
push
adc
fdiv
aam
mov
push
out
loopne
mov
inc
push
fsubr
xchg
jb
dec
xor
or
and
jg
and
add
cwde
repnz
in
xchg
xlat
sbb
pop
out
sub
pop
ret
ret
fwait
adc
enter
scas
ins
jecxz
mov
scas
inc
xor
aam
out
xchg
jge
arpl
js
int3
cmp
push
outs
cmp
les
imul
(bad)
fisubr
dec
sahf
adc
push
gs
hlt
mov
push
loop
shl
stc
rcl
int
mov
jle
mov
scas
pop
shl
fistp
sbb
fidiv
repz
sbb
mov
pop
xor
mov
cs
js
pushf
push
mov
inc
push
clc
adc
jo
sbb
cmp
ds
das
imul
push
cdq
add
mov
xchg
js
pop
aas
or
sahf
mov
in
add
fs
adc
(bad)
jge
sbb
push
fdiv
repz
(bad)
retf
fbstp
adc
lahf
xchg
mov
xchg
jle
pop
dec
and
or
push
and
mov
inc
mov
int
jno
mov
mov
sbb
cwde
and
mov
faddp
test
mov
(bad)
(bad)
fisubr
(bad)
cmp
xlat
jbe
outs
cmp
xchg
loop
scas
loop
sub
mov
adc
out
jp
xorps
lea
push
xchg
inc
les
xchg
or
mov
sbb
xchg
push
rol
pop
fwait
les
cs
or
inc
sub
pop
jb
dec
neg
mov
scas
jbe
cmps
js
adc
xor
mov
inc
mov
int3
test
jl
and
adc
pop
daa
scas
aas
inc
stos
mov
push
mov
into
daa
int
jne
push
mov
adc
int
xor
mov
push
iret
inc
pop
jmp
cmps
pushf
inc
and
dec
movs
xor
aad
dec
sub
lea
(bad)
fmul
pop
ret
int
rcl
mov
or
lock
popa
lods
mov
add
stos
sub
cmp
mov
imul
mov
retf
dec
jne
jmp
out
shr
xchg
ficomp
push
int3
ds
inc
jecxz
mov
xchg
ss
icebp
(bad)
hlt
(bad)
xchg
jne
stos
and
push
movs
loop
pop
adc
mov
xor
sub
repz
popf
stc
outs
push
fistp
into
mov
push
cli
call
xchg
arpl
push
and
mov
icebp
sbb
shl
shl
test
mov
cmps
push
push
fucomi
dec
cmps
mov
loope
mov
cmp
inc
out
mov
mov
loop
add
sbb
jg
test
xchg
cmp
pop
in
mov
ins
lahf
sub
ret
push
push
mov
jle
jge
in
shr
pop
sbb
mov
or
stc
push
sahf
lods
inc
pusha
mov
das
pop
jle
(bad)
cdq
sahf
popa
pop
movs
mov
ja
bound
popa
dec
in
rcl
clc
in
addr16
pop
push
mov
and
jl
retf
jno
enter
ja
add
jmp
jno
xchg
sub
stos
into
mov
out
push
xchg
aam
inc
pminub
call
xchg
pop
push
push
sub
fwait
push
cli
shl
mov
dec
jns
or
loope
outs
jp
add
enter
mov
loope
xor
int
enter
adc
add
retf
push
cdq
or
inc
inc
jno
cli
push
mov
push
sub
push
jo
or
std
ins
mov
cs
rcr
pop
and
in
mov
push
jns
mov
cwde
jb
xchg
xchg
jg
dec
sbb
retf
enter
arpl
enter
mov
aas
mov
cmps
pop
sbb
sti
mov
cmp
mov
leave
retf
repnz
push
mov
push
mov
dec
retf
ret
fistp
retf
xchg
sbb
sbb
cld
adc
xor
jns
adc
ds
(bad)
sub
aam
inc
add
pop
cmp
dec
xor
fbld
dec
hlt
aaa
sbb
ret
fisubr
sub
dec
push
daa
add
xchg
or
enter
push
jmp
or
mov
scas
mov
jl
addr16
stos
xchg
icebp
push
test
lods
aaa
sbb
xlat
jle
scas
stc
hlt
jnp
int
jmp
in
loope
cld
jb
cmp
pop
mov
scas
adc
loope
jg
clc
ret
mov
nop
cmp
mov
push
inc
xchg
mov
imul
adc
or
in
mov
mov
rcl
ds
sbb
retf
add
sbb
inc
jmp
xchg
mul
std
and
and
bound
mov
rcr
lods
push
rcr
jp
ja
pop
ds
arpl
std
pop
or
mov
cmp
push
daa
jecxz
into
sub
mov
lds
lods
xchg
pop
mov
pop
jp
xchg
leave
mov
pop
sub
xor
pop
fadd
mov
in
inc
(bad)
movs
ret
xor
add
or
and
fnstenv
xchg
fidiv
stos
(bad)
aad
sbb
ins
mov
lahf
(bad)
sbb
repz
mov
scas
sub
test
xor
shr
xor
inc
das
mov
iret
mov
stc
dec
push
sbb
jl
pop
mov
adc
call
inc
aad
(bad)
loop
(bad)
repnz
xor
inc
popa
out
fsub
jle
(bad)
std
pushf
jno
mov
adc
js
add
cmc
mov
cmps
xchg
xor
mov
les
(bad)
out
push
jno
pop
jae
jmp
je
sub
pusha
in
sbb
pop
imul
cmp
outs
lahf
xchg
out
sbb
mov
imul
push
fcmove
and
dec
jg
lock
fstp
shl
jl
dec
retf
(bad)
(bad)
push
sbb
jmp
ja
addr16
add
ins
imul
les
sub
pop
sar
aam
imul
aad
or
std
dec
mov
mov
xor
sbb
jecxz
cmp
mov
out
mov
test
adc
inc
daa
xchg
lock
in
dec
sub
cmp
popa
stc
shl
aad
jae
mov
fistp
enter
mov
mov
push
mov
adc
into
pop
not
scas
scas
cmp
test
test
fwait
je
fsubrp
stc
sti
ds
mov
mov
push
iret
mov
in
cmps
inc
mov
jg
or
icebp
call
sbb
test
scas
call
pushf
fcomp
cld
or
addr16
lods
xor
cdq
jno
icebp
rcr
sub
ret
jne
xchg
jge
xor
sbb
sbb
adc
mov
ret
in
shl
mov
iret
inc
call
fucompp
bound
ret
push
adc
add
cmp
jbe
test
and
aad
in
stos
loopne
sub
mov
test
nop
or
push
push
rcl
dec
call
ret
fcomip
push
cmps
dec
inc
out
imul
stos
aas
outs
sar
jnp
push
mov
shr
mov
xchg
les
loopne
rcl
ja
ss
movs
(bad)
jb
rcl
aas
mov
jb
hlt
sbb
fwait
jl
mov
sbb
aad
call
sbb
pop
das
add
xor
fs
push
jle
push
sbb
call
in
gs
inc
sbb
xchg
mov
sbb
out
pop
nop
cwde
jge
mov
sbb
dec
mov
sub
sbb
jb
(bad)
shl
(bad)
hlt
xchg
(bad)
sub
out
sbb
call
add
stos
jb
cmc
ja
push
sti
cdq
adc
stc
dec
add
cwde
jno
mov
adc
(bad)
jl
inc
lods
pusha
fsubr
mov
sbb
xor
mov
(bad)
xchg
xchg
push
cmp
dec
mov
jecxz
outs
icebp
rcl
mov
pop
out
push
sub
sub
jle
sar
js
dec
arpl
and
mov
in
mov
mov
aas
push
jno
pusha
jmp
and
pop
test
cmp
mov
movs
icebp
aam
jbe
and
cmp
cmp
add
mov
pop
pushaw
sub
out
test
jo
ja
into
push
out
fwait
jmp
fldpi
stc
stos
inc
add
ins
(bad)
jb
jl
pop
sub
mov
in
lahf
xor
loope
or
inc
xor
icebp
cdq
rcr
xchg
(bad)
push
dec
cli
popf
std
jmp
jle
dec
scas
lea
in
mov
test
mov
nop
mov
dec
mov
add
dec
jmp
cmp
inc
push
lds
cmp
fadd
mov
es
mov
loope
push
movs
xchg
and
lea
aaa
ror
scas
mov
mov
cmp
gs
cmovno
js
cmc
pop
into
(bad)
cdq
pop
or
and
sub
pop
mov
push
jp
inc
cdq
xchg
int3
mov
lahf
pusha
hlt
pop
add
push
aad
scas
xchg
add
push
sbb
push
(bad)
not
or
aam
mov
stos
test
mov
inc
mov
jl
adc
push
sub
loope
aaa
repz
mov
aaa
inc
movs
call
xor
fcomp
fucomi
scas
ja
cli
push
std
add
xor
call
fcmovu
cmp
or
inc
jmp
lods
cmp
cmps
fidivr
push
imul
or
ins
adc
ja
leave
out
lea
sub
xor
mov
dec
jl
add
out
out
dec
in
sub
fwait
pop
ficomp
pop
aam
pop
ret
mov
addr16
or
sbb
ins
adc
aas
mov
xchg
xchg
jp
imul
test
loopne
popa
or
data16
jnp
test
mov
cmp
popf
stc
ret
aas
lahf
xor
repnz
mov
sar
jp
sub
push
jecxz
arpl
(bad)
lahf
popf
fadd
addr16
pop
xor
sbb
jnp
call
jecxz
aam
mov
imul
cmp
sti
loope
jge
cmp
jge
inc
div
lock
in
mov
rcr
cmp
mov
push
js
add
pop
(bad)
movs
cmp
xchg
and
adc
adc
jg
jg
jae
adc
and
and
repnz
movs
sub
mov
sub
or
mov
(bad)
cli
xchg
push
out
outs
jp
xchg
add
pop
jg
dec
mov
icebp
stos
je
cld
out
cmp
xor
ss
push
out
imul
xchg
stos
out
std
retf
mov
pop
xchg
xchg
scas
add
push
inc
outs
jl
std
clc
(bad)
mov
out
sbb
fbld
stos
test
or
gs
xchg
mov
mov
inc
mov
mov
dec
xlat
shl
mov
(bad)
rol
and
mov
and
mov
xchg
pop
fiadd
fcmovu
sub
loopne
xchg
push
push
jl
test
outs
aaa
icebp
jmp
or
psrad
xchg
jmp
mov
mov
sbb
lea
add
cmps
xchg
cmp
pop
sub
movs
dec
daa
stos
or
jmp
adc
enter
popf
lds
ins
cs
cmc
and
or
inc
imul
jl
es
push
call
ins
(bad)
and
push
stos
pop
mov
mov
xchg
dec
add
mov
rcr
jmp
test
mov
(bad)
(bad)
pop
dec
fidivr
aas
clc
aam
jne
xor
dec
imul
sub
and
push
or
add
inc
jl
gs
lock
push
mov
ds
or
test
pop
cmp
mov
aas
adc
jbe
arpl
in
lds
(bad)
cli
popa
ss
jl
pushf
mov
mov
movs
dec
clc
call
add
jge
sbb
dec
lods
loop
adc
cmps
cmps
xor
xor
pushf
mov
std
push
xchg
adc
mov
xchg
outs
(bad)
imul
push
jp
or
sub
sti
mov
es
loopne
out
fadd
(bad)
pushf
shl
pop
cs
xchg
sub
xor
inc
mov
repnz
and
dec
leave
xchg
sub
gs
add
sub
fucomi
out
xchg
out
sbb
cs
jmp
add
add
pop
bound
push
xchg
stos
mov
push
popa
int
scas
jbe
adc
xor
pop
push
xchg
pop
(bad)
ins
dec
or
and
add
fild
dec
pop
sbb
js
nop
in
add
or
addr16
clc
fcom
or
fwait
aam
mov
adc
pop
mov
mov
aam
push
sbb
jo
or
and
leave
sub
ja
push
scas
push
scas
push
sub
fstp
push
(bad)
int
nop
sub
adc
pop
push
ret
lea
lods
sub
aad
ret
mov
sar
jge
mov
xchg
cdq
out
adc
mov
arpl
jb
std
mov
sub
cmps
inc
in
(bad)
aam
je
sub
scas
retf
in
sti
or
cwde
ins
leave
fisubr
call
mov
jo
mov
cdq
jge
sbb
and
std
sub
jmp
mov
inc
test
out
shr
mov
neg
pop
pop
aad
or
jns
inc
xchg
mov
dec
xchg
sub
das
xor
test
(bad)
in
xor
in
jl
mov
imul
mov
push
das
jne
fiadd
jb
jl
push
fidivr
sar
mov
call
xchg
cmps
adc
retf
es
ds
lahf
loop
int
rcl
sub
test
dec
movs
xor
(bad)
inc
sbb
dec
pop
mov
shl
mov
and
mov
pop
or
popf
cwde
imul
cmc
lods
mov
mov
and
fimul
push
sbb
adc
adc
test
dec
dec
cld
mov
hlt
push
imul
and
fiadd
sub
hlt
daa
in
aas
clc
jge
fs
ja
imul
and
das
jmp
iret
bound
es
or
mov
sub
xchg
loop
xchg
sbb
inc
xchg
push
movs
xchg
jge
cmp
fwait
cli
mov
sub
xor
jmp
lods
cmp
pop
xchg
bound
addr16
push
jo
xchg
dec
xlat
jge
ja
jmp
lahf
(bad)
cld
out
(bad)
stc
iret
jg
repz
add
punpckhbw
dec
push
add
add
dec
inc
dec
inc
scas
inc
pusha
or
add
add
add
(bad)
(bad)
inc
add
add
add
add
add
add
jns
je
ins
cs
jb
ja
outs
addr16
push
gs
imul
xor
xor
inc
jne
je
jb
cmp
jb
ins
sub
push
jne
ins
imul
imul
bound
xor
data16
xor
fs
add
adc
gs
cs
jb
ja
outs
addr16
imul
add
popa
je
pop
add
add
add
add
add
lsl
add
mov
mov
inc
or
add
or
add
add
add
add
or
add
add
pusha
outs
rol
add
add
inc
dec
inc
add
mov
or
popa
add
jo
pop
jae
add
ret
add
push
ret
add
outs
test
add
adc
inc
inc
push
pop
inc
in
rol
loopne
xchg
mov
scas
jnp
cmps
cdq
outs
rcr
cmps
jae
cmp
xchg
mov
dec
ja
xchg
ins
jp
fimul
repnz
jns
xor
push
loopne
xor
or
mov
dec
imul
mov
pusha
ja
aad
xor
mov
retf
sub
test
ja
mov
xor
jle
or
arpl
in
xor
js
in
sub
jnp
popa
aas
sub
sub
imul
mov
(bad)
lds
imul
dec
mov
jp
das
cs
ficom
mov
cmp
ds
adc
jne
mov
in
loop
or
fmul
add
imul
out
xchg
inc
inc
(bad)
ds
xor
cmc
arpl
es
dec
dec
pop
in
push
loopne
adc
cmp
lock
or
mov
outs
cmp
fdiv
shr
test
push
add
push
stos
or
xor
fwait
shl
hlt
fsubr
lahf
or
fcomp
xchg
(bad)
leave
ss
lea
xor
retf
jle
mov
or
cmp
cmc
out
addr16
repnz
or
pop
sbb
stc
adc
test
cmp
or
ret
ss
enter
cmp
push
and
add
or
pushf
je
cmp
lock
ss
sbb
fimul
sti
jb
mov
pop
pop
int
add
ins
sbb
mov
outs
add
scas
xchg
and
mov
push
jmp
sti
xchg
sbb
in
test
out
sahf
cli
xor
std
(bad)
shl
push
push
bound
call
mov
retf
(bad)
shl
and
mov
pusha
shl
repnz
dec
dec
and
xchg
stos
pop
dec
jp
jo
and
mov
retf
sbb
push
cmps
push
adc
int3
mov
cmp
mov
pop
push
inc
jbe
push
ret
nop
dec
cmp
adc
aad
stos
inc
lods
int3
sub
cmp
std
fdivr
xor
sar
jno
mov
or
lods
jb
aaa
int3
xchg
mov
retf
mov
xor
xchg
mov
push
xchg
pop
xchg
sbb
imul
fs
cmp
mov
mov
dec
lock
in
div
out
adc
rol
call
imul
dec
mov
imul
mov
movs
sbb
pop
popa
xchg
ror
and
hlt
scas
fwait
inc
xor
mov
retf
cmps
into
pop
test
push
movs
clc
pop
icebp
mov
hlt
into
fsubr
mov
adc
nop
sbb
test
xor
mov
mov
into
adc
xchg
in
pop
into
mov
xor
lea
test
ds
mov
xor
enter
mov
fwait
or
loopne
or
fld
sub
xchg
sub
cmps
scas
cmp
push
arpl
fbld
mov
mov
(bad)
(bad)
jno
jmp
inc
pop
sub
fdivr
xor
cmp
dec
aaa
mul
movs
mov
pop
xor
retf
shl
aad
(bad)
clc
rcr
push
xor
jge
jg
xchg
pop
push
popf
mov
fwait
imul
sbb
mov
cmp
mov
xor
data16
mul
movs
pop
pop
clc
into
rol
mov
aam
js
fild
adc
xchg
mov
jl
xchg
push
ss
xchg
outs
or
and
pop
mov
push
mov
out
out
int
xor
or
inc
or
jp
test
mov
mov
adc
imul
pushf
fsub
fisttp
hlt
push
sahf
cwde
jmp
loopne
pop
js
mov
xchg
(bad)
mov
lahf
lds
dec
ins
ins
lock
jae
pop
jo
imul
mov
inc
popa
sub
xchg
xor
lea
pusha
mov
lods
mov
and
cmp
es
fst
into
inc
jmp
sub
jmp
mov
clc
repz
fldenv
cmp
int
jle
and
cs
pop
jg
div
and
xchg
lods
xchg
mov
push
int3
sub
loop
xchg
pop
xchg
imul
stos
ret
mov
mov
dec
imul
jae
inc
mov
jmp
jnp
out
lods
adc
test
movs
adc
lahf
cmp
cmp
rcl
add
jecxz
dec
imul
outs
mov
cdq
scas
xchg
push
xchg
sub
adc
push
out
idiv
out
add
push
xor
inc
pop
imul
jle
and
lds
sbb
pop
jbe
out
jp
out
xchg
(bad)
or
push
mov
cmps
mov
inc
mov
cmp
out
or
pop
test
cmp
shl
test
int
in
mov
lds
add
rol
mov
neg
inc
movs
push
cmp
cdq
jecxz
hlt
bswap
sbb
dec
inc
aad
mov
imul
mov
(bad)
mov
ret
dec
cmovle
xchg
push
movs
scas
jmp
outs
inc
in
push
stc
or
fstp
pop
dec
aaa
xor
sahf
sbb
call
dec
test
rcr
cmc
or
bound
jno
imul
add
hlt
mov
jns
aaa
mov
dec
outs
mov
or
push
jmp
fld
xor
sbb
outs
jp
lds
leave
sbb
repz
cmp
loope
pop
sbb
pop
push
adc
sbb
and
cmp
ja
push
inc
xchg
mov
fcomp
mov
pop
test
sub
call
jnp
mov
jmp
stos
ja
aad
sbb
fsubr
mov
mov
lock
jne
cmp
xlat
mov
or
adc
mov
iret
pop
jge
shr
data16
jae
aaa
mov
or
mov
cmp
aam
sbb
loope
xchg
fcmovbe
jmp
mov
loop
mov
sub
add
mov
int3
stos
xor
pop
ins
adc
adc
ins
xor
rcr
das
jmp
adc
popf
add
in
shl
push
lods
leavew
push
ss
call
sbb
js
fdiv
and
adc
sub
adc
jno
lock
out
xchg
inc
mov
int3
pop
fmul
in
xor
mov
(bad)
pop
or
(bad)
sbb
mov
cmps
jo
jb
xor
in
lds
in
jnp
clc
pop
cli
mov
out
sbb
adc
retf
arpl
ret
mov
shr
gs
aaa
daa
push
adc
cmp
jge
outs
pop
in
arpl
and
test
sub
xor
mov
ret
sub
data16
mov
add
or
jg
pop
lds
sub
sbb
cmp
inc
out
je
and
jae
jmp
mov
sbb
mov
sbb
dec
sbb
sub
lds
fsubr
fstp
jge
adc
repz
int
xor
cmc
rcl
and
mov
and
lahf
pop
push
bound
stc
mov
hlt
leave
mov
mov
loope
(bad)
(bad)
push
lods
add
leave
ficom
fistp
mov
jmp
lds
les
ficom
or
in
movs
or
inc
jmp
retf
sbb
mov
push
pushf
test
mov
dec
mov
xchg
mov
jle
jmp
ror
out
jb
cmp
das
icebp
loope
jb
sub
cmc
cmp
adc
mov
mov
jb
mov
(bad)
sub
or
mov
test
lods
test
sbb
xchg
shr
or
xchg
out
xor
test
(bad)
jmp
pop
cmps
pusha
mov
push
push
sbb
pushf
jl
xchg
out
(bad)
leave
lds
cmp
int
lahf
pop
cmp
mov
jmp
sub
stc
xchg
xchg
jae
imul
es
(bad)
movs
sbb
add
xor
push
sub
add
jo
pop
outs
lock
jle
jno
ror
mov
out
jp
inc
nop
or
test
into
popf
xchg
test
adc
adc
js
cmps
jno
inc
mov
sahf
fsubr
(bad)
fisubr
icebp
add
xchg
out
or
adc
lea
outs
sbb
mov
push
adc
fs
or
fnstcw
ffreep
in
bound
in
lahf
or
(bad)
dec
lods
shl
ficomp
jl
jne
or
es
or
imul
(bad)
sub
sbb
loope
mov
mov
cmp
sbb
cmp
push
or
dec
fbld
int3
sub
(bad)
dec
push
jb
pop
mov
out
inc
xchg
push
iret
out
xchg
mov
daa
rcl
pop
bound
mov
jns
xlat
or
movs
xchg
icebp
in
fwait
sub
in
jl
xor
xor
mov
inc
out
add
push
stos
or
add
jge
mov
addr16
shr
js
(bad)
arpl
loope
xor
pop
pop
mov
ror
in
jns
xor
lahf
mov
mov
and
popf
std
test
test
lods
mov
pop
pop
jne
cmp
(bad)
stos
mov
repz
cmp
mov
(bad)
sahf
sbb
rcl
push
fstp
mov
mov
xor
aaa
sbb
jle
jae
pushf
xchg
popf
jmp
inc
jno
outs
jbe
or
push
je
mov
les
push
mov
add
xchg
dec
mov
pop
dec
shl
jg
test
push
mov
dec
dec
fsubp
ds
lods
ja
push
pop
and
out
xor
fld
cmp
in
frstor
imul
retf
cmp
push
xchg
and
or
and
dec
(bad)
mov
pop
jmp
xchg
mov
ffreep
add
pop
outs
pusha
jg
movs
and
inc
out
cwde
cmps
jno
popf
jmp
push
mov
cmps
jnp
icebp
push
cmp
mov
or
loop
add
add
dec
popa
or
sub
rcl
je
mov
sbb
cmp
inc
mov
add
out
dec
mov
sbb
(bad)
xor
pop
fnstcw
shr
push
push
adc
push
xchg
(bad)
enter
fldenvw
pop
cli
fiadd
inc
ficom
cmp
pop
xor
or
inc
and
mov
push
mov
push
dec
push
sub
add
or
sbb
retf
mov
and
movs
adc
push
sti
call
loope
outs
and
mov
test
ja
test
inc
adc
inc
icebp
or
(bad)
iret
add
hlt
rol
mov
lds
mov
shl
xchg
mov
outs
int
movs
inc
aas
sub
jmp
sti
ror
push
addr16
les
fwait
jmp
or
(bad)
sbb
out
popf
mov
pop
div
(bad)
out
xor
in
mov
mov
push
add
jno
js
pop
mov
daa
sbb
(bad)
jmp
mov
mov
push
mov
mov
aam
pop
xlat
ret
inc
mov
cmp
jno
jns
xor
int3
inc
mov
rcl
out
push
or
aam
pop
mov
aaa
pop
frstor
dec
add
sub
loop
fmul
mov
xchg
mov
dec
mov
and
jp
call
les
sahf
cmps
jp
inc
mov
xor
daa
add
pop
fcom
enter
inc
out
leave
mov
fwait
leave
sub
pop
(bad)
mov
jnp
pop
mov
adc
dec
sbb
lods
sub
dec
mov
sub
mov
push
push
inc
dec
dec
stos
sub
dec
dec
mov
mov
sub
xor
xor
pop
inc
cwde
xor
popf
into
test
repz
out
call
inc
aam
(bad)
mov
retf
sub
adc
pop
pushf
shl
mov
mov
dec
push
jmp
mov
sub
call
scas
retf
push
js
push
sub
cld
mov
je
pop
inc
mov
imul
inc
sbb
cmp
je
dec
mov
je
xchg
sub
xchg
mov
inc
push
xchg
cmps
pop
icebp
jp
dec
and
ret
les
mov
hlt
dec
xchg
imul
mov
or
cmp
shl
add
iret
out
dec
xchg
mov
mov
jp
daa
sub
pusha
rcr
mov
sub
cmp
fstp
push
sbb
imul
dec
lods
ins
jge
jg
push
fs
or
and
fistp
gs
stos
or
lods
jmp
sahf
push
rcl
jbe
or
mov
(bad)
and
je
jnp
jns
cmp
nop
addr16
iret
icebp
dec
mov
daa
mov
lds
pop
or
mov
sbb
or
cmp
or
out
ds
cmc
sbb
cdq
push
and
sbb
push
sbb
imul
fs
and
push
dec
scas
mov
int3
xlat
hlt
sbb
add
dec
xor
std
mov
push
pop
jns
scas
add
dec
pop
mov
in
xlat
cmp
and
xor
cdq
out
loope
icebp
nop
sub
aaa
push
repnz
sub
jnp
xlat
xor
xchg
dec
pop
loope
hlt
sbb
mov
jle
(bad)
(bad)
xor
lods
jb
add
sub
rcl
cmps
jge
inc
stos
pop
repz
cmp
out
mov
shl
inc
in
push
call
arpl
ret
jns
and
xor
sub
pop
loopne
sub
xchg
popa
outs
jne
sub
sbb
jl
scas
nop
out
sbb
mov
mov
cmp
(bad)
fadd
mov
cmp
setnp
out
mov
sub
arpl
inc
shl
loope
push
int3
push
mov
sub
inc
mov
and
std
es
ins
fimul
cwde
stc
shl
sub
sbb
pop
jmp
push
lahf
xor
xchg
iret
push
loopne
push
and
test
cmp
cdq
and
movs
retf
push
push
outs
lods
je
jb
add
or
adc
ins
or
xchg
scas
fidiv
push
test
and
in
test
cdq
ja
test
repnz
mov
loopne
mov
mov
and
jmp
ficom
mov
sbb
div
inc
sar
jae
mov
je
push
xor
push
mov
sbb
sti
out
jo
sub
jmp
mov
ror
mov
adc
push
ret
pop
sbb
ror
dec
sahf
shl
jmp
pcmpgtb
cmp
inc
inc
mov
nop
push
adc
fs
adc
outs
mov
mov
mov
scas
cmp
ins
call
vshufpd
push
aam
bound
arpl
mov
repz
or
xor
cmps
jae
add
xor
mov
jnp
xchg
push
leave
neg
mov
or
jns
sbb
fimul
pop
xchg
pop
ins
or
dec
xchg
repnz
popf
clc
jle
js
dec
lods
inc
fnstcw
adc
out
dec
lea
aaa
pop
lods
inc
push
jg
lds
adc
or
sbb
out
mov
fisttp
arpl
or
js
fbld
leave
mov
fild
push
jl
ret
inc
mov
in
retf
mov
cmp
mov
repnz
les
fisubr
js
cs
sbb
adc
iret
aas
(bad)
cld
repz
aas
call
add
jg
and
(bad)
mov
add
add
dec
inc
scas
inc
pusha
or
add
add
add
(bad)
(bad)
inc
add
add
add
add
add
add
jns
je
ins
cs
jb
ja
outs
addr16
push
gs
imul
xor
xor
inc
jne
je
jb
cmp
jb
ins
sub
push
jne
ins
imul
imul
bound
xor
data16
xor
fs
add
adc
gs
cs
jb
ja
outs
addr16
imul
add
popa
je
pop
add
add
add
add
add
lsl
add
rcl
add
mov
inc
or
add
or
add
add
add
add
or
add
add
pusha
outs
rol
add
add
inc
dec
inc
add
mov
or
popa
add
jo
pop
jae
add
ret
add
push
ret
add
outs
test
add
adc
inc
inc
push
pop
inc
in
rol
loopne
xor
xor
mov
fnstcw
dec
int3
mov
fisttp
cmps
xchg
jecxz
popf
cmps
fwait
jmp
and
sahf
pop
add
sub
jmp
add
fnstenv
dec
imul
cmp
mov
ins
arpl
sbb
popf
mov
imul
arpl
call
and
adc
ds
mov
sub
and
mov
or
xlat
mov
lds
inc
or
out
mov
xchg
in
les
outs
adc
fnstcw
icebp
out
mov
imul
xor
push
in
arpl
shl
pop
mov
jns
adc
neg
pxor
pop
je
mov
out
pop
ss
in
lahf
mov
movs
scas
adc
xor
sahf
mov
(bad)
sbb
pushf
mov
dec
jecxz
(bad)
xor
cmp
and
jge
js
daa
pop
cmp
and
add
das
push
inc
push
mov
mov
movs
mov
repnz
sti
clc
retf
int3
jns
das
pop
cld
sbb
sbb
fs
jne
xor
pushf
pop
sbb
movs
mov
xchg
jle
mov
and
out
push
rol
in
bound
fild
call
xchg
repnz
xchg
mov
es
sub
ins
cmp
cmp
fistp
push
fsub
add
push
shl
jl
sub
bound
adc
(bad)
adc
cmps
rol
scas
pop
and
push
loope
out
bound
xchg
std
div
push
xor
push
jmp
aad
jb
cmp
dec
rcr
in
adc
mov
and
mov
dec
sbb
(bad)
loope
inc
ss
xchg
(bad)
push
sti
xchg
push
cmp
pop
out
addr16
cmp
loop
retf
jmp
mov
mov
sbb
dec
clc
pop
sti
ss
fnstsw
cmp
dec
stc
or
aam
lock
add
icebp
imul
das
xchg
test
jo
xchg
cmp
sub
sbb
jg
push
jge
jae
sbb
xlat
stos
repnz
mov
in
mov
pushf
adc
mov
adc
and
xchg
shl
call
adc
mov
or
loopne
scas
adc
adc
fldcw
test
out
add
mov
in
out
(bad)
rol
jno
add
pop
mov
jnp
fnstenv
xlat
mov
mov
sahf
jae
popa
(bad)
cmps
add
dec
jle
test
jecxz
fisttp
sbb
xchg
add
mov
loop
and
mov
addr16
sub
jmp
add
das
leave
shl
stos
mov
or
fistp
adc
lahf
pop
pop
lea
stc
or
add
int3
cmps
xchg
retf
dec
push
das
inc
push
enter
retf
push
std
adc
aad
test
dec
pop
enter
stos
out
sbb
fwait
repnz
popf
dec
retf
sti
sub
xchg
sub
mov
pop
add
daa
dec
and
pop
out
sbb
mov
mov
mov
cmp
adc
enter
not
pusha
adc
cmp
mov
mov
xchg
sahf
cmp
mov
inc
test
push
aas
imul
pop
xchg
test
jp
inc
dec
loope
pop
cmp
xchg
popa
shl
jae
xchg
xor
mov
mov
mov
ret
neg
pop
out
xor
sahf
enter
xchg
xchg
xchg
nop
test
nop
push
inc
sub
mov
cmp
xlat
je
mov
and
mov
stc
call
push
mov
sbb
mov
(bad)
fbstp
and
sbb
adc
sub
sbb
test
lahf
jno
pop
enter
pop
mov
jg
repz
aas
lock
add
fidiv
cmp
loop
mov
test
mov
cmp
mov
mov
retf
stos
xchg
sbb
cmp
or
add
fnsave
sbb
xor
jae
mov
imul
imul
test
popf
(bad)
mov
push
inc
(bad)
mov
jnp
xor
fsub
xor
jg
add
scas
dec
cli
data16
sub
adc
and
jecxz
add
or
sbb
mov
hlt
mov
or
jnp
xor
jne
mov
pop
mov
xchg
push
retf
jge
cld
into
out
cmp
nop
mov
lods
pop
fwait
test
sbb
mov
add
aam
cs
cdq
repnz
std
dec
jno
cs
or
push
aaa
and
pop
stos
ror
movs
fadd
es
loop
dec
dec
std
jmp
sti
call
out
daa
jbe
rcl
pop
into
out
lods
mov
cmp
adc
cmp
add
push
data16
je
xchg
adc
sbb
or
push
or
call
loop
add
xchg
sub
in
call
int3
mov
adc
clc
dec
outs
(bad)
loope
push
adc
push
cmps
xor
inc
adc
(bad)
fwait
and
lods
std
cmc
and
cmp
xchg
ror
ror
adc
test
xor
add
and
hlt
mov
mov
(bad)
cdq
nop
push
mov
push
dec
dec
lds
xchg
les
ins
(bad)
icebp
pop
mov
loope
adc
mov
mov
hlt
fisub
dec
xchg
xchg
sbb
call
popf
loop
fwait
sar
lods
xchg
jle
mov
pop
cwde
add
push
mul
jp
jo
mov
and
inc
es
call
retf
lods
push
xor
imul
(bad)
lods
mov
stc
push
enter
dec
mov
cld
push
(bad)
test
test
in
mov
mov
mov
aad
mov
jbe
sbb
push
dec
lods
lea
popf
push
das
mov
es
fs
in
cmps
mov
(bad)
loop
cmp
stos
daa
push
dec
mov
leave
mov
cli
xor
call
xor
repnz
adc
ret
fisttp
cmp
pop
xchg
sbb
mov
push
jge
les
ja
or
ret
test
mov
cmps
mov
adc
into
mov
(bad)
cmps
pop
int
fmul
ja
mov
aam
outs
mov
test
add
xchg
(bad)
out
scas
js
pop
push
in
push
mov
ror
mov
xor
or
(bad)
dec
xchg
sub
mov
jnp
mov
sbb
jae
push
jmp
and
mov
stos
adc
pop
(bad)
movs
sbb
pop
rol
je
pushf
ss
cmps
loopne
fisub
movs
sub
push
inc
and
adc
xor
and
mov
xchg
and
loopne
xchg
call
jmp
(bad)
dec
add
in
jl
loop
sbb
cdq
daa
push
int3
jg
test
loop
dec
xchg
mov
mov
mov
sub
dec
sbb
cdq
xor
aad
clc
retfw
mov
movs
jnp
adc
inc
mov
(bad)
and
push
sub
xchg
cdq
fwait
xor
int3
jns
retf
cmp
out
or
xor
cmp
or
push
xor
dec
mov
sbb
xor
xchg
nop
mov
xchg
cld
mov
iret
pop
and
sub
adc
mov
inc
xor
jle
cld
cli
jge
pop
out
and
fistp
cli
shl
inc
jae
pop
les
pop
dec
and
shr
(bad)
or
cmp
sub
cmp
and
cmp
xchg
stc
imul
stos
mov
cmp
aas
lods
cmp
or
sbb
sbb
xchg
scas
jbe
sub
mov
cmovbe
or
jle
call
jns
(bad)
inc
(bad)
sbb
or
vmovntdq
xor
push
aas
jg
mov
cwde
sub
outs
arpl
mov
cmp
shl
(bad)
fcom
fs
ins
pop
mov
jns
aam
pop
mov
sub
dec
mov
in
cwde
xchg
xchg
scas
or
mov
jp
addr16
adc
loop
inc
add
xchg
and
sub
leave
dec
and
push
sub
push
cmp
aam
out
loop
sub
adc
fs
cmp
or
dec
xchg
cmp
movs
cmp
fidivr
fimul
push
jecxz
sub
xor
inc
inc
jbe
push
arpl
pop
jmp
or
fdivr
mov
cmps
jne
jno
inc
add
or
jl
mov
inc
sub
jmp
adc
movs
in
in
xchg
bound
ret
dec
cmp
ret
cmp
jbe
fdivr
mov
loop
shr
jmp
sub
and
lahf
lds
jmp
fwait
retf
div
xor
out
push
call
les
inc
jecxz
mov
xor
dec
xor
mov
test
(bad)
in
fist
xor
cmp
rcr
dec
jbe
ficomp
call
push
movs
test
lods
push
mov
or
jmp
or
cmp
xchg
test
daa
lods
(bad)
adc
fcom
push
nop
aad
jae
dec
xor
ss
sbb
xchg
cmp
ret
or
retf
xchg
dec
push
into
inc
xchg
out
or
inc
sub
jne
xchg
jb
fidivr
pusha
sbb
inc
ds
adc
popf
popf
shl
dec
pop
mov
sbb
ja
(bad)
ins
inc
fnstenv
fs
xchg
adc
ins
mov
cmps
mov
cmp
mov
inc
neg
xchg
pop
out
fdivp
fsub
sub
ss
pop
sbb
add
js
call
mov
mov
mov
test
inc
and
ins
fwait
mov
stc
in
stc
pop
aam
stos
mov
xor
inc
push
xchg
jo
mov
adc
outs
call
in
and
nop
adc
sbb
std
mov
dec
xor
retf
add
into
lahf
push
int
sub
adc
sub
or
sahf
xlat
ss
int3
inc
gs
mov
xchg
mov
outs
inc
cmp
xor
mov
jge
sub
ficomp
mov
test
jne
cmp
push
adc
aam
push
adc
ds
scas
popa
cmp
mov
mov
push
pop
jmp
inc
adc
movs
mov
outs
rcr
jge
pushf
les
adc
fist
sahf
and
aad
ds
push
nop
adc
lea
sbb
std
adc
add
neg
sbb
dec
dec
and
repnz
jns
cld
cmps
imul
add
inc
cmp
pop
cmp
pop
inc
mov
xchg
pop
into
test
rcl
stos
xchg
aaa
int
or
dec
or
mov
add
(bad)
sbb
sub
or
cli
daa
add
je
fsubr
xlat
cmp
dec
and
xchg
ret
fs
cmp
or
xchg
(bad)
xor
push
imul
sub
push
fld
cld
jp
ins
sub
lahf
add
xchg
movs
scas
push
xchg
mov
cwde
ret
into
xchg
ins
mov
mov
pop
mov
xchg
arpl
inc
add
sbb
sub
retf
(bad)
cmps
and
sti
add
dec
mov
aam
(bad)
in
mov
mov
and
and
add
pop
int
add
xchg
xor
push
popf
xchg
cmps
pop
fsub
xchg
sub
adc
hlt
neg
jne
xor
loope
cs
(bad)
mov
ret
js
push
push
inc
sbb
stos
gs
pop
mov
dec
(bad)
pushf
clc
cmps
mov
jae
sub
fld
mov
loop
mov
pop
nop
and
popa
jp
(bad)
inc
cmps
lods
mov
push
and
jne
sbb
jns
(bad)
mov
push
sub
shr
not
dec
fimul
add
popa
sbb
movs
mov
mov
loopne
push
test
aas
(bad)
fisubr
cmp
fdivr
mov
push
in
hlt
xor
(bad)
std
mov
add
loope
and
(bad)
in
jge
or
dec
add
outs
jne
lods
jo
mov
or
cmps
aaa
scas
sub
mov
aaa
arpl
cmp
push
mov
cmp
cmp
fistp
lods
push
daa
push
push
not
xchg
push
imul
sbb
mov
in
mov
data16
daa
or
(bad)
ja
push
imul
sbb
(bad)
loop
popf
adc
rcl
mov
movs
daa
adc
xor
pop
das
xchg
dec
sti
add
jecxz
xchg
jmp
sbb
xor
aad
inc
xchg
lds
ret
addr16
jnp
fsub
outs
les
or
scas
ds
jg
imul
stos
mov
js
sti
pop
pop
or
inc
push
stos
push
repnz
ret
push
into
enter
and
(bad)
lahf
repnz
mov
push
mov
sub
pop
and
out
mov
adc
jp
dec
(bad)
call
and
sub
or
fwait
mov
in
ficom
outs
divps
push
pop
mov
xchg
mov
ret
aad
mov
adc
or
dec
adc
mov
cld
(bad)
div
leave
push
dec
and
sub
adc
ret
daa
inc
adc
imul
lahf
movs
xchg
jge
int
popa
dec
xor
or
cdq
lods
mov
mov
xchg
push
in
pushf
sub
jl
mov
clc
movs
push
adc
pop
add
sub
jbe
and
test
mov
xchg
add
jmp
das
shl
fwait
iret
hlt
mov
fdivr
fstp
cwde
call
jmp
or
add
fistp
pushf
xchg
test
leave
cwde
cmp
and
mov
dec
cmp
es
push
ins
mov
push
pop
movs
push
jo
scas
out
iret
aas
sar
inc
stc
push
(bad)
lods
data16
(bad)
sbb
push
shl
or
hlt
out
movs
lods
pop
mov
inc
push
ins
test
or
shl
push
push
xor
retf
jnp
push
dec
clc
push
test
in
fsubr
or
cmp
fisttp
adc
adc
retf
daa
outs
adc
pop
and
movs
dec
out
cld
es
sub
(bad)
pop
sub
cmp
jle
cmp
adc
dec
push
and
rcr
xchg
leave
repz
jb
outs
xchg
cmps
mov
das
(bad)
enter
pop
mov
popf
mov
mul
in
add
bound
mov
mov
jbe
push
in
xor
sbb
dec
repnz
sub
mov
in
add
into
mov
pop
in
stc
jo
mov
adc
mov
popf
out
call
jmp
fwait
jne
stos
ins
sub
jnp
daa
sahf
(bad)
mov
or
add
cmp
movs
leave
push
inc
lods
or
pop
xchg
cmp
jecxz
mov
xchg
pop
inc
sbb
xchg
(bad)
scas
dec
xchg
movs
iret
inc
xlat
cli
xchg
fsub
test
adc
aaa
pushf
sbb
push
push
xchg
stos
mov
out
pop
cmp
xchg
outs
mov
mov
sub
stos
inc
mov
mov
dec
das
mov
js
jbe
(bad)
hlt
stos
std
bound
popf
addr16
ja
cmp
addr16
xchg
add
cld
repz
aas
(bad)
cld
repz
aas
call
add
adc
add
add
dec
inc
dec
inc
scas
inc
pusha
or
add
add
add
(bad)
(bad)
inc
add
add
add
add
add
add
jns
je
ins
cs
jb
ja
outs
addr16
push
gs
imul
xor
xor
inc
jne
je
jb
cmp
jb
ins
sub
push
jne
ins
imul
imul
bound
xor
data16
xor
fs
add
adc
gs
cs
jb
ja
outs
addr16
imul
add
popa
je
pop
add
add
add
add
add
lsl
add
mov
mov
inc
or
add
or
add
add
add
add
or
add
add
pusha
outs
rol
add
add
inc
dec
inc
add
mov
or
popa
add
jo
pop
jae
add
ret
add
push
ret
add
outs
test
add
adc
inc
inc
push
pop
inc
in
rol
loopne
scas
rol
mov
out
fcmovnb
lea
imul
test
outs
dec
idiv
fwait
jmp
rcr
cmps
fisttp
repnz
jns
xor
sbb
pop
cmc
shl
jp
xbegin
scas
ret
push
and
sub
inc
push
add
pop
es
push
add
lds
outs
popf
leave
adc
out
pop
xchg
outs
in
inc
ins
sti
ret
cmps
cld
call
jne
add
leave
or
and
aam
adc
cli
jo
inc
adc
ins
in
rcr
mov
gs
cdq
sbb
add
add
and
imul
xchg
inc
(bad)
jo
in
inc
dec
fld
pop
mov
outs
(bad)
dec
or
test
cwde
lea
xlat
mov
dec
bnd
rcr
(bad)
into
inc
xor
sar
push
cmp
mov
ret
outs
add
es
ss
mov
ds
jge
mov
push
xor
scas
push
inc
cmp
sbb
dec
dec
push
jecxz
fucomip
(bad)
xchg
cmp
js
call
jecxz
jae
xchg
sub
lea
int3
addr16
or
call
ins
outs
repz
lea
jne
call
aas
sub
repz
or
cmp
repz
mov
jb
jle
jno
retf
test
cmp
jbe
loopne
fimul
jge
aad
and
mov
jae
sahf
add
sbb
push
jle
jg
aaa
dec
push
and
(bad)
loop
and
call
in
add
dec
scas
loope
jmp
sub
popf
imul
sbb
add
push
lock
shl
(bad)
sub
inc
xor
(bad)
es
(bad)
retf
sub
cmp
(bad)
mov
cmp
movs
sbb
outs
test
clc
push
sub
test
mov
cmp
cs
push
ds
cwde
pushf
jp
popa
out
ret
xor
sbb
mov
xor
in
pop
mov
and
and
ss
push
sar
mov
pusha
mov
push
jno
aas
or
repz
out
lds
jno
xchg
data16
test
arpl
push
jmp
mov
lods
xor
mov
imul
mov
jge
test
push
in
int
loopne
inc
jae
aaa
push
inc
mov
dec
dec
mov
fcom
jb
xchg
mov
aad
xor
push
aam
es
cmps
xchg
cmp
out
addr16
jge
int3
cmp
lods
cdq
fistp
push
in
or
xchg
cmps
mov
cmp
ret
ss
cmp
jae
mov
aam
aaa
scas
ja
cmps
mov
sbb
pop
outs
and
ret
dec
ret
mov
jbe
aam
add
shr
add
cdq
(bad)
jae
addr16
out
and
dec
fadd
cmps
xlat
out
ins
ss
cmp
jmp
mov
dec
not
pop
shr
jnp
pop
jae
test
jbe
stc
icebp
mov
fwait
xor
aam
sbb
mov
xchg
aad
sahf
push
fwait
cwde
lods
mov
jo
lea
retf
pop
fldenv
jae
add
sbb
push
ret
and
xor
jp
sbb
dec
jbe
inc
push
aaa
div
in
mov
mov
inc
or
addr16
aad
push
push
shl
mov
clc
adc
sub
(bad)
push
(bad)
fcomp
sahf
adc
icebp
inc
xchg
add
sub
rcl
push
movs
mov
inc
clc
iret
rcl
pop
or
sbb
loopne
ds
inc
push
sar
sbb
lock
lea
inc
mov
shl
or
or
repz
sbb
ss
add
push
or
ss
inc
inc
mov
ror
xor
ins
or
pop
push
pop
out
or
xor
retf
das
jp
sqrtps
jne
test
cmp
inc
dec
jnp
mov
and
(bad)
arpl
push
shr
loop
cmp
sbb
inc
jle
rcr
mov
add
xor
dec
shl
mov
adc
fimul
xchg
jne
adc
loope
add
jp
xor
pop
enter
push
add
fisttp
mov
cmps
xchg
xchg
or
sub
fistp
sbb
mul
(bad)
xchg
lods
push
dec
fs
jg
sar
mov
cld
sbb
cli
jmp
dec
ss
int3
lock
lock
idiv
ret
jle
dec
icebp
scas
cmps
jl
ss
adc
jno
push
jecxz
popf
fidivr
or
sub
pop
test
pusha
jmp
call
inc
(bad)
mov
mov
push
sub
or
sub
call
bswap
xchg
repnz
pop
sub
loope
int3
jp
xchg
arpl
cld
mov
cmp
icebp
imul
test
shr
cli
into
gs
movs
push
lahf
popf
cmp
and
jmp
sbb
xor
movs
pop
push
pop
aas
lahf
adc
aam
ret
imul
xor
xor
fwait
rcr
rcr
push
xchg
or
ds
dec
das
rcr
or
xlat
stos
sbb
(bad)
mov
arpl
xor
jge
pop
cmps
fstp
mov
xchg
add
sub
and
xor
out
sar
sbb
push
sub
stc
add
(bad)
(bad)
rol
xchg
(bad)
push
(bad)
int
fs
inc
cmp
cld
dec
mov
ret
ins
out
xchg
push
push
push
inc
or
pusha
neg
scas
jo
jl
jmp
xchg
xchg
or
out
mov
cmp
jno
mov
nop
cmp
dec
sub
xor
cdq
mov
(bad)
adc
ins
mov
pop
daa
and
sub
dec
dec
mov
and
nop
test
xor
inc
sub
mov
cmp
shr
sbb
sbb
test
repz
rol
push
cld
mov
adc
pop
inc
jno
lock
xchg
or
in
mov
xor
pop
mov
clc
push
aaa
movs
js
enter
popa
inc
je
ficom
mov
mov
ret
jmp
movs
jecxz
aam
add
or
int
cs
and
cs
push
add
jge
nop
sbb
jb
jp
in
cmps
popa
push
cdq
or
mov
jb
std
call
push
fld
test
cmp
pop
sub
(bad)
cmp
das
push
push
and
in
xchg
inc
test
pop
(bad)
in
scas
lock
adc
cli
mov
pop
push
or
cmp
dec
popa
mov
movs
mov
adc
lahf
addr16
xchg
lock
sahf
dec
dec
repz
jmp
pushf
sti
ja
hlt
dec
lods
dec
pop
pop
jmp
push
sti
mov
in
sbb
add
cli
or
icebp
sub
dec
es
jmp
shl
push
in
addr16
scas
mov
icebp
mov
pop
mov
loopne
call
push
and
pop
jno
inc
cld
or
sub
pop
jmp
jge
int3
not
inc
mov
das
add
dec
cwde
mov
mov
jp
(bad)
and
mov
in
imul
inc
mov
(bad)
(bad)
xchg
jmp
outs
outs
mov
int
adc
sbb
xchg
ins
lahf
jnp
or
aas
idiv
imul
ret
cmp
mov
xchg
pop
push
fisubr
test
ds
push
push
cmp
fcomi
mov
mov
push
dec
mov
cmps
ret
jecxz
pop
js
cwde
push
lods
ret
lods
fldcw
popa
ds
bound
xchg
lock
dec
fwait
jbe
inc
adc
add
fimul
mov
cmps
inc
stos
div
xlat
popf
ret
inc
ds
clc
pushf
in
cmp
jne
loop
lods
inc
dec
xor
lea
je
loopne
(bad)
fistp
fucomi
sub
(bad)
aam
pop
sahf
loop
add
and
sub
mov
mov
into
in
leave
div
push
loope
iret
dec
jo
push
sub
push
sub
fwait
sar
lock
int3
fnsave
or
ss
sahf
jmp
mov
retf
imul
push
movs
xchg
cs
ins
lahf
aam
lahf
cdq
repnz
loopne
sbb
ins
sbb
lds
cmc
sahf
xchg
and
dec
add
jne
in
jg
mov
es
sub
loop
pop
and
ja
or
pop
mov
int
xor
pop
lods
outs
cld
test
retf
sbb
icebp
and
fst
ret
push
dec
or
and
cmp
sar
fadd
mov
rol
out
xor
cmp
arpl
push
push
xchg
push
sub
push
imul
or
ret
iret
loop
aad
cmc
pop
ins
sub
cmp
push
xchg
enter
lea
jmp
stos
and
cld
cmc
mov
popa
xchg
dec
jecxz
loop
movs
scas
inc
rcl
mov
sbb
jle
shr
movs
cmps
loopne
xchg
push
inc
cmc
ss
cmp
or
(bad)
cmp
mov
xor
and
inc
and
mov
pop
mov
outs
int
xchg
cld
shl
js
adc
arpl
xchg
jns
dec
gs
pop
xor
scas
pop
push
xor
adc
and
and
pusha
lods
and
dec
cmps
jecxz
cwde
clc
lods
pushf
push
int
int
std
adc
push
(bad)
fisttp
or
in
rcl
js
mov
rol
lods
mov
ja
cld
mov
test
dec
mul
test
pop
pop
sbb
stos
adc
xchg
shl
hlt
clc
sub
jmp
popf
inc
dec
adc
sbb
push
mov
or
sub
jno
ret
lds
push
leave
imul
loopne
and
lea
dec
mov
jmp
cld
inc
jb
or
iret
movs
repz
fnstsw
xlat
scas
outs
ror
pop
cmp
jmp
sbb
mov
fdivr
ror
fstp
iret
xchg
jne
dec
loope
cdq
sbb
popf
dec
push
arpl
xor
sub
add
std
out
pop
fs
fld
mov
hlt
add
sbb
mov
data16
(bad)
or
mov
leave
leave
shr
icebp
pop
and
aaa
les
push
mov
shl
sahf
test
fsincos
sub
(bad)
pop
test
arpl
push
inc
out
sub
dec
ret
mov
imul
pop
pop
jg
sahf
xchg
push
pop
or
je
xchg
or
adc
xchg
shr
inc
or
xor
addr16
adc
in
xor
call
test
(bad)
cmps
or
int
in
sub
xchg
mov
inc
jle
rcl
(bad)
shl
in
xchg
shl
dec
bound
mov
mov
sub
outs
xor
cmps
cmps
or
ret
pop
aaa
mov
push
cmp
(bad)
lods
pslld
pop
or
jns
sahf
inc
fld
test
addr16
inc
(bad)
fld
mov
bound
fstp
cmp
sbb
cmps
outs
call
movs
mov
ret
cmps
shr
sub
mov
bound
jle
ins
jns
(bad)
jmp
cmp
lock
mov
mov
(bad)
xchg
mov
js
mov
(bad)
lock
lahf
jbe
out
popf
clc
(bad)
xor
xchg
sti
mov
dec
ss
mov
mov
sub
gs
hlt
std
add
data16
jmp
sti
pop
xor
cmp
and
or
in
and
je
cmp
fisub
sahf
pop
mov
imul
loope
or
pop
ins
jmp
js
fabs
es
fwait
sbb
fdivr
ins
xchg
ins
je
mov
push
jmp
clc
jp
cmps
dec
cmp
mov
call
sbb
jl
adc
rol
call
push
jb
jns
(bad)
mov
mov
inc
push
ret
add
ins
xchg
cld
xor
sbb
cmp
fldenv
xchg
mov
mov
imul
loopne
jp
aam
jmp
adc
mov
xchg
xor
repz
aam
push
cmps
retf
pop
stc
lock
push
push
sbb
shl
mov
sbb
adc
dec
pmulhuw
test
daa
adc
push
mov
jle
movs
fld
cmp
mov
cmovo
imul
outs
sbb
nop
jo
xchg
mov
in
mov
enter
div
nop
push
dec
popf
bound
loop
ss
push
js
mov
or
mov
pusha
popa
xchg
jecxz
push
bnd
punpcklbw
ret
mov
inc
sub
fst
sbb
(bad)
pushf
or
add
mov
xor
add
mov
scas
inc
imul
out
lods
xor
out
pop
aaa
push
adc
test
push
mov
mov
fld
xor
mov
mov
mov
xchg
cld
stc
ret
jae
cmp
gs
in
aad
and
dec
inc
fucomip
retf
and
mov
gs
sbb
movs
addr16
inc
xor
jmp
push
inc
jle
cmp
daa
rol
inc
iret
mov
pop
inc
adc
(bad)
mov
add
in
adc
mov
and
call
and
sbb
jno
inc
inc
mul
pop
sub
cdq
dec
mov
mov
and
ret
dec
add
pop
fstp
das
xchg
pop
jecxz
xor
out
jg
inc
fs
mov
cld
jne
mov
sbb
daa
xchg
scas
dec
push
sbb
out
fistp
pop
or
jns
jmp
xchg
sub
pop
and
xlat
push
jo
dec
cmps
pandn
adc
push
push
push
push
in
jmp
lods
outs
xchg
sbb
and
fsub
push
test
or
bound
sub
retf
fs
push
outs
mov
cmp
outs
test
mov
inc
mov
dec
cli
aam
aam
inc
rcr
lods
mov
inc
lds
iret
in
push
dec
sub
outs
ja
out
popf
test
jl
xor
pop
inc
dec
push
or
jns
pop
repnz
pop
adc
fninit
sar
jnp
mov
imul
sub
jnp
mov
in
cs
stc
(bad)
cmp
aad
xchg
enter
mov
test
jp
sub
retf
pop
dec
adc
inc
jb
jo
add
ror
and
test
inc
sbb
ja
push
jb
in
into
dec
nop
push
(bad)
adc
gs
lods
xor
push
mov
gs
cmp
js
movs
in
xor
mov
sbb
pop
sbb
cdq
dec
pop
mov
(bad)
test
adc
jno
inc
sti
cs
xchg
push
fst
mov
rcr
jne
mov
fdiv
xchg
sub
test
ret
and
mov
call
adc
jbe
sar
add
jmp
int
shr
scas
dec
or
out
das
mov
inc
nop
bound
cmp
mov
adc
cmp
dec
pop
scas
mov
std
sbb
int3
cmp
es
push
adc
jl
xor
nop
jp
not
mov
fmul
fldcw
inc
cwde
add
and
adc
fisubr
outs
shl
inc
push
and
xchg
and
(bad)
into
mov
inc
fnsave
retf
mov
repz
mov
sub
or
(bad)
fwait
dec
or
jmp
lea
in
int3
jge
push
lock
dec
sub
mov
jmp
ret
div
js
cmp
out
stos
bound
lock
loope
stos
inc
fcomp
inc
arpl
xchg
sar
cld
repz
aas
(bad)
cld
repz
push
sbb
adc
or
add
add
dec
inc
scas
inc
pusha
or
add
add
add
(bad)
(bad)
inc
add
add
add
add
add
add
jns
je
ins
cs
jb
ja
outs
addr16
push
gs
imul
xor
xor
inc
jne
je
jb
cmp
jb
ins
sub
push
jne
ins
imul
imul
bound
xor
data16
xor
fs
add
adc
gs
cs
jb
ja
outs
addr16
imul
add
popa
je
pop
add
add
add
add
add
lsl
add
rcl
add
mov
inc
or
add
or
add
add
add
add
or
add
add
pusha
outs
rol
add
add
inc
dec
inc
add
mov
or
popa
add
jo
pop
jae
add
ret
add
push
ret
add
outs
test
add
adc
inc
inc
push
pop
inc
in
aam
and
pop
add
scas
cwde
imul
arpl
mov
(bad)
jmp
je
xchg
arpl
je
ja
lahf
div
in
repz
add
cli
inc
cmp
jl
arpl
aaa
scas
mov
std
sub
(bad)
add
jg
sahf
jle
scas
(bad)
aad
jecxz
jl
pop
dec
mov
push
mov
sbb
scas
adc
inc
test
fistp
in
xchg
cmps
vcvtsi2ss
les
push
(bad)
and
das
jecxz
xor
scas
or
cdq
outs
or
adc
aas
add
jmp
mov
ss
push
xchg
inc
(bad)
int
or
jmp
cmp
add
stos
jp
retf
jbe
dec
ret
leave
(bad)
mov
xchg
mov
jmp
push
cmc
add
(bad)
or
lods
fs
mov
push
jo
add
add
jp
xor
test
xchg
dec
mov
inc
xchg
pop
add
imul
cmp
inc
pop
jp
mov
addr16
cdq
imul
pop
adc
call
ss
or
sub
rcr
push
xor
stos
push
add
mov
ret
frstor
sub
and
dec
nop
xchg
cmc
sahf
fwait
out
jo
outs
mov
repz
cmp
fcmovnb
xlat
lahf
add
push
mov
daa
mov
mov
std
or
adc
rcl
outs
sub
(bad)
pop
push
sub
push
pushf
imul
push
mov
and
xchg
or
ja
jbe
mov
jg
jmp
and
popa
add
data16
(bad)
jns
add
imul
sub
fsubrp
lods
inc
and
pop
jb
pop
adc
jo
mov
sahf
xchg
xchg
adc
pop
fistp
ja
fistp
(bad)
in
cmp
int
adc
fidivr
sbb
ror
or
inc
jg
and
xlat
dec
lods
mov
pop
mov
sbb
push
pop
sahf
or
and
sbb
pushf
or
ja
bound
pop
push
adc
loopne
stos
idiv
cmp
(bad)
sbb
pop
arpl
mov
repnz
out
leave
(bad)
mov
cmp
call
sbb
stc
and
xor
not
(bad)
repz
push
or
xchg
mov
xchg
dec
test
jp
xchg
jmp
pusha
into
push
jmp
xchg
xchg
mov
xchg
xchg
dec
js
xchg
repnz
scas
xor
dec
mov
mov
(bad)
or
int
(bad)
out
test
lahf
xchg
cmp
nop
push
ins
pusha
test
or
add
add
adc
fcomip
xchg
mov
and
loopne
xchg
jnp
hlt
std
mov
jmp
push
mov
xor
and
push
loope
lds
sub
(bad)
push
pop
popa
js
leave
pmullw
lea
int
sub
hlt
call
nop
jg
push
jne
shr
xor
pop
mov
repnz
mov
cmps
xor
fabs
bound
xchg
mov
into
mov
shl
inc
and
pushf
mov
pop
fnstsw
inc
inc
das
and
jns
cwde
vpermilps
xchg
iret
mov
push
cld
sbb
repz
mov
jbe
test
cmps
cmp
dec
fdivr
scas
add
in
sub
cdq
xchg
dec
outs
sbb
sbb
and
fwait
or
sbb
popa
das
mov
retf
adc
sbb
cwde
jle
int3
or
fild
xchg
jne
ja
sub
mov
sti
das
sbb
fs
dec
test
test
add
repz
mov
and
mov
loope
xor
and
mov
push
dec
fcmovu
jle
clc
inc
pop
sub
imul
push
or
xchg
cmp
xor
pop
xor
cmc
xlat
inc
test
(bad)
jle
mov
pop
and
daa
out
(bad)
mov
and
(bad)
sub
inc
jmp
push
dec
dec
div
add
adc
pop
aaa
push
iret
mov
retf
scas
pop
mov
jo
sub
movd
xchg
jbe
push
jge
pusha
xlat
rcr
imul
pop
xchg
dec
idiv
rcl
jno
pop
adc
pop
fsubr
xor
aaa
mov
mov
aas
xor
test
jecxz
test
dec
cmps
mov
das
outs
lds
popf
and
mov
pop
cmc
(bad)
pop
jns
sub
mov
push
retf
cmp
in
add
cmp
test
aad
lea
cld
mov
mov
fsubr
pop
ins
cmps
mov
imul
mov
int3
and
xchg
xchg
push
in
in
jne
fisub
ins
sub
les
cmp
ds
or
pop
mov
cmps
sbb
cmp
mov
mov
daa
push
dec
and
lods
shl
push
movaps
dec
lods
and
sub
mov
cmp
movs
test
pop
out
push
outs
jle
or
inc
xchg
std
xchg
hlt
loope
mov
mov
es
or
mov
into
mov
adc
jb
mov
mov
mov
adc
retf
xor
mov
in
mov
pop
aam
add
inc
fdivp
ret
jns
hlt
mov
mov
aad
inc
(bad)
mov
fisub
mov
push
jmp
clc
push
pop
pop
sbb
cmp
lock
adc
xchg
cmc
adc
(bad)
xor
add
jmp
add
aas
loop
jae
into
mov
jns
pop
xor
jmp
out
pop
or
icebp
js
stc
jb
dec
pop
jl
rcl
sbb
xchg
(bad)
pop
pop
pop
push
js
push
push
or
enter
int3
sub
jo
adc
inc
movs
sub
mov
cli
sub
jge
inc
outs
movs
jo
imul
cmps
push
lock
mov
mov
xchg
hlt
xor
xchg
cmp
clc
add
mov
and
mov
jmp
psraw
xor
or
pushf
mov
xchg
retf
push
sub
rol
repnz
iret
(bad)
cmp
(bad)
int3
movs
sti
lahf
pusha
adc
test
js
cmps
aas
lock
adc
call
xchg
xchg
mov
jmp
inc
popf
mov
into
ins
retf
push
cli
sbb
test
in
pop
clc
adc
fdivp
push
cmc
jmp
xlat
inc
mov
jl
aad
pop
and
mov
push
dec
gs
pop
rcr
sub
enter
pop
aam
pop
call
inc
idiv
js
cmps
sub
(bad)
mov
or
in
aad
leave
(bad)
pop
adc
pop
ret
mov
(bad)
stc
or
jae
cld
sbb
and
cdq
in
jbe
popa
mov
(bad)
xor
stc
or
push
into
cdq
cmp
xchg
inc
fsub
adc
imul
in
jne
js
ins
mov
mov
ds
mov
sbb
adc
jnp
movs
cmps
in
mov
jae
jne
inc
jne
fs
fmul
and
sub
cmp
jns
mov
das
mov
sub
movs
mov
(bad)
push
cmps
xlat
push
mov
xchg
push
aaa
pop
xchg
xchg
adc
rcl
(bad)
rcl
jne
sub
movs
pop
jmp
ins
lock
fst
sub
xchg
and
popa
lods
movs
cwde
mov
jb
and
shufps
lea
xor
popa
jmp
or
retf
pop
mov
push
cmp
cmps
sub
mov
test
hlt
sub
or
push
movs
and
xchg
dec
and
pop
shr
xchg
ins
dec
outs
mov
sub
clc
jp
fwait
xchg
cmp
shl
inc
leave
and
sbb
mov
pusha
xor
adc
int
ds
and
and
cs
call
mov
sub
mov
mov
in
xor
lock
push
cwde
outs
sahf
imul
lods
loopne
jle
xor
sub
jl
and
dec
rol
or
test
or
cmp
repnz
xchg
clc
lea
outs
jecxz
scas
mov
xchg
jmp
ret
mov
sbb
aas
cmps
jl
mov
adc
cmp
(bad)
lods
fucomp
adc
xchg
iret
adc
stos
xchg
(bad)
ins
xor
cmp
ret
mov
mov
mov
mov
inc
sub
addr16
adc
sub
dec
cmp
(bad)
in
cmp
int
xor
mov
int3
pop
pop
scas
sbb
pop
into
test
dec
adc
fstp
nop
inc
jnp
sub
in
dec
xor
add
mov
push
mov
push
xor
dec
loope
jl
out
pushf
mov
mov
xor
std
movs
loop
push
pop
aas
ficom
imul
mov
data16
mov
xchg
mov
jle
int3
(bad)
popf
loope
imul
dec
ins
push
cmps
lods
adc
pushf
ss
loope
das
inc
stos
dec
sub
rcl
and
js
aas
cdq
sti
test
xchg
xchg
mov
xor
jg
sub
and
sbb
nop
lods
cli
fisub
adc
mov
mov
mov
popf
push
sti
mov
jne
int
push
(bad)
dec
scas
int
mov
das
jl
sbb
jp
in
inc
push
mov
jns
out
xor
rcr
ret
jl
xchg
mov
(bad)
jp
and
cmp
lea
imul
je
mov
popf
movs
jle
pop
std
repz
pop
cmps
or
sbb
xchg
out
dec
push
and
gs
pop
test
and
dec
jmp
mov
xchg
ds
sbb
push
imul
pop
stos
call
mov
jnp
fdiv
sbb
mov
imul
sbb
mov
mov
fs
shl
inc
test
and
ins
ror
int3
mov
or
call
adc
bound
cmps
dec
mov
les
xor
aaa
fsub
mov
adc
mov
sub
jno
add
lds
in
push
cdq
pop
aad
push
bswap
fst
inc
lds
jae
or
ins
imul
das
std
div
push
nop
sub
pextrw
dec
xor
cs
fild
sub
jnp
fisubr
icebp
inc
cld
xchg
cmp
sub
push
test
pop
ret
dec
adc
les
test
in
sbb
xor
scas
push
mov
jg
icebp
scas
daa
inc
cmp
push
pop
clc
xchg
scas
fstp
loop
inc
(bad)
jne
fiadd
dec
mov
sbb
sbb
std
dec
out
and
lods
xchg
xchg
mov
fnstenv
mov
dec
cli
and
xchg
in
lock
cmp
cld
mov
shl
inc
lods
adc
arpl
dec
into
jns
and
push
sbb
shl
in
jbe
pop
pop
or
ficom
and
cmp
lods
jle
or
push
inc
xchg
adc
je
pop
lds
mov
mov
sub
sub
xor
mov
mov
pop
out
dec
mov
mov
cmp
jecxz
in
jnp
sbb
daa
mov
jo
push
icebp
jb
dec
je
dec
ret
dec
inc
into
pop
cmps
pop
jmp
adc
cmp
and
fwait
add
dec
in
daa
repz
pop
in
push
fldenv
scas
pop
mov
sub
call
sub
dec
xor
add
mov
and
or
inc
in
adc
cdq
fistp
ret
out
adc
repz
repnz
xor
push
add
inc
jecxz
sbb
adc
inc
retf
adc
xor
and
sar
jnp
mov
lods
push
mov
mov
push
push
push
pop
mov
xor
pop
xor
mov
jb
in
mov
push
fwait
call
cdq
ror
into
jg
and
pusha
into
pop
adc
jmp
cwde
sbb
push
out
xor
fcomp
adc
addr16
test
call
pop
sub
das
jae
ins
out
jo
ins
add
out
ja
push
and
sub
xlat
inc
pop
fistp
cmps
fstp
sbb
push
cli
inc
xchg
fidiv
mov
xchg
sbb
push
dec
mov
lea
jne
test
sbb
iret
loope
push
xchg
mov
dec
or
xchg
mov
outs
fdivr
in
cmp
(bad)
add
mov
ret
addr16
aaa
and
sbb
or
scas
adc
pop
in
add
and
push
jle
sbb
in
in
cmps
pop
mov
xchg
ss
jnp
test
iret
fldenv
push
hlt
push
jo
add
jns
aas
out
sub
xchg
xor
ret
cmp
cli
xchg
jle
jg
mov
test
data16
popf
xchg
jge
shl
dec
sub
push
mov
test
push
out
cli
add
in
int
or
xor
repnz
sahf
add
ficom
adc
inc
rcl
and
xchg
loop
aaa
mov
mov
mov
inc
mov
jns
pop
cs
int
rol
les
out
nop
dec
mov
mov
gs
test
sub
outs
xor
dec
outs
or
and
mov
stc
push
mov
xor
cmp
lahf
mov
cmc
xchg
xlat
inc
int
test
shl
and
addr16
or
daa
rol
adc
mov
xchg
enter
dec
je
out
cmp
aaa
paddw
xchg
xchg
retf
imul
popf
popa
pop
cmps
outs
fidiv
test
mov
js
mov
pop
xor
jb
fsubr
mov
inc
dec
imul
aaa
and
popa
mov
and
adc
xor
out
repnz
push
ins
xlat
test
popf
pushf
add
movs
jle
xchg
mov
out
gs
jl
push
mov
out
leave
add
xchg
inc
add
jbe
inc
popf
inc
or
(bad)
retf
test
js
xor
push
loop
std
aaa
mov
dec
cmovg
movzx
xor
movs
aas
mov
jb
jg
dec
adc
out
xor
xchg
ins
jns
mov
fsubr
(bad)
into
xor
and
and
jecxz
xor
mov
loop
ds
shl
push
sar
and
adc
cld
xor
cwde
pop
push
cwde
aaa
mov
mov
leave
addr16
test
in
outs
jl
ins
(bad)
cmp
outs
sub
cld
out
(bad)
mov
xchg
or
jmp
push
je
pop
fidivr
xchg
cdq
mov
fadd
stos
ins
inc
inc
cmc
sub
test
(bad)
iret
cmp
lea
(bad)
iret
pop
dec
adc
cmp
lahf
icebp
cmp
movs
cld
out
dec
bound
adc
mov
sbb
ret
xor
inc
shr
dec
mov
xchg
fcomp
cmps
cmps
dec
sub
mov
loopne
test
and
dec
mov
(bad)
or
test
icebp
or
lods
jnp
gs
imul
ss
mov
out
adc
shl
jne
rcl
fcmovu
je
pop
pop
and
addr16
stc
test
inc
mov
cmp
leave
dec
sub
cmp
add
mov
fstp
add
movs
vaddpd
mov
mov
sbb
mov
push
ret
in
mov
stc
out
jg
stc
out
call
add
jg
loopne
rcl
and
add
add
dec
inc
dec
inc
scas
inc
pusha
or
add
add
add
(bad)
(bad)
inc
add
add
add
add
add
add
jns
je
ins
cs
jb
ja
outs
addr16
push
gs
imul
xor
xor
inc
jne
je
jb
cmp
jb
ins
sub
push
jne
ins
imul
imul
bound
xor
data16
xor
fs
add
adc
gs
cs
jb
ja
outs
addr16
imul
add
popa
je
pop
add
add
add
add
add
lsl
add
mov
mov
inc
or
add
or
add
add
add
add
or
add
add
pusha
outs
rol
add
add
inc
dec
inc
add
mov
or
popa
add
jo
pop
jae
add
ret
add
push
ret
add
outs
test
add
adc
inc
inc
push
pop
inc
in
rol
loopne
scas
aas
cmps
cmps
arpl
cmp
lea
ja
popf
ss
cmp
fnstenv
rcr
pslld
jns
sub
sbb
push
push
mov
jnp
adc
fisttp
fadd
adc
sahf
nop
(bad)
adc
or
cmp
or
outs
movs
mov
dec
jo
sub
mov
out
les
jg
cmp
adc
stos
dec
xchg
and
inc
(bad)
(bad)
(bad)
gs
pop
fadd
adc
xchg
sbb
mov
and
cmp
in
cmps
inc
repnz
sbb
lahf
call
push
js
cli
adc
out
(bad)
fsubr
push
pop
scas
and
jns
xchg
and
xchg
fwait
jmp
movs
in
ds
inc
sar
sahf
cmp
(bad)
cli
jge
cmp
je
cli
adc
mov
retf
out
push
adc
cmc
inc
js
pusha
xor
out
sub
sbb
jp
mov
sbb
ds
popf
cwde
jae
psubq
mov
hlt
mov
mov
in
movs
adc
enter
sub
sbb
shl
pop
sub
repnz
xchg
xlat
iret
push
in
cmp
cdq
ins
icebp
sbb
and
fwait
div
jnp
jb
imul
jnp
mov
sahf
or
sub
and
adc
shl
xlat
sbb
mov
and
xchg
cmps
or
add
jns
and
out
sbb
sbb
pushf
stos
aaa
popa
xchg
test
xchg
es
cld
pop
fdecstp
dec
cmp
mov
jmp
lds
retf
sahf
std
(bad)
sbb
and
push
fcomp
nop
jns
mov
mov
xor
add
sahf
lock
call
leave
fiadd
sub
inc
out
mov
out
ja
fcomp
cmp
cmp
test
inc
ficomp
jmp
and
inc
dec
fnsave
shl
xchg
push
and
ss
xor
out
pop
js
and
xor
add
and
aam
in
cld
cld
mov
ins
inc
xchg
push
into
iret
scas
fwait
sbb
cmp
retf
jge
xchg
cld
and
leave
or
inc
jnp
jge
(bad)
sbb
sbb
fs
xchg
ficomp
add
out
xchg
mov
mov
inc
mov
mov
sar
scas
push
dec
push
push
sub
mov
ins
aam
sub
call
mov
arpl
lahf
mov
pop
call
cdq
repz
inc
or
cwde
arpl
mov
lods
pop
sub
adc
jo
pop
mov
mov
outs
xchg
iret
rcl
add
bound
mov
adc
dec
sbb
push
cmc
push
xchg
inc
mov
jl
cwde
jb
mov
popa
pop
out
mov
jl
and
mov
add
lea
ror
xchg
sub
sbb
shr
push
jo
stos
jbe
call
adc
outs
and
push
sbb
xchg
dec
pop
call
iret
popa
mov
jno
jne
pop
mov
shl
xchg
mov
xchg
cdq
pop
sub
or
inc
movs
or
jmp
leave
jge
pop
lods
sar
push
inc
xor
inc
inc
cmps
sti
add
jp
or
pop
and
out
add
int3
mov
out
push
sub
adc
std
pushf
cmp
fsub
adc
mov
enter
scas
push
pop
jge
xor
pop
pop
aad
pop
pop
in
retf
push
bnd
mov
out
idiv
das
xchg
(bad)
cmp
xchg
xor
pop
ret
fimul
outs
addr16
es
retf
mov
sbb
and
mov
xor
je
push
sub
cwde
jl
push
retf
add
scas
adc
loope
fdivr
sub
cmps
mov
shl
out
or
bound
out
lock
mov
cmp
push
popa
ficom
fwait
mov
(bad)
pop
dec
mov
hlt
inc
xchg
imul
out
mov
jmp
xor
int3
mov
ss
popf
(bad)
int
clc
rol
fsub
test
xchg
or
arpl
push
inc
jmp
xchg
add
sar
push
push
pop
pop
pop
inc
in
or
mov
mov
call
push
mov
mov
pop
stc
je
dec
jle
sti
inc
(bad)
push
call
lea
mov
fmul
and
mov
jae
es
lods
retf
pop
cli
mov
fsubr
popf
ret
sub
push
ins
cmps
mov
xor
repnz
in
mov
mov
inc
pop
jmp
ror
dec
pop
pop
inc
(bad)
cli
add
mov
(bad)
fiadd
loope
jbe
jne
jnp
in
retf
arpl
bound
and
and
mov
push
push
inc
pop
inc
(bad)
mov
fisub
inc
ret
mov
sbb
sub
ds
ss
dec
repz
icebp
test
mov
daa
pop
cmp
dec
retf
cmps
push
ins
inc
adc
repz
inc
pop
mov
pop
jmp
js
movs
dec
aad
jl
mov
cmp
mov
sub
scas
and
test
pop
pop
add
dec
push
ret
xor
cmp
mov
xchg
ds
add
jnp
xor
mov
(bad)
mov
cli
jb
inc
cmp
call
add
mov
xchg
scas
push
or
jecxz
jno
jmp
repnz
fld
xchg
dec
cdq
dec
push
adc
fist
mov
inc
sbb
jns
pop
or
jmp
shr
in
test
repnz
and
rol
in
sbb
sbb
jo
jge
ret
ret
mov
cmp
data16
push
or
call
loop
sbb
sbb
mov
lds
aaa
and
js
cwde
enter
adc
sti
cmp
ficomp
movs
xchg
icebp
sbb
aaa
adc
out
jmp
mov
mov
mov
imul
dec
repnz
xor
xchg
push
loope
inc
cli
cmp
loop
jo
fidivr
ror
sti
push
fldcw
mov
data16
push
dec
cmp
out
in
ficomp
cld
into
add
cmp
ret
ds
sbb
mov
and
retf
dec
int
les
mov
(bad)
aam
popa
in
stos
sub
mov
inc
(bad)
sbb
push
in
enter
xchg
sub
xchg
xchg
mov
dec
pusha
mov
xchg
dec
fwait
mov
jge
jg
add
push
repz
xchg
out
das
inc
loopne
dec
or
jl
cwde
inc
popa
pop
(bad)
pushf
(bad)
(bad)
aam
jb
rcl
sub
cvttps2pi
and
loopne
xor
sbb
mov
fild
jno
js
add
gs
adc
fidivr
xor
(bad)
aad
xchg
cmc
inc
fmul
dec
adc
xchg
arpl
or
mov
outs
fistp
loope
cld
clts
lea
jne
dec
dec
lahf
test
arpl
movs
lds
retf
sbb
jb
and
cmp
jbe
mov
aaa
aaa
gs
xor
xchg
aad
pop
adc
int
loopne
(bad)
in
sar
mov
scas
pop
(bad)
and
mov
mov
or
jmp
cmp
lock
xor
push
inc
pop
sbb
xchg
in
mov
or
scas
outs
stos
in
mov
and
(bad)
loopne
jbe
(bad)
sbb
xchg
mov
xor
outs
dec
inc
xchg
pop
out
add
pop
and
stos
push
jnp
xor
push
inc
inc
dec
or
pop
ds
jno
jb
cmps
out
xchg
fwait
pop
fadd
cmp
sub
jg
mov
add
daa
loope
arpl
(bad)
pop
in
lods
pop
dec
retf
jecxz
fsubr
cli
call
lods
mov
fst
popf
fldenv
ins
mov
mov
stos
lock
in
pop
and
xchg
popf
cmp
mov
adc
adc
fisub
lds
adc
mov
dec
inc
rcr
and
jp
push
(bad)
sub
iret
sub
mov
std
add
out
add
cmps
xchg
xchg
daa
sbb
das
inc
pop
sahf
and
sub
mov
mov
fld
stc
mov
imul
aad
pop
xor
ja
jnp
cmp
fistp
(bad)
ror
(bad)
nop
sti
xlat
push
lahf
(bad)
clc
mov
jle
adc
xchg
add
push
in
and
mov
scas
not
pop
add
pop
sti
push
loopne
cmp
mov
mov
std
inc
inc
sbb
shr
or
icebp
clc
shr
nop
dec
loopne
rcr
inc
data16
push
mov
test
shr
inc
ins
adc
push
jns
pop
push
xchg
xchg
inc
(bad)
xor
loopne
xchg
fnclex
cwde
or
adc
ret
stc
ss
and
xlat
adc
adc
sbb
xchg
ror
outs
das
out
mov
adc
aas
scas
sub
sbb
jns
pop
out
jno
xor
je
mov
mov
sub
cmp
cmc
popf
mov
push
sub
xor
mov
xchg
cmp
and
mov
sub
mov
daa
dec
or
cmp
ins
pop
imul
ja
in
into
mov
dec
add
xchg
push
mov
add
push
push
push
push
lahf
mov
xchg
xchg
jecxz
pusha
mov
sbb
mov
repnz
aam
sbb
and
shl
dec
dec
int3
fidiv
lods
imul
jae
or
movs
lahf
stos
push
fidivr
add
cmp
in
pop
push
leave
pop
ror
shr
mov
call
(bad)
clc
push
popa
jmp
rol
xlat
addr16
mov
(bad)
xchg
pop
stos
ds
push
and
ss
call
sbb
push
push
fst
(bad)
jae
adc
ret
repnz
outs
ficom
sti
xchg
push
int
cmps
iret
ret
and
lods
fdiv
pop
sbb
pop
(bad)
fcomp
imul
imul
inc
test
call
clc
jge
sbb
mov
push
fcom
hlt
jbe
adc
cmc
int
mov
sti
push
or
jg
sbb
ins
xchg
xchg
arpl
pushf
xchg
sti
add
leave
das
dec
xchg
jge
test
mov
or
cmp
mov
pop
xchg
outs
lds
sub
pop
mov
mov
bound
fsubr
out
xor
sbb
cmp
iret
and
push
dec
add
in
int3
cs
pop
xchg
in
add
fld
push
repnz
fcom
pop
sub
xor
push
dec
and
jb
popa
in
xor
std
push
pushf
aad
aam
adc
fild
ret
mov
dec
outs
ror
(bad)
ret
jmp
jmp
sbb
test
dec
ror
punpckldq
jo
iret
and
jo
xchg
add
cmp
mov
aam
inc
shl
push
por
mov
xchg
xchg
jp
jle
jns
cdq
add
lock
out
sub
loope
(bad)
imul
jns
push
ds
mov
clc
nop
jae
ins
and
das
lods
xlat
arpl
adc
xor
(bad)
div
xchg
adc
and
adc
jb
test
addr16
(bad)
loope
fist
call
rcr
mov
mov
stos
xchg
mov
pusha
mov
not
mov
mov
ror
sub
lds
movs
sbb
push
pop
fsubp
daa
mov
pop
cld
add
test
call
fld
retf
(bad)
sbb
add
retf
bound
sub
outs
mov
dec
in
icebp
sbb
cmc
test
popa
loopne
aaa
iret
iret
aas
mov
cmc
push
lea
je
retf
jmp
sub
stos
sbb
data16
sbb
push
jge
mov
inc
test
xchg
mov
ror
inc
call
icebp
je
mov
pop
(bad)
sub
(bad)
daa
(bad)
ficom
icebp
(bad)
add
push
push
aad
test
inc
xchg
fisttp
mov
js
pop
jmp
aas
in
sahf
xchg
dec
add
xchg
int3
xchg
jle
pop
or
mov
jecxz
gs
in
movs
or
mov
mov
pop
pop
shl
push
jmp
jmp
cld
shl
inc
fist
jl
in
add
mov
retf
add
outs
cdq
adc
inc
sub
and
scas
dec
push
(bad)
jmp
jg
lds
mov
cld
call
loopne
dec
pushf
out
and
pop
je
push
fisttp
or
cld
dec
inc
xor
vorpd
push
dec
and
pop
test
mov
push
mov
cdq
push
add
dec
mov
scas
(bad)
sahf
jb
fcomp
stc
xor
jmp
xchg
jne
inc
test
fsub
fild
in
push
or
lods
mov
and
sbb
popf
iret
arpl
fiadd
jecxz
mov
fdivr
test
fidivr
out
adc
pop
mov
frstor
out
popf
xchg
jnp
push
daa
xor
ins
sub
sbb
add
sbb
retf
rcl
scas
sbb
and
(bad)
jecxz
xor
fisttp
cmp
jbe
int
push
arpl
idiv
adc
mov
test
push
imul
iret
mov
out
ja
dec
pop
(bad)
(bad)
push
pop
or
movs
arpl
sar
dec
rcr
popa
outs
or
pop
fist
mov
sub
inc
nop
ret
loop
jle
adc
fstp
(bad)
jno
cwde
cmovns
inc
sbb
jo
xor
adc
and
sub
cli
mov
shl
inc
arpl
xchg
sbb
xchg
out
mov
push
xor
xlat
push
add
pop
mov
xchg
pop
jns
xor
jge
sar
mov
mov
and
mov
xlat
jmp
arpl
pop
imul
jb
(bad)
imul
cmp
fist
out
rcr
les
out
pop
ret
sbb
cwde
push
data16
push
mov
fwait
push
push
in
fsubr
sbb
xor
lahf
rol
xchg
mov
loope
mov
std
pop
fcmovu
ss
pop
mov
lds
adc
mov
inc
sbb
push
out
mov
in
cs
in
aam
xor
loop
push
mov
jmp
aaa
out
jbe
mov
dec
sub
test
(bad)
int3
shl
outs
dec
ret
pusha
test
xchg
(bad)
shl
scas
mov
push
inc
push
pop
jnp
cld
repnz
inc
loop
std
or
sbb
pop
push
out
aas
movs
adc
adc
scas
sbb
call
shl
jl
mov
push
mov
dec
pop
xor
add
xchg
sub
mov
mov
or
call
cmp
test
test
pop
add
int3
lahf
rcr
sahf
cmp
daa
int3
mov
sbb
add
ins
xor
aam
popf
mov
out
enter
rcl
repz
jo
cmp
aad
je
aad
pusha
je
dec
stos
gs
imul
sub
sub
add
out
mov
adc
jae
(bad)
outs
xchg
out
jg
jp
(bad)
cmp
pop
into
paddq
mov
(bad)
int
jns
imul
add
sbb
inc
xor
bound
ins
mov
imul
pushf
sbb
icebp
mov
enter
inc
jbe
imul
mov
pop
div
(bad)
jmp
push
jecxz
hlt
cli
stos
cmc
(bad)
or
and
lods
jle
mov
icebp
and
test
out
pop
leave
jle
std
xchg
adc
xor
sub
jae
pop
push
push
add
push
cmp
lods
sub
sbb
push
mov
shr
sub
fwait
and
xchg
add
repz
aas
(bad)
cld
repz
aas
(bad)
cld
pop
add
cmc
fcom
int3
loope
add
add
dec
inc
scas
inc
pusha
or
add
add
add
(bad)
(bad)
inc
add
add
add
add
add
add
jns
je
ins
cs
jb
ja
outs
addr16
push
gs
imul
xor
xor
inc
jne
je
jb
cmp
jb
ins
sub
push
jne
ins
imul
imul
bound
xor
data16
xor
fs
add
adc
gs
cs
jb
ja
outs
addr16
imul
add
popa
je
pop
add
add
add
add
add
lsl
add
mov
mov
inc
or
add
or
add
add
add
add
or
add
add
pusha
outs
rol
add
add
inc
dec
inc
add
mov
or
popa
add
jo
pop
jae
add
ret
add
push
ret
add
outs
test
add
adc
inc
inc
push
pop
inc
in
rol
inc
popf
or
arpl
leave
(bad)
xor
fnstenv
mov
mov
pop
mov
cmp
(bad)
sti
std
(bad)
outs
xlat
outs
mov
cli
sbb
stc
pop
ja
jmp
test
jmp
mov
push
test
adc
xchg
fs
mov
imul
bound
sbb
(bad)
cmp
mov
dec
shr
retf
(bad)
jle
mov
pop
lds
adc
test
adc
imul
xor
mov
jnp
xchg
sub
ret
shl
test
fstp
or
pop
mov
iret
push
pop
fisubr
push
test
cmps
xchg
lea
shr
pop
jno
fmul
clc
pop
movs
test
sub
cmp
les
movs
pusha
mov
fstp
nop
or
add
repz
or
sbb
movs
inc
retf
popa
mov
push
(bad)
hlt
rol
inc
push
xchg
cmp
jnp
inc
mov
into
outs
pusha
sub
ja
mov
inc
lods
pop
sbb
mov
cli
movs
aad
jbe
stc
in
test
mov
mov
xor
lds
enter
ja
xchg
mov
lahf
cdq
popf
cld
fwait
dec
and
cs
push
daa
call
shl
stc
jno
sti
pop
mov
xor
dec
(bad)
movs
repz
into
(bad)
cwde
test
int3
adc
(bad)
fcmovb
pop
push
adc
cmp
lahf
and
mov
icebp
mov
arpl
loop
or
iret
cdq
daa
and
imul
ins
daa
sbb
gs
dec
inc
loope
jo
repz
in
add
mov
pop
rol
xor
mov
int3
loope
mov
pop
push
xor
loopne
ss
lea
pusha
xchg
hlt
mov
xor
xchg
sub
sub
fnstenv
and
mov
mov
icebp
pop
gs
inc
xlat
into
call
sbb
sub
pop
jmp
pushf
xor
or
mov
std
mov
movs
mov
es
sbb
sti
mov
mov
cmp
push
or
std
cmc
in
jae
inc
adc
fistp
add
cmp
xchg
and
in
mov
enter
pop
push
jbe
ins
pop
ins
add
sbb
push
out
sub
loopne
repz
pop
imul
mov
les
fisttp
push
xchg
push
leave
ins
sti
jmp
mov
xor
cli
neg
and
ds
mov
aas
cmp
outs
cmp
cli
sar
dec
in
jns
jbe
xor
jle
call
cmc
loope
(bad)
inc
push
addr16
cwde
(bad)
ja
leave
shr
(bad)
rcl
xchg
jecxz
push
mov
lds
sub
les
sbb
(bad)
mov
cmp
mov
cld
nop
(bad)
ins
or
int
test
mov
xchg
in
(bad)
std
hlt
lods
call
fwait
ja
sub
pop
dec
and
pop
outs
arpl
cmp
sub
call
mov
jbe
out
cs
add
hlt
retf
pop
adc
aam
jnp
add
lods
push
in
stos
jl
cmp
scas
lods
dec
xchg
fnstsw
sub
pop
inc
sti
push
fstp
lahf
xor
and
not
pop
popa
pop
imul
jmp
call
sbb
jmp
sbb
into
out
test
pop
mov
adc
cdq
or
add
xchg
xor
adc
cmps
daa
or
push
retf
stc
iret
test
jg
nop
addr16
dec
out
cmp
in
pop
add
jl
outs
out
sbb
inc
out
shl
(bad)
or
in
test
bound
popa
dec
adc
push
sbb
mov
and
jo
mov
push
pop
fs
inc
xchg
mov
aaa
or
xor
add
sar
xor
test
and
repz
jnp
shl
mov
sub
mov
mov
jl
or
adc
test
(bad)
jg
addr16
inc
jae
xchg
adc
mov
iret
fsub
xlat
or
push
adc
fs
cwde
mov
sti
dec
in
or
mov
mov
sti
sbb
xor
dec
retf
rep
call
iret
mov
js
aad
ds
das
mov
jno
aas
add
into
dec
pop
jle
inc
mov
cmp
inc
ret
jp
arpl
repnz
dec
jecxz
adc
dec
jae
aas
and
inc
jb
adc
xchg
add
xchg
rcl
js
rcr
or
inc
push
int
sub
mov
inc
bound
push
in
xlat
sbb
push
sub
inc
dec
loop
aaa
push
movs
mov
repz
xor
xchg
jo
mov
push
nop
movs
and
jp
retf
test
imul
adc
fbstp
cs
mov
mov
xchg
add
(bad)
fwait
or
xchg
movs
sti
ds
jg
pop
leave
mov
repz
and
and
sbb
mov
pop
out
outs
test
mov
xchg
push
orps
cdq
pop
ins
or
pop
xchg
fiadd
leave
or
mov
clc
or
push
fimul
mov
mov
ret
xor
mov
cmp
mov
xchg
pop
outs
sbb
push
or
icebp
inc
inc
cmc
xor
dec
sub
or
mov
or
jecxz
sub
rcr
dec
aaa
fcomp
faddp
jl
jbe
sub
rcr
pushf
push
les
ja
ss
mov
xchg
cmp
pop
jle
or
pop
mov
loope
mov
sbb
and
xor
mov
jae
retf
or
or
mov
arpl
mov
(bad)
jae
mov
cdq
popf
int
pop
(bad)
xchg
adc
arpl
xchg
pop
cmp
jne
iret
lods
sbb
jmp
push
test
cli
lods
lock
mov
movs
aas
shl
scas
out
xor
lods
cdq
stos
sti
mov
cld
mov
(bad)
lea
iret
outs
je
xor
sahf
xor
retf
rcl
mov
and
sbb
mov
cmp
push
xor
jg
leave
xchg
and
cmp
push
push
inc
arpl
test
push
imul
ja
nop
xor
cmp
lahf
or
aaa
mov
dec
(bad)
mov
dec
mov
iret
adc
xchg
adc
inc
repz
add
cmp
into
adc
addr16
(bad)
je
stos
adc
out
sti
imul
pusha
mov
fbld
ret
mov
or
ins
out
sub
rcr
adc
mov
jne
mov
jg
adc
outs
or
cs
mov
jle
lods
xor
sti
repz
daa
inc
sbb
das
add
add
jmp
sbb
out
sbb
jg
jl
loope
mov
sub
jecxz
mov
mov
cld
lods
out
ret
out
xchg
mov
mov
jbe
sbb
dec
sub
daa
mov
fimul
arpl
aam
mov
cmp
add
push
movs
mov
cmp
retf
mov
daa
dec
pop
fscale
cmps
and
inc
push
cmp
mov
cmp
nop
or
lock
pop
aam
int3
jl
jne
std
les
movs
out
push
daa
mov
push
push
jmp
outs
mov
mov
sbb
daa
inc
pop
popa
pop
mov
popf
(bad)
jo
pop
aas
mov
ficom
cli
into
ja
cmp
mov
mov
ret
mov
repz
out
or
sbb
retf
fs
sub
jmp
(bad)
jno
leave
hlt
mov
ror
movs
adc
sbb
outs
xchg
out
jmp
test
fiadd
into
lahf
retf
push
rcr
xor
sbb
fistp
mov
push
lods
xlat
fidiv
inc
xchg
mov
xchg
fwait
imul
jmp
fistp
xchg
scas
mov
xchg
adc
adc
xor
inc
jle
xor
mov
mov
jle
sub
aam
sub
dec
pusha
ffree
inc
push
push
or
test
mov
gs
mov
das
sub
pop
sub
jg
xchg
xchg
(bad)
pop
xor
ins
pusha
mov
sbb
test
in
jae
daa
xchg
add
imul
xor
sub
(bad)
mov
jl
sahf
push
lock
mov
sub
test
pop
out
test
push
fwait
mov
enter
out
clc
test
sbb
adc
(bad)
outs
loopne
inc
jbe
test
popf
ret
in
mov
cmp
das
sar
cld
mov
adc
sub
dec
mov
addr16
jmp
add
mov
add
scas
cmp
and
sub
xchg
cwde
mov
xor
mov
push
imul
xor
lds
fsub
sub
and
push
into
xchg
pop
xchg
popf
mov
jmp
mov
stos
mov
adc
retf
shl
xor
shl
adc
sbb
mov
stos
dec
or
shl
mov
outs
addr16
or
cld
jns
and
ja
xor
mov
add
xor
out
ror
push
(bad)
add
and
pop
jl
push
cs
push
addr16
pop
int3
shl
les
mov
arpl
or
and
push
scas
je
jmp
jmp
mov
cmp
sti
into
std
sub
mov
add
xor
mov
outs
test
jbe
lods
push
dec
inc
mov
ins
xor
jne
jp
call
pop
into
gs
aad
rcr
into
push
ss
stc
aad
mov
mov
pop
(bad)
mov
cmps
push
mov
mov
xor
xor
call
mov
and
adc
jo
cmp
and
mul
in
sti
xchg
sub
out
(bad)
lods
mov
movnti
mov
scas
push
rcr
jbe
mov
(bad)
cmps
mov
aam
sbb
adc
mov
jl
mov
cdq
mov
jmp
je
pop
sub
out
movs
push
pop
dec
jae
iret
icebp
mov
or
mov
fwait
xor
ret
push
outs
mov
dec
(bad)
mov
mov
and
mov
out
xchg
inc
mov
xor
dec
out
adc
jmp
aad
sub
call
jo
dec
xchg
xor
mov
inc
cwde
mov
lea
push
repz
mov
sbb
sub
pop
mov
loope
or
add
hlt
cli
mov
ret
ret
mov
adc
ja
push
ror
les
sub
jecxz
outs
xchg
mov
out
or
pop
xchg
cdq
loope
adc
or
(bad)
jp
xchg
stos
adc
aam
jmp
sbb
xor
fwait
pop
cwde
pusha
cmps
push
jne
dec
lock
jno
sbb
mov
mov
aam
mov
(bad)
and
pop
lock
adc
adc
das
mul
cs
aad
sar
pop
outs
mov
jg
lods
mov
mov
ds
jl
pop
out
js
hlt
and
rcr
sub
cwde
jnp
and
push
mov
idiv
dec
loope
sbb
sbb
sub
daa
sub
out
pusha
retf
pop
enter
mov
cmps
fadd
fidiv
mov
jg
add
das
pop
xchg
xchg
retf
cmps
add
stos
int
or
push
les
out
fist
hlt
pushf
push
and
out
jecxz
pop
les
pop
test
mov
ror
xor
push
leave
mov
(bad)
xchg
ja
and
xchg
inc
sub
adc
xor
jo
xchg
in
push
arpl
sub
adc
popa
and
out
jl
dec
jns
xor
adc
mov
jecxz
in
dec
rol
ds
jecxz
mov
mov
popf
and
inc
dec
shr
icebp
jne
xchg
popf
mov
add
mov
sbb
xchg
dec
add
mov
(bad)
sbb
(bad)
pushf
add
or
add
shl
scas
cs
stc
jne
ins
stos
ficomp
sbb
sub
ror
fidivr
sbb
repz
icebp
fcomi
ret
sbb
(bad)
pushf
outs
mov
in
mov
movs
es
inc
jne
xor
cmp
loopne
addr16
and
inc
loop
jecxz
mov
pop
dec
aam
int3
or
outs
call
pop
push
call
xor
psrld
adc
in
fxch
ja
stos
dec
out
ffreep
(bad)
xor
pop
pop
test
or
dec
jmp
(bad)
or
pop
adc
les
test
stos
jae
or
jl
adc
iret
pushf
sub
cmc
and
leave
arpl
cmp
sub
jle
daa
adc
ret
or
(bad)
adc
sbb
movs
inc
or
or
adc
aaa
fsubr
add
push
or
xchg
add
test
or
lods
add
lds
inc
mov
fist
cdq
bound
iret
test
ss
cmp
inc
and
mov
sub
mov
cli
sbb
test
sub
ret
push
push
push
cmp
jno
mov
add
lds
sbb
mov
test
lock
inc
ins
xchg
push
sahf
xchg
or
mov
sbb
das
xchg
fsubr
loop
hlt
dec
(bad)
clc
pushf
cmp
(bad)
xchg
imul
jns
push
pushf
movs
popf
mov
adc
stos
stos
mov
pop
sub
jmp
mov
(bad)
jle
test
retf
lahf
jmp
stos
xor
add
and
dec
in
jns
push
sub
ins
into
xor
test
add
call
test
in
popa
mov
test
dec
push
ja
movs
movs
adc
jne
mov
mov
jecxz
scas
dec
ja
out
fbld
push
shr
rol
retf
imul
mov
push
adc
out
enter
xchg
movs
retf
push
daa
mov
ret
lahf
sub
ret
fstp
fistp
or
pop
retf
mov
lahf
pop
popa
jno
mov
xchg
cmp
inc
repz
pop
jmp
mov
scas
jne
and
nop
jg
mov
and
loop
adc
lods
es
lahf
fst
int
cmp
cwde
repz
cli
sbb
mov
loopne
mov
pushf
ror
fistp
jmp
fnsave
rcl
ficomp
xor
clc
arpl
fcomp
sbb
xchg
loope
mov
sahf
(bad)
adc
not
adc
xor
add
mov
sar
xchg
jl
jo
sbb
inc
jp
retf
xchg
push
xchg
sub
and
gs
sbb
and
or
jp
les
rcr
sbb
dec
push
scas
pop
fdivrp
rol
sar
out
iret
xchg
and
dec
push
sbb
xchg
cmp
inc
push
and
lahf
adc
inc
xor
repz
pushf
gs
push
test
and
lods
xor
dec
cmp
cmc
test
loop
sub
mov
ja
inc
xor
lods
inc
cmps
cs
lahf
div
pop
daa
lods
mov
dec
cmc
mov
retf
lahf
inc
and
sbb
out
jg
stc
out
jg
stc
jg
add
pop
imul
add
dec
inc
dec
inc
scas
inc
pusha
or
add
add
add
(bad)
(bad)
inc
add
add
add
add
add
add
jns
je
ins
cs
jb
ja
outs
addr16
push
gs
imul
xor
xor
inc
jne
je
jb
cmp
jb
ins
sub
push
jne
ins
imul
imul
bound
xor
data16
xor
fs
add
adc
gs
cs
jb
ja
outs
addr16
imul
add
popa
je
pop
add
add
add
add
add
lsl
add
les
add
add
or
or
add
or
add
add
add
add
or
add
add
pusha
outs
rol
add
add
inc
dec
inc
add
mov
or
popa
add
jo
pop
jae
add
ret
add
push
ret
add
outs
test
add
adc
inc
inc
push
pop
inc
in
aad
inc
xchg
or
adc
shl
xchg
out
inc
mov
inc
dec
mov
jmp
xchg
nop
adc
adc
jmp
mov
gs
clc
(bad)
stos
mov
sbb
ins
stc
xor
or
dec
pop
mov
adc
mov
(bad)
push
jmp
cmp
cdq
dec
es
int3
pop
and
into
xor
stos
push
inc
test
out
adc
inc
dec
add
add
cmc
das
push
push
repnz
mov
mov
jecxz
pop
adc
mov
jle
(bad)
aam
mov
adc
add
mov
outs
stos
stc
sub
test
mov
mov
push
movs
mov
mov
mov
movs
movs
iret
cmc
dec
je
xchg
movs
in
mov
outs
out
mov
lds
punpcklbw
pop
fbstp
jae
xor
rcl
fisttp
jo
ins
(bad)
aad
lock
cwde
push
mov
mov
mov
fwait
test
ficom
xor
inc
icebp
in
xchg
inc
popa
lahf
cmp
push
pop
push
sbb
pminsw
inc
mov
test
pop
mov
movups
jle
lea
jne
aaa
pop
mov
push
mov
stos
es
jns
and
in
test
mov
mov
(bad)
pop
je
or
sahf
xchg
xchg
push
loopne
pusha
lds
(bad)
neg
aaa
cmp
scas
add
pop
dec
dec
mov
mov
and
das
dec
add
inc
mov
fistp
leave
adc
aad
jno
imul
or
out
cmp
ret
cmps
ds
mov
(bad)
xor
mov
mov
sbb
pop
pushf
idiv
xchg
sub
or
popa
dec
(bad)
mov
xchg
sbb
in
(bad)
into
pop
int
lods
je
das
xor
and
xor
xchg
fsub
fwait
xor
mov
xchg
je
adc
mov
ret
push
pop
aaa
cmp
push
jne
or
loope
je
or
push
enter
out
(bad)
ret
lods
push
stos
xor
je
inc
aas
sbb
xor
mov
cmp
pop
pop
enter
pop
and
mov
sbb
call
in
push
hlt
cmc
je
pop
ss
xchg
jle
xor
aam
sub
mov
push
adc
mov
jge
cmp
movs
sub
xor
adc
push
mov
nop
loopne
(bad)
inc
fldcw
cld
(bad)
shr
mul
mov
(bad)
or
jmp
mov
sub
gs
jb
xchg
jb
add
int3
mov
loop
movs
cli
dec
and
mov
enter
std
jl
scas
dec
js
fsubr
test
jbe
mov
and
mov
in
mov
mov
xchg
sar
mov
push
lods
mov
mov
stos
jg
inc
call
hlt
xchg
push
inc
cmps
xor
sbb
xchg
lods
in
int3
pop
(bad)
sub
sub
or
into
das
sbb
inc
mov
inc
adc
(bad)
in
adc
bound
mov
jae
rcl
repnz
cmp
mov
enter
arpl
ffreep
fbstp
arpl
and
inc
mov
adc
ss
mov
lock
test
add
bound
mov
retf
aad
mov
add
cmp
xchg
mov
mov
test
js
daa
jmp
push
aam
cmp
or
stc
xlat
les
sbb
xor
xor
sti
gs
arpl
fldenv
or
mov
pop
add
clc
ins
sbb
int
push
xchg
cmp
cwde
sub
jb
and
repnz
pusha
cmp
pop
ins
inc
fwait
inc
int
or
jecxz
pop
sub
sbb
mov
push
sti
mov
bound
popf
popa
imul
mov
fild
jnp
push
fsubrp
arpl
sbb
pushf
pop
push
int
jb
cwde
std
add
cmp
fld
jecxz
xor
push
div
aaa
nop
pop
(bad)
mov
sub
aas
out
xor
outs
fadd
ss
sbb
xchg
mov
dec
push
inc
adc
outs
ss
lods
pop
mov
jmp
mov
mov
scas
(bad)
lock
dec
aaa
arpl
leave
sub
add
enter
aas
mov
inc
fwait
in
js
pusha
stc
xchg
inc
push
fild
popf
leave
add
jg
retf
jecxz
fld
sub
pusha
fmul
pop
xchg
(bad)
or
popf
ss
scas
and
jecxz
mov
mov
out
pop
jne
inc
or
jae
adc
movs
outs
hlt
out
dec
das
mov
xchg
mov
or
ins
fsubr
in
xchg
push
lahf
jno
bnd
int
xchg
aas
xchg
std
pop
jmp
and
sbb
inc
es
mov
pop
sar
pop
xchg
retf
push
sar
push
hlt
test
or
xchg
scas
mov
inc
lods
sbb
dec
test
inc
add
jae
scas
dec
pop
das
(bad)
fwait
pop
les
inc
mov
jmp
das
push
stc
lea
jne
xchg
call
mov
mov
cmp
cmp
adc
das
sub
cmps
clc
in
popf
sub
dec
cdq
test
push
fsubrp
mov
xor
sar
fs
add
ret
mov
repz
pop
lock
(bad)
and
cmp
dec
cwde
sar
mov
fchs
xor
pushf
aaa
scas
mov
retf
test
pop
loopne
xchg
adc
and
cld
add
loop
lahf
(bad)
sbb
and
hlt
test
mov
jecxz
dec
xchg
int
outs
mov
scas
xor
lock
jns
mov
mov
mov
aaa
adc
dec
adc
(bad)
xchg
mov
xor
cmps
add
sbb
lock
loopne
inc
aam
and
dec
mov
rol
loop
data16
add
and
lds
cwde
cmp
hlt
int3
cmp
mov
mov
or
mov
test
or
(bad)
retf
mov
inc
pop
lahf
dec
int3
retf
lods
push
jmp
pop
imul
or
js
mov
out
adc
dec
inc
std
enter
push
xchg
adc
mov
leave
ins
push
daa
xchg
rcr
fisub
inc
cwde
add
outs
and
call
out
fbstp
push
call
and
mov
push
or
das
jecxz
ds
rcl
dec
mov
into
adc
les
cmp
push
ret
or
test
pop
sbb
fwait
stos
imul
dec
dec
mov
inc
lods
les
sbb
jb
rcr
mov
mov
test
leave
(bad)
xchg
imul
sbb
aas
xchg
lods
cwde
xchg
mov
jae
(bad)
mov
sbb
rol
cmc
int3
dec
mov
xchg
repnz
scas
xchg
mov
mov
dec
cwde
mov
out
add
jbe
rcl
ret
ret
int3
test
lock
cwde
sbb
ja
aas
dec
mov
sub
or
dec
mov
dec
mov
popf
leave
mov
fst
lods
aad
adc
cs
fsubr
push
dec
mov
loope
inc
or
scas
(bad)
xor
es
push
cli
jl
pop
sysenter
mov
and
dec
cmp
inc
call
and
test
xor
cld
ds
pop
jle
add
sub
adc
dec
ins
and
or
xchg
jmp
jno
jae
dec
neg
outs
push
xlat
jnp
js
xchg
in
inc
into
sar
ror
bound
push
stos
test
repnz
nop
call
adc
mov
cmps
std
inc
test
daa
mov
adc
stos
sub
xor
outs
inc
hlt
outs
pop
cli
fcom
dec
xor
loop
mov
adc
addr16
pop
mov
dec
pop
jae
push
sahf
pop
cmp
lods
jbe
imul
je
mov
mov
mov
int
mov
ficomp
popa
dec
mov
repnz
(bad)
mov
stc
cmp
xchg
mov
test
sbb
pop
cmc
js
push
lock
fucomip
rcl
jl
aam
inc
test
cmp
mov
cmp
sbb
enter
retf
test
jg
hlt
pop
inc
xor
jle
jmp
inc
xchg
jmp
test
push
jo
or
outs
call
jp
mov
fdivr
pop
pop
xchg
fldcw
mov
xor
or
pushf
ficomp
or
je
mov
fs
inc
addr16
pop
je
and
xchg
shl
mov
mov
not
or
or
in
xor
call
cmp
leave
fcmovb
je
cmp
push
pop
neg
mov
test
(bad)
pop
push
mov
inc
adc
xor
jge
dec
jge
dec
nop
cmp
jmp
repz
out
cmp
pushf
add
fstp
mov
js
aad
rol
in
inc
mov
push
mov
in
gs
xor
pusha
xor
dec
sbb
std
out
lock
fcomp
cs
arpl
mov
mov
xchg
test
mov
cmp
shl
push
xor
mul
mov
sbb
add
int
mov
and
lahf
in
sub
icebp
movs
jle
leave
lea
lods
sub
cdq
out
push
dec
das
push
(bad)
das
ret
inc
push
push
mov
sbb
sti
mov
mov
out
jb
jbe
int3
ss
out
and
int
sbb
arpl
sub
cmp
(bad)
mov
stc
sti
mov
aam
pop
mov
and
jnp
cmp
popf
out
adc
mov
xor
mov
inc
add
sub
mov
push
adc
mov
outs
push
xor
in
fcmovnb
inc
xchg
in
or
lock
shl
jecxz
xlat
lods
sbb
aas
arpl
and
mov
sti
or
int
(bad)
inc
das
repz
retf
push
in
sbb
or
inc
mov
xor
add
psubd
cli
leave
bound
sub
out
and
dec
test
popf
xor
sbb
mov
add
sub
pop
add
pushf
arpl
idiv
push
test
sub
iret
pop
fdivp
icebp
dec
sti
pop
rol
mov
rcr
fucomp
push
dec
cdq
loopne
rcr
into
fisubr
arpl
push
mov
dec
ret
and
jae
cs
jecxz
mov
je
push
icebp
jno
pop
in
aad
dec
pop
iret
mov
std
test
jns
icebp
push
xchg
add
jbe
ss
ins
mov
push
in
cwde
outs
call
fistp
adc
cld
and
mov
xor
dec
lods
mov
sti
cli
shl
mov
ins
addr16
lahf
fmul
xchg
cmp
lahf
jae
push
stos
(bad)
int3
add
in
pop
in
out
rcr
das
mov
popf
mov
xchg
dec
rol
pop
adc
addr16
jno
xchg
push
lea
into
add
sub
inc
jg
out
add
add
lds
lods
hlt
and
jl
mov
inc
mov
cmp
in
fwait
jne
movs
dec
mov
adc
aaa
inc
fst
add
or
loop
fs
addr16
cmps
mov
push
jmp
in
adc
inc
(bad)
std
mov
sbb
mov
cdq
mov
lods
mov
push
xchg
je
mov
sub
sbb
es
ins
mov
dec
add
jne
jne
fsubr
xchg
fs
rol
and
xor
mov
push
imul
test
mov
sbb
dec
add
scas
sub
adc
outs
je
add
pop
pop
std
shr
jl
cmps
ss
fucomip
retf
xor
pop
cs
sbb
fsubr
loope
pop
je
jge
int
mov
mov
mov
or
cmp
inc
cmp
div
into
push
outs
stos
dec
push
jmp
cmp
sbb
sub
mov
jmp
gs
xor
mov
push
mov
mov
int3
ins
push
aas
pop
xor
movs
je
bound
or
mov
int3
pop
idiv
(bad)
and
xchg
jnp
jae
movs
add
xchg
sbb
ror
clc
or
add
xchg
popf
or
jnp
adc
cli
pop
xchg
sti
ds
dec
xchg
dec
aas
push
mov
je
push
test
sub
and
sub
aaa
pop
ins
(bad)
or
add
imul
jnp
jno
imul
ficom
mov
push
dec
idiv
aaa
sub
xlat
pop
jns
call
mov
(bad)
test
repz
xchg
pop
retf
pop
xchg
push
sbb
sub
test
movs
add
jecxz
mov
popa
les
mov
sub
jae
out
pop
push
push
cmp
push
jecxz
adc
and
leave
neg
mov
das
ja
pop
adc
push
cmc
lock
scas
in
shl
aas
mov
out
loope
aaa
mov
jmp
iret
jb
enter
jno
mov
mov
inc
inc
dec
add
add
sti
adc
rol
jle
sub
stos
pop
mov
daa
fwait
sub
arpl
out
test
inc
mov
test
cmp
mov
cmc
mov
inc
xchg
sbb
(bad)
xor
stc
cmp
daa
mov
call
sahf
xlat
cdq
push
fcmovbe
js
fldcw
stc
dec
test
pop
retf
add
pop
mov
jg
jmp
mov
xor
test
pushf
cld
repz
shr
outs
data16
pop
dec
jl
jmp
or
and
test
xchg
and
cwde
mov
into
out
jle
punpcklbw
repz
test
xor
mov
dec
or
jecxz
daa
mov
icebp
data16
dec
pop
lahf
stos
cs
sti
fbstp
(bad)
bound
test
in
fdivr
jl
in
jae
(bad)
inc
sbb
ds
inc
jg
mov
cmp
mov
in
mov
adc
push
or
lds
cs
or
xchg
jnp
add
mov
in
lods
ss
stos
enter
call
cs
pop
dec
(bad)
or
cdq
loope
je
cmp
loop
sub
jno
aaa
and
rcl
xchg
adc
icebp
dec
jns
xor
sub
popa
pop
jns
inc
je
mov
cmps
inc
push
sti
in
mov
pop
popf
xchg
(bad)
pop
in
jmp
dec
add
fstp
out
addr16
loop
(bad)
push
cmp
loop
daa
adc
gs
in
outs
icebp
or
gs
push
mov
retf
stos
xchg
mov
ins
lods
cmp
mov
mov
push
cli
rcl
nop
cs
push
inc
lods
das
pop
pushf
scas
out
les
mov
push
cs
mov
aas
xchg
data16
add
or
mov
jmp
mov
inc
cmc
fs
js
imul
retf
pop
add
cli
xor
stos
and
dec
dec
xor
dec
xchg
sbb
call
fimul
xlat
arpl
fnstenv
lahf
sub
sti
or
push
scas
mov
and
jb
jno
in
leave
pop
add
push
fwait
out
mov
aaa
xlat
fild
pop
in
inc
bnd
stc
rol
xor
into
(bad)
or
popa
(bad)
mov
jo
xor
or
mov
retf
add
lahf
or
jmp
sub
pusha
sbb
add
xor
adc
mov
push
das
aam
je
and
push
pusha
mov
xor
ror
popf
(bad)
aam
out
out
cdq
fild
pop
xor
out
(bad)
stc
iret
jg
repz
add
pop
ds
cld
push
push
movs
adc
add
add
dec
inc
dec
inc
scas
inc
pusha
or
add
add
add
(bad)
(bad)
inc
add
add
add
add
add
add
jns
je
ins
cs
jb
ja
outs
addr16
push
gs
imul
xor
xor
inc
jne
je
jb
cmp
jb
ins
sub
push
jne
ins
imul
imul
bound
xor
data16
xor
fs
add
adc
gs
cs
jb
ja
outs
addr16
imul
add
popa
je
pop
add
add
add
add
add
lsl
add
mov
mov
inc
or
add
or
add
add
add
add
or
add
add
pusha
outs
rol
add
add
inc
dec
inc
add
mov
or
popa
add
jo
pop
jae
add
ret
add
push
ret
add
outs
test
add
adc
inc
inc
push
pop
inc
in
rol
sbb
add
loopne
pop
mov
jns
(bad)
xor
mov
int
mov
fld
fnsave
fisttp
stc
idiv
add
fs
sar
data16
fiadd
mov
cli
xchg
dec
mov
push
sbb
mov
iret
in
(bad)
out
mov
mov
lahf
sbb
mov
(bad)
(bad)
fcmovbe
out
(bad)
arpl
out
cmc
push
jns
bound
adc
nop
test
mov
aas
das
cmp
fnsave
pop
enter
dec
cli
push
test
inc
mov
sub
add
sub
aaa
in
push
jmp
add
pop
stos
cld
hlt
or
inc
xor
push
cmps
jmp
movs
mov
sub
dec
pop
mov
clc
xchg
cmp
imul
out
clc
push
xchg
adc
and
(bad)
fnstenv
cwde
sub
cwde
jo
leave
outs
fisub
in
ret
or
jmp
fdivr
xchg
ror
sbb
or
pusha
dec
lahf
jmp
int3
add
fsubr
mov
pop
fcom
mov
jnp
ret
ss
push
cdq
sti
cmp
mov
jl
mov
aas
cmp
jb
mov
cmp
mov
arpl
imul
jmp
in
icebp
mov
mov
(bad)
and
mov
sub
leave
or
stos
adc
(bad)
jnp
out
cmp
xor
inc
push
mov
int
xor
add
movs
rcr
fdiv
fwait
inc
mov
xchg
mov
imul
push
fs
stos
popa
mov
sbb
ficom
cmp
das
or
add
out
xchg
and
hlt
sbb
mov
jmp
sbb
sub
cmp
dec
cmps
jns
(bad)
mov
ins
mov
cdq
xchg
mov
and
mov
push
xchg
inc
push
push
add
jp
es
shr
mov
imul
mov
mov
push
out
xor
out
add
hlt
mov
cmp
cmp
cli
and
das
gs
outs
fcmovu
sub
imul
add
xchg
add
sub
scas
scas
cmc
xlat
sahf
lods
and
loop
arpl
cmps
inc
cmp
xor
cmp
repnz
fmul
sub
push
sub
xchg
xchg
rcr
arpl
push
push
mov
icebp
mov
bound
aam
pusha
inc
pusha
xor
fist
cli
sti
cmp
push
mov
movs
bound
sahf
or
(bad)
jmp
mov
test
shl
mov
xor
popa
les
data16
and
xor
push
ins
jp
call
scas
adc
xlat
outs
sub
aas
das
sub
xchg
les
retf
das
push
gs
in
mov
mov
push
and
sbb
mov
pop
sub
and
push
jle
nop
call
fdiv
fidiv
cmp
outs
add
fwait
call
ror
mov
out
fistp
and
adc
or
push
mov
cmp
inc
lea
pop
stos
push
mov
cmp
idiv
or
jb
jle
leave
adc
inc
sbb
xchg
in
repz
std
clc
ja
repz
mov
cwde
sbb
adc
mov
sub
scas
or
xchg
adc
mov
mov
mov
(bad)
push
into
inc
and
dec
cmp
dec
push
int3
adc
in
js
mov
jns
sbb
cmp
sbb
arpl
mov
pop
push
adc
jp
iret
dec
jne
les
ret
inc
sub
mov
xchg
or
add
addr16
jns
jg
xchg
push
mov
sar
inc
stos
mov
mov
inc
mov
sbb
fidivr
mov
sti
test
lock
mov
mov
and
int3
push
push
sbb
fbld
pop
cmps
and
ins
jno
and
daa
cmp
sub
repnz
push
pop
lods
fsub
push
push
loopne
jmp
jns
(bad)
mov
mov
cli
xchg
xor
cs
aas
sub
retf
ror
std
loopne
icebp
dec
mov
out
cmps
jne
xchg
jnp
test
ins
aad
idiv
cmp
clc
scas
pop
outs
cmps
(bad)
lea
(bad)
lea
mov
cmp
cmp
dec
retf
jb
xchg
adc
mov
xor
ins
push
xor
xor
outs
mov
addr16
mov
test
jno
jg
or
ins
mov
inc
inc
fs
cmp
ja
push
jbe
icebp
test
sub
mov
adc
ins
in
sahf
mov
push
lds
push
outs
mov
sti
in
lahf
je
loopne
push
fld
cli
and
cdq
pop
das
adc
sub
scas
push
mov
out
ret
xchg
lds
xor
ja
(bad)
fadd
cmp
jno
or
in
popf
cmp
adc
mov
xchg
cmp
xchg
sbb
jp
xchg
dec
js
jl
mov
xor
cmc
mov
mov
aaa
fcmovu
retf
pop
sub
repnz
push
cmps
aaa
fisttp
pop
stos
aaa
pop
lea
jmp
xor
fld
inc
mov
ficomp
or
mov
loop
(bad)
push
test
shl
shl
(bad)
cmp
ins
xchg
cmp
mov
lods
dec
data16
mov
pusha
adc
mov
xchg
inc
std
push
pop
sub
pop
scas
xchg
pop
ror
jnp
lods
inc
inc
sbb
scas
jo
inc
mov
ins
cmps
mov
stc
mov
(bad)
pop
mov
(bad)
mov
loope
test
sbb
or
ins
clc
je
adc
lds
pop
pop
(bad)
xlat
cdq
and
imul
cmp
push
pushf
inc
into
fmul
mov
call
div
sbb
or
in
pop
sar
(bad)
jmp
popf
leave
xor
sbb
xchg
mov
push
mov
fwait
leave
and
outs
int3
icebp
mov
hlt
test
push
cmp
push
ja
adc
int
pop
xchg
adc
int3
call
sub
xchg
aad
adc
shl
sub
mov
mov
xor
fincstp
call
push
xchg
mov
int
mov
mov
push
cli
aaa
mov
dec
shr
sbb
sbb
jp
dec
mov
rol
mov
cmp
cli
inc
and
push
(bad)
pop
cmp
cdq
daa
push
pop
push
xchg
xchg
xchg
xchg
rcl
inc
jne
pop
jg
mov
xchg
or
add
jne
enter
hlt
xor
je
lds
xor
test
cli
jb
and
sub
pop
repz
scas
outs
test
loop
inc
xor
sbb
icebp
scas
adc
mov
sbb
xor
ret
or
iret
leave
and
outs
neg
lahf
test
mov
in
ffree
fxch
push
jl
(bad)
out
mov
mov
test
push
push
inc
stc
lock
sar
lods
sub
aaa
dec
dec
sbb
movs
mov
adc
dec
stc
xor
sub
adc
pusha
push
scas
add
xor
xor
or
pop
(bad)
pop
cmp
xchg
fistp
cmps
or
cmp
or
dec
jb
cmp
out
mov
int
out
adc
ret
sub
lahf
ins
sbb
xchg
pop
fisub
mov
js
xor
mov
popa
or
(bad)
xor
sbb
xor
pop
mov
xchg
addr16
data16
sub
push
push
fistp
xchg
repnz
out
in
push
push
mov
mov
and
and
jmp
mov
fsub
cmps
cmps
je
cmp
jne
dec
sbb
xchg
push
stos
or
and
sub
inc
dec
push
popa
cli
mov
or
(bad)
test
jle
pop
punpckldq
(bad)
mov
mov
add
mov
inc
out
jnp
mov
and
icebp
and
cli
ds
enter
mov
lods
mov
mov
mov
movs
push
jbe
mov
in
dec
gs
jb
int
xor
add
aaa
pusha
add
shl
and
aas
call
pop
jecxz
test
ficom
(bad)
imul
mov
js
mov
test
xor
test
or
arpl
mov
pop
clc
inc
inc
mov
jbe
sbb
xchg
pop
aaa
nop
rcr
scas
call
dec
daa
cmp
mov
pop
das
push
retf
dec
inc
sbb
jmp
popf
xor
push
out
bound
jo
imul
jmp
and
add
aas
call
jnp
gs
fisttp
ins
xchg
mov
xchg
inc
jno
(bad)
call
js
or
loope
mov
dec
xchg
mov
out
fbstp
imul
popa
mov
leave
inc
jmp
xchg
jbe
dec
xor
sub
test
out
sub
in
in
repz
or
jmp
movs
inc
jnp
stos
ror
cmp
add
bound
ret
shl
mov
sub
jbe
sub
jno
dec
cs
jmp
mov
fmul
mov
push
mov
cmp
rcl
jl
inc
pop
adc
xchg
movs
js
ret
mov
sbb
push
adc
cmp
mov
xchg
stos
pop
mov
outs
cmps
stos
hlt
test
dec
pop
push
outs
sbb
leave
ds
xchg
shr
fbstp
sbb
sti
cwde
aam
xor
outs
dec
xchg
scas
sbb
cmc
cwde
outs
jae
xor
into
jg
aas
cmp
(bad)
popa
mov
mov
loop
inc
(bad)
cli
inc
lock
cmp
jl
pusha
add
cli
mov
pop
xchg
popa
test
inc
cdq
xchg
dec
pushf
sub
and
fsubr
mov
mov
popw
inc
loope
sub
enter
or
lods
or
push
aad
jg
mov
mov
adc
sbb
jns
or
fsub
push
out
add
mov
jp
adc
inc
cmp
jns
dec
cli
xchg
fst
loope
loopne
mov
sub
jae
sbb
and
jmp
test
js
mov
clc
cmp
add
jnp
mov
dec
mov
sti
sbb
aad
sub
loop
mov
das
movs
fldcw
scas
(bad)
(bad)
cmc
bnd
mov
push
repz
je
jmp
clc
or
gs
sbb
stc
jmp
in
cmp
movs
or
clc
mov
sti
(bad)
cmp
mov
adc
and
stc
in
aad
aad
sub
cdq
mov
push
cmp
add
lds
push
fisub
push
in
xchg
or
inc
sub
mov
push
ds
je
or
sub
pop
into
cmps
dec
mov
cmp
mov
ret
out
push
pushf
or
movs
mov
pop
dec
push
jnp
pop
sbb
dec
mov
mov
repz
jecxz
or
popf
dec
std
loop
loope
xor
add
mov
call
daa
push
adc
rcr
mov
and
push
cmp
cmc
stos
loope
popf
or
test
or
cmp
cmp
mov
inc
xchg
es
jmp
mov
pop
add
outs
outs
imul
jnp
mov
xchg
or
dec
pop
mov
xlat
inc
mov
push
fidivr
retf
jcxz
std
fbstp
pop
in
movs
sub
push
pop
jmp
xor
js
or
cli
mov
inc
jae
sbb
cmps
pop
jecxz
jae
mov
jns
add
loop
je
xor
and
out
lods
sti
fsub
dec
icebp
jne
js
jo
scas
cmp
mov
pushf
cmp
cli
jnp
inc
adc
push
in
xor
ret
or
cmp
mov
mov
dec
jg
lea
sbb
scas
pop
sbb
or
fld
shr
hlt
in
icebp
test
or
add
cmc
in
(bad)
outs
(bad)
int3
ins
sub
and
lahf
mov
cmp
jl
ins
(bad)
jecxz
xchg
add
pop
pop
xor
jl
and
je
sbb
cmp
outs
mov
nop
pop
scas
cmp
add
sbb
idiv
std
les
out
mov
mov
aas
mov
mov
pop
and
sbb
mov
retf
faddp
xor
and
xchg
sbb
mov
jecxz
jmp
adc
movs
dec
push
(bad)
ins
sub
dec
in
gs
mov
push
ret
jge
in
add
test
out
inc
or
mov
and
sti
(bad)
push
sti
mov
stc
mov
das
adc
push
in
and
sub
pushf
add
mov
push
loope
les
mov
sub
icebp
xor
sbb
sbb
xchg
je
clc
(bad)
sub
cld
out
cmps
mov
mov
xor
jb
push
ins
pushf
adc
xor
jo
popf
mov
cmps
adc
dec
mov
push
adc
sub
sbb
mov
jnp
xrelease
neg
fadd
pop
sbb
enter
cwde
ins
(bad)
arpl
outs
adc
inc
je
ror
fldcw
xor
inc
add
outs
push
popf
xchg
cmps
iret
rol
out
das
sub
ret
in
sub
outs
test
outs
hlt
jge
push
movs
in
add
push
div
inc
push
mov
icebp
pop
adc
lods
outs
sar
fucomp
test
xchg
jmp
jge
cmp
add
pop
clc
movs
rol
jae
out
xchg
dec
lds
jnp
mov
test
loope
xor
sahf
sub
cli
xchg
sub
sti
jge
cmps
iret
mov
mov
or
arpl
fs
outs
push
stos
stc
sti
and
ror
data16
aad
ins
loopne
adc
icebp
fild
adc
jno
shr
mov
sti
adc
jmp
ja
lahf
outs
xor
in
aam
mov
test
and
or
jb
out
pop
lods
sbb
xor
(bad)
lds
arpl
push
mov
adc
lea
xor
xor
ret
test
les
cmp
in
xor
popf
(bad)
jp
cli
fld
sbb
popa
adc
push
call
call
cmp
arpl
in
mov
adc
dec
mov
jb
test
jmp
xor
xchg
adc
sti
mov
jae
pop
leave
xchg
das
dec
push
jno
xchg
clc
(bad)
jecxz
pusha
adc
dec
test
loopne
add
jg
adc
push
jmp
std
and
jbe
jge
inc
mov
mov
jle
sbb
stc
lods
in
in
sbb
push
and
xor
or
leave
and
adc
fild
jbe
add
aaa
pop
xor
mov
mov
push
(bad)
xor
retf
dec
cld
adc
adc
xchg
pop
cmc
dec
int3
jmp
enter
sub
xor
pop
xchg
push
xor
arpl
cmp
cdq
mov
pop
sub
push
rcl
xchg
shl
retf
repnz
dec
enter
scas
(bad)
xor
fs
fsubr
pop
jecxz
dec
push
add
shr
enter
cmp
shr
jo
fwait
ins
call
test
iret
aas
(bad)
cld
repz
aas
(bad)
cld
pop
add
inc
cs
std
xchg
add
add
dec
inc
scas
inc
pusha
or
add
add
add
(bad)
(bad)
inc
add
add
add
add
add
add
jns
je
ins
cs
jb
ja
outs
addr16
push
gs
imul
xor
xor
inc
jne
je
jb
cmp
jb
ins
sub
push
jne
ins
imul
imul
bound
xor
data16
xor
fs
add
adc
gs
cs
jb
ja
outs
addr16
imul
add
popa
je
pop
add
add
add
add
add
lsl
add
(bad)
adc
add
mov
inc
or
add
or
add
add
add
add
or
add
add
pusha
outs
rol
add
add
inc
dec
inc
add
mov
or
popa
add
jo
pop
jae
add
ret
add
push
ret
add
outs
test
add
adc
inc
inc
push
pop
inc
in
xlat
cmc
and
(bad)
jecxz
icebp
pop
daa
cmps
dec
dec
cmp
fstp
dec
jae
aaa
sbb
dec
ja
(bad)
dec
dec
ins
dec
fnsave
popf
ret
test
rcr
(bad)
div
jg
fisttp
adc
dec
(bad)
loopne
inc
daa
pop
repz
and
loope
arpl
cmp
xchg
dec
jmp
mov
mov
in
movs
in
xor
stos
xchg
mov
(bad)
jmp
test
xor
inc
mov
movaps
jge
int3
adc
xor
inc
cmc
jp
out
adc
xor
cmp
out
xor
sbb
push
lahf
adc
loope
shl
push
mov
pop
movs
clc
or
das
dec
sbb
pop
mov
mov
mov
ds
cwde
ret
inc
and
jg
fs
imul
push
lods
pop
das
push
ja
pop
int3
jle
inc
mov
jnp
(bad)
sbb
adc
inc
xchg
mov
sbb
jmp
shl
push
clc
jnp
xor
ror
jae
jmp
ja
pop
cmp
js
and
jmp
cdq
sbb
sbb
clc
pop
inc
dec
cs
cmc
or
daa
jecxz
dec
dec
(bad)
cmp
dec
iret
ja
enter
rcr
mov
adc
loopne
aas
fninit
sbb
or
es
lock
and
pop
xchg
mov
adc
call
ds
and
adc
ds
loope
fcmovu
jns
retf
jns
ss
nop
cmc
dec
call
in
ins
or
pop
(bad)
scas
fstp
mov
mov
and
push
movs
jno
push
mov
mov
div
cmp
cmp
push
adc
and
not
das
shl
cmps
cmp
es
inc
xor
mov
jle
outs
pop
cdq
ds
leave
sti
aam
rol
clc
loope
push
adc
and
retf
jl
call
clc
ds
xchg
es
add
mov
adc
in
inc
push
ret
inc
xchg
mov
fidivr
call
pop
ja
inc
sub
mov
pop
add
or
mov
pushf
pop
sub
push
ins
std
pop
loop
jae
idiv
jg
out
pop
add
xor
int3
aam
add
in
cmc
out
push
xor
xor
mov
cmp
mov
test
jo
test
mov
daa
jge
xchg
shl
dec
pop
push
icebp
jno
dec
dec
lods
dec
out
loop
mov
fistp
xchg
scas
xchg
movs
ret
add
out
pop
jnp
or
loop
loopne
pop
mov
cmp
cmc
std
mov
mov
push
dec
fld
jns
lds
test
scas
mul
fs
sub
clc
movs
xor
dec
ret
daa
xor
daa
inc
(bad)
mov
cdq
mov
xchg
or
lds
ret
fbstp
sub
imul
loop
icebp
movs
add
mov
cs
jle
das
mov
push
push
call
lea
mov
hlt
inc
xchg
pop
iret
jnp
mov
mov
mov
dec
fisttp
sbb
outs
sub
test
push
pop
call
add
(bad)
(bad)
pop
mov
or
jae
sahf
jge
arpl
sahf
mov
dec
xchg
movs
xchg
loop
jmp
nop
les
jno
fisttp
pop
push
rcr
cmps
jp
push
stc
jl
adc
pushf
dec
dec
and
cmp
icebp
test
fdivr
cmp
and
xchg
jns
out
sti
push
outs
pusha
adc
icebp
jl
xchg
mov
pop
mov
adc
dec
xchg
in
enter
adc
jns
shr
mov
mov
mov
es
loopne
pop
jge
xor
jmp
mov
mov
sub
push
sub
sti
inc
(bad)
pusha
fdivr
std
xor
sub
arpl
inc
xchg
add
push
push
aad
fwait
sahf
cmp
sti
mov
ds
and
push
jmp
xor
fwait
out
fdivr
jmp
ss
aas
les
xchg
inc
rol
icebp
fsubr
inc
sbb
les
add
pop
mov
xchg
or
sbb
ret
mov
inc
daa
rcl
add
xchg
cmp
inc
loop
fucomip
jecxz
adc
cmp
xor
mov
inc
mov
addr16
mov
in
push
cmc
pop
(bad)
xchg
add
inc
mov
test
mov
jl
outs
add
cmp
sbb
sbb
pop
dec
std
out
in
int
xlat
xor
shr
mov
xchg
mov
(bad)
cmp
sub
and
xchg
jno
sub
es
fisub
stos
or
retf
mov
cmp
in
sbb
seto
repz
fidivr
out
cmps
hlt
stos
inc
pop
inc
fisttp
cmp
imul
ds
inc
cs
jne
sub
call
jp
mov
and
je
arpl
scas
adc
or
dec
mov
loope
(bad)
sbb
outs
push
cdq
fild
aam
lahf
bound
js
bnd
xchg
push
xchg
retf
or
or
mov
cmps
mov
movs
mov
(bad)
loop
cmp
mov
jl
pop
and
js
div
into
outs
shr
dec
pop
dec
in
push
mov
mov
dec
mov
xchg
adc
push
(bad)
xchg
adc
mov
mov
jbe
loope
into
xchg
xchg
leave
dec
or
ret
xchg
push
adc
mov
jp
cmp
or
fist
es
aaa
int3
fidiv
add
enter
push
push
stos
inc
fucom
xchg
xchg
out
mov
call
cmps
mov
pop
mov
iret
or
fidivr
sub
push
dec
fidivr
sti
inc
rcr
and
cmp
sahf
test
xchg
jmp
mov
jp
test
xchg
mov
and
fistp
dec
lea
pop
rcl
js
fmul
div
jg
pop
jecxz
xchg
ss
mov
adc
sub
stos
in
inc
or
outs
mov
dec
push
daa
xchg
or
push
mov
adc
and
inc
and
fwait
data16
push
or
ret
or
push
jecxz
mov
push
xchg
lods
mul
jle
sbb
out
ffreep
fbld
lods
mov
pop
scas
(bad)
rcr
xor
mov
jecxz
jae
hlt
dec
movs
arpl
(bad)
or
inc
gs
xor
stos
and
(bad)
jle
push
mov
jo
loopne
repz
(bad)
sti
xor
gs
push
xor
(bad)
idiv
(bad)
aaa
mov
lock
xlat
out
jp
imul
jmp
call
test
daa
or
es
jg
mov
test
bound
dec
test
pop
inc
jne
rcl
fwait
jne
loop
(bad)
dec
movs
in
add
add
cmps
or
mov
sti
das
adc
xor
push
jns
aam
and
js
add
int3
fdivp
dec
ins
es
in
xchg
xor
iret
sbb
retf
mov
out
or
sub
xor
lods
fcomp
test
shr
ficomp
dec
mov
loop
push
(bad)
jmp
push
inc
push
or
mov
jge
mov
lods
dec
xor
adc
test
adc
mov
icebp
fist
mov
pop
or
push
jnp
rol
inc
pop
add
movs
adc
sub
loopne
sub
cmps
push
out
mov
push
leave
les
mov
xchg
fld
push
es
push
repnz
repz
dec
inc
jecxz
xchg
sub
loopne
jbe
sub
fcom
xchg
addr16
mov
fcmovbe
out
cs
pop
jbe
aas
sub
jb
dec
pop
sub
jmp
into
or
aas
(bad)
scas
and
add
pop
jns
aaa
jecxz
out
lods
mov
ins
xchg
je
xchg
arpl
leave
add
mov
mov
jle
sub
fcomp
dec
retf
cmps
fistp
es
ins
or
jns
cmp
jp
xor
in
jle
pop
pop
mov
cld
jmp
add
loop
dec
inc
jl
and
adc
cmp
inc
aas
mov
sbb
pop
es
js
pop
js
xchg
mov
outs
rol
bound
mov
fwait
push
add
inc
xchg
fs
pop
xchg
sti
mov
(bad)
(bad)
idiv
inc
push
push
inc
push
ret
sysenter
fsubp
xor
call
xor
leave
jecxz
adc
popa
cs
mov
addr16
ret
add
clc
int
and
cs
pushf
daa
sub
jmp
sub
daa
lds
int
mov
cmp
cwde
pop
pop
adc
ins
repnz
or
mov
jl
(bad)
mov
sub
push
sub
sbb
pop
sbb
jle
(bad)
jg
out
push
jge
cmp
stc
out
adc
add
xor
fst
inc
dec
cmp
xchg
(bad)
div
out
enter
test
sti
jge
(bad)
xor
cmp
sar
dec
out
mov
fwait
push
test
jge
pop
cli
(bad)
and
lea
jge
cmc
sub
cmp
iret
fisubr
mov
fnstsw
xor
rcr
scas
test
or
shl
lods
out
ror
xor
cs
outs
test
xchg
sar
sub
mov
mov
mov
push
or
stos
jmp
pop
and
sahf
cli
fs
cwde
pop
push
js
sbb
cmp
adc
cmp
jmp
fidivr
iret
pop
sub
mov
dec
into
mov
test
cwde
push
aad
icebp
arpl
fwait
sub
add
and
push
aad
dec
fst
repnz
popf
mov
into
neg
mov
adc
push
jns
mov
repnz
imul
ins
das
jns
mov
retf
pop
mov
je
sar
dec
dec
mov
fadd
cmps
lods
cmp
int
cmp
pop
mov
out
add
dec
data16
cmps
lea
sbb
cwde
jae
mov
mov
scas
ror
sahf
sbb
fadd
adc
cmp
in
mov
mov
pop
aam
out
mov
mov
xor
imul
movs
push
pusha
inc
enter
icebp
add
mov
or
ret
pusha
push
push
mov
xor
out
aad
shl
jnp
aas
mov
adc
dec
(bad)
add
mov
dec
pop
ins
xchg
movs
pop
ret
adc
jmp
mov
pop
mov
iret
(bad)
(bad)
(bad)
dec
xchg
fcmovne
into
scas
pop
cvttps2pi
in
stos
add
sub
push
lahf
mov
retf
mov
mov
dec
mov
lock
sbb
pop
sub
loop
gs
je
loope
repz
and
test
sub
movs
test
push
sub
pushf
and
fdivr
movs
aas
mov
rol
(bad)
jns
mov
sbb
xchg
inc
jg
in
pop
mov
cli
in
xor
retf
push
imul
aad
mov
gs
lods
push
mov
mov
pextrw
adc
push
jle
sbb
ins
cmps
in
dec
jge
cmp
jmp
mov
lea
and
dec
fisttp
pop
inc
stos
inc
dec
jg
enter
xchg
dec
and
(bad)
call
daa
mov
jmp
sub
fsincos
es
and
mov
(bad)
ja
adc
push
jbe
leave
mov
cmc
push
fiadd
mov
icebp
lds
ja
inc
pop
aas
adc
push
mov
jp
cli
out
(bad)
mov
data16
in
stc
push
push
sbb
pop
mov
addr16
in
das
push
sar
aas
or
adc
aaa
pushf
out
cmps
mov
ret
cwde
push
aam
loop
dec
adc
in
gs
imul
mov
xlat
js
sub
les
mov
mov
xor
mov
ja
test
popf
jb
adc
cli
pop
pop
or
jns
jnp
movs
push
and
fisttp
and
jnp
mov
div
test
out
mov
push
sub
and
adc
mov
adc
div
aam
mov
call
push
aaa
push
scas
cmp
jp
add
xchg
or
cmp
cmp
mov
jns
repnz
lea
or
sbb
xor
inc
xlat
mov
mov
xor
xor
lea
mov
mov
cs
(bad)
push
retf
push
cld
push
lahf
lahf
pop
cdq
jne
push
mov
test
push
add
mov
pop
fild
ffreep
mov
adc
adc
mov
mov
sbb
imul
pop
jmp
imul
sbb
adc
xor
out
popf
mov
xchg
mov
or
lahf
jne
sti
xchg
and
cmp
gs
stos
lock
dec
cmc
test
sbb
xlat
lea
adc
lahf
inc
inc
mov
pop
je
ja
mov
mov
mov
movs
pop
push
dec
outs
sti
push
xlat
mov
jbe
lock
ror
leave
icebp
sub
shr
fadd
into
outs
xor
out
lods
jp
imul
push
scas
xor
sub
fistp
pop
pop
out
fdiv
xchg
jl
pop
cmp
ror
mov
push
fwait
test
movs
and
mov
sbb
out
xchg
cmp
dec
out
add
inc
lahf
push
xchg
mov
(bad)
mov
adc
popa
sub
cwde
addr16
push
pop
pop
dec
or
xor
add
mov
and
out
sbb
xor
pop
xchg
or
fst
mov
aam
mov
mov
repz
inc
mov
jmp
call
cmp
repz
ds
outs
js
test
mov
fs
lahf
jmp
xchg
xchg
mov
inc
shr
(bad)
stos
je
jp
pop
inc
xor
push
mov
dec
loop
test
xlat
lds
push
add
jl
and
imul
std
xor
rol
iret
cmps
or
stos
lea
xor
pop
in
lds
lea
in
je
cmp
mov
and
xchg
pop
push
ror
nop
xor
push
pop
add
into
out
(bad)
enter
jmp
push
ss
mov
enter
aas
loopne
add
rol
sbb
mov
xchg
pop
or
add
cld
std
jns
mov
ja
dec
movs
fs
imul
or
jno
jns
in
clc
sbb
aaa
mov
xlat
mov
mov
in
out
mov
into
or
clc
(bad)
xchg
ss
cmp
xchg
aam
hlt
cmp
xchg
inc
pop
daa
xor
adc
pop
and
and
adc
mov
icebp
sub
leave
pop
pop
loop
ds
xchg
cmp
jl
mov
mov
out
int3
xchg
scas
fwait
jno
or
movs
mov
imul
ret
add
test
(bad)
adc
mov
(bad)
retf
add
mov
aas
int
push
mov
adc
or
push
aad
mov
mov
pop
movs
mov
cmps
mov
aas
jns
push
mov
aam
inc
inc
push
fwait
cmp
fs
sub
dec
(bad)
cmps
jne
adc
and
pop
data16
jp
sub
mov
ror
aad
sbb
aaa
idiv
or
dec
int
bswap
cmp
out
(bad)
stc
iret
jg
repz
call
add
inc
inc
sbb
add
dec
inc
scas
inc
pusha
or
add
add
add
(bad)
(bad)
inc
add
add
add
add
add
add
jns
je
ins
cs
jb
ja
outs
addr16
push
gs
imul
xor
xor
inc
jne
je
jb
cmp
jb
ins
sub
push
jne
ins
imul
imul
bound
xor
data16
xor
fs
add
adc
gs
cs
jb
ja
outs
addr16
imul
add
popa
je
pop
add
add
add
add
add
lsl
add
ret
adc
add
mov
inc
or
add
or
add
add
add
add
or
add
add
pusha
outs
rol
add
add
inc
dec
inc
add
mov
or
popa
add
jo
pop
jae
add
ret
add
push
ret
add
outs
test
add
adc
inc
inc
push
pop
inc
in
aam
and
ret
shl
popf
daa
dec
fwait
dec
mov
call
cmp
or
hlt
mov
fstp
popf
rcr
popf
sbb
jmp
cmps
xchg
jl
(bad)
scas
aas
loope
ret
sbb
mov
lock
push
push
adc
sub
add
push
mov
in
fdivr
jb
call
das
stc
pop
leave
add
imul
rcl
push
ret
push
movs
int3
inc
mov
lahf
mov
mov
xchg
rol
movs
mov
adc
int3
and
std
or
nop
into
push
int
inc
shl
xchg
push
pop
pushf
or
xchg
push
xchg
imul
sub
push
push
pusha
dec
fwait
mov
cmp
pop
push
lock
add
xlat
or
call
adc
mov
dec
pop
push
sbb
and
imul
jbe
imul
push
arpl
push
test
bound
imul
add
xchg
test
por
lods
stos
pop
mov
inc
in
vpperm
xchg
jae
pop
jmp
das
push
idiv
sub
fiadd
(bad)
cli
iret
(bad)
gs
pop
dec
mov
sbb
out
push
mov
mov
out
jne
dec
int
sub
retf
cdq
fwait
call
sbb
push
inc
jb
inc
or
gs
cmp
pop
add
mov
adc
xor
cmp
fidiv
jmp
fwait
mov
inc
test
lock
pop
mov
out
(bad)
cmp
retf
xchg
ins
pop
jecxz
pop
test
cli
or
adc
out
xor
out
mov
call
in
in
mov
xchg
jge
add
test
fnsave
jmp
imul
mov
push
(bad)
arpl
xor
sbb
fdivr
pop
fstp
and
jge
inc
aam
test
mov
push
sub
and
push
ins
das
aas
and
pushf
pop
pop
stc
fimul
test
aad
xor
mov
sub
in
je
mov
pop
ins
cld
mov
or
xor
test
in
jl
and
retf
push
int
(bad)
in
bound
adc
and
jmp
push
(bad)
stc
cdq
push
add
inc
lock
repnz
aad
push
jg
jle
dec
mov
arpl
pusha
adc
repnz
add
idiv
scas
call
mov
pusha
xchg
dec
leave
sub
mov
stc
das
sub
push
and
mov
or
pop
mov
call
cmp
shl
pop
hlt
xor
cmp
test
imul
test
mov
jo
(bad)
fcmovu
and
stc
(bad)
lods
xchg
lods
xchg
ja
push
xor
in
imul
sub
push
popa
and
and
dec
cdq
sbb
frstor
fwait
jo
data16
push
stos
dec
and
test
cmps
call
je
cmp
jp
stos
bound
and
wrmsr
call
icebp
aas
sti
xor
les
mov
mov
jge
or
inc
lahf
sub
jecxz
inc
xor
push
dec
xor
push
sbb
lea
leave
xchg
addr16
adc
jae
add
pause
xchg
jp
dec
dec
and
jae
loope
push
iret
mov
lock
in
aas
(bad)
jg
mov
sub
mov
and
cmp
jmp
std
fwait
push
jp
loope
jno
aam
imul
mov
loop
xchg
popa
push
ror
cs
in
ja
xchg
adc
cdq
je
retf
dec
sbb
mov
ins
mov
or
dec
jb
sub
adc
add
in
neg
push
jno
arpl
out
ror
sbb
in
cmp
clc
jb
jo
sub
mov
out
xchg
js
(bad)
sub
mov
lock
mov
mov
stos
mov
or
pop
jg
and
inc
sub
cmp
cmp
arpl
mov
xor
outs
jg
jae
leave
push
mov
pop
add
and
cdq
jb
dec
fcom
and
lock
rol
retf
push
cmp
push
addr16
rcl
mov
test
(bad)
sahf
arpl
in
rcr
in
ss
xchg
dec
sbb
(bad)
js
mov
sahf
mov
movs
das
jno
mov
mov
fidiv
and
inc
push
xchg
or
cmp
inc
sbb
dec
and
sbb
xchg
dec
into
std
in
cld
and
pop
imul
(bad)
and
int
and
sub
sti
adc
ss
xor
js
imul
and
adc
movs
mov
inc
mov
xlat
cmp
and
dec
mov
repnz
ss
aad
out
adc
adc
mov
lock
xchg
xor
jecxz
dec
lock
push
cmps
xlat
xor
cmp
cmps
loopne
mov
and
push
in
in
dec
jmp
jl
ret
adc
adc
dec
push
dec
jmp
cvtps2pd
pop
lds
xor
xchg
mov
pusha
add
mov
push
fbld
cmp
inc
pop
sub
xor
inc
into
add
mov
pop
xchg
jne
jge
add
push
in
mov
dec
outs
sbb
pushf
imul
lock
lods
pop
out
out
lock
xchg
movs
jne
sar
mov
loope
xchg
inc
add
sar
xchg
dec
clc
in
fadd
mov
test
lock
and
test
loope
mov
adc
or
(bad)
dec
add
(bad)
mov
gs
out
jge
ss
repz
fld
inc
(bad)
mov
add
repz
push
dec
stc
(bad)
(bad)
das
pop
xchg
aad
pop
jl
lock
push
arpl
cmp
cdq
stos
pop
je
fld
cmp
push
cmc
rcl
pop
adc
xor
and
prefetchw
pop
mov
jecxz
inc
aam
rcl
aas
jne
inc
add
dec
mov
ret
xchg
cmp
mov
sbb
enter
sub
push
ret
dec
xor
mov
mov
scas
add
jl
mov
lods
jmp
les
les
pop
sub
pop
mov
stos
dec
sbb
in
arpl
or
shl
leave
or
xchg
adc
dec
retf
cmp
cmp
xlat
mov
movs
les
xchg
loop
sub
mov
lds
inc
js
rcr
jl
jp
mov
cmp
cmp
dec
xchg
and
jmp
iret
cmps
jae
pop
les
imul
fwait
add
add
ins
icebp
mov
sub
repz
mov
inc
sti
jne
ins
jnp
loop
mov
mov
sbb
test
mov
or
ds
mov
mov
gs
inc
bound
stc
retf
pop
call
fnsave
ss
pushf
les
jle
push
dec
outs
push
aaa
aas
jl
push
pop
push
mov
mov
test
sti
fiadd
icebp
js
mov
push
je
addr16
movs
stc
ror
ror
and
pop
adc
aad
scas
inc
dec
outs
xor
js
shl
jp
setno
adc
inc
xchg
dec
mov
mov
or
mov
cmp
into
test
int3
push
or
adc
jp
sbb
and
nop
adc
retf
add
jno
aam
adc
xchg
jne
mov
xor
sub
add
jg
ret
imul
mov
stos
imul
inc
movs
push
in
xchg
in
jmp
sar
nop
(bad)
xor
ins
inc
imul
xchg
pusha
in
mov
inc
inc
and
movs
cmp
ret
mov
mov
sti
retf
enter
inc
mov
ins
xchg
mov
push
imul
icebp
adc
adc
imul
cli
fistp
mov
or
loopne
call
xlat
mov
pop
mov
outs
and
cld
es
cmp
movs
add
(bad)
ficom
popf
mov
es
imul
or
pop
push
sbb
test
or
adc
push
jne
sub
cmc
cmps
mov
pusha
repz
lea
int
jb
sub
dec
fdiv
sub
xchg
enter
cli
jg
sub
and
out
push
aad
adc
fld
aad
jnp
out
ins
jmp
rep
add
out
xchg
fldz
cmps
lods
sub
outs
shl
icebp
adc
stos
pop
addr16
jge
and
mov
clc
jno
cs
cmp
fld
ret
sbb
imul
addr16
sbb
out
addr16
xchg
sbb
inc
mov
and
daa
push
pushf
xchg
xor
(bad)
adc
rcl
xor
leave
xor
retf
in
test
dec
pusha
rcl
inc
dec
cmc
dec
jecxz
int
jg
daa
ja
mov
sub
js
sub
mov
out
sbb
cmp
xchg
out
loop
shl
inc
jne
sub
dec
rol
pop
call
xor
or
xchg
pop
call
(bad)
dec
pop
cvttps2pi
ror
or
xchg
or
xor
pop
and
sbb
cmp
in
mov
mov
jbe
cmps
mov
lahf
addr16
rol
xchg
sar
test
jp
iret
dec
mov
inc
mov
inc
mov
sub
mov
push
mov
cdq
mov
test
push
jnp
push
cli
sub
loope
mov
aad
pop
jae
inc
push
cmp
fwait
out
mov
out
mov
jg
fs
dec
movs
test
and
push
inc
call
enter
pop
sar
cli
lds
div
dec
call
inc
ret
sbb
inc
vrcpss
in
ins
fdivr
cdq
(bad)
xlat
mov
mov
and
mov
int3
add
push
jmp
cs
cmc
push
pop
and
cmp
stc
cmp
push
dec
sbb
stos
jmp
pop
push
lods
adc
push
mov
xchg
xchg
mov
or
adc
(bad)
(bad)
clc
cmc
js
jmp
lods
call
push
xchg
inc
mov
ds
jg
mov
jle
pop
lods
jo
mov
ror
ror
adc
jmp
push
pop
ins
cli
fcom
mov
pop
stos
add
cmp
add
outs
or
scas
adc
inc
jb
xchg
mov
test
test
retf
cmp
icebp
les
or
stos
push
stc
bnd
leave
retf
test
xor
cmp
out
fnstsw
(bad)
sbb
movs
or
or
(bad)
in
hlt
mov
dec
mov
ret
and
call
push
nop
cdq
mov
xor
imul
dec
mov
pushf
adc
das
movs
dec
and
test
aam
popf
jmp
jno
add
jae
stos
fsub
sbb
inc
xchg
div
mov
rcr
daa
nop
push
daa
and
and
jmp
inc
mov
dec
xchg
clc
jmp
mov
or
push
retf
and
jbe
(bad)
shr
fsubp
cld
xor
sbb
fistp
shl
ja
jle
stos
adc
cld
xchg
mov
xor
xor
jcxz
jno
pop
in
fst
and
mov
scas
imul
lods
mov
(bad)
xor
jl
pop
add
ins
and
fldenv
das
dec
pop
dec
sbb
push
pop
sub
inc
bnd
pop
cld
add
xchg
xor
aas
fiadd
cmp
ret
scas
js
xchg
aad
add
mov
pop
call
mov
iret
push
inc
cmps
mov
std
adc
loop
mov
ss
aaa
aad
test
(bad)
shl
xor
push
lods
sbb
mov
js
rcr
jecxz
push
add
dec
push
scas
pushf
es
pop
mov
jae
xchg
out
aam
or
je
(bad)
mov
push
inc
out
test
jl
sbb
call
inc
pop
outs
push
jg
and
or
xor
pop
push
imul
ror
sub
adc
cld
fdiv
imul
fst
test
mov
or
add
aad
(bad)
mov
cmp
jl
jbe
(bad)
inc
add
mov
(bad)
retf
sbb
cmc
mov
icebp
or
and
inc
xchg
movs
(bad)
sbb
icebp
mov
adc
fabs
in
popa
pop
sub
in
gs
sub
xlat
stc
dec
adc
call
xlat
xchg
mov
xlat
lahf
sbb
jecxz
outs
mov
xchg
shl
adc
push
imul
lods
jmp
xchg
xchg
dec
int
jg
xor
xchg
fwait
mov
(bad)
pop
add
das
xchg
adc
inc
cs
icebp
pushf
and
jnp
mov
dec
test
sub
add
sbb
outs
nop
adc
fsubr
in
jp
je
adc
mov
test
mov
lahf
jmp
inc
jl
mov
mov
inc
enter
sbb
cmc
(bad)
psubq
adc
ja
in
dec
cmc
mov
out
jne
adc
jmp
xlat
hlt
rcl
ins
dec
cmp
xor
jo
je
stc
push
fwait
dec
mov
(bad)
and
push
mov
jmp
mov
fadd
icebp
mov
pop
dec
outs
pop
sbb
adc
or
pop
dec
ins
push
fsub
aaa
mov
and
stos
aam
ret
dec
mov
stos
scas
cmp
jae
in
cmp
add
fcom
mov
cwde
jae
scas
and
push
outs
loope
xchg
sahf
push
test
jg
add
mov
aaa
retf
mov
clc
(bad)
mov
shl
adc
mov
inc
and
ins
add
push
or
sar
cli
js
mov
sub
inc
jo
jbe
xor
ja
ret
xor
sub
mov
push
inc
sahf
mov
sub
dec
adc
cli
std
stos
push
sub
dec
sub
jecxz
call
adc
popa
xchg
hlt
ins
call
stos
fs
adc
jbe
fucom
adc
sbb
add
xor
sub
shl
into
and
stc
cmp
(bad)
aas
movs
shl
out
pushf
cmp
ja
sub
mov
clc
xor
cmp
stc
mov
out
nop
out
dec
cmp
fisttp
ja
movs
xchg
ins
mov
sbb
movs
mov
aam
ins
and
adc
add
mov
hlt
add
loop
scas
data16
sub
sbb
jmp
adc
and
pop
add
mov
les
push
int
xor
lea
cmps
dec
fild
xchg
stos
scas
addr16
idiv
add
aam
pop
add
and
sbb
int3
aaa
sbb
aaa
das
(bad)
icebp
test
dec
cmc
xchg
add
cmps
jge
add
shl
inc
cmps
mov
pop
mov
mov
mov
jbe
inc
movs
out
lea
fstp
adc
xor
xor
sbb
mov
jnp
fwait
jge
inc
(bad)
xchg
(bad)
fisttp
mov
(bad)
mov
repz
xchg
cli
in
or
sahf
jle
div
data16
cmp
mov
mov
shr
divsd
or
mov
lods
arpl
push
ins
shl
gs
mov
test
test
inc
mov
add
pop
pop
outs
jl
mov
cld
xor
fnsave
sbb
push
ror
(bad)
jl
or
xor
pusha
in
dec
jle
mov
clc
dec
dec
and
scas
and
repz
int3
jp
push
fcomp
pop
push
jecxz
xchg
(bad)
sti
mov
aas
sar
test
ds
and
mov
leave
add
stc
out
jg
stc
out
jg
pop
add
dec
int
jmp
adc
add
dec
inc
dec
inc
scas
inc
pusha
or
add
add
add
(bad)
(bad)
inc
add
add
add
add
add
add
jns
je
ins
cs
jb
ja
outs
addr16
push
gs
imul
xor
xor
inc
jne
je
jb
cmp
jb
ins
sub
push
jne
ins
imul
imul
bound
xor
data16
xor
fs
add
adc
gs
cs
jb
ja
outs
addr16
imul
add
popa
je
pop
add
add
add
add
add
lsl
add
mov
mov
inc
or
add
or
add
add
add
add
or
add
add
pusha
outs
rol
add
add
inc
dec
inc
add
mov
or
popa
add
jo
pop
jae
add
ret
add
push
ret
add
outs
test
add
adc
inc
inc
push
pop
inc
in
rol
loopne
dec
dec
or
ja
cdq
pushf
cmp
fwait
pushf
ss
outs
loop
ja
out
mov
cmp
fst
out
cmps
popf
scas
test
add
cmp
pushf
test
(bad)
das
add
daa
pop
out
xor
leave
pop
mov
test
push
out
fbld
and
jmp
clc
xor
mov
jle
pop
pop
shr
dec
fistp
cmp
sub
push
into
retf
test
into
lods
adc
push
sbb
and
adc
pop
out
rcr
push
sbb
push
jl
daa
scas
and
push
pop
jecxz
mov
xchg
add
arpl
(bad)
xchg
push
scas
call
aaa
int3
jnp
int3
sub
(bad)
sub
gs
repz
lahf
push
xor
gs
cmp
cdq
jl
and
sahf
ret
or
dec
mov
push
pop
jmp
scas
cwde
stos
ins
leave
fidiv
fadd
or
mov
sahf
pusha
lods
jg
out
std
dec
(bad)
adc
pop
add
add
popf
adc
std
and
xchg
inc
movs
or
in
scas
push
and
cmps
arpl
lahf
pop
out
stos
jne
icebp
or
fistp
dec
xchg
(bad)
repnz
es
sub
cmp
push
dec
nop
icebp
xchg
bound
loopne
movs
or
xchg
not
retf
mov
and
add
es
test
inc
test
out
push
pushf
inc
jecxz
cmc
cmp
enter
icebp
aad
nop
test
shl
dec
pop
cmp
test
dec
jnp
jg
pop
pop
jnp
mov
inc
fsub
add
xor
jecxz
adc
shl
pop
and
pop
cld
cmps
push
jmp
repz
iret
sti
jmp
mov
adc
daa
push
sub
das
adc
jae
imul
cwde
mov
sbb
push
repz
shl
inc
enter
icebp
push
and
loopne
add
cmp
add
stos
jmp
add
hlt
retf
fsub
pop
mov
dec
into
or
fild
sbb
sub
or
fist
out
ror
movs
mov
cmp
hlt
and
ret
mov
mov
jecxz
cmp
leave
outs
xchg
sar
int3
dec
into
jl
inc
jmp
mov
lods
comiss
adc
sub
in
pop
ret
call
loope
movs
out
out
xlat
mov
iret
xchg
dec
adc
jb
sub
add
arpl
lods
jle
stos
sti
cmp
shr
int3
push
adc
cs
pop
pop
in
loopne
rol
jl
mov
in
ror
loop
adc
xchg
sub
cmc
test
mov
in
inc
xchg
xor
lods
imul
push
shl
ds
(bad)
adc
mov
and
dec
daa
test
cmp
dec
aas
pop
dec
pushf
out
mov
rol
mov
xchg
movs
jns
mov
(bad)
ins
fwait
mov
loop
dec
mov
cli
enter
hlt
add
cwde
jne
mov
or
pop
ret
cs
sub
dec
clc
jne
sahf
or
ror
xchg
cmp
push
adc
repnz
pusha
push
or
ja
push
pushf
push
je
pop
sub
dec
inc
push
retf
mov
push
jae
outs
or
pop
aas
xchg
xchg
or
cmps
xchg
repz
jbe
out
ins
xchg
xor
lds
jne
dec
retf
not
sbb
jns
and
sbb
movs
push
ror
mov
adc
(bad)
push
shl
sar
pusha
sbb
mov
imul
jl
pop
sub
scas
loope
call
sbb
ror
dec
movs
out
test
enter
push
or
imul
cwde
cmc
repnz
pop
in
fimul
iret
fs
jge
not
or
pop
adc
or
jae
in
or
or
xor
xor
scas
or
pusha
ret
ror
lods
xchg
or
mov
ud1
xor
jp
popf
js
push
inc
ins
popa
fldcw
sub
sar
push
jge
add
push
push
fmul
adc
dec
mov
pusha
mov
sub
xor
out
xor
jns
repnz
lods
sahf
popf
shr
clc
xchg
rcr
fwait
mov
jg
adc
and
in
jmp
mov
jmp
mov
or
push
dec
cdq
adc
loopne
popf
mov
jns
jmp
and
xchg
dec
pop
jb
ja
aad
cdq
std
daa
mov
mov
jno
and
cmc
aam
cmp
adc
xchg
add
mov
ins
pop
sub
outs
cmp
or
shl
data16
cmps
in
push
(bad)
cld
push
mov
adc
mov
rcl
xchg
sbb
sbb
xchg
shl
nop
(bad)
call
jbe
and
adc
test
xchg
xchg
daa
addr16
je
stc
adc
imul
push
add
out
or
fdiv
bound
pop
cmp
sub
add
and
pop
call
pop
adc
sar
int3
jo
(bad)
lods
mov
cmps
into
or
fistp
mov
shl
pop
mov
sub
pop
imul
jo
jne
lock
jmp
xchg
pusha
popf
retf
popa
push
pop
mov
pusha
adc
xchg
jl
push
xchg
addr16
sbb
stc
cmps
(bad)
mov
bound
(bad)
sub
retf
int3
jno
test
test
dec
hlt
xchg
out
addr16
mov
movs
or
mov
jl
cmp
(bad)
push
ds
sbb
retf
push
hlt
(bad)
mov
pop
sahf
ret
cmp
push
xor
cmp
xor
jp
lods
xor
mul
xchg
out
mov
(bad)
push
sar
or
aaa
cmps
dec
push
shl
lea
or
pop
rol
mov
stos
dec
push
push
not
icebp
(bad)
inc
jo
out
pushf
pop
movs
pop
sahf
cli
jl
ds
ins
jp
cmp
idiv
xchg
fisttp
popf
ja
(bad)
rcr
xor
fild
fidivr
das
loope
stos
(bad)
sub
inc
mov
aas
jl
mov
mov
idiv
lods
ret
enter
xchg
sub
(bad)
fwait
push
add
iret
jp
push
push
xor
jnp
dec
fmul
push
jmp
mov
xor
lahf
xor
jo
xor
xchg
push
in
cs
adc
ficom
mov
lds
clc
call
dec
cmp
cmp
push
mov
sub
test
je
movs
sti
xchg
inc
sub
or
mov
pusha
arpl
xor
aad
outs
mov
sahf
mov
sbb
out
and
mov
xchg
mov
(bad)
pushf
fs
jne
push
or
ss
cmp
add
aas
pop
cmps
add
movs
sbb
fsubrp
dec
adc
dec
cmp
cdq
nop
adc
inc
xor
jno
xor
ss
mov
push
push
js
sbb
mov
xchg
mov
lds
mov
sub
int
in
mov
jecxz
inc
rol
enter
in
adc
add
pop
and
cs
jbe
jmp
out
add
rcl
fstp
ins
lock
mov
jb
inc
cmp
jbe
sbb
aas
inc
and
movs
dec
pop
es
push
out
dec
or
jg
(bad)
(bad)
cmp
call
(bad)
call
cmp
fisub
dec
ins
jl
ret
stos
cmp
jae
fdivr
aas
fcmovu
mov
int
sub
stos
cmp
mov
jmp
aam
pop
sub
aad
in
sub
test
out
mov
and
dec
mov
call
sar
sub
xchg
sti
inc
pusha
pop
addr16
mov
ror
sahf
test
cmp
adc
add
mov
and
jbe
je
ds
or
scas
fnsave
das
jnp
sub
mov
(bad)
je
mov
invlpg
cwde
out
out
jns
test
daa
test
mov
es
add
xchg
out
test
iret
sub
pop
imul
je
xor
or
push
enter
rep
aad
mov
pop
test
adc
sub
inc
mov
pop
addr16
daa
out
adc
sub
cdq
sbb
repz
mov
in
dec
cmp
cmps
or
loope
mov
nop
pop
out
stos
les
div
cs
adc
inc
shl
jns
mov
sahf
ins
pop
jle
jg
mov
mov
arpl
aas
jle
inc
jbe
hlt
push
dec
sti
mov
out
(bad)
mov
ss
test
out
cmc
shl
popf
call
pop
cmps
ins
loopne
cwde
jns
fnstcw
pop
(bad)
loop
fldenv
iret
(bad)
dec
movs
or
retf
imul
js
pusha
ins
dec
pop
sub
and
inc
push
mov
ss
jp
data16
xchg
clc
fs
cli
dec
or
and
adc
xchg
inc
jmp
xor
or
push
pop
mov
jmp
out
pop
adc
jbe
push
sub
cld
mov
mov
int
xchg
arpl
call
call
test
outs
popa
xchg
fdiv
in
scas
out
pop
xor
sbb
(bad)
push
out
jnp
pusha
out
inc
call
mov
fidivr
aad
add
es
arpl
and
mov
or
pop
xor
jo
cwde
(bad)
arpl
inc
int
loope
ss
push
call
or
popa
out
test
loopne
cmp
test
dec
nop
jle
jno
fldcw
fild
repz
mov
xchg
test
pop
call
adc
or
adc
mov
shl
into
out
xchg
test
sbb
sbb
cmp
cli
xchg
sub
pop
pop
pop
out
inc
xor
data16
fstp
into
xor
test
ss
(bad)
sbb
call
inc
pusha
lahf
push
iret
sub
leave
and
outs
mov
inc
cmp
leave
iret
fldcw
mov
add
imul
add
mov
dec
pop
mov
push
push
and
aam
sub
adc
inc
pop
outs
imul
cmp
mov
cs
mov
add
jns
mov
sbb
adc
fnstcw
xchg
adc
or
xchg
les
out
aam
nop
stos
mov
push
or
cmp
sti
retf
sub
pop
aad
mov
ret
add
jg
ret
dec
push
pop
sub
mov
ja
jbe
sbb
idiv
cmp
mov
adc
xchg
arpl
xor
pop
push
out
cdq
les
inc
outs
and
add
ins
sbb
sub
arpl
sbb
scas
fstp
lods
(bad)
shl
imul
out
imul
ss
(bad)
imul
es
(bad)
sub
outs
push
(bad)
out
jbe
sub
int
retf
sub
mov
lods
pop
pop
and
sbb
add
shr
mov
mov
int3
inc
dec
jb
mov
dec
test
jle
mov
xchg
inc
pop
cmp
stos
add
ficom
outs
inc
jno
cli
xchg
adc
adc
leave
ins
mov
xchg
movs
in
icebp
inc
cmp
mov
bnd
fstp
push
mov
(bad)
mov
jge
test
(bad)
push
dec
jns
pop
and
pop
xor
aad
imul
jmp
add
jp
mov
hlt
mov
loope
sar
jmp
pop
out
out
leave
inc
test
dec
cmc
(bad)
out
jnp
mov
sti
xor
jp
movs
imul
sub
or
push
jg
out
in
mov
repnz
fimul
and
and
imul
and
dec
js
adc
in
dec
push
ss
push
mov
jmp
pop
xchg
les
aaa
(bad)
repz
xchg
push
(bad)
inc
adc
out
adc
pop
je
xchg
ror
icebp
test
lea
add
jl
jecxz
jmp
sahf
jecxz
pop
cmp
sbb
into
push
(bad)
iret
dec
jmp
and
mov
ja
fwait
mov
movs
mov
push
and
xchg
adc
mov
stc
jne
movs
xor
enter
sbb
mov
mov
repnz
js
jecxz
fmulp
xor
daa
idiv
imul
fist
inc
xor
scas
gs
enter
rcr
mov
pop
out
dec
ss
cmps
xor
bound
fldcw
xlat
fadd
ret
outs
jecxz
loop
stos
push
pop
sti
cmps
inc
push
repnz
std
jge
adc
sub
out
dec
or
shl
add
movs
cmc
aad
push
sub
add
loopne
test
inc
out
mov
jmp
sbb
outs
mov
rcl
or
cs
pop
dec
pop
inc
leave
std
and
pop
adc
jae
ficom
int3
sbb
mov
jbe
cdq
add
xchg
outs
scas
mov
mov
mov
retf
jbe
jecxz
mov
sub
ds
fistp
sbb
(bad)
test
and
fsubrp
sbb
bt
(bad)
xchg
jmp
iret
or
mov
clc
cmp
int
mov
add
sub
jmp
out
ficomp
mov
pop
cmp
push
xlat
ja
scas
test
or
mov
jae
cwde
imul
push
aas
jmp
push
std
imul
(bad)
vpmulhuw
push
xchg
je
push
or
pop
adc
pop
adc
pop
ins
js
push
cmp
daa
jg
dec
push
dec
and
(bad)
mov
in
shl
(bad)
mov
fidivr
dec
fwait
jmp
imul
or
and
or
call
repz
mov
xchg
and
add
or
xor
loop
sub
push
sbb
mov
dec
stc
add
add
aaa
dec
sub
movs
add
adc
xchg
mov
cmp
lods
dec
mov
je
rcr
sbb
mov
push
stc
imul
sbb
mov
jl
ret
out
mov
fnstcw
icebp
xchg
in
test
sub
mov
push
add
cmp
retf
aam
sub
lahf
(bad)
pop
out
push
mov
test
jne
mov
pop
mov
xor
pop
add
dec
xlat
std
mov
dec
hlt
inc
or
into
dec
movs
mov
lods
xchg
sar
retf
dec
push
sub
cmp
movs
iret
inc
dec
dec
lahf
loope
int3
nop
mov
scas
mov
xlat
mov
in
lds
es
xor
xor
pushf
in
je
stos
push
cmc
pop
popa
or
cmp
and
mov
jl
popf
add
adc
xchg
ret
mov
push
xlat
out
lods
std
mov
mov
push
imul
movs
cwde
xchg
jb
mov
add
sti
mov
stos
nop
pop
dec
les
push
in
cmp
ja
lods
dec
ins
xchg
inc
repnz
xchg
xchg
inc
retf
test
hlt
adc
xchg
jne
jno
cwde
ds
cmp
xor
inc
retf
sub
arpl
push
sahf
js
ret
mov
ret
mov
xchg
or
ds
nop
sbb
jecxz
imul
call
xor
mov
jne
test
pop
nop
xchg
dec
jle
data16
sub
sub
or
mov
fwait
sub
push
add
cmp
fstp
loop
mov
lods
sub
in
in
in
mov
out
not
sar
clc
xchg
mov
push
sub
adc
xor
adc
je
jle
xor
or
repz
aas
(bad)
cld
repz
aas
(bad)
cld
pop
add
sbb
and
add
add
dec
inc
scas
inc
pusha
or
add
add
add
(bad)
(bad)
inc
add
add
add
add
add
add
jns
je
ins
cs
jb
ja
outs
addr16
push
gs
imul
xor
xor
inc
jne
je
jb
cmp
jb
ins
sub
push
jne
ins
imul
imul
bound
xor
data16
xor
fs
add
adc
gs
cs
jb
ja
outs
addr16
imul
add
popa
je
pop
add
add
add
add
add
lsl
add
rcl
add
mov
inc
or
add
or
add
add
add
add
or
add
add
pusha
outs
rol
add
add
inc
dec
inc
add
mov
or
popa
add
jo
pop
jae
add
ret
add
push
ret
add
outs
test
add
adc
inc
inc
push
pop
inc
in
rol
rcl
jge
adc
mov
push
pusha
and
sbb
je
dec
and
mov
xor
in
push
add
lds
loop
mov
mov
lahf
and
retf
retf
dec
and
mov
mov
cmp
int3
(bad)
mov
stc
stc
pop
mov
gs
out
jmp
adc
jmp
xchg
leave
mov
mov
dec
inc
fwait
jb
or
inc
and
jp
out
push
or
cmp
das
das
std
sub
and
scas
dec
mov
ret
and
mov
and
daa
lods
or
into
push
add
adc
push
ins
rcl
sbb
int3
xor
push
push
neg
or
in
or
fisub
xlat
or
xchg
mov
xchg
jo
jl
xchg
jmp
xchg
cmc
dec
hlt
icebp
imul
and
pop
cmp
xlat
cwde
or
adc
in
sti
movs
leave
jg
int3
sub
imul
ror
jge
dec
ss
sub
mov
adc
lahf
jmp
mov
pop
and
adc
xor
fcomp
add
call
icebp
pop
push
mov
into
out
adc
dec
shr
movs
add
dec
pop
imul
mov
shr
stos
in
popf
push
xlat
in
outs
in
imul
sbb
pop
ins
or
pusha
jg
movs
xchg
ins
or
cmp
out
xchg
push
mov
ja
jg
popa
fwait
jb
adc
sbb
push
(bad)
push
enter
ret
dec
and
add
add
faddp
sbb
cwde
mov
xor
inc
add
imul
adc
fisttp
jge
xor
mov
xchg
or
loop
pop
retf
call
mov
out
popf
(bad)
out
pop
loope
xchg
cs
mov
dec
xchg
ds
add
push
call
mov
cmps
pop
and
mov
cmp
ret
mov
fldenv
sbb
(bad)
jg
pop
mov
sub
lahf
sub
das
cmp
out
mov
xchg
xchg
mov
out
mov
xchg
xor
pop
(bad)
dec
dec
fist
out
jne
xor
ror
cld
(bad)
repnz
(bad)
ret
cs
fdiv
pop
jl
lds
int
ins
lock
and
jb
retf
mov
xor
jle
dec
(bad)
pop
add
out
dec
arpl
sti
add
sub
inc
fistp
in
loope
pop
jp
inc
xchg
add
std
enter
adc
clc
pop
jp
sub
push
and
ror
mov
push
sub
push
retf
(bad)
cmc
es
mov
jnp
jmp
stos
mov
setbe
fisub
cdq
jb
test
outs
push
adc
ss
ds
ins
dec
ficom
(bad)
stc
in
popa
pop
cwde
call
jae
and
lea
mov
and
jne
cli
cmp
sub
sti
jle
aam
ds
idiv
sub
aaa
xchg
sar
lods
test
jle
das
push
addps
cmps
ins
imul
cld
cmp
xchg
pop
imul
and
pusha
push
xor
ds
out
retf
movs
jae
sahf
gs
ins
pop
mov
mov
aas
dec
push
outs
aaa
popf
jg
sbb
or
retf
jo
(bad)
ret
data16
mov
dec
xchg
and
hlt
mov
stc
sbb
rcl
add
test
cmp
call
frstor
aad
jl
dec
xor
pop
retf
mov
nop
mov
jmp
cmp
fsubr
stos
outs
dec
jnp
repnz
sub
inc
fstp
stc
push
push
mov
repnz
cmps
xchg
punpckhdq
movs
and
push
inc
aaa
mov
gs
and
mov
pusha
sets
arpl
arpl
jb
aam
in
in
loope
popa
push
fimul
adc
and
sub
pushf
and
push
mov
pop
jns
test
add
sbb
jg
ja
jo
out
xlat
stos
mov
mov
inc
lahf
retf
int3
push
sub
add
mov
push
jnp
lods
ins
inc
inc
stc
add
sbb
bnd
cs
mov
je
(bad)
(bad)
dec
std
jns
je
arpl
mov
imul
and
xor
xor
shr
mov
and
adc
test
(bad)
sbb
aas
xchg
cli
push
test
mov
mov
sbb
inc
pop
dec
push
add
xchg
pop
cmp
fcmovnu
cs
mov
or
xchg
inc
cmp
test
cmp
repnz
dec
add
in
push
inc
xchg
push
push
cmp
dec
and
fisttp
dec
mov
xor
ror
jg
lods
adc
xor
shl
imul
loopne
push
repnz
push
mov
cdq
pusha
in
popa
adc
mov
mov
arpl
xlat
mov
mov
call
imul
lods
ins
jecxz
mov
ret
ins
jo
add
dec
push
loop
push
mov
or
dec
es
mov
lods
test
jle
add
push
dec
jle
or
jb
fwait
jb
(bad)
xchg
call
aam
sahf
fdivr
test
cmp
push
into
and
hlt
sbb
add
or
mov
pop
cmp
xchg
je
clc
sbb
jle
lods
daa
dec
repz
mov
ins
and
loop
or
stos
test
daa
push
dec
push
push
or
shl
shl
jg
lahf
in
add
jmp
dec
fldcw
push
fucomi
cwde
push
aad
cmp
rcl
dec
mov
sub
and
test
outs
ror
into
rcl
int3
scas
jecxz
push
ret
ds
pop
fdivp
push
std
into
scas
mov
xor
pop
push
sbb
call
(bad)
ret
(bad)
fidivr
and
sbb
mov
dec
inc
loopne
ins
sub
inc
test
ins
cmp
ficomp
gs
ss
fstp
push
ds
adc
pop
push
outs
fwait
push
xchg
fdiv
mov
shl
mov
add
(bad)
js
pop
dec
add
push
pop
add
mov
cmp
push
(bad)
fst
xchg
mov
adc
jb
jge
cmp
imul
mov
and
cdq
pop
retf
mov
repnz
aas
je
xchg
sub
ins
test
out
in
mov
xor
in
and
(bad)
mov
cmp
push
xor
add
xor
pop
add
(bad)
sub
sahf
outs
mov
outs
in
pushf
xchg
pop
ins
(bad)
cmp
mov
movs
jo
xchg
enter
jmp
and
pop
xchg
adc
stc
ds
sub
pop
popf
and
add
call
imul
sub
in
mov
xor
sub
mov
sub
jmp
adc
add
adc
dec
mov
cmp
lds
std
call
loope
call
retf
lahf
mov
dec
movs
stos
scas
cmp
enter
cmp
pop
add
mov
(bad)
adc
mov
fsub
mov
mov
add
rcr
adc
dec
push
cmp
cmp
xor
fxch
add
push
sbb
scas
pop
out
iret
into
and
outs
xor
sub
inc
icebp
je
inc
ret
push
pop
jge
retf
movntps
out
xchg
(bad)
(bad)
scas
mov
pusha
popf
outs
xchg
pop
popw
(bad)
xor
mov
je
adc
cmps
sub
loop
adc
and
iret
lods
retf
call
xchg
retf
mov
sbb
lds
lods
cwde
push
jg
inc
stos
cmps
jge
add
or
cmp
inc
movs
xchg
jb
push
movs
add
xor
xor
arpl
mulps
lods
jmp
stc
lods
stc
cmp
add
into
dec
mov
scas
xlat
pop
in
sbb
loope
pop
jp
jge
or
test
stos
xor
or
ror
mov
iret
bnd
out
dec
cmps
cld
(bad)
mul
mov
or
fisub
xchg
ds
mov
iret
hlt
int
outs
retf
sti
ds
cmp
adc
jge
mov
movs
xor
push
mov
test
repz
pop
sub
in
inc
leave
dec
jo
(bad)
jb
mov
es
xor
push
jnp
out
(bad)
push
push
cli
mov
(bad)
xchg
vpcmpgtd
loop
add
jle
and
inc
je
mov
pop
arpl
jmp
or
stos
and
or
mov
xchg
stos
in
mov
xor
mov
adc
dec
push
ja
pop
fcmovb
sbb
neg
fwait
addr16
int
sub
inc
jno
dec
out
and
out
pop
inc
lahf
movs
out
cmp
pushf
push
fisttp
push
ss
pop
jl
mov
push
cmp
das
aas
data16
xchg
push
imul
sbb
xor
mov
mov
xchg
jno
jb
stos
push
adc
adc
pop
test
mov
in
call
dec
adc
fist
and
ins
jg
fadd
xor
paddusb
push
mov
add
and
out
xlat
jb
cmp
bound
mov
or
mov
xor
aad
mov
or
fild
jnp
je
xor
add
ficomp
xor
ja
lods
popa
xor
jne
jmp
pop
ds
cld
imul
mov
mul
dec
mov
dec
inc
out
popa
aaa
pop
jns
scas
jno
loopne
cmp
fwait
jo
outs
mov
sbb
ins
shr
stos
inc
jmp
test
fist
jl
adc
cmp
shl
jecxz
jo
retf
mov
ds
mov
pop
pop
test
pop
pop
jmp
sti
hlt
cmps
ret
mov
lock
loope
shl
adc
call
iret
stc
hlt
or
jle
fidivr
fwait
into
jp
xor
adc
das
bound
adc
mov
lock
xchg
cs
add
mov
imul
push
add
loope
mov
into
rcr
das
stos
inc
fsub
arpl
dec
mov
(bad)
sub
mov
aad
jge
cwde
out
rcr
push
outs
setno
mov
arpl
pop
mov
sub
mov
imul
je
std
sub
movs
cmp
je
cmc
sbb
cmp
iret
pop
push
retf
popa
daa
idiv
test
shr
test
add
shr
add
jne
test
push
das
sub
xor
stos
adc
sub
or
dec
cmp
lock
push
test
mov
arpl
mov
mov
push
fidivr
lock
fs
mov
repnz
in
daa
mov
fs
fistp
inc
adc
push
mov
cmp
daa
repz
ret
jns
sub
ret
hlt
rol
loope
and
dec
loopne
push
or
pop
lock
inc
jle
pop
sbb
jle
out
sub
loop
dec
inc
cmp
jmp
aad
pusha
mov
fsubrp
int3
repnz
add
cld
js
cs
loopne
sub
xchg
out
fwait
(bad)
jo
pop
xchg
xchg
pop
(bad)
jg
call
mov
in
leave
xor
imul
push
aaa
mov
mov
cmp
or
cmp
pop
adc
jae
jae
sahf
add
sub
cmp
dec
aad
ret
xchg
fwait
clc
fcom
sub
adc
lods
sub
mov
das
stc
outs
jp
(bad)
call
xor
cli
mov
add
push
mov
shl
bound
leave
(bad)
in
mov
add
aaa
fist
cmovo
adc
mov
gs
xor
jne
push
xor
repz
imul
cli
out
xlat
fcom
or
xor
fstp
mov
jle
sub
mov
xchg
in
fmul
dec
and
scas
in
jmp
lods
xchg
and
add
xchg
ins
test
ins
js
ins
lods
into
cdq
movs
push
xor
ins
xchg
(bad)
jecxz
adc
aas
fwait
sub
mov
jo
adc
fild
jge
(bad)
imul
jmp
jmp
shr
repz
(bad)
mov
jbe
not
fs
pop
ds
mov
lea
movs
xchg
je
cmp
lds
stos
adc
sbb
sbb
pop
jne
retf
push
xor
call
arpl
xor
push
push
jmp
aas
dec
or
adc
jmp
pop
jecxz
cs
inc
mov
ins
lds
outs
dec
push
inc
inc
dec
jg
mov
adc
cld
(bad)
mov
adc
and
js
repnz
lods
call
test
popa
and
push
sbb
hlt
mov
(bad)
cs
jbe
fdiv
or
push
xchg
loopne
mov
popf
mov
ss
xor
lea
stc
dec
cwde
out
dec
repnz
(bad)
icebp
dec
bound
dec
push
push
inc
jae
bound
inc
div
xchg
cld
cmp
nop
sti
dec
movs
mov
popf
adc
into
or
shr
cwde
das
and
sub
adc
xchg
cmp
push
scas
adc
inc
push
mov
in
(bad)
jmp
mov
movs
outs
lods
ins
scas
mov
aad
(bad)
dec
idiv
dec
push
ins
scas
pop
pop
sbb
push
push
js
dec
add
jae
rol
loopne
pop
int3
pop
hlt
aad
push
sbb
in
mov
xor
cmp
stos
scas
cs
loop
clc
clc
cs
out
push
scas
sub
cmps
ret
les
dec
adc
ds
push
cmp
out
ret
(bad)
fisub
out
ret
lahf
push
aam
in
pop
push
cmp
xchg
cmp
cmp
mov
jnp
push
mov
ret
cdq
clc
xchg
mov
or
jecxz
push
aad
cli
stos
and
test
push
les
xchg
inc
jl
mov
(bad)
pop
repnz
cmp
dec
inc
fmulp
aam
pushf
cmps
ins
fld
pop
mov
mov
mov
xchg
push
int
das
mov
mov
sbb
pushf
xchg
popa
fsubr
sbb
cmp
jb
inc
les
fcom
shl
xchg
xor
in
icebp
out
mov
pop
stc
inc
xchg
xor
or
movs
fwait
xchg
xor
int3
fst
xor
aad
retf
pop
mov
add
ret
inc
fwait
mov
jmp
aaa
cmovle
and
sbb
neg
inc
push
mov
push
inc
sbb
out
add
sub
ins
xchg
and
jp
add
mov
jl
neg
loopne
jp
(bad)
jns
aad
push
sbb
clc
mov
cli
xor
pushfw
or
call
jo
imul
stos
xchg
xor
mov
cmp
(bad)
bound
inc
mov
push
mov
std
adc
call
cli
lock
mov
jp
push
push
fsub
mov
shl
xchg
arpl
push
pop
iret
outs
mov
add
je
and
outs
cmp
lahf
fimul
mov
aad
mov
adc
sahf
push
test
adc
mov
pop
(bad)
mov
iret
jmp
enter
cld
std
nop
and
minps
daa
cmc
adc
rcl
cmps
dec
(bad)
dec
fidivr
popa
mov
test
dec
add
stc
out
jg
stc
out
jg
scas
add
inc
jmp
loop
xchg
inc
pop
push
add
add
dec
inc
scas
inc
pusha
or
add
add
add
(bad)
(bad)
inc
add
add
add
add
add
add
jns
je
ins
cs
jb
ja
outs
addr16
push
gs
imul
xor
xor
inc
jne
je
jb
cmp
jb
ins
sub
push
jne
ins
imul
imul
bound
xor
data16
xor
fs
add
adc
gs
cs
jb
ja
outs
addr16
imul
add
popa
je
pop
add
add
add
add
add
lsl
add
mov
mov
inc
or
add
or
add
add
add
add
or
add
add
pusha
outs
rol
add
add
inc
dec
inc
add
mov
or
popa
add
jo
pop
jae
add
ret
add
push
ret
add
outs
test
add
adc
inc
inc
push
pop
inc
in
rol
add
xchg
push
push
rcr
and
inc
push
nop
out
(bad)
call
jmp
push
sub
sub
(bad)
lahf
sti
cmp
div
add
inc
sub
loope
(bad)
push
xor
sahf
jns
pop
xor
out
adc
sbb
pop
push
out
imul
test
mov
in
pop
sub
ins
rcl
mov
rol
mov
retf
scas
pop
xchg
pop
inc
cdq
adc
test
sub
(bad)
cmc
push
mov
clc
in
or
and
daa
jmp
inc
cli
les
xor
cli
mov
je
retf
mov
div
aad
mov
dec
cmp
out
cdq
stc
xchg
dec
icebp
cmps
pop
mov
repz
sbb
and
call
ret
(bad)
in
and
call
ja
rol
fwait
or
inc
pop
push
lahf
mov
add
sbb
les
mov
rcr
imul
push
and
jp
ds
(bad)
xchg
fmul
pop
scas
pop
cmp
fiadd
and
call
push
retf
xor
mov
xlat
fcmovu
mov
inc
cmp
out
mov
sbb
fisttp
test
cmp
fisub
push
js
call
jb
jns
cmp
test
sub
mov
outs
pop
inc
das
pop
xchg
icebp
(bad)
ret
gs
mov
iret
(bad)
mov
push
and
ret
cmc
and
cmc
out
mov
or
pop
dec
xor
sbb
test
fs
das
or
pusha
lods
mov
jmp
(bad)
pop
jle
mov
movs
imul
mov
add
mov
jb
mov
pushf
mov
cmps
sub
dec
loop
mov
cs
idiv
rcl
push
add
stos
pop
xor
das
mov
lds
cmp
and
push
or
xchg
js
(bad)
in
inc
inc
adc
jbe
dec
je
pusha
in
inc
and
js
pushf
add
pop
dec
mov
dec
inc
mov
xchg
shl
(bad)
pop
mov
loop
retf
test
jb
loopne
test
fxch
jmp
icebp
cwde
sub
and
sub
pop
add
cwde
mov
or
cmp
pop
adc
mov
rol
or
cdq
mov
mov
add
cld
adc
pop
mov
js
mov
jns
aaa
sahf
div
xchg
mov
push
sbb
jnp
mov
pop
dec
aaa
fcmovnbe
call
sbb
sub
and
stos
cmps
add
and
imul
out
xchg
icebp
sar
or
aad
test
pushf
stc
popf
sbb
lock
inc
das
sbb
test
pop
push
vunpckhps
stos
cmp
cs
dec
ret
sub
imul
xchg
ror
dec
cmp
push
enter
(bad)
push
mov
sbb
cwde
add
or
stos
popf
jbe
imul
pusha
jbe
inc
mov
pop
aaa
lods
and
fwait
add
das
aas
aam
push
inc
stos
xor
(bad)
in
dec
mov
push
and
or
fnstsw
rol
aam
cmp
adc
loope
dec
jp
pop
or
(bad)
jge
les
mov
cli
mov
aam
inc
pop
jns
test
aaa
clc
neg
lods
out
scas
sbb
mov
(bad)
aas
jae
or
mov
jecxz
ret
int
jmp
push
lds
mov
bound
or
mov
ss
mov
push
test
test
(bad)
inc
je
leave
call
xchg
retf
mov
icebp
std
xchg
bound
adc
mov
in
iret
pusha
cmp
retf
xor
lods
ds
xchg
fs
sub
sub
(bad)
pushf
push
mov
pop
test
jne
scas
jmp
jb
cmps
push
add
std
in
sub
mov
cmp
mov
iret
or
cmp
inc
sub
div
les
jle
out
jo
jle
pop
mov
ja
lods
sbb
sub
fld
mov
sbb
mov
inc
cwde
(bad)
pop
nop
xor
or
sub
mov
push
mov
int
cmp
repnz
mov
out
mov
sub
mov
aas
movs
scas
es
push
jge
xchg
fwait
icebp
jae
ret
jge
cmp
mov
ins
ret
mov
leave
dec
xchg
rcr
inc
ss
mov
dec
mov
addr16
cwde
out
shr
out
jl
imul
or
inc
xchg
adc
out
int
dec
xor
and
push
pop
aad
dec
(bad)
cmp
mov
xor
pop
mov
cmc
push
movs
hlt
pushf
xchg
cmp
fdecstp
pop
aaa
jnp
adc
pop
jg
jp
mov
cmp
jb
pop
js
ret
dec
scas
popf
mov
loopne
aaa
pop
adc
std
dec
mov
sti
push
mov
jmp
or
jns
cmovb
test
jp
push
inc
push
push
aaa
and
in
lods
icebp
(bad)
sub
dec
arpl
sbb
jge
add
(bad)
js
jb
retf
setae
xor
cli
or
push
aas
mov
outs
jmp
div
clc
leave
nop
sahf
es
xchg
mov
aas
inc
push
xchg
xchg
sbb
aas
nop
in
dec
dec
jb
pop
mov
sbb
sti
pusha
call
jae
push
jle
mov
cmps
loop
addr16
test
add
push
les
xchg
vpmadcswd
and
call
mov
jb
and
pop
pop
inc
sub
and
jno
pop
ret
fs
mov
loope
mov
push
or
xchg
popf
shr
rcr
jae
shl
cmp
mov
cmp
stos
jae
dec
mov
call
push
fsubr
sar
dec
add
test
scas
add
pop
jmp
leave
test
and
adc
repnz
adc
and
xor
hlt
add
inc
mov
jmp
dec
jnp
(bad)
mov
data16
jb
xlat
inc
test
xchg
lods
dec
daa
or
dec
mov
pop
jmp
fidiv
mov
push
sub
add
pop
push
jle
inc
mov
repz
mov
or
add
mov
(bad)
aaa
aas
je
sub
sub
xor
sbb
mov
dec
enter
cmps
aaa
xchg
jmp
xlat
xchg
pop
pop
(bad)
and
pop
jl
cmp
fidiv
lock
adc
xor
test
adc
clc
lea
mov
ror
sbb
lds
mov
(bad)
jns
add
add
sub
movs
sbb
call
addr16
push
or
add
fstp
fmulp
mov
cmp
clc
xor
push
adc
adc
xor
fst
in
jbe
add
jl
loop
cmp
out
loopne
jae
sbb
mov
ror
dec
jl
add
loop
push
fdiv
loope
and
test
ins
jno
push
inc
cdq
jp
aam
mov
xchg
gs
inc
sbb
movs
aas
push
add
lahf
int
int3
mov
and
clc
pcmpgtw
out
bound
xor
or
push
shl
(bad)
das
inc
adc
jnp
inc
sar
ds
movs
in
adc
xchg
inc
in
clc
adc
call
(bad)
int
mov
mov
fwait
inc
push
loop
retf
inc
scas
popa
ds
mov
in
dec
stos
inc
adc
mov
lds
xor
jmp
(bad)
mov
xchg
addr16
pop
jmp
retf
and
mov
cmp
mov
outs
push
sub
and
es
fld
mov
retf
aas
(bad)
pop
mov
cmps
push
(bad)
fcmove
out
xor
fidiv
shl
movs
(bad)
mov
pushf
int
dec
and
test
jg
and
fistp
inc
jbe
xchg
inc
mov
outs
inc
mov
icebp
dec
jmp
popf
push
int
inc
dec
lods
pop
inc
sbb
retf
cmp
movs
aas
fbld
jno
cdq
lock
cwde
cs
dec
shr
jmp
fadd
xor
in
fs
loopne
inc
push
ret
mov
sub
je
(bad)
sub
adc
sbb
retf
lock
cmp
pop
ret
movs
pop
add
or
(bad)
das
pop
mov
mov
pop
(bad)
push
jb
int3
and
xchg
xor
inc
or
push
mov
(bad)
in
sub
push
imul
shr
lea
jmp
push
inc
test
dec
push
and
repz
and
stos
aaa
mov
xchg
data16
mov
fbld
inc
jbe
not
test
fs
es
push
iret
sub
mov
loopne
add
and
fnstcw
lods
fisttp
scas
shl
jmp
jae
imul
push
out
pop
xor
push
cmp
push
and
out
dec
dec
pop
jmp
ins
lahf
dec
jg
mov
rol
cmps
xchg
(bad)
in
push
xchg
pop
out
scas
mov
mov
into
mov
mov
push
add
push
dec
dec
fs
add
dec
in
xor
adc
mov
dec
ss
mov
jae
into
xchg
push
mov
push
or
push
pop
mov
jg
jl
out
(bad)
into
ja
aaa
or
pop
inc
mov
jp
push
lea
retf
cmp
jne
or
in
(bad)
imul
leave
retf
xor
sti
jns
push
xor
add
gs
scas
and
call
inc
xlat
xor
je
adc
call
dec
xchg
lds
movs
icebp
and
test
fs
sbb
and
jne
xlat
pop
jae
pop
scas
ins
pop
cmp
xor
dec
mov
jmp
dec
push
push
stos
mov
movs
stos
add
lock
ins
sub
inc
mov
icebp
sub
retf
add
mov
into
test
xchg
pop
inc
call
xor
mov
and
loop
sub
rcl
icebp
popf
sub
dec
icebp
xchg
push
clc
cdq
fdiv
sbb
jmp
pop
fiadd
cmp
stos
push
sbb
jno
loope
les
add
or
inc
test
into
repnz
hlt
jecxz
cs
retf
and
loope
popa
sbb
arpl
hlt
xchg
dec
cmp
pusha
aam
out
loopne
imul
shl
xchg
cmp
enter
pusha
stos
ror
in
add
js
dec
scas
arpl
aam
adc
push
rol
in
aas
add
mov
mov
setl
jno
jno
je
push
adc
add
lock
in
(bad)
cwde
fidivr
xchg
cmp
mov
ins
and
adc
xchg
(bad)
out
mov
adc
and
sti
les
fisttp
and
sti
hlt
aas
into
adc
mov
out
rcl
or
fcomp
imul
jne
lahf
inc
and
in
dec
(bad)
enter
cmp
mov
inc
stc
jecxz
bound
add
mov
cmp
stc
mov
in
aas
dec
(bad)
repz
daa
in
fnstenv
mov
add
je
jbe
mov
push
popf
jmp
jbe
push
dec
cdq
and
sub
or
int3
or
adc
aad
ds
imul
inc
dec
xor
push
add
cdq
push
adc
cmps
mov
xchg
dec
inc
loopne
add
(bad)
sti
aas
addr16
mov
xchg
xchg
push
adc
jge
jne
std
std
(bad)
mov
pop
mov
mov
popf
call
sbb
inc
pop
gs
jno
sub
add
in
sub
sub
mov
or
sub
jne
enter
fsub
mov
lahf
dec
sbb
aaa
jb
adc
mov
dec
sbb
icebp
xchg
xchg
(bad)
(bad)
imul
out
neg
mov
es
in
daa
inc
ds
sub
sbb
push
mov
and
sub
sti
retf
(bad)
shl
shl
pusha
(bad)
xchg
xor
push
nop
xchg
jmp
mov
mov
aas
sti
repz
cmps
sar
xchg
mov
aam
or
pop
add
mov
mov
aad
mov
or
pushf
movs
clc
push
and
test
pop
push
mov
stc
rol
cmp
stc
shl
(bad)
fmul
sbb
inc
imul
clc
sbb
or
jae
inc
mov
jmp
bound
inc
and
jmp
(bad)
nop
mov
lods
jp
and
jg
cli
pop
mov
daa
data16
xchg
mov
sti
mov
xchg
mov
scas
cli
jp
dec
push
xor
(bad)
shr
retf
stos
in
and
ret
and
sbb
icebp
add
cwde
retf
lds
sti
arpl
pop
js
fcomp
sbb
add
stc
push
mov
inc
aam
jmp
enter
and
and
cli
loope
test
out
mov
hlt
dec
and
lods
outs
movs
push
outs
xchg
test
pop
cmc
sbb
jge
jge
push
mov
das
ds
ss
cmp
call
pop
sub
call
adc
jb
and
aam
mov
mov
pop
and
aad
jb
ds
xor
push
adc
aad
jae
jns
mov
cwde
cmp
dec
dec
les
push
mov
inc
cmp
jl
clc
sub
outs
call
daa
jnp
(bad)
sbb
jmp
jo
shr
sbb
lods
(bad)
and
adc
mov
mov
push
adc
sbb
adc
dec
sub
sub
repz
sti
xchg
ret
dec
sbb
and
sub
push
xor
aam
cmp
jmp
jns
div
les
inc
sbb
xchg
push
sar
sub
pushf
out
cmp
and
mov
rcr
ds
xchg
outs
lods
dec
bound
(bad)
pop
xchg
push
jmp
test
xchg
bound
sub
sbb
fisttp
lock
jg
les
dec
pop
push
sbb
dec
lods
jno
das
and
int
pop
cmps
popf
(bad)
je
outs
outs
fnstenv
mov
lahf
lods
retf
(bad)
movs
arpl
pop
dec
add
or
ins
dec
add
sub
mov
cdq
mov
add
mov
aas
int3
das
cli
xchg
xchg
or
into
js
mov
pop
mov
dec
popf
shr
inc
into
(bad)
in
dec
loope
mov
out
jbe
sub
in
cld
mov
test
push
int
ficomp
cmp
into
loop
jmp
pop
xchg
sbb
lea
mov
dec
mov
imul
mov
(bad)
repnz
jle
mov
fld
push
push
add
std
jp
btr
in
push
mov
lahf
mov
sbb
(bad)
push
sahf
dec
dec
inc
std
xchg
sbb
arpl
xor
add
mov
outs
inc
xchg
inc
and
in
pop
dec
cld
loopne
fidivr
test
dec
cmps
xchg
cmp
movs
sbb
mov
mov
inc
fwait
jne
mov
and
nop
dec
adc
sti
stc
(bad)
retf
push
mov
inc
cmc
dec
adc
addr16
pushf
int
data16
pop
mov
xor
cld
repz
aas
(bad)
cld
repz
aas
(bad)
cld
mov
(bad)
sti
cmc
ret
xchg
xchg
pop
xchg
add
add
dec
inc
dec
inc
scas
inc
pusha
or
add
add
add
(bad)
(bad)
inc
add
add
add
add
add
add
jns
je
ins
cs
jb
ja
outs
addr16
push
gs
imul
xor
xor
inc
jne
je
jb
cmp
jb
ins
sub
push
jne
ins
imul
imul
bound
xor
data16
xor
fs
add
adc
gs
cs
jb
ja
outs
addr16
imul
add
popa
je
pop
add
add
add
add
add
lsl
add
mov
mov
inc
or
add
or
add
add
add
add
or
add
add
pusha
outs
rol
add
add
inc
dec
inc
add
mov
or
popa
add
jo
pop
jae
add
ret
add
push
ret
add
outs
test
add
adc
inc
inc
push
pop
inc
in
rol
loopne
mov
pop
rcr
(bad)
je
mov
fucompp
push
cmps
cmp
jmp
cmps
fwait
mov
(bad)
jmp
jae
(bad)
aam
inc
fidivr
mov
(bad)
aam
mov
mov
das
test
inc
bound
mov
dec
sub
idiv
ins
sbb
add
movs
pop
stc
test
aas
pop
jno
jl
mov
aas
mov
inc
hlt
icebp
add
dec
pop
mov
mov
inc
mov
push
das
outs
pop
sti
or
bt
jmp
pop
pop
jo
or
call
push
scas
js
fwait
inc
aaa
call
ins
mov
or
sub
rcr
pop
fsubr
xchg
neg
retf
dec
add
add
inc
jecxz
inc
rcl
push
add
adc
jmp
pop
sub
xchg
jae
push
sbb
xchg
aas
dec
sub
aad
fs
cmp
or
push
test
xchg
jmp
push
pushf
test
cld
mov
retf
jmp
(bad)
ds
fimul
in
pop
bound
sub
fsubr
sub
stos
mov
(bad)
movs
test
cmps
xchg
in
cdq
mov
cmps
out
outs
cmps
xor
lahf
jno
dec
jl
scas
shl
sbb
les
jns
int
loop
pop
jmp
xchg
push
pop
mov
rcl
mov
pusha
outs
retf
les
xchg
scas
aas
mov
movs
adc
cs
xor
aaa
retf
sbb
and
mov
inc
pop
jg
mov
out
fwait
imul
in
aaa
mov
fnstcw
jmp
sahf
mov
daa
pop
push
xchg
movs
mov
add
sbb
add
fimul
mov
push
jnp
jle
add
dec
add
mov
mov
aam
cdq
push
scas
lds
jnp
(bad)
call
push
jmp
add
xlat
mov
ds
push
mov
iret
add
sahf
mov
test
mov
or
xchg
jp
mov
imul
xor
test
popf
lock
les
mov
arpl
(bad)
mov
ds
xchg
cmc
movs
test
add
aas
xlat
test
outs
retf
push
and
int3
jb
jg
nop
dec
ds
data16
icebp
inc
ins
mov
and
aas
js
(bad)
push
bound
call
mov
jae
ret
mov
sub
xchg
(bad)
scas
stos
pop
jbe
in
adc
dec
imul
shl
xor
pop
push
push
adc
cmps
dec
mov
pop
call
(bad)
mov
ss
(bad)
push
dec
pushf
mov
std
fisubr
rcl
sbb
push
out
movs
lea
xor
jmp
jno
push
jae
rol
ret
addr16
pop
cmp
test
ins
pusha
xchg
add
dec
shr
lahf
retf
xor
stc
ror
jl
add
jne
mov
outs
sbb
loopne
mov
(bad)
loop
mov
test
and
int3
mov
fist
clc
push
cmc
fnstsw
add
or
cmc
jmp
xor
jecxz
sbb
pop
stc
push
sub
in
push
fwait
xor
ins
aas
jmp
aam
sbb
fstp
sub
dec
aaa
mov
sub
lods
xchg
ins
loope
dec
fistp
cmps
mov
les
loope
push
or
stos
repnz
push
popf
jmp
rol
add
das
sbb
iret
and
into
das
mov
icebp
in
push
jle
pop
fld
push
mov
dec
and
jbe
fistp
out
and
sti
lea
mov
lods
add
add
dec
out
out
neg
push
sbb
(bad)
xlat
loopne
xchg
xchg
leave
test
std
lock
inc
mov
push
sbb
xor
loopne
scas
rcl
int
mov
jbe
ficom
mov
or
push
pop
xchg
pop
cmp
fidivr
dec
adc
test
and
les
fprem1
inc
push
mov
sbb
mov
push
or
enter
pop
dec
xchg
fbstp
out
xchg
xor
mov
fs
mov
scas
into
test
neg
stos
push
call
sbb
or
retf
xlat
cld
cld
jle
jmp
icebp
pop
adc
xor
stc
(bad)
pop
nop
lods
mov
ins
jle
imul
lahf
jp
add
mov
mov
xchg
enter
ss
pop
sbb
pop
xor
daa
add
(bad)
cmp
xor
les
cmp
sbb
shl
mov
push
lods
jmp
push
dec
lods
sar
int
pop
stos
xor
push
mov
pavgb
movs
lea
push
jnp
neg
stc
retf
inc
mov
adc
aad
fisubr
add
add
pop
fcmovnu
out
movs
ficomp
loope
xchg
xor
(bad)
and
lods
shl
inc
cmps
xor
ja
mov
out
(bad)
jp
int
cld
dec
shr
cwde
cmp
out
add
enter
fcmovnb
les
push
in
movs
jle
xor
mov
jp
test
enter
aaa
dec
mov
and
jmp
stos
dec
call
fild
and
iret
mov
retf
jbe
and
sar
rcr
jmp
data16
adc
xchg
(bad)
jp
mov
jmp
mov
jp
inc
mov
mov
cmp
or
das
jne
stos
arpl
(bad)
pop
push
adc
fsubr
in
retf
test
cmp
jp
push
es
inc
stos
cmp
sub
lea
dec
pop
and
dec
dec
push
sub
sbb
push
nop
or
fld
fsubr
sbb
jae
sbb
adc
in
adc
sbb
ret
icebp
fst
mov
dec
(bad)
(bad)
jns
mov
cwde
nop
fstp
scas
jno
test
lock
jg
shr
pop
std
jnp
outs
cmc
sub
lahf
cmp
daa
call
mov
mov
scas
pop
jbe
add
xor
int
inc
ja
push
or
jle
jne
mov
icebp
cmps
addr16
test
xchg
adc
pop
ja
aas
xor
jg
adc
add
jo
leave
push
out
jns
jmp
push
stc
pop
aam
xor
dec
outs
fsincos
add
push
mov
add
das
sub
mov
adc
test
iret
adc
push
cmp
cdq
test
and
sbb
push
ins
add
mov
fdivr
lds
mov
loope
(bad)
jmp
add
or
sahf
cmp
repz
push
push
pop
lea
jbe
xor
sti
fdivrp
xor
rcl
pop
jg
dec
pop
xchg
popa
mov
xchg
pop
fprem
stc
dec
lea
lods
add
xchg
pop
xor
mov
jecxz
int3
cmp
mov
or
popa
iret
pop
jmp
mov
das
mov
mov
or
daa
fiadd
or
pop
push
mov
add
dec
jle
xchg
lods
leave
inc
movs
mov
jbe
add
imul
ds
mov
clc
cmc
mov
cs
push
test
mov
pop
jg
dec
pop
inc
jne
pop
pop
aaa
aaa
int
push
loope
push
inc
push
sti
jbe
sbb
arpl
lock
aad
inc
push
adc
cdq
push
and
pop
adc
clc
and
(bad)
adc
inc
in
mov
or
mov
jmp
and
popf
les
stc
repz
mov
pop
or
(bad)
cmp
pop
std
out
movs
mov
mov
bound
(bad)
fmul
imul
lods
out
int3
sbb
cmp
mov
and
push
mov
jp
cmp
mov
xchg
sub
data16
(bad)
ins
jne
rcr
jl
push
cwde
jne
fs
or
push
lahf
shr
pop
jg
ret
mov
ss
push
cmc
or
call
adc
xchg
pop
sti
push
lods
mov
mov
cmc
outs
mov
leave
sub
leave
or
jnp
xor
mov
rcl
(bad)
fs
add
test
jl
xor
jno
shl
out
pop
dec
sub
push
jno
xor
je
cmp
and
(bad)
mov
(bad)
jp
xchg
sti
mov
rol
jb
mov
iret
daa
cmp
cmp
nop
pop
jmp
fxch
pop
sub
mov
in
jp
lods
xchg
imul
mov
aam
in
(bad)
jno
mov
jns
(bad)
hlt
add
in
jns
add
fs
mov
dec
pushf
mov
rol
push
inc
push
fsubr
push
(bad)
sub
retf
jno
inc
mov
aaa
or
and
jmp
fst
(bad)
mov
xor
sub
(bad)
xchg
sbb
stos
mov
pop
mul
jmp
fsub
cli
add
call
mov
fadd
mov
xchg
icebp
int
les
pusha
and
cs
pop
pop
adc
mov
dec
in
sub
push
ret
xchg
inc
inc
fiadd
out
shl
push
adc
ja
aaa
inc
je
(bad)
iret
arpl
call
mov
neg
pop
inc
mov
fwait
iret
mov
fwait
shl
xchg
dec
fisttp
push
mov
mov
adc
in
(bad)
push
add
jo
enter
cli
out
xlat
clc
sub
pop
cmps
or
je
ins
addr16
cmc
xchg
fdiv
test
into
shl
dec
stos
ins
push
(bad)
sar
xor
addr16
dec
dec
or
(bad)
mov
pop
mov
je
sahf
scas
push
lock
sub
sbb
dec
das
scas
mov
retf
aad
fnstcw
add
ret
not
jp
pop
adc
mov
dec
inc
stc
test
mov
ins
push
or
int
(bad)
je
mov
jmp
xchg
mov
or
xchg
pop
push
cmp
addr16
inc
lahf
xchg
in
mov
mov
xor
pop
add
lahf
lock
inc
fld
(bad)
jb
and
shl
ins
fisttp
sbb
pop
mov
(bad)
test
inc
cmp
add
out
loopne
repnz
loope
jno
and
sbb
sub
cdq
std
add
inc
out
push
inc
sub
and
cmc
jo
jmp
add
pop
jg
adc
mov
js
mov
add
out
shl
setae
arpl
repz
dec
jo
sub
push
mov
rcr
pop
std
adc
pusha
inc
inc
fild
lds
popf
mov
pop
ret
movs
mov
in
inc
movs
mov
test
or
xor
(bad)
(bad)
cmp
jmp
push
mov
hlt
mov
add
lods
inc
and
ins
add
imul
aas
scas
ins
adc
push
(bad)
cld
std
sub
nop
scas
mov
push
cmp
add
mov
pop
cmp
scas
sub
sahf
cmp
pop
(bad)
dec
sub
mov
and
push
push
mov
pop
jae
lds
adc
dec
push
jp
push
stos
push
imul
in
lds
stc
outs
adc
mov
clc
dec
cmps
xor
or
mov
rol
pusha
xabort
fwait
xor
sub
js
mov
stos
pop
pop
hlt
popf
fcmovnb
sub
jle
add
retf
or
mov
push
stos
pop
inc
ret
xchg
and
cmp
fistp
into
pop
movs
sar
jl
fsubr
xchg
int
pusha
retf
ss
dec
pusha
lea
pop
mov
push
cs
jnp
scas
mov
fiadd
aaa
mov
outs
ss
hlt
rol
mov
or
lods
adc
adc
jne
mov
adc
jl
out
mov
mov
jge
imul
shl
mov
sbb
scas
(bad)
push
pop
adc
sbb
sub
xor
push
daa
cdq
inc
cmps
mov
inc
cmp
add
int
aaa
or
int3
mov
cmp
push
addr16
xchg
mov
movs
das
ret
cld
mov
shl
add
jbe
sbb
rol
dec
add
shl
or
dec
xlat
xlat
and
clc
push
mov
mov
mov
inc
jge
jle
aas
add
js
repnz
mov
and
aas
cmp
pop
shl
pusha
or
pop
cdq
jo
imul
push
cmp
jmp
je
pop
jmp
pop
mov
enter
cdq
div
je
mov
bound
in
inc
data16
fnstsw
(bad)
adc
xchg
std
pop
mov
cmp
shr
push
xlat
push
mov
test
inc
push
jle
adc
push
leave
fbld
mov
xor
cmp
push
aam
xchg
mov
jmp
jp
mov
jmp
mov
jmp
movs
push
inc
stos
mov
(bad)
cmp
ret
push
scas
adc
jne
add
push
push
movs
aad
loop
jo
mov
cld
retf
leave
cmps
adc
jg
sbb
jecxz
aam
pop
push
(bad)
dec
test
pop
pop
aam
cmp
scas
dec
jae
sub
pop
movs
adc
jmp
test
sub
test
pop
cmp
int3
xchg
pop
rol
adc
cmp
mov
or
fld
push
fbld
out
ret
int3
mov
xchg
int
shl
push
arpl
dec
and
int3
shr
popf
stos
pop
lods
cmp
call
lahf
out
sar
mov
mov
xchg
mov
popa
push
push
rcr
jmp
and
test
rcl
(bad)
test
xor
and
cdq
push
sub
adc
ins
push
test
ds
gs
cmp
pop
mov
ja
xchg
or
sbb
mov
loop
gs
gs
adc
out
loop
scas
mov
jp
cmp
dec
loopne
ss
xlat
sbb
rcr
(bad)
in
push
arpl
cmp
adc
imul
ss
shl
leave
mov
lahf
and
pop
dec
push
xchg
and
shr
cmp
inc
scas
add
shr
sub
cmps
jb
dec
sub
repz
sbb
push
je
daa
jo
sti
mov
inc
push
add
cdq
mov
xor
jle
jmp
(bad)
fnsave
pushf
mov
and
or
or
out
dec
or
loop
fcmove
adc
mov
and
sbb
sub
mov
cld
mov
enter
scas
sub
xchg
xchg
mov
sbb
or
clc
or
jge
div
test
push
jp
xchg
pop
sbb
mov
scas
xor
lods
pop
mov
jl
mov
cli
mov
pop
call
arpl
xlat
mov
enter
cwde
xchg
vmptrld
cli
add
mov
push
movs
jle
push
mov
pop
(bad)
repnz
mov
pop
in
cmp
jno
into
adc
scas
loope
pop
imul
popf
(bad)
mov
pop
dec
dec
dec
sub
jmp
jmp
cmp
aad
test
test
jmp
lock
in
icebp
adc
jne
nop
cmp
pop
jnp
pop
xchg
or
cld
dec
dec
sbb
fcomip
and
arpl
mov
add
iret
sub
imul
adc
popf
jl
mov
daa
sbb
out
sahf
mov
inc
add
adc
pop
and
adc
mov
xchg
lds
mov
es
xlat
adc
psrlq
es
iret
cs
mov
mov
or
into
push
push
fcom
mov
ja
xchg
ffree
fadd
loop
retf
cmp
fisub
imul
xchg
pop
int3
into
or
test
jns
(bad)
adc
sub
fwait
cmp
leave
mov
mov
clc
push
ret
leave
inc
mov
outs
in
fs
repz
aas
(bad)
cld
repz
push
xchg
stc
lods
scas
pop
sub
dec
inc
dec
inc
scas
inc
pusha
or
add
add
add
(bad)
(bad)
inc
add
add
add
add
add
add
jns
je
ins
cs
jb
ja
outs
addr16
push
gs
imul
xor
xor
inc
jne
je
jb
cmp
jb
ins
sub
push
jne
ins
imul
imul
bound
xor
data16
xor
fs
add
adc
gs
cs
jb
ja
outs
addr16
imul
add
popa
je
pop
add
add
add
add
add
lsl
add
rcl
add
mov
inc
or
add
or
add
add
add
add
or
add
add
pusha
outs
rol
add
add
inc
dec
inc
add
mov
or
popa
add
jo
pop
jae
add
ret
add
push
ret
add
outs
test
add
adc
inc
inc
push
pop
inc
in
rol
add
scas
ss
cmp
cmp
cmp
adc
jge
dec
ja
ins
cmp
cwde
mov
jg
(bad)
repz
mov
cmps
push
clc
adc
lock
sahf
xadd
movs
in
jb
retf
inc
inc
dec
dec
ret
cmps
cs
jne
loop
push
in
movs
mov
fiadd
cmps
in
out
in
in
pop
mov
mov
mov
int3
push
repnz
jecxz
rol
fst
cmps
outs
arpl
xor
or
push
out
icebp
fcom
leave
movs
addr16
jecxz
inc
repz
les
hlt
mov
into
pop
pop
mov
sub
add
ficomp
clc
inc
mov
stos
aam
loope
mov
dec
sbb
std
nop
ror
(bad)
sar
pop
mov
shr
ror
leave
lds
and
adc
dec
sar
in
mov
in
stc
jg
bound
nop
or
jno
xlat
arpl
and
ins
pusha
(bad)
sahf
sbb
mov
mov
xor
adc
jo
ret
mov
add
shl
leave
fmul
loope
mov
pop
(bad)
push
xchg
add
pop
out
ins
lahf
sysexit
nop
inc
xchg
mov
inc
sti
add
or
clc
add
int
pusha
(bad)
hlt
xchg
rep
loope
int3
sub
(bad)
aad
mov
pxor
(bad)
repnz
push
inc
aaa
mov
int3
fwait
test
inc
mov
aad
movs
add
inc
jae
cmp
xlat
sbb
xor
stos
popf
push
xor
enter
retf
and
repnz
std
jnp
fmul
mov
(bad)
shl
stos
cmp
push
retf
push
nop
daa
shr
inc
mov
loope
jno
xchg
or
rcl
push
cdq
mov
fst
dec
xchg
pusha
cs
into
int
call
sbb
in
imul
ins
sbb
fwait
and
and
dec
push
xchg
xor
addr16
frstor
cmp
int
jnp
bound
iret
jecxz
dec
stos
dec
hlt
(bad)
sub
daa
mov
jecxz
pop
movups
push
push
shl
inc
jns
mov
inc
mov
mov
outs
mov
add
daa
into
sbb
add
push
(bad)
mov
pop
xchg
adc
retf
or
mov
add
and
movs
fcomi
cmp
aad
dec
add
mov
mov
sbb
cmc
rcr
mov
adc
aam
dec
fld
xchg
jb
mov
ret
push
pusha
int
(bad)
es
call
pop
and
rcr
std
js
xchg
mov
add
sub
mov
fs
push
daa
cmp
js
sub
arpl
repz
ror
mov
fistp
sub
mov
push
out
inc
jns
test
jae
outs
pop
cmps
outs
dec
mov
mov
push
leave
dec
repnz
xchg
xlat
icebp
fcmovu
pop
cmp
xchg
repnz
je
and
leave
push
out
cs
mov
ins
es
ja
xchg
xor
shr
outs
pusha
in
mov
sbb
inc
test
jne
cmp
lods
cld
pop
clc
jmp
pop
push
jo
fild
stos
ss
int
jmp
mov
push
cmp
scas
inc
adc
and
cmps
push
and
fstp
pop
mov
pop
leave
mov
ret
mov
fcomp
int
adc
mov
retf
mov
hlt
sub
mov
add
iret
cli
iret
les
add
mov
mov
test
mov
inc
ja
xchg
jge
adc
ret
xor
add
cs
in
dec
push
sbb
cmp
rcr
and
(bad)
es
loopne
xor
push
or
mov
xchg
cli
(bad)
fdivr
push
dec
das
xchg
xchg
and
add
mov
pop
dec
or
ret
sbb
push
pop
xchg
mov
lods
out
movs
das
inc
xchg
add
das
pusha
pmaxub
inc
cmc
add
jae
add
je
outs
push
mov
xchg
stc
pop
inc
dec
hlt
loopne
aaa
add
xor
push
or
sbb
jne
mov
clc
mov
sbb
clc
add
dec
into
lds
mov
push
or
out
enter
arpl
dec
mov
dec
mov
jbe
pop
or
mov
mov
das
ja
jno
lea
ret
clc
sbb
add
sahf
lods
push
(bad)
jmp
(bad)
dec
sbb
data16
fist
add
not
inc
scas
sub
add
(bad)
iret
and
shl
(bad)
pop
js
mov
mov
lods
retf
test
sar
rcr
push
jge
lds
cmp
clc
mov
jbe
fwait
ror
retf
jle
rol
jns
les
pop
jnp
outs
mov
pop
or
mov
fmul
xchg
fld
iret
(bad)
cmp
push
ret
jae
dec
aam
inc
cli
xlat
xlat
pop
inc
mov
xchg
test
fdivr
mov
sbb
bound
addr16
test
xor
idiv
in
loopne
mov
jmp
fbld
mov
jmp
pop
mov
and
or
scas
xchg
ror
push
or
xchg
addr16
(bad)
sub
mov
xchg
pop
mov
aas
push
popf
add
push
dec
pop
stos
xor
rol
fbstp
(bad)
(bad)
mov
inc
ds
push
test
dec
push
bound
pop
fstp
fs
loope
xlat
scas
jnp
sub
std
mov
xor
ins
dec
sub
clc
push
xchg
push
movs
cmp
mov
loope
loopne
add
push
iret
cmp
adc
aaa
(bad)
mov
sub
mov
mov
jbe
(bad)
xor
push
mov
aas
jg
push
sahf
xlat
push
ins
mov
in
xor
push
push
xchg
cmp
int3
or
pop
cmp
nop
push
jp
in
dec
dec
mov
jae
mov
into
and
xchg
sbb
mov
out
xchg
aad
adc
push
test
and
inc
outs
fidiv
lods
pop
(bad)
arpl
outs
lahf
or
mov
into
daa
repnz
inc
arpl
mov
mov
cmp
jmp
cmps
xor
cmp
or
iret
hlt
xchg
ror
mov
mov
(bad)
pop
mov
cmp
out
dec
xchg
xchg
stc
movs
test
or
pop
sbb
aad
add
outs
jae
in
inc
or
add
jge
and
and
push
xchg
fimul
int
push
shr
push
inc
pop
ds
int3
cwde
ror
movs
call
cmp
cmp
fsubrp
cli
aad
mov
xchg
loope
jl
jmp
pop
jnp
add
test
hlt
stc
jge
inc
cmp
test
sub
mov
pop
and
cmp
push
or
push
mov
xchg
xchg
jl
xor
sbb
cmp
push
aad
retf
push
cld
inc
pop
shl
push
push
mov
cmp
add
mov
pop
popf
mov
jmp
or
in
pop
mov
add
adc
push
nop
ja
adc
iret
add
cmp
retf
test
mov
mov
or
les
fbld
int
popa
cli
stc
out
sub
xor
sbb
inc
cmp
shl
in
adc
loop
mov
pop
adc
psrlw
mov
or
imul
retf
ret
xchg
fwait
sbb
out
std
mov
pop
nop
fwait
and
ins
push
(bad)
fisub
xor
mov
inc
loope
adc
sbb
mov
int3
xor
(bad)
push
call
nop
and
call
int
mov
retf
and
push
push
push
xor
ja
fcmovu
retf
inc
ja
mov
in
jne
in
push
test
jns
dec
jnp
xor
call
sti
and
sbb
mov
pop
adc
loop
dec
test
sbb
fwait
xor
add
sbb
jo
add
es
rol
add
sbb
add
bnd
lds
cmp
push
mov
je
movs
inc
and
mov
ins
push
stc
pusha
or
xchg
sbb
sub
hlt
xchg
mov
call
ins
(bad)
pop
xchg
dec
aas
retf
xlat
xor
dec
ins
sar
(bad)
fst
xchg
ja
mov
xlat
jmp
sbb
cmp
(bad)
and
(bad)
mov
in
inc
add
mov
dec
fild
push
cmp
add
ss
ja
dec
xchg
stc
mov
call
xlat
jle
pop
inc
cld
dec
ret
jns
pop
sub
push
popf
inc
sbb
push
out
cmp
push
jmp
out
cmc
pop
sar
icebp
pop
dec
sub
cmps
rol
mov
call
jg
js
mov
stos
lods
shl
jmp
mov
cdq
pop
pushf
loop
std
jl
shl
mov
dec
es
adc
mov
aas
outs
pop
xor
jecxz
hlt
mov
out
push
outs
jno
call
test
dec
ret
sbb
js
in
mov
sbb
mov
repz
cmp
sbb
pop
sbb
pushf
lock
sahf
xor
or
and
shl
loope
sub
mov
adc
arpl
into
xor
mov
mov
mov
nop
movs
icebp
mov
int3
or
add
xor
jmp
xchg
jno
in
add
xor
xchg
jne
mov
(bad)
fsubp
in
ss
(bad)
(bad)
cs
call
int3
push
in
jle
pop
xlat
or
ret
jle
ss
inc
jb
sub
and
lock
xchg
ffree
and
call
jnp
movs
lods
cmps
out
sti
fist
fwait
mov
dec
jbe
in
(bad)
in
loope
mov
imul
push
xchg
mov
das
inc
dec
js
sti
cwde
leave
xchg
sub
cmp
push
popf
lahf
sub
add
mov
lea
jl
adc
mov
sahf
in
popa
mov
mov
fwait
xchg
pop
(bad)
clc
repz
pop
mov
pop
add
fsubr
push
dec
sbb
(bad)
sbb
lahf
jl
jmp
add
es
sbb
pop
push
and
pop
dec
outs
std
clc
mov
in
(bad)
aad
and
xor
sub
jbe
pop
ret
xlat
sbb
pop
mov
adc
aaa
je
mov
jp
ret
loopne
sar
loop
sbb
aas
popf
(bad)
leave
outs
rcl
mov
cmp
imul
(bad)
loop
mov
sahf
push
xchg
out
popa
rcr
sar
stc
lods
hlt
call
ins
mov
mov
fld
dec
pop
jno
fsub
push
movs
retf
arpl
sub
mov
mov
int
shufps
add
mov
stos
jbe
xor
cld
xor
lea
or
dec
lahf
push
cs
daa
addr16
mov
das
pop
imul
sub
mov
adc
mov
fs
in
clc
lds
xor
pop
into
ins
mov
push
sub
pop
sbb
sub
shl
out
adc
jle
out
cdq
cdq
aad
inc
gs
nop
sbb
stos
loopne
pop
jl
not
push
jnp
pop
mov
jae
cmp
push
or
and
addr16
mov
out
mov
jmp
out
inc
lahf
pusha
mov
push
scas
xchg
int
(bad)
leave
sti
pop
or
cmp
fsubr
inc
push
push
sub
jge
pop
sub
movs
sahf
and
and
shr
inc
cli
push
lahf
inc
jle
inc
aam
dec
jp
sbb
call
pop
outs
inc
sbb
arpl
cld
je
imul
cld
fstp
and
xchg
fs
inc
inc
xor
icebp
cmc
ja
(bad)
in
aaa
dec
leave
mov
cmp
leave
popf
loop
sub
jmp
xchg
je
mov
xchg
cmc
lock
xchg
and
ins
pop
push
or
xor
push
les
enter
aas
dec
jno
mov
mov
and
xor
inc
popa
js
sub
dec
inc
jmp
lock
pop
les
mov
(bad)
std
(bad)
not
out
fist
fdivr
xchg
mov
push
pop
jmp
enter
jecxz
das
mov
arpl
or
mov
aam
cmp
mov
mov
mov
mov
and
out
sbb
jmp
nop
ss
jl
pusha
in
xlat
mov
and
mov
add
lods
in
mov
je
push
(bad)
stos
mov
out
cs
mov
sub
pop
in
adc
dec
ret
out
fisubr
push
ins
pop
pop
icebp
add
mov
scas
nop
scas
or
inc
or
mov
fdiv
sub
mov
icebp
outs
adc
add
call
into
xor
and
xor
in
sahf
fs
out
mov
outs
push
lds
jg
xchg
imul
mov
imul
jg
addr16
or
inc
imul
inc
xor
xor
daa
jmp
mov
icebp
adc
cwde
add
or
xor
inc
and
xor
inc
push
mov
adc
jmp
pop
lea
adc
rcr
cmp
xchg
out
jb
pop
ds
adc
or
outs
mov
jo
fstp
loop
add
out
sbb
inc
mov
pushf
nop
jo
aad
cmp
stos
mov
stc
out
xor
fbld
add
cmps
mov
lahf
std
pop
and
push
jnp
(bad)
movs
sbb
cmps
cmp
test
xchg
adc
retf
loope
and
inc
out
(bad)
sub
bound
mov
sbb
ret
xor
retf
jmp
cmp
sub
or
dec
cmpxchg
add
sub
xor
test
push
fs
sbb
imul
pop
pop
pusha
in
retf
stos
das
and
xchg
fdivr
inc
fwait
mov
dec
scas
lods
mov
ja
stc
arpl
in
popf
or
or
jae
pop
fstp
mov
mov
call
or
jmp
cmp
or
push
es
xchg
cli
mov
test
mov
cmp
mov
(bad)
pop
in
mov
daa
jne
aas
cmp
push
popa
sbb
or
inc
sbb
mov
mov
pop
push
cli
jo
pop
mov
loope
mov
xchg
jmp
jno
xor
gs
std
mov
out
and
mov
jo
lds
xor
lds
adc
sub
xor
pushf
outs
das
and
sbb
xchg
add
mov
mov
out
std
pop
lahf
mov
and
jl
popa
push
or
aam
push
mov
bound
call
pop
mov
mov
clc
(bad)
popf
xchg
xchg
retf
add
aaa
es
mov
scas
mov
xor
ja
sbb
jmp
xor
fcomip
imul
outs
mov
std
call
fcmovu
pop
adc
cmp
sbb
jns
std
stos
mov
das
pushf
sub
sub
shr
stos
cmp
js
cmc
mov
xchg
out
stos
jne
adc
xchg
mov
(bad)
cdq
fstp
outs
pop
mov
mov
test
leave
mov
add
add
mov
mov
dec
xchg
ficomp
popa
push
das
adc
popa
push
in
xor
ja
mov
test
sub
push
push
gs
push
jp
test
cdq
retf
into
imul
fwait
daa
das
push
bound
imul
cwde
xor
loope
fld
push
iret
loopne
jle
repz
jl
dec
xor
fsubr
pop
aad
(bad)
xchg
add
out
lahf
movs
call
or
add
cmps
and
jmp
loopne
(bad)
stc
iret
jg
repz
(bad)
cld
out
xor
jle
or
add
add
dec
inc
dec
inc
scas
inc
pusha
or
add
add
add
(bad)
(bad)
inc
add
add
add
add
add
add
jns
je
ins
cs
jb
ja
outs
addr16
push
gs
imul
xor
xor
inc
jne
je
jb
cmp
jb
ins
sub
push
jne
ins
imul
imul
bound
xor
data16
xor
fs
add
adc
gs
cs
jb
ja
outs
addr16
imul
add
popa
je
pop
add
add
add
add
add
lsl
add
mov
mov
inc
or
add
or
add
add
add
add
or
add
add
pusha
outs
rol
add
add
inc
dec
inc
add
mov
or
popa
add
jo
pop
jae
add
ret
add
push
ret
add
outs
test
add
adc
inc
inc
push
pop
inc
in
int
inc
xchg
or
out
push
pop
mov
push
dec
dec
imul
movs
xchg
xchg
sbb
clc
sbb
ret
jecxz
fadd
add
mov
xor
jnp
or
int
fbstp
xlat
pop
repz
jae
mov
or
cmp
ret
fist
aam
cmp
clc
(bad)
ja
sbb
mov
inc
mov
mov
or
pop
js
push
lods
xor
popf
gs
in
fcomp
ins
daa
jmp
mov
cmp
in
popa
push
pop
lods
xchg
cwde
jmp
sbb
xor
or
outs
mov
sbb
cmp
push
mov
sbb
loope
sbb
lods
push
leave
adc
xchg
clc
sti
xchg
xchg
cdq
push
xor
pop
imul
popf
mov
leave
sahf
repz
stos
pushf
out
pop
repz
inc
scas
mov
mov
inc
sub
fmul
shr
mov
loop
movq
cdq
into
fild
dec
dec
dec
(bad)
(bad)
cli
xor
lea
aas
fist
sbb
xchg
jmp
add
les
(bad)
sti
leave
sub
pop
mov
(bad)
repnz
lods
lods
adc
test
pop
mov
fstp
mov
ja
out
outs
pop
mov
mov
push
in
pop
ficomp
aam
popa
or
jnp
aad
sub
pop
adc
sub
xor
fldl2e
gs
imul
adc
inc
fsubr
cdq
mov
jb
js
fistp
data16
jge
(bad)
sbb
dec
call
leave
ins
dec
jo
inc
sbb
loope
xchg
pop
pop
push
pushf
mov
into
js
vcvtsi2sd
push
cdq
and
sub
xor
jb
or
movs
cmps
call
dec
or
xor
retf
jecxz
call
in
in
xchg
pushf
xor
push
cs
push
mov
fld
jae
dec
(bad)
outs
dec
rol
test
loope
cld
or
add
pop
push
inc
pop
and
inc
xchg
pop
in
(bad)
mov
lea
add
sbb
mov
rcr
lahf
sbb
loope
adc
in
or
imul
outs
out
sahf
mov
fisttp
mov
fsin
and
outs
cmp
adc
and
mov
and
imul
in
xchg
jmp
add
push
dec
(bad)
outs
jae
push
cs
stc
(bad)
push
sbb
jmp
add
jae
out
push
(bad)
jl
arpl
cmp
push
push
bnd
or
rcl
dec
shl
dec
cmc
jne
cli
mov
pop
lock
into
ret
add
pushf
xor
xor
shr
fldcw
mov
mov
clc
mov
mov
inc
xchg
adc
scas
mov
inc
lods
xor
or
scas
out
ins
and
sub
ss
and
sbb
cmc
in
or
ror
repnz
sbb
std
mov
xor
ds
sub
xor
frstor
sti
push
(bad)
cmc
mov
xchg
les
out
fidiv
pop
data16
ret
mov
enter
and
ror
int3
mov
mov
sbb
mov
out
lahf
stc
mov
pop
jmp
dec
mov
mov
pop
jne
adc
aaa
fwait
imul
mov
cdq
fcmovne
sti
daa
inc
dec
(bad)
xor
imul
enter
outs
push
xchg
int
ins
mov
mov
out
push
sbb
(bad)
fldcw
cmp
ins
push
mov
leave
mov
mov
jne
xor
pop
xor
sub
rol
retf
ds
dec
ror
lods
fwait
arpl
test
inc
cmp
loope
jecxz
cs
xor
aas
mov
icebp
mov
sbb
xchg
xchg
jmp
mov
xor
add
je
popa
sub
jb
add
sbb
pop
or
sub
sub
push
inc
shl
les
cwde
push
mov
jle
mov
in
pop
call
scas
fwait
mov
sub
pop
daa
cli
test
cmp
lods
sbb
mov
imul
sar
push
daa
mov
popa
out
fisttp
mov
inc
iret
call
inc
push
jmp
xor
add
inc
sbb
(bad)
ja
cmps
mov
inc
fstp
loope
call
leave
sbb
js
ret
hlt
ffree
repnz
aas
mov
sub
popf
xor
icebp
sub
cld
retf
(bad)
shr
jne
pop
pop
mov
or
ss
ins
lock
(bad)
loop
sbb
(bad)
in
test
stos
imul
cld
test
jno
pop
adc
inc
dec
mul
neg
ds
push
js
add
dec
jl
imul
or
mul
dec
sbb
bswap
cmp
enter
aas
neg
xlat
and
jge
in
push
fmulp
mov
push
rcl
call
dec
inc
pushf
xchg
addr16
mov
lahf
pop
leave
pop
hlt
cld
mov
jne
pop
and
pop
in
inc
cmp
mov
(bad)
ja
sub
xchg
pop
inc
lods
pop
add
das
sbb
dec
mov
repnz
add
mov
movs
sbb
leave
xor
add
xchg
aas
imul
icebp
jp
popa
outs
cmps
retf
rcr
dec
ins
jmp
pop
stc
(bad)
cs
gs
pop
mov
add
cmp
pusha
pop
pop
call
pop
mov
mov
not
pop
add
test
pop
retf
mov
cmp
popf
xlat
in
pop
mov
push
push
xlat
ja
mov
jo
stos
jge
fwait
or
rcr
mov
fucom
push
or
repnz
call
in
jecxz
lods
shl
jp
ret
in
push
jge
test
ds
sbb
pop
out
sbb
or
outs
mov
arpl
shl
dec
and
imul
push
adc
jno
cli
add
mov
mov
lods
mov
and
add
adc
mov
sbb
cmp
scas
dec
sub
ja
sub
sti
je
push
mov
mov
cmps
retf
push
icebp
cmp
xor
outs
hlt
jno
jg
cld
mov
scas
and
mov
lock
sub
dec
rol
sbb
ins
jnp
cmp
ss
stos
xor
fwait
test
xchg
jmp
inc
jecxz
aam
int
in
mov
or
jmp
sbb
je
outs
or
je
mov
test
jp
out
mov
into
sbb
movs
xor
sar
sub
sub
ds
mov
dec
scas
lods
mov
pop
and
test
out
mov
add
mov
mov
xchg
mov
add
xchg
pop
loope
dec
pushf
sbb
js
lahf
add
mov
pop
test
daa
adc
jb
mov
lahf
dec
push
sub
and
push
sbb
test
jnp
sub
adc
pop
xchg
cld
push
daa
jmp
sti
pop
pop
push
jbe
mov
mov
sbb
aad
pop
test
out
loope
mov
xor
in
dec
and
jno
or
mov
sub
jnp
sbb
mov
push
jl
repnz
add
call
stos
dec
dec
aas
enter
dec
data16
mov
lea
cmp
or
or
dec
xchg
xchg
pusha
jbe
and
bound
adc
js
nop
adc
push
push
cld
jbe
sub
jmp
cmp
mov
mov
call
test
sahf
je
pusha
cmp
jl
jne
mov
sbb
dec
gs
xchg
sti
cmp
lods
mov
addr16
and
(bad)
mov
push
add
jg
mov
jmp
out
jb
(bad)
mov
pop
fwait
sbb
xor
movs
pop
fs
push
stos
mov
shl
mov
cdq
and
mov
add
movs
push
xchg
mov
retf
stos
lahf
adc
jge
mov
sar
inc
sub
mov
test
ds
jb
fwait
sar
jge
dec
push
mov
jecxz
loopne
pushf
ins
xchg
(bad)
jo
ret
add
into
stc
jle
xor
pop
ret
dec
clc
mov
mov
xlat
mov
rol
retf
pop
mov
stos
or
jg
adc
push
mov
loop
push
pop
or
inc
js
clc
mov
or
jg
dec
jo
into
push
xchg
jns
xor
or
jb
test
mov
cmc
clc
xchg
fnsave
aam
int
leave
int3
cmps
hlt
ret
push
add
mov
xchg
inc
pmaxub
repz
sub
mov
dec
push
xchg
mov
inc
push
pop
jnp
ret
jmp
push
out
dec
repnz
xchg
push
and
jns
jo
cld
dec
data16
stc
movs
in
fs
rcl
add
sub
sahf
cld
pop
adc
xor
sbb
inc
cli
addr16
outs
in
xchg
icebp
cmp
popf
xchg
mov
cmp
fild
hlt
mov
cmps
test
add
xor
add
gs
daa
rol
(bad)
nop
mov
sub
push
cld
leave
sahf
pushf
ja
fisubr
push
fstp
aad
lods
push
dec
jmp
push
aaa
fldcw
dec
fsin
sbb
ins
pushf
xor
in
int
inc
or
in
imul
(bad)
xlat
iret
pop
out
cmp
xchg
call
push
jmp
(bad)
dec
push
cmp
xchg
in
in
push
aam
dec
jae
into
dec
rcr
fild
xor
dec
shl
pop
(bad)
sub
xchg
in
sbb
aad
es
xor
push
mov
xchg
mov
push
test
ins
std
pop
push
cmp
or
imul
test
jmp
stc
xor
mov
cmp
or
inc
not
sti
mov
mov
sbb
mov
xor
stc
mov
mov
(bad)
xchg
adc
xchg
pop
pop
sti
push
push
stos
xor
into
out
add
lock
outs
rcr
cld
inc
jecxz
sbb
inc
inc
push
xchg
mov
jp
add
jmp
rcr
arpl
xchg
fild
cwde
sub
pop
mov
jnp
call
int3
adc
aas
mov
xchg
mov
mov
xor
test
or
fstp
sbb
aad
test
(bad)
jecxz
test
in
test
xchg
mov
addr16
push
fdiv
lods
adc
in
xor
jecxz
mov
stos
jno
pop
mov
adc
cld
jne
mov
push
inc
retf
rol
stos
add
adc
push
ja
addr16
pop
xor
xor
ins
mov
into
aaa
fld
push
cmp
(bad)
mov
psubusb
cmps
sub
cmp
std
push
sub
movs
sbb
fwait
xor
jb
dec
jne
push
xchg
or
sub
jmp
mov
jge
jmp
jbe
jb
ins
int
jo
rcl
jnp
or
pop
xchg
dec
outs
lahf
or
or
fucom
pop
sbb
out
ficomp
mov
xchg
fbld
sub
nop
ins
and
and
mul
outs
xor
bound
mov
pop
arpl
call
cmp
inc
xchg
outs
jle
sub
adc
in
xlat
or
sub
jl
aaa
sbb
push
loopne
push
mov
int
sub
fidivr
inc
or
ins
sti
dec
test
inc
enter
sbb
cmc
pushf
nop
mov
pop
cmps
and
mov
jg
jmp
push
add
jmp
enter
pop
push
ss
pop
popa
clc
pop
test
adc
mov
loop
fisubr
jno
ins
cmp
jl
add
mov
and
mov
mov
ds
adc
fyl2xp1
fmulp
out
imul
xchg
fcom
xchg
add
loop
ror
arpl
fcmove
iret
data16
xchg
mov
xchg
mov
xor
pop
movs
inc
mov
movs
jmp
push
pushf
in
mov
cmp
aaa
je
clc
adc
xchg
or
mov
nop
int3
movs
inc
xor
and
xor
add
sti
mov
inc
jg
outs
outs
mov
cmc
pop
dec
fisub
rcr
inc
xor
jg
retf
rcl
scas
sub
jl
jne
fisttp
call
outs
test
ins
bts
push
xchg
dec
push
pop
and
adc
ficom
jnp
lods
xchg
cmp
fadd
scas
add
pop
movs
aaa
aas
(bad)
es
or
sbb
js
jecxz
aam
rcr
stos
dec
sub
fsub
adc
push
shr
out
push
pop
push
shr
cwde
in
sub
lock
sbb
push
aaa
bound
loop
cmp
sti
mov
in
out
cmp
in
out
cmp
dec
loope
push
pop
call
mov
icebp
movs
retf
or
shl
mov
fadd
(bad)
adc
or
adc
jl
repz
push
jae
cld
(bad)
test
and
ins
xchg
data16
ret
xor
push
cmp
jae
and
mov
sbb
xlat
add
rol
push
xor
leave
pushf
sbb
jno
ss
scas
(bad)
adc
add
inc
inc
in
mov
mov
push
fbld
adc
aas
(bad)
add
xchg
cld
sub
icebp
in
sub
adc
mov
repz
push
push
mov
fcomp
xor
push
mov
sbb
int3
clc
repz
sub
sbb
dec
loop
mov
int3
inc
mov
int
pop
cmp
test
out
xchg
pop
pop
fs
xchg
pop
xchg
movs
int3
call
scas
jl
retf
and
jne
cmp
sbb
sbb
dec
(bad)
stos
inc
and
stc
test
iret
test
xchg
imul
cmp
mov
inc
pusha
fnstsw
call
idiv
add
dec
xchg
inc
mov
xchg
addr16
fsubrp
imul
(bad)
test
int
xchg
sbb
push
dec
adc
aad
mov
mov
xchg
sahf
push
adc
fnstenv
idiv
xor
add
test
fstp
jge
pop
(bad)
cmp
and
loope
test
pop
into
test
js
shl
inc
push
enter
mov
and
je
mov
push
xchg
fmul
sti
adc
imul
jo
jnp
icebp
jp
adc
sub
sub
aam
mov
sub
adc
push
mov
sub
cmp
in
pop
adc
cmp
adc
fisubr
cwde
jbe
lods
addr16
adc
or
sub
sbb
outs
fnstenv
and
adc
hlt
rcl
lods
(bad)
xor
scas
shr
lock
pop
adc
adc
(bad)
out
out
mov
data16
mov
inc
int3
outs
repz
out
and
(bad)
jmp
jae
das
dec
add
fistp
mov
leave
xor
test
popa
(bad)
(bad)
push
jge
push
pushf
arpl
pop
lock
sub
es
hlt
int3
ss
inc
xchg
xchg
fs
adc
pop
inc
adc
bsf
or
adc
mov
pushf
mov
in
clc
or
imul
mov
mov
out
loop
inc
(bad)
aam
(bad)
and
es
and
ins
or
je
and
or
out
cdq
hlt
(bad)
fisub
in
push
pop
jbe
and
call
adc
pop
fcmovnb
movs
dec
jecxz
sub
leave
ficomp
aaa
push
pop
xor
inc
add
scas
cmp
enter
into
push
mov
lahf
jg
stc
out
call
add
jg
jbe
inc
dec
xchg
fild
dec
inc
dec
inc
scas
inc
pusha
or
add
add
add
(bad)
(bad)
inc
add
add
add
add
add
add
jns
je
ins
cs
jb
ja
outs
addr16
push
gs
imul
xor
xor
inc
jne
je
jb
cmp
jb
ins
sub
push
jne
ins
imul
imul
bound
xor
data16
xor
fs
add
adc
gs
cs
jb
ja
outs
addr16
imul
add
popa
je
pop
add
add
add
add
add
lsl
add
lds
add
add
or
or
add
or
add
add
add
add
or
add
add
pusha
outs
rol
add
add
inc
dec
inc
add
mov
or
popa
add
jo
pop
jae
add
ret
add
push
ret
add
outs
test
add
adc
inc
inc
push
pop
inc
in
(bad)
test
mov
and
mov
int
shl
and
dec
lea
and
push
jmp
ror
mov
(bad)
ds
inc
jl
pop
add
pushf
test
push
sbb
pop
and
mov
xchg
xchg
cmps
add
fisttp
and
mov
adc
pop
inc
lds
pusha
mov
out
out
mov
ret
cmp
dec
add
call
rcl
(bad)
std
cli
hlt
sbb
cmp
adc
(bad)
mov
fucomp
sub
retf
dec
js
mov
lahf
(bad)
lahf
arpl
neg
cmps
and
add
sbb
ret
addr16
ret
or
pop
mov
test
cmp
push
retf
movs
imul
push
ins
movs
ror
add
stos
mov
xchg
and
mov
scas
push
stos
pop
cmp
adc
cld
fidivr
popa
out
mov
ja
pop
sub
(bad)
out
sub
leave
xchg
sbb
call
mov
(bad)
imul
pop
lock
pop
mov
add
rol
jmp
icebp
adc
(bad)
test
cld
retf
and
mov
or
pop
dec
mov
pushf
or
and
jmp
sub
sub
fistp
aaa
test
aas
inc
stc
xchg
test
dec
sbb
xor
jnp
add
jl
push
and
das
mov
adc
fdiv
push
jl
xchg
mov
aas
scas
jmp
pop
jp
push
sbb
mov
out
fiadd
or
sub
push
lods
and
(bad)
(bad)
cmp
and
and
mov
daa
out
inc
pop
out
repnz
mov
std
sahf
mov
popf
sbb
cmps
sar
fadd
outs
and
pushf
sbb
int3
mov
mov
stos
mov
arpl
mov
jns
aam
sbb
sbb
icebp
sbb
mov
xor
rcl
bound
or
(bad)
pop
into
sub
xor
mov
sub
sub
movs
clc
js
sti
fdivr
dec
and
sbb
mov
test
(bad)
test
adc
push
dec
fst
loop
rcr
sub
loope
clc
push
mov
jmp
adc
aad
add
mov
std
in
mov
inc
(bad)
pop
cmp
mov
ins
adc
sahf
cs
fcomi
sub
outs
aas
adc
pop
scas
stos
xor
xchg
xchg
cmovge
cmps
rcl
push
push
xchg
mov
adc
add
or
cld
stc
inc
add
adc
mov
sahf
xor
push
adc
or
mov
call
pop
cdq
ja
pop
jo
lods
sar
adc
mov
cdq
(bad)
jmp
mov
imul
inc
push
and
jne
clc
loope
fisttp
arpl
pop
movs
xchg
clc
fwait
lds
test
pop
mov
clc
fimul
sbb
dec
dec
pop
add
jecxz
mov
sar
ins
lods
inc
test
scas
retf
fidivr
xor
jle
in
pushf
sbb
push
push
add
fimul
push
inc
cmp
cmps
iret
inc
mov
xchg
mov
scas
lea
lods
(bad)
(bad)
inc
mov
pop
add
xor
jnp
or
daa
ds
pop
and
lods
cmc
xor
test
xchg
mov
into
in
push
push
fsub
pop
cmc
mov
sub
mov
shl
lea
adc
test
mov
mov
inc
pop
int3
das
mov
mov
cmp
or
cmp
sbb
and
dec
popa
imul
dec
shl
sti
push
dec
imul
inc
mov
(bad)
popa
mov
or
cli
mov
into
xor
adc
and
sahf
aad
test
pusha
andnps
aaa
js
ins
inc
pushf
adc
(bad)
sar
cmp
adc
xchg
add
stos
mov
jns
ins
cld
mov
mov
cmp
jbe
dec
add
xor
shl
ja
sbb
fwait
call
jb
mov
stc
shl
mov
adc
xchg
xchg
inc
sub
lds
addr16
call
in
fimul
jmp
and
cmc
cmp
and
push
cmps
xor
adc
sti
repz
dec
popa
cdq
aaa
call
or
mov
cli
loop
jno
dec
fldcw
dec
cmc
out
or
jecxz
push
adc
jge
mov
in
dec
loope
add
mov
inc
cdq
jb
jmp
popa
sar
sbb
(bad)
fcmovu
pop
sahf
and
sbb
scas
in
not
dec
ja
sub
es
jne
pop
push
movs
inc
mov
xchg
or
pop
add
mov
mov
addr16
mov
or
test
xor
ret
mov
ins
mov
jg
in
adc
dec
adc
mov
lods
sti
and
add
jae
add
adc
retf
xor
ficom
jne
lods
mov
fsubr
jp
stos
icebp
or
popa
xchg
push
mov
pop
push
mov
retf
xor
mov
mov
test
sbb
js
jae
sbb
jns
push
push
sbb
in
push
pop
xor
pop
mov
push
inc
arpl
les
(bad)
out
mov
xor
jo
mov
push
outs
fisttp
arpl
and
sub
fldcw
loope
or
(bad)
call
or
pop
jae
fldl2e
(bad)
jne
std
xchg
test
and
mov
and
ja
(bad)
xchg
test
fld
pop
cli
cdq
nop
and
cdq
xchg
lds
add
cmp
test
inc
xchg
lds
inc
jg
mov
mov
fprem1
call
(bad)
jns
sub
mov
daa
sti
lods
xchg
mov
mov
ficom
dec
mov
jb
push
xor
pop
push
pop
mov
cmp
fimul
bound
div
jns
or
pop
stc
mov
mov
push
mov
loop
repz
mov
mov
cli
out
cmp
rcl
inc
adc
(bad)
mov
mov
sbb
in
dec
mov
and
sbb
pop
mov
sbb
jge
add
xchg
loope
cmps
(bad)
xchg
jae
jecxz
pop
pop
inc
xor
bound
xchg
xchg
jp
pop
xor
pop
rol
xor
stos
mov
push
cmp
jmp
mov
(bad)
loop
and
test
lods
mov
enter
sbb
push
fs
lea
callw
rcr
repnz
or
dec
sbb
dec
cdq
out
(bad)
das
scas
iret
sbb
push
sbb
xchg
mov
sbb
fcomp
lea
js
mov
mov
inc
xchg
mov
daa
cdq
test
cmp
adc
movs
(bad)
push
(bad)
dec
xchg
rcr
dec
add
or
mov
jbe
cmp
shl
mov
sbb
fldenv
repz
or
xchg
dec
outs
sti
xor
mov
mov
push
jae
mov
test
fbld
movs
(bad)
cmps
retf
xchg
mov
mov
pop
mov
shl
and
pop
imul
mov
and
hlt
add
mov
les
addr16
sub
das
dec
loopne
ins
sub
lock
leave
int
loopne
jo
cmc
inc
fs
mov
cwde
or
mov
push
clc
mov
bswap
mov
mov
das
lock
xchg
daa
jle
jo
sar
pop
lock
and
fbstp
push
mov
xchg
jmp
data16
imul
call
aas
shr
cld
inc
jmp
scas
leave
xchg
daa
std
jmp
into
popf
mov
mov
iret
test
xor
mov
jno
and
push
push
xor
add
clc
sub
mov
in
cdq
repz
mov
test
mov
fld
pop
mov
inc
mov
or
xchg
js
shl
push
and
mov
sub
sub
in
mov
imul
jns
jp
rcl
repz
push
outs
jae
sbb
inc
dec
dec
movs
push
pop
and
ret
in
(bad)
push
(bad)
dec
out
cli
ja
stc
xchg
iret
sub
ja
out
xor
cdq
sbb
sbb
std
add
push
inc
cmp
ss
pop
rcr
hlt
std
(bad)
jge
jecxz
outs
sub
ja
lahf
(bad)
xor
in
scas
fiadd
hlt
and
fmul
mov
and
je
jo
jmp
inc
loopne
cmc
add
xlat
call
xchg
repnz
pop
lds
cdq
lods
and
jnp
fistp
pop
or
sbb
fs
cmc
and
addr16
push
int3
jl
pop
jge
lods
arpl
fidivr
call
sub
(bad)
or
or
fimul
aam
rcr
mov
icebp
add
idiv
call
lahf
cmp
push
dec
int
inc
je
dec
xchg
sbb
sub
mov
ret
pop
dec
in
and
or
mov
or
sti
test
jmp
mov
(bad)
dec
jae
shl
xchg
out
dec
inc
push
xor
cmc
mov
sbb
jo
and
mov
cmp
mov
(bad)
aaa
lods
inc
push
sahf
add
mov
mov
mov
push
imul
sub
push
or
scas
jge
pop
inc
sub
lods
xchg
xchg
mov
ret
mov
es
xchg
cmp
adc
fistp
outs
xchg
dec
les
dec
mov
or
scas
xor
and
mov
lea
test
outs
stc
sub
xor
mov
mov
mov
sbb
mov
out
dec
hlt
xor
pop
sub
or
adc
or
push
mov
cmp
pop
push
ret
pop
xchg
cmp
iret
mov
dec
push
mov
imul
and
mov
jae
mov
mov
mov
test
mov
xchg
div
cld
pop
retf
fmul
cmp
inc
jmp
icebp
fdiv
jnp
cld
stc
sti
inc
push
lahf
into
pop
test
cs
(bad)
jle
lods
sbb
shl
push
add
pop
call
pop
stos
jne
(bad)
pop
or
sahf
jp
push
sub
jbe
out
adc
stc
add
les
dec
(bad)
xor
add
cdq
test
or
and
test
fs
fsubr
cs
dec
xchg
dec
jmp
cmp
mov
add
fild
or
pop
cmps
(bad)
xchg
rcl
mov
nop
popa
cs
xchg
inc
pop
and
loop
inc
int3
fwait
es
fld
mov
test
add
fimul
or
sub
fmul
fstp
iret
fisub
mov
push
loop
movs
sahf
lea
push
xrelease
jbe
into
fistp
jecxz
adc
fldenv
sbb
push
std
pushf
jp
shl
rol
retf
cmp
xchg
lahf
dec
aas
loopne
sahf
xor
in
cmc
adc
mov
or
mov
aad
push
scas
push
and
sub
xchg
test
imul
jns
cmp
cli
ja
int3
pop
mov
fst
jne
int
gs
imul
xor
adc
xor
push
cdq
gs
les
imul
sbb
rcr
test
xor
mov
mov
test
inc
test
je
fldcw
inc
mov
dec
mov
mov
sahf
pop
movs
adc
mov
xchg
popf
nop
push
mov
cwde
icebp
mov
and
icebp
dec
pushf
jbe
adc
scas
lahf
cmp
out
adc
scas
push
mov
ja
pop
dec
jno
mov
ja
aad
and
fdivp
push
cmc
pushf
push
out
sti
in
mov
cmp
pop
retf
ret
jp
arpl
mov
xcrypt-ecb
cmps
dec
das
mov
call
call
push
cmp
scas
mov
ret
pop
je
jbe
retf
in
aaa
test
and
sbb
pusha
dec
and
sar
push
(bad)
(bad)
aad
dec
jb
test
sub
push
xchg
push
in
inc
(bad)
and
sar
dec
aam
push
jl
pop
arpl
push
push
cmp
mov
ss
pop
xchg
jae
push
push
push
mov
xor
repnz
aam
pop
jmp
sub
sub
or
jp
xor
pop
(bad)
mov
out
pop
xchg
jg
mov
sbb
sbb
fmul
mov
mov
pusha
enter
xor
pop
shl
add
test
push
stc
adc
retf
dec
hlt
push
and
out
imul
pop
add
jne
jmp
inc
mov
hlt
inc
cmp
rol
add
psllq
adc
int3
mov
xor
pushf
sbb
clc
mov
loopne
push
fld
push
sti
fbstp
or
fwait
ror
sbb
dec
add
inc
xor
mov
sar
pop
cli
mov
loope
das
inc
jb
or
or
retf
jae
xchg
jp
sti
fucomip
jns
mov
mov
adc
fidiv
add
inc
hlt
lea
in
add
cmp
jecxz
jne
sbb
arpl
rep
aas
mov
jns
dec
loop
sbb
xchg
mov
jecxz
cmp
push
pusha
jg
out
mov
push
push
xor
enter
sub
jmp
scas
push
lods
mov
add
fidivr
sub
lea
imul
(bad)
jle
hlt
imul
fwait
popa
pop
push
in
popf
ret
in
lods
inc
or
adc
sbb
jno
xchg
inc
pop
mul
ret
cmp
jo
and
stc
cmp
outs
retf
inc
sub
cdq
cmc
dec
jmp
loopne
cmc
jne
adc
adc
sub
cmps
in
push
add
and
popf
fs
push
jmp
or
popa
sar
or
jle
mov
shr
test
inc
add
dec
mov
xchg
out
adc
push
test
inc
cwde
in
or
sub
scas
imul
mov
mov
push
ins
adc
loope
mov
sub
push
sub
push
les
sbb
jl
neg
stc
retf
or
adc
ja
adc
fild
inc
add
shl
adc
ret
mov
and
sub
or
ds
push
in
add
jmp
push
jmp
es
xchg
pop
add
jecxz
sbb
push
movs
shl
or
fwait
lock
jne
cmc
push
push
jo
pushf
dec
(bad)
or
pop
aad
adc
dec
loop
fstp
and
pop
outs
and
mov
jp
fs
(bad)
or
shr
int3
mov
push
jge
test
cmp
pop
mov
ins
add
enter
and
xor
daa
out
xchg
(bad)
scas
xor
push
pop
enter
mov
fsubp
push
in
mov
imul
jb
mov
xchg
dec
jecxz
mov
call
jmp
aam
retf
out
add
dec
pop
sub
adc
scas
out
mov
cmp
aas
or
out
mov
adc
sub
aad
push
(bad)
mov
int
out
jp
movs
sar
ja
popa
push
clc
out
jg
stc
out
jg
stc
mov
add
test
add
add
dec
inc
scas
inc
pusha
or
add
add
add
(bad)
(bad)
inc
add
add
add
add
add
add
jns
je
ins
cs
jb
ja
outs
addr16
push
gs
imul
xor
xor
inc
jne
je
jb
cmp
jb
ins
sub
push
jne
ins
imul
imul
bound
xor
data16
xor
fs
add
adc
gs
cs
jb
ja
outs
addr16
imul
add
popa
je
pop
add
add
add
add
add
lsl
add
mov
mov
inc
or
add
or
add
add
add
add
or
add
add
pusha
outs
rol
add
add
inc
dec
inc
add
mov
or
popa
add
jo
pop
jae
add
ret
add
push
ret
add
outs
test
add
adc
inc
inc
push
pop
inc
in
rol
loopne
cwde
outs
bound
fnstsw
fnstsw
cmps
cmp
(bad)
fsub
jo
out
out
jbe
jo
loop
hlt
pushf
scas
test
fimul
repnz
jns
cmp
or
jo
cmp
sbb
push
or
repz
repz
jp
loopne
or
jmp
jge
mov
xor
in
int3
ror
mov
dec
popa
cld
cmps
dec
xchg
mov
xchg
outs
lea
add
(bad)
into
inc
clc
imul
xor
mov
adc
inc
xor
cmp
fdiv
jge
and
scas
(bad)
popf
push
fisubr
std
dec
out
lea
mov
mov
stos
inc
fiadd
popf
js
jbe
xchg
xor
add
and
jbe
pop
(bad)
cmp
push
push
(bad)
cmp
push
loop
dec
fnstsw
das
fnstcw
sub
cmps
fwait
mov
inc
jbe
xor
sti
sahf
stc
adc
inc
dec
lea
jmp
in
cld
add
mov
fcmovb
ja
in
pop
outs
cmp
xlat
cmps
cs
mov
mov
add
daa
mov
mov
mov
push
or
cs
mov
sbb
fs
iret
in
jbe
pop
or
lea
xchg
sbb
or
xchg
pop
jmp
mov
push
xchg
dec
outs
cli
push
sahf
fcom
xor
push
mov
mov
or
inc
add
jb
into
jae
add
movs
outs
mov
lods
xchg
aaa
pop
xchg
xchg
mov
repnz
imul
test
orps
push
cmps
retf
(bad)
popa
fs
scas
and
push
xchg
arpl
ret
mov
pop
sbb
iret
dec
sub
xor
enter
sbb
loope
shr
movs
jg
mov
fisttp
lods
xchg
loopne
and
daa
jge
push
ret
sub
mov
test
sbb
add
mov
cld
test
fs
cwde
and
sti
call
popf
dec
rol
(bad)
inc
jge
pop
jbe
test
je
stc
std
clc
mov
cmp
(bad)
mov
outs
repnz
and
dec
pop
adc
sub
or
enter
addr16
pop
jbe
ret
retf
daa
ret
cmp
mov
inc
xchg
pop
cli
test
into
pushf
into
xchg
(bad)
jmp
cmp
xor
adc
test
arpl
pop
mov
adc
pusha
push
in
push
xor
sti
mov
mov
or
sbb
aam
sub
adc
inc
std
not
cmp
test
iret
in
popa
cmp
sbb
scas
mov
or
mov
popf
fs
jge
out
js
sub
and
jo
add
pop
fimul
dec
xor
fucomp
xor
repz
inc
(bad)
fdiv
jmp
jb
movs
shr
adc
push
dec
popa
scas
push
jno
dec
dec
mov
pusha
pop
outs
in
fld
cli
sub
adc
imul
mov
scas
pop
pop
data16
int
adc
adc
adc
fwait
(bad)
sub
xor
(bad)
dec
xchg
push
and
loope
inc
adc
jns
mov
jle
lds
mov
in
jg
ss
ror
inc
sti
gs
pop
call
aad
cs
icebp
push
int
out
repnz
jno
leave
mov
pop
mul
gs
xchg
push
fcom
push
jns
lods
popa
mov
xor
push
add
lds
hlt
fidivr
or
movs
inc
mov
int
test
pop
imul
imul
sar
(bad)
sub
mov
fucomi
enter
ja
mov
push
ja
mov
push
shl
mov
sbb
cmp
mov
cmp
mov
cmps
stc
pop
not
jge
loop
cmp
cmp
pop
adc
(bad)
stc
ds
mov
out
sub
mov
cmps
mov
inc
fldenv
stos
mov
stos
and
mov
add
cli
out
loop
in
std
add
add
fcomp
jbe
fcmovb
cmp
jb
fsub
xor
push
and
inc
aad
adc
cmc
cld
push
ss
ror
xor
inc
add
or
jno
push
enter
mov
(bad)
cld
rcr
lds
mov
mov
xchg
mov
jb
sub
in
jo
lods
or
mov
adc
das
int
sbb
mov
fs
sub
(bad)
fisttp
mov
ja
cmp
cmp
js
mov
jge
es
mov
lock
or
cmp
bound
in
add
shl
lea
cmp
ss
xor
dec
loop
nop
push
pop
pop
shl
or
and
mov
fwait
sbb
js
loopne
xor
dec
mov
and
xor
xchg
xchg
mov
or
dec
fld
xor
jp
jmp
in
mov
stos
sar
ins
sub
sub
or
std
dec
out
lock
or
adc
mov
inc
push
sub
mov
in
jno
cmp
imul
pop
test
stos
jne
je
cmp
and
or
pop
xlat
(bad)
(bad)
fcom
push
movs
ret
(bad)
nop
mov
xor
(bad)
sti
dec
pop
mov
gs
loop
mov
sar
movs
push
dec
lods
shl
xchg
pushf
or
mov
add
rcr
data16
cmc
push
xchg
call
xchg
and
(bad)
aam
pop
or
inc
(bad)
ret
rol
sahf
or
adc
mov
inc
cmp
or
gs
pushf
sub
popf
dec
pop
sahf
jmp
inc
icebp
mov
adc
(bad)
into
fimul
dec
ror
or
into
lods
cmp
test
ins
stos
or
loop
mov
push
lahf
mov
jl
xchg
adc
xor
retf
movs
xor
sub
sub
(bad)
nop
mov
jb
ret
push
and
sbb
test
out
mov
xchg
cli
popf
retf
push
dec
pop
dec
aas
inc
dec
mov
add
push
mov
push
ret
test
add
call
aaa
test
nop
aad
neg
jbe
sbb
or
mov
fwait
cmp
aad
mov
xchg
jbe
rep
out
dec
fst
mov
js
imul
mov
mov
mov
sub
add
out
sbb
and
daa
rcl
mov
inc
mov
cmp
push
inc
div
adc
lea
jg
sbb
and
out
adc
mov
mov
sbb
mov
jns
outs
xchg
xchg
jp
loopne
adc
adc
mov
es
xchg
push
es
sub
lea
nop
inc
dec
clc
sbb
cli
repz
dec
and
sub
mov
scas
mov
nop
pop
sub
scas
mov
adc
inc
in
mov
fld
repz
je
and
add
into
out
push
cmp
or
mov
adc
xor
out
mov
jnp
enter
pop
pushf
std
fnstcw
mov
and
out
pop
cdq
jns
mov
mov
lods
in
sub
popf
xor
xchg
jle
and
rcr
cmp
jnp
jbe
in
movs
jo
(bad)
(bad)
dec
icebp
mov
in
sar
loop
icebp
dec
sbb
pop
mov
inc
or
lds
out
push
enter
adc
aaa
imul
jno
sub
sub
xchg
jmp
xlat
xor
and
fdivp
loope
pop
pop
loopne
jo
jne
mov
push
push
loop
(bad)
xchg
add
cmp
(bad)
adc
fcom
cld
daa
cmps
or
loope
or
imul
out
data16
outs
jb
cmp
and
ss
test
cmp
outs
mov
mov
mov
or
sub
fnstsw
mov
xlat
add
pop
xor
xchg
adc
cmps
push
push
pop
call
outs
add
daa
mov
jmp
out
fwait
mov
outs
pop
xchg
ds
mov
lds
jmp
mov
retf
lods
shl
jge
adc
out
sub
je
dec
lods
and
loop
(bad)
repz
hlt
push
in
mov
(bad)
pop
mov
jo
push
sub
iret
mov
and
sub
sbb
mov
xor
adc
jle
aam
add
pop
push
pop
in
push
imul
xor
adc
mov
adc
call
pushf
lods
aas
test
jo
iret
repz
jg
pop
jp
enter
adc
fdivr
dec
or
mov
fs
pushf
ins
int
rol
nop
sti
jl
(bad)
mov
jnp
inc
lea
and
and
sub
sbb
sbb
sahf
(bad)
scas
movs
and
xchg
mov
jp
cmp
sahf
cld
(bad)
jl
test
mov
gs
call
call
ret
and
push
mov
int3
lea
hlt
sub
int
mov
push
mov
add
sbb
xchg
xchg
mov
push
movs
jne
ret
jecxz
sahf
and
pushf
(bad)
pusha
pop
repnz
and
jmp
retf
daa
inc
xor
inc
add
jb
mov
test
test
pop
mov
in
stos
(bad)
fsubr
retf
arpl
xchg
push
add
sub
ret
or
lods
jbe
loop
jge
sub
push
pop
popa
mov
les
cmp
dec
adc
outs
xchg
je
pop
sti
push
or
rcr
push
xchg
and
cmp
test
jne
and
cmp
mov
stos
movs
xlat
dec
lahf
xchg
not
jmp
add
bound
sahf
jb
pop
mov
mov
mov
mov
into
xchg
out
push
push
push
aas
test
imul
stos
rcr
cld
scas
push
loop
mov
push
jl
cmp
adc
retf
xchg
popf
std
inc
rcr
cmp
(bad)
pop
jp
idiv
mov
push
jmp
pop
xor
adc
sub
fdiv
dec
inc
mov
dec
sub
scas
mov
popf
stos
mov
lds
cmps
xlat
add
add
dec
dec
das
pop
xor
(bad)
lock
sbb
fstp
pop
xor
cld
push
call
lods
int
add
(bad)
int
mov
dec
dec
aad
pushf
xor
dec
scas
out
jbe
mov
es
fisttp
xchg
dec
jb
out
pop
or
es
fstp
inc
sar
int
in
mov
out
in
inc
cmp
inc
sbb
icebp
mov
jae
mov
jge
daa
push
add
das
cwde
or
iret
or
out
mov
shl
cmp
inc
adc
and
xchg
sub
outs
test
dec
scas
clc
adc
xor
dec
xchg
jle
jl
lock
outs
pop
inc
cmps
out
shl
fadd
lock
xlat
out
sbb
data16
clc
retf
into
mov
inc
test
push
dec
int3
xor
sahf
jp
push
shl
jmp
fcom
es
cmps
cmc
inc
movs
shl
(bad)
jnp
loopne
push
clc
jle
ins
es
nop
(bad)
std
mov
fcomp
out
imul
fstp
ret
jl
cli
sbb
adc
loope
pop
scas
mov
je
mov
dec
mov
xor
test
sahf
fcomp
push
scas
neg
aas
arpl
jp
gs
sbb
jp
pop
pop
aas
sub
mov
dec
out
mov
mov
cmp
arpl
ja
xchg
mulps
push
jmp
mov
lea
ds
stos
ror
add
mov
push
pop
pop
call
pop
and
mov
fimul
xor
sub
sub
push
into
popa
adc
fwait
jl
jl
jno
sti
xchg
xchg
les
sub
fnstcw
arpl
repz
ss
sbb
pop
pushf
mov
add
xor
stos
jnp
(bad)
into
sti
add
xchg
ins
fisttp
into
xor
(bad)
gs
into
mov
mov
repz
aam
mov
xor
cmp
lock
xchg
dec
xchg
sub
stc
mov
idiv
fcmovnbe
or
mov
or
pop
int3
xor
sub
je
mov
int3
jb
jmp
cdq
lods
in
call
pop
inc
xchg
shl
or
outs
mov
pop
xor
sti
adc
jbe
push
in
sbb
and
pop
pop
or
xor
into
mov
pop
stc
fidiv
pop
sub
lds
cld
mov
nop
inc
lea
pop
lods
retf
jae
adc
push
cmp
test
sub
jbe
hlt
mov
jo
int
in
in
add
fstp
sti
enter
cmp
jbe
pushf
mov
retf
pop
test
mov
arpl
rol
pop
dec
shl
in
pop
ins
lea
xlat
pushf
shr
arpl
cmp
(bad)
nop
mov
pop
fwait
xchg
mov
fsubrp
mov
xchg
cmp
pusha
fmul
or
sub
call
rcr
lock
fmul
jbe
mov
push
jl
mov
sbb
call
cmc
fnstenv
mov
jnp
hlt
(bad)
in
cdq
test
mov
into
xchg
mov
xor
(bad)
mov
push
pop
cmp
pop
xchg
shl
inc
lods
push
icebp
sar
or
xchg
jge
sub
rol
xchg
sbb
jb
fistp
test
sub
cmps
or
mov
scas
into
push
dec
fidiv
lahf
xor
jns
mov
fisub
jno
(bad)
push
xor
or
mov
fmul
aaa
icebp
xchg
cvtpi2ps
mov
cmps
sub
xor
push
mov
pop
pop
fist
loop
sbb
shr
and
gs
ret
pand
mov
push
call
push
xchg
(bad)
sahf
cmp
or
fnstsw
pop
xchg
lock
int
push
data16
jbe
inc
daa
dec
js
add
push
shr
xchg
outs
pop
xchg
mov
fs
fist
and
cmp
pop
les
cmp
dec
inc
sub
and
jge
mov
pop
test
sub
dec
and
push
mov
mov
stos
jae
pushf
cmc
iret
stos
sub
enter
add
cli
loopne
pop
mov
fs
scas
movs
not
inc
rcr
jb
fisttp
jl
push
(bad)
and
icebp
sub
rcl
mov
adc
mov
cwde
std
mov
es
cmp
test
fstp
aad
or
test
cmp
stos
or
(bad)
into
and
xor
inc
and
push
push
fmul
(bad)
or
dec
stos
pop
cdq
and
xchg
out
lock
jge
cmp
xchg
inc
adc
dec
jo
fsub
inc
mov
push
mov
sbb
iret
mov
mov
xor
mov
mov
xchg
cmp
inc
inc
fprem
mov
add
stos
jl
push
ror
sbb
dec
or
pop
and
inc
sti
inc
push
test
(bad)
rcl
js
sbb
sbb
imul
mov
das
pop
dec
ins
loopne
mov
mov
ret
add
cmps
xor
in
cmc
jge
hlt
(bad)
icebp
sub
sahf
cmc
xor
jbe
clc
int3
mov
mov
jnp
sbb
outs
imul
adc
inc
mov
dec
mov
or
iret
aas
(bad)
cld
repz
aas
(bad)
cld
repz
add
pop
ror
mov
add
add
dec
inc
dec
inc
scas
inc
pusha
or
add
add
add
(bad)
(bad)
inc
add
add
add
add
add
add
jns
je
ins
cs
jb
ja
outs
addr16
push
gs
imul
xor
xor
inc
jne
je
jb
cmp
jb
ins
sub
push
jne
ins
imul
imul
bound
xor
data16
xor
fs
add
adc
gs
cs
jb
ja
outs
addr16
imul
add
popa
je
pop
add
add
add
add
add
lsl
add
mov
mov
inc
or
add
or
add
add
add
add
or
add
add
pusha
outs
rol
add
add
inc
dec
inc
add
mov
or
popa
add
jo
pop
jae
add
ret
add
push
ret
add
outs
test
add
adc
inc
inc
push
pop
inc
in
aam
and
pop
add
das
dec
dec
ja
lahf
cwde
out
sbb
mov
cmps
cdq
mov
mov
xchg
dec
test
fnstsw
xor
dec
sti
js
jns
pop
add
inc
movs
adc
mov
dec
in
xor
mov
pop
add
push
ins
xchg
and
or
rol
pop
sbb
lahf
rcr
neg
mov
xor
or
jge
scas
or
imul
iret
lds
jnp
jns
rcr
sub
mov
and
call
lahf
fs
shl
rol
jmp
rcl
cdq
xlat
push
add
les
sub
dec
and
mov
ins
and
xor
ss
xor
xor
fidivr
xchg
std
mov
aad
lds
jbe
ret
push
push
call
test
or
cmp
xchg
dec
pop
add
popa
je
cmp
inc
imul
out
or
nop
jno
lds
xchg
jnp
mov
ja
(bad)
(bad)
mov
addr16
ja
jle
and
ret
movs
int
icebp
retf
sub
ffree
mov
cli
dec
push
popa
push
xor
and
test
fmul
outs
cmp
daa
sbb
test
call
push
ins
movaps
cmps
fcomip
mov
push
sbb
repz
push
inc
mov
movs
jnp
xor
jns
iret
xor
out
call
movs
or
in
pop
mov
loopne
(bad)
push
enter
(bad)
(bad)
push
movs
adc
jle
and
test
outs
add
sbb
pop
test
cdq
cmp
add
repz
mov
popa
jp
scas
inc
aad
std
dec
lea
fiadd
xchg
dec
(bad)
scas
mov
fwait
clc
call
sbb
outs
fnstsw
and
sbb
loop
fwait
jno
xchg
pop
and
not
jnp
lea
pop
lock
push
adc
push
inc
aas
mov
dec
xor
xor
mov
ja
or
loop
test
mov
inc
and
call
xchg
dec
sub
jmp
das
jmp
das
nop
rcl
cdq
jo
dec
sti
mov
sub
(bad)
out
sbb
push
std
xor
jb
jmp
sbb
jae
fld
es
outs
ja
jp
mov
fs
jb
call
push
test
(bad)
mov
xchg
sub
sar
mov
js
push
cs
dec
jle
mov
or
or
cdq
in
arpl
sub
sub
push
(bad)
(bad)
fdiv
dec
pop
mov
daa
pop
data16
rcl
scas
rol
pop
and
lahf
out
or
fimul
adc
xchg
fcomp
lea
mov
jg
adc
dec
mov
das
xchg
push
ret
aaa
ja
xchg
xlat
ds
dec
fsub
js
and
adc
sub
mov
mov
imul
mov
fsubr
in
pop
sbb
sbb
imul
loopne
ror
loop
fdivr
or
sub
sub
aad
mov
and
sti
pop
rcr
pusha
mov
or
daa
int
mov
stos
(bad)
push
xchg
scas
movs
repz
arpl
cmc
inc
mov
sub
aaa
ja
mov
test
dec
rcl
sub
push
dec
int
enter
pop
dec
js
outs
inc
xor
mov
iret
and
out
imul
push
xor
add
(bad)
xor
in
pushf
sbb
xchg
lahf
scas
call
sub
sbb
daa
aaa
repnz
or
bound
lods
sti
gs
push
cs
push
jae
out
cld
xchg
xchg
xor
adc
xchg
sti
ins
push
lods
int
add
repz
mov
enter
adc
rol
(bad)
ficom
loopne
hlt
jns
into
push
cmp
mov
push
and
ret
shr
xor
or
adc
ins
jp
aam
or
jae
xor
push
shr
(bad)
mov
cld
jmp
pop
ins
jns
push
(bad)
and
mov
push
fsub
xor
xchg
lods
mov
add
or
pop
sub
mov
mov
jno
and
pop
jmp
inc
inc
push
xor
dec
ja
scas
scas
and
push
inc
fimul
or
add
aaa
inc
outs
mov
das
push
lock
call
xor
jae
pop
inc
adc
or
push
icebp
jmp
std
mov
js
movs
cmp
into
pop
outs
pop
cmps
ret
cmps
sub
ss
ficomp
movs
aas
ret
arpl
xor
retf
pop
push
ins
repz
jmp
push
add
xor
scas
sbb
push
dec
xchg
cmp
and
jle
or
pusha
pop
scas
jle
jno
scas
jnp
jb
imul
int3
push
scas
jns
or
sbb
mov
xor
or
mov
sbb
int3
pop
push
jnp
loop
inc
adc
ror
out
jne
adc
outs
push
imul
fld
call
mul
enter
mov
(bad)
loopne
icebp
sbb
repnz
mov
jg
adc
aaa
mov
retf
xor
push
gs
or
mov
lds
or
push
inc
in
pop
jl
fld
call
mov
dec
xlat
scas
dec
fwait
cld
or
dec
nop
pop
pop
das
test
sub
xchg
ins
aam
scas
enter
gs
sbb
jle
dec
rol
shl
xchg
das
sub
fdiv
sub
mov
mov
cmp
xchg
lock
jns
add
popa
sbb
cdq
push
in
xlat
jno
pop
sbb
jae
mov
(bad)
lock
loope
clc
into
ret
xchg
mov
(bad)
xlat
into
cmp
add
cmp
(bad)
fistp
fisub
jbe
mov
repnz
sbb
loopne
shr
push
pop
cli
jp
daa
xor
pop
sbb
sbb
pop
jge
dec
(bad)
loope
xchg
pop
xchg
xchg
pop
and
out
mov
not
mov
push
sbb
or
mov
in
xchg
test
mov
or
or
in
sbb
add
cli
dec
cmp
fdiv
sbb
fcmovnb
push
adc
mov
push
mov
inc
fmul
rcr
dec
sub
xor
mov
stos
inc
pop
inc
add
jp
imul
fs
inc
jmp
jmp
and
xchg
ret
push
adc
(bad)
jmp
sbb
imul
cmp
xchg
ficom
push
mov
test
mov
xchg
sti
sahf
inc
sbb
leave
jbe
xchg
sbb
mov
or
inc
jge
repnz
gs
inc
(bad)
jae
push
iret
ins
aas
rcl
fisttp
cwde
xor
add
aad
loope
push
enter
sti
mov
xor
mov
cmp
in
mov
out
push
add
push
pop
(bad)
jge
in
jmp
sub
mov
cmp
out
add
jecxz
add
sub
ins
js
and
das
mov
push
mul
shr
dec
pop
inc
add
dec
ret
jns
pop
pop
gs
mov
fs
pop
cmps
icebp
mov
dec
pop
ds
int3
mov
outs
aam
int
jnp
lds
mov
xlat
cdq
add
rol
mov
(bad)
fistp
rcr
sub
and
lea
inc
dec
inc
popa
mov
mov
fcom
mov
inc
inc
push
test
adc
mov
in
scas
inc
sahf
pop
mov
stos
xchg
sub
push
mov
retf
push
mov
xlat
ins
je
or
fild
xor
sub
fisttp
outs
adc
and
stos
mov
adc
or
stos
push
sbb
xchg
dec
in
fld
ret
and
gs
mov
mov
jbe
rol
test
mov
ins
std
xor
push
shr
shl
pushf
lods
push
out
pop
jae
scas
adc
cmp
sub
jb
xchg
or
push
push
mov
cmps
out
jmp
call
mov
push
loope
movs
int3
and
stos
mov
lods
dec
ds
out
fs
jl
cdq
and
call
js
test
push
xchg
jp
aam
and
ret
test
jmp
mov
loopne
arpl
popf
mov
mov
std
inc
inc
arpl
pushf
scas
aad
add
pop
ss
jecxz
daa
cmp
push
dec
jmp
call
dec
adc
jge
push
pop
jp
popa
sahf
adc
test
mov
sub
inc
fsubr
imul
scas
jne
mov
js
mov
add
jl
mov
(bad)
sti
xchg
test
ss
int3
mov
int
cmp
mov
lds
jl
push
lds
jl
(bad)
jnp
loop
cmp
gs
std
cli
inc
add
addr16
mov
inc
xchg
popf
outs
cmc
or
nop
xor
ret
test
stos
push
or
test
inc
lahf
inc
or
mov
or
sbb
out
inc
push
dec
les
jg
arpl
or
icebp
hlt
fmul
js
(bad)
lods
inc
fwait
les
cmp
in
jle
push
fstp
scas
cmp
test
cmp
sub
into
in
pop
adc
mov
add
adc
imul
sahf
xchg
sub
push
lea
clc
sar
dec
inc
sub
inc
sahf
cmp
out
or
call
repnz
and
outs
inc
test
iret
cmp
mov
dec
mov
jle
mov
ret
loop
sub
pop
inc
cmp
cmps
mov
add
jmp
mov
jp
xor
add
loopne
fs
inc
cmps
mov
adc
frstor
cmp
mov
push
sbb
inc
inc
iret
nop
out
int3
out
popa
in
icebp
xor
pop
and
add
ds
sbb
ret
jmp
fwait
mov
ins
dec
cmp
mov
outs
cwde
adc
(bad)
add
pop
push
cs
jns
(bad)
retf
xor
xor
das
lock
icebp
add
pop
push
sub
xchg
ror
mov
sbb
das
xor
(bad)
sub
xchg
cmc
fwait
test
ret
inc
lods
fistp
outs
and
in
pusha
and
arpl
test
sub
push
addr16
pushf
dec
icebp
or
in
xchg
ja
push
jne
rol
push
div
pop
dec
nop
ss
imul
push
icebp
test
push
pop
xor
sbb
jmp
mov
add
gs
test
outs
add
or
movs
pop
fisubr
dec
add
xchg
inc
pop
stc
(bad)
or
push
stos
pop
jl
call
pop
cmc
jns
mov
pop
mov
adc
daa
ins
mov
mov
sub
sub
pop
dec
mov
call
mov
add
stos
imul
pushf
shr
mov
lods
icebp
adc
pop
dec
cwde
retf
jnp
test
sub
mov
lds
pop
adc
std
jo
repnz
add
mov
push
dec
sbb
xchg
aad
pop
aaa
leave
imul
mov
cmc
stos
js
imul
add
(bad)
cmps
call
jmp
fdivr
cmp
or
hlt
and
add
mov
and
fld
shr
sbb
pop
xchg
push
mov
xor
jecxz
adc
jge
mov
xor
ja
fdivr
xor
adc
mov
sbb
sti
aam
rcr
adc
enter
jecxz
dec
xor
or
sbb
jns
outs
mov
xchg
inc
(bad)
icebp
sbb
ret
(bad)
cmp
mov
and
(bad)
retf
cmp
xchg
dec
ret
jge
dec
or
pop
or
in
(bad)
ins
or
cs
bound
imul
cmp
std
xchg
(bad)
enter
popa
into
test
push
repnz
mov
mov
jnp
and
cs
(bad)
fnstsw
jae
shr
pop
inc
stc
cmp
loop
xlat
nop
push
pop
cmp
cmp
(bad)
push
aam
aam
mov
aas
arpl
arpl
popa
dec
mov
mov
push
xchg
inc
or
and
popf
nop
pop
shl
add
sbb
imul
jmp
pop
jle
cmp
fmul
jno
fsub
mov
push
pop
clc
fsubr
ss
pushf
inc
pslld
mov
(bad)
cdq
addr16
cmps
ja
ror
adc
adc
sbb
pop
xor
xor
inc
stc
(bad)
mov
xchg
scas
mov
(bad)
fwait
std
mov
cmp
or
scas
lahf
popf
mov
les
pop
shl
sub
sti
imul
pop
cmp
xor
pop
adc
mov
push
aas
jecxz
xchg
sbb
or
pop
xchg
test
and
test
loop
out
mov
adc
cmc
add
in
or
jp
movaps
xchg
mov
xchg
loope
jbe
scas
nop
mov
sbb
push
push
jge
pop
pop
mov
xchg
lea
ja
test
push
mov
test
mov
fld
in
call
fld
fnsave
ds
ds
pop
lock
daa
neg
leave
mov
imul
mov
cmps
cmps
or
jb
cmps
dec
pop
loope
mov
dec
movs
xor
data16
add
and
call
hlt
sbb
cli
ss
ins
iret
push
cmp
ja
repnz
cli
xor
jmp
and
dec
inc
ins
mov
iret
or
dec
xchg
cli
push
mov
jno
xor
push
icebp
sbb
or
mov
bound
outs
addr16
or
push
loop
sti
sub
fimul
fldlg2
icebp
xor
jnp
ret
mov
pushf
js
mov
je
mov
jnp
mov
cli
mov
rol
js
mov
mov
mov
enter
lods
hlt
movs
lock
das
(bad)
cld
xchg
mov
pusha
mov
out
mov
inc
mov
out
mov
push
xchg
bound
add
add
(bad)
clc
sti
rol
pop
jmp
xor
fwait
scas
ror
jb
fwait
ror
jmp
sbb
dec
sti
es
mov
call
jns
or
or
jnp
lock
inc
aas
jecxz
push
xchg
adc
jecxz
js
pop
mov
or
call
imul
psubsb
stc
arpl
lock
rcr
or
das
int3
push
ret
movs
setnp
mov
pop
jl
pop
cmc
aaa
icebp
mov
mov
jg
imul
mov
(bad)
or
lea
push
or
outs
(bad)
push
pusha
jmp
sub
out
jno
push
jne
sub
dec
pop
inc
sub
mov
add
test
mov
sub
inc
pop
sbb
lds
jne
pushf
push
jnp
in
fwait
mov
imul
inc
cmp
mov
call
movs
mov
stos
out
pop
nop
xchg
out
out
xchg
call
xor
outs
or
jne
xchg
imul
in
xor
imul
xchg
enter
out
fadd
sub
inc
jo
mov
test
adc
push
outs
pop
xor
jnp
pop
xor
push
mov
mov
out
out
dec
imul
jne
stos
test
mov
or
push
and
pop
pop
or
test
and
popf
in
dec
jnp
add
enter
mov
jnp
cmp
lahf
jg
stc
out
call
add
jg
cmp
gs
cli
xchg
add
add
dec
inc
dec
inc
scas
inc
pusha
or
add
add
add
(bad)
(bad)
inc
add
add
add
add
add
add
jns
je
ins
cs
jb
ja
outs
addr16
push
gs
imul
xor
xor
inc
jne
je
jb
cmp
jb
ins
sub
push
jne
ins
imul
imul
bound
xor
data16
xor
fs
add
adc
gs
cs
jb
ja
outs
addr16
imul
add
popa
je
pop
add
add
add
add
add
lsl
add
ret
adc
add
mov
inc
or
add
or
add
add
add
add
or
add
add
pusha
outs
rol
add
add
inc
dec
inc
add
mov
or
popa
add
jo
pop
jae
add
ret
add
push
ret
add
outs
test
add
adc
inc
inc
push
pop
inc
in
(bad)
cmc
and
ret
shl
xor
hlt
je
xor
in
div
sbb
ins
mov
ja
(bad)
hlt
sbb
je
jo
cmps
out
(bad)
pop
iret
pop
jg
sti
xchg
add
movs
jmp
out
mov
loopne
(bad)
data16
or
push
mov
imul
pop
jnp
out
dec
push
ret
lahf
arpl
cmp
sbb
loopne
mov
std
imul
xor
(bad)
push
xor
imul
xchg
add
add
push
sbb
jne
mov
push
es
sti
add
popa
pop
int
or
push
ja
mov
jg
add
mov
adc
in
cmp
pop
adc
sub
xor
pop
push
mov
test
dec
jmp
mov
pop
rol
int
or
pop
sbb
(bad)
dec
fnsetpm(287
xchg
push
mov
mov
stos
jmp
cdq
lahf
in
mov
std
add
mov
or
iret
xchg
mov
fcomp
xchg
(bad)
or
daa
dec
inc
push
out
fxch
and
xor
push
add
dec
leave
and
pusha
cdq
mov
adc
mov
pop
sbb
repz
sub
or
fdivr
dec
inc
cmp
ins
inc
out
pop
sar
stos
xor
inc
in
out
int
stos
dec
pop
shl
mov
pop
or
(bad)
jae
sahf
mov
(bad)
add
aaa
je
aaa
repnz
mov
push
daa
cmp
mov
shl
mov
mov
adc
es
clc
push
mul
xchg
fistp
push
cmps
sub
xor
pop
mov
cld
scas
inc
mov
popf
push
cmp
loope
inc
add
jnp
aaa
es
gs
pop
aas
pop
push
mov
ret
mov
mov
dec
stos
cli
xor
(bad)
mov
inc
cmovne
movs
jo
and
add
stos
in
addr16
sahf
sbb
mov
sbb
ss
mov
or
mov
cwde
(bad)
popa
into
sbb
pop
ret
sbb
sub
add
repnz
fwait
sbb
xchg
and
xor
cli
inc
cld
dec
jg
jge
jge
ins
pop
xchg
sub
sub
mov
mov
retf
push
mov
scas
out
dec
cmp
jecxz
xchg
mov
aaa
inc
stos
in
scas
xchg
mov
jecxz
jl
adc
sbb
add
popa
loop
xchg
pop
ret
mov
mov
pop
repz
and
inc
sub
cmc
xchg
dec
mov
repnz
mov
hlt
test
call
and
pop
mov
cmp
xchg
or
pop
push
aas
ins
push
push
loop
inc
xchg
cmp
mov
sub
ins
mov
inc
repnz
hlt
fst
lods
dec
fidiv
data16
shr
imul
adc
add
out
cmps
inc
mov
and
mov
mov
cmp
in
jnp
jmp
aas
and
pop
mov
adc
lock
mov
pop
imul
jecxz
jne
push
push
jo
iret
pop
pushf
(bad)
out
sbb
dec
and
push
adc
add
sbb
pop
scas
movs
sbb
sub
test
mov
shl
arpl
xor
mov
enter
xchg
movlps
aam
dec
inc
inc
dec
out
cmp
pop
call
jge
xchg
mov
shr
fsub
lahf
push
push
cmp
mov
sahf
leave
xchg
stc
repz
aaa
sbb
push
lods
pop
mov
fs
fstp
fsubr
sbb
push
xchg
rcl
inc
movs
sar
es
mov
ror
or
sbb
and
or
fist
(bad)
inc
jns
mov
aad
js
mov
aaa
int3
push
push
mov
mov
mov
sub
sub
(bad)
jae
sbb
ror
std
daa
dec
retf
pop
cld
arpl
cld
pop
pop
retf
ds
cdq
add
xchg
enter
pop
mov
mov
icebp
std
pop
cmp
inc
neg
lock
xlat
fs
(bad)
es
add
pop
push
xor
push
dec
and
stc
test
jne
ja
mov
and
mov
xor
or
mov
or
out
mov
loop
inc
jbe
enter
jno
fnsave
push
dec
bnd
mov
pushf
sub
and
inc
push
lahf
out
cmp
into
fdivr
mov
cwde
dec
ret
aam
int3
push
push
in
mov
pop
in
cs
xchg
push
repnz
stc
ss
jns
xlat
cmp
jo
jecxz
mov
iret
mov
xor
add
ror
sub
adc
mov
bound
pusha
shl
test
xor
adc
cmp
inc
int
adc
jo
pop
addr16
ins
jnp
outs
xor
jbe
add
shr
mov
in
push
inc
or
test
lods
pop
push
mov
ins
dec
dec
adc
ja
popa
lock
dec
add
sub
jns
test
inc
popa
jmp
pop
pop
sub
arpl
stos
(bad)
imul
mov
dec
ficom
xchg
out
or
dec
mov
push
(bad)
neg
adc
mov
aam
(bad)
jae
pop
mov
pop
dec
mov
nop
in
shl
test
dec
ss
or
xchg
pop
inc
cmp
add
or
leave
outs
mov
jns
call
int3
jmp
xchg
ret
(bad)
leave
xchg
xchg
add
push
sbb
inc
mov
loope
jb
sahf
push
hlt
bound
jmp
pop
mov
dec
ficomp
mov
mov
icebp
popf
xchg
mov
mov
fisub
fwait
push
sub
push
inc
cmps
jno
gs
xor
leave
movs
and
xchg
mov
push
pop
test
ss
test
sbb
mov
jbe
pop
lahf
js
mov
sbb
jnp
out
cmp
imul
mov
dec
cwde
inc
ja
push
push
dec
shl
jno
adc
xchg
jns
enter
test
mov
adc
dec
push
add
out
sub
dec
pop
jbe
mov
sbb
jb
pop
in
inc
rol
and
dec
std
dec
and
sub
mov
push
aas
sub
xchg
ds
loope
out
pop
cmp
jb
mov
mov
imul
mov
mov
out
lea
xchg
(bad)
or
ja
stos
mov
dec
and
or
inc
sti
or
in
stos
mov
cmps
out
cmp
fldcw
stc
mov
push
rcr
and
popa
enter
enter
inc
cmp
imul
mov
loope
outs
ja
inc
mov
repnz
mov
std
xor
push
sub
jae
outs
mov
mov
inc
fimul
xor
neg
add
or
push
jno
es
hlt
pushf
shl
pushf
ror
push
repz
iret
test
pop
and
sub
in
dec
push
call
inc
push
sub
pushf
in
sar
sbb
std
popf
scas
lods
and
mov
cld
enter
scas
sar
and
nop
xchg
movs
mov
scas
adc
xchg
xor
jg
adc
fwait
xor
or
aaa
fdiv
iret
test
cmp
out
sbb
fdivr
popa
stos
sub
push
movs
dec
xchg
cwde
cmp
nop
jg
(bad)
loop
xchg
sbb
xor
push
outs
stc
and
lock
ds
jmp
mov
fimul
jnp
cmp
mov
cmp
imul
cmp
call
sub
lock
retf
dec
mov
movs
into
mov
push
add
xor
cmps
adc
cmp
xor
mov
sub
into
arpl
popf
sub
sub
or
fadd
cwde
bound
push
ror
xchg
mov
mov
xchg
leave
pop
lods
pop
sbb
dec
dec
aam
stos
in
xor
jp
pop
fbld
dec
lds
addr16
pushf
call
push
vpcmpgtb
push
loope
xor
sbb
pop
dec
xchg
pop
push
mov
mov
shl
xchg
aam
inc
ficomp
lods
in
repnz
add
lea
pop
scas
dec
fwait
mov
popa
daa
std
push
and
xchg
sbb
pop
push
inc
fsub
jl
xor
dec
adc
push
shr
out
sbb
outs
cmp
mov
(bad)
pop
mov
mov
pop
aam
jecxz
daa
jne
stc
sbb
mov
or
mov
cdq
cmps
dec
cmp
ja
sub
test
fs
mov
cdq
das
movs
int
or
iret
push
mov
cmp
ins
lahf
ret
loopne
sbb
mov
jmp
or
mov
push
sbb
xchg
idiv
int3
fistp
mov
mov
or
je
cli
(bad)
(bad)
stc
mov
paddusw
imul
(bad)
xlat
test
int3
ins
mov
shl
cmps
sti
sar
fwait
sub
aad
pushf
mov
repz
xchg
pop
outs
sbb
jle
sub
or
xchg
and
or
xchg
shl
leave
ret
pop
ins
iret
pop
aad
mov
mov
mov
adc
or
fistp
xchg
push
xlat
les
out
xor
lods
ins
xor
nop
retf
stos
(bad)
stc
fisubr
inc
pop
push
xchg
(bad)
into
xchg
xlat
out
(bad)
push
rcl
jge
jl
jge
clc
movs
scas
loop
xor
sbb
(bad)
call
mov
aas
pop
sub
pop
add
and
pop
adc
bound
cmp
out
adc
je
test
popa
mov
mov
xor
sub
(bad)
xor
lock
lods
sub
mov
push
fist
lahf
das
pop
stos
in
push
adc
add
push
cwde
jo
dec
mov
mov
xor
jns
xor
jecxz
mov
test
xor
loope
sbb
sub
pop
push
and
loopne
inc
movs
adc
sbb
pop
ficom
mov
sahf
hlt
pop
mov
int
sbb
cmp
or
in
add
sbb
ins
push
es
repnz
and
jmp
loopne
sub
mov
xor
or
sar
pop
movs
jge
cmp
cli
xchg
movs
jmp
(bad)
mov
and
cmps
aaa
mov
xchg
push
inc
cs
jmp
pop
xchg
xor
or
push
cs
pop
into
pop
and
xchg
js
inc
iret
xchg
sub
jl
stos
ja
ror
psraw
inc
repnz
outs
in
mov
mov
outs
sub
call
in
push
jecxz
mov
(bad)
mov
mov
xor
dec
sti
mov
int
xor
push
jge
aad
cmp
ror
in
retf
leavew
push
mov
js
xchg
push
pop
in
adc
xor
in
in
(bad)
sub
popf
sbb
mov
inc
and
mov
adc
jle
or
adc
xchg
add
aad
ret
les
fs
sub
xchg
add
jo
movs
jecxz
and
enter
clc
push
ins
jle
shr
movs
mov
(bad)
cmp
int
jbe
les
std
sbb
or
mov
jecxz
inc
int3
sub
dec
(bad)
mov
adc
out
jb
jmp
and
test
xchg
loope
jmp
int
je
inc
push
std
sahf
stos
inc
xor
push
mov
lods
and
not
jns
push
(bad)
mov
fistp
icebp
mov
push
add
inc
add
jg
mov
sti
fwait
add
test
pop
add
int3
or
lahf
cli
jmp
sti
cld
jg
mov
mov
sti
push
div
jmp
in
xor
adc
icebp
jne
outs
mov
dec
aam
or
(bad)
retf
(bad)
sub
cmp
mov
lods
mov
shl
leave
sbb
pushf
sub
setns
ds
push
inc
loop
sar
sbb
pop
ins
mov
bound
pop
mov
xchg
inc
je
out
or
mov
inc
adc
add
or
adc
fisubr
inc
loop
enter
push
lea
xchg
jns
jle
adc
jg
jae
adc
test
rcl
pop
lock
retf
rol
rol
mov
xchg
fnstsw
adc
cmps
dec
cmc
and
fnsave
mov
xchg
jo
pop
pop
sbb
jg
xchg
and
pop
mov
dec
and
dec
and
push
sub
sbb
push
in
shl
mov
adc
sbb
imul
xlat
sbb
mov
ret
xchg
enter
shl
(bad)
(bad)
lods
mov
pop
je
test
pop
lock
push
sub
out
xor
jg
cmp
mov
cli
dec
loop
xor
(bad)
inc
lods
cmps
sub
outs
sub
mov
inc
fs
in
call
add
vmovdqu
rcr
cmp
and
shr
(bad)
fcom
mov
mov
call
daa
in
mov
or
sbb
int3
push
movs
test
pop
adc
jl
ss
or
ret
shl
push
lahf
and
(bad)
js
sub
mov
(bad)
push
pop
pop
not
push
adc
sbb
push
xor
or
adc
jno
imul
ja
pop
ret
mov
or
pop
dec
fimul
cld
test
je
fnstcw
repnz
repnz
dec
push
aaa
aaa
fsubr
ja
xor
sahf
push
sub
mov
(bad)
out
mov
(bad)
loop
aaa
mov
test
or
nop
pop
fistp
leave
xchg
pusha
cli
fcmove
stc
sub
arpl
gs
sahf
aaa
out
dec
or
xor
pop
mov
fdivrp
cmp
ret
hlt
idiv
rcr
test
cmp
adc
cmp
mov
xchg
retf
mov
cmp
test
daa
mov
cmp
arpl
sub
cmp
add
jmp
(bad)
sub
and
fisttp
pop
sbb
adc
fwait
nop
cdq
fnstenv
lds
sbb
sar
xchg
fisubr
cmp
xchg
adc
retf
mov
inc
xchg
icebp
cli
xor
and
ret
out
xchg
mov
xchg
inc
inc
dec
push
cld
cdq
aam
lea
pop
cmp
stos
xchg
mov
inc
push
cs
jmp
push
mov
push
xchg
cmp
jp
pop
push
mov
adc
add
(bad)
mov
push
ficomp
xor
or
adc
jbe
mov
sti
les
mov
rcl
daa
ficomp
mov
repnz
xchg
scas
sar
jge
adc
rol
mov
jge
jbe
daa
fdivr
(bad)
out
push
adc
inc
rcl
fsub
loopne
(bad)
pop
add
bound
add
or
dec
mov
pop
jb
call
cmps
hlt
jnp
in
jle
test
sbb
(bad)
push
iret
cmc
loop
inc
sub
sbb
and
and
aad
sti
mov
pop
inc
pop
pop
aam
push
imul
fist
jmp
sbb
shr
imul
loop
or
mov
cmp
pop
mov
add
push
hlt
add
cld
repz
aas
(bad)
cld
repz
aas
jmp
scas
push
rol
mov
add
add
dec
inc
dec
inc
scas
inc
pusha
or
add
add
add
(bad)
(bad)
inc
add
add
add
add
add
add
jns
je
ins
cs
jb
ja
outs
addr16
push
gs
imul
xor
xor
inc
jne
je
jb
cmp
jb
ins
sub
push
jne
ins
imul
imul
bound
xor
data16
xor
fs
add
adc
gs
cs
jb
ja
outs
addr16
imul
add
popa
je
pop
add
add
add
add
add
lsl
add
mov
mov
inc
or
add
or
add
add
add
add
or
add
add
pusha
outs
rol
add
add
inc
dec
inc
add
mov
or
popa
add
jo
pop
jae
add
ret
add
push
ret
add
outs
test
add
adc
inc
inc
push
pop
inc
in
rol
loopne
rcr
xor
cmps
fwait
mov
mov
fwait
out
sbb
(bad)
je
loope
ja
shl
sti
inc
fidivr
jp
add
movs
daa
adc
jge
mov
das
pop
pop
pop
movs
not
adc
dec
inc
inc
fisubr
or
jmp
retf
sub
mov
adc
setno
add
xchg
mov
fldcw
mov
cmp
adc
mov
cdq
stos
sahf
pusha
outs
and
or
xchg
repnz
push
push
daa
in
stos
xor
lds
push
mov
sbb
inc
das
or
inc
stc
vmovdqa
cmps
sbb
dec
pop
push
adc
loop
or
push
inc
adc
pop
hlt
das
adc
(bad)
fimul
push
lock
jbe
shl
pop
(bad)
test
push
sbb
xor
jae
in
jmp
mov
or
cmps
adc
mov
test
mov
pushf
dec
(bad)
xor
je
std
jp
lea
sbb
pop
mov
and
mov
iret
int
and
lahf
loop
sub
push
cmps
ins
mov
mov
movs
jns
adc
mov
inc
adc
jecxz
pop
inc
icebp
jmp
cmp
nop
mov
cmp
mov
ds
mov
push
pop
mov
xchg
xchg
adc
or
fild
ret
jecxz
retf
adc
cmps
dec
rcl
push
inc
in
mov
test
cli
mov
retf
adc
movs
aaa
aas
(bad)
push
cmp
and
lods
and
fidiv
xor
mov
mov
shl
out
shr
mov
xchg
lock
jl
popf
mov
jbe
push
idiv
or
inc
ficomp
js
jo
sub
aas
mov
inc
in
jmp
pusha
push
cmp
jae
fnstsw
sbb
(bad)
jo
js
ret
sub
xor
mov
dec
pop
inc
fiadd
fisttp
xor
inc
popf
addr16
xchg
aaa
add
movs
mov
inc
retf
pop
push
add
test
xor
and
hlt
sub
jp
bound
lods
fld
jp
pop
mov
repnz
mov
sub
adc
repnz
lahf
dec
inc
fild
pop
scas
jb
jp
lahf
mov
mov
cs
imul
test
xchg
cdq
xchg
fnstcw
sbb
push
xchg
sahf
push
pop
add
int3
retf
dec
jp
adc
movs
xchg
cmp
fsubr
das
pop
and
push
add
mov
push
cmp
call
ss
fsub
std
shl
cli
fidivr
add
cld
mov
fs
jmp
mov
dec
xor
clc
pushf
xchg
pop
jmp
cmp
sbb
repnz
ret
ror
cmp
jge
pop
lods
fnsave
adc
push
adc
inc
das
pop
addr16
jge
cmps
and
inc
retf
clc
shr
mov
xor
xchg
xor
jl
in
sub
js
inc
popf
test
stos
xchg
xchg
or
in
test
pushf
lds
fs
call
cmp
jb
and
jmp
movs
mov
cmp
fsubrp
ja
jne
lds
sbb
push
int3
mov
cwde
arpl
nop
cmp
adc
inc
test
mov
inc
adc
xchg
or
push
int
call
stc
dec
jecxz
mov
daa
xor
mov
xor
popa
mov
push
add
push
mov
popf
dec
out
fwait
add
push
stc
aaa
nop
and
test
pop
enter
into
or
(bad)
sub
sub
std
mov
dec
push
ror
(bad)
clc
mov
adc
dec
jne
call
cdq
test
inc
push
popf
jb
mov
ss
jbe
add
cmp
xchg
imul
and
sbb
into
sub
mov
pop
mov
movs
mov
mov
push
push
inc
inc
xor
inc
add
ror
add
jnp
les
cmp
cmp
aad
(bad)
xor
sub
fwait
out
das
int3
aaa
ss
pop
add
and
into
loopne
or
mov
jmp
cmc
sar
popf
mov
add
test
cmp
and
out
cli
lods
(bad)
es
dec
cmp
pop
and
lds
(bad)
call
push
loop
pop
pop
mov
pusha
imul
sub
call
sbb
out
xor
xchg
push
pop
cmps
jns
xor
das
pop
inc
pop
push
cmp
outs
fimul
sub
inc
cdq
int3
xor
test
dec
rcr
aam
lea
mov
push
mov
ja
pop
cmps
fs
sub
(bad)
in
xor
xchg
hlt
mov
ins
inc
pop
jo
mov
sar
and
xchg
dec
sbb
test
into
cmc
inc
lds
aad
push
push
out
fwait
mov
push
scas
mov
mov
fwait
(bad)
div
movs
hlt
cmc
add
xor
jbe
or
dec
rol
mov
stos
ret
scas
scas
or
sub
inc
and
ret
imul
push
lods
imul
mov
sbb
stos
gs
aaa
mov
stos
aad
xchg
pop
scas
cmc
mov
outs
les
addr16
inc
mov
pop
ins
sub
sub
or
pop
pushf
sbb
rep
pop
xor
inc
imul
fwait
dec
sbb
push
std
mov
mov
(bad)
mov
in
cwde
in
out
arpl
pop
mov
dec
imul
add
mov
lea
dec
fwait
sub
add
leave
js
std
fwait
cmps
faddp
inc
out
mov
test
pushf
in
stc
push
lods
test
lds
and
test
mov
test
shl
pop
scas
push
inc
and
xchg
sti
test
and
xchg
gs
and
add
loope
ja
add
shr
js
adc
push
and
(bad)
icebp
xor
add
into
imul
sub
mov
rcr
pop
jle
fild
movs
jb
arpl
fs
call
dec
pop
cmps
fisubr
gs
mov
sbb
xchg
mov
arpl
jbe
iret
out
push
xchg
mov
jo
pop
dec
aam
pop
icebp
and
sar
sbb
adc
(bad)
or
ins
pop
xor
adc
mov
pusha
push
xor
dec
mov
sub
sti
xchg
dec
pop
xchg
mov
or
daa
dec
push
cmc
push
cmp
xor
or
fistp
dec
(bad)
and
push
test
test
(bad)
jne
scas
call
ret
push
fdivr
rcl
and
jb
iret
inc
jbe
ja
aas
clc
mov
xor
fild
dec
jbe
arpl
jmp
imul
dec
icebp
cmp
fnop
push
addr16
sbb
fild
ficom
js
lods
pop
stos
js
jle
fsubr
lods
push
test
mov
(bad)
push
lods
xchg
mov
add
or
pop
test
push
or
mov
add
jl
fisub
mov
mov
lods
mov
pop
idiv
add
sub
je
les
test
mov
cmps
int3
mov
dec
ins
pop
test
mov
movs
pop
ret
jne
mov
stos
pop
add
loop
push
scas
retf
daa
int3
dec
cmp
fmul
pop
adc
sar
mov
mov
out
mov
std
nop
cli
add
out
mul
add
mov
push
add
std
jmp
xchg
jl
fisubr
sbb
popa
dec
and
push
push
sbb
push
mov
pop
aas
pop
fisttp
pop
int3
int
jnp
push
hlt
clc
mov
movs
ror
jge
inc
test
leave
leave
in
lods
pop
mov
xchg
push
xchg
jbe
hlt
iret
mov
cmps
xchg
(bad)
cmp
adc
fs
or
js
(bad)
dec
sbb
jns
stc
in
mov
fdivr
pop
add
mov
xchg
int
pop
ins
cs
or
repz
js
push
ins
repnz
jno
iret
leave
dec
jns
pusha
push
shl
sqrtps
in
into
ds
and
dec
jne
xchg
dec
test
fwait
int3
call
loopne
hlt
aam
mov
add
sub
pop
ins
cs
inc
retf
enter
inc
jbe
ins
mov
ins
arpl
inc
sbb
fidivr
fcmovb
out
dec
pop
adc
repz
jnp
sbb
das
jle
adc
lea
or
imul
fild
loope
push
in
(bad)
sbb
or
mov
and
pop
push
test
sbb
mov
jle
mov
sbb
sbb
out
jmp
enter
(bad)
lock
fs
fbstp
jns
cs
mov
dec
jns
mov
bound
stos
push
sub
fs
and
shl
lods
cmp
sbb
inc
push
xchg
rol
jmp
jnp
fst
shl
arpl
or
cmp
scas
mov
stos
shl
sub
inc
test
(bad)
ins
rcr
sub
sub
imul
mov
les
fidiv
retf
out
adc
inc
inc
sbb
cmp
out
loope
pop
not
cs
mov
lods
dec
lahf
adc
ror
jmp
mov
push
add
cmc
js
cmps
repnz
cmp
sbb
dec
mov
jb
mov
mov
mov
sub
xchg
jl
stos
adc
mov
hlt
xor
jnp
stos
mov
jl
aad
enter
and
xor
jbe
aaa
add
rcl
push
xor
or
pop
and
stos
in
(bad)
in
push
jl
sbb
mov
xchg
leave
lahf
sbb
push
ror
adc
jle
cmps
mov
fsub
mov
sbb
mov
sub
outs
dec
adc
cdq
(bad)
outs
addr16
sub
xchg
mov
mov
sbb
les
or
clc
jb
mov
repnz
fs
xor
in
mov
jno
bound
retf
ins
xchg
xchg
mov
lods
mov
adc
fsubr
cdq
dec
mov
adc
adc
shr
not
addr16
and
jg
in
ins
imul
sub
or
sub
dec
add
mov
in
mov
jnp
or
inc
pop
ja
mov
mov
dec
cmps
pop
push
dec
inc
and
arpl
push
push
mov
cwde
out
pop
mov
stos
and
mov
xchg
adc
ds
call
push
xchg
pop
cmp
leave
push
jp
push
fwait
xchg
call
sti
pop
xor
jp
aam
aad
cmp
sub
daa
push
sbb
push
push
sbb
adc
add
jo
push
pop
inc
shr
jmp
xor
cmp
js
adc
fild
mov
arpl
mov
pop
cmc
sub
out
jg
and
shl
push
(bad)
mov
mov
std
mov
in
sub
(bad)
cmp
jne
add
cmps
jmp
data16
(bad)
push
sti
cmp
inc
jmp
xor
dec
mov
push
cli
jne
cs
cdq
cmp
outs
inc
cmc
call
repnz
cmp
pop
inc
add
aad
mov
pop
mov
loope
pop
xchg
jmp
es
mov
adc
lds
inc
sub
mov
mov
outs
dec
cs
pop
push
cmp
lods
cmp
call
in
mov
gs
inc
aaa
xchg
clc
out
mov
add
cmp
ror
cdq
fistp
loopne
mov
test
dec
fsubr
scas
not
dec
mov
cmp
jae
add
outs
daa
mul
dec
in
sub
loope
std
sub
and
std
jae
adc
pop
clc
sbb
data16
push
mov
arpl
inc
inc
stos
jg
and
loop
aad
mov
xor
ds
je
jl
cmp
iret
cli
adc
sbb
inc
jno
cs
jae
(bad)
out
sub
jl
cmp
cli
mov
xchg
aam
data16
mov
mov
push
sar
jbe
popf
ss
cli
pop
mov
into
dec
aam
xor
pop
fist
rcl
outs
test
loop
imul
pusha
push
mov
ret
es
mov
test
jmp
ins
ror
pop
aad
adc
(bad)
js
mov
pop
pop
and
std
out
mov
retf
(bad)
frndint
cmp
push
int
pop
cmp
cmp
jmp
push
cmps
ja
int3
(bad)
pop
and
inc
ret
cmp
push
je
(bad)
jne
loope
ffreep
mov
sbb
es
ss
push
movs
pop
add
call
mov
es
cmp
mov
push
cld
addr16
push
shr
push
daa
mov
imul
sbb
jno
rcr
jecxz
mov
les
aad
shl
add
push
in
lock
mov
aaa
into
cwde
mov
jb
stos
sbb
xor
jmp
xor
pop
inc
push
dec
or
call
inc
hlt
cmc
push
xor
cwde
in
iret
hlt
lahf
pop
adc
pop
push
cmp
add
movs
xchg
jp
cmc
push
loope
out
addr16
or
retf
mov
jg
mov
mov
scas
call
adc
test
mov
das
mov
mov
add
ret
mov
mov
mov
packssdw
inc
pop
ror
daa
sub
in
rcr
daa
sbb
pop
gs
adc
popa
rcr
mov
test
cmp
popf
mov
shl
mov
ror
mov
(bad)
cmp
lds
cmp
or
jns
fiadd
outs
outs
mov
das
mov
pop
inc
lods
clc
leave
pop
add
jl
push
xchg
mov
lds
mov
daa
jbe
or
adc
jnp
cmp
lods
adc
jl
gs
(bad)
fcom
jo
dec
mov
sti
aas
ret
in
repnz
xchg
push
shl
push
in
or
mov
enter
outs
mov
mov
repnz
imul
pop
std
(bad)
xor
cmp
sbb
mov
inc
xchg
push
push
loope
and
cld
mov
mov
(bad)
nop
scas
mov
mov
cmp
jg
movs
mov
inc
aad
jl
cwde
out
gs
icebp
jmp
xlat
loopne
loopne
inc
pushf
les
mov
test
mul
mov
xchg
pop
add
pop
dec
mov
jne
sbb
push
shl
(bad)
jo
jmp
add
and
or
cdq
movs
fadd
(bad)
adc
and
out
stos
stos
je
or
push
pop
cmps
mov
xchg
pushf
push
loopne
enter
hlt
adc
test
test
(bad)
push
mov
add
inc
test
and
call
ret
mov
jmp
dec
test
fcom
cmp
ins
push
int
push
fstp
popf
sbb
aam
pop
stos
int
int
das
cmp
sbb
dec
push
(bad)
mov
sub
pop
into
adc
ret
dec
test
pop
mov
xchg
jmp
mov
and
lahf
int
ficomp
into
push
ds
hlt
in
(bad)
xchg
arpl
mov
sbb
mov
lea
xchg
or
test
stos
fstp
push
lahf
add
out
out
jns
cld
dec
push
pop
loope
mov
cmps
mov
ss
push
stos
outs
xchg
push
fst
(bad)
iret
sub
cmp
mov
mov
iret
inc
shl
mov
movs
add
fcomp
aas
sub
into
arpl
stc
out
jg
stc
out
jmp
lock
ret
xor
xchg
add
add
dec
inc
scas
inc
pusha
or
add
add
add
(bad)
(bad)
inc
add
add
add
add
add
add
jns
je
ins
cs
jb
ja
outs
addr16
push
gs
imul
xor
xor
inc
jne
je
jb
cmp
jb
ins
sub
push
jne
ins
imul
imul
bound
xor
data16
xor
fs
add
adc
gs
cs
jb
ja
outs
addr16
imul
add
popa
je
pop
add
add
add
add
add
lsl
add
mov
mov
inc
or
add
or
add
add
add
add
or
add
add
pusha
outs
rol
add
add
inc
dec
inc
add
mov
or
popa
add
jo
pop
jae
add
ret
add
push
ret
add
outs
test
add
adc
inc
inc
push
pop
inc
in
rol
loopne
call
jg
call
call
cwde
into
adc
cmp
fstp
dec
xlat
dec
int
sti
inc
fidivr
jle
add
cwde
jecxz
push
add
push
sbb
mov
adc
cld
cld
bound
xor
inc
mov
mov
std
add
test
mov
or
stc
in
cs
outs
xchg
not
sub
pop
cmc
stos
sar
icebp
cmp
xchg
push
jbe
imul
sbb
mov
sbb
inc
dec
into
jecxz
jl
and
pop
mov
pushaw
daa
mov
and
mov
inc
mov
(bad)
jmp
xchg
jp
sbb
mov
(bad)
push
dec
jno
cmps
cmps
movs
enter
push
jp
pop
sti
cmps
test
in
call
(bad)
stos
xchg
inc
hlt
mov
sub
fld
jmp
dec
push
rcr
das
repnz
fist
jne
outs
add
xchg
add
retf
mov
fnsave
sbb
cld
inc
xchg
cmps
jmp
pop
gs
stos
(bad)
fsubr
or
or
xor
mov
sbb
fstp
xchg
cmps
ret
inc
aaa
fwait
add
(bad)
arpl
sbb
dec
inc
sbb
in
pop
dec
sbb
adc
dec
pop
jns
jb
es
jmp
sub
jmp
pop
std
sub
mov
and
cmp
cmp
test
out
mov
jo
xchg
retf
sbb
lea
jo
xchg
sub
mov
push
xchg
or
mov
adc
adc
inc
mov
cmp
outs
adc
sti
or
in
adc
dec
mov
shl
jo
jecxz
std
and
sub
mov
mov
out
retf
hlt
dec
in
ret
mov
jmp
cmp
add
mov
popf
inc
ret
imul
icebp
ds
sbb
call
and
inc
xchg
cli
outs
mov
mov
lock
inc
dec
xor
pop
jmp
xchg
daa
(bad)
in
inc
sbb
jecxz
fnsave
ficom
loope
lahf
inc
or
sub
add
mov
mov
pop
mov
dec
lds
dec
push
(bad)
mov
add
(bad)
jnp
mov
fsubr
ret
call
test
adc
test
xchg
mov
ret
xor
shr
xchg
pop
cmp
mov
jne
jo
jmp
(bad)
(bad)
fwait
sbb
pop
mov
or
leave
bound
hlt
ret
lock
nop
iret
dec
cs
sbb
loope
bound
out
mov
cvttps2pi
mov
push
adc
fistp
push
in
mov
dec
out
sub
pop
(bad)
xor
inc
test
mov
loopne
or
frstor
sar
imul
(bad)
sub
add
sub
movs
arpl
or
call
cmp
mov
js
pop
push
aam
and
cmp
jp
call
imul
and
gs
int3
bnd
jmp
pop
ja
sbb
sbb
fld
pop
cmp
scas
jecxz
cmp
pop
inc
lahf
jl
push
in
sti
or
fwait
nop
ins
cmps
mov
xchg
mov
mov
pop
aas
adc
xchg
add
xchg
cmps
add
inc
in
(bad)
fcom
or
mov
mov
push
fild
arpl
cmps
jne
push
movs
xor
pop
bound
loope
shl
arpl
(bad)
das
inc
rcl
dec
pop
outs
sub
fstp
pop
out
(bad)
push
frstor
cmps
add
call
in
adc
das
scas
and
xlat
xor
hlt
out
jae
sti
xor
jge
mul
repz
popf
lahf
mov
xchg
mov
sar
cli
jae
inc
mov
ret
popf
and
sub
popf
repz
into
or
dec
iret
imul
fmul
inc
es
popf
xchg
popf
sar
or
mov
dec
iret
mov
xor
repnz
and
call
fstp
adc
inc
add
or
jmp
jne
mov
xor
jg
cmp
neg
(bad)
out
cs
in
xchg
sbb
and
pushf
jmp
sbb
xchg
fwait
sub
pop
daa
js
push
imul
lea
int3
sbb
jbe
xor
jp
mov
imul
cli
fisub
fdivr
ret
xchg
jb
ins
jbe
and
push
dec
scas
pop
outs
repnz
outs
stos
mov
lods
(bad)
shr
ror
add
imul
lea
sub
daa
cmps
jns
mov
cmp
imul
stos
mov
(bad)
pushf
mov
sbb
stos
outs
add
cmp
inc
inc
cld
inc
pop
sub
mov
sbb
cli
jno
push
fisttp
xor
sbb
inc
jne
(bad)
cdq
pop
retf
mov
sti
mov
cwde
xchg
adc
stos
(bad)
movs
mov
lahf
cmp
xchg
adc
xchg
jge
push
add
lods
cld
nop
and
mov
daa
cs
dec
retf
mov
loopne
xor
arpl
mov
in
mov
pop
je
ins
ins
mov
adc
lea
arpl
pop
in
test
jne
pop
sar
mov
jmp
jmp
scas
fidiv
jo
fisttp
mov
mov
xchg
push
cli
sub
aad
jne
sbb
icebp
cmp
jae
cmp
or
jne
xchg
fcom
xchg
sbb
dec
mov
mov
and
lea
dec
bound
mov
cmps
out
push
ins
bound
rol
and
mov
or
sahf
retf
retf
xchg
mov
rol
add
jno
dec
inc
dec
or
fist
push
mov
iret
mov
inc
and
in
mov
mov
mov
or
sbb
push
mov
out
push
xor
out
ins
mov
push
std
in
inc
lods
repz
pop
ret
sbb
inc
not
cs
lds
sub
shl
imul
mov
mov
pop
jmp
arpl
xchg
xor
daa
mov
psubsb
in
jno
lds
lods
dec
pushf
ja
pop
jg
push
lods
sti
cmp
jle
mov
xchg
push
mov
mov
pop
repz
push
aad
cmp
mov
icebp
cmp
das
push
out
jg
xchg
mov
iret
popa
and
jmp
push
pop
add
inc
ror
std
inc
sbb
xor
pop
int3
dec
pop
jl
jl
fdiv
movs
sahf
adc
cmps
or
sbb
add
jge
dec
fild
pushf
push
sub
fcmovbe
inc
jnp
push
sbb
jmp
hlt
jle
xchg
dec
push
inc
mov
icebp
ficomp
in
adc
adc
cmp
xchg
loopne
stos
push
inc
inc
sub
xchg
out
jge
mov
sbb
xchg
dec
pop
sub
mov
sbb
push
test
xor
push
jno
and
pop
jle
push
xchg
movs
sub
mov
popf
popa
xchg
and
push
or
not
mov
sar
int3
fsub
ds
(bad)
in
cld
fucomi
xchg
inc
jge
in
inc
cmc
xor
dec
sub
mov
or
in
retf
mov
jmp
mov
push
add
inc
lock
outs
fs
ret
pop
dec
add
pop
push
movs
call
scas
inc
retf
mov
sbb
loopne
push
dec
pop
fs
in
push
addr16
sub
add
push
cwde
(bad)
sbb
adc
and
cmp
sub
pusha
pusha
lods
scas
jecxz
fadd
push
mov
sbb
imul
icebp
ss
mov
jle
mov
leave
pop
lods
mov
test
cld
adc
pop
stos
iret
repz
cmps
enter
xchg
in
js
aaa
xor
gs
leave
push
xlat
lods
jle
adc
gs
fs
mov
adc
cmp
lods
fs
not
jne
fsub
mov
sbb
sub
das
test
xchg
xchg
imul
lods
daa
xchg
jbe
icebp
xor
xor
xchg
mov
cdq
stc
movs
in
aas
ffreep
clc
into
repz
or
out
jp
mov
mov
outs
popf
pop
stos
xor
cmps
shl
cld
aad
(bad)
shr
icebp
lea
add
xchg
or
repnz
call
mov
fsub
mov
sub
test
fbld
call
xor
or
xchg
retf
push
mov
leave
imul
jg
jle
mov
in
jmp
test
sub
and
xor
sub
cmp
repnz
add
movs
js
or
fcom
jne
push
jp
mov
push
adc
and
arpl
aaa
(bad)
xor
inc
cwde
daa
push
mov
adc
or
xor
out
loop
cdq
xor
fisub
mov
js
xchg
inc
cmc
int
inc
pop
stos
mov
mov
in
iret
add
mov
das
jg
imul
xor
mov
jno
sbb
lahf
sahf
cmp
add
dec
cmps
leavew
fdiv
jno
inc
sub
shl
dec
in
jmp
push
icebp
cli
out
inc
pop
std
sub
and
xchg
dec
cwde
icebp
push
cdq
push
ror
and
sahf
popf
cmp
bound
std
es
pop
xor
js
pop
push
cmp
inc
xchg
cmp
out
sbb
jmp
jp
dec
jg
jle
ins
pop
enter
inc
and
fnsave
mov
add
scas
int3
sub
inc
push
retf
cmp
mov
cmp
dec
add
cmps
bnd
mov
aaa
int3
sbb
cld
(bad)
mul
pop
fcom
push
test
test
mov
int
int
or
stos
imul
(bad)
gs
jle
(bad)
cmp
dec
aaa
ret
xor
xlat
xor
out
mov
or
(bad)
lods
xlat
xchg
add
ins
dec
rcr
dec
fcomp
add
cwde
inc
les
cmp
mov
pop
movs
push
repz
cmp
jg
out
cmp
or
mov
movs
sub
or
jmp
repnz
sar
sub
cwde
stos
aam
xor
jne
(bad)
push
jecxz
mov
dec
int
sub
test
clc
or
int3
loopne
test
ficom
repz
xchg
or
addr16
(bad)
leave
cmp
dec
pop
mov
cmp
push
xchg
push
mov
sbb
add
sahf
fldenv
add
ins
call
mov
fwait
adc
aad
in
iret
fs
scas
into
(bad)
lahf
in
imul
xor
pop
je
mov
sbb
mov
jl
movs
jge
iret
movs
jl
mov
test
loopne
std
ficomp
jb
daa
dec
push
loope
cmc
stos
xchg
sti
das
imul
mov
stc
loope
mov
sbb
stc
xchg
xchg
loope
aad
shl
pop
mov
cmp
aad
jmp
sti
jmp
cmp
mov
mov
mov
jecxz
mov
cwde
sbb
loopne
dec
addr16
push
aad
std
popa
rcr
fcmovbe
sub
add
jl
(bad)
or
mov
adc
scas
jge
mov
out
push
pop
sbb
(bad)
ss
inc
sbb
inc
mov
cmp
pop
aad
into
pop
cmp
sbb
stc
inc
xchg
dec
mov
cli
lahf
dec
movs
popf
imul
jo
es
ret
rcr
mov
lods
movs
loope
dec
scas
or
(bad)
mov
outs
xlat
repz
pop
aad
inc
popf
popf
fsub
cmp
jmp
jmp
stos
fbstp
mov
inc
call
sbb
cmp
push
rep
mov
inc
or
and
mov
repz
ins
xor
mov
sbb
mov
sbb
mov
jmp
jmp
(bad)
cmps
rol
cmp
push
or
or
(bad)
cld
adc
iret
inc
push
mov
adc
jne
neg
mov
mov
out
addr16
(bad)
fisub
(bad)
cmp
push
sbb
out
ds
sbb
sbb
imul
fild
xchg
or
adc
ret
mov
xchg
cmps
xor
or
xchg
pop
xor
push
popa
imul
fsubrp
sub
push
pop
adc
xor
fwait
xlat
cmp
or
cli
sbb
push
cmc
push
jg
push
inc
sub
mov
sbb
outs
shl
xchg
add
lds
or
fwait
ror
call
call
loope
mov
les
popf
in
mov
push
ret
mov
pop
lock
ficomp
dec
pop
test
sbb
jmp
arpl
and
dec
jns
stos
cmp
push
pop
xor
mov
nop
mov
retf
(bad)
in
sbb
mov
es
jnp
ret
mov
in
aad
fmulp
pop
les
rcr
sub
push
xchg
and
ins
cmps
inc
out
out
sbb
jae
test
lock
xchg
mov
or
scas
add
pop
lds
dec
fisttp
pop
sahf
push
mov
int
pop
and
xor
and
adc
mov
xchg
xchg
outs
push
xor
pop
aas
cwde
cwde
icebp
xchg
and
mov
fs
jle
pop
aad
cmp
xchg
pop
out
adc
fsubp
addr16
test
lods
(bad)
lods
call
aad
or
in
xor
lds
add
and
or
mov
mov
push
call
mov
daa
inc
cmps
popf
cdq
lahf
bswap
retf
out
sub
aas
stos
jnp
rcr
mov
jg
cs
xor
jg
repnz
mov
out
dec
sbb
pop
dec
and
aad
adc
adc
inc
adc
neg
or
xor
data16
jecxz
pop
mov
sub
push
sti
call
shr
inc
or
push
jecxz
nop
dec
push
and
pop
dec
int3
dec
mov
mov
outs
aad
or
and
mov
sahf
test
jp
xlat
out
and
into
pop
dec
mov
sub
xlat
push
mov
and
loop
push
das
fild
dec
sub
mov
cli
(bad)
jne
pop
out
das
sbb
enter
push
imul
popa
sub
sbb
cmc
out
cmps
inc
pushf
dec
dec
outs
sub
mov
(bad)
je
or
adc
sar
pop
xchg
xor
stc
sbb
std
ins
in
imul
bound
dec
test
cmp
jge
jecxz
mov
and
mov
(bad)
neg
das
adc
xor
shl
mov
ins
ficom
ret
sub
cmps
fwait
shr
dec
sub
mov
mov
cdq
retf
stos
push
shl
aam
test
cdq
hlt
dec
mov
push
out
push
pusha
cmps
jg
inc
rcr
cld
xor
sub
popa
xchg
movs
cmp
jo
out
jmp
sub
test
jno
std
in
and
cmp
(bad)
adc
inc
dec
and
jbe
lods
fild
les
xlat
les
or
push
aad
sub
mov
shl
daa
scas
fdiv
out
shr
mov
lods
outs
or
enter
stc
push
xchg
mov
dec
div
mov
jnp
ret
(bad)
jp
lahf
imul
and
or
popf
movs
test
pushf
enter
mov
cmps
in
dec
mov
cwde
jne
jg
adc
fcomp
mov
bound
test
and
outs
stos
or
(bad)
out
fistp
sub
mov
outs
mov
xchg
jge
add
sbb
inc
pop
add
push
inc
push
bound
(bad)
cdq
cmp
jmp
adc
or
lahf
jg
stc
out
jg
stc
out
sbb
cld
(bad)
lods
cli
jb
xchg
in
add
add
dec
inc
dec
inc
scas
inc
pusha
or
add
add
add
(bad)
(bad)
inc
add
add
add
add
add
add
jns
je
ins
cs
jb
ja
outs
addr16
push
gs
imul
xor
xor
inc
jne
je
jb
cmp
jb
ins
sub
push
jne
ins
imul
imul
bound
xor
data16
xor
fs
add
adc
gs
cs
jb
ja
outs
addr16
imul
add
popa
je
pop
add
add
add
add
add
lsl
add
rcl
add
mov
inc
or
add
or
add
add
add
add
or
add
add
pusha
outs
rol
add
add
inc
dec
inc
add
mov
or
popa
add
jo
pop
jae
add
ret
add
push
ret
add
outs
test
add
adc
inc
inc
push
pop
inc
in
rol
loopne
mov
je
int3
imul
push
pop
(bad)
(bad)
jbe
(bad)
jnp
hlt
imul
xor
add
in
jns
mov
arpl
ja
sub
(bad)
jnp
std
std
jno
enter
mov
movs
adc
mov
ds
xor
pop
mov
adc
push
callw
xchg
sar
data16
or
lea
push
imul
daa
sbb
inc
stc
jno
std
adc
xlat
and
aas
fs
mov
cmps
data16
ficomp
or
addr16
jmp
dec
or
ins
xchg
outs
pusha
mov
in
or
(bad)
jae
stos
into
dec
out
bound
sub
or
and
mov
ins
in
push
mov
fcom
mov
cmp
loopne
les
cmp
in
mov
jnp
mov
jecxz
retf
mov
push
xchg
leave
cmps
mov
loopne
adc
ror
int
cmp
push
cmp
xchg
push
sahf
sahf
leave
leave
popf
mov
loop
mov
call
xchg
push
dec
sbb
mov
and
xor
push
mov
add
xor
mov
mov
out
out
pop
rol
pop
lock
mov
lods
mov
hlt
mov
inc
scas
(bad)
sbb
js
jmp
push
movs
adc
cdq
cmp
or
aaa
(bad)
enter
and
dec
fisttp
push
mov
ins
mov
sbb
xchg
xor
or
fldenv
scas
jo
int3
jge
mov
mov
sbb
dec
enter
inc
or
jo
pop
mov
cmps
inc
js
fs
aam
imul
pop
inc
inc
pushf
adc
sbb
je
addr16
xor
mov
xor
fadd
(bad)
jmp
not
(bad)
out
xchg
icebp
add
or
mov
outs
push
fild
enter
adc
stos
adc
add
out
adc
das
aas
mov
add
push
jg
lea
inc
pop
shr
jne
pop
jnp
(bad)
mov
or
cmp
not
loop
jo
sub
mov
ret
fld
jnp
mov
add
outs
push
xor
inc
pushf
(bad)
jae
repz
or
imul
xor
xor
xor
xchg
ret
in
mov
or
sbb
inc
cs
cld
pop
sub
sub
inc
call
mov
les
push
dec
(bad)
imul
test
xchg
ins
inc
mov
inc
mov
ins
out
je
ds
daa
sbb
(bad)
cmps
inc
add
out
loopne
fcomp
in
out
xor
arpl
sub
mov
fsub
ss
lods
and
mov
pop
sbb
xor
inc
cli
mov
sub
inc
cmps
retf
mov
arpl
aas
or
xor
mov
and
push
rcr
sub
outs
sub
dec
dec
inc
jmp
loope
mov
leave
mov
arpl
cmps
xor
mov
xchg
in
mov
adc
jg
das
push
jbe
sub
xchg
xchg
and
inc
and
xchg
fisub
sbb
repnz
inc
mov
sub
cmps
out
(bad)
jne
shr
jns
mov
cli
add
adc
pop
mov
inc
jnp
inc
test
arpl
adc
outs
popf
aaa
fimul
mov
iret
lds
addr16
data16
xchg
movs
adc
fdiv
test
mov
test
outs
mov
in
fmul
and
inc
mov
mov
int
fcomp
mov
jl
or
pop
xchg
mov
inc
jmp
push
mov
mov
pop
test
jno
add
lahf
xor
push
movs
cld
test
cli
pop
xchg
sbb
lahf
jg
pop
mov
cs
into
jp
shl
repnz
mov
inc
xor
stc
jae
pop
ins
cmp
push
je
xor
out
or
inc
push
scas
or
ds
test
pop
scas
mov
repnz
sub
inc
pop
shr
mov
frstor
test
jge
push
jbe
xor
and
mov
mov
xchg
sub
mov
xchg
jmp
sbb
fcmovu
ror
das
or
imul
xor
sub
call
imul
mov
lods
in
movs
aas
je
in
add
stos
jmp
stos
xor
data16
fisubr
push
cld
lock
jno
rol
push
out
aam
leave
mov
or
inc
xlat
in
in
pop
imul
sub
mov
(bad)
(bad)
xchg
cld
test
push
aad
push
fimul
(bad)
mov
mov
das
dec
pop
inc
pmaxsw
pop
int
pop
xchg
into
add
div
mov
cmp
sub
xchg
std
imul
push
mov
pop
(bad)
jmp
cmps
daa
mov
jecxz
and
cmp
xor
call
push
shl
pop
push
jp
mov
outs
lahf
pop
xor
cld
push
mov
aaa
cwde
mov
jge
dec
ret
dec
clc
sbb
icebp
dec
ins
fisub
(bad)
shl
jmp
cmp
xor
cld
enter
sub
xchg
inc
jbe
ins
jmp
leave
dec
mov
retf
imul
pop
outs
push
mov
sub
cli
int3
push
repz
leave
fiadd
dec
jecxz
mov
dec
xor
or
pop
jle
push
push
dec
jae
mov
xor
inc
adc
in
js
xor
push
fwait
add
jg
push
cmp
mov
sub
push
fcomp
jmp
xchg
mov
mov
jmp
repz
mov
sbb
fnstcw
sub
xor
stos
fistp
push
aas
std
xchg
jnp
mov
int
int3
sahf
aaa
mov
xchg
sub
mov
lahf
adc
and
cli
(bad)
lods
jmp
movs
cwde
pop
mov
pop
push
pop
gs
pop
fstp
mov
sbb
sbb
mov
ins
or
shl
scas
pop
mov
adc
fwait
sbb
xor
ds
adc
xlat
stc
enter
inc
inc
bound
xor
xchg
push
lods
loopne
jp
and
addr16
jnp
mov
lock
std
push
xchg
(bad)
adc
mov
add
mov
pop
push
add
xchg
imul
pop
jecxz
daa
punpckhwd
mov
dec
sub
push
and
mov
cdq
in
sbb
push
sub
loop
ss
cmp
mov
or
dec
scas
inc
push
pop
scas
aaa
fwait
cld
inc
inc
cmp
(bad)
mov
ins
mov
je
scas
stc
and
and
xor
das
aas
icebp
cmc
call
fist
jge
mov
dec
(bad)
and
pusha
dec
jmp
pop
push
stos
jo
cmp
(bad)
cmp
leave
mov
ret
and
jae
cmp
daa
das
mov
jo
inc
push
iret
mov
scas
adc
cmps
ret
scas
fdiv
and
sub
xchg
cmp
sub
sub
push
fsubr
scas
jae
cmp
aam
mov
or
ret
push
loope
loop
sbb
loopne
fmul
ins
ja
add
(bad)
(bad)
cmps
nop
adc
fsub
fwait
in
lea
push
xchg
jmp
cwde
int
mov
(bad)
nop
mov
dec
add
aam
mov
rcr
cmp
fisttp
pop
inc
cli
jle
sahf
xchg
cmp
push
add
or
cmp
mov
pop
sbb
or
je
test
jae
sub
ret
mov
dec
fs
pop
lods
out
popa
xchg
jb
mov
mov
ins
dec
sbb
pop
movs
retf
xchg
ficom
jecxz
push
popa
in
sbb
lods
leave
in
les
mov
jne
ja
out
int
add
jne
adc
(bad)
stc
dec
and
push
in
pop
mov
sbb
fist
mov
cmp
mov
adc
aaa
sub
ret
add
add
bound
add
jns
call
mov
rep
xchg
pop
sbb
js
sbb
lea
call
clc
and
jg
into
fld
jae
fstp
pop
stc
cmp
in
add
shl
xchg
ror
call
cdq
mov
outs
sub
lods
adc
imul
pop
mov
sbb
mov
out
imul
xor
pop
in
pop
pop
int
jno
mov
out
xor
js
test
(bad)
mov
imul
and
jg
pop
pop
out
mov
not
pop
into
adc
xchg
mov
jmp
jmp
and
loop
call
mov
pop
das
ds
movs
or
xlat
(bad)
push
sti
pop
mov
into
xor
hlt
nop
call
xor
retf
repnz
ins
jo
adc
jg
mov
add
sbb
dec
(bad)
adc
test
cmc
inc
daa
into
(bad)
dec
in
and
test
or
push
hlt
lock
cmp
jg
clc
xchg
popa
add
push
hlt
add
inc
(bad)
clc
mov
clc
jb
xor
push
lods
test
add
outs
cmp
dec
imul
aam
je
out
pop
cwde
mov
out
xor
dec
inc
push
rcr
les
ins
pop
dec
jmp
dec
leave
rcr
call
dec
mov
mul
xor
xchg
and
loopne
xchg
mov
mov
ret
int
call
cld
out
in
mov
bnd
aas
in
or
jg
fistp
scas
inc
ins
jge
arpl
popa
rcr
inc
or
cdq
sub
nop
mov
push
das
aam
mov
inc
xor
aam
or
mov
jecxz
std
mov
or
rcr
mov
sbb
xchg
xor
test
or
ins
mov
xchg
mov
xchg
ja
jne
movs
jns
lds
mov
xor
jbe
daa
movs
lds
jb
sar
sbb
dec
jb
bswap
sti
mov
xchg
mov
jne
push
push
mov
in
jne
icebp
cmp
fisub
pushf
(bad)
mov
xor
pop
jg
dec
loope
and
sub
pop
out
sub
(bad)
push
inc
das
out
push
dec
loope
sti
push
stos
jecxz
test
sahf
adc
imul
movs
enter
xor
(bad)
int
lods
mov
cdq
loop
popa
or
cmp
cmp
loop
inc
lock
sbb
sbb
imul
fbld
mov
dec
cwde
shr
jnp
jne
fcomp
aad
mov
adc
push
dec
int
push
gs
pusha
mov
xchg
sbb
out
xor
adc
out
mov
xchg
in
mov
ins
mov
xchg
fisttp
xchg
fcom
and
das
dec
xor
jno
out
nop
xchg
mov
movs
add
push
sub
add
sbb
jo
ret
js
loope
aas
xor
hlt
adc
pop
dec
mov
inc
mov
div
in
aam
enter
inc
scas
loope
aas
mov
pop
cdq
cmp
leave
pop
in
xchg
add
jg
push
pop
xor
fdiv
pop
in
fs
in
test
shl
(bad)
fs
sbb
pop
leave
add
(bad)
add
or
ret
lea
jp
fs
xchg
pushf
fdiv
retf
loop
fst
push
nop
aad
add
adc
push
repnz
imul
ds
inc
dec
or
popf
xchg
(bad)
fsub
ror
inc
cmps
mov
xor
mov
int3
lahf
ja
and
in
mov
cmps
dec
inc
(bad)
rcr
pop
sbb
mov
mov
and
sub
loope
xor
repz
mov
mov
cmp
stos
cs
imul
xor
data16
jg
dec
test
les
mov
push
add
aaa
push
cdq
dec
dec
mov
repz
push
inc
enter
aam
sbb
sbb
add
cwde
sbb
cmp
adc
stos
enter
movs
fs
fisttp
pop
dec
mov
das
push
mov
mov
jnp
jg
xlat
loop
ss
or
stos
add
lods
jb
lea
inc
out
or
jge
add
(bad)
retf
push
cli
clc
jmp
dec
ss
lock
or
cmc
or
xchg
das
mov
xor
in
ja
push
sub
popf
push
adc
sub
retf
test
jnp
enter
or
cwde
imul
mov
jae
mov
cs
mov
cmp
add
out
in
out
ret
mov
hlt
dec
enter
or
stc
jmp
call
add
mov
push
sbb
les
je
mov
inc
rol
fwait
mov
iret
adc
or
jge
imul
fsub
fstp
lods
in
mov
pop
mov
dec
pop
sbb
outs
stos
and
adc
movs
rcl
es
and
push
or
mov
jns
into
cwde
iret
sbb
arpl
jp
sbb
adc
daa
mov
pop
pop
ins
mov
and
push
inc
pushf
(bad)
push
std
mov
jo
in
das
shl
out
inc
push
mov
movs
iret
lahf
dec
mov
adc
in
popa
cs
mov
cwde
fld
fiadd
mov
jo
cs
add
imul
popa
stos
adc
adc
mov
sub
repz
mov
dec
dec
mov
pop
sahf
jle
xchg
xlat
movs
je
in
inc
inc
arpl
xchg
dec
xor
(bad)
aas
push
sub
dec
rcr
jecxz
call
jne
mov
stos
adc
mul
in
cdq
retf
jno
scas
mov
adc
jne
aaa
mov
mov
pop
movs
or
inc
cmc
fcom
mov
ror
inc
xchg
mov
mov
ds
jae
xor
or
and
jo
xor
scas
inc
xor
dec
dec
push
cmc
mov
or
lods
jmp
add
cmp
push
fwait
(bad)
cli
inc
repnz
jnp
xchg
sahf
pop
adc
cmps
push
hlt
outs
leave
jecxz
jge
pop
sbb
sbb
sbb
xchg
mov
stc
das
cmp
jae
ret
or
setg
aam
cdq
xchg
pop
sub
pop
xchg
xlat
repnz
jle
mov
jl
or
mov
adc
jmp
add
ins
inc
mov
adc
adc
sbb
sub
nop
xor
push
into
outs
rol
xor
lahf
fsubrp
icebp
jmp
lods
in
retf
mov
mul
jbe
push
add
int3
jg
ds
mov
mov
or
jl
sub
push
mov
adc
pop
aam
bnd
rol
outs
mov
ins
xchg
call
and
adc
adc
in
fld
jge
dec
ins
mov
mov
pop
scas
aaa
not
mov
mov
out
repnz
stc
outs
fistp
push
lods
mov
dec
sub
daa
fsub
cmp
into
xchg
out
lock
and
jo
ds
lock
outs
cmp
aam
sbb
sahf
enter
jns
jle
jl
pushf
adc
ins
push
dec
jbe
test
out
and
xor
aad
fisubr
aad
sar
jno
pop
outs
call
mov
add
push
or
std
rep
clc
bound
xor
push
ret
leave
dec
ds
es
cs
int
(bad)
popa
nop
sub
loop
in
mov
cdq
fsubr
fwait
jno
arpl
push
push
pusha
or
int3
push
cmp
mov
push
inc
(bad)
sub
cmp
jns
or
xchg
arpl
add
sbb
dec
mov
sub
ret
cmp
int
sub
adc
jb
push
aas
in
cmps
inc
aam
mov
int3
sbb
sub
push
(bad)
inc
sar
cld
repz
aas
(bad)
cld
repz
push
das
in
cmp
daa
shr
add
add
dec
inc
dec
inc
scas
inc
pusha
or
add
add
add
(bad)
(bad)
inc
add
add
add
add
add
add
jns
je
ins
cs
jb
ja
outs
addr16
push
gs
imul
xor
xor
inc
jne
je
jb
cmp
jb
ins
sub
push
jne
ins
imul
imul
bound
xor
data16
xor
fs
add
adc
gs
cs
jb
ja
outs
addr16
imul
add
popa
je
pop
add
add
add
add
add
lsl
add
mov
mov
inc
or
add
or
add
add
add
add
or
add
add
pusha
outs
rol
add
add
inc
dec
inc
add
mov
or
popa
add
jo
pop
jae
add
ret
add
push
ret
add
outs
test
add
adc
inc
inc
push
pop
inc
in
rol
loopne
mov
mov
mov
gs
fnstenv
pop
retf
mov
cmps
imul
outs
jge
enter
add
test
loopne
addr16
(bad)
mov
lahf
leave
dec
arpl
je
loop
mov
addr16
jns
and
out
(bad)
jo
mov
int
xchg
or
out
sar
out
jne
sbb
fwait
inc
scas
inc
lods
fidiv
xor
jecxz
retf
mov
aam
(bad)
test
add
test
xchg
cmps
pusha
scas
xchg
mov
xchg
aaa
push
retf
pushf
outs
jl
push
pop
cld
cdq
xor
mov
mov
ret
lods
push
jb
push
pop
jb
dec
add
mov
xchg
xor
cmp
sub
or
ja
sub
and
in
(bad)
or
mov
dec
mov
jnp
jg
test
mov
clc
mov
aam
jg
push
and
xor
aam
js
push
(bad)
or
jmp
jne
cmp
dec
mov
xchg
jl
adc
nop
mov
scas
int
mov
out
xchg
repz
cmp
mov
and
mov
hlt
dec
dec
repnz
xlat
mov
aad
cmp
aaa
add
jmp
or
and
inc
xchg
pop
dec
xchg
int
into
jmp
jg
inc
aad
std
(bad)
mov
(bad)
lods
in
in
fs
stos
xchg
cld
repz
sti
ror
add
dec
xor
push
mov
daa
push
jo
inc
adc
push
cmp
ja
sti
out
pop
hlt
mov
ins
sahf
ja
xchg
fisub
sahf
retf
sbb
adc
or
call
mov
out
imul
rcl
jbe
push
aam
clc
test
hlt
pop
out
inc
dec
mov
lods
xlat
dec
sahf
xchg
aam
mov
dec
retf
mov
dec
(bad)
out
push
in
sbb
or
jecxz
fwait
pop
(bad)
popa
xchg
sub
add
pop
cdq
mov
das
popa
inc
and
sar
sbb
sub
addr16
lea
sar
test
inc
pop
jp
jbe
pop
cmps
jmp
ins
lea
add
mov
mov
or
repz
mov
mov
xor
sub
add
inc
mov
test
shr
adc
(bad)
fwait
mov
ret
sbb
sbb
popa
enter
retf
jl
retf
out
push
sub
iret
popa
inc
loop
out
iret
dec
push
mov
xchg
pop
ficomp
adc
aaa
lds
jmp
push
and
ja
not
jg
jbe
nop
cmp
enter
push
mov
mov
push
mov
(bad)
inc
aas
push
pop
shl
push
out
retf
mov
test
ret
push
mov
aaa
shl
popf
imul
inc
or
jo
lea
push
retf
push
jl
cmp
cli
xchg
jbe
adc
aas
mov
out
aad
add
rcl
rcl
icebp
or
loope
loop
adc
stc
sub
xchg
adc
mov
enter
push
jo
popa
sbb
jmp
sub
call
outs
dec
clc
mov
xchg
aaa
int3
ins
repz
xchg
popa
movs
sub
out
jne
and
sti
and
jmp
clc
mov
scas
and
sbb
cmps
je
xor
sbb
repz
fiadd
iret
aas
mov
cmc
cmp
pop
movs
inc
xlat
in
mov
jns
xor
mov
xchg
fadd
dec
std
pop
out
(bad)
sbb
mov
cmps
in
cmp
jno
inc
push
std
sub
sub
xchg
out
pop
and
push
dec
ss
push
test
mov
lahf
inc
hlt
(bad)
lods
mov
inc
imul
sti
aad
imul
sub
in
(bad)
fld
xor
out
inc
lods
xchg
mov
add
or
or
imul
test
push
pop
sbb
outs
pop
addr16
mov
pop
mov
aam
push
xor
and
xchg
push
in
mov
cdq
leave
and
xchg
add
inc
(bad)
mov
int3
jecxz
test
adc
mov
pop
dec
sahf
outs
xchg
int3
stos
sbb
mov
add
faddp
dec
neg
out
cmps
adc
in
data16
or
jge
xchg
mov
ins
xchg
or
jnp
sub
je
mov
(bad)
daa
dec
jl
adc
hlt
cld
cmps
jnp
icebp
mov
xor
mov
shr
push
dec
aad
mov
shr
call
jae
pusha
test
jmp
jle
iret
fldenv
mov
jl
xor
ja
cmc
enter
and
or
(bad)
ss
mov
sahf
pop
sbb
mov
jo
xor
jl
and
inc
dec
pushf
jp
sar
xchg
sbb
call
nop
jmp
push
(bad)
dec
jg
push
repnz
pop
cli
mov
out
or
or
rcr
pusha
stc
push
or
sar
jo
jge
cdq
fadd
dec
fldenv
jne
sti
adc
cmp
add
cld
ret
push
daa
fwait
sub
in
fs
sti
daa
repnz
cmp
mov
aam
push
aam
and
xor
(bad)
sbb
push
mov
enter
push
(bad)
pop
sbb
iret
cli
jbe
jmp
in
fdivr
mov
dec
test
leave
and
mov
push
jo
inc
mov
aad
xchg
mov
int3
push
xor
sub
inc
pusha
stos
add
jbe
repz
pop
add
dec
in
xchg
outs
dec
fidivr
inc
ja
push
pushf
cmps
add
(bad)
inc
(bad)
cld
and
(bad)
sub
rcl
add
jecxz
and
dec
jecxz
push
in
or
mov
ror
jmp
dec
hlt
icebp
cwde
sub
push
push
pop
xchg
mov
and
mov
inc
scas
sub
sbb
and
rol
daa
loope
jnp
fld
sbb
std
and
pop
sti
sub
les
pop
pop
xchg
icebp
or
retf
sub
les
movs
into
cmp
push
movs
stc
jmp
mov
mov
int3
pop
jle
stos
cmp
nop
rcr
sub
fwait
int
rcr
loope
sub
in
mov
inc
in
repz
cdq
in
adc
dec
sub
or
push
inc
xor
xchg
pop
cmps
or
clc
xlat
mov
sti
ss
xchg
and
jbe
bound
pusha
test
dec
add
out
inc
push
pop
cmp
pop
pop
hlt
int
jne
add
mov
cmps
enter
mov
call
and
mov
ds
mov
test
pop
jmp
sbb
push
aad
gs
rcl
bound
fidiv
sbb
pushf
adc
int3
mov
adc
hlt
je
jmp
dec
and
mov
ret
sbb
or
mov
call
or
cli
test
mov
inc
fisttp
mov
mov
aad
mov
xchg
enter
jmp
sbb
bound
test
nop
xchg
jo
shr
xchg
adc
ins
icebp
clc
sahf
push
sahf
nop
xor
jp
pop
mov
mov
push
enter
(bad)
fwait
test
callw
outs
xchg
lds
jne
mov
cli
in
push
ret
push
mov
mov
pop
jae
fisub
data16
mov
(bad)
repz
dec
push
xchg
aam
test
lds
push
and
out
ins
xor
mov
adc
jbe
(bad)
xor
push
fnstenv
leave
stos
adc
xor
loopne
jno
push
fdivr
mov
adc
mov
sub
addr16
xchg
inc
aaa
mov
stos
ja
xor
sbb
mov
shl
shl
mov
adc
push
loope
cmp
stc
js
cmps
arpl
pop
pop
push
xchg
fisubr
(bad)
jns
out
mov
or
mov
mov
mov
jns
xor
aam
ins
test
adc
add
in
mov
xchg
dec
aas
sub
xchg
aas
mov
sub
xchg
add
std
lahf
imul
adc
jns
cmc
inc
cdq
or
dec
into
sbb
jg
lahf
xchg
mov
mov
sbb
cmp
pop
mov
sub
dec
dec
adc
add
and
mov
(bad)
xor
test
lock
clc
cs
jno
(bad)
dec
push
mov
or
(bad)
cwde
cmp
fwait
aaa
push
xor
lock
test
sti
sub
movs
enter
retf
daa
leave
repz
nop
mov
mov
enter
xor
pushf
and
aas
xchg
lds
pop
pop
outs
xor
mov
sbb
inc
add
in
inc
sub
gs
and
inc
inc
pop
repnz
in
push
inc
dec
cdq
pushf
inc
inc
out
adc
sub
sub
pop
or
dec
add
clc
(bad)
sahf
imul
push
sub
cmp
ss
shl
xchg
pop
mov
mov
in
out
cli
jae
cwde
stc
int
cmp
(bad)
(bad)
retf
ret
movs
test
xchg
and
ss
adc
dec
rcl
call
int3
sbb
test
xchg
add
push
arpl
jge
inc
mov
dec
imul
sbb
fadd
cld
xor
rcl
outs
div
inc
and
ins
lock
mov
js
movs
cmps
push
adc
pop
push
shr
lds
lock
icebp
test
inc
stos
mov
jg
inc
and
mov
int
es
mov
xor
mov
and
out
add
sbb
inc
and
jae
and
xchg
jl
cmp
mov
sbb
mov
mov
movs
dec
in
(bad)
dec
xchg
popa
mov
inc
cmp
jno
test
outs
dec
gs
xchg
jbe
and
push
loop
mov
xor
mov
push
pop
and
inc
pop
stos
jl
fst
loopne
sub
pop
jecxz
pushf
imul
mov
and
stos
xchg
and
jnp
mov
ret
fwait
adc
sub
int3
movs
in
add
mov
or
mov
and
das
mov
(bad)
std
gs
xchg
mov
jecxz
cmp
leave
movs
fisub
call
sub
cmc
imul
adc
in
fmul
mov
jg
call
rol
jb
sub
outs
push
jbe
cli
retf
fbld
popa
ret
xor
jnp
add
int3
imul
dec
out
add
(bad)
aad
enter
dec
ins
aas
shl
adc
dec
(bad)
jge
xlat
jb
rol
mov
jno
xchg
push
and
mov
cmps
pusha
add
push
push
in
or
inc
push
and
pop
daa
inc
stos
xchg
cmp
scas
imul
jne
(bad)
xor
std
adc
arpl
xor
xchg
out
xchg
ret
das
mov
ds
cmp
lea
inc
mov
stos
mov
loopne
jb
ret
push
sbb
(bad)
adc
ficom
xor
mov
stos
outs
lods
pop
das
mov
je
cmovns
inc
movs
movs
mov
ret
mov
mov
dec
bound
dec
clc
mov
xchg
loop
adc
test
pop
ret
cmp
and
dec
cmp
daa
push
push
stc
in
adc
(bad)
sbb
into
cmp
push
xchg
xor
or
out
pop
les
xchg
popa
cmc
cmp
push
add
inc
mul
mov
imul
fiadd
fwait
std
jecxz
adc
and
inc
jp
into
dec
sub
mov
sub
aam
cmp
imul
sbb
(bad)
retf
sub
lock
(bad)
jb
xchg
es
in
fidiv
fidiv
popf
sub
jp
add
cmp
stc
retf
dec
mov
mul
scas
or
pop
sbb
hlt
jbe
outs
ret
scas
aam
sar
data16
cmps
pushf
pushf
jge
retf
inc
mov
repnz
and
repz
add
test
mov
sub
vmwrite
xchg
inc
jns
pop
ret
jns
sahf
push
inc
and
inc
popa
dec
pop
lods
sbb
mov
retf
cmps
outs
fidivr
mov
movs
es
jmp
adc
addr16
push
dec
sbb
in
jge
cs
push
movs
test
dec
rcl
sub
dec
cmp
retf
stos
cli
push
push
fdivr
scas
pop
mov
xchg
cs
pop
or
add
xchg
jg
sbb
call
cmp
out
les
adc
push
stc
test
cmps
jl
idiv
aad
loopne
test
mov
sub
movs
loopne
imul
xchg
mov
std
jbe
jae
fdiv
cmp
(bad)
mov
inc
mov
stos
xor
cld
xchg
shr
icebp
sub
pop
fdiv
mov
dec
push
xor
fisubr
iret
xchg
dec
jne
mov
mov
mov
xchg
mov
mov
jl
mov
adc
retf
sub
fmul
mov
je
mov
xchg
das
mov
shl
dec
jp
loope
fxam
clc
js
pop
xchg
(bad)
retf
imul
add
push
les
fwait
xor
dec
(bad)
mov
xchg
xor
(bad)
loopne
jecxz
ja
mov
fcomp
(bad)
outs
lahf
jp
mov
pop
es
jle
loop
out
clc
pop
push
jmp
add
add
ja
daa
mov
inc
or
mov
loop
test
dec
fimul
jo
xor
aad
fsub
add
mov
imul
cs
add
fnstenv
(bad)
jo
mov
pop
scas
jle
in
and
mov
jle
je
inc
nop
stos
pop
mov
jb
pop
jnp
(bad)
mov
aad
inc
inc
(bad)
out
clc
mov
jbe
inc
scas
inc
cli
arpl
arpl
loopne
mov
push
movs
iret
lock
in
and
scas
jns
add
dec
jno
pop
pop
mov
imul
cld
mov
ds
sahf
or
cmps
pop
popf
fmulp
(bad)
ficomp
pop
shr
mov
dec
hlt
cmc
push
xchg
add
les
lods
das
dec
int
pop
fdiv
mov
and
mov
test
jb
stos
mov
pop
sbb
mov
js
xor
pop
mov
dec
sbb
xor
test
xor
ja
add
loop
popf
jge
ja
out
or
cli
fld
jnp
sahf
mov
xchg
inc
mov
jg
imul
aaa
test
mov
or
stos
dec
xchg
lock
sub
imul
pop
sub
test
data16
dec
popf
retf
scas
adc
outs
add
xchg
test
out
bound
pop
cdq
ret
js
inc
jae
adc
outs
ins
add
mov
push
pop
mov
cmp
jne
and
and
cwde
mov
fld
mov
(bad)
shl
mov
imul
(bad)
mov
xor
sub
mov
test
scas
fstp
je
sub
daa
neg
frndint
and
jp
push
push
or
les
enter
gs
mov
rcr
adc
dec
ins
arpl
add
inc
aas
fdivr
dec
call
add
add
iret
cwde
jecxz
stc
jnp
mov
mov
std
std
xchg
ror
ds
rol
inc
in
xlat
pop
int
mov
into
push
cmp
retf
shl
int
pop
xor
mov
js
push
movs
fimul
mov
sbb
jb
out
mov
in
dec
jmp
icebp
mov
dec
aaa
(bad)
in
std
mov
imul
retf
scas
jne
ins
cmp
sar
mov
push
and
test
sti
shr
popf
xchg
cmp
(bad)
cli
jmp
jmp
lock
pop
mov
cmp
dec
inc
dec
inc
scas
inc
pusha
or
add
add
add
(bad)
(bad)
inc
add
add
add
add
add
add
jns
je
ins
cs
jb
ja
outs
addr16
push
gs
imul
xor
xor
inc
jne
je
jb
cmp
jb
ins
sub
push
jne
ins
imul
imul
bound
xor
data16
xor
fs
add
adc
gs
cs
jb
ja
outs
addr16
imul
add
popa
je
pop
add
add
add
add
add
lsl
add
rcl
add
mov
inc
or
add
or
add
add
add
add
or
add
add
pusha
outs
rol
add
add
inc
dec
inc
add
mov
or
popa
add
jo
pop
jae
add
ret
add
push
ret
add
outs
test
add
adc
inc
inc
push
pop
inc
in
rol
loopne
out
fnstsw
popf
sar
int
jmp
call
ret
cmps
rdpmc
aaa
jne
cdq
pushf
scas
sti
fisttp
enter
add
jb
xlat
fldcw
js
ja
jle
mov
outs
clc
loopne
ins
mov
js
inc
sar
dec
das
pop
jae
push
cmps
sahf
jmp
aam
mov
jg
stos
not
leave
js
call
rol
js
jmp
mov
mov
sub
sti
fdivr
sbb
div
in
sahf
inc
xchg
aam
repz
es
sub
imul
mov
inc
lea
in
aas
inc
popa
lds
(bad)
cmp
or
sub
nop
xor
(bad)
pop
lods
sbb
out
push
xchg
pop
inc
push
inc
inc
xor
out
mov
jo
rcl
ins
gs
sub
ret
cmp
jbe
cmp
sub
add
arpl
jle
idiv
inc
pop
stc
fisub
outs
cmp
lock
jbe
data16
dec
pop
mov
test
sbb
inc
out
inc
loopne
shl
add
mov
or
sahf
add
addr16
cmps
cmp
xchg
xchg
or
pop
mov
outs
hlt
popa
call
pop
ret
adc
into
fdivr
mov
and
mov
jecxz
stos
fiadd
adc
jg
sub
mov
jecxz
fstp
cmp
pop
xor
xlat
jmp
retf
pop
retf
mov
call
jns
and
dec
add
aas
and
test
jle
mov
pushf
cmp
sub
in
movs
arpl
stc
inc
mov
mov
and
ror
cmp
jmp
dec
imul
aam
push
xchg
enter
pop
test
cmps
inc
cmps
or
inc
sub
mov
xor
aas
imul
add
mov
hlt
xor
imul
cmp
jle
aaa
jecxz
sti
cmp
stos
inc
arpl
jmp
mov
mov
jle
dec
dec
sbb
mov
retf
and
sub
clc
pop
jno
jmp
daa
test
or
sbb
cmp
mov
jmp
mov
add
add
fld
jge
je
popf
ds
mov
and
push
push
ss
sbb
pop
inc
movs
leave
dec
cmp
xchg
and
xchg
retf
not
out
pop
pop
jae
std
retf
hlt
test
inc
inc
popf
not
ins
dec
and
add
dec
cmp
cmp
dec
ins
aad
cli
hlt
shl
test
mov
lahf
enter
mul
mov
mov
push
fimul
jmp
hlt
push
fcmovnb
dec
mov
push
xacquire
mov
or
inc
fcmovnb
repz
xchg
dec
call
enter
(bad)
shl
outs
jbe
sub
adc
jbe
mov
ss
pop
popf
mov
pushf
jg
(bad)
mov
sbb
push
shl
ret
sub
lds
xchg
jp
call
jb
clc
inc
dec
jp
(bad)
mov
add
cdq
sar
adc
or
sub
jae
sbb
(bad)
xlat
call
iret
data16
mov
jbe
stc
pop
cdq
ret
cmp
inc
dec
xchg
in
test
adc
shl
jne
(bad)
cwde
cld
cmp
push
cmps
ins
aas
xchg
pop
pop
or
dec
cmp
or
ss
mov
(bad)
js
lahf
js
xor
sub
pushf
or
scas
cmp
popf
push
xchg
mov
push
and
outs
pop
sub
dec
cmp
mov
test
icebp
cmp
jl
and
dec
cmps
pushf
xor
dec
cmp
das
or
lahf
fnstsw
cmps
retf
iret
cmps
into
pop
out
(bad)
xor
cwde
sbb
cmc
mov
sub
enter
cli
int3
lds
push
xor
or
pop
add
fs
cmc
mov
jle
hlt
jge
or
jle
dec
out
mov
in
cmc
push
dec
ins
sbb
int3
mov
loope
pop
jb
retf
xchg
js
aas
stos
inc
xchg
pusha
iret
test
das
sub
cdq
(bad)
mov
sbb
mov
jmp
leave
push
mov
fwait
xor
cld
mov
xchg
inc
inc
popa
mov
sbb
dec
ins
imul
popa
dec
pop
jns
into
outs
pop
xor
jmp
(bad)
pop
mov
arpl
dec
cmp
call
mov
mov
test
ret
jecxz
mov
stc
sbb
fwait
xlat
mov
cmc
outs
xchg
aad
jmp
xchg
call
pop
jl
jl
aad
or
aam
mov
pop
mov
scas
test
push
pop
cmps
jge
mov
(bad)
add
data16
enter
xor
mov
pop
in
jbe
push
and
pop
xor
(bad)
jo
test
mov
(bad)
imul
xchg
sar
sbb
fwait
sbb
lods
(bad)
jnp
push
out
test
js
jecxz
jl
loop
shl
sub
stos
pushf
aaa
hlt
adc
jmp
std
je
test
jno
mov
mov
adc
movs
sti
add
mov
dec
in
cmp
inc
jl
fistp
dec
(bad)
cmps
jnp
or
and
inc
and
mov
cmp
xchg
das
cmp
inc
les
mov
pop
pop
jmp
pop
jo
movs
popf
lods
(bad)
(bad)
lds
rcl
iret
(bad)
jb
mov
push
pop
call
ficom
xchg
jmp
icebp
dec
pusha
div
push
por
mov
lods
jmp
stc
test
xchg
xchg
outs
gs
sub
sub
mov
bound
les
outs
xor
clc
psrad
dec
push
loopne
sbb
jge
pop
js
std
daa
fld
dec
sahf
(bad)
aas
test
ror
sub
mov
popf
dec
cmp
or
retf
mov
mov
sub
jo
fstp
lods
inc
inc
mov
ror
fild
into
pusha
xor
sbb
dec
jnp
push
mov
jbe
xchg
jmp
mov
or
repnz
in
neg
adc
push
xor
(bad)
outs
pop
push
adc
jmp
cmp
test
pop
mov
popf
mov
mov
cmp
sbb
scas
mov
pop
cwde
bnd
and
fs
cmc
lea
dec
iret
mov
fxch
outs
jl
lods
mov
jnp
ja
add
mov
movs
loop
outs
sub
mov
mov
jo
jle
mov
repnz
jae
fisttp
xchg
mov
mov
adc
cld
sbb
pop
cs
daa
in
mov
(bad)
scas
dec
pop
aam
(bad)
or
jg
fisub
fs
cmps
int3
nop
inc
xor
and
out
ds
or
mov
jnp
ficom
enter
sub
pop
adc
clc
test
mov
int
push
sub
out
pop
sub
mov
pop
sahf
xlat
gs
movs
je
add
pop
pop
jecxz
or
clc
xlat
cmp
out
xchg
retf
in
fild
fdivr
sbb
fxch
jo
mov
enter
jo
cmp
push
xchg
jmp
retf
push
or
test
or
xchg
inc
popa
jnp
shr
adc
pusha
stos
sbb
sbb
inc
pop
mov
xlat
inc
pop
es
jge
cmp
xchg
movs
push
mov
jmp
add
xchg
dec
sub
(bad)
rcr
scas
mov
je
jmp
loop
mov
out
pop
push
xchg
mov
mov
stc
sub
inc
in
add
mov
arpl
cmp
pop
in
xchg
mov
not
ins
mov
jnp
jmp
and
repz
push
xchg
dec
xchg
jb
xor
or
retf
add
and
inc
aaa
arpl
test
aas
fnstcw
rcr
imul
(bad)
pop
mov
out
jo
xor
pusha
lea
jmp
adc
frstor
add
mov
jae
xchg
or
loope
mov
jl
xlat
cmp
aad
push
mov
add
lea
inc
popf
test
movs
or
xor
inc
adc
pop
(bad)
fisub
out
test
ins
popf
mov
(bad)
out
jo
int
das
mov
mov
push
or
cmp
aad
mov
mov
outs
ja
mov
inc
fwait
mov
pop
inc
inc
outs
imul
xor
sub
sbb
mov
movs
inc
and
xlat
stos
test
lea
call
cmp
and
push
or
jne
retf
adc
int3
ss
pop
(bad)
clc
mov
jp
lds
retf
jo
push
push
pusha
into
ins
jg
mov
xchg
xor
in
sbb
pop
push
sub
sbb
cmp
stos
and
adc
aad
addr16
mov
mov
test
mov
or
test
dec
cmps
add
lock
xor
out
push
test
lods
jge
fwait
or
mov
test
jmp
cmp
xchg
retf
test
mov
mov
pop
mov
adc
jmp
dec
leave
retf
dec
or
xchg
ret
outs
jmp
into
enter
mov
fisttp
push
enter
inc
cld
push
jl
test
std
mov
cld
xchg
cmp
adc
jo
adc
call
fcomip
sub
mov
in
(bad)
push
hlt
add
jns
jmp
js
dec
mov
(bad)
(bad)
cmp
adc
mov
aaa
cs
fadd
xor
cwde
sub
pop
jno
mov
pop
sub
fnstsw
jecxz
sbb
test
push
push
xor
out
sub
push
stos
rol
xchg
imul
js
pop
adc
les
cdq
mov
int3
push
adc
dec
pop
call
adc
mov
push
stos
push
push
daa
push
push
sub
dec
mov
adc
cmp
sbb
cwde
(bad)
and
jl
push
add
adc
add
mov
dec
aad
into
add
out
js
(bad)
mov
das
sub
xchg
out
(bad)
hlt
(bad)
data16
push
pop
repnz
cmc
adc
xor
lahf
fisttp
inc
dec
test
or
(bad)
or
rcl
xor
enter
sbb
adc
push
adc
fdivr
std
outs
int
jno
stos
inc
dec
retf
sub
or
rcr
lock
xlat
xor
jb
xlat
mov
repz
popf
sbb
fwait
das
sbb
out
je
std
in
loopne
mov
out
out
into
stc
ds
xchg
mov
push
(bad)
hlt
int
(bad)
in
mov
and
idiv
adc
(bad)
xchg
fcomp
sub
(bad)
dec
jmp
or
frstor
das
(bad)
aam
sub
xor
cmp
icebp
or
cmp
into
rcr
test
xor
not
jmp
push
call
int
jns
pop
sbb
and
cmp
clc
cmps
jl
jae
stc
mov
push
adc
push
mov
xor
or
xor
iret
aas
add
repz
xor
push
mov
add
add
or
pop
or
repz
sub
mov
dec
mov
je
mov
jmp
pop
xor
dec
addr16
push
mov
shr
std
stos
sub
outs
movs
jmp
pop
ror
inc
sbb
adc
mov
stc
push
call
dec
mov
sub
imul
mov
sbb
cmp
sahf
sbb
aam
call
loop
sahf
(bad)
ds
cmp
sbb
adc
hlt
int
mov
mov
pop
sub
sub
push
sbb
and
mov
lock
clc
xchg
je
fst
mov
jl
fcmovnb
mov
cs
pop
mov
iret
cld
aaa
adc
pop
xchg
and
sbb
mov
aam
aaa
sub
mov
outs
(bad)
call
mov
mov
cmps
pop
sbb
in
cld
push
jmp
push
sub
cmc
ds
or
push
cmps
and
push
jg
test
adc
push
push
cmp
xor
xchg
popa
xchg
out
sbb
add
popf
dec
mov
call
ja
call
add
out
retf
jecxz
dec
push
ins
sbb
mov
add
test
nop
inc
call
pop
aas
lahf
mov
pop
or
cmp
les
sbb
mov
adc
addr16
adc
gs
cmps
hlt
loop
scas
xor
mov
bound
adc
xor
mov
xchg
(bad)
out
inc
ficom
test
cmc
jae
gs
pusha
cmp
jo
and
dec
fsub
pop
(bad)
mov
pusha
in
mov
mov
jbe
or
mov
cmp
fwait
inc
and
pop
loopne
retf
fidiv
and
and
loop
push
mov
scas
stos
(bad)
in
fist
and
fsub
fsub
xchg
lock
mov
mov
dec
mov
test
int
dec
icebp
sbb
push
(bad)
call
mov
xchg
imul
or
es
loop
movs
inc
rcl
fisub
mov
adc
sub
imul
inc
fwait
mov
or
cmp
repnz
dec
mov
retf
nop
add
cs
gs
dec
jg
push
pop
cmp
in
jo
and
cs
rcl
xor
lea
mov
xchg
inc
jo
retf
and
add
xchg
xor
int
loop
leave
rcr
cmp
xchg
add
jl
idiv
pop
sub
adc
ror
mov
mov
push
cmc
cmp
mov
fst
cmp
add
int3
repnz
lds
xchg
push
lahf
cmp
add
cmps
das
pop
ja
movs
dec
or
sahf
pusha
out
clc
sub
das
mov
cli
lahf
mov
(bad)
cmp
pop
leave
ficom
clc
xor
sub
mov
stos
xchg
add
sub
ins
adc
mov
mov
or
xor
retf
nop
cmp
retf
pop
add
arpl
mov
les
sbb
cdq
pop
das
imul
test
cli
ret
push
retf
mul
cmp
xor
sti
push
mov
push
in
stc
xchg
arpl
or
sbb
addr16
(bad)
adc
cmp
mov
mov
or
xchg
(bad)
xor
mov
or
jae
aaa
mov
inc
shl
in
(bad)
aam
cli
or
imul
mov
and
mov
jo
lods
fimul
mov
fisubr
mov
dec
xlat
js
cli
fsub
sbb
lock
mov
ss
or
jp
mov
xor
clc
mov
dec
in
call
push
or
mov
mov
push
popf
cmp
lahf
jbe
inc
sub
lea
dec
pop
push
stc
in
scas
mov
(bad)
xlat
retf
add
lea
ror
int3
fisubr
outs
(bad)
xor
mov
nop
or
shr
sbb
call
pop
mov
in
push
adc
jg
push
rep
xor
mov
mov
adc
and
xchg
and
add
(bad)
call
stos
cmp
jbe
push
ret
inc
jo
loopne
xchg
xlat
mov
and
pusha
in
(bad)
in
in
test
call
or
xor
(bad)
push
push
pushf
in
or
stos
std
(bad)
out
cmp
dec
arpl
imul
fdivr
les
sbb
and
js
into
pop
sub
pop
push
movs
test
dec
mov
into
xchg
xchg
inc
inc
jg
xchg
pop
or
repz
aas
(bad)
cld
repz
aas
(bad)
cld
pop
add
add
add
add
dec
inc
dec
inc
scas
inc
pusha
or
add
add
add
(bad)
(bad)
inc
add
add
add
add
add
add
jns
je
ins
cs
jb
ja
outs
addr16
push
gs
imul
xor
xor
inc
jne
je
jb
cmp
jb
ins
sub
push
jne
ins
imul
imul
bound
xor
data16
xor
fs
add
adc
gs
cs
jb
ja
outs
addr16
imul
add
popa
je
pop
add
add
add
add
add
lsl
add
mov
mov
inc
or
add
or
add
add
add
add
or
add
add
pusha
outs
rol
add
add
inc
dec
inc
add
mov
or
popa
add
jo
pop
jae
add
ret
add
push
ret
add
outs
test
add
adc
inc
inc
push
pop
inc
in
rol
loopne
out
pushf
sahf
into
jmp
into
sbb
es
mov
cwde
out
jmp
shl
rol
in
in
call
lldt
cs
scas
mov
jae
aas
mov
and
idiv
cmc
fstp
outs
std
push
jbe
pop
out
jmp
sti
add
pop
stc
sbb
call
sub
cdq
jmp
adc
out
(bad)
cld
push
movs
add
hlt
xchg
jmp
lahf
dec
or
fisttp
inc
shl
push
jmp
repz
int
mul
push
jns
push
cmp
adc
stc
ret
popa
movs
cmp
mov
add
dec
adc
movs
jae
add
cmp
fmulp
out
fsubp
gs
neg
cmp
cmps
jo
lods
test
jecxz
fwait
pop
out
pmaddwd
or
es
retf
repnz
in
mov
dec
repnz
out
hlt
or
mov
shr
push
jae
cmps
mov
shl
and
imul
mov
in
mov
pop
dec
mov
xor
adc
or
or
mov
sub
xchg
mov
or
jmp
movs
nop
aaa
(bad)
mov
ret
shl
sub
jp
jo
mov
and
retf
adc
retf
cdq
push
repz
or
ins
fs
mov
xlat
icebp
jo
fsub
mov
shl
sbb
jl
add
std
in
jmp
xor
mov
cmps
cmps
xchg
sbb
ret
retf
hlt
xor
jbe
daa
lea
cld
ins
jbe
jmp
retf
mov
test
out
push
js
jge
jmp
leave
dec
mov
je
js
cmp
jo
add
mov
dec
and
jmp
iret
jns
sub
xlat
sar
mov
cmc
mov
scas
adc
adc
cli
psubsw
sub
test
mov
push
aam
xor
adc
ss
xchg
xchg
imul
outs
and
add
add
mov
sbb
jle
pop
jb
jns
aad
out
or
je
retf
add
pop
test
xchg
in
ret
rcr
cwde
(bad)
fisub
sti
cmp
rcl
rol
hlt
test
outs
and
fadd
out
push
add
xchg
sub
fist
cwde
pop
ss
push
push
test
dec
(bad)
into
movs
(bad)
mov
xchg
sbb
test
(bad)
mov
movs
mov
ss
repnz
nop
arpl
mov
xchg
rcr
inc
fdiv
xchg
jmp
sub
inc
repnz
cdq
and
ds
sbb
pop
inc
test
or
dec
movs
lock
jnp
inc
call
repz
and
cli
dec
mov
jmp
mov
jno
imul
test
xchg
adc
push
icebp
xor
fs
jp
in
jmp
mov
sub
cli
xlat
int
jae
sub
adc
cmp
jns
mov
jne
pop
std
push
xchg
ds
xchg
sahf
aas
test
div
pop
cmp
or
mov
ss
std
outs
repnz
inc
jnp
cdq
mov
ds
jmp
outs
fild
dec
sub
push
aam
cmp
test
and
inc
cmps
and
loope
push
lahf
mov
push
sbb
in
gs
mov
sub
fstp
std
push
lds
jle
mov
pushf
repnz
inc
mov
xchg
or
popa
fimul
test
loopne
sbb
mov
pop
xchg
pop
dec
out
sti
dec
push
jg
jo
xchg
retf
jmp
test
sub
inc
pop
pop
push
repz
loop
xchg
(bad)
sub
retf
(bad)
mov
and
adc
push
mov
fisub
ret
lock
cmp
pusha
and
mov
cmp
sahf
ret
inc
ss
sbb
push
fisubr
push
sbb
mov
cli
cmps
sub
je
fcom
push
inc
push
xchg
jg
xchg
lock
rcl
or
rcl
cmp
push
xor
in
dec
mov
xor
leave
cmps
call
aam
movs
xor
in
push
push
pop
sbb
hlt
inc
add
fstp
pop
ins
mov
cmp
push
cmp
call
lods
inc
adc
jecxz
nop
xor
sti
bound
sbb
test
mov
idiv
cmps
rcl
adc
add
daa
retf
cmp
sbb
or
mov
jmp
and
retf
inc
call
ins
add
addr16
xchg
cdq
fst
inc
imul
imul
lods
gs
jne
xor
sub
jns
in
inc
ins
add
int
jp
mov
test
int3
ins
out
in
cmc
scas
sub
mov
sbb
test
or
sub
loope
xchg
adc
jl
and
mov
mov
int3
movs
xor
shl
in
jne
mov
out
test
mov
repnz
sub
(bad)
mov
pop
dec
ja
adc
sub
cld
push
mov
pop
retf
mov
scas
push
adc
ret
or
dec
pop
mov
push
inc
xchg
cmp
jp
push
push
dec
test
cld
push
add
shl
imul
cs
dec
jne
and
ja
jle
adc
clc
lods
sti
sub
movs
xor
leave
pop
jp
fbstp
add
xor
dec
test
dec
loopne
or
std
rol
xchg
shl
mov
(bad)
aas
cmp
sub
cmp
and
push
mov
pop
jmp
ror
cs
gs
xlat
jl
jmp
mov
cmp
int3
repnz
xor
xchg
aad
jmp
shl
test
test
jmp
sbb
sbb
push
xor
aaa
and
dec
jne
mov
out
imul
popf
and
test
das
lea
dec
sub
adc
mov
xor
lods
nop
xchg
(bad)
aas
mov
fisttp
xor
enter
imul
cmp
xchg
pusha
xor
cwde
out
imul
cli
fucomip
scas
repnz
in
jo
icebp
nop
ins
sar
sahf
fst
xchg
call
out
mov
fsubrp
cli
je
loope
jp
pop
cmp
cmp
sar
mov
daa
(bad)
dec
shr
sahf
bound
scas
push
mov
xor
ror
ins
sbb
mov
repnz
and
mov
adc
gs
repz
sbb
arpl
ds
dec
inc
and
push
int3
out
or
push
xchg
jl
pop
(bad)
dec
adc
out
das
add
push
jnp
(bad)
jl
ja
scas
cmp
ror
inc
call
fist
rol
(bad)
scas
bound
xor
test
mov
sbb
inc
pop
cld
das
int3
cld
mov
dec
xor
pop
loope
lods
or
inc
les
cmp
mov
pusha
mov
fucomi
pop
pusha
cmp
ds
push
xor
lea
iret
arpl
test
jns
mov
add
in
pop
and
in
cmp
lods
cmp
xor
fimul
lods
add
pop
repnz
mov
cmp
test
jg
ror
xchg
test
lods
jp
ins
lods
mov
adc
gs
jae
popa
sub
sbb
sti
mov
rol
fldenv
push
ss
aad
out
loope
jb
std
and
ja
pop
mov
or
push
lahf
dec
mov
repnz
sbb
push
in
cmp
cmp
sub
xchg
out
out
retf
(bad)
cmp
mov
push
jnp
scas
jg
(bad)
scas
movs
out
and
jns
ja
add
sub
jp
in
push
idiv
gs
arpl
mov
xlat
xor
sub
dec
(bad)
mov
cmps
retf
outs
mov
stos
ds
sbb
js
push
xchg
pop
xchg
mov
cmp
(bad)
dec
in
outs
mov
push
xchg
retf
outs
enter
sti
out
sub
push
jmp
dec
jo
sbb
pop
and
pop
mov
adc
inc
or
outs
jo
jecxz
leave
test
adc
pop
push
pusha
cmc
das
dec
inc
into
mov
xchg
stc
(bad)
mov
inc
daa
mov
lahf
inc
mov
stc
jno
cmp
dec
jae
(bad)
sub
cmps
shl
call
jnp
stc
mov
adc
mov
imul
sub
xchg
outs
stos
enter
pop
out
aaa
pop
popa
sbb
jns
xchg
pop
mov
mov
movs
movs
xchg
mov
cdq
ror
jle
xor
cdq
stos
(bad)
(bad)
mov
rcr
scas
dec
mov
add
cmps
xchg
test
push
fimul
mov
mov
cmp
add
push
xor
in
push
pop
jge
movs
jmp
sbb
pop
lds
lahf
inc
jmp
push
inc
sbb
arpl
adc
test
mov
call
cmp
xor
sub
push
dec
test
xor
xchg
ins
mov
(bad)
fidivr
das
movs
pop
push
pushf
neg
add
fs
in
mov
xor
pop
int3
and
loop
pop
and
cdq
cwde
and
push
and
sbb
xor
push
pop
dec
dec
test
movs
push
sub
imul
adc
or
sbb
dec
mov
mov
cmps
rol
mov
push
xchg
cdq
xor
push
int3
mov
pushf
fsub
loope
cmp
shl
into
add
shl
lds
push
mov
pop
sbb
retf
arpl
mov
push
not
inc
imul
and
inc
jp
jne
add
adc
cli
fsub
std
push
std
cwde
mov
int3
sub
mov
xor
push
xlat
jbe
mov
frstor
and
movs
aas
and
int3
or
(bad)
js
ins
inc
and
mov
pop
push
sub
gs
fdiv
mov
fs
xor
imul
push
inc
mov
scas
cwde
cmc
sbb
xor
lea
gs
mov
cs
out
inc
xchg
jo
or
adc
pop
ins
loop
add
push
xor
jle
(bad)
jecxz
push
loope
jmp
imul
sbb
cmps
ins
cs
mov
push
jmp
movs
lock
sub
and
push
int
mov
or
loop
adc
jecxz
push
jmp
shl
and
rcl
dec
or
daa
mov
inc
sahf
fs
stc
mov
and
mov
mov
dec
enter
and
popa
mov
push
mov
inc
imul
cmp
mov
jb
repz
push
repz
fild
cwde
mov
cmp
movs
jp
push
push
sub
ret
sub
or
sbb
ds
in
and
jp
shl
xchg
pop
loop
or
jmp
test
mov
pop
in
cli
cwde
movs
mov
dec
ficom
xchg
inc
aas
test
(bad)
jo
test
lds
pop
xchg
jp
scas
cmc
les
int
aad
lds
adc
popa
inc
sub
scas
add
sbb
repnz
mov
xor
out
and
xchg
add
jg
popa
into
add
mov
mov
and
xor
mov
pop
out
fs
or
dec
cmp
cmc
ret
xchg
outs
cmps
mov
std
or
addr16
sbb
mov
loop
xchg
inc
movs
jge
stc
sbb
dec
jg
adc
push
fcmovbe
stos
iret
sub
push
out
mov
stos
mov
loop
sti
iret
cwde
ret
and
addr16
iret
stos
fwait
repnz
and
add
les
and
addr16
addr16
ja
in
ret
int
cmp
mov
sbb
inc
test
pop
shr
jecxz
popf
mov
call
gs
dec
movs
sar
test
out
mov
mov
mov
dec
sub
lods
retf
xor
ins
popf
and
(bad)
and
aam
fcmovb
test
stc
repnz
ins
(bad)
ds
push
or
cwde
lahf
js
aas
imul
mov
xchg
pop
into
xor
sub
ret
mov
stos
fwait
popf
aaa
cld
adc
(bad)
aam
pop
xor
sub
mov
inc
dec
mov
and
imul
inc
mov
and
jl
lds
aaa
sti
or
out
ja
loopne
retf
call
mov
(bad)
aad
das
out
jle
fisubr
xchg
mov
(bad)
leave
pop
jmp
ja
shl
xor
dec
or
xchg
jmp
retf
les
pop
scas
and
fistp
pop
jecxz
and
test
inc
mul
lea
fidivr
fwait
add
jns
mov
fstp
mov
mov
loop
int3
jle
xchg
into
dec
adc
int3
out
retf
inc
cmp
bound
nop
ror
or
test
cmps
push
xchg
popf
pop
xlat
xchg
aas
adc
jmp
adc
hlt
ret
js
dec
inc
pushf
dec
dec
test
mov
int3
mov
mov
leave
popf
out
mov
js
mov
mov
or
mov
int3
cmp
cmp
fstp
mov
jmp
cmc
fiadd
arpl
ror
push
mov
push
sub
aad
sbb
jecxz
je
icebp
(bad)
in
out
out
aam
inc
xchg
cmp
lahf
jl
stos
retf
jge
pop
dec
dec
push
leave
jo
push
imul
mov
das
dec
repz
inc
test
fmul
popf
ss
iret
adc
ret
out
shl
add
dec
xchg
xchg
cld
jmp
das
cmp
sub
std
sub
call
jge
xchg
pop
cmp
inc
pop
mov
in
mov
dec
inc
pop
cs
sbb
xor
ja
scas
xor
call
mov
inc
sbb
iret
dec
out
sbb
in
mov
or
mov
repz
lea
jb
std
fwait
sbb
pop
mov
cmp
arpl
mov
xor
fidivr
push
loopne
sub
sbb
cmp
int
movs
sub
pop
int
cmps
dec
sbb
repnz
push
xlat
scas
hlt
int3
mov
rol
sub
mov
aad
aam
into
adc
push
fbld
imul
adc
or
mov
retf
adc
push
dec
leave
pop
xor
rcr
leave
push
inc
sub
dec
mov
out
xor
in
xchg
inc
ja
rol
nop
xchg
dec
mov
and
and
push
xchg
jae
dec
adc
pop
out
sub
inc
cdq
sub
out
pop
inc
gs
leave
outs
push
cmp
mov
das
leave
scas
xchg
jg
rcl
mov
ffreep
jns
popa
xchg
nop
jne
xchg
inc
inc
movs
or
pushf
mov
sbb
cmp
js
fild
sbb
mov
push
jl
movs
mov
sbb
jecxz
scas
cli
xchg
mov
push
(bad)
xchg
lods
cmp
jne
inc
xchg
xchg
inc
aaa
pop
cmc
lods
mov
pusha
aam
aas
xor
push
mov
jle
pop
sti
cdq
cdq
push
pop
xor
fisttp
xor
fcomp
sbb
or
loop
and
ret
popf
lods
mov
scas
push
xor
fcom
push
xchg
cdq
or
faddp
cmp
in
jp
pop
outs
adc
mov
das
or
loop
cmp
jb
shl
sbb
fs
add
jg
repz
(bad)
cld
out
(bad)
stc
iret
push
push
push
shl
push
test
inc
dec
inc
scas
inc
pusha
or
add
add
add
(bad)
(bad)
inc
add
add
add
add
add
add
jns
je
ins
cs
jb
ja
outs
addr16
push
gs
imul
xor
xor
inc
jne
je
jb
cmp
jb
ins
sub
push
jne
ins
imul
imul
bound
xor
data16
xor
fs
add
adc
gs
cs
jb
ja
outs
addr16
imul
add
popa
je
pop
add
add
add
add
add
lsl
add
mov
mov
inc
or
add
or
add
add
add
add
or
add
add
pusha
outs
rol
add
add
inc
dec
inc
add
mov
or
popa
add
jo
pop
jae
add
ret
add
push
ret
add
outs
test
add
adc
inc
inc
push
pop
inc
in
rol
loopne
dec
fwait
sbb
cmp
int
dec
fstp
out
data16
int3
je
ss
sar
xor
out
pop
jns
cmp
inc
xor
loopne
pop
push
aas
xchg
jo
idiv
es
sbb
mov
js
scas
push
(bad)
sub
scas
stos
mov
jmp
rol
xchg
ins
(bad)
push
outs
inc
xor
(bad)
imul
xor
mov
cmc
fld
inc
out
jbe
jmp
loop
aaa
xor
leave
jnp
xor
out
stos
sbb
inc
pop
push
fstp
data16
pop
ret
arpl
mov
loope
fsubr
call
sahf
ins
and
cdq
ficom
ss
push
retf
xor
jg
and
fistp
das
mov
mov
int3
inc
rol
xor
es
and
or
aas
loopne
sub
sbb
in
cmp
inc
jp
ins
jo
push
jae
adc
xor
sbb
movs
mov
dec
dec
inc
dec
xchg
xchg
rcr
retf
pop
popa
pop
lods
(bad)
out
iret
imul
pop
mov
jmp
adc
sar
dec
stc
pop
dec
or
push
mov
test
cs
cmps
mov
popf
cmc
xor
pop
jns
data16
int
rcr
xchg
push
imul
imul
xchg
dec
dec
loope
cmpxchg
mov
(bad)
adc
or
outs
fs
sub
cmps
das
mov
dec
cmovnp
in
dec
daa
call
xchg
icebp
jecxz
sub
mov
xor
arpl
inc
dec
add
jo
sbb
call
imul
add
push
fbld
cmp
pop
cmp
push
cmp
dec
das
mov
jg
rol
pop
cmp
jns
sbb
dec
pop
mov
fistp
cmps
not
mov
mov
(bad)
cmc
mov
push
xchg
test
lock
jne
out
shr
jle
dec
sti
jge
(bad)
fldenv
sbb
sbb
jmp
inc
fadd
jo
dec
and
repz
retf
daa
into
(bad)
adc
push
mov
out
aad
sar
ficomp
add
or
scas
jge
xchg
adc
or
push
(bad)
or
jno
and
shr
sar
jge
aaa
jmp
push
jb
test
ret
gs
push
mov
bound
and
add
fadd
push
hlt
pop
cmp
push
cmp
inc
xor
fild
mov
das
pop
inc
mov
adc
out
ins
mov
mov
pop
mov
adc
sub
das
mov
sbb
es
xor
inc
mov
xor
add
adc
aaa
jns
arpl
cmp
ins
mov
fisubr
sbb
in
push
mov
xor
imul
(bad)
std
je
mov
xor
sbb
xlat
sub
adc
adc
adc
xor
(bad)
cli
(bad)
xchg
dec
dec
jno
je
mov
icebp
and
mov
std
adc
sbb
mov
gs
gs
jb
fimul
mov
cli
mov
call
popa
outs
adc
xor
in
in
mov
fld
sar
imul
sahf
add
scas
add
movs
jle
mov
aam
nop
int
dec
je
mov
fwait
adc
cmp
pop
sub
or
inc
pop
outs
repnz
(bad)
cmp
call
or
mov
outs
add
(bad)
dec
or
sar
fisttp
fisub
div
ins
xor
int
inc
es
push
xchg
mov
or
in
push
push
pusha
push
xchg
and
push
das
fbstp
xor
cmp
cmc
call
dec
push
out
cmp
mov
lods
(bad)
pop
lea
jp
sbb
xor
movs
and
fs
jae
sub
sub
push
cmp
and
pop
jmp
mov
sbb
rcl
ss
test
push
cwde
(bad)
(bad)
sbb
inc
inc
fiadd
movs
mov
pop
daa
mov
jns
push
and
inc
repz
jp
dec
mov
mov
cld
and
mov
dec
lods
inc
movs
push
out
scas
jno
mov
add
aam
les
(bad)
sar
pop
pushf
out
sti
out
sbb
mov
mov
push
inc
mov
and
mov
push
fistp
cmp
(bad)
jle
pop
ficom
xchg
sbb
sbb
or
(bad)
in
push
and
paddb
sub
into
pop
scas
fsubr
loope
jmp
jae
mov
add
xchg
dec
pop
jecxz
pop
rcl
ret
xlat
sbb
out
iret
pop
jge
cmp
ss
xor
jmp
test
dec
les
ins
adc
fstp
hlt
jl
and
dec
mov
mov
mov
fiadd
arpl
push
int
cmp
mov
(bad)
outs
pop
loop
ret
daa
mov
out
mov
mov
repnz
scas
lock
push
adc
cs
inc
ret
test
shl
ror
mov
lds
out
xor
mov
jp
les
sub
fisubr
stc
jp
add
pop
add
int3
jbe
cmp
mov
enter
shl
cmp
sub
xor
mov
inc
cmp
and
imul
sar
(bad)
fdivr
out
lods
repnz
sub
ret
push
adc
pop
adc
mov
adc
stc
clc
leave
push
int3
sahf
sbb
and
lock
inc
adc
pop
dec
dec
fsubr
add
add
pop
jno
or
xchg
out
inc
cmp
push
les
push
jnp
scas
int
call
push
cwde
xchg
jae
das
add
(bad)
xor
mov
inc
in
push
jmp
dec
cli
nop
out
daa
repz
sbb
les
and
jmp
inc
mov
fwait
add
loop
mov
sbb
or
outs
pop
(bad)
pushf
shl
pop
aaa
jne
fbstp
(bad)
shl
pop
dec
rcr
push
push
test
les
mov
into
in
adc
xor
sbb
push
inc
xchg
inc
ins
adc
lods
xor
mov
pop
xlat
xchg
mul
or
pushf
pop
movs
shr
pop
push
call
je
(bad)
loop
nop
imul
ins
mov
sbb
les
fs
sbb
xor
idiv
in
mov
or
aad
cmp
sti
mov
inc
sbb
or
clc
pop
jnp
movs
in
cmp
out
mov
or
pop
adc
xor
pop
fxch
retf
lods
cmps
add
xchg
push
cld
cmp
inc
add
outs
jecxz
js
js
shl
lahf
arpl
mov
ror
mov
out
pop
sub
div
inc
mov
jle
or
add
push
stos
cs
out
idiv
pop
jmp
je
and
inc
mov
mov
(bad)
sbb
pop
out
cmps
bound
jno
(bad)
pop
inc
inc
fadd
repz
out
aam
add
pop
push
sbb
dec
js
xchg
adc
and
rep
sbb
dec
cmp
cld
(bad)
push
jmp
fwait
sbb
mov
in
cmps
leave
xchg
dec
jp
xchg
call
cwde
lods
adc
cmp
aas
mov
push
jno
jecxz
sbb
jl
shl
or
mov
push
mov
dec
pop
fucomip
neg
push
jne
dec
jmp
cmps
adc
jne
add
dec
in
test
(bad)
xchg
aad
sub
and
leave
std
inc
jmp
cdq
or
cmc
jo
push
mov
mov
idiv
pushf
jo
out
cmps
mov
das
mov
aas
pop
jle
pop
mov
js
cmp
dec
(bad)
push
or
(bad)
fldenv
or
jne
cdq
ins
add
jl
sub
sar
(bad)
test
lods
retf
push
pop
cmp
test
sub
std
jae
mov
mov
dec
adc
cmp
aad
jns
pop
stos
sar
lods
jnp
sbb
aam
fs
mov
jb
bswap
aaa
enter
test
jns
xchg
dec
jne
in
in
push
fidivr
pop
sti
cmp
xor
jmp
imul
add
xchg
daa
inc
push
or
int
add
mov
imul
jg
das
rcl
inc
or
ja
addr16
addr16
js
jmp
mov
push
dec
(bad)
test
fistp
(bad)
je
mov
test
mov
mov
daa
inc
mov
cmovg
mov
mov
int3
mov
and
lds
scas
mov
push
(bad)
ss
lock
jno
outs
addr16
pop
das
and
inc
xchg
(bad)
imul
inc
sbb
arpl
fcmovnb
je
add
push
pop
sbb
mov
xor
imul
leave
fistp
ja
pop
(bad)
xchg
addr16
jnp
xchg
popa
lods
ja
xchg
dec
cwde
xor
ins
mov
mov
add
jl
mov
jnp
inc
add
cmp
mov
outs
mov
pop
adc
sbb
sub
xchg
jge
mov
out
clc
fadd
mov
nop
push
adc
jo
out
mov
out
ja
mov
in
mov
ds
stos
xor
mov
or
jle
mov
jbe
gs
cli
call
das
popf
mov
out
mov
cmp
sub
cld
inc
push
add
arpl
sbb
sbb
std
push
inc
jmp
push
dec
mov
aad
push
cmc
lahf
add
adc
push
cmp
sub
lock
pop
fcmovne
or
inc
cwde
xor
or
shr
or
not
mov
bnd
push
xchg
pop
retf
mov
xchg
jge
fwait
test
xchg
mov
out
inc
dec
adc
push
pusha
test
retf
shr
and
adc
in
and
(bad)
xor
pcmpeqd
addr16
mov
rol
imul
arpl
push
adc
xchg
test
retf
pop
jb
fwait
adc
mov
icebp
in
lea
test
mov
pop
sbb
mov
mov
das
mov
out
scas
add
pop
push
call
(bad)
xor
jne
shl
imul
mov
xchg
jle
pop
push
sti
sbb
shr
adc
(bad)
fcmovu
jecxz
cmp
daa
push
cdq
out
sub
xor
outs
cs
mov
stc
and
ret
stos
out
cmps
cwde
adc
(bad)
push
ja
(bad)
lods
xor
pop
ror
inc
push
movs
adc
xchg
loop
jne
ins
pop
inc
loopne
loope
xor
das
fdivp
loop
dec
pop
add
mov
call
cmp
adc
sbb
cs
fwait
cld
mov
jns
out
jno
push
sub
mov
test
and
pop
mov
xchg
xor
pop
int3
xor
xor
sbb
dec
or
xchg
or
mov
fidivr
xlat
jne
retf
mov
mov
xchg
xchg
mov
mov
push
fidivr
and
push
cmc
retf
bnd
sbb
inc
sub
imul
mov
cmp
ss
call
add
and
add
ins
push
pop
push
cdq
push
inc
mov
xchg
xlat
cwde
mov
stc
inc
jg
jns
push
mov
sti
xchg
cmc
ret
xchg
pop
enter
cmp
cmovg
push
and
sub
cs
adc
loop
sahf
stos
mov
mov
inc
jp
popf
popa
or
inc
cmp
dec
mov
add
aas
fcom
add
sbb
ror
retf
(bad)
sbb
imul
mov
pushf
test
sahf
pop
inc
dec
(bad)
dec
push
gs
popf
aad
mov
loopne
push
int
pop
pop
dec
or
push
add
lods
call
sbb
clc
fsubr
jb
inc
stos
pop
add
jb
xchg
xchg
mov
mov
xor
aaa
mov
jge
lds
mov
call
xlat
retf
cwde
xchg
out
pop
iret
jg
pop
mov
push
retf
mov
mov
and
outs
or
dec
in
mov
nop
adc
jl
repz
sti
pop
cld
in
fwait
xor
or
rcl
loope
pop
shl
fs
in
and
gs
jo
fisub
dec
enter
adc
(bad)
mov
pop
loopne
outs
adc
int
adc
xchg
adc
aaa
and
pop
not
pop
rcr
icebp
jl
sub
push
push
test
sub
sub
arpl
(bad)
push
push
or
dec
je
jns
sbb
mov
push
pushf
mov
sti
leave
dec
scas
int
push
scas
shl
lods
ficom
xor
into
lods
aaa
gs
cmp
js
sub
push
movs
xchg
lds
xchg
inc
adc
push
jnp
test
cmp
and
and
pop
retf
sahf
pushf
pop
push
fnsave
xlat
push
sti
sahf
inc
in
push
stc
push
sbb
mov
out
push
and
mov
dec
inc
out
stos
imul
call
movs
sbb
dec
imul
sbb
cwde
or
daa
ja
adc
call
jle
jp
ret
jae
mov
clc
xchg
dec
inc
popf
pusha
mov
inc
cmps
pop
lds
jp
sbb
ds
mov
addr16
sub
pop
adc
push
jmp
mov
mov
pop
in
lahf
out
sbb
dec
xchg
inc
loope
rol
cld
add
add
adc
cwde
or
std
imul
sub
stos
(bad)
imul
mov
or
mov
call
mov
imul
rol
inc
inc
sahf
xchg
enterw
cmc
aaa
xor
add
sub
pop
pop
das
fnstenv
aas
push
es
movs
scas
popa
mov
pushf
fsub
(bad)
or
test
fs
shr
aaa
sub
test
js
aam
(bad)
push
dec
call
and
sub
xchg
out
mov
push
movs
pusha
ins
cmp
cmp
mov
clc
stc
test
mov
loop
push
dec
arpl
int
(bad)
out
push
mov
cmp
pop
jcxz
daa
fnstenv
jnp
loope
sti
mov
out
dec
ins
ins
mov
mov
jae
xchg
mov
mov
cmps
sti
and
sbb
stos
inc
test
sub
and
mov
push
mov
pop
lock
test
sbb
xor
js
int
cmp
xor
clc
mov
adc
repnz
scas
xchg
mov
inc
cmp
and
hlt
jmp
stc
jae
(bad)
sti
into
repnz
pop
add
or
and
in
mov
sub
cmps
mov
add
adc
std
iret
popf
out
retf
and
mov
js
sbb
mov
cmp
fs
pop
mov
lods
adc
outs
push
push
cs
mov
and
lea
js
mov
cmps
xchg
and
dec
jp
xchg
outs
pop
jg
jbe
repnz
sar
repnz
pop
sub
sub
rcl
fwait
xor
or
int
mov
xor
bound
imul
mov
movs
sbb
mov
inc
adc
and
inc
(bad)
stos
mov
and
mov
shl
inc
cwde
push
(bad)
std
dec
pushf
adc
and
sbb
jecxz
lds
mov
(bad)
sbb
and
js
sbb
frstor
lea
sbb
(bad)
stc
out
jg
stc
out
jmp
lock
cmp
enter
add
add
dec
inc
dec
inc
scas
inc
pusha
or
add
add
add
(bad)
(bad)
inc
add
add
add
add
add
add
jns
je
ins
cs
jb
ja
outs
addr16
push
gs
imul
xor
xor
inc
jne
je
jb
cmp
jb
ins
sub
push
jne
ins
imul
imul
bound
xor
data16
xor
fs
add
adc
gs
cs
jb
ja
outs
addr16
imul
add
popa
je
pop
add
add
add
add
add
lsl
add
mov
mov
inc
or
add
or
add
add
add
add
or
add
add
pusha
outs
rol
add
add
inc
dec
inc
add
mov
or
popa
add
jo
pop
jae
add
ret
add
push
ret
add
outs
test
add
adc
inc
inc
push
pop
inc
in
rol
loopne
mov
adc
cmp
jge
cmps
cdq
cwde
cwde
out
out
out
loope
pushf
jmp
cmp
dec
mov
call
cmp
sub
and
push
xor
inc
push
xor
shl
mov
lock
mov
leave
cmp
daa
shr
adc
(bad)
or
sub
jp
lods
outs
cmp
jmp
(bad)
pushf
scas
stos
sub
sahf
jecxz
loop
shl
sahf
cdq
test
shl
leave
hlt
sub
rcl
(bad)
call
cdq
mov
lock
fld
sar
sti
or
mov
jo
clc
ret
addr16
or
aas
stos
out
ins
pop
jnp
sti
rcr
lahf
je
call
outs
ror
out
sub
add
xlat
int
add
(bad)
fnsave
add
sahf
and
cmps
and
mov
lahf
jg
pop
cmp
mov
push
or
xchg
inc
outs
lock
fstp
outs
ins
rcr
jmp
pop
popf
cwde
std
rol
xchg
aas
cmp
pop
in
xlat
mov
movs
xchg
add
jno
lahf
jmp
shl
pop
inc
cdq
mov
jecxz
sbb
jl
hlt
cmp
test
aas
push
gs
js
retf
lods
add
adc
jge
xor
sbb
pusha
fimul
xor
mov
lahf
adc
cmc
jecxz
icebp
iret
lea
movs
imul
imul
fisubr
inc
enter
mov
and
push
scas
call
fwait
dec
xor
and
xchg
fist
or
mov
pop
mov
xchg
in
out
lods
repnz
or
(bad)
cmp
pop
loopne
popf
jae
inc
movs
cmps
cmp
rcl
cmps
das
cmc
bound
xor
popf
push
in
fwait
movs
lods
outs
cmp
imul
pop
pop
(bad)
sub
imul
push
xor
mov
icebp
xlat
jbe
cmp
fdiv
jp
xor
mov
fwait
iret
sub
pop
(bad)
shr
mov
scas
dec
sar
cmp
cmps
mov
and
fadd
mov
push
sub
repnz
sub
dec
pop
xchg
popa
mov
inc
add
jge
jns
push
push
mov
stos
xor
push
fadd
out
ins
jnp
mov
into
mov
sub
pop
in
ret
and
jg
out
add
stc
pop
push
ret
in
es
sbb
push
leave
(bad)
lods
mov
in
push
cs
fistp
sbb
sbb
xor
mov
cmp
ret
cmp
xor
add
pop
xchg
aaa
adc
cmp
dec
loope
fcom
cmp
xchg
jne
jmp
pusha
add
xchg
jmp
sub
push
cdq
adc
mov
lea
add
sub
mov
mov
shl
dec
xchg
mov
and
ret
xlat
mov
in
add
mov
and
test
pushf
popa
movs
ins
jmp
push
test
add
add
or
fcmovnu
das
sub
das
outs
loopne
cmps
test
pop
das
or
pop
push
aaa
sti
mov
aaa
(bad)
data16
dec
sbb
sbb
aam
mov
sti
mov
sbb
xchg
dec
xchg
jg
mov
pushf
lods
(bad)
mov
pop
sub
xchg
pop
rol
mov
jnp
es
mov
sub
or
push
aaa
hlt
out
sub
cdq
mov
xchg
lahf
xchg
jp
data16
sbb
into
or
ds
mov
add
xor
fmul
lods
sub
dec
pop
into
sar
into
leave
bound
mov
sub
xchg
test
int3
gs
fisub
cmp
mov
ins
mov
call
ret
int3
inc
and
(bad)
sti
mov
ja
adc
dec
int3
inc
add
sub
adc
mov
sub
mov
xor
jbe
fsub
(bad)
fistp
cwde
inc
lahf
inc
in
xchg
movs
(bad)
out
(bad)
jecxz
aaa
sahf
out
test
xor
ret
rcl
pop
inc
lods
test
jns
cmp
retf
gs
inc
inc
mov
xchg
out
sub
and
cmp
mov
ins
(bad)
out
sub
cmp
cmp
sbb
ds
mov
fnstsw
scas
sbb
sub
and
jnp
jb
sar
retf
sbb
xlat
test
xor
mov
outs
jl
lods
and
nop
(bad)
jmp
test
in
sar
das
mov
pop
pop
or
aam
pop
or
inc
mov
mov
pushf
daa
adc
out
loope
arpl
fld
adc
add
xchg
and
sub
nop
enter
mov
(bad)
movs
mov
and
mov
cmp
iret
and
push
add
mov
dec
js
fnstsw
mov
outs
dec
fwait
inc
sbb
xchg
adc
pop
pop
out
sbb
pop
out
mov
jo
xchg
add
mov
int3
dec
shl
jl
mov
ror
clc
mov
jnp
cld
push
cmc
jae
fnsave
movs
or
sub
xor
in
retf
mov
jg
mov
fs
in
out
std
int3
fistp
test
jl
div
xor
sbb
in
inc
fld
adc
add
addr16
sbb
icebp
xchg
add
int
pop
push
adc
in
jg
mov
mov
inc
pop
jns
cmps
jmp
cs
or
test
mov
movs
jb
fisub
jg
add
sbb
cmc
loopne
add
gs
cdq
leave
jg
and
fst
mov
iret
add
mov
pushf
test
(bad)
jb
add
sub
and
cmp
and
mov
push
mov
movs
mov
sub
sub
cs
(bad)
sbb
and
loopne
sub
mov
fdivr
in
mov
inc
ja
ret
adc
lahf
hlt
stc
outs
xor
(bad)
clc
push
out
scas
xchg
inc
mov
stc
mov
jmp
adc
aas
mov
xor
mul
sbb
stc
cmp
das
xor
sbb
push
xor
imul
cdq
or
mov
icebp
dec
xor
out
pop
adc
cld
push
iret
add
fisubr
cmps
push
addr16
pop
jle
jg
xor
test
push
addr16
and
jne
push
les
mov
push
and
mov
inc
mul
addr16
test
add
pcmpgtb
dec
scas
inc
inc
ds
repz
or
push
rcl
push
jmp
push
mov
inc
jne
jbe
aam
sbb
jg
addr16
mov
rcl
lahf
out
sub
push
jg
push
mov
add
sbb
call
fcomi
cmp
test
pop
mov
pop
test
pop
test
fs
push
cmps
mov
jnp
out
jne
xchg
les
adc
ss
xchg
push
fwait
xor
inc
es
aas
ja
jecxz
xchg
or
inc
outs
ret
imul
jb
movs
into
in
fsub
sbb
sub
or
push
xchg
fwait
xor
jno
push
push
dec
cmps
call
(bad)
jle
pusha
push
test
jle
fmul
adc
aad
sub
or
into
in
shr
and
adc
cmps
push
push
in
fist
lds
sbb
xor
outs
sbb
pop
test
stos
loopne
pushf
add
imul
jp
mov
pop
daa
mov
add
cmp
inc
mov
pop
cmp
xlat
inc
test
inc
movs
mov
hlt
mov
xchg
std
jmp
cmp
fbld
mov
push
xchg
or
jns
push
mov
mov
icebp
ror
xchg
adc
(bad)
and
add
popf
sub
jnp
cwde
ret
jg
aad
dec
jnp
scas
popf
pop
pop
jmp
cmp
cmp
ins
xchg
jecxz
addr16
pop
jmp
add
adc
icebp
hlt
jo
ds
mov
jl
das
stos
int3
xchg
adc
ficomp
push
add
das
fcomp
daa
fdecstp
cmp
push
int3
rcr
xor
inc
lea
mov
xchg
sbb
mov
leave
cmps
dec
aad
test
mov
enter
(bad)
mov
stos
leave
mov
pop
ficom
add
mov
inc
sub
sahf
cmp
fcmovne
add
mov
jg
push
daa
mov
pop
xchg
bound
aad
inc
call
sahf
mov
mov
out
dec
movs
das
dec
gs
dec
dec
jmp
mov
sar
mov
push
pop
pop
loopne
cmp
jno
aaa
pop
push
pusha
jecxz
cwde
push
scas
sbb
cmp
loop
sub
or
in
push
inc
jge
or
jo
push
and
jl
loop
std
mov
icebp
bound
mov
(bad)
and
adc
cmp
rcr
stos
jmp
jle
inc
xchg
mov
xchg
sub
jo
pusha
pop
shl
(bad)
out
enter
fsubr
or
dec
loope
bound
jl
mov
stc
cs
(bad)
enter
cld
lahf
fdivr
loope
fwait
leave
cmp
in
xchg
mov
out
pop
adc
ret
(bad)
aad
mov
push
pusha
mov
leave
inc
mov
sbb
push
cmp
pop
test
cmps
stc
push
sub
test
movs
imul
mov
sub
fldcw
out
push
cmc
mul
jb
int3
fnstenv
xor
pusha
jb
aaa
loop
pop
(bad)
std
outs
jl
inc
loope
push
dec
inc
ins
xchg
cmc
fwait
lods
sbb
mov
push
sub
and
push
hlt
call
(bad)
mov
maskmovq
rol
popa
mov
fidivr
jg
jg
push
ja
xor
adc
out
adc
shr
mov
sbb
dec
sbb
dec
cmp
stos
je
or
mov
and
imul
ja
nop
dec
jl
loope
mov
or
mov
sbb
and
js
inc
or
inc
in
inc
std
(bad)
jno
fbld
dec
jmp
fisub
fld
jbe
fldenv
out
ja
jmp
xchg
xor
sbb
dec
sbb
out
test
cld
xor
xchg
rcl
pushf
inc
sbb
popa
xor
mov
inc
mov
xor
xchg
or
(bad)
xor
add
outs
pop
mov
jo
repnz
add
sti
adc
fmul
push
and
in
and
call
sbb
shl
loopne
jecxz
(bad)
mov
je
push
sub
pop
std
adc
rcl
xlat
leave
fnstenv
ret
fwait
outs
std
mov
jle
out
imul
out
sub
and
sbb
stos
stos
sbb
sub
sbb
dec
push
pop
and
push
loop
jbe
mov
ins
mov
jne
nop
loope
jp
push
xchg
cdq
out
fld
xor
add
pop
pop
dec
aam
out
(bad)
dec
inc
jnp
lea
push
ret
dec
mov
pop
xchg
sbb
cmps
pop
out
or
idiv
mov
retf
sub
and
(bad)
aaa
outs
jmp
popf
out
(bad)
sti
int3
sbb
lods
and
push
test
clc
and
mov
sbb
pop
mov
mov
adc
fdivr
jne
cwde
std
ret
xor
shl
les
push
pop
or
les
popa
xlat
movs
mov
jmp
scas
cmp
dec
loop
dec
js
and
push
outs
push
push
test
jmp
dec
enter
dec
jmp
inc
pop
mov
lea
pop
cmp
mov
sti
data16
and
sbb
add
leave
xchg
repnz
xlat
jg
jecxz
mov
inc
sbb
sbb
shr
adc
sti
rcr
sahf
pushf
(bad)
and
jge
push
and
inc
jnp
push
shl
dec
(bad)
cdq
jns
push
xor
das
push
iret
movs
in
cmps
adc
loope
loopne
mov
mov
mov
paddd
inc
pop
cmp
icebp
mov
cli
mov
inc
push
test
and
sti
(bad)
sahf
pop
xor
ret
cdq
shl
push
mov
xlat
movs
imul
push
data16
push
sub
cmps
jno
sahf
xchg
fiadd
sub
xor
mov
rcr
xor
addr16
(bad)
jl
sbb
fs
pop
ins
test
xor
mov
inc
out
fcomp
or
inc
sbb
mov
out
in
or
and
ret
sbb
pushf
inc
sub
jp
test
enter
mov
(bad)
sahf
dec
xchg
lea
dec
fst
xchg
sbb
push
push
adc
fadd
cmp
test
add
fbstp
enter
pop
mov
mov
xchg
cli
xor
dec
addr16
retf
jecxz
and
and
cmp
pop
in
adc
adc
outs
test
into
int
jmp
sbb
nop
in
ins
mov
pop
xor
mov
mov
shr
xchg
mov
inc
popa
js
pushf
std
cwde
add
je
push
cmps
aaa
mov
scas
sahf
add
bound
mov
inc
push
mov
mov
hlt
pop
mov
xor
add
scas
dec
jge
repnz
rcr
cmp
ss
retf
neg
aam
dec
jmp
imul
mov
mov
sub
mov
dec
mov
jne
pop
mov
pop
push
sar
xchg
jno
jecxz
test
dec
neg
fst
dec
cmc
imul
arpl
test
xchg
pop
das
mov
dec
ret
and
inc
ins
sar
stc
dec
ja
push
shl
(bad)
jno
outs
shr
lock
mov
mov
or
div
sbb
pusha
cmc
xchg
test
mov
cld
mov
sub
and
in
ds
xchg
mov
idiv
movhps
jg
push
add
inc
pop
jne
imul
fwait
push
push
pop
adc
fs
loope
jg
cmc
mov
hlt
ror
jecxz
clc
adc
mov
clc
aam
push
and
pop
fdiv
mov
test
sti
dec
xlat
aaa
int3
rol
call
cmps
mov
bound
ins
not
into
pop
adc
(bad)
jmp
addr16
sub
adc
adc
inc
pop
fdiv
cmp
sub
jge
mov
lods
jns
dec
(bad)
mov
push
and
clc
data16
sbb
mov
xchg
je
mov
fsubr
xchg
sub
imul
cmp
adc
xchg
pop
mov
sti
inc
sub
and
shl
out
lahf
adc
fwait
push
test
in
lock
push
loope
cld
mov
shl
int
jecxz
int
retf
pushf
inc
cmps
mov
pop
std
sub
(bad)
hlt
rol
stc
scas
xor
xor
js
lea
xchg
aaa
adc
retf
ja
neg
outs
mov
addr16
icebp
movs
sub
and
(bad)
ss
or
cmc
mov
cmp
adc
dec
lods
out
dec
mov
xor
inc
adc
pop
mov
sub
clc
leave
cmp
ror
mov
lods
cmp
xchg
xchg
mov
xor
sub
mov
ret
loope
jge
imul
nop
adc
dec
mov
sub
push
mov
pop
popa
or
call
pop
xlat
cld
bound
cmp
jmp
cmp
mov
cmps
xor
mov
sub
mov
aad
inc
popf
sar
push
add
cmc
cmc
int3
aad
pop
packsswb
imul
sar
lahf
(bad)
cld
out
(bad)
stc
iret
push
or
mov
add
add
dec
inc
dec
inc
scas
inc
pusha
or
add
add
add
(bad)
(bad)
inc
add
add
add
add
add
add
jns
je
ins
cs
jb
ja
outs
addr16
push
gs
imul
xor
xor
inc
jne
je
jb
cmp
jb
ins
sub
push
jne
ins
imul
imul
bound
xor
data16
xor
fs
add
adc
gs
cs
jb
ja
outs
addr16
imul
add
popa
je
pop
add
add
add
add
add
lsl
add
mov
mov
inc
or
add
or
add
add
add
add
or
add
add
pusha
outs
rol
add
add
inc
dec
inc
add
mov
or
popa
add
jo
pop
jae
add
ret
add
push
ret
add
outs
test
add
adc
inc
inc
push
pop
inc
in
rol
loopne
ds
popf
out
cmp
jge
mov
mov
pushf
ss
ja
fwait
sbb
shl
(bad)
mov
in
sti
and
sahf
pop
add
sti
pop
add
imul
xor
cdq
scas
push
test
push
and
mov
jb
mov
inc
out
or
lods
push
leave
lahf
ficom
cmp
or
adc
cmp
mov
xchg
xchg
sub
test
fild
dec
ins
loope
outs
cmp
aam
push
je
mov
rcl
jge
inc
test
imul
mov
adc
push
push
in
and
inc
sbb
jle
sub
or
xor
aas
out
mov
js
mov
inc
jnp
adc
xchg
xor
bound
dec
(bad)
clc
fcomp
and
(bad)
inc
inc
jb
enter
cmp
sub
cmc
aad
dec
cmp
pop
(bad)
dec
lea
or
rcl
lock
ins
jmp
sub
xor
pop
shr
pop
xor
rol
cmpps
push
pop
rcr
pop
adc
mov
fdiv
push
aam
jp
pop
fmul
sub
add
or
and
jns
rcr
mov
aad
in
repnz
sar
jmp
fcom
lea
shr
add
mov
pop
test
popa
jno
mov
cmp
inc
xor
ins
cli
jg
fidivr
cld
pusha
adc
cmp
and
sar
add
dec
mov
mov
mov
(bad)
pop
adc
add
lahf
icebp
xchg
sti
out
xchg
pushw
nop
xor
or
scas
sbb
scas
popa
jne
mov
push
imul
int
rcl
test
enter
sbb
inc
in
data16
outs
jnp
movs
mov
test
inc
(bad)
push
mov
mov
or
imul
inc
lock
adc
(bad)
cmovnp
pop
call
push
ret
xor
mov
xchg
jle
and
mov
sahf
push
outs
mov
xchg
mov
sub
mov
mov
pop
sti
stc
mov
cmps
xchg
mov
(bad)
cmp
xchg
jl
test
loope
fcomp
fs
jp
enter
push
push
mov
js
cld
xchg
mov
push
repnz
mov
fadd
adc
test
imul
mov
pop
pop
xchg
arpl
pop
mov
into
loope
sar
push
dec
out
cmps
cld
dec
dec
sub
inc
std
fsubr
jb
scas
xchg
push
mov
push
jge
mov
sbb
push
in
cmp
xor
xor
or
imul
push
adc
or
cmp
mov
pop
adc
dec
addr16
pusha
rep
test
sbb
adc
mov
inc
int
and
mov
ds
pop
jmp
add
pop
and
pop
push
shl
dec
adc
rol
inc
pop
and
or
daa
push
loopne
inc
jne
xchg
cmp
inc
sub
mov
cmp
inc
and
(bad)
mov
jmp
outs
aad
add
repnz
ins
mov
pusha
jbe
loopne
cwde
jp
cmp
push
push
mov
call
sahf
mov
mov
imul
add
(bad)
test
pop
fwait
lahf
xor
das
inc
(bad)
es
imul
sub
dec
cmp
inc
fbld
sub
je
push
xchg
cmc
das
into
fmul
test
mov
sti
jle
xor
out
jno
jbe
and
gs
cmp
aaa
add
scas
stc
test
dec
mov
shl
pop
test
test
push
xchg
dec
shl
sbb
jbe
mov
cwde
(bad)
leave
repz
xchg
push
fisttp
pop
je
adc
repz
fcomp
push
jg
fiadd
jns
dec
cmc
push
mov
dec
push
fdivr
push
push
and
xchg
repz
addr16
scas
ja
pop
stos
jne
icebp
cmp
jbe
and
repnz
push
cld
test
inc
fild
push
cmps
in
pop
mov
mov
jmp
xchg
inc
add
sub
inc
adc
add
movs
dec
add
mov
mov
xchg
in
test
jle
jne
sub
mov
fisttp
adc
in
(bad)
xor
mov
cmp
cmc
movs
jp
cmps
add
and
sbb
dec
jns
push
cmps
dec
into
test
jns
lock
sbb
(bad)
mov
jb
scas
retf
out
jp
mov
cli
adc
pop
push
cmp
xchg
das
scas
jne
sub
xor
cmp
in
out
ins
add
lods
sti
scas
xor
icebp
(bad)
pop
ss
aad
iret
lods
jl
pop
sti
xor
xor
adc
mov
idiv
ja
push
mov
out
test
mov
xor
loope
adc
fbstp
movs
into
call
ret
aas
pop
cwde
inc
push
mov
cmp
ss
sub
dec
pop
dec
xor
aaa
xchg
lock
ret
pop
dec
hlt
xchg
movs
out
sub
add
push
in
sub
push
push
sbb
test
fmul
daa
add
xchg
cs
mov
sbb
dec
out
dec
cmp
mov
fdivr
call
hlt
mov
gs
dec
push
icebp
aas
or
inc
mov
movs
pop
imul
sbb
xor
gs
rol
xor
fsubr
mov
mov
lods
mov
push
inc
jnp
jecxz
pushf
fild
popfw
daa
fldcw
call
imul
shr
cmp
out
add
inc
mov
jge
iret
aas
fchs
ja
iret
adc
sbb
push
lods
mov
inc
outs
out
push
aas
mov
lods
pop
es
les
jbe
xchg
shl
or
addr16
leave
cmps
hlt
ja
fdiv
test
and
inc
adc
pop
hlt
mov
push
mov
sar
fyl2x
inc
jno
push
js
jns
es
fsubr
adc
int3
mov
jecxz
jae
fcom
sub
jecxz
cmps
das
jg
mov
int3
adc
mov
mov
cld
lds
add
inc
stos
not
test
mov
mov
ret
jne
scas
mov
nop
repz
mov
push
pop
(bad)
das
clc
test
mov
sub
aam
push
pop
mov
js
adc
xchg
pop
out
gs
pop
dec
fstp
outs
jg
loopne
imul
movs
out
push
jmp
or
xor
frstor
div
outs
and
dec
sbb
jmp
push
leave
mov
jmp
dec
xor
dec
cmp
je
shl
mov
pushf
jl
icebp
aas
icebp
inc
sub
aad
adc
iret
xchg
jle
mov
and
pop
fucomp
inc
pop
jl
into
mov
bound
cdq
in
mov
aam
mov
pop
adc
sbb
(bad)
add
pop
mov
pop
retf
mov
xchg
dec
in
mov
push
(bad)
xor
jns
push
jb
xchg
ret
mov
and
jmp
pop
jmp
mov
add
je
fstp
(bad)
mov
les
push
dec
mov
adc
js
into
cld
jl
stos
js
or
adc
jle
xchg
jmp
loope
popf
xchg
push
(bad)
cwde
xchg
push
in
sub
test
lods
(bad)
xchg
inc
rol
out
popa
jns
ds
jmp
pop
jnp
pop
mov
jl
push
sub
cwde
es
xor
stc
cmp
xor
jo
aas
jne
sbb
jp
imul
int
mov
inc
xchg
mov
xlat
or
xor
jl
dec
sub
jno
(bad)
stos
cmp
mov
sahf
fdiv
push
xor
out
lods
hlt
jmp
cmp
mov
stos
mov
ret
dec
sbb
sbb
sar
dec
ret
and
sub
inc
cs
addr16
sbb
gs
repnz
scas
pop
xchg
in
les
in
lock
jo
mov
sbb
jmp
fldenv
in
push
popf
sub
outs
jle
or
add
xor
sbb
xor
clc
add
dec
jle
int
xchg
or
jmp
push
inc
jb
data16
loope
rcr
pop
outs
dec
xor
jae
add
mov
scas
adc
jmp
ror
fwait
sahf
push
sub
sub
daa
lea
cmp
call
out
arpl
retf
repnz
fsubr
fcom
pop
xchg
sahf
mov
sar
loope
lods
fidivr
retf
mov
adc
mov
popa
(bad)
mov
sar
jle
outs
sub
add
or
pop
in
add
je
dec
or
cmp
in
mov
or
retf
jno
mov
mov
pop
lods
xchg
in
repz
xor
outs
mov
movs
je
push
inc
push
fld
in
cwde
adc
adc
(bad)
pop
sbb
pop
mov
inc
fidivr
xchg
aam
push
(bad)
repz
and
inc
ret
cmp
cmc
jp
fistp
int
ficom
add
test
sbb
mov
cmc
or
xchg
enter
adc
pop
mov
jnp
inc
or
dec
(bad)
cmps
inc
aas
arpl
je
add
test
imul
loop
in
shl
mov
xchg
or
adc
mov
jb
sar
xchg
jmp
mov
inc
mov
cmp
repz
test
dec
mov
push
ret
imul
les
xor
pop
xchg
pop
test
xlat
pop
fild
cli
ret
adc
add
adc
fistp
mov
lods
mov
mov
imul
stos
in
mov
jns
mov
dec
pop
xchg
push
bound
cmc
das
imul
les
popf
call
xor
inc
cdq
repz
(bad)
jns
in
cmps
xchg
outs
xchg
inc
cvtps2pi
xchg
mov
das
jb
push
out
fldenv
jns
call
aas
dec
cli
test
or
dec
ja
cli
test
add
(bad)
push
in
out
push
add
fidiv
sub
push
repz
hlt
dec
adc
shl
out
popf
xchg
pop
push
push
mov
xchg
das
xor
jnp
mov
pop
pop
mov
fsubr
sbb
dec
adc
aaa
cmp
js
adc
or
pop
rcr
idiv
outs
cmp
mov
fcomp
xlat
fisttp
jp
ja
inc
jne
sub
out
and
xor
int3
or
or
jge
and
adc
js
jo
push
push
and
outs
mov
inc
sti
inc
mov
push
mov
mov
xchg
out
stos
ret
aas
aas
sahf
mov
mov
mov
push
fisttp
stos
or
shr
sub
add
daa
mov
in
sub
pop
jo
jbe
call
mov
call
in
push
sbb
movs
xchg
mov
xor
xchg
jbe
jle
inc
or
retf
pop
adc
stc
mov
push
add
aas
lock
mov
mov
jnp
dec
sahf
sbb
or
out
and
pop
dec
push
lock
cmp
movs
and
pop
stos
xor
loopne
arpl
push
xor
imul
(bad)
out
shr
les
hlt
repnz
sub
sbb
sbb
fimul
fiadd
adc
cs
clc
neg
mov
mov
mov
adc
lods
sub
das
loope
popf
adc
xlat
test
stos
je
and
inc
sbb
mov
mov
cmps
mov
stos
lock
scas
add
scas
or
xchg
push
dec
imul
add
dec
loop
retf
ret
retf
xchg
call
test
add
sbb
cs
sub
ja
icebp
int3
sahf
adc
sahf
and
add
fs
pop
lea
leave
ja
shr
xor
or
cmp
push
fsubrp
mov
push
dec
loopne
pop
mov
ret
sbb
and
(bad)
cli
inc
pop
popf
pushf
dec
sub
test
scas
mov
push
lods
jbe
shrd
int3
popa
ror
pop
inc
in
mov
push
leave
dec
jmp
fiadd
ja
cwde
in
scas
and
stos
or
cmp
(bad)
(bad)
mov
push
lea
push
retf
jns
push
js
pop
sbb
test
lods
mov
or
and
call
push
dec
pop
sbb
mov
sub
mov
stos
lds
or
sbb
mov
sbb
not
cmp
into
xchg
pop
(bad)
push
ror
imul
mov
cmp
xor
iret
iret
hlt
and
fiadd
jne
adc
ins
mov
jae
popa
test
stos
xchg
xor
cmps
mov
inc
jo
fstp
mov
or
pusha
mov
sbb
xor
ret
scas
jne
cmps
inc
jo
shl
cmp
bound
push
mov
test
xchg
jne
dec
lods
cmp
xchg
mov
cwde
and
dec
imul
cmps
mov
aaa
test
mov
push
xlat
cmps
into
add
jae
fs
ret
call
inc
scas
pop
retf
push
pop
(bad)
imul
mov
jb
mul
in
out
pop
sbb
cli
mov
mov
or
xor
mov
fisubr
sbb
cld
push
or
popa
xchg
call
fadd
xchg
(bad)
adc
push
pop
dec
scas
or
cmp
cmps
sbb
test
pop
mov
out
and
je
mov
das
das
jg
mov
repz
sti
pop
div
jae
retf
scas
cs
out
push
jp
pop
adc
pop
ss
fisubr
pop
dec
scas
mov
jbe
sub
retf
fisttp
mov
add
mov
add
push
jne
sub
ins
aas
(bad)
sahf
push
xor
iret
mov
(bad)
inc
mov
or
fnstsw
dec
cmc
ficom
movs
mov
hlt
jns
xchg
test
or
mov
cmp
xchg
mov
ja
push
aad
cwde
adc
jno
repz
inc
or
sti
repnz
(bad)
or
call
push
pushf
lahf
iret
(bad)
sbb
xchg
les
popf
xor
dec
lods
cli
fwait
jns
shl
sar
pop
pop
cmp
ret
push
je
clc
cmps
pop
and
dec
jae
into
bound
out
(bad)
test
lds
iret
(bad)
cmp
in
pop
sub
scas
dec
daa
pop
mov
pop
popa
push
inc
push
hlt
mov
cmp
test
mov
scas
sub
mov
push
jne
dec
xchg
mov
(bad)
sti
popf
jmp
in
push
push
mov
mov
jle
out
adc
mov
mov
dec
fcom
jnp
cmp
add
dec
sub
mov
mov
ss
push
xlat
fdivrp
sub
mov
fcomp
push
mov
ja
cmp
imul
out
ss
icebp
std
sub
lods
int3
or
out
jbe
pop
(bad)
push
aas
sbb
scas
pop
cmp
outs
mov
or
mov
loope
or
rol
pop
je
xor
or
cmp
add
adc
out
pop
sub
mov
push
(bad)
(bad)
stos
cli
ror
and
inc
bound
aas
test
test
and
and
fimul
push
js
daa
xchg
sub
cld
and
pop
or
popf
sub
sub
cs
retf
inc
xchg
outs
mov
stc
pop
rcl
pop
adc
in
add
xor
setnp
dec
lods
movs
sub
ror
int3
shl
dec
pop
jb
out
fcmovbe
popa
sub
rcl
mov
(bad)
je
xor
cld
or
lahf
jg
stc
out
jg
scas
add
inc
xchg
(bad)
add
add
add
dec
inc
dec
inc
scas
inc
pusha
or
add
add
add
(bad)
(bad)
inc
add
add
add
add
add
add
jns
je
ins
cs
jb
ja
outs
addr16
push
gs
imul
xor
xor
inc
jne
je
jb
cmp
jb
ins
sub
push
jne
ins
imul
imul
bound
xor
data16
xor
fs
add
adc
gs
cs
jb
ja
outs
addr16
imul
add
popa
je
pop
add
add
add
add
add
lsl
add
mov
mov
inc
or
add
or
add
add
add
add
or
add
add
pusha
outs
rol
add
add
inc
dec
inc
add
mov
or
popa
add
jo
pop
jae
add
ret
add
push
ret
add
outs
test
add
adc
inc
inc
push
pop
inc
in
into
add
add
scas
into
jno
outs
(bad)
aam
dec
ins
jb
xchg
outs
cmps
(bad)
cmp
jge
(bad)
je
popa
dec
dec
ja
ja
popa
(bad)
fimul
test
jge
rol
dec
mov
or
mov
pop
js
sti
push
sub
xlat
pop
cli
jnp
lea
js
xor
mov
and
mov
sub
ret
mov
dec
sbb
or
imul
mov
or
out
xor
(bad)
sti
xchg
ffree
in
sbb
jae
lods
dec
andnps
xchg
adc
jne
into
hlt
sub
push
and
xchg
stc
sar
cwde
cdq
cmps
shl
inc
jne
pop
xlat
ds
test
jmp
cld
push
aam
mov
dec
mov
xor
pop
pop
sbb
(bad)
sti
sub
jnp
unpckhps
xor
addr16
xchg
adc
or
out
mov
je
jecxz
xor
stos
mov
pop
push
lock
gs
or
jns
or
and
daa
mov
push
and
pop
push
sub
dec
adc
push
mov
pusha
dec
cmps
pop
mov
add
xchg
mov
scas
sub
cli
mov
fsubr
sbb
arpl
push
xchg
jmp
int3
scas
stos
test
mov
fistp
add
ret
pop
push
add
mov
dec
cmp
dec
pusha
sbb
test
xor
add
ins
cmp
xor
mov
sar
leave
movs
pop
and
out
push
js
mov
dec
mov
fwait
ins
stc
jecxz
sub
out
xchg
push
push
mov
jecxz
or
(bad)
sub
aas
mov
lea
das
mov
stc
repz
add
push
outs
add
sub
fs
test
add
sbb
movs
test
stc
or
ds
imul
inc
cmps
mov
(bad)
loopne
push
push
ficomp
ret
mov
sub
dec
sbb
xchg
add
dec
push
ret
mul
gs
jecxz
xor
mov
loop
popf
pop
inc
xchg
outs
adc
xchg
retf
sbb
sub
imul
mov
xchg
mov
enter
jne
mov
sub
je
nop
scas
mov
out
sahf
js
mov
fidivr
loopne
or
les
fnstenv
out
mov
jle
mov
jae
and
sbb
cmp
imul
fs
into
test
jb
loop
loop
dec
and
(bad)
jmp
push
inc
or
jecxz
rcr
sbb
aam
mov
adc
hlt
add
mov
repz
call
scas
mov
add
imul
shl
or
int
icebp
retf
cld
gs
add
mov
fwait
mov
xor
sub
shl
dec
push
xor
and
ret
out
mov
imul
cmp
adc
sub
jg
and
std
fistp
rcr
mov
jmp
shl
outs
fisttp
xchg
push
and
mov
pop
xchg
inc
inc
popf
mov
sub
jg
sbb
ja
add
bnd
in
pop
outs
adc
cmp
mov
jbe
in
js
pusha
enter
ss
jns
call
inc
jl
jbe
call
dec
xchg
inc
je
adc
aam
loope
ss
cs
inc
call
out
xchg
mov
xor
pop
ins
inc
mov
xchg
bound
pop
cwde
pusha
pop
xchg
add
out
test
dec
jno
xor
fidiv
mov
xchg
int
jmp
out
or
mov
les
jnp
stos
repz
mul
jmp
dec
mov
(bad)
xlat
jbe
je
mov
inc
xchg
pop
retf
xor
and
retf
cld
cmp
out
sub
adc
and
inc
ret
xchg
xor
jge
in
cmp
cdq
push
aad
mov
mov
jbe
(bad)
shl
cmp
pusha
add
jmp
xchg
lahf
and
mov
ins
mov
ja
xor
pop
or
xchg
ret
(bad)
repnz
push
or
jmp
in
sbb
xlat
es
icebp
std
add
lea
cmp
or
mov
pop
popf
jmp
sbb
(bad)
cmps
fld
jns
adc
push
fisubr
fbstp
cwde
mov
addr16
push
mov
fstp
xor
pop
cmp
cmp
cs
sbb
adc
inc
scas
rol
jns
jle
test
icebp
aaa
ficom
sbb
repz
jmp
cs
punpcklwd
mov
je
iret
ret
push
mov
retf
data16
sbb
mov
cmc
(bad)
rcl
ret
nop
int3
cdq
jo
jns
and
outs
xor
adc
pop
jo
repz
call
push
dec
jns
and
test
jecxz
jbe
push
arpl
pop
push
xchg
aaa
popf
retf
xchg
out
sub
mov
sub
(bad)
ret
aaa
gs
mov
push
mov
out
mov
jg
push
or
jl
aaa
repnz
push
jb
aam
adc
xlat
popa
and
jg
push
pop
sub
retf
pop
arpl
mov
lods
in
(bad)
loopne
aam
jmp
clc
sti
jae
sub
jle
adc
repnz
xchg
cs
pop
loopne
mov
rcl
inc
push
ss
xor
xlat
lock
lahf
xor
mov
and
push
sbb
pop
stos
pop
xlat
fyl2x
mov
pop
or
mov
(bad)
cs
sbb
pop
jno
clc
or
das
or
out
xor
dec
jo
cdq
cmps
add
pop
mov
mov
or
adc
arpl
pop
outs
out
out
mov
daa
push
test
inc
mov
or
sbb
dec
mov
xchg
push
mov
and
fild
mov
fisttp
push
fld
(bad)
loope
cmc
hlt
rcl
stc
jmp
int3
xchg
sub
mov
fisubr
das
lods
icebp
dec
jo
sahf
mov
mov
xchg
xchg
aaa
mov
and
xchg
fild
xchg
jmp
xchg
push
das
push
cli
inc
bound
push
xlat
or
je
loope
fisubr
sbb
aad
pop
push
aad
out
ds
cmp
mov
dec
loope
push
ins
jmp
popf
ds
icebp
jne
sbb
clc
dec
mov
in
inc
add
mov
xchg
push
ins
(bad)
stc
loopne
pop
xchg
cdq
mov
pop
mul
adc
cmp
mov
mov
xor
daa
xor
xor
lods
and
jb
cld
test
outs
lahf
ret
add
push
and
(bad)
mov
push
sbb
and
cmp
push
sub
cmp
xor
fdiv
mov
cmp
xchg
xchg
ror
jmp
sti
mul
cwde
jo
cmps
dec
inc
test
push
jecxz
dec
movs
fcmovbe
mov
repnz
xor
shl
dec
adc
cmps
std
dec
cmps
add
stos
and
inc
gs
pop
pop
adc
or
aas
sbb
(bad)
xor
hlt
pop
test
test
cli
imul
mov
xor
push
mov
mov
and
rol
je
xor
push
and
fimul
or
xchg
push
mov
out
in
daa
mov
shr
add
dec
cmp
fmulp
cmps
retf
push
test
jbe
push
sub
ror
enter
iret
cmp
in
jl
in
add
ja
icebp
stos
fldenv
in
push
xor
call
adc
(bad)
xor
pusha
xchg
mov
sbb
jge
mov
ins
jae
mov
pop
or
adc
dec
shr
cmc
inc
imul
xor
int3
xor
or
nop
pop
push
fst
or
ins
test
mov
push
inc
int
loop
out
mov
test
sub
div
push
mov
jge
mov
pop
push
outs
xchg
test
(bad)
sub
sub
(bad)
in
xchg
lods
int
into
push
sub
jmp
dec
pop
jmp
jnp
lods
inc
xor
pop
pop
cmps
push
mov
xchg
push
dec
movs
push
js
push
shr
hlt
jge
dec
test
call
push
cmp
jmp
ffreep
shl
mov
push
mov
push
pop
daa
adc
movs
sbb
mov
and
bound
push
add
fcom
data16
push
repz
xchg
jbe
pop
sbb
push
mov
(bad)
mov
inc
adc
dec
shl
sti
je
mov
imul
std
dec
push
dec
jns
jae
mov
mov
ins
mov
adc
mov
lahf
aaa
xor
xor
or
jmp
xor
bound
call
enter
cmps
rol
sbb
xchg
out
lods
loope
pop
enter
lock
leave
cli
lods
pop
pop
push
in
xor
or
adc
test
push
rcl
and
int3
sahf
cwde
xor
push
jnp
cmp
add
scas
push
mov
add
xor
ret
mov
dec
add
pusha
jmp
fist
out
inc
fsub
repnz
retf
jp
mov
mov
mov
dec
cmps
mov
fstp
adc
push
sbb
loopne
push
dec
cmp
xchg
adc
shr
jb
xchg
fild
jb
xchg
xor
movs
sub
xor
cmp
(bad)
je
push
cbw
(bad)
cdq
fiadd
push
ds
(bad)
xchg
pop
jo
or
push
adc
sbb
add
lock
jp
leave
push
cmp
arpl
in
leavew
cmp
js
xor
push
iret
mov
pop
movs
call
fidivr
fldcw
adc
add
repz
jno
pop
mov
ret
call
mov
push
adc
cdq
and
inc
(bad)
adc
push
stos
fcom
mov
sbb
cmp
pop
mov
mov
call
shl
retf
mov
cmps
scas
jno
lahf
fild
add
xor
rol
cwde
mov
push
mov
loope
xor
mov
xchg
cmp
jo
das
push
cli
mov
(bad)
mov
push
data16
ror
iret
pop
idiv
pop
mov
pop
mov
sti
sbb
jecxz
mul
sub
cmp
rcr
arpl
mov
cld
repnz
mov
mov
push
in
in
outs
(bad)
xchg
cmps
xchg
xor
lahf
push
jmp
lods
out
and
cli
popf
sbb
ins
xchg
es
jp
dec
jno
mov
sub
js
sub
mov
(bad)
push
(bad)
lock
cmp
vphaddudq
ds
stc
jecxz
add
xor
adc
push
ret
lods
pusha
ficomp
jmp
sbb
lock
mov
pop
ins
fisub
cmp
cmp
xor
inc
pusha
pop
fiadd
out
and
cmp
mov
add
pushf
mov
rcl
loop
inc
adc
jmp
fbld
imul
cdq
jg
dec
sti
aam
dec
sub
repnz
loope
fstp
inc
in
mov
cs
dec
xchg
dec
and
in
mov
and
nop
and
in
hlt
mov
jo
movs
ror
dec
(bad)
mov
stos
repz
jno
sub
cmp
outs
fsubrp
test
popa
shr
add
into
jbe
or
mov
dec
clc
loope
test
popa
ret
dec
push
rcr
jbe
pop
mov
js
rol
jecxz
fild
and
arpl
push
bnd
sub
dec
shr
xor
test
mov
(bad)
ror
imul
mov
xor
imul
sub
fsubr
jb
nop
imul
fwait
mov
(bad)
neg
cmp
movs
push
sub
xchg
shl
fist
lods
ror
jle
stc
sar
in
int3
xor
xchg
xchg
popf
xor
mov
fiadd
out
push
jno
ss
mov
mov
js
push
shl
jne
mov
ss
(bad)
xchg
test
jecxz
xchg
sub
cmp
imul
jmp
and
sub
repz
ss
mov
leave
sahf
cmp
inc
nop
(bad)
fimul
leave
mov
xor
xor
popf
dec
mov
outs
xor
pop
(bad)
hlt
cld
pop
mov
fistp
dec
or
std
cmc
idiv
arpl
jecxz
dec
add
icebp
out
std
scas
pop
push
mov
pop
xchg
cwde
stos
cs
cmps
and
(bad)
cld
sbb
mov
retf
iret
ret
int3
retf
xor
out
(bad)
jmp
icebp
add
mov
iret
div
and
push
mov
fdiv
and
lods
cwde
sub
cmp
sti
adc
div
call
(bad)
or
add
(bad)
sti
shr
xor
popf
adc
push
sbb
ficom
dec
call
sbb
cmp
fstp
mov
cdq
ins
push
mov
in
sbb
push
lock
ss
push
cld
enter
cmc
sub
jmp
jbe
stos
cmp
push
cwde
daa
mov
sbb
stos
inc
adc
xor
inc
sub
inc
push
fwait
dec
push
inc
xchg
mov
ja
inc
fidiv
adc
shr
js
and
adc
sub
addr16
push
(bad)
fs
pop
cmp
int
xchg
mov
push
pop
mov
test
nop
add
jo
push
adc
or
leave
mov
scas
lock
dec
add
push
pop
test
jno
popf
inc
pop
mov
and
(bad)
sub
mov
movs
dec
je
dec
add
leave
mov
fst
jno
jmp
dec
(bad)
shl
xor
call
retf
fcom
or
sub
dec
dec
jecxz
das
in
pop
add
das
dec
ins
cmp
xlat
add
fldcw
dec
(bad)
xor
push
xchg
mov
add
fwait
sbb
push
add
pop
and
xor
jmp
push
push
retf
mov
sbb
icebp
or
fiadd
mov
call
mov
pop
loop
xor
out
inc
inc
pop
sbb
add
dec
pop
pop
cmps
rol
(bad)
cmp
int3
aad
out
jp
test
dec
pop
push
out
daa
leave
in
pop
push
xor
fcmovnu
lahf
call
mov
dec
popf
mov
mov
jle
retf
movs
mov
inc
adc
test
loop
lods
mov
test
enter
pop
sub
mov
mov
cmps
xchg
adc
sbb
mov
xchg
adc
jne
push
adc
cmp
mov
dec
dec
in
ins
and
adc
mov
add
cmps
(bad)
pop
scas
adc
test
pop
mov
addr16
sub
mov
add
and
add
aam
dec
push
adc
mov
sar
hlt
das
cs
pusha
mov
sub
mov
inc
cmp
(bad)
adc
adc
sbb
jle
add
jmp
pop
pop
dec
loope
or
jge
pusha
stos
xchg
rcr
mov
push
push
xor
mov
jecxz
fild
call
inc
xchg
jo
cmc
enter
xchg
in
cs
gs
mov
sub
jle
retf
xchg
icebp
push
lods
popf
pushf
inc
(bad)
xchg
retf
or
and
(bad)
push
addr16
out
or
mov
mov
cmp
dec
sbb
cli
xchg
aad
push
add
test
pusha
pop
(bad)
inc
mov
imul
test
pop
addr16
iret
cmp
(bad)
stc
out
call
add
jg
clc
hlt
das
mov
add
add
dec
inc
scas
inc
pusha
or
add
add
add
(bad)
(bad)
inc
add
add
add
add
add
add
jns
je
ins
cs
jb
ja
outs
addr16
push
gs
imul
xor
xor
inc
jne
je
jb
cmp
jb
ins
sub
push
jne
ins
imul
imul
bound
xor
data16
xor
fs
add
adc
gs
cs
jb
ja
outs
addr16
imul
add
popa
je
pop
add
add
add
add
add
lsl
add
rcl
add
mov
inc
or
add
or
add
add
add
add
or
add
add
pusha
outs
rol
add
add
inc
dec
inc
add
mov
or
popa
add
jo
pop
jae
add
ret
add
push
ret
add
outs
test
add
adc
inc
inc
push
pop
inc
in
(bad)
add
add
scas
data16
loope
xor
int3
cmps
cmps
mov
ins
es
cwde
out
into
pop
cmps
cmps
dec
dec
mov
shl
push
ds
jge
lds
add
daa
aaa
xchg
sub
shr
push
pop
mov
int3
cmps
pop
add
push
out
jns
push
sti
mov
shr
(bad)
mov
mov
hlt
jge
cmp
add
shr
push
push
jge
pusha
ins
adc
mov
scas
jmp
movs
sub
fcmovnbe
sbb
(bad)
cmps
imul
cli
sub
ret
clc
fwait
out
inc
fstp
jle
inc
sbb
inc
jge
popf
inc
lods
ins
adc
add
xchg
mov
mov
rcl
inc
movs
fisttp
pop
mov
mov
pusha
mov
push
mov
mov
fnstcw
mov
cmp
loopne
push
push
stos
(bad)
mov
mov
or
ja
fwait
adc
leave
mov
sub
cld
sub
xor
sub
sub
mov
and
pop
mov
cmp
outs
push
ret
pop
inc
std
aas
cmpxchg
nop
sbb
pop
jmp
dec
das
cli
add
out
popf
aam
xchg
fldenv
fs
aad
popa
(bad)
movs
mov
movs
fsub
sbb
repz
into
rcr
clc
ss
sbb
mov
mov
idiv
(bad)
dec
jge
mov
xchg
cmps
aam
mov
add
pop
sbb
xchg
mov
mov
mov
cmp
jne
aad
add
jno
mov
cmps
add
cmps
pusha
in
lea
mov
jmp
jl
loope
out
cmp
aas
movs
dec
movs
cmp
mov
mov
aaa
aaa
idiv
mov
enter
fisttp
fld
les
dec
(bad)
fistp
aaa
(bad)
jne
outs
dec
pop
ret
xchg
and
jmp
pop
add
jge
add
mov
scas
and
(bad)
jl
xlat
(bad)
data16
cdq
dec
xchg
sub
xchg
pop
(bad)
mov
fisub
out
movs
cmp
into
fistp
std
sar
jp
sbb
jns
nop
loop
pop
sub
sub
fcom
stc
mov
int3
aas
(bad)
shl
xchg
call
test
jmp
mov
rol
mov
sbb
shr
test
rcr
imul
pop
jmp
ins
shl
adc
sbb
test
xchg
ficom
call
ror
clc
xor
jl
xchg
inc
mov
shl
enter
jnp
xchg
push
jge
mov
pop
ins
adc
sub
dec
out
enter
inc
cld
sub
sbb
jae
adc
push
cmp
fdivr
les
mov
js
xchg
cdq
jle
loope
xor
test
int
jae
mov
xor
clc
cli
in
pop
out
xchg
test
xor
mov
add
clc
fs
push
push
movzx
fsubr
sbb
hlt
mov
xlat
xor
inc
aas
inc
mov
ds
mov
cmp
outs
movs
adc
pop
outs
push
cmp
or
dec
popf
leave
out
imul
push
fdivr
ds
ss
push
in
scas
das
arpl
adc
jmp
cmp
out
or
jg
ins
rol
jmp
and
jle
pop
jo
call
arpl
aas
push
push
mov
out
xchg
push
jmp
out
or
push
mov
ret
in
(bad)
xlat
sub
dec
pop
and
xor
push
shl
shl
and
dec
in
jo
into
call
pop
mov
icebp
sub
data16
pop
cmp
sub
in
xchg
cmp
or
aad
retf
push
inc
lods
das
adc
xor
test
inc
pop
movs
dec
jg
dec
push
imul
push
sbb
std
and
mov
js
mov
jmp
jg
fwait
gs
add
cdq
cmp
loope
pop
repnz
ins
mov
mov
ds
aad
js
retf
test
xlat
popf
enter
xor
outs
shl
mov
add
add
mov
inc
inc
or
in
fimul
adc
add
aam
xchg
ss
outs
add
hlt
rcr
ret
jl
cmovge
retf
mov
xchg
mov
out
and
mov
sahf
push
mul
out
daa
pop
scas
sub
sub
fild
cli
jle
out
inc
xchg
jge
push
ret
clc
dec
imul
dec
unpcklps
gs
adc
jo
xlat
lds
jb
jg
dec
cmp
ins
test
inc
cmp
push
sti
push
and
mov
mov
aaa
mov
loope
ja
mov
or
pop
inc
jle
jg
adc
imul
mov
retf
cmp
retf
out
mov
or
mov
test
mov
mov
push
enter
ins
pop
nop
xchg
push
gs
push
iret
or
xor
mov
ror
js
psrlq
call
mov
mov
jge
xchg
fs
mov
cmp
and
(bad)
adc
fistp
das
fabs
mov
scas
dec
inc
out
jb
pop
dec
mov
and
loop
(bad)
std
sbb
jle
pop
scas
in
(bad)
jmp
aas
dec
scas
mov
hlt
push
clc
sbb
call
into
push
cdq
cmp
adc
int
(bad)
ja
cmps
cmp
hlt
imul
cdq
jo
lahf
loop
jle
(bad)
js
test
das
sbb
jae
aaa
xchg
movs
in
test
adc
dec
or
icebp
das
mov
inc
jne
push
ja
jp
dec
ins
mov
leave
cmp
lahf
rol
fldcw
std
outs
imul
push
retf
cli
jmp
test
das
clc
fwait
adc
mov
loopne
cmc
mov
fwait
out
pop
shr
cmp
xor
and
lock
xchg
pop
sti
retf
pushf
jae
sbb
pushf
jecxz
sti
test
pop
inc
outs
pop
(bad)
popf
lea
hlt
cmp
fimul
adc
leave
cmp
push
mul
loop
das
cmp
(bad)
or
xlat
ja
lods
(bad)
sub
xor
shl
clc
mov
out
mov
mov
daa
mov
mov
scas
enter
jle
out
fiadd
cmp
adc
xchg
jne
mov
ror
and
and
jmp
test
and
jmp
popa
add
or
sub
out
es
movs
jno
cwde
shr
sub
add
cwde
hlt
into
cmps
mov
into
mov
scas
sti
(bad)
xchg
out
sbb
ins
add
jg
jb
jno
call
xchg
sub
daa
dec
mov
pop
not
lods
cmc
or
sbb
daa
push
mov
test
imul
dec
daa
test
scas
push
ss
sbb
dec
(bad)
pop
cmp
dec
xor
test
ret
jecxz
test
jmp
ds
rcr
add
jl
out
les
fistp
and
jbe
or
cs
add
nop
test
pop
ret
cmp
dec
loop
loop
dec
mov
pushf
iret
lods
in
call
pop
mov
and
xlat
lds
in
xchg
outs
and
pusha
std
mov
int
out
mov
cdq
ins
cmps
adc
fsubrp
fistp
adc
int3
lods
push
sub
cmp
arpl
dec
inc
pop
or
ins
push
sub
xchg
in
push
fiadd
jno
jmp
je
fdivp
dec
inc
push
ja
mov
jge
sub
add
add
sti
jb
inc
xlat
adc
leave
mov
leave
ds
mov
scas
inc
in
out
idiv
cmp
add
icebp
ja
movs
pop
pop
dec
xchg
ja
mov
sbb
mov
jle
adc
loope
cmp
jl
imul
pop
popa
ret
sbb
xor
push
bound
xor
addr16
push
into
xchg
dec
pop
frstor
cmp
stos
imul
fimul
in
in
or
jl
add
mov
retf
adc
dec
leave
mov
mov
mov
xchg
mov
inc
std
mov
retf
mov
add
in
jnp
ja
mov
or
retf
cmp
adc
push
shl
push
push
add
test
mov
jnp
xchg
rol
das
stc
scas
stos
lods
(bad)
push
and
sahf
pop
jl
icebp
push
jp
dec
nop
ret
mov
and
xchg
xor
in
push
sti
adc
push
inc
fist
dec
(bad)
in
sbb
jno
mov
pusha
push
mov
int
fbld
nop
rol
pusha
dec
or
dec
mov
nop
ins
sub
mov
adc
xchg
push
test
and
fdivr
and
int3
nop
adc
push
pop
es
mov
int3
and
mov
xor
int3
loope
mov
sti
dec
push
mov
push
jns
out
ds
cmp
lods
pop
pop
jge
es
enter
xor
inc
(bad)
aaa
sti
and
adc
add
push
popa
jae
cmp
das
movs
mov
xchg
cmps
sar
mov
jno
in
mov
fistp
(bad)
aam
xchg
pop
push
aas
cmp
test
ins
sub
sub
add
jmp
cmps
dec
fistp
mov
lock
xchg
sti
pop
repnz
js
ins
addr16
stos
dec
jg
(bad)
cmp
pusha
pop
neg
adc
adc
je
shl
lds
jl
and
rol
ja
lea
dec
addr16
push
test
mov
jne
lds
dec
lahf
or
pop
push
mov
fld
xor
pop
dec
movs
inc
dec
or
pop
mov
xor
jl
add
rdmsr
fld
iret
lea
movs
fimul
jnp
out
mov
add
mov
fwait
push
lds
jne
ins
test
fist
push
(bad)
jo
movs
or
addr16
pop
in
arpl
(bad)
mov
cs
(bad)
sub
in
ror
add
jp
mov
mov
stos
(bad)
lds
adc
jb
add
mov
ja
push
clc
nop
call
jnp
loopne
vfrczps
fcom
jne
popa
mov
ins
or
ror
addr16
popf
xor
xor
jmp
movs
imul
inc
adc
dec
pop
xchg
lods
out
sbb
daa
dec
cmc
jne
into
sbb
ror
ja
push
push
sbb
pop
rcl
test
mov
or
mov
mov
dec
mov
mov
mov
mov
popf
in
lahf
sahf
push
mov
pop
ins
xchg
inc
loopne
pusha
push
loope
dec
add
adc
xchg
jp
hlt
mov
stos
daa
test
icebp
and
js
mov
xor
or
ret
iret
in
jmp
fcmovnb
jno
jo
inc
ror
sbb
dec
and
cwde
ds
iret
mov
pusha
test
mov
pushf
pop
mov
cmp
loopne
cmps
xor
test
rcr
push
fdivr
sar
daa
cld
fcmovb
test
(bad)
jle
fwait
cmp
pusha
ss
and
cmc
cmps
pop
loopne
sbb
imul
cwde
fwait
mov
loope
cmp
or
mov
ss
stc
ins
inc
adc
jo
push
pushf
cmp
or
retf
test
cmove
mov
jae
adc
mov
mov
retf
stc
in
enter
mov
push
xor
push
pop
dec
call
fcmovnb
adc
fadd
adc
shr
popa
imul
mov
mov
sbb
nop
pushf
xchg
adc
inc
mov
add
mov
inc
jae
ror
mov
bound
dec
jne
retf
and
les
adc
mov
xor
das
gs
pop
sub
mov
ins
or
int
ror
sti
or
dec
jmp
(bad)
stos
(bad)
cmps
fdiv
clc
leave
imul
and
mov
in
sbb
push
cmp
js
sub
and
adc
or
jne
call
outs
jg
inc
test
adc
pusha
mov
dec
xor
dec
int3
neg
mov
pop
dec
push
sbb
mov
scas
mov
arpl
adc
lahf
inc
add
sti
cli
jp
fst
dec
(bad)
(bad)
repnz
js
scas
sub
mov
arpl
mov
test
push
mov
mov
mov
jp
jg
jmp
movs
xchg
pop
or
sub
mov
xor
mov
xchg
pusha
xor
out
pop
fisttp
pop
cmp
retf
(bad)
loope
mov
pusha
loop
test
jae
mov
shr
jne
fs
bound
arpl
xor
int
mov
xchg
lea
jle
loope
jl
xor
mov
sbb
popa
or
imul
jne
pop
popf
pop
ret
in
or
inc
ficom
out
jb
dec
test
sub
loop
adc
push
movs
push
(bad)
repnz
xchg
or
fs
mov
ret
sub
adc
xor
mov
or
adc
arpl
jnp
inc
std
inc
bound
adc
lods
xor
adc
mov
loop
sub
rcr
or
sub
mov
(bad)
retf
aad
cmp
es
and
lods
sub
sbb
xchg
lahf
cwde
test
pop
shl
mov
dec
enter
xor
les
dec
inc
jecxz
int3
jmp
mov
inc
xor
(bad)
push
cmp
retf
jb
sub
outs
jne
repnz
arpl
mov
fs
cmp
pop
jb
dec
jae
mov
push
push
fcmove
out
das
jns
jbe
ja
jo
mov
in
pop
les
shr
dec
xor
mov
mov
pop
mov
aas
nop
in
pop
pop
jmp
js
cmp
pop
jnp
je
ins
aas
lods
jecxz
lods
pop
jmp
pop
nop
gs
mov
movs
cmp
fisub
lock
stc
iret
test
xchg
sub
pop
cwde
sbb
cmp
fwait
into
outs
jle
icebp
cmc
mov
lods
xlat
inc
lods
pop
sub
xchg
shl
xor
mov
fsub
jne
addr16
mov
dec
adc
and
mov
and
stos
jnp
and
stos
and
pop
mov
das
popa
lods
lea
ds
xor
lods
mov
sub
or
jae
movs
inc
mov
xchg
(bad)
dec
aad
add
in
mov
or
fcomp
mov
js
(bad)
loope
jecxz
push
test
pop
cmp
repnz
push
cmp
rol
xchg
dec
iret
call
dec
aas
(bad)
xchg
in
lods
sub
bound
fwait
xchg
xchg
mov
out
fwait
out
ds
jo
push
adc
not
(bad)
cli
sub
icebp
jae
jecxz
fprem1
push
in
fistp
(bad)
test
xchg
mov
aam
cwde
mov
fcomi
into
dec
mov
cs
int
xchg
in
pop
int
in
dec
xchg
scas
inc
sti
add
pop
sbb
ret
jne
(bad)
bound
aaa
push
mov
shl
inc
cmp
fs
sub
cmp
inc
clc
shr
gs
mov
cs
cwde
pop
add
jns
aam
xor
ins
push
pusha
adc
sti
outs
loopne
push
mov
rol
test
pop
push
std
in
push
pop
retf
adc
mov
in
loopne
jg
stc
out
jg
stc
out
xor
and
call
add
add
dec
inc
scas
inc
pusha
or
add
add
add
(bad)
(bad)
inc
add
add
add
add
add
add
jns
je
ins
cs
jb
ja
outs
addr16
push
gs
imul
xor
xor
inc
jne
je
jb
cmp
jb
ins
sub
push
jne
ins
imul
imul
bound
xor
data16
xor
fs
add
adc
gs
cs
jb
ja
outs
addr16
imul
add
popa
je
pop
add
add
add
add
add
lsl
add
ret
adc
add
mov
inc
or
add
or
add
add
add
add
or
add
add
pusha
outs
rol
add
add
inc
dec
inc
add
mov
or
popa
add
jo
pop
jae
add
ret
add
push
ret
add
outs
test
add
adc
inc
inc
push
pop
inc
in
aam
and
ret
shl
cmps
mov
dec
mov
frstor
out
outs
cmps
into
cmp
int3
je
xor
cmps
cmps
(bad)
mov
js
out
jecxz
out
jl
add
jmp
xchg
popf
addps
xchg
sbb
jg
push
sbb
mov
sub
nop
lock
inc
or
shl
retf
shl
rcl
add
cmp
sbb
and
clc
mov
mov
cdq
xchg
pop
sub
js
mov
out
add
cli
add
(bad)
fdivr
in
jle
mov
inc
call
xor
jmp
loop
gs
inc
mov
sbb
jg
jmp
mov
sub
or
ficom
inc
inc
jne
inc
pushf
mov
dec
test
inc
ds
call
out
push
push
js
cdq
cmp
imul
stos
loope
jae
ja
mov
jmp
in
cmp
push
rol
adc
fmul
fbstp
aas
movs
call
xor
jno
push
data16
pop
in
in
jae
adc
sub
shl
adc
in
and
sbb
arpl
push
scas
inc
rcl
mov
sbb
inc
sbb
pop
into
loopne
aas
fcom
jnp
jp
clc
jmp
push
in
and
or
test
sbb
arpl
sahf
dec
mov
mov
iret
xchg
pop
pop
inc
into
fsub
push
and
pop
push
cld
aaa
adc
std
ins
gs
push
icebp
addr16
inc
xor
cs
fdivr
outs
lods
fisubr
push
and
pop
cmps
in
ins
out
cmp
mov
pop
lea
aam
or
push
movs
shl
jmp
neg
int
jge
repnz
loopne
jl
dec
jge
mov
or
daa
in
repz
mov
inc
inc
dec
cmp
shl
lods
add
dec
dec
imul
lahf
shl
cmps
and
das
jns
loope
gs
or
into
inc
rcr
sbb
jecxz
rol
rcr
call
imul
fisubr
pop
shl
dec
movs
push
xchg
lods
pop
sub
lahf
sar
repnz
dec
rcl
ins
xor
pop
mov
je
(bad)
jmp
std
xor
loope
loopne
mov
mov
(bad)
fsub
mov
xor
jmp
push
enter
aad
icebp
pop
mov
(bad)
sub
xor
cdq
jp
xor
mov
and
mov
leave
inc
xchg
xlat
inc
test
sar
adc
call
or
pop
cmp
add
enter
push
dec
ds
dec
jl
sbb
or
xchg
repz
je
dec
cmp
std
lods
dec
jmp
mov
les
(bad)
dec
fbstp
mov
cwde
mov
out
call
mov
sbb
pop
pop
rol
mov
cmp
jne
popa
mov
out
sbb
add
into
stos
mov
jg
test
pop
fist
jno
xor
add
cdq
jnp
adc
fs
bnd
pusha
inc
std
xchg
gs
test
push
scas
(bad)
cmp
nop
repnz
push
push
call
and
sub
aaa
add
sbb
and
sub
shl
jge
pusha
adc
cs
mov
push
mov
jns
push
or
popf
mov
mov
sbb
sbb
out
sti
jmp
imul
int
mov
(bad)
push
add
or
sbb
sub
inc
sahf
jp
ins
pop
adc
cli
iret
fist
pusha
pop
xor
or
cli
mov
test
repz
mov
mov
nop
inc
jbe
aas
in
adc
sbb
test
cmps
fisubr
mov
leave
push
cwde
fdivr
aas
push
xor
fiadd
push
pushf
mov
(bad)
pop
rcl
xor
iret
(bad)
loop
push
retf
mov
mov
xchg
gs
cmps
retf
xor
or
repnz
mov
bound
ficom
ret
or
ins
test
xchg
(bad)
xor
jl
test
and
mov
push
test
xlat
test
mov
mov
and
sbb
inc
sub
xlat
sub
inc
dec
pop
sbb
adc
jl
fcmovb
lock
mov
into
add
lahf
jle
mov
push
ja
clc
sub
pop
sbb
xchg
es
push
mov
xor
dec
je
pop
adc
movs
mov
pop
call
jb
push
adc
mov
jae
int3
mov
int3
cmp
sbb
and
add
mov
neg
mov
or
dec
mov
ss
stc
sbb
imul
les
dec
imul
mov
sahf
into
pop
mov
es
mov
call
ror
or
pop
out
and
and
enter
pop
sbb
mov
mov
sbb
sbb
fwait
pop
sbb
out
pop
xchg
adc
bswap
or
fmul
(bad)
or
pop
cmp
sub
pop
xchg
push
xor
push
jno
(bad)
xor
pusha
ja
ins
push
jg
data16
stos
add
dec
sub
stos
js
or
jmp
call
lahf
xor
test
std
or
das
(bad)
adc
lds
xchg
mov
mov
add
ret
out
sbb
mov
int
sub
ficomp
out
or
sbb
aam
out
pop
std
sahf
push
shl
jecxz
push
popa
add
sub
aaa
dec
add
mov
fdivr
in
push
mov
out
(bad)
sti
loop
lea
cmp
pop
xor
pop
or
adc
cmp
jp
nop
test
imul
sti
and
and
fisttp
outs
mov
lds
fs
aaa
fpatan
hlt
lock
jle
sub
shl
icebp
mov
jns
mov
in
in
push
pop
(bad)
movs
out
dec
jnp
nop
xchg
sbb
adc
fmul
xchg
es
push
clc
mov
dec
or
cmp
xchg
lods
pop
(bad)
nop
cmps
enter
sub
cmc
xchg
add
fistp
jb
ins
cmp
xor
(bad)
mov
retf
int3
pop
mov
iret
aas
and
bound
pop
jae
xchg
sbb
(bad)
and
daa
mov
retf
inc
loopne
sbb
and
in
fld
ja
sbb
jg
call
xor
repnz
jecxz
jb
mov
movs
jns
sub
cmc
pop
bound
adc
aaa
sahf
retf
fsub
jns
sub
call
inc
fisttp
sub
dec
add
loope
loop
push
addr16
adc
imul
pop
mov
rcr
and
cmp
lds
cmps
xchg
fldcw
cmp
dec
pop
mov
or
mov
rcr
xchg
mov
movs
ret
adc
and
sub
sbb
pop
adc
or
nop
lods
out
xchg
pop
retf
(bad)
xor
ds
cmp
ins
(bad)
in
fs
stos
sahf
cli
stos
sbb
addr16
pop
sub
dec
aaa
or
lods
sub
pop
(bad)
and
mov
lea
loopne
lea
test
jg
push
mov
mov
mov
or
pop
and
(bad)
iret
cmp
and
int
ror
test
imul
sub
ret
call
test
lahf
aaa
shl
lea
or
xchg
pop
daa
gs
cld
test
(bad)
jmp
or
and
sbb
push
nop
jb
iret
dec
fwait
push
xor
cmc
outs
push
xor
arpl
pop
aaa
dec
xchg
sub
push
scas
push
add
ins
jp
das
rcr
ins
mov
mov
test
and
jne
cmp
iret
ins
adc
adc
addr16
xor
aad
mov
xor
ret
xor
in
inc
jl
or
push
shr
cwde
xchg
in
jmp
inc
call
(bad)
cmp
push
lods
leave
mov
push
adc
push
add
es
mov
les
adc
je
and
push
sahf
pop
pop
popf
not
inc
sbb
test
iret
fs
ds
icebp
sbb
cwde
aas
hlt
xor
cmp
js
fmul
dec
jmp
test
stos
fcomip
xchg
xchg
jno
cmps
mov
sbb
mov
jbe
pushf
(bad)
push
sbb
stc
push
jae
dec
xor
jle
popf
(bad)
mov
mov
adc
lock
fbstp
jmp
push
loopne
cmp
ins
in
sbb
pop
popa
test
in
adc
loope
adc
loopne
push
lea
sbb
push
nop
xor
and
loope
pop
sub
cmp
cmp
aam
ret
mov
mov
imul
retf
add
das
jl
sub
neg
cmp
cli
push
(bad)
dec
adc
ins
pop
movd
mov
xchg
in
mov
cmps
aaa
jmp
lds
xor
data16
pusha
lods
std
sbb
in
loopne
inc
jg
xor
sub
or
stos
stos
hlt
or
outs
lock
test
adc
xchg
pusha
xor
rcr
fwait
dec
pop
fdiv
mov
(bad)
loop
add
stos
push
scas
inc
mov
out
or
lods
movs
cdq
scas
daa
jp
xchg
mov
mov
idiv
xchg
mov
mov
loope
cs
mov
sti
rol
arpl
push
popa
aad
mov
mov
xchg
clc
xchg
fsubr
mov
xor
mov
mov
out
mov
ror
adc
mov
pop
add
jns
jb
fdiv
mov
inc
push
out
mov
xor
mov
mov
and
inc
repnz
xacquire
pusha
std
imul
pop
int3
out
xor
in
psrlq
jns
gs
pop
sub
sub
jns
push
ds
cdq
xchg
xchg
sbb
ror
pop
std
push
dec
jmp
jbe
sahf
add
iret
hlt
sar
inc
mov
or
aam
retf
jmp
cmps
pcmpgtd
dec
sub
cwde
call
loope
add
(bad)
scas
mov
pusha
xrelease
rol
mov
lods
inc
push
jne
adc
mov
jb
imul
ror
loop
test
pop
mov
xchg
mov
clc
fisub
shr
ja
outs
outs
adc
pop
xchg
call
adc
sbb
in
mov
jle
lea
pusha
dec
sub
fstp
call
(bad)
fnstsw
retf
lods
dec
loope
sbb
jg
leave
mov
dec
(bad)
outs
inc
test
jmp
push
mov
es
into
scas
test
nop
nop
jns
pop
cmps
or
dec
jae
push
jno
imul
cdq
bound
icebp
mov
mov
xor
nop
push
xor
lahf
add
jmp
scas
xchg
enter
movs
(bad)
popf
retf
rcr
adc
jbe
pusha
ss
retf
(bad)
cwde
adc
test
imul
sahf
aam
rcr
lea
push
mov
int3
push
movs
loopne
xor
mov
sbb
jnp
inc
daa
mov
es
xor
cmp
aad
shl
add
sbb
add
mov
iret
rcl
mov
xchg
(bad)
and
jge
int3
dec
xchg
cld
or
inc
jge
pop
pusha
xchg
sub
sub
jmp
sbb
push
fucomi
cmp
cmp
sbb
aad
xchg
data16
js
and
jl
sub
push
stos
and
retf
ds
adc
mov
fsubr
(bad)
aad
sbb
and
stc
in
sub
(bad)
bound
jae
fidiv
fistp
ja
aaa
mov
and
mov
cwde
fwait
stos
stos
xchg
sub
xlat
and
add
imul
and
push
mov
test
cmp
jbe
cmp
lea
enter
mov
fldcw
or
pop
xor
mov
shl
inc
(bad)
rcl
xor
and
js
retf
fisub
cmp
stos
(bad)
and
sub
inc
(bad)
in
shl
outs
sbb
adc
mov
int
gs
shl
outs
movs
mov
retf
jecxz
adc
jnp
ja
xchg
test
and
mov
arpl
cmp
jle
leave
sub
cmp
ret
pop
xchg
int3
add
pop
mov
jg
je
aad
mov
jo
and
or
daa
dec
pop
cmp
enter
mov
rcr
xchg
ss
mov
cdq
or
xor
out
movs
dec
mov
rcl
jmp
mov
sbb
sbb
sub
adc
ins
call
inc
and
les
(bad)
stos
stc
pusha
pop
push
js
jmp
or
movs
xchg
pop
inc
ret
iret
mov
outs
scas
std
jg
push
ins
jmp
xor
sar
hlt
mov
pusha
xchg
mov
icebp
fbstp
pop
loopne
mov
xchg
mov
scas
sbb
mov
(bad)
scas
mov
aad
outs
data16
lgs
imul
aas
push
scas
lods
dec
pusha
inc
mov
outs
cmp
jge
jnp
lods
in
std
cdq
add
mov
ja
mov
call
xchg
ss
cmp
test
shl
movs
cmp
or
mov
js
mov
xchg
cmp
int
scas
idiv
js
sbb
pop
push
(bad)
push
rep
sbb
sti
add
add
dec
push
(bad)
mov
xor
lods
cmps
ins
(bad)
jle
jae
aas
adc
cmp
push
loopne
pop
sbb
repz
inc
jae
mov
cld
jp
dec
xor
call
mov
xor
push
xor
inc
mov
jno
ins
push
(bad)
push
pavgb
jb
mov
rcr
mov
mov
dec
xchg
dec
push
xchg
(bad)
scas
xor
inc
jle
retf
push
imul
fwait
add
jecxz
test
repz
or
jbe
fdiv
add
in
adc
mov
or
jns
or
push
xchg
xchg
stos
hlt
imul
cdq
xchg
dec
mov
inc
mov
mov
and
push
jnp
shl
xor
mov
(bad)
dec
in
scas
add
stc
sub
(bad)
push
and
jge
cwde
idiv
ins
adc
mov
jl
gs
call
push
push
dec
mov
sar
sbb
loope
jmp
pop
adc
jge
mov
aaa
pusha
jno
movs
jg
pop
in
mov
xor
sub
push
rdtsc
jne
pop
inc
ficom
push
adc
mov
and
xor
cmps
push
(bad)
loope
imul
aam
inc
lgs
fucom
aaa
push
and
jg
movs
scas
or
dec
jbe
cmp
fcomp
(bad)
cmp
sub
mov
test
mov
pop
addr16
mov
cwde
sbb
fstp
mov
cs
jbe
jne
lods
mov
xor
push
xor
xchg
shr
jns
fisubr
out
mov
cmp
xchg
clc
push
mov
(bad)
out
(bad)
inc
xor
shr
mov
mov
dec
xchg
repz
add
stc
out
jg
stc
out
jg
pop
add
dec
mov
loopne
xchg
or
xor
dec
inc
dec
inc
scas
inc
pusha
or
add
add
add
(bad)
(bad)
inc
add
add
add
add
add
add
jns
je
ins
cs
jb
ja
outs
addr16
push
gs
imul
xor
xor
inc
jne
je
jb
cmp
jb
ins
sub
push
jne
ins
imul
imul
bound
xor
data16
xor
fs
add
adc
gs
cs
jb
ja
outs
addr16
imul
add
popa
je
pop
add
add
add
add
add
lsl
add
rcl
add
mov
inc
or
add
or
add
add
add
add
or
add
add
pusha
outs
rol
add
add
inc
dec
inc
add
mov
or
popa
add
jo
pop
jae
add
ret
add
push
ret
add
outs
test
add
adc
inc
inc
push
pop
inc
in
rol
loopne
jbe
fdiv
dec
div
daa
cmps
fwait
test
arpl
in
cmp
ret
je
sti
jle
idiv
sldt
inc
add
mov
or
(bad)
frstor
dec
es
or
dec
mov
jmp
stc
xor
gs
outs
mov
cmp
div
sbb
les
xor
ins
jbe
arpl
out
lahf
in
(bad)
aam
xchg
dec
dec
cs
push
mov
popf
xor
inc
scas
(bad)
loop
cmp
scas
loope
outs
stc
adc
fist
mov
hlt
dec
adc
jne
jb
into
cdq
pop
stos
aas
jbe
les
sub
pusha
pushf
aam
aad
pop
mov
jmp
inc
xor
mov
fwait
es
mov
mov
xchg
cmps
add
dec
and
cmps
pop
cmp
mov
int
and
loop
xchg
jno
jl
ins
adc
in
sbb
mov
out
pop
cwde
in
sub
jge
jne
out
ror
cmps
jo
mov
repz
test
dec
mov
mov
cmp
imul
mov
stos
(bad)
rol
jg
pop
inc
sub
pop
repnz
retf
mov
dec
cmp
cmp
or
adc
mov
call
lahf
cmp
add
mov
mov
jno
jno
add
inc
shl
cmp
ret
out
mov
pop
add
and
mov
das
cmp
pop
fldcw
cmp
pop
scas
retf
adc
cmp
mov
jns
imul
scas
gs
les
mov
dec
adc
jmp
jmp
pop
cdq
adc
lea
mov
outs
cwde
mov
sub
and
mov
movs
ss
sbb
(bad)
sti
loope
movs
and
dec
(bad)
pusha
jae
sbb
xchg
pop
lods
cli
cmp
lahf
fidiv
(bad)
(bad)
fbld
iret
xchg
in
jae
hlt
sbb
add
pop
daa
nop
lods
cwde
inc
cmp
aad
ins
pop
jmp
push
mov
aam
nop
pushf
dec
or
add
inc
clc
gs
jl
stc
xchg
vmovd
je
mov
sub
push
and
(bad)
mov
dec
mov
add
int
fld
outs
mov
imul
mov
fwait
arpl
xchg
arpl
jp
test
and
mov
xor
idiv
pusha
push
(bad)
push
push
ins
and
sub
ins
mov
or
test
adc
lods
add
push
shl
xor
test
out
in
das
cwde
push
xor
cmp
mov
repnz
aas
pop
in
arpl
and
dec
or
in
movs
xor
das
xor
or
jmp
jg
aam
fs
jecxz
mov
inc
out
loope
xchg
aam
jge
or
jg
hlt
(bad)
leave
pop
stos
(bad)
jmp
inc
retf
lods
outs
sub
dec
test
iret
xchg
push
mov
fsub
jle
inc
jae
mov
sbb
fld
mov
ret
xchg
outs
lods
outs
clc
xchg
and
mov
inc
fadd
data16
mov
jmp
or
fwait
sahf
std
leave
ret
xor
icebp
pusha
jbe
imul
dec
mov
(bad)
push
lods
pop
sbb
sti
rcl
pop
fidiv
mov
push
xor
les
enter
gs
pop
popa
inc
xchg
test
mul
xor
(bad)
cmc
pop
xor
out
pop
imul
fwait
pop
add
cmp
and
in
fild
and
cmp
inc
rcr
aaa
mov
in
jbe
rcr
push
cmp
aaa
fnstcw
xchg
jle
retf
or
jno
and
jmp
mov
je
fs
push
enter
dec
cmp
test
mov
cmps
sbb
ss
xchg
out
mov
cmc
loopne
div
dec
mov
fidiv
or
dec
ror
rcl
icebp
ins
(bad)
loope
and
in
mov
test
pop
cld
mov
loop
fisub
rcr
adc
inc
(bad)
and
leave
movs
or
xchg
mov
ret
sbb
inc
adc
sbb
push
cdq
movs
xchg
sbb
hlt
fsubr
test
dec
adc
aam
lahf
sbb
loope
sub
sbb
hlt
cmp
pop
or
cmp
xchg
in
dec
mov
fcomip
movs
push
cmp
jecxz
les
ins
das
clc
ret
mov
ins
add
ins
enter
and
push
mov
(bad)
fcmovne
aaa
push
lea
dec
xchg
mov
test
and
cdq
repz
cdq
or
es
fs
xchg
test
(bad)
jmp
sbb
and
or
stos
dec
push
xchg
or
mov
pop
bswap
(bad)
imul
shr
not
ja
cmp
xlat
movs
shl
das
call
shl
int3
mov
inc
pop
pop
and
dec
xchg
pop
xchg
enter
xor
(bad)
(bad)
movs
jmp
fadd
xchg
fnstsw
repnz
add
fwait
call
(bad)
in
test
push
loop
ins
out
fild
push
or
mov
cmps
and
jns
dec
pop
(bad)
jecxz
stos
jle
jmp
cs
mov
mov
fs
repnz
pusha
cmove
or
mov
ja
adc
into
aad
dec
mov
mov
pop
xchg
cmc
hlt
cmps
mov
xor
xchg
repnz
cwde
jne
mov
xchg
pop
xchg
cmps
mov
pop
jp
int
test
cli
test
mov
add
hlt
shl
int3
daa
or
push
mov
or
cld
mov
ins
jle
dec
push
jmp
(bad)
(bad)
sbb
sti
xchg
daa
in
push
jmp
cmp
mov
push
xchg
es
ins
or
mov
push
cmps
jns
push
imul
pop
dec
(bad)
rcl
iret
out
fiadd
adc
mov
mov
jae
jnp
cmp
(bad)
fcomip
push
pop
outs
adc
add
sub
xor
arpl
xadd
iret
outs
daa
xor
pushf
pop
(bad)
fdivr
adc
xor
ror
retf
push
mov
jmp
ret
mov
adc
ins
mov
fimul
sti
ficom
cwde
lock
and
out
mov
xchg
xor
pop
fwait
push
cmp
stos
(bad)
imul
push
fimul
inc
or
ins
ins
mov
mov
dec
add
js
jecxz
add
hlt
retf
cmps
push
cli
push
push
test
(bad)
dec
cwde
dec
lds
imul
jb
lock
es
icebp
lea
aaa
(bad)
(bad)
(bad)
add
stos
jns
int
lods
gs
icebp
adc
movs
fisttp
aaa
fld
pop
xor
inc
enter
or
push
(bad)
pop
mov
or
mov
pushf
or
fdiv
mov
xor
movs
sbb
xor
jne
out
jbe
int
sar
add
fadd
retf
fcomip
test
xor
int3
jo
xor
xchg
jg
ss
jnp
leave
pop
mov
pop
xlat
ror
sub
push
popa
test
jmp
leave
loop
dec
std
loope
inc
cli
mul
jno
iret
or
and
lock
repz
pop
mov
cmps
(bad)
das
dec
jmp
cmp
sub
mov
loope
outs
sub
jge
into
xchg
sahf
dec
gs
cmp
xor
fwait
test
lods
xor
push
jg
imul
mov
call
sbb
xchg
pop
fidiv
mov
xchg
adc
pop
cmp
stc
mov
popf
not
pop
iret
test
pop
fld
mov
loop
adc
cmp
scas
fisttp
jmp
in
xchg
lds
imul
add
int3
shl
xor
pusha
mov
fild
push
pop
or
test
data16
(bad)
stos
cld
xchg
getsec
pop
dec
lods
jnp
pop
std
xchg
pop
xchg
cwde
mov
(bad)
push
pop
pop
ins
cmp
daa
shl
les
(bad)
mov
cwde
dec
push
inc
mov
enter
jmp
sbb
or
xor
sub
sub
scas
jge
and
shl
or
or
imul
fsubr
ret
lea
jmp
into
sahf
inc
aas
sbb
inc
test
call
dec
arpl
ss
popa
dec
mov
cmp
mov
repz
stos
push
add
adc
push
pop
mov
inc
mov
das
movs
jl
mov
hlt
xchg
push
mov
mov
dec
int3
push
pop
mov
mov
enter
mov
(bad)
mov
sbb
push
mov
xor
sbb
aad
xor
out
or
ss
xor
sbb
lahf
sub
loop
aas
pusha
in
pop
inc
add
jecxz
sar
inc
push
repnz
hlt
rol
or
scas
mov
pop
popf
xor
ins
pop
test
jns
dec
cmps
add
and
jno
mov
fisubr
sbb
dec
repz
aaa
mov
jnp
int3
and
scas
pop
inc
bnd
cld
xchg
outs
std
mov
cmp
xchg
lock
xchg
dec
ror
stos
jg
jl
mov
addr16
fld
inc
xchg
stos
arpl
dec
adc
mov
mov
and
sbb
dec
push
in
aas
dec
xor
stos
push
cmc
inc
sbb
mov
dec
sti
and
cmp
retf
pop
inc
call
xor
adc
pop
js
fsubr
rcl
or
fild
push
push
xor
sub
fiadd
push
fdiv
fisttp
adc
push
cmp
cmp
arpl
and
xchg
cs
pop
push
mov
xchg
adc
imul
mov
mov
push
jno
add
fucomip
icebp
mov
jne
mov
(bad)
ss
xchg
sahf
enter
mov
sub
mov
in
mov
adc
and
cld
xchg
sub
cmp
je
ret
jbe
xchg
add
pop
rcl
inc
dec
std
and
xor
xor
inc
push
int3
pop
aam
mov
cmps
push
ret
daa
cs
and
cmc
pop
(bad)
clc
sti
jns
(bad)
js
mov
push
movs
and
sub
imul
les
mov
and
rol
(bad)
adc
pop
dec
lock
or
js
adc
push
ja
retf
and
add
loope
adc
add
jp
iret
push
or
lods
wbinvd
push
push
fs
dec
imul
pop
sub
mov
in
data16
jmp
stc
push
sub
dec
mov
cld
push
icebp
(bad)
jo
xchg
cmp
ins
cmps
ja
addr16
shr
sub
cmps
das
xchg
sub
test
call
jge
add
mov
fs
xchg
inc
lods
or
xchg
js
jl
mov
cmp
jbe
push
and
adc
cli
sbb
mov
adc
mov
mov
popf
jle
jmp
loop
fisub
push
enter
jae
inc
imul
inc
dec
das
adc
cmp
sbb
xor
dec
je
bound
jbe
dec
inc
rcr
(bad)
sub
shl
add
jns
and
out
pop
mov
sub
and
int3
mov
std
pop
test
mov
aad
nop
pushf
ss
fidivr
loop
sahf
xlat
xlat
adc
pusha
in
enter
and
shl
or
xchg
lds
(bad)
loopne
enter
lods
cmp
imul
push
dec
sbb
xchg
jns
cwde
or
lds
adc
adc
ins
(bad)
sahf
out
xchg
(bad)
mov
adc
jge
mov
xchg
lods
imul
movs
sti
sub
loopne
push
jb
push
fldz
das
ret
sub
arpl
mov
push
mov
cmp
popf
gs
cmp
xchg
pop
add
cld
mov
inc
stos
in
test
les
aas
lea
mov
jg
adc
jo
into
push
dec
daa
pop
mov
mov
mov
iret
and
jae
out
and
lahf
pop
stc
adc
daa
xchg
cmp
mov
sbb
sub
fdivr
jno
mov
jb
mov
adc
jge
call
jnp
cs
cwde
fidivr
dec
xchg
in
popf
test
ror
and
setno
pop
jmp
stc
xchg
ins
lahf
test
jae
and
xor
xlat
sub
fldcw
shl
push
ret
jnp
out
adc
mov
xor
sti
fcompp
mov
push
dec
dec
dec
lods
cmps
into
std
(bad)
daa
not
cli
or
mov
lods
cs
cli
xchg
daa
rcr
cmova
stc
sbb
popa
fisub
cli
inc
and
fs
or
cmp
in
in
loopne
lods
xor
pop
mov
in
stos
xchg
push
adc
or
pop
push
rep
test
inc
je
cmps
movs
push
inc
aad
in
arpl
xor
mov
pusha
push
loopne
dec
cmp
dec
pop
inc
stos
cdq
fwait
xor
cli
pop
pop
push
clc
dec
out
int
fild
lock
mov
cmp
fwait
inc
ins
mov
jp
int3
pop
mov
mov
call
mov
rcl
dec
neg
mov
dec
stos
and
mov
jmp
shl
push
bnd
pop
fistp
mov
xlat
cwde
lds
sub
mov
call
or
cmp
stc
mov
dec
and
xor
jl
aad
out
scas
imul
les
mov
dec
enter
idiv
jbe
dec
(bad)
scas
push
je
push
mov
idiv
push
add
clc
fucomi
jp
push
sbb
sahf
fs
jb
mov
or
movs
mov
or
xchg
es
jns
mov
xor
sub
mov
es
dec
inc
jmp
ins
outs
icebp
inc
dec
push
pop
clc
gs
rcr
stc
jle
cmc
ror
adc
mov
call
mov
in
xchg
imul
pop
mov
add
adc
fwait
jb
fld
(bad)
cmp
jns
adc
ins
rcl
jl
xchg
inc
lock
or
push
jbe
adc
dec
iret
leave
sti
cli
cmc
test
dec
xor
cmc
adc
fwait
in
jb
lahf
xchg
xchg
popa
xor
add
push
cmp
inc
(bad)
cmp
jl
add
ins
or
aaa
xor
loopne
cmp
popa
mov
jno
adc
xchg
fld
xchg
cmp
outs
push
push
mov
mov
jge
mov
sub
in
arpl
pop
outs
push
cmp
jmp
push
pusha
imul
pop
mov
sbb
sahf
add
mov
in
hlt
and
xchg
dec
pop
mov
ins
mov
test
into
push
cmc
scas
out
sbb
add
xchg
test
adc
push
jnp
sbb
push
xor
and
outs
stc
(bad)
pop
stc
xor
shr
scas
retf
test
sahf
mov
outs
inc
imul
dec
aam
cs
fucomp
or
(bad)
ins
jnp
xor
call
xor
push
add
xchg
push
aaa
mov
push
loopne
loopne
dec
nop
nop
idiv
add
and
loop
pusha
outs
or
shl
clc
std
(bad)
daa
loope
mov
push
sub
dec
int3
sahf
pop
jg
mov
jg
mov
ja
mov
push
je
push
mov
cmp
out
or
sbb
pusha
std
fstp
and
mov
jp
lods
adc
fld
mov
popa
int
out
mov
and
push
jp
mov
cmp
clc
iret
jg
repz
(bad)
cld
out
(bad)
stc
mov
inc
daa
out
rcr
add
add
dec
inc
dec
inc
scas
inc
pusha
or
add
add
add
(bad)
(bad)
inc
add
add
add
add
add
add
jns
je
ins
cs
jb
ja
outs
addr16
push
gs
imul
xor
xor
inc
jne
je
jb
cmp
jb
ins
sub
push
jne
ins
imul
imul
bound
xor
data16
xor
fs
add
adc
gs
cs
jb
ja
outs
addr16
imul
add
popa
je
pop
add
add
add
add
add
lsl
add
rcl
add
mov
inc
or
add
or
add
add
add
add
or
add
add
pusha
outs
rol
add
add
inc
dec
inc
add
mov
or
popa
add
jo
pop
jae
add
ret
add
push
ret
add
outs
test
add
adc
inc
inc
push
pop
inc
in
rol
aam
add
loopne
xchg
mov
xchg
pushf
xchg
mov
test
ins
into
cmp
(bad)
les
ins
mov
cmp
add
mov
imul
int3
sub
sub
dec
jmp
pop
fdiv
or
mov
mov
sub
pop
sbb
cmc
push
iret
xadd
in
fmul
dec
aaa
cmp
sub
push
dec
fnsave
sahf
dec
inc
pop
rcl
jnp
dec
ins
adc
adc
(bad)
(bad)
xor
pop
test
inc
xchg
scas
mov
jns
(bad)
sti
fst
les
leave
or
out
push
pcmpgtd
test
or
jo
pop
jns
sub
dec
jmp
inc
adc
mov
mov
stos
dec
or
mov
mov
xchg
stos
adc
mov
pop
out
lods
stos
fcom
mov
aad
push
pop
shl
inc
jmp
dec
sahf
xchg
cmp
retf
dec
sahf
xchg
aas
or
sbb
enter
sub
scas
out
ds
mov
and
sbb
xchg
xor
sti
xor
pop
sbb
leave
inc
xor
pusha
add
push
sahf
scas
mov
ds
ss
mov
add
pop
mov
mov
cmp
inc
mov
scas
add
ds
xchg
push
mov
mov
out
popf
lock
mov
cmps
fdiv
icebp
xchg
cmp
dec
sbb
xchg
pop
adc
les
xchg
cli
add
sub
retf
lds
xchg
(bad)
jmp
or
sbb
(bad)
and
out
mov
sub
test
daa
aad
sub
or
or
dec
sub
jmp
leave
adc
sbb
dec
cmps
popa
(bad)
jmp
imul
jb
repz
movs
inc
xchg
sbb
pop
outs
mov
push
out
aad
sub
cmp
jmp
cmps
call
sahf
pop
mov
test
sub
xor
rcl
mov
mov
dec
cmp
inc
ins
sub
mov
jg
cmp
inc
sub
pop
imul
scas
cmp
mov
(bad)
arpl
ret
repz
je
fcom
mov
cmp
add
imul
jg
mov
arpl
pop
inc
mov
jbe
xchg
cwde
jno
pop
imul
jl
aaa
mov
mov
ret
mov
out
(bad)
or
mov
push
(bad)
cmps
int3
cmps
xchg
test
hlt
and
or
dec
add
sbb
sub
loopne
mov
inc
cs
int
je
sub
in
test
add
add
je
adc
gs
cmps
or
xor
rol
das
hlt
aaa
jno
push
push
stos
inc
iret
retf
cdq
out
mov
stc
sub
cmp
pushf
cmp
jecxz
pop
cmc
js
lahf
mov
lods
xchg
jg
or
push
sub
retf
cmp
xchg
sbb
sub
mov
mov
lock
aad
test
sub
adc
nop
jecxz
sbb
call
mov
mov
adc
das
pop
mov
outs
adc
jmp
cmps
ds
loopne
adc
mov
lahf
mov
out
sub
out
mov
mov
fsub
mov
(bad)
and
cli
mov
and
sub
mov
add
ja
cmc
or
jbe
mov
cli
jbe
xchg
popf
imul
pop
and
cmps
jnp
inc
mov
jmp
pop
jbe
out
scas
push
sbb
jo
test
push
jo
fist
stc
xor
mov
cmp
inc
in
int
js
sub
pop
or
sbb
mov
sahf
add
push
cmp
or
inc
cmp
mov
push
fs
jl
pop
lea
cwde
or
out
dec
outs
popa
mov
xlat
(bad)
jne
sub
xadd
push
aaa
fistp
pop
push
int3
movs
dec
xchg
adc
pop
sub
and
mov
test
std
(bad)
fdiv
out
mov
icebp
cmp
jns
add
inc
dec
add
pusha
xchg
jecxz
sub
into
ret
mov
dec
push
je
(bad)
aad
push
push
sub
mov
push
(bad)
xor
mov
bound
cli
inc
and
dec
jmp
xor
stos
bound
iret
movs
push
aam
hlt
mov
push
movs
push
push
push
add
shr
and
mov
out
les
out
dec
sub
int3
test
sahf
test
jle
jmp
call
daa
jno
cmp
js
cmp
loope
cmp
mov
jle
pop
xchg
jmp
inc
popf
mov
xlat
xor
fsub
data16
push
jmp
daa
push
mov
outs
scas
jo
rol
fsubrp
push
mov
jae
jnp
mov
add
test
xor
test
pop
stos
stos
sar
add
movsx
mov
push
add
pop
pusha
leave
pop
jle
lahf
fsubr
outs
fcomp
(bad)
shl
pop
mov
(bad)
sbb
add
mov
(bad)
pop
mov
sbb
pop
cmps
push
add
xor
in
xchg
stos
adc
dec
mov
inc
cmp
lods
aad
pop
in
in
add
out
mov
jae
call
mov
push
xchg
(bad)
aas
cmps
hlt
loop
js
fist
mov
mov
xchg
and
mov
jle
rol
ins
xor
xchg
xor
adc
shr
ins
jnp
dec
cmp
mov
int
test
sbb
inc
mov
mov
sub
cmp
xchg
mov
and
cmp
imul
call
mov
ins
into
sbb
push
and
retf
cli
push
pop
test
retf
or
mov
push
mov
cmp
in
xchg
jmp
push
addr16
xchg
loop
xchg
out
push
or
imul
aad
test
lods
jne
call
add
xchg
jge
adc
test
xor
push
or
add
into
pop
lods
inc
jo
cmp
dec
mov
std
push
inc
stos
lock
xchg
(bad)
cmc
inc
mov
cmps
mov
sbb
dec
lods
lds
repnz
in
out
sbb
shl
int
fist
iret
xor
stos
arpl
imul
mov
pop
or
mov
adc
leave
enter
stos
test
push
fiadd
dec
fnsave
inc
scas
cld
es
sub
popa
ror
js
inc
jnp
pop
sub
mov
in
in
xchg
retf
adc
inc
loope
mov
out
inc
sbb
jmp
movs
fcmovu
mov
pusha
into
out
xchg
aaa
sub
mov
mov
cld
sub
into
push
movs
dec
adc
lahf
cdq
imul
daa
inc
sub
shl
rcl
or
ror
jecxz
add
sub
dec
push
sub
stc
mov
cdq
cmp
mov
mov
jae
or
xchg
shl
outs
lahf
jge
into
loope
pop
fwait
jle
out
cmp
mov
dec
mov
pop
mov
inc
imul
imul
in
hlt
cmp
fnstenv
cdq
leave
ins
lock
lock
jae
cmps
out
cld
mov
mov
imul
jle
inc
rcr
lds
hlt
cmp
push
(bad)
imul
call
dec
jmp
lea
mov
jg
nop
hlt
rcl
int3
ror
movs
or
dec
(bad)
clc
clc
pop
fwait
and
pusha
lea
fist
adc
mov
fbstp
pusha
fild
pop
cmp
xchg
inc
jge
xchg
mov
pop
mov
mov
retf
daa
scas
repnz
pop
scas
push
cmp
jle
cmp
cmp
popa
loop
jnp
jmp
jg
out
xor
inc
and
adc
arpl
adc
push
pop
inc
in
push
mov
mov
stos
xor
addr16
(bad)
(bad)
dec
sub
std
sub
inc
or
sbb
fistp
shl
dec
cmc
and
or
jns
dec
dec
push
sbb
push
pop
push
xor
pop
dec
cmp
aam
sti
icebp
mov
scas
inc
test
sub
pop
test
xchg
out
sub
or
cmp
add
repz
adc
dec
pop
and
xchg
imul
pop
pushf
pop
or
add
fdivr
mov
push
into
push
cmp
lea
ror
inc
in
movs
test
inc
sti
js
dec
cmps
ror
push
and
hlt
mov
and
jnp
fadd
jg
jnp
scas
into
pop
pop
cli
jl
pop
jp
popa
adc
xor
fist
fmul
inc
inc
repz
(bad)
in
dec
push
inc
adc
in
and
hlt
xor
dec
enter
sti
shr
mov
pop
jmp
ins
movs
mov
outs
movs
push
ret
push
cmp
in
jl
xchg
popf
retf
inc
test
lahf
mov
cmp
(bad)
sub
lods
in
popfw
sbb
xchg
mov
(bad)
mov
sub
dec
imul
xchg
test
int3
fdiv
retf
pop
je
in
mul
and
jae
loope
shl
and
lods
imul
dec
out
and
pop
fcom
jo
and
push
loopne
jb
xlat
or
rol
hlt
fisub
xor
jmp
hlt
or
jl
jnp
aam
out
arpl
cmp
push
lock
mov
lods
push
in
xchg
cmp
packssdw
pop
adc
cmp
mov
sbb
sahf
sub
shr
js
out
shl
rcl
movs
imul
sub
arpl
cwde
xor
xchg
mov
cmp
pop
jge
jno
jnp
test
cmp
mov
outs
gs
cwde
push
fst
push
call
xchg
inc
jp
fidiv
mov
lds
add
in
pop
jne
shr
aam
push
mov
xchg
jbe
and
mov
into
out
jnp
nop
ja
xchg
mov
fucomp
mov
in
inc
(bad)
dec
inc
pop
pop
mov
das
push
jmp
in
in
sub
inc
and
test
jge
imul
std
jmp
sbb
mov
jp
and
and
(bad)
pusha
(bad)
ins
or
call
sub
lahf
(bad)
fdivp
inc
sbb
fimul
(bad)
mov
xchg
inc
jg
pop
push
pop
push
mul
arpl
cmp
not
test
xchg
dec
lds
sbb
cmp
les
lods
push
push
add
dec
dec
mov
out
shl
stos
pusha
es
mov
jg
ins
into
mov
int
sub
movs
or
adc
jae
out
and
retf
lahf
int
inc
dec
mov
cmp
loopne
xor
loope
add
and
outs
stos
inc
jnp
dec
and
sbb
sahf
jg
mov
adc
xor
(bad)
js
fcomip
and
jne
cmc
out
jle
sub
leave
cli
dec
pop
cmc
cmp
in
pop
sub
adc
push
xor
inc
sbb
aad
dec
ins
jge
lahf
idiv
jo
stc
in
mov
outs
adc
mov
rol
ret
push
test
xor
ins
dec
jae
add
jge
nop
mov
in
not
outs
pop
sahf
cmp
xchg
lahf
dec
mov
push
dec
xchg
push
fwait
jb
cmp
adc
and
xor
mov
add
pop
stos
movs
and
or
adc
stos
mov
jae
data16
jecxz
push
mov
daa
dec
mov
cmp
pop
mov
(bad)
js
xor
inc
retf
inc
cmps
lods
cmp
push
push
lahf
xchg
inc
loope
cmp
mov
mov
adc
jmp
lahf
add
loopne
retf
repz
shl
clc
pop
xor
inc
mov
pop
cmp
mov
pop
adc
jb
fcom
inc
mov
sub
sar
ret
mov
sub
jg
pop
mov
pop
cmp
cdq
outs
pop
shl
movs
cwde
adc
(bad)
jmp
or
pushf
pop
sbb
(bad)
int3
test
daa
mov
add
cmp
and
pop
mov
adc
mov
lods
movs
jns
mov
adc
test
mov
mov
imul
push
pop
imul
pop
cmp
xor
ja
xchg
out
add
test
sub
jnp
push
adc
sbb
jp
xchg
test
jnp
cdq
mov
mov
sar
xlat
imul
add
out
push
sbb
xchg
pop
push
pusha
pop
cwde
xor
(bad)
jmp
test
dec
fdiv
jne
xchg
imul
mov
push
jg
shl
add
leave
(bad)
dec
dec
mov
popa
xor
lea
cmps
out
test
xchg
repz
popf
(bad)
aas
adc
push
ins
sub
dec
mov
push
pop
enter
arpl
ins
xor
add
mov
and
sub
push
mov
hlt
adc
fld
mov
cmp
mov
xchg
push
inc
sti
shl
icebp
add
loope
pushf
add
cmp
icebp
aaa
fist
dec
inc
push
in
sub
mov
push
jge
xchg
jmp
xor
ins
mov
lea
mov
adc
popf
scas
xchg
jl
retf
inc
inc
ror
xchg
sar
inc
in
mov
into
mov
int
mov
mov
jno
or
stc
jecxz
mov
inc
ror
fld
pop
jg
dec
rol
lods
xchg
inc
cmp
std
sub
mov
es
fwait
ds
cmc
jnp
or
mov
push
stc
je
mov
sar
rep
js
shr
push
cmp
test
imul
mov
(bad)
dec
bound
or
out
lahf
sbb
sub
nop
sub
rol
pop
pop
test
jne
loope
inc
ffree
mov
mov
adc
hlt
adc
fdiv
aad
pop
add
and
rol
xchg
repnz
jnp
sbb
ds
inc
pop
and
jmp
dec
fimul
or
pop
cmp
cmp
leave
mov
lock
cmc
xchg
sbb
mov
and
mov
retf
xlat
daa
imul
das
and
mov
repnz
adc
and
hlt
push
pop
fistp
adc
add
pop
and
cmps
sbb
pop
sbb
and
mov
add
xlat
inc
mov
jnp
outs
imul
xchg
jne
inc
sti
lock
sahf
and
aam
div
xrelease
ins
push
push
loop
inc
dec
rcr
sub
iret
mov
mov
sahf
ret
and
cld
mov
jno
cld
mov
cli
xor
lock
xchg
neg
fwait
sub
jb
jl
sti
shr
jmp
sub
bound
add
mov
mov
adc
push
inc
aad
fmul
fnstsw
arpl
bound
sub
adc
mov
push
or
push
out
jg
movs
mov
push
imul
add
ret
xchg
and
mov
inc
dec
movups
jl
out
mov
outs
repz
jmp
xchg
inc
int3
je
sbb
adc
sub
mov
sub
xor
movs
sbb
adc
aad
ret
xchg
popf
lea
inc
pop
mov
js
sub
push
jp
mov
xchg
jo
jl
daa
aaa
aad
cmp
fst
add
(bad)
sti
outs
aas
repnz
xchg
ret
fnstenv
mov
retf
fsubr
adc
and
mov
mov
loop
xchg
ds
sti
adc
cmp
jb
in
cs
mov
bound
repnz
in
test
test
(bad)
stc
out
jg
stc
out
sbb
cld
mov
stc
mov
in
test
add
dec
inc
scas
inc
pusha
or
add
add
add
(bad)
(bad)
inc
add
add
add
add
add
add
jns
je
ins
cs
jb
ja
outs
addr16
push
gs
imul
xor
xor
inc
jne
je
jb
cmp
jb
ins
sub
push
jne
ins
imul
imul
bound
xor
data16
xor
fs
add
adc
gs
cs
jb
ja
outs
addr16
imul
add
popa
je
pop
add
add
add
add
add
lsl
add
mov
mov
inc
or
add
or
add
add
add
add
or
add
add
pusha
outs
rol
add
add
inc
dec
inc
add
mov
or
popa
add
jo
pop
jae
add
ret
add
push
ret
add
outs
test
add
adc
inc
inc
push
pop
inc
in
rol
fmul
add
loopne
jbe
mov
pop
outs
jne
sbb
sub
xchg
xchg
mov
jmp
xchg
mov
scas
scas
xchg
mov
jle
ja
add
test
fwait
loope
data16
mov
icebp
nop
pop
inc
das
aad
adc
mov
stos
dec
cdq
cmp
das
lods
inc
sub
xor
cwde
mov
call
lea
stos
mov
mov
mov
sar
xor
daa
daa
push
jb
sub
cmp
jmp
ins
pop
outs
(bad)
sti
mov
stos
dec
dec
int3
xchg
repz
pop
push
pop
jnp
inc
inc
pop
sbb
cld
clc
fdivr
fnstenv
add
movs
jns
retf
xlat
jae
and
xchg
in
add
and
mov
mov
sbb
sbb
xor
or
or
das
mov
and
fidiv
imul
dec
ret
into
push
mov
test
and
pop
dec
lods
in
pop
(bad)
cmps
mov
sti
sbb
ret
push
inc
cli
hlt
gs
xchg
dec
out
cmp
xchg
mul
pop
xlat
lods
fcmovnb
cmps
jecxz
movs
ss
(bad)
jge
sub
or
rcl
lods
inc
loop
loopne
repnz
cmps
scas
xor
add
sahf
xchg
mov
dec
lahf
pop
cmp
pop
aas
xchg
adc
xchg
mov
scas
or
and
or
stos
mov
scas
sahf
sub
or
fyl2xp1
xchg
jae
sub
jmp
das
pop
ror
out
fdiv
gs
stos
shl
mov
pop
and
cmps
cmps
sahf
cmp
xlat
and
rol
push
sbb
mov
call
inc
xchg
pop
pop
push
iret
iret
pop
mov
outs
adc
leave
dec
mov
mov
xchg
sbb
xor
mov
sbb
loop
ret
cmps
fistp
aad
xor
mov
test
push
dec
cld
xchg
jle
mov
inc
loopne
push
emms
or
leave
jp
lods
jo
les
je
dec
ds
adc
fisubr
repz
loop
out
outs
(bad)
ins
sub
push
ret
push
cmp
ficom
test
xor
aas
mov
jle
push
mov
adc
inc
std
stc
cdq
pusha
jo
fdivr
inc
adc
(bad)
loopne
cmp
mov
test
xor
or
stos
fdivr
xchg
cwde
aam
pop
mov
xchg
out
je
cmp
imul
mov
out
outs
sub
repnz
fld
in
inc
or
les
int3
cs
leave
mov
sub
test
dec
shl
mov
pop
test
pop
into
jmp
dec
cs
cmp
fisubr
mov
imul
jp
call
ja
push
daa
push
xor
mov
fild
sub
sbb
aad
push
outs
sub
stc
pop
and
adc
and
adc
ja
sar
aas
cmp
cwde
add
xchg
lds
push
mov
aad
xor
or
shl
int3
and
inc
xchg
not
fwait
sti
ficomp
mov
jecxz
scas
jle
les
xchg
imul
xor
cmps
sub
lahf
lds
ins
aam
inc
ss
rcl
test
in
mov
nop
fmul
fistp
test
fs
fs
ss
jbe
xlat
movs
push
mov
inc
fmulp
mov
pop
fadd
sbb
cmp
das
push
icebp
movs
xchg
push
mov
sub
jp
xor
mov
xor
adc
pop
pop
dec
push
inc
sbb
lods
cmp
(bad)
sbb
in
gs
xchg
xor
cmp
inc
fnstcw
xor
smsw
(bad)
fwait
call
xor
into
add
outs
xlat
mov
adc
ja
mov
out
mov
call
in
push
fcomp
jge
pop
cdq
sub
je
xchg
ins
mov
mov
adc
inc
mov
ja
mov
xor
outs
daa
sbb
lock
jbe
push
mov
ins
mov
mov
inc
push
mov
pushf
dec
pop
jo
sub
test
pop
dec
ins
nop
ins
jecxz
shl
pushf
and
add
mov
and
pop
pop
pop
inc
jl
fisub
scas
push
je
pop
cs
je
sbb
mov
jecxz
leave
(bad)
or
test
mov
jmp
jmp
fsub
jg
jnp
sbb
mov
sub
cmps
inc
js
sahf
sbb
and
punpckldq
xchg
mov
aad
loopne
push
(bad)
out
jae
(bad)
(bad)
mov
lods
enter
jmp
inc
push
outs
(bad)
jmp
fdivr
ret
push
mov
leave
pop
dec
aad
loope
ja
jge
repz
rcl
(bad)
pushf
addr16
cld
or
push
xor
and
lahf
add
inc
push
mov
lea
ds
retf
or
add
dec
aas
mov
sar
inc
sub
in
cld
dec
jl
stos
ja
jnp
aas
pop
and
sbb
lahf
in
aas
es
xlat
(bad)
sub
in
xchg
cmp
xchg
sub
idiv
bound
sbb
inc
pop
inc
jmp
push
mov
out
jge
push
les
mov
enter
(bad)
mov
inc
bound
mov
add
add
loope
dec
jmp
jp
popa
add
paddw
xor
fild
mov
loop
cmp
dec
aam
ds
jge
jg
fst
inc
add
(bad)
jae
sub
rcl
mov
fs
jecxz
fsubr
push
fnstenv
(bad)
rol
adc
inc
mov
mov
mov
out
xchg
in
cmp
jg
ins
mov
data16
mov
je
push
jbe
mov
int
mov
addr16
pop
inc
es
inc
mov
(bad)
iret
xchg
xchg
aas
sub
loop
jae
fld
pop
pop
dec
cmps
pop
mov
fist
pop
and
jo
adc
xlat
out
mov
neg
cmps
dec
ret
aaa
adc
and
aad
mov
push
cmp
repz
enter
inc
adc
xor
mov
cmps
cli
mov
adc
arpl
pop
push
ja
jb
inc
and
adc
sbb
jl
xlat
int
loope
mov
cmp
sub
adc
mov
sub
repnz
jp
push
(bad)
retf
add
loopne
jae
lods
ficomp
(bad)
sub
cmp
sub
(bad)
cmp
pop
inc
fs
sub
xchg
and
ret
lea
mov
lods
scas
dec
mov
movs
rcl
mov
lds
retf
or
mov
pop
stc
nop
ror
push
xor
inc
mov
dec
mov
ja
and
(bad)
jge
xchg
sbb
test
rcr
lds
lds
and
push
lods
dec
add
mov
lods
inc
sub
pop
rcl
adc
rol
lea
mov
xchg
jl
add
dec
xchg
mov
nop
(bad)
jmp
sbb
int3
repz
xor
fwait
push
sbb
jo
fs
cmp
fld
stos
fstp
or
add
push
dec
retf
fmul
test
mov
pop
dec
dec
outs
retf
pop
sbb
cmc
loope
or
mov
jmp
xchg
aaa
sar
xchg
pop
(bad)
outs
cmc
outs
sbb
mov
fist
leave
(bad)
sbb
fdiv
cwde
pop
mov
ficom
and
mov
mov
(bad)
jb
add
iret
(bad)
out
jne
and
mov
mov
xchg
aaa
mov
mov
mov
jle
das
jb
mov
in
lock
jmp
cmp
(bad)
popf
retf
and
or
xchg
loopne
inc
add
jecxz
int3
sub
outs
inc
in
cmps
cmp
mov
cmps
outs
adc
jns
adc
cmps
shl
lock
iret
inc
retf
in
cmps
jmp
call
cmp
fucomip
xchg
add
aas
push
ret
adc
push
mov
dec
cmp
sbb
js
aad
aas
loop
xchg
push
dec
mov
scas
cmp
out
pop
add
gs
cmc
cmc
or
jne
hlt
sbb
xchg
adc
in
or
inc
movs
jecxz
cld
sbb
mov
or
aad
icebp
test
pushf
pop
and
xchg
inc
pop
je
and
out
aaa
nop
loopne
xor
pop
sbb
imul
jp
mov
out
mov
cdq
(bad)
addr16
sar
shl
out
push
mov
mov
pop
aas
js
out
or
mov
call
fsub
test
sbb
sub
add
mov
cdq
sahf
arpl
adc
sub
and
sub
sti
cmc
xchg
pop
dec
and
std
pop
push
ret
mov
xor
loopne
dec
mov
pop
and
aad
js
jo
fcomp
cmp
stc
xor
push
sbb
sub
xlat
xchg
add
mov
push
loope
and
lods
(bad)
and
popa
add
retf
scas
repz
mov
(bad)
(bad)
movs
or
dec
mov
cmp
in
pusha
ins
daa
pop
lock
out
mov
aam
inc
ja
cmp
das
or
ja
cmps
xchg
inc
mov
popf
pop
add
js
fmul
sub
jle
popa
adc
and
jae
pusha
adc
dec
sbb
daa
sub
repz
ins
xchg
fsub
mov
mov
imul
test
pop
pop
xchg
xor
jle
cmc
sub
out
sahf
test
and
jl
sub
adc
adc
xchg
dec
cmp
pop
xlat
(bad)
jnp
pop
cmps
iret
arpl
pushf
sbb
in
or
push
mov
sbb
push
in
repnz
test
daa
push
xchg
sti
fidivr
jno
add
int
test
sub
mov
mov
(bad)
and
call
dec
mov
in
and
(bad)
lea
test
pop
cwde
rol
mov
mov
int
in
lahf
test
fisubr
jno
and
push
mov
sub
jns
std
out
out
mov
sbb
fidiv
test
adc
xor
ror
gs
pop
fnsave
movs
ja
xor
cld
call
mov
mov
dec
retf
and
sbb
sub
xchg
fstp
outs
sub
push
in
sahf
and
jp
inc
fstp
test
loope
push
sbb
(bad)
xor
out
pop
mov
mov
xor
fild
sbb
(bad)
mov
pop
ret
js
push
sub
pop
add
mov
lea
mov
push
loope
lea
jle
shl
push
push
mov
xchg
(bad)
xchg
fldcw
dec
jmp
push
inc
cs
movs
aam
jo
in
scas
xchg
pop
(bad)
sti
push
lods
cmc
dec
aad
out
jae
adc
jle
(bad)
sub
or
or
sbb
icebp
arpl
add
repz
ret
pushf
pop
mov
or
fdivr
fs
push
jmp
xchg
sahf
mov
lods
mov
pop
out
mov
or
jo
mov
inc
(bad)
mov
or
ret
(bad)
fist
arpl
cmp
ins
adc
sub
lea
dec
hlt
jmp
and
nop
pusha
mov
cmp
call
sub
daa
cmp
(bad)
(bad)
jle
and
or
mov
outs
iret
aas
das
std
cmp
mov
inc
xchg
add
mov
sub
jb
aas
push
mov
mov
cwde
iret
cli
lock
imul
cmp
cld
stos
js
pop
imul
adc
out
mov
xor
aas
and
dec
adc
cmp
dec
mov
adc
push
div
xchg
or
push
jge
repz
pop
imul
inc
(bad)
in
or
xchg
lahf
mov
retf
int
jecxz
aaa
push
js
pop
mov
popf
aas
inc
lock
js
inc
or
es
cwde
in
gs
call
es
cmc
aas
xchg
mov
call
ds
pop
mov
cli
pop
add
jl
adc
push
push
push
fild
add
push
pushf
and
mov
and
into
mov
and
push
cmp
out
xchg
inc
jge
jmp
test
mov
es
xchg
call
jnp
and
sbb
(bad)
xchg
dec
mov
loopne
int3
push
(bad)
dec
mov
mov
cmp
ffree
loop
jne
imul
or
cs
(bad)
test
add
push
sub
xor
cli
sbb
or
mov
sbb
fdiv
push
sub
or
and
add
ret
xor
int
stos
sbb
sub
cmp
xchg
xchg
(bad)
fistp
sub
imul
mov
cmps
mov
xchg
add
sahf
repz
push
dec
dec
cmc
(bad)
movs
push
loope
imul
fisubr
adc
stc
sbb
mov
fldcw
ror
out
push
out
addr16
scas
inc
fcmovb
ror
push
out
popf
add
inc
retf
jns
cmc
fsub
cmp
add
jmp
and
inc
popf
fs
push
xchg
push
sub
sbb
inc
daa
adc
dec
mov
jp
sbb
jl
arpl
sbb
in
adc
adc
data16
(bad)
stc
mov
mov
and
mov
push
sbb
retf
aam
int3
sub
daa
cmc
cmps
jmp
push
nop
(bad)
jnp
(bad)
std
lahf
rcl
pushf
(bad)
out
xchg
mov
xchg
xchg
das
fcomp
mov
fwait
add
push
fidivr
dec
stos
fcom
pop
mov
mov
movs
test
jle
aas
in
sub
sbb
jbe
cs
je
sar
aad
mov
out
fistp
jae
mov
push
sub
xor
mov
cmp
mov
out
push
call
xchg
(bad)
push
inc
push
imul
xchg
pop
lahf
movs
bound
outs
cwde
mov
dec
loope
pop
cmp
sub
sahf
mov
test
dec
std
(bad)
nop
jecxz
pop
sbb
add
clc
out
xchg
out
xor
ror
ins
popf
xchg
pop
mov
xchg
sahf
cmp
pusha
les
and
loop
mov
mov
test
(bad)
jp
mov
jmp
xchg
(bad)
pop
jg
inc
push
in
imul
and
fsubr
stc
push
adc
push
inc
ja
jne
or
cli
ret
mov
mov
movs
pop
popa
push
dec
jmp
xchg
movs
xor
cs
aas
push
sahf
(bad)
xor
sub
mov
gs
adc
ins
mov
xchg
pop
sbb
cld
ins
xchg
dec
mov
cmp
jecxz
dec
xor
and
jmp
lea
xchg
jo
xlat
inc
mov
xchg
or
repnz
jne
dec
retf
mov
xchg
pushw
sbb
inc
lock
adc
pop
cmp
imul
lods
lahf
xchg
xor
ins
mov
jmp
jbe
add
jle
out
fnsave
mov
push
mov
pop
push
lock
mov
fcom
dec
je
mov
or
adc
(bad)
push
enter
stos
ja
jmp
mov
jno
aam
cmp
bound
in
inc
iret
push
cmps
adc
jp
sar
xor
or
push
xchg
push
jmp
pop
jecxz
aaa
inc
push
push
sbb
mov
(bad)
faddp
dec
stc
jnp
sub
int3
dec
rcl
imul
bound
cmp
retf
adc
mov
cmps
fdiv
les
mov
push
and
cmp
pop
shr
dec
rcr
outs
xchg
cld
and
push
fbstp
add
inc
mov
push
dec
fstp
add
sub
loopne
ins
inc
lahf
xchg
fs
pop
cmps
fcomp
and
push
dec
adc
lock
repz
mov
adc
mov
stos
int
xchg
fsubr
nop
inc
idiv
sahf
ror
inc
clc
test
xchg
cmp
inc
into
fist
jns
pop
ficomp
dec
xchg
mov
(bad)
cld
repz
aas
(bad)
cld
repz
push
ja
push
cmp
sti
add
add
dec
inc
dec
inc
scas
inc
pusha
or
add
add
add
(bad)
(bad)
inc
add
add
add
add
add
add
jns
je
ins
cs
jb
ja
outs
addr16
push
gs
imul
xor
xor
inc
jne
je
jb
cmp
jb
ins
sub
push
jne
ins
imul
imul
bound
xor
data16
xor
fs
add
adc
gs
cs
jb
ja
outs
addr16
imul
add
popa
je
pop
add
add
add
add
add
lsl
add
rcl
add
mov
inc
or
add
or
add
add
add
add
or
add
add
pusha
outs
rol
add
add
inc
dec
inc
add
mov
or
popa
add
jo
pop
jae
add
ret
add
push
ret
add
outs
test
add
adc
inc
inc
push
pop
inc
in
shl
xchg
or
nop
push
jmp
xchg
rcl
je
out
push
cmp
and
out
and
or
mov
and
out
mov
daa
add
jns
xlat
pop
dec
and
cmp
out
dec
into
rcr
mov
and
inc
mov
out
xchg
mov
cs
scas
adc
dec
test
pop
mov
sub
jle
push
or
sub
xlat
xchg
daa
jbe
into
aam
cmp
cld
adc
(bad)
adc
cmps
jp
xor
fwait
stos
fbld
cld
xor
mov
repnz
lds
pop
mov
neg
xchg
adc
je
mov
outs
fisubr
out
jns
sbb
aad
imul
repnz
pusha
scas
imul
add
nop
xchg
arpl
(bad)
std
adc
mov
sub
das
sub
pop
add
out
or
retf
dec
fcmovnbe
sbb
adc
bound
retf
xor
aaa
icebp
daa
mov
cdq
xor
dec
jmp
aaa
int3
adc
mov
sbb
cmp
movs
enter
and
push
mov
adc
fcmove
dec
xchg
jmp
or
sbb
sub
cli
push
cmp
jno
sub
pusha
mov
or
mov
xchg
gs
daa
mov
fidivr
dec
sbb
pop
or
xchg
sub
ret
daa
(bad)
fdiv
in
mov
sub
sar
int3
mov
cmp
inc
dec
or
mov
xchg
jl
mov
mov
cdq
mov
pop
and
mov
dec
mov
or
xor
test
xchg
xor
mov
int3
xor
jne
bound
ror
test
dec
inc
cmp
repz
in
push
test
dec
inc
div
cmc
cmps
in
push
test
lods
mov
push
scas
mov
cdq
nop
rol
mov
sub
sub
jecxz
push
dec
daa
and
pop
sbb
mov
loopne
jl
xor
sub
sub
push
mov
add
mov
inc
pop
push
mov
mov
dec
and
xchg
test
stos
(bad)
or
scas
aaa
mov
and
xchg
inc
fisubr
out
mov
out
sar
or
aaa
or
stos
add
outs
fldcw
imul
out
mov
jl
xor
inc
pop
jbe
inc
lock
pop
dec
daa
push
adc
jmp
or
int
loop
pop
out
sti
addr16
ds
fist
shr
xchg
iret
add
fcmove
xchg
dec
cli
scas
fwait
and
ret
sub
mov
test
ret
adc
or
jb
sar
xor
call
int3
dec
xchg
and
push
mov
sub
inc
mov
add
sbb
and
and
inc
clc
jno
and
rol
adc
add
retf
ins
in
cmp
test
rcl
cmps
ds
stos
ss
hlt
sbb
jmp
xlat
pop
lods
adc
jns
mov
es
clc
(bad)
rcr
imul
adc
addr16
pop
aam
sbb
repz
pop
int3
jno
jmp
push
fiadd
ret
mov
xchg
fist
es
xchg
popf
(bad)
xchg
cld
sub
xor
js
sub
cmp
mov
in
leave
stos
popf
mov
push
scas
clc
push
hlt
in
xlat
cli
(bad)
daa
adc
add
sbb
cmps
and
jge
not
idiv
push
jmp
xchg
test
dec
xor
xchg
out
sbb
pop
cdq
or
rol
mov
or
jb
fisub
fwait
hlt
in
fwait
sahf
retf
cdq
pop
sub
lock
mov
mov
adc
or
and
clc
xchg
push
call
or
inc
pop
dec
iret
sbb
mov
xlat
sbb
fistp
jo
dec
and
xchg
mov
int
push
sub
repz
adc
xchg
mov
repnz
sbb
stos
aam
sbb
push
pop
aam
jns
jno
cld
out
daa
sbb
mov
jmp
pop
mov
shr
out
repz
loopne
ret
ins
fisttp
out
ins
ficom
iret
lods
pop
mov
xor
and
mov
sub
and
mov
adc
inc
nop
sub
mov
clc
jne
and
fisttp
xchg
std
jno
sub
gs
rcr
in
rcr
outs
add
call
repz
mov
and
out
xchg
adc
shr
(bad)
inc
sti
lods
scas
mov
call
jge
and
adc
loop
jo
xor
dec
std
icebp
push
add
mov
sbb
leave
out
dec
test
pop
fwait
push
sub
pop
pop
mov
fsubr
and
gs
int
pop
pusha
add
arpl
div
inc
jmp
(bad)
bswap
fisttp
add
outs
pop
test
and
(bad)
mov
xchg
mov
and
dec
add
stos
sbb
inc
dec
xchg
mov
retf
add
sar
shr
in
dec
mov
or
jb
adc
mov
cli
loopne
fidiv
daa
push
scas
jge
pop
pop
cmp
outs
leave
mov
iret
ins
test
aad
adc
in
dec
push
jmp
cmp
dec
inc
cmp
repnz
call
push
test
cmp
mov
and
push
inc
mov
mov
shl
int3
scas
(bad)
hlt
adc
cmps
in
fdivrp
repz
ret
add
or
lock
addr16
push
xchg
test
xchg
xchg
xchg
add
(bad)
pop
loopne
or
lods
inc
or
iret
mov
add
sub
cdq
outs
push
or
retf
mov
xor
sub
pop
or
dec
xchg
jecxz
xchg
cmc
dec
jb
data16
push
shl
and
fbld
int
jnp
leave
jnp
mov
rcl
and
jbe
jg
fist
xchg
push
(bad)
out
fwait
icebp
stc
sub
lock
out
xor
sahf
dec
sbb
dec
cwde
pop
imul
xlat
sub
cmps
(bad)
idiv
push
xor
xor
mov
pop
out
mov
ins
push
scas
dec
add
scas
mov
stc
lahf
sub
add
test
imul
repz
xor
pusha
test
push
mov
(bad)
jne
pop
adc
xor
scas
push
inc
cmp
adc
sub
mov
lods
jb
or
xor
push
and
and
push
addr16
fadd
xchg
mov
mov
stos
jbe
dec
pop
retf
mov
push
clc
push
mov
jne
out
imul
xchg
dec
cwde
loopne
sbb
adc
stos
fadd
cli
jl
jl
and
call
dec
and
jnp
jno
fld
or
pop
outs
push
sub
mov
xchg
dec
add
int
lods
(bad)
jae
add
xchg
xor
clc
mov
sub
sbb
int3
mov
int
jmp
shr
ror
mov
(bad)
and
fcom
and
rol
popa
ja
dec
sbb
jb
clc
stos
ret
fsubr
fucomi
scas
pop
mov
mov
loop
cmp
sbb
add
jmp
mov
es
test
imul
xchg
aas
pop
sub
mov
ss
cmp
outs
retf
pop
adc
dec
test
dec
pop
mov
cdq
sbb
dec
add
std
retf
push
fs
outs
call
xor
cmc
cmp
daa
cmp
repnz
and
mov
pop
mov
aad
bound
out
fs
das
jg
ss
(bad)
add
xor
jge
mov
ror
mov
mov
pop
test
stos
inc
mov
cmp
mov
lock
push
stos
out
and
jns
fs
adc
jp
inc
fcom
enter
sub
and
sub
xchg
std
and
pop
loop
clc
jg
xor
xchg
pop
cwde
jbe
sbb
cdq
jl
and
movs
adc
sbb
(bad)
into
rcr
pop
mov
xor
mov
cmp
popf
cmp
int3
sti
inc
loopne
xchg
jmp
cmp
cld
lods
cmp
xchg
jb
aad
movs
adc
imul
push
sbb
ins
dec
cli
jae
xor
xlat
(bad)
xor
popa
dec
mov
rcl
sub
addr16
int3
xchg
nop
ds
push
leave
popa
mov
ins
das
stos
jb
mov
mov
jmp
ficom
fisub
out
push
rol
repz
or
(bad)
cmps
sub
retf
fstp
fcom
js
sahf
xor
push
out
fist
add
cmp
dec
jg
jnp
push
xchg
ret
stos
dec
(bad)
sahf
jge
(bad)
jge
ss
(bad)
aaa
add
int
fnstenv
or
inc
cmc
xlat
imul
mov
lods
dec
js
sbb
test
xchg
and
add
nop
xor
cmp
(bad)
icebp
inc
data16
jmp
xor
imul
jmp
das
out
dec
lea
cvtpi2ps
dec
stos
sbb
in
push
ds
div
test
scas
jle
sbb
into
bound
data16
data16
out
mov
repz
call
hlt
and
xor
pop
cs
movs
leave
sar
xor
mov
dec
test
arpl
scas
xchg
fwait
addr16
daa
cmp
push
test
pop
pop
or
mov
hlt
sub
adc
cmp
sub
sbb
pop
mov
inc
push
(bad)
xor
cmp
aaa
movs
stos
fadd
xchg
out
pop
xor
xor
(bad)
call
mov
cmp
and
sub
cmps
ins
shl
jl
(bad)
popf
test
cmp
mov
inc
jbe
inc
and
imul
mov
dec
adc
lahf
lahf
retf
imul
ror
out
xchg
inc
xor
out
xchg
cs
jp
push
and
fist
aaa
das
sahf
arpl
fstp
dec
int
inc
fcmovne
mov
pusha
aas
mov
xchg
cli
and
push
add
sub
arpl
clc
mov
sbb
stc
xchg
ins
outs
test
cmps
mov
pushf
jge
and
(bad)
mov
aaa
loopne
retf
fcom
or
cmp
xchg
adc
aam
mov
retf
call
test
test
adc
jbe
jmp
sub
xchg
dec
dec
cmp
mov
push
(bad)
mov
aad
adc
sbb
mov
mov
push
sahf
or
push
inc
adc
or
sub
xchg
push
(bad)
jbe
hlt
aad
pop
cmps
jno
jle
icebp
stc
mov
cmp
fadd
inc
cmp
mov
hlt
cmp
jb
ins
popf
inc
jecxz
(bad)
mov
jge
popf
pop
fcomp
out
inc
pop
outs
(bad)
ret
aas
mov
mov
popa
add
mov
test
xchg
jmp
pop
push
lds
push
cdq
(bad)
sub
in
mov
out
arpl
and
inc
shl
add
dec
cmp
ins
adc
rol
cli
jmp
cmp
jle
fimul
sti
fucomp
xor
cmps
inc
in
call
jmp
jb
jmp
lea
arpl
pop
push
mov
pop
adc
jae
bndldx
icebp
sbb
test
pop
dec
mov
lods
outs
repz
xchg
(bad)
or
mov
sub
cs
xor
repnz
dec
fnstcw
push
std
mul
lock
lock
hlt
fcmovnb
sub
xchg
pop
mov
dec
out
icebp
hlt
dec
pop
mov
xor
dec
jb
jb
stos
cld
xchg
in
ror
sti
cmc
lds
lods
inc
push
das
jnp
ret
mov
lods
push
push
mov
stos
mov
mov
cmp
in
jle
dec
ja
stos
popf
push
sbb
mov
mov
push
std
aas
sub
sbb
cs
push
loopne
jnp
or
jmp
jg
repz
add
xchg
push
mov
xchg
sub
in
test
sbb
ins
sbb
gs
ja
dec
push
ds
ins
cmp
push
fucomp
in
sub
int
cmps
mov
mov
xchg
fisttp
lock
mov
jecxz
and
inc
xchg
cmp
nop
cmp
jle
stc
adc
xchg
retf
in
push
iret
cmc
mov
lds
sbb
inc
inc
xor
in
jbe
dec
adc
push
sub
push
fdivp
(bad)
pop
call
adc
xchg
test
sbb
cmc
sti
jg
mov
(bad)
sbb
in
out
ja
push
xlat
jno
(bad)
or
dec
mov
inc
xchg
js
inc
push
popa
cmps
pop
xchg
rcl
(bad)
fbstp
mov
dec
jb
xchg
pop
in
mov
jp
pop
sti
jmp
scas
adc
adc
jns
xchg
repz
xor
arpl
mov
sub
test
cmp
ror
sub
loop
adc
loope
out
addr16
sub
mov
ss
pop
jbe
sbb
xor
sub
stos
cli
push
push
popa
jnp
and
icebp
xor
in
dec
icebp
scas
jmp
cmps
lods
cmp
loopne
dec
mov
(bad)
out
sbb
inc
retf
and
jmp
test
mov
push
push
xlat
stos
mov
xor
ins
mov
sbb
lods
retf
ret
stos
push
addr16
inc
(bad)
(bad)
adc
dec
data16
(bad)
loope
cmp
fiadd
xchg
cmp
dec
arpl
pop
test
daa
xchg
aas
push
(bad)
div
inc
std
cdq
jecxz
sbb
xor
add
in
test
jne
mov
dec
ds
ror
dec
mov
mov
sub
push
inc
push
xor
test
mov
adc
adc
pop
mov
(bad)
sbb
mov
fucomi
xchg
jb
push
in
dec
inc
or
jp
mov
ds
(bad)
cld
das
out
xchg
rcl
(bad)
jle
adc
push
pop
add
xor
jo
push
(bad)
stos
or
out
and
aad
mov
sub
or
mov
inc
sub
xchg
aas
lds
inc
jge
out
jns
lds
add
pop
fisub
shl
int3
mov
lock
imul
out
lea
or
adc
xor
(bad)
or
lock
call
mov
ret
jmp
sbb
out
push
and
push
pushf
(bad)
mov
mov
xchg
out
enter
cmps
cmp
enter
pop
inc
fdiv
mov
fbstp
cmp
mov
push
inc
aaa
mul
mov
fldcw
(bad)
lods
dec
stc
test
mov
sub
bound
sub
push
inc
hlt
pop
pop
icebp
jl
in
jno
ins
(bad)
pop
pop
jmp
and
push
fild
pop
jge
jbe
adc
outs
movs
push
std
xor
aaa
repz
xor
sub
mov
adc
or
jns
(bad)
cmp
mov
in
mov
add
pop
push
sub
gs
mov
lock
je
xlat
imul
loop
xor
shr
daa
adc
(bad)
jmp
mov
push
add
icebp
lahf
push
std
xchg
add
(bad)
cmp
popf
or
cli
je
cdq
jmp
or
lock
or
in
out
fistp
int3
into
adc
mov
mov
cmp
sub
inc
inc
sbb
mov
imul
pop
addr16
mov
push
(bad)
mov
jecxz
sub
mov
iret
in
stos
adc
xlat
iret
fsubr
mov
aaa
cli
mov
fxtract
test
cwde
xchg
inc
scas
adc
cmc
addr16
sahf
add
mov
xlat
mov
cs
call
repnz
push
push
add
mov
(bad)
cld
repz
aas
(bad)
cld
repz
aas
jmp
jecxz
icebp
std
sbb
dec
mov
dec
inc
dec
inc
scas
inc
pusha
or
add
add
add
(bad)
(bad)
inc
add
add
add
add
add
add
jns
je
ins
cs
jb
ja
outs
addr16
push
gs
imul
xor
xor
inc
jne
je
jb
cmp
jb
ins
sub
push
jne
ins
imul
imul
bound
xor
data16
xor
fs
add
adc
gs
cs
jb
ja
outs
addr16
imul
add
popa
je
pop
add
add
add
add
add
lsl
add
mov
mov
inc
or
add
or
add
add
add
add
or
add
add
pusha
outs
rol
add
add
inc
dec
inc
add
mov
or
popa
add
jo
pop
jae
add
ret
add
push
ret
add
outs
test
add
adc
inc
push
pop
inc
in
rol
fmul
add
loopne
mov
mov
ins
ins
mov
fld
fstp
jns
aas
imul
pop
not
push
pop
scas
aad
test
add
fmul
mov
cmp
add
out
dec
xor
dec
push
adc
pop
mov
bound
lods
scas
dec
lea
pop
xchg
cmps
ja
xlat
pop
ins
out
xchg
imul
xlat
mov
push
mov
call
jge
cmp
or
sbb
pop
jno
ss
dec
jbe
jbe
jnp
lods
ss
add
jnp
or
sub
mov
jecxz
sbb
(bad)
jmp
or
ins
mov
adc
push
cwde
js
cmps
sbb
jle
in
inc
rcr
inc
loop
mov
sub
pop
push
cwde
ror
jmp
cwde
call
mov
xchg
sbb
add
push
stos
mov
(bad)
and
pop
arpl
stc
clc
outs
pop
xchg
and
mul
mov
movs
aaa
xchg
pop
ins
(bad)
cmova
add
rcl
ins
mov
add
inc
fsubr
and
jns
push
pushf
stos
jmp
(bad)
vmwrite
jmp
mov
scas
outs
call
cmp
and
ffree
popa
mov
enter
dec
or
jns
push
jecxz
inc
cmp
mov
or
jns
pop
mov
stos
cdq
mov
mov
sub
loope
mov
aas
push
(bad)
in
jmp
mov
dec
dec
xor
dec
int3
sub
ret
clc
inc
ficom
call
mov
cmp
push
push
dec
daa
inc
jge
sub
add
shl
das
sub
cmp
xchg
(bad)
inc
sub
add
jns
adc
mov
mov
aad
sbb
(bad)
retf
neg
ret
xchg
fbld
adc
cmp
pop
cmps
mov
lds
mov
mov
add
shl
ins
mov
movs
mov
(bad)
and
aam
gs
or
sahf
fnstcw
dec
pop
mov
xchg
sbb
out
push
loop
jo
jmp
lea
dec
aad
sti
mov
repz
mov
into
xor
and
xlat
(bad)
rcr
pusha
pop
ror
cmc
and
loop
repnz
push
test
and
push
cmp
sbb
add
push
das
xchg
inc
xchg
push
jg
jge
imul
test
and
cmp
inc
and
call
popf
mov
scas
inc
lods
sbb
pop
dec
shl
test
stos
je
push
xchg
jo
push
or
or
loope
pop
cmp
jnp
adc
stos
jo
jae
sti
xlat
jae
stc
and
pop
(bad)
or
jecxz
cli
pop
mov
in
hlt
js
aad
(bad)
and
inc
imul
inc
stc
adc
popf
arpl
pushf
inc
popa
jg
arpl
pop
and
fcomp
fucomip
xor
push
adc
dec
inc
mov
mov
cmp
xor
in
add
mov
xor
jo
(bad)
in
xlat
add
ret
add
nop
enter
lds
sub
pop
add
shl
(bad)
bound
inc
test
jmp
ja
inc
xor
inc
adc
out
sub
push
pushf
sti
push
mov
add
jmp
mov
mov
sbb
xchg
aad
out
iret
call
pop
bound
outs
dec
daa
pop
or
push
imul
ins
adc
cs
pop
outs
inc
mov
push
fidiv
mov
push
iret
scas
retf
in
(bad)
cmc
out
mov
cdq
loope
mov
mov
cwde
xor
dec
outs
cli
arpl
xor
jecxz
es
cmp
mov
jo
dec
pop
je
xchg
inc
mov
int
scas
xor
xchg
mov
pop
cmp
in
jge
fdivr
das
es
(bad)
out
shr
mov
push
ret
mov
bound
xor
jne
xchg
push
add
jge
icebp
pop
pusha
pop
loopne
mov
stos
and
adc
ins
aam
aaa
aad
test
inc
add
imul
mov
fs
xor
fiadd
mov
(bad)
int3
mov
(bad)
jne
push
pop
sbb
dec
jg
out
cmps
cmp
rcl
fwait
sub
loop
ja
add
adc
pop
loope
jbe
sbb
mov
mov
repz
xor
dec
xchg
shl
xchg
and
out
cwde
shl
pop
sbb
add
imul
cmp
das
test
xor
push
rol
stc
push
push
cdq
mov
xchg
xchg
es
xchg
aad
int
test
fbld
bound
sahf
mov
aaa
stc
cmc
leave
(bad)
push
mov
mov
fisub
and
push
mov
aas
gs
addr16
(bad)
fst
and
scas
lock
(bad)
out
adc
aad
gs
icebp
pop
and
mov
(bad)
push
fisubr
mov
dec
jbe
pop
test
add
inc
adc
stc
push
cmps
pop
push
jmp
fucomi
mov
mov
xchg
pop
push
jns
add
sbb
jne
sub
mov
(bad)
mov
jns
fdiv
cmps
inc
idiv
or
dec
push
(bad)
cmp
xor
(bad)
cmpxchg
dec
js
std
test
ret
xchg
pop
mov
rcr
mov
lahf
push
xor
ret
mov
aaa
test
xchg
mov
mov
ret
stos
cld
adc
loopne
addr16
icebp
or
inc
retf
icebp
ror
push
adc
and
ins
mov
xchg
mov
sub
call
nop
sbb
push
lods
push
push
push
lods
popa
xor
push
mov
lahf
movs
sub
inc
rcl
push
movs
mov
cld
xor
(bad)
movs
dec
mov
cwde
push
xchg
repnz
mov
out
xchg
(bad)
imul
pop
daa
iret
test
repz
sub
sub
adc
out
and
xor
add
loopne
fidiv
setne
fidiv
jmp
pop
icebp
push
daa
enter
fiadd
retf
hlt
stos
ror
cmp
jmp
pop
xlat
add
loop
jbe
ss
jno
pop
pusha
pop
ret
cmc
xchg
push
lea
cmps
pusha
ds
(bad)
movs
leave
es
out
pop
icebp
(bad)
repnz
push
and
clc
out
sbb
xchg
data16
mov
sub
jmp
cld
mov
out
(bad)
icebp
pop
push
js
sub
jp
mov
xor
mov
in
aad
enter
into
daa
push
jmp
dec
lea
sub
push
movs
adc
pop
ds
out
enter
pop
(bad)
mov
and
scas
mov
xor
push
icebp
sbb
inc
rol
jmp
pop
cmps
fiadd
int3
movs
mov
ins
push
imul
pop
outs
icebp
mov
mov
stc
sti
test
scas
jp
adc
cmp
and
xchg
cmp
xchg
int
add
je
add
jae
push
adc
cld
pop
add
sbb
sbb
push
pusha
jp
sub
pop
xor
xchg
(bad)
cmps
(bad)
pop
stos
int3
cmp
(bad)
push
ds
push
mov
mov
ret
clc
mov
adc
jno
and
add
ins
int
push
test
ja
lds
mov
repz
pop
pop
xlat
or
xor
inc
push
push
mov
idiv
pop
or
mov
ins
in
mov
int3
xor
fcmovu
push
mov
add
cdq
or
pop
imul
and
dec
mov
xchg
pop
mov
movs
out
inc
push
cmp
sub
aaa
push
movs
adc
jo
xlat
dec
mov
test
or
imul
push
sub
dec
pop
mov
inc
mov
pop
test
jp
retf
jno
lea
aaa
popa
imul
dec
push
sar
sbb
imul
(bad)
sbb
mov
popa
inc
sub
mov
fisttp
and
add
add
add
fwait
push
add
xchg
jae
xchg
(bad)
mov
popf
outs
pop
(bad)
js
sub
sbb
movs
jmp
push
xchg
adc
cmps
add
push
loop
ficom
test
imul
js
adc
pop
outs
push
or
mov
aaa
repz
mov
(bad)
sbb
stos
lods
xchg
popa
lahf
cmp
sti
ss
push
cmp
xlat
xor
pop
pop
adc
dec
dec
data16
sti
pop
loopne
or
sti
sbb
xor
push
aaa
inc
add
in
adc
in
into
hlt
jbe
sar
nop
in
sub
adc
popa
jp
stos
(bad)
cmp
lods
mov
push
imul
xchg
adc
and
test
xor
mov
aaa
leave
pop
inc
dec
dec
je
in
adc
fnstenv
push
dec
xchg
mov
dec
imul
icebp
mov
dec
ss
in
or
or
cdq
outs
outs
pop
jo
push
cmp
rcr
jecxz
jle
xor
les
mov
shr
gs
lahf
mov
loop
outs
add
loope
sbb
ret
test
cmp
cmc
or
add
outs
xor
inc
sbb
mov
cmc
(bad)
cmp
cdq
jnp
dec
push
movs
into
neg
cmp
cmp
xchg
add
call
push
adc
pop
sbb
dec
jmp
inc
push
jo
mov
and
or
adc
clc
call
fwait
repnz
jecxz
sbb
jns
scas
addr16
xor
sti
iret
pop
das
mov
out
adc
pushf
jecxz
jns
loopne
lahf
or
scas
(bad)
xlat
mov
test
xchg
js
or
xchg
ins
push
mov
fnstcw
add
repz
js
mov
ins
(bad)
pop
jne
jmp
xlat
nop
mov
out
stos
leave
shl
jb
movs
daa
aas
inc
mov
push
int
mov
shl
mov
movs
jmp
mov
or
jecxz
outs
pop
(bad)
xchg
or
mov
ret
(bad)
sahf
cdq
add
jno
jle
mov
push
ret
data16
loop
stc
leave
iret
jle
fmul
push
xchg
inc
test
dec
inc
jecxz
sub
xchg
jl
ret
pop
ins
(bad)
fnstsw
jge
pop
or
hlt
pop
dec
test
pop
sbb
mov
sti
mov
pop
push
sbb
imul
fdivr
fnstsw
ins
push
mov
pop
popa
shl
add
jno
dec
dec
loope
out
jo
movs
pop
hlt
add
mov
push
loop
mov
inc
xor
mov
scas
out
mov
add
iret
jbe
rol
mov
jns
psubd
movs
lds
mov
push
sub
test
adc
pop
sbb
mov
jecxz
dec
mov
dec
cdq
stc
lock
loop
and
call
in
or
lods
xor
adc
shl
push
adc
cmps
sbb
sub
or
shl
icebp
shl
scas
xor
cwde
cmps
out
sti
adc
sahf
popa
xchg
or
mov
add
out
test
mov
fwait
in
jmp
sub
xor
repz
and
adc
adc
inc
and
lods
dec
cmp
xchg
loopne
push
sbb
mov
mov
pop
dec
inc
fnstsw
(bad)
data16
push
or
clc
or
pop
push
cmp
std
sar
dec
test
sub
jb
scas
adc
mov
xchg
int3
sub
and
packssdw
push
xor
fwait
sbb
adc
enter
add
mov
adc
mov
imul
mov
out
ror
push
mov
sbb
fs
push
push
pop
std
dec
aaa
or
pop
mov
lea
sbb
add
mov
mov
ds
push
sbb
fwait
xor
mov
sub
out
int3
aad
and
mov
bound
test
add
or
sub
outs
jo
rol
shr
out
sbb
inc
push
popf
imul
ins
outs
mov
xchg
push
in
and
xchg
retf
push
sub
cdq
pop
dec
dec
jmp
sbb
aad
jno
push
inc
rcl
xchg
in
sar
jmp
popa
inc
out
mov
das
pop
imul
mov
xor
ja
aam
ret
pop
jp
pop
dec
mov
aad
inc
jb
xchg
inc
imul
xchg
scas
cmp
retf
mov
ficom
arpl
inc
sahf
pop
inc
les
stos
mov
mov
stc
dec
jp
dec
xor
inc
pop
addr16
leave
(bad)
pop
adc
mov
sbb
push
cld
inc
popf
cmp
xor
cmc
les
fistp
jg
in
jo
jbe
pop
addr16
cmp
xchg
dec
xor
addr16
js
leave
dec
cmc
js
ss
xor
jbe
xchg
nop
pop
cmps
fisub
and
lock
fisttp
not
add
loop
mov
xchg
adc
mov
mov
clc
sbb
jp
jl
clc
mov
jle
mov
loop
stos
aaa
les
mov
pop
movs
movhps
jb
dec
loope
mov
jns
mov
out
xchg
pop
cdq
lahf
into
into
add
mov
imul
sti
mov
jg
cld
inc
test
daa
loopne
jmp
cmp
adc
pop
xchg
repz
(bad)
or
les
dec
and
adc
rcl
mov
cmp
ins
loopne
dec
adc
lods
push
pop
adc
rcl
mov
cmp
sub
add
test
stc
pop
xor
rcr
jo
outs
pop
(bad)
xlat
sub
loopne
cmp
xlat
mov
pop
pop
ja
pop
adc
mov
dec
imul
mov
das
pop
mov
add
mov
push
out
xor
mov
fld
fcomp
dec
aas
mov
movs
adc
call
lahf
rcr
fdiv
pop
jnp
(bad)
in
rcr
data16
jno
push
xor
mov
stc
jmp
mov
mov
retf
mov
imul
jmp
jbe
ins
je
dec
ds
adc
mov
sub
scas
pop
push
stos
pop
int
jmp
inc
loope
fst
jno
mov
pop
mov
scas
test
enter
div
pop
dec
lahf
movs
popf
sbb
dec
sbb
xor
jp
hlt
pop
adc
(bad)
jmp
dec
mov
mov
adc
mov
enter
lahf
xor
pop
(bad)
je
xchg
jl
add
mov
icebp
or
repnz
pop
dec
outs
mov
inc
cmovo
dec
xor
mov
dec
sub
test
addr16
pop
xchg
(bad)
(bad)
mov
push
mov
fsincos
push
(bad)
cwde
adc
xchg
sbb
adc
repnz
movs
fsub
leave
out
cmps
daa
cmps
mov
and
jmp
ds
push
pop
sub
and
cmp
xor
push
push
xchg
push
ret
(bad)
movs
aad
arpl
push
mov
(bad)
sub
out
add
lock
xchg
cmps
int
adc
jle
mov
adc
add
lea
adc
aam
mov
out
ret
test
mov
mul
add
jno
out
shl
aam
add
pop
push
pushf
cmp
in
aad
sbb
pop
inc
cli
test
rcl
fdivp
bound
push
repnz
gs
sbb
sbb
test
int3
int
cmp
fucomp
jmp
jge
jecxz
xchg
in
or
ror
lods
jmp
bound
(bad)
aam
inc
fisub
jge
inc
out
jo
dec
ds
in
xchg
(bad)
pop
addr16
adc
jns
loope
movs
pop
mov
push
xor
jg
xor
mov
inc
imul
mov
shl
xor
std
push
fwait
bound
call
jbe
jg
jae
push
mov
(bad)
clc
leave
sbb
fcomp
sbb
inc
mov
xchg
sbb
stc
cs
sub
jg
stc
out
jg
stc
mov
xlat
mov
out
es
(bad)
sbb
add
add
dec
inc
scas
inc
pusha
or
add
add
add
(bad)
(bad)
inc
add
add
add
add
add
add
jns
je
ins
cs
jb
ja
outs
addr16
push
gs
imul
xor
xor
inc
jne
je
jb
cmp
jb
ins
sub
push
jne
ins
imul
imul
bound
xor
data16
xor
fs
add
adc
gs
cs
jb
ja
outs
addr16
imul
add
popa
je
pop
add
add
add
add
add
lsl
add
lds
add
add
or
or
add
or
add
add
add
add
or
add
add
pusha
outs
rol
add
add
inc
dec
inc
add
mov
or
popa
add
jo
pop
jae
add
ret
add
push
ret
add
outs
test
add
adc
inc
inc
push
pop
inc
in
(bad)
add
and
movs
xchg
mov
sub
dec
dec
and
movaps
sbb
test
and
and
sub
imul
cmp
les
add
cdq
push
add
mov
jo
sub
add
fsub
lahf
fld
in
scas
popf
jle
pop
fbld
jbe
test
mov
sbb
fwait
pop
imul
call
clc
sub
ret
xor
nop
mov
(bad)
dec
inc
sbb
dec
pop
rcl
xchg
or
xlat
cli
pop
es
xor
dec
push
pushf
ds
punpckhwd
cmp
pop
push
pop
or
hlt
add
sub
pop
data16
jbe
xor
xchg
ss
and
mov
rol
inc
mov
or
std
shld
mov
imul
push
out
ins
cdq
inc
dec
lods
ror
mov
retf
imul
(bad)
adc
cmps
lods
pushf
fadd
cmp
mov
sbb
fadd
daa
pop
push
shl
call
mov
aaa
lods
fs
push
inc
dec
js
dec
cmc
adc
xchg
stc
ss
or
rol
fmul
mov
sub
mov
pop
nop
je
xchg
mov
aas
and
nop
shl
test
(bad)
out
push
jmp
hlt
or
cld
es
daa
out
movs
push
cmps
in
imul
out
jne
(bad)
mov
mov
jne
daa
(bad)
not
and
std
mov
ds
(bad)
cmps
scas
ficomp
nop
(bad)
in
outs
cdq
cmc
psubsw
mov
cmp
pop
jle
mov
inc
pop
dec
jl
cld
xchg
inc
and
leave
sti
pop
add
xchg
cmp
out
loop
jmp
aad
mov
retf
aad
push
push
out
aad
nop
shl
(bad)
and
jge
push
fucomi
xchg
pand
adc
mov
test
fdivr
xor
add
out
jl
sub
jb
pop
sub
loop
adc
rcl
pop
ret
data16
cli
popa
lds
repnz
mov
mov
xchg
pop
pop
lods
sbb
dec
pop
xor
das
dec
add
cmp
push
push
stos
bound
lods
mov
out
adc
inc
fnstenv
enter
aad
mov
lahf
scas
icebp
jl
enter
into
(bad)
loopne
test
bound
ret
and
test
push
xchg
test
push
in
leave
jle
sub
das
xchg
retf
jge
sbb
je
ss
mov
mov
and
sbb
lods
pop
js
ds
imul
cmp
or
cli
or
mov
dec
jo
xchg
dec
push
test
nop
pop
(bad)
(bad)
adc
xchg
int3
xor
dec
js
rol
in
push
mov
adc
jns
adc
sti
xchg
push
cwde
sub
sub
push
dec
pop
add
lods
test
jmp
call
fsubr
mov
and
leave
sub
lea
imul
cwde
mov
sti
scas
or
jle
cmps
ins
pop
inc
cmps
and
cs
in
jmp
or
xchg
in
clc
aas
je
xor
xlat
das
adc
xchg
push
iret
pop
int
jae
lods
jl
jmp
(bad)
sti
cmps
repz
xor
jbe
jg
xchg
jp
frstor
rcr
push
das
xchg
jno
adc
stc
in
or
ss
mov
dec
mov
ja
push
into
das
fisttp
outs
push
add
iret
push
mov
cmp
xchg
pop
pop
cmp
sub
or
dec
jp
dec
mov
jle
push
and
jg
push
fadd
cmp
pop
arpl
retf
pop
xor
aas
ror
fnstenv
xor
mov
or
pop
ins
inc
sti
mov
popa
lahf
scas
adc
jns
pop
xor
mov
inc
stc
pop
cs
sub
ins
aaa
cmps
outs
mov
cwde
mov
ja
fst
retf
jns
dec
cwde
jmp
fsubr
jge
lods
ds
leave
pavgb
icebp
pop
(bad)
clc
in
pop
pop
ds
add
lea
push
mov
test
cmps
in
dec
test
push
jb
sti
pop
popf
mov
xchg
inc
or
sysexit
sti
push
push
scas
mov
pop
jmp
daa
push
mov
or
leave
pop
fwait
mov
adc
push
cli
test
push
xchg
cmp
mov
adc
sub
repnz
nop
and
sbb
outs
pop
adc
mov
ficom
xchg
out
pop
adc
mov
cmps
mov
mov
xlat
cmc
popa
xchg
sub
dec
iret
call
out
xor
and
cld
xchg
out
adc
enter
int
jae
ja
push
icebp
fnstsw
div
pop
je
xchg
and
mov
daa
ja
pop
pushf
mov
dec
cmc
xor
pop
or
in
mov
loop
pop
pop
and
or
das
pop
arpl
push
out
xor
pop
iret
shr
fdivr
pop
xchg
mov
nop
cmp
out
jmp
sub
push
mov
popf
(bad)
repz
enter
outs
divps
add
xchg
loope
xchg
call
xchg
aas
ss
mov
push
in
js
jmp
fdiv
cdq
and
mov
mov
jecxz
addr16
jecxz
mov
mov
bound
push
ins
jle
neg
(bad)
push
jmp
mov
daa
pop
inc
ins
pusha
clc
sub
pop
in
ins
in
add
xor
push
lods
xor
mov
and
outs
cmp
lock
lods
stc
fidivr
mov
adc
or
int
stos
dec
cld
push
jae
jge
cli
dec
test
pop
das
inc
mov
mov
imul
call
data16
sub
out
push
jmp
sub
push
or
cmps
mov
xor
dec
shl
das
or
(bad)
push
loope
jg
cmc
rol
lods
cmc
push
push
je
int3
cmp
outs
xchg
mov
rcr
pop
jl
mov
mov
xor
aas
jle
sub
fnstcw
rcr
lahf
mov
adc
xlat
push
jne
jnp
push
ja
iret
stc
cmp
or
aad
and
mov
jae
xor
dec
loop
add
pop
imul
add
test
ret
push
xor
js
in
pop
mov
add
mov
nop
push
jbe
or
gs
icebp
lods
test
scas
sub
pop
lds
jge
fstp
mov
ins
push
xchg
mov
sbb
push
rcr
xlat
out
xor
stos
cmps
or
stos
stc
es
aaa
(bad)
lds
pop
inc
jns
push
ja
jecxz
mov
pop
mov
mov
pop
nop
repz
icebp
ret
pop
aad
pop
inc
push
jo
sbb
ds
cmc
(bad)
and
cmps
daa
cmc
rcl
mov
xchg
js
cdq
fild
push
cdq
and
jge
mov
fdivr
mov
cmp
sbb
push
imul
push
inc
in
mov
aaa
sub
mov
jns
jmp
(bad)
mul
int3
push
push
sub
add
pop
cld
inc
enter
(bad)
in
pop
mov
add
ret
pop
popf
retf
mov
iret
cmps
xchg
pop
sbb
dec
rol
call
popf
mov
cli
cld
rol
loope
(bad)
jns
out
add
and
pop
lock
jne
push
xor
jne
stos
mov
hlt
aam
ins
sbb
cmp
xchg
pop
mov
fidiv
mov
xchg
loope
sbb
addr16
xchg
and
xchg
fwait
push
jns
xor
jnp
in
jge
data16
mov
xlat
inc
xor
retf
mov
aad
cs
out
push
(bad)
pop
test
push
aas
pop
movs
push
loope
mov
mov
mov
popaw
jl
aas
loopne
and
sub
lock
sar
movs
xor
cdq
ffree
inc
div
scas
mov
jae
or
mov
xchg
cmp
mov
cmc
mov
jecxz
push
pop
adc
imul
pop
mov
mov
das
push
inc
inc
(bad)
adc
xor
xchg
popf
data16
shl
push
xchg
mov
cmc
shl
dec
fisubr
add
adc
fs
out
fadd
mov
or
dec
lods
inc
cmp
xchg
test
or
or
lods
jne
mov
sbb
scas
xor
xor
jns
adc
ror
jmp
cmps
loopne
adc
ror
dec
cmp
push
out
xchg
int
bound
lds
xor
outs
sahf
(bad)
retf
sti
fldcw
sub
add
xchg
mov
call
pop
pop
push
dec
fild
rol
xor
stos
cmp
out
jmp
xor
pushf
js
mov
movs
sti
mov
mov
sbb
shl
ret
push
mov
pop
mov
test
nop
sub
pop
je
(bad)
sti
jmp
adc
push
mov
or
fs
fiadd
and
fdiv
inc
push
mov
shr
loopne
push
sbb
push
and
mov
jb
(bad)
sub
xchg
mov
aas
xor
and
out
retf
mov
mov
mov
lock
pusha
jge
lds
aas
jg
mov
aas
or
loopne
nop
dec
jl
pushw
test
push
enter
cwde
iret
cmp
adc
or
adc
pop
sub
xchg
cmp
js
sub
out
mov
loopne
mov
outs
jbe
loop
movs
mov
pushf
dec
cwde
jp
daa
mov
push
lahf
adc
jl
dec
call
stos
popf
bnd
jge
dec
hlt
pusha
(bad)
repnz
xchg
mov
or
dec
hlt
cmc
scas
rcr
inc
retf
jbe
out
es
lds
repz
xchg
dec
jnp
das
cli
imul
sub
mov
shl
retf
jne
xchg
cmp
stc
pop
dec
pushf
push
pop
fidivr
jp
icebp
pop
xor
idiv
cmp
jbe
mov
pop
and
or
inc
sahf
mov
sub
jge
xchg
ss
push
pop
xor
fwait
pop
mov
push
sbb
gs
adc
mov
add
jo
shr
jmp
jae
mov
aad
mov
jmp
loop
push
(bad)
lea
cmps
shl
maxps
xchg
mov
mov
sub
retf
add
jecxz
cmp
sub
or
fmul
jo
add
adc
cmp
es
outs
(bad)
call
dec
test
out
jno
jle
neg
cdq
cwde
fnsave
xor
xchg
std
sti
mov
out
adc
mov
xchg
das
mov
rcl
icebp
dec
fcmovnbe
ror
xchg
jnp
adc
int3
dec
jl
jnp
retf
movs
xchg
cld
or
inc
leave
mov
pop
sub
push
push
xchg
push
add
daa
fnsave
fnstenv
mov
retf
mov
push
rcr
mov
mov
pop
(bad)
js
push
ret
push
ja
mov
iret
jnp
test
mov
adc
sbb
ror
mov
clc
stos
xchg
dec
(bad)
mov
(bad)
mov
or
shl
loop
jmp
repz
pop
(bad)
dec
sbb
xor
adc
cmp
mov
cmc
push
div
jnp
(bad)
shr
(bad)
not
sar
cmp
mov
add
xchg
les
iret
jmp
pop
jnp
movs
push
xchg
sub
jne
dec
int3
cli
and
out
add
(bad)
dec
jnp
cmps
mov
pop
ins
xor
jg
or
pop
xlat
push
dec
pop
inc
cwde
mov
(bad)
pop
loopne
(bad)
push
xchg
xor
imul
xchg
push
test
loopne
or
and
jmp
call
mov
fadd
(bad)
hlt
int3
mov
pop
adc
cmps
jo
repnz
icebp
in
sbb
mov
bound
sti
ss
movs
mov
out
inc
out
xchg
mov
pop
dec
add
cs
(bad)
addr16
inc
(bad)
outs
sti
push
imul
in
sbb
out
pop
neg
mov
adc
inc
mov
add
sbb
inc
int
sti
(bad)
test
cwde
aas
add
cli
fsub
add
cmp
xchg
and
mov
cwde
outs
(bad)
or
test
arpl
mov
pop
push
stos
inc
arpl
test
add
inc
or
outs
rcl
inc
shr
mov
out
adc
xchg
aad
inc
sub
movs
stos
dec
xor
sar
mov
push
push
mov
add
call
mov
fstp
xchg
jae
(bad)
cmc
push
movs
adc
ss
(bad)
arpl
xchg
sar
pop
mov
pushf
sub
(bad)
xor
push
std
sahf
jno
sbb
sbb
dec
sub
shl
out
mov
out
push
mov
imul
mov
pop
pop
in
dec
mov
push
push
or
mov
sbb
xchg
mov
xchg
pop
mov
add
pop
loopne
add
cdq
femms
mov
stos
mov
sub
adc
inc
mov
inc
pop
fcmovu
clc
push
loop
aam
xor
push
aam
mov
ror
xchg
sti
je
mov
pushf
mov
add
push
pop
(bad)
scas
pusha
data16
ret
aam
mov
inc
int
stos
mov
adc
or
dec
rcr
ss
cmp
xchg
bound
and
mov
inc
push
xchg
jp
stc
push
push
and
loop
scas
mov
mov
xor
addr16
pop
daa
leave
push
ret
and
add
mov
mov
dec
cmp
je
cmp
dec
das
pop
cmp
and
xchg
test
adc
outs
mov
cmp
rcl
sbb
outs
iret
movs
inc
jmp
bound
push
push
push
jb
test
(bad)
pop
fdiv
or
in
test
(bad)
xor
xor
clc
es
xor
hlt
sub
nop
je
stc
xchg
popa
shl
push
inc
loopne
cmp
(bad)
mov
mov
mov
pop
push
xor
mov
pop
pushf
pusha
pop
scas
pop
mov
test
enter
std
out
ret
xor
mov
loop
jle
mov
into
and
aad
adc
mov
js
(bad)
stc
cmps
pusha
lods
mov
jno
scas
inc
jns
xchg
pop
adc
(bad)
push
repz
pop
out
stos
test
sahf
(bad)
out
jo
div
push
jp
inc
iret
cmp
or
mov
add
push
jno
pop
repnz
mov
mov
call
xchg
mov
les
pop
not
int
mov
shr
pushf
mov
int
mov
inc
cld
sbb
cmp
jne
push
or
imul
into
adc
sar
add
test
aaa
js
stos
mov
cmps
dec
lods
push
fnstcw
in
mov
add
cmps
xor
shr
dec
xor
mov
push
lds
jmp
fdivr
enter
xchg
(bad)
ds
pop
inc
inc
push
aaa
cdq
mov
cwde
xchg
stc
push
mov
inc
cmps
loopne
inc
or
jb
test
sar
cmp
es
cmp
call
daa
sbb
mov
rcr
dec
out
xor
scas
out
cmpxchg
inc
test
add
push
stc
sbb
push
adc
shr
call
and
ret
cli
sti
gs
jbe
inc
call
dec
retf
dec
and
(bad)
ja
push
push
xchg
inc
xor
stos
fs
fdivrp
pop
mov
fst
jne
or
xchg
ins
sub
pop
pop
sti
ss
jp
pushw
cmps
add
xor
out
dec
lds
jle
(bad)
or
repz
aas
(bad)
cld
repz
aas
(bad)
cld
mov
leave
outs
adc
dec
pusha
mov
add
add
dec
inc
dec
inc
scas
inc
pusha
or
add
add
add
(bad)
(bad)
inc
add
add
add
add
add
add
jns
je
ins
cs
jb
ja
outs
addr16
push
gs
imul
xor
xor
inc
jne
je
jb
cmp
jb
ins
sub
push
jne
ins
imul
imul
bound
xor
data16
xor
fs
add
adc
gs
cs
jb
ja
outs
addr16
imul
add
popa
je
pop
add
add
add
add
add
lsl
add
rcl
add
mov
inc
or
add
or
add
add
add
add
or
add
add
pusha
outs
rol
add
add
inc
dec
inc
add
mov
or
popa
add
jo
pop
jae
add
ret
add
push
ret
add
outs
test
add
adc
inc
inc
push
pop
inc
in
(bad)
repz
sbb
ret
shl
scas
mov
mov
fstp
stos
gs
sub
retf
ss
int
pop
mov
out
push
in
cmc
pop
mov
mov
mov
sbb
jmp
jmp
mov
je
retf
or
mov
loop
xchg
xlat
add
xor
and
mov
adc
test
jp
retf
mov
mov
xchg
(bad)
fsub
pushf
std
arpl
mov
fidivr
fs
cmova
in
aaa
addr16
lock
push
fcomp
int3
test
mov
jne
dec
cdq
sbb
(bad)
ror
or
xor
jnp
cwde
mov
jmp
mov
mov
outs
in
popf
adc
or
leave
ss
sbb
sub
out
pop
and
imul
ror
xchg
movs
retf
mov
mov
fmul
push
inc
and
cmps
cli
sar
inc
mov
or
outs
dec
sub
iret
mov
out
mov
data16
cmp
pop
and
jb
and
mov
pusha
out
call
mov
icebp
mov
arpl
leave
cs
xchg
popf
je
ftst
test
pmaxub
call
jne
mov
iret
add
pop
sbb
pop
test
and
retf
push
mov
adc
pop
mov
xlat
jl
xor
ds
cmp
into
mov
(bad)
xchg
inc
imul
or
xlat
dec
pop
add
js
xchg
ret
cdq
push
push
cmp
shr
out
jbe
sti
sti
mov
mov
aad
cmp
sub
sbb
aam
mov
int
shl
cmps
scas
push
xor
mov
adc
lods
jmp
mov
mov
xchg
mov
mov
cmp
test
add
mov
imul
scas
cwde
daa
and
and
int
out
mov
dec
jnp
ins
push
mov
xor
sub
mov
fcom
movs
ss
retf
sub
xor
xchg
ins
inc
sub
out
call
test
dec
jge
pushf
ret
fimul
xchg
imul
mov
cs
pop
xor
outs
(bad)
sub
xchg
sbb
fist
sbb
cli
cmp
xchg
mov
enter
pop
retf
xor
out
test
jne
pop
xchg
jne
mov
inc
shl
xchg
push
mov
fild
call
inc
out
push
test
jnp
pop
cmp
sub
and
mov
and
and
mov
imul
inc
fisubr
pop
cmps
pop
mov
fxch
fwait
test
ret
dec
mov
inc
add
sub
xor
pop
ins
in
(bad)
(bad)
xchg
repnz
fcomp
in
fbstp
sub
sub
int3
mov
popf
sub
sub
std
adc
ins
shl
das
lock
mov
cmp
test
cs
dec
fdiv
(bad)
popf
test
jmp
or
popf
daa
mov
dec
bound
aad
fsub
shl
cmp
fisttp
enter
addr16
xor
movs
loop
push
jge
push
dec
aas
and
xchg
adc
jo
ins
and
cmp
fidivr
repnz
in
bound
add
fldenv
mov
pop
retf
xchg
das
pop
(bad)
cmps
shl
or
sahf
in
pop
add
mov
test
mov
ret
(bad)
shr
or
sub
push
and
(bad)
mov
mov
scas
xchg
inc
movs
fsin
push
test
popa
sub
xchg
or
test
or
push
cmps
mov
scas
fdivr
stc
add
(bad)
cmp
pop
sahf
inc
pop
add
mov
retf
jge
test
out
mov
inc
cmps
icebp
and
pop
sbb
fwait
xor
mov
loope
ror
mov
outs
sbb
popf
loopne
sub
inc
pop
in
bound
mov
add
sahf
mov
mov
fist
pop
hlt
sub
inc
xor
pop
out
add
dec
xor
inc
or
jb
ja
jmp
and
adc
mov
test
in
mov
and
scas
mov
hlt
or
in
pushaw
test
cmp
or
jae
or
dec
xchg
repz
rcr
xchg
jns
lock
das
loop
xor
jno
xor
xchg
idiv
in
mov
push
(bad)
push
jmp
(bad)
add
push
inc
mov
xchg
in
movs
loope
xchg
inc
call
jmp
and
dec
(bad)
sahf
pop
das
xchg
(bad)
mov
in
jp
shr
hlt
dec
inc
rol
fsub
pop
push
mov
jnp
sbb
sbb
pop
ret
rol
sahf
stos
or
pop
xchg
lods
iret
jns
loopne
xchg
inc
inc
mov
add
xchg
data16
jne
ins
pop
jnp
jp
add
and
int
mov
mov
cmp
sub
out
call
mov
xchg
pop
dec
xchg
adc
fldenv
(bad)
ficom
mov
jns
xchg
iret
and
mov
aaa
jbe
mov
test
push
inc
inc
fcom
mov
pop
in
clc
fidiv
retf
fmul
enter
inc
(bad)
or
and
int
call
inc
pop
sbb
nop
stc
pop
and
enter
add
dec
or
xchg
and
push
jb
and
pop
outs
adc
mov
shl
stos
mov
mov
ds
arpl
inc
sub
adc
jne
push
outs
and
inc
(bad)
jnp
and
in
movs
loop
jmp
jle
jno
imul
fld
jecxz
mov
inc
pop
lahf
mov
leave
mov
mov
cmps
ret
fisub
rol
mov
popa
cmps
mov
xchg
cdq
inc
push
pop
push
int
(bad)
daa
mov
stc
cpuid
mov
shr
fldcw
xchg
rcl
fbld
push
pop
mov
mov
fnstsw
cmp
jbe
aad
aas
ror
mov
push
sub
sti
or
mov
(bad)
imul
rol
test
sub
repnz
xor
cmp
or
jmp
ret
nop
push
jge
shl
jmp
dec
(bad)
in
scas
jns
jmp
pop
stos
retf
mov
mov
leave
pusha
stos
inc
cmps
test
push
inc
and
pushf
pop
xchg
into
adc
add
ret
add
out
push
xor
idiv
adc
mov
mov
cmp
ficom
(bad)
fs
jb
out
mov
in
dec
sbb
sbb
les
pop
cmp
test
mov
xchg
adc
mov
in
and
dec
popa
jno
cmp
sbb
jmp
(bad)
sub
call
mov
je
sbb
pop
dec
addr16
jo
(bad)
or
cmp
xlat
repnz
hlt
lods
jg
pop
outs
mov
adc
(bad)
fidiv
shr
xchg
int3
xchg
dec
imul
movs
sahf
daa
repz
stc
xor
retf
cs
dec
push
and
sbb
mov
cdq
fadd
adc
test
arpl
sbb
mov
test
test
enter
js
and
rcl
push
sub
jg
jb
inc
fild
mov
inc
(bad)
mov
adc
push
je
sahf
jle
mov
cs
scas
adc
pop
daa
aaa
ret
das
mov
and
dec
cmp
jge
icebp
in
mov
push
mov
in
jl
push
mov
aas
lahf
cmp
mov
outs
cmp
imul
mov
fucomp
repnz
gs
lahf
out
mov
cld
repnz
push
or
(bad)
repz
xchg
push
push
pop
ds
dec
(bad)
lods
add
jle
jg
ins
shr
pop
add
cmp
(bad)
dec
popf
cmps
sbb
les
test
dec
fistp
cli
mov
sbb
ret
cmp
adc
scas
inc
add
or
cmp
shl
push
mov
aad
(bad)
xor
inc
call
(bad)
mov
cwde
stos
sti
jnp
mov
loopne
js
dec
fisttp
test
rcl
iret
movs
mov
adc
xor
adc
or
pop
mul
sti
jge
leave
push
and
retf
jne
jp
lahf
xor
mov
nop
jo
jne
fisubr
adc
push
add
xor
ins
test
xor
mov
inc
xor
sub
stos
clc
xchg
sbb
pop
xor
ror
jno
jmp
(bad)
std
lods
outs
test
sub
add
out
fwait
shl
or
sahf
fstp
mov
xchg
lock
mov
add
clc
or
inc
cmp
mov
rol
xor
push
in
cwde
jno
out
and
clc
popf
ret
aam
xor
lahf
xchg
test
sahf
cmp
dec
xor
dec
lock
imul
fist
push
dec
add
inc
mov
mov
or
out
mov
int3
mov
fistp
(bad)
test
aad
fidiv
sti
dec
and
push
fcomp
hlt
and
(bad)
or
(bad)
pop
loope
fs
add
dec
adc
int3
scas
aam
or
call
or
in
ins
add
mov
shr
sub
xchg
push
test
mov
fild
pop
pop
ss
test
test
mov
shl
aad
jmp
loopne
jp
int
ficomp
cmp
outs
xor
into
(bad)
int
ds
pop
mov
test
ja
cmps
sahf
movs
test
dec
jmp
push
adc
hlt
sbb
jns
push
out
fmul
jno
std
hlt
dec
ror
and
jmp
int
mov
popa
sbb
sub
add
pop
pop
pop
rcr
iret
jns
out
mov
pop
movs
cld
mov
sbb
mov
sbb
mov
out
mov
mov
mov
xchg
ins
outs
xlat
xor
jb
loop
cmp
xor
icebp
cmps
jge
lods
push
push
sub
dec
popa
sub
add
ins
out
rol
xlat
pop
pop
sar
pop
inc
bound
mov
sbb
sbb
xlat
jg
inc
xchg
inc
jne
rcl
(bad)
pop
lods
(bad)
int
sub
xor
xchg
xor
add
mov
sub
pop
in
sub
jecxz
pop
add
js
jbe
add
mov
and
(bad)
lods
fistp
js
repz
and
jl
(bad)
mov
sub
add
fistp
push
push
xor
jle
cmps
jo
test
mov
in
push
push
aas
ds
repnz
shr
retf
and
jae
xor
xor
pop
dec
cmp
sub
int
push
adc
mul
or
movs
add
dec
addr16
pop
add
pushf
jne
adc
push
push
adc
cmps
ret
and
mov
sti
xchg
push
mov
ja
push
and
inc
retf
loopne
xor
retf
in
(bad)
sub
std
fldcw
movs
mov
fimul
cmps
cli
xor
dec
add
or
(bad)
les
cmp
inc
push
hlt
cli
ins
int3
fst
sub
sar
xor
out
imul
ins
cmp
xor
cdq
std
sub
jl
xchg
and
adc
int
(bad)
cmps
pop
xor
outs
jecxz
adc
addr16
out
cmp
inc
push
adc
jle
fwait
test
push
push
shl
ins
lods
inc
repnz
outs
sub
sbb
sub
ins
arpl
dec
add
jbe
(bad)
adc
push
xchg
mov
pusha
ret
inc
lea
mov
sub
iret
push
pop
sub
sub
and
ja
loop
push
push
xchg
retf
aad
or
aam
add
ss
sub
(bad)
cmps
fwait
(bad)
loope
inc
lock
cdq
dec
into
gs
mov
push
into
fucom
mov
push
dec
popf
or
adc
or
mov
scas
jmp
shl
xchg
mov
adc
mov
pop
jo
test
dec
mov
dec
mov
xor
xor
aas
outs
jns
mov
sbb
leave
ret
fcom
or
lea
mov
pop
imul
mov
sub
cmp
cmp
inc
jle
je
push
pop
xor
lds
leave
(bad)
cmc
xchg
cmc
push
or
cs
nop
jp
xlat
push
outs
sbb
xor
pop
xchg
shl
lea
and
dec
dec
jmp
popa
jle
sub
cli
and
sar
pop
imul
cwde
(bad)
mov
jp
(bad)
cmp
iret
das
jns
loop
rcl
push
push
or
mov
test
test
mov
xchg
repnz
lahf
data16
cmp
ret
adc
inc
cld
outs
not
stos
xor
push
jg
lock
out
aam
jmp
mov
mov
mov
icebp
mov
inc
lods
xchg
xchg
and
icebp
mul
mov
fcomp
sbb
into
retf
sub
dec
int3
sub
mov
cmps
mov
daa
mov
jo
push
fcmovb
jbe
sub
or
jae
cmp
mov
pop
push
xor
xor
ins
dec
ja
and
xor
mov
call
push
or
call
rcr
mov
out
pop
cmp
sbb
aam
or
add
jmp
call
mov
imul
and
pushf
and
sbb
daa
pop
int3
inc
leave
adc
mov
mov
stos
aaa
lods
mov
aam
jae
imul
fisttp
push
arpl
mov
gs
mov
jmp
sbb
xlat
and
test
push
jo
movs
fdiv
sahf
pop
sbb
pop
pop
shl
loopne
and
pusha
xor
fcomp
ficomp
int
jmp
rol
loope
scas
jns
pop
cmc
add
lahf
out
cmp
sbb
cmp
or
jb
addr16
mov
dec
sbb
dec
mov
cmp
or
or
cdq
push
test
ret
mov
push
cs
add
cdq
sub
shl
or
sbb
cs
jnp
lds
repz
sbb
les
mov
lea
add
add
das
leave
pop
(bad)
pushfw
dec
fist
mov
loopne
xchg
mov
sbb
sti
sub
and
mov
lods
call
mov
push
xor
add
cmp
mov
inc
call
cmp
jl
gs
call
xchg
dec
fnstenv
pusha
(bad)
mov
sti
cwde
je
cmp
jo
push
hlt
xor
lods
xor
sbb
sub
hlt
inc
out
pop
std
sub
icebp
stos
mov
sbb
jb
sub
loopne
sub
call
or
xor
das
test
mov
add
scas
dec
and
push
mov
sbb
dec
cmps
imul
sbb
loopne
imul
dec
enter
call
push
jecxz
mov
add
ins
inc
sub
fiadd
xlat
push
pop
adc
sub
jmp
xor
pop
das
mov
test
jae
hlt
call
and
in
or
xor
je
pop
jg
add
jns
ja
cmp
in
retf
fbstp
int3
jge
mov
mov
movs
enter
in
loope
xor
and
mov
push
adc
lods
xor
add
ds
aad
xchg
jns
mov
sub
repz
aas
(bad)
cld
repz
aas
(bad)
cld
mov
ss
mov
add
add
dec
inc
scas
inc
pusha
or
add
add
add
(bad)
(bad)
inc
add
add
add
add
add
add
jns
je
ins
cs
jb
ja
outs
addr16
push
gs
imul
xor
xor
inc
jne
je
jb
cmp
jb
ins
sub
push
jne
ins
imul
imul
bound
xor
data16
xor
fs
add
adc
gs
cs
jb
ja
outs
addr16
imul
add
popa
je
pop
add
add
add
add
add
lsl
add
mov
mov
inc
or
add
or
add
add
add
add
or
add
add
pusha
outs
rol
add
add
inc
dec
inc
add
mov
or
popa
add
jo
pop
jae
add
ret
add
push
ret
add
outs
test
add
adc
inc
inc
push
pop
inc
in
rol
add
scas
scas
popa
bound
dec
ja
jmp
ror
je
ja
jb
mov
shl
(bad)
mov
lock
mov
movs
pushf
push
cwde
inc
rcr
push
inc
xchg
cli
sub
dec
push
popf
mov
pushf
aas
test
or
or
add
sbb
or
daa
adc
shl
dec
inc
stc
sub
jp
inc
ins
push
adc
mov
imul
movs
push
in
and
rol
fstp
jmp
cmps
xlat
ja
xor
xor
and
push
sub
fnstcw
ret
xor
movs
push
jo
popf
adc
mov
cmp
fild
and
ds
dec
mov
add
add
mov
pop
pop
in
mov
pop
inc
fisttp
arpl
inc
repz
and
pop
pop
mov
popf
sahf
cwde
hlt
das
ins
pop
neg
cmps
inc
xor
imul
push
rcr
sbb
or
xchg
sbb
aas
aam
(bad)
adc
sub
dec
pushf
xchg
test
or
adc
xor
repnz
nop
cld
(bad)
and
out
add
push
outs
rol
mov
imul
mov
xchg
mov
sbb
dec
push
retf
fincstp
int
in
outs
jns
(bad)
in
sbb
ds
in
add
fcom
lods
inc
out
mov
lahf
(bad)
cmp
xchg
cli
jecxz
addr16
push
fild
test
jb
int
repz
inc
ins
out
aad
test
sbb
mov
ds
jnp
in
ret
cmps
shr
inc
and
out
xchg
cmp
aaa
and
jge
call
mov
xchg
sub
xchg
mov
fdiv
and
mov
mov
xchg
dec
cmp
xlat
inc
jb
mov
inc
mov
retf
clc
test
pop
mov
mov
mov
sbb
frstor
loop
add
inc
sub
mov
mov
dec
in
push
xchg
imul
scas
clc
(bad)
bound
push
scas
mov
dec
sbb
stc
cs
pop
in
icebp
inc
jb
(bad)
jecxz
outs
sub
xor
sbb
cmps
popa
sub
data16
xor
sahf
scas
pop
scas
das
popa
cli
nop
hlt
jmp
dec
fistp
scas
add
and
mov
les
mov
xor
cmp
clc
nop
jl
inc
mov
cdq
lds
(bad)
ror
and
dec
pop
scas
rol
adc
pop
ret
pushf
pop
call
sub
jb
shl
pop
imul
adc
jmp
ficom
daa
xchg
lods
push
sbb
push
test
jbe
in
int
fadd
in
pushf
jecxz
xchg
cmp
ficomp
xor
xor
loope
dec
fcmovne
ds
and
xor
cmp
mov
shr
mov
call
mov
in
pop
jle
inc
mov
cmps
and
mov
test
mov
cs
nop
lahf
adc
and
ja
clc
or
or
xor
lods
jb
fcomp
mov
mov
xchg
and
jmp
fnstsw
retf
outs
fcomip
push
jb
xchg
mov
pop
push
adc
add
lock
out
mov
cmps
sub
stc
pusha
mov
stos
inc
push
xlat
nop
xor
and
ins
frstor
xchg
imul
adc
push
rcr
cmps
rcr
dec
shl
(bad)
ja
dec
gs
push
dec
jmp
xor
mov
mov
and
pop
or
jp
cmc
inc
sub
cwde
cmp
xor
in
in
pop
scas
sbb
stos
(bad)
sbb
or
loope
inc
push
push
outs
out
or
sbb
add
push
sub
mov
(bad)
and
(bad)
xchg
xor
jo
mov
mov
sbb
gs
mov
xor
(bad)
fidiv
sub
jns
sbb
das
add
mov
mov
outs
es
popf
cmps
add
enter
mov
scas
arpl
clc
and
mov
or
and
cwde
sub
jo
inc
xor
push
jle
and
jae
fidiv
outs
adc
out
test
outs
sub
fbstp
mov
out
jp
sub
adc
sar
fistp
pop
es
loop
lds
fcmovbe
xor
xlat
(bad)
(bad)
out
pop
jg
pop
dec
enter
mov
(bad)
sti
lahf
inc
dec
ja
int
dec
xor
repnz
lea
(bad)
cmp
xchg
aas
mov
adc
jmp
in
lods
add
sub
xchg
pop
push
cmp
stos
or
xchg
adc
adc
inc
sbb
xor
(bad)
sub
push
or
sbb
jb
test
loope
push
popf
cmps
lds
into
retf
imul
cmp
stos
gs
sub
xor
xchg
popf
inc
mov
les
outs
and
xchg
push
pop
lock
test
jg
scas
mov
dec
jae
sbb
cdq
bnd
ret
add
xor
push
pop
pop
outs
sbb
push
cld
sti
xor
jl
pop
pop
mov
into
sub
out
in
sbb
push
lock
pushf
xor
dec
rcl
fidivr
dec
stos
jbe
add
fwait
sar
push
mov
and
and
cdq
mov
push
cmp
pop
clc
outs
jmp
cmp
cmps
int3
shl
pop
call
mov
ja
in
jns
loope
dec
loope
fldenv
mov
push
dec
or
cmp
xlat
mov
mov
fidiv
idiv
sar
cmp
adc
retf
imul
xchg
dec
or
cli
cwde
xor
(bad)
push
gs
js
mov
dec
jg
stc
jnp
or
sub
cli
sbb
mov
cmp
repz
ret
mov
sbb
jge
mov
neg
enter
or
mov
push
pop
cli
jb
outs
dec
adc
mov
jnp
fdiv
sahf
cmp
pop
jno
cmp
cmp
mov
jbe
jle
loope
pcmpgtb
scas
mov
mov
or
pop
sbb
(bad)
xchg
inc
xchg
shl
pop
xor
xlat
pop
in
inc
sahf
or
imul
or
ret
adc
sar
push
cld
movs
mov
(bad)
jnp
xor
inc
and
ins
mov
mov
sti
mov
outs
xchg
jnp
repnz
mov
test
mov
(bad)
pop
jmp
push
aad
push
mov
repz
xchg
(bad)
mov
dec
mov
fld
outs
jecxz
lock
mov
mov
mov
(bad)
mov
(bad)
retf
xchg
sar
inc
mov
jl
pushf
sbb
in
retf
sub
cmp
or
ds
icebp
mov
pop
leave
dec
xor
xchg
loopne
adc
inc
das
fldenv
shr
sub
jo
mov
lahf
xor
jp
xor
mov
jns
pop
in
mov
or
pushf
jmp
dec
imul
cmp
mov
xchg
ret
sbb
bound
mov
ins
jp
or
inc
sbb
hlt
inc
add
add
pop
into
aaa
in
iret
xor
retf
mov
add
outs
loope
mov
fdivr
pop
and
or
sti
xor
push
cdq
cs
(bad)
pushf
inc
mov
imul
into
mov
gs
nop
pop
xchg
jmp
imul
aaa
or
test
jae
imul
sub
and
(bad)
iret
les
sub
adc
sbb
mov
int3
es
ja
jno
mov
repz
loopne
test
and
add
jb
div
(bad)
push
dec
mov
push
js
pusha
cmps
cmp
ins
jecxz
add
bound
test
ds
imul
adc
add
xchg
shr
in
inc
lock
das
loopne
je
fstp
test
les
xchg
dec
dec
xor
call
jnp
js
fidivr
aaa
mov
jmp
(bad)
jp
pop
xchg
sub
cmc
jecxz
(bad)
xchg
je
adc
dec
bound
fsub
add
mov
push
fsubr
fcmovnbe
test
xor
mov
ins
in
aas
je
cmp
mov
xor
and
fsub
cmp
aam
repz
dec
pop
xor
add
dec
sbb
ins
imul
fst
aaa
and
cmp
cmc
scas
or
dec
xchg
xchg
fistp
xchg
xchg
pop
gs
ret
pop
cmp
ret
inc
add
pushf
loope
mov
sti
xlat
sub
lods
movs
cdq
add
jmp
inc
icebp
fisubr
push
(bad)
sub
mov
pop
and
dec
pop
test
sbb
jbe
adc
add
in
dec
test
mov
xchg
imul
mov
cdq
xchg
jl
mov
dec
dec
sahf
mov
clc
sbb
sub
mov
xchg
lods
test
std
lods
adc
xchg
mov
and
cmp
inc
and
mov
fs
push
inc
xchg
push
out
jns
mov
cmp
cmps
mov
cmp
inc
push
sbb
jb
cmps
call
sub
bound
jb
cdq
or
pop
mov
aaa
dec
shr
loop
in
mov
test
or
mov
jl
sar
mov
fistp
jb
dec
push
das
lds
rcr
iret
cli
sbb
push
(bad)
imul
dec
popa
cld
les
push
mov
jecxz
ret
(bad)
mov
fcom
mov
fist
or
ret
pushf
push
(bad)
mov
(bad)
push
dec
push
pop
push
imul
cmp
sysenter
imul
loopne
push
mov
rol
jmp
push
outs
lea
and
cmp
dec
push
add
jnp
(bad)
mov
pusha
xlat
jmp
ret
adc
addr16
jge
gs
aas
dec
jmp
mov
arpl
push
in
lods
pop
mov
jg
cli
pusha
xchg
adc
dec
and
jmp
out
and
jne
inc
xor
pop
add
stos
int
xchg
icebp
sbb
mov
aaa
retf
out
adc
xor
(bad)
fisubr
jle
cmp
outs
retf
inc
nop
imul
inc
inc
jb
lock
adc
out
ret
push
xchg
je
cdq
retf
test
jmp
or
(bad)
adc
(bad)
push
xor
loopne
icebp
fisub
popf
aam
add
data16
lea
imul
pop
mov
loopne
sub
fild
push
xlat
popf
rep
mov
outs
hlt
cmp
in
cmp
cmp
mov
stos
sub
iret
or
xchg
xchg
addr16
popf
adc
sub
dec
jmp
and
xor
push
mov
movs
push
xchg
add
ins
lea
mov
out
xchg
mov
mov
sbb
addr16
sub
mov
mov
loop
popf
aaa
mov
leave
jl
xchg
hlt
or
add
shl
add
xchg
push
sub
(bad)
sub
pop
jmp
out
mov
adc
sti
sar
aaa
call
aad
inc
jae
icebp
push
shl
mov
fwait
xchg
ret
(bad)
aam
(bad)
jnp
fwait
xchg
or
jbe
aaa
out
jecxz
xor
mov
push
jge
fs
adc
inc
mov
call
sbb
retf
sti
pushf
mov
jge
pop
test
cli
mov
mov
pop
test
jb
test
or
xchg
inc
adc
cdq
or
push
sub
push
xor
xor
jo
dec
(bad)
xchg
popf
call
mov
push
adc
lea
ret
mov
or
push
imul
cmps
(bad)
and
jg
inc
or
mov
fadd
std
jge
call
(bad)
cmp
jmp
mov
add
push
adc
or
(bad)
stc
mov
dec
push
frstor
data16
or
cmp
inc
(bad)
icebp
test
sub
or
loope
jbe
shl
outs
cwde
cli
sbb
adc
xchg
call
gs
mov
adc
xchg
xlat
cmps
or
push
xor
jmp
lahf
sbb
(bad)
sbb
int3
sub
and
lock
ja
mov
sbb
mov
xchg
xchg
cmps
sar
sbb
xor
fbld
xor
or
push
pop
leave
push
jae
stos
std
dec
add
call
jmp
ret
call
sub
xchg
dec
inc
xchg
into
stos
pop
dec
aam
int
ins
mov
cmc
repnz
sbb
pushf
sub
not
loope
push
adc
outs
sbb
cmp
push
xor
fdiv
aaa
(bad)
fisub
imul
lea
cmc
or
icebp
call
je
xlat
mov
pop
ficomp
not
dec
dec
fwait
lahf
mov
popf
xchg
mov
push
xlat
dec
das
outs
add
loop
mov
sti
mov
xor
sub
sub
test
dec
or
test
repz
sub
daa
fisubr
jnp
sbb
jae
bound
out
lods
lods
(bad)
jo
pop
and
jnp
stc
(bad)
aaa
shl
or
cmc
jne
sar
shr
fidivr
pop
push
cmp
aad
(bad)
push
out
stc
jno
or
cmp
fsub
jo
test
lea
sbb
loop
stc
mov
je
clc
mov
jae
pop
in
inc
repz
cmp
mov
cmc
xor
xchg
ret
push
push
inc
and
aaa
mov
mov
inc
cld
jecxz
int3
sbb
out
cmps
add
xchg
push
jg
loope
xchg
inc
jecxz
sti
xchg
fst
test
nop
enter
hlt
ror
ror
addr16
icebp
test
ret
mov
jmp
push
and
ins
loop
popf
(bad)
mov
inc
mov
cmps
hlt
jne
lds
mov
dec
stos
jns
stc
mov
inc
mov
test
xchg
test
pop
das
pusha
mov
mov
mov
lea
sub
jmp
je
(bad)
into
adc
xchg
or
inc
(bad)
imul
loopne
push
cmp
inc
leave
mov
mov
scas
inc
cmp
xchg
sti
js
xchg
ret
fidiv
cmps
aaa
hlt
shl
lods
es
aas
dec
leave
cwde
test
add
aaa
ret
ficom
icebp
xchg
fnstsw
pop
pop
fistp
pop
mov
fcmovnb
dec
pop
rol
add
xchg
jge
xchg
pop
gs
loopne
sub
inc
(bad)
cmp
jno
sub
int
mov
add
sahf
mov
nop
jnp
addr16
sub
mov
push
inc
shr
add
popf
fimul
inc
icebp
fstp
lahf
pop
lea
ds
xchg
cdq
in
jmp
sbb
mov
rcr
retf
ins
lea
leave
ret
push
cmp
pop
cmp
xor
sbb
mov
mov
inc
dec
nop
inc
jl
and
add
aad
fild
xchg
adc
jp
xchg
pop
add
daa
inc
push
ja
in
ds
dec
cdq
mov
loop
test
test
ret
sbb
pushf
mov
das
aam
jmp
add
xor
mov
aam
xchg
cmp
push
imul
pop
repz
call
mov
xchg
popf
push
add
mov
sub
push
ror
(bad)
push
clc
xchg
cs
adc
stc
sub
sub
clts
imul
cs
cli
dec
or
sbb
mov
into
adc
push
push
mov
stos
mov
pop
dec
mov
push
(bad)
or
pop
mov
ds
jo
pop
adc
push
adc
retf
pop
mov
adc
fsubr
inc
and
nop
mov
xchg
mov
stc
out
jg
stc
out
jg
pop
add
test
dec
inc
dec
inc
scas
inc
pusha
or
add
add
add
(bad)
(bad)
inc
add
add
add
add
add
add
jns
je
ins
cs
jb
ja
outs
addr16
push
gs
imul
xor
xor
inc
jne
je
jb
cmp
jb
ins
sub
push
jne
ins
imul
imul
bound
xor
data16
xor
fs
add
adc
gs
cs
jb
ja
outs
addr16
imul
add
popa
je
pop
add
add
add
add
add
lsl
add
mov
mov
inc
or
add
or
add
add
add
add
or
add
add
pusha
outs
rol
add
add
inc
dec
inc
add
mov
or
popa
add
jo
pop
jae
add
ret
add
push
ret
add
outs
test
add
adc
inc
inc
push
pop
inc
in
rol
loopne
out
outs
arpl
fwait
cmp
out
mov
fwait
jmp
fstp
mov
loop
fcmove
dec
imul
cmp
aas
enter
add
xor
or
and
shl
cli
mov
les
int3
int3
cmp
push
call
aaa
(bad)
mov
lahf
mov
mov
retf
sub
xchg
sar
movs
call
out
loope
mov
add
outs
sti
repnz
and
jb
pushf
cmps
loopne
movs
(bad)
sbb
mov
ins
cmp
sub
xchg
mov
adc
ss
jnp
push
cmp
adc
cmpps
dec
aaa
push
xchg
fdivr
int
jle
ret
in
or
mov
shr
outs
outs
cdq
add
adc
stos
std
or
mov
dec
push
or
std
mov
dec
ins
punpcklbw
push
pop
movs
hlt
sub
rcr
push
xor
stos
sub
jp
and
jl
mov
cmc
movs
pop
push
push
xor
retf
sub
mov
xchg
jmp
xchg
int
mov
xor
mov
jl
and
(bad)
leave
repnz
sub
dec
movs
std
test
out
addr16
xchg
mov
inc
into
in
inc
aam
xchg
or
xchg
mov
jmp
add
pop
test
inc
rcr
xor
repnz
mov
or
mov
scas
movs
push
pop
sbb
and
mov
mov
push
jecxz
cmps
mov
cmp
push
pop
cli
shl
comiss
mov
dec
push
ins
fild
movs
pop
pop
mov
xlat
or
fucomi
mov
sbb
in
adc
shl
pop
cmc
sub
jle
pop
adc
retf
arpl
push
hlt
ds
mov
or
add
mov
into
das
scas
sub
ss
repnz
ss
arpl
adc
mov
xchg
test
retf
push
xchg
aas
ret
in
mov
mov
int
xor
mov
jmp
add
xor
pop
cwde
adc
cmps
fcomp
xor
dec
(bad)
push
into
xchg
loop
out
xor
mov
cmp
dec
ja
out
ss
in
xor
mov
aaa
enter
ja
aad
addr16
inc
mov
(bad)
pop
movs
push
push
add
ror
(bad)
pop
shl
push
je
leave
pop
les
movs
mov
push
mov
clc
ss
dec
sar
cmc
push
test
jnp
les
stc
inc
test
in
rol
fwait
cmp
add
sar
cmc
movs
out
xor
into
mov
mov
add
out
in
pop
mov
es
sti
movhps
xchg
or
out
or
xchg
int
rcl
dec
lds
hlt
push
loop
add
mov
mov
push
je
inc
push
push
cs
sub
inc
aas
lds
in
mov
cmp
pop
pop
push
push
xchg
mov
push
lahf
xchg
ja
bound
jb
imul
bound
mov
dec
push
pop
mov
test
sti
mov
and
sub
mov
dec
adc
cmp
dec
push
leave
dec
fs
pop
cmp
call
push
cmc
adc
dec
sub
leave
scas
(bad)
int3
jp
xor
mov
mov
daa
mov
daa
and
cmps
jg
push
jb
out
pop
ror
sbb
xchg
js
loope
jecxz
dec
les
shr
sbb
movs
ret
jecxz
lea
adc
(bad)
push
dec
add
cmc
int
je
xchg
call
lahf
ftst
retf
xchg
and
jl
jle
les
loope
popa
neg
pop
xor
mov
stc
shr
rcl
fs
dec
(bad)
xchg
mov
test
push
inc
jg
dec
mov
push
pushf
mov
mov
jl
in
icebp
lahf
in
adc
lds
std
inc
adc
cdq
jp
and
movntps
or
ss
add
cmc
pop
sbb
inc
in
mov
dec
mov
xor
cmc
aad
cli
cmp
lods
aam
pop
jecxz
(bad)
aam
xchg
adc
mov
mov
mov
pusha
je
adc
bound
inc
jge
outs
sar
push
mov
pop
ficom
mov
in
js
ins
and
cwde
jae
or
pop
and
in
outs
or
mov
mov
mov
mov
mov
add
inc
js
xchg
int
xchg
call
nop
pop
or
movs
in
pop
cmp
push
dec
push
add
add
xchg
loopne
xchg
xchg
adc
pop
sbb
mov
cmps
xchg
mov
movs
fst
cld
cli
sar
test
test
dec
xor
fdiv
pop
lahf
push
stos
mov
mov
cmp
push
pop
es
ror
pop
cmps
out
sar
in
mov
outs
mov
add
ss
fninit
fldcw
cmp
cli
mov
pop
fidivr
stc
push
inc
jl
scas
dec
sub
sbb
fsub
cmc
fwait
pop
fsubr
in
ja
fdiv
fimul
inc
cmp
cmp
out
(bad)
repz
ret
mov
cmp
dec
or
jb
sub
mov
test
dec
add
imul
push
stc
stos
fldenv
jg
shl
pop
clc
cmps
ins
add
push
(bad)
push
pop
stos
pop
add
xchg
popa
jge
pop
std
(bad)
lds
push
lods
shr
mov
rep
sbb
mov
test
or
cmp
stc
or
rcr
(bad)
mov
add
dec
in
cs
push
push
fimul
inc
div
popa
test
dec
dec
adc
add
gs
fcomp
sbb
mov
pop
or
jns
push
mov
jo
shr
cmps
mov
or
cs
(bad)
cmps
psubusw
movs
call
pop
or
xchg
and
inc
adc
cmp
xchg
push
push
and
dec
inc
idiv
add
js
jg
repz
lods
mov
std
into
rol
mov
lods
aad
int
sar
ret
mov
jmp
xchg
pop
sbb
pop
bound
ret
outs
test
xchg
jns
mov
xchg
leave
mov
out
movs
and
xor
dec
sub
lock
and
rcr
inc
out
(bad)
enter
push
enter
pop
les
xchg
push
mov
icebp
loopne
push
call
popf
cmp
popf
xor
clc
inc
(bad)
jmp
inc
mov
iret
mov
mov
sub
imul
pop
xchg
popa
pop
call
cld
xchg
test
movs
(bad)
test
popf
out
lahf
adc
loopne
sub
sub
push
dec
fmul
mov
mov
test
pop
data16
vpmadcsswd
push
imul
push
xor
add
and
jl
jo
adc
xchg
(bad)
popf
test
inc
and
sar
fisttp
add
out
dec
icebp
and
movs
or
in
aaa
sub
push
cmp
retf
in
xchg
cmp
ret
push
sub
mov
pop
inc
cwde
sti
cld
push
movs
cli
(bad)
pop
int3
xchg
jmp
pop
and
pop
(bad)
or
push
outs
popf
lods
jl
add
and
stos
mov
push
xor
inc
shl
xchg
adc
jmp
pushf
sub
push
(bad)
sbb
iret
sub
lock
sbb
inc
repnz
xor
add
loop
xlat
inc
pop
jne
and
cmp
sub
stc
mov
mov
xor
dec
lods
and
jo
xor
inc
icebp
dec
mov
repnz
in
or
jbe
clc
stc
jp
pop
outs
pop
push
dec
push
outs
mov
sbb
cmp
je
mov
aam
test
in
test
aam
imul
icebp
ror
clc
(bad)
(bad)
xchg
sbb
rol
dec
pusha
dec
mov
sbb
out
and
(bad)
lods
(bad)
cmp
and
fisub
ins
dec
and
add
repz
mov
cmp
jge
js
or
mov
jno
pushf
pop
cmp
test
or
and
mov
or
in
addr16
and
inc
movs
mov
daa
push
aas
daa
cmp
(bad)
iret
fwait
lods
mov
xor
hlt
shl
ss
adc
popa
cmp
aad
cdq
out
xacquire
shr
pushf
scas
icebp
outs
mov
or
mov
popa
repz
sbb
popa
aas
repz
cmps
xchg
jl
sub
cmps
add
mov
jmp
push
mov
cmc
pushf
sub
cmp
repnz
mov
dec
fs
outs
dec
adc
ins
push
fdiv
inc
push
fmul
jne
repz
aaa
pop
int
mov
adc
rcl
adc
dec
dec
jle
mov
imul
loop
push
xchg
or
cmps
jmp
mov
mov
adc
in
out
out
or
mov
js
mov
mov
lods
in
lds
cwde
test
push
inc
sbb
inc
ror
in
pop
push
iret
mov
jg
jecxz
xor
or
rcl
mov
pusha
movs
stc
out
adc
sbb
es
cmp
xchg
cmp
xchg
shl
mov
xchg
mov
fcompp
adc
js
jbe
jmp
nop
fdiv
or
dec
jl
push
cmc
cmps
and
jg
out
rol
(bad)
lock
inc
and
(bad)
lock
xlat
jae
or
and
or
outs
rol
push
mov
or
mov
scas
jbe
das
dec
scas
out
sub
jp
jnp
ss
push
hlt
add
sub
adc
pusha
mov
dec
test
(bad)
pop
mov
adc
mov
sbb
iret
dec
jp
pop
and
pop
and
ds
lds
adc
sahf
rcl
mov
cmp
jmp
inc
int3
push
test
(bad)
hlt
sar
dec
xchg
js
scas
sbb
sub
mov
push
mov
pop
mov
loope
fs
push
int3
addr16
pop
idiv
fiadd
das
loope
pop
and
xlat
addr16
push
outs
dec
lahf
movs
ja
push
scas
push
mov
aam
neg
shl
(bad)
xlat
sub
ins
and
loope
push
adc
in
xchg
(bad)
add
mov
in
in
std
pop
shl
sti
inc
dec
and
inc
stc
cmp
cmp
(bad)
dec
inc
popa
lods
(bad)
fadd
shr
out
push
inc
les
into
jmp
or
and
dec
or
rcl
fiadd
ret
push
xchg
jle
test
cmps
xor
sub
xchg
call
pop
arpl
int3
xchg
cld
xchg
pop
pop
ds
ret
dec
adc
pushf
push
(bad)
(bad)
mov
js
or
or
jbe
lods
popf
mov
sub
jl
lahf
push
shl
repz
and
mov
jo
scas
repz
inc
sar
mov
jnp
adc
cwde
xor
xchg
jle
and
icebp
aaa
sub
push
shl
push
pop
jge
addr16
(bad)
rcl
pop
mov
out
(bad)
sub
pop
pop
add
outs
cmps
int3
arpl
pop
scas
pushf
pushf
ror
pop
aam
stc
push
pop
jns
das
jb
jp
ss
fadd
mov
adc
scas
(bad)
and
les
jecxz
push
loop
int
jnp
ins
outs
rcl
adc
mov
pop
cmp
shr
fnsave
in
clc
sub
out
or
xchg
popf
cmp
push
das
dec
add
fucomi
mov
dec
add
adc
mov
cmp
shr
sbb
pop
fs
retf
or
ficom
xor
and
cmp
retf
shr
jmp
lods
outs
jae
iret
hlt
scas
mov
in
ins
ins
mov
adc
add
xchg
lods
(bad)
imul
inc
rcr
add
and
pushf
sub
rol
dec
ja
mov
mov
mov
and
mov
nop
aaa
popf
fstp
es
inc
in
mov
ss
and
or
or
hlt
ja
xchg
shl
mov
push
push
mov
gs
xor
and
shl
mov
add
sub
(bad)
push
test
add
mov
fcmovnu
out
jne
dec
into
pop
or
shr
mov
jcxz
sub
pop
sahf
xor
cmp
fidiv
out
lods
jg
lahf
jg
adc
call
xor
popa
and
retf
(bad)
stos
imul
cmp
or
pop
push
mov
aas
sbb
pusha
jl
xchg
and
and
dec
das
jns
outs
sahf
mov
mov
rol
pmuludq
int3
sbb
(bad)
int3
scas
int3
sti
loopne
fldcw
les
push
std
jmp
loop
(bad)
in
mov
out
aam
inc
and
sbb
adc
aas
xor
ret
lods
pop
test
dec
xchg
cwde
test
lods
(bad)
hlt
ins
mov
stos
push
xor
mov
fdivr
inc
outs
fidiv
in
(bad)
jmp
aad
test
dec
push
pop
sub
sub
xchg
xor
fs
ficomp
iret
cli
or
adc
sub
sub
add
add
inc
xchg
dec
mov
loope
out
inc
mov
inc
lahf
xchg
rol
adc
rcr
push
jle
adc
retf
loope
push
js
adc
ja
(bad)
outs
cmps
rcr
or
adc
or
or
inc
mov
push
aam
ret
daa
movs
sbb
std
pop
jmp
les
mov
sbb
pop
xchg
jno
js
jae
sub
xor
std
cmp
mov
mov
outs
stc
ins
adc
mov
push
add
(bad)
jmp
(bad)
sub
sbb
and
mov
les
sub
jae
nop
pop
mov
pop
cli
push
repz
out
je
test
push
or
mov
mov
ror
add
xor
shl
ror
push
repnz
sub
aas
sub
repnz
sub
and
pop
cli
fisub
ins
dec
or
push
popf
cmps
fnsave
mov
je
push
ficomp
div
dec
add
add
cmp
inc
fmul
retf
mov
jb
xlat
cmp
je
dec
sbb
jae
cmp
call
sahf
adc
dec
pop
scas
inc
sti
in
jmp
out
sbb
dec
es
loope
push
imul
shr
adc
imul
addr16
es
mov
in
cmp
test
xlat
or
rcl
sbb
cdq
ror
ins
xchg
clc
dec
movs
jne
add
test
stos
or
jb
pop
mov
std
test
test
aad
mov
fcom
out
std
shl
mov
add
cld
cdq
sbb
xlat
mov
out
lock
retf
shr
sbb
xchg
scas
lock
stos
dec
ss
stos
and
xchg
xchg
pop
mov
mov
mov
xor
(bad)
out
pop
xor
add
daa
dec
mov
sub
das
ret
mov
leave
fidiv
push
jp
dec
jp
aaa
adc
fwait
je
or
in
or
xor
pushf
in
add
adc
out
sti
ins
fdivr
aad
fld
daa
dec
cmp
inc
inc
icebp
mov
cwde
sbb
and
pop
mov
fisttp
sar
(bad)
fcomi
inc
mov
mov
inc
or
sar
fsubp
push
addr16
or
mov
mov
mov
inc
(bad)
jle
fidiv
jae
mov
add
sti
cld
sbb
mov
stos
jne
inc
jbe
shl
mov
jg
stc
out
jg
stc
mov
sub
jg
add
add
dec
inc
scas
inc
pusha
or
add
add
add
(bad)
(bad)
inc
add
add
add
add
add
add
jns
je
ins
cs
jb
ja
outs
addr16
push
gs
imul
xor
xor
inc
jne
je
jb
cmp
jb
ins
sub
push
jne
ins
imul
imul
bound
xor
data16
xor
fs
add
adc
gs
cs
jb
ja
outs
addr16
imul
add
popa
je
pop
add
add
add
add
add
lsl
add
mov
mov
inc
or
add
or
add
add
add
add
or
add
add
pusha
outs
rol
add
add
inc
dec
inc
add
mov
or
popa
add
jo
pop
jae
add
ret
add
push
ret
add
outs
test
add
adc
inc
inc
push
pop
inc
in
rol
loopne
dec
dec
out
jnp
xchg
mov
mov
fistp
aaa
cmp
test
je
aas
enter
add
fwait
xor
jmp
dec
test
xor
sbb
fwait
pop
add
shl
fidivr
adc
out
inc
pop
cvtps2pd
add
ffree
or
idiv
adc
sub
sub
or
imul
ficomp
or
cmc
stos
and
pusha
xchg
in
mov
pop
sub
xchg
sub
or
test
jo
shl
shr
and
pop
call
and
xor
inc
sti
not
cmp
scas
call
ss
test
sete
and
push
push
sti
add
xchg
cmp
mov
xchg
dec
and
imul
rol
add
fs
ja
mov
gs
and
lahf
fbstp
dec
in
push
jmp
test
xor
shr
fidivr
push
stc
mov
jno
imul
jmp
aaa
ret
adc
std
lahf
adc
jae
leave
retf
fbstp
(bad)
mov
shl
sub
jmp
push
mov
mov
cld
ds
xor
(bad)
fdivr
jle
mov
cmps
(bad)
and
loopne
pop
xor
aas
sti
jb
sub
mov
inc
cdq
pushf
lock
mov
es
arpl
into
jg
add
popa
sub
imul
adc
cmp
pop
pop
mov
pop
push
(bad)
je
cmps
jnp
sbb
outs
inc
das
dec
push
sub
test
retf
arpl
inc
jmp
aam
pop
ret
pushf
xchg
xchg
into
and
icebp
mov
pop
dec
stc
es
xchg
inc
push
cwde
mov
push
std
sbb
xor
out
dec
ins
mov
lock
cmc
int3
pop
push
fs
stos
outs
add
jmp
pop
cmp
push
ins
cli
jle
pusha
push
enter
jmp
mov
hlt
(bad)
aam
and
xor
push
and
sar
xchg
fnstenv
ins
iret
sub
stos
ja
fwait
and
inc
mul
xchg
cmp
outs
stos
pop
inc
movs
stc
sar
stos
sub
jle
mov
aad
into
out
les
sbb
mov
xchg
mov
ret
in
sub
pop
jge
stc
xchg
xchg
jo
pop
arpl
in
enter
pop
xchg
jb
movs
add
xor
pop
cdq
aaa
pushf
jns
pop
cmp
push
into
cmp
outs
iret
lods
add
stc
dec
mov
push
popa
stc
test
jle
jg
xchg
test
ror
into
push
sbb
push
and
dec
ins
repnz
add
jl
mov
pop
xchg
cmc
sar
add
daa
or
dec
mov
sub
call
fcomp
dec
push
inc
xchg
icebp
sti
jmp
jge
sbb
push
das
jne
cmp
cmps
add
pop
addr16
fld
jmp
(bad)
not
mov
jmp
pop
cld
ins
mov
dec
xchg
xchg
cmp
arpl
out
mov
dec
cld
adc
arpl
ret
mov
shl
inc
xchg
outs
mov
in
mov
pop
cmp
pop
sub
sar
jmp
(bad)
mov
mov
mov
mov
sbb
adc
inc
repz
pop
jbe
in
(bad)
push
xlat
add
push
pinsrw
repnz
cmp
cmp
iret
sbb
inc
mov
push
ins
add
adc
movs
push
ja
or
jp
jp
push
sbb
add
cdq
repnz
sbb
loope
cmp
sub
jb
(bad)
mov
mov
test
adc
dec
and
add
loopne
mov
push
test
retf
aad
adc
into
(bad)
jbe
movs
pop
dec
xchg
sub
ss
pop
push
pop
push
and
cdq
pop
dec
xor
or
jne
imul
out
ret
std
imul
push
mov
test
jae
data16
lds
xlat
jle
mov
pushf
add
hlt
mov
xlat
imul
out
push
ja
xor
cmps
inc
bound
mov
add
test
sbb
push
sbb
push
xor
dec
push
(bad)
mov
punpckhwd
jno
(bad)
push
fst
adc
fld
push
cmp
or
(bad)
inc
mov
push
sbb
je
fimul
fist
dec
and
mov
data16
rol
neg
out
repnz
daa
mov
jmp
mov
inc
loop
mov
and
pop
dec
inc
push
popf
adc
sti
fwait
adc
xchg
sub
pop
xlat
movs
ins
fdivr
jle
rol
stos
shr
aam
repz
out
loopne
(bad)
(bad)
ficomp
pop
push
and
sub
data16
xlat
pop
test
movs
ins
mov
mov
sub
mov
out
push
cmc
inc
addr16
mov
push
push
std
push
outs
fcom
push
mul
xor
pop
inc
call
loop
sbb
repz
jecxz
hlt
xor
jno
mov
retf
ins
popa
sub
mov
test
int
lods
sbb
xchg
inc
aaa
mov
out
adc
ficom
sti
and
je
ret
xchg
mov
pop
cwde
in
jne
push
icebp
inc
inc
cmp
cli
xchg
daa
(bad)
push
jmp
push
xor
dec
xchg
test
push
pop
into
sbb
mov
mov
and
xchg
push
adc
xchg
loop
and
inc
push
push
push
xor
(bad)
cmp
xor
pop
mov
jno
push
lods
fdiv
mov
push
xchg
fdiv
les
inc
push
fbld
cmp
(bad)
out
adc
xchg
or
mov
dec
mov
pop
fdivr
mov
xchg
or
mov
sub
not
movs
mov
push
out
mov
std
ficomp
inc
cld
and
fstp
jb
fwait
in
fwait
xchg
ror
adc
sub
add
loop
mov
mov
aad
adc
xchg
ds
mov
inc
fsub
inc
rcr
push
pop
fsubr
out
xchg
push
test
adc
frstor
pop
mov
mov
mov
mov
dec
xor
mov
xor
lods
ret
jne
xchg
addr16
xchg
(bad)
ficomp
and
push
out
sub
jp
lds
not
push
push
adc
and
call
add
outs
lods
test
ins
jle
lods
push
ja
jb
dec
push
add
sbb
das
es
cli
add
dec
cmps
hlt
cmc
push
cmp
cmp
cmp
inc
ret
push
push
lds
mov
(bad)
ss
stos
xchg
adc
or
xchg
lahf
mov
outs
jns
mov
jg
(bad)
add
mov
cmp
fistp
scas
inc
adc
mov
xor
mov
mov
add
adc
call
iret
ja
js
mov
adc
mov
xchg
leave
jns
and
ja
xchg
sbb
mov
xchg
je
adc
leave
jae
xchg
imul
xor
cmp
push
pop
out
sbb
fimul
shr
in
out
cmps
and
xor
cli
dec
aam
aas
imul
mov
ins
add
fdiv
or
mov
xor
jno
lods
dec
mov
xchg
xor
or
retf
mov
cli
push
les
scas
cmp
mov
mov
sub
out
sub
into
pop
aas
leave
jb
pop
add
sub
je
scas
outs
mov
test
popa
adc
fs
inc
cmp
push
pop
popa
mov
xlat
and
jmp
bound
mov
xchg
push
mov
and
jl
and
cdq
imul
cwde
js
stos
cmps
lea
cmps
cwde
imul
out
sti
cmp
add
push
cld
mov
fst
or
cmp
aas
or
sub
dec
pusha
cli
pop
ret
ja
xchg
scas
leave
fadd
add
div
mov
add
pop
aas
xchg
mov
mov
fldenv
cld
jmp
or
push
ss
retf
sbb
imul
or
add
clc
jns
pop
in
sub
les
or
scas
cmp
stos
sub
cld
fcomp
sti
adc
inc
or
inc
or
and
xor
dec
sbb
imul
jbe
sub
xchg
sub
call
out
xchg
mov
push
int
pop
cdq
cwde
pop
inc
dec
xor
or
mov
mov
or
fs
xor
jo
pop
inc
push
jb
cmp
xchg
mov
push
inc
hlt
call
sub
imul
(bad)
fs
stos
ror
pop
cwde
lds
pop
add
pop
ins
xlat
xchg
stc
adc
and
xchg
stc
ds
lock
mov
xchg
int
push
add
mov
or
lds
jmp
or
clc
int
mov
pop
out
cmp
sub
cmps
imul
mov
jo
xchg
mov
pop
xchg
push
xchg
shl
inc
fnstenv
pop
xchg
lea
jmp
sahf
xchg
loop
jnp
add
jo
push
arpl
xchg
shr
out
sub
aad
cmp
loope
sbb
add
les
cld
in
fs
jmp
inc
push
add
je
ret
test
cmp
cmp
call
push
inc
test
pop
adc
scas
mov
scas
mov
and
jmp
(bad)
stos
dec
jb
xlat
jno
jmp
push
fwait
push
dec
mov
xchg
retf
fmul
mov
xor
ds
(bad)
das
fdiv
jl
jle
and
aam
cdq
mov
pop
das
or
loope
jecxz
loope
adc
cmp
(bad)
xchg
mov
pop
jo
je
or
mov
add
sbb
cld
cld
imul
cld
pop
retf
lahf
int3
xchg
pop
push
xor
sahf
sar
mov
test
xor
pop
jp
pusha
push
push
test
in
lahf
xor
ss
imul
fs
sub
(bad)
out
fs
dec
mov
shl
or
cmp
xor
sbb
aaa
xor
mov
xchg
push
int3
fstp
je
(bad)
jb
ins
ret
mov
shr
cmp
adc
jo
and
stc
dec
cmp
and
dec
push
nop
test
sub
xchg
jmp
jno
push
je
(bad)
inc
adc
xchg
pop
movs
mov
push
dec
lods
push
sbb
scas
add
pop
int
mov
iret
in
and
lahf
xor
outs
xor
pop
dec
push
retf
(bad)
cli
das
adc
cmp
sub
cmps
hlt
and
pop
rol
jmp
push
(bad)
xchg
(bad)
push
sbb
add
clc
clc
pushf
xor
(bad)
js
jp
sbb
jecxz
adc
mul
adc
pop
lock
mov
mov
sub
push
mov
pop
lods
push
shl
lods
jae
dec
movs
dec
adc
cli
mov
mov
mov
repz
(bad)
mov
mov
rcr
sub
or
sub
stos
inc
addr16
shl
add
pop
xchg
fwait
jecxz
adc
sbb
add
pop
in
dec
inc
fs
mov
stos
sbb
adc
int
test
pop
int
cmc
cs
mov
imul
add
or
mov
pop
sbb
or
fistp
pop
test
xchg
mov
in
xor
or
xchg
sbb
pop
enter
xor
pop
sbb
scas
fnstcw
jae
dec
lods
stos
aaa
loopne
push
ins
mov
dec
mov
or
jne
xchg
fs
pop
add
sbb
lods
ins
add
pop
push
dec
cmp
and
cmps
iret
xchg
or
sar
cmp
in
rol
or
sbb
mov
js
cdq
in
pop
pusha
or
xor
dec
sub
cdq
pop
(bad)
adc
jae
scas
push
gs
fwait
jne
sub
lock
add
jbe
mov
xor
xchg
jmp
ds
push
jmp
dec
in
out
cdq
jp
jp
fldenv
bnd
or
xchg
adc
icebp
adc
add
xchg
je
sub
(bad)
in
cld
adc
movs
mov
mov
jno
push
xchg
mov
xchg
rcr
adc
frstor
xchg
mov
xor
sub
popf
sbb
lahf
cwde
push
lds
outs
icebp
inc
mov
and
stc
sub
push
jmp
cdq
dec
rcl
adc
pop
mov
mov
(bad)
jne
push
dec
jne
and
addr16
leave
adc
lds
dec
(bad)
lea
out
pop
xchg
lods
mov
jl
inc
outs
mov
loope
dec
loope
cmp
mov
(bad)
push
lahf
mov
call
sbb
stos
xor
iret
lea
ds
jae
pop
jle
sbb
movs
(bad)
cmc
cmp
jmp
inc
fld
bound
lods
sbb
leave
xor
push
ret
inc
stc
sti
dec
(bad)
cmc
xchg
sub
push
pop
xchg
mov
call
dec
pop
mov
cmp
retf
ds
push
pop
daa
inc
mov
mov
nop
mov
sub
cmps
sar
stc
mov
and
mov
mov
mov
stos
mov
mov
lods
clc
in
adc
(bad)
lods
sbb
scas
aaa
dec
inc
jnp
(bad)
lds
mov
sar
adc
out
push
pop
fcmove
arpl
shl
cmp
xchg
adc
xor
xchg
jmp
leave
int
fst
jg
iret
shl
push
add
rcl
call
cwde
aas
jp
call
sub
clc
cld
fbstp
inc
mov
cmp
sbb
cmp
push
xor
and
or
push
(bad)
leave
aas
mov
jmp
sbb
repnz
out
push
jno
je
pop
jb
adc
ret
adc
rcl
jp
mov
mov
xor
(bad)
inc
adc
mov
xchg
jl
dec
(bad)
dec
enter
rcr
popa
jb
sub
pop
ficomp
sub
ss
mov
jno
ja
out
icebp
mov
aad
adc
push
mov
inc
adc
sub
(bad)
std
mov
push
or
sub
mov
pop
shrd
fadd
retf
or
xchg
mov
sahf
and
outs
inc
(bad)
jnp
test
mov
adc
das
lea
shl
fs
mov
mov
or
sub
mov
iret
push
mov
dec
mov
icebp
jp
dec
(bad)
nop
fdiv
cs
adc
call
pop
(bad)
jl
out
arpl
in
into
mov
outs
repnz
mov
hlt
jge
inc
hlt
inc
mov
sbb
iret
retf
pop
dec
cmp
or
into
ja
mov
aad
mov
das
mov
(bad)
out
jbe
gs
mov
mov
xchg
xchg
xchg
jmp
lods
xor
xlat
scas
repnz
push
pop
int
mov
mov
or
or
iret
jg
mov
pop
dec
aas
or
mov
jle
mov
cmp
mov
cmp
or
push
aad
push
or
inc
push
xchg
loope
push
idiv
mov
push
add
and
std
jl
push
adc
push
and
push
sub
out
sbb
xchg
js
lods
add
std
push
add
sub
push
adc
sar
lahf
(bad)
cld
out
(bad)
stc
iret
push
xor
shl
fstp
add
add
dec
inc
dec
inc
scas
inc
pusha
or
add
add
add
(bad)
(bad)
inc
add
add
add
add
add
add
jns
je
ins
cs
jb
ja
outs
addr16
push
gs
imul
xor
xor
inc
jne
je
jb
cmp
jb
ins
sub
push
jne
ins
imul
imul
bound
xor
data16
xor
fs
add
adc
gs
cs
jb
ja
outs
addr16
imul
add
popa
je
pop
add
add
add
add
add
lsl
add
mov
mov
inc
or
add
or
add
add
add
add
or
add
add
pusha
outs
rol
add
add
inc
dec
inc
add
mov
or
popa
add
jo
pop
jae
add
ret
add
push
ret
add
outs
test
add
adc
inc
inc
push
pop
inc
in
rol
loopne
out
bound
ja
jae
(bad)
je
jmp
ja
sahf
dec
out
into
jmp
std
and
sahf
pop
add
dec
cmp
loop
xchg
cmps
movs
(bad)
mov
rcl
pop
mov
(bad)
es
and
pop
ret
cs
rcr
xlat
sbb
movs
jnp
xor
push
in
movs
out
repz
fild
or
ret
imul
sub
sahf
mov
or
loope
repnz
xchg
lods
shl
pop
out
mov
xor
out
add
fidivr
mov
jb
mov
inc
sbb
in
dec
jecxz
in
int
jmp
daa
shr
pop
cmp
sub
pop
pop
outs
add
mov
dec
or
pop
adc
push
or
sahf
mov
enter
cwde
mov
scas
out
icebp
pop
mov
dec
(bad)
stc
dec
das
stos
and
xchg
push
add
inc
jp
cmp
addr16
out
xor
test
fsubr
scas
mov
dec
adc
lahf
fsubr
ins
shl
dec
scas
icebp
retf
xchg
lods
ja
inc
jo
add
fwait
inc
xor
jmp
mov
xchg
mov
add
cld
sbb
mov
pop
cmps
rcr
ins
mov
xchg
or
test
js
add
(bad)
mov
in
ror
or
xchg
clc
into
fnsave
add
out
fstp
into
jbe
retf
repnz
and
pop
xchg
popf
xchg
stos
pop
push
retf
jp
dec
sbb
ds
adc
xchg
in
out
or
cdq
mov
dec
cmp
pop
sub
jbe
icebp
int3
pushf
cmp
call
jge
sti
jne
out
imul
enter
push
cmp
out
xlat
popf
call
cwde
arpl
mov
bound
mov
int
and
(bad)
int
or
or
(bad)
jge
xchg
push
(bad)
ror
mov
out
sbb
sub
int3
or
mov
cmp
xor
repnz
ss
sub
mov
lods
mov
rol
lock
mov
test
inc
mov
adc
jae
and
add
sub
loopne
(bad)
jnp
pop
adc
cmp
mov
add
ret
adc
cmp
(bad)
and
retf
xchg
jnp
mov
ficomp
(bad)
loopne
fdiv
cmp
jno
inc
pop
adc
xchg
jb
mov
aas
je
dec
into
xor
aaa
out
jb
cli
pushf
std
lea
icebp
push
inc
in
mov
popf
aam
retf
dec
jmp
inc
iret
rcr
movs
push
mov
sub
arpl
call
or
jne
mov
mov
addr16
push
(bad)
jo
scas
jg
movs
lds
mov
push
mov
sbb
loop
fdivr
xchg
jo
mov
test
mov
pusha
popa
jae
fidiv
and
inc
setl
ds
sar
lea
ret
or
in
scas
sahf
push
ins
jecxz
sbb
inc
ret
cmp
stc
cmp
mov
xor
xor
push
sbb
and
mov
push
fistp
cdq
mov
mov
xchg
or
daa
dec
cld
shr
mov
daa
adc
in
imul
icebp
mov
cmp
pusha
mov
cmp
and
pop
cld
jnp
cmps
sahf
iret
sbb
sti
lods
xchg
and
jnp
clc
jnp
pop
enter
rol
push
movs
sbb
lods
test
hlt
adc
es
test
stc
dec
pop
shr
mov
ds
daa
sar
cdq
and
mov
std
dec
stc
jle
call
mov
rcl
test
test
xchg
popa
jg
mov
dec
aam
mov
iret
iret
cwde
outs
(bad)
dec
gs
jle
adc
test
push
pushf
rol
and
repz
dec
(bad)
lds
out
mov
cmp
xor
lahf
stc
test
xchg
dec
scas
push
sub
jle
add
sar
fcom
pop
pop
stc
or
pop
lods
add
das
data16
addr16
cwde
(bad)
les
mov
cmc
sub
mov
in
into
cmp
stc
push
lock
xchg
test
adc
popa
test
or
out
lock
outs
jmp
mov
inc
xchg
shr
push
lods
dec
(bad)
movs
inc
arpl
fucomip
lea
out
loopne
shr
and
mov
mov
shl
fistp
fld
add
mov
test
dec
inc
dec
jmp
jno
inc
sbb
mov
outs
xor
push
(bad)
(bad)
jl
jg
fcomp
sbb
(bad)
bound
and
jnp
or
leave
jae
xlat
call
pop
inc
(bad)
in
cmp
inc
fisubr
add
test
outs
ret
push
sbb
dec
mov
mov
sub
int
cmps
add
ffree
jg
pop
jo
imul
pop
add
sahf
cli
push
(bad)
pop
mov
mov
rol
dec
cmp
add
push
movs
shl
cmc
lods
dec
adc
fnstsw
mov
lea
jle
daa
call
xchg
or
nop
in
ficomp
jne
fsub
xchg
into
or
dec
and
ja
dec
mov
or
jge
mov
dec
lods
lock
in
jne
dec
jp
sub
ret
sbb
fs
push
icebp
or
leave
or
pop
mov
int3
mov
xor
retf
movs
push
popa
dec
mov
jg
sbb
sbb
and
mov
mov
mov
or
mov
jge
sbb
fiadd
ficom
cmp
mov
scas
mov
mov
aam
inc
inc
addr16
sbb
xchg
xchg
aad
add
mov
adc
sbb
and
or
(bad)
xchg
pop
cli
xchg
xchg
lods
push
or
idiv
mov
mov
push
pushf
pop
sbb
stc
lods
test
or
mov
pop
dec
es
fbstp
cmps
fild
inc
data16
(bad)
jae
out
dec
push
mov
xor
(bad)
retf
shr
stc
ret
shr
sub
sbb
hlt
and
pop
je
push
mov
fisttp
inc
jmp
sub
gs
mov
cs
push
in
int
adc
or
jo
inc
fs
adc
mov
cwde
std
jns
(bad)
lods
mov
out
popf
rol
add
std
mov
push
xor
rol
fcomp
cs
xor
jbe
jnp
sub
out
rcr
hlt
cs
xchg
adc
sahf
cli
or
sub
jmp
xchg
test
cmps
push
js
pop
pushf
jno
or
add
(bad)
or
jnp
cmps
(bad)
dec
js
dec
mov
adc
pop
jmp
xchg
sbb
sub
adc
jae
mov
out
or
(bad)
int
retf
je
jne
push
sbb
movs
jle
jle
and
sub
pop
call
inc
jo
fistp
cmp
jbe
or
and
pushf
xchg
xchg
mov
repnz
mov
into
mov
jecxz
sbb
cmp
mov
mov
mov
inc
ret
mov
out
rol
sub
daa
pop
adc
fistp
dec
cmc
pop
test
adc
retf
aam
into
adc
popa
stos
push
fwait
jmp
push
shr
je
jl
stc
xor
addr16
popa
cmp
call
adc
mov
imul
stc
ds
loop
fcom
fstp
pop
adc
ds
pop
adc
(bad)
shl
jae
ret
pop
ss
sub
mov
or
leave
ss
add
xchg
dec
xor
dec
mov
mov
jae
push
(bad)
out
mov
mov
pop
test
pop
test
cwde
or
and
mov
call
outs
ins
mov
out
cmc
xchg
in
mov
sti
ins
add
cmp
loope
jnp
cmp
lea
ins
imul
push
mov
push
cwde
fistp
data16
rcl
push
or
or
fs
mov
cmp
xchg
(bad)
mul
cmp
aas
mov
hlt
stc
imul
adc
mov
and
adc
mov
pusha
in
fs
cmp
or
and
jg
test
rcl
fstp
jae
imul
xor
popf
outs
mov
push
mov
lock
mov
pop
rol
call
pop
jecxz
daa
sbb
jg
mov
imul
xor
cmps
pusha
pop
inc
cmps
lahf
fidivr
test
push
test
sbb
fsub
mov
aam
test
mov
add
out
es
mov
mov
adc
inc
push
or
or
mov
je
mov
arpl
cli
shl
sbb
mov
inc
loope
shl
sub
dec
adc
jmp
icebp
test
jno
test
neg
push
(bad)
push
arpl
iret
or
(bad)
jmp
jo
vmread
lods
fs
arpl
lea
mov
push
or
call
mov
(bad)
jo
lock
pop
cmc
movs
pop
or
xchg
sbb
mov
ret
xchg
jp
xchg
mov
sbb
jo
ins
push
sub
nop
and
sub
mov
stc
dec
ins
fst
lods
loop
xchg
sub
xchg
lea
cdq
neg
jnp
pop
push
(bad)
outs
xchg
movs
or
lea
xchg
sub
rcl
stos
js
sbb
ret
fwait
retf
ja
pop
or
or
sub
fist
fild
sahf
imul
idiv
pop
xchg
cmp
ja
or
adc
in
lea
cli
add
lahf
icebp
inc
cmps
mov
push
pop
cmp
idiv
push
mov
dec
sti
xchg
mov
inc
push
pop
add
jae
stos
imul
lahf
lods
xchg
or
adc
mul
std
shr
push
push
sub
sub
sub
into
call
jns
inc
sbb
sub
push
ins
mov
lahf
aaa
xchg
xor
test
dec
(bad)
in
and
loop
jne
adc
in
jecxz
jecxz
cmp
cld
cwde
push
mov
sub
aad
mov
arpl
retf
adc
inc
mov
test
enter
inc
loop
int3
or
aaa
ja
(bad)
cmc
xchg
shl
loope
adc
icebp
and
add
(bad)
imul
(bad)
sbb
pusha
lods
rol
jbe
xor
adc
inc
repnz
and
sbb
sbb
jecxz
jo
in
pusha
or
jbe
popa
sahf
cmp
imul
jle
das
adc
stos
jns
push
sti
dec
inc
sbb
les
add
xor
xchg
dec
(bad)
push
and
push
fcomp
femms
out
daa
sub
popf
loope
xchg
(bad)
fistp
push
xchg
push
inc
popa
add
cmps
das
in
std
hlt
mov
enter
dec
and
pushf
stc
sbb
dec
into
xor
ds
cmp
bound
(bad)
sbb
and
and
inc
pop
pop
test
lods
cmp
ret
push
jne
xor
sbb
pop
push
loop
mov
add
fisttp
add
mov
xor
shr
imul
ficomp
cmp
shl
mov
aas
push
cld
mov
inc
or
sbb
xor
in
repnz
fadd
jmp
ffreep
or
adc
popw
sbb
fnstsw
push
push
push
mov
inc
dec
in
lods
inc
jae
pop
mov
shl
cmp
test
sbb
fdivr
aas
mov
pushf
dec
inc
shl
aam
bound
rol
fs
sar
add
jle
adc
in
lods
in
add
inc
mov
lods
cmp
jmp
cmp
out
or
(bad)
out
push
jle
pop
int3
pop
test
add
ds
inc
das
jmp
push
mov
sub
dec
cdq
ds
cmp
inc
jne
or
ficomp
inc
push
adc
xor
sub
jns
cmp
ins
add
mov
push
or
lock
fisub
into
jns
push
and
ds
lods
outs
push
and
push
push
and
hlt
ja
ds
inc
cli
(bad)
rcl
scas
pop
cmp
xchg
push
hlt
aam
xchg
mov
pop
cmp
add
cmp
outs
adc
adc
cmp
inc
xor
push
rcl
xor
call
push
sub
in
das
repz
imul
out
call
sysenter
push
cmps
xchg
push
mov
clc
bound
push
inc
xchg
in
pop
pop
dec
lock
aaa
mov
dec
es
mov
sub
push
jge
mov
popa
xchg
pop
jbe
add
or
jg
addr16
sub
or
aaa
inc
sub
mov
pop
and
mov
test
hlt
jns
mov
and
pop
sub
cmps
push
loope
enter
loope
add
sub
jge
pop
xor
pop
adc
lock
out
cmps
ret
mov
push
popa
mov
shl
int3
pop
sbb
jg
test
jnp
addr16
mov
xlat
and
fsubr
or
mov
fisttp
mov
adc
lds
mov
sahf
stos
cmp
xor
movs
dec
inc
scas
sub
sub
dec
jb
leave
and
scas
shl
fisttp
push
les
inc
xor
mov
mov
mov
jmp
cli
sub
push
mov
scas
(bad)
es
xchg
mov
lods
cwde
adc
das
test
movs
pop
dec
dec
loop
push
stos
and
jno
xchg
lea
call
or
or
pop
xor
pushf
sbb
dec
mov
aad
xor
in
jnp
mov
retf
mov
add
movs
and
jb
jge
push
mov
cmps
dec
mov
and
jmp
and
push
rcr
iret
aam
test
mov
jge
xchg
dec
sub
mov
cli
sbb
mov
loopne
out
clc
or
fdiv
jb
and
mov
aaa
inc
pop
sbb
dec
xchg
in
aaa
add
xchg
out
repnz
fistp
into
dec
int
in
call
mov
pop
adc
pop
popa
test
mov
jmp
jg
imul
or
mov
sbb
jle
hlt
addr16
movs
call
xor
adc
push
out
js
jg
jp
push
and
mov
inc
std
pop
in
adc
lock
push
push
inc
xchg
and
and
in
pop
adc
imul
fcom
xchg
fcmovu
sub
xor
lahf
jge
dec
jmp
inc
inc
in
xchg
sub
xchg
push
js
pop
nop
leave
mov
push
push
data16
cmps
or
fs
or
gs
daa
(bad)
ds
ja
int
push
pop
call
test
jmp
call
les
sbb
push
inc
xchg
and
arpl
jge
stos
sub
std
js
loope
imul
jg
sub
(bad)
and
loope
pop
dec
imul
cmps
mov
add
pop
std
mov
(bad)
cmp
cli
inc
pushf
inc
aas
sub
das
pop
and
mov
and
call
arpl
jbe
xor
daa
imul
out
cmp
lods
popa
inc
or
and
or
(bad)
jp
bnd
xor
out
or
xor
inc
aaa
pop
inc
aas
mov
push
jb
ins
pusha
cmps
arpl
sbb
(bad)
and
xchg
inc
sbb
int3
adc
cld
repz
aas
(bad)
cld
repz
aas
(bad)
cld
pop
add
cmc
(bad)
pop
push
mov
add
add
dec
inc
dec
inc
scas
inc
pusha
or
add
add
add
(bad)
(bad)
inc
add
add
add
add
add
add
jns
je
ins
cs
jb
ja
outs
addr16
push
gs
imul
xor
xor
inc
jne
je
jb
cmp
jb
ins
sub
push
jne
ins
imul
imul
bound
xor
data16
xor
fs
add
adc
gs
cs
jb
ja
outs
addr16
imul
add
popa
je
pop
add
add
add
add
add
lsl
add
mov
mov
inc
or
add
or
add
add
add
add
or
add
add
pusha
outs
rol
add
add
inc
dec
inc
add
mov
or
popa
add
jo
pop
jae
add
ret
add
push
ret
add
outs
test
add
adc
inc
inc
push
pop
inc
in
rol
loopne
cmps
mov
cmp
into
popa
cmp
dec
ja
(bad)
test
shl
cmps
mov
fimul
repnz
lahf
pop
add
mov
push
xlat
or
push
lods
sbb
xchg
push
mov
(bad)
cdq
sub
xor
(bad)
jmp
cmps
adc
(bad)
cli
jne
clc
lods
mov
inc
rcr
and
jmp
jo
pop
rcr
lods
cs
(bad)
pop
fsub
mov
push
jle
pop
pushf
jnp
mov
test
push
push
inc
cmp
movs
mov
jp
push
jge
adc
ds
push
dec
mov
push
pushf
sbb
sbb
xor
pop
jne
stc
in
pushf
arpl
xchg
aas
repz
cld
mov
sbb
inc
gs
cs
fist
repnz
retf
lahf
and
mov
cdq
and
mov
ins
jno
out
movs
std
push
mov
cs
push
scas
and
repnz
cmps
ror
xchg
mov
and
fdivr
out
pop
mov
sub
lds
int3
dec
push
sbb
fnsave
movs
fidivr
std
or
lods
adc
and
xchg
mul
int
outs
cld
push
sub
jg
neg
pop
inc
stos
dec
(bad)
sbb
popf
inc
jge
xor
call
add
mov
mov
push
inc
cmps
pop
and
lea
dec
sub
lock
push
out
sbb
pop
jns
ret
das
idiv
jno
jge
imul
iret
jmp
xchg
add
push
stos
das
jmp
and
lahf
add
mov
pop
mov
lods
jp
fcomp
rcr
ret
mov
fnstcw
ror
dec
sub
adc
cmp
inc
test
xchg
aaa
test
sub
stos
sahf
jle
cmp
movs
hlt
ins
out
xchg
cmp
adc
cmp
cwde
arpl
sub
mov
inc
jmp
sbb
das
jmp
inc
mov
out
mov
cmp
add
mov
dec
in
adc
pop
adc
pop
cmp
nop
and
dec
call
jo
lods
sbb
adc
mov
ret
out
cmovle
sub
test
into
pop
sub
ffree
adc
ins
pop
repz
push
imul
mov
sub
cwde
lods
push
(bad)
fbstp
pop
test
shl
sub
mov
int3
lea
aas
jno
movs
or
jmp
lock
call
icebp
test
mov
mov
push
pop
push
push
cwde
popf
xor
cli
jle
popf
stos
imul
mov
inc
add
add
add
and
sbb
sti
mov
test
mov
cmp
or
mov
sbb
int
fdiv
fisubr
rol
sub
gs
repnz
bound
inc
test
pop
out
or
stos
jbe
into
push
pop
gs
inc
mov
(bad)
(bad)
popf
jbe
stc
in
pop
ja
pop
hlt
idiv
sbb
lock
jle
and
xchg
pusha
push
(bad)
sbb
test
push
int
cmp
jl
mov
mov
popf
push
dec
rol
push
retf
xlat
mov
(bad)
push
lea
dec
(bad)
jge
fadd
inc
shr
fimul
jge
pop
bound
dec
xchg
movs
fld
pop
adc
(bad)
fsubr
cmp
xor
pop
rcl
lods
icebp
sub
jg
mov
lahf
inc
(bad)
jns
leave
ins
or
imul
sbb
xor
sbb
cmp
mov
je
(bad)
out
push
and
inc
mov
sbb
arpl
ret
add
test
add
pop
push
outs
outs
outs
pop
leave
daa
cmps
and
pop
push
adc
loopne
(bad)
push
mov
cdq
or
adc
stos
and
retf
jae
std
xchg
push
aaa
xor
aad
inc
cmp
adc
cmp
ds
test
xor
and
xor
pushf
mov
dec
outs
sbb
jns
jp
cmp
lahf
call
push
fsub
push
fucomi
js
jle
js
lock
push
xchg
push
and
xchg
lock
loop
outs
jecxz
or
dec
mov
mov
fsubr
inc
aad
lods
push
aaa
iret
mov
push
or
and
or
push
jg
mov
outs
and
push
jmp
test
jbe
stc
fdivr
inc
repnz
xchg
mov
mov
push
repnz
jbe
or
test
inc
sar
cmp
in
jmp
mov
in
xor
and
sbb
pop
cmps
ret
jp
pusha
dec
cmp
(bad)
iret
shl
sbb
out
leave
mov
lahf
jne
shl
or
cli
retf
jp
pusha
aas
scas
loope
lahf
lahf
cli
lds
jae
in
inc
jmp
(bad)
retf
adc
pop
mov
jb
(bad)
imul
xlat
gs
xor
loop
frstor
aam
mov
iret
repz
mov
hlt
clc
inc
rol
xchg
lock
push
call
test
adc
inc
sub
cs
fistp
retf
add
mov
xchg
(bad)
imul
and
lea
nop
int
movs
and
jae
xchg
loop
jl
add
jge
and
jns
imul
cmc
clc
cmc
add
rcr
(bad)
test
cmp
push
in
scas
xchg
(bad)
repnz
ror
pop
jno
jmp
and
ficomp
sti
jmp
fsub
jbe
movs
or
pop
and
and
push
lea
adc
and
and
nop
pushf
push
sub
push
add
xor
ret
mov
add
fwait
xchg
and
arpl
scas
es
test
jge
add
ins
push
sbb
jg
call
mov
sub
out
cmp
mov
cmc
and
aam
cmps
into
fdivr
scas
mov
call
loopne
ds
inc
sbb
les
adc
stos
mov
shl
cmp
or
arpl
cmc
std
sbb
xor
(bad)
cld
call
jp
aam
xchg
add
out
push
cmp
fcomip
xchg
rcr
movs
xchg
mov
scas
add
sub
aad
shr
jle
(bad)
out
sub
aas
jle
pop
pop
dec
pop
inc
hlt
sub
xchg
jne
(bad)
sbb
lods
mov
das
xor
sub
sub
retf
fisttp
inc
ret
jno
(bad)
daa
arpl
ror
(bad)
lods
ss
jnp
mov
sbb
dec
popf
pop
(bad)
adc
or
pop
lds
mov
ins
sti
rcr
imul
leave
bound
mul
leave
mov
push
(bad)
fsub
mov
stos
mov
std
sbb
(bad)
sub
call
pop
add
cs
arpl
push
pop
(bad)
or
pushf
stos
test
adc
out
adc
jne
ins
inc
and
in
xor
rol
loop
mov
xor
sub
jb
pop
aad
pop
xor
and
push
fst
pop
call
test
adc
(bad)
cld
dec
aaa
jge
xor
jle
push
push
sbb
sub
push
sar
inc
popf
dec
lahf
sahf
lock
mov
enter
das
jge
lds
or
not
sub
out
into
mov
push
hlt
std
pushf
inc
sub
push
jge
jnp
jae
jecxz
pop
mov
cmps
aad
mov
in
jb
inc
rcr
arpl
xlat
cwde
into
sahf
push
and
mov
xchg
sub
lods
mov
int
xor
mov
push
lea
ja
push
pop
int3
jg
push
jmp
aam
je
ret
test
jne
jmp
scas
push
mov
stos
ja
cdq
sub
stos
push
aas
sbb
jecxz
lock
sbb
js
imul
inc
fnstenv
lods
mov
retf
xor
or
icebp
test
push
fiadd
cmps
aas
ret
leave
lock
inc
push
inc
xlat
sbb
push
add
xchg
repz
xor
adc
cmp
cmp
and
cdq
rep
add
int
push
cmp
pushf
(bad)
mov
cmp
pop
cmp
sub
and
out
xchg
push
shl
test
in
mov
mov
push
inc
ret
pop
cs
and
push
movs
int3
stos
rcl
in
mov
push
pop
mov
nop
xchg
inc
retf
pop
or
ret
cmps
fcmovnb
cli
push
xchg
loop
pop
xor
xchg
js
xchg
cmp
and
push
arpl
out
jbe
sbb
sahf
sub
add
push
mov
mov
fild
adc
sbb
test
retf
rcl
mov
popa
cmp
mov
js
pusha
movs
clc
add
or
jmp
sbb
sub
push
mov
pop
pop
push
rcr
sbb
out
aas
scas
mov
xchg
call
gs
dec
and
enter
je
cmp
mov
test
push
xor
mov
stc
mov
jmp
rcr
in
adc
jbe
dec
push
in
rcl
pop
mov
fs
mov
mov
sub
adc
and
pop
or
and
inc
push
(bad)
pop
movs
fild
xchg
pop
adc
jno
(bad)
in
cs
mov
mov
adc
xchg
std
xor
aas
cmp
jge
(bad)
lahf
movs
push
mov
cld
bound
fwait
sbb
push
fcom
pop
shr
mov
mov
test
fdiv
and
push
ja
mov
pop
daa
push
xchg
(bad)
fdivr
cmp
movs
and
adc
push
xchg
inc
add
outs
xor
inc
pop
mov
push
mov
out
stos
mov
jnp
jmp
adc
pop
cmp
inc
push
pushf
lahf
jae
xor
adc
or
xor
sbb
js
jno
fs
imul
inc
pop
clc
add
adc
dec
jb
jb
les
aam
movs
dec
fidiv
sar
retf
lods
jmp
jno
ret
std
loope
mov
and
ja
cmp
mov
into
lods
mov
hlt
mov
lock
in
imul
not
out
in
lahf
popf
in
jnp
ror
lahf
inc
jne
cdq
inc
mov
mov
or
test
pop
lock
push
stos
cs
mov
or
aas
or
sbb
ds
xor
mov
fistp
and
ds
ja
push
mov
jmp
and
jne
icebp
in
dec
out
or
inc
xchg
retf
mov
pop
scas
mov
cmp
pop
mov
daa
pminub
push
jecxz
jecxz
(bad)
gs
inc
enter
cmp
cli
adc
test
jge
add
pop
dec
stos
inc
jp
and
es
xchg
jmp
or
cld
pop
in
les
bound
int3
xor
ret
jge
xchg
aad
sub
sub
mov
pop
adc
xor
movs
mov
(bad)
(bad)
jmp
mov
mov
jnp
or
add
scas
rcl
stos
lea
fwait
mov
rcl
jecxz
mov
in
push
stos
push
push
adc
(bad)
fcomp
out
ret
cmps
dec
popa
adc
(bad)
loopne
call
push
add
inc
(bad)
push
(bad)
pop
pop
mov
ret
lea
je
in
cmp
xchg
out
and
test
ja
sbb
xchg
jmp
sahf
rcl
add
out
scas
and
cmps
stos
std
out
push
jle
cmp
mov
nop
pushf
mov
cmp
int3
or
add
mov
xor
pop
ja
movs
inc
lea
pop
dec
fwait
jp
cmp
movs
add
repz
inc
push
mov
neg
dec
inc
push
inc
lock
daa
add
icebp
cmps
xor
cmp
out
lds
jno
fs
leave
push
ret
pop
stos
arpl
aam
(bad)
mov
je
adc
addr16
scas
enter
dec
xchg
mov
mov
ret
repnz
cmps
cmp
adc
scas
push
ret
(bad)
sti
mov
outs
call
dec
jmp
jmp
lds
sub
imul
xchg
retf
jl
leave
add
xchg
adc
add
sub
mov
call
jecxz
loope
outs
cmps
mov
fidivr
mov
aas
call
rcr
cli
add
pop
xor
fsubr
dec
scas
xchg
jns
xchg
jl
xor
mov
int
push
fiadd
xchg
int3
fimul
mov
and
jge
jp
ins
popa
outs
js
adc
loope
daa
repnz
jno
mov
test
movs
mov
and
ss
mov
call
mov
call
data16
std
inc
mov
push
xchg
inc
test
pop
fcomp
xor
mov
psubusw
pushf
and
jmp
icebp
enter
cs
or
ja
in
ror
rcl
loope
into
push
jae
sbb
(bad)
in
push
xor
and
adc
daa
or
xchg
scas
and
call
xor
push
dec
and
leave
adc
sbb
sub
adc
jbe
shl
call
je
mov
gs
sti
in
sar
out
lea
test
retf
xchg
adc
mov
dec
push
mov
push
xlat
movs
jne
jle
out
cmps
xchg
inc
jg
pop
cmp
nop
jno
lock
mov
inc
scas
fisubr
sbb
ret
sub
pop
adc
pop
nop
adc
mov
inc
and
retf
xchg
(bad)
xchg
cmp
xor
popa
cmps
mov
jns
mov
(bad)
push
cmp
push
jg
push
mov
out
xor
adc
inc
das
outs
sbb
mov
shl
mov
adc
(bad)
jo
dec
(bad)
mov
jge
xchg
push
or
inc
(bad)
sbb
push
out
cdq
xchg
cld
rcr
sbb
add
xor
test
jl
scas
sbb
add
nop
cmp
add
pusha
or
mov
imul
fsubr
sub
test
cmp
out
mov
hlt
test
add
(bad)
inc
jl
fimul
in
dec
or
fistp
and
shl
call
jbe
in
mov
pop
scas
jns
sub
jo
arpl
cmps
test
xor
add
sbb
pop
in
jecxz
mov
ins
sub
xor
es
mov
xchg
lods
cdq
fstp
jb
(bad)
icebp
out
xor
cmp
push
add
jge
pushf
adc
(bad)
push
sbb
dec
repz
jns
cmp
iret
jmp
push
cwde
mov
jmp
retf
xor
ss
ror
mov
mov
dec
movs
xchg
cmps
dec
(bad)
adc
sub
leave
dec
cli
xchg
push
adc
ds
mov
and
daa
ja
(bad)
(bad)
pusha
imul
das
popa
pop
lock
jle
mov
int
cdq
push
retf
jb
mov
sub
push
pop
push
dec
movs
js
xor
pshufw
push
ffreep
sti
inc
ss
push
pop
dec
adc
in
outs
fidiv
or
icebp
pop
xlat
mov
call
pop
jl
lock
mov
(bad)
xor
leave
mov
daa
test
not
scas
or
xor
out
cmps
and
jo
mov
and
or
cli
out
mov
lea
ins
mov
mov
int3
and
gs
movs
sub
ja
mov
mov
jecxz
sbb
push
repnz
rcl
or
dec
inc
jg
ds
mov
movs
je
xor
jo
bound
cmp
xchg
sbb
ins
in
mov
popf
outs
retf
and
sub
shl
rcl
push
and
retf
lahf
repz
add
xchg
rol
cmps
daa
xor
or
outs
adc
out
ins
popa
or
pop
leave
rcl
ds
in
adc
lock
(bad)
cld
out
(bad)
stc
iret
jg
repz
add
pop
inc
mov
and
add
dec
inc
scas
inc
pusha
or
add
add
add
(bad)
(bad)
inc
add
add
add
add
add
add
jns
je
ins
cs
jb
ja
outs
addr16
push
gs
imul
xor
xor
inc
jne
je
jb
cmp
jb
ins
sub
push
jne
ins
imul
imul
bound
xor
data16
xor
fs
add
adc
gs
cs
jb
ja
outs
addr16
imul
add
popa
je
pop
add
add
add
add
add
lsl
add
ret
add
mov
inc
or
add
or
add
add
add
add
or
add
add
pusha
outs
rol
add
add
inc
dec
inc
add
mov
or
popa
add
jo
pop
jae
add
ret
add
push
ret
add
outs
test
add
adc
inc
push
pop
inc
in
aam
aas
fmul
scas
int
sbb
pushf
jmp
dec
ja
out
lea
popa
mov
jmp
adc
leave
leave
push
idiv
jg
mov
pop
icebp
push
add
sub
mov
lea
sbb
xlat
outs
jmp
nop
shl
pop
or
and
(bad)
frndint
popa
fisub
pop
add
cmp
pop
dec
dec
or
dec
mov
(bad)
sub
stc
popf
leave
(bad)
fwait
cld
xchg
sbb
in
mov
sbb
mov
mov
cmp
in
or
ja
shl
xor
pop
push
inc
mov
ins
mov
or
lds
cdq
jne
dec
imul
and
fdiv
imul
xor
popa
xor
xchg
stos
retf
aam
pop
aam
mov
push
or
cmc
pop
daa
mov
push
push
shr
ins
xor
movs
push
cwde
punpcklwd
data16
jecxz
cmp
xor
push
sbb
retf
fwait
jmp
in
retf
xchg
(bad)
xchg
fstp
popa
movs
ja
ror
movs
mov
sti
and
xchg
pop
inc
mov
pop
ins
fmul
rol
adc
and
cmp
adc
mov
sar
mov
mov
sbb
xor
fwait
ds
js
xor
outs
inc
push
adc
inc
fdecstp
mov
movs
das
cmc
retf
xchg
fistp
mov
push
mov
xor
out
lds
fbld
adc
dec
test
sub
pop
addr16
jne
gs
dec
xor
or
in
mov
cmps
mov
loope
out
fldenv
push
dec
add
jno
rcr
gs
scas
into
(bad)
pop
aam
xchg
pop
xchg
ja
push
pop
dec
mov
cs
pop
mov
sti
mov
add
pop
fwait
xor
imul
sub
adc
ret
mov
xchg
fwait
std
or
xchg
cmps
lods
test
ja
jo
adc
daa
xor
je
and
repz
fdivp
scas
sub
mov
push
out
adc
mov
test
mov
jb
sahf
pop
inc
sbb
lahf
mov
repnz
xor
pop
pop
pusha
mov
repnz
jae
push
stos
jne
scas
mov
sahf
cmp
pop
pop
lea
stos
xchg
cwde
xchg
add
fadd
push
retf
jbe
push
pop
cs
call
cmps
cmp
out
mov
jl
retf
cmp
mov
iret
adc
xchg
mov
jae
and
cmp
aam
ins
out
sar
push
enter
punpcklbw
mov
push
lds
iret
inc
call
(bad)
mov
cmp
adc
push
out
scas
mov
jne
and
dec
aas
lea
call
retf
scas
xchg
xchg
rol
adc
imul
pop
mov
push
ret
sbb
neg
adc
and
ja
push
xor
test
mov
repz
add
lods
out
out
sub
out
fiadd
std
int
and
fucom
mov
dec
adc
sti
in
sti
add
lods
mov
xchg
aas
sub
int3
or
retf
xchg
jo
cmc
xor
jne
aad
adc
pop
push
repnz
data16
sub
hlt
xchg
jecxz
inc
or
int3
call
mov
stos
(bad)
out
mov
dec
jnp
jmp
sub
push
pop
mov
cmc
cmp
and
(bad)
out
dec
loopne
ds
push
inc
sbb
dec
xor
inc
push
cmc
sub
pop
and
mov
cld
rol
push
adc
xchg
call
test
setno
neg
sbb
jl
scas
xchg
movs
stos
fwait
inc
outs
mov
test
loope
hlt
test
test
xchg
inc
mov
inc
push
or
pop
and
jecxz
rol
xchg
cmp
jo
cdq
or
or
jmp
leave
jnp
pinsrw
pop
pop
xchg
dec
mov
jo
lods
jmp
dec
mov
mov
jno
mov
add
scas
mov
xor
inc
enter
cmp
cmp
sbb
sub
jb
fldenv
jl
push
std
iret
dec
ds
call
je
xchg
jb
jl
cmp
xchg
mov
cmp
jge
mov
(bad)
and
lods
pop
rcl
popa
adc
jge
stos
ins
shl
or
mov
and
lods
shl
and
cmc
xchg
out
lods
and
clc
int3
xchg
mov
cmps
inc
add
popf
cmps
popf
gs
shl
sti
pop
(bad)
fnsave
movs
cmp
mov
cld
loop
stos
cwde
or
lods
adc
mov
bound
or
mov
out
loop
sbb
imul
ds
retf
scas
test
dec
outs
and
jmp
sub
cmp
mov
les
xchg
ret
sar
push
inc
movs
add
dec
imul
fisub
cli
sub
pop
push
add
ins
in
test
cmc
sub
jo
(bad)
fiadd
jae
push
jo
mov
cmc
cmp
mov
imul
ja
pop
cmp
retf
loope
mov
jl
mov
pop
mov
push
pop
adc
out
shr
(bad)
dec
inc
or
fwait
aad
adc
mov
leave
jo
sahf
adc
pop
add
int
lds
xchg
scas
pop
mov
adc
lods
inc
or
mov
push
mov
cmp
int
repz
and
sbb
in
inc
jmp
or
mov
popf
mov
movs
fild
(bad)
enter
mov
outs
std
inc
dec
mov
or
mov
rcl
cmp
movs
cmp
(bad)
sub
inc
and
mov
aam
shl
sbb
(bad)
daa
and
pop
sub
ins
jmp
addr16
and
adc
xor
outs
out
mov
mov
cmp
xor
adc
dec
enter
jb
jns
bound
fbld
neg
in
mov
test
mov
in
adc
or
aaa
call
icebp
rol
das
push
loop
ret
push
sbb
xor
xchg
sbb
xchg
push
popa
push
xchg
aaa
jl
mov
fst
dec
call
sar
rcl
jns
sbb
jle
ins
sub
or
ffree
xlat
and
div
jns
movs
not
sbb
aaa
and
jg
cmps
xor
aaa
cmp
enter
sub
xchg
pushf
jmp
cdq
repz
adc
cdq
rcr
cmps
cs
pop
push
repz
idiv
pavgb
in
mov
xchg
lea
adc
mov
jb
icebp
xchg
pop
mov
add
nop
hlt
xor
stos
xchg
dec
cld
mov
dec
xchg
movs
scas
inc
pop
les
nop
or
ror
sub
pusha
cmps
shl
jns
mov
out
pushf
clc
sbb
cdq
pop
rcr
adc
jnp
retf
dec
nop
inc
stos
jp
iret
mov
popf
xor
lock
inc
cmps
(bad)
je
enter
pop
mov
sbb
push
aaa
out
(bad)
xchg
test
(bad)
push
mov
in
dec
in
push
push
dec
xor
pop
jo
das
dec
(bad)
nop
mov
jmp
inc
ficom
es
jp
loopne
adc
pop
call
cmp
lds
scas
mov
outs
mov
add
popa
in
xchg
jecxz
or
xchg
xchg
loopne
repz
sub
bound
push
repnz
daa
dec
push
or
mov
scas
push
jmp
fbstp
bnd
aas
(bad)
sbb
std
scas
enter
add
xchg
cmp
sub
pop
cmp
arpl
sub
push
xlat
adc
xor
mov
pushf
sub
inc
test
push
ins
jmp
retf
mov
clc
mov
dec
cmp
(bad)
repz
fsub
mov
mov
cmp
or
out
sbb
jge
dec
inc
adc
in
neg
sub
jmp
es
aas
mov
sbb
mov
cld
ins
cmp
ret
cmps
fcomip
mov
stos
mov
vcvttsd2si
pop
sub
rol
retf
clc
addr16
leave
js
pop
loop
mov
xchg
icebp
cmc
ficom
fidiv
and
int3
or
mov
mov
cwde
mov
cdq
xor
je
jle
sub
into
test
add
lods
icebp
sbb
into
pushf
mov
push
ret
push
adc
clc
jno
cmp
add
int3
or
jmp
jecxz
in
jle
add
xchg
test
ins
ficom
dec
retf
sti
clc
cmp
mov
je
call
rcr
mov
outs
jmp
mov
xchg
cmc
leave
pop
mov
in
dec
adc
sbb
mul
retf
mov
sbb
push
hlt
xchg
in
push
dec
out
aad
inc
push
aam
loop
xchg
pusha
fiadd
xor
movs
jnp
inc
push
sahf
push
mov
test
(bad)
pop
lods
fs
fimul
scas
stc
lods
sub
sub
mov
mov
dec
mov
call
(bad)
aas
inc
xchg
cld
call
adc
dec
imul
push
sbb
jle
jmp
mov
loope
and
cmp
outs
inc
nop
push
mov
inc
enter
ins
bound
cmp
outs
adc
loop
mov
lods
out
mov
ret
cmps
fsubr
pop
jmp
xor
movs
dec
scas
pop
pop
push
popa
jmp
adc
sub
push
ret
cmp
scas
push
push
sbb
stos
pop
cmps
adc
cwde
aad
aam
lock
push
jmp
pop
or
int3
sbb
hlt
cdq
pop
out
adc
xlat
mov
imul
rcl
cmp
popf
or
outs
sti
push
stc
neg
retf
pop
clc
in
sbb
fstp
add
aaa
test
dec
icebp
cmp
or
push
repz
xchg
mov
test
cmp
out
mov
xchg
pop
(bad)
ror
mov
and
call
add
fld
dec
jecxz
jae
cmps
mov
mov
jns
push
push
data16
outs
push
xchg
mov
xor
jg
pop
dec
stos
pop
aas
cmp
or
es
loope
(bad)
jne
rcl
in
iret
pop
imul
adc
inc
into
mov
pop
push
sub
push
sti
stos
adc
ds
not
test
outs
cdq
mov
xchg
pop
leave
test
push
jns
pop
retf
nop
mov
(bad)
out
or
xchg
ss
mov
cwde
test
mov
dec
(bad)
out
push
cs
mov
cmps
push
out
xchg
sar
push
rcr
fsin
xor
mov
pop
mov
mov
cdq
sub
jp
enter
mov
sub
xchg
popa
xchg
sub
stc
ins
out
pushf
pusha
pushf
inc
mov
mov
enter
(bad)
leave
clc
shl
cmps
xor
in
xchg
and
cmps
xchg
sub
lods
jg
sub
mov
test
sub
xor
sbb
test
dec
iret
fs
arpl
sbb
push
push
xor
jns
mov
loop
cdq
adc
xor
sub
cdq
retf
das
int3
push
out
sbb
fld
imul
fsubr
add
iret
inc
arpl
pushf
add
mov
popf
or
dec
pop
test
or
(bad)
push
cmp
lea
gs
mov
jae
xor
fcomp
mov
out
retf
rol
pop
enter
push
sub
es
out
dec
sub
and
inc
or
sar
vorpd
in
sub
pop
das
cmps
jmp
cmp
push
mov
test
mov
push
es
fisttp
call
xor
push
mov
mov
xchg
adc
gs
hlt
push
mov
lods
push
mov
mov
in
or
mov
push
push
xchg
push
add
mov
mov
arpl
and
push
xor
add
and
mov
mov
mov
and
pop
sbb
cmp
aad
and
mov
lods
xor
mov
lods
mov
sbb
cmp
sbb
mov
xor
push
push
bound
dec
outs
mov
dec
inc
std
dec
retf
and
movs
xchg
dec
loop
push
fwait
xor
div
inc
cmp
mov
or
push
sbb
push
sbb
add
hlt
nop
in
outs
mov
sti
jmp
dec
(bad)
cmp
mov
mov
cmc
retf
dec
inc
cli
mov
mov
lods
fadd
push
add
repz
inc
cs
fsub
xor
outs
fst
dec
icebp
push
mov
xor
movs
(bad)
popa
sar
xlat
ret
adc
jmp
adc
jmp
rcr
mov
cmp
cmp
scas
in
sbb
xchg
jae
xchg
loop
sti
and
cmp
mov
aam
retf
dec
test
push
jge
aaa
retf
fdivr
xchg
push
call
mov
inc
lahf
dec
and
into
in
sub
xchg
bound
stos
adc
adc
cwde
int
mov
and
je
adc
leave
js
and
push
sub
sar
jle
lods
adc
xor
dec
je
pop
cmp
adc
nop
add
push
lahf
mov
(bad)
lea
rcl
fadd
push
push
jbe
sbb
repz
dec
mov
cli
dec
push
dec
pop
movs
jmp
adc
mov
xor
push
test
sbb
push
in
push
lea
clc
mov
and
xor
xor
cwde
xchg
mul
jnp
cmp
and
or
mov
inc
in
aaa
and
es
xor
jns
pop
xor
call
int
rcr
or
iret
lods
jae
dec
fsub
lds
sub
mov
shr
or
mov
xchg
ins
jne
or
sub
loop
inc
movs
mov
fsub
bound
xor
test
or
loop
hlt
repnz
sbb
sub
gs
fiadd
adc
out
jnp
mov
enter
mov
mov
and
push
in
ret
and
push
jmp
arpl
xchg
nop
cmps
sbb
push
popf
mov
mov
imul
cli
stos
retf
add
ins
mov
aaa
cmp
ds
push
imul
pop
inc
inc
push
int
imul
mov
ret
inc
cmp
jg
dec
jge
fstp
jp
int3
jb
dec
test
adc
lahf
mov
hlt
daa
xchg
mov
not
aad
pusha
sti
mov
scas
xlat
pushf
aam
sub
out
retf
lods
dec
jne
pop
daa
data16
paddusw
jg
es
repnz
shl
mov
ds
ins
shl
sti
(bad)
mov
push
cmps
stc
inc
add
sub
mov
call
mov
mov
mov
and
sbb
inc
push
ror
cmp
push
inc
and
or
push
cdq
daa
adc
ret
out
or
(bad)
xor
fsubr
fnstsw
popf
push
(bad)
fldcw
jnp
xchg
arpl
or
cmp
add
sub
pop
sub
shl
and
xchg
mov
mov
repz
nop
dec
dec
leave
add
pop
(bad)
xchg
sar
and
mov
sbb
cmc
jle
es
adc
mov
xchg
dec
add
and
inc
idiv
mov
sub
fimul
and
sub
std
out
push
mov
je
iret
pop
sub
add
nop
leave
xor
fld
adc
cmps
xchg
ret
xchg
fidivr
sar
and
inc
dec
xchg
push
out
sub
je
jge
or
mov
lods
es
stc
out
jg
stc
out
jg
pop
add
pop
(bad)
sahf
or
add
add
dec
inc
dec
inc
scas
inc
pusha
or
add
add
add
(bad)
(bad)
inc
add
add
add
add
add
add
jns
je
ins
cs
jb
ja
outs
addr16
push
gs
imul
xor
xor
inc
jne
je
jb
cmp
jb
ins
sub
push
jne
ins
imul
imul
bound
xor
data16
xor
fs
add
adc
gs
cs
jb
ja
outs
addr16
imul
add
popa
je
pop
add
add
add
add
add
lsl
add
mov
mov
inc
or
add
or
add
add
add
add
or
add
add
pusha
outs
rol
add
add
inc
dec
inc
add
mov
or
popa
add
jo
pop
jae
add
ret
add
push
ret
add
outs
test
add
adc
inc
inc
push
pop
inc
in
rol
loopne
mov
dec
dec
fdiv
ret
les
jecxz
cdq
out
into
jmp
jmp
les
enter
adc
movs
fiadd
ror
cmp
pop
test
inc
pop
cmp
and
xchg
jmp
xor
lods
xchg
(bad)
or
es
cli
xor
bswap
cmps
in
xor
(bad)
mov
(bad)
fwait
ja
mov
mov
add
sbb
imul
mov
out
dec
push
and
and
push
fwait
cli
mov
xor
jle
xchg
inc
adc
jno
xlat
jnp
pop
sub
aaa
shl
dec
int
(bad)
dec
inc
xor
ret
cli
aaa
clc
xchg
retf
outs
sub
jne
out
bound
lahf
loopne
push
fs
pop
std
loope
adc
fimul
mov
sub
pop
ins
fisttp
(bad)
xor
jb
movs
loop
sbb
lock
mov
jmp
mov
pop
popf
sti
outs
push
jmp
push
dec
and
xchg
imul
data16
les
inc
xchg
arpl
(bad)
out
(bad)
mov
imul
mov
or
out
mov
or
ins
add
mov
into
mov
retf
cld
dec
fistp
or
inc
mov
test
shr
ficomp
jg
leave
mov
jmp
and
fs
cmp
jmp
jg
(bad)
xor
in
xchg
arpl
or
mov
cmps
or
in
neg
ins
cld
mov
cmp
inc
dec
daa
mov
pop
pushf
lods
sbb
in
aam
loop
lods
les
in
test
cmc
mov
mov
int3
add
hlt
gs
or
jo
(bad)
lahf
rol
enter
loopne
mov
jno
dec
mov
push
imul
jne
push
or
mov
fidiv
mov
(bad)
jle
cmc
mov
ret
dec
out
push
mov
leave
push
mov
lea
clc
je
or
pop
push
mov
sar
mov
enter
jmp
adc
push
jae
ss
pushf
push
jne
mov
jbe
scas
mov
xchg
sbb
out
sbb
mov
arpl
mov
and
fdivrp
retf
out
sar
add
jb
push
mov
call
pop
add
(bad)
ins
xchg
sub
mov
pop
sbb
gs
mov
out
in
ror
outs
test
adc
jmp
fisttp
sbb
cmp
or
jg
sub
sub
sub
in
pop
(bad)
pop
sbb
test
jl
movs
adc
add
pusha
push
inc
ret
leave
pusha
xor
mov
dec
retf
pop
movs
mov
out
loop
cmc
es
int
adc
xor
jbe
pop
dec
data16
or
mov
jb
add
add
test
dec
es
sub
mov
cmc
jecxz
push
imul
ds
shl
xchg
jmp
mul
sub
mov
sub
fcmovnbe
dec
scas
xchg
xchg
in
jnp
es
imul
cli
fwait
lahf
mov
neg
iret
jp
ret
xor
dec
ds
fidiv
gs
xor
lahf
call
cmp
pop
ins
sbb
mul
mov
xchg
ds
mov
int3
mov
aas
sbb
out
sub
push
add
clc
sbb
add
jp
mov
mov
adc
xor
or
shl
mov
or
test
push
cmp
icebp
sbb
adc
int3
retf
sub
jl
xchg
pop
mov
cmp
inc
dec
hlt
push
cmc
call
xchg
sbb
gs
cld
cs
movs
add
outs
mov
add
sti
lahf
lods
pop
(bad)
jp
pop
mov
mov
int
loope
cdq
ins
rol
inc
ja
adc
mov
hlt
inc
cmp
inc
xor
out
or
in
dec
stos
std
add
and
stc
ret
sub
cdq
pop
movs
cmps
cmp
out
cmps
sbb
xlat
shl
test
adc
mov
dec
imul
fcomp
mov
in
mov
ror
mov
fs
fmul
enter
rcr
stos
into
sti
xchg
outs
out
fmul
aaa
push
push
mov
dec
adc
xchg
mov
pop
dec
in
add
sbb
clc
aam
jbe
mov
jb
or
fcomip
mul
dec
(bad)
sub
shl
dec
je
lods
xchg
sub
hlt
in
dec
icebp
inc
or
mov
retf
dec
daa
stc
inc
cdq
lods
int
add
sysret
jno
aad
arpl
cmp
js
imul
xchg
lds
cld
cmp
pop
adc
(bad)
add
ret
xor
jne
mov
mov
lds
xlat
xchg
lahf
push
sub
inc
scas
ret
or
lahf
mov
lds
push
jmp
dec
cmc
(bad)
daa
cmc
stos
stc
lock
sbb
xchg
es
call
sub
std
cmp
cdq
add
stc
pusha
jecxz
and
test
es
mov
arpl
xchg
and
outs
push
dec
fadd
cmp
into
cmc
cli
retf
jns
mov
pop
jae
cld
and
mov
lods
adc
xchg
and
adc
addr16
jl
popf
sub
daa
sti
imul
pop
imul
mov
(bad)
mov
and
(bad)
push
jecxz
cmc
add
pop
xchg
pop
out
sti
push
mov
mov
inc
fnstenv
fwait
push
push
xor
adc
aas
push
ret
(bad)
in
mov
dec
stc
jne
retf
cli
mov
ins
push
popa
daa
pop
jp
or
lahf
dec
or
xchg
retf
pop
jp
or
sbb
cli
popa
mov
or
out
or
stos
mov
call
sti
int
cmp
pop
and
mov
pop
xchg
leave
rcl
push
js
xor
jae
call
imul
jno
sar
retf
and
ja
clc
mov
sbb
sub
xchg
nop
mov
xor
ret
inc
es
adc
cdq
outs
xor
fcomp
imul
xchg
pop
test
fmul
in
aad
and
sbb
mov
xchg
outs
inc
adc
je
inc
and
dec
mov
(bad)
mov
fwait
xor
jns
js
cli
imul
sbb
(bad)
push
(bad)
into
ds
and
mov
icebp
and
(bad)
and
dec
or
test
ret
cs
adc
mov
daa
dec
(bad)
ds
fisub
mov
sub
stc
xchg
xchg
aam
jecxz
xchg
in
cmp
iret
mov
cmp
sbb
pushf
pop
or
cwde
and
aas
sbb
xor
jbe
dec
push
in
mov
rcr
sbb
jno
sahf
int
adc
dec
lahf
push
sbb
or
test
stos
dec
dec
shl
dec
inc
leave
mov
cmp
mov
xchg
mov
fcom
push
and
lds
jmp
fnsave
cld
xor
mov
mov
push
ss
dec
jmp
jmp
es
push
push
scas
outs
pop
(bad)
in
dec
sahf
cdq
or
mov
mov
jo
dec
call
leave
arpl
outs
dec
call
mov
ret
jo
sub
mov
cmp
xor
std
inc
ror
dec
dec
pop
pusha
lods
lea
in
mov
repz
sbb
rcr
inc
push
pushf
and
mov
scas
aam
mov
lds
repnz
xchg
cmps
jbe
xchg
jecxz
jp
xchg
cli
lahf
or
pop
mov
test
sbb
iret
xchg
sub
stos
ins
mov
lds
loope
cld
pop
xor
mov
test
nop
dec
pusha
or
jmp
mov
out
and
into
mov
push
mov
push
bound
inc
aad
ja
xchg
out
retf
and
mov
lods
stos
cmp
cmc
outs
mov
lods
aad
jbe
cmp
js
cmps
xor
popf
xor
or
pop
mov
dec
int
mov
push
test
lods
(bad)
push
cmp
jnp
xor
gs
push
mov
cmp
in
xor
daa
icebp
xlat
jecxz
jnp
sbb
inc
pushf
jo
test
stos
ror
in
outs
xor
jnp
jne
adc
cmp
xchg
das
mov
sub
mov
mov
jg
mov
xchg
adc
jmp
mov
cdq
cld
jmp
cmp
xlat
cmp
in
xchg
icebp
jne
mov
ret
xchg
je
inc
repnz
mov
jge
pop
stc
lock
in
inc
mov
adc
sahf
xchg
push
mov
sub
bound
jmp
scas
pushf
ins
fisub
jge
dec
(bad)
push
ror
sti
xchg
ret
fnsave
dec
out
xchg
mov
xchg
mov
or
cwde
bound
dec
imul
dec
rcl
in
cdq
push
xchg
push
js
loope
cmps
jg
cmp
loop
in
cmp
add
cmps
test
add
jecxz
and
retf
(bad)
cs
add
sub
mov
sbb
lods
(bad)
retf
mov
mov
out
rcr
ja
push
or
add
push
sti
or
and
pop
test
mov
sub
push
and
aad
lods
aaa
div
add
(bad)
push
fild
jp
lds
mov
xor
pop
js
xor
mov
push
ins
dec
inc
inc
and
jmp
and
inc
icebp
push
movs
in
inc
(bad)
int3
test
je
or
pushf
(bad)
movs
inc
(bad)
mov
adc
(bad)
and
cmp
jmp
data16
cmp
mov
mov
test
jg
out
dec
aaa
call
jae
sub
push
in
mov
inc
in
aaa
mov
repnz
mov
jbe
ret
inc
push
mov
fsubr
or
(bad)
rol
fistp
fnsave
jns
div
pop
inc
push
cwde
cmc
dec
lock
stc
test
shl
push
add
dec
push
xchg
sbb
ret
xchg
jmp
sub
mov
mov
sbb
cmp
and
inc
es
in
cs
adc
aas
push
mov
fwait
(bad)
shr
lahf
call
outs
movs
cmc
mov
loopne
mov
arpl
mov
jo
jg
jns
jb
or
adc
or
cld
or
iret
push
cli
add
enter
sbb
mov
fcmovbe
jne
setle
addr16
ret
cld
sahf
push
mov
nop
sti
movs
jbe
xchg
mov
popa
pop
sbb
rol
dec
icebp
jg
dec
xchg
ficomp
nop
mov
retf
xchg
pop
push
loopne
sahf
push
ret
mov
test
add
popf
retf
adc
ffree
xor
mov
cld
mov
jo
cmp
sub
add
imul
mov
pop
mov
sub
add
push
daa
dec
inc
push
xor
sbb
jnp
push
(bad)
ins
mov
mov
pushf
fs
mov
fcom
idiv
shr
dec
popa
nop
xor
xchg
sti
push
xor
push
arpl
loope
leave
stc
sbb
push
and
xchg
mov
and
(bad)
jl
xchg
jno
out
mov
jmp
in
test
jb
in
mov
mov
push
or
ins
sahf
inc
pop
xor
(bad)
test
(bad)
pop
sbb
jl
xchg
pop
pop
push
mul
frstor
into
jno
adc
stc
jge
lock
and
les
test
sbb
jmp
and
cwde
push
popa
bound
imul
dec
pushf
push
jnp
jle
dec
out
ds
call
push
sub
sbb
lds
out
ins
inc
ins
adc
test
xchg
jb
adc
sub
mov
imul
cmp
add
stos
imul
xlat
adc
mov
mov
mov
jg
inc
or
jae
xchg
mov
mov
xchg
into
inc
sbb
and
imul
inc
ret
scas
imul
and
dec
retf
mov
pop
mov
sahf
push
ja
into
push
mov
retf
jno
push
call
iret
mov
mov
addr16
inc
and
pop
or
ja
aad
fs
int3
xor
xchg
push
jg
jl
in
and
call
sbb
test
pop
repz
adc
cli
add
das
jmp
dec
(bad)
js
sbb
cmps
lea
sub
repz
mov
or
jae
and
(bad)
stc
scas
stos
pusha
loopne
pop
(bad)
aam
or
(bad)
out
cdq
adc
xlat
je
ja
jmp
(bad)
mov
adc
test
les
pop
dec
and
sar
ds
mov
clc
out
jle
jmp
add
ss
imul
mov
lods
imul
and
add
enter
jge
mov
adc
adc
sub
dec
push
and
aaa
jnp
jecxz
xor
enter
or
xchg
hlt
xchg
ror
jbe
push
neg
xchg
push
in
add
add
xchg
xchg
or
dec
mov
repz
fnstenv
int
jae
xor
and
push
test
cmp
je
xchg
repz
ds
ja
push
arpl
aad
ins
push
cdq
jne
mov
add
xor
or
mov
movs
mov
push
das
inc
mov
add
ret
mov
jo
push
cmp
std
icebp
pop
je
pop
jns
mul
mov
bnd
aam
test
pop
pop
into
sar
sbb
xchg
mov
div
push
dec
fdivr
cmps
cmp
(bad)
xchg
sub
nop
inc
adc
mov
in
xchg
(bad)
nop
leave
or
jno
jns
sbb
push
mov
push
cwde
and
enter
popa
fsub
leave
stos
(bad)
fdivr
sbb
mov
and
jbe
xor
mov
xor
arpl
adc
pop
cmp
push
(bad)
aaa
arpl
jne
mov
mov
and
call
push
in
mov
or
or
mov
in
and
rcl
ja
push
jo
inc
push
scas
sbb
out
hlt
adc
addr16
push
inc
out
lea
jb
stos
mov
and
(bad)
call
or
retf
mov
add
jo
cmp
js
push
in
xchg
lods
call
int
pop
add
xlat
sub
or
mov
(bad)
xchg
push
adc
nop
sbb
retf
sbb
cmp
xchg
stc
rcl
(bad)
push
icebp
push
pop
fs
push
outs
push
jns
pop
repnz
mov
sbb
call
call
jo
pop
cmc
dec
enter
cmc
gs
(bad)
fst
nop
xor
inc
or
in
mov
pop
ret
ja
(bad)
arpl
xchg
adc
fsubp
popf
loope
mov
adc
repz
mov
pushf
sub
jg
or
arpl
and
ins
(bad)
fwait
push
dec
lds
test
add
xor
mov
arpl
icebp
ds
arpl
adc
(bad)
rcl
ffreep
shl
sbb
sub
aam
imul
icebp
std
inc
lea
fld
push
pop
fcmovnb
mov
ret
outs
sub
hlt
jmp
or
mov
push
or
jge
rol
out
mov
lds
shl
out
sbb
xchg
adc
cmp
out
jg
stc
out
jmp
lock
fild
dec
loope
mov
add
add
dec
inc
dec
inc
scas
inc
pusha
or
add
add
add
(bad)
(bad)
inc
add
add
add
add
add
add
jns
je
ins
cs
jb
ja
outs
addr16
push
gs
imul
xor
xor
inc
jne
je
jb
cmp
jb
ins
sub
push
jne
ins
imul
imul
bound
xor
data16
xor
fs
add
adc
gs
cs
jb
ja
outs
addr16
imul
add
popa
je
pop
add
add
add
add
add
lsl
add
mov
mov
inc
or
add
or
add
add
add
add
or
add
add
pusha
outs
rol
add
add
inc
dec
inc
add
mov
or
popa
add
jo
pop
jae
add
ret
add
push
ret
add
outs
test
add
adc
inc
inc
push
pop
inc
in
rol
loopne
jne
les
ret
les
cli
aam
rol
je
ret
es
ja
ja
ja
aam
pushf
js
push
push
xor
dec
xor
std
nop
outs
iret
add
nop
dec
sbb
hlt
xor
cwde
mov
cli
scas
mov
retf
arpl
jo
pop
int3
fsubrp
icebp
test
xchg
retf
dec
inc
add
cmp
inc
addr16
addr16
dec
xchg
ins
sbb
loopne
cmp
mov
cmp
push
mov
cmc
sub
loope
inc
push
out
push
dec
int3
call
jp
imul
fsubrp
fs
and
outs
shr
xor
jno
adc
loopne
leave
ret
mov
pop
push
retf
inc
fucomi
push
jo
call
xor
(bad)
out
out
mov
scas
hlt
cwde
cld
mov
(bad)
xlat
enter
push
pushf
cmps
jecxz
cmp
inc
cli
pop
and
dec
mov
rol
scas
fsubp
pop
adc
inc
mov
in
mov
scas
test
push
mov
cmp
movs
pusha
jb
sub
jb
scas
mov
jg
ins
stos
enter
pop
movs
inc
in
arpl
and
mov
popf
xchg
sbb
sbb
xor
push
loopne
(bad)
retf
iret
xchg
test
jnp
jp
cmp
and
sbb
scas
xchg
aaa
cmps
push
and
mov
sub
dec
sub
aaa
mov
pop
ins
pop
xchg
pusha
movs
jmp
outs
jg
inc
(bad)
push
mov
pushf
iret
shr
pop
jbe
icebp
gs
popa
cld
outs
push
jo
cmp
pushw
jbe
loope
cmps
sub
jb
pushf
jp
or
push
sbb
leave
repnz
(bad)
and
xor
add
or
(bad)
ins
jne
imul
jp
call
pop
mov
mov
sub
jae
xlat
xchg
push
jmp
cmp
popf
sahf
out
neg
mov
cmc
pop
mov
scas
ss
add
addr16
cwde
in
mov
inc
mov
ficomp
push
outs
pop
outs
push
dec
pop
test
test
xchg
pusha
sub
(bad)
jno
dec
mov
inc
cmps
cmp
jp
pop
mov
fst
or
ss
jge
(bad)
fsubr
or
outs
sub
in
push
or
dec
(bad)
cmp
jbe
lods
fnstenv
sub
xchg
aaa
jp
pop
inc
mov
lea
clc
mov
or
mov
mov
and
test
mov
in
outs
mov
scas
push
dec
xchg
fpatan
pop
(bad)
in
xor
je
test
and
adc
jo
mov
dec
daa
mov
cmp
les
aam
mov
pop
cld
push
popf
pop
xchg
test
scas
lods
cmp
cmp
shr
mov
std
add
data16
bnd
sti
fnstsw
pop
adc
xchg
mov
pop
icebp
adc
(bad)
call
pop
pop
mov
inc
push
inc
or
sbb
fild
dec
sub
daa
and
arpl
dec
mov
adc
fwait
push
sbb
ds
fidiv
mov
stos
jg
cmps
outs
mov
je
dec
icebp
inc
aam
sub
shr
mov
rol
aas
push
pop
adc
rol
sahf
add
mov
jb
aas
cmc
fcom
xor
inc
xchg
mov
fistp
mul
fisttp
and
mov
adc
leave
xchg
mov
(bad)
std
lock
aaa
adc
iret
(bad)
ins
jge
mov
lds
jecxz
cmp
xor
inc
mov
scas
jg
aad
mov
cmc
(bad)
jo
jne
pop
sub
adc
sub
add
leave
cmps
mov
loopne
(bad)
mov
ror
scas
xchg
pop
push
pop
fdiv
retf
xchg
push
cdq
adc
les
fimul
xor
iret
push
or
xchg
adc
in
les
(bad)
lods
mov
pop
cmp
rcr
and
mov
sub
cmp
jo
jo
daa
jmp
mov
lock
into
add
sti
jmp
(bad)
addr16
xor
test
fld
mov
xchg
ins
in
aad
xor
pop
pop
mov
add
fsubr
xchg
es
mov
aaa
sbb
pop
mov
sti
int
mov
ret
pop
adc
fdivr
mov
in
dec
jne
sbb
mov
xchg
lahf
sti
sahf
add
test
mov
fild
push
bound
int3
add
dec
fiadd
stos
push
js
hlt
push
xchg
sbb
loope
in
lds
sbb
pop
fwait
shr
hlt
jne
fistp
or
jge
pop
mov
mov
cmp
xchg
mov
xor
sbb
dec
sbb
jp
and
push
ins
cli
push
inc
fldenv
xor
mov
cmps
icebp
push
pusha
idiv
ret
jnp
and
inc
call
xchg
in
sbb
adc
js
iret
dec
xchg
mov
imul
fneni(8087
cmp
leave
dec
in
inc
pop
inc
shl
mov
xchg
push
icebp
mov
in
mov
aaa
mov
mov
sub
out
inc
xchg
fsubr
push
mov
pop
mov
mov
leave
scas
cdq
movs
or
hlt
jg
imul
popf
or
xchg
adc
icebp
push
sbb
dec
add
ror
jle
hlt
pop
push
mov
mov
dec
xor
pop
xchg
pop
les
dec
ss
ds
popa
in
in
sub
and
jno
test
and
sahf
sub
out
ds
out
dec
jmp
xor
xchg
in
popa
data16
shr
test
in
loopne
pop
jle
sti
loopne
and
je
xor
jns
std
aas
icebp
lds
sub
pop
test
int3
fcom
pusha
repnz
adc
inc
xchg
lock
dec
mov
ins
pop
xchg
jl
je
sub
lock
dec
pusha
aaa
sub
pushf
mov
sti
cmp
mov
fwait
icebp
sar
les
jmp
in
or
shl
sbb
sahf
pushf
push
mov
add
sub
out
test
icebp
jecxz
push
shl
xor
icebp
fldenv
mov
jmp
das
enter
mov
dec
mov
ficom
(bad)
cmps
or
movs
mov
nop
fwait
inc
adc
cdq
ins
xor
outs
xor
aas
scas
nop
fucompp
js
js
push
aad
js
aad
nop
nop
daa
stos
sub
bound
bound
cmp
and
jmp
imul
sub
mov
daa
int
dec
xor
shr
ins
sbb
shr
inc
jecxz
cld
jle
dec
sub
mov
pushf
test
fwait
int3
das
outs
xor
pop
sub
in
jmp
movs
xor
mov
xchg
pop
xchg
xchg
cwde
iret
xlat
ja
lahf
imul
mov
mov
cs
push
mov
sub
ja
adc
mov
nop
sbb
stc
test
int
les
sub
daa
adc
daa
daa
sub
and
inc
ins
aaa
cmps
jmp
icebp
jnp
ficom
push
dec
ins
es
aam
sbb
icebp
cmp
xlat
mov
jnp
sbb
xor
fcomip
mov
xchg
cwde
je
pop
inc
mov
ret
shl
in
dec
add
(bad)
shl
pop
mov
fidivr
out
add
sar
fidiv
dec
pop
xor
xchg
je
adc
xlat
mov
sbb
mov
xchg
xor
adc
pop
jp
pop
mov
or
sbb
or
out
xor
dec
or
pop
loop
mov
les
cmp
in
shl
lea
jno
or
ret
(bad)
mov
cmps
jb
xchg
and
adc
fs
push
loopne
jae
or
cld
dec
pop
adc
pushf
dec
mov
cs
lahf
xor
retf
push
jle
adc
js
xor
and
mov
jnp
stos
cmp
cmp
or
sub
and
dec
cld
mov
mov
rcr
fxch
xor
add
jecxz
mov
shl
jmp
pop
mov
fs
push
cmp
jbe
dec
and
into
sbb
add
or
xchg
push
fisubr
daa
jle
jcxz
mov
push
pop
bound
lea
mov
js
leave
dec
xchg
ins
inc
xchg
scas
sbb
ds
dec
(bad)
sti
jbe
std
setae
dec
or
and
fsub
repz
adc
mov
test
scas
leave
xlat
add
imul
mov
push
call
push
mov
aad
jge
jmp
gs
pop
cmp
int
adc
dec
mov
mov
pop
mov
add
mov
scas
daa
mov
or
mov
test
jmp
into
cwde
inc
ss
xchg
cmp
repnz
scas
sahf
sbb
and
xlat
outs
pop
push
cmp
inc
loope
sub
movs
sbb
add
nop
icebp
xchg
xchg
and
in
retf
movs
in
lods
add
jne
stos
jno
retf
adc
cmp
pushf
mov
fmul
cs
or
test
cmovns
xchg
and
cmp
stos
gs
push
or
test
test
aaa
sub
inc
int
js
cmps
aaa
xor
cmps
fisub
leave
pop
mov
fist
sbb
dec
cmp
movs
imul
xchg
ss
popa
mov
pop
daa
pusha
dec
inc
iret
(bad)
xor
ds
jno
dec
xor
sub
sbb
xchg
or
sub
loope
mov
jmp
jmp
cmps
jno
int3
mov
outs
je
int
sbb
jmp
cli
pop
sub
(bad)
fdivr
xchg
dec
test
aaa
add
jb
mov
pop
stc
or
sub
dec
hlt
inc
mov
mov
enter
shr
aas
fadd
ucomiss
call
iret
dec
in
xor
popa
or
(bad)
mov
jne
sbb
(bad)
xchg
shl
sar
jmp
xchg
cmp
mov
mov
and
arpl
sbb
je
add
sbb
in
mov
mov
icebp
jb
ss
inc
fcomp
into
or
push
pop
fs
scas
xlat
adc
inc
push
jno
sbb
push
scas
pop
shl
in
lea
out
jmp
mov
and
pop
rcr
mov
cwde
test
add
cdq
push
imul
in
xor
dec
xor
jno
movs
push
jp
and
sub
(bad)
inc
inc
ins
js
lods
inc
ins
sbb
repz
dec
scas
out
lods
ds
outs
xor
cdq
ss
sub
lods
arpl
fs
lds
scas
jne
mov
mov
cmp
mov
arpl
ja
(bad)
push
jecxz
push
aam
pop
mov
sbb
mov
(bad)
mov
adc
xchg
sub
mov
fimul
inc
arpl
rol
adc
jbe
xchg
mov
adc
test
js
aam
jmp
(bad)
pop
loop
mov
sub
cwde
std
hlt
scas
leave
into
sbb
addr16
mov
js
ret
addr16
call
fild
pop
ror
and
push
addr16
sub
rol
out
sub
xchg
inc
bound
(bad)
popa
mov
pushf
retf
test
jb
dec
or
gs
add
add
imul
test
in
and
mov
mov
or
cmp
pop
movs
xchg
jne
addr16
sbb
test
vpsubw
clc
mov
xchg
mov
test
xchg
std
in
mov
fsub
pushf
adc
mov
repnz
pop
adc
lock
jb
mov
inc
xchg
xchg
mov
mov
rol
mov
xor
sbb
pop
out
sar
jae
stos
cmp
dec
sahf
aaa
mov
retf
jg
inc
cwde
cmp
and
ror
out
btr
repz
(bad)
stos
xchg
(bad)
cmp
rcr
fucom
or
push
bound
rcr
int
in
mov
cmps
add
popf
add
jge
dec
jnp
mov
pop
ja
push
cmp
or
sub
sub
xchg
jo
cdq
cdq
xchg
into
sbb
lds
mov
jmp
ja
cmp
add
adc
gs
pop
mov
icebp
(bad)
imul
push
sbb
jmp
pushf
jl
loope
push
iret
movs
sub
jmp
jns
jns
mov
shl
mov
je
nop
fadd
xlat
or
rcl
loop
(bad)
jmp
mov
ret
imul
pop
pop
push
fstp
shl
ja
cmp
sub
pop
loope
and
js
jno
push
xor
and
fmul
mov
push
or
mov
retf
mov
mov
fild
outs
sbb
aas
movs
dec
(bad)
out
iret
(bad)
sub
sbb
xchg
jecxz
inc
or
inc
sbb
pop
les
pop
pop
mov
inc
loop
mov
les
lock
and
fisttp
xchg
cmp
mov
jmp
sub
sub
cmp
shl
pop
je
adc
sar
pop
cli
rol
xchg
adc
aam
and
mov
dec
(bad)
xor
std
icebp
enter
inc
ss
aad
add
movs
jne
pop
mov
pop
std
mov
loope
arpl
cwde
xlat
mov
xor
stos
aam
mov
adc
retf
sub
jl
jae
inc
and
imul
push
fidiv
and
mov
mov
push
out
pop
ret
js
xchg
cmc
rcl
out
imul
pop
cmps
or
sub
aas
lods
dec
std
repnz
add
retf
mov
int3
add
xor
mov
(bad)
lds
cmp
xchg
or
xchg
daa
das
inc
xor
xchg
sbb
add
repz
pop
jnp
aam
test
xor
sar
mov
std
xor
ficom
jnp
call
lods
lock
test
out
xchg
jl
sbb
cmp
jbe
shl
clc
mov
inc
inc
jb
retf
popf
dec
jb
rol
mov
fcmovnb
pop
mov
sbb
add
mov
lgs
mov
xchg
repnz
mov
push
cli
and
mov
int
into
imul
out
xchg
xor
cmps
pop
call
iret
jl
sti
jmp
in
aaa
jle
mov
outs
xor
inc
mov
jnp
bound
cmp
xor
jmp
out
leave
shr
mov
push
lods
sbb
jno
push
pop
and
es
sub
daa
jl
sbb
add
loope
push
sub
pcmpeqw
das
mov
test
inc
pop
mov
test
jp
jmp
and
pop
sbb
rdtsc
das
(bad)
jb
dec
stc
fimul
inc
retf
inc
repnz
icebp
jle
mov
adc
bound
and
fldcw
mov
outs
mov
cld
sahf
xchg
shl
fstp
js
add
out
loop
pop
ret
adc
popf
jne
fadd
mov
mov
lea
mov
push
scas
push
pushw
fst
dec
pop
out
mov
adc
icebp
sub
clc
jmp
mov
ret
mov
sbb
call
xchg
(bad)
mov
jne
es
mov
adc
test
xchg
rcl
or
dec
sbb
shl
pop
mov
rcl
dec
push
cmps
mov
cmp
ret
adc
iret
aas
(bad)
cld
repz
aas
(bad)
cld
repz
add
pop
mov
cli
mov
dec
inc
dec
inc
scas
inc
pusha
or
add
add
add
(bad)
(bad)
inc
add
add
add
add
add
add
jns
je
ins
cs
jb
ja
outs
addr16
push
gs
imul
xor
xor
inc
jne
je
jb
cmp
jb
ins
sub
push
jne
ins
imul
imul
bound
xor
data16
xor
fs
add
adc
gs
cs
jb
ja
outs
addr16
imul
add
popa
je
pop
add
add
add
add
add
lsl
add
mov
mov
inc
or
add
or
add
add
add
add
or
add
add
pusha
outs
rol
add
add
inc
dec
inc
add
mov
or
popa
add
jo
pop
jae
add
ret
add
push
ret
add
outs
test
add
adc
inc
inc
push
pop
inc
in
rol
aam
add
loopne
jno
lock
es
jbe
mov
mov
xchg
in
mov
mov
cmp
lods
rcr
stos
int3
ins
or
fldenv
xchg
test
add
push
push
lock
sar
nop
jl
dec
retf
daa
or
cmps
pushf
test
cld
adc
dec
xchg
std
in
test
and
clc
dec
push
jne
int
stos
xchg
leave
mov
sbb
mov
addr16
lods
mov
mov
push
mov
mov
push
mov
push
stc
rol
adc
add
cmc
mov
pop
mov
lods
dec
bound
sub
movs
xchg
cmps
push
mov
xor
(bad)
sub
fwait
rcr
rol
push
pop
lods
mov
lods
xor
dec
ins
ret
mov
fmul
xor
jge
bound
or
retf
dec
in
cmc
pop
in
inc
mov
xchg
adc
out
lea
ss
push
adc
or
out
and
adc
fbstp
push
inc
push
mov
push
and
xchg
(bad)
pop
dec
dec
and
out
push
sub
mov
cmp
fs
jecxz
sbb
push
xor
stc
sahf
pop
push
sub
mov
ja
add
retf
adc
retf
sti
adc
(bad)
loopne
sub
in
and
lahf
push
sub
cmps
stc
and
fcomp
int3
mov
jnp
retf
mov
int3
les
inc
cmc
test
adc
sti
out
rcr
jns
mov
aad
jns
cdq
cmp
ja
sbb
bound
add
push
mov
cli
cmp
cmp
call
(bad)
aad
sub
pop
mov
xchg
xchg
xacquire
xor
xchg
das
xchg
pop
xchg
mov
imul
popa
test
jecxz
scas
or
sbb
push
push
xchg
ror
cmp
jae
push
cwde
xchg
test
div
dec
add
jmp
sahf
and
(bad)
lods
nop
aad
or
sbb
call
not
rol
cwde
fucomip
xor
cmps
fisub
or
sbb
ss
aas
jbe
popf
aam
sub
xor
leave
scas
xchg
pop
add
leave
xchg
xor
pop
push
(bad)
push
mov
popa
dec
(bad)
jmp
cmp
setne
stc
and
xchg
out
fmul
xchg
or
inc
mov
test
xor
pusha
addr16
xor
mov
sbb
sub
push
add
int3
jmp
mov
sar
inc
jge
fs
cli
fwait
and
out
mov
fst
(bad)
in
mov
hlt
sub
in
xchg
imul
ret
and
jnp
pop
add
and
lea
ins
cwde
fadd
mov
dec
sbb
cmp
or
test
sti
cmc
retf
pop
jg
cs
test
sub
ficom
ss
imul
jb
stc
inc
pop
retf
sti
ret
lods
mov
mov
les
dec
fcmovne
dec
mov
fdivr
mov
pop
scas
js
push
mov
in
sbb
push
cmp
in
mov
int3
lahf
cmp
dec
loop
jl
xor
in
jge
xor
rcl
stos
jbe
mov
rsm
sbb
mov
out
repnz
outs
pop
cmp
jp
arpl
jne
push
mov
cmc
int
pop
retf
mov
xor
sub
out
jl
shr
dec
mov
adc
out
mov
lods
sahf
mov
sub
jmp
push
add
mov
sbb
scas
shr
cmp
cmp
popa
mov
int
fstp
mov
sbb
icebp
mov
push
inc
jge
pop
inc
jbe
nop
imul
iret
aad
int
loopne
xchg
adc
lock
fwait
out
pop
adc
ficomp
in
clc
dec
sar
or
je
push
adc
jl
pop
aas
test
stos
call
cmps
jp
fstp
pop
jmp
mov
aad
test
mov
fisubr
push
cmp
repnz
ins
jbe
shr
mov
call
cmp
pop
mov
adc
mov
out
push
lahf
outs
mov
or
cmp
mov
int3
arpl
sbb
outs
shl
arpl
mov
mov
movaps
mov
imul
int3
mov
push
hlt
inc
ret
nop
jge
and
push
pop
mov
adc
jo
xor
push
call
mov
lds
or
scas
mov
and
mov
xchg
sub
jmp
cmp
jno
dec
(bad)
pushw
push
mov
mov
adc
inc
xchg
and
and
and
jae
fcomp
inc
ficom
pop
pop
fs
ret
adc
jns
adc
or
xchg
dec
pop
fwait
leave
pop
cld
ins
in
dec
cwde
cmps
scas
jmp
cdq
xor
scas
push
jg
sub
add
pop
sbb
int
iret
dec
push
mov
sysret
int3
xor
mov
push
sub
jns
(bad)
jmp
icebp
retf
div
jns
cli
xchg
(bad)
inc
clc
sub
ret
imul
adc
dec
faddp
stos
pushf
mov
call
ss
sbb
test
sbb
cmp
movs
mov
jns
sbb
test
arpl
dec
push
das
pop
ss
xor
(bad)
pop
mov
ins
pusha
xor
lods
sti
push
fs
std
jle
shr
or
inc
dec
xchg
mov
clc
es
pop
fistp
mov
(bad)
xchg
mov
dec
rcr
out
test
lock
rcr
jecxz
shl
cmp
cld
fnstenv
mov
arpl
stos
xchg
or
call
pop
sub
inc
dec
cmp
test
pop
je
pop
mov
fsubr
ds
jb
jae
aas
das
sbb
std
inc
xchg
add
cmps
repz
daa
test
(bad)
xor
shl
cdq
jo
imul
mov
aaa
jp
pop
movs
je
cdq
enter
xor
ret
mov
adc
xor
push
in
xor
xor
je
repz
sbb
out
scas
mov
test
movs
push
cmp
mov
enter
out
add
cmps
cmp
push
cli
mov
cmp
cmp
adc
lahf
jecxz
leave
push
xchg
test
int
(bad)
lock
jge
sbb
inc
push
xor
rcl
repnz
fwait
cmc
and
dec
cmp
aaa
ins
test
ja
nop
ja
lahf
mov
push
loope
xor
sbb
jecxz
and
mov
inc
pop
rcl
lea
es
aam
mov
pop
jns
mov
xchg
sub
jg
inc
pop
cld
jns
xchg
fscale
inc
xor
mov
outs
mov
adc
push
aaa
xchg
(bad)
xor
daa
sub
adc
push
xchg
addr16
dec
jo
mov
movs
sub
outs
and
mov
sbb
dec
int3
addr16
sbb
fnstsw
lahf
mov
fneni(8087
jb
in
jmp
inc
sub
faddp
repz
jg
iret
out
dec
mov
loope
(bad)
xchg
sbb
leave
jbe
push
and
push
mov
addr16
xchg
mov
loop
movs
popa
int
adc
xchg
and
clc
sub
les
sub
and
in
and
out
sub
jle
lods
mov
aas
jmp
add
xor
addr16
popf
cmp
cld
and
call
and
jno
ss
popf
jno
dec
sub
push
mov
arpl
out
jle
xor
pop
mov
das
retf
and
daa
pop
sbb
sbb
sbb
cmp
cli
les
stos
cmp
xchg
push
int
lahf
stc
add
sub
in
std
imul
test
fcmovu
loopne
(bad)
test
mov
pop
les
xchg
push
pop
imul
retf
mov
fucomi
fwait
adc
and
int3
lods
push
dec
inc
xchg
mov
sbb
xor
cld
jnp
or
pusha
aaa
mov
je
and
jmp
push
mov
enter
adc
fld
test
jmp
enter
cmc
jl
(bad)
cmp
retf
(bad)
or
(bad)
(bad)
mov
and
(bad)
pop
nop
cld
xchg
mov
lahf
xchg
and
or
cmp
ja
and
cmps
pop
iret
sbb
sahf
sub
add
jns
and
rcl
inc
sub
mov
cwde
aam
ror
(bad)
(bad)
mov
es
fmul
push
mov
inc
ret
push
push
or
sbb
outs
ss
mov
fistp
or
jb
xor
jg
pop
xchg
ss
push
cmp
xchg
pop
xchg
inc
or
and
out
retf
ja
pop
mov
sbb
add
push
lods
outs
sbb
mov
mov
outs
sub
add
xor
push
cld
and
or
daa
icebp
ins
xlat
cmp
ret
jg
cwde
sbb
bound
aam
sbb
push
jl
push
andnps
and
adc
jno
in
mov
cwde
push
sahf
fucomi
les
int3
adc
arpl
out
daa
retf
pop
and
cmp
(bad)
test
dec
(bad)
inc
adc
enter
sti
push
nop
les
loopne
fdivrp
es
fst
fisubr
xchg
sbb
sub
inc
int3
fstp
xlat
jge
push
or
aas
add
sub
(bad)
fimul
retf
lea
pop
popa
jo
les
fldpi
fwait
in
xor
test
jle
add
shl
pop
xchg
cmp
dec
xor
addr16
mov
lock
ja
fs
xor
in
mov
xor
and
mov
or
xchg
mov
adc
loope
nop
inc
jae
mov
mov
inc
push
jbe
xchg
or
int
adc
pop
mov
xchg
mov
dec
add
(bad)
sbb
adc
mov
jno
scas
sbb
retf
push
and
pop
(bad)
(bad)
sub
mov
jmp
jmp
movs
push
cld
and
retf
push
ret
add
jl
out
repnz
in
daa
out
jns
jae
data16
pop
cmp
mov
push
imul
mov
pop
pop
lea
sbb
sbb
mov
clc
and
jo
sub
test
jnp
leave
cmp
adc
xchg
retf
ja
push
out
add
cmps
popa
mov
or
fs
xor
jmp
ds
fidiv
sahf
(bad)
fisttp
and
and
div
addr16
xlat
sbb
xor
xor
mov
and
mov
adc
inc
sar
pop
and
mov
retf
inc
mov
and
and
aaa
dec
sub
les
xor
jl
pop
push
js
mov
push
pop
(bad)
xor
lods
gs
ja
in
and
cwde
dec
xchg
xchg
std
outs
mov
mov
xor
dec
push
retf
loop
mov
push
pop
mov
ret
outs
push
out
pop
xlat
ja
sbb
pusha
ds
xchg
xchg
test
jmp
sub
loop
xlat
mov
inc
test
cmp
ret
sbb
cmp
enter
mov
or
or
es
pop
add
call
clc
fnclex
not
and
fndisi(8087
inc
clc
sub
into
sub
xchg
les
pop
outs
sti
cwde
(bad)
adc
dec
hlt
mov
push
aam
iret
dec
sti
mov
repz
inc
xchg
icebp
arpl
add
lods
addr16
je
call
mov
xor
xchg
sbb
fcom
xor
push
jnp
xchg
cmp
mov
lahf
loopne
les
fwait
push
mov
jbe
sub
inc
mov
hlt
xlat
rol
cmp
jbe
push
mov
scas
xor
fs
lock
jecxz
lock
pop
jo
sbb
fucom
clc
inc
and
jbe
mov
mov
jmp
mov
ret
mov
sub
xor
adc
scas
lock
jns
xor
cmp
into
ret
add
aas
jp
cmp
imul
or
mov
jg
je
jle
mov
cs
sbb
mov
xor
aaa
cmp
jb
cs
and
in
dec
in
je
inc
movs
minps
into
xor
cdq
ret
or
icebp
and
and
lock
push
push
pushf
adc
nop
sub
fnsave
push
(bad)
repnz
sahf
mov
pusha
(bad)
fist
bound
imul
stc
pop
sbb
mov
out
push
retf
sub
adc
cmp
mov
aaa
push
mov
push
out
movs
cli
pushf
mov
test
repz
mov
cmps
hlt
repz
pop
retf
cli
and
add
adc
dec
out
mov
adc
dec
jns
cdq
cmps
mov
out
test
leave
iret
pop
(bad)
dec
sbb
aas
retf
sub
cmp
xchg
loop
sbb
cmp
adc
jne
les
adc
pop
jmp
xor
add
or
jns
mov
ins
adc
dec
loop
jecxz
xchg
push
mov
sub
fcomp
xchg
jns
pusha
xchg
or
mov
adc
ins
int
add
scas
fistp
mov
fadd
push
call
test
stc
sub
cmp
dec
icebp
jp
shl
in
in
mov
sub
jmp
test
fisttp
jnp
sub
loop
xchg
add
aas
fwait
mov
adc
int3
jp
add
sbb
push
rol
retf
sbb
mov
sbb
dec
es
es
inc
mov
or
cmp
pushf
xor
xor
ins
mov
sub
ins
shr
xacquire
fidivr
repz
bound
out
iret
stos
lea
and
pop
inc
or
jmp
stc
retf
idiv
call
movs
pop
pop
inc
in
out
fs
dec
rol
or
fcmove
jl
dec
and
cmp
icebp
cmps
ja
or
jmp
das
inc
ror
adc
mov
out
pop
cdq
out
xchg
test
cmp
int3
das
dec
mov
lods
xor
hlt
sub
rol
cmps
inc
ja
retf
mov
and
mov
mov
pop
mov
mov
fidiv
xor
inc
retf
mov
adc
stc
jmp
das
ret
push
fimul
jbe
and
out
imul
xor
test
ins
int
add
dec
mov
(bad)
shl
pop
dec
ret
mov
call
or
sbb
adc
jo
fnstenv
or
adc
call
(bad)
dec
pop
jle
je
out
cmc
jo
mov
repz
lds
das
xor
popf
mov
frstor
cmc
add
xchg
ja
(bad)
stos
pop
xchg
xchg
aad
cmp
sbb
cmps
cmps
test
div
aam
push
xchg
pop
sti
addr16
aad
xlat
xor
push
dec
lods
mov
out
mov
push
std
call
push
push
xor
jmp
into
sub
jecxz
add
xchg
fild
adc
pop
fnstsw
daa
sbb
aaa
add
rol
jmp
mov
jmp
push
pop
shl
fstp
pusha
inc
test
jns
bound
(bad)
xchg
mov
and
hlt
mov
cmp
and
push
inc
loop
stc
ret
in
fadd
mov
movs
or
les
rcl
and
(bad)
pop
xchg
push
out
enter
cmp
mov
(bad)
test
test
bswap
ins
stos
mov
add
stc
xor
out
cmps
fisubr
mov
sbb
stc
out
jg
stc
out
sbb
cld
(bad)
mov
jnp
int3
mov
add
add
dec
inc
dec
inc
scas
inc
pusha
or
add
add
add
(bad)
(bad)
inc
add
add
add
add
add
add
jns
je
ins
cs
jb
ja
outs
addr16
push
gs
imul
xor
xor
inc
jne
je
jb
cmp
jb
ins
sub
push
jne
ins
imul
imul
bound
xor
data16
xor
fs
add
adc
gs
cs
jb
ja
outs
addr16
imul
add
popa
je
pop
add
add
add
add
add
lsl
add
rcl
add
mov
inc
or
add
or
add
add
add
add
or
add
add
pusha
outs
rol
add
add
inc
dec
inc
add
mov
or
popa
add
jo
pop
jae
add
ret
add
push
ret
add
outs
test
add
adc
inc
inc
push
pop
inc
in
rol
loopne
popa
dec
div
mov
jg
sahf
jmp
fstp
leave
xor
cmp
mov
cmp
dec
(bad)
je
test
push
add
sahf
xchg
aad
xchg
ins
push
mov
jne
(bad)
out
es
xor
retf
test
cmc
inc
scas
mov
mov
movs
ror
imul
adc
add
push
and
cs
fstp
(bad)
addr16
loopne
or
push
mov
jle
xchg
inc
jmp
std
fistp
in
push
cmps
cli
test
mov
mov
mov
lods
add
in
lods
adc
and
loop
stos
jbe
adc
xchg
xchg
pop
and
into
mov
(bad)
fisttp
push
fistp
push
(bad)
jo
clc
(bad)
ss
cmps
mov
jl
push
bextr
adc
out
fwait
sub
jbe
sbb
int3
mov
and
xor
lock
dec
cwde
xor
or
xor
dec
movs
sbb
js
cdq
call
mov
mov
add
mov
fwait
add
inc
pop
cmp
fdiv
cli
(bad)
in
out
adc
ds
repnz
int
rsqrtps
xchg
xchg
scas
pop
xchg
push
test
(bad)
mov
adc
mov
retf
xchg
inc
jmp
mov
add
jbe
dec
xchg
int
out
mov
int3
cmp
jno
dec
and
mov
mov
(bad)
xor
dec
scas
or
jl
in
xlat
addr16
bound
mov
sub
iret
and
das
pop
outs
sbb
push
xchg
and
aaa
imul
jg
cmp
add
pop
push
cmp
fst
push
lods
mov
pushf
sar
add
clc
push
psubd
jecxz
and
mov
jns
fs
shl
sahf
daa
cwde
jle
push
jg
scas
les
push
sub
lods
cmp
out
or
xchg
mov
push
mov
sub
(bad)
mov
(bad)
int3
mov
rcr
jb
loope
inc
in
stos
ja
sub
or
xlat
mov
rol
cmps
je
push
xor
movs
mov
jo
cdq
clc
dec
aad
lds
add
push
mov
sub
add
scas
mov
dec
cs
xchg
jp
gs
rcl
int
test
dec
fmul
mov
ss
and
test
(bad)
xor
dec
add
lods
mov
cmp
test
test
lods
outs
inc
pop
into
rcl
ficomp
jl
pusha
jb
mov
lock
pop
push
repz
retf
in
inc
(bad)
xor
jmp
xchg
mov
xor
dec
cmp
pusha
lods
cmps
cmovge
pop
in
lods
sub
js
xor
and
and
lods
ss
stos
dec
sar
mov
mov
imul
push
jae
icebp
pop
xchg
pop
nop
outs
mov
pop
mov
mov
dec
es
and
in
cmp
sub
ja
and
xchg
pop
nop
dec
loop
pusha
mov
arpl
mov
lock
call
inc
in
lods
jae
in
add
movs
push
sar
mov
cmps
cs
ret
(bad)
js
pop
pop
js
pop
pop
test
stos
and
jnp
in
das
ror
cs
jecxz
cld
jns
adc
xchg
stos
jge
or
mov
ins
ret
stos
test
push
mov
retf
push
je
iret
(bad)
or
(bad)
(bad)
je
lahf
bound
jmp
sbb
sahf
fist
pop
movs
mov
mov
pusha
jbe
dec
in
cmp
inc
adc
push
bound
sub
stc
push
fsubr
icebp
aad
(bad)
daa
inc
pop
test
sub
and
in
xor
ficom
pop
and
inc
xor
pop
ja
xor
pop
jnp
out
mov
(bad)
lock
jmp
mov
inc
sub
fnstcw
mov
sbb
jl
lahf
fmul
sbb
mov
add
sar
push
loopne
push
jg
push
adc
push
outs
int3
pop
js
xchg
cmp
push
gs
pop
fistp
out
sbb
and
mov
or
(bad)
mov
movs
fisubr
add
lea
out
xchg
mov
cwde
out
cmp
mov
arpl
jl
(bad)
xchg
push
sub
cmps
push
cdq
hlt
jecxz
je
jg
and
jl
inc
xchg
stc
and
call
aas
neg
inc
outs
je
or
dec
cmc
xchg
popa
hlt
sub
jne
mov
out
or
std
pusha
inc
sahf
imul
loopne
fmul
or
and
cmp
cdq
in
mov
movs
mov
imul
stc
stc
enter
cmp
dec
and
cdq
jl
leave
and
sub
cmp
cmp
dec
sbb
dec
jo
fldcw
fsubr
clc
cmp
fadd
cmc
hlt
pushf
mov
bnd
jnp
(bad)
test
mov
cwde
in
jl
sub
cwde
and
pop
or
xor
jecxz
dec
xchg
retf
mov
data16
and
sub
dec
sbb
push
(bad)
aad
ja
or
push
test
xor
popf
je
cli
retf
es
push
xchg
adc
add
loopne
popa
shr
adc
adc
mov
and
outs
inc
pop
push
xor
mov
xlat
test
xlat
or
psrlq
push
aas
retf
int
mov
fist
cmp
aam
push
xor
cmp
sbb
push
ins
cmp
adc
jle
loope
sub
and
sbb
iret
mov
shl
mov
push
adc
pop
xor
adc
and
mov
mov
cmc
pop
pop
mov
outs
push
xchg
fcomp
xchg
jecxz
int3
inc
jg
call
inc
movs
xor
sub
jmp
loop
sub
lahf
ds
jmp
mov
mov
adc
jmp
cmc
mov
cmp
push
xchg
mov
ror
dec
icebp
movs
xor
sub
or
push
leave
cmp
in
arpl
call
leave
mov
sbb
inc
sbb
fcmovnb
xchg
je
jb
dec
mov
ds
add
sbb
jmp
push
cmp
adc
out
inc
mov
ss
outs
inc
push
cmp
jmp
jb
test
pop
std
push
imul
mov
mov
mov
retf
mov
pop
push
sub
(bad)
aam
lock
fld
jp
repnz
mov
(bad)
and
inc
cld
stos
inc
out
dec
pop
test
iret
sti
cmps
mov
mov
sbb
and
cmps
dec
ret
push
retf
cli
fs
scas
int
sahf
scas
xchg
scas
jno
jmp
xor
rol
retf
loopne
into
push
pause
cmp
push
mov
es
pop
push
scas
push
and
dec
pop
shl
pop
xor
data16
xor
scas
mov
adc
cwde
cmc
cmp
fidivr
xchg
or
and
mov
push
or
sub
imul
dec
int
cmps
mov
adc
ja
jbe
xchg
ss
jbe
mov
sub
mov
cmc
mov
cmp
xor
sbb
ins
dec
xor
lods
sub
out
mov
je
jae
pop
sahf
lds
das
rcl
fbld
mov
mov
jno
shl
cmp
sbb
jmp
pop
(bad)
nop
add
or
mov
jb
test
lods
push
aam
repnz
jne
rol
(bad)
aaa
xchg
in
push
add
jnp
and
mov
mov
jne
hlt
retf
jbe
rcr
es
outs
lock
sahf
inc
in
fdivr
add
adc
outs
out
mov
aam
ja
push
stc
and
adc
lahf
je
cmp
std
ret
shr
cmps
cmp
inc
aaa
aad
cmp
ja
addr16
das
dec
imul
(bad)
xchg
aad
adc
jae
push
hlt
(bad)
scas
aam
ds
(bad)
cld
retf
aad
pushf
loope
dec
dec
sub
mov
pop
jo
or
push
in
xchg
lods
out
dec
je
aaa
jns
jmp
dec
mov
push
mov
dec
ret
(bad)
in
addr16
jge
dec
fwait
test
dec
adc
std
cmp
call
or
xor
js
dec
push
dec
cmp
jle
mov
jnp
dec
mov
adc
(bad)
sbb
xchg
push
ret
cdq
ins
jnp
cmp
inc
mov
push
mov
ja
mov
cmp
inc
xchg
cmp
lds
std
mov
mov
stos
fdiv
push
and
cwde
inc
int3
xor
call
dec
fsubr
cmp
jp
mov
adc
push
ja
movs
lods
into
mov
inc
mov
pop
push
loopne
mov
daa
in
sbb
loopne
mov
adc
pop
mov
aas
dec
push
aaa
and
ins
bound
into
sub
loop
jb
loop
add
stc
rol
xchg
fdivr
js
mov
inc
pusha
push
and
out
rcr
mov
cmp
hlt
jb
fcomp
jecxz
ret
js
and
clc
xor
sbb
dec
mov
call
mov
xor
arpl
cli
loopne
mov
xor
jmp
ret
cdq
xchg
push
sub
bound
push
pop
daa
stc
lds
inc
and
sub
(bad)
movs
jmp
movs
jecxz
mov
jae
sub
push
pop
movs
xor
push
sbb
ds
sbb
out
mov
in
mov
push
xchg
or
aaa
ins
sub
sbb
sub
shl
int
inc
add
aam
arpl
and
xchg
cmps
inc
inc
imul
adc
jnp
repz
shl
(bad)
iret
pop
sbb
pop
xor
data16
fcomi
add
retf
test
mov
cmps
pop
push
(bad)
ror
out
and
dec
inc
mov
pop
(bad)
xor
mov
push
jecxz
cwde
in
lea
fld1
mov
jmp
fldcw
js
fist
jge
pop
jae
jbe
(bad)
jae
add
clc
add
sbb
jnp
mov
fstp
sbb
sar
leave
loopne
or
mov
and
lds
jmp
(bad)
bnd
leave
enter
jmp
pop
jmp
mov
xchg
inc
aad
ins
lods
cli
jl
adc
and
ss
cmp
sub
cmp
pop
je
mov
inc
sub
sub
frstor
cs
xchg
mov
clc
aaa
jp
enter
cmp
cmp
sbb
clc
or
push
jp
xchg
jne
retf
stos
dec
cdq
aad
into
cmps
push
in
iret
inc
fstp
mov
cmp
call
push
sub
das
jp
shr
aam
jno
imul
mov
inc
lock
in
pop
dec
retf
ror
out
adc
jle
test
ss
push
daa
dec
or
fiadd
call
outs
les
inc
test
and
pop
pop
cmps
xor
xor
and
jl
lods
sti
sahf
inc
ins
lock
push
mov
sbb
lock
dec
movs
jb
mov
or
int
sbb
dec
mov
lods
mov
sbb
mov
lods
mov
adc
xchg
add
mov
lods
scas
or
fstp
rcl
cld
imul
or
lods
clc
addr16
fldcw
xchg
(bad)
xor
xor
rol
test
inc
out
stos
popf
aas
xlat
pop
stos
stos
jnp
lahf
neg
jno
push
add
xchg
arpl
inc
loopne
inc
inc
fnsave
loope
frstor
addr16
in
cdq
mov
ret
aas
xchg
leave
xchg
add
and
loope
aas
int3
test
shr
mov
call
retf
(bad)
shl
xchg
xchg
pop
lods
inc
pop
std
push
jmp
adc
sbb
les
loopne
adc
(bad)
pop
xor
enter
mov
(bad)
in
ins
scas
mov
cmp
in
or
lock
out
pop
cmp
dec
xor
push
pusha
scas
push
jmp
icebp
je
ret
jp
mov
test
test
inc
and
enter
xor
cmps
mov
fistp
dec
xchg
ins
inc
sti
mov
adc
inc
imul
sar
int3
fprem1
add
jae
or
(bad)
jae
fisubr
cld
adc
sti
cld
shr
and
sahf
mov
pop
jg
cs
xchg
mov
jmp
ss
lea
pop
mov
enter
push
sub
imul
(bad)
jle
lods
ins
sahf
mov
repz
popf
lea
retf
aad
and
push
add
push
cmp
shl
mov
pop
test
jl
adc
imul
xor
xor
or
add
add
push
stos
std
bound
jmp
cs
jp
repnz
or
retf
in
or
jg
jg
push
sub
mov
add
leave
cmps
stos
jmp
inc
mov
cdq
aas
pop
aas
ds
fwait
lds
dec
imul
mov
jae
fiadd
sub
fstp
inc
rol
inc
push
mov
cli
cmp
test
shl
das
or
scas
and
loope
jno
mov
jnp
dec
adc
ja
xchg
mov
aad
jg
xor
clc
arpl
lock
inc
movs
push
push
imul
aas
adc
pop
lock
sbb
movs
or
addr16
inc
int3
push
push
repnz
or
ss
add
daa
jno
arpl
fsub
sub
arpl
call
fs
aaa
cmps
cwde
pop
jo
push
inc
repnz
inc
sbb
mov
push
(bad)
cld
sub
mov
jo
jge
push
shl
test
mov
imul
fstp
enter
js
dec
mov
call
shr
mov
cmps
aas
stc
shl
mov
sbb
sbb
jnp
push
or
push
ret
mov
cmp
and
sbb
jmp
repz
dec
repz
mov
adc
fwait
cwde
neg
fist
cmp
pop
dec
jbe
push
mov
xchg
fmul
sub
xor
imul
add
mov
pushf
jae
scas
sbb
cwde
int3
addr16
sub
cmp
pushf
xchg
mov
sbb
sub
cwde
pop
arpl
ss
pop
or
add
sub
ins
out
jbe
pop
jns
div
popf
out
mov
jg
mov
mov
adc
push
aaa
(bad)
lods
adc
dec
mov
cmp
iret
in
sbb
jge
jne
scas
ror
xor
sbb
jg
cmp
mov
inc
adc
shl
pushf
ins
or
call
fisubr
test
or
outs
icebp
cmp
jg
mov
idiv
xchg
ret
and
repnz
mov
adc
sbb
gs
or
sub
mov
js
jne
add
outs
mov
pushf
das
jg
sbb
pop
adc
mov
inc
std
out
inc
mov
stos
add
jb
dec
lods
pop
xor
cmp
and
adc
cs
ret
lods
jnp
xchg
(bad)
adc
and
mov
xchg
mov
add
les
mov
dec
or
cmp
std
(bad)
mov
mov
fist
inc
push
mov
inc
(bad)
push
sbb
mov
fiadd
sbb
std
pop
sub
addr16
ins
pop
mov
mov
sar
mov
push
xchg
fstp
imul
jle
jb
test
clc
out
jg
stc
out
jg
stc
mov
(bad)
out
cmp
adc
dec
inc
dec
inc
scas
inc
pusha
or
add
add
add
(bad)
(bad)
inc
add
add
add
add
add
add
jns
je
ins
cs
jb
ja
outs
addr16
push
gs
imul
xor
xor
inc
jne
je
jb
cmp
jb
ins
sub
push
jne
ins
imul
imul
bound
xor
data16
xor
fs
add
adc
gs
cs
jb
ja
outs
addr16
imul
add
popa
je
pop
add
add
add
add
add
lsl
add
rcl
add
mov
inc
or
add
or
add
add
add
add
or
add
add
pusha
outs
rol
add
add
inc
dec
inc
add
mov
or
popa
add
jo
pop
jae
add
ret
add
push
ret
add
outs
test
add
adc
inc
inc
push
pop
inc
in
aad
and
pop
add
scas
out
out
push
dec
dec
dec
dec
popf
pushf
mov
je
xlat
dec
dec
aaa
rcr
fnsave
jmp
cmps
cdq
out
mov
adc
add
cwde
lea
ret
test
add
push
mov
adc
mov
mov
fwait
mov
dec
mov
out
adc
ret
scas
jns
fucom
(bad)
int
sahf
sub
mul
outs
je
mov
sub
sbb
xchg
lods
push
mov
xor
pop
sbb
scas
mov
mov
aaa
(bad)
jo
ja
mov
cmp
aaa
call
iret
mov
xor
or
std
adc
aaa
ret
dec
add
or
clc
sahf
aas
cmp
(bad)
sbb
pop
xor
pop
mov
xor
movs
aas
idiv
and
add
cmp
cmps
jo
pop
fbld
pushf
and
inc
mov
cmp
mov
(bad)
cmps
arpl
mov
sub
retf
cwde
ror
popa
push
push
sbb
push
aad
loop
add
enter
xor
(bad)
cld
int
or
clc
sbb
mov
jp
les
sbb
sub
mov
out
nop
mov
or
xchg
xchg
xchg
stc
pop
jl
idiv
mov
dec
stos
jo
dec
dec
add
adc
lahf
adc
and
jns
jae
in
mov
cmp
pop
movs
pushf
(bad)
retf
xlat
mov
and
lods
pop
jle
sahf
mov
out
inc
not
sub
je
xchg
and
sub
in
sub
jns
push
push
fimul
push
mov
movaps
neg
jo
dec
out
fdiv
sahf
adc
aad
fnsave
ror
sahf
xor
xchg
push
jae
int
mov
mov
fmul
ja
pop
adc
jg
mov
sbb
out
pop
pop
sahf
mov
inc
hlt
imul
jae
or
jl
xor
fwait
and
lea
xchg
sbb
sbb
retf
clc
mov
jmp
(bad)
xchg
sar
enter
loope
push
in
mov
inc
js
shl
in
lds
push
lock
cmp
or
adc
(bad)
lock
out
les
repnz
add
jmp
push
mov
mov
mov
ja
pop
cmp
lea
in
xchg
clc
dec
aas
test
or
pushw
int
scas
js
sti
rcl
ss
outs
test
xor
sub
retf
cmps
push
jl
sbb
xor
lahf
int
in
(bad)
jo
fld
xor
das
mov
out
inc
ficomp
inc
pop
test
xchg
bound
test
add
cld
lahf
xlat
aad
int
sti
sbb
inc
sbb
cld
inc
xchg
xchg
rcl
(bad)
xor
imul
and
out
leave
je
mov
jne
pushf
xor
push
inc
ficomp
call
and
les
shr
in
pop
(bad)
in
lock
or
pop
mov
jmp
fbstp
push
ret
adc
adc
ins
pop
jmp
fsubr
push
aaa
jg
sahf
aam
adc
pop
jae
mov
mov
xchg
hlt
sub
fsubrp
mul
mov
xor
test
xchg
pop
outs
mov
in
cmps
jbe
test
jge
xchg
outs
mov
pop
loop
jecxz
fisttp
outs
neg
push
jmp
cdq
je
aad
clc
fnstsw
mov
xor
sub
call
into
cld
mov
pop
stos
and
mov
jae
mov
bound
aas
and
fst
out
addr16
push
jae
call
add
inc
ins
stos
retf
mov
xchg
repnz
jnp
mov
jne
adc
jns
leave
push
js
cdq
xor
sti
sub
jmp
enter
outs
clc
adc
push
add
sub
jmp
cmp
push
je
call
test
sub
shl
fcom
mov
fdivr
mov
mov
test
movs
mov
(bad)
xlat
pop
cmp
adc
mov
cmp
data16
test
mov
xchg
inc
lods
jecxz
pop
push
xchg
(bad)
xlat
push
sub
(bad)
clc
jno
sbb
cmp
ins
mov
stc
aad
pop
stos
out
sub
jp
push
jl
mov
or
pop
bound
into
and
sub
mov
pop
sar
retf
mov
mov
in
add
add
call
mov
loopne
and
mov
add
adc
enter
and
cmps
bound
xor
cmps
sub
push
mov
jnp
call
sub
jle
jl
js
pop
ins
mov
jns
inc
mov
mov
xor
loopne
out
dec
out
int3
fld
xchg
push
pop
push
sbb
(bad)
fistp
fld
lods
mov
fwait
ins
mov
add
lds
jp
adc
adc
sar
jmp
jge
mov
pop
sar
pop
or
cmp
ja
cmp
jg
ja
cmc
outs
cmp
aad
xor
cmps
jmp
neg
ins
dec
cmc
lods
jns
repnz
loop
loope
clc
or
cmps
cmps
es
fidiv
push
inc
div
jae
sub
adc
jbe
mov
or
mov
aaa
scas
fist
jns
mov
test
inc
xor
mov
pop
sbb
pop
sahf
test
mov
retf
sbb
psubd
mov
cmp
pusha
(bad)
mov
add
xlat
cmps
mov
retf
cwde
mov
test
and
mov
fild
cs
cmp
pop
xor
rcr
sub
and
jp
outs
popa
ss
jbe
sbb
xchg
push
imul
cmp
ffreep
mov
cmp
dec
cs
divps
mov
adc
shl
mov
xchg
mov
add
adc
mov
jnp
mov
fsub
push
cld
mov
sub
fistp
cmp
sub
jbe
pop
in
outs
or
mov
jge
outs
dec
cmp
inc
sub
mov
inc
or
movs
repz
test
out
jns
cmp
cwde
fs
nop
mov
push
test
fisub
fsubr
cmps
sti
jp
loopne
loopne
scas
cmc
or
(bad)
into
test
mov
dec
test
mov
ins
ins
mov
cmp
popa
jmp
mov
pushf
xchg
int
cmp
pop
loop
std
xor
jo
stc
mov
inc
in
(bad)
dec
inc
pop
inc
push
add
add
ja
xor
add
loopne
xchg
rcl
cmps
pop
pop
cmp
xor
int3
das
test
or
mov
outs
in
inc
inc
xor
aad
and
pop
xlat
xor
fs
xor
rcl
cmp
mov
into
cmp
sbb
push
or
in
mov
lods
movs
test
jbe
retf
je
ins
adc
inc
push
pop
push
xor
rcl
push
dec
pop
mov
sub
sub
ins
ficom
xor
(bad)
(bad)
and
in
dec
and
and
leave
lahf
inc
and
js
test
cmps
mov
dec
call
xor
mov
test
aas
or
mov
outs
out
and
call
ret
push
adc
out
jno
and
loop
mov
ror
aad
loope
jp
imul
xor
adc
imul
add
test
lds
xchg
push
aad
jns
stos
pop
adc
push
pop
mov
std
push
aaa
pusha
fimul
pop
dec
mov
dec
aad
xchg
test
retf
leave
icebp
aaa
xchg
add
jle
(bad)
mov
xchg
fs
inc
cmc
pop
rcr
sub
jmp
push
neg
jae
and
mov
adc
jge
ror
cmp
dec
jmp
test
test
cmp
adc
adc
or
iret
sbb
xor
inc
pop
add
gs
mov
jg
adc
es
aas
mov
imul
add
fs
pop
push
out
xchg
pop
push
cmp
xor
mov
mov
push
test
sti
mov
imul
scas
jo
cmp
jecxz
mov
sub
sub
pop
mov
out
jge
push
jge
cs
fistp
(bad)
call
and
repnz
(bad)
adc
push
mov
inc
adc
(bad)
lock
xor
or
adc
pop
pop
pop
xor
mov
std
scas
inc
dec
jmp
in
mov
jp
movs
hlt
jb
xchg
add
xlat
inc
xlat
sub
xchg
sbb
cdq
mov
mov
mov
xor
xor
ret
pop
add
unpckhps
clc
xchg
jp
(bad)
pop
and
dec
es
loopne
adc
cdq
fild
ret
add
pop
loop
nop
out
jnp
fnsave
(bad)
xchg
rcl
sbb
add
jne
inc
xor
and
pusha
adc
cld
pop
in
ja
ss
add
xchg
xchg
mov
dec
push
mov
dec
mov
test
mov
aas
sub
ja
and
fcomp
ror
test
popf
das
test
fisttp
test
nop
mov
fwait
and
ffreep
leave
inc
xor
xchg
dec
jns
adc
lea
(bad)
mov
leave
dec
push
mov
xor
xor
nop
xchg
cmp
or
das
shl
adc
dec
or
dec
imul
inc
outs
mov
ss
xchg
out
xchg
push
std
fs
xchg
mov
mov
dec
inc
dec
push
mov
out
xor
aad
aam
lods
addr16
dec
es
cmp
sbb
mov
nop
(bad)
adc
retf
cmp
fisttp
xchg
imul
lahf
in
jl
adc
(bad)
adc
nop
xchg
pop
jb
cld
jge
cmp
stos
and
leave
out
dec
cmps
push
jmp
add
gs
mov
mov
(bad)
pop
pop
dec
arpl
jno
jmp
xor
pop
mov
cmp
and
pop
dec
sbb
cmp
dec
(bad)
xor
sbb
add
pop
and
lods
dec
cmp
js
out
ds
mov
inc
inc
inc
mov
and
and
addr16
adc
mov
jecxz
in
jae
lds
push
mov
push
out
pop
sub
ret
xchg
gs
ins
mov
xlat
(bad)
shr
cmp
xor
mov
mov
xchg
pop
xchg
inc
sub
add
bound
jle
pushf
cmp
pop
sbb
inc
inc
xor
ss
lods
call
pop
xlat
or
arpl
add
out
clc
jns
jne
test
fnstcw
pop
xor
inc
dec
pop
xor
push
inc
sahf
stos
mov
jbe
ja
sub
sahf
sub
(bad)
(bad)
adc
xchg
mov
adc
cmp
test
cmp
inc
add
push
jl
push
or
test
fcom
and
xchg
inc
call
adc
dec
jbe
fcom
bound
push
sar
(bad)
ins
(bad)
cmp
inc
je
inc
xor
pop
imul
pop
add
sbb
xor
inc
shl
loop
mov
cmp
(bad)
retf
and
jno
lea
test
mov
push
sub
sub
inc
pop
jmp
push
inc
xchg
sti
inc
out
adc
ins
es
mov
dec
sub
das
ins
or
mov
inc
sub
adc
ror
popa
adc
push
mov
dec
push
mov
stos
lahf
or
and
scas
rcr
sbb
dec
xlat
push
js
or
cmp
jecxz
loop
or
enter
cdq
push
jge
leave
mov
arpl
fadd
and
jae
mov
retf
push
stc
or
inc
int
mov
inc
or
pop
mov
jnp
adc
push
rol
ins
sbb
inc
cld
ret
xlat
mov
stc
mov
dec
arpl
xlat
les
ins
cli
cmps
or
cmp
mov
and
(bad)
ins
mov
out
add
movs
mov
mov
addr16
shl
mov
sar
iret
bound
dec
xor
icebp
fstp
iret
push
cs
repnz
hlt
jle
nop
ror
addr16
mov
aad
sbb
aas
or
fnclex
pop
add
push
push
mov
xchg
pop
mov
(bad)
mov
shr
into
aam
xchg
popa
fcom
stos
rcl
retf
cwde
mov
pushf
xchg
ins
aas
call
inc
mov
das
dec
xor
es
in
enter
cwde
xchg
or
shl
adc
hlt
mov
scas
int3
or
jmp
mov
add
sub
sub
jp
fiadd
mov
push
cmp
xor
and
add
sar
popa
xchg
imul
or
pushf
loop
je
into
and
jmp
loope
scas
rol
bnd
lock
xor
mov
jne
imul
xor
(bad)
xor
add
aaa
xchg
inc
sahf
cmp
(bad)
fld
sbb
mov
mov
sub
mov
ds
mov
inc
ja
aaa
pop
fnsave
imul
sbb
dec
jmp
arpl
aas
or
sbb
mov
push
mov
push
mov
mov
push
dec
fild
sahf
fsubr
outs
shr
xlat
xchg
(bad)
and
pop
retf
xchg
cmp
daa
cmp
pop
mov
xchg
jb
sub
inc
adc
outs
iret
test
mov
or
repnz
mov
iret
mov
in
in
inc
jns
movs
dec
push
outs
pop
leave
retf
lods
nop
pop
push
adc
imul
jmp
xchg
mov
lods
sbb
dec
dec
fsub
add
jo
jp
adc
adc
fldcw
inc
in
jno
mov
ror
inc
inc
clc
mov
bound
sub
aas
ss
add
xchg
xchg
and
aaa
jo
out
mov
push
mov
sub
nop
xor
outs
pop
pop
push
cmc
bound
xchg
je
mov
imul
add
mov
jo
cmps
push
mov
jno
inc
dec
scas
daa
pusha
pop
mov
pop
pop
(bad)
ss
mov
mov
mov
hlt
cmps
push
sub
adc
(bad)
adc
dec
call
xchg
add
scas
and
fmul
jno
cmp
mov
adc
jns
jne
jmp
ret
mov
int3
hlt
test
iret
mov
jae
imul
out
dec
pop
xor
idiv
push
inc
loopne
lods
jp
jb
sbb
pop
int
mov
or
inc
adc
hlt
inc
lock
inc
ror
dec
pusha
mov
out
jo
iret
vmaxpd
out
(bad)
lock
movs
push
js
mov
push
dec
bound
inc
clc
and
or
dec
cld
and
ss
push
ds
test
imul
jno
mov
xor
cdq
into
cmp
adc
sahf
outs
repz
and
lea
(bad)
fld
test
sub
movs
and
sbb
fisub
xchg
jo
in
popf
vsubpd
sbb
jg
sbb
in
shl
dec
retf
add
sbb
(bad)
dec
sub
xor
pop
scas
arpl
(bad)
imul
jge
or
mov
mov
repz
out
les
sub
sub
pop
pop
aam
mov
pop
loop
jmp
mov
aad
movs
mov
not
ds
(bad)
rcr
ds
call
popf
lea
mov
rcr
sub
pop
not
mov
xor
mov
pop
movs
jle
inc
pop
adc
retf
in
test
mov
lea
in
addr16
cmp
cld
out
(bad)
stc
iret
jg
repz
add
(bad)
out
(bad)
jge
ins
add
add
dec
inc
dec
inc
scas
inc
pusha
or
add
add
add
(bad)
(bad)
inc
add
add
add
add
add
add
jns
je
ins
cs
jb
ja
outs
addr16
push
gs
imul
xor
xor
inc
jne
je
jb
cmp
jb
ins
sub
push
jne
ins
imul
imul
bound
xor
data16
xor
fs
add
adc
gs
cs
jb
ja
outs
addr16
imul
add
popa
je
pop
add
add
add
add
add
lsl
add
rcl
add
mov
inc
or
add
or
add
add
add
add
or
add
add
pusha
outs
rol
add
add
inc
dec
inc
add
mov
or
popa
add
jo
pop
jae
add
ret
add
push
ret
add
outs
test
add
adc
inc
inc
push
pop
inc
in
xlat
add
add
scas
mov
dec
ja
dec
(bad)
cdq
scas
cdq
out
(bad)
mov
push
fstp
mov
cwde
frstor
icebp
in
repz
cmp
movs
clc
out
push
std
sbb
xor
aad
stos
or
in
xor
loopne
mov
sti
sbb
push
pop
mov
push
out
aaa
scas
int
int
retf
inc
das
ins
in
xchg
ror
out
call
div
aam
inc
rcr
push
mov
mov
push
xchg
mov
mov
and
call
jns
in
pop
push
outs
push
aaa
fld
push
add
adc
dec
iret
pop
je
cdq
neg
inc
jae
add
cwde
and
inc
xchg
xor
int3
sti
das
cmp
ret
cmp
call
sbb
mov
sub
cs
pop
mov
and
mov
pop
push
jg
push
popa
inc
(bad)
sub
mov
xor
xchg
and
sbb
and
xor
push
xchg
cld
test
fucom
movs
(bad)
cs
inc
jne
ds
call
ins
sbb
push
cwde
push
icebp
popf
nop
mov
hlt
jle
mov
sbb
or
xchg
jmp
sub
mov
div
loopne
or
pop
sub
shr
adc
sahf
nop
jp
leave
push
in
mov
sahf
dec
pop
or
dec
cmps
(bad)
call
jo
dec
pop
and
loope
adc
adc
and
ror
into
mov
inc
mov
imul
popf
and
mov
xor
sub
adc
js
mov
out
imul
add
mov
mov
cwde
and
bound
pop
xlat
or
jmp
fmul
mov
adc
shl
lods
sahf
pushf
mov
sar
lods
dec
jmp
jmp
mov
pop
cmp
push
loop
lds
jp
pop
jo
cmp
xor
and
push
cmp
outs
std
jge
icebp
push
and
sub
and
outs
push
outs
aas
sti
jnp
iret
add
mov
das
dec
daa
push
fisttp
mov
idiv
cmp
push
or
sub
mov
outs
mov
inc
mov
test
push
in
dec
cmp
mov
and
loop
sti
loopne
push
add
sti
lahf
movs
inc
pop
inc
xor
call
xor
sbb
xchg
inc
jmp
shl
xor
out
mov
pushf
jmp
sbb
push
sahf
es
push
fs
in
mov
mov
shl
jmp
in
push
pop
call
inc
pop
push
jl
and
mov
jle
pusha
in
(bad)
in
jno
mov
xchg
and
dec
jae
and
xlat
and
mov
pushf
packsswb
pop
inc
ret
mov
xchg
xor
jmp
jns
fistp
jb
jg
movs
loopne
ja
clc
rcl
icebp
xchg
outs
and
mov
xchg
add
cmp
sbb
jnp
jbe
xor
loopne
xlat
and
scas
jns
rcr
ins
call
ret
sub
dec
mov
retf
mov
test
rcr
fs
hlt
fmul
imul
mov
jmp
test
xor
mov
pushf
add
scas
lods
aam
mov
aaa
mov
and
std
mov
xchg
repz
pusha
hlt
inc
ret
inc
inc
dec
jecxz
ror
test
fwait
adc
ficomp
mov
popf
dec
xchg
ror
fs
cmc
retf
jmp
repnz
sar
hlt
pop
sub
jl
jge
adc
dec
mov
ja
ds
xchg
movs
inc
jo
mov
or
push
lods
int
outs
adc
mov
or
xchg
fwait
lods
movs
outs
add
cmp
push
dec
int3
jl
lock
ret
loope
pop
inc
icebp
je
clc
adc
mov
jmp
xor
push
mov
rcr
mov
mov
jb
imul
jo
in
outs
jmp
in
pop
ret
push
mov
pop
cmp
sub
pop
pushf
inc
out
addr16
in
das
pop
in
xchg
jp
sbb
test
dec
and
fst
iret
push
adc
mov
pop
popf
jp
jp
jp
stos
xlat
int3
push
clc
sub
outs
(bad)
cs
add
pop
inc
mov
jle
and
jo
pop
adc
sar
xchg
xchg
mov
test
lock
aaa
adc
test
inc
jmp
cmp
sub
rol
pop
cwde
dec
rcr
aas
cmp
mov
mov
lahf
sub
fcomp
mov
dec
div
push
iret
sub
in
lods
mov
test
mov
fidiv
and
xor
xor
push
dec
movs
or
mov
loopne
out
pop
pop
and
sub
popa
mov
mov
jp
jno
(bad)
std
xor
mov
iret
sbb
mov
mov
out
cmp
dec
cmp
add
aas
mov
push
dec
aas
ja
outs
adc
inc
out
and
fldcw
and
pusha
jp
out
mov
leave
inc
push
iret
in
xchg
mov
mov
sub
fld
daa
jge
xchg
fisubr
call
fidivr
sar
adc
jmp
cs
jae
add
out
(bad)
cld
dec
enter
pop
imul
mov
sub
xchg
aam
outs
mov
mov
jbe
mov
sub
cmp
mov
mov
sub
mov
fdivr
jecxz
xor
mov
ja
cli
cmp
jnp
jno
outs
(bad)
xchg
dec
add
cld
cmps
xchg
mov
sbb
xor
sbb
not
jnp
sti
mov
mov
and
pop
add
aam
sub
enter
scas
and
lea
or
or
push
xchg
loope
in
dec
in
mov
into
outs
adc
cmp
imul
mov
push
icebp
nop
push
rol
rcr
adc
xchg
movs
sar
or
push
add
popa
mov
shr
push
cmp
mov
jle
push
jge
sbb
addr16
adc
lods
mov
repz
jb
outs
in
popa
adc
fincstp
fist
mov
mov
shr
jecxz
enter
adc
jp
scas
sbb
jmp
pop
sbb
pushf
pop
dec
mov
aas
xchg
jns
mov
mov
push
cmp
lods
sbb
mov
cs
iret
rol
push
pop
fwait
rcl
idiv
jmp
add
cld
dec
xor
xor
jns
enter
scas
lahf
mov
hlt
pushf
mov
cmc
pop
and
pop
bound
loop
not
dec
mov
xchg
pop
call
int
xchg
call
inc
ret
sbb
and
adc
fdivr
xor
push
inc
mov
xchg
and
and
push
or
xor
je
adc
jmp
test
jo
ret
cmp
dec
mov
xor
mov
out
aas
or
xchg
inc
scas
xor
ja
pop
mov
mov
xor
rol
jle
sbb
ins
test
mov
call
inc
cmps
jl
repnz
push
xchg
sbb
push
mov
and
add
sub
xlat
xchg
jecxz
mov
sbb
dec
or
cmp
mov
lods
dec
add
or
in
pop
and
push
jmp
fwait
add
xchg
test
jecxz
xor
pop
push
shl
faddp
pop
sbb
push
adc
cmp
in
fisubr
sbb
ds
cmp
popf
sbb
pusha
mov
(bad)
aam
or
aam
and
cs
push
pop
push
mov
test
sti
jmp
mov
pusha
mov
xchg
popf
mov
pop
pop
xor
das
xor
cmp
outs
pop
mov
scas
dec
lahf
mov
fcom
adc
xor
push
das
aaa
jnp
cld
cmp
pop
adc
les
in
stos
cmps
lahf
ss
popa
aam
push
out
pop
pop
adc
push
pop
ror
pop
outs
bnd
sbb
xchg
es
push
outs
inc
lods
pop
push
sub
pop
ret
ror
icebp
stos
push
(bad)
dec
or
and
mov
sub
sbb
xchg
mov
cmp
in
in
pushf
and
loopne
push
mov
add
ror
clc
adc
dec
cmps
and
and
dec
popf
dec
icebp
mov
pop
pop
sub
xor
xor
pop
xchg
repnz
loopne
xchg
add
add
and
mov
inc
ss
inc
push
or
daa
xlat
fwait
mov
xlat
pop
scas
cmp
shr
push
cmp
cmp
cmp
imul
js
sahf
repnz
cmp
pop
jo
(bad)
sub
addr16
icebp
clc
jnp
sbb
dec
out
or
mov
in
adc
dec
jnp
cmp
mov
icebp
retf
sbb
jns
push
mov
sti
mov
scas
test
outs
das
cli
loope
inc
pusha
enter
jbe
cmp
mov
daa
(bad)
and
fmul
cmp
push
xor
adc
(bad)
xor
arpl
fistp
xchg
mov
add
jbe
pop
mov
dec
sub
inc
cmp
dec
iret
dec
leave
dec
sbb
dec
fild
js
test
add
fiadd
mov
jbe
loope
test
mov
jne
cli
frstor
rcr
fild
xchg
sub
hlt
idiv
and
lock
outs
cmps
mov
into
pushf
or
add
pop
in
jl
inc
(bad)
rol
pop
lahf
xchg
mov
push
mov
retf
outs
aad
(bad)
cmp
ins
ins
or
dec
dec
loopne
std
sbb
xchg
mov
movs
mov
adc
out
cmp
sub
(bad)
(bad)
ret
jl
ins
movs
push
mov
add
adc
pop
adc
inc
mov
and
cmp
xchg
xchg
scas
jo
bnd
adc
push
leave
mov
push
fsubp
sub
xor
push
(bad)
cdq
test
mov
cmp
inc
and
sahf
xor
mov
ss
sti
iret
fucomip
push
imul
mov
fwait
push
out
popa
scas
fstp
rcl
xor
test
cmp
and
sub
mov
(bad)
sldt
fwait
ins
mov
and
popf
mov
int3
pop
loope
cmp
ret
add
test
jo
lods
mov
leave
push
adc
push
cmp
sar
bound
cli
call
iret
xchg
gs
push
and
ins
fs
aas
mov
xor
ins
push
icebp
retf
adc
pop
loope
sub
pop
xchg
cmps
enter
pop
mov
(bad)
mov
pop
aad
in
or
jb
cwde
aas
jmp
inc
cmp
mov
bound
cmp
xor
mov
cmc
lea
popa
dec
xchg
cld
jb
dec
pop
sub
aad
pop
sub
out
retf
in
push
imul
pop
js
ror
test
xchg
neg
push
fwait
mov
and
or
das
punpckldq
loope
push
in
mov
and
pop
or
cmp
sahf
mov
out
in
mov
pop
push
xchg
push
jg
xor
shr
jp
xchg
ins
loopne
lahf
aad
in
sub
daa
add
adc
clc
mov
jnp
xor
ror
sub
jb
push
dec
mov
ror
xor
pop
adc
inc
mov
cmp
ror
mov
iret
mov
mov
loope
enter
movs
jb
imul
and
lock
sub
movs
cld
arpl
outs
sub
adc
ret
sub
cld
movs
rcl
add
das
retf
xchg
mov
cdq
fisubr
dec
stc
add
push
adc
adc
jge
scas
sar
bound
loop
cmp
pop
and
xchg
(bad)
retfw
into
mov
movs
pop
(bad)
loopne
lods
dec
repz
jle
fstp
das
push
mov
jbe
sbb
mov
stc
repnz
mov
mov
mov
out
scas
cmp
ins
adc
cmc
dec
sub
stc
fst
adc
leave
cli
movs
icebp
daa
and
stc
enter
aas
cld
inc
iret
lock
outs
sbb
inc
inc
cld
mov
add
mov
jmp
sbb
mov
retf
inc
dec
mov
push
(bad)
jae
inc
jne
inc
adc
push
retf
ja
sbb
push
daa
xchg
ins
or
(bad)
in
xor
hlt
ins
fist
into
stos
lock
mov
mov
out
or
dec
fsub
sbb
dec
lea
inc
shr
aad
retf
add
and
or
popa
test
aam
or
sub
sbb
cdq
retf
or
dec
cmps
js
repz
push
pusha
popf
dec
stc
retf
xchg
mov
push
push
sar
jl
mov
xlat
pop
rcl
push
inc
sub
imul
dec
mov
dec
xchg
lock
jmp
push
ins
xor
push
lods
aas
sbb
cmp
xchg
cmp
push
adc
les
xchg
(bad)
jp
cmp
movs
dec
fcom
pop
mul
push
dec
daa
in
call
mov
scas
or
mov
lock
rcl
jecxz
xchg
in
sub
pop
cwde
aad
daa
xchg
neg
call
xchg
inc
icebp
(bad)
es
neg
and
xor
and
push
outs
inc
aad
(bad)
adc
loop
or
jl
sar
mov
xor
(bad)
in
sbb
dec
add
cmovp
pop
repnz
stc
xor
scas
ja
sbb
push
ffreep
(bad)
int3
and
add
push
outs
(bad)
lahf
sar
stos
jae
gs
fs
and
pop
in
cmps
xchg
or
hlt
sbb
inc
mov
outs
xchg
jp
pop
loopne
and
jg
xor
(bad)
dec
jmp
enter
rcr
push
mov
xlat
mov
push
xor
mov
cmp
jns
pop
xchg
and
xchg
push
(bad)
(bad)
scas
mov
mov
jl
enter
dec
jne
jno
(bad)
loopne
mov
les
adc
pop
cmp
xchg
cmp
call
push
sub
cwde
xchg
dec
push
push
(bad)
mov
xchg
cwde
stc
sub
ja
test
mov
jbe
sub
sub
retf
ins
jbe
test
mov
mov
jno
ss
sub
sub
(bad)
loope
scas
mov
xor
(bad)
das
into
inc
in
and
jmp
mov
xchg
int
xchg
mov
mov
mov
inc
inc
in
mov
pop
stc
or
rcl
jmp
jl
xor
adc
adc
repnz
repnz
out
test
addr16
test
sub
dec
and
out
mov
or
pop
test
imul
jne
mov
jmp
add
xchg
loopne
pop
inc
(bad)
mov
mov
aad
jnp
hlt
addr16
mov
call
and
arpl
fistp
into
in
fadd
es
fidiv
xor
fisubr
xchg
gs
out
jp
int
add
mov
jae
sbb
ret
test
iret
adc
pop
or
aaa
gs
shl
ss
fcom
sub
(bad)
rcl
jmp
ret
mov
pop
fwait
mov
xor
popf
cmp
pop
mov
jmp
aaa
aad
mov
fcom
sbb
add
cld
repz
aas
(bad)
cld
repz
aas
jmp
or
or
add
add
dec
inc
dec
inc
scas
inc
pusha
or
add
add
add
(bad)
(bad)
inc
add
add
add
add
add
add
jns
je
ins
cs
jb
ja
outs
addr16
push
gs
imul
xor
xor
inc
jne
je
jb
cmp
jb
ins
sub
push
jne
ins
imul
imul
bound
xor
data16
xor
fs
add
adc
gs
cs
jb
ja
outs
addr16
imul
add
popa
je
pop
add
add
add
add
add
lsl
add
rcl
add
mov
inc
or
add
or
add
add
add
add
or
add
add
pusha
outs
rol
add
add
inc
dec
inc
add
mov
or
popa
add
jo
pop
jae
add
ret
add
push
ret
add
outs
test
add
adc
inc
inc
push
pop
inc
in
aam
and
ret
add
shl
xor
ret
cdq
cwde
cwde
cmp
dec
out
daa
daa
aaa
in
hlt
jmp
addr16
push
out
popf
ss
dec
cmp
stc
jg
(bad)
mov
add
push
jae
push
add
ja
gs
fucom
and
dec
mov
mov
fs
and
mov
stc
cmps
cmps
test
fist
push
dec
retf
mov
scas
or
sbb
pop
pop
sub
push
test
gs
fs
lods
jb
jp
push
push
adc
test
and
or
in
mov
mov
jno
mov
pop
leave
push
xchg
fisubr
out
pop
das
adc
shl
sahf
jo
frstor
mov
push
jg
imul
dec
pop
into
dec
aas
stos
inc
aas
jl
rol
lods
push
mov
sbb
adc
pop
jnp
std
fs
sub
mov
add
sub
aaa
ss
sub
cwde
push
pop
fadd
loopne
jmp
pop
xor
add
inc
cmp
out
loop
add
and
outs
inc
das
test
sar
cmp
sub
and
xor
cs
fdiv
outs
mov
xchg
pop
pop
fdecstp
pusha
pop
adc
repz
jno
test
cwde
pop
sahf
ret
cmp
rol
rcl
and
or
pop
push
jmp
jle
fidivr
or
and
(bad)
xlat
add
pop
xchg
mov
(bad)
jp
xchg
loop
aas
imul
fsub
(bad)
pop
and
xor
loope
loope
sub
imul
xchg
scas
mov
enter
add
scas
cmp
dec
gs
mov
int3
jmp
in
ins
dec
(bad)
outs
xor
ret
sbb
rol
adc
outs
int3
cmp
(bad)
(bad)
test
jle
mov
sar
lock
inc
cwde
mov
and
adc
test
jns
add
jno
mov
xor
pop
xchg
cdq
mov
imul
sti
xchg
dec
in
retf
adc
and
cwde
xor
push
out
pusha
jecxz
sar
jl
stc
sbb
imul
mov
stos
stos
ret
inc
mov
popf
jbe
sbb
jecxz
es
cmp
out
stos
loopne
cmp
popf
outs
movs
clc
(bad)
jmp
jnp
sbb
loope
imul
loop
cmp
xchg
cmc
nop
shr
cmovg
mov
rsm
mov
cmp
out
(bad)
mov
xor
push
loopne
das
mov
arpl
fwait
dec
xor
mov
fist
test
pusha
das
fcomp
(bad)
jb
cmc
push
test
(bad)
fadd
add
rcr
mov
xlat
call
ret
mov
push
xor
(bad)
ins
das
fwait
repz
pusha
and
lds
je
xor
xor
mov
xor
call
jecxz
push
scas
sahf
shr
fidivr
adc
mov
in
or
and
div
in
cmps
lods
xor
and
pop
and
scas
cmp
adc
or
repz
push
xlat
dec
add
sar
rcl
mov
xlat
cmp
test
es
xchg
xor
xor
addr16
sub
xchg
dec
fwait
mov
mov
pop
xor
stos
call
jecxz
jnp
and
dec
fnsetpm(287
int
sub
fimul
fild
loop
mov
dec
fnstcw
fsub
jno
stc
retf
popa
xchg
cld
and
test
(bad)
jg
and
cmp
jmp
ds
mov
aad
cmc
push
sub
mov
mov
jle
loopne
push
pop
adc
test
mov
ins
sbb
mov
pop
jle
imul
jg
cmp
adc
xchg
xchg
sbb
leave
sub
outs
push
mov
retf
out
sbb
sub
lods
fdiv
aad
fcmovnb
mov
mov
jle
test
sbb
fistp
out
call
cmp
out
call
shl
das
cmc
int
jl
xchg
mov
jg
movs
or
pop
and
cmp
pop
test
add
push
loop
sbb
(bad)
or
scas
test
sub
lods
ins
cmp
add
leave
cli
mov
leave
je
sti
mov
clc
pop
jmp
dec
sub
jmp
daa
jmp
mov
mov
out
mov
loop
mov
inc
adc
loope
jecxz
adc
xchg
pop
cmp
das
mov
je
jae
test
outs
(bad)
fcom
in
mov
jnp
xchg
sti
mov
cs
ja
xchg
dec
and
shl
push
addr16
mov
cmc
xchg
cmp
lods
sub
in
fadd
shl
(bad)
call
lock
mov
aas
add
pop
dec
jg
jb
xchg
jecxz
xchg
stc
cmps
daa
xchg
fisubr
stos
or
and
xchg
mov
inc
jb
pushf
xor
bound
call
(bad)
popa
int3
jno
jbe
mov
sub
addr16
xor
pop
cdq
pop
sahf
call
push
mov
pop
aad
imul
nop
jb
mov
add
(bad)
and
lds
pop
and
jmp
dec
mov
loope
stos
jno
mov
inc
add
jp
out
mov
sbb
shl
xor
ficom
imul
dec
dec
adc
je
xchg
call
in
test
jns
mov
add
mov
out
xchg
pop
(bad)
mov
jmp
inc
jl
dec
aad
inc
jnp
nop
add
add
out
dec
or
or
mov
jbe
popa
mov
in
fwait
pop
retf
push
inc
add
xor
test
dec
movs
mov
mov
popf
and
and
jmp
cmp
push
rol
sub
call
(bad)
xor
jle
cmc
repnz
sub
xchg
inc
aam
call
fisubr
std
fxch
push
fwait
mov
mov
inc
jmp
push
cmc
arpl
mov
cwde
out
xor
xor
out
mov
push
or
xchg
dec
lds
int3
test
dec
in
jl
mov
or
out
inc
push
jo
lods
dec
mov
ins
jle
outs
std
es
das
cmp
cmp
clc
pop
or
stos
pop
ds
inc
pop
dec
xor
cmp
xchg
push
(bad)
test
dec
mov
mov
mov
loopne
cmp
in
repnz
pop
rcr
jle
mov
mov
jo
sub
mov
into
es
jmp
jno
test
xchg
jge
sub
xor
jmp
out
or
aam
stc
and
fcom
cld
and
add
lods
dec
jnp
movntps
xor
xor
jl
mov
cmps
and
(bad)
stos
jne
jmp
pop
xchg
or
dec
xchg
outs
or
shl
dec
ret
pop
adc
jecxz
out
cs
pop
in
xchg
push
imul
jb
outs
addr16
push
xchg
jle
inc
ret
sub
xchg
cmp
or
out
(bad)
sti
in
mov
jb
adc
pop
add
outs
jno
scas
push
in
mov
pop
in
xor
enter
pop
adc
mov
sahf
xor
std
mov
out
push
data16
sub
sahf
cmp
mov
in
push
dec
pop
or
add
sub
push
push
adc
adc
in
es
mov
jmp
fdivr
inc
rol
sbb
(bad)
cli
push
adc
cmp
sub
aaa
ss
std
dec
jo
rep
shl
not
mov
cwde
sbb
fcomi
out
fist
and
pop
mov
call
jno
sbb
cmps
push
aaa
mov
popaw
and
pop
movs
dec
icebp
adc
jnp
add
scas
pop
inc
leave
jnp
push
(bad)
ins
inc
out
test
shr
adc
mov
dec
in
xor
lea
inc
push
push
mul
dec
jg
wrmsr
pop
ret
sub
mov
xchg
retf
inc
jge
jmp
mov
fmul
xor
outs
test
adc
dec
and
sbb
pop
ror
les
mov
mov
daa
inc
and
imul
sub
movs
mov
jp
inc
in
jle
adc
movs
jge
push
out
pop
rol
lods
mov
cmps
lea
xchg
cdq
and
jecxz
sub
call
adc
add
mov
(bad)
pop
mov
jp
out
popf
shl
scas
xchg
mov
push
enter
sub
test
lahf
retf
cmp
push
outs
movs
pop
out
or
push
es
ins
imul
dec
in
out
lock
stc
inc
aas
pop
push
xchg
stos
lods
pop
shl
or
pop
xor
cld
dec
repz
les
sub
mov
sahf
loope
xlat
popa
push
jb
xchg
test
aad
test
loop
mov
sbb
std
sbb
enter
push
or
mov
or
sbb
hlt
cmps
sbb
sub
in
lock
pop
or
test
sbb
test
adc
pop
dec
enter
inc
movs
stos
pop
rcl
jmp
mov
pop
adc
jge
rol
shl
dec
mov
sti
outs
mov
cmp
(bad)
mov
fiadd
jmp
cli
adc
push
sub
idiv
in
call
xor
jmp
jne
mov
retf
dec
mov
into
ds
xlat
mov
test
xchg
pop
adc
adc
sub
dec
lods
dec
pop
sub
or
sub
mov
dec
pop
js
push
add
call
popa
xchg
mov
push
icebp
popf
sti
pop
gs
sbb
push
je
xchg
sbb
movs
arpl
retf
mov
fst
jp
sahf
cld
xchg
repnz
mov
mov
mov
cmps
mov
fadd
(bad)
fucomip
inc
cmp
mov
test
sahf
hlt
call
mov
(bad)
out
(bad)
out
push
dec
add
inc
(bad)
repnz
xchg
out
in
jmp
and
icebp
div
imul
shl
add
xor
ror
mov
fistp
(bad)
into
(bad)
mov
mov
rcr
mov
aaa
inc
cmps
stos
das
cmp
cmp
xchg
imul
pop
mov
sub
dec
lods
xchg
dec
mov
ins
add
add
outs
or
mov
sbb
movs
adc
les
ds
xor
les
inc
cmp
mov
xor
mov
dec
(bad)
xchg
or
mov
mov
leave
push
xchg
add
push
pop
outs
addr16
call
and
into
pushf
pop
in
xlat
repnz
sub
push
pop
pop
mov
xchg
cmp
dec
sub
inc
adc
add
cwde
in
xor
arpl
scas
add
sub
and
push
stc
push
pop
add
fst
jb
or
fldcw
aad
je
in
clc
hlt
icebp
ficomp
mov
adc
stos
jo
bound
mov
pop
and
push
mov
sub
push
fmulp
sbb
dec
in
pop
cmp
in
int3
mul
or
or
loope
sub
xchg
pop
sbb
dec
sahf
(bad)
clc
call
dec
mov
mov
push
cmp
jg
or
mov
dec
sbb
dec
jae
xchg
mov
xchg
repz
pop
out
fs
mov
into
nop
and
mov
sbb
movs
out
(bad)
popa
call
push
int
push
fld
sub
(bad)
cdq
daa
cmps
(bad)
xlat
lock
and
out
jmp
adc
pop
jne
dec
outs
(bad)
loopne
fcmovnb
dec
icebp
enter
pop
mov
pop
mov
mov
or
push
test
inc
push
aad
mov
mov
add
dec
inc
mov
in
fild
fcmovnb
sub
data16
mov
popa
fild
dec
std
scas
dec
ficomp
jg
add
push
and
dec
repz
ficomp
pop
cmp
fcom
inc
fwait
jmp
dec
push
in
mov
sbb
ins
or
cmp
outs
ret
inc
push
jp
cld
fdiv
fisub
int3
aaa
xor
or
and
ins
out
sbb
adc
les
es
nop
sbb
retf
stc
jp
iret
(bad)
jecxz
stos
jns
(bad)
ss
sub
mov
(bad)
pop
js
mov
leave
cwde
pop
xchg
inc
inc
add
jle
push
pop
(bad)
jmp
ss
(bad)
mov
xchg
xchg
push
mov
cwde
popa
f2xm1
cs
fsubr
(bad)
out
xchg
cmp
pop
call
jge
call
test
add
add
inc
outs
es
and
fdivr
add
outs
xchg
jmp
imul
ins
addr16
dec
jecxz
dec
(bad)
into
cmp
adc
sub
jno
push
and
(bad)
sub
cmp
dec
cli
adc
sbb
fwait
xlat
mov
jecxz
pop
dec
in
push
call
and
mov
aam
push
les
and
out
scas
pop
sahf
cdq
mov
pop
leave
(bad)
cld
jmp
cli
mov
push
shr
mov
ret
or
stos
jb
imul
loopne
outs
xor
xchg
dec
mov
popa
mov
gs
dec
cmp
adc
outs
sar
adc
fwait
add
addr16
jnp
jns
or
push
inc
ret
inc
(bad)
jne
sbb
int
mov
push
jge
dec
fwait
sbb
sbb
aaa
stos
fwait
mov
and
popa
call
cmp
mov
or
jmp
rcr
sub
jo
sbb
fadd
es
ror
push
out
dec
mov
inc
outs
lods
mov
push
sbb
stos
out
add
pop
mov
jle
nop
inc
cwde
add
mov
outs
add
out
(bad)
repz
retf
lahf
pop
test
mov
pop
shl
mov
sub
xchg
rol
dec
push
and
push
mov
(bad)
inc
in
cld
push
inc
sub
xor
movs
xchg
push
fwait
test
ins
outs
mov
pop
cmp
sub
push
push
movs
mov
out
imul
std
xchg
ret
cmp
lahf
push
sbb
inc
idiv
lods
out
loopne
rcl
jge
aaa
loopne
and
add
das
or
loop
dec
cs
xchg
or
sub
sub
scas
out
xchg
pop
mov
cmp
lea
add
jecxz
jae
dec
sub
sbb
loope
inc
cmps
push
mov
lods
test
dec
xchg
xchg
adc
std
lock
js
cmp
movs
mov
push
xchg
cmp
mov
bound
and
ret
lahf
inc
sbb
adc
jmp
and
cmp
iret
test
jp
repnz
fcmovbe
pop
lea
pop
in
adc
repz
popa
pop
pop
sbb
pop
sub
sub
push
clc
je
lods
inc
test
lds
pop
shl
aad
xchg
rcl
adc
pop
push
xor
movs
sub
into
movs
pop
ja
popa
in
pushf
push
or
rol
pop
outs
test
mov
daa
jge
rcr
xlat
std
and
xchg
icebp
cs
and
lds
into
and
jo
cmc
cmp
push
push
add
mov
dec
or
rol
mov
inc
xor
sbb
adc
jl
push
mov
es
xlat
(bad)
and
cmps
mov
into
mov
jae
ins
ss
test
mov
mov
test
sub
loope
(bad)
ficom
jmp
ins
enter
arpl
mov
int
imul
ficomp
mov
pop
lods
aad
sub
push
push
in
in
popf
outs
jno
outs
cmps
addr16
pusha
jnp
inc
cmps
push
pop
mov
ror
cmps
mov
test
sbb
outs
add
repz
aas
(bad)
cld
repz
aas
(bad)
cld
mov
sub
pop
xor
add
add
dec
inc
dec
inc
scas
inc
pusha
or
add
add
add
(bad)
(bad)
inc
add
add
add
add
add
add
jns
je
ins
cs
jb
ja
outs
addr16
push
gs
imul
xor
xor
inc
jne
je
jb
cmp
jb
ins
sub
push
jne
ins
imul
imul
bound
xor
data16
xor
fs
add
adc
gs
cs
jb
ja
outs
addr16
imul
add
popa
je
pop
add
add
add
add
add
lsl
add
mov
mov
inc
or
add
or
add
add
add
add
or
add
add
pusha
outs
rol
add
add
inc
dec
inc
add
mov
or
popa
add
jo
pop
jae
add
ret
add
push
ret
add
outs
test
add
adc
inc
inc
push
pop
inc
in
rol
fmul
add
loopne
mov
lods
movs
sub
ret
jg
xchg
imul
sti
repnz
pop
(bad)
jb
pop
in
repz
js
loope
mov
sbb
or
sub
or
cs
xchg
lods
(bad)
(bad)
lods
mov
ins
lods
fs
mov
es
aas
adc
pop
xchg
jg
shl
int
xchg
mov
loopne
fld
push
push
pop
iret
dec
fdivr
(bad)
das
(bad)
aas
jmp
and
mov
aas
ins
sbb
sub
and
push
fidiv
adc
sbb
shl
dec
loope
add
pushf
aam
adc
sbb
mov
or
dec
push
into
xlat
inc
aas
jle
or
jle
sbb
inc
jle
cdq
out
mov
xchg
out
and
jge
mov
ret
leave
cmp
jae
dec
or
and
test
sar
xlat
push
cmps
mov
in
inc
fisttp
aam
ror
xchg
jle
push
or
mov
inc
fsub
pusha
out
xchg
add
lods
test
leave
push
popa
adc
mov
mov
test
out
test
out
cld
xor
xchg
jecxz
movs
(bad)
in
fstp
pop
mov
sbb
or
arpl
not
jmp
jg
sbb
jb
sbb
push
aad
mov
xchg
adc
sbb
loope
ret
ins
mov
shl
mov
dec
adc
jo
mov
enter
xor
jo
mov
sub
cs
cmp
mov
cs
mov
cmp
mov
rcr
add
mov
jns
ins
pop
lock
(bad)
enter
icebp
cmp
pop
ja
sub
dec
cmp
lods
out
xchg
test
lods
stos
mov
inc
nop
add
mov
mov
nop
push
(bad)
or
aas
dec
dec
push
cmp
jecxz
call
mov
in
outs
dec
out
jb
cmp
xchg
pop
pop
scas
mov
iret
inc
nop
pop
(bad)
loopne
fcom
mov
xor
push
test
ror
sub
imul
mov
xor
shr
jo
dec
adc
mov
mov
xor
push
(bad)
(bad)
jo
enter
das
add
in
cmc
push
pop
daa
fnstenv
(bad)
add
fst
sub
icebp
mov
repz
inc
(bad)
pop
mov
jecxz
pop
push
push
cld
popf
add
cmp
dec
xor
inc
jb
jne
dec
jp
call
movs
daa
dec
scas
cwde
lods
pop
jo
inc
je
out
and
cmp
fidiv
not
sbb
mov
and
pop
lahf
add
xlat
scas
mov
imul
add
jnp
aaa
les
push
(bad)
es
lahf
sub
cld
mov
js
int3
xchg
xor
aas
loope
xchg
xchg
push
outs
mov
mov
outs
das
jl
es
popf
aaa
in
outs
xchg
cmps
pusha
mov
push
pop
movs
test
cdq
mov
fdivr
and
in
xchg
fistp
push
lds
bound
out
jp
push
pop
rol
pop
js
mov
jbe
xchg
(bad)
push
inc
pop
retf
imul
jp
inc
sbb
jecxz
inc
dec
mov
iret
sbb
xor
cwde
aas
retf
loop
jl
in
loope
ins
jb
fucomi
in
call
pop
bound
into
int
leave
sbb
mov
mov
mov
xor
es
rol
retf
jnp
lea
dec
leave
cwde
leave
mov
mov
daa
loop
ins
adc
add
mov
ins
xor
rol
gs
jns
repz
sar
lahf
adc
les
jmp
das
inc
pop
mov
shl
aam
ins
jbe
retf
pop
bound
mov
mov
mov
push
mov
xor
pop
xor
imul
dec
aam
sahf
pop
popf
sub
loop
test
mov
cmp
push
mov
ror
sub
mov
xor
jecxz
or
aam
out
loopne
adc
or
test
jns
and
call
adc
sbb
(bad)
mov
out
daa
dec
add
or
sub
inc
xchg
inc
pop
mov
pop
xchg
xchg
add
stos
xlat
mov
cmp
jmp
fisubr
dec
(bad)
(bad)
jp
pop
xor
xchg
push
jb
aaa
pop
ss
and
dec
in
xchg
or
mov
rcr
hlt
(bad)
and
or
in
(bad)
out
dec
outs
data16
int3
ss
in
outs
push
sar
das
sub
iret
int
dec
xchg
adc
mov
pop
inc
cmp
inc
sub
enter
push
ror
add
test
jo
sti
push
aad
sti
imul
enter
dec
mov
mov
xchg
outs
cmp
call
nop
pop
cmp
push
sbb
loopne
(bad)
test
out
out
adc
mov
loopne
push
jb
outs
or
out
adc
xor
mov
inc
sbb
add
push
pop
or
cli
xchg
or
mov
gs
fwait
and
dec
popa
aas
pop
hlt
gs
pop
ja
mov
and
imul
hlt
fmul
xchg
dec
cmp
pop
clc
sub
cmp
fsubr
fidivr
xchg
and
addr16
and
dec
and
retf
sbb
in
gs
mov
je
(bad)
xchg
push
mov
add
imul
mov
test
in
dec
or
sbb
icebp
imul
jbe
pop
sub
mov
sub
ror
fst
out
jno
mov
mov
and
fdivr
jno
pop
mov
and
pop
fwait
cmps
add
mov
sahf
pop
(bad)
sbb
neg
fild
xlat
adc
daa
or
and
popa
xor
sub
sub
push
retf
or
nop
lahf
sub
aas
ja
nop
arpl
jo
movs
mov
push
in
cdq
cmp
bound
cdq
ins
push
xor
out
jge
(bad)
mov
sub
or
pop
clc
push
and
cs
fimul
leave
and
enter
mov
jge
mov
pop
fisub
mov
popf
sti
sub
xchg
pusha
rol
dec
dec
test
aad
ficomp
adc
and
mov
push
fmul
or
or
mov
pop
pushf
pop
push
sbb
jo
add
out
enter
jmp
add
loop
(bad)
pop
dec
leave
ss
popa
xor
cmps
das
cwde
and
stos
push
mov
or
aas
xchg
test
inc
pop
and
mov
pop
shl
arpl
imul
jl
adc
mov
push
mov
lock
and
xor
mov
pop
les
pop
jne
cmc
test
xchg
xchg
inc
loop
adc
ins
sbb
rcl
std
jge
cmp
fst
shr
loope
shl
cli
dec
jne
jmp
aam
cs
sub
(bad)
imul
stos
arpl
icebp
gs
inc
add
aam
out
or
in
cdq
xchg
sub
clc
sub
outs
push
cmp
call
jnp
push
(bad)
or
repz
aas
mov
sar
push
ins
xlat
push
fs
test
shl
xchg
inc
push
lods
shr
shl
ret
gs
loop
and
or
dec
push
jge
test
ins
ret
stc
stos
or
jecxz
ins
or
fs
icebp
mov
fcmovnbe
ds
dec
add
das
xor
mov
sub
jge
inc
and
repz
lods
jb
out
jnp
xchg
mov
(bad)
push
mov
scas
int3
push
jmp
mov
xor
ror
test
sbb
shl
hlt
cmps
xor
hlt
cmp
xor
outs
mov
cmp
mov
inc
mov
push
pushf
neg
ret
shl
outs
rcr
mov
or
rcl
hlt
clc
jmp
(bad)
cld
xor
jne
jmp
call
push
sbb
pop
mov
push
and
push
jne
xchg
jnp
aas
pop
loop
cmp
xchg
out
dec
mov
hlt
mov
in
fidivr
pop
cmp
fimul
adc
ror
mov
and
pop
pop
mov
sbb
enter
mov
clc
test
repnz
leave
jmp
dec
dec
inc
dec
mov
xchg
or
popf
outs
push
and
in
pop
jg
rcr
xchg
push
outs
jne
lods
outs
sahf
cmc
out
pop
es
sbb
popa
test
in
rol
inc
inc
pusha
or
aad
das
pop
inc
jg
jb
(bad)
xor
jl
pop
clc
std
mul
ins
fisub
aam
aaa
mov
mov
sub
out
push
mov
ins
xchg
xor
cli
es
mov
dec
inc
jg
mov
pushaw
iret
sbb
xchg
ins
pusha
push
xor
call
and
cmp
fisub
pop
or
push
pop
xor
jmp
(bad)
fidiv
sub
sbb
aaa
retf
data16
inc
(bad)
pusha
jbe
loope
pop
je
mov
and
jge
jne
fisub
push
pusha
push
jge
pop
mov
fcomp
daa
clc
jns
data16
dec
out
mov
cmp
push
mov
int
mov
or
sub
jle
adc
outs
mov
(bad)
mov
jbe
cmc
dec
inc
mov
les
ds
inc
xor
jp
ret
int
xchg
fisttp
jl
je
sbb
mov
js
pushf
loop
push
push
mov
push
hlt
xchg
rcl
iret
xchg
cmp
addr16
push
inc
push
cli
cmp
jmp
clc
std
fdiv
in
test
(bad)
dec
cmps
sub
jecxz
ret
(bad)
call
lock
add
popf
(bad)
xor
push
and
ret
add
in
and
sub
jmp
xchg
or
adc
outs
adc
push
push
js
shl
push
aaa
or
mov
cmc
js
or
ins
loop
dec
sbb
call
call
in
(bad)
pushf
cmc
movs
dec
aam
xchg
dec
out
cdq
jge
jo
push
in
test
shl
mov
and
mov
cs
imul
xchg
jle
adc
lea
and
movs
int
pop
jbe
fmul
mov
gs
add
lock
adc
stos
push
pop
fidiv
add
shl
add
in
into
xchg
arpl
mov
out
vpsrlq
adc
lahf
adc
pop
dec
shl
les
push
mov
hlt
pop
ins
sahf
mov
mov
jne
add
jecxz
mov
jb
fisubr
test
std
icebp
sub
mov
mov
dec
sub
or
std
popa
adc
pop
sub
dec
(bad)
jno
mov
pop
sub
adc
inc
add
lds
test
push
xchg
mov
mov
test
mov
retf
cwde
xchg
sbb
jp
dec
inc
push
cmp
mov
push
xor
ss
sbb
rol
jmp
shl
das
test
cmp
sti
or
les
out
popa
xor
stos
push
mov
mov
fnstcw
xchg
sti
popf
sbb
push
fcmove
adc
in
push
dec
int
les
into
out
pop
jle
push
push
retf
stos
sbb
ficomp
addr16
xchg
stos
idiv
xchg
call
adc
test
out
test
jge
xchg
test
(bad)
les
ret
ss
in
fcom
fstp
cmp
ret
ins
frstpm(287
mov
std
repnz
add
out
inc
in
imul
dec
sub
outs
pop
outs
mov
fcmove
das
lods
mov
xor
xor
cmp
inc
(bad)
(bad)
pop
aam
jo
ins
ins
jle
or
sbb
js
cwde
mov
adc
xor
mov
sbb
dec
sti
mov
jbe
outs
scas
jmp
mov
outs
push
mov
jnp
dec
cmp
pop
mov
pop
xlat
lock
adc
lods
mov
mov
fnstsw
xchg
inc
inc
jae
jno
ins
and
dec
add
mov
out
fninit
inc
jns
and
mov
test
and
arpl
outs
ret
push
pop
lock
sbb
xchg
jg
ret
jne
sbb
or
ss
pop
add
icebp
stos
into
sub
xchg
sub
jno
xor
(bad)
into
dec
pop
xor
and
jno
jb
push
inc
xor
stc
loop
adc
out
and
mov
and
dec
adc
cmps
inc
test
dec
out
cmp
les
in
mov
scas
xor
mov
xor
stos
and
jbe
add
and
cmp
dec
adc
stc
into
dec
add
mov
sbb
enter
int
ds
xor
xor
lods
jmp
gs
test
mov
jb
(bad)
sub
pop
inc
adc
cmc
mov
and
cmp
ds
ja
out
xor
rol
in
add
cld
lahf
scas
movs
jecxz
jp
leave
jl
aas
int
pop
call
test
dec
daa
or
jns
dec
xchg
repz
imul
adc
call
cs
jge
mov
ja
call
das
iret
test
imul
sub
clc
cmp
in
xchg
jmp
imul
add
push
xor
popf
jecxz
push
mov
mov
sbb
ror
adc
sbb
lea
jmp
jae
ss
cli
cdq
inc
in
cmp
fisubr
out
xor
popf
dec
lods
movs
repz
imul
mov
and
mov
and
add
xor
add
jnp
jns
jp
int3
aam
or
mov
aaa
dec
xlat
inc
and
ds
jae
test
fiadd
inc
or
mov
xor
inc
aam
ja
mov
cwde
icebp
xchg
cmps
daa
jge
jecxz
add
cdq
ins
test
fadd
retf
outs
(bad)
mov
(bad)
aam
xor
sbb
pop
pop
pop
and
(bad)
outs
or
jge
xchg
out
pop
or
mov
adc
or
xor
mov
add
ins
iret
cmc
popf
gs
push
inc
fsubr
jo
jmp
push
sar
adc
xchg
mov
xchg
jmp
in
(bad)
add
xor
adc
out
fwait
xor
gs
enter
mov
and
push
inc
mov
stos
lea
jno
or
call
hlt
cli
gs
sahf
(bad)
jne
outs
mov
xor
sbb
xor
push
mov
push
test
push
push
adc
xor
stos
or
lods
inc
stos
aas
mov
and
adc
jno
sbb
sbb
fstp
jle
outs
fnstcw
out
pop
lods
leave
sbb
(bad)
lock
xor
mov
jo
(bad)
imul
cmp
add
adc
mov
les
outs
jb
xchg
bound
dec
cli
mov
rcr
cmps
imul
jmp
js
js
jmp
or
or
inc
cdq
push
sub
outs
out
jnp
int
or
mov
adc
inc
inc
cmps
inc
stc
push
and
push
nop
sbb
xor
add
xchg
movs
mov
fwait
pop
jmp
jp
and
lods
inc
inc
push
repnz
xchg
xor
(bad)
stc
cmc
push
(bad)
(bad)
cmp
inc
lods
mov
xchg
pop
gs
lahf
movs
jno
inc
(bad)
pusha
push
mov
imul
inc
scas
leave
cli
retf
mov
mov
or
push
mov
aad
cmp
inc
jle
push
lods
icebp
mov
lods
rcr
lahf
jg
stc
out
jg
stc
mov
jmp
mov
dec
inc
dec
inc
scas
inc
pusha
or
add
add
add
(bad)
(bad)
inc
add
add
add
add
add
add
jns
je
ins
cs
jb
ja
outs
addr16
push
gs
imul
xor
xor
inc
jne
je
jb
cmp
jb
ins
sub
push
jne
ins
imul
imul
bound
xor
data16
xor
fs
add
adc
gs
cs
jb
ja
outs
addr16
imul
add
popa
je
pop
add
add
add
add
add
lsl
add
rcl
add
mov
inc
or
add
or
add
add
add
add
or
add
add
pusha
outs
rol
add
add
inc
dec
inc
add
mov
or
popa
add
jo
pop
jae
add
ret
add
push
ret
add
outs
test
add
adc
inc
inc
push
pop
inc
in
(bad)
add
add
scas
loope
xchg
ror
in
shl
in
xlat
cmps
jae
je
lea
mov
fwait
cmp
jne
(bad)
shl
fwait
ss
sti
js
jns
pop
add
sahf
sbb
dec
xchg
jb
loop
pop
(bad)
leave
and
int
arpl
std
out
jo
dec
or
xlat
sbb
mov
not
sub
popa
(bad)
sbb
xlat
mov
cmp
(bad)
and
add
xchg
dec
hlt
pop
test
push
cli
lock
add
mov
fmul
and
add
sub
adc
dec
je
pop
fdiv
and
(bad)
mov
cmc
(bad)
int
mov
xchg
jno
div
out
adc
loopne
(bad)
(bad)
jp
sub
xchg
xor
cmp
stc
shl
adc
push
sub
or
fwait
fwait
jl
jge
repnz
pop
xor
movs
stos
mov
push
mov
repz
push
call
cmp
xchg
loope
inc
add
test
retf
cmp
rol
sbb
lds
mov
lock
mov
sub
xchg
es
pop
ss
(bad)
cvttps2pi
push
fimul
aam
inc
jmp
scas
loop
xchg
jo
cwde
retf
fiadd
xchg
xor
pop
test
out
mov
iret
jecxz
add
retf
lods
cld
movs
or
push
mov
mov
sbb
sbb
cdq
outs
or
movs
and
jno
daa
cmp
and
dec
pop
or
inc
repz
push
sahf
inc
ret
and
ret
jae
fadd
movs
sbb
cwde
jle
adc
leave
retf
(bad)
or
push
aam
icebp
jg
push
in
pop
sbb
aad
iret
add
bound
add
sbb
fldenv
retf
nop
jl
adc
mov
mov
ficomp
es
out
sbb
int
leave
loope
push
sti
mov
rol
(bad)
lahf
leave
pop
xor
push
or
ins
cmp
push
sti
in
loopne
mov
jmp
scas
pushf
ds
jb
frstor
mov
pop
loopne
cmp
test
xchg
pop
mov
adc
out
jne
push
and
mov
adc
int
mov
pop
icebp
add
inc
pop
stos
jne
push
push
imul
lds
jo
mov
cmp
mov
push
jne
cmp
int3
jge
ficomp
sub
mov
ins
cmp
mov
outs
cmps
fistp
dec
sub
jmp
ret
not
mov
(bad)
xor
inc
mov
push
mov
(bad)
push
inc
mov
jmp
jmp
gs
fistp
test
xor
lds
dec
sbb
scas
xchg
sbb
and
leave
movs
push
ret
mov
ficomp
mov
xor
cmp
push
aaa
dec
jl
lods
inc
retf
push
mov
inc
fwait
je
addr16
mul
rcl
movs
hlt
(bad)
mov
mov
(bad)
fs
pop
xchg
lock
dec
adc
and
stos
arpl
push
dec
sbb
rol
adc
in
std
pop
cld
outs
dec
(bad)
cmp
pop
or
push
xchg
add
loop
adc
fs
inc
std
or
retf
mov
in
sbb
mov
sbb
jae
cdq
mov
fcom
jns
or
in
and
jle
jmp
in
sbb
outs
or
mov
sub
pop
scas
bound
pusha
xchg
pop
and
in
mov
xor
mov
ret
stos
out
cmc
pop
js
mov
pusha
xchg
jg
push
aas
aas
mov
and
aas
stos
push
pop
in
ficom
movs
test
xor
cmp
cmp
(bad)
sub
(bad)
shl
retw
mov
sbb
cli
sbb
pop
push
inc
push
test
cwde
mov
sbb
push
xchg
jle
cmc
cmc
push
dec
popf
adc
pusha
out
or
rcr
pop
pop
retf
inc
or
in
fsubr
jmp
mov
cs
mov
inc
dec
jb
mov
repnz
mov
jbe
push
fbld
mov
test
pushf
jp
xchg
(bad)
std
test
xchg
xor
data16
cmp
cmp
dec
int
popf
lds
jg
cli
ja
mov
(bad)
add
test
out
push
(bad)
lahf
(bad)
inc
popf
push
in
(bad)
fs
cmps
mov
int
fwait
mov
mov
sbb
pop
dec
cmp
jb
lds
cdq
jle
push
iret
fsubr
xchg
cmp
ret
jg
xor
add
mov
pop
cmp
scas
and
data16
inc
cmp
in
push
or
add
stc
cmp
lds
sub
jmp
ds
and
cmp
xchg
sub
cld
rol
pushf
pop
xor
nop
jmp
femms
push
xchg
scas
mov
int
mov
rol
mov
dec
call
sti
lods
lods
pop
popf
fnsave
and
push
fisub
leave
lds
jmp
push
mov
dec
cmovl
sbb
xchg
dec
fild
movs
mov
push
xchg
mov
rcr
pushf
and
sub
sbb
adc
and
aas
mov
fmul
pop
mov
inc
popf
push
fdivr
lock
adc
xor
(bad)
adc
sub
push
push
sbb
sti
dec
int
push
hlt
cmp
pop
aaa
movs
aam
movs
gs
and
mov
ins
arpl
cdq
fsubr
dec
scas
and
ds
repz
fstp
inc
je
sar
jbe
cld
adc
out
add
mov
outs
aad
pushf
hlt
xlat
sahf
ins
lock
mov
loop
sti
mov
test
inc
retf
fnstcw
pushf
push
jl
call
and
daa
mov
mov
ficom
daa
push
mov
stos
jmp
aam
xor
jl
loop
int3
mov
cmp
adc
and
jmp
cdq
loopne
and
inc
in
pushf
push
popf
dec
pop
mov
add
and
es
ja
fnstenv
and
inc
or
adc
mov
jb
and
out
(bad)
mov
push
mov
(bad)
mov
inc
(bad)
jno
cmp
inc
pop
jmp
aam
and
out
lds
std
push
xchg
jmp
pop
or
or
sub
adc
mov
es
lock
nop
or
out
push
xchg
sub
sahf
xor
ja
mov
push
das
inc
sub
imul
xor
jp
mov
jns
test
into
lods
cwde
sub
arpl
inc
push
adc
push
xor
xchg
lahf
fcomi
sub
sar
and
enter
jmp
test
lock
scas
push
xchg
in
mov
(bad)
sbb
inc
adc
das
sbb
inc
js
outs
xor
ret
(bad)
jg
rcr
xchg
xchg
cmps
ja
pop
pop
fwait
push
aam
add
leave
(bad)
add
jns
pop
lods
push
in
cmp
adc
push
mov
sbb
mov
shr
scas
lods
es
lods
in
aaa
fwait
or
stc
mov
fsubr
popf
sbb
sbb
inc
push
jecxz
xchg
sub
or
push
fmul
jmp
leave
adc
mov
mov
fwait
js
adc
pcmpgtw
cmp
bound
cld
addr16
push
push
adc
sub
mov
push
ds
cmc
push
mov
mov
xchg
or
xlat
and
rol
fist
sbb
nop
loopne
cmp
jo
mov
xchg
dec
push
(bad)
jmp
push
add
(bad)
adc
adc
lds
ins
in
outs
push
cmps
fiadd
cwde
sbb
or
sbb
fmul
adc
std
sar
cmp
and
push
mov
dec
(bad)
nop
aas
adc
mov
xor
mov
imul
mov
cmp
sbb
pop
and
int3
into
adc
inc
out
mov
xor
iret
mov
xor
add
xor
jecxz
mov
mov
sbb
daa
jp
mov
jb
xor
adc
xchg
jmp
xchg
xchg
scas
pusha
hlt
retf
das
es
mov
jo
(bad)
sub
mov
adc
(bad)
pop
xor
xor
mov
add
(bad)
out
jb
and
xor
adc
sub
xchg
sbb
push
inc
or
inc
sub
ja
outs
retf
adc
dec
inc
int3
lock
je
lahf
adc
cdq
dec
and
pop
loope
hlt
test
jmp
ret
retf
aad
sbb
jns
jecxz
cmp
enter
mov
lods
stos
push
mov
ror
jp
(bad)
cld
repz
ja
cmps
(bad)
jmp
mov
or
test
sub
es
adc
sbb
iret
fcomp
clc
inc
jp
jo
and
mov
sbb
aad
jl
call
jg
loope
loope
sbb
pop
(bad)
adc
jmp
jmp
ret
mov
xchg
data16
fidivr
lods
sbb
icebp
push
sbb
pop
jle
outs
push
(bad)
jns
sar
rol
jmp
pop
data16
clc
jle
mov
mov
inc
xor
jno
dec
sub
ret
push
inc
cmp
cmp
mov
xor
nop
fadd
imul
jle
ds
(bad)
xor
aas
dec
pop
scas
mov
mov
pop
push
ja
fwait
je
jb
(bad)
jmp
and
xor
cs
(bad)
js
jne
ds
inc
enter
cmp
scas
enter
jno
outs
stos
push
cmc
cs
sub
into
xchg
jne
sar
neg
and
sub
retf
repz
dec
test
retf
mov
aas
in
enter
push
mov
(bad)
ins
(bad)
adc
jmp
jge
repz
loope
jae
push
test
(bad)
mov
jmp
repnz
cmp
mov
or
repz
dec
jmp
and
(bad)
jge
cmp
mov
push
daa
xor
call
fisub
ins
out
inc
jge
mov
call
out
xchg
jmp
aad
add
jecxz
mov
call
dec
pop
lods
ret
sbb
pop
jns
sbb
mov
mov
pop
mov
addr16
fdiv
adc
into
inc
mov
fs
retf
call
xor
sbb
mov
adc
sub
cdq
nop
cwde
jl
sub
inc
inc
or
cmp
ins
push
cmp
stos
(bad)
movs
jecxz
mov
jo
call
frstor
xchg
mov
outs
jo
pop
mov
out
dec
jecxz
xchg
and
into
ins
cdq
push
sub
mov
mov
or
out
inc
sahf
fidivr
test
cmps
mov
jbe
not
bound
leave
dec
test
ja
cmp
cwde
ret
or
sub
jmp
adc
inc
add
call
dec
test
add
jp
and
sub
xor
pop
inc
cmp
das
mov
int
dec
retf
sub
in
not
mov
mov
fld
jge
fs
std
adc
sbb
out
jg
call
fbstp
lods
cdq
xchg
sti
xchg
mov
cld
in
cmp
in
sbb
jne
xlat
push
inc
adc
and
or
scas
shl
push
rcr
shl
mov
outs
add
pop
sub
pop
mov
push
loope
ds
ss
jmp
dec
sti
add
xlat
stc
(bad)
adc
fidiv
out
mov
imul
fcomp
icebp
lock
sahf
xchg
repz
cdq
xchg
mov
repz
rcl
push
pop
and
ins
fldenv
xlat
dec
bound
mov
add
push
dec
mov
or
(bad)
cmps
jnp
inc
jecxz
jbe
jmp
shl
mov
add
sahf
sub
jnp
rcr
in
mov
ins
call
int3
pop
cdq
fs
push
pop
jmp
sub
jno
mov
pop
lea
inc
sbb
push
mov
pop
mov
jmp
fwait
ja
loop
(bad)
outs
pop
jae
cmp
push
cdq
adc
call
shl
and
fidiv
(bad)
in
and
stos
sub
xchg
cmp
fldenv
dec
out
mov
(bad)
jno
mov
rol
(bad)
jle
push
sub
movmskps
add
mov
adc
sti
mov
shr
or
xor
adc
pop
mov
dec
adc
dec
packssdw
pop
imul
jg
ret
xchg
fidiv
mov
jmp
sub
out
iret
fisubr
pop
loop
scas
push
mov
jl
mov
xchg
out
sar
sbb
mov
mov
(bad)
pusha
cmps
push
test
or
mov
pop
push
add
mov
push
sbb
scas
adc
sub
sti
cld
jno
xor
dec
push
fmul
dec
leave
lahf
imul
jnp
adc
mov
movs
addr16
daa
push
out
pop
bound
(bad)
fld
mov
call
ficom
call
adc
jmp
inc
jge
mov
test
xchg
inc
push
mov
push
loop
adc
mov
test
imul
repz
(bad)
(bad)
jge
sub
cdq
fdivr
cwde
daa
mov
fiadd
push
icebp
xchg
ret
mov
retf
mov
or
jnp
int
add
push
daa
sbb
das
lahf
cmp
addr16
cmc
push
mov
outs
(bad)
push
inc
inc
dec
xor
lahf
pop
mov
enter
arpl
push
mov
xor
inc
xchg
sbb
push
mov
xor
test
lods
and
addr16
inc
(bad)
mov
iret
out
mov
jl
mov
sub
xchg
outs
dec
mov
inc
cmp
mov
mov
mov
mov
cld
je
dec
(bad)
cmp
pop
and
jno
push
dec
jl
sub
sub
or
clc
cmp
sahf
mov
jmp
int3
cmps
mov
xchg
cld
xchg
pusha
stc
xchg
vpshaq
(bad)
add
xchg
test
xchg
push
loop
mov
repnz
retf
mov
add
(bad)
dec
punpckhbw
in
mov
or
inc
not
ins
mov
jae
cld
adc
mov
mov
ja
repz
jo
cmp
enter
or
pop
mov
xor
push
scas
popf
or
jns
xchg
mov
clc
outs
test
out
add
adc
bound
cli
das
cmps
mov
imul
dec
mov
mov
je
dec
cmp
fcmovne
cdq
and
popf
mov
pusha
int3
xchg
and
add
mul
push
enter
sbb
call
mov
pop
pop
inc
push
jmp
pop
inc
movs
ins
xor
sbb
and
or
xchg
sar
test
mov
sub
push
call
outs
(bad)
cmp
pop
lods
sbb
mov
jmp
repz
pop
jmp
stos
cmps
push
ds
cmp
fstp
popf
cdq
out
xor
mov
mov
mov
inc
xchg
mov
mov
sub
sbb
jb
movs
pusha
ret
call
test
leave
xchg
fcomp
jno
popf
sbb
and
and
jne
movs
int
je
imul
jl
ss
(bad)
or
add
dec
push
xchg
dec
shl
out
cli
int
or
cmps
into
or
lds
xchg
xor
add
mul
adc
call
loopne
push
in
mov
iret
retf
popf
arpl
aaa
sbb
jl
adc
adc
sub
fnstsw
cmps
push
daa
sar
cld
repz
aas
(bad)
cld
repz
jmp
lock
or
ret
add
add
dec
inc
dec
inc
scas
inc
pusha
or
add
add
add
(bad)
(bad)
inc
add
add
add
add
add
add
jns
je
ins
cs
jb
ja
outs
addr16
push
gs
imul
xor
xor
inc
jne
je
jb
cmp
jb
ins
sub
push
jne
ins
imul
imul
bound
xor
data16
xor
fs
add
adc
gs
cs
jb
ja
outs
addr16
imul
add
popa
je
pop
add
add
add
add
add
lsl
add
mov
mov
inc
or
add
or
add
add
add
add
or
add
add
pusha
outs
rol
add
add
inc
dec
inc
add
mov
or
popa
add
jo
pop
jae
add
ret
add
push
ret
add
outs
test
add
adc
inc
inc
push
pop
inc
in
rol
loopne
adc
ja
aaa
daa
addr16
cmp
jns
int3
cmp
sbb
scas
adc
jo
mov
sti
inc
fidivr
mov
add
movs
outs
mov
pop
push
(bad)
jmp
(bad)
out
cmp
cwde
push
ins
imul
(bad)
push
dec
gs
lock
stos
sbb
mov
aad
ins
mov
mov
mov
cmp
jmp
fs
rcl
mov
fidiv
fdiv
test
popa
hlt
mov
or
jecxz
imul
xchg
inc
aad
mov
cdq
scas
loope
ficomp
(bad)
mov
push
mov
ret
scas
pop
ds
outs
inc
push
push
das
push
add
or
sar
test
(bad)
icebp
jmp
rcr
dec
jne
jg
pushf
dec
cli
jb
mov
add
aaa
cs
fwait
inc
and
mov
movs
inc
mov
(bad)
xor
xor
push
fidivr
fist
cmc
inc
mov
lods
mov
push
(bad)
add
repnz
outs
inc
adc
out
outs
cdq
arpl
mov
sahf
inc
jle
and
mov
in
jmp
xor
and
or
xchg
clc
dec
pop
jl
nop
scas
sbb
outs
add
or
inc
mov
fstp
int
not
add
mov
add
inc
inc
pusha
mov
jmp
jge
xchg
(bad)
pop
into
mov
push
(bad)
mov
fldcw
inc
movs
cmp
arpl
sti
movs
adc
leave
and
cmp
fstp
lock
jle
call
pop
adc
ror
sub
and
fsubr
adc
xor
xor
and
sub
movs
dec
das
xlat
(bad)
jb
jp
mov
scas
hlt
std
lea
pop
push
cmp
cwde
fistp
cmp
jmp
cmp
jge
and
fnstenv
in
test
fsubr
movs
pushf
neg
pop
(bad)
xchg
mov
das
pop
xchg
push
icebp
test
push
add
loop
outs
jbe
mov
cs
cmp
mov
sbb
inc
mov
push
or
ja
(bad)
jmp
loop
pop
std
cmp
fidiv
pop
icebp
jp
push
sub
retf
xchg
adc
inc
fwait
sbb
je
jecxz
or
js
data16
out
fistp
movs
xor
dec
fld
sub
in
ret
inc
mov
lods
jle
shl
movs
in
daa
add
stos
and
cs
jae
mov
shr
pushw
xor
jmp
daa
imul
ret
sbb
test
inc
ret
ret
mov
or
call
in
mov
mov
mov
fadd
pop
adc
xchg
test
mov
clc
mov
or
mov
jle
into
cmp
dec
pushf
rcr
mov
inc
test
mov
call
cld
jmp
push
mov
jmp
popf
mov
mov
stos
mov
jbe
mov
(bad)
jg
test
cmp
push
hlt
pushf
pop
js
addr16
xchg
sahf
dec
inc
xchg
mov
or
xor
div
or
adc
addr16
xchg
pop
aaa
add
mov
jae
ror
xor
inc
and
jns
test
ret
mov
jno
(bad)
mov
adc
sub
and
pop
xor
push
call
inc
hlt
xchg
shl
mov
xchg
sbb
xlat
xchg
arpl
jns
fs
mov
jne
xor
dec
mov
push
push
dec
inc
cdq
in
or
(bad)
das
add
(bad)
fiadd
cwde
push
adc
into
sbb
sub
and
add
mov
cmp
xchg
ss
dec
and
test
fnstenv
test
ds
sub
iret
xlat
adc
call
and
les
sahf
cmp
jae
xchg
sar
in
xchg
cmp
xor
fnstenv
add
ins
outs
cmp
xchg
push
pop
test
push
lds
mov
and
ret
fndisi(8087
movs
push
test
inc
aas
pop
call
xchg
outs
pop
xor
cli
fwait
retf
rcr
repz
div
frstor
ins
or
push
lahf
mov
sub
fcom
in
clc
jmp
mov
sbb
push
cs
lahf
(bad)
xchg
pop
jecxz
and
adc
sar
rol
push
imul
and
(bad)
pop
data16
adc
mov
jp
push
das
lds
aaa
out
outs
and
pop
xor
mov
pushf
loope
or
xchg
lock
ins
jnp
xor
test
or
xchg
jo
jb
push
or
push
sub
xlat
lahf
in
sbb
repnz
vpsllq
mov
pop
adc
or
cmp
je
outs
and
fadd
xor
les
arpl
stos
xor
jne
ret
js
push
jmp
pop
mov
mov
mov
pop
inc
dec
inc
jmp
adc
dec
sahf
(bad)
dec
data16
push
mov
xlat
mov
inc
or
stos
mov
mov
mov
loop
pop
push
sub
addr16
retf
push
(bad)
je
jo
sub
and
inc
or
(bad)
and
mov
sbb
pop
jmp
mov
fnsave
cs
adc
add
ror
in
outs
(bad)
fmul
push
inc
rcl
mov
add
fcomp
adc
lahf
call
dec
fbstp
pop
cmp
rcr
fcomp
rcr
dec
les
push
(bad)
dec
repz
cmps
jle
imul
fs
pop
jge
mov
es
rcr
imul
stos
sub
lahf
sti
int
cmps
lock
jp
inc
adc
cmp
ins
int
out
les
jmp
stos
jg
call
adc
xlat
pop
pop
out
out
call
ficomp
fldenv
fcmovbe
push
and
xor
jge
daa
inc
lock
cmp
pop
cli
xor
add
or
dec
(bad)
repnz
(bad)
adc
xchg
dec
mov
cs
lock
dec
inc
mov
dec
stc
(bad)
out
push
push
cmp
sbb
sbb
(bad)
add
int3
out
inc
dec
sahf
mov
cmovae
daa
mov
or
mov
cmp
std
jno
or
cmp
fld
stc
jle
pop
push
or
je
pop
jmp
not
and
mov
retf
aaa
(bad)
mov
fild
aaa
in
add
jecxz
inc
inc
cmp
xlat
pushf
jae
xchg
mov
lods
jnp
mov
mov
sub
cmp
or
pop
neg
shl
jne
call
mov
or
push
pusha
or
push
call
dec
pop
mov
sbb
cmp
pop
adc
sub
ret
sub
ds
pop
mov
xor
cmp
xchg
ss
popa
fstp
push
outs
(bad)
popa
jae
or
jnp
mov
ja
xor
int
test
dec
push
mov
pushf
inc
stos
call
movs
sar
xor
push
pop
stos
call
push
jnp
fdivr
dec
jmp
jae
and
pop
sub
mov
sbb
inc
iret
cmp
xor
xchg
add
lea
adc
lods
sti
cwde
xor
jl
mov
sbb
push
popa
and
mov
xlat
jge
retf
enter
and
mov
fs
mov
arpl
or
push
mov
or
fst
adc
xchg
in
iret
fimul
dec
mov
jecxz
(bad)
push
inc
cmp
pop
sbb
sbb
pusha
cmc
push
aad
jbe
push
sub
or
jg
mov
ja
loope
es
cdq
xchg
popa
loope
loop
(bad)
popf
inc
test
es
pop
mov
adc
jmp
nop
cmp
ds
pop
pop
loope
sbb
icebp
fsub
into
ret
xchg
das
aam
mov
mov
and
fsub
sub
les
mov
sub
sbb
and
pop
mov
dec
les
mov
loope
lea
sub
stos
call
cmc
cmp
pop
jo
outs
dec
pop
mov
lock
mov
pop
xor
je
inc
mov
mov
sahf
out
mov
cmp
iret
aam
lods
lods
push
ror
or
icebp
aas
mov
(bad)
mov
fistp
or
dec
add
cwde
fs
and
ins
pop
(bad)
ins
jmp
pusha
add
js
xchg
cld
add
ins
ds
xchg
loope
test
aad
jo
adc
xlat
pop
xchg
pop
aas
and
push
jle
push
push
dec
add
inc
ret
mov
movaps
push
add
inc
lea
pop
mov
(bad)
mov
pop
jge
jp
mov
movs
and
cmp
push
imul
adc
mov
inc
mov
jge
jo
das
jne
lock
add
aas
jmp
adc
fmulp
mov
pusha
dec
pop
cmp
ins
xor
mov
dec
jae
and
xchg
jle
pop
jg
lods
mov
fisubr
xchg
mov
fmul
jmp
xchg
mov
or
mov
xor
dec
aam
in
cmc
daa
cs
push
mov
loope
jmp
sbb
cmp
mov
stos
int3
div
pop
fst
sti
outs
and
mov
xchg
adc
sbb
jnp
and
cli
cmps
daa
and
pop
jle
sahf
(bad)
adc
jns
mov
int
jg
cmp
es
aas
cmp
xchg
in
push
les
jbe
dec
ins
add
adc
(bad)
sbb
aad
sbb
addr16
push
daa
push
xchg
cs
sbb
fisttp
imul
inc
push
xchg
in
shr
shr
mov
fst
sbb
in
mov
popa
movs
daa
xchg
out
lock
mov
loope
out
leave
gs
pop
jae
lods
test
add
and
and
loopne
das
xchg
icebp
push
(bad)
pop
mov
mov
fcomi
pop
pop
pop
movs
add
xchg
lahf
in
dec
imul
sti
inc
out
xchg
sub
adc
test
shr
mov
xchg
movs
inc
cwde
scas
(bad)
lea
mov
pop
in
inc
repnz
test
xchg
fmul
mov
pop
in
pop
lea
icebp
add
dec
movs
lds
add
dec
dec
test
rcl
inc
mov
mov
mov
add
jae
iret
imul
ds
xor
cdq
push
dec
bound
(bad)
ja
sub
jle
rcr
es
cmp
xchg
jl
dec
adc
cmp
pushf
xchg
cmc
mov
bnd
std
mov
daa
pop
lods
cmp
xchg
ins
fld
sub
fcomip
pusha
inc
mov
or
sbb
js
aas
mov
femms
loope
dec
(bad)
sbb
cmps
xor
lods
loop
icebp
dec
lahf
mov
push
cmp
xchg
jecxz
and
in
lods
movs
or
jns
sbb
lods
xchg
aad
sbb
in
ror
shl
mov
je
xchg
call
jo
cdq
mov
sbb
mov
ss
das
ret
ds
pop
int3
push
int
push
(bad)
fisttp
in
test
dec
cli
xchg
pop
dec
xchg
inc
pop
ja
mov
xor
aam
imul
ja
outs
adc
push
stos
pushf
pop
ficomp
add
sub
out
add
inc
push
push
fidivr
inc
jg
jmp
pop
mov
mov
ror
shr
frndint
fdivr
lods
jno
addr16
inc
sub
add
popa
sbb
push
repz
bound
push
push
cmp
mov
(bad)
jl
push
sbb
push
ret
push
int3
add
out
sbb
movs
xlat
sub
scas
mov
add
enter
sub
mov
push
movs
out
cmp
fsubr
sbb
xchg
int
or
cld
add
push
mov
in
sbb
sti
(bad)
inc
xor
ss
stos
adc
(bad)
inc
cmp
mov
jmp
fist
jno
sbb
repz
jbe
or
lods
aam
call
and
jl
mov
cmp
hlt
inc
out
jmp
xor
xor
popf
and
inc
sbb
scas
mov
mov
dec
scas
lock
sar
jae
ficom
xchg
jecxz
rol
test
dec
iret
sbb
pop
test
repnz
cmp
js
data16
ficom
jno
cdq
call
mov
or
mov
sbb
jecxz
inc
in
call
cmp
and
aam
outs
shr
and
retf
loopne
call
jge
rcr
loop
adc
mov
mov
xchg
dec
push
fbstp
iret
add
in
je
movs
sbb
or
ds
out
cli
push
mov
in
push
sub
sub
popf
sbb
xor
call
daa
dec
popf
xchg
mov
inc
sub
popa
adc
mov
movs
jmp
(bad)
popf
pusha
jge
sti
add
div
mov
xchg
imul
jmp
inc
mov
push
outs
adc
xchg
xchg
(bad)
(bad)
icebp
mov
xchg
dec
retf
clc
xor
jmp
or
hlt
mov
in
popf
mov
mov
and
in
clc
cmp
mov
cmp
pushf
loop
std
ficomp
mov
add
add
dec
sub
xor
push
mov
repnz
cmp
mov
cmp
lds
int3
jl
test
mov
je
in
scas
ror
(bad)
ds
sti
mov
push
mov
int3
jmp
add
iret
mov
in
out
aam
xchg
rcl
loopne
pop
bnd
xor
jne
fcmove
ss
call
mov
addr16
add
jge
xacquire
adc
adc
push
pop
push
arpl
inc
test
xchg
into
int3
push
shr
pop
scas
leave
daa
enter
(bad)
mov
ret
repnz
(bad)
js
jnp
int3
imul
retf
sbb
and
outs
pop
inc
in
jb
xor
clc
jl
push
mov
fbld
outs
data16
inc
int3
mov
in
adc
dec
je
sti
jp
lods
call
and
iret
sub
and
sbb
dec
sti
cwde
add
sub
mov
pop
sub
mov
imul
jae
cmps
and
les
out
popa
fld
retf
out
movs
jae
fs
outs
lods
inc
test
arpl
push
jle
dec
loop
push
(bad)
(bad)
test
shl
(bad)
int
add
arpl
cwde
pusha
test
ficomp
lock
loop
stos
xchg
(bad)
das
test
xchg
icebp
js
ret
dec
adc
cli
stos
lock
jmp
loop
fmul
inc
and
push
mov
pop
call
dec
pop
(bad)
jmp
dec
xchg
mov
mov
jg
mov
xchg
js
dec
adc
jge
push
xchg
sti
inc
popf
(bad)
pop
mov
ja
leave
aas
ins
mov
jne
sahf
xor
cli
or
bound
mov
xchg
xchg
mov
aad
jno
out
cmps
xchg
or
jns
cmp
outs
outs
dec
scas
jae
and
xor
sub
leave
nop
scas
jo
loop
sub
repnz
ja
dec
retf
xchg
add
leave
xor
jo
imul
(bad)
xchg
pop
jo
fwait
test
xor
mov
frstor
xchg
xor
inc
xlat
leave
xchg
fstp
mov
lods
xor
jge
icebp
repz
adc
inc
pop
shr
sub
and
dec
and
cmps
movs
jge
pop
sbb
pop
out
data16
ficom
imul
mov
(bad)
mov
adc
dec
sub
and
mov
fnstcw
push
cmovs
lahf
jg
stc
out
jg
scas
add
inc
cmp
or
dec
inc
dec
inc
scas
inc
pusha
or
add
add
add
(bad)
(bad)
inc
add
add
add
add
add
add
jns
je
ins
cs
jb
ja
outs
addr16
push
gs
imul
xor
xor
inc
jne
je
jb
cmp
jb
ins
sub
push
jne
ins
imul
imul
bound
xor
data16
xor
fs
add
adc
gs
cs
jb
ja
outs
addr16
imul
add
popa
je
pop
add
add
add
add
add
lsl
add
mov
mov
inc
or
add
or
add
add
add
add
or
add
add
pusha
outs
rol
add
add
inc
dec
inc
add
mov
or
popa
add
jo
pop
jae
add
ret
add
push
ret
add
outs
test
add
adc
inc
push
pop
inc
in
rol
fmul
add
loopne
retf
mov
fwait
retf
pop
jbe
fdiv
xor
jbe
scas
jg
mov
jnp
mov
pop
retf
fiadd
idiv
cmp
mov
enter
in
imul
mov
cli
into
and
push
std
push
loope
jne
out
jb
repz
sub
fidiv
cmp
aad
pushf
mov
out
add
adc
mov
jmp
sub
sbb
cmp
cmc
mov
cmp
add
jae
std
pop
das
inc
(bad)
imul
test
out
and
push
pop
push
or
push
and
jo
adc
cld
jp
dec
repz
jnp
sub
fistp
int
hlt
cmp
retf
xchg
cmc
cmp
mov
sub
push
adc
or
clc
ss
daa
out
sub
stos
adc
call
(bad)
imul
adc
mov
out
pop
fwait
mov
add
sar
repnz
jnp
fmul
jnp
ins
fadd
and
in
ret
mov
jg
pop
pusha
shl
ret
jmp
inc
mov
xchg
in
out
xchg
jno
sbb
in
push
mov
shl
jmp
frstor
jae
ja
call
popa
push
pop
xor
sub
jle
lock
sub
xchg
outs
mov
dec
rcl
and
dec
sbb
push
fmul
call
jmp
(bad)
push
push
cmc
inc
mov
jo
push
sbb
sbb
addr16
jg
je
out
enter
mov
test
es
cli
mov
jecxz
xlat
and
sahf
aas
adc
xchg
inc
jge
jo
sbb
inc
nop
dec
aas
in
gs
das
div
jns
fst
adc
dec
mov
(bad)
sti
and
stos
or
or
jle
inc
xchg
dec
lods
sar
dec
mov
das
mov
dec
or
inc
sub
xor
pushf
jae
outs
xor
sub
scas
add
inc
sbb
movs
gs
in
loope
push
sub
xchg
fdivr
ret
fwait
in
xchg
out
fadd
jns
ret
iret
jo
fs
pop
jbe
push
aas
fisttp
into
(bad)
lods
arpl
jmp
rol
(bad)
ja
mov
inc
(bad)
out
sbb
cmp
xchg
ret
and
(bad)
loopne
xbegin
and
sbb
in
sahf
push
mov
les
stos
pop
cmps
push
xlat
mov
xor
inc
mov
pop
mov
sbb
xor
mov
jb
add
fimul
(bad)
fnsave
push
jmp
pmaddwd
jmp
lods
(bad)
cld
not
dec
xor
(bad)
out
dec
or
cmc
pusha
aaa
sbb
and
loop
cli
inc
aas
jmp
sub
xchg
nop
mov
movs
pop
cwde
pop
sub
sar
sbb
idiv
into
xor
mov
ja
dec
xchg
hlt
movs
cmp
int
loopne
or
mov
retf
add
cmp
cmps
jmp
dec
(bad)
scas
cmp
add
or
mov
scas
xlat
lea
mov
pop
push
inc
adc
jbe
movs
inc
mov
in
cmps
stos
and
pop
clc
inc
fisttp
fwait
cmps
imul
cmps
mov
push
mov
lock
scas
sbb
mov
xchg
(bad)
out
add
cmp
mov
sbb
enter
sub
cs
(bad)
retf
xor
xchg
cld
fild
repz
test
into
fcomp
jno
xchg
cld
mov
cmp
inc
xchg
rcl
push
sbb
sbb
jbe
(bad)
shl
pop
mov
test
gs
mov
sbb
outs
in
push
adc
test
mov
pop
mov
ins
xor
ret
jmp
jecxz
xor
jo
push
dec
lahf
neg
ss
rol
and
xor
repz
outs
stc
pop
pop
popa
mov
mov
and
pop
cmp
(bad)
shr
xchg
aaa
bound
adc
(bad)
push
retf
jg
or
in
repnz
pop
mov
mov
jl
lods
or
cmp
mov
push
addr16
pop
and
mov
leave
(bad)
cwde
push
pop
nop
test
iret
add
jae
lods
dec
dec
adc
loope
mov
retf
inc
in
jns
cmp
stc
jne
cmp
fsub
mov
fsub
mov
call
xor
jmp
ss
and
push
ficomp
fimul
les
xor
xchg
inc
push
movs
jae
jl
inc
push
rcr
add
int
dec
pop
or
adc
(bad)
idiv
jl
mov
mov
aaa
add
jae
sub
jb
push
sub
mov
int3
(bad)
inc
ficom
xor
lods
imul
lock
mov
cmp
jne
popa
leave
adc
mov
mov
cmp
es
pop
test
inc
pusha
(bad)
push
pop
ret
ins
mov
xlat
iret
push
cmc
dec
pop
xor
push
mov
mov
cwde
pushf
cmp
cmps
es
cmp
sub
jno
mov
push
mov
inc
jecxz
pop
jecxz
push
jnp
out
dec
inc
inc
outs
push
adc
cmp
into
(bad)
dec
jl
push
pop
test
jbe
pop
xchg
xchg
addr16
add
test
mov
xchg
xchg
add
fadd
jno
sbb
popa
mov
(bad)
fsubrp
xchg
push
aas
test
adc
stc
pushf
add
fdivr
js
push
mov
and
lock
mov
das
js
xchg
scas
xor
mov
or
jmp
dec
add
out
aam
sbb
xchg
dec
pop
(bad)
daa
jecxz
pop
jmp
add
dec
mov
or
stos
shl
addr16
jl
or
mov
adc
js
movs
(bad)
out
leave
mov
out
aaa
bnd
scas
fs
cmp
das
inc
rcl
in
test
mov
xor
sbb
mov
div
stos
and
xchg
xchg
popa
std
outs
xlat
cmp
inc
xchg
dec
pop
xchg
test
mov
and
xchg
outs
jns
sbb
leave
and
repnz
shr
dec
movs
in
xchg
dec
in
sub
pushf
retf
test
loop
jae
test
sbb
sar
pop
jg
retf
dec
lock
inc
dec
(bad)
jmp
mov
sti
retf
rol
mov
mov
js
sub
ficom
rcr
xchg
xchg
(bad)
mov
test
jge
mov
mov
inc
cmp
lods
mov
pop
push
xor
dec
inc
mov
cmp
mov
test
push
call
push
or
push
inc
mov
in
into
push
jae
mov
stos
mov
cmp
fxch
jp
arpl
mov
(bad)
cmps
or
push
(bad)
movs
jo
sbb
aam
cmp
dec
scas
nop
jle
mov
bnd
xchg
adc
pop
add
adc
sub
jne
outs
lea
fstp
push
(bad)
movs
push
cs
test
xchg
xor
lahf
mov
out
inc
pop
addr16
cdq
cli
mov
outs
rcr
push
lods
out
dec
add
sub
loop
out
bswap
div
push
fmul
mov
inc
push
or
sar
mov
xor
outs
dec
push
pop
add
out
xlat
aam
jmp
(bad)
mov
adc
movs
mov
movs
mov
jmp
inc
push
mov
data16
cmp
xchg
inc
mul
sbb
mov
fldcw
(bad)
lea
xor
iret
movntps
iret
movs
(bad)
push
xor
call
mov
cmp
dec
and
and
jle
jb
jae
pop
rcl
dec
xor
mov
pusha
(bad)
loop
xor
enter
mov
and
stos
out
pop
call
jns
mov
push
mov
jge
sub
lock
dec
cli
mov
movs
and
inc
jl
js
push
jno
push
fucomi
out
out
(bad)
rcl
movs
sbb
inc
push
addr16
xor
jl
or
loopne
jns
ins
xor
sub
(bad)
popa
loop
and
test
or
jne
iret
ret
dec
retf
jmp
adc
(bad)
lock
aad
mov
lods
(bad)
dec
cmp
push
mov
stos
rcl
fldenv
and
pop
mov
xor
add
mov
xchg
sub
pop
mov
(bad)
push
push
arpl
retf
cmp
call
imul
sub
repnz
push
mov
aaa
int3
cli
sahf
(bad)
dec
arpl
cmp
and
sub
in
popf
cmc
fwait
add
ret
(bad)
rcl
sbb
xchg
sub
pop
jae
add
and
(bad)
jmp
cmp
retf
pop
mov
cmp
fxch
adc
stos
mov
mov
cmp
test
jge
mov
sar
mov
jmp
or
mov
aaa
dec
mov
enter
loope
lods
call
call
stos
ja
pusha
cld
xchg
leave
pop
and
mov
and
dec
cdq
cmp
or
xor
inc
(bad)
push
cmp
aam
loope
ins
in
push
xor
int
not
hlt
xor
and
sub
sub
in
in
jb
mov
aam
adc
cmps
lods
loopne
scas
test
or
stos
pop
dec
leave
lea
daa
cmp
mov
je
jmp
mov
mov
or
enter
jb
dec
jecxz
aas
daa
cmp
js
std
pop
enter
dec
inc
mov
mov
push
aad
cmp
xor
sbb
lea
xor
cmp
cmps
ret
sbb
sub
cmovp
out
test
inc
fdivp
xlat
out
xchg
mov
std
dec
sbb
or
scas
and
sbb
push
jnp
jp
mov
jge
dec
bound
sub
push
sahf
mov
and
xor
lods
aaa
adc
mov
or
adc
push
in
addr16
jns
fnstcw
pusha
cmp
lahf
pop
add
daa
shr
fwait
aas
hlt
lds
sub
add
call
jmp
retf
mov
aas
fsub
xor
imul
jnp
in
jns
pop
adc
xchg
mov
or
jne
shl
mov
scas
sbb
pop
pop
mov
gs
mov
push
das
popf
int
lods
js
pop
cwde
adc
in
lock
fs
mov
jmp
(bad)
lock
add
sub
push
ret
fldcw
sti
stos
das
sbb
inc
dec
xor
ret
add
jno
leave
mov
xchg
or
addr16
jmp
data16
jp
xor
xor
jbe
xor
xor
sub
outs
xlat
and
adc
js
jmp
cmps
jg
cmp
fstp
jns
xchg
cli
xchg
mov
add
push
out
mov
pop
shl
sub
inc
fisub
xor
and
jae
push
in
out
mov
fnstsw
popa
icebp
add
dec
aaa
into
cwde
add
cdq
push
pop
add
dec
xlat
push
cld
mov
sub
aam
add
cli
fsub
inc
ret
mov
xor
sbb
sbb
out
cld
xacquire
ja
push
and
jmp
and
div
cmp
lock
sbb
or
xchg
leave
ror
mov
xor
push
dec
cmp
sbb
lods
sbb
setbe
(bad)
cmps
sub
fnstsw
lea
pop
out
push
jl
lods
or
inc
stos
in
dec
jno
or
std
and
xor
inc
push
push
(bad)
arpl
mov
xchg
add
push
fs
iret
cmp
aaa
(bad)
aaa
aaa
jg
xchg
pop
ss
cmps
and
lock
dec
outs
mov
mov
(bad)
mov
push
xor
fld
gs
mov
movs
and
sbb
or
mov
call
pop
js
jo
fiadd
mov
inc
or
addr16
in
test
into
jmp
ficom
cmps
lods
adc
mov
xor
cmp
repnz
xor
and
jbe
and
mov
int
add
inc
dec
movs
inc
imul
inc
add
jge
mov
or
push
lds
adc
pop
mov
gs
fstp
pop
imul
arpl
scas
inc
cmps
data16
(bad)
int
cwde
dec
dec
(bad)
clc
xor
movs
repnz
rcl
repnz
xlat
ja
push
mov
int3
pop
cli
shr
out
inc
mov
loop
fsub
ss
shl
sbb
xchg
test
xchg
stos
sub
or
fwait
lods
jb
cmps
push
popf
mov
fneni(8087
clc
and
pop
jmp
cmps
lock
stos
xor
ret
dec
add
shl
imul
jns
test
jecxz
cmps
pusha
outs
dec
cmp
cmpxchg
mov
cli
add
shl
repnz
fwait
inc
dec
nop
cmps
neg
push
xchg
cmp
jmp
jge
jne
xor
mov
xor
popf
adc
test
icebp
popf
push
aaa
cli
test
adc
ret
cmp
jge
cmp
ins
(bad)
call
cwde
mov
in
or
add
scas
sub
enter
retf
jno
add
or
dec
mov
push
out
das
cmp
in
in
xchg
cmp
add
sbb
icebp
outs
fnstenv
ins
ja
xchg
ins
jbe
inc
and
jno
int3
sbb
data16
mov
inc
cmp
dec
aam
cld
xchg
aam
and
mov
in
mov
call
sub
adc
xchg
sbb
sbb
mul
in
out
cli
sub
mov
pop
mov
jnp
stc
xor
cmp
int3
xor
jl
cmovno
and
out
ins
test
lods
popa
mov
push
and
pop
stos
dec
add
cdq
adc
sub
mov
fisubr
sqrtps
shr
adc
cmp
repz
xchg
ja
imul
lds
dec
fsubp
adc
stc
push
int3
outs
xor
mov
lock
cmp
pushf
or
pop
sub
cdq
(bad)
mov
sub
mov
or
and
jne
fwait
out
adc
imul
jge
cmp
(bad)
sub
xor
imul
add
adc
push
mov
pushf
mov
jle
shr
push
mov
jns
in
test
push
mov
pop
push
xchg
mov
call
jl
push
icebp
std
dec
fisttp
loopne
in
xor
fwait
(bad)
sahf
jmp
ror
test
(bad)
test
jbe
dec
xchg
imul
in
push
ja
stos
mov
xor
xor
ins
fist
inc
inc
sahf
test
mov
dec
push
xor
imul
adc
pand
push
push
std
or
aad
hlt
test
push
movs
jae
push
cmp
ins
ds
icebp
in
addr16
adc
xchg
pop
adc
mov
xchg
cli
and
push
test
push
dec
jge
std
sbb
stc
pusha
or
pop
pop
push
cwde
out
popa
sahf
mov
push
(bad)
lods
or
lods
and
scas
jmp
jmp
mov
call
pop
sub
or
repz
aas
(bad)
cld
repz
aas
(bad)
cld
pop
add
fisttp
add
add
dec
inc
scas
inc
pusha
or
add
add
add
(bad)
(bad)
inc
add
add
add
add
add
add
jns
je
ins
cs
jb
ja
outs
addr16
push
gs
imul
xor
xor
inc
jne
je
jb
cmp
jb
ins
sub
push
jne
ins
imul
imul
bound
xor
data16
xor
fs
add
adc
gs
cs
jb
ja
outs
addr16
imul
add
popa
je
pop
add
add
add
add
add
lsl
add
mov
mov
inc
or
add
or
add
add
add
add
or
add
add
pusha
outs
rol
add
add
inc
dec
inc
add
mov
or
popa
add
jo
pop
jae
add
ret
add
push
ret
add
outs
test
add
adc
inc
inc
push
pop
inc
in
rol
loopne
ret
je
clc
arpl
getsec
fstp
mov
(bad)
je
sbb
xor
dec
or
data16
sti
xor
add
test
loopne
cwde
(bad)
imul
dec
mov
hlt
jns
aaa
adc
jmp
dec
mov
lods
mov
inc
jmp
pop
stos
cld
push
pop
adc
out
sbb
inc
mov
xchg
test
push
aaa
mov
mov
adc
xchg
jg
int3
xchg
scas
(bad)
cmp
push
hlt
pop
sbb
xchg
les
imul
das
cmps
(bad)
sub
aam
mov
(bad)
retf
and
js
cld
mov
sub
inc
aas
xchg
outs
add
mov
enter
inc
inc
and
sub
(bad)
push
push
out
push
cmps
cs
sahf
dec
pop
movs
jnp
mov
mov
and
rol
sub
stos
dec
xchg
mov
adc
jo
ins
fldl2e
sub
movs
and
in
mov
mov
lods
mov
js
pop
loope
xor
push
fucomp
ins
jo
cdq
jnp
adc
cmp
pop
push
add
out
pushw
push
dec
xor
xchg
cs
add
nop
call
scas
mov
das
adc
ffreep
cld
and
lods
in
imul
out
(bad)
push
sar
inc
(bad)
(bad)
pop
or
xor
push
call
xchg
out
ins
and
xchg
push
adc
into
lods
mov
mov
add
repnz
cmp
dec
sti
cmp
js
std
stos
and
repnz
cmp
out
and
push
ds
xchg
dec
hlt
(bad)
cwde
enter
ds
es
pop
lock
push
add
popf
cmp
enter
lock
or
jl
jbe
jmp
and
jmp
fldcw
inc
lods
in
mov
fwait
and
adc
pop
jo
xlat
loope
lock
div
scas
in
aaa
xchg
and
es
out
jo
inc
mov
mov
nop
in
adc
pop
sub
arpl
inc
inc
jns
repz
ret
pop
stos
or
mov
repz
sti
inc
add
in
mov
or
and
(bad)
sub
cmp
xchg
mov
lahf
sti
mov
lea
ins
scas
sbb
call
mov
jp
mov
adc
arpl
cmp
dec
fidiv
jg
pushf
(bad)
push
fnstenv
mov
push
cmovae
sbb
sbb
bound
xor
mov
js
push
dec
cmps
adc
cmc
ret
leave
arpl
aaa
scas
push
rcr
out
(bad)
pop
mov
les
jae
cmps
mov
add
out
add
dec
mov
inc
inc
int
out
xor
xchg
in
xor
jno
cmps
dec
cmp
pop
jmp
cmp
dec
stos
cmp
movs
mov
ror
and
adc
or
xchg
lea
mov
fcom
dec
push
(bad)
cdq
ss
mov
mov
fld
add
inc
loope
fidiv
xchg
inc
cmps
cmps
inc
sar
xor
pop
xchg
imul
les
xor
es
add
or
std
mov
jge
or
ins
add
out
outs
(bad)
ds
push
outs
mov
pop
xchg
inc
jnp
push
and
daa
jae
out
out
fwait
ins
iret
bnd
mov
ret
dec
out
pop
cmp
adc
sar
and
sbb
and
mov
popf
retf
call
inc
ror
lahf
jge
idiv
adc
popa
in
cs
dec
xchg
pop
ins
jb
sbb
xchg
or
or
mov
jge
push
sub
cli
cwde
shr
ret
cmp
mov
cmp
cmps
xor
aad
pop
push
pushf
loope
cmp
test
ins
xor
mov
fwait
pop
or
imul
sub
(bad)
pushf
xor
arpl
add
pushf
addr16
or
fwait
stos
push
cdq
mov
mov
jle
and
push
cmc
xchg
call
pop
add
push
cmp
add
sub
dec
arpl
cwde
out
xlat
enter
push
jmp
push
adc
pushf
cmp
mov
stos
add
mov
in
sbb
xchg
sub
jmp
mov
shl
push
sbb
xchg
xchg
xchg
shl
jmp
mov
jmp
ror
nop
ret
sbb
mov
addr16
mov
repz
nop
addr16
in
fdiv
mov
sti
add
xor
push
mov
test
xchg
popa
retf
mov
das
retf
loop
mov
lea
add
test
sub
scas
(bad)
sub
test
sub
in
shl
pop
sbb
not
shl
jmp
push
jno
cmp
test
scas
and
test
sbb
clc
jmp
mov
loop
stos
xchg
jb
pop
(bad)
sbb
scas
movs
xchg
mov
xchg
inc
xor
jecxz
dec
lds
or
pop
adc
push
or
arpl
loopne
(bad)
in
sbb
add
inc
fucomp
jmp
cmp
xor
add
pusha
imul
lds
das
pop
jg
cmp
pop
jno
rcr
call
adc
push
mov
xlat
ret
push
jae
movs
dec
out
enter
ret
loopne
mov
adc
clc
movs
out
stos
cld
loope
and
ja
push
xchg
xchg
cmps
push
(bad)
xchg
ins
outs
inc
outs
scas
ror
pop
pop
inc
test
mov
daa
pop
out
ret
rcl
outs
sub
pop
add
pop
les
and
mov
add
sti
jo
popf
adc
dec
mov
dec
rcr
cmp
xchg
push
dec
out
js
sub
fwait
or
or
or
mov
pop
(bad)
xor
pop
in
stc
ret
inc
gs
sub
xchg
ds
ret
or
pop
cmp
cwde
add
ds
and
sub
cmps
sub
fist
dec
push
mov
jae
and
mov
jns
xlat
cld
pop
xor
cmc
push
lods
dec
fs
inc
xlat
cwde
adc
not
mov
(bad)
and
cmc
jo
aaa
js
call
jle
int
inc
popf
mov
aam
jne
ins
ficom
in
jg
jb
test
mov
imul
sbb
pop
mov
setnp
push
pop
ret
nop
adc
(bad)
fst
push
inc
test
sub
arpl
ss
test
and
int
arpl
das
ficomp
xor
sub
xchg
mov
pop
jmp
dec
int3
cmp
jo
cmp
xchg
aam
cmp
inc
in
mov
ins
xchg
sahf
mov
into
jo
mov
pop
cdq
fmulp
or
loope
rol
adc
mov
(bad)
jle
and
inc
and
push
ret
inc
outs
cmps
sbb
mov
xor
mov
dec
adc
push
dec
loope
mov
repz
jb
push
sub
sbb
cmp
addr16
push
pop
in
test
lods
mov
call
test
sbb
or
jmp
leave
push
add
ds
pusha
jnp
pop
rcr
inc
pop
imul
mov
pusha
mov
shl
ret
cmc
or
lock
mov
mov
lea
cmp
dec
shl
(bad)
jmp
xor
jb
mov
ja
pop
push
popf
mov
adc
mov
mov
fs
sbb
jge
std
test
outs
jecxz
dec
push
jno
add
xchg
mov
aaa
in
adc
adc
cmp
pop
pop
out
iret
loope
iret
inc
xor
xchg
add
push
cwde
inc
loope
ror
fsub
push
push
fs
push
fidiv
mov
adc
fucomp
push
test
retf
cmps
mov
jns
mov
xchg
outs
mov
ins
adc
das
pop
mov
mov
ss
jnp
clc
inc
daa
jnp
test
aaa
push
movs
movs
lock
jg
mov
idiv
loopne
loopne
xor
cmc
mov
pusha
sbb
sar
fild
inc
cmp
or
clc
mov
mov
(bad)
inc
lahf
push
inc
cmp
dec
mov
sub
push
adc
popa
pop
sub
lds
or
sbb
mov
and
xchg
mov
je
mov
pop
inc
(bad)
mov
fistp
sbb
(bad)
sbb
and
or
repnz
int3
out
sbb
and
cmps
lock
out
repz
call
push
mov
cli
inc
jmp
xchg
aaa
fcomi
lods
fnstcw
ror
jbe
push
mov
aam
and
sub
imul
xchg
rol
call
sub
push
mov
pop
xchg
xchg
stos
dec
fimul
push
test
(bad)
fwait
and
jo
(bad)
sub
inc
sub
jmp
mov
push
test
ror
jle
dec
scas
mov
or
xchg
fidivr
cdq
int
cdq
jno
mov
pop
bound
jns
push
adc
cmps
scas
pop
cmp
call
adc
or
jns
movs
inc
lea
push
push
mov
inc
imul
in
push
clc
out
sti
add
mov
ret
pop
aas
ret
pop
(bad)
movs
std
cmps
popf
mov
lahf
xor
xor
jmp
mov
scas
sub
sti
cdq
retf
iret
jne
aas
sbb
ret
aam
jno
rcl
xor
cmc
mov
out
pop
jecxz
cmp
fistp
pop
sti
stos
sbb
and
adc
mov
jecxz
mov
shl
jl
mov
or
aam
mov
rcl
push
and
jno
sub
jns
jmp
jb
js
int
mov
pop
dec
cli
sub
ret
call
xchg
fadd
fcom
sub
sub
xor
into
pop
lock
sub
inc
inc
dec
bound
stos
std
jb
(bad)
adc
stc
xchg
imul
or
out
inc
movs
aas
aaa
arpl
jp
jg
mov
cmps
mov
mov
push
pop
mov
add
fidiv
aaa
leave
or
add
imul
pop
inc
push
adc
test
pop
popf
aad
jecxz
pop
cmp
xchg
xchg
mov
shl
je
jmp
(bad)
out
ret
repnz
bound
in
inc
fdiv
and
dec
in
outs
dec
adc
movs
arpl
add
repz
jmp
shr
inc
push
mov
dec
scas
jnp
mov
(bad)
sbb
iret
jb
int
push
aaa
mov
retf
fnstcw
inc
fadd
in
bnd
mov
outs
stos
push
pop
repz
sbb
cmc
fdivr
mov
retf
dec
int
push
fild
jge
clc
cmp
das
into
shl
retf
pop
adc
mov
jno
push
fs
fisubr
es
add
sub
pop
jle
xchg
pop
sub
lock
mov
sbb
sbb
inc
xchg
jecxz
sbb
mov
mov
fild
lea
sub
pusha
cmp
gs
loop
fs
int
push
dec
jmp
in
enter
iret
pop
outs
mov
es
js
test
in
jno
loop
mov
sub
hlt
cmp
into
les
mov
push
nop
data16
shl
jnp
mov
mov
or
(bad)
pop
iret
aam
sbb
data16
retf
jecxz
sbb
jb
dec
fild
scas
iret
(bad)
mov
pop
xchg
jmp
xchg
(bad)
out
scas
adc
cmp
mov
xor
das
scas
les
fidivr
push
les
jb
xchg
jne
pushf
sahf
rcl
jo
iret
xchg
push
call
pop
aad
ret
xchg
shr
icebp
push
dec
inc
rol
mov
das
stos
xor
fisubr
jns
jns
(bad)
jle
nop
jecxz
push
push
push
xor
sti
add
div
inc
xor
imul
cmp
push
dec
cmp
and
mov
cmps
xor
dec
sbb
movs
or
mov
loope
xor
cdq
push
mov
imul
dec
call
jns
mov
push
enter
cmps
mov
cdq
aam
inc
ja
cmp
mov
(bad)
xchg
ror
xlat
pop
or
mov
cmp
stc
mov
mov
inc
add
and
mov
push
in
sub
mov
ror
pusha
jbe
mov
inc
call
popf
mov
jge
mov
push
push
pop
jl
adc
cmp
lds
pop
into
dec
add
out
ins
movs
nop
ins
imul
xchg
out
leave
jp
clc
fwait
ds
or
mov
mov
xor
dec
push
retf
popa
add
cmp
ds
jbe
out
sbb
arpl
cmc
popa
test
cmps
pop
outs
iret
push
fsubp
push
add
xor
test
sub
add
test
sub
push
mov
pop
cs
pop
fsubr
mov
and
adc
fldcw
movs
xchg
into
adc
xchg
shl
jmp
cmp
loop
adc
in
movs
(bad)
int
sub
std
or
cmp
dec
test
inc
leave
pop
fsubr
ja
imul
cli
sub
fld
xlat
cs
sub
adc
cmovp
cmps
mov
mov
out
(bad)
loop
daa
into
retf
inc
mov
es
xchg
inc
stc
cld
xor
mov
push
jmp
sbb
mov
popf
pop
shr
mov
xchg
je
cmp
lea
aad
mov
ja
out
mov
push
xchg
out
xor
dec
leave
add
adc
into
push
xor
mov
jecxz
jbe
sub
and
mov
(bad)
cmp
xchg
mov
ds
mov
repz
dec
xchg
leave
outs
stc
xor
push
jle
fwait
inc
aad
pop
cmp
jnp
call
mov
movs
in
push
add
mov
pushf
mov
retf
add
pop
pushw
inc
dec
js
sbb
int3
dec
push
sub
mov
lock
jmp
popf
jecxz
mov
xor
mov
retf
or
mov
cmp
(bad)
retf
pop
mov
or
adc
xor
mov
jmp
sub
das
jmp
or
ins
push
xchg
mov
sbb
movs
pmullw
in
and
jo
test
(bad)
xchg
jbe
sbb
mov
pop
aad
test
mov
or
je
jg
loop
test
pop
mov
inc
iret
push
test
jl
in
xor
mov
stos
inc
ds
pop
add
dec
jmp
mov
sbb
rcl
jne
loop
mov
fcomp
xchg
or
push
mov
popa
sub
mov
scas
pop
int
sub
cmp
loopne
imul
outs
fiadd
nop
fstp
sub
pop
dec
push
pop
ret
mov
push
and
or
punpckhbw
push
sbb
lock
jb
(bad)
jecxz
aaa
sbb
in
mov
mov
es
mov
jg
cdq
hlt
cld
daa
movs
test
push
mov
in
add
cmp
and
pop
sub
sbb
pop
pop
cmp
xchg
mov
dec
xchg
in
dec
enter
arpl
mov
and
cmc
in
aas
stos
pushf
pop
dec
xchg
xor
sbb
add
mov
pop
push
aas
lods
xor
out
sbb
lea
cli
cmp
mov
sub
push
mov
pop
pop
arpl
(bad)
pop
repnz
fsubr
jae
mov
xor
mov
xchg
jmp
int
std
adc
ret
movs
shr
test
mov
mov
mov
imul
cs
jno
mov
or
call
add
cmp
(bad)
stc
out
jmp
lock
adc
jecxz
cwde
sub
add
dec
inc
scas
inc
pusha
or
add
add
add
(bad)
(bad)
inc
add
add
add
add
add
add
jns
je
ins
cs
jb
ja
outs
addr16
push
gs
imul
xor
xor
inc
jne
je
jb
cmp
jb
ins
sub
push
jne
ins
imul
imul
bound
xor
data16
xor
fs
add
adc
gs
cs
jb
ja
outs
addr16
imul
add
popa
je
pop
add
add
add
add
add
lsl
add
mov
mov
inc
or
add
or
add
add
add
add
or
add
add
pusha
outs
rol
add
add
inc
dec
inc
add
mov
or
popa
add
jo
pop
jae
add
ret
add
push
ret
add
outs
test
add
adc
inc
inc
push
pop
inc
in
rol
loopne
ret
je
(bad)
jmp
(bad)
je
ja
push
daa
xchg
pushf
out
into
jmp
out
leave
leave
fdivr
enter
add
mov
fcom
cmp
pop
(bad)
xor
push
push
test
js
jb
mov
rcr
mov
ds
or
mov
mov
pop
pop
and
ins
jnp
mov
in
mov
push
ja
jp
(bad)
rol
inc
mov
loope
das
mov
adc
popf
pop
mov
mov
or
mov
out
dec
mov
ret
in
mov
xor
pmulhuw
adc
(bad)
mov
lods
add
movs
add
mov
jle
inc
(bad)
ss
iret
adc
icebp
rcr
jbe
popf
(bad)
sbb
sbb
sbb
xchg
mov
mov
mov
or
into
ins
aas
popf
in
es
in
jne
ja
xchg
cdq
mov
cwde
outs
mov
test
add
aas
pop
cmp
and
add
popf
add
sbb
push
pop
(bad)
cdq
scas
rcl
inc
icebp
cmp
push
xlat
ret
call
mov
sbb
idiv
lds
inc
cmpxchg8b
cwde
dec
pushf
jne
pop
xchg
lock
jmp
ins
xor
fucompp
test
scas
rol
jo
cmp
bound
fs
out
shr
ret
mov
mov
aaa
ins
jg
xchg
cmp
(bad)
movs
mov
sub
movs
cdq
xchg
in
(bad)
out
cdq
jl
dec
fs
dec
inc
and
out
pop
cld
jbe
jns
xchg
std
jns
(bad)
mov
adc
push
and
jbe
adc
mov
int
xor
adc
pop
jg
sbb
xchg
clc
fadd
movs
inc
cld
xchg
fst
add
ret
repz
push
jne
push
lahf
ror
lock
js
push
lea
push
jo
inc
dec
cmp
fs
or
addr16
call
and
mov
sbb
xchg
inc
fcmovb
int
jecxz
repnz
and
adc
add
rol
and
dec
cs
add
pusha
push
in
or
jecxz
mov
ret
mov
mov
pop
dec
rol
arpl
push
aas
jnp
pop
dec
call
sub
sbb
repz
arpl
xchg
popf
xchg
xchg
mov
push
call
cmp
out
arpl
mov
cs
icebp
jns
cld
in
push
xchg
movs
jl
sbb
mov
aam
and
mov
in
mov
sti
test
mov
xchg
(bad)
pushf
push
inc
pusha
and
outs
stc
mov
in
rcl
push
jmp
repz
cmc
cmps
add
cs
in
inc
mov
retf
icebp
addr16
test
sbb
push
test
sahf
mov
fucomip
xchg
jbe
repnz
bound
dec
adc
inc
fwait
mov
xlat
lods
aad
dec
cwde
pop
add
cmp
mov
fistp
cmp
lds
mov
loopne
jmp
ret
sbb
call
jge
leave
cmp
pushf
clc
mov
out
and
dec
imul
pop
or
rcl
mov
aaa
inc
fs
outs
adc
in
adc
inc
shr
dec
xchg
jbe
jbe
adc
add
hlt
mov
jb
loop
sub
inc
dec
test
arpl
fistp
ins
aam
in
out
out
xchg
outs
jl
jp
adc
cdq
lods
dec
push
dec
mov
mov
ret
push
out
sub
mov
sar
(bad)
push
test
jl
mov
inc
xor
cmps
adc
add
xchg
jge
icebp
cmc
sbb
mov
mov
ret
loop
pop
jmp
or
dec
(bad)
clc
inc
dec
pop
mov
sbb
ins
(bad)
aaa
sti
imul
push
int3
in
sahf
push
(bad)
mov
and
mov
inc
scas
mov
mov
movs
adc
es
sti
sbb
jmp
cwde
cmps
sub
ja
inc
pop
sub
mov
lock
push
fistp
xchg
(bad)
push
rol
mov
rcr
or
test
leave
pop
fdiv
mov
loop
xchg
jbe
fdiv
jmp
repz
and
jp
mov
jne
add
jno
(bad)
dec
inc
dec
lods
jmp
or
sahf
dec
push
bound
popa
add
fldenv
cwde
jbe
cmp
paddd
frstor
xchg
daa
test
adc
ss
addr16
cmp
jns
and
call
or
inc
xchg
retf
push
out
sub
mul
or
mov
sub
jp
ins
test
data16
or
lea
mov
or
pop
xor
xchg
in
push
push
and
rol
cmp
scas
cmps
adc
ds
cmp
sub
scas
scas
rcr
icebp
sbb
push
aas
jl
dec
mul
test
mov
repz
and
aaa
mov
xor
movs
ins
dec
inc
mov
pop
push
mov
jge
cli
pop
jecxz
sub
sbb
cld
dec
or
test
fadd
mov
pop
std
mov
push
daa
adc
call
sar
cmp
sub
and
cld
sti
cdq
cmp
pop
sti
les
mov
test
inc
jmp
inc
cmps
adc
mov
mov
xor
aad
test
xchg
mov
pop
gs
xchg
mov
repz
push
xlat
retf
dec
add
and
inc
xchg
push
js
mov
cmp
cmc
xchg
xchg
dec
shl
cmp
sbb
rcl
dec
sbb
ja
pop
(bad)
adc
rep
pop
xchg
mov
sar
repz
dec
std
test
mov
sbb
mov
and
sbb
retf
(bad)
jl
pop
popa
fldcw
mov
push
sahf
mov
neg
sahf
rol
cmp
jl
scas
pop
mov
push
cmp
inc
arpl
loope
fnstsw
push
mov
dec
imul
sbb
xor
push
fiadd
cmp
push
jae
pop
inc
ret
inc
test
out
fadd
mov
out
daa
cmps
xchg
mov
pop
mov
and
push
jge
pop
cmp
ins
push
or
bnd
enter
adc
xlat
dec
jae
leave
or
add
lahf
aam
pop
imul
sbb
xor
pushf
hlt
pop
cwde
mov
mov
push
sub
cdq
mov
inc
jle
bound
into
(bad)
pusha
ds
inc
(bad)
push
jns
ret
lock
aam
jmp
aam
add
xchg
cmp
mov
(bad)
sub
retf
imul
add
es
dec
dec
retf
pop
nop
jl
call
aaa
mov
sub
mov
push
stc
in
pushf
call
sbb
mov
loopne
dec
fbld
nop
cmp
div
add
cmp
outs
mov
sbb
mul
data16
in
pushf
inc
loopne
out
in
or
out
sbb
push
bnd
xor
sub
jp
out
mov
fs
lods
fs
stos
in
js
xor
add
and
cli
pusha
stos
xor
xchg
mov
test
mov
aam
xchg
cmps
jne
sub
scas
loop
mov
test
movs
cmp
pop
mov
dec
jle
sub
or
fisttp
fwait
xchg
xor
into
jl
or
loopne
rcr
mov
mov
dec
xchg
mov
out
dec
adc
ds
movs
mov
ss
pop
outs
or
pushf
dec
out
mov
jmp
imul
jmp
jbe
jmp
mov
push
and
frstor
test
fwait
call
or
dec
add
loope
cmp
ja
cmp
sti
cmps
xchg
pop
inc
and
repnz
ret
cli
clc
into
jbe
pop
in
mov
sar
sub
cmp
xor
inc
out
jne
lds
sbb
sub
or
not
(bad)
mov
mov
inc
cdq
dec
lahf
inc
(bad)
out
xor
or
icebp
jno
xchg
jb
mov
push
les
cmp
jmp
sub
add
push
loope
xchg
cmp
jp
sub
pop
sub
out
cmp
pusha
xchg
(bad)
xchg
dec
sbb
int
dec
and
loopne
fbld
cmp
int
sbb
or
jnp
xchg
adc
sub
sbb
inc
pusha
jmp
imul
data16
push
jg
or
and
sub
mov
dec
out
add
sahf
mov
xor
jmp
into
or
hlt
jno
fs
dec
mov
retf
lea
and
ja
mov
mov
sub
xchg
repnz
pop
mov
lds
in
imul
stos
ins
call
jmp
jne
inc
stos
ror
addr16
inc
inc
fcomp
cmp
jb
jae
cmp
stos
pop
push
jp
adc
mov
ins
(bad)
scas
and
call
je
xchg
(bad)
cld
enter
and
and
ins
movs
pop
ror
push
mov
cli
dec
dec
or
loopne
mov
test
add
pop
js
sbb
scas
(bad)
pop
pop
xchg
shl
inc
xor
cwde
inc
and
sub
inc
pop
push
pop
gs
cwde
mov
mov
mov
cli
mov
sub
pop
popa
add
fxch
mov
pop
cmp
pusha
push
xchg
lds
ds
loopne
xchg
mov
bound
or
lds
test
xchg
fwait
cld
dec
push
and
cmp
push
movs
cdq
adc
jg
mov
fstp
jbe
sar
iret
pusha
(bad)
mov
imul
add
adc
in
dec
xchg
mov
movs
sbb
sub
cmps
sbb
mov
mov
inc
in
xchg
iret
cld
into
sbb
push
xlat
push
pop
iret
bound
dec
or
pop
shl
test
ins
dec
xor
rol
jmp
shl
xchg
imul
movs
idiv
mov
int3
imul
inc
xchg
call
xlat
pop
mov
mov
pop
mov
in
sub
mov
mov
or
mov
jmp
retf
je
cmp
mov
jae
not
or
and
cdq
xor
dec
repz
inc
adc
add
aad
mov
or
out
jae
rol
mov
loopne
xor
pusha
adc
add
fild
mov
sub
pop
inc
ret
stos
jl
jno
push
iret
mov
push
mov
xor
leave
sbb
ja
cmc
imul
and
call
daa
mov
sub
cdq
es
push
lock
inc
retf
shl
cmps
fisttp
and
retf
xor
lods
(bad)
jb
popa
fs
aas
xchg
iret
or
int3
fistp
int
jo
out
and
fwait
int3
fist
or
repz
push
cmp
sub
dec
loope
(bad)
adc
stos
xlat
lds
and
aaa
or
aam
fcom
xor
push
arpl
cs
mov
push
dec
jb
stos
popa
jge
in
adc
(bad)
cmpxchg
ja
or
jmp
sbb
inc
cmp
in
bswap
push
not
sbb
popa
push
dec
mov
mov
xor
sub
ins
push
inc
push
lods
pop
(bad)
fld
lahf
les
fidivr
pop
xchg
add
int
(bad)
pop
adc
test
rcl
in
scas
out
jge
pop
in
scas
inc
ret
mov
out
dec
shl
lods
daa
mov
ret
push
push
loop
xchg
shr
or
cmove
push
jns
cmps
je
add
dec
pop
jno
stos
ja
not
test
mov
cmc
int
sbb
sti
imul
adc
adc
adc
in
dec
xor
cmp
push
into
xchg
not
sbb
dec
mov
cmp
or
mov
mov
scas
sub
in
(bad)
retf
not
dec
pop
mov
jns
sbb
dec
mov
push
ss
xchg
outs
mov
jmp
adc
loopne
lock
ret
and
jmp
add
and
pop
shr
cwde
mov
ret
jp
fsubr
cdq
jge
adc
nop
arpl
lods
jne
dec
mov
xchg
es
cmp
jge
mov
clc
or
pop
xchg
sahf
push
repz
push
scas
sub
das
in
cmp
pop
shl
cmc
popa
dec
retf
sbb
mov
adc
mov
mov
movlps
cmp
int
jb
test
nop
jg
push
xabort
out
mov
pop
out
cmp
push
add
or
pop
imul
sti
and
rcl
js
push
jmp
xor
test
push
es
push
icebp
cmp
call
test
pop
outs
sub
fnstcw
cli
out
mov
push
lock
sti
and
inc
mov
cli
cmc
xor
enter
out
ja
mov
xchg
mov
(bad)
out
ret
call
neg
mov
and
sub
pop
in
mov
(bad)
xchg
xchg
fist
arpl
out
xchg
push
or
adc
out
push
jo
aas
jmp
dec
jbe
ins
das
in
fidivr
jae
rol
mov
or
cli
outs
mov
xchg
lock
mov
xchg
retf
xchg
mov
mov
popf
sub
(bad)
fcmovbe
mov
shr
cwde
jge
das
mov
mov
xchg
ret
call
mov
icebp
arpl
iret
fcom
adc
inc
xchg
and
mov
ja
adc
inc
cli
mov
adc
pop
xchg
or
or
xchg
and
out
dec
push
mov
aaa
pop
pop
das
adc
inc
cmp
inc
pop
retf
push
retf
add
inc
in
xor
cwde
iret
ror
cli
aas
out
call
push
lds
retf
inc
dec
jmp
cmp
aad
xor
lahf
mov
rcl
repnz
push
sub
call
cmp
push
mov
int
xchg
aam
js
lods
adc
mov
jnp
loope
and
inc
xchg
jl
fdiv
xchg
test
adc
test
out
add
mov
jb
push
pop
std
jae
aaa
mov
push
mov
lods
inc
sub
call
pop
mov
inc
lea
neg
dec
nop
call
imul
adc
data16
sbb
mov
pop
shr
test
mov
and
jnp
(bad)
aaa
(bad)
xchg
pop
stos
retf
call
jl
sahf
icebp
cmps
sahf
dec
pop
jmp
inc
test
test
ja
(bad)
or
xchg
mov
aam
inc
movs
call
loop
pop
scas
and
add
(bad)
or
cmp
js
dec
push
xchg
sbb
push
cmp
mov
fiadd
push
pusha
je
fyl2x
fcom
cmc
cmps
loopne
mov
jb
ret
shl
cld
xor
popf
test
inc
cli
adc
xor
movs
pusha
in
and
pop
ins
rol
loop
inc
pop
jp
outs
scas
xor
sbb
mov
out
shl
hlt
(bad)
jnp
fs
imul
jns
mov
jnp
sahf
push
pop
sahf
in
sub
pop
inc
ror
dec
fisttp
es
lsl
xor
cmp
pusha
cmp
add
mul
test
jmp
icebp
sbb
icebp
mov
stos
or
inc
xchg
push
pop
push
test
inc
sahf
mov
iret
push
stos
bound
call
jo
pusha
scas
repnz
pop
icebp
jb
push
jg
test
aas
(bad)
cld
repz
aas
(bad)
cld
pop
add
jmp
jge
mov
add
add
dec
inc
dec
inc
scas
inc
pusha
or
add
add
add
(bad)
(bad)
inc
add
add
add
add
add
add
jns
je
ins
cs
jb
ja
outs
addr16
push
gs
imul
xor
xor
inc
jne
je
jb
cmp
jb
ins
sub
push
jne
ins
imul
imul
bound
xor
data16
xor
fs
add
adc
gs
cs
jb
ja
outs
addr16
imul
add
popa
je
pop
add
add
add
add
add
lsl
add
rcl
add
mov
inc
or
add
or
add
add
add
add
or
add
add
pusha
outs
rol
add
add
inc
dec
inc
add
mov
or
popa
add
jo
pop
jae
add
ret
add
push
ret
add
outs
test
add
adc
inc
inc
push
pop
inc
in
rol
loopne
fisttp
jmp
jno
out
jmp
jae
scas
cmp
pushf
cmp
fnsave
rcr
fstp
pushf
call
repnz
jns
adc
push
fstp
lds
pusha
lock
dec
sahf
popa
pushf
jae
xor
popf
mov
mov
inc
inc
push
movs
pop
xchg
mov
mov
test
lds
pop
test
cmc
aaa
and
adc
jno
push
test
je
jge
dec
cmp
ret
into
sahf
sub
dec
in
dec
or
shl
adc
ret
(bad)
bound
outs
icebp
push
mov
ins
sub
push
mov
mov
dec
xor
test
inc
xchg
dec
stc
mov
addr16
pop
add
pop
jno
mov
shl
jmp
loopne
cmp
loope
sub
xchg
and
js
pushf
test
add
scas
adc
aam
stc
push
lock
fwait
and
int3
stos
push
aad
xchg
(bad)
out
mov
ja
test
in
push
or
leave
test
jne
pop
lds
sbb
pop
in
cmp
shl
out
test
sbb
(bad)
mov
imul
mov
ja
inc
shl
dec
pop
loop
sbb
adc
dec
dec
cmp
mov
hlt
aad
daa
jp
popf
fcomp
mov
scas
cmp
xchg
fld
push
fs
addr16
cmp
in
das
cdq
push
adc
push
and
imul
xor
mov
mov
sti
mov
jp
sbb
push
push
pop
and
or
xchg
fst
xor
mov
dec
sbb
ins
dec
jae
popf
add
popf
sbb
sub
jno
push
or
inc
pushf
nop
js
inc
fs
sub
pop
push
clc
inc
test
jo
add
iret
xor
mov
into
ss
push
scas
movs
call
mov
sub
adc
scas
fst
fst
sbb
ss
inc
pop
aaa
mov
outs
push
sbb
dec
retf
mov
and
jp
std
in
mov
mov
push
mov
inc
mov
xor
daa
push
fldcw
int
xchg
mov
pop
int
jo
retf
aaa
mov
adc
aam
mov
push
imul
fdivr
sbb
mov
jge
test
mov
fs
pop
or
fdivr
into
loopne
adc
jl
pop
cmp
and
cmp
mov
jl
clc
add
xlat
cmp
fbstp
dec
push
arpl
or
dec
mov
pop
xchg
mov
adc
sbb
loop
adc
xchg
jle
sbb
inc
lods
ss
and
xor
test
adc
enter
das
cmp
icebp
es
mov
cmc
jl
xor
dec
addr16
pop
xor
push
mov
mov
shl
sub
and
dec
mov
or
es
push
add
dec
mov
repz
(bad)
xor
cmp
fadd
and
(bad)
dec
mov
pop
(bad)
jb
icebp
push
mov
dec
fs
int
loope
call
mov
ror
outs
add
push
or
es
cmp
cmp
test
ret
sub
sub
add
retf
xor
fnsave
adc
(bad)
push
stc
xchg
shl
ss
cmp
jnp
dec
dec
sub
lahf
or
outs
xchg
mov
aaa
xchg
shl
pop
adc
sbb
cmp
mov
add
cmp
pop
xlat
sbb
outs
js
in
push
loopne
sub
mov
not
lahf
out
dec
arpl
mov
jmp
add
or
mov
mov
(bad)
pop
cmp
xor
test
pop
inc
mov
clc
test
shl
js
or
stos
cmp
xor
arpl
push
add
cli
hlt
sub
ds
call
push
add
push
jmp
inc
pop
xor
mov
ds
fisttp
sbb
adc
in
jbe
fdiv
jle
in
stos
sbb
ror
cmp
lods
inc
fcmovnu
mov
int3
xchg
stos
into
scas
loope
adc
nop
(bad)
sbb
and
scas
(bad)
mov
int
(bad)
cmp
cmp
cmp
mov
enter
(bad)
dec
sub
xor
cmps
(bad)
cmc
xor
int
dec
mov
test
xor
je
jo
lock
xchg
popa
jmp
aad
adc
xchg
push
ret
fld
test
retf
mov
mov
aad
stc
(bad)
nop
push
fidiv
sbb
or
sti
repnz
aas
call
push
and
jbe
popa
and
out
in
fisub
sub
test
pop
xchg
test
mov
jmp
add
mov
xor
jmp
jne
leave
je
dec
and
neg
sbb
lds
sar
add
fist
mov
lds
dec
mov
aam
xchg
arpl
or
aaa
xchg
jmp
into
adc
xor
sbb
imul
adc
scas
xor
pop
xchg
mov
rol
jmp
cmps
fwait
leave
pop
lods
cdq
cmp
imul
loopne
gs
shl
jae
in
inc
mov
xchg
jle
pusha
leave
and
pop
hlt
mov
push
pop
addr16
xlat
mov
mov
and
out
xchg
adc
es
sbb
adc
out
iret
pop
pop
scas
(bad)
in
cmp
sub
dec
dec
ficom
push
(bad)
stc
or
lods
and
jecxz
inc
inc
retf
add
je
js
pop
pop
inc
push
xchg
mov
jge
add
cmp
push
xchg
ret
push
push
retf
mov
das
popa
cmc
loopne
xchg
pop
adc
cmps
cmc
prefetch
adc
add
mov
stc
xchg
adc
add
test
mov
int
xchg
test
sub
jne
or
mov
sub
xchg
clc
push
cmps
cmp
scas
popf
stos
test
imul
pop
sti
jbe
mov
cwde
jg
jns
pop
inc
jge
into
scas
jle
lods
mul
jmp
into
lods
mov
sub
jo
pushf
fstp
int
cmps
cmp
lea
mov
out
inc
push
in
ja
test
rcl
xchg
push
ret
mov
out
inc
pushf
xchg
mov
lods
mov
sub
lods
shr
pushf
je
cdq
xor
cwde
outs
xlat
mov
hlt
into
call
(bad)
mov
enter
xor
int
sbb
mov
(bad)
fnsave
mov
fwait
out
add
outs
stos
sahf
ret
pop
fidivr
enter
ror
add
and
in
jb
pop
popf
sti
aaa
call
stc
xor
aas
test
dec
mov
sbb
fdiv
aas
jae
out
int3
mov
out
lahf
test
(bad)
retf
(bad)
xlat
out
mov
sub
and
and
inc
adc
leave
movs
outs
(bad)
fucom
mov
ja
out
in
mov
in
enter
sub
cmp
adc
nop
(bad)
mov
fstp
jmp
jno
inc
inc
push
stos
fst
fsub
mov
sub
loope
inc
push
mov
ds
xchg
or
dec
fwait
imul
outs
push
inc
loop
inc
dec
test
ret
push
push
inc
add
ins
xor
out
pop
push
jge
dec
ss
push
or
mov
and
mov
push
stc
mov
ret
pop
mov
xchg
fsubr
mov
xor
shl
lahf
push
xchg
int3
sub
or
and
idiv
test
or
sbb
pop
xor
rcr
enter
sti
in
jo
ret
pop
lods
pop
xchg
pop
or
push
test
fimul
mov
fs
aad
sbb
pushf
or
push
loope
lahf
xor
pop
stos
sti
fild
jmp
lods
daa
stc
(bad)
in
mov
xchg
inc
pop
outs
mov
inc
in
mov
dec
pop
jne
mov
jbe
idiv
jl
sub
mov
mov
movs
mov
adc
in
add
mov
dec
inc
mov
xchg
stos
push
dec
mov
int
imul
inc
push
add
mov
pop
lds
add
ret
push
js
mov
retf
dec
icebp
test
mov
clc
mov
ins
jecxz
fsub
add
int
jl
movs
scas
pusha
mov
scas
pop
(bad)
into
mov
sub
jmp
cmps
pop
mov
daa
and
dec
gs
xor
jne
pop
mov
push
imul
js
jno
hlt
push
jg
sbb
out
cmp
jle
xor
rcr
sbb
inc
push
sbb
es
pop
fimul
mov
jo
dec
xor
cmp
nop
and
repnz
cmp
loope
push
xor
sti
fmulp
jnp
sahf
aaa
cmp
lahf
inc
aam
std
lahf
jmp
add
mov
inc
push
xor
loope
mov
xlat
pop
dec
jmp
xchg
jo
lds
retf
and
dec
lea
shl
into
cmp
(bad)
adc
sar
mov
pop
div
xchg
jmp
mov
xchg
scas
cmp
pop
xor
int3
dec
and
test
xchg
jns
mov
push
(bad)
repnz
rcr
cmp
fisub
or
aam
jns
clc
clc
sub
inc
and
cmp
mov
fcomp
jp
push
mov
pop
adc
add
pop
imul
sbb
clc
fadd
repnz
push
pop
mov
addr16
jne
pop
push
or
mov
cmp
xchg
jbe
xchg
(bad)
jbe
mov
ss
dec
jge
add
lods
imul
sub
sub
stc
(bad)
out
sahf
xchg
mov
call
in
(bad)
repnz
and
mov
mov
pop
test
leave
push
jmp
inc
cld
mov
pushf
cmp
es
ret
cmp
jns
loop
mov
adc
or
mov
(bad)
cmps
mov
leave
push
fisubr
sub
jae
adc
or
xlat
popa
imul
mov
mov
xchg
(bad)
pop
rol
imul
sbb
pop
and
les
add
sbb
gs
push
fdivr
pushf
fldcw
xor
sbb
retf
dec
xchg
fsubrp
adc
enter
mov
lahf
mov
add
xchg
(bad)
ds
pop
and
jo
inc
loope
rcl
adc
add
es
dec
inc
mov
mov
dec
jge
jmp
es
in
bound
je
mov
push
cmp
jmp
jle
por
add
mov
jle
fsub
inc
fstp
or
xlat
mov
mov
rcl
inc
movs
ja
jb
xor
adc
mov
xchg
or
and
fwait
xchg
in
mov
jne
rcl
adc
mov
sahf
stos
jb
int
sub
test
adc
mov
sbb
stos
pop
(bad)
call
movs
dec
bound
cmp
out
and
lods
sar
pushf
and
pop
sub
dec
je
(bad)
sahf
iret
test
lahf
pop
mov
push
jecxz
repnz
add
in
mov
movs
mov
repz
(bad)
mov
push
rcr
mov
mov
setno
fwait
sub
aad
mov
mov
inc
mov
inc
mov
aas
cmps
or
and
loop
fist
mov
stc
xchg
(bad)
gs
jbe
sub
pusha
shl
int3
inc
cmp
sbb
adc
stos
cmp
stos
stc
cld
push
cmp
push
pop
push
imul
out
and
pop
rcr
and
add
push
sahf
or
dec
fbstp
int
imul
std
pop
inc
sbb
cmp
lds
mov
movs
pop
adc
int
push
dec
test
jb
loopne
daa
(bad)
fdivr
cwde
and
mov
aam
or
outs
call
fwait
pop
loope
movs
inc
dec
leave
mov
les
xchg
mov
dec
fistp
cmps
retf
imul
outs
test
ss
add
inc
push
(bad)
test
cdq
pop
daa
je
sbb
jmp
mov
mov
leave
in
mov
lahf
dec
mov
inc
les
jle
dec
push
cmc
sbb
lds
fyl2x
ins
jbe
mov
clc
rcr
sbb
jge
arpl
fisubr
mov
ss
jecxz
cmp
mov
xor
sub
outs
dec
inc
mov
push
ins
jne
shl
xlat
addr16
push
dec
stos
and
pop
inc
loopne
jg
add
mov
mov
aaa
sbb
stos
push
retf
add
mov
(bad)
push
xchg
sbb
xor
test
pop
rcl
push
aas
mov
les
mov
sub
inc
push
shl
pop
sbb
lahf
and
imul
add
adc
rol
xlat
push
sbb
dec
push
loopne
push
jne
inc
xlat
and
xchg
inc
jbe
stc
gs
fisub
jbe
mov
mov
cli
fsub
ins
mov
jmp
es
sbb
jb
inc
cmp
or
call
xchg
sub
icebp
push
int3
js
outs
push
stos
xor
iret
xchg
fld
iret
cmp
inc
test
xchg
fcomp
inc
ret
(bad)
sub
iret
cmp
dec
sbb
inc
push
cmp
aas
or
scas
sub
push
cs
mov
pop
xlat
pushf
push
jmp
ins
shr
cli
and
jno
mov
pop
mov
jne
movs
dec
xchg
aaa
jo
aad
fistp
sbb
aaa
mov
mov
adc
retf
and
icebp
add
dec
les
adc
pop
shl
mov
xchg
fwait
cmp
xchg
cmc
rcl
int
cmps
mov
jbe
push
adc
je
rcl
sub
xor
mov
mov
cld
mov
pop
ror
cmp
mov
mov
or
or
add
enter
std
lds
add
pushf
adc
inc
or
mov
xchg
(bad)
push
fwait
cmp
push
fisub
data16
jge
test
mov
(bad)
sbb
fmulp
lahf
sub
xor
repz
jb
cmp
stc
xchg
loopne
aad
mov
jge
ins
sbb
inc
ror
enter
out
cmp
fs
pop
sub
bound
int
div
inc
enter
pop
ret
iret
das
adc
dec
push
push
jmp
sub
sub
xor
pop
es
vpcmpgtd
into
ins
xor
mov
cmp
(bad)
sub
jo
mov
push
sub
mov
sbb
arpl
add
pop
mov
cli
daa
pop
adc
scas
inc
cdq
and
sub
pop
repnz
outs
xchg
add
test
cmc
xchg
gs
jns
mov
push
or
adc
in
idiv
add
dec
or
fcomp
jp
stc
dec
push
mov
(bad)
addr16
inc
and
outs
xor
and
xor
jae
out
loope
pop
and
js
fisub
lea
stos
shl
pop
lods
xchg
movs
push
dec
retf
sub
(bad)
shl
pop
shl
fist
inc
xchg
(bad)
cmp
lods
adc
push
retf
adc
jae
mov
pop
push
in
dec
push
xchg
clc
dec
sti
jb
mov
jp
(bad)
and
cmp
add
lock
aas
(bad)
cld
repz
aas
(bad)
cld
repz
add
pop
addr16
les
add
add
dec
inc
scas
inc
pusha
or
add
add
add
(bad)
(bad)
inc
add
add
add
add
add
add
jns
je
ins
cs
jb
ja
outs
addr16
push
gs
imul
xor
xor
inc
jne
je
jb
cmp
jb
ins
sub
push
jne
ins
imul
imul
bound
xor
data16
xor
fs
add
adc
gs
cs
jb
ja
outs
addr16
imul
add
popa
je
pop
add
add
add
add
add
lsl
add
rcl
add
mov
inc
or
add
or
add
add
add
add
or
add
add
pusha
outs
rol
add
add
inc
dec
inc
add
mov
or
popa
add
jo
pop
jae
add
ret
add
push
ret
add
outs
test
add
adc
inc
inc
push
pop
inc
in
aad
and
ret
add
ror
in
cmps
arpl
fcmovnbe
je
fsubr
outs
adc
sbb
in
xor
cmp
fwait
jbe
(bad)
out
idiv
jl
pop
add
call
xor
mov
cwde
test
stos
das
maskmovq
not
out
lea
arpl
test
clc
test
fisttp
data16
dec
aam
das
fstp
call
ja
mov
cmp
sbb
and
xorps
mov
ins
repnz
loop
int
mov
xchg
push
push
mov
mov
lods
cli
mov
aaa
jnp
pop
pop
pop
push
neg
movs
or
or
mov
mov
aaa
xor
jne
dec
ret
loopne
xor
sbb
popa
cmp
fisub
pushf
jbe
pop
mov
aam
adc
mov
jecxz
jo
jbe
mov
fscale
cmps
mov
adc
rcl
dec
pop
dec
jmp
add
xor
in
jl
jmp
dec
iret
add
test
inc
pusha
dec
dec
xchg
fimul
ja
pop
fadd
(bad)
mov
mov
dec
lahf
and
fst
stos
adc
cmps
cmps
mov
pushf
xchg
xchg
add
mov
xchg
outs
xchg
sub
cmp
nop
jns
pop
aad
and
(bad)
mov
outs
push
gs
dec
pop
js
fnop
(bad)
push
mov
mov
mov
xchg
jg
fnstsw
sub
cmp
push
pop
cmps
sbb
adc
cmp
into
xor
mov
push
mov
ret
pop
or
cmp
int
and
outs
(bad)
cwde
push
add
jne
clc
imul
retf
jb
loopne
jo
fcmovnbe
test
fild
xor
jb
bound
and
inc
pop
data16
mov
jl
mov
mov
(bad)
ret
loopne
bound
jge
sbb
mov
jge
je
fistp
inc
inc
aam
retf
push
mov
adc
movs
rcl
or
ror
adc
dec
data16
sub
call
movs
sbb
int
push
mov
mov
jle
stos
(bad)
cmp
xchg
push
sbb
jecxz
cmp
cmps
mov
and
pop
retf
mov
mov
scas
lods
pusha
cmp
mov
in
dec
int3
add
and
movs
ds
dec
xchg
mov
xlat
push
mov
xor
scas
scas
inc
jns
enter
push
maxps
les
xchg
retf
inc
out
pop
fwait
stos
sbb
mov
std
sti
int
xor
xor
xor
sbb
imul
or
cmp
iret
xchg
sbb
cld
mov
pop
in
mov
imul
jge
lods
mov
mov
loopne
mov
fsubrp
sbb
aaa
sbb
or
mov
(bad)
in
mov
(bad)
sub
sbb
jne
add
iret
shl
imul
outs
scas
xor
aam
xchg
mov
and
inc
int3
loope
ficomp
add
and
ins
sti
jg
xor
test
outs
int
cmps
add
outs
fnstsw
(bad)
sahf
hlt
pop
mov
std
xchg
adc
call
data16
and
pop
mov
xchg
inc
mov
lock
ss
mov
jge
sahf
retf
fnstenv
neg
repnz
sbb
rcr
out
jp
jno
and
mov
sbb
jg
arpl
xchg
jl
jle
int3
aas
mov
cmp
pop
shl
movs
cdq
mov
fsubrp
inc
repnz
test
or
pop
data16
out
cwde
xchg
ins
cmp
mov
dec
je
sub
fwait
aas
aad
pop
push
adc
cmp
mov
jmp
mov
outs
xor
sub
or
push
mov
movs
(bad)
adc
inc
jne
fisubr
xchg
repnz
dec
xchg
sti
enter
hlt
dec
sub
pop
xchg
mov
test
sub
in
jge
mov
rcl
sar
shl
rol
rcl
ins
call
shr
aaa
shl
push
push
mov
(bad)
sbb
retf
fist
test
and
retf
adc
in
mov
ins
sub
inc
and
jl
jb
xchg
ret
xor
fwait
int
pop
jno
shl
push
sbb
out
inc
xchg
push
stos
out
mov
shr
bound
push
xor
add
mov
push
and
fst
cmp
enter
aam
sub
fisttp
sbb
bound
les
mov
xchg
sbb
add
mov
jne
sub
sub
mov
sub
cmps
fcmovb
jge
sub
add
(bad)
call
push
clc
push
xchg
dec
test
lods
push
xor
mov
push
out
mov
xchg
(bad)
shl
arpl
in
fsub
sti
test
xchg
(bad)
mov
movs
mov
inc
or
leave
test
ret
pop
lods
cs
adc
ret
sbb
int
pop
outs
push
js
loopne
data16
inc
je
shl
dec
inc
fisub
in
pop
mov
inc
cmc
lods
xchg
fadd
ret
jmp
ffree
stos
sahf
fucomi
push
fs
or
push
or
stos
mov
jl
and
(bad)
enter
cmps
in
int3
dec
cmp
cmp
repnz
cmp
iret
cmp
push
or
not
int3
ja
cdq
mov
mov
jns
addr16
and
xchg
outs
loope
call
pop
jmp
and
mov
les
push
or
sbb
cld
imul
sbb
cmp
mov
inc
mov
adc
std
aaa
xchg
fist
inc
pop
lods
jb
dec
xchg
gs
(bad)
(bad)
mov
adc
rcl
cwde
mov
push
pop
loope
scas
mov
jmp
fcmovnbe
jecxz
fdivr
push
push
cmps
or
fidiv
cld
dec
xchg
sbb
mov
cmp
mov
test
cld
inc
cwde
imul
mov
sbb
mov
cmp
and
jo
sub
xchg
loope
stc
fisubr
mov
icebp
adc
ins
cmps
xchg
sbb
test
cmc
push
adc
sbb
not
pop
outs
add
xchg
mov
or
cmp
dec
mov
mov
movs
and
inc
sti
cld
(bad)
popa
popa
xchg
push
enter
jl
adc
sahf
leave
(bad)
and
sbb
out
scas
ret
sbb
(bad)
and
(bad)
shr
pusha
std
xor
es
push
sbb
dec
add
dec
inc
out
sub
stc
push
mov
imul
dec
retf
and
xchg
adc
jbe
repnz
lock
adc
mov
call
mov
(bad)
shl
cmp
xchg
std
jns
in
dec
pop
into
(bad)
int
jmp
pop
mov
hlt
sbb
and
jb
xchg
fisttp
dec
jns
jmp
mov
mov
rol
mov
call
(bad)
push
into
ss
and
arpl
ss
lea
and
cmp
push
lahf
inc
fwait
inc
mov
ins
retf
mov
jne
xchg
retf
mov
scas
xor
mov
pop
lds
(bad)
sti
fisubr
and
call
(bad)
mov
sub
das
inc
scas
daa
shl
stos
ss
loopne
or
and
fneni(8087
add
in
xchg
mov
adc
fild
inc
xchg
retf
xchg
pop
ins
inc
fimul
loope
ja
xchg
sub
add
mov
scas
imul
(bad)
imul
int3
rcr
xchg
xor
add
lahf
inc
pop
(bad)
(bad)
cmp
cmps
clc
jle
fmul
add
out
adc
mov
inc
stos
je
stos
mov
sub
ins
ds
ins
shr
mul
in
fwait
and
jp
jmp
pop
loop
push
loopne
out
hlt
icebp
mov
int3
add
lahf
movs
sbb
sub
arpl
jge
cmps
sbb
mov
push
mov
push
movs
dec
xchg
xlat
or
loopne
jae
sbb
add
leave
mov
pusha
or
adc
cmps
pop
jge
adc
fstp
outs
xchg
fsub
sub
int3
repz
fild
and
pop
lock
dec
mov
imul
gs
cmps
fld
inc
adc
jns
repz
call
jge
sub
retf
sbb
sbb
jmp
ret
in
jle
jb
jmp
lock
mov
dec
mov
sub
jp
lods
loop
in
jbe
xchg
fimul
jl
stos
mov
in
enter
imul
jb
sub
push
and
outs
xchg
push
je
or
cmp
aas
adc
aas
lock
and
push
mov
or
fnsave
sti
(bad)
mov
fimul
add
jl
cmp
lahf
pop
mov
xchg
pop
retf
fwait
sbb
stos
mov
sar
mov
sti
out
xor
in
test
mov
cdq
pushf
call
mov
sbb
mov
add
xchg
and
mov
adc
adc
ds
cmp
ins
in
sbb
mov
mov
push
pop
in
aad
in
jmp
dec
mov
xor
jne
repnz
mov
adc
aaa
jno
mov
mov
or
xor
addr16
pop
sbb
sub
(bad)
les
fimul
retf
movs
in
(bad)
inc
pushw
es
xor
aad
fmul
or
test
jno
test
fwait
call
sbb
das
stos
sti
aam
fld
aaa
jo
aad
jle
xlat
(bad)
push
out
sbb
push
das
mov
adc
jle
inc
add
mov
dec
inc
xchg
push
outs
and
jl
mov
mov
jmp
fiadd
xor
std
sahf
mov
cdq
sub
and
dec
ret
sbb
sbb
hlt
xchg
xchg
call
xor
hlt
(bad)
push
and
mov
adc
dec
aaa
push
cdq
(bad)
nop
hlt
ja
int
movs
iret
(bad)
fisub
icebp
test
cmc
(bad)
and
movs
push
out
test
push
push
sub
nop
xchg
xor
out
push
adc
fdiv
inc
add
adc
add
test
stos
cmp
test
adc
dec
push
mov
in
adc
jl
imul
jle
inc
dec
loope
cmc
or
fdiv
adc
retf
adc
nop
aad
test
leave
cmp
fs
std
lods
(bad)
aad
pushf
push
xchg
hlt
or
iret
mov
rcr
test
shl
xchg
adc
add
jmp
repnz
call
sbb
pop
iret
push
adc
inc
sti
push
inc
xchg
xchg
and
aaa
cmp
outs
aaa
or
push
or
ret
mov
sub
dec
cld
(bad)
jns
scas
arpl
js
add
fcom
xor
out
lods
hlt
aad
or
out
int3
xchg
sub
inc
add
mov
mov
call
popa
jo
(bad)
out
hlt
and
add
pop
pop
cmp
iret
rcl
adc
cmps
movs
jl
sbb
dec
xchg
div
sbb
cld
add
out
jbe
xchg
sbb
(bad)
ds
sbb
xchg
dec
in
mov
stc
jo
add
out
mov
xor
add
sbb
test
sar
cdq
pop
pop
jle
add
xchg
push
pop
dec
pushf
mov
loopne
test
out
ins
adc
adc
jmp
push
aam
mov
jecxz
dec
arpl
movs
mov
jmp
daa
scas
cdq
pop
jp
sub
std
add
pop
ds
sub
push
sbb
into
pop
js
mov
fnstenv
test
mov
xor
loopne
cmps
cmp
lahf
inc
add
pusha
mov
out
jmp
mov
mov
lods
push
cmps
dec
sbb
xor
xor
mov
icebp
ja
or
and
ds
popf
call
cld
sub
push
data16
sbb
and
xchg
in
shl
leave
not
add
jp
mov
ins
js
shr
aad
push
sub
rcr
pop
outs
pop
stc
je
and
mov
js
cld
adc
dec
in
mov
cmp
js
gs
pusha
inc
adc
xchg
jae
mov
cmp
xchg
jmp
fistp
xor
xchg
dec
mov
jmp
push
cmp
jo
cwde
sar
or
pop
cmp
xchg
stos
cmp
dec
test
scas
movs
push
jne
push
add
jg
(bad)
loopne
mov
rcr
jno
sbb
inc
retf
xchg
mov
push
bound
outs
arpl
aam
cld
mov
repnz
ds
pop
mov
outs
mov
scas
inc
or
mov
xchg
dec
dec
sbb
call
pop
sbb
lahf
repz
xor
add
inc
aas
jle
add
or
sahf
inc
dec
dec
ins
test
not
sbb
call
push
test
idiv
add
mov
stos
mov
enter
imul
ins
out
push
std
or
jae
add
jge
adc
int3
ds
in
outs
and
sti
(bad)
into
(bad)
(bad)
and
xchg
arpl
and
rcl
inc
push
fcomp
jg
cmp
xchg
pop
fwait
sub
outs
and
adc
dec
xchg
arpl
in
inc
push
sub
mov
and
cmps
stos
mov
xchg
lahf
push
nop
xchg
mov
inc
and
jbe
cmc
ja
adc
hlt
add
imul
aad
call
mov
nop
sub
call
loope
add
out
jmp
into
cmc
xchg
or
mov
data16
loopne
dec
dec
mov
mov
push
(bad)
jns
nop
fwait
jnp
mov
and
push
and
icebp
push
cs
and
sub
out
or
(bad)
int
push
pop
std
repnz
sar
std
sub
dec
test
adc
push
xor
jp
sbb
lock
outs
jae
jg
jns
cdq
lds
push
adc
xor
cmps
mov
dec
adc
dec
push
test
xlat
es
int3
jmp
mov
clc
(bad)
repnz
pop
jecxz
mov
xor
pop
mov
cdq
out
icebp
mov
mov
inc
test
lods
jmp
loopne
or
in
mov
aam
xchg
xchg
mov
xlat
push
imul
inc
push
mov
mov
dec
outs
jns
sahf
or
jns
sub
push
jmp
fsub
rcl
jb
dec
int3
retf
jb
(bad)
xlat
push
adc
xchg
(bad)
push
xor
add
(bad)
je
pop
repnz
add
ins
out
in
xor
sub
add
jbe
fild
fstp
iret
lock
fidivr
mov
call
add
das
jle
jb
mov
mov
loope
mov
fwait
movs
daa
call
rol
xchg
(bad)
(bad)
adc
cli
adc
popf
pop
jmp
xchg
adc
dec
push
in
arpl
jl
daa
(bad)
or
lods
adc
or
(bad)
scas
das
lods
mov
cmp
ret
call
mov
gs
test
ror
jmp
or
adc
dec
lock
aad
rol
(bad)
jmp
inc
mov
js
lds
jmp
movs
call
lock
lahf
sbb
cmp
call
xor
push
loope
dec
addr16
dec
cli
(bad)
movs
cmp
inc
adc
or
add
ss
(bad)
fmulp
jmp
fbld
add
shl
fisttp
dec
mov
js
and
mov
and
pop
inc
inc
mov
push
dec
mov
clc
out
jg
stc
out
jg
stc
jg
add
pop
leave
std
adc
sub
cwde
add
add
dec
inc
dec
inc
scas
inc
pusha
or
add
add
add
(bad)
(bad)
inc
add
add
add
add
add
add
jns
je
ins
cs
jb
ja
outs
addr16
push
gs
imul
xor
xor
inc
jne
je
jb
cmp
jb
ins
sub
push
jne
ins
imul
imul
bound
xor
data16
xor
fs
add
adc
gs
cs
jb
ja
outs
addr16
imul
add
popa
je
pop
add
add
add
add
add
lsl
add
mov
mov
inc
or
add
or
add
add
add
add
or
add
add
pusha
outs
rol
add
add
inc
dec
inc
add
mov
or
popa
add
jo
pop
jae
add
ret
add
push
ret
add
outs
test
add
adc
inc
inc
push
pop
inc
in
rol
loopne
cmp
fstp
jno
ja
(bad)
ins
cmp
frstor
fiadd
ret
je
repz
ja
add
test
xchg
xchg
dec
pop
pop
pop
xchg
xor
sti
cld
cwde
lods
dec
aaa
lea
retf
cmp
loope
pop
(bad)
fbld
jp
ret
xchg
(bad)
adc
cmp
jno
mov
xor
ja
cld
rol
sbb
fsub
retf
and
mov
scas
cmp
jb
pop
pop
pop
(bad)
mov
push
mov
(bad)
scas
fnstsw
xchg
pop
cmp
cwde
and
imul
pop
mov
and
xor
rol
inc
lods
int
xor
(bad)
mov
push
push
iret
xchg
dec
js
sub
(bad)
bound
jecxz
xor
cld
pop
lahf
inc
xchg
call
or
add
cmp
rcl
and
dec
mov
cli
jae
jnp
inc
out
in
sbb
es
pushf
mov
sub
jbe
inc
push
xor
xchg
push
jbe
jle
fdivr
daa
dec
and
pop
push
std
push
cwde
jge
jmp
pop
mov
inc
test
xchg
mov
add
enter
jno
dec
outs
xor
mov
retf
inc
fiadd
nop
xchg
mov
lea
xchg
lds
rol
mov
and
jle
ficom
mov
pop
dec
(bad)
(bad)
aad
or
or
pop
push
sub
push
jnp
in
jne
inc
mov
into
cmps
jns
dec
in
test
or
push
in
stos
hlt
jmp
lds
add
jbe
loop
shl
dec
and
cmp
fisubr
and
movs
sahf
inc
cli
xor
mov
push
jle
cmps
sub
arpl
ja
jmp
jmp
out
push
push
jl
ffreep
pop
icebp
aas
pop
xchg
dec
pop
mov
scas
add
sbb
iret
rcr
jp
adc
mov
ret
inc
jbe
in
xor
inc
sbb
add
int3
sub
fldenv
mov
cs
mov
or
cdq
jg
in
rcr
fs
jle
xchg
popa
add
lods
in
imul
shl
mov
xchg
stos
ins
mov
adc
gs
js
iret
inc
or
fwait
movs
(bad)
neg
lods
daa
(bad)
jno
mov
aas
dec
mov
jbe
add
mov
mov
shl
cmp
adc
sub
retf
(bad)
fadd
jno
adc
call
mov
hlt
mov
inc
ins
cmp
or
arpl
outs
adc
inc
lds
pop
rcr
push
mov
pop
add
dec
dec
pop
jmp
pushf
fild
jo
xchg
mov
xchg
push
and
or
mov
xchg
out
stos
cmp
ss
mov
and
cwde
adc
cmp
repnz
rcl
jns
in
add
dec
xor
jmp
jmp
push
movs
ja
movs
jnp
mov
mov
ret
out
mov
xor
stos
mov
or
movs
pop
mov
jge
call
mov
nop
push
bound
ins
inc
ins
mov
fcomi
dec
mov
loope
mov
cmps
iret
sub
mov
ret
fld
mov
jmp
sbb
test
push
and
dec
and
stos
xor
xor
std
xchg
rol
pop
jne
mov
popf
and
cmps
pop
movs
xor
cmp
xchg
cli
retf
push
int
sti
cwde
and
mov
add
mov
sub
outs
dec
fsubr
cld
sub
sbb
lar
adc
jbe
(bad)
loop
clc
pop
xchg
mov
mov
lods
dec
popf
cmp
push
sub
mov
call
movs
xchg
push
push
sar
sub
jne
sbb
push
mov
rol
cmc
or
cli
sbb
div
inc
leave
jo
adc
imul
je
(bad)
out
aaa
bound
xchg
dec
xchg
out
or
jl
stos
push
or
in
push
pop
mov
call
shl
mov
(bad)
movs
mov
fdivr
loopne
stos
js
pop
sbb
fadd
sub
mov
es
retf
sub
repz
loope
ja
pop
(bad)
aad
fs
cld
enter
cmp
aas
int
sbb
jb
xor
int
aas
sub
scas
rol
sub
inc
fcmovnbe
adc
xor
inc
repz
rcl
add
or
jmp
push
jmp
jb
mov
sbb
dec
jnp
sub
xchg
pop
dec
ins
std
pushf
sbb
lds
xchg
addr16
mov
shl
ret
cmp
ds
xor
hlt
adc
push
push
inc
cmp
cmps
adc
test
das
xor
jecxz
adc
add
dec
imul
dec
std
rcl
iret
add
push
inc
and
jl
in
and
outs
mov
repz
push
je
sbb
mov
mov
adc
ficom
lahf
sti
fwait
dec
test
dec
lods
stos
test
jnp
movs
icebp
sub
push
pop
repz
add
div
ja
mov
jae
inc
cmp
adc
mov
je
arpl
jbe
push
es
fcmove
fadd
jne
test
aas
retf
popf
pop
in
pop
adc
add
xchg
adc
jge
push
enter
cmps
and
(bad)
inc
ret
pop
xchg
outs
sahf
sub
loope
push
cmp
ins
fs
in
imul
gs
dec
mov
or
sub
mov
outs
aaa
push
pop
leave
mov
out
sbb
in
loop
aas
xlat
and
bound
fcomp
mov
mov
jge
das
jnp
pop
cmp
mov
(bad)
adc
jns
ss
lahf
pop
mov
(bad)
mov
mov
add
xchg
pop
shl
jp
(bad)
idiv
iret
cmps
push
pusha
call
mov
xchg
test
repz
xor
sub
ins
pop
pop
sub
jp
cs
shl
and
retf
pop
pop
sub
test
xchg
aaa
lea
(bad)
jmp
push
xchg
shr
push
leave
sub
adc
nop
stc
(bad)
adc
push
and
mov
ss
bound
(bad)
aas
retf
pushf
add
fs
xchg
mov
xchg
pop
fs
sar
ret
sub
xchg
iret
imul
ret
dec
dec
mov
xor
cdq
mov
mov
aad
enter
fmul
jg
jg
and
or
mov
outs
into
rcl
btr
adc
push
xchg
js
mov
pop
inc
out
and
ss
pushf
sti
in
push
xor
or
xchg
add
idiv
cmp
jle
sub
ret
and
out
inc
xor
mov
and
inc
in
cmc
inc
dec
lea
push
outs
fbld
xchg
cli
stos
shr
mov
xor
aam
pop
sahf
test
mov
jg
out
imul
push
in
or
ins
dec
sub
cmps
xor
inc
retf
(bad)
adc
push
push
gs
and
leave
mov
mov
mov
ret
and
adc
pop
(bad)
pushf
xchg
jbe
inc
pop
call
inc
cmp
lods
cmp
shr
mov
retf
imul
or
and
cmps
scas
movs
test
pushf
scas
lods
cmp
jns
call
pop
cmp
or
pop
in
or
push
dec
sbb
sub
data16
xchg
push
fnstsw
pop
ret
call
stc
mov
ss
(bad)
jg
std
call
mov
and
out
leave
pop
loopne
shl
stc
ret
mov
sub
jae
inc
xchg
mov
add
ds
xor
xor
jmp
cli
arpl
dec
jl
lds
or
mov
mov
mov
(bad)
pop
jbe
sub
daa
dec
xor
cmp
push
lods
shl
or
jnp
and
jg
ret
inc
cs
in
(bad)
cli
sbb
pop
sbb
mov
pushf
or
push
fild
and
mov
pop
mov
and
call
in
retf
pushf
gs
loop
mov
add
push
or
into
add
cmc
or
je
inc
sub
retf
loopne
xor
mov
inc
mov
adc
fmul
add
pushf
arpl
sbb
dec
call
lea
in
and
cmp
push
sub
jae
mov
ja
adc
repnz
cli
ficom
or
ret
mov
int3
in
jecxz
fidiv
xchg
and
pop
push
pop
nop
and
adc
bswap
lock
inc
and
std
arpl
iret
addr16
les
int
inc
pop
xor
popa
packssdw
mov
add
sti
jecxz
push
mov
mov
pop
and
daa
pop
cdq
mov
sub
mov
jmp
sti
inc
push
cmps
adc
repz
shl
pop
mov
mov
push
neg
rcr
(bad)
test
xchg
cmp
std
push
std
dec
pop
push
cmps
dec
fadd
sub
das
jns
cmp
in
mov
or
mov
leave
imul
div
nop
cs
xchg
in
add
hlt
rol
or
mov
mov
dec
push
or
hlt
sub
pop
in
lea
mov
stos
ds
popf
repnz
(bad)
xchg
xchg
cmp
add
in
ror
(bad)
jg
ja
clc
icebp
outs
aaa
loop
ds
mov
xor
int
mov
jno
lods
mov
mov
add
push
sti
lock
cmp
(bad)
sub
mov
imul
cmps
dec
dec
mul
push
xchg
mov
push
bound
push
frstor
and
dec
mov
lahf
lock
sbb
daa
inc
mov
dec
leave
sub
fdiv
dec
push
in
xor
jbe
adc
and
inc
mov
dec
imul
jns
pop
mov
add
in
icebp
lea
cmp
jmp
push
mov
cli
xchg
loope
icebp
cmp
push
add
into
pop
fwait
mov
lock
xor
retf
loope
test
iret
sub
mov
and
mov
inc
icebp
sbb
ins
cmps
inc
add
or
leave
mov
fdiv
mov
icebp
daa
inc
dec
ss
add
adc
bnd
dec
not
fld
repz
ds
push
stos
lock
sub
loopne
xor
aad
imul
test
outs
sub
cdq
cmp
jnp
outs
lahf
pop
loopne
retf
movs
mov
cmp
add
pop
push
inc
sbb
shr
xor
mov
dec
lahf
pusha
adc
adc
je
sbb
mov
adc
mov
mov
push
test
stc
dec
sahf
retf
loope
jno
mov
mov
arpl
dec
jb
es
ins
jns
mov
xchg
xchg
mov
psraw
fisubr
cmp
movs
xor
mov
xchg
xsavec
xchg
movs
loope
or
add
xchg
pop
fld
dec
fidivr
inc
push
in
mov
or
fwait
cmps
loopne
push
push
jl
sub
mov
sbb
dec
mov
fiadd
xchg
repnz
xchg
jbe
mov
xor
or
sti
out
push
mov
dec
in
call
add
sbb
cmps
sqrtps
cmp
and
adc
not
(bad)
adc
pop
mov
sub
pusha
out
mov
(bad)
repz
jle
ret
ds
add
inc
in
imul
mov
movs
fsubr
cmps
or
(bad)
sbb
cmp
push
jno
mov
xlat
xor
loopne
push
xor
sar
sbb
pop
mov
mov
loop
sbb
imul
mul
je
or
pop
popa
pop
retf
ret
ret
push
mov
xor
adc
mov
inc
sti
out
sbb
movs
push
push
sbb
sahf
cmp
imul
mov
mov
xor
sub
push
dec
les
movs
jle
test
pop
dec
add
or
data16
ss
or
mov
push
mov
adc
ret
sahf
(bad)
out
fcom
stos
pop
inc
sar
or
add
and
cmp
xchg
mov
call
in
mov
outs
out
add
xor
jp
loope
lods
dec
jmp
xchg
int3
or
pop
jg
mov
and
push
lods
xchg
pop
or
call
sub
repz
ret
cmp
(bad)
xchg
retf
mov
push
dec
je
outs
cmp
(bad)
(bad)
(bad)
adc
push
push
jle
fbstp
icebp
add
xchg
lahf
adc
out
rcr
mov
push
dec
ror
xchg
retf
imul
fistp
fwait
dec
mov
aad
adc
push
pop
ins
or
push
cmp
jb
jmp
cmp
test
or
in
sbb
mov
cli
ror
xor
lods
push
stos
icebp
call
aas
sub
adc
xor
mov
or
aam
es
cmp
pop
lods
test
mov
test
dec
ins
shr
shl
pop
in
and
push
adc
aaa
or
shr
jle
ror
xchg
int
push
out
ret
push
cmps
rcl
inc
cmp
fmul
bound
mov
fbstp
ins
add
(bad)
mov
stc
or
(bad)
pushf
daa
cmps
ret
sbb
lea
pop
cmp
mov
sub
inc
shr
xchg
(bad)
mov
ds
sub
(bad)
lods
test
ins
ja
(bad)
cmps
gs
fcomp
sub
sbb
dec
mov
int3
cmps
ret
adc
pop
idiv
inc
fs
xor
(bad)
repz
dec
sbb
xchg
push
push
xor
repnz
mov
pxor
or
and
cld
jbe
addr16
js
sbb
scas
ins
rcl
test
jo
imul
dec
es
xchg
sub
loopne
pusha
lds
pusha
jl
xlat
xchg
adc
jecxz
sbb
fs
dec
(bad)
(bad)
mov
aas
retf
jb
add
cmc
mov
inc
stc
push
mov
loop
xchg
daa
sti
jp
js
std
jp
sbb
(bad)
xchg
or
(bad)
sub
outs
aas
loope
jmp
adc
add
add
pop
jmp
jecxz
dec
das
in
cmp
pop
call
aaa
or
je
xor
fs
cmp
out
lods
xchg
mov
xchg
dec
movs
dec
fs
sub
xchg
call
fmul
mov
fwait
in
lahf
fwait
dec
mov
ins
(bad)
and
push
dec
jae
call
lea
dec
sub
fadd
sbb
leave
adc
push
movs
test
xchg
shl
push
lea
call
fadd
mov
stc
iret
sbb
mov
mov
int
imul
hlt
cmc
xor
pop
push
mov
push
cs
movs
cmp
je
in
push
ds
(bad)
push
cwde
(bad)
xor
outs
push
data16
ss
xor
lahf
sbb
stc
or
ret
push
cld
les
fbstp
mov
xchg
jbe
inc
jle
in
mov
and
pop
and
jae
imul
das
fidiv
out
push
in
fidivr
pop
test
mov
aas
(bad)
cld
repz
aas
(bad)
cld
repz
add
pop
leave
push
in
mov
add
add
dec
inc
dec
inc
scas
inc
pusha
or
add
add
add
(bad)
(bad)
inc
add
add
add
add
add
add
jns
je
ins
cs
jb
ja
outs
addr16
push
gs
imul
xor
xor
inc
jne
je
jb
cmp
jb
ins
sub
push
jne
ins
imul
imul
bound
xor
data16
xor
fs
add
adc
gs
cs
jb
ja
outs
addr16
imul
add
popa
je
pop
add
add
add
add
add
lsl
add
ret
adc
add
mov
inc
or
add
or
add
add
add
add
or
add
add
pusha
outs
rol
add
add
inc
dec
inc
add
mov
or
popa
add
jo
pop
jae
add
ret
add
push
ret
add
outs
test
add
adc
inc
inc
push
pop
inc
in
xlat
push
inc
ror
and
popf
mov
hlt
call
xchg
or
dec
and
nop
xchg
out
xchg
sbb
sbb
sbb
out
mov
sti
hlt
push
add
sbb
cli
out
xchg
jl
mov
cmp
jbe
and
jge
rep
add
mov
jns
pop
fild
add
scas
(bad)
add
cmp
push
shl
not
in
mov
in
retf
sub
push
sbb
mov
xor
jnp
arpl
fiadd
mov
mov
(bad)
in
aas
idiv
add
scas
push
mov
cmp
clflush
push
into
leave
jg
inc
out
retf
xor
popa
mov
push
scas
pop
je
inc
stc
(bad)
xlat
or
js
imul
jne
pusha
xor
test
mov
xlat
jbe
movs
hlt
sbb
fstp
pop
mov
(bad)
repnz
ins
dec
xchg
ror
adc
add
fcomp
mul
pop
popa
enter
(bad)
dec
pop
add
mov
cmp
stos
sub
cmc
inc
mov
cmp
add
pop
pushf
xchg
jnp
lahf
push
xor
das
mov
jns
hlt
out
movs
mov
shr
mov
inc
inc
mov
mov
xor
push
clc
xor
inc
add
leave
xor
in
aaa
data16
adc
pop
jns
mov
mov
pop
jge
sar
jne
mov
add
in
mov
aad
repz
aad
sbb
mov
mov
add
outs
cmp
es
int3
inc
imul
xchg
lahf
cmp
ds
sbb
xchg
(bad)
mov
jne
push
xor
mov
mov
gs
sbb
mov
rol
pop
xchg
dec
cdq
mov
fiadd
ss
retf
add
movs
repz
or
outs
fdivr
dec
nop
fbld
inc
mov
enter
fidivr
sbb
neg
(bad)
outs
les
and
dec
cmp
or
xchg
daa
sbb
es
add
xor
or
adc
push
mov
sbb
mul
jae
inc
in
outs
popa
aad
leave
xchg
aas
test
pop
xchg
test
gs
cmp
pop
rcl
in
mov
xchg
int
packssdw
gs
push
jbe
jecxz
cmp
clc
push
scas
movs
shl
rcl
out
add
icebp
mov
add
dec
push
xchg
(bad)
call
sbb
jns
cdq
mov
(bad)
cmp
jmp
pop
ret
cmp
ret
loopne
scas
inc
add
fwait
ss
sbb
mov
push
sbb
daa
mov
and
cmps
mov
es
jge
and
test
mov
mov
and
js
xor
(bad)
and
int3
fs
xchg
inc
or
stos
call
sub
movs
int3
xchg
data16
call
pushf
aad
dec
jl
sbb
mov
xchg
adc
jnp
inc
push
stos
pop
shl
sbb
xlat
dec
xor
xor
push
sbb
je
lods
or
lea
dec
pop
push
(bad)
ror
xchg
pop
xor
mov
mov
mov
mov
cmp
shl
pop
and
pop
jg
in
ins
movs
pusha
scas
adc
cmps
or
es
fcom
fs
xor
popa
xchg
push
loope
iret
mov
inc
add
aad
push
mov
inc
add
inc
enter
mov
mov
lds
stos
cs
in
stos
in
in
or
int3
adc
sar
leave
xlat
adc
sub
cmc
mov
cmc
cmp
and
jge
hlt
in
push
and
out
mov
sahf
or
adc
or
push
popa
bound
mov
pusha
mov
mov
sbb
lods
or
pop
pop
or
call
jo
pop
fadd
es
ja
jecxz
or
push
sub
movzx
popf
sbb
icebp
xchg
inc
neg
dec
cdq
mov
adc
je
jb
xchg
pop
js
lss
mov
push
scas
xchg
leave
int3
mov
movs
cs
xchg
aas
fsubr
popf
lock
rcr
sbb
push
fucom
cwde
mov
clc
std
mov
cmp
lock
outs
push
jp
not
jmp
cmps
push
fbstp
add
add
cs
or
push
clc
sub
test
cmp
rcr
movs
mov
or
adc
cmp
mov
xchg
(bad)
mov
dec
add
jmp
mov
aas
test
cmps
pop
call
(bad)
shl
push
mov
pop
in
daa
retf
sbb
inc
and
dec
xor
cmps
mov
inc
mov
sti
popf
inc
retf
pop
mov
xor
retf
xchg
pop
push
fwait
std
leave
sub
mov
dec
loopne
dec
dec
jne
dec
cmp
nop
stos
frstor
cmp
sub
lock
jno
mov
inc
js
cli
inc
leave
ret
adc
pop
or
sti
dec
ret
pop
retf
stos
adc
in
or
mov
out
ret
imul
or
inc
jbe
xor
(bad)
imul
mov
aaa
popf
fidiv
mov
mov
fidiv
imul
pop
mov
out
ins
out
add
retf
mov
jns
shr
jge
jmp
push
jle
jmp
(bad)
iret
push
xor
dec
loopne
and
lds
inc
adc
cmp
sub
pop
daa
xor
xchg
and
jp
lea
retf
pop
ror
sub
push
daa
mov
mov
int
arpl
std
mov
xchg
cmps
popa
pop
arpl
cmp
fwait
movs
cmps
xchg
outs
mov
jo
aaa
push
mov
or
inc
lods
inc
sar
jl
jo
pushf
retf
push
sub
(bad)
push
push
adc
popf
nop
out
pop
pop
sar
loop
cmp
into
jecxz
jae
mov
test
inc
pop
int3
stc
cs
std
adc
sbb
and
stos
cmp
inc
ret
je
xchg
jae
call
mov
jp
shr
push
pusha
inc
push
pop
loop
cmp
pop
or
mov
cmp
pop
sahf
mov
add
call
push
xchg
mov
cmps
cmc
mov
loope
(bad)
jmp
or
cmps
cmp
mov
ror
cdq
xchg
pop
aaa
jge
push
mov
mov
xchg
dec
mov
arpl
push
pop
cmp
pop
push
mov
mov
aas
scas
cmps
jae
lea
pop
add
out
lods
shr
or
(bad)
pushf
push
dec
push
push
movs
lods
push
loop
pop
in
xchg
cli
pop
mov
test
imul
test
sub
sbb
in
out
imul
retf
loopne
pop
push
add
arpl
stos
cmp
xchg
xor
pop
xchg
jg
pop
in
jbe
leave
into
mov
pop
push
push
pop
stc
mov
inc
into
cmp
and
fwait
retf
cli
stos
nop
rol
repnz
cwde
fistp
lods
std
call
sbb
push
or
outs
ret
leave
jmp
mov
inc
sahf
and
pop
dec
je
lods
stos
sub
fcomp
adc
sbb
jno
popa
cmp
into
pusha
pop
xchg
and
inc
loope
sar
loop
jg
jae
push
inc
lds
and
dec
aas
pop
(bad)
cwde
mov
push
jmp
pop
mov
inc
std
inc
js
(bad)
les
movs
data16
xor
jg
inc
adc
sub
in
or
and
push
movs
and
lahf
xchg
in
call
sub
xor
jne
cmp
fdivr
je
inc
xchg
shl
mov
push
inc
sti
pop
add
adc
cwde
jnp
int3
lock
pslld
sub
out
mov
inc
ret
out
fs
scas
or
outs
inc
fnsave
enter
movs
stos
xor
lock
rcr
movs
mov
xchg
(bad)
imul
pop
sbb
scas
(bad)
repnz
mov
leave
and
cli
retf
mov
dec
mov
jmp
add
mov
lea
stos
mov
mov
pop
shl
cs
in
shl
push
adc
lock
push
aam
sub
push
mov
(bad)
std
jbe
mov
adc
gs
cmp
lods
out
lock
push
cmps
shl
sub
push
mov
sbb
ins
dec
daa
sti
sbb
retf
jnp
jle
add
fidiv
ja
(bad)
jae
dec
stos
xor
xchg
sbb
add
ja
in
cmp
rcr
mov
sahf
sub
(bad)
jo
ret
or
cmps
loopne
les
or
push
xor
mov
mov
dec
pop
mov
push
rcr
daa
in
fidivr
int3
mov
cmovp
xchg
mov
inc
loopne
cwde
xchg
arpl
inc
jmp
dec
xor
jmp
es
shr
mov
shl
retf
push
sbb
mov
ret
xlat
(bad)
cmp
pop
icebp
mov
mov
je
push
mov
inc
cmp
sbb
imul
inc
pop
mov
mov
lock
adc
loope
icebp
inc
arpl
inc
or
inc
or
mov
iret
shl
mov
mov
movs
push
fs
fisubr
(bad)
hlt
sub
sbb
lods
jns
fwait
pusha
xchg
jp
fisttp
mov
lahf
scas
or
dec
sub
add
cwde
or
call
cmp
cmp
or
cmp
cmc
out
in
je
mov
iret
inc
inc
out
sar
not
aas
inc
jbe
xchg
ins
imul
pop
int
test
es
jo
jmp
cmc
mov
mov
inc
arpl
arpl
shl
cmp
fisub
aaa
iret
stc
or
push
jmp
sbb
or
loop
mov
call
sub
pop
mov
shr
xor
stos
cmp
ja
es
mov
cmp
cmp
inc
xchg
sbb
jmp
pop
scas
jmp
ins
xor
cmp
ins
scas
mov
fistp
push
mov
dec
adc
add
pop
sub
sbb
and
mov
mov
cmp
ja
cmps
arpl
ins
inc
xor
push
in
ins
bswap
add
jl
addr16
iret
scas
or
adc
or
call
sbb
sti
adc
sbb
xchg
fisubr
jp
(bad)
jmp
and
push
mov
jbe
ja
cmp
int3
push
sbb
in
xor
shl
inc
fst
add
lahf
les
or
xchg
jmp
sub
sti
in
pop
xchg
jmp
jo
loopne
fnsave
shl
cmp
xor
jno
sti
fadd
jns
ret
cmp
inc
popf
test
dec
les
xor
and
test
les
test
popf
ret
pop
mov
pop
or
imul
jns
aam
cmps
mov
cli
ins
and
pop
ds
lds
or
dec
repz
mov
adc
loopne
pop
pop
movs
mov
pop
jge
dec
nop
fnstenv
push
adc
mov
sti
clc
jl
sbb
mov
xchg
rol
fcomp
xor
sbb
fs
sub
mov
into
test
sbb
cmp
inc
ds
arpl
(bad)
jb
jne
call
mov
push
xchg
jno
rcl
dec
scas
jecxz
out
pop
ret
cmps
dec
call
or
jno
and
pusha
aam
jbe
jae
gs
push
cmp
mov
pop
clc
pop
jnp
ret
(bad)
sbb
mov
aad
iret
jno
inc
scas
or
ins
dec
mov
pop
idiv
mul
in
dec
mov
icebp
xchg
in
sbb
pop
dec
arpl
adc
aaa
dec
pop
and
adc
cmp
xor
mov
inc
ja
and
jno
adc
retf
mov
xchg
arpl
adc
retf
push
cmp
cmp
cdq
mov
jge
stos
push
and
dec
ret
mov
jp
dec
outs
dec
daa
or
loopne
mov
add
cmp
scas
stos
pop
dec
into
sar
push
not
push
fidivr
stos
add
int
js
push
je
pop
xchg
ja
push
xchg
jl
out
fstp
(bad)
jl
push
xchg
lods
xor
int
test
or
xor
mov
gs
imul
jge
and
fisttp
xchg
adc
(bad)
ins
aad
add
and
mov
ins
popf
(bad)
retf
iret
or
inc
inc
(bad)
jp
pushf
xchg
and
stc
xchg
lods
scas
addps
shl
cmp
dec
cmp
inc
jmp
lods
iret
scas
dec
adc
lods
inc
add
fwait
mov
jns
mov
ss
int3
cmp
push
pop
mov
cmp
fld
xor
and
retf
mov
xor
call
imul
in
cmp
js
cmp
pop
mov
cwde
dec
pop
ror
adc
and
mov
std
pop
sub
pushf
or
xchg
(bad)
in
movs
push
(bad)
push
add
fnstenv
xor
inc
test
or
aad
ss
das
dec
jo
sahf
xor
pop
leave
jl
out
repz
inc
rcl
push
test
test
mov
call
xor
jnp
jae
cmp
movs
dec
mov
xor
(bad)
mov
mov
xchg
cld
mov
jne
jnp
jle
mov
adc
cmp
shl
aam
or
mov
jmp
mov
cmp
push
sbb
imul
pop
int3
xchg
mov
out
inc
and
mov
or
rcl
inc
vphsubwd
sti
fs
rol
test
gs
pop
mov
pop
or
xor
loopne
add
in
pop
test
sahf
ja
push
or
xlat
(bad)
js
imul
jae
push
cmp
add
mov
xchg
xchg
pop
popa
mov
stos
xchg
sub
pop
lds
cmp
xchg
inc
bndldx
jnp
jns
jp
adc
push
ja
adc
mov
stos
jnp
icebp
(bad)
(bad)
loopne
adc
and
(bad)
pop
pop
mov
add
inc
or
cmp
in
xchg
jns
lahf
test
push
mov
(bad)
das
jmp
ja
in
cmps
mov
jmp
push
ret
jns
jb
jl
mov
inc
test
jno
int
fidivr
fsubr
push
push
mov
fcomi
mov
pusha
cmp
cmp
mov
inc
les
xchg
pop
nop
out
adc
dec
faddp
or
test
dec
gs
mov
mov
push
sbb
mov
je
into
mov
inc
daa
test
mov
aam
in
mov
call
or
dec
adc
je
add
jno
push
daa
push
test
js
das
cmp
xchg
and
push
cmc
jnp
aas
dec
or
int3
and
xor
pop
cmps
inc
mov
xlat
pop
dec
mov
jo
fild
loopne
jg
stc
out
jg
stc
out
sbb
cld
minps
xor
dec
inc
dec
inc
scas
inc
pusha
or
add
add
add
(bad)
(bad)
inc
add
add
add
add
add
add
jns
je
ins
cs
jb
ja
outs
addr16
push
gs
imul
xor
xor
inc
jne
je
jb
cmp
jb
ins
sub
push
jne
ins
imul
imul
bound
xor
data16
xor
fs
add
adc
gs
cs
jb
ja
outs
addr16
imul
add
popa
je
pop
add
add
add
add
add
lsl
add
mov
mov
inc
or
add
or
add
add
add
add
or
add
add
pusha
outs
rol
add
add
inc
dec
inc
add
mov
or
popa
add
jo
pop
jae
add
ret
add
push
ret
add
outs
test
add
adc
inc
inc
push
pop
inc
in
rol
loopne
pushf
ror
cmp
dec
dec
outs
cli
in
je
cmp
dec
mov
ja
sar
cwde
ds
cmps
dec
ja
sti
inc
fidivr
xlat
sbb
sub
cdq
retf
add
call
(bad)
pusha
dec
jnp
es
stos
arpl
xchg
stos
pop
mov
cmps
xor
test
leave
mov
mov
imul
vunpckhpd
dec
xchg
and
pop
mov
sub
inc
dec
inc
pop
pop
xchg
aad
imul
xor
ficomp
dec
in
js
jmp
jae
sbb
les
sahf
mov
add
pop
in
cwde
dec
lods
pop
add
ret
and
stos
jne
pop
cs
cmp
out
jg
xchg
pop
mov
test
mov
enter
dec
outs
(bad)
sub
(bad)
cwde
cmp
jne
popa
adc
cmp
xchg
ret
movs
inc
push
add
sti
jecxz
sbb
mov
das
mov
je
pop
iret
in
lds
aaa
mov
call
int
jae
push
xor
jb
retf
and
push
pop
aad
or
loopne
xor
xchg
cdq
mov
and
pushf
shl
xchg
daa
scas
je
ins
xlat
enter
cmp
cdq
jp
pop
sar
repz
cmp
popa
vsubss
nop
jecxz
inc
stc
int3
or
mov
or
cmc
cmp
jae
pop
aam
pop
mov
mov
xchg
lds
inc
sub
dec
sbb
cs
jnp
push
(bad)
(bad)
adc
outs
in
xchg
push
sbb
sub
fmul
jno
js
popf
pusha
jns
ins
aad
stc
shr
add
inc
jno
test
test
mov
rcr
mov
adc
shr
into
clc
jge
pop
mov
aas
add
dec
(bad)
lods
cmc
jbe
mov
sbb
clc
jo
fnsave
ss
pop
icebp
mov
jp
fwait
lahf
(bad)
or
sbb
lahf
sbb
aam
gs
loopne
inc
xor
sub
mov
fcomp
sti
shr
push
outs
call
dec
pop
hlt
sar
push
nop
cmp
sub
xchg
sub
imul
xchg
sahf
jg
movs
outs
jae
nop
push
pop
addr16
push
xchg
sub
fisubr
push
and
(bad)
or
xchg
shr
mov
push
pop
loope
cmc
ret
inc
mov
test
gs
cmc
cmps
test
test
jae
sti
(bad)
pop
mov
(bad)
lds
jne
test
mov
ja
cmps
mov
xchg
mov
mov
rcr
js
nop
mov
scas
aad
repz
xchg
add
lar
push
cmp
fwait
xor
scas
in
pop
xor
sub
xchg
jbe
mov
not
xchg
mov
xchg
lock
pop
aaa
in
mov
pop
in
fsub
sub
outs
jae
stos
out
mov
push
aam
and
imul
out
dec
push
jb
mov
jecxz
aam
aam
das
ds
push
ins
pop
jno
ror
xchg
jmp
pop
mov
outs
popf
sti
test
das
jbe
mov
ss
push
push
dec
ss
jp
inc
out
shr
sahf
mov
mov
pushf
push
pop
push
mov
test
sbb
(bad)
outs
sub
mov
xchg
icebp
push
adc
scas
mov
fistp
icebp
or
sbb
mov
inc
js
shl
inc
enter
mov
add
push
push
jle
sbb
out
scas
mov
test
gs
enter
and
mov
jnp
mov
icebp
or
js
sub
mov
popf
outs
dec
pop
sub
sti
pop
mov
or
and
push
ja
aam
mov
cmp
pop
enter
popa
sti
xor
mov
inc
imul
in
cdq
xchg
pop
jl
ins
daa
jmp
sbb
bound
xchg
aam
mov
inc
popf
mov
jecxz
ja
sub
mov
retf
repz
sbb
aad
mov
sbb
aaa
xchg
adc
push
sub
sub
dec
dec
(bad)
adc
cmp
mov
test
adc
jg
add
xchg
mov
sub
iret
mov
jo
mov
sbb
popf
out
shl
xor
les
(bad)
out
sbb
inc
retf
jmp
lock
lds
dec
stc
pusha
dec
das
jmp
cs
add
rol
imul
mov
clc
loop
das
jns
call
daa
adc
push
out
leave
leave
sar
xor
ret
sbb
in
or
inc
xor
xchg
daa
add
jae
shl
mov
mov
and
xor
push
clc
sbb
sbb
imul
jne
xchg
inc
loop
pop
ins
xor
cmps
aam
sar
mov
aas
dec
call
or
js
pop
push
into
pop
arpl
arpl
(bad)
dec
pop
jae
shr
pop
dec
aaa
xchg
out
(bad)
pusha
xchg
daa
ss
(bad)
mov
inc
movs
ins
sbb
mov
jae
ja
mov
enter
outs
fmul
mov
mov
add
jae
pop
mov
xor
mov
mov
lea
imul
push
(bad)
cmp
stos
adc
adc
adc
mov
jbe
or
xchg
sub
sar
inc
sar
push
mov
pushf
mov
(bad)
push
xor
movhps
cld
fisttp
pushf
ins
pop
ret
cdq
scas
or
adc
push
xor
xchg
jno
push
imul
cmp
jg
jg
cmp
xchg
out
mov
scas
jmp
into
xchg
xchg
arpl
or
jle
movs
xor
push
call
stos
mov
je
and
jl
int3
nop
jmp
push
inc
and
jbe
xor
mov
jbe
pop
int
push
enter
pop
adc
and
in
sub
in
or
jge
shr
adc
xlat
mov
pop
lahf
inc
inc
(bad)
shl
mov
inc
aam
sar
in
pop
xor
add
je
lahf
pop
jle
xor
xor
lds
sbb
xor
lock
dec
inc
or
add
cmp
(bad)
ret
inc
call
xor
hlt
outs
les
leave
pop
jl
mov
lods
jb
comiss
add
js
test
movs
sar
shl
mov
fld
cmps
bnd
icebp
retf
aad
add
lods
mov
dec
or
fsub
lahf
pop
call
jle
shl
pop
cld
jmp
ror
cmc
push
das
jo
cmps
shl
dec
adc
mov
sbb
sub
push
jae
fld
cmp
rol
icebp
mov
lds
pop
addr16
scas
test
lods
jg
(bad)
mov
lds
dec
jg
scas
push
adc
repnz
pusha
inc
adc
or
mov
out
ficom
dec
fst
in
idiv
dec
test
sub
sar
out
cmps
mov
ret
and
std
mov
sbb
cmps
das
scas
mov
jne
mov
popa
mov
pop
and
sub
mov
sar
mov
add
movs
(bad)
pop
sbb
mov
jno
sti
mov
(bad)
mov
and
cmp
test
cmp
rcr
div
cs
sub
adc
mov
mov
aaa
sub
cmc
rcl
or
pop
mov
mov
sbb
inc
cs
imul
add
mov
mov
mov
cs
mov
es
sbb
shl
push
mul
sahf
into
and
push
add
fcmovu
mov
sub
mov
inc
cmp
adc
pop
popf
outs
mov
retf
enter
cmps
(bad)
repz
ds
dec
xchg
mov
adc
push
add
sahf
sbb
jnp
gs
pop
lods
movs
pop
out
sub
ins
dec
dec
add
aam
push
jae
cmps
sub
fidiv
repz
loope
ja
push
sub
iret
fisubr
inc
rcr
push
cdq
push
(bad)
popa
dec
add
mov
out
movs
adc
sub
xlat
pop
inc
fs
mov
xor
fwait
test
cmps
mov
push
jae
inc
mov
jg
je
fcomp
mov
sub
fcom
xor
out
inc
mov
add
inc
jb
fmul
ja
pop
ret
jp
loop
push
mov
cmp
mov
not
pop
leave
push
inc
scas
daa
xor
dec
(bad)
xor
adc
aaa
adc
arpl
dec
aad
les
(bad)
test
bound
pusha
pop
mov
push
dec
or
es
push
cwde
fs
xor
mov
jl
cmc
pop
xchg
push
jmp
push
cmps
jnp
fistp
mov
sbb
xlat
loopne
shr
mov
mov
inc
movs
(bad)
fidivr
fistp
xor
(bad)
imul
sub
lahf
fs
aaa
pusha
mov
loope
mov
jl
add
mov
xlat
sub
dec
(bad)
test
push
and
scas
mov
sti
jbe
and
(bad)
pop
fwait
addr16
je
test
pop
pavgb
or
int3
aaa
(bad)
int
sbb
mov
std
fild
aaa
mov
rcr
xor
xchg
dec
push
push
adc
scas
sbb
push
sbb
lock
fcom
fisubr
jo
inc
dec
loopne
dec
popf
xchg
adc
imul
mov
movs
fnstsw
or
cmp
int
xor
ficomp
lods
xor
add
pushf
fcomp
addr16
sbb
in
sbb
out
cmp
ss
add
iret
outs
push
xchg
push
ret
and
mov
in
push
fcom
xchg
xchg
and
jp
inc
sbb
les
jle
int
shr
sbb
sar
lahf
fmul
shr
cmps
xchg
fdivr
xlat
shl
pop
inc
mov
in
mov
xchg
scas
je
push
jle
xchg
int3
movs
js
push
and
icebp
fdivr
cmp
xchg
cwde
cmp
dec
ss
mov
aas
outs
repnz
data16
mov
adc
mov
xchg
ret
and
pushf
(bad)
mov
and
jg
in
fistp
das
cdq
lods
xchg
mov
or
sahf
loop
ror
lods
sub
je
lahf
cmp
xchg
pop
push
lds
nop
stos
jl
mov
jmp
and
push
test
push
call
das
jle
ja
adc
mov
xchg
fs
test
sbb
and
enter
fdivp
sbb
or
rol
mov
lea
or
and
dec
sub
xchg
sbb
hlt
mov
jne
mov
test
mov
push
mov
test
(bad)
neg
retf
stos
push
mov
mov
sbb
and
xlat
push
sbb
mov
mov
shl
jbe
cmps
inc
pushf
cmp
ds
pop
iret
jecxz
push
adc
scas
lods
ret
dec
mov
xor
outs
je
in
inc
dec
jmp
cmovne
add
xchg
lea
push
pop
iret
daa
sub
pop
cmp
sbb
xor
push
ror
cmp
mov
mov
cld
popa
dec
mov
push
add
cli
xchg
dec
inc
clc
ret
addr16
lock
mov
in
test
ja
pop
les
cmps
push
sti
push
addr16
outs
fwait
mov
add
cmp
(bad)
xor
lods
icebp
outs
call
rcl
mov
lahf
inc
adc
sbb
cmp
ja
mov
mov
push
stc
dec
cli
mov
mov
push
sbb
lock
loope
les
mov
xor
cld
mov
inc
movs
retf
push
adc
and
dec
aaa
inc
imul
fs
sar
jo
pop
sub
mov
sbb
pop
rcr
popf
or
jl
push
jecxz
and
fwait
idiv
sub
cdq
dec
aaa
jo
or
sahf
sub
jne
cmp
fadd
xchg
fiadd
fs
adc
xor
div
jo
pop
nop
lods
and
push
test
movd
push
jmp
inc
sub
push
xor
outs
adc
add
push
dec
pop
pop
or
mov
ja
test
cmp
jg
or
or
cli
retf
dec
xchg
sub
mov
lods
(bad)
loopne
and
xor
ror
dec
ds
aas
ja
jnp
cwde
and
test
sbb
xchg
jne
out
ftst
mov
aad
stos
inc
jmp
jmp
rcl
mov
jo
mov
retf
xchg
icebp
into
cld
jno
ins
je
push
in
scas
sub
subps
push
mov
add
sbb
ror
add
addr16
dec
rcl
dec
push
enter
stc
pop
and
mov
xor
pushf
movs
mov
repnz
jmp
xlat
int3
loope
xchg
pop
ins
inc
or
ds
jae
adc
sub
imul
and
mov
retf
and
push
mov
fstp
fidiv
mov
aas
sti
mov
test
push
dec
pop
nop
fwait
cmp
imul
mov
or
call
inc
outs
call
ret
mov
stos
addr16
dec
push
pushf
cmp
popf
pusha
rcl
stc
mov
sets
push
sar
bound
cli
aas
inc
xor
mov
xchg
mov
push
ret
jmp
aas
test
dec
xor
push
cs
frstor
fcomp
jge
mov
scas
jbe
xor
inc
ret
ror
pop
cdq
mov
jge
inc
mov
test
test
fild
icebp
add
mov
lea
lea
xchg
imul
add
ret
pop
nop
inc
jnp
enter
not
add
pop
jmp
out
push
mov
lock
lock
inc
ror
add
test
js
cwde
add
ins
dec
lock
repz
and
cmp
fldpi
xchg
inc
mov
adc
sahf
inc
hlt
fsub
or
push
(bad)
int
mov
les
xchg
sbb
xor
shl
imul
or
in
xor
es
cmc
push
add
hlt
and
fnstsw
into
jnp
jns
cwde
pop
sub
pop
push
push
jns
rcl
dec
jne
jecxz
mov
in
nop
add
cmp
cld
pop
fdiv
or
movs
add
mov
jl
adc
mov
jnp
xor
ins
stos
jnp
xor
sub
daa
jbe
fidivr
pusha
ja
add
pop
fistp
call
dec
xchg
mov
mov
out
clc
push
int3
mov
mov
or
sbb
sub
cld
mov
jle
jbe
scas
and
test
out
fcom
sub
xchg
xchg
aad
jp
jno
outs
sbb
mov
loopne
mov
mov
pushf
in
(bad)
push
into
or
mov
shr
sub
inc
sub
(bad)
imul
pop
jo
adc
xor
and
jle
sahf
daa
sahf
jp
lahf
push
call
dec
xchg
jbe
iret
inc
int
cmps
mov
xchg
retf
jp
ins
dec
popa
or
mov
enter
xor
jecxz
xchg
sahf
sub
sub
push
popa
jne
pop
mov
dec
sub
dec
pop
push
adc
not
xchg
sahf
clc
stc
call
sbb
stc
(bad)
cwde
sub
adc
push
push
jne
pop
ins
clc
add
jle
xor
push
(bad)
xor
mov
sub
push
int
fwait
sahf
xor
sbb
jmp
(bad)
rol
sbb
rep
out
cld
in
mov
cmps
push
xor
mov
ins
gs
cmp
gs
les
mov
dec
pop
bound
lds
enter
xor
push
fwait
and
xlat
js
mov
mov
sbb
sub
mov
es
dec
xor
bound
xor
pop
adc
dec
pushf
add
cld
repz
aas
(bad)
cld
repz
aas
call
add
jg
mov
sub
add
dec
inc
scas
inc
pusha
or
add
add
add
(bad)
(bad)
inc
add
add
add
add
add
add
jns
je
ins
cs
jb
ja
outs
addr16
push
gs
imul
xor
xor
inc
jne
je
jb
cmp
jb
ins
sub
push
jne
ins
imul
imul
bound
xor
data16
xor
fs
add
adc
gs
cs
jb
ja
outs
addr16
imul
add
popa
je
pop
add
add
add
add
add
lsl
add
mov
mov
inc
or
add
or
add
add
add
add
or
add
add
pusha
outs
rol
add
add
inc
dec
inc
add
mov
or
popa
add
jo
pop
jae
add
ret
add
push
ret
add
outs
test
add
adc
inc
inc
push
pop
inc
in
rol
sbb
add
loopne
pop
xchg
pop
jmp
ins
in
mov
in
push
retf
(bad)
loop
repnz
repnz
in
pop
mov
enter
add
jle
mov
mov
(bad)
xchg
(bad)
(bad)
pop
ss
jle
pop
cmp
stc
ins
addr16
mov
mov
dec
mov
cld
mov
sub
jns
icebp
adc
pop
pop
out
sbb
and
retf
fist
xor
cmps
(bad)
cmps
out
fdivr
and
xchg
pop
fistp
push
rcr
push
xchg
mov
ror
rol
loop
fiadd
pop
(bad)
or
fsub
mul
or
pusha
mov
fwait
lea
sbb
retf
test
(bad)
jp
push
repnz
nop
cmc
cwde
mov
test
push
add
xchg
inc
dec
mov
loopne
sub
jmp
in
mov
shl
es
jmp
repz
ret
call
dec
cmp
out
addr16
dec
mov
stos
fnsave
mov
push
mov
and
(bad)
aad
sub
(bad)
mov
out
(bad)
cmc
gs
pop
sub
xor
(bad)
out
inc
bound
xchg
and
enter
int
dec
jno
repnz
retf
aam
dec
mov
sub
push
and
(bad)
in
dec
fwait
sub
fsubrp
xchg
(bad)
out
fdiv
cmp
fwait
fs
je
clc
and
xor
jmp
adc
test
xlat
aam
cmp
ret
js
outs
dec
push
jb
mov
dec
ret
dec
push
cmp
repz
fdiv
pop
pop
out
xor
mov
in
add
mov
rol
add
add
mov
imul
jp
lds
test
in
dec
or
out
das
mov
mov
dec
cmp
call
sahf
dec
lods
repnz
jae
ins
xor
es
loope
cli
test
aaa
dec
in
(bad)
cmc
mov
(bad)
mul
xchg
add
push
xchg
fs
ins
jle
add
mov
xlat
add
in
into
in
out
add
xchg
and
sub
(bad)
or
mov
ret
fsubr
adc
pop
sub
mov
fsubr
and
xchg
add
shr
and
cwde
mov
mov
cmp
xchg
mov
rcr
ret
cli
test
out
mov
xor
test
push
sub
leave
nop
std
(bad)
out
shl
sub
(bad)
push
cmp
fst
xchg
sbb
push
rcl
xchg
cmp
xrelease
inc
mov
ror
inc
or
test
push
idiv
mov
ret
mov
inc
cli
xchg
cwde
mov
in
and
jo
mov
repz
cdq
cmp
pop
push
in
shr
pop
bswap
xchg
jle
xor
ret
jmp
pop
ss
sti
pusha
mov
dec
mov
ror
jne
lea
mov
imul
sti
add
xor
inc
in
out
dec
cmp
push
fild
das
cmp
mov
and
gs
cmps
out
push
pop
stos
into
loope
mov
fiadd
call
int3
ss
test
arpl
pop
gs
(bad)
mov
dec
pop
jae
inc
sub
inc
movs
push
int
cmc
popf
mov
sub
into
sub
(bad)
retf
aas
lock
inc
and
icebp
test
dec
mov
lahf
scas
call
mov
mov
pop
add
mov
push
shufps
jg
dec
xchg
movs
and
fisttp
test
push
pop
jbe
scas
dec
sub
pop
js
sahf
dec
call
xor
push
jmp
mov
mov
lods
ja
pop
out
pushf
fstp
ja
cs
push
shl
jmp
jp
inc
rcl
(bad)
ins
sbb
add
xor
jnp
cdq
lea
leave
imul
pop
test
jge
push
sahf
stos
ret
jmp
mov
jp
cmp
xchg
out
inc
mov
call
dec
xchg
(bad)
(bad)
mov
or
cld
pop
dec
test
jg
je
pushf
mov
in
and
xchg
ds
push
pop
jns
cwde
aad
sti
cdq
das
and
rcl
inc
mov
jns
inc
xor
icebp
das
jmp
inc
cld
inc
aas
mov
inc
sub
lds
rol
cwde
push
lock
retf
daa
mov
(bad)
adc
(bad)
fnstcw
cdq
outs
push
xchg
inc
add
dec
retf
mov
jo
add
call
mov
nop
jne
pop
xor
xchg
enter
mov
jae
add
pop
enter
sti
xor
hlt
cmp
sbb
mov
ficom
mov
jnp
ins
(bad)
sub
adc
xchg
mov
add
add
push
stc
and
rol
cdq
sbb
into
mov
ins
mov
outs
xchg
scas
call
add
mov
dec
dec
adc
sub
pop
cmc
mov
sbb
pop
xor
or
push
popa
mov
pop
adc
pop
inc
sub
push
mov
push
xchg
adc
int3
data16
and
shl
movs
fs
in
xchg
or
fwait
ss
push
push
dec
lahf
daa
sar
inc
xor
popf
ja
push
and
pop
pop
push
mov
sbb
leave
push
jge
enter
enter
lea
scas
dec
repnz
jno
cmp
or
mov
out
inc
inc
add
adc
icebp
add
je
push
out
lock
aas
hlt
add
xlat
xchg
add
or
icebp
aaa
cmp
cmps
(bad)
jle
stos
cmps
fwait
jo
pop
mov
into
inc
inc
mov
rcr
jo
sbb
adc
dec
mov
xchg
inc
mov
in
aam
fdiv
les
js
adc
in
mov
out
xchg
mov
or
addr16
les
lods
mov
test
push
mov
out
mov
dec
jl
iret
in
ds
and
mov
(bad)
aam
xor
inc
jg
sbb
inc
leave
add
pop
push
sbb
test
loopne
mov
movs
rcr
mov
enter
adc
mov
loop
jmp
cmp
cld
dec
mov
add
jmp
adc
retf
push
sub
popa
es
push
sbb
sbb
sub
stos
push
(bad)
test
addr16
cmp
bnd
(bad)
sbb
adc
or
jns
push
pop
gs
sub
ins
div
jb
xchg
dec
nop
addr16
push
mov
pop
add
aaa
xchg
fstp
loope
pop
call
pop
sbb
jmp
jb
shl
mov
cmp
push
imul
add
dec
jge
inc
mov
test
ror
xor
rol
jno
lds
fsub
jmp
sbb
dec
outs
pop
inc
pop
sub
popa
clc
inc
fild
lods
xor
sub
jecxz
mov
fild
out
xchg
test
in
stos
mov
movs
xchg
into
add
mov
aas
jl
call
scas
xchg
sub
aas
(bad)
mov
es
and
mov
xor
sar
(bad)
lea
inc
jmp
xrelease
jmp
push
adc
outs
xor
(bad)
xchg
(bad)
ret
inc
jmp
sbb
xchg
jmp
sub
cmp
pop
push
sbb
test
mov
adc
pop
sbb
jecxz
jl
mov
sahf
add
mov
adc
in
shl
xchg
dec
cmp
push
cdq
icebp
in
stc
jge
dec
jne
jp
mov
fst
cdq
fsub
pcmpgtd
xor
pop
add
pop
push
sub
cmp
add
xor
add
data16
mov
jne
mov
aaa
rol
rcr
mov
out
and
mov
bound
xor
sbb
inc
xadd
lgs
cli
out
mov
(bad)
loope
std
stos
fisubr
add
mov
pop
push
je
push
repz
pop
jge
pop
pop
push
pop
cmp
ja
xchg
and
enter
fiadd
sub
bound
in
sbb
or
push
cmp
cmp
mov
es
popa
lock
lods
add
sbb
inc
push
xchg
ins
push
ret
and
shl
or
jge
xlat
sub
push
out
rcl
mov
or
cmp
popfw
sub
mov
test
sub
xchg
loope
(bad)
cmp
xor
jecxz
pop
mov
jns
push
xor
dec
cmp
(bad)
icebp
xlat
lods
int3
leave
cmp
popf
mov
sub
jns
gs
aam
sub
aam
leave
xor
mov
stos
mov
dec
xor
inc
arpl
das
mov
push
mov
cmp
lds
inc
lods
(bad)
pushf
shl
and
lea
pushf
mov
mov
sub
aaa
lock
addr16
sti
shl
push
jb
adc
jmp
mov
jp
jbe
and
shl
cdq
retf
movs
sahf
cmps
iret
(bad)
xchg
mov
xchg
cli
aas
icebp
sub
rcl
pop
fsub
call
mov
loop
push
aas
ja
cmps
les
rcl
dec
loopne
xor
aaa
cmps
push
pusha
mov
jl
mov
cmp
(bad)
out
mov
cdq
call
cli
aaa
cmp
into
cli
fistp
ss
movs
(bad)
fidivr
addr16
cdq
and
jecxz
add
pop
cwde
(bad)
lock
push
fnstcw
(bad)
add
movs
pop
fwait
mov
jo
push
scas
pop
cwde
mov
jbe
movntq
adc
push
fcomp
daa
add
dec
jae
sbb
sti
fcmovbe
rcr
gs
adc
sar
push
imul
mov
sbb
sub
cmc
mov
std
xchg
imul
jo
adc
dec
push
sub
fistp
pushf
push
out
or
pop
xchg
das
pop
pop
pop
es
jge
xlat
inc
cdq
ins
iret
mov
int
int
xor
nop
dec
ja
mov
js
std
test
mov
and
cmp
jmp
push
lods
popa
ret
mov
rcl
xchg
es
pushf
cmc
or
fld
mov
outs
test
adc
dec
sub
dec
je
call
push
mov
cmp
xchg
loope
aas
dec
xchg
jno
popa
scas
push
outs
sub
xor
jmp
add
out
cmp
loopne
loop
adc
xchg
xchg
mov
sbb
or
mov
scas
pop
mov
daa
out
mov
ss
pop
sub
mov
cli
ins
xchg
mov
push
jns
inc
fldenv
mov
mov
jne
iret
mov
mov
or
and
retf
lahf
retf
sbb
add
lods
jmp
mov
mov
push
mov
cli
add
add
and
ficom
aam
jmp
xchg
push
mov
cmp
fidivr
sub
loop
retf
popa
in
out
jns
and
imul
aaa
jmp
fwait
daa
daa
rol
aam
inc
shl
mov
movs
gs
cdq
push
push
mov
das
outs
push
bound
mov
pop
sar
shr
jmp
loopne
test
adc
xor
test
mov
pop
pop
psraw
and
dec
mov
rcr
pop
lock
cli
cmps
push
sar
scas
dec
mov
fldcw
retf
mov
cmp
or
jno
stc
repz
inc
lock
retf
gs
push
or
inc
xor
ins
lea
xchg
jb
add
cmp
aas
movs
push
push
dec
ret
(bad)
loop
mov
adc
int3
xchg
idiv
sbb
stos
scas
mov
push
out
push
or
xor
hlt
lahf
xchg
pop
out
pusha
mov
or
imul
cmp
fist
mov
inc
sbb
rol
cmp
ret
loope
fisttp
jg
mov
pop
and
push
fldcw
sub
lock
jg
shl
pop
sti
inc
repz
dec
ja
mov
ja
bswap
(bad)
sti
test
icebp
and
dec
pop
push
stc
lock
repz
rcr
mov
push
mov
test
retf
test
xlat
cld
adc
icebp
sub
push
cmp
adc
or
push
mov
test
add
add
jae
in
test
lahf
and
pusha
mov
mov
mov
les
mov
lahf
mov
aam
(bad)
mov
pusha
ins
or
pusha
mov
inc
xchg
sahf
inc
xchg
popa
lahf
fdiv
loopne
inc
inc
jle
xchg
in
xor
dec
and
mov
daa
mov
jbe
scas
xlat
push
mov
fst
inc
mov
gs
dec
mov
lods
and
lods
data16
in
cmc
pop
dec
ds
add
adc
inc
in
mov
add
cmp
(bad)
fisubr
sbb
and
or
jmp
cld
pop
cmc
cmp
push
outs
sub
shl
xor
sbb
mov
mov
jb
jg
dec
test
jmp
mov
cdq
push
dec
je
add
(bad)
(bad)
cli
jo
sub
mov
xor
iret
fwait
icebp
mov
adc
les
fiadd
dec
mov
pop
jl
cmp
scas
mov
jno
ins
movs
mov
lea
add
push
iret
inc
fs
push
daa
adc
ja
jb
pop
cmps
shl
mov
cmp
xchg
cmp
or
popa
mov
ds
ins
xor
push
cli
cmc
adc
out
ins
mov
lods
push
xchg
jne
mov
ins
adc
jecxz
sub
xchg
push
jo
push
fxch
sbb
clc
inc
(bad)
retf
nop
adc
in
dec
pusha
out
push
scas
cmp
imul
div
dec
cli
xchg
or
and
rcr
xchg
inc
cmp
sbb
xchg
and
push
xchg
retf
pop
(bad)
imul
repnz
stos
pop
push
mov
dec
js
xchg
xor
or
push
jp
push
lods
pop
jl
popa
(bad)
sbb
push
neg
pop
dec
pop
hlt
pop
ror
sub
xor
inc
sbb
lods
sbb
cmps
pop
daa
mov
test
hlt
fcom
or
add
xchg
cmps
loop
or
pop
add
inc
push
retf
mov
push
jl
repz
or
out
and
popf
cmps
cmps
sub
retf
mov
xor
or
aad
loop
dec
fistp
mov
inc
mov
(bad)
test
cmps
xchg
stc
cwde
xlat
mov
mov
mov
cmp
add
shr
jnp
push
mov
fdiv
xchg
pop
push
stos
cmovne
(bad)
jo
cmps
and
adc
sub
and
out
inc
dec
inc
mov
dec
je
loope
aaa
xor
fidiv
ds
add
cmp
adc
push
add
rcr
ss
push
xchg
xchg
dec
jo
add
adc
int3
cdq
ja
cdq
inc
sbb
test
push
imul
jno
dec
xor
sbb
or
retf
test
push
ins
sbb
cmp
xchg
and
cmps
(bad)
pop
enter
loop
jnp
inc
mov
push
and
xor
jl
(bad)
sbb
mul
shl
and
sub
ins
out
into
jns
(bad)
and
lock
fistp
vmulpd
scas
fs
mov
daa
jmp
aam
inc
aaa
mov
and
and
sahf
xor
sbb
scas
xor
dec
(bad)
div
cmps
jge
in
adc
pop
inc
(bad)
push
out
jns
push
icebp
imul
mov
mov
mov
cmc
adc
fcom
xor
mov
fnstsw
jg
stc
out
jg
stc
out
jmp
sar
(bad)
cmp
and
test
push
add
add
dec
inc
dec
inc
scas
inc
pusha
or
add
add
add
(bad)
(bad)
inc
add
add
add
add
add
add
jns
je
ins
cs
jb
ja
outs
addr16
push
gs
imul
xor
xor
inc
jne
je
jb
cmp
jb
ins
sub
push
jne
ins
imul
imul
bound
xor
data16
xor
fs
add
adc
gs
cs
jb
ja
outs
addr16
imul
add
popa
je
pop
add
add
add
add
add
lsl
add
rcl
add
mov
inc
or
add
or
add
add
add
add
or
add
add
pusha
outs
rol
add
add
inc
dec
inc
add
mov
or
popa
add
jo
pop
jae
add
ret
add
push
ret
add
outs
test
add
adc
inc
inc
push
pop
inc
in
(bad)
add
add
scas
scas
jmp
popa
loop
jnp
je
pushf
sbb
ja
popf
call
jmp
jmp
jge
sti
mov
dec
dec
test
sar
mov
mov
mov
add
sub
or
and
pop
add
int
jnp
mov
hlt
dec
jo
loop
mov
jmp
mov
pop
push
icebp
push
dec
mov
fisubr
test
push
push
adc
and
or
fldenv
cdq
dec
sti
xchg
shl
ds
cmps
aam
jns
mov
or
cmp
add
jae
jl
sar
mov
or
push
xchg
push
inc
lods
adc
nop
fcomip
jmp
jl
jo
mov
aad
hlt
xor
xor
push
mov
(bad)
imul
inc
xchg
jmp
add
bound
xchg
bound
xchg
mov
in
jp
icebp
sahf
addr16
or
sub
xlat
or
pop
movs
test
psrlq
call
fist
jmp
or
popa
outs
mov
dec
scas
pop
inc
sbb
pop
inc
rcr
cld
(bad)
icebp
mov
mov
or
cs
and
aad
retf
jae
stos
or
ret
xchg
xchg
test
ss
push
retf
cmps
and
das
and
sbb
mov
or
adc
loope
push
fdivr
jmp
hlt
sti
pop
aam
sbb
xor
js
sbb
xor
jl
cmps
or
or
rcl
adc
or
mov
(bad)
shl
mov
xchg
(bad)
ds
dec
inc
push
gs
cmc
or
fwait
je
push
rcr
retf
add
sbb
cmp
mov
ja
retf
add
pop
hlt
sti
xlat
push
push
call
vshufpd
mov
or
cmps
mov
call
jge
jge
call
popa
jmp
loopne
call
aad
and
iret
jg
xchg
jmp
cmc
aaa
in
call
enter
adc
fcom
(bad)
and
lahf
sbb
js
and
add
cmp
mov
stos
sub
mov
sub
and
int3
je
pop
movs
lds
mov
imul
sahf
inc
lds
cmp
or
das
xchg
mov
xlat
sub
mov
mov
lock
aaa
dec
inc
test
outs
call
retw
ja
pop
lods
popa
cmps
ds
daa
mov
pop
jg
pop
dec
pop
xlat
inc
dec
cmc
mov
inc
inc
jb
ja
scas
and
pop
pop
cmp
cdq
loopne
jnp
push
cmp
inc
mov
fcomi
xchg
lds
xchg
bound
lea
fcomp
es
(bad)
add
add
mov
adc
mov
sub
sar
sub
mov
push
retf
dec
push
call
ds
xchg
movs
dec
les
shr
nop
push
nop
gs
adc
cmp
jp
ja
out
addr16
pop
add
push
adc
mov
and
adc
ins
jle
retf
xchg
popa
mov
mov
ds
cli
(bad)
aam
mov
inc
push
scas
sbb
sbb
icebp
outs
jmp
stc
or
xor
add
sbb
jbe
repz
add
dec
jl
push
sti
test
or
in
jmp
aam
movs
dec
stos
push
lods
pop
and
popa
movs
xor
pop
cli
movs
data16
or
sub
icebp
popa
icebp
inc
jmp
push
sub
sub
add
adc
mov
mov
push
(bad)
pushf
mov
xchg
and
das
xor
(bad)
ds
cmp
and
ja
push
adc
nop
in
retf
xor
cmp
mov
add
repnz
scas
mov
xor
push
xor
pop
arpl
cs
mov
lods
jp
dec
xor
mov
dec
jns
and
fistp
mov
pop
and
dec
(bad)
push
daa
std
loope
stos
sbb
nop
addr16
int3
push
add
adc
fcomp
push
xlat
mov
ds
hlt
int
pusha
push
pusha
aas
bound
retf
aad
(bad)
in
xchg
(bad)
retf
mov
dec
rcl
ret
out
fist
xor
lods
or
rcr
adc
icebp
mov
jp
fcomp
cmc
sub
into
lock
jmp
bound
mov
lods
adc
out
cmp
mov
(bad)
dec
in
ret
out
clc
mov
fs
cli
int
fldcw
popf
push
call
jne
aad
or
test
dec
aas
into
dec
shl
leave
push
movs
mov
jb
push
out
stos
mov
cmps
icebp
in
dec
fstp
sub
add
movs
mov
mov
lea
fdivr
std
in
mov
push
dec
mov
sub
jne
cli
and
repnz
mov
xchg
jp
lock
jbe
stos
scas
sbb
dec
pop
and
test
(bad)
cli
inc
mov
pop
out
xchg
adc
jl
add
cdq
jg
mov
mov
aad
stc
js
shl
stos
outs
xchg
lahf
xchg
mov
cmps
lahf
mov
cdq
mov
xchg
cwde
sub
mov
sbb
out
jp
repz
outs
arpl
jb
pop
xor
or
fcom
jg
mov
sti
add
ror
cmp
lods
or
(bad)
es
mov
mov
ins
std
jg
sub
and
hlt
pusha
movs
test
mov
pop
inc
dec
retf
and
test
adc
js
out
out
loope
cmp
xchg
mov
sub
push
dec
clc
sub
dec
out
jge
mov
cmp
inc
sar
shr
div
pop
sub
lods
(bad)
lahf
aas
jae
and
mov
jmp
jecxz
movs
adc
or
sub
nop
cdq
(bad)
hlt
outs
(bad)
pop
pop
mov
les
es
and
xchg
push
mov
jecxz
and
jno
imul
sahf
or
sub
mov
jg
pop
pop
(bad)
ret
mov
cmp
mov
push
adc
jo
popf
out
pop
or
pop
cmps
xor
mov
in
mov
lods
fcmovnu
mov
ret
aas
jg
inc
nop
add
sub
sbb
adc
outs
jp
and
lods
xchg
push
sbb
jno
adc
inc
push
or
sub
data16
pop
jle
popa
push
nop
add
pop
push
inc
pop
fldcw
push
push
adc
inc
sub
add
(bad)
dec
jmp
inc
push
jmp
cmp
js
sub
inc
sub
xchg
ins
std
ja
je
les
jnp
not
push
sqrtps
cs
out
retf
out
push
dec
jnp
adc
mov
stc
daa
cmp
loop
pushf
add
lods
loop
js
mov
sbb
xchg
pop
cmp
in
mov
ret
or
rol
jne
add
cmc
sbb
jge
loope
cmp
pop
mov
lock
adc
cmp
sub
xor
fsubr
xchg
je
rol
mov
xchg
stos
jb
lea
mov
pushf
jno
je
pop
rcl
dec
pop
mov
cld
jecxz
in
adc
outs
dec
in
jl
pop
xor
mov
retf
movs
loopne
jnp
adc
imul
cmp
and
pushf
mov
aad
sbb
mov
xor
jb
mov
lods
dec
cmp
inc
shr
pop
add
xchg
pushf
cs
stos
cmp
adc
adc
cdq
dec
sbb
arpl
pop
test
js
or
sbb
imul
hlt
lock
push
pusha
inc
inc
pop
dec
mov
xchg
xor
in
lds
loop
stos
mov
movs
bound
mov
pop
xchg
xchg
sbb
in
jmp
lods
mov
xchg
jbe
pop
cmps
cwde
and
pop
(bad)
pop
adc
ja
cmp
mov
mov
pop
mov
retf
loop
mov
sub
push
icebp
jb
not
je
cmp
or
ret
sbb
push
ficomp
cmc
push
dec
and
outs
out
sub
add
mov
xchg
lea
or
in
pop
or
pop
inc
and
and
jb
cmp
pop
(bad)
std
test
in
je
mov
sbb
cmps
jbe
jnp
dec
add
and
out
aad
js
dec
xchg
and
icebp
jno
add
cwde
jbe
xor
fist
dec
push
loopne
imul
push
sahf
and
repz
ret
mov
inc
pop
add
xor
stc
jle
clc
sub
xor
mov
pop
sti
movs
cld
rol
fadd
or
dec
pop
xor
xchg
and
arpl
push
jo
fdivr
lock
add
cmps
mov
jns
xchg
inc
inc
icebp
(bad)
xchg
ins
jmp
xchg
xor
adc
sub
rcl
enter
xchg
loope
(bad)
dec
popf
and
in
fcomp
add
cmp
inc
add
cmp
ror
ins
jne
hlt
call
inc
mov
outs
rcl
rcr
push
loopne
adc
mov
ds
cwde
ss
or
cmp
arpl
rcl
mul
and
pop
xor
dec
imul
mov
inc
out
clc
adc
call
das
pop
push
aam
loopne
sub
loope
push
mov
fwait
or
add
js
jl
das
loop
pop
mov
into
jle
inc
sub
and
xlat
dec
addr16
(bad)
dec
xor
sub
inc
mov
popa
jmp
inc
xchg
pop
imul
cmps
call
daa
lds
xor
inc
cmp
fstp
loopne
xor
xlat
sub
jne
mov
(bad)
pop
xor
ja
rcr
hlt
xor
sbb
mov
js
imul
pop
aam
loop
ret
push
stos
xchg
test
jle
push
test
test
push
cmp
cmp
fmul
ja
mov
outs
popa
nop
mov
and
retf
test
mov
xchg
sti
push
out
repz
sbb
mov
sbb
push
pop
repnz
cmp
fnstsw
xor
push
mov
xor
dec
inc
stc
call
popa
mov
cmp
jg
(bad)
and
lds
(bad)
es
cwde
push
sbb
add
test
mov
push
jo
jmp
ins
in
adc
shl
pop
rol
mov
xchg
fwait
cmps
retf
pop
mov
outs
dec
pop
ins
jg
ss
rcl
cmp
push
adc
inc
(bad)
shl
mov
xor
pop
inc
hlt
dec
ror
sub
jbe
jno
in
hlt
movs
std
add
gs
ret
sbb
and
sub
in
jne
das
jmp
push
sub
sbb
xchg
rcr
in
sbb
arpl
adc
adc
popf
outs
(bad)
leave
lods
or
lock
out
out
aaa
jb
hlt
cwde
sub
dec
jno
mov
cmps
cmps
popf
pop
das
ja
push
push
out
mov
ret
pop
push
cmp
push
data16
or
ja
fstp
mov
loop
mov
pushf
sbb
pop
jle
dec
push
das
or
loopne
sbb
mov
out
je
stc
inc
xor
nop
test
out
loop
in
sbb
int
jnp
(bad)
fst
gs
inc
stc
mov
cmp
arpl
fsubrp
or
retf
sub
xor
dec
xchg
cs
arpl
xchg
push
mov
imul
scas
mov
inc
xchg
test
(bad)
lock
inc
and
imul
mov
aad
push
add
sub
pop
pushf
xchg
loop
(bad)
xchg
movs
cmp
jnp
inc
cmp
sar
outs
stc
xor
sub
xchg
xchg
and
inc
cs
(bad)
fxch
movzx
aam
jo
mov
sub
mov
popa
mov
adc
lahf
mov
mov
jb
in
mov
adc
mov
ins
test
sbb
add
sti
push
xor
pop
out
adc
imul
xchg
test
(bad)
outs
loope
push
leave
test
pop
call
jmp
in
icebp
pop
jb
xor
xchg
sub
mov
in
mov
in
xor
(bad)
iretw
dec
mov
xor
gs
cmp
stos
xchg
mov
pop
pop
into
push
inc
cld
mov
daa
(bad)
add
out
in
sub
imul
pusha
pusha
call
pop
mov
adc
std
js
daa
xchg
cmp
scas
in
add
pop
sub
and
stos
addr16
shl
lods
jae
stos
ja
xchg
fidiv
in
rol
pushw
imul
mov
fwait
test
pop
jnp
pushf
sbb
jmp
inc
pop
shl
and
int
cmp
jge
fucomi
cmp
pop
add
xchg
bnd
inc
xchg
iret
call
stos
inc
and
push
sahf
xchg
push
inc
cmps
es
repnz
cld
xor
loope
cld
dec
mov
in
dec
mov
or
add
mov
nop
pop
or
pop
pop
frstor
adc
ja
loope
das
add
sub
stos
(bad)
aaa
fistp
and
sbb
sbb
inc
inc
adc
je
inc
xchg
sbb
lods
pop
mov
cld
jo
jl
dec
pop
out
jmp
int
ins
lds
sbb
sbb
push
stc
clc
cmp
push
xchg
test
push
jae
outs
cmp
cli
mov
pop
test
movs
cmp
push
loop
rcr
ins
and
and
and
jbe
push
lock
push
test
in
cmps
in
mov
or
jns
add
mov
adc
fistp
xchg
xchg
jle
sbb
sbb
push
sub
xchg
dec
sub
push
xchg
xchg
add
mov
mov
cmps
mov
cwde
ficomp
dec
retf
ins
xchg
rsm
jle
rcr
iret
loopne
inc
shl
mov
mov
cmc
fisubr
movs
ins
pop
addr16
pop
mov
scas
jbe
mov
pushaw
xor
xchg
loopne
int3
lea
sbb
pop
jle
dec
ret
push
inc
sub
mov
cmp
sbb
addr16
jl
add
(bad)
xchg
out
lods
rcr
jle
cmp
pushw
call
pop
cs
pusha
leave
jle
mov
xor
mov
mov
mov
pop
mov
push
mov
popf
jno
cmp
xor
add
xchg
push
pop
xchg
repnz
push
xor
push
adc
pop
and
pop
pop
fwait
ret
jo
inc
push
push
or
sub
fsubrp
mov
sahf
test
add
call
(bad)
into
inc
jmp
cmp
call
xor
inc
xadd
mov
rol
push
pop
out
(bad)
je
lock
inc
add
(bad)
mov
mov
loop
add
dec
pop
inc
outs
mov
pop
outs
pop
mov
aam
test
cwde
pushf
ins
xlat
fwait
mov
movs
mov
out
sub
test
mov
fimul
aam
(bad)
sub
dec
pop
xor
pop
inc
sbb
nop
jae
xor
pusha
daa
xchg
push
gs
icebp
add
in
test
push
xchg
aam
mov
cdq
xor
xor
test
jmp
ins
xor
xor
cmps
xor
call
shl
fimul
dec
fs
fsub
sbb
cmps
pop
adc
sbb
mov
mov
pop
sbb
fucomi
or
dec
fscale
sbb
(bad)
adc
outs
ss
xchg
clc
jl
mov
pop
jo
popf
inc
sahf
adc
fnsave
sbb
(bad)
cmc
aas
aas
fiadd
jbe
imul
mov
js
pop
xchg
(bad)
lods
int
les
mov
jg
stc
out
jg
stc
out
call
add
jg
add
cmc
fldcw
add
dec
inc
dec
inc
scas
inc
pusha
or
add
add
add
(bad)
(bad)
inc
add
add
add
add
add
add
jns
je
ins
cs
jb
ja
outs
addr16
push
gs
imul
xor
xor
inc
jne
je
jb
cmp
jb
ins
sub
push
jne
ins
imul
imul
bound
xor
data16
xor
fs
add
adc
gs
cs
jb
ja
outs
addr16
imul
add
popa
je
pop
add
add
add
add
add
lsl
add
mov
mov
inc
or
add
or
add
add
add
add
or
add
add
pusha
outs
rol
add
add
inc
dec
inc
add
mov
or
popa
add
jo
pop
jae
add
ret
add
push
ret
add
outs
test
add
adc
inc
inc
push
pop
inc
in
rol
loopne
sahf
outs
adc
jge
cmp
fwait
jmp
cmp
lock
ret
mov
cmps
ins
jmp
lldt
into
jo
add
fsub
mov
xchg
retf
ficom
ror
pop
xchg
xor
pop
pop
fstp
rcl
gs
out
xor
pop
fisubr
or
stos
rol
pop
sbb
rcr
clc
pop
enter
mov
or
xchg
data16
out
ins
les
push
mov
popf
aaa
add
push
cmp
dec
push
mov
lods
add
inc
lahf
xlat
pop
cmp
cmp
sub
fsub
mov
xor
cmp
inc
jge
xor
push
push
mul
add
cmc
add
ins
int3
push
int3
(bad)
icebp
or
int
mov
cwde
neg
lds
mov
repnz
in
xchg
add
repnz
dec
loope
add
cmc
fcomp
xchg
push
xchg
mov
rcr
xchg
(bad)
mov
fcomip
cmp
call
cdq
pop
pop
mov
jno
sub
aad
jb
bound
add
aaa
rcr
jmp
adc
jge
mov
dec
mov
cmp
xchg
pop
sbb
adc
shr
xchg
xlat
(bad)
sar
scas
nop
ficomp
fiadd
mov
ja
std
outs
dec
and
dec
push
add
mov
sahf
mov
jnp
pop
lods
enter
repz
push
adc
cmova
mov
out
pop
ss
jl
nop
add
clc
out
mov
push
dec
mov
les
jle
das
scas
ds
add
stc
pop
cmps
ins
int3
(bad)
mov
dec
cmps
xchg
out
mov
add
pop
cmp
jecxz
inc
inc
lahf
or
aad
push
fldcw
pop
daa
push
pop
inc
shl
jno
mov
xchg
xchg
cdq
popa
iret
xor
mov
fld
sub
cli
jnp
sub
dec
sbb
cld
inc
mov
push
jbe
out
cmps
push
fcomp
push
push
bound
cli
shl
mov
enter
popa
rol
mov
sub
xor
(bad)
sti
jbe
cmps
and
retf
or
sti
lahf
inc
mov
data16
add
ret
push
jno
xor
mov
mov
pop
or
loope
cmp
jle
jno
inc
ins
mov
cmps
mov
push
xchg
mov
adc
dec
mov
jmp
imul
mov
sub
pop
mov
push
xor
sbb
adc
pop
push
into
sahf
enter
xor
xchg
paddb
ret
not
pop
adc
es
fisubr
das
sub
lds
and
adc
xchg
pop
fcomip
adc
outs
dec
jno
add
mov
inc
pop
push
sar
mov
mov
cld
adc
call
xchg
int
out
ret
(bad)
rol
mov
mov
mov
call
sbb
push
loop
push
dec
push
mov
push
call
test
and
sub
mov
jne
or
cmc
in
mov
mov
(bad)
dec
out
test
je
in
cmp
mov
push
mov
stos
xor
int
push
dec
xchg
and
xor
mov
(bad)
repz
adc
mov
and
mov
fist
in
pop
jb
loope
xor
fsub
ds
stos
mov
inc
and
pop
bnd
loop
imul
push
cmps
mov
fsubrp
retf
out
out
out
int
cmps
ror
(bad)
outs
mov
repnz
pop
frstor
repnz
loopne
xchg
jbe
jne
jne
add
mov
push
jb
(bad)
pop
cli
sub
hlt
scas
sub
cmp
mov
mul
sbb
cmp
push
mov
xchg
push
cs
cmc
mov
xor
cld
mov
dec
sbb
jle
inc
fcomi
sub
ss
mov
inc
push
mov
sub
out
xor
neg
mov
inc
stos
cmp
in
mov
dec
ficom
movs
inc
not
jg
in
sbb
mov
cwde
out
push
inc
add
pop
adc
fcmovnu
bound
jno
mov
repnz
jb
(bad)
das
pop
mov
gs
fistp
loopne
popa
clc
push
test
mov
not
xchg
dec
jle
aas
lahf
mov
and
ret
imul
repz
es
test
xlat
push
push
and
ins
xor
sar
outs
aad
daa
mov
cmps
and
js
push
mov
outs
pusha
scas
cli
scas
push
and
arpl
sub
adc
sar
cwde
out
dec
inc
(bad)
mul
shr
ret
lods
outs
out
cli
stc
fwait
test
bound
pop
sti
test
scas
sbb
nop
and
xchg
arpl
ficomp
sub
xor
add
outs
mov
mov
mov
mov
scas
mov
and
cmps
push
and
stc
call
lods
jmp
lock
cmc
dec
dec
mov
(bad)
imul
mov
jo
pusha
adc
call
cmps
add
push
movs
test
cmps
aam
sub
js
push
mov
stc
push
inc
mov
je
mov
rol
sahf
mov
pop
pop
push
mov
xchg
adc
dec
cld
adc
scas
push
loope
push
in
sub
in
shl
ins
jmp
pop
cmp
leave
or
stos
aas
jno
in
push
stos
(bad)
shr
sub
std
cmp
jge
dec
jns
push
adc
test
sbb
fistp
push
out
sub
pop
out
mov
xor
dec
(bad)
add
dec
sub
push
call
jmp
xor
sub
dec
fcomp
jnp
xchg
pop
in
xchg
mov
and
jecxz
fwait
mov
lods
sbb
push
popf
and
mov
fidiv
jp
mov
mov
xchg
sbb
xchg
fcomip
and
mov
popf
xchg
jmp
mov
pop
fild
(bad)
ds
cdq
pop
sbb
rcr
test
out
sub
out
mov
aam
mov
pop
(bad)
lods
sub
jmp
out
adc
mov
out
cmp
mov
ret
push
iret
fst
inc
sbb
ja
add
lods
xlat
int3
jbe
pop
fucomp
mov
sub
ins
pop
push
lahf
test
bound
mov
jge
test
dec
adc
in
inc
ret
lahf
popa
and
jge
iret
or
cmc
jo
sbb
mov
jnp
shl
call
and
push
enter
or
jo
add
imul
aam
iret
in
inc
lock
mov
loope
inc
add
(bad)
mov
cwde
sub
dec
jecxz
push
test
xchg
fild
das
xchg
push
push
sub
inc
or
mov
xor
ss
rol
inc
add
jp
scas
jmp
fld
hlt
(bad)
push
jne
loope
dec
sbb
add
xor
popa
test
jp
int3
inc
nop
(bad)
push
jp
mov
mov
pop
and
scas
xchg
sub
ss
and
cld
inc
mov
sbb
mov
retf
mov
addr16
pop
jmp
dec
cmp
ins
scas
lea
movs
movs
(bad)
cmp
push
sub
sbb
push
mov
xor
or
push
sbb
mov
fild
test
(bad)
jne
bound
xor
mov
ret
hlt
repnz
adc
dec
mov
sub
ror
xor
outs
iret
xor
retf
call
xlat
xchg
adc
mov
jno
cmp
cmc
jmp
jle
repnz
jecxz
lds
(bad)
int
sub
mov
sti
scas
outs
and
arpl
(bad)
lods
pop
je
int
jmp
fstp
pop
cmp
xchg
fist
rol
pop
test
mov
(bad)
scas
lea
ja
imul
in
out
fidivr
and
cmps
sbb
pushf
(bad)
and
or
xchg
ror
and
pushf
mov
shl
pop
mov
jmp
add
fld
ss
adc
and
imul
dec
mov
mulps
and
xor
daa
pop
iret
sbb
adc
stos
cmc
mov
movs
jl
xor
(bad)
inc
ins
push
dec
adc
sub
cmp
cmp
dec
jmp
xor
leave
mov
jp
(bad)
daa
adc
pop
mov
fisttp
les
fisttp
je
ror
cmps
push
xchg
fild
clc
xchg
pop
mov
stos
jg
lahf
and
and
(bad)
(bad)
cs
inc
call
cmc
out
and
mov
cmps
mov
setnp
cli
bswap
xchg
lds
lea
xchg
xor
enter
push
ror
dec
int3
mov
and
mul
xchg
retf
push
ret
mov
sub
gs
cmps
lea
icebp
or
fwait
enter
pop
aas
pop
retf
and
(bad)
out
and
rcr
mov
mov
push
repz
stos
mov
call
mov
loope
mov
mov
adc
mov
and
stc
mov
out
call
or
sti
sahf
mov
pop
mov
ror
scas
and
adc
add
xor
xchg
dec
pop
rol
push
mov
mov
mov
rol
jecxz
inc
ja
dec
clc
fs
push
or
add
jg
pop
pushf
sahf
push
pop
push
push
jg
push
(bad)
mov
sbb
and
adc
mov
mov
sti
xchg
cwde
fisub
mov
mov
inc
ss
ret
jns
push
(bad)
rcr
adc
repnz
in
aaa
retf
sub
fild
movs
add
nop
xchg
xor
out
jae
lods
pop
or
mov
xor
lahf
mov
xchg
lahf
pop
dec
dec
popa
adc
dec
fidiv
or
sbb
or
shr
push
dec
pop
das
stos
jp
pop
sub
rol
mov
test
bound
add
mov
mov
ja
out
sbb
xchg
mov
xchg
aas
fst
xor
aaa
xchg
imul
rol
dec
fisub
mov
add
imul
dec
(bad)
sbb
sub
icebp
(bad)
sub
clc
arpl
repz
loop
ror
inc
pop
imul
sub
mov
and
loopne
mul
sbb
push
mov
repz
ins
cmp
cmp
cld
(bad)
mov
fwait
push
inc
push
xchg
mov
in
loop
mov
adc
add
mov
mov
adc
in
and
repz
retf
scas
push
scas
cld
cmc
add
and
dec
mov
jge
sbb
lods
mov
mov
jp
pop
add
dec
mov
int
push
daa
loope
rcr
stc
cli
mov
sbb
std
jecxz
xchg
gs
xlat
fst
imul
hlt
inc
(bad)
int3
pop
dec
sbb
xor
inc
jp
mov
shl
shl
push
add
icebp
pop
arpl
jo
xor
rol
retf
rcl
push
fucomip
inc
(bad)
hlt
pop
outs
mov
test
jo
dec
rcl
mov
jmp
mov
or
test
push
std
push
inc
cwde
jg
jmp
or
mov
and
stos
int
add
out
and
mov
xchg
push
ret
inc
cwde
xor
mov
es
and
adc
ffreep
cld
vpshuflw
or
lods
push
pop
aaa
(bad)
aad
into
lods
sbb
movs
add
movs
cmp
hlt
fwait
cs
adc
out
fidiv
jle
pop
adc
inc
xchg
cdq
les
lds
js
fst
outs
inc
push
mov
and
in
jnp
xor
movs
out
mov
stc
push
push
ss
inc
pusha
das
cmp
ins
imul
jge
sub
pusha
or
js
push
xor
mov
mov
mov
sub
pop
dec
pop
and
xchg
pushf
xor
lds
loopne
push
dec
push
cmp
pushf
les
jns
(bad)
pop
sbb
ret
jno
inc
jnp
(bad)
push
push
sbb
ja
add
pop
adc
daa
xor
jbe
pushf
ds
xchg
pusha
fnstcw
out
mov
pop
mov
dec
mov
pop
jb
push
pop
add
cmc
mov
int
or
jno
xor
out
out
push
shl
xlat
int
xor
clc
rcr
add
retf
mov
mov
rcr
out
icebp
mov
add
add
ret
push
pop
and
mov
and
xchg
pop
jmp
pop
mov
add
retf
jmp
sub
inc
and
ss
push
je
test
int
test
int
mov
movs
fisubr
pop
imul
pusha
inc
jp
xor
retf
fdiv
arpl
pop
cmp
(bad)
int
pop
das
mov
je
popf
test
lock
mov
inc
cdq
sahf
push
mov
sti
(bad)
cmp
pushf
mov
aad
test
fisub
sub
addr16
aaa
add
rcl
sbb
stos
std
push
add
sahf
rcl
outs
cmp
mov
shl
pusha
sbb
out
cmp
in
and
mov
inc
pop
retf
mov
xchg
jne
ficom
jbe
call
call
inc
cwde
jp
push
stos
outs
ins
xchg
in
lods
jmp
data16
retf
cmps
push
in
jl
xor
movs
dec
lods
outs
dec
into
bnd
add
aas
iret
pop
and
cmps
call
stc
int3
xor
fisub
test
into
adc
and
ss
jp
push
jns
stos
out
xor
call
in
sbb
mov
int3
jl
test
test
push
jne
mov
jb
out
inc
(bad)
sub
cmp
ror
movs
imul
cmp
movs
pop
mov
aas
push
mov
jo
mov
dec
xor
mov
jmp
jae
cwde
sbb
loop
and
dec
adc
into
ret
or
add
arpl
ret
in
test
movs
ret
lods
inc
cld
jge
add
repz
leave
push
in
push
cmps
iret
mov
aaa
add
daa
cmps
ss
push
mov
jmp
(bad)
and
mov
mov
ffree
adc
dec
xor
push
in
out
test
or
adc
add
cs
inc
push
aaa
addr16
xor
movs
xchg
retf
jecxz
cmp
pop
xor
jno
pop
scas
aas
out
repz
adc
aaa
adc
psadbw
sbb
les
gs
sub
out
xchg
sbb
fist
imul
and
imul
arpl
std
ins
push
push
sub
sar
mov
cli
cmp
mov
pop
pop
cmp
mov
sbb
cmps
outs
icebp
out
retf
pop
out
pop
mov
mov
ficomp
sbb
add
stc
lahf
imul
xchg
push
mov
dec
mov
dec
and
dec
adc
cwde
xor
sar
mov
push
(bad)
adc
jns
pop
mov
jecxz
pushf
xchg
rol
rcr
mov
fwait
cmc
mov
fst
inc
add
mov
push
shr
sub
push
xor
icebp
cwde
sub
sbb
addr16
xlat
repz
lods
loopne
push
out
call
add
dec
inc
sub
push
mov
(bad)
das
call
test
add
iret
aas
(bad)
cld
repz
aas
(bad)
cld
repz
add
pop
mov
dec
and
add
dec
inc
scas
inc
pusha
or
add
add
add
(bad)
(bad)
inc
add
add
add
add
add
add
jns
je
ins
cs
jb
ja
outs
addr16
push
gs
imul
xor
xor
inc
jne
je
jb
cmp
jb
ins
sub
push
jne
ins
imul
imul
bound
xor
data16
xor
fs
add
adc
gs
cs
jb
ja
outs
addr16
imul
add
popa
je
pop
add
add
add
add
add
lsl
add
mov
mov
inc
or
add
or
add
add
add
add
or
add
add
pusha
outs
rol
add
add
inc
dec
inc
add
mov
or
popa
add
jo
pop
jae
add
ret
add
push
ret
add
outs
test
add
adc
inc
inc
push
pop
inc
in
rol
aam
add
loopne
addr16
mul
adc
(bad)
gs
cmc
inc
push
pushf
xchg
xchg
cdq
jge
fisub
adc
sub
jnp
fs
in
fimul
repnz
inc
cmp
mov
jns
xor
call
iret
sti
loopne
(bad)
xor
(bad)
jae
(bad)
frstor
out
fimul
jbe
or
sub
or
xchg
push
fst
fbstp
sbb
(bad)
pop
call
fst
fucomip
push
jae
cmp
(bad)
lock
dec
movs
ss
in
test
movs
pop
jp
js
pop
pop
sbb
ror
cmp
xchg
ret
lds
pusha
push
xor
mov
xchg
jmp
outs
mov
ret
push
add
stos
lock
js
and
jmp
jl
shl
sub
daa
mov
je
xor
and
dec
cwde
pop
xchg
sub
sub
pusha
enter
push
fwait
or
(bad)
aad
mov
int
adc
jecxz
xchg
xchg
fist
imul
adc
sbb
mov
inc
inc
push
aaa
lods
jne
pop
jl
add
in
jmp
cmp
xor
inc
mov
push
jp
pushf
in
mov
(bad)
(bad)
mov
std
jbe
fcomp
mov
push
jne
xchg
push
movs
mov
stos
mov
jmp
inc
out
jecxz
add
test
pop
jne
or
push
dec
in
das
enter
popf
cwde
cmc
xchg
dec
add
sub
sbb
dec
loopne
mov
jge
ds
stos
jl
aaa
push
jnp
out
stos
(bad)
rcl
xor
outs
ss
pop
inc
pop
ja
or
push
js
sbb
sub
dec
outs
into
sbb
(bad)
fsubrp
or
or
adc
adc
adc
cmps
clc
jbe
fcom
in
mov
pop
cmp
rcr
xchg
inc
lods
cmps
mov
push
inc
fcom
jmp
ss
aam
mov
scas
sahf
(bad)
pop
fld
sbb
in
inc
cwde
pop
add
push
loop
rcl
(bad)
in
js
inc
es
lds
mov
dec
mov
mov
scas
xlat
daa
movs
loope
inc
jp
jl
push
cld
lock
or
sub
pushf
je
or
mov
fisttp
rcr
shr
mov
jmp
xor
inc
loop
mov
cld
fidiv
leave
je
out
mov
test
push
(bad)
retf
es
(bad)
and
inc
(bad)
lods
pop
aas
test
lods
mov
sar
jp
mov
mov
mov
jo
mov
add
idiv
and
call
out
ja
js
mov
sahf
imul
lock
sub
loopne
jae
xor
mov
in
(bad)
dec
adc
or
leave
ins
adc
idiv
(bad)
adc
fs
dec
scas
pop
aaa
sahf
dec
or
daa
fyl2x
or
rol
adc
jne
fs
pop
adc
add
xor
sbb
dec
in
movs
pop
sahf
jnp
sbb
push
inc
mov
pop
scas
in
ror
mov
lahf
cmp
retf
sub
lahf
adc
mov
and
dec
iret
push
sbb
pop
push
aad
jg
movntq
push
out
loopne
adc
lds
adc
ins
mov
out
retf
add
aad
xor
lgs
fsub
int3
retf
mul
sahf
enter
xor
sub
push
lods
add
push
cld
push
stc
mov
cmp
repnz
push
rcr
sbb
sbb
xchg
gs
stc
mov
jl
push
adc
add
mov
mov
cli
mov
cmp
lds
ins
icebp
pop
sbb
stc
(bad)
scas
adc
jmp
jle
aaa
mov
cld
mov
movs
ds
xor
scas
ret
dec
pushf
pop
jne
add
pop
aaa
jge
sti
ret
int
fiadd
cmp
call
nop
mov
sbb
in
mov
adc
imul
jle
push
int
jmp
ret
adc
repz
mov
mov
dec
jecxz
shr
fadd
popa
sbb
dec
dec
shr
jge
and
loopne
icebp
pop
cmps
aaa
xchg
push
inc
imul
pop
lds
jmp
push
rcr
xor
fyl2xp1
and
sti
lock
mov
mov
sahf
pop
jae
inc
jbe
jp
ret
sbb
push
pmaddwd
pop
cmp
leave
repz
adc
mov
cs
repz
adc
adc
mov
jecxz
sbb
sar
movs
and
xor
add
stos
adc
test
fisub
pop
mov
push
dec
push
inc
fnstenv
push
out
mov
sub
inc
sbb
push
clc
pop
push
dec
dec
cmp
sbb
pusha
nop
push
pop
inc
mov
jns
fistp
pop
mov
out
xor
out
push
pop
push
repnz
fist
pop
ja
stc
ret
add
sub
jnp
es
add
test
popf
xchg
jecxz
(bad)
rol
(bad)
or
popf
jno
imul
call
push
jne
bound
xlat
fwait
shl
and
xor
dec
mov
pushf
and
push
dec
mov
leave
cmp
movs
and
sbb
push
es
retf
pop
out
or
into
cwde
adc
movs
jge
or
mov
(bad)
jg
dec
outs
in
jno
lock
std
pop
mov
inc
data16
push
pop
jnp
pop
lds
ins
inc
ins
or
int3
jno
shl
jb
sbb
icebp
adc
and
adc
dec
jmp
push
adc
push
popf
mov
int
repnz
(bad)
cmp
repnz
fstp
pop
jl
push
mov
xor
cmp
ret
mov
xor
int
inc
cld
pop
xor
mov
mov
into
or
jp
jle
mov
repnz
sbb
into
mov
ss
mov
mov
inc
repnz
scas
mov
iret
mov
jb
push
ins
jle
dec
jmp
ret
jmp
mov
pop
push
stos
fcom
or
adc
pop
(bad)
cmc
push
mov
adc
jmp
mov
cmp
and
mov
aad
mov
mov
out
dec
outs
or
mov
int3
in
sub
jmp
clc
test
fdiv
sar
js
and
mov
pushf
mov
sub
ret
and
mov
fstp
sbb
xchg
inc
call
outs
outs
inc
xchg
mov
and
or
and
pop
xor
pop
les
inc
inc
cli
and
popa
mov
push
(bad)
mov
sbb
call
test
mov
sub
clc
movs
dec
add
cmc
mov
mov
jo
and
loop
inc
popf
sub
pop
adc
sub
xchg
cs
sub
and
out
add
xlat
inc
pop
mov
cmps
xchg
pushf
adc
mov
sub
jae
pop
int3
mov
or
push
enter
lods
push
inc
mov
int3
int3
jo
jecxz
lods
dec
mov
stos
fwait
mov
mov
ds
add
mov
lahf
ins
xor
mov
sub
mov
repz
xchg
in
cmp
in
je
ror
in
es
sub
cmp
add
adc
es
mov
xchg
push
dec
loope
xor
and
sbb
jp
adc
jne
mov
popa
mov
out
cmp
pop
sub
lds
cwde
xor
jg
fcmovbe
shr
ss
jo
mov
xchg
mov
repz
adc
mov
push
cmp
call
xchg
(bad)
in
loopne
lods
retf
mov
repz
adc
mov
aam
jno
xor
push
cdq
pop
dec
mov
sbb
xchg
int
inc
repnz
inc
pop
imul
arpl
mov
pop
cli
xchg
and
inc
add
jmp
ror
or
jo
mov
inc
test
sbb
push
mov
inc
aaa
xor
inc
pop
clc
cwde
stc
jno
jae
cmc
into
repz
iret
lea
xchg
pop
lock
outs
dec
inc
pushf
push
push
lds
(bad)
mov
mov
and
mov
dec
js
fisttp
movs
xchg
pop
cmp
mov
add
stos
out
(bad)
jno
sbb
push
inc
xchg
inc
ret
test
jle
inc
push
adc
bound
push
daa
jmp
inc
fldcw
hlt
call
xchg
out
sub
shr
imul
dec
shr
xor
pop
(bad)
imul
out
mov
add
movs
fprem
das
mov
outs
imul
adc
and
cmp
and
add
or
leave
out
ja
out
push
ror
jmp
popa
or
pop
jno
xlat
in
enter
inc
sub
rcl
jle
mov
and
xchg
daa
imul
das
nop
add
xchg
push
and
xchg
sbb
jmp
xor
bound
bound
pop
aaa
mov
in
popa
lock
xor
dec
pop
sub
mov
in
int3
fadd
test
xchg
daa
ficomp
sbb
push
inc
aad
jno
(bad)
sti
(bad)
icebp
push
jns
jge
sub
iret
test
cmp
cmp
cdq
cmp
sbb
cmp
rcl
es
add
icebp
push
push
js
cmp
sub
call
sub
into
outs
mov
outs
mov
or
inc
push
cmp
mov
lods
dec
jg
sub
retf
jbe
jne
outs
inc
add
mov
sti
sahf
shl
jns
imul
pop
xchg
inc
clc
stc
lahf
pop
fst
mov
ja
loope
dec
pop
ror
in
jne
pop
push
lock
out
movs
fimul
popf
ds
xchg
inc
sbb
repz
repz
adc
in
loop
dec
mov
adc
enter
test
fisttp
inc
int
ds
shl
dec
sahf
pop
and
dec
xchg
xor
dec
sbb
(bad)
stc
div
or
sahf
add
fild
jnp
push
push
pop
fcom
or
jecxz
mov
dec
jmp
sbb
ss
cmps
shr
sub
fs
sahf
gs
push
push
dec
mov
neg
ins
dec
lods
cld
lea
cmc
dec
outs
adc
push
movs
inc
xchg
mov
dec
sbb
lahf
repz
add
add
call
jle
lea
pop
scas
push
cmps
jbe
sbb
mov
lods
sar
jne
xchg
mov
mov
xchg
ret
fcmovnu
push
stc
cmp
ficom
dec
mov
cmc
push
inc
and
ins
aad
pop
sub
daa
rol
(bad)
cmp
nop
frstor
pop
es
dec
and
and
push
jl
out
es
xchg
jle
jp
call
enter
mov
push
jnp
adc
inc
mov
lods
push
push
or
xor
popf
das
mul
dec
push
pop
inc
jnp
stos
jmp
clc
inc
in
mov
cmps
(bad)
push
sbb
mov
movs
fcomi
push
jne
and
movs
xor
sbb
scas
dec
cdq
pushf
mov
jb
push
push
push
mov
mov
lea
sub
mov
or
movs
(bad)
xchg
inc
mov
mov
jge
ss
js
push
xor
in
xchg
pop
ss
popf
outs
iret
and
pop
mov
sbb
xor
cmp
pop
mov
ss
bound
push
ins
aas
adc
add
jbe
jmp
pop
int3
das
mov
jg
mov
fwait
mov
je
dec
xchg
dec
add
stc
test
int3
lea
and
add
add
sub
in
(bad)
pop
shr
out
xchg
jge
cmc
call
jp
mov
push
push
xor
out
add
push
push
adc
jecxz
cmp
popa
dec
mov
dec
call
adc
in
or
mov
pop
dec
fnsave
xor
push
mov
pop
int
lods
loope
push
scas
or
(bad)
fs
aas
fsub
jge
and
(bad)
std
xchg
jae
xchg
es
jmp
mov
ficomp
dec
loop
bound
and
js
div
shl
imul
adc
icebp
scas
mov
arpl
jl
rcr
cmc
jge
mov
aam
fiadd
and
pop
add
xor
or
loopne
stc
push
test
cmp
jmp
retf
sub
dec
sbb
pop
sub
add
mov
imul
jns
(bad)
adc
cmps
mov
jae
call
xchg
or
test
mov
jno
mov
jne
dec
out
sbb
imul
sar
cmp
int
sbb
push
push
xchg
or
(bad)
clc
dec
push
lock
mov
inc
or
pop
mov
test
push
and
lds
or
or
and
jmp
std
push
out
dec
cdq
ss
pop
mov
idiv
hlt
mov
test
ror
and
xchg
push
imul
stos
lds
jge
and
sbb
cld
shl
jbe
ins
push
rcr
pop
(bad)
fild
cmps
mov
xchg
pop
push
xchg
pop
xor
pop
lock
xchg
cld
add
enter
push
xor
fisub
popf
es
shl
sbb
xchg
or
dec
pop
loop
aaa
(bad)
lods
daa
sub
aam
mov
into
scas
jns
add
jmp
cmp
(bad)
aas
pop
data16
cs
shl
jl
mov
push
pop
and
pop
mov
push
push
mov
leave
fmul
cmp
sbb
xchg
cmp
call
pop
scas
adc
pop
jno
lds
xchg
xchg
and
pop
iret
movs
leave
test
mov
call
lods
dec
into
pop
add
and
jecxz
add
aam
xchg
lahf
shl
xor
cmp
fwait
out
jmp
in
test
sbb
rcl
gs
mov
sub
dec
pop
psrlq
add
test
fiadd
jo
pmaxsw
jno
inc
jnp
in
xchg
and
dec
leave
adc
fdivr
sbb
sahf
gs
inc
pop
sbb
push
adc
pop
or
jle
sub
fistp
adc
xchg
and
dec
jecxz
loope
jg
mov
pop
aas
and
sbb
jle
fiadd
pop
sub
out
shl
lea
ins
mov
mov
mov
dec
pop
xor
push
popa
jle
out
cmp
cmp
mul
into
push
aaa
mov
jne
adc
xchg
(bad)
retf
mov
addr16
lods
out
pop
jle
js
jg
aaa
mov
hlt
push
xchg
loopne
ins
sbb
cmps
movs
dec
pop
ja
push
sqrtps
cwde
pop
dec
call
cmp
mov
mov
sbb
ins
push
loop
mov
pop
sar
inc
push
clc
xor
mov
and
adc
push
mov
jge
pop
cmp
push
jmp
cs
in
loopne
popf
shl
fimul
pop
ins
es
cld
push
dec
aad
lock
push
int
xchg
dec
dec
sbb
mov
adc
adc
into
adc
lds
inc
pop
lahf
ins
push
mov
movsx
pop
(bad)
xchg
fnsave
jb
cmp
sti
add
dec
jge
retf
push
int3
sbb
dec
pop
xor
fisttp
xchg
cdq
shl
stos
xchg
in
test
adc
or
stc
(bad)
lods
xor
add
jg
push
sub
ffree
dec
fistp
lds
jp
jne
test
scas
inc
lods
lock
arpl
ins
int
xchg
cmp
cmp
js
dec
lea
pop
(bad)
mov
jnp
mov
and
shl
mov
ficom
adc
arpl
int
add
jl
test
adc
ss
retf
pop
pop
adc
(bad)
cld
repz
aas
(bad)
cld
repz
aas
call
add
jg
stos
fldenv
aad
pushf
add
add
dec
inc
dec
inc
scas
inc
pusha
or
add
add
add
(bad)
(bad)
inc
add
add
add
add
add
add
jns
je
ins
cs
jb
ja
outs
addr16
push
gs
imul
xor
xor
inc
jne
je
jb
cmp
jb
ins
sub
push
jne
ins
imul
imul
bound
xor
data16
xor
fs
add
adc
gs
cs
jb
ja
outs
addr16
imul
add
popa
je
pop
add
add
add
add
add
lsl
add
les
add
add
or
or
add
or
add
add
add
add
or
add
add
pusha
outs
rol
add
add
inc
dec
inc
add
mov
or
popa
add
jo
pop
jae
add
ret
add
push
ret
add
outs
test
add
adc
inc
inc
push
pop
inc
in
(bad)
add
add
scas
sbb
cmps
cdq
call
dec
ja
les
cwde
scas
cmp
jnp
ins
ja
scas
shl
aam
jns
iret
ds
loop
add
mov
xor
repz
adc
push
inc
inc
inc
mov
repz
call
sbb
pop
dec
mov
cmp
ret
adc
push
adc
mov
sub
adc
lods
iret
ds
cwde
jns
(bad)
jno
lea
and
mov
(bad)
jne
pop
es
xor
scas
sbb
adc
test
mov
or
loopne
mov
fwait
imul
iret
ret
push
sar
mov
and
add
jmp
stos
and
inc
fistp
pop
sahf
test
retf
sbb
xchg
es
jmp
imul
mov
dec
mov
imul
(bad)
int
fist
out
gs
call
iret
adc
pop
loope
outs
dec
call
xchg
xchg
stc
aaa
push
ret
dec
jne
in
dec
lahf
mov
mov
imul
lahf
pop
dec
fst
sub
int
jno
add
sti
dec
out
jns
add
xlat
fcomp
fsub
pusha
mov
ins
mov
fs
ja
daa
nop
ds
push
or
dec
mov
mov
jl
adc
fcom
jmp
sub
fbld
jae
in
loopne
movs
pop
out
mov
je
inc
mov
mov
mov
adc
inc
cmc
jmp
cmp
xchg
lea
inc
mov
jp
dec
les
je
sub
adc
pop
sbb
out
movs
inc
mov
sbb
jno
sti
inc
mov
(bad)
push
fstenv
bound
jno
xor
mov
push
rol
ror
hlt
sar
mov
xchg
retf
in
inc
or
inc
ja
and
pop
mov
ret
and
push
cmp
fwait
les
push
xchg
rol
data16
dec
lods
je
xor
fmulp
adc
outs
xchg
dec
push
sub
call
dec
xor
cmp
popf
mov
pop
mov
jne
sub
and
sbb
mov
jmp
repnz
add
dec
pop
dec
or
test
add
out
pop
repnz
pop
inc
pop
push
ins
pop
and
aas
inc
xor
sub
mov
lods
idiv
push
push
aaa
ret
xor
stc
adc
adc
or
dec
xchg
out
in
mov
or
fwait
fwait
xchg
test
(bad)
int
shl
outs
sub
push
and
sbb
sub
clc
inc
xchg
nop
mov
jg
mov
xor
add
jecxz
inc
sub
add
jns
inc
in
mov
clc
inc
push
dec
aad
aas
imul
test
dec
mov
retf
mov
mov
rcl
sbb
mov
les
jge
mov
mov
jecxz
pop
mov
jbe
pop
pushf
jne
or
cmps
(bad)
jnp
add
xchg
push
or
(bad)
neg
out
ror
retf
sub
retf
ds
xor
mov
clc
cmp
adc
outs
repnz
mov
clc
jae
sub
fst
sbb
shr
in
xlat
pop
xor
jecxz
adc
or
mov
cmps
jmp
pop
out
out
ds
xor
out
movs
cdq
cld
sbb
unpckhps
cmp
push
mov
arpl
pop
mov
das
mov
mov
clc
add
and
xchg
xor
mul
loop
jmp
mov
pop
shl
test
xchg
mov
inc
mov
push
sbb
jl
jns
push
and
data16
stc
xchg
sbb
stc
rcl
es
add
fwait
out
push
fisub
sar
fimul
mov
ss
arpl
xor
sub
jl
xchg
lods
mov
pop
push
stc
test
xchg
pop
inc
push
mov
pop
push
imul
jg
fld
pop
clc
das
dec
sub
xor
jo
mov
or
leave
adc
cs
cmps
pop
jmp
dec
mov
inc
cmps
sub
cmc
jne
or
shl
cmp
dec
(bad)
daa
jno
fist
mov
xchg
test
push
ja
push
pop
idiv
mov
lods
mov
jb
mov
sub
sub
outs
dec
test
jl
fld
jl
(bad)
pop
aas
and
cmp
jp
sub
xor
jne
pop
out
(bad)
push
xor
ror
dec
(bad)
(bad)
(bad)
push
mov
cmc
sbb
outs
dec
jb
mov
push
push
add
adc
jmp
xchg
sub
dec
dec
pop
das
fimul
imul
(bad)
mov
push
ret
fwait
test
xor
stc
int3
xlat
cld
scas
mov
cmps
add
inc
fsubp
cmc
outs
(bad)
movs
hlt
adc
call
cmp
and
xor
test
sbb
dec
inc
sub
sahf
jecxz
cmp
int3
pop
jnp
sbb
mov
jnp
mov
xchg
lea
inc
adc
popa
dec
ins
inc
jne
pop
pop
in
mov
cmps
push
inc
dec
or
ret
pop
lods
test
ins
movs
pop
imul
std
jecxz
pop
mov
mov
pop
out
mov
mov
dec
or
xchg
stc
nop
inc
stc
vpslld
sbb
(bad)
les
mov
dec
dec
add
fstp
dec
sti
mov
cmp
xlat
mov
cmp
xchg
xchg
or
push
shl
mov
jne
dec
into
or
(bad)
pop
xchg
lahf
dec
xlat
popa
inc
sbb
fcmovu
fwait
(bad)
shl
push
or
cdq
or
adc
(bad)
fnsave
shl
jne
movs
popa
ins
mov
(bad)
ror
ins
hlt
aaa
fsub
adc
and
lahf
fimul
and
xchg
pop
ror
sbb
scas
in
xor
push
fisubr
test
sbb
dec
movs
push
sub
jns
push
(bad)
div
dec
dec
retf
mov
mov
pop
or
push
daa
or
and
aam
adc
loope
ffree
sbb
sbb
pop
cmp
aas
pop
add
xor
jns
push
jp
call
cmp
in
xchg
gs
sub
push
or
into
mov
mov
jle
mov
inc
jae
fucomip
in
or
jl
mov
xchg
jg
jp
xchg
add
cmp
pop
mov
cmc
rcr
add
fiadd
out
movs
scas
(bad)
xchg
and
and
nop
(bad)
in
push
bound
in
out
sub
test
and
cmps
jne
jge
sar
shr
hlt
out
push
lahf
mov
fcom
push
xchg
push
mov
pop
iret
nop
call
and
xor
or
and
cmp
sub
mov
pop
mov
(bad)
ds
les
pop
ins
in
xchg
fstp
push
sbb
mov
ds
or
and
fwait
sbb
fimul
cmps
(bad)
pop
retf
cmps
xchg
pop
or
das
adc
std
mov
pop
sub
je
fld
data16
mov
pop
popa
in
js
mov
inc
fbstp
mov
or
imul
lahf
cmps
pop
popf
jns
test
mov
pop
and
iret
into
jp
arpl
shl
adc
hlt
dec
(bad)
pop
fwait
or
sar
jnp
sti
test
jp
ret
imul
and
ds
pop
xor
dec
int
mov
(bad)
jle
push
stos
xchg
sub
ret
mov
pusha
push
mov
stos
cmc
inc
mov
ins
aas
xchg
sti
cli
adc
push
sub
das
add
sub
adc
pop
xor
lea
mov
repz
popf
jb
fiadd
inc
cs
adc
add
mov
sub
pop
ret
xchg
fstp
sub
or
test
rol
and
cmps
aaa
adc
jbe
xor
jb
adc
jne
xchg
dec
dec
and
adc
fst
adc
iret
and
fisttp
dec
repnz
jmp
jb
jae
out
jecxz
mov
retf
jle
jl
cld
andps
jne
inc
add
mov
popa
div
pop
push
jl
loopne
fistp
mov
jle
imul
imul
sub
pop
cmps
out
aaa
jbe
or
cmp
and
sub
xor
mov
jb
gs
les
scas
outs
out
push
outs
mov
aaa
mov
stos
sahf
call
cmps
rcr
pop
aad
pop
ret
outs
push
call
mov
and
pop
jg
lahf
icebp
je
test
inc
fnstenv
inc
cli
sub
xchg
int
call
hlt
mov
gs
mov
mov
ins
call
cwde
xchg
lock
cmp
sti
cmps
inc
pusha
ins
cmps
popf
shl
xchg
vcvtss2si
mov
in
and
popa
push
sub
add
cmp
leave
sar
or
cmp
adc
mov
dec
cmp
test
out
mov
jg
xor
mov
mov
movs
repz
or
(bad)
mov
or
retf
cmp
imul
daa
cwde
sub
(bad)
push
jae
inc
daa
xor
mov
jb
ror
pushf
mov
mov
cdq
adc
shl
(bad)
jmp
outs
sahf
stos
xchg
in
cwde
repnz
stos
dec
repz
lds
inc
jg
call
jne
out
int3
jp
aad
or
int3
es
into
or
inc
inc
adc
push
xor
dec
push
add
xchg
out
je
jnp
out
xor
jb
xchg
leave
push
scas
cmp
stos
add
retf
jae
xor
jg
mov
jecxz
(bad)
fnstsw
jmp
in
sbb
dec
mov
xchg
add
jp
cmp
fsub
mov
adc
ror
xchg
in
xlat
push
adc
lods
pop
(bad)
rcl
mov
vmread
in
ret
and
arpl
inc
inc
mov
mov
enter
mov
cmc
test
pop
xchg
retf
fist
push
and
mov
scas
in
aad
sbb
adc
lds
fsub
push
lds
xlat
mov
outs
sti
in
data16
jg
sub
test
mov
pop
pop
mov
adc
pushf
inc
xchg
xchg
lods
call
call
fdivr
or
jecxz
ficom
xchg
cmc
scas
cmp
test
inc
pop
jl
movs
imul
or
inc
repnz
jmp
lock
test
aam
fst
add
daa
dec
push
(bad)
mov
xor
les
pop
adc
(bad)
gs
mov
sub
fdivr
mov
fsubr
mov
push
and
and
mov
dec
fs
inc
lea
cdq
test
add
sbb
out
push
sub
(bad)
or
xor
es
pop
ja
mov
pop
push
jmp
pop
test
dec
test
sbb
jmp
mov
or
or
lods
cmp
sar
dec
inc
mov
sbb
sub
pop
xchg
out
fsub
xchg
dec
ins
mov
inc
ja
inc
ds
or
mov
jmp
cmp
out
(bad)
xor
jbe
lds
in
inc
movs
stos
retf
aaa
dec
dec
or
cmps
push
dec
out
pop
fnstenv
inc
dec
mov
xchg
fdivr
in
cmp
jecxz
hlt
xchg
jecxz
stos
jp
mov
out
cmps
cmp
inc
fsub
mov
dec
adc
gs
jo
rcr
cs
out
ret
push
jecxz
or
and
mov
jge
xor
sub
movs
stc
mov
dec
xor
outs
leave
sub
mov
aas
repz
movs
cmp
lea
cmp
xchg
aaa
scas
adc
aam
cmp
dec
push
jb
(bad)
out
xchg
sbb
pop
je
mov
push
inc
sahf
xchg
sub
aas
jo
push
mov
dec
jle
out
repz
jp
sar
mov
push
mov
ins
addr16
inc
iret
out
or
int3
add
push
ror
aas
mov
cdq
ror
fs
inc
pop
push
lods
mov
jecxz
cmp
ins
(bad)
push
pop
daa
bound
fcmovbe
popf
adc
popf
push
inc
inc
push
lahf
or
call
mov
xlat
repz
lock
scas
cmps
mov
pop
push
int3
ins
lahf
sbb
aad
(bad)
shr
push
jle
ins
inc
mov
inc
xchg
mov
sar
inc
scas
mov
daa
jno
(bad)
ror
rol
xchg
pop
mov
adc
(bad)
dec
retf
mov
test
xor
inc
outs
cmp
jmp
xor
xor
jbe
adc
inc
aaa
sub
mov
out
jg
and
popf
adc
sahf
cmovp
push
icebp
pop
out
xchg
scas
dec
pop
and
adc
retf
sub
mov
in
lahf
sbb
aam
lea
mov
jle
mov
sti
ss
mov
stos
fadd
int3
jbe
inc
push
bound
out
sub
and
inc
sti
(bad)
fnstsw
pusha
cdq
ins
mov
or
jp
out
fcomp
or
or
stc
aam
add
and
(bad)
dec
jecxz
test
je
push
out
inc
gs
sbb
mov
mov
cmc
push
inc
arpl
pop
test
pop
mov
stos
call
(bad)
and
call
div
add
mov
cmps
xchg
add
bound
pop
pop
icebp
push
mov
(bad)
sbb
xor
cmps
or
adc
dec
adc
sub
fwait
jle
cli
clc
rol
ins
adc
adc
jle
cmp
xchg
adc
sub
xor
mov
jmp
(bad)
dec
cdq
ror
mov
(bad)
jge
pop
dec
cmp
ds
enter
fdivr
and
call
sub
jl
mov
in
and
cmp
bound
repnz
mov
fisttp
push
cwde
adc
es
xlat
pusha
adc
mov
out
scas
dec
(bad)
pop
xchg
mov
mov
in
je
int
pop
dec
je
ret
lds
pop
sub
or
in
jmp
std
push
test
inc
fistp
sbb
push
retf
pop
push
pop
cld
cs
cdq
sub
and
jmp
fwait
out
ja
pop
stc
mov
int3
cmp
(bad)
lahf
out
pushf
mov
scas
xchg
mov
cmp
dec
fcom
(bad)
repnz
fwait
stc
aaa
fcomp
(bad)
mov
mov
pop
mov
imul
inc
sub
mov
mov
dec
fmul
vdivsd
retf
ins
add
mov
in
adc
push
(bad)
lea
daa
loope
ins
test
jp
dec
sar
aam
and
(bad)
jp
mov
mov
fld
loope
push
mov
aam
fidivr
ins
adc
rcl
dec
cmp
and
fwait
stos
add
jnp
xchg
push
xor
popa
ret
xor
and
out
xchg
(bad)
jns
pop
scas
fadd
dec
mov
into
sbb
call
pop
dec
xor
ss
neg
dec
leave
pusha
push
mov
leave
test
clc
inc
dec
cmps
mov
in
and
aaa
jne
loop
(bad)
aas
popa
aad
dec
(bad)
xchg
sbb
hlt
ins
popa
rol
out
mov
cmps
out
fcmovnbe
xor
or
(bad)
cli
shr
ins
(bad)
add
mov
push
xor
sub
push
out
sbb
sub
jne
pop
jbe
pop
sti
movs
sub
and
mov
mov
cld
repz
aas
(bad)
cld
repz
aas
(bad)
cld
mov
cmp
jle
daa
xchg
mov
inc
dec
inc
scas
inc
pusha
or
add
add
add
(bad)
(bad)
inc
add
add
add
add
add
add
jns
je
ins
cs
jb
ja
outs
addr16
push
gs
imul
xor
xor
inc
jne
je
jb
cmp
jb
ins
sub
push
jne
ins
imul
imul
bound
xor
data16
xor
fs
add
adc
gs
cs
jb
ja
outs
addr16
imul
add
popa
je
pop
add
add
add
add
add
lsl
add
mov
mov
inc
or
add
or
add
add
add
add
or
add
add
pusha
outs
rol
add
add
inc
dec
inc
add
mov
or
popa
add
jo
pop
jae
add
ret
add
push
ret
add
outs
test
add
adc
inc
inc
push
pop
inc
in
rol
loopne
ret
aam
cmps
arpl
cmp
aam
xor
cwde
mov
jno
cmps
repz
xlat
mov
fnstsw
out
sahf
pop
add
fild
ins
xor
or
loopne
fldz
fcomp
push
adc
lea
cmp
fstp
(bad)
ins
xor
sub
sub
out
adc
stos
fmulp
loope
mov
addr16
jo
or
rcr
push
retf
fistp
pop
sbb
xchg
push
fcomp
mov
xchg
cmp
jns
dec
mov
xor
loope
retf
push
sti
retf
xchg
or
test
mov
jmp
add
cmp
inc
or
loopne
dec
mov
imul
dec
icebp
test
push
sar
retf
pop
pop
mov
add
sub
out
xor
add
mov
rcl
adc
(bad)
push
clc
mov
sbb
fstp
(bad)
mov
das
dec
das
or
mov
inc
xchg
dec
repz
(bad)
inc
push
(bad)
int3
xchg
std
pop
data16
ficom
add
inc
stc
adc
cmps
bound
test
fisttp
sub
and
push
in
frstor
jmp
movs
mov
and
cs
js
mov
inc
fst
shr
xchg
inc
sbb
rol
add
icebp
dec
sub
push
lahf
data16
mov
out
jg
es
(bad)
out
stos
or
pop
(bad)
mov
pop
lds
ss
fsub
(bad)
lods
pop
mov
lods
js
xchg
xchg
aam
xor
hlt
inc
mov
or
jmp
push
sub
mov
cmp
stos
jnp
push
scas
ins
test
jmp
add
mov
fcomp
mov
movs
sub
(bad)
jecxz
(bad)
or
rcl
xor
gs
js
cmp
cmp
mov
dec
into
xor
jo
popf
adc
xchg
and
push
xchg
pop
jnp
jo
mov
repz
xor
jnp
pop
jecxz
push
inc
jle
mov
icebp
sub
pop
or
sbb
mov
adc
fsubr
inc
into
jbe
fdiv
add
call
cli
mov
shr
loope
ret
aam
jmp
cli
dec
mov
fcmovnb
mov
loop
mov
jecxz
pop
inc
xchg
add
pop
jge
and
sub
in
pop
scas
in
in
rcl
mov
mov
bound
push
mov
test
repnz
(bad)
out
(bad)
or
hlt
jb
mov
mov
add
aaa
jg
jo
jnp
push
lds
dec
sahf
lock
fs
nop
dec
sbb
push
cmp
je
add
xchg
xchg
ss
sbb
xor
mov
fild
hlt
(bad)
jg
(bad)
ja
dec
sbb
and
addr16
pop
and
(bad)
test
loope
out
outs
pop
scas
jl
ins
inc
add
push
xchg
mov
sahf
adc
imul
jp
not
(bad)
(bad)
nop
mov
mov
mov
adc
gs
data16
outs
push
xchg
fnstenv
dec
std
push
jno
in
outs
jbe
mov
das
(bad)
pop
mov
frstpm(287
or
cmp
cwde
cmp
push
leave
cli
je
cmp
loop
jae
shl
inc
add
push
mov
push
mov
dec
aam
(bad)
mov
jns
jo
xor
xchg
cmp
call
lods
push
fwait
loopne
mov
xor
dec
sbb
lods
scas
test
test
scas
fsubr
sbb
neg
(bad)
add
dec
push
xor
xor
stos
loop
rcr
mov
js
cld
imul
inc
pusha
push
lods
cmp
sbb
pop
outs
xor
call
aaa
or
fist
push
xor
std
(bad)
xchg
and
bound
out
daa
or
sahf
cld
xor
adc
inc
enter
jg
sub
inc
jnp
pop
loope
lahf
popf
pop
and
add
outs
and
test
push
int
pop
jecxz
(bad)
stos
pop
add
mov
mov
lahf
adc
retf
ret
(bad)
inc
jmp
stos
cs
xor
in
xchg
cmp
jmp
sti
mov
test
iret
mov
sbb
imul
call
addr16
int3
add
cld
push
pop
iret
je
dec
loop
hlt
ret
mov
pmaddwd
dec
scas
hlt
mov
shl
mov
pop
pop
or
int
and
push
sbb
xchg
mov
outs
adc
in
pusha
gs
leave
add
xlat
dec
out
mov
cmps
loop
movs
fstp
std
and
nop
dec
hlt
movs
adc
sbb
(bad)
cmp
hlt
out
int3
aad
fcomp
and
push
and
les
push
imul
jo
pop
pop
imul
bound
call
mul
mov
aaa
mov
test
jnp
test
mov
out
out
ret
jne
mov
push
imul
jl
or
jp
ds
aad
cmp
mov
xchg
in
sar
mov
inc
std
retf
jne
fistp
mov
inc
out
inc
cs
aam
adc
shr
jmp
fdivp
pop
call
hlt
(bad)
fsubr
cld
jecxz
mov
xchg
xchg
jmp
sub
idiv
pushf
stos
sbb
pop
inc
sub
retf
sbb
pop
mov
jmp
jne
scas
mov
push
clc
repz
adc
or
sbb
xor
fsubr
sbb
ret
xor
je
stos
cmp
lods
lahf
out
sbb
aas
fistp
jecxz
mov
lds
retf
pop
sub
mov
xchg
fidivr
xchg
lea
scas
ds
in
mov
inc
icebp
xchg
xchg
cli
cdq
push
mov
sti
js
mov
lds
clc
in
sub
or
add
xchg
sub
lods
sub
fsubr
jne
int3
dec
movs
cwde
bound
not
adc
(bad)
sbb
test
mov
adc
xchg
cmp
pop
cdq
inc
mov
stc
loop
mov
adc
das
cdq
imul
out
mov
shr
test
sbb
shl
out
div
mov
xor
fidiv
push
jns
push
daa
xor
dec
dec
pop
xor
mov
sar
cwde
int3
popf
loopne
fs
lahf
adc
push
xchg
lods
fwait
dec
push
loop
int
(bad)
adc
add
sbb
dec
xchg
xor
pop
mov
adc
mov
scas
and
jmp
sti
repnz
sub
push
inc
dec
sub
jmp
out
imul
movs
push
fcom
lock
pop
cs
(bad)
iret
ret
les
in
dec
or
aas
(bad)
mov
fdivr
xlat
(bad)
mov
sub
bound
mov
pop
loop
fist
mov
scas
out
fdivrp
sub
test
daa
mov
and
fs
retf
pop
or
es
enter
or
mov
sti
jo
lds
(bad)
arpl
fwait
adc
mov
adc
or
(bad)
dec
cmps
adc
xchg
mov
sbb
dec
pop
pop
pop
or
jmp
jge
or
or
jmp
push
and
push
jo
into
call
popf
push
push
adc
push
mov
mov
fist
inc
int
retf
fcomp
push
adc
mov
push
or
cmp
push
xchg
movs
aad
inc
repz
sub
jmp
push
cli
or
adc
mov
std
popf
mov
std
jecxz
arpl
mov
dec
test
jecxz
dec
inc
push
shr
jne
leave
pop
and
mov
inc
dec
mov
xchg
xlat
jns
jo
mov
into
mov
mov
aam
std
int3
jae
or
jecxz
fisubr
xchg
out
dec
push
into
mov
movs
sub
adc
mov
in
xor
jbe
xor
sbb
add
out
lahf
dec
mov
add
imul
call
adc
mov
aas
(bad)
mov
repnz
scas
dec
lods
cmp
xchg
out
out
or
sub
xor
loope
les
es
push
mov
mov
or
sbb
jle
cli
mov
movs
push
and
ret
retf
leave
xlat
xor
loopne
jbe
lods
dec
jno
inc
fsubp
(bad)
xchg
call
out
bound
jo
in
pop
mov
rcl
popa
pusha
in
bound
imul
push
push
adc
mov
pop
inc
cli
icebp
inc
in
ins
pop
cli
xor
sbb
ja
sbb
sbb
cmp
mov
call
cmp
xchg
and
or
nop
leave
scas
cmp
sbb
pop
ss
dec
fneni(8087
sbb
sub
mov
gs
fnstenv
push
adc
js
add
fsub
call
and
inc
(bad)
mov
cdq
mov
pop
cld
adc
adc
test
cmp
out
adc
nop
inc
or
push
test
test
mov
jmp
dec
(bad)
lea
setne
adc
xchg
mov
(bad)
lods
pusha
jg
push
push
xchg
stos
std
pop
ret
sti
mov
es
or
stc
lds
push
cmp
push
dec
fld
leave
or
stos
cmp
lea
xchg
stos
es
out
xchg
stos
test
or
repz
in
jbe
int3
sub
out
inc
mov
fiadd
inc
ss
mov
or
xor
cwde
lock
sub
mov
stos
mov
iret
jo
mov
scas
nop
sar
(bad)
std
lock
fs
dec
iret
sar
mov
dec
push
in
cmps
ret
jb
mov
adc
imul
xchg
mov
jl
fisttp
jmp
mov
scas
fist
imul
mov
and
stos
sar
cmps
mov
cmp
(bad)
shl
(bad)
(bad)
icebp
iret
sub
in
movs
clc
mov
adc
stc
ins
gs
mov
out
pop
xor
test
rcr
cmps
mov
pop
cmc
inc
lods
cwde
or
shr
inc
adc
xlat
das
xor
mov
xchg
xchg
fsub
and
scas
add
sbb
ret
call
jmp
sbb
repnz
pop
adc
sbb
sbb
or
gs
(bad)
in
jae
lahf
in
sub
lds
stos
mov
mov
shl
dec
es
ins
cmp
jns
sbb
fs
dec
push
loope
inc
ret
cmovl
push
ret
fisub
movs
inc
test
xchg
push
in
repz
jl
fs
jbe
outs
mov
mov
out
fld
sub
adc
sbb
sub
test
arpl
and
in
movs
sbb
sbb
push
and
or
aas
repnz
iret
mov
and
loope
jns
push
pop
jno
add
mov
mov
add
(bad)
ins
cdq
cmc
ins
repz
cmps
and
out
arpl
xchg
gs
adc
test
push
stos
mov
out
xor
fs
pop
jp
test
fisubr
(bad)
stos
ror
mov
arpl
cmp
inc
jno
sub
out
test
push
xchg
inc
adc
outs
cwde
or
mov
add
pop
adc
xchg
enter
cmps
shl
aas
rcl
xchg
call
jp
enter
pushf
ins
test
hlt
jns
cmp
mov
push
dec
in
xor
push
out
inc
ror
sahf
and
fstp
xchg
mov
popa
and
mov
cmc
daa
cmp
retf
dec
dec
jle
sbb
push
mov
jle
cmp
mov
jmp
bound
pop
mov
stos
jns
lahf
mov
inc
adc
enter
pop
nop
or
sub
add
pop
mov
mov
fwait
sahf
dec
mov
xor
and
call
add
dec
cmps
imul
mov
mov
sbb
inc
lock
pop
xchg
pushf
xlat
push
lock
mov
arpl
pop
mov
push
jb
shl
jns
pop
cs
cdq
add
xchg
jp
mov
sbb
jle
xchg
aad
ror
mov
and
sbb
fs
mov
jmp
hlt
test
ins
or
or
sub
xor
leave
mov
pop
loopne
cmps
add
aaa
inc
mov
or
iret
inc
mov
fbld
xor
inc
add
or
jmp
cmp
inc
jecxz
(bad)
cwde
in
jg
pop
adc
or
fdiv
cmovb
push
push
or
adc
mov
test
test
dec
dec
cmp
(bad)
jo
jb
aas
ror
xchg
data16
mov
xor
pop
dec
jl
push
mov
daa
and
cmps
outs
das
cmp
cmp
xchg
xor
cmp
mov
stc
pop
and
inc
mov
jns
sbb
in
xchg
loop
or
cld
bnd
retf
and
mov
jp
or
sahf
fstp
fldcw
and
(bad)
mov
pop
cmc
pop
mov
sbb
push
hlt
xor
push
or
ja
outs
mov
std
xor
pop
or
pop
lock
aam
adc
and
mov
inc
test
jnp
jne
mov
fwait
test
inc
arpl
and
test
pop
xor
jo
gs
aaa
xor
inc
in
retf
loope
fwait
sub
mov
push
cmp
jl
leave
fidiv
cmps
dec
xor
cmp
dec
test
push
ror
mov
ins
fistp
xchg
adc
in
cs
and
shl
cwde
mov
inc
jae
xchg
mov
fidiv
cmps
mov
cmp
sbb
test
popf
rol
push
sub
cli
pop
stc
icebp
(bad)
sbb
inc
jno
pop
in
xor
sbb
jno
pop
fcomp
stos
cli
leave
or
ins
adc
mov
and
repnz
or
push
mov
movs
and
inc
mov
(bad)
dec
mov
cli
add
add
pop
std
or
popf
test
cmps
aaa
or
pop
pop
and
adc
retf
mov
scas
mov
sbb
popa
cmp
sub
sbb
int
into
dec
xchg
or
cmps
std
cdq
cmc
dec
xchg
jmp
ja
test
mov
jae
pop
lock
rcr
mov
pop
and
cwde
jmp
sub
imul
ins
std
cmp
mov
xchg
ins
inc
jp
je
imul
rol
movs
scas
pop
mov
(bad)
aas
jecxz
push
fisubr
mov
fldcw
push
cld
mov
mov
jmp
sbb
mov
sbb
adc
mov
and
and
jl
pop
gs
mov
xchg
push
inc
dec
xor
jecxz
pop
inc
shr
popa
js
leave
mov
sub
jbe
cld
inc
repz
(bad)
xchg
mov
xchg
in
cmc
or
cmps
dec
xor
xchg
xchg
das
and
daa
leave
push
pop
retf
jge
outs
les
repnz
ds
loope
loope
es
(bad)
(bad)
(bad)
jmp
test
jmp
add
mov
stc
add
pop
add
sbb
ror
cmp
outs
pop
adc
dec
dec
cld
mov
add
mov
push
cmps
xchg
mov
ret
adc
adc
in
iret
fwait
mov
mov
mul
dec
mov
adc
scas
mov
mov
aaa
bndstx
mov
repz
loope
mov
adc
xchg
xor
in
fist
and
sbb
push
mov
push
ins
addr16
enter
cld
shl
mov
out
jg
stc
out
jg
scas
add
inc
mov
jne
mov
add
dec
inc
dec
inc
scas
inc
pusha
or
add
add
add
(bad)
(bad)
inc
add
add
add
add
add
add
jns
je
ins
cs
jb
ja
outs
addr16
push
gs
imul
xor
xor
inc
jne
je
jb
cmp
jb
ins
sub
push
jne
ins
imul
imul
bound
xor
data16
xor
fs
add
adc
gs
cs
jb
ja
outs
addr16
imul
add
popa
je
pop
add
add
add
add
add
lsl
add
les
add
add
or
or
add
or
add
add
add
add
or
add
add
pusha
outs
rol
add
add
inc
dec
inc
add
mov
or
popa
add
jo
pop
jae
add
ret
add
push
ret
add
outs
test
add
adc
inc
inc
push
pop
inc
in
(bad)
add
add
adc
jmp
dec
popf
jmp
jmp
mov
pushf
ss
sbb
ja
into
int3
jmp
sti
jnp
lds
add
sub
test
mov
ror
pop
jmp
mov
push
lahf
es
adc
popa
loope
sbb
or
xor
repnz
(bad)
mov
or
sbb
push
outs
push
ror
rcl
bnd
jmp
inc
push
cmp
pushf
mov
ret
sbb
ret
imul
pop
dec
daa
jo
add
sti
aam
retf
cmp
jecxz
cmp
retf
mov
and
push
sub
or
repnz
aas
cmp
cmp
push
xor
int3
or
jl
lea
int
lock
or
imul
jmp
sub
jle
(bad)
push
add
xor
aas
shl
inc
ret
xchg
adc
xor
icebp
inc
(bad)
sub
mov
rcr
adc
fisub
pop
int3
movs
xchg
les
and
popf
dec
imul
idiv
pop
pop
push
and
sbb
(bad)
push
sti
pop
push
mov
repnz
bound
xchg
pop
xor
mov
dec
aaa
push
sub
repz
pop
adc
icebp
std
and
popa
sbb
mov
cld
test
jecxz
xor
fsub
or
outs
retf
or
cli
inc
in
fcomp
and
mov
cmp
and
cld
fiadd
scas
dec
inc
cmp
addr16
pop
stos
sar
jle
adc
cmps
fld
popf
xchg
cmp
xchg
enter
arpl
std
or
xchg
test
pop
test
fwait
lahf
leave
(bad)
fdiv
(bad)
pop
outs
outs
cld
xadd
leave
ja
stos
les
sub
push
cs
dec
adc
xor
jg
dec
cli
mov
push
pop
push
push
(bad)
movs
leave
arpl
xchg
inc
inc
mov
aam
mov
or
lods
lock
dec
jo
mov
in
cli
xor
imul
push
mov
aaa
mov
add
xchg
shl
lods
pop
add
push
int3
mov
scas
cmp
out
pop
inc
neg
mul
mov
fwait
pusha
mov
pop
shl
out
fdivrp
fimul
xor
loopne
movs
or
mov
mov
fdivr
inc
xchg
das
pop
(bad)
fld
jno
dec
ins
lods
outs
push
mov
imul
in
pop
mov
add
mov
ds
sbb
mov
aaa
cwde
push
or
loop
aad
fmul
dec
cmp
push
pop
xchg
ret
in
xchg
adc
xchg
and
gs
xor
sbb
fiadd
adc
xchg
mov
pop
not
lahf
and
fcom
loopne
std
stc
jbe
push
jns
hlt
js
imul
xlat
inc
xchg
ds
dec
lahf
ret
cmp
xor
cdq
clc
pop
ins
sub
shl
sub
js
inc
dec
mov
mov
fidivr
add
dec
and
cmp
retf
mov
scas
in
dec
mov
std
push
cvtps2pi
movs
gs
add
jb
imul
or
xchg
std
call
cmps
mov
bound
sbb
(bad)
jle
and
mov
pop
mov
(bad)
push
sbb
and
daa
lock
enter
hlt
fcmovb
cmc
popf
jmp
repz
inc
mov
ror
xchg
mov
inc
push
fidivr
add
fidivr
adc
or
sahf
ss
pop
jmp
mov
adc
inc
and
pop
mov
rol
xchg
outs
mov
jae
ins
dec
punpckhbw
xchg
mov
jg
inc
movd
call
test
push
lods
inc
test
inc
stos
pusha
adc
xchg
cmp
out
adc
fldenv
test
(bad)
jle
out
mov
mov
push
std
ss
or
retf
mov
inc
ret
movs
push
add
aas
dec
fcom
das
aam
cmps
jp
daa
inc
xor
sub
jmp
(bad)
mov
cdq
jp
mov
inc
xlat
fwait
jg
xrelease
cdq
add
rcl
cmp
inc
fcom
cmps
ja
ss
sub
sbb
inc
fldl2e
fldcw
add
push
in
test
xor
jnp
aam
cmp
clc
lods
repnz
(bad)
test
xor
xchg
aaa
xchg
pop
xor
push
repz
jg
push
xchg
cli
inc
jecxz
or
test
int3
repz
in
xchg
sbb
and
adc
dec
cmp
into
nop
data16
test
xlat
lea
add
sbb
and
mov
nop
pusha
adc
push
mov
idiv
or
or
arpl
js
xchg
(bad)
pushf
mov
mov
jnp
sti
adc
mov
xor
sbb
int
sub
sbb
jp
fs
ins
stos
and
aaa
mov
js
loope
jle
fisubr
fbld
xchg
cmp
dec
loop
es
inc
adc
pop
pop
xchg
push
adc
je
ds
nop
mov
cdq
dec
sbb
jle
fild
aad
outs
sar
lea
shl
cmp
outs
js
out
mov
push
inc
test
in
pop
pusha
inc
add
adc
cmc
ja
cld
sahf
jle
stc
and
pop
pop
jno
sbb
sbb
retf
cmps
icebp
call
gs
xor
adc
dec
xor
cmps
jb
iret
leave
lds
aas
cdq
addr16
xlat
lods
add
or
es
iret
sbb
rol
pop
into
and
jmp
sbb
loopne
addr16
sbb
sub
scas
sbb
jne
xchg
pop
cmp
add
sub
pop
mov
inc
xor
out
mov
cmp
jl
fsubr
fsubrp
ds
push
retf
aad
leave
push
cmp
shl
out
ror
aas
mov
icebp
cmp
shl
jg
jle
sbb
aas
xor
adc
mov
fidiv
push
sub
cwde
adc
cld
ins
add
push
sbb
mov
retf
fst
aam
ins
ds
add
sti
(bad)
jns
xor
dec
je
repz
mov
sti
iret
xor
in
pop
mov
sbb
ds
daa
jmp
and
movs
pop
jae
pop
repz
cmp
test
lods
ds
xchg
sbb
cdq
jbe
push
push
cmp
ins
and
std
and
cmps
(bad)
in
dec
ret
je
push
pop
cmps
xchg
fnstcw
pop
and
jp
mov
dec
push
(bad)
jno
inc
xor
call
pop
mov
jmp
cmc
cmp
inc
mov
sub
jmp
scas
adc
idiv
pop
fsubr
jp
and
or
cmp
lahf
aaa
jno
pop
bswap
frstor
loop
out
ss
and
cmps
imul
mov
scas
mov
imul
ss
fistp
aam
dec
sti
stc
in
mov
dec
sub
ja
psrlw
xor
cmps
fistp
(bad)
cmp
pop
push
xor
cmc
cli
adc
sbb
in
fnstenv
mov
not
int3
test
ins
pop
shl
js
push
mov
fidiv
stos
mov
or
sbb
push
push
out
popa
fldenv
pop
push
jbe
inc
mov
or
sub
pop
(bad)
rol
adc
stos
in
in
or
lea
sahf
add
and
(bad)
pop
(bad)
jno
imul
neg
xchg
ss
arpl
pop
xchg
xchg
adc
fistp
xchg
aas
xor
movs
xor
daa
xor
sbb
cmc
pop
sbb
in
arpl
mov
add
mov
xor
(bad)
mov
mov
sbb
cmc
pop
test
lock
xor
das
pop
scas
cwde
cmps
jle
fldcw
pop
mov
jmp
ficomp
jmp
aad
push
jp
push
fwait
mov
test
inc
int
cmp
mov
fdiv
out
and
push
jno
aaa
ds
fld
push
test
jp
loope
sbb
jnp
popa
xchg
xor
retf
je
aad
stos
and
adc
xchg
jp
cmp
jg
test
imul
xor
pop
and
(bad)
jno
dec
into
aam
and
stos
aad
or
sub
xor
xor
inc
ret
push
mov
xor
xchg
or
xor
and
bound
pop
addr16
mov
lds
test
inc
and
fwait
pop
in
pop
icebp
retf
dec
ss
dec
out
or
stc
or
dec
or
cli
xchg
dec
mov
ins
stos
mov
movs
loop
pop
add
ror
les
aas
dec
mov
test
(bad)
sbb
cmps
pop
xchg
inc
mov
add
sbb
dec
inc
xor
mov
or
out
dec
aam
call
mov
out
add
mov
shl
retf
sub
ffree
adc
dec
jg
loopne
and
cs
fbld
dec
sub
mov
inc
aad
jb
lds
mov
push
cmp
repz
loope
gs
adc
ins
add
(bad)
icebp
pop
cmp
or
(bad)
mov
cmp
sbb
xchg
pusha
daa
(bad)
xor
cmp
daa
inc
sub
out
in
xlat
jmp
jbe
xchg
fcompp
or
or
add
push
retf
pop
cmp
dec
xchg
scas
mov
imul
call
xchg
fdivr
out
mov
lds
ror
mov
retf
call
xchg
pop
jg
cwde
sbb
clc
push
(bad)
(bad)
dec
popf
push
mov
test
cmp
or
ins
inc
pop
cmp
mov
inc
mov
inc
sbb
and
xchg
pop
jge
adc
sub
xor
ret
xchg
daa
addr16
fdiv
cmp
aad
sbb
mov
mov
mov
mov
ds
inc
jecxz
dec
(bad)
and
fbld
xchg
or
sbb
adc
xor
xchg
xor
xlat
pop
push
cmp
adc
dec
int3
es
mov
sub
pop
add
sbb
in
das
ficomp
inc
sbb
push
cmp
test
adc
mov
push
add
jb
outs
stos
(bad)
shr
rol
inc
cmps
mov
jo
ins
dec
or
out
mov
sbb
cmc
shl
imul
iret
rol
push
mov
pop
push
pop
push
aad
fcomp
leave
(bad)
push
mov
mov
xlat
(bad)
loope
push
jmp
or
dec
jmp
inc
cmps
lahf
mov
rcl
mov
test
loopne
scas
inc
mov
mov
xchg
and
rcr
cmp
dec
not
xchg
mov
int3
lock
push
ins
iret
ins
ja
cmps
inc
aad
stos
adc
xchg
mov
lds
jmp
inc
(bad)
fsub
(bad)
mov
pop
and
pop
sub
rcr
les
jp
mov
pop
dec
enter
xchg
scas
cmps
lock
pop
xor
hlt
mov
out
(bad)
sub
adc
imul
imul
dec
repz
fld
addr16
rcl
adc
sub
push
shr
aas
pop
jne
xchg
jl
lods
popf
sahf
jecxz
dec
outs
sbb
and
xlat
fldenv
push
jg
sar
mov
cmp
into
scas
fsubr
jae
sub
jne
out
add
and
arpl
cmps
imul
sub
dec
imul
mov
popa
rcl
cmp
sub
sbb
add
stc
sub
xchg
hlt
add
xor
test
mov
movntq
stc
jno
inc
push
inc
(bad)
xchg
push
icebp
int
gs
fcomp
inc
scas
clc
sub
dec
cmp
jg
pop
iret
or
shr
fidiv
jmp
mov
sub
push
ins
out
mov
or
loop
ja
iret
rcr
pop
scas
cmc
push
test
jge
cmp
pop
push
mov
addps
mov
mov
dec
dec
dec
pusha
shr
fwait
xlat
jmp
cwde
sub
fadd
cmps
or
adc
jns
test
sti
jp
mov
jmp
mov
add
sbb
and
std
test
ja
stc
call
aad
int3
mov
add
cmp
test
inc
in
ds
(bad)
dec
fwait
addr16
push
leave
lods
aam
(bad)
repnz
dec
sbb
icebp
leave
dec
pop
call
aam
pop
lea
mov
in
add
sbb
mov
and
dec
push
jl
test
jmp
clc
imul
mov
sub
out
imul
sub
pop
push
scas
outs
in
push
jno
mov
dec
sub
sbb
fdiv
xlat
dec
inc
fimul
sahf
push
xlat
xchg
cwde
sbb
dec
paddw
imul
push
jb
xchg
push
fwait
test
loope
repnz
(bad)
xchg
icebp
xor
imul
sub
jo
icebp
jmp
repz
jno
out
or
or
add
data16
cli
mov
f2xm1
fsubr
sbb
mov
inc
cli
sbb
sub
ins
inc
retf
cmp
pop
retf
inc
push
nop
adc
popf
mov
movhlps
sbb
push
aas
addr16
addr16
pop
sbb
data16
mov
popf
xchg
test
mov
mov
cmp
pop
or
push
fstp
xor
jmp
mov
mov
jecxz
sbb
dec
push
iret
pop
jl
fdivr
retf
cmps
mov
loopne
or
mov
push
inc
mov
in
les
cld
lea
scas
jg
inc
dec
adc
(bad)
std
xlat
mov
inc
adc
fcomip
icebp
mov
shl
dec
pushf
or
mov
nop
scas
leave
ret
adc
outs
xor
cmp
lock
push
mov
into
ja
mov
push
cmp
(bad)
adc
nop
int3
les
les
xchg
popa
xor
push
xor
jns
adc
sub
ret
int
mov
mov
xchg
mov
mov
mov
mov
leave
jmp
xchg
rol
repnz
mov
dec
mov
rcr
outs
ds
push
outs
xchg
adc
mov
pop
ins
mov
xor
adc
pop
inc
test
inc
out
sbb
adc
jecxz
sub
vandnps
(bad)
mov
outs
hlt
pushf
dec
jge
aas
iret
test
test
pop
stc
ja
pop
jl
pusha
jb
es
mov
data16
inc
pop
ins
jg
sbb
lds
add
sbb
jo
jb
mov
movs
dec
jmp
in
or
mov
mov
in
mov
add
push
and
xchg
xchg
push
dec
inc
push
in
lahf
cmc
mov
hlt
icebp
cs
mov
add
pop
or
fwait
pop
sub
or
ds
xchg
adc
jns
pop
repz
mov
jns
mov
pop
daa
shl
cmp
(bad)
jle
scas
mov
fcom
fnstenv
inc
cmp
push
aaa
cmp
ficom
mov
out
ins
push
call
xor
and
lods
mov
in
sub
call
dec
mov
dec
push
aaa
lea
ins
cmp
mov
sub
xor
mov
in
sbb
inc
sbb
xchg
pop
add
cdq
out
sbb
out
mov
call
rcr
mov
into
leave
lods
xor
test
js
sbb
push
sub
ins
call
add
stc
iret
jg
repz
(bad)
cld
mov
cmp
rcr
add
add
dec
inc
dec
inc
scas
inc
pusha
or
add
add
add
(bad)
(bad)
inc
add
add
add
add
add
add
jns
je
ins
cs
jb
ja
outs
addr16
push
gs
imul
xor
xor
inc
jne
je
jb
cmp
jb
ins
sub
push
jne
ins
imul
imul
bound
xor
data16
xor
fs
add
adc
gs
cs
jb
ja
outs
addr16
imul
add
popa
je
pop
add
add
add
add
add
lsl
add
mov
mov
inc
or
add
or
add
add
add
add
or
add
add
pusha
outs
rol
add
add
inc
dec
inc
add
mov
or
popa
add
jo
pop
jae
add
ret
add
push
ret
add
outs
test
add
adc
inc
inc
push
pop
inc
in
rol
aam
add
loopne
fxch
ds
pop
pushf
int3
enter
ds
mov
and
sti
ins
mov
sbb
jecxz
ins
mov
jne
mov
aas
enter
add
inc
cmp
ret
xor
jns
dec
xor
not
sub
sbb
mov
add
jge
add
and
lods
in
fs
inc
outs
lods
into
xchg
xchg
mov
jne
stos
iret
outs
mov
push
mov
pushf
mov
add
add
retf
jo
pushf
xchg
fs
mov
test
inc
dec
inc
hlt
xor
scas
sbb
ret
push
shl
sub
into
inc
mov
jg
mov
(bad)
push
push
cmp
add
xchg
jmp
push
cmps
lea
dec
push
nop
mov
hlt
jae
mov
cmp
push
push
inc
outs
lahf
cwde
push
test
aam
mov
outs
lods
bnd
les
mov
add
xchg
in
fwait
push
push
icebp
dec
lods
jne
mov
push
sub
out
jmp
lods
sub
xchg
push
cmp
call
sbb
fist
inc
push
fisub
pop
arpl
mov
movs
or
sub
sbb
ror
push
in
pushf
add
push
in
push
cmp
ds
imul
pop
and
add
fadd
cdq
cmps
sbb
lahf
pop
mov
hlt
pop
pusha
ret
daa
pop
cli
clc
dec
(bad)
mov
data16
cli
ja
ss
lea
popa
test
cwde
inc
pop
jbe
xor
add
push
dec
push
enter
ins
jmp
adc
call
pop
dec
and
test
(bad)
xchg
ret
popa
imul
(bad)
ins
xlat
xor
js
int
push
inc
push
(bad)
pop
dec
mov
jle
jae
out
jecxz
xlat
cdq
repz
out
mov
lahf
lahf
and
cld
jmp
mov
jne
mov
and
(bad)
mov
imul
xchg
in
xor
pop
cld
pop
outs
xlat
jle
shr
int3
sub
or
(bad)
ja
dec
sbb
push
iret
mov
or
cld
hlt
clc
push
aam
pop
xchg
and
test
and
js
fwait
pop
lea
adc
aas
data16
lods
dec
mov
xor
jge
cmp
fist
aam
dec
test
icebp
hlt
(bad)
inc
sub
and
fwait
(bad)
shr
pop
fs
dec
xor
mov
das
daa
data16
sbb
pop
adc
jno
sub
xchg
sti
(bad)
outs
pop
adc
je
jecxz
push
mov
imul
ins
in
aam
sub
inc
mov
pop
into
inc
lea
jmp
(bad)
je
loope
jmp
fcomp
push
jnp
out
jmp
or
mov
aas
mov
jnp
lahf
and
lahf
adc
jbe
fstp
mov
ins
std
jp
icebp
or
out
adc
clc
out
fimul
je
mov
xor
aaa
aas
inc
pop
xor
pop
or
mov
test
jl
inc
sbb
mov
jnp
aas
add
push
in
push
aam
xor
dec
rcl
(bad)
popa
cld
mov
mov
nop
(bad)
ss
fistp
cmps
cmps
lods
pop
out
mov
push
test
cwde
cmp
mov
sub
call
sbb
mov
je
lock
jb
jb
rcl
mov
jmp
jno
xchg
xchg
lods
fwait
mov
movs
dec
fldcw
repnz
dec
call
xor
cmp
pop
bound
jmp
cmp
and
outs
inc
test
mov
mov
mov
add
mov
or
xor
add
pop
mov
stos
dec
mov
(bad)
in
in
into
dec
sub
addr16
psubsw
cmps
push
push
xor
push
push
cmps
adc
push
loop
jmp
mov
neg
daa
jge
push
hlt
test
pop
and
retf
mov
movs
repnz
cmp
into
lahf
xchg
lea
shr
mov
das
mov
or
push
pop
fsubr
push
jmp
sar
sub
cwde
mov
cmc
jle
xor
ds
jae
fst
mov
pusha
xor
xor
out
jmp
mov
pop
add
and
and
sahf
adc
inc
inc
leave
lock
pop
lock
pop
arpl
sbb
sti
inc
sub
pop
fcom
iret
sbb
movs
pop
ins
pop
jo
repnz
cmp
pushf
mov
outs
ror
jne
sbb
and
and
sbb
add
add
test
nop
cmps
inc
hlt
push
movs
cmp
aaa
push
fwait
(bad)
test
mov
push
loope
test
les
xor
(bad)
test
scas
(bad)
jnp
pop
mov
je
add
pop
mov
jno
in
lea
call
les
enter
daa
dec
xchg
push
call
mov
data16
idiv
inc
lods
add
(bad)
outs
pop
lea
and
xchg
jmp
pop
rcr
test
ja
(bad)
jno
mov
or
or
(bad)
ret
push
push
pop
in
adc
bnd
(bad)
and
pop
dec
add
or
mov
int
sbb
push
push
mov
call
movs
sub
cmp
jge
scas
mov
mov
push
xchg
into
jge
adc
inc
sub
and
lea
mov
ret
mov
in
std
mov
push
mov
adc
mov
adc
push
aam
sahf
add
or
test
add
sub
cs
push
ror
loopne
test
repnz
lea
cmp
repz
push
leave
in
push
inc
inc
aam
cmp
cmp
push
inc
test
sub
mov
pop
add
cwde
ja
leave
aas
mov
out
cmp
adc
cmp
int
sub
mov
out
cmp
mov
xor
test
int
das
je
add
xchg
push
mov
inc
sbb
add
or
cs
xchg
imul
icebp
hlt
cmp
dec
jmp
inc
enter
mov
(bad)
lock
fisttp
sub
pop
cmp
inc
outs
je
popa
dec
mov
scas
test
pusha
mov
enter
stos
xlat
mov
mov
fnstenv
lods
inc
ret
outs
jecxz
std
dec
add
xchg
push
aam
loope
or
(bad)
movs
jns
sbb
push
std
(bad)
mov
adc
cwde
mov
cmps
cmp
das
cli
dec
fisttp
mov
ins
neg
(bad)
mov
cld
jmp
jne
dec
mov
jp
pop
xor
adc
aam
clc
adc
fimul
fisttp
sbb
arpl
cs
push
lea
cld
cmp
dec
scas
cmc
ins
add
dec
movs
adc
rcr
in
in
nop
or
outs
dec
(bad)
jns
push
lods
cmps
mov
cs
aad
cmp
adc
pop
jns
xchg
scas
xchg
inc
xchg
jo
sub
popf
pop
scas
add
push
pop
pop
mov
or
jo
pop
fwait
ss
sbb
je
loopne
mov
movlps
stc
lea
dec
cmps
sub
fistp
mov
call
or
adc
out
(bad)
rcl
pop
pop
rcl
popa
sbb
xchg
mov
int
movs
sub
mov
and
mov
inc
std
movs
test
test
and
rol
icebp
dec
jne
pop
fisub
jbe
adc
(bad)
jne
jae
(bad)
xlat
loopne
(bad)
xchg
push
imul
push
mov
cmp
adc
pop
xchg
adc
rcr
and
gs
add
(bad)
mov
pop
fisubr
gs
sub
call
jecxz
shl
sbb
xchg
es
and
xor
and
retf
(bad)
shr
fstp
es
adc
mov
lods
mov
pushf
mov
(bad)
push
out
dec
fisttp
push
stc
cmps
push
dec
mov
cli
cmp
pop
inc
add
outs
mov
frstor
fist
ins
xchg
test
adc
mov
dec
rol
out
jg
dec
sbb
push
mov
jecxz
in
inc
(bad)
jne
not
lds
retf
aas
daa
inc
cmp
repz
dec
jmp
jp
dec
cmps
repz
aam
xor
je
pop
out
sub
retf
aam
pop
xchg
pop
outs
push
inc
jecxz
iret
in
(bad)
adc
mov
imul
jnp
jl
mov
ss
jbe
movs
cmp
add
xchg
outs
and
scas
outs
pop
retf
cli
inc
adc
mov
sahf
out
jne
loopne
(bad)
loope
stos
push
(bad)
jne
xchg
pop
lods
adc
mov
aad
rol
xor
cmp
bound
adc
pop
fldenv
sahf
mov
mov
lds
jmp
call
jmp
ret
pop
pop
les
mov
retf
int
cmps
lods
sbb
sub
ins
dec
xor
cs
retf
jbe
xchg
xchg
fisttp
inc
and
cmps
cld
mov
sub
xchg
sub
jmp
mov
xchg
fdiv
sahf
cli
fwait
scas
jno
or
xchg
nop
popa
sub
lock
cwde
(bad)
push
out
loop
test
pop
hlt
mov
aaa
mov
repz
add
xchg
mov
mov
scas
sub
push
mov
mov
mov
dec
out
fwait
lods
jge
dec
jo
(bad)
outs
out
push
xlat
out
add
popa
or
call
ss
inc
cmovo
inc
dec
cli
pop
lea
mov
or
idiv
or
cld
loop
out
lock
repz
fmul
sbb
stos
icebp
cmp
popa
pop
jmp
lahf
pop
add
cli
outs
mov
xor
js
and
push
in
ins
sub
(bad)
test
mov
xchg
and
hlt
out
lods
sub
lahf
movs
cmc
or
test
jne
cli
or
leave
fwait
cdq
(bad)
xchg
jo
sbb
cmp
mov
cmp
pop
loope
xor
mov
pop
pop
in
jae
cmps
cmp
out
mov
dec
retf
(bad)
gs
std
lock
and
mov
cmp
push
mov
adc
mov
out
in
dec
cmps
jl
jle
xor
fld
jno
scas
cmp
push
into
pop
sbb
xchg
mov
mov
ja
outs
push
pop
jl
cmc
jge
mov
mov
loop
sahf
daa
std
sbb
stos
fwait
mov
fdivr
popa
cs
fld
cmps
ins
aas
clc
mov
pop
mov
in
popa
cmp
fcomp
mov
es
sub
icebp
or
jno
sbb
mov
jo
int3
dec
lea
pop
outs
or
cwde
nop
out
mov
sbb
adc
jle
cmp
xor
aaa
hlt
pop
mov
retf
mov
imul
arpl
push
dec
cli
and
rep
je
sbb
inc
call
aas
inc
icebp
and
add
or
lods
adc
ss
push
cmc
les
dec
jo
hlt
pop
jmp
xor
mov
push
lods
and
inc
dec
dec
ins
aad
sbb
lds
xchg
mov
xor
jge
in
fiadd
dec
xchg
pop
xchg
inc
cli
dec
(bad)
pop
jle
int
dec
jns
inc
pop
pop
mov
popa
scas
push
cwde
mov
xchg
aas
dec
mov
iret
int3
neg
push
pop
cmp
adc
add
mov
dec
mov
ins
test
dec
pusha
cmovle
pop
pop
inc
fnstsw
(bad)
jp
aaa
xor
les
outs
loop
pop
stc
loope
cli
test
mov
dec
(bad)
mov
call
mov
dec
jmp
sti
push
and
dec
jmp
fld
cmp
and
xchg
mov
pop
out
and
mov
and
(bad)
pop
push
in
xor
out
movs
shl
inc
add
xchg
push
cmp
pop
fwait
int
xor
(bad)
jnp
add
inc
mov
call
je
test
xor
mov
push
push
mov
inc
pushf
js
xor
or
fwait
lahf
lods
mov
mov
xor
jge
adc
bound
call
xor
fidiv
mov
and
hlt
cmps
scas
sbb
ins
(bad)
and
push
sti
inc
pusha
shl
adc
pop
in
test
loopne
jbe
loopne
jmp
mov
or
inc
xchg
fisubr
xchg
test
mov
test
push
test
fsub
(bad)
mov
xchg
test
mov
inc
push
cmp
jle
imul
loope
adc
mov
loopne
loop
ins
aam
pop
jno
outs
push
sbb
pop
jno
cld
popa
mov
or
pop
mov
js
clc
imul
lods
push
or
xlat
mov
mov
adc
xor
call
retf
mov
add
mul
jmp
pop
ins
jmp
or
cmp
test
jae
(bad)
call
shr
daa
ret
adc
imul
adc
or
mov
inc
cmc
inc
aad
jns
sbb
cmp
ror
pop
pop
sub
std
and
retf
add
aas
jge
inc
dec
ds
mov
lahf
cmp
and
rcl
add
dec
ja
xchg
lds
push
lea
popa
jmp
mov
movs
lock
js
cmp
mov
push
mov
inc
mov
aaa
out
mov
sbb
into
dec
adc
xor
inc
in
outs
pop
mov
inc
adc
adc
loop
cld
ret
xchg
retf
sahf
fisub
fs
aam
repnz
(bad)
aad
mov
cmp
mov
mov
loop
repz
repz
lods
jp
inc
mov
std
adc
js
adc
stos
xchg
mov
pop
ficomp
lds
test
mov
and
cmp
jp
mov
jmp
xor
into
sti
jl
mov
outs
xchg
xor
fs
scas
iret
lahf
loope
imul
out
adc
mov
sbb
stos
fwait
dec
mov
mov
inc
adc
dec
sub
mov
cmp
cmc
adc
push
cmp
js
mov
cmp
pop
add
push
out
sbb
push
sub
sbb
dec
and
iret
in
adc
movs
inc
inc
add
lods
xlat
or
pop
cmp
jmp
or
cmps
sahf
lea
lock
movs
into
fcomp
jnp
in
aaa
enter
jmp
out
ins
js
xor
pop
ja
adc
jg
mov
xlat
mov
(bad)
push
pop
and
int3
push
push
sbb
jnp
or
repnz
mov
sti
int3
push
imul
dec
cli
pushf
push
in
push
mov
(bad)
stc
push
pop
je
(bad)
sti
add
loopne
jne
inc
xchg
out
cs
cdq
push
add
sub
mov
pop
and
in
push
xor
xlat
push
aad
enter
xor
enter
cmp
loopne
stos
jp
in
pop
pusha
xor
mov
(bad)
and
xchg
add
js
xchg
pusha
repnz
pop
mov
test
ins
xor
lea
retf
xor
mov
(bad)
call
bound
scas
ret
pop
push
arpl
dec
push
xor
inc
jge
(bad)
dec
add
sub
iret
jecxz
cs
dec
or
jno
in
int3
imul
repz
sahf
(bad)
xor
or
and
loope
or
std
xchg
cli
pusha
and
dec
shl
loop
sbb
int3
cs
pop
mov
clc
adc
fcmovne
inc
pop
pop
push
jbe
xchg
adc
test
lock
(bad)
cs
cmp
jnp
fnstcw
cmc
sbb
mov
aas
cmp
lea
lods
push
and
xchg
xchg
mov
jg
repz
(bad)
cld
out
(bad)
stc
mov
xor
fsubr
ud1
dec
inc
dec
inc
scas
inc
pusha
or
add
add
add
(bad)
(bad)
inc
add
add
add
add
add
add
jns
je
ins
cs
jb
ja
outs
addr16
push
gs
imul
xor
xor
inc
jne
je
jb
cmp
jb
ins
sub
push
jne
ins
imul
imul
bound
xor
data16
xor
fs
add
adc
gs
cs
jb
ja
outs
addr16
imul
add
popa
je
pop
add
add
add
add
add
lsl
add
ret
adc
add
mov
inc
or
add
or
add
add
add
add
or
add
add
pusha
outs
rol
add
add
inc
dec
inc
add
mov
or
popa
add
jo
pop
jae
add
ret
add
push
ret
add
outs
test
add
adc
inc
inc
push
pop
inc
in
aad
and
movnti
sar
ret
push
cmps
arpl
je
xor
dec
ja
xor
dec
jae
(bad)
std
ds
(bad)
sub
inc
cmp
jbe
mov
call
sub
repz
mov
sub
call
xchg
dec
imul
scas
or
xchg
shl
push
mov
and
xor
out
ins
outs
fld
scas
rcr
hlt
ins
call
fisubr
cmp
retf
loop
fisttp
sub
sahf
jae
xor
(bad)
adc
lahf
mov
lock
pop
inc
mov
test
shl
test
nop
sbb
iret
aad
sbb
repz
popa
cmps
jmp
popa
aas
sbb
int
xor
or
gs
or
xchg
lds
jo
mov
sbb
aaa
xchg
ficomp
mov
out
pop
dec
gs
(bad)
mov
and
and
cld
push
push
bnd
ret
dec
repnz
scas
or
xchg
jae
mov
into
lahf
(bad)
hlt
test
sti
ror
loop
outs
or
add
jl
dec
test
pop
mov
add
call
xchg
addr16
or
out
lea
push
jnp
jle
or
lock
xchg
lahf
or
inc
imul
inc
jecxz
add
push
aam
test
mov
popf
js
cmps
jle
dec
push
xchg
cld
cmp
cmp
stc
sub
xchg
push
and
rcr
lods
out
pop
xchg
jns
int
sbb
jmp
push
sbb
in
xchg
imul
scas
jno
test
push
or
jg
rcl
sbb
mov
pop
pop
mov
into
shr
push
div
sub
and
cmp
in
mov
sbb
movs
mov
xchg
mov
lods
jbe
adc
ret
push
call
std
rcr
xor
les
aad
mov
movs
mov
pop
mov
out
xchg
inc
mov
cmp
jne
pop
add
jg
pop
mov
mov
xchg
bound
ret
lahf
dec
enter
mov
sub
nop
jp
sub
cmp
(bad)
jmp
inc
or
inc
mov
shl
je
adc
cmp
mov
jle
push
push
es
out
mov
test
cmp
adc
mov
and
test
jnp
xlat
xor
adc
jns
jecxz
repz
add
cmp
cmp
mov
cmc
mov
daa
loop
into
mov
sub
or
jno
call
mov
or
dec
and
sub
or
movs
or
inc
sub
arpl
mov
ret
jge
cmps
jmp
mov
xor
jge
inc
ins
mov
ins
cld
in
inc
retf
pop
mov
push
fsubr
push
jp
adc
adc
push
bound
dec
cmps
mov
sahf
push
xor
dec
fbstp
sar
mov
je
das
(bad)
retf
adc
pop
fcom
dec
push
cwde
mov
hlt
jecxz
dec
inc
into
aad
aas
pop
ds
mov
movs
pop
jmp
inc
jmp
scas
mov
push
jbe
cmp
shr
outs
stos
fcom
lds
fwait
pop
xchg
jecxz
stos
jo
pop
adc
leave
dec
jmp
faddp
daa
sar
in
or
scas
mov
add
cwde
or
out
sbb
xchg
scas
adc
popa
test
lea
push
aaa
je
xchg
(bad)
sbb
jmp
sub
shl
test
xor
fistp
sbb
jg
or
movs
and
addr16
gs
fdivr
jp
stos
(bad)
in
adc
(bad)
jle
cmp
and
test
std
cmp
es
jmp
xor
test
loopne
int
cs
xchg
mul
bound
out
les
xchg
stos
xchg
call
mov
(bad)
pusha
mov
sbb
dec
cs
rcr
repnz
mov
sti
shl
jmp
fistp
mov
or
neg
out
mov
ret
ins
leave
xor
int3
dec
xchg
push
cmp
inc
mov
into
dec
ja
inc
jo
jbe
cmps
in
and
add
add
cdq
hlt
add
push
mov
cmp
mov
gs
test
popa
mov
or
jb
arpl
mov
daa
ret
ins
pop
inc
and
fldenv
lahf
ja
xchg
fs
(bad)
push
dec
aam
fistp
pop
in
push
cdq
push
iret
jo
cmp
mov
ror
int
mov
test
xor
adc
cli
cmp
mov
inc
ds
xchg
cmp
add
cmps
mov
dec
add
adc
or
dec
xchg
movs
or
jmp
mov
iret
adc
jno
out
adc
cmp
outs
push
pop
jge
or
xor
daa
mov
mov
(bad)
mov
push
jmp
call
push
push
push
movs
in
popa
data16
ins
ins
cmps
sbb
scas
mov
or
inc
je
rcr
mov
bound
pop
mov
push
and
dec
mov
loope
adc
into
pop
aad
int3
add
inc
ss
jmp
adc
and
shl
and
adc
push
adc
fucom
daa
arpl
ds
jmp
lods
or
(bad)
retf
addr16
scas
call
mov
outs
push
mov
rcl
add
mov
xor
mov
das
in
ficom
imul
push
mov
(bad)
jmp
jp
jbe
and
jns
sub
inc
jg
js
xor
push
fdivr
mov
adc
imul
jl
iret
lea
mov
imul
push
jl
push
or
sbb
lods
mov
imul
es
jle
dec
sar
leave
xchg
out
xor
xchg
pushf
aaa
out
in
loop
push
cmp
push
cmp
xor
adc
dec
je
mov
sbb
in
clc
dec
stos
inc
inc
mov
outs
push
loopne
out
or
pop
mov
cwde
fwait
lea
movs
push
scas
fwait
in
xchg
add
adc
mov
les
sub
cld
cmp
inc
in
push
dec
stc
cs
jae
mov
in
push
pop
retf
xor
sub
adc
jge
std
int3
scas
xor
das
ins
sbb
outs
sub
jbe
cmc
pop
test
cmc
sbb
cmovl
inc
push
in
xor
pop
dec
push
mov
rcr
(bad)
push
jge
daa
mov
mov
mov
aam
sbb
out
sub
out
cmp
pusha
in
dec
leave
dec
jle
inc
mov
jbe
jp
scas
loope
fstp
mov
push
sub
aam
jl
or
ja
inc
jns
and
jo
in
mov
push
(bad)
and
pop
movs
mov
jb
and
addr16
inc
outs
inc
clc
adc
jecxz
add
test
leave
scas
int
push
daa
jae
mov
dec
pop
repz
and
outs
or
sbb
push
pop
push
jmp
pop
aas
ins
test
pop
jno
push
mov
xor
mov
movs
in
xchg
cs
or
push
sbb
mov
aas
mov
fimul
idiv
loop
xchg
adc
int
aas
pop
repz
sbb
scas
stc
mov
mov
mov
test
mov
int3
xor
ret
add
dec
or
stc
(bad)
jne
jno
dec
rcr
(bad)
arpl
arpl
push
adc
inc
in
sbb
adc
push
xchg
xlat
xchg
movs
aas
call
dec
add
outs
inc
pop
jecxz
mov
or
lea
in
popf
push
inc
jno
pop
sub
outs
jp
out
push
loope
gs
xchg
mov
xor
retf
cmp
dec
or
outs
and
(bad)
fcom
fwait
std
fadd
in
dec
xchg
arpl
sub
push
cmp
sbb
daa
mov
jno
clc
sbb
xrelease
dec
sbb
mov
jb
dec
cwde
sbb
icebp
mov
cmp
imul
xor
sbb
xor
sbb
leave
push
ins
cmp
mov
inc
or
fcomp
xchg
popf
dec
mov
ins
xchg
repnz
mov
push
inc
lock
push
mov
out
pop
sbb
dec
inc
xchg
mov
ins
mov
out
mov
and
div
add
(bad)
call
daa
ret
int
test
jmp
and
add
call
jbe
aaa
std
sub
test
ret
jns
(bad)
jl
pop
cmp
dec
movs
jmp
push
cli
out
mov
pop
mov
cdq
pop
cmp
or
inc
cmp
ror
jl
sbb
sub
mov
mov
cmps
call
sbb
or
mov
add
mov
lods
xchg
loop
or
lods
shl
(bad)
pop
pop
fld
push
jl
mov
pop
(bad)
inc
ficom
jnp
mov
ror
fist
test
bound
push
fistp
push
lock
jl
or
push
enter
pusha
add
add
jle
mov
fistp
xchg
push
ret
aaa
call
xor
push
out
cld
scas
jae
mov
cmp
lds
pop
rcr
pop
inc
gs
rol
addr16
jno
mov
aam
call
lods
lods
int
sub
jns
fld
aam
(bad)
rol
lahf
inc
pop
xchg
cmp
repz
mov
lds
(bad)
lock
dec
rcl
aam
out
mov
aas
push
jmp
in
rcr
mov
mov
lock
cmp
repz
test
std
xor
not
cmp
movs
ins
fwait
push
mov
ins
retf
push
mov
sbb
stc
jecxz
mov
idiv
lock
(bad)
(bad)
ret
(bad)
mov
stos
out
jbe
and
dec
lahf
dec
shr
gs
push
cwde
mov
xchg
cs
mov
push
xor
jg
mov
lds
imul
shl
(bad)
xchg
jmp
ret
dec
sbb
inc
push
ret
lock
fmul
or
in
(bad)
xchg
repz
(bad)
in
cmc
inc
cdq
mov
aad
jae
jge
popf
xchg
cmp
or
ja
xchg
mov
lods
jle
mov
or
fbld
xor
push
in
mov
in
jae
retf
cmp
push
add
movs
pop
retf
repz
mov
inc
test
sbb
lds
push
fsubrp
inc
and
or
sar
jns
jecxz
imul
push
idiv
mov
jle
fisub
call
xchg
in
outs
leave
mov
pop
inc
jno
cmp
and
cmps
mov
mov
mov
gs
jb
cli
cwde
cmp
dec
and
and
add
mov
add
inc
pop
rcr
jmp
icebp
data16
call
or
jg
pop
push
pop
iret
push
and
inc
aas
adc
(bad)
sub
mov
add
pop
push
ss
jmp
stc
ins
in
fimul
movs
rcl
push
jg
lahf
mov
push
adc
jmp
fmul
repnz
xor
mov
imul
dec
fcmovnb
mov
fs
xlat
aaa
cmp
or
inc
(bad)
adc
call
cmp
aas
ds
jnp
mov
inc
mov
mov
not
das
add
rol
test
nop
and
ror
es
or
shr
sbb
shl
lahf
les
mov
push
jnp
pop
xchg
mov
in
pop
sar
mov
jecxz
pusha
in
icebp
dec
outs
xor
ss
inc
inc
pop
cmc
leave
popf
scas
leave
add
xchg
test
mov
jge
hlt
call
sbb
ds
mov
push
ror
sbb
mov
cmps
jp
pop
hlt
stos
leave
xor
pop
pop
aam
mov
mov
jae
lea
cmp
or
cdq
mov
inc
sti
sahf
std
add
lock
cmp
stc
xchg
mov
mov
or
push
dec
pop
es
cmp
sbb
in
mov
shl
or
or
sub
inc
cmc
pop
or
xlat
ret
mov
dec
(bad)
out
shl
jl
adc
add
lods
inc
std
adc
adc
lods
shr
sub
inc
push
lock
(bad)
cmps
mov
popf
(bad)
mov
(bad)
or
adc
aaa
push
push
pop
or
pop
xor
jnp
ss
test
mov
sub
cmp
arpl
(bad)
and
adc
popf
les
out
scas
inc
cwde
mov
xchg
xor
mov
bound
mov
add
xchg
(bad)
mov
mov
bound
cld
ss
push
scas
push
arpl
out
xor
aaa
xor
dec
loop
push
adc
cmp
call
and
pusha
in
inc
xchg
outs
lock
sbb
xchg
(bad)
fidiv
adc
push
jmp
inc
adc
stos
(bad)
cmp
mov
pushf
push
fisttp
lods
rol
jecxz
push
dec
mov
outs
or
cdq
scas
jg
pop
sbb
dec
adc
push
cld
push
adc
mov
adc
retf
jmp
xor
in
sbb
and
fdiv
fs
es
sbb
cwde
test
mov
mov
push
fist
cld
dec
mov
pop
sbb
pop
sub
(bad)
xor
adc
mov
mov
jmp
das
nop
(bad)
scas
xchg
(bad)
enter
mov
xor
cmp
sub
scas
fwait
jl
sub
mov
outs
xchg
in
dec
push
hlt
push
mov
(bad)
ins
inc
mov
mov
mov
std
cwde
loop
mov
adc
out
loope
js
inc
in
push
xchg
jnp
lods
lds
into
adc
test
jg
(bad)
(bad)
sti
jmp
cmps
jno
call
enter
xchg
ret
ror
mov
das
(bad)
cmp
dec
stos
xlat
shl
adc
push
xchg
jmp
in
sub
xchg
out
or
xchg
mov
push
out
xchg
retf
leave
adc
cmovb
mov
cwde
add
jb
(bad)
shl
sub
pop
shl
bound
cwde
push
unpckhps
out
push
in
dec
dec
cmp
mov
clc
imul
ret
neg
fwait
leave
arpl
dec
ds
push
xor
inc
dec
mov
enter
ins
and
aad
or
pop
fist
and
mov
daa
cmp
jp
inc
gs
int
pop
and
or
jp
cmp
fbstp
mov
movs
pop
(bad)
push
hlt
das
xchg
pop
xchg
dec
mov
cs
push
cmp
test
jae
cmp
fisttp
dec
bound
adc
retf
sbb
jb
mov
ins
jno
inc
pop
jl
out
mov
out
add
ja
mov
(bad)
out
jnp
sbb
mov
in
pop
inc
out
ins
fidivr
arpl
add
mov
fidivr
scas
mov
rcl
xchg
std
mov
lea
test
add
mov
in
fcom
popf
mov
mov
inc
sar
sbb
(bad)
sub
in
jo
push
or
or
fcomp
lock
(bad)
inc
pop
inc
sbb
jg
repz
(bad)
cld
out
(bad)
stc
iret
jmp
lock
cli
call
xlat
add
add
dec
inc
dec
inc
scas
inc
pusha
or
add
add
add
(bad)
(bad)
inc
add
add
add
add
add
add
jns
je
ins
cs
jb
ja
outs
addr16
push
gs
imul
xor
xor
inc
jne
je
jb
cmp
jb
ins
sub
push
jne
ins
imul
imul
bound
xor
data16
xor
fs
add
adc
gs
cs
jb
ja
outs
addr16
imul
add
popa
je
pop
add
add
add
add
add
lsl
add
mov
mov
inc
or
add
or
add
add
add
add
or
add
add
pusha
outs
rol
add
add
inc
dec
inc
add
mov
or
popa
add
jo
pop
jae
add
ret
add
push
ret
add
outs
test
add
adc
inc
inc
push
pop
inc
in
rol
loopne
ds
sbb
cmps
mov
push
(bad)
jmp
mov
outs
dec
popf
sbb
lea
dec
dec
mov
aaa
arpl
std
and
sahf
pop
add
push
push
fild
scas
dec
mov
jecxz
dec
addr16
call
push
jle
inc
mov
pushf
push
sti
or
push
(bad)
inc
pop
xor
cs
fstp
out
jbe
ds
mov
lea
gs
lods
inc
mov
sbb
repnz
push
daa
mov
out
idiv
or
pop
pop
lahf
mov
jns
or
sub
sub
dec
jb
xor
(bad)
mov
inc
push
addr16
(bad)
add
call
pop
shl
mov
xlat
imul
loope
test
xchg
push
jnp
mov
cmp
enter
(bad)
xchg
repnz
dec
lock
push
retf
imul
movs
adc
dec
mov
sbb
jl
loopne
scas
and
std
in
push
mov
outs
test
clts
pop
mov
in
sti
add
sti
lods
mov
leave
push
dec
(bad)
pop
sbb
sti
inc
pop
loop
mov
out
xchg
iret
mov
cld
mov
dec
mov
pop
sub
popf
push
and
or
cwde
cmp
xor
lahf
sar
pop
jle
popa
leave
(bad)
je
arpl
adc
loope
retf
(bad)
add
in
inc
retf
pop
scas
cmp
jmp
mov
imul
ins
push
fldenv
aam
cli
call
mov
add
loope
mov
sub
mov
outs
pop
sub
inc
add
fsubr
not
pop
clc
(bad)
push
aas
div
xor
mov
mov
mov
call
and
or
cmp
xor
sti
jp
lahf
fsub
loopne
int
pop
scas
dec
add
inc
mov
std
cdq
ins
push
jecxz
jmp
sub
fdiv
not
fiadd
ja
fmul
sub
sbb
push
adc
or
test
aad
jp
es
test
push
xlat
nop
add
repnz
popa
xchg
xchg
sbb
dec
lock
or
mov
xor
xchg
push
and
mov
pop
xor
push
cmc
dec
into
je
jecxz
(bad)
sti
add
call
out
ins
repnz
sbb
sub
out
enter
xchg
jne
push
inc
(bad)
xchg
gs
sbb
ds
std
xor
dec
add
and
adc
mov
xor
xor
rcr
xor
imul
dec
lods
std
repnz
or
sub
aam
mov
cmps
inc
xchg
or
popf
mov
test
or
into
shl
imul
pop
les
scas
clc
mov
not
call
push
adc
pushf
nop
(bad)
cmc
rcr
pop
into
pop
retf
icebp
jp
addr16
clc
mov
repz
enter
mov
outs
xchg
mov
sbb
adc
dec
aas
pop
dec
xchg
in
mov
xlat
mov
lds
mov
sahf
popa
inc
pop
inc
mov
adc
inc
(bad)
dec
cwde
mov
into
sub
in
bound
sub
and
xor
nop
int
dec
jg
and
lahf
mov
cmp
retf
addr16
mov
in
iret
lds
sbb
(bad)
test
scas
jns
xor
loope
into
pop
aam
xchg
push
push
loop
(bad)
sub
add
pop
push
fdiv
push
push
icebp
or
sub
inc
jg
in
add
in
(bad)
(bad)
bound
pop
inc
mov
ja
xchg
push
mov
pop
mov
xor
popf
(bad)
cmp
out
loope
dec
repnz
and
pop
call
lea
mov
jle
loope
mov
(bad)
mov
aam
loopne
aaa
jge
cmp
inc
ds
(bad)
push
repnz
scas
sar
and
cmp
inc
rcl
sub
jle
mov
mov
sbb
push
sbb
xlat
ja
test
sahf
(bad)
inc
inc
popa
inc
xchg
push
sbb
loope
pushf
jle
adc
addr16
mov
mov
pop
addr16
mov
push
fwait
inc
jmp
movs
popf
lock
jne
std
ret
ja
sbb
dec
bound
jne
retf
or
sbb
and
jmp
push
(bad)
sbb
hlt
dec
aam
pop
cdq
out
jne
mov
ret
cvtps2pd
gs
jge
shl
pop
jno
xchg
out
shl
int3
test
jge
scas
int3
sbb
push
cs
sub
pop
popa
xchg
div
lahf
leave
mov
jl
adc
stos
dec
mov
jmp
mov
jl
mov
jae
outs
das
pop
jge
dec
shr
add
adc
sub
mov
xchg
mov
xor
test
ret
cld
and
cmps
sub
mov
cmps
addr16
xchg
icebp
lods
xchg
cmp
(bad)
jecxz
loop
add
das
sub
push
fild
nop
daa
imul
sbb
mov
ins
jg
retf
mov
dec
lock
mov
push
test
shl
mov
rol
dec
mov
fistp
test
sub
and
adc
cmp
add
rol
loopne
sbb
ins
dec
pop
push
adc
pop
out
ss
inc
jne
push
mov
jmp
loopne
push
in
sub
inc
add
adc
jmp
call
ficomp
cdq
std
fldcw
jae
dec
xchg
or
xor
mov
les
fild
mov
out
fmul
test
mov
pusha
mov
dec
cmp
or
mov
add
mov
or
add
dec
sahf
pop
jns
les
stos
fwait
add
jecxz
lds
loopne
xchg
xor
push
pop
dec
jns
scas
addr16
mov
inc
dec
sti
push
sub
lock
mov
pop
loope
ds
cmc
imul
cmp
fdiv
scas
add
or
mov
push
pop
in
loopne
cmps
cmp
test
lods
hlt
int3
hlt
sub
bound
scas
sbb
imul
or
test
sub
pop
xor
aas
and
lds
retf
pop
jb
mov
xchg
add
loop
fcmovu
ret
or
int3
aas
mov
jb
add
sbb
enter
or
inc
and
pop
xchg
and
dec
jmp
push
dec
cwde
cmp
pop
imul
mov
jl
and
rcr
jnp
sti
in
iret
or
xor
dec
or
out
jle
fmulp
add
sbb
cmp
xchg
(bad)
or
retf
sbb
cli
add
div
fwait
mov
int3
and
mov
outs
push
xor
dec
mov
repz
push
xlat
sti
and
sti
push
or
mov
in
cmp
sub
push
dec
pop
jp
sub
mov
sub
into
cmp
and
inc
fld
clc
fucom
ins
push
ret
adc
mov
int
test
int3
dec
clc
lds
or
push
inc
inc
scas
aam
mov
ret
xchg
xchg
dec
or
in
in
or
pop
es
into
mov
call
push
mov
push
mov
mul
jge
mov
jmp
jnp
sti
xlat
fsubr
adc
and
inc
push
enter
xor
add
sub
scas
sbb
inc
lahf
pusha
cmc
das
rol
sub
pop
aad
push
cmp
inc
ret
repz
xchg
sub
imul
cli
cmps
and
fld
rcl
imul
sbb
sub
mov
sub
adc
int3
ret
rol
fcmovne
jbe
dec
cmp
outs
in
cmps
outs
adc
pop
and
jl
ss
push
pop
xchg
inc
mov
cli
xchg
inc
push
sbb
aad
mov
test
fwait
test
data16
push
(bad)
push
adc
add
jne
std
pop
ds
mov
(bad)
mov
pushf
ret
outs
ss
inc
sbb
inc
sahf
and
int
mov
mov
jae
xlat
neg
dec
sub
test
inc
mov
ficomp
xchg
sbb
movs
test
push
inc
or
gs
loope
adc
xchg
in
xor
xor
inc
outs
mov
sbb
jno
xchg
cmps
and
sbb
cmps
mov
sbb
inc
dec
cmp
lods
aad
inc
cmps
mov
sbb
cmp
pop
inc
push
shr
pop
inc
or
out
lea
jae
rcr
add
and
cmp
and
stos
outs
or
ret
or
mov
loop
mov
dec
jecxz
dec
daa
xor
cdq
(bad)
mov
outs
mov
mov
mov
lea
mov
push
mov
jmp
xor
movs
(bad)
js
mov
leave
stos
bound
popa
push
jmp
inc
test
inc
shl
push
leave
clc
inc
pop
mov
fisttp
in
stc
mov
setae
mov
std
mov
shl
daa
cmp
push
jmp
or
shl
and
sub
setnp
retf
loope
loop
mov
pushf
inc
call
adc
popa
das
dec
pop
sub
or
mov
xchg
lods
push
push
sub
mov
push
scas
lods
jmp
xor
push
pop
add
test
fwait
jg
scas
push
or
iret
outs
leave
ror
leave
xor
pop
push
xchg
mov
sub
das
mov
inc
out
sub
cld
pop
in
push
adc
mov
adc
jnp
add
mov
call
test
xlat
pop
mov
out
xchg
out
mov
scas
leave
inc
sbb
aad
or
clc
push
jo
adc
jne
jae
es
adc
cld
xor
inc
mov
into
add
cmc
outs
pushf
add
jecxz
mov
sbb
ror
stos
test
in
xchg
mov
jge
pop
ds
cmp
cmps
or
movs
loopne
pop
mov
in
fsub
movs
jge
in
sbb
out
(bad)
shl
mov
adc
or
stos
fidivr
iret
dec
push
call
fwait
xor
mov
fnstcw
or
or
in
js
push
retf
jne
dec
enter
loop
out
mov
dec
sbb
ret
jmp
xlat
push
icebp
push
popf
dec
xor
stc
cmp
shl
add
retf
mov
data16
pusha
xchg
xchg
daa
mov
imul
mov
repz
adc
repnz
dec
pop
lods
ds
pop
ret
mov
cli
test
push
scas
rol
push
rol
lds
or
inc
stc
dec
iret
ds
push
ins
push
sub
movs
ret
(bad)
push
lds
in
enter
push
std
pop
push
mov
loope
ds
fs
jp
and
push
outs
sub
outs
adc
js
iret
dec
int3
mov
mov
in
push
push
jns
pushf
stos
fcompp
or
dec
cld
sar
out
mov
sub
sbb
aad
mov
jp
sar
mov
sbb
iret
pop
ffreep
jne
dec
cmps
test
lods
lahf
xor
add
pop
test
sti
mov
(bad)
mov
inc
mov
outs
xchg
in
pop
mov
mov
call
les
cmp
ror
cmp
hlt
mov
retf
outs
gs
xor
sbb
imul
mov
xor
inc
les
fimul
sub
lods
cmova
or
out
xor
fwait
cmp
(bad)
repz
movs
loop
aaa
pop
sbb
cmp
and
leave
xor
aaa
xchg
das
call
icebp
xor
jae
xchg
leave
fbstp
mov
add
or
mov
stos
xchg
add
not
push
or
cmp
and
mov
je
cld
leave
fstp
mov
mov
mov
in
in
imul
js
pop
jb
aam
cmp
push
pusha
mov
scas
dec
scas
dec
jno
fistp
inc
std
xor
inc
jmp
mov
mov
(bad)
std
stos
add
loop
test
out
push
mov
cmp
mov
sbb
pusha
sub
xor
ins
cmp
adc
(bad)
enter
mov
out
mov
xchg
xlat
sub
icebp
mov
jb
mov
lods
sbb
adc
add
mov
add
jae
cli
inc
and
popf
mov
pop
sub
cmp
xchg
ins
inc
aad
addr16
sbb
push
push
pop
or
mov
mov
mov
outs
push
pop
das
add
cmp
nop
xchg
fnstsw
outs
pop
shl
jb
xchg
test
push
adc
sbb
and
push
pushf
inc
jbe
aad
sbb
cli
mov
frstor
(bad)
je
push
mov
pop
pop
repz
xchg
cmps
fcmovbe
ds
imul
jl
test
fidiv
ret
jle
mov
mov
je
mov
(bad)
cmp
dec
in
mov
jno
sbb
cmp
push
imul
leave
test
shr
xor
cmp
das
add
es
mov
fucomip
lds
or
push
or
add
repnz
cmp
mov
push
pop
fistp
les
jae
loope
imul
fst
enter
hlt
movs
jb
inc
jnp
popf
inc
jbe
mov
cmc
sbb
cld
shl
adc
adc
mov
xchg
inc
xor
fcom
js
das
movs
push
mov
out
jbe
jb
inc
push
or
out
mov
int
(bad)
scas
loope
dec
mov
dec
sub
fwait
dec
repz
or
neg
or
addr16
mov
dec
sbb
ja
icebp
sahf
dec
and
pop
push
adc
fidiv
and
push
and
adc
int
inc
sbb
int
mov
daa
inc
mov
dec
adc
lock
rcr
bound
sbb
fadd
ret
mov
sub
loop
push
in
adc
xor
pop
retf
mov
loopne
popf
mov
pop
into
jp
test
js
adc
imul
dec
dec
jne
int
mov
cmc
ds
cmp
aaa
mov
cli
cmps
sahf
ret
cmp
mov
ror
xor
mov
loop
xor
pop
mov
aas
jmp
aas
or
fwait
add
(bad)
jne
aad
dec
inc
mov
out
icebp
push
ins
sbb
xchg
retf
das
movs
bound
mov
pop
xor
jmp
or
jl
cld
sub
call
in
test
xchg
and
push
ds
enter
cwde
inc
cmps
dec
cli
or
aaa
jp
je
xor
test
mov
or
xor
fist
mov
aas
popf
and
mov
in
mov
cmp
repnz
repz
pusha
mov
ins
cmps
xchg
inc
push
rol
mov
sub
xor
adc
outs
test
fxch
adc
ins
minps
fcmovb
dec
rcr
add
test
sbb
out
xor
mov
mov
and
push
jle
mov
lock
jl
cmp
fist
in
inc
and
sbb
inc
mov
mov
into
push
into
adc
rcl
fdivr
push
stos
(bad)
(bad)
add
jnp
test
jae
sti
cmps
mov
popf
and
mov
mov
xor
imul
ja
loope
cwde
in
aam
sbb
icebp
add
mov
arpl
cld
nop
fild
aas
mov
push
call
fild
mov
enter
sub
test
push
jns
out
aas
hlt
sub
in
dec
or
jae
mov
and
jecxz
cmp
hlt
test
dec
(bad)
adc
(bad)
xchg
xchg
imul
sbb
daa
jecxz
leave
imul
and
out
fadd
mov
cld
repz
aas
(bad)
cld
repz
aas
(bad)
cld
pop
add
fdiv
add
add
dec
inc
dec
inc
scas
inc
pusha
or
add
add
add
(bad)
(bad)
inc
add
add
add
add
add
add
jns
je
ins
cs
jb
ja
outs
addr16
push
gs
imul
xor
xor
inc
jne
je
jb
cmp
jb
ins
sub
push
jne
ins
imul
imul
bound
xor
data16
xor
fs
add
adc
gs
cs
jb
ja
outs
addr16
imul
add
popa
je
pop
add
add
add
add
add
lsl
add
rcl
add
mov
inc
or
add
or
add
add
add
add
or
add
add
pusha
outs
rol
add
add
inc
dec
inc
add
mov
or
popa
add
jo
pop
jae
add
ret
add
push
ret
add
outs
test
add
adc
inc
inc
push
pop
inc
in
rol
add
shl
fstp
mov
out
scas
loope
sahf
sbb
cdq
loope
ffree
cmps
cmp
je
fdivr
call
out
sahf
iret
lock
test
jl
add
cmp
add
(bad)
lock
popa
icebp
inc
jae
jmp
inc
test
pop
sahf
clc
into
jae
and
add
std
test
mov
or
retf
outs
pop
out
dec
and
fbld
cli
sbb
inc
add
ret
js
cmp
push
mov
iret
ss
push
dec
sar
xchg
cs
in
cmps
xchg
(bad)
dec
add
in
jmp
push
inc
sub
jle
(bad)
call
xchg
mov
or
mov
jno
cld
xchg
(bad)
retf
mov
cmp
cmp
sub
adc
popa
fidiv
jge
and
jg
retf
push
sub
xchg
out
push
daa
jnp
xchg
inc
push
and
jb
push
push
lea
push
shr
mov
mov
imul
fstp
cmps
add
ss
jge
adc
jg
add
xor
xor
jmp
shl
fs
sahf
adc
jnp
mov
mov
cs
das
fild
dec
add
push
ret
jno
or
push
addr16
aad
clc
fistp
pop
out
ss
or
ins
sbb
nop
ins
push
not
dec
test
lea
xchg
mov
aas
outs
jle
sbb
arpl
mov
rep
loop
cmp
adc
jnp
mov
retf
loopne
in
lods
ret
push
mov
cmp
adc
ror
les
xchg
adc
dec
sub
not
out
repnz
pop
cmp
dec
push
jp
xor
ret
les
push
xchg
sub
xor
fsub
fadd
cs
mov
mov
mov
sahf
test
clc
xor
cmp
mov
mov
iret
mov
mov
stc
cmps
pop
cld
mov
and
xor
imul
or
cmp
sbb
xchg
sbb
adc
shl
jnp
sti
cs
je
xchg
jo
push
lock
add
xchg
dec
hlt
dec
mov
inc
ret
call
push
xchg
xchg
add
ret
mov
push
cli
ret
addr16
rol
push
add
sub
shr
mov
sub
sub
mov
xchg
dec
xchg
cmp
cmp
jge
stos
add
and
jg
xchg
pop
test
adc
pop
jp
leave
push
sub
divps
sti
in
xor
push
daa
dec
loopne
hlt
out
dec
lods
adc
cmp
jb
pop
inc
jnp
mov
xchg
and
adc
or
ficomp
and
push
test
or
mov
nop
mov
movs
or
stos
loopne
imul
div
(bad)
sbb
dec
sti
mov
pop
xor
or
(bad)
into
push
adc
adc
jle
dec
ins
push
test
adc
lock
sbb
mov
sub
call
or
ret
or
push
and
push
jp
pushf
es
pop
sub
aam
(bad)
test
punpcklbw
mov
inc
push
imul
mov
mov
jae
add
call
mov
fstp
jmp
(bad)
arpl
jmp
jb
jne
in
in
push
add
jb
cmp
out
leave
or
mov
aam
or
out
sub
jmp
adc
mov
mov
movs
and
mov
xchg
cmps
jae
int3
xchg
mov
dec
lods
stos
mov
mov
(bad)
sar
sbb
pop
xchg
xchg
pop
ror
(bad)
fbld
xor
inc
add
cld
or
out
iret
mov
push
jae
or
add
add
test
fs
out
sub
ss
pop
pop
dec
xchg
add
lea
popa
push
dec
mov
pop
push
push
push
sub
je
inc
xchg
adc
fisub
jmp
push
arpl
popf
dec
outs
dec
sbb
test
sub
aas
dec
adc
xor
daa
push
adc
fidivr
sti
mov
xor
(bad)
(bad)
or
pop
fidivr
sbb
sti
mov
lock
lahf
cmp
mov
and
(bad)
mov
xor
pop
mov
xchg
jge
mov
enter
dec
mov
push
xor
test
sahf
in
nop
mov
pushf
jge
mov
mov
repz
out
mov
lods
in
mov
adc
jl
or
imul
jae
xor
ret
std
sub
mov
or
sbb
stc
mov
enter
inc
mov
or
dec
pop
popa
inc
mov
aaa
push
add
jbe
test
stc
sub
dec
mov
ja
and
add
test
vzeroall
in
mov
stc
adc
loopne
fst
mov
loop
clc
jae
(bad)
cmps
getsec
push
fstp
cmp
pop
xlat
jns
movs
xor
xor
pop
inc
mov
push
push
cdq
adc
outs
enter
mov
retf
xor
jecxz
mov
sbb
jne
sbb
retf
or
out
sti
loope
cli
sbb
sbb
outs
repnz
ds
into
xchg
mov
mov
sbb
mov
mov
ins
and
rol
lahf
in
or
pop
adc
call
xor
hlt
cmc
jb
scas
cmp
mov
push
imul
xlat
jle
adc
cmp
clc
stos
jecxz
ror
rcr
xchg
hlt
mov
push
imul
das
cmp
ret
mov
imul
sub
imul
les
pandn
mov
fmul
inc
fistp
es
xchg
fcom
fmul
ss
or
sub
test
enter
outs
inc
repnz
dec
xchg
xor
add
ror
inc
pusha
inc
fsub
into
hlt
cmp
xchg
rcl
sub
mov
bound
sbb
mov
aam
(bad)
rol
imul
fs
imul
pop
loopne
inc
sti
add
test
dec
pop
imul
xor
jb
stos
adc
stos
or
(bad)
or
shr
clc
fistp
mov
jne
call
and
jg
int3
rcr
mov
rcr
aaa
cdq
ss
out
lds
jb
inc
xchg
dec
pushf
dec
cmps
xchg
retf
fist
(bad)
xchg
push
mov
jge
jl
enter
(bad)
jecxz
mov
sbb
sbb
xchg
sub
push
push
push
jno
(bad)
push
fldcw
aad
mov
jne
sub
mov
push
sbb
push
addr16
hlt
fisttp
mov
(bad)
or
jno
add
jecxz
rcr
shl
push
fist
xor
sbb
leave
repz
aas
mov
and
pop
(bad)
adc
adc
push
movs
inc
(bad)
jp
jmp
add
dec
push
retf
ror
jg
icebp
and
xor
sbb
test
hlt
xchg
dec
mov
xor
mov
pop
ror
pushf
dec
call
lock
outs
or
adc
jmp
push
les
mov
xchg
push
cld
mov
imul
dec
cld
fistp
inc
and
and
sub
xor
in
or
fsubr
sub
movs
mov
lods
bound
stc
loope
jbe
bound
mov
gs
ins
jns
je
int3
cmp
loop
repnz
mov
bnd
adc
jmp
mov
mov
ins
add
cmps
xchg
jno
addr16
sub
mov
retf
cmp
popa
pop
mov
shl
(bad)
jae
cdq
popa
cwde
loope
out
pop
loop
mov
mov
(bad)
adc
push
adc
cmps
xchg
data16
jo
mov
adc
cmps
(bad)
sbb
stos
jmp
js
cmp
adc
cmps
imul
imul
cmp
das
lea
lds
rol
jo
xchg
inc
retf
dec
dec
cdq
push
ins
and
rol
lock
mov
push
add
(bad)
sub
mov
jnp
je
int
mov
cmps
and
sbb
push
xor
or
fsubrp
adc
xchg
out
push
scas
add
shl
push
fisubr
jecxz
adc
inc
ret
jb
cdq
dec
xchg
mov
pop
cmp
xor
or
adc
sub
stc
outs
rcl
add
loope
or
in
cmps
(bad)
push
fs
arpl
cld
dec
and
lea
jno
add
mov
inc
mov
stc
xor
test
in
jne
or
out
xor
sbb
dec
(bad)
cmp
loopne
and
xor
stos
jle
rcl
xchg
bnd
jno
es
jb
mov
xlat
jmp
ds
mov
jl
or
es
icebp
inc
loopne
je
xor
jl
jle
gs
jae
mov
mov
and
mov
scas
jle
loopne
mov
or
add
movs
(bad)
xchg
neg
jg
icebp
js
sbb
adc
push
sub
jmp
push
jle
push
jnp
sbb
jmp
lods
pusha
cmps
inc
xchg
scas
xlat
ret
movs
jno
jns
xchg
sbb
addr16
in
sub
mov
mov
mov
push
lahf
sub
es
mov
mov
pop
push
push
and
frstor
jl
xor
xchg
mov
icebp
test
jle
stc
xor
pop
mov
enter
mov
push
fisttp
shl
pop
daa
cld
dec
dec
call
cmp
movs
pop
ja
inc
icebp
das
xlat
test
xlat
neg
pop
sub
jp
xchg
push
cmc
push
mov
out
repz
or
cmp
(bad)
fisub
not
lea
pop
sbb
aam
mov
(bad)
jp
call
ds
xor
shr
bound
xchg
xchg
mov
pop
adc
aad
push
aaa
cld
sub
dec
adc
das
sbb
dec
into
lds
sti
mov
hlt
push
cli
addr16
mov
pop
clc
aaa
add
clc
(bad)
into
cmp
out
ins
out
xchg
(bad)
adc
add
cmp
or
xor
pushf
je
stos
out
push
test
jmp
ret
pusha
test
or
or
adc
sahf
test
ret
and
in
fisub
scas
adc
jbe
cwde
cwde
fadd
ffreep
jl
jnp
loopne
cli
push
sahf
arpl
(bad)
push
jo
xor
push
dec
push
cmp
cmp
mov
and
call
jp
mov
lahf
push
dec
xor
jo
enter
aaa
stos
adc
or
icebp
test
push
jmp
mov
dec
mov
es
(bad)
xchg
imul
pop
ret
lahf
cld
repnz
sub
cmp
pop
sub
es
adc
sub
mov
je
stos
lahf
dec
loop
push
or
ret
popf
mov
fcom
adc
sbb
mov
fidiv
retf
popa
or
pop
lea
xor
div
adc
fisub
aam
pop
pop
popa
jnp
fld
aad
pop
push
jae
jnp
stos
xor
shl
out
and
cdq
jo
(bad)
push
je
lds
test
dec
adc
out
lods
sub
test
in
div
imul
mov
xchg
neg
mov
mov
push
xlat
jno
dec
les
stc
push
jb
push
arpl
ror
loope
adc
pop
jle
xchg
mov
inc
and
test
add
add
inc
mov
and
xchg
sub
and
ret
ret
stos
rcr
cmp
fs
mov
or
pop
push
leave
jnp
push
je
lahf
or
ins
out
xor
pusha
mov
mov
cld
data16
dec
js
retf
in
or
ficomp
dec
sub
jae
hlt
loope
cs
cs
cmp
aas
sbb
nop
aas
mov
data16
fsubrp
les
xor
mov
(bad)
fnstcw
jp
push
les
mov
js
bound
add
call
rcr
jecxz
jmp
loope
(bad)
mov
jnp
mov
push
sahf
pusha
retf
test
add
lock
push
rcr
xlat
aam
out
ficomp
outs
add
je
(bad)
mov
ds
xor
inc
push
ror
cmp
sbb
mov
into
jo
data16
pop
jmp
and
enter
int
out
stc
jno
pop
push
out
xlat
sub
int
add
retf
test
repnz
sub
retf
cdq
push
pop
push
shl
outs
xor
ret
test
lock
(bad)
add
pushf
push
push
push
and
call
in
xchg
mov
push
out
lods
cdq
dec
pusha
xchg
ins
(bad)
push
push
call
mov
out
outs
xchg
retf
rcl
inc
nop
push
scas
int
arpl
mov
ds
push
ds
dec
div
sbb
je
lds
rcl
mov
pop
ror
lods
imul
scas
inc
pop
xchg
imul
cmc
ret
movs
adc
loopne
mov
mov
push
inc
mov
(bad)
mov
push
mov
imul
in
sub
(bad)
js
mov
ret
cld
xor
lock
add
jnp
xor
shl
and
ret
inc
pop
jns
pop
pop
dec
cmc
inc
push
mov
ds
stos
jmp
andps
gs
cld
sbb
mov
imul
repnz
mov
and
fistp
ss
pop
adc
in
cli
mov
cmp
or
jbe
sub
mov
out
ins
scas
test
lods
push
in
aam
jo
fistp
arpl
adc
jb
mov
psrad
iret
jo
lahf
add
and
test
fimul
add
test
jg
ret
in
lods
mov
pop
jmp
ss
inc
int3
fsubr
shr
les
dec
xchg
pusha
cmp
xchg
popa
and
shl
in
mov
ficomp
jnp
jnp
add
dec
fisttp
push
aam
xor
std
mov
leave
imul
imul
scas
pop
inc
nop
js
mov
inc
ins
pop
mov
ja
mov
pusha
xor
cdq
cli
daa
outs
add
stos
movs
or
pusha
dec
mov
mov
push
vmovq
sub
imul
adc
pushf
nop
xor
xor
mov
gs
addr16
dec
lea
in
fmul
jne
test
mov
and
mov
sub
xchg
movs
mov
mov
lahf
push
test
jbe
(bad)
test
mov
add
pop
and
adc
nop
into
arpl
scas
pop
ret
push
mov
cld
or
adc
cmps
jae
bound
or
test
sbb
jnp
and
out
pop
mov
pop
fcomp
mov
aad
stos
push
mov
or
rcr
cmp
icebp
(bad)
aam
jnp
iret
inc
xchg
xchg
push
cdq
adc
jb
and
fwait
shr
inc
fwait
push
adc
ins
sub
pushf
adc
cmps
cmc
fadd
pusha
leave
les
xor
jne
dec
stos
add
out
movs
jl
pop
mov
push
cdq
loop
dec
sbb
outs
mov
daa
mov
loope
push
lds
shl
out
ins
mov
call
call
bound
cli
in
cld
mov
add
mov
mov
cmp
and
enter
imul
mov
popa
jo
icebp
sbb
pop
dec
lods
scas
test
sti
jne
jns
mov
call
enter
push
dec
fnstcw
mov
mov
(bad)
cld
repz
aas
(bad)
cld
repz
add
jg
add
xor
add
add
dec
inc
scas
inc
pusha
or
add
add
add
(bad)
(bad)
inc
add
add
add
add
add
add
jns
je
ins
cs
jb
ja
outs
addr16
push
gs
imul
xor
xor
inc
jne
je
jb
cmp
jb
ins
sub
push
jne
ins
imul
imul
bound
xor
data16
xor
fs
add
adc
gs
cs
jb
ja
outs
addr16
imul
add
popa
je
pop
add
add
add
add
add
lsl
add
mov
mov
inc
or
add
or
add
add
add
add
or
add
add
pusha
outs
rol
add
add
inc
dec
inc
add
mov
or
popa
add
jo
pop
jae
add
ret
add
push
ret
add
outs
test
add
adc
inc
inc
push
pop
inc
in
rol
loopne
scas
jmp
je
push
xor
ret
jmp
dec
cld
(bad)
arpl
jmp
fnstenv
fnsave
icebp
jle
ja
add
les
scas
push
add
neg
lahf
sub
cwde
cli
out
icebp
push
mov
leave
popa
or
mov
sbb
pop
dec
into
(bad)
push
xchg
mov
push
bound
pop
jmp
pop
add
retf
cmp
mov
mov
retf
jno
inc
adc
inc
(bad)
jne
mov
cmp
xlat
sub
dec
cmp
xor
mov
iret
stos
mov
add
or
push
add
jmp
test
mov
xchg
dec
out
pop
cmp
rol
out
cmps
jmp
mov
lahf
jae
das
jno
int3
shr
loope
fmul
xchg
sbb
mov
push
add
cmp
pop
xchg
lods
pop
test
popf
shl
xor
jle
mov
(bad)
sub
leave
in
out
sub
fnsave
sar
mov
clc
dec
fsubr
cmp
lods
xor
add
fdiv
and
and
mov
stos
dec
div
in
lahf
dec
lahf
cli
lahf
push
aas
test
mov
cmps
js
iret
ins
ror
sbb
add
xchg
push
push
push
ss
enter
xlat
mov
mov
sub
pop
in
mov
push
pusha
xor
mov
inc
sub
dec
lea
add
jg
cwde
xor
xor
inc
xlat
mov
inc
or
xor
retf
movs
xchg
rcr
into
lds
xchg
iret
aam
mov
into
push
jl
jmp
arpl
cmc
rcr
or
es
sub
xor
jg
bnd
cmp
jl
(bad)
fs
cmps
adc
dec
loop
and
inc
cmp
mov
test
xor
xchg
mov
jae
pop
push
jecxz
dec
sbb
mov
push
cmps
nop
xor
out
lea
push
int
enter
inc
outs
jmp
repnz
cs
in
adc
dec
lea
push
pop
jo
movs
and
pop
fdivr
jbe
xchg
cmps
add
adc
inc
outs
leave
cmp
push
jmp
sub
add
or
(bad)
sti
cli
cmps
scas
in
sbb
and
pop
into
popf
out
adc
mov
ss
(bad)
adc
mov
test
addr16
sub
jge
ins
pop
stos
jns
mov
jb
call
popa
adc
jmp
ret
fimul
lahf
mov
sub
sbb
pop
(bad)
xor
scas
test
mov
test
jae
push
and
lds
les
bound
fiadd
mov
xchg
or
cmp
add
outs
ss
mov
(bad)
addr16
sbb
adc
cmps
pop
retf
jl
inc
cwde
aas
pop
xor
cli
xlat
jmp
xchg
dec
retf
jl
mov
mov
stos
mov
cmp
nop
sub
cwde
iret
cli
mov
es
scas
mov
jnp
rol
push
inc
out
les
enter
das
sahf
mov
dec
jb
mov
and
js
push
test
xor
and
sbb
in
jl
xor
es
es
inc
(bad)
cmps
push
jae
jbe
or
dec
jmp
js
xor
jo
mov
jbe
lds
cmps
outs
xchg
and
xor
cdq
cmp
addr16
neg
fsub
xchg
pop
and
scas
retf
jge
push
jns
fadd
fbstp
ds
cmp
or
adc
lds
xchg
xchg
jp
popf
push
lods
xchg
fwait
inc
pop
cdq
xchg
dec
push
push
adc
das
pop
add
add
fild
ins
sub
ins
mov
test
adc
out
mov
cli
cwde
cmps
dec
cs
neg
rcr
add
iret
fcomp
mov
aaa
jle
dec
jae
lods
jmp
inc
or
jle
test
mov
jnp
data16
pop
mov
cmp
(bad)
jp
outs
cmp
pushf
mov
fwait
push
movs
movs
shl
push
imul
mov
push
outs
xor
inc
(bad)
les
adc
mov
ins
fucomp
cmp
mov
imul
jl
out
xchg
das
or
mov
jecxz
cmp
stos
lods
outs
mov
and
mov
or
mov
leave
mov
xchg
pop
xchg
repz
adc
cwde
mov
sbb
(bad)
shl
int3
dec
mov
pop
aam
addr16
inc
pcmpgtb
test
sbb
adc
and
jmp
pop
out
push
xor
pop
cli
ror
push
and
shl
fadd
mov
mov
xchg
dec
mov
dec
add
xor
xlat
divps
ins
cmp
add
jg
mov
or
in
rcr
fxch
or
loope
mov
push
pop
mov
and
es
out
lds
out
mov
dec
inc
jmp
xor
hlt
xchg
or
mov
mov
icebp
jl
dec
out
xchg
inc
lock
mov
add
inc
fcmove
or
sahf
cmps
push
mov
or
test
call
jbe
shufps
dec
stos
inc
scas
scas
xor
adc
ds
nop
stc
xchg
in
out
xor
movs
test
retf
push
fnstenv
push
xchg
ja
sahf
cmp
xchg
cdq
mov
outs
and
mov
jp
inc
movs
pop
pop
sub
ja
push
sti
retf
cs
sub
add
in
mov
sbb
movs
mov
cli
loop
enter
push
push
sub
mov
mov
test
sar
and
adc
sub
and
push
dec
mov
int
(bad)
adc
shl
cli
inc
and
mov
jne
cli
pop
sbb
dec
push
push
ficomp
lods
sbb
pop
jnp
stc
fldcw
mov
pop
retf
lahf
inc
mov
call
push
cmps
ret
xchg
mov
xor
inc
mov
jmp
scas
pop
pop
jg
out
mov
test
mov
and
shl
fst
fld
mov
fisttp
popf
or
xchg
or
ret
sub
pop
jp
and
mov
repz
lds
sub
and
in
push
sub
cmp
or
(bad)
or
test
test
jmp
addr16
or
inc
xor
mov
jl
aam
or
mov
test
daa
inc
xchg
push
jmp
mov
pop
add
out
mov
(bad)
or
mov
imul
mov
jp
or
es
arpl
jae
jns
stos
or
cmp
cmp
dec
add
adc
loop
xor
scas
adc
mov
mov
in
sbb
xor
or
test
sub
lods
popa
stos
fild
sbb
dec
mov
cmp
and
sbb
das
xor
xchg
or
int
mov
xor
out
push
xchg
pop
retf
call
pop
iret
div
lahf
cwde
sahf
sub
cmp
aas
aad
lods
mov
push
outs
stc
(bad)
lahf
sbb
push
and
or
bound
fwait
push
mov
lods
or
mov
inc
mov
jbe
xchg
(bad)
mov
dec
movs
scas
xor
ror
xchg
retf
(bad)
mov
fnstsw
sbb
xchg
cld
sub
scas
push
scas
ficom
pop
and
outs
retf
mov
mov
call
jb
ror
call
or
out
std
inc
into
(bad)
icebp
push
dec
in
inc
sub
pop
jno
call
aam
mov
xchg
fiadd
cmp
mov
fisttp
popf
jecxz
lock
jmp
outs
lods
call
iret
pop
out
xor
pop
xchg
sbb
nop
pop
sbb
mov
push
pusha
loop
imul
das
add
clc
dec
push
add
xchg
adc
xor
inc
stos
mov
sti
mov
iret
cmp
std
jmp
bnd
dec
es
mov
cli
lock
pop
adc
(bad)
repnz
mov
test
mov
push
mov
rcl
xchg
daa
retf
scas
out
mov
jae
dec
in
mov
ins
es
mov
dec
mov
or
pop
mov
mov
mov
mov
xchg
xor
pop
mov
inc
fistp
(bad)
adc
sbb
aad
test
fist
movs
scas
or
arpl
in
lahf
dec
daa
arpl
shl
sbb
sbb
add
(bad)
cmc
into
icebp
(bad)
mov
fldcw
xchg
push
out
and
mov
repnz
ficomp
mov
sbb
or
lods
retf
mov
xchg
inc
(bad)
and
into
push
and
in
lock
mov
mov
mov
dec
call
lods
xor
inc
(bad)
dec
ror
stc
and
xor
or
retf
jns
xchg
pop
cmp
fs
xor
mov
pushf
cs
test
je
mov
into
stos
mov
add
pop
(bad)
cmp
mov
imul
in
fld
(bad)
shl
cmp
xchg
mov
or
cli
xlat
pop
sub
add
inc
stos
das
jg
sub
mov
inc
lea
mov
inc
adc
or
ret
dec
push
push
popf
cli
movs
add
sub
dec
sbb
xchg
stc
ins
mov
scas
jnp
cmp
mov
popa
ds
jecxz
pop
sub
out
mov
std
mov
mov
imul
ins
(bad)
mul
adc
add
out
pop
enter
xchg
mov
test
inc
and
fbld
pop
push
mov
xor
retf
cmp
into
dec
add
jno
dec
jp
cmp
and
mov
and
in
jns
sub
shr
popa
mov
pop
sbb
arpl
popf
stc
outs
aaa
gs
add
lock
das
mov
ss
loope
push
and
sub
out
jl
push
std
cmps
push
sbb
adc
pop
fs
(bad)
xor
add
mov
push
or
pusha
jnp
sub
inc
ins
fmul
mov
sub
das
sbb
cwde
sub
data16
sub
pop
dec
loope
xor
dec
ror
aad
imul
into
add
xchg
cli
stc
add
fnstcw
xor
pushf
movs
fbstp
test
not
add
mov
jle
pop
clc
and
in
out
aaa
pop
mov
push
mov
aaa
inc
jg
popa
mov
xor
mov
sbb
jno
mov
mov
dec
lahf
mov
dec
fwait
dec
sub
shl
gs
fadd
mov
fstp
pop
and
mov
enter
ss
(bad)
std
fild
adc
inc
(bad)
jns
inc
ja
fldcw
cld
sbb
in
mov
xchg
lods
in
pop
ss
cmp
xchg
imul
stc
in
int
mov
cmc
out
pop
cmp
push
sub
mov
jle
jmp
aaa
pop
push
das
sub
jl
inc
fwait
push
in
cli
jmp
aas
call
or
mov
jae
sbb
cmp
js
mov
shl
retf
repnz
mov
cli
inc
mov
jle
and
ret
sti
dec
ins
in
add
mov
aad
cld
inc
jo
push
push
push
rep
(bad)
loop
fwait
mov
mov
test
dec
mov
mov
(bad)
add
jb
push
cmps
xor
xchg
inc
mov
retf
add
jecxz
jg
aas
pop
ja
pusha
sbb
push
pop
or
sahf
dec
outs
adc
jae
add
shr
mov
mov
jp
inc
mov
test
push
jbe
or
dec
pop
movs
test
adc
popa
push
inc
shr
lds
jg
ffreep
(bad)
je
cmp
jmp
pop
das
inc
sbb
sub
div
retf
in
out
das
inc
fmul
adc
pushf
test
sub
stos
xor
or
xchg
adc
pusha
pop
movhps
push
sbb
mov
in
ds
jb
add
pop
xor
js
sbb
mov
(bad)
shl
jb
ins
cmc
iret
mov
aaa
fnsave
mov
jnp
add
jmp
pop
fcom
xor
adc
cwde
pop
dec
das
or
cld
push
pop
mov
fnstenv
xchg
cvtps2pd
dec
aaa
adc
sub
aas
shl
sbb
mov
outs
test
nop
mov
sbb
shr
xor
call
ins
push
loop
xchg
push
js
movs
jnp
mov
push
pusha
out
(bad)
adc
or
adc
jae
pop
fiadd
es
dec
mov
or
hlt
sbb
in
and
dec
addr16
stos
jmp
fs
lea
jo
xchg
cmps
dec
movs
mov
cs
rcl
jo
mov
test
aaa
adc
xchg
aam
int
cwde
das
pop
mov
nop
clc
push
cmc
int
ds
int3
hlt
repz
jns
hlt
pop
xchg
adc
fistp
cmp
jb
inc
adc
inc
das
aam
call
sub
push
call
loope
clc
mov
mov
jp
sbb
out
gs
(bad)
rol
test
loopne
or
sbb
xchg
fldcw
test
out
imul
cmps
and
das
add
pop
mov
fidiv
xor
sar
inc
push
shl
dec
lahf
popa
js
adc
fdivr
ss
call
mov
jg
dec
test
fadd
nop
and
mov
sbb
mov
sti
fstp
inc
xlat
and
and
xchg
dec
mov
fisttp
lahf
sub
xor
clc
xchg
jnp
int
sbb
les
bound
sub
xchg
pop
pop
sti
adc
lods
iret
pop
dec
lock
fisttp
mov
imul
mov
jl
jecxz
mov
aas
adc
xchg
jb
pop
outs
adc
test
adc
fwait
adc
mov
fwait
imul
ja
(bad)
mov
lahf
pop
sub
jae
jmp
dec
cmp
paddd
pop
cmp
adc
mov
test
inc
pop
adc
std
bound
arpl
pop
into
sub
enter
(bad)
stc
jbe
paddd
ficomp
mov
test
mov
cmc
pop
cmp
in
aas
cdq
fdiv
mov
call
(bad)
clc
and
test
gs
inc
cmp
loope
aad
sub
ror
loopne
ror
daa
mov
icebp
inc
in
cli
adc
and
cmp
inc
jmp
loopne
mov
push
int
sti
test
and
mov
xchg
outs
cmps
jbe
cmc
pop
push
xchg
mov
pop
fsubr
xchg
xor
xchg
jnp
call
sti
cmp
push
xchg
push
sti
inc
(bad)
shl
ret
or
jne
jo
in
cld
ret
outs
lahf
ja
pop
ret
icebp
dec
stos
push
mov
imul
repz
aas
cmps
dec
jae
adc
and
mov
fmul
cwde
(bad)
dec
loopne
(bad)
ficom
ds
cwde
xchg
jmp
xor
retf
ror
mov
shr
out
cmp
fyl2xp1
fiadd
fild
adc
dec
(bad)
aad
and
jo
xor
and
retf
xor
sar
std
sbb
cmps
popf
retf
in
mov
push
mov
test
pushf
add
inc
(bad)
cld
jge
loopne
cmps
xor
jle
jae
cli
jnp
aad
cmp
repz
mov
push
sbb
retf
pop
int
test
iret
aas
(bad)
cld
repz
push
inc
inc
inc
call
add
dec
inc
dec
inc
scas
inc
pusha
or
add
add
add
(bad)
(bad)
inc
add
add
add
add
add
add
jns
je
ins
cs
jb
ja
outs
addr16
push
gs
imul
xor
xor
inc
jne
je
jb
cmp
jb
ins
sub
push
jne
ins
imul
imul
bound
xor
data16
xor
fs
add
adc
gs
cs
jb
ja
outs
addr16
imul
add
popa
je
pop
add
add
add
add
add
lsl
add
les
add
add
or
or
add
or
add
add
add
add
or
add
add
pusha
outs
rol
add
add
inc
dec
inc
add
mov
or
popa
add
jo
pop
jae
add
ret
add
push
ret
add
outs
test
add
adc
inc
inc
push
pop
inc
in
(bad)
add
add
scas
call
(bad)
jo
jle
arpl
in
je
les
xchg
arpl
cmp
pop
adc
xor
xor
loop
mov
icebp
add
dec
inc
mov
mov
aad
jnp
div
sub
mov
and
mov
pop
or
je
cwde
out
icebp
cmp
test
jo
sti
push
adc
mov
fwait
inc
mov
pop
sbb
mov
sbb
cli
jns
js
fmul
and
cwde
or
ret
push
sub
je
arpl
movs
jmp
fild
xchg
mov
push
ins
push
mov
pop
test
or
daa
fmul
jae
lahf
xor
adc
pop
inc
int3
sub
mov
xchg
inc
or
imul
loope
inc
stos
push
lahf
inc
mov
mov
std
dec
pop
repz
xchg
mov
push
std
fs
mov
lods
popf
(bad)
leave
mov
sub
lahf
push
fldln2
sbb
es
mov
hlt
push
dec
stc
adc
rol
mov
dec
sub
cli
stos
push
push
push
and
je
je
push
xchg
js
xchg
mov
jecxz
cmp
icebp
(bad)
je
test
jmp
retf
dec
dec
(bad)
mov
std
cmps
clc
call
stc
fs
ret
inc
xor
out
mov
movs
ret
push
(bad)
(bad)
cld
shl
dec
outs
cmp
or
and
mov
mov
sahf
pusha
cmp
mov
jno
jmp
jae
dec
ror
xchg
cmp
(bad)
in
dec
or
data16
xor
mov
mov
(bad)
fild
sub
pop
ror
sti
xor
push
fidivr
outs
xchg
mov
imul
aaa
dec
xor
stc
and
dec
hlt
retf
imul
xor
out
xchg
xchg
inc
ins
fwait
inc
xchg
inc
mov
xor
frstpm(287
pop
(bad)
pop
ror
aad
imul
push
stos
ds
in
sub
repz
or
inc
test
mov
cwde
adc
pushf
xchg
adc
js
std
pop
fs
fs
or
mov
sub
mov
dec
retf
dec
retf
push
jno
out
sub
fild
adc
ret
neg
mov
dec
(bad)
ss
sbb
int3
or
mov
sub
imul
xchg
idiv
fisubr
push
jo
xchg
adc
add
in
xchg
mov
jb
mov
and
nop
push
pop
(bad)
cld
lock
and
out
stc
cmp
mov
sub
icebp
bound
add
bound
jno
jp
in
hlt
fs
je
ret
daa
cmc
sahf
dec
cmp
sbb
lahf
les
out
push
dec
jg
jmp
xchg
jns
jae
mov
add
push
sar
push
cmp
add
aad
and
dec
adc
mov
sub
mov
inc
cli
xchg
dec
add
mov
cmc
mov
popf
fdivrp
or
dec
fisubr
jmp
(bad)
mov
arpl
pop
jae
xor
xor
mov
test
cmps
pop
pop
push
(bad)
jne
xlat
and
lahf
gs
retf
adc
jnp
ror
fst
int
lods
cli
icebp
test
int3
mov
jecxz
shl
or
retf
inc
aas
xchg
or
push
mov
jmp
cmc
lock
inc
lds
rol
hlt
aam
xor
(bad)
cmps
jne
ins
nop
shl
mov
pop
dec
push
add
ds
retf
dec
jne
ins
test
xor
lock
outs
sub
pop
fcomp
rcl
xchg
mov
jne
dec
pop
mov
test
jle
add
and
jno
jecxz
mov
dec
and
in
mov
sbb
dec
cmps
cmc
sub
pusha
(bad)
or
xor
pusha
push
mov
cmps
mov
inc
adc
aaa
pop
push
xor
and
xor
pop
push
push
aas
dec
jge
xchg
pop
cld
in
imul
cmp
jge
cmp
cmp
jbe
sbb
push
and
loop
in
fist
push
sbb
dec
sub
mul
stos
std
ret
and
int3
cmp
jle
loope
mov
scas
popa
lods
cli
dec
push
pop
mov
into
sti
pop
xchg
xor
dec
int3
lods
add
in
call
pushf
ins
mov
imul
sbb
scas
aaa
fcmovnu
cmp
add
pop
or
push
cld
add
jae
js
or
pop
push
popf
movs
jg
inc
pop
stos
aad
lea
fdivr
sub
in
aas
fild
pushf
xchg
pop
lea
adc
xlat
icebp
xchg
pop
mov
test
fsubr
mov
mov
push
mov
fstp
shl
lahf
jecxz
jnp
cmp
ret
mov
idiv
mov
daa
stc
cs
mov
inc
movs
sbb
setae
ffree
sbb
jnp
mov
shl
push
fild
xchg
loopne
xlat
rol
ins
rcl
push
pop
clc
arpl
adc
sub
xor
inc
push
les
pop
arpl
pop
mov
mov
cli
jbe
push
pop
std
pusha
jbe
jbe
xchg
push
lock
cmp
mul
lock
sahf
lods
xchg
pop
inc
test
xchg
sub
and
movs
jne
hlt
in
shufps
stos
out
stos
in
jge
movs
add
mov
iret
ja
xchg
shl
add
arpl
sbb
pop
(bad)
(bad)
popa
retf
mov
cs
add
test
sti
cmp
mov
arpl
test
xchg
retw
std
pop
pushf
and
rcr
and
mov
push
and
push
and
imul
ror
dec
sahf
fisttp
mov
(bad)
xchg
cmp
sub
aad
mov
out
mov
adc
aad
cmp
retf
fistp
or
ret
cmp
js
pop
push
jb
dec
(bad)
lods
je
adc
inc
mov
mov
in
call
mov
out
mov
aaa
out
mov
pop
fstp
das
int3
rcl
hlt
call
push
mov
into
out
je
cmps
and
mov
cli
inc
or
fsubr
dec
adc
in
fnstcw
mov
or
and
fwait
cmp
dec
iret
mov
ss
dec
fcomi
nop
dec
aad
scas
push
out
lods
loope
ret
aaa
pop
popa
movs
xchg
(bad)
jns
repnz
add
push
lock
dec
repnz
fs
test
mov
jmp
fsubr
dec
sti
jmp
in
jns
mov
jle
je
outs
popa
pop
and
stos
inc
cs
pop
mov
aas
into
(bad)
std
jbe
outs
mov
popf
mov
mov
inc
pop
mov
mov
not
dec
js
scas
jb
retf
ror
xchg
sbb
outs
pop
adc
movs
jae
dec
ins
out
mov
pop
int3
rcl
xcrypt-cbc
cmps
xchg
and
or
mov
jge
xchg
mov
sbb
xchg
xchg
stc
push
mov
mov
repz
sub
mov
test
out
enter
push
addr16
stos
fsub
push
pushf
das
dec
mov
adc
ss
mov
push
push
jmp
icebp
pop
movs
mov
in
or
xor
xor
(bad)
int
pop
ja
mov
cdq
xor
(bad)
ds
mov
jl
daa
mov
pop
add
mov
cmp
nop
push
and
and
(bad)
out
mov
(bad)
xlat
inc
fadd
adc
aad
dec
add
hlt
push
sbb
push
popa
ret
por
mov
or
cmc
inc
mov
pop
sti
stc
retf
ficom
out
push
push
int3
mov
sub
dec
push
xchg
jp
aaa
cmp
lods
mov
lods
test
push
push
adc
cmp
xchg
out
jecxz
leave
cwde
pop
push
(bad)
mov
or
sub
and
test
xor
aas
jle
cmps
xchg
shl
mov
(bad)
scas
stos
dec
cmps
dec
jb
cmps
push
lock
cmp
xor
int
adc
push
jb
mov
sbb
mov
dec
and
pop
es
mov
dec
cli
mov
shl
xor
xor
jge
cmp
adc
xor
out
dec
adc
call
adc
cmp
in
lds
js
dec
pop
adc
popa
stos
aam
mov
fdiv
dec
xchg
loope
int3
ja
and
xchg
sbb
xor
jno
jmp
pop
xchg
(bad)
cmp
call
stos
fadd
icebp
fcom
ss
int
sbb
sbb
pop
push
xchg
pop
in
cmp
jecxz
mov
imul
outs
ds
mov
jb
addr16
or
push
fcmove
xchg
das
aad
retf
(bad)
adc
add
ret
(bad)
mov
cmp
xchg
jg
popf
outs
bound
or
dec
hlt
jl
imul
js
mov
add
ds
jp
jecxz
icebp
int3
push
mov
rol
cdq
(bad)
sub
rcl
(bad)
mov
jge
ins
adc
sub
hlt
pop
repz
dec
(bad)
sahf
sub
ret
and
xor
imul
pop
loope
jg
inc
mov
xchg
(bad)
mov
jb
xor
lock
cmps
jb
lea
cmp
pop
push
(bad)
rcr
sbb
movs
jnp
into
jl
jno
sub
mov
nop
sub
fcom
cmp
pop
clc
mov
fisttp
dec
push
stos
rol
fimul
in
int
cld
or
lds
xchg
loope
sub
xchg
stos
(bad)
push
minps
rcl
ss
xor
das
das
mov
dec
jo
push
pushf
jbe
adc
xchg
mov
mov
loope
mov
rol
cmp
stos
jne
or
cmp
loope
cmp
out
aaa
pop
test
(bad)
popa
dec
fstp
mov
cmc
sar
or
outs
shl
(bad)
imul
mov
push
jmp
cmp
push
fsub
jle
cmp
jns
jp
jnp
push
pusha
dec
cmp
adc
lds
jne
scas
sbb
(bad)
call
outs
int
es
mov
mov
std
repnz
sub
pop
outs
loope
add
push
scas
xchg
or
jmp
je
int3
in
mov
fbstp
pop
stos
jno
xlat
cli
mov
int
jmp
jnp
xchg
movs
adc
sub
(bad)
call
addr16
mov
mov
ss
push
pop
inc
mov
push
push
sbb
push
jbe
push
fucomp
adc
xchg
inc
pop
loop
xchg
cmps
push
inc
add
jle
test
mov
sub
add
pop
mov
or
nop
dec
ss
adc
cmp
pusha
retf
jbe
xacquire
cmp
push
out
(bad)
in
add
test
or
or
mov
add
cmp
aaa
ret
xor
call
xchg
mov
push
ret
jbe
push
cdq
mov
aas
xor
sti
icebp
jnp
push
inc
xor
into
and
mov
dec
ins
fld
mov
fistp
mov
mov
jmp
jae
add
push
push
mov
jp
popa
(bad)
adc
xchg
cmc
mov
or
jmp
inc
push
dec
addr16
jb
ds
adc
aam
or
adc
pop
out
push
jns
fild
push
aam
mov
or
jbe
retf
dec
sti
mov
push
addr16
push
pushf
cdq
fidiv
ss
mov
dec
ins
xchg
ds
cmp
test
cmp
clc
jnp
stos
cs
jns
jmp
jge
out
xchg
jp
pop
imul
movs
add
jae
mov
icebp
in
add
daa
sub
(bad)
out
sahf
cmp
adc
ja
das
(bad)
cmovo
xchg
lahf
arpl
cmp
icebp
(bad)
mov
cs
xchg
jno
(bad)
pusha
outs
xchg
dec
aam
out
lock
and
inc
aad
mov
push
mov
movs
fs
sbb
sub
jmp
mov
mov
sub
mov
arpl
xchg
sbb
rcr
call
xchg
sbb
outs
push
fisttp
sbb
rcr
pop
cmps
test
sbb
xchg
ds
mov
xchg
push
pushf
iret
xchg
imul
iret
jge
pop
in
das
push
mul
add
call
sbb
(bad)
call
inc
push
or
arpl
adc
lock
hlt
pop
imul
cmc
adc
jg
clc
movs
(bad)
fist
in
std
clc
cli
add
pop
das
(bad)
mov
jbe
xchg
pop
add
or
iret
lock
stc
in
es
mov
imul
sub
cdq
std
test
jp
scas
xabort
or
push
mov
fisttp
mov
mov
mov
pop
ret
and
retf
mov
inc
cs
arpl
mov
(bad)
outs
clc
clc
movs
fimul
sbb
adc
(bad)
mov
mov
push
fstp
mov
mov
jns
add
out
fld
pop
sbb
fisub
add
pushf
push
lock
inc
js
popa
xchg
lods
retf
xchg
adc
cmp
mov
mov
aaa
xchg
retf
test
test
out
fidiv
push
fwait
xchg
push
sub
pusha
(bad)
cs
stos
in
scas
ja
sahf
adc
inc
cmp
sahf
adc
pop
lahf
or
nop
call
imul
rcl
enter
es
fdivr
imul
sub
es
loop
mov
imul
fwait
adc
push
push
mov
cmc
std
adc
pop
add
xor
pop
(bad)
cmp
cmp
into
mov
xchg
and
ins
mov
xlat
cs
pop
ror
movs
test
push
cmp
push
ins
lods
cmp
xlat
scas
fs
sub
jmp
inc
icebp
jecxz
xchg
mov
push
sbb
cwde
jp
jnp
ja
adc
mov
inc
fwait
mov
ins
sar
jge
jb
push
test
cmp
mov
adc
xor
repnz
scas
imul
cdq
iret
cwde
into
pushf
push
adc
mov
mov
dec
mov
fiadd
xor
popf
js
sbb
stos
xor
sbb
push
mov
sbb
aaa
mov
ds
xchg
cmp
jmp
dec
xchg
sti
outs
scas
hlt
pushf
or
fisttp
pusha
push
cmps
inc
fmul
jbe
jbe
jp
(bad)
xchg
mov
or
mov
adc
xchg
dec
add
mov
inc
idiv
(bad)
inc
sub
xchg
(bad)
inc
jnp
sbb
mov
mov
shr
or
sahf
mov
popa
mov
aam
adc
adc
sbb
fdiv
mov
nop
inc
mov
fmulp
push
mov
dec
imul
sbb
xor
push
movs
icebp
xchg
nop
inc
pusha
sbb
(bad)
clc
std
inc
pop
ins
inc
mov
in
(bad)
xchg
mov
or
jns
(bad)
push
clc
inc
mov
jns
sbb
stos
loope
pop
dec
enter
jnp
adc
enter
jo
test
out
mov
cmp
lock
or
sbb
add
sub
sub
outs
adc
and
pop
mov
out
add
into
and
out
cmp
xchg
mul
xor
call
je
js
mov
cs
jbe
mov
mov
and
jmp
or
stc
out
jg
stc
out
call
add
jg
pusha
dec
dec
loopne
or
add
add
dec
inc
scas
inc
pusha
or
add
add
add
(bad)
(bad)
inc
add
add
add
add
add
add
jns
je
ins
cs
jb
ja
outs
addr16
push
gs
imul
xor
xor
inc
jne
je
jb
cmp
jb
ins
sub
push
jne
ins
imul
imul
bound
xor
data16
xor
fs
add
adc
gs
cs
jb
ja
outs
addr16
imul
add
popa
je
pop
add
add
add
add
add
lsl
add
ret
adc
add
mov
inc
or
add
or
add
add
add
add
or
add
add
pusha
outs
rol
add
add
inc
dec
inc
add
mov
or
popa
add
jo
pop
jae
add
ret
add
push
ret
add
outs
test
add
adc
inc
inc
push
pop
inc
in
rol
loopne
cmc
jmp
je
mov
cmp
jmp
ret
int3
jmp
(bad)
je
xchg
jae
call
in
repz
aam
(bad)
rol
adc
(bad)
leave
xor
ja
push
or
cmc
pop
adc
mov
fisttp
or
dec
nop
sbb
test
ins
fcom
movs
or
(bad)
ins
cmp
jle
adc
xchg
std
fstp
jbe
push
pop
cmps
mov
retf
test
aam
push
aad
xlat
movs
cmp
sbb
push
xor
mov
call
mov
das
push
mov
mov
scas
call
and
xchg
and
jecxz
pop
vcvtsi2sd
xchg
xor
not
std
inc
fsub
in
mov
mov
ds
adc
sub
es
call
fimul
lods
xchg
sbb
mov
add
add
loop
shl
enterw
ins
push
push
aaa
jg
add
adc
mov
ja
test
push
xor
or
or
cmp
in
sbb
clc
retf
sbb
xor
repz
fxch
pextrw
hlt
lods
aas
mov
and
(bad)
aam
sub
pop
jmp
test
pop
retf
mov
iret
pushf
movs
(bad)
push
and
inc
out
sbb
mov
retf
jmp
sub
fst
cmps
cmps
(bad)
retf
js
xchg
mov
xor
push
jo
or
jne
les
int
retf
adc
jae
icebp
scas
mov
fsubr
sar
add
ins
and
xchg
jae
cmp
es
xlat
jae
scas
jb
add
mov
test
and
xor
and
mov
dec
jno
mov
shr
sti
test
imul
push
scas
in
es
sub
jmp
push
sub
or
mov
jl
cmp
or
fwait
cmp
es
mov
dec
xchg
rol
add
lods
add
(bad)
fistp
mov
shr
rol
cmp
(bad)
inc
das
ror
pop
dec
sbb
inc
fbld
cmp
loop
(bad)
jno
cmps
outs
cli
gs
ss
or
pop
mov
mov
sub
mov
cwde
adc
add
and
cmc
add
xor
lods
jb
cld
pop
lds
cdq
mov
aad
cdq
jnp
mov
neg
stos
and
int
(bad)
dec
adc
xchg
fisttp
std
lidtd
mov
add
ss
cwde
ja
ja
pusha
pop
mov
addr16
sbb
ret
fldl2e
addr16
or
ins
mov
idiv
lahf
jo
hlt
ja
int
ins
jmp
aaa
in
or
jb
enter
out
call
es
or
stos
jmp
jmp
xchg
in
push
aaa
(bad)
loope
adc
mov
std
sbb
jmp
jae
fcom
fmul
push
test
sub
mov
dec
add
retf
mov
xchg
in
imul
and
jp
ret
stos
scas
pop
pop
scas
inc
inc
mov
icebp
cmps
aaa
aad
mov
xchg
mov
or
mov
mov
loopne
xchg
jmp
sbb
sbb
cmp
push
(bad)
rcr
shl
dec
nop
xchg
scas
enter
sub
aam
pop
jb
inc
aad
imul
and
jmp
dec
xchg
mov
pushf
mov
cwde
in
jno
cmp
or
add
shr
js
shl
gs
and
and
arpl
push
adc
and
icebp
cmp
hlt
mov
adc
push
push
inc
cmps
stc
or
mov
rcl
add
movs
and
pop
xchg
int3
and
lea
test
scas
adc
jmp
add
fsub
pushf
xchg
in
inc
lock
test
sub
outs
pop
sub
aad
xchg
rol
fptan
scas
call
out
push
jo
sahf
loopne
fidivr
aas
push
sub
sahf
push
and
ror
test
repnz
jnp
xor
lahf
inc
sub
out
ja
or
pop
push
pop
mov
jl
cs
mov
sub
ja
into
mov
stos
adc
popa
(bad)
push
dec
cdq
neg
and
mov
pop
mov
test
in
clc
mov
pop
addr16
adc
cmp
int
push
add
in
inc
das
lods
stos
imul
cmp
loope
loopne
push
xor
mov
dec
jle
pop
fsubr
jns
adc
and
loopne
imul
mov
xlat
fs
movs
scas
sahf
fmulp
movs
inc
or
jle
dec
mov
mov
sti
jo
aas
out
jecxz
sub
scas
adc
and
not
out
ret
bound
imul
push
pop
and
out
xlat
lods
lea
sahf
cmp
int
je
nop
add
push
enter
aas
sub
mov
sbb
cwde
sahf
cmc
lock
sbb
dec
add
cmps
mov
(bad)
shl
movs
ror
je
je
loope
xor
arpl
out
or
or
out
movs
sbb
cmps
add
xor
(bad)
idiv
adc
jmp
mov
imul
push
aam
cmp
pop
xchg
imul
mul
and
jg
fidivr
iret
sub
push
fidiv
sbb
and
mov
dec
sub
mov
xor
test
stos
daa
sahf
mov
mov
mov
push
(bad)
in
add
and
dec
clc
cdq
mov
push
out
aas
xchg
sbb
in
ins
fadd
jb
sub
inc
data16
call
jp
(bad)
xchg
enter
cmps
mov
das
xor
jg
movs
call
fisub
mov
ret
ret
sbb
stos
jne
push
xor
addr16
pop
ds
push
jp
ds
sub
inc
repz
scas
ss
cmp
cmp
jbe
sahf
addr16
lods
(bad)
or
push
inc
push
jno
int3
sahf
xchg
adc
add
pop
movs
stos
(bad)
ror
cmps
push
mov
test
lods
sub
scas
dec
xor
repz
data16
bound
sub
mov
pop
iret
push
mov
fcomp
xchg
push
mov
jnp
and
push
push
fcomp
retf
ret
fsubr
les
fs
dec
inc
xchg
test
inc
cmp
add
push
add
sbb
stc
xor
dec
repnz
shl
push
cmp
stos
dec
mov
mov
mov
adc
scas
xchg
repnz
sub
je
mov
pop
pop
mov
cmps
les
mov
xchg
push
mov
pop
out
fimul
push
cmc
mov
inc
dec
test
sti
test
test
shl
xor
loopne
mov
jb
or
retf
outs
ret
jno
data16
lods
jp
xchg
int3
js
push
sahf
mov
adc
jne
sahf
mov
lea
aas
add
(bad)
lods
(bad)
mov
test
ss
jb
(bad)
mov
cmc
jmp
dec
cwde
add
mov
movs
jb
out
mov
inc
cs
cmps
xchg
and
lds
retf
shl
lds
adc
mov
repnz
sub
cmc
push
fisubr
mov
arpl
jne
mov
sub
lock
cs
in
mov
mov
mov
outs
repz
test
shl
cmp
inc
je
xchg
or
lds
mov
adc
out
xor
(bad)
retf
push
xor
xchg
test
cmp
adc
cmp
ds
mov
mov
mov
lea
mov
mov
mov
jno
jge
push
mov
sub
lea
jbe
cld
jo
outs
mov
push
rol
mov
adc
aam
fbstp
lods
(bad)
cmc
push
(bad)
aam
ror
dec
push
es
ret
addr16
fnstsw
mov
push
int
es
(bad)
and
ja
not
jecxz
or
test
cmp
mov
xor
cmps
popa
test
retf
push
sub
loopne
div
repnz
sbb
push
cli
(bad)
mov
(bad)
push
mov
dec
cmps
ss
push
hlt
inc
jb
pop
add
mov
dec
push
aas
jmp
sub
ins
outs
stc
aad
push
stos
clc
and
(bad)
sub
(bad)
jl
or
mov
cmp
push
xchg
arpl
jmp
and
sub
xchg
das
cmps
inc
pop
in
mov
and
push
inc
fidivr
(bad)
out
mov
xlat
mov
jp
outs
sahf
shr
sti
std
xor
pop
js
xor
ds
mov
aam
popa
sub
jmp
bound
fcompp
mov
into
mov
mov
pop
inc
inc
xor
lock
jae
ins
fwait
ja
inc
(bad)
cmp
outs
test
lds
mov
neg
cli
lods
out
xor
fs
inc
fdivrp
imul
shl
hlt
or
fdiv
jmp
(bad)
les
mov
sti
inc
(bad)
in
repnz
fs
div
sbb
sahf
xchg
pusha
leave
pop
leave
xor
bound
ret
(bad)
fnstcw
push
sahf
cmp
xchg
sbb
sti
lods
xchg
jnp
xchg
cmp
icebp
xor
or
mul
inc
lods
rcr
out
leave
std
pop
out
push
xor
sbb
stos
push
scas
cli
icebp
stos
push
mov
pop
adc
mov
mov
jnp
and
es
arpl
int3
ror
pop
data16
cmp
daa
repnz
dec
and
call
adc
jp
mov
(bad)
fidiv
mov
in
daa
popa
sub
loopne
pop
cdq
mov
jns
fstp
and
stos
test
or
mov
push
aaa
sbb
or
sub
sbb
test
sbb
adc
shl
mov
scas
(bad)
mov
mov
ror
aaa
pop
fsubrp
imul
imul
xchg
scas
lods
rcr
into
cmp
xchg
cpuid
pop
inc
retf
inc
outs
arpl
pop
mov
jne
mov
push
mov
je
scas
inc
cmp
cmc
pop
sbb
xchg
arpl
out
pop
loopne
inc
test
retf
xor
push
mov
cmps
push
mov
fmul
sbb
loope
xchg
cmp
mov
hlt
push
fld
adc
mov
or
inc
das
or
lods
test
js
daa
popa
mov
dec
inc
dec
retf
cmp
ficomp
jmp
mov
xor
dec
iret
jg
xor
sbb
fwait
pop
cmps
in
mov
xchg
fdiv
mov
push
das
jmp
pop
fidivr
cmp
mov
lea
loop
out
pop
cli
aaa
dec
mov
pop
stos
iret
inc
in
xchg
mov
inc
inc
push
or
adc
pop
movs
inc
jecxz
ja
add
or
fcmovnb
movs
inc
retf
sti
outs
inc
imul
icebp
aas
dec
neg
outs
imul
aaa
sti
sbb
or
fs
dec
push
cli
std
sub
pushf
mov
out
add
sbb
aam
test
inc
mov
mov
(bad)
idiv
add
and
arpl
mov
les
je
fwait
shl
mov
jae
jg
sub
in
sar
mov
cmp
jbe
ret
sbb
fwait
scas
push
jp
sub
dec
mov
pushf
add
std
xor
movs
call
lock
push
xor
inc
adc
mov
hlt
or
retf
lahf
call
repz
jns
imul
jmp
jbe
sbb
cmps
(bad)
jmp
(bad)
scas
jns
fcomp
dec
xor
fidiv
cli
cmp
mov
idiv
fidiv
jno
loope
loope
or
lods
adc
add
sub
sub
hlt
push
ror
mov
or
jmp
push
xor
fs
adc
pop
fnsave
out
dec
adc
jne
mov
jne
ds
push
xor
lock
sar
mov
lds
mov
bound
fadd
and
std
xor
push
repnz
add
mov
fdivr
or
inc
mov
or
mov
push
cmp
fild
or
mov
or
or
fdiv
repz
fcomp
pop
push
sub
xor
pushf
jno
pop
mov
dec
mov
(bad)
test
jb
inc
out
aas
and
bound
in
fisub
adc
dec
cmp
movs
fcom
stos
jle
jmp
inc
lock
out
xchg
cdq
adc
ret
(bad)
shl
loope
adc
hlt
pop
ja
test
not
lods
cmp
xlat
push
loope
sub
xlat
ror
test
mov
call
jl
pop
sub
sti
(bad)
cmp
iret
xchg
dec
out
add
aam
xchg
inc
sub
loope
shl
cmp
jl
pop
dec
fisub
lahf
loopne
aam
inc
mov
aad
mov
jmp
inc
scas
jo
jle
adc
push
cmp
test
(bad)
and
aam
fadd
push
(bad)
cld
shl
and
or
add
outs
(bad)
fadd
enter
dec
jb
mov
popf
pop
mov
sub
jg
shl
or
(bad)
movs
and
and
adc
inc
daa
arpl
dec
push
and
ins
pop
mov
cmp
retf
xor
scas
push
imul
cs
outs
fstp
mov
addr16
xor
shl
cmps
mov
outs
jg
xor
rep
icebp
cmc
jle
sub
inc
aam
inc
sbb
xchg
jns
pushf
push
cmp
loop
cmp
jle
ins
push
pop
mov
sub
(bad)
hlt
and
gs
aam
(bad)
arpl
repnz
adc
pusha
int
pop
les
sar
loopne
xchg
cmp
pop
xor
inc
cmps
int3
jl
scas
rol
jns
pop
push
leave
mov
xchg
or
out
repz
adc
rcr
test
add
dec
mov
jne
jno
movs
mov
push
jmp
add
sahf
xlat
fidiv
push
mov
pop
fsubr
mov
fs
and
or
mov
mov
push
push
pop
mov
iret
outs
mov
xchg
shl
jnp
cli
push
or
xor
jge
in
jmp
nop
mov
add
mov
loope
adc
aas
outs
retf
mov
fcmovnb
xor
(bad)
popf
add
xchg
daa
cmp
adc
xchg
inc
cmc
sub
fs
xchg
pop
leave
xor
mov
xchg
ins
stc
cwde
bound
sbb
pop
div
jmp
cmp
imul
(bad)
jge
pushf
inc
mov
xor
mov
add
lock
or
add
mov
mov
xchg
ss
inc
lahf
add
(bad)
(bad)
and
sti
mov
les
in
push
add
dec
shr
mov
fsubrp
dec
cmp
ds
rcl
cmc
push
cmp
pop
jnp
shl
inc
sahf
jno
push
mov
pushf
add
push
cmp
mov
jg
sub
daa
adc
hlt
push
xor
cld
pop
pop
leave
cmp
aas
cmp
aas
lds
rcl
lods
arpl
xchg
xchg
adc
mov
aas
pop
inc
loope
in
bound
sub
cmp
out
cmps
js
retf
in
xchg
aaa
repnz
inc
fs
movs
bound
popf
mov
scas
cmp
ret
fidivr
and
sbb
(bad)
pop
fwait
test
push
xor
mov
imul
call
aas
das
or
xor
fimul
adc
dec
fisub
sub
sbb
fwait
ds
in
mov
(bad)
stc
out
jg
stc
out
jg
scas
add
inc
push
adc
mov
add
add
dec
inc
dec
inc
scas
inc
pusha
or
add
add
add
(bad)
(bad)
inc
add
add
add
add
add
add
jns
je
ins
cs
jb
ja
outs
addr16
push
gs
imul
xor
xor
inc
jne
je
jb
cmp
jb
ins
sub
push
jne
ins
imul
imul
bound
xor
data16
xor
fs
add
adc
gs
cs
jb
ja
outs
addr16
imul
add
popa
je
pop
add
add
add
add
add
lsl
add
mov
mov
inc
or
add
or
add
add
add
add
or
add
add
pusha
outs
rol
add
add
inc
dec
inc
add
mov
or
popa
add
jo
pop
jae
add
ret
add
push
ret
add
outs
test
add
adc
inc
inc
push
pop
inc
in
rol
add
and
aaa
or
jmp
into
adc
mov
frstor
dec
test
(bad)
jmp
xchg
add
cmps
sti
adc
sub
cmp
push
dec
dec
sub
in
loopne
icebp
(bad)
and
fcomp
test
jns
mov
push
xchg
inc
retfw
(bad)
scas
(bad)
bt
sbb
bound
xor
mov
fimul
push
jg
cmc
or
call
outs
jle
fs
aas
ret
and
cmp
push
xchg
adc
test
icebp
mov
adc
or
movs
pop
jmp
push
xlat
or
add
sub
call
xor
sbb
ins
mov
ins
dec
ror
mov
sbb
(bad)
push
jae
jge
sub
sub
push
js
fwait
ret
stos
mov
jmp
jbe
sahf
int
cmp
dec
iret
push
xchg
fsub
sbb
or
push
and
cmp
mov
adc
pop
push
js
xor
ds
ins
or
in
popa
push
dec
stos
ins
push
pop
pusha
fbstp
int
mov
push
pop
jae
aam
inc
sub
js
push
fs
push
retf
mov
mov
retf
jecxz
in
mov
bound
cmp
sahf
clc
mov
imul
add
adc
bound
pop
sbb
into
jl
add
cmp
outs
aad
cs
push
pop
(bad)
loopne
retf
fldenv
cs
in
daa
push
shr
cmp
in
lods
xchg
pop
retf
es
add
jge
xor
retf
(bad)
pop
or
and
out
fidiv
cs
push
xchg
cmp
pop
ror
cmps
mov
repz
in
sub
lea
aam
arpl
fstp
or
sub
ret
ja
addr16
and
sub
or
ds
lods
push
outs
jo
into
dec
cmp
inc
jnp
xchg
inc
jmp
ins
imul
or
addr16
iret
cld
ret
imul
xchg
adc
dec
xor
push
jge
icebp
push
dec
jne
mul
adc
enter
out
das
daa
bound
inc
adc
inc
inc
int3
test
sub
ss
push
test
jo
mov
or
aam
(bad)
inc
in
movs
push
lods
mov
stc
and
nop
sub
cmps
stc
test
repnz
enter
or
add
aam
sbb
inc
ret
test
push
cs
aas
push
cmps
retf
in
scas
adc
mov
rcr
mov
mov
int
lods
sbb
into
or
adc
not
test
dec
ret
test
fbld
inc
sub
cmc
addr16
not
je
mov
xchg
ret
mov
repz
enter
mov
pop
pop
push
add
outs
jecxz
mov
or
cmp
and
sbb
(bad)
sbb
mov
mov
outs
jecxz
pop
adc
pop
es
in
mov
add
or
into
pusha
pop
dec
(bad)
in
fwait
push
lock
xor
dec
(bad)
call
dec
or
add
mov
cmc
gs
loop
xchg
sti
xor
outs
dec
dec
sbb
scas
mov
mov
xchg
mov
push
hlt
jnp
in
test
in
cwde
xchg
loope
jae
dec
cmp
mov
add
in
mov
sub
sti
pmuludq
cdq
jge
cmps
(bad)
sbb
shl
jns
xchg
test
rcr
dec
sbb
ins
idiv
int3
pop
xchg
xor
push
add
adc
je
stos
mov
or
jae
jp
cwde
ror
bound
gs
sub
retf
pop
mov
sub
ficom
cmp
outs
jae
or
sti
mov
fiadd
movs
(bad)
xor
js
jle
jecxz
repnz
mov
les
inc
addr16
dec
adc
dec
pop
bound
cld
mov
inc
cmps
lahf
test
in
aas
lahf
nop
or
sub
nop
ja
hlt
sbb
jl
xlat
xchg
shl
cmp
push
test
lock
ins
pop
dec
pop
icebp
jecxz
mov
inc
hlt
pop
bound
jge
rol
jecxz
push
push
adc
add
dec
push
outs
jg
popf
ins
mov
lds
ins
cmc
fdiv
jg
push
adc
adc
push
xchg
cmp
(bad)
mov
mov
jl
push
clc
jge
adc
sbb
int3
aas
dec
pop
adc
mov
test
dec
test
rcr
sbb
inc
adc
sbb
movs
inc
sub
scas
pop
push
pop
push
not
loope
ror
sbb
addr16
movs
js
sar
add
mov
push
hlt
sahf
mov
xor
mov
or
stc
jnp
inc
into
popa
cs
cmp
lahf
sahf
jbe
xchg
xor
fld
inc
sub
xor
push
dec
ds
push
sbb
xchg
add
lods
adc
mov
ins
and
xor
out
aam
ret
(bad)
arpl
pop
jmp
xchg
push
pop
xchg
call
and
mov
call
(bad)
add
mov
std
imul
in
cmp
xor
and
add
mov
lock
push
dec
sbb
call
mov
mov
push
add
jne
mov
xchg
lds
and
dec
dec
test
(bad)
call
test
(bad)
outs
arpl
into
and
mov
and
leave
gs
leave
outs
pop
cmp
sbb
je
push
sub
cmp
inc
test
scas
pand
jbe
mov
lahf
mov
cmp
outs
leave
cmc
out
inc
pop
out
je
je
test
sar
or
add
aad
and
scas
jmp
repnz
icebp
or
stos
xchg
jg
add
loope
adc
cs
lods
mov
or
retf
jge
nop
cld
mov
sbb
je
pusha
nop
arpl
ins
or
push
inc
jno
mul
fnsave
xor
adc
jmp
mov
iret
sub
out
adc
mov
pop
push
ret
leave
jae
and
cli
jg
fstp
fst
out
add
call
mov
out
and
aas
fwait
ins
fidivr
xor
sub
sti
and
sbb
sub
cmp
sbb
rcl
out
jno
inc
imul
(bad)
xchg
inc
lods
dec
ja
push
ja
(bad)
in
arpl
js
lock
sbb
cmp
mov
pop
pop
fadd
jnp
push
addr16
push
cmp
cmp
sub
jmp
(bad)
fbld
fmul
xchg
inc
dec
ja
push
into
adc
jb
mov
or
push
mov
jle
hlt
jnp
mov
data16
mov
cmps
inc
lock
cmp
outs
icebp
rcr
shr
leave
cmp
push
xchg
fwait
xor
mov
xor
aas
sub
cmps
cwde
xchg
(bad)
mov
dec
pop
pop
push
fwait
outs
pop
xor
sbb
jne
and
pop
xor
push
in
push
pop
pop
int
and
jl
lock
xchg
adc
cld
shl
ret
or
add
mov
and
mov
out
fs
fldl2e
fstp
fwait
sub
cli
cdq
and
add
enter
addr16
pop
adc
mov
cmp
imul
xchg
js
rol
std
mov
push
dec
int
into
dec
cmp
pop
push
cmp
cs
pushf
jecxz
pop
jp
mov
xchg
push
aas
fnstsw
mov
jp
jle
xor
call
jle
pop
je
gs
push
ror
cmp
pop
(bad)
sub
int3
add
adc
dec
cli
mov
xor
sbb
xor
std
fdivp
xchg
xchg
dec
popf
dec
sub
cld
(bad)
scas
sbb
test
push
mov
jne
adc
popa
lahf
cmp
stos
fs
retf
xor
rcr
pusha
arpl
pop
push
ficomp
icebp
fcos
(bad)
jmp
test
inc
push
ins
data16
mov
inc
jns
mov
movs
cld
cmovo
out
popa
cld
mov
movs
ret
aam
js
xchg
and
fxch
sub
lea
cmps
outs
loop
neg
xchg
fld
xchg
popf
pop
inc
xor
shl
fwait
shl
cmps
xlat
push
push
pop
fild
jno
push
adc
xchg
daa
(bad)
call
mov
std
or
adc
aad
cmp
sbb
mov
mov
outs
fs
jmp
or
xor
call
fmul
push
mov
push
cs
shr
cmp
out
mov
test
enter
cdq
mov
out
mov
or
nop
in
sub
mov
dec
sbb
stos
adc
(bad)
mov
stos
mov
into
outs
in
jle
jmp
into
addr16
mov
jae
pop
lods
(bad)
xchg
pushw
or
cmp
call
push
push
sahf
jo
aaa
inc
push
push
inc
cld
cmp
mov
(bad)
inc
scas
mov
or
push
push
neg
ds
cmp
cmps
xlat
mov
xchg
cmp
pop
adc
xchg
xchg
fucomi
retf
sub
mov
retf
aas
pusha
hlt
jl
cmp
test
out
jns
pop
call
mov
repz
xchg
and
ret
loop
(bad)
rcl
sbb
(bad)
pop
js
ja
push
(bad)
dec
leave
(bad)
xlat
add
ficom
sti
out
retf
mov
or
xor
ret
sbb
mov
aaa
add
jl
js
xor
cmp
out
stos
or
add
push
and
or
das
mov
xchg
mov
mov
push
jmp
or
xor
jmp
mov
and
pop
scas
add
lea
lods
sti
mov
dec
mov
pusha
nop
(bad)
jne
div
hlt
scas
stos
xchg
sub
dec
cs
les
lods
sbb
sbb
mov
sti
add
repnz
jle
xor
inc
mov
fstp
and
shl
retf
mov
ss
(bad)
popf
xchg
jmp
pop
inc
mov
cdq
(bad)
dec
movs
aam
add
fwait
jnp
pop
mov
inc
sbb
in
mov
imul
lds
and
cmc
in
cmps
fst
adc
inc
cmp
rcr
jmp
cdq
push
ss
sbb
inc
inc
push
test
add
stc
out
mov
ds
dec
or
pop
cmp
ret
mov
cdq
fwait
(bad)
fnsave
jge
cmp
test
lods
lock
fsub
not
cmc
clc
outs
aaa
jno
sbb
mov
pop
jg
xor
hlt
imul
cmp
xchg
lds
ret
push
(bad)
popf
test
cmps
inc
push
test
stos
xor
rcl
mov
mov
pop
adc
cmp
(bad)
sbb
dec
psubd
mov
aam
rcr
cmc
adc
mov
sbb
sub
cmp
xchg
jmp
test
or
mov
(bad)
ins
adc
(bad)
and
push
dec
or
mov
leave
xchg
sub
fisub
cmp
adc
mov
fisttp
dec
mov
and
icebp
retf
mov
and
push
jmp
push
lahf
push
jmp
mov
fnsave
into
jecxz
shr
and
xchg
sub
sbb
fidiv
sub
mov
sub
clc
shl
mov
aad
and
outs
mov
mov
sub
or
out
jbe
mov
imul
and
cmp
inc
add
and
shl
out
out
call
lds
ror
scas
pop
repz
pop
pop
iret
sub
sbb
out
loop
inc
in
and
scas
push
nop
ds
fidivr
push
lahf
(bad)
ret
push
mov
rol
and
movs
ret
mov
jmp
dec
(bad)
fcom
fstp
vrcpss
dec
mov
repz
xchg
not
in
scas
std
les
push
fdivp
rcl
repnz
lods
pop
(bad)
mov
jmp
sub
lock
mov
mov
lahf
rcr
jbe
call
das
ds
cli
mov
xchg
push
data16
mov
cmp
lock
loope
rcr
out
scas
xor
or
cmps
push
ret
sub
xchg
pusha
add
(bad)
fdiv
jo
cmps
fstp
push
push
mov
and
jne
push
iret
movs
pop
or
aaa
and
sbb
inc
pop
movs
je
fimul
mov
shr
sbb
scas
sub
mov
push
fidivr
add
and
cmps
xchg
push
aas
sbb
adc
xlat
iret
out
dec
das
(bad)
dec
popa
hlt
rcl
sahf
int3
(bad)
test
jmp
movs
outs
mov
movs
xor
call
mov
mov
sbb
rcr
rol
ss
adc
loopne
push
stos
adc
inc
aad
inc
fmul
pop
mov
push
push
xchg
xor
adc
push
xchg
add
dec
fxch
aam
and
xchg
(bad)
cwde
rol
xor
mov
popf
inc
push
call
dec
and
ret
cdq
mov
sbb
jg
cmc
sbb
in
mov
loopne
fnstcw
nop
fdivr
or
ins
add
out
mov
sbb
repnz
jg
arpl
test
lods
push
into
cmps
adc
in
adc
jbe
adc
fisub
xor
xchg
push
iret
dec
cmps
nop
ret
pop
lds
fbld
loop
sbb
add
loope
jge
(bad)
mov
jg
scas
movs
xor
push
enter
pop
scas
sub
xor
popf
xlat
(bad)
cmc
mov
(bad)
xor
js
loope
aam
and
vfnmsubps
cmp
fmul
add
bound
mov
xchg
jno
sbb
jecxz
(bad)
mov
jbe
leave
push
pushf
call
out
retf
ss
nop
test
pop
sbb
call
and
mov
sub
aas
xchg
pop
jo
je
ror
dec
call
cwde
lods
cmp
mov
jmp
in
gs
mov
cmp
jle
sbb
mov
sub
rol
data16
ins
fcmovnbe
pop
inc
ja
aas
jmp
ins
movs
add
mov
pop
and
sbb
out
dec
iret
fwait
es
or
xchg
in
fmul
es
enter
xchg
call
es
addr16
ds
in
out
jg
jecxz
sti
push
xor
dec
hlt
cmp
in
add
stos
ss
retf
rcl
pusha
movs
out
cmp
mov
xor
out
cmc
adc
sbb
lods
xor
mov
int
bound
pop
jge
lods
and
loope
pop
mov
call
push
xor
pop
loope
and
xor
addr16
test
mov
sub
mov
mov
cmp
sub
dec
pop
jl
ret
test
and
fs
data16
dec
and
mov
xor
sahf
lods
cld
adc
mov
push
out
mov
out
jmp
arpl
pushf
mov
xor
push
cmp
jno
mov
out
fnsave
cwde
lock
mov
add
cmps
(bad)
movs
jecxz
scas
xchg
ins
push
xor
scas
inc
fst
add
out
xchg
xchg
adc
mov
adc
stos
scas
push
mov
mov
mov
mov
dec
mov
dec
xchg
cmp
and
ja
stc
nop
jp
int
sub
aas
xor
adc
push
cmp
mov
retf
(bad)
call
jp
mul
jbe
in
stos
xchg
shr
into
(bad)
xchg
push
pop
and
(bad)
repnz
stc
out
jg
stc
jg
add
pop
add
inc
dec
mov
dec
inc
dec
inc
scas
inc
pusha
or
add
add
add
(bad)
(bad)
inc
add
add
add
add
add
add
jns
je
ins
cs
jb
ja
outs
addr16
push
gs
imul
xor
xor
inc
jne
je
jb
cmp
jb
ins
sub
push
jne
ins
imul
imul
bound
xor
data16
xor
fs
add
adc
gs
cs
jb
ja
outs
addr16
imul
add
popa
je
pop
add
add
add
add
add
lsl
add
rcl
add
mov
inc
or
add
or
add
add
add
add
or
add
add
pusha
outs
rol
add
add
inc
dec
inc
add
mov
or
popa
add
jo
pop
jae
add
ret
add
push
ret
add
outs
test
add
adc
inc
inc
push
pop
inc
in
rol
loopne
loope
mov
std
xlat
ins
cmp
fwait
cwde
dec
outs
xchg
rcr
pushf
jmp
jae
into
xor
bound
enter
add
mov
add
and
add
inc
pushf
ins
adc
mov
iret
int3
retf
(bad)
ret
mov
loopne
aas
(bad)
push
(bad)
fild
push
sbb
sar
cmp
scas
mov
jl
in
std
mov
fstp
stos
cmc
xor
retf
repz
lods
adc
rcl
or
jp
jno
(bad)
mov
(bad)
ffree
inc
cmp
dec
inc
pop
in
shl
and
ret
loope
movs
js
fldenv
pusha
pop
mov
sahf
shr
jle
sbb
clc
shr
lea
jecxz
fld
lods
push
push
mov
cmp
cs
mov
gs
fwait
adc
movs
retf
mov
cmp
jmp
ss
ja
int3
(bad)
out
shl
test
mov
sbb
push
pushf
jno
push
std
push
dec
mov
cmp
mov
clc
rol
xor
sub
cmp
cmp
or
fstcw
fsub
loope
inc
enter
stos
jle
(bad)
icebp
pop
scas
int
stos
pushf
jo
push
xor
es
adc
icebp
addr16
call
clc
adc
test
mov
cmp
stos
push
out
hlt
fs
sub
or
sti
jmp
lods
inc
es
sbb
or
in
push
sbb
push
cli
retf
lahf
or
xchg
cmp
sub
sub
test
lea
or
push
nop
jbe
fldcw
pop
aas
pop
leave
call
sar
mov
test
psrad
pop
inc
loop
dec
aaa
ds
add
sub
and
dec
in
je
add
push
pop
in
push
lods
jae
lds
rcl
mov
jae
lods
ror
outs
jge
leave
scas
scas
jge
xchg
(bad)
(bad)
jo
mov
push
test
ja
xlat
and
sahf
scas
inc
push
ds
cwde
adc
cmp
cmp
popf
jo
and
push
out
scas
out
inc
mov
cmp
icebp
loop
adc
push
push
dec
in
scas
stos
mov
(bad)
ret
cdq
xchg
mov
cmp
fldenv
mov
dec
fist
push
cmc
movs
sar
arpl
and
(bad)
test
(bad)
popf
xrelease
loope
cwde
dec
mov
nop
xchg
dec
(bad)
sahf
mov
sub
stos
sub
in
xchg
ffreep
sbb
xchg
push
dec
mov
push
and
movs
stos
jl
and
pop
lock
add
jmp
pop
pop
or
es
addr16
mov
xor
leave
push
fmul
mov
inc
and
les
xor
ret
jge
or
sbb
call
and
sti
enter
cmp
pop
fisub
jge
cmp
sub
hlt
scas
hlt
mov
cld
dec
dec
and
loop
loop
cmp
fs
mov
nop
mov
push
dec
push
jmp
cmc
push
adc
aad
dec
fs
add
jmp
mov
mov
(bad)
xchg
mov
ds
clc
icebp
mov
add
mov
cmp
add
adc
aad
push
arpl
inc
dec
pushf
rcr
arpl
xor
sbb
adc
dec
sub
ins
dec
sbb
xlat
sbb
shl
dec
fwait
jne
ds
adc
push
pandn
add
mov
xchg
fisttp
ror
jnp
mov
xor
xchg
push
sub
(bad)
daa
or
inc
cs
pop
test
loop
push
inc
fcmovnbe
mov
cmp
xor
popf
or
mov
ja
pop
add
rol
and
jecxz
mov
shl
icebp
pop
fidiv
mov
pop
mov
mov
pop
sbb
mov
lds
sbb
js
dec
test
ss
repnz
ins
jl
add
pop
(bad)
jae
jno
sar
ret
hlt
inc
inc
pop
nop
addr16
dec
repnz
ret
mov
jae
(bad)
mov
jno
jmp
nop
mov
mov
rcr
imul
div
sub
into
add
sbb
mov
das
mov
(bad)
fisttp
in
cmp
mov
out
mov
push
mov
mov
rcl
lahf
push
cmp
inc
cmp
push
mov
mov
jns
xchg
lds
out
out
inc
mov
jl
hlt
jge
jne
pop
mov
fstp
aas
push
dec
add
vpor
movs
add
mov
movs
and
jb
rcl
mov
adc
cmps
mov
shr
lea
(bad)
femms
cmp
jns
inc
repz
test
cmp
jno
out
xor
sub
call
xchg
dec
in
xchg
scas
pop
jnp
xor
movs
test
ja
xchg
jnp
dec
and
mov
repz
pop
movs
dec
mov
push
push
fadd
mov
sbb
cmps
sbb
pusha
mov
and
dec
std
mov
aas
daa
pop
sahf
sub
adc
sbb
stos
jge
or
add
outs
adc
arpl
jg
sbb
div
sahf
or
sbb
ins
mov
mov
mov
or
cli
movs
add
in
in
push
cli
repnz
rcr
cs
cmps
gs
fadd
dec
hlt
or
lods
mov
call
or
xor
fs
test
call
mov
mov
mov
jnp
sub
dec
add
xchg
popf
xor
jo
push
jl
mov
dec
jae
push
mov
inc
pop
mov
add
mov
(bad)
mov
jp
cld
mov
inc
sahf
les
mov
imul
adc
inc
xor
ret
pusha
jecxz
add
and
popa
fsubr
les
das
outs
call
jmp
inc
retf
xlat
rol
and
mov
fild
push
xchg
mov
cmp
xor
add
lds
or
jl
sub
cdq
clc
fdivrp
or
scas
movs
xor
xor
add
in
retf
fistp
loope
repnz
mov
cmp
lds
movs
xchg
add
addr16
sub
fsubp
adc
mov
sub
test
cld
mov
rcr
adc
ins
(bad)
jle
sub
mov
mov
test
(bad)
sti
loopne
ret
mov
fs
sbb
leave
or
sub
(bad)
inc
cmp
mov
cld
fwait
in
bound
and
(bad)
call
add
mov
or
xchg
ins
mov
stos
mov
sbb
jmp
out
dec
movs
mov
jno
outs
mov
pop
xchg
(bad)
(bad)
fldcw
mov
cdq
xchg
shl
cmp
movs
nop
das
pop
or
(bad)
repz
mov
jle
add
nop
movs
lods
jmp
hlt
mov
xor
xchg
int3
xchg
inc
out
(bad)
fsub
clc
mov
(bad)
mov
aam
jl
push
adc
xchg
xchg
retf
cmp
arpl
(bad)
and
push
popf
jmp
pop
cs
(bad)
xor
test
div
mov
lock
sub
jb
sub
push
popf
ss
ret
lods
data16
popf
fsubp
mov
jp
js
cmp
push
fistp
lods
mov
std
aad
outs
dec
mov
xchg
pop
push
in
or
xor
jmp
jns
retf
(bad)
push
cmp
cmps
adc
iret
push
pop
cdq
jp
retf
and
sbb
ror
sar
cmps
aaa
in
jg
adc
jo
pusha
add
retf
imul
sti
retf
retf
pop
mov
push
call
cmc
pop
mov
mov
pop
inc
je
loop
jbe
aad
cdq
out
mov
and
mov
jb
clc
pop
adc
jg
mov
in
nop
xor
lock
push
mov
push
dec
(bad)
jne
(bad)
movs
cmps
dec
mov
cdq
lods
ret
out
mov
fadd
clc
mov
or
jbe
ret
and
fcom
call
cmp
dec
(bad)
std
aad
cmp
xchg
stos
shl
mov
xor
mov
neg
aam
imul
push
jp
xor
sbb
push
inc
pop
pop
sbb
push
lock
imul
xchg
pop
xor
pop
and
ror
jg
jne
jno
call
retf
mov
push
ins
push
lahf
push
adc
xchg
not
lods
pop
mov
sub
ins
es
or
mov
pop
and
fisub
bound
out
enter
pop
or
sbb
xchg
ret
loop
xchg
pop
lea
ffreep
xor
test
sub
inc
aas
out
mov
adc
stos
fs
mov
dec
mov
imul
movs
adc
gs
pop
aad
int
or
inc
ins
mov
dec
jmp
cdq
(bad)
sub
repz
loop
sub
in
mov
shl
dec
ret
mov
inc
out
in
aas
inc
call
dec
mov
dec
xchg
call
add
cli
es
and
pop
ret
mov
out
mov
mov
mov
cli
shl
mov
jb
mov
mov
mov
and
adc
out
mov
mov
adc
sbb
jge
aaa
jns
iret
pushf
pop
add
popa
cmps
cmp
fcomip
icebp
sbb
int
mov
cmps
dec
lea
xor
cmps
iret
daa
xchg
cmp
loope
int
cwde
sub
and
(bad)
sbb
adc
mov
xor
mov
test
dec
xchg
pop
bndstx
imul
xchg
aaa
gs
fwait
mov
xchg
or
xlat
mov
xor
sub
adc
(bad)
pop
pop
test
cmc
ret
nop
add
sbb
lods
addr16
in
mov
lea
add
icebp
lods
test
jg
dec
ds
loope
cwde
cmp
push
js
cmp
std
sub
jbe
das
push
xlat
int
jg
mov
adc
iret
ins
mov
(bad)
cmp
jo
ss
inc
dec
cmps
dec
jge
stos
stc
jmp
daa
das
enter
push
mov
std
cdq
add
aam
push
xchg
frstor
je
jmp
push
cmp
addr16
jle
sub
out
mov
or
pop
xchg
int3
mov
imul
shl
dec
xor
mov
or
inc
ins
sbb
push
jnp
iret
push
ret
loope
sub
ds
cmc
pop
dec
mov
ret
pop
dec
adc
cmp
pusha
cmp
inc
xchg
mov
or
fld
push
(bad)
mov
xchg
pop
daa
jle
iret
and
fisub
or
out
ins
or
pmaddwd
mov
test
inc
xchg
int
mov
fdivr
pop
mov
xor
inc
call
les
fstp
fcomp
add
into
pop
sub
fld
xchg
outs
adc
jo
into
dec
sub
imul
out
and
rcl
mov
cdq
clc
sub
jmp
adc
add
jmp
mov
push
test
pushw
xchg
sub
fistp
xor
inc
mov
mov
xchg
cmps
xchg
xchg
ins
fs
pop
push
test
xchg
pop
jbe
xchg
push
leave
inc
fst
ret
inc
or
fisubr
fiadd
stos
jl
inc
push
fild
test
int
xchg
int3
or
push
push
and
inc
test
sub
cld
fdivr
mov
pop
fcom
mov
adc
call
cmp
out
adc
cs
xor
xchg
adc
das
push
les
xor
test
aaa
jg
inc
xchg
jl
imul
stos
rcr
lods
xor
dec
mov
mov
adc
mov
sbb
mov
cmp
rcl
cli
cld
xchg
mov
push
xor
mul
and
pop
sbb
scas
dec
jge
or
pop
push
aad
scas
push
fist
jmp
ds
xor
les
scas
xor
push
push
xchg
jmp
mov
das
(bad)
loopne
mov
jl
lds
retf
adc
daa
cmp
jbe
xchg
sbb
sbb
push
push
lahf
dec
out
xchg
loop
dec
(bad)
js
push
test
add
push
sub
cmp
popa
jb
leave
push
(bad)
mov
adc
daa
push
and
in
push
les
adc
out
pop
mov
cmp
push
pop
mul
loope
pop
test
push
inc
or
or
ins
call
mov
xchg
addr16
jmp
(bad)
pop
daa
inc
pop
cmp
lods
mov
(bad)
pusha
jg
fwait
in
sahf
les
push
retf
icebp
and
sbb
adc
push
cli
and
icebp
shl
push
ret
enter
push
inc
inc
push
jl
pusha
mov
sbb
aam
ja
cmp
repnz
punpckhwd
ins
dec
out
mov
mov
mov
dec
dec
(bad)
popf
call
add
pop
jle
or
ss
pop
dec
xchg
adc
pop
rol
inc
dec
(bad)
mov
jns
cmp
out
push
popf
jmp
and
or
int3
jmp
ja
ds
dec
xor
mov
sbb
out
out
mov
mov
xchg
jo
(bad)
mov
pop
cmp
xchg
sub
mov
and
xchg
retf
stos
rcl
pop
test
imul
ins
lahf
cmp
test
xor
and
sub
jg
mov
gs
xchg
neg
or
jo
push
pop
xchg
test
dec
scas
push
in
or
test
in
jmp
push
jmp
jbe
js
in
test
jecxz
push
mov
jnp
cmps
int
mov
xchg
stos
outs
hlt
adc
dec
cdq
cdq
sbb
jmp
add
retf
xchg
push
(bad)
add
(bad)
enter
sub
mov
shl
lods
fmul
sbb
add
xor
data16
xor
mov
push
cdq
cmp
lock
pop
scas
test
test
jae
push
add
outs
mov
jg
mov
sar
leave
dec
sbb
repz
add
jno
and
xlat
sbb
pop
ffree
adc
mov
sub
mov
xlat
pop
inc
sbb
push
push
push
mov
movs
xchg
clc
pop
sbb
stos
cmp
int3
les
xchg
ds
pop
and
ins
mov
mov
add
iret
jne
dec
into
je
jmp
adc
cmp
pop
js
ja
nop
sti
adc
push
mov
dec
js
push
push
cmp
sub
cmp
mov
sbb
mov
loop
in
push
cld
jae
fadd
loope
mov
ds
xor
sub
xor
ja
daa
push
jle
fist
and
lods
sbb
jmp
cli
(bad)
xor
out
cwde
int
nop
cmp
std
xor
(bad)
hlt
test
pop
xchg
mov
xchg
xor
xchg
inc
jecxz
ror
in
stos
xchg
mov
in
nop
xchg
div
cmp
xchg
sub
push
xor
fiadd
in
pop
cdq
lahf
or
dec
mov
or
jecxz
add
cmp
xchg
inc
or
pushf
in
call
out
mov
mov
sbb
repnz
push
popf
mov
cmp
jmp
out
mov
xor
dec
jne
jle
imul
or
hlt
ret
pushf
xlat
aad
push
jns
pop
pop
add
in
xlat
sti
ss
leave
nop
sbb
xchg
adc
mov
sub
sbb
(bad)
rcl
out
arpl
or
mov
push
mov
add
cld
repz
aas
(bad)
cld
repz
aas
call
add
jg
shl
retf
(bad)
add
add
dec
inc
dec
inc
scas
inc
pusha
or
add
add
add
(bad)
(bad)
inc
add
add
add
add
add
add
jns
je
ins
cs
jb
ja
outs
addr16
push
gs
imul
xor
xor
inc
jne
je
jb
cmp
jb
ins
sub
push
jne
ins
imul
imul
bound
xor
data16
xor
fs
add
adc
gs
cs
jb
ja
outs
addr16
imul
add
popa
je
pop
add
add
add
add
add
lsl
add
mov
mov
inc
or
add
or
add
add
add
add
or
add
add
pusha
outs
rol
add
add
inc
dec
inc
add
mov
or
popa
add
jo
pop
jae
add
ret
add
push
ret
add
outs
test
add
adc
inc
inc
push
pop
inc
in
rol
loopne
cmps
imul
dec
xor
xor
xor
into
loope
cmp
push
rcr
ss
pop
xchg
shl
daa
dec
sbb
pop
jns
cmp
inc
cmp
cmp
ror
mov
sub
jbe
pop
retf
pop
xchg
stos
lahf
xor
in
ret
push
or
xchg
int
test
jns
jecxz
sub
mov
sti
sub
(bad)
sub
jo
aam
jecxz
xchg
aas
push
fwait
jns
inc
aaa
in
jle
gs
faddp
dec
jge
pusha
mov
sbb
repnz
inc
ror
(bad)
std
or
inc
mov
sar
fwait
mov
ja
dec
rol
push
jae
pop
and
pusha
enter
dec
in
scas
rcr
xor
(bad)
sub
push
js
inc
xlat
inc
out
mov
push
fild
jg
out
test
iret
sub
add
pop
xchg
shl
inc
imul
push
rcr
jbe
dec
pop
int
sbb
push
fiadd
mov
rcpps
not
or
jno
das
mov
dec
jb
shr
repnz
cwde
jbe
push
push
jmp
or
aas
js
(bad)
repz
in
(bad)
int3
shl
dec
iret
cmp
sub
bnd
in
xor
test
inc
ficom
retf
cmps
sub
mov
fwait
test
xor
pushf
inc
lea
add
cld
xchg
les
test
or
jmp
lods
jl
sbb
pop
jp
jmp
loope
and
xor
mov
sbb
xchg
fistp
mov
ds
test
dec
out
cmp
xchg
int3
out
dec
inc
pushf
adc
inc
retf
fld1
jo
not
repnz
fisubr
outs
in
loope
jecxz
xor
shr
rol
sub
out
test
jl
test
dec
jp
mov
pop
shl
fmul
push
ins
dec
jb
aad
movs
ins
or
data16
cs
lods
jb
(bad)
jecxz
hlt
out
rcl
in
xchg
lods
jmp
out
icebp
call
cmp
pop
mov
test
add
cwde
and
sbb
and
aad
nop
adc
jno
in
jl
iret
sub
nop
cmp
pop
cmp
xor
xor
sti
jb
popa
sar
xacquire
repz
shl
es
and
mov
add
fistp
xchg
mov
ins
sbb
outs
jecxz
arpl
dec
test
test
aad
pop
mov
rcl
shr
pop
inc
out
sti
iret
mov
jecxz
pop
outs
int
(bad)
and
mov
test
(bad)
ret
sbb
fiadd
lea
mov
(bad)
std
mov
pusha
jmp
adc
dec
push
xchg
cld
enter
push
add
sbb
mov
jae
ret
(bad)
data16
aad
push
mov
es
lds
mov
cmp
fstp
jns
inc
(bad)
and
xlat
jl
aam
std
push
out
in
sbb
mov
mov
inc
push
xchg
pop
xchg
dec
adc
inc
jbe
cmp
mov
sbb
mov
or
test
arpl
inc
mov
mov
cmp
inc
fild
mov
jnp
rol
and
bound
cs
sbb
lea
push
popa
daa
and
fld
mov
mov
add
imul
mov
daa
aaa
popf
mov
jne
int
fcmovnu
ret
and
mov
and
int
(bad)
xchg
mov
fistp
inc
ins
sbb
xchg
or
sub
cli
(bad)
retf
add
cmp
xor
and
mov
or
mov
inc
shl
data16
mov
mov
sbb
xor
xlat
retf
in
cld
cwde
cmp
cmp
push
frndint
ins
mov
adc
pushf
mov
mov
mov
cmp
cmp
pop
inc
test
xchg
mov
mov
cmps
and
popa
jmp
aas
or
xchg
ror
dec
das
push
ret
pop
stos
mov
mov
ror
fsubr
test
fucomp
adc
pop
push
xchg
cmps
sub
add
and
ja
(bad)
jmp
ja
adc
mov
xchg
push
popf
fdiv
push
stos
mov
in
lock
in
fisub
icebp
jbe
mov
dec
inc
mov
mov
mov
mov
int3
xchg
and
sub
adc
aad
jecxz
xor
push
mov
jae
test
mov
add
inc
xchg
push
inc
adc
pop
stos
mov
push
mov
push
lods
pop
cmp
ret
imul
inc
cmp
stc
push
push
pop
inc
out
add
mov
or
push
xor
add
xchg
jb
xchg
xor
dec
or
out
push
stos
in
test
pop
es
jle
pop
dec
push
aad
or
dec
jno
clc
add
fsub
push
push
test
sahf
test
call
nop
addr16
push
call
jbe
mov
sbb
mov
push
arpl
(bad)
data16
arpl
fidiv
test
inc
aas
mov
pop
inc
jo
pop
xchg
cmp
sub
call
mov
push
cli
enter
retf
setle
and
dec
adc
jle
pushf
push
mov
xchg
int
add
mov
inc
mov
jmp
cmp
mov
jg
mov
fild
(bad)
push
or
and
stc
cmp
pop
push
sbb
out
outs
call
out
push
adc
xor
lahf
lds
jno
in
fstp
sub
cmp
sbb
sub
pop
movs
loop
test
sbb
sbb
sbb
xor
(bad)
fs
or
push
loope
cmc
test
inc
je
fld
or
jg
ret
ficomp
or
jmp
dec
retf
xchg
je
rcl
movs
retf
xor
or
int
ins
fisubr
inc
fadd
jnp
pop
pop
sbb
nop
scas
mov
dec
leave
mov
rcr
ret
cmp
jbe
pop
push
out
scas
movs
mov
xchg
enter
cmp
fmul
add
iret
pop
cmp
push
xchg
adc
dec
cld
jecxz
ja
and
in
inc
mov
dec
iret
ins
mov
pop
icebp
mov
ins
mov
xchg
sbb
add
xchg
xchg
cmp
movs
jl
sub
mov
aas
cmp
fstp
popf
sub
or
mov
or
sub
pop
xor
inc
jns
sub
and
push
ins
or
mov
fisttp
sub
xor
maxps
cmp
movs
not
xor
and
addr16
or
adc
mov
push
fisttp
jb
push
mov
jae
xchg
jmp
ja
jg
jne
add
sahf
mov
xlat
mov
sub
cmp
cmp
inc
loopne
jb
das
fistp
jecxz
mov
aad
pop
sbb
leave
mov
or
and
dec
and
inc
inc
icebp
push
fisub
mov
ins
(bad)
int
test
movs
mov
(bad)
in
jecxz
neg
ss
adc
clc
lea
xchg
fcomp
inc
mov
mov
inc
(bad)
fmulp
lods
mov
mov
mov
lds
cdq
aad
ss
ror
xchg
stc
in
mov
inc
aas
push
aam
mov
leave
aad
xchg
dec
dec
jo
loop
js
aam
cmp
mov
pushf
(bad)
adc
mov
inc
jmp
iret
adc
adc
scas
jb
mov
scas
mov
(bad)
ret
outs
ja
xchg
xor
cmps
mov
out
std
div
inc
dec
rcl
cmp
ficom
fisttp
and
mov
sbb
xlat
(bad)
into
jne
stos
inc
int3
int3
sub
jg
ss
push
in
retf
jnp
mul
adc
ja
jae
push
adc
fcmovne
imul
inc
sbb
cmc
sub
dec
clc
sbb
push
or
fld
push
call
ins
xlat
cwde
push
mov
or
pop
xchg
push
dec
fisttp
pop
inc
mov
clc
test
pop
jecxz
nop
popf
cmp
leave
jnp
mov
mov
aad
pop
repnz
pop
mov
shr
out
lock
push
dec
pop
fstp
inc
les
and
es
push
add
test
jge
je
jmp
push
inc
stc
inc
mov
repnz
mov
fsub
or
mov
push
aad
fistp
fidiv
rol
ror
in
cmovne
in
loopne
push
fst
fild
mov
mov
stc
cmp
mov
jge
jl
push
inc
push
push
loope
jae
jne
jne
mov
repz
xchg
in
loop
sub
adc
movs
push
cli
push
inc
add
xchg
jbe
loopne
xchg
sar
test
lea
jp
in
adc
push
jge
push
cmps
jmp
and
jl
lahf
in
jp
aam
jne
fld
or
call
sti
lahf
pushf
arpl
rcl
add
sub
push
arpl
dec
mov
loopne
sub
xchg
add
jne
mov
inc
(bad)
fcomip
(bad)
loope
sub
sti
aas
ja
mov
mov
xor
mov
xchg
clts
xor
mov
cmp
(bad)
xchg
xchg
push
mov
dec
cmc
fnstenv
movs
jmp
xor
mov
lock
ss
je
xor
das
and
push
lods
xchg
lock
aad
aas
aas
jle
jnp
add
scas
push
sar
mov
jae
shl
mov
push
push
sar
jo
mov
push
mov
push
pop
ja
and
pop
cmp
inc
xchg
inc
fst
aad
jge
test
inc
out
mov
dec
lahf
sbb
push
in
adc
enter
sub
adc
jb
jne
out
iret
add
mov
mov
test
or
call
ficom
leave
push
out
jae
das
mov
popa
adc
and
cmps
ja
mov
pop
or
cmp
fbstp
arpl
jb
repnz
sysexit
sahf
cli
mov
or
mov
icebp
lods
(bad)
push
push
sahf
and
xor
stos
and
stos
or
ins
ins
repnz
dec
mov
dec
jne
loop
dec
jno
xor
pushf
mov
mov
aam
fnsave
fidivr
adc
or
into
xlat
mov
xchg
cmc
xor
lahf
xlat
xor
jp
mov
pop
das
fst
mov
mov
out
jnp
xor
cli
outs
(bad)
loop
xchg
fldenv
push
cmp
ror
cs
fisttp
outs
not
cld
jnp
(bad)
(bad)
je
xchg
sbb
cmp
push
sub
jne
sti
popa
mov
in
pop
or
pop
inc
jne
data16
cmp
cmp
shl
mov
bound
dec
dec
imul
xchg
mov
jge
xor
mov
lds
scas
gs
push
mov
sbb
mov
ror
jecxz
or
into
dec
f2xm1
ss
xor
cmc
leave
pusha
dec
repnz
mov
test
xor
test
push
jns
push
cs
mov
push
icebp
jmp
stos
nop
push
pop
mul
mov
dec
mov
sbb
cdq
push
xor
jge
repnz
lods
fsubr
jno
and
push
pop
mov
data16
(bad)
push
imul
add
fcmovne
cli
pop
lahf
leave
popf
shl
sub
push
mov
inc
pop
std
in
sub
cmp
cli
mov
setge
pop
rcl
int3
mov
mov
jne
enter
sbb
cmp
call
cmp
div
push
frstor
stc
jge
or
pop
jmp
fst
jmp
(bad)
ret
mov
out
lea
xchg
xchg
cmp
xor
pop
cmc
retf
lods
movs
scas
jne
sbb
cmp
push
add
aaa
popf
inc
mov
in
xchg
(bad)
xor
bswap
js
xchg
lods
in
je
mov
fs
mov
mov
jmp
aaa
aam
es
jmp
pop
pusha
popa
adc
ins
sar
xor
adc
cmp
xchg
dec
jbe
cld
daa
mov
pop
or
shr
icebp
mov
dec
jae
mov
jne
pop
jo
xchg
adc
ins
xor
push
dec
mov
xor
retf
ja
sbb
imul
sar
pop
mov
jecxz
das
and
add
pop
ret
mov
push
enter
cli
pop
pop
or
cmps
add
mov
cwde
push
dec
push
mov
add
shl
movs
in
jo
sub
fwait
mov
or
repz
and
jg
push
dec
jb
retf
loope
test
aas
sbb
call
sar
and
jbe
mov
xchg
out
mov
cmp
es
mov
ds
dec
inc
std
or
clc
mov
enter
pop
fistp
jmp
jmp
mov
in
int3
ret
cs
test
(bad)
stc
ret
adc
fdivr
lahf
retf
shl
xchg
sub
lds
lods
pop
mov
jo
sbb
or
cli
lds
nop
cmp
clc
call
test
loop
jo
cmp
cmps
jns
(bad)
push
movs
jmp
cmp
cmp
(bad)
pop
sbb
sub
mov
(bad)
mov
jmp
xor
mov
push
jmp
js
shl
(bad)
rcl
sbb
cmp
jg
movs
pop
adc
in
fld
jge
popa
xor
idiv
pop
(bad)
push
mov
ds
fwait
xor
jmp
cmps
push
mov
mov
mov
mov
jne
xchg
loop
push
inc
adc
add
push
pop
test
mov
mov
mov
sar
fild
js
in
mov
jno
jle
fst
bnd
out
iret
ror
xor
mov
mov
mov
clc
cmp
enter
mov
pop
loope
jnp
or
fild
fincstp
cvtdq2ps
out
imul
adc
aam
xchg
xor
pop
xor
out
mov
lods
test
push
xlat
clc
xor
arpl
(bad)
inc
out
retf
xchg
or
mov
fdiv
pop
mov
lahf
push
fs
pop
fidivr
loope
dec
jl
adc
jmp
cwde
cli
push
test
bound
fwait
inc
adc
ret
loope
pmuludq
sbb
sub
icebp
es
rcl
mov
adc
pop
dec
fldcw
pop
push
lea
mov
fsubr
in
dec
add
lea
or
push
add
or
imul
leave
sub
xor
out
jbe
movs
lods
xchg
pushf
push
push
inc
or
mov
mov
call
mov
and
dec
or
push
cmp
sti
xor
or
cdq
push
scas
jne
add
scas
sbb
xchg
mov
out
mov
sub
ss
in
fldenv
adc
ficomp
mov
fstp
xchg
mov
pop
es
ja
pop
int3
out
xchg
xchg
mov
mov
fcomp
mov
iret
not
xchg
(bad)
adc
and
in
iret
scas
imul
cmps
mov
and
adc
mov
popf
xchg
xchg
jge
shl
in
into
push
jns
push
sub
call
dec
les
stc
out
jg
stc
out
jmp
lock
js
cld
mov
in
int
add
add
dec
inc
dec
inc
scas
inc
pusha
or
add
add
add
(bad)
(bad)
inc
add
add
add
add
add
add
jns
je
ins
cs
jb
ja
outs
addr16
push
gs
imul
xor
xor
inc
jne
je
jb
cmp
jb
ins
sub
push
jne
ins
imul
imul
bound
xor
data16
xor
fs
add
adc
gs
cs
jb
ja
outs
addr16
imul
add
popa
je
pop
add
add
add
add
add
lsl
add
mov
mov
inc
or
add
or
add
add
add
add
or
add
add
pusha
outs
rol
add
add
inc
dec
inc
add
mov
or
popa
add
jo
pop
jae
add
ret
add
push
ret
add
outs
test
add
adc
inc
inc
push
pop
inc
in
rol
add
shl
fstp
fistp
jmp
std
rcr
sbb
mov
(bad)
fidiv
out
icebp
out
stc
or
add
dec
jmp
xor
inc
mov
stos
out
iret
add
pop
mov
test
add
lds
stc
das
xchg
fisub
fidiv
lea
repz
ret
inc
lahf
enter
popf
pop
cmc
fcom
dec
cmp
xor
pushf
cli
jl
lock
xlat
xchg
xlat
je
xchg
cmp
jge
xchg
and
push
cld
inc
pushf
dec
push
push
mov
test
adc
repnz
stos
inc
adc
add
out
das
sub
or
mov
or
jp
mov
mov
aaa
movs
sbb
test
std
clc
mov
sbb
cwde
ret
or
push
and
adc
scas
je
(bad)
(bad)
(bad)
xor
inc
stos
dec
rcl
mov
fldcw
cmp
rol
cs
sbb
leave
push
aaa
dec
gs
push
xor
add
movs
jb
sub
mov
jno
test
out
nop
clc
pop
mov
inc
ds
mov
or
sbb
in
movs
call
lds
leave
retf
ss
aas
sbb
das
cli
adc
mov
js
(bad)
push
xchg
mov
jb
mov
mov
cmp
mov
fld
imul
out
xchg
jge
mov
mov
inc
dec
out
loopne
pusha
add
je
push
scas
imul
pop
clc
and
sbb
js
and
dec
(bad)
aad
mov
sub
jbe
sbb
mov
in
push
push
outs
aam
pop
cli
pop
add
pop
push
mov
inc
data16
jae
fs
sbb
(bad)
popf
sub
shl
push
jmp
rcl
jp
fidivr
aad
push
dec
(bad)
ins
mov
popaw
pushf
cmp
push
and
mov
mov
fs
sti
dec
push
dec
ret
(bad)
pop
hlt
std
jmp
pushf
inc
adc
dec
sbb
add
(bad)
mov
cmps
dec
stos
shr
ss
dec
push
mov
add
ds
enter
adc
sub
jle
hlt
push
and
cmp
sub
sub
loope
repnz
shl
test
pop
(bad)
and
pushf
(bad)
lahf
arpl
mov
jge
pop
lods
pop
or
out
out
add
and
idiv
mov
(bad)
fimul
mov
sbb
(bad)
xor
mov
enter
(bad)
and
stos
push
xor
lds
cmp
pop
das
xchg
retf
imul
inc
mov
add
bound
fcomip
ins
pop
nop
cwde
fs
mov
pop
mov
jmp
test
inc
mov
sub
inc
push
jge
xchg
cwde
push
cs
push
inc
shufps
cs
and
int
adc
mov
mov
xchg
movs
cmp
or
fisttp
call
push
sbb
xchg
adc
sbb
push
leave
inc
mov
dec
fist
xor
adc
cmp
xor
repnz
movs
dec
jg
adc
jl
mov
xchg
fisttp
pop
xchg
retf
jge
push
cmp
jmp
push
pop
rcl
mov
hlt
cmp
out
xor
lock
pop
(bad)
push
or
test
aad
xor
fdiv
mov
fnstenv
sub
test
mov
sbb
cmp
dec
jle
pop
push
dec
fcomp
jle
fnsave
adc
pop
mov
xor
sbb
pop
daa
xchg
cmp
retf
shl
repnz
adc
mov
and
mov
fsub
ja
jbe
lods
and
imul
aam
or
fwait
and
ret
sbb
cmp
fistp
sysexit
add
dec
gs
xor
pop
fidiv
aaa
div
shl
std
and
mov
(bad)
aas
or
repnz
out
xor
scas
test
jnp
jmp
jle
inc
mov
and
inc
add
out
das
adc
push
dec
add
pop
inc
aas
std
mov
cmp
(bad)
inc
fidivr
and
aas
pusha
xchg
mov
push
or
scas
jg
xor
push
and
sbb
lods
into
call
lods
inc
sbb
xor
pop
clc
lock
cmps
clc
xchg
or
sahf
sahf
stos
int3
push
je
adc
inc
test
mul
arpl
repz
mov
inc
jp
xlat
sar
std
sub
jp
xchg
mov
jns
adc
xor
dec
ins
sub
jp
pop
std
movs
jmp
ja
jl
rol
out
jmp
xchg
jmp
adc
das
sbb
out
sub
in
xor
xchg
cmc
ins
push
pop
adc
enter
enter
pop
inc
ins
mov
push
std
cmc
int3
cmp
es
lods
test
xchg
jae
or
sbb
into
jmp
out
xor
mov
cmc
mov
xor
sub
mov
jb
dec
(bad)
not
cmp
and
loope
xor
aas
xor
sbb
pop
jo
les
add
mov
inc
and
jae
xchg
outs
outs
lahf
sbb
cmp
jae
test
add
mov
dec
mov
cld
scas
bound
jbe
jbe
aas
call
mov
(bad)
fild
adc
ins
and
lock
nop
clc
es
mov
pop
fisub
push
cmp
jbe
movs
int
cmp
sbb
ja
and
xor
cld
out
pushf
mov
push
jns
iret
mov
dec
data16
fmul
add
sub
xchg
mov
sbb
or
mov
jo
outs
jb
push
jmp
inc
mov
add
sbb
inc
jecxz
cmp
xor
jle
arpl
push
stos
xor
cmp
add
stos
bound
push
hlt
ds
and
jnp
dec
inc
pop
xchg
xchg
xlat
scas
stos
shl
lods
loop
pop
jge
aas
inc
rol
jg
sub
adc
cmp
xor
xchg
adc
push
push
icebp
popf
pop
and
in
inc
xchg
mov
push
imul
adc
xor
sar
sbb
mov
enter
xchg
jo
push
je
cdq
lds
repnz
mov
push
(bad)
into
dec
xchg
pushf
clc
and
cmps
aam
pop
pop
jmp
xchg
sbb
ds
cmp
imul
push
dec
and
xchg
pop
lods
jl
into
in
xchg
rcr
popf
stc
fdivr
lea
je
movs
mov
cmps
pop
mov
popf
test
dec
xchg
push
stos
sar
mov
xchg
sbb
das
fld
mov
fild
and
inc
cmp
dec
daa
mov
adc
call
sub
adc
clc
inc
or
mov
cmp
cmp
loop
stos
aas
xchg
pop
shl
jl
and
or
cmp
dec
add
dec
xchg
mov
inc
dec
sbb
fxch
mov
leave
movs
lds
inc
xor
ret
mov
js
fwait
leave
mov
xor
jl
xchg
jge
pop
sub
or
addr16
mov
mov
jns
add
daa
enter
jne
xor
xor
shl
xchg
sbb
in
mov
sub
adc
adc
add
sbb
mov
jg
int
xchg
dec
xor
jb
ds
fld
icebp
push
cmps
mov
adc
(bad)
scas
push
or
mov
jbe
and
ins
dec
movs
lahf
sub
lds
jns
inc
pop
and
popf
stos
xor
jno
fucomip
push
repnz
cmp
sar
aam
dec
xchg
push
aad
push
mov
in
xchg
cmps
inc
mov
les
sahf
pop
mov
mov
jb
adc
neg
jo
stos
imul
pop
int3
mov
test
jge
jbe
rol
mov
in
dec
xor
(bad)
mov
stc
lods
les
lods
js
fwait
sub
mov
pop
mov
push
jne
jp
adc
aaa
into
loope
inc
push
mov
(bad)
call
aam
xlat
xor
jns
and
dec
mov
cmp
cmp
dec
mov
jno
int3
jmp
push
cdq
pextrw
test
push
pusha
and
mov
mov
mov
mov
fst
imul
pop
xchg
(bad)
loope
xchg
xor
inc
movs
sbb
icebp
fild
mov
dec
add
aaa
mov
sub
int
arpl
test
xor
sbb
or
ja
stos
fdivr
and
jmp
lods
xchg
cmc
dec
sub
call
xchg
test
xchg
nop
cmp
outs
aam
bswap
xor
popa
cmc
(bad)
xlat
push
jecxz
or
push
aam
in
jne
and
inc
or
sbb
jne
aaa
sbb
std
push
repnz
pop
repz
std
mov
(bad)
pop
adc
dec
push
stos
fidiv
pop
mov
pusha
pop
jecxz
jns
fimul
mov
mov
or
cmp
mov
icebp
adc
mov
mov
imul
ins
scas
pusha
(bad)
xlat
inc
out
lock
ficom
xchg
sub
mov
sbb
outs
icebp
cmp
mov
es
xchg
sub
movs
cmps
lods
xchg
push
inc
add
lods
into
sar
mov
xor
push
fsubr
dec
mov
popa
mov
xor
lds
xchg
das
dec
pop
cmps
aad
fucomip
dec
cwde
or
cmp
mov
sbb
dec
shl
add
mov
mov
mov
dec
sti
fisub
push
dec
push
mov
mov
fcomp
jne
xchg
sti
aad
and
add
jl
out
add
mov
movs
fwait
call
xlat
and
jl
pop
mov
mov
out
(bad)
std
xor
fcmovnb
xor
in
sahf
aad
add
cmp
sti
call
push
mov
mov
fcmovb
into
jne
gs
push
int
pop
push
mov
stos
pop
mov
sar
xor
(bad)
sub
int3
xchg
int
push
out
ret
mov
out
mov
ins
push
out
retf
stos
add
(bad)
mov
push
xor
ror
pushf
jecxz
repz
mov
inc
int
retf
push
jno
sub
or
pop
pop
sahf
and
dec
ret
or
out
mov
push
pop
push
sub
xchg
and
dec
repz
mov
aam
sub
or
lds
rcr
push
adc
xchg
movs
std
add
push
sahf
sbb
push
iret
jg
shl
jmp
jns
jp
vpsrlw
imul
cmp
sbb
push
sbb
inc
mov
outs
cli
popa
sbb
add
jle
fcomp
loope
lahf
fcmove
stos
loopne
add
inc
or
imul
pusha
jmp
fisttp
fdivr
mov
popa
out
retf
pop
ror
adc
sbb
mov
out
fucom
jae
outs
loop
push
mov
(bad)
jecxz
(bad)
rcl
and
mov
jmp
cmp
stos
stos
cmp
cmps
jbe
stc
mul
pop
not
cmp
in
fistp
fild
adc
xor
mov
in
pop
fcom
jnp
dec
sbb
sbb
add
rol
fsubp
int3
ss
call
xchg
dec
cmc
mov
pop
ins
xchg
adc
iret
rcr
pop
cwde
scas
inc
mov
sbb
(bad)
dec
jge
or
xchg
xor
mov
test
cld
push
mov
inc
or
mov
sbb
xchg
and
je
(bad)
sub
cwde
cwde
repnz
push
jns
mov
(bad)
imul
loop
daa
mov
aam
mov
fisubr
or
popf
mov
mov
ret
aas
arpl
inc
mov
das
call
push
or
pop
pop
rcr
lods
mov
add
in
out
and
in
aad
in
inc
mov
mov
push
push
nop
iret
ret
retf
adc
(bad)
mov
mov
push
addr16
scas
add
movs
sub
imul
(bad)
ret
mov
pop
ins
adc
imul
lods
sub
and
dec
pop
into
aas
ds
or
sbb
jnp
add
neg
jno
pop
push
ds
fld
dec
pop
mov
and
in
outs
cwd
xchg
leave
shl
(bad)
adc
jmp
mov
jg
ds
mov
lea
xchg
popa
jmp
inc
push
iret
ins
jmp
mov
add
daa
enter
int3
js
and
jae
loopne
jp
lods
xchg
and
and
pop
push
mov
push
xchg
xor
add
xchg
mov
es
das
popa
gs
xor
ds
neg
sub
dec
jnp
sti
ficom
daa
stc
in
jno
test
push
rol
(bad)
out
daa
ds
jnp
jb
xchg
aad
imul
scas
std
test
arpl
aaa
enter
rcl
into
xlat
stc
adc
in
cmp
aaa
and
and
pop
xor
arpl
dec
mov
jo
mov
pop
cmp
rol
neg
jbe
mov
add
mov
test
xor
ficom
push
ins
push
mov
daa
lock
outs
xchg
mov
jp
rcl
sbb
out
shl
jo
cli
mov
add
pusha
mov
(bad)
mov
cmp
jl
lods
sub
xchg
mov
lea
sbb
in
pusha
scas
(bad)
cwde
shl
jb
add
movs
loope
mov
xchg
inc
std
pop
add
dec
cwde
hlt
cmp
cmps
lds
sub
push
xchg
imul
mov
sahf
idiv
cs
mov
push
pop
neg
mov
(bad)
jl
add
jg
lock
ss
aaa
inc
stc
imul
sbb
add
mov
clc
test
inc
shr
loop
(bad)
test
sti
push
dec
or
scas
repnz
sbb
outs
fisttp
movs
mov
pop
xor
inc
dec
dec
mov
popf
pop
(bad)
adc
push
or
cmp
add
(bad)
mov
xor
lock
pop
sbb
inc
xor
jmp
mov
and
out
jle
pop
jns
jb
inc
jo
pop
je
gs
push
ror
mov
ins
mul
sti
xor
xor
cmp
xor
jl
dec
cld
gs
mov
in
shr
cmp
mov
or
or
dec
cwde
int
add
or
iret
es
mov
lahf
dec
jnp
mov
xlat
mov
pop
inc
sub
retf
xchg
jmp
jne
mov
call
aam
dec
ja
out
xchg
inc
or
xchg
div
xor
int3
lahf
cmp
mov
sub
leave
and
jb
mov
mov
gs
mov
imul
es
dec
jecxz
pusha
dec
das
lods
push
or
scas
aas
pop
jg
lods
stc
sbb
sbb
jbe
(bad)
cmps
push
inc
or
enter
movs
enter
mov
scas
icebp
xchg
inc
out
xor
jge
call
cmp
jmp
jno
and
mov
sti
push
cmps
lock
adc
out
mov
jmp
scas
sahf
das
outs
cmps
repnz
xor
cmp
lods
xor
and
sbb
inc
jns
pop
leave
xlat
add
clc
add
mov
imul
cmp
sub
cmp
mov
mov
mov
mov
das
sub
pusha
cdq
inc
out
lock
aas
(bad)
cld
repz
aas
(bad)
cld
repz
add
aas
sub
stc
sbb
or
add
dec
inc
dec
inc
scas
inc
pusha
or
add
add
add
(bad)
(bad)
inc
add
add
add
add
add
add
jns
je
ins
cs
jb
ja
outs
addr16
push
gs
imul
xor
xor
inc
jne
je
jb
cmp
jb
ins
sub
push
jne
ins
imul
imul
bound
xor
data16
xor
fs
add
adc
gs
cs
jb
ja
outs
addr16
imul
add
popa
je
pop
add
add
add
add
add
lsl
add
les
add
add
or
or
add
or
add
add
add
add
or
add
add
pusha
outs
rol
add
add
inc
dec
inc
add
mov
or
popa
add
jo
pop
jae
add
ret
add
push
ret
add
outs
test
add
adc
inc
inc
push
pop
inc
in
(bad)
test
fmul
jbe
jmp
ds
je
xlat
hlt
in
rcr
xor
push
shl
pushf
fsub
jmp
clc
in
stc
inc
mov
sahf
add
lahf
les
fdiv
dec
mov
xor
ret
xchg
ss
pop
in
ja
mov
ss
mov
lahf
or
push
push
stos
je
pop
sub
js
and
push
jmp
dec
out
jne
aam
dec
das
icebp
je
lock
pop
or
jno
nop
call
xor
call
pop
push
imul
es
mov
mov
mov
test
jae
loope
pop
cmp
sub
jecxz
fs
and
jns
lahf
cld
in
jno
cmp
retf
out
lods
sub
push
mov
add
xor
or
cld
sbb
cmp
jns
fs
repnz
push
xchg
jg
cmp
xor
imul
ds
retw
xchg
inc
outs
test
movs
ror
shl
aad
stc
aam
dec
jae
rol
fdivr
cs
fdivr
repz
aas
add
or
(bad)
ins
cmp
mov
add
sub
(bad)
int3
mov
mov
add
mov
ss
aaa
and
xor
inc
jo
xor
fwait
pop
inc
jb
mov
outs
fmul
gs
sbb
repz
shl
movs
sub
gs
dec
dec
push
xchg
movs
das
mov
popa
pop
test
inc
push
out
mov
inc
xchg
or
arpl
push
adc
stos
jp
aam
les
sbb
mov
xchg
push
and
jae
retf
mov
shr
iret
add
xor
jmp
xchg
xchg
stos
or
jb
xchg
pop
dec
cmp
popf
pop
int
sub
jp
mov
dec
mov
cli
arpl
jp
scas
out
in
imul
daa
les
mov
add
mov
jge
into
mov
cmp
das
bound
mov
pop
push
xchg
and
pop
xor
adc
and
stc
rcl
add
out
mov
push
lds
mov
xchg
and
and
test
retf
jg
mov
mov
nop
dec
adc
bound
xchg
test
lea
(bad)
and
pop
adc
mov
lds
call
ss
inc
scas
pusha
lahf
aad
es
fucomip
js
adc
rcl
and
sbb
pusha
sub
fcom
and
(bad)
jnp
or
push
fist
mov
mov
jbe
xor
jge
(bad)
xor
cmp
int
xor
aas
and
sub
mov
xlat
fmulp
(bad)
rcl
xchg
mov
jns
loopne
jmp
inc
int3
jno
jp
retf
inc
jg
fiadd
mov
jg
mov
into
mov
push
test
sti
inc
cmp
cmp
xor
inc
pop
pop
pop
xchg
push
arpl
xor
jae
into
(bad)
popa
mov
rol
outs
pop
cmp
sbb
mov
out
adc
adc
or
and
repz
cmps
cmp
adc
sub
and
xchg
pop
loopne
xchg
ja
ret
fld
lods
add
xor
daa
inc
mov
mov
or
push
adc
stos
jl
inc
dec
(bad)
sti
mov
sti
sbb
cmp
and
loope
push
add
enter
jmp
push
jns
jae
ja
sbb
mov
into
lods
ds
bound
jle
sub
push
mov
mov
mov
ss
(bad)
rcl
fs
leave
daa
stc
mov
aaa
pop
bound
or
fld
call
rcr
sub
(bad)
sub
aad
addr16
push
jb
sar
dec
mov
push
cmp
mov
sti
mov
fs
cli
mov
pop
outs
jmp
repnz
add
dec
gs
jne
in
ins
pop
inc
(bad)
or
dec
pop
call
cmps
lods
or
cs
jnp
adc
not
and
iret
and
and
inc
sbb
dec
xchg
shr
push
iret
inc
add
je
not
shr
mov
xchg
pop
jo
loopne
sub
iret
sti
ins
or
mov
inc
lds
iret
out
inc
xor
inc
and
lods
rcl
pop
outs
sub
and
lahf
mov
ret
adc
pop
dec
and
jle
lods
mov
repz
std
ja
cmps
push
mov
inc
(bad)
mov
pusha
mov
ret
sub
sbb
cld
ds
inc
inc
mov
push
lea
icebp
jecxz
jle
in
sbb
xchg
push
call
xlat
pop
bound
lahf
adc
jae
(bad)
push
addr16
cvtps2pd
enter
xchg
push
shr
push
or
mov
sbb
cmps
inc
leave
add
sub
fadd
jl
imul
jns
out
cmp
cld
ins
mul
outs
fcmovu
mov
aaa
push
enter
fs
(bad)
inc
cmps
ret
cmp
test
and
dec
xor
jbe
or
cld
rcr
mov
pop
cmp
xchg
je
mov
adc
jl
push
not
repz
popf
cmp
repnz
mov
aad
jbe
add
scas
jnp
into
aaa
adc
ds
sub
mov
daa
mov
jbe
pop
mov
sbb
ds
cli
xlat
jge
dec
fiadd
pusha
(bad)
fstp
mov
inc
fld
loope
ins
neg
jecxz
enter
jmp
push
(bad)
loope
add
stos
(bad)
mov
popf
sub
out
fimul
ficomp
sahf
sti
xchg
shl
sti
cdq
aas
xchg
jge
pop
(bad)
and
pop
push
movs
inc
pop
test
push
add
mov
outs
stos
mov
inc
ret
aas
sbb
jmp
mov
or
movs
or
mov
fcom
mov
adc
push
add
paddusw
into
or
cmp
jo
mov
repnz
push
out
jne
call
fcom
imul
sub
je
xchg
push
mov
es
pop
jle
jmp
pop
out
jb
xor
mov
jge
(bad)
dec
push
fisttp
push
pop
xchg
add
sbb
push
mov
xor
les
dec
pop
fadd
mov
scas
inc
and
loopne
jg
shr
ja
adc
rcl
xchg
stc
sub
inc
pop
(bad)
jno
out
std
mov
fistp
sub
cmp
push
cmp
or
aaa
cli
les
xlat
mov
push
rcr
dec
cld
mov
nop
dec
cli
mov
test
dec
xchg
mov
retf
nop
retf
and
jecxz
jne
and
test
xchg
mov
dec
movs
std
mov
cmp
mov
dec
pop
jbe
mov
loop
out
jmp
pop
into
hlt
les
pop
stos
les
pop
push
inc
in
loopne
outs
jne
mov
fwait
les
inc
push
sahf
aas
pushf
mov
mov
xor
(bad)
jl
clc
mov
mov
inc
stos
and
iret
add
jmp
cmps
pop
dec
mov
loop
adc
adc
rcl
ja
xchg
or
jo
sar
(bad)
cwde
and
aad
rol
or
addr16
or
or
jb
es
pop
push
scas
loop
loopne
inc
cli
mov
fimul
fwait
sub
aas
rcl
loopne
std
loope
lds
dec
mov
pusha
in
sub
push
jb
push
jg
cwde
add
(bad)
(bad)
cwde
push
mov
xchg
call
clc
loopne
inc
pusha
aad
loope
test
ins
jecxz
lea
mov
pop
xchg
int
fisttp
sbb
mov
xor
test
inc
aad
retf
push
xor
stos
sar
and
pop
push
jmp
xor
cmp
mov
stc
cmp
dec
lock
cmps
sbb
int3
ds
xchg
(bad)
repnz
cld
imul
inc
mov
mov
stos
or
fist
aad
lds
jp
sub
ds
call
jmp
pop
add
icebp
pop
sbb
stos
cs
or
mov
sub
dec
inc
or
or
xchg
popa
and
into
(bad)
mov
(bad)
in
adc
push
lods
sub
(bad)
mov
jecxz
xlat
xchg
pop
mov
cs
ins
sub
pop
fwait
dec
aas
mov
call
jle
add
pop
mov
inc
movs
inc
mov
mov
xor
aas
cmp
test
jbe
ins
inc
mov
mov
data16
cld
mov
and
retf
mov
cmp
packsswb
popf
xor
push
cmp
and
xchg
sbb
xchg
adc
and
ins
fsubr
mov
clc
mov
outs
add
popf
jbe
mov
xchg
push
sub
xchg
mov
sub
repz
dec
xor
stos
dec
int
std
mov
or
dec
jmp
in
inc
icebp
dec
icebp
int3
(bad)
mov
fild
mov
cmp
adc
js
popa
push
jle
idiv
(bad)
sahf
cmp
xor
loopne
rol
inc
leave
cmc
repz
int
and
xlat
mov
mov
cmps
pop
movs
jo
or
mov
jmp
stos
xchg
add
jns
fsubr
mov
fild
mov
xchg
xchg
adc
inc
mov
ret
lods
das
xchg
mov
sbb
pop
in
jae
push
outs
(bad)
in
mov
aaa
arpl
or
jle
pop
push
push
jno
std
cmp
shl
xor
pop
pop
mov
movs
mov
repz
xor
stos
ds
aaa
or
adc
ud2
mov
add
ja
dec
adc
xchg
adc
rcr
cmp
cmp
dec
mov
outs
dec
xor
fwait
mov
imul
mov
test
xor
ret
pop
push
push
xor
xor
or
push
fwait
mov
int
dec
(bad)
xor
call
push
jle
sbb
jmp
inc
and
jp
xchg
and
test
iret
ret
add
int
mov
sub
adc
lods
jl
imul
add
lahf
scas
ret
fistp
sbb
sbb
inc
cmp
pop
or
fisttp
add
ss
mov
and
cmc
push
xchg
jne
icebp
inc
adc
ret
xchg
in
iret
retf
test
test
daa
sub
adc
stos
test
lahf
les
add
sbb
push
cld
pop
cmp
push
mov
xchg
sub
cdq
add
mov
in
test
and
push
mov
int
test
xchg
in
cmp
add
cmp
inc
test
jmp
das
leave
and
pop
in
pop
nop
lock
push
add
hlt
test
dec
ins
mov
call
jbe
and
aas
loopne
test
inc
mul
lock
fistp
dec
and
mov
and
not
inc
cmc
mov
xchg
popf
shl
repnz
mov
push
dec
rol
sbb
leave
xor
repz
push
lods
mov
das
xchg
xchg
or
ins
xchg
sub
mov
add
ins
fild
sbb
or
push
sbb
adc
cmp
je
retf
nop
test
inc
jmp
fptan
xor
(bad)
icebp
jb
xchg
(bad)
xor
or
mov
(bad)
adc
scas
retf
sbb
jecxz
cmp
inc
cs
imul
mov
movs
push
sahf
popf
mov
mov
adc
jmp
aas
repz
or
jp
cld
(bad)
mov
or
ins
cmp
dec
mov
mov
outs
xor
int
mov
sub
adc
dec
mov
bound
loope
mov
gs
pop
xchg
push
or
and
popa
into
xchg
hlt
out
jo
out
and
daa
or
sahf
mov
in
jno
push
pop
push
add
xor
jg
cmp
mov
dec
stc
addr16
mov
pushf
ins
jecxz
dec
sub
and
in
push
fwait
dec
imul
adc
(bad)
add
xchg
sub
xor
scas
stos
mov
popf
cwde
lahf
scas
push
aaa
xchg
mov
adc
div
jmp
shr
ds
add
fcmovne
idiv
pushf
inc
xchg
push
daa
dec
aas
mov
movups
rol
dec
jae
pushf
inc
sbb
jge
jo
push
addr16
sbb
stos
jo
shr
stos
shr
gs
fs
ret
mov
cmps
and
into
push
jp
pop
xchg
and
mov
push
dec
push
mov
mov
data16
adc
dec
(bad)
dec
dec
cmp
mov
xchg
mov
push
aad
imul
cmp
add
repnz
mov
test
(bad)
mov
div
xlat
cmps
adc
out
jne
inc
pand
in
in
outs
sahf
xor
jp
pop
ins
cmps
jmp
xor
addr16
or
ss
jl
xor
stos
jmp
stos
add
and
or
sbb
shr
and
sbb
jle
sub
mov
mov
ja
or
pop
sbb
inc
lahf
cdq
movs
xlat
or
nop
sub
(bad)
fdivr
cmp
fdivr
mov
adc
repnz
addr16
sbb
fild
sbb
aas
fs
add
movs
push
adc
fsub
jmp
sbb
jl
popf
jmp
xor
loope
cmc
dec
pop
int
inc
pop
(bad)
cmp
xlat
pop
jle
lahf
cmp
dec
mov
mov
jbe
ins
mov
fidivr
lock
ja
cld
lods
ret
add
inc
adc
mov
jp
repnz
ja
pop
cmp
outs
sbb
pop
mov
outs
sbb
jns
fistp
mov
adc
test
xchg
inc
shl
sbb
je
mov
add
dec
sbb
jmp
(bad)
adc
pop
stos
jg
mov
aas
out
lods
cmp
mov
fwait
or
gs
xor
jb
retf
cmc
retf
fild
cli
repz
jo
sub
push
xor
loopne
js
xchg
xor
xchg
sub
sbb
push
cld
push
jecxz
mov
xor
lods
popf
or
pop
adc
stos
or
mov
mov
mov
xor
mov
cmps
ret
xor
hlt
sar
stos
push
mov
(bad)
stc
sub
mov
xor
retf
scas
fucomp
mov
pop
sti
fsubr
icebp
iret
out
sbb
inc
add
inc
dec
mov
push
sbb
mov
sti
push
aas
and
xchg
mov
push
mov
ret
mov
rcl
ds
out
cmp
rol
mov
ret
mov
test
sbb
mov
xor
adc
pop
add
mov
lock
into
loope
adc
mov
mov
cli
sbb
repz
mov
sti
pop
mov
in
sar
repz
dec
fcomip
std
push
sahf
rcl
push
cmp
push
mov
adc
popf
dec
popa
out
loopne
sub
mov
aas
mov
push
out
xor
xchg
pop
aad
lock
fsubr
and
sbb
cmp
and
mov
lods
jbe
sub
xor
jno
das
jle
push
enter
leave
add
sbb
fcom
push
xchg
out
xor
jnp
cmps
sbb
pop
outs
pop
jecxz
lods
push
les
stc
and
sub
imul
aaa
icebp
add
jle
pop
repnz
rol
clc
out
jg
stc
out
jg
stc
jg
add
femms
push
jnp
cld
stc
mov
inc
dec
inc
scas
inc
pusha
or
add
add
add
(bad)
(bad)
inc
add
add
add
add
add
add
jns
je
ins
cs
jb
ja
outs
addr16
push
gs
imul
xor
xor
inc
jne
je
jb
cmp
jb
ins
sub
push
jne
ins
imul
imul
bound
xor
data16
xor
fs
add
adc
gs
cs
jb
ja
outs
addr16
imul
add
popa
je
pop
add
add
add
add
add
lsl
add
lds
add
add
or
or
add
or
add
add
add
add
or
add
add
pusha
outs
rol
add
add
inc
dec
inc
add
mov
or
popa
add
jo
pop
jae
add
ret
add
push
ret
add
outs
test
add
adc
inc
inc
push
pop
inc
in
(bad)
pop
and
pop
add
scas
cdq
mov
fisubr
pop
mov
cmp
xchg
sbb
outs
fstp
daa
out
dec
data16
cmp
pop
addr16
dec
sti
js
lahf
push
icebp
add
ficomp
(bad)
sbb
lea
enter
mov
ins
and
push
jecxz
mov
pushf
dec
pop
sti
fcmovbe
mov
sahf
je
aaa
aaa
mov
es
fist
xchg
scas
sub
and
in
lahf
sbb
sbb
lds
jae
cs
sub
mov
lods
das
mov
fisub
fimul
aad
test
retf
out
popa
in
ins
fs
fld
xchg
add
ins
pop
inc
aaa
pop
gs
imul
dec
mov
inc
pop
inc
or
call
xchg
mov
ins
loope
inc
mov
jl
fcom
hlt
fist
mov
and
pop
sbb
std
inc
stos
les
bound
out
sub
lock
jo
into
xchg
cmp
fist
or
dec
mov
add
scas
pushf
pop
inc
into
in
adc
mov
call
add
push
aaa
inc
call
movs
ja
nop
icebp
fwait
cmp
push
mov
enter
enter
xchg
dec
sub
mov
in
sub
mov
jle
retf
loope
jg
loope
and
data16
cmp
jnp
(bad)
iret
in
icebp
sub
cmp
neg
retf
lock
aad
cdq
lods
lods
test
sti
sub
push
push
fsubr
xchg
inc
xchg
xchg
jmp
loope
mov
mov
push
jmp
pop
dec
leave
dec
mov
in
(bad)
cmps
(bad)
xor
mov
push
in
icebp
add
sub
jmp
pop
lahf
mov
cld
xchg
loop
out
jmp
not
mov
mov
dec
push
out
jecxz
jmp
mov
pop
inc
iret
mov
scas
test
or
(bad)
les
jg
jns
lock
xchg
pop
jnp
xlat
xor
es
test
xchg
icebp
movs
dec
loop
jne
fnstsw
push
out
sbb
sbb
mov
mov
ror
hlt
fbld
mov
xchg
in
sar
inc
inc
push
or
movs
out
in
cdq
aam
shl
scas
sti
popf
rcl
mov
push
mov
nop
cmp
inc
mov
test
outs
int3
outs
popa
cmp
sub
imul
lock
or
mov
test
outs
xor
jmp
call
test
mov
push
add
retf
inc
punpckldq
cmp
sbb
test
dec
in
mul
mov
add
xchg
ins
ror
xchg
and
sbb
sub
adc
lds
jl
pop
loopne
mov
pushf
xchg
pushf
pushf
or
icebp
adc
aad
daa
or
adc
mov
cmc
pop
jne
popf
mov
xchg
mov
and
fdiv
aaa
inc
pop
adc
dec
dec
data16
mov
cmp
lahf
jg
hlt
inc
push
loop
dec
pop
dec
in
jle
mov
fwait
shl
ret
das
repz
add
sar
scas
int3
xchg
dec
mov
adc
test
xchg
xchg
lds
sub
das
cmp
shl
mov
pop
xchg
cmp
(bad)
gs
ds
adc
push
dec
add
cld
retf
lock
mov
in
out
adc
fild
push
hlt
inc
fnsave
dec
rcl
ins
sti
sub
xchg
mov
jge
add
sti
jge
cdq
mov
add
xchg
sbb
mov
inc
xor
adc
mov
dec
pop
out
xor
addr16
call
jge
int
mov
jge
xchg
inc
pop
adc
ror
stos
xor
clc
xor
cmp
fsubr
or
in
cmps
jb
jne
jno
ins
adc
fld
jne
and
rcr
mov
inc
cmp
adc
mov
cmp
dec
ins
dec
pop
ins
xor
push
mov
outs
or
gs
into
int3
pop
and
scas
fadd
subps
(bad)
fisubr
mov
jne
icebp
stos
add
cs
push
mov
mov
jp
mov
int
fcomi
lods
push
or
sbb
lods
pop
xchg
jp
imul
ret
loopne
mov
cwde
inc
loop
icebp
mov
into
dec
out
cdq
xchg
jl
loopne
std
addr16
in
out
cdq
int3
jne
add
and
push
jns
xlat
clc
enter
adc
(bad)
sbb
jle
push
cwde
dec
jl
mov
out
add
inc
sub
loop
sar
sbb
jmp
les
pusha
sub
and
jbe
icebp
mov
adc
rol
or
push
sub
mov
stc
js
fisubr
rcr
mov
pop
pop
(bad)
fist
sbb
jl
pop
sbb
sub
repz
inc
add
nop
pop
or
jmp
cmps
cmp
daa
ret
(bad)
mov
retf
cmp
ins
mov
rcr
outs
hlt
sbb
cmps
call
jno
xor
dec
mul
xor
and
mov
cmp
inc
xlat
mov
pop
xor
ror
dec
jecxz
jg
scas
fist
ficomp
cmps
bound
loopne
adc
and
mov
adc
test
(bad)
adc
js
cld
inc
push
loope
in
sbb
pop
xchg
fucomip
pop
jg
jo
or
lds
fidivr
in
dec
xor
ins
pop
stos
pop
neg
(bad)
push
test
add
push
jbe
pop
rol
stos
cmp
jno
cmp
or
repz
sub
sti
rcl
pop
ja
jle
jnp
pop
jns
into
jnp
inc
dec
inc
ror
adc
repz
(bad)
enter
popf
popf
repz
fadd
xchg
nop
or
xlat
jle
(bad)
pop
adc
jae
mov
cs
idiv
movs
xchg
fadd
push
dec
jle
nop
push
repnz
bound
adc
loope
test
gs
inc
mov
push
mov
jnp
adc
mov
xchg
mov
push
fmul
icebp
je
push
je
push
shr
mov
imul
arpl
mov
mov
mov
sub
jg
adc
repz
lahf
add
(bad)
into
or
sbb
mov
inc
and
xchg
or
push
test
jno
push
aaa
push
mov
je
xor
sar
xor
push
adc
xchg
sbb
lds
gs
pop
jg
ja
xchg
dec
test
sbb
sub
sbb
fsubr
or
pop
mov
scas
mov
push
xchg
jge
lock
cmc
int
(bad)
push
mov
xlat
out
inc
scas
push
mov
(bad)
jecxz
mov
xor
js
inc
and
push
daa
lods
jbe
fidiv
mov
jbe
dec
mov
das
rcl
aaa
sbb
jl
jl
cwde
xor
push
pop
or
(bad)
adc
(bad)
ss
or
scas
lock
jno
(bad)
or
push
mov
pusha
(bad)
mov
xor
(bad)
mov
adc
pop
jmp
out
mov
imul
mov
jb
adc
jge
adc
sbb
leave
mov
xor
pop
cmps
mov
xchg
adc
pop
pop
mov
stc
mov
mov
adc
fisub
sbb
mov
clc
inc
imul
cli
test
pop
or
push
inc
push
push
retf
xor
xor
lahf
cdq
cdq
outs
retf
rol
in
ret
lods
ror
adc
xor
in
mov
adc
sbb
mov
push
rcr
fbld
lea
xchg
js
mov
sub
test
mov
push
in
les
push
xlat
fidiv
jp
(bad)
jne
popf
inc
sti
(bad)
or
cli
sbb
shr
mov
or
cmp
hlt
cdq
push
dec
jo
cmps
mov
push
aam
std
lahf
pop
jne
enter
cs
mov
(bad)
rcl
mov
jns
popf
and
mov
pop
in
mov
sub
push
jge
call
iret
aas
cli
pop
(bad)
int3
aad
mov
cmps
xor
pop
lea
stos
pushf
xchg
jno
mov
dec
xchg
dec
pop
rcr
jle
inc
es
cmp
mov
inc
ror
lods
jge
jge
or
mov
stc
push
(bad)
hlt
shr
push
imul
or
in
xlat
mov
pop
test
test
hlt
and
in
(bad)
adc
sub
jns
ins
(bad)
in
shl
mov
sbb
movs
cmp
jne
xor
mov
jge
sub
jmp
add
push
imul
and
mov
sbb
(bad)
clc
pop
retf
and
stos
cmp
scas
mov
cmp
rcr
std
ins
aam
(bad)
imul
jge
je
test
movs
pop
jmp
call
adc
stc
add
cmp
sti
aad
lea
inc
retf
mov
adc
cwde
icebp
fmul
mov
cwde
cmp
mov
sahf
inc
pop
rcl
add
in
daa
ja
scas
cmp
cwde
xor
rcl
scas
pop
dec
push
retf
mov
sahf
(bad)
mov
ror
sbb
mov
inc
(bad)
xchg
jno
ffree
xor
sbb
mov
jp
fistp
dec
data16
mov
xchg
aam
hlt
xchg
jbe
xor
fbld
mov
test
jb
mov
aas
dec
ficomp
jne
pop
or
adc
add
jl
mov
movs
rcl
sub
call
add
cmp
stos
mov
mov
in
dec
xor
jge
in
stos
(bad)
lods
or
jecxz
out
es
out
(bad)
je
pop
fmul
fdivr
mov
mov
xchg
fwait
and
add
nop
addr16
push
mov
pop
adc
call
stos
push
jmp
or
mov
ds
das
push
adc
and
mov
push
and
nop
ins
adc
out
pop
mov
test
popa
mov
scas
sbb
jno
mov
rcl
test
and
pop
jge
push
push
fldcw
and
inc
mov
neg
mov
push
stos
push
leave
dec
xchg
fld
and
das
inc
sbb
adc
stc
into
jmp
(bad)
sub
lock
jecxz
pop
shr
push
fdiv
outs
cmc
xor
icebp
sub
imul
loop
add
fiadd
out
jp
iret
pop
fs
sub
adc
jl
test
adc
and
xor
jae
sbb
lock
aaa
dec
mov
rol
xchg
push
cmp
fsubr
scas
mov
pop
outs
pop
fild
dec
ficomp
mov
into
and
sub
mov
xor
shr
xor
leave
push
fsubrp
pop
xchg
mov
jmp
mul
rcr
sub
aad
lock
imul
sub
arpl
cmp
and
fidivr
mov
repnz
sbb
jecxz
xchg
lods
retf
inc
mov
mov
jnp
outs
mov
and
shr
cmp
movntq
push
cli
adc
push
add
jle
in
loopne
xchg
loop
imul
adc
leave
and
cmp
ins
out
inc
rcr
mov
ss
push
stos
jmp
or
or
mov
sbb
out
hlt
rcr
add
mov
in
adc
(bad)
out
sahf
loope
cmp
cmps
pop
inc
sahf
out
out
cmp
das
pushf
pop
pop
xchg
xchg
and
fdivr
icebp
loopne
push
test
push
push
or
mov
out
ja
sub
xor
shl
xchg
repnz
adc
fwait
inc
xor
lods
jecxz
mov
fsub
into
push
clc
mov
das
fistp
xchg
push
lahf
hlt
test
dec
inc
xchg
in
jno
and
loope
jp
mov
std
push
adc
inc
movs
das
dec
mov
mov
xor
inc
mov
cmp
ret
mov
out
shl
mov
or
inc
les
sbb
mov
dec
fild
sbb
imul
lea
dec
dec
cwde
or
adc
pop
xchg
push
jp
mov
dec
cmc
dec
int3
popa
mov
jmp
rcr
iret
push
or
gs
and
call
sub
leave
jmp
dec
mov
mov
clc
mov
test
mov
in
push
mov
dec
mov
xor
imul
sub
lea
sbb
adc
cld
xchg
mov
xchg
jne
popa
aam
lds
and
and
arpl
addr16
or
pop
nop
push
sub
stos
mov
mov
into
add
mov
retf
push
mov
or
add
cld
add
sub
lods
xchg
push
sahf
dec
rol
rcr
outs
dec
cdq
pop
stos
mov
sbb
sub
add
mov
and
out
push
add
les
mov
mov
movs
(bad)
in
cs
push
(bad)
lock
dec
call
in
add
stos
lock
ins
mov
lahf
movs
rcl
inc
les
(bad)
fcom
call
fist
mov
dec
mov
inc
push
mov
pop
test
mov
arpl
mov
lahf
pop
imul
clc
cmp
mov
cmp
in
int3
cmp
fstp
inc
out
je
xchg
or
in
jg
push
push
sbb
push
out
int3
or
shld
inc
jmp
push
imul
cmp
out
arpl
sub
jmp
mov
mov
adc
adc
cmp
aas
ss
ins
sbb
(bad)
out
push
leave
sbb
mov
pop
inc
jbe
retf
test
rcl
test
pop
and
mov
mov
call
push
pop
xchg
call
sar
push
jbe
iret
sbb
repz
lahf
clc
int3
fwait
mov
cmc
dec
mov
lahf
adc
jl
xor
inc
mov
jb
sub
xor
sbb
out
xchg
aas
fwait
jmp
movs
and
pop
call
out
leave
mov
les
(bad)
add
das
retf
mov
out
jne
call
icebp
adc
sub
sub
das
and
sub
in
mov
out
lods
sub
push
cwde
xor
add
sti
or
mov
xchg
stc
add
(bad)
clc
popa
loop
mov
inc
inc
push
jp
sti
fwait
pop
(bad)
mov
xor
add
cld
sub
daa
add
mov
in
jp
je
add
rcr
and
push
mov
inc
fincstp
retf
stos
mov
enter
inc
xchg
inc
mov
jnp
mov
or
add
dec
in
add
sub
cli
and
repnz
int3
jmp
xchg
das
xor
jb
cld
repnz
aaa
adc
dec
imul
sub
loopne
push
scas
pop
test
fwait
inc
cmp
and
sub
mov
and
repnz
stos
dec
enter
dec
icebp
pop
dec
add
pop
dec
mov
dec
clc
sbb
mov
icebp
push
xlat
mov
adc
int
inc
stc
cwde
dec
out
inc
push
out
stos
rcr
sbb
mov
inc
and
inc
and
mov
js
ss
out
scas
cmp
pop
push
pop
jnp
add
mov
pop
jge
push
jnp
std
or
inc
xchg
pop
popa
pop
aas
mov
lds
jno
lods
ret
lods
and
xchg
cmps
(bad)
std
ss
sti
jl
lods
gs
pop
mov
sub
mov
jbe
pop
(bad)
cmp
jbe
cmp
sahf
mov
mov
mov
fdiv
jp
jmp
sti
sbb
test
xchg
and
repz
ds
jne
dec
out
fs
push
cwde
sar
(bad)
mov
(bad)
stc
iret
jg
repz
(bad)
cld
mov
mov
dec
in
mov
add
add
dec
inc
scas
inc
pusha
or
add
add
add
(bad)
(bad)
inc
add
add
add
add
add
add
jns
je
ins
cs
jb
ja
outs
addr16
push
gs
imul
xor
xor
inc
jne
je
jb
cmp
jb
ins
sub
push
jne
ins
imul
imul
bound
xor
data16
xor
fs
add
adc
gs
cs
jb
ja
outs
addr16
imul
add
popa
je
pop
add
add
add
add
add
lsl
add
push
add
add
or
or
add
or
add
add
add
add
or
add
add
pusha
outs
rol
add
add
inc
dec
inc
add
mov
or
popa
add
jo
pop
jae
add
ret
add
push
ret
add
outs
test
add
add
inc
inc
push
pop
inc
in
sar
adc
add
outs
push
loope
js
mov
or
xor
dec
in
xchg
inc
(bad)
cmp
les
jns
pop
cmps
data16
repnz
jecxz
xor
mov
test
sbb
inc
test
pop
inc
aas
pop
add
fxch
out
popf
sahf
jns
shr
adc
aam
jecxz
add
and
sbb
popf
movs
and
in
ins
sbb
out
cmp
adc
dec
test
jmp
fcom
sub
mov
ss
enter
lock
loope
data16
mov
fs
push
arpl
and
pop
inc
xor
mov
lods
xor
out
jbe
push
dec
fistp
and
xchg
lea
or
pop
add
dec
mov
repz
leave
fcomp
jge
pop
pop
int3
int3
cmc
ss
mov
sti
and
sub
lahf
mul
shl
int3
pop
sbb
in
or
or
sbb
jmp
cmps
in
push
enter
add
add
int3
push
jb
popa
xchg
gs
xchg
(bad)
xchg
inc
dec
push
cld
popa
xchg
std
mov
pop
sbb
mov
mov
cmp
mov
pop
sub
(bad)
popf
inc
adc
push
push
ss
pop
push
sbb
pop
inc
(bad)
out
cmps
push
adc
sbb
dec
popa
mov
ins
mov
aaa
pop
xor
dec
lahf
sbb
je
jno
sub
mov
(bad)
in
cdq
pop
push
xchg
out
pop
mov
push
rcr
inc
lods
mov
mov
sub
xor
push
pop
loope
sub
jecxz
mov
inc
iret
ret
push
std
enter
out
fs
sub
test
mov
imul
vunpckhps
pop
jp
push
test
repz
shr
inc
xchg
leave
mov
jb
clc
jae
xor
inc
jg
sub
cmp
mov
mov
(bad)
call
movs
dec
dec
lods
sub
pop
adc
mov
mov
jmp
jl
icebp
cmp
inc
daa
je
mov
mov
or
adc
xor
mov
dec
test
jmp
out
ret
repnz
(bad)
arpl
(bad)
add
cdq
(bad)
push
test
sbb
stos
shl
jb
cmp
cld
fwait
mov
dec
adc
lahf
(bad)
les
std
cli
push
mov
dec
ret
jmp
sahf
adc
jbe
mov
pop
mov
and
and
and
and
and
and
inc
loopne
pusha
lea
test
fcomip
add
add
dec
inc
dec
inc
scas
inc
pusha
or
add
add
add
(bad)
(bad)
inc
add
add
add
add
add
add
jns
je
ins
cs
jb
ja
outs
addr16
push
gs
imul
xor
xor
inc
jne
je
jb
cmp
jb
ins
sub
push
jne
ins
imul
imul
bound
xor
data16
xor
fs
add
adc
gs
cs
jb
ja
outs
addr16
imul
add
popa
je
pop
add
add
add
add
add
lsl
add
mov
mov
inc
or
add
or
add
add
add
add
or
add
add
pusha
outs
rol
add
add
inc
dec
inc
add
mov
or
popa
add
jo
pop
jae
add
ret
add
push
ret
add
outs
test
add
adc
inc
inc
push
pop
inc
in
aam
inc
xchg
or
pop
mov
xor
mov
add
add
inc
mov
frstor
mov
lldt
int3
(bad)
add
fwait
adc
ds
cs
icebp
fisttp
int3
fistp
mov
jns
not
sub
mov
or
fxch
(bad)
rcr
stos
xor
and
sub
dec
loop
push
cmps
xchg
xchg
cmp
xchg
sub
test
jmp
pop
(bad)
sti
(bad)
popa
and
imul
imul
sahf
jge
mov
stos
xchg
int3
pop
add
mov
mov
pop
ret
jge
fdiv
repz
inc
in
js
fadd
and
aaa
hlt
sub
shr
lock
jecxz
push
adc
mov
inc
xchg
pop
retf
add
popf
mov
add
jnp
lahf
dec
inc
lods
cmp
jne
and
fs
cmp
mov
jge
popa
dec
cmps
cmps
xor
hlt
mov
aam
daa
lock
jge
fcmovbe
mov
add
rcl
push
pop
out
pop
nop
pop
cli
(bad)
enter
cld
or
jne
fiadd
cmp
dec
in
sub
and
jnp
gs
popa
dec
dec
lds
mov
out
or
das
mov
mov
sbb
push
mov
cmp
xlat
mov
(bad)
out
in
cdq
adc
fisttp
cmps
nop
cs
lahf
jns
nop
test
push
fstp
movs
aad
stos
cmps
loopne
aam
xor
mov
push
or
adc
rcl
xchg
iret
lds
mov
inc
xor
cwde
test
ret
sbb
inc
popa
fstp
in
dec
pop
cmp
cmp
sub
div
hlt
jecxz
push
mov
or
fistp
not
out
addr16
ins
mov
dec
add
mov
cmp
mov
imul
cs
fwait
mov
pop
and
xlat
inc
sbb
iret
or
out
pop
ror
adc
aas
and
pop
mov
mov
das
ins
cmp
and
inc
loopne
pop
inc
jmp
(bad)
std
les
xor
test
pop
xor
ins
sbb
push
je
lea
inc
aas
and
fild
(bad)
aaa
mov
mov
popf
cmp
jbe
int3
movs
sbb
mov
data16
repz
icebp
cmovle
scas
inc
dec
and
mov
shl
imul
test
sbb
rcl
cmp
stc
iret
jecxz
test
outs
inc
(bad)
mov
ret
mov
pmullw
mov
int
je
(bad)
iret
out
pop
jle
sbb
jmp
dec
or
lds
adc
mov
ret
call
inc
or
xor
push
dec
inc
shl
outs
imul
ins
sbb
pop
inc
cs
push
or
xchg
stos
sar
mov
xor
jle
xchg
sbb
stos
or
cdq
test
retf
pslld
dec
pop
sbb
jp
aad
dec
or
mov
jecxz
mov
out
or
mov
sbb
out
push
dec
mov
mov
jmp
dec
das
xchg
push
loop
xor
sbb
int
imul
sbb
mov
inc
pop
push
sub
xchg
lods
into
mov
fstp
cdq
jle
inc
pop
aaa
outs
fcom
call
frstor
cmp
stc
inc
push
and
and
xor
dec
adc
cmp
loope
ins
bound
mov
lds
mov
dec
gs
jno
push
adc
loope
(bad)
jecxz
pop
scas
int
mov
add
lds
fcomp
push
cs
push
pop
add
es
fstp
cdq
outs
mov
adc
dec
shl
inc
dec
loopne
cmp
jmp
or
retf
dec
daa
jnp
(bad)
popa
mov
shr
stc
dec
sub
push
mov
xchg
sbb
push
adc
xchg
shl
mov
mov
pop
ja
adc
dec
cs
sbb
cs
dec
nop
jns
ins
daa
push
iret
cmp
jne
inc
pop
pop
jo
xor
in
mov
and
xor
jecxz
loop
fld
cs
dec
mov
adc
loop
fucom
xchg
jnp
sub
jo
ds
inc
xor
mov
cdq
adc
test
mov
fist
mov
int3
push
add
pop
int3
sahf
jle
cmp
outs
and
ins
inc
add
in
and
mov
sbb
retf
scas
ins
retf
or
pop
scas
ja
inc
sbb
ret
mov
dec
out
test
ret
add
mov
and
lds
jnp
jl
sub
xlat
add
xor
dec
inc
jmp
loope
push
out
fdivp
fimul
jmp
dec
sub
rcr
pop
into
hlt
sbb
int
or
nop
jle
loope
cmp
aam
imul
aas
fcom
dec
sbb
pop
scas
outs
in
fisttp
ror
fdiv
push
jne
add
ja
test
rol
sbb
cwde
adc
xchg
add
jb
dec
xchg
mov
xchg
and
cli
leave
cmp
repz
lods
sub
lahf
xor
push
pop
test
push
fild
mov
jl
stos
stos
push
xchg
sbb
out
cdq
lods
sti
retf
and
jmp
jl
in
sbb
lahf
xlat
dec
add
xchg
shr
scas
and
add
dec
push
js
push
(bad)
out
jg
xchg
fist
jo
lds
jmp
mov
nop
inc
gs
sbb
rol
cli
sbb
adc
rol
push
stos
xchg
or
mov
cmp
sbb
(bad)
rol
and
sub
mov
cwde
outs
cmp
xor
cmps
sbb
mov
lea
cmp
pop
cmps
in
or
inc
out
sub
inc
loop
arpl
repnz
js
push
cmp
mov
jg
sbb
ror
push
rol
out
xchg
pop
out
ror
push
xor
outs
pop
ds
pop
jmp
js
lods
push
lahf
sbb
idiv
push
xchg
loope
(bad)
aam
sub
push
repnz
xchg
xor
add
fndisi(8087
mov
and
arpl
iret
inc
sbb
out
je
mov
mov
inc
popa
nop
jmp
mov
or
jae
xor
push
xor
(bad)
cmp
out
jmp
popf
movs
push
test
out
sahf
es
pop
mov
dec
popf
call
jae
gs
pop
lahf
std
retf
in
push
push
and
mov
mov
not
fwait
mov
fs
adc
pusha
pop
jno
leave
pusha
(bad)
sbb
jbe
(bad)
mov
cmp
pop
out
sub
xor
xlat
iret
leave
ret
(bad)
sub
push
inc
loope
mov
add
hlt
xor
mov
in
pop
mov
retf
nop
jecxz
mov
daa
ret
xchg
xlat
(bad)
jb
sar
and
ins
std
jb
imul
inc
loope
into
sbb
out
dec
add
(bad)
sub
or
(bad)
stc
stos
xor
fcomp
xchg
cli
ss
sahf
and
scas
stos
out
xchg
xchg
enter
jbe
xchg
push
or
cwde
dec
sbb
sbb
test
push
push
out
mov
cmp
loop
clc
les
pop
daa
jp
sub
jno
mov
mov
jg
push
stc
jg
inc
cmp
aas
cmp
out
push
jns
jle
sbb
cdq
jecxz
xchg
fidiv
addr16
inc
in
cwde
into
adc
repnz
jmp
outs
cs
inc
mov
xchg
std
jmp
mov
cmp
lods
push
cld
push
inc
(bad)
jne
call
fs
jb
cli
(bad)
mov
xchg
and
test
sbb
out
mov
enter
sub
ins
loope
fld
and
add
and
(bad)
jbe
inc
call
popa
push
in
xor
sub
cmp
(bad)
retf
adc
fmul
dec
mov
cmps
push
call
or
bound
jle
(bad)
push
adc
jge
ror
out
scas
(bad)
xor
arpl
mov
sbb
sar
retf
push
frstor
push
cmp
sbb
ret
jp
stos
pop
jo
or
or
sbb
jno
inc
jo
imul
xchg
out
fld
retf
mov
out
xor
div
aaa
cdq
es
dec
lahf
sub
pop
cmp
xchg
xchg
jb
jg
mov
test
stc
imul
test
sti
hlt
inc
cdq
xlat
aaa
dec
jge
mov
push
iret
xor
pop
cmps
sar
lea
loope
mov
sub
aad
cli
sbb
jmp
aad
inc
imul
dec
fidiv
loopne
sub
inc
in
sub
jmp
jo
pop
pusha
inc
and
sahf
jnp
adc
xor
sbb
fist
dec
pop
add
inc
fwait
arpl
and
ins
cs
mov
mov
or
aam
das
add
adc
repnz
stos
and
sbb
loope
pop
call
cs
mov
je
cdq
clc
jge
push
scas
adc
and
jmp
pusha
push
pop
add
inc
xchg
sbb
mov
ret
jecxz
or
pop
mov
dec
pop
dec
das
pop
bound
je
jp
sub
out
jmp
mov
stc
mov
mov
std
hlt
fcomp
cmp
aas
mov
stos
aam
mov
xchg
ret
test
mov
retf
adc
scas
fild
out
push
sub
(bad)
div
cdq
daa
dec
and
stos
pop
inc
mov
cmp
adc
in
mov
lahf
ins
iret
aam
clc
push
inc
xchg
mov
pop
pop
ficomp
test
or
mov
sti
lock
mov
inc
leave
mov
jge
or
jle
(bad)
pop
dec
jle
punpcklbw
shl
fsubp
xchg
inc
and
cmp
push
xor
dec
pusha
ret
push
rol
mov
mov
cmp
or
test
stc
cmp
dec
cmps
imul
dec
or
iret
jmp
(bad)
xlat
and
adc
bound
sub
jnp
daa
push
fs
xlat
sar
push
cld
cmp
je
fst
je
enter
lods
or
cmp
sbb
arpl
addr16
or
xchg
inc
pop
scas
adc
cli
mov
lock
fistp
std
scas
mov
test
mov
mov
pop
lds
pop
xor
outs
sahf
dec
or
mov
adc
int3
test
(bad)
test
call
pop
xor
adc
dec
mov
ja
clc
sbb
sub
call
cmp
mov
daa
gs
inc
test
ins
lahf
fstp
xchg
sti
pop
aam
loope
mov
inc
cmps
inc
cdq
call
and
mov
mov
popf
(bad)
in
xchg
cmp
sbb
add
(bad)
dec
xor
and
push
test
pop
pop
in
mov
sti
push
cdq
xchg
adc
cmp
add
and
jo
push
fs
xchg
mov
call
cmp
dec
pop
or
je
mov
push
sbb
call
imul
shl
and
or
xlat
add
jl
push
jb
lock
or
mov
(bad)
sub
dec
imul
jmp
push
adc
jns
daa
call
or
xor
shr
fs
outs
sub
cmps
add
xchg
mov
les
sub
push
sub
push
aam
adc
out
in
lods
movs
lods
jecxz
int3
mov
xchg
push
jb
or
or
push
iret
(bad)
hlt
je
pop
stos
mov
xor
stos
and
pop
(bad)
sbb
pop
jle
(bad)
push
test
xor
std
jnp
fistp
shl
dec
mov
mov
or
stos
addr16
add
push
loope
loope
add
ret
and
out
sti
mov
cmp
cli
sub
xchg
and
popf
mov
pusha
aaa
or
sbb
lock
or
cwde
sub
inc
fstp
lock
adc
mov
jmp
xchg
cmp
dec
outs
in
push
lahf
retf
test
loop
icebp
push
jno
mov
sahf
and
ror
enter
popa
ret
loope
inc
mov
dec
jbe
jno
pop
cld
push
adc
push
adc
add
mov
pop
inc
lods
pop
movs
in
push
fidiv
and
inc
mov
sub
cld
ficomp
fist
push
mov
gs
xchg
test
xchg
aas
loopne
jg
and
inc
dec
mov
dec
mov
leave
repz
mov
sahf
or
and
popa
dec
pop
inc
push
arpl
enter
push
clc
push
test
jno
loopne
(bad)
cdq
jmp
nop
int3
sti
es
inc
mov
jns
cmps
sbb
pop
push
jmp
dec
push
push
inc
in
gs
mov
(bad)
call
pop
cld
push
xor
imul
iret
fcom
adc
sti
and
jmp
dec
cli
sahf
and
retf
jmp
out
sahf
xchg
jnp
xchg
cmps
sub
ret
pop
stos
mov
lock
mov
add
shl
sub
inc
cmp
sti
mov
sbb
fs
loop
mov
push
sub
(bad)
cmp
imul
inc
in
std
sbb
mov
sbb
aaa
nop
rcl
sti
aam
or
inc
imul
jecxz
adc
mov
dec
lods
adc
or
mov
movs
clc
mov
aad
xchg
sahf
outs
icebp
jns
mov
sbb
cmp
mov
sub
ja
mov
dec
ss
sti
test
cwde
xchg
add
leave
pop
leave
js
movs
shr
dec
jl
inc
pop
inc
repz
test
rol
add
mov
push
sbb
sub
mov
call
sbb
sub
push
mov
push
std
jmp
int
pop
or
sti
cmp
aad
fs
sbb
push
jns
ret
inc
dec
jae
cmp
pop
popf
dec
shr
lods
sbb
xchg
stc
xchg
stos
add
jg
leave
arpl
dec
mov
mov
and
sbb
fmul
cmp
xor
lds
repnz
hlt
jbe
out
into
mov
rcr
inc
xchg
sahf
cs
lods
add
fwait
ja
mov
stos
sub
loope
leave
mov
(bad)
cdq
lea
ja
outs
inc
out
cmc
fwait
inc
ss
icebp
jbe
or
lea
cmps
xor
mov
lods
add
repnz
popa
iret
arpl
mov
cmc
call
inc
push
scas
std
lea
sub
std
jno
into
adc
pushf
push
les
or
stos
gs
pushf
push
inc
repz
lods
scas
adc
adc
cmp
sub
sub
fistp
int3
stos
or
dec
call
push
xor
lods
ret
lds
push
call
jle
retf
and
je
movs
push
sub
jl
scas
(bad)
aam
daa
jne
pop
push
and
adc
call
bound
pusha
jmp
daa
(bad)
lods
jae
cmp
sub
in
das
imul
xchg
pop
push
jg
es
jl
jl
repnz
dec
ret
out
daa
jge
sbb
push
add
pop
retf
fiadd
push
mov
sub
fwait
call
cs
and
aad
into
jmp
mov
pushf
fs
dec
loope
dec
push
pushf
vmwrite
push
push
loop
jae
xchg
lods
xchg
call
in
sub
stos
mov
and
push
mov
iret
add
movs
pop
out
clc
sbb
int
jecxz
jg
in
adc
lock
int3
stos
imul
cmp
cmps
das
xor
clc
pop
int
jmp
add
adc
push
js
xlat
inc
mov
aas
(bad)
cld
repz
aas
(bad)
cld
mov
add
cmc
call
add
dec
inc
scas
inc
pusha
or
add
add
add
(bad)
(bad)
inc
add
add
add
add
add
add
jns
je
ins
cs
jb
ja
outs
addr16
push
gs
imul
xor
xor
inc
jne
je
jb
cmp
jb
ins
sub
push
jne
ins
imul
imul
bound
xor
data16
xor
fs
add
adc
gs
cs
jb
ja
outs
addr16
imul
add
popa
je
pop
add
add
add
add
add
lsl
add
mov
mov
inc
or
add
or
add
add
add
add
or
add
add
pusha
outs
rol
add
add
inc
dec
inc
add
mov
or
popa
add
jo
pop
jae
add
ret
add
push
ret
add
outs
test
add
adc
inc
inc
push
pop
inc
in
rol
add
xchg
rcr
mov
mov
and
fld
and
jmp
xchg
push
inc
sbb
push
xchg
push
jmp
sti
cmp
xchg
lock
jmp
push
fmul
ret
movzx
add
(bad)
(bad)
sahf
es
mov
out
std
je
(bad)
aam
jno
das
jmp
push
gs
adc
xchg
pop
mov
lahf
and
jge
pop
push
nop
xor
jno
xor
in
xchg
jmp
data16
jb
or
jmp
repnz
cld
add
stos
or
pop
gs
test
mov
ds
lock
mov
push
pushf
sub
fwait
jno
xchg
(bad)
xor
xor
adc
shl
(bad)
setb
hlt
pushf
es
mov
lds
(bad)
mov
jp
lods
inc
cmp
mov
mov
(bad)
push
mov
mov
dec
sbb
push
pusha
les
push
xchg
pop
push
xor
setae
mov
adc
pop
loope
fdiv
pop
in
fiadd
inc
call
int3
xlat
rcl
xchg
cdq
mov
xor
dec
test
leave
push
aaa
jl
dec
cmp
movs
mov
ss
mov
movntps
xchg
ror
cmp
mov
fisubr
into
std
test
jo
js
test
mov
das
std
cmps
mov
xor
cdq
pop
jmp
mov
inc
int3
cmp
mov
sub
cmp
sbb
les
and
adc
shl
adc
push
scas
popf
xor
mov
jae
arpl
bound
call
arpl
adc
adc
inc
jno
shl
jnp
aad
fadd
sub
pop
jecxz
push
pop
fld
sub
mov
cmp
inc
or
shl
je
shl
inc
dec
push
aaa
add
mov
pop
or
xchg
cmp
adc
xchg
pop
push
jne
and
push
or
dec
fdiv
movs
retf
popa
or
mov
or
mov
(bad)
test
jns
jnp
xor
adc
xor
div
jecxz
fdivr
add
test
adc
cwde
movzx
xor
test
cmps
fimul
pop
and
cmp
jno
xor
sbb
jp
pop
cli
and
test
add
mov
shl
lds
je
inc
mov
(bad)
stc
adc
cmp
xchg
mul
ins
sub
sub
retf
jmp
jl
data16
mov
ja
xor
sbb
jl
cmp
push
out
xchg
stc
jo
jecxz
dec
iret
cmp
outs
xchg
cmc
stc
cli
das
out
jno
loop
push
xchg
fld
jns
into
xchg
sub
mov
inc
cmp
pop
mov
(bad)
jmp
adc
sbb
sub
loopne
inc
aas
addr16
mov
leave
retf
dec
mov
push
ins
imul
push
xlat
push
mov
pop
push
pop
in
rcr
repnz
nop
push
inc
stos
push
repz
sbb
push
push
adc
sub
cmp
in
daa
cwde
cmp
ja
pop
mov
mov
rol
inc
or
enter
daa
fistp
(bad)
push
(bad)
fs
xor
sbb
dec
ja
ds
sub
push
mov
xor
mov
retf
cmp
adc
xchg
stos
(bad)
dec
sub
retf
outs
fiadd
aad
fsubp
rol
or
lds
ss
psubb
sub
test
dec
shr
leave
pop
outs
pop
sub
jl
cmp
jmp
cmp
les
retf
pop
scas
mov
xor
mov
push
(bad)
xchg
xor
(bad)
mov
pop
repz
xchg
rcr
sub
test
neg
fdiv
mov
sahf
ins
dec
dec
fcomp
add
xor
pop
xchg
popa
imul
jnp
sub
dec
inc
dec
push
daa
dec
xchg
sub
loopne
jge
pop
xchg
shr
add
daa
jae
adc
adc
mov
sbb
in
or
(bad)
lock
inc
inc
out
mov
push
cmps
stos
inc
shl
jnp
inc
cli
mov
(bad)
mov
mov
(bad)
fidivr
out
loop
inc
dec
in
cld
jp
xchg
repnz
shl
and
cmp
jle
loop
std
sbb
outs
lods
jmp
pop
rcr
retf
mov
cmp
jns
or
add
enter
dec
leave
pop
js
mov
push
dec
retf
inc
sub
pushf
push
add
cmps
ret
jmp
movs
clc
retf
std
lahf
fistp
cli
bound
into
repnz
fld
inc
lea
add
repz
ror
fwait
cmp
jmp
mov
repz
adc
pop
fwait
fwait
dec
and
lods
mov
xor
xchg
test
mov
xlat
imul
mov
xchg
push
push
adc
ret
jae
ins
add
fxam
inc
cli
cmp
shl
or
dec
cmp
popf
(bad)
sub
jmp
cmp
jnp
pop
fist
cmp
pop
cmp
cld
xchg
ret
leave
push
in
dec
std
aaa
cmp
retf
cmp
sub
out
xor
fbld
fwait
into
jp
iret
mov
daa
bound
repnz
and
aam
jns
or
mov
and
cdq
dec
dec
sub
pop
stos
jle
add
icebp
mov
mov
lea
jnp
cld
sub
aaa
xor
mov
dec
scas
repnz
aad
jp
cwde
in
nop
int
daa
enter
xchg
lds
sar
mov
cli
lods
add
inc
jnp
aam
fnsave
mov
mov
int
call
add
xchg
jge
cmps
jmp
sub
test
dec
jg
fst
pop
std
in
stc
je
ss
js
fimul
icebp
mov
push
mov
jecxz
popf
hlt
dec
shl
fidiv
ins
inc
pop
(bad)
and
pop
pusha
idiv
repz
ds
xchg
mov
mov
xor
pop
sbb
inc
stos
daa
inc
lahf
int3
mov
les
dec
mov
fstp
jbe
cmovne
jmp
push
mov
cmp
xor
adc
push
push
xlat
sbb
jge
(bad)
loop
sub
or
sbb
mov
cs
sbb
out
and
jo
mov
adc
cmp
(bad)
jbe
cmp
inc
push
pop
xchg
std
xor
leave
sbb
jmp
repnz
jle
jp
ins
add
inc
sub
addr16
jnp
cmp
xchg
mov
idiv
lock
cmp
(bad)
and
mov
loop
pop
lods
pop
push
sar
std
in
rol
jmp
cmp
shl
pop
and
jp
xchg
cmp
(bad)
sub
push
jg
movs
stos
and
js
xor
clc
imul
js
push
nop
in
xchg
fisub
inc
dec
xlat
sar
push
adc
movs
push
(bad)
addr16
jne
cld
loopne
cdq
mov
ds
push
and
or
cmps
ror
inc
data16
push
or
out
ja
inc
mov
pop
fisttp
mov
out
scas
pop
outs
pop
pop
cmp
pop
shr
shl
sub
ror
(bad)
shr
(bad)
push
popa
xchg
pop
adc
jle
inc
push
sub
adc
push
ret
outs
clc
lea
out
clc
sub
pop
fstp
repz
and
xor
mov
mov
into
jne
xchg
sbb
adc
cs
fld
enter
imul
pop
sti
dec
inc
(bad)
in
adc
das
pop
(bad)
xchg
adc
icebp
xchg
fwait
das
mov
sahf
jbe
mov
jmp
out
addr16
cli
jne
daa
pop
dec
ins
cmps
out
dec
fstp
inc
adc
fsubp
ja
icebp
xor
sbb
(bad)
test
nop
push
cdq
mov
push
xor
loop
jnp
push
sub
fnstenv
cld
push
jge
adc
cmp
add
std
dec
leave
xchg
sbb
push
aas
or
test
and
push
jb
jecxz
mov
pop
pop
rcr
jl
jno
retf
lock
xlat
xchg
dec
lock
aad
cdq
jle
jno
push
inc
jae
mov
inc
stos
cmp
mov
arpl
inc
mov
fs
and
dec
ret
adc
sub
mov
leave
pushf
mov
push
jb
rcl
xchg
fiadd
mov
adc
imul
xchg
pop
adc
and
inc
pop
xchg
dec
adc
(bad)
mov
mov
xchg
push
push
jb
mov
push
cdq
mov
jecxz
mov
clc
in
aas
fadd
in
adc
or
inc
fld
stos
cli
mov
jbe
in
mov
clc
mov
pop
jmp
xchg
mov
mov
sbb
push
jmp
jnp
inc
mov
xchg
xor
mov
out
sti
lahf
mov
sbb
repnz
mov
mov
(bad)
xor
cmp
aaa
scas
(bad)
loopne
(bad)
fcmovb
dec
pop
sub
adc
popf
(bad)
cmp
movs
mov
sahf
outs
sub
retf
cmp
dec
push
sbb
sub
shl
push
dec
inc
mov
test
xlat
xlat
jl
adc
je
clc
dec
scas
mov
mov
push
std
push
(bad)
push
push
std
pop
stos
pop
sbb
pop
sbb
jb
sbb
sbb
fimul
xchg
jbe
cmp
enter
push
aas
(bad)
fwait
xchg
adc
sub
push
std
aam
scas
iret
mov
mov
xlat
add
ins
shl
mov
data16
pop
xchg
mov
addr16
sti
pop
mov
xor
jle
test
mov
test
ror
stc
jl
cs
addr16
sahf
or
fst
xchg
cdq
push
xchg
test
popf
xchg
lods
retf
fistp
mov
ins
push
leave
popf
add
mov
xchg
sbb
dec
push
cwde
xchg
cmp
adc
lods
cmp
dec
cmp
push
or
out
cmps
rol
jg
jnp
movs
mov
enter
lods
adc
pop
pop
jo
pop
jne
jne
pop
jp
jmp
std
sbb
popf
aad
(bad)
dec
repz
and
sub
mov
mov
sahf
xchg
add
sar
dec
xor
inc
mov
xchg
xor
or
xor
fsubr
xor
cmc
sar
add
jbe
cmc
loop
xchg
test
fcomp
pop
adc
stc
aad
pushf
loope
jno
mov
(bad)
fs
std
cli
adc
add
out
fld
les
js
xchg
imul
jge
ins
adc
repnz
repnz
or
cld
loop
fmul
mov
xchg
in
sub
call
aas
mov
popf
loop
pop
cmp
mov
dec
dec
mov
pop
dec
jbe
dec
push
dec
inc
mov
call
adc
sbb
int3
bound
or
inc
cmp
sbb
lds
inc
inc
or
jns
add
std
inc
mov
ins
mov
cmps
aas
(bad)
addr16
sahf
loopne
xchg
arpl
call
das
(bad)
pop
rep
inc
jo
mov
and
shl
mov
es
(bad)
in
jbe
and
cmp
push
inc
in
mov
ins
sub
pusha
mov
pop
popa
adc
outs
jmp
xor
sbb
jecxz
out
push
push
jbe
stos
cpuid
icebp
and
sbb
pop
nop
cld
loope
push
fst
aaa
jnp
xchg
fild
mov
(bad)
stos
gs
mov
dec
cmp
je
dec
ins
loope
and
hlt
push
mov
dec
sbb
cdq
xchg
mov
xchg
mov
push
mov
mov
fs
mov
fild
jge
jns
and
jmp
ja
fbld
push
mov
push
jnp
push
sub
test
(bad)
push
xchg
sbb
arpl
fimul
mov
and
xchg
(bad)
cmp
outs
outs
inc
lods
retf
mov
xchg
das
aad
fcmovnbe
ja
loopne
fwait
add
cwde
mov
rcl
jne
pop
in
lds
mov
(bad)
jg
shr
stos
cmp
push
lock
(bad)
ja
xor
stc
test
sbb
fwait
pop
pop
test
cmp
daa
(bad)
sub
pop
add
sbb
dec
cmp
jecxz
fidiv
inc
cmp
bound
ss
mov
rol
jae
das
nop
mov
cmc
jbe
int3
into
ret
xor
out
cmp
stos
xor
mov
in
aaa
xchg
cmp
xor
push
(bad)
or
and
jnp
gs
in
xor
dec
pop
pop
lds
add
repz
mov
(bad)
adc
mov
jbe
gs
jns
movs
loop
in
sar
xchg
aas
adc
(bad)
push
dec
push
mov
out
push
(bad)
adc
nop
das
pop
inc
cmp
xor
mov
(bad)
aas
in
push
sar
sbb
adc
mov
cmp
dec
dec
mov
or
pop
cmp
fisttp
(bad)
mov
adc
outs
es
dec
xor
ss
mov
jge
jle
fisub
fist
add
cmp
adc
sar
inc
sti
aad
dec
mul
sar
cmp
cmp
(bad)
stos
or
jbe
leave
push
mov
int3
into
sub
cdq
fnstenv
ss
add
arpl
(bad)
retf
test
rcl
sbb
and
aas
fstp
mov
xchg
pop
stos
ror
pop
rcr
jg
mov
je
and
stc
movs
ins
push
outs
mov
rol
in
xor
inc
jecxz
mov
push
mov
sar
(bad)
and
lds
and
movs
xchg
mov
inc
add
dec
mov
pop
mov
sub
fbld
out
add
leave
push
dec
cdq
and
stc
push
jmp
(bad)
sub
mov
out
lea
jge
mov
xchg
ja
fmul
mov
mov
mov
icebp
and
xor
inc
out
mov
cmps
push
inc
jo
mov
inc
retf
mov
in
cmp
xchg
add
push
jns
movs
adc
xchg
adc
cmp
scas
push
(bad)
scas
add
mov
mov
pop
(bad)
daa
dec
cmp
imul
add
xchg
test
lds
pop
push
dec
push
mov
mov
pop
pop
and
push
xor
adc
mov
add
cmp
jecxz
pop
loop
inc
dec
pop
xchg
js
adc
adc
stos
lea
in
idiv
shr
push
(bad)
jecxz
mov
inc
out
int
or
out
mov
cmp
popa
jmp
sbb
jmp
movs
pusha
and
or
or
pop
pop
and
pop
dec
lds
dec
mov
and
pop
in
scas
(bad)
sbb
fild
(bad)
add
test
add
pop
rol
rol
sbb
stos
int
fcmovu
sub
cmp
stos
sti
mov
sbb
adc
rcr
and
xor
dec
shr
xchg
aas
ja
int3
add
cdq
push
push
xchg
mov
cwde
xor
(bad)
js
dec
xchg
dec
(bad)
cwde
lds
push
loopne
and
mov
jmp
ins
or
adc
xchg
ins
xchg
dec
fsubr
mov
mov
test
ret
aaa
std
lods
out
outs
aad
pop
lahf
ins
ja
pop
jecxz
(bad)
popf
ficomp
sub
and
xchg
sub
push
lods
or
adc
inc
adc
lock
loop
or
push
inc
out
push
and
(bad)
cmc
or
sub
cmp
stos
icebp
sbb
repz
in
scas
xchg
mov
and
pop
stc
std
inc
(bad)
fistp
lds
lods
add
outs
(bad)
dec
pop
jge
jmp
dec
adc
mov
rep
nop
jle
mov
shl
adc
in
repz
push
(bad)
stc
out
jg
stc
out
jg
pop
add
cli
into
pop
out
cmp
add
add
dec
inc
scas
inc
pusha
or
add
add
add
(bad)
(bad)
inc
add
add
add
add
add
add
jns
je
ins
cs
jb
ja
outs
addr16
push
gs
imul
xor
xor
inc
jne
je
jb
cmp
jb
ins
sub
push
jne
ins
imul
imul
bound
xor
data16
xor
fs
add
adc
gs
cs
jb
ja
outs
addr16
imul
add
popa
je
pop
add
add
add
add
add
lsl
add
ret
adc
add
mov
inc
or
add
or
add
add
add
add
or
add
add
pusha
outs
rol
add
add
inc
dec
inc
add
mov
or
popa
add
jo
pop
jae
add
ret
add
push
ret
add
outs
test
add
adc
inc
inc
push
pop
inc
in
aad
pop
xchg
or
out
xchg
out
xchg
sbb
mov
push
dec
inc
movs
mov
mov
dec
xchg
scas
add
inc
xchg
sti
aas
mov
pop
mov
add
xor
cmp
xchg
cmp
(bad)
pop
ss
call
xchg
xchg
int
cmp
jp
icebp
(bad)
in
lea
sbb
xor
push
leave
mov
es
mov
adc
mov
(bad)
aad
xor
or
fs
xchg
test
add
outs
cmp
jge
push
sbb
xchg
ret
shl
fbstp
push
fyl2xp1
sub
cmp
es
and
dec
idiv
add
pop
xor
call
pushf
cmc
test
icebp
pop
ins
lahf
out
leave
inc
fdivr
aam
mov
movs
push
jno
(bad)
cmp
mov
jb
(bad)
rcl
adc
mov
add
mov
push
lds
and
jp
shr
sub
stos
les
into
jns
push
sbb
outs
sbb
in
loope
icebp
cmp
cmps
dec
pushf
mul
sub
add
dec
xor
pop
repz
sub
pmaddwd
addr16
jne
popa
jnp
mov
cmp
test
jno
jge
add
mov
in
std
fucomip
test
push
add
cmp
jne
pop
clc
int
out
in
push
in
addr16
mov
push
fstp
es
xchg
xor
not
and
(bad)
outs
lea
and
fnstcw
hlt
sbb
adc
push
popf
fild
pop
clc
xchg
xchg
adc
xor
fsubr
and
xor
add
and
rcl
push
in
push
mov
mov
scas
add
sbb
ror
inc
in
xchg
jb
dec
push
pop
or
jnp
fbstp
cmps
or
or
sbb
repnz
out
loopne
gs
call
mov
das
sahf
or
stc
mov
clc
inc
jne
fstp
xchg
ins
xor
sub
jmp
shl
pop
loop
cld
outs
pop
mov
add
addr16
jecxz
(bad)
push
out
test
cmp
div
mov
fstp
pop
int3
or
aad
call
rol
mov
jmp
adc
push
std
test
loopne
ret
cmp
inc
xor
adc
mov
sbb
sub
bound
mov
sub
adc
std
or
ins
lods
test
xor
add
cmp
inc
or
dec
xchg
call
stos
mov
clc
ds
pushf
jnp
inc
lods
jnp
and
ds
sbb
jge
mov
ins
inc
lods
push
jno
mov
pop
pop
pop
adc
mov
push
fxch
inc
fisubr
sbb
push
mov
repnz
imul
inc
(bad)
push
jl
push
leave
sbb
sbb
lea
lahf
(bad)
sub
or
lahf
dec
cmp
popf
lods
sbb
test
lods
mov
sub
loope
aad
push
pop
or
loop
push
mov
shr
add
jnp
movs
adc
std
stc
add
in
popf
dec
movs
clc
fld
pop
(bad)
data16
mov
rcl
ds
test
dec
inc
(bad)
fdiv
add
das
daa
inc
shr
dec
mov
push
fstp
pushf
lea
xlat
pop
dec
ret
sbb
rcl
test
xor
fwait
push
sub
push
xchg
faddp
jecxz
dec
pop
sbb
mov
arpl
or
mov
adc
mov
repz
fbld
mov
dec
ds
add
dec
addr16
dec
mov
mov
and
das
or
and
dec
jne
lds
cmc
mov
enter
stos
pop
and
or
cdq
std
cdq
pop
pop
(bad)
mov
mov
or
mov
arpl
mov
cmps
inc
mov
cmp
sbb
les
jns
dec
daa
outs
mov
(bad)
ss
inc
test
fdiv
(bad)
fs
mov
xor
lods
(bad)
icebp
and
add
loope
and
add
ficomp
(bad)
mov
inc
jno
push
js
sar
and
or
(bad)
int
into
mov
rcl
sbb
adc
mov
(bad)
or
nop
movs
sbb
fnsave
adc
lahf
pop
xchg
xor
(bad)
cli
addr16
pushf
mov
lock
pop
idiv
dec
std
(bad)
(bad)
call
xchg
fisubr
je
jnp
retf
aad
stos
sahf
stos
dec
pop
mov
fistp
mov
lock
mov
lods
sti
js
xor
jle
and
aam
dec
cmp
push
fwait
iret
shl
iret
cli
add
mov
jb
into
gs
add
or
out
jb
pop
ret
nop
inc
in
and
lods
ss
xor
jmp
jae
fild
xor
test
sub
mov
(bad)
cmps
out
cmp
or
cmp
pop
ins
sbb
pop
pop
push
inc
dec
fnstcw
and
mov
push
inc
cwde
test
je
and
or
je
lds
fidivr
add
sbb
mov
cmp
xchg
inc
pop
dec
cmp
adc
inc
fimul
(bad)
pop
xor
cmc
in
cdq
nop
inc
stc
add
mov
mov
repz
aam
pop
scas
jl
push
in
out
call
push
movs
test
les
mov
xor
sub
jle
mov
push
pusha
pop
test
push
jecxz
sub
pop
imul
in
retf
nop
stos
scas
inc
cmp
bound
push
je
mov
pop
push
aaa
or
fisub
lahf
(bad)
idiv
popf
or
into
jnp
inc
mov
leave
cmps
pop
cmp
cmp
or
leave
fst
loope
adc
mul
sub
daa
stos
(bad)
imul
push
dec
shr
dec
cmp
push
ror
push
fld
mov
loop
cmps
call
out
dec
xchg
or
xor
lods
push
dec
imul
pop
cdq
fidivr
mov
push
stc
jb
mov
xlat
xchg
or
sbb
xchg
imul
call
or
sbb
mov
push
aam
movs
and
test
jbe
(bad)
test
push
jmp
idiv
not
jecxz
jl
rol
xchg
jmp
iret
sub
rcr
div
pop
mov
jbe
in
outs
xchg
dec
jmp
inc
(bad)
test
mov
sub
add
xor
outs
loope
sub
lahf
jo
or
dec
xor
add
xchg
mov
and
mov
fxch
cs
xor
pop
adc
push
xchg
mov
cld
loope
sub
xchg
fsubr
sub
fcomp
add
or
jnp
fs
pop
(bad)
pop
xchg
retf
cld
ret
icebp
ror
jmp
ret
xchg
adc
fistp
test
mov
cwde
ret
adc
fsub
mov
cmp
mov
(bad)
popf
push
mov
jmp
imul
lea
movs
cmp
xchg
shl
fstp
pop
mov
rcr
fisttp
inc
es
sbb
test
out
lea
mov
aad
push
pop
imul
imul
(bad)
mov
mov
lods
retf
movs
or
xchg
push
mov
retf
fldenv
or
jb
arpl
inc
mov
jle
xchg
gs
inc
les
(bad)
dec
xchg
out
mov
adc
add
(bad)
repnz
xchg
mov
xchg
cwde
cmc
jge
jecxz
pop
sbb
stos
movs
sub
dec
xchg
mov
jo
outs
xor
aas
lea
rol
outs
xlat
add
dec
push
scas
mov
shl
repz
(bad)
retf
(bad)
mov
cli
(bad)
push
sub
inc
sbb
int3
outs
aaa
sti
in
inc
adc
push
out
add
rcl
push
push
fsubr
add
ret
jns
mov
cmp
cmp
retf
push
outs
(bad)
loop
mov
je
cmp
pop
push
mov
ret
cmps
retf
push
push
dec
mov
and
mov
or
cli
jecxz
xchg
aam
mov
ret
addr16
js
jb
mov
inc
sbb
mov
adc
mov
int
mov
mov
leave
add
adc
movs
mov
cmp
pop
xchg
xchg
jmp
inc
mov
daa
mov
sahf
mov
cs
inc
mov
jp
or
pop
in
data16
xchg
fcomp
neg
sbb
and
lods
scas
add
ins
cmps
outs
cdq
(bad)
int
mov
adc
push
(bad)
rol
or
xchg
(bad)
clc
addr16
cmp
leave
mov
mov
stc
inc
push
test
ret
cwde
sbb
add
es
mov
icebp
sub
sar
or
cld
adc
sbb
mov
sub
mov
xchg
pop
stos
cli
and
(bad)
out
sbb
shl
or
mov
in
add
loope
pop
(bad)
scas
push
fwait
mov
xchg
stc
(bad)
jbe
dec
mov
or
lock
or
paddsw
std
sar
jl
jp
xchg
jp
fwait
cld
mov
adc
jae
ret
bound
jbe
jge
sbb
mov
lahf
adc
retf
int
inc
mov
mov
movs
pop
leave
jecxz
push
push
inc
or
inc
jne
mov
mov
mov
int3
sbb
sub
daa
bound
in
movs
inc
jg
jle
bound
push
dec
movs
inc
mov
xchg
outs
sub
xchg
xchg
arpl
sub
jae
cmp
ror
fsubp
or
fs
lods
mov
sbb
sub
sub
mov
jns
and
pop
xchg
push
(bad)
jo
pop
jb
and
sub
daa
int
xor
fnstcw
fst
sbb
push
fmul
dec
cmp
jb
xchg
fstp
ds
out
push
and
movs
cmps
pop
xor
(bad)
repz
(bad)
xchg
jbe
mov
inc
(bad)
jecxz
out
fcmovne
mov
adc
xchg
jb
pushf
pop
or
shl
(bad)
adc
repz
xchg
sbb
jl
jle
sub
add
aaa
sbb
add
push
xor
ja
jno
shl
pop
mov
add
sbb
bound
xchg
retf
pop
mov
cli
jmp
mov
outs
fidivr
sbb
lods
mov
and
xchg
test
xchg
push
pop
fstp
pushf
ja
loopne
hlt
lods
dec
mov
retf
movs
test
shl
inc
bound
pop
or
cmps
hlt
sbb
jle
sub
in
int3
xor
adc
pop
imul
ins
sub
push
rcl
gs
xor
neg
xlat
pop
outs
mov
sar
fs
repz
sbb
fmul
int
in
mov
and
cs
jnp
xchg
fadd
or
xchg
pusha
in
push
mov
jmp
aas
fsub
mov
(bad)
fs
jbe
inc
aas
aaa
movs
mov
jp
mov
dec
xchg
ins
aaa
cwde
push
arpl
jae
lock
enter
mov
xchg
pushf
in
std
lods
and
fcomp
cmp
js
pop
xor
sbb
test
xchg
call
add
test
or
arpl
fnclex
xor
int
xchg
fidiv
dec
loope
retf
xlat
pop
jg
mov
iret
or
jb
pop
mov
(bad)
(bad)
lods
int
or
lahf
push
mov
hlt
(bad)
jnp
rol
(bad)
in
cmps
cmp
mov
aam
adc
mov
jge
jo
xchg
fldenv
xor
ins
mov
mov
jns
and
and
sbb
inc
fcom
lock
pop
and
jp
push
or
aam
cld
add
es
mov
lock
jb
jmp
mov
xchg
mul
sub
cmps
aaa
ror
iret
mov
adc
jb
iret
cmp
inc
xchg
add
mov
movs
push
mov
xor
out
sbb
scas
out
fiadd
sbb
fidivr
lds
shr
jle
cmp
mov
xchg
in
pusha
repnz
push
(bad)
mul
shr
jge
sbb
jmp
call
ins
dec
lock
sub
lods
pop
int
cmp
or
or
pop
mov
dec
outs
jno
mov
xor
scas
mov
dec
stos
out
inc
mov
not
(bad)
jnp
mov
mov
daa
in
fisub
pop
js
and
sub
into
mov
fild
push
push
jge
hlt
and
dec
mov
push
mov
sub
jae
mov
enter
test
pop
xchg
fidivr
mov
aad
and
(bad)
in
push
add
push
mov
lock
push
cmp
arpl
(bad)
adc
sub
leave
sti
mov
pop
daa
xchg
jno
sbb
(bad)
rcl
test
mov
mov
cmp
pop
test
inc
test
jp
and
mov
xor
xchg
in
aas
mov
push
push
pusha
sub
jbe
aaa
enter
adc
fistp
test
mov
cmc
cdq
lods
mov
aam
mov
jl
dec
and
hlt
mov
in
js
out
mov
shr
xchg
cmp
push
(bad)
std
xchg
sub
loopne
pop
jnp
imul
add
int3
fcom
add
out
test
movs
mov
push
loopne
clc
shl
add
mov
dec
xor
ds
addr16
inc
adc
jmp
shl
sub
es
or
xor
dec
je
pop
gs
push
jne
(bad)
xchg
dec
fisttp
fwait
add
pop
cdq
fstp
dec
in
jnp
adc
jl
scas
lods
jl
mov
in
lods
xor
rol
pop
out
fnsave
xchg
pop
(bad)
(bad)
sub
fsubr
mov
sub
outs
pop
sbb
sbb
sub
mov
nop
adc
stc
push
pop
shr
neg
frstor
scas
jmp
js
stc
cwde
mov
or
test
or
jp
cmova
push
mov
aas
pop
shr
cmc
add
outs
dec
ret
pop
sahf
sub
cmp
mov
pop
call
push
into
inc
retf
lods
inc
scas
sub
dec
xchg
sbb
xchg
int3
neg
sbb
xlat
pusha
and
loop
int
cmps
pop
mov
cmp
aas
xchg
sbb
rcl
rol
or
xor
dec
push
adc
mov
int3
stos
pop
ds
leave
scas
push
aas
repz
iret
call
arpl
out
into
jmp
cwde
inc
dec
mov
xchg
or
sub
(bad)
rcl
repnz
retf
scas
adc
mov
xlat
shr
movs
stc
mov
in
sbb
push
ja
inc
xor
cmp
daa
shl
test
repnz
fs
frstor
dec
mov
mov
or
jmp
(bad)
xchg
jmp
xlat
inc
sub
jg
clc
shl
mov
fbstp
bound
iret
xchg
clc
xor
xlat
dec
pushf
pop
cdq
rcr
ret
inc
sbb
add
xor
out
pop
mov
xchg
int
sti
in
pop
adc
repz
cmp
je
in
(bad)
cmc
cmp
out
jg
xchg
and
pop
jbe
xchg
xor
pusha
push
and
enter
mov
or
or
in
ret
gs
js
out
outs
inc
dec
je
jmp
aas
sahf
pop
call
lods
cdq
cmp
mov
cli
mov
(bad)
cmp
xor
ja
les
in
sub
cld
repz
aas
(bad)
cld
repz
aas
(bad)
cld
mov
push
pop
pop
sub
add
add
dec
inc
dec
inc
scas
inc
pusha
or
add
add
add
(bad)
(bad)
inc
add
add
add
add
add
add
jns
je
ins
cs
jb
ja
outs
addr16
push
gs
imul
xor
xor
inc
jne
je
jb
cmp
jb
ins
sub
push
jne
ins
imul
imul
bound
xor
data16
xor
fs
add
adc
gs
cs
jb
ja
outs
addr16
imul
add
popa
je
pop
add
add
add
add
add
lsl
add
mov
mov
inc
or
add
or
add
add
add
add
or
add
add
pusha
outs
rol
add
add
inc
dec
inc
add
mov
or
popa
add
jo
pop
jae
add
ret
add
push
ret
add
outs
test
add
adc
inc
inc
push
pop
inc
in
(bad)
test
or
xchg
sbb
pop
shl
push
test
add
je
je
dec
or
jae
sub
adc
stc
iret
jge
lahf
stos
js
sub
push
push
mov
(bad)
xchg
pop
xor
out
xor
cld
inc
popa
pop
add
cwde
xor
sbb
pop
nop
xchg
jp
mov
fimul
fucomip
fadd
(bad)
mov
scas
shl
or
loope
add
retf
fldcw
inc
out
(bad)
out
loop
xchg
in
xchg
mov
add
push
push
stos
push
enter
jns
mov
jmp
adc
loop
dec
or
retf
mov
xor
inc
fsubp
leave
pop
mov
pushf
mov
push
mov
sub
push
dec
fist
lock
pop
popf
sub
stos
ins
cwde
shl
xchg
scas
and
je
sub
pop
retf
cs
pop
fxch
add
shl
jge
loop
mov
test
push
test
mov
sbb
xchg
xchg
scas
adc
mov
inc
out
push
push
cmc
or
jmp
fnstcw
mov
ja
xchg
mov
lock
mov
dec
jl
stos
fcomp
adc
pop
push
xchg
popf
mov
mov
add
push
pop
mov
xchg
xchg
neg
mov
push
int
push
mov
lods
sbb
or
icebp
popf
cdq
and
out
jecxz
mov
fldenv
jmp
fldenv
push
pop
sahf
sub
outs
xor
cmp
dec
or
push
mov
push
mov
push
pushf
mov
loop
and
repz
data16
in
es
jmp
pop
dec
jg
sub
rcr
inc
fsubr
inc
jae
movs
outs
cli
scas
mov
or
retf
ss
add
jno
push
xor
adc
mov
lds
sub
in
call
in
sbb
dec
in
cmp
test
cmp
add
stos
mov
(bad)
mov
sbb
aam
xlat
or
cdq
loope
push
lahf
sub
jne
test
jnp
cmps
in
xchg
fcomp
ret
adc
aaa
stc
aaa
and
bound
pop
(bad)
popf
xchg
mov
mov
or
mov
xchg
fabs
adc
mov
ds
movs
popa
pop
ja
cmps
pop
pop
(bad)
rol
neg
fisubr
inc
int
repnz
xchg
sbb
xchg
jae
push
test
push
shr
je
rcl
push
push
hlt
dec
mov
pop
int3
test
and
lock
(bad)
cli
aas
popf
movs
sti
push
mov
sti
cmps
cmps
dec
xor
cmc
add
mov
xchg
jmp
in
dec
dec
sub
rep
adc
movs
and
ret
cmp
pop
mov
not
aad
stos
es
push
sub
lods
es
sub
pop
retf
xchg
mov
jp
ins
fadd
mov
or
dec
ins
and
dec
add
ds
pop
mov
cmps
jge
(bad)
and
jmp
mov
aam
pop
mov
mov
mov
xchg
in
adc
pop
data16
inc
ficomp
mov
or
sbb
and
cdq
or
and
jns
cmp
mov
and
jb
sbb
add
and
xchg
scas
pop
xor
sbb
mov
das
loopne
pop
push
sub
ins
retf
or
or
fwait
push
in
inc
mov
or
and
jb
cwde
dec
sti
sbb
lods
or
push
mov
aam
aam
lock
xchg
jbe
(bad)
in
or
sub
jl
mov
sbb
add
xor
xchg
mov
test
shl
movs
int3
mov
mov
or
mov
out
xchg
pop
rcl
mov
mov
pop
ds
push
mov
sbb
fidivr
xor
cld
test
and
int
add
aam
mov
btr
pop
mov
sub
xchg
push
inc
out
push
mov
adc
xor
xor
movs
retf
mov
in
cmp
icebp
jnp
mov
mov
pop
sub
out
jne
popf
cmp
popa
dec
cmc
xor
pop
pop
fbld
cmp
or
bound
dec
fstp
cmp
pop
aam
retf
lahf
mov
call
test
fsub
ror
test
mov
mov
lahf
cli
jb
test
jp
es
out
stos
mov
ror
pop
jle
jbe
push
out
cmps
int3
jge
xor
(bad)
mov
sub
push
cwde
and
fmulp
cli
jns
pop
inc
jecxz
xor
xor
movs
adc
and
jmp
(bad)
in
movs
xor
pop
jmp
mov
push
push
sub
loop
ins
cmc
push
lock
push
jb
pop
repz
in
pop
cdq
out
push
sbb
pushf
cmp
or
out
lds
sbb
test
dec
loope
push
jnp
js
xor
and
dec
jnp
aas
pushf
idiv
xchg
pushf
out
(bad)
icebp
call
nop
stos
test
xchg
jle
mov
push
(bad)
jne
fsubr
add
xor
clc
mov
out
test
push
das
push
add
and
enter
sub
mov
arpl
gs
sbb
xor
pop
std
pop
adc
dec
push
scas
dec
jg
in
dec
gs
mov
test
rol
jmp
gs
sti
cmp
pop
and
jns
std
xchg
nop
push
and
test
dec
mov
aam
pushf
imul
rcr
xchg
mov
fcomp
js
ret
add
fdivr
push
es
sub
aam
mov
test
pop
push
inc
mov
xchg
or
jo
pop
jmp
jge
mov
mov
ret
aaa
lods
jbe
and
sbb
mov
fsubr
jg
cmc
inc
inc
pushf
ds
xor
mov
ins
rol
fst
leave
test
and
adc
movs
add
push
pop
cwde
arpl
enter
out
fimul
xbegin
jg
in
sbb
pop
jo
push
mov
(bad)
ja
mov
out
fst
cmps
repz
adc
sub
mov
sbb
stos
cwde
inc
inc
aam
or
jmp
mov
push
stc
xchg
imul
push
sar
pop
push
sbb
popf
retf
ror
jmp
sbb
push
inc
cmc
les
xchg
xor
jp
enter
imul
aaa
xchg
shl
add
and
inc
jne
data16
test
adc
mov
gs
and
sbb
jmp
stos
pop
jle
test
mov
or
inc
xchg
cmp
add
shl
dec
in
mov
cmp
arpl
dec
mov
xchg
xchg
pop
daa
jbe
add
sbb
rol
(bad)
push
outs
or
retf
pop
adc
sbb
movs
push
cs
cmc
adc
fstp
mov
sbb
mov
ret
shl
repnz
mov
dec
mov
mov
jns
cli
push
jae
cmp
retf
xchg
pop
pop
mov
adc
sahf
cwde
test
add
mov
inc
(bad)
imul
cmp
ins
jmp
jns
cld
fcmovbe
and
aaa
xchg
push
ret
outs
mov
in
std
fisub
movs
inc
gs
stos
retf
dec
stos
sbb
adc
push
fwait
retf
mov
adc
and
xor
dec
inc
or
fisub
jp
jbe
mov
in
mov
sbb
mov
shr
and
mov
lods
xor
add
jbe
fidiv
jbe
mov
and
mov
pop
loopne
test
sbb
mov
cld
mov
adc
pop
dec
shl
pop
icebp
loope
loop
pop
push
aad
aad
mov
pop
ret
mov
adc
inc
scas
dec
adc
or
pop
iret
add
test
adc
das
aaa
xlat
test
jmp
push
xor
hlt
inc
add
mov
cmp
or
jmp
push
xchg
or
dec
dec
xor
dec
mov
retf
mov
push
mov
sbb
(bad)
fadd
push
pop
imul
hlt
stos
jecxz
xchg
push
out
test
rcl
out
fidivr
icebp
cld
in
popa
sub
push
push
jmp
pop
cld
pop
lods
jmp
bound
iret
(bad)
js
and
fdiv
pushf
rcl
imul
jecxz
xor
xchg
and
bound
sub
dec
cld
inc
clc
lods
add
ret
jno
fldlg2
xchg
or
pop
sbb
gs
and
retf
outs
mov
mov
pop
jbe
inc
das
pop
loop
pop
mov
or
add
gs
js
lahf
mov
out
pop
lods
jb
cli
or
xor
sbb
pop
out
cld
sub
add
push
sub
mov
movzx
sar
dec
sub
pop
or
iret
std
call
data16
retf
or
in
aad
popa
mov
int3
and
adc
xor
pop
mov
mov
inc
dec
fstp
div
stos
jecxz
sub
pop
retf
mov
xchg
test
mov
movs
iret
bound
mov
sub
jns
xchg
arpl
push
inc
test
mov
in
shr
fcomp
xchg
cmc
outs
jge
ins
cmp
xchg
aad
jmp
push
shl
das
mov
sbb
popf
fsubr
in
ret
aaa
test
add
mov
fwait
push
test
pop
sar
pusha
gs
xor
(bad)
sbb
add
test
test
je
jno
js
mov
pop
imul
mov
ins
fcomp
popa
popa
cmp
dec
jb
(bad)
test
cmps
mov
pop
mov
aam
add
mov
inc
cs
outs
mov
adc
je
or
lock
popa
or
push
mov
xor
jecxz
pop
shr
jle
rol
es
sbb
mov
ret
adc
add
add
in
rcr
push
aaa
lahf
call
push
loop
or
mov
fdivr
and
and
(bad)
ror
sbb
stos
mov
sub
bswap
push
lods
mov
xor
cmps
xchg
imul
jl
jg
lods
add
push
jg
sub
push
imul
repz
(bad)
dec
cwde
sbb
adc
adc
hlt
sbb
std
ficom
dec
mov
mov
out
mov
dec
push
cdq
daa
pop
adc
aas
push
rep
lds
je
retf
cmp
or
dec
hlt
and
cmp
(bad)
xor
mov
scas
ja
(bad)
xchg
and
xchg
out
int3
out
shr
dec
test
sbb
cdq
js
adc
(bad)
jbe
cdq
mov
ja
cmps
push
pop
jns
stos
adc
and
lods
adc
das
and
xor
inc
add
adc
inc
in
loope
xor
and
aad
push
pop
das
pop
shr
and
push
out
push
adc
and
pop
call
sub
ins
jle
push
fcom
popa
sti
stc
hlt
popa
loopne
mov
mov
(bad)
lods
jb
pop
aad
or
data16
xor
loopne
xor
dec
push
aam
jo
jbe
adc
xor
out
retf
mov
aam
sub
clc
ret
dec
sbb
mov
inc
int3
movs
jnp
mov
mov
inc
add
fcmovne
mov
dec
into
cmp
scas
mov
sub
mov
jecxz
fsub
setno
(bad)
(bad)
in
pusha
mov
mov
jae
dec
icebp
repnz
shr
cs
in
rcr
stos
mov
jp
xchg
mov
or
mov
pop
pop
cwde
jns
jmp
into
push
or
movs
(bad)
jecxz
bnd
jl
xchg
gs
jmp
rcl
add
stos
mov
call
call
out
pop
fadd
mov
clc
cmp
ss
(bad)
dec
inc
arpl
mov
lods
push
cmp
ja
into
rcr
xchg
aam
(bad)
in
out
movs
sub
in
lahf
imul
cmp
loop
test
cmp
cmp
pop
xchg
loopne
out
rcr
(bad)
fild
stc
lock
xor
mov
sahf
cli
dec
inc
inc
(bad)
cwde
es
scas
aad
xchg
jns
sar
adc
div
jo
sub
bound
out
fstp
les
sbb
mov
aad
mov
gs
mov
or
cmp
retf
mov
ret
(bad)
xor
out
fwait
std
test
aam
and
fcomp
stos
arpl
sbb
retf
rcl
cmp
and
mov
loopne
cmp
pop
dec
mov
imul
pusha
lds
cdq
cli
out
cmp
ss
mov
xor
bound
outs
js
int
cmp
fwait
xchg
or
and
in
jnp
imul
sti
pop
xchg
loop
mov
jns
rcr
stc
out
dec
push
imul
into
test
popa
mov
ret
and
mov
mov
sbb
test
out
leave
pop
(bad)
sub
(bad)
out
pusha
test
and
mov
xlat
std
inc
pusha
stc
xchg
pop
inc
int
hlt
adc
repnz
ret
xchg
add
or
ja
push
xor
adc
adc
mov
repnz
mov
mov
pop
outs
pop
into
jbe
jnp
int
pusha
xor
or
in
sub
jmp
scas
aad
adc
mov
pop
mov
and
clc
mov
loope
jp
and
repz
adc
addr16
dec
arpl
push
fcomp
inc
dec
addr16
cmp
sub
jnp
push
loop
lods
fisttp
mov
mov
cdq
xor
inc
gs
xor
sbb
mov
xor
or
sbb
std
outs
inc
cld
test
xchg
or
ja
cmp
or
mov
xor
cld
push
pop
sbb
repnz
int
add
jg
sahf
mov
pop
sahf
test
and
ins
xchg
jnp
xchg
inc
scas
js
sub
add
jns
adc
call
jmp
fdivr
pop
lds
(bad)
mov
and
cmp
jp
mov
ror
mov
mov
dec
cmp
cmps
xor
or
shr
sbb
cmc
mov
das
jb
jns
movs
push
icebp
push
cmp
add
mov
addr16
jle
inc
dec
xchg
mov
jge
adc
sbb
(bad)
cmp
repz
and
div
jo
xchg
xchg
lods
xor
pop
(bad)
dec
fadd
adc
push
call
sub
aas
jmp
cmp
xor
pop
jge
gs
aas
jae
jb
(bad)
int3
mov
or
inc
mov
xchg
and
sbb
cwde
outs
and
pop
outs
xlat
loopne
or
push
jne
movlps
xor
mov
(bad)
jg
mov
sub
fbld
xlat
lods
adc
dec
ins
xchg
and
inc
pop
(bad)
movs
push
xor
test
dec
icebp
jne
fistp
into
stos
push
mov
jmp
jg
call
xchg
fnstsw
adc
mov
add
push
gs
jns
repnz
bound
inc
popf
repnz
outs
cmc
repnz
ins
test
jp
cmp
out
fcom
sti
inc
popa
out
test
aam
mov
cmp
jae
sar
inc
outs
jle
bound
jno
pop
push
xchg
sub
sbb
je
aad
cld
cmps
out
push
clc
hlt
fcmovbe
xchg
sahf
std
lods
push
mov
mov
or
mov
push
popf
jp
mov
cmp
arpl
dec
mov
mov
fcom
(bad)
imul
iret
aas
(bad)
cld
repz
aas
jmp
jl
out
inc
js
or
add
add
dec
inc
scas
inc
pusha
or
add
add
add
(bad)
(bad)
inc
add
add
add
add
add
add
jns
je
ins
cs
jb
ja
outs
addr16
push
gs
imul
xor
xor
inc
jne
je
jb
cmp
jb
ins
sub
push
jne
ins
imul
imul
bound
xor
data16
xor
fs
add
adc
gs
cs
jb
ja
outs
addr16
imul
add
popa
je
pop
add
add
add
add
add
lsl
add
mov
mov
inc
or
add
or
add
add
add
add
or
add
add
pusha
outs
rol
add
add
inc
dec
inc
add
mov
or
popa
add
jo
pop
jae
add
ret
add
push
ret
add
outs
test
add
adc
inc
inc
push
pop
inc
in
(bad)
add
add
scas
out
ffree
mov
push
rcr
dec
dec
aaa
xor
sbb
outs
push
jae
cmp
dec
fidiv
fnsave
jb
out
cwde
icebp
jg
(bad)
mov
stos
clc
add
jmp
xchg
sbb
add
sub
test
jg
lahf
mov
ret
xchg
enter
cmp
sub
lahf
outs
aas
int3
enter
mov
sahf
sti
lds
xchg
inc
nop
or
cmc
mov
jmp
mov
cmp
sbb
adc
sub
sub
cmc
gs
add
cld
enter
dec
lahf
aas
cmp
push
jecxz
rcr
push
popa
mov
or
sar
test
(bad)
or
lods
test
jmp
pop
enter
pop
mov
cmp
mov
stos
mov
jns
out
aad
stos
push
scas
mov
into
pop
xchg
std
xchg
pop
xchg
push
popf
jnp
inc
inc
retf
ds
shrd
mov
mov
sub
fisttp
jno
or
lea
push
pushf
clc
fcomp
pop
movs
aad
shl
sbb
addr16
inc
add
dec
or
nop
out
xlat
cmp
sahf
(bad)
outs
out
and
mov
dec
add
ds
mov
popf
pop
sub
jge
repz
dec
data16
sub
scas
cmc
dec
ror
outs
dec
mov
test
jno
and
xchg
out
mov
xchg
inc
xchg
fisub
lods
pop
xor
fst
das
pop
push
adc
dec
imul
cmp
mov
cld
sahf
dec
add
mov
jne
dec
lods
out
push
or
cmps
test
stos
add
in
clc
xlat
push
test
push
iret
xor
push
dec
mov
xchg
(bad)
dec
cdq
sbb
stc
dec
sbb
stos
mov
xor
test
mov
push
sub
sub
jp
aas
xchg
and
sub
neg
xchg
inc
clc
dec
sub
ret
add
sbb
in
std
mov
pusha
gs
repz
xchg
jl
out
push
fisubr
neg
push
mov
in
inc
imul
mov
gs
movs
mov
push
xor
call
mov
jo
cmps
dec
cmp
dec
dec
jne
cmps
bound
mov
cmp
lds
and
ds
push
out
push
cld
js
mov
aam
test
fiadd
mov
ret
and
mov
mov
cmp
pop
pop
lods
dec
push
dec
shl
or
repz
leave
mov
jae
jg
mov
xor
jg
cmp
addr16
scas
adc
aad
pop
clc
jge
xchg
in
pushf
fs
push
stc
sbb
fstp
jl
add
outs
mov
jns
sub
jle
inc
int3
pop
cs
iret
rcr
xchg
xor
aad
(bad)
mov
in
and
dec
push
add
ret
sahf
sbb
les
je
sub
pop
mov
icebp
jmp
cli
jmp
inc
lock
fstp
mov
sbb
ins
scas
pop
out
mov
les
rol
mov
or
adc
movs
enter
push
(bad)
jne
imul
pop
les
sub
popa
or
call
std
loopne
pop
retf
scas
test
xchg
and
mov
xor
push
aam
xor
lods
out
std
dec
mov
scas
ret
mov
mov
inc
inc
jmp
mov
(bad)
icebp
pop
jecxz
neg
pop
repnz
neg
ss
jnp
push
js
mov
iretw
pop
mov
ret
lahf
movs
or
sub
adc
mov
pop
cwde
jbe
mov
push
in
pop
add
xchg
mov
mov
adc
fldenv
cs
out
scas
push
ins
ins
jmp
push
and
aad
test
xchg
adc
lods
data16
jo
pop
mov
out
jne
xor
jbe
sbb
and
mov
push
ins
sbb
mov
in
shr
in
jecxz
mov
pop
std
cmp
in
ss
xlat
mov
push
cmp
mov
xchg
repnz
nop
push
icebp
xchg
ss
repz
in
in
pop
sti
sbb
std
(bad)
in
jne
bswap
in
push
mov
pop
mov
stos
lahf
sub
imul
fidiv
xor
(bad)
sub
stc
cwde
dec
pop
mov
out
dec
(bad)
sti
in
div
mov
lods
enter
data16
aam
jp
sub
and
sbb
cmp
cmp
data16
xor
dec
pop
repnz
pop
xor
pop
mov
repz
in
call
dec
or
mov
loop
(bad)
mov
push
aas
pop
mov
ja
arpl
xchg
lods
pop
(bad)
arpl
movs
lds
push
jp
mov
jge
loop
popf
setbe
cmc
and
xor
ja
ins
nop
adc
inc
bound
call
mov
loopne
add
mov
hlt
lods
out
inc
aaa
dec
jecxz
dec
xor
test
pushf
rcl
popf
adc
push
mov
loop
adc
cmp
movs
aad
cs
xchg
out
fist
push
mov
inc
movaps
sub
inc
pop
or
or
lahf
sbb
or
stos
ins
cmp
aam
jecxz
xchg
imul
mov
sub
dec
xchg
cwde
cmc
in
stos
xchg
pop
idiv
dec
pop
das
xchg
mov
sub
xor
push
sub
inc
dec
nop
jmp
js
inc
leave
gs
adc
mov
pop
dec
in
add
xchg
jle
mov
aaa
iret
mov
adc
or
jnp
pop
in
dec
out
inc
dec
movs
and
jecxz
mov
add
or
xor
dec
retf
popf
fldcw
mov
(bad)
mov
ja
sbb
rcr
and
hlt
adc
jbe
xchg
xchg
clc
leave
pop
retf
add
add
adc
adc
in
xchg
lahf
push
jle
fwait
(bad)
call
inc
sahf
fdivp
xor
xor
mov
jb
pusha
loop
dec
aaa
daa
or
fs
int3
xor
lods
adc
sub
retf
cmp
jns
cmp
and
and
ins
repz
cmp
jg
sahf
mov
sbb
jo
mov
push
xchg
fisub
add
push
push
aad
mov
imul
dec
sar
mov
pop
mov
pop
loope
mov
mov
das
cmp
inc
mov
les
rcpps
sub
in
imul
mov
push
aam
das
call
pop
stos
nop
movs
fimul
int3
push
iret
dec
jae
dec
test
loope
shr
xlat
push
push
adc
mov
test
adc
dec
sbb
push
bound
adc
adc
into
cmp
cmp
push
mov
add
inc
ja
adc
mov
ins
in
call
xor
jns
add
add
iret
mov
and
ror
(bad)
mov
and
bnd
sbb
mov
fsub
jmp
mov
gs
cmp
mov
int3
xchg
inc
daa
shufps
loop
push
iret
jecxz
adc
outs
and
fst
fadd
(bad)
or
adc
xchg
out
or
cmp
stos
jg
fld
mov
dec
sbb
test
cmp
inc
sar
dec
bound
jle
push
cmps
pop
int
sbb
xchg
xchg
rcr
sbb
call
dec
mov
mov
inc
ss
fucomp
icebp
or
xchg
or
pop
mov
sbb
sub
jo
fld
inc
cmp
inc
(bad)
mov
mov
sbb
clc
xchg
int3
jp
xchg
pop
bnd
clc
aaa
(bad)
cmps
cmp
cwde
fwait
jnp
test
mov
push
pusha
mov
push
push
xchg
dec
pop
dec
push
iret
jae
inc
add
add
loop
out
pushf
fldenv
scas
ror
dec
mov
mov
mov
push
fldenv
ficom
es
retf
test
jnp
cmc
dec
leave
cmovb
addr16
retf
daa
mov
cmp
pop
cmp
leave
pop
sub
loope
jmp
mov
xor
imul
xchg
sbb
mov
sub
shl
aad
jne
and
out
(bad)
sbb
lods
pop
shl
nop
dec
push
outs
sbb
mov
jnp
icebp
ret
outs
mov
aam
add
retf
fst
(bad)
sar
repz
inc
nop
movs
popa
jno
push
or
fld
and
cmp
scas
adc
push
adc
mov
mov
inc
mov
es
mov
cmps
sub
sahf
fcomp
jg
push
dec
pop
test
in
(bad)
jnp
xchg
sbb
mov
adc
dec
push
mov
add
mov
or
lock
sti
lods
ret
call
out
pop
lods
into
js
call
pop
pop
cmp
cmc
sub
mov
and
movs
ins
push
lds
push
and
add
ins
stc
pop
or
div
addr16
inc
ret
adc
(bad)
add
dec
cmp
dec
ret
sar
aad
and
push
add
mov
addr16
pushf
js
imul
add
jns
push
add
(bad)
sub
(bad)
cmps
jnp
adc
(bad)
(bad)
sub
aas
and
mov
je
pop
repnz
or
rcr
mov
cdq
movs
jae
push
fisubr
js
pop
outs
mov
push
lods
pop
lock
sbb
in
inc
mov
aas
sbb
mov
push
xlat
inc
xor
xchg
mov
ds
pop
inc
sub
ds
pusha
test
and
mov
outs
div
push
movs
(bad)
lock
mov
ret
sbb
jg
push
popa
push
jp
or
xor
imul
xor
arpl
sahf
xchg
sbb
mov
sub
jl
fdivp
xchg
pop
call
jmp
into
stos
out
dec
stos
jmp
mov
or
mov
push
mov
add
nop
adc
lahf
je
dec
call
mov
sub
pop
cwde
mov
adc
pusha
adc
icebp
mov
mov
mov
retf
not
je
rcr
xchg
dec
popa
popf
xchg
push
mov
dec
lods
idiv
xor
mov
lods
shl
mov
adc
aam
jnp
adc
cmp
shld
mov
inc
push
jo
(bad)
inc
call
test
pop
les
dec
dec
scas
xor
enter
pop
fs
gs
std
pop
jb
outs
pop
bswap
fst
add
out
pop
nop
pop
mov
stos
jge
pop
jg
push
mov
aam
or
jae
push
pop
std
test
mov
xchg
fs
cs
jp
jle
xor
jp
cli
xor
xor
inc
pop
mov
jne
or
jns
mov
sbb
(bad)
mov
es
leave
js
cwde
dec
mov
mov
(bad)
jmp
inc
pop
cmps
adc
test
dec
sub
pop
xchg
nop
jmp
clc
pop
hlt
sbb
call
popf
(bad)
fisubr
bound
push
pop
ss
xchg
push
hlt
sub
stc
imul
out
cmp
or
stc
enter
shr
sbb
and
add
lahf
xchg
xchg
rol
icebp
mov
xchg
sub
inc
push
jmp
pop
mov
pop
mov
push
or
stos
idiv
retf
mov
and
sbb
jg
jle
ds
add
pop
int
not
loop
loopne
pop
iret
jns
mov
pop
dec
and
mov
inc
mov
jmp
or
xchg
arpl
jl
cmp
movs
fidivr
mov
std
call
int
mov
xchg
jmp
inc
mov
lods
sub
dec
sub
mov
pop
rcr
push
ss
popa
ret
jne
cmp
fiadd
lods
lahf
jae
xchg
mov
jbe
jl
pop
mov
cmp
mov
sub
adc
ins
arpl
fnstenv
add
test
clc
(bad)
xor
sahf
push
lock
sub
out
cmps
push
sbb
mov
ss
lea
lods
mov
adc
xchg
xchg
mov
iret
mov
pushf
dec
cmp
cdq
in
icebp
or
pop
push
fisubr
es
dec
pusha
xor
jb
rcr
mov
std
mov
je
icebp
sbb
call
out
je
int
and
dec
lods
xor
(bad)
xor
jecxz
daa
int3
loop
dec
xor
sahf
(bad)
xor
inc
div
ret
out
retf
inc
in
pop
sbb
adc
stos
rcr
mov
(bad)
cmc
je
sbb
lods
cmp
pop
test
out
aad
cdq
mov
lods
xor
popa
jae
jne
fidiv
es
leave
or
aaa
or
push
(bad)
outs
and
rcr
shl
in
push
pop
lods
outs
pop
repnz
dec
xchg
jle
and
mov
fisttp
in
inc
push
or
lods
cmc
js
push
lahf
imul
cmps
lea
sub
outs
in
out
(bad)
lock
cmp
ss
xchg
pop
inc
test
sbb
xor
jo
test
mov
loopne
xchg
neg
mov
inc
push
cmp
adc
sub
shr
pop
inc
cld
and
inc
shr
xchg
std
test
xor
js
test
mov
xor
leave
aad
call
mov
cmp
jg
mov
mov
mov
jmp
and
ret
pop
fidivr
loopne
inc
in
es
ds
call
cmp
mov
cmp
mov
(bad)
lock
jecxz
or
scas
sbb
jle
push
pushf
into
mov
push
or
movzx
push
xchg
(bad)
mov
loopne
add
outs
push
pop
mov
push
push
xchg
mov
xchg
xor
stos
or
push
cdq
call
xor
adc
xchg
cmps
sahf
fldcw
inc
jle
add
mov
mov
mov
(bad)
dec
add
or
in
ds
add
inc
mov
pop
mov
sub
lock
cdq
pop
inc
jnp
dec
inc
movs
pusha
ret
fwait
scas
movs
into
adc
cmp
xor
push
jne
and
daa
arpl
fnsave
or
in
pushf
std
rol
xchg
lds
cmps
shr
ja
test
and
pop
mov
dec
and
addr16
sbb
fadd
xor
daa
scas
clc
enter
ud1
outs
lds
clc
(bad)
iret
cmc
sub
cdq
retf
pop
pusha
sub
push
mov
jbe
push
push
movs
or
sar
aaa
xchg
sbb
int
dec
xchg
sbb
mov
jne
sub
push
leave
mov
mov
in
cmp
into
fcmove
pop
fdivr
and
in
mov
das
add
cs
mov
test
adc
pop
dec
sub
dec
sbb
lahf
cmp
jmp
in
mov
into
sub
pusha
(bad)
(bad)
and
add
mov
dec
stc
mov
xchg
test
ins
fdivr
sbb
jmp
sub
mov
fild
fiadd
cs
jns
sahf
pop
mov
mov
push
push
jno
int
xor
dec
sar
xchg
(bad)
cmps
ja
mov
jp
jae
jp
cli
cld
and
ins
sbb
fcom
mov
jo
mov
fisub
xchg
xchg
jns
cli
pop
stc
(bad)
call
adc
adc
loope
sar
fwait
jl
mov
sbb
iret
aas
(bad)
cld
repz
aas
(bad)
cld
repz
add
cmovne
scas
mov
dec
inc
dec
inc
scas
inc
pusha
or
add
add
add
(bad)
(bad)
inc
add
add
add
add
add
add
jns
je
ins
cs
jb
ja
outs
addr16
push
gs
imul
xor
xor
inc
jne
je
jb
cmp
jb
ins
sub
push
jne
ins
imul
imul
bound
xor
data16
xor
fs
add
adc
gs
cs
jb
ja
outs
addr16
imul
add
popa
je
pop
add
add
add
add
add
lsl
add
mov
mov
inc
or
add
or
add
add
add
add
or
add
add
pusha
outs
rol
add
add
inc
dec
inc
add
mov
or
popa
add
jo
pop
jae
add
ret
add
push
ret
add
outs
test
add
adc
inc
inc
push
pop
inc
in
(bad)
add
add
scas
cmp
fnsave
xchg
dec
ja
dec
push
cmps
fcomi
in
mov
into
leave
arpl
popf
fwait
cdq
outs
push
xchg
pop
iret
out
repz
add
sbb
or
call
mov
stos
cld
mov
stc
stc
xchg
sbb
inc
iret
adc
push
jg
cmps
mov
cmc
sbb
add
add
sub
jnp
call
or
pop
cmp
push
cmps
push
mov
xchg
out
das
adc
adc
stos
dec
cwde
jmp
int3
cld
or
mov
scas
mov
aas
cmps
scas
fs
jno
std
movs
inc
mov
(bad)
adc
mov
and
and
in
or
fwait
push
stos
popa
mov
push
dec
int3
(bad)
adc
jmp
nop
in
lods
dec
shl
bound
and
outs
or
int
out
mov
into
push
mov
imul
aaa
es
push
ret
ret
push
push
cwde
and
fcom
jns
adc
lods
add
pop
jmp
and
sar
mov
js
in
jbe
mov
mov
push
add
pop
mov
inc
mov
outs
jg
and
mov
pop
or
in
ret
push
mov
inc
inc
sbb
xchg
sub
das
or
pop
inc
lods
cmp
dec
shl
xor
mov
sub
mov
aad
stos
add
jb
pop
out
fsub
mov
cs
loope
sub
mov
mov
retf
xchg
aad
enter
or
call
push
leave
mov
in
mov
(bad)
jo
mov
fwait
int3
dec
mov
xchg
cdq
xchg
pop
jmp
mov
imul
lods
push
xchg
pop
add
sub
aad
and
bound
int
jo
fst
mov
pushf
bound
or
mov
inc
xor
popf
in
leave
mul
mov
push
or
sub
mov
inc
sub
or
iret
ins
mov
jmp
pop
inc
lock
pop
xchg
sbb
outs
int
lods
out
add
cmps
dec
jmp
pop
sub
(bad)
mov
adc
jo
sbb
arpl
push
mov
mov
loopne
mov
mov
push
scas
lea
xchg
repnz
outs
xchg
mov
xor
retf
loop
mov
sti
sub
push
push
push
call
mov
xchg
xchg
loop
aaa
mov
hlt
jge
in
cld
int
cmp
inc
repz
stos
mov
push
lea
pop
test
mov
outs
outs
hlt
outs
sbb
jecxz
xchg
jmp
mov
aam
cmps
mov
or
les
call
in
pop
inc
outs
out
dec
inc
popf
xor
fsqrt
jmp
dec
movups
jle
iret
retf
les
xor
(bad)
sbb
imul
mov
pushf
cmc
(bad)
hlt
lods
call
(bad)
imul
sti
cmp
push
sbb
test
ret
fdivr
scas
cmps
pop
pusha
mov
or
stos
cwde
pusha
paddw
mov
adc
aas
mov
jb
sbb
loope
shr
cmp
mov
sbb
push
pop
ins
out
nop
dec
cs
xor
in
inc
retf
(bad)
int
sbb
(bad)
out
jne
sub
cwde
popf
lea
aaa
push
or
mov
outs
popa
mov
or
mov
clc
(bad)
sub
xchg
cmp
lock
or
nop
inc
sub
es
icebp
cwde
pop
ja
dec
pushf
ror
jnp
mov
cmp
ds
xor
add
push
ficomp
lock
xor
test
sbb
mov
pop
pop
and
(bad)
scas
outs
sub
adc
in
push
pop
dec
push
sub
xor
in
pop
dec
jmp
mov
pop
data16
arpl
sbb
outs
sbb
or
jge
push
je
or
mov
(bad)
or
shr
sub
das
(bad)
sti
jne
inc
(bad)
or
fcom
inc
adc
and
sub
scas
adc
(bad)
cmp
jb
call
sub
sahf
xchg
dec
ins
adc
js
push
(bad)
jb
or
push
sub
test
test
repnz
jmp
jmp
pusha
stos
mov
pop
cmp
cwde
icebp
lods
mov
popf
scas
jnp
push
call
jge
dec
(bad)
bound
jbe
xchg
xor
js
shl
imul
pop
xchg
in
pop
test
lds
inc
(bad)
sbb
sbb
mov
adc
jns
jns
dec
scas
aad
ret
out
pop
dec
adc
dec
dec
jb
sti
ss
mov
xchg
inc
dec
or
retf
dec
push
cmp
icebp
sar
mov
(bad)
rcr
mov
ins
jge
nop
hlt
mov
mov
cmps
inc
jge
std
jecxz
or
pop
shl
test
jecxz
inc
lods
mov
into
movs
mov
ins
fcomp
xor
inc
aad
cli
sub
leave
popa
arpl
xchg
repnz
xchg
sbb
mov
xor
mov
test
xchg
mov
jecxz
in
cwde
mov
push
push
aaa
ror
getsec
(bad)
cld
ret
aad
push
adc
mov
hlt
mov
inc
pop
in
or
loope
jl
bt
loope
sub
hlt
(bad)
xor
xchg
loopne
icebp
aad
sar
push
xor
xor
cmp
sbb
aam
mov
jnp
imul
mov
les
movs
mov
mov
push
test
jns
dec
int
pop
jle
aas
mov
jmp
jge
cmp
in
stc
inc
inc
shr
adc
pop
sbb
cmp
adc
rcr
cmps
cmp
jle
lock
pop
fiadd
into
cmps
mov
mov
sbb
sbb
mov
cwde
pop
lock
lds
hlt
cmp
xor
outs
out
mov
mov
cmps
dec
jmp
sub
js
cmps
repnz
or
jecxz
ficomp
outs
mov
fisub
imul
xor
repnz
test
xor
and
lahf
push
mov
xlat
adc
xchg
dec
or
adc
cmp
test
xchg
sar
cdq
(bad)
mov
enter
cdq
sub
std
add
scas
out
push
and
loop
mov
ins
mov
jle
dec
jne
divps
push
mov
mov
in
sbb
cmp
std
in
mov
mov
movs
xchg
sbb
mov
into
mov
inc
bswap
aaa
repz
adc
add
add
in
pop
scas
push
sub
loope
sub
ror
xchg
cli
push
aam
dec
jns
in
xchg
daa
jmp
inc
outs
scas
add
leave
cmp
in
out
mov
mov
iret
ss
stc
int3
pop
cmp
add
(bad)
mov
pop
out
nop
cmp
push
(bad)
mov
jmp
rcr
retf
xchg
push
fcomi
std
ja
push
inc
(bad)
dec
and
out
mov
push
xor
jb
shr
xchg
mov
nop
sub
lods
out
mov
mov
mov
sbb
inc
inc
pushf
sub
sbb
mov
imul
lods
ror
fs
lahf
mov
xor
xchg
dec
cmps
inc
jns
xor
ds
pushf
stos
sahf
push
sbb
xchg
nop
push
cmp
(bad)
push
shl
push
mov
and
inc
jo
dec
jnp
(bad)
shr
lahf
outs
inc
fs
mov
dec
adc
mov
mov
dec
sub
js
mov
cmps
pop
or
mov
inc
or
or
jno
jbe
in
mov
mov
mov
sbb
pop
std
call
adc
mov
lods
mov
mov
xor
xchg
dec
push
lahf
cmp
pusha
xchg
push
sbb
xchg
call
push
call
jp
pop
int3
adc
fst
jp
test
imul
aaa
sbb
mov
push
shufps
dec
mov
jne
movs
test
pop
out
into
push
ror
xor
std
mov
aad
lods
cli
mov
sbb
pop
outs
test
adc
jg
xor
xor
and
jns
sub
push
imul
arpl
nop
pop
and
sbb
mov
cmp
aad
mov
jnp
(bad)
jb
sbb
arpl
sub
pop
mov
iret
cli
push
jbe
stos
adc
jns
imul
cwde
fs
push
leave
imul
jle
mov
and
adc
jmp
mov
mov
jg
jl
adc
xchg
sub
pop
dec
cmps
jns
xor
dec
mov
dec
cli
imul
jb
cld
dec
nop
popf
jp
jmp
mov
xchg
hlt
dec
and
call
repnz
addr16
inc
hlt
adc
sbb
test
or
pop
push
push
fsub
push
aaa
push
pop
push
ss
cmp
in
mov
fmul
and
dec
xor
into
xor
push
into
sub
cmp
movs
stos
out
nop
xor
scas
test
pusha
jo
inc
in
out
loop
imul
pop
out
jmp
ret
(bad)
mov
adc
fdivr
adc
dec
jmp
imul
mov
or
mov
je
scas
imul
and
and
aas
cwde
jmp
push
test
repz
jp
movs
rol
leave
fist
xlat
mov
or
inc
dec
jnp
xchg
inc
push
jae
jb
jbe
ds
dec
enter
shl
sbb
adc
inc
std
inc
jno
enter
repz
sahf
inc
and
imul
and
aad
mov
xor
icebp
cmp
frstor
dec
mov
out
test
mov
lock
sar
cs
and
jne
mov
mov
jns
sbb
mov
or
test
aaa
in
xor
xor
pusha
sti
fidivr
mov
pop
mov
push
fistp
inc
xor
fld
scas
cmp
xchg
movs
ss
and
cld
ret
sub
xor
jge
stc
shl
outs
daa
jo
rcr
jle
shl
push
(bad)
lods
push
bound
ins
xor
aas
inc
xor
jmp
jmp
push
jns
jg
hlt
rcl
xchg
int
jnp
mov
pop
mov
clts
leave
pop
inc
xlat
mov
inc
sub
or
les
mov
movs
icebp
add
and
pxor
cmp
cmp
mov
fwait
shl
push
(bad)
or
jp
neg
inc
inc
or
jo
(bad)
mov
jg
push
xchg
inc
fs
imul
cmc
icebp
sbb
cmp
dec
(bad)
popf
or
xor
adc
push
mov
xor
js
(bad)
cmp
ins
push
(bad)
sbb
popa
pop
dec
mov
sahf
sahf
sbb
pop
stos
cmp
call
sbb
adc
xlat
mov
jns
dec
pusha
mov
sbb
repnz
int3
pop
inc
or
test
into
lea
or
mov
cmp
in
sub
or
inc
loope
adc
lods
test
mov
jle
je
sbb
sub
xor
cmps
(bad)
aad
loop
rcl
cmps
retf
xchg
pop
shr
rcl
das
mov
scas
in
adc
and
inc
mov
inc
and
ins
sub
jb
cmp
jae
add
aaa
inc
int
mov
pop
xchg
mov
pop
cmp
adc
in
das
(bad)
in
cld
jmp
mov
sbb
int
xor
rol
repz
xlat
sahf
add
pop
jb
fild
xor
adc
mov
sbb
sahf
arpl
mov
iret
mov
push
mov
cld
or
shr
inc
jbe
pop
jmp
ucomiss
daa
ror
jb
sbb
jp
push
inc
sub
sub
jns
stos
mov
icebp
dec
adc
lds
or
(bad)
and
or
dec
cs
push
xor
inc
leave
pop
sub
mov
pop
(bad)
outs
mov
add
rep
out
rcr
bound
movs
mov
jg
fsub
jge
xor
xchg
ror
mov
cmps
mov
jl
and
loop
mov
push
ja
adc
mov
inc
xor
stc
int
dec
pop
std
cld
dec
mov
jge
mov
fs
add
xchg
mov
out
ds
adc
jle
push
push
cmp
addr16
aam
imul
adc
xchg
sbb
cli
xchg
aad
cmps
inc
imul
xor
outs
xchg
add
mov
push
mov
push
pop
mov
(bad)
pop
outs
mul
push
(bad)
push
mov
xor
ror
aaa
mov
fstp
mov
add
clc
cmp
movs
into
or
fdivr
and
mov
inc
xlat
and
xchg
dec
(bad)
cld
int
add
push
jmp
xor
jge
jo
pushf
xchg
je
or
(bad)
xor
xchg
into
or
lods
pop
lds
(bad)
out
cmps
ret
movs
fdiv
ret
cld
pop
xor
sub
loopne
mov
sar
adc
sub
das
pop
popa
mov
push
in
fsincos
jb
repz
mov
outs
sahf
dec
or
mov
lock
cdq
xchg
cmc
leave
gs
jmp
pop
pop
neg
in
int
and
push
inc
mov
mov
lods
and
jo
sub
stos
jge
sub
and
std
cdq
dec
jge
xlat
test
mov
in
stos
xor
fwait
push
mov
cmps
inc
dec
cmps
cmps
arpl
sahf
pop
adc
daa
cmp
lahf
scas
mov
ss
cmc
dec
hlt
sbb
outs
imul
jnp
xchg
mov
adc
mov
cwde
xchg
cwde
repnz
les
(bad)
cmp
cli
lock
rcr
imul
mov
out
sbb
cmp
stos
idiv
stos
mov
hlt
shl
mov
ficom
adc
mov
icebp
cld
cmp
mov
mov
call
retf
jbe
mov
rol
std
adc
dec
or
cld
and
mov
stos
jns
xchg
mov
adc
dec
xor
xchg
mov
retf
daa
adc
cmp
stos
dec
adc
(bad)
sub
jnp
pop
(bad)
push
test
adc
js
pop
xchg
lea
mov
push
jb
inc
test
test
ret
jmp
imul
push
cmps
outs
jle
sub
mov
dec
xor
out
(bad)
out
cs
mov
out
pop
out
jp
outs
jmp
gs
jg
adc
jno
dec
iret
dec
cmp
inc
cwde
loopne
add
sahf
adc
inc
mov
icebp
inc
mov
loopne
jl
xor
xor
jl
stc
dec
loope
imul
xchg
mov
es
sub
add
scas
out
mov
xor
(bad)
mov
mov
xchg
das
push
ret
addr16
cmp
or
push
and
das
cmp
xor
xchg
push
pushf
imul
and
fcomp
fucom
je
and
fwait
bound
cmc
cmp
cmp
adc
jns
pop
(bad)
js
fild
scas
sti
test
test
jno
jmp
test
mov
lods
outs
test
mov
jge
and
outs
adc
adc
mov
das
dec
or
loop
lock
push
rol
enter
pusha
jo
in
pop
jge
pop
hlt
pop
cwde
and
in
loope
loopne
das
jg
mov
dec
mov
fistp
jp
xchg
adc
push
pusha
enter
test
xchg
lods
ins
and
mov
xchg
xlat
jge
xor
(bad)
in
repnz
(bad)
push
neg
mov
in
idiv
out
xor
nop
mov
fs
lods
xor
lahf
sub
cli
cmp
out
(bad)
stc
iret
jg
repz
call
add
jg
inc
clc
sbb
das
cs
add
add
dec
inc
dec
inc
scas
inc
pusha
or
add
add
add
(bad)
(bad)
inc
add
add
add
add
add
add
jns
je
ins
cs
jb
ja
outs
addr16
push
gs
imul
xor
xor
inc
jne
je
jb
cmp
jb
ins
sub
push
jne
ins
imul
imul
bound
xor
data16
xor
fs
add
adc
gs
cs
jb
ja
outs
addr16
imul
add
popa
je
pop
add
add
add
add
add
lsl
add
ret
add
mov
inc
or
add
or
add
add
add
add
or
add
add
pusha
outs
rol
add
add
inc
dec
inc
add
mov
or
popa
add
jo
pop
jae
add
ret
add
push
ret
add
outs
test
add
adc
inc
push
pop
inc
in
rol
ror
and
pop
push
fmul
xchg
rcl
dec
mov
fisttp
or
xchg
xor
sbb
je
add
xor
add
sbb
retf
pop
pusha
and
das
(bad)
lods
mov
loop
mov
icebp
dec
test
inc
dec
ins
scas
cld
mov
mov
leave
sahf
dec
mov
arpl
je
fmul
mov
mov
sar
shl
push
push
sbb
retf
icebp
(bad)
push
sub
stos
xor
push
out
ret
mov
sbb
xchg
xor
popa
jl
or
xchg
mov
fadd
sub
sub
jo
mov
mov
mov
jo
xor
cmp
leave
pop
in
mov
sahf
cmp
add
pushf
out
dec
idiv
dec
xor
mov
mov
mov
clc
jecxz
mov
pop
or
or
pop
cs
push
fwait
ss
outs
mov
loop
jmp
adc
sbb
fstp
gs
jno
je
dec
mov
fxch
mov
cmc
lds
mov
cmp
mov
sbb
sar
sbb
(bad)
or
cmp
inc
(bad)
mov
sub
mov
lods
(bad)
jo
mov
adc
sar
jmp
movs
xlat
jge
aad
mov
sub
cmp
icebp
or
ins
clc
sbb
scas
cmp
and
jnp
ins
mov
in
stc
xor
ds
or
fld
icebp
mov
rol
int
mov
push
pop
leave
sbb
fadd
in
xchg
cld
mov
mov
in
xor
std
fisubr
dec
push
lahf
sbb
push
test
ins
mov
sbb
adc
push
arpl
scas
stos
sbb
scas
aaa
inc
fld
or
ficom
movs
cli
cmp
or
sbb
(bad)
sahf
test
push
sti
data16
loop
push
out
retf
pop
outs
fld
ins
mov
or
pushf
aad
mov
dec
(bad)
xchg
neg
sbb
stos
xchg
call
sbb
cld
lds
out
fwait
in
push
mov
lods
xor
outs
inc
cmp
or
xor
mov
popf
mov
pop
movs
and
push
add
inc
(bad)
ficom
ins
into
xlat
sahf
jne
ret
cld
mov
cli
les
jbe
addr16
mov
sti
outs
push
pop
in
lds
cli
inc
sbb
test
fdiv
jp
retf
xor
test
movs
(bad)
push
call
mov
xchg
test
das
ret
nop
mov
int
xchg
into
int3
repz
jbe
es
out
inc
sbb
dec
adc
dec
xchg
fs
sub
fmul
push
mov
sbb
sub
(bad)
jp
(bad)
hlt
and
pusha
ss
cmp
mov
jl
xor
ret
sub
mov
pop
sub
daa
test
cmp
pop
lds
dec
ins
shr
loopne
pop
jmp
leave
inc
jns
add
loopne
in
mov
sub
push
jnp
movs
inc
inc
lods
repnz
jmp
mov
dec
xchg
stc
inc
movs
jmp
jmp
push
rcr
int
rcl
sbb
fcomp
cwde
cmp
inc
movs
repz
or
lods
shl
imul
mov
sbb
mov
or
lahf
test
mov
scas
cmp
mov
xor
sbb
retf
sub
clc
xor
shr
fisub
sub
cmc
mov
cmps
push
lea
iret
ja
pop
dec
(bad)
mov
sbb
adc
(bad)
fadd
push
mov
test
push
mov
ja
lahf
mov
nop
xchg
push
jno
xchg
sbb
stos
dec
popf
cmp
cmp
ret
enter
(bad)
push
loope
pop
int
pop
lds
fwait
xor
fsubr
sub
addr16
pop
mov
add
cmove
leave
rcr
or
dec
retf
dec
sub
mov
lods
lds
sub
adc
movs
inc
mov
shl
cmp
mov
sub
mov
pusha
mov
xchg
jmp
xor
or
es
pusha
dec
cmps
push
jmp
xlat
jl
adc
and
mov
mov
imul
ret
jae
sbb
xchg
outs
pop
xlat
icebp
pop
shl
(bad)
mov
daa
sub
or
nop
or
retf
xchg
cs
pop
sahf
and
movs
mov
dec
fwait
repnz
pop
int3
outs
fwait
les
mov
mov
xor
jmp
adc
inc
in
mov
mov
es
xchg
mov
out
inc
not
push
shr
adc
pop
jp
arpl
mov
(bad)
loopne
push
(bad)
call
mov
mov
popf
dec
adc
mov
in
addr16
add
ja
jp
lods
add
daa
rcl
add
inc
js
mov
dec
mov
or
scas
jp
pop
pop
mov
stc
jne
repz
fstp
dec
jp
add
jecxz
sbb
pop
and
xchg
call
or
lahf
jmp
adc
cdq
mov
mov
popf
mov
mov
mov
fisttp
arpl
add
int3
and
mov
leave
mov
ins
adc
xor
lea
fs
fpatan
lahf
cs
stc
in
fisttp
or
ss
jns
add
mov
mov
stos
and
xor
ror
call
xor
fucomip
pushf
retf
push
pop
retf
ds
pop
pusha
je
mov
loopne
mov
xchg
cmps
sbb
std
jno
sar
add
leave
pop
jns
stc
test
push
cmp
xchg
jbe
jns
sbb
data16
and
and
push
mov
lods
xchg
push
xor
jno
(bad)
in
mov
cmp
mov
pop
jl
dec
icebp
mov
test
mov
push
or
pop
scas
sub
or
ja
in
pop
jne
push
test
mov
out
test
sub
fst
es
add
cdq
out
fist
inc
cmps
into
arpl
cmp
aam
mov
stos
jne
movs
push
into
xchg
push
das
push
fstp
add
aas
add
push
mov
pushaw
xchg
cdq
xorps
stc
fisub
retf
inc
loopne
or
inc
jmp
xor
std
daa
jae
mov
outs
hlt
(bad)
mov
xor
imul
or
mov
out
imul
sbb
ins
mov
mov
inc
dec
lea
jno
retf
and
or
jp
xchg
cmps
xor
pop
jbe
xor
push
xor
xchg
repnz
mov
daa
sub
xor
cdq
jb
test
sbb
movs
pop
or
sahf
xchg
xchg
cmp
or
sbb
xlat
pop
push
test
jle
div
stos
pop
pop
push
cmps
mov
push
xor
imul
xchg
cld
cdq
das
or
jno
sahf
add
lds
jg
jmp
repz
mov
or
mov
sub
std
(bad)
cwde
call
fnstcw
in
rol
sbb
aaa
sbb
inc
loope
fcmovnb
mov
out
sahf
xchg
fwait
rcr
aas
test
inc
cs
dec
aad
inc
push
add
sbb
aad
cmp
jp
jge
movs
jecxz
cmp
inc
pop
movs
das
aas
push
in
daa
int
shl
cs
(bad)
cmps
sub
lods
sub
mov
ss
mov
and
xchg
(bad)
jbe
test
and
mov
ds
mov
cmp
popa
dec
jo
cmps
mov
int
movs
mov
adc
or
mov
sbb
ror
sbb
and
jmp
movs
hlt
inc
adc
(bad)
mov
ins
psubw
inc
pop
(bad)
fst
add
push
jle
movs
mov
std
out
fld
ins
nop
xchg
lods
cdq
jno
adc
imul
or
xchg
push
cli
jns
fldpi
mov
cdq
sti
sub
sahf
sub
pop
pop
pop
mov
lods
mov
in
je
push
cmp
inc
sub
or
adc
ja
nop
adc
jae
xor
imul
mov
mov
not
adc
in
imul
push
rcl
xor
stc
cmps
(bad)
jle
retf
scas
inc
mov
cmp
xor
push
xchg
loopne
nop
inc
sbb
(bad)
repnz
dec
ss
bound
add
xchg
in
jbe
sbb
cmps
test
fstp
scas
jl
sub
dec
fld
push
jb
cdq
mov
cmp
sub
fld
aad
(bad)
aas
push
push
inc
push
jne
mov
mov
push
inc
movs
ret
ret
das
pop
dec
push
lods
mov
int3
add
sbb
call
xchg
in
xchg
adc
pop
push
pop
arpl
loope
xchg
push
cmp
(bad)
adc
mov
jnp
mov
loop
jne
push
push
pop
push
fisttp
clc
push
scas
mov
retf
cmp
movs
add
call
iret
sbb
icebp
push
outs
movs
leave
dec
sbb
call
ss
enter
fcomp
popf
icebp
push
inc
ror
mov
fld
lock
nop
popf
hlt
lods
mov
lods
bound
and
shl
adc
call
xchg
(bad)
sbb
or
cmp
adc
mov
aaa
push
sub
cmp
sub
test
retf
sub
and
add
test
(bad)
and
sti
in
fld
sbb
mov
inc
cli
add
(bad)
(bad)
inc
popf
add
cld
sbb
or
mov
adc
je
pop
xor
xchg
ret
das
in
popf
xor
dec
jnp
jge
mov
adc
fwait
out
jl
cdq
xor
jle
xor
ret
out
ds
mov
xchg
mov
add
xchg
neg
iret
das
aas
or
pop
sub
adc
movs
dec
ret
push
fidivr
call
dec
cld
cmp
icebp
ror
test
ret
fidivr
mov
mov
pop
add
xchg
cs
jnp
sub
push
int3
mov
sbb
ud2
xchg
mov
dec
mov
pop
les
into
nop
push
iret
mov
cmp
jecxz
ins
push
mov
jmp
cli
test
or
sti
aas
leave
adc
fmul
xor
test
xor
push
int
(bad)
pop
clc
push
stos
cmp
ins
pop
jnp
shr
jl
out
in
pusha
cmp
in
jbe
and
or
clc
mov
ret
out
jns
pop
popf
mov
jge
and
aad
push
xchg
(bad)
pop
push
test
and
cmp
cmp
sub
out
loopne
add
or
cmps
xchg
out
stc
pop
loope
mov
and
mov
pop
jnp
jae
cmp
cmps
sbb
enter
and
out
nop
sub
(bad)
rcr
push
fwait
dec
test
test
mov
add
or
ins
pop
mov
mov
adc
call
pop
nop
xchg
xchg
and
jmp
sti
and
shl
outs
ss
jecxz
pop
lds
fs
stc
fdivr
imul
(bad)
push
pop
or
cmp
sbb
repnz
or
call
jp
and
mov
pop
mov
push
inc
dec
pop
mov
fnstsw
dec
push
in
mov
or
out
and
and
cmp
fdivr
jnp
retf
add
aas
leave
pop
cmc
adc
jle
repz
adc
xor
imul
sbb
cli
mov
mov
cmp
and
pop
repnz
out
jg
retf
push
and
xchg
aas
xchg
or
and
dec
mov
mov
retf
sahf
int3
int3
js
es
mov
(bad)
mov
lods
jl
mov
jecxz
sbb
mov
or
jnp
pop
js
in
pushf
pmaxsw
ins
js
push
scas
xchg
and
pop
dec
jle
xchg
lods
ja
pop
ds
and
(bad)
daa
out
push
adc
sti
(bad)
bound
dec
hlt
stos
retfw
loope
lods
mov
mov
(bad)
xchg
jne
xor
push
test
bound
xchg
repnz
fld
xor
nop
mov
and
out
mov
jmp
mov
sbb
sbb
and
push
nop
cmp
push
push
sbb
and
mov
push
mov
fadd
call
dec
cmp
imul
push
push
adc
scas
loope
retf
das
ins
or
jmp
jmp
ret
(bad)
out
mov
outs
pop
dec
pxor
or
and
add
fisub
xchg
jge
xchg
mov
mov
and
test
nop
loope
fdivrp
jbe
xor
mov
cmp
neg
imul
rcl
movs
cmp
gs
js
sub
mov
out
icebp
(bad)
mov
jle
or
sub
aam
cld
push
(bad)
pop
sub
in
pushf
jmp
cs
pop
lahf
pop
pop
xchg
mov
int
jnp
loopne
scas
mov
adc
jae
stos
pushf
mov
fwait
cmps
push
xchg
das
int
and
sub
clc
sti
add
test
arpl
jbe
mov
sbb
fdivr
jnp
out
dec
clc
inc
test
ret
xchg
nop
int
inc
pop
je
cwde
enter
fmul
dec
fwait
add
fst
dec
push
pop
pop
xchg
outs
add
scas
loop
add
in
xlat
sub
push
jle
dec
shl
or
mov
pop
(bad)
and
rol
mov
out
sub
sbb
gs
pop
xor
inc
dec
(bad)
cs
dec
fiadd
jge
dec
cmp
mov
or
sbb
adc
mov
jge
cmps
ins
scas
(bad)
(bad)
popf
xchg
push
repz
cli
outs
enter
test
or
leave
push
sbb
ficom
fs
out
(bad)
rol
inc
cmp
out
mov
sub
pop
mov
loop
daa
xchg
push
(bad)
mov
mov
jb
sub
xchg
pop
push
or
(bad)
inc
lods
and
std
mov
push
sbb
daa
cdq
fstp
sahf
jb
add
out
movs
push
jo
out
lahf
das
ins
xor
jno
jnp
add
jnp
adc
pop
xor
cmps
movs
pop
data16
xor
xchg
mov
push
jbe
jnp
scas
pop
imul
cmp
lar
mov
ror
test
shr
inc
nop
mov
es
push
pop
sub
int3
sti
ja
cld
pop
mov
iret
inc
xor
xchg
mov
jg
dec
les
pop
xor
pop
adc
outs
jnp
clc
xchg
sub
jmp
inc
in
and
dec
shl
addr16
out
cld
pop
mov
ins
pop
outs
cmc
cmp
jl
xor
add
neg
neg
mov
or
imul
jb
mov
jg
pop
pop
xor
gs
pop
in
(bad)
push
pop
je
das
jne
xor
mov
sub
sar
cmp
mov
or
push
inc
add
and
icebp
cmp
xchg
nop
in
test
aam
test
push
ret
pop
aam
push
ficom
fmul
or
das
outs
sbb
xor
jnp
xchg
shr
sahf
outs
int
aas
hlt
add
xor
mov
push
mov
xchg
loopne
cmp
jecxz
clc
mov
mov
push
and
or
lock
pop
movs
int3
bound
fild
jb
nop
lahf
mov
xchg
sbb
sbb
xchg
cmp
adc
test
sti
jp
in
shr
mov
clc
je
fistp
movs
mov
xchg
fnsave
mov
aas
call
mov
xchg
inc
and
cmc
dec
imul
mov
and
jg
iret
pop
data16
fidivr
movs
mov
iret
stc
les
jmp
or
add
or
(bad)
cld
repz
aas
(bad)
cld
repz
aas
call
add
jg
jb
dec
pop
dec
in
dec
add
add
dec
inc
dec
inc
scas
inc
pusha
or
add
add
add
(bad)
(bad)
inc
add
add
add
add
add
add
jns
je
ins
cs
jb
ja
outs
addr16
push
gs
imul
xor
xor
inc
jne
je
jb
cmp
jb
ins
sub
push
jne
ins
imul
imul
bound
xor
data16
xor
fs
add
adc
gs
cs
jb
ja
outs
addr16
imul
add
popa
je
pop
add
add
add
add
add
lsl
add
mov
mov
inc
or
add
or
add
add
add
add
or
add
add
pusha
outs
rol
add
add
inc
dec
inc
add
mov
or
popa
add
jo
pop
jae
add
ret
add
push
ret
add
outs
test
add
adc
inc
inc
push
pop
inc
in
rol
loopne
je
cmps
mov
cmps
popf
jbe
push
shl
cwde
fmul
xor
xchg
popf
out
xlat
dec
dec
pushf
icebp
jle
idiv
cmp
inc
xor
add
and
shl
sbb
outs
mov
iret
das
dec
aam
lods
je
mov
(bad)
mov
mov
mov
dec
leave
sub
stc
jl
icebp
inc
xor
sub
pop
ror
sub
inc
fiadd
aaa
aad
dec
cli
and
js
xor
ss
mov
sbb
aad
or
dec
mov
cmp
mov
daa
dec
dec
add
sbb
xchg
pop
push
scas
les
and
aam
xor
sahf
jmp
mov
and
in
call
push
sub
stos
inc
jns
mov
sti
jp
lahf
retf
xor
push
iret
xor
adc
addr16
jne
data16
xchg
cli
push
cmp
pop
call
jns
es
out
imul
fld
jbe
inc
dec
neg
cs
lds
ins
jmp
sub
mov
sbb
bound
jge
cmp
fldcw
nop
mov
pop
mov
ja
mov
push
ss
push
add
out
les
fcomp
cli
xor
inc
sahf
rol
fsubr
push
das
push
pop
lds
push
mov
shl
in
idiv
sub
cmps
xchg
xchg
sub
jp
les
sti
dec
arpl
call
push
mov
xchg
mov
adc
dec
and
xchg
lock
adc
lahf
stos
pusha
gs
loope
adc
(bad)
push
jge
or
xchg
xchg
inc
mov
movs
sbb
and
mov
cs
jg
jno
xchg
mov
mov
xchg
outs
push
lahf
ds
inc
imul
lods
mov
ds
out
lea
fucomi
lods
pushf
retf
mov
inc
mov
outs
js
add
and
sbb
sub
mov
nop
mov
pushf
(bad)
push
addr16
in
rol
jmp
iret
idiv
inc
cmp
in
jl
pop
and
cwde
xor
jae
add
sub
retf
and
sti
xchg
aaa
lds
sbb
cmp
movs
dec
stc
enter
call
push
mov
test
or
cwde
push
popf
push
jmp
and
sbb
cmp
add
adc
adc
sub
mov
test
adc
mov
std
in
js
lahf
or
int
cmp
fwait
repz
inc
es
push
mov
mov
xchg
js
es
and
bound
inc
imul
repnz
push
dec
mov
xchg
stos
mov
enter
push
scas
cmps
int3
and
test
push
cmc
call
xor
sar
and
ret
enter
pop
in
xchg
mov
popf
mov
shl
lahf
pusha
in
cmps
dec
jb
inc
xor
popa
in
stos
xchg
sar
sbb
add
xchg
inc
mov
jl
xchg
dec
or
fstp
movs
das
pop
xlat
movs
xchg
dec
fiadd
dec
stc
sub
xchg
popa
pop
mov
xor
or
loop
leave
popf
(bad)
sahf
mov
pop
add
push
repnz
pop
js
es
imul
inc
dec
dec
fld
dec
pop
addr16
adc
adc
or
mov
mov
xor
das
mov
pop
pop
and
daa
and
jp
(bad)
loop
data16
mov
mov
aaa
push
call
(bad)
mov
rcl
cmp
pop
clc
mov
mov
mov
ja
and
push
sub
sar
sub
out
cmps
enter
pop
xchg
jp
mov
fucom
push
dec
mov
add
or
das
push
jo
test
mov
enter
aaa
scas
xor
cmp
in
aas
mov
mov
dec
(bad)
jg
icebp
pop
adc
mov
mov
fwait
mov
ds
sub
(bad)
repnz
outs
(bad)
or
jae
outs
ins
or
popf
fucomp
pop
xor
lods
in
cdq
clc
ja
jnp
jecxz
xor
cmp
daa
ins
fmulp
mov
rcl
jns
cmp
icebp
cmovle
jae
mov
push
cmp
mov
shr
mov
push
jmp
cmc
add
scas
jne
cld
pop
mov
pop
sar
add
loope
bound
(bad)
rcr
lds
inc
dec
rcr
xor
scas
mov
int
fldcw
cli
push
push
sbb
sbb
cmc
mov
cld
fsubp
dec
out
stos
mov
push
ins
test
faddp
rcl
idiv
xchg
sub
ja
je
cs
jl
cmps
repnz
psubw
xor
mov
lods
inc
fist
pop
jmp
mov
out
sub
aas
push
mov
and
sar
and
lods
add
mov
mov
sbb
in
sti
idiv
inc
loope
lods
(bad)
sub
jg
dec
jo
pushf
test
shl
fcmovbe
jae
(bad)
xor
jns
sti
loopne
rcr
movs
ins
bound
xchg
push
add
push
adc
mov
push
movs
inc
xchg
into
xchg
sub
lahf
rol
jg
(bad)
retf
cmps
pop
mov
jmp
mov
pushf
(bad)
mov
fld
inc
aad
push
sub
idiv
mov
add
stos
leave
mov
std
push
mov
les
jl
mov
gs
mov
cwde
(bad)
out
and
fadd
add
repz
cmps
out
mov
cld
adc
mov
ss
out
lmsw
inc
ins
and
pushf
jne
or
xchg
mov
(bad)
cmp
xchg
mov
adc
ret
add
fwait
repz
dec
clc
ins
sub
push
sub
(bad)
xor
cdq
xor
dec
shr
sbb
pop
push
xor
jns
(bad)
inc
cli
inc
stos
jmp
retf
pop
or
test
jg
bound
xchg
jle
push
mov
out
push
adc
popf
movs
jnp
cwde
mov
inc
les
sbb
aaa
cmp
xor
call
sbb
jmp
push
jae
outs
xchg
ins
mov
aaa
jae
mov
push
mov
(bad)
cs
mov
js
push
pop
mov
imul
shr
scas
stos
pop
sub
out
mov
(bad)
enter
mov
push
add
jmp
enter
aas
sbb
pop
sbb
cmp
loop
leave
(bad)
mov
cmp
xor
stos
xchg
repz
ror
push
call
pop
pop
sar
push
sbb
test
or
(bad)
iret
arpl
xor
inc
fmul
xor
rol
pusha
mov
les
dec
jns
push
push
lahf
cmp
fcomp
add
mov
aad
push
jns
sbb
jge
int
cli
push
pop
push
mov
retf
mov
(bad)
ficom
into
hlt
in
aam
sub
mov
cmp
dec
lods
jns
fcmovnbe
fiadd
fld
fst
xor
scas
inc
dec
push
sar
aas
sub
into
xor
sbb
cmp
cdq
scas
mov
pop
mov
jbe
imul
mov
xchg
loopne
outs
push
sub
jns
imul
pusha
jne
sahf
scas
sub
(bad)
loope
mov
rcl
dec
adc
xchg
mov
pop
or
mov
sub
pushf
movs
push
xor
repnz
shl
dec
mov
in
dec
adc
push
or
push
sbb
cmps
ja
js
in
iret
shl
fs
jb
xchg
adc
jg
shl
test
mov
dec
ja
repz
lods
arpl
cmp
fild
aaa
mov
dec
and
ret
icebp
repnz
inc
push
call
sbb
inc
lahf
arpl
inc
inc
addr16
scas
scas
leave
aam
lods
gs
cmp
rcr
das
aad
fidivr
shl
mov
and
and
cmps
into
jne
ins
and
jle
lods
add
jge
or
test
push
xchg
lea
gs
cmp
clc
pop
push
xor
mov
loope
mov
mov
xor
pushf
pop
test
and
lahf
bound
in
test
mov
fld
adc
mov
jg
adc
test
fbld
test
pop
popa
or
pop
xchg
fcomp
shr
call
imul
cmps
movs
xchg
in
mov
cmc
test
rcl
mov
xchg
fs
inc
xor
sbb
shl
loopne
mov
dec
inc
mov
test
xchg
or
out
in
add
arpl
fsubrp
arpl
push
mov
movs
or
test
xor
and
mov
mov
fs
call
pop
push
cmc
scas
paddsb
aam
jp
mov
sbb
push
sub
mov
pop
dec
dec
fs
mov
inc
sbb
xor
cmp
aas
dec
lahf
mov
cmp
xchg
outs
pushf
test
(bad)
repnz
and
int
retf
ror
push
ret
jl
mov
nop
call
fmul
xor
jns
mov
xor
fsubr
cmp
sti
mov
dec
cmc
jns
cmp
ret
in
sar
mov
sbb
sti
fs
push
loopne
addr16
jno
cmp
mov
retf
ror
jge
push
sbb
mov
mov
pusha
jle
mov
ss
mov
(bad)
push
push
jecxz
cmp
adc
inc
adc
idiv
test
fmul
mov
retf
leave
xchg
jb
pusha
out
ins
adc
mov
xchg
fdivr
xchg
xor
mov
repz
pop
cli
fcmove
scas
jmp
fdivp
jecxz
push
or
fidiv
into
into
aas
aad
inc
outs
jmp
mov
jmp
mov
call
dec
cmps
push
pop
pop
icebp
lahf
lods
cmp
jp
mov
out
(bad)
cmovne
mov
push
cmp
std
jp
mov
call
jbe
or
das
mov
sub
sahf
and
fadd
or
shl
sbb
jmp
pop
jle
mov
cld
inc
mov
ja
xor
mov
sub
add
fstp
hlt
pusha
aas
jno
push
cmp
inc
test
mov
data16
push
mov
daa
adc
sub
ins
aam
pop
jl
push
or
xor
outs
or
dec
xor
cmp
adc
xchg
xlat
scas
test
arpl
xchg
stc
cmp
and
rcr
aas
cmp
popa
les
jmp
inc
int3
ins
adc
xchg
arpl
(bad)
mov
in
out
push
pop
xor
or
popa
mov
ja
movs
and
xor
loop
jbe
xor
retf
jg
mov
xlat
mov
pop
je
in
sbb
or
cmps
and
call
xlat
sbb
adc
jmp
and
shl
out
rcr
lods
aad
shl
sbb
add
jne
jp
pop
hlt
cmp
pusha
and
ds
mov
push
cmp
dec
icebp
pop
scas
pop
test
addr16
xlat
nop
or
cmp
retf
mov
mov
addr16
imul
cmp
mov
mov
rcr
sar
mov
(bad)
lock
jmp
popa
out
push
jmp
lock
inc
cmp
repnz
sub
sub
ins
ds
(bad)
ins
out
mov
cli
pop
ins
test
push
inc
mov
cmp
mov
(bad)
lock
data16
xor
and
fstp
push
xchg
jb
pop
xor
mov
(bad)
gs
popa
fsub
call
aam
shl
jns
adc
es
fisub
xor
lds
data16
(bad)
add
scas
scas
pop
mov
popf
daa
mov
mov
mov
cmps
xchg
push
sbb
pop
pop
add
fst
sbb
xchg
pop
xor
mov
inc
fmulp
and
movs
pop
stos
sub
cmps
out
inc
sub
mov
pop
stos
(bad)
retf
pop
mov
mov
(bad)
xlat
mov
jb
jmp
ds
mov
sbb
stc
shl
outs
mov
sbb
mov
xchg
iret
jo
push
ins
mov
dec
fstp
in
(bad)
push
push
cmp
mov
mov
pop
sbb
cwde
mov
sub
pop
xchg
push
pop
and
cmp
or
(bad)
sub
jp
inc
ins
jb
mov
call
xlat
mov
push
adc
sub
pop
pop
sbb
pop
or
cdq
sbb
nop
mov
mov
mov
adc
es
popa
jg
mov
mov
xchg
outs
fnstcw
(bad)
inc
test
dec
popa
and
ror
out
data16
xor
xlat
lds
aam
or
add
imul
(bad)
jae
or
(bad)
pushf
push
fisttp
test
mov
and
sub
addr16
(bad)
loop
scas
mov
mov
in
push
mov
hlt
out
xchg
sub
inc
push
rcl
mov
div
mov
or
jbe
ins
in
aas
ss
inc
xor
jmp
loope
mov
mov
add
test
cmp
rol
mov
mov
popa
pop
mov
into
add
std
dec
xor
pusha
std
loope
es
les
call
pop
aam
xchg
daa
add
adc
stos
mov
fptan
jl
and
jno
icebp
aam
sbb
aas
pop
mov
rol
mov
adc
xor
js
xchg
lds
fild
xor
(bad)
push
outs
ins
stos
movs
adc
mov
loope
jo
popf
jl
sbb
sub
(bad)
popf
mov
fidiv
or
mov
fcmovbe
sbb
xchg
inc
dec
stc
sahf
mov
lock
cdq
inc
inc
dec
adc
jmp
mov
dec
mov
fwait
call
inc
or
cmp
(bad)
sahf
pop
cmp
and
add
or
mov
jae
cdq
fiadd
push
ds
cld
xor
popf
jg
lods
dec
push
stc
push
jae
icebp
outs
cmp
sub
jns
test
scas
xor
mov
neg
fcmovb
ja
xchg
das
cdq
outs
mov
fdivr
or
push
xchg
out
dec
pop
aaa
test
mov
(bad)
outs
aas
mov
and
jp
aad
xchg
jns
jbe
cli
scas
inc
dec
mov
popf
arpl
lods
push
fincstp
xchg
ror
xor
jno
sub
dec
cmp
test
jmp
cmp
in
xor
jb
repnz
push
mov
jo
jmp
aas
repz
push
jmp
adc
and
fimul
pop
mov
push
dec
sub
cmc
jne
or
jb
jge
push
xchg
pop
dec
pop
adc
ds
push
das
sbb
or
or
lods
test
out
sub
mov
or
lds
push
lea
mov
or
lods
cmp
xor
inc
ja
mov
enter
xchg
inc
mov
mov
and
clc
lods
jne
daa
gs
or
pop
push
test
add
cmp
or
add
jno
add
push
dec
jmp
xor
cld
out
(bad)
stc
iret
jg
repz
(bad)
cld
pop
add
add
sldt
add
dec
inc
dec
inc
scas
inc
pusha
or
add
add
add
(bad)
(bad)
inc
add
add
add
add
add
add
jns
je
ins
cs
jb
ja
outs
addr16
push
gs
imul
xor
xor
inc
jne
je
jb
cmp
jb
ins
sub
push
jne
ins
imul
imul
bound
xor
data16
xor
fs
add
adc
gs
cs
jb
ja
outs
addr16
imul
add
popa
je
pop
add
add
add
add
add
lsl
add
rcl
add
mov
inc
or
add
or
add
add
add
add
or
add
add
pusha
outs
rol
add
add
inc
dec
inc
add
mov
or
popa
add
jo
pop
jae
add
ret
add
push
ret
add
outs
test
add
adc
inc
inc
push
pop
inc
in
aad
and
pop
add
scas
sahf
jecxz
es
xlat
sbb
outs
mov
sahf
fdiv
cmp
out
dec
xor
jne
pushf
jmp
jg
(bad)
mov
fwait
clc
add
jmp
cmc
jge
ja
in
ss
adc
and
mov
das
lock
ficom
dec
sahf
dec
shrd
mov
pop
cld
push
jbe
push
add
ja
int
imul
jne
rol
fs
adc
fcom
retf
sub
mov
out
pop
jmp
xchg
or
and
(bad)
popa
mov
and
cmp
out
stc
push
xchg
xor
lods
cmp
scas
ins
mov
push
sub
(bad)
sbb
test
add
aas
sub
test
xlat
inc
sbb
xlat
jmp
jecxz
sub
xchg
cmp
xlat
lods
pop
or
scas
(bad)
loop
retf
out
cmp
cmps
pop
sub
out
dec
mul
inc
repnz
jl
dec
lods
cmp
stos
fsincos
cmp
jge
sbb
fdivr
nop
cmc
inc
clc
ret
cs
mov
or
pop
adc
sub
add
clc
sbb
icebp
sbb
(bad)
dec
mov
cmp
cmp
pop
push
jns
ds
dec
mov
stos
adc
retf
xchg
cmps
pop
mov
push
push
scas
or
inc
dec
ja
xchg
clc
in
push
repz
push
repz
outs
or
rcr
call
cmp
pop
int3
xchg
sub
mov
inc
jmp
out
dec
or
leave
test
pop
js
iret
(bad)
fst
mov
push
movs
push
mov
mov
cli
push
sbb
and
ret
cli
or
jne
(bad)
jno
cmps
mov
xlat
retf
repz
jne
stc
pop
or
retf
fadd
mul
leave
cmc
dec
mov
add
dec
and
mov
ret
loopne
sahf
stos
xor
mov
jne
mov
lahf
(bad)
rcl
push
stos
idiv
adc
es
mov
push
scas
(bad)
in
jg
inc
hlt
add
lock
stos
jle
sti
lods
cmp
xchg
xor
lahf
add
call
or
cmc
pop
mov
into
add
and
sbb
cmovne
stc
pop
sub
mov
push
addr16
nop
xchg
cmc
in
mov
jmp
les
pop
inc
mov
and
shl
mov
shl
inc
pop
fcomip
xchg
fwait
xchg
mov
mov
pop
movs
dec
lahf
cmc
shl
shl
adc
clc
mov
mov
pushf
fidiv
aaa
and
mov
in
pop
bound
lea
pop
nop
aaa
xor
cwde
das
push
scas
xor
(bad)
outs
cmp
sahf
cmp
inc
ins
pop
pop
dec
retf
xchg
(bad)
outs
push
sbb
loop
adc
mov
stc
jmp
aad
xchg
cli
inc
xchg
(bad)
jl
inc
xchg
xchg
nop
sub
sahf
gs
into
test
jmp
mov
rcl
repnz
ds
mov
enter
fbstp
pop
add
push
repnz
dec
xchg
dec
mov
jae
out
aad
mov
or
cwde
mov
(bad)
aaa
outs
mov
adc
icebp
inc
or
pusha
push
dec
push
std
neg
xor
arpl
aas
in
add
pop
inc
mov
dec
imul
mov
jns
out
and
iret
mov
cmc
into
ins
or
jmp
inc
(bad)
push
xchg
inc
jmp
sub
cmps
sub
mov
xchg
lea
xchg
add
das
addr16
mov
add
stc
movs
cld
retf
jmp
in
sahf
xchg
pop
mov
clc
(bad)
jg
ret
xchg
xchg
cmp
pop
vpackuswb
cmc
sar
aad
mov
aas
sub
into
rol
retf
call
pop
xor
and
and
movs
mov
push
jo
adc
mov
mov
ins
jb
stc
mov
and
xchg
push
test
std
std
fs
or
adc
cmps
mov
test
and
jb
mov
jne
inc
mov
ror
fiadd
push
in
or
lock
retf
(bad)
adc
xchg
mov
adc
inc
je
rol
std
pop
mov
mov
fild
or
lahf
inc
shl
pop
std
nop
pop
sub
adc
cmp
retf
inc
dec
int
in
cmp
mov
adc
hlt
movs
pop
jecxz
(bad)
pop
or
mov
push
aad
or
xchg
add
or
sbb
or
ret
fdivr
test
cmps
outs
stos
movs
gs
and
nop
les
add
sar
cmp
cmp
cdq
mov
arpl
sub
add
push
das
cmps
xchg
pop
or
fldenv
push
scas
sbb
cmc
or
in
xlat
push
dec
jmp
std
push
lock
pop
push
loopne
aas
ins
(bad)
cmp
lock
xchg
jp
mov
jg
(bad)
and
shl
ins
mov
enter
outs
pushaw
in
repnz
adc
out
sbb
sub
stos
mov
mul
add
loope
jb
inc
fidiv
jns
aad
xchg
repnz
push
mov
cwde
int
adc
jmp
je
js
xchg
test
arpl
jmp
shl
stc
inc
arpl
push
dec
adc
pop
sar
in
lahf
bound
push
lock
pusha
pop
retf
xchg
sbb
dec
sub
sbb
ds
sbb
out
iret
pop
fild
xor
push
add
cld
add
cli
mov
inc
ret
push
inc
imul
sbb
div
es
retf
cwde
fwait
or
fdiv
push
loope
mov
int
(bad)
hlt
or
mov
sar
ja
inc
mov
int3
push
leave
and
jecxz
cmp
mov
push
dec
mov
sub
(bad)
dec
dec
add
xchg
out
out
dec
push
mov
add
ins
lock
sbb
cmp
mov
jg
sbb
nop
inc
outs
xor
out
mov
fsub
mov
xor
test
outs
pop
mul
push
cmp
cwde
outs
mov
mov
cmps
xchg
jp
call
and
lods
test
mov
loop
sbb
mov
movs
push
pop
shr
clc
nop
nop
fidiv
aam
into
in
xchg
fsubr
push
aaa
mov
jmp
cmp
and
test
mov
mov
test
sub
push
cmp
jecxz
push
inc
inc
cld
cli
dec
jge
inc
xor
inc
fdiv
fnstenv
shl
inc
aaa
and
cmps
mov
push
aad
sbb
xor
add
sbb
and
pushf
hlt
sahf
xlat
mov
hlt
loopne
inc
jbe
movs
cmp
xchg
aas
inc
pop
mov
or
imul
jbe
mov
xchg
sub
popf
leave
ins
shr
outs
stos
jnp
stc
dec
inc
jo
adc
xchg
sbb
inc
xchg
outs
sbb
repnz
add
fisub
fxch
mov
mov
stos
daa
scas
xchg
jmp
mov
pop
das
push
ret
mov
jae
movs
and
or
in
xchg
push
or
mov
xor
out
sub
in
cmps
dec
(bad)
call
jne
or
movs
sbb
cmp
dec
(bad)
mov
inc
out
or
adc
sbb
fdivr
xlat
and
fst
pop
jnp
xor
sar
loop
dec
bound
pop
int
add
sub
into
or
push
gs
mov
add
pop
pop
retf
stc
bound
(bad)
xchg
xor
test
pop
shl
xor
shl
(bad)
xchg
jecxz
jp
clc
push
not
sbb
enter
mov
cmps
fcom
xchg
sbb
stc
inc
ins
les
ficomp
or
(bad)
jo
fild
mov
mov
sti
cmc
sahf
rol
adc
in
aas
fs
jmp
test
jmp
jmp
ins
xchg
retf
mov
sbb
xor
in
xor
xchg
and
cmp
addr16
jno
aas
(bad)
int
dec
cmp
adc
stos
push
scas
nop
scas
dec
sbb
xchg
inc
or
out
mov
(bad)
in
jne
jg
sbb
sbb
dec
pusha
dec
push
inc
and
mov
daa
sbb
mov
add
sbb
repz
xchg
jge
or
add
scas
pop
mov
inc
call
fcmovnb
sbb
inc
cmp
(bad)
fmulp
dec
inc
dec
(bad)
cmp
call
xor
cmp
test
add
into
scas
getsec
movs
pop
cs
(bad)
fsub
inc
mov
xor
push
and
pop
ins
std
jmp
int3
dec
mov
cmc
or
fld
shl
push
jl
out
jmp
mov
aaa
add
mov
repz
push
je
repnz
sbb
aas
pop
mov
pop
leave
(bad)
icebp
push
xor
out
in
jmp
retf
neg
ror
sti
mov
mov
sbb
jns
mov
clc
sbb
out
fwait
lods
sub
jnp
cwde
cmp
push
adc
and
mov
call
mov
pop
cmp
sbb
sbb
aas
ret
dec
stos
jb
ins
test
outs
mov
sub
in
fadd
dec
frstor
(bad)
mov
(bad)
jecxz
add
sbb
cmp
ficom
inc
mov
gs
inc
stos
push
retf
pop
mov
stos
fcom
mov
imul
mov
xor
and
addr16
sbb
mov
aad
inc
mov
push
bound
jb
push
or
xchg
sbb
ss
mov
test
mov
dec
jmp
mov
sub
hlt
push
fnstenv
ss
dec
sub
xchg
cdq
hlt
shr
aad
cmp
das
and
and
outs
pop
lea
and
inc
push
jp
adc
mov
lahf
lock
cmp
jle
jno
pop
ret
hlt
(bad)
pop
clc
shl
push
add
jnp
jnp
mov
hlt
and
adc
xor
(bad)
stos
loop
mov
add
push
xor
(bad)
jmp
jae
add
and
cmps
xlat
jb
adc
cmp
jb
and
push
jmp
mov
scas
xor
mov
rcl
mov
xchg
shl
loope
xchg
adc
into
stos
enter
retf
scas
(bad)
stc
push
cmp
mov
push
mov
fwait
xchg
xor
data16
mov
mov
mov
mov
hlt
out
inc
mov
fld
dec
lahf
cld
pop
js
adc
pop
inc
pushf
xor
ds
pop
cmp
hlt
sbb
je
mov
(bad)
nop
leave
ret
data16
mov
nop
jmp
mov
loopne
mov
repz
jbe
stos
adc
pushf
push
rcr
in
or
push
jmp
ds
sbb
imul
xor
jb
ror
in
rol
int3
ret
sti
push
mov
mov
or
int3
dec
call
loopne
gs
mov
xchg
push
ja
dec
jecxz
ds
iret
test
or
dec
lea
xchg
dec
push
in
adc
test
xchg
imul
sub
mov
adc
adc
push
mov
push
(bad)
jmp
jo
add
push
sub
dec
inc
xchg
xchg
in
and
mov
nop
xchg
sbb
std
mov
push
push
mov
pop
(bad)
mov
dec
mov
sbb
mov
aas
jle
lods
pop
cmp
lea
lods
ret
rcl
sbb
arpl
aad
imul
push
lods
arpl
ds
and
jl
push
xor
jle
xchg
int3
out
arpl
dec
dec
jmp
push
icebp
xchg
scas
(bad)
(bad)
repz
dec
xchg
ss
mov
dec
(bad)
mov
push
push
jl
sub
(bad)
push
adc
push
cmp
out
loop
mov
(bad)
mov
movs
clc
push
addr16
jb
mov
xlat
mov
pop
arpl
fisttp
cmp
mov
push
loop
mov
mov
xchg
jmp
push
push
mov
mov
or
and
adc
mov
aaa
clc
push
push
push
jb
mov
lods
pop
js
and
sub
leave
jge
(bad)
jmp
(bad)
xchg
fmul
cmp
and
gs
push
dec
xor
sbb
cs
call
mov
xchg
xchg
outs
pop
jns
cs
sahf
dec
mov
stos
daa
cmp
inc
ss
dec
sub
mov
mov
test
mov
aad
pusha
fwait
sub
xchg
cmp
addr16
imul
push
sar
aaa
popa
and
or
jnp
pop
test
inc
mov
mov
pop
sbb
sar
pusha
aam
xor
or
push
aam
adc
loope
pop
mov
imul
imul
mov
clc
inc
push
xchg
data16
xchg
or
mov
(bad)
lods
stos
mov
repnz
sti
mov
rcl
mov
popa
jp
mov
outs
lahf
stc
out
pop
xchg
std
push
or
fdivr
(bad)
in
cmp
lock
push
add
and
mov
adc
lahf
xchg
jg
cdq
lea
movs
movs
inc
or
jmp
sub
xchg
or
sub
(bad)
cli
repz
inc
jno
xor
dec
out
pop
mov
call
jae
stc
jno
rcl
loope
xor
push
fwait
neg
cmp
mov
inc
lahf
repz
mov
or
mov
xor
xlat
cmp
push
jno
aaa
mov
sub
cmp
rcl
jo
cld
cmps
icebp
js
std
rcr
sti
xlat
pop
or
fstp
cmp
jae
mov
jl
xchg
push
inc
stc
mov
stos
xlat
sub
or
sar
add
cdq
test
mov
sar
bound
jge
aas
pop
lds
or
inc
push
shl
fmulp
shl
fsubr
mov
pop
mov
pop
dec
fiadd
into
loopne
outs
gs
js
cmps
aaa
aaa
mov
jle
mov
push
xchg
adc
push
jge
add
in
pop
dec
inc
sbb
adc
push
jns
xchg
xchg
inc
xchg
add
(bad)
and
fisttp
sti
not
inc
sub
data16
push
das
aam
mov
jno
sbb
pop
stc
pusha
fimul
mov
enter
ins
stos
retf
xchg
aad
pop
into
in
bound
adc
mov
popa
js
adc
int3
lahf
call
aas
repz
cmc
mov
add
cmp
inc
mov
ficomp
sbb
and
mov
aad
cmp
(bad)
ficom
aad
or
in
sub
in
jge
shl
add
push
xchg
test
push
(bad)
hlt
data16
lods
dec
xchg
not
dec
pop
jg
jbe
loop
add
fmul
pop
xor
in
and
icebp
dec
mov
sub
mov
dec
arpl
cmps
adc
std
cmp
dec
and
dec
xor
xor
(bad)
xchg
call
mov
ret
add
or
jp
out
sub
pop
ror
std
js
ficomp
jno
add
dec
dec
jbe
ror
test
ret
xchg
add
mov
lock
mov
add
scas
or
add
in
in
scas
or
aas
dec
call
repz
cmovns
call
mov
aad
cmp
fcomip
inc
cwde
scas
stos
ja
cld
mov
and
cmp
cmp
stos
movs
sub
rol
cmp
mov
fsubr
jo
dec
mov
cmp
push
fsub
pop
(bad)
stc
out
jg
stc
out
jg
pop
add
std
add
repz
add
add
dec
inc
dec
inc
scas
inc
pusha
or
add
add
add
(bad)
(bad)
inc
add
add
add
add
add
add
jns
je
ins
cs
jb
ja
outs
addr16
push
gs
imul
xor
xor
inc
jne
je
jb
cmp
jb
ins
sub
push
jne
ins
imul
imul
bound
xor
data16
xor
fs
add
adc
gs
cs
jb
ja
outs
addr16
imul
add
popa
je
pop
add
add
add
add
add
lsl
add
ret
adc
add
mov
inc
or
add
or
add
add
add
add
or
add
add
pusha
outs
rol
add
add
inc
dec
inc
add
mov
or
popa
add
jo
pop
jae
add
ret
add
push
ret
add
outs
test
add
adc
inc
inc
push
pop
inc
in
rol
aam
add
loopne
jge
out
dec
cmp
lods
cmp
sbb
pop
sbb
movs
in
mov
test
xchg
cdq
cmp
enter
push
call
(bad)
sti
inc
ficomp
dec
add
jg
jmp
(bad)
das
ins
sti
mov
cmps
ins
jae
lods
ret
cmp
push
lahf
les
sbb
lods
addr16
sahf
or
mov
rcl
cmp
mov
xchg
dec
jle
mov
mov
movs
stos
loop
inc
ss
cmp
push
aad
js
adc
iret
jge
sub
pop
sub
pop
jg
jl
lods
cmps
sbb
out
clc
fcmovnbe
cmc
fnstenv
and
jmp
add
ins
add
mov
(bad)
mov
pop
jne
imul
dec
(bad)
cmps
or
jle
mov
jl
and
lods
dec
sbb
pop
lds
mov
adc
jmp
push
adc
sbb
pop
jg
sub
loopne
adc
dec
clc
cmc
out
cmp
adc
mov
aad
add
repz
cli
xor
stos
arpl
dec
push
in
fucomp
js
retf
test
adc
push
push
popf
add
adc
je
enter
sbb
mov
sub
loopne
rcr
jae
shl
sub
sbb
mov
movsx
dec
inc
pop
push
ds
pop
(bad)
(bad)
cwde
fdivp
adc
movs
jmp
lea
inc
xchg
ret
sub
arpl
das
fdivrp
jecxz
pushf
ja
dec
mov
mov
and
sub
adc
pop
jb
iret
and
or
adc
cmps
cmp
adc
push
xchg
pushf
enter
push
pop
mov
xlat
js
test
sti
jmp
or
push
movs
pop
xchg
push
mov
jmp
ins
loope
push
les
xchg
jp
mov
mov
and
pop
xchg
mov
mov
mov
xlat
pop
mov
xor
adc
out
lahf
xor
mov
jb
gs
shl
fwait
int
stc
pop
jae
xchg
out
mov
call
stos
clc
test
gs
fbld
cmc
lock
mov
cmp
xor
pop
shl
loop
inc
pop
dec
mov
dec
js
mov
pop
dec
sub
push
scas
test
jo
push
and
icebp
xchg
cmp
aaa
jmp
mov
mov
adc
dec
nop
add
adc
imul
lahf
jnp
jno
pusha
test
add
in
cdq
sub
push
clc
pop
xchg
das
in
sbb
pop
adc
sbb
js
fwait
sub
jmp
add
xchg
outs
cli
and
mov
mov
in
pop
in
dec
xchg
retf
ret
dec
xchg
adc
outs
mov
xor
sub
ret
add
cmc
pop
lds
fwait
dec
xchg
xchg
clc
into
int3
push
cmps
enter
dec
jle
aad
mov
sahf
dec
lods
or
and
sti
aad
push
bound
aas
loope
and
std
scas
jb
xor
enter
push
outs
test
in
jl
cmp
dec
add
jb
data16
push
rol
cmp
loop
jge
pop
je
cmps
pop
int3
adc
in
adc
mov
gs
mov
cdq
outs
pop
cmps
push
push
clc
dec
retf
xchg
cmps
mov
leave
jmp
ss
dec
stc
jl
imul
int3
jmp
jmp
jno
cmp
(bad)
lods
jmp
jmp
jbe
add
lds
mov
ins
push
sub
pop
dec
mov
or
cmp
adc
jbe
pusha
ror
fwait
ins
cmp
test
movs
loope
cmps
jl
pop
xchg
xlat
push
(bad)
mov
scas
xchg
std
jae
mov
inc
outs
call
arpl
xor
ins
mov
mov
jbe
cmp
jl
xchg
dec
call
jp
jae
arpl
dec
jecxz
scas
popf
push
(bad)
cmc
jb
rcr
xchg
ins
mov
dec
inc
pop
imul
fwait
(bad)
sub
pop
stos
jnp
lock
call
pop
mov
inc
mov
icebp
mov
sub
cmc
leave
cs
icebp
movs
rol
fldenv
inc
loope
hlt
sbb
mov
xor
jg
or
gs
jmp
dec
jl
and
stos
add
cdq
and
fst
mov
add
mov
or
pop
hlt
leave
mov
inc
xchg
imul
out
jbe
imul
fld
or
jmp
es
mul
in
inc
or
movs
shl
mov
mov
sar
ror
pop
stc
out
dec
js
push
inc
je
jbe
cmps
scas
popa
push
lock
rol
push
add
xchg
sbb
sub
scas
mov
jno
mov
adc
int
loop
aam
and
arpl
or
and
mov
rcr
push
int3
fmul
movs
gs
fucomip
popa
sbb
jge
xor
pusha
push
mov
popa
in
cmp
ds
push
dec
das
mov
fprem1
fwait
dec
pop
add
cli
inc
mov
xchg
dec
lahf
mov
repnz
sbb
mov
cmp
dec
inc
cli
pop
xor
mov
gs
sbb
stc
sub
push
retf
mov
loop
cmp
pop
jne
xor
mov
pop
stos
xchg
fdivr
sti
fsubr
ror
addr16
lahf
xor
jne
lds
xchg
adc
int
(bad)
gs
and
jae
add
push
es
leave
mov
mov
dec
xchg
iret
add
add
xchg
sub
outs
sti
out
pop
push
push
push
pop
retf
rol
dec
mov
inc
jmp
movs
shl
xor
stos
jne
popa
mov
mov
push
add
jbe
push
xchg
jle
loopne
pop
data16
dec
sub
nop
test
aam
sub
sbb
movs
gs
rcl
xlat
ss
repnz
std
div
stos
and
mov
(bad)
xor
idiv
js
mov
dec
repz
cmp
pusha
sbb
sbb
jmp
mov
xor
lock
cmp
mov
cmc
ins
and
dec
scas
mov
scas
rcr
fild
ja
mov
inc
cmp
(bad)
pusha
adc
stos
jecxz
sbb
mov
sbb
imul
repnz
pop
mul
popa
or
adc
jl
ss
out
mov
inc
jge
shl
xchg
test
pop
test
aas
jo
sti
xor
cs
mov
outs
inc
stos
repnz
iret
out
imul
jg
arpl
icebp
cmps
pop
add
lods
out
fmul
aaa
mov
call
pusha
or
(bad)
hlt
cmp
mov
aam
in
dec
jno
inc
popa
ins
or
dec
cmp
jl
rcr
test
pusha
lahf
cmp
js
or
mov
retf
sub
daa
icebp
cs
mov
aad
add
push
xchg
fstp
inc
xor
jg
jg
hlt
daa
aaa
lods
pop
dec
movs
dec
fadd
rdtsc
adc
(bad)
js
add
popf
sbb
cmps
adc
sbb
cmc
call
inc
arpl
leave
sti
mov
ss
daa
repz
or
int3
xchg
adc
fdiv
ret
xchg
icebp
inc
or
xor
int
call
or
aam
xor
mov
mov
xchg
lahf
icebp
leave
mov
sbb
(bad)
arpl
std
mov
ins
fucomip
sbb
jno
dec
ja
dec
loope
sbb
out
add
nop
retf
out
pop
or
sbb
jle
or
pop
dec
sub
mov
pop
and
mov
xchg
hlt
add
pop
fldcw
cmc
and
pop
mov
outs
cli
jl
fxch
(bad)
adc
fimul
mov
es
and
int3
dec
je
xor
xor
xabort
push
es
jp
arpl
cmp
mov
lahf
pop
fcos
pop
add
sub
sbb
mov
dec
inc
add
stc
imul
lods
xchg
sbb
pop
out
(bad)
sbb
gs
repnz
pop
xor
loopne
or
or
jb
dec
jno
stos
mov
aas
jg
push
shr
je
and
adc
pop
pop
std
mov
xchg
enter
xlat
arpl
fisttp
mov
stc
push
xchg
aad
test
int3
xchg
lahf
jg
sbb
sti
adc
jnp
jb
ss
push
jge
(bad)
mov
gs
(bad)
call
dec
jns
and
sbb
xchg
call
xor
idiv
stos
repnz
push
sub
in
mov
rol
aam
xchg
pop
inc
stos
cwde
or
jmp
mov
pop
pusha
ja
lds
push
xchg
add
rcr
sar
inc
and
jbe
cmp
jge
addr16
mov
dec
into
rcl
in
mov
mov
sbb
bound
push
or
lds
ret
(bad)
das
test
and
movs
jb
scas
add
test
mov
xchg
cmp
cmps
or
popa
(bad)
int
sub
xchg
std
or
into
mov
mov
sbb
enter
mov
dec
fisttp
bound
xor
dec
pop
push
dec
sbb
into
mov
std
retf
push
iret
mov
lea
leave
xor
xlat
sub
retf
fist
scas
(bad)
mov
dec
call
sub
dec
adc
sahf
jle
sbb
mov
sub
inc
inc
push
push
and
lods
jle
push
les
jecxz
and
mov
xchg
xchg
xor
push
xor
mov
cdq
fadd
add
fmulp
les
dec
xchg
shl
jmp
mov
fsubr
cmc
jae
or
inc
into
pop
sahf
fst
and
and
icebp
pushf
pop
cmc
pop
nop
jl
pop
sbb
das
in
cmp
jl
xlat
mov
pop
jns
inc
sar
cmp
call
sub
leave
inc
xchg
mov
cli
mov
sbb
bound
jmp
cdq
pop
or
push
lock
inc
mov
mov
pop
loopne
sti
in
rcl
dec
sbb
imul
jb
mov
cmps
(bad)
mov
or
and
jnp
out
test
sub
adc
mov
push
ficom
lods
cwde
push
lahf
jb
pop
sti
imul
hlt
call
cmp
out
pusha
mov
jbe
mov
sbb
inc
outs
imul
movs
jl
push
mov
(bad)
mov
ja
test
dec
fistp
mul
loopne
inc
fidiv
mov
xchg
ds
jmp
jmp
aam
int
xor
pop
cmps
lahf
in
adc
psllw
mov
enter
int
mov
stc
sub
in
cld
cmp
jg
dec
xchg
xchg
xor
out
mov
push
stos
fwait
enter
and
push
loopne
pushf
adc
ins
pop
std
pop
xor
mov
sub
jge
mov
pusha
sbb
jle
sub
fucom
clc
aaa
lods
fcomp
cmc
sbb
jne
dec
and
rol
push
xor
pop
vpmacsswd
daa
inc
adc
mov
aaa
mov
push
jl
mov
jl
rcr
mov
retf
in
push
jns
aad
pop
jl
cdq
mov
fild
loopne
xchg
mov
imul
pop
inc
jae
leave
push
data16
bound
cmps
adc
xor
test
cmc
(bad)
push
ds
inc
adc
xchg
push
add
cmp
jecxz
push
lds
inc
xor
pop
mov
mov
cmp
and
mov
sub
pop
rcl
ja
mov
movhps
push
mov
outs
mov
jl
mov
bound
pop
xor
jl
dec
repnz
retf
sbb
and
movs
aaa
sti
out
or
mov
imul
out
mov
test
sub
std
lods
dec
mov
(bad)
fstp
xor
pusha
cld
lds
fst
(bad)
adc
shl
jmp
pop
sub
loop
lods
daa
sbb
aad
repz
outs
inc
(bad)
lds
call
xchg
out
fistp
popa
scas
or
outs
jmp
clc
out
xchg
xchg
mov
mov
add
jno
stos
sub
addr16
out
xchg
pop
mov
cld
fsubrp
fisttp
mov
sti
test
cwde
inc
loopne
punpckhbw
push
sbb
mov
pop
sub
sar
not
fdivr
mov
xor
mov
jmp
jne
cli
icebp
cmp
(bad)
mov
inc
cmp
iret
xchg
inc
(bad)
jae
push
lods
pop
scas
cdq
cmp
adc
mov
sbb
sbb
repz
jl
dec
mov
fimul
sti
retf
cmc
jp
test
sahf
mov
enter
lock
xor
in
xchg
jecxz
push
pop
pushw
sbb
xchg
enter
add
ja
pop
sub
(bad)
or
push
fsubrp
mov
cwde
fadd
mov
jne
adc
ret
sahf
sbb
rcr
cmp
fldenv
jmp
pop
push
jno
adc
pusha
leave
dec
jmp
movs
and
jle
out
in
jo
ds
jmp
in
sbb
shl
lss
inc
inc
inc
cmp
and
lds
or
cmp
mov
out
(bad)
pusha
or
add
sahf
mov
test
cli
jnp
in
inc
adc
repnz
jbe
sub
into
bound
pop
pop
ucomiss
dec
pop
xor
aas
repnz
mov
js
cwde
or
or
mov
bound
int
cmps
pop
shl
dec
mov
sbb
jnp
xchg
call
movs
mov
fdivr
add
jns
or
mov
jecxz
mov
lock
adc
cli
jl
sbb
arpl
or
adc
int
xor
fidiv
cmp
call
fwait
loopne
js
inc
and
in
aaa
dec
xchg
mov
jle
retf
mov
repnz
jnp
or
mov
mov
cmc
hlt
les
inc
das
(bad)
sti
pop
push
xor
mov
push
in
inc
hlt
popf
movs
push
lds
in
push
hlt
jne
push
arpl
leave
inc
loope
xor
add
jnp
ss
jge
mov
sbb
push
shl
sahf
int
adc
enter
adc
cmp
adc
sub
fs
add
push
loopne
fisub
gs
and
push
inc
das
cld
sub
stos
mov
and
mov
inc
sti
mov
sub
mov
mov
setae
sti
jle
(bad)
idiv
jmp
mov
outs
daa
mov
xor
and
sahf
or
pusha
cmc
js
pop
mov
stos
std
add
inc
dec
dec
fistp
or
fcmovu
mov
lods
jo
repz
dec
xchg
or
inc
loope
or
fsub
mov
jl
gs
mov
push
dec
xchg
and
push
sbb
dec
xchg
shl
fld
imul
bound
inc
inc
js
test
out
out
mov
jp
xor
out
mov
neg
call
adc
jbe
lock
jg
jno
ret
clc
xchg
fdiv
mov
cmp
xor
mov
jno
add
or
jmp
jnp
push
dec
jne
mov
adc
and
sbb
mov
cmps
shr
nop
dec
push
rcr
xchg
shl
fs
inc
jp
imul
dec
mov
inc
out
retf
mov
mov
push
sub
push
cmp
jo
jmp
add
scas
jg
cmp
(bad)
les
data16
push
sub
xchg
setg
lods
sbb
xor
jg
stc
out
jg
stc
out
sbb
cld
cmovne
cld
addr16
shr
add
add
dec
inc
scas
inc
pusha
or
add
add
add
(bad)
(bad)
inc
add
add
add
add
add
add
jns
je
ins
cs
jb
ja
outs
addr16
push
gs
imul
xor
xor
inc
jne
je
jb
cmp
jb
ins
sub
push
jne
ins
imul
imul
bound
xor
data16
xor
fs
add
adc
gs
cs
jb
ja
outs
addr16
imul
add
popa
je
pop
add
add
add
add
add
lsl
add
rcl
add
mov
inc
or
add
or
add
add
add
add
or
add
add
pusha
outs
rol
add
add
inc
dec
inc
add
mov
or
popa
add
jo
pop
jae
add
ret
add
push
ret
add
outs
test
add
adc
inc
inc
push
pop
inc
in
rol
loopne
outs
outs
mov
dec
faddp
xor
arpl
je
aaa
push
rcr
fisttp
int
arpl
out
mov
xor
pop
in
aas
lldt
xor
xor
jp
pop
jo
dec
add
xor
pop
mov
pushw
mov
mov
dec
dec
cmc
out
push
fwait
cwde
(bad)
in
jnp
pop
call
mov
popf
mov
outs
inc
ror
daa
hlt
std
mul
cmp
fisttp
xor
fidiv
or
neg
pop
sbb
mov
jb
call
dec
loope
out
adc
sub
(bad)
xor
mov
popa
retf
sub
jno
ret
stos
(bad)
and
arpl
jp
js
stos
jne
shl
mov
push
aad
and
adc
add
nop
js
push
outs
jo
inc
jmp
mov
ror
div
cmp
xor
inc
jne
rol
inc
cmps
adc
cmps
cli
ret
pop
je
and
sub
cmps
sbb
mov
imul
fild
push
cs
data16
xchg
dec
adc
retf
mov
repnz
adc
xchg
add
and
ja
mov
xchg
cmc
shl
mov
cmp
xchg
xor
gs
(bad)
ret
setno
cmp
push
ins
shr
xor
jae
sbb
push
xor
mov
jno
imul
lahf
in
sub
jno
adc
mov
jle
shr
in
vmread
stc
fdiv
mov
push
inc
ss
pop
hlt
frstor
dec
rol
ss
in
outs
dec
or
add
cld
sub
xor
xchg
outs
(bad)
pop
fcomp
ja
or
mov
adc
enter
inc
pop
jnp
call
cs
pop
cmp
and
lds
dec
pop
fwait
aam
arpl
mov
push
dec
inc
addr16
(bad)
in
push
clc
adc
test
imul
loope
out
mov
aas
stc
jl
jnp
das
sub
jl
xchg
sti
add
jl
mov
lods
push
loopne
and
jl
mov
mov
add
add
cmc
or
add
jmp
adc
lahf
std
fcmove
xchg
leave
push
loopne
bound
imul
int3
inc
rcr
rcr
loop
jmp
xor
inc
ds
call
retf
jae
call
and
mov
mov
xlat
ins
xor
mov
xchg
(bad)
into
or
out
lahf
in
mov
push
ror
or
lds
add
push
xor
cmp
fdivr
or
push
cld
cmp
out
iret
mov
rcl
mov
push
jp
rcl
jo
(bad)
call
dec
dec
push
lods
or
out
inc
cmp
dec
mov
sub
ret
pop
(bad)
mov
cld
retf
lock
and
jo
(bad)
sbb
jp
jb
sbb
jg
dec
ret
sub
std
je
jne
inc
cmp
xor
cmp
(bad)
out
addr16
cmp
push
aas
mov
xor
ss
ds
jbe
dec
das
mov
add
and
cmp
jmp
adc
iret
js
call
scas
out
cmp
sub
jbe
xchg
sub
shl
jge
xor
inc
fbstp
mov
sbb
in
sbb
aas
mov
push
(bad)
pop
fwait
out
jbe
push
or
movs
shl
lods
push
cmc
mov
xchg
addr16
push
xor
jecxz
aad
cmps
int3
into
push
fadd
(bad)
cld
in
aad
jns
fbstp
cmp
cmp
inc
bound
sbb
idiv
mov
enter
gs
cmp
fild
xchg
pop
jmp
js
inc
xor
jmp
inc
cmps
ret
pushf
cs
iret
ror
xor
sub
rcr
fwait
jge
push
pop
into
leave
push
scas
retf
jle
mov
sub
adc
clc
cdq
xlat
ret
sbb
clc
ss
stos
ffree
xor
pop
pop
dec
mov
sub
mov
sub
cs
pop
mov
enter
(bad)
lods
mov
(bad)
ret
mov
xor
int
(bad)
lahf
fst
add
dec
and
xlat
mov
or
iret
and
push
xchg
leave
les
xor
je
clc
cwde
xor
in
inc
mov
mov
ss
clc
adc
nop
xor
xchg
out
pop
dec
fidiv
test
stos
mov
(bad)
scas
xchg
movs
push
fucomp
or
dec
push
(bad)
or
lock
out
cld
cli
ss
(bad)
out
lahf
pop
inc
mov
div
xor
inc
sbb
or
pop
mov
push
mov
cs
mov
mov
bound
stos
daa
cmp
sub
stos
push
dec
cld
pop
pop
or
xchg
clc
into
xchg
pop
xor
adc
loop
call
xchg
jnp
cmp
jg
(bad)
enter
shl
das
jge
mov
fist
dec
and
jecxz
mov
aas
mov
sbb
fs
or
(bad)
dec
in
nop
xor
and
push
push
adc
pop
loop
add
lods
mov
cmp
fisttp
xor
push
xor
push
mov
jg
xchg
or
stc
call
xchg
int
fs
aas
cdq
in
mov
push
ret
add
or
lods
dec
pop
outs
imul
and
pop
data16
adc
ins
mov
cmp
test
xchg
push
inc
arpl
xchg
cwde
mov
sub
cmp
and
inc
in
add
push
sub
mov
in
xor
push
aaa
into
sub
mov
sub
retf
and
shl
(bad)
hlt
mov
push
call
mov
(bad)
pop
(bad)
sti
fcomp
or
clc
fild
retf
cmps
jle
and
shl
cmp
mov
adc
xchg
std
dec
popf
sahf
arpl
(bad)
adc
jb
ret
dec
mov
das
mov
mov
addr16
faddp
xor
mov
or
aad
cmc
outs
loope
mov
jo
lods
loope
cmc
jbe
into
js
popf
sbb
scas
nop
sub
and
pmaxsw
mov
inc
and
mov
dec
pushf
aad
in
ja
cli
ret
fbld
mov
cmp
movs
addr16
mov
cdq
add
mov
pop
jmp
clc
arpl
stos
pop
push
(bad)
(bad)
push
call
arpl
and
in
mov
sub
jnp
(bad)
(bad)
test
xlat
ffree
add
stc
inc
xchg
xchg
test
pop
cs
adc
jp
int3
jmp
mov
aam
sub
fiadd
outs
mov
aam
cmp
xor
sub
adc
cld
data16
add
jmp
cmps
sub
test
cmp
mov
push
sti
lds
sub
jo
std
fild
fs
sub
(bad)
out
mov
pushf
mov
lds
call
imul
xchg
fist
and
loop
pop
push
push
daa
add
loop
sbb
mov
mov
jns
adc
sub
jg
scas
dec
mov
jl
inc
(bad)
scas
dec
jno
dec
inc
in
pop
js
lds
cmps
stos
lea
adc
jl
imul
cli
mov
and
pusha
mov
dec
ret
mov
inc
stc
aad
shr
test
gs
(bad)
arpl
pop
inc
out
or
mov
std
not
xchg
cs
inc
sub
retf
push
sbb
push
popa
adc
xchg
test
jae
mov
xchg
jnp
into
fstp
lahf
push
xor
(bad)
gs
je
cdq
pop
ds
std
pop
xor
or
loope
sti
fadd
or
push
mov
add
stos
mov
pop
aaa
mov
pop
loopne
add
mov
inc
fwait
(bad)
das
adc
sbb
test
fidiv
push
mov
mov
ins
in
cld
push
lods
mov
mov
cmc
jle
fldenv
dec
add
stc
inc
or
in
jns
mov
idiv
ss
sbb
sub
in
repz
test
adc
je
sbb
push
xchg
sahf
jmp
test
sbb
mov
jecxz
dec
mov
sub
adc
mov
(bad)
ss
ret
jnp
outs
or
test
xchg
add
mov
mov
lea
std
neg
scas
sub
(bad)
shr
pop
mov
repnz
mov
push
rcr
adc
scas
mov
mov
xchg
push
mov
ins
sub
sub
push
jmp
or
xor
fsubr
xor
sbb
retf
jg
xchg
mov
daa
cmps
mul
fcomp
aaa
jb
or
mov
cli
push
out
ss
lock
push
scas
cmp
(bad)
je
jb
jecxz
int
xchg
es
out
push
mov
daa
fisttp
shl
dec
sbb
fnstcw
jmp
repz
jne
mov
xor
cmps
xchg
sbb
sub
lods
mov
add
xchg
push
ins
movs
mov
jae
mov
jge
nop
adc
stos
aaa
dec
pop
jmp
into
shl
lock
pop
push
mov
mov
mov
push
adc
sbb
movs
ins
outs
cmp
push
cmp
ror
push
cmp
and
cmp
aas
add
mov
pop
dec
aaa
xchg
js
dec
push
xor
mov
int3
inc
aaa
mov
pop
add
mov
push
push
mov
loop
imul
sahf
jns
inc
in
imul
aas
xor
push
sbb
popa
push
add
pop
les
out
mov
outs
outs
lods
or
arpl
fwait
dec
cmc
inc
dec
ret
xchg
test
mov
and
or
xchg
cwde
cmps
or
dec
and
mov
nop
jb
jnp
mov
mov
lods
test
movq
mov
push
loope
push
push
cmp
test
and
cmp
cmp
cmp
imul
mov
jne
xchg
cmp
rcr
mov
jmp
nop
call
sub
test
and
adc
jecxz
add
pop
dec
push
jae
ds
adc
call
inc
dec
cli
and
jle
mov
or
jnp
push
push
inc
sbb
or
push
jecxz
sub
dec
pop
in
aaa
gs
add
xor
sub
inc
(bad)
mov
ror
jmp
out
mov
sahf
cmp
or
and
shl
fadd
mov
add
shr
aam
sub
sub
pop
dec
jne
rcr
xchg
out
call
mov
popf
imul
aas
out
xchg
push
mov
ror
mov
and
adc
pusha
das
add
scas
mov
jns
inc
ins
xchg
or
das
loop
jae
xchg
inc
aad
and
adc
push
xor
pop
jbe
sbb
push
add
iret
imul
test
inc
gs
push
loop
mov
pop
aaa
xchg
sbb
std
shl
in
pop
shl
sub
xchg
sar
cs
pop
xchg
xchg
cmp
mov
push
std
mov
das
mov
shl
std
fisttp
mov
mov
sar
dec
adc
pushf
jmp
mov
les
aaa
xor
adc
out
fmul
inc
xchg
and
(bad)
sub
lods
inc
and
ds
in
xchg
fimul
outs
pop
sbb
dec
nop
mov
lock
sub
repz
sbb
mov
daa
les
push
mov
mov
inc
out
and
inc
aam
aas
das
mov
add
aas
xchg
(bad)
jge
xchg
pop
enter
loope
adc
fstp
hlt
jnp
enter
push
daa
fwait
cmc
mov
repnz
push
test
mov
push
scas
movs
jae
arpl
out
lods
inc
pop
jbe
or
repnz
jmp
out
clc
ja
mov
pop
bound
cmps
push
mov
jge
sar
mov
sar
cli
mov
fwait
cmp
fs
cmp
mov
cdq
ja
pop
inc
leave
mov
push
lock
add
jle
adc
div
lds
xchg
push
and
int
jmp
sub
out
jmp
je
inc
faddp
fdiv
or
jnp
push
xchg
dec
ja
ror
sbb
sbb
retf
gs
(bad)
cdq
cli
or
add
mov
xchg
loope
dec
jno
jl
retf
cld
into
push
les
sub
lock
inc
cmc
retf
enter
cmp
pop
push
push
and
outs
les
cmp
add
pusha
pop
test
lds
xchg
xchg
xchg
out
mov
data16
xor
jbe
aas
fstp
mov
mov
stos
dec
or
add
lea
iret
rcr
imul
ficomp
dec
test
scas
inc
int
mov
push
push
mov
call
out
retf
ret
pop
mov
popf
iret
js
sub
fmul
les
ins
icebp
mov
cmp
dec
fisubr
push
dec
bound
outs
mov
imul
and
and
mov
ins
scas
mov
sub
lods
mov
in
push
or
or
dec
mov
push
mov
pop
jecxz
cmp
cdq
aam
and
lods
jbe
jbe
pop
in
pop
dec
xchg
fisttp
xchg
jmp
leave
js
push
bound
jl
dec
es
sbb
pop
in
lahf
jecxz
xchg
cmp
ficom
xor
fs
sub
aam
dec
xor
addr16
scas
pop
call
add
sti
push
jmp
push
aad
(bad)
(bad)
jmp
dec
xor
loope
push
movs
fcom
jle
out
sub
mov
jmp
outs
add
jg
add
mov
push
sbb
cmc
aaa
mov
retf
or
sti
mov
aam
retf
call
adc
jns
or
and
add
mov
addr16
daa
dec
push
sub
lds
(bad)
es
in
stc
dec
aaa
adc
bound
cdq
pop
fldenv
dec
aaa
test
dec
mov
lds
(bad)
mov
fmul
enter
lds
xchg
ss
mov
xlat
cld
nop
ds
fidivr
cmp
icebp
ins
push
shl
mov
jae
or
and
jns
and
das
mov
jmp
pop
cs
cmp
addr16
cmp
aad
push
and
cmp
int
out
loopne
hlt
jmp
mov
sbb
push
fs
lds
or
lods
sub
js
mov
div
xchg
adc
xlat
and
push
pop
pop
test
mov
xlat
movs
arpl
fsub
fldz
fcmovu
inc
jp
pop
sbb
and
(bad)
dec
and
div
dec
jo
adc
push
test
fwait
dec
adc
dec
pop
inc
push
pop
add
push
sbb
push
jge
sub
lock
pop
dec
sbb
add
rcl
js
cmps
pop
or
mov
mov
aas
mov
(bad)
(bad)
jne
repz
(bad)
mov
push
lods
out
mov
sbb
(bad)
in
mov
aam
in
push
cmps
cmp
stc
stos
sbb
fstp
xchg
mov
push
dec
in
mov
je
and
sbb
push
xchg
adc
mov
xchg
cli
or
fwait
sti
sbb
inc
int
push
pop
adc
aas
adc
loopne
les
mov
movs
cmp
push
and
push
add
cld
out
(bad)
stc
iret
jg
scas
add
inc
sbb
mov
jne
add
add
dec
inc
dec
inc
scas
inc
pusha
or
add
add
add
(bad)
(bad)
inc
add
add
add
add
add
add
jns
je
ins
cs
jb
ja
outs
addr16
push
gs
imul
xor
xor
inc
jne
je
jb
cmp
jb
ins
sub
push
jne
ins
imul
imul
bound
xor
data16
xor
fs
add
adc
gs
cs
jb
ja
outs
addr16
imul
add
popa
je
pop
add
add
add
add
add
lsl
add
rcl
add
mov
inc
or
add
or
add
add
add
add
or
add
add
pusha
outs
rol
add
add
inc
dec
inc
add
mov
or
popa
add
jo
pop
jae
add
ret
add
push
ret
add
outs
test
add
adc
inc
inc
push
pop
inc
in
rol
loopne
mov
out
ss
fnsave
cwde
cwde
mov
xor
jmp
cmps
mov
dec
jae
fimul
repnz
jns
cmp
adc
pop
lods
mov
test
jg
mov
dec
lock
or
mov
lods
push
pop
adc
fst
sti
aam
(bad)
xchg
push
imul
push
ror
mov
ficom
(bad)
sti
add
pop
pop
in
mov
pop
cmp
push
fwait
xor
or
push
xchg
mov
retf
out
scas
nop
mov
mov
sbb
cmc
xor
sub
jg
dec
addr16
sar
int
dec
int
dec
icebp
or
xchg
out
popa
inc
add
nop
or
lahf
jns
adc
fs
inc
in
fist
jne
out
retf
test
lahf
dec
mov
jo
push
sub
repz
jb
rsqrtps
lds
sbb
push
adc
popa
repz
scas
jne
push
stos
fdivr
out
js
addr16
ret
fdiv
rol
dec
data16
ins
pop
les
push
push
add
xor
sub
lods
xor
sbb
pushf
cmp
test
xlat
repz
jns
push
stos
add
xchg
sbb
xor
jge
mov
adc
jb
cmc
out
cwde
cli
out
out
dec
pop
aad
mov
cmp
jp
mov
pop
aad
jge
xor
pop
fwait
(bad)
hlt
push
push
inc
xor
retf
xor
cmp
js
in
mov
and
cmps
or
mov
push
cmp
retf
call
push
subps
loope
test
mov
and
jmp
sbb
dec
sbb
mov
mov
jl
or
sub
outs
cmp
std
imul
cmps
cmp
inc
stos
or
push
cmps
jp
shl
mov
sbb
dec
mov
aas
mov
in
jmp
or
hlt
(bad)
mov
repz
iret
fild
dec
fcmovnu
arpl
ror
mov
pusha
sub
ficomp
lock
mov
jne
fsub
xor
fadd
aad
mov
mov
stc
(bad)
pop
imul
inc
xor
(bad)
xor
sub
sub
dec
mov
test
dec
(bad)
idiv
mov
xlat
sbb
lds
dec
sti
add
into
test
xchg
movs
movs
mov
shl
push
aad
jmp
ja
int3
sbb
(bad)
movs
in
push
cs
js
loope
call
jle
addr16
test
out
fst
push
rcr
jle
push
jno
sub
das
(bad)
test
imul
add
aas
movntps
mov
mov
neg
mov
jnp
lahf
es
in
scas
ja
dec
mov
shl
jl
stos
fadd
jnp
push
xchg
jecxz
arpl
jo
inc
frstor
jge
jae
inc
xor
pop
cli
in
ret
and
out
push
fisub
adc
jmp
sub
lea
test
iret
pop
add
pop
sbb
enter
stc
pop
push
jg
ins
jmp
jne
push
data16
pop
xchg
or
(bad)
retf
(bad)
sbb
mov
dec
cld
pop
es
adc
popf
pop
out
ss
mov
inc
adc
xor
jns
adc
movs
and
imul
sub
stc
outs
dec
push
out
lea
jmp
shr
sub
or
stos
xchg
xchg
sbb
jmp
cdq
inc
sub
xor
and
or
jp
fmul
mov
movs
popf
repnz
test
pop
mov
fsubr
(bad)
std
into
movs
and
out
mov
mov
mov
mov
outs
cmps
imul
mov
xchg
cwde
bound
xchg
repz
pop
mov
dec
xor
aam
push
sahf
addr16
and
fcomp
sub
or
movs
xor
sar
outs
cdq
pop
mov
jo
jno
mov
jno
js
pushf
or
push
lods
sbb
(bad)
cmp
scas
fisubr
pusha
mov
rcr
out
mov
hlt
dec
sbb
push
inc
mov
daa
ds
js
jle
shr
jnp
sbb
fiadd
jmp
(bad)
and
cwde
lods
outs
call
or
mov
arpl
idiv
push
icebp
mov
es
iret
(bad)
out
rcr
xchg
and
inc
xor
push
xchg
mov
jmp
xchg
(bad)
sub
mov
xchg
jp
pop
arpl
mov
cdq
ins
jnp
cmp
mov
ss
inc
push
not
xor
and
das
cmp
and
xor
mov
fsubr
jo
mov
ja
jecxz
mov
xor
jbe
mov
test
mov
cs
adc
ret
fwait
sbb
or
ret
loop
sahf
pop
mov
jo
or
inc
jnp
jne
jne
add
cld
jnp
push
les
and
and
cmp
int
add
jnp
pop
pop
test
hlt
and
jmp
mov
add
test
scas
es
jo
pushf
ins
sbb
mov
mov
js
mov
out
jo
cmp
mov
neg
and
mov
loopne
mov
pop
cmp
mov
repnz
in
push
push
and
je
jnp
int3
mov
jmp
xor
stos
and
fld
in
cmps
or
jle
inc
pop
xchg
sub
jg
ss
sub
outs
mov
push
jg
sbb
in
xchg
push
out
push
ins
bound
sub
jmp
push
cmp
xchg
mov
lock
pop
aam
xor
(bad)
out
push
mov
(bad)
icebp
in
rcl
fcom
shl
and
push
jne
fst
lods
sbb
push
div
mov
mov
xchg
imul
fild
imul
jg
daa
dec
or
mov
imul
jp
pop
out
mov
xchg
or
std
enter
ss
xchg
outs
inc
xchg
mov
mov
mov
nop
push
in
inc
in
pop
jg
(bad)
xchg
mov
add
fmul
mov
ret
retf
scas
push
jns
mov
test
jbe
cmp
rcr
fdiv
rcl
popf
jns
(bad)
shr
mov
sti
loope
popf
out
cwde
push
outs
enter
aam
mov
pop
pop
xchg
(bad)
std
test
test
in
xor
lds
pop
mov
retf
ins
call
push
repz
arpl
test
jns
sar
inc
cmp
inc
jne
mov
mov
sbb
retf
add
rcl
pop
out
and
sbb
jno
popa
mov
mov
lods
pop
jb
arpl
add
vsqrtsd
cld
shl
inc
(bad)
cmp
mov
retf
stos
sbb
int3
pop
mov
jecxz
dec
lahf
mov
mov
fs
retf
shr
cmp
fcomp
out
ds
xor
mov
shl
dec
push
cwde
imul
sbb
pop
push
imul
mov
add
jne
mov
lahf
je
and
in
das
pop
mov
cmp
cwde
ror
fs
mov
jge
inc
mov
iret
rcr
push
jne
loop
dec
jp
cdq
in
push
addr16
inc
mov
cmp
sahf
push
outs
ds
in
mov
fs
shl
pop
xchg
(bad)
setb
adc
fld
pop
cmps
jmp
pop
cmp
mov
pop
fisub
mov
dec
ja
jo
nop
mov
dec
fwait
cmp
mov
dec
popa
out
(bad)
neg
xchg
or
cmp
stos
cli
mov
enter
popf
(bad)
aam
aas
gs
inc
push
cli
dec
cld
jb
mov
dec
dec
dec
dec
xor
loopne
int3
sub
jmp
retf
movs
test
or
fwait
xchg
pop
call
stc
sahf
rcr
shl
loop
inc
retf
push
or
call
retf
inc
xor
inc
adc
push
enter
les
jmp
aaa
stc
mov
cli
clc
jge
adc
or
adc
sub
dec
std
mov
out
cmps
test
pop
adc
lods
or
shl
ret
cdq
cdq
jle
mov
sbb
sub
inc
sti
test
mov
out
xor
xor
adc
gs
or
and
xor
cmp
sbb
cmp
inc
gs
mov
dec
fild
jno
outs
test
mov
ret
rcr
mov
into
shl
std
add
dec
ret
rol
cld
mov
ds
sbb
jmp
add
call
xchg
xchg
stos
nop
js
jmp
and
mov
data16
cdq
mov
loope
fst
push
pop
dec
(bad)
aas
popa
mov
pop
test
movs
ja
mov
mov
enter
cdq
sub
int3
daa
js
mov
in
out
mov
sar
dec
cmps
gs
and
xchg
hlt
push
ins
rol
xchg
push
xchg
ins
jne
clc
mov
stos
rol
jo
add
ja
fld
rcr
(bad)
aad
and
movs
retf
sub
aad
fwait
cmp
xchg
mov
mov
cli
cmp
aas
mov
ret
cmp
cmp
xor
mov
mov
ins
sti
xlat
shl
dec
jbe
inc
aad
mov
jno
xchg
mov
dec
mov
rcl
push
or
mov
retf
cmp
clc
push
arpl
and
shl
push
adc
stc
and
jae
in
lods
sahf
sub
cmc
push
cdq
xchg
imul
xor
out
add
mov
mov
mov
and
xchg
pop
pop
cs
mov
pop
shl
pop
cmp
jmp
ret
shr
and
aad
inc
test
sub
lahf
or
in
cmp
push
xor
in
mov
lods
stos
sub
jecxz
pop
mov
(bad)
push
jns
fdivr
mov
test
repz
sbb
movs
sbb
jl
mov
or
mov
cmps
cmps
aas
xor
sbb
jmp
inc
sbb
pushf
bnd
mov
movs
cmp
int
push
es
xor
sub
stc
sbb
jl
out
adc
pop
cmp
out
dec
stos
repnz
inc
(bad)
les
jmp
and
mov
jns
outs
pop
call
shl
mov
shr
test
icebp
in
fwait
push
not
pop
popa
xchg
sbb
sar
or
test
cs
repnz
push
cld
mov
jge
gs
xlat
adc
mov
(bad)
call
ret
hlt
add
jge
sti
push
fld
sub
aad
inc
or
int
dec
cmp
push
cwde
add
js
fnstenv
adc
dec
fild
(bad)
lds
imul
or
lods
cmp
(bad)
sahf
je
cmp
aad
push
mov
test
add
movs
pop
call
xchg
fdiv
sub
xor
int3
xor
mul
test
cmp
ror
aad
test
pop
mov
dec
fst
xlat
dec
xchg
sbb
int
out
mov
in
push
mov
mov
push
jnp
and
or
jmp
sbb
test
inc
mov
mov
stc
fstp
int3
pop
fdivr
pushf
les
sub
das
dec
cs
(bad)
loopne
and
neg
nop
ja
mov
cmp
in
js
cmc
push
cmp
je
sub
and
stos
lock
test
in
pop
xchg
adc
mov
test
or
int3
cli
loope
aam
adc
stc
inc
xchg
xor
ret
pop
mov
in
mov
jecxz
push
cdq
jecxz
xor
test
test
push
push
and
aaa
leave
mov
mov
mov
lock
or
dec
cs
mov
leave
call
ins
in
inc
std
shl
cdq
aad
sub
je
fwait
mov
daa
das
jnp
fxam
pop
jno
pop
inc
and
sub
push
shl
jecxz
xor
out
fisub
clc
xchg
mov
scas
sub
add
mov
dec
imul
das
pop
stc
repnz
mov
mov
sub
dec
cli
xor
mov
inc
int3
xor
cwde
fisttp
inc
int3
fsub
fdivp
call
sub
pop
je
or
sub
xchg
nop
pop
(bad)
bound
shl
sub
(bad)
and
mov
aam
push
je
and
int
cmp
addr16
push
adc
jns
push
je
in
fwait
data16
dec
sbb
repnz
popa
mov
fcom
scas
mov
fild
imul
fbstp
fisub
jg
test
xor
out
pop
push
mov
jnp
push
mov
jecxz
cmps
push
jle
icebp
(bad)
ins
int3
xchg
or
xor
test
or
add
add
mov
out
push
adc
pop
cmp
sahf
mov
cmps
sub
test
ja
push
xor
inc
je
repnz
pop
xor
mul
sahf
mov
test
xlat
into
fnsetpm(287
fwait
inc
sub
sbb
cld
sub
add
lock
or
imul
jmp
jo
or
mov
mov
or
jp
test
xchg
mov
out
jle
jecxz
popf
mov
dec
fwait
pop
push
sub
(bad)
cmps
jge
out
syscall
and
lods
jns
adc
out
xchg
js
movs
mov
out
popa
push
xchg
mov
imul
sbb
push
xchg
retf
iret
ret
inc
lods
cmp
xchg
cmp
pop
adc
dec
jbe
cmps
js
pusha
xor
repz
jg
mov
push
iret
cmp
(bad)
lahf
mov
xchg
xor
shl
and
aam
cdq
mov
adc
cmps
mov
add
cmc
shl
mov
dec
(bad)
push
scas
lods
jl
rcr
push
popf
mov
sbb
dec
inc
and
jmp
inc
pop
jnp
popf
in
mov
dec
mov
(bad)
mov
es
clc
and
sub
ror
iret
icebp
sbb
fcom
xor
fidivr
fstp
cmp
pop
mov
int3
out
lock
or
out
sar
(bad)
pop
ins
inc
data16
adc
push
xlat
mov
fwait
lock
add
and
sbb
adc
adc
cmp
ror
xchg
mov
enter
lods
push
mov
xor
(bad)
iret
mov
or
scas
inc
in
mov
fs
inc
push
mov
inc
fadd
pop
jle
sbb
push
sub
aad
fldenv
fdivr
push
ins
inc
xchg
inc
ins
push
and
inc
cdq
push
retf
add
mov
jg
js
push
push
fwait
inc
rcl
mov
or
jl
sbb
mov
leave
pop
add
xchg
or
out
mov
pop
lea
pop
cli
add
out
xchg
inc
(bad)
mov
xchg
xchg
push
adc
add
fwait
sahf
pusha
movs
imul
gs
fnstsw
xchg
ja
fs
sub
or
sbb
movs
fild
in
enter
nop
jmp
int3
inc
or
mov
jb
sbb
sub
pop
je
pop
lea
(bad)
arpl
test
push
pop
xor
arpl
addr16
and
mov
push
js
sahf
out
mov
neg
ror
mov
imul
ss
(bad)
push
icebp
pop
dec
popa
ror
xor
cmc
js
test
mov
repz
rcl
adc
mov
lahf
or
sbb
adc
push
and
mov
add
fwait
inc
aas
push
(bad)
ficomp
inc
xor
fisubr
push
and
loopne
cmp
dec
(bad)
bound
xchg
fcmovb
cmps
pmaxub
mov
nop
(bad)
outs
push
jmp
xlat
retf
jo
scas
mov
(bad)
cld
repz
aas
(bad)
cld
repz
push
cli
add
cdq
add
add
dec
inc
dec
inc
scas
inc
pusha
or
add
add
add
(bad)
(bad)
inc
add
add
add
add
add
add
jns
je
ins
cs
jb
ja
outs
addr16
push
gs
imul
xor
xor
inc
jne
je
jb
cmp
jb
ins
sub
push
jne
ins
imul
imul
bound
xor
data16
xor
fs
add
adc
gs
cs
jb
ja
outs
addr16
imul
add
popa
je
pop
add
add
add
add
add
lsl
add
mov
mov
inc
or
add
or
add
add
add
add
or
add
add
pusha
outs
rol
add
add
inc
dec
inc
add
mov
or
popa
add
jo
pop
jae
add
ret
add
push
ret
add
outs
test
add
adc
inc
inc
push
pop
inc
in
aad
inc
xchg
lea
and
dec
dec
imul
xchg
xchg
imul
xchg
sbb
(bad)
sbb
adc
mov
pop
(bad)
out
ficom
add
dec
pop
dec
in
mov
ffreep
sub
xchg
int
push
sub
outs
outs
icebp
push
in
aas
xchg
(bad)
imul
mov
das
in
push
add
add
xchg
or
or
adc
loop
xchg
mov
icebp
pop
mov
and
xor
pop
sub
push
sar
cli
sbb
pop
mov
push
outs
sub
sbb
hlt
push
mov
mov
add
ja
int
pop
push
icebp
inc
mov
mov
fdiv
stc
mov
jmp
outs
or
jb
fidivr
lock
push
mov
dec
inc
sti
pop
scas
imul
shl
xchg
scas
ins
adc
push
std
sbb
scas
fs
jl
imul
stos
outs
xor
aas
xlat
jb
lock
outs
push
jmp
fld
and
adc
mov
mov
out
pop
and
mov
mov
xor
gs
loopne
dec
xchg
push
lock
test
sbb
ss
mov
ret
mov
stc
into
push
and
retf
xchg
movs
push
cmps
mov
jbe
or
pusha
outs
jmp
fnsave
push
mov
(bad)
imul
out
test
push
push
stc
cmc
pop
and
leave
hlt
mov
pop
and
ror
hlt
cmp
and
out
pop
sub
pop
adc
stos
and
jae
xchg
sub
(bad)
sub
pop
jmp
push
adc
jns
ret
add
pop
and
xor
addr16
push
jno
dec
xchg
adc
jb
popf
adc
jp
jo
adc
inc
mov
dec
stos
or
pop
jnp
dec
and
fimul
cmp
cld
stc
imul
fistp
sbb
jno
lock
imul
popf
lds
std
add
jo
retf
xchg
into
mov
call
jmp
cmp
rcl
push
mov
repz
mov
jmp
div
sar
sbb
into
movs
sbb
jg
clc
rcr
xchg
jno
mov
inc
jns
in
data16
mov
out
sub
ins
lods
sahf
shr
inc
mov
adc
inc
jl
popf
(bad)
sti
mov
or
mov
sti
sbb
loope
gs
(bad)
mov
in
adc
call
ret
test
sbb
push
mov
mov
mov
xlat
mov
sbb
jo
test
ds
sbb
jecxz
push
dec
pop
rol
inc
push
(bad)
jno
xor
jg
in
lods
lods
nop
xor
and
jae
(bad)
cli
scas
jns
out
add
rcl
iret
and
jge
xchg
push
test
sub
mov
ja
xchg
mov
xchg
rcl
jge
ret
ins
pusha
(bad)
pop
stc
push
ror
retf
in
or
lock
in
xor
cmp
or
push
imul
mov
dec
pop
test
jbe
imul
test
leave
addr16
in
cmps
jo
call
out
cmp
cmp
loopne
scas
mov
jmp
sub
arpl
outs
fsubr
cmp
jge
mov
retf
out
push
sub
loop
adc
pop
(bad)
fbld
mov
sub
xchg
mov
add
xchg
xor
aas
ret
pop
fisubr
nop
mov
xor
adc
jmp
sub
mov
push
hlt
fisub
xchg
add
jne
call
(bad)
ror
adc
das
xor
pushf
repz
lds
inc
jl
sbb
imul
sub
test
add
mov
addr16
pop
iret
mov
daa
pop
out
xor
into
cmc
(bad)
out
in
retf
fs
xor
mov
adc
inc
js
into
add
int
mov
call
adc
sub
xchg
pop
xchg
and
clc
jbe
pushf
(bad)
xor
aad
(bad)
std
dec
inc
cmps
pop
imul
scas
jnp
stc
cdq
push
das
push
push
push
push
mov
das
and
xchg
test
icebp
jbe
pop
mov
imul
mov
pop
jge
mov
and
cmp
jns
out
sub
or
dec
jp
sub
int3
jl
ja
pop
out
mov
sbb
sub
mov
mov
loop
mov
test
and
out
mov
cmp
xor
push
(bad)
adc
pop
scas
mov
jne
or
xor
xchg
imul
in
out
or
fild
push
imul
loop
jmp
imul
int3
(bad)
pop
xchg
ins
test
jmp
fsincos
pop
sub
xchg
hlt
jbe
lahf
lods
add
stos
cmp
mov
jge
(bad)
fldenv
sbb
ret
inc
loopne
and
cld
jecxz
xor
mov
loope
cmps
cmps
inc
mov
sbb
inc
sbb
mov
dec
cdq
and
stos
leave
push
cmp
js
inc
push
stos
cmp
daa
test
fiadd
xchg
inc
xchg
push
stos
mov
jecxz
into
ficomp
sub
mov
shl
test
pop
or
fdivp
fwait
xor
mov
rcr
sbb
jmp
mov
int3
xor
xor
lahf
push
(bad)
aaa
call
sar
cmps
adc
push
mov
outs
ja
(bad)
ins
cmp
nop
nop
jl
out
(bad)
scas
(bad)
jl
sahf
not
ins
cld
inc
fcomp
lahf
sti
imul
repz
mov
xor
stos
sub
pop
xchg
push
push
call
mov
data16
add
push
or
mov
sbb
push
ins
or
fnsave
test
fnstenv
sbb
aaa
jecxz
repnz
outs
lods
dec
in
jbe
sub
(bad)
sub
sbb
sahf
jmp
adc
clc
push
push
add
cmc
jl
in
(bad)
arpl
das
movs
dec
or
imul
test
icebp
pop
out
ret
test
out
cli
(bad)
aaa
sbb
outs
mov
ss
(bad)
and
fld
and
mov
xor
iret
jns
movs
cs
cli
sbb
or
fistp
jae
xchg
mov
daa
xchg
arpl
push
xlat
dec
mov
dec
xchg
mov
ins
jge
sbb
xchg
mov
jne
push
test
shl
call
xlat
sub
nop
add
mov
dec
cld
and
movs
jecxz
jge
fld
xor
xor
jg
shr
xchg
and
mov
nop
std
sub
int
cwde
mov
loopne
pop
sti
inc
icebp
pop
scas
pop
lock
xchg
push
sbb
sti
mov
retf
add
adc
xchg
jle
clc
xchg
adc
xor
addr16
mov
jle
imul
neg
(bad)
scas
xlat
or
jecxz
fmul
dec
adc
and
mov
cld
sbb
sbb
sahf
mov
or
push
ds
cmp
xor
adc
cmp
inc
jns
das
popf
cmps
inc
ret
push
pop
test
clc
jbe
shl
mov
enter
scas
sahf
into
sbb
or
adc
adc
sub
jge
bound
enter
xor
push
pop
imul
test
int
clc
sbb
sbb
mov
in
std
push
push
test
(bad)
push
mov
mov
in
mov
sbb
retf
sbb
(bad)
fsub
pop
cmp
jmp
(bad)
cld
jmp
daa
dec
mov
arpl
outs
daa
xor
retf
pop
pop
popa
pop
fisubr
adc
mov
sbb
and
addr16
pop
das
or
or
(bad)
lock
fstp
mov
scas
sti
dec
pop
mov
sub
push
pop
jecxz
stos
retf
jge
mov
fs
mov
lea
shl
movs
lods
lahf
int3
fsubrp
cmp
xchg
sbb
jle
and
fwait
ret
mov
mov
sub
loop
jmp
mov
push
pop
xor
or
sub
jo
jo
pop
ss
sbb
sti
push
push
out
xor
fwait
push
mov
je
das
pop
mov
sub
(bad)
cmc
aaa
test
xor
cli
sbb
outs
shl
xor
scas
pop
cmp
mov
add
scas
cmp
sub
mov
call
icebp
xor
push
(bad)
mov
dec
test
cs
jle
jmp
pop
sub
outs
lods
jmp
(bad)
pop
data16
cmp
xor
dec
cli
(bad)
mov
js
mov
xor
or
jno
gs
push
mov
sub
cmp
push
adc
xor
repnz
retf
cmps
cmps
and
fisttp
adc
xchg
std
jae
xor
sub
stos
jne
and
jmp
jno
call
jle
das
retf
add
cld
xor
mov
fwait
sub
sbb
add
xor
sar
xchg
ror
mov
les
mov
dec
cli
lock
enter
into
lds
in
rol
xchg
repz
fxch
int
lds
iret
fimul
std
push
test
std
(bad)
sub
inc
call
and
test
sub
out
dec
and
cmp
add
pop
adc
gs
jle
popf
sbb
mov
test
clc
out
lock
and
imul
gs
jae
int
test
repnz
pop
mov
push
repz
lods
lahf
cmp
fadd
mov
mov
mov
fcom
adc
not
cmp
add
pop
scas
or
fisub
mov
or
into
pop
mov
and
icebp
jp
stos
mov
ins
into
and
push
jne
retf
inc
sahf
pop
or
ins
sahf
mov
pop
inc
mov
jne
and
and
jmp
pop
xchg
cmc
xchg
xchg
std
in
js
jmp
cmps
sbb
push
mov
js
(bad)
(bad)
sti
hlt
retf
push
fwait
aam
data16
jl
movs
dec
jmp
sbb
(bad)
jo
cmp
jns
jecxz
mov
or
icebp
fimul
jg
mov
scas
in
mov
jnp
xor
jecxz
pop
imul
pop
mov
cmp
adc
inc
mov
lods
popa
mov
cs
aad
retf
xor
pop
push
(bad)
jg
mov
ins
lahf
xor
jmp
mov
cwde
mov
int
aaa
fldenv
jmp
fdivp
or
push
push
sub
ficomp
or
dec
inc
push
and
adc
inc
cmps
(bad)
fisubr
movs
ror
rcl
inc
pusha
adc
pop
cwde
adc
xchg
push
fistp
mov
test
je
and
mov
adc
pop
jmp
push
pop
ret
(bad)
outs
fnstenv
sbb
mov
mov
push
jb
int
xchg
cmps
(bad)
cmp
outs
or
and
and
or
push
cmps
lahf
cmps
adc
iret
mov
int3
inc
or
xor
pop
mov
mov
sub
xor
mul
fwait
pop
repz
jp
pop
add
add
jmp
aam
pop
je
icebp
sub
retf
push
fistp
dec
mov
add
(bad)
daa
mov
mov
(bad)
iret
daa
repnz
cmp
adc
dec
or
mov
int3
aaa
mov
aam
bound
inc
out
out
xchg
adc
gs
fbld
dec
dec
clc
enter
or
arpl
aad
test
inc
and
or
bound
(bad)
jb
cmp
cmp
or
movs
cmp
mov
add
gs
les
xchg
mov
cli
inc
vcomiss
fs
test
xor
sti
sahf
jmp
add
xchg
xchg
inc
sub
pop
je
jecxz
xchg
stos
add
lds
mov
test
mov
leave
mov
mov
(bad)
mov
jb
mov
int
pop
xor
bndldx
add
(bad)
jge
imul
push
inc
and
sbb
aaa
mov
jmp
sti
retf
mov
pop
call
fidivr
lock
inc
add
pop
inc
sub
test
std
mov
(bad)
js
movs
fsub
push
stc
mov
lds
xor
imul
cmp
mov
dec
je
je
or
(bad)
sbb
cmps
mov
mov
or
loopne
jmp
out
out
(bad)
and
int3
inc
mov
add
cmp
jb
clc
mov
push
add
ds
mul
loopne
hlt
stos
add
mov
pop
loop
call
sub
fimul
movs
js
pusha
std
mov
les
(bad)
(bad)
jecxz
sbb
sub
cmp
ret
push
push
mov
dec
mov
ret
out
jl
fst
or
inc
mov
dec
inc
add
adc
xchg
mov
daa
mov
mov
fs
rol
cmp
ret
mov
dec
xchg
in
in
retf
or
iret
ficom
jne
pop
shr
jg
mov
cld
mov
cmp
sbb
repnz
ins
or
lock
test
retf
dec
pop
xlat
jp
xor
sub
add
das
enter
xchg
and
push
fs
dec
sti
hlt
cmps
out
inc
dec
fmul
cdq
jle
shr
pusha
mov
frstor
sbb
icebp
mov
inc
push
stos
imul
ins
es
cmp
in
lods
ficom
xchg
cli
sahf
push
outs
pop
jnp
dec
imul
pop
cmp
ret
lds
pop
jns
pop
test
movs
sahf
jae
cli
fcomp
mov
or
iret
xor
inc
stos
xor
adc
xchg
cmp
loop
lock
sahf
push
or
push
es
scas
fild
movs
adc
lods
arpl
xchg
(bad)
and
movs
mov
cmp
dec
(bad)
xor
in
pop
int
xchg
and
jle
sub
cmp
repz
jmp
in
loopne
gs
movs
(bad)
sub
repnz
cmps
jp
and
xor
ss
pop
rol
pop
aad
aaa
mov
xchg
sbb
push
fisubr
les
enter
mov
int
inc
loope
cmps
jae
push
xchg
daa
cmp
mov
sbb
repnz
aad
iret
sbb
push
enter
nop
loope
adc
call
jl
sbb
std
mov
ins
dec
mul
icebp
(bad)
jp
rol
pop
popa
movs
mov
push
push
loopne
mov
inc
xor
mov
push
pusha
pop
cs
test
lods
aam
or
mov
or
stos
cmp
leave
test
sti
mov
add
or
in
loope
movs
dec
fdivr
inc
sbb
ins
mov
outs
mov
(bad)
int3
ldmxcsr
dec
lds
and
jg
cli
pop
mov
push
push
idiv
nop
sub
push
int
mov
imul
lods
loopne
(bad)
sub
xchg
rcr
jno
xor
mov
repnz
cmp
mov
pushf
adc
not
pushf
or
xchg
retf
stc
jmp
in
arpl
popa
jecxz
sar
sub
mov
aad
das
adc
push
mov
sahf
(bad)
jae
pop
mov
mov
mov
adc
sbb
(bad)
pushf
loop
adc
gs
outs
push
sbb
pop
mov
jb
and
mov
or
retf
jecxz
jmp
das
inc
call
dec
xchg
and
push
ret
cmp
add
rcl
lea
xor
fbld
jmp
pop
rol
xor
or
repz
aas
(bad)
cld
repz
aas
(bad)
cld
pop
add
jmp
sbb
ss
add
add
dec
inc
dec
inc
scas
inc
pusha
or
add
add
add
(bad)
(bad)
inc
add
add
add
add
add
add
jns
je
ins
cs
jb
ja
outs
addr16
push
gs
imul
xor
xor
inc
jne
je
jb
cmp
jb
ins
sub
push
jne
ins
imul
imul
bound
xor
data16
xor
fs
add
adc
gs
cs
jb
ja
outs
addr16
imul
add
popa
je
pop
add
add
add
add
add
lsl
add
ret
add
mov
inc
or
add
or
add
add
add
add
or
add
add
pusha
outs
rol
add
add
inc
dec
inc
add
mov
or
popa
add
jo
pop
jae
add
ret
add
push
ret
add
outs
test
add
adc
inc
push
pop
inc
in
(bad)
gs
adc
and
cwde
lock
movs
xchg
out
outs
add
movs
mov
add
test
je
mov
xchg
ds
(bad)
cmp
loope
je
add
xlat
push
sub
sbb
pop
pop
push
imul
cmp
stc
cdq
mov
rol
cmps
in
adc
arpl
and
push
mov
clc
popa
sub
popf
or
mov
jne
rcl
dec
pop
popa
jnp
(bad)
pop
ror
cmp
data16
mov
xchg
rcr
dec
in
pusha
movs
(bad)
or
adc
mov
or
ret
neg
lea
in
out
jmp
ins
es
jae
mov
mov
test
js
mov
add
scas
mov
push
std
sti
mov
mov
out
sub
icebp
in
push
div
xchg
repz
mov
sbb
es
pop
hlt
cdq
inc
outs
cmc
ret
popf
test
jg
(bad)
fiadd
aas
popa
or
jae
push
mov
div
mov
daa
push
sub
test
ds
jp
or
(bad)
out
les
aad
add
mov
cmp
push
inc
dec
or
out
dec
stc
or
jno
repnz
popa
cmp
fs
dec
das
jmp
sbb
arpl
std
pop
jb
in
test
sahf
das
mov
(bad)
adc
push
nop
arpl
or
mul
pusha
jmp
pop
int3
daa
xor
or
div
lds
dec
bound
push
das
mov
cmp
rcl
scas
and
sub
test
std
inc
inc
and
or
loopne
(bad)
aad
jp
inc
sbb
and
lock
leave
push
jb
xlat
push
rcl
dec
mov
fdiv
push
push
and
mov
imul
dec
sub
pop
adc
fidiv
fstp
lds
jg
inc
push
pop
int3
lods
inc
test
mov
xchg
fdiv
jno
fdiv
cmp
mov
jecxz
movs
cmp
in
dec
data16
movs
mov
or
pop
jbe
xchg
mov
nop
xor
daa
fnsave
clc
push
lods
sub
ror
test
ret
mov
inc
and
fmul
iret
(bad)
sti
lahf
inc
xchg
hlt
movs
inc
pop
loop
out
adc
mov
jno
stos
push
mov
outs
mov
xor
in
lds
retf
xchg
jg
cs
xor
rcl
mov
pusha
push
xchg
mov
outs
cld
dec
sub
sbb
adc
jmp
sub
jmp
xchg
push
(bad)
fild
or
pop
fs
push
mov
pop
jecxz
cmp
jmp
mov
xchg
ss
stos
loop
je
add
es
push
into
pushf
(bad)
cmps
sub
pop
test
xor
xchg
scas
inc
mov
pop
pusha
repnz
sbb
sbb
jl
jle
mov
pop
lahf
sub
out
mov
push
mov
jnp
mov
in
mov
xchg
jg
imul
sub
fidiv
add
ror
xlat
out
mov
adc
retf
retf
adc
mov
xchg
rcr
pop
inc
mov
pop
arpl
mov
mov
aad
push
and
jmp
nop
movs
sub
shr
fidivr
lahf
sbb
xor
popa
es
imul
es
xchg
aam
inc
cmp
dec
mov
clc
fld
cmp
aad
outs
call
or
mov
push
xlat
mov
lahf
shl
mov
push
jmp
pop
pop
inc
add
dec
dec
cmp
inc
stos
and
daa
adc
addr16
mov
jmp
dec
push
mov
xchg
test
les
mov
mov
imul
ss
rol
sub
and
outs
test
inc
sub
jmp
cwde
test
cmps
cmps
jmp
jb
out
mov
xor
add
loop
ss
adc
mov
nop
scas
sbb
pop
xchg
sub
push
fs
pop
xlat
xchg
mov
ss
mov
xor
sub
(bad)
(bad)
xchg
je
pop
cwde
out
mov
xchg
dec
enter
outs
or
fsubr
mov
mov
or
jno
pusha
mov
xor
cmp
ins
xor
data16
je
daa
mov
cmps
jb
mov
aaa
call
repnz
and
in
xchg
ins
push
mov
mov
dec
mov
push
js
push
cmp
jnp
or
icebp
lods
jo
fucomp
mov
push
mov
xchg
push
fbld
xchg
aas
into
cmp
fs
cmp
rcr
sbb
or
in
in
cld
fs
mov
or
mov
loopne
push
test
scas
adc
fisub
retf
pop
sub
cld
out
pop
scas
jl
addr16
mov
mov
push
data16
out
test
mov
ss
cmps
lods
jecxz
fistp
push
mov
rol
stos
sar
fwait
xchg
mov
push
pushf
jmp
jge
dec
sub
xor
xor
adc
retf
jg
call
pop
(bad)
repz
mov
dec
iret
mov
xor
ffreep
dec
jne
ja
ins
(bad)
xchg
jmp
pop
mov
sub
push
adc
jne
into
jbe
outs
mov
(bad)
push
or
jl
mov
pop
or
inc
mov
mov
push
dec
inc
mov
das
inc
push
rcr
mov
pop
test
dec
cmp
(bad)
adc
out
jecxz
mov
mov
dec
(bad)
sysret
jp
fcom
nop
fsub
lds
loop
dec
mov
push
lock
push
and
out
cmp
push
push
retf
adc
jmp
inc
adc
gs
mov
int
in
adc
(bad)
das
and
ja
call
add
ds
xchg
sbb
sbb
inc
stos
xlat
and
loop
push
xor
ret
xchg
push
loope
xlat
scas
hlt
popf
fxch
call
add
pop
mov
bound
xor
or
jo
inc
out
sbb
dec
fisttp
out
mov
cmp
sub
scas
gs
int3
mov
xchg
rol
inc
stc
cwde
cld
lods
mov
das
popf
push
cmp
test
pusha
and
movs
dec
xor
mov
stos
pop
cmps
sbb
or
or
ins
push
cmp
jmp
fidivr
cmp
sbb
mov
stos
mov
dec
hlt
cmp
jmp
aam
shl
jmp
enter
lea
cdq
pop
pop
movs
dec
mov
jecxz
dec
cmp
xor
xchg
pinsrw
or
push
in
aam
inc
loopne
inc
ins
test
fstp
jnp
mov
xlat
push
(bad)
push
push
inc
repz
fnsave
xor
mov
and
cs
jmp
in
gs
cmp
and
mov
push
jbe
sub
punpcklwd
sub
xchg
mov
dec
xor
pop
call
dec
jmp
retf
pop
clc
icebp
mov
neg
jg
mov
adc
stc
nop
sub
or
loop
add
add
xchg
lods
pop
push
test
inc
inc
jmp
mov
icebp
pop
data16
cdq
fmul
dec
addr16
mov
clc
js
enter
dec
imul
sar
mov
popf
jno
loop
jmp
jae
(bad)
jmp
repnz
xchg
mov
mov
stos
sbb
push
mov
xor
pop
test
bound
or
inc
pop
repz
ins
dec
add
and
jbe
and
das
jne
cmc
aas
adc
cmps
es
mov
dec
xor
mov
pop
sbb
jecxz
ds
out
sti
mov
jne
fisttp
inc
inc
jp
out
sbb
lods
adc
dec
(bad)
js
sbb
add
cmp
and
js
sub
pusha
ins
sub
cmp
sbb
cld
mov
push
pop
fnstenv
sub
(bad)
xlat
jle
enter
sub
fld
test
inc
(bad)
shl
cmps
and
push
loopne
in
mov
pop
bound
xchg
popa
fdivr
adc
adc
test
mov
xor
jmp
xor
add
jo
imul
jae
fwait
mov
xchg
retf
xor
(bad)
sub
mov
mov
aas
popf
jg
push
mov
sbb
fdivp
jne
pmullw
mov
(bad)
in
rol
outs
cmp
movs
call
pop
jae
push
int3
sar
mov
in
popf
xor
fistp
xchg
repz
out
out
aam
xchg
aaa
mov
add
pop
xor
mov
movs
cmp
adc
(bad)
mov
sti
inc
sub
adc
push
mov
nop
xchg
fbld
jne
jmp
jmp
xlat
fdiv
xor
std
adc
mov
test
adc
pusha
fldpi
xchg
adc
(bad)
mov
push
pop
mov
ret
xor
mov
test
rcl
mov
sub
call
ds
leave
dec
lahf
jns
in
sub
popw
mov
es
and
fwait
mov
test
out
mov
push
js
retf
retf
add
mov
mov
or
sub
pop
xchg
(bad)
into
sbb
loopne
jbe
mov
and
cmp
jmp
xor
mov
add
rcl
push
inc
pop
inc
or
fidivr
inc
xchg
cs
(bad)
cmp
ins
sub
repnz
or
(bad)
sub
inc
fisttp
mov
(bad)
xlat
mov
mov
cmps
jmp
cmp
xchg
stos
std
cmp
leave
add
scas
dec
shl
sbb
push
push
push
inc
push
test
cdq
cmp
sub
popa
int3
ror
cld
or
cmps
pop
aaa
call
ret
adc
imul
nop
hlt
lahf
scas
pop
mov
dec
icebp
push
cld
mov
cld
outs
imul
pop
rcr
sub
dec
pop
mov
jns
xor
push
or
push
ret
leave
pop
jno
js
xor
dec
and
xor
mov
and
xchg
cli
(bad)
mov
in
arpl
sbb
shl
popa
add
inc
movs
sbb
sub
ins
cmc
jecxz
icebp
xlat
inc
xchg
xchg
adc
add
out
inc
cdq
mov
lock
xor
add
in
in
inc
dec
movs
shl
mov
mov
dec
arpl
sub
and
mov
jmp
gs
jg
hlt
imul
cmp
out
and
push
xor
sbb
cmp
push
push
jl
shl
or
das
sbb
jle
imul
jb
daa
test
loop
push
xor
loope
jmp
mov
loopne
idiv
in
jb
and
xchg
jns
mov
mov
std
push
nop
test
jmp
and
adc
cmp
es
xor
jo
xchg
jle
out
ins
jge
jbe
imul
cmp
into
jnp
or
cdq
pop
pop
fisubr
aad
out
xchg
or
inc
jmp
mov
ret
mov
jo
test
ins
mov
sbb
mov
sbb
sub
cmp
(bad)
(bad)
xor
das
cs
sub
fadd
push
push
pop
xchg
add
or
aas
push
test
(bad)
mov
int3
(bad)
sub
frstor
or
movs
(bad)
dec
out
daa
jecxz
aam
xlat
cmp
mov
(bad)
fld
das
movs
lds
mov
inc
int
ds
mov
repz
or
enter
jl
cmp
jno
and
push
inc
xlat
scas
imul
jo
adc
in
addr16
rol
or
inc
adc
cmp
xor
or
pop
ja
cmp
jae
mov
sbb
mov
int3
ds
mov
jo
inc
enter
addr16
jl
mov
shl
cwde
jnp
jmp
(bad)
aas
out
adc
push
lods
icebp
inc
in
sbb
jo
add
fimul
and
adc
stos
adc
push
addr16
or
cmp
les
iret
adc
push
mov
es
stos
es
pop
cmp
xor
jae
ror
fiadd
and
cld
xor
pop
cs
inc
in
add
fidiv
imul
adc
jno
out
sahf
jne
adc
fucomp
adc
or
cmps
mov
mov
pop
mov
clc
(bad)
stos
cmps
scas
jnp
aad
repz
mov
mov
mov
jecxz
xchg
ss
ins
cmps
adc
loopne
sub
xchg
dec
lahf
loope
push
gs
data16
pop
mov
ja
jae
das
rcl
inc
scas
push
push
xor
inc
and
push
cli
mov
stos
sub
and
adc
xor
sbb
cli
imul
mov
int
ret
mov
icebp
jmp
jl
dec
sar
sahf
xchg
fild
loop
aad
sub
pusha
or
xchg
pop
cmp
movs
int3
cmp
xlat
lods
jne
mov
jecxz
xchg
js
daa
aaa
sbb
fisubr
xchg
sub
lock
push
mov
scas
jecxz
cmp
repz
sti
icebp
loope
jmp
popf
mov
pop
mov
mov
cmc
mov
ror
icebp
inc
dec
or
out
stos
mov
mov
adc
sbb
(bad)
scas
pop
or
adc
lahf
jbe
fild
(bad)
xchg
jnp
clc
dec
pop
xchg
cmp
mov
aaa
jne
scas
test
xchg
data16
stos
movs
xchg
in
ror
pop
fisub
sub
xchg
cmps
mov
push
jge
test
mov
call
push
fmul
adc
cmp
loopne
retf
add
mov
rcr
mov
inc
cmp
popa
xor
mov
stos
(bad)
ss
inc
out
xor
adc
sub
xor
push
lods
push
sar
(bad)
mov
push
dec
mov
and
pop
mov
(bad)
mov
lds
inc
mov
and
loopne
dec
fdivr
(bad)
mul
dec
mov
adc
aas
call
xchg
loop
not
sub
dec
mov
leave
sub
rcr
fs
xchg
dec
cs
jb
pop
test
pop
cld
push
xor
push
rcr
adc
stos
push
mov
mov
popa
idiv
jne
mov
xchg
(bad)
loope
add
xchg
aam
psubw
lods
stos
je
outs
cld
mov
popf
aam
test
sub
and
xor
push
xchg
(bad)
out
xchg
repz
cmp
cli
xchg
iret
movs
cmp
adc
or
dec
or
push
std
inc
imul
xor
mov
les
mov
test
xchg
rcr
call
mov
fdivp
adc
pop
loope
fcmovu
or
push
icebp
jg
cmp
rcl
pop
stos
call
push
jns
push
mov
ins
mov
shl
dec
in
xor
push
jae
adc
mov
les
fs
jae
xchg
shl
jp
int
dec
xor
xchg
fdiv
lea
push
aaa
xor
cli
ficomp
js
xchg
and
fwait
jp
mov
das
fiadd
xor
xchg
push
(bad)
rol
cmp
sar
cld
repz
aas
(bad)
cld
repz
jmp
sar
inc
sbb
lock
add
add
dec
inc
scas
inc
pusha
or
add
add
add
(bad)
(bad)
inc
add
add
add
add
add
add
jns
je
ins
cs
jb
ja
outs
addr16
push
gs
imul
xor
xor
inc
jne
je
jb
cmp
jb
ins
sub
push
jne
ins
imul
imul
bound
xor
data16
xor
fs
add
adc
gs
cs
jb
ja
outs
addr16
imul
add
popa
je
pop
add
add
add
add
add
lsl
add
mov
mov
inc
or
add
or
add
add
add
add
or
add
add
pusha
outs
rol
add
add
inc
dec
inc
add
mov
or
popa
add
jo
pop
jae
add
ret
add
push
ret
add
outs
test
add
adc
inc
inc
push
pop
inc
in
rol
fmul
add
loopne
(bad)
xchg
stc
(bad)
xchg
frstor
cs
arpl
retf
mov
ins
sub
mov
pop
scas
(bad)
aas
enter
add
gs
jbe
or
ja
cmps
into
(bad)
jmp
adc
cmp
xchg
pop
out
adc
popa
xchg
xor
pop
adc
lds
vmwrite
out
rcl
hlt
push
dec
sbb
and
jp
sub
pop
mov
nop
or
stc
push
mov
in
arpl
outs
test
cwde
hlt
outs
cmp
mov
push
jmp
stos
push
xchg
pop
scas
dec
dec
ss
leave
bound
mov
xor
cmp
(bad)
out
mov
sbb
inc
push
sub
jmp
imul
iret
sub
cdq
in
cmp
ins
mov
sti
mov
push
xchg
xlat
dec
enter
jbe
and
adc
test
test
(bad)
rol
sub
inc
out
jae
cmp
mov
shr
dec
enter
adc
sahf
pop
dec
and
jmp
leave
std
xor
dec
mov
loope
sti
int3
movs
jo
inc
mov
aas
test
inc
mov
dec
test
mov
or
cdq
jno
pop
mov
or
test
mov
sub
movs
int3
xchg
lds
or
fidivr
imul
aad
or
jno
mov
fs
je
mov
add
jnp
mov
mov
das
pop
test
cmp
push
ret
ss
ffreep
xor
nop
pop
mov
lods
lods
cmp
popf
sub
push
pop
fidiv
add
cmps
mov
pop
push
mov
lahf
pop
pop
jmp
mov
(bad)
jae
cmp
pop
sbb
pop
or
push
xchg
cdq
ins
xor
mov
call
pop
(bad)
idiv
mov
lods
xor
mov
test
cwde
fadd
pop
stos
std
rol
jmp
fs
ss
jmp
cwde
paddd
fwait
retf
and
sbb
adc
mov
adc
out
add
int3
lea
add
retf
outs
sub
inc
bound
or
fidiv
cmp
retf
jecxz
aam
les
and
shr
push
data16
xchg
(bad)
hlt
jbe
scas
fisub
push
je
pop
jmp
jmp
pop
ss
push
fwait
pusha
frstor
ds
jmp
mov
loop
jl
xchg
jae
scas
pop
or
inc
inc
adc
outs
sbb
mov
imul
push
outs
in
(bad)
imul
sbb
cmp
xor
(bad)
ds
inc
outs
clc
int3
sub
dec
mov
scas
outs
jae
mov
aaa
mov
xchg
jl
std
pop
xchg
ret
jge
push
fmul
pop
push
clc
or
inc
aam
cwde
popa
xchg
out
sub
pop
dec
not
pop
jge
aad
jne
inc
repnz
ins
push
cmp
out
rcl
cmp
repnz
jmp
aad
inc
push
push
in
inc
movs
scas
push
bswap
gs
or
push
push
jp
pop
test
cmp
pop
fnstsw
mov
pop
xor
in
(bad)
or
jno
pusha
cmps
mov
mov
mov
cdq
jecxz
retf
xchg
mov
test
xor
movs
push
dec
in
stos
mov
jmp
mov
pop
out
jo
mov
mov
mov
xor
fldenv
shl
mov
loope
cmp
sub
mov
(bad)
int
(bad)
shl
es
fyl2xp1
scas
into
addr16
xor
das
mov
ja
pusha
jecxz
or
mov
test
sub
or
inc
add
gs
sahf
sub
int3
sub
or
jbe
imul
adc
ss
ficom
addr16
sbb
retf
les
xor
out
and
dec
imul
lods
cmp
push
pop
sahf
inc
mov
mov
jb
sbb
cwde
push
pop
adc
ret
imul
mov
pushf
cmc
xor
ret
test
ins
cmpxchg
stc
mov
mov
repnz
pushf
int3
and
xchg
mov
push
pop
lahf
and
add
mov
adc
dec
mov
loop
enter
cdq
leave
sub
add
not
push
pop
mov
mov
mov
aad
or
call
xor
cli
mov
mov
je
cli
bound
dec
push
cmp
xchg
iret
out
lods
lahf
mov
xor
cdq
cwde
(bad)
out
ins
mov
cdq
adc
mov
inc
mov
jmp
dec
and
jl
mov
jb
call
stos
pop
and
jmp
adc
sub
jecxz
arpl
data16
jne
scas
fbld
xor
mov
add
jecxz
add
adc
aas
mov
adc
dec
mov
cmps
mov
jmp
mov
pop
sbb
mov
cmp
addr16
setl
xchg
rcr
jae
cmp
add
pop
mov
pushf
enter
in
push
gs
mov
mov
das
sbb
scas
sbb
ss
iret
adc
sbb
in
call
pop
sub
inc
pusha
xchg
inc
xchg
inc
push
push
ret
mov
int
and
ret
popf
cmovl
stos
xor
(bad)
cmp
fld
jle
mov
scas
stc
pop
(bad)
movs
mov
fist
push
rol
(bad)
js
cwde
mov
push
xor
xchg
stos
jmp
retf
sbb
cmp
aad
test
inc
pop
push
xchg
pop
adc
adc
cmc
mov
movs
mov
mov
mov
push
test
ret
jno
adc
xchg
into
xchg
or
out
imul
inc
dec
dec
fdiv
cmc
imul
jle
adc
mov
stos
jae
les
inc
sbb
mov
sbb
jno
loopne
test
mov
cmp
push
xor
inc
inc
addr16
or
adc
jle
fnsetpm(287
or
xchg
xchg
into
mov
mov
xor
test
xor
int
int
sbb
push
jg
pop
outs
into
arpl
or
sahf
es
shl
jne
(bad)
gs
or
(bad)
clc
jns
test
dec
xchg
push
fs
mov
sbb
add
push
punpckldq
add
lds
pop
adc
pop
xchg
imul
movs
and
cs
stos
mov
icebp
sbb
fstp
jmp
mov
jmp
xchg
add
dec
loop
ret
push
dec
pop
pop
mov
mov
mov
int
out
aad
cmc
add
push
jb
shr
ss
movs
in
mov
(bad)
xlat
xor
xchg
aad
fisub
int
repnz
push
mov
jmp
jp
pop
fcomip
rol
(bad)
out
sbb
push
inc
cmp
fistp
and
xor
clc
push
int
cmps
or
add
xchg
stos
cli
cmp
(bad)
loope
(bad)
mov
and
mov
push
sbb
lods
pop
cmp
movs
out
or
(bad)
mov
fld
rol
mov
push
xor
and
addr16
xchg
mov
ss
push
loope
cwde
stos
mov
mov
out
addr16
fwait
sbb
adc
aas
int
(bad)
cmp
pop
aas
inc
lock
push
push
pop
cmp
test
ret
dec
xor
out
xchg
nop
fdivr
push
pop
mov
test
cmp
dec
shr
and
loop
(bad)
int
call
jb
and
outs
mov
or
popf
xlat
cmp
sbb
lds
popa
shl
mov
inc
lods
push
sub
or
aas
popa
test
mov
(bad)
add
aaa
js
repnz
cmc
mov
in
popa
add
xor
push
mov
test
pop
ror
dec
(bad)
xlat
mov
scas
nop
dec
mov
jecxz
aaa
jno
and
jle
adc
cdq
sub
pop
fdivrp
mov
icebp
xor
test
mov
imul
out
push
sub
push
test
pop
push
lock
call
daa
dec
add
jne
test
test
call
lock
shr
adc
ret
(bad)
jo
mov
cmp
idiv
mov
inc
mov
dec
fstp
nop
xor
dec
push
fstp
sbb
mov
in
or
xor
or
pop
sub
shl
lahf
jnp
sahf
out
mov
loopne
fcomp
sub
xor
xchg
cdq
inc
fs
pop
xchg
pop
xor
pop
cs
push
stos
lock
push
mov
stos
ss
loop
jb
in
pop
div
mov
pop
enter
jmp
mov
sbb
sbb
std
mov
pop
ins
rcr
pop
(bad)
sub
call
sbb
aas
dec
mov
fcomp
stc
clc
fld
repz
aas
into
mov
jmp
or
xlat
stos
test
push
pushf
scas
in
call
adc
test
scas
jbe
pop
sbb
push
repnz
adc
sub
mov
sbb
xchg
lahf
push
xchg
dec
mov
xor
inc
aaa
mov
cmp
xor
mov
(bad)
adc
hlt
in
push
and
add
jmp
fwait
jns
adc
fldenv
fimul
addr16
jne
les
dec
mov
mov
lods
in
and
xor
xor
jl
or
lock
xchg
mov
rcl
mov
cmps
enter
adc
sbb
mov
adc
je
(bad)
adc
cdq
cs
jae
mov
dec
dec
and
in
icebp
loope
mov
dec
inc
(bad)
mov
pop
pop
ret
push
inc
mov
iret
mov
jne
sub
push
or
cs
adc
cmp
dec
cdq
mov
push
out
adc
adc
xchg
mov
popa
jb
andps
xlat
movs
test
jae
xor
ror
or
pushf
pop
inc
dec
add
dec
mov
xchg
cmp
test
fimul
or
mov
add
pop
out
mov
cdq
js
shr
stos
and
dec
pop
mov
xor
hlt
imul
fwait
(bad)
call
xchg
inc
ds
sbb
das
popa
mov
mov
sbb
or
mov
or
or
ret
jb
jmp
shl
clc
mov
adc
sti
inc
adc
xlat
les
les
gs
xor
(bad)
mov
pop
xchg
xchg
and
add
loopne
mov
fild
and
mov
xor
push
dec
(bad)
icebp
push
sub
push
sbb
neg
sti
adc
iret
ret
scas
jmp
add
loope
call
sbb
test
inc
dec
scas
in
ins
int
lea
dec
and
inc
pop
adc
neg
ret
sub
retf
in
xchg
adc
mov
adc
jmp
push
sub
add
xchg
or
fisttp
push
push
pusha
stc
push
test
pop
fbld
imul
pushf
lds
mov
and
pusha
pushf
or
xor
or
popf
jno
and
jge
pop
retf
cmp
daa
mov
out
aam
ins
test
in
inc
cmps
ins
mov
cmp
div
stc
pop
fild
adc
imul
cs
repz
mov
push
cmp
ja
mov
mov
ret
shl
mov
dec
dec
mov
pop
fdivr
adc
(bad)
test
inc
sub
fld
aad
out
mov
or
clc
icebp
and
outs
push
pop
test
pop
adc
out
shl
mov
add
fdivr
pop
out
xor
cmp
js
les
pop
adc
or
push
mov
inc
dec
test
sub
icebp
and
cmps
rol
cdq
mov
call
cdq
or
push
inc
xlat
mov
sahf
adc
mov
xor
cmps
repz
pop
lea
sub
out
push
adc
pop
and
ins
fwait
int3
mov
cwde
je
pop
ficom
mov
rcr
lods
inc
mov
mov
mov
cld
cmp
mov
jg
mov
push
data16
add
outs
ret
or
and
les
inc
dec
not
retf
ret
retf
daa
mov
sub
loope
xor
jno
into
(bad)
fld
sbb
in
scas
or
cwde
fadd
retf
imul
aam
inc
popa
jns
adc
repz
dec
lahf
movs
mov
mov
mov
aad
div
ud2
fnstsw
pop
cmc
cmp
push
sub
xlat
cs
fist
and
ror
cli
xlat
and
cmps
pop
fsubr
add
mov
repnz
ds
data16
sahf
(bad)
cld
jnp
adc
loope
or
sti
test
push
adc
loop
into
sbb
and
jns
ins
pushf
repnz
daa
push
aas
or
popa
xor
enter
lahf
pop
push
push
scas
or
or
mov
xchg
xlat
and
mov
xchg
(bad)
lahf
jno
lods
mov
jne
(bad)
js
je
test
or
lock
sti
sbb
out
fbstp
jae
(bad)
rcr
pop
test
cmp
mov
ret
leave
aas
sbb
and
mov
mov
je
mov
cmps
enter
dec
cmp
fdiv
mov
add
aaa
jp
call
repz
inc
dec
ins
out
or
dec
inc
push
xor
inc
push
sub
inc
or
sbb
pop
and
aam
imul
(bad)
(bad)
push
sub
lds
push
aas
ss
sbb
push
sbb
lods
mov
xor
cmp
mov
dec
cld
adc
mov
push
aam
lahf
rol
cli
pop
mov
mov
xchg
push
mov
add
jp
xor
bound
icebp
int
repnz
pop
pop
(bad)
pop
jmp
push
pop
pop
sbb
lock
xor
xlat
mov
and
add
aaa
mov
mov
push
or
or
xor
push
cdq
leave
jne
addr16
or
ja
in
add
mov
jb
mov
mov
push
sub
dec
mov
lock
push
cwde
(bad)
(bad)
pop
add
aaa
mov
outs
addr16
int3
ror
mov
sub
sub
or
push
add
std
clc
rol
xchg
loop
mov
in
dec
ss
xchg
nop
pop
xor
(bad)
mov
pop
mov
push
imul
mov
pop
mov
push
and
in
fdivr
mov
cmps
gs
ret
scas
das
sub
rcr
out
outs
fwait
cmp
ins
(bad)
push
dec
cmc
fbld
test
push
movs
mov
iret
cmp
or
sbb
mov
xchg
les
jecxz
pop
scas
lock
imul
mov
mov
xchg
out
xor
dec
and
sbb
inc
jae
mov
fnsave
jmp
pop
mov
ins
test
jp
cmp
fwait
add
(bad)
gs
dec
aaa
cmp
cmp
xchg
adc
inc
(bad)
out
in
cli
mov
pop
xchg
dec
sub
test
cmps
ret
scas
xchg
bound
clc
out
jg
stc
out
jg
stc
mov
ret
and
add
add
dec
inc
scas
inc
pusha
or
add
add
add
(bad)
(bad)
inc
add
add
add
add
add
add
jns
je
ins
cs
jb
ja
outs
addr16
push
gs
imul
xor
xor
inc
jne
je
jb
cmp
jb
ins
sub
push
jne
ins
imul
imul
bound
xor
data16
xor
fs
add
adc
gs
cs
jb
ja
outs
addr16
imul
add
popa
je
pop
add
add
add
add
add
lsl
add
les
add
add
or
or
add
or
add
add
add
add
or
add
add
pusha
outs
rol
add
add
inc
dec
inc
add
mov
or
popa
add
jo
pop
jae
add
ret
add
push
ret
add
outs
test
add
adc
inc
inc
push
pop
inc
in
aam
and
(bad)
jecxz
icebp
pop
cmps
cmps
ins
cmps
cdq
cmp
leave
aaa
dec
in
je
cmp
ret
cdq
out
cmp
xor
dec
or
sbb
ja
aas
inc
ja
jmp
stc
retf
adc
sahf
mov
add
jbe
outs
daa
pusha
dec
mov
xlat
pop
(bad)
pusha
sub
mov
ss
pop
rcl
or
mov
fist
loopne
ret
in
fcmove
out
ja
stc
jns
inc
mov
mov
adc
sbb
jl
sti
jb
stos
xchg
(bad)
adc
mov
movs
jae
push
jmp
jbe
fs
xchg
icebp
inc
ins
popa
adc
inc
mov
pusha
xchg
mov
stos
sbb
xchg
inc
mov
pusha
jo
or
sti
jmp
fist
(bad)
cmps
cli
and
repz
xor
lods
and
push
pop
ror
repnz
inc
and
cmps
push
loop
fdivrp
cwde
retf
xor
int3
stc
sbb
sub
push
xchg
dec
dec
fs
fidiv
out
cli
fisub
push
ret
ds
inc
adc
rsqrtps
jecxz
mov
pop
icebp
push
lods
cmp
jmp
pusha
ins
jnp
in
cmps
mov
push
mov
in
jnp
stos
xor
add
xor
mov
and
push
ret
add
dec
or
xlat
getsec
je
in
jmp
mov
cmps
sub
(bad)
jns
loopne
push
mov
enter
les
xchg
(bad)
jne
bound
out
jns
inc
push
or
or
cli
dec
dec
out
and
cdq
mov
lahf
push
xchg
jl
push
loop
sub
bound
les
pop
xor
cmp
adc
movs
stc
push
fisub
mov
iret
mov
inc
sbb
and
add
ret
in
mov
addr16
retf
mov
arpl
stos
(bad)
jg
sti
bound
stc
out
mov
ret
sub
sbb
and
repz
xor
cmp
cmp
mov
lea
sti
inc
mov
stos
das
pop
outs
out
cli
add
mov
mov
xor
div
ins
adc
mov
inc
sahf
pop
leave
push
addr16
mov
xchg
outs
add
mov
outs
sbb
pop
out
mov
ss
out
bound
ror
pop
ds
push
pop
mov
xchg
imul
adc
jne
fdivr
mov
stos
inc
leave
adc
retf
fisubr
leave
aad
inc
movs
movs
call
jnp
dec
addr16
dec
mov
sbb
fist
(bad)
xchg
push
or
in
or
iret
and
sub
mov
cmp
sbb
les
fsubp
jl
movs
(bad)
pop
xchg
out
sub
not
sahf
xor
xchg
pushf
je
cmp
push
es
aad
ins
or
(bad)
cdq
dec
retf
shr
neg
ja
push
mov
nop
cli
dec
jnp
mov
mov
and
int
gs
pop
inc
std
ds
fwait
jmp
sbb
in
mov
xor
(bad)
pop
mov
into
dec
mov
jp
mov
xchg
test
fdiv
xor
xor
jge
xlat
mov
mov
icebp
mov
jl
shr
call
jmp
jge
movs
stos
fcom
movs
(bad)
mov
jmp
int
sub
xchg
sub
sbb
adc
cmps
outs
lds
je
xchg
idiv
movs
jae
and
fabs
xchg
dec
and
inc
cmp
sbb
bound
test
jae
cwde
fdivr
or
inc
mov
push
adc
push
mov
je
movs
pop
pop
lahf
mov
fisubr
aaa
xor
xchg
add
add
mov
repz
ja
daa
sar
cmp
mov
xchg
mov
cmp
pop
movs
sub
iret
adc
pop
cmc
fcompp
stos
push
(bad)
loopne
scas
cmp
xlat
push
xchg
clc
call
cli
out
mov
mov
cmc
cwde
fstp
inc
mov
addr16
lea
add
xor
mov
or
mov
xchg
enter
mov
lahf
aad
enter
pop
movs
jo
cmps
test
mov
cmp
mov
add
cmp
in
icebp
fs
xor
mov
(bad)
js
movs
scas
fnsave
ret
shl
cmps
(bad)
cmp
sbb
repz
jae
sbb
dec
dec
xor
cmps
dec
mov
xor
cwde
cmps
outs
sbb
retf
cmc
fstp
xlat
fcomp
and
jmp
std
pop
xor
into
sbb
sub
inc
in
retf
cs
mov
push
push
lea
xor
inc
cmp
xor
push
(bad)
stos
fcomp
stos
xor
push
fisub
hlt
(bad)
retf
fidiv
sti
mov
xor
jg
push
rol
push
sub
cmp
and
push
jp
sub
cmp
std
cmp
jnp
or
sbb
aad
dec
stos
fadd
sbb
sahf
sbb
int3
lea
fmul
sbb
fld
fisttp
gs
pop
movs
outs
cmc
xlat
in
push
sti
cmp
movs
dec
mov
adc
pop
or
sar
out
std
lods
xchg
or
out
add
push
inc
out
mov
gs
loopne
jns
mov
fild
daa
or
shr
and
mov
int3
ficomp
fimul
or
mov
mov
in
inc
mov
mov
sub
mov
xchg
pop
ins
daa
stos
xchg
inc
je
mov
cmp
(bad)
les
xor
mov
mov
dec
jae
pop
gs
add
pop
adc
loope
sub
rcr
push
sbb
pop
sub
lods
xchg
popa
jnp
daa
inc
scas
push
cli
int
loop
cmps
push
jl
jecxz
push
pop
sub
(bad)
sbb
sbb
cmp
test
sub
fwait
lea
mov
push
fwait
xchg
add
mov
mov
dec
ins
fistp
fisub
rcl
or
sbb
xor
push
mov
retf
pxor
mov
je
add
add
shl
or
add
jb
enter
(bad)
push
inc
jae
in
add
mov
mov
push
mov
les
scas
sub
mov
lods
dec
dec
jnp
jge
cmp
loope
cli
sub
xor
shl
inc
and
jnp
js
loopne
push
pop
sahf
outs
out
out
push
neg
stc
std
hlt
lock
jle
addr16
and
sbb
in
in
or
add
cli
cmps
push
fwait
inc
repnz
inc
pop
sbb
sahf
mov
fdiv
outs
sub
or
pop
int
adc
push
pushf
(bad)
pop
jb
sub
ins
pop
aad
movs
mov
jmp
mov
pop
(bad)
cmp
fmul
dec
aas
xchg
test
cmp
popf
fdiv
dec
pop
scas
dec
pushf
sbb
loope
cli
dec
cwde
adc
mov
lahf
inc
xor
pop
inc
in
(bad)
xchg
inc
movs
jnp
leave
jmp
out
push
mov
fmul
inc
fld
sub
sub
sub
ja
adc
xor
cs
mov
mov
js
push
cmc
aas
pop
dec
pop
nop
fiadd
loopne
add
cld
xchg
sbb
outs
(bad)
xor
sti
test
adc
mov
push
dec
cmps
cmp
pushf
adc
adc
xchg
rcl
pop
cmp
sub
xor
mov
scas
pop
(bad)
jns
stos
jg
mov
cli
lea
sub
mov
test
mov
mov
(bad)
call
aas
pop
pop
addr16
mov
mov
icebp
sahf
mov
leave
stos
add
out
fcmovb
in
push
in
jne
(bad)
mov
gs
cmps
cmp
inc
jge
push
adc
mov
ins
aad
or
fisub
jge
ror
mov
sbb
neg
test
mov
jne
mov
add
fistp
add
inc
pop
movs
cdq
cmp
lods
adc
scas
xor
or
movs
xchg
jns
jl
xchg
repz
cmp
mov
pop
rcl
frstor
cmp
iret
out
jg
push
(bad)
movs
es
ins
dec
in
push
push
in
mul
lods
rol
jmp
call
in
shl
inc
mov
stc
sub
push
movs
shr
int
(bad)
or
dec
not
scas
out
mov
xchg
popf
pop
pop
cs
mov
mov
lds
fsub
inc
mov
pop
out
les
and
fsub
jmp
dec
in
(bad)
fst
je
jb
test
(bad)
in
js
test
pop
push
(bad)
mov
sub
jne
or
stos
sahf
and
mov
das
add
pop
adc
sbb
pop
das
add
lds
fcom
dec
leave
out
jp
mov
lods
mov
dec
iret
dec
inc
push
mov
xor
push
xchg
fsqrt
aam
mov
iret
xchg
dec
sbb
sbb
movs
cmp
adc
pop
(bad)
cmc
js
xchg
lea
mov
setns
push
aaa
sbb
and
repz
xchg
das
jns
inc
push
xchg
mov
jo
dec
stos
mov
ficomp
jmp
mov
in
mov
jge
verr
xor
mov
retf
retf
and
and
mov
dec
cmp
cmp
in
mov
std
mov
std
jbe
cld
cmp
out
or
fdiv
inc
pusha
xchg
cmp
mov
imul
and
imul
call
mov
sub
popf
sti
ret
lods
ret
mov
(bad)
out
cs
jae
sahf
pop
dec
sub
mov
test
adc
dec
sbb
in
std
mov
inc
or
dec
sbb
repz
dec
fild
pop
push
lods
hlt
test
cmp
and
js
retf
mov
cmc
test
js
dec
jmp
dec
ret
fistp
mov
pop
iret
sbb
xor
test
adc
push
jp
jge
mov
and
jmp
cmp
sub
push
mov
jnp
sub
fldcw
fstp
add
adc
aad
pop
pushf
add
test
inc
dec
push
jno
adc
ja
movs
loop
outs
lods
cli
or
add
sbb
xor
cwde
ret
jg
push
dec
outs
cmp
inc
mov
push
inc
mov
les
pop
jg
arpl
fnstenv
or
push
out
das
daa
adc
aas
jl
xor
out
mov
lock
fmul
lods
sbb
adc
(bad)
pop
dec
sub
push
ret
les
cdq
scas
fcomp
inc
or
inc
jae
in
jno
mov
jb
std
cmp
leave
cmp
adc
cmc
pop
daa
xchg
mov
ins
fs
pop
scas
inc
mov
into
dec
cmps
push
aaa
dec
retf
pop
xor
push
push
or
jl
and
push
pop
sti
movs
pop
and
xchg
in
leave
jg
movs
push
arpl
cwde
xchg
add
mov
mov
jo
push
mov
in
mov
ja
mov
cmps
cmp
je
lds
pop
aam
data16
ror
arpl
aad
lahf
ret
sbb
fs
dec
ins
icebp
adc
test
test
bound
add
or
out
test
cmp
sub
pop
xor
jnp
ins
cmps
je
mov
push
fs
xchg
cmp
inc
dec
into
mov
loop
jg
mov
jmp
pop
cdq
and
out
jp
cmp
jp
push
push
jmp
std
sar
dec
pop
test
add
lods
xor
cmp
sub
xchg
int3
cmp
ins
mov
mov
retf
push
jbe
aad
dec
mov
outs
int
ret
aad
lahf
sub
lods
pop
fisttp
pop
sbb
jp
cmp
js
aas
xchg
xor
aam
ret
pop
aaa
pop
(bad)
out
inc
outs
pusha
clc
aaa
das
pop
cld
es
push
mov
jmp
pusha
mov
jmp
adc
ror
gs
xor
mov
aas
pop
arpl
aam
fcmovnb
je
cmp
cmp
(bad)
std
inc
cmp
or
movs
rcl
jg
jae
nop
add
inc
mov
and
fistp
mov
xor
and
sub
inc
hlt
mov
rcl
mov
inc
add
(bad)
(bad)
iret
imul
lods
xor
out
mov
push
mov
jge
mov
mov
ins
(bad)
inc
or
stos
popa
cs
outs
in
sbb
push
sbb
and
sar
imul
jo
mov
sbb
aaa
arpl
aaa
push
cld
pop
popf
xchg
std
jle
pusha
push
dec
ret
xlat
jno
xchg
sub
rcl
mov
das
pop
xchg
inc
cmp
mov
jmp
test
or
dec
out
outs
push
push
dec
pop
add
aas
call
fucomi
jae
bnd
aam
sbb
jb
and
mov
lock
cmp
xor
mov
cmps
lea
cmc
jecxz
(bad)
sahf
shl
sub
jl
fnstenv
xchg
arpl
scas
sbb
add
jnp
into
loope
sar
fwait
pop
or
cmc
mov
add
jl
cmp
lahf
scas
adc
fadd
jecxz
daa
js
ret
(bad)
(bad)
sbb
clc
test
pop
mov
mov
inc
xor
pop
add
cmp
mov
call
adc
or
mov
jbe
cmp
push
pop
and
xor
mov
inc
test
pop
pop
out
jbe
mov
imul
aam
jne
lods
fwait
popa
mov
add
into
pop
and
popa
sub
cmp
je
xlat
xlat
push
mov
jbe
sbb
(bad)
and
and
mov
pusha
pop
inc
hlt
lds
jns
jmp
dec
rcl
sub
dec
pushf
iret
leave
ror
mov
fadd
rol
ret
mov
push
add
cmp
repnz
jo
sbb
sahf
icebp
mov
ds
or
xchg
push
sar
push
jecxz
das
push
aas
je
imul
cld
hlt
popf
cwde
out
icebp
inc
jno
ins
jp
(bad)
sar
lahf
dec
and
pop
pop
pop
inc
jg
xor
or
push
and
xlat
or
and
mov
cmp
adc
fstp
push
pop
mov
push
(bad)
std
js
je
mov
popf
aaa
push
ss
xchg
shl
faddp
stc
gs
jnp
(bad)
dec
js
xor
sub
aas
mov
push
in
int3
mov
cli
jne
repz
ficomp
adc
mov
shl
cmc
and
xchg
add
pop
test
jns
cmps
cmps
mov
aam
xchg
jecxz
inc
mov
mov
popa
xor
push
cli
cmp
jnp
mov
mov
repz
jp
out
in
es
mov
jnp
in
ret
add
push
ss
xchg
addr16
and
mov
jo
mov
and
jle
add
jnp
enter
push
jle
std
jecxz
push
jne
movs
jno
sbb
mov
cld
movs
push
ror
jmp
(bad)
fcomp
aam
jp
ret
aaa
and
daa
imul
aad
sahf
es
jbe
loope
xchg
jmp
je
sbb
add
test
call
out
sbb
getsec
(bad)
ins
xchg
push
inc
xchg
xor
inc
clc
inc
dec
pop
xor
les
dec
in
in
push
cld
push
push
adc
lock
pushf
sbb
ret
imul
xor
mov
dec
into
adc
and
out
jle
cli
es
ins
out
xchg
out
sar
dec
mov
(bad)
xor
push
les
xchg
repz
adc
mov
mov
xchg
loope
jo
fnsave
push
movs
or
and
cmp
call
xchg
outs
fld
call
cmp
pushf
out
sar
cld
repz
aas
(bad)
cld
repz
jmp
lock
hlt
out
xbegin
add
add
dec
inc
scas
inc
pusha
or
add
add
add
(bad)
(bad)
inc
add
add
add
add
add
add
jns
je
ins
cs
jb
ja
outs
addr16
push
gs
imul
xor
xor
inc
jne
je
jb
cmp
jb
ins
sub
push
jne
ins
imul
imul
bound
xor
data16
xor
fs
add
adc
gs
cs
jb
ja
outs
addr16
imul
add
popa
je
pop
add
add
add
add
add
lsl
add
mov
mov
inc
or
add
or
add
add
add
add
or
add
add
pusha
outs
rol
add
add
inc
dec
inc
add
mov
or
popa
add
jo
pop
jae
add
ret
add
push
ret
add
outs
test
add
adc
inc
inc
push
pop
inc
in
rol
ror
sub
pop
add
je
jae
out
mov
inc
nop
xchg
xchg
xchg
nop
xchg
nop
push
and
push
xchg
add
pop
and
add
pop
enter
add
mov
xlat
and
jle
lock
mov
inc
jae
jbe
jne
(bad)
in
mov
lds
cwde
mov
xchg
cmp
cwde
in
pop
fadd
xor
fdiv
jnp
or
xchg
add
cmp
arpl
into
or
mov
push
or
jl
iret
(bad)
mov
lods
and
and
add
test
aam
fisttp
or
mov
mov
xor
mov
cmp
stos
add
ds
pusha
jnp
and
sub
cmps
pop
enter
adc
pop
pop
push
cli
div
dec
push
fstp
push
mov
dec
lahf
inc
mov
or
pop
pop
jo
fwait
(bad)
push
das
retf
pop
addr16
popf
cld
adc
lea
lods
das
xor
test
cmp
mov
mov
dec
mov
adc
jno
test
loopne
jne
xor
loope
pop
mov
fidiv
scas
jle
call
sbb
fdiv
mov
pop
fadd
pushf
jge
cs
out
pop
dec
add
adc
in
lods
pushf
stc
es
pop
ins
adc
jg
dec
call
jmp
cmc
cmp
ret
sti
push
inc
adc
sbb
popa
sub
cmp
or
xchg
jle
scas
rcr
push
pusha
popf
push
(bad)
pop
ja
gs
jp
scas
add
adc
repnz
hlt
cmps
jo
sbb
mov
sub
mov
add
loop
ja
aam
or
jle
sub
in
xor
jae
test
sbb
les
pop
mov
int
cmps
fst
jmp
sub
iret
and
cld
outs
push
cmp
in
repz
mov
and
mov
les
cmp
imul
xor
mov
mov
std
add
iret
retf
mov
mov
ja
pop
cmp
mov
loop
jmp
idiv
dec
or
add
test
lods
xchg
jns
jge
dec
rcr
push
test
lods
xchg
inc
lock
scas
ins
scas
inc
lahf
stc
leave
jmp
scas
lahf
pop
ror
push
inc
cmp
adc
pop
bnd
add
mov
jecxz
ret
dec
jmp
mov
xchg
outs
lahf
dec
push
xchg
jnp
cdq
mov
mov
sahf
inc
iret
push
gs
jbe
jae
(bad)
cdq
out
or
(bad)
fisttp
das
(bad)
inc
or
repz
daa
shr
outs
ds
dec
add
mov
xchg
inc
cld
jl
cmp
mov
mov
test
icebp
push
dec
movs
add
or
lds
inc
xor
into
push
push
icebp
aas
jmp
push
xchg
sbb
sbb
xchg
popf
prefetchw
je
and
rcl
jge
dec
stc
(bad)
les
push
pop
mov
dec
mov
lds
imul
scas
xor
pop
push
ins
je
dec
in
mov
dec
aas
shl
je
dec
test
mov
(bad)
sbb
popa
mov
xchg
fwait
cwde
shl
push
pop
aam
or
mov
jmp
rol
adc
inc
imul
test
sahf
shl
sub
test
jle
ins
mov
lock
cmp
test
inc
cmp
cmp
iret
cmp
push
popf
lahf
scas
jg
test
repnz
xchg
xchg
(bad)
mov
dec
js
(bad)
fisubr
cmps
daa
sbb
mov
fcmovnbe
xor
iret
ins
(bad)
stos
mov
shl
and
aas
(bad)
mov
push
jl
push
rcl
xchg
inc
jnp
cmp
push
hlt
mov
mov
stos
(bad)
sbb
int3
mov
dec
cmps
cli
mov
sbb
jbe
lea
imul
in
or
mov
lods
dec
mov
jmp
je
fsub
push
jae
fwait
outs
sub
clc
out
pop
loopne
adc
push
shl
int
pop
cmp
or
xor
cmps
cld
ret
adc
pusha
push
icebp
cmp
sub
xor
mov
inc
aas
frstor
xchg
sbb
out
mov
imul
dec
mov
mov
jmp
add
push
sub
out
fldenv
adc
jo
lods
out
popf
and
xchg
mov
in
icebp
ins
cs
sbb
add
mov
repz
retf
scas
mov
stos
cmp
icebp
cmps
xchg
pop
cmp
xor
dec
add
call
jae
fimul
pushf
adc
lods
sbb
mov
pop
fs
and
cmp
mov
and
cmp
int3
in
and
fnstcw
cmc
mov
outs
inc
or
mov
mov
sub
cmc
jmp
xor
sbb
adc
mov
rol
jmp
push
sub
and
jbe
xchg
jle
xchg
pop
inc
lea
cwde
mov
sbb
mov
push
add
xor
sbb
add
cmc
pop
add
pop
sbb
dec
lahf
les
int3
test
mov
in
xor
dec
lods
rol
mov
cmp
cs
adc
sub
or
lods
clc
mov
ret
iret
xchg
mov
jo
jnp
movs
jbe
repz
pop
xchg
inc
xlat
jbe
nop
jmp
jle
jb
repnz
xchg
jno
adc
jno
in
dec
ja
xchg
test
iret
jbe
inc
icebp
cmp
fdiv
pop
xor
mov
cmc
or
jecxz
jo
xor
add
push
arpl
xchg
jno
loopne
sar
sbb
mov
gs
xlat
rol
ret
movs
mov
gs
adc
mov
out
pop
pop
icebp
pop
inc
push
fsubr
fcmovnu
mov
inc
stos
jbe
ss
in
inc
xchg
xchg
mov
sar
dec
ds
out
lods
idiv
pop
dec
push
pop
iret
add
jl
repnz
jg
xchg
sti
pop
inc
retf
mov
les
jmp
mov
mov
(bad)
gs
xor
xchg
in
jle
mov
into
fsubp
dec
mov
or
and
jmp
mov
lods
sub
out
jb
mov
fwait
sub
test
push
je
pop
pop
scas
adc
add
inc
xor
ins
outs
(bad)
mov
mov
mov
or
aad
das
dec
outs
into
jnp
mov
push
inc
jmp
lock
dec
rcr
paddsb
enter
xor
fwait
out
stos
jge
aam
mov
dec
sub
mov
stos
lods
std
test
fwait
mov
jle
or
fldcw
outs
jmp
fiadd
fsubr
inc
outs
jns
sub
imul
shl
adc
push
mov
out
mov
xlat
mov
in
sbb
call
ss
jne
(bad)
leave
xlat
loopne
and
xor
cmps
fnstcw
xchg
arpl
and
imul
cld
mov
test
cwde
jae
dec
mov
jmp
mov
mov
pusha
xchg
fdiv
lods
idiv
ss
and
movs
test
mov
mov
sub
sub
int3
adc
cmovnp
xchg
call
jns
popa
ret
jp
out
or
inc
push
inc
xchg
(bad)
xlat
in
and
ret
or
sub
sbb
pop
sbb
adc
(bad)
dec
js
mov
into
out
adc
mov
jno
sub
pop
out
jle
loopne
clc
or
lock
sub
stos
sub
inc
pop
lahf
mov
sahf
loope
cdq
jb
push
cmp
xor
shl
inc
lea
mov
xor
int
add
add
shl
fucom
pushf
dec
or
mov
stos
stos
(bad)
daa
sub
push
push
movs
retf
cmps
(bad)
mov
stos
imul
(bad)
mov
cli
mov
xor
push
sbb
(bad)
jecxz
xor
mov
sbb
pushf
out
adc
sbb
les
not
movs
das
je
fidivr
sbb
imul
clc
pop
sub
(bad)
iret
mov
add
inc
mov
push
jl
enter
pop
cmp
xchg
fmul
jge
mov
stc
inc
mov
adc
sub
lahf
sub
ret
or
sahf
push
pushf
xor
xchg
paddw
xchg
imul
stos
(bad)
iret
sahf
ficomp
stos
test
rol
inc
repz
sbb
sbb
(bad)
sub
push
fdivr
mov
cmps
adc
adc
fcmovbe
in
inc
push
test
inc
adc
out
ret
adc
(bad)
call
inc
int3
aaa
mov
mov
icebp
mov
sbb
pop
retf
adc
pop
add
xchg
mov
data16
(bad)
mov
popf
mov
es
ret
jg
movs
sar
les
jno
xchg
test
xor
mov
dec
mov
shl
adc
scas
and
lods
or
sub
pop
push
and
or
xchg
mov
iret
pop
imul
ret
jmp
adc
dec
cmp
(bad)
xchg
out
icebp
cmp
std
add
ds
in
xchg
or
pop
fidivr
pop
leave
pop
pusha
xchg
in
(bad)
fcomp
pop
loop
fwait
call
mov
pushf
jmp
mov
cwde
pop
adc
push
inc
scas
lock
xchg
outs
ret
jmp
mov
jge
cmp
imul
sub
pusha
pop
js
mov
movs
repnz
or
ins
cmp
out
dec
fld
mov
push
or
lods
iret
add
sahf
adc
das
cmps
test
cmp
stc
fsubr
inc
cli
imul
and
sbb
fiadd
push
das
arpl
int
sub
push
in
fucomi
xchg
xchg
add
iret
pop
in
adc
in
fcmovbe
pop
out
xlat
push
sub
jae
xchg
jle
jmp
popf
gs
add
ror
call
push
sahf
and
mov
leave
stc
jae
ret
cdq
adc
clc
cmp
adc
xlat
cmp
pop
jmp
xchg
ins
sub
fisub
xor
imul
rcr
les
sbb
sub
out
aad
data16
ins
jne
xchg
mov
gs
add
gs
inc
std
add
jecxz
aas
mov
add
push
pop
lea
stos
mov
fwait
and
repz
lds
fisttp
inc
mov
rcl
lods
fist
popf
mov
(bad)
out
(bad)
sbb
jne
les
aam
jle
ret
(bad)
in
xor
pop
bound
stos
jo
sbb
mov
jmp
dec
icebp
loopne
in
pop
xchg
popf
ret
cld
sub
sahf
mov
sub
jne
adc
push
idiv
cs
pop
aam
jl
add
clc
div
push
sti
mov
test
mov
adc
mov
dec
mov
mov
je
(bad)
jns
shr
xchg
repz
ret
call
loop
adc
adc
test
cmps
cmps
add
xor
mov
mov
add
push
mov
js
jmp
sub
jge
das
fdivr
ins
(bad)
dec
jae
xor
xchg
sahf
mov
push
jae
test
dec
test
mov
rcr
pop
cmp
sbb
jmp
fiadd
aam
pop
(bad)
out
mov
jno
jp
out
jo
out
dec
inc
aaa
or
pop
push
(bad)
push
pushf
jnp
add
pop
pop
outs
jbe
retf
add
fsub
cdq
xchg
jne
fadd
and
rcl
mov
mov
mov
or
dec
xlat
pop
ret
ss
dec
inc
push
pushf
xchg
scas
movs
shr
dec
js
and
pop
movs
gs
xchg
fndisi(8087
es
inc
mov
inc
ins
dec
adc
lods
cmp
jo
imul
xchg
push
add
mov
call
mov
mov
adc
sub
jecxz
push
in
inc
dec
shl
sahf
ja
jmp
stos
sub
les
or
jge
into
pop
sub
repnz
cmp
pop
xor
cmps
xor
retf
mov
cmps
add
mov
lea
pop
jne
fimul
mov
in
mov
or
sbb
sbb
test
jg
lds
dec
test
cs
push
mov
cmp
pop
sbb
cmps
loope
sti
sub
xchg
push
adc
addr16
imul
mov
scas
add
pop
cmps
and
dec
icebp
fnstsw
add
repz
jecxz
imul
in
mov
test
call
jle
popa
sub
xchg
shl
outs
popa
mov
ss
cmp
loope
push
push
xor
mov
or
fmul
mov
adc
bound
test
jmp
pusha
and
lahf
shl
imul
inc
out
lods
ss
cs
in
add
cmps
leave
push
aam
dec
int
jno
push
dec
ins
mov
xchg
adc
mov
out
mov
jp
xor
shl
sub
and
test
pop
test
es
loop
aam
lds
push
fsubr
push
jmp
imul
in
mov
pop
sub
jge
mov
cmps
dec
cmp
inc
adc
sbb
lock
popa
inc
test
push
mov
jne
inc
xlat
shl
push
pop
aad
inc
mov
cmp
mov
cmc
mov
sub
mov
push
mov
sbb
xor
pushf
sub
mov
add
or
dec
and
push
or
or
data16
cdq
sbb
je
inc
mov
inc
sub
inc
scas
sub
push
js
push
fsubr
add
(bad)
repz
leave
inc
push
pop
jns
add
push
pop
sbb
addr16
dec
cwde
or
cmps
ret
cli
or
ds
lea
mov
mov
fsubr
in
fnstcw
dec
bound
cdq
pop
ds
(bad)
in
inc
loop
cmps
cli
pop
xor
pop
das
dec
popf
or
pop
mov
aad
in
(bad)
and
int3
lods
xchg
pop
hlt
lahf
inc
ds
sub
pop
mov
loop
loop
xor
js
dec
or
inc
jecxz
cmp
and
xlat
(bad)
fmul
jb
xlat
mov
outs
inc
push
pop
shr
(bad)
sub
out
arpl
add
add
mov
mov
arpl
repnz
xchg
and
mov
rcl
rol
pop
push
mov
sbb
jg
retf
ins
clc
mov
lock
lock
cwde
std
mov
(bad)
in
in
sbb
frstor
jo
mov
pop
xor
jmp
int
dec
xor
mov
xor
and
lock
gs
pop
and
push
cmp
inc
mov
ins
fcomp
fldenv
lds
test
jmp
pop
pop
xor
fs
in
and
cld
jecxz
mov
ret
psubq
pop
inc
cmp
mov
sahf
mov
and
mov
(bad)
push
mov
cwde
inc
push
pop
aam
fisttp
cmps
(bad)
push
push
xor
adc
rcr
clc
vaddsd
loop
push
jbe
mov
pop
je
dec
(bad)
mov
ja
jl
imul
neg
mov
lods
ja
mov
(bad)
div
out
mov
and
mov
in
les
sub
cdq
pop
shl
or
retf
out
cmc
push
idiv
fucom
and
sbb
shl
mov
shl
rcr
sub
fwait
out
imul
hlt
inc
fldl2e
and
mov
aam
mov
mov
aad
imul
or
sub
mov
pop
test
(bad)
cld
repz
aas
(bad)
cld
repz
aas
call
add
out
clc
in
sti
mov
add
add
dec
inc
dec
inc
scas
inc
pusha
or
add
add
add
(bad)
(bad)
inc
add
add
add
add
add
add
jns
je
ins
cs
jb
ja
outs
addr16
push
gs
imul
xor
xor
inc
jne
je
jb
cmp
jb
ins
sub
push
jne
ins
imul
imul
bound
xor
data16
xor
fs
add
adc
gs
cs
jb
ja
outs
addr16
imul
add
popa
je
pop
add
add
add
add
add
lsl
add
ret
add
mov
inc
or
add
or
add
add
add
add
or
add
add
pusha
outs
rol
add
add
inc
dec
inc
add
mov
or
popa
add
jo
pop
jae
add
ret
add
push
ret
add
outs
test
add
adc
inc
push
pop
inc
in
aam
and
pop
add
das
rcl
fst
arpl
hlt
test
xlat
xor
cmp
sar
ja
imul
inc
jl
sub
pop
mov
add
cli
mov
xchg
xor
dec
or
mov
mov
jbe
ins
test
dec
mov
call
nop
push
pop
adc
loop
movs
arpl
sbb
cwde
mov
mov
into
pop
repnz
call
push
xchg
inc
mov
push
(bad)
push
sbb
or
add
mul
dec
pop
inc
les
gs
push
pop
dec
xchg
or
sbb
mov
ficomp
mov
xchg
mov
dec
push
fbld
pusha
mov
cdq
xchg
scas
lds
mov
inc
sub
sub
cmp
sahf
xchg
out
repz
xchg
or
adc
pushf
jp
jp
(bad)
mov
and
inc
ins
idiv
add
cmps
gs
call
cld
mov
pop
push
add
std
jmp
call
xor
ins
mov
pop
inc
mov
stos
mov
dec
sub
cmc
out
mov
cmp
loope
daa
or
add
push
jmp
loopne
leave
fidiv
add
pop
in
ret
int
fs
mov
jb
mov
in
or
scas
in
sahf
add
in
ins
mov
push
xor
sar
xor
xchg
mov
pop
cmp
mov
sub
adc
mov
push
outs
sahf
cmc
sbb
xor
sub
xchg
popa
mov
into
mov
sahf
int3
mov
pop
and
pushf
jo
les
pop
push
cmp
add
in
cmp
test
mov
jle
xor
leave
cmp
xchg
call
and
(bad)
test
mov
dec
push
xor
dec
pop
xchg
movs
in
(bad)
jno
addr16
xlat
mov
and
in
ficom
mov
jle
retf
(bad)
push
fnsave
mov
(bad)
xchg
fsub
fs
fwait
(bad)
xlat
shl
jecxz
popa
aad
ret
sahf
loope
call
call
inc
leave
jl
js
push
cmp
push
dec
mov
add
or
(bad)
mov
jns
xchg
mov
call
xor
test
jbe
adc
(bad)
sbb
in
cmp
mov
test
push
rol
das
fs
fwait
mov
xchg
mov
push
lock
mov
adc
stos
xchg
ret
arpl
fsubp
(bad)
sbb
lock
mov
in
inc
imul
lahf
lock
pop
mov
mov
enter
sub
sub
icebp
icebp
dec
(bad)
sbb
mov
pop
test
shr
fistp
loope
stc
jmp
or
daa
adc
jmp
pop
push
xchg
inc
pop
or
jae
mov
in
push
jno
pop
stos
xchg
jb
mov
leave
retf
jmp
enter
mov
mov
out
fild
or
ins
push
jg
or
gs
mov
inc
and
pop
mov
ja
add
and
bound
retf
pop
inc
lahf
mov
out
cmc
inc
xchg
mov
mov
inc
pop
cmp
fimul
dec
jae
add
jbe
mov
cmp
pop
mov
inc
pushf
movs
mov
call
je
outs
xchg
push
inc
xor
int
push
(bad)
mov
sar
adc
daa
adc
addr16
mov
scas
fs
in
int
inc
aas
mov
ds
icebp
xor
movs
jbe
(bad)
mov
cmp
cmps
sar
(bad)
(bad)
es
pop
aaa
(bad)
add
jmp
jno
out
pop
fimul
mov
mov
or
scas
mov
mov
dec
popa
add
and
adc
lock
imul
mov
or
sbb
cmp
mov
cmp
inc
push
(bad)
repz
lahf
stos
cmps
(bad)
iret
cmc
mov
lahf
mov
cmp
jmp
cmp
pop
cld
mov
aam
pop
mov
cmps
mov
mov
bound
enter
into
push
mov
push
xchg
push
imul
sbb
or
les
adc
cs
addps
push
jmp
jae
sbb
mov
aad
aaa
cmp
aad
jnp
stos
(bad)
lock
dec
stc
pop
xchg
jle
sub
adc
sbb
lods
aam
jnp
cmp
ret
mov
and
loopne
in
fs
xchg
mov
inc
adc
lock
jl
ret
psraw
mov
int3
ins
sub
push
addr16
add
cmc
pop
pushf
cmp
js
mov
cmp
xchg
jbe
mov
dec
lods
call
xchg
icebp
push
jbe
jb
inc
jle
loop
mov
mov
mov
mov
sbb
pop
mov
repz
hlt
sbb
test
xor
ins
xchg
stc
gs
idiv
enter
xchg
repz
and
xor
inc
pop
or
adc
mov
(bad)
mov
test
jge
mov
push
dec
in
xchg
lock
outs
inc
jg
push
imul
push
cdq
jg
nop
push
cld
dec
adc
cmp
mov
nop
stc
outs
(bad)
lea
clc
mov
sub
add
inc
rol
ret
std
mov
mov
pop
push
push
push
jl
out
repz
int
aaa
mov
mov
shl
ins
outs
fistp
fwait
mov
cmc
out
clc
jno
dec
push
push
adc
cmp
(bad)
pushf
retf
or
pop
sbb
sub
sbb
add
dec
nop
pop
adc
ss
adc
stc
(bad)
test
add
or
mov
cmp
out
rcr
xlat
or
or
(bad)
cmp
imul
dec
and
xlat
sar
cmp
ja
mov
sar
add
(bad)
repnz
(bad)
outs
push
mov
(bad)
pop
movs
jnp
jge
cmp
cmp
test
fcom
sub
pop
mov
and
popf
in
and
fiadd
nop
ins
or
xchg
mov
loopne
mov
ds
bound
mov
stos
mov
ja
add
mov
and
hlt
or
push
pop
clc
in
es
inc
popf
sbb
test
mov
and
aaa
jmp
repz
out
mov
mov
jl
out
cld
inc
mov
addr16
ret
aad
xor
rcr
movs
dec
test
imul
adc
std
dec
jmp
cmp
mov
(bad)
sub
adc
cs
in
and
movs
stos
in
push
pop
out
inc
push
dec
aad
jmp
fbstp
add
adc
cmp
addr16
cmp
inc
push
xlat
xor
fisttp
pop
push
dec
and
out
and
jle
push
in
nop
adc
dec
cmps
mov
int3
adc
xlat
mov
push
in
(bad)
xor
xchg
jmp
aaa
ret
dec
push
icebp
jb
imul
test
mov
add
push
mov
cwde
test
pushf
in
xchg
mov
add
(bad)
loopne
xchg
push
ins
cmp
ds
jecxz
add
(bad)
(bad)
push
addr16
add
popf
sub
popa
sbb
and
scas
lahf
enter
aam
pop
dec
sub
jg
mov
mov
mov
adc
call
xchg
enter
rep
out
and
stos
call
aam
or
scas
jp
fdivr
xor
repnz
xor
stc
or
mov
bound
sbb
cli
jns
push
fnstcw
gs
and
in
xchg
adc
jb
test
add
pop
mov
into
cmp
fisubr
movs
in
popf
or
jno
ret
mov
das
popf
xlat
mov
pop
sti
shl
ins
lods
mov
out
sub
xor
inc
jg
and
dec
lahf
xor
icebp
mov
push
jl
dec
sub
adc
jecxz
push
movs
popa
inc
not
mov
int3
add
xor
sar
xchg
xor
sub
enter
push
mov
bound
xchg
and
fadd
sub
cmp
and
test
outs
sub
mov
pop
dec
rol
jp
or
xchg
xchg
fs
cmc
(bad)
dec
sbb
xor
ret
jg
mov
hlt
cmp
das
sub
test
adc
ret
cs
fucomp
mov
leave
aas
xor
into
push
cli
out
or
add
inc
ja
inc
fwait
cmps
and
pop
movs
jne
push
or
hlt
mov
adc
push
mov
dec
mov
push
out
test
movs
mov
mov
lods
into
add
add
mov
dec
push
fs
fcom
push
nop
pop
inc
popa
dec
jecxz
xor
loop
dec
movs
inc
mov
aad
xor
pop
xor
(bad)
(bad)
jmp
sbb
int
mov
dec
out
cmc
ret
mov
inc
jne
data16
or
push
jb
cmp
jnp
and
mov
mov
pop
cmp
mov
in
icebp
inc
xchg
push
xor
je
cmps
pop
push
and
sbb
mov
mov
cmp
inc
lea
lahf
xor
mov
xor
and
pop
mov
test
call
pop
stc
out
jge
sub
(bad)
and
ins
dec
pop
inc
xchg
rol
pop
fidiv
addr16
retf
push
pop
aaa
popf
lahf
sar
or
jmp
jg
dec
je
adc
popf
fisub
inc
mov
sbb
std
test
test
cmp
dec
test
mov
dec
push
and
jb
nop
dec
mov
call
pop
(bad)
aad
stos
aaa
mov
jo
cmps
mov
cmps
cmp
or
or
pop
inc
test
test
ins
sti
or
jmp
and
daa
fist
test
ret
pop
jne
fsubr
loop
pusha
lds
aaa
mov
bound
ins
imul
(bad)
dec
dec
in
test
cmp
out
jge
and
iret
jbe
sahf
dec
sub
aaa
movs
jge
rcl
push
fistp
mov
stos
sub
jmp
retf
cdq
dec
mov
push
nop
fcmovu
add
mov
and
fcomp
inc
fld
mov
pop
(bad)
xchg
repnz
mov
dec
pop
std
mov
clc
add
addr16
clc
retw
dec
sti
inc
test
xchg
lods
pop
test
outs
mov
sub
fstp
mov
pop
jle
adc
test
add
int3
inc
test
sbb
pop
loop
jne
int3
mov
(bad)
psrlw
in
jns
mov
dec
sahf
in
mov
jle
int
les
mov
xchg
(bad)
das
jno
lea
mov
mov
pop
push
dec
hlt
pop
adc
int3
jno
ins
jge
in
fs
fwait
jbe
call
shl
js
cdq
xchg
js
push
fstp
pop
int3
into
icebp
inc
adc
outs
into
sahf
and
fcom
mov
mov
jo
and
jae
pop
lods
jp
jae
mov
sbb
or
hlt
mov
pop
push
mov
std
pop
fisttp
int
adc
movs
fistp
pusha
imul
rcl
mov
xchg
add
mov
xchg
pop
dec
cmps
xor
cmp
mov
inc
jbe
xchg
push
pop
cld
hlt
mov
xchg
retf
mov
adc
push
stc
jbe
movs
call
sbb
nop
mov
push
dec
dec
in
xchg
sub
inc
jp
scas
adc
and
mov
cs
dec
icebp
or
cmp
or
int3
jl
xlat
xor
add
xchg
mov
(bad)
adc
(bad)
shl
mov
ffreep
cdq
adc
out
fist
mov
icebp
adc
cmp
imul
outs
ja
stos
cmp
repz
mov
inc
rol
loopne
or
mov
sbb
arpl
in
mov
arpl
xor
add
hlt
mov
imul
imul
test
sar
shr
ins
adc
in
(bad)
test
aad
xchg
jl
inc
(bad)
push
shl
xor
sub
or
ins
aaa
dec
fisub
push
cmp
mov
xchg
mov
(bad)
and
shl
xor
xor
mov
push
pop
pop
mov
jl
hlt
mov
pushf
call
(bad)
iret
mov
cmps
xlat
loope
into
cmp
jg
dec
cmp
jae
inc
lock
ficomp
or
mov
adc
pop
mov
inc
push
mov
leave
dec
popa
stos
loopne
mov
sbb
les
sbb
cs
mov
cmps
mov
and
mov
and
hlt
pop
inc
mov
cmc
dec
xchg
push
out
mov
jge
push
imul
loope
pop
inc
gs
inc
or
sbb
ja
adc
data16
cmps
push
mov
nop
mov
jbe
xchg
aaa
pop
rol
cmp
jns
movs
cli
inc
xor
jb
shr
jbe
push
xor
lock
jecxz
and
sbb
ins
pop
add
mov
inc
fidivr
and
stos
pop
push
inc
adc
or
movs
jnp
into
push
adc
jns
push
jns
fdiv
mov
dec
xor
xchg
icebp
push
pop
add
dec
xchg
rcr
jmp
inc
sbb
into
sub
sub
icebp
push
mov
mov
and
sub
int
int3
loopne
pop
push
adc
xchg
xor
mov
out
xchg
cmps
adc
inc
pop
sbb
fimul
jge
lock
(bad)
and
(bad)
test
pop
cwde
inc
jmp
push
aad
mov
stos
sar
push
dec
ja
pushf
xor
and
mov
dec
aas
jbe
es
add
out
jb
jp
jns
pop
(bad)
pop
pop
stc
sub
ret
loope
sub
fs
sbb
add
pop
inc
jb
sub
mov
xor
loopne
pop
jnp
jne
(bad)
sbb
in
test
scas
in
sub
or
in
and
sahf
mov
(bad)
push
stos
pop
jl
sbb
int
inc
xchg
outs
mov
sbb
scas
out
rsm
ds
dec
xchg
rol
mov
mov
jmp
jno
lock
pop
xchg
mov
jge
push
mov
push
jecxz
and
inc
out
js
inc
cmc
fisttp
mov
push
mov
(bad)
sbb
mov
adc
mov
out
mov
or
jp
push
mov
je
lods
fwait
loopne
mov
aam
(bad)
fstp
jle
xchg
jl
daa
push
pusha
test
xchg
cli
or
inc
pusha
xor
jno
jno
ror
pop
cmp
pop
das
inc
dec
sub
loope
adc
and
xor
lock
or
out
adc
and
call
shr
retf
dec
into
cmp
and
aad
cmp
pop
mov
into
mov
and
adc
sub
pop
add
mov
daa
sbb
cmp
bound
xor
call
ds
pop
adc
mov
sub
adc
add
dec
pushf
pop
cmp
jno
out
mov
cmps
mov
jg
add
int
scas
mov
aam
mov
mov
ds
fimul
(bad)
xor
aas
(bad)
mov
xor
fs
sbb
mov
je
jns
jmp
xor
scas
mov
and
sbb
mov
jnp
mov
cmp
movs
cmps
cdq
cmps
dec
mov
in
retf
fucomip
push
cdq
or
adc
sub
mov
and
div
add
or
mov
ret
jmp
sti
xchg
and
fdivr
je
push
loopne
(bad)
stc
iret
jg
repz
(bad)
cld
out
xor
in
or
mov
add
dec
inc
dec
inc
scas
inc
pusha
or
add
add
add
(bad)
(bad)
inc
add
add
add
add
add
add
jns
je
ins
cs
jb
ja
outs
addr16
push
gs
imul
xor
xor
inc
jne
je
jb
cmp
jb
ins
sub
push
jne
ins
imul
imul
bound
xor
data16
xor
fs
add
adc
gs
cs
jb
ja
outs
addr16
imul
add
popa
je
pop
add
add
add
add
add
lsl
add
mov
mov
inc
or
add
or
add
add
add
add
or
add
add
pusha
outs
rol
add
add
inc
dec
inc
add
mov
or
popa
add
jo
pop
jae
add
ret
add
push
ret
add
outs
test
add
adc
inc
inc
push
pop
inc
in
aad
and
pop
add
das
es
sar
fimul
xor
xor
cli
ins
jp
in
cmp
fnstsw
cmp
shl
es
imul
push
ds
jge
les
add
stos
std
int
add
jle
mov
sbb
add
mov
scas
mov
sbb
js
(bad)
mov
inc
in
(bad)
shl
mov
inc
xchg
mov
stc
in
push
inc
dec
adc
ins
adc
push
loope
loope
inc
lods
stc
in
fwait
jns
loope
imul
fstp
adc
mov
pop
ficom
outs
aam
add
inc
cdq
or
mov
adc
mov
test
and
rcr
xor
fist
(bad)
fnstenv
pop
repnz
std
sub
into
int
add
std
mov
or
aaa
retf
sbb
loopne
imul
pop
jno
cdq
ja
pushf
out
adc
int3
out
sub
outs
dec
mov
cwde
jmp
inc
or
cmp
push
(bad)
cmps
ret
pop
ds
jecxz
popf
call
push
cmp
push
popf
enter
jge
pusha
test
sub
ss
fwait
xchg
cmp
pop
jne
adc
mov
(bad)
sub
out
dec
test
push
mov
idiv
add
aam
sub
dec
outs
pop
mov
jae
jle
mov
fisubr
lahf
jb
mov
shr
sbb
jg
push
and
sub
(bad)
cmps
cmp
sbb
jle
arpl
scas
sti
clc
pop
mov
fwait
mov
xor
mov
cmp
dec
dec
xchg
mov
pop
adc
inc
add
pop
inc
mov
cmp
jmp
mov
push
out
lods
shl
mov
sub
ret
das
mov
sbb
nop
(bad)
shr
jmp
inc
sub
lds
stos
aad
jmp
cmc
setno
in
out
sub
loope
dec
xor
push
mov
and
cmp
fisttp
pop
wbinvd
xchg
addr16
rcr
cld
dec
into
popf
cmps
frstor
inc
jb
std
jae
pop
call
inc
or
addr16
pusha
jnp
mov
dec
out
sbb
bound
mov
aam
add
mov
stc
sub
fmulp
xchg
xchg
mov
lods
or
(bad)
dec
push
rol
jecxz
call
pusha
jne
adc
cmp
adc
clc
pop
mov
imul
(bad)
iret
ss
inc
fist
sub
jg
sbb
(bad)
ins
shl
mov
iret
sbb
sbb
iret
adc
nop
push
in
sub
push
pop
push
std
jns
pushf
mov
add
movs
push
cmp
jge
push
popf
push
mov
rol
(bad)
in
pop
jle
sbb
jns
clc
inc
pusha
push
pop
mov
inc
daa
cdq
stos
loopne
addr16
mov
sub
or
rcr
mov
(bad)
sub
bound
fld
imul
cmp
jmp
mov
or
pop
dec
ror
test
mov
dec
les
loop
jne
retf
pop
fxch
mov
call
(bad)
xor
mov
sbb
sbb
mov
pop
and
sub
mov
or
jmp
and
pop
push
in
cmp
aaa
fcomp
outs
jnp
repnz
data16
push
sahf
rcl
xchg
mov
repz
cdq
or
ret
mov
shl
mov
adc
push
int3
pop
mov
push
xor
adc
push
or
addr16
cmps
movs
add
mov
xor
mov
mov
xor
cmp
imul
adc
sahf
xchg
inc
mov
shl
push
loop
pop
mov
dec
push
xor
push
mov
xor
mov
add
dec
ror
loopne
or
std
and
pushf
sub
mov
(bad)
mov
bound
adc
rol
cli
stos
xor
cdq
push
iret
cmp
push
add
out
inc
sub
nop
pop
push
inc
ss
push
cs
stos
fsubr
push
jmp
lds
shl
dec
jg
inc
adc
fstp
mov
jl
loope
xchg
dec
mov
shl
pusha
test
sbb
stos
inc
(bad)
(bad)
(bad)
jb
mov
push
mov
loope
mov
and
in
call
outs
lods
mov
mov
sbb
test
jno
push
in
xor
cmp
rol
mov
(bad)
pusha
sbb
jno
push
les
mov
jmp
lock
in
out
mov
(bad)
dec
push
mov
dec
bound
pop
push
mov
imul
mov
sbb
aaa
fidiv
in
bound
test
pop
dec
ja
push
and
arpl
push
mov
pop
int3
xor
je
mov
imul
push
outs
aaa
sbb
sub
shl
das
jecxz
pop
shl
pop
jo
sbb
call
cwde
(bad)
mov
inc
das
push
repnz
iret
or
js
pop
sar
add
cmp
dec
cmps
sub
movd
xlat
mov
ss
daa
jne
mov
(bad)
retf
xchg
xor
mov
mov
xor
sbb
sti
jno
call
sbb
pusha
add
xor
out
jb
push
pop
outs
mov
jecxz
(bad)
inc
jl
loopne
and
inc
jg
loope
and
cli
pusha
retf
jae
ret
mov
out
mov
out
pop
shr
jmp
push
mov
pop
outs
push
es
adc
iret
push
xchg
(bad)
or
scas
jecxz
(bad)
sub
mov
and
pop
lock
js
jae
idiv
cmp
push
je
pop
iret
add
scas
or
repz
and
ja
(bad)
jle
adc
push
fsub
pop
js
jg
bound
mov
stos
fisubr
mov
clc
fidiv
rcl
mov
lods
ins
movs
pop
call
pop
pop
arpl
pop
mov
push
xchg
mov
(bad)
push
rcr
and
sti
sub
mov
and
ja
cmp
or
add
jno
xor
jb
dec
aas
xchg
add
jg
imul
mov
sub
add
retf
and
shl
gs
shl
push
xor
ficomp
mov
sbb
jns
test
push
mov
mov
and
iret
cmp
into
or
call
and
inc
push
or
ret
xchg
sub
mov
fmul
xchg
test
cdq
cmp
imul
retf
out
jp
mov
add
and
cdq
pushf
mov
or
je
mov
add
lods
fadd
fwait
mov
(bad)
xor
and
retf
add
mov
inc
cld
cs
aad
jecxz
xor
nop
pop
pop
mov
enter
call
test
jl
mov
pusha
ins
imul
adc
fwait
leave
mov
cmp
leave
or
pop
cmps
push
sar
clc
das
pop
sub
stc
aas
add
cld
adc
popf
aas
sahf
test
into
leave
fld
pusha
in
je
std
loop
adc
sar
xchg
jno
sar
lea
and
jo
push
mov
mov
enter
add
lods
push
mov
push
inc
test
xor
mov
out
xor
push
test
dec
(bad)
adc
call
enter
dec
bound
rcr
jmp
fnstsw
imul
imul
jo
and
or
pop
loope
scas
add
jb
enter
inc
cmc
cdq
ss
fs
jno
cld
xor
push
push
push
or
jmp
test
jge
out
call
push
or
gs
adc
cld
ja
imul
or
(bad)
repz
add
cmc
fldenv
xlat
push
mov
or
pop
(bad)
repnz
mov
pop
adc
and
add
and
jmp
jmp
adc
mov
and
inc
or
mov
push
xor
push
xchg
pop
adc
add
xchg
enter
cmp
gs
or
sub
clc
mov
shl
shl
fidiv
loope
or
retf
sti
fs
das
dec
push
mov
jmp
push
sar
iret
dec
call
gs
into
movs
lods
les
ins
cmp
add
daa
lahf
and
xor
adc
loopne
adc
movs
jecxz
sbb
daa
xor
ja
sbb
sub
or
pop
(bad)
sub
dec
cmp
in
inc
stos
mov
xchg
xor
test
add
xchg
sub
fild
mov
pop
call
pop
mov
popa
mov
pusha
jnp
(bad)
int3
add
lds
cmp
adc
movs
cdq
jnp
repz
test
vpsllw
sub
iret
add
jp
(bad)
jecxz
mov
push
aaa
mov
push
jmp
cmp
mov
pop
lods
inc
pop
nop
out
add
out
jo
add
(bad)
int3
mov
or
loop
(bad)
adc
pop
repnz
inc
mov
ja
or
jmp
adc
dec
(bad)
in
es
mov
sub
int
push
call
retf
jecxz
jg
inc
sub
mov
inc
sbb
shl
(bad)
imul
ins
sub
inc
push
sub
stos
pop
int3
sbb
jns
dec
or
loopne
sub
stos
lock
in
xchg
ret
imul
sub
out
mov
xor
dec
inc
push
push
pop
jmp
arpl
mov
fmul
xchg
xor
xchg
loopne
test
inc
arpl
jb
pop
fsubr
test
mov
repnz
mov
pop
(bad)
adc
stc
imul
stos
sbb
ror
push
push
jbe
inc
aas
loope
mov
in
fdivr
movs
dec
jne
sar
mov
jge
fnstcw
pop
sbb
sti
jmp
in
rol
ret
out
pusha
leave
mov
repz
jne
push
(bad)
push
jae
sbb
sbb
push
inc
sbb
js
mov
pop
mov
(bad)
sti
popa
and
lods
xor
sti
mov
dec
ins
add
or
cmp
pop
inc
jmp
or
jnp
jmp
into
inc
push
xchg
push
and
inc
cmp
dec
pop
ins
dec
rol
sub
jbe
pop
inc
idiv
mov
mov
imul
inc
and
outs
jmp
cmps
in
sbb
stc
sbb
or
pop
pop
stos
test
pop
sbb
test
ins
dec
mov
push
aad
adc
hlt
pop
xor
sbb
pop
in
jp
mov
fmul
shl
or
sub
jns
stos
lea
xor
dec
jmp
bound
push
lods
inc
mov
xlat
loope
test
push
in
cmps
mov
stos
cmps
mov
leave
cmps
hlt
sar
inc
mul
outs
sti
fisttp
pop
xchg
mov
or
daa
inc
jae
jae
icebp
mov
loopne
pushf
not
mov
sub
pop
jo
out
mov
xchg
xor
xlat
stc
mov
fidiv
inc
mov
xor
jl
push
ja
add
cmp
jmp
sub
iret
adc
popa
scas
call
jecxz
sub
cmp
sar
mov
fild
push
stc
cmp
mov
(bad)
mov
mov
lods
aas
mov
mov
lods
iret
or
dec
fcom
lods
sahf
lock
xchg
mov
jno
pop
add
mov
mov
es
pop
gs
in
rol
xor
mov
dec
pushf
ficom
push
les
pop
test
loop
and
pop
popf
add
pop
pop
mov
and
into
out
xchg
mov
cmp
push
or
pop
xchg
sbb
inc
xchg
mov
lea
mov
cdq
stos
push
arpl
adc
dec
arpl
sti
retf
inc
mul
sti
(bad)
mov
mov
inc
hlt
jecxz
xchg
dec
loopne
(bad)
enter
mov
cld
jbe
mov
not
bound
mov
mov
add
adc
mov
pop
(bad)
call
adc
es
movq
ja
les
cdq
xchg
mov
gs
xchg
mov
and
icebp
fld
dec
mov
in
pop
pop
sub
xchg
or
xchg
jmp
cmp
inc
mov
ror
sub
aam
(bad)
adc
cmp
sbb
(bad)
jmp
pop
clc
cmp
mov
push
dec
int
mov
mov
sbb
xchg
sbb
jmp
test
fmul
adc
test
sbb
ret
in
sub
lds
data16
sar
call
sbb
cmc
inc
lods
cdq
jmp
cmps
pop
repz
(bad)
fadd
push
sar
jge
stos
cmps
pop
or
push
mov
cmp
aad
sar
cs
sbb
mov
push
cdq
std
pop
dec
shl
jno
jae
(bad)
mov
sar
pop
cmp
hlt
test
push
sti
jbe
xchg
rcr
sub
pop
xchg
movs
loop
movs
out
jmp
cmps
sbb
fwait
dec
sub
retf
inc
dec
mov
out
fs
pop
jno
xor
popf
push
adc
adc
mov
out
or
sbb
lea
mov
mov
ficom
xchg
arpl
mov
jo
imul
sub
aad
pop
jecxz
xor
xchg
pushf
test
mov
and
sti
cmps
ins
or
loope
xchg
loope
xor
cwde
or
pop
popf
sub
fst
fcom
das
push
sbb
mov
(bad)
cmc
adc
clc
sub
xor
in
call
scas
outs
je
fs
and
cmp
cmp
ss
push
movs
int
ins
sbb
jmp
hlt
mov
or
add
ss
adc
push
in
and
shl
push
sahf
sub
add
dec
adc
jmp
cmp
or
or
mov
xchg
ret
shr
ror
pop
mov
mov
bound
mov
pop
shl
jmp
cmp
ret
pop
mov
(bad)
std
jp
aam
(bad)
push
fisttp
ss
mov
adc
jp
fstp
or
push
push
pop
jo
sbb
ret
xor
mov
jno
jae
in
les
jle
mov
out
cmp
scas
loop
mov
enter
test
nop
cmc
shl
mov
(bad)
scas
mov
mov
mov
mov
lds
push
movq
ret
pop
clc
pop
out
sar
sbb
int
and
movs
jo
add
add
outs
ins
outs
and
std
les
lahf
das
inc
jmp
and
lods
cli
loopne
dec
mov
mov
pop
or
adc
mov
and
mov
das
xor
lea
or
mul
daa
fwait
stos
aas
outs
cmp
xchg
popf
fdiv
sti
jle
(bad)
mov
dec
das
jbe
sti
mov
inc
jnp
ins
cmp
sub
cmps
xchg
je
or
lods
call
add
imul
out
jg
stc
out
call
add
jg
ds
rcl
add
dec
inc
dec
inc
scas
inc
pusha
or
add
add
add
(bad)
(bad)
inc
add
add
add
add
add
add
jns
je
ins
cs
jb
ja
outs
addr16
push
gs
imul
xor
xor
inc
jne
je
jb
cmp
jb
ins
sub
push
jne
ins
imul
imul
bound
xor
data16
xor
fs
add
adc
gs
cs
jb
ja
outs
addr16
imul
add
popa
je
pop
add
add
add
add
add
lsl
add
ret
adc
add
mov
inc
or
add
or
add
add
add
add
or
add
add
pusha
outs
rol
add
add
inc
dec
inc
add
mov
or
popa
add
jo
pop
jae
add
ret
add
push
ret
add
outs
test
add
adc
inc
inc
push
pop
inc
in
shl
fisttp
ret
xor
ss
pop
pop
pop
fmul
retf
out
test
das
ja
ins
xlat
jb
fstp
lds
scas
test
(bad)
addr16
ja
std
jno
rcr
out
jmp
pop
(bad)
mov
push
scas
dec
add
pop
mov
mov
xchg
loopne
cdq
or
ror
cwde
pop
scas
je
pop
cmp
jns
sbb
fmul
aam
push
and
fnstcw
and
ins
(bad)
in
lea
dec
das
sub
xchg
xlat
sbb
outs
sbb
nop
stos
jns
cmp
sub
mov
fldpi
scas
je
(bad)
push
pop
cmc
mov
je
loop
imul
into
push
xchg
iret
fisub
jnp
ds
add
in
fdiv
aam
cmc
fbld
and
push
leave
test
and
mov
aaa
add
mov
mov
mov
hlt
sahf
jle
jns
pop
pop
cmp
inc
not
icebp
cwde
into
adc
(bad)
ja
jae
xchg
cli
pop
out
xor
sar
mov
cmp
push
mov
repz
cmps
cmps
jmp
sub
std
add
pop
xchg
sar
inc
pop
lods
jae
popf
pop
scas
dec
mov
mov
hlt
xor
fmul
push
in
mov
cli
dec
jno
mov
mov
gs
enter
sbb
in
pop
ficomp
mov
jb
xchg
pop
xor
adc
pop
lea
pushf
lods
test
cmp
ret
push
div
push
sub
ins
xor
jno
cmp
and
fcmovne
popf
or
xor
(bad)
mov
sub
mov
inc
mov
dec
mov
fiadd
inc
clc
loop
adc
movs
retf
in
packsswb
sbb
or
cmp
or
hlt
fs
rcr
fld
dec
push
add
int3
xor
aas
and
mov
dec
call
stos
push
sbb
inc
out
xchg
ror
push
ds
mov
jp
imul
sub
out
jecxz
arpl
jecxz
fucomi
adc
jmp
xchg
retf
retf
outs
push
or
mov
dec
addr16
xchg
sub
sbb
fsubr
sbb
fbstp
pop
mov
cmp
int
je
or
jle
ja
lods
ss
and
inc
xchg
sbb
rcr
fidiv
mov
adc
lds
dec
repnz
iret
lahf
test
arpl
push
pop
out
js
movs
icebp
hlt
(bad)
mov
inc
cmp
sbb
arpl
out
in
mov
stos
div
cmp
int3
aas
ins
pop
rol
clc
mov
das
and
fnstenv
push
adc
jle
push
fadd
mov
arpl
push
arpl
sub
jb
xchg
cli
movs
push
ins
sbb
pop
lds
push
call
xchg
jl
lods
xchg
fldcw
lods
xor
arpl
mov
cmp
mov
sub
fwait
out
pop
adc
mov
in
add
(bad)
in
xchg
call
out
outs
ror
xchg
fcomp
adc
add
js
or
call
dec
inc
shr
sub
cmps
out
lods
mul
and
lods
nop
mov
push
cld
das
ret
dec
jmp
pop
iret
scas
rcl
loop
and
test
gs
mov
mov
cmovg
(bad)
mul
inc
popa
and
adc
jo
jmp
xchg
or
xlat
mov
xlat
inc
call
into
cmc
bound
lahf
mov
xchg
cmp
mov
into
in
les
adc
dec
ss
jge
or
mov
add
and
addr16
lahf
adc
or
retf
mov
jno
jecxz
std
adc
sub
xor
cs
aam
loop
sub
cmp
or
mov
iret
shr
inc
repz
sahf
cmp
xchg
cli
(bad)
jno
ret
mov
test
jmp
jns
mov
adc
push
loopne
fdivr
cmps
ja
mov
cli
imul
shl
mov
scas
fmul
iret
loope
inc
retf
mov
push
fsubr
loopne
mov
out
jle
sbb
daa
add
add
mov
push
mov
pmaddwd
int
ins
or
lock
(bad)
pushf
jno
xor
fimul
mov
div
js
xchg
fdivr
js
test
inc
push
jo
xor
xchg
sub
add
push
jno
icebp
jle
arpl
cdq
inc
sbb
pop
fsubr
xlat
sbb
inc
mov
stos
imul
pop
call
adc
call
mov
int
dec
scas
sub
bound
rol
repnz
jp
xor
mov
xor
xor
mov
fld
mov
mov
sbb
pop
or
bound
xchg
inc
jnp
mov
les
fcomp
js
je
dec
leave
sub
sub
jnp
mov
int
or
jbe
jecxz
cmp
xchg
test
xchg
dec
mov
adc
pusha
adc
push
(bad)
pop
xchg
jmp
adc
inc
pop
push
lahf
mov
cmp
sbb
fst
es
xchg
dec
fwait
mov
cli
sbb
mov
out
mov
lahf
push
stc
inc
dec
dec
xor
mov
and
add
inc
xor
pop
xor
inc
test
scas
shr
in
mov
mov
xor
xor
mov
out
xor
and
push
neg
push
inc
mov
stc
dec
enter
or
mov
cmp
push
jg
in
adc
test
mov
fsubr
ss
fs
(bad)
push
in
data16
gs
arpl
jns
div
cmp
add
std
pop
mov
loop
jmp
push
fadd
mov
sbb
cmp
lock
into
xchg
mov
or
cdq
stos
fucomip
jl
mov
mov
addr16
push
test
sub
cmps
mov
jl
xor
test
push
xchg
sbb
mov
scas
xchg
repnz
xor
repz
test
(bad)
xchg
inc
push
mov
mov
pushf
int
enter
addr16
add
inc
adc
mov
test
mov
add
fstp
ja
xchg
test
cli
dec
mov
rcl
shl
mov
lods
and
or
and
lods
icebp
fdiv
movs
aad
mov
and
addr16
inc
dec
(bad)
jae
dec
rcr
inc
xor
and
outs
mov
fistp
ins
ss
and
loope
pop
test
cmp
shr
xlat
pop
ror
rcr
and
pushf
xchg
pushf
cli
loopne
xlat
outs
pop
inc
adc
cmps
mov
xchg
cs
(bad)
push
add
cwde
lds
and
stc
mov
inc
sub
sbb
js
adc
retf
inc
jmp
sub
jg
outs
(bad)
pop
lods
ss
enter
fmul
stos
test
mul
sar
jb
loopne
cmp
xlat
jno
leave
xor
out
push
aaa
js
mov
mov
mov
shr
or
mov
xchg
sbb
sub
push
push
iret
xor
popf
stos
mov
push
ins
jmp
cmp
and
lahf
ret
arpl
in
sar
pushf
sar
add
(bad)
(bad)
jp
adc
cmp
add
out
adc
ret
push
movs
lahf
(bad)
mov
mov
(bad)
pusha
das
mov
jmp
fucomip
js
(bad)
jae
xchg
repnz
sti
out
inc
mov
out
or
sbb
pop
xchg
test
mov
es
inc
not
in
mov
and
js
test
jg
aad
(bad)
in
dec
jne
aaa
sbb
rol
rcl
out
xor
neg
xor
into
dec
xor
call
movs
adc
cmps
in
cmps
(bad)
fidivr
mov
dec
sar
fwait
and
sub
ss
jo
dec
xchg
add
pop
les
cmp
push
dec
fstp
sbb
fimul
jo
loop
movs
clc
push
rcl
imul
xchg
xchg
jle
jp
data16
dec
cmp
jb
stos
sub
xor
pop
pop
mov
xor
mov
lea
and
loop
fs
dec
daa
jne
ins
leave
sti
pop
das
int3
push
fadd
sbb
adc
dec
les
pop
movs
shl
cmp
fiadd
xlat
arpl
cmc
mov
test
mov
sahf
inc
push
xchg
fwait
int3
nop
jecxz
(bad)
cwde
jno
es
mov
push
mov
je
jae
push
and
test
(bad)
ja
dec
pop
jae
inc
pop
pop
sub
retf
mov
sti
push
push
add
mov
popa
cmps
jne
frstor
xor
clc
daa
push
xchg
hlt
mov
jbe
inc
inc
dec
(bad)
or
aad
mov
adc
lods
pop
mov
dec
or
shl
(bad)
lea
jne
push
or
leave
pop
daa
outs
loop
jae
push
fwait
or
push
cli
repnz
push
xor
aas
dec
sub
jne
fild
lods
or
and
dec
mov
sub
push
xor
add
movs
jnp
xchg
add
les
and
add
sti
fisub
and
adc
inc
sbb
stos
iret
xchg
mov
mov
inc
es
mov
cmp
mov
and
sub
cmp
hlt
jae
imul
xchg
and
imul
mov
test
push
dec
retf
pop
in
imul
xor
dec
test
mov
inc
enter
mov
mov
test
test
inc
mov
pop
dec
inc
dec
dec
xor
or
stos
jmp
dec
cdq
mov
or
jmp
daa
adc
int
add
lods
(bad)
pop
inc
push
nop
fnstsw
stos
mov
movs
jl
(bad)
sbb
inc
push
jmp
aam
xor
and
mov
addr16
jne
mov
push
jb
jae
pop
aam
xchg
(bad)
fwait
cmps
push
ja
in
and
push
xchg
test
mov
test
xlat
lea
and
mov
fstp
add
cmp
repnz
aam
xchg
dec
add
idiv
and
push
lea
sbb
(bad)
fcomip
sbb
outs
sbb
xchg
ins
out
ret
popa
fs
add
sbb
cli
dec
lods
inc
mov
inc
call
inc
retf
stc
mov
push
movs
adc
into
dec
jne
xchg
xchg
xchg
fcmovb
cmp
sti
outs
mov
inc
jg
inc
bnd
inc
jecxz
fcmovnbe
test
jnp
mov
mov
dec
imul
push
pop
loopne
fld
retf
ficomp
jne
movs
adc
int
xlat
mov
mov
(bad)
out
cs
push
adc
push
add
popa
ds
loopne
sub
and
gs
(bad)
es
clc
xchg
out
inc
push
addr16
aad
sti
retf
xlat
sbb
sbb
lods
add
loop
dec
mov
fxtract
jo
inc
int3
jge
dec
mov
imul
push
sub
out
pop
jno
sbb
mov
shr
fs
test
bound
mov
pop
mov
sbb
dec
addr16
cmp
cmp
addr16
xor
scas
aam
cmc
or
dec
das
sub
xchg
push
setae
jbe
and
push
add
pop
jle
fsubr
add
ret
cmp
gs
sbb
jb
xor
sar
sub
sub
xor
ret
ret
push
xchg
sbb
jno
inc
inc
dec
test
dec
jg
scas
sar
jp
(bad)
shl
jns
shl
xor
jno
cmps
int
xchg
cs
pop
jl
in
out
outs
add
in
mov
mov
iret
movs
es
pushf
and
in
test
popf
scas
jns
adc
mov
ret
inc
push
je
xchg
scas
das
dec
mov
jne
mov
mov
dec
mov
int3
dec
inc
in
push
pop
stos
jno
mov
gs
imul
xchg
shr
int3
in
popf
in
add
push
jno
and
movs
fwait
dec
and
stos
arpl
xchg
or
cmps
arpl
inc
jae
xor
lods
adc
xor
call
div
and
jae
cmp
scas
clc
push
ss
call
gs
push
and
or
xchg
or
and
xlat
mov
jae
push
mov
mov
xchg
daa
and
mov
add
stc
mov
cs
jbe
ss
add
push
xchg
push
bound
in
sub
sbb
mov
and
sbb
xchg
fs
xchg
xchg
cmp
or
test
push
xchg
(bad)
mov
leave
ss
mov
or
inc
or
pop
cmp
add
cdq
inc
nop
and
sbb
(bad)
jecxz
daa
jne
data16
mov
les
movs
loop
adc
adc
jnp
in
cmp
pop
(bad)
jge
sbb
test
ret
movs
data16
int
mov
dec
es
pop
int
call
sub
lock
mov
scas
sbb
ja
inc
push
and
into
inc
(bad)
sub
stos
or
push
dec
xchg
cmp
pop
lea
mov
pop
(bad)
test
imul
stc
dec
xor
loopne
mov
xchg
jb
adc
jle
and
out
clc
mov
jmp
in
mov
sbb
cdq
cmp
call
clc
js
inc
(bad)
call
ss
inc
dec
repz
(bad)
(bad)
pop
push
inc
inc
aad
dec
mov
out
fcom
or
ja
jo
mov
push
or
and
ja
xor
push
aas
sbb
xchg
out
out
jge
or
imul
mov
cmp
push
scas
loop
icebp
data16
stc
scas
pop
pop
adc
outs
or
add
lods
xor
movs
int
pop
mov
aam
jb
arpl
fbld
cld
stos
cdq
pop
dec
push
inc
and
ror
cmps
sbb
mov
aad
mov
stos
repnz
mov
or
mov
fistp
mov
sub
mov
loope
xchg
pop
sub
mov
add
ins
(bad)
push
pop
repnz
(bad)
pop
std
aad
add
out
inc
adc
xchg
mov
jge
imul
or
pop
dec
add
push
enter
add
mov
inc
outs
xchg
ds
push
jae
js
inc
retf
ret
daa
xor
out
and
jae
addr16
mov
push
pop
pusha
inc
repz
int3
push
call
call
shl
icebp
dec
cmps
test
cmps
and
mov
fwait
mov
ds
jmp
or
(bad)
repz
repnz
adc
xchg
out
push
out
sbb
jp
sbb
lahf
aam
scas
jmp
xchg
in
or
call
add
and
ins
adc
push
popf
je
push
fcmovnu
or
aam
xor
cwde
sub
aad
or
in
mov
sahf
cmp
call
imul
pop
inc
jle
stos
xor
pop
pushf
aad
addr16
scas
in
or
test
and
daa
imul
push
movs
pop
dec
test
push
push
mov
mov
mov
xchg
jmp
jmp
aad
cdq
js
dec
es
inc
mov
inc
add
out
sbb
xchg
add
scas
push
jp
xor
mov
xchg
inc
cmp
fiadd
sbb
or
jl
cdq
pop
jp
sub
daa
and
inc
or
scas
rol
adc
inc
or
push
in
clc
xchg
ror
mov
sub
xchg
sar
pushf
cmp
pusha
adc
mov
(bad)
sbb
add
xor
sub
xor
(bad)
cld
and
ret
push
mov
adc
mov
lods
or
mov
call
iret
push
call
fisttp
clc
out
jg
stc
out
jg
stc
jg
add
bsf
and
add
jb
add
add
dec
inc
scas
inc
pusha
or
add
add
add
(bad)
(bad)
inc
add
add
add
add
add
add
jns
je
ins
cs
jb
ja
outs
addr16
push
gs
imul
xor
xor
inc
jne
je
jb
cmp
jb
ins
sub
push
jne
ins
imul
imul
bound
xor
data16
xor
fs
add
adc
gs
cs
jb
ja
outs
addr16
imul
add
popa
je
pop
add
add
add
add
add
lsl
add
mov
mov
inc
or
add
or
add
add
add
add
or
add
add
pusha
outs
rol
add
add
inc
dec
inc
add
mov
or
popa
add
jo
pop
jae
add
ret
add
push
ret
add
outs
test
add
adc
inc
inc
push
pop
inc
in
rol
loopne
arpl
out
dec
xlat
lock
addr16
fdiv
dec
xor
frstor
es
iret
test
call
xchg
add
sub
into
aam
out
out
sbb
jns
int3
fwait
aad
cdq
loopne
fdiv
fld
mov
push
mov
pop
push
js
(bad)
mov
jo
sub
call
jg
sub
mov
pop
jbe
adc
je
inc
jne
and
in
ss
cli
lock
jnp
sub
inc
pop
ds
shl
mov
repz
add
aam
mov
xor
imul
(bad)
std
(bad)
lds
push
(bad)
fs
add
repnz
mov
mov
popa
sbb
daa
scas
mov
retf
aam
out
jecxz
sub
xor
lds
xchg
xlat
lds
dec
or
pop
inc
xchg
sbb
fbstp
mov
inc
dec
mov
data16
out
mov
push
cmp
mov
dec
loop
sbb
movs
loope
in
jp
(bad)
std
inc
mov
leave
mov
inc
jmp
pop
sbb
add
push
jno
jbe
inc
sub
out
cdq
into
dec
dec
adc
pop
adc
js
es
mov
ficomp
xor
popf
repnz
cwde
and
or
cmps
sbb
pop
rol
div
and
ss
in
and
xor
sti
xchg
pop
ror
dec
sbb
imul
stos
mov
out
pushf
mov
sub
aam
inc
inc
retf
add
fcmovu
sti
jns
pop
push
push
arpl
pushf
int
push
test
lds
lock
xchg
add
and
jo
push
lock
sub
mov
mov
mov
mul
into
(bad)
lds
or
mov
fild
sub
and
sbb
jno
or
es
push
popf
stos
adc
dec
push
fs
adc
mov
push
sbb
and
pop
and
push
mov
outs
cs
ror
push
push
push
das
or
dec
jno
lods
mov
pushf
pop
(bad)
or
(bad)
ds
aaa
fsub
aad
icebp
xor
fsubr
adc
sbb
mov
sub
dec
repnz
xor
movs
pop
mov
lods
call
sbb
xchg
jge
and
pop
movs
in
daa
mov
pop
mov
xchg
imul
cmp
cwde
(bad)
jg
xor
loop
dec
push
mov
push
std
dec
inc
cwde
cmp
pop
stos
cmps
leave
loop
cmp
xchg
push
mov
loope
mov
xchg
mov
cmc
out
mov
add
xchg
xlat
cwde
mov
adc
sub
pushf
xchg
adc
shl
imul
loopne
ds
mov
std
adc
fsubr
add
pop
pop
(bad)
(bad)
xor
inc
push
sbb
jecxz
fcmovnu
mov
adc
dec
stos
shl
jecxz
and
daa
jno
dec
dec
int
stos
jmp
inc
lahf
mov
nop
leave
xor
scas
sbb
sbb
xlat
cmp
iret
cmps
test
int3
retf
ds
movs
in
sub
rcr
mov
mov
or
loopne
into
hlt
sbb
mov
repnz
popf
(bad)
leavew
out
pop
cdq
popa
inc
popa
xor
inc
xchg
nop
mov
idiv
test
cmc
cli
jge
and
fdivr
xchg
push
scas
adc
push
pusha
fsubp
xor
sbb
out
mov
sahf
sbb
leave
sbb
in
lds
sub
jmp
xchg
mov
out
jmp
pop
lahf
pusha
inc
movs
jle
sub
jnp
add
add
sbb
inc
or
ds
stos
jno
pop
push
cli
(bad)
scas
outs
ret
outs
add
sub
inc
mov
sub
push
xor
mov
outs
xlat
push
outs
outs
dec
in
jecxz
xor
cmp
dec
lods
or
pop
scas
inc
push
js
sub
sub
xlat
leavew
(bad)
adc
mov
push
xchg
jg
jns
cmp
sbb
out
popa
add
sbb
xor
sbb
(bad)
ret
out
push
push
fadd
fcom
(bad)
inc
arpl
in
sbb
stos
jnp
ja
add
fisubr
dec
xchg
arpl
mov
clc
and
in
push
mov
sub
or
push
les
adc
add
pusha
cmps
add
cmp
sub
stos
shl
out
mov
aam
xchg
nop
int3
mov
hlt
pusha
pop
sub
sbb
iret
mov
pop
add
int
dec
and
outs
xchg
(bad)
pusha
cmps
sbb
and
and
ss
mov
and
outs
xchg
rol
mov
cmps
stc
mov
(bad)
pop
sbb
cs
jmp
out
icebp
shr
xchg
ds
adc
mov
jle
add
(bad)
mov
out
addr16
mov
jnp
add
int
pushf
lea
fsub
mov
popa
mov
inc
xchg
dec
mov
pusha
sbb
pcmpeqb
mov
lock
jg
push
fisubr
ja
bound
adc
imul
push
js
dec
mov
stos
call
jl
mov
sbb
popf
cmp
mov
mov
dec
shl
in
imul
fld
dec
sbb
lods
lea
mov
bound
and
leave
mov
mov
mov
fcmovu
pop
(bad)
daa
lods
mov
leave
lods
xchg
xor
jns
pop
ret
mov
add
xor
ss
ror
ret
push
imul
xchg
and
into
mov
mov
out
sbb
mov
mov
inc
in
adc
sbb
cs
repnz
loopne
mov
sub
test
or
lahf
jnp
adc
in
jg
test
cmp
stos
xor
(bad)
or
mov
clc
imul
mov
fsub
jne
outs
fdiv
dec
gs
or
sbb
xchg
popw
or
fiadd
in
mov
jecxz
or
cli
inc
fs
sub
sbb
add
test
rcl
jbe
(bad)
or
jge
mov
mov
pop
xchg
into
ret
pop
add
movs
mov
hlt
mov
(bad)
mov
and
scas
gs
xchg
popa
xchg
jae
xor
mov
push
jecxz
add
cmp
mov
cmp
sub
mov
jnp
sub
test
mov
(bad)
xor
call
in
inc
fmul
xchg
jmp
mov
mov
sub
mov
and
out
hlt
je
cs
mov
xor
repz
mov
mov
jne
mov
bound
into
dec
mov
popf
imul
cwde
loope
sub
loop
lea
jmp
or
cmp
sub
jmp
pop
rcr
xchg
sar
add
fstp
int
iret
outs
repz
mov
fwait
or
out
push
mov
in
add
pop
mov
sub
bound
xor
call
daa
movs
or
adc
sub
inc
int3
pushf
dec
enter
int
aaa
jb
mov
jp
scas
(bad)
lds
push
nop
inc
sbb
jmp
pop
dec
call
js
jmp
out
mov
xchg
and
jle
lahf
xor
stos
xor
jb
icebp
loop
ret
sbb
lahf
push
sub
jne
or
nop
and
shr
mov
pop
add
int
pop
add
icebp
mov
loope
or
mov
and
dec
rcr
sahf
jecxz
sub
xchg
(bad)
mov
les
xchg
or
out
gs
mov
push
cmp
(bad)
movsx
dec
pop
call
mov
(bad)
daa
iret
sahf
xor
push
mov
lock
cmc
sbb
pop
(bad)
and
pop
inc
fisttp
(bad)
cmp
loop
cmp
xor
or
popf
rol
pop
pop
mov
sti
repz
call
out
push
dec
mov
add
popa
cmp
in
push
jge
pusha
or
movs
ins
add
in
popa
pop
das
mov
xchg
sub
hlt
dec
aad
(bad)
and
mov
inc
cmps
jno
sti
retf
mov
xor
enter
repnz
movs
popa
pop
leave
mov
xchg
and
xchg
stos
lock
cmp
mov
jecxz
retf
rcl
test
lock
hlt
into
call
pop
fnstsw
in
test
cmp
sub
(bad)
in
les
mov
cld
dec
sbb
pop
jo
test
rol
cmp
mov
jne
or
xchg
mov
mov
xor
mov
arpl
sti
mov
dec
push
out
mov
aas
stc
cld
pop
mov
dec
lods
xchg
int3
mov
inc
lds
push
cmps
test
inc
fcom
cmp
or
push
sub
sub
jmp
rol
add
sbb
sar
not
xchg
pop
imul
lods
je
sub
dec
mov
dec
add
add
es
mov
mov
leave
ins
jno
fisttp
mov
mov
jecxz
mov
fcomp
or
xchg
fwait
push
clc
lds
fistp
std
adc
push
mov
mov
lods
leave
imul
sahf
xor
mov
rcr
in
scas
pop
xchg
sub
pop
jae
sbb
dec
aam
mov
test
ins
retf
fwait
jno
cld
inc
sbb
add
cwde
sbb
cmp
mov
mov
movs
and
xor
xchg
outs
loopne
fimul
sub
in
nop
pop
cld
cmp
pop
xchg
xor
or
fst
aaa
and
fldenv
inc
mov
push
mov
xchg
or
test
pop
cli
icebp
xchg
mov
sub
aaa
cmps
dec
out
and
jecxz
push
xchg
sub
sub
sbb
shl
mov
pop
sbb
pop
or
ds
loop
pop
shl
jnp
inc
jb
enter
ficomp
imul
daa
inc
leave
imul
cwde
sbb
loope
ins
divps
xchg
pop
push
dec
adc
std
jge
mov
pop
pop
jle
or
mov
push
retf
in
and
arpl
sbb
dec
fcmovnbe
les
cmc
mov
jmp
(bad)
mov
dec
outs
dec
xor
jmp
test
fdiv
lea
jl
xchg
push
add
int
lea
pushf
pop
inc
push
data16
mov
push
xchg
ror
int3
sub
js
jmp
sub
sbb
arpl
sbb
test
jmp
pop
and
aaa
fnstcw
(bad)
lds
xor
xchg
daa
mov
icebp
or
mov
imul
stos
add
mov
(bad)
xor
enter
fs
mov
add
(bad)
int3
jg
mov
jb
out
mov
or
mov
cmp
and
repnz
cmp
mov
fstp
sti
pop
dec
and
push
mov
mov
jnp
mov
push
pop
mov
loopne
(bad)
hlt
in
adc
out
jne
call
xchg
(bad)
sti
push
push
sub
cmc
pop
sub
clc
imul
sahf
mov
ja
mov
cmp
or
loopne
add
push
push
pop
sbb
das
sahf
scas
outs
add
sbb
dec
mov
lock
nop
xor
cld
sbb
xchg
je
xchg
sub
sbb
mov
std
lods
jns
pop
imul
arpl
icebp
sub
sub
push
xchg
sbb
daa
shr
jno
test
sub
push
inc
out
bt
mov
aaa
fidiv
jp
mov
cmp
mov
scas
cmc
jmp
scas
xchg
mov
fst
adc
and
mov
shl
iret
cmps
xchg
js
sub
fistp
retf
mov
xchg
xor
popa
mov
in
mov
jmp
push
inc
(bad)
cmovp
mov
adc
pop
mov
xchg
add
mul
sbb
out
mov
push
shr
cmp
pop
pop
dec
mov
mov
test
sbb
loop
(bad)
mov
ja
ss
imul
and
mov
shl
ins
xchg
sub
test
adc
adc
mov
jmp
cli
pop
repz
imul
test
mov
fsubr
xchg
jmp
lock
push
xchg
mov
ds
push
cmc
add
in
fisub
dec
cmc
outs
es
in
inc
mov
movs
push
adc
xchg
jb
jbe
or
es
mov
ins
pop
imul
ss
xlat
push
repz
scas
arpl
ins
ds
mov
ss
xchg
cmp
push
cwde
iret
push
sub
aaa
add
lods
mov
xchg
jg
movs
sti
mov
jb
fld
dec
ret
xor
xlat
mov
mov
(bad)
into
scas
daa
aad
jb
sbb
push
stos
xor
push
test
cmp
jnp
pushf
cmps
int
ins
push
xchg
jp
add
gs
les
pop
xlat
(bad)
out
test
or
push
js
pop
mov
pop
retf
push
sbb
pop
ins
xchg
or
mov
sub
mov
pop
dec
mov
mov
mov
pop
es
sub
jo
push
ja
xchg
mov
pusha
cmps
mov
(bad)
inc
pop
xchg
fistp
mov
das
add
or
mov
fidivr
cwde
dec
mov
jecxz
ret
ret
sub
frstor
sahf
lea
hlt
das
mov
xlat
cmp
sbb
nop
stos
retf
in
repnz
inc
lea
fwait
jmp
xchg
push
out
and
xlat
cmp
pop
leave
fs
add
(bad)
in
data16
mov
mov
and
pop
jae
jp
scas
lahf
dec
ss
push
pop
push
inc
jmp
pop
fs
ret
movlps
push
inc
mov
or
pop
sub
jp
add
xchg
retf
jge
fsubr
cmp
adc
sub
int3
cmp
cld
out
in
popa
seto
shr
and
xchg
push
xlat
in
push
(bad)
popf
mov
clc
and
jmp
mov
scas
ds
mov
nop
mov
call
add
inc
ror
pusha
loope
cmp
and
dec
dec
cmp
xor
inc
fsubr
repnz
sub
pop
clc
ins
inc
push
and
daa
icebp
ja
sar
push
sbb
jmp
sar
aas
sbb
(bad)
pop
iret
mov
imul
movs
dec
dec
ficom
call
and
push
jae
mov
cmc
js
outs
ins
adc
add
rcl
and
shl
out
push
lahf
xchg
mov
mov
test
cli
and
cmp
iret
std
rcr
pop
popa
icebp
add
in
dec
bound
dec
mov
pop
add
aas
cwde
xor
cdq
cld
inc
call
mov
ret
fnsetpm(287
inc
mov
fsubr
xchg
pop
ror
loopne
ret
dec
push
xor
inc
cmc
or
fnsave
cmc
adc
xchg
out
imul
jmp
int3
xchg
fadd
push
or
repz
xchg
jns
cmp
push
mov
ret
rol
mov
cld
adc
jg
or
fcom
int
jmp
and
adc
sti
ror
out
int
scas
mul
dec
pop
jmp
cmc
push
or
test
push
cmps
in
xchg
std
in
fs
xchg
fild
pop
das
jno
adc
sti
dec
dec
dec
loope
xchg
cmp
shr
pop
xchg
arpl
add
xchg
mov
test
add
cld
repz
aas
(bad)
cld
repz
aas
call
add
clc
mov
add
add
dec
inc
dec
inc
scas
inc
pusha
or
add
add
add
(bad)
(bad)
inc
add
add
add
add
add
add
jns
je
ins
cs
jb
ja
outs
addr16
push
gs
imul
xor
xor
inc
jne
je
jb
cmp
jb
ins
sub
push
jne
ins
imul
imul
bound
xor
data16
xor
fs
add
adc
gs
cs
jb
ja
outs
addr16
imul
add
popa
je
pop
add
add
add
add
add
lsl
add
rcl
add
mov
inc
or
add
or
add
add
add
add
or
add
add
pusha
outs
rol
add
add
inc
dec
inc
add
mov
or
popa
add
jo
pop
jae
add
ret
add
push
ret
add
outs
test
add
adc
inc
inc
push
pop
inc
in
rol
ror
sub
mov
dec
xchg
mov
nop
imul
dec
nop
inc
jb
movs
les
xor
sbb
pop
in
push
add
push
rol
inc
sub
ror
add
jg
sub
inc
push
add
sub
test
popa
mov
xor
and
or
jb
lock
out
ins
jp
test
cli
sub
std
add
fcomp
sub
call
pusha
xor
inc
push
dec
sub
fldcw
xor
sub
popf
les
out
xchg
in
movs
ror
dec
sbb
and
push
or
inc
dec
movs
dec
mov
(bad)
cmp
test
in
pusha
jl
mov
cld
call
hlt
stos
(bad)
ins
push
lock
iret
xor
lea
adc
and
sbb
outs
ror
pop
mov
xchg
(bad)
mov
in
push
and
xchg
dec
les
dec
xor
(bad)
adc
dec
test
inc
std
mov
stc
enter
mov
mov
dec
mov
mov
fsubr
dec
sahf
fs
ins
mov
mov
repz
icebp
les
mov
push
cmp
outs
or
es
sahf
pusha
dec
dec
imul
ret
push
and
scas
jno
pop
pop
(bad)
jmp
sub
xchg
test
cmp
xchg
iret
mov
sub
movs
mov
dec
aad
dec
rcl
inc
lahf
adc
pop
in
and
xor
ss
push
mov
or
mov
xchg
mov
xchg
cmp
enter
inc
pop
and
ins
cwde
enter
push
and
xchg
je
mov
int
mov
dec
jno
fisttp
fbld
neg
shl
lock
mov
je
fst
mov
mov
(bad)
imul
mov
cld
add
sub
inc
and
mov
and
int3
(bad)
das
and
mov
mov
mov
in
js
loope
push
dec
cmp
aaa
xlat
adc
pop
sbb
sub
or
lahf
inc
out
adc
fnsave
inc
loop
loop
jge
out
in
xchg
pushf
xor
mov
push
das
push
das
push
int
pusha
and
cmps
ins
dec
shufps
adc
(bad)
rol
lds
fist
and
dec
inc
push
inc
or
cli
adc
push
out
rcr
cmp
mov
in
mov
inc
in
xchg
fidivr
dec
or
and
xchg
out
aad
repz
addr16
shl
ins
in
in
jle
imul
addr16
dec
jle
arpl
cmp
or
movs
xchg
mov
mov
xchg
jb
xor
add
es
and
xchg
std
mov
jo
leave
or
or
aad
lods
push
shr
cs
test
mov
dec
inc
mov
mov
movs
dec
dec
inc
lock
push
xchg
into
sub
and
xor
jmp
lock
add
pop
in
iret
sub
add
mov
loope
cs
shl
push
gs
inc
sbb
jg
push
call
mov
aad
pop
fistp
or
in
add
aas
cmp
(bad)
cmp
cmp
and
cmp
(bad)
(bad)
retf
pop
gs
test
xchg
pop
push
mov
dec
jns
addr16
jno
lea
ja
adc
mov
daa
aad
pop
xchg
mov
not
retf
mov
cwde
cli
fcomp
push
xchg
out
push
mov
imul
adc
sbb
push
xor
xor
leave
addr16
aas
jg
aas
test
jno
pop
das
ins
ja
cmc
sub
in
add
mov
lods
mov
jmp
xchg
cvtpi2ps
xor
pushf
jge
lea
fnstsw
and
jae
es
sbb
adc
sub
mov
not
(bad)
ret
dec
(bad)
jecxz
shl
rcr
mov
movs
stos
js
ds
out
dec
shl
adc
call
out
inc
and
xchg
bound
dec
pusha
das
or
inc
adc
movs
push
sub
jmp
shl
sti
mov
rcr
push
mov
add
stc
cmps
stos
test
dec
sti
out
pop
ja
fisubr
mov
adc
clc
loope
cmp
xor
scas
jmp
(bad)
jmp
inc
cdq
inc
pop
or
imul
dec
push
cs
push
lods
sar
pushf
fsubr
iret
cdq
pop
push
add
jnp
add
daa
xchg
jecxz
xchg
or
jmp
jno
call
in
repz
inc
or
xchg
push
mov
mov
or
bound
and
mov
jg
add
inc
aad
inc
lea
add
push
push
push
jae
movs
mov
cli
pop
jl
jecxz
mov
movs
mov
pop
ins
jmp
mov
cmp
jg
jo
sbb
bound
jmp
ds
into
sbb
ja
out
xchg
scas
jp
cld
push
out
retf
leave
inc
(bad)
js
(bad)
cdq
outs
ret
add
push
dec
fstp
and
cdq
aas
xchg
mov
stc
sub
mov
jle
pop
jg
sub
daa
mov
ins
sbb
loop
dec
cwde
mov
mov
jo
push
dec
movs
inc
dec
pop
in
in
(bad)
pop
xchg
lods
in
add
push
jns
je
test
xchg
sbb
fidivr
jle
hlt
pop
jp
arpl
out
cmp
(bad)
mov
imul
test
adc
bnd
enter
or
loop
sub
loopne
mov
xlat
mov
dec
push
movs
pushf
mov
or
xchg
push
test
ins
stc
adc
jmp
loopne
call
cwde
jae
mov
movs
retf
clc
xor
popf
outs
jp
inc
in
jecxz
aas
(bad)
and
pushf
sbb
in
hlt
(bad)
popa
mov
je
std
das
imul
ret
add
sbb
retf
ret
push
xor
repnz
daa
lea
shl
pusha
inc
push
adc
test
and
jb
adc
arpl
or
pop
into
jno
imul
xor
add
nop
xor
adc
(bad)
or
and
(bad)
push
mov
inc
push
aaa
add
fisttp
add
out
jae
repnz
xchg
(bad)
hlt
(bad)
jne
or
test
scas
clc
xchg
inc
sbb
push
sbb
mov
pop
mov
cld
ret
inc
adc
shl
xchg
jo
lods
pop
aas
mov
aad
sbb
je
add
inc
into
sbb
sub
mov
std
fbstp
call
in
idiv
xchg
jae
add
sub
mov
mov
sub
push
add
or
leave
xor
test
std
lock
imul
sbb
mov
ins
pop
fcomp
and
mov
loope
jbe
sub
dec
arpl
and
inc
stos
pop
xchg
xor
cmp
mov
mov
add
adc
fninit
jb
push
mov
(bad)
push
data16
mov
(bad)
xor
lods
mov
nop
out
sub
adc
jmp
clc
add
xor
and
mov
imul
sar
int
or
fimul
ja
in
cmp
daa
mov
mov
jg
or
in
cmps
mov
and
aas
or
add
mov
jno
jns
add
push
jmp
lds
inc
adc
inc
mov
out
test
repz
lock
jp
push
mov
pop
enter
xor
mov
cli
out
call
loop
(bad)
out
push
mov
mov
fisub
cmp
out
cmp
ror
push
data16
pop
pop
test
lods
(bad)
(bad)
sar
mov
push
xchg
pop
fwait
mov
or
js
mov
xchg
ds
cmc
and
dec
movs
mov
imul
mov
outs
sub
clc
rol
cwde
into
test
sbb
and
add
test
sbb
and
mov
adc
int
sbb
fst
cmp
dec
mov
bound
sbb
repnz
out
pop
lahf
mov
sbb
lahf
mov
dec
bound
es
and
mov
jns
jno
outs
push
jne
mov
push
push
and
xor
xchg
clc
sub
or
retf
(bad)
ins
push
dec
mov
test
out
or
pop
(bad)
mov
lea
jbe
push
pop
je
shl
mov
(bad)
in
fmul
hlt
mov
stos
and
mov
dec
ds
jne
mov
or
fistp
xor
data16
jge
mov
adc
mov
popa
sub
call
xchg
dec
mov
adc
pop
(bad)
or
pop
push
inc
out
cmp
lock
xchg
sub
cmps
lock
int3
sti
lods
dec
movs
int3
movs
shr
es
xchg
or
sub
pop
mov
and
xchg
xchg
jle
mov
lods
or
fs
aad
das
xchg
push
mov
ja
jbe
pop
pop
xor
jb
jns
or
jno
dec
cwde
xor
fcomi
stc
sbb
mov
sub
gs
stos
sbb
and
mov
pusha
les
mov
je
repz
pop
es
add
push
fdiv
int
daa
inc
and
imul
call
sbb
loopne
or
cmovg
and
mov
xchg
sti
pop
mov
and
inc
sub
xor
pop
ja
retf
shr
js
in
jp
int
arpl
test
jbe
cmps
inc
popa
lock
outs
int3
cmp
pop
sbb
sbb
ret
fdivr
jge
sub
or
icebp
les
xchg
into
loopne
and
pop
xchg
adc
fstp
imul
in
aas
push
and
mov
fiadd
mov
mov
or
sar
adc
adc
xor
fs
pushf
jnp
sar
loope
mov
pop
jl
fistp
rol
gs
add
sti
call
mov
push
fisttp
mov
in
mov
lock
fcom
push
mov
mov
test
aas
xchg
dec
mov
and
iret
call
lods
xor
hlt
cwde
sahf
adc
test
and
sub
scas
push
pop
shr
ins
xchg
xchg
mov
scas
mov
xchg
and
jle
fcmovu
in
call
mov
push
mov
dec
xchg
out
sub
mov
push
push
inc
pop
and
pop
fistp
clc
dec
dec
mov
loope
dec
cmp
add
jns
pop
test
pop
pop
test
das
(bad)
(bad)
lock
daa
test
xchg
outs
scas
scas
jae
mov
jnp
jmp
push
ins
pop
shl
and
fist
jnp
aad
(bad)
jge
rcl
xor
out
xor
mov
adc
and
lahf
outs
out
pop
js
jl
xlat
jecxz
mov
inc
rcr
mov
(bad)
cs
es
pushf
pop
adc
icebp
sbb
add
sbb
pop
jg
scas
dec
pop
and
jl
dec
fidiv
jp
mov
ds
mov
pop
fiadd
or
(bad)
adc
inc
fs
push
cld
(bad)
push
sub
jo
ror
push
and
in
add
dec
mov
clc
dec
ss
icebp
movs
test
into
push
(bad)
out
dec
es
jge
xor
ret
dec
cmp
pushf
test
cmp
xor
and
xor
fwait
mov
(bad)
in
ins
or
jne
adc
dec
in
or
cmp
sti
cli
cmp
test
mov
xchg
dec
xchg
cmps
jmp
mov
mov
cmp
sub
push
xchg
push
shl
jge
lea
aaa
add
mov
dec
xor
invd
adc
push
cwde
out
ret
mov
pop
xor
mov
xchg
cmp
sub
push
xchg
or
sbb
lds
jnp
je
retf
inc
mov
push
loope
mov
inc
cmps
out
in
ror
pop
aad
jg
xlat
sbb
in
and
popf
arpl
test
jo
call
cmp
sbb
ja
fild
push
cld
xlat
push
rcl
or
imul
sub
jge
mov
in
retf
imul
adc
leave
sahf
adc
push
or
mov
cmp
sbb
lea
and
xchg
fld
dec
in
sbb
xor
jecxz
out
push
ds
mov
ja
lock
js
pop
fwait
jno
sahf
fcomp
mov
(bad)
retf
es
and
(bad)
iret
cs
test
xchg
sub
push
pop
mov
adc
mov
je
ret
mov
fistp
stc
lahf
adc
jmp
mov
mov
jecxz
loop
push
cli
(bad)
mov
int3
call
icebp
xor
jmp
sbb
cmps
or
rep
ds
shl
adc
(bad)
arpl
jp
xor
and
stos
xchg
call
ins
pop
sub
loopne
addr16
lods
stos
cmp
push
stos
cmp
popa
mov
mul
dec
lods
sub
jne
pmaxub
fwait
mov
mov
test
or
mov
out
jae
add
xchg
jl
pop
mov
div
rol
inc
inc
ficom
pop
sbb
cmp
or
xchg
adc
lods
fsubr
je
push
xchg
sub
fbstp
mov
vpackssdw
leave
pop
fnsave
mov
jmp
mov
sti
rcl
or
stc
outs
adc
mov
jmp
imul
dec
dec
iret
retf
mov
fwait
mov
test
and
jecxz
int3
imul
mov
mov
mov
dec
sub
std
jmp
dec
add
sahf
repnz
mov
lea
ja
add
pop
jecxz
imul
adc
xchg
mov
movs
mov
mov
jmp
add
mov
inc
cmp
ja
add
cld
and
xlat
std
push
pop
addr16
jle
in
test
add
or
stc
jle
mov
pop
dec
push
jmp
fsubr
aas
mov
jb
and
sti
out
das
or
cmps
xchg
or
ja
call
hlt
sub
enter
retf
(bad)
cld
or
add
push
out
in
test
sub
pop
popa
fcomp
int
imul
jg
mov
lock
pop
imul
out
gs
or
sub
or
sahf
bound
ds
cmc
jmp
mov
fistp
movs
mov
repnz
data16
loop
outs
iret
add
jp
jecxz
cmova
push
jbe
adc
aas
sub
rol
test
mov
clc
dec
dec
or
adc
ins
mov
cld
imul
scas
sbb
mov
cmp
loope
push
sub
cmp
outs
adc
fisttp
test
sbb
adc
jae
pop
xor
aas
push
in
cmp
(bad)
add
sbb
in
iret
in
sbb
stos
mov
fstp
xchg
mov
xor
mov
outs
sub
push
sbb
mul
mov
retf
jno
test
repz
xchg
gs
or
xchg
dec
and
in
lahf
push
popa
push
iret
out
lds
outs
addr16
pop
shl
dec
stos
or
(bad)
dec
push
out
pop
je
inc
push
mov
jo
out
dec
add
call
sub
int3
adc
jp
daa
mov
sar
cld
repz
aas
(bad)
cld
repz
push
jp
dec
das
mov
add
dec
inc
dec
inc
scas
inc
pusha
or
add
add
add
(bad)
(bad)
inc
add
add
add
add
add
add
jns
je
ins
cs
jb
ja
outs
addr16
push
gs
imul
xor
xor
inc
jne
je
jb
cmp
jb
ins
sub
push
jne
ins
imul
imul
bound
xor
data16
xor
fs
add
adc
gs
cs
jb
ja
outs
addr16
imul
add
popa
je
pop
add
add
add
add
add
lsl
add
ret
add
mov
inc
or
add
or
add
add
add
add
or
add
add
pusha
outs
rol
add
add
inc
dec
inc
add
mov
or
popa
add
jo
pop
jae
add
ret
add
push
ret
add
outs
test
add
adc
inc
push
pop
inc
in
xlat
add
add
out
jmp
fucomp
je
(bad)
cmp
jmp
cmps
mov
sahf
sbb
(bad)
je
cmps
fwait
mov
jg
(bad)
mov
mov
mov
add
jmp
add
mov
mov
pop
sbb
(bad)
cmp
cmp
add
adc
ror
aaa
push
xor
(bad)
jae
ins
mov
ss
mov
add
jb
dec
je
push
cmp
push
cmp
mov
mov
leave
loopne
movs
fisub
cmps
lock
xchg
dec
imul
inc
mov
movs
aad
mov
outs
xor
and
test
nop
push
ja
lods
aam
fistp
imul
xor
test
nop
cld
xor
scas
xor
sbb
jg
pop
lahf
ficomp
stos
and
cmc
push
mov
dec
xchg
mov
jne
jne
xchg
(bad)
call
shr
dec
cmp
push
jo
sti
cmc
mov
push
clc
pop
test
gs
pop
movs
and
rcl
push
jo
(bad)
hlt
in
outs
pop
pop
mov
push
cdq
fisub
call
xor
sbb
retf
jne
js
cmp
jp
and
cmp
inc
rcr
pop
js
add
cmp
adc
xchg
ds
sbb
dec
sub
test
sti
fimul
imul
cdq
out
mov
int3
pop
mov
sbb
into
inc
push
xchg
loopne
push
into
popf
inc
sub
cdq
jp
popa
scas
retf
push
sub
jae
sub
or
retf
jae
push
inc
push
mov
pop
mov
mov
cmps
inc
sub
addr16
rcl
scas
inc
mov
fldenv
add
pusha
mov
fs
jnp
lock
fwait
nop
out
add
out
aas
setp
(bad)
jle
mov
inc
jmp
push
dec
in
fstp
pop
sub
xchg
rcl
and
sbb
(bad)
push
or
push
arpl
(bad)
cli
test
pop
sub
mov
mov
cmc
sbb
mov
jge
dec
jb
jns
cwde
sbb
pop
adc
sub
mov
mov
mov
adc
and
dec
sti
dec
clc
push
call
sub
add
jmp
fmul
ror
in
pop
sbb
cmps
es
adc
enter
adc
out
xor
(bad)
cmps
jg
int
fdiv
inc
retf
xchg
cs
(bad)
imul
retf
in
xor
or
sub
shr
fmul
mov
xadd
sahf
shl
inc
sbb
jle
mov
in
mov
cmp
shr
xor
movs
cmc
call
idiv
sbb
popa
hlt
inc
pmaxub
loope
sti
lods
dec
repz
cmp
and
das
adc
ins
xchg
(bad)
loop
ins
mul
jp
jbe
std
mov
test
mov
sub
sub
or
mov
sub
pop
jmp
pop
push
lock
retf
adc
or
repnz
mov
stos
jb
fisttp
xchg
jb
fwait
push
sti
mov
sub
jmp
scas
push
mov
mov
aaa
or
add
jl
test
push
aas
add
xor
xchg
mov
inc
or
in
xchg
adc
xchg
ja
push
jae
xchg
pop
adc
jns
mov
add
jne
ret
or
push
xlat
mov
gs
adc
cmp
es
sbb
rcl
ret
dec
lods
(bad)
in
out
jns
sbb
push
mov
add
mov
sbb
pop
stos
shr
mov
push
and
xor
or
loop
cld
mov
push
or
xchg
xchg
dec
xchg
cmp
call
add
(bad)
xor
cmp
repnz
add
mov
in
push
or
lods
pop
outs
lahf
and
es
jl
dec
xor
jle
push
cmp
sbb
xor
inc
jno
inc
out
push
inc
or
shl
xchg
mov
psraw
xchg
fbstp
adc
xor
and
mov
ins
jge
pop
mov
cmp
rcr
daa
xor
xchg
repnz
push
cli
rol
jne
ins
xor
sbb
scas
(bad)
push
(bad)
nop
retf
pop
js
mov
push
sbb
pusha
cmps
xchg
or
pop
retf
mov
(bad)
fld
mov
imul
(bad)
sti
ror
adc
and
inc
call
mov
pop
repnz
mov
imul
push
ret
jo
sub
jmp
push
add
lods
in
cmp
mov
imul
pop
ret
and
test
mov
loopne
push
and
lods
movs
mov
jnp
pop
outs
inc
or
mov
rcr
fcomp
lahf
push
(bad)
in
and
mov
fwait
repnz
int3
xor
std
jo
out
jbe
push
mov
data16
stos
(bad)
push
jle
fcos
pop
jg
pop
push
iret
data16
pop
push
sbb
add
add
pop
push
jge
add
aas
jmp
retf
mov
add
clc
or
repnz
addr16
ret
mov
rcr
inc
push
and
dec
shl
cmp
or
xchg
js
add
xchg
jecxz
inc
ja
adc
aaa
outs
dec
lods
cli
cmp
inc
jne
mov
pop
jne
xlat
cmp
aaa
sbb
and
aad
mov
lahf
and
jae
popf
inc
adc
dec
mov
push
icebp
fdivp
dec
or
inc
jnp
push
scas
sub
pop
test
add
adc
bound
fnsave
push
add
outs
pushf
cmps
pop
dec
xor
sbb
and
rcr
call
fs
int
dec
dec
jle
clc
test
stos
push
fmul
xchg
out
pop
dec
popf
aaa
mov
sub
popf
dec
je
lock
mov
pop
fadd
fsub
push
iret
bound
stc
xor
mov
xor
imul
outs
xchg
and
and
retf
mov
stos
or
ds
xchg
aaa
scas
cmp
(bad)
out
scas
outs
daa
jnp
repnz
jp
mov
jle
out
jbe
dec
cs
cli
adc
in
ds
xor
pop
div
pop
xchg
xchg
cmp
stc
mov
push
int3
popa
jl
stos
data16
pop
cmc
mov
fprem
jo
jmp
sbb
mov
iret
rol
adc
ins
ins
rol
mov
mov
and
xchg
ja
(bad)
icebp
dec
push
lock
call
mov
bound
lds
push
or
or
movs
dec
aas
mov
inc
cmp
jl
adc
mov
leave
cmp
push
iret
jnp
xor
cmp
fdivr
lahf
mov
in
jle
inc
jp
gs
cmp
mov
cwde
enter
pop
sahf
mov
das
pop
hlt
test
push
xchg
call
jmp
adc
ret
push
mov
sti
(bad)
jmp
iret
lds
push
stos
(bad)
scas
ss
mov
push
icebp
add
add
repz
inc
psubusb
jae
scas
out
lahf
jb
dec
lea
bound
mov
cmc
out
sub
pushf
loope
sub
cwde
cmp
fisttp
dec
mov
or
scas
mov
mov
dec
jo
adc
dec
in
je
inc
xchg
mov
call
test
cmp
lahf
cmp
arpl
test
mov
push
add
jecxz
and
adc
cmps
lahf
fidiv
jge
and
jle
call
add
arpl
mov
adc
(bad)
in
movs
mov
movs
nop
sub
into
cmp
stos
stos
out
push
add
outs
retf
xchg
aad
push
push
inc
loope
retf
fcomp
or
call
mov
dec
mov
sbb
jae
(bad)
ja
and
cwde
outs
pop
mov
cmovp
and
mov
pop
push
cmp
(bad)
sub
xor
adc
jg
add
mov
mov
push
sbb
std
fstp
add
(bad)
adc
xchg
add
sbb
data16
sub
cwde
mov
movs
fnstenv
adc
stc
sbb
pop
cld
aam
mov
es
xor
xchg
lods
ins
jg
add
fistp
dec
cmp
and
add
mov
(bad)
es
dec
xchg
mov
fisttp
lods
cli
xchg
test
or
push
out
mov
sub
xor
stos
cmps
adc
dec
ror
cmps
cmp
mov
fadd
fs
test
mov
addr16
out
mov
aaa
mov
push
retf
jmp
and
fiadd
fstp
adc
fmul
adc
out
lods
das
loop
mul
pop
ret
cmps
ud0
sbb
scas
xchg
adc
out
push
or
test
sbb
jge
mov
or
loope
mov
or
push
mov
xor
daa
push
jg
jae
xor
call
clc
adc
inc
adc
popf
xchg
ret
inc
scas
mov
movs
aad
sbb
(bad)
std
lea
inc
mov
push
addr16
push
cmp
jne
(bad)
and
pop
inc
pop
jecxz
cmp
popa
test
in
jge
sub
ficom
mov
stc
sub
std
or
retf
mov
lea
inc
fmul
xlat
sbb
in
cmp
fidivr
test
je
ins
xor
jge
adc
hlt
adc
or
int
(bad)
ror
adc
fistp
adc
aam
movs
cwde
and
add
loopne
push
mov
ffree
and
xor
stos
jb
cmps
jno
and
push
imul
(bad)
inc
push
fcom
mov
div
or
sbb
stos
cwde
pop
inc
pop
jbe
dec
add
cld
icebp
add
enter
call
ins
mov
mov
movs
inc
sub
dec
mov
xlat
cld
or
cli
in
adc
mov
mov
js
inc
mov
sub
fisttp
sub
ret
sub
loopne
cdq
js
and
add
sub
fisub
ja
cmps
daa
cdq
jmp
loope
jmp
fcomp
dec
(bad)
ss
iret
push
xchg
cmp
adc
and
sub
pop
jecxz
scas
mov
inc
ins
sub
outs
lods
pop
cmp
lock
iret
adc
push
daa
sub
cld
sub
or
shl
repnz
jmp
inc
int
push
mov
or
mov
mov
dec
daa
rcl
stos
imul
je
adc
movs
in
mov
lahf
loopne
call
fld
out
inc
push
push
mov
xchg
push
ins
nop
lods
shl
lea
xchg
in
mov
out
mov
sti
mov
fnsave
clc
fnstenv
mov
jmp
xchg
dec
jecxz
out
stc
mov
sar
and
into
test
push
iret
xor
fidiv
or
dec
ss
outs
xchg
mov
data16
add
mov
loope
fld
mov
jmp
cmp
push
xchg
sbb
push
push
lods
dec
test
and
(bad)
cmp
xor
xlat
mov
lahf
add
fcmovu
push
cdq
call
sbb
pop
push
je
repz
add
mov
inc
jno
xlat
add
mov
arpl
pop
xchg
retf
enter
js
pop
inc
adc
and
lahf
sub
or
xor
lods
call
inc
scas
pop
cli
jecxz
sub
push
xor
mov
repnz
xchg
mov
(bad)
lods
mov
xchg
xlat
lds
adc
inc
jp
dec
fisttp
shl
mov
lea
push
sti
ret
into
aam
mov
pop
pusha
mov
pop
mov
call
cmp
cmp
dec
jg
arpl
cmc
out
mov
cld
dec
push
inc
add
(bad)
pop
push
adc
push
pop
in
mov
inc
fwait
inc
add
cmp
nop
jl
cmps
pop
xor
call
cmp
icebp
mov
adc
xchg
pop
xchg
stc
imul
mov
ja
mov
jecxz
mov
inc
push
fiadd
imul
sahf
ret
lods
xor
outs
pop
pop
xchg
mov
xchg
mov
ror
cli
outs
fnstenvw
pop
or
jmp
std
(bad)
xchg
mov
(bad)
sti
mov
xchg
gs
addr16
loope
call
push
or
push
sub
jle
mov
xor
popa
xchg
mov
push
popf
shl
mul
cmp
mov
adc
ins
ror
mov
pusha
sub
mov
cmp
and
fsub
mov
jno
pop
rol
fdiv
cmps
pop
rcl
push
adc
sbb
pop
call
adc
and
ret
xor
in
sbb
push
add
push
clc
mov
mov
pop
or
icebp
pop
sbb
bound
jno
pop
xor
xchg
fdiv
(bad)
xchg
adc
mov
sbb
fwait
int3
ins
pop
retf
adc
enter
xlat
mov
xchg
pop
lods
lods
mov
pop
mov
cmp
std
sbb
fidiv
stc
adc
sub
adc
cmp
dec
nop
dec
shl
stos
inc
rcl
cmp
add
ffreep
jmp
test
xor
mov
mov
sub
pop
sti
jns
aam
mov
push
(bad)
pop
test
cmps
mov
(bad)
test
sbb
fiadd
(bad)
outs
shl
pop
cdq
inc
mov
sahf
out
test
xor
outs
push
mov
xor
fild
push
aas
clc
mov
lahf
jl
cld
bound
dec
sub
xchg
sbb
out
or
cmp
scas
mov
hlt
jne
mov
fisub
sbb
cmp
test
(bad)
loope
clc
mov
mov
mov
mov
push
xchg
sti
mov
mov
in
cmps
pop
(bad)
hlt
inc
and
adc
sbb
popa
cmp
in
mov
sbb
add
movs
(bad)
jecxz
data16
inc
popa
or
in
jle
fld
cli
gs
mov
les
ja
xor
sub
mov
add
fcmove
(bad)
sub
mul
jecxz
shr
cmps
jge
cs
mov
retf
daa
or
les
jmp
xchg
cwde
xor
adc
aaa
pop
and
gs
sbb
pushf
cmp
imul
clc
fs
jmp
sbb
xor
inc
xchg
(bad)
aam
inc
dec
lods
add
in
inc
loope
mov
int
test
ins
xchg
jb
popa
retf
stos
out
mov
mov
sub
outs
into
test
cmp
fs
adc
xchg
ds
jno
mov
ins
push
inc
(bad)
out
mov
pop
adc
pop
add
inc
or
sub
mov
add
mov
dec
ins
aad
push
call
popa
mov
sub
and
pop
adc
imul
rcl
(bad)
out
dec
punpcklbw
test
cld
movs
jbe
mov
inc
mov
dec
cmp
adc
mov
dec
xchg
sub
fldenv
jne
clc
mov
mov
fsub
out
add
jl
rcr
mov
jne
sub
enter
in
sub
inc
repz
(bad)
pop
or
push
int3
mov
or
dec
mov
je
inc
mov
xchg
inc
je
push
mov
jns
mov
(bad)
xor
test
cdq
inc
pop
(bad)
push
cwde
mov
sbb
add
out
sbb
lahf
aaa
mov
out
ds
cmps
xchg
lea
xchg
xlat
or
outs
mov
and
cmp
jb
jae
dec
rcr
xchg
xchg
pop
pop
scas
cdq
call
inc
mov
retf
dec
pop
in
and
sbb
cmp
xchg
das
adc
gs
dec
fsubr
push
shr
pop
sub
shl
xchg
jg
inc
mov
mov
pop
lods
ss
add
jle
dec
sbb
cwde
(bad)
rol
repz
lahf
jg
stc
out
jg
stc
jg
add
pop
es
adc
add
add
dec
inc
scas
inc
pusha
or
add
add
add
(bad)
(bad)
inc
add
add
add
add
add
add
jns
je
ins
cs
jb
ja
outs
addr16
push
gs
imul
xor
xor
inc
jne
je
jb
cmp
jb
ins
sub
push
jne
ins
imul
imul
bound
xor
data16
xor
fs
add
adc
gs
cs
jb
ja
outs
addr16
imul
add
popa
je
pop
add
add
add
add
add
lsl
add
les
add
add
or
or
add
or
add
add
add
add
or
add
add
pusha
outs
rol
add
add
inc
dec
inc
add
mov
or
popa
add
jo
pop
jae
add
ret
add
push
ret
add
outs
test
add
adc
inc
inc
push
pop
inc
in
aam
and
pop
add
outs
imul
jo
fidivr
iret
retf
fiadd
push
loop
fldenv
jnp
vmovaps
fwait
aam
jnp
(bad)
inc
pop
(bad)
xchg
jne
cmp
dec
lahf
pop
icebp
add
lock
sbb
(bad)
push
aam
inc
mov
bswap
or
scas
cwde
imul
test
push
lods
movs
push
sbb
mov
(bad)
cmp
mov
leave
xchg
(bad)
mov
outs
out
imul
dec
lods
mov
and
inc
xchg
jp
add
sub
push
push
sub
push
cld
loop
popf
lods
xchg
mov
sbb
ficom
iret
mov
jge
stos
xlat
jo
into
fisub
out
add
jmp
inc
inc
js
adc
sub
adc
stos
sub
mov
sbb
mov
mov
imul
repnz
out
addr16
dec
pop
pop
in
repz
jmp
sub
lods
shr
mov
inc
jbe
cs
and
cmp
mov
xchg
js
int
mov
pop
mov
mov
inc
or
movs
das
inc
pop
sub
pop
sbb
hlt
outs
imul
sub
jge
xchg
cdq
cmc
(bad)
cmp
add
(bad)
mov
daa
jnp
adc
test
mov
inc
cmp
out
mov
push
pop
add
mov
sub
shl
icebp
push
cld
mov
push
sahf
sub
inc
xor
add
lds
add
pop
jns
call
cmp
and
and
mov
add
jg
aad
xchg
cld
pop
js
pusha
lahf
fstp
les
mov
cmps
cmps
jecxz
ja
adc
inc
cs
add
ret
fisub
mov
mov
mov
sti
inc
add
jl
das
int
cmps
fs
mov
push
hlt
rol
mov
out
jle
aas
std
cmp
pop
test
jnp
iret
daa
in
jecxz
aam
or
in
inc
adc
gs
std
mov
dec
sbb
push
pop
inc
push
push
mov
pop
addr16
daa
jno
and
mov
jbe
mul
aad
inc
in
sub
je
sbb
cli
pop
xchg
fwait
imul
popf
pushf
fwait
inc
(bad)
out
fcomp
push
xchg
(bad)
daa
test
mov
mov
mov
iret
adc
cmps
cdq
mov
mov
cld
xchg
popf
xchg
push
fild
ds
inc
imul
ins
pop
ins
lods
xor
in
sub
xchg
add
or
enter
jne
repz
push
pop
xchg
xchg
data16
pop
daa
xor
and
retf
mov
cwde
dec
enter
push
data16
pop
sbb
test
not
xlat
cmp
pop
jge
ficom
xor
shl
inc
aam
cmp
xadd
push
ins
jns
out
xchg
add
divps
mov
fwait
cs
mov
mov
imul
pop
sbb
stc
pop
cmc
das
repnz
call
loop
in
add
mov
call
fdiv
jae
leave
call
push
push
pop
imul
rcr
sbb
std
pop
rol
cli
je
enter
aaa
push
in
(bad)
mov
cld
mov
retf
xchg
and
aad
adc
inc
in
imul
adc
mov
pop
cmps
in
ds
out
stos
lahf
and
std
out
fisub
mov
das
jae
or
jle
loopne
adc
mov
scas
cmc
icebp
pop
neg
enter
cmp
sub
dec
aaa
mov
cmc
cmps
les
xchg
push
outs
div
and
push
mov
je
xor
add
call
gs
stc
test
cld
ficom
cmp
push
stos
pop
adc
scas
mov
scas
pop
dec
dec
sti
test
jl
cdq
repz
out
dec
pop
push
pop
sti
fisubr
dec
jns
pusha
mov
test
push
and
jmp
fimul
cdq
or
(bad)
pop
mul
inc
mov
mov
scas
and
mov
loopne
test
movs
mov
add
jle
xchg
adc
outs
mov
push
xchg
xchg
idiv
add
gs
xchg
inc
xchg
cmp
pushf
adc
mov
nop
push
adc
adc
mov
cli
lods
pop
imul
cs
push
sub
jno
mov
(bad)
addr16
mov
inc
(bad)
push
xor
(bad)
push
xor
mov
daa
push
dec
fimul
jae
push
push
sub
adc
sub
outs
cwde
shl
push
dec
cmp
jne
cmp
sbb
mov
mov
or
test
sar
ss
(bad)
cmc
rcl
sbb
jle
sbb
pop
pcmpeqw
mov
mov
inc
ins
adc
jne
or
mov
test
aaa
or
jmp
scas
mov
cmp
loopne
push
imul
jnp
scas
inc
mov
cs
and
and
ja
je
(bad)
adc
iret
cmp
dec
scas
stc
sbb
mov
lods
mov
sbb
outs
and
fwait
jge
rcl
xchg
popf
int3
push
or
jmp
shr
sub
xor
sbb
(bad)
out
shl
loopne
xor
pop
mov
scas
xchg
cdq
movs
subps
les
and
leave
and
ins
sbb
inc
xchg
test
cmp
push
and
sub
fdivr
pushf
inc
xor
xor
sti
jle
enter
or
push
mov
and
(bad)
ss
hlt
mov
inc
(bad)
mov
jb
fwait
loopne
xlat
pusha
pop
mov
mov
adc
cmp
(bad)
fiadd
or
loop
cld
sbb
(bad)
out
(bad)
mov
rol
jns
loope
mov
nop
jmp
xor
jl
push
mov
(bad)
pop
jns
xchg
pop
jge
inc
stos
aas
fldenv
cmp
push
mov
gs
pushf
test
popa
xlat
loope
mov
push
cmc
lahf
shr
je
mov
pop
pop
out
es
mov
sub
mov
out
mov
cmp
jae
std
cld
push
push
cmp
xchg
ficom
mov
pop
adc
push
jle
xor
jmp
data16
sbb
adc
mov
jl
leave
cmp
sti
pusha
inc
ds
pop
fwait
add
push
xor
inc
push
mul
sbb
jg
sbb
sub
xchg
clc
xchg
pop
int3
cmps
push
cmp
nop
stos
adc
nop
jns
loop
int
test
mov
aam
mov
fmulp
shl
push
(bad)
mov
adc
dec
repnz
add
dec
mov
sbb
scas
xchg
inc
cmp
out
mov
cmp
shr
in
test
dec
rol
das
stos
(bad)
imul
mov
adc
cli
sub
outs
mov
mov
pop
fcom
jo
int
or
movs
cli
(bad)
pushf
dec
retf
repz
xchg
es
jmp
mov
xchg
movs
out
mov
xchg
mov
movs
mov
add
jmp
dec
out
xchg
(bad)
out
mov
test
sti
inc
mov
cdq
nop
fcomip
(bad)
(bad)
bound
xor
cwde
addr16
or
daa
jmp
out
inc
xchg
int
pop
cld
xlat
retf
pop
mov
out
xcrypt-ofb
cmps
stos
sub
push
ror
sub
sub
test
in
test
sti
push
loope
sbb
push
pop
xchg
lods
sahf
or
inc
(bad)
mov
(bad)
mov
adc
in
cmp
test
cmp
and
mov
adc
cmp
or
add
sbb
xchg
xor
test
xchg
movs
cwde
add
into
movs
push
push
jns
fs
pop
mov
xchg
dec
mov
xor
adc
mov
bound
sbb
mov
jmp
xchg
inc
push
mov
mov
das
xlat
mov
scas
and
aad
sahf
sub
xchg
sbb
ret
sbb
movs
out
ffree
sete
(bad)
dec
add
dec
push
xchg
ficomp
das
sub
shl
adc
sbb
sub
ins
bnd
loope
push
cmc
adc
imul
jns
xor
out
fbstp
xchg
mov
retf
stos
sbb
jne
add
pop
add
mov
pop
xor
xchg
mov
push
adc
pop
mov
jno
pop
pop
inc
or
pop
dec
lods
mov
adc
cli
repz
jp
xlat
clc
sub
lods
jecxz
cmp
and
mov
jmp
popf
push
lahf
fld
mov
cmps
xchg
dec
push
lods
rcr
mov
jmp
and
(bad)
adc
and
movs
cmp
js
jae
mul
ret
push
mov
jne
jmp
call
inc
fldenv
mov
mov
sahf
bnd
cwde
jp
push
inc
pop
mov
inc
fisubr
sahf
ja
into
cmp
or
clc
xchg
data16
mov
mov
bound
shl
imul
mov
pop
lds
cmp
and
aas
sbb
mov
sub
xor
pushf
ret
test
into
mov
outs
mov
mov
lock
mov
les
xor
inc
popf
leave
push
rol
std
push
dec
movs
and
fnstcw
jb
jmp
cwde
dec
mov
aaa
repnz
mov
lahf
hlt
sub
dec
xchg
stos
(bad)
pop
cmp
sub
and
mov
call
jne
push
jmp
xchg
jge
dec
in
int
(bad)
lock
shl
ficom
clc
ror
imul
shl
lahf
xchg
mov
adc
push
pushf
fnstsw
clc
sub
xor
retf
pop
add
xchg
sahf
aam
dec
fs
popf
mov
mov
or
imul
jge
xchg
cwde
stc
sub
push
outs
add
add
add
sbb
adc
jns
int3
jno
out
call
fdivr
jbe
jecxz
inc
ins
test
rol
add
jne
jmp
mov
lea
fidivr
adc
mov
shl
lods
jae
(bad)
fsubp
push
xchg
fwait
inc
arpl
mov
add
out
div
pop
jg
retf
mov
cwde
inc
pop
adc
cmp
shl
data16
in
xchg
jecxz
pop
mov
or
fbstp
loop
mov
shl
push
pop
mov
inc
cwde
sbb
in
pop
das
fsubrp
xor
inc
dec
xlat
adc
test
fadd
out
adc
clc
xchg
sub
add
test
in
(bad)
xor
mov
jnp
add
mov
and
pop
lds
cmps
int
push
sbb
stos
aaa
inc
cmp
mov
mov
and
ret
adc
and
sbb
or
fucomip
mov
sbb
jae
xlat
iret
pop
mov
ret
mov
inc
out
loope
sbb
sti
xchg
pop
mov
cmp
in
rcl
popf
jae
and
(bad)
xor
test
fwait
push
test
sbb
(bad)
cli
clc
pop
add
jb
test
or
push
das
sbb
nop
fsub
leave
cdq
push
mov
imul
cmc
pop
or
mov
fistp
add
lds
scas
push
repz
in
mov
xor
es
jle
push
jbe
xchg
movs
pop
test
and
in
and
push
fsubp
es
lods
mov
aam
mov
dec
outs
das
in
sbb
or
and
jp
xchg
cmp
sub
ror
mov
test
xchg
cli
mov
enter
imul
mov
retf
ss
push
xchg
inc
neg
int3
jb
sbb
mov
enter
xor
add
cdq
jnp
div
mov
lock
and
aad
mov
inc
push
sub
pop
scas
adc
push
xchg
xor
adc
rol
stos
mov
jb
xor
lods
or
add
ins
mov
cmp
imul
lahf
ins
ror
jb
jb
data16
dec
dec
mov
add
stos
mov
pop
std
cmp
xor
adc
gs
sbb
adc
jg
xchg
xchg
fisub
adc
dec
mov
aam
and
jnp
and
sub
cs
sar
in
ret
(bad)
in
daa
adc
retf
(bad)
ins
xchg
xchg
jae
pop
or
and
inc
pushf
pop
add
or
test
lods
movs
jecxz
xor
popf
mov
sbb
xor
xchg
xchg
outs
or
xchg
push
imul
jl
jle
ds
mov
mov
mov
in
rcl
(bad)
xchg
je
loope
or
pusha
call
aaa
inc
adc
not
push
dec
pop
cwde
mov
jg
ror
xor
push
retf
ds
inc
pop
js
adc
jb
lods
jmp
push
cmp
jmp
jb
push
xchg
mov
cmp
das
mov
iret
or
out
cli
push
inc
push
mov
xchg
pop
lahf
movzx
dec
sub
lods
sbb
(bad)
out
adc
mov
das
xor
add
inc
mov
xchg
sub
inc
sbb
sbb
mov
aam
push
push
xchg
dec
push
push
or
fcom
stos
cmp
dec
cmp
enter
test
cmp
stos
dec
loop
dec
rol
in
scas
push
jne
sahf
mov
adc
shl
jecxz
fdiv
aaa
pusha
adc
(bad)
out
data16
test
adc
pop
aaa
fucomi
push
push
gs
adc
fwait
or
popa
ret
mov
adc
lods
dec
push
cmps
ds
and
(bad)
sub
loop
jno
in
shr
push
cmp
inc
cmp
sub
push
aas
in
aas
sub
cld
jne
popa
push
dec
daa
and
sub
dec
dec
cmps
mov
jge
push
inc
lods
popa
addr16
mov
dec
sub
xor
xchg
mov
loopne
ja
cmp
in
or
and
cli
pop
and
mov
inc
daa
and
pop
jle
sahf
sbb
dec
fwait
imul
in
pop
mov
cwde
jmp
pop
leave
add
xor
out
int
in
push
call
test
js
nop
mov
pop
into
ss
mov
push
scas
out
dec
neg
inc
sub
jmp
pop
iret
sub
int
jb
(bad)
jno
pop
and
xor
movs
sbb
pop
adc
pop
inc
mov
fwait
imul
mov
loope
dec
leave
not
push
jb
xrelease
push
imul
push
outs
fistp
lods
stos
movs
jl
sbb
cmp
int3
push
inc
sti
pop
in
test
loope
ins
test
fs
(bad)
in
imul
lods
aas
or
or
enter
mov
js
add
iret
jo
sahf
mov
mov
mov
cmp
and
out
push
ja
add
sbb
mov
loop
or
imul
adc
(bad)
lods
rcl
cmps
jne
xor
lods
add
inc
imul
jae
jl
dec
sbb
add
xlat
add
cmp
inc
cmp
das
mov
jnp
push
(bad)
add
fadd
repnz
loop
push
sar
ins
es
dec
inc
xchg
iret
in
adc
sub
cmp
push
fs
fs
das
mul
xchg
lahf
mov
mov
push
jge
jmp
test
sti
jb
lods
xor
daa
xor
mov
xlat
aad
call
aad
ja
test
pop
test
or
push
dec
and
psrld
je
adc
pushf
popf
scas
dec
(bad)
sbb
sub
add
stos
mov
or
js
bnd
adc
cmp
pop
mov
cmp
push
jecxz
pop
ret
adc
out
jg
stc
out
jg
stc
jg
add
pop
(bad)
adc
add
add
dec
inc
scas
inc
pusha
or
add
add
add
(bad)
(bad)
inc
add
add
add
add
add
add
jns
je
ins
cs
jb
ja
outs
addr16
push
gs
imul
xor
xor
inc
jne
je
jb
cmp
jb
ins
sub
push
jne
ins
imul
imul
bound
xor
data16
xor
fs
add
adc
gs
cs
jb
ja
outs
addr16
imul
add
popa
je
pop
add
add
add
add
add
lsl
add
ret
add
mov
inc
or
add
or
add
add
add
add
or
add
add
pusha
outs
rol
add
add
inc
dec
inc
add
mov
or
popa
add
jo
pop
jae
add
ret
add
push
ret
add
outs
test
add
adc
inc
push
pop
inc
in
(bad)
cmc
and
(bad)
jecxz
icebp
xchg
cmp
data16
je
je
ss
std
sahf
out
cmp
jecxz
imul
int
repz
idiv
sbb
cmp
in
int3
imul
outs
jle
daa
aam
push
fidiv
or
cs
and
out
push
imul
aaa
add
repnz
arpl
inc
xor
(bad)
mov
pushf
adc
inc
loope
mov
imul
es
inc
test
lods
sub
cld
cmc
movs
lods
(bad)
jno
int
scas
loop
xor
cmp
test
mov
jl
jge
push
xacquire
jl
sub
daa
int
ret
inc
ins
push
push
ins
dec
enter
pusha
pop
jmp
(bad)
repnz
push
inc
scas
push
push
mov
js
ret
jl
mov
fwait
clflush
gs
call
fs
mov
cs
(bad)
mov
lods
dec
aam
les
cld
jmp
mov
movs
sub
push
sub
mov
xchg
sub
or
jl
sbb
arpl
in
icebp
sub
pop
aas
rcr
jne
callw
add
sub
mov
call
mov
stos
sub
iret
stos
fidivr
lock
sar
arpl
imul
fdivrp
cwde
test
push
push
hlt
fidivr
mov
mov
pop
(bad)
outs
lds
mov
out
cmps
out
stos
clc
cmp
pusha
push
push
adc
jnp
sub
addr16
enter
pop
push
fstp
retf
bound
jp
add
into
fwait
in
push
je
cmp
aaa
dec
sbb
in
jnp
(bad)
pop
inc
int3
pop
and
xchg
xlat
movs
arpl
cmp
sub
in
push
xchg
xor
loopne
push
clc
cmp
jnp
sub
push
cdq
inc
outs
rcl
pop
jnp
icebp
cld
ret
cmp
stc
shl
mov
add
sub
cmps
dec
mov
pop
xchg
mov
out
or
sti
out
cdq
xor
jne
rcr
stos
scas
pop
push
dec
neg
add
cmc
or
les
fdiv
mov
and
std
cmp
rcl
in
mov
pusha
pop
dec
sub
(bad)
aad
imul
pop
fistp
ss
imul
jle
leave
bound
pop
mov
jl
(bad)
fstp
xchg
mov
xchg
xchg
into
push
push
ja
jl
add
int3
add
mov
push
push
add
clc
rdpmc
(bad)
out
jl
mov
adc
std
dec
pop
mov
and
mov
in
fist
push
adc
push
inc
retf
xor
fnsetpm(287
test
repz
pusha
sbb
data16
xchg
xor
dec
test
adc
int3
inc
aaa
dec
fcomp
jecxz
mov
in
mov
cmps
shr
int3
or
cmp
mov
scas
mov
jno
popa
es
(bad)
mov
or
push
in
call
pop
gs
pop
scas
test
xchg
mov
add
sub
je
pusha
sub
sar
aas
xchg
inc
sub
sub
mov
arpl
mov
outs
jp
sar
adc
jae
sbb
jmp
mov
dec
jns
cld
daa
jmp
mov
push
out
movs
out
sbb
fsubr
std
dec
jecxz
jmp
cdq
mov
dec
in
call
xchg
jmp
mulps
dec
dec
inc
mov
push
je
inc
repz
leave
cmp
cmp
mov
xchg
mov
jo
test
dec
nop
mov
push
sbb
xchg
leave
mov
nop
add
and
push
xchg
in
mov
push
xchg
inc
fist
inc
icebp
icebp
lods
mov
jae
retf
cmc
push
int3
adc
mov
int
ss
jp
cmp
ret
xor
mov
sar
mov
sar
int3
inc
lds
sar
out
popa
sbb
movs
mov
add
ret
push
outs
gs
jg
and
inc
add
and
lock
and
xchg
dec
pop
xchg
div
fnstsw
push
into
mov
retf
adc
pop
rcr
out
out
push
scas
xchg
shl
loop
xchg
repz
pop
fcom
call
mov
jmp
mov
imul
lds
les
int
in
jmp
or
pop
aaa
xchg
jecxz
and
sbb
push
icebp
inc
mov
mov
xor
mov
jno
sbb
loopne
fdivr
arpl
adc
test
fsub
fsubr
inc
outs
xchg
cmps
push
mov
lds
bound
sub
inc
or
sbb
cdq
ss
out
shl
xchg
xchg
test
or
inc
ret
cmp
maskmovq
neg
lods
cld
dec
adc
mov
jb
inc
xchg
jno
mov
ffreep
sbb
pop
fs
push
jge
jnp
push
sub
fsubr
lods
xchg
aam
bound
lahf
cwde
enter
cmp
pusha
fwait
jp
add
fcomi
lahf
add
repnz
add
xchg
call
ret
repnz
mov
in
mov
in
mov
arpl
mov
xor
lahf
add
xchg
dec
push
mov
lds
sbb
nop
mov
cli
icebp
pop
int3
icebp
sbb
in
std
aam
mov
dec
mov
leave
stos
dec
cmp
arpl
inc
aad
jmp
in
or
loopne
jmp
je
loope
aad
xchg
or
jl
cmc
imul
inc
inc
int
dec
repnz
into
jae
inc
(bad)
(bad)
sub
add
scas
rcl
mov
(bad)
jmp
sahf
lds
cwde
sahf
outs
int
(bad)
cmps
mov
lea
inc
add
mov
inc
lods
xor
pop
adc
ffree
mov
dec
jl
xor
push
hlt
and
pop
push
push
cwde
push
sub
jne
pop
les
aaa
loopne
mov
rcl
pop
xchg
enter
mov
jmp
mov
aam
fs
shl
mov
in
mov
mov
stos
ins
std
in
imul
enter
ss
push
sub
sahf
push
mov
aad
mov
xchg
push
cmp
mov
test
mov
repz
ss
sbb
pop
arpl
pop
idiv
cmc
loope
jbe
sbb
jnp
in
aas
lahf
pop
xchg
cmp
aaa
leave
test
mov
(bad)
imul
mov
mov
mov
retf
push
mov
inc
mov
imul
hlt
jle
dec
das
dec
popa
lea
out
sub
hlt
test
or
inc
mov
mov
push
scas
cmp
sbb
mov
cmovne
cmp
jp
add
addr16
xchg
pop
test
xchg
pop
push
jmp
aam
push
mov
aaa
sub
aad
jmp
das
or
mov
fld
inc
mov
dec
jp
cmps
out
pushf
push
ds
std
sbb
cld
sub
adc
or
pop
pop
sub
and
fdivr
div
in
out
or
and
mov
adc
push
in
cmp
cli
mov
push
mov
arpl
mov
shr
mov
sbb
inc
mov
mov
mov
jne
daa
repz
push
iret
or
nop
lods
push
add
jmp
adc
mov
xor
scas
clc
and
nop
xor
fisubr
enter
cmps
aam
sub
adc
inc
test
or
ret
enter
out
jmp
in
and
cs
sbb
inc
dec
mov
xchg
or
cld
and
dec
jp
xor
lods
popa
shl
(bad)
pop
loope
xor
in
daa
and
jo
add
xor
int3
mov
push
or
loope
lahf
cmp
inc
mov
mov
loop
fs
mov
shr
mov
cs
push
jle
sub
mov
add
mov
ja
mov
es
jl
adc
aas
mov
fadd
inc
sbb
xchg
pop
fnsave
adc
dec
add
stos
rcr
push
push
fsub
in
and
mov
cmp
mov
jmp
js
movs
out
imul
fsubr
cmp
(bad)
pop
movs
and
test
rol
or
scas
cwde
loope
fmul
mov
or
pop
(bad)
enter
sbb
push
sub
cld
xchg
push
add
enter
jns
retf
inc
int3
xchg
fdivr
rcl
cmps
js
lea
(bad)
retf
imul
loop
cdq
sub
and
jns
or
pop
cmp
jp
pop
jne
push
mov
dec
mov
dec
ror
add
jmp
popf
cmovle
inc
pushf
push
fwait
xchg
push
xchg
or
mov
pusha
mov
retf
mov
icebp
(bad)
ins
clc
(bad)
mov
ins
repnz
sub
test
mov
push
out
outs
retf
ds
aam
or
clc
lea
leave
dec
dec
sti
pushf
sub
lea
fimul
not
adc
mov
cmp
(bad)
mov
(bad)
pop
xor
inc
mov
dec
mov
pop
xchg
push
or
cmp
loop
mov
sbb
into
pusha
out
push
neg
push
(bad)
jns
sub
lock
fdiv
fsubr
fptan
mov
inc
mov
nop
mov
test
in
stc
das
pop
out
xor
and
cs
mov
ret
adc
adc
fmulp
hlt
dec
repnz
fnsave
int
cmp
mov
(bad)
push
mov
hlt
jno
cmc
nop
lahf
mov
in
fcmovnu
xchg
retf
movs
cmp
jne
repnz
mov
or
mov
cmp
sbb
dec
pop
out
arpl
out
ss
sbb
loop
inc
ins
add
inc
(bad)
retf
imul
daa
lods
and
mov
xor
sub
sbb
jnp
shl
jae
add
(bad)
aas
dec
push
fwait
cmp
push
jl
sar
xchg
jmp
ja
fwait
or
jmp
adc
arpl
jge
push
mov
aas
xlat
adc
inc
out
fcom
dec
stc
ja
pusha
jmp
enter
xchg
(bad)
adc
mov
inc
arpl
or
mov
xchg
mov
xchg
sub
je
jle
repnz
in
inc
fisttp
test
shl
sub
test
xor
xor
xchg
mov
cmps
cdq
ficomp
(bad)
jmp
std
iret
bound
call
and
pop
fs
jge
cmp
icebp
bswap
sub
mov
mov
dec
push
ret
clc
jle
mov
adc
xchg
fdiv
pop
xchg
sbb
lock
fldenv
mov
push
fcomp
add
xchg
aas
aad
mov
daa
cmp
push
xchg
jns
mov
aad
adc
mov
pop
into
in
ins
xlat
daa
lds
not
loop
shl
ss
lods
sub
inc
mov
jae
fimul
jge
cmp
inc
add
and
mov
jmp
pushf
xchg
aam
sti
jb
and
es
inc
sub
clc
cmps
or
dec
xlat
(bad)
lahf
add
movs
xchg
out
fs
inc
jne
bound
sti
pop
ja
lahf
sahf
mov
cdq
push
push
mov
pop
bound
mov
jle
pop
inc
fsub
inc
mov
jecxz
shr
fstp
in
xchg
xor
js
adc
jg
jne
sbb
xor
jb
jge
int3
ss
sub
add
inc
sar
cmps
inc
ret
(bad)
mov
sbb
rol
sti
xor
and
int3
or
retf
stos
add
inc
and
xchg
mov
(bad)
repz
adc
pop
scas
push
(bad)
adc
test
addr16
fldcw
jns
cmp
pop
xchg
push
push
xchg
mov
in
cmps
fisub
cmp
mov
popf
mov
adc
push
test
sub
or
ror
idiv
xor
out
push
mov
mov
sub
push
add
add
sub
mov
aaa
push
ds
mov
sti
fmul
aam
fsubr
test
fisubr
mov
in
mul
outs
test
mov
pusha
pushf
mov
xor
mov
add
fild
mov
(bad)
sbb
or
or
inc
mov
fidivr
call
test
dec
jmp
jmp
pop
xor
xor
in
mov
cld
push
cwde
xchg
loop
aaa
popa
sar
mov
mov
int3
pop
mov
pop
add
jge
push
jbe
mov
repnz
inc
aas
sbb
ja
mov
sub
cld
mov
icebp
frstpm(287
movs
jge
mov
adc
add
popa
sysexit
dec
lock
cmc
pop
xchg
adc
add
movs
xchg
bound
mov
arpl
popf
jno
outs
lods
and
rol
and
and
adc
dec
adc
jmp
sub
push
jle
addr16
jmp
je
sub
cmps
sbb
movs
stc
in
push
stc
clc
cmps
add
enter
or
dec
jne
mov
jmp
mov
sbb
es
cmp
repz
stc
lods
mov
and
mov
adc
inc
cmp
fwait
je
lods
add
sbb
lahf
push
sub
lods
xchg
sub
sbb
adc
retf
push
mov
pop
push
sub
stc
ins
retf
and
mov
inc
mov
imul
andnps
dec
cmp
sbb
stc
xor
or
dec
cmps
sub
pop
das
das
fldcw
sub
sbb
arpl
call
lea
in
jnp
pop
(bad)
fsubr
jo
mov
idiv
retf
pop
push
stos
xor
popf
ss
pop
and
(bad)
out
es
es
jecxz
std
sbb
dec
or
call
shl
xchg
and
icebp
and
mov
rcl
out
daa
mov
aam
dec
mov
push
je
fdivr
xor
std
xor
xor
(bad)
push
inc
mov
and
ss
adc
(bad)
push
clc
aam
push
dec
xchg
jo
in
adc
inc
and
ja
out
fcmovnu
aad
scas
into
ss
sub
aam
test
add
inc
pop
cmps
jl
adc
push
and
sub
mov
rcl
cmp
shr
mov
cs
mov
loop
enter
push
jge
addr16
rcl
cli
sub
mov
mov
shl
in
sti
mov
push
xor
out
or
repnz
mov
loope
pop
int
jb
(bad)
cwde
fmul
mov
jb
dec
mov
(bad)
adc
jmp
imul
and
pop
gs
test
popf
ja
mov
or
sbb
jecxz
retf
cld
test
icebp
mov
pop
sub
xor
sub
push
jns
fstp
mov
mov
sbb
mov
and
test
sub
xor
xor
jae
xchg
adc
mov
and
cwde
ja
fidivr
push
and
pop
outs
cwde
mul
loope
mov
mov
xchg
inc
push
shl
fisubr
jge
mov
(bad)
sahf
out
mov
hlt
adc
popf
clc
cmc
ja
(bad)
test
xchg
stc
pmovmskb
inc
sar
pushf
mov
enter
ror
arpl
jg
clc
mov
pop
mov
sbb
pop
adc
ret
mov
mov
xchg
push
loopne
jg
stc
out
jg
stc
out
xor
(bad)
fsubr
stc
or
cmc
add
add
dec
inc
dec
inc
scas
inc
pusha
or
add
add
add
(bad)
(bad)
inc
add
add
add
add
add
add
jns
je
ins
cs
jb
ja
outs
addr16
push
gs
imul
xor
xor
inc
jne
je
jb
cmp
jb
ins
sub
push
jne
ins
imul
imul
bound
xor
data16
xor
fs
add
adc
gs
cs
jb
ja
outs
addr16
imul
add
popa
je
pop
add
add
add
add
add
lsl
add
mov
mov
inc
or
add
or
add
add
add
add
or
add
add
pusha
outs
rol
add
add
inc
dec
inc
add
mov
or
popa
add
jo
pop
jae
add
ret
add
push
ret
add
outs
test
add
adc
inc
inc
push
pop
inc
in
aam
and
pop
add
scas
outs
cmps
mov
ret
xor
leave
fwait
(bad)
jmp
mov
cmps
or
mov
repz
jge
les
add
pop
add
jecxz
pop
fnstsw
cmp
(bad)
repz
hlt
pop
and
pop
ja
xchg
clc
ja
aaa
test
mov
aas
or
adc
cmp
clc
fdivr
cmp
bound
pusha
std
scas
push
dec
retf
imul
ss
outs
add
rcl
mov
inc
fs
in
call
xchg
sti
push
into
fcom
dec
or
cmc
xor
mov
mov
adc
out
lods
sub
leave
test
pop
push
mov
stc
xor
call
outs
pop
xor
and
ficomp
shr
int
push
shr
adc
aas
or
sbb
dec
lods
popa
xor
cmp
push
xchg
xor
stos
mov
fwait
xchg
ds
aas
repz
xchg
or
int3
mov
push
dec
and
mov
xor
add
nop
mov
xor
xchg
ret
scas
cmp
sti
xor
xchg
mul
icebp
push
shl
add
xchg
or
(bad)
arpl
sahf
shl
mov
dec
adc
test
adc
mov
stos
sub
mov
dec
and
push
or
daa
and
jae
retf
retf
dec
jl
mov
fs
cmp
cld
push
jne
and
outs
in
jge
xchg
xchg
outs
(bad)
or
ds
lods
dec
clc
sbb
inc
sbb
(bad)
push
in
jl
sbb
or
sbb
or
jl
ficomp
and
add
cmp
es
xchg
and
dec
xchg
iret
xchg
push
xor
fidiv
mov
in
in
dec
pop
sbb
call
mov
or
daa
out
sti
lds
les
out
lods
ror
dec
test
inc
sbb
lods
cdq
push
xor
mov
push
mov
mov
mov
es
push
dec
mov
dec
mov
xchg
sub
aaa
add
mov
and
sbb
inc
sar
cmp
iret
out
xorps
cwde
jmp
add
in
test
xor
push
push
and
and
and
mov
mov
dec
push
ret
jle
mov
push
fisub
pop
inc
dec
push
iret
or
cmp
dec
stos
jae
add
int
xor
cmp
pop
mov
test
jnp
mov
push
aam
repnz
or
mov
push
out
hlt
xchg
stos
out
or
xchg
lea
cmc
pop
(bad)
push
add
cmp
mov
pop
mov
out
popf
mov
sub
sahf
jmp
push
push
jno
mov
call
cmp
mov
cwde
mov
sbb
jg
adc
jg
stos
push
and
inc
stos
movs
jmp
int3
test
sbb
mov
das
or
aam
mov
mov
xchg
jb
fstp
push
inc
lock
ja
les
dec
fdivp
mov
or
and
jmp
pop
cmp
cdq
cld
fild
xor
clc
aad
enter
nop
repnz
movs
sub
pop
inc
jnp
xchg
xor
push
jle
xor
mov
fnstcw
push
shl
idiv
loope
fs
sub
enter
jge
lahf
mov
(bad)
sub
adc
sbb
push
sub
in
pop
push
push
jl
ja
pop
xchg
xor
and
push
int
cmp
push
add
jne
mov
adc
xchg
xor
rcr
out
ds
xor
stos
(bad)
jnp
xor
mov
add
xor
inc
scas
mov
xchg
lds
pop
gs
or
jmp
jb
fmul
dec
jbe
aad
mov
pop
in
adc
inc
call
mov
ins
inc
xchg
pop
test
pop
pop
push
bound
cmp
push
icebp
div
xor
es
add
and
retf
ins
mov
std
mov
popa
pop
ficom
test
sub
inc
dec
loop
imul
stos
mov
icebp
add
pop
xchg
out
dec
fimul
dec
out
adc
push
ss
dec
(bad)
hlt
ja
xor
inc
inc
fist
and
fidiv
push
dec
mov
jle
push
xchg
pop
cmc
imul
inc
test
les
inc
sbb
rol
jns
test
pop
fsubp
sbb
fimul
push
(bad)
jnp
imul
xchg
xor
lods
xchg
sahf
imul
xor
sbb
cmp
xchg
xchg
cmp
xchg
jo
fnstsw
mov
pop
adc
inc
cli
pop
sbb
fidivr
iret
pop
pop
xchg
mov
mov
retf
ret
into
add
push
sub
cld
inc
ds
(bad)
lahf
fst
je
pop
cmc
ins
xor
stos
add
mov
push
ss
mov
cmp
jno
call
push
push
mov
and
popf
addr16
adc
sub
jns
xor
(bad)
fldenv
or
rol
xchg
leave
add
sub
jle
js
fsubr
cmp
push
inc
sbb
mov
push
popf
mov
pop
jecxz
(bad)
ss
mov
sbb
stc
repnz
or
out
xchg
sbb
call
ficom
outs
int3
aas
inc
add
loopne
jb
sbb
adc
push
xchg
rol
jnp
cli
in
and
mov
or
cdq
sbb
int
jp
pusha
dec
pushf
shr
adc
pop
sub
repnz
sbb
jae
mov
sub
mov
add
pop
mov
push
xor
std
imul
enter
xchg
mov
stc
je
ss
jecxz
dec
out
jmp
mov
jbe
inc
mov
xchg
(bad)
icebp
push
and
clc
xchg
jns
div
leave
ret
jbe
rcl
xchg
pop
pop
call
sahf
sbb
lock
jnp
xchg
hlt
(bad)
fnstcw
sbb
(bad)
pop
out
add
sub
pop
xchg
lea
mov
push
inc
in
fistp
dec
(bad)
cmps
jae
add
or
mov
lods
xor
adc
cli
fisttp
xchg
cli
test
inc
push
lea
jbe
aas
push
loopne
cwde
lahf
xor
adc
sub
(bad)
cmp
arpl
inc
mov
mov
xchg
mov
jle
mov
ret
in
adc
popa
repnz
xor
stos
sub
popa
jae
push
xchg
cdq
add
xlat
les
mov
inc
mov
ja
push
cmps
fsub
loope
int3
jns
repz
(bad)
rcl
aaa
fwait
and
cmp
stos
dec
sbb
shl
push
popf
dec
cmp
cwde
jae
mov
mov
dec
scas
dec
repnz
dec
loope
cmps
pusha
adc
or
mov
xchg
retf
mov
mov
mov
xor
sub
popa
dec
jle
adc
jae
mov
push
fs
jbe
iret
stc
jns
mov
xchg
fldenv
fcmovnbe
add
and
sbb
add
call
outs
push
popa
mov
repz
movs
mov
into
dec
mov
xor
call
fwait
lods
int
cdq
sub
addr16
sbb
clc
stos
adc
xchg
dec
cmps
push
push
pop
mov
sub
and
jae
sbb
bound
sti
mov
sbb
scas
sahf
add
mov
pop
mov
out
ins
or
or
lods
rcl
les
xchg
push
ficom
cld
pop
xor
sti
dec
dec
les
jmp
or
rcr
push
in
push
in
pop
pop
xchg
mov
hlt
xlat
jae
mov
mov
dec
dec
mov
mov
icebp
adc
xor
jp
pusha
sbb
mov
xchg
mov
enter
cmc
xor
aam
xlat
xchg
mov
jne
push
aas
jno
jl
sub
sbb
rcr
(bad)
cmp
inc
xchg
sbb
mov
jp
sti
adc
mov
imul
xchg
mov
inc
retw
cmps
and
mov
dec
call
fiadd
mov
pop
fstp
push
pop
xor
sub
add
cmp
mov
jecxz
or
pmaddwd
adc
push
jmp
dec
add
jmp
nop/reserved
and
sbb
push
inc
(bad)
xchg
add
xor
test
fwait
repz
jbe
jnp
fs
jmp
into
sti
icebp
cld
les
mov
push
mov
mov
repnz
loopne
dec
gs
jbe
jmp
(bad)
cmps
cmp
out
lahf
mov
popa
add
jl
leave
in
stos
xchg
pop
clc
adc
add
mov
call
xlat
xchg
jp
cld
js
sti
mov
sti
addr16
scas
outs
xchg
das
and
rcr
ret
jge
jmp
xor
inc
jge
push
xor
push
dec
dec
rcr
mov
mov
adc
hlt
pop
fcom
sahf
mov
push
xchg
ret
cmps
imul
nop
xor
cmc
xchg
cdq
mov
test
mov
dec
pop
jae
aam
(bad)
(bad)
adc
add
sbb
push
das
pop
mov
xor
stos
(bad)
in
adc
xchg
adc
movs
xchg
xlat
pop
xor
test
lds
push
fsubr
jns
lods
mov
out
adc
cmps
push
sbb
dec
mov
pop
mov
fidiv
push
cli
idiv
mov
cmps
xor
clc
cmp
scas
inc
jae
cmp
int3
jecxz
xchg
pop
bound
xor
inc
pop
mov
inc
dec
cmps
sti
inc
mov
inc
mov
mov
dec
xor
jp
cli
inc
icebp
in
mov
mov
inc
ficomp
mul
mov
jp
ds
ret
cdq
pop
es
inc
jmp
sub
cmps
sbb
pop
push
push
(bad)
dec
call
outs
adc
sahf
jne
mov
sub
xchg
xor
add
xor
adc
and
dec
imul
mov
push
sub
aam
or
pop
mov
jp
into
test
dec
test
or
adc
je
xor
ds
sub
test
push
push
sbb
in
mov
add
ret
xchg
popa
jns
mov
push
cs
(bad)
icebp
loopne
dec
cdq
push
loop
mul
pop
scas
cs
cs
dec
repnz
dec
test
pop
bnd
xchg
jne
pop
push
mov
icebp
pop
mov
jl
ins
push
(bad)
retf
mov
jnp
sub
sub
xchg
mov
mov
push
adc
je
ror
jns
movs
pop
shr
in
cwde
push
and
repz
push
jl
mov
push
mov
add
adc
and
clc
cmp
xchg
aaa
lods
mov
push
cmp
(bad)
adc
ins
add
lock
and
imul
mov
test
jecxz
xchg
mov
cmps
popa
(bad)
pop
ins
dec
and
push
hlt
xchg
pop
bound
fld
add
jge
push
outs
out
inc
imul
dec
mov
cmp
inc
loope
out
rcr
lods
lds
pop
popa
leave
push
add
push
sbb
inc
inc
repz
iret
rcr
xchg
xchg
fsub
arpl
jns
ret
mov
mov
icebp
cmp
push
in
inc
into
inc
movs
mov
call
scas
daa
cmp
xor
dec
sahf
loopne
sti
mov
jecxz
rcr
outs
loop
ret
imul
call
mov
dec
push
push
gs
pop
xchg
jmp
fs
into
jge
push
jge
mov
add
pop
mov
stos
cwde
fld
dec
cmp
test
gs
shl
test
div
xchg
addr16
ss
(bad)
adc
pop
shl
push
and
imul
cmc
or
imul
mov
ficom
jnp
xchg
push
push
aas
sbb
popf
xchg
fadd
adc
adc
xor
jmp
mov
call
mov
push
inc
lods
nop
mov
jno
xchg
adc
mov
aad
inc
ffree
or
add
push
retf
pop
in
xor
mov
call
lods
push
test
fcmovne
sbb
ins
(bad)
(bad)
fnstcw
inc
and
fdivr
sub
cmp
dec
push
and
jmp
mov
(bad)
(bad)
rcr
jae
rcl
popf
mov
inc
stos
pop
mov
ins
xchg
inc
xlat
test
inc
push
push
xlat
ins
jp
and
pop
inc
iret
sbb
outs
mov
test
in
out
inc
xchg
adc
sub
and
jo
xchg
mov
xchg
iret
sbb
dec
movs
adc
xchg
in
inc
fidivr
mov
cwde
xchg
pop
pop
mov
xchg
push
cld
mov
xchg
fisubr
sub
mov
ds
xor
ds
push
adc
shr
dec
cmp
add
stos
inc
shr
and
push
pop
push
aas
stos
sahf
(bad)
outs
pop
cmps
popa
jae
out
cmp
ja
int3
icebp
pop
jmp
push
jo
(bad)
xchg
cmp
fisttp
loop
jbe
xchg
dec
stc
jae
and
xchg
lds
popf
call
loop
(bad)
hlt
cs
jle
mov
movs
push
dec
inc
and
jge
sti
arpl
mov
add
lock
scas
pop
push
xor
sub
in
cs
xor
pop
jne
inc
inc
push
xor
fst
ror
addr16
cdq
or
idiv
sti
and
movs
aaa
inc
inc
inc
(bad)
ds
into
dec
push
mov
dec
sub
dec
and
cs
or
fiadd
xlat
dec
ret
sub
lods
pop
dec
jp
inc
xor
fwait
mov
jle
pop
pop
fmul
pop
pop
dec
stos
js
das
std
push
in
sub
and
xor
sti
cmp
fmul
push
pusha
cs
push
pop
repnz
test
loop
xchg
ss
(bad)
mov
addr16
loop
pop
sbb
jo
add
and
data16
imul
dec
and
jge
cmps
inc
push
pusha
dec
dec
adc
fcom
clc
sub
mov
adc
rcr
sbb
lds
dec
dec
repnz
scas
jecxz
sahf
and
adc
push
ds
jno
js
scas
pop
stos
push
stc
adc
lods
mov
jmp
ret
jo
jo
ror
aaa
jmp
in
test
outs
push
arpl
adc
cdq
lahf
clc
repz
mov
jmp
sbb
leave
push
inc
cmps
js
aaa
sub
push
sbb
pushf
(bad)
icebp
rcr
push
pop
leave
xor
jge
pop
std
mov
(bad)
xchg
adc
je
fisubr
adc
jecxz
pop
out
pop
cs
hlt
mov
push
imul
and
xor
pop
dec
in
adc
push
push
rol
gs
loop
(bad)
mov
xadd
sbb
jmp
test
dec
cmp
xchg
push
mov
leave
sbb
push
xchg
icebp
popf
jg
jne
jno
sub
test
dec
addr16
scas
add
ds
ret
sbb
inc
je
lea
inc
xor
mov
cdq
xor
mov
adc
and
jb
cmp
in
cld
adc
lods
push
fisubr
push
dec
jmp
fidiv
in
call
cmc
rol
in
cmp
in
bound
cmps
or
cmp
pop
out
fwait
ret
lds
outs
push
bound
lea
push
jge
mov
in
sub
add
sub
xchg
cmp
out
jg
stc
out
call
add
jg
xchg
std
sahf
push
push
int
add
add
dec
inc
dec
inc
scas
inc
pusha
or
add
add
add
(bad)
(bad)
inc
add
add
add
add
add
add
jns
je
ins
cs
jb
ja
outs
addr16
push
gs
imul
xor
xor
inc
jne
je
jb
cmp
jb
ins
sub
push
jne
ins
imul
imul
bound
xor
data16
xor
fs
add
adc
gs
cs
jb
ja
outs
addr16
imul
add
popa
je
pop
add
add
add
add
add
lsl
add
mov
mov
inc
or
add
or
add
add
add
add
or
add
add
pusha
outs
rol
add
add
inc
dec
inc
add
mov
or
popa
add
jo
pop
jae
add
ret
add
push
ret
add
outs
test
add
adc
inc
inc
push
pop
inc
in
rol
loopne
outs
xchg
sar
bound
fstp
dec
xor
imul
sbb
dec
ja
jno
xchg
(bad)
sti
inc
fidivr
shl
and
test
xchg
push
push
sbb
arpl
call
les
add
or
sub
das
test
(bad)
into
pop
sahf
pusha
jno
jmp
xchg
imul
sub
les
xchg
adc
mov
stc
mov
inc
xor
sahf
push
(bad)
xchg
jp
mov
and
mov
movs
jo
mov
cmc
(bad)
fwait
jb
push
loop
push
popf
aaa
test
fwait
jl
cmp
(bad)
imul
ins
je
and
pop
in
push
pop
mov
mov
xor
dec
jmp
push
fwait
in
or
lahf
mov
pop
pop
rol
mov
cmp
imul
call
sub
mov
mov
aam
mov
test
iret
sub
aas
fs
call
stos
std
lods
(bad)
or
inc
dec
cli
mov
popf
cmp
or
and
and
jnp
ret
mov
mov
push
jnp
mov
sbb
into
ror
and
int3
ins
inc
push
mov
out
mov
and
sti
sbb
mov
jb
retf
pop
and
out
dec
mov
push
mov
aaa
leave
test
ds
leave
mov
fwait
add
les
js
jmp
sbb
popa
jp
loop
(bad)
cmp
mov
js
push
jmp
mov
out
add
or
xor
push
stos
adc
les
in
jmp
push
retf
dec
aaa
sbb
pop
packsswb
jl
scas
out
movs
jae
fisub
lods
daa
(bad)
pop
or
xlat
stos
fnstenv
(bad)
jnp
cs
sub
add
(bad)
adc
adc
fs
pop
int3
repz
mov
jmp
adc
add
movs
cld
popa
and
clc
dec
stos
mov
or
or
or
cmp
aas
and
or
xchg
or
push
adc
dec
daa
dec
ret
jne
sub
and
ds
mov
stos
leave
dec
int3
pop
shl
lds
cmc
icebp
lods
fmul
imul
inc
add
test
lods
xor
xchg
fidivr
loop
shl
retf
mov
add
aad
repnz
pop
mov
push
cmc
pusha
cmp
test
or
pop
pop
call
pop
mov
mov
jge
outs
jno
or
sbb
push
sbb
hlt
repz
add
xor
inc
pop
(bad)
ss
data16
lods
mov
shr
or
es
cmps
adc
retf
ins
jge
std
adc
push
movs
movs
jmp
pop
fidiv
test
hlt
push
imul
sbb
gs
iret
pop
sbb
std
cmp
push
mov
call
pop
scas
mov
mov
loopne
out
(bad)
adc
std
mov
sub
xor
xor
arpl
(bad)
and
mov
ror
xor
aaa
imul
retf
push
push
add
xlat
pop
xor
or
dec
push
push
sbb
hlt
dec
push
sub
add
dec
sbb
push
mov
int
jmp
loop
mov
pop
aas
outs
int
xor
cli
jecxz
aad
popa
(bad)
mov
mov
pushf
mov
mov
fiadd
dec
dec
ficom
(bad)
(bad)
in
fstp
add
dec
bound
das
test
call
test
rol
and
pop
sub
adc
sbb
in
mov
pop
xchg
mov
xor
mov
fcomp
(bad)
sub
pop
or
adc
push
jmp
fs
imul
stos
cmp
lods
loope
icebp
adc
test
mov
mov
js
jbe
lock
ret
das
iret
jbe
jb
arpl
pop
add
popa
mov
pop
shl
movs
leave
aaa
(bad)
jecxz
cwde
sub
pop
and
movs
dec
jle
and
stos
in
add
and
push
jbe
test
fisub
pop
and
xor
push
repz
out
jp
jne
cmp
mov
pop
and
push
adc
sbb
enter
ror
jne
and
call
or
lahf
leave
fnsave
fs
xchg
jmp
data16
push
fnstenv
add
ja
out
out
mov
add
push
push
push
rcr
cmp
fs
fst
popa
int
pop
in
je
mov
jnp
arpl
and
punpckhwd
lods
cmp
push
and
clc
ja
sbb
and
xor
pmaddwd
mov
fdivr
es
ret
xor
inc
ret
aaa
pop
inc
mov
or
iret
cli
jb
fisttp
lea
fstp
das
cld
jmp
jp
push
mov
dec
fimul
lds
pop
int
and
ins
push
mov
loope
call
sbb
jns
dec
call
bound
(bad)
mov
out
pop
cmp
hlt
lea
pop
arpl
mov
push
outs
xor
test
in
adc
or
enter
imul
mov
dec
cdq
jle
mov
or
fwait
mov
fisub
in
jmp
das
xor
call
cmp
push
iret
sbb
pop
add
fadd
mov
inc
movs
out
sti
cmp
shl
hlt
(bad)
mov
es
and
xchg
adc
cld
test
dec
aad
std
cdq
les
or
jl
ret
adc
add
sub
jmp
popf
out
add
mov
in
xchg
jb
fidiv
mov
pop
inc
cld
sbb
out
stc
in
lea
shl
mov
lock
jl
in
or
xchg
in
aam
xchg
clc
mov
not
mov
xor
dec
jns
bound
push
stc
pusha
out
rcl
mov
inc
mov
mov
lods
outs
inc
sbb
push
push
pop
cmp
call
jge
cmp
or
sub
xchg
push
mov
ins
out
iret
in
std
mov
mov
jmp
xor
ds
jl
(bad)
inc
cmp
in
xchg
aad
pop
inc
es
add
test
and
dec
xlat
mov
neg
inc
(bad)
push
push
aas
mov
cmp
and
mov
mov
jnp
jne
(bad)
sbb
pusha
cmp
stos
or
call
test
iret
sub
mov
xchg
cld
aaa
jmp
mov
daa
adc
loop
sub
shl
in
mulps
out
shl
cmovp
push
or
pop
dec
mov
call
bound
stc
mov
dec
dec
mov
mov
gs
xlat
rcr
(bad)
cld
jno
mov
cmc
ror
dec
mov
mov
les
sub
xor
ds
jge
push
frstor
mov
fistp
ss
add
sub
mov
cmp
push
(bad)
scas
mov
push
scas
jp
mov
push
inc
ins
pop
mov
shr
ficom
add
cli
mov
or
adc
push
xchg
cmp
xchg
jae
imul
push
inc
test
ds
xchg
or
xor
jnp
in
adc
adc
adc
push
jmp
pop
lahf
jno
dec
mov
pusha
jae
pop
push
mov
loop
push
mov
stos
mov
nop
fnstsw
cmp
dec
dec
push
fmulp
mov
aaa
mov
sbb
stc
jecxz
movs
test
lahf
(bad)
and
xchg
push
in
dec
cmp
pusha
loope
pop
ret
pop
sbb
lock
mov
out
push
jg
sbb
test
pop
clc
adc
stc
sub
or
in
mov
in
call
and
pusha
push
pop
cmps
(bad)
xor
js
stos
std
sahf
movs
arpl
push
inc
cmp
test
jns
cwde
mov
cmc
cmp
xor
retf
xor
addr16
aad
ret
scas
xor
adc
outs
lds
ror
mov
(bad)
xor
cmp
lods
out
sbb
pcmpgtw
out
ds
or
cs
and
cmp
sbb
lods
fwait
dec
fisubr
xor
xchg
and
jno
mov
cmp
mov
jno
neg
pop
mov
shl
push
xchg
mov
lds
imul
sbb
ins
xchg
mov
pop
pop
int3
int3
loope
cwde
inc
ja
xor
pop
jmp
jg
mov
test
jge
inc
or
enter
cmp
sahf
rcr
(bad)
fldl2e
mov
fisub
aas
inc
pushf
add
mov
mov
xor
mov
fadd
div
and
call
mov
cli
ret
xchg
push
jl
or
xor
and
fwait
sbb
bound
fsub
xlat
sbb
mov
mov
not
stos
push
jmp
xchg
ror
jl
cmps
test
jns
cmps
(bad)
aas
dec
ins
scas
fcom
inc
jae
cmps
test
test
stos
cmps
pop
(bad)
leave
jmp
arpl
sub
push
dec
xlat
iret
das
lahf
xchg
fiadd
fldenv
mov
imul
sbb
fucomp
sub
jecxz
inc
fnsave
mov
mov
xchg
loope
jne
xchg
inc
rep
fsub
ins
retf
ins
dec
icebp
sar
stc
ficomp
cli
pop
pop
or
add
sub
push
sbb
movs
add
fwait
xor
push
pop
adc
pop
jmp
and
jmp
jo
mov
inc
int3
push
bound
mov
mov
adc
test
mov
aam
in
es
aad
xchg
jg
add
jecxz
out
std
xor
dec
jl
sub
push
pop
leave
in
xor
pop
test
inc
outs
js
aad
jmp
cmps
js
jnp
fiadd
sbb
pop
and
test
add
cdq
mov
adc
jmp
push
in
push
add
(bad)
retf
ret
adc
sub
sub
mov
mov
movs
inc
jp
sub
pop
outs
push
push
aad
push
xchg
(bad)
xor
sub
addr16
or
nop
cdq
test
mov
aam
dec
push
pop
fninit
das
jne
adc
imul
sub
inc
dec
jne
cmps
call
inc
dec
pop
xlat
xchg
aad
mov
aad
jnp
sti
xchg
cmp
ins
sar
cmp
xor
adc
push
jb
pop
test
push
pushf
(bad)
dec
lods
and
das
outs
js
or
loope
ja
es
je
cmp
add
pop
mov
popa
adc
lock
pop
rcr
js
gs
cmp
mov
lds
(bad)
push
and
jmp
sub
mov
ss
sbb
or
clc
pop
xchg
mov
ins
fdiv
push
adc
ror
(bad)
jmp
aas
mov
retf
inc
jecxz
test
cmps
pop
out
xor
xchg
mov
(bad)
mov
ins
retf
(bad)
loop
xor
mov
movs
push
fst
dec
jne
or
arpl
dec
in
pop
pop
cmp
adc
sar
mov
lahf
fbstp
das
lods
sub
push
and
sbb
pop
std
in
cmp
test
mov
add
inc
xchg
pop
out
(bad)
dec
fwait
add
cmp
pop
adc
add
popa
dec
jno
into
out
je
std
pop
mov
in
jp
mov
jne
push
test
xor
inc
cmp
pop
out
dec
arpl
push
mov
pop
lea
pop
mov
mov
mov
fstp
inc
mov
lock
scas
(bad)
arpl
test
push
mov
fwait
jae
fdiv
bound
lds
push
cmp
adc
sub
cmp
movs
scas
adc
repnz
dec
dec
mov
test
jne
mov
addr16
inc
or
mov
mov
pop
mov
retf
lds
xchg
js
xchg
mov
xlat
ret
pushf
dec
repnz
loope
add
shr
test
test
dec
fisubr
icebp
pop
fs
sub
or
clc
cdq
std
pop
mov
sub
fmul
dec
outs
je
cmp
jmp
jb
or
mov
xchg
mov
outs
inc
sbb
(bad)
cs
gs
in
push
mov
hlt
jb
imul
les
mov
loopne
mov
add
test
mov
std
aaa
mov
xor
ja
daa
std
xor
mov
xor
nop
movs
mov
(bad)
hlt
or
adc
test
into
pushf
add
mov
add
(bad)
mov
(bad)
mov
aas
xor
sti
sub
jle
dec
pop
das
mov
into
add
pusha
shl
xor
ret
add
mov
lods
inc
stos
iret
dec
adc
inc
(bad)
shl
dec
enter
mov
mov
dec
mov
and
push
retf
push
cs
cld
ficomp
mov
scas
cmp
in
mov
ja
ins
mov
ja
sbb
jecxz
imul
out
das
pop
rol
es
add
push
pusha
imul
je
add
(bad)
(bad)
sti
(bad)
sbb
int
das
lods
inc
(bad)
adc
fisubr
adc
push
add
mov
xchg
fild
adc
repnz
inc
dec
fisubr
cmc
popa
jno
sti
inc
popf
rcr
stos
pop
adc
add
add
test
cmp
fimul
outs
jl
adc
xchg
sbb
xchg
and
xor
jb
xchg
stc
pop
xchg
push
add
jle
push
shl
stc
sub
dec
add
xor
push
cmp
js
xor
pop
sub
out
mov
sbb
pop
cmp
in
mov
pop
cld
sar
sub
mov
std
add
pop
and
daa
fist
out
(bad)
addr16
ins
ret
cmp
pop
cmp
stc
push
mov
repz
mov
fisttp
cld
test
xchg
(bad)
into
push
mov
xlat
stc
jbe
inc
pop
pop
sub
mov
xor
mov
xchg
inc
stc
cmc
test
cs
pop
test
pop
shl
mov
mov
je
add
loop
repz
into
cmp
mov
and
stos
inc
daa
clc
add
iret
pop
std
aas
cmps
cmp
pop
je
cmps
xchg
push
mov
push
rcl
sub
push
sbb
push
repnz
push
sbb
push
sbb
sti
imul
cmp
lods
pop
sub
out
adc
xor
mov
dec
mov
in
ficomp
mov
add
int3
or
mov
lahf
jle
sbb
in
lea
sbb
loopne
mov
sub
xchg
jno
xchg
inc
cmps
ss
(bad)
cwde
inc
mov
cwde
fwait
jg
iret
xchg
inc
hlt
hlt
icebp
sbb
mov
imul
cmp
sbb
and
adc
cmp
out
outs
mov
mov
mov
cdq
xor
scas
fisub
movs
popf
add
jge
mov
mov
pop
scas
sub
jg
or
dec
adc
pop
clc
and
iret
(bad)
int
jle
dec
cwde
dec
fcomp
call
outs
out
jle
pop
jo
and
or
inc
inc
scas
xchg
ret
sub
hlt
je
ja
mov
mov
dec
sbb
push
jge
push
sbb
add
or
not
pop
rcl
jle
pop
vaddpd
sub
bnd
leave
cmp
test
in
pop
push
xor
sti
js
aad
push
hlt
inc
ja
sbb
pushf
paddb
iret
aas
(bad)
cld
repz
aas
(bad)
cld
pop
add
add
das
sbb
add
dec
inc
scas
inc
pusha
or
add
add
add
(bad)
(bad)
inc
add
add
add
add
add
add
jns
je
ins
cs
jb
ja
outs
addr16
push
gs
imul
xor
xor
inc
jne
je
jb
cmp
jb
ins
sub
push
jne
ins
imul
imul
bound
xor
data16
xor
fs
add
adc
gs
cs
jb
ja
outs
addr16
imul
add
popa
je
pop
add
add
add
add
add
lsl
add
mov
mov
inc
or
add
or
add
add
add
add
or
add
add
pusha
outs
rol
add
add
inc
dec
inc
add
mov
or
popa
add
jo
pop
jae
add
ret
add
push
ret
add
outs
test
add
adc
inc
inc
push
pop
inc
in
rol
add
xor
movs
dec
inc
mov
and
arpl
cmp
cmp
data16
jo
mov
adc
mov
add
add
push
add
out
inc
pop
fadd
xchg
aas
mov
icebp
mov
jbe
sahf
inc
sub
push
xor
inc
out
fs
scas
ret
in
jmp
mov
pop
(bad)
mov
in
jmp
int
mov
add
inc
push
inc
adc
fcomp
sbb
clc
push
imul
push
lahf
ss
ret
xchg
add
data16
mov
jmp
or
loop
jnp
xchg
(bad)
mov
repnz
outs
mov
and
push
mov
pop
or
ja
xchg
stc
sbb
movs
test
push
inc
dec
leave
popf
xor
add
dec
pop
xor
(bad)
mov
idiv
inc
xchg
daa
mul
imul
push
lea
push
(bad)
lea
cs
es
jmp
call
test
movs
or
lods
jnp
jbe
aad
pop
mov
rcr
push
dec
(bad)
iret
mov
mov
clc
test
bound
out
cld
test
mov
inc
aam
lods
mov
add
cmp
idiv
repnz
push
je
js
mov
call
adc
or
fidivr
push
mov
dec
push
fld
jno
lahf
(bad)
data16
arpl
push
retf
jne
loop
adc
ret
or
mov
ja
xor
push
lahf
push
pop
mov
rcr
daa
cmp
es
add
ins
xlat
mov
sahf
out
or
push
push
(bad)
int
xchg
rol
dec
rcl
pop
xchg
punpckhdq
sar
aas
pop
daa
(bad)
(bad)
into
or
fwait
xchg
(bad)
retf
and
pop
ror
fbld
data16
iret
inc
mov
xlat
fnstenv
das
xchg
push
push
pop
xchg
pop
ss
out
idiv
(bad)
ficom
mov
mov
xchg
xchg
ret
push
(bad)
scas
test
pop
je
int3
stos
jl
add
jnp
xchg
scas
pop
and
fcmovnb
mov
scas
out
push
sbb
test
icebp
adc
nop
sub
mov
sub
(bad)
ins
test
mov
and
mov
mov
(bad)
adc
ins
int
fidiv
repz
dec
add
shl
mov
pop
xchg
add
adc
pusha
fist
cmc
mov
sub
sbb
pusha
movs
aaa
fucomi
cli
pop
out
xlat
push
retf
mov
mov
pop
jecxz
sub
aas
cmovp
inc
jle
fnstsw
sbb
fnstsw
adc
xchg
ret
addr16
sub
lock
jp
push
out
repnz
add
enter
mov
mov
push
mov
mov
stc
jb
pop
push
popf
shr
popf
addr16
xlat
movs
inc
inc
mov
cld
movs
inc
xchg
jns
pop
popa
xor
mov
jmp
stc
pop
pop
es
call
xchg
ret
push
fsub
cmc
repz
cmp
repnz
and
adc
inc
and
push
pop
xchg
or
adc
inc
jge
cmp
aas
test
pop
pop
xor
lds
dec
push
adc
lods
(bad)
jmp
loopne
jns
dec
lahf
jno
xor
fisubr
movs
icebp
mov
jne
test
and
repz
sbb
shl
and
push
mov
mov
mov
dec
scas
icebp
adc
inc
cmp
xchg
rol
cmps
inc
or
mov
popa
and
add
test
jmp
dec
clc
rol
fld
inc
(bad)
in
add
cmp
push
jp
or
in
push
ret
mov
jecxz
je
pop
xchg
pop
lock
xchg
push
cwde
in
pop
fstp
mov
fsubr
pusha
dec
sahf
sahf
inc
ja
pop
retf
test
push
xchg
adc
mov
jmp
leave
scas
das
dec
test
jmp
sub
dec
ret
in
mov
push
push
cmps
aas
or
movs
cmp
fdivrp
stos
mov
jbe
fs
add
inc
imul
mov
rol
xor
mov
mov
mov
movs
mov
dec
ret
retf
fld
fldenv
rol
dec
imul
cld
inc
fidiv
xor
push
retf
repz
mov
push
inc
rcl
jo
lods
mov
mov
arpl
xlat
dec
imul
imul
(bad)
jbe
fcmovnb
pop
cmp
shl
sbb
jnp
push
push
out
test
cmp
or
pop
jns
sbb
out
jbe
out
mov
dec
loopne
adc
cld
xchg
(bad)
add
iret
sbb
retf
adc
inc
and
xor
push
(bad)
repz
or
mov
data16
into
in
leave
nop
sub
mov
and
pop
add
mov
je
inc
inc
mov
xchg
hlt
mov
push
add
rcl
push
sub
out
outs
dec
cmps
sbb
and
cmp
dec
(bad)
mov
jge
pushf
je
add
cmps
ror
fisubr
add
loop
daa
push
dec
test
sub
xor
mov
push
lods
pop
xor
cmp
dec
pop
lods
lock
adc
daa
push
and
pop
pop
into
hlt
int3
(bad)
or
(bad)
call
dec
rcr
lods
lds
fcmovbe
test
out
loopne
mov
sub
jge
mov
or
jne
aas
or
mov
and
sbb
sub
(bad)
rcr
jae
pop
fiadd
addr16
mov
push
mov
pop
cmps
int
popf
add
mov
or
imul
add
imul
nop
inc
xchg
jge
imul
or
lock
sub
out
cmps
xchg
(bad)
jae
(bad)
call
jbe
pop
inc
mov
outs
(bad)
cli
add
es
rol
in
adc
imul
or
cli
test
outs
sbb
std
out
ins
mov
nop
sbb
push
sub
cmp
xor
cdq
popf
mov
fist
shl
aas
inc
mov
cdq
neg
lea
mov
fwait
imul
cmp
scas
adc
(bad)
jo
cmps
fild
adc
jecxz
fidivr
sub
cwde
gs
xchg
addr16
pushf
int
cmp
jne
outs
call
mov
outs
sub
loopne
mov
sub
icebp
xchg
in
retf
pop
or
stc
push
les
mov
jae
inc
push
and
mov
dec
fsub
std
push
dec
or
rol
les
pushf
std
fisttp
cmc
adc
jg
jne
or
sbb
bound
push
push
mov
mov
jns
aaa
outs
and
scas
xor
test
in
sub
stc
movs
jmp
mov
sub
sbb
ret
mov
mov
and
in
sub
pusha
fimul
jmp
das
xchg
or
mov
fwait
sbb
fnstcw
push
sub
clc
into
jmp
dec
sbb
fwait
pop
jae
sub
inc
lock
loop
xchg
shl
into
ret
cmp
cmp
push
retf
sbb
push
jne
addr16
pop
mov
loope
daa
adc
sahf
retf
jmp
add
pushf
sbb
aaa
push
sub
jl
fisttp
leave
(bad)
shl
into
mov
mov
iret
scas
fdivrp
(bad)
lock
imul
jmp
mov
mov
fnstsw
or
inc
scas
js
scas
jae
xchg
jb
data16
and
jb
sub
inc
shl
div
ret
jns
aam
jno
sub
xchg
add
and
adc
jno
dec
push
sub
sub
mov
jmp
push
outs
and
cmp
pop
sahf
test
jae
jo
mov
loope
adc
std
inc
rcr
jbe
nop
add
icebp
loope
out
mov
sbb
movs
push
dec
arpl
adc
push
mov
les
sbb
push
retf
add
pop
ds
or
sbb
xchg
dec
clc
jmp
aad
bound
dec
jle
aaa
fild
cmp
jae
arpl
sahf
and
sbb
push
cmp
mov
gs
ret
jns
dec
int
mov
test
cmps
push
or
jg
gs
xchg
jp
cmp
cmps
stos
icebp
fwait
sub
daa
fstp
loopne
in
mov
fstp
pop
ins
and
dec
js
mov
cmp
xchg
sbb
cli
and
xor
enter
xchg
nop
xchg
xchg
call
sbb
cmp
clc
ficomp
shl
je
(bad)
jge
aas
xchg
hlt
cli
les
outs
add
adc
fwait
xchg
int
loop
cmc
in
jmp
(bad)
or
or
pop
adc
sub
cmp
dec
fcmovne
pop
dec
test
imul
ins
mov
add
jb
(bad)
loopne
sbb
ret
push
jbe
pop
cmp
lahf
xchg
cmp
call
pop
and
pop
rcl
adc
xor
sub
and
add
jmp
sbb
fsubrp
aas
mov
call
jecxz
inc
fcom
xor
ror
rcl
cmp
out
inc
(bad)
or
int
fild
xchg
mov
xchg
int3
js
or
mov
sub
fisttp
push
or
push
sub
fld
push
hlt
popa
jmp
stos
sahf
into
dec
and
mov
loopne
adc
popa
dec
sub
fistp
dec
in
mov
inc
jmp
add
pop
dec
inc
js
(bad)
xor
fidivr
mov
es
xchg
cdq
mov
icebp
lea
movs
jle
fmul
into
rol
xchg
psrlw
cmp
aam
into
movs
inc
inc
mov
sbb
pop
or
(bad)
movs
sub
jle
in
xor
daa
mov
jno
push
gs
or
push
movs
out
sar
std
push
and
ja
add
(bad)
dec
sbb
dec
xor
mov
sub
mov
scas
iret
and
out
mov
push
xor
into
push
aad
test
cmps
jmp
pop
inc
mov
xor
outs
sbb
mov
mov
in
add
mov
rol
(bad)
xor
iret
pop
es
int
push
sub
stos
cld
outs
xor
mov
jbe
ret
enter
js
das
fcom
aad
lods
lods
loope
imul
stos
dec
or
sub
and
int
addr16
xor
arpl
xor
fs
ds
push
arpl
mov
mov
scas
es
not
in
push
jle
xor
xchg
out
cmps
out
pop
(bad)
add
jb
or
mov
pop
not
inc
mov
mov
mov
stos
fucomp
daa
adc
popf
mov
inc
(bad)
repnz
test
sub
adc
enter
lock
mov
mov
les
and
out
test
xchg
xchg
loope
mov
cmps
imul
das
push
xchg
xchg
sub
cdq
push
(bad)
adc
test
jmp
dec
sub
fstp
mov
sub
imul
cmp
ret
jg
outs
jg
mov
in
pusha
jp
fs
or
pusha
test
popa
xchg
cmp
into
jbe
adc
xchg
push
lahf
or
mov
cmp
hlt
sar
mov
inc
js
xor
dec
jno
outs
mov
repz
js
push
cmp
xchg
push
cmps
xchg
adc
nop
mov
and
loop
sar
inc
xchg
gs
arpl
jae
inc
cmp
loopne
sbb
adc
push
int
outs
loop
push
movs
nop
pop
mov
mov
mov
and
outs
pop
bound
imul
and
and
mov
ins
dec
adc
inc
mov
and
lds
pop
test
leave
jae
xor
jle
and
lods
and
les
lock
das
pop
ja
(bad)
add
add
test
sahf
aaa
lds
movs
movs
outs
out
(bad)
out
ins
(bad)
dec
jae
add
scas
pusha
xchg
(bad)
sti
adc
mov
pop
mov
clc
mov
xor
imul
jno
adc
sub
ret
test
fstp
jp
inc
dec
cmp
out
dec
dec
imul
mov
ins
ret
enter
add
les
xor
jbe
icebp
gs
mov
add
push
es
dec
push
xchg
push
jl
mov
jle
xchg
and
test
sbb
jns
add
adc
popf
sti
push
inc
jno
mov
cmc
call
scas
jno
es
sbb
dec
int
and
mov
out
cs
loop
mov
sbb
outs
sub
(bad)
gs
push
arpl
and
lahf
mov
sub
lahf
aas
(bad)
dec
ss
pop
sahf
mov
mov
mov
aas
iret
ret
shr
out
adc
sub
sbb
push
xchg
or
cmps
loope
or
dec
xchg
mov
pop
test
push
mov
or
jmp
adc
jmp
mov
pushf
pop
retf
mov
int3
sti
push
xor
pop
fidivr
mov
pop
in
sub
xchg
in
inc
(bad)
aad
mov
iret
addr16
pop
dec
sahf
out
fucompp
das
fidiv
in
daa
dec
retf
ss
and
pop
jmp
inc
repnz
mov
mov
sbb
leave
or
inc
add
out
cwde
not
cmp
jle
cmp
cmps
rcl
stos
and
jge
dec
add
data16
cmps
mov
test
mov
inc
jmp
add
out
loop
pop
cdq
and
sub
ficomp
pop
imul
std
data16
bound
fs
jmp
inc
sub
mov
ficom
pop
loope
and
sbb
xor
rol
sbb
add
mov
mov
xchg
repnz
mov
sub
repz
pop
or
jp
ins
adc
push
hlt
dec
jmp
gs
(bad)
lods
movhps
push
call
pop
inc
div
loop
adc
mov
mov
jno
call
mov
cwde
sbb
xor
jnp
or
push
mov
cmc
mov
je
cmp
in
cmc
mov
sub
add
or
add
sbb
(bad)
mov
inc
and
and
and
cmpxchg
mov
dec
jmp
jge
in
xchg
je
xchg
test
xor
and
stc
fcmovbe
call
sub
push
or
lds
push
outs
inc
mov
cmp
imul
cwde
inc
loop
xchg
jmp
mov
mov
jnp
or
adc
xor
arpl
enter
in
inc
mov
pop
mov
scas
or
fistp
mov
xor
mov
js
jg
jmp
in
push
xchg
push
push
cdq
aam
scas
jle
dec
cmps
hlt
pop
sub
push
add
fistp
lea
xchg
adc
js
lods
inc
pop
xlat
ja
jno
mov
outs
xchg
mov
adc
cwde
das
jae
pop
int
push
sar
sbb
mov
push
cdq
jle
rcl
mov
iret
imul
div
sbb
push
jbe
mov
xor
xor
call
mov
sub
mov
add
cdq
add
xor
gs
adc
or
int
dec
jae
dec
sahf
push
mov
pop
push
ins
clc
push
(bad)
repz
cmp
fisttp
xchg
mov
xchg
xor
pop
repz
call
and
mov
pushf
shl
sbb
mov
mov
movs
or
pop
jae
lock
sti
jecxz
mov
push
adc
(bad)
cld
repz
aas
(bad)
cld
repz
add
aas
xchg
retf
add
add
add
dec
inc
dec
inc
scas
inc
pusha
or
add
add
add
(bad)
(bad)
inc
add
add
add
add
add
add
jns
je
ins
cs
jb
ja
outs
addr16
push
gs
imul
xor
xor
inc
jne
je
jb
cmp
jb
ins
sub
push
jne
ins
imul
imul
bound
xor
data16
xor
fs
add
adc
gs
cs
jb
ja
outs
addr16
imul
add
popa
je
pop
add
add
add
add
add
lsl
add
(bad)
adc
add
mov
inc
or
add
or
add
add
add
add
or
add
add
pusha
outs
rol
add
add
inc
dec
inc
add
mov
or
popa
add
jo
pop
jae
add
ret
add
push
ret
add
outs
test
add
adc
inc
inc
push
pop
inc
in
(bad)
test
fisttp
into
pop
sar
in
cmps
arpl
scas
cmp
cmps
mov
cwde
mov
aam
xor
jmp
in
stc
aaa
mov
xor
fdiv
pop
pop
bound
dec
and
mov
push
mov
cdq
shl
xor
mov
inc
push
jae
popf
mov
shl
xchg
add
push
pusha
sub
out
jne
imul
jp
add
push
add
or
mov
gs
push
inc
js
mov
and
mov
dec
push
mov
fwait
xchg
std
jge
mov
aas
jo
pop
pop
outs
xor
movs
pop
push
or
push
scas
(bad)
mov
pop
test
jne
cwde
mov
inc
popa
sahf
sub
pop
cmc
inc
mov
mov
in
inc
cdq
sbb
pop
gs
arpl
mov
xchg
inc
jmp
or
shl
jbe
sahf
cmc
mov
jl
add
xchg
cld
xor
sub
sbb
lahf
jp
mov
mov
arpl
jne
cwde
popa
inc
add
fistp
xor
sbb
add
into
sub
inc
pop
out
in
jo
test
rol
dec
cli
add
ret
dec
stc
popa
inc
mov
inc
sub
(bad)
dec
dec
push
and
fcomip
pushf
push
adc
les
les
stos
jmp
sti
retf
inc
dec
das
cwde
mov
(bad)
jmp
xchg
enter
dec
mov
mov
and
push
repz
fst
push
retf
pop
add
scas
push
out
mov
fbld
xor
sbb
inc
push
sbb
fwait
cmp
mov
xor
jmp
dec
movs
dec
jne
mov
mov
rcr
jp
mov
jecxz
icebp
addr16
cwde
and
sbb
out
in
in
jns
test
pop
into
std
add
sub
call
mov
fnsave
imul
mov
xchg
sub
xchg
bound
mov
jo
xor
jge
addr16
das
xor
adc
push
dec
cmp
icebp
cdq
mov
xor
cld
mov
mov
lds
rcr
mov
push
jmp
lods
xor
and
ins
inc
and
fmul
jmp
xchg
mov
(bad)
retf
jae
nop
adc
cwde
aaa
hlt
cmp
pushf
mov
pop
xchg
rol
xchg
dec
daa
scas
mov
pop
js
ror
cmp
mov
sahf
arpl
mov
cmp
sbb
cmps
mov
je
in
push
adc
xlat
fistp
push
ret
sbb
rcl
daa
or
fdiv
fyl2xp1
or
cld
mov
mov
ss
popa
push
adc
and
push
cld
sbb
out
jge
fimul
ss
int
push
ins
push
call
cmps
fld
popf
cmps
cmc
inc
mov
retf
int3
icebp
and
cmp
popf
clc
call
not
inc
les
lods
loopne
mov
scas
ud2
sub
prefetch
xor
push
mov
and
(bad)
cmp
shl
sbb
dec
jmp
cmps
and
or
or
lock
add
mov
dec
dec
movs
rcr
pop
push
data16
cmp
dec
or
adc
add
or
adc
rcl
leave
retf
ret
mov
mov
fistp
(bad)
jl
iret
pushf
jmp
mov
fnclex
or
cwde
fwait
cmp
imul
add
push
xchg
(bad)
lock
cmps
sub
stc
sbb
call
mov
add
fldln2
lahf
sub
sbb
cmp
out
xchg
jle
xchg
push
mov
xchg
mov
pushf
jge
das
dec
test
div
sbb
sbb
retf
dec
adc
ins
mov
fstp
pop
es
cmc
pop
lahf
aaa
push
jbe
outs
repnz
mov
jmp
test
xchg
xchg
jle
jns
(bad)
aam
adc
mov
sbb
fdivr
push
scas
shr
mov
add
icebp
ins
pop
inc
jmp
dec
sub
arpl
cdq
jbe
enter
(bad)
aam
cli
aas
cmp
push
je
mov
into
inc
dec
int3
or
aad
pop
nop
push
inc
test
and
add
(bad)
mov
jmp
dec
inc
mov
movs
inc
sbb
mov
test
dec
(bad)
(bad)
jecxz
xchg
inc
daa
dec
xchg
mov
push
movs
fcomip
mov
jns
push
push
jae
add
xor
xchg
fwait
pop
es
push
push
retf
clc
add
mov
test
jmp
xchg
mov
add
ins
enter
mov
popf
inc
(bad)
das
push
sub
pop
ins
rcl
leave
cmp
pop
xchg
mov
sub
fst
out
and
and
xchg
jne
retf
dec
in
aas
hlt
mov
inc
popf
jne
popf
aad
lahf
outs
(bad)
adc
push
jo
mov
iret
dec
dec
mov
cmp
mov
adc
(bad)
ins
call
push
push
dec
mov
or
adc
add
inc
(bad)
lds
cmps
push
int3
cdq
das
ins
test
pop
jmp
nop
aam
push
push
lods
je
imul
and
rcr
mov
mov
mov
xor
iret
std
bswap
scas
dec
pusha
push
xchg
stos
aas
leave
scas
lods
cdq
rol
aaa
fild
sub
movs
jbe
test
inc
cmp
iret
mov
push
jmp
sub
mov
pop
adc
fisubr
push
das
lea
mov
jne
int
xchg
(bad)
gs
loope
ret
pop
out
daa
movs
mov
or
out
add
inc
(bad)
stos
fldln2
jns
cmp
inc
js
mov
mov
js
fsub
dec
sub
not
imul
test
fisub
cmp
pop
icebp
cmp
jp
cli
dec
xchg
mov
sub
out
dec
xchg
add
dec
stc
in
lds
aas
mov
shr
mov
push
mov
outs
inc
jb
xlat
and
pop
inc
push
(bad)
std
adc
sbb
jecxz
lods
mov
mov
push
cmps
inc
cli
leave
pushf
push
mov
clc
dec
gs
add
mov
scas
jl
inc
adc
dec
adc
sbb
adc
jnp
sahf
fcomp
push
test
enter
adc
(bad)
mov
arpl
lods
les
gs
adc
jmp
stos
jmp
shr
push
push
jns
or
arpl
mov
xchg
inc
sub
cmp
call
aam
sbb
mov
jl
and
push
dec
ss
push
in
gs
shr
iret
iret
arpl
mov
daa
sbb
out
ja
sub
jae
in
mov
jmp
(bad)
cmps
cmp
xchg
hlt
(bad)
xchg
pop
rol
fist
jecxz
xchg
mov
push
(bad)
and
cmpxchg
fbld
and
neg
aam
mov
(bad)
dec
loop
cmps
sar
sbb
test
gs
mov
rcr
sti
mov
movs
pusha
or
sbb
xor
bound
cs
jecxz
or
jns
and
outs
arpl
push
mov
fild
ror
dec
push
mov
mov
jmp
mov
jp
jmp
cmp
cmp
xor
mov
xchg
mul
jmp
rcl
sub
and
push
in
or
sub
xor
sub
and
into
lods
out
push
push
(bad)
xor
and
in
push
rol
fadd
ror
outs
add
imul
ja
outs
(bad)
js
xlat
push
adc
imul
mov
rcl
loop
jae
data16
leave
fistp
or
jge
or
shl
and
push
ins
fcmove
and
in
xchg
inc
sar
jl
or
ror
retf
mov
cmc
daa
dec
cdq
sbb
xchg
aaa
mov
enter
and
mov
call
retf
es
inc
inc
add
pop
pop
movs
mov
ds
dec
shl
mov
mov
and
and
fs
call
add
dec
inc
mov
popa
cdq
push
push
pop
mov
adc
popa
fbld
cs
dec
mov
icebp
ficom
xchg
sbb
fisubr
fist
push
(bad)
aaa
or
(bad)
imul
addr16
ja
jg
iret
jae
pop
pop
jb
add
jns
repnz
jge
push
fist
or
out
sahf
mov
in
dec
cmp
or
push
(bad)
push
test
fisttp
xchg
xor
mov
pop
test
ror
popf
dec
pop
or
mov
inc
dec
adc
(bad)
test
jecxz
xor
xchg
mov
cmp
addr16
sub
popf
iret
adc
(bad)
(bad)
jp
push
jl
mov
cmps
dec
sbb
mov
lahf
popf
push
in
fistp
mov
pop
push
in
jne
push
adc
cli
and
sbb
push
loopne
test
imul
sti
gs
or
movs
out
mov
inc
cmp
cmp
idiv
test
jmp
cmp
jmp
aaa
add
les
retf
xor
mov
es
(bad)
call
cmp
sar
imul
add
call
hlt
iret
sbb
cmp
add
test
push
jmp
imul
mov
jne
push
outs
leave
mov
loopne
xchg
in
(bad)
sti
or
and
mov
retf
mov
or
push
std
push
aaa
nop
xchg
out
stc
ficomp
dec
lock
out
mov
mov
addr16
test
push
fistp
add
sub
repnz
jo
jmp
push
int3
lds
call
xchg
pop
les
ret
pop
ror
mov
mov
mov
adc
mov
jecxz
dec
lock
inc
jge
push
xchg
je
imul
aas
shl
jge
jne
addr16
popa
sub
outs
push
imul
sbb
mov
lea
test
mov
cmp
xlat
adc
movs
mov
push
push
rcl
jo
movs
aas
jmp
cmp
les
iret
gs
dec
aas
imul
int
push
(bad)
in
nop
xchg
xor
leave
hlt
adc
mov
stos
fnstsw
add
cwde
cli
repz
into
cmps
outs
mov
and
mov
xor
std
mov
and
div
iret
push
repz
jmp
outs
into
xchg
fwait
jg
fwait
add
out
adc
(bad)
and
xor
sbb
push
or
pop
or
neg
mov
test
repnz
(bad)
sbb
out
cmp
nop
loopne
outs
jg
mov
hlt
mov
cmp
mov
pop
js
pop
scas
mov
popa
xchg
sbb
fcom
sub
xchg
outs
inc
jmp
addr16
xchg
repz
xor
in
jmp
lock
or
popa
sub
add
and
mov
push
cmp
rcl
cmp
stc
btr
add
push
cmp
sub
and
mov
lods
dec
test
sbb
loopne
enter
imul
mov
lahf
jmp
xchg
cmp
shl
mov
jl
jge
fisttp
sbb
pop
iret
(bad)
dec
scas
mov
inc
and
xor
cmp
jno
inc
sbb
outs
mov
dec
test
pusha
adc
xor
dec
je
push
xadd
fistp
xor
pop
dec
jo
(bad)
aaa
bound
adc
arpl
inc
inc
arpl
js
scas
jns
fnstcw
dec
dec
ret
aaa
sar
leave
push
imul
push
idiv
or
fild
xchg
inc
mov
dec
aam
sbb
xchg
cmp
mov
sub
mov
cmp
xor
nop
xchg
mov
mov
adc
call
sub
and
push
push
push
les
aas
icebp
push
imul
neg
fisttp
push
cmp
lods
sbb
leave
adc
jle
mov
pop
das
adc
pop
imul
out
test
cmp
jl
xor
xchg
pop
(bad)
fld
push
push
int3
add
mov
xchg
push
jp
ja
daa
into
outs
fstp
jns
dec
adc
pop
push
in
adc
repz
push
add
mov
into
cli
popf
mov
mov
inc
daa
add
dec
or
jne
cdq
sbb
sub
sbb
xchg
ror
xor
pop
iret
call
xor
inc
addr16
jb
bound
xor
popf
jge
mov
xchg
scas
mov
and
cld
and
jae
mov
pop
cmps
daa
stos
inc
or
shr
sub
mov
and
inc
div
sbb
in
pop
movs
mov
movs
push
push
dec
rcl
bound
(bad)
leave
sti
sahf
hlt
or
shl
and
ja
sub
cld
pop
sbb
adc
fadd
mov
add
xor
jno
in
fstp
loope
mov
or
pop
pop
loop
xor
lock
psubq
xlat
pop
cdq
xlat
jg
adc
cmp
test
push
scas
xchg
lods
je
inc
in
inc
mov
adc
sub
gs
lock
inc
inc
cs
aaa
add
out
mov
cmp
daa
xor
jo
mov
mov
lods
xchg
xchg
fwait
dec
pop
or
sub
xchg
mov
xlat
mov
fiadd
mov
scas
nop
dec
dec
pop
mov
in
out
xor
fwait
jge
inc
retf
ret
or
cmp
xchg
pop
sub
fstp
adc
shl
jb
dec
or
jae
cmovl
mov
pop
mov
mov
cld
mov
or
inc
dec
mov
loope
mov
or
mov
mov
sub
xchg
or
push
jae
pop
xchg
jmp
psubusw
(bad)
leave
sub
jge
mov
cmp
mov
cld
test
aad
fild
fwait
mov
mov
cwde
test
std
sbb
xchg
pop
(bad)
cld
add
mov
lods
mov
out
ja
shl
jo
cdq
cli
stos
dec
add
sbb
enter
js
(bad)
push
mov
add
jg
mov
adc
cmp
xchg
je
fwait
sbb
pop
mov
test
or
sub
inc
dec
jnp
rcl
sub
in
das
sub
mov
add
test
out
call
or
push
push
(bad)
(bad)
nop
adc
icebp
lods
push
or
adc
enter
mov
outs
sbb
movs
adc
cmps
pop
daa
popf
mov
psrlw
cdq
hlt
xchg
sbb
aam
mov
(bad)
jns
xchg
aas
nop
inc
dec
sub
out
sub
ret
sub
xor
fdivr
pusha
cs
in
add
pop
leave
cmp
mov
nop
bound
fwait
mov
xchg
mov
stos
daa
push
jns
pop
nop
and
call
push
and
lea
mov
jae
loop
push
inc
push
xor
loopne
push
fimul
out
bound
popa
cmc
out
mov
arpl
clc
push
ror
dec
mov
retf
das
mov
dec
push
fcomi
ss
lea
leave
mov
outs
push
dec
fwait
mov
addr16
mov
lods
add
mov
daa
jae
xchg
sti
sbb
xchg
and
std
ret
xor
xchg
cmps
pop
(bad)
in
sbb
or
dec
ins
ja
dec
xor
xor
mov
out
ins
(bad)
or
fld
push
div
push
adc
or
out
shl
sbb
or
add
push
neg
popf
xor
mov
pushf
aam
in
lea
push
sub
inc
xchg
popf
stos
inc
fstp
xor
aad
xor
inc
or
out
jg
stc
out
call
add
inc
pop
call
mov
add
add
dec
inc
dec
inc
scas
inc
pusha
or
add
add
add
(bad)
(bad)
inc
add
add
add
add
add
add
jns
je
ins
cs
jb
ja
outs
addr16
push
gs
imul
xor
xor
inc
jne
je
jb
cmp
jb
ins
sub
push
jne
ins
imul
imul
bound
xor
data16
xor
fs
add
adc
gs
cs
jb
ja
outs
addr16
imul
add
popa
je
pop
add
add
add
add
add
lsl
add
ret
add
mov
inc
or
add
or
add
add
add
add
or
add
add
pusha
outs
rol
add
add
inc
dec
inc
add
mov
or
popa
add
jo
pop
jae
add
ret
add
push
ret
add
outs
test
add
adc
inc
push
pop
inc
in
rol
loopne
dec
lahf
into
imul
popf
cmp
or
xor
xor
hlt
mov
sbb
rcr
mov
xchg
loope
and
sahf
pop
add
popf
(bad)
sbb
dec
adc
ss
lock
mov
imul
leave
xor
xor
mov
jns
inc
inc
rcl
xor
fdiv
ja
push
or
xchg
popa
fist
cld
sbb
rcl
pushf
sar
loopne
inc
or
jae
mov
pop
xor
mov
or
les
sti
test
and
es
xchg
fisttp
sbb
sar
xchg
mov
mov
retf
pop
out
cmp
test
push
mov
imul
mov
(bad)
in
add
xor
mov
or
add
fs
dec
leave
mov
add
rol
aad
(bad)
xlat
call
jns
bound
or
xor
cdq
fstp
adc
push
jo
mov
jp
mov
mov
sti
movs
mov
imul
mov
push
fdiv
test
sbb
pop
ins
jb
lds
ficom
jle
adc
add
push
pop
inc
in
call
mov
sub
scas
pop
data16
xor
and
jecxz
jo
stos
cwde
push
pop
loopne
lods
lock
push
ffree
mov
cmp
jmp
and
mov
cli
(bad)
ds
jge
sub
xchg
dec
retf
out
inc
pxor
jns
jp
sbb
stos
in
mov
jne
xchg
hlt
mov
adc
(bad)
ins
jge
pop
test
inc
comiss
clc
fidivr
dec
loopne
shr
repnz
pop
sub
add
sar
fld
xchg
(bad)
in
inc
pop
add
dec
rcl
add
pop
lods
adc
int
repz
push
cld
data16
shl
out
dec
std
test
lahf
int3
lds
out
xchg
pusha
pop
push
mov
arpl
or
push
repnz
inc
cli
cmp
add
dec
mul
les
xor
cli
sbb
cdq
sbb
jp
test
push
pop
jbe
fdiv
sub
fwait
out
std
outs
xor
ins
iret
mov
mov
and
push
push
dec
adc
lock
xor
cli
mov
jmp
ret
mov
mov
or
shl
retf
hlt
mov
xchg
cmp
inc
out
in
pop
mov
loope
(bad)
nop
cs
mov
(bad)
push
or
sub
jge
loop
rol
sub
test
imul
movs
mov
adc
jae
cmovae
retf
and
inc
push
int3
adc
ficomp
inc
mov
fwait
jl
scas
jle
xchg
(bad)
aam
in
adc
mov
test
cmp
jmp
jns
stos
stos
mov
jmp
add
xchg
mov
clc
jp
test
loop
lahf
xor
and
mov
xor
dec
jmp
fisub
in
xor
in
mov
push
pop
outs
jmp
push
pusha
cmp
fwait
dec
xchg
and
xchg
scas
pusha
add
add
mov
add
mov
xchg
adc
jecxz
loopne
enter
pop
adc
fiadd
test
iret
push
mov
adc
mov
loopne
loopne
push
mov
xchg
xchg
cwde
pop
cmp
fimul
adc
sti
mov
(bad)
hlt
or
ins
mov
or
mov
xchg
fwait
shl
test
fst
cmovne
idiv
test
jecxz
movs
and
mov
outs
pop
or
inc
jnp
dec
cmps
shr
fmul
push
jge
push
xor
stos
xor
push
push
into
cmp
or
cld
adc
xchg
daa
dec
(bad)
ret
das
popa
or
push
adc
jbe
clc
push
mov
es
popf
leave
rcl
fidivr
jmp
imul
daa
fs
pop
mov
dec
and
popa
pop
xchg
cmp
xlat
ins
pop
in
addr16
mov
sbb
add
xchg
push
pop
pusha
std
fsubr
cld
mov
in
sbb
cwde
xchg
js
jno
mov
outs
push
mov
mov
hlt
mov
shl
inc
jle
sub
adc
xchg
xor
dec
in
or
nop
mov
sub
(bad)
jae
rcr
sub
xchg
fisubr
cmp
inc
clc
adc
mov
add
mov
fistp
in
sbb
es
sbb
jb
mov
fnstenv
rcr
mov
dec
pop
imul
push
sbb
ins
out
lea
in
adc
add
mov
mov
pop
cmps
jmp
pop
js
sbb
lock
mov
jae
leave
inc
sub
repnz
add
lods
mov
rol
jge
or
lods
bound
and
mov
pusha
mov
inc
xchg
cld
(bad)
dec
cmp
or
sti
dec
in
push
idiv
test
mov
inc
pop
adc
iret
aad
gs
pop
das
or
popa
adc
pop
mov
xor
pop
test
test
xor
js
xor
mov
adc
(bad)
aad
test
pop
cmp
xchg
in
and
lods
rcl
sub
shl
jp
jp
dec
aaa
stc
mov
(bad)
nop
dec
retf
jo
fistp
push
lods
test
daa
int
dec
enter
mov
inc
hlt
ins
sar
(bad)
push
cmp
loope
movs
clc
repz
jnp
sub
dec
push
pop
neg
and
imul
ins
mov
std
adc
test
(bad)
mov
ret
(bad)
(bad)
repz
outs
ins
pop
je
sbb
inc
nop
inc
int3
adc
mov
std
movs
push
cmp
ds
adc
adc
xor
arpl
xor
add
sbb
sub
jge
fdivr
xlat
sbb
mov
imul
fbstp
nop
dec
inc
pop
fisub
test
leave
test
mov
in
dec
outs
inc
lds
mov
cmp
aaa
out
dec
push
loopne
aad
inc
push
pop
sbb
dec
stc
leave
pop
push
jl
mov
in
xor
pop
pop
fistp
fbstp
push
(bad)
lods
loope
test
inc
fidivr
aam
xor
les
pop
ret
in
xor
out
jmp
sti
in
les
cmp
into
mov
mov
nop
lods
dec
ficom
in
xchg
retf
shl
repnz
nop
mov
(bad)
retf
hlt
ret
pusha
xchg
inc
bound
push
cmp
sub
fs
mov
inc
push
xlat
ficomp
or
xchg
leave
add
push
pop
mov
das
mov
sub
jbe
fwait
test
xor
pop
sar
shl
stos
xchg
jbe
inc
inc
push
lods
jle
rep
daa
imul
sar
enter
or
push
pop
xchg
iret
push
sar
sub
xor
loope
jge
aad
movs
sub
xchg
pop
cld
int
stc
data16
outs
mov
dec
fadd
into
ss
aas
push
xchg
mov
lods
mov
mov
mov
mov
aaa
xchg
xor
mov
into
stos
(bad)
nop
xor
push
(bad)
pop
push
adc
pushf
repz
into
mov
pop
call
jmp
pop
jb
cmp
shl
sbb
jl
push
test
imul
push
ret
mov
adc
outs
sub
jmp
daa
mov
adc
(bad)
xor
call
wbinvd
mov
jb
jmp
fwait
pusha
mov
lods
addr16
push
cmps
add
push
lea
mov
sub
mov
les
inc
mov
adc
ss
fstp
shl
mov
enter
jno
(bad)
jmp
add
jmp
or
das
push
aaa
jns
and
pop
sbb
pop
shr
stos
sub
pusha
sub
adc
adc
sub
dec
xchg
in
xor
in
mov
icebp
aaa
mov
cmp
aad
push
daa
imul
and
pop
cli
in
jb
adc
rcl
loope
(bad)
leave
sti
aad
ins
push
mov
fisub
push
aaa
xchg
pop
repz
cmp
call
pop
xor
(bad)
xor
aaa
out
pop
fcom
dec
leave
stos
push
adc
or
push
pop
(bad)
cli
mov
jg
xchg
neg
call
inc
push
aam
mov
fisub
xor
aaa
setae
es
outs
xlat
not
lahf
add
mov
mov
rcr
pop
dec
leave
fisttp
add
bound
loopne
jge
mov
lds
adc
out
adc
cmp
call
pop
sbb
cmp
inc
(bad)
xor
cmps
xchg
pop
sbb
arpl
jp
mov
mov
inc
adc
push
xor
adc
repz
outs
push
cmp
mov
fcmovne
popf
jmp
scas
dec
add
or
(bad)
(bad)
or
jp
in
gs
clc
(bad)
out
mov
and
lock
mov
daa
or
ja
mov
movs
std
jecxz
xchg
and
popa
xor
call
and
lods
and
ror
mov
repnz
mov
dec
mov
xchg
fsub
retf
xor
ds
mov
mov
mov
in
(bad)
jbe
xor
inc
pop
ds
lock
neg
dec
int3
pop
sub
jg
pop
popf
jge
fidivr
cmps
jp
fcom
cmp
mov
(bad)
js
ins
and
mov
inc
mov
retf
pop
fsub
leave
mov
ins
data16
arpl
and
mov
shl
mov
sbb
jp
sti
push
mov
sbb
popf
jg
dec
imul
fwait
and
mov
leave
cmp
in
mov
jnp
ds
fsub
sbb
scas
sub
and
bound
jp
jb
xor
adc
xchg
and
es
mov
mov
sub
add
jae
push
jns
mov
popa
sbb
push
adc
cmp
xchg
mov
shl
xchg
rcr
push
mov
into
sahf
psraw
dec
js
xor
sahf
xchg
loopne
or
push
jp
movs
movs
jno
lock
out
mov
aas
and
cdq
dec
fiadd
xchg
fist
add
xlat
dec
loopne
or
dec
popa
movs
mov
arpl
ins
mov
gs
and
ret
das
adc
rcl
stos
ret
sub
xchg
sub
call
mov
inc
fist
lahf
je
fxam
dec
pop
dec
xchg
test
inc
xchg
sub
rcl
jnp
xchg
repz
aas
xlat
mov
xchg
cmps
lea
std
jecxz
sbb
or
loop
mov
mov
aaa
pop
xor
lods
clc
adc
test
in
jmp
or
outs
shr
cld
xchg
stos
out
popf
mov
pusha
mov
or
or
sub
xor
pop
mov
mov
push
jns
xchg
jmp
sbb
jle
mov
(bad)
jg
dec
xchg
fisubr
inc
add
push
dec
mov
rol
in
test
gs
pop
add
lahf
popa
jnp
pop
and
sub
(bad)
adc
cmp
dec
rcl
mov
jo
and
das
daa
ds
sub
inc
lea
push
idiv
fsubr
xchg
cmp
out
shl
jmp
jns
ror
add
push
inc
into
xlat
test
or
ret
pop
mov
es
iret
dec
sub
bound
fwait
sbb
ds
mov
int3
(bad)
pushw
xchg
je
jge
das
jmp
ret
xor
and
out
push
inc
loopne
sub
in
rep
test
(bad)
mov
fimul
xchg
rcr
jmp
gs
(bad)
je
movs
cwde
(bad)
cli
mov
cdq
adc
xor
cmp
dec
iret
xchg
pop
and
neg
leave
add
cwde
push
xchg
cdq
dec
cmps
retf
in
movs
aam
loop
sti
jb
lods
mov
call
rcr
data16
pop
cmp
push
pop
dec
aas
sub
cld
test
mov
xchg
push
or
jae
mov
out
xchg
push
add
mov
cli
xchg
shl
push
stos
jl
dec
rcr
pop
fcmovu
push
movs
sbb
push
pop
sub
stc
mov
mov
(bad)
sahf
loop
add
repz
fisubr
and
push
cmc
xor
push
idiv
test
jp
repz
dec
xor
daa
push
add
sub
sub
cmc
lea
sahf
sti
daa
mov
mov
adc
adc
fsub
adc
aam
xor
fmul
jmp
jb
push
jmp
mov
adc
(bad)
cwde
test
mov
xchg
xor
outs
out
mov
inc
xchg
push
enter
dec
dec
fcmovu
(bad)
popf
and
xchg
test
repnz
aad
rol
cmps
sub
dec
inc
sti
cmp
cmp
outs
jp
les
or
mov
scas
dec
das
daa
cmp
movs
(bad)
hlt
jnp
mov
loopne
cmp
outs
nop
dec
xchg
mov
out
lods
sbb
sbb
movs
pusha
mov
(bad)
push
jmp
(bad)
mov
movs
out
mov
jns
mov
push
jae
ins
pop
mov
test
lock
(bad)
jbe
cmp
xor
push
cmp
xor
mov
adc
adc
sub
jb
fcmovnbe
cmp
enter
xchg
mov
fbld
in
es
retf
pop
cdq
cdq
mov
dec
retf
push
push
lds
xchg
cmp
and
loop
(bad)
mul
sar
fs
clc
xlat
in
dec
rcr
retf
pop
fwait
mov
ret
loopne
push
dec
xchg
pop
ret
xchg
mov
inc
stc
and
retf
push
scas
out
mov
inc
push
das
int
arpl
ds
out
push
pop
cmps
xor
test
cmp
fsub
aam
aad
jne
jle
lahf
jl
repnz
movs
push
mov
sahf
(bad)
jbe
push
sub
mov
xchg
fwait
pop
push
push
dec
mov
hlt
sub
mov
jge
addr16
retf
sbb
fsubr
add
imul
xor
and
xchg
or
loopne
or
or
add
cmps
iret
add
(bad)
movs
cli
scas
pusha
arpl
out
xchg
adc
shl
popf
cmps
inc
jo
push
or
pop
mov
test
jl
in
nop
ins
adc
pusha
icebp
fdivr
xchg
rcl
adc
xor
clc
cs
push
adc
in
cmps
test
xor
xchg
mov
push
xlat
jae
sbb
push
mov
push
jbe
pop
movs
adc
jge
jge
inc
addr16
cmc
cmp
dec
pop
jnp
inc
dec
pushf
push
in
mov
mov
movs
scas
mov
stos
inc
add
push
dec
fsub
(bad)
ss
call
or
mov
jnp
mov
das
int
xor
pushf
or
lods
pop
adc
add
add
call
mov
test
mov
int3
das
cmp
or
nop
lods
(bad)
dec
jns
jnp
(bad)
call
mov
inc
in
dec
nop
mov
in
push
test
adc
ja
(bad)
test
xor
sub
xchg
lahf
sbb
push
sub
icebp
sbb
repnz
(bad)
mov
mov
mov
inc
xor
jle
movs
out
shl
xchg
pop
add
in
loopne
lods
xor
clc
xchg
inc
mov
and
add
das
test
cmp
pop
(bad)
clc
out
(bad)
stc
(bad)
fiadd
mov
dec
imul
inc
imul
fbld
in
stos
mov
(bad)
stc
out
jg
stc
out
jmp
sar
pop
add
add
add
dec
inc
dec
inc
scas
inc
pusha
or
add
add
add
(bad)
(bad)
inc
add
add
add
add
add
add
jns
je
ins
cs
jb
ja
outs
addr16
push
gs
imul
xor
xor
inc
jne
je
jb
cmp
jb
ins
sub
push
jne
ins
imul
imul
bound
xor
data16
xor
fs
add
adc
gs
cs
jb
ja
outs
addr16
imul
add
popa
je
pop
add
add
add
add
add
lsl
add
rcl
add
mov
inc
or
add
or
add
add
add
add
or
add
add
pusha
outs
rol
add
add
inc
dec
inc
add
mov
or
popa
add
jo
pop
jae
add
ret
add
push
ret
add
outs
test
add
adc
inc
inc
push
pop
inc
in
rol
loopne
pushf
jmp
cmps
popf
call
push
jmp
rol
leave
mov
xor
fimul
repnz
jns
and
rcr
sub
fcom
repnz
loope
and
mov
adc
ins
adc
(bad)
mov
push
movs
stos
jl
xlat
mov
fst
pop
sub
out
or
dec
pop
add
or
outs
scas
std
xlat
push
and
jno
adc
sbb
jmp
cmp
mov
outs
sbb
sar
rcr
xor
dec
cli
push
sbb
sub
inc
mov
inc
dec
repz
adc
movs
(bad)
sbb
(bad)
sbb
mov
out
cdq
ins
nop
mov
hlt
sbb
pop
(bad)
pop
xchg
push
loopne
and
jne
pop
sbb
es
xchg
lock
aas
adc
js
(bad)
aad
xchg
adc
fisubr
adc
arpl
test
mov
or
xlat
xor
jb
xor
and
dec
add
push
mov
push
pop
or
push
cmp
pop
shr
mov
stos
cdq
lods
cmp
jle
dec
mov
inc
into
pop
pop
cmp
dec
jo
and
mov
shr
fbld
aaa
out
out
and
cdq
mov
pop
xchg
cmp
aam
mov
gs
stc
mov
retf
mov
dec
and
outs
push
mov
mov
ficomp
push
add
arpl
stc
out
enter
jb
mov
xchg
sbb
xchg
mov
test
sbb
rcr
stos
cmp
sbb
inc
push
add
ss
adc
and
mov
std
std
pop
and
outs
scas
jnp
fst
iret
lahf
mov
or
cwde
aad
(bad)
fild
retf
sahf
arpl
aad
xchg
sbb
repnz
pop
mov
jo
cs
dec
loope
ret
loop
cmps
imul
mov
cmp
dec
stos
and
cmps
xchg
push
ins
pop
adc
fiadd
and
dec
mov
adc
idiv
mov
ss
mov
movs
jae
int
xlat
pop
call
dec
pop
xchg
xchg
jmp
pop
sbb
mov
jge
movs
cmp
arpl
test
push
push
xor
clc
cmp
imul
mov
aam
out
mov
ins
push
xchg
xor
cmp
pop
pop
or
and
ficom
adc
mov
clc
mov
add
adc
lods
add
out
(bad)
jno
mov
icebp
mov
dec
(bad)
mov
push
outs
mov
in
cmc
scas
ficomp
repz
pop
pusha
sub
add
cwde
inc
hlt
inc
test
sub
int
cmp
mov
call
sti
adc
mov
jl
pop
shr
xor
addr16
mov
xor
mov
push
mov
call
dec
dec
mov
lock
std
arpl
sbb
cdq
popa
loopne
cmp
xor
xchg
push
scas
mov
lods
and
fwait
mov
push
rol
out
pusha
aas
sbb
add
ds
cmps
(bad)
test
jle
call
popa
cmp
or
jne
pop
jo
mov
push
in
mov
cmp
jnp
mov
mov
ja
dec
in
cmp
lea
lods
or
pop
inc
or
icebp
std
mov
xchg
xlat
xchg
das
mov
loop
jg
adc
pusha
or
sar
shr
imul
inc
xor
sbb
mov
pavgw
fdivp
or
cmc
pushf
rcl
pushf
jmp
inc
xchg
sub
aad
add
xchg
inc
mov
repz
mov
(bad)
div
push
xchg
sahf
jb
xchg
or
cmp
hlt
mov
movs
xchg
inc
retf
jmp
out
cmp
fist
icebp
rcl
mov
lock
lods
enter
sub
inc
add
mov
mov
push
call
xchg
cld
inc
pop
fwait
mov
cmp
or
push
or
ss
shr
popf
pop
outs
adc
push
jns
addr16
test
(bad)
cmp
stos
jecxz
sub
push
dec
push
push
cld
es
mov
jle
add
or
jns
outs
icebp
shl
mov
sbb
xor
fisttp
push
xor
aaa
mov
(bad)
int3
sysret
push
mov
icebp
je
imul
sub
adc
aaa
jne
mov
mov
cdq
push
mov
std
sar
sbb
jns
dec
popa
sbb
jmp
mov
inc
int3
jmp
jp
lods
dec
inc
pop
inc
dec
and
xchg
push
std
xchg
inc
pop
in
push
pop
xlat
add
mov
lods
mov
sub
cwde
adc
cmp
stos
jns
or
xor
dec
xchg
and
dec
cmc
je
repnz
(bad)
xor
add
and
pop
sahf
pop
call
sbb
cmp
and
push
adc
fs
int
push
push
pop
xchg
mov
fst
push
lods
pop
xchg
mov
sar
nop
adc
movs
cmp
fs
cmp
or
jno
enter
popf
(bad)
enter
jmp
int3
ins
pop
fisubr
cld
pop
fcomp
mov
es
nop
push
sbb
out
cwde
stc
loop
in
dec
aad
ret
cmp
add
dec
push
cmp
jae
dec
cmp
push
push
add
sahf
cmps
addr16
cs
pop
std
or
xchg
jno
fmul
adc
xchg
cmp
cmp
fcom
stos
adc
or
sub
pop
test
sbb
in
fsub
lfs
dec
cmp
cwde
ds
mov
out
(bad)
int
imul
or
xchg
(bad)
loope
clc
sub
stc
push
jo
repz
jae
ret
sub
fadd
sbb
sbb
ins
add
push
jmp
int
repz
pop
jecxz
xor
xor
call
mov
mov
xchg
lock
and
mov
ins
xor
aam
cli
cdq
sbb
or
jb
mov
jmp
xchg
out
in
mov
sti
popa
clc
call
mov
mov
std
ret
imul
mov
mov
adc
mov
xor
pop
int3
xchg
and
retf
pop
lods
xchg
dec
int3
xor
push
icebp
es
fld
pop
push
pusha
add
popa
fwait
scas
sub
add
push
xchg
repz
xor
cmps
test
jmp
mov
or
iret
lea
pop
ror
ret
mov
stos
pop
pop
xor
ins
cmp
sbb
add
call
or
push
adc
push
mov
xor
lods
stos
jbe
pop
cdq
pushf
dec
cld
jge
or
sbb
push
mov
push
pop
in
(bad)
xchg
push
and
push
ret
nop
xor
fild
fist
add
int
xchg
push
popf
inc
pop
jno
fwait
icebp
(bad)
aaa
pop
sahf
test
pop
mov
cld
and
cmps
pop
lods
adc
and
push
add
out
mov
lock
int
and
test
(bad)
push
rol
(bad)
fisubr
imul
dec
outs
mov
add
inc
cmps
leave
int3
(bad)
adc
mov
loope
scas
push
popf
sbb
sbb
mov
sbb
or
sti
bound
adc
les
popa
mov
arpl
mov
cli
outs
mov
dec
push
pand
xchg
arpl
fdivr
push
xchg
mov
fisubr
std
push
pop
idiv
xor
outs
pop
cwde
dec
inc
pop
daa
(bad)
js
lods
xchg
ss
push
add
cdq
je
mov
and
(bad)
lods
sub
and
cmp
rcl
int
icebp
xor
mov
jmp
into
arpl
and
in
mov
inc
dec
sar
cmp
dec
gs
jns
xchg
sahf
cld
and
sbb
push
in
mov
pushf
xchg
xor
aad
sti
inc
jae
mov
ins
lds
lock
sub
imul
cld
sbb
out
call
push
push
mov
adc
mov
stc
inc
fwait
rol
jle
push
and
inc
mov
add
call
mov
sbb
dec
lahf
push
sub
lea
cdq
pop
sub
inc
fbld
out
shr
jmp
data16
sbb
bnd
sub
pop
shl
or
mov
(bad)
dec
push
out
adc
mov
retf
jno
cwde
push
in
sbb
aaa
mov
and
stc
adc
mov
sub
stc
gs
cs
add
sbb
adc
inc
aas
lds
daa
or
dec
add
lock
repnz
adc
jno
mov
enter
popf
(bad)
outs
add
pop
cmp
sbb
pop
add
inc
add
inc
sbb
push
stos
xor
jae
dec
push
jmp
sti
xchg
movs
or
xor
xor
add
mov
mov
stc
xor
or
mov
pop
sbb
or
stos
push
out
lods
imul
cmp
fcomp
mov
clc
mov
mov
ror
test
out
cmp
dec
pop
mov
add
outs
lods
(bad)
add
out
iret
lahf
jge
adc
xchg
dec
das
xchg
or
aas
sub
xchg
push
gs
repz
or
outs
stc
fwait
mov
sbb
in
into
test
in
push
pushf
out
fst
jg
mov
jmp
outs
loopne
xchg
(bad)
mov
mov
(bad)
or
add
pop
fild
aaa
mov
sub
in
inc
mov
int3
ins
xchg
sti
and
call
dec
das
cmps
and
wbinvd
adc
adc
in
push
sbb
stos
test
xrelease
dec
dec
out
mov
xor
sbb
and
jmp
aam
std
rcl
add
ss
retf
movs
(bad)
mov
inc
stos
push
push
inc
pop
nop
pop
test
inc
into
pop
add
xor
(bad)
aas
test
add
mov
ins
inc
add
hlt
xor
jp
xor
jmp
push
jge
mov
cli
in
pop
out
ds
repnz
pop
dec
and
mov
popf
scas
adc
(bad)
and
xlat
dec
pop
jp
mov
in
pop
fst
dec
daa
ret
outs
mov
jmp
leave
movs
inc
jle
mov
or
ret
mov
icebp
xor
scas
pop
gs
out
add
mov
sbb
sbb
adc
imul
popf
dec
mov
imul
jne
xchg
jo
inc
in
dec
mov
mov
gs
pop
mov
add
sbb
pop
sub
jne
or
jge
hlt
cmp
sub
mov
adc
lods
or
cmp
and
adc
imul
daa
leave
es
xor
ret
out
push
dec
ret
(bad)
ror
pop
(bad)
ficom
cmc
sub
mov
adc
sbb
mov
and
movs
or
push
outs
mov
pop
neg
jns
cwde
or
bound
dec
add
adc
lods
cmp
inc
in
(bad)
ss
pop
ret
dec
adc
or
mov
data16
pop
loop
mov
fcom
(bad)
call
and
imul
cmp
je
data16
sub
(bad)
ja
shl
mov
cs
test
cmp
jge
cmp
in
push
dec
cmp
cmp
mov
push
push
faddp
ret
les
xchg
mov
repz
cmps
bound
add
jl
push
cmp
jle
fsub
xor
in
pop
(bad)
sub
call
ins
ja
jle
xchg
pop
div
out
push
mov
xchg
(bad)
scas
ret
std
and
or
fsub
por
or
pop
gs
sbb
jne
ficomp
mov
push
shr
shl
xor
sub
enter
ror
dec
dec
mov
fwait
mov
xchg
push
movs
addr16
and
adc
cmp
add
std
pushf
into
es
mov
popf
nop
jbe
adc
dec
(bad)
jae
addr16
pop
inc
test
mov
and
sbb
(bad)
gs
(bad)
cmp
lea
adc
out
dec
mov
retf
mov
adc
xor
dec
je
pop
cmp
fdivr
ja
xchg
mov
retf
outs
mov
mov
bound
mov
pop
std
mov
test
pop
aad
add
cmc
xchg
(bad)
ret
scas
imul
sahf
push
mov
fs
xchg
xor
add
dec
repz
data16
ds
dec
mov
pop
cdq
dec
jmp
scas
push
pop
shl
cmps
rcl
mov
mov
imul
and
push
jge
jg
pusha
jae
lods
in
mov
into
lods
cmp
sub
sbb
mov
stos
je
retf
mov
ins
and
adc
(bad)
pop
cld
sbb
pop
mov
sbb
jmp
push
lea
stc
adc
ins
mov
arpl
sbb
popa
je
pop
movs
jae
pushf
scas
les
cmps
out
mov
mov
mov
adc
sub
out
(bad)
fs
pop
outs
stos
pop
pop
sbb
adc
dec
add
cmp
sub
out
shr
sbb
lods
jp
lods
out
inc
arpl
xlat
les
mov
stc
jno
push
jno
sub
test
mov
and
imul
addr16
(bad)
test
push
dec
mov
fprem1
aaa
jl
push
sti
jno
dec
add
and
ret
xor
sub
(bad)
cmp
pusha
ss
popf
xchg
sar
push
out
mov
and
call
jne
ds
sub
repnz
xor
stos
jne
adc
jge
mov
lea
xlat
arpl
fnstcw
fiadd
scas
add
int3
pusha
lods
jp
pop
inc
sub
cld
js
int
push
push
dec
xchg
stos
xor
repnz
cs
das
test
es
fimul
clc
fistp
or
enter
mov
xchg
push
dec
loope
cmps
pushf
xchg
fcom
xor
jle
(bad)
cld
imul
mov
mov
aam
and
popf
adc
push
cmps
sbb
ret
scas
and
push
out
stos
push
bnd
dec
mov
test
or
mov
mov
adc
mov
sub
test
rcr
cmp
xor
out
call
add
cdq
adc
out
cmp
(bad)
mov
je
jbe
or
dec
mov
pop
sub
pop
pop
in
dec
out
shr
mov
xchg
sbb
and
repnz
or
dec
cdq
xchg
imul
fidiv
xor
fistp
lods
into
add
cmc
push
ja
test
into
or
(bad)
jmp
repnz
lods
jmp
into
inc
jb
push
push
inc
div
mov
mov
stos
jp
cmps
jle
mov
add
imul
cmps
mov
adc
push
sbb
hlt
pusha
jle
pop
hlt
das
in
sbb
inc
sub
(bad)
daa
daa
push
(bad)
inc
shr
jae
ds
inc
fld
cmp
ja
leave
cmp
mov
xor
cs
vfrczsd
repz
push
lods
xlat
xor
cld
addr16
mov
ret
sbb
mov
inc
rcr
sub
(bad)
dec
jnp
mov
pop
and
or
mov
loopne
mov
(bad)
xchg
dec
jl
scas
fwait
dec
(bad)
fld
gs
sub
cmp
mov
push
ret
push
retf
jns
mov
pushf
push
jmp
jbe
hlt
nop
loop
bound
pop
cmp
dec
cli
test
lock
aas
(bad)
cld
repz
aas
(bad)
cld
repz
add
pop
hlt
int3
loope
cmps
add
jecxz
add
add
dec
inc
scas
inc
pusha
or
add
add
add
(bad)
(bad)
inc
add
add
add
add
add
add
jns
je
ins
cs
jb
ja
outs
addr16
push
gs
imul
xor
xor
inc
jne
je
jb
cmp
jb
ins
sub
push
jne
ins
imul
imul
bound
xor
data16
xor
fs
add
adc
gs
cs
jb
ja
outs
addr16
imul
add
popa
je
pop
add
add
add
add
add
lsl
add
mov
mov
inc
or
add
or
add
add
add
add
or
add
add
pusha
outs
rol
add
add
inc
dec
inc
add
mov
or
popa
add
jo
pop
jae
add
ret
add
push
ret
add
outs
test
add
adc
inc
inc
push
pop
inc
in
rol
loopne
dec
out
pushf
sahf
idiv
ins
dec
jae
cmps
mov
mov
repnz
fdiv
push
shl
je
pop
in
repz
mov
pop
dec
pusha
call
sbb
sbb
dec
mov
arpl
jns
cmp
mov
push
dec
adc
(bad)
gs
cmc
clc
push
imul
call
fwait
jno
ds
jecxz
jns
fcomp
jmp
fnstcw
mov
or
xchg
jge
in
movs
jmp
test
daa
fnstcw
movs
aaa
mov
ja
outs
call
out
xchg
mov
mov
fdiv
retf
jbe
test
cmp
inc
xor
adc
(bad)
pop
popw
inc
xor
push
mov
mov
sbb
repz
and
or
fldenv
in
jmp
dec
sbb
cmps
adc
sub
sub
stos
pop
clc
pop
cdq
aaa
das
sbb
inc
jmp
aaa
mov
inc
fistp
ror
push
pop
scas
shr
adc
bnd
lahf
jmp
scas
mov
bound
and
sti
(bad)
mov
cmps
ret
imul
push
sahf
jb
jmp
ret
clc
stc
xor
and
cmp
add
fwait
bound
jo
sbb
popf
rcl
les
dec
mov
cwde
into
clc
xchg
lods
(bad)
pop
pushf
jge
xor
ret
xlat
iret
jp
push
es
mov
inc
inc
cmp
cmp
enter
fnsave
sar
sub
shl
inc
pop
adc
out
into
inc
xchg
mov
retf
pop
mov
xor
mov
or
mov
(bad)
mov
popf
xlat
sub
clc
imul
cmp
or
or
pmaddwd
mov
cmp
ret
retf
jg
aad
mov
mov
sbb
push
sar
popf
push
pop
dec
andnps
std
mov
jae
jbe
fnstenv
ficomp
data16
sub
loope
sbb
popf
pop
push
fwait
std
mov
in
adc
cmps
add
adc
xchg
fwait
test
mov
ret
imul
mov
or
int
movs
lods
mov
or
btc
int
push
fild
jecxz
mov
rol
mov
or
xchg
mov
push
fild
pop
ja
adc
das
inc
pop
imul
adc
xchg
lea
mov
sbb
add
into
out
call
test
scas
lahf
mov
lahf
pop
(bad)
jbe
push
inc
xor
pop
add
sub
adc
mov
lea
enter
jb
jns
add
pop
adc
cdq
cmps
loop
push
es
sbb
(bad)
pop
pop
sub
out
pop
push
std
xchg
shl
mov
rcr
jp
scas
xchg
jmp
stos
sub
repz
jbe
mov
stos
rcr
mov
jae
fld
loope
or
std
push
xchg
jmp
lea
and
push
and
stos
adc
sub
push
add
jno
not
push
xor
add
sub
jle
inc
cdq
and
or
mov
test
pop
aad
adc
dec
jle
fdivr
cmp
jno
fs
jo
pop
and
cmp
outs
test
dec
add
fs
je
inc
pop
mov
or
sbb
iret
sub
push
cmp
mov
je
into
into
xor
lods
or
mov
pop
pop
adc
sbb
rol
aas
sub
jae
sbb
enter
in
aaa
pop
call
push
push
aaa
mov
cmp
inc
cmp
inc
push
(bad)
mov
mov
jmp
jns
dec
cmp
leave
cli
test
and
movs
nop
call
and
mov
dec
scas
or
inc
retf
test
sub
push
outs
test
dec
rol
aaa
jecxz
addr16
xchg
mov
retf
test
push
or
cmp
iret
(bad)
sar
jecxz
in
stc
fwait
out
lods
jge
sub
mov
adc
mov
adc
add
inc
out
mov
jne
pop
adc
jbe
dec
loope
shl
js
stos
sbb
push
jae
faddp
(bad)
ins
popf
movs
push
jle
mov
and
xor
aas
cmc
lock
mov
push
pusha
inc
or
sahf
int
outs
xor
inc
jmp
(bad)
push
push
mov
sbb
or
fdiv
hlt
daa
shl
or
cwde
cmps
scas
pop
(bad)
pop
outs
(bad)
je
or
push
pusha
cmp
ins
addr16
ret
lods
out
imul
sub
adc
inc
ss
cs
test
clc
add
inc
fucomp
and
cmp
adc
push
push
call
int
test
mov
jle
test
repnz
push
cld
sahf
cmc
ss
mov
dec
pop
mov
push
sub
mov
lods
adc
ja
mov
retf
ret
jnp
fidivr
call
mov
and
mov
push
dec
cdq
lock
fs
outs
std
mov
pop
xor
mov
or
sahf
cmp
inc
jl
rcl
in
dec
ds
ret
or
dec
inc
xor
gs
test
jmp
pop
push
mov
push
sbb
mov
or
xor
loop
push
(bad)
jo
aad
les
stc
ins
cld
in
pop
popf
mov
rol
jl
aad
fld
out
push
xor
or
or
pop
xor
ins
pop
shr
xchg
shl
lods
js
fcmovnu
xor
mov
sbb
jle
pop
fisub
mov
popf
push
mov
aas
jl
fwait
imul
add
rcl
add
or
mov
test
scas
push
mov
iret
aaa
popa
ss
imul
fdiv
sbb
xor
sub
icebp
jbe
adc
push
popf
jno
aam
dec
push
push
push
sub
push
int3
adc
test
pop
(bad)
xchg
je
cld
nop
push
adc
cmp
dec
and
cmp
pop
gs
cmp
movs
xchg
sub
push
in
sub
ror
cmc
(bad)
xor
sbb
sub
(bad)
ins
xchg
jno
mov
push
lahf
pop
frstor
xor
jno
xchg
das
xchg
xlat
jecxz
sbb
dec
cmp
lods
cmp
ror
data16
in
rep
das
cmp
pop
movs
dec
mov
outs
out
jbe
aas
jmp
mov
xchg
xor
cmp
sub
jae
pop
cwde
(bad)
mov
jo
adc
jno
loopne
sub
mov
stos
cmp
xchg
xor
inc
inc
mov
mov
cdq
aad
mov
in
stc
mov
pop
ins
pop
fist
stos
outs
xor
xchg
enter
xchg
in
out
pop
sbb
loopne
cmp
out
imul
jns
pusha
jns
and
mov
inc
mov
das
fild
cmp
aad
jge
and
mul
mov
enter
std
aam
loopne
dec
inc
xchg
mov
imul
pop
outs
and
xor
nop
shl
cmp
hlt
inc
push
out
inc
pop
jl
into
stos
sub
xchg
mov
rol
pushf
outs
inc
stc
jmp
and
fistp
inc
add
mov
xor
fst
dec
(bad)
fmul
pushf
hlt
jns
inc
dec
mov
mov
fs
in
bound
or
cld
adc
fwait
jmp
jno
lock
test
repz
push
lahf
push
mov
xor
jg
jbe
mov
xchg
ror
shl
scas
pop
loop
sub
and
xchg
call
jmp
xor
aaa
pop
stc
mov
mov
stos
and
jne
arpl
retf
loope
loop
cmp
push
inc
cmp
add
mov
cdq
adc
push
cs
int
dec
mov
pmulhuw
mov
cmp
movs
(bad)
sbb
ins
adc
inc
lahf
imul
test
pop
push
add
mov
movs
scas
cmp
xchg
icebp
cmps
retf
stos
mov
leave
xchg
ss
imul
dec
push
mov
inc
inc
mov
jp
push
inc
mov
neg
inc
in
(bad)
push
pop
push
pop
in
mov
mov
or
sub
xor
imul
ss
inc
sbb
aam
fdecstp
and
fwait
push
in
mov
fwait
jle
cwde
test
fwait
outs
pop
bound
in
clc
adc
mov
mov
aam
cmp
add
mov
loopne
mov
pop
inc
inc
rcl
xchg
sbb
fidivr
jge
fcmovbe
(bad)
jmp
pop
std
push
jnp
rcl
arpl
push
cmps
xchg
in
push
(bad)
call
mov
add
dec
jecxz
pop
adc
cli
mov
cmps
xor
addr16
addr16
xchg
cmp
xchg
enter
dec
clc
sub
lea
mov
pop
mov
sti
cmps
xchg
js
adc
(bad)
jecxz
adc
cmp
jo
mul
mov
mov
jae
fisttp
jecxz
mov
call
mov
push
sbb
xor
add
inc
sub
repnz
rol
pop
or
cmp
mov
lds
adc
cmps
hlt
and
cmp
hlt
pop
sahf
call
add
or
cmp
cmp
stos
fisubr
movs
push
add
ficom
adc
jg
lods
xor
xchg
xor
test
dec
xor
in
js
in
sub
hlt
or
xor
mov
rol
retf
leave
into
push
addr16
and
jge
xchg
mov
retf
jmp
aaa
sbb
js
lea
sub
scas
ds
(bad)
idiv
addr16
jmp
jno
mov
fldenv
push
fisubr
inc
xor
fucomi
jbe
jnp
mov
cmp
and
aas
mov
ficomp
ret
sub
push
fwait
or
jmp
jmp
sub
or
inc
neg
and
sbb
sub
pop
clc
jae
dec
xor
cmp
ds
mov
dec
(bad)
and
xor
cdq
inc
inc
leave
push
shl
in
fwait
add
es
into
mov
mov
push
out
push
or
cmp
mov
mov
(bad)
sbb
jbe
pop
ja
add
cs
js
cmps
(bad)
or
ins
xor
sbb
mov
jecxz
(bad)
cli
repnz
imul
cwde
cmp
dec
pcmpgtd
cmc
call
xor
pop
push
xor
stos
inc
outs
push
test
or
sahf
mov
and
popf
stos
push
cmps
loope
add
or
sub
iret
retf
jb
jecxz
out
cmps
add
imul
dec
in
sbb
and
push
call
mov
dec
shr
mov
jb
das
fs
aam
sub
lds
pop
std
add
pop
mov
test
sbb
push
inc
mov
xor
imul
fcmovu
cld
jne
mov
push
pop
cdq
int3
mov
inc
mov
push
sbb
jecxz
mov
xor
popf
cmps
repz
cwde
push
mov
and
xchg
sub
jmp
in
sub
dec
outs
cmps
push
pusha
jmp
ret
bound
adc
mov
pop
add
ja
test
jp
pop
push
lahf
adc
push
inc
mov
inc
ins
call
lods
fild
stc
xor
pop
dec
test
sbb
push
fld
inc
in
pop
fist
mov
or
retf
mov
pop
loop
nop
loopne
xor
inc
aad
hlt
dec
adc
retf
or
int3
test
scas
leave
lock
and
int3
cmp
cmp
inc
lds
mov
or
aad
mov
ins
out
rcr
xor
mov
pushf
lods
xchg
adc
or
sub
xchg
aad
inc
sub
jl
sub
ja
xor
push
mov
mov
in
mov
push
inc
lods
mov
pop
es
dec
jle
fnstcw
push
call
ss
jmp
lods
shr
pop
xor
ins
cmp
jg
outs
pop
mov
cmp
add
push
jmp
jne
outs
jnp
or
das
adc
addr16
lods
jno
pop
enter
adc
mov
aad
movs
scas
cld
movs
add
retf
lods
mov
aaa
mov
or
dec
push
push
rcr
jmp
fwait
(bad)
dec
punpcklbw
jo
shl
iret
add
mov
stos
adc
xchg
mov
xchg
fwait
aaa
out
out
sub
xchg
push
dec
std
jle
lds
stos
inc
outs
mov
sub
cmps
jno
xor
pusha
mov
xchg
inc
mov
daa
mov
xchg
sub
loopne
xor
shl
cmp
xchg
into
inc
stos
adc
or
adc
(bad)
cmc
fwait
movs
leave
lahf
mov
es
mov
lds
loop
adc
jecxz
sbb
(bad)
xchg
sub
xchg
or
shl
add
cmp
mov
jae
pop
ret
pushf
out
mov
loop
jl
aam
pop
ss
push
add
lds
lea
pop
and
sti
jmp
xchg
add
jmp
mov
pop
cld
dec
std
jae
inc
xchg
push
je
xor
add
pop
std
jmp
xor
rcr
mov
mov
jecxz
mov
js
call
push
add
inc
ins
mov
sbb
dec
adc
movs
push
xchg
push
std
xor
jbe
out
pop
jp
es
mov
shl
pop
sbb
mov
dec
scas
movs
hlt
rcr
dec
or
cmp
mov
pushf
or
rcl
outs
sbb
pop
(bad)
test
mov
shl
xor
shr
adc
dec
cmc
cmp
out
lds
scas
mov
inc
cli
mov
pop
sub
sbb
retf
cmp
pushf
mov
add
std
(bad)
out
cmps
ficom
pop
sbb
aam
sbb
pop
lods
shl
or
dec
(bad)
lahf
enterw
iret
push
int
mov
mov
push
pop
(bad)
cld
test
nop
adc
sbb
xchg
push
in
neg
pusha
out
ins
push
jmp
out
aam
gs
test
pop
icebp
icebp
sub
pop
cs
stos
pop
ins
test
test
sub
sub
je
lods
xor
inc
std
cmp
mov
nop
inc
imul
cs
and
push
mov
out
hlt
xlat
adc
xlat
pop
jmp
std
push
das
repz
sbb
mov
adc
stos
nop
inc
daa
pop
ficom
lock
test
lea
push
sbb
add
(bad)
push
mov
std
mov
jno
or
sub
adc
mov
das
iret
nop
dec
hlt
jge
aad
loopne
xor
stc
popf
shr
(bad)
repnz
sub
fwait
push
movs
std
cmps
sub
stos
jp
test
jecxz
fdivr
shr
je
cwde
(bad)
in
jmp
sbb
mov
icebp
rcl
mov
xchg
div
sbb
adc
inc
pushf
sub
cmovl
mov
(bad)
jne
dec
mov
cmp
jae
outs
xchg
test
sti
sbb
(bad)
xchg
neg
mov
inc
dec
mov
inc
out
push
daa
pop
inc
xor
loop
dec
cwde
or
jle
ds
ins
sub
jl
jb
outs
xor
pop
loop
jl
mov
add
mov
add
loope
push
scas
push
mov
push
sbb
loop
cmps
jmp
add
out
cmc
mov
dec
adc
retf
jne
test
sub
(bad)
cld
repz
aas
(bad)
cld
repz
aas
call
add
jg
scas
std
inc
gs
adc
add
add
dec
inc
dec
inc
scas
inc
pusha
or
add
add
add
(bad)
(bad)
inc
add
add
add
add
add
add
jns
je
ins
cs
jb
ja
outs
addr16
push
gs
imul
xor
xor
inc
jne
je
jb
cmp
jb
ins
sub
push
jne
ins
imul
imul
bound
xor
data16
xor
fs
add
adc
gs
cs
jb
ja
outs
addr16
imul
add
popa
je
pop
add
add
add
add
add
lsl
add
rcl
add
mov
inc
or
add
or
add
add
add
add
or
add
add
pusha
outs
rol
add
add
inc
dec
inc
add
mov
or
popa
add
jo
pop
jae
add
ret
add
push
ret
add
outs
test
add
adc
inc
inc
push
pop
inc
in
rol
add
out
xor
dec
ja
dec
pushf
out
clc
jmp
shl
imul
jp
jae
arpl
cwde
cwde
data16
cld
lahf
div
in
repz
add
movs
xor
pop
pop
push
je
sub
cli
add
loope
mov
cmps
shr
repnz
bound
push
xor
out
lods
lahf
inc
scas
fsubp
xor
lods
xor
dec
lahf
sbb
lds
jle
or
ss
sbb
dec
pop
ins
icebp
lds
arpl
dec
jns
js
mov
mov
fnsave
or
pop
cli
cdq
and
mov
and
outs
scas
ret
fiadd
or
mov
popa
std
cmp
out
xlat
out
out
pop
bound
mov
xor
int3
xor
xchg
mov
jb
jecxz
fmul
je
add
loop
jae
pop
push
push
test
dec
ss
ret
dec
sbb
arpl
sbb
mov
div
mov
pop
test
out
cmp
rsqrtps
xchg
fisttp
cmp
cld
mov
lods
fwait
xor
jno
inc
test
out
nop
faddp
retf
ins
mov
outs
mov
scas
or
inc
xor
stos
cdq
xlat
xchg
js
arpl
jmp
inc
cdq
or
lea
xchg
jle
addr16
jae
rol
dec
dec
mov
in
sbb
(bad)
iret
aad
mov
mov
pop
je
mov
inc
pop
retf
xchg
loopne
or
jb
or
(bad)
mov
into
sahf
mov
movs
call
dec
out
pop
outs
retf
imul
ins
repz
sti
ins
js
popf
xchg
xchg
jp
add
mov
(bad)
shl
les
push
push
mov
cli
les
push
jmp
fcomi
inc
xchg
test
aad
cld
ins
pop
xor
in
jmp
dec
xor
call
mov
xor
or
pop
xor
push
(bad)
loope
(bad)
lahf
popa
test
mov
xchg
cmps
push
mov
ins
add
xor
and
sti
sbb
inc
rcr
cmp
mov
adc
adc
push
pop
mov
sub
repnz
sub
fst
adc
sub
mov
ja
mov
sub
out
std
in
(bad)
dec
sbb
loop
inc
sub
mov
sar
movs
adc
add
cwde
fdivrp
(bad)
mov
dec
aad
(bad)
(bad)
iret
or
bound
aam
aas
sar
jnp
mov
sbb
mov
jns
mov
sbb
sbb
push
ins
jmp
xor
call
ret
out
push
add
jmp
jno
(bad)
mov
popf
jbe
test
adc
inc
xor
cmc
pop
(bad)
shl
mov
xchg
ja
xchg
adc
adc
or
add
sbb
aas
jg
aam
pop
cld
jns
add
jge
shr
mov
add
lahf
and
lea
sbb
mov
cmp
jp
mov
loopne
(bad)
mov
test
jp
sbb
sbb
jmp
out
xchg
aam
dec
sub
pop
add
cdq
test
push
iret
pop
and
mov
mov
leave
add
lock
add
ror
and
jle
adc
push
mov
pop
jp
fiadd
(bad)
lods
neg
je
aaa
pop
lds
xor
ss
ss
pop
es
dec
jo
into
aam
mov
repz
leave
out
pop
xlat
out
xor
push
lock
daa
jle
repnz
mov
inc
(bad)
call
mov
loope
cdq
push
inc
movs
aam
outs
jae
push
sub
leave
cmp
aas
jecxz
sbb
inc
pop
aas
in
lea
mov
not
ins
retf
pop
sbb
pop
cmp
sub
sub
cmp
cmc
sub
clc
adc
dec
ins
adc
inc
retf
sbb
or
mov
jecxz
das
dec
scas
int3
fs
sub
mov
pop
jo
fcomp
sbb
or
push
cdq
(bad)
rol
daa
sbb
jno
xor
mov
mov
pop
cs
inc
xchg
xchg
xchg
push
inc
loope
hlt
xchg
jl
jne
cmp
xchg
xchg
or
cmp
dec
jne
adc
sar
pusha
out
pop
bound
cmps
cmc
pop
xor
sub
aad
subps
fild
pop
aad
mov
and
das
dec
jmp
mov
xor
ins
popf
mov
push
mov
aaa
mov
cld
movs
or
retf
push
aam
xchg
retf
pushf
inc
jb
aas
cld
adc
test
pop
inc
repnz
mov
jns
dec
shr
stos
retf
xchg
dec
xchg
adc
push
pop
dec
cmp
aad
jg
les
fistp
(bad)
cmp
mov
pop
pop
lods
movs
das
repnz
mov
in
sbb
out
mov
push
pop
inc
jmp
add
or
(bad)
adc
je
adc
xchg
movs
int
std
pop
xchg
push
jp
popf
dec
xor
retf
pop
push
hlt
ret
dec
xor
mov
xchg
inc
dec
dec
jp
push
int
jnp
mov
jno
mov
sar
jl
xchg
push
ins
mov
inc
and
and
fadd
mov
gs
mov
push
sbb
pop
or
fldenv
add
fldcw
out
repnz
daa
mov
sub
push
push
mov
mov
aam
mov
sub
adc
adc
pop
lods
mov
or
repnz
jl
mov
mul
pushf
pop
out
aam
js
ds
or
push
and
ds
mov
inc
or
icebp
push
mov
aad
mov
fcomp
and
into
pop
repz
xchg
inc
(bad)
in
xchg
call
sbb
loop
lods
and
aaa
enter
add
jle
pop
mov
mov
or
cmp
fld
jno
mov
imul
or
or
sbb
repz
cwde
jno
lods
(bad)
ficom
add
jnp
pop
or
sbb
jnp
push
adc
mov
lea
aas
inc
mov
into
loopne
push
jp
push
rcr
fld
outs
pusha
inc
enter
inc
int3
fisttp
adc
dec
add
mov
cs
idiv
adc
xor
jbe
adc
cmp
mov
cld
pop
mov
mov
jle
jno
push
cmc
mov
frstor
pop
pop
aam
imul
out
xchg
xchg
inc
ss
mov
push
or
pusha
adc
fsub
int
mov
ror
jmp
loop
sbb
rol
in
std
in
test
loop
cmps
mov
and
jge
push
and
(bad)
push
adc
jo
pop
pop
xchg
rcr
adc
icebp
imul
sbb
fcmovnu
jns
mov
sub
jno
push
sub
jae
xor
leave
inc
jmp
mov
cwde
int3
(bad)
and
xor
cmp
loope
xchg
jnp
sub
add
repz
movs
jne
(bad)
into
test
xor
add
pop
inc
loop
pushf
cld
cmp
cs
adc
jnp
enter
push
jecxz
shr
xchg
sub
out
pop
sti
pop
pop
mov
neg
push
sub
(bad)
fild
das
fld
clc
cs
or
lds
xchg
fisubr
out
loop
(bad)
xchg
mov
sbb
nop
xlat
inc
lahf
jns
xchg
shr
xchg
push
xchg
scas
cld
push
adc
data16
cld
inc
and
lock
ins
ds
into
iret
movs
sub
je
sbb
and
xor
cmps
push
xchg
lahf
add
jns
imul
cmp
sub
mov
jmp
jns
jbe
fsubr
ds
imul
jno
jo
enter
add
mov
mov
loope
push
xor
rol
scas
jns
int
ss
(bad)
mov
enter
mov
add
outs
mov
lock
sbb
div
sub
popf
out
xchg
pushf
push
push
jl
les
mov
xchg
adc
popf
xor
sbb
cmp
xor
push
sub
pop
mov
bound
cmp
stc
add
out
sub
inc
retf
xlat
ret
ss
nop
dec
(bad)
movs
call
arpl
daa
sbb
mov
retf
mov
ins
jl
loop
adc
jecxz
aam
pop
push
and
xor
ror
push
push
fdivr
sbb
add
pusha
dec
pop
fisubr
fs
xchg
addr16
jo
xchg
inc
xor
xchg
sahf
mov
aaa
call
mov
out
cs
jo
mov
jmp
mov
test
nop
in
lods
jmp
mov
push
mov
mov
stos
mov
mov
sub
adc
inc
adc
pop
adc
aas
lock
dec
call
add
shl
push
test
pop
add
popf
mov
nop
data16
jns
ins
push
xor
outs
push
cdq
jb
(bad)
int3
or
push
fstp
pop
xchg
or
popa
cdq
cmps
sahf
cmp
mov
pop
pushf
adc
jo
ss
adc
loopne
pop
xor
out
jp
scas
xor
fcom
mov
cwde
je
mov
imul
iret
sti
jne
jno
dec
enter
or
inc
sbb
jle
adc
push
test
lock
mov
xchg
in
pop
cmp
pop
ins
into
mov
adc
ds
mov
jecxz
jmp
fiadd
sub
shl
mov
imul
push
stc
mov
mov
add
in
cdq
loope
out
push
lock
enter
fstp
push
call
addr16
pop
jmp
outs
lahf
test
mov
movs
in
call
clc
fcom
jae
mov
ins
stos
inc
pushf
lock
sub
jno
das
push
xchg
into
and
pop
movs
cmp
(bad)
ficom
(bad)
(bad)
bound
xor
addr16
push
jg
mov
sar
lahf
test
in
pusha
(bad)
jg
push
xlat
jmp
inc
cmps
xchg
call
xor
sub
cdq
pop
sbb
dec
jne
push
pop
mov
pop
pop
ror
cmc
sub
mov
out
mov
popa
fist
rol
lock
xchg
mov
xlat
fs
(bad)
std
jmp
icebp
mov
jmp
mov
out
call
inc
add
xor
push
xchg
popa
hlt
and
push
mov
jae
adc
mov
cmc
(bad)
mov
movs
or
mov
pop
sub
xchg
out
test
mov
fdiv
and
inc
daa
scas
xchg
clc
xor
sub
dec
xlat
(bad)
repz
jo
or
retf
pop
ss
sti
sub
add
sub
cld
cmps
ror
mov
cld
push
jge
imul
cmp
retf
xor
inc
xchg
cmps
jno
and
mov
scas
push
xchg
out
jl
mov
pop
mov
xor
fild
mov
jns
sbb
push
sub
repnz
or
mov
icebp
dec
imul
(bad)
ins
mov
imul
icebp
xchg
xchg
(bad)
xchg
mov
pop
pop
inc
int
test
xor
mov
xor
jmp
lea
dec
call
mov
sahf
add
mov
push
sbb
in
pop
cmps
ret
xchg
stos
mov
pop
cmp
pop
mov
sahf
mov
xchg
(bad)
and
aad
and
jns
mov
add
aad
gs
dec
aam
pop
push
pop
imul
addr16
hlt
push
cmp
stc
jnp
mov
and
dec
jmp
mov
adc
adc
or
xor
push
repz
xlat
int3
aad
outs
pop
sar
nop
and
stos
popf
push
into
aad
int3
push
ins
jmp
lods
cmp
push
aas
mov
add
into
mov
out
xor
or
inc
pusha
div
repnz
bnd
jb
out
loope
ds
or
rcl
cs
les
mov
push
xor
xchg
and
aas
sbb
sti
mov
xlat
mov
inc
movs
and
dec
jle
sbb
daa
test
imul
xchg
dec
bound
gs
or
aaa
loopne
dec
mov
dec
dec
add
(bad)
mov
sbb
adc
mov
fwait
(bad)
imul
sub
jg
mov
mov
arpl
bound
jno
dec
pop
pop
mov
inc
xor
add
rol
(bad)
cdq
fbstp
into
(bad)
div
cmps
jns
dec
or
jmp
push
scas
sbb
es
xor
sub
(bad)
adc
lock
addr16
repz
dec
repz
fwait
inc
out
add
lahf
dec
sub
in
lea
push
push
fwait
and
clc
mov
cmp
sahf
push
mov
cmps
sub
aam
test
jp
push
mov
xor
lods
dec
clts
dec
mov
adc
test
pop
xor
pop
xor
ins
xor
sub
xchg
loopne
pop
in
stos
fstp
arpl
mov
mov
stc
mov
sub
ret
retf
std
jb
das
jle
or
xor
push
mov
ror
cmps
js
jo
popa
or
jmp
push
xchg
movs
jecxz
mov
and
push
jns
xor
aaa
enter
xchg
push
sub
xchg
or
aam
xchg
sbb
add
cwde
xor
xor
inc
loop
sub
stos
cmp
pop
sub
or
jb
mov
and
fdivrp
cmp
loop
sbb
into
mov
inc
jo
test
xchg
es
(bad)
push
aas
aaa
aad
popf
js
adc
sub
scas
mov
cmp
mov
aas
out
mov
rol
cld
mov
add
loope
fbstp
fst
fisubr
mov
sub
rcr
cmc
dec
cmps
stos
sub
test
shl
inc
mov
xchg
xlat
das
std
mov
add
fcmovnbe
or
mov
and
rcl
sahf
sub
clc
jbe
sub
int3
mov
sub
cmp
xor
add
sbb
mov
(bad)
std
out
in
sub
out
rol
jns
ret
push
mov
sub
aaa
adc
push
xor
(bad)
fbstp
inc
fnsave
sahf
mov
inc
mov
sbb
aas
std
lods
sahf
test
jg
dec
test
mov
imul
cmp
push
les
in
cmc
lock
inc
ins
retf
mov
dec
sub
inc
lods
imul
dec
pop
and
inc
in
(bad)
dec
or
(bad)
mov
aad
sub
loop
add
repz
cwde
fiadd
ja
out
cmp
ins
sub
mov
movs
in
int3
rcr
mov
xchg
arpl
cmc
scas
test
outs
ror
in
push
popa
std
push
pop
cmp
out
test
sbb
scas
repz
adc
adc
dec
jo
adc
cmp
mov
jmp
push
adc
mov
adc
xchg
in
mov
call
add
pusha
jle
repz
aaa
bound
pop
es
pop
ds
sub
outs
inc
cs
mov
gs
call
push
xchg
pusha
cli
sti
sub
cmp
out
or
in
cmp
shl
aas
popf
push
fisttp
stos
xchg
cwde
dec
push
movs
xchg
mov
test
xchg
and
iret
aas
(bad)
cld
repz
aas
(bad)
cld
repz
add
psrld
shl
aam
jo
add
add
dec
inc
scas
inc
pusha
or
add
add
add
(bad)
(bad)
inc
add
add
add
add
add
add
jns
je
ins
cs
jb
ja
outs
addr16
push
gs
imul
xor
xor
inc
jne
je
jb
cmp
jb
ins
sub
push
jne
ins
imul
imul
bound
xor
data16
xor
fs
add
adc
gs
cs
jb
ja
outs
addr16
imul
add
popa
je
pop
add
add
add
add
add
lsl
add
rcl
add
mov
inc
or
add
or
add
add
add
add
or
add
add
pusha
outs
rol
add
add
inc
dec
inc
add
mov
or
popa
add
jo
pop
jae
add
ret
add
push
ret
add
outs
test
add
adc
inc
inc
push
pop
inc
in
rol
loopne
adc
sbb
cdq
scas
dec
out
ja
jbe
fldl2t
imul
mov
jbe
dec
ja
loope
and
sahf
pop
add
fwait
sub
add
lock
fwait
pop
mov
sbb
dec
fisttp
push
popa
mov
jne
mov
jmp
fidivr
sbb
push
mov
dec
sbb
popf
cmc
daa
in
cmp
push
pop
int3
pop
push
aas
in
sahf
add
mov
(bad)
mov
sub
ss
pop
adc
sub
fsub
movs
rcr
or
mov
lods
and
jge
repz
dec
jnp
ja
lock
cwde
dec
jne
popf
sbb
or
(bad)
pause
inc
add
(bad)
or
movs
pop
imul
cmove
out
jecxz
dec
gs
movs
cwde
mov
jns
(bad)
neg
bswap
(bad)
dec
mov
cmovbe
adc
adc
std
xchg
js
dec
push
pop
xchg
fisttp
aas
loope
adc
push
cli
(bad)
sub
lods
push
fwait
xchg
sbb
mov
mov
das
dec
outs
call
sahf
add
out
cmps
stos
cld
mov
sub
pushf
repnz
daa
inc
nop
adc
ss
mov
movs
add
push
(bad)
pop
mov
sbb
movs
scas
push
sbb
mov
mov
xor
and
out
pop
or
out
out
inc
dec
cdq
add
das
repnz
nop
fild
(bad)
mov
dec
mov
adc
daa
test
retf
retf
sub
mov
js
loope
and
jns
sbb
movs
push
or
cmp
mov
xchg
xchg
mov
mov
cmc
lea
jecxz
xor
scas
push
jbe
ficomp
shr
mov
cmps
jge
add
les
jl
jb
dec
fs
mov
inc
jmp
ins
repnz
xor
aam
and
icebp
je
jge
aas
xor
mov
aad
pop
mov
cmp
call
imul
push
sti
pop
hlt
sub
inc
daa
jno
sub
xor
mov
mov
in
mov
or
sahf
scas
pop
sti
pop
inc
(bad)
mov
(bad)
cmp
sub
sub
add
sbb
adc
mov
or
jmp
retf
sahf
xchg
adc
jl
sub
pop
ror
mov
pop
cmp
and
mov
or
xchg
imul
fistp
pushf
cmps
cmp
js
sbb
dec
gs
sub
(bad)
jl
fdivr
std
mov
lods
test
dec
cmp
mov
aaa
or
adc
jbe
jmp
das
add
adc
out
jbe
dec
rcr
dec
xchg
cmp
int3
sti
pusha
outs
push
jmp
movs
ss
add
pusha
fwait
adc
adc
stos
aas
mov
aam
test
push
mov
xor
or
loop
mov
stc
scas
sub
aaa
ja
pop
retf
mov
frstor
or
dec
mov
fiadd
inc
test
scas
iret
xchg
lods
(bad)
in
pop
loop
cmps
movs
into
dec
or
push
cmp
pop
inc
jl
(bad)
pushf
push
rcr
add
sub
mov
pop
aad
mov
sti
hlt
pop
or
cmp
test
mov
jmp
lods
enter
cs
(bad)
inc
push
je
mov
popa
lea
movs
sti
cli
ins
cmc
dec
lahf
pextrw
loope
jmp
jp
enter
jnp
sbb
pop
cmp
lock
ins
(bad)
cmp
inc
or
jmp
test
mov
xchg
xchg
ins
xchg
xor
or
outs
adc
sbb
jg
push
pop
iret
jg
lods
pop
add
cmc
push
jns
inc
cmp
jne
popf
push
imul
add
push
scas
sub
in
add
pop
sub
inc
enter
std
push
xor
push
sub
retf
mov
dec
sbb
pop
adc
or
push
ins
das
loop
in
bound
mov
js
dec
enter
dec
or
ins
mov
cmps
cmp
inc
repnz
das
push
push
js
sub
clc
loope
fmul
inc
and
out
jno
out
fwait
xchg
pop
or
xchg
loop
packssdw
shr
rcl
pop
aad
test
xor
(bad)
cmp
fadd
ins
lea
ins
sbb
and
scas
int
out
or
push
out
fs
pop
mov
jae
jp
or
pop
je
lods
push
test
and
jle
lock
and
int
xor
retf
rcr
inc
repnz
pop
push
and
lods
dec
cmp
out
out
(bad)
dec
dec
in
clc
shr
(bad)
jns
push
lea
fnstcw
mov
pop
add
cmp
or
movs
movhps
xchg
retf
jp
xchg
retf
jle
mov
mov
mov
mov
mov
jle
adc
jmp
mov
imul
scas
push
cmc
xor
sar
jae
cli
fld
sub
pop
or
loop
ss
hlt
jl
call
ret
arpl
or
rcl
mov
cdq
movs
and
add
or
jge
jg
mov
push
fadd
outs
mov
jo
push
mov
(bad)
neg
inc
sar
ret
jno
aam
add
shr
pop
movs
dec
xchg
mov
idiv
(bad)
cmps
mov
add
cld
pop
cwde
pop
push
inc
dec
push
pop
outs
xor
popf
or
add
sbb
dec
fcomp
mov
mov
mov
icebp
cmps
outs
test
loop
or
pusha
mov
push
dec
loope
ficom
push
(bad)
mov
pop
out
in
dec
in
fsubrp
test
retf
rcl
sub
iret
xchg
push
push
popf
loop
pusha
bound
in
jge
cmp
out
int
jb
mov
fnstsw
xor
sub
aam
push
pop
stos
call
cmp
aam
loop
cmc
mov
cli
outs
cmp
in
dec
pop
jbe
and
stos
int3
outs
imul
ds
fiadd
out
out
mov
clc
popf
ja
push
jne
push
pop
push
or
sbb
or
xchg
fisttp
pop
jge
sbb
fld
cmp
call
adc
inc
push
mov
add
fs
adc
pop
inc
cmps
shr
dec
pop
xor
adc
outs
in
xor
loope
mov
mov
dec
ds
push
mov
sbb
cmps
popf
aam
lods
fs
sub
add
add
push
jg
(bad)
sahf
xchg
icebp
cmp
jg
jmp
mov
sar
jle
retf
xor
loopne
xchg
xor
(bad)
out
into
cli
nop
xor
in
jne
js
jmp
mov
xor
mov
sar
and
call
xchg
xchg
ins
pushf
sbb
test
aad
push
in
push
cmp
pop
xlat
addr16
or
scas
call
adc
pop
mov
and
pmaxsw
pop
cdq
add
stos
push
ss
daa
test
sbb
pop
mov
jmp
inc
dec
lds
jbe
das
or
jbe
cli
sub
pop
test
(bad)
(bad)
test
sbb
push
pop
mov
mov
bound
mov
or
stos
xchg
(bad)
jo
mov
jmp
outs
mov
sub
or
mov
(bad)
in
push
shl
push
xchg
jp
sbb
dec
mov
lods
ret
fsub
es
fidiv
jae
pop
jmp
jno
std
int3
repz
xchg
push
mov
mov
cs
or
loopne
add
xor
jge
mov
mov
or
(bad)
ins
mov
mov
sbb
pop
jae
cdq
jmp
(bad)
fwait
int3
or
xchg
xchg
je
in
out
cdq
(bad)
in
mov
jge
adc
das
add
out
data16
dec
scas
out
mov
inc
call
cmp
in
mov
je
adc
dec
xor
mov
inc
jae
cli
cwde
aaa
retf
or
mov
push
stos
cld
test
lods
mov
sub
cld
into
jg
and
sbb
cmp
sbb
push
xor
sbb
jmp
and
mov
scas
ss
int3
mov
lea
fwait
into
jb
add
ja
fwait
mov
repnz
fbld
popa
(bad)
mov
test
push
xor
loope
mov
fwait
pop
imul
pushf
sub
sub
push
mov
xchg
jnp
lods
mov
in
retf
and
cld
ins
(bad)
repz
xchg
shr
ret
push
adc
xor
sub
int
mov
aas
jmp
scas
xchg
mov
in
mov
push
mov
jle
pusha
retf
fdiv
or
inc
test
movs
clc
sbb
pop
jg
outs
pusha
fwait
xor
jmp
or
jl
mov
fst
pop
fist
mov
jl
jbe
and
test
stc
stc
push
mov
xchg
lock
ins
jl
div
pop
popa
ins
stos
mov
std
popa
xchg
jecxz
fs
repz
movs
cmp
jge
and
pop
mov
sub
test
xor
xchg
pcmpgtb
jmp
mov
mov
xchg
add
out
inc
cmp
jbe
(bad)
or
inc
or
dec
pop
pop
scas
les
xor
and
and
sub
mov
inc
in
xchg
sub
mov
jnp
stos
sub
mov
shl
jmp
mov
sbb
push
int
imul
push
fdivr
fwait
lds
dec
popf
(bad)
adc
call
sbb
sub
imul
stc
sbb
push
or
mov
mov
or
rcl
and
fisttp
outs
sbb
push
sbb
in
push
add
dec
std
mov
outs
add
arpl
xchg
cmp
mov
cmp
push
out
scas
pusha
jmp
mov
mov
pop
cmp
mov
data16
retf
cli
jb
adc
and
xchg
pop
shl
add
xor
xchg
iret
rcr
add
cmp
sbb
movs
lods
repnz
imul
cs
pop
mov
push
adc
jne
dec
jo
shr
stos
dec
push
pop
cmp
xchg
jmp
lds
adc
xor
add
mov
adc
inc
jl
rol
loope
jl
xor
xchg
test
and
enter
push
ds
loop
pop
getsec
cmp
adc
fwait
movs
pop
push
dec
lahf
xor
pop
loopne
(bad)
sti
js
xchg
outs
fstp
sbb
pop
(bad)
adc
mov
or
and
push
sbb
pop
in
ss
popf
(bad)
sahf
ins
out
cmp
inc
and
repnz
xor
ret
add
adc
jecxz
add
jp
out
mov
in
test
js
movs
ret
or
dec
fwait
push
adc
jmp
scas
cmp
and
fstp
inc
lods
push
les
push
push
and
sbb
cmp
(bad)
xor
adc
(bad)
fisub
jp
and
push
call
and
imul
out
push
pop
or
outs
dec
sbb
stos
clc
and
cmp
test
out
inc
fbstp
sti
addr16
add
ret
scas
pop
pop
ins
iret
jecxz
fwait
pop
xor
mov
das
pop
jae
sub
xchg
pop
lahf
xchg
pop
int
mov
jmp
repz
sbb
out
sub
mov
cmp
inc
hlt
add
cmp
in
out
movs
add
(bad)
std
cmp
(bad)
lods
das
cmp
pop
xor
dec
leave
jnp
int
and
sbb
sti
repnz
mov
mov
dec
xchg
jno
cs
pop
test
or
push
pop
push
pop
jle
cmps
mov
and
adc
cmps
fstp
or
inc
loopne
loopne
adc
mov
pop
data16
fwait
and
je
sbb
test
push
and
stc
inc
cdq
sbb
push
jl
gs
inc
xchg
adc
popf
pop
dec
(bad)
mov
sub
push
test
jbe
dec
jle
mov
imul
fisttp
mov
scas
gs
push
cmc
call
ret
add
sub
xchg
pop
call
inc
lods
sti
out
stos
rcl
jp
repnz
aam
fldenv
jae
push
popf
(bad)
outs
popaw
push
mov
push
xchg
movs
clc
cmp
repnz
aad
movs
push
test
loope
aas
fnstsw
js
xor
mov
sub
add
int
add
xchg
(bad)
into
nop
pop
push
adc
xor
jmp
fld
mov
or
ja
(bad)
sar
in
jae
mov
xchg
or
push
push
mov
or
and
(bad)
pop
fstp
popf
sti
lahf
cmp
repnz
jne
inc
xchg
aad
push
fnstcw
out
and
fs
outs
inc
push
xchg
mov
adc
pop
adc
(bad)
sbb
add
jg
pop
sub
sbb
mov
std
xchg
xlat
mov
clc
sti
or
call
jecxz
aaa
scas
and
mov
sbb
ins
and
jno
imul
push
lods
sahf
out
(bad)
movs
pop
hlt
adc
mov
rcl
je
pop
(bad)
mov
aad
add
daa
sti
rol
in
and
int3
jmp
int3
iret
mov
imul
int
ins
jo
loope
ror
dec
pushf
jmp
xchg
adc
cdq
fs
call
jl
mov
dec
aam
aam
xchg
xor
push
dec
xchg
or
cmp
inc
sbb
or
(bad)
xor
ja
xlat
jp
jno
push
test
movs
xchg
sti
sub
mov
cld
jnp
jmp
out
jmp
leave
outs
imul
nop
push
or
xor
adc
inc
mov
lds
inc
ror
jne
xchg
mov
(bad)
mov
pushf
or
scas
push
sbb
neg
sbb
xchg
add
pusha
shl
jne
imul
add
test
int3
mov
mov
pop
mov
pop
imul
cmp
movs
xor
adc
inc
pop
sbb
mov
adc
sbb
xor
mov
mov
loop
adc
clc
ins
cmp
adc
pusha
gs
push
mul
push
ficom
stc
push
sahf
xlat
cmp
xchg
scas
hlt
inc
rcl
lds
ret
adc
xchg
stos
xlat
cmc
push
les
dec
movs
mov
repnz
icebp
sub
jmp
call
repz
and
gs
call
sub
jno
pushf
pop
jae
jns
mov
jb
dec
sub
mov
add
xchg
push
addr16
sti
sub
sbb
addr16
jle
xchg
or
pop
xchg
test
jle
cmp
(bad)
push
les
imul
xchg
and
dec
out
int
push
push
push
scas
sbb
outs
xchg
mov
inc
jbe
add
adc
mov
add
add
mov
(bad)
pop
jl
xor
jl
out
sub
arpl
xchg
pop
xchg
jmp
inc
push
les
jbe
(bad)
cdq
out
fs
neg
mov
add
mov
jecxz
adc
or
cmps
(bad)
cwde
adc
data16
jno
pop
inc
xchg
push
or
sbb
rol
cmp
ret
popa
push
mov
cs
sub
sub
repnz
sbb
pop
xchg
jo
dec
push
pop
add
xor
shl
pop
add
out
jg
stc
out
jmp
sar
and
retf
in
mov
add
inc
dec
inc
scas
inc
pusha
or
add
add
add
(bad)
(bad)
inc
add
add
add
add
add
add
jns
je
ins
cs
jb
ja
outs
addr16
push
gs
imul
xor
xor
inc
jne
je
jb
cmp
jb
ins
sub
push
jne
ins
imul
imul
bound
xor
data16
xor
fs
add
adc
gs
cs
jb
ja
outs
addr16
imul
add
popa
je
pop
add
add
add
add
add
lsl
add
mov
mov
inc
or
add
or
add
add
add
add
or
add
add
pusha
outs
rol
add
add
inc
dec
inc
add
mov
or
popa
add
jo
pop
jae
add
ret
add
push
ret
add
outs
test
add
adc
inc
inc
push
pop
inc
in
rol
loopne
call
fcomp
daa
(bad)
mov
ja
cmp
data16
jl
enter
add
xor
sub
aam
xchg
and
(bad)
pop
adc
scas
retf
out
mul
cmc
mov
ds
test
or
cmp
addr16
xor
(bad)
bound
jp
lds
loop
xor
pop
scas
mov
sub
fsub
jmp
mov
test
mov
fs
fwait
dec
inc
in
int3
pop
cmp
fcmove
mov
stc
mov
mov
sub
push
dec
inc
add
enter
cmp
xchg
mov
aas
(bad)
(bad)
adc
pop
xchg
mov
lods
mov
ret
stos
sub
and
movs
addr16
stos
scas
xchg
sbb
out
push
popa
test
scas
fdiv
iret
sbb
sbb
sbb
icebp
lock
aam
inc
aas
cs
test
ror
adc
mov
enter
xchg
xor
sti
lds
ds
dec
mov
and
add
dec
mov
out
mov
or
xchg
fbld
pushf
sbb
aaa
jmp
jo
add
jl
mov
movs
jg
sub
mov
jb
std
div
repz
mov
in
xchg
test
dec
cmp
imul
xor
xchg
fimul
pop
cld
xor
(bad)
(bad)
jae
jbe
jecxz
push
push
imul
call
xchg
jb
pop
xchg
pop
je
iret
loop
cmp
mov
dec
mov
jge
(bad)
sub
hlt
mov
push
and
mov
push
out
iret
es
fistp
lea
repnz
arpl
jns
or
std
push
xchg
cmp
adc
sti
pusha
or
mov
dec
es
cmp
je
icebp
xlat
sbb
hlt
push
push
cmp
inc
sbb
shl
xor
mov
lahf
push
add
out
adc
mov
addr16
push
xor
xlat
sub
cmc
cmp
cmc
cmp
xor
mov
jmp
imul
stos
add
clc
push
pop
sar
mov
fidivr
inc
ja
sub
in
retf
cmps
and
mov
xchg
xchg
data16
shl
lea
scas
fisttp
icebp
or
push
and
test
xlat
xor
scas
adc
(bad)
fst
mov
jno
pop
adc
and
jmp
retf
xor
xchg
inc
cmp
iret
adc
xchg
fld
inc
xchg
lea
mov
ficomp
scas
lea
push
ficomp
mov
sbb
and
arpl
fsub
(bad)
jbe
sbb
and
(bad)
pop
imul
lahf
jg
xchg
hlt
imul
dec
(bad)
cld
lea
jbe
call
shl
scas
add
aaa
cs
sti
cmc
dec
lods
aam
sbb
mov
fmul
scas
add
jbe
adc
fs
mov
and
fcomp
icebp
adc
add
inc
lahf
xor
mov
aas
jmp
cmps
daa
addr16
xchg
inc
addr16
and
stos
jle
sti
sub
(bad)
scas
inc
ret
pushf
enter
test
pusha
sub
add
and
jbe
cmc
ja
(bad)
xchg
movs
aad
mov
out
mov
xor
adc
call
inc
addr16
pushf
mov
pushf
movs
in
retf
inc
out
leave
cmp
or
scas
and
mov
inc
inc
int3
out
dec
mov
dec
mov
fadd
or
push
pop
pop
dec
cmp
jns
xor
bound
lods
push
pop
xchg
fild
inc
in
cmp
nop
jmp
call
ret
ins
push
iret
push
xchg
imul
aaa
push
sub
xor
(bad)
(bad)
xor
mov
inc
xchg
push
in
push
arpl
pop
mov
jmp
rcl
loop
aaa
sar
movs
pavgw
aam
mov
jne
and
mov
(bad)
pusha
adc
mov
loope
out
jnp
cmp
lahf
pop
or
(bad)
hlt
dec
jo
shr
mov
in
add
(bad)
dec
cmps
call
jmp
adc
lods
pop
sub
sbb
mov
clc
mov
repnz
pop
ret
pop
outs
mov
mov
inc
push
sub
mov
cmp
dec
cmps
mov
adc
lea
inc
pop
in
not
out
xor
inc
sbb
push
or
mov
mov
cmps
call
out
cdq
jg
add
in
add
shl
mov
je
cli
les
data16
(bad)
add
repnz
dec
mov
out
pop
leave
add
pop
xchg
je
imul
loop
xor
outs
xor
hlt
lods
push
das
add
iret
jae
sbb
(bad)
enter
addr16
xchg
jmp
sbb
mov
neg
repz
les
test
cmc
hlt
push
mov
sbb
sbb
dec
fisubr
jg
or
add
inc
daa
int
push
sub
(bad)
xchg
jecxz
cdq
outs
xor
sbb
sbb
xchg
(bad)
mov
inc
sbb
ret
fwait
xchg
pop
mov
not
mov
or
int
inc
mov
push
test
mov
imul
sbb
out
fistp
cmp
jg
outs
not
stos
mov
xor
ss
data16
dec
inc
repnz
mov
out
sub
call
jnp
pop
es
xor
leave
cli
sbb
test
int
mov
jg
imul
push
nop
sbb
inc
(bad)
aam
xchg
sub
imul
xchg
pop
push
push
mov
xor
js
fild
ret
cs
inc
push
xor
movs
jns
call
adc
sub
in
jnp
out
jmp
sbb
add
test
pop
push
mov
fldcw
mov
mov
xchg
pushf
jb
push
(bad)
out
jo
xchg
fcomp
sbb
mov
and
fwait
mov
je
out
push
cdq
cli
dec
adc
xchg
shr
cs
jmp
sub
push
cmp
adc
sbb
in
int3
cmp
(bad)
out
cmc
xchg
or
enter
fs
gs
rcr
popa
jae
push
xor
mov
aad
js
lods
and
mov
clc
fyl2xp1
xchg
or
icebp
aaa
add
mov
push
ror
cmp
pushw
inc
xor
retf
rol
inc
ret
icebp
scas
and
sub
into
sub
(bad)
lock
pop
loopne
inc
idiv
sar
add
lds
cld
mov
cmp
sbb
mov
jle
mov
aam
aaa
call
push
cdq
movs
mov
and
dec
push
lock
sub
sahf
push
mov
xchg
pop
push
xor
adc
xchg
sub
sti
imul
gs
and
call
fmulp
mov
push
icebp
sub
and
jecxz
mov
jb
repz
mov
ins
jno
and
cmps
loope
das
in
sahf
mul
adc
ins
jecxz
and
add
aad
pop
dec
ret
popf
push
add
add
loope
fucomi
loop
inc
and
sub
sbb
jmp
cmp
lds
push
ds
inc
les
out
adc
cmp
(bad)
cmp
rol
mov
into
jo
fisub
lea
lods
sub
inc
icebp
jl
mov
sbb
sbb
add
bnd
call
push
jo
jmp
pop
arpl
push
mov
dec
movs
push
mov
ror
icebp
ins
mov
mov
jno
xor
xchg
test
sbb
retf
push
xchg
push
pop
jmp
dec
repz
rcr
lahf
or
push
enter
adc
mov
fs
cli
loop
adc
add
push
stc
cmp
mov
fcomp
push
ret
stc
sub
dec
and
ror
xchg
mul
sbb
pop
pop
jecxz
je
xchg
mov
aam
in
mov
aaa
add
sahf
ja
hlt
dec
fwait
dec
cmc
jnp
daa
das
or
push
push
or
sbb
and
(bad)
xor
xlat
mov
pop
cmp
in
sub
cli
inc
sub
movs
jns
cmovnp
jo
jns
bound
adc
xchg
cld
sti
xchg
inc
dec
and
imul
mov
mov
push
push
cmp
dec
push
aam
add
iret
cmp
inc
xchg
jmp
imul
and
rcl
dec
jbe
call
jo
sbb
test
js
int
repnz
adc
jnp
das
outs
cwde
clc
inc
add
hlt
(bad)
dec
shl
pushf
and
sbb
and
inc
ins
push
xor
in
mov
adc
xchg
xchg
mov
jp
cld
lods
push
test
leave
out
xor
int3
xor
fucompp
push
(bad)
pop
ror
ret
arpl
and
xadd
pop
fdiv
sbb
jp
arpl
mov
push
int3
int3
(bad)
pop
rcl
lods
xchg
jl
sub
dec
pop
adc
mov
cmp
int
push
push
mov
add
sbb
xor
sbb
adc
push
leave
daa
jno
scas
xor
mov
out
retf
ins
push
sub
push
(bad)
adc
(bad)
xor
aas
push
push
mov
iret
pop
fist
pop
jns
(bad)
sbb
xor
cld
mov
retf
mov
xlat
push
xchg
add
aaa
lods
push
fdiv
sbb
shl
fs
push
inc
mov
(bad)
js
scas
data16
ret
lahf
add
daa
jbe
xchg
sub
dec
movs
mov
pop
sti
fbstp
mov
jno
xchg
adc
cmp
test
push
ret
jnp
push
fbstp
pusha
addr16
xchg
call
retf
cmc
sbb
fild
lods
mov
hlt
cmc
not
movs
mov
mov
jl
xchg
cmps
retf
mov
and
int3
pop
cli
faddp
mov
hlt
out
cmp
pop
mov
popf
cli
push
dec
sub
sub
push
pop
sbb
std
movs
dec
push
cmps
jno
arpl
cmc
js
mov
lea
popa
aam
adc
pop
(bad)
movs
push
jmp
xchg
push
hlt
xchg
movs
xor
mov
push
retf
leave
pop
and
int
push
lock
mov
and
(bad)
mov
leave
jbe
in
sar
xor
adc
mov
jnp
hlt
gs
imul
retf
or
add
add
mov
fwait
push
xchg
mov
and
pop
stos
pop
stc
mov
fnsave
push
cdq
and
mov
cs
xlat
push
retf
jmp
push
mov
inc
add
xchg
or
jge
xor
outs
sbb
mov
mov
loope
inc
cmp
mov
mov
iret
inc
sub
and
outs
arpl
sbb
mov
push
pop
jl
inc
or
popf
cmp
daa
adc
fstp
test
pop
push
push
mov
jnp
or
scas
js
xchg
inc
cli
sbb
mov
add
stos
stc
push
mov
pushf
aam
pop
lods
sbb
pushf
gs
ins
mov
sub
cmps
dec
pop
outs
mov
js
jo
push
fwait
aad
pop
dec
pusha
ins
in
imul
sub
and
jns
xchg
or
lock
mov
push
fldenv
repz
(bad)
inc
xor
loopne
cmc
fidivr
sbb
icebp
xor
jmp
jne
push
sar
fs
cmp
sub
in
cmp
sbb
clc
aad
test
mov
cmps
rol
pop
sbb
stc
push
xchg
xor
or
mov
out
dec
retf
sbb
ins
jecxz
dec
and
ret
xchg
cmc
xchg
pop
jno
stos
sbb
ds
cmp
lods
sub
das
bnd
add
mov
mov
outs
enter
dec
pop
cwde
xchg
ss
push
cmp
icebp
inc
es
or
inc
cmp
xor
(bad)
push
iret
outs
in
sub
das
or
or
mov
push
iret
xor
(bad)
sar
outs
add
rcr
es
pop
dec
mov
rol
in
inc
pop
mov
call
adc
dec
and
movs
or
cmp
jge
mov
xlat
inc
inc
xor
js
add
scas
push
jbe
test
inc
out
(bad)
mov
std
adc
icebp
scas
repz
call
mov
cs
shr
fucomi
inc
dec
mov
jne
xchg
dec
in
xchg
sbb
jnp
mov
imul
mov
cld
and
mov
sbb
jno
jmp
jle
dec
out
adc
jmp
mov
xchg
xor
stos
cs
mov
inc
jecxz
aas
and
outs
push
ins
fsubr
add
or
mov
jns
mov
mov
sbb
jb
mov
push
sub
adc
in
hlt
and
popa
jge
mov
pusha
mov
gs
imul
test
daa
mov
jmp
icebp
add
inc
mov
jnp
stos
pop
ins
add
dec
cmc
push
push
rol
mov
mov
retf
pop
sti
rcr
in
dec
adc
lds
mov
push
aad
xor
aad
es
dec
pop
fs
sbb
idiv
cmps
inc
xor
mov
pop
inc
add
bnd
ja
xor
ret
je
out
in
mov
cld
sub
lods
lods
dec
xchg
cld
call
push
xor
xor
mov
xchg
mov
and
rcl
jmp
adc
call
mov
sbb
inc
je
dec
lods
stc
cmp
mov
xor
daa
mov
in
lock
xchg
sar
loop
lea
push
cmp
dec
stos
mov
jmp
test
popa
xor
push
lods
adc
jno
popa
jle
xor
mov
js
sub
add
retf
mov
adc
sub
movs
sbb
push
pop
xchg
lock
jno
sub
inc
cli
not
movs
sbb
inc
adc
stos
out
lea
cmps
shl
mov
dec
xlat
out
pop
sbb
stos
ins
jno
or
outs
xor
jb
cmp
xchg
hlt
imul
push
stos
test
neg
xchg
mov
push
mov
dec
jns
lahf
inc
sub
addr16
xor
pop
out
and
iret
push
xchg
popa
outs
xchg
aad
push
pop
mov
jmp
sub
enter
mov
jmp
test
xor
loop
ss
xor
in
push
imul
(bad)
sub
dec
aaa
int3
sahf
inc
pop
sar
call
xor
xchg
mov
mov
(bad)
dec
and
add
jecxz
push
mov
or
push
outs
sub
test
popf
jge
mov
outs
cmp
jno
fdivr
pop
lds
(bad)
out
scas
xchg
and
es
mov
int3
call
xchg
cli
sar
ins
jnp
and
xchg
inc
shl
stos
jmp
(bad)
out
or
pop
pop
push
pop
shr
jae
and
pop
call
cld
fcmove
cmps
ror
enter
pop
jae
jnp
jo
cld
pusha
into
xchg
xor
rcl
cmc
push
jne
imul
dec
sub
inc
(bad)
mov
xchg
data16
mov
ins
push
push
push
ja
imul
or
imul
mov
jmp
jge
mov
mov
rcr
cmp
cli
sub
pop
pop
pop
ins
xor
add
pop
dec
sbb
jmp
pop
sub
(bad)
xor
shrd
jne
or
out
fadd
jecxz
pop
mov
sub
out
cmp
jno
enter
cmp
(bad)
stc
out
jmp
lock
out
in
repz
int3
add
add
dec
inc
dec
inc
scas
inc
pusha
or
add
add
add
(bad)
(bad)
inc
add
add
add
add
add
add
jns
je
ins
cs
jb
ja
outs
addr16
push
gs
imul
xor
xor
inc
jne
je
jb
cmp
jb
ins
sub
push
jne
ins
imul
imul
bound
xor
data16
xor
fs
add
adc
gs
cs
jb
ja
outs
addr16
imul
add
popa
je
pop
add
add
add
add
add
lsl
add
mov
mov
inc
or
add
or
add
add
add
add
or
add
add
pusha
outs
rol
add
add
inc
dec
inc
add
mov
or
popa
add
jo
pop
jae
add
ret
add
push
ret
add
outs
test
add
adc
inc
inc
push
pop
inc
in
rol
loopne
shl
fcomi
imul
xchg
jecxz
int
arpl
mov
dec
data16
cmp
rcl
push
int
mov
(bad)
outs
mov
and
and
cmp
ins
xchg
adc
jae
push
xchg
ja
in
push
xor
arpl
inc
ret
ins
xor
pushf
adc
test
lock
xor
inc
out
aaa
daa
jmp
outs
mov
lock
jmp
aaa
sub
cld
cmps
mov
jns
loope
sub
adc
fsin
pop
pop
out
cmc
movs
lahf
popa
imul
adc
mov
imul
push
adc
jge
(bad)
pop
scas
mov
jecxz
mov
arpl
jmp
xchg
mov
jns
data16
xchg
jmp
fisubr
fisttp
outs
inc
(bad)
mov
xor
rcl
popa
mov
call
adc
mov
stos
sti
inc
lds
xor
(bad)
sahf
sahf
(bad)
call
push
out
cmp
pop
fsubr
imul
test
mov
push
pushf
dec
pushf
ficomp
cmp
in
(bad)
pop
jp
repz
xor
rcr
mov
test
nop
push
sub
jmp
stc
add
cmps
shr
aaa
cwde
fsub
sti
outs
jbe
iret
retf
add
or
imul
mov
mov
mov
test
pop
add
pushf
sbb
std
or
xor
pop
pop
add
cmp
cmp
and
std
pop
aaa
int
lds
pop
xchg
push
repnz
in
pop
stc
cmp
mov
ja
mov
push
repz
add
jecxz
shl
mov
sbb
(bad)
out
or
retf
aaa
addr16
mov
inc
enter
mov
lds
adc
aad
add
cmc
push
inc
in
fs
lods
ja
or
int3
into
sahf
sub
inc
sub
and
pop
cwde
mov
or
pop
and
mov
into
fsub
dec
(bad)
sub
inc
mov
mov
call
into
int
xchg
js
cmp
jle
es
mov
xchg
jl
imul
cmp
gs
sahf
sub
or
mov
(bad)
ins
dec
sbb
(bad)
ja
enter
retf
mov
pop
mov
daa
aad
mov
pop
pop
and
ret
shl
rcl
icebp
ror
sub
jb
adc
scas
xlat
fstp
mov
mov
and
push
mov
dec
xchg
enter
mov
popf
ja
std
scas
mov
iret
and
cli
cmp
pushf
and
gs
call
fs
cdq
push
pop
add
sbb
jne
or
gs
fldcw
xchg
mov
and
push
and
pop
dec
bound
stos
cmp
cmp
push
test
jp
jbe
jmp
sbb
cli
in
mov
mov
stos
push
daa
lods
dec
mov
push
jns
rcr
and
inc
jle
push
mov
gs
xor
sbb
sub
push
dec
jno
bound
cdq
not
adc
cld
retf
push
sub
fsubr
mov
std
rcl
jo
jb
cmp
pop
test
jnp
cmps
sti
xchg
(bad)
jmp
or
mov
or
push
mov
repz
jmp
cmps
xor
cmp
xor
adc
dec
scas
cmp
or
lock
out
dec
sub
xchg
in
call
icebp
loop
jb
pop
sbb
fwait
mov
cmps
sub
sbb
ffreep
call
ja
sbb
(bad)
iret
push
lahf
loop
addr16
(bad)
and
sbb
or
arpl
pop
adc
push
sbb
(bad)
aad
dec
cmp
or
or
adc
dec
push
sub
mov
(bad)
pop
idiv
aad
pop
icebp
cmp
addr16
push
xor
mov
adc
ja
cmp
jb
jge
outs
leave
jecxz
pop
mov
(bad)
mov
div
push
cli
inc
in
inc
xchg
popa
mov
gs
dec
jecxz
js
lock
xchg
enter
cmps
inc
cmp
sbb
iret
call
push
bound
daa
mov
outs
xor
fwait
dec
es
(bad)
(bad)
fst
push
mov
in
outs
inc
sub
pop
push
cmps
jecxz
pop
call
aaa
(bad)
mov
sub
xchg
inc
cdq
(bad)
or
dec
sub
aas
sub
and
dec
jl
mov
mov
test
pop
inc
fldenv
jnp
(bad)
out
test
int
jb
inc
lock
mov
into
push
loop
rcl
aaa
and
add
out
(bad)
call
push
lods
adc
and
aam
cmp
cmp
sar
fwait
out
shl
mov
fisubr
jns
cmp
jle
mov
sub
inc
ss
cdq
xor
mov
retf
mov
popa
daa
fidivr
test
xchg
inc
leave
add
addr16
mov
jo
test
sbb
imul
shl
xchg
and
ds
call
xor
mov
ins
(bad)
fimul
push
fimul
sti
add
xchg
or
xchg
cs
in
dec
mov
sti
call
stos
mov
cmp
out
pop
jg
(bad)
mov
cmp
out
sbb
pop
fs
je
adc
mov
push
push
mov
ins
scas
test
mul
xchg
or
jae
pop
dec
nop
clc
xor
mov
daa
pop
imul
sbb
fnstsw
(bad)
into
jnp
sbb
cli
test
jmp
cmc
add
mov
dec
and
jae
xor
or
jne
mov
sub
out
(bad)
push
add
inc
iret
cmp
and
(bad)
sub
arpl
cmps
imul
xchg
pop
xchg
add
(bad)
lods
push
sub
les
bound
repz
jmp
div
jp
sub
shl
shr
nop
xlat
nop
aam
pop
cdq
inc
and
dec
and
dec
push
fild
repz
xor
jno
ret
jne
push
dec
cmp
dec
sub
jge
jne
dec
pop
dec
frstor
push
pop
mov
mov
mov
pushf
pusha
jnp
ss
movs
popf
clc
pop
add
or
in
(bad)
mov
mov
addr16
dec
mov
test
sub
mov
rcl
not
imul
xlat
push
lods
inc
and
ret
cmp
in
outs
and
jnp
ins
pop
push
jnp
push
call
sbb
push
scas
xchg
arpl
repnz
ficomp
js
add
jb
call
push
pushf
arpl
test
push
inc
inc
push
or
ja
xor
dec
cmc
rcpps
sub
shl
cmp
loop
jmp
or
and
adc
js
jl
pop
jg
cmc
mov
lahf
jecxz
push
int3
cmp
xchg
and
rol
lods
and
xchg
shl
daa
fimul
push
mov
pushf
es
cmp
popa
jle
mov
inc
push
sbb
jnp
scas
out
dec
xchg
pusha
mov
shl
dec
jp
clc
push
fidiv
iret
inc
pushf
sti
sbb
ret
jle
outs
mov
das
jae
lods
pusha
jae
fdivrp
test
and
loope
outs
sub
int
test
xor
loope
sub
fxch
add
loopne
adc
shr
retf
mov
xor
push
adc
retf
and
test
mov
sub
mov
aaa
xor
(bad)
pop
mov
jo
mov
stos
push
and
aam
cwde
sti
out
ins
xchg
xchg
fmul
sub
pop
xor
add
adc
dec
jle
(bad)
pop
and
jle
ins
mov
das
add
(bad)
mov
cmp
aas
(bad)
ins
add
(bad)
loopne
ret
aas
repnz
cdq
sub
sti
mov
add
fwait
push
cmp
jmp
adc
loopne
fnstcw
pop
xor
popf
add
ins
or
mov
popa
(bad)
pop
(bad)
ja
cli
add
or
lea
cmp
rcr
xchg
jle
and
jle
cmp
push
xchg
scas
and
in
jle
rcl
dec
call
adc
rol
(bad)
sahf
jae
mov
jg
call
jmp
loop
cld
or
pop
push
cmp
addr16
sub
dec
mov
(bad)
movs
adc
mov
dec
pop
sub
jo
ja
jns
les
push
dec
mov
shl
test
mov
xchg
lods
cmp
jg
push
stc
dec
fmul
or
ror
je
pushf
jmp
push
fdivr
ja
adc
ins
sbb
inc
int3
fcomp
dec
and
adc
mov
push
retf
retf
iret
pop
xchg
pop
or
mov
jmp
jp
popa
ss
stos
shl
inc
out
ss
cmp
or
ja
push
pop
cwde
popf
fstp
sbb
stc
xacquire
mov
inc
or
imul
push
or
pop
sub
push
fs
aam
stos
mov
(bad)
(bad)
fcmovnu
test
xor
adc
inc
mov
or
mov
cmp
sbb
ins
(bad)
movs
ins
push
add
int3
ret
sub
fmul
sbb
cwde
in
sub
jp
cwde
push
push
in
popf
cmp
inc
mov
jg
xchg
popa
sub
push
adc
push
dec
out
cwde
mov
stos
sub
dec
mov
and
jnp
inc
(bad)
(bad)
xchg
mov
push
pop
pop
jne
sar
jp
push
sub
push
mov
in
arpl
in
push
fs
and
dec
dec
std
icebp
mov
clc
shl
inc
cmp
and
std
dec
dec
xlat
mov
or
stos
jno
jge
push
dec
xchg
cli
cmp
je
mov
cmc
xchg
dec
push
mov
and
dec
out
imul
ret
ds
xor
pop
pop
jmp
mov
jg
pop
adc
adc
mov
std
test
jle
cs
jno
xchg
ins
test
mov
fucomp
retf
fcom
push
repz
std
cmc
xchg
jnp
and
cld
or
xchg
mov
mov
mov
mov
aas
dec
add
imul
fs
lahf
xchg
and
dec
enter
mov
add
mov
xor
outs
popf
adc
fbld
jp
mov
inc
(bad)
or
mov
shl
nop
jmp
leave
mov
inc
cmp
in
dec
in
mov
dec
adc
xchg
lahf
and
sub
popf
(bad)
popf
inc
push
out
cmps
mov
dec
loope
mov
popf
sbb
mov
rep
adc
inc
pusha
sbb
fdivr
outs
mov
test
sbb
sub
push
pop
and
ffree
mov
adc
mov
out
push
mov
or
retf
mov
pop
jle
ss
adc
jne
test
js
ror
push
inc
(bad)
int
dec
lahf
test
mov
push
xlat
stc
(bad)
or
jae
mov
out
dec
push
push
xchg
mov
cmps
call
iret
clc
pushw
sar
in
push
mov
retfw
or
leave
call
add
sub
ds
inc
rcr
aam
sub
fs
mov
fnstsw
sar
and
in
out
sahf
ins
cmps
cwde
ds
xchg
out
ins
push
pop
jp
je
hlt
ins
jecxz
jecxz
mov
sub
stos
inc
ss
call
fcomp
std
fisttp
dec
daa
pop
test
pop
test
repz
lods
mov
fild
sbb
xchg
std
push
add
(bad)
sub
ins
push
das
add
jns
cli
add
aam
xlat
fdiv
sub
jmp
hlt
or
imul
cmp
call
fsubr
bound
popf
inc
ds
imul
bnd
xor
xlat
fdiv
xlat
mov
repnz
mov
xchg
fstp
out
out
inc
adc
shl
mov
inc
shr
dec
fs
in
mov
icebp
mov
cmp
and
sub
mov
lahf
jmp
push
outs
xchg
aas
jl
inc
inc
aam
and
aaa
jmp
icebp
fild
data16
dec
scas
dec
cmp
daa
test
push
cmp
aam
xor
cwde
mov
mov
xor
dec
jmp
inc
inc
fdiv
jle
or
shr
fwait
xchg
gs
or
lahf
ret
pop
bswap
ds
sbb
cli
jmp
push
inc
xor
add
inc
test
stos
jae
ret
add
xchg
push
daa
ret
or
jmp
xchg
popf
pop
hlt
movs
in
sahf
shr
movs
(bad)
mov
mov
rol
cmps
test
pusha
test
lahf
xor
xor
arpl
clc
dec
aam
(bad)
stc
push
fwait
dec
shl
push
in
ror
cmp
out
dec
xlat
lock
jmp
mov
push
outs
js
sub
jp
scas
cmp
fld
out
call
test
ficomp
fsub
rcl
lahf
in
mov
mov
cli
pop
xchg
push
cmp
cmp
lds
call
cmp
mov
into
pop
lds
mov
inc
gs
inc
jae
mov
retf
sbb
push
add
jl
imul
xor
stos
repnz
std
xchg
aam
dec
mov
retf
icebp
and
loope
push
leave
loop
cwde
push
hlt
cmp
enter
pop
pop
movs
retf
push
iret
sar
neg
clc
jl
imul
pop
lods
dec
inc
cmp
mov
push
stc
nop
xchg
xor
loopne
in
ja
push
frstor
jge
lea
dec
or
jmp
test
pushf
out
in
cmp
repz
jmp
or
mov
rcr
pushf
xor
shr
ret
div
adc
neg
mov
pop
pop
in
int
cs
(bad)
popf
xor
inc
daa
cmc
mov
sti
sti
xchg
dec
cmp
loope
inc
jp
pop
nop
repz
movs
popf
pop
cmps
jle
aaa
sti
sahf
pusha
push
dec
push
xor
sbb
sbb
daa
jnp
mov
ja
dec
stc
pop
pop
adc
or
push
mov
loope
mov
jo
(bad)
push
pop
pop
adc
cmp
mov
dec
cli
or
sub
xlat
mov
mov
inc
outs
fidiv
movs
jmp
ret
outs
sbb
mov
fwait
and
cmc
out
inc
(bad)
fwait
and
jg
add
(bad)
xor
mov
ror
(bad)
cld
test
jle
stc
sbb
imul
mov
jne
aam
fcom
ins
or
scas
faddp
imul
jg
ficom
mov
bnd
movs
inc
fist
dec
shr
jecxz
mov
inc
pop
iret
sbb
or
xchg
retf
jg
dec
movs
aas
clc
test
fsubr
xchg
idiv
jmp
into
loop
jecxz
jl
dec
stos
fwait
dec
stos
retf
jnp
cdq
lahf
cld
jecxz
in
nop
xlat
sbb
adc
sbb
push
pusha
sahf
cmp
repz
jle
mov
sub
int3
xchg
cmp
push
paddd
into
movs
jle
call
cmovb
dec
lock
in
in
gs
add
imul
push
ror
mov
sbb
sbb
aam
cmp
xchg
jecxz
or
(bad)
bndldx
outs
jg
icebp
push
mov
aad
push
aam
mov
mov
add
repz
aas
(bad)
cld
repz
aas
(bad)
cld
pop
add
add
pusha
cmp
add
dec
inc
scas
inc
pusha
or
add
add
add
(bad)
(bad)
inc
add
add
add
add
add
add
jns
je
ins
cs
jb
ja
outs
addr16
push
gs
imul
xor
xor
inc
jne
je
jb
cmp
jb
ins
sub
push
jne
ins
imul
imul
bound
xor
data16
xor
fs
add
adc
gs
cs
jb
ja
outs
addr16
imul
add
popa
je
pop
add
add
add
add
add
lsl
add
mov
mov
inc
or
add
or
add
add
add
add
or
add
add
pusha
outs
rol
add
add
inc
dec
inc
add
mov
or
popa
add
jo
pop
jae
add
ret
add
push
ret
add
outs
test
add
adc
inc
inc
push
pop
inc
in
rol
sbb
add
loopne
ins
mov
pop
scas
jne
mov
mov
mov
jne
mov
xchg
mov
je
retf
out
pop
jbe
jecxz
jbe
jno
jge
in
repz
js
call
aaa
outs
push
mov
pusha
dec
iret
mov
xchg
retf
mov
ja
jnp
jecxz
in
movs
mov
mov
mov
sbb
inc
iret
adc
mov
jno
and
hlt
push
sti
and
enter
mov
mov
sbb
sbb
push
aaa
lahf
xchg
and
dec
sub
adc
sbb
test
pop
push
and
stc
mov
rcr
mov
mov
sbb
cmps
fisttp
push
jae
cs
data16
push
pop
sbb
jae
sub
xchg
mov
out
inc
mov
loope
lock
xchg
popa
test
popf
(bad)
(bad)
retf
jp
mov
cmp
in
push
bound
pop
adc
lds
pop
mov
jno
outs
sbb
retf
pop
mov
cli
pop
aam
or
retf
(bad)
fstp
test
sbb
jno
or
imul
xchg
stc
aaa
jg
adc
ret
push
imul
aas
or
and
nop
sbb
cdq
xor
cmp
leave
dec
push
mov
push
ins
dec
aas
fwait
lea
pop
iret
cld
push
cli
mov
test
ror
mov
fistp
push
fxch
adc
movs
ret
jo
sub
or
sub
xlat
ficom
shl
out
clc
mov
xor
aaa
cmp
add
xor
sbb
mov
out
pop
add
int
or
xor
push
adc
cwde
(bad)
dec
out
cmc
repnz
mov
data16
inc
mov
inc
fistp
fldcw
shl
pop
mov
xchg
sar
repnz
out
or
int
jmp
sar
sbb
arpl
fiadd
mov
xor
mov
scas
scas
js
or
xchg
xchg
fucomip
mov
vpsllq
sub
push
mov
pop
popf
xor
aas
sbb
pop
(bad)
dec
lds
imul
imul
repz
stos
cwde
repz
jl
outs
mov
adc
mov
cmp
lock
fldcw
jmp
(bad)
gs
out
imul
jg
dec
ins
push
paddsb
and
xchg
fcom
mov
sar
sbb
adc
std
sub
daa
and
add
stos
int
shl
adc
add
scas
lsl
add
popf
je
sub
imul
inc
mov
movups
cmp
lahf
and
push
xor
(bad)
sbb
fwait
aas
sub
inc
call
and
pop
retf
xchg
pop
mov
sub
or
fild
sub
push
mov
pop
(bad)
sbb
lea
pop
inc
jae
out
out
adc
or
xchg
fldcw
imul
mov
adc
pop
pop
sub
and
enter
adc
xchg
lds
rcr
fistp
adc
neg
add
cli
inc
jle
inc
push
cli
leave
xor
iret
jl
pop
les
jbe
pushf
add
mov
or
pushf
mov
mov
jge
mov
jno
je
enter
sub
fcmovu
inc
call
call
adc
ret
cmp
fmul
lods
or
dec
inc
in
out
sub
clc
jmp
cmps
rcr
cdq
out
(bad)
jne
mov
fwait
je
ins
xchg
pop
ficomp
fadd
pop
cmp
mov
mov
sub
and
mov
pushf
jno
rol
fidivr
xchg
repnz
fld
sub
cdq
push
sbb
test
leave
or
sbb
call
pop
jecxz
fwait
cwde
pusha
out
cdq
xor
mov
ins
sbb
dec
out
jle
jle
cdq
out
mov
dec
pop
test
call
push
sub
or
mov
loope
cmp
xlat
arpl
xor
fimul
mov
es
push
retf
bound
icebp
outs
dec
scas
mov
(bad)
call
xchg
je
in
sub
pop
std
dec
inc
xor
xchg
mov
das
int
push
fst
dec
aaa
dec
arpl
nop
(bad)
pop
mov
push
jmp
mov
xchg
mov
sti
cmp
mov
pushf
mov
ret
pop
mov
in
test
outs
xlat
sub
add
or
into
into
mov
sbb
jl
push
enter
test
ss
jbe
pop
mov
xchg
mov
cmp
mov
into
sub
cmp
outs
scas
xor
sub
ins
or
jg
jp
mov
pop
jmp
les
sti
rol
out
movs
add
cdq
dec
fistp
je
pop
leave
push
hlt
fidiv
mov
jae
pop
dec
addr16
fadd
lock
lods
pop
mov
pop
(bad)
xchg
sub
sub
sub
sub
dec
sbb
xor
xor
mov
inc
mov
xchg
dec
pop
xchg
cmp
jno
mov
(bad)
push
aad
sub
out
push
sbb
dec
sbb
mov
cmps
scas
int
ffreep
rcr
lock
loope
sub
pop
cwde
std
xchg
push
cmp
cld
lahf
push
sbb
hlt
mov
es
add
stc
pop
pop
mov
je
pop
or
pop
mov
stos
arpl
(bad)
pop
icebp
cmps
cmp
xchg
push
movs
aas
popa
in
jne
mov
mov
je
out
(bad)
sbb
mov
cmp
and
sar
repz
cld
cmp
into
repz
outs
push
inc
movs
fwait
in
mov
adc
cmc
nop
rcl
pop
or
mov
mov
daa
jne
lahf
jae
push
outs
mov
repz
lahf
inc
neg
es
loop
cmp
(bad)
dec
(bad)
adc
(bad)
stos
or
mov
shr
ins
inc
sbb
and
imul
in
push
lea
cli
fild
mov
xor
sub
push
loopne
mov
push
test
jmp
mov
loope
jmp
fbstp
test
push
xchg
ins
test
scas
imul
jae
inc
sbb
in
scas
int3
and
ret
pop
mov
ja
loop
loope
sub
cmp
and
shr
inc
or
imul
imul
movs
mov
cs
outs
out
pop
add
imul
dec
jmp
(bad)
fmul
sbb
in
(bad)
push
jnp
hlt
das
push
mov
movs
or
daa
ja
push
push
dec
lea
loop
stos
and
pop
cmp
bound
outs
cmc
inc
mov
mov
push
cmp
inc
cmp
(bad)
clc
out
ret
cmp
fdivr
push
fmul
xchg
xchg
es
ror
cdq
inc
cmp
(bad)
xchg
cwde
shr
pop
shl
xor
sbb
adc
fcomp
fstp
cmp
aaa
aas
push
jo
out
sub
add
(bad)
mul
sbb
mov
stos
mov
dec
jge
leave
mov
jno
ins
dec
idiv
inc
mov
(bad)
dec
pop
bound
mov
pop
and
mov
add
retf
or
cmp
shr
out
dec
fdiv
arpl
dec
loope
imul
stc
or
inc
xor
pop
into
dec
jmp
pop
mov
popa
pop
out
fidivr
out
aam
enter
pop
push
popf
add
mov
fsub
(bad)
call
jae
xor
jl
push
in
jae
ss
xchg
push
mov
dec
fistp
in
cmp
sbb
sub
inc
mov
das
push
imul
mov
pop
out
cld
lea
xor
ja
adc
jge
add
xchg
jo
sbb
inc
icebp
sub
sub
pop
pop
sbb
cdq
inc
arpl
xor
popa
jns
scas
push
mov
mov
mov
sbb
sbb
cmp
sbb
loopne
scas
pop
mov
lds
xor
pop
mov
push
lock
and
in
imul
dec
sar
mov
test
nop
ror
mov
out
and
dec
cmp
push
adc
or
adc
mov
mov
ja
call
push
or
sahf
fnstsw
mov
shl
jne
(bad)
push
or
mov
or
cmc
cmc
and
mov
sub
in
(bad)
call
leave
cs
cwde
ret
mov
rcl
mov
arpl
mov
sbb
aaa
and
push
test
jae
ins
or
add
outs
ja
std
cdq
jbe
inc
xchg
je
mov
mov
or
cs
inc
mov
mov
jp
adc
mov
ja
jg
push
addr16
pop
scas
movq
daa
std
clc
mov
sti
int
fiadd
cld
push
mov
stc
lods
out
add
cli
push
dec
nop
sbb
xor
inc
fcmovu
xchg
jp
jo
and
bound
ds
sub
outs
mov
xchg
dec
test
loope
add
movs
add
jae
dec
and
mov
pushf
xchg
arpl
stos
xor
sub
mov
jae
lock
inc
xor
aam
sub
push
pop
mov
gs
add
stos
in
fdiv
cmp
push
rcl
jmp
fisttp
add
test
mov
not
xor
xor
xor
mov
cmp
ins
loopne
adc
xchg
mov
fild
jb
adc
dec
outs
push
aad
lahf
sub
scas
mov
jae
call
ja
jne
xchg
jge
push
jmp
popf
xchg
or
adc
clc
jnp
xchg
dec
and
es
fisttp
imul
sbb
xchg
inc
mov
icebp
jl
xchg
xor
sbb
adc
dec
das
loopne
push
sahf
dec
sub
xlat
mov
stos
jl
icebp
pop
in
outs
into
push
mov
(bad)
sbb
in
retf
sbb
pop
enter
mov
pop
mov
pop
pop
or
push
adc
out
xor
inc
sub
dec
popf
mov
dec
imul
ja
push
jno
shl
xchg
data16
jmp
cmp
xor
cmps
neg
jns
lock
pusha
ja
fist
jno
das
sub
jns
imul
fcomp
pop
clc
jnp
(bad)
pop
mov
mov
add
cmp
jl
or
push
jnp
sub
nop
add
jl
retf
fucomip
sbb
sahf
and
adc
repz
pop
outs
pop
shl
rcl
mov
fsubp
lahf
cld
in
ins
inc
fiadd
out
add
loopne
test
lods
cmp
int3
cmp
xchg
jle
(bad)
aam
aas
sti
add
sti
mov
cdq
repz
(bad)
sbb
jge
idiv
push
mov
pop
pop
clc
xlat
lock
dec
and
xor
stos
dec
hlt
jb
stos
adc
out
cmc
in
sti
jp
rol
data16
stos
inc
jns
shr
dec
xchg
pop
test
mov
movs
cmp
rcl
(bad)
out
xor
push
or
pop
(bad)
rol
sar
sub
sbb
push
jns
scas
aas
mov
shl
ret
xor
lods
popf
sub
test
adc
mov
mov
fdivr
sar
loope
fdiv
mov
mov
mov
xchg
sbb
ror
gs
in
(bad)
(bad)
out
mov
sahf
out
push
dec
and
test
sar
cmp
cdq
pushf
retf
retf
enter
arpl
pop
xchg
es
fcom
cmp
pushf
xchg
mov
inc
test
pop
pop
pop
ss
mov
adc
inc
loopne
arpl
xor
cli
xlat
mov
movs
lds
xor
call
mov
push
inc
cmp
xor
dec
adc
adc
pushf
push
xor
sub
pop
ja
inc
cld
adc
xor
sti
ret
cs
imul
sbb
neg
inc
pusha
ins
inc
(bad)
xchg
fst
ret
stc
fmulp
adc
adc
cli
sub
es
xchg
lods
add
pushf
in
push
dec
push
dec
mov
cmp
ins
shld
add
retf
daa
xchg
and
mov
push
adc
out
dec
pop
add
cmp
xchg
out
cmp
ins
ins
mov
pushf
pop
mov
xchg
dec
pop
movs
mov
test
lock
fldenv
(bad)
and
mov
add
mov
xor
fwait
pop
cwde
mov
(bad)
add
sub
pushf
xchg
jb
rol
add
push
or
or
fisttp
enter
mov
into
(bad)
mov
pop
mov
dec
shr
retf
das
jp
xor
lahf
aad
pop
pop
into
frstor
stos
into
add
xlat
cmp
movs
fcomp
in
loop
pushf
dec
std
jg
jle
fcomip
(bad)
cmp
call
js
in
or
xor
int3
stc
mov
push
sub
push
inc
cmp
push
mov
xchg
mov
xchg
mov
adc
adc
je
xchg
les
iret
int3
(bad)
sbb
arpl
lods
cmc
cmp
mov
mov
xchg
cs
imul
or
mov
mov
xor
jb
outs
dec
hlt
test
call
out
inc
adc
(bad)
xchg
sub
rcr
mov
or
in
adc
adc
mov
mov
scas
mov
arpl
inc
repz
add
mov
or
in
cld
jns
les
(bad)
sbb
push
jecxz
pusha
xor
push
cmp
mov
cmp
xchg
std
jle
fs
add
pop
and
mov
(bad)
bound
repnz
test
popa
pusha
out
jecxz
int3
push
jle
test
mov
jb
mov
jle
fs
addr16
pop
and
aad
mov
or
mov
or
pop
repz
out
lea
(bad)
mov
jo
and
into
pop
leave
lahf
fild
(bad)
outs
fcmovnu
adc
popf
push
adc
inc
or
xor
out
xchg
xor
and
add
mov
push
enter
enter
xchg
jmp
or
inc
xlat
int
xor
pop
daa
fidiv
and
retf
sbb
stos
fiadd
mov
lods
inc
jmp
jg
popf
push
cmp
sub
loop
or
adc
add
mov
inc
push
adc
inc
xor
mov
or
cmp
and
cli
inc
xchg
cmp
sar
push
mov
lea
ja
xor
inc
pop
fcomp
xor
cli
xlat
push
scas
sti
xchg
mov
into
in
xchg
pop
xchg
or
cld
and
nop
jmp
popa
jno
inc
inc
jmp
jp
sbb
cdq
movs
aad
cli
sbb
or
shl
repnz
xor
adc
sub
mov
mov
jl
lods
mov
clc
jb
xor
scas
mov
loop
mov
ss
test
cmp
and
scas
pusha
lock
or
outs
aam
pop
inc
repz
adc
jae
enter
dec
mov
vmovq
adc
cli
sar
mov
mov
mov
inc
adc
cld
xchg
mov
stos
inc
pop
test
add
out
push
xor
xchg
mov
mov
inc
cmps
push
pop
aaa
dec
xchg
mov
loopne
clc
ja
popa
shl
jg
stc
out
jg
stc
out
jmp
sar
out
push
jmp
add
add
dec
inc
dec
inc
scas
inc
pusha
or
add
add
add
(bad)
(bad)
inc
add
add
add
add
add
add
jns
je
ins
cs
jb
ja
outs
addr16
push
gs
imul
xor
xor
inc
jne
je
jb
cmp
jb
ins
sub
push
jne
ins
imul
imul
bound
xor
data16
xor
fs
add
adc
gs
cs
jb
ja
outs
addr16
imul
add
popa
je
pop
add
add
add
add
add
lsl
add
mov
mov
inc
or
add
or
add
add
add
add
or
add
add
pusha
outs
rol
add
add
inc
dec
inc
add
mov
or
popa
add
jo
pop
jae
add
ret
add
push
ret
add
outs
test
add
adc
inc
inc
push
pop
inc
in
rol
loopne
xchg
cmps
(bad)
out
je
(bad)
dec
out
fwait
xchg
aaa
sbb
jmp
fidiv
fnsave
fstp
push
add
rcr
sbb
sti
(bad)
jecxz
jge
or
cmp
xlat
adc
adc
mov
or
(bad)
mov
push
retf
pop
jae
and
push
push
popf
ds
neg
cdq
hlt
pushf
adc
mov
jno
xchg
(bad)
pop
pop
inc
out
dec
icebp
movs
pop
fld
cmc
sbb
sbb
push
sub
mov
push
imul
fst
repnz
add
out
idiv
mov
cmp
ret
jns
es
in
test
push
push
mov
retf
cmp
push
pop
push
call
pop
push
jge
sahf
jae
dec
mov
mov
jo
or
outs
pop
mov
xor
fsubr
mov
mov
iret
push
movs
popa
ins
mov
mov
ds
jl
cmps
mov
mov
and
sbb
imul
sbb
push
repnz
push
jmp
sub
pop
shl
jl
jmp
outs
xchg
pop
push
fadd
cs
adc
or
imul
mov
outs
xlat
inc
imul
dec
fwait
mov
adc
movs
idiv
cs
int
das
je
mov
gs
xor
mov
jle
lods
cdq
popf
push
leave
in
mov
dec
cmps
mov
cwde
cmp
pop
mov
stc
xlat
icebp
sub
jo
mov
shl
push
or
hlt
stos
cmp
outs
or
xor
stos
and
or
pop
sub
(bad)
cmp
inc
jge
jle
hlt
mov
mov
mov
dec
gs
mov
xchg
daa
test
mov
add
pop
pop
mov
mov
jmp
or
xor
into
enter
fidivr
outs
inc
cs
aad
jp
pop
popf
stos
daa
fild
ficomp
or
movs
adc
xor
dec
mov
dec
mov
dec
xchg
mov
sbb
fmul
sub
inc
imul
das
mov
fisubr
jnp
imul
mov
aaa
pusha
lahf
or
out
sbb
lods
mov
xchg
or
(bad)
call
pop
dec
scas
jno
mov
jecxz
retf
xor
jae
dec
mov
out
xor
sbb
mov
out
fistp
outs
xlat
out
xchg
jnp
and
(bad)
jno
sbb
jb
add
fiadd
or
xchg
or
shl
aad
jg
cmps
mov
rol
aad
add
jmp
dec
les
sbb
out
std
adc
mov
jl
cwde
add
int
push
xor
inc
and
adc
push
mov
mov
dec
cmp
das
ja
or
push
mov
add
sbb
adc
stc
pushf
scas
adc
retf
fisubr
cmp
sar
sub
jl
mov
data16
add
clc
fldcw
mov
cld
dec
inc
pop
inc
shr
xor
xor
icebp
push
mov
data16
mov
xchg
sbb
enter
mov
and
sub
cld
mov
ror
jmp
push
retf
cmc
(bad)
jge
jge
cli
jbe
mov
pop
cmc
ins
sbb
in
fadd
sub
fldcw
stos
shr
test
or
ins
popf
call
clc
cld
push
gs
ds
or
inc
mov
stc
imul
xor
jg
ins
repnz
sub
ins
or
inc
adc
jge
pop
clc
or
push
and
jecxz
xchg
xchg
(bad)
xor
or
or
aas
arpl
jp
(bad)
stc
ror
loopne
ins
(bad)
xchg
test
dec
(bad)
jmp
adc
or
push
ficom
popa
xor
xor
retf
jmp
mov
pop
cdq
ret
xor
mov
retf
jmp
pop
ins
cld
out
jmp
mov
sub
inc
daa
push
leave
test
mov
adc
int3
gs
jle
fisttp
or
mov
add
fwait
xchg
sbb
stos
scas
leave
lahf
mov
or
in
add
cmp
cmp
(bad)
push
or
or
mov
jo
cdq
lods
and
mov
stc
mov
jmp
test
mov
mov
push
in
inc
fsub
leave
jmp
inc
daa
xchg
cmp
mov
and
jmp
and
aad
jl
dec
lods
clc
dec
and
enter
or
pop
inc
mov
lods
add
push
fnstcw
in
sti
push
div
mov
imul
leave
push
inc
fs
fsub
pop
loop
xchg
out
ror
sub
push
int3
adc
div
aad
inc
xor
test
in
int
cmc
adc
lea
mov
pop
ins
and
cld
jb
out
int
test
fcomi
or
clc
jmp
cmp
aad
push
lahf
cdq
cmp
daa
fwait
in
cmc
repz
jno
in
push
xlat
and
jns
push
and
and
leave
xchg
stos
xor
pop
scas
jb
mov
aaa
lea
xlat
popa
dec
test
sub
retf
dec
add
jno
mov
sub
xor
xchg
loope
dec
(bad)
jo
in
adc
imul
test
(bad)
jo
push
daa
aaa
(bad)
and
call
inc
ja
fs
xchg
sub
fistp
add
fwait
sub
xor
mov
mov
aas
or
adc
push
fsubrp
cli
mov
push
ja
xchg
cli
int
frstor
js
icebp
sub
cs
punpckhwd
cli
scas
jbe
inc
mul
xor
test
or
push
mov
imul
mov
(bad)
aad
cwde
(bad)
cmp
mov
jnp
mov
movsx
dec
mov
repz
jg
adc
dec
out
mov
xchg
ds
mov
jle
(bad)
jne
cmp
sub
xchg
add
pop
or
mov
shl
rcr
push
sbb
pusha
imul
les
mov
pop
xchg
pusha
pop
pop
hlt
pop
mov
mov
xchg
stos
inc
add
shl
(bad)
dec
rol
dec
or
(bad)
or
push
fs
dec
(bad)
jnp
lock
push
movs
mov
mov
pop
jle
cmp
mov
out
cmp
sti
and
cmc
lods
jae
sub
repz
lods
(bad)
movs
into
(bad)
jb
pop
or
inc
push
push
cmc
das
(bad)
xor
sbb
retf
or
jne
dec
sbb
pop
jbe
gs
or
inc
hlt
add
xchg
and
jg
loope
pop
and
inc
sti
stos
fidivr
sbb
push
clc
mov
xchg
cld
(bad)
add
sub
dec
loope
inc
add
ret
cmp
mov
mov
mov
jae
stos
and
dec
xor
push
jb
out
inc
pop
test
lods
int3
xor
sbb
jmp
cli
push
js
shl
in
cmp
add
scas
and
stos
or
test
(bad)
into
(bad)
pop
shl
mov
mov
jl
sub
mov
in
sbb
mov
mov
add
jg
pop
fisttp
lock
stos
jb
adc
jb
xchg
(bad)
sbb
jmp
loopne
add
out
sbb
out
frstor
xchg
xchg
push
in
in
mov
enter
sahf
add
mov
or
loopne
ret
mov
outs
jae
(bad)
js
leave
push
dec
inc
xlat
pop
jo
js
out
xor
in
add
imul
sti
stc
mov
in
adc
add
pop
push
outs
push
sub
adc
push
push
or
push
fidiv
xchg
into
retf
into
xlat
xor
je
inc
sti
js
mov
or
loop
imul
aam
push
dec
and
scas
pop
nop
mov
psubd
lea
and
into
add
(bad)
into
push
mov
into
jns
xor
sub
dec
and
jmp
xor
dec
xchg
ror
sub
ss
inc
fpatan
add
xchg
ds
loopne
push
loopne
sub
outs
adc
ds
xchg
or
ror
call
bound
jno
fwait
dec
adc
mov
ds
test
arpl
out
sbb
inc
xchg
sbb
pop
gs
jl
hlt
icebp
js
dec
and
sub
(bad)
or
dec
out
pop
sub
test
adc
or
movs
sbb
inc
jmp
pop
xlat
xchg
dec
mov
ins
not
mov
in
aam
(bad)
xor
outs
sbb
adc
push
dec
inc
cmc
pop
push
aad
xlat
xor
jge
mov
add
sti
mov
cmp
and
aas
imul
inc
scas
pusha
inc
cmp
add
pop
fs
test
xor
jmp
push
bound
test
daa
test
fnstcw
sbb
and
jecxz
and
push
bnd
hlt
mov
jge
(bad)
pop
dec
cmps
fcomp
test
mov
jge
and
dec
add
stos
pop
in
sub
push
jecxz
or
dec
and
sub
jge
scas
scas
xor
xchg
bound
push
sub
popa
mov
jmp
adc
sbb
and
xchg
xor
or
out
out
jae
mov
pop
into
call
adc
leave
pusha
xor
std
lods
add
repnz
sub
xlat
or
add
xchg
outs
inc
xchg
sbb
in
(bad)
mov
call
cli
xor
adc
cmp
fsub
add
jno
cmc
pop
sub
adc
sub
add
jg
das
mov
sub
lock
inc
ss
pusha
ret
xchg
mov
push
dec
adc
mov
out
lock
fidivr
dec
xchg
jo
fbstp
push
mov
or
addr16
lods
repnz
into
test
add
jo
and
sub
out
icebp
inc
push
sub
pop
(bad)
mov
scas
cwde
retf
dec
mov
loopne
retf
mov
push
cwde
out
div
mov
stos
sub
and
inc
add
jg
lds
dec
jnp
cmps
dec
ret
fstp
test
fs
addr16
pop
aad
adc
mov
bnd
icebp
pop
dec
xchg
add
push
push
dec
bound
scas
push
jp
lods
push
add
xchg
xchg
ins
sub
jmp
xchg
adc
test
cmp
add
cmps
loop
add
push
mov
push
lahf
xchg
gs
clc
or
lahf
push
aaa
(bad)
sbb
dec
cmp
inc
sub
add
movs
mov
enter
mov
adc
push
(bad)
shl
cld
loope
lods
or
mov
out
out
fsubr
xor
aam
imul
fcom
(bad)
test
stos
adc
fsub
sbb
xor
push
leave
sbb
inc
adc
push
in
sbb
mov
jmp
fldpi
aaa
inc
adc
aaa
fild
adc
cmp
jbe
and
fst
sub
push
mov
add
xor
mov
push
and
movs
and
mov
add
pop
sub
shr
in
call
sub
out
and
(bad)
gs
iret
cdq
imul
xor
orps
fist
xor
dec
fdiv
imul
adc
daa
pushf
xor
pop
xchg
data16
adc
push
xchg
sbb
stos
jmp
(bad)
loope
xor
hlt
lea
mov
xchg
ins
mov
mov
cwde
cmp
mov
rcl
sub
push
push
or
pop
test
mov
push
loopne
lds
(bad)
cmp
rcl
pop
fwait
mov
xchg
fsubr
xor
mov
jl
pop
push
mov
lea
mov
jmp
cmp
adc
dec
sub
pusha
aad
js
inc
pop
sub
test
shr
pop
movs
gs
jge
imul
cmp
je
iret
cmp
mov
lods
cmp
pop
or
lods
jg
into
jl
js
aaa
dec
fsubr
jae
push
int
sub
or
mov
daa
into
(bad)
sbb
nop
fcmovne
call
push
pusha
je
rcr
(bad)
jmp
scas
dec
cld
xor
sbb
shr
xor
dec
jmp
sbb
jl
cmp
cdq
cmp
mov
arpl
mov
aam
gs
mov
pop
ja
jmp
cmp
(bad)
int
mov
inc
ret
jmp
movs
outs
xchg
iret
imul
mov
stos
movs
bound
retf
inc
test
(bad)
loope
outs
je
stc
jmp
xchg
sbb
push
dec
(bad)
sahf
rcl
sub
xchg
jnp
cmc
cmp
fmul
xor
addr16
sbb
lahf
xor
je
mov
imul
xor
jle
jne
mov
shl
scas
addr16
adc
stos
adc
or
mov
(bad)
loope
fiadd
ror
iret
push
push
mov
arpl
or
cmc
cmp
cs
push
mov
push
cmp
mov
outs
pop
out
fstp
sub
jg
sub
call
sub
or
out
jbe
xor
in
rcr
ss
ret
pushf
cmp
add
popf
or
sbb
rol
scas
aaa
sbb
push
push
retf
test
(bad)
sbb
das
call
cmp
xchg
lds
cld
sub
out
iret
pop
xor
adc
(bad)
sbb
lods
ins
sbb
ret
into
dec
sbb
aas
outs
ret
dec
dec
inc
mov
sbb
outs
dec
xlat
out
popa
stc
mov
mov
ror
mov
(bad)
xor
nop
dec
mov
(bad)
sbb
mov
jmp
adc
jbe
push
pop
stc
pop
call
mov
lahf
cmp
loop
call
repnz
jge
mov
xor
fdiv
add
sub
mov
push
or
inc
mov
inc
aam
push
or
and
jge
test
and
cld
xor
adc
(bad)
faddp
clc
retf
repz
mov
enter
aas
dec
loop
xor
les
movs
enter
xor
or
ins
(bad)
adc
ja
cdq
dec
rcr
std
fnstenv
cmps
push
cld
popf
or
in
nop
ja
lods
stos
ret
add
daa
cli
mov
or
mov
fsubrp
test
jns
out
int3
cmp
pop
pushf
and
inc
retf
lods
push
sub
sbb
dec
rol
cmc
sbb
mov
jbe
cwde
fisub
jmp
(bad)
mov
xor
leave
imul
clc
push
in
dec
cdq
cmp
sbb
sbb
movs
stos
lods
dec
push
push
(bad)
push
dec
call
loop
dec
(bad)
(bad)
bound
sub
(bad)
repz
aam
cmp
lea
pop
jbe
xor
mov
mov
pop
ss
jb
int
add
pop
push
hlt
inc
bound
sbb
jns
or
aaa
(bad)
xor
pop
lock
das
in
(bad)
ficomp
movs
sub
mov
(bad)
aaa
cmp
push
or
enter
sbb
sbb
mov
jl
sbb
(bad)
fucom
and
xchg
mov
bound
push
and
into
dec
pop
retf
mov
(bad)
sti
pop
adc
aam
push
push
stc
or
xchg
pop
sti
aas
mov
dec
mov
and
dec
aaa
xor
stc
out
jg
stc
out
jg
scas
add
inc
aas
pop
repz
fcmovnb
push
add
add
dec
inc
dec
inc
scas
inc
pusha
or
add
add
add
(bad)
(bad)
inc
add
add
add
add
add
add
jns
je
ins
cs
jb
ja
outs
addr16
push
gs
imul
xor
xor
inc
jne
je
jb
cmp
jb
ins
sub
push
jne
ins
imul
imul
bound
xor
data16
xor
fs
add
adc
gs
cs
jb
ja
outs
addr16
imul
add
popa
je
pop
add
add
add
add
add
lsl
add
mov
mov
inc
or
add
or
add
add
add
add
or
add
add
pusha
outs
rol
add
add
inc
dec
inc
add
mov
or
popa
add
jo
pop
jae
add
ret
add
push
ret
add
outs
test
add
adc
inc
inc
push
pop
inc
in
rol
ror
out
out
xchg
adc
adc
or
movs
sbb
push
sub
imul
out
data16
dec
(bad)
into
dec
mov
leave
xor
inc
cmp
add
fwait
xor
add
test
inc
mov
inc
pop
adc
cmc
jle
ficomp
andnps
inc
mov
rcr
dec
sub
xor
shr
ret
call
aam
out
adc
mov
jge
inc
loop
add
mov
cs
lahf
lods
(bad)
int
aaa
push
sbb
adc
iret
pop
inc
loop
xchg
mov
mov
mov
out
vandnpd
ins
push
or
dec
or
mov
push
shr
jmp
push
enter
pushf
adc
and
fwait
xor
cli
(bad)
pop
mov
lahf
adc
aad
xor
lahf
aas
dec
pop
imul
js
inc
inc
rcr
(bad)
pop
into
or
sub
in
xor
jl
pop
lock
(bad)
aam
sub
(bad)
sti
pop
fadd
adc
in
pop
sub
xlat
scas
mov
loopne
clc
mov
enter
sbb
sub
jmp
add
retf
lahf
cmp
cmps
adc
out
int3
movs
scas
push
fcomp
fidivr
mov
ret
(bad)
xor
lock
mov
sub
jle
dec
xor
not
mov
pushf
das
xchg
mov
mov
or
cmp
sbb
jmp
sbb
cmc
jp
(bad)
push
out
mov
std
xor
movs
mov
iret
test
ss
ja
xor
cmps
addr16
imul
adc
je
inc
pop
loop
loopne
fst
cmp
cli
fdiv
dec
inc
retf
mov
icebp
dec
clc
jo
jmp
jno
sbb
mov
mov
add
daa
mov
adc
daa
(bad)
cmp
mov
neg
cmp
cmp
mov
lock
stos
xchg
in
jo
lods
(bad)
fiadd
sbb
inc
cmp
in
jmp
pop
jle
pop
repnz
mov
add
js
int
xor
or
dec
mov
pmullw
sub
add
xchg
mov
ss
rcr
sbb
(bad)
test
jp
dec
xchg
xlat
push
mov
dec
bound
pop
aam
xor
test
stos
mov
inc
xor
in
push
and
cmc
pushf
dec
stc
not
jmp
cmp
ins
inc
scas
jno
scas
ins
in
xor
pop
xchg
mov
mov
out
stos
dec
jge
and
into
mov
retf
mov
xchg
xor
jmp
xchg
shl
xlat
frstor
or
pop
shl
inc
or
jae
mov
jl
mov
inc
inc
pop
je
xchg
add
push
movs
sbb
jge
sbb
mov
mov
ss
repnz
(bad)
sub
and
xor
mov
clc
nop
xchg
test
and
es
fnstenv
out
xor
jmp
fst
pusha
pop
clc
jb
ins
push
pushf
sbb
daa
(bad)
push
or
jmp
nop
xchg
jb
ja
push
fstp
or
and
movs
jmp
icebp
vcvtps2dq
test
push
jno
or
push
cmp
fwait
inc
(bad)
fsubrp
call
fwait
pop
mov
sbb
daa
jle
mov
out
hlt
mov
add
data16
iret
test
std
call
inc
repz
pop
or
sub
rol
xchg
xchg
mov
cmp
jl
arpl
test
lods
mov
or
inc
rol
inc
daa
add
jl
cmps
xchg
bnd
iret
or
adc
retf
pop
xor
push
add
dec
lds
stos
jmp
arpl
cld
dec
jmp
je
adc
mov
push
jp
mov
daa
push
repz
push
add
and
mov
cs
sti
xchg
adc
pop
addr16
pop
dec
stc
aad
jmp
pop
jb
aas
xchg
lahf
jle
push
mov
and
iret
jmp
call
int3
dec
xor
es
push
stos
(bad)
loopne
gs
xchg
daa
lea
std
jo
(bad)
repnz
xchg
xor
sub
inc
outs
mov
arpl
dec
cmp
xchg
xchg
jbe
or
(bad)
cmp
push
cli
push
call
sbb
leave
jns
(bad)
fld
jnp
daa
mov
jl
inc
test
inc
call
mov
inc
mov
scas
push
(bad)
fwait
pop
out
sbb
dec
mov
xchg
push
ins
cmp
mov
mov
sub
arpl
and
or
jmp
shl
out
add
mov
jo
js
je
(bad)
sub
push
adc
fwait
inc
imul
and
and
add
and
into
mov
and
out
sbb
cmps
jle
sar
loopne
xor
cmp
jmp
loope
add
scas
xor
sbb
adc
adc
cmp
adc
into
popa
retf
adc
push
cmp
sbb
sti
inc
pop
pop
fstp
loope
push
and
movs
jnp
sub
mov
enter
mov
rol
cld
cwde
repnz
pop
push
mov
mov
mov
mov
repnz
add
pop
mov
inc
popa
xchg
xor
xor
dec
enter
xlat
cmp
adc
inc
or
adc
mov
xor
or
scas
jmp
iret
cli
cmc
inc
sbb
push
sahf
push
ret
xchg
fwait
bound
pop
xor
stc
int
jnp
push
add
push
movs
rol
fidiv
push
cmp
sbb
pop
cwde
movs
stos
icebp
test
fisubr
enter
mov
adc
mov
(bad)
into
or
push
jg
or
pop
ss
sbb
mov
cli
mov
xchg
mov
cmp
jnp
ds
or
scas
fnstsw
mov
pop
repz
pop
loope
push
fist
daa
add
push
and
push
xlat
cmp
jo
ins
inc
mov
mov
mov
mov
pusha
mov
jbe
rol
push
aaa
mov
cmp
pop
mov
push
xlat
int3
push
aas
leave
stc
pop
or
and
test
or
aam
mov
(bad)
sbb
jno
jmp
lock
xchg
jl
stc
in
cld
in
cmp
loopne
xor
xchg
pop
or
xchg
mov
enter
pop
rcr
fwait
dec
cmc
mov
shl
mov
adc
cmp
inc
pop
inc
pop
mov
sub
test
cmp
mov
(bad)
pop
shl
fwait
int3
xchg
mov
mov
xchg
cmp
inc
xchg
sub
outs
std
xchg
add
pop
shl
mov
mov
leave
pop
cmp
sbb
xor
popa
fnstsw
jmp
mov
(bad)
or
xchg
ins
fist
aas
in
lock
mov
jb
pop
pop
inc
mov
movs
sub
mov
ss
gs
mov
jnp
pop
mov
adc
jle
dec
repz
repnz
sti
cmps
les
clc
movs
ins
ja
jnp
movs
mov
scas
lahf
out
rcr
cmps
retf
jnp
mov
mov
int
in
ins
adc
dec
pop
int3
popf
loope
in
jl
adc
mov
or
cmc
clc
loope
xchg
(bad)
sub
mov
out
xor
dec
mov
jp
fisttp
mov
scas
jecxz
dec
xchg
jg
jno
mov
icebp
mov
mov
daa
push
push
test
jmp
ins
cmp
sbb
les
in
fwait
dec
ds
adc
jge
and
push
ss
pop
mov
add
inc
cld
(bad)
rcl
push
sti
or
repnz
aas
popf
scas
(bad)
ds
mov
test
loop
xor
sbb
sbb
or
mov
adc
stc
addr16
in
cld
jl
xchg
imul
imul
xchg
stos
jg
aas
cmps
scas
pop
sar
or
fdivr
out
adc
push
or
movs
(bad)
mov
mov
out
pop
jne
or
leave
jo
cli
pop
xlat
out
or
xor
ins
and
loop
dec
sbb
push
icebp
sub
cmp
dec
xor
mov
jge
add
sub
(bad)
mov
add
sub
jecxz
lahf
mov
adc
call
mov
mov
sbb
mov
inc
test
push
fcmovb
cdq
jp
xchg
cmps
fsubp
aam
or
ja
add
jne
mov
loope
pop
xchg
aad
pop
cmp
scas
dec
(bad)
jo
inc
sub
xor
xor
iret
popa
mov
clc
(bad)
in
adc
push
xor
dec
xchg
mov
push
pop
pop
(bad)
ss
jo
xchg
jge
pshufw
(bad)
sub
xchg
fst
xor
mov
outs
jecxz
jo
sbb
sub
dec
mov
cmp
xchg
inc
ins
daa
jnp
leave
pop
test
pop
or
pop
hlt
jne
adc
cmp
or
imul
sub
scas
mov
xchg
mov
(bad)
les
std
mov
ds
js
adc
cld
gs
mov
xlat
or
inc
inc
fmul
loope
movs
pop
xlat
pop
cmp
cmp
test
je
sbb
popf
pusha
and
push
repnz
cmp
xchg
and
(bad)
fld
push
and
xchg
adc
repz
cs
dec
loop
sbb
dec
cld
mov
outs
fs
pop
sub
outs
xchg
mov
jns
js
fwait
xchg
jne
and
inc
xor
dec
js
cld
int
in
inc
or
mov
retf
fldcw
cmp
jge
outs
mov
push
outs
mov
adc
(bad)
mov
shr
iret
shl
ins
push
addr16
add
fld
add
addr16
jl
jl
xlat
(bad)
repz
xchg
test
in
mov
(bad)
jb
gs
arpl
cmp
mov
fldenv
xor
jmp
xchg
mov
mov
push
dec
shr
(bad)
xor
pop
mov
push
arpl
mov
mov
fisttp
ds
out
repnz
push
mov
cld
xor
inc
pop
dec
mov
mov
aam
cmp
or
nop
lods
into
test
pop
mov
mov
mov
jb
adc
fwait
cmps
rol
cmovne
std
mov
scas
mov
popf
push
retf
sub
push
lods
sub
pop
xchg
push
mov
jmp
push
push
fldl2e
out
shl
adc
ret
cmp
mov
push
pop
jge
xchg
movs
sub
inc
loop
pop
repnz
jle
imul
or
dec
fisub
das
imul
or
test
mov
and
ja
pop
fisubr
dec
retf
push
jb
ds
jmp
aad
stc
movs
das
shl
mov
(bad)
icebp
int3
xchg
or
sub
xchg
cmp
xchg
shr
lock
inc
push
push
push
cmps
jbe
ret
push
mul
(bad)
iret
add
daa
(bad)
push
out
xchg
sub
jb
ret
sub
out
test
fild
mov
xchg
inc
mov
(bad)
ins
adc
xchg
outs
lahf
ss
xchg
ins
sbb
int
in
mov
cdq
fdiv
jp
aam
sub
pop
add
jl
test
sbb
jnp
jbe
test
out
sar
or
mov
adc
(bad)
push
cld
pop
xor
mov
in
movs
jmp
in
xor
xchg
out
cmp
xchg
sub
lock
add
and
mov
push
xchg
fbld
ss
repz
div
cmc
sbb
loope
mov
adc
scas
bound
pusha
dec
dec
inc
push
ins
icebp
pop
dec
ja
sub
cli
mov
xchg
cmp
and
(bad)
pop
mov
adc
das
jmp
jne
or
test
and
or
dec
sub
fnstsw
sahf
add
pop
fdivr
not
ficom
dec
je
fisttp
mov
cmp
sub
sub
mov
mov
xchg
cmp
mov
cmp
mov
xchg
dec
dec
mov
inc
mov
movs
and
jp
push
int
iret
out
sub
cmc
xchg
lods
popf
sbb
data16
cwde
test
cmp
ss
popa
sub
sub
les
pop
sub
sbb
call
frstor
xchg
loopne
fsub
jnp
test
xchg
out
lods
sub
and
(bad)
out
xlat
inc
or
ins
in
leave
pop
sahf
mov
fisubr
retf
pop
sub
add
aas
daa
dec
or
fistp
sub
test
cs
xor
ret
das
dec
mov
fcomp
adc
jle
push
cmp
push
stc
outs
sbb
adc
sbb
popf
in
frstor
inc
lods
xlat
lods
or
fnstcw
pop
in
lock
lods
std
or
test
retf
je
pop
repnz
fucom
lea
xchg
fiadd
dec
jmp
xchg
lods
push
rol
mov
sbb
das
mov
lahf
outs
jg
lea
mov
les
adc
push
in
dec
mov
mov
bound
or
mov
cmc
sub
outs
sbb
push
inc
lds
push
dec
add
and
aas
loopne
fs
jne
mov
push
xchg
sub
(bad)
jbe
daa
cmc
jne
dec
sti
pop
aam
fs
inc
in
mov
and
add
sahf
int
xor
dec
cmps
outs
(bad)
js
ret
scas
adc
jle
and
scas
popf
inc
shl
xchg
and
sub
inc
test
icebp
mov
mov
ins
imul
sub
mov
push
jmp
push
fisubr
jnp
int
scas
test
dec
popa
push
pop
xchg
sbb
repz
loop
sub
mov
dec
xchg
xchg
mov
bound
mov
cmp
jbe
or
aad
loopne
in
imul
leave
inc
fimul
pop
scas
mov
aad
std
xchg
loopne
ss
mov
mov
js
jmp
cmp
lods
lahf
mov
test
sbb
jmp
jle
dec
mov
movs
lods
inc
outs
jp
cmp
sub
ret
(bad)
neg
adc
xlat
add
vmovmskpd
xchg
jne
push
mov
and
mov
out
or
stos
add
aas
fimul
sbb
cmp
ficom
pushf
sub
pop
stc
enter
add
(bad)
jo
jle
mov
es
push
lods
adc
ret
sub
cmp
icebp
mov
dec
test
push
fidivr
adc
ja
ins
adc
dec
repz
test
fs
xchg
sub
sti
adc
adc
pop
stc
adc
fwait
loope
and
or
cmp
mov
mov
jb
int
adc
inc
es
in
in
loop
outs
cwde
xchg
in
pop
sti
xor
mov
sbb
push
fwait
lods
sbb
jge
ja
pop
mov
(bad)
adc
jecxz
aas
movs
psraw
xor
pop
sub
add
fidiv
add
popf
call
xchg
ins
(bad)
in
sahf
jl
inc
test
push
cdq
pop
sub
xchg
mov
push
sub
sbb
xchg
pop
lds
sahf
loop
pop
scas
les
push
icebp
shl
inc
mov
cdq
pop
je
sbb
xor
iret
aam
(bad)
and
int
sub
xor
mov
inc
push
lahf
sub
clc
ss
mov
popf
shr
jno
xlat
push
popa
stos
ror
inc
popf
add
loope
mov
cmp
push
icebp
or
in
mov
(bad)
push
add
outs
pop
fstp
movzx
sub
cld
mov
ret
aad
clc
scas
and
add
rol
and
xor
jecxz
mov
rcl
(bad)
loope
sub
ins
xor
mov
ins
and
push
xchg
mov
pop
(bad)
sub
enter
fwait
or
pop
std
popa
add
scas
push
cmp
adc
dec
xchg
icebp
ds
out
(bad)
repz
(bad)
cld
out
(bad)
stc
iret
jg
scas
add
inc
fistp
pop
das
add
add
dec
inc
dec
inc
scas
inc
pusha
or
add
add
add
(bad)
(bad)
inc
add
add
add
add
add
add
jns
je
ins
cs
jb
ja
outs
addr16
push
gs
imul
xor
xor
inc
jne
je
jb
cmp
jb
ins
sub
push
jne
ins
imul
imul
bound
xor
data16
xor
fs
add
adc
gs
cs
jb
ja
outs
addr16
imul
add
popa
je
pop
add
add
add
add
add
lsl
add
ret
adc
add
mov
inc
or
add
or
add
add
add
add
or
add
add
pusha
outs
rol
add
add
inc
dec
inc
add
mov
or
popa
add
jo
pop
jae
add
ret
add
push
ret
add
outs
test
add
adc
inc
inc
push
pop
inc
in
aam
and
pop
add
scas
mov
mov
pushf
call
popa
push
rcl
shl
dec
ja
je
pushf
out
push
aaa
arpl
clc
aas
out
jecxz
out
jl
and
cwde
lahf
jne
fdivr
sbb
mov
mov
jg
sub
test
aas
jbe
or
cmp
out
addr16
lahf
shl
pop
dec
sbb
jg
add
add
mov
add
pop
es
cmp
fbstp
cmp
cmp
mov
adc
or
jg
or
jmp
out
mov
psadbw
add
rol
rcr
sbb
mov
mov
mov
xchg
rol
into
sbb
sub
jbe
push
cmps
iret
cmps
and
xchg
xchg
pop
mov
loop
rol
sub
jle
jbe
xor
cmc
call
mov
nop
outs
mov
shl
pop
sub
jae
jmp
mov
push
mov
cmc
push
(bad)
mov
int
lods
mov
test
daa
dec
jbe
xchg
sub
adc
push
mov
cmp
push
cmp
mov
mov
push
jne
les
int3
dec
pop
je
mov
lea
or
push
jmp
pop
js
pop
mov
sbb
pop
pusha
lock
in
ret
inc
pop
movzx
pop
push
inc
leave
dec
mov
cmp
mul
shl
popf
into
jl
push
add
ror
scas
mov
pop
jmp
dec
pop
lods
mov
test
and
sbb
jge
mov
xor
cmp
data16
jns
test
pop
dec
mov
aam
dec
pop
pop
lea
jmp
mov
std
icebp
scas
cld
loopne
sbb
not
push
cli
pop
mov
cli
fadd
loope
push
dec
jns
jp
sbb
loope
sub
pop
push
add
add
dec
mov
int
sahf
adc
mov
pop
add
cmc
cmp
or
push
mov
cdq
sub
cld
push
into
dec
cmp
push
(bad)
mov
ret
mov
mov
out
rcl
cmp
mov
mov
dec
mov
(bad)
addr16
bnd
xor
imul
inc
fisub
xchg
xchg
mov
ins
mov
scas
into
imul
imul
sbb
dec
pop
daa
loope
and
shl
xchg
ds
leave
adc
push
cs
sub
push
in
retf
and
xchg
add
scas
mov
jno
sbb
jecxz
jo
iret
inc
xor
dec
xchg
mov
les
aaa
add
in
inc
mov
inc
mov
dec
adc
cmp
clc
mov
mov
inc
test
fdiv
data16
adc
mov
ficomp
mov
sub
out
mov
pop
push
popf
jns
and
mov
lahf
xlat
or
jl
cmp
ja
(bad)
enter
int
sub
push
sar
sub
cdq
jecxz
stos
pop
pusha
sub
sahf
adc
sub
dec
sub
stc
daa
(bad)
in
pop
mov
mov
mov
cmc
test
es
dec
out
out
jae
adc
mov
mov
cdq
cdq
push
cmp
inc
push
sub
xor
out
mov
add
int
test
lock
sti
or
mov
jb
push
inc
out
cmc
rcl
pop
mov
inc
addr16
jnp
test
push
jmp
cmp
stos
ret
sbb
dec
mov
bound
xor
sbb
xlat
and
and
out
mov
outs
push
jge
lods
cmp
repz
cmp
xor
in
out
enter
(bad)
push
pop
adc
mov
jmp
out
sub
lods
adc
mov
scas
retf
add
xchg
sbb
test
mov
sahf
dec
jnp
outs
push
addr16
shl
js
test
dec
adc
movs
aaa
or
(bad)
(bad)
hlt
mov
cmp
repnz
call
add
push
adc
loopne
cdq
arpl
retf
jl
push
aam
add
jmp
adc
mov
aas
cmps
out
repz
jl
push
sar
stos
pop
jmp
pop
cmp
mul
popa
leave
out
add
dec
leave
mov
out
mov
div
jg
pop
and
xchg
jmp
mov
pop
icebp
loope
xor
xlat
inc
sub
pop
in
into
inc
lea
cli
dec
mov
or
pop
xor
mov
push
xchg
test
fs
cwde
add
les
push
scas
cmp
jl
mov
xor
jae
(bad)
call
mov
xchg
and
js
(bad)
pop
in
jno
mov
xchg
push
pop
cmp
push
cmp
sbb
jno
arpl
(bad)
push
and
test
xchg
in
mov
in
int
push
fdivr
pop
sahf
fimul
js
dec
pop
and
iret
hlt
call
test
bound
mov
mov
sub
cld
stos
dec
sub
(bad)
loope
in
movs
inc
push
dec
outs
mov
xacquire
push
jg
enter
mov
(bad)
cld
and
outs
add
fmul
(bad)
sub
cmps
mov
fidiv
cwde
and
call
push
packsswb
mov
cmp
jecxz
adc
out
jo
fcomp
lahf
imul
or
call
repz
test
sahf
mov
add
cmp
jae
sub
cmc
stos
int3
or
and
jnp
cld
aaa
push
dec
xor
mov
shl
pextrw
mov
adc
dec
jp
mov
cmc
ss
popf
inc
pop
in
repz
pop
out
sub
sub
shl
sbb
jne
sbb
xlat
fwait
cmc
mov
or
pop
jns
(bad)
mov
(bad)
sub
xor
mov
das
sub
in
jns
outs
and
pop
lods
je
push
adc
dec
inc
fmul
scas
inc
dec
out
test
adc
jno
pop
retf
rcl
inc
sbb
or
push
add
(bad)
cmp
shr
loop
movs
jns
cmps
call
shl
mov
jno
imul
xchg
cli
pushf
jne
scas
scas
popf
inc
iret
call
popf
xor
and
and
adc
sbb
cmp
loope
enter
clc
mov
pop
pusha
retf
fistp
fucomi
sbb
imul
or
in
mov
sbb
sub
stos
pop
arpl
out
arpl
repnz
cmc
js
mov
dec
mov
lahf
jle
aaa
inc
icebp
int
loopne
imul
inc
adc
xlat
xchg
sbb
or
add
out
adc
in
lds
mov
jb
jl
lods
(bad)
fiadd
(bad)
pushf
pop
lods
mov
mov
xacquire
mov
xchg
out
out
mov
outs
add
enter
cwde
jge
(bad)
xchg
xchg
sbb
or
(bad)
lock
repz
daa
(bad)
and
ret
jbe
pop
out
(bad)
sub
clc
out
repz
repnz
cmp
cld
lods
dec
dec
jecxz
pop
mov
xchg
sub
pop
jns
or
add
add
fdivr
dec
loop
inc
shl
xchg
(bad)
xchg
and
inc
aaa
(bad)
cwde
adc
or
mov
daa
retf
jnp
fdivr
mov
test
cmp
mov
jmp
outs
dec
cmc
repz
(bad)
dec
pop
cdq
lods
sbb
fisttp
xchg
rcl
pop
bound
cmp
imul
push
mov
stc
out
mov
inc
adc
mov
cmc
mov
inc
jecxz
or
dec
fcom
sbb
movs
gs
pop
mov
xchg
xor
mov
retf
cmps
test
sbb
jle
or
mov
hlt
arpl
pop
das
push
mov
(bad)
imul
int
cmps
retf
mov
xchg
das
lock
sub
fisttp
(bad)
mov
in
test
popa
int3
mov
xchg
mov
jecxz
jl
(bad)
in
inc
inc
test
pop
out
pop
pushf
jmp
xor
or
jbe
out
mov
shl
je
and
popf
in
jmp
(bad)
in
hlt
inc
loop
(bad)
repz
lahf
dec
jns
mov
sub
sbb
mov
mov
enter
(bad)
scas
dec
mov
ret
sub
inc
pop
xchg
mov
mov
mov
(bad)
adc
push
std
cmp
push
push
jae
xchg
xchg
dec
dec
sub
sti
fs
inc
rol
pop
adc
scas
out
dec
adc
out
cmp
(bad)
lock
cmps
out
test
add
out
mov
add
jb
cmp
xchg
ret
pop
outs
cmp
lds
lods
mov
mov
add
xchg
cmc
xchg
test
sbb
push
pop
popa
sbb
repnz
gs
dec
fsubr
stos
mov
ins
cmp
xor
call
pop
idiv
jne
into
stc
cmps
sbb
inc
mov
mov
mov
or
and
and
sti
imul
ja
jns
je
mov
jbe
dec
cmp
inc
xor
add
jecxz
int
in
mov
mov
mov
cwde
stos
push
out
loopne
push
shl
ss
test
inc
dec
sub
rcr
jmp
lods
jecxz
push
fwait
ror
jno
lods
inc
pushf
stc
hlt
cli
jo
mov
jp
inc
xchg
add
push
or
pop
mov
data16
sbb
aaa
iret
hlt
inc
mov
sahf
std
add
(bad)
call
rcr
jmp
pop
aam
fld
in
add
pop
fidiv
mov
jle
inc
int3
mov
xchg
std
scas
aas
ffree
lahf
inc
and
cdq
imul
push
into
mov
pop
imul
jns
push
int
push
lds
rcr
les
scas
scas
ret
and
int
outs
fs
xchg
js
arpl
movs
popa
mov
cli
(bad)
imul
xor
cli
jecxz
push
ret
addr16
and
ficomp
clc
sbb
out
or
pop
cwde
push
clc
sbb
jbe
push
ds
repz
mov
pop
fwait
inc
pop
in
loopne
inc
lock
(bad)
jecxz
je
mov
cli
arpl
sub
xchg
xchg
jecxz
imul
mov
pusha
mov
mov
lds
add
and
movs
cmp
cmp
cmc
mov
das
adc
test
mov
out
sbb
add
xchg
inc
xchg
es
fstp
(bad)
cmp
lods
aaa
scas
test
jecxz
test
push
std
mov
or
test
mov
jne
iret
lea
push
test
in
fisttp
test
into
jb
or
cmc
jb
cmps
std
sbb
mov
cmp
or
aaa
xlat
jb
scas
test
fldenv
or
push
xor
dec
mov
jne
or
sub
hlt
invd
outs
ja
push
aaa
add
pop
rcl
aas
mov
fndisi(8087
xor
outs
(bad)
or
das
adc
dec
mov
(bad)
mov
(bad)
stos
aaa
or
pop
push
cmp
pop
and
sahf
mov
scas
inc
dec
mov
mov
stc
pushf
leave
cmps
jbe
sahf
ins
cmp
xchg
inc
cmp
cmc
add
test
dec
sbb
popa
stos
gs
push
jbe
int
cmp
test
std
pop
mov
xlat
xchg
popf
xor
cli
test
fsubr
xor
in
pusha
test
xor
les
cmp
idiv
ja
or
cmc
sub
cli
or
pop
and
jle
mov
mov
dec
fimul
dec
xor
pop
mov
(bad)
shl
xchg
push
jle
mov
loope
cli
dec
mov
pop
and
ror
push
inc
xlat
cmps
inc
sub
and
xor
mov
dec
scas
push
or
or
ins
and
leave
fdivr
jmp
mov
loop
imul
xor
jl
adc
es
inc
outs
cld
jge
push
push
sbb
sub
repnz
outs
mov
pop
xchg
mov
jo
std
inc
int
and
fild
enter
inc
js
stc
and
(bad)
xor
into
add
dec
test
ja
stos
and
cdq
out
sub
data16
es
clc
mov
mov
jns
push
stc
(bad)
mov
data16
scas
nop
pop
xor
mov
mov
ss
mov
cmps
lods
add
push
in
push
repz
repnz
add
dec
outs
push
jmp
(bad)
mul
sahf
sbb
(bad)
movs
push
lds
xchg
int3
push
xor
in
cmc
ror
sbb
call
jge
inc
xchg
stos
mov
test
aaa
dec
icebp
(bad)
jl
imul
mov
push
aaa
or
sbb
cmp
and
enter
mov
das
jp
cld
hlt
jno
neg
xor
out
cmp
leave
pusha
outs
dec
leave
sbb
jmp
gs
sub
cmp
push
jge
lock
add
add
inc
add
jecxz
paddusw
shl
lahf
adc
imul
aas
(bad)
aam
test
imul
cmp
and
sbb
and
cmps
lea
popf
mov
cdq
sbb
xor
call
mov
mov
test
push
fadd
outs
js
(bad)
and
int
adc
xchg
pop
mov
mov
add
xchg
retf
leave
sub
gs
dec
clc
pop
cmps
mov
push
push
or
dec
xchg
jnp
mov
xlat
(bad)
fwait
inc
sub
sub
push
retf
sbb
test
cdq
aad
lods
dec
in
mov
test
fstp
repnz
pushf
cmp
pusha
fdivrp
(bad)
mov
pushf
scas
(bad)
push
push
xlat
out
or
(bad)
cld
inc
div
sub
dec
(bad)
xchg
not
inc
popa
movs
(bad)
out
pop
rol
sbb
test
mov
sub
repnz
dec
xor
jae
(bad)
mov
adc
inc
in
inc
aad
lahf
(bad)
mov
mov
aaa
fcmove
cmc
pop
cmp
inc
push
cwde
into
(bad)
(bad)
scas
xor
adc
mov
dec
ja
sbb
retf
int3
ror
aad
push
add
repz
lds
mov
fdivr
push
stos
je
mov
mov
test
xchg
xchg
push
sub
les
inc
xchg
popf
ss
cs
inc
js
ror
mov
or
into
xchg
pop
or
out
push
mov
and
dec
outs
call
jae
das
or
mov
xor
add
xlat
jmp
pop
repz
loopne
lahf
jmp
cld
icebp
daa
mov
push
push
(bad)
sti
retf
mov
(bad)
jecxz
lahf
inc
cmp
test
xor
mov
cmps
xor
sbb
in
stos
(bad)
push
int
jno
stos
stc
or
adc
jl
in
call
jl
sub
xor
mov
jmp
dec
dec
xchg
cmp
jbe
dec
lea
and
movs
adc
cmp
push
push
scas
adc
or
inc
sub
or
jae
icebp
lock
cmps
test
sbb
shl
jb
pop
jecxz
jle
arpl
xchg
mov
das
repnz
aas
outs
imul
mov
in
cli
jmp
lahf
cmp
xchg
jns
popf
popf
mov
jb
hlt
or
dec
pop
sbb
shl
jo
dec
and
outs
fbstp
pusha
jnp
dec
aas
adc
mov
out
out
sub
sbb
fbstp
pop
retf
clc
cmps
dec
movs
pop
and
xchg
aas
dec
jnp
popa
sub
(bad)
xchg
xlat
(bad)
or
xor
xor
xchg
retf
lea
dec
and
js
rol
aaa
(bad)
popa
in
shl
adc
fmul
in
mov
dec
(bad)
push
arpl
mov
hlt
lods
mov
jae
mov
scas
out
call
xchg
sbb
in
or
jge
and
cld
repz
aas
(bad)
cld
repz
aas
(bad)
cld
mov
fwait
adc
aas
popf
add
add
dec
inc
dec
inc
scas
inc
pusha
or
add
add
add
(bad)
(bad)
inc
add
add
add
add
add
add
jns
je
ins
cs
jb
ja
outs
addr16
push
gs
imul
xor
xor
inc
jne
je
jb
cmp
jb
ins
sub
push
jne
ins
imul
imul
bound
xor
data16
xor
fs
add
adc
gs
cs
jb
ja
outs
addr16
imul
add
popa
je
pop
add
add
add
add
add
lsl
add
mov
mov
inc
or
add
or
add
add
add
add
or
add
add
pusha
outs
rol
add
add
inc
dec
inc
add
mov
or
popa
add
jo
pop
jae
add
ret
add
push
ret
add
outs
test
add
adc
inc
inc
push
pop
inc
in
rol
loopne
fcom
pushf
sbb
cmps
mov
(bad)
jmp
pushf
mov
(bad)
jmp
cmps
mov
or
pop
jns
iret
add
js
clc
out
xor
out
lods
mov
mov
mov
stos
iret
out
rcl
cmc
lods
sub
es
cmp
mov
mov
nop
xchg
das
xor
xchg
into
mov
fnstcw
cli
push
(bad)
jmp
test
pop
dec
repnz
dec
mov
pop
retf
enter
in
pop
(bad)
xor
loope
lods
push
dec
fwait
pop
add
outs
lea
fmul
add
push
cs
lods
je
scas
jle
pop
test
jmp
xchg
jp
cwde
stos
popf
sub
aas
imul
mov
mov
das
adc
mov
fnstcw
nop
xor
clc
sub
cmp
xchg
jp
aad
mov
pop
pop
int3
(bad)
pop
mov
adc
inc
push
mov
arpl
ror
dec
pop
mov
mov
cmp
inc
mov
xchg
inc
cli
loope
mov
repnz
cmp
dec
icebp
fiadd
outs
loopne
call
push
gs
xchg
fidiv
mov
sub
and
sbb
hlt
add
ja
sub
cld
rol
or
sbb
ret
jmp
outs
pusha
imul
mov
es
and
cmps
push
leave
pop
adc
sahf
inc
inc
(bad)
sti
dec
or
cmps
fidivr
arpl
popa
jp
mov
inc
inc
lahf
sbb
inc
push
mov
push
ds
mov
sahf
sub
xor
pop
and
mov
push
inc
mov
sbb
pop
mov
or
sbb
cld
fistp
or
xor
add
mov
mov
lea
add
test
pop
or
dec
mov
push
(bad)
jmp
xlat
mov
sbb
pop
mov
retf
lahf
and
jo
mov
(bad)
iretw
jne
mov
mov
sbb
in
push
stc
data16
(bad)
adc
or
add
in
mov
imul
xchg
pop
scas
fldcw
adc
hlt
jo
cld
or
inc
jmp
icebp
enter
fwait
ins
call
movs
mov
jp
jne
jecxz
or
nop
add
test
dec
jb
add
(bad)
frstor
daa
jno
pusha
mov
sub
clc
pusha
inc
in
jbe
imul
sbb
and
sbb
repz
imul
jle
ins
add
leave
mov
pusha
cmp
in
outs
adc
cmc
(bad)
fisubr
xchg
jmp
pop
sahf
in
xchg
imul
and
jbe
dec
jnp
(bad)
jmp
test
test
out
mov
xor
cs
pop
push
aad
inc
add
mov
xor
ja
ins
lds
sbb
mov
or
mov
xchg
cmp
mov
xchg
and
pop
sub
ret
lock
push
pushf
out
inc
(bad)
mov
mov
into
and
movs
sahf
pop
pop
xchg
iret
fisubr
shl
iret
or
fld
mov
(bad)
jmp
xchg
outs
pop
xor
pop
jmp
mov
cmp
loope
in
jl
in
mov
inc
clc
jb
sub
push
ins
xor
lock
aaa
or
cmp
push
sti
pop
sahf
xor
push
mov
idiv
or
scas
rcl
or
popf
es
push
xchg
test
pushf
call
sbb
mov
or
icebp
pop
stc
aad
std
ds
mov
(bad)
in
pop
and
test
imul
cmp
sub
add
sub
sbb
push
add
push
sti
cmp
in
jnp
ret
adc
stos
rol
mov
in
cmp
xchg
add
mov
gs
mov
xchg
les
imul
ficomp
add
dec
das
mov
xchg
push
or
cs
or
mov
mov
leave
mov
daa
push
sub
fld
jg
sub
loopne
call
and
pop
out
bound
jmp
imul
add
mov
jp
mov
jo
lea
push
or
pop
adc
test
sti
aaa
std
inc
inc
div
push
mov
ret
jecxz
mov
xor
xor
sub
mov
ins
or
fwait
lea
out
push
pop
ds
jnp
inc
aad
jno
fsubrp
add
clc
movs
test
jmp
clc
loop
clc
ret
test
xchg
fst
lods
xor
nop
stos
daa
xchg
jmp
aad
jo
or
lock
xchg
int3
dec
les
(bad)
jmp
stc
popf
mov
mov
mov
jmp
push
mov
out
inc
inc
mov
frstor
fdivr
std
cs
rol
scas
xchg
inc
inc
mov
fstp
(bad)
into
cmp
jp
pop
outs
arpl
jmp
outs
mov
mov
push
push
sub
test
iret
mov
push
mov
stos
mov
xchg
ficomp
jns
loope
lahf
movs
lea
xor
xor
loopne
xor
mov
and
clc
inc
out
fdivrp
push
hlt
sbb
fsubr
pop
int
inc
dec
into
das
shr
mov
(bad)
mov
test
dec
sub
adc
es
add
push
jge
add
daa
xchg
cwde
movs
mov
dec
lahf
pop
mov
pushf
test
popf
mov
xchg
sbb
not
jb
outs
scas
stc
pop
mov
cmp
imul
dec
stc
mov
cmp
mov
data16
mov
ret
jne
pushf
add
jbe
mov
mov
mov
jge
and
sub
add
dec
leave
pop
lods
leave
mov
mov
dec
mov
(bad)
fcomp
mov
cmp
pop
inc
pop
daa
adc
or
add
pop
sbb
ss
lods
mov
push
pop
scas
mul
mov
ja
mov
jp
repnz
cwde
cmp
loopne
jb
movs
mov
mov
dec
inc
inc
fnstsw
and
add
sbb
mov
fs
ins
hlt
mov
popf
pop
scas
mov
pop
std
and
and
and
js
sub
and
xchg
inc
mov
aaa
dec
scas
(bad)
mov
push
cli
int3
adc
icebp
scas
rcr
sub
scas
sub
mov
outs
ret
sub
lds
dec
push
jg
popf
mov
loop
lods
scas
bound
mov
pop
out
pop
lock
push
leave
mov
sbb
mov
daa
test
xor
out
dec
test
das
js
test
out
cmp
les
inc
scas
xor
jbe
jb
xchg
sub
enter
adc
adc
repz
inc
ds
dec
sbb
repz
ret
and
nop
add
ret
retf
js
cmp
out
mov
pop
inc
jbe
mov
jmp
out
xor
jp
mov
cmps
mov
in
(bad)
cmps
jne
mov
inc
cs
mov
push
sbb
pop
retf
pop
jmp
(bad)
test
retf
pop
stos
sbb
dec
xchg
inc
xor
and
pop
xchg
mov
rol
dec
adc
fadd
xchg
mov
mov
mov
bound
imul
shr
or
cmp
mov
pop
xor
(bad)
dec
stc
ficomp
push
inc
and
fidivr
test
sbb
ret
ins
out
(bad)
fisubr
std
cmp
push
loope
rcr
inc
mov
mov
(bad)
jmp
shr
mov
jns
cmp
sar
in
sub
repnz
push
adc
into
sahf
mov
fnsave
adc
pop
xchg
in
cmps
mov
adc
mov
mov
xchg
xchg
jg
xchg
jne
pusha
add
add
mov
int
stos
js
inc
(bad)
(bad)
fimul
mov
mov
push
sbb
jns
jbe
mov
mov
push
out
aam
stos
adc
sti
rcr
out
retf
sbb
popf
jp
jmp
cwde
push
fwait
les
(bad)
iret
outs
and
(bad)
imul
pop
cmc
test
retf
mov
xchg
dec
cdq
and
xor
fsubr
out
add
fstp
outs
pop
xlat
call
jae
(bad)
push
(bad)
fldcw
and
call
fstp
fcom
xor
(bad)
dec
fisubr
sbb
idiv
hlt
mov
lds
adc
mov
sbb
repz
pop
push
jmp
sbb
out
(bad)
mov
and
add
jb
cdq
xchg
mov
add
aad
loop
loopne
cmc
in
(bad)
int
mov
mov
(bad)
push
ins
sub
xchg
imul
mov
std
ss
rol
int
pushf
cmp
fld
or
mov
popa
mov
loopne
xchg
jno
dec
daa
pop
xor
nop
sti
lea
imul
sub
jmp
mov
pop
stos
ret
add
jnp
mov
xchg
xchg
dec
loop
(bad)
mov
add
fild
add
mul
adc
clc
cmp
aaa
popa
in
push
je
ja
and
outs
jp
loop
mov
cdq
shr
add
cmp
jmp
shr
movs
scas
mov
das
xchg
cs
mov
cmp
loop
bound
popa
stos
ret
pushf
cmpps
dec
cmp
and
adc
add
ror
adc
xlat
jnp
js
loop
adc
ins
ins
ja
iret
xchg
sbb
pop
out
pushf
jnp
push
xchg
rcl
arpl
cld
fwait
push
push
jecxz
cs
push
retf
inc
inc
mov
cli
jae
test
push
push
xor
aaa
loopne
xor
cmp
and
ins
or
adc
ins
jmp
nop
test
add
je
adc
push
jnp
cld
add
je
stos
fsub
ja
out
fimul
xchg
rcl
adc
mov
rcr
mov
dec
out
push
push
repnz
into
xor
cs
data16
(bad)
push
jmp
loop
and
jo
or
jns
in
fdiv
ss
push
int
cmps
addr16
daa
dec
popa
inc
cdq
mov
mov
mov
sub
test
inc
and
dec
jg
or
push
movs
jne
xor
jae
and
cmp
in
cmp
test
das
lahf
scas
add
retf
lea
mov
jecxz
xchg
scas
push
(bad)
jle
out
mov
xchg
adc
cli
imul
or
ss
push
xlat
(bad)
mov
lods
es
xchg
push
adc
mov
movs
adc
retf
sub
mov
mov
push
scas
in
add
fild
jmp
jbe
ficom
neg
push
mov
mov
dec
mov
test
or
aaa
dec
clflush
cs
movs
jmp
movs
mov
mov
lea
stos
xchg
mov
dec
mov
mov
lock
pop
bound
(bad)
jp
sbb
cdq
in
pop
mov
test
cmp
cmc
push
in
popa
jle
les
pop
cmps
jecxz
mov
dec
sti
fneni(8087
aaa
xor
sub
mov
neg
jmp
sbb
ret
pop
sbb
call
loop
sbb
push
test
jb
fstp
xchg
mov
jno
mov
popf
mov
(bad)
stc
sub
inc
sbb
xor
test
out
fisubr
call
and
mov
sub
data16
test
int3
inc
lds
cdq
imul
jg
cmp
push
pop
in
xor
or
(bad)
shl
jp
test
pop
rcl
icebp
cmp
mov
aaa
adc
sbb
mov
leave
pop
sub
or
lods
std
mov
jecxz
push
inc
nop
jle
jg
arpl
cmps
cli
dec
cs
adc
(bad)
xlat
call
popf
jb
inc
add
jge
jno
clc
(bad)
mov
aam
mov
mov
xor
dec
sahf
repz
mov
lods
nop
jne
jae
je
cmp
hlt
sub
rcl
rcr
into
leave
in
(bad)
adc
mov
shl
or
shl
in
test
fild
stos
popa
fcom
dec
cmp
mov
outs
add
clc
test
cmc
xor
outs
movs
das
sti
mov
popf
cmp
lods
aaa
test
test
(bad)
outs
jg
loope
leave
cwde
into
adc
cdq
cmp
pop
ffreep
fcomp
ret
jmp
jns
mov
sub
out
sub
lods
cli
jl
or
outs
jo
xchg
jns
dec
stos
outs
jb
retf
pop
mov
xchg
aad
shl
xchg
mov
aam
inc
loope
adc
dec
call
jle
xor
fs
sub
xchg
shl
cmps
push
pop
or
jp
outs
cmp
inc
xor
cmp
jmp
mov
mov
hlt
xor
jp
jle
gs
add
adc
push
xchg
xchg
ret
jg
lods
mov
xchg
cwde
loopne
jg
std
inc
pop
adc
mov
(bad)
sti
xchg
xor
fwait
xchg
fstp
dec
repnz
out
add
mul
jp
ror
xchg
shr
fsubr
xor
adc
test
aam
pop
aas
and
xor
int3
ret
and
std
cmp
movs
addr16
fidivr
push
sub
js
push
mov
daa
jmp
jg
(bad)
test
ret
scas
add
in
xor
test
inc
cmp
push
xchg
ins
into
retf
inc
sub
or
gs
sub
inc
loope
pop
mov
xor
pop
sahf
cmp
outs
jge
xor
test
sti
fst
pop
ror
test
aam
add
repnz
lock
xlat
add
in
sbb
xchg
outs
ret
cwde
shl
pushf
mov
shl
mov
sub
xor
int3
push
mov
xor
aaa
out
stos
movs
out
test
pop
adc
dec
jl
xchg
mov
mov
sub
push
sbb
sub
sbb
adc
mov
mov
push
mov
bound
js
adc
or
loope
fwait
push
retf
out
mov
(bad)
jmp
je
fcomp
sti
fsubr
adc
das
mov
and
sub
daa
inc
xchg
out
cli
push
push
pop
mov
push
aas
out
stc
and
test
sahf
sub
cwde
cdq
mov
ins
repnz
mov
cld
sub
add
dec
test
dec
or
data16
push
mov
dec
inc
pop
adc
sub
push
add
ins
pop
or
fwait
shl
add
sbb
test
ins
retfw
pop
pop
in
xchg
cli
lahf
jns
add
or
daa
gs
(bad)
jno
fwait
aas
js
mov
xchg
pop
pop
jne
jno
int
cmps
push
ja
inc
sbb
out
and
gs
mov
(bad)
out
bound
xchg
xor
cmp
cmps
es
push
xchg
sub
push
xor
shl
xchg
test
bound
sbb
or
jg
retf
cs
inc
jno
js
out
xor
les
out
repnz
mov
bound
fimul
inc
neg
test
adc
mov
jns
cmp
rcr
loopne
adc
aaa
pop
in
fcom
jl
push
dec
cdq
jb
retf
aaa
add
repz
(bad)
cld
out
(bad)
stc
iret
jg
scas
add
inc
cmp
cmc
(bad)
inc
fisub
add
add
dec
inc
scas
inc
pusha
or
add
add
add
(bad)
(bad)
inc
add
add
add
add
add
add
jns
je
ins
cs
jb
ja
outs
addr16
push
gs
imul
xor
xor
inc
jne
je
jb
cmp
jb
ins
sub
push
jne
ins
imul
imul
bound
xor
data16
xor
fs
add
adc
gs
cs
jb
ja
outs
addr16
imul
add
popa
je
pop
add
add
add
add
add
lsl
add
rcl
add
mov
inc
or
add
or
add
add
add
add
or
add
add
pusha
outs
rol
add
add
inc
dec
inc
add
mov
or
popa
add
jo
pop
jae
add
ret
add
push
ret
add
outs
test
add
adc
inc
inc
push
pop
inc
in
rol
aam
add
loopne
jno
push
cmp
pushf
mov
fisub
sub
and
mov
cs
cmp
fs
lahf
mov
pop
sbb
and
sub
sahf
pop
add
cmp
lahf
sub
movs
data16
ds
or
loopne
(bad)
out
mov
lods
pusha
sbb
call
cmc
or
pop
push
loope
and
jmp
jnp
js
loop
dec
inc
jbe
pop
scas
movs
add
mul
mov
int
cdq
call
ins
mov
mov
out
ins
or
ins
popa
stos
ins
stos
inc
xor
rcl
imul
les
mov
xor
xor
inc
out
stc
test
mov
and
sub
stc
in
mov
add
in
test
add
nop
mov
sub
lahf
mov
lods
in
repnz
and
jle
cmps
clc
push
test
clc
mov
scas
into
fiadd
bound
bound
and
mov
add
cli
bound
in
jge
ins
cmc
inc
aad
adc
mov
adc
fisttp
clts
cmp
addr16
xor
fnstenv
jmp
mov
and
cwde
in
aad
cld
jmp
mov
(bad)
lds
out
xchg
lahf
repz
mul
add
clc
mov
inc
pop
cli
sub
ds
sbb
xchg
psrld
push
stc
or
cdq
stos
jge
test
sub
fnstcw
test
repz
arpl
(bad)
sar
ss
pop
sbb
movs
jg
xor
in
sete
push
inc
sbb
and
adc
in
(bad)
loop
shl
cdq
stc
xchg
cmp
jle
ret
mov
cld
sub
or
gs
push
cmp
push
jmp
and
fld
fs
repz
add
inc
and
daa
mov
out
out
and
pop
dec
das
push
inc
mov
adc
mov
cdq
jp
imul
add
xor
enter
(bad)
jl
and
sti
ret
inc
add
aas
in
xchg
pop
jp
inc
out
std
inc
push
mov
popf
out
aaa
add
test
mov
pop
out
ins
call
and
or
adc
lods
ins
xor
sahf
out
stos
xor
cdq
jmp
scas
cli
and
test
fnstcw
int
outs
jl
mov
bound
retf
mov
clc
leave
in
xor
adc
dec
mov
ss
pop
mov
enter
adc
xor
xor
fsubr
in
push
and
and
and
mov
mov
pop
aas
adc
imul
icebp
es
sar
call
ror
or
dec
mov
fisttp
mov
ret
jmp
sub
mov
or
popa
inc
in
adc
push
int3
jo
push
sbb
ds
rol
in
stc
mov
xor
mov
icebp
push
cmp
mov
sahf
lods
jp
or
mov
push
sti
mov
mov
cli
(bad)
jns
add
mov
jb
mov
mov
out
cmp
jge
pusha
das
jl
mov
jno
pop
pop
mov
cmp
cmp
pop
xlat
cmp
dec
sub
push
or
cmc
mov
aas
ret
jmp
add
sbb
and
xlat
clc
push
xor
cmp
jns
mov
mov
jns
jo
(bad)
sbb
push
pop
cli
stc
or
xlat
lds
and
push
fwait
outs
inc
and
mov
or
out
dec
or
mov
jecxz
adc
cmp
inc
push
jne
lock
pop
stos
add
jnp
fdivr
cmp
pop
add
mov
pusha
ret
cli
pop
mov
in
fsubr
cmps
xor
test
and
push
popf
and
mov
mov
mov
and
(bad)
test
xor
test
mov
dec
inc
add
dec
and
div
test
scas
pop
xchg
push
mov
xchg
mov
inc
jns
in
jp
inc
fild
pop
mov
push
nop
adc
fs
clc
test
xchg
test
ds
ins
jmp
addr16
pop
xor
add
imul
cli
lods
sbb
cli
fs
push
jae
sbb
and
pop
jecxz
pop
mov
sub
or
and
mov
retf
cdq
xor
retf
cs
rol
imul
xor
imul
cmps
rcr
out
cmc
stos
rcl
dec
jg
shr
outs
jne
mov
jge
fcom
or
sti
cmp
dec
or
xchg
daa
mov
pop
and
and
pop
dec
ror
pop
push
cmc
or
gs
push
push
cs
repnz
pop
mov
in
arpl
fiadd
pop
in
add
mov
call
mov
int3
or
in
mov
test
mov
vpshlb
xor
and
jl
ror
test
adc
mov
cmc
mov
sub
mov
mov
std
sti
add
ins
outs
in
nop
cmp
push
test
movs
fisttp
mov
pop
cmps
dec
lds
into
xor
pop
rol
jne
inc
jmp
fs
lea
(bad)
lock
mov
cwde
daa
pusha
cmps
lea
xchg
test
jmp
push
xchg
gs
inc
or
(bad)
sbb
mov
jno
call
clc
add
repz
das
test
mov
mov
clc
or
or
pop
or
lahf
mov
ins
mov
test
and
out
je
je
arpl
pop
frstor
repnz
or
adc
jg
repnz
retf
in
shr
xchg
es
out
push
(bad)
cmp
jg
mov
push
enter
mov
inc
or
jmp
cmp
or
fidivr
sbb
sbb
adc
sbb
xchg
movs
xchg
sub
shl
sub
enter
jge
xor
cs
cmp
outs
sub
clc
push
mov
mov
or
shr
ja
pushf
mov
cmp
mov
mov
lea
mov
fwait
cmps
xchg
lahf
jae
jmp
fwait
inc
jecxz
imul
(bad)
fadd
fsub
(bad)
sbb
xchg
rcl
push
cli
data16
dec
(bad)
push
sbb
or
xchg
imul
push
data16
push
xor
xlat
retf
mov
mov
daa
inc
popa
pop
(bad)
sbb
mov
movs
out
arpl
fimul
jmp
nop
inc
stos
jne
and
cdq
and
bound
std
push
jmp
mov
xor
lahf
jo
(bad)
(bad)
popa
sub
addr16
adc
mov
mov
dec
clc
sub
sub
xor
sbb
scas
lahf
cmp
rcr
jmp
mov
repnz
hlt
jb
cmp
shl
push
cmp
mov
cmp
mov
in
jmp
dec
imul
retf
packssdw
lods
iret
sub
lea
aad
adc
(bad)
into
cmc
pop
inc
jnp
push
jecxz
and
inc
add
xlat
call
std
mov
xchg
js
and
mov
popa
xchg
je
adc
rol
loop
fdivr
sub
mov
fsub
mov
int
mov
dec
push
xchg
jmp
gs
imul
shrd
iret
sub
or
add
stos
xchg
mov
and
das
dec
dec
rcr
dec
stos
imul
sbb
dec
sar
out
call
std
pop
cmp
fwait
ret
push
adc
in
mov
je
enter
mov
cwde
in
mov
cmc
dec
mov
dec
lods
add
add
loopne
out
out
xchg
pop
push
ja
sti
or
push
sbb
adc
scas
mov
inc
lds
stc
stos
out
adc
test
(bad)
and
sub
icebp
in
outs
pop
xor
in
pop
retf
dec
xchg
dec
cmp
xchg
jnp
add
jo
inc
jo
cmps
xchg
pop
stc
push
jmp
pop
push
aam
and
mov
jmp
retf
retf
inc
pop
inc
dec
and
cmp
test
inc
out
addr16
(bad)
push
push
cdq
popf
mov
ret
in
imul
push
fstp
sbb
shr
cmp
fst
jno
push
imul
lahf
add
cwde
mov
icebp
xchg
or
pop
fwait
sbb
and
inc
fmulp
cmp
adc
push
mov
lahf
fild
popa
adc
rcl
adc
push
mov
call
sbb
cmp
add
xchg
out
in
inc
lods
dec
test
mov
outs
or
push
out
or
rol
(bad)
jo
cmp
retf
stc
mov
xchg
adc
cmp
(bad)
add
jnp
push
retf
fisubr
in
(bad)
pop
dec
outs
bound
movs
leave
add
(bad)
pop
bnd
xchg
into
loop
push
mov
mov
test
xor
fstp
ins
jecxz
gs
dec
data16
jp
stos
push
(bad)
sbb
mov
cmp
xor
dec
xchg
dec
push
dec
cmp
sbb
shl
inc
rol
js
aad
adc
fisubr
mov
aad
call
add
enter
and
jl
cmc
cmp
call
(bad)
adc
fst
xchg
stos
lds
lock
and
mov
mov
sbb
jno
jns
lods
lds
mov
stos
dec
mov
mov
dec
sbb
xchg
cdq
data16
sbb
mov
outs
mov
xor
and
cmps
adc
fcmove
inc
popa
cmp
das
imul
pop
pop
mov
(bad)
outs
movs
lds
mov
rcr
mov
cld
pushf
xchg
cmp
hlt
in
pop
add
sub
fcomp
mov
dec
inc
rcr
into
jnp
mov
test
pop
std
or
loope
enter
add
test
outs
jb
movs
xchg
xchg
push
lea
push
in
in
fiadd
mov
fwait
pop
push
pusha
mov
pop
stos
mov
shr
ret
jmp
mov
mov
stc
xchg
movs
rol
mov
test
les
frstor
jecxz
cmp
out
loope
xor
movs
add
mov
xor
add
push
(bad)
sbb
fs
cmp
ret
stc
sar
pop
inc
leave
push
or
adc
dec
hlt
ret
ss
inc
cld
mov
retf
jl
std
mov
test
enter
pop
mov
outs
mov
les
jle
daa
jmp
ins
daa
test
jecxz
jbe
push
xor
and
mov
ror
std
xchg
mov
aaa
push
out
inc
imul
or
imul
mov
int
mov
jb
imul
(bad)
and
rcr
jo
fwait
adc
fdiv
cmp
adc
loopne
ficomp
adc
pop
jmp
push
out
add
mov
jge
aas
and
mov
xchg
lods
dec
dec
cwde
sub
div
movs
jns
push
enter
mov
cmps
mov
popa
je
ds
das
dec
scas
inc
jne
in
das
in
outs
cmp
dec
std
sbb
sub
sbb
stos
repnz
addr16
mov
jo
test
mov
mul
pushf
aas
mov
jo
(bad)
push
pop
in
cmc
cld
mov
cmp
fdiv
ror
push
or
add
mov
retf
mov
movs
frstor
jns
xchg
les
out
js
jbe
push
or
mov
std
and
jb
inc
adc
dec
cpuid
sub
or
stos
add
inc
ss
push
xor
xchg
stos
dec
mov
fsub
gs
in
dec
adc
pop
sub
dec
adc
xor
xchg
sbb
inc
dec
das
or
bound
mov
jnp
outs
cs
push
adc
test
and
xlat
cmp
jae
je
loope
stc
sbb
cmc
enter
cmp
pushf
xchg
aam
lea
push
iret
fwait
pusha
or
mov
in
push
loopne
fisttp
mov
mov
xchg
push
sti
or
mov
lock
aam
call
fst
sub
add
mov
cmc
adc
fwait
xor
sti
test
outs
mov
xchg
pop
lahf
lods
add
movs
mul
push
sub
dec
popa
addr16
ins
rol
mov
push
mov
fisub
mov
mov
imul
mov
adc
jb
jp
call
mov
push
cmp
lock
jge
inc
jb
jmp
(bad)
into
loope
jae
dec
hlt
xor
xlat
cmp
pop
push
mov
push
adc
fnsave
push
aad
cmps
into
sahf
dec
test
pop
jecxz
out
pop
mov
or
jbe
das
sub
cmps
jl
jae
add
mov
es
and
push
cld
mov
std
pop
adc
jp
and
(bad)
xchg
cmps
int
push
or
and
loop
enter
cmps
ds
(bad)
mov
pop
fld
clc
cdq
cmp
push
ins
out
cdq
or
das
(bad)
dec
push
cli
adc
test
jae
outs
dec
xor
xchg
lea
sub
jmp
retf
leave
push
inc
enter
clc
or
mov
outs
inc
mov
loope
mov
dec
call
mov
aad
stos
mov
push
inc
mov
mov
rcl
adc
iret
sbb
(bad)
pop
dec
loop
push
movs
gs
sbb
leave
mov
ror
dec
add
retf
(bad)
sbb
cli
or
sahf
movs
mov
repz
xchg
addr16
ds
sub
mov
sub
mov
and
xor
enter
call
sbb
sbb
pop
(bad)
pop
xor
jg
movs
test
cmp
mov
xor
shl
(bad)
adc
popf
pusha
push
jbe
pop
dec
ds
push
mov
sbb
ins
sbb
dec
jecxz
xchg
pop
pop
lods
(bad)
leave
sub
mov
stc
clc
xchg
dec
jle
dec
add
out
call
pop
mov
add
jns
ror
sbb
imul
cmp
xchg
mov
xlat
mov
xchg
lds
aad
retf
sbb
jecxz
jmp
rcr
out
js
mov
mov
push
and
sub
pop
arpl
mov
inc
or
je
stc
sbb
shl
xchg
inc
mov
jnp
dec
sub
add
sbb
(bad)
pop
cmps
call
jmp
cmp
jns
stc
ss
or
lea
icebp
and
movs
out
push
leave
idiv
cmp
sbb
repnz
nop
pop
jne
adc
or
fsubp
cli
mov
std
int
add
int
js
mov
imul
scas
fimul
loopne
mov
inc
mov
stos
mov
pop
dec
les
add
mov
jl
sub
imul
scas
pop
cmc
jbe
mov
xlat
mov
out
repz
or
je
mov
fimul
cmp
jge
mov
inc
xor
jge
inc
fidivr
pop
xchg
iret
push
sub
inc
ja
cmp
rol
sahf
fld
mov
inc
push
mov
shl
retf
push
out
mov
mov
out
shr
adc
add
add
(bad)
stc
out
jg
stc
out
sbb
cld
(bad)
inc
int
clc
push
add
dec
inc
dec
inc
scas
inc
pusha
or
add
add
add
(bad)
(bad)
inc
add
add
add
add
add
add
jns
je
ins
cs
jb
ja
outs
addr16
push
gs
imul
xor
xor
inc
jne
je
jb
cmp
jb
ins
sub
push
jne
ins
imul
imul
bound
xor
data16
xor
fs
add
adc
gs
cs
jb
ja
outs
addr16
imul
add
popa
je
pop
add
add
add
add
add
lsl
add
lds
add
add
or
or
add
or
add
add
add
add
or
add
add
pusha
outs
rol
add
add
inc
dec
inc
add
mov
or
popa
add
jo
pop
jae
add
ret
add
push
ret
add
outs
test
add
adc
inc
inc
push
pop
inc
in
xlat
test
sbb
ret
shl
xor
cmp
popa
ror
fwait
cmp
ins
cmps
mov
push
xchg
ja
cwde
jle
inc
repz
adc
pushf
mov
cmp
(bad)
fiadd
xor
out
stos
xchg
push
xchg
sbb
xchg
sahf
stos
adc
add
pop
cmp
rcr
dec
mov
xlat
mov
dec
movs
cmp
scas
cmps
adc
cmp
imul
jp
mov
ret
mov
jb
cmp
ror
cwde
or
jecxz
mov
xchg
jmp
fwait
sub
push
ins
add
in
out
push
pop
in
setge
and
aaa
scas
rcr
sbb
mov
sub
loopne
cwde
or
sub
hlt
mov
shl
pop
movs
movs
lods
ror
test
ja
outs
in
jl
mov
out
or
cmc
fnstenv
ds
imul
pop
fimul
adc
mov
jae
cmp
cmp
repz
outs
(bad)
cld
pop
mov
js
sbb
mov
xchg
cmps
ret
(bad)
and
fst
sub
leave
add
gs
pmaddwd
jmp
fisubr
mov
or
repz
xchg
test
xlat
pop
std
movs
nop
fisub
sti
jbe
jns
sahf
sar
ror
ins
cwde
xor
outs
lock
pop
jne
push
dec
(bad)
jle
(bad)
xor
fs
pop
dec
rcl
call
sbb
jns
jno
nop
jmp
sahf
rol
sub
ss
loope
popa
add
jle
jp
push
inc
dec
shl
mov
test
ror
loopne
out
jnp
pusha
add
mov
xor
test
xchg
mov
mov
mov
dec
adc
xchg
mov
pop
add
and
enter
nop
popa
cld
mov
in
cmps
jg
leave
es
adc
out
inc
stos
fnstcw
jnp
dec
inc
jmp
pop
daa
mov
xchg
sahf
ror
inc
push
push
popf
mov
adc
aaa
pop
inc
aaa
jge
push
xor
(bad)
xchg
and
repnz
repnz
push
sbb
or
sbb
scas
cmp
add
cmp
out
test
fwait
sbb
in
xchg
xchg
les
jmp
jmp
or
sub
jecxz
adc
push
hlt
gs
xor
jl
lea
mov
push
push
inc
jg
adc
push
rcr
ins
sbb
js
xor
dec
cmp
je
add
jp
stos
mov
enter
shr
adc
pop
test
jb
cmps
es
std
leave
or
adc
(bad)
outs
out
and
sbb
fild
stc
call
sub
mov
out
inc
sar
jns
cli
outs
ins
ins
jnp
and
mov
jg
dec
mov
push
xchg
not
call
mov
lock
nop
stos
pop
cmp
mov
add
in
or
int3
int
ins
dec
bndstx
(bad)
aad
shr
xchg
sub
lods
movups
xlat
jns
jle
(bad)
mov
jl
jno
(bad)
cli
push
inc
fadd
mov
xchg
arpl
pusha
jae
stc
enter
fcmovb
mov
mov
mov
mov
jle
xchg
mov
sar
or
in
inc
mov
xchg
ins
sbb
mov
out
sub
in
adc
div
jecxz
xlat
jno
das
xchg
in
inc
mov
mov
jecxz
cmp
idiv
cmps
inc
ins
stos
jmp
out
mov
lea
push
inc
outs
test
jns
iret
dec
sub
gs
push
lods
test
jbe
lods
test
xchg
fld
sub
add
and
inc
adc
xor
icebp
xor
mov
jns
pop
cdq
mov
pop
outs
scas
cs
aas
fiadd
lock
mov
mov
xchg
in
sar
lea
test
fs
or
inc
sub
inc
fwait
add
sbb
sbb
nop
dec
sub
daa
nop
adc
xchg
cmp
push
adc
out
outs
xchg
jg
adc
xor
xor
int3
and
push
pushf
fwait
cdq
add
mov
mov
movs
fdiv
shr
jge
test
retf
stc
push
mov
movs
and
frstor
sub
jg
pop
jl
jle
mov
sub
retf
pop
or
cmps
fadd
iret
repnz
xchg
dec
sbb
push
cmp
imul
pop
mov
retf
xor
call
jmp
mov
out
popf
dec
cwde
sbb
sbb
shr
cmp
push
add
popf
call
mov
movs
add
test
daa
add
mov
dec
outs
rol
iret
jl
mov
xor
add
inc
mov
cmp
pushf
ficom
(bad)
push
pop
loopne
movs
xor
pop
fldcw
jge
test
(bad)
and
jnp
pusha
jle
stc
or
mov
cvtps2pi
or
mov
gs
lods
cmp
xor
adc
aam
dec
sti
add
mov
mov
mov
fld
jl
xchg
test
or
fcom
jmp
inc
dec
sti
scas
imul
mov
test
adc
push
mov
push
mov
xor
(bad)
jle
aaa
inc
movs
int3
test
out
pop
rcr
mov
or
mov
mov
repnz
xlat
cmp
cmps
add
inc
dec
jno
mov
jmp
in
mov
mov
cmp
mov
into
pop
(bad)
push
xchg
adc
push
xstore-rng
cmps
inc
cmps
and
mov
bound
into
xchg
push
mov
xchg
mov
ja
iret
sub
sbb
lea
mov
call
retf
cdq
xor
cmp
jge
push
push
mov
cld
sub
mov
mov
jmp
xlat
clc
mov
loop
icebp
sub
hlt
rcr
sbb
or
xor
mov
adc
pop
push
jp
das
dec
out
mov
mov
push
es
xor
adc
or
cs
xor
xchg
outs
outs
mov
dec
dec
or
mov
call
mov
leave
lods
inc
push
jmp
push
mov
loop
or
mov
inc
jae
(bad)
mov
fisub
dec
les
(bad)
repz
sbb
in
int
pop
(bad)
clc
imul
cmps
sbb
mov
push
xchg
loopne
cwde
jg
(bad)
repz
jae
adc
pop
sahf
test
(bad)
jns
aas
xor
out
push
jl
enter
push
or
add
inc
mov
add
js
sub
jbe
cmps
push
xchg
fwait
gs
sbb
mov
aam
inc
loop
int3
mov
or
pop
int3
loope
sub
pop
cs
loope
inc
fs
jmp
stos
mov
xlat
popa
mov
add
mov
pop
or
aad
es
dec
fisttp
push
cdq
or
retf
cmps
sbb
mov
sbb
or
jge
movs
pop
hlt
jecxz
add
leave
mov
mov
or
ins
popa
out
fidiv
push
or
gs
mov
in
neg
pusha
es
adc
ret
aad
sti
out
dec
sub
sbb
jno
sbb
xchg
addr16
in
enter
xlat
out
lods
dec
jae
cmc
stos
nop
lahf
xchg
daa
dec
sahf
sub
jmp
(bad)
pop
je
cmp
fistp
jmp
jbe
or
jmp
pop
out
ins
data16
dec
aad
sub
push
cmc
add
sbb
xchg
cmp
sbb
fist
dec
fistp
test
cmc
das
ins
daa
(bad)
push
mov
retf
and
rcl
nop
mov
xchg
ret
adc
mov
(bad)
int
fcmovbe
call
pop
sub
sahf
retf
aaa
lahf
or
shr
js
pop
or
mov
or
cmps
inc
cli
aam
or
and
div
fwait
mov
popf
retf
adc
sbb
pop
push
pop
jnp
push
das
outs
xchg
or
adc
jbe
mov
movs
in
stc
call
sar
loopne
dec
jae
or
adc
movs
adc
mov
stc
or
shl
(bad)
stc
inc
xchg
jge
cli
sub
jbe
xchg
je
push
adc
cmp
jns
pop
ins
and
mov
scas
pop
adc
sub
(bad)
add
aam
push
mov
pusha
sub
inc
inc
(bad)
push
data16
xor
dec
add
add
test
sub
aaa
mov
sti
push
sbb
sub
stos
cmp
enter
jge
adc
call
iret
jmp
in
(bad)
cwde
push
push
enter
test
retf
rcr
es
test
push
xchg
in
sub
push
ja
mov
jp
ins
jge
jmp
jo
call
jmp
popf
stc
test
jbe
imul
sti
jp
in
or
mov
cmc
movs
ffreep
movs
pop
into
sahf
call
mov
pop
in
(bad)
sti
and
xor
mov
daa
mov
aas
shl
(bad)
pop
xchg
sbb
mov
cmps
push
or
sub
and
ret
mov
xchg
movs
cmp
push
mov
lea
fwait
inc
ret
sysexit
push
mov
xchg
fidivr
xor
add
cmps
test
sbb
jne
sub
mov
repz
rcl
mov
cmp
scas
cs
push
fsubrp
mov
pop
sbb
fistp
inc
sbb
repz
popf
into
aaa
xchg
(bad)
(bad)
jmp
adc
jmp
cmc
adc
addr16
adc
addr16
iret
iret
lock
out
stos
out
test
pop
dec
xchg
nop
add
mov
idiv
test
std
xchg
mov
retf
les
mov
jp
fst
sbb
mov
jnp
fs
push
rol
pop
xor
pusha
jle
mov
push
mov
clc
adc
ja
xor
jp
fisttp
mov
clc
leave
test
mov
pushf
sbb
mov
sub
imul
out
int
or
inc
(bad)
mov
mov
das
mov
adc
mov
xor
sbb
jge
outs
mov
pop
push
std
int3
inc
adc
out
test
arpl
mov
jecxz
cli
mov
push
mov
mov
mov
cmps
popa
inc
xor
and
push
scas
fmul
popf
test
retf
and
movs
int3
hlt
pop
push
rcl
fisubr
mov
sub
inc
or
bound
jnp
jp
mov
jmp
push
push
dec
sbb
mov
push
bound
xchg
mov
or
adc
jle
sbb
icebp
jl
mov
test
ja
in
int3
loop
sub
inc
cdq
xor
xor
jo
cmp
enter
cmp
enter
cmc
aam
int3
aam
fwait
stc
jb
aaa
cmp
enter
popa
hlt
mov
push
sbb
jle
pushf
into
mov
and
mov
and
nop
mov
lahf
ret
test
outs
mov
ds
sbb
gs
push
jae
mov
(bad)
es
imul
cli
ja
out
movs
mul
aad
xchg
xor
pop
ss
std
mov
pushf
inc
jmp
data16
xchg
pop
popa
push
jp
mov
pushf
shl
fptan
in
or
xlat
dec
jne
les
inc
sub
push
lods
sub
jl
pop
xor
push
ins
in
fild
jnp
ret
mov
push
or
lahf
push
push
pop
cmps
mov
cmp
ret
mov
ja
jl
push
pop
fdiv
sbb
daa
mov
xchg
dec
int3
jecxz
xor
and
xchg
jo
push
shr
imul
(bad)
ja
mov
push
inc
xor
stos
xor
mov
xlat
xchg
inc
xor
and
cdq
retf
mov
lea
(bad)
retf
or
idiv
dec
dec
shl
fild
dec
scas
or
psrlq
mov
xlat
aam
mov
outs
and
repz
mov
mov
pushf
jl
xchg
fisttp
jbe
adc
and
outs
popf
loop
mov
(bad)
addr16
push
and
cli
(bad)
ins
rcl
xor
das
scas
repnz
jge
loopne
in
shl
push
(bad)
mov
pop
(bad)
fucomp
and
outs
or
stos
arpl
(bad)
sbb
jnp
cmp
stos
adc
sbb
(bad)
jge
mov
pop
add
int
lea
mov
fwait
pushf
and
jno
xlat
adc
jo
ja
aam
pop
or
div
das
out
(bad)
sub
add
sub
push
stos
jns
lds
push
loope
jmp
dec
in
mov
sub
sub
movs
mov
mov
push
fidiv
inc
push
jge
int3
xchg
neg
out
mov
xchg
add
and
out
shl
push
pop
movs
mov
xchg
pop
cs
mov
cdq
push
and
in
jnp
push
jb
xchg
mov
ja
ins
sbb
inc
mov
push
mov
lods
dec
cwde
stc
push
push
add
(bad)
jmp
sbb
xchg
jae
(bad)
fmul
test
xor
cli
in
or
(bad)
aam
push
or
mov
mov
sbb
test
out
cmovns
repz
popf
(bad)
fld
add
xor
iret
out
pop
cmps
mov
and
dec
sub
xchg
imul
repnz
fild
aas
xchg
mov
mov
je
(bad)
sbb
mov
leave
in
fstp
lods
cmps
repz
fs
push
pusha
sub
mov
test
stos
sar
(bad)
(bad)
jb
and
inc
je
xchg
sbb
jnp
mov
mov
cmp
cmp
loope
gs
aad
(bad)
(bad)
std
mov
shr
or
add
xchg
xchg
fs
js
and
sub
or
xchg
cmc
add
adc
mov
fild
add
jle
sbb
hlt
daa
push
(bad)
add
out
punpckhdq
test
dec
fwait
movs
or
push
ins
pop
fst
movs
cmp
dec
scas
dec
pop
stos
nop
push
jmp
dec
and
ss
test
div
nop
dec
rol
adc
std
repz
mov
data16
fsubp
fisubr
fsin
inc
xchg
aam
mov
adc
in
in
jns
cmp
adc
xbegin
rcr
adc
pop
push
loope
push
popf
dec
inc
sub
mov
cmp
mov
mov
sti
xchg
sub
dec
sub
add
adc
mov
addr16
sub
fnsave
iret
in
rcl
outs
adc
sub
sbb
mov
mov
aam
movs
cmps
xchg
out
lods
xchg
test
mov
mov
xchg
jnp
mov
cmp
or
mov
mov
out
xor
fwait
cmp
repz
cmp
inc
shl
pop
push
sbb
add
stc
pop
dec
popf
inc
ja
call
sub
fisttp
xchg
xchg
cwde
sub
add
xor
xchg
xchg
fmul
vhaddpd
dec
or
clc
ds
jmp
xchg
in
fld
ja
push
jno
pop
clc
sbb
lods
retf
cmps
sbb
xor
or
xchg
sub
sti
hlt
ret
in
mov
mov
add
inc
sar
and
xchg
jmp
mov
add
stc
iret
jg
repz
(bad)
cld
out
jmp
icebp
sar
rol
dec
cmps
or
add
add
dec
inc
scas
inc
pusha
or
add
add
add
(bad)
(bad)
inc
add
add
add
add
add
add
jns
je
ins
cs
jb
ja
outs
addr16
push
gs
imul
xor
xor
inc
jne
je
jb
cmp
jb
ins
sub
push
jne
ins
imul
imul
bound
xor
data16
xor
fs
add
adc
gs
cs
jb
ja
outs
addr16
imul
add
popa
je
pop
add
add
add
add
add
lsl
add
mov
mov
inc
or
add
or
add
add
add
add
or
add
add
pusha
outs
rol
add
add
inc
dec
inc
add
mov
or
popa
add
jo
pop
jae
add
ret
add
push
ret
add
outs
test
add
adc
inc
inc
push
pop
inc
in
rol
loopne
out
out
mov
in
dec
or
jne
mov
arpl
jmp
jno
dec
mov
sbb
(bad)
sti
inc
fdivrp
repz
ftst
inc
inc
loopne
lock
cmp
dec
ss
xor
inc
cli
les
cwde
sub
pop
mov
cmp
jp
psubusb
push
xchg
stc
lahf
neg
call
pop
int3
icebp
fcomip
mov
sbb
sbb
fadd
std
gs
std
pop
inc
mov
mov
jnp
push
mov
stos
dec
jne
std
add
xchg
sbb
out
test
shr
(bad)
push
push
aam
mov
retf
mul
fisttp
mov
mov
jo
mov
pop
mov
ins
icebp
jbe
cdq
dec
cli
push
add
movs
pop
jecxz
xor
pop
add
fdivr
gs
inc
out
inc
inc
cdq
xchg
or
xor
scas
jb
fs
(bad)
out
call
sub
cwde
lods
dec
lahf
cmp
or
push
cdq
(bad)
outs
jne
sub
iret
mov
add
gs
imul
dec
not
dec
out
and
push
mov
shl
add
cmp
dec
mov
cmps
ret
retf
sub
aad
int3
frstor
inc
jb
pusha
mov
jg
rol
fimul
leave
repz
jbe
or
push
adc
or
repz
repz
ficom
retf
imul
mov
ja
mov
adc
jge
clc
test
adc
mov
sbb
jnp
outs
in
daa
pushf
mov
rcr
mov
mov
imul
jne
push
push
test
loop
mov
xchg
cmp
sub
mov
ja
xchg
cmps
push
jns
push
adc
sbb
sahf
sbb
dec
add
jo
test
ret
pop
loop
mov
mov
jns
or
cmc
shr
jg
hlt
rcl
aaa
push
dec
retf
or
int3
and
stos
mov
push
ja
fstp
mov
add
cmp
mov
adc
cmps
ins
push
lock
dec
mov
inc
aas
leave
fdivr
in
add
imul
inc
sbb
pop
adc
pusha
push
or
pop
push
sub
xchg
inc
push
inc
mov
fwait
aad
mov
mov
scas
and
popf
mov
fisttp
cld
and
mov
jge
pop
in
fbld
sahf
add
loope
mov
add
je
test
aas
or
lods
sahf
shr
cmp
gs
xchg
xor
or
loop
mov
std
out
adc
jo
or
mul
cld
rep
inc
jbe
push
das
dec
in
lods
inc
int
in
mov
jmp
xchg
movs
push
cdq
mov
cmps
cmp
addr16
dec
icebp
fstp
cld
mov
mov
sbb
dec
in
aas
cmps
movs
(bad)
sbb
bound
and
add
out
cmp
test
and
sbb
sbb
fsub
outs
imul
cmp
jmp
lock
mov
aad
loopne
push
arpl
sub
hlt
and
fld
pop
loop
int3
mov
or
dec
dec
mul
pop
push
or
fsub
pop
cmp
outs
ja
into
stos
sub
xlat
int
addr16
popf
jne
jns
cmps
fstp
mov
mov
in
nop
test
int3
into
cmp
pop
cmp
scas
xchg
cmps
retf
hlt
rcr
ins
jle
sti
js
jnp
xor
shr
(bad)
mov
aam
js
retf
je
sti
mov
sbb
xchg
xchg
mov
pop
test
nop
pushf
sar
les
retf
fdivr
xlat
inc
ja
lods
loop
xlat
xor
sbb
fucomp
(bad)
xchg
adc
(bad)
dec
mov
(bad)
lods
mov
je
pushf
ror
xchg
mov
mov
xchg
push
call
nop
imul
and
mov
ds
(bad)
jae
adc
cmp
cmp
imul
cmp
jne
cdq
imul
shl
mov
add
cmps
jl
dec
pop
jno
shl
cmp
dec
push
repnz
ja
in
cmc
adc
dec
outs
pop
jno
in
cld
in
mov
lahf
cmp
and
icebp
jecxz
popf
movs
xchg
sub
pop
mov
sub
jne
test
mov
test
das
test
(bad)
xchg
or
push
jg
retf
sbb
mov
int3
push
xchg
mov
xlat
nop
rcl
pop
arpl
sbb
cmps
sub
add
mov
sete
jb
(bad)
movs
mov
pop
iret
std
push
or
mov
(bad)
adc
xchg
push
xchg
prefetcht1
sub
movs
lods
daa
push
(bad)
ror
mov
push
xchg
jbe
sbb
xchg
mov
lods
pusha
xor
cmp
xor
pop
dec
jne
gs
mov
imul
outs
cmpxchg
repz
fistp
sub
push
inc
xlat
add
in
mov
add
mov
test
cmps
cmp
sub
jo
jbe
adc
xor
jb
int
mov
and
push
mov
mov
std
xchg
sub
cmp
(bad)
scas
sub
(bad)
je
hlt
mov
je
adc
retf
cmc
mov
loop
(bad)
mov
mov
aad
je
push
retf
rcl
loope
dec
and
jl
jns
arpl
push
inc
sbb
mov
ins
mov
mov
pushf
mov
mov
fisub
jo
ds
xor
sub
test
std
ficom
scas
cmps
inc
dec
dec
sbb
or
lods
cmp
mov
repz
test
ret
push
sbb
push
mov
dec
or
cmp
stc
mov
mov
sbb
nop
call
je
jbe
push
pop
aam
push
sub
add
icebp
test
leave
xor
loop
movs
or
int
shl
sbb
mov
mov
out
nop
push
lea
sub
outs
and
mov
push
sub
sbb
loopne
lahf
or
lods
or
mov
add
out
(bad)
dec
pop
in
push
int3
pop
xor
mov
repz
mov
fldenv
dec
movs
dec
xor
icebp
mov
lods
out
fild
mov
ret
jp
add
pop
lods
xor
aaa
js
xchg
ret
retf
sti
sub
mov
jb
jge
sahf
arpl
mov
inc
shl
pop
fld
(bad)
bound
xor
mov
sbb
data16
(bad)
mul
fldcw
aaa
and
jp
ret
push
scas
sub
push
jmp
push
fnstenv
cld
xor
not
retf
mov
xor
call
push
test
sub
sbb
mov
xor
adc
xlat
mov
es
gs
xchg
inc
mov
lods
mov
repz
repnz
stos
add
xchg
mov
add
je
xor
add
mov
stc
push
and
ret
aaa
fs
repnz
inc
ins
sub
pop
aas
jmp
mov
push
out
xor
into
iretw
mov
aas
enter
in
mov
out
inc
dec
or
popa
rcr
fild
pop
xor
in
addr16
fst
adc
xchg
enter
inc
cdq
jp
mov
ja
cmc
pop
aad
mov
or
or
loopne
das
push
pop
imul
sbb
lods
xor
and
mov
(bad)
cmp
outs
xchg
mov
mov
dec
popf
push
addr16
in
(bad)
das
and
jae
lods
fidivr
cmp
and
retf
nop
jmp
movs
adc
sub
inc
dec
aad
xchg
popfw
mov
shl
and
adc
jp
jle
and
add
shl
scas
cmp
(bad)
aam
pop
inc
iret
ror
push
out
dec
sub
iret
jge
or
std
(bad)
scas
in
mov
jg
retf
xchg
iret
std
mov
idiv
xchg
enter
push
test
pop
push
stos
leave
xor
jne
add
icebp
mov
push
popa
cmps
dec
jno
mov
push
mov
in
stc
mul
jae
jnp
sub
lods
test
in
fsubr
fs
push
cmps
hlt
fst
retf
call
push
in
adc
ret
in
xchg
dec
cmp
mov
inc
lods
enter
jp
vpaddb
sub
xchg
pop
jnp
fidiv
mov
inc
jnp
sub
jo
xor
outs
inc
jmp
sti
out
or
imul
(bad)
movs
inc
iret
cwde
outs
mov
aas
out
call
(bad)
mov
sub
(bad)
jp
push
mov
or
adc
aam
stos
leave
mov
lea
adc
ret
cmp
cld
retf
int
xor
retf
ret
ja
or
inc
ins
les
dec
adc
mov
hlt
sbb
imul
inc
lds
(bad)
popf
(bad)
xor
(bad)
scas
sbb
adc
in
nop
popf
cwde
push
inc
popf
int
loope
jmp
sbb
ror
ss
dec
mov
sti
cmps
neg
xor
and
jno
dec
pop
stos
mov
push
sbb
imul
ins
shr
xlat
pop
xchg
rol
mov
add
push
add
push
(bad)
mov
add
xchg
add
pop
sbb
dec
xor
sahf
in
aas
mul
inc
cmp
mov
push
repz
icebp
daa
adc
iret
das
mov
lods
mov
out
test
lods
add
ror
popf
cdq
sahf
mov
aam
pop
mov
stc
fisub
xor
retf
sub
xchg
jl
and
mov
les
jb
and
ret
inc
xlat
adc
out
ret
int
xchg
inc
ins
pop
cwde
outs
pop
dec
jle
inc
mov
ret
rcl
inc
mov
sub
ret
mov
in
addr16
mov
push
es
xor
sub
adc
nop
xchg
push
retf
outs
(bad)
dec
shl
add
xor
lods
rcr
repnz
lea
sub
gs
stos
push
shl
sbb
aad
push
mov
jnp
push
mov
rcl
scas
dec
popaw
repz
cwde
pop
jne
scas
mov
fwait
xchg
ja
adc
dec
outs
mov
jmp
inc
cld
xchg
fnsave
je
in
mov
test
mov
std
out
push
sti
adc
push
adc
movs
movs
cwde
rcl
xchg
jp
(bad)
aam
mov
or
jmp
sahf
cs
adc
mov
ds
cs
iret
pop
mov
mov
adc
push
ret
xlat
mov
scas
dec
mov
and
in
cmp
iret
sub
es
js
iret
mov
cmp
test
and
rcl
fistp
ss
push
pop
push
inc
mov
stc
xchg
imul
push
mov
lds
cmp
adc
js
cmp
jmp
lea
adc
scas
xlat
pop
sub
dec
lods
call
or
sti
xchg
push
out
dec
loopne
dec
xchg
and
jno
mov
mov
fcomp
popa
adc
push
adc
adc
ret
mov
dec
stos
lahf
scas
mov
out
adc
lea
mov
pop
jl
sbb
adc
and
les
jp
mov
jmp
les
dec
sbb
std
shl
mov
sbb
sbb
popa
test
pop
das
adc
imul
retf
shl
push
jne
shr
sub
out
pop
out
iret
push
or
or
adc
(bad)
repz
scas
mov
xchg
idiv
icebp
push
sbb
sbb
and
out
pop
cmp
pop
jbe
rol
or
and
jo
or
out
cmps
mov
or
mov
pop
std
lods
mov
jecxz
or
outs
adc
es
lea
mov
(bad)
sub
add
aaa
or
push
ins
ficom
js
div
not
xchg
mov
inc
lds
sub
xlat
dec
jge
sub
mov
mov
xchg
outs
in
add
xor
ins
xchg
xlat
pusha
xchg
jg
int
pop
or
js
lods
retf
ins
and
push
mov
daa
mov
pop
push
xor
push
fisttp
pushf
mov
adc
xor
and
push
jecxz
inc
repnz
data16
mov
fldcw
das
data16
hlt
aas
jo
and
test
inc
sbb
or
or
mov
je
and
jg
cs
stc
xlat
in
dec
data16
aaa
gs
jne
test
jl
jmp
inc
mov
jl
movs
sub
pop
mov
outs
sbb
pop
mov
mov
pop
dec
call
pop
lock
mov
xchg
dec
nop
mov
fcom
outs
dec
aaa
or
adc
ror
xor
push
(bad)
sbb
push
rol
lock
xchg
mov
dec
sub
sub
in
inc
pop
call
into
pusha
cvtps2pd
mov
loop
adc
dec
enter
pushf
test
mov
repnz
stc
inc
mov
mov
xlat
and
icebp
call
movs
test
jle
adc
cmp
xchg
in
mov
test
pop
data16
dec
out
call
loop
jae
jnp
adc
mov
pop
jo
cwde
(bad)
mov
(bad)
pop
mov
push
je
mov
ror
mov
xchg
fld
popw
scas
outs
out
sub
daa
int3
rol
xchg
pop
cwde
aam
in
inc
cmp
leave
pop
cmp
aas
lds
pop
rcl
clc
sub
xchg
push
sub
aaa
inc
adc
stc
shl
and
push
les
sar
push
pop
popa
xor
sbb
(bad)
ja
push
or
scas
fs
and
in
das
pop
rcr
mov
and
neg
inc
stos
test
shl
inc
fwait
dec
push
push
jp
sbb
std
or
mov
mov
ins
icebp
add
mov
jns
jno
cmp
sbb
jle
out
aaa
daa
jg
pop
jo
inc
mov
mov
js
aaa
nop
outs
and
lods
loope
daa
arpl
cmps
dec
sbb
je
or
fidiv
jmp
mov
mov
cmps
mov
pop
sahf
aaa
(bad)
enter
arpl
test
mov
std
sub
test
adc
fistp
adc
and
lods
dec
add
outs
add
sub
mov
cmp
repnz
xor
and
psllq
adc
movs
gs
retf
test
rcr
(bad)
loope
loopne
jo
dec
ret
dec
movs
bound
clc
push
add
mov
repz
push
xchg
enter
rcl
jmp
or
pop
mov
xchg
or
or
out
neg
neg
xchg
push
jecxz
ss
pop
icebp
ret
xlat
shl
push
jp
xchg
xchg
jo
cmps
pop
lds
cli
pop
xlat
jbe
and
sbb
and
mov
sar
xor
lock
add
repz
mov
fist
lds
jecxz
aas
enter
pop
mov
femms
ret
ds
jl
out
pop
xor
rsqrtps
ret
cmps
ror
mov
addr16
aas
das
dec
cs
lods
shl
cs
iret
int3
ins
xchg
mov
inc
jbe
imul
ins
add
push
cmp
dec
mov
mov
mov
jle
in
daa
stos
push
out
and
leave
sub
sub
and
popf
adc
jmp
int3
push
pop
add
out
inc
push
ja
mov
sbb
jne
outs
adc
xor
mov
xchg
sub
add
mov
mov
std
ins
add
repz
(bad)
cmc
scas
outs
jmp
add
daa
adc
test
sahf
inc
movs
sub
out
(bad)
stc
iret
jg
repz
add
pop
int
repnz
and
dec
inc
dec
inc
scas
inc
pusha
or
add
add
add
(bad)
(bad)
inc
add
add
add
add
add
add
jns
je
ins
cs
jb
ja
outs
addr16
push
gs
imul
xor
xor
inc
jne
je
jb
cmp
jb
ins
sub
push
jne
ins
imul
imul
bound
xor
data16
xor
fs
add
adc
gs
cs
jb
ja
outs
addr16
imul
add
popa
je
pop
add
add
add
add
add
lsl
add
mov
mov
inc
or
add
or
add
add
add
add
or
add
add
pusha
outs
rol
add
add
inc
dec
inc
add
mov
or
popa
add
jo
pop
jae
add
ret
add
push
ret
add
outs
test
add
adc
inc
inc
push
pop
inc
in
rol
ror
daa
mov
imul
lods
xor
ror
movs
ret
jmp
adc
sbb
add
mov
push
push
test
adc
push
push
cs
cmp
and
mov
call
adc
daa
jae
clc
xchg
mov
ja
sbb
ins
cmp
cmp
jnp
mov
sub
sub
sar
cmc
movs
sti
bound
sbb
sahf
arpl
cmp
sub
ja
mov
movs
adc
lods
nop
ins
in
icebp
mov
stos
in
dec
fucom
push
out
mov
mov
scas
cmp
and
jnp
xchg
(bad)
call
mov
add
int
xchg
stos
fist
cli
fidivr
xchg
cmps
shr
pop
es
mov
setne
outs
cli
mov
jb
jbe
(bad)
or
adc
sub
loopne
pusha
dec
cmc
dec
sub
stos
hlt
in
retf
(bad)
cmc
push
dec
or
xchg
mov
jp
pop
movs
adc
rcr
pavgw
aas
rcl
mov
add
test
inc
xor
outs
mov
pop
sub
mov
xchg
test
fcmovnbe
addr16
popa
xor
into
add
cmp
test
push
mov
fucomp
imul
xchg
(bad)
rcr
jge
dec
inc
jo
in
fist
mov
jb
aad
loopne
call
and
(bad)
dec
sbb
test
mov
cwde
cmp
jle
dec
adc
inc
test
in
shl
or
inc
cmps
imul
mov
cmc
movs
push
xchg
or
call
dec
jnp
imul
jp
mov
pop
push
les
xor
mov
push
std
test
push
or
mov
das
push
jg
repnz
push
outs
out
mov
lock
dec
jmp
repz
fst
loope
xor
(bad)
rol
mov
mov
dec
(bad)
test
pop
(bad)
sbb
out
xor
dec
pop
and
mov
icebp
repz
mov
pop
sahf
mov
add
mov
mov
mov
xchg
in
cdq
sub
xor
mov
call
add
mov
repz
xchg
(bad)
les
mov
jo
imul
cmc
xchg
dec
mov
jns
movs
adc
sub
mov
jle
jle
cwde
bound
mov
imul
jp
imul
shr
cs
fst
test
jmp
loope
lock
xchg
fcom
mov
repnz
je
adc
push
cmps
dec
sbb
pusha
jae
(bad)
int3
adc
jb
clc
push
and
(bad)
scas
adc
(bad)
ficomp
stos
pop
and
es
push
inc
mov
cmp
pop
push
or
(bad)
div
adc
arpl
movs
jb
pop
ffree
pop
pop
xor
mov
ja
cld
jl
fnstsw
pop
sub
rcl
add
mov
hlt
xchg
stos
lds
(bad)
xchg
outs
sbb
fst
inc
mov
das
cmc
cmp
dec
sub
jmp
inc
outs
mov
push
mov
jno
push
adc
std
scas
jge
aam
dec
pop
push
xchg
aaa
or
adc
push
fwait
sub
jns
pop
lds
fisub
icebp
fsub
dec
hlt
or
test
fldpi
jl
xchg
mov
test
fistp
mul
add
fwait
movs
popf
cmp
push
push
call
xor
repz
ins
dec
push
pop
ja
mov
sbb
or
in
pusha
pop
stos
cs
(bad)
sub
xor
dec
outs
xor
sub
inc
ja
sbb
dec
shr
cmc
mov
sti
push
xchg
pop
xlat
dec
imul
push
pop
dec
rcl
aam
dec
mov
fist
mov
dec
sub
shl
ss
adc
sub
enter
mov
mov
stc
or
(bad)
ror
mov
cmp
nop
adc
push
xchg
lds
cmp
mov
(bad)
inc
mov
push
retf
shl
js
retf
sub
sahf
out
out
daa
leave
imul
sub
pushf
cdq
jbe
and
mov
gs
xchg
cmp
sbb
rcr
cmp
repnz
sub
fcomp
xchg
xchg
xor
sbb
pop
out
femms
xor
or
fcmovb
add
aaa
cmp
xor
mov
adc
(bad)
cli
dec
comiss
int
push
out
xchg
xchg
out
xchg
gs
popf
pop
xchg
cmp
and
(bad)
and
ror
ret
movs
cli
out
jae
inc
jge
hlt
and
imul
fbstp
push
sub
ins
jle
ss
in
lds
cwde
outs
jnp
ins
mov
inc
mov
pop
lahf
cdq
nop
fcmovnb
retf
push
sar
lods
enter
lock
lahf
mov
mov
int3
adc
push
cmp
mov
call
inc
sub
and
loop
push
push
cli
call
fcmovnbe
cmp
enter
xchg
into
out
rol
add
and
aas
dec
inc
fsub
cmp
push
pop
add
jecxz
add
mov
jbe
sub
jg
sub
inc
add
push
fs
adc
inc
pop
adc
sbb
addr16
cmp
mov
out
sub
out
nop
xor
clc
adc
jmp
cmp
xchg
cmc
mov
ds
push
xlat
xor
mov
shr
adc
call
sar
iret
and
jecxz
xchg
cmps
jae
fwait
xchg
mov
aas
pop
fild
stc
push
jmp
add
cmp
and
mov
lods
sbb
mov
movs
test
jns
leavew
pop
xchg
(bad)
aaa
cmps
xor
pop
push
or
mov
ss
jno
sbb
movs
ret
xlat
scas
sar
cmp
loopne
movs
fstp
mov
adc
mov
xchg
repz
mov
cld
in
mov
sbb
rcr
in
xor
in
enter
sar
mov
xor
jne
cs
or
imul
pushf
push
pop
aas
xor
mov
fadd
push
and
xchg
scas
std
into
mov
pop
mov
imul
shl
cmp
cmp
fst
fnstenv
pop
mov
mov
xor
and
ret
shr
dec
das
retf
(bad)
jmp
push
dec
push
pushf
ja
out
pop
ins
iret
ror
jle
push
xor
std
icebp
xor
sbb
(bad)
push
retf
loopne
pop
and
frstor
(bad)
ins
fadd
or
pop
mov
mov
and
sub
xor
xor
lds
stos
mov
inc
cmp
mov
fild
dec
fidivr
in
push
pop
xor
lods
inc
jp
addr16
xor
add
push
(bad)
inc
or
pop
sub
push
inc
lahf
lds
stos
jbe
pop
push
rol
inc
imul
jp
rol
jmp
xor
ficom
and
or
mov
cmp
push
hlt
outs
out
fnsave
retf
push
addr16
jb
call
adc
xchg
lea
outs
or
mov
adc
retf
dec
out
sahf
adc
sub
pop
cmp
punpckhbw
sbb
adc
or
mov
mov
cmc
fcom
call
cmp
aas
add
xor
cmp
dec
xchg
or
fwait
sub
dec
jno
jge
push
call
sti
hlt
ins
out
data16
out
call
scas
out
or
push
int
and
sub
xlat
xor
popf
retf
pop
adc
sub
sub
cmp
mov
or
test
int
(bad)
sbb
mov
or
bound
ins
test
sar
inc
cmp
adc
inc
loop
inc
les
add
cmp
daa
retf
xchg
popa
arpl
sahf
scas
inc
add
loop
es
ror
or
jle
push
xchg
hlt
sub
xor
push
xor
fcomp
jns
mov
mov
movs
fnstenv
inc
push
xchg
inc
push
inc
and
in
lahf
jbe
add
cmc
pop
push
js
clc
mov
mov
mov
enter
inc
outs
xor
pop
jne
sbb
(bad)
xor
adc
xor
xor
or
inc
addr16
mov
xor
inc
jbe
inc
push
shl
pop
iret
scas
push
ror
fisttp
arpl
sbb
jne
in
popf
mov
repz
shl
add
loopne
jbe
inc
mov
jns
das
popa
pop
pop
fdivr
or
or
and
xchg
movs
inc
cli
mov
sbb
jle
dec
fs
or
jge
mov
mov
ret
out
push
add
xor
aaa
aad
sbb
add
enter
mov
stos
(bad)
arpl
pop
xor
lock
in
or
leave
lods
and
adc
inc
pop
xchg
mov
mov
cmps
ins
jge
mov
pop
inc
jb
aam
push
lea
rcr
xchg
push
add
jb
(bad)
jge
sbb
loope
mov
jp
lahf
sbb
aam
mov
repz
lahf
add
xor
jb
mov
mov
xchg
jle
cmp
aaa
adc
inc
cmc
repnz
adc
je
pop
fld
mov
adc
xchg
adc
push
mov
out
push
inc
es
dec
sahf
call
xlat
adc
dec
test
or
scas
jb
pushf
sub
pop
stos
test
xchg
xchg
dec
stc
adc
dec
and
ja
cmp
aad
or
sahf
retf
xor
cmp
add
clc
xchg
adc
call
fsub
xlat
iret
gs
push
cmps
test
daa
or
mov
mov
mov
cwde
cmp
xor
inc
jae
jl
clc
cmp
sbb
jne
push
sub
and
out
push
stos
and
fnstenv
je
scas
aaa
mov
mov
cmp
mov
adc
test
stc
hlt
push
cli
or
or
cmps
mov
push
jecxz
iret
lock
ret
scas
stos
and
ss
bnd
sbb
push
les
std
and
in
mov
pop
cs
repz
cmp
std
and
xor
adc
imul
mov
ins
cmp
mov
pusha
test
pop
xor
sar
fistp
push
push
jecxz
test
fcomp
jmp
aaa
jp
(bad)
jl
hlt
mov
fdivr
out
push
retf
sahf
mov
fbstp
pop
mov
mov
imul
jmp
out
dec
jae
cld
aad
out
sti
call
or
cli
std
jge
mov
inc
xchg
lods
in
mov
mov
cmps
or
jecxz
and
aad
push
add
mov
imul
enter
or
lods
fwait
and
and
mov
loopne
cmps
sbb
sahf
mov
jbe
xchg
pop
neg
(bad)
dec
fcomp
cmp
pop
push
test
fnstenv
pop
loopne
push
mov
xor
push
movs
aaa
retf
cli
mov
imul
mov
idiv
inc
shl
mov
mov
add
mul
xor
and
cmp
ss
pop
test
lods
add
nop
sub
stc
and
pop
mov
cli
sub
dec
push
inc
sub
pop
das
mov
movs
jns
leave
mov
jne
pusha
mov
push
in
fdivr
ins
adc
mov
adc
adc
popa
xor
loop
sbb
xor
in
in
ficomp
sbb
aaa
rcl
fiadd
xchg
in
pop
aaa
sub
jp
iret
xor
inc
jmp
fwait
or
or
jle
pusha
ret
mov
add
pop
out
(bad)
cmp
jp
cmc
dec
jb
mov
jne
push
dec
arpl
inc
test
add
jo
dec
fdivr
jmp
outs
(bad)
dec
sub
repnz
popa
stc
xchg
scas
inc
xchg
jbe
ja
movs
xor
jb
sub
sbb
enter
or
cwde
xchg
sbb
mov
push
push
cdq
mov
fcomi
repz
pop
ss
lds
sub
test
dec
inc
jne
dec
call
out
scas
retf
jns
push
fcmovu
jle
cmp
cld
mov
loop
stos
cmps
push
sbb
dec
inc
stos
call
push
mov
movups
or
add
fisub
pop
push
sub
xlat
je
stc
pusha
fst
mov
int3
jne
dec
and
mov
mul
push
cld
xchg
and
mov
jns
retf
mov
ins
fild
jnp
repz
jo
cwde
xor
mov
cmp
aad
cmp
inc
rcr
xchg
je
jnp
call
push
dec
fs
cmps
dec
cmp
push
hlt
mov
add
xchg
xchg
lock
or
sub
aad
mov
movs
ds
ficomp
test
stos
add
aam
ror
xchg
and
rol
icebp
fst
jne
inc
stc
int3
(bad)
imul
jge
cmp
repnz
xchg
hlt
in
push
cs
loop
(bad)
and
pusha
sbb
ja
inc
ds
inc
pusha
jge
icebp
and
mov
test
sbb
mov
mov
pop
xchg
jae
mov
xchg
jp
dec
sbb
xor
ins
push
in
mov
jg
dec
push
jmp
out
mov
test
mov
xor
rcr
inc
or
dec
dec
pop
mov
jg
push
mov
xchg
jb
or
and
pop
lahf
push
jne
addr16
test
out
xchg
mov
dec
retf
jle
inc
jmp
ret
adc
popf
icebp
inc
fcmovbe
pusha
repz
hlt
sbb
repnz
out
or
mov
ror
stos
lods
push
jno
jnp
pop
xor
dec
push
add
xor
fisubr
rcl
fst
ficom
retf
cmp
pop
ja
pop
fcomp
dec
pusha
test
adc
imul
(bad)
sbb
cmp
stos
xchg
xchg
sbb
or
loopne
pop
icebp
cmp
cmp
mov
inc
fistp
pop
pop
add
(bad)
js
ins
inc
sub
jecxz
in
retf
mov
mov
push
and
push
jle
addr16
xchg
imul
xchg
jb
loopne
(bad)
fmul
push
jnp
std
je
inc
jae
retf
mov
or
lahf
ins
mov
dec
pop
mov
cmc
or
sub
push
xchg
fild
inc
push
or
fdiv
push
xchg
in
inc
inc
xchg
call
lock
aas
leave
push
outs
xor
ret
(bad)
xor
push
jge
fwait
and
mov
push
and
mov
jle
push
mov
cmp
pop
fidivr
pop
pop
(bad)
pusha
outs
je
pop
or
mov
mov
vmread
cmp
jecxz
ja
dec
icebp
cmps
movs
nop
xchg
mov
dec
xchg
fnstcw
or
in
js
xchg
cmps
fbld
aaa
xor
lods
add
sahf
mov
sub
out
in
mul
mov
(bad)
mov
aas
es
ds
sti
gs
fbld
movs
sub
push
loopne
mov
mov
mov
dec
inc
xor
inc
hlt
std
sbb
neg
ins
mov
xchg
imul
xchg
inc
xchg
mov
add
or
aad
sub
cmovno
movs
mov
pop
nop
pop
lahf
arpl
outs
jns
(bad)
cmp
(bad)
stc
out
jmp
lock
clc
or
jecxz
loop
push
add
add
dec
inc
dec
inc
scas
inc
pusha
or
add
add
add
(bad)
(bad)
inc
add
add
add
add
add
add
jns
je
ins
cs
jb
ja
outs
addr16
push
gs
imul
xor
xor
inc
jne
je
jb
cmp
jb
ins
sub
push
jne
ins
imul
imul
bound
xor
data16
xor
fs
add
adc
gs
cs
jb
ja
outs
addr16
imul
add
popa
je
pop
add
add
add
add
add
lsl
add
mov
mov
inc
or
add
or
add
add
add
add
or
add
add
pusha
outs
rol
add
add
inc
dec
inc
add
mov
or
popa
add
jo
pop
jae
add
ret
add
push
ret
add
outs
test
add
adc
inc
inc
push
pop
inc
in
rol
loopne
dec
ja
dec
dec
ja
cwde
jmp
cmp
out
jbe
ss
mov
frstor
out
sti
and
sti
cmp
add
aam
adc
mov
mov
push
fld
sbb
cs
movs
imul
adc
lods
(bad)
dec
data16
dec
inc
stos
inc
mov
lock
adc
mov
push
mov
inc
adc
shl
dec
iret
cmps
sub
cmp
nop
cmc
(bad)
mov
nop
or
fdivp
stos
dec
inc
adc
leave
fimul
inc
lds
jo
mov
jl
lods
cld
mov
pop
(bad)
jb
fstp
(bad)
and
jecxz
test
daa
int
jle
pop
cmp
xor
mov
mov
mov
scas
call
sub
or
push
sar
dec
out
cmps
int
cmp
cmp
out
lahf
push
push
xchg
int3
cmp
push
xor
adc
sub
adc
mov
test
or
add
cmps
xchg
push
lods
push
jecxz
pop
loope
push
xor
sar
xchg
xor
push
scas
pop
pop
add
inc
gs
dec
out
pop
sub
sbb
sbb
outs
adc
dec
xchg
mov
sub
dec
lahf
gs
frstor
jnp
and
inc
add
aaa
hlt
inc
in
enter
xchg
mov
fidivr
outs
push
push
pop
fisubr
mov
stos
jecxz
lahf
mov
sub
cmp
xchg
imul
fadd
(bad)
jmp
xchg
mov
jae
sub
fcom
cld
and
mov
shr
dec
sub
sbb
jmp
js
pop
xor
fwait
cld
test
adc
or
mov
inc
adc
sbb
jg
in
mov
inc
pop
dec
ss
jge
cdq
sbb
pop
mov
clc
arpl
sbb
cmp
scas
fdivrp
push
iret
xor
adc
test
mul
xchg
push
arpl
stc
call
test
out
adc
das
adc
scas
add
xchg
pop
mov
push
sub
dec
push
inc
ret
stc
out
or
aad
hlt
adc
mov
pop
adc
xchg
jecxz
push
je
mov
xor
movs
clc
dec
pop
jecxz
sbb
shl
aas
mov
stos
ja
ret
outs
repz
push
in
push
into
in
push
retf
jmp
lds
out
icebp
adc
xchg
xchg
dec
es
pop
lock
xor
or
dec
loope
xchg
movs
stos
ficom
xchg
cmp
mov
dec
or
fisttp
fisub
mov
inc
sbb
loopne
inc
jecxz
ss
lods
test
pushf
rcl
inc
push
in
mov
out
nop
xor
xchg
push
jnp
repz
jge
sar
sti
lds
call
adc
or
fdivr
dec
mov
pop
xchg
mov
push
adc
sbb
mov
(bad)
hlt
xchg
push
cmp
mov
pop
inc
stos
push
dec
xor
aaa
xchg
push
out
ins
mov
inc
dec
pop
sub
out
(bad)
sub
pop
fcmovbe
inc
jnp
movs
and
imul
stc
push
dec
jno
xchg
jmp
pop
sub
mov
stos
pop
pop
cmps
xchg
lahf
push
pushf
fsub
xchg
mov
(bad)
int
dec
cli
jecxz
mov
in
(bad)
into
pop
imul
pushf
mov
and
or
dec
leave
fs
mov
rcr
hlt
ret
mov
fsubr
and
pop
pop
jecxz
xor
mov
mov
jmp
dec
mov
aaa
mov
ins
mov
mov
cdq
sahf
add
inc
pop
sub
xor
push
mov
pop
fwait
test
mov
pop
gs
sbb
js
mov
mov
data16
leave
or
xchg
imul
xchg
fmul
jno
test
fs
out
fist
xor
dec
adc
inc
mov
sbb
(bad)
and
inc
sub
fild
xchg
clc
mov
push
rol
rcr
(bad)
jbe
xor
enter
and
inc
iret
push
out
in
cmp
mov
add
outs
imul
xchg
sub
movs
stos
imul
lds
and
jnp
and
ss
jns
jmp
mov
sub
mov
dec
jno
out
cmc
fdivr
cmp
fwait
pop
fiadd
inc
pop
mov
xchg
mov
retf
mov
int3
test
iret
push
ins
ja
mov
and
add
mov
aad
fisubr
cld
test
mov
rol
fwait
mov
clc
stos
xchg
aas
xchg
sbb
cwde
push
out
inc
xchg
and
add
sbb
xor
into
pop
xor
enter
mov
dec
retf
pushw
ror
xor
shr
mov
xchg
hlt
mov
jmp
jecxz
bswap
(bad)
or
pop
push
push
lods
in
mov
fstp
es
push
push
push
xor
imul
scas
dec
mov
inc
test
aaa
ror
fnsave
into
jbe
in
cmp
mov
pushf
ins
pop
dec
push
cwde
(bad)
or
xor
aas
outs
sar
add
in
outs
cli
mov
cmp
iret
pop
icebp
mov
xor
mov
gs
imul
jns
inc
xlat
shr
add
mov
imul
es
loope
xchg
xchg
lds
or
ja
mov
(bad)
mov
cmp
adc
and
mov
dec
stos
pop
pop
add
xor
je
imul
int
or
hlt
cmc
in
xlat
sahf
inc
stos
sahf
xchg
rcr
xchg
xchg
cli
pusha
add
sbb
stos
test
adc
or
hlt
adc
cmp
and
xor
push
cs
das
cmp
iret
xchg
push
mov
(bad)
movs
les
pop
mov
xchg
dec
inc
aaa
add
mov
into
sub
add
arpl
stos
retf
test
(bad)
idiv
setne
jmp
jns
lea
pop
out
and
xor
add
mov
aam
stos
cmps
(bad)
push
xchg
add
mov
dec
mov
xchg
inc
fsubr
adc
dec
adc
inc
mov
mov
add
mov
jmp
jecxz
dec
mov
adc
push
lods
xchg
js
out
cmp
or
lods
xlat
xor
int3
(bad)
jnp
dec
mov
arpl
(bad)
out
fnstsw
retf
(bad)
mov
cmp
add
ret
adc
sbb
in
mov
mov
push
repnz
leave
je
inc
ins
mov
js
ficomp
ror
bound
adc
push
outs
dec
add
mov
sti
jno
aas
pop
stos
data16
fwait
inc
loop
jg
fs
shl
mov
ins
sbb
stos
mov
bound
sbb
xchg
mov
sahf
into
jle
cmp
xor
sub
mov
add
stos
xchg
cmc
ror
call
cmp
icebp
stos
loop
popf
mov
test
xor
xrelease
mov
jp
mov
dec
fsub
lods
fisttp
jnp
cmp
out
in
xchg
out
pop
xchg
sbb
ins
mov
shl
neg
jecxz
mov
addr16
aaa
jecxz
pop
inc
test
dec
sbb
fs
or
das
call
xchg
sbb
lahf
fst
lahf
nop
jb
imul
xchg
(bad)
ret
adc
out
in
jecxz
cmp
nop
cld
mov
cs
jo
ds
iret
aam
push
shl
adc
inc
arpl
repnz
cli
sbb
shr
and
cdq
mov
or
mov
imul
mov
fs
inc
or
out
or
lds
pop
fsubr
xchg
(bad)
xchg
stc
mov
(bad)
mul
mov
mov
or
mov
data16
ret
ins
leave
pop
(bad)
sbb
mov
ins
ret
test
ss
cwde
sbb
imul
cmp
xchg
retf
or
xchg
aam
loopne
adc
xor
pusha
dec
adc
or
ret
cld
xchg
out
test
sub
push
xor
lahf
cs
cmp
and
movs
ret
and
sub
arpl
inc
push
dec
pop
cmp
pop
sub
test
xlat
cmc
sub
movs
pop
inc
sbb
not
xchg
icebp
ds
lock
arpl
or
ret
jns
enter
shr
nop
jecxz
mov
jae
popa
sub
push
imul
shl
sub
sbb
mov
pushf
inc
xor
jecxz
mov
push
(bad)
jmp
jecxz
test
cmp
(bad)
int3
jmp
xlat
add
fdiv
mov
(bad)
out
cmp
push
cmp
xchg
jae
jp
dec
in
lock
int3
or
adc
cmp
sahf
mul
in
add
retf
adc
sbb
sub
std
jmp
jecxz
inc
cmp
sub
std
sub
push
(bad)
pop
dec
pop
mov
adc
mov
jl
xor
mov
xor
call
mov
js
lock
shl
retf
fild
cmp
(bad)
push
push
daa
cmp
mov
mov
enter
clc
rol
stc
jle
pop
pop
lock
popf
(bad)
xor
cmp
jg
push
sbb
jns
mov
stc
mov
iret
in
shl
push
imul
add
push
cmp
fwait
cmp
sbb
in
bound
cmps
imul
push
inc
jb
cmp
mov
sub
pop
mov
dec
icebp
enter
inc
jae
sbb
loop
shl
xor
icebp
scas
and
iret
pop
push
push
das
in
addr16
pop
push
adc
stos
lds
mov
out
rcl
outs
jmp
inc
adc
push
mov
sub
int
mov
mov
shl
lea
and
push
fisttp
das
sbb
sub
sub
in
mov
sub
pushf
push
fld
xchg
add
mov
pop
retf
xchg
mov
mov
jge
dec
gs
pusha
cmp
mov
les
lahf
mov
cld
in
jge
rol
mov
inc
jle
retf
mov
inc
mov
xchg
mov
scas
(bad)
mov
mov
inc
pop
outs
fsubr
mov
add
inc
inc
cmc
jmp
into
test
cmps
ss
iret
or
push
mov
movs
sbb
imul
aaa
movs
xor
push
add
adc
jae
cmp
mov
mov
(bad)
fadd
ja
add
arpl
dec
sbb
inc
dec
adc
cmp
jae
ror
adc
push
mov
mov
push
push
xor
dec
sbb
mov
or
pushf
sub
xor
cmp
loopne
mov
test
sti
dec
xchg
xchg
xor
jns
lds
rcr
push
jmp
in
btr
push
add
cmps
stos
popf
adc
pop
jecxz
std
scas
retf
push
fadd
mov
test
nop
repz
xor
mov
dec
rep
inc
jbe
neg
mov
int
or
js
adc
into
mov
int
mov
inc
sbb
jns
sub
jp
adc
call
mov
addr16
cwde
movs
xchg
lods
or
mov
pusha
mov
push
lods
pop
adc
jno
test
in
mov
mov
shr
and
xlat
ins
pop
sub
imul
cld
sbb
(bad)
cmp
lock
push
test
loopne
jge
xor
push
xor
sar
retf
mov
hlt
mov
adc
cmps
aaa
cmps
(bad)
mov
out
mov
pop
mov
cmp
push
xlat
xchg
icebp
adc
xchg
and
sti
inc
xor
retf
cmps
mov
fucomip
dec
jp
jmp
mov
lahf
and
push
nop
aam
mov
sar
pop
test
add
inc
fsubr
xchg
xchg
pop
movs
pop
psubd
jp
pushf
ret
aam
js
jmp
mov
add
mov
xor
or
loope
loopne
cld
jp
sub
jmp
fcmovnb
in
pop
in
loopne
leave
test
mov
stc
inc
mov
fdiv
pavgw
adc
lods
mov
mov
adc
in
mov
movs
xor
pop
in
inc
and
sahf
push
pop
in
movs
inc
inc
mov
arpl
mov
fiadd
xchg
adc
sub
das
cli
adc
jo
cmps
in
push
ins
pop
movs
adc
xchg
inc
bound
jl
movs
ins
retf
jae
loopne
mov
imul
js
or
imul
push
out
cmp
lods
out
ins
xor
or
mov
sub
pusha
popf
mov
in
test
aam
test
jle
jno
mov
mov
mov
xlat
sub
test
mov
jmp
js
mov
gs
repz
cwde
aam
out
and
mov
js
xor
pop
fsub
push
add
dec
dec
inc
or
iret
sar
xor
mov
or
mov
jmp
mov
popf
icebp
xlat
fldenv
mov
mov
cmp
mov
push
ins
pop
std
daa
push
or
mov
loope
mov
and
sbb
in
rcr
pop
sub
ds
jbe
add
ror
inc
jno
add
mov
inc
sar
and
arpl
(bad)
pop
adc
xchg
adc
mov
fisttp
pop
xlat
inc
mov
xlat
push
cmp
inc
out
fdivr
xor
jnp
retf
pop
inc
aaa
es
xchg
outs
lds
jmp
stos
out
in
sar
cmp
daa
pop
cmp
pop
in
popa
and
sahf
aaa
jp
push
pop
ret
inc
iret
ficom
pusha
scas
dec
cmp
fiadd
mov
movs
xor
les
jg
out
mov
fiadd
call
idiv
leave
cmp
or
(bad)
ficom
js
jns
or
mov
add
xor
loope
push
sbb
cwde
rcl
mov
ret
add
jmp
in
mov
sub
lea
xlat
rcr
push
sbb
push
push
not
fiadd
xchg
xor
push
iret
leave
cdq
(bad)
outs
ins
loop
ja
cmp
loope
inc
rcl
stc
ins
sbb
or
dec
adc
dec
lock
xchg
xchg
mov
iret
mov
jmp
and
jbe
ret
fidiv
mov
(bad)
push
rcl
push
push
fs
jmp
sub
cmp
lods
mov
(bad)
daa
xchg
xchg
adc
into
sbb
mov
stos
jb
rcr
aad
js
pushf
sub
pop
out
shl
les
mov
call
mov
mov
cmp
scas
popf
or
cmp
mov
aam
nop
test
aaa
movs
jmp
cdq
idiv
sub
(bad)
fldenv
(bad)
jmp
inc
cs
iret
popf
mov
push
(bad)
icebp
cmps
inc
mov
mov
js
popf
das
xchg
sbb
mov
mov
pushf
sub
xchg
lods
popa
inc
pop
sahf
jbe
mov
sub
loop
cwde
aam
sbb
cmc
inc
or
adc
outs
into
mov
xchg
xor
sti
mov
or
and
or
or
mov
stc
fnstsw
jg
in
push
and
add
or
push
xchg
jl
ins
out
pop
mov
ja
aad
mov
fmul
mov
ror
aas
movs
mov
lock
push
jbe
xchg
stos
popa
jg
adc
adc
fisub
push
inc
push
xor
push
xchg
stos
jae
not
and
inc
sbb
mov
jmp
jmp
cmp
pop
pop
pop
dec
push
cmps
sub
mov
push
adc
lods
adc
mov
jno
jg
repz
(bad)
cld
out
(bad)
stc
iret
push
adc
retf
jmp
add
add
dec
inc
dec
inc
scas
inc
pusha
or
add
add
add
(bad)
(bad)
inc
add
add
add
add
add
add
jns
je
ins
cs
jb
ja
outs
addr16
push
gs
imul
xor
xor
inc
jne
je
jb
cmp
jb
ins
sub
push
jne
ins
imul
imul
bound
xor
data16
xor
fs
add
adc
gs
cs
jb
ja
outs
addr16
imul
add
popa
je
pop
add
add
add
add
add
lsl
add
rcl
add
mov
inc
or
add
or
add
add
add
add
or
add
add
pusha
outs
rol
add
add
inc
dec
inc
add
mov
or
popa
add
jo
pop
jae
add
ret
add
push
ret
add
outs
test
add
adc
inc
inc
push
pop
inc
in
xlat
add
add
scas
sahf
mov
jo
mov
out
in
jmp
cmp
cld
je
fnstsw
into
es
imul
xlat
(bad)
jns
iret
ds
loop
add
cmps
mov
mov
mov
mov
adc
nop
pop
leave
jmp
in
in
jmp
in
xor
push
mov
dec
mov
or
mov
in
pop
vpshld
mov
push
pop
pop
retf
pop
(bad)
lea
ret
or
dec
pop
cdq
ja
(bad)
(bad)
pop
stos
jmp
inc
outs
ja
jmp
sbb
mov
addr16
add
dec
mov
(bad)
in
dec
mov
add
fistp
aaa
push
inc
dec
or
sti
xor
shl
lea
stos
mov
aam
mov
stos
(bad)
in
pop
xchg
or
dec
mov
adc
xor
lock
nop
pop
sub
sub
in
fstp
cmps
sbb
cli
pop
loop
(bad)
adc
in
pop
sub
and
add
xchg
inc
mov
inc
mov
mov
sbb
mov
out
jl
pushf
retf
jecxz
das
aas
cwde
aam
retf
inc
scas
mov
add
sub
lock
aam
ror
test
jmp
xor
xor
mul
(bad)
clc
pop
xchg
aad
shr
cdq
(bad)
aam
sbb
xchg
inc
mov
dec
popf
lods
jmp
stc
sbb
pop
mov
pop
mov
and
out
daa
or
xor
out
mov
adc
lahf
or
jo
jbe
retf
jmp
jbe
and
inc
or
call
enter
mov
push
cwde
rcr
dec
sahf
and
inc
cwde
out
add
shl
jae
stc
ret
lods
xor
jecxz
fld
fild
bound
les
je
sbb
sub
pushf
pop
aas
stos
retf
xor
dec
retf
stos
mov
loopne
mov
or
adc
sbb
movs
jmp
xor
shr
rol
mov
inc
and
outs
test
mov
push
or
mov
mov
movs
lea
xchg
sbb
xchg
stos
or
xor
into
ins
dec
cdq
sbb
dec
jl
sub
push
pop
fstp
push
inc
push
and
push
xor
cmp
and
(bad)
aam
sub
mov
lea
dec
push
les
sub
pop
stos
lods
adc
int
dec
pop
xchg
sbb
xlat
jnp
das
out
popf
out
dec
enter
rol
ja
xchg
ss
jne
mov
or
sub
xor
aad
test
jb
or
mov
xor
enter
push
outs
mov
dec
aam
dec
adc
push
or
dec
lods
jnp
push
repz
outs
in
xor
cmp
xchg
mov
xor
mov
add
inc
(bad)
push
outs
cmp
cmp
in
jmp
mov
and
jae
mov
pop
xor
sub
popf
ficom
dec
pop
mov
shl
mov
push
or
adc
daa
mov
or
dec
ins
lods
adc
mov
push
adc
(bad)
push
push
cmp
loope
pushf
and
dec
cmp
and
inc
outs
js
xor
adc
nop
push
sub
les
cmp
mov
dec
leave
cs
rol
les
mov
rcl
mov
mov
mov
xchg
jecxz
jmp
je
xchg
add
out
jecxz
sbb
cmc
jle
mov
jo
jae
pop
rcl
call
and
nop
cmp
nop
xor
xchg
(bad)
fisttp
in
or
das
mov
push
jb
inc
xor
mov
int3
adc
inc
mov
sbb
add
loop
cmp
fist
mov
sti
cmp
pusha
(bad)
jmp
es
jl
mov
inc
stos
cdq
movs
ins
fstp
or
sub
and
jg
shr
xor
aas
les
push
xor
les
pop
mov
in
and
jecxz
pushf
out
cld
cmp
sar
ret
sbb
loopne
lock
jmp
pop
sahf
push
sar
mov
or
inc
pop
lock
es
mov
dec
mov
mov
das
add
add
movs
and
mov
adc
popf
gs
sub
daa
or
cmp
and
jo
stc
mov
mov
ror
cmp
jmp
jecxz
jg
scas
int3
jb
jecxz
icebp
stc
loopne
mov
shr
in
ins
sbb
pop
mov
sub
shl
xchg
sbb
sub
push
shl
pop
out
sub
jb
mov
dec
aad
jo
loop
mov
cmp
or
jge
(bad)
div
cmps
xchg
mov
in
dec
imul
or
in
mov
pop
sti
into
sub
sbb
fist
cmp
jl
jb
stos
nop
xchg
lea
mov
mov
and
and
bound
mov
test
jecxz
out
nop
repz
jg
ss
dec
mov
dec
std
rol
(bad)
mov
jmp
aas
sbb
aas
cmp
pop
xchg
jle
hlt
out
cmps
pop
inc
call
push
ins
add
lea
ds
call
into
sbb
icebp
mov
adc
adc
retf
lock
(bad)
push
jmp
xchg
xor
jp
inc
mov
push
xchg
ins
inc
out
and
push
(bad)
sahf
dec
aas
cmps
cmp
adc
jl
not
add
sub
push
out
dec
leave
pushf
std
leave
mov
popa
add
arpl
gs
mov
(bad)
adc
sub
shl
xlat
jb
adc
and
push
jb
push
pop
inc
and
movs
xor
cmp
mov
stos
push
in
add
(bad)
push
mov
outs
fild
sar
cmp
cmc
cld
mov
push
fcom
mov
loope
jle
pop
push
jbe
test
mov
add
js
retf
cmp
mov
sbb
shr
mov
sbb
mul
fiadd
std
ss
rcr
enter
icebp
pop
leave
or
adc
jp
xchg
(bad)
test
jbe
and
jae
mov
stos
mov
mov
leave
or
shr
jnp
sub
xchg
lods
aas
inc
out
outs
push
stos
loopne
lods
push
xchg
ror
test
cmps
fsubr
pop
int
fidiv
stc
add
jl
jmp
push
mov
dec
shl
mov
and
icebp
inc
(bad)
mov
push
jmp
jnp
fistp
xchg
xor
into
aad
mov
retf
test
sub
push
ror
mov
fidivr
cmps
jae
test
dec
in
fs
push
cli
in
xchg
and
cmp
retf
sbb
xchg
sub
jmp
sar
fistp
pop
xor
jnp
dec
mov
sbb
(bad)
mov
out
movs
leave
pop
sbb
jno
fdivr
sub
sahf
push
pop
mov
(bad)
aam
daa
(bad)
(bad)
pushf
in
adc
sahf
in
and
rcl
adc
add
mov
das
enter
(bad)
sub
cmps
jae
cmp
fwait
sbb
xor
mov
je
mov
xor
xchg
adc
and
or
xchg
xlat
loop
mov
ret
pop
cmp
cs
add
jns
cmc
push
jns
out
idiv
pop
mov
lahf
lahf
(bad)
cmp
and
mov
mov
imul
and
(bad)
(bad)
jmp
or
xchg
std
xor
sbb
std
inc
pop
jge
addr16
scas
adc
into
pop
push
xor
pop
add
fnsave
pop
(bad)
dec
pop
(bad)
cmps
retf
test
jg
and
shr
imul
add
cmc
jae
push
int
leave
fist
out
xchg
inc
jbe
cli
outs
sti
arpl
out
or
aad
(bad)
mov
jns
inc
cmps
add
aam
call
adc
mov
js
add
lods
push
pusha
rcl
pop
jl
retf
sbb
fwait
mov
les
pop
call
dec
mov
jp
into
xchg
jns
(bad)
ds
rol
cdq
cmp
ins
mov
mov
(bad)
(bad)
mov
adc
(bad)
stos
sub
push
pop
push
or
ja
or
fmul
stos
cli
jo
push
push
ja
adc
sahf
ins
popf
lahf
pop
cwde
jmp
xchg
xor
das
outs
fwait
mov
mov
das
inc
shl
xchg
mov
xor
les
mov
movs
xor
rol
ja
push
les
scas
pop
leave
jne
pushf
imul
jbe
icebp
cmp
outs
mov
cld
sahf
aam
fwait
(bad)
adc
comiss
(bad)
dec
cwde
jns
jmp
adc
clc
dec
ds
adc
icebp
dec
cmc
ds
jno
mov
sbb
(bad)
and
lds
pop
shl
xor
add
sahf
jl
popf
mov
jmp
or
xchg
sbb
and
xchg
xor
mov
and
and
inc
lods
sub
ret
test
adc
pop
xchg
fnstcw
and
sub
push
movs
nop
nop
jecxz
leave
je
dec
ja
and
xlat
pop
test
std
adc
adc
or
fistp
inc
sahf
pop
in
mov
mov
popa
push
jbe
push
ficomp
push
dec
and
loope
(bad)
add
out
lock
and
jb
and
pusha
pusha
(bad)
cs
outs
cmps
or
mov
lahf
enter
cmps
outs
xchg
int3
mov
or
sbb
(bad)
ficom
test
daa
lock
arpl
push
and
(bad)
aad
cld
stc
and
adc
cmc
mov
xor
cmc
and
ret
xchg
mov
popf
int3
rcr
ds
hlt
pop
fcom
cs
retf
or
xchg
push
lods
jne
inc
add
or
jbe
jbe
or
repz
jb
adc
outs
jno
inc
jb
pop
mov
cmp
jl
in
mov
in
das
adc
xchg
mov
sti
out
sub
push
js
fnstenv
hlt
clc
lahf
sub
loopne
or
jp
mov
mov
and
or
and
jg
icebp
mov
mov
cmp
push
sub
imul
cmp
mov
sbb
or
test
pop
cld
in
fisubr
ror
imul
mov
jmp
mov
inc
shl
dec
cmp
test
jae
popa
data16
sar
js
jmp
add
mov
xchg
pop
sbb
inc
out
test
mov
iret
rcr
jbe
cmps
test
call
mov
ds
or
inc
adc
pop
or
sub
adc
ja
imul
pusha
fcmovb
mov
add
fsub
gs
es
es
into
dec
(bad)
stos
imul
sub
push
jg
xchg
sahf
fwait
outs
or
sub
in
push
mov
inc
outs
dec
xchg
dec
or
enter
cmp
mov
mov
std
add
mov
int
fwait
repnz
mov
or
xor
jmp
pop
add
jne
xor
movlhps
clc
ror
outs
sub
pop
mov
movs
clc
ss
mov
fwait
bound
add
lfs
jb
mov
mov
cmpps
and
push
das
inc
ja
call
xor
inc
(bad)
mov
jle
fisub
pop
scas
sub
loopne
shl
inc
xor
hlt
popa
push
scas
inc
or
imul
jns
add
push
mov
fbld
sub
xchg
pop
mov
fst
xchg
jae
bound
hlt
repz
repz
adc
mov
or
and
rcr
adc
hlt
inc
push
push
test
fmul
movs
inc
dec
inc
stos
jle
dec
hlt
mov
jnp
dec
jl
mov
mov
inc
scas
mov
inc
neg
sbb
daa
fwait
push
pop
sub
lea
adc
das
(bad)
xchg
inc
jl
jg
add
sbb
in
scas
aad
and
pushf
sub
cmp
xor
lea
shl
dec
dec
and
(bad)
cmp
retf
fdiv
jne
xchg
bound
pop
pop
xor
mov
ins
jns
mov
pop
xlat
mov
xor
mov
clc
xor
push
fs
or
xor
(bad)
ror
xchg
jmp
jge
in
ins
xchg
neg
int
fimul
push
cmp
jae
pop
sbb
enter
fwait
mov
pop
sbb
int
das
jecxz
xor
and
mov
mov
pusha
mov
xchg
mov
out
inc
dec
mov
out
inc
and
fwait
lds
cs
(bad)
xchg
cmp
jp
cmc
icebp
xor
dec
add
jle
fist
push
mov
cld
inc
inc
push
inc
adc
mov
dec
xlat
mov
xor
mov
cs
shr
int3
cmps
jnp
fistp
icebp
ds
adc
cmp
cld
mov
fcom
cli
inc
ja
dec
aam
pop
inc
movs
jno
(bad)
jns
ins
xor
or
xchg
stos
mov
sbb
or
repz
xchg
pop
neg
jg
lea
into
mov
xchg
ja
jecxz
adc
fsubr
cmp
inc
lods
repz
mov
jmp
in
xchg
mov
ds
jno
fistp
jmp
mov
mov
aaa
cmp
retf
retf
push
mov
pop
shr
xor
rcr
stos
cwde
int3
pop
loope
(bad)
cld
sbb
mov
cmp
cmp
cmc
xor
jae
mov
jmp
out
in
fxch
sub
bound
mov
inc
xor
jmp
leave
or
idiv
sub
adc
cs
xlat
jo
adc
(bad)
mov
(bad)
dec
pop
lods
adc
out
test
jp
sti
data16
cli
in
in
pusha
mov
(bad)
push
or
iret
(bad)
dec
jbe
add
sbb
jge
(bad)
cli
xor
sbb
pop
lahf
jmp
inc
mov
aam
cmp
push
or
cwde
bound
cmp
mov
lods
and
aaa
pop
test
loop
out
(bad)
mov
ret
dec
jne
inc
jge
sub
xchg
outs
pop
and
dec
jne
(bad)
daa
test
loopne
retf
outs
mov
jecxz
mov
les
cmps
int3
retf
adc
call
mov
leave
pop
lahf
cmp
or
popf
test
mov
push
(bad)
xor
inc
jecxz
adc
clc
push
xor
or
or
sub
mov
pop
pop
stos
imul
cwde
cmp
ficomp
test
push
mov
aaa
mov
jmp
jmp
test
sub
sbb
test
add
movs
xor
pop
adc
mov
gs
xor
call
inc
fist
inc
pop
pusha
scas
adc
cmp
sbb
mov
lahf
and
ja
jmp
push
lahf
clc
gs
mov
aaa
mov
pop
pushf
lahf
fisttp
adc
icebp
push
or
push
mov
popa
mov
icebp
mov
je
fidivr
push
fs
adc
cmp
aad
or
(bad)
sub
ins
mov
stc
pop
jb
les
cli
push
xchg
cmp
popa
aam
inc
mov
or
mov
jp
push
call
pop
retf
xor
pop
in
cmp
mov
ds
pop
lods
out
fimul
push
pop
(bad)
imul
xor
lahf
jg
stc
out
jg
stc
out
xor
or
daa
(bad)
sub
scas
inc
pusha
or
add
add
add
(bad)
(bad)
inc
add
add
add
add
add
add
jns
je
ins
cs
jb
ja
outs
addr16
push
gs
imul
xor
xor
inc
jne
je
jb
cmp
jb
ins
sub
push
jne
ins
imul
imul
bound
xor
data16
xor
fs
add
adc
gs
cs
jb
ja
outs
addr16
imul
add
popa
je
pop
add
add
add
add
add
lsl
add
rcl
add
mov
inc
or
add
or
add
add
add
add
or
add
add
pusha
outs
rol
add
add
inc
dec
inc
add
mov
or
popa
add
jo
pop
jae
add
ret
add
push
ret
add
outs
test
add
adc
inc
inc
push
pop
inc
in
rol
loopne
fnsave
xor
cmps
fwait
rcr
pushf
sbb
xor
mov
rcr
dec
xlat
test
xor
pop
add
mov
push
mov
arpl
fs
(bad)
cs
jmp
call
stc
push
test
loop
test
(bad)
out
repnz
outs
or
mov
ins
sbb
sbb
stos
in
push
mov
push
mov
cmp
adc
dec
and
push
xor
retf
mov
imul
mov
sbb
sbb
ss
bound
push
jb
pop
sbb
sbb
adc
mov
cmp
fist
adc
xchg
xchg
or
dec
mov
sub
mov
aas
xchg
rol
sbb
dec
xchg
dec
imul
ret
ja
cdq
sub
mov
and
repnz
dec
in
in
add
cmps
sub
(bad)
mov
gs
stos
inc
scas
add
out
and
leave
out
sbb
scas
jns
mov
add
fucomi
mov
inc
inc
or
cs
mov
xor
cmps
shr
and
inc
jns
jo
(bad)
shl
or
div
jmp
(bad)
jp
(bad)
dec
js
xchg
loopne
xlat
arpl
dec
loop
std
sub
xchg
or
adc
sub
adc
and
pop
or
loope
mov
cmp
repz
ss
pop
adc
cmps
mov
fsubp
rcr
push
inc
rcl
mov
pop
push
dec
add
push
repnz
imul
ins
pop
test
sti
ins
xchg
add
cmp
pushf
jp
sbb
dec
imul
imul
pushf
aam
ficomp
push
xchg
(bad)
pop
imul
fbstp
jecxz
test
jmp
push
inc
vpsubd
cmp
(bad)
(bad)
ret
(bad)
pop
aad
mov
dec
sbb
cmps
pushf
sub
ins
and
test
push
fdiv
aam
loope
call
cdq
(bad)
dec
or
pushf
div
adc
xchg
xor
add
cmp
arpl
sar
xor
xchg
adc
cmps
push
sbb
movs
jne
inc
or
mov
jle
out
outs
ret
cmc
mov
into
cmp
rol
sub
je
lds
sbb
mov
mov
(bad)
jp
mov
push
sbb
pop
inc
and
and
sbb
lahf
jge
(bad)
sahf
retf
fldcw
push
pop
mov
sbb
cmp
mov
and
sub
pop
sbb
add
cmc
add
les
ss
pop
adc
repnz
clc
and
push
push
and
cmp
push
inc
lds
inc
adc
jns
mov
push
mov
pop
data16
repnz
(bad)
jmp
outs
pop
inc
add
pop
jmp
adc
(bad)
aad
mov
fisubr
(bad)
mov
(bad)
rcr
mov
push
push
ss
int
out
inc
mov
cmp
lds
cwde
add
scas
mov
xor
(bad)
vphaddubw
push
dec
test
popf
sahf
and
scas
lods
inc
jmp
mov
push
bound
gs
push
dec
dec
lods
and
imul
sub
push
adc
sub
jmp
fs
push
push
cli
pop
test
or
das
test
or
shl
pop
not
lea
int3
jo
popf
sub
sbb
leave
xchg
push
and
or
in
add
pop
mov
test
sub
gs
fistp
scas
or
in
mov
xor
movs
aas
jbe
outs
and
(bad)
loopne
xor
fisttp
leave
inc
ss
dec
inc
pop
mov
xchg
pop
and
outs
pop
out
stc
std
pop
sub
ss
out
arpl
pop
loope
pop
xchg
in
push
icebp
mov
in
lods
mov
jecxz
xchg
(bad)
push
xchg
cmp
dec
adc
sahf
mov
xchg
sbb
hlt
outs
pop
xor
and
retf
xchg
pop
out
adc
inc
sbb
imul
or
dec
sub
cdq
mov
add
xchg
shl
scas
sbb
jno
std
adc
push
or
fstp
jnp
and
or
inc
add
dec
daa
mov
cmp
jp
cmp
(bad)
cmps
xor
fcom
dec
inc
sub
mov
test
mov
icebp
fwait
outs
xchg
enter
mov
fldcw
lods
jno
pop
mov
xor
cdq
scas
jmp
jne
push
fdivr
sub
push
bound
stos
cmp
pop
jbe
pusha
sbb
dec
jnp
popa
mov
loop
scas
rol
lods
add
int
or
fwait
mov
retf
and
repz
mov
fdiv
ins
lock
sbb
jmp
call
pop
jmp
mov
cwde
or
std
int3
out
xchg
sub
and
xor
arpl
stc
cmp
stos
int3
ja
pushf
jle
adc
call
idiv
fcmovu
pop
mov
in
pcmpeqw
sub
imul
jg
xor
int3
push
lock
enter
out
sti
retf
push
xchg
rcl
rcl
add
jmp
jo
leave
add
je
out
adc
fcmovne
in
pop
test
adc
call
dec
arpl
mov
fcom
ja
cli
cmps
cmc
jg
dec
call
loop
rcl
xchg
das
sar
mov
or
mov
rol
in
jecxz
aad
xor
ficom
jmp
out
push
ret
int
mov
cld
mov
or
fsubr
cmp
adc
pusha
sbb
call
jge
mov
scas
jmp
push
sub
sar
aad
push
mov
mov
and
cmp
cs
pop
fst
mov
mov
ficom
or
retf
xor
idiv
aas
sahf
jge
dec
hlt
es
or
xchg
adc
xor
pop
pop
ret
add
or
mov
adc
push
mov
pop
xchg
jecxz
and
or
add
dec
out
add
popa
cbw
or
sbb
inc
inc
lds
pusha
cmps
push
adc
or
inc
sub
sbb
sub
imul
dec
ror
lds
mov
sbb
or
sbb
dec
jae
sub
dec
cs
mov
fadd
arpl
sbb
frstor
jb
and
lods
(bad)
popf
icebp
ror
push
cs
dec
xchg
es
mov
or
xor
les
mov
sbb
(bad)
xchg
xchg
repz
out
push
sub
mov
adc
mov
jne
and
fst
jge
(bad)
mov
dec
ret
xchg
ret
sub
and
ret
adc
jnp
sub
add
les
imul
or
mov
push
cmp
or
or
jg
dec
mov
mov
enter
mov
push
into
mov
add
pop
pop
leave
push
out
xor
sub
mov
push
add
mov
ss
jmp
sub
test
inc
ins
rcr
enter
xchg
jo
xor
jns
repz
retf
adc
pop
cmps
scas
jp
or
addr16
xor
jo
das
pop
jecxz
and
ss
ins
pop
push
add
adc
out
xchg
ins
sub
xchg
or
add
xchg
and
test
xor
jecxz
sbb
push
cld
mov
mov
mov
inc
retf
stos
fidivr
mov
push
push
pop
jg
daa
mov
sub
rcl
daa
lds
lods
cmp
fild
sub
sub
xor
(bad)
stos
ror
dec
push
dec
pop
push
push
xor
cld
(bad)
jb
ins
scas
cmps
shr
adc
cmp
popa
call
stos
test
std
jno
sbb
data16
out
xchg
movaps
cli
adc
and
shl
pop
xchg
stos
xchg
test
sahf
nop
ins
in
mov
nop
add
enter
sahf
sub
jnp
jno
ja
sub
add
pop
test
call
pop
in
fwait
mov
dec
sar
in
push
in
jne
mov
fld
mov
nop
sub
adc
jl
sbb
and
mov
cmp
sti
cmc
adc
icebp
test
inc
cwde
(bad)
cs
mov
push
lea
pop
cs
aas
sbb
lock
inc
addr16
pop
dec
(bad)
pop
sub
and
inc
jle
sub
xchg
push
push
jp
pushf
dec
mov
cmps
cmps
cli
or
aam
in
fsub
stos
jl
jge
enter
test
adc
add
push
repnz
cmp
or
clc
or
out
ret
mov
call
and
movs
jl
scas
test
nop
xchg
imul
sub
out
imul
out
js
stos
add
mov
call
cmovne
das
movs
aas
fisubr
xor
repnz
imul
clc
pop
xor
std
call
retf
fst
enter
scas
loope
mov
cmp
push
data16
inc
mov
xchg
jmp
je
inc
data16
xchg
or
in
fisub
xchg
push
pushf
sar
xor
sar
dec
pop
sbb
enter
mov
rcr
pusha
or
mov
mov
sbb
mov
mov
or
push
mov
in
cmp
xlat
call
cmps
push
sbb
mov
in
ins
scas
and
jno
adc
mov
stc
pop
scas
mov
mov
(bad)
sbb
jg
fstp
pop
or
imul
in
push
pop
pusha
test
mov
inc
inc
jns
xchg
dec
and
out
lahf
inc
cld
inc
push
dec
nop
xchg
das
adc
or
add
(bad)
pop
jge
and
pushf
popf
int3
or
and
fsubr
push
inc
adc
out
push
push
retf
ins
aas
repz
mov
mul
push
jae
in
cmp
cmp
or
aaa
mov
mov
not
jle
les
dec
popf
dec
dec
mov
xchg
repz
mov
xchg
jns
mov
push
imul
cmp
mov
rol
ds
aas
movs
jne
cmp
jle
out
inc
shl
bound
dec
and
mov
imul
rcr
and
stos
ja
push
sar
cs
pop
das
jae
ret
pop
mov
mov
cmp
sbb
mov
dec
cmp
mov
mov
stos
sub
addr16
xchg
bound
sbb
aas
mov
rcl
in
int3
xchg
xor
push
into
jecxz
jge
repz
repnz
sub
dec
stos
or
add
inc
mov
mov
mov
inc
add
mov
data16
lods
rol
lock
bound
das
pop
leave
addr16
std
or
outs
dec
cld
jnp
mov
pusha
lahf
gs
stos
push
jecxz
mov
pop
inc
cmps
xor
xor
in
iret
or
bound
fiadd
mov
mov
sbb
imul
push
pop
mov
mov
sti
jmp
inc
stos
xchg
les
ds
std
nop
sbb
sub
loope
fnsave
xchg
mov
cwde
rol
dec
call
dec
aas
lock
push
dec
mov
gs
dec
fisttp
dec
adc
sub
popa
fdivrp
push
or
dec
xchg
sti
adc
adc
js
sub
add
and
fcmovnbe
pop
sub
push
in
out
leave
pop
adc
add
inc
cmc
xor
mov
dec
lods
mov
pushf
lock
mov
call
arpl
not
fdivr
aam
ret
xor
adc
call
mov
iret
iret
dec
out
rcr
outs
shl
lock
cmp
xchg
repz
adc
out
xchg
mov
mov
adc
ins
arpl
xor
sbb
into
fcmovnu
sub
jbe
push
cwde
shl
adc
mov
fwait
cmp
lods
test
test
call
push
mov
xchg
jne
leave
xchg
aas
jge
pop
sub
and
imul
adc
xchg
out
addr16
test
repnz
xchg
cs
mov
in
(bad)
lahf
xor
or
test
std
daa
out
push
imul
lods
or
stc
nop
mov
shl
xor
push
push
pop
mov
lods
xchg
out
sub
mov
icebp
hlt
js
movs
popf
jl
cmc
jno
sub
sub
and
jb
repnz
retf
cmp
cmps
mov
clc
mov
sahf
xchg
mov
mov
dec
pushf
movs
test
cmp
fwait
mov
sbb
dec
xchg
xor
scas
sbb
retf
pusha
paddsw
imul
jb
jg
adc
neg
pop
mov
dec
in
or
jno
and
pop
adc
mov
icebp
bound
push
cmps
mov
or
jl
std
xchg
mov
inc
ins
clc
out
push
mov
test
mov
retf
dec
jbe
pusha
push
(bad)
(bad)
loope
shr
pop
sub
and
pop
sbb
pop
(bad)
mov
test
xor
popa
or
pop
popa
mov
and
gs
push
(bad)
pop
bound
pop
movs
aam
push
jno
sub
mov
outs
and
xor
sbb
pop
sbb
xor
add
push
fidiv
dec
xlat
imul
lea
icebp
xchg
pmaxsw
fstp
test
mov
mov
pushf
retf
cmp
push
cmp
fidivr
cld
mov
add
loope
(bad)
cmps
xchg
xor
cmp
xchg
pop
aas
sub
cwde
leave
lds
xor
test
or
aaa
adc
je
comiss
dec
imul
imul
pop
movs
(bad)
jge
pushf
sbb
(bad)
sub
or
daa
pop
mov
add
loop
xor
xor
xor
inc
cmp
jb
or
fwait
jge
inc
popf
mov
pop
or
xor
mov
les
mov
cli
(bad)
mov
jo
mov
movs
sar
mov
cmp
adc
neg
and
movs
repnz
jbe
aam
lahf
cmp
inc
dec
daa
fimul
rol
sub
(bad)
xchg
jne
(bad)
sub
and
pop
pushf
int
cmp
pop
cmps
pop
bound
ds
xor
out
loopne
stc
imul
mov
nop
push
cmp
xlat
jp
jmp
bound
lahf
lods
sub
lea
std
inc
stc
fcmovnu
mov
pop
stc
cwde
add
cdq
(bad)
mov
jae
jns
cmps
cwde
test
adc
cmp
(bad)
and
and
xchg
mov
fnstenv
out
nop
inc
outs
fs
jns
pop
push
outs
int3
push
or
fucom
adc
mov
test
stc
aam
stos
movs
mov
daa
fisttp
ins
jge
mov
ins
ret
pop
pop
dec
mov
add
je
jmp
xchg
xchg
sub
xchg
jge
xor
lock
add
shl
jp
push
sbb
dec
cmp
sub
jns
jbe
call
popa
or
(bad)
sbb
and
dec
xchg
sub
fiadd
fisub
in
outs
cli
push
mov
jmp
mov
pop
scas
cli
sbb
push
loopne
mov
lods
movs
rcr
fs
cmovg
imul
lods
push
cmp
lods
enter
fist
mov
int
(bad)
xor
add
cmps
(bad)
jmp
pop
or
adc
repz
aas
(bad)
cld
repz
aas
call
add
icebp
sub
add
add
dec
inc
scas
inc
pusha
or
add
add
add
(bad)
(bad)
inc
add
add
add
add
add
add
jns
je
ins
cs
jb
ja
outs
addr16
push
gs
imul
xor
xor
inc
jne
je
jb
cmp
jb
ins
sub
push
jne
ins
imul
imul
bound
xor
data16
xor
fs
add
adc
gs
cs
jb
ja
outs
addr16
imul
add
popa
je
pop
add
add
add
add
add
lsl
add
mov
mov
inc
or
add
or
add
add
add
add
or
add
add
pusha
outs
rol
add
add
inc
dec
inc
add
mov
or
popa
add
jo
pop
jae
add
ret
add
push
ret
add
outs
test
add
adc
inc
inc
push
pop
inc
in
rol
loopne
ror
je
ss
cmps
cmp
dec
aaa
adc
xor
pop
push
xchg
adc
arpl
jmp
jnp
add
pushf
inc
pop
push
ds
sbb
sbb
jp
xchg
push
mov
dec
cmp
xchg
clc
mov
pusha
mov
mov
jle
rcr
adc
add
dec
push
daa
cmps
mov
add
cdq
xor
cs
inc
iret
adc
inc
inc
jb
or
sbb
rcr
cwde
push
(bad)
add
add
push
stos
pop
fisttp
dec
out
loop
mov
lock
and
psubusw
pop
imul
dec
cmc
sub
test
sub
or
sub
xor
call
ret
dec
jp
cmp
cld
inc
leave
xchg
call
sub
sub
jmp
push
loop
in
test
ficom
or
jecxz
pop
ins
inc
add
nop
xchg
in
mov
dec
mov
mov
bound
pop
or
test
jle
mov
rol
test
sub
in
mov
jmp
mov
aaa
inc
jnp
adc
neg
or
and
bnd
push
dec
sub
popa
mov
xchg
xchg
imul
mov
cmp
fisttp
dec
jg
popa
fld
or
je
shr
xchg
in
pusha
int
sbb
(bad)
push
test
or
mov
aaa
jnp
inc
pop
mov
mov
mov
clc
cmp
mov
or
dec
jne
fistp
xchg
sbb
sub
mov
pop
dec
dec
jb
pop
pop
jecxz
xor
sti
jl
mov
jmp
dec
pop
bound
rcl
imul
sbb
nop
lods
ficom
in
test
dec
mov
(bad)
div
adc
imul
push
shr
mov
in
mov
aaa
jne
sbb
ss
aas
sbb
icebp
mov
jg
cmps
cmp
adc
repz
movs
fwait
adc
xor
(bad)
xchg
mov
fnsave
xchg
jae
xor
sub
scas
inc
iret
cwde
cs
fst
cmp
scas
mov
lods
lea
pop
xor
mov
ja
int
(bad)
mov
sbb
retf
add
cli
push
mov
sbb
retf
in
fdivr
sub
dec
std
ds
mov
pop
cmp
test
mov
sbb
mov
shr
scas
fisubr
data16
iret
mov
lahf
js
sub
jge
dec
jl
push
xor
fcomp
imul
pop
cmc
loop
push
or
test
dec
pop
pop
dec
fstp
sbb
(bad)
enter
inc
retf
int3
bound
xor
mov
mov
cmc
sbb
adc
adc
iret
mov
add
gs
das
rcl
cmp
scas
mov
cwde
mov
adc
movs
frstor
aam
cmp
adc
ds
and
(bad)
enter
ret
ins
pop
lods
push
mov
xchg
aam
dec
loopne
fdivr
add
add
mov
clc
es
scas
sub
push
fnsave
call
scas
les
enter
ins
pop
fldenv
mov
out
in
bound
mov
sbb
adc
cmp
push
xchg
sbb
and
(bad)
out
push
fdiv
add
shr
test
pop
inc
aas
rcr
ja
dec
neg
mov
icebp
data16
ror
in
sti
or
or
sub
movsx
xor
add
or
das
test
rol
shl
js
sti
inc
cli
and
(bad)
cmp
out
ror
mov
pop
loope
mov
pushf
mov
push
push
push
out
int
jne
pop
mov
into
inc
ins
in
push
ins
jecxz
adc
sub
lea
mov
(bad)
xchg
mov
jns
xchg
xchg
sub
outs
cli
mov
xchg
call
repnz
pop
jle
jp
xor
jnp
clc
mov
xchg
loope
enter
cmp
jmp
lahf
pop
pop
out
xor
pop
inc
mov
jmp
xchg
mov
and
cmp
or
sub
jle
test
mov
sbb
adc
out
jge
or
iret
nop
test
dec
stc
xchg
mov
scas
mov
xchg
mov
jmp
cli
mov
sub
and
add
out
adc
cmp
inc
fmul
adc
push
inc
adc
jg
cmps
pop
scas
addr16
ret
push
pop
sub
pusha
sub
mov
movlhps
jne
daa
scas
cmp
pop
jle
icebp
and
mov
(bad)
std
cmp
int3
nop
xchg
leave
or
and
inc
cmps
jb
jbe
cld
inc
cli
fild
sbb
idiv
inc
lock
in
and
cmp
bound
sar
imul
pop
push
pop
cmp
fwait
push
ss
icebp
jae
out
jmp
leave
out
add
bound
(bad)
lods
rcl
ja
mov
movs
pop
inc
ja
jmp
jbe
xor
movs
(bad)
pop
mov
jnp
jl
mov
xor
mov
push
adc
sub
dec
cmc
jecxz
jae
sub
pminsw
ja
xchg
cmp
mov
(bad)
and
xchg
sub
push
movs
xchg
loop
sar
xor
mov
or
jnp
mov
push
(bad)
add
and
pop
rcr
ret
fdivr
or
mov
xor
inc
cmp
jns
rcl
sti
iret
inc
fld
sub
test
enter
rcl
ins
stos
fisub
pop
cmp
(bad)
fst
test
cmps
(bad)
push
dec
jmp
pop
out
(bad)
sti
mov
iret
mov
icebp
test
pop
jbe
xchg
push
clc
pop
outs
mov
std
lea
adc
jbe
imul
std
pop
out
sub
pop
dec
test
jmp
ror
scas
and
dec
or
dec
(bad)
push
cli
data16
xor
push
or
sub
or
xor
pop
ret
imul
add
mov
scas
mov
pushf
mov
popa
sub
sub
mov
ins
inc
ss
mov
sub
(bad)
(bad)
fild
mov
int3
cmp
mov
mov
mov
sub
sub
dec
stc
into
out
fisub
rol
mov
and
push
(bad)
mov
inc
lds
sbb
mov
xor
retf
cli
sbb
pop
into
call
cmp
std
sbb
or
sub
shl
pop
jns
dec
clc
lea
sbb
sub
loop
xor
jp
mov
nop
jb
sbb
mov
push
mov
mov
test
adc
in
mov
xchg
lock
pushf
fdivp
sti
jge
push
fnsave
in
jns
adc
outs
ins
into
inc
mov
push
mov
push
loope
pop
(bad)
out
pop
mov
popa
cdq
mov
aad
out
mov
and
xchg
sub
mov
daa
pusha
pop
cmps
lahf
lock
imul
gs
jp
push
xchg
fistp
sbb
xchg
inc
jmp
pop
cmp
int
xor
in
sub
sbb
icebp
jecxz
cmp
push
sti
sub
int3
adc
inc
je
xor
dec
cmps
fmul
fiadd
arpl
leave
imul
inc
das
pop
and
add
pop
xchg
or
sub
xchg
out
addr16
push
or
bound
pop
or
outs
push
sbb
cmps
std
hlt
mov
add
shr
fadd
and
pop
outs
mov
jmp
cmp
test
mov
in
jmp
push
push
cwde
mov
push
xchg
jg
adc
in
inc
ja
cdq
ret
cwde
lods
imul
jmp
push
add
cmp
jmp
push
push
mov
push
mov
pushf
push
jg
loop
push
push
pushf
mov
in
aas
push
lock
sbb
ja
into
jno
jmp
xchg
scas
scas
ja
cwde
ret
pop
addr16
iret
xor
add
fsub
fcmovnb
(bad)
int
and
sbb
sti
jl
pop
dec
mov
call
ss
mov
jle
clc
xchg
push
retf
(bad)
mov
mov
in
loope
sbb
mov
push
cmp
jg
cmp
fld
push
mov
pop
mov
data16
cwde
add
jbe
adc
movs
clc
push
xlat
and
cmp
xor
mov
idiv
push
imul
mov
dec
in
or
js
call
jge
cmp
sti
cmp
xor
adc
pusha
(bad)
sbb
mov
les
xor
fsubr
jle
sbb
push
pop
sub
popf
dec
xlat
jmp
mov
dec
inc
pop
das
sbb
mov
mov
mov
in
repz
mul
test
or
adc
dec
mov
out
stos
jae
(bad)
pop
das
mov
clc
xchg
inc
xchg
lea
push
jns
lock
dec
pop
dec
mov
ins
pop
fcmovnu
push
mov
mov
pop
and
popf
xchg
rcl
dec
sub
inc
int
(bad)
ins
jl
retf
lds
cwde
fist
pop
cmp
mov
or
std
mov
xchg
pushf
push
dec
pop
test
lea
mov
retf
jl
sub
jbe
adc
stos
mov
inc
aam
and
xchg
sbb
fdiv
bound
dec
sbb
jne
add
lods
in
push
xor
or
call
les
fdiv
dec
lods
sbb
lds
in
test
jle
mov
jb
pop
pusha
je
xor
ret
cmp
rcl
jb
test
inc
cwde
scas
mov
addr16
cs
lock
into
push
mov
lock
push
rol
pop
inc
mov
imul
rol
out
iret
adc
gs
(bad)
pop
mov
mov
and
mov
xchg
int
hlt
mov
xchg
loop
mov
pop
dec
dec
push
mov
sbb
dec
loop
sbb
mov
retf
pop
adc
push
xchg
ja
ret
cmps
pop
jmp
sbb
mov
inc
cwde
or
xor
pop
retf
cmp
pop
pop
aaa
push
into
(bad)
out
test
ror
and
cmp
xchg
adc
fstp
movs
int
mov
xor
ret
bound
stc
push
pop
imul
inc
jo
fadd
and
in
sahf
pop
jmp
loopne
cmps
dec
add
adc
into
mov
cmps
fnstcw
mov
sbb
mov
idiv
push
out
mov
outs
pop
outs
mov
push
cmp
test
jae
fidiv
icebp
pop
jmp
aad
loopne
mov
cmp
call
arpl
jo
test
push
add
and
pandn
out
icebp
push
or
in
and
mov
push
in
mov
mov
retf
ja
push
sti
mul
jo
or
pop
sti
push
shl
adc
push
pop
js
jns
and
and
and
fwait
fs
jnp
popa
(bad)
xor
test
dec
fist
lock
in
stc
sub
aam
aad
xchg
xor
into
aad
imul
mov
cmps
int
stc
mov
daa
cwde
push
imul
aam
scas
lock
dec
jbe
repnz
addr16
mov
cmps
pusha
push
outs
(bad)
scas
shl
stos
cmp
daa
cmp
std
loopne
mov
lods
xchg
sub
test
push
add
fmul
dec
push
cli
xchg
pop
inc
int
inc
(bad)
ins
cli
sbb
sub
push
test
push
xor
stos
push
sbb
sub
shl
arpl
aad
es
mov
fidiv
cld
sub
mov
pop
aam
cwde
mov
and
add
adc
test
gs
mov
loop
ja
rcr
in
dec
dec
inc
cmps
mov
repnz
mov
in
push
ss
mov
out
jne
out
aaa
inc
rcr
jbe
push
push
xor
iret
stos
call
fwait
xchg
push
sub
adc
or
push
clc
stos
pop
pop
jmp
xchg
out
and
repnz
adc
cmp
ss
pop
pusha
retf
dec
inc
in
push
lock
lahf
sub
cmps
cli
xchg
hlt
cmc
pop
mov
sbb
fisttp
ret
dec
mov
fmul
mov
cmp
xchg
ret
xchg
fisttp
inc
sbb
or
(bad)
dec
mov
mov
jmp
sbb
(bad)
jecxz
xchg
mov
lods
and
rcr
sub
rsm
adc
jno
inc
xor
out
mov
jg
jbe
sub
inc
dec
sub
mov
pop
sub
(bad)
cmc
leave
mov
or
or
xor
mov
and
sub
aaa
mov
cmc
push
out
sub
enter
shl
in
push
and
xchg
js
mov
xchg
cmove
hlt
xchg
stc
popf
in
les
inc
iret
cdq
cmp
jno
loope
adc
mov
xchg
pop
xchg
leave
hlt
cmps
mov
mov
fwait
enter
sub
push
and
es
out
inc
jbe
mov
es
dec
mov
push
jns
add
leave
inc
fucomip
cs
jecxz
rcr
add
dec
pop
(bad)
in
xchg
(bad)
stos
(bad)
and
inc
les
cmps
mov
pushf
arpl
xchg
xchg
push
inc
scas
popa
mov
fs
cmps
sub
inc
sub
pop
jecxz
jmp
xor
or
xlat
sub
and
mov
fs
lock
or
gs
shr
shl
sub
call
(bad)
sbb
sub
arpl
dec
or
rcr
shl
mov
fbstp
icebp
cwde
mov
push
xor
pop
jecxz
and
mov
mov
xchg
std
popf
sub
scas
and
lahf
ds
in
sti
xchg
mov
inc
mov
dec
sti
loopne
sbb
adc
inc
fwait
push
add
test
jae
mov
jge
test
movs
adc
dec
(bad)
fsub
bound
lock
mov
(bad)
mov
jle
repnz
scas
loop
cli
push
push
out
daa
cmp
cmp
push
test
cwde
retf
imul
into
dec
xchg
jmp
int3
mov
addr16
or
sub
std
mov
clc
inc
mov
js
loope
push
retf
sar
aaa
cmp
shl
mov
(bad)
mov
ret
sbb
mov
pop
push
cmp
ins
xchg
(bad)
shr
ins
sbb
aaa
lahf
ja
xchg
int
pop
lods
push
xchg
sub
xchg
and
repnz
jnp
ror
mov
in
inc
aam
test
rol
jbe
xchg
push
cmc
and
fisubr
sbb
mov
push
cmp
out
js
ins
xchg
movs
adc
jmp
jge
fwait
add
cmps
stos
popf
sub
mov
repnz
adc
or
stos
rcl
jmp
loope
or
aas
mov
arpl
cmps
popa
adc
push
out
stc
test
jns
(bad)
movs
inc
aaa
out
cmps
imul
aad
mov
shr
push
and
mov
stos
or
ins
mov
dec
ins
scas
mov
test
call
pop
jp
test
xor
push
cmp
js
mov
data16
out
fsubr
dec
add
fiadd
push
add
adc
add
mov
pop
and
mov
jmp
call
cmp
sub
sbb
fdivr
push
adc
sub
jo
(bad)
clc
addr16
aaa
mov
xchg
sub
das
fild
adc
fisubr
mov
push
push
in
jae
ds
xchg
push
pop
lds
cmp
in
mov
(bad)
ins
stos
(bad)
xor
xlat
out
cmp
or
int3
xchg
sti
retf
imul
stc
je
mov
in
outs
shr
cld
repz
aas
(bad)
cld
repz
aas
(bad)
cld
pop
add
cmc
dec
xor
jno
add
add
dec
inc
dec
inc
scas
inc
pusha
or
add
add
add
(bad)
(bad)
inc
add
add
add
add
add
add
jns
je
ins
cs
jb
ja
outs
addr16
push
gs
imul
xor
xor
inc
jne
je
jb
cmp
jb
ins
sub
push
jne
ins
imul
imul
bound
xor
data16
xor
fs
add
adc
gs
cs
jb
ja
outs
addr16
imul
add
popa
je
pop
add
add
add
add
add
lsl
add
rcl
add
mov
inc
or
add
or
add
add
add
add
or
add
add
pusha
outs
rol
add
add
inc
dec
inc
add
mov
or
popa
add
jo
pop
jae
add
ret
add
push
ret
add
outs
test
add
adc
inc
inc
push
pop
inc
in
int
and
ret
add
shr
les
addr16
test
out
aam
xlat
hlt
imul
in
mov
jmp
jb
(bad)
jle
ja
pop
js
add
push
out
adc
pop
ror
fcomp
push
stos
xchg
das
xor
out
push
scas
call
sbb
dec
in
cwde
adc
lock
push
inc
imul
mov
add
jb
rcr
aad
push
in
jnp
push
inc
cmp
int3
cwde
std
inc
jae
xchg
aas
shl
shl
ss
iret
pop
xchg
dec
neg
push
ret
mov
jle
loope
push
bnd
dec
push
dec
sub
xchg
mov
sahf
ins
loopne
pusha
ror
pop
xor
in
lods
inc
bswap
mov
mov
xlat
in
and
xor
mov
enter
sub
mov
popa
jb
xor
loop
dec
mov
and
out
fwait
sub
sbb
addr16
test
mov
inc
ret
mov
dec
sbb
sub
push
or
cmp
pop
push
mov
push
xchg
sub
les
adc
mov
dec
rcr
pop
and
shr
jmp
stc
ret
arpl
cmps
pop
xchg
adc
es
and
sub
out
icebp
dec
je
jb
sbb
pop
push
jns
out
fld
(bad)
nop
mov
and
xchg
xchg
cld
fcomp
mov
push
inc
sub
push
nop
lock
push
aad
retf
stos
mov
clc
sahf
cdq
mov
push
sub
dec
and
repnz
call
mov
xchg
sub
fdiv
mov
test
push
push
or
pusha
cmp
fwait
adc
fld
and
push
mov
stos
lahf
jns
mul
sbb
xchg
js
mov
push
ins
iret
scas
stc
sbb
imul
(bad)
mov
dec
(bad)
push
(bad)
mov
push
mov
mov
xchg
frstor
mov
ins
cmc
pop
jns
mov
push
adc
(bad)
jo
repnz
pop
mov
or
push
pop
push
cmp
arpl
cmps
jmp
cmp
pusha
mov
dec
and
call
in
in
jne
inc
cmp
jge
div
cld
sbb
xchg
sbb
hlt
sbb
into
fs
cmps
mov
ret
les
hlt
cmps
je
mov
cmp
mov
imul
iret
xor
loop
dec
hlt
mov
push
dec
push
stos
cmc
cmp
aad
repz
sbb
adc
xor
xchg
enter
fcomp
pusha
dec
xchg
jmp
movs
or
and
in
jl
mov
cmps
pop
repnz
test
rcl
sbb
jbe
xchg
cmps
enter
sub
(bad)
sub
push
xor
(bad)
and
push
xor
dec
shl
call
out
add
sbb
and
xor
mov
out
mov
cs
xor
retf
bound
sub
xchg
adc
push
sub
inc
inc
sbb
or
ins
xchg
dec
inc
das
out
call
fdiv
(bad)
xchg
fmul
inc
and
dec
mov
push
daa
lods
in
(bad)
and
fnstcw
mov
add
push
nop
jb
add
xchg
clc
leave
mov
fs
dec
cmp
add
sahf
stc
daa
and
not
dec
mov
das
jae
call
and
test
jmp
ja
xchg
icebp
ss
int
inc
sbb
push
jl
dec
mov
mov
icebp
sub
lods
(bad)
ja
adc
(bad)
std
neg
sub
add
stos
dec
retf
hlt
dec
js
sar
xchg
imul
outs
mov
cwde
call
sbb
cmp
sbb
stos
push
or
repnz
in
outs
xchg
sub
enter
push
sbb
xor
(bad)
xlat
loop
and
push
arpl
pop
aad
push
(bad)
out
or
xchg
jae
mov
inc
push
jno
scas
retf
xchg
inc
jg
push
rcr
and
and
enter
mov
shl
ret
fisubr
es
push
add
inc
sub
in
xchg
loopne
loope
mov
mov
sub
dec
cs
je
call
out
pop
cmp
mov
cmp
dec
into
and
inc
test
or
sub
jge
aam
cmps
xchg
call
test
inc
cdq
lds
(bad)
aam
xchg
mov
xor
loop
stc
(bad)
inc
mov
jmp
jmp
into
ins
sub
std
test
lods
bound
std
push
pushf
stc
addr16
jl
jle
xchg
xchg
xlat
dec
je
xchg
jl
sar
or
mul
xor
int
nop
inc
sub
sbb
mov
stos
mov
xchg
outs
mov
scas
mov
loope
dec
leave
mov
sbb
xor
xlat
(bad)
xchg
enter
mov
bnd
jno
je
(bad)
pop
sbb
lds
cmp
xchg
cdq
sahf
mov
pop
cwde
pusha
adc
mov
push
das
mov
jl
mov
test
jnp
aad
mov
jge
xor
inc
ds
inc
loopne
bound
(bad)
out
pop
data16
int
mov
out
aas
or
pop
add
sub
or
push
sbb
in
dec
jnp
push
ins
mov
js
cwde
std
in
test
mov
jecxz
mov
jo
push
jg
pop
jnp
add
or
enter
iret
test
scas
mov
stos
ins
pop
or
dec
adc
adc
xchg
sahf
jg
cld
jnp
loope
leave
pop
neg
inc
in
out
sub
pop
mov
adc
mov
inc
push
jecxz
jp
xor
test
mov
cli
sbb
inc
inc
sub
sub
shl
out
in
pusha
and
dec
mov
push
dec
loope
jne
adc
push
jne
mov
je
cmp
lods
cld
mov
das
push
cmp
or
(bad)
int3
and
jmp
xchg
xchg
push
cmps
push
scas
inc
sbb
test
nop
shl
xchg
ficomp
adc
add
jbe
sub
jb
in
out
cwde
push
cli
xchg
rep
popf
cld
push
test
fptan
rcr
inc
mov
xchg
xlat
xchg
jg
adc
scas
jg
movs
push
adc
int3
out
out
int
adc
pop
push
mov
pop
sub
mov
xchg
cmp
ret
mov
cli
jp
scas
shl
cdq
mov
rol
(bad)
loopne
lahf
jmp
leave
cld
push
jnp
arpl
loope
mov
arpl
loop
outs
xlat
lea
std
sub
mov
into
scas
mov
push
or
xchg
mov
fs
pop
das
cld
rcr
mov
jae
addr16
mul
cmp
xor
addr16
fcom
pop
pop
nop
jne
dec
xchg
popf
je
add
mov
lahf
idiv
xor
aas
aaa
push
mov
movs
(bad)
loope
mov
fwait
js
mov
add
aam
mov
inc
dec
mov
cs
test
pop
inc
loopne
jne
pop
(bad)
rol
and
fwait
pop
jmp
sub
pop
inc
sub
in
cmp
jle
cmps
push
mov
ins
mov
das
jbe
adc
pop
popa
jle
mov
fidiv
jne
popa
in
fnsave
fild
push
mov
inc
movs
fisub
pop
addr16
mov
dec
dec
ja
fstp
mov
cld
push
mov
mov
and
xor
inc
mov
movs
mov
mov
not
or
push
inc
out
xor
push
lods
nop
add
mov
jb
mov
jne
jg
add
push
arpl
add
fs
push
xor
xor
outs
mov
mov
mov
mov
sti
xor
mov
jnp
out
hlt
mul
call
(bad)
jle
arpl
sti
daa
pop
jge
mov
enter
stc
xchg
mov
and
inc
cmp
jp
dec
rcr
fsubp
lahf
push
cmp
sub
push
inc
cs
jb
mov
sub
mov
jne
dec
dec
sbb
ret
mov
retf
call
repnz
stos
add
sub
xchg
and
jb
data16
jl
int3
int3
inc
push
dec
(bad)
fstp
pop
push
adc
dec
mov
enter
or
cmp
(bad)
sti
stos
dec
ja
cwde
mov
cmc
add
cmp
mov
out
pop
data16
jo
ins
imul
jmp
xor
pop
or
aaa
loope
inc
pop
jmp
in
xchg
fstp
or
push
fist
adc
dec
out
fisubr
gs
sbb
sbb
in
xlat
movs
call
stos
sbb
out
sub
movs
adc
sahf
push
add
ins
jmp
movs
sub
mov
mov
hlt
xchg
mov
xchg
and
retf
mov
hlt
dec
xor
or
adc
into
add
xor
sbb
cmps
mov
sbb
in
or
mov
cmp
sbb
adc
dec
adc
lea
sub
inc
xor
call
lds
fldpi
jle
inc
push
pusha
ins
jbe
fsubr
pop
adc
cmp
mov
stos
push
into
gs
add
movs
or
out
xchg
sbb
push
call
pop
(bad)
into
cdq
sub
add
or
jae
and
lahf
lods
cbw
ja
std
pusha
xchg
ds
inc
push
jge
loop
stc
or
hlt
vmread
test
ja
rcl
mov
sub
sbb
stos
xchg
and
add
jne
jns
sahf
hlt
bound
or
icebp
cmp
adc
out
mov
lock
fimul
stos
outs
push
push
popa
mov
jnp
mov
in
out
dec
loop
jne
enter
sub
lea
adc
jmp
(bad)
movs
fsub
(bad)
mov
fdivr
retf
jmp
arpl
lods
outs
hlt
cmp
rcr
out
cli
xchg
in
mov
pop
out
out
fimul
leave
psubusw
pop
jo
test
lock
mov
lahf
jg
addr16
jle
cmps
dec
and
add
jb
sub
push
(bad)
(bad)
push
mov
sbb
mov
and
or
mov
mov
adc
add
ret
loop
cmc
out
adc
dec
mov
xor
cmp
cmp
jmp
add
mov
mov
vpshuflw
push
or
jp
sar
loop
fidiv
fst
xor
jp
sub
mov
in
imul
rcr
mov
lds
jae
in
mov
push
pop
call
adc
mov
push
inc
sbb
ret
les
lods
into
dec
fcomp
out
test
xor
dec
or
sbb
xor
sub
sbb
xchg
sub
mul
jae
(bad)
scas
sbb
push
js
(bad)
cmp
pop
adc
inc
mov
and
inc
jb
ds
dec
daa
jno
movs
sahf
movs
aam
das
stos
xlat
nop
idiv
sub
out
repnz
pop
lods
or
push
lock
jg
inc
xchg
xor
aam
dec
test
fcmovu
or
mov
sti
inc
cwde
add
jmp
stos
ret
and
ins
fs
push
push
or
mov
xchg
in
js
mov
in
sub
test
cmp
and
jmp
dec
cmps
jle
pop
ds
ins
outs
add
call
and
cmp
shr
jg
sbb
adc
clc
in
pop
or
rol
xor
shl
stos
mov
pop
mov
in
mov
out
in
inc
pop
adc
sbb
repz
movs
lea
push
adc
cmps
rcr
call
(bad)
clc
pop
clc
or
retf
jb
mov
or
xor
pop
mov
call
xchg
xor
jle
sub
push
in
int3
pop
add
cmp
std
div
inc
cmp
mov
and
inc
das
pop
bswap
dec
inc
pusha
fs
mov
les
and
xor
jo
adc
mov
sub
ret
stos
jecxz
test
es
je
out
xor
or
in
ins
mov
sub
jnp
not
sti
pop
repnz
neg
or
inc
in
add
xchg
in
test
dec
cmc
mov
call
cdq
xlat
push
mov
movs
push
push
scas
mov
dec
jmp
mov
dec
test
sub
mov
push
cmp
dec
mov
mov
push
or
retf
and
mov
pop
aam
into
or
hlt
adc
stos
push
and
popf
lods
pop
push
aam
test
cmp
mov
mov
int3
inc
clc
ror
mov
test
fidivr
push
xchg
cpuid
and
ret
pop
hlt
inc
(bad)
(bad)
in
cli
repz
sbb
scas
xor
call
mov
nop
mov
(bad)
in
fisubr
iret
mov
lods
and
ins
mul
cmp
and
push
jle
test
sbb
es
out
xchg
inc
shr
sbb
into
cmp
(bad)
daa
call
dec
jg
fnop
aaa
add
lock
push
lahf
sahf
outs
and
jo
ds
and
imul
pop
std
popa
fwait
fwait
xchg
in
pop
xchg
cwde
movs
jecxz
mov
dec
into
cmp
cmps
mov
sub
lods
add
mov
aam
fld
mov
mov
std
adc
leave
xor
test
shr
push
ret
(bad)
cmp
push
mov
cmp
or
xchg
int3
sbb
push
mov
int3
mov
or
or
xchg
jg
xchg
push
ins
call
xlat
pop
inc
(bad)
sbb
pop
cmp
shl
arpl
loop
sar
ins
fidivr
lods
lahf
dec
and
mov
and
(bad)
push
or
mov
repnz
out
movs
scas
and
xor
inc
xchg
ret
or
xor
xchg
and
mov
add
jl
test
fcmove
push
stc
dec
push
xchg
mov
add
retf
mov
stos
jge
mov
fcomp
mov
pusha
out
movs
icebp
xor
push
lds
pushf
cmps
sub
add
mov
push
imul
xchg
push
bound
jbe
and
in
bound
dec
(bad)
cs
cwde
addr16
adc
pushf
or
loop
aas
pop
fiadd
shr
ins
arpl
ins
and
outs
push
add
jg
aaa
mov
mov
mov
adc
pop
arpl
imul
pextrw
gs
pop
pop
mov
adc
pop
jmp
add
xor
xor
lods
lods
das
in
ds
mov
cs
ret
cmp
enter
jle
mov
push
mov
mov
ret
mov
mov
and
jno
mov
sub
sub
enter
aam
sti
mov
sub
inc
inc
shl
ret
add
jo
(bad)
and
sub
fist
in
xchg
(bad)
in
retf
sub
mov
jle
into
sahf
sahf
jns
mov
mov
dec
xrelease
repz
gs
and
jp
mov
xchg
loopne
pop
and
sbb
push
scas
in
aad
je
fwait
cmp
cmp
nop
movs
shr
hlt
cmps
scas
mov
or
add
fild
cmp
sbb
adc
pop
dec
(bad)
mov
arpl
rep
mov
sub
add
scas
adc
cmp
dec
add
jnp
jno
xlat
pushf
pop
xchg
popf
aas
cld
push
stos
stos
inc
fbstp
adc
test
jne
mov
popa
jb
xor
jmp
mov
dec
cli
std
dec
cmp
imul
cmp
addr16
or
sub
inc
(bad)
mov
mov
les
mov
push
outs
sbb
hlt
pop
jae
jecxz
call
mov
push
dec
inc
mov
repnz
ins
mov
test
(bad)
stc
out
jg
stc
out
jg
pop
add
inc
pop
adc
arpl
add
add
dec
inc
scas
inc
pusha
or
add
add
add
(bad)
(bad)
inc
add
add
add
add
add
add
jns
je
ins
cs
jb
ja
outs
addr16
push
gs
imul
xor
xor
inc
jne
je
jb
cmp
jb
ins
sub
push
jne
ins
imul
imul
bound
xor
data16
xor
fs
add
adc
gs
cs
jb
ja
outs
addr16
imul
add
popa
je
pop
add
add
add
add
add
lsl
add
mov
mov
inc
or
add
or
add
add
add
add
or
add
add
pusha
outs
rol
add
add
inc
dec
inc
add
mov
or
popa
add
jo
pop
jae
add
ret
add
push
ret
add
outs
test
add
adc
inc
inc
push
pop
inc
in
rol
loopne
out
mov
mov
aaa
int
push
ret
mul
je
aaa
fwait
cmp
out
out
push
sar
mov
push
add
popf
mov
cmc
jnp
mov
and
push
xor
xchg
cmps
cmp
leave
ds
pop
push
out
add
push
(bad)
xlat
and
push
push
sub
cmp
(bad)
cld
(bad)
scas
cmp
jg
sahf
(bad)
xor
shl
jle
std
imul
mov
leave
push
mov
cmp
lock
dec
shl
jle
push
mov
fidiv
mov
sbb
outs
fwait
cmp
(bad)
js
add
cmp
(bad)
pop
mov
ror
push
push
xor
pop
ror
mov
mov
mov
dec
and
add
xor
scas
sti
je
xlat
or
clc
push
call
into
sub
sahf
xchg
(bad)
call
jno
lahf
adc
push
sub
mov
mov
inc
in
cmp
and
cld
or
icebp
stos
jnp
dec
movs
pusha
xor
pop
repz
jecxz
add
mov
and
mov
pop
sar
ret
scas
mov
mov
or
jecxz
aad
lods
cmp
sub
pop
pop
jl
test
mov
pop
xchg
xchg
pop
pop
aaa
sbb
call
ret
retf
jo
movs
cmc
sbb
pop
sub
mul
bound
sbb
cld
pop
out
mov
in
cmps
into
fst
inc
cmp
retf
xchg
int
js
fs
cmp
popf
xchg
mov
sbb
push
inc
jo
push
xlat
ror
or
cvtps2pd
lds
adc
pop
scas
(bad)
pop
call
aas
test
jb
dec
dec
hlt
or
and
fnsave
jnp
sbb
jb
call
mov
sar
das
into
std
xchg
out
mov
and
or
ins
mov
cmp
xlat
(bad)
push
jl
xlat
mov
int
inc
mov
pop
dec
or
adc
movs
shl
add
cmp
cmp
je
fsubr
ror
push
mov
imul
clc
in
adc
push
or
sbb
iret
cli
and
hlt
xchg
fsub
inc
lock
inc
fstp
dec
(bad)
fmul
xor
cmp
call
retf
jge
sbb
sbb
mov
(bad)
sar
push
ret
nop
sbb
(bad)
mov
loop
(bad)
sub
jge
jl
xlat
jb
daa
add
test
cmps
jecxz
sub
loopne
addr16
ins
cmps
cli
dec
repz
in
test
mov
or
inc
mov
push
jg
and
dec
xchg
jl
push
dec
and
(bad)
push
dec
inc
fsubr
(bad)
mov
shl
in
xor
sub
mov
or
and
aad
add
test
int
pop
push
je
xchg
mov
fnsetpm(287
push
scas
jb
outs
mov
xor
test
out
cmp
mov
fdivr
ss
std
mov
push
push
push
mov
and
mov
sbb
inc
(bad)
sbb
std
hlt
daa
mov
out
cmps
mov
sub
pop
or
xor
jl
hlt
push
data16
int3
push
inc
jnp
or
sbb
bound
addr16
cld
push
ror
mov
shl
sbb
les
stos
xchg
add
imul
shl
sub
(bad)
out
fidiv
out
sbb
inc
push
mov
scas
pop
inc
mov
mov
out
cmp
sub
push
in
xchg
lock
in
push
movs
aaa
(bad)
mov
dec
fwait
ret
shl
daa
sbb
or
adc
push
cmps
nop
leave
dec
sub
adc
sub
stos
(bad)
pop
lds
fld
xchg
in
mov
sti
dec
sbb
or
jnp
push
dec
ss
inc
jbe
and
dec
ret
add
cmp
out
cwde
sbb
adc
bound
sub
or
fild
retf
pop
mov
dec
push
retf
xchg
out
fcmovnb
mov
(bad)
jmp
out
repnz
and
aaa
push
shl
pop
mov
jns
add
cld
jge
scas
mov
sbb
jg
outs
pop
sbb
xchg
inc
or
ja
fnstsw
mov
jecxz
stos
pop
pop
lods
aaa
cld
mov
test
fwait
movs
mov
jne
jmp
jecxz
dec
ss
sub
cdq
into
pop
fsubr
add
and
jmp
xchg
rol
rol
sti
mov
das
mov
sbb
jmp
mov
je
jg
jne
js
ret
enter
mov
sbb
push
test
addr16
inc
lea
cmp
sbb
push
push
(bad)
cmp
pop
push
dec
sub
cmp
add
push
cmps
int3
cli
jnp
nop
mov
dec
xor
jnp
call
push
int
es
enter
sub
fisttp
push
ficomp
add
jg
fsub
cs
movs
out
add
shl
push
data16
pop
adc
mov
(bad)
popa
ins
dec
dec
ja
push
and
mov
mov
xchg
push
push
jbe
push
cli
and
cmps
cdq
mov
ret
or
sbb
lock
test
loopne
into
ss
jmp
push
jmp
outs
call
pop
cmp
add
lea
fucom
mov
fst
scas
repz
fwait
daa
jno
sahf
pop
sub
fmul
mov
dec
dec
inc
add
cmp
jo
dec
sbb
lds
lea
sbb
loopne
adc
jg
adc
or
movs
pop
rcr
dec
xor
das
jne
jae
bound
mov
sub
and
jecxz
into
xlat
retf
mov
imul
dec
imul
neg
std
push
rcr
sub
(bad)
not
pop
enter
dec
ret
(bad)
sti
(bad)
cmc
movs
cld
test
fldenv
push
xor
arpl
jge
xchg
adc
in
jnp
mov
cmps
mov
out
stos
adc
mov
(bad)
sbb
in
sub
nop
sbb
fld
and
sar
dec
mov
popa
ds
pop
or
add
scas
push
jb
adc
test
clc
dec
adc
test
push
push
int3
add
ins
dec
(bad)
stos
push
pop
outs
js
loope
mov
out
cwde
leave
test
and
ret
sub
cmp
cmp
xchg
push
ror
and
push
cmp
adc
dec
cmp
adc
fiadd
leave
retf
imul
mov
leave
in
sub
scas
dec
mov
scas
les
call
push
es
in
mov
and
std
ret
cwde
jge
loope
jnp
repz
mov
stos
aad
hlt
ret
adc
dec
xor
jmp
fld
test
push
or
or
push
aam
mov
or
fbstp
cld
(bad)
mov
jmp
mov
popf
and
push
inc
cmc
rcl
pop
in
lods
dec
jl
mov
fwait
lods
scas
ss
test
pop
mov
mov
mov
sahf
mov
inc
out
gs
pop
cmp
out
cmc
inc
std
mov
xbegin
inc
shl
sbb
xor
pop
ffreep
push
fistp
push
adc
(bad)
ja
pop
aad
lea
pop
sbb
push
sbb
lds
int
std
push
fisub
or
add
xlat
iret
jmp
addr16
call
xchg
inc
sub
(bad)
cmpxchg
inc
in
dec
cs
jae
jmp
push
dec
push
stc
mov
pop
mov
inc
xor
pop
xor
jp
inc
pop
sahf
inc
js
xor
cmp
loope
mov
xchg
icebp
inc
in
pop
dec
xchg
cmc
sbb
cmp
ja
pushf
jmp
mov
imul
xchg
mov
inc
jne
mov
xchg
lods
inc
test
pushf
stc
pop
add
repz
mov
(bad)
sar
xchg
push
shl
push
add
jmp
dec
sbb
in
adc
push
jmp
cmc
(bad)
cmp
jne
sub
test
xchg
sbb
fcomp
loope
xchg
xlat
cmp
sar
popf
add
fsub
push
call
jge
popa
js
inc
mov
mov
call
mov
retf
inc
je
mov
sub
popa
jne
mov
sub
inc
mov
div
adc
ja
in
jecxz
inc
mov
out
cmp
call
push
lea
push
push
dec
lock
in
pop
movs
cmps
call
adc
dec
test
les
pop
pop
popa
and
ret
in
xor
dec
sbb
inc
xchg
outs
dec
test
xchg
mov
out
push
inc
adc
inc
xchg
pop
int3
xchg
les
arpl
dec
out
lods
jmp
jae
lods
or
inc
dec
or
outs
xchg
add
jae
mov
mov
jne
fnstsw
lahf
xor
push
fdivr
and
jb
jmp
test
lock
movs
and
inc
addr16
inc
repnz
push
outs
cdq
mov
mov
shl
jmp
xor
push
mov
sbb
adc
popa
push
scas
arpl
mov
cdq
add
jge
shl
outs
bound
jno
inc
shr
add
(bad)
and
not
pop
xchg
mov
or
lds
imul
data16
push
cmp
out
inc
sbb
jo
(bad)
(bad)
ja
jnp
cmp
int
fisttp
dec
pop
jb
jmp
dec
add
cmps
(bad)
lds
or
iret
sbb
int
test
test
(bad)
test
(bad)
lahf
dec
test
pop
(bad)
arpl
repnz
pop
cmp
scas
sbb
loope
pusha
loop
inc
fdiv
adc
jle
mov
shl
push
and
movs
(bad)
sub
sar
adc
loop
xchg
jmp
jns
jg
cmp
mov
lods
cli
dec
test
and
stos
(bad)
adc
fdivrp
sbb
cdq
addr16
and
mov
mov
cs
jb
push
mov
icebp
pushf
cmp
push
mov
aas
jge
aaa
dec
aaa
int3
or
hlt
jb
cmp
out
or
adc
xchg
jno
add
loopne
push
adc
imul
fisttp
cmp
or
stc
fiadd
push
stos
leave
push
iret
cmp
lods
pushf
sub
lods
into
sbb
enter
mov
inc
test
push
jb
xchg
inc
adc
fld
int3
ss
xor
xor
aaa
mov
or
sbb
movs
inc
ret
mov
mov
sub
and
dec
jge
ss
ins
les
jp
(bad)
ffreep
jmp
(bad)
push
sub
jno
fs
data16
sub
add
call
pop
(bad)
loopne
adc
and
push
sbb
shl
xchg
arpl
xchg
scas
aad
jge
ss
(bad)
and
mov
cmp
in
or
xchg
and
adc
pop
int
and
in
ds
(bad)
mul
or
adc
ds
push
mov
mov
loop
pop
shr
add
repz
retf
nop
nop
and
iret
outs
xchg
dec
in
pop
add
test
mov
xor
xor
xchg
push
cli
das
std
pop
leave
lahf
scas
imul
into
out
shr
in
ret
xor
pop
or
xchg
leave
mov
iret
jbe
or
push
sub
and
xchg
mov
outs
xor
mov
jle
xchg
daa
inc
push
leave
es
movs
mov
dec
or
pop
fsubr
rcr
aas
or
dec
ja
cmp
loopne
mov
mov
xrelease
sti
cmps
mov
fwait
dec
xlat
sbb
fisubr
mov
ja
mov
xchg
cmc
fdivr
mov
jl
dec
(bad)
dec
pop
dec
aad
(bad)
ficomp
sub
aaa
jmp
test
enter
xchg
aad
retf
cwde
pop
daa
push
cs
sti
sbb
int3
clc
cmp
inc
aas
fwait
jb
dec
lock
int3
les
sti
cmc
xlat
int
lock
mov
shr
inc
mov
(bad)
sub
leave
scas
retf
inc
xchg
aas
cmp
je
xchg
test
push
fild
mov
mov
cmps
loope
shr
dec
test
cmp
mov
jp
mov
sbb
add
pop
outs
jbe
cmps
mov
mov
(bad)
popa
jecxz
add
xor
(bad)
in
punpckhbw
pusha
ds
jne
mov
popw
call
or
sbb
ret
scas
pop
jne
gs
arpl
cmp
stc
int3
stos
(bad)
shl
faddp
mov
mov
mov
stos
shr
mov
fsubr
push
idiv
jns
mov
sbb
jnp
inc
lods
nop
ret
leave
push
pop
pop
jmp
iret
mov
pusha
jmp
pop
mov
mov
adc
jle
pop
lahf
jae
xchg
push
pop
xchg
call
mov
xchg
test
adc
and
out
std
mov
je
cdq
mov
adc
mov
pop
xor
pop
stos
or
sub
daa
test
mov
dec
and
jnp
fsub
(bad)
dec
pushf
sbb
mov
and
rcl
xchg
mul
pop
adc
xor
mov
in
jb
sbb
xchg
push
icebp
sahf
in
sbb
pop
xchg
xchg
test
or
jge
movs
sub
ins
xor
das
pop
push
rol
scas
imul
mov
movs
sbb
jbe
adc
add
inc
or
pop
arpl
std
adc
pop
fld
shr
call
pop
pushf
pop
test
mov
les
lock
jecxz
push
pop
repz
pop
imul
loop
fbstp
push
loopne
cmp
loop
lahf
iret
arpl
(bad)
jg
add
sbb
lahf
pop
sub
mov
xor
retf
(bad)
lods
cli
push
mov
loop
in
jnp
in
xchg
xor
xchg
cmp
jmp
xchg
or
mov
inc
mov
call
(bad)
fstp
addr16
xor
and
adc
pop
popa
out
fidivr
add
dec
sbb
sub
test
stc
sbb
sbb
push
dec
shr
mov
xor
pop
cs
mov
into
iret
(bad)
je
loope
adc
cli
neg
sbb
call
mov
aam
mov
and
daa
loop
adc
add
pop
lods
mov
dec
xor
arpl
arpl
rol
repnz
in
dec
outs
shl
(bad)
jecxz
sbb
test
popf
and
jge
mov
retf
push
jno
div
mov
cli
daa
neg
pop
movs
addr16
xchg
inc
cmps
mov
into
jo
mov
ror
ja
inc
inc
cld
sbb
add
or
adc
sbb
pusha
or
or
inc
pop
jnp
in
and
mov
mov
ret
and
or
retf
jo
scas
push
xor
(bad)
retf
xor
fcmovu
mov
add
mov
test
dec
ret
mov
mov
pop
ret
pop
xchg
outs
mov
mov
or
or
push
xchg
je
push
pop
outs
fwait
dec
adc
(bad)
out
or
and
test
int
int3
cs
iret
mov
mov
xchg
xchg
inc
pop
and
xchg
push
mov
adc
iret
aas
(bad)
cld
repz
aas
(bad)
cld
repz
add
pop
jno
cli
mov
add
add
dec
inc
dec
inc
scas
inc
pusha
or
add
add
add
(bad)
(bad)
inc
add
add
add
add
add
add
jns
je
ins
cs
jb
ja
outs
addr16
push
gs
imul
xor
xor
inc
jne
je
jb
cmp
jb
ins
sub
push
jne
ins
imul
imul
bound
xor
data16
xor
fs
add
adc
gs
cs
jb
ja
outs
addr16
imul
add
popa
je
pop
add
add
add
add
add
lsl
add
rcl
add
mov
inc
or
add
or
add
add
add
add
or
add
add
pusha
outs
rol
add
add
inc
dec
inc
add
mov
or
popa
add
jo
pop
jae
add
ret
add
push
ret
add
outs
test
add
adc
inc
inc
push
pop
inc
in
rol
add
scas
outs
data16
out
cwde
sbb
xor
mov
dec
pushf
scas
ret
or
hlt
mov
repz
mov
into
mov
add
adc
mov
pop
xor
jle
inc
ss
inc
jno
stc
int
dec
imul
mov
sti
cs
jbe
pop
push
mov
aaa
cmp
int
or
or
lea
das
sub
adc
aas
cld
sar
sub
inc
and
cmps
sar
jp
iret
in
sub
push
lods
push
loope
and
cmp
xor
lods
stc
sbb
sub
test
cmc
push
sub
push
in
inc
in
or
or
inc
je
fidiv
push
dec
adc
out
cwde
adc
xor
dec
mov
dec
cmp
(bad)
mov
and
pushf
scas
jo
popf
pop
xchg
pusha
sbb
jae
inc
adc
test
sbb
dec
or
cmps
popa
pop
sbb
enter
aad
hlt
outs
stos
js
loope
add
aam
inc
mov
mov
ss
call
test
push
adc
xor
jbe
ficom
xor
or
mov
inc
or
out
fmul
mov
ret
mov
jbe
aaa
push
in
jp
in
in
ins
xor
inc
cmp
out
in
xchg
dec
adc
cmps
or
xor
(bad)
test
loopne
dec
mov
mov
sub
mov
outs
adc
pop
jmp
jg
cmps
icebp
retf
fsub
sbb
mov
push
jns
ja
pushf
and
(bad)
jmp
ins
hlt
dec
inc
or
or
js
mov
xchg
pop
rcr
bound
jmp
mov
lea
cdq
xor
cmp
sub
cmps
test
cli
mov
ret
inc
popa
dec
and
int
ret
sar
in
aas
jecxz
and
cmps
je
icebp
inc
jns
jl
mov
sbb
lahf
call
pop
int
jmp
int3
cli
xor
and
stos
ret
xlat
sub
(bad)
iret
or
sbb
repnz
mov
rol
into
mov
fld
fdivr
lds
dec
and
adc
dec
or
pop
and
in
lahf
mov
xlat
add
in
outs
in
dec
movs
mov
xchg
xor
jmp
icebp
cmp
cdq
loop
sbb
push
jmp
jno
xchg
fnstcw
jle
jge
je
pushf
(bad)
jmp
addr16
shr
xor
push
ins
je
inc
(bad)
sar
iret
pop
(bad)
icebp
pop
test
add
inc
mov
std
vminss
jmp
retf
ficom
rcl
add
push
and
jne
int
push
dec
cmp
pop
xchg
cmp
mov
fwait
adc
stc
dec
clc
popa
dec
(bad)
outs
movs
push
jns
jbe
xchg
push
mov
dec
push
pop
out
sub
retf
(bad)
jno
inc
fiadd
repz
mov
mov
hlt
xor
mov
cld
fchs
xlat
enter
inc
ret
loope
ds
xchg
cwde
push
sub
iret
add
sahf
cmp
xchg
(bad)
lea
cmp
cmp
xchg
add
cmp
daa
ds
mov
sub
jl
ins
int
outs
addr16
fs
and
gs
push
xchg
into
ret
mov
pusha
sbb
jecxz
aas
cmp
cld
pop
scas
fadd
enter
ret
cs
imul
ss
adc
add
cld
jae
push
pop
ss
jo
fsub
shl
fcom
jno
pop
(bad)
mov
adc
mov
outs
fwait
or
and
bound
xor
sub
int3
test
xchg
(bad)
adc
(bad)
fld
in
das
xor
push
dec
pop
aaa
push
es
xor
(bad)
and
dec
or
iret
loopne
sub
xor
lods
mov
push
inc
jmp
imul
js
mul
out
mov
mov
test
sbb
jmp
mov
mov
fwait
(bad)
js
push
out
addr16
jns
push
pop
and
adc
mov
push
mov
cmp
add
aad
xlat
pop
sbb
adc
popf
or
mov
or
push
movs
pop
pop
cmp
mov
mov
mov
movs
and
and
into
jmp
and
xor
test
pop
cmp
push
cmp
adc
(bad)
jg
sub
push
call
xlat
fidiv
movs
test
sbb
dec
push
mov
or
mov
or
mov
fcom
xor
or
(bad)
push
sahf
adc
sbb
dec
ja
inc
or
xchg
leave
std
jb
div
aas
sub
stc
stc
iret
or
adc
stos
aam
(bad)
aas
mov
adc
add
cmp
imul
xor
lea
fsincos
lods
push
inc
ret
aas
lds
lods
jb
jae
sub
fst
in
cmps
(bad)
jmp
lea
xor
dec
mov
sbb
sbb
not
sbb
out
and
xor
add
add
adc
(bad)
loope
ja
mov
dec
icebp
jge
sbb
aas
lods
adc
popf
fsub
mov
es
in
cmp
add
cmp
mov
mov
xchg
ret
pop
pavgw
outs
das
pop
mov
push
mov
jl
jnp
inc
jmp
xor
scas
mov
dec
cmc
adc
pop
mov
clc
cmps
movs
mov
rol
and
vpmacssww
test
xchg
and
call
mov
inc
not
test
in
adc
aas
cmp
fcom
in
and
call
mov
mov
std
pop
jmp
and
dec
mov
nop
jo
out
jmp
ficom
xor
inc
and
cmps
or
ror
je
push
adc
cmp
xchg
adc
pop
xchg
pop
(bad)
fild
inc
retf
rcr
push
out
cmps
cmp
jo
pusha
mov
out
or
icebp
sar
stc
and
mov
daa
mov
jl
xor
pop
in
sbb
adc
lods
loopne
push
cmp
xchg
add
sbb
inc
stos
cmp
mov
aas
std
mov
jp
xchg
jnp
pop
cmp
sbb
dec
inc
cmp
mov
ret
aas
inc
sbb
mov
sbb
jne
ret
mov
fndisi(8087
es
jecxz
leave
add
dec
fimul
or
frstor
in
aad
pop
ret
xchg
fprem1
push
ret
iret
xchg
xchg
dec
dec
(bad)
shr
or
adc
xchg
pop
shr
pand
mov
lahf
adc
xchg
outs
push
lea
movs
cli
jl
fstp
push
inc
fsub
aaa
mov
popf
push
std
pop
inc
xchg
cwde
fidiv
inc
or
pop
ret
push
lods
test
mov
mov
ja
xor
adc
inc
mov
fsub
push
adc
and
or
inc
mov
call
mov
retf
sbb
mov
push
ret
jecxz
jp
push
mov
push
xlat
je
push
xor
dec
dec
aaa
cwde
dec
jmp
push
iret
mov
jp
(bad)
pop
add
or
cld
ins
pop
imul
in
dec
popa
cdq
sbb
aad
ins
scas
cli
xchg
and
sahf
cmp
jg
daa
in
daa
outs
(bad)
cdq
rcr
mov
(bad)
(bad)
mov
lods
push
retf
inc
xlat
(bad)
jecxz
(bad)
ficom
shl
imul
cmp
fisubr
adc
mov
stos
xchg
inc
mov
xor
into
lea
mov
dec
jae
push
mov
dec
or
dec
lahf
call
fadd
popa
retf
dec
pop
gs
out
dec
fdiv
adc
add
adc
scas
sbb
loope
enter
dec
js
xlat
sbb
fst
xchg
mov
mov
in
xor
out
jge
mov
pushf
inc
sbb
sbb
je
jl
and
ret
sbb
rcl
in
imul
pop
pop
lahf
ret
and
test
(bad)
cli
sbb
sbb
fs
rcr
mov
sub
cli
add
sbb
or
push
pop
xor
add
arpl
cmc
dec
xchg
dec
pop
xchg
pop
jae
lock
in
lods
mov
pop
enter
int
test
sub
sub
pop
pop
mul
and
mov
repnz
dec
stos
add
jb
or
add
hlt
int
adc
cmp
retf
outs
adc
mov
cmp
std
mov
push
shl
and
ins
mov
jle
xor
jae
and
xchg
adc
adc
mov
xchg
pop
pop
jns
call
test
sub
mov
hlt
shl
add
scas
and
movs
arpl
mov
std
shl
scas
das
hlt
xor
or
iret
jecxz
cmc
lea
cmp
mov
mov
pop
outs
das
add
sbb
pop
mov
ss
std
mov
in
jmp
(bad)
jno
retf
add
(bad)
addr16
sar
push
mov
cmp
xor
mov
sahf
popf
mov
popa
(bad)
or
xor
outs
xchg
pushf
test
mov
jo
adc
jnp
dec
shr
out
cmc
(bad)
jle
frstor
(bad)
mov
fsub
fs
ins
and
mov
cdq
dec
jns
xor
clc
cmp
or
jnp
sbb
(bad)
and
xor
sahf
popf
xchg
pop
lea
in
dec
or
repnz
cmp
rol
adc
sbb
es
loopne
cmp
pop
push
shl
shr
add
sub
or
sbb
mov
jb
outs
or
push
outs
imul
sub
xchg
jmp
sti
sbb
and
jo
push
jmp
push
jmp
popa
push
cld
inc
mov
enter
test
scas
dec
out
loope
sub
jo
push
cmp
cdq
sbb
xlat
aam
mov
(bad)
or
rcl
lods
retf
push
test
int3
cs
dec
aas
sub
lock
out
lock
add
xchg
xor
cld
hlt
out
push
xchg
sbb
sub
repz
sbb
out
xchg
jge
jge
gs
and
(bad)
mov
and
push
xor
cmp
sar
pop
into
lods
inc
jno
out
iret
fisttp
add
vcvtsi2ss
ins
call
xor
outs
jle
jmp
mov
add
add
cmp
dec
add
sub
and
sbb
or
sbb
ret
(bad)
push
mov
fwait
jo
jmp
sbb
jl
xor
xchg
loopne
cs
inc
xor
sub
inc
je
pop
add
(bad)
pop
shr
inc
add
mov
dec
pop
push
and
sub
cmp
pop
sahf
mov
sar
inc
mov
inc
fnstenv
mov
fwait
(bad)
rol
xchg
xor
mov
(bad)
out
push
dec
jb
sti
in
push
movs
pop
mov
out
rol
xor
imul
pop
push
mov
leave
mov
mov
pusha
movs
jns
adc
aaa
push
stos
movs
mov
jmp
bnd
lods
jmp
xchg
fcmovbe
(bad)
fidivr
push
in
xadd
mov
mov
sahf
push
lods
mov
cmp
or
or
pushf
out
mov
mov
jae
sub
bound
repz
xchg
fstp
and
pop
cmc
call
adc
sub
sbb
sti
int
data16
es
div
(bad)
call
cs
cmps
test
sbb
mov
and
jg
cmc
std
jmp
les
lods
cmp
xor
movs
daa
ss
and
add
fist
div
sbb
jb
jmp
cld
mov
fnstsw
jg
clc
jnp
push
in
push
sub
xchg
lea
inc
mov
aas
xor
ja
or
and
pop
sbb
aad
push
cdq
xchg
popf
add
sbb
inc
xchg
call
iret
pop
cli
xchg
fcmovbe
or
pop
mov
ins
outs
xchg
cmc
ror
bnd
push
sbb
nop
jo
cdq
xchg
cmp
add
pop
int
push
mov
and
(bad)
jmp
shr
pop
popa
jp
xchg
jmp
mov
daa
out
aaa
mov
cmps
cmp
jae
push
lods
push
shr
repnz
lods
scas
fld
xchg
cdq
lods
sub
hlt
jo
js
xor
mov
fdiv
mov
xchg
mov
mov
(bad)
push
(bad)
mov
lds
adc
in
push
(bad)
lahf
shr
push
xor
fcomp
pop
ffreep
fistp
mov
scas
push
add
fsub
nop
push
jmp
bound
mov
mov
clc
xchg
inc
sar
sti
es
pop
mov
push
in
lahf
sub
cmp
lock
jge
in
pop
imul
mov
imul
repz
mov
rcr
rcl
xchg
stc
mov
cmps
xchg
retf
lods
mov
cmc
mov
and
inc
push
and
stos
(bad)
fnstenv
arpl
or
jl
(bad)
sbb
and
shr
jae
xor
push
lock
add
push
test
hlt
das
fbstp
add
xor
cmp
sahf
mov
jp
icebp
mov
pop
mov
mov
(bad)
xor
std
push
xchg
push
xchg
je
dec
out
jg
push
addr16
(bad)
mov
fisub
xor
dec
mov
fwait
mov
dec
stos
inc
data16
mul
gs
test
add
out
scas
shr
push
mov
jmp
pop
cdq
mov
add
fcomp
mov
aam
dec
clc
mov
sub
jne
mov
nop
adc
push
sub
and
mov
dec
loope
cli
xchg
xor
nop
xor
lods
mov
mov
arpl
fnstcw
push
rol
(bad)
pop
gs
loopne
cmc
mov
xor
xchg
and
aam
add
rol
div
stos
jb
jg
jns
sbb
xchg
jbe
cmp
inc
jmp
sar
mov
nop
add
fisub
retf
lods
and
pop
xchg
mov
das
inc
xchg
cmp
xor
push
xchg
scas
mov
pushf
cld
fwait
and
add
sub
retf
sub
aaa
jge
cmp
movs
neg
aas
cmc
fsincos
sbb
in
mov
cmp
push
sbb
xor
stc
push
mov
xor
cs
(bad)
in
xchg
push
fimul
add
inc
pop
pop
out
shl
lahf
fisubr
test
jecxz
das
add
enter
ror
xor
es
jge
ds
scas
(bad)
lock
xor
fwait
into
sahf
mov
add
test
xchg
cmp
call
nop
das
popf
(bad)
jmp
xor
sbb
mov
mov
aaa
mov
and
pushf
adc
clc
lock
imul
or
icebp
xor
mov
call
dec
sub
adc
mov
aam
xchg
sbb
adc
test
xlat
ins
dec
enter
jmp
mov
jmp
sti
pop
mov
js
push
xchg
test
and
jl
sub
jne
test
rcr
pop
push
loop
or
sbb
aaa
outs
stc
mov
inc
js
lods
imul
sub
sbb
pop
(bad)
dec
pop
out
out
cmp
cdq
xchg
pop
retf
iret
push
fs
lahf
jmp
jnp
lds
cmp
stc
iret
jg
repz
call
add
jg
data16
sub
mov
add
add
dec
inc
dec
inc
scas
inc
pusha
or
add
add
add
(bad)
(bad)
inc
add
add
add
add
add
add
jns
je
ins
cs
jb
ja
outs
addr16
push
gs
imul
xor
xor
inc
jne
je
jb
cmp
jb
ins
sub
push
jne
ins
imul
imul
bound
xor
data16
xor
fs
add
adc
gs
cs
jb
ja
outs
addr16
imul
add
popa
je
pop
add
add
add
add
add
lsl
add
mov
mov
inc
or
add
or
add
add
add
add
or
add
add
pusha
outs
rol
add
add
inc
dec
inc
add
mov
or
popa
add
jo
pop
jae
add
ret
add
push
ret
add
outs
test
add
adc
inc
inc
push
pop
inc
in
rol
loopne
fnstsw
(bad)
jmp
leave
shl
sbb
mov
fnsave
cmp
cmps
pop
int
dec
dec
ja
(bad)
test
xor
cmps
fisubr
xchg
(bad)
leave
xchg
xor
inc
inc
push
mov
pop
cmp
orps
mov
aaa
loopne
(bad)
int3
in
pop
in
pop
dec
rcl
cmp
leave
call
jnp
enter
sbb
sar
pop
xor
in
aam
stos
jbe
xchg
cli
pushf
xor
or
mov
repz
mov
xchg
xor
push
pop
dec
arpl
add
mov
add
and
outs
outs
push
xchg
into
(bad)
add
jmp
cmp
add
push
jno
cmp
data16
push
fucomi
mov
inc
mov
arpl
adc
dec
nop
repz
sbb
fsubr
and
push
xlat
gs
and
mov
mov
pop
inc
scas
xchg
clc
pop
sbb
add
mov
adc
in
and
cmp
imul
lahf
out
pop
ss
scas
xor
cmp
hlt
lahf
and
ja
pop
sbb
and
fwait
or
popa
shl
cmp
jae
xchg
enter
enter
addr16
sbb
dec
xchg
xchg
loope
inc
inc
test
add
iret
cwde
mov
nop
loope
inc
mov
pop
sbb
out
cmc
cdq
arpl
cmp
jmp
cmp
fsub
fs
in
fild
xchg
add
ror
adc
push
bound
ds
and
cmc
clc
add
xchg
adc
adc
aam
pop
data16
mov
add
mov
jae
mov
sbb
test
aas
inc
nop
lahf
lea
int
dec
ins
in
jle
movs
popa
mov
sbb
xor
scas
hlt
push
pop
cmp
(bad)
imul
rcl
sti
aam
or
aaa
mov
daa
ins
ins
xor
adc
or
adc
call
pop
push
ins
sub
mov
xchg
retf
fnsave
scas
stos
imul
ss
mov
push
xchg
cmp
inc
(bad)
mov
js
adc
jle
out
push
fdiv
test
jecxz
or
(bad)
lock
push
ja
out
jecxz
and
mov
cmc
push
jb
mov
mov
sub
mov
pop
push
or
xchg
push
cmc
jp
jecxz
or
mov
test
jns
test
jmp
nop
push
fs
or
es
jns
xor
pop
pop
sub
pop
cmp
test
inc
jmp
gs
mov
add
aad
fsub
push
jge
xchg
adc
jb
aaa
add
cmp
inc
mov
outs
pusha
sbb
fs
sbb
jo
lods
jae
xor
loop
fbld
out
inc
call
test
adc
sub
xor
out
scas
in
mov
in
nop
xor
push
das
xor
je
pop
and
arpl
mov
shl
or
imul
vmread
mov
sub
lahf
mov
pop
mov
push
jbe
fstp
cmc
outs
popf
es
xchg
out
adc
cmps
outs
outs
test
mov
(bad)
fstp
hlt
jge
enter
jns
loop
out
and
ret
push
ins
clc
adc
lds
or
sbb
xchg
ja
cmp
cmp
pop
xchg
fnstsw
js
pop
lds
pop
jne
retf
jge
pop
mov
(bad)
fisub
ficomp
imul
loop
not
popa
ja
shr
inc
push
pop
cmps
ret
addr16
sub
xor
push
js
aad
jns
xchg
dec
pop
loope
out
movs
push
push
dec
push
jp
js
mov
or
das
cmp
inc
pop
ins
mov
pop
cld
adc
cmp
adc
std
movs
cli
push
push
or
ins
hlt
aam
xlat
cmp
mov
fnstsw
(bad)
cdq
gs
ret
pop
mov
pop
xchg
pop
jae
scas
jo
adc
mov
icebp
mov
fmul
(bad)
xor
pop
add
cmps
add
push
in
mov
push
sub
cmp
or
ja
dec
outs
inc
add
ret
jmp
dec
cs
mov
mov
xchg
stc
push
nop
lahf
int
(bad)
ss
shl
scas
inc
iret
in
pop
shl
mov
xor
mov
lock
scas
jb
(bad)
movs
ret
pop
push
dec
or
(bad)
jmp
xchg
outs
sub
aas
sar
adc
mov
mov
mov
pop
xchg
mov
(bad)
xchg
inc
movs
inc
loope
nop
ror
cmp
or
into
and
inc
mov
or
and
nop
jno
xor
add
xor
pop
dec
pop
fwait
jmp
je
repnz
scas
lds
in
loopne
mov
jb
int3
sub
and
icebp
add
and
lods
pop
leave
inc
mov
std
mov
inc
cmc
jno
or
xor
imul
(bad)
loop
cld
dec
lahf
sahf
pop
stos
xor
lahf
pop
xor
dec
add
inc
leave
push
pop
pop
jno
jle
sbb
push
xor
push
jmp
arpl
mov
and
mov
int3
movs
xor
pop
pop
test
jle
out
and
(bad)
movs
(bad)
xor
loope
push
retf
idiv
lock
test
push
jge
ins
imul
in
inc
mov
xchg
dec
fcom
jmp
fisubr
push
(bad)
sbb
pop
sub
popf
mov
mov
popa
fnstsw
cmp
xor
popa
mov
cmc
jmp
je
adc
jp
inc
cmps
mov
jl
cmp
retf
(bad)
out
add
inc
mov
pop
popf
fiadd
aas
jg
outs
sbb
shr
and
cs
inc
call
sbb
int
(bad)
fnstcw
or
test
ss
jnp
inc
mov
cmps
sub
dec
ins
xor
aaa
inc
mov
jae
std
pop
mov
inc
push
mov
iret
lods
movs
cmp
out
scas
aaa
adc
iret
push
and
pop
js
call
dec
mov
mov
mov
cdq
xchg
out
push
mov
ficom
rcr
ror
mov
lock
popf
or
mov
adc
cdq
ds
jge
fiadd
ins
sar
adc
cwde
mov
sub
xchg
jmp
xchg
jge
ins
dec
ins
mov
add
mov
jge
xchg
aaa
dec
and
jmp
cmp
div
adc
cli
mov
dec
les
test
dec
jl
inc
push
test
out
stos
jo
mov
data16
repz
push
mov
inc
push
mov
dec
and
xor
jp
pop
mov
aad
rol
adc
add
loop
rcr
mov
dec
icebp
sbb
sub
push
pop
gs
mov
push
dec
addr16
std
xor
ins
xor
or
mov
retf
xchg
shl
mov
and
sbb
test
das
mov
or
sub
jmp
push
fsubr
ret
or
cli
jo
jbe
dec
loopne
xchg
xor
popf
(bad)
push
cmp
rcl
loope
cld
ret
addr16
sti
daa
jnp
push
ins
or
add
jp
cmp
or
ja
(bad)
es
cmps
(bad)
mov
mov
call
gs
popf
(bad)
imul
(bad)
call
lods
in
sbb
mov
inc
stos
mov
scas
std
push
aam
pop
rol
or
cmp
inc
loope
std
jecxz
xor
jb
fsubr
inc
mov
push
retf
jecxz
ins
dec
(bad)
fldcw
cli
(bad)
fidivr
jle
xchg
or
xchg
test
out
cdq
sbb
push
dec
je
mov
ss
rol
xor
xchg
das
push
adc
cmp
(bad)
ss
add
dec
bound
(bad)
std
cld
jno
fist
add
push
sub
xchg
push
sbb
es
in
sbb
pop
fiadd
shl
inc
inc
and
adc
out
or
ret
repnz
dec
xchg
xchg
and
pushf
inc
add
add
stos
push
add
jge
ror
dec
mov
das
mov
sub
or
jp
pop
jecxz
lahf
test
dec
movs
bound
xchg
jae
popf
jmp
xchg
mov
stos
cli
xor
cmp
xor
mov
xlat
xchg
stos
scas
mov
and
cmc
sub
sahf
xchg
stos
dec
mov
psraw
xchg
adc
je
mov
sahf
xchg
popf
and
mov
out
mov
outs
retf
loope
mov
jle
imul
cwde
movs
mov
jne
loope
dec
jnp
cli
dec
push
jbe
scas
pop
inc
fidivr
inc
inc
dec
dec
mov
jmp
in
and
stc
bound
mov
rol
inc
and
sbb
inc
cmp
xchg
sub
mov
push
mov
ror
ins
jp
ror
jns
jmp
mov
pop
add
ds
xor
bound
cli
lods
ja
jnp
call
mov
icebp
jae
mov
push
test
dec
add
stos
or
popf
mov
sub
popf
ds
imul
mov
push
xchg
and
xchg
rcl
jae
mov
adc
mov
jnp
popa
xor
jg
dec
mov
(bad)
fild
or
or
shl
shr
add
rcr
ins
call
sub
jg
popa
xor
mov
cmp
mov
loope
mov
es
or
int3
imul
pop
mov
add
pusha
pop
mov
xchg
adc
sub
arpl
cmp
sbb
pushf
pop
and
std
xor
cmp
(bad)
lea
rcl
jne
adc
ss
test
icebp
int
lods
fstp
dec
test
vsubsd
js
data16
mov
stos
stc
jg
mov
sbb
not
sbb
add
push
into
mov
out
add
sbb
sbb
imul
jp
pusha
dec
in
fucom
mov
or
mov
jle
sbb
sahf
jp
xchg
dec
push
dec
dec
outs
retf
(bad)
mov
jnp
pop
add
ins
cmp
add
pop
push
int3
fstp
aaa
inc
(bad)
jo
inc
pusha
popf
jmp
(bad)
xchg
jnp
bswap
sub
fcmovne
in
jmp
adc
dec
jecxz
call
sar
inc
mov
mov
dec
or
loopne
es
test
inc
gs
mov
cmps
xchg
mov
mov
or
inc
iret
mov
add
mov
stc
movs
and
mov
in
out
js
and
aas
dec
push
mov
inc
dec
adc
dec
sub
nop
shl
sbb
or
sub
movs
sar
(bad)
jb
mov
jle
leave
in
dec
adc
jp
jl
gs
pop
loope
or
mov
fsub
call
pop
xchg
jl
push
mov
enter
push
ficomp
lock
and
mov
cmp
mov
xchg
xchg
jl
retf
ficomp
jno
cmps
sub
mov
leave
lods
xchg
xor
mov
pop
cmp
out
(bad)
mov
lods
mov
push
frstor
mov
xchg
aas
fistp
sbb
mov
repz
scas
and
scas
or
xor
adc
call
ficomp
jp
add
fs
in
sbb
xchg
push
add
inc
jnp
and
dec
outs
xchg
(bad)
adc
mov
jecxz
mov
push
loopne
xor
or
outs
mov
sbb
or
add
fiadd
leave
cs
inc
fidivr
mov
cmp
repnz
popa
xor
cmps
lea
rcr
mov
lea
cmp
sub
sbb
xor
in
mov
sub
and
xor
or
add
daa
les
jns
pop
add
jnp
mov
fidiv
sahf
sbb
or
arpl
jne
pop
mov
out
gs
pop
mov
dec
sub
lds
hlt
iret
loope
outs
iret
lahf
push
cmp
jae
movs
je
dec
cdq
lods
(bad)
pop
sub
and
dec
enter
retf
mov
out
sub
cwde
xchg
sbb
adc
and
lock
leave
addr16
dec
inc
add
cmp
test
mov
dec
xchg
adc
jp
push
add
mov
mov
dec
xchg
add
clc
or
div
paddsw
push
sub
ror
scas
adc
ds
adc
cli
dec
push
pop
ror
test
sbb
leave
push
(bad)
push
out
and
(bad)
in
aas
imul
sbb
gs
push
ss
jmp
fadd
mov
cmp
cdq
(bad)
in
test
shr
cdq
test
retf
pusha
adc
or
mov
mov
pop
stc
nop
mov
idiv
sbb
jo
sub
ror
jne
aad
dec
cmp
sbb
inc
pushf
or
push
sub
sar
(bad)
sub
push
xlat
stos
mov
push
data16
jbe
inc
jb
sahf
mov
inc
icebp
ins
jno
mov
push
pop
mov
mov
xchg
cmps
cmp
ins
imul
jge
lods
push
pop
pop
or
jecxz
into
sub
cmp
pushf
mov
(bad)
mov
mov
repz
icebp
xchg
push
fld1
inc
and
ret
add
out
or
loop
inc
xchg
mov
jmp
xor
mov
pop
int3
sub
fld
adc
shr
push
xor
or
out
pusha
clc
adc
test
jmp
mov
dec
xor
sub
cli
xlat
in
out
push
push
push
cmp
add
fst
or
jnp
stos
idiv
inc
outs
out
push
imul
stos
dec
aas
sub
fsub
cmps
inc
movs
dec
inc
scas
adc
sbb
sbb
push
inc
test
or
test
push
dec
je
mov
dec
mov
in
dec
mov
add
movs
cmp
test
pusha
sbb
cmc
in
sbb
sbb
mov
fwait
lea
push
sti
jns
jl
mov
mov
inc
fwait
push
pop
xchg
pop
mov
fdiv
mov
call
xor
sbb
call
ins
lods
fsubr
adc
inc
(bad)
inc
mov
add
outs
shr
std
xchg
xchg
fistp
aad
xor
ret
popf
pop
fld
enter
inc
mov
dec
(bad)
fbstp
push
clc
stc
(bad)
out
lds
push
jbe
dec
jmp
fdiv
mov
push
jns
(bad)
jmp
retf
rol
sbb
popa
mov
pop
cmps
dec
out
retf
pop
hlt
adc
xlat
jae
push
sbb
push
daa
stos
dec
(bad)
cmp
repnz
ret
jecxz
sbb
mov
dec
je
cmps
jl
int
push
jle
retf
repnz
push
in
loope
(bad)
enter
stos
dec
cli
xor
data16
sub
std
mov
jmp
aam
cmp
mov
loopne
sbb
aaa
loopne
(bad)
int3
jbe
push
imul
aaa
pop
xor
ret
xchg
and
call
adc
jecxz
mov
rol
into
inc
idiv
push
aam
rol
leave
fstp
(bad)
cmp
lahf
int3
rcl
(bad)
cmp
cmp
adc
iret
(bad)
pop
xchg
ror
movs
das
push
jmp
dec
sti
pop
add
rcr
jle
sub
pop
loop
add
mov
lds
and
pop
mov
out
inc
cmp
lahf
pushf
clc
fs
in
call
leave
lock
pop
jbe
mov
daa
sbb
mov
rcr
push
lods
or
cmps
icebp
sti
sbb
pushf
jle
sub
sbb
ins
push
daa
inc
dec
pop
cmps
xor
les
loopne
fnstsw
rcl
jb
lds
jecxz
inc
jp
jmp
sbb
lea
push
jne
mov
add
cld
repz
aas
(bad)
cld
repz
aas
call
add
adc
imul
add
dec
inc
dec
inc
scas
inc
pusha
or
add
add
add
(bad)
(bad)
inc
add
add
add
add
add
add
jns
je
ins
cs
jb
ja
outs
addr16
push
gs
imul
xor
xor
inc
jne
je
jb
cmp
jb
ins
sub
push
jne
ins
imul
imul
bound
xor
data16
xor
fs
add
adc
gs
cs
jb
ja
outs
addr16
imul
add
popa
je
pop
add
add
add
add
add
lsl
add
ret
add
mov
inc
or
add
or
add
add
add
add
or
add
add
pusha
outs
rol
add
add
inc
dec
inc
add
mov
or
popa
add
jo
pop
jae
add
ret
add
push
ret
add
outs
test
add
adc
inc
push
pop
inc
in
aam
and
pop
add
scas
fucompp
out
cmp
cmp
mov
dec
mov
int
sbb
je
int3
xor
push
jecxz
cdq
out
sbb
js
jns
pop
add
scas
and
or
xor
lods
pop
(bad)
or
clc
scas
or
or
pushf
mov
ret
mov
test
push
xchg
lahf
clc
dec
cmp
ja
fidivr
(bad)
cmp
std
not
jg
out
imul
ds
and
mov
test
ja
test
and
fdivr
outs
jns
mov
neg
mov
push
imul
inc
mov
mov
xor
outs
ins
adc
stos
in
mov
inc
mov
int3
call
push
popa
lea
push
xor
sub
dec
adc
std
test
and
sbb
adc
aaa
scas
ins
jns
fmul
je
jns
outs
(bad)
in
adc
sub
mov
clc
in
cmp
arpl
jb
jns
xchg
in
lods
jmp
scas
test
mov
cmp
in
fnstsw
in
xor
fnstenvw
mov
add
out
xor
mov
lods
ja
push
mov
xchg
or
(bad)
pushf
xchg
outs
and
adc
or
lock
cmp
in
sub
mov
cmp
jno
jecxz
mov
push
dec
adc
push
jnp
jmp
sahf
mov
and
mov
(bad)
es
sbb
cld
cmp
(bad)
test
inc
sub
iret
lahf
pop
mov
mov
pushf
push
mov
adc
or
dec
lods
push
push
fistp
icebp
in
(bad)
xchg
pop
mov
xor
and
ins
das
add
mov
mov
movs
inc
bound
push
or
jg
test
push
or
xchg
arpl
xchg
outs
(bad)
adc
mov
je
mov
cmp
jae
or
add
out
movs
jbe
adc
cwde
out
or
ror
cmp
stos
shl
inc
mov
dec
(bad)
fnstenv
jecxz
pusha
jne
adc
add
or
das
xchg
int
fisttp
cmps
xchg
inc
adc
xor
sbb
icebp
jmp
bound
shl
sbb
fmul
out
pusha
ss
adc
outs
push
inc
jecxz
pop
les
shr
retf
push
ror
mov
pop
sbb
and
into
cli
lds
iret
sub
jns
ins
inc
(bad)
test
das
sahf
jle
pop
jo
mov
fwait
xchg
stc
pop
mov
add
mov
push
imul
test
push
cmps
sahf
adc
dec
sbb
leave
cmp
mov
ret
jo
adc
jb
sub
div
aam
jno
mov
and
jns
ret
and
pop
sub
fcomi
mov
fisttp
cld
dec
cmp
js
cmp
fcmovnb
and
jl
cmp
les
or
clc
ret
dec
fcomp
inc
test
push
rol
xchg
and
loopne
es
mov
in
jae
ins
rcr
out
popa
bound
punpckhdq
leave
in
xor
movs
and
fimul
call
movntq
imul
leave
pcmpgtd
nop
out
push
inc
aam
adc
test
inc
retf
mov
scas
sbb
call
test
lock
dec
mov
inc
cli
cmp
sbb
jge
shl
sub
mov
pusha
repz
jb
cmp
ss
fisub
repnz
movs
test
mov
jo
adc
xchg
dec
nop
xor
and
test
nop
pop
mov
lock
sub
xchg
test
rep
retf
cmps
(bad)
sti
in
dec
push
iret
jo
das
ret
js
add
mov
mov
pop
xlat
cmps
repnz
cmp
push
(bad)
rol
vpaddb
leave
jmp
push
add
in
jmp
inc
xchg
popf
fsubrp
cmp
stos
jge
iret
mov
ins
dec
xor
jae
sbb
sub
ss
les
retf
lea
cwde
sub
xor
ins
movs
xchg
daa
shl
jg
test
fs
mov
xor
out
aam
cmp
cmp
cmp
mov
cmp
movs
dec
(bad)
fisubr
sub
addr16
inc
and
(bad)
test
push
ret
dec
and
arpl
out
pop
mov
inc
leave
pop
jg
mov
fmul
ret
ss
inc
push
and
xor
fucompp
sub
jb
fnsave
mov
push
loopne
push
pop
sbb
dec
je
out
push
repnz
cmps
cmp
mov
add
xor
mov
ret
sbb
xor
dec
cdq
in
popf
lahf
aam
aas
mov
pushf
popa
scas
stos
test
push
test
dec
pushf
movs
pop
(bad)
adc
or
fdiv
xlat
inc
hlt
ror
xor
hlt
inc
(bad)
sbb
xchg
sub
ret
(bad)
imul
adc
cli
adc
fcom
ja
mov
movs
sbb
cdq
jo
sbb
dec
or
mov
cmc
mov
push
mov
imul
dec
jmp
je
push
aaa
jg
ret
std
push
fnstsw
adc
mov
sahf
dec
adc
pop
jecxz
enter
xchg
inc
sbb
xchg
mov
sub
lock
dec
mov
xchg
ret
inc
mov
and
cmc
ja
cli
jl
pop
xchg
jbe
dec
adc
(bad)
addr16
fdivrp
xchg
inc
fiadd
or
adc
push
sti
fimul
mov
cmp
inc
daa
inc
push
cmps
repz
mov
retf
int
ja
mov
mov
pop
push
inc
repnz
(bad)
mov
(bad)
pop
retf
(bad)
in
in
scas
mov
cmp
mov
sbb
push
leave
sub
cs
popa
cmc
push
imul
(bad)
fisub
bound
cmps
enter
sbb
lods
dec
or
ror
dec
ds
sub
movs
movs
sub
rcr
mov
pop
jns
sub
dec
cmc
lds
adc
sub
aad
aas
or
outs
div
loopne
push
inc
in
and
pop
push
fistp
dec
aaa
and
sub
fcomip
sbb
pop
pop
pop
aaa
pushf
sub
jg
addr16
cli
add
mov
cmps
int
jnp
retf
dec
stos
jecxz
sbb
mov
(bad)
cdq
inc
and
(bad)
sub
jl
fcom
test
mov
sub
shl
add
lock
dec
int3
cld
popa
pusha
les
dec
cmp
fdiv
cli
sar
dec
push
sbb
popa
add
jecxz
and
sbb
test
fdivrp
adc
(bad)
sub
cmp
fidivr
or
mov
mov
xchg
mov
nop
ret
mov
sar
or
mov
cmp
neg
repz
xlat
pop
xlat
mov
test
inc
pushf
mov
imul
mov
pop
xor
outs
cmps
push
mov
cmp
clc
fs
sbb
xchg
mov
pop
movs
sbb
out
xchg
mov
dec
fmul
mov
(bad)
xchg
mov
jmp
xlat
push
mov
bound
jmp
xor
pop
mov
in
xchg
or
dec
popf
js
ins
mov
loopne
inc
cmp
mov
mov
(bad)
mov
jns
mov
cmp
nop
push
test
leave
mov
(bad)
pop
mov
fnsetpm(287
ret
sahf
in
test
fnstsw
push
xchg
sub
cwde
sub
mov
aam
or
cmp
popa
mov
or
and
jge
js
aam
rcl
(bad)
cld
daa
hlt
or
adc
mov
ss
adc
jno
push
cmps
add
jle
xor
test
jo
jno
adc
imul
ror
sbb
add
out
pop
popa
call
pop
div
cmp
scas
rol
data16
dec
into
mov
dec
sbb
sub
xor
pop
or
xchg
sub
mov
fisub
xchg
mov
in
daa
sub
loope
xor
xor
(bad)
pop
add
cmp
cmp
pop
imul
mov
sbb
lds
cmp
popf
movs
pop
xor
test
cdq
sar
push
(bad)
mov
sahf
pop
ins
pop
sbb
rcr
test
xor
jge
lds
adc
and
xor
fcom
das
adc
rdtsc
add
ror
in
lods
cld
pop
movhps
mov
repz
fcomp
mov
jg
sbb
and
pop
push
push
hlt
cmp
ss
cli
mov
pop
mov
addr16
push
gs
jecxz
in
cmp
mov
inc
lea
cld
je
inc
cmp
(bad)
into
sub
xchg
inc
loope
adc
mov
lods
pop
fcmovnbe
add
adc
and
out
in
pop
je
jbe
fsub
aas
push
(bad)
mov
add
lods
call
push
push
add
and
nop
mov
gs
add
mov
lea
push
or
data16
mov
movs
repnz
test
sub
mov
ror
push
xchg
mov
dec
test
mov
pop
outs
adc
outs
push
call
xchg
loopne
push
(bad)
retfw
cmp
inc
cld
shr
outs
xchg
jb
or
and
icebp
fwait
outs
loopne
enter
test
stos
scas
pop
jmp
lods
dec
in
ffree
pop
sub
cmp
adc
sahf
in
loope
mov
out
loope
mov
outs
outs
jge
cmp
sub
out
(bad)
movs
xchg
pop
dec
sbb
lods
inc
xor
pop
aad
and
pop
or
jmp
out
mov
push
mov
mov
stos
mov
xor
(bad)
push
push
xchg
cmp
and
sbb
ret
pop
jo
jecxz
mov
xor
(bad)
leave
adc
jno
cmp
jge
jns
dec
scas
lea
add
pop
into
sub
outs
xor
mov
lds
ins
and
push
dec
stc
mov
out
repz
pop
dec
xchg
sub
sbb
inc
xchg
sub
cs
nop
cdq
rcl
call
or
ins
fstp
mov
and
nop
cmc
xchg
addr16
and
or
dec
jmp
mov
pop
sub
fidiv
pusha
test
fild
ss
push
mov
es
int
jp
jl
xor
inc
rcr
push
push
xor
ret
lods
sbb
(bad)
pop
cmp
sbb
mov
mov
test
leave
pop
inc
mov
pop
pop
data16
add
push
shr
mov
outs
push
pop
or
aam
fisttp
mov
out
mov
adc
test
xchg
scas
jecxz
fs
mov
rcr
push
mov
shl
jo
iret
cmc
in
(bad)
mov
add
jne
pop
xor
dec
gs
movs
inc
call
in
sub
adc
add
fsubr
dec
clc
inc
into
jno
mov
aas
call
mov
pop
dec
add
(bad)
clc
xchg
push
add
xchg
mov
shl
shl
(bad)
xor
mov
fnstsw
and
int3
ins
mul
or
mov
test
xchg
into
out
cdq
xor
leave
stos
ds
ja
pusha
leave
mov
jg
dec
mov
adc
bound
aam
push
xchg
dec
data16
push
push
mov
sbb
inc
aad
jnp
call
outs
inc
popf
mov
int3
sub
fcom
(bad)
mov
call
outs
and
ror
mov
mov
retf
frstor
xor
sbb
ret
in
pop
ds
sub
ins
mov
fsub
ins
ss
jb
jbe
rcl
sbb
stc
mov
jmp
pop
std
jns
dec
jbe
icebp
loope
les
jbe
push
mov
fsubr
bound
aam
or
add
pop
mov
pop
mov
fisttp
sbb
lods
xchg
xchg
ror
dec
fdiv
jp
sbb
inc
push
int3
dec
xlat
cmp
cmps
dec
and
sub
sbb
xlat
and
add
add
icebp
pop
sub
out
ins
pop
xlat
pop
imul
mov
inc
pop
sub
fnstenv
adc
jae
add
fcomp
imul
push
imul
adc
dec
jl
std
in
mov
jecxz
push
and
xor
jg
dec
adc
test
and
mov
mov
call
cmps
fwait
lock
and
rcr
dec
and
aam
movs
(bad)
sbb
pop
mov
in
push
inc
dec
(bad)
in
test
fld
lea
movs
retf
adc
add
loope
sbb
pop
cdq
pop
cmp
js
call
dec
or
shr
fistp
inc
pop
fst
inc
jmp
outs
push
cld
imul
in
jnp
mov
mov
fadd
pop
add
and
inc
js
in
xchg
xchg
cdq
adc
(bad)
or
jne
sahf
push
cmp
jnp
mov
xor
shl
or
ret
into
out
jns
mov
ja
mov
sub
repz
add
es
push
leave
test
lea
loope
in
dec
jne
pop
sub
push
(bad)
mov
daa
push
aam
dec
cmp
adc
sti
mov
cdq
pop
dec
mov
pushf
imul
sbb
xchg
push
push
(bad)
pop
das
inc
jl
std
(bad)
cmp
cdq
mov
stos
sub
ret
cmp
nop
push
sub
adc
mov
jl
ss
call
or
shr
adc
frstor
add
call
pop
xlat
add
jge
inc
mov
clc
(bad)
loop
pop
xor
ins
addr16
sti
mov
ret
sbb
mov
fdiv
and
xor
das
mov
stc
jae
mov
inc
inc
dec
xchg
pop
add
rcl
jns
retf
mov
pop
aam
mov
out
loop
jecxz
(bad)
pop
call
mov
sub
enter
xor
push
jne
sbb
js
mov
jg
mov
mov
loope
sti
je
dec
icebp
test
dec
jmp
aad
xchg
mov
pop
pop
not
mov
cdq
inc
cmp
cmp
scas
(bad)
iret
mov
sub
push
imul
mov
xlat
fcom
or
mov
pop
mov
pop
xor
cmps
or
js
popf
sbb
add
jle
movs
cld
popf
lea
sbb
dec
aaa
xor
dec
dec
jl
lods
(bad)
and
mov
std
mov
dec
retf
sar
(bad)
shl
xor
dec
push
push
inc
je
clc
push
pop
dec
scas
repz
repz
mov
vpor
iret
das
inc
repnz
mov
idiv
xor
inc
jp
outs
cmp
not
xchg
(bad)
xchg
pop
push
dec
dec
pop
push
xchg
xchg
icebp
adc
movs
fcmovnb
into
test
push
ins
rcr
shl
sub
dec
dec
sub
add
ja
pushf
fnstcw
fstp
out
mov
ins
les
outs
outs
repnz
pop
aad
data16
aas
outs
xor
fldcw
cmp
inc
scas
repnz
push
fld
pop
xchg
xchg
inc
lahf
inc
mov
mov
idiv
mov
xchg
test
jbe
aas
sbb
xchg
add
jmp
dec
push
retf
cwde
mov
div
push
stc
pop
sub
or
lds
loop
sub
and
cmp
xchg
add
mov
neg
push
push
xor
cmp
ins
stos
mov
retf
xchg
(bad)
iret
dec
repz
cli
jle
aad
test
out
mov
dec
test
stos
adc
mov
pop
mov
lea
jmp
sbb
int3
aad
jg
stc
out
jg
stc
out
call
add
jg
fdiv
imul
push
add
add
dec
inc
dec
inc
scas
inc
pusha
or
add
add
add
(bad)
(bad)
inc
add
add
add
add
add
add
jns
je
ins
cs
jb
ja
outs
addr16
push
gs
imul
xor
xor
inc
jne
je
jb
cmp
jb
ins
sub
push
jne
ins
imul
imul
bound
xor
data16
xor
fs
add
adc
gs
cs
jb
ja
outs
addr16
imul
add
popa
je
pop
add
add
add
add
add
lsl
add
mov
mov
inc
or
add
or
add
add
add
add
or
add
add
pusha
outs
rol
add
add
inc
dec
inc
add
mov
or
popa
add
jo
pop
jae
add
ret
add
push
ret
add
outs
test
add
adc
inc
inc
push
pop
inc
in
rol
loopne
pushf
out
cmp
jmp
cmp
dec
ja
xor
popa
call
jbe
xor
cwde
ss
add
or
push
xor
lea
ins
jno
repz
je
loope
int
sti
outs
leave
scas
out
cmc
push
push
push
popa
pop
pop
jp
xchg
mov
lea
xchg
or
xchg
jbe
add
int3
outs
retf
in
ja
xchg
sbb
in
scas
mov
mov
push
je
sbb
mov
and
pop
je
jle
scas
dec
arpl
cmc
xor
lea
repnz
ror
adc
das
push
daa
ret
jno
jns
fiadd
cmps
test
mov
fucomp
(bad)
add
stc
mov
add
mov
inc
mov
call
shl
push
test
add
mov
jl
pop
outs
(bad)
in
jns
loope
inc
inc
and
pushf
or
imul
sbb
add
or
adc
cmc
add
xlat
in
data16
inc
add
test
jle
push
les
and
pop
movs
fcomp
mov
lea
cld
jle
xchg
mov
retf
std
mul
ret
call
jmp
adc
repnz
mov
push
ja
je
not
adc
mov
push
inc
sub
arpl
scas
jo
cmp
inc
sti
mov
cmp
sub
xchg
sub
data16
mov
cli
add
jb
movs
xor
add
jnp
cmp
push
cmps
jl
mov
xor
mov
sti
cmp
shl
pop
pusha
sbb
xchg
outs
jae
bound
push
retf
and
add
jecxz
jmp
jne
dec
mov
fld
mov
mov
adc
inc
mov
pusha
add
dec
repnz
adc
add
ja
(bad)
cmp
cdq
inc
mov
data16
lds
jecxz
cs
and
loop
xor
add
xchg
popf
das
sub
cwde
xchg
sar
cmp
xchg
mov
jmp
sub
test
hlt
ret
adc
push
pushf
dec
leave
out
mov
xchg
add
(bad)
cld
fld
mov
sbb
and
test
add
pop
div
ins
cmp
icebp
icebp
dec
mov
and
(bad)
jne
ds
mov
mov
push
rol
pop
ins
pop
iret
cmp
adc
xchg
xlat
mov
xor
bound
pop
mov
daa
fidiv
push
mov
mov
outs
push
xchg
push
outs
adc
mov
popf
add
pop
xchg
aas
inc
out
jp
mov
cdq
lea
pop
adc
pop
jg
sbb
xchg
or
sub
aad
popf
mov
movs
js
xchg
gs
xor
xor
inc
loopne
inc
in
cmp
cmp
mov
jg
mov
jae
dec
add
stos
pop
cdq
rcr
dec
mov
clc
nop
js
inc
fs
mov
scas
adc
cmp
inc
into
pop
xor
(bad)
cmc
loop
mov
ins
mov
dec
mov
outs
imul
fstp
(bad)
sbb
hlt
jg
add
dec
test
movs
mov
push
mov
mov
mov
and
mov
test
(bad)
pop
not
int
test
test
fld
call
(bad)
sub
dec
inc
adc
pushf
pop
mov
fsub
test
jnp
jbe
jnp
addr16
mov
gs
mov
fs
xchg
ror
and
retf
jecxz
test
call
sbb
(bad)
pop
mov
daa
pop
and
push
or
add
retf
and
add
and
in
push
in
adc
aas
outs
inc
cmp
xor
(bad)
ds
lock
arpl
xchg
mov
xchg
loop
iret
jp
xor
mov
pop
adc
imul
hlt
dec
(bad)
sahf
(bad)
mov
pop
outs
pop
mov
jae
and
int3
and
es
push
ins
out
mov
lahf
aad
pop
rcl
shr
(bad)
pushf
fdivp
and
jbe
push
mov
imul
fcomp
addr16
call
add
fwait
xor
jo
sahf
mov
push
xchg
push
xchg
and
test
std
sbb
cmps
in
dec
test
sub
mov
xor
fwait
sub
clc
adc
fld
mov
(bad)
inc
push
int
(bad)
sti
xlat
mov
push
test
mov
add
jl
movs
sti
pop
jp
das
shl
inc
(bad)
mov
jge
cld
imul
ret
inc
into
push
pop
shl
jo
and
push
push
inc
dec
xchg
in
ss
xor
push
mov
retf
and
jg
data16
push
retf
test
pop
jns
les
cmp
add
push
mov
enter
ins
mov
mov
hlt
cld
pop
cmp
pop
jmp
das
vshufpd
cmps
aam
into
aad
and
lahf
sub
enter
cmp
or
inc
daa
and
dec
mov
ret
imul
pop
es
(bad)
push
and
jnp
mov
inc
cmp
push
pop
shl
mov
adc
pop
xchg
adc
or
sub
and
les
(bad)
clc
jns
mov
lds
sub
fdecstp
mov
jmp
pop
inc
xchg
les
repz
inc
or
sub
scas
daa
cwde
mov
stc
lahf
cli
push
adc
pusha
cmp
aaa
(bad)
push
jp
inc
ret
arpl
push
push
hlt
icebp
mov
jnp
mov
sub
not
push
es
or
mov
scas
dec
js
cmp
mov
cmp
sbb
jp
push
xor
mov
or
xchg
(bad)
dec
mov
jle
cmc
cdq
jae
cmp
adc
inc
xchg
lock
std
ret
daa
les
xchg
adc
and
mov
std
pop
add
call
xchg
inc
pavgb
push
dec
movs
pop
or
push
outs
lahf
cmps
jne
scas
fisttp
inc
sbb
sbb
out
inc
movs
mov
out
nop
in
cmp
jge
push
dec
fs
dec
das
xlat
call
mov
int
sbb
mov
or
sti
fldenv
dec
push
push
idiv
inc
lea
lods
fld
rcr
(bad)
fidivr
stc
pop
cmc
mov
scas
test
sbb
jge
xor
mov
cmp
xlat
push
and
pop
dec
adc
je
mov
inc
dec
shl
pop
es
leave
out
inc
add
cmp
push
(bad)
push
xor
sbb
dec
cmp
dec
test
mov
pop
cmps
jb
out
(bad)
push
or
scas
jge
mov
mov
pop
lahf
sub
pushf
mov
mov
nop
sti
sti
push
cmp
mov
stc
sbb
mov
movq
imul
stos
ret
cmovle
mov
not
push
in
push
mov
cmp
push
pop
mov
or
lds
sbb
push
ffree
int3
je
xchg
xchg
cmp
and
shr
call
dec
cmp
not
into
mov
out
dec
out
adc
push
push
std
or
mov
sub
les
xchg
and
mov
aaa
or
dec
jmp
mov
pusha
push
imul
ja
push
jecxz
or
inc
test
mov
pop
mov
cmp
push
out
adc
cld
mov
sbb
stos
arpl
push
stos
in
push
dec
jno
xor
std
mov
je
push
dec
inc
enter
idiv
add
mov
sub
in
xchg
mov
jae
jbe
sub
inc
into
call
mov
adc
push
or
and
dec
sub
xchg
inc
rcr
xchg
sti
(bad)
pop
inc
fistp
xchg
aad
jb
jmp
add
fxch
or
inc
retf
scas
sahf
dec
push
hlt
pusha
and
sbb
mov
jno
mov
rcr
pop
pop
shl
and
outs
and
std
dec
cli
cdq
out
in
jo
sar
mov
fist
test
or
add
inc
pop
mov
lds
lahf
cld
arpl
mov
lds
cwde
iret
mov
sbb
or
inc
inc
jl
pusha
push
outs
cmp
movs
mov
imul
outs
xchg
xor
push
fwait
cwde
loopne
stc
pop
mov
fadd
cdq
push
fs
jb
adc
jmp
add
pop
xchg
out
mov
dec
popa
pavgb
leave
test
into
mov
sub
jns
cmp
shl
fbstp
cmc
cmp
pop
xor
lock
dec
imul
lock
sub
mov
push
sar
xchg
jne
and
push
mov
ins
test
das
mov
scas
dec
clc
mov
and
cmps
iret
ret
lods
and
push
xlat
or
mov
dec
imul
or
ss
imul
push
sbb
jne
test
movs
and
movhps
(bad)
call
lds
fimul
out
add
ror
jle
push
push
popa
cmp
cmp
push
cmps
popf
sbb
mov
in
rcr
into
test
inc
int
mov
cmp
hlt
(bad)
xor
test
xchg
cmp
sahf
mov
inc
and
mov
lock
loop
cmp
loopne
stos
xor
pop
inc
sub
into
mov
mov
and
in
push
mov
mov
push
out
stos
push
in
ds
push
mov
mov
push
int
mov
pop
dec
sbb
push
sub
sti
aas
jp
sbb
mov
add
fbstp
mov
xchg
mov
int
rol
ret
ret
ins
imul
inc
inc
daa
popa
jp
fdivr
sbb
outs
mov
jmp
jle
aam
push
ss
cwde
jg
push
jo
imul
jp
push
cli
fist
retf
std
hlt
gs
push
inc
pushf
xchg
xor
dec
outs
(bad)
in
mov
mov
pushf
(bad)
out
cmp
ins
sub
pop
imul
or
adc
push
mov
loop
adc
js
jl
mov
ret
ds
call
lock
xor
iret
xor
loop
add
and
inc
adc
push
jae
pop
pop
scas
push
ret
pushf
hlt
addr16
ret
out
pop
add
aaa
stc
sbb
push
lds
xor
sbb
cmps
ret
pop
outs
hlt
dec
iret
xchg
sbb
bound
mov
push
cmp
mov
shl
mov
jmp
sbb
bound
(bad)
and
aad
shr
add
clc
repz
scas
sbb
xchg
hlt
pop
mov
mov
cmp
ins
mov
arpl
in
xchg
inc
and
dec
mov
add
push
jne
retf
mov
retf
iret
mov
ja
fadd
movs
les
sbb
rcr
loopne
fyl2xp1
mov
repnz
xor
inc
and
mov
out
mov
jp
and
mov
sti
push
enter
and
icebp
mov
dec
xchg
inc
(bad)
test
adc
aam
pop
retf
movs
pop
clc
push
shl
call
sbb
hlt
leave
iret
jecxz
add
jmp
loopne
push
jnp
jp
adc
retf
repnz
cmc
cmp
loope
jmp
pop
pop
push
les
aas
jno
mov
push
push
les
int
mov
popa
xchg
cdq
pop
mov
xchg
std
sbb
cmp
sahf
outs
add
das
dec
mov
mov
push
std
cmp
div
xchg
dec
rcl
adc
loop
leave
popa
popf
cmp
xchg
ins
lahf
into
lea
and
sub
call
stos
and
aad
and
sbb
sub
xor
dec
push
or
pushf
adc
pushf
cmp
test
fnstsw
xchg
mov
mov
fnsave
movs
mov
fdivr
lds
jb
jnp
sub
retf
repz
inc
inc
cmps
outs
aas
in
sub
adc
cmc
cmp
adc
int3
iret
lock
jo
imul
ror
jl
pop
jb
pop
in
sub
mov
mov
rol
mov
sbb
pop
inc
(bad)
push
adc
cdq
mov
mov
stc
jp
loop
and
inc
fwait
pop
pop
cmp
or
(bad)
out
(bad)
xor
sub
push
in
xor
adc
inc
and
addr16
pop
mov
imul
aad
nop
shl
test
mov
inc
jae
mul
jecxz
mov
das
or
pop
pop
sbb
add
call
sbb
inc
loopne
jae
imul
fnstsw
sahf
mov
push
dec
and
arpl
movs
ds
adc
(bad)
inc
mov
and
out
addr16
add
pop
or
icebp
retf
out
xchg
in
setnp
outs
or
sbb
mov
sbb
cwde
aam
mov
sub
sub
(bad)
cmp
aam
loopne
movlhps
imul
jge
in
xchg
mov
pop
aas
or
mov
or
pop
fcomip
mov
sbb
ins
or
cmp
out
mov
pop
push
and
cli
das
call
push
inc
gs
push
rcr
xchg
pop
lahf
or
jl
in
scas
pop
ret
inc
shl
out
hlt
adc
mov
ret
inc
test
(bad)
fsub
jns
cli
cmc
test
fstp
ins
das
inc
add
clc
and
pushf
pop
and
fist
inc
sub
ins
push
push
loope
xchg
in
sbb
aam
retf
retf
xor
cmps
imul
add
loopne
int3
data16
add
imul
fstp
retf
movs
jno
shr
mov
rcl
sahf
inc
push
pop
test
add
cmp
ja
mov
xchg
sbb
push
jns
(bad)
push
xchg
bound
push
imul
jp
pop
xlat
dec
imul
or
jp
(bad)
je
test
jp
ret
loopne
nop
dec
cmps
(bad)
push
test
xlat
fist
fwait
aaa
inc
popf
inc
jle
add
cmp
sbb
cmp
cdq
or
add
push
inc
xchg
sub
ds
fidiv
lahf
out
jbe
retf
inc
pop
ins
ja
ins
xlat
xor
(bad)
or
cli
mov
lea
stc
ins
stos
out
mov
jnp
in
cmp
mov
or
cmps
adc
adc
ins
lods
out
lock
leave
cmp
adc
pop
ds
mov
ss
mov
cmps
rcl
daa
push
shl
sbb
int3
xchg
test
cmp
and
in
cmps
jp
or
mov
aad
pop
fwait
scas
mov
repnz
jmp
cmp
xchg
std
jae
call
scas
jp
pop
sbb
sub
(bad)
stos
dec
add
es
pop
cwde
sti
out
movs
scas
or
test
sbb
dec
lea
cmp
cdq
adc
daa
aam
fld
in
daa
push
clc
gs
iret
add
test
push
adc
jp
inc
inc
xor
mov
mov
icebp
sbb
or
dec
into
bound
jmp
xchg
scas
mov
dec
in
pop
cmps
scas
pop
pop
(bad)
jo
jne
push
xor
xor
mov
ins
aas
lahf
sbb
mov
mov
retf
mov
lods
fisttp
cmps
cmp
and
cmp
jae
loop
fwait
push
loop
mov
enter
(bad)
stc
leave
stos
in
sub
lahf
mov
jmp
call
sub
dec
call
call
cmp
add
mov
pusha
push
add
rol
cmps
scas
push
and
aad
cmp
cmp
int
loopne
inc
ins
push
loop
push
test
(bad)
xlat
mov
and
fsub
cmp
cli
imul
(bad)
iret
loope
push
inc
stos
add
aas
xor
inc
sar
pop
dec
xor
les
mov
xchg
jae
lods
adc
adc
xor
xchg
xor
adc
mov
mov
ror
scas
push
cmc
stc
mov
iret
aas
(bad)
cld
repz
aas
(bad)
cld
pop
add
out
lahf
sbb
fadd
add
add
dec
inc
scas
inc
pusha
or
add
add
add
(bad)
(bad)
inc
add
add
add
add
add
add
jns
je
ins
cs
jb
ja
outs
addr16
push
gs
imul
xor
xor
inc
jne
je
jb
cmp
jb
ins
sub
push
jne
ins
imul
imul
bound
xor
data16
xor
fs
add
adc
gs
cs
jb
ja
outs
addr16
imul
add
popa
je
pop
add
add
add
add
add
lsl
add
mov
mov
inc
or
add
or
add
add
add
add
or
add
add
pusha
outs
rol
add
add
inc
dec
inc
add
mov
or
popa
add
jo
pop
jae
add
ret
add
push
ret
add
outs
test
add
adc
inc
inc
push
pop
inc
in
rol
loopne
out
out
data16
cmps
mov
out
imul
mov
(bad)
je
jg
ret
jmp
cmp
fimul
repnz
jns
and
adc
in
push
lds
fmul
cmp
dec
jp
repnz
xor
mov
sbb
sub
stos
xchg
mov
sti
jo
dec
push
or
stos
push
in
(bad)
pop
ret
jne
aas
adc
jecxz
mov
lods
sub
sbb
cs
cmp
mov
out
(bad)
xchg
and
movs
test
xchg
test
adc
test
popf
std
pop
mov
sbb
ror
mov
or
mov
mov
inc
and
pop
fs
cmp
aas
sub
cmp
cmp
dec
imul
bound
xor
inc
jo
out
jmp
jl
mov
fdivr
gs
out
sbb
push
popa
inc
fdivr
and
jg
jmp
jae
push
xor
jmp
adc
ret
push
(bad)
nop
xchg
cwde
icebp
jo
xlat
(bad)
out
loop
rcl
or
or
pop
movs
or
mov
imul
xchg
mov
dec
cmp
xor
in
dec
stos
xchg
sahf
pop
(bad)
ss
add
dec
or
sbb
sar
inc
lahf
jmp
cmps
in
pop
gs
loop
add
fiadd
out
sub
inc
cli
mov
push
je
xor
mov
xchg
and
inc
sbb
out
js
call
xchg
xor
and
cmp
(bad)
loop
jae
sub
(bad)
in
neg
test
jmp
mov
pop
repnz
mul
imul
jns
fs
pop
jg
xchg
push
mov
pop
pop
ret
(bad)
std
ficom
imul
sub
ficom
fst
add
aad
xchg
push
jp
stos
push
xlat
cld
push
mov
test
sbb
movs
sbb
sub
inc
out
jne
(bad)
sub
jo
hlt
leave
frstor
pop
out
in
mov
xchg
or
jmp
pop
(bad)
ds
and
movaps
test
or
nop
ins
push
pop
ja
inc
jns
shr
ins
shl
test
jb
stc
xchg
rol
cmovnp
xor
add
repnz
sbb
and
fcom
jmp
repnz
sahf
jecxz
scas
cli
leave
test
ins
jae
into
in
enter
cmp
xor
pop
cmps
mov
movs
jbe
adc
pushf
and
cs
inc
ror
sti
pop
dec
fstp
ret
inc
mov
lea
push
add
add
sub
fld
xlat
push
loopne
rcl
jb
ret
das
stos
mov
das
jecxz
mov
fcomp
mov
cmp
mov
inc
je
fsub
leave
push
sbb
sub
adc
mov
adc
adc
sub
icebp
xchg
lods
push
mov
mov
pushf
loopne
dec
das
das
xor
mov
daa
ds
int
(bad)
xor
icebp
push
retf
nop
aad
push
push
push
cpuid
shl
sub
push
arpl
call
lds
nop
jno
and
add
lods
cdq
enter
push
outs
xchg
imul
jle
daa
fsub
mov
outs
scas
cmp
add
mov
xlat
test
repz
mov
mov
and
inc
aam
out
ret
mov
and
stc
imul
mov
pop
cmc
sti
pusha
into
mov
add
mov
lahf
mov
addr16
sbb
call
das
or
sub
add
out
out
ja
and
jns
or
ja
shl
aaa
sbb
mov
hlt
mov
mov
xchg
ficomp
stos
pop
js
mov
ror
cmp
icebp
jg
test
jg
cwde
pop
in
arpl
ret
jbe
inc
pcmpgtd
and
mov
ja
loopne
dec
jne
das
into
mul
jo
outs
pop
cmp
lock
(bad)
in
loope
je
mov
push
leave
xchg
mov
mov
pusha
cmp
fstp
in
movs
or
inc
sbb
and
xchg
xchg
xlat
sti
jne
pop
(bad)
je
arpl
mov
jmp
xor
aas
cmp
jb
inc
sbb
push
mov
push
mov
pop
xlat
call
sbb
imul
and
sbb
xchg
call
gs
nop
mov
lods
cld
lea
loop
shl
cmp
jbe
movs
sub
lods
add
push
mov
mov
and
mov
icebp
fidivr
imul
cmps
xor
and
xor
hlt
movs
aaa
adc
mov
dec
call
fmul
mov
outs
jecxz
repz
loope
mov
mov
ss
mov
push
test
aam
xchg
mov
call
test
sub
pop
push
xchg
mov
mov
fs
lds
inc
mov
pusha
or
icebp
jo
or
test
cmp
cli
push
add
(bad)
pop
loope
pop
xlat
scas
mov
cmps
idiv
ror
std
sub
dec
lods
jns
sub
aas
call
push
(bad)
or
loopne
out
xor
lock
xor
mov
enter
push
fld
ja
lahf
mov
outs
outs
(bad)
out
(bad)
jns
push
adc
cmp
jmp
fidiv
push
xchg
push
push
xlat
es
loop
jne
sub
pop
stos
inc
or
xor
retf
daa
sub
inc
push
sbb
adc
add
xor
call
fnstsw
test
push
iret
addr16
or
test
sbb
cmp
rcl
fwait
lahf
sbb
call
outs
imul
dec
retf
jmp
fld
pop
sbb
jp
xor
and
pop
fst
lock
push
scas
sub
call
in
hlt
pop
xor
or
ja
inc
(bad)
pop
sub
mov
dec
adc
mov
test
or
pop
mov
cmp
scas
clc
cmp
adc
sbb
jg
ins
xchg
mov
ret
and
mov
inc
rcr
neg
stos
xchg
in
jmp
ja
outs
ja
das
fld
sti
adc
aad
aam
fsubr
jns
aad
xor
fsubr
fiadd
outs
add
dec
inc
push
inc
shl
or
xchg
hlt
inc
loopne
test
push
stos
sahf
sti
push
dec
jl
lock
mov
fdiv
nop
pushf
push
sbb
rol
jmp
lock
or
sbb
sub
sub
sbb
push
aam
jge
pop
gs
pushf
in
push
frstor
jne
mov
and
loop
(bad)
test
dec
mov
nop
xor
inc
or
pop
loope
test
out
cwde
repz
mov
outs
push
mov
jg
mov
mov
lahf
into
cmp
retf
add
cmp
or
aad
inc
out
mov
scas
adc
mov
(bad)
into
add
in
adc
ret
push
sub
push
mov
pop
movs
mov
cmp
mov
mov
scas
or
add
aas
fsub
fadd
adc
fldenv
sbb
pop
out
icebp
push
sbb
cli
dec
xchg
inc
xchg
add
loop
(bad)
xor
sub
shl
push
pushf
dec
dec
mov
iret
call
imul
sbb
fcom
or
movs
cwde
dec
xchg
add
push
sub
lahf
jp
fidivr
jmp
fsub
test
xor
mov
dec
vpmacssdqh
stos
(bad)
popa
jmp
sub
mov
adc
movs
int
or
dec
jmp
or
call
popa
cmps
xlat
xchg
addr16
fist
dec
push
or
fcom
add
shr
(bad)
js
sbb
xchg
fst
push
arpl
test
adc
shr
add
xchg
mov
arpl
cmps
lods
dec
jnp
jecxz
out
fucompp
fidivr
mov
fistp
mov
int
in
bound
sub
push
out
fbstp
fcom
sub
xor
mov
pop
pop
jecxz
mov
nop
mov
clc
ds
sti
or
std
enter
xchg
push
frstor
add
adc
xor
sub
aas
popf
ficom
push
pop
les
mov
pop
aad
pop
test
popf
rol
icebp
mov
in
addr16
aas
mov
dec
(bad)
scas
push
pop
adc
cld
ins
add
sub
push
jne
pop
pop
pop
int3
mov
dec
das
lods
call
cld
sahf
xor
dec
aaa
fisttp
out
adc
outs
mul
in
sti
adc
ins
and
into
bswap
lds
jmp
adc
inc
gs
movs
push
jmp
push
lods
mov
xchg
test
adc
mov
adc
lahf
leave
aam
push
push
(bad)
sub
cdq
cmp
ins
mov
cwde
repnz
in
sbb
push
idiv
adc
mov
ja
push
inc
fwait
scas
pop
pop
ds
mov
push
push
sub
and
dec
mov
fisub
mov
pushf
push
pop
repnz
xchg
and
sbb
jb
lods
mov
push
cwde
xor
out
cmp
jp
jmp
sub
sti
xchg
push
inc
jns
cdq
mov
push
iret
leave
daa
rcl
mov
js
aad
es
ret
jle
xor
jl
xchg
cmps
fcomi
jbe
lsl
mov
xchg
sahf
or
add
dec
int3
pop
inc
jmp
cmc
jle
cmps
jno
popa
adc
push
stos
jb
scas
loope
cmps
xchg
pop
add
and
mov
fbld
fstp
cmp
pop
(bad)
jmp
push
movs
movs
aad
stos
mov
jns
outs
push
or
shl
and
call
lea
loopne
fnstenv
shl
pop
dec
push
xor
inc
xor
(bad)
or
inc
mov
xor
imul
sub
cmps
out
adc
loope
mov
(bad)
xchg
aas
sub
sti
movs
jp
shl
inc
pop
div
(bad)
push
xchg
test
jl
pushf
or
in
enter
pop
mov
test
call
push
(bad)
je
adc
mov
push
enter
popf
jle
jns
loop
outs
cmp
xor
jmp
cmp
(bad)
lahf
xor
adc
cdq
ss
fwait
cs
push
cmp
or
aaa
jl
call
fdivr
loop
pop
test
aaa
imul
gs
sar
popa
test
rcr
and
push
xor
mov
lods
scas
mov
addr16
pop
inc
sbb
std
adc
mov
gs
cmp
adc
sub
cmp
test
push
sbb
not
adc
sbb
lods
ins
loopne
and
shr
inc
dec
inc
call
pushf
je
(bad)
inc
cmps
adc
cli
xchg
fs
in
or
mov
xor
lods
inc
sub
jb
popa
mov
out
cld
gs
jbe
xchg
mov
pop
inc
or
pop
daa
add
rol
lea
pop
jl
sbb
or
(bad)
hlt
adc
in
stos
xchg
data16
inc
push
movs
into
into
iret
pop
jae
xor
xchg
push
push
mov
adc
leave
xchg
ins
mov
jmp
cmps
stos
jmp
sbb
stos
sub
bound
popa
gs
xchg
sbb
mov
test
test
ds
mov
arpl
cmc
repz
sbb
adc
jnp
mov
mov
nop
outs
pop
mov
(bad)
(bad)
cmp
inc
jno
dec
cli
xchg
or
add
cmp
inc
dec
leave
sub
mov
mov
(bad)
aam
sbb
or
stc
push
push
mov
popf
movs
addr16
mov
add
je
mov
jecxz
test
movs
pop
aad
mov
pop
ja
add
jno
mov
cmp
cmp
outs
xchg
xchg
scas
mov
sbb
std
push
icebp
pop
mov
push
and
sub
leave
add
loop
mov
int3
outs
call
cmp
dec
stos
mov
mov
jl
sbb
jle
gs
pushf
mov
mov
call
lahf
jl
pop
jmp
pushf
push
test
mov
or
(bad)
rcr
and
push
jp
outs
xor
mov
xor
pop
in
xor
es
xchg
repz
fild
or
call
stc
cmp
das
call
imul
aad
enter
(bad)
int3
(bad)
mov
mov
arpl
jnp
sbb
inc
addr16
and
dec
fldl2e
push
sbb
xchg
test
mov
cmp
mov
add
pushf
cmp
retf
mov
(bad)
dec
or
aad
add
test
add
nop
ins
mov
fld
sub
dec
mov
mov
adc
sub
addr16
repz
rcl
xchg
cmp
jecxz
mov
ja
xchg
pop
mov
repz
push
push
leave
shl
arpl
add
cmc
sti
fsub
push
cmp
outs
push
jnp
or
outs
pop
(bad)
pushf
xor
outs
ja
jl
pop
fcomp
push
sub
xchg
jmp
shl
popa
dec
mov
push
imul
xchg
push
aam
cdq
lea
xor
inc
dec
(bad)
xlat
in
in
out
mov
xlat
movs
dec
mov
sbb
add
fst
loop
or
movs
sub
out
mov
xor
sbb
mov
xchg
add
je
inc
push
rcr
sub
fsubr
into
xchg
test
mov
cmp
loop
int
dec
mov
fs
xchg
xchg
push
nop
cli
push
sbb
push
xor
out
add
sub
add
(bad)
xor
add
cld
mov
jmp
or
loope
sub
inc
push
pop
scas
mov
mov
les
xor
dec
stos
ins
addr16
retf
xchg
test
mov
dec
push
jl
mov
lea
and
cmp
test
or
(bad)
lods
sar
mov
pusha
outs
not
cmp
mov
stc
cmp
adc
out
lea
cld
ret
(bad)
shl
fwait
adc
sbb
push
bound
fdiv
(bad)
call
and
or
and
sub
adc
push
rcr
jg
fld
ret
pusha
stos
mov
loop
and
pop
mov
mov
mov
test
fisub
bnd
jge
xor
pop
cdq
(bad)
ficomp
xor
std
imul
sbb
sub
idiv
mov
lock
inc
loope
aas
cli
inc
cwde
inc
imul
hlt
jle
inc
pop
loopne
icebp
lods
stos
leave
push
jecxz
xchg
xchg
cmp
jmp
xchg
call
retf
(bad)
xor
sub
ds
shl
pop
cli
sub
sbb
mov
ja
retf
mov
push
cmps
xchg
push
push
shl
dec
leave
dec
retf
mov
std
mov
mov
fwait
mov
push
push
(bad)
(bad)
and
jmp
ds
es
int3
hlt
(bad)
lock
or
jg
daa
mov
inc
sub
mov
mov
(bad)
outs
out
es
push
pop
sbb
aam
jns
fcmovnb
lds
inc
into
pop
inc
xor
lds
jle
xchg
call
cmp
or
xchg
movs
sub
aas
xchg
or
ja
mov
rol
ret
ins
push
fnstcw
call
in
ins
(bad)
frstor
adc
mov
cmp
fidiv
xlat
xor
addr16
outs
jmp
bound
inc
sub
cdq
cmp
adc
popf
not
rcr
sbb
out
jg
stc
out
jmp
lock
in
adc
jns
(bad)
aam
add
add
dec
inc
dec
inc
scas
inc
pusha
or
add
add
add
(bad)
(bad)
inc
add
add
add
add
add
add
jns
je
ins
cs
jb
ja
outs
addr16
push
gs
imul
xor
xor
inc
jne
je
jb
cmp
jb
ins
sub
push
jne
ins
imul
imul
bound
xor
data16
xor
fs
add
adc
gs
cs
jb
ja
outs
addr16
imul
add
popa
je
pop
add
add
add
add
add
lsl
add
ret
adc
add
mov
inc
or
add
or
add
add
add
add
or
add
add
pusha
outs
rol
add
add
inc
dec
inc
add
mov
or
popa
add
jo
pop
jae
add
ret
add
push
ret
add
outs
test
add
adc
inc
inc
push
pop
inc
in
xlat
jne
fisttp
ss
jo
xor
cmp
xor
cmps
mov
dec
dec
dec
dec
ja
int3
je
jne
fdivr
sbb
jg
pop
add
leave
push
jl
jecxz
popf
ss
arpl
in
dec
cmp
and
les
loopne
pop
adc
outs
inc
pop
cs
call
in
in
xchg
int3
int3
adc
cld
xchg
push
repnz
push
std
jge
jp
sub
aas
out
pop
(bad)
cdq
ret
inc
imul
leave
or
pop
ds
xchg
cmp
into
mov
(bad)
ds
xchg
mov
mov
loope
mov
jecxz
movs
mov
mov
xor
xlat
xchg
inc
sub
scas
pop
shr
out
push
in
add
or
or
test
xor
and
gs
popf
mov
movq
push
push
inc
dec
out
mov
ins
(bad)
mov
xor
push
add
ja
cli
pop
in
push
ins
add
cmp
cli
push
pop
jle
xchg
les
push
mov
rcl
fsubr
fist
cmp
jbe
sahf
arpl
ds
or
pop
mov
inc
inc
std
fld
push
ins
cwde
ins
leave
jle
not
std
rcl
call
jbe
aaa
lock
xor
sub
jg
or
fild
mov
call
std
out
mov
loopne
(bad)
inc
and
mov
mov
pop
lods
fisubr
retf
ins
ret
mov
mov
push
adc
ficomp
sbb
mov
pushf
sbb
mov
add
lea
gs
(bad)
les
jns
out
mov
mov
mov
in
mov
cmp
dec
sub
push
mov
sbb
clc
shl
mov
jp
test
and
fwait
push
jns
push
adc
xor
pushf
xchg
(bad)
neg
cmc
add
jae
pop
lods
pop
xlat
sbb
and
int3
rcr
leave
icebp
inc
push
cmp
out
or
mov
(bad)
popa
jno
mov
jp
dec
sub
cmp
out
fild
mov
mov
mov
and
fld
es
mov
or
mov
cmp
and
inc
mov
fcmovnb
(bad)
sub
dec
fdiv
idiv
and
fnsave
mov
imul
push
fist
(bad)
std
call
dec
xadd
call
leave
out
call
or
movs
lock
xchg
ins
jl
daa
shl
cmp
push
push
movs
inc
xor
out
outs
push
sar
data16
lahf
mov
fwait
cld
outs
(bad)
(bad)
mov
cmp
or
rol
imul
out
push
fwait
or
rcl
test
inc
fdiv
sahf
dec
out
sti
imul
jbe
sub
mov
dec
inc
add
iret
repnz
loope
xchg
stos
test
sbb
stc
sub
inc
pop
xchg
or
cmc
(bad)
imul
test
cmp
sar
cmp
mov
(bad)
fcom
mov
fld
cmps
out
ja
pop
pop
outs
xor
sbb
(bad)
pusha
mov
(bad)
test
inc
mul
inc
jae
and
xor
push
fwait
clc
sti
sbb
imul
push
lock
out
hlt
and
fs
fscale
stos
inc
or
or
sub
push
test
fwait
cmp
icebp
repnz
mov
push
jmp
mov
xchg
xlat
in
sbb
inc
icebp
mov
jmp
scas
cmp
addr16
scas
and
sti
inc
out
scas
push
cmp
and
je
daa
pop
repz
pushf
(bad)
xor
shl
fwait
adc
mov
fistp
pop
and
mov
jecxz
jae
pop
inc
adc
(bad)
dec
xor
xor
xchg
push
adc
push
std
cmp
dec
ins
stos
aam
mov
or
or
or
push
popa
lods
jmp
loop
out
ficomp
push
mov
xor
aas
outs
xchg
pop
mov
call
mov
add
and
rcr
sub
xchg
lods
in
or
std
rcl
lock
jnp
push
add
xchg
dec
and
sub
out
xchg
mov
ret
push
stos
aam
jmp
lods
xchg
push
xchg
mov
ins
and
xchg
mov
call
push
repnz
pop
or
out
and
fdiv
dec
out
sub
cli
cs
sar
cmp
xchg
pop
dec
jnp
fwait
or
out
push
call
lahf
inc
call
and
je
clc
adc
jb
fild
int3
fsub
add
mov
or
stos
gs
cmp
xchg
adc
sub
xchg
sub
cmp
out
sub
xor
and
sbb
addr16
arpl
test
dec
xchg
push
cs
gs
inc
in
cmps
push
cli
aas
sub
cdq
sar
(bad)
out
hlt
cmps
fwait
sub
push
push
cmp
jmp
gs
add
pop
sbb
ror
fldcw
push
call
or
mov
or
mov
mov
in
push
ret
test
dec
adc
leave
adc
mov
aad
push
cld
adc
jnp
cmp
and
aas
jp
mov
stos
pusha
fist
or
cmps
fsubr
push
cdq
cli
mov
cld
pop
jg
aaa
test
jae
mov
dec
fucomi
jmp
(bad)
adc
xchg
xor
jecxz
enter
popf
mov
clc
cmp
into
sbb
cdq
adc
jne
fucomip
ret
sbb
(bad)
movs
cmp
addr16
rcr
stos
sbb
push
imul
mov
xchg
push
retf
pop
iret
adc
sbb
push
call
mov
arpl
pusha
test
or
cmp
outs
xchg
or
or
into
add
cmp
adc
test
fisub
jb
inc
jmp
jne
mov
adc
and
jno
push
pop
sar
mov
xchg
dec
repz
lods
adc
push
test
sub
repz
call
xchg
xor
add
popf
push
mov
das
into
stos
sti
rcr
out
(bad)
mov
lods
add
std
fidivr
push
and
xchg
lea
outs
icebp
xchg
push
movs
push
push
je
cmps
fsub
aaa
aas
sub
ret
mov
(bad)
mov
xor
inc
mov
jmp
ins
jmp
and
cmp
or
daa
mov
aas
rcr
inc
jmp
xor
ds
test
dec
(bad)
jmp
mov
int
mov
inc
sub
pause
pop
fwait
pop
adc
cmc
mov
ret
pop
or
push
int
loop
fwait
inc
sub
inc
xchg
dec
add
add
ss
(bad)
call
sbb
mov
dec
sub
mov
call
in
adc
or
add
fwait
push
pusha
movs
int3
mov
xor
in
dec
in
and
cdq
fstp
int3
out
adc
sub
fcomp
test
inc
nop
ss
shr
xchg
mov
fimul
fidivr
jnp
iret
daa
push
int3
push
sub
xchg
inc
ja
or
and
mov
push
push
push
mov
xchg
xchg
ja
aas
mov
xchg
ror
pop
push
lods
push
fsub
daa
mov
mov
adc
sub
push
push
jle
stc
sbb
(bad)
mov
mov
dec
cdq
fsubr
in
inc
(bad)
dec
push
push
(bad)
fs
or
stos
adc
and
sub
ins
leave
mov
(bad)
aaa
mov
and
jge
or
inc
jl
jle
test
cmc
cdq
xchg
js
push
cmp
imul
pusha
out
cmp
popf
ins
dec
data16
stos
outs
push
inc
movs
adc
adc
jmp
mov
push
leave
and
test
pop
jo
iret
dec
mov
nop
mov
in
pop
add
(bad)
mov
and
bound
in
mov
rol
scas
outs
fidivr
fcomp
push
lods
pop
shr
sti
cwde
or
cmp
jecxz
cmp
and
sub
sub
rcl
call
add
test
pop
mov
push
idiv
outs
leave
in
xor
daa
popa
je
jnp
clc
push
lods
mov
adc
pop
mov
mov
xor
jne
mov
mov
pop
pop
aad
jne
jno
cmp
fmul
cld
push
cli
and
add
and
and
jno
das
jmp
mov
imul
adc
and
sar
dec
in
fadd
push
ins
fsubr
jo
(bad)
test
xlat
sahf
inc
dec
leave
cli
in
xchg
mov
mov
idiv
shr
cs
cdq
ret
test
out
dec
ss
cli
sbb
pop
fsubr
and
inc
bound
jb
out
outs
jae
repnz
scas
ror
dec
enter
push
imul
push
jne
jnp
in
or
sub
push
xlat
mov
pushw
lds
out
mov
mov
mov
and
and
cld
call
cmp
(bad)
add
or
mov
push
add
ins
hlt
sbb
jp
das
mov
or
nop
jmp
aad
and
adc
(bad)
jne
mov
add
nop
ds
fiadd
push
sbb
or
xchg
or
imul
data16
out
or
push
ins
inc
or
test
cmp
mov
push
pop
or
inc
or
mov
into
mov
xlat
mov
xor
movs
shl
retf
and
jge
jns
in
pop
push
std
ds
jb
sub
shr
push
and
fcomp
mov
mov
jp
add
sti
stos
add
js
aas
mov
inc
rcr
xchg
stc
jns
into
je
jecxz
movs
test
mov
fisttp
xchg
sbb
mov
loopne
and
retf
add
call
aaa
inc
or
(bad)
dec
mov
and
jecxz
add
inc
in
ds
ror
adc
ins
jecxz
or
sub
ins
xchg
inc
(bad)
test
int3
dec
aaa
mov
int3
loop
push
test
lea
js
dec
shl
pop
call
jbe
stos
add
cs
loop
xor
and
lods
(bad)
in
mov
push
mov
and
dec
jle
and
jg
stos
mov
dec
push
jmp
test
ins
stc
xlat
outs
cmps
xchg
fild
lahf
enter
and
test
sbb
not
(bad)
xchg
sub
mov
push
scas
ins
lahf
push
cs
mov
jge
inc
jecxz
sbb
dec
pop
int3
xchg
(bad)
mov
daa
mov
cmps
cmp
cmp
(bad)
pop
inc
ret
cmp
add
fs
cmp
sbb
in
sbb
shr
cli
xchg
in
push
sbb
icebp
xchg
dec
mov
test
sbb
mov
cmp
sub
popa
aaa
pop
sub
test
jns
inc
imul
(bad)
es
cmp
pop
push
mov
and
pop
inc
lods
mov
lds
mov
pop
ins
xor
int
or
outs
add
and
out
ss
lds
mov
and
movs
and
jg
inc
add
das
push
adc
adc
out
mov
mov
mov
lea
xor
adc
sti
imul
stos
shl
dec
stc
or
call
and
ror
jge
xchg
cmps
dec
mov
sahf
push
repnz
cmps
cmp
adc
hlt
mov
test
mov
adc
repnz
and
push
aas
mov
or
sub
cmp
into
ror
sub
jno
fs
out
mov
mov
xchg
inc
mov
sub
pop
push
inc
idiv
fidiv
(bad)
sbb
sub
dec
mov
sub
cmp
rcr
xchg
(bad)
aaa
iret
fucom
dec
cmp
mov
cmps
dec
add
cld
xor
loopne
jge
cwde
gs
xor
jae
dec
jbe
pop
imul
(bad)
xor
xor
or
outs
lods
lods
cmp
dec
dec
clc
xor
inc
in
mov
stos
adc
mov
adc
out
cdq
lock
lods
mov
cmp
scas
inc
scas
or
sub
pop
outs
jmp
outs
lds
and
cli
jb
lods
sbb
lods
fisttp
into
pop
xchg
cmp
rcl
neg
inc
xchg
or
sub
inc
and
or
xor
sub
sbb
add
sbb
shl
les
mov
xchg
push
neg
add
mov
js
cmp
xchg
cmps
jl
fldenv
cmp
inc
mov
sub
push
js
sbb
out
pop
sub
stos
div
xor
inc
lods
retf
rcr
loop
popf
pop
pop
test
add
xchg
les
xor
xchg
arpl
mov
jg
add
iret
stos
add
pop
ins
jo
ror
mov
pop
mov
imul
mov
fs
es
lods
(bad)
scas
out
cmc
repz
xor
pop
sub
or
cmp
arpl
loopne
pop
addr16
jle
aas
fdivp
inc
cmp
xchg
pop
jbe
cld
jne
push
add
fucomp
cmps
pop
outs
or
jno
or
bound
cmp
pop
and
loop
aad
pop
xchg
add
mov
iret
inc
sysret
mov
das
push
jg
cmc
push
dec
dec
mov
adc
fwait
pop
xchg
shr
sub
fsubr
sub
ret
ret
(bad)
dec
iret
stos
cmp
imul
dec
mov
(bad)
jp
popa
lahf
cmp
mov
mov
mov
out
mov
cli
push
nop
mov
sbb
repz
pop
pop
fsub
stos
aam
mov
es
(bad)
adc
lods
push
pop
retf
mov
mov
call
sahf
das
mov
je
push
or
mov
jo
jnp
push
adc
jle
sbb
rep
xor
sbb
mov
mov
ja
pop
xchg
nop
(bad)
or
cmp
arpl
adc
cs
mov
inc
xor
cmp
mov
fiadd
xchg
mov
outs
cli
push
(bad)
retf
call
inc
jmp
(bad)
push
cmp
mov
clc
jae
fdivr
mov
and
cdq
mov
stc
push
ja
ins
hlt
xchg
sbb
inc
adc
add
popa
jp
data16
inc
rcl
jnp
pop
inc
push
cmp
mov
pusha
hlt
outs
outs
jl
jmp
and
xor
push
adc
sahf
adc
rol
ret
sub
jle
int3
xor
sub
jbe
xor
jecxz
je
int
int3
scas
test
js
add
je
cmp
xchg
rcl
stc
push
xchg
push
dec
inc
xchg
mov
jmp
sti
xchg
mul
mov
pop
aas
mov
aaa
mov
jmp
adc
push
or
mov
xchg
mov
je
and
and
ss
adc
repnz
mov
push
dec
sbb
in
add
ins
mov
xor
fwait
lds
les
cmc
int3
sbb
popa
jl
jns
mov
(bad)
mov
pop
and
mov
push
cmps
pop
xor
dec
pop
ja
inc
std
cmc
adc
in
xor
mov
inc
lods
fiadd
aam
rcr
jmp
enter
or
xchg
xchg
xor
bound
jne
mov
sub
push
and
mov
stc
or
mov
lahf
xor
jae
out
ss
dec
mov
(bad)
stc
out
jg
stc
out
jg
pop
add
loope
mov
add
dec
inc
dec
inc
scas
inc
pusha
or
add
add
add
(bad)
(bad)
inc
add
add
add
add
add
add
jns
je
ins
cs
jb
ja
outs
addr16
push
gs
imul
xor
xor
inc
jne
je
jb
cmp
jb
ins
sub
push
jne
ins
imul
imul
bound
xor
data16
xor
fs
add
adc
gs
cs
jb
ja
outs
addr16
imul
add
popa
je
pop
add
add
add
add
add
lsl
add
mov
mov
inc
or
add
or
add
add
add
add
or
add
add
pusha
outs
rol
add
add
inc
dec
inc
add
mov
or
popa
add
jo
pop
jae
add
ret
add
push
ret
add
outs
test
add
adc
inc
inc
push
pop
inc
in
rol
ror
frstor
cmc
adc
push
mov
sbb
sbb
inc
mov
pop
mov
fstp
add
jmp
and
mov
push
std
(bad)
xchg
sbb
push
mov
sub
popf
jno
mov
dec
push
sahf
mov
cmp
pop
adc
push
mul
fnstcw
pop
xchg
push
hlt
inc
and
cs
cli
or
aad
loope
sti
inc
mov
je
daa
neg
cmps
cmps
imul
arpl
mov
js
retf
ss
xchg
bound
push
popf
stos
mov
jbe
call
inc
out
ins
stos
push
mov
jno
pop
push
mov
mov
or
lds
mov
xor
stos
pop
sub
into
inc
adc
cmp
dec
stos
jle
lods
dec
retf
xchg
or
lea
or
aam
in
inc
mov
je
xchg
xor
xchg
shl
sbb
pop
(bad)
dec
ficom
sub
nop
or
iret
pop
ficomp
sbb
int3
add
sub
sub
jb
call
mov
jmp
cmp
cli
scas
nop
lock
xchg
jle
sbb
jmp
push
jecxz
sbb
push
sub
mov
mov
pop
mov
or
andps
push
stos
jae
aas
dec
mov
dec
jno
(bad)
mov
fnsave
and
sub
stos
inc
jle
iret
ja
movs
hlt
xor
into
push
pop
pop
cmp
dec
mov
push
outs
jmp
jbe
outs
push
leave
popa
xchg
(bad)
push
jecxz
xchg
ret
mov
inc
retf
shl
cmp
sub
jg
es
mov
rcl
popa
add
test
(bad)
retf
xor
int
mov
adc
pop
push
push
(bad)
call
cli
push
cli
scas
and
loopne
loope
out
std
and
loope
xor
enter
stos
push
push
in
enter
(bad)
fadd
mov
mov
das
jns
mov
sbb
inc
dec
popf
push
pop
fs
test
shr
stos
sub
cmp
into
mov
icebp
inc
and
mov
cmp
adc
sub
mov
call
lock
test
mov
mov
mov
(bad)
adc
jle
sub
loop
inc
call
sbb
mov
mov
(bad)
pop
leave
shl
adc
sub
in
mov
xor
std
cmc
pop
cmc
or
adc
xchg
das
mov
sub
mov
push
pushf
adc
sub
and
pushf
jbe
lds
xor
ficomp
std
cmp
mov
ins
psubq
mov
add
imul
ja
aas
mov
and
dec
pop
dec
into
xchg
or
xchg
int3
pusha
mov
or
or
lds
mov
idiv
jno
test
xor
mov
cmp
xchg
mov
rcr
push
sti
add
jb
cmp
push
dec
mov
in
pop
inc
loope
stos
outs
add
jb
lock
cmp
push
or
loop
mov
xor
sub
(bad)
out
adc
inc
mov
loop
pop
cli
add
fwait
push
push
aam
dec
fidiv
das
xchg
aaa
sbb
retf
ficomp
cs
call
shr
xchg
dec
(bad)
in
xor
dec
and
sbb
mov
mov
pop
aam
xor
enter
and
fstp
loope
cs
xor
jne
das
xchg
sbb
cmc
xor
add
daa
gs
cmp
cdq
inc
cmp
cmp
pop
and
adc
add
das
test
arpl
(bad)
movs
add
pushf
inc
mov
icebp
movs
inc
sbb
mov
dec
mov
jne
ret
out
in
mov
fbld
cdq
cmc
add
fisttp
sti
popf
sbb
mov
jo
das
dec
adc
pop
retf
push
jmp
mov
mov
jb
mov
pop
inc
loop
shld
gs
cmps
movs
pop
lods
dec
in
lods
std
cs
repz
jmp
cmp
sub
ja
jge
aad
out
aad
in
mov
xchg
in
push
sbb
add
or
test
jle
sbb
ret
fs
or
dec
xlat
jmp
scas
xor
nop
push
ror
enter
daa
cmp
enter
pop
test
scas
stc
push
test
shl
cmp
mov
xchg
sub
cwde
mov
or
retf
sbb
mov
mov
or
inc
idiv
popf
push
in
loopne
imul
aam
gs
pop
xchg
pop
gs
inc
(bad)
jle
in
mov
add
cs
inc
daa
and
movs
add
gs
imul
repz
cmp
mov
mov
das
leave
in
xor
xchg
btr
xlat
scas
add
hlt
or
dec
xor
mov
xchg
jmp
call
mov
dec
push
adc
ins
adc
fimul
into
push
pop
add
loop
fs
rol
repz
pop
sbb
(bad)
out
sub
loopne
mov
scas
cwde
jb
int
repz
das
sbb
cld
movs
pop
mov
lds
ins
and
mov
add
test
loope
retf
jge
mov
mov
pop
dec
call
pop
cmp
cmp
mov
mov
push
pop
mov
sbb
push
and
and
gs
fld
in
stc
dec
xchg
mov
pop
cmps
adc
lds
into
stc
dec
gs
les
cmc
fwait
(bad)
and
inc
cmps
cmc
pop
cmps
adc
pop
xlat
push
daa
mov
push
clc
fwait
and
idiv
mov
mov
es
lea
(bad)
jns
(bad)
stos
push
push
bound
fmulp
push
add
jg
ja
dec
jne
xor
xlat
xchg
sub
push
hlt
lods
daa
inc
in
call
xrelease
push
or
lods
pop
(bad)
call
and
inc
(bad)
rcl
gs
mov
pop
inc
adc
inc
push
push
mov
inc
xchg
test
or
and
mov
push
fsubr
jge
jp
sbb
aaa
jmp
sub
cmp
stos
rol
adc
cli
imul
popf
mov
ss
adc
test
pop
in
mov
leave
cli
sub
data16
pop
adc
(bad)
push
sahf
movs
rep
cwde
or
mov
fisubr
cmps
mov
mov
and
adc
xlat
pop
xchg
loope
mov
fdivr
mov
int3
leave
cmp
(bad)
sub
retf
adc
add
(bad)
lods
dec
lock
jne
push
movs
pop
mov
and
cli
popa
dec
shl
cs
shl
mov
dec
imul
sbb
jb
sahf
xchg
ss
ins
adc
cmps
aad
les
hlt
cmp
dec
dec
mov
or
xchg
push
pusha
(bad)
fcomp
mov
(bad)
adc
je
loope
scas
pop
sbb
or
lahf
pop
sbb
nop
and
jne
xchg
loopne
mov
cli
fistp
xor
icebp
jnp
inc
mov
inc
mov
push
js
test
ja
add
lods
daa
or
jp
push
mov
loopne
inc
inc
daa
sub
jg
adc
int
or
out
push
aaa
jmp
movs
adc
idiv
jge
push
or
pminsw
ja
sub
push
(bad)
(bad)
or
mov
adc
ins
add
xchg
sub
mov
scas
es
and
das
jb
icebp
mov
fs
jge
sbb
mov
xor
pop
cmp
xchg
imul
fimul
mov
xchg
inc
sub
popa
in
(bad)
mov
lea
pop
call
adc
mov
cmps
inc
inc
les
sub
(bad)
mov
jmp
cmp
pushf
jl
mov
mov
jae
ret
movs
daa
sbb
scas
pop
aam
dec
in
cwde
pop
inc
add
adc
shr
and
mov
outs
jecxz
jg
sbb
call
jl
scas
mov
ds
and
mov
popf
inc
rcr
aad
adc
(bad)
fisubr
cmps
pop
dec
cmp
loop
ds
and
cs
or
inc
cmp
cmps
adc
cwde
pop
mov
aad
xor
pushf
jb
out
je
xchg
pop
xor
add
mov
repnz
sbb
cli
repnz
push
lods
outs
xor
xchg
imul
mov
sbb
mov
cwde
sub
dec
mov
push
stc
adc
sti
pop
in
in
hlt
jae
xor
adc
dec
ds
out
mov
enter
js
mov
push
enter
out
or
and
push
pop
inc
mov
mov
and
jle
pusha
inc
dec
fisubr
lods
and
icebp
jmp
out
mov
icebp
cmc
lock
xor
arpl
cli
or
push
jnp
mov
push
in
sbb
clc
neg
mov
push
cmp
in
sbb
mov
mov
push
test
lahf
stos
out
jg
cmp
call
pop
fmul
or
repz
or
mov
outs
push
ret
je
mov
lods
add
stos
addr16
fsub
mov
stos
xchg
int3
cs
mov
dec
lea
js
fild
div
adc
xlat
iret
xor
mov
cmc
jg
push
sub
dec
(bad)
mov
push
push
mov
jae
fdiv
mov
aaa
fsubrp
inc
mov
xor
inc
enter
retf
(bad)
mov
movs
jb
fist
daa
stos
js
jb
fdivr
lods
call
inc
rol
in
aad
dec
test
sub
in
daa
in
xchg
fiadd
xchg
(bad)
fsubr
out
add
mov
push
jmp
or
(bad)
mov
dec
cmp
jb
int3
je
(bad)
and
in
xor
push
test
imul
cmps
popa
cwde
in
pop
repz
fwait
adc
sub
push
pop
push
scas
les
(bad)
sti
add
mov
je
inc
adc
mov
or
out
popa
shl
add
div
mov
xor
inc
dec
retf
cmps
pusha
sub
pop
or
or
ins
and
mov
xchg
push
popa
inc
call
and
mov
dec
enter
in
adc
ins
mov
call
sbb
sub
aam
fld
or
jmp
push
fldcw
lods
cmps
nop
mov
rol
out
fs
cli
inc
dec
xor
mov
cmp
jo
mov
add
arpl
push
test
cmp
cs
jmp
(bad)
js
movs
push
enter
and
xchg
fcom
xchg
pop
(bad)
adc
sbb
adc
jmp
fbstp
xlat
mov
add
cmp
lods
or
mov
ja
loope
adc
cld
jmp
cwde
adc
outs
mov
jnp
loope
cli
cmps
stos
sar
mov
cmp
and
mov
movs
ins
ret
sub
push
jle
clc
test
iret
mov
push
sub
dec
into
jmp
(bad)
mov
jo
daa
xor
rol
sahf
rcr
test
ins
ret
xchg
mov
into
xor
retf
fdivrp
cmps
in
mov
popf
cmp
jecxz
idiv
hlt
fsub
add
icebp
int3
call
lods
ins
dec
leave
mov
inc
jecxz
sbb
push
or
inc
cmp
lahf
dec
dec
pusha
push
fwait
aaa
daa
mov
ficom
jmp
xlat
cmp
mov
or
gs
retf
sub
(bad)
fst
retf
push
mov
jecxz
xor
or
inc
xchg
cs
add
movs
mul
push
imul
arpl
ss
aad
jp
sbb
call
pop
jns
dec
loope
es
outs
popa
shl
sbb
inc
mov
inc
ficom
mov
out
addr16
mov
jnp
ror
mov
push
enter
test
mov
pop
movs
sar
dec
lods
sbb
cwde
push
and
dec
stos
jmp
sub
jo
daa
sbb
mov
les
push
mov
dec
clc
add
(bad)
pop
inc
dec
pop
mov
push
mov
scas
div
aaa
out
inc
xor
mov
sbb
adc
mov
leave
jo
inc
push
sbb
mov
rcr
pop
icebp
add
cmp
xchg
retf
aad
loopne
in
dec
push
mov
imul
fs
shr
loop
mov
nop
pop
sub
into
jae
dec
add
cmovnp
sar
or
xor
dec
sbb
jae
push
push
dec
int3
mov
mov
cwde
int
mov
addr16
dec
sub
cmp
sub
sahf
rcr
movs
sbb
dec
fnstcw
fidiv
jb
mov
push
das
dec
inc
sub
add
xchg
cld
mov
outs
test
push
or
imul
mov
push
mov
test
xchg
add
retf
test
xchg
js
in
outs
fdivr
pushf
in
nop
nop
jbe
mov
ret
out
cmps
lock
sysret
xor
push
inc
cmp
jb
sbb
pop
pop
xchg
adc
jmp
sub
rcl
pop
sbb
lods
jns
rcl
mov
mov
aam
ror
shld
bound
fiadd
pop
scas
mov
enter
fsubr
cmps
or
div
push
mov
mov
mov
in
inc
push
or
into
mov
dec
push
leave
mov
mov
jae
jmp
mov
pcmpgtb
rcr
push
dec
jl
es
xchg
call
xchg
clc
adc
jns
jp
repnz
hlt
leave
xchg
inc
cmp
mov
fcmovu
or
mov
xchg
pop
fldcw
les
dec
mov
inc
lods
daa
popf
lahf
jnp
pop
jns
ds
xchg
shr
mov
inc
mov
lds
fwait
(bad)
mov
out
cmp
je
inc
fdivr
(bad)
iret
mov
sti
mov
adc
rcr
jmp
into
repz
or
sub
add
cmp
jnp
cmp
pop
push
mov
(bad)
cld
sbb
jae
loope
cmp
and
ds
jp
lahf
and
cmp
inc
shl
push
pop
xchg
xlat
ds
pop
or
push
mov
scas
aad
clc
ds
daa
adc
pop
repz
lahf
clc
or
add
popa
daa
dec
dec
imul
mov
cwde
pop
fistp
into
in
jl
mov
dec
sahf
jbe
mov
aaa
push
je
(bad)
retf
or
mov
daa
xor
stos
cmp
das
inc
or
popa
dec
test
inc
loopne
dec
sbb
(bad)
sub
inc
inc
mov
xchg
pusha
mov
repnz
xor
aas
xchg
adc
enter
dec
arpl
leave
mov
cdq
mov
jo
call
ins
int
rcr
mov
push
push
cmc
sti
fisubr
push
push
jmp
sbb
xchg
dec
pop
pop
or
ins
mov
retf
inc
sub
shr
pop
inc
(bad)
ins
adc
out
pop
inc
xchg
dec
xchg
scas
cmp
ds
xor
jmp
je
int3
in
imul
sbb
xor
push
(bad)
(bad)
xchg
inc
mov
jo
aad
mov
jecxz
jecxz
inc
pop
loope
pop
imul
add
aaa
shl
adc
lock
aas
(bad)
cld
repz
aas
(bad)
cld
repz
add
pop
pop
inc
add
inc
dec
push
lods
add
add
dec
inc
dec
inc
scas
inc
pusha
or
add
add
add
(bad)
(bad)
inc
add
add
add
add
add
add
jns
je
ins
cs
jb
ja
outs
addr16
push
gs
imul
xor
xor
inc
jne
je
jb
cmp
jb
ins
sub
push
jne
ins
imul
imul
bound
xor
data16
xor
fs
add
adc
gs
cs
jb
ja
outs
addr16
imul
add
popa
je
pop
add
add
add
add
add
lsl
add
les
add
add
or
or
add
or
add
add
add
add
or
add
add
pusha
outs
rol
add
add
inc
dec
inc
add
mov
or
popa
add
jo
pop
jae
add
ret
add
push
ret
add
outs
test
add
adc
inc
inc
push
pop
inc
in
iret
add
add
out
jmp
cmp
pop
fwait
ds
out
cwde
out
call
xor
cmp
pushf
bound
ret
imul
(bad)
mov
cmp
add
in
adc
mov
pop
out
cmp
lods
les
jmp
ret
fwait
pop
rol
xchg
mov
xchg
sub
into
fimul
mov
mov
mov
retf
lahf
mov
push
inc
out
out
xchg
or
cmps
cmps
mov
xor
sbb
push
scas
jl
in
icebp
fsubp
dec
daa
inc
mov
cdq
mov
jg
mov
cmp
push
jmp
std
cmp
test
jmp
mov
mov
sbb
dec
test
or
stos
in
push
dec
fidiv
cdq
xor
(bad)
pop
fst
and
or
jp
sub
fiadd
push
(bad)
movs
mov
fld
jmp
xchg
inc
sub
popf
shl
push
or
jo
test
xchg
movs
dec
in
clc
fsub
cmps
mov
test
sub
mov
cdq
ds
test
sbb
movs
mov
stos
add
ss
cwde
add
dec
test
lahf
inc
xchg
jge
jb
sub
mov
leave
sbb
and
scas
fstp
push
popf
cmp
dec
or
jne
mov
mov
test
add
loope
push
xchg
addr16
xor
jno
pop
mov
pop
sbb
les
sub
pushf
retf
fmul
sub
ror
cmps
mov
xlat
lods
lock
(bad)
scas
mov
cmps
sbb
mov
fwait
push
mov
fmul
scas
mov
xchg
(bad)
sar
pop
mov
mov
mov
outs
mov
retf
call
shr
je
sbb
adc
add
or
mov
(bad)
push
lea
cmps
lea
or
jns
mov
ror
les
mov
pop
das
aam
mov
ss
pop
in
in
bound
sbb
in
test
in
xor
ror
out
js
js
cmp
push
fsub
retf
jl
fsubr
mov
mov
sub
dec
xchg
jecxz
iret
xor
push
addr16
mov
inc
fimul
sbb
xchg
jno
dec
jl
or
mov
call
jl
cmps
inc
les
and
xor
leave
jg
xchg
add
das
std
shl
and
pop
cwde
sti
or
or
and
pop
xchg
retf
es
jmp
sbb
and
loope
addr16
(bad)
es
cs
aaa
gs
and
rcr
outs
ret
scas
mov
pop
sar
mov
cmp
mov
jl
das
fs
jl
push
or
retf
add
pop
pop
mov
and
sbb
test
mov
jae
mov
shl
and
cwde
mov
pop
sub
clc
xchg
pop
dec
mov
sahf
jmp
xchg
aam
xor
(bad)
movs
out
test
mov
call
add
aam
jbe
jl
retf
(bad)
push
xchg
pop
(bad)
jl
in
test
mov
test
repz
call
add
sub
xor
shl
xchg
mov
push
cmp
mov
and
mov
pop
push
xchg
in
ss
out
mov
aas
mov
cmp
call
test
out
add
(bad)
movs
xor
inc
mov
mov
aas
nop
mov
push
jg
mov
(bad)
sub
adc
lahf
inc
xchg
push
dec
lods
lahf
mov
test
add
sub
jg
xchg
add
iret
leave
cmps
shl
adc
mov
mov
pusha
mov
mov
xchg
jns
call
test
out
aas
retf
xchg
pop
mov
aas
daa
jne
mov
jle
mov
shl
dec
cmp
shr
call
mov
or
jns
cmps
test
xchg
fwait
dec
fdiv
mov
int3
push
daa
pop
xchg
push
mov
arpl
or
xor
xchg
inc
xor
pop
test
push
std
xor
outs
cld
and
dec
or
dec
fist
add
and
push
aad
movs
addr16
aaa
int3
mov
sub
mov
xor
sbb
cdq
sbb
xchg
lods
int3
cs
pop
loope
add
cmp
scas
xchg
xor
xlat
cmp
xchg
iret
adc
fisub
rcl
int
jmp
mov
hlt
mov
pop
pop
pop
or
jb
jmp
or
add
ret
outs
add
clc
jmp
xor
scas
and
xchg
loopne
or
test
(bad)
sub
lods
adc
mov
pop
fsub
add
mov
clc
mov
dec
imul
and
pusha
js
shr
mov
xchg
and
adc
push
js
xor
aas
push
iret
mov
add
ss
and
js
mov
repnz
xchg
loop
mov
lahf
sub
dec
cs
jo
jnp
pop
inc
fmul
dec
retf
mov
arpl
jecxz
test
adc
pop
out
mov
push
sub
rol
int
(bad)
stc
outs
das
test
aas
pusha
dec
cmps
dec
jnp
and
mov
pusha
mov
in
jecxz
jl
outs
mov
jg
std
xchg
sub
leave
add
fs
dec
rdmsr
lds
je
pop
pop
adc
popa
mov
sbb
dec
lods
mov
push
repnz
ret
addr16
add
jmp
jg
mul
arpl
mov
fmul
scas
mov
into
jg
movs
cmp
(bad)
out
cmc
and
xor
jnp
fucomip
fnsave
pop
aaa
jmp
xchg
mov
xchg
js
or
xor
push
inc
xchg
out
jno
test
push
fstp
movs
aas
cmp
mov
ror
pusha
and
push
imul
daa
dec
add
cmp
shl
cmp
add
loope
cli
jg
xor
stos
xor
adc
gs
in
jmp
dec
and
push
pop
data16
mov
scas
out
call
leave
xchg
(bad)
xchg
dec
jbe
or
mov
ja
sub
idiv
dec
adc
stos
lea
(bad)
(bad)
jno
jno
popa
fidivr
scas
movs
js
sub
fnstcw
pop
pop
push
inc
jge
sub
mov
adc
ins
dec
lds
dec
test
mov
add
xor
sbb
cli
mov
jg
jecxz
jnp
jb
pop
mov
cwde
inc
mov
push
sti
lods
inc
in
shr
shl
test
repnz
int3
fs
ret
mov
je
out
fmul
pop
aas
xor
push
mov
inc
lock
push
jbe
pop
leave
mov
pop
fcmovne
rol
cmp
je
mov
add
dec
outs
cmps
cli
dec
mov
push
dec
retf
fnstenv
and
push
sub
hlt
or
xor
sahf
sar
call
jge
jmp
mov
push
push
or
cs
ins
and
stos
mov
fisttp
aaa
in
outs
mov
js
scas
pop
mov
pop
pop
mov
jl
jge
sbb
mov
aaa
mov
(bad)
scas
scas
(bad)
data16
(bad)
jbe
push
adc
xor
dec
sbb
dec
push
sub
popf
inc
clc
and
sbb
movs
mov
mov
pop
mov
nop
fldenv
nop
push
pop
xor
hlt
xchg
(bad)
push
pop
je
(bad)
ja
stos
sbb
aas
lea
jmp
fldcw
(bad)
cmc
and
lods
shl
mov
mov
pushf
retf
scas
sub
data16
outs
or
mov
iret
repnz
mov
push
(bad)
push
and
xchg
test
push
out
bound
dec
pop
(bad)
mov
mov
dec
jg
fisubr
repnz
cmc
adc
rcl
shr
or
or
sbb
and
movs
cmp
nop
cmp
jo
movs
(bad)
cmc
or
(bad)
jo
pop
outs
adc
stos
imul
mov
sbb
retf
cmps
movs
lock
clc
repnz
jae
lock
retf
sbb
dec
and
add
mov
push
mov
push
leave
jecxz
dec
jg
js
or
addr16
ins
xchg
rcl
cmp
mov
xchg
jo
cli
(bad)
mov
cmp
movs
mul
inc
mov
sbb
out
xor
iret
dec
cmp
jno
sbb
xor
mov
ficomp
enter
pop
cmp
xor
data16
xchg
jp
cmc
mov
mov
mov
sbb
(bad)
pusha
xchg
aaa
movs
sub
jge
in
out
je
loopne
xchg
bound
outs
sub
adc
mov
sub
outs
stos
jg
and
div
mov
fistp
sbb
push
shl
stos
mov
js
mov
inc
pop
iret
mov
inc
jecxz
cmp
mov
push
mov
lahf
sar
das
pop
mov
jbe
cmc
movs
xchg
dec
repnz
and
xor
or
xor
or
ss
jb
inc
ins
jns
mov
test
nop
adc
test
xchg
fs
sti
xor
ins
call
jno
mov
and
fnsave
imul
outs
jle
sar
pop
inc
movs
jl
inc
pusha
test
mov
jmp
mov
cli
jle
ja
dec
mov
jo
push
adc
fwait
icebp
call
cmp
fadd
jo
sbb
add
leave
cmp
je
jno
std
mov
and
cmp
sti
fld
xor
or
sbb
aam
scas
pop
dec
xchg
cdq
test
add
fs
imul
pop
bound
mov
or
sti
fld
in
sti
inc
cmp
pop
dec
xchg
or
inc
les
dec
xchg
cwde
cmp
stc
loop
push
mov
jb
xor
xchg
or
repz
imul
adc
mov
into
cmp
fidiv
cmp
pop
cwde
fsub
into
fsubr
hlt
jne
sbb
int3
mov
mov
push
xchg
(bad)
jb
dec
jmp
cmp
ins
xchg
cmc
mov
or
sub
pop
mov
or
sub
popf
cs
gs
sub
inc
add
sbb
xchg
pop
pop
sub
cwde
and
lahf
int3
or
push
je
lea
xor
cdq
xor
push
push
jb
jge
retf
dec
in
jmp
bound
test
fs
sbb
xchg
adc
out
sbb
push
push
ret
imul
popa
adc
mov
jmp
daa
leave
adc
push
enter
jl
imul
xchg
mov
call
push
xor
mov
sub
cmps
into
jno
inc
adc
push
add
dec
push
mov
ficom
dec
inc
push
mov
xlat
xchg
pop
pop
fs
jbe
stc
pop
push
in
xlat
call
xchg
sahf
test
inc
stos
les
add
loope
test
aad
adc
ja
or
pop
lods
mov
mov
pop
mov
shr
sbb
imul
(bad)
vcmpnlesd
stc
inc
retf
and
or
repnz
in
into
and
arpl
push
sub
xchg
bound
mov
ror
arpl
pop
xchg
cmp
xor
xor
sbb
adc
pop
hlt
cmp
in
mov
jg
sar
mov
mov
inc
(bad)
and
jg
call
sbb
push
dec
jecxz
cmp
xor
cmp
mov
movs
pushf
xchg
adc
xchg
fnstenv
and
repz
ffreep
xor
mov
sbb
shl
std
sti
addr16
jbe
cld
mov
mov
pop
call
inc
call
fs
cmp
xchg
(bad)
js
xor
dec
cld
imul
add
mov
repz
cmc
shr
fadd
jmp
dec
mov
shr
out
xchg
add
rcr
out
imul
and
or
pop
xchg
jo
mov
outs
pusha
pop
push
xchg
push
ins
das
pusha
mov
stc
jle
inc
cs
xor
out
xchg
xor
add
leave
inc
ja
cmps
ss
test
xchg
jle
xchg
cmps
and
fisubr
sub
nop
or
add
pop
rcr
lods
jnp
call
or
das
sbb
fwait
pop
lock
outs
mov
mov
cld
retf
leave
fiadd
(bad)
or
rol
add
hlt
loop
call
cmp
or
gs
(bad)
adc
add
pop
test
mov
aad
and
loop
ret
mov
fwait
stos
jne
pop
inc
xchg
imul
cmp
jp
in
mov
call
test
push
adc
lock
inc
shl
js
mov
arpl
inc
cmc
mov
scas
leave
fstp
enter
les
xor
in
sbb
jnp
mov
mov
(bad)
ror
ret
popa
in
or
mov
push
add
cmp
mov
jmp
out
or
pop
ret
test
das
fs
mov
add
mov
out
jmp
push
xor
or
stos
add
add
mov
retf
(bad)
push
rcr
add
test
push
lahf
pop
mov
aad
push
dec
pop
cmps
xchg
mov
mov
test
lds
popf
movs
in
push
retf
loope
or
mov
sbb
inc
inc
lods
fmul
adc
sahf
cs
cmps
mov
fist
in
dec
jno
(bad)
pop
loopne
imul
jns
in
jae
mov
js
push
scas
and
in
js
pop
lea
inc
sub
cwde
adc
and
dec
shl
std
mov
mov
popa
scas
fisttp
(bad)
dec
pusha
ret
icebp
ret
sub
xchg
xchg
add
inc
push
addr16
sahf
into
(bad)
fdiv
mov
(bad)
adc
test
(bad)
jno
iret
dec
cmp
je
add
mov
mov
xchg
push
fs
mov
xlat
xchg
ja
jno
(bad)
dec
rcr
ja
push
xchg
adc
cld
sbb
loope
push
xchg
sub
stc
enter
dec
xchg
sbb
xchg
shr
nop
xchg
push
daa
push
(bad)
outs
xchg
jp
pop
inc
xchg
adc
cdq
xchg
(bad)
out
mov
es
lds
in
cmps
outs
retf
ins
xchg
mov
xchg
push
cli
jg
dec
fcomp
retf
ins
cli
loope
lahf
or
xlat
inc
cmps
push
xchg
shl
push
fs
or
mov
mov
fadd
into
sbb
xor
push
push
jmp
test
jmp
xchg
sub
lods
adc
ss
sub
js
scas
sub
popa
ins
movs
ja
cmp
cmp
xor
sbb
cwde
pop
lahf
and
call
pushf
arpl
dec
scas
push
mov
int3
jnp
or
aam
jb
sub
pushf
add
sbb
cmp
mov
dec
pop
sbb
mov
pop
jbe
push
and
iret
out
or
stos
dec
(bad)
push
daa
test
and
dec
pop
mov
(bad)
rcl
dec
push
hlt
mov
and
loopne
out
aam
out
icebp
push
cs
push
inc
and
stc
loop
mov
xchg
sbb
jo
sub
icebp
dec
cmp
or
push
inc
mov
inc
and
into
sub
cmp
je
aad
jmp
inc
adc
jbe
movs
cmp
push
(bad)
stc
out
jg
stc
out
jg
pop
add
call
pop
add
add
dec
inc
scas
inc
pusha
or
add
add
add
(bad)
(bad)
inc
add
add
add
add
add
add
jns
je
ins
cs
jb
ja
outs
addr16
push
gs
imul
xor
xor
inc
jne
je
jb
cmp
jb
ins
sub
push
jne
ins
imul
imul
bound
xor
data16
xor
fs
add
adc
gs
cs
jb
ja
outs
addr16
imul
add
popa
je
pop
add
add
add
add
add
lsl
add
ret
add
mov
inc
or
add
or
add
add
add
add
or
add
add
pusha
outs
rol
add
add
inc
dec
inc
add
mov
or
popa
add
jo
pop
jae
add
ret
add
push
ret
add
outs
test
add
adc
inc
push
pop
inc
in
rol
add
scas
cwde
outs
es
(bad)
hlt
je
mov
sahf
out
arpl
cmp
arpl
mov
aam
fwait
cmp
es
sti
js
lahf
xlat
lock
loop
lods
jno
push
retf
jmp
adc
and
xchg
jp
cli
xchg
ja
call
scas
xor
movs
ss
lock
aaa
in
and
gs
enter
(bad)
sub
inc
lock
dec
add
xor
and
jge
lea
dec
inc
inc
rol
dec
hlt
xchg
cmps
mov
ins
scas
push
movs
rcr
inc
cmp
test
lods
and
(bad)
and
(bad)
sbb
mov
or
xchg
ret
ror
adc
repnz
cmp
jno
(bad)
dec
jns
in
jbe
jp
mov
xor
inc
std
pusha
not
xor
and
push
inc
fidiv
push
pop
cdq
aas
xchg
pop
sub
movs
int
jmp
call
imul
sub
mov
call
or
fbld
cmp
lahf
dec
sbb
cmc
lea
jno
(bad)
out
pop
cmp
popf
arpl
dec
outs
xchg
and
fcom
not
in
(bad)
xor
add
es
cdq
dec
ror
xchg
stos
int3
movs
xchg
mov
in
lahf
xchg
fldz
retf
lea
cmc
ficom
popf
int
int
sub
mov
mov
push
test
mov
outs
fild
mov
addr16
mov
jl
pop
lock
cmp
push
xlat
(bad)
aad
cmc
in
xor
jnp
dec
les
(bad)
scas
stos
call
in
mov
push
mov
lea
test
xchg
adc
and
or
or
in
xor
push
and
jge
int3
push
mov
xchg
int
mov
leave
push
test
call
inc
xchg
or
hlt
into
gs
sub
sar
mov
cmp
dec
or
adc
cmp
sbb
and
je
push
and
fwait
hlt
push
or
in
test
(bad)
xchg
retf
lods
or
(bad)
sti
xchg
mov
mov
xchg
pop
cwde
movs
lds
fld
pop
ja
push
clc
mov
in
ret
mov
(bad)
mov
arpl
mov
pop
in
jge
call
pop
repnz
xchg
mov
sbb
dec
shl
lock
clc
sbb
sub
call
adc
jb
mov
xor
add
add
fistp
inc
jb
cld
inc
popa
sahf
jmp
sar
(bad)
xor
xchg
mov
stc
dec
nop
retf
mov
sbb
cmc
fcmovbe
mov
xchg
and
ja
outs
xor
xor
xchg
je
pop
jns
test
lahf
add
(bad)
fs
leave
call
and
out
ss
imul
jmp
mov
mov
ror
iret
cld
clc
sbb
(bad)
btr
movs
push
iret
lahf
push
call
pop
test
imul
inc
arpl
xor
xchg
imul
ins
sub
std
pop
sub
xor
(bad)
jmp
out
jmp
loopne
xor
call
cmp
outs
int
pop
push
pushf
stos
data16
aaa
add
xchg
(bad)
jb
xor
fnstenv
or
int3
pop
mov
xor
cdq
dec
xor
jge
test
sub
cld
dec
add
cmp
adc
xchg
xor
mov
out
fbstp
imul
inc
cld
ror
test
jo
fdivr
pop
fdivr
mov
popa
and
inc
test
sbb
les
movs
scas
scas
or
and
jmp
(bad)
inc
sub
leave
xchg
and
(bad)
movs
cmps
and
test
inc
push
in
mov
retf
mov
mov
cmp
cli
ins
inc
sub
fldenv
mov
out
lea
sub
mov
push
sub
cld
or
(bad)
ins
mov
lahf
pop
sahf
jg
inc
xchg
xor
repnz
sbb
adc
cmp
jmp
pushf
cmp
data16
and
test
inc
dec
sbb
adc
xor
movs
lahf
mov
shl
xlat
outs
mov
(bad)
hlt
adc
out
pop
bound
xchg
mov
mov
mov
sub
mov
cmp
xchg
mov
xor
(bad)
(bad)
nop
push
xchg
mov
cmps
pop
dec
imul
push
sub
imul
xchg
inc
xchg
test
xor
mov
jecxz
aaa
add
xchg
out
das
outs
je
push
push
cmp
test
icebp
or
bound
iret
push
(bad)
ins
mov
xchg
xor
dec
push
int
das
das
dec
jmp
jo
js
pop
test
add
mov
lods
inc
sbb
xchg
fwait
aaa
out
add
cmp
movs
out
fimul
xlat
cs
and
out
push
adc
or
in
mov
lahf
inc
dec
dec
jb
mov
fnstcw
cmc
cmp
les
sub
stc
jmp
mov
sub
inc
push
jno
call
pop
pop
imul
cmps
push
int
stc
sub
adc
ss
loopne
jne
xchg
mov
sub
retf
and
fstp
dec
pop
add
xchg
sahf
pop
jo
push
or
popf
scas
cmp
gs
mov
dec
or
bnd
sub
inc
test
js
pop
dec
mov
lods
xlat
mov
jl
arpl
dec
push
ror
xchg
lods
xchg
and
mov
loope
imul
sub
add
loop
dec
shl
pop
push
push
jg
sbb
fld
jo
pop
sub
pop
icebp
and
push
leave
imul
fst
push
inc
dec
rcl
sub
xchg
mov
sub
popf
outs
aad
aaa
mov
mov
sti
icebp
xor
mov
stc
mov
dec
adc
aaa
loop
into
sahf
scas
dec
movs
arpl
fsubr
ds
jae
jge
repz
inc
out
or
jmp
pushf
imul
pop
fild
mov
xor
cmp
popf
mov
hlt
repz
ds
inc
mov
mov
imul
fidiv
test
inc
mov
fmul
(bad)
(bad)
iret
pop
adc
push
jg
adc
movs
xor
jg
std
pop
xor
fwait
test
sbb
shl
test
pop
pop
dec
test
cwde
lods
xchg
cmp
dec
loop
cmp
jmp
outs
xor
mov
sub
sbb
jne
mov
mov
xchg
rol
pop
iret
daa
xchg
mov
sub
imul
or
rcr
imul
mov
in
mov
mov
pop
fimul
sti
clc
jecxz
rep
movs
pop
jl
(bad)
movs
cmps
dec
pop
push
out
xchg
test
sub
sub
xor
lea
mov
cwde
sbb
(bad)
(bad)
mov
xor
cmps
inc
xchg
enter
push
mov
mov
outs
ds
inc
iret
stc
into
inc
(bad)
mov
aam
dec
fstp
cmp
jne
dec
outs
inc
lods
pop
shl
push
leave
rcl
dec
sub
inc
jns
dec
xchg
mov
xor
hlt
mov
dec
(bad)
jae
jmp
ror
dec
ins
mov
or
xor
push
lods
push
pop
call
mov
adc
or
xchg
mov
pop
sbb
int
mov
aad
cmp
adc
xchg
push
xor
xchg
lds
dec
cmp
(bad)
push
mul
jmp
dec
pop
jge
movs
mov
sub
inc
dec
aas
mov
sbb
jp
inc
aaa
mov
pop
aas
xor
nop
pop
jne
and
mov
push
xor
mov
test
cwde
adc
inc
xchg
mov
ins
sbb
fcomp
push
mov
mov
sub
pop
mov
ins
sbb
dec
sahf
repz
mov
inc
ffree
(bad)
mul
loope
out
cmc
aad
add
fwait
cmc
out
mov
xchg
push
or
rcr
and
adc
inc
dec
xor
cmc
in
jno
(bad)
jnp
xchg
inc
repz
pop
push
sbb
fs
adc
push
cmc
inc
iret
adc
adc
mov
and
es
push
jp
in
aaa
xchg
push
shl
jp
inc
aaa
add
xchg
push
inc
dec
sar
ds
jnp
pop
push
xor
pusha
daa
xchg
cmp
adc
mov
aam
pop
and
cdq
sahf
enter
ret
and
jge
int3
popf
test
and
jnp
adc
jno
mov
pop
pushf
test
pop
jmp
js
loope
jge
retf
pop
arpl
retf
inc
xchg
adc
adc
sbb
std
int
cmp
jecxz
jnp
(bad)
jno
sub
ret
pop
jmp
(bad)
(bad)
cwde
mov
mov
aad
inc
iret
in
addr16
mov
fst
out
sub
and
movs
add
or
aad
jge
and
int3
inc
sbb
repz
aad
mov
push
jns
loope
mov
xchg
pushf
retf
mov
test
adc
popa
in
mov
and
ficom
ins
icebp
(bad)
and
and
xchg
mov
xor
jmp
or
push
dec
push
mov
pop
pop
cmps
jg
rol
in
mov
inc
ret
shr
jge
stc
out
lahf
and
data16
mov
(bad)
out
jmp
mov
ins
test
in
fcmovu
sub
outs
mov
add
icebp
icebp
push
fwait
scas
adc
jno
sub
ja
jns
mov
add
in
adc
ret
mov
sub
arpl
test
xchg
cmp
fst
xchg
or
mov
retf
cwde
scas
jle
leave
loope
jmp
pop
test
daa
mov
je
les
dec
adc
add
jecxz
xchg
xchg
rdtsc
retf
or
push
enter
retf
and
xor
mov
sahf
repz
mov
lock
call
xor
fisttp
pop
dec
enter
and
jp
add
nop
jecxz
pusha
aas
div
addr16
xor
ret
mov
cmp
nop
fist
idiv
jg
ret
jl
jge
jns
jmp
int
push
mov
and
loope
ja
pop
lock
nop
mov
test
push
mov
inc
mov
outs
in
popf
mov
mov
mov
dec
test
sub
std
jne
push
adc
imul
dec
mov
add
jl
adc
cmp
and
xchg
pop
shl
push
or
xchg
mov
sub
aas
push
sar
cwde
push
xchg
jl
adc
test
push
retf
jp
aam
pop
das
push
out
cdq
call
mov
xchg
mov
les
cmp
in
dec
fs
fsubp
sbb
cmp
data16
popf
mov
popa
xchg
push
mov
and
sbb
xchg
push
adc
mov
xchg
mov
push
int3
add
mov
(bad)
repz
mov
jnp
fmul
rcr
(bad)
mov
xor
test
int3
jmp
fst
and
scas
test
das
sbb
pop
sbb
(bad)
sub
pop
movs
iret
jne
cs
test
outs
ret
fld
cdq
dec
push
stos
inc
mov
sahf
arpl
bound
mov
jl
mov
fcomp
or
fcmovu
ror
add
dec
jno
pop
push
mov
jg
sbb
in
ret
test
jbe
cmps
mov
not
jl
aam
jns
push
and
movs
ins
pop
pop
pushf
push
xor
in
xchg
mov
sahf
sub
out
and
xchg
adc
out
ss
addr16
xchg
fimul
out
into
sbb
sub
cmp
jl
add
outs
xlat
push
std
mov
call
scas
(bad)
pop
mov
adc
mov
xchg
inc
rcl
pop
pop
imul
(bad)
fbld
sub
add
pop
aaa
push
sbb
aad
cwde
call
push
sahf
movs
ror
xchg
xchg
or
adc
sahf
out
and
ins
je
(bad)
or
imul
fild
retf
sbb
jae
daa
xchg
call
mov
pop
(bad)
or
xor
push
xor
ror
(bad)
dec
mov
mov
jb
pop
jmp
scas
mov
shl
mov
pop
xchg
cmps
adc
and
test
or
adc
stos
pop
push
test
leave
sub
lods
pop
pop
mov
jbe
pop
mov
out
jnp
lahf
push
imul
cmp
cmp
cmp
xchg
movs
mov
div
pushf
mov
cs
ins
or
out
pop
inc
sbb
pop
add
xchg
push
inc
jg
aam
fadd
outs
jnp
cli
pushf
mov
arpl
and
or
dec
arpl
sahf
jae
cmp
daa
addr16
out
pop
mov
fcmovnu
xchg
bound
ror
jge
repz
std
inc
aaa
cmp
lods
out
add
and
pop
mov
push
popa
or
stos
adc
jno
aas
mov
lods
lods
pop
and
call
and
add
cmp
(bad)
jg
aas
cmp
stos
sbb
shl
dec
mov
mov
mov
xchg
loope
repz
mov
or
jo
movs
sub
sub
mov
rcr
iret
dec
retf
cs
push
mov
mov
xor
mov
adc
(bad)
mov
push
push
dec
(bad)
jne
xchg
mov
mov
jb
into
dec
and
(bad)
mov
js
xchg
fbstp
sub
pusha
pop
or
movs
loop
and
dec
sub
gs
jo
mov
test
sub
loop
jmp
call
xor
imul
loopne
movs
cmp
push
add
loope
pop
stos
push
jmp
and
arpl
mov
rol
(bad)
lods
mov
shr
ja
out
xchg
push
je
adc
push
sub
ins
iret
mov
pop
xor
pop
mov
int3
shl
push
aam
xchg
call
pop
inc
cmp
sahf
mov
out
ss
sub
lods
call
div
fcomp
int3
jecxz
or
and
in
xlat
xor
sub
mov
inc
nop
ror
xchg
xchg
push
adc
sub
jmp
shl
jge
add
pop
add
pop
ins
sbb
and
lock
cli
xlat
mov
pop
ins
mov
jnp
inc
test
or
mov
jo
int3
jb
add
not
into
iret
ss
xor
mov
leave
sbb
in
mul
adc
xlat
or
jnp
movs
call
(bad)
lods
lock
lods
pop
pop
inc
fisubr
aaa
mov
ins
and
mov
icebp
adc
out
push
fwait
cmp
xor
lods
fs
or
out
push
mov
leave
call
popa
mov
jmp
int
mov
inc
das
test
xchg
sbb
jbe
push
out
push
dec
or
lahf
and
cdq
aaa
xchg
shl
std
and
mov
cmp
jnp
xchg
or
sar
dec
push
daa
ficom
int
add
loopne
mov
data16
dec
xchg
push
jp
sbb
dec
jge
fcmovb
dec
mov
fsub
repz
repz
mov
xchg
cwde
cmp
sub
adc
dec
cwde
cld
ins
xchg
inc
sbb
je
outs
cwde
sar
inc
push
push
shl
xchg
stos
ret
mov
push
leave
fimul
mov
mov
sbb
movs
(bad)
ins
jnp
shl
add
sahf
inc
jmp
in
aad
(bad)
jp
sub
mov
sahf
inc
adc
cld
out
(bad)
stc
iret
jg
repz
(bad)
cld
mov
ins
xchg
stc
aad
sbb
add
dec
inc
scas
inc
pusha
or
add
add
add
(bad)
(bad)
inc
add
add
add
add
add
add
jns
je
ins
cs
jb
ja
outs
addr16
push
gs
imul
xor
xor
inc
jne
je
jb
cmp
jb
ins
sub
push
jne
ins
imul
imul
bound
xor
data16
xor
fs
add
adc
gs
cs
jb
ja
outs
addr16
imul
add
popa
je
pop
add
add
add
add
add
lsl
add
mov
mov
inc
or
add
or
add
add
add
add
or
add
add
pusha
outs
rol
add
add
inc
dec
inc
add
mov
or
popa
add
jo
pop
jae
add
ret
add
push
ret
add
outs
test
add
adc
inc
inc
push
pop
inc
in
iret
add
add
scas
call
xlat
fdiv
jns
jbe
cmps
dec
sahf
mov
aas
ins
mov
cmp
shr
(bad)
mov
lock
ret
outs
loopne
fisttp
rdtsc
arpl
call
test
ss
cld
jne
fsubrp
loop
cdq
push
es
adc
arpl
fs
xor
pop
stos
sbb
and
inc
iret
in
push
ja
adc
push
dec
push
pop
in
adc
pop
clc
clc
sti
xchg
adc
mov
enter
movs
cwde
(bad)
adc
sbb
xor
pusha
jb
pop
or
scas
pop
fs
repz
ror
sbb
jbe
adc
arpl
or
pop
or
out
push
aad
sahf
fist
or
mov
jge
cmp
push
cmp
inc
inc
and
mov
adc
movs
cmp
sahf
in
sbb
int3
scas
lea
mov
inc
fist
pop
sbb
add
popf
xor
out
ja
and
test
rcr
inc
cmp
(bad)
cmps
adc
lea
jg
mov
aad
fiadd
bound
pop
loope
inc
pop
fxsave
add
push
(bad)
mov
adc
push
fcomp
mov
cmp
into
mov
push
pop
fdivr
les
adc
mov
push
jp
sbb
(bad)
cmp
cwde
mov
jbe
pop
pop
dec
or
jp
ins
adc
repz
enter
sub
push
jge
pop
sub
and
loop
rcr
jne
jns
aam
pop
out
sbb
and
inc
loop
sbb
pop
push
jg
std
cli
sti
sbb
inc
cmp
popf
mov
jns
inc
mov
mov
push
(bad)
xor
mov
jae
jae
stos
ins
pop
xor
add
pop
cwde
mov
cmp
jo
sti
or
sahf
dec
cmp
mov
gs
and
or
lea
pusha
ja
loop
mov
sbb
pop
aam
ss
in
sub
test
xchg
pop
push
mov
or
out
(bad)
mov
sti
push
sbb
mov
stc
arpl
cmp
mov
aas
in
fcomp
outs
ins
dec
call
pop
aas
jmp
xchg
loopne
stc
lahf
mov
iret
test
push
ds
imul
int3
jbe
imul
mov
shl
xor
fst
jno
fcmovnu
addr16
cmp
sbb
and
fld
nop
shl
sahf
fidiv
sti
test
or
call
addr16
xchg
mov
fs
in
adc
push
sbb
push
cld
pop
or
or
or
jg
aam
mov
dec
dec
xor
pushf
or
xchg
jle
push
mov
adc
cwde
pop
cmp
dec
sub
data16
xchg
and
call
mov
mov
retf
xchg
rcl
mov
mov
pop
pop
sub
fcom
out
aam
dec
and
pusha
aas
mov
sar
hlt
mov
push
adc
shl
push
sub
and
pand
je
xor
loopne
push
movs
outs
and
data16
push
dec
cs
sbb
int
add
mov
pusha
jge
retf
jecxz
mov
lahf
adc
pop
cmps
cmp
stc
adc
(bad)
stc
adc
xchg
add
pop
stos
ja
call
in
cwde
dec
pop
add
movs
sbb
(bad)
and
ret
icebp
ss
loope
add
pop
xchg
movs
cmp
leave
push
loop
imul
fst
dec
repnz
ins
vpaddw
call
and
sub
mov
popa
xchg
or
cdq
leave
mov
cmp
dec
fcmove
call
pushf
aad
add
jbe
aas
outs
mov
movs
arpl
bsr
out
cwde
sbb
push
adc
stos
in
pop
movlhps
push
stos
pop
fdiv
inc
and
movs
lods
pusha
mov
(bad)
outs
les
stos
cmp
mov
xor
mov
mov
sub
pop
push
xor
and
sbb
jle
jo
or
and
js
sbb
and
out
mov
inc
push
xor
push
ror
push
inc
aad
jb
imul
mov
xchg
(bad)
cli
jae
inc
enter
mov
dec
nop
mov
adc
xchg
fcmovnbe
xchg
jmp
in
push
test
jae
mov
cmps
jns
sti
in
cmovge
imul
sar
cmp
in
sti
inc
and
ss
cmp
jmp
es
sbb
mov
mov
xlat
repz
sbb
(bad)
and
xchg
sub
mov
not
and
cmp
imul
add
or
pop
dec
cmp
add
sti
xchg
pushf
mov
cmp
cli
pop
fsub
das
(bad)
cmp
js
pop
xchg
and
jne
and
scas
stos
aaa
fcmovu
or
inc
push
loope
cmp
retf
in
cmp
inc
dec
ffree
xchg
pop
sub
cmc
outs
ds
dec
sub
pop
push
adc
mov
lods
and
pop
pusha
cmps
es
mov
into
inc
std
inc
push
cmp
popa
cmp
ret
mov
mov
push
dec
or
sub
rcr
jnp
mov
ins
jmp
popf
mov
in
sbb
push
add
sub
xor
jbe
and
stos
and
sub
xchg
mov
paddusw
xor
jnp
inc
adc
ins
sbb
mov
aaa
inc
pop
or
jge
dec
or
retf
add
push
add
popf
cmps
push
out
in
adc
xchg
xor
shl
jno
loopne
or
pop
or
cld
and
lock
sbb
or
adc
ins
cmp
mov
sbb
mov
push
push
icebp
mov
retf
imul
xchg
pop
test
pop
inc
push
xor
inc
out
adc
test
hlt
mov
push
xor
inc
push
mov
daa
fmul
dec
push
xor
add
add
or
cmp
mov
mov
mov
xchg
(bad)
rol
mov
inc
je
sbb
repz
adc
arpl
lahf
fild
in
sub
pop
mov
ins
fbld
pusha
sbb
js
cmp
les
cs
fidiv
ror
cli
mov
ja
push
sub
jp
jg
sbb
mov
pushf
pop
(bad)
xor
pop
and
sahf
jne
clc
(bad)
cli
mov
cmc
dec
or
mov
pop
test
lods
out
stos
dec
fnstenv
and
inc
sub
lock
sub
fnstcw
pop
imul
test
movs
nop
sbb
je
ins
in
lea
mov
mov
out
out
movs
test
pop
and
jno
int
lods
mov
leave
aas
xor
xor
cmp
xor
test
mov
je
push
mov
mov
mov
imul
hlt
mov
ja
mov
jno
xchg
in
add
xchg
mov
call
push
sahf
mov
mov
and
pop
cli
xchg
div
push
lds
jo
rcl
fdivr
dec
outs
mov
cmp
mov
rcl
sbb
pop
inc
inc
stos
cmp
pop
mov
jbe
aas
xchg
test
sub
in
stos
shl
movs
std
sbb
xchg
(bad)
xor
fs
jecxz
std
es
dec
out
scas
inc
and
sbb
cmp
retf
mov
xchg
enter
test
and
icebp
not
push
jne
or
repz
cmp
mov
sti
xor
or
push
(bad)
int
xchg
pop
inc
jge
std
cs
pusha
inc
cmp
mov
je
clc
(bad)
push
or
cmp
data16
add
cmp
(bad)
setb
lahf
cmps
in
clc
popa
mov
xor
adc
xchg
xchg
xor
psubsw
popa
test
jne
jge
mov
adc
inc
sub
in
xchg
push
sbb
shl
dec
fist
out
fbld
sbb
je
nop
cmps
push
imul
(bad)
and
push
mov
dec
mov
cli
lods
xchg
xchg
adc
and
jno
jmp
xlat
cwde
pop
(bad)
xor
sbb
jne
jge
mov
xchg
push
inc
imul
sbb
ja
mov
adc
aad
retf
mul
ds
packssdw
sub
(bad)
jmp
jns
jge
aaa
mov
daa
cmp
cdq
nop
xor
pusha
out
movs
inc
popf
leave
push
cmp
fdivr
in
sub
mov
retf
and
cs
sbb
outs
push
bound
mov
jne
mov
adc
xchg
push
lods
cdq
sti
adc
and
rcl
mov
add
dec
dec
cs
stos
imul
xchg
retf
xor
lock
xor
fwait
(bad)
lods
push
dec
and
fdiv
mov
xor
leave
jmp
mov
je
mov
jecxz
(bad)
arpl
ja
rol
push
stc
sub
jp
ret
arpl
cld
jle
popa
jmp
or
or
ret
jle
push
ficom
cmp
out
fs
mov
and
call
(bad)
(bad)
sub
fwait
test
iret
adc
sahf
inc
sti
dec
jmp
cmp
cmp
jno
mov
push
push
lock
movs
pusha
or
lods
add
stos
sub
cmp
sbb
data16
mov
cmp
cmp
jmp
pushf
cmp
fisub
popa
test
in
xchg
xor
cmp
dec
popa
fistp
xchg
pop
pusha
adc
repnz
sub
mov
adc
jae
jl
fdiv
nop
popa
rcr
mov
call
cmp
repz
jno
aad
cmc
rcl
jno
or
xlat
add
stos
or
sti
rol
sbb
jle
scas
pop
addr16
dec
or
push
mov
lock
jbe
iret
dec
hlt
ja
scas
or
dec
out
stos
ror
imul
es
jl
push
test
ds
das
into
aam
pop
jo
iret
in
pop
repz
scas
cmp
jge
mov
inc
imul
ret
aam
xchg
jl
adc
(bad)
out
push
xor
mov
sub
and
ret
mov
and
add
add
cmp
in
call
outs
cmp
pop
fld
cmp
mov
add
mov
sub
jo
imul
or
mov
mov
dec
cmp
inc
mov
loopne
sbb
shl
add
or
es
dec
cli
adc
nop
sub
aad
jb
loope
scas
enter
mov
adc
loope
out
pop
rol
xchg
xchg
and
repz
(bad)
fmul
ror
sub
mov
enter
ja
or
xchg
hlt
popa
mov
adc
add
das
mov
cli
mov
dec
rol
je
enter
pop
add
scas
gs
ret
fstp
and
push
ss
dec
sub
xchg
or
jb
cmps
or
cmps
leave
and
aaa
sahf
daa
imul
cmp
push
popf
mov
out
cmps
mov
pushf
fld
out
xor
retf
scas
jb
pop
enter
fist
es
neg
mov
test
popf
mov
ret
and
mov
or
push
jae
push
leave
enter
jle
cmp
leave
pushfw
pop
pop
and
lds
cmps
lea
js
inc
js
hlt
jmp
xchg
test
rcr
mov
adc
test
xchg
stos
mov
out
aad
sub
sub
sbb
out
or
ins
jbe
jecxz
sbb
mov
sbb
jns
xchg
sti
repnz
pop
test
fdiv
pushf
xor
lock
sbb
inc
jg
clc
lods
retf
jnp
sub
xor
mov
fwait
int3
xchg
mov
add
mov
cmp
pop
sbb
out
enter
int
in
pop
pop
cdq
mov
inc
push
sub
dec
sub
jnp
iret
xchg
scas
add
(bad)
addr16
pop
bound
ins
cmp
test
into
arpl
ss
ret
test
out
push
add
pop
xchg
add
mov
adc
inc
add
cli
xchg
pop
xor
jmp
pop
sbb
dec
iret
ds
or
in
ficomp
sub
sbb
jle
mov
nop
push
outs
push
jbe
jae
jne
push
cli
mov
popa
imul
jecxz
or
in
retf
jns
dec
add
jb
jg
rcl
fwait
inc
ds
repz
sbb
scas
add
xchg
sbb
movs
outs
mov
jmp
mov
mov
mov
mov
xlat
dec
push
and
mov
sub
sub
sbb
xor
in
cld
sbb
popf
in
ror
mov
sub
ss
sbb
movntq
mov
jae
xchg
retf
pop
push
cs
dec
stos
add
jmp
push
jg
jae
(bad)
mov
fwait
jge
test
sub
aam
rcr
dec
movs
push
jmp
xchg
ins
mov
aaa
ret
ja
pop
jl
test
xor
mov
xor
xchg
mov
pop
outs
scas
xor
dec
into
pop
stos
out
pop
scas
or
int
aas
jns
dec
dec
aad
daa
test
hlt
lea
fs
xchg
and
dec
jmp
sub
ret
jo
hlt
jo
push
shufps
jae
xor
pop
pop
ins
into
push
add
in
or
xchg
inc
mov
lahf
test
scas
icebp
pusha
xchg
pop
cmps
imul
lock
push
into
or
in
scas
mov
inc
(bad)
mov
jne
jl
pusha
sub
pop
xchg
and
out
cmc
jns
cmp
push
dec
push
in
or
mov
xchg
dec
setbe
jmp
aad
sbb
mov
or
push
frstor
mov
lea
cmc
or
(bad)
aad
cmp
fist
or
dec
retf
push
scas
and
mov
aas
in
push
adc
dec
lahf
repnz
daa
adc
lods
(bad)
sbb
dec
aas
int3
ins
and
xor
mov
push
mov
fs
test
test
aam
mov
xchg
mov
adc
inc
jnp
jp
shr
popa
mov
or
in
and
jb
mov
jno
iret
push
ficom
into
clc
pusha
xchg
push
test
pop
xchg
jnp
mov
sbb
cdq
lock
cmp
mov
fild
xchg
and
cmp
repz
sub
(bad)
shl
inc
data16
ja
sbb
mov
mov
sbb
jmp
xor
repz
sbb
out
and
enter
push
fisub
pop
sub
inc
outs
cmp
mov
jbe
imul
mov
movntq
cmps
ret
push
xchg
and
call
hlt
mov
sub
icebp
add
fisttp
inc
dec
iret
push
in
mov
js
mov
dec
shl
aam
jg
hlt
das
pop
test
gs
sbb
inc
(bad)
sbb
rol
iret
and
mov
int
lea
add
fsubr
dec
mov
adc
sahf
and
test
popf
cs
jmp
std
or
mov
dec
je
pop
jle
jbe
mov
cmp
sti
and
jg
jo
xchg
cmp
(bad)
stc
out
call
add
jg
in
mov
in
stc
add
add
dec
inc
dec
inc
scas
inc
pusha
or
add
add
add
(bad)
(bad)
inc
add
add
add
add
add
add
jns
je
ins
cs
jb
ja
outs
addr16
push
gs
imul
xor
xor
inc
jne
je
jb
cmp
jb
ins
sub
push
jne
ins
imul
imul
bound
xor
data16
xor
fs
add
adc
gs
cs
jb
ja
outs
addr16
imul
add
popa
je
pop
add
add
add
add
add
lsl
add
les
add
add
or
or
add
or
add
add
add
add
or
add
add
pusha
outs
rol
add
add
inc
dec
inc
add
mov
or
popa
add
jo
pop
jae
add
ret
add
push
ret
add
outs
test
add
adc
inc
inc
push
pop
inc
in
xlat
mul
adc
ret
shl
neg
xor
mov
sbb
mov
mov
inc
(bad)
xchg
jne
dec
sub
pushf
jns
gs
data16
jecxz
(bad)
pop
dec
scas
jmp
std
jecxz
add
lods
add
hlt
test
test
or
imul
popf
retf
sub
std
xor
icebp
ins
push
(bad)
mov
cmps
stc
pop
and
cli
or
add
call
arpl
sti
push
mov
mov
pop
pop
dec
adc
xchg
aas
pop
call
mov
adc
mov
movs
popf
iret
xchg
mov
mov
cli
fsubr
mov
pushf
jns
aad
or
mov
push
add
fnstenv
popf
and
outs
mov
pushf
dec
jmp
and
gs
add
inc
fnstcw
jns
les
and
out
inc
loop
pop
adc
add
and
inc
mov
xor
sbb
jne
and
stc
(bad)
repnz
mov
mov
jmp
xchg
xchg
in
ins
ja
xchg
call
jbe
sbb
fs
or
jp
pop
retf
ja
push
mov
sbb
popa
sbb
xchg
pop
pshufw
sub
in
loope
and
ja
add
and
(bad)
mov
mov
push
lock
clc
pop
push
push
xchg
pop
push
dec
push
test
sub
mov
mov
mov
ror
fwait
cwde
js
std
je
cdq
push
in
mov
in
jbe
xlat
cmp
mov
mov
in
mov
cwde
xchg
add
or
push
jg
adc
ss
xchg
ror
test
mov
add
mov
pop
adc
jb
lock
adc
(bad)
out
repz
popa
mov
xchg
addr16
lds
es
sub
sti
mov
push
ret
mov
mov
cmp
cld
xchg
sahf
je
add
and
mov
jle
add
dec
fmulp
adc
pop
lds
inc
push
or
add
push
nop
mov
pop
push
mov
(bad)
(bad)
or
and
movs
inc
fimul
pushf
mov
add
jmp
rcr
jecxz
mov
cmp
add
or
in
movs
and
xchg
lods
stos
xchg
out
sar
or
popa
fs
or
add
fcom
push
push
and
clc
pop
adc
fsubr
hlt
into
out
xchg
aaa
or
mov
in
test
sub
add
std
mov
test
std
cmp
inc
mov
sbb
inc
inc
xchg
out
gs
add
push
mov
sbb
fcomip
retf
push
add
(bad)
mov
in
pushf
dec
xchg
pop
cld
jb
aas
pop
jl
add
movs
jmp
pop
sub
add
pop
mov
mov
mov
inc
test
or
mov
rol
ins
xor
add
inc
(bad)
test
sbb
ror
and
ror
fadd
dec
sti
outs
pop
inc
rol
mov
xor
adc
imul
fstp
(bad)
mov
ja
adc
leave
jne
xchg
or
pop
mov
nop
popa
jns
and
les
mov
sbb
push
cmp
scas
mov
xchg
and
pop
adc
mov
mov
adc
fisttp
adc
xor
mov
and
dec
inc
loope
jle
sub
cmp
dec
cld
mov
hlt
out
sub
bound
sbb
int
pop
mov
mov
loop
mov
cmp
jb
hlt
ins
sub
jge
mov
mul
mov
test
inc
jmp
or
bound
push
xor
inc
mov
mov
sbb
and
loop
pop
(bad)
stos
push
sahf
add
xchg
push
loop
jl
cdq
cmp
call
out
aaa
cmp
sub
test
cmp
dec
sub
(bad)
mov
cmp
movs
test
js
gs
pop
xor
cmc
sti
outs
fisub
adc
mov
fs
or
dec
loope
jns
les
mov
push
xor
mov
jmp
popa
mov
hlt
mov
jb
scas
jae
stc
addr16
sub
push
cli
push
mov
inc
jle
push
iret
shl
imul
or
fld
xchg
inc
and
adc
push
mov
xor
mov
call
cmc
push
aas
(bad)
jo
sbb
dec
loope
les
mov
rol
repz
hlt
(bad)
bound
or
pop
scas
gs
push
inc
jge
mov
data16
mov
stc
outs
cmc
jmp
(bad)
cmp
or
pop
aam
fimul
clc
jo
push
fnsave
(bad)
dec
fmul
xlat
adc
jmp
xor
dec
pop
pop
jecxz
adc
lahf
sbb
mov
push
mov
adc
adc
lods
pop
push
sbb
(bad)
cmc
jl
mov
loope
test
into
jb
xchg
int3
fs
(bad)
fmul
retf
push
aas
aaa
adc
(bad)
cmp
mov
sub
test
inc
sub
push
ins
data16
sub
xchg
push
inc
xor
sbb
and
(bad)
adc
push
sti
xor
and
sbb
std
addr16
sub
jmp
pop
fdivr
pop
stos
push
sub
push
int
jl
add
cmp
mov
je
xchg
xchg
mov
aam
push
push
stc
mov
adc
loopne
fdiv
into
fs
jns
mov
aam
mov
imul
ins
cmp
and
cmc
inc
jg
jmp
mov
rol
mov
(bad)
call
cwde
xchg
jbe
aas
out
and
fimul
fsubp
pop
mov
lock
jmp
loopne
rcr
imul
shr
inc
aaa
cs
adc
or
pop
pop
jnp
imul
clc
fwait
outs
mov
aam
call
cli
mov
add
lods
test
or
inc
lea
mov
icebp
mov
ret
leave
or
jno
xor
pop
sub
sbb
or
sbb
xchg
adc
sbb
shld
clc
lea
push
inc
push
stos
and
and
inc
sub
or
pop
aas
adc
xor
mul
rcl
pop
in
sbb
sub
js
mov
push
aaa
rol
jge
pop
scas
mov
data16
movs
mov
test
add
cmp
lods
scas
jb
push
and
adc
aam
test
fmul
jno
out
mov
movs
leave
xchg
mov
sub
push
jg
jae
ss
jb
cmps
jl
sub
shl
cmp
dec
sub
lds
rep
aas
adc
data16
add
mov
cmps
icebp
cmps
dec
stos
ret
lea
aas
mov
xor
dec
clc
jo
xor
lods
mov
push
call
icebp
push
cmps
push
hlt
xor
and
mov
lds
and
test
push
push
outs
mov
es
push
fadd
loop
je
push
mov
pop
adc
cld
ret
and
(bad)
mov
movs
adc
mov
js
or
mov
pop
fcomip
pop
xchg
imul
inc
icebp
inc
or
sbb
cmp
and
addr16
xchg
push
inc
fwait
cmp
adc
shl
fs
push
adc
adc
cld
arpl
mov
pushf
fwait
ss
shl
sbb
add
cld
nop
inc
jge
sbb
ins
cmp
lds
mov
cli
xchg
fbld
lea
push
sub
aas
loope
fwait
xchg
mov
imul
enter
leave
fsub
cmp
fst
xchg
inc
adc
dec
mov
leave
xor
jmp
xchg
and
dec
dec
sbb
imul
mov
cli
imul
mov
dec
test
std
ss
jno
xchg
jmp
xor
pop
xlat
inc
jae
xchg
cmps
mov
sub
icebp
rcl
std
mov
(bad)
aam
hlt
(bad)
pop
mov
xchg
fld
in
ja
push
add
ss
sub
stos
je
mov
imul
stc
pop
(bad)
cld
lds
mov
shr
out
and
int
in
dec
pop
lods
and
push
imul
fistp
inc
mov
mov
mov
sahf
cwde
mov
mov
xchg
push
mov
sub
pop
fwait
out
jo
mov
pop
sahf
pop
(bad)
aas
mov
mov
jne
cld
movs
mov
or
mov
pop
xchg
xchg
pop
in
and
icebp
adc
sar
test
cmp
ins
fidiv
jae
lds
imul
in
xchg
mov
lea
jl
sbb
mov
in
sub
xor
out
into
add
into
sbb
inc
mov
mov
sbb
adc
mov
mov
mov
mov
pop
cmp
popa
xchg
mov
cmp
std
ficom
dec
and
in
outs
adc
add
mov
and
movq
xchg
les
adc
bound
in
out
dec
addr16
les
push
(bad)
jle
mov
outs
sub
or
arpl
cs
jge
cmp
adc
sar
iret
cld
sub
pushf
mov
bound
dec
adc
mov
mov
in
fst
ret
xchg
repnz
loope
and
icebp
sub
add
push
es
(bad)
adc
adc
sub
lock
pop
sub
outs
and
mov
int
test
sbb
pop
mov
cmp
mov
sbb
mov
icebp
xchg
sub
nop
pop
inc
hlt
inc
stc
test
stc
fadd
je
and
mov
icebp
pcmpgtb
jno
jno
pushf
aas
aam
sbb
fbld
ins
jecxz
mov
daa
jo
push
mov
icebp
loopne
xlat
das
push
push
or
sub
jb
sahf
fnsave
ja
cmp
enterw
addr16
(bad)
mov
cmc
push
(bad)
pop
jae
loopne
add
pop
lea
movs
sub
neg
outs
scas
ja
add
xchg
outs
hlt
ror
or
aaa
(bad)
ins
fisub
imul
mov
repz
imul
fcmovb
test
mov
popf
sub
adc
test
ja
mov
mov
fdivr
hlt
pop
movs
mov
jbe
cmc
inc
in
sub
sub
jge
mov
out
lods
mov
mov
scas
xchg
shl
int
std
jb
cld
or
ja
retf
dec
add
aam
in
xor
pop
cs
xor
mov
inc
sbb
stos
xor
idiv
dec
adc
and
jge
sub
jmp
mov
push
sub
sbb
cmp
imul
xor
fwait
push
jb
cs
test
cdq
jne
adc
and
repz
fsubr
cmp
test
push
xchg
faddp
mov
inc
leave
jbe
movsx
mov
imul
push
arpl
sub
push
popa
inc
pushf
shr
sub
xchg
and
push
scas
ds
mov
jmp
xor
dec
cmp
add
push
imul
xchg
out
dec
test
xlat
pop
js
mov
test
xchg
mov
fmul
test
push
popf
xchg
(bad)
js
pop
neg
inc
(bad)
cmp
jle
inc
cmps
addr16
mov
movs
(bad)
or
mov
cmps
pop
sub
add
pop
jo
mov
call
mov
jbe
dec
mov
add
dec
stc
scas
inc
jg
jmp
movs
out
nop
mov
push
inc
imul
or
inc
cdq
(bad)
cmp
inc
cmc
in
dec
lahf
add
pop
loopne
mov
lock
mov
dec
ins
cmp
fsub
repz
cmp
or
and
test
add
jnp
pop
enter
jp
push
push
icebp
cli
mov
ret
mov
icebp
fidivr
jp
nop
fistp
scas
dec
(bad)
jae
les
aaa
pop
push
fsubr
jmp
fidiv
cmp
mov
mov
pop
ficomp
fsubr
mov
je
and
in
popf
jecxz
cld
cdq
test
lds
jmp
jle
cdq
xchg
aas
je
push
(bad)
jp
pop
call
inc
pop
sti
pop
jns
call
jno
jne
mov
daa
lods
lods
mov
popf
loop
push
cli
in
or
pop
(bad)
push
int3
addr16
cmp
xchg
dec
mov
fld
inc
jp
xor
les
cmp
call
inc
(bad)
int
sub
or
(bad)
int
inc
jns
and
ficom
and
mov
sub
or
das
enter
sbb
adc
retf
mov
dec
push
out
add
pop
rol
xlat
cmp
jb
in
xchg
inc
imul
mov
imul
mov
cmp
daa
push
mov
inc
(bad)
push
dec
call
or
cmc
or
push
jg
call
xor
mov
and
hlt
test
lock
fcom
mov
inc
push
xor
push
(bad)
fnstenv
js
call
out
lods
add
cld
test
int3
fiadd
ds
fbstp
cmps
shr
stos
mov
jge
cmps
inc
ds
mov
sub
mov
nop
(bad)
mov
mov
sub
dec
icebp
inc
push
push
into
add
push
movs
push
jge
dec
inc
call
std
cld
dec
in
cmp
xchg
mov
mov
imul
mov
dec
jp
ds
call
push
lea
pop
sub
stc
stos
jnp
cmp
rcr
nop
int3
mov
outs
rol
sahf
movs
sbb
cmp
jmp
push
adc
pop
daa
aam
xlat
ret
pop
push
mov
inc
adc
shl
mov
cmps
xchg
call
dec
mov
aaa
loopne
stos
jns
xchg
(bad)
sti
sahf
push
cmc
xlat
mov
jp
inc
sub
js
iret
rol
add
test
push
fmul
call
imul
push
rcl
dec
sbb
mov
pop
sub
scas
aaa
adc
es
cmp
leave
(bad)
xchg
mov
xchg
sub
jnp
sbb
fadd
xchg
inc
into
lock
xor
xor
xlat
stos
mov
or
jo
cmp
inc
test
aaa
jmp
ficomp
int3
jne
mov
sbb
jbe
js
lods
stc
push
jbe
push
cli
xchg
add
xlat
sub
ins
or
dec
dec
jnp
popf
ret
aad
push
or
add
push
adc
sbb
xchg
pop
and
ret
pop
pop
sub
ss
mov
test
scas
jmp
dec
lahf
dec
or
and
xchg
clc
daa
mov
and
es
aas
daa
jns
out
leave
push
pop
daa
pop
pop
inc
loopne
int3
add
xor
sbb
cmps
pop
shl
repz
sub
pusha
push
xor
inc
jae
sbb
(bad)
sar
pusha
xchg
mov
jns
sti
cmp
jno
in
mov
loope
aad
xchg
jne
pop
gs
fbstp
sub
jne
pop
cmps
adc
xchg
lahf
add
xor
es
fcomp
sub
clc
jmp
or
repnz
out
jb
sub
out
cmp
jg
inc
fistp
mov
xor
sub
leave
mov
loop
add
dec
movs
add
(bad)
pop
cmp
inc
pop
sar
cld
repz
aas
(bad)
cld
repz
jmp
sar
repnz
dec
xchg
loopne
add
add
dec
inc
scas
inc
pusha
or
add
add
add
(bad)
(bad)
inc
add
add
add
add
add
add
jns
je
ins
cs
jb
ja
outs
addr16
push
gs
imul
xor
xor
inc
jne
je
jb
cmp
jb
ins
sub
push
jne
ins
imul
imul
bound
xor
data16
xor
fs
add
adc
gs
cs
jb
ja
outs
addr16
imul
add
popa
je
pop
add
add
add
add
add
lsl
add
lds
add
add
or
or
add
or
add
add
add
add
or
add
add
pusha
outs
rol
add
add
inc
dec
inc
add
mov
or
popa
add
jo
pop
jae
add
ret
add
push
ret
add
outs
test
add
adc
inc
inc
push
pop
inc
in
(bad)
test
fmul
out
scas
loope
xor
popa
sbb
xlat
mov
imul
(bad)
cwde
mov
ins
out
je
popf
fdiv
int
icebp
cld
dec
fisubr
mov
add
aam
or
cmps
inc
jp
or
outs
cmp
rcr
dec
xchg
jo
xchg
pop
outs
pop
xor
cmps
(bad)
fsubr
mov
pusha
nop
mov
enter
js
mov
loope
adc
pop
cmps
leave
sub
pop
or
mov
dec
hlt
push
int
lock
retf
jo
xchg
jne
jmp
push
pop
or
mov
xchg
aas
pop
lock
das
xor
fwait
sub
icebp
mov
(bad)
dec
arpl
inc
sub
repz
repz
jle
jb
je
ret
jae
pop
ror
jmp
out
cmps
xor
outs
call
mov
ja
inc
in
aaa
aad
jnp
adc
scas
jne
lods
loopne
and
mov
xor
(bad)
jnp
cmp
call
xchg
and
out
inc
in
add
nop
xchg
nop
sti
in
icebp
mov
sub
jp
iret
in
add
mov
jbe
outs
pop
and
sbb
fwait
popa
cmps
sar
push
icebp
dec
neg
sbb
iret
jne
adc
int
sub
movs
call
scas
jecxz
pop
sti
std
into
int
(bad)
std
push
xor
aaa
mov
jb
cli
stos
test
push
repz
dec
popa
mov
mov
aas
leave
in
cld
repz
test
test
cmp
jnp
cmc
push
dec
jge
cmp
xchg
push
stos
mov
sub
xlat
jae
lea
rep
ret
sbb
fiadd
daa
ss
int3
or
arpl
cwde
mov
clc
mov
inc
xchg
xor
and
mov
sub
test
aam
sub
sahf
xchg
inc
and
add
outs
mov
in
cmp
sbb
mov
xchg
push
aad
stc
cmc
and
jmp
xor
xchg
xchg
(bad)
lods
mov
or
jne
add
arpl
loop
mov
aad
loop
ret
jecxz
jle
and
stos
scas
retf
jmp
push
jbe
xchg
push
stos
cmp
hlt
cmps
pop
movs
jne
in
loop
sbb
add
cli
inc
cld
push
mov
mov
es
fmul
sub
jne
test
out
call
call
jl
sub
cmp
inc
popf
lods
push
inc
loope
mov
into
and
jns
xor
or
add
hlt
sub
mov
popa
mov
pop
mov
sti
dec
pop
cmp
int3
mov
gs
fld
fistp
xor
pusha
adc
out
pop
pop
xor
sbb
idiv
popa
mov
xor
test
and
mov
mov
jle
adc
xchg
cmp
repz
sub
mov
push
jle
rcr
mov
mov
movs
dec
movs
ror
cli
in
(bad)
ficom
jnp
js
js
sbb
fwait
loopne
cmp
shl
or
pop
mov
or
mov
repz
mov
xlat
pop
shl
test
xor
dec
mov
jnp
cmp
imul
add
ret
in
cli
(bad)
lea
loop
jae
sti
dec
repnz
nop
clc
mov
and
dec
gs
mov
sbb
pop
push
(bad)
adc
xor
jnp
aaa
mov
push
mov
stc
push
in
nop
mov
icebp
jle
or
int3
dec
lods
add
push
in
sbb
dec
mov
or
loop
retf
dec
xchg
ja
repnz
mov
dec
jge
add
shl
mov
fwait
sub
mov
cmp
mov
test
sub
and
mov
clc
and
(bad)
xor
adc
shl
mov
fld
pop
xchg
iret
cmps
or
or
out
repz
mov
and
inc
ja
cmp
pop
pop
pop
sbb
fldenv
or
shr
shl
arpl
mov
leave
and
lea
into
clc
ss
stos
mov
cmps
cli
fs
(bad)
jns
shl
mov
sbb
jmp
imul
lahf
or
addr16
jecxz
mov
retf
add
addr16
sbb
gs
call
mov
push
jg
iret
int
jno
xchg
push
adc
push
clc
out
xchg
mov
fcomp
push
ror
stc
and
push
(bad)
or
and
inc
mov
xor
sub
pop
enter
dec
idiv
mov
jp
test
aaa
xchg
inc
push
mov
ror
mov
test
pusha
shl
out
in
aad
sub
dec
lods
mov
in
call
ret
ficomp
shr
sub
cli
dec
shl
cmps
cs
mov
fucompp
fisubr
bound
je
(bad)
stos
xchg
jnp
retf
loopne
push
dec
ins
or
in
aas
and
(bad)
in
in
mov
mov
mov
cmp
mul
(bad)
repnz
std
out
pop
das
ins
les
das
(bad)
jge
cmp
or
mov
mov
js
hlt
jl
adc
or
cmps
or
repz
into
mov
das
lods
inc
ja
push
jp
fidivr
test
lea
push
aaa
lods
sub
hlt
jo
out
sub
mov
sbb
gs
ja
push
add
jb
outs
mov
xchg
sub
test
imul
in
inc
(bad)
dec
sub
outs
out
sub
xchg
mov
adc
jns
jle
fmul
mov
in
call
es
or
or
popf
xlat
imul
inc
(bad)
test
stos
and
jge
dec
sbb
cmp
out
dec
and
std
sub
sar
lods
or
or
xchg
mov
mov
jge
addr16
mov
inc
jo
sbb
jp
dec
call
lahf
das
pusha
jp
in
stos
in
adc
cmp
adc
dec
imul
add
add
hlt
inc
in
ja
sub
mov
mov
les
mov
xchg
mov
aaa
iret
xlat
aad
out
dec
fcomp
aas
mov
shl
out
stos
(bad)
fist
dec
xchg
adc
lahf
push
or
not
mov
jb
cld
xchg
enter
cmp
add
cmp
inc
(bad)
mov
push
mov
mov
mov
inc
jne
mov
iret
adc
mov
mov
push
cmp
movs
jmp
rcr
xor
jns
sahf
jg
aam
test
scas
(bad)
mov
cmps
inc
push
stos
pusha
loope
xchg
and
aad
cmp
outs
test
retf
or
dec
pop
pushf
cmp
scas
fidiv
xor
mov
popa
out
test
iret
stos
adc
clc
inc
jns
xor
int
cmp
mov
sbb
into
(bad)
(bad)
fdiv
leave
jns
test
add
fld
sub
hlt
repnz
pusha
sub
es
dec
inc
mov
imul
and
pop
cmp
aaa
das
lahf
sbb
iret
jg
cmps
jg
xchg
hlt
dec
mov
mov
jg
stc
movs
push
dec
mov
xchg
int3
sti
je
and
mov
and
popf
or
imul
sub
or
jb
push
sub
mov
and
lds
xchg
jp
push
clc
cs
je
dec
and
fisub
outs
rcl
and
mov
(bad)
jmp
inc
(bad)
mov
pop
cmp
adc
pop
fsub
jecxz
xor
jno
daa
jno
jmp
mov
call
rcr
out
jmp
mov
cmp
outs
int
fwait
cs
retf
xchg
add
add
mov
or
dec
arpl
in
inc
sbb
dec
shr
(bad)
adc
jne
add
fsubr
fisubr
packssdw
and
mov
(bad)
push
pop
out
mov
push
in
pop
push
es
add
outs
in
sub
sub
dec
jo
mov
mov
xlat
push
mov
mov
jb
aaa
dec
xchg
mov
retf
push
dec
test
(bad)
stc
push
mov
push
xor
mov
jnp
lahf
pop
cmps
sbb
pop
loopne
xlat
inc
addr16
mov
sahf
mov
dec
data16
adc
mov
arpl
clc
int3
and
xchg
mov
mov
cwde
cmp
mov
jno
or
fs
or
pop
stos
jmp
outs
iret
mov
jmp
fist
add
xlat
adc
jb
pop
dec
pop
jmp
jmp
std
dec
add
ins
inc
sbb
cmp
xor
jecxz
dec
cmp
or
jmp
loope
mov
jl
add
mov
pusha
das
ja
ss
cmc
repz
add
xor
stos
pop
(bad)
push
inc
xchg
pop
pop
push
adc
cwde
cmp
sub
daa
ja
leave
addr16
stos
sub
lods
adc
jg
or
stc
daa
call
fimul
push
movs
push
inc
int3
dec
mov
fmul
mov
push
pop
ficomp
js
adc
loope
outs
imul
dec
repnz
adc
stos
add
mov
and
jl
jne
jae
loopne
cmp
test
dec
and
(bad)
data16
jl
mov
(bad)
scas
pop
std
inc
jl
scas
push
jp
adc
neg
adc
aam
call
sbb
and
mov
leave
adc
pop
fidiv
xor
push
jmp
out
outs
and
popa
inc
movs
push
(bad)
bound
mov
sub
pop
(bad)
pusha
leave
mov
fsubr
mov
stos
mov
and
pop
sbb
call
test
sti
jo
ss
movs
push
xchg
cmp
sub
retf
test
mov
pop
cmp
mov
daa
sub
or
xchg
stos
gs
sar
outs
jl
push
inc
xchg
pop
inc
mov
rcr
test
jg
pushf
adc
dec
jmp
or
dec
push
mov
repz
xchg
xchg
sub
mov
jne
(bad)
mov
int3
or
push
mov
in
sbb
adc
xor
pop
adc
mov
jl
push
xchg
mov
inc
add
in
fwait
popf
ficom
mov
xchg
jno
test
dec
adc
imul
popf
sub
popf
sbb
xchg
jecxz
adc
(bad)
in
out
cwde
lods
jmp
stos
cmp
xor
or
sub
neg
adc
and
xchg
mul
or
je
add
mov
cmp
inc
pop
mov
mov
imul
test
xor
fmul
sub
ds
pop
in
mov
push
cli
mov
in
jae
(bad)
fs
dec
gs
cli
loopne
pop
dec
mov
fstp
or
pop
push
lods
push
mov
push
inc
jmp
and
jo
out
inc
mov
mov
mov
pop
inc
int3
xchg
mov
loope
rcl
mov
xchg
adc
dec
mov
sti
sub
test
repz
sbb
mov
jae
sub
xor
lea
ja
(bad)
push
les
paddsw
xor
das
ins
sub
das
jnp
clc
mov
in
lods
push
adc
dec
mov
or
cmps
push
js
mov
das
cld
xchg
cmps
pop
pop
fidiv
retf
fwait
mov
dec
mov
daa
fninit
xor
inc
fldcw
imul
jbe
in
std
enter
aas
add
jg
sahf
fist
mov
(bad)
and
adc
add
dec
inc
xchg
test
cdq
cwde
and
jb
sahf
dec
pushf
mov
cmp
sbb
dec
addr16
cmp
cmp
mov
jno
nop
inc
lods
jne
int
icebp
adc
xor
cmp
mov
push
out
arpl
or
lods
cmc
jle
add
fsubrp
pop
mov
push
rol
test
pop
cli
add
sub
cmp
test
push
hlt
dec
in
std
cmp
jnp
cmps
jmp
ror
inc
mov
mov
pop
fwait
xchg
mov
bnd
in
cmp
repz
or
inc
lock
in
pop
enter
lock
cs
fidivr
fistp
push
mov
xchg
mov
movs
add
fnstcw
pop
dec
shl
cmps
bound
mov
repz
mov
call
inc
dec
sub
lock
jmp
outs
jnp
jb
inc
or
test
adc
and
xchg
imul
cmps
(bad)
mov
movs
jmp
mov
je
mov
mov
dec
and
xlat
fistp
mov
mov
aad
xor
imul
rsqrtps
int
test
or
xor
adc
pop
fcomp
xchg
mov
pop
xor
repnz
into
les
xor
ret
imul
push
loop
jno
xchg
test
stos
(bad)
aam
push
pop
add
pop
and
add
jle
(bad)
out
test
in
or
or
jb
sbb
pop
jge
xchg
push
mov
jmp
jb
pushf
js
xchg
std
fsubr
jg
jmp
xchg
cli
enter
daa
(bad)
test
ins
dec
cwde
repz
sbb
mov
cmps
outs
retf
rcl
call
cld
sbb
sbb
mov
jp
push
test
inc
out
repz
sbb
pop
pop
and
and
pop
mov
pop
mov
sub
(bad)
mov
mov
push
mov
mov
inc
jo
(bad)
(bad)
cmc
mov
leave
(bad)
sti
xchg
mov
jbe
cwde
pop
sbb
pusha
jb
mov
aaa
ja
mov
sbb
cld
sub
enter
adc
(bad)
sub
aas
jno
int
or
push
adc
push
push
gs
push
mov
add
adc
adc
dec
cmc
jmp
pop
outs
add
stos
stc
repnz
retf
sti
dec
pusha
fsubr
inc
stos
outs
push
dec
and
lds
mov
mov
test
or
adc
std
dec
sbb
mov
mov
pop
push
sub
fisttp
cmp
fistp
mov
(bad)
mov
xchg
push
(bad)
or
loope
jl
(bad)
out
and
add
mov
add
ds
adc
test
jmp
lahf
ins
xchg
arpl
jno
shl
dec
mov
inc
sahf
test
mov
mov
push
mov
xor
jg
pop
xchg
dec
lods
or
adc
sbb
shl
lock
jnp
ins
xor
mov
mov
sub
and
jnp
jne
dec
and
mov
push
xor
inc
lea
sbb
outs
scas
jo
shl
psllq
cmps
mov
repz
pop
out
js
fsubr
jecxz
iret
xlat
mov
sahf
mov
repnz
(bad)
out
div
retf
mov
jno
aad
xor
push
je
ins
les
fistp
lods
call
push
mov
call
daa
nop
(bad)
in
cli
cwde
push
mov
pop
sub
xchg
or
arpl
in
or
push
dec
xor
adc
xchg
pop
xchg
leave
mov
cmp
inc
push
cs
aad
and
mov
in
icebp
cld
(bad)
adc
aaa
not
sub
xchg
sub
adc
loope
stos
js
scas
or
cmp
pop
out
stos
jp
cmp
lock
(bad)
cld
out
(bad)
stc
iret
jg
repz
add
pop
and
inc
push
add
add
dec
inc
dec
inc
scas
inc
pusha
or
add
add
add
(bad)
(bad)
inc
add
add
add
add
add
add
jns
je
ins
cs
jb
ja
outs
addr16
push
gs
imul
xor
xor
inc
jne
je
jb
cmp
jb
ins
sub
push
jne
ins
imul
imul
bound
xor
data16
xor
fs
add
adc
gs
cs
jb
ja
outs
addr16
imul
add
popa
je
pop
add
add
add
add
add
lsl
add
ret
add
mov
inc
or
add
or
add
add
add
add
or
add
add
pusha
outs
rol
add
add
inc
dec
inc
add
mov
or
popa
add
jo
pop
jae
add
ret
add
push
ret
add
outs
test
add
adc
inc
push
pop
inc
in
aam
inc
xchg
or
xchg
outs
movs
and
mov
movs
and
popf
mov
sbb
shl
sbb
ja
movs
je
je
out
mov
inc
cmp
inc
cmp
enter
bound
jg
stos
scas
inc
pop
test
rol
ror
jp
cmp
rcr
loop
aad
fcom
sbb
out
push
mov
loope
scas
jbe
add
mov
push
xlat
pop
push
repnz
jp
test
push
(bad)
pop
and
jle
leave
int3
or
cmp
jmp
repz
jmp
lods
or
scas
aaa
loopne
push
inc
mov
dec
cwde
fsubr
inc
xchg
arpl
xor
mov
xor
fcom
fcomp
shl
loop
mov
or
and
xchg
mov
(bad)
out
dec
dec
pop
data16
add
inc
adc
cmp
sbb
mov
jo
jmp
xchg
jp
(bad)
dec
sti
xor
jg
mov
(bad)
jb
cmp
and
mov
dec
cs
test
out
and
adc
ins
iret
(bad)
xlat
inc
mov
dec
inc
(bad)
push
sbb
mov
jmp
and
dec
rcr
leave
fdivr
push
cmp
fistp
ret
pop
das
scas
test
lods
xchg
pop
jge
in
sbb
push
es
lods
dec
out
mov
push
into
and
and
(bad)
dec
mov
mov
inc
adc
adc
les
stos
push
jnp
push
xchg
pushf
cmc
dec
xchg
clc
jae
dec
cmp
ret
dec
cmp
outs
push
stc
test
push
fisub
leave
scas
inc
inc
lds
pop
fwait
inc
add
add
(bad)
pop
push
je
fiadd
push
mov
jg
enter
xchg
jbe
stos
sub
scas
adc
outs
not
pop
imul
ins
push
xor
add
cld
dec
adc
fsub
jns
jecxz
jo
inc
jmp
push
inc
cmp
push
mov
sub
test
stc
test
xor
xor
ja
dec
int
retf
and
mov
push
imul
loope
loopne
or
retf
daa
ds
inc
ss
add
mov
mov
out
jle
div
in
popa
xlat
or
sti
push
test
inc
mov
mov
xchg
jg
cmps
out
adc
xchg
mov
mov
loop
push
call
stc
retf
xchg
jno
mov
xchg
aaa
push
jle
stos
cmp
fcom
call
mov
imul
dec
test
xor
mov
pop
dec
and
js
dec
mov
movs
sti
scas
xchg
clc
mov
or
hlt
jmp
mov
pop
call
sub
sahf
xchg
xor
jp
xchg
stos
mov
xor
mov
retf
push
mov
pop
push
les
lds
push
xor
cmp
lea
jmp
movs
fsubr
loop
mov
lea
or
jp
jns
js
out
mov
mov
test
push
in
push
int
inc
xor
in
sbb
test
hlt
push
push
lock
xchg
(bad)
je
or
pop
pop
pop
or
xor
pcmpeqw
retf
cmps
test
pushw
push
sub
in
pop
xor
or
push
sar
aaa
(bad)
mov
push
mov
outs
cwde
div
stc
add
xchg
cli
rol
mov
adc
dec
jmp
not
mov
shl
jo
pushf
cmp
dec
xchg
push
dec
dec
jmp
loop
pop
sbb
std
rol
push
(bad)
mov
push
cld
loopne
mov
outs
outs
repz
push
xchg
sti
dec
and
pusha
cmp
pop
mov
pop
ins
sub
clc
dec
xchg
ret
aaa
jmp
mov
and
dec
ins
cmp
mov
ficomp
jl
mov
sbb
inc
mov
cmps
loop
out
sbb
cmps
push
xchg
out
add
stc
aas
loope
pop
imul
fidiv
xor
jo
xchg
pop
xor
sub
cmps
iret
pop
into
mov
jl
dec
nop
xchg
adc
sub
out
cdq
mov
fdivr
cmp
ds
cmps
shr
into
adc
(bad)
fild
out
cwde
fnstenv
ds
mov
cmp
xor
cmps
test
and
dec
sub
sar
pop
jbe
daa
inc
mov
call
cmp
adc
pusha
and
into
fild
es
jge
daa
out
jmp
jmp
lock
lahf
retf
(bad)
fcomp
inc
cmc
loope
push
cmp
imul
lds
dec
push
mov
add
fs
xor
lods
sbb
imul
adc
push
mov
push
(bad)
mov
test
sub
movs
scas
xchg
cs
sub
lock
jmp
scas
mov
jl
and
mov
sbb
(bad)
daa
mov
leave
xchg
es
cmp
lahf
sar
movs
ficomp
fadd
mov
pop
xlat
xchg
aaa
int3
or
jmp
ins
shr
(bad)
fisttp
jb
mov
jle
push
pop
sar
stc
es
xchg
das
mov
xchg
sar
adc
jmp
icebp
(bad)
jmp
dec
or
lds
cmp
sbb
jge
and
xchg
cmp
jnp
shl
fiadd
sti
jbe
jl
add
inc
lock
movs
cs
in
cwde
adc
mov
retf
(bad)
ss
stos
pop
rol
test
das
ins
jmp
mov
sti
cmc
in
cmc
sbb
mov
cmp
sub
dec
ds
cmp
pop
xchg
dec
aam
xchg
jl
loope
push
add
jne
movs
dec
fcomp
jp
hlt
or
sbb
cld
jnp
dec
ret
pop
shr
push
push
movs
cmp
fs
out
sti
xchg
in
xchg
xor
cdq
pusha
jmp
or
push
pop
mov
popf
inc
mov
jecxz
dec
xor
sbb
ins
add
call
xlat
stos
sbb
in
xlat
push
fnsave
dec
or
xchg
ins
mov
sbb
sub
cmp
jnp
enter
sbb
inc
inc
pop
dec
fimul
adc
aad
sbb
stc
mov
add
cmp
pcmpeqw
lock
mov
push
mov
out
and
in
cmp
iret
loop
iret
pop
push
test
xchg
push
sub
xchg
stos
mov
fisub
inc
pushf
dec
add
and
gs
dec
daa
or
hlt
fidivr
push
fwait
jmp
pop
xchg
or
cli
sub
(bad)
xchg
sahf
mov
jmp
jbe
sbb
(bad)
in
or
sub
std
das
mul
aas
cmp
repz
push
mov
pop
mov
push
pop
stos
lds
cld
mov
les
cmp
aas
cmp
push
pop
pop
xor
dec
sti
mov
mov
enter
lea
lods
dec
enter
jp
cli
mov
cwde
out
mov
xchg
or
nop
sub
jle
imul
stc
popf
mov
push
cmps
test
pop
into
and
jbe
dec
daa
push
sub
inc
jmp
dec
jecxz
xchg
mov
push
std
gs
mov
xor
mov
mov
leave
cwde
(bad)
push
xchg
out
cmc
mov
ss
into
mov
inc
retf
inc
bound
sbb
sub
sub
stos
int3
aad
sub
adc
and
scas
ds
into
in
bound
movs
inc
inc
add
adc
lock
ins
add
xlat
stc
push
repnz
jg
mov
jge
adc
popa
mov
jl
test
sahf
out
aam
jg
push
xor
(bad)
cmc
jno
js
push
mov
jp
pop
xchg
ja
sbb
push
scas
pop
or
jno
sub
xchg
loopne
rol
jl
(bad)
mov
jbe
push
and
pop
jb
add
loop
aad
bound
leave
xchg
in
ds
iretw
jp
add
int3
fcomp
push
mov
jmp
mov
add
aad
sub
add
je
pop
mov
rcl
sub
in
push
std
lods
xor
lea
(bad)
leave
data16
inc
(bad)
outs
pushf
pop
jg
adc
sbb
dec
int
das
aad
inc
pop
mov
jno
xchg
add
jmp
scas
and
cld
stc
jbe
outs
out
push
sbb
fxtract
outs
adc
dec
stc
retf
add
in
or
mov
xchg
cs
xchg
popa
sbb
xchg
cmp
cmp
or
pop
shl
(bad)
fisttp
rol
(bad)
mov
scas
mov
call
in
std
inc
mov
mov
xchg
and
pop
jl
aam
enter
push
add
out
ror
xchg
push
cli
icebp
jno
and
and
icebp
push
mov
fisubr
push
out
add
jle
aas
push
jae
and
push
inc
mov
pushf
pop
add
jecxz
aad
in
sub
xchg
mov
cwde
test
call
inc
jb
pop
inc
loop
sahf
xlat
int3
fadd
or
xor
pop
sub
mov
pop
scas
sbb
pop
sub
lds
mov
test
shl
mov
fistp
lds
or
fiadd
xchg
push
push
daa
sub
or
test
lock
push
test
push
mov
js
sbb
cmp
retf
pop
mov
jo
cmc
pop
fidiv
mov
dec
cld
loopne
mov
xchg
repnz
int3
add
mov
test
sub
pop
std
scas
lods
cmp
ins
sub
stos
not
jg
cli
xchg
(bad)
in
out
stc
call
cmps
xlat
pop
xor
push
fld
sti
aaa
neg
inc
push
movs
push
(bad)
movs
or
mov
or
ds
xchg
jl
xchg
shl
cli
or
inc
inc
jp
lds
lds
dec
leave
or
dec
mov
pop
dec
inc
pop
push
ret
cwde
add
inc
pop
mov
in
push
inc
ret
retf
xchg
xchg
mov
or
lea
mov
nop
data16
inc
out
lds
cmc
mov
xor
dec
xchg
adc
cmp
cmps
inc
and
xchg
dec
jne
(bad)
or
push
mov
dec
(bad)
pop
out
push
int
mov
push
in
or
cmp
xchg
sbb
jle
push
clc
mov
or
ds
jbe
jl
xlat
icebp
mov
js
cmp
iret
sbb
or
adc
sahf
and
cdq
mov
mov
jo
not
and
lods
cmp
mov
cdq
out
adc
call
pushf
sbb
cmps
ins
cs
fisttp
retf
sti
rol
mov
xor
iret
sbb
fdivrp
outs
inc
inc
adc
into
aad
sub
adc
(bad)
fucomp
(bad)
pop
fadd
sti
fnsave
mov
and
xchg
sbb
loop
ret
adc
and
dec
sbb
cs
mov
mov
(bad)
idiv
jno
mov
xlat
push
imul
pop
mov
mov
jge
fcom
xor
shl
xor
sub
mov
xor
push
div
dec
mov
in
inc
icebp
ins
int
dec
fsubp
hlt
test
jmp
mov
in
and
je
ss
xchg
in
cmp
(bad)
add
xchg
mov
dec
xchg
push
add
mov
fild
jmp
and
pop
mov
dec
jecxz
sub
fidivr
jbe
mov
cdq
into
mov
ss
jns
mov
adc
loopne
xor
in
fwait
mov
jecxz
call
mov
inc
fadd
xor
push
call
and
leave
retf
push
pop
xchg
or
ret
mov
aas
inc
push
pop
(bad)
xlat
scas
shl
(bad)
(bad)
and
adc
mov
in
add
shl
jo
gs
ins
loope
shr
push
sti
jnp
dec
std
fst
push
pop
(bad)
addr16
int
movs
mov
lds
das
in
or
adc
mov
mov
inc
inc
mov
dec
pop
js
rcl
les
lods
dec
and
fnsave
jg
jmp
icebp
pop
cmc
ds
retf
pop
retf
in
sub
loope
mov
push
inc
(bad)
adc
inc
stos
xor
xchg
fcmovbe
sbb
cld
and
dec
dec
jb
mov
fistp
test
inc
adc
jg
and
(bad)
xchg
repz
xchg
or
cmp
mov
push
ins
or
cmp
iret
jecxz
int
aaa
cwde
test
xor
mov
fistp
scas
dec
sbb
cwde
xchg
(bad)
(bad)
mov
in
push
popa
dec
in
out
cmc
cmp
or
inc
enter
push
push
cmp
pop
out
(bad)
(bad)
add
lock
aam
and
jns
mov
cld
(bad)
push
xchg
dec
call
std
inc
push
jge
jg
lds
sbb
(bad)
leave
xlat
(bad)
ins
lods
scas
cli
jae
push
add
adc
(bad)
cld
dec
pop
lods
ror
test
aad
ret
nop
mov
add
push
lock
(bad)
and
jns
shl
push
adc
mul
or
and
pop
std
jl
push
add
sub
sbb
jg
ja
mov
inc
test
add
lds
add
cmps
sub
lahf
pop
(bad)
scas
adc
and
stos
mov
push
fnstcw
push
fs
ret
cmp
xchg
loopne
in
mov
cmp
add
dec
sbb
push
adc
and
ins
nop
lea
js
cld
imul
sbb
mov
outs
push
cmp
rcl
adc
cwde
ret
fwait
jne
xchg
inc
pop
scas
(bad)
enter
push
es
inc
fwait
pop
pusha
jg
sbb
mov
es
jl
adc
or
push
mov
mov
xchg
fwait
adc
sbb
mov
ret
icebp
push
sbb
fcomp
mov
adc
jmp
setg
xchg
or
mov
js
mov
or
fbstp
jo
(bad)
retf
ss
test
stos
mov
lods
cli
mov
call
jg
int
leave
test
mov
loop
mov
shr
mov
push
in
inc
fsub
outs
cmp
sbb
repz
ins
mov
imul
pop
push
movs
jmp
or
fstp
ret
mov
inc
xchg
or
add
imul
popa
sub
test
push
mov
aam
out
adc
push
jecxz
loop
xor
sub
test
push
cmc
and
pop
push
cmp
test
inc
cmp
cmp
fldenv
fstp
push
(bad)
pop
int3
addr16
add
or
cmp
in
dec
adc
mov
inc
stc
mov
dec
push
nop
ss
push
sbb
add
sub
jb
mov
int3
repz
sub
in
repnz
cmp
pop
leave
sti
stos
test
push
daa
push
sti
fisubr
into
dec
call
mov
popa
sbb
xchg
out
and
loope
mov
or
mov
pop
xchg
jo
(bad)
scas
fsubr
hlt
outs
and
js
psubusw
(bad)
rcr
cmp
jecxz
pushf
push
stos
mov
adc
add
test
jecxz
lods
fld
sub
js
movs
sbb
fbstp
not
in
cmp
hlt
adc
out
in
jo
movs
movs
inc
mov
jb
mov
jmp
sahf
lahf
push
mov
loop
les
mov
aad
sbb
mov
xchg
mov
fbstp
mov
lahf
or
jns
sbb
sbb
sar
cdq
scas
pop
jp
xchg
and
cmp
out
jg
stc
out
call
add
jg
push
sbb
add
add
dec
inc
dec
inc
scas
inc
pusha
or
add
add
add
(bad)
(bad)
inc
add
add
add
add
add
add
jns
je
ins
cs
jb
ja
outs
addr16
push
gs
imul
xor
xor
inc
jne
je
jb
cmp
jb
ins
sub
push
jne
ins
imul
imul
bound
xor
data16
xor
fs
add
adc
gs
cs
jb
ja
outs
addr16
imul
add
popa
je
pop
add
add
add
add
add
lsl
add
ret
add
mov
inc
or
add
or
add
add
add
add
or
add
add
pusha
outs
rol
add
add
inc
dec
inc
add
mov
or
popa
add
jo
pop
jae
add
ret
add
push
ret
add
outs
test
add
adc
inc
push
pop
inc
in
(bad)
test
fmul
cmps
arpl
cdq
scas
xor
ror
mov
jbe
xlat
aam
data16
cmp
imul
iret
out
(bad)
js
cli
daa
fisubr
and
jae
add
fistp
pop
xchg
mov
mov
xchg
dec
mov
icebp
ret
sbb
mov
dec
psubusb
mov
sbb
jecxz
or
push
fild
fs
in
mov
push
mov
mov
xlat
out
mov
or
retf
into
gs
xchg
jp
push
retf
data16
test
mov
loopne
arpl
push
adc
sbb
fwait
push
sub
mov
add
mov
and
or
xor
push
xchg
pop
xchg
jae
jae
mov
je
sbb
ret
hlt
sbb
push
jmp
shl
cmp
add
and
mov
stos
inc
loope
cdq
mov
pop
fistp
xchg
pop
inc
mov
shr
std
xchg
cmp
mov
mov
inc
sub
stc
cmp
jl
and
inc
push
call
das
addr16
sub
xchg
push
pop
or
sar
mov
je
or
sbb
cld
jl
push
push
cmp
lds
repz
in
dec
sbb
sub
ret
sbb
cmc
pop
mov
ror
mov
push
repnz
call
adc
out
imul
lea
fbstp
cmc
xchg
xchg
pop
sbb
pop
pusha
and
xchg
je
cmp
jnp
pop
sub
jecxz
mov
pop
mov
nop
sbb
adc
cli
sbb
addr16
xor
adc
xlat
inc
mov
push
lahf
jb
jl
mov
pop
out
adc
sub
cmc
mov
stos
test
stos
or
pop
xor
xchg
cmp
add
(bad)
addr16
test
sbb
push
pop
adc
faddp
jecxz
inc
jbe
xor
xor
dec
dec
mov
mov
les
jge
xchg
and
call
ret
xchg
push
rol
inc
inc
imul
daa
into
sbb
dec
outs
out
jae
inc
stos
mov
jmp
fdivr
lea
and
and
adc
pop
cld
push
jno
cmp
out
test
jmp
pop
ins
int3
cmc
sbb
sbb
cmps
call
or
or
fdivrp
inc
ffreep
enter
sbb
int3
fstp
call
mov
mov
icebp
stos
and
ret
mul
lahf
xor
cld
add
aam
into
xor
xchg
(bad)
sbb
fcomp
shr
scas
xchg
sbb
mov
idiv
pusha
nop
xchg
ja
shl
mov
pop
jle
fs
je
je
popf
ret
mov
xor
hlt
xchg
mov
aaa
adc
inc
fstp
cmp
arpl
mov
test
popa
test
icebp
xchg
push
push
lods
dec
iret
cdq
or
xor
mov
cli
in
push
sub
popa
mov
fsubr
cmp
mov
mov
lea
out
fwait
mov
and
jno
jbe
(bad)
iret
aas
repz
fsubr
cld
lock
pop
jmp
jno
nop
mov
call
mov
imul
icebp
popf
movs
add
loope
rcr
xor
add
in
sub
xchg
sbb
cmp
ds
cwde
pop
jge
pop
and
xor
xchg
in
push
lea
ds
xchg
inc
sub
ret
ins
fnstenv
js
sub
cmc
push
sub
push
dec
jp
in
sbb
inc
jbe
das
and
scas
xor
dec
jle
(bad)
mov
xchg
jo
imul
sbb
in
fs
das
cmp
mov
sbb
(bad)
retf
dec
jl
sub
inc
push
mov
push
sub
jne
and
ja
add
add
xchg
repz
test
outs
jecxz
ds
push
add
inc
mov
dec
jg
dec
in
idiv
out
loope
imul
les
mov
cs
pusha
sbb
movs
clc
int3
adc
icebp
jns
and
push
mov
dec
les
test
or
mov
push
push
sbb
dec
out
dec
cmps
call
imul
mov
ret
ds
imul
xor
jmp
mov
pop
jne
js
pop
adc
mov
xor
or
and
shr
repz
daa
push
push
stos
push
inc
in
scas
xchg
mov
loopne
das
and
shr
movs
es
mov
jle
test
mov
pop
mov
cmp
xchg
jbe
or
xchg
aam
xor
push
or
pop
outs
push
ret
call
mov
cmps
mov
rcl
xchg
mov
adc
push
xor
xchg
mov
outs
xor
out
xor
imul
pusha
loop
stc
add
sbb
and
jl
push
outs
pushf
adc
fs
shr
into
jae
fld
xor
dec
movs
xor
lods
and
sub
lods
xor
dec
cmp
adc
and
out
out
test
lods
pop
pop
push
mov
push
clc
(bad)
setg
pop
dec
fsubr
mov
sub
mov
mov
mov
imul
jp
pop
fld
push
not
mul
sub
mov
mov
push
pop
dec
test
lds
fwait
hlt
or
mov
mov
leave
das
mov
dec
mov
push
inc
out
movs
outs
adc
and
sub
mov
fidivr
dec
les
dec
sbb
js
push
xor
ja
in
push
xchg
cmp
sbb
and
rcl
in
mov
gs
jmp
cmp
adc
(bad)
sbb
loop
popa
pop
in
mov
and
call
adc
mov
sub
inc
fistp
inc
fdiv
fisub
fcomp
fwait
xlat
xchg
(bad)
fist
inc
xchg
inc
ja
and
dec
loop
mov
(bad)
push
mov
arpl
mov
lahf
aam
pop
and
sti
pop
xchg
push
sub
mov
push
not
sar
stos
push
lea
movs
jne
fdecstp
stc
stc
mov
push
dec
xchg
mov
rol
fsubr
or
mov
pop
push
adc
fimul
popa
(bad)
scas
sub
sbb
mov
gs
dec
push
inc
dec
fistp
mov
imul
fbstp
das
and
out
jp
fimul
leave
ss
imul
jle
inc
mov
inc
(bad)
cld
push
dec
stc
mov
dec
stc
mov
push
add
popf
push
into
and
ins
jmp
shr
add
and
mov
int
push
mov
mov
push
lahf
pop
xor
sbb
sbb
scas
push
ror
jno
xor
jbe
cdq
add
push
ret
outs
and
sbb
cmp
(bad)
sbb
sbb
movs
jecxz
fmul
movs
pop
ins
shl
movs
mov
xchg
sbb
jae
dec
sahf
sub
push
xchg
int3
out
or
aas
mov
outs
jmp
mov
hlt
mov
xchg
inc
scas
outs
push
xchg
pop
mov
jo
dec
dec
mov
cmps
mov
jno
or
lea
cmc
shl
sub
mov
jmp
xor
and
data16
test
scas
or
jge
pop
mov
xchg
jno
es
xor
adc
sbb
xchg
icebp
ret
fld
sbb
xor
jno
pop
mov
js
cmp
mov
(bad)
fist
pop
mov
repnz
mov
addr16
dec
data16
inc
movs
mov
shl
loop
add
jmp
sbb
sub
adc
pusha
pop
idiv
test
jle
sbb
iret
pop
sbb
stc
inc
leave
xor
jbe
inc
jle
sub
cwde
add
retf
sub
lods
or
scas
cmp
mov
aad
push
arpl
jns
test
mov
adc
lahf
loope
pop
add
push
(bad)
cmp
cwde
in
fbld
pop
or
sahf
adc
pop
lock
ret
dec
xchg
cmps
fidivr
mov
js
cmp
mov
arpl
repz
mov
sub
or
call
cmp
out
adc
rdpmc
mov
rcr
scas
loop
push
(bad)
pop
stos
icebp
or
es
inc
add
cmp
mov
fld
int3
push
adc
dec
push
pop
mov
cmp
(bad)
out
xchg
pop
movs
fstp
sbb
sbb
pop
jle
std
jns
cli
jne
fs
push
ins
fst
jg
cld
sbb
mov
or
(bad)
sbb
dec
stc
fistp
pop
loop
jno
retf
xabort
jbe
out
loop
xor
xlat
push
loop
adc
in
xchg
dec
je
enter
daa
(bad)
add
movs
outs
mov
push
retf
pusha
leave
imul
movs
repnz
or
ret
jp
popa
cmc
cmp
(bad)
out
push
inc
xor
aas
leave
jbe
ins
xchg
pop
cdq
jg
movs
cmp
dec
sbb
call
inc
jb
sub
icebp
add
sbb
mov
jge
pop
and
cmc
jge
mov
mov
lods
or
lods
mov
mov
out
inc
shr
shl
lods
mov
sbb
and
out
or
loop
jbe
mov
mov
sbb
lds
sub
ds
adc
pop
out
mov
adc
jns
mov
pop
sar
(bad)
sub
imul
xchg
or
pop
in
lock
fcmovb
push
pop
outs
push
icebp
jmp
mov
loope
mov
test
imul
(bad)
sbb
and
dec
pop
sbb
mov
sub
push
pusha
pop
add
push
pushf
xor
dec
data16
mov
movs
cmp
outs
imul
out
in
mov
cld
mov
in
sahf
fwait
rcl
fldenv
add
mov
mov
xchg
mov
sbb
fdiv
hlt
fimul
(bad)
jmp
mov
cwde
stc
mov
push
and
mov
mov
ja
jmp
xchg
stos
daa
loope
mov
ret
mov
cmp
cld
push
stc
vsqrtsd
sar
and
jecxz
add
add
inc
and
(bad)
out
(bad)
or
xchg
mov
cmp
fcmovbe
pop
jae
not
or
mov
mov
leave
aad
dec
push
retf
sub
xchg
pusha
inc
mov
scas
in
call
fwait
aas
inc
pushf
xchg
fdivr
push
cdq
cli
(bad)
fldcw
xor
aam
add
out
xor
fstp
leave
outs
sbb
out
pop
lock
sbb
fucomip
dec
sub
sbb
mov
mov
es
cs
xlat
call
es
fs
pop
push
cmp
adc
fisub
xor
das
imul
nop
push
xlat
into
cmp
sub
jmp
xchg
push
je
not
push
push
in
mov
loopne
data16
jg
and
pushf
xor
mov
xchg
nop
and
repnz
shr
mov
adc
cmc
mov
xchg
iret
loopne
cwde
repnz
sar
dec
inc
cld
outs
aam
iret
or
addr16
imul
dec
jno
xchg
pop
in
cmp
mov
add
jae
fstp
jae
push
mov
mov
cdq
push
pop
mov
ds
lock
dec
cmp
push
mov
xchg
and
popa
in
push
ret
daa
cdq
repz
in
test
xor
aas
ins
stos
mov
pop
add
lods
fnstcw
pop
pop
cmps
push
mov
jne
and
mov
cmp
imul
lds
les
inc
movs
aaa
fnstsw
xchg
cmc
cld
fst
cmps
ret
aas
aaa
pushf
mov
(bad)
in
xor
clc
mov
push
stc
(bad)
fist
cmp
hlt
ror
or
(bad)
mov
lds
inc
arpl
fs
mov
dec
jnp
fnstsw
mov
sbb
ds
out
xchg
inc
cmp
inc
push
push
inc
(bad)
add
imul
rcl
mov
push
adc
dec
cs
push
cs
cmp
stc
shr
call
inc
xchg
adc
cmp
sub
or
sbb
fsub
add
mov
iret
adc
xchg
(bad)
iret
sbb
jnp
mov
call
cmp
(bad)
adc
(bad)
or
clc
inc
test
mov
in
sbb
mov
icebp
or
lock
mov
psubd
test
js
imul
in
out
cmp
or
and
lock
aas
outs
mov
rcr
and
(bad)
inc
push
or
cli
mov
inc
mov
sub
jns
mov
dec
fcomp
sub
push
push
inc
jmp
sub
lock
das
ret
fwait
inc
dec
adc
(bad)
sahf
cmp
shl
aad
sbb
cmp
pusha
in
push
xor
dec
es
mov
fstp
out
or
sub
leave
lahf
fistp
loop
jb
pop
jnp
pop
lock
enter
jne
jmp
or
(bad)
leave
repnz
cmc
inc
cwde
fsubrp
xlat
mov
fwait
out
mov
dec
xor
mov
aam
jge
retf
sti
cdq
cli
and
arpl
xor
jne
adc
repnz
movs
mov
std
ss
std
in
xor
jbe
jge
cmp
pop
or
xor
hlt
jae
jecxz
mov
push
(bad)
test
aas
mov
sbb
out
push
in
retf
xchg
inc
popf
ds
inc
jno
jo
xor
fcomp
sti
pop
fwait
cmp
mov
push
(bad)
outs
mov
(bad)
mov
sbb
sbb
or
(bad)
sub
ins
cli
push
add
mov
adc
jne
pusha
repnz
cmc
push
mov
jnp
imul
retf
jl
mov
push
fisubr
fmul
push
fs
movs
sbb
and
test
call
cmc
data16
pop
stc
xchg
(bad)
ror
cmps
inc
mov
jb
adc
push
ret
sbb
sub
scas
outs
imul
pop
js
cmps
out
cdq
pop
fiadd
mov
popf
and
add
in
mov
imul
rol
sbb
pop
push
sahf
js
repnz
gs
ja
retf
test
into
icebp
sbb
sar
mov
cld
cmp
inc
jbe
cmc
pop
mov
out
cli
push
cs
je
pop
sbb
or
sbb
jns
dec
xchg
ins
scas
lock
pop
jne
push
pop
sub
mov
mov
mov
in
data16
sub
cmp
ins
das
popa
cmps
movs
out
dec
mov
inc
push
or
or
sti
jnp
cmp
cmps
and
xchg
mov
pusha
mov
cmp
sti
stos
shl
xchg
call
ds
enter
jns
xchg
lds
inc
out
xor
fild
and
mov
shr
pop
fincstp
cmp
pop
push
idiv
pop
test
fstp
push
jmp
jle
mov
daa
imul
popf
add
or
jg
jae
mov
mov
jge
mov
mov
outs
cmp
fbstp
or
je
mov
add
pop
xor
pop
pop
xor
(bad)
adc
mov
je
mov
mov
push
sbb
jge
xor
inc
enter
popa
jns
(bad)
in
inc
cmps
fistp
out
push
nop
sar
cld
repz
aas
(bad)
cld
repz
jmp
lock
cmc
repz
add
add
dec
inc
scas
inc
pusha
or
add
add
add
(bad)
(bad)
inc
add
add
add
add
add
add
jns
je
ins
cs
jb
ja
outs
addr16
push
gs
imul
xor
xor
inc
jne
je
jb
cmp
jb
ins
sub
push
jne
ins
imul
imul
bound
xor
data16
xor
fs
add
adc
gs
cs
jb
ja
outs
addr16
imul
add
popa
je
pop
add
add
add
add
add
lsl
add
mov
mov
inc
or
add
or
add
add
add
add
or
add
add
pusha
outs
rol
add
add
inc
dec
inc
add
mov
or
popa
add
jo
pop
jae
add
ret
add
push
ret
add
outs
test
add
adc
inc
push
pop
inc
in
rol
ror
rcr
and
inc
nop
lahf
sbb
cmp
push
jp
dec
cmps
dec
push
jmp
shl
arpl
jge
jmp
add
cmc
inc
sbb
sub
pop
callw
mov
and
cmp
push
and
cli
out
lock
pop
cmc
pop
jo
jge
rcr
int
add
xor
xlat
call
or
in
inc
cmps
ror
(bad)
and
inc
inc
or
pop
out
(bad)
cmp
ds
repnz
mov
push
push
movs
repz
shr
add
add
sub
fnsave
or
xchg
mov
and
push
call
push
sbb
sub
repnz
hlt
xlat
mov
add
mov
int3
jle
not
out
lea
mov
pop
sub
and
jae
fistp
mov
sbb
clc
popf
gs
add
xchg
push
push
shl
js
test
push
jb
sbb
xor
mov
push
sub
jp
push
pop
loope
adc
mov
ja
dec
cwde
xor
(bad)
leave
inc
lods
adc
xor
mov
dec
shl
mov
clc
mov
int3
imul
adc
pushf
xchg
call
(bad)
rcr
sub
sub
mov
and
movs
mov
pop
mov
sbb
pop
cld
call
popa
mov
ror
xor
imul
adc
pop
shr
push
xor
cmps
std
scas
not
ds
dec
push
jg
mov
movs
push
fcom
cwde
push
loopne
cmp
js
xor
mov
mov
sub
cmp
push
cmp
adc
jmp
ds
outs
jecxz
mov
or
js
and
add
mov
lea
mul
fisub
fild
outs
dec
cli
jl
mov
mov
sbb
mov
dec
xor
cmp
jg
jns
aad
push
dec
pop
adc
stos
movs
loope
aaa
les
hlt
mov
inc
test
pop
jmp
mov
lds
retf
dec
xlat
jg
sbb
mov
into
adc
ret
dec
sub
mov
clc
xor
lds
test
sub
sbb
pop
imul
icebp
mov
ss
cmp
xchg
aaa
cwde
inc
in
fisub
jl
iret
push
add
lds
test
lea
mov
test
sbb
push
cmp
jp
xchg
fld
xchg
adc
repnz
sub
or
cmp
pop
cmc
cmps
jle
xor
cmp
test
repz
lds
jge
mov
out
push
mov
je
imul
or
jnp
push
iret
call
mov
sub
and
inc
add
popa
or
movs
int3
mov
dec
pop
mov
cwde
inc
jns
or
lods
addr16
sti
xchg
mov
in
(bad)
and
idiv
adc
mov
mov
xor
xchg
aam
or
into
pushf
aas
bound
aad
aas
in
in
pop
sub
dec
sbb
push
mov
mov
fs
add
dec
sub
inc
test
or
xchg
cmp
cmps
sbb
outs
add
cld
mov
mov
and
or
and
inc
jmp
sub
and
sbb
ja
popf
dec
mov
scas
daa
es
cdq
add
sub
mov
mov
dec
dec
jbe
adc
jle
and
cmp
gs
not
loop
mov
xchg
fucomip
pop
add
inc
imul
jle
adc
mov
(bad)
clc
inc
jmp
mov
test
dec
push
ret
xchg
enter
dec
add
jo
(bad)
lahf
xchg
add
dec
std
jb
adc
mov
loope
adc
push
sbb
pop
js
jmp
scas
pop
xchg
lods
adc
sub
nop
cmp
add
popa
into
or
sub
sbb
xchg
xchg
inc
repnz
popf
pusha
pop
idiv
(bad)
mov
imul
enter
dec
mov
popa
stc
add
ud1
cmps
aaa
leave
lds
mov
rcl
push
or
fwait
mov
push
ins
push
mov
cdq
push
and
(bad)
lock
addr16
mov
outs
jmp
ins
jnp
jno
mov
push
dec
fistp
jns
out
(bad)
int
out
fisubr
xor
(bad)
int3
push
mov
mov
pop
(bad)
cmps
mov
add
dec
scas
mov
nop
mov
loopne
retf
dec
add
bound
iret
out
icebp
int
aas
mov
inc
test
scas
inc
out
inc
dec
and
leave
retf
repz
cmp
retf
jecxz
jnp
lea
sub
or
xchg
cmp
mov
pop
sub
mov
repz
inc
sbb
rcr
idiv
stc
jmp
sahf
add
daa
mul
mov
dec
sub
adc
jbe
(bad)
(bad)
cmps
jne
jmp
add
call
xor
(bad)
jmp
pop
das
xchg
adc
jp
repnz
xchg
xlat
mov
out
lds
add
inc
sbb
int
and
mov
xor
stc
sub
pop
add
mov
data16
ficom
jns
inc
pop
(bad)
sahf
inc
es
mov
fsubp
cld
add
scas
or
push
mov
adc
or
test
sub
loop
mov
cli
and
jbe
xchg
fisubr
cmp
je
jmp
icebp
xchg
jns
mov
popa
ror
mov
jnp
dec
push
int3
sbb
inc
mov
sahf
adc
jnp
mov
popa
in
rcl
outs
mov
ret
movs
mov
push
adc
mov
lea
add
push
sahf
es
daa
popf
loopne
push
push
int
loopne
sub
popf
and
dec
xchg
mov
xlat
in
mov
lds
jns
hlt
push
add
outs
jb
add
icebp
sahf
push
rcr
aas
les
in
mov
pop
in
test
clc
retf
icebp
loope
pop
test
jbe
ins
push
mov
mov
or
dec
adc
mov
sub
aad
arpl
sub
xchg
aas
sbb
jo
mov
aad
adc
addr16
fucomp
int
aam
sbb
je
movs
inc
ja
in
ss
xor
sbb
xchg
jbe
mov
imul
mov
mov
arpl
mov
imul
mov
mov
xor
in
ret
adc
adc
adc
lods
pusha
shr
cmps
sbb
or
popf
fimul
(bad)
xor
aad
push
neg
ret
jo
xor
mov
mul
outs
push
jb
lods
sub
stos
adc
dec
mov
cs
push
add
ja
ins
imul
cmp
ret
fidivr
dec
add
(bad)
loop
push
mov
es
pop
push
pop
inc
inc
test
(bad)
shr
dec
sbb
fisttp
mov
push
dec
test
mov
test
or
sub
push
sub
jns
sub
mov
popa
in
cmc
or
scas
pop
sub
js
pop
fst
pop
retf
cmp
shl
out
pusha
cmp
pop
mov
hlt
hlt
es
mov
enter
mov
psrld
popa
sahf
ins
out
sbb
popf
pop
ss
jne
leave
iret
mov
pop
jno
lds
add
mov
sub
dec
out
(bad)
in
ret
jp
jb
sahf
push
pop
sub
icebp
clc
mov
pop
adc
test
icebp
sar
inc
xchg
mov
aaa
imul
adc
push
fdivr
push
mov
aad
push
push
inc
fld
sub
add
icebp
jecxz
xchg
inc
imul
das
and
pop
fwait
shl
inc
sahf
mov
jno
dec
xor
out
sub
or
jp
sub
add
dec
ds
add
push
dec
jo
fcmovnb
jno
mov
sub
dec
add
pop
test
cwde
movs
pop
push
or
int
int
fstp
imul
xor
sub
loopne
sbb
in
xchg
xor
test
mov
clc
shl
adc
or
xor
out
stos
adc
xor
repz
test
push
int
js
iret
out
mov
mov
dec
dec
xor
pop
imul
aas
sub
icebp
cmps
push
into
das
pushf
cdq
int3
test
aas
push
outs
inc
mov
jecxz
jmp
ror
lock
adc
push
push
rcl
xchg
shl
and
sbb
push
push
inc
sub
add
push
dec
inc
cmp
xchg
(bad)
sub
mov
ss
mov
sub
or
push
mov
les
sbb
fstp
aas
inc
les
in
jecxz
call
push
sub
data16
popa
inc
cwde
fsubr
jp
push
mov
xchg
mov
sbb
leave
imul
fcom
mov
imul
inc
rol
add
inc
movs
lea
push
sti
mov
lods
mov
mov
push
test
inc
inc
js
jns
rcl
jmp
mov
test
mov
pop
inc
popf
push
cmp
outs
ror
add
mov
add
mov
outs
push
movs
mov
inc
fcom
cli
out
pop
lods
cmp
in
cmp
jecxz
add
xchg
cld
xchg
not
cmp
push
xor
adc
push
jmp
jnp
jns
popf
mov
fwait
adc
dec
call
pop
ins
dec
mov
pop
std
or
mov
xchg
fcmovne
jb
sbb
and
and
and
push
dec
jle
sbb
mov
movs
arpl
xlat
cmp
dec
and
sub
pop
repnz
aad
dec
sub
push
cs
add
jbe
add
arpl
aaa
retf
pop
adc
pop
xchg
pop
jle
push
inc
int
sbb
dec
fimul
imul
push
xchg
sub
lods
call
test
scas
dec
fldenv
push
mov
repz
pusha
cwde
xor
xchg
movs
inc
pop
iret
adc
out
jp
push
mov
sub
mov
stos
push
test
pop
icebp
fstp
jbe
pop
jp
(bad)
out
sub
dec
adc
leave
les
jbe
test
mov
pop
inc
push
xor
pop
mov
jecxz
cdq
lods
and
or
arpl
sub
pop
push
or
xor
mov
push
mov
push
fdivr
adc
call
or
cmp
add
pushf
out
aam
cmp
cmp
in
outs
xchg
push
nop
cmp
jnp
fstp
dec
out
loope
dec
adc
or
shl
xor
pop
mov
sbb
inc
add
push
mov
push
and
lock
rcl
mov
pop
mov
or
repz
jg
in
mov
shr
adc
jo
bound
dec
(bad)
sti
cmp
repnz
pushf
out
icebp
and
mov
scas
inc
out
addr16
(bad)
iret
(bad)
push
xor
mov
sbb
scas
fs
and
sar
call
mov
push
xchg
dec
pop
xchg
cmps
pop
xchg
lods
jae
iret
pop
cmp
cmps
inc
xchg
and
sub
cli
mov
xor
push
scas
sub
push
pop
(bad)
(bad)
push
pusha
mov
push
mov
and
jno
sahf
pop
mov
dec
arpl
mov
xor
jmp
push
jne
popa
lods
dec
xchg
fcomip
outs
popf
aad
out
cdq
mov
test
iret
iret
jmp
push
xor
push
sbb
in
imul
ins
jmp
fucomp
ins
mov
nop
pop
(bad)
mov
daa
jnp
inc
movs
dec
inc
fs
(bad)
jg
out
div
scas
neg
stc
loopne
jp
xlat
xchg
jnp
mov
(bad)
or
lods
imul
xor
add
repnz
adc
inc
mov
mov
pop
add
and
push
sub
pop
and
fldenv
(bad)
in
mov
xor
mov
div
mov
jae
loope
pushf
movs
mov
sub
inc
adc
and
or
jae
jno
iret
mov
fidiv
sbb
cmp
es
bnd
imul
xchg
(bad)
fcmovb
test
cmp
(bad)
pop
xchg
movs
pop
or
sub
bound
cmc
ja
in
cmp
mov
pop
jg
sbb
xchg
aas
jnp
cdq
hlt
pop
pop
jmp
gs
or
shl
mov
test
ss
push
inc
aas
and
cld
cwde
outs
lds
mov
outs
mov
mul
jnp
mov
packsswb
mov
mov
xchg
imul
loope
sahf
test
mov
xchg
jb
(bad)
sbb
popf
popf
(bad)
jge
cmp
mov
je
aaa
add
fdiv
mov
push
or
test
shl
xor
jbe
and
xchg
fdivr
fist
cmc
(bad)
pop
stos
mov
push
loope
adc
loop
mov
and
mov
jp
popa
scas
jle
jg
xchg
ins
add
ds
aaa
push
jmp
xor
jecxz
pop
ds
stos
outs
loop
pop
pop
dec
mov
jp
add
ficomp
ja
xchg
jmp
push
mov
in
ret
(bad)
outs
or
stos
test
fisubr
cmps
cmp
adc
mov
mov
mov
ins
xchg
(bad)
fcomi
adc
and
ss
daa
inc
or
aaa
jns
es
xor
mov
pop
push
adc
xchg
push
ds
enter
imul
cmp
fst
xlat
hlt
cmps
ret
es
mov
(bad)
popa
push
jg
jle
leave
mov
rol
jg
nop
mov
dec
xchg
ja
test
xchg
and
xchg
adc
xchg
loope
repz
jnp
pop
les
pusha
cmp
out
out
retf
stc
jmp
and
mov
dec
les
push
outs
dec
or
fchs
pop
retf
int
cmps
pop
retf
dec
or
lea
loopne
ss
add
jnp
dec
fist
mov
jecxz
je
pop
cdq
and
jmp
scas
icebp
out
aaa
mov
mov
xlat
push
pop
cmps
xlat
push
jp
xlat
mov
mov
jns
xor
pop
enter
ficom
sahf
adc
test
add
shl
popa
jne
fwait
hlt
popf
test
mov
stos
cmp
call
imul
stos
xor
or
sub
cs
lods
(bad)
sbb
mov
fnstcw
out
fsub
xchg
call
test
cmps
movs
inc
sar
test
mov
fist
fwait
js
xor
cwde
mov
imul
pusha
jno
add
arpl
fldenv
in
xor
and
xor
xchg
add
retf
dec
and
mov
(bad)
mov
add
sbb
popf
push
inc
push
mov
lods
call
aas
sti
xor
enter
(bad)
pop
add
clc
dec
dec
(bad)
lea
add
or
pop
mov
in
sbb
dec
and
js
fisub
xor
cmc
push
ja
add
dec
mov
mov
add
jl
mov
int3
jecxz
and
stos
imul
lahf
(bad)
jno
mov
sahf
lods
push
pop
neg
push
mov
and
sbb
test
pushf
cmc
sbb
nop
cld
inc
cs
and
add
stos
lock
jne
add
(bad)
stc
out
jg
stc
out
jg
scas
add
inc
pop
pop
adc
add
add
dec
inc
dec
inc
scas
inc
pusha
or
add
add
add
(bad)
(bad)
inc
add
add
add
add
add
add
jns
je
ins
cs
jb
ja
outs
addr16
push
gs
imul
xor
xor
inc
jne
je
jb
cmp
jb
ins
sub
push
jne
ins
imul
imul
bound
xor
data16
xor
fs
add
adc
gs
cs
jb
ja
outs
addr16
imul
add
popa
je
pop
add
add
add
add
add
lsl
add
mov
mov
inc
or
add
or
add
add
add
add
or
add
add
pusha
outs
rol
add
add
inc
dec
inc
add
mov
or
popa
add
jo
pop
jae
add
ret
add
push
ret
add
outs
test
add
adc
inc
inc
push
pop
inc
in
rol
shr
test
xor
inc
mov
sub
inc
mov
movs
mov
lea
fisttp
and
sbb
sbb
and
fwait
fwait
add
clc
push
jns
dec
cwde
mov
jae
push
out
sbb
lea
stos
mov
(bad)
jg
push
mov
(bad)
out
xchg
sahf
outs
movd
mov
repz
and
(bad)
bnd
jmp
dec
xchg
enter
neg
call
cs
mov
pusha
movs
jno
mov
fst
cmp
call
cwde
mov
push
dec
lods
fdiv
xlat
mov
xchg
mov
aam
sbb
sbb
or
lock
xchg
jecxz
popa
and
and
jnp
mov
inc
jp
adc
cli
jmp
mov
and
test
and
add
mov
xor
call
mov
ss
aaa
cmp
repnz
jmp
sbb
add
dec
pop
xor
int3
pop
jo
mov
xchg
dec
sti
sbb
mov
repz
and
mov
cmp
retf
push
imul
into
push
(bad)
jp
jecxz
sar
pop
add
data16
test
shr
in
cmp
cmp
aad
push
dec
mov
les
mov
mov
shl
cmp
(bad)
retf
inc
jle
imul
xor
xchg
inc
ret
adc
movq
push
mov
sbb
cmps
int3
js
inc
jno
dec
dec
cwde
mov
xchg
sub
or
in
sub
cmp
aas
xor
lahf
dec
lock
iret
or
sub
int
in
arpl
push
push
mov
mov
in
(bad)
add
adc
mov
inc
pop
in
icebp
dec
pop
lock
push
push
pop
or
call
mov
xchg
in
add
fisub
stos
mov
mov
inc
jmp
xor
(bad)
cmps
aaa
cli
outs
cmps
arpl
sti
fidiv
jnp
stos
mov
mov
or
dec
ror
(bad)
idiv
pushf
jno
jmp
test
cmps
std
xchg
mov
loopne
add
out
mov
jg
dec
dec
jp
jmp
cmp
loope
xchg
test
sti
sbb
test
neg
jb
and
mov
loope
mov
std
mov
push
xchg
dec
sub
ins
std
adc
mov
jle
inc
mov
(bad)
pop
dec
mov
or
sub
mov
cwde
nop
(bad)
loope
cli
aaa
imul
(bad)
xlat
mov
scas
adc
pop
cdq
stos
cmp
or
pop
movs
das
xchg
retf
inc
mov
or
sbb
js
ret
call
adc
test
outs
add
push
cmp
out
lods
push
push
aam
xchg
or
data16
jmp
jp
and
add
mov
clc
dec
cwd
push
mov
pop
bound
loopne
test
in
xchg
xchg
imul
mov
aad
push
arpl
mov
das
mov
cmp
mov
push
cli
lea
jl
jle
jge
pop
pop
cmovg
cmp
pop
jle
cmp
mov
dec
clc
test
cmp
fadd
iret
jecxz
adc
xchg
cwde
push
xor
int3
or
push
adc
mov
rol
push
xor
out
mov
aaa
nop
cmps
mov
sub
pop
add
pop
mov
fcomi
(bad)
aad
pop
test
jo
lock
sbb
or
jp
repnz
pop
enter
outs
aaa
adc
and
sub
jp
or
pop
jo
movs
or
push
stos
jns
add
inc
mov
ja
aaa
lahf
test
(bad)
in
xchg
jmp
ret
mov
mov
cdq
jp
aas
mov
ds
mov
stos
loopne
(bad)
push
(bad)
loope
bswap
cmp
fist
aam
fstp
inc
mov
leave
sub
and
(bad)
and
bound
das
rcr
ss
inc
sbb
dec
ret
shl
cli
popa
jmp
nop
imul
stos
and
sub
pop
mov
cmp
adc
cmp
addr16
pusha
ja
ins
(bad)
push
nop
movs
inc
fnstsw
fld
sub
test
rcl
test
ja
jo
dec
jecxz
mov
mov
add
xor
dec
jg
push
fistp
dec
outs
ror
mov
mov
sbb
and
xchg
mov
mov
pusha
mov
jb
mov
xchg
cmp
fadd
push
mov
and
mov
pusha
lea
mov
xchg
int
sbb
das
dec
xchg
pop
mov
or
xor
and
sub
pop
daa
sub
or
not
sbb
shl
mov
pop
loope
xor
adc
jmp
(bad)
fadd
or
cwde
mov
xor
mov
sbb
inc
mov
push
add
mov
mov
xchg
cli
xchg
movs
sbb
inc
inc
pop
test
(bad)
icebp
sub
sub
std
scas
sbb
or
xchg
mov
in
ror
add
xchg
sub
ret
inc
shl
popa
(bad)
mov
pusha
pop
adc
inc
add
jp
adc
mov
dec
adc
add
inc
xchg
js
jecxz
mov
aad
mov
data16
out
mov
adc
bound
xlat
movs
pop
lock
add
sbb
mov
push
sub
xor
ss
mov
jb
pop
mov
out
das
lds
arpl
sub
fadd
adc
scas
gs
mov
fidiv
jns
or
stos
int3
out
and
test
push
cmp
imul
addr16
test
jnp
call
mov
mov
cmps
jmp
fst
std
enter
sti
ret
jp
pop
mov
ds
adc
add
out
(bad)
cli
and
sub
dec
adc
cli
or
rcr
ins
jecxz
mov
adc
mov
cdq
in
mov
and
not
sbb
out
and
adc
pop
mov
mov
xor
clc
mov
popf
push
icebp
les
sub
lods
add
jl
xor
cmps
jl
outs
push
mov
jnp
dec
jnp
cmp
lea
cs
push
clc
or
mov
es
into
outs
ins
jb
dec
jp
add
mov
sub
lods
js
cwde
call
test
out
and
jns
gs
or
cdq
sub
mov
jge
(bad)
mov
jmp
fstp
pop
jp
pop
xor
int3
mov
cmps
adc
outs
sbb
xchg
addr16
out
pop
mov
xor
push
jns
(bad)
and
sub
adc
or
jae
(bad)
iret
xor
repz
ins
call
in
(bad)
into
arpl
iret
cmps
daa
int
jl
pop
xor
js
push
bound
aam
outs
inc
add
addr16
dec
jg
add
push
xchg
cdq
cld
xchg
cld
scas
arpl
xchg
pop
ret
outs
aaa
les
enter
push
dec
push
and
mov
xchg
ficomp
cmp
sti
ja
imul
and
add
ficomp
or
in
mov
push
lahf
and
mov
scas
and
mov
int
pop
jg
scas
stos
mov
jae
into
repnz
(bad)
out
je
in
jbe
or
test
loopne
inc
int3
inc
mov
in
jnp
cmp
ror
jge
das
stos
add
xor
or
fisttp
out
jl
(bad)
jmp
pushf
aam
test
or
pop
jmp
pop
(bad)
repz
inc
cmp
cmc
mov
js
mov
inc
loope
jnp
sbb
jle
(bad)
mov
mov
cmps
jge
sar
call
fcmove
loop
mov
push
jecxz
adc
mov
inc
aam
pop
int
xchg
cld
call
pusha
cmp
or
fs
add
adc
add
retf
in
sbb
push
and
add
aas
call
(bad)
out
stc
pop
arpl
and
push
xor
imul
test
xor
ss
mov
xor
mov
pop
xor
xchg
mov
ret
mov
inc
sub
cdq
and
jb
bound
sbb
scas
out
das
fidivr
std
cdq
add
xor
push
xlat
jb
jp
mov
fld
test
hlt
xchg
pop
gs
rcl
into
movs
xor
loope
xchg
cmp
xchg
pop
(bad)
mov
adc
sub
cwde
dec
mov
push
clc
add
mov
ficom
sti
jo
mov
sub
push
fist
loop
mov
add
push
test
or
mov
cmp
xor
cmc
jle
xchg
call
jmp
stos
jp
xchg
xchg
(bad)
je
iret
lahf
bound
xchg
sbb
ret
out
jns
sub
iret
mov
enter
sti
pop
pop
jecxz
push
in
pop
mov
mov
ds
clc
test
or
in
mov
adc
test
add
jle
push
js
and
int3
(bad)
div
add
out
or
div
test
adc
mov
sti
fmul
in
inc
jp
sbb
in
in
mov
int
aaa
in
adc
cmp
xor
scas
add
repz
popa
inc
stc
mov
or
push
ins
addr16
jmp
add
ror
dec
call
fcom
mov
enter
sahf
adc
and
jo
adc
aas
cmc
mov
jns
dec
aas
mov
mov
cmp
and
xor
and
not
xor
or
in
stos
retf
lods
popa
inc
push
pop
xor
sub
sub
push
pop
sbb
mov
adc
jae
scas
cmp
fld
sahf
xor
jnp
mov
neg
or
sbb
fistp
pop
xchg
repnz
fsub
lods
bound
mov
push
call
pop
imul
jnp
sahf
inc
mov
out
add
in
repz
xchg
mov
int3
xor
shr
cwde
cmp
loope
leave
or
outs
jmp
sbb
adc
outs
les
dec
and
jl
xchg
test
mov
fs
inc
pop
mov
dec
add
fisttp
dec
les
ret
daa
loopne
push
push
mov
pop
adc
push
int3
outs
push
stos
xchg
adc
jns
test
dec
ss
ret
jge
mov
mov
xchg
sub
jp
cmp
rcr
repnz
fsub
hlt
int3
push
and
in
mov
push
or
adc
sbb
mov
movs
mov
dec
icebp
lods
mov
push
push
and
mov
mov
mov
dec
pop
cmc
loop
retf
outs
out
test
add
je
not
or
mov
dec
cmps
or
fsubr
sbb
dec
adc
out
or
jg
outs
pop
aas
push
or
pushf
push
icebp
adc
xchg
dec
xlat
pop
add
mov
mov
push
sbb
lahf
inc
test
push
outs
or
and
inc
inc
jae
ret
and
push
sub
icebp
xchg
test
jns
das
and
int3
add
outs
popw
push
xlat
adc
repz
mov
stos
(bad)
and
dec
ins
lods
push
data16
mov
adc
sti
iret
int3
imul
xchg
mov
shr
dec
xchg
or
aaa
adc
fmul
mov
fcmovnu
fist
in
and
rcr
test
in
fild
sar
mov
or
pop
cmp
adc
(bad)
addr16
lds
pusha
mov
sti
mov
adc
daa
push
and
mov
mov
repz
push
pop
aas
pop
jle
lahf
out
add
and
cmps
test
test
retfw
pop
xchg
dec
scas
cmc
dec
xlat
xor
mov
stos
addr16
dec
pop
jns
or
fisttp
xor
fisubr
mov
icebp
int3
out
or
or
jne
wbinvd
mov
mov
xchg
push
mov
clc
stos
push
(bad)
pop
add
jne
xchg
addr16
aam
push
imul
sub
add
icebp
fwait
fwait
inc
call
pop
scas
and
retf
and
xor
retf
add
rcl
sbb
mov
loop
stos
repz
rcl
or
mov
lods
mov
out
inc
fstp
add
xchg
pop
mov
push
aam
loop
jg
mov
fwait
inc
(bad)
jae
sub
mov
pushf
mov
int
xchg
xchg
adc
lods
jo
add
push
push
cld
(bad)
and
out
mov
cmp
xchg
ins
push
push
ret
stos
cmps
xor
or
add
fsubr
emms
push
add
cmps
fistp
hlt
sbb
or
push
mov
clc
push
sti
retf
jmp
repz
je
(bad)
lods
loopne
jns
popf
jns
jnp
and
adc
in
sbb
mov
inc
jmp
xor
mov
jg
or
sbb
nop
xor
outs
ins
mov
xor
mov
loop
sbb
or
stos
int3
in
push
mov
loopne
mov
sar
ret
xchg
and
jo
movs
out
sahf
pusha
hlt
call
shl
mov
and
(bad)
enter
mov
sti
jae
mov
icebp
push
push
push
rcl
or
sbb
mov
iret
xchg
jmpw
fild
pop
imul
cs
loop
test
mov
inc
xchg
xchg
adc
stc
push
mov
test
mov
pop
imul
xchg
xchg
mov
mov
adc
out
cmps
xor
xchg
call
pop
shr
(bad)
pushf
mov
js
rcr
fiadd
xlat
pop
ja
mov
imul
and
mov
dec
stos
into
pop
add
(bad)
enter
dec
ja
and
adc
xlat
(bad)
jae
and
xchg
int
xchg
xchg
out
mov
pop
mov
sbb
(bad)
push
pop
mov
nop
and
cld
daa
inc
sub
iret
rcl
sub
mov
sub
jmp
or
mov
xor
jne
into
xchg
mov
mov
in
push
adc
iret
loope
call
jb
jmp
(bad)
sub
scas
stc
adc
add
ret
lods
mov
in
and
or
pop
mov
lods
out
aaa
and
icebp
fidivr
fcom
out
cmc
inc
mov
jae
jo
cdq
push
jo
mov
sub
daa
leave
lods
imul
pop
mov
out
(bad)
jmp
dec
pop
sbb
push
les
mov
arpl
aaa
mov
xor
jmp
imul
vstmxcsr
sbb
mov
xor
lods
lock
push
ror
sar
sbb
jno
dec
cmps
stc
adc
retf
jmp
movs
xchg
mov
adc
pop
mov
jno
loope
lock
jb
sbb
sti
popf
dec
into
adc
(bad)
stos
stc
pop
jbe
dec
inc
js
or
inc
and
outs
lock
fist
push
push
xchg
adc
inc
dec
mov
cmp
dec
dec
xor
call
and
fcomp
repnz
shl
push
jns
push
shl
dec
lods
(bad)
and
inc
arpl
fnstenv
mov
lds
cld
jmp
xchg
pop
mov
xor
retf
lahf
jl
aad
ret
lock
ja
pop
in
push
stos
mov
cmps
aad
stc
fwait
sbb
mov
pop
leave
outs
mov
push
sub
aad
ret
sub
xor
xor
scas
inc
repnz
pop
mov
adc
push
sub
mov
jne
fs
lahf
mov
cmp
les
(bad)
stc
iret
jg
repz
(bad)
cld
out
call
add
jg
and
adc
movs
adc
dec
inc
dec
inc
scas
inc
pusha
or
add
add
add
(bad)
(bad)
inc
add
add
add
add
add
add
jns
je
ins
cs
jb
ja
outs
addr16
push
gs
imul
xor
xor
inc
jne
je
jb
cmp
jb
ins
sub
push
jne
ins
imul
imul
bound
xor
data16
xor
fs
add
adc
gs
cs
jb
ja
outs
addr16
imul
add
popa
je
pop
add
add
add
add
add
lsl
add
ret
adc
add
mov
inc
or
add
or
add
add
add
add
or
add
add
pusha
outs
rol
add
add
inc
dec
inc
add
mov
or
popa
add
jo
pop
jae
add
ret
add
push
ret
add
outs
test
add
adc
inc
inc
push
pop
inc
in
aam
aas
fmul
xchg
ins
mov
pushf
cdq
popf
cwde
xor
scas
jmp
jmp
out
clc
enter
or
fnstsw
repnz
aas
jle
dec
sub
es
scas
inc
lock
cdq
stc
pop
daa
inc
sbb
sbb
mov
sti
enter
jp
jmp
out
sbb
out
(bad)
popf
ret
add
pop
jge
mov
and
(bad)
pop
adc
and
hlt
jbe
lea
xchg
mov
or
xchg
int
add
scas
adc
pop
cli
clc
sub
mov
sub
fst
or
test
xchg
sub
neg
adc
xchg
cmps
jb
push
push
push
cmps
in
iret
inc
popa
popf
sub
xchg
addr16
inc
ror
or
ins
inc
push
inc
mov
xchg
mov
cmps
xchg
lods
mov
xchg
cs
lahf
jle
dec
cdq
push
scas
lds
out
mov
out
xchg
(bad)
out
mov
ret
(bad)
movs
pop
and
out
adc
mov
jp
clc
xchg
cmps
cdq
inc
sub
jb
into
out
and
aaa
movs
pop
mov
adc
pop
mov
mov
sub
mov
inc
push
cdq
add
(bad)
and
les
adc
and
cmp
inc
test
cmp
int3
inc
lds
aaa
scas
(bad)
dec
sub
movs
jnp
adc
and
jno
jne
mov
mov
lahf
or
mov
sbb
shl
mov
fisttp
jle
push
and
outs
(bad)
cmp
dec
shl
mov
outs
fs
out
adc
mov
retf
scas
pop
retf
je
enter
fwait
or
pop
shl
jecxz
xor
add
xchg
inc
mov
das
scas
out
ja
popa
mov
push
inc
inc
cwde
pop
sbb
aad
out
fwait
repnz
mov
mov
(bad)
pop
ret
jecxz
or
pop
sbb
xchg
ret
mov
pushf
aas
shl
xor
sub
add
pop
mov
int
cs
push
mov
xchg
mov
jmp
sub
cli
xchg
les
xor
(bad)
xlat
in
into
sar
stos
inc
(bad)
hlt
push
pop
rol
jle
(bad)
int3
arpl
dec
mov
xor
mov
sub
inc
rol
(bad)
push
mul
std
sub
push
and
mov
mov
jnp
inc
bnd
mov
popa
cmps
mov
cs
lock
and
add
es
cmp
push
adc
mov
pop
(bad)
outs
bound
xchg
jg
ins
(bad)
jnp
addr16
mov
and
cmp
call
push
pop
fimul
jmp
rcl
in
test
inc
jp
iret
jne
mov
or
push
sub
ficom
sahf
xor
sti
pusha
dec
in
xlat
enter
cmps
les
aad
dec
ficomp
out
imul
dec
popa
add
jmp
std
int
mov
fldcw
test
push
rol
or
test
pop
cmps
mov
jp
push
push
jnp
pop
mov
cmp
jns
add
xchg
cmp
jae
add
mov
push
pop
std
enter
cmp
sbb
popf
test
mov
or
or
jnp
loopne
mov
std
ss
push
pushf
out
hlt
fcom
call
add
pop
(bad)
cmps
sbb
outs
pop
stc
lods
pop
rcl
pop
ret
pop
push
xchg
nop
mov
inc
int
xor
mov
xchg
fs
jns
rcr
retf
cmp
jg
ficom
cmc
cs
mov
ror
dec
xchg
nop
nop
imul
int
mov
dec
mov
mov
lods
pop
lds
xchg
push
sub
xchg
rcl
xor
sahf
popf
sbb
imul
cmp
mov
test
popa
xor
test
rcl
lods
mov
jge
pop
lods
cdq
aas
stc
jne
call
(bad)
pop
dec
loop
cmp
shl
cmps
in
and
add
or
push
dec
dec
inc
lods
cwde
xchg
leave
jne
imul
ins
xor
jg
push
fdiv
pop
fcmovb
ret
je
in
(bad)
sub
xchg
xchg
hlt
shl
fcomp
or
fsubr
jae
jo
mov
jmp
dec
sub
add
mov
iret
add
ds
xchg
nop
sub
ret
mov
push
(bad)
ficom
ds
push
(bad)
aad
cmc
mov
dec
xchg
(bad)
adc
jle
jle
xchg
bound
cmp
pop
data16
mov
jge
xor
test
mov
aas
lds
inc
jg
and
test
nop
or
repz
sbb
sub
push
add
ret
jno
mov
movs
push
cmp
nop
scas
lahf
and
xor
jne
pmaddwd
xor
test
loopne
sub
inc
imul
mov
enter
das
stos
xchg
sti
iret
(bad)
loopne
push
fbld
xchg
xchg
adc
jbe
xor
call
ja
test
adc
mul
out
(bad)
or
ds
sahf
ror
xchg
clc
cmp
inc
push
ds
cwde
lock
ss
jg
loope
shl
and
pushf
mov
and
(bad)
mov
aam
call
adc
cmps
shl
shl
imul
sbb
sbb
fidiv
icebp
sbb
rcl
or
mov
(bad)
mov
fistp
(bad)
mov
cmps
(bad)
jle
xor
ss
sub
mov
xor
mov
mov
mov
sbb
dec
lea
push
cmp
leave
int
sbb
lock
dec
arpl
pop
and
rcl
xchg
xor
sub
mov
xor
(bad)
lock
dec
push
and
add
cmp
jno
loop
arpl
xchg
jmp
fnstsw
dec
adc
adc
pop
stc
fisub
sbb
pop
push
mov
dec
add
sub
sbb
or
lea
dec
out
push
push
mov
call
or
mov
pop
sub
jo
mov
xor
ficomp
dec
clc
(bad)
add
pop
and
jne
cli
dec
dec
pop
adc
cmp
and
adc
and
push
outs
mov
jl
hlt
push
xchg
jg
fadd
(bad)
ficom
jge
pop
movs
(bad)
xchg
add
retf
in
inc
jno
jo
xor
pop
test
jns
xor
jo
push
loope
hlt
ja
and
out
inc
cmp
test
push
jmp
sbb
int
pushf
inc
xor
cmp
lods
aas
in
dec
mov
lods
mov
hlt
lahf
imul
mov
xor
retf
ror
jg
jp
mov
test
into
xchg
sbb
sbb
xchg
movs
mov
rcr
xchg
test
(bad)
jmp
jmp
cmp
xor
and
cmps
rol
out
xchg
out
xor
jb
cmps
clc
sbb
jge
or
push
dec
loope
cdq
or
xchg
jmp
jae
cwde
into
stos
jns
rol
outs
(bad)
pop
in
in
je
or
sbb
imul
aas
out
xchg
sahf
mov
adc
aas
xlat
mov
ins
inc
and
pushf
push
mov
(bad)
mov
and
bswap
push
xor
push
sub
mov
push
daa
sti
clc
addr16
jns
jns
repnz
mov
mov
(bad)
mov
cmps
stos
dec
and
mov
adc
les
pop
push
rcr
and
push
ret
pop
xor
xor
les
les
test
or
push
mov
fsub
(bad)
icebp
dec
pop
jns
gs
test
add
sub
sbb
leave
out
cli
cmc
adc
nop
cmp
jbe
jns
loopne
xchg
pop
hlt
ds
ins
xor
lea
int
pop
mov
or
je
xchg
addr16
js
mov
or
push
test
fidiv
dec
xchg
and
ret
enter
dec
push
into
fnstsw
and
rcr
outs
jl
cmps
rcl
xchg
js
(bad)
cli
and
mov
inc
sub
es
cmp
iret
and
pop
test
fsubr
test
aas
pushf
retf
loope
or
aaa
cmps
sub
out
or
pop
xchg
jnp
test
and
adc
retf
mov
cmps
cmp
dec
sbb
push
fisttp
test
push
adc
adc
inc
push
into
adc
sbb
out
jnp
dec
retf
sub
iret
shl
test
js
pop
push
pop
setno
stos
ins
pop
aam
mov
jo
in
fwait
jae
in
jge
loopne
push
sahf
js
or
ror
sub
(bad)
pop
sbb
sub
test
inc
imul
cli
pop
and
push
cmp
and
mov
pushf
push
xchg
lea
mov
fwait
sar
sbb
in
cmp
repz
jns
popf
ror
repnz
and
adc
std
stos
jns
enter
inc
das
cs
pop
jno
sub
lds
xor
into
and
fnstcw
mov
inc
movs
call
dec
outs
loopne
rol
sub
imul
cmp
js
lea
jg
lods
lock
or
or
daa
cmps
loop
je
push
xchg
(bad)
pop
add
popf
inc
cmp
jl
mov
pusha
mov
mov
(bad)
lock
ds
adc
test
cmps
cmps
add
imul
(bad)
iret
or
xchg
imul
pavgw
bound
out
(bad)
in
or
(bad)
mov
arpl
push
sbb
inc
push
sub
adc
jae
movs
mov
loop
mov
movs
and
sbb
mov
adc
push
mov
add
ja
xor
call
xchg
mov
mov
sub
pop
or
and
push
test
(bad)
mov
addr16
mov
and
dec
add
or
das
mov
xlat
xchg
push
out
jno
or
retf
inc
fisttp
pop
push
retf
jbe
fstp
fnclex
push
jp
sbb
lss
add
inc
(bad)
mov
inc
push
sbb
push
xor
jae
inc
mov
leave
inc
adc
or
in
js
cwde
adc
pop
(bad)
jb
sbb
shr
(bad)
xchg
pop
idiv
add
push
xchg
or
xchg
mov
xchg
sbb
mov
push
mov
test
int3
cmc
(bad)
adc
repz
add
inc
cmp
fdivr
fsub
sub
int3
cmps
sbb
sbb
xchg
sbb
jmp
std
(bad)
out
fs
xchg
mov
adc
sub
jns
fild
pop
fisub
outs
outs
lods
dec
mov
push
inc
jp
sub
aad
push
pop
scas
sub
nop
inc
cli
or
mov
enter
pop
(bad)
cwde
mov
cmp
sub
inc
scas
jg
sub
jno
in
fsubr
loope
mov
cs
ss
clc
stos
xchg
cmp
push
aaa
pop
daa
sub
push
cs
sub
mov
cdq
and
gs
in
sbb
or
test
aas
lds
ror
out
jae
sbb
rcr
test
rcl
push
and
out
gs
dec
lea
aaa
div
cs
pop
dec
push
ins
cmp
loope
add
sub
mov
mov
sub
pop
sbb
push
mov
mov
jle
jmp
lods
not
aaa
pop
cmc
cmp
xchg
jb
ja
std
sti
scas
mov
cmp
sbb
ret
xchg
push
xor
pusha
mov
aaa
xchg
push
inc
xchg
xor
mov
imul
retf
or
push
jno
xchg
icebp
retf
mov
inc
fidiv
retf
mov
inc
ret
cmc
out
jne
adc
cmp
ins
(bad)
dec
sbb
mov
xor
sti
lds
push
sbb
mov
push
jmp
arpl
stc
test
int3
jbe
and
inc
and
jge
mov
mul
cdq
sub
mov
push
cmp
push
hlt
pop
mov
mov
jnp
mov
add
dec
ret
popf
lods
popa
hlt
ficomp
mov
aam
icebp
dec
or
in
sbb
mov
sti
ficom
lods
shl
sbb
iret
jae
(bad)
iret
and
sbb
push
sbb
push
out
pop
loope
mov
push
in
xchg
(bad)
leave
cmp
ds
xchg
push
or
add
cmc
pushf
xchg
popa
cmp
jmp
ficomp
pshufw
push
nop
jno
sub
add
and
lods
loop
js
push
push
hlt
repz
repnz
xor
out
out
jmp
xor
push
mov
(bad)
inc
pop
sahf
hlt
dec
inc
sub
lock
repz
js
or
and
inc
inc
adc
imul
jl
mov
xchg
(bad)
inc
push
mov
int
cmp
mov
xchg
jns
mov
pop
aaa
xchg
pop
out
sub
xor
lea
test
mov
ficom
cmps
pop
dec
sub
aas
fiadd
cmp
test
xor
inc
aad
call
sahf
inc
and
mov
sub
sahf
cvtps2pi
dec
cmps
push
inc
movs
(bad)
mov
xchg
aad
nop
jno
int
fisub
fwait
jbe
mov
push
in
aas
daa
xchg
mov
outs
ss
inc
into
mov
mov
sub
and
jno
or
jmp
inc
mov
out
and
in
test
inc
xlat
ds
sbb
stc
push
xchg
cmp
test
fadd
push
sbb
inc
movs
mov
jne
sbb
aaa
dec
aas
mov
sub
mov
dec
sbb
scas
jl
mov
loop
fidivr
div
sub
(bad)
out
jnp
xor
dec
dec
dec
push
inc
dec
ins
adc
into
icebp
dec
out
aaa
jo
call
cmp
ins
and
add
cmp
sbb
mov
add
jo
jbe
dec
and
sub
repnz
pop
mov
adc
stos
mov
shr
sbb
leave
dec
int3
push
scas
movs
dec
adc
adc
mov
call
or
outs
or
out
xchg
pop
stos
jb
mov
cmps
es
jno
lea
neg
nop
repz
cs
cmp
addr16
into
cmp
xchg
sti
mov
sahf
lea
mov
push
or
xor
cmp
push
arpl
loop
icebp
push
add
push
push
repz
fwait
dec
mov
ret
ficom
dec
push
push
mov
scas
stc
fbstp
fadd
aad
add
scas
ins
xchg
test
in
mov
xchg
push
scas
adc
leave
call
cli
das
imul
sub
call
rcl
mov
mov
xchg
xlat
stos
sbb
jb
sbb
clc
jl
xchg
cmp
and
pop
stc
movs
cs
imul
mov
cmpxchg
sar
dec
into
xchg
loopne
jg
out
fisttp
imul
mov
jno
aam
test
mov
retf
cmp
out
and
bswap
repz
scas
pop
lods
or
(bad)
rcl
icebp
jg
stc
xor
jnp
(bad)
hlt
test
xor
or
push
push
dec
pusha
adc
adc
mov
pop
dec
stos
mov
ja
jo
retf
sbb
(bad)
jb
retf
add
repnz
cmp
stc
xchg
loopne
(bad)
outs
stos
jno
arpl
mov
xchg
inc
mov
push
call
lea
(bad)
mov
xchg
xor
mov
adc
daa
iret
out
adc
popa
cmp
push
pop
jmp
add
add
stos
dec
mov
loop
sub
cld
shl
ins
les
ss
sbb
inc
test
call
dec
loopne
jg
stc
out
jg
stc
out
xor
mov
push
cs
push
dec
add
add
dec
inc
dec
inc
scas
inc
pusha
or
add
add
add
(bad)
(bad)
inc
add
add
add
add
add
add
jns
je
ins
cs
jb
ja
outs
addr16
push
gs
imul
xor
xor
inc
jne
je
jb
cmp
jb
ins
sub
push
jne
ins
imul
imul
bound
xor
data16
xor
fs
add
adc
gs
cs
jb
ja
outs
addr16
imul
add
popa
je
pop
add
add
add
add
add
lsl
add
les
add
add
or
or
add
or
add
add
add
add
or
add
add
pusha
outs
rol
add
add
inc
dec
inc
add
mov
or
popa
add
jo
pop
jae
add
ret
add
push
ret
add
outs
test
add
adc
inc
inc
push
pop
inc
in
aam
pop
xchg
or
rcr
xor
dec
xor
jae
movs
movs
shl
je
or
and
jg
sahf
jg
cmp
pop
fwait
add
push
push
add
jnp
cmps
lds
in
adc
pop
cmp
imul
adc
jle
sti
mov
mov
cmp
mov
cli
jo
retf
out
lea
ffreep
jnp
test
mov
pushf
(bad)
ror
call
mov
push
sbb
stc
dec
fcmovnu
sbb
cmp
ins
cdq
sub
iret
retf
dec
mov
js
stc
(bad)
jmp
or
pusha
lea
lods
call
lea
xor
mov
and
cmp
mov
push
mov
stos
xchg
jo
adc
int
cmp
hlt
fstp
adc
mov
pop
add
xchg
or
loopne
into
aaa
lea
std
adc
jp
dec
bound
popf
mov
add
sbb
inc
adc
loope
retf
push
sbb
xchg
dec
retf
pusha
sbb
or
loopne
idiv
leave
(bad)
loope
dec
mov
cdq
vpavgw
xchg
aas
outs
pop
(bad)
shr
loop
ins
and
stos
mov
xchg
es
lahf
cmp
dec
jne
(bad)
enter
lock
fstp
in
mov
pushf
add
inc
and
imul
sub
jge
jecxz
sbb
mov
aad
sbb
out
out
push
dec
inc
fcomp
jle
mov
and
mov
(bad)
mov
repz
add
popf
js
jge
xchg
fwait
add
movs
or
sti
cs
pop
jmp
jp
bound
mov
xor
les
jp
leave
push
test
ret
cmp
or
inc
idiv
rcr
or
jb
push
aaa
mov
test
push
add
cmp
in
mov
mov
ins
cwde
cmp
mul
adc
cmp
xchg
push
leave
std
sub
fbld
cmp
mov
arpl
and
out
adc
sbb
enter
xor
dec
pop
aad
sbb
pop
xchg
pop
inc
es
popa
cwde
adc
pop
xchg
cmps
pop
scas
dec
dec
mov
xchg
sbb
cwde
sub
xor
xor
bound
cmp
push
or
jns
cmp
pushf
add
aam
ss
xchg
cmp
nop
retf
(bad)
in
xor
xchg
jb
mov
inc
sub
lods
hlt
push
in
cs
scas
pop
mov
lea
mov
ficom
popf
fdiv
imul
mov
xchg
cli
pop
aam
sti
xchg
in
jae
aaa
fsubr
fstp
arpl
dec
mov
lds
daa
cmp
inc
mul
retf
icebp
jae
retf
icebp
pop
(bad)
adc
adc
pop
pop
fldenv
add
push
jge
mov
adc
add
pop
int
sub
les
(bad)
es
inc
push
mov
push
mov
cmp
std
adc
loope
out
and
test
add
lds
ins
mov
mov
stos
pop
mov
cmp
add
fwait
xor
mov
les
in
inc
add
movs
rol
fldcw
loope
xor
test
mov
cmp
mov
mov
jns
in
(bad)
mov
daa
pop
aam
fdivr
adc
push
fisubr
xchg
fistp
sub
xchg
mov
retf
and
stc
xchg
push
aaa
pop
xchg
loop
mov
mov
(bad)
xor
out
cmps
fcmovnb
scas
add
cmp
mov
lahf
daa
cmp
inc
(bad)
mov
imul
pop
outs
loop
xchg
fdivr
in
sub
(bad)
xchg
xchg
jb
add
scas
pop
mov
sbb
loop
add
jno
jg
xlat
cmp
sbb
ja
jecxz
adc
jg
(bad)
pop
(bad)
sar
inc
test
adc
xor
cwde
push
imul
xchg
xlat
out
push
test
and
out
jge
ins
mov
jp
das
cmp
addr16
inc
inc
sub
(bad)
jmp
mov
repz
or
sbb
inc
cmps
and
imul
leave
mov
int
(bad)
pop
xchg
xchg
mov
pop
adc
push
or
lods
imul
hlt
retf
dec
popa
inc
push
sub
stos
sbb
dec
mov
jno
lods
sbb
inc
mov
outs
mov
sbb
inc
sbb
sar
nop
mov
mov
cmp
fidivr
test
mov
mov
xor
ds
lock
or
lea
sub
add
into
nop
xor
retf
cmc
scas
inc
inc
dec
out
fcom
call
test
imul
js
dec
popf
das
mov
jb
(bad)
(bad)
mov
jge
out
mov
xchg
les
adc
pushf
mov
mov
outs
loope
jmp
cdq
fimul
popf
stc
sub
div
loope
mov
cmps
mov
dec
je
sbb
cmp
je
xchg
retf
xchg
add
cwde
in
pop
in
xor
push
mov
sub
test
rcl
mov
test
mov
dec
popf
sub
and
sub
loope
mov
lahf
mov
popa
in
mov
ja
loopne
mov
ja
(bad)
fild
mov
adc
aaa
rcl
enter
add
int3
sub
mov
call
mov
outs
mov
retf
fnsave
lods
in
add
jbe
test
add
js
icebp
mov
or
stc
sahf
xchg
(bad)
outs
outs
imul
push
lahf
sub
mov
xchg
gs
or
lock
inc
xor
std
xchg
lea
call
addr16
fwait
js
scas
and
push
mov
and
xchg
push
cld
xchg
das
inc
xlat
cmp
push
push
xchg
les
rcr
out
inc
test
adc
imul
leave
jbe
cmp
mov
jno
(bad)
jno
xchg
cmps
outs
add
pop
daa
push
cmp
pop
jmp
sub
sub
out
rol
ror
add
aaa
(bad)
arpl
sub
iret
cmp
leave
jg
inc
and
sub
mov
or
pop
cmc
xchg
leave
and
push
cmps
sahf
fistp
inc
out
and
cmp
adc
shld
stos
cmp
jle
loope
and
retf
xor
pop
leave
dec
rcl
jns
cmps
mov
arpl
mov
sub
stos
retf
push
rol
fsub
jecxz
dec
push
xor
arpl
jne
push
or
stc
xor
jl
push
xchg
stos
ins
stc
cld
jno
mov
sbb
lods
cmps
test
jge
xor
inc
pop
xchg
test
push
xchg
xor
push
pop
push
pop
adc
fsub
stc
(bad)
mov
jmp
icebp
pop
in
test
mov
push
arpl
repnz
and
inc
sbb
retf
ds
js
lock
fldl2e
xor
or
je
push
jnp
call
cmc
jb
mov
dec
test
sbb
dec
retf
call
mov
push
data16
add
or
popa
dec
das
or
jecxz
fdivr
jle
lea
out
and
mov
ss
sbb
mov
jb
dec
or
adc
fwait
enter
pop
mov
das
pop
fld
pop
cmc
addr16
jle
fisubr
mov
pushf
sub
sub
and
pop
fwait
jbe
popf
fcom
xchg
(bad)
or
cmp
pop
(bad)
call
push
(bad)
push
push
ds
xchg
xor
and
mov
inc
jl
addr16
(bad)
xchg
cld
mov
jo
int
lods
pushf
fistp
lea
aas
mov
imul
mov
jge
push
jnp
fmul
fwait
ret
sub
dec
cmps
rcr
dec
lock
inc
sets
mov
add
ins
fbstp
pop
ds
in
mov
xchg
sbb
aas
retf
dec
lahf
fcom
loop
dec
es
fidiv
mov
mov
imul
les
test
push
jg
(bad)
stc
lock
cli
data16
ss
xchg
jge
adc
in
pop
push
pop
retf
iret
iret
sbb
test
(bad)
in
pop
scas
mov
dec
xor
mov
pushf
dec
in
inc
arpl
push
loope
imul
mov
fistp
mov
mov
ja
ss
out
pop
movs
loopne
jnp
mov
and
das
jg
enter
adc
pop
cmps
sub
dec
dec
les
pop
dec
cmps
or
scas
jae
ja
push
push
mov
inc
pop
dec
jge
xchg
and
mov
mov
rcr
repz
or
pop
pop
and
mov
pop
stos
pop
sub
sub
sub
adc
mov
and
clc
int
lahf
xor
in
stos
pop
jg
rcr
add
and
lea
sub
loope
push
loope
shl
les
stc
dec
mov
xchg
leave
adc
(bad)
jnp
lods
inc
stc
in
repnz
(bad)
fistp
(bad)
sbb
mov
lods
popa
add
pslld
jg
push
jmp
mov
pop
mov
leave
dec
sub
outs
cmp
test
test
test
pop
mov
cdq
jbe
fadd
shl
ds
movs
loope
(bad)
xchg
xor
in
dec
jge
out
arpl
mov
or
inc
jmp
xchg
movs
adc
jl
xor
ret
inc
inc
hlt
ret
(bad)
sti
jae
cmc
fcmovne
cmp
lods
gs
aas
shl
cmc
in
or
div
mov
jp
fsubr
mov
mov
(bad)
jo
jbe
push
in
ret
retf
xchg
pop
fadd
jmp
jg
scas
fsincos
dec
cs
clc
(bad)
fadd
clc
cmps
ss
test
mov
jbe
cmp
int3
lahf
ret
mov
ins
in
push
xchg
arpl
fs
lahf
dec
jnp
mov
xor
sub
or
inc
arpl
retf
pop
cmp
xor
push
bound
test
shl
push
or
adc
push
mov
push
mov
out
movs
in
loope
adc
pushf
outs
pop
or
test
or
jo
es
mov
fs
stos
test
xor
jge
(bad)
sbb
jnp
test
inc
ja
cli
pop
xchg
pop
or
jl
enter
mov
iret
mov
and
hlt
pushf
(bad)
hlt
and
jmp
mov
dec
inc
xchg
inc
gs
stos
cmp
push
retf
scas
mov
shl
loop
cmps
(bad)
enter
mov
pop
int
int
fild
pop
leave
repnz
adc
int3
nop
lods
xchg
test
mov
dec
(bad)
mov
cwde
cdq
outs
mov
pop
dec
das
int3
lea
and
or
int3
std
shl
jl
xor
sub
xor
test
(bad)
jp
sub
push
lds
js
mov
hlt
test
addr16
lods
mov
mov
mov
addr16
loop
(bad)
repz
in
dec
sub
fwait
cmp
(bad)
jge
adc
xchg
pop
add
ss
imul
fisub
ins
scas
dec
jbe
pusha
mov
and
sub
mov
cmp
clc
imul
add
fs
(bad)
vcvtpd2ps
sti
jmp
jo
cld
mov
xor
cmp
push
adc
cdq
mov
ja
dec
adc
cs
ficomp
je
adc
lds
lahf
xor
lock
int
sbb
mov
(bad)
and
lods
mov
mov
(bad)
lock
call
ret
jmp
repnz
retf
push
fild
fwait
std
pop
xor
or
pop
jbe
std
pop
lods
jbe
sbb
shr
push
leave
mov
cmp
pop
mov
mov
dec
xchg
mov
(bad)
jns
int
loop
cmp
cdq
jmp
pop
jecxz
xchg
es
xchg
rcl
test
stos
repz
inc
mov
(bad)
pop
ret
or
je
aad
adc
das
aas
fcomp
imul
dec
mov
cmp
mov
ds
or
into
out
iret
fwait
test
ret
mov
mov
push
and
pop
addr16
repz
vfrczps
sbb
mov
scas
shr
xchg
(bad)
out
inc
xor
loop
xor
ret
sub
mov
xchg
xchg
ror
or
or
or
adc
adc
dec
mov
lods
jl
or
xor
sbb
push
push
neg
inc
(bad)
or
aad
inc
arpl
fisubr
add
outs
jg
jns
fbld
in
jmp
add
mov
test
popf
js
shl
cmc
cmp
(bad)
daa
and
ret
mov
shl
ds
pop
jge
shl
or
in
inc
sub
dec
adc
sbb
cmps
add
jnp
adc
neg
cmp
dec
lahf
mov
jg
xchg
adc
dec
cs
cdq
dec
fcmovnu
jnp
pop
mov
and
mov
rcl
inc
call
stc
cmps
or
test
arpl
mov
ds
xchg
add
iret
stos
(bad)
in
mov
pop
ins
lds
outs
mov
push
loop
sahf
mov
mov
pop
cmp
cli
adc
mov
xor
je
inc
inc
mov
loopne
mov
mov
sub
mov
rcr
xor
xchg
outs
add
xor
sub
jmp
adc
stos
mov
pop
push
or
in
(bad)
and
cmp
pop
rcl
rcr
shr
add
stos
jmp
das
fmul
sub
mov
dec
xchg
mov
and
cmc
in
loop
in
sub
xor
adc
je
inc
not
aad
add
sub
mov
movs
leave
mov
nop
imul
pop
or
pop
out
repnz
xchg
push
sahf
mov
sub
pushf
jmp
add
or
sub
in
iret
mov
inc
push
push
lds
sbb
mov
push
in
out
inc
jno
dec
sbb
outs
js
jg
and
out
push
call
hlt
sbb
pop
hlt
int3
xchg
mov
jbe
ret
sub
sub
lods
retf
movs
mov
arpl
lahf
(bad)
hlt
mov
sub
add
mov
inc
in
das
or
mov
div
mov
adc
sbb
adc
push
cmp
imul
(bad)
mov
dec
pop
and
add
(bad)
and
iret
aas
loopne
aaa
shr
outs
sbb
mov
fiadd
pop
frstor
cmpps
daa
push
inc
jge
jno
push
loop
pop
mov
loope
cmp
or
adc
test
sbb
sbb
shl
ins
es
mov
jl
fwait
repz
movups
stc
dec
mov
mov
dec
loope
pop
in
out
push
ret
push
cmps
mov
in
mov
sub
repnz
ret
adc
mov
out
int
xchg
mov
rcr
xor
or
loop
dec
(bad)
int3
test
loope
in
sbb
or
xchg
adc
ja
add
push
inc
dec
dec
pusha
xor
fwait
(bad)
jge
pop
clc
(bad)
dec
jmp
push
sahf
xchg
sub
cmp
mov
jg
stos
aas
push
shr
xchg
mov
jo
pop
jl
dec
inc
jnp
inc
(bad)
cmps
pusha
push
pop
inc
scas
cmp
(bad)
frstor
cmp
fs
ret
dec
leave
cmp
jp
jg
mov
xchg
mov
leave
mov
in
leave
xor
(bad)
stc
out
jg
stc
out
jg
pop
add
fcom
add
add
dec
inc
dec
inc
scas
inc
pusha
or
add
add
add
(bad)
(bad)
inc
add
add
add
add
add
add
jns
je
ins
cs
jb
ja
outs
addr16
push
gs
imul
xor
xor
inc
jne
je
jb
cmp
jb
ins
sub
push
jne
ins
imul
imul
bound
xor
data16
xor
fs
add
adc
gs
cs
jb
ja
outs
addr16
imul
add
popa
je
pop
add
add
add
add
add
lsl
add
ret
add
mov
inc
or
add
or
add
add
add
add
or
add
add
pusha
outs
rol
add
add
inc
dec
inc
add
mov
or
popa
add
jo
pop
jae
add
ret
add
push
ret
add
outs
test
add
adc
inc
push
pop
inc
in
xlat
add
and
adc
xchg
out
inc
movs
imul
xchg
sbb
ja
ja
xchg
je
dec
ja
rcr
js
push
jle
jge
add
fs
pop
jo
call
das
test
jecxz
sar
movs
(bad)
sbb
test
test
call
adc
mov
adc
retf
loope
stos
stos
adc
xchg
xor
shl
adc
or
inc
aaa
jmp
push
dec
inc
scas
dec
cdq
adc
fcom
adc
(bad)
xchg
push
in
shl
fwait
ins
arpl
dec
jle
or
cmp
xor
popf
xor
lahf
mov
mov
iret
stos
dec
xchg
iret
xchg
sub
gs
mov
mov
cmc
ds
popf
push
mov
scas
pop
in
sub
mov
pop
dec
out
xor
in
retf
je
in
retf
ds
sbb
sub
sbb
push
push
pop
sbb
sub
lods
fcmovbe
adc
push
and
ds
xor
pushf
cmovns
jo
cmp
inc
and
pop
aaa
fmul
fdivr
mov
sub
push
rol
xchg
push
pop
inc
pop
mov
fmul
mov
stos
mov
movs
retf
lock
imul
add
fnstsw
inc
xchg
scas
push
hlt
mov
push
arpl
fwait
mov
dec
dec
xchg
jns
outs
cmp
jmp
sbb
pushf
call
cmps
add
sahf
mov
push
fisubr
xor
mov
outs
mul
and
call
pop
xchg
or
ss
dec
and
or
addr16
mov
inc
push
mov
push
imul
das
jne
(bad)
pop
loopne
clc
sbb
add
xchg
mov
mov
push
mov
sub
dec
dec
sbb
jb
shl
fcmovu
mov
mov
mov
je
inc
dec
sti
and
ins
pop
push
hlt
retf
xchg
dec
mov
jmp
mov
arpl
js
push
(bad)
loopne
mov
cdq
(bad)
rol
lahf
fcomp
shl
pop
pop
pop
jle
jg
dec
retf
or
neg
lahf
aaa
jmp
(bad)
loope
inc
cmp
popa
(bad)
popa
pop
push
out
out
and
xchg
addr16
sbb
or
cli
ins
stos
cdq
sbb
in
stos
fdivr
out
repnz
jmp
xor
dec
jb
jmp
jne
out
xchg
fld
lds
pop
fincstp
call
mov
aam
daa
(bad)
rcl
xor
mov
popf
loope
xor
pop
dec
and
sar
stos
and
in
test
scas
sbb
jecxz
outs
jns
ins
add
outs
mov
mov
push
popf
fwait
jl
neg
es
xor
cwde
retf
mov
mov
adc
push
jmp
addr16
mov
add
pop
gs
outs
aaa
cmp
jmp
xchg
gs
and
sbb
arpl
mov
repz
outs
lods
inc
push
lahf
repz
inc
lods
(bad)
(bad)
fstp
test
mov
stos
or
hlt
add
mov
leave
sub
outs
and
mov
sbb
jno
mov
sub
lds
xlat
mov
out
shr
ds
or
jo
bound
or
(bad)
xchg
mov
das
xlat
cld
and
test
in
bound
call
out
jmp
outs
pop
fmul
fdiv
jnp
ret
mov
mov
pop
pop
repz
sahf
(bad)
cmps
and
jl
mov
mov
jne
sub
leave
push
inc
ja
sbb
jecxz
add
lock
dec
call
fmul
in
xchg
fcom
cmp
retf
lds
inc
out
in
xchg
or
adc
and
add
lods
mov
lea
xchg
test
jno
ins
inc
shr
push
ror
out
mov
(bad)
mov
mov
inc
jmp
sub
nop
jno
ret
popf
sub
imul
cli
fwait
sbb
inc
aam
mov
shl
and
jge
jmp
mov
int
inc
aaa
jmp
or
dec
sbb
jo
daa
cmp
(bad)
cmps
ins
data16
into
in
mov
loop
lahf
fidivr
out
adc
lds
fsub
(bad)
repnz
dec
push
or
xchg
test
dec
push
jns
repnz
jo
mov
mov
push
mov
fsub
scas
adc
pusha
cmp
pop
and
xor
je
fidivr
test
add
js
daa
mov
xchg
cmps
(bad)
mov
sub
shl
dec
shr
scas
pop
pusha
les
mov
inc
push
mov
(bad)
fwait
xlat
out
out
lfs
mov
xor
xchg
adc
jle
mov
popf
xchg
mov
adc
iret
rol
in
jle
dec
movs
jp
nop
push
fstp
jo
mov
mov
jmp
mov
std
clc
cli
mov
pop
pop
cli
jge
shl
jnp
pop
jmp
loopne
dec
sbb
enter
arpl
xor
in
adc
xchg
fsubr
adc
dec
push
leave
xchg
cld
clc
adc
push
sbb
adc
lock
jnp
std
or
(bad)
rol
dec
movs
scas
sub
scas
bound
(bad)
fimul
jle
inc
inc
inc
sbb
fisubr
jae
push
xor
cmc
mov
sub
js
and
stos
aam
leave
cmc
(bad)
jnp
ds
xchg
lds
and
repz
cwde
aad
cmps
call
cmps
jle
jg
or
jmp
push
or
outs
fld
jmp
scas
push
sti
in
or
mov
loope
inc
rcr
aad
fild
loop
lds
jmp
xchg
shl
jle
in
(bad)
bnd
jbe
fs
mov
rol
xchg
xor
and
rol
mov
xor
repnz
sbb
arpl
dec
hlt
cmps
(bad)
in
mov
pop
int3
in
xchg
scas
fwait
clc
leave
mov
lds
xchg
cmp
adc
ret
push
pusha
repnz
dec
inc
stos
dec
es
push
jp
retf
sbb
sahf
sbb
xchg
into
(bad)
rol
xor
aas
loop
xor
shr
out
mov
stc
and
popa
xchg
sbb
jae
retf
lds
shr
aad
add
or
rcl
cs
push
xchg
and
fwait
rol
adc
lahf
pushf
pop
push
aam
xchg
mov
dec
shl
add
sar
cwde
fcmove
dec
or
add
aad
retf
adc
pop
adc
push
inc
std
xchg
dec
dec
cmp
daa
mov
sbb
aaa
sahf
out
mov
loopne
xchg
in
pop
cmp
pop
cmps
sbb
cmps
daa
scas
movs
mov
mov
fbld
or
mov
lods
mov
(bad)
sbb
(bad)
mov
daa
pop
int
pushf
mov
icebp
and
cmp
or
sbb
jmp
xchg
xchg
fild
jmp
ins
or
lea
imul
cli
jnp
sub
add
xchg
xor
bnd
movs
fs
push
mov
jmp
(bad)
aas
jmp
cmp
nop
push
or
dec
fld
mov
mov
les
cdq
mov
in
aam
xchg
jno
jb
jmp
pop
jo
in
jb
xchg
(bad)
cmp
xchg
popa
or
xor
std
aad
jle
push
(bad)
shl
xor
inc
and
and
call
lea
ror
js
jbe
(bad)
int3
ror
imul
ror
and
popa
fldenv
jne
clc
into
xchg
(bad)
cld
popa
xchg
pop
enter
mov
in
xor
cwde
adc
das
xor
xor
enter
nop
ret
adc
mov
ss
inc
movs
push
fs
imul
mov
push
stc
adc
jno
pop
xor
xor
lods
rcr
mov
mov
cmps
mov
sub
xor
add
outs
xchg
das
jle
rol
push
int
jb
fwait
mov
(bad)
sub
das
and
jl
inc
std
add
add
pop
push
inc
pop
repz
pop
data16
shr
jno
mov
push
stc
in
cs
ss
into
mov
movs
adc
arpl
cli
jae
test
inc
push
pop
out
sti
xchg
rcl
push
cmps
sbb
retf
movs
test
aam
imul
icebp
bound
push
ins
scas
pushf
push
jo
jge
outs
jmp
jbe
addr16
in
add
add
inc
jnp
sbb
mov
dec
xor
mov
inc
and
sbb
push
ficom
xchg
out
faddp
inc
neg
pop
mov
test
inc
or
in
inc
sbb
adc
cmp
dec
xchg
mov
jl
and
sub
xlat
jae
push
cmp
lods
aam
hlt
mov
inc
mov
outs
pop
jp
jle
retf
cmp
rcl
call
adc
push
xlat
and
sub
mov
ins
inc
and
outs
sub
sbb
dec
nop
add
push
adc
nop
mov
mov
ror
or
inc
dec
ins
mov
sbb
ja
movs
mov
test
in
push
push
mov
into
(bad)
or
in
jl
xor
aam
movs
je
jg
dec
dec
aad
xchg
xlat
outs
std
xchg
call
pop
lods
push
sbb
push
xor
xor
arpl
(bad)
jmp
sbb
mov
popa
jmp
sub
or
mov
cmp
jp
mov
and
test
iret
(bad)
iret
std
dec
movs
dec
in
pop
scas
rcr
in
js
push
dec
push
cdq
or
jp
or
addr16
hlt
cmp
dec
dec
test
out
scas
mov
sub
sbb
mov
dec
xchg
sub
sbb
add
mov
push
sbb
cmc
not
in
rol
cdq
das
mov
mov
jp
cmp
fistp
push
push
sti
scas
inc
(bad)
xor
addr16
dec
mov
inc
scas
fisubr
jne
lea
and
xor
xchg
inc
cld
(bad)
jnp
adc
pop
push
sti
in
aaa
and
ss
pop
jecxz
xchg
xor
adc
inc
jbe
xchg
loopne
adc
pop
dec
inc
pusha
push
mov
mov
dec
sar
xor
ret
shl
js
jmp
addr16
or
jo
fdivr
dec
push
push
xor
jmp
cld
sub
stos
sub
xchg
imul
jns
and
sub
loopne
int3
and
adc
mov
inc
and
(bad)
jmp
dec
bswap
cli
sub
mov
cwde
rcl
jmp
dec
jle
adc
mov
(bad)
add
push
cmp
mov
cld
retf
jne
mov
mov
sbb
ror
push
in
wrmsr
out
mov
out
mov
xchg
lahf
cmp
xor
pop
mov
xchg
mov
retf
lahf
retf
pop
mov
mov
push
pop
pop
call
popf
cmp
sahf
sub
xor
jnp
jmp
(bad)
aaa
rcr
sbb
pop
scas
imul
pop
shl
clc
adc
pusha
into
dec
lahf
dec
nop
dec
mov
mov
mov
xchg
repz
push
dec
leave
outs
popf
enter
fcom
jbe
int3
stos
xchg
sub
sub
int3
cmp
clc
push
pop
push
cmp
out
out
dec
xchg
repnz
xor
shr
jmp
mov
mov
scas
std
std
sub
mul
cmp
push
enter
and
std
xchg
dec
sub
xchg
stos
push
mov
(bad)
in
jae
mov
mov
lds
xchg
adc
call
and
and
cwde
clc
ret
cli
adc
sbb
dec
std
mov
inc
loop
lahf
mov
ds
jmp
sti
pop
cmp
cmp
xchg
aas
(bad)
out
sbb
pushf
pushf
fild
in
push
pop
test
jmp
and
sbb
mov
das
inc
or
add
jns
stos
cmp
add
xor
js
add
push
int
cmp
aad
mov
inc
fld
and
inc
repnz
xor
push
xchg
clc
in
jl
pop
xchg
addr16
retf
jp
mov
ret
push
or
dec
daa
scas
rcl
test
sti
repz
add
inc
push
loopne
cmc
(bad)
(bad)
fbld
mov
push
jmp
xchg
mul
cmp
cs
cli
aad
mov
pushf
pop
jecxz
add
(bad)
jo
fisub
cwde
bound
sbb
and
dec
add
mov
mov
ja
lods
cmp
or
cmp
lods
push
ds
sbb
cmp
mov
(bad)
mov
gs
jb
pop
(bad)
inc
jae
leave
scas
daa
xor
mov
mov
cmc
mov
in
sub
mov
sbb
adc
mov
dec
je
or
xchg
in
xor
fdivr
leave
inc
sbb
cmp
fst
ror
jae
repz
jle
out
lahf
out
pop
inc
aas
jle
retf
clc
aad
or
inc
mov
shr
stos
inc
jecxz
jae
rcl
scas
mov
adc
cs
fild
fs
or
(bad)
xlat
(bad)
cli
imul
xor
mov
jg
mov
loope
or
aam
mov
mov
mov
mov
inc
mov
leave
cmp
adc
shl
cwde
xchg
xor
mov
ret
pop
mov
and
pusha
dec
in
jle
data16
or
and
movs
push
test
cmp
loop
push
test
push
mov
jno
cmp
call
mov
cli
xchg
es
or
add
cmp
pop
fsub
js
xor
aas
jne
lea
in
xor
pop
xchg
adc
jmp
stos
mov
push
aas
mov
gs
dec
pushf
ror
jl
cld
or
push
xchg
movs
in
lods
in
call
lea
int3
es
stos
mov
(bad)
popf
lea
ins
hlt
add
inc
xor
push
and
ins
inc
rcl
shr
cmp
pop
dec
mov
cld
and
shl
fwait
jne
pushf
xchg
add
nop
push
dec
push
push
or
scas
bound
je
int
jecxz
pop
(bad)
xor
push
push
mov
sahf
(bad)
xlat
test
in
cmp
xor
jecxz
das
into
dec
dec
into
sub
lds
cli
aas
pop
call
sub
push
xor
inc
fnstsw
mov
enter
mov
fisub
hlt
cmp
(bad)
push
aam
repz
sub
mov
cmps
outs
rol
cmp
mov
sbb
(bad)
in
and
repnz
and
in
scas
and
mov
and
mov
cmp
test
sbb
out
jmp
push
mov
into
int3
and
and
call
dec
and
addr16
out
dec
(bad)
sub
lea
sbb
push
outs
adc
push
mov
rol
mov
cmp
jp
out
in
popa
adc
retf
addr16
xor
pop
push
adc
mov
sbb
(bad)
mov
mov
out
call
adc
cwde
cmp
xor
adc
loop
add
ficom
dec
inc
sub
cmps
xchg
jp
jno
mov
or
into
cmps
aaa
push
inc
test
test
lock
rol
sub
sbb
out
jno
inc
(bad)
clc
lsl
mov
mov
sub
inc
xchg
add
mov
popa
jmp
sbb
and
cmps
jp
pop
push
mov
rol
lahf
jg
stc
out
call
add
inc
iret
push
jmp
add
add
dec
inc
scas
inc
pusha
or
add
add
add
(bad)
(bad)
inc
add
add
add
add
add
add
jns
je
ins
cs
jb
ja
outs
addr16
push
gs
imul
xor
xor
inc
jne
je
jb
cmp
jb
ins
sub
push
jne
ins
imul
imul
bound
xor
data16
xor
fs
add
adc
gs
cs
jb
ja
outs
addr16
imul
add
popa
je
pop
add
add
add
add
add
lsl
add
rcl
add
mov
inc
or
add
or
add
add
add
add
or
add
add
pusha
outs
rol
add
add
inc
dec
inc
add
mov
or
popa
add
jo
pop
jae
add
ret
add
push
ret
add
outs
test
add
adc
inc
inc
push
pop
inc
in
rol
adc
add
loopne
fcmovne
int3
and
out
enter
addr16
inc
imul
fwait
mov
call
int3
in
mov
test
sbb
je
and
leave
ss
dec
sbb
mov
jns
call
fistp
adc
leave
stos
push
cld
xchg
push
mov
retf
sbb
vpshlq
mov
test
(bad)
sti
pop
std
stos
movs
xor
mov
cs
dec
aas
adc
mov
mov
ret
imul
mov
ficom
sub
scas
pop
ds
iret
lea
xor
test
mov
pop
and
add
dec
mov
sti
xchg
xchg
fisttp
or
inc
jae
push
push
mov
out
sbb
inc
es
xor
jg
icebp
rol
sbb
shl
fisub
pop
jl
mov
sub
mov
adc
cld
lds
aaa
push
push
rcl
retf
add
mov
and
fucomi
dec
and
ud2
popa
jnp
out
fstp
es
mov
mov
cmp
fst
dec
push
mov
or
xor
bound
push
leave
iret
and
pusha
jne
sti
and
mov
mov
inc
out
pop
and
inc
lahf
jns
inc
and
arpl
jns
xor
jmp
add
gs
cmp
ins
xor
(bad)
clc
xchg
mov
cld
xchg
leave
xchg
jnp
lea
mov
imul
inc
les
iret
add
mov
pop
add
xor
aaa
jnp
inc
sbb
xchg
mov
stc
and
add
imul
daa
pop
push
movs
stos
or
scas
mov
mov
jmp
fisttp
imul
xchg
or
stos
and
push
arpl
pop
dec
lea
xor
icebp
cwde
daa
retf
sub
pop
in
mov
lea
or
js
jp
push
repz
mov
in
cdq
push
xchg
retf
call
and
(bad)
(bad)
mov
push
push
mov
mov
add
mov
cdq
sbb
inc
ret
xor
test
retf
inc
fiadd
xchg
add
test
cmps
pop
sbb
sbb
dec
push
aaa
xchg
jge
xchg
push
cs
add
jl
out
das
setno
jae
ins
jae
add
dec
push
jb
mov
adc
push
das
int3
cmps
xor
das
pop
scas
xchg
fbld
and
pushf
or
jge
cmp
jp
div
imul
push
je
sub
lea
pop
sahf
or
mov
add
mov
shr
repnz
xchg
test
push
jmp
enter
xchg
xor
pop
shr
sub
push
ss
into
mov
mov
outs
ins
jl
scas
add
jb
xor
cmp
and
ja
js
dec
and
mov
scas
jmp
out
mov
repz
jbe
xchg
or
mov
or
dec
push
imul
les
jmp
cmps
int
mov
cmp
cmp
(bad)
ds
push
mov
imul
add
test
jmp
jg
adc
push
add
sbb
in
stos
pop
jbe
mov
and
push
test
and
xchg
in
sbb
not
or
lds
shr
outs
mov
in
frndint
xor
mov
sbb
shl
lds
call
jb
(bad)
cmp
sti
dec
jae
sti
push
push
sar
sti
loopne
xchg
sbb
jno
add
inc
repz
aad
mov
fcom
pop
clc
dec
sub
retf
sub
sbb
mov
loop
sub
stos
jne
out
mov
dec
mov
adc
xor
add
outs
xor
iret
push
mov
mov
xchg
dec
ins
jp
fwait
xor
inc
jl
cmp
mov
dec
push
cwde
add
mov
xor
cmps
push
pop
add
sub
scas
cmps
pop
mov
xor
loopne
dec
xchg
(bad)
and
jo
push
repz
and
fldenv
pushf
call
ja
aam
sbb
adc
hlt
ds
push
not
xchg
out
fucomi
sub
mov
or
call
ds
ja
or
cmps
cwde
jmp
iret
add
sahf
fucomp
in
xchg
or
jmp
pop
retf
or
mov
in
push
cdq
pusha
push
(bad)
div
jg
in
dec
xchg
xchg
dec
push
adc
dec
xor
add
inc
es
cmp
dec
dec
pop
pop
int
jbe
sbb
push
cmp
ss
scas
adc
imul
adc
fidivr
enter
lahf
hlt
mov
lods
aas
mov
cmp
xchg
push
cwde
lea
pop
jg
fmul
sbb
or
daa
mov
lods
and
dec
inc
pop
cmp
cs
(bad)
cli
ror
nop
in
sahf
cmp
ror
jge
and
(bad)
cli
arpl
dec
xchg
xor
jmp
mov
jne
dec
pusha
sbb
test
clc
mov
sahf
mov
jb
add
outs
movs
les
imul
and
sub
add
ins
xchg
mov
push
jp
repnz
cmp
fs
mov
retf
inc
loope
sbb
inc
adc
add
aad
dec
inc
test
add
sbb
scas
mov
into
int3
fidiv
test
(bad)
lods
arpl
leave
arpl
mov
jmp
fs
adc
iret
test
sbb
into
mov
test
test
enter
sti
int
rcl
mov
ins
adc
outs
movs
(bad)
and
fsubr
out
retf
sub
xor
je
push
pop
fisub
xchg
scas
jnp
(bad)
jne
je
out
into
fsub
mov
jg
dec
mov
and
dec
cmc
ror
stos
test
lock
xchg
jae
push
xor
jno
cmp
or
daa
aad
mov
(bad)
mov
sub
(bad)
dec
xor
pop
(bad)
pop
int
fsubp
cmp
mov
hlt
cwde
push
div
mov
in
jmp
sub
dec
jmp
pop
inc
or
(bad)
sahf
inc
outs
test
aaa
iret
stos
mov
xchg
stos
push
mov
mov
icebp
inc
push
rcr
cmps
mov
mov
jne
icebp
in
mov
lea
imul
adc
ss
mov
arpl
sti
fst
rol
cmc
mul
es
mov
retf
cmps
mov
jmp
or
test
mov
xchg
sub
stc
sub
sbb
and
cdq
popa
xchg
lea
and
cmps
sbb
ret
hlt
je
imul
(bad)
xor
ss
into
stos
mov
xchg
sbb
pop
or
inc
push
adc
ja
push
data16
std
and
add
sub
cli
push
clc
stos
adc
(bad)
out
adc
sub
ins
test
xor
push
mov
loope
adc
inc
inc
xor
jg
lock
inc
lahf
sub
jl
or
push
daa
sbb
mov
(bad)
xor
dec
push
sbb
xchg
sbb
lea
dec
or
fcmove
sub
fistp
push
cmp
scas
cmp
ret
mov
aad
sub
or
das
and
rol
xchg
push
push
cs
pop
add
outs
test
and
and
cmp
fwait
adc
test
aad
lods
pop
repz
(bad)
leave
hlt
loopne
adc
fwait
dec
inc
fld
loopne
add
sbb
scas
enter
pop
xchg
out
push
test
sbb
ss
dec
les
loopne
test
xor
call
xchg
jb
in
cs
xchg
mov
repz
pop
xchg
xlat
sbb
in
and
jg
xor
test
shl
cmc
push
fucomp
shl
adc
jae
xor
dec
or
xor
mov
hlt
mov
xor
dec
jle
cmps
pop
mov
js
mov
neg
fisub
arpl
lods
stos
movs
test
imul
adc
fwait
std
cli
dec
lock
shl
std
mov
sub
adc
rcr
mov
mov
cmp
jp
mov
js
scas
cmps
aad
jp
daa
pop
or
out
or
call
mov
sbb
aaa
(bad)
xlat
inc
mov
inc
int3
xchg
adc
ds
sub
xchg
retf
adc
sub
bound
(bad)
jmp
mov
out
int3
(bad)
push
jae
mov
addr16
pop
inc
cmps
xor
xor
inc
add
jl
not
addr16
cli
push
outs
mov
(bad)
sbb
adc
fistp
cs
inc
push
je
xor
mov
jecxz
push
add
and
dec
mov
popf
jo
les
mov
pop
shl
mul
(bad)
daa
pop
rol
fisubr
frstor
lods
enter
jmp
push
(bad)
push
inc
out
jecxz
dec
loope
adc
cs
adc
vmaxss
add
je
pop
ret
push
sub
fs
jno
sub
fwait
in
cs
sbb
sahf
mov
lods
jp
icebp
dec
dec
shl
add
jmp
mov
pop
push
scas
dec
inc
push
inc
sbb
jmp
jbe
fstp
inc
jae
and
mov
sar
sub
cwde
retf
push
dec
mov
jl
xchg
fst
mov
shr
into
ja
mov
xchg
out
jno
shl
push
and
lock
mov
ja
jb
sbb
pop
loopne
ja
call
pop
addr16
or
ror
daa
adc
cwde
cmps
aaa
arpl
xor
cmp
data16
hlt
xor
cmp
jb
int
inc
into
lods
add
sbb
aas
in
in
in
or
cmp
mov
dec
pop
fisubr
popf
pushf
jae
movs
xor
cmc
push
into
(bad)
out
adc
aam
cwde
pushf
adc
je
ins
cmc
push
(bad)
jo
mov
retf
call
dec
and
push
sub
inc
and
pop
(bad)
leave
xor
mov
rcl
loopne
outs
ins
inc
adc
loop
and
lock
ja
and
and
xor
push
push
lods
dec
adc
pop
js
nop
or
mov
jge
sar
pop
mov
cld
icebp
jae
mov
hlt
lds
push
stc
sbb
outs
in
cmp
iret
adc
popa
add
jge
enter
and
rcr
cmp
fsub
ficomp
adc
mov
lahf
dec
sub
lock
push
add
mov
jl
int
sbb
pushf
xchg
idiv
mov
test
dec
lods
cmps
fnstcw
in
inc
adc
pop
iret
dec
repz
dec
rcl
mov
lahf
mov
push
jmp
inc
imul
ins
push
cmp
jle
pop
mov
std
outs
cmc
sti
mov
pop
ror
adc
in
add
fcomp
ret
inc
sbb
sbb
push
push
sbb
and
mov
retf
pop
repz
mov
cmc
jmp
push
push
mov
cmp
sti
sub
pop
out
outs
push
mov
aad
fild
mov
push
and
sub
jle
cdq
mov
jb
inc
xchg
xchg
iret
xlat
in
push
xchg
jae
imul
adc
lods
cmc
mov
sbb
xchg
ins
xor
inc
(bad)
cmp
push
sub
ins
lods
out
out
lods
lea
push
lgdtd
mov
pop
push
mov
icebp
in
shl
jb
bound
iret
in
shr
cmp
imul
mov
and
sbb
sub
ss
pop
sahf
pavgw
movs
sbb
pop
jns
scas
cld
sub
into
dec
jmp
aas
dec
rcr
xlat
cdq
push
arpl
cs
pop
popa
sub
mov
push
dec
cmp
mov
jns
scas
and
outs
out
loop
adc
arpl
sahf
jns
data16
pop
push
jmp
ficomp
div
repnz
mov
lahf
jmp
repz
push
scas
xor
mov
jecxz
lea
jmp
cs
pop
mov
sar
xchg
retf
movs
mov
mov
push
mov
out
inc
clc
mov
xor
mov
cli
pop
mov
dec
rol
mov
add
stos
mov
je
mov
pop
test
push
or
test
push
scas
(bad)
add
(bad)
pop
dec
aad
outs
in
pop
fwait
dec
add
xchg
rol
fdivr
pusha
pop
mov
(bad)
lods
mov
fst
dec
sti
outs
int3
sbb
je
(bad)
shl
fmul
sub
and
cmp
mov
pop
out
cmp
push
lahf
ficomp
add
pop
enter
cmp
cmp
repz
inc
test
cmp
and
add
dec
mov
sub
(bad)
sbb
xchg
mul
mov
inc
xor
lods
sbb
jle
dec
iret
mov
push
cmp
jae
lds
mov
jbe
test
(bad)
pop
xchg
cmps
sbb
inc
loopne
adc
pop
aas
call
mov
mov
and
inc
add
push
xor
mov
mov
push
pusha
inc
imul
mov
aaa
cwde
imul
or
or
push
mov
ror
mov
inc
add
adc
iret
cld
out
and
rol
xchg
adc
out
pop
mov
add
cli
sar
jmp
push
pop
ret
add
ja
fisttp
xchg
aas
xchg
inc
mul
int3
out
sti
and
pop
sub
stos
ret
mov
cs
out
dec
inc
cwde
mov
xchg
dec
ficom
dec
loopne
dec
ret
adc
add
(bad)
xor
and
xchg
stc
enter
push
jnp
mov
cmp
sub
xchg
jmp
push
bound
add
lock
mov
addr16
out
cmp
sub
loopne
daa
lods
ja
xor
lahf
sbb
aam
and
sbb
cdq
mov
sbb
(bad)
mov
lods
mov
xor
aas
icebp
bound
xchg
jne
xchg
cmp
fcmove
lds
push
int
jmp
add
iret
mov
je
leave
ret
shl
sbb
fcom
add
or
jne
fstp
jns
lods
push
dec
ss
inc
mov
mov
sub
dec
js
repnz
cmp
ja
leave
cmp
imul
fcmovnu
int3
fidivr
and
mov
xor
xchg
pop
xchg
sbb
push
cdq
sbb
ror
sti
jl
aam
inc
je
iret
sub
lods
pop
mov
cmps
xchg
cmp
jb
or
pop
pop
xchg
push
mov
in
push
data16
and
sahf
popa
push
lahf
repz
sbb
cmp
pop
das
or
icebp
inc
ret
ss
dec
adc
add
cmp
and
mov
xchg
outs
push
retf
fwait
aaa
loopne
cld
std
xchg
scas
and
push
sbb
adc
dec
adc
jbe
stos
dec
mov
pop
mov
inc
les
(bad)
leave
popf
and
and
lock
aas
(bad)
cld
repz
aas
(bad)
cld
repz
add
pop
fidivr
into
push
xchg
lock
add
dec
inc
dec
inc
scas
inc
pusha
or
add
add
add
(bad)
(bad)
inc
add
add
add
add
add
add
jns
je
ins
cs
jb
ja
outs
addr16
push
gs
imul
xor
xor
inc
jne
je
jb
cmp
jb
ins
sub
push
jne
ins
imul
imul
bound
xor
data16
xor
fs
add
adc
gs
cs
jb
ja
outs
addr16
imul
add
popa
je
pop
add
add
add
add
add
lsl
add
rcl
add
mov
inc
or
add
or
add
add
add
add
or
add
add
pusha
outs
rol
add
add
inc
dec
inc
add
mov
or
popa
add
jo
pop
jae
add
ret
add
push
ret
add
outs
test
add
adc
inc
inc
push
pop
inc
in
rol
add
scas
out
outs
cmps
arpl
jmp
dec
(bad)
aam
stc
imul
pushf
out
popa
cmp
xchg
fwait
sbb
(bad)
mov
jnp
add
fst
and
aad
xor
pop
leave
add
push
bound
inc
lods
jl
mov
enter
ffreep
xchg
jno
cmp
ror
pop
push
cmc
test
inc
es
and
rol
jmp
fwait
and
cmp
dec
rol
add
sub
add
mov
stos
mov
ds
pop
xchg
lods
push
push
xor
jp
push
(bad)
cwde
adc
and
mov
pop
(bad)
sti
dec
mov
repz
xchg
push
xor
test
mov
inc
retf
gs
pop
pop
into
or
and
loop
sbb
xor
imul
inc
dec
pop
nop
dec
in
js
sub
loope
cmp
dec
jne
dec
in
and
retf
fsubr
gs
xor
xchg
lock
pop
sbb
cmps
inc
or
inc
cmp
sbb
pop
ror
pop
test
mov
js
idiv
xchg
push
js
(bad)
sbb
push
data16
pop
pop
mov
retf
setp
xor
sub
loop
push
add
iret
cmp
test
mov
rcr
sbb
mov
xlat
xchg
push
ret
pushf
pop
inc
or
adc
jmp
inc
mov
or
imul
into
cli
sub
mov
pop
sbb
mov
push
sub
jns
loop
out
add
sbb
dec
mov
pop
fs
pop
shr
es
jecxz
int
movs
xor
add
mov
cs
add
xor
xchg
jg
stos
lock
jge
int3
out
inc
loopne
pop
(bad)
leave
mov
xchg
sub
js
repnz
retf
leave
mov
iret
mov
xchg
rcl
pop
arpl
movs
xor
pop
int
jo
loopne
and
ror
ins
mov
test
fdivr
fcomp
sub
fadd
aad
inc
in
out
adc
inc
retf
cdq
test
icebp
mov
jmp
xchg
mov
sub
jae
hlt
stos
fisub
push
popf
fild
(bad)
in
shl
mov
call
ds
in
test
mov
leave
in
push
mov
movntq
out
ror
mov
cmps
pop
mov
mov
scas
and
shl
mov
mov
xor
inc
call
pop
das
(bad)
mov
pop
cmp
repz
inc
in
sub
loope
push
fincstp
pop
ins
or
xor
pop
sar
push
loope
mov
xchg
and
jo
pop
jno
jns
or
adc
add
sub
fist
lea
das
ret
aam
(bad)
loopne
dec
add
adc
ret
adc
push
call
xchg
mov
addr16
cmp
ss
jmp
jmp
xor
retf
pop
jg
inc
(bad)
mov
int3
les
popf
jne
div
(bad)
fcmove
mov
and
repnz
or
sbb
inc
ss
retf
jl
mov
cmps
das
lds
xchg
inc
fucomi
ins
pusha
xor
jb
push
retf
jnp
mov
fimul
pop
mov
out
mov
mov
scas
loopne
out
jne
in
cs
jbe
call
arpl
in
xor
and
push
fldcw
pushf
and
push
add
mov
or
sahf
or
sub
in
xor
pop
loop
and
sub
mov
push
in
and
mov
out
pushf
jl
sub
dec
or
cmp
arpl
pop
pop
mov
imul
adc
add
push
jns
sti
je
mov
sub
sahf
aaa
mov
jecxz
out
je
mov
rcl
or
mov
sti
pop
out
mov
clc
dec
mov
imul
push
and
scas
adc
sub
push
call
fadd
sbb
call
adc
icebp
xor
xchg
stos
sbb
add
sar
(bad)
or
lock
mov
repz
or
(bad)
mov
aad
mov
popf
pop
push
sahf
bound
loop
jp
shl
in
popf
ds
dec
jb
or
push
or
inc
jno
loopne
ror
adc
int
clc
imul
pop
add
test
nop
xchg
jle
mov
fisttp
jne
aad
adc
mov
in
xchg
not
xlat
adc
in
push
or
inc
aam
clc
mov
jmp
inc
aaa
lea
push
xlat
jecxz
mov
idiv
cmps
out
das
aad
and
xchg
lock
jle
nop
pop
mov
xchg
addr16
jl
fdiv
stc
pop
cdq
cmps
pop
test
fidiv
aad
loope
fcom
mov
xchg
cs
data16
in
sar
dec
add
outs
arpl
ins
retf
xchg
or
(bad)
(bad)
cmp
out
adc
xlat
(bad)
dec
push
and
and
stc
xor
int3
push
xchg
rcr
bound
mov
mov
mov
cli
pop
xor
inc
or
jle
xlat
hlt
mov
cmp
xlat
dec
inc
fdiv
cmps
jg
pop
stc
and
mov
loope
push
pop
movs
jnp
mov
xor
dec
ds
inc
sbb
stc
(bad)
retf
das
dec
and
outs
ret
xlat
inc
push
dec
jmp
mov
popf
jmp
cmc
call
sub
cmp
aaa
retf
jbe
loope
xor
add
mov
in
out
xchg
cmp
mul
in
and
cmp
push
dec
in
in
leave
cli
mov
mov
inc
push
or
(bad)
ins
in
retf
aas
in
enter
dec
mov
pop
jg
xor
xor
jg
(bad)
ds
pop
jp
clc
daa
sbb
repz
sub
addr16
mov
les
fidiv
inc
mov
push
jmp
imul
in
adc
mov
dec
sbb
je
dec
xchg
xor
pop
cld
aam
sub
push
int3
iret
push
(bad)
mov
mov
repnz
mov
add
xchg
jg
in
loopne
sbb
neg
xor
add
ficomp
xchg
xchg
inc
cmp
mov
dec
movs
pusha
daa
sbb
add
stos
mov
(bad)
pusha
stc
push
mov
xchg
mov
in
mov
push
push
and
dec
fcom
mov
loop
mov
xchg
add
popf
rcr
mov
mov
(bad)
jno
push
pop
jl
int3
rcr
daa
mov
lds
xor
add
cs
das
jle
mov
jmp
jnp
pop
push
sti
jne
mov
leave
mov
mov
inc
xchg
out
(bad)
mov
leave
inc
idiv
lods
out
retf
inc
mov
test
inc
int
or
pop
out
dec
dec
jb
xchg
imul
fistp
and
mov
call
or
gs
into
sbb
dec
sbb
xchg
std
mov
push
std
push
(bad)
xchg
mov
adc
or
test
lahf
sub
sbb
test
xor
lea
pop
imul
ror
add
or
dec
adc
cmp
scas
fs
pusha
aad
jle
sbb
cmc
jmp
sub
add
test
movs
retf
outs
retf
and
cdq
pop
inc
sub
push
fidivr
adc
lahf
scas
popf
add
(bad)
aaa
mov
popf
jle
enter
test
jmp
dec
push
push
and
pop
int3
in
pop
or
add
xchg
(bad)
dec
aaa
in
lods
jmp
xor
xlat
aas
inc
call
push
mov
mov
pop
in
pop
xor
in
out
or
or
or
push
mov
out
cmp
leave
push
mov
sub
(bad)
and
inc
repz
icebp
fcom
ins
cmc
jl
jns
xor
and
das
and
(bad)
jmp
push
inc
cmp
adc
ins
push
or
mov
pop
scas
mov
sti
jmp
push
cmps
ins
loopne
in
call
xchg
mov
push
out
mov
aam
cmps
inc
jmp
into
mov
js
pop
pop
shl
xor
neg
adc
jecxz
leave
and
mov
ins
and
xor
cs
shl
bound
mov
fnstenv
enter
mov
fld
mov
ss
pop
and
push
es
mov
add
push
lods
rol
movs
add
sbb
call
inc
dec
dec
aad
jne
in
jg
push
and
inc
dec
es
sub
jne
stc
jmp
in
into
test
nop
icebp
fidiv
ret
rcr
inc
cmp
push
pop
mov
dec
lods
pop
ret
rol
xchg
popf
inc
cmp
sub
dec
jno
xor
ins
ret
dec
clc
js
(bad)
hlt
call
and
out
or
sahf
cmc
sub
popa
mov
sub
sti
cmp
xchg
jns
dec
das
mov
adc
pop
shl
jnp
scas
rcr
cmp
mov
retf
cmp
lods
mov
mov
mov
sub
push
call
(bad)
lock
push
or
xchg
mov
add
in
movs
xchg
out
dec
inc
add
(bad)
sbb
pop
loope
jg
ss
inc
jae
jl
dec
movs
mov
iret
mov
test
inc
mov
mov
ss
scas
cmps
adc
inc
or
xchg
aad
sub
and
xchg
out
mov
out
imul
(bad)
sti
cmp
and
lahf
dec
(bad)
cmovge
jecxz
xor
sbb
adc
add
out
cmp
mov
mov
xor
jle
sub
aaa
cwde
push
test
add
sbb
add
out
cmp
mov
sub
mov
test
ror
jle
or
ins
(bad)
add
xor
setle
inc
(bad)
mov
or
pop
pushf
cmp
(bad)
xor
shl
or
cmc
rol
inc
out
out
push
xchg
adc
dec
mov
jle
popf
lea
scas
dec
push
sbb
pop
pushf
jne
mov
dec
pop
cmp
mov
push
(bad)
repnz
out
das
push
jnp
jnp
in
adc
mov
mov
cmp
mov
cs
jno
(bad)
fisubr
pop
dec
adc
retf
push
push
ins
xor
fistp
out
sub
fst
inc
and
xor
or
das
dec
cmp
(bad)
sbb
(bad)
push
pusha
jge
cs
sub
int3
sub
dec
test
xchg
inc
outs
xchg
sbb
aaa
cdq
sub
mov
fsub
in
cmp
stc
or
cmp
xchg
mov
int3
mov
jo
mov
mov
fld
add
xlat
cmps
sbb
std
add
xor
rcl
movntq
pop
cmp
sbb
sub
xchg
bound
std
and
mov
in
add
fild
xchg
rcr
adc
xor
mov
je
jecxz
cmp
ret
pop
mov
lods
mov
popa
xchg
push
repz
mov
ss
leave
xchg
jle
xchg
mov
retf
push
pop
neg
ret
push
xchg
fwait
pop
and
stos
movs
cs
add
dec
loop
es
push
(bad)
addr16
iret
sbb
movs
mov
loopne
or
mov
cmc
adc
push
mov
into
mov
jge
push
adc
xor
xor
out
je
movs
add
mov
gs
js
js
ror
out
pop
bound
cmc
pop
push
jo
push
ins
fdiv
loop
hlt
push
sbb
sahf
call
(bad)
pusha
push
adc
mov
jnp
pop
sub
jo
imul
fstp
push
add
push
sbb
jo
fdivr
es
sbb
mov
jnp
ins
dec
test
out
mov
and
inc
popf
cmc
xchg
jl
pop
jg
es
fisubr
imul
add
xor
cdq
mov
icebp
dec
dec
dec
mov
cmp
inc
scas
ja
jnp
retf
fsubr
sub
arpl
jne
repz
xor
stos
inc
lahf
mov
sbb
dec
pushf
inc
imul
dec
das
mov
test
add
jns
std
dec
ds
xchg
jle
cdq
xor
push
pop
(bad)
mov
lods
nop
inc
retf
leave
mov
xchg
jmp
and
jb
sub
rcr
cli
in
push
addr16
mov
xor
clc
adc
jae
mov
dec
jg
mov
enter
adc
sti
je
mov
pop
dec
sub
or
cli
mov
sar
imul
lock
loop
fiadd
les
stos
sub
pop
(bad)
dec
or
loopne
sub
sbb
or
js
(bad)
mov
jg
imul
data16
movs
inc
outs
sahf
imul
idiv
adc
cwde
jle
cmp
repnz
xchg
pop
ins
sbb
xchg
xchg
inc
jecxz
das
mov
mov
xor
xchg
cdq
and
adc
xor
jnp
pop
inc
mov
and
dec
in
xchg
lods
xchg
xchg
into
add
or
gs
mov
and
jmp
data16
sub
adc
and
repnz
or
loop
xchg
jno
inc
addr16
jmp
cmp
rep
movs
lods
xchg
add
cmp
call
xchg
pop
push
jecxz
or
pop
push
popf
add
mov
repz
xor
adc
and
neg
outs
in
mov
outs
mov
pop
sti
ins
out
cdq
and
mov
inc
and
call
adc
je
rcl
scas
enter
xor
out
addr16
xchg
xlat
hlt
mov
cs
cmc
cdq
mov
mov
arpl
pop
bound
sub
enter
int
pop
jg
adc
(bad)
sub
mov
and
mov
dec
dec
lea
(bad)
mov
loope
gs
add
mov
mov
dec
dec
jnp
shl
test
in
scas
dec
dec
mov
scas
dec
aas
mov
mov
inc
repnz
push
test
sub
dec
xchg
add
pop
in
ins
les
fist
inc
xchg
sub
cmp
jecxz
ja
out
sbb
ja
hlt
int
add
or
jnp
pusha
push
push
add
(bad)
cmps
je
mov
jno
ss
mov
pop
mov
shr
xchg
xor
mov
dec
pop
outs
pop
mov
icebp
cmp
popf
fnstsw
fimul
ds
fisttp
cli
inc
ss
fist
scas
ret
xchg
in
mov
test
fistp
loopne
cmc
jbe
jl
sahf
daa
sbb
div
retf
mov
push
mov
ret
mov
jbe
cmps
sti
in
mov
call
dec
mov
or
sar
shl
or
imul
dec
dec
(bad)
imul
dec
shl
push
dec
ret
mov
scas
mov
into
and
push
mov
scas
pop
out
sub
fimul
sahf
push
or
stos
jp
(bad)
sbb
out
sbb
jge
je
stos
pop
cmp
fs
into
or
adc
sbb
lods
call
pop
pop
(bad)
push
popf
mov
retf
test
mov
enter
add
pop
das
test
js
cmp
push
sub
pusha
movs
add
sbb
call
leave
(bad)
jge
cld
push
hlt
aaa
adc
and
and
jp
fistp
jnp
test
or
in
inc
dec
dec
ss
popf
lahf
inc
pop
mov
in
push
sti
das
int3
data16
jp
stc
cmps
xor
jmp
push
stc
shl
movs
inc
or
iret
aas
(bad)
cld
repz
aas
(bad)
cld
repz
add
bswap
cmp
bswap
or
add
add
dec
inc
dec
inc
scas
inc
pusha
or
add
add
add
(bad)
(bad)
inc
add
add
add
add
add
add
jns
je
ins
cs
jb
ja
outs
addr16
push
gs
imul
xor
xor
inc
jne
je
jb
cmp
jb
ins
sub
push
jne
ins
imul
imul
bound
xor
data16
xor
fs
add
adc
gs
cs
jb
ja
outs
addr16
imul
add
popa
je
pop
add
add
add
add
add
lsl
add
mov
mov
inc
or
add
or
add
add
add
add
or
add
add
pusha
outs
rol
add
add
inc
dec
inc
add
mov
or
popa
add
jo
pop
jae
add
ret
add
push
ret
add
outs
test
add
adc
inc
inc
push
pop
inc
in
rol
loopne
imul
cmps
ins
mov
imul
int3
clc
jmp
call
call
add
mov
push
xor
out
icebp
pop
(bad)
loopne
adc
pop
xor
mov
inc
xchg
ds
mov
test
pushf
push
loope
inc
xor
mov
shl
sahf
dec
imul
jmp
xchg
fisttp
cmp
push
sahf
push
jb
mov
arpl
in
or
adc
mov
xchg
jb
sub
lea
xchg
jmp
ret
adc
cmp
mov
sbb
xchg
in
or
pop
push
jo
fild
jg
dec
pop
add
mov
int3
jno
push
call
fsubp
stos
(bad)
icebp
jmp
push
sbb
xchg
jns
xchg
sbb
push
push
test
adc
xchg
(bad)
(bad)
nop
repz
inc
fcomp
sbb
test
scas
fmul
xchg
int
int
cmp
popf
test
int3
cmps
mov
jmp
mov
cmps
imul
dec
jmp
lds
or
arpl
cmp
imul
(bad)
jbe
fldenv
push
dec
jle
fistp
cmp
pop
xlat
jle
jo
outs
mov
outs
mov
mov
dec
pop
mov
or
inc
push
mov
fldcw
push
movs
pop
test
sub
mov
ds
dec
ja
(bad)
fdivp
xchg
in
pop
cli
cmc
jne
or
jl
push
dec
fadd
mov
cs
mov
outs
popa
cmps
aas
div
stos
fs
cli
mov
(bad)
int3
inc
adc
jle
stos
call
outs
fninit
loope
cmps
mov
jmp
push
(bad)
out
and
test
mov
xchg
dec
mov
dec
mov
or
push
mov
ja
sbb
ret
mov
sbb
inc
jo
(bad)
or
ret
loopne
pop
cmp
sti
jb
xchg
inc
and
jo
mov
pop
(bad)
cli
fs
xchg
sbb
iret
jbe
xlat
(bad)
cli
outs
pop
xchg
pop
mov
(bad)
sub
aas
in
xchg
dec
(bad)
mov
push
xor
push
lock
ret
push
xor
or
loop
clc
call
gs
sub
inc
fiadd
jno
lds
call
lods
or
ret
cld
mov
sub
ror
gs
aaa
out
xchg
je
fidivr
or
push
cmps
test
or
stc
xchg
je
mov
xor
xchg
push
pop
push
xchg
pop
dec
call
dec
cld
retf
mov
push
scas
lods
sti
fisttp
or
ja
mov
cmp
add
and
xor
mov
mov
jbe
adc
(bad)
dec
jp
sahf
sbb
jecxz
cdq
(bad)
mov
mov
rol
enter
mov
mov
dec
imul
mov
cdq
xchg
mov
cli
inc
jle
mov
out
xor
mov
jmp
leave
jo
mov
mov
in
adc
jnp
jle
or
mov
out
mov
test
jne
loop
sbb
mov
dec
ja
fnsave
jmp
rcr
sub
push
or
inc
aam
ror
mov
pop
clc
int3
call
pop
mov
gs
cmps
dec
scas
and
outs
idiv
mov
inc
or
outs
mov
ins
add
ins
pop
(bad)
cmp
cld
cmc
test
and
stc
jbe
pushf
mov
mov
mov
dec
jne
cmp
mov
inc
or
xchg
stc
je
cli
and
sub
sbb
leave
cwde
cmp
lea
push
in
rcr
mov
add
enter
popf
cmps
dec
jp
imul
xchg
out
sub
nop
lea
(bad)
fbld
add
test
pop
mov
dec
cmps
in
fucomi
push
leave
dec
adc
inc
cmc
fild
fldenv
mov
xor
jbe
jge
pop
lahf
int
add
push
sub
mov
stos
mov
jo
ja
push
fwait
add
ja
jns
push
les
das
mov
or
push
out
mov
(bad)
jb
or
pop
dec
(bad)
pop
jmp
inc
aad
sbb
cli
(bad)
stos
or
loopne
mov
scas
mov
xchg
push
pop
xor
lds
in
jmp
aas
push
out
ja
pop
ins
dec
fwait
or
adc
js
and
in
leave
mov
xchg
rol
out
popa
aad
dec
repnz
fnsave
inc
pop
inc
scas
cwde
ins
ret
dec
(bad)
retf
jo
push
mov
mov
jecxz
cmp
mov
mov
outs
loopne
fwait
adc
push
icebp
je
retf
add
lahf
cwde
sbb
popa
sub
cs
je
adc
(bad)
lahf
xchg
add
loopne
and
mov
clc
jl
inc
fcomp
xlat
add
sub
shl
jns
(bad)
jnp
push
ror
retf
sub
cdq
test
adc
rcr
mov
xor
jmp
int
sub
sub
into
pop
inc
test
dec
retf
mov
aad
lods
(bad)
jbe
imul
mov
nop
push
loope
inc
mov
icebp
inc
call
push
bound
jo
popa
inc
inc
jnp
es
mov
xor
repnz
jmp
and
test
and
std
mov
xchg
aad
outs
loope
push
xchg
arpl
data16
daa
pop
push
bound
pop
xlat
ret
mov
mov
xchg
(bad)
jae
cmp
push
in
adc
jb
pop
mov
add
fdivr
aad
jle
xchg
or
les
call
fcmovnbe
aas
nop
arpl
cmp
ja
mov
lods
call
pop
push
mov
pop
sar
retf
push
fs
mov
into
mov
imul
in
repnz
jnp
pop
add
mov
xchg
or
icebp
mov
out
aad
fbstp
mov
aaa
jl
mov
inc
jmp
sbb
mov
jmp
bnd
and
test
(bad)
jge
in
mov
mov
mov
cmp
fwait
jp
jecxz
cld
mov
fisubr
jne
rcl
fs
inc
push
pop
pop
aam
shl
jae
inc
pop
dec
pop
adc
clc
jle
cmp
mov
pop
mov
les
add
mov
and
(bad)
mov
or
ss
call
push
push
inc
add
jb
int3
in
and
icebp
add
scas
sbb
or
dec
mov
call
inc
cmp
(bad)
mov
mov
ja
mov
pushf
mov
arpl
dec
fstp
sbb
(bad)
xor
pop
mov
mov
fdivr
jo
aaa
(bad)
sti
cmp
and
rcr
mov
jns
mov
test
mov
mov
cmp
stc
retf
loop
push
push
gs
or
iret
clc
in
pop
xor
jmp
sub
leave
out
fst
scas
inc
inc
stos
xchg
jnp
shr
add
mov
mov
pop
iret
into
and
enter
fidivr
call
inc
cmp
aaa
add
test
fadd
lds
mov
push
(bad)
fistp
not
mov
pushf
sahf
jle
pop
pop
inc
imul
clc
loope
arpl
dec
gs
push
in
lea
jg
cmps
inc
addr16
neg
lock
inc
adc
xchg
jmp
sub
fiadd
ret
and
movs
xchg
sbb
clc
jecxz
sbb
cmc
pop
sbb
sbb
inc
inc
push
mov
in
inc
cmc
cdq
fcomp
fidivr
sub
add
pushf
aad
mov
jo
dec
sbb
loop
sub
push
out
cmps
addr16
mov
adc
ins
inc
cmp
sti
jecxz
(bad)
lods
jle
popw
shl
jp
xchg
fld
loopne
leave
sbb
test
addr16
stc
lods
inc
push
dec
pushf
jnp
outs
inc
dec
pop
dec
mov
jl
mov
push
push
fld
stos
rol
push
xchg
stc
in
dec
mov
push
mov
shl
xchg
dec
std
and
adc
push
enter
cld
rcl
adc
fcomp
iret
xchg
pop
xchg
sbb
jns
repnz
and
cmp
pusha
test
or
shr
nop
jg
mov
xchg
mov
(bad)
out
ss
add
push
mov
imul
dec
fidiv
xchg
push
stc
out
call
pushf
mov
ja
loopne
push
popf
fisub
mov
mov
aas
xchg
dec
push
inc
in
out
neg
clc
stc
fyl2x
out
mov
inc
cwde
xchg
mov
xchg
cmp
call
sub
outs
dec
icebp
sbb
mov
gs
into
adc
adc
shl
out
xchg
xchg
cs
jmp
xor
neg
in
xlat
in
hlt
in
adc
ins
adc
cmp
lods
call
or
es
push
les
xlat
sub
ins
sbb
into
or
sbb
ins
retf
or
push
pop
mov
lahf
test
movs
(bad)
cmp
stos
hlt
movs
cmps
les
stos
jge
and
xchg
or
leave
mov
or
and
or
pop
(bad)
cld
push
mov
push
mov
test
mov
xchg
and
outs
lods
cmp
xor
cld
push
ret
push
outs
scas
cdq
add
or
push
in
add
call
lock
retf
dec
sar
sti
xor
xor
jb
(bad)
outs
xor
jmp
test
xor
dec
xlat
xor
in
mov
pop
push
test
ficomp
rcr
xlat
pop
xor
mov
add
hlt
(bad)
sbb
cmp
stos
test
inc
setbe
sub
out
adc
dec
inc
mov
arpl
arpl
rcl
outs
mov
xor
and
jne
sbb
cmc
push
jne
out
sub
dec
mov
sub
adc
in
or
cld
push
adc
inc
test
mov
push
dec
push
in
movs
inc
xchg
inc
ss
cmc
test
outs
lods
gs
outs
es
xchg
add
pop
mov
or
das
outs
aaa
push
or
lods
and
xchg
iret
dec
add
loope
pop
cmc
out
ret
fsub
fldenv
mov
ja
(bad)
xchg
inc
mov
mov
mov
imul
repz
xor
jno
loop
inc
adc
loop
retf
das
lock
mov
cld
mov
(bad)
daa
push
sub
jecxz
fucomi
fld
retf
pop
push
outs
adc
scas
cmp
mov
sbb
in
aam
cli
push
cli
retf
sub
adc
inc
clc
jmp
(bad)
cmp
cmp
iret
xor
jno
cli
scas
cld
scas
ficom
sub
out
rcr
shl
push
add
lea
add
pop
je
je
aas
lahf
pop
xor
es
lods
sub
cmp
call
xchg
dec
mov
popa
in
jbe
(bad)
aaa
inc
fdivr
mov
pop
cmps
sub
das
in
out
xor
ins
and
movs
dec
fs
setbe
fidiv
out
sub
bound
inc
jl
aas
fcmovb
pushf
cmp
cmps
add
das
dec
mov
xchg
ins
sbb
cmp
repz
push
sub
movs
xchg
mov
add
push
mov
repz
adc
aas
(bad)
or
int
outs
ss
scas
jne
xor
dec
sub
lds
xor
push
pop
or
scas
popa
rol
xchg
xlat
das
mov
pop
mov
mov
lock
pop
stc
sar
ret
int3
xchg
jp
jp
out
ins
icebp
bound
mov
cmc
inc
mov
mov
scas
fadd
not
das
(bad)
cmp
cmp
test
sub
mov
leave
out
nop
mov
repnz
(bad)
mov
fs
pop
and
and
retf
into
xchg
aam
or
push
test
popa
in
mov
fdivr
imul
inc
test
shl
or
popa
xor
aaa
cvtdq2ps
add
sbb
sbb
dec
mov
sub
mov
fimul
pop
push
sbb
cdq
mov
gs
dec
sbb
shl
mov
fwait
dec
xor
jp
sbb
mov
jp
jp
sbb
loopne
jecxz
push
test
or
popf
add
sbb
jmp
aam
lea
mov
in
sahf
inc
enter
test
xchg
cmp
call
repnz
leave
(bad)
repnz
cmc
xchg
xchg
aaa
xor
stos
popf
fsubr
lock
call
xchg
xchg
adc
mov
pop
ret
push
cwde
inc
jecxz
mov
mov
dec
mov
imul
jp
xchg
or
mul
out
mov
loop
dec
xchg
retf
pop
jae
dec
or
xlat
ret
xor
mov
adc
ret
movs
or
std
addr16
arpl
pop
jecxz
ins
cmps
cmps
(bad)
js
mov
jae
pop
or
sbb
shl
inc
fdivp
and
mov
pop
test
cmp
pop
sub
mov
jge
sahf
call
addr16
mov
xchg
mul
or
(bad)
outs
sbb
shl
retf
movs
loope
test
shl
mov
aam
inc
sub
mov
cmc
sub
cmp
push
dec
ds
mov
xor
mov
fcomip
mov
or
pop
outs
ds
mov
nop
cmp
xor
xchg
sti
test
jne
add
xlat
scas
ins
into
sub
xchg
pop
scas
test
jmp
add
add
pop
xchg
loope
xor
sbb
jmp
in
and
push
mov
scas
cmp
sub
mov
das
cmc
sbb
in
xor
das
js
inc
arpl
jg
cmc
pop
enter
mov
xlat
out
xor
jp
ds
dec
ins
or
cmc
inc
xor
int3
movs
stc
pushf
mov
jle
dec
clc
popf
retf
loopne
push
int3
mov
pop
sti
jl
nop
mov
leave
pop
arpl
adc
(bad)
xor
fcom
pop
and
out
and
in
(bad)
mov
das
ins
iret
out
call
out
add
dec
ins
mov
jb
loopne
jecxz
ja
aam
dec
int3
push
or
ins
adc
lea
adc
mov
add
or
xlat
in
jb
test
xchg
push
adc
jl
dec
or
jle
enter
lea
inc
inc
outs
loop
aas
fbld
xchg
mov
std
push
clc
pop
stos
cmps
(bad)
inc
mov
xor
sub
mov
cwde
add
sub
fwait
cli
es
xchg
frstor
jmp
cs
mov
rcl
cdq
and
sub
sbb
sbb
adc
sub
sub
cld
scas
fmul
mov
dec
or
scas
outs
out
xchg
nop
adc
pop
std
in
fs
jg
icebp
daa
mov
in
pop
call
iret
dec
sub
xchg
mov
jne
push
adc
out
sbb
ins
loope
scas
je
add
cmp
not
dec
mov
out
scas
clc
mov
push
sbb
enter
push
mov
jnp
out
mov
push
dec
imul
dec
cwde
sbb
cmc
or
into
fistp
and
rcl
sbb
cs
imul
call
iret
scas
lds
call
push
int
lock
and
adc
jmp
adc
test
leave
not
iret
jae
imul
aaa
scas
jbe
mov
test
jg
stc
out
jg
stc
out
jmp
lock
sub
retf
add
add
dec
inc
scas
inc
pusha
or
add
add
add
(bad)
(bad)
inc
add
add
add
add
add
add
jns
je
ins
cs
jb
ja
outs
addr16
push
gs
imul
xor
xor
inc
jne
je
jb
cmp
jb
ins
sub
push
jne
ins
imul
imul
bound
xor
data16
xor
fs
add
adc
gs
cs
jb
ja
outs
addr16
imul
add
popa
je
pop
add
add
add
add
add
lsl
add
mov
mov
inc
or
add
or
add
add
add
add
or
add
add
pusha
outs
rol
add
add
inc
dec
inc
add
mov
or
popa
add
jo
pop
jae
add
ret
add
push
ret
add
outs
test
add
adc
inc
inc
push
pop
inc
in
rol
loopne
call
mov
cmps
daa
dec
dec
ja
out
cwde
pushf
into
xor
je
xor
dec
push
daa
(bad)
pushf
out
ss
jle
idiv
cmp
inc
cmp
or
je
arpl
popf
imul
sysret
mov
fwait
movs
push
or
sar
jmp
jns
cmc
push
push
mov
push
shr
shl
sar
cdq
push
xor
daa
div
inc
stos
and
fsubr
add
cmp
cmp
cmp
or
test
fucomip
pop
dec
inc
xchg
adc
mov
jno
mov
fisubr
push
stos
mov
add
outs
mov
daa
adc
jnp
arpl
test
ret
jmp
sub
jp
sub
mov
repnz
mov
xor
lods
cs
pop
inc
sub
rcr
cmp
sbb
mov
test
aas
or
dec
loope
xchg
sti
(bad)
ret
mov
sti
jns
and
cmc
pop
loop
sbb
mov
pop
jae
xor
idiv
push
mov
sub
(bad)
mov
pop
push
ss
xor
pushw
sti
pop
dec
lea
push
(bad)
jo
jo
retf
movs
std
cmp
mov
mov
jbe
pusha
jg
cwde
leave
(bad)
fnstcw
xor
dec
cmp
repnz
mov
cs
ret
cli
mov
mov
out
pop
pop
and
mov
out
les
in
xchg
and
mov
mov
mov
adc
out
jno
mov
leave
(bad)
jne
test
push
addps
mov
mov
pop
hlt
dec
xchg
pop
adc
push
jle
icebp
(bad)
scas
shr
inc
ror
(bad)
sbb
add
push
add
mov
inc
jnp
push
loope
inc
mov
or
jne
das
fidiv
adc
in
rcl
jo
mov
ds
lods
adc
mov
int
cmps
in
mov
dec
rcl
(bad)
data16
mov
les
ss
repz
cmps
add
add
sbb
sub
(bad)
jb
xchg
mov
out
add
fisttp
and
and
test
lock
add
add
mov
popf
xor
mov
xor
mov
arpl
ss
xchg
push
je
push
repz
cmps
xchg
or
cwde
jmp
mov
dec
cdq
data16
mov
das
ins
inc
ret
rol
dec
sbb
xchg
js
je
jbe
cmc
inc
inc
repnz
add
(bad)
repnz
test
aad
and
sbb
popa
xor
pop
cmp
add
inc
outs
mov
xlat
mov
scas
ins
xchg
mov
jo
pop
in
retf
repz
es
sti
mov
adc
movs
adc
rcr
jns
add
mov
lea
das
repnz
in
pop
mov
adc
or
dec
mov
dec
data16
scas
and
dec
xchg
xchg
fwait
out
imul
sbb
clc
stos
push
adc
scas
xor
pop
adc
cs
mov
cmp
imul
and
(bad)
cmc
xchg
in
lahf
fwait
mov
stc
inc
sbb
or
mov
test
popa
adc
dec
inc
cmp
xchg
mov
scas
(bad)
in
out
dec
idiv
adc
hlt
xor
aam
adc
neg
enter
push
aas
cmps
inc
cli
lock
push
rcr
push
mov
loope
stc
xchg
lock
mov
and
xor
push
int3
cmc
fcmovu
mov
or
pop
fild
adc
in
or
retf
sub
lea
loope
nop
pop
jg
jmp
push
neg
and
retf
cmp
out
adc
xlat
int3
lds
push
jnp
or
jns
push
pusha
scas
nop
fisttp
popa
mov
ins
xor
repz
jmp
cmp
frstor
lds
and
shr
pop
dec
hlt
inc
iret
pop
xor
int
jbe
leave
ins
out
outs
daa
push
push
or
lahf
ror
mov
adc
dec
daa
push
arpl
pop
imul
sub
cs
jl
scas
test
jecxz
jle
sahf
sub
push
sub
add
add
push
sahf
mov
push
stos
(bad)
xchg
iret
xchg
or
movs
stos
push
mov
or
adc
inc
(bad)
aam
jge
sub
add
cs
mov
pop
push
mov
in
sahf
fadd
pop
out
rcl
jne
aad
inc
adc
mov
push
out
add
pop
popa
movs
stos
cmp
test
jmp
add
les
xor
mov
outs
sbb
pop
(bad)
xchg
lahf
adc
ror
xor
aad
out
js
retf
jmp
inc
leave
mov
lea
ja
mov
je
lods
fdivr
sbb
mul
aad
js
fsubr
sbb
addr16
sbb
inc
push
dec
xchg
ret
fild
into
xor
mov
outs
rcl
jp
xor
or
ins
ret
sbb
inc
lods
hlt
fdivp
cmps
aaa
or
and
(bad)
jl
fs
fld
add
mov
sbb
movs
push
xlat
cmps
jae
jmp
or
jecxz
or
aaa
fist
xchg
es
adc
xchg
xor
sbb
sar
xchg
fdivr
push
add
cmp
jae
test
out
xor
pop
mov
call
imul
test
xchg
xchg
pmaddwd
ret
psrlw
bswap
ret
scas
imul
xor
ds
jo
xor
or
ja
ror
fadd
xchg
ins
xor
jp
pop
sbb
cli
jecxz
or
push
mov
retf
jmp
cmps
mov
hlt
in
fisub
shl
call
pop
pusha
cmp
fst
mov
mov
cmp
stc
jo
jns
mov
movs
fadd
lahf
addr16
jne
fstp
adc
cmp
or
(bad)
add
movs
daa
mov
sahf
aad
scas
fisttp
jne
jg
mov
shl
mov
sbb
or
hlt
cmp
jl
imul
data16
(bad)
xchg
push
mov
cmp
pop
nop
sbb
xor
xor
cmp
push
push
mov
ins
jo
aad
push
aad
pop
stos
ror
mov
lods
dec
or
mov
(bad)
into
rol
dec
fucomi
jbe
fbld
mov
adc
hlt
test
test
cdq
test
dec
retf
pusha
stos
repnz
in
jnp
jp
and
inc
inc
cmp
push
jl
cmc
cld
stos
and
sub
cmps
sbb
movs
dec
push
jae
push
fs
mov
jns
mov
inc
lods
mov
fnstcw
xor
cld
or
push
push
jmp
jb
popf
or
mov
ret
jge
push
imul
pop
std
or
cmp
retf
mov
unpcklps
into
mov
mov
mov
repz
icebp
ds
lods
mov
test
test
icebp
mov
aad
push
inc
out
and
mov
ins
mov
push
ins
shl
cmp
inc
xchg
and
lds
cmp
sbb
pop
mov
or
aas
xlat
or
cmp
inc
cmp
shl
jae
daa
xchg
adc
out
xchg
out
mov
push
mov
lds
loope
popf
ret
imul
sub
pop
or
aam
mov
mov
iret
cmp
and
mov
in
js
xor
jg
jne
inc
repnz
mov
and
push
imul
pop
cmp
movs
mov
std
(bad)
repnz
imul
push
mov
xlat
ret
adc
xor
test
(bad)
mov
and
mov
sub
pop
out
arpl
sub
jge
xor
in
test
mov
push
xchg
mov
and
pushf
movs
pushf
xor
sbb
(bad)
jb
arpl
inc
sti
inc
xor
sbb
and
inc
xor
mov
(bad)
aas
pop
clc
and
cmps
lea
adc
lods
adc
lock
dec
loope
dec
inc
cmc
push
mov
adc
sar
adc
adc
fdiv
adc
data16
and
sbb
pop
mov
cmp
mov
ja
mov
movs
shl
push
push
cmp
je
nop
stc
into
fistp
xor
fs
leave
cmp
retf
mov
push
mov
push
sub
xor
outs
mov
clc
mov
inc
and
fwait
dec
dec
jle
pop
xchg
clc
xchg
mov
xchg
in
jne
or
adc
outs
sar
adc
pop
out
ds
sar
(bad)
push
jmp
add
mov
cmp
mov
push
mov
clc
cli
jecxz
cmps
pushf
retf
mov
ret
adc
sbb
imul
push
sbb
cli
fwait
xor
fisttp
(bad)
mov
arpl
aad
push
repz
jae
sbb
mov
fldcw
loope
sar
pusha
in
(bad)
cmp
retf
in
push
lds
or
add
and
mov
or
in
iret
cdq
xchg
add
fild
pop
mov
pop
sbb
and
jnp
adc
movs
or
sahf
ja
stos
ror
push
xchg
hlt
enter
je
jmp
js
adc
popf
mov
(bad)
test
cmp
ror
mov
pop
lock
jb
dec
call
aam
xchg
mov
das
pop
xor
outs
lods
xchg
or
stc
add
xor
cli
out
dec
into
jae
mov
add
xchg
ret
add
pop
fcmovbe
sbb
xchg
fistp
stos
bound
cmc
jno
inc
mov
out
aam
test
inc
mov
stos
adc
popf
(bad)
fbld
mov
mov
in
pop
shr
mov
or
pusha
jnp
aam
mov
or
inc
pop
scas
out
push
xchg
jp
jge
daa
cld
outs
repnz
mov
outs
add
push
fwait
cld
out
mov
lods
in
(bad)
out
aad
xor
cwde
mov
test
retf
out
and
mov
scas
es
pop
je
mov
jmp
inc
adc
cmc
sub
xchg
xor
push
inc
and
imul
mov
or
add
cmp
into
pop
mov
enter
dec
lahf
mov
fwait
loopne
xchg
out
jmp
mov
es
cmp
pop
call
inc
cdq
add
inc
inc
add
in
jmp
scas
dec
xor
call
sub
cmp
test
lods
sbb
mov
jb
js
sti
std
xchg
add
cmp
jp
push
leave
icebp
ja
data16
adc
pop
mov
cmc
aam
imul
imul
leave
push
pop
icebp
fsub
das
addr16
pop
stos
inc
fisubr
jns
pop
(bad)
or
call
inc
imul
adc
adc
mov
(bad)
sbb
(bad)
mov
jp
mov
jo
mov
push
push
mov
mov
in
adc
aad
adc
xor
(bad)
(bad)
sub
retf
mov
sub
cmps
std
pop
aaa
sbb
cmps
test
repz
and
sub
mov
mov
cmp
inc
cmps
jb
jle
enter
int3
inc
ins
ret
sub
mov
mov
mov
enter
pusha
neg
fadd
add
mov
xor
(bad)
imul
inc
iret
xor
aam
mov
dec
cmps
or
out
les
gs
(bad)
push
inc
scas
lods
mov
arpl
push
call
shr
leave
retf
ja
ror
test
sub
not
cmps
call
cld
pop
xor
push
dec
call
xor
dec
inc
adc
fiadd
out
lds
dec
inc
jmp
call
cmp
adc
lods
(bad)
mov
(bad)
sti
pop
je
pop
and
jae
jne
ret
jns
test
pop
sub
ins
mov
sar
loop
push
mov
dec
ds
push
adc
outs
jo
aaa
and
test
push
mov
mov
(bad)
xor
push
and
fcomp
add
xlat
pop
popf
cmp
xchg
mov
les
cld
imul
mov
mov
xchg
mov
cld
sar
inc
push
cmps
jne
pop
and
sbb
clc
mov
jle
ins
mov
aaa
xchg
(bad)
dec
daa
(bad)
scas
gs
mov
les
sub
das
mov
cmp
scas
loopne
daa
jp
push
rcl
inc
rol
icebp
jne
retf
outs
adc
xor
add
pushf
dec
xchg
push
mov
in
shl
xor
std
mov
cs
pop
or
jnp
hlt
shr
enter
jno
or
cmp
pop
mov
retf
dec
ins
cmp
leave
mov
(bad)
fdivr
test
fisub
(bad)
out
sub
mov
das
int
or
fdivr
dec
mov
test
fistp
retf
sub
(bad)
clc
inc
in
dec
movs
xchg
js
sbb
fidiv
sbb
xor
ds
adc
ins
inc
cmp
ret
ss
imul
pop
jo
adc
cld
loopne
xchg
mov
push
jno
fcmovnb
loopne
jl
pop
sti
sub
push
fisttp
addr16
cmp
bound
fistp
sbb
movs
push
jge
ds
clc
inc
scas
shl
sar
movs
das
clc
push
jp
jp
sub
shl
pusha
xchg
push
movs
pop
or
test
call
cmps
xchg
xchg
or
(bad)
cmps
test
ficomp
mov
and
jle
ror
les
adc
mov
popf
pop
cmp
sqrtps
push
out
gs
pusha
or
repz
add
xor
jg
mov
cmp
pop
inc
idiv
cdq
cs
popa
out
pop
fcom
mov
and
sti
mov
stc
in
rcl
aam
mov
sar
enter
out
das
adc
xor
ja
adc
mov
int3
sbb
dec
test
pop
js
ret
(bad)
outs
ret
stc
cmps
ds
mov
add
mov
movs
or
mov
clc
cmps
cmp
dec
std
xor
mov
fistp
lods
test
fnstsw
loop
mov
jl
adc
bound
lds
and
xchg
cdq
xchg
sar
(bad)
rcr
outs
xchg
lea
xor
adc
icebp
mov
iret
(bad)
and
xchg
jecxz
jl
or
aaa
das
jno
hlt
retf
test
mov
mov
inc
sub
pop
jne
leave
cli
inc
mov
out
pop
jmp
fcmovb
mov
or
sahf
ret
add
out
sbb
call
int
dec
gs
dec
stos
rcl
lds
or
push
mov
fmul
jno
adc
or
hlt
or
stc
jbe
mov
inc
and
retf
xchg
xor
and
xchg
(bad)
dec
push
or
or
mov
xchg
and
leave
cld
dec
jns
push
dec
add
mov
add
jl
mov
js
shl
dec
and
jno
pop
fbld
fistp
retfw
bound
mov
shr
scas
and
jbe
sbb
adc
gs
movs
and
cmp
dec
retf
loop
dec
jne
(bad)
rcr
enter
pop
xchg
ret
or
inc
out
pop
mov
sub
jg
repz
(bad)
cld
out
(bad)
stc
iret
push
call
clc
outs
add
add
dec
inc
dec
inc
scas
inc
pusha
or
add
add
add
(bad)
(bad)
inc
add
add
add
add
add
add
jns
je
ins
cs
jb
ja
outs
addr16
push
gs
imul
xor
xor
inc
jne
je
jb
cmp
jb
ins
sub
push
jne
ins
imul
imul
bound
xor
data16
xor
fs
add
adc
gs
cs
jb
ja
outs
addr16
imul
add
popa
je
pop
add
add
add
add
add
lsl
add
enter
add
or
or
add
or
add
add
add
add
or
add
add
pusha
outs
rol
add
add
inc
dec
inc
add
mov
or
popa
add
jo
pop
jae
add
ret
add
push
ret
add
outs
test
add
adc
inc
inc
push
pop
inc
in
aad
push
adc
xchg
shl
and
cdq
in
sbb
xchg
adc
pop
mov
test
ret
call
test
or
clc
mov
jae
add
push
dec
mov
add
outs
pop
jl
add
(bad)
fbstp
pop
daa
push
shl
dec
mov
cmp
cmps
stos
cld
das
add
es
arpl
test
jno
jle
fwait
jg
repnz
paddsb
cmp
(bad)
in
dec
xor
(bad)
mov
xchg
jmp
div
in
or
jnp
bound
jecxz
test
outs
lock
jecxz
xor
jb
mov
mov
outs
cmc
repnz
pusha
mov
mov
mov
iret
mov
mov
stc
js
sbb
in
xchg
inc
add
and
int
aad
xchg
mov
repnz
mov
and
ds
xchg
cmp
push
jle
add
and
fmul
out
sbb
and
test
jecxz
clc
pushf
push
adc
loopne
fist
pop
inc
or
(bad)
repnz
mov
add
inc
(bad)
cli
aas
sub
and
ficom
out
push
sub
ficomp
sub
imul
mov
ret
sub
gs
inc
icebp
adc
xchg
dec
push
adc
lds
dec
cld
idiv
mov
sar
pop
sti
mov
adc
xchg
mul
(bad)
adc
adc
inc
fisubr
ss
arpl
jp
mov
add
xchg
mov
or
add
(bad)
mov
cs
mov
push
enter
mov
cmp
sub
fdivr
cmps
mov
mov
mov
addr16
push
adc
xor
push
xor
popa
jge
jae
xchg
movs
outs
out
movaps
loop
jo
test
mov
retf
and
push
lahf
iret
cld
mov
push
pop
inc
jle
retf
ror
cli
std
sub
pop
iret
ret
mov
fisttp
push
xchg
mov
out
mov
mov
dec
mov
add
xor
adc
mov
(bad)
sti
test
pop
inc
pop
lea
cmp
les
pusha
jl
push
outs
test
into
sub
mov
adc
jno
test
cmp
mov
inc
ret
dec
imul
and
jmp
cmp
(bad)
rcr
cli
cdq
arpl
repz
outs
xor
jg
or
push
stc
fnstsw
shr
mov
adc
cli
cmc
jo
and
mov
call
or
mov
(bad)
scas
cdq
cld
and
add
jmp
(bad)
hlt
mov
loope
cmps
ret
dec
daa
jbe
push
add
fwait
out
test
xor
ret
(bad)
inc
and
mov
cmp
cmp
das
adc
sub
pop
cmps
scas
aad
adc
mov
sub
ins
lea
lock
cdq
cs
dec
outs
pop
inc
cld
mov
mov
push
mov
dec
push
in
xor
into
mov
(bad)
xor
mov
add
icebp
loope
dec
popa
inc
mov
stc
(bad)
loope
cmp
test
adc
sbb
push
mov
cmp
enter
js
cdq
mov
cmp
jnp
mov
jno
xor
std
push
cld
loope
int
adc
fld
loop
push
mov
cli
cmp
and
jg
xor
adc
pop
jne
movs
loop
xchg
add
test
sti
add
push
inc
cmp
call
xor
mov
xchg
(bad)
in
lea
adc
cmp
adc
fwait
stos
sti
xor
inc
neg
jns
jmp
rcl
adc
inc
dec
push
cmp
bound
push
mov
mov
dec
retf
sbb
pop
push
arpl
push
xchg
and
mov
int
bnd
push
dec
push
ds
xlat
pop
jns
adc
mov
push
loop
jecxz
or
out
push
mov
xor
sbb
ds
scas
arpl
xchg
ret
ds
ss
inc
aaa
int3
dec
mov
addr16
xchg
pop
retf
js
jne
jbe
js
xchg
pop
jle
sub
mov
(bad)
hlt
shl
xor
retf
mov
in
test
mov
fcom
xor
test
pop
ret
fucomip
push
daa
fidivr
xchg
mov
es
pushf
fbstp
adc
xor
out
sub
mov
rcr
movs
cmc
icebp
fnstenv
out
mov
pop
loopne
adc
test
mov
rcr
(bad)
push
jl
ret
(bad)
nop
(bad)
push
cmp
adc
mov
adc
repnz
mov
int
call
(bad)
mov
add
jge
fbld
in
mov
aad
shr
imul
shr
sub
fsubr
aam
cld
sub
jae
lahf
adc
mov
xchg
adc
int
add
scas
cld
ins
pop
pushf
mov
and
out
xlat
or
dec
test
imul
fadd
cmps
push
or
jmp
les
mov
jle
retf
hlt
mov
add
xchg
mov
inc
cmps
xor
aas
int
dec
mov
jns
jne
pop
xor
test
sub
dec
cmp
ficom
push
sbb
dec
add
pop
loopne
div
jle
movs
repnz
push
aad
xchg
or
retf
(bad)
ins
aam
dec
inc
pop
or
fcom
mov
sbb
mov
mov
mov
in
cmp
mov
fldenv
out
pop
mov
int3
int
test
pop
mov
push
popfw
inc
push
arpl
add
mov
jg
lahf
es
in
adc
das
mov
sti
xchg
add
in
jge
jo
inc
xchg
add
add
cmp
add
or
jmp
fistp
pop
pop
xor
fs
out
aas
pop
lahf
aam
outs
xlat
call
xchg
aad
mov
fisubr
cmp
pusha
outs
in
mov
add
scas
pop
fist
gs
ret
push
pop
pop
add
js
cmp
dec
js
add
sub
sub
int
mov
stos
adc
push
cmp
pop
cdq
stc
mov
jecxz
neg
fs
aas
loopne
inc
cmp
sub
(bad)
call
jmp
fisttp
pop
adc
add
aad
push
xchg
js
mov
int
je
mov
sub
inc
sbb
push
and
jg
dec
shl
dec
addr16
push
mov
xor
stos
cwde
inc
out
add
(bad)
cwde
and
add
aam
in
cmp
pusha
out
sbb
and
shl
mov
push
out
(bad)
lods
jb
test
jmp
scas
cmp
in
push
cmp
pop
push
inc
retf
adc
mov
jno
icebp
push
repz
fisubr
xor
test
pop
mov
inc
mov
push
or
repz
cmp
call
sbb
and
inc
sub
adc
adc
jb
pop
cmp
inc
xchg
cmps
xor
xor
mov
jae
jmp
add
fwait
jmp
lds
out
scas
movs
sbb
adc
nop
test
in
mov
rcr
cmps
or
add
daa
sub
xchg
cmc
retf
pop
fst
cdq
push
jecxz
sbb
repz
pop
test
jle
(bad)
or
sub
je
out
xor
mov
test
sub
aam
std
xchg
mov
lods
push
sub
stc
add
xchg
ret
or
call
loop
movs
aad
mov
mov
bound
mov
push
ins
clc
add
ficomp
mov
or
xlat
into
jmp
adc
repz
int3
push
(bad)
xchg
retf
iret
out
or
imul
enter
hlt
(bad)
add
jl
jo
mov
mov
in
(bad)
mov
inc
(bad)
arpl
pop
bound
jge
cmp
ucomiss
(bad)
outs
jbe
out
xchg
or
stos
xor
inc
int
add
jp
aaa
push
sub
or
inc
repnz
mov
pusha
xor
pop
cli
pop
fwait
idiv
jecxz
(bad)
jae
shr
loope
dec
or
rol
stos
jl
adc
jne
jmp
adc
jb
jg
cld
call
aam
mov
adc
cwde
cmp
iret
cmp
and
jmp
sbb
jmp
inc
cmp
cmc
mov
pop
les
adc
pushf
jmp
xchg
inc
inc
xchg
jbe
lea
push
xchg
add
add
push
lahf
xchg
push
xlat
stc
xchg
test
push
mov
push
jae
out
in
push
dec
out
sub
inc
sar
xchg
das
gs
lahf
xchg
fstp
imul
adc
sub
cmp
movs
pop
sub
xchg
mov
lock
mov
push
in
sub
loop
movs
sub
dec
adc
fild
xor
xchg
xchg
out
(bad)
fimul
cmc
sbb
fbstp
cmp
dec
jecxz
jb
add
(bad)
repz
mov
js
inc
and
rcr
and
xor
test
push
test
dec
mov
jg
and
test
add
sub
jmp
adc
retf
call
fadd
cmp
lods
loope
ins
imul
mov
adc
mov
popa
mov
and
dec
jmp
shr
adc
xor
nop
or
jg
mov
add
in
jns
xchg
adc
clc
repz
push
imul
inc
inc
lods
jo
test
inc
jb
fstp
or
jo
in
in
aam
(bad)
popa
jp
sub
out
cmp
sbb
cmps
xchg
(bad)
jle
xlat
(bad)
sbb
xor
jb
cmps
sbb
pop
in
mov
ins
jg
ret
sbb
push
(bad)
into
ror
imul
cmps
xchg
int
or
pop
jmp
repz
push
push
adc
into
in
aas
mov
or
mov
xlat
(bad)
ror
imul
push
test
or
mov
aas
mov
mov
inc
leave
fs
loope
popa
mov
xchg
fnsave
ficom
scas
jle
mov
pop
add
daa
(bad)
sbb
or
sub
retf
inc
jae
sub
mov
test
pop
rcl
jo
in
outs
sub
xchg
jmp
scas
out
outs
frstor
retf
fadd
mov
and
cmps
jnp
ret
and
mov
cmps
or
mov
mov
push
mov
(bad)
jmp
sbb
imul
pop
icebp
bound
pop
stc
adc
cmp
call
push
les
out
xchg
add
dec
cwde
shr
fcom
out
xchg
out
xchg
les
inc
sub
cli
out
popa
mov
mov
ja
dec
jl
and
outs
lahf
cmps
ja
lock
outs
lahf
lds
je
mov
iret
xor
ins
xchg
and
jo
mov
inc
call
stc
stc
ja
stos
out
push
xchg
movs
popf
iret
add
out
push
cmps
add
and
cmp
test
cld
into
jnp
mov
imul
xchg
dec
pop
les
call
je
mov
sub
repz
jo
jecxz
sbb
int3
es
xor
add
and
stos
cmp
fstp
leave
dec
call
ins
jmp
loopne
sub
rcr
test
jmp
ret
dec
lods
ret
mov
and
loop
and
or
dec
sub
adc
fstp
xor
out
lock
dec
adc
push
cli
daa
outs
pop
sar
sub
lods
je
lock
sub
inc
ds
xor
fs
push
push
and
lock
mov
mov
aas
or
es
dec
xchg
pop
inc
in
sub
jbe
dec
sub
cmp
inc
loop
sar
scas
scas
adc
ins
inc
test
into
dec
cmps
pop
adc
push
inc
shr
test
and
add
sub
mov
lods
out
push
ret
jle
xor
cs
pop
cld
shl
retf
int3
rcr
mov
or
dec
sub
mov
sbb
push
xor
pusha
mov
push
fiadd
loop
inc
in
arpl
les
dec
addr16
mov
clc
sub
xchg
and
(bad)
in
pop
dec
movs
mov
in
jp
jecxz
icebp
mov
ins
in
mov
lahf
add
(bad)
mov
cld
mov
adc
fiadd
idiv
mov
rcl
arpl
in
rcr
call
mov
xchg
cmps
cmp
push
push
mov
mov
adc
pop
pop
je
fild
nop
push
mov
xor
jg
jecxz
scas
push
xchg
or
loope
sbb
cs
das
test
jae
dec
xor
(bad)
dec
je
push
cmps
test
stc
call
inc
push
cli
or
inc
test
mov
mov
int
fdivr
out
and
neg
lods
into
pop
and
out
loope
jmp
mov
pop
frstor
sbb
or
add
or
inc
push
push
and
xor
js
popa
mov
sar
fsubr
mulps
xor
cmp
xlat
xor
das
std
pop
adc
fldl2t
or
sub
pop
dec
pop
retf
xor
push
(bad)
mov
xchg
dec
lea
das
cld
int
sub
mov
(bad)
sti
and
jae
fild
cdq
movs
mov
sbb
ins
retf
pop
mov
fs
loop
jp
mov
mov
pop
iret
xchg
imul
sub
aam
imul
mov
sar
mov
jmp
xchg
jne
ret
add
scas
ins
or
(bad)
jo
cmp
ins
adc
ins
or
movs
mov
and
retf
popf
cmps
int
pop
jl
mov
call
sbb
mov
lods
jg
call
ffree
aam
je
pushf
mov
sti
cmp
shl
repnz
mov
dec
push
fdivr
ss
xor
and
fwait
addr16
repnz
cmp
out
add
call
jne
test
stos
pop
leave
or
or
stos
lods
jg
jne
in
mov
add
shl
dec
clc
add
and
sub
xchg
and
sbb
or
xor
out
adc
in
out
push
retf
push
add
test
loop
scas
ret
cmps
imul
add
loope
fstp
mov
outs
(bad)
lods
mov
iret
adc
xor
add
push
sbb
cdq
cmp
sti
pop
out
(bad)
sub
jae
(bad)
mov
fldcw
mov
jle
fadd
xchg
stos
jle
sar
ja
sub
or
test
sahf
iret
push
or
cdq
pop
daa
or
jl
adc
clc
xchg
sbb
add
push
xor
add
push
adc
mov
mov
xor
sub
sub
inc
mov
push
inc
mov
outs
mov
movs
mov
and
xchg
sbb
pop
xchg
mov
dec
sub
cs
jp
xor
pop
ds
dec
lds
scas
xor
xor
xor
jno
jmp
cmp
sbb
mov
in
shl
xchg
retf
in
int3
xchg
and
mov
fstp
pop
pinsrw
pop
jecxz
push
sub
xchg
imul
retf
or
mov
cmp
in
xchg
xor
adc
dec
das
cli
dec
lods
jnp
popf
mov
xchg
mov
cld
popf
mov
push
lods
mov
xor
cmp
sub
enter
sbb
jl
sbb
leave
xchg
cmps
(bad)
pop
xor
pop
xor
mov
mov
jbe
xor
outs
xchg
and
mov
lahf
jg
stc
out
jg
stc
out
sbb
lock
dec
mov
jmp
add
add
dec
inc
scas
inc
pusha
or
add
add
add
(bad)
(bad)
inc
add
add
add
add
add
add
jns
je
ins
cs
jb
ja
outs
addr16
push
gs
imul
xor
xor
inc
jne
je
jb
cmp
jb
ins
sub
push
jne
ins
imul
imul
bound
xor
data16
xor
fs
add
adc
gs
cs
jb
ja
outs
addr16
imul
add
popa
je
pop
add
add
add
add
add
lsl
add
rcl
add
mov
inc
or
add
or
add
add
add
add
or
add
add
pusha
outs
rol
add
add
inc
dec
inc
add
mov
or
popa
add
jo
pop
jae
add
ret
add
push
ret
add
outs
test
add
adc
inc
inc
push
pop
inc
in
aam
and
pop
add
scas
into
adc
cld
cwde
ss
pop
ror
cmp
fwait
popa
mov
jae
ja
fwait
sbb
dec
sbb
mov
jge
les
add
ss
addr16
ins
or
push
dec
int
ret
and
clc
dec
mov
(bad)
ins
xchg
cmps
push
cmp
mov
(bad)
sub
pop
jae
adc
xchg
jbe
sbb
jbe
mov
mov
pop
(bad)
not
cmp
lahf
xor
push
clc
or
jne
sbb
pop
pop
les
mov
jle
push
aas
repz
push
xchg
scas
stos
les
xor
xchg
sar
lahf
rcl
aaa
(bad)
dec
lods
lods
dec
inc
retf
retf
mov
mov
xchg
es
scas
cmp
or
sbb
xchg
loop
pop
jae
jge
outs
pop
xor
sub
pop
mov
dec
jnp
dec
sub
dec
addr16
jp
push
aaa
aaa
push
jb
mov
push
mov
jmp
xor
adc
movs
out
mov
shl
pop
xor
push
and
pop
mov
jecxz
and
push
bound
jae
dec
test
ret
inc
ja
add
adc
scas
das
std
out
mov
adc
in
out
inc
push
xlat
(bad)
aad
push
jge
mov
mov
mov
cmp
mov
mov
sahf
imul
mov
popa
xchg
popf
call
jg
bound
mov
stc
sbb
clc
mov
retf
push
in
mov
icebp
(bad)
fimul
(bad)
scas
aam
add
or
repz
in
dec
bswap
and
push
data16
add
ja
outs
(bad)
mov
and
ret
fadd
pop
xor
fnstenv
dec
cmps
and
scas
aaa
cmc
or
enter
jmp
dec
mov
push
in
sub
and
leave
(bad)
inc
arpl
cmp
(bad)
jmp
ror
push
outs
cmps
mov
mov
movs
not
scas
jge
cdq
in
cs
das
xchg
xor
push
(bad)
out
push
cli
fistp
pop
shl
iret
sbb
or
call
mov
leave
out
push
xor
ror
push
push
das
xor
shr
scas
dec
into
push
ins
mov
scas
ins
(bad)
jmp
fldenv
test
daa
and
add
xlat
ins
gs
pop
aaa
cwde
mov
xor
dec
jmp
mov
jmp
aas
inc
icebp
pop
jnp
sub
cmps
loop
dec
retf
cmp
test
lahf
popa
mov
sub
mov
cmps
imul
cmps
scas
cmps
pop
into
mov
fs
sub
mov
xchg
inc
fsin
sbb
cs
push
fwait
add
cmp
adc
sbb
cmp
stos
(bad)
xor
sub
imul
adc
dec
push
out
movs
xor
sbb
mov
addr16
fdivr
jns
jmp
mov
mov
pushf
pop
mov
fwait
push
pop
clc
mov
je
data16
mov
pop
or
cmp
inc
pop
jo
ins
enter
xor
ret
cdq
stos
or
mov
test
loopne
dec
cld
push
push
jg
pop
loope
lods
sub
sub
cmp
jmp
sub
jl
cmp
mov
xchg
sub
cli
outs
push
popf
pop
jne
leave
jb
push
pop
mov
or
out
push
fcom
push
mov
ja
sbb
mov
in
test
xlat
ja
or
adc
dec
xor
ins
or
fs
jg
sar
jbe
int3
jle
es
or
mov
adc
xlat
test
pop
xchg
shl
mov
lods
push
scas
out
adc
test
add
iret
pop
daa
(bad)
and
cmp
shr
(bad)
pop
retf
add
movs
out
pop
mov
mov
dec
leave
jmp
mov
mov
sub
clc
jo
xchg
jae
jecxz
push
xor
pop
aad
jae
loopne
dec
sbb
pop
pop
dec
or
loop
jg
test
sbb
push
cmp
xchg
sub
stc
ins
inc
fsubr
push
add
scas
movs
je
cmps
xchg
cmp
iret
jmp
les
(bad)
xor
retf
xchg
sub
or
movs
retf
loopne
cmp
rcr
xchg
sub
and
push
fist
stos
xchg
lods
aas
stos
or
mov
jbe
sub
dec
lods
(bad)
call
std
push
xchg
fdivr
dec
in
inc
fist
test
jecxz
jmp
dec
jne
mov
adc
push
pop
mov
add
adc
stc
inc
(bad)
(bad)
cmp
adc
sbb
xchg
out
call
jp
mov
es
dec
pop
or
mov
push
iret
shl
mov
(bad)
add
popa
div
jnp
cmp
xchg
hlt
cmp
jae
out
pop
fist
jg
or
inc
xor
jbe
xchg
movs
mov
gs
das
adc
xchg
aad
sub
test
mov
add
add
mov
mov
js
shr
xchg
aam
dec
mov
inc
into
sbb
mov
inc
test
and
and
jp
add
cmp
mov
sahf
jns
ret
loop
sub
out
inc
ins
ja
iret
cli
std
dec
repz
imul
ds
cwde
lods
xchg
rcl
mov
lds
arpl
popa
hlt
scas
fcmovnu
inc
ja
pop
pop
push
jg
sar
pop
aas
cmps
mov
data16
dec
movs
retf
xchg
jmp
xor
mov
or
call
push
pop
hlt
repz
dec
aaa
mov
pop
xchg
mov
addr16
sbb
jecxz
mov
mov
(bad)
stc
int
add
vmovntdq
push
pop
or
ror
not
adc
sub
cmps
inc
or
pop
mov
jge
scas
in
cs
mov
aaa
mov
and
cmp
fld
xor
aam
std
cmp
push
(bad)
sbb
pusha
xchg
out
sbb
outs
add
mov
inc
aam
jecxz
and
xor
mov
jle
pop
ret
push
mov
aam
inc
cs
push
push
dec
loopne
scas
js
dec
ret
cdq
stos
xchg
inc
mov
inc
repnz
scas
and
or
inc
jae
stos
jp
cmp
mov
pop
lea
push
rcl
cmp
clc
lods
in
xor
mov
jae
push
mov
retf
mov
push
or
cmp
push
and
dec
cmp
scas
or
mov
inc
inc
loopne
retf
xor
mov
iret
std
fwait
xchg
aaa
div
inc
jmp
xchg
addr16
sub
xchg
(bad)
fnstsw
je
fistp
adc
lock
mov
push
mov
stc
mov
out
mov
and
pop
jo
cs
jmp
fwait
iret
(bad)
dec
push
scas
and
fwait
cmp
inc
fdiv
inc
data16
ror
sbb
jge
inc
push
pop
fabs
sbb
rcr
inc
lahf
outs
or
call
mov
bound
or
xor
sub
mov
pushf
inc
adc
lahf
jbe
adc
in
mov
inc
pop
mov
jns
ror
xchg
jp
fstp
sub
(bad)
into
ins
push
inc
cli
xchg
loopne
fdivr
dec
ja
pop
and
fisub
loop
iret
stos
in
inc
lods
xchg
int
bound
cmp
pop
xor
in
push
inc
jne
dec
mov
dec
(bad)
shl
ins
retf
push
cwde
xor
xchg
mov
pop
out
cld
mov
iret
pop
or
imul
cmp
out
pop
jmp
bound
cmps
or
mov
scas
lock
and
xchg
pop
imul
(bad)
icebp
arpl
mov
int3
imul
mov
mov
push
add
aaa
dec
mov
xchg
push
movs
pop
fnsave
adc
idiv
aam
xor
cmp
movs
das
aas
jg
push
or
cwde
div
sub
xchg
sar
mov
pop
imul
test
add
mov
lods
jge
mov
xlat
mov
push
(bad)
push
jl
jmp
cli
dec
hlt
addr16
mov
fwait
ja
outs
mov
mov
push
mov
mov
xor
fiadd
mov
sbb
sbb
cmp
mov
stc
int3
scas
ficomp
mov
sub
popf
pop
test
div
es
xchg
pop
cmc
ds
sbb
iret
in
pop
xchg
lahf
aaa
test
ret
sbb
cmp
stos
int3
ja
pop
and
push
out
cmps
pop
xchg
out
xor
adc
ss
and
mov
popf
aam
fs
mov
cs
pop
or
test
and
dec
aam
fxch
jl
dec
adc
aas
adc
xor
mov
daa
add
sbb
jge
xchg
shl
mov
cmc
out
(bad)
mov
ret
fidivr
xor
rol
pop
repz
dec
dec
cmp
cmp
mov
add
sbb
xchg
add
pop
fcomp
loopne
push
pushf
xor
ret
adc
stos
and
hlt
lds
lock
xchg
adc
add
mov
mov
das
dec
jmp
pop
add
punpckldq
lds
pop
stos
adc
cmp
xor
and
mov
pushf
out
adc
enter
pop
sbb
(bad)
hlt
aaa
pop
repz
push
pop
mul
mov
cs
outs
adc
int
adc
(bad)
cmp
xor
sbb
outs
sbb
stos
(bad)
xchg
daa
push
xchg
or
enterw
cmp
dec
nop
ret
xor
push
adc
movs
rcl
lods
push
xchg
bound
sub
pushf
pop
pop
sub
mov
js
movs
retf
ins
fwait
pop
out
add
push
inc
cmp
rcr
lahf
lock
aam
jnp
loop
xor
cdq
out
add
or
out
push
mov
shl
test
xor
out
cmp
mov
(bad)
fld
test
or
cmp
sub
(bad)
push
pop
adc
mov
sub
retf
push
in
fmul
and
dec
xchg
inc
int
or
mov
xor
shl
pop
test
fadd
xor
not
sub
retf
out
push
jo
cli
in
icebp
mov
aaa
inc
nop
js
sub
push
adc
adc
fnsave
mov
fcom
mov
daa
lea
retf
es
jmp
push
ret
adc
pusha
gs
jg
fcom
sti
mov
out
ss
aad
push
test
and
cmp
outs
dec
pop
adc
lea
pop
push
adc
in
mov
outs
mov
and
add
dec
jmp
push
mov
or
test
sub
clc
xchg
mov
jo
lea
fadd
sahf
mov
rcr
jnp
fistp
adc
push
adc
and
adc
rcl
scas
ret
or
fstp
or
enter
aas
inc
sar
in
ins
add
mov
mov
add
loope
and
xor
in
jp
add
pushf
out
xchg
mov
movs
mov
(bad)
xor
inc
pop
adc
jp
sub
push
adc
dec
mov
pop
hlt
fisub
sub
out
mov
cmp
jae
fcom
adc
push
int3
loope
mov
ja
add
xchg
fwait
mov
push
pop
test
add
(bad)
push
bsr
cmp
pop
sub
fst
lock
les
jl
mov
sub
dec
push
xchg
in
out
add
cmp
jo
icebp
sbb
cmc
ficomp
repz
in
imul
push
into
push
call
retf
pop
ds
jg
mov
je
sub
adc
enter
jmp
mov
pop
inc
sub
in
fwait
jb
sbb
mov
frstor
pop
call
add
jle
sub
add
cmp
clc
mov
fsubr
cmps
xor
and
lds
and
xchg
(bad)
idiv
or
jnp
xchg
movs
fild
fstp
push
(bad)
xor
cli
mov
and
fstp
cmovl
repnz
sub
xchg
push
fld
repnz
call
pop
mov
mov
(bad)
cwde
pusha
scas
leave
fld
push
imul
ins
xor
dec
std
jmp
sbb
fidivr
mov
add
ret
frstor
sahf
jae
xchg
mov
in
movs
rol
mov
sbb
and
dec
and
aam
jmp
leave
pop
jecxz
jnp
push
pop
sahf
mov
add
mov
lahf
jno
sti
adc
push
add
leave
mov
pop
mov
out
enter
mov
mov
icebp
arpl
out
pop
dec
popa
mov
mov
push
outs
add
cmp
scas
imul
jo
adc
int
or
push
repz
xor
jbe
xchg
test
cld
mov
scas
pop
aam
sti
sti
(bad)
cmp
in
fist
outs
mov
push
fild
sub
dec
jnp
mov
ficom
cli
cmp
loopne
mov
cmps
xor
mov
iret
loope
inc
out
int
sub
in
add
ss
ret
(bad)
leave
adc
and
das
std
push
icebp
dec
adc
mov
adc
inc
jno
mov
repnz
int
aam
jg
lock
dec
ret
push
int3
mov
out
test
(bad)
scas
fistp
jge
icebp
cmp
pop
ss
test
arpl
sub
sar
jnp
cmc
push
push
mov
call
popf
cli
and
sbb
sub
push
int3
fdivr
pop
les
repz
mov
ja
inc
ret
mov
je
fbld
push
or
or
add
pusha
retf
inc
dec
add
lods
sub
add
xchg
stos
aam
in
and
push
fwait
xlat
and
jbe
out
add
fadd
call
(bad)
in
adc
iret
(bad)
jmp
fisttp
xchg
rcl
cmp
ror
call
xor
mov
pop
stos
lock
xlat
jl
cdq
mov
mov
jno
repnz
std
loop
in
push
inc
pushf
mov
or
(bad)
int3
cwde
xchg
outs
lock
cli
loopne
jmp
xchg
sub
add
mov
ja
and
retf
aaa
outs
mov
outs
das
and
ins
cmp
call
out
shl
out
rcl
sub
xor
push
add
push
pop
add
cli
repz
and
lea
addr16
sbb
sahf
mov
mov
popa
pop
stos
sar
out
or
ret
add
in
ud2
add
icebp
je
int
test
call
jnp
(bad)
mov
test
xor
test
mov
cmp
sub
(bad)
pop
inc
gs
sub
mov
in
pop
inc
les
popf
pop
mov
push
leave
leave
loope
adc
gs
fcmovnb
fild
cmp
adc
mov
xlat
jp
adc
dec
mov
push
(bad)
cdq
das
sub
pop
mov
icebp
dec
(bad)
out
bound
mov
dec
retf
sub
int
sti
mov
dec
sahf
in
ror
jp
mov
push
rol
cmp
xchg
lea
mov
jecxz
push
pop
mov
(bad)
fldenv
xor
and
lods
fdivr
(bad)
js
pop
pop
sub
pop
mov
test
ret
call
cmp
push
pushf
cmp
mov
dec
mov
std
aam
in
sbb
push
push
(bad)
scas
pop
call
fs
out
(bad)
icebp
mov
xchg
retf
mov
xchg
xchg
bound
mov
fwait
popf
sub
test
pop
test
(bad)
cld
repz
aas
(bad)
cld
repz
aas
jmp
sti
cmc
in
popf
or
dec
inc
dec
inc
scas
inc
pusha
or
add
add
add
(bad)
(bad)
inc
add
add
add
add
add
add
jns
je
ins
cs
jb
ja
outs
addr16
push
gs
imul
xor
xor
inc
jne
je
jb
cmp
jb
ins
sub
push
jne
ins
imul
imul
bound
xor
data16
xor
fs
add
adc
gs
cs
jb
ja
outs
addr16
imul
add
popa
je
pop
add
add
add
add
add
lsl
add
rcl
add
mov
inc
or
add
or
add
add
add
add
or
add
add
pusha
outs
rol
add
add
inc
dec
inc
add
mov
or
popa
add
jo
pop
jae
add
ret
add
push
ret
add
outs
test
add
adc
inc
inc
push
pop
inc
in
rol
add
ror
rcr
cmp
cdq
lahf
sar
sbb
fisttp
mov
test
out
(bad)
in
mov
popa
dec
cld
fucomip
icebp
out
stc
or
add
and
mov
or
mov
jge
ins
ins
push
ins
in
sbb
lock
rol
retf
rol
ret
movs
xchg
adc
ins
repz
sbb
jmp
outs
sbb
push
sbb
lds
dec
mov
mov
cmp
shl
dec
sub
ds
sbb
sub
add
xlat
cwde
xchg
test
cld
pop
push
out
xor
ins
jle
pop
je
jg
(bad)
addr16
jae
sub
cmp
lds
stos
inc
cmp
retf
xchg
xchg
inc
and
xchg
cmp
std
pop
fisub
into
out
inc
fsub
(bad)
mov
adc
xor
add
add
scas
outs
xchg
fcom
stos
inc
popf
push
aas
mov
cld
lods
sbb
out
xchg
shl
ja
sbb
sub
std
jp
or
jmp
or
sahf
out
aas
in
add
movs
xchg
xor
mov
inc
lock
lea
outs
stos
xor
pop
popf
mov
js
add
pop
movs
outs
sahf
dec
(bad)
in
or
jbe
push
popf
inc
mov
push
pop
sbb
xor
or
xchg
or
aaa
ds
mov
mov
fxch
pop
mov
jmp
clc
or
loopne
fyl2x
jl
in
js
stc
out
jns
int3
sub
cmp
mov
cmp
or
xor
fmul
sahf
ins
data16
test
xchg
dec
xor
push
mov
jg
jbe
mov
push
js
jb
adc
dec
jns
jecxz
int3
dec
or
cli
fsub
mov
leave
xchg
and
push
out
sbb
ret
adc
sub
lods
cmps
push
outs
cmp
jne
loop
les
(bad)
icebp
push
or
repz
mov
outs
daa
dec
aaa
out
pop
sbb
ja
jb
dec
add
(bad)
nop
mov
push
in
or
jecxz
mov
(bad)
push
sbb
leave
inc
in
fs
idiv
and
ins
ins
jns
mov
in
inc
push
mov
xchg
in
aaa
pop
dec
sub
jb
imul
adc
fdivr
mov
adc
movs
sub
pop
jg
add
repz
scas
jge
cmps
retf
dec
lea
xchg
mov
inc
mov
das
daa
lahf
pop
icebp
push
clc
jp
sbb
sti
sub
repz
jae
dec
xchg
pop
xchg
mov
pop
add
dec
ss
xchg
in
inc
add
into
nop
sub
jecxz
xor
push
inc
sub
mov
pop
loope
in
ficomp
movs
jo
aas
jl
repnz
jmp
push
pop
outs
lds
jnp
mov
mov
sub
mov
add
int
mov
pop
push
mov
cmps
cld
dec
mov
and
(bad)
mov
mov
lods
jmp
mov
dec
popf
ins
enter
mov
push
xchg
lea
scas
mov
or
jne
movs
stos
xchg
mov
rcr
(bad)
stos
sbb
pop
lahf
call
and
(bad)
in
cmp
cli
push
rcl
pop
adc
iret
jecxz
inc
pop
push
dec
ret
cmp
movs
sbb
pop
jp
jbe
scas
and
mov
cmc
mov
(bad)
mov
jb
fisttp
push
jecxz
xchg
idiv
fs
imul
aas
nop
pop
fwait
mov
push
inc
jg
cmps
test
aas
aad
mov
rcl
test
mov
pop
mov
push
pop
cwde
loopne
mov
pop
fdiv
bound
mov
mov
inc
cdq
ins
pop
imul
jle
es
add
fucomip
push
jle
into
inc
ins
test
inc
aad
xchg
or
out
int3
call
sbb
hlt
and
ins
and
rcl
mov
sub
jle
std
in
addr16
js
scas
icebp
xchg
mov
mov
les
mov
fwait
mov
push
popf
cmp
mov
(bad)
jbe
mov
test
lock
ds
inc
stos
ja
data16
or
mov
adc
sub
add
add
lahf
xchg
or
mov
mov
jb
jae
dec
adc
sub
xchg
scas
inc
stos
aam
push
dec
cmp
movs
cmc
in
jge
call
jp
(bad)
(bad)
mov
jl
mov
int
push
dec
les
sbb
sub
add
scas
das
(bad)
iret
mov
popf
(bad)
lock
dec
fnstenv
jmp
xor
imul
fldcw
and
hlt
pop
mov
imul
aam
sbb
pop
sub
aam
mov
mov
outs
jge
pusha
cmc
jge
pushf
cmp
out
cmp
cmp
pop
add
ss
sbb
out
jle
je
data16
bound
rol
fidivr
enter
stos
dec
jmp
je
inc
dec
je
jno
xlat
dec
pop
push
daa
arpl
popa
dec
pushf
adc
movs
and
mov
pusha
jns
mov
rcl
fdivr
jnp
mov
ja
fstp
dec
(bad)
leave
cmp
mov
mov
xor
and
jbe
das
ins
push
sbb
scas
jae
pop
movs
jecxz
movs
je
sub
rcr
sbb
fdivr
pop
push
adc
and
and
popa
mov
mov
xor
in
add
es
mov
ins
movs
retf
iret
leave
ds
pop
cld
ror
and
sub
fsub
dec
addr16
sub
out
jl
mov
inc
push
shr
pop
push
scas
sub
and
dec
push
or
sbb
int3
clc
mov
in
push
out
xchg
int3
sub
pop
pop
xor
mov
test
push
mov
and
sbb
(bad)
push
cs
and
adc
mov
sbb
sub
adc
data16
xchg
stos
sti
mov
inc
or
jecxz
mov
cs
mov
(bad)
lods
(bad)
(bad)
push
je
mov
cld
pusha
or
jge
aad
in
and
outs
and
xor
pop
mov
scas
(bad)
bound
and
cmp
clts
jne
sti
mov
int
jmp
and
icebp
push
jbe
push
pop
fwait
lods
jns
pop
xor
test
gs
mov
out
cmps
jno
jns
in
mov
xor
test
ret
hlt
in
inc
loope
jmp
js
inc
or
cmp
inc
mov
cmp
mov
jle
fadd
js
stc
or
sbb
arpl
or
push
adc
cmp
jle
cmp
mov
pushf
push
mov
push
idiv
sub
cmp
movs
dec
xchg
or
adc
inc
xchg
mov
pop
and
mov
push
gs
push
outs
and
add
add
fld
pop
xchg
cmp
push
or
ror
sbb
jge
sub
cmps
jecxz
sub
mov
cmp
ficom
sahf
xchg
pop
sbb
int3
push
sahf
pop
push
(bad)
push
pushf
imul
add
dec
(bad)
push
ja
movs
inc
xchg
xchg
stos
mov
xchg
aaa
aas
mov
(bad)
retf
or
mov
and
daa
clc
push
push
int
mov
or
aam
scas
outs
pop
push
push
(bad)
gs
jae
loop
add
mov
(bad)
sbb
lods
div
loopne
or
sub
(bad)
jbe
xor
fcmovne
hlt
scas
cmp
jbe
test
dec
adc
mov
sub
and
fild
ficomp
fcomp
and
adc
pop
cdq
in
icebp
sub
into
cmp
retf
cmp
outs
repz
push
aad
jo
push
mov
jmp
and
pop
push
out
mov
push
dec
pop
mov
mov
fst
lds
dec
stc
mov
mov
sub
ins
shr
cmp
mov
aad
jbe
push
int3
jg
je
or
and
sahf
loopne
jno
cdq
add
pop
out
pusha
cmp
pop
fadd
lea
and
popf
jp
adc
ror
xchg
adc
aad
loopne
jo
sar
ret
xor
or
hlt
pushf
inc
xchg
pop
pop
inc
cmp
lahf
shr
xor
test
test
lods
fild
adc
sub
jo
out
xchg
out
nop
fmul
pop
in
pop
out
out
stos
loop
aam
push
inc
dec
pop
fistp
inc
fcomp
jl
jne
push
cmp
pop
out
sbb
mov
push
data16
lds
add
ja
sbb
pcmpgtb
xchg
inc
or
push
mov
int
inc
test
ucomiss
les
jg
mov
scas
aaa
call
inc
repz
add
jl
or
xchg
jle
sub
cmp
data16
mov
inc
or
out
movs
or
xchg
fidivr
cmp
push
test
out
fisttp
sub
mov
enter
bound
shl
pop
sub
pusha
inc
xlat
cmp
mov
aam
cdq
das
adc
cmps
sbb
xchg
mov
pop
dec
dec
popf
pop
xchg
fisubr
and
je
lods
jno
movs
inc
mov
inc
pop
cmp
xor
test
mov
pop
push
out
inc
js
mov
mov
inc
push
mov
daa
aam
retf
retf
jge
das
cmp
pop
cmp
popa
push
gs
jbe
push
xchg
mov
or
mov
inc
xor
mov
mov
xor
adc
fs
pop
lock
shr
and
dec
hlt
or
dec
inc
push
(bad)
xor
popa
push
test
inc
stos
out
sahf
add
cmp
call
jp
push
xchg
mov
ins
arpl
mov
inc
sbb
pop
pop
push
loop
gs
pop
add
lahf
lods
sub
or
pop
lea
add
cwde
pop
jg
mov
inc
ds
repnz
jns
xchg
xor
jnp
dec
aad
sar
daa
sbb
or
inc
inc
ret
dec
sbb
jp
fldenv
jne
add
push
mov
mov
xor
(bad)
jmp
jbe
add
std
jmp
add
stc
shl
jb
sub
jmp
std
clc
xchg
push
jnp
xchg
xchg
shl
push
stc
sti
nop
imul
(bad)
jg
pop
fild
push
mov
test
movs
mov
ret
cmp
jbe
mov
mov
xchg
cwde
das
je
lock
bound
adc
outs
loop
push
aaa
popf
or
xor
outs
outs
call
fwait
xchg
mov
es
cli
shr
add
or
stos
mov
xchg
imul
bound
popf
cmovg
inc
push
push
jl
push
sub
mov
mov
and
out
pop
ds
adc
movs
js
ins
xchg
jecxz
jb
cmps
inc
dec
add
out
lds
inc
test
mov
rcr
sub
add
cwde
ds
mov
popa
sbb
push
and
jp
int
adc
aas
aaa
push
push
push
shr
out
shl
jo
lahf
sahf
sti
inc
repz
imul
popf
dec
inc
inc
jg
jne
cmps
and
or
repnz
rol
fnstenv
lods
icebp
xor
cmp
push
sar
outs
xor
push
int
or
in
adc
data16
rcl
scas
ins
fsub
aaa
adc
cld
or
icebp
xchg
imul
scas
mov
cmc
fld
in
(bad)
lods
ds
mov
pop
fiadd
(bad)
iret
jmp
and
fisub
mov
out
push
mov
test
pop
pop
inc
sbb
mov
test
mov
cli
adc
xor
push
add
je
pusha
hlt
mov
ja
pop
xchg
fdiv
jecxz
push
inc
dec
pop
mov
push
jl
jle
push
sub
popf
push
pop
out
pop
in
mov
xchg
add
dec
dec
popa
idiv
cld
push
fild
sub
daa
add
xor
cld
(bad)
xchg
sub
xchg
lods
stos
mov
pop
pop
mov
xchg
les
push
out
or
(bad)
fisttp
ret
sub
ret
fnstenv
cmps
cmps
push
inc
enter
add
mov
or
pop
pop
imul
jp
or
addr16
and
in
pop
cmp
in
addr16
outs
adc
rcr
dec
add
cmps
push
ret
mov
int3
out
dec
jmp
jmp
or
leave
test
jge
cmp
mov
lahf
adc
push
out
shl
sub
test
pop
jge
jno
pop
retf
adc
stos
mov
or
bound
push
push
je
cmps
fmul
xchg
xchg
enter
inc
dec
add
mov
aad
mov
test
arpl
mov
mov
fimul
fdiv
mov
inc
repz
push
int3
pop
xchg
dec
shl
inc
inc
push
or
mov
cmp
inc
iret
ret
jecxz
jmp
out
pop
(bad)
mov
push
sub
and
jae
lock
rcl
call
jae
push
fldcw
mov
mov
mov
popa
cmp
jo
clc
das
sub
pushf
in
(bad)
or
inc
out
add
icebp
ins
jecxz
sbb
push
xor
lea
adc
inc
sbb
inc
inc
in
jnp
aam
int
jl
add
lds
(bad)
scas
int
sub
and
xor
dec
clc
jns
sbb
sub
retf
sub
loope
(bad)
ja
jbe
mov
mov
clc
xor
xor
test
movs
mov
mov
enter
ins
repnz
pushf
jno
in
cmp
dec
jno
or
push
sbb
test
imul
jecxz
in
das
data16
adc
mov
out
mov
xchg
clc
dec
adc
les
jb
mov
ret
cli
shr
aas
mov
sahf
not
cmps
jbe
add
and
push
iret
int
sar
ja
jle
mov
mov
xor
add
shl
cdq
xchg
fild
mov
adc
pop
pop
inc
xchg
(bad)
(bad)
mov
mov
sub
mov
fadd
dec
dec
mov
aaa
mov
xchg
imul
sbb
sbb
loope
xlat
nop
pop
jmp
pop
push
mov
mov
dec
add
xchg
fisubr
push
(bad)
std
xchg
sbb
sub
xchg
pop
inc
retf
xchg
xchg
inc
jno
push
int3
imul
xor
dec
xor
and
pop
(bad)
repnz
cmp
xchg
sbb
jecxz
aad
sti
leave
and
punpckhdq
lahf
inc
add
(bad)
test
xchg
gs
inc
imul
inc
xchg
sbb
fst
or
sbb
cmp
rol
fwait
dec
rdtsc
mov
push
add
xlat
sbb
push
jmp
adc
sub
pusha
out
cmp
call
(bad)
retf
jo
xchg
or
scas
pop
sar
movs
jns
retf
rcr
test
ins
sbb
pop
jg
aaa
pushf
lock
mov
add
ins
push
div
or
push
mov
inc
loop
mov
(bad)
imul
ins
cmp
mov
dec
xchg
mov
jmp
xlat
mov
xchg
scas
dec
aad
scas
dec
jl
popf
xor
ins
pushf
dec
aas
sbb
imul
push
push
push
pusha
fdiv
sti
lea
mov
jno
icebp
or
fcom
or
fdiv
mov
enter
stos
jmp
push
cmp
out
jg
stc
out
call
add
out
(bad)
cmc
idiv
and
add
add
dec
inc
scas
inc
pusha
or
add
add
add
(bad)
(bad)
inc
add
add
add
add
add
add
jns
je
ins
cs
jb
ja
outs
addr16
push
gs
imul
xor
xor
inc
jne
je
jb
cmp
jb
ins
sub
push
jne
ins
imul
imul
bound
xor
data16
xor
fs
add
adc
gs
cs
jb
ja
outs
addr16
imul
add
popa
je
pop
add
add
add
add
add
lsl
add
lds
add
add
or
or
add
or
add
add
add
add
or
add
add
pusha
outs
rol
add
add
inc
dec
inc
add
mov
or
popa
add
jo
pop
jae
add
ret
add
push
ret
add
outs
test
add
adc
inc
inc
push
pop
inc
in
aam
inc
xchg
or
test
sbb
mov
and
movs
mov
ja
dec
stos
aam
nop
push
nop
push
push
dec
push
push
inc
pop
jb
shr
fnsave
push
inc
jge
rol
xlat
fdiv
div
jle
fstp
cmps
pop
sbb
xchg
lods
es
or
test
mov
xchg
pop
inc
imul
pop
ja
mov
pop
dec
js
outs
push
sbb
push
pop
loop
(bad)
cmp
or
inc
inc
ret
jmp
dec
inc
inc
stos
pop
or
mov
sahf
dec
pop
retf
movs
mov
mov
and
xor
xor
mov
movs
clc
call
scas
pop
retf
mov
mov
rcr
add
scas
mov
stc
push
mov
dec
xor
call
pop
sbb
jmp
mov
loope
mov
dec
outs
ret
mov
xor
out
fcomp
clc
scas
sbb
inc
stc
in
les
jle
and
xchg
fild
jl
jmp
mov
in
leave
imul
test
cmp
cs
sub
xchg
cmp
sbb
push
(bad)
fadd
lods
in
in
xchg
not
jmp
xor
pushf
jg
jecxz
jecxz
aaa
or
pop
test
inc
mov
add
aad
cmp
rol
fistp
cmp
test
movs
or
xchg
sub
jb
cmp
ss
call
push
dec
into
mov
or
cmp
jp
mov
rcl
ja
outs
xor
stc
xchg
xchg
pop
cmps
hlt
mov
pop
stc
sar
jno
and
call
add
cmp
call
cmp
mov
adc
xor
rol
xchg
test
and
lock
aad
xchg
or
and
ins
test
retf
scas
hlt
nop
sar
mov
mov
cmp
jmp
mov
cld
in
jno
pop
test
imul
jl
jnp
push
xchg
rcr
and
push
in
sbb
icebp
xchg
inc
addr16
cld
or
imul
test
shl
cmp
fcmove
xchg
movs
xor
div
retf
int3
sbb
ja
mov
or
adc
lock
ret
sbb
call
ins
dec
xor
stos
cdq
push
xchg
pop
sti
add
loop
div
push
or
and
in
push
xchg
ret
jnp
out
cmps
pop
add
jle
sub
mov
ja
mov
loopne
and
retf
xor
outs
jnp
dec
das
fstp
push
ror
jle
jb
aam
pop
pop
arpl
into
cmp
xor
dec
cwde
xchg
xchg
push
or
dec
xor
and
pop
inc
loope
stos
cvtdq2ps
int3
rcr
in
mov
mov
outs
outs
push
add
in
outs
retf
ins
popf
mov
repz
pop
aad
pop
cmc
xchg
push
dec
or
loope
mov
or
xchg
imul
mov
sahf
push
jecxz
jns
ret
add
dec
(bad)
push
dec
mov
ins
aas
scas
sbb
push
int3
and
(bad)
leave
xor
sbb
sbb
push
push
dec
mov
stos
in
and
lods
push
stos
jmp
stos
xor
popf
cli
push
dec
dec
test
add
scas
iret
in
mov
mov
jb
lods
fdiv
adc
std
mov
jno
int3
push
add
mov
cmc
inc
adc
(bad)
mov
imul
or
push
adc
shr
mov
es
mov
out
jmp
lds
gs
xchg
scas
push
retf
sub
(bad)
gs
adc
rcr
mul
pop
jl
(bad)
int
(bad)
jmp
(bad)
in
imul
pop
jne
jmp
shl
scas
ins
adc
daa
je
iret
pop
mov
or
mov
(bad)
(bad)
gs
mov
les
xor
mov
retf
ss
mov
push
mov
movs
pusha
movs
(bad)
cmp
inc
movs
je
and
push
mov
pop
push
xor
jns
inc
(bad)
jg
pop
push
lds
(bad)
cmp
pop
mov
mov
mov
outs
inc
cmps
mov
mov
xchg
and
xor
icebp
scas
mov
test
adc
mov
aam
mov
sbb
ss
mov
leave
xchg
xchg
lahf
lods
stos
sbb
test
outs
(bad)
sub
arpl
mov
jmp
push
xchg
movs
mov
mov
aaa
out
push
ret
ficom
mov
js
lea
mov
or
cmp
loope
adc
fmul
xchg
add
mov
xchg
loop
pop
mov
dec
push
cmps
mov
cmp
jl
adc
dec
mov
mov
(bad)
rcl
out
push
fmul
sbb
jns
sbb
shl
and
pop
lods
scas
inc
xchg
sub
div
cwde
mov
dec
xchg
fs
xor
sar
mov
outs
outs
sub
sbb
push
adc
mov
or
add
xor
pop
xchg
and
pop
xchg
fs
mov
sahf
pop
cld
mov
xchg
repnz
sub
lods
inc
mov
mov
xadd
inc
push
mov
(bad)
fiadd
jne
(bad)
push
js
rcr
aas
ror
data16
xchg
sbb
dec
cdq
ins
sbb
cmp
imul
ins
cld
cmps
mov
mov
mov
outs
pop
cmp
push
retf
ret
add
call
mov
mov
jp
adc
pusha
fmul
jnp
cli
icebp
xchg
dec
sub
sar
adc
cld
icebp
or
sbb
loop
xchg
gs
sub
add
or
(bad)
dec
or
mov
outs
test
mov
inc
sub
push
fbld
mov
dec
cmps
dec
iret
fcmovnu
arpl
cmp
and
fistp
adc
mov
repnz
fld
xlat
(bad)
jmp
js
stos
leave
nop
cli
sbb
pop
movs
shl
push
cmc
or
xchg
div
sbb
mov
and
mov
xchg
mov
popf
into
xchg
imul
mov
adc
cmp
xchg
push
xchg
test
rol
add
(bad)
out
pop
enter
dec
mov
pop
sbb
leave
jge
(bad)
sbb
call
test
or
shl
sub
cmp
out
(bad)
int3
arpl
inc
adc
xor
scas
dec
rcl
dec
loopne
and
mov
retf
adc
inc
mov
loop
imul
into
or
xlat
test
jb
shl
inc
inc
push
or
rcr
fucomip
jl
inc
jl
sub
cdq
push
push
test
out
pop
mul
cmc
push
mov
mul
(bad)
enter
jnp
dec
sub
jmp
cld
cmps
xchg
jl
mov
in
sbb
pop
aad
movs
aas
gs
sti
out
xchg
and
scas
sub
mov
push
scas
push
sbb
scas
sub
addr16
and
mov
pop
int
pop
push
not
mov
sub
fs
sub
cmp
mov
adc
rcr
add
cmp
into
fisttp
inc
lahf
jne
ins
or
lods
or
dec
or
je
cmps
and
rcr
and
out
jge
hlt
sar
xchg
push
test
nop
pop
add
cwde
(bad)
fstp
push
mov
pop
adc
jle
xchg
add
(bad)
mov
push
(bad)
in
leave
mov
and
(bad)
iret
inc
clc
rcl
sub
clc
sbb
inc
lahf
repnz
int3
jmp
inc
mov
cmps
lods
adc
aas
aad
clc
pop
add
jmp
mov
sbb
jecxz
xor
cld
fsub
ret
repz
(bad)
mov
add
imul
mov
push
stos
jae
inc
pop
sti
jae
mov
xchg
pop
adc
les
clc
jae
(bad)
ins
jl
out
pop
xchg
push
test
shl
cs
mov
dec
nop
test
into
retw
ds
arpl
jbe
dec
into
stc
or
nop
retf
div
mov
mov
ins
mov
mov
aad
test
and
test
push
sar
popa
loopne
ds
or
sbb
ret
xor
outs
call
stos
push
scas
mov
mov
pop
das
pop
jg
xor
ror
jecxz
sbb
jmp
seta
sti
push
in
fistp
leave
inc
cmps
xor
xchg
sub
inc
inc
ret
jns
and
pop
add
add
sub
fcomp
xchg
sbb
pusha
or
lock
int3
fnstcw
mov
lock
ds
idiv
not
scas
test
xchg
xchg
mov
cmc
dec
dec
mov
std
shl
push
xchg
adc
cli
movs
scas
xchg
jb
pop
adc
cmp
pop
mov
retf
or
pop
retf
mov
daa
(bad)
rep
and
inc
cmps
add
arpl
(bad)
daa
dec
les
inc
cmp
call
stos
ins
rcl
mov
scas
fmul
retf
call
mov
xchg
xchg
repnz
mov
lods
loope
sbb
(bad)
ret
fs
and
and
jbe
stos
push
pop
out
loope
clc
retf
sahf
js
cmp
cdq
aad
jns
call
icebp
loopne
rcl
rcl
or
call
sub
lea
mov
jp
pop
repz
ja
mov
mov
inc
pop
mov
enter
jne
xor
lods
popa
loope
std
mov
jp
mov
xchg
gs
fsubr
test
stos
mul
in
jns
sub
outs
sub
(bad)
sahf
fadd
out
jns
mov
jge
out
inc
mov
dec
mov
lods
das
xchg
ret
sbb
dec
push
dec
(bad)
pop
pushf
jo
sti
es
pushf
fs
sbb
mov
xor
leave
xchg
add
pop
sbb
sub
xchg
mov
cmc
sub
aaa
mov
pop
test
cld
mov
in
cld
test
repnz
inc
sbb
mov
mov
(bad)
jmp
je
sub
out
out
xor
xchg
pop
rcr
xor
mov
cmp
pusha
(bad)
xor
retf
mul
push
popa
ins
test
mov
ss
icebp
inc
xchg
push
les
hlt
adc
mov
mov
jmp
(bad)
ins
xacquire
push
bound
pushw
xor
cld
push
push
cmp
rcl
pop
inc
icebp
xchg
xor
loopne
mov
sub
push
jl
sbb
push
mov
cmp
dec
cdq
js
pmuludq
fst
popf
shl
jmp
fidiv
fsub
push
adc
fcom
ss
fistp
lods
push
push
addr16
arpl
or
pop
(bad)
cmps
lea
psrlq
aas
sub
cs
icebp
cmps
lods
repnz
cmps
add
cmc
jmp
out
(bad)
and
sub
mov
cli
mov
loope
xor
ja
fimul
and
repnz
jmp
repz
and
ss
cs
jl
clc
sbb
mov
push
xchg
addr16
push
inc
test
pushf
ret
pop
mov
push
iret
cmp
jbe
scas
les
les
cwde
in
call
pop
bound
cmp
push
leave
pop
cdq
inc
jnp
lods
fwait
mov
in
jp
sbb
pushf
pop
cmps
inc
mov
fwait
rcl
(bad)
mov
dec
adc
leave
and
dec
imul
pusha
lahf
sbb
mov
xchg
pop
and
imul
push
cmps
cmps
push
shl
pushf
and
xchg
pop
fdivp
sub
xor
dec
sbb
pop
sub
dec
cdq
sbb
push
push
rcr
fs
mov
mov
and
test
and
push
jb
aam
inc
or
(bad)
js
xor
cmp
xchg
push
dec
pop
and
pop
test
cmp
les
(bad)
push
jmp
cmp
icebp
xchg
inc
fdivr
push
ins
cmp
imul
(bad)
jmp
gs
aad
fmul
pop
cs
xor
push
mov
jns
add
into
iret
xor
arpl
jne
mov
sahf
dec
scas
or
das
mov
adc
dec
add
xlat
dec
(bad)
unpcklps
pop
xchg
in
sti
mov
fwait
std
(bad)
sbb
repz
pop
jp
sbb
jecxz
ds
imul
lods
xchg
push
mov
pop
and
arpl
lods
cmc
and
lods
pop
daa
ret
hlt
daa
adc
inc
pusha
sti
(bad)
cdq
cld
inc
pop
add
sub
cmc
sub
dec
mov
cmp
js
cmp
jnp
movs
jecxz
xchg
inc
jnp
add
test
in
sub
mov
xor
mov
arpl
push
stos
add
jle
int3
or
mov
lods
add
fdiv
inc
mov
mov
in
inc
and
jmp
dec
je
jecxz
pop
cwde
rcl
cwde
fnstenv
dec
sub
call
mov
(bad)
cmps
cmp
repz
lahf
jbe
cmp
leave
mov
cwde
gs
div
and
inc
jns
mov
imul
leave
movs
pop
add
pop
push
imul
push
aam
sbb
xor
sub
mov
adc
icebp
xor
mov
call
add
sub
in
inc
adc
jmp
ror
shl
cmp
aas
fstp
lds
add
fidiv
jne
popa
pop
cdq
sbb
adc
xchg
int
add
in
jecxz
in
retf
pop
sar
push
cmp
in
pop
int
ror
pusha
outs
jns
jmp
ja
call
js
and
mov
jns
dec
mov
mov
in
ins
pop
les
add
mov
out
popa
loopne
sub
inc
rcl
int
bnd
cmp
mov
xchg
inc
sub
scas
clc
and
div
cmps
addr16
mov
sub
cmp
jno
cmps
cmp
pop
or
adc
fistp
sbb
js
test
and
das
out
mov
icebp
(bad)
fist
add
stc
fcom
shl
aaa
adc
dec
sbb
add
in
lock
das
sub
loopne
xchg
xchg
push
push
fisubr
sub
ret
push
cmp
cmp
aam
cmp
inc
ds
lahf
push
mov
mov
pop
xchg
xchg
pop
jbe
jns
fcmovnbe
fldcw
lods
inc
xchg
lods
jle
xchg
sub
jne
jae
ins
cli
sub
cmp
sar
clc
and
dec
aas
inc
mov
cmp
xchg
xchg
add
sar
sbb
cmp
sbb
sub
(bad)
addr16
xchg
sub
pushf
push
std
xlat
xlat
jl
jmp
mov
cmp
mov
adc
cmp
mov
lods
fxch
cmp
or
or
test
pop
cmc
sbb
cmp
xchg
ds
into
and
sub
mov
out
arpl
add
(bad)
sub
and
push
(bad)
pop
pop
repnz
push
in
movs
aaa
das
sub
lahf
or
bnd
ffree
jae
jl
inc
mov
sbb
jns
pop
sub
test
test
mov
std
retf
jnp
and
jno
(bad)
ror
(bad)
pop
dec
sbb
imul
in
popa
fnstsw
xlat
jae
jecxz
sub
test
(bad)
ds
cmc
retf
push
push
ds
jmp
pop
xor
mov
mov
pop
pop
sub
imul
jg
mov
sbb
xchg
mov
repz
dec
cmp
(bad)
stc
out
call
add
inc
pop
mov
push
dec
add
add
dec
inc
dec
inc
scas
inc
pusha
or
add
add
add
(bad)
(bad)
inc
add
add
add
add
add
add
jns
je
ins
cs
jb
ja
outs
addr16
push
gs
imul
xor
xor
inc
jne
je
jb
cmp
jb
ins
sub
push
jne
ins
imul
imul
bound
xor
data16
xor
fs
add
adc
gs
cs
jb
ja
outs
addr16
imul
add
popa
je
pop
add
add
add
add
add
lsl
add
rcl
add
mov
inc
or
add
or
add
add
add
add
or
add
add
pusha
outs
rol
add
add
inc
dec
inc
add
mov
or
popa
add
jo
pop
jae
add
ret
add
push
ret
add
outs
test
add
adc
inc
inc
push
pop
inc
in
(bad)
test
or
outs
sbb
rcr
aas
pop
imul
dec
xchg
movs
add
push
retf
movs
cmp
lahf
stos
js
cmp
shl
fbld
cmp
lock
xor
js
stos
cs
adc
jmp
pop
ret
pop
fwait
nop
inc
add
xchg
jno
mov
lahf
xor
rep
xor
xor
popf
ins
add
hlt
jge
sub
dec
jmp
call
jp
fs
in
mov
outs
jl
call
adc
mov
jnp
push
ffree
cmp
or
xchg
mov
xchg
lahf
push
pusha
ror
dec
mov
loopne
or
or
xchg
std
push
adc
test
add
jecxz
(bad)
pop
xor
pushf
pop
loope
rcl
movs
pop
xchg
push
lods
push
xchg
in
scas
or
push
add
dec
call
add
ins
int
inc
cmp
fist
test
repnz
cwde
inc
retf
cmp
popf
xchg
or
push
daa
mov
(bad)
xchg
pushw
fisttp
mov
ret
and
cmc
jne
ds
leave
repz
rol
mov
push
mov
push
xor
out
cmp
neg
cmp
nop
push
je
inc
ret
ja
xor
adc
pop
ret
repz
call
ins
loope
rcr
pop
clc
cmp
(bad)
(bad)
sub
call
xchg
jmp
out
inc
inc
jbe
push
in
or
jg
cli
push
inc
pop
sahf
mov
iret
pop
mov
outs
call
sbb
mov
mov
stc
mov
out
ror
ficomp
sub
jg
sti
adc
scas
lea
and
xor
add
sbb
and
jge
enter
sbb
jmp
fs
adc
dec
aaa
imul
test
(bad)
lods
neg
dec
dec
xchg
imul
jl
inc
pop
mov
scas
mov
inc
and
pop
(bad)
xor
inc
pop
jecxz
mov
shl
adc
dec
push
pop
mov
dec
and
test
sar
out
sub
cdq
pop
fnsave
push
arpl
dec
sub
mov
mov
ret
lahf
jge
xchg
test
fsubr
pop
stc
(bad)
lods
pop
jecxz
xor
adc
jo
in
loop
ret
add
sub
inc
push
fisttp
and
cld
jno
mov
mov
jmp
mov
cmc
mov
(bad)
adc
loop
pop
pushf
pusha
dec
sbb
fistp
sbb
dec
jle
loop
jmp
imul
xlat
ins
test
ds
or
or
enter
pushf
inc
lds
mov
mov
jae
jnp
sbb
gs
shr
sti
mov
pop
xrelease
fsubr
and
hlt
xchg
fld
mov
push
mov
xlat
xchg
or
pop
push
fiadd
ret
jns
outs
icebp
jae
pop
call
aas
mov
popf
add
xchg
push
jp
std
mov
jle
push
inc
or
cmp
enter
aaa
stos
mov
sbb
out
mov
int3
push
rcr
or
movs
inc
push
movs
nop
push
mov
out
dec
mov
lock
mov
push
movs
inc
mov
xchg
cld
aas
or
mov
xor
jle
sar
push
jns
cdq
mov
je
or
not
mov
test
mov
xchg
jecxz
in
push
movs
icebp
outs
or
in
imul
imul
arpl
repnz
add
js
pop
cmp
ins
cli
xchg
mov
out
aad
sub
jnp
fidivr
pop
jb
outs
and
(bad)
dec
data16
pop
pop
outs
pop
mov
loop
or
(bad)
xor
cdq
js
lods
ja
inc
and
sub
icebp
ds
jns
mov
movs
sbb
pop
push
std
mov
and
cmps
or
xchg
(bad)
sub
loop
out
cld
jmp
jno
scas
sbb
mov
pop
xor
adc
mov
nop
daa
xchg
popa
inc
or
pop
pop
pop
repz
popa
pop
or
pop
in
lock
pop
dec
mov
xchg
mov
ret
push
repz
pop
jge
bound
xchg
bound
jecxz
retf
xlat
mov
xchg
enter
add
rol
cwde
cmp
cmps
cmp
ds
bts
arpl
mov
out
nop
mov
jo
push
xor
sub
jl
dec
ret
jo
cld
fs
push
add
dec
mov
mov
repz
jmp
inc
(bad)
cld
(bad)
outs
cwde
stos
cmp
cmp
mov
jmp
jae
pusha
mov
out
ds
jnp
push
sbb
push
hlt
repz
jno
hlt
fidivr
sub
push
or
mov
sbb
pop
jge
rol
lahf
cmc
lahf
inc
pop
sbb
rol
sbb
scas
cs
mov
mov
cs
xchg
mov
xchg
repnz
cmp
mov
fadd
dec
add
lea
mov
stc
push
aaa
in
loop
imul
jne
mov
dec
vunpckhps
fdiv
lods
add
cmc
aad
xchg
lds
pop
mov
mov
jmp
inc
movs
mov
or
xchg
jge
jmp
mov
cmps
mov
inc
aas
pop
scas
jl
int3
shl
adc
jecxz
push
adc
sub
dec
jo
inc
push
inc
fwait
pusha
push
jns
(bad)
jl
push
pop
add
mov
dec
test
cmp
imul
mov
jns
neg
retf
mov
mov
test
cmp
inc
mov
push
fadd
stos
mov
cmp
jp
shr
sar
jnp
call
pop
inc
ror
xor
xchg
pop
daa
int3
xlat
(bad)
sub
aad
jo
dec
out
push
pop
test
in
mov
xchg
dec
(bad)
scas
fisubr
pinsrw
(bad)
fnstenv
imul
adc
or
sbb
xchg
movs
mov
out
sahf
lds
ds
push
test
mov
pushf
adc
call
mov
dec
stos
daa
mov
dec
add
pop
aad
xor
xor
and
(bad)
imul
xor
iret
out
mov
ficom
sbb
fcomp
imul
loopne
xchg
cwde
or
into
mov
cli
pop
inc
cli
imul
je
xor
pusha
jb
out
mov
pop
ret
sub
out
pop
gs
dec
scas
xlat
dec
test
jecxz
or
inc
xor
loop
inc
sbb
fcomp
push
(bad)
and
es
dec
dec
icebp
cmp
dec
and
test
not
loope
and
and
push
popa
push
sbb
pop
out
dec
arpl
mov
push
fcomp
ret
loope
add
inc
or
je
pop
scas
lds
lods
outs
dec
(bad)
pop
cmps
dec
popa
mov
and
outs
mov
loop
add
das
push
push
xor
jno
mov
call
ds
mov
jecxz
add
ins
mov
ja
call
(bad)
ja
mov
push
fist
mov
dec
test
mov
xchg
jmp
pop
adc
clc
je
rcl
and
jl
jae
mov
push
retf
sub
dec
into
and
imul
pusha
add
dec
outs
cmp
xchg
cmps
add
js
inc
sahf
jge
push
shl
jnp
jns
mov
aas
out
xchg
and
inc
push
rcr
lds
mov
mov
mov
sti
rcl
test
shl
in
adc
loope
cdq
xor
push
out
ja
inc
dec
lea
dec
lods
aad
pushf
sub
pop
in
test
mov
jmp
mov
jecxz
adc
ins
enter
fdivr
jle
inc
das
bound
aam
xor
outs
les
loopne
dec
sbb
jmp
adc
outs
lods
test
xchg
(bad)
cmp
outs
test
cmps
push
jle
pop
ret
push
xchg
popa
daa
xchg
pop
rcl
sub
ds
adc
cmp
jp
mov
add
rcr
mov
sub
xchg
cmp
fmulp
inc
push
dec
out
add
ss
mov
sqrtps
aam
ins
mov
pushf
scas
and
cld
lock
dec
in
lock
and
(bad)
sbb
retf
dec
stos
int
xchg
mov
sub
dec
add
and
imul
scas
scas
add
cwde
ret
xlat
dec
mov
retf
sbb
sbb
dec
push
repz
popf
add
outs
(bad)
call
addr16
mov
bnd
and
leave
clc
or
or
or
lds
inc
out
push
mov
call
or
jmp
dec
hlt
mov
stos
jmp
inc
mov
les
aas
(bad)
lock
sub
call
push
dec
lea
fwait
movs
mov
loop
pusha
push
(bad)
out
jnp
pop
fadd
pop
loope
mov
pusha
push
push
push
pop
div
or
xchg
jno
or
sub
sub
pop
ret
rcl
xlat
call
sub
stos
pop
bound
jae
nop
dec
cmps
test
sbb
fcomi
dec
xor
mov
inc
xor
cmp
(bad)
mov
jg
les
sahf
xchg
mov
cwde
clc
jns
pop
aad
shl
sub
(bad)
sti
pop
cld
(bad)
xor
jnp
jl
cmp
mov
arpl
mov
mov
dec
pop
mov
add
or
jbe
cmp
lods
pop
jl
mov
out
jecxz
push
adc
or
addr16
in
jbe
rep
iret
int
push
add
push
push
cs
fcmovu
lods
cwde
jno
out
pusha
sub
popf
in
pop
mov
pop
pop
pop
(bad)
call
jns
sub
and
and
out
rcl
cmp
or
or
sub
mov
(bad)
cld
stos
pop
mov
or
and
aas
xchg
inc
retf
adc
rol
mov
ret
dec
(bad)
out
inc
call
test
sbb
xor
and
push
xor
adc
cli
cmp
mov
call
sbb
adc
addr16
xor
jl
or
repz
and
aad
cmp
dec
icebp
cmc
mov
jecxz
jmp
mov
movs
dec
jl
jae
jle
push
stos
in
ss
mul
cmp
mov
clc
hlt
mov
lahf
in
mov
ja
mov
mul
dec
(bad)
xor
fild
sbb
mov
ror
fmul
push
or
retf
mov
jmp
and
and
sbb
xchg
es
mov
rol
mov
ja
mov
sub
mov
or
scas
xchg
mov
cmc
scas
movs
in
pushf
fwait
mov
dec
lods
fcom
inc
test
popf
cmp
sbb
loopne
jge
fs
fild
dec
in
imul
or
mov
mov
wrmsr
shl
and
cld
cmp
mov
lods
xor
cmp
pop
retf
push
test
mov
shr
add
iret
xor
add
dec
lock
arpl
xor
adc
fist
stc
xor
mov
shl
push
sub
pslld
leave
mov
dec
lods
sbb
test
dec
(bad)
je
ds
(bad)
or
addr16
imul
hlt
test
nop
fisub
cmps
add
jnp
out
aad
mov
cmps
inc
xchg
xchg
repz
loope
enter
sub
add
jmp
add
pop
ja
movs
pop
out
cmp
push
adc
pop
out
adc
sub
and
xchg
sub
xchg
aam
sub
nop
push
mov
enter
and
xchg
inc
daa
push
push
cmc
and
pop
leave
add
dec
pop
adc
cmps
and
and
jmp
das
test
mov
fstp
fisttp
mov
xchg
sar
xchg
shl
addr16
inc
stos
mov
and
sub
pop
inc
or
cmp
pop
mov
out
js
push
jle
rep
and
fcmovne
xor
push
clc
les
ret
sbb
call
mov
dec
out
in
xchg
out
push
enter
(bad)
pop
in
popf
add
aam
add
xchg
and
lahf
push
js
pop
dec
inc
shl
pop
push
lea
pushf
pop
fnstsw
rol
ja
dec
int
lahf
(bad)
(bad)
addr16
fisttp
pop
push
mov
mov
cli
cmp
popa
sahf
jae
push
out
inc
movs
pop
rcl
push
dec
mov
in
test
and
inc
dec
xor
int3
ins
sbb
push
pop
scas
(bad)
push
sub
pop
xor
out
call
fcmovbe
daa
add
ror
dec
inc
lahf
retf
cmp
rcr
sbb
shl
xor
push
(bad)
sti
(bad)
scas
addr16
xchg
sub
mov
cdq
push
jmp
js
ffree
jmp
add
cli
mov
cmp
shr
stos
mov
or
push
xor
cmp
cmp
push
iret
xor
push
gs
out
push
mov
inc
pop
cli
rol
mov
idiv
loop
je
jns
xor
mov
push
xor
xlat
jle
dec
fistp
jle
scas
push
rcl
out
xor
push
cmp
cs
inc
sub
push
cli
test
adc
adc
icebp
add
int
nop
xor
and
je
lock
cvtps2pd
(bad)
retf
es
in
xchg
icebp
aaa
jecxz
repnz
ins
dec
xchg
sbb
arpl
jns
and
enter
(bad)
cld
repnz
hlt
dec
and
int3
xchg
fscale
shl
mov
xor
ret
lds
adc
sub
retf
out
pop
xlat
js
push
pop
sub
adc
hlt
repz
xor
ins
jecxz
pop
mov
fnop
je
xor
pop
add
inc
cmp
mov
mov
sub
jecxz
cmp
mov
retf
push
mov
pushf
sub
int
cmp
es
movs
bound
mov
das
sub
out
mov
push
movs
and
jbe
inc
jp
mov
fsub
(bad)
sbb
fist
pop
mov
pop
(bad)
call
and
sbb
hlt
jecxz
rcr
sbb
adc
gs
add
pop
icebp
and
dec
cmc
aad
ds
loop
jnp
mov
mov
dec
lds
pop
enter
outs
adc
mov
pop
jns
push
cld
lock
xor
xchg
es
xchg
adc
jecxz
mov
vcomiss
ss
or
fsubrp
aad
bound
out
fwait
ret
dec
lahf
cdq
cli
cdq
pop
cmp
add
cmps
fnstenv
xlat
push
dec
sbb
adc
inc
jno
cmp
pop
dec
cmp
adc
div
and
adc
sbb
add
sbb
jmp
mov
js
repz
add
hlt
adc
cs
adc
cmp
pop
push
aad
inc
loope
outs
imul
jbe
and
mov
bound
mov
lea
sahf
jl
shr
sub
xor
or
test
xchg
sub
aad
test
imul
push
xchg
jo
pop
or
call
retf
std
mov
add
stc
out
jg
stc
out
jg
pop
add
repz
add
add
dec
inc
scas
inc
pusha
or
add
add
add
(bad)
(bad)
inc
add
add
add
add
add
add
jns
je
ins
cs
jb
ja
outs
addr16
push
gs
imul
xor
xor
inc
jne
je
jb
cmp
jb
ins
sub
push
jne
ins
imul
imul
bound
xor
data16
xor
fs
add
adc
gs
cs
jb
ja
outs
addr16
imul
add
popa
je
pop
add
add
add
add
add
lsl
add
rcl
add
mov
inc
or
add
or
add
add
add
add
or
add
add
pusha
outs
rol
add
add
inc
dec
inc
add
mov
or
popa
add
jo
pop
jae
add
ret
add
push
ret
add
outs
test
add
adc
inc
inc
push
pop
inc
in
rol
loopne
xor
pop
cmps
popf
mov
fcomp
aaa
fwait
cmp
xor
jns
cmps
mov
shr
fwait
pushf
into
xor
jno
test
cmp
les
mov
test
cmps
mov
mov
pop
xchg
daa
dec
mov
into
(bad)
and
adc
dec
xor
ds
aaa
cmp
pop
xchg
mov
add
cmps
out
pop
pop
pop
leave
loop
xor
xor
inc
mov
sub
nop
stos
repz
mov
aad
mov
or
cmp
addr16
imul
fld
sub
cmp
cmp
mov
push
cmp
repz
adc
mov
pop
or
sub
dec
scas
out
sub
pop
jne
fist
(bad)
scas
lock
retf
sbb
popf
mov
push
popf
push
dec
sub
xor
ret
leave
pop
(bad)
shl
mov
popf
sti
mov
imul
jno
imul
ins
mov
test
outs
test
pop
inc
lods
pop
sbb
out
scas
push
mov
aad
stos
cwde
or
sbb
jmp
in
push
cmp
ins
add
adc
pop
iret
movs
sbb
add
retf
ret
sti
shl
cmp
ss
in
cmps
jmp
inc
mov
pop
adc
clc
leave
into
leave
mov
mov
push
xor
add
add
iret
cmp
stos
cld
mov
adc
cdq
mov
jmp
xchg
xor
mov
push
hlt
ins
fstp
mov
aas
jbe
iret
in
xor
sahf
js
aad
cdq
pop
mov
mov
shl
bnd
xchg
mov
jb
iret
dec
dec
(bad)
xchg
xor
xchg
inc
cwde
imul
lea
call
fbld
mul
xlat
rcl
add
pop
sbb
lods
mov
fcomp
or
inc
and
xor
mov
nop
adc
ficom
xchg
jmp
jno
push
mov
push
aad
mov
add
push
or
ins
cmp
lea
push
xor
jmp
popa
idiv
pop
inc
push
jne
sbb
adc
aad
adc
movsx
stos
in
mov
adc
movs
imul
pop
inc
sbb
stos
inc
dec
cmps
push
iret
out
and
aad
rol
cld
pusha
ds
dec
gs
xchg
sbb
sub
and
nop
call
xor
pusha
aas
iret
cmp
rol
aas
pop
gs
pop
push
mov
xchg
push
addr16
jle
ja
jecxz
bound
clc
lock
adc
mov
cmp
ret
dec
out
je
xchg
jnp
mov
cmp
cdq
dec
dec
in
jle
xchg
mov
fiadd
jo
out
fld
and
mov
adc
gs
in
aad
hlt
movs
scas
mov
add
dec
out
addr16
out
ins
lds
xor
loop
mov
lods
xchg
nop
xchg
aas
pop
dec
fwait
jbe
mov
aad
das
add
arpl
popa
aas
push
arpl
jmp
jge
xchg
or
adc
push
adc
(bad)
iret
jle
sbb
jl
push
(bad)
and
div
lds
dec
sbb
bnd
push
rcl
push
jmp
push
imul
in
add
push
add
out
jo
inc
pop
sub
mov
sub
xchg
cmc
retf
daa
xor
lock
cmp
mov
dec
scas
mov
pop
xor
pop
jge
xor
out
enter
push
fsubp
push
adc
retf
jp
js
pushf
mov
int3
push
inc
push
cs
mov
call
mov
jecxz
inc
scas
int
jbe
sub
lea
test
or
add
jb
cld
pusha
in
mov
jecxz
mov
pop
mov
or
es
arpl
dec
and
xor
mov
imul
sbb
fcom
fdivr
push
(bad)
mov
std
and
mov
pop
fsubr
dec
movs
inc
es
(bad)
xlat
psubb
lea
clc
xchg
test
int
push
repz
outs
bound
mov
setp
ins
adc
xlat
imul
mov
outs
outs
fs
sahf
xchg
pop
scas
outs
add
in
loope
xchg
mov
jle
and
leave
aad
sbb
(bad)
and
aaa
sbb
push
dec
jecxz
pop
dec
lods
test
rol
leave
mov
lahf
leave
fild
es
pop
lods
ja
sub
and
sbb
push
out
pusha
sbb
cmp
test
ins
mov
cmp
loopne
push
jne
pop
hlt
into
mov
inc
(bad)
jb
fucomi
and
les
enter
mov
out
iret
push
and
inc
lds
scas
movs
shl
add
test
les
jb
xlat
push
retf
cli
int
call
add
adc
sbb
mov
push
xor
dec
(bad)
fnstenv
test
movs
jno
mov
add
aaa
push
aaa
cmp
dec
dec
rcr
jns
fimul
scas
dec
mov
adc
sbb
sub
inc
(bad)
sar
mov
cwde
xchg
and
fiadd
pop
aam
fs
xchg
popa
adc
call
sbb
in
inc
rcr
or
xchg
retfw
jb
das
leave
pop
add
or
(bad)
sub
lds
popa
in
movs
js
adc
daa
lock
push
shr
push
dec
mov
or
jbe
ins
cmps
inc
push
add
scas
leave
ins
leave
into
lods
cmp
push
sbb
push
es
out
rcl
pop
ss
fprem1
inc
push
mov
xor
ror
xor
sti
out
mov
mov
and
dec
pop
sbb
xchg
cmps
mul
push
lea
fnstsw
sbb
xor
cmp
mov
outs
out
out
or
mov
test
ds
mov
mov
mov
stos
rcl
pusha
dec
stc
push
jecxz
mov
dec
mov
movs
add
inc
push
mov
call
or
sbb
dec
dec
mov
mov
fnsave
call
adc
call
inc
jo
into
cmp
sbb
int
test
xor
mul
mov
and
pop
ss
(bad)
(bad)
adc
dec
(bad)
dec
nop
pop
and
cmp
push
inc
inc
(bad)
xchg
movs
lds
movs
repz
and
dec
mov
adc
cs
mov
jbe
jecxz
sbb
in
xor
(bad)
xlat
inc
cld
mov
sti
inc
leave
jno
jno
jmp
icebp
dec
jo
mov
xchg
xor
mov
xor
jmp
fldcw
push
sub
fisubr
das
out
fwait
cs
pop
dec
jmp
push
or
stos
ss
aaa
and
jns
sub
dec
sub
aas
daa
div
pop
ret
fs
dec
retf
jmp
cdq
out
inc
retf
inc
mov
xchg
pushf
push
mov
lahf
fadd
sbb
push
sub
jecxz
pop
int
arpl
int3
mov
cmp
(bad)
adc
sub
add
cs
(bad)
xor
cmp
std
mov
or
mov
jnp
mov
jbe
dec
add
sub
cmp
outs
rcr
movs
sahf
cmp
mov
jg
pop
sbb
jmp
xor
nop
push
add
std
int3
jns
cwde
cwde
xor
push
xchg
jmp
mov
dec
xchg
hlt
imul
sbb
stos
mov
clc
dec
test
pop
add
xchg
loope
iret
dec
mov
(bad)
push
xchg
(bad)
sub
jmp
call
cmp
mov
fwait
xchg
adc
ins
dec
imul
shl
movs
pop
sub
lea
mov
popa
in
or
mov
pop
rcl
mov
dec
xchg
xor
rcr
or
(bad)
lds
xor
(bad)
xor
dec
mov
xchg
fdivr
stos
inc
jae
xlat
push
xchg
(bad)
fist
loopne
out
xchg
or
mov
aam
fincstp
loope
pop
adc
and
call
mov
inc
test
dec
outs
mov
sub
cvtpi2ps
push
mov
push
inc
retf
lods
sar
jge
push
push
gs
aam
cmp
pop
mov
repz
dec
imul
iret
ret
clc
mov
dec
fcomi
push
cmp
sub
js
ret
(bad)
pop
movs
pop
add
sbb
(bad)
sub
fiadd
bnd
idiv
pop
dec
scas
xchg
pop
imul
sbb
sbb
sub
(bad)
ror
cmp
add
xchg
adc
adc
outs
dec
mov
dec
mov
cmc
loopne
cmp
aas
aad
shl
sub
pop
imul
scas
jmp
je
sbb
leave
ror
xor
xchg
push
mov
mov
fcmovne
enter
nop
lds
mov
shr
pop
fwait
leave
adc
or
push
adc
push
and
iret
sahf
mov
pop
mov
fdivr
cmp
into
fstp
push
adc
repnz
pop
les
inc
ins
pop
cwde
dec
je
inc
sub
sbb
aaa
(bad)
fimul
std
push
or
aas
mov
pop
mov
not
mov
es
cmc
pushf
(bad)
mov
mov
sub
scas
and
adc
mov
std
es
adc
retf
sti
daa
out
leave
jl
lea
(bad)
(bad)
in
xlat
lods
xchg
sbb
inc
jae
cs
push
cdq
push
lds
fsubrp
mov
and
xchg
hlt
ja
sub
mov
push
inc
add
jne
jo
xchg
sbb
mov
pop
cld
loop
inc
and
call
jg
js
push
cwde
mov
je
fsubr
mul
test
add
pusha
enter
fstp
jecxz
ror
mov
test
mov
mov
adc
xchg
lods
ficom
lock
jmp
aas
push
fs
xchg
stos
hlt
pushf
sbb
xor
(bad)
push
rcr
sbb
cmps
jg
add
and
ss
jae
call
sub
test
sub
fs
fwait
xor
mov
cmp
retf
xchg
sbb
mov
out
xchg
movs
jg
pushf
lock
mov
pop
fdivr
dec
cmp
idiv
jmp
into
jp
push
sub
sbb
repnz
push
das
dec
xchg
dec
mov
arpl
lea
ins
js
dec
sti
mov
sbb
jne
sub
(bad)
shl
mov
(bad)
shl
jg
or
inc
mov
ds
mov
es
adc
into
cld
nop
sbb
and
pop
repz
lods
jl
fwait
or
xchg
sbb
test
mov
test
jo
nop
xor
call
mov
sub
push
aas
int3
stc
rol
out
cwde
shl
arpl
dec
in
or
jmp
xor
xchg
ret
cld
pop
in
aad
addr16
or
in
mov
aas
push
repz
pop
xor
mov
add
pop
test
(bad)
cld
mov
arpl
ret
jl
pop
ins
or
mov
mov
scas
inc
pop
dec
pop
mov
inc
in
icebp
outs
and
sbb
push
outs
push
xchg
adc
or
push
mov
pushf
mov
cwde
and
mov
xor
ret
ja
jo
in
mov
mov
sub
sti
je
sbb
in
sub
int3
nop
fstp
lods
ins
jno
es
push
addr16
in
pop
or
scas
jp
cmp
inc
sbb
jmp
mov
lahf
sar
in
das
sbb
add
jne
pop
sahf
test
push
cmp
clc
push
jl
fwait
out
ins
xlat
pop
xchg
and
or
or
fcmovu
adc
rcl
inc
lods
inc
lods
sbb
inc
pop
repz
and
lds
jae
mov
add
mov
outs
pushf
out
test
push
jge
fst
dec
mov
add
pop
sub
in
aas
mov
jp
jae
adc
xchg
les
cmp
dec
je
adc
sub
imul
cmovne
(bad)
jmp
pop
cwde
adc
icebp
repnz
cmc
pop
add
adc
sbb
mov
jecxz
and
add
push
enter
sub
dec
iret
(bad)
pop
fs
push
mov
int3
dec
jne
and
lds
push
out
outs
scas
jne
sbb
cmp
movs
stos
cmp
sub
pop
inc
out
test
retf
push
loop
aad
outs
pop
(bad)
cmp
mov
movs
les
ins
les
es
sub
mov
jo
daa
jb
in
fwait
cwde
shl
bound
adc
out
xchg
mov
shl
sub
in
inc
pop
leave
cmp
call
lods
lds
test
inc
gs
xchg
mov
add
cwde
xlat
xor
inc
das
and
out
mov
jg
mov
push
add
mov
loopne
mov
retf
(bad)
push
jp
fs
or
xchg
jnp
or
xchg
jno
sar
stos
in
nop
and
adc
stc
xchg
mov
hlt
push
adc
xchg
fst
stos
mov
pop
mov
(bad)
rcr
call
add
mov
in
pop
js
and
mov
push
sbb
test
mov
dec
clc
mov
push
fcom
js
fst
mov
and
sbb
cmp
scas
(bad)
fnsave
repnz
loopne
cdq
and
push
jmp
(bad)
adc
mov
popa
sbb
mov
inc
xchg
jge
sahf
sub
mov
dec
xchg
sbb
mov
cdq
lods
mov
fucomi
arpl
pop
mov
daa
sub
sub
add
xchg
xchg
mov
iret
es
sub
dec
stc
add
out
ins
inc
or
nop
pop
(bad)
inc
xchg
stc
shl
fidiv
lods
xor
mov
mov
call
mov
pop
imul
js
push
js
aas
mov
sbb
clc
loop
addr16
imul
push
cwde
test
outs
inc
fsub
ja
jmp
jl
pushf
repz
div
hlt
lahf
cmp
nop
fs
xchg
adc
jns
pop
scas
(bad)
dec
adc
dec
enter
(bad)
pop
sahf
(bad)
shr
gs
out
test
jno
dec
mov
aam
sub
scas
movs
jne
mov
gs
mov
(bad)
in
sub
in
lahf
fild
test
jo
sbb
fsubr
in
ret
mov
add
shl
jl
mov
xchg
jne
jbe
ja
adc
inc
fmulp
test
xor
out
dec
cmp
push
in
shl
and
push
std
jno
push
aad
mov
inc
mov
mov
pop
or
pop
and
les
ins
sbb
inc
stos
in
jecxz
ja
dec
mov
ret
and
fcom
in
cmp
(bad)
push
ins
add
ins
dec
nop
ds
mov
xchg
jo
js
mov
aam
fidiv
retf
dec
out
lods
mov
out
push
xor
stos
mov
jmp
mov
jo
fisttp
push
push
sar
sahf
aaa
sbb
adc
mov
xor
sahf
js
out
nop
popf
jo
jl
repnz
mov
cli
mov
ja
daa
(bad)
popa
iret
or
jbe
gs
mov
cmp
hlt
and
inc
inc
jno
ds
cmps
lahf
in
stc
push
imul
(bad)
retf
(bad)
cld
repz
aas
(bad)
cld
repz
aas
call
add
push
test
add
add
dec
inc
dec
inc
scas
inc
pusha
or
add
add
add
(bad)
(bad)
inc
add
add
add
add
add
add
jns
je
ins
cs
jb
ja
outs
addr16
push
gs
imul
xor
xor
inc
jne
je
jb
cmp
jb
ins
sub
push
jne
ins
imul
imul
bound
xor
data16
xor
fs
add
adc
gs
cs
jb
ja
outs
addr16
imul
add
popa
je
pop
add
add
add
add
add
lsl
add
rcl
add
mov
inc
or
add
or
add
add
add
add
or
add
add
pusha
outs
rol
add
add
inc
dec
inc
add
mov
or
popa
add
jo
pop
jae
add
ret
add
push
ret
add
outs
test
add
adc
inc
inc
push
pop
inc
in
rol
loopne
cwde
jae
pop
cmps
jnp
bound
push
xor
arpl
jno
cmps
mov
outs
xchg
js
enter
add
adc
call
jns
fist
rol
cdq
mov
aaa
inc
les
jmp
push
in
mov
push
and
sub
(bad)
rcl
(bad)
iret
or
aam
xchg
ffreep
jp
shr
pusha
dec
shr
sbb
pop
dec
ds
xchg
push
xor
adc
push
dec
or
imul
mov
repz
(bad)
mov
jp
int
xchg
sahf
js
dec
xchg
inc
mov
(bad)
sbb
push
or
lahf
mov
pop
dec
mov
out
outs
fadd
inc
mov
enter
mov
jecxz
and
cmp
enter
call
jecxz
rcl
mov
cmp
call
dec
sub
(bad)
mov
sbb
mov
sar
jl
enter
call
xchg
es
mov
cmc
loopne
xchg
icebp
pop
pop
stc
sbb
fimul
add
fnsave
inc
imul
call
popf
ret
cmp
out
(bad)
mov
xchg
adc
stos
or
nop
test
dec
call
xor
fwait
jne
lock
mov
mov
repz
pop
icebp
fisttp
imul
xor
ds
jle
push
jb
aaa
fnstcw
sbb
fdiv
aam
dec
enter
cmp
push
ds
shr
sub
jmp
pop
test
dec
retf
mov
adc
rcr
jno
push
frndint
aaa
sbb
ror
mov
bound
out
sbb
cs
mov
push
mov
xchg
gs
cmp
sar
mov
aas
sbb
outs
movs
movs
repz
shr
out
xor
repz
sbb
dec
dec
fs
xor
adc
mov
jns
scas
add
add
mov
xchg
fmul
test
daa
out
arpl
mov
ficomp
cmp
adc
stos
push
pop
cmovne
or
aas
xor
mov
sbb
out
mov
cmp
push
xlat
aam
push
mov
xchg
pop
mov
stc
cmp
mov
in
cdq
mov
inc
jno
mov
cs
cli
pop
retf
lods
retf
out
cmps
call
out
clc
mov
loop
sub
(bad)
ins
mov
sar
neg
pop
mov
je
or
fwait
stos
jo
outs
fwait
sysret
popa
jno
xchg
jmp
shl
loop
xor
cdq
add
out
int
outs
sub
jbe
hlt
mov
pop
fisttp
mov
les
dec
cmp
inc
mul
out
aas
ins
sub
jmp
push
cmps
call
cmc
aas
sbb
jmp
inc
mov
test
pusha
or
xor
jmp
xchg
popf
sti
sbb
shl
and
movs
jle
xor
sbb
mov
sub
test
outs
outs
or
jecxz
hlt
in
retf
xchg
in
movs
xlat
jnp
xchg
pop
fisubr
xlat
pop
cmc
pop
rcl
pop
xchg
stos
mov
aaa
adc
adc
aam
lods
ret
cdq
cwde
mov
ins
xchg
cmc
xlat
push
das
sbb
mov
retf
pop
fsubrp
or
jg
sub
lock
mov
dec
inc
imul
iret
xor
(bad)
out
xlat
into
or
lea
shl
sub
fidiv
cmovp
dec
popf
pop
cdq
fwait
and
pushf
lds
sub
fadd
and
push
dec
lods
pop
jg
mov
leave
mov
imul
sbb
fwait
mov
xor
xchg
shl
imul
fs
mov
rol
push
dec
push
push
push
cmc
lock
fstp
ins
adc
cwde
cmp
mov
dec
cmps
data16
jnp
call
and
mov
(bad)
jno
jae
cmp
test
inc
jns
pop
mov
pop
jbe
cdq
cli
icebp
xor
lods
pusha
add
push
lahf
into
mov
adc
lods
push
mov
popf
leave
xor
cmp
ins
jnp
push
arpl
outs
push
into
pushf
push
cwde
cmp
nop
xchg
pop
(bad)
shl
ja
shl
pop
into
(bad)
xor
pop
(bad)
xchg
lods
idiv
cmp
dec
addr16
mov
mov
mov
jmp
pop
or
add
shr
shl
pop
jbe
popa
fdiv
xchg
pop
pusha
jo
stc
add
(bad)
mov
movs
mov
mov
loope
adc
scas
and
xor
xor
je
mov
mov
into
jae
daa
fwait
jge
xchg
outs
lods
inc
pop
sbb
(bad)
adc
fcom
xor
jge
outs
stc
mov
mov
jle
xor
dec
xchg
xchg
scas
mov
lahf
jae
es
cs
imul
imul
xlat
sti
sahf
ds
push
inc
das
inc
in
xor
into
bound
sub
jno
sbb
cmp
and
or
cmps
add
stos
xchg
lea
or
and
pop
and
sbb
sar
push
mov
scas
jnp
outs
push
xor
sbb
mov
lahf
jb
cld
sub
div
outs
movs
cld
shl
into
das
push
inc
aam
aam
aaa
push
jp
(bad)
out
sub
fs
pusha
xchg
cmps
shl
retf
fs
mov
sti
mov
int3
arpl
(bad)
fs
sbb
push
sub
stos
mov
idiv
retf
pop
aam
test
je
int
ror
into
shl
pusha
sbb
in
and
pusha
rcr
repnz
addr16
out
jle
dec
arpl
jo
(bad)
stc
inc
jne
lea
push
mov
shr
dec
mov
jns
pop
or
int3
pop
sub
xchg
pop
pop
loop
mov
and
leave
mov
loop
xor
repz
push
pop
adc
jg
sbb
pop
(bad)
xchg
xor
cmc
int
adc
xchg
mov
dec
daa
movhps
jge
stos
cmp
sahf
aaa
in
inc
pushf
push
pop
ds
lock
scas
and
test
jb
sar
rcr
(bad)
cmp
jns
push
or
test
adc
imul
stos
inc
mov
push
je
outs
sbb
pusha
pop
inc
sub
cld
add
arpl
sbb
stc
xchg
lahf
sbb
xlat
lock
cmc
int
test
(bad)
aad
xchg
inc
sub
jbe
out
mov
js
dec
mov
sbb
fldenv
loope
icebp
lods
sbb
out
fsubr
mov
cmps
or
test
mul
cmp
clc
add
cmp
add
imul
pop
sbb
mov
jp
and
cmp
push
fnstcw
sahf
jb
sub
sbb
push
fst
and
fistp
adc
pop
sbb
mov
mov
pusha
mov
jle
push
xchg
stos
test
jecxz
fisubr
fcmovnu
loope
popf
mov
sub
pop
int
shr
test
pop
fwait
es
fiadd
jns
scas
xchg
dec
adc
ins
dec
pop
mov
das
pop
lgdtd
add
movs
jecxz
or
mov
mov
pop
xchg
test
(bad)
and
and
mov
jno
mov
mov
dec
add
push
cdq
jne
cdq
out
pop
jae
jae
fild
inc
mov
bound
xor
mov
jge
repnz
aam
xor
idiv
out
sar
xchg
pop
cld
pop
shl
(bad)
movs
sahf
popf
ret
int3
nop
shr
std
fsubp
cli
mov
test
stos
push
popf
fisttp
std
mov
xchg
push
dec
inc
aaa
cli
jle
data16
gs
dec
and
cmp
and
pop
icebp
les
cmp
cmp
int3
ss
hlt
push
push
fwait
pop
dec
jecxz
mov
cmps
fwait
mov
mov
add
cs
(bad)
mov
cmp
and
dec
cli
in
jmp
cmps
scas
popa
in
ret
jbe
sbb
jg
call
mov
adc
leave
mov
fcomi
mov
and
popf
ins
inc
sub
sub
inc
inc
test
sub
push
(bad)
test
pushf
pop
jge
pusha
(bad)
mov
push
pop
fstp
addr16
xor
mov
jge
pop
jno
jmp
sub
push
cmps
sbb
sbb
mov
mov
jo
cmp
jecxz
add
and
mov
or
(bad)
fcom
jbe
push
test
sbb
stos
push
(bad)
push
mov
jecxz
cmps
xchg
retf
mov
es
sub
push
fcom
inc
ficomp
mov
adc
jge
cmp
sar
xchg
fist
lahf
mov
sub
jo
aad
cs
inc
mov
ja
mov
mov
je
popf
sub
(bad)
mov
dec
popa
jmp
xchg
loop
sbb
mov
mov
sahf
fnop
jg
lock
out
ficomp
sbb
mov
aaa
popf
or
lods
iret
xor
push
loope
loop
pop
pop
fist
test
dec
ror
cmp
(bad)
fadd
pop
and
mov
mov
test
mov
cmp
jp
xchg
xchg
cmp
lods
or
xchg
sar
cmps
daa
movs
gs
pop
mov
popf
pop
ja
in
jge
or
mov
xor
imul
test
jp
push
(bad)
aaa
int3
rol
call
mov
test
push
jmp
pop
cmp
aaa
int3
stc
adc
push
mov
and
pop
sbb
ds
enter
pop
fsub
psubw
addr16
cwde
pop
popa
cmp
ret
sbb
addr16
xchg
out
pop
mov
add
in
jp
cmps
mov
outs
push
xchg
mov
push
ret
xor
fst
movs
addr16
push
mov
mov
rol
inc
fdivr
or
jmp
sub
ins
test
jge
loop
xchg
xchg
or
and
jae
jp
cmp
gs
push
inc
mov
repz
or
push
cmp
call
jne
arpl
cmp
add
push
push
pop
jmp
mov
and
scas
jb
hlt
stos
(bad)
mov
mov
mov
xchg
inc
push
jmp
(bad)
mov
ds
loopne
mov
add
add
cli
jl
call
and
pop
sti
shl
mov
mov
movs
inc
scas
dec
int
mov
add
(bad)
ds
loope
push
jp
cmps
xchg
mov
repz
stos
inc
push
out
inc
dec
adc
mov
test
inc
mov
jg
mov
daa
fnstenv
cmps
cmc
jmp
lds
retf
xchg
out
lods
in
lds
sbb
(bad)
retf
cmps
sbb
mov
loop
imul
mov
cmp
mov
pop
pop
retf
jecxz
ins
sub
inc
jle
mov
shl
xchg
ror
sbb
mov
repz
shl
test
adc
popf
sbb
adc
(bad)
gs
ffree
imul
rep
js
dec
out
js
(bad)
test
and
cmp
ins
push
pop
in
pop
test
cdq
lock
rcr
neg
call
sahf
jp
add
adc
in
in
adc
sti
mov
loope
js
fidiv
push
jno
or
fdiv
jg
push
cmps
jecxz
(bad)
jbe
dec
jmp
and
jge
aam
pop
(bad)
jg
dec
inc
call
jns
in
fimul
jns
retf
cwde
jmp
(bad)
mov
pop
aaa
jl
lock
in
out
lahf
xlat
sub
out
dec
jo
sahf
pop
js
and
fcmovnbe
inc
popf
jle
jno
test
ins
push
xor
imul
xchg
add
pusha
test
add
call
pushf
(bad)
(bad)
jb
(bad)
cmc
and
bound
in
scas
fisubr
repnz
and
icebp
xchg
in
mov
movs
sbb
mov
addr16
xchg
jmp
cmp
mov
xor
mov
sbb
cmp
mov
daa
ss
sub
sub
cmp
sub
dec
jnp
fwait
stc
into
mov
aas
inc
out
sub
or
ret
jecxz
das
out
push
lods
xlat
push
cld
lods
lahf
push
push
loop
inc
push
and
adc
mov
out
test
jb
daa
jmp
jge
xor
and
sbb
lea
enter
adc
and
sub
xchg
out
lds
cld
add
clc
mov
pop
push
pop
mov
je
out
fwait
(bad)
dec
rcl
mov
es
cmps
mov
cdq
ret
xchg
cmps
hlt
and
jno
inc
sub
or
mov
inc
loopne
push
and
enter
mov
loopne
pop
jmp
xlat
dec
xor
sbb
shl
leave
popa
push
pop
fsubr
int
sbb
ret
xor
push
mov
and
dec
out
inc
xor
cld
jle
jbe
jmp
or
fadd
pop
shl
fild
cs
leave
pop
push
push
inc
cdq
cmp
out
loope
mov
scas
adc
adc
aaa
fnstcw
pop
mov
cld
mov
add
jno
(bad)
push
popf
lods
jnp
cmc
mov
jp
cwde
push
cs
leave
shl
cmp
sahf
jbe
add
icebp
mov
stos
push
inc
mov
mov
mov
stos
mul
gs
(bad)
mov
push
cmp
scas
scas
mov
add
test
leave
test
or
into
aaa
mov
loopne
ins
mov
dec
add
and
add
sub
stos
mov
fist
and
mov
adc
pushf
push
dec
cmp
add
movs
sub
add
mov
mov
in
clc
pop
ins
sbb
(bad)
retf
push
mov
loop
test
imul
into
sbb
xchg
mov
cmp
ja
movs
adc
jno
arpl
mov
fs
mov
sbb
pop
movs
pushf
push
dec
mov
fnstcw
xchg
sub
add
ds
sub
cmps
pop
and
in
fsubr
aaa
int3
ins
lods
and
sbb
or
fwait
inc
dec
sti
lods
jmp
push
cmp
jmp
out
inc
lock
or
js
repnz
cmp
and
add
ins
jno
xor
pusha
jecxz
imul
test
call
cwde
jg
and
push
inc
xchg
mov
clc
mov
mov
xor
mov
ss
push
(bad)
test
rol
fisub
bts
push
imul
lahf
jb
std
lods
mov
std
push
sub
imul
cmps
rcl
(bad)
test
setns
cld
mov
arpl
adc
and
pop
push
xor
repz
sub
mov
add
mov
mov
das
neg
add
dec
js
daa
arpl
push
test
jo
push
enter
arpl
stos
sub
popf
jns
add
xchg
or
fist
jo
jmp
movs
xor
sub
xchg
mov
sub
gs
aam
nop
call
mov
pusha
cmp
xchg
rcr
or
or
popf
cwde
or
jo
aam
fmul
inc
push
data16
mov
push
or
xor
pop
adc
adc
adc
(bad)
push
mov
out
das
fs
icebp
adc
call
or
cld
cmc
outs
mov
daa
mov
shr
aam
push
sub
pop
push
jno
add
fs
ss
fnstcw
call
imul
push
push
sbb
arpl
imul
dec
add
lahf
jns
aad
xlat
cwde
jb
dec
bound
mov
(bad)
cmp
(bad)
stc
out
jmp
lock
loop
out
hlt
mov
add
dec
inc
dec
inc
scas
inc
pusha
or
add
add
add
(bad)
(bad)
inc
add
add
add
add
add
add
jns
je
ins
cs
jb
ja
outs
addr16
push
gs
imul
xor
xor
inc
jne
je
jb
cmp
jb
ins
sub
push
jne
ins
imul
imul
bound
xor
data16
xor
fs
add
adc
gs
cs
jb
ja
outs
addr16
imul
add
popa
je
pop
add
add
add
add
add
lsl
add
mov
mov
inc
or
add
or
add
add
add
add
or
add
add
pusha
outs
rol
add
add
inc
dec
inc
add
mov
or
popa
add
jo
pop
jae
add
ret
add
push
ret
add
outs
test
add
adc
inc
inc
push
pop
inc
in
rol
add
das
arpl
ja
fstp
fstp
jns
mov
jmp
dec
ja
cmps
cmps
imul
out
jecxz
jge
ret
pop
add
cmps
adc
add
dec
push
push
fld
inc
adc
mov
jns
jns
inc
je
loop
loop
push
push
(bad)
mov
or
icebp
test
iret
shl
dec
sbb
add
jl
mov
std
into
cmp
mov
or
push
cld
cmp
cmp
aaa
and
test
sbb
es
dec
xchg
retf
push
iret
data16
push
loopne
sub
mov
es
xchg
fbstp
mov
mov
push
ror
sar
fwait
rcr
sbb
add
push
sub
push
or
imul
cmp
dec
leave
xor
and
mov
inc
mov
add
inc
fs
mov
pop
jns
xor
and
outs
push
push
popa
and
cmp
js
mov
push
pop
add
sub
pop
ins
in
cmp
cmps
(bad)
ins
push
push
aaa
aas
movs
push
mov
test
and
je
add
xchg
cmp
enter
sbb
fmul
stc
push
icebp
lds
mov
mov
stos
es
mov
repnz
push
or
mov
shr
ret
adc
jbe
test
out
pop
xor
or
call
sahf
xor
fdivr
pop
int
jmp
in
add
mov
jns
pop
gs
mov
or
fistp
lds
icebp
mov
js
scas
out
and
retf
cmp
ins
rcr
fldenv
mov
sar
mov
les
aad
xor
test
call
sbb
push
sbb
adc
mov
out
jmp
xor
pop
retf
hlt
adc
mov
fcmovnb
pop
inc
int
inc
mov
pop
cmp
sbb
xor
push
test
mov
fucom
jo
in
addr16
scas
in
adc
cmps
outs
xchg
xor
sti
push
pop
xor
jnp
loopne
stos
lahf
out
cli
add
or
test
int
mov
xchg
mov
pop
or
push
daa
jne
fbld
and
sub
xchg
push
fbld
xchg
jl
inc
std
int
dec
pop
arpl
push
cmps
out
dec
or
push
cmc
adc
shl
retf
lock
shl
sti
lods
or
inc
rol
enter
and
stos
fsubr
cmc
out
sti
outs
lock
in
push
mov
loop
mov
push
cwde
add
mov
cmp
dec
adc
cmp
clc
les
mov
ret
xlat
fst
sahf
adc
cld
into
add
rol
loope
xchg
mov
lds
fs
sbb
mov
(bad)
adc
and
cli
sahf
xchg
sahf
mov
add
out
dec
push
inc
sub
push
ficom
jg
fist
call
push
pusha
pushf
aas
inc
mov
adc
sub
sub
dec
int3
rol
xchg
push
dec
xor
ins
inc
cmp
cmps
xchg
add
out
sbb
aas
pop
xor
ins
icebp
dec
icebp
push
ficom
adc
cmp
aas
adc
bound
pusha
add
call
cs
mov
pop
mov
(bad)
out
les
xchg
fwait
out
mov
fisttp
rcl
rcl
pop
repnz
mov
cmp
les
fmul
adc
in
iret
cmp
imul
xchg
and
pop
dec
xor
jae
inc
cs
adc
rcr
test
test
stos
sbb
mov
lods
dec
inc
sub
lods
add
mov
hlt
xor
pop
gs
icebp
sub
sbb
pop
xchg
leave
sub
ins
pop
jno
mov
add
(bad)
sub
dec
inc
cmps
outs
loope
(bad)
mov
pop
pusha
test
in
cmc
movs
add
sbb
imul
bound
and
ret
cmc
pop
jmp
jmp
ror
mov
scas
push
jle
push
cld
popf
sbb
mov
cld
sub
add
(bad)
rcr
sbb
mov
mov
mov
mov
rcl
pop
dec
test
cmc
test
pop
push
xchg
adc
xchg
sub
sub
jne
mov
or
or
pop
mov
fwait
and
and
jge
mov
inc
pop
xor
pop
cmc
(bad)
push
pop
fwait
lock
sub
jmp
scas
mov
fbstp
movs
and
sub
mov
sbb
jo
mov
mov
sti
sub
(bad)
jecxz
sti
push
and
inc
mov
mov
ror
jp
push
mov
dec
dec
sub
aam
jo
icebp
fsubr
inc
inc
movs
enter
dec
xchg
mov
call
lods
pop
mov
or
inc
aaa
jecxz
daa
inc
dec
add
sbb
fiadd
sar
test
rep
mov
into
enter
pop
adc
retf
xlat
stc
sbb
jnp
sub
xchg
jnp
je
pop
push
lds
ret
retf
paddsw
je
sbb
fdiv
mov
push
mov
add
leave
cmp
ins
pop
cs
fisttp
push
sub
mov
int3
out
pop
mov
sti
add
shl
push
jle
jmp
jne
jmp
rcl
mov
repnz
or
sbb
push
mov
fsubp
out
(bad)
cmc
xchg
(bad)
cmp
sub
mov
aam
mov
shr
inc
repnz
pop
sbb
and
test
mov
cmp
sbb
cmps
rep
xor
out
jp
push
popf
test
out
mov
inc
test
ins
lods
imul
mov
jno
shl
or
aam
fcom
mov
cmps
sub
cmps
xchg
scas
arpl
mov
(bad)
xchg
test
sub
fwait
sub
jnp
push
sub
gs
cmovle
jbe
fwait
add
cmp
pop
cld
add
fcomi
mov
push
sub
test
scas
mov
enter
adc
mov
int
push
xor
mov
(bad)
loopne
sahf
xor
jbe
inc
push
adc
jge
imul
(bad)
test
xchg
inc
push
out
out
inc
jne
pop
repnz
aaa
gs
(bad)
out
mov
inc
xor
dec
int
jl
loope
mov
adc
and
inc
dec
or
retf
xchg
cmp
jns
cli
jmp
rol
std
push
iret
or
lods
push
cmp
ins
loop
fwait
jmp
dec
add
dec
sbb
(bad)
movs
pushf
or
mov
nop
sbb
and
imul
std
rcr
pop
sub
jp
push
sahf
mov
nop
test
mov
mov
jp
mov
out
rcl
cmps
daa
sub
mov
pop
and
aad
sbb
in
mov
push
push
dec
xchg
xor
pop
aas
mov
sbb
mov
adc
enter
mov
es
fstp
test
(bad)
xchg
les
test
cmp
mov
sub
repnz
or
retf
pop
pop
mov
push
mov
mov
pop
mov
dec
fistp
dec
mov
inc
xchg
lods
rcl
retf
push
or
les
mov
xchg
xor
sbb
mul
dec
retf
sbb
loopne
scas
enter
loopne
cs
sbb
pop
and
test
loopne
clc
lds
test
dec
sbb
mov
inc
fild
fwait
mov
arpl
pop
int3
sbb
sbb
add
xchg
add
(bad)
in
nop
aas
gs
loop
imul
inc
mov
in
sub
lods
(bad)
in
push
dec
pusha
lds
sbb
sub
xor
sbb
outs
pop
jp
je
xor
fcomp
pop
xor
std
add
mov
mov
xor
ds
in
ret
jmp
div
push
mov
and
in
jb
out
mov
or
xchg
inc
inc
mov
mov
jnp
push
pushf
shr
jmp
mov
xor
push
cmp
retf
inc
rcl
loopne
cmp
sub
out
xchg
mov
mov
out
fs
jno
scas
xor
mov
call
fnstcw
add
std
in
or
add
push
(bad)
jae
sub
xor
mov
xchg
dec
jnp
imul
js
jb
xchg
push
xor
add
cwde
mov
outs
mov
in
popa
cmps
sub
dec
std
daa
push
fisttp
sbb
das
ins
(bad)
out
(bad)
adc
in
js
sahf
mov
pop
push
pushf
icebp
pusha
outs
push
cmp
pop
push
fmul
xor
outs
pop
shl
call
in
fisttp
mov
pop
cmp
loop
sub
jmp
test
aam
ret
loopne
mov
mov
push
aad
and
out
daa
imul
icebp
ret
jl
fs
mov
popa
scas
rcl
arpl
xchg
retf
adc
sahf
xchg
inc
icebp
test
int3
push
dec
leave
mov
pop
hlt
icebp
inc
jmp
outs
aad
loope
mov
mov
lock
mov
out
mov
test
ins
lahf
fsubr
loop
loop
stc
dec
mov
(bad)
jmp
sub
test
std
or
ror
adc
dec
lea
xchg
and
mov
inc
in
lock
rol
sbb
or
js
jo
push
jnp
scas
xlat
cmp
and
or
dec
cmp
jl
pop
aad
(bad)
les
cld
nop
adc
test
cmp
(bad)
jge
gs
ror
test
jge
shl
pop
mov
mov
arpl
xchg
std
test
mov
jp
das
sahf
push
aaa
sbb
ret
push
mov
ret
ret
lods
add
stos
and
mov
leavew
sbb
enter
lock
jg
pop
or
inc
mov
inc
push
push
daa
int3
lahf
shl
or
mov
aas
cmp
loope
pop
and
ret
enter
jge
mov
dec
ds
js
mov
shl
icebp
addr16
sti
pop
addr16
xchg
sub
das
xchg
cmp
jl
sbb
ficom
xchg
fmul
pop
retf
pop
loope
mov
mov
imul
fwait
adc
pop
aad
aas
test
adc
mov
pop
or
cmp
push
pop
xchg
fs
jnp
loope
fistp
lods
push
nop
lds
jno
inc
jl
out
inc
add
cmp
mov
fs
enter
data16
sbb
jl
sbb
mov
push
xchg
sbb
add
je
stc
int3
addr16
add
push
out
sbb
or
add
or
scas
dec
mov
or
jae
cmp
scas
rcl
or
in
pop
xchg
mov
aaa
xchg
sbb
or
gs
add
push
jmp
dec
cs
nop
xchg
ja
int
cld
lea
cmp
dec
jne
(bad)
std
sahf
movs
sbb
adc
jge
shl
or
pop
(bad)
xchg
lahf
je
ja
xlat
cwde
fisttp
lods
js
dec
cmp
sbb
xlat
dec
or
jbe
jnp
dec
xor
xlat
mov
iret
sub
inc
push
daa
inc
jbe
and
dec
test
sub
cmps
jle
mov
sahf
inc
xchg
and
mov
mov
in
xchg
call
jl
loope
sub
cs
xor
sub
lea
mov
popf
xchg
mov
out
call
(bad)
push
push
pop
fsub
clc
inc
nop
vpaddq
aaa
xchg
shr
mov
sbb
mov
popf
and
jb
ds
es
xor
mov
jno
imul
mov
xchg
pop
enter
sub
and
aas
rcr
inc
mov
dec
adc
xchg
clc
test
xchg
arpl
std
and
jmp
sahf
add
or
mov
test
and
pop
push
sub
xchg
pop
(bad)
(bad)
sub
clc
jmp
mov
dec
inc
ror
add
mov
and
ins
fsubr
(bad)
pop
(bad)
jle
xchg
into
jb
out
jno
in
jnp
sbb
or
xchg
lea
pushf
mov
out
(bad)
popa
pop
xchg
nop
cmp
scas
repz
cmp
stc
test
jns
pop
shr
outs
adc
or
mov
jecxz
or
das
jmp
aad
or
xor
mov
(bad)
mov
jb
fucom
sbb
mov
xchg
adc
(bad)
out
dec
push
dec
je
cmc
shl
sbb
mov
inc
xchg
and
mov
and
fld
(bad)
loop
push
dec
mov
movs
ins
and
sbb
dec
out
dec
xlat
add
add
sti
sub
sub
sti
push
mov
jl
xor
push
sbb
movs
mov
sub
dec
mov
hlt
cdq
push
out
jl
lock
int
aad
lods
mov
lahf
int3
in
stos
xchg
loop
jp
xchg
repz
repz
pusha
xor
and
jle
lods
push
and
daa
fabs
mov
sub
inc
xor
push
stos
pop
sbb
fsub
jmp
fisubr
add
dec
sbb
jb
add
movs
lods
inc
iret
aaa
mov
adc
test
(bad)
out
jg
xchg
(bad)
adc
dec
jle
xchg
inc
js
pop
je
mov
pop
icebp
pop
ret
dec
pop
pop
mov
pop
lds
pusha
in
(bad)
shl
inc
es
sahf
out
jmp
jge
jnp
das
retf
adc
sub
jmp
fimul
fimul
mov
outs
shl
jge
cld
xchg
jns
mov
hlt
push
dec
test
cmc
aad
mov
mov
inc
add
and
in
loopne
sub
fs
dec
fidiv
mov
(bad)
or
rol
ja
ss
es
xor
fimul
adc
push
add
aas
test
nop
(bad)
icebp
or
jno
mov
fcomp
push
cmp
xor
rcr
rcl
pop
mov
bound
ins
dec
movs
cmc
ds
shr
cmps
adc
popf
test
shr
in
sub
mov
lea
add
into
and
or
sub
shr
das
call
ret
push
push
pushf
aad
and
test
jae
push
pop
mov
out
mov
or
pop
movs
loope
cs
push
int
xchg
pop
push
sti
dec
cld
imul
mov
shl
je
or
pusha
nop
adc
imul
lahf
pop
sbb
in
fstp
xchg
pop
pop
aam
mov
cwde
adc
mov
jne
int
lds
cwde
mov
call
lahf
aas
in
fiadd
vpsraw
lods
adc
sbb
adc
adc
and
adc
addr16
xchg
cwde
add
fnstcw
ins
sub
push
or
sbb
out
enter
add
add
rcr
fxam
jbe
xchg
xlat
inc
jne
jmp
push
cmps
jno
in
jnp
ss
cmp
sti
in
inc
popa
movs
mov
fucomi
ss
leave
(bad)
cmps
(bad)
rcr
and
ins
mov
push
in
sbb
jmp
push
imul
test
jmp
pop
push
lods
lods
in
cmp
mov
add
fdivr
push
sub
mov
mov
sbb
push
mov
jecxz
mov
fimul
xor
fs
push
out
adc
push
aam
adc
mov
iret
push
sub
mov
daa
xchg
mov
and
clc
pop
sub
ficom
add
stc
iret
jg
repz
(bad)
cld
out
jmp
dec
mov
dec
mov
add
add
dec
inc
scas
inc
pusha
or
add
add
add
(bad)
(bad)
inc
add
add
add
add
add
add
jns
je
ins
cs
jb
ja
outs
addr16
push
gs
imul
xor
xor
inc
jne
je
jb
cmp
jb
ins
sub
push
jne
ins
imul
imul
bound
xor
data16
xor
fs
add
adc
gs
cs
jb
ja
outs
addr16
imul
add
popa
je
pop
add
add
add
add
add
lsl
add
ret
add
mov
inc
or
add
or
add
add
add
add
or
add
add
pusha
outs
rol
add
add
inc
dec
inc
add
mov
or
popa
add
jo
pop
jae
add
ret
add
push
ret
add
outs
test
add
adc
inc
push
pop
inc
in
rol
add
scas
outs
es
jno
xchg
xchg
mov
scas
cmp
mov
cmp
xor
(bad)
je
dec
ja
ja
xor
jg
(bad)
mov
imul
add
push
lock
nop
call
lods
mov
mov
jecxz
pushw
lds
mov
mov
adc
push
mov
(bad)
in
popf
jo
dec
outs
push
icebp
movs
aam
cmps
and
(bad)
idiv
les
xchg
sub
jmp
nop
js
hlt
adc
fmul
test
xor
dec
aam
mov
and
adc
aam
ins
jecxz
pusha
div
mov
(bad)
outs
movs
pop
test
add
mov
sub
xchg
cmp
xor
add
jp
iret
mov
xchg
arpl
push
or
mov
es
repnz
in
cmc
loopne
popa
iret
mov
sbb
fcos
adc
adc
mov
je
adc
add
cli
cmp
jmp
mov
mov
shl
(bad)
cdq
dec
lds
mov
xor
inc
stc
cmp
dec
jmp
call
out
push
fdiv
sahf
pop
add
in
loope
cmp
sub
mov
fcom
adc
inc
mov
pop
pop
out
push
sub
lahf
jmp
cwde
xor
xchg
mov
sub
inc
imul
xchg
(bad)
pextrw
mov
aas
pop
jmp
data16
and
scas
fbstp
aas
ret
cmp
js
cmp
movs
shl
mov
pminub
sub
sbb
not
mov
xchg
in
dec
pop
out
cmc
pop
ret
sbb
pop
sub
adc
retf
sub
and
ja
ja
test
shl
inc
dec
or
cli
inc
add
xor
dec
jno
add
sbb
jecxz
ins
xchg
inc
aad
mov
or
lahf
inc
and
mov
sbb
daa
mov
repnz
cmps
hlt
inc
mov
hlt
pop
mov
shr
inc
stos
push
jae
enter
xlat
xchg
xchg
jnp
mov
mov
ins
jge
std
pop
ret
or
pop
hlt
mov
add
shl
call
cmp
out
das
cmp
sbb
pop
pop
jns
mov
jge
xor
cli
xchg
std
jb
int3
or
shr
xor
mov
adc
cmps
inc
sub
(bad)
jmp
int3
ret
xor
sbb
mov
dec
lods
and
pop
sub
arpl
jo
push
jge
push
push
sbb
add
shl
or
loopne
rol
js
loope
mov
test
loopne
inc
fnstenv
stc
test
jae
xor
jbe
xchg
xor
mov
ins
add
nop
int
mov
fwait
xor
test
fcom
cdq
add
stos
movs
daa
fwait
adc
arpl
aad
dec
or
pop
add
in
pop
bound
pop
popf
sbb
lea
mov
sub
xor
push
jmp
fistp
mov
or
aas
add
mov
movs
add
jns
imul
enter
out
out
jp
clc
(bad)
or
inc
and
mov
push
js
or
jb
mov
sahf
in
inc
mov
cmp
mov
fist
sub
stos
or
jmp
int3
nop
push
mov
popf
sbb
sbb
xor
test
sahf
push
pop
lods
cli
xor
xchg
jle
mov
ss
mov
les
(bad)
cld
add
rcl
fs
fdivr
shl
std
dec
aad
mov
add
sbb
dec
mov
xor
out
retf
mov
xchg
lea
cli
pop
xlat
retf
fcmovnb
sub
push
(bad)
mov
daa
inc
call
gs
mov
in
xchg
test
inc
sub
stc
mov
sub
xchg
xchg
pop
sbb
in
jle
xchg
jmp
xor
mov
and
test
jae
lods
sahf
mov
lods
repz
mov
inc
dec
jl
lods
pop
outs
cmp
lds
inc
rcr
popf
pop
pop
repnz
mov
add
inc
ins
mov
push
cmp
add
push
xchg
icebp
ins
cmp
push
scas
xchg
cmp
push
fs
xor
vpmadcsswd
fcom
fcmovnbe
out
test
dec
cmps
sti
int
scas
add
xchg
fnsave
fst
inc
cmp
jecxz
pop
pusha
mov
repnz
sbb
dec
ret
fld
or
ret
call
mov
scas
mov
xchg
jno
pop
add
dec
xlat
pushf
ficom
fist
add
cmp
add
sbb
jb
jbe
loop
scas
gs
aam
retf
clc
mov
aad
pop
jmp
ss
ja
lahf
sbb
je
dec
push
cs
jge
xchg
aaa
pop
or
mov
dec
sbb
out
mov
das
cmps
cld
xor
mov
or
imul
and
pop
mov
jo
js
loop
dec
jl
xchg
sub
add
pop
or
scas
enter
out
ss
jmp
test
hlt
jl
inc
in
or
sub
push
aad
jno
pushf
jle
adc
sub
inc
jl
jbe
(bad)
jne
dec
adc
je
mov
loopne
(bad)
cld
lahf
jmp
test
jne
jmp
xchg
sub
adc
jnp
xchg
ret
test
mov
jns
loope
xor
test
push
jmp
add
jmp
sahf
dec
pop
inc
sub
pop
sub
inc
pop
adc
inc
dec
jge
adc
dec
pusha
inc
jb
ret
ret
fild
(bad)
mov
mov
clc
data16
push
add
mov
cmc
dec
mov
ret
mov
(bad)
or
dec
test
mov
test
or
mov
jo
cmp
jle
cwde
jns
mov
fmulp
cmc
pop
test
mov
cdq
repz
add
idiv
int
rol
inc
push
std
std
cmp
or
pop
cwde
mov
push
jno
test
jns
inc
bound
enter
test
dec
pop
pop
nop
cwde
sub
cmp
push
mov
inc
shl
jge
or
xchg
mov
inc
ja
fild
cmp
stos
leave
bound
sbb
movs
inc
mov
dec
cmc
cmps
jmp
dec
mov
mov
fsubr
or
(bad)
jno
mov
dec
fcomip
aaa
push
fidivr
jge
das
mul
aaa
neg
shl
or
dec
jl
xchg
mov
out
mov
cli
mov
mov
hlt
push
and
add
pop
xlat
iret
sar
cmp
mov
xchg
(bad)
or
dec
mov
ret
stos
cmps
mov
jae
shl
stc
movs
scas
push
jo
outs
push
push
xchg
mov
mov
call
mov
sti
int3
mov
add
mov
cli
jp
dec
pop
xor
mov
scas
icebp
jb
adc
out
cmp
not
movs
or
jecxz
mov
pushfw
repz
push
push
scas
sahf
jg
repnz
xor
cmp
xchg
ds
mov
sub
mov
pop
add
das
imul
push
jg
sbb
arpl
(bad)
iret
aas
xchg
dec
add
and
and
cmp
ror
fcmovb
cmps
int3
inc
std
sub
addr16
or
xchg
xor
fld
sbb
and
mov
outs
inc
pop
xor
mov
cmps
ret
fild
adc
pushf
xchg
mov
faddp
sbb
std
add
aas
mov
jmp
arpl
push
or
pop
pop
movs
lods
(bad)
pop
(bad)
push
pusha
fwait
push
cmp
push
push
and
(bad)
mov
into
movs
pop
xchg
retf
cs
ss
adc
shl
cmp
add
jmp
test
mov
inc
add
call
in
inc
mov
sub
jne
mov
dec
ds
sub
f2xm1
push
mov
and
in
scas
pushf
test
pop
fs
adc
les
lock
pusha
xchg
into
cs
push
pop
das
test
sub
ret
rcl
mov
outs
xchg
push
lahf
loope
(bad)
cmp
fyl2x
sub
mov
cmps
in
mov
cli
sub
dec
pop
shr
cmp
(bad)
adc
cmc
mov
jnp
jmp
jmp
ret
popa
pop
out
xor
jg
call
and
sbb
das
clc
sub
xor
into
(bad)
ins
dec
or
sbb
les
sbb
jle
aad
retf
push
dec
sbb
sbb
outs
push
into
stos
jecxz
fsincos
dec
sahf
cmp
out
cmp
pop
mov
daa
in
fxtract
sbb
push
add
imul
mov
adc
or
fidiv
nop
add
sub
sbb
xchg
cmp
bound
cmp
mov
or
jle
mov
cdq
xchg
cs
mov
mov
ja
and
leave
inc
test
in
cs
and
popa
icebp
sub
enter
lods
dec
imul
push
(bad)
retf
scas
jns
test
in
std
in
in
movs
lock
stos
adc
repnz
add
push
push
push
hlt
and
leave
push
xlat
call
cmp
jnp
mov
xchg
in
inc
test
in
mov
(bad)
cmps
(bad)
jne
dec
jge
(bad)
iret
push
es
push
xor
mov
dec
cli
xor
sub
int3
xor
mov
push
das
test
loop
mov
dec
retf
dec
fmul
imul
mov
mov
(bad)
(bad)
test
in
push
xor
jns
leavew
sub
popf
xor
(bad)
stos
outs
dec
add
mov
sbb
fsub
mov
xchg
add
es
jle
add
mov
sbb
or
pop
retf
add
inc
loope
imul
aad
mov
xchg
xor
sbb
mov
int3
imul
jns
pop
les
ret
jp
out
add
je
ins
cmp
aam
xchg
out
add
repnz
push
push
das
xor
dec
sar
mov
jle
scas
shl
sub
pop
sar
mov
sahf
cmps
cdq
mov
shl
sar
and
ret
jns
dec
repnz
outs
ret
push
std
mov
xchg
add
ins
mov
mov
adc
push
or
jge
das
xchg
out
adc
in
ret
test
in
test
outs
repz
dec
or
ja
cwde
sahf
stos
rol
xchg
push
out
cmp
cmc
addr16
mov
in
push
std
mov
loopne
dec
mov
mov
dec
(bad)
mov
rcr
inc
push
dec
movs
mov
retf
pop
popa
push
and
arpl
sbb
and
psllw
and
xchg
sub
sub
test
sub
inc
add
outs
inc
mov
cmps
inc
dec
sahf
sar
scas
add
fidivr
repz
mov
or
movs
fwait
inc
dec
push
div
pop
retf
int
nop
inc
or
dec
push
int
xor
test
cdq
mov
out
xchg
fs
jno
bound
sbb
das
pop
push
push
cmp
lds
loopne
dec
sub
stos
psubsw
out
mov
inc
mov
and
and
lds
mov
(bad)
sbb
test
and
sub
fnsave
stc
sbb
sbb
dec
ss
and
and
inc
mov
arpl
test
leave
sbb
icebp
rcl
and
data16
int3
jnp
cwde
pop
push
icebp
pushf
cdq
push
cld
pop
inc
scas
shr
mov
rcr
das
arpl
xchg
dec
js
jo
ins
xchg
pop
dec
inc
pushf
xchg
jle
mov
jo
mov
cmp
test
xlat
or
into
pop
push
mov
and
add
js
add
mov
in
rol
pop
lods
hlt
scas
dec
xor
sahf
loope
loop
out
mov
xchg
and
dec
rcr
sub
scas
add
mov
out
in
adc
pop
cmps
mov
pop
jmp
and
sbb
fidiv
push
dec
(bad)
mov
and
mov
fdiv
and
xchg
dec
loopne
pop
adc
cmp
dec
xor
loope
test
fsubr
aad
sub
mul
fs
xchg
shl
sbb
nop
mov
pop
loop
jno
fistp
fist
popa
mov
sub
jae
mov
lods
pop
mul
cmc
stos
inc
neg
das
in
call
add
dec
in
push
das
out
test
xchg
and
or
retf
xchg
iret
stos
lock
stc
inc
sub
mov
(bad)
in
mov
mov
or
lahf
push
push
or
mov
dec
push
popf
jecxz
das
pushf
ficom
pusha
and
lahf
xor
sbb
add
adc
dec
stc
je
dec
add
jp
push
(bad)
nop
int3
jecxz
repnz
retf
shr
xor
xchg
push
stc
mov
push
xchg
mov
sahf
in
icebp
mov
arpl
idiv
mov
and
push
scas
std
cmc
jae
std
pop
packssdw
sbb
xor
lea
lea
out
clc
je
or
mov
mov
lock
jbe
mov
cmp
and
outs
adc
pop
mov
inc
(bad)
or
sbb
sbb
push
xchg
adc
push
imul
push
aad
xchg
push
lods
pop
jae
and
push
xor
cmps
jo
mov
sub
test
lods
mov
jle
shl
push
(bad)
mov
xor
int3
fmul
inc
movs
and
push
out
xor
fist
cmp
sub
into
das
xlat
cdq
aad
or
aam
xchg
sbb
pop
or
clc
(bad)
test
pusha
dec
jl
cwde
cli
push
pushf
jbe
jbe
lods
jecxz
(bad)
loopne
mov
pop
pusha
movs
rcr
xchg
clc
ret
sahf
(bad)
jmp
push
and
jecxz
mov
popa
(bad)
das
xor
icebp
dec
scas
loop
das
fnstenv
jnp
repnz
mov
in
rcl
sar
out
or
and
push
sub
pop
fidivr
aad
ds
cmps
mov
lahf
pop
mov
test
sar
sub
cmc
icebp
adc
sbb
mov
mov
dec
cld
add
stc
and
cmp
sti
xor
sub
test
cs
addr16
xor
sbb
shr
lds
and
and
and
mov
mov
mov
jmp
stos
xor
or
mov
jns
mov
repz
dec
frstpm(287
popf
lods
mov
fdivr
sub
int3
out
cdq
mov
inc
sub
clc
(bad)
repz
inc
mov
inc
sub
out
add
movs
aad
std
(bad)
mov
mov
(bad)
push
mov
cld
test
push
and
pop
outs
(bad)
loop
xor
mov
cmp
mov
inc
inc
ins
outs
jmp
dec
and
(bad)
inc
out
pushf
pushf
push
ss
popa
lock
js
cdq
scas
fistp
fst
into
jns
fisub
push
jne
ds
out
sbb
lahf
out
ins
cmp
sub
xchg
cmp
iret
jl
push
fst
inc
mov
mov
pop
js
add
div
mov
mov
xchg
(bad)
popf
cmp
stos
pop
and
adc
xchg
pop
xchg
pop
jmp
inc
jnp
popf
push
mov
mov
(bad)
cld
repz
aas
(bad)
cld
repz
aas
jmp
mov
sbb
add
dec
inc
scas
inc
pusha
or
add
add
add
(bad)
(bad)
inc
add
add
add
add
add
add
jns
je
ins
cs
jb
ja
outs
addr16
push
gs
imul
xor
xor
inc
jne
je
jb
cmp
jb
ins
sub
push
jne
ins
imul
imul
bound
xor
data16
xor
fs
add
adc
gs
cs
jb
ja
outs
addr16
imul
add
popa
je
pop
add
add
add
add
add
lsl
add
mov
mov
inc
or
add
or
add
add
add
add
or
add
add
pusha
outs
rol
add
add
inc
dec
inc
add
mov
or
popa
add
jo
pop
jae
add
ret
add
push
ret
add
outs
test
add
adc
inc
inc
push
pop
inc
in
iret
add
add
scas
outs
sbb
xor
bound
dec
xlat
jmp
imul
fnsave
call
pop
iret
ds
loopne
add
test
imul
jecxz
dec
popf
and
cmp
movs
aad
and
into
arpl
aas
pusha
fsub
test
adc
sbb
pop
loop
xor
xor
stos
push
pop
xchg
sar
out
int3
adc
movs
(bad)
call
pop
xlat
pop
xchg
mov
or
je
out
and
mov
pop
arpl
clc
jecxz
ja
push
and
cld
iret
mov
movs
dec
add
popf
mov
mov
ror
and
dec
sub
sbb
mov
adc
scas
xor
xchg
fiadd
pop
jl
popa
inc
inc
or
stos
in
mov
mov
jle
das
sbb
mov
adc
push
inc
jecxz
stos
int
sub
ss
in
(bad)
(bad)
sar
jae
movs
movs
cmps
lods
pop
push
inc
jmp
ja
jp
xchg
push
iret
cli
mov
rcr
mov
push
in
and
arpl
cmp
mov
aas
enter
push
into
cdq
fst
add
fisttp
(bad)
je
pop
push
lods
cmp
fdivr
xchg
add
hlt
jmp
(bad)
jmp
bound
(bad)
xchg
cld
leave
cdq
and
cld
sbb
aas
adc
add
popa
(bad)
cmc
mov
cwde
imul
out
xchg
xchg
imul
adc
mov
xchg
pop
cmp
or
(bad)
pop
stos
jl
xlat
call
jmp
icebp
sar
loop
jbe
inc
into
sbb
in
and
inc
lock
cwde
or
les
(bad)
push
in
or
fwait
adc
mov
(bad)
cmp
jp
sti
fs
jg
out
in
cmp
ins
or
mov
pop
dec
aam
add
aam
mov
sahf
xor
jne
and
mul
and
imul
pop
mov
jmp
loop
call
movs
pusha
repnz
mov
pop
jno
sar
sbb
cmp
pop
mov
jno
xchg
js
push
xchg
dec
out
mov
mov
or
out
or
hlt
jno
push
sbb
adc
not
mov
pop
sub
les
mov
div
push
jns
push
push
mov
mov
outs
cwde
xor
jmp
call
ret
jp
sub
jno
cmp
pop
jp
jg
dec
cmp
mov
jg
retf
aaa
(bad)
mov
lds
(bad)
outs
ud2
mov
push
call
sub
push
push
inc
cmp
(bad)
sub
rol
fucom
leave
das
jge
loop
das
dec
icebp
imul
mov
lods
retf
push
paddd
xchg
xchg
inc
loope
pop
mov
cmp
aam
sar
retf
pop
sbb
mov
cld
data16
inc
fild
xor
sub
mov
scas
mov
rol
out
shl
out
mov
mov
adc
jo
xchg
dec
jp
jnp
mov
and
mov
xchg
mov
mov
sbb
jmp
test
or
and
into
inc
pop
cmps
ss
ss
popa
sar
fwait
rcl
fst
mov
and
aas
(bad)
cli
jns
mov
dec
lods
outs
push
pop
js
mov
mov
retf
stc
adc
add
pop
and
xor
mov
fcomp
inc
imul
retf
fcomp
sar
cwde
add
es
jb
sbb
push
pop
mov
scas
push
bound
push
jg
mov
addr16
sub
mov
outs
push
ret
push
mov
mov
pop
imul
add
cs
fcomp
fadd
push
iret
ret
sub
jne
mov
pushf
into
test
(bad)
and
mov
xor
out
(bad)
adc
sub
inc
cmc
stc
aas
mov
enter
xchg
(bad)
ror
jp
test
in
jg
xchg
(bad)
pop
push
inc
dec
mov
jo
xor
das
ja
(bad)
rcl
arpl
add
jge
inc
sub
imul
inc
enter
dec
cli
sahf
sbb
mov
inc
push
jecxz
popa
imul
clc
adc
pushf
lahf
xor
mov
mov
push
inc
nop
mov
arpl
pusha
pop
pop
retf
pop
and
ins
jae
in
dec
mov
pop
mov
pop
inc
push
shr
out
icebp
cdq
fwait
jne
fisubr
sbb
sti
adc
mov
in
pop
cli
in
pop
push
cli
jae
push
cmp
pop
in
loop
call
push
imul
and
dec
test
out
int
add
cli
jmp
jmp
stos
push
shr
push
sti
add
sti
xchg
in
imul
lahf
ss
mov
out
sub
and
int
cmp
dec
mov
mov
lods
xor
retf
mov
xchg
sbb
add
into
xchg
xchg
pop
xchg
mov
push
cmps
jg
pop
arpl
and
sub
jmp
xchg
pop
xor
jg
xchg
mov
call
(bad)
push
and
in
hlt
dec
dec
mov
or
div
(bad)
cmps
sbb
mov
movs
ret
mov
add
ffreep
sub
dec
mov
dec
adc
mov
pop
adc
idiv
jle
push
push
scas
adc
repnz
inc
pop
cwde
push
and
or
xor
xchg
mov
xchg
mov
mov
fs
jae
loope
aad
add
scas
and
jnp
sub
aas
movs
and
fcom
retf
(bad)
xchg
rcr
xchg
jl
rcr
cwde
sbb
jp
add
jmp
and
xor
cmp
add
repnz
pop
not
inc
push
pop
adc
nop
fimul
mov
outs
movs
lock
nop
jb
xchg
(bad)
int3
retf
pop
shr
mov
adc
inc
sbb
jns
test
mov
retf
test
mov
pop
cdq
lahf
inc
sbb
push
jge
add
ja
jbe
out
mov
sub
aaa
adc
sbb
inc
int3
fisttp
xor
xchg
mov
int
mov
push
imul
enter
aam
enter
es
mov
xchg
mov
hlt
mov
fs
adc
pop
xor
iret
sbb
sbb
and
icebp
pop
sub
or
bound
adc
leave
test
xchg
lock
add
js
mov
movs
loope
jmp
test
mov
neg
inc
mov
ficom
mov
(bad)
xchg
loope
fdiv
test
stos
mov
shl
cmc
or
jns
out
xor
aad
(bad)
shl
fnstenv
or
(bad)
pop
xchg
cmp
in
or
pop
aaa
lds
xor
adc
fimul
inc
movs
loopne
call
out
sbb
outs
pop
out
(bad)
adc
add
es
sbb
or
pop
cli
arpl
or
adc
(bad)
fcmovnbe
mov
pop
xchg
xchg
and
cmc
xor
inc
add
mov
sbb
mov
or
(bad)
das
sar
rol
ja
repnz
push
mov
pop
dec
imul
out
shl
dec
push
scas
mov
sar
cmps
inc
mov
int3
stc
cmp
out
call
loope
addr16
adc
push
ss
or
popa
dec
(bad)
dec
cmp
test
mov
inc
adc
std
not
cmp
sub
jle
call
ja
mov
inc
(bad)
pop
lods
jmp
cli
cli
xchg
arpl
jmp
outs
loopne
mov
sbb
add
cmps
xor
popf
mov
push
(bad)
in
fnstcw
sub
jl
outs
cmp
cmp
scas
loopne
jge
cmp
dec
popf
lods
or
mov
mov
or
and
ins
mul
rcr
mov
inc
push
cli
dec
jo
sbb
sbb
ins
xchg
ret
push
ins
jl
test
inc
mov
hlt
ins
jle
sbb
mov
xchg
jno
out
and
loope
repz
fld
adc
sbb
xchg
jge
cmp
xchg
pop
lods
dec
add
mov
adc
dec
push
fstp
xor
mov
gs
outs
jmp
mov
sub
iret
pop
aad
js
popf
inc
inc
(bad)
shl
js
mov
xchg
or
jb
push
stos
nop
and
jmp
lock
setge
ja
loopne
mov
xlat
dec
sti
std
jmp
mov
inc
mul
pop
dec
xor
test
and
mov
sbb
out
pusha
fld
repz
xchg
xor
cs
rcr
xchg
in
xlat
push
jo
sbb
jnp
int
or
cmp
sahf
fsubr
sbb
or
cmp
movs
sbb
jb
sti
xchg
lds
cmp
push
push
jl
inc
test
lds
inc
jp
repz
jmp
nop
or
(bad)
push
lahf
fdiv
add
movs
dec
cmp
fimul
or
fstp
fsub
shl
pop
aam
push
push
xchg
add
sub
pop
test
into
out
js
xchg
sbb
das
jo
mov
mul
push
and
outs
sub
mov
and
retf
rcr
add
(bad)
cmp
sub
stc
rcl
mov
push
cdq
sahf
rcr
push
jp
shr
jnp
sahf
bound
cmps
retf
xchg
arpl
push
mov
add
push
and
push
(bad)
repz
dec
push
mov
retf
fwait
pushf
sbb
xor
out
fst
sbb
mov
aam
sbb
adc
call
mul
fwait
es
push
or
rcl
mov
mov
sub
das
repnz
mov
loopne
pop
out
xor
inc
jo
stos
sbb
xchg
pop
pop
js
ficom
ror
inc
mov
pop
cli
in
jge
push
sub
rcl
out
add
sub
js
ss
sub
mov
retf
jle
cmps
sub
imul
jmp
cs
adc
loopne
cs
and
cmp
test
lahf
jp
jmp
sub
xchg
inc
push
and
xchg
leave
and
(bad)
jbe
js
jecxz
out
fsub
add
pop
or
imul
add
repz
pop
mov
cmps
push
into
in
sbb
pop
mov
xor
jl
je
inc
dec
shl
out
mov
or
jmp
sub
out
stos
mov
adc
js
mov
adc
shl
push
je
(bad)
jne
sub
push
add
sub
je
sub
movs
xchg
push
pushf
mov
xor
xchg
out
call
enter
lea
push
sub
sbb
out
pop
shl
pop
xchg
adc
cmp
adc
push
mov
gs
(bad)
fs
sbb
enter
sub
pop
fld
xchg
dec
push
cli
xchg
mov
jb
or
lock
mov
test
push
imul
je
data16
hlt
xor
mov
jno
(bad)
xor
or
mov
mov
ror
sahf
outs
push
jge
loope
sbb
mov
push
adc
push
out
adc
retf
mov
or
mov
retf
xor
(bad)
sub
push
retf
cmp
xor
xor
xchg
add
hlt
test
mov
lock
sbb
push
pop
and
(bad)
adc
push
mov
(bad)
mov
in
mov
addr16
cmp
(bad)
(bad)
xchg
sar
ds
or
into
or
gs
jle
stos
cs
and
jo
and
jmp
xor
push
push
jno
xor
jg
dec
jmp
gs
aas
cmps
dec
test
mov
jo
and
jmp
and
sbb
jle
mov
ret
mov
add
and
or
repz
jmp
test
(bad)
rol
jl
xor
push
les
scas
test
ds
push
jle
jge
out
bound
fst
dec
loope
ficom
or
mov
aad
and
bndstx
aad
arpl
rol
shl
stos
movs
and
outs
(bad)
sub
clc
and
xchg
ds
(bad)
and
test
or
out
mov
lods
push
sub
mov
in
(bad)
pop
sub
popf
or
(bad)
lds
mov
mov
aam
retf
inc
aaa
sahf
fistp
push
or
loope
push
imul
dec
ss
shl
xchg
mov
pop
jg
dec
jns
jmp
and
sbb
jnp
jl
fdiv
mov
imul
jnp
test
jecxz
scas
shl
bound
mov
out
int
xchg
inc
loope
int
dec
xor
data16
pop
jnp
lods
mov
addr16
fwait
ins
xor
outs
push
(bad)
xchg
cmp
in
mov
into
test
jge
vmaxps
cmp
jo
xchg
rcl
xchg
and
push
jecxz
mov
mov
retf
xlat
jmp
cmc
dec
pop
or
cld
add
mov
loop
int
aad
movs
cmp
sti
scas
retf
push
in
cli
or
jge
lds
int3
mov
sbb
in
dec
xor
mov
sub
jp
stos
sub
sub
dec
sbb
(bad)
into
inc
mov
leave
cmps
mov
lds
cmps
aam
dec
loopne
mov
pop
dec
sbb
sar
push
cmps
jmp
lock
je
aaa
push
jns
das
xor
ss
push
sar
rcl
fsubr
xor
out
daa
call
or
dec
into
test
clc
call
retf
rol
push
xor
jbe
movs
or
dec
adc
rcl
jle
inc
mov
pop
call
cmp
or
movs
arpl
call
cmp
into
ss
push
cdq
ins
(bad)
sbb
push
data16
inc
or
sub
lods
cmp
fwait
push
cmp
xchg
scas
ds
pop
out
nop
sbb
jno
sar
mov
popf
inc
loop
lock
lahf
mov
out
sub
mov
jnp
add
adc
rep
xor
mov
xchg
push
les
aad
and
jmp
int
retf
scas
or
(bad)
jl
addr16
mov
xor
popa
jae
clc
cmp
cmc
or
retf
retf
mov
ins
add
push
in
(bad)
dec
scas
mov
js
and
je
std
in
mov
ret
and
out
inc
mov
sahf
push
jmp
xor
out
bound
fidiv
(bad)
js
fisttp
xchg
and
lock
lods
push
add
lock
pop
cmps
sub
int
mov
ret
xor
xor
mov
adc
mov
div
pop
(bad)
or
mov
out
dec
sti
pop
mov
ins
inc
jp
in
daa
aas
out
test
movs
mov
sahf
arpl
push
jecxz
or
pusha
push
add
sti
adc
inc
mov
push
jno
movs
mov
mov
fisttp
loope
pop
mov
sbb
xchg
mov
je
adc
(bad)
pop
dec
push
sbb
shl
mov
out
into
sub
sbb
jbe
jmp
dec
imul
into
push
sahf
xchg
mov
in
push
sub
and
cli
or
pop
adc
cmp
inc
xchg
fcmovnbe
out
jle
movs
pop
aaa
fstp
xchg
jne
cmc
movups
popa
js
int
cli
add
fs
ins
pop
ret
loope
dec
xchg
mov
jp
and
(bad)
cmps
ja
icebp
(bad)
(bad)
fld
cs
test
lahf
jg
stc
out
jg
stc
out
xor
leave
movaps
add
dec
inc
dec
inc
scas
inc
pusha
or
add
add
add
(bad)
(bad)
inc
add
add
add
add
add
add
jns
je
ins
cs
jb
ja
outs
addr16
push
gs
imul
xor
xor
inc
jne
je
jb
cmp
jb
ins
sub
push
jne
ins
imul
imul
bound
xor
data16
xor
fs
add
adc
gs
cs
jb
ja
outs
addr16
imul
add
popa
je
pop
add
add
add
add
add
lsl
add
mov
mov
inc
or
add
or
add
add
add
add
or
add
add
pusha
outs
rol
add
add
inc
dec
inc
add
mov
or
popa
add
jo
pop
jae
add
ret
add
push
ret
add
outs
test
add
adc
inc
inc
push
pop
inc
in
rol
loopne
xchg
shl
repnz
cmps
imul
cmp
cmp
imul
xlat
aam
push
xor
jno
in
test
cmp
test
mov
cmc
pop
mov
jp
push
mov
dec
pop
add
popf
push
int3
push
or
and
inc
idiv
mov
inc
pop
jo
xor
jmp
push
sbb
lahf
fs
mov
mov
imul
mov
rol
xchg
push
xchg
dec
cli
scas
jmp
inc
and
scas
mov
sbb
push
dec
inc
mov
ins
(bad)
mov
sbb
mov
dec
inc
daa
jg
nop
jae
jle
sahf
aam
mov
push
xor
sbb
mov
int
xchg
leave
call
outs
adc
cmp
cmp
push
je
xchg
fcmovnu
xchg
cwde
mov
cmp
xor
in
movs
pop
add
push
stc
xor
inc
mov
cmp
or
fs
out
clc
xor
mov
fist
inc
and
inc
mov
arpl
push
call
ret
and
in
push
(bad)
mov
and
arpl
add
mov
nop
fstp
xor
push
mov
add
mov
movs
mov
sub
stos
in
rcr
test
mov
and
rcl
push
je
mov
jge
sar
std
test
into
cwde
jno
mov
(bad)
cmp
cmp
and
scas
movs
or
rcl
(bad)
jmp
mov
sar
out
xchg
retf
test
sahf
or
hlt
push
call
mov
movs
cld
inc
sub
cmps
stos
mov
mov
push
add
jmp
loope
cli
mov
int3
cmps
repz
mov
add
test
xchg
add
lea
mov
add
mov
stc
jo
fiadd
mov
jecxz
or
and
pop
pop
mov
das
push
inc
int3
data16
jnp
in
mov
pop
retf
and
inc
call
or
(bad)
scas
mov
fwait
in
sbb
fdiv
cdq
sbb
imul
inc
or
lods
pop
jmp
cmp
sti
push
(bad)
push
dec
add
dec
jo
cli
cwde
cmp
sub
test
sub
fidivr
in
xor
jbe
call
jge
cmp
pop
retf
test
cs
cs
jno
xor
inc
push
sub
jbe
xor
outs
mov
aaa
fsubr
and
call
push
push
xchg
mov
sbb
dec
cmc
xor
retf
dec
adc
arpl
fmul
cli
ficomp
xchg
mov
push
pop
fucomi
xor
add
dec
fsubr
mov
jmp
fcomp
push
cli
cmp
pop
push
stos
das
xchg
(bad)
mov
cs
(bad)
push
aaa
mov
cs
das
ret
mov
dec
mov
call
mov
cs
push
jb
and
mov
push
mov
shl
ds
call
int
ins
pop
into
stos
imul
fist
push
xchg
fidivr
pop
movs
xchg
sbb
fmul
or
and
and
daa
popf
les
adc
shl
add
and
lods
lahf
xor
aam
mov
aaa
loopne
ror
push
push
sbb
cli
xrstors
call
add
in
outs
imul
aaa
mov
call
inc
and
movs
push
mov
or
pop
stc
inc
inc
repnz
mov
jbe
pop
mov
movs
std
retf
dec
inc
adc
icebp
mov
adc
test
fnstcw
loop
inc
or
mov
xor
cmp
iret
repz
movs
mov
adc
sub
mov
inc
dec
lock
jmp
adc
loope
ror
test
push
and
inc
push
(bad)
movs
or
(bad)
xacquire
push
cdq
dec
ins
lds
adc
adc
jne
xchg
pop
pop
add
xchg
xchg
inc
inc
mov
sbb
cmps
je
sahf
jg
rcr
jl
scas
and
neg
fbstp
lods
in
pusha
outs
mov
add
mov
pop
enter
dec
pop
add
inc
jg
xor
push
call
xchg
icebp
sar
ss
sar
fisubr
imul
(bad)
jo
sub
and
mov
dec
sahf
lods
push
(bad)
jbe
xchg
jl
and
jecxz
lods
pop
scas
fs
pop
es
cmc
sub
fstp
sbb
fidiv
out
ins
dec
pop
ror
ds
inc
in
retf
lock
push
in
test
mov
addr16
jnp
push
das
pop
(bad)
mov
mov
test
mov
jo
add
cmp
out
push
stos
cwde
sub
xchg
das
mov
clc
pop
pop
mov
sub
aaa
push
ret
mov
mov
ror
jbe
push
bound
lahf
adc
add
and
xchg
and
sbb
push
rcl
test
xchg
fisttp
mov
jno
push
xchg
test
pop
inc
shr
cmp
sub
(bad)
xor
stc
and
outs
sbb
jno
jl
sahf
test
int
mov
pop
or
cwde
jnp
xchg
push
cmp
std
in
hlt
outs
cmp
xchg
fisubr
std
pop
mov
adc
cmc
xor
and
inc
imul
push
mov
into
dec
bound
jp
je
iret
cli
in
gs
lahf
mov
dec
dec
push
jl
popa
in
cmp
inc
lds
popa
xor
rcr
imul
push
popf
ror
push
inc
push
sahf
(bad)
jle
sbb
loopne
lock
popa
std
stos
xor
in
rcr
jl
repnz
mov
in
and
push
inc
mov
shr
js
sbb
mov
dec
sbb
pushf
ret
iret
shl
push
fxch
inc
xchg
or
pusha
stos
in
xchg
jecxz
idiv
and
xchg
xor
mov
pop
(bad)
lahf
jecxz
dec
gs
hlt
inc
inc
cmp
int
sbb
sbb
jns
repz
cmps
stc
mov
ret
cmps
xchg
std
rcr
fs
psadbw
xchg
repz
add
popf
sahf
test
mov
nop
and
jp
imul
ja
outs
ja
mov
mov
mov
adc
cmps
enter
mov
xor
dec
cmp
gs
mov
push
sahf
stc
pop
cmp
dec
bound
xchg
xchg
push
and
fnstenv
test
cmp
je
mov
enter
out
fld
pop
push
arpl
retf
(bad)
mov
and
test
iret
imul
xchg
dec
xchg
jge
fsub
cmp
into
addr16
call
or
aad
call
xor
stos
or
lea
mov
pop
push
repnz
cmp
jg
jp
retf
stos
xor
add
out
iret
fisttp
sub
outs
gs
arpl
mov
push
dec
movs
xchg
push
lods
ins
xor
xor
les
fbld
icebp
jmp
aas
and
(bad)
cld
in
add
adc
pop
cmp
dec
xor
into
inc
adc
mov
sbb
jae
mov
xor
cmc
mov
aas
sub
dec
adc
jmp
mov
gs
lahf
out
movs
pop
pop
fidiv
(bad)
cli
call
and
inc
sbb
arpl
das
aad
sbb
mov
ins
mov
dec
dec
mov
ja
ss
xor
xor
jne
sbb
aam
leave
push
cmp
cmps
xchg
sbb
or
(bad)
sbb
in
and
or
jmp
sti
adc
add
(bad)
mov
mov
jmp
or
mov
adc
movs
push
add
sar
repnz
in
stos
call
dec
hlt
ins
retf
ret
addr16
push
add
std
sub
movs
test
imul
or
mov
push
sahf
jne
(bad)
push
movs
and
fs
push
add
bound
cmps
pop
arpl
inc
xor
jecxz
push
jb
jg
or
pop
lds
popa
inc
sbb
xor
ffreep
push
adc
out
push
push
imul
jg
adc
jno
lock
add
inc
pop
pusha
dec
jle
add
adc
or
dec
popa
stc
pop
iret
in
inc
xor
movs
mov
jb
sbb
and
mov
aas
mov
pop
push
getsec
xor
jo
(bad)
(bad)
stc
test
dec
fs
mov
dec
mov
nop
aam
mov
bound
or
jne
push
scas
cmps
mov
cmp
or
sbb
add
inc
push
adc
pop
ret
loopne
pop
push
js
loop
jge
loopne
mov
test
mov
push
fwait
aaa
(bad)
cmps
mov
gs
(bad)
out
push
xor
mov
outs
cmp
arpl
inc
dec
cmp
das
pop
mov
ss
inc
cwde
inc
fist
push
repz
cmp
into
xchg
out
sub
push
add
and
hlt
and
or
sub
and
mov
shr
mov
fwait
xlat
push
mov
dec
cmp
into
out
xchg
cmps
nop
into
loopne
cmps
mov
cmp
add
inc
in
fwait
dec
mov
sbb
scas
push
push
movs
add
arpl
pop
enter
std
dec
and
pop
jnp
fstp
retf
test
xchg
jno
xchg
mov
and
and
js
int
cmp
push
push
leave
scas
ror
js
xchg
pop
mov
mov
push
adc
xor
mov
cmp
das
es
in
mov
adc
jl
lock
jge
sub
jl
aaa
int3
pop
cmps
test
ss
mov
int3
sub
rol
pop
push
leave
arpl
xor
fst
pop
ins
pop
sbb
inc
(bad)
and
movs
inc
aas
pusha
cs
jmp
ret
fnstenv
push
and
pusha
fsubr
sahf
jp
es
adc
fidivr
jo
xor
retf
add
shl
repnz
loop
or
cs
bound
loopne
sbb
sti
ret
push
xor
je
loope
ret
mov
ss
mov
call
add
mov
sub
cmp
out
and
popa
adc
sub
jle
ds
ds
mov
xor
pop
in
xchg
sub
xlat
scas
mov
sub
push
inc
pop
inc
fsub
nop
outs
and
push
daa
stc
jo
popf
inc
pop
inc
aas
test
or
stc
cmps
jbe
stos
inc
adc
inc
fwait
stc
push
pop
fwait
cmp
sbb
cwde
mov
je
aas
adc
sar
into
aaa
jne
sub
lods
pop
fcomip
ja
xor
into
fdiv
inc
pop
xor
scas
mov
xchg
jns
jp
push
mov
adc
addr16
in
mov
scas
and
pushf
outs
cmp
daa
aam
sub
mov
in
data16
sahf
mov
pop
cmc
dec
sar
sahf
out
mov
and
pop
mov
add
and
sub
cmc
inc
mov
(bad)
xchg
iret
mov
mov
ins
inc
jge
sbb
mov
mov
mov
outs
in
jmp
enter
ror
and
cmps
jg
mov
xchg
jnp
xlat
daa
or
push
mov
xchg
mov
mul
pop
fisttp
sbb
aad
mov
push
and
push
(bad)
std
stos
loop
lock
psubsw
and
aas
push
outs
pop
push
push
add
(bad)
out
push
and
cmp
stc
sub
push
es
fs
push
rcl
rol
js
mul
jp
inc
inc
scas
adc
push
addr16
pop
push
mov
call
xchg
mov
in
inc
or
stos
scas
enter
cmps
mov
or
add
sbb
lds
dec
cmp
sub
cmps
mov
stc
test
mov
cld
lock
push
or
fcomip
fcmovnb
mov
mov
hlt
pop
ds
push
mov
sbb
es
jle
xor
(bad)
pop
jmp
mov
stos
jmp
sahf
mov
adc
adc
xor
or
mov
sti
ins
daa
div
jecxz
xchg
jl
aaa
inc
lock
test
fwait
ja
mov
push
xor
mov
fwait
out
ja
mov
dec
dec
loop
es
inc
std
call
mov
and
cmp
fdivr
pop
push
mov
xchg
dec
mov
xchg
fisttp
or
cmc
add
test
fnsave
adc
rcr
call
sahf
ret
arpl
outs
jo
fwait
pop
sbb
mov
xor
pop
adc
lds
loop
xchg
sbb
lods
jnp
mov
push
pop
sub
add
int3
adc
mov
add
(bad)
mov
sub
xor
add
iret
and
int
popa
dec
pop
pop
xor
lock
shr
or
push
mov
mov
call
(bad)
push
dec
mov
push
icebp
jmp
cmp
xor
add
push
das
fwait
xchg
test
xlat
sar
mov
push
push
scas
and
sti
push
in
jno
fiadd
mov
test
(bad)
adc
rcl
adc
mov
inc
pop
mov
in
jmp
inc
jae
jne
xchg
dec
mov
mov
xchg
inc
mov
pop
mov
mov
adc
mov
out
fwait
inc
loopne
jle
pop
add
inc
mov
sub
push
inc
xchg
pop
or
mov
push
push
cmp
sub
movs
pusha
lods
and
fcomp
les
and
jp
jbe
mov
(bad)
ror
psrlw
pop
popa
xor
sub
jnp
jmp
push
ds
mov
cmps
xchg
mov
js
sahf
loope
lock
cmc
jl
adc
mul
fisttp
imul
test
in
and
push
bound
mov
or
mov
hlt
xchg
jo
ror
jnp
push
dec
or
cli
data16
shl
jle
gs
xor
retf
fnstenv
cmp
inc
bound
stos
adc
(bad)
ja
pop
movs
cmc
push
je
jno
stc
xor
retf
daa
mov
retf
(bad)
std
add
pop
and
out
(bad)
loop
and
in
test
xor
ja
add
mov
push
jns
pop
xlat
adc
add
sub
sub
xor
add
fwait
jbe
into
cs
mov
repz
add
lods
jns
push
adc
lahf
jmp
sbb
fsub
push
fsubr
pop
inc
aad
sbb
push
push
retf
test
ss
xor
jbe
out
xor
lods
ret
int
mov
adc
mov
shl
arpl
jl
push
ffreep
lea
repnz
mov
mov
sti
mov
and
out
je
push
ret
dec
dec
fld
mov
jg
or
add
add
push
sbb
aam
outs
lock
aas
xor
sub
aad
bound
or
btr
shl
xor
or
std
movs
arpl
add
xchg
call
ja
ja
jge
adc
hlt
xor
lds
test
movs
imul
imul
sub
vmaskmovdqu
fincstp
or
inc
out
mov
xchg
and
loope
mov
out
mov
imul
inc
xlat
es
mov
sbb
mov
fst
xor
sti
nop
mov
cmp
ins
lock
mov
jo
add
dec
not
test
dec
or
ss
sbb
pop
push
not
xor
sbb
dec
inc
addr16
lahf
cmp
fistp
sbb
cmp
inc
lahf
fst
sbb
into
adc
inc
inc
(bad)
data16
ja
cmp
ficomp
int
push
jmp
or
neg
lahf
jg
stc
out
jg
scas
add
inc
sub
ins
mov
jmp
add
dec
inc
scas
inc
pusha
or
add
add
add
(bad)
(bad)
inc
add
add
add
add
add
add
jns
je
ins
cs
jb
ja
outs
addr16
push
gs
imul
xor
xor
inc
jne
je
jb
cmp
jb
ins
sub
push
jne
ins
imul
imul
bound
xor
data16
xor
fs
add
adc
gs
cs
jb
ja
outs
addr16
imul
add
popa
je
pop
add
add
add
add
add
lsl
add
les
add
add
or
or
add
or
add
add
add
add
or
add
add
pusha
outs
rol
add
add
inc
dec
inc
add
mov
or
popa
add
jo
pop
jae
add
ret
add
push
ret
add
outs
test
add
adc
inc
inc
push
pop
inc
in
xlat
cmc
and
(bad)
jecxz
icebp
xchg
call
fstp
mov
cmps
mov
sbb
xor
pushf
out
out
cdq
fisttp
shl
xor
es
div
jg
idiv
pop
sahf
aas
cmp
lds
pusha
mov
xor
scas
mov
les
cmp
adc
jne
fdivr
aas
ins
dec
aas
mov
or
fnstsw
out
cwde
mov
jnp
test
jno
in
call
xlat
mov
mov
or
arpl
mov
stos
in
mov
ret
retf
loope
ror
inc
outs
mov
inc
stos
pop
cmp
sub
rol
adc
push
push
(bad)
js
call
cwde
(bad)
test
ficom
test
jnp
xor
xor
mov
jo
mov
and
clc
stc
into
inc
or
mov
lea
arpl
and
sbb
ret
cs
loop
mov
stos
jnp
shr
daa
leave
adc
and
lahf
and
repnz
mov
cmps
imul
(bad)
push
pop
inc
fmul
fs
sub
jbe
mov
push
loopne
jmp
pop
xor
cmp
push
cwde
jge
pop
leave
bound
add
lea
xchg
retf
stc
enter
push
jle
or
xchg
imul
ss
sub
ret
outs
pop
sub
push
sahf
mov
(bad)
or
stc
jmp
clc
adc
mov
aas
data16
or
pop
inc
shl
mov
mov
pop
imul
in
(bad)
and
rcr
jle
pop
xchg
inc
idiv
sbb
dec
(bad)
add
daa
pop
popa
push
push
pop
jno
and
leave
jmp
sbb
or
loope
or
daa
ins
jg
add
dec
mov
pop
pop
push
cdq
pop
div
sub
mov
inc
ja
outs
out
sbb
leave
and
jmp
xor
cld
pushf
inc
xchg
ret
retf
in
jb
cmp
mov
xor
aam
or
movs
push
mov
mov
ret
add
scas
push
xchg
scas
xor
sbb
dec
xchg
pusha
mov
stos
jge
jecxz
sub
fs
aad
test
mov
pusha
sub
aad
imul
xor
mov
aas
inc
aam
loop
icebp
movs
scas
lock
mov
mov
call
imul
sti
add
(bad)
push
ins
pop
adc
bound
jae
fnstcw
loop
pop
mov
out
dec
mov
aaa
and
mov
jae
ret
mov
or
jmp
sub
loop
call
addr16
pop
test
inc
or
push
or
mov
push
jecxz
pop
lds
cmp
xor
inc
mov
(bad)
mov
ret
inc
cmc
out
in
mov
mov
pop
mov
and
sub
sahf
(bad)
cmp
(bad)
push
mov
mov
mov
sub
movs
mov
out
hlt
fcomip
xor
pop
sub
and
xchg
pop
ret
and
(bad)
sbb
or
sub
mov
xlat
mov
mov
std
cmp
mov
ss
dec
or
in
cmp
cmp
mov
inc
mov
push
mov
mov
mov
iret
aam
mov
iret
lahf
(bad)
pop
inc
lds
loopne
or
jg
inc
adc
ja
dec
inc
inc
xor
fiadd
adc
push
(bad)
sti
sub
inc
push
iret
mov
in
and
push
sub
mov
fdiv
jne
sbb
out
ror
mov
add
jl
adc
jns
sbb
pop
and
sar
sbb
sub
or
or
sti
outs
gs
sub
or
dec
jmp
add
idiv
sbb
in
into
dec
xor
fcomp
outs
fstp
or
push
pop
stc
aas
aas
outs
data16
jns
stos
xor
mov
adc
into
sub
cld
repz
pop
push
popf
jl
stc
cmp
and
icebp
retf
jne
and
xchg
mov
pop
cmp
dec
aad
add
push
and
mov
xchg
xor
loopne
pop
jb
scas
mov
push
push
mov
icebp
pop
inc
arpl
jle
mov
ror
adc
nop
dec
sbb
in
pop
les
out
adc
shl
ja
sti
es
or
xchg
sahf
mov
xor
mov
xor
dec
and
xchg
or
push
arpl
ins
sub
outs
repnz
add
xor
pop
inc
stos
bound
jnp
int
cli
int
cmc
aas
push
xor
jns
cmp
mov
sbb
std
sub
enter
mov
jg
out
cmp
daa
aas
outs
das
push
mov
mov
into
in
and
xor
fistp
repnz
jo
call
dec
aam
mul
(bad)
sub
dec
adc
cmps
in
xchg
adc
frstor
xchg
cmp
inc
jmp
pop
push
std
aad
jns
test
out
pop
out
push
add
mov
adc
out
xchg
jle
or
dec
loopne
xchg
mov
sbb
add
jecxz
inc
mov
pop
add
les
cld
dec
ret
lods
mov
aas
and
scas
retf
push
retf
mov
or
cli
retf
imul
inc
mov
sbb
sub
xor
jne
jmp
mov
sub
cmp
jge
(bad)
stc
aam
ins
xor
pop
popf
int3
adc
test
(bad)
enter
fmul
cwde
xchg
hlt
mov
pop
in
mov
mov
inc
jmp
rcr
sub
mov
test
fwait
add
push
loop
in
xor
(bad)
fisttp
or
sub
call
inc
aam
bound
scas
movs
push
mov
out
add
inc
xor
or
stc
xchg
pop
cmp
jmp
addr16
imul
xchg
pop
push
movs
pop
je
cmp
and
sub
rcr
aad
xchg
xchg
jecxz
aad
and
outs
dec
mov
xor
push
pop
(bad)
fdivr
loopne
mov
push
aam
jecxz
ins
mov
sbb
cld
push
push
dec
loop
dec
lods
pushf
(bad)
(bad)
mov
hlt
sub
push
jb
sbb
sub
dec
jg
pop
cmp
add
int
ins
sar
mov
movs
cmps
les
jmp
mov
les
mov
ret
push
add
jne
in
push
add
add
inc
or
mov
and
ins
mov
sub
je
ins
mov
dec
je
js
inc
into
or
sub
xor
fidiv
jnp
adc
xor
or
hlt
adc
les
dec
cmp
js
icebp
jo
ret
into
cmp
sbb
ret
push
retf
mov
ss
mov
inc
sbb
jge
or
push
das
xor
daa
(bad)
(bad)
mov
in
imul
push
cs
or
mul
fs
jno
jbe
ins
xchg
fwait
popf
outs
(bad)
dec
daa
push
cmp
jns
(bad)
jp
pusha
out
push
xor
movs
fild
in
out
dec
movs
mov
xchg
sbb
and
cmp
or
outs
imul
fild
loop
or
inc
cmp
inc
inc
mov
cmp
fmul
adc
enter
dec
sar
ss
and
cmp
jnp
(bad)
xlat
js
xchg
jmp
push
icebp
jg
test
mov
xor
xor
lods
shr
rol
push
(bad)
nop
pop
outs
lea
or
push
idiv
inc
rol
push
(bad)
rcr
stos
mov
(bad)
pop
out
xchg
dec
lock
push
imul
inc
call
int
mov
cmc
dec
in
in
je
jo
movs
jmp
pushf
inc
xchg
mov
sub
adc
mov
or
push
cli
clc
jp
aaa
in
jmp
push
fisubr
cmp
fist
push
jge
stc
dec
cmps
and
push
ins
test
jmp
xor
lods
scas
hlt
shl
das
mov
aaa
in
test
pop
lahf
mul
(bad)
sar
loope
mov
sbb
jge
xor
sbb
mov
clc
dec
cmp
push
ss
push
out
fisttp
dec
jne
gs
daa
or
pop
xchg
jge
std
in
dec
stos
mov
ror
movs
push
test
jp
push
adc
pop
das
mov
ret
mov
push
and
inc
or
mov
jmp
push
pop
sahf
call
mov
cmp
out
pop
retf
fdiv
pop
push
push
mov
sbb
stos
mov
movs
fiadd
stos
inc
inc
hlt
popf
loop
inc
xor
mov
cmp
je
xor
jle
jbe
pop
icebp
js
xchg
mov
sub
sbb
sbb
push
arpl
mov
leave
scas
dec
in
push
repnz
pop
dec
rcl
ds
es
add
and
ins
std
cmp
sub
sbb
pop
(bad)
scas
aad
jle
into
ret
(bad)
(bad)
xor
mov
jl
add
cmp
fstp
inc
or
xor
sub
jmp
xchg
test
xor
data16
inc
(bad)
pop
in
aaa
adc
fist
mov
ins
outs
mov
and
push
and
imul
or
(bad)
cmp
pop
int
add
out
nop
jecxz
mov
rcl
addr16
dec
or
jl
mov
sub
cmp
add
or
push
outs
fld
lods
xchg
pusha
jo
cmp
lds
xor
hlt
test
out
idiv
mov
jne
sub
adc
int3
mov
mov
lods
test
inc
xchg
rcr
fdiv
fisub
fwait
cmp
jne
(bad)
adc
scas
and
or
push
sbb
push
mov
jmp
stos
push
mov
push
(bad)
adc
pushf
out
(bad)
sahf
xor
dec
iret
mov
into
ret
test
hlt
jo
add
scas
xor
and
fistp
sub
lock
push
dec
cs
push
jns
lock
jno
adc
xor
xchg
int
ins
jmp
push
add
pop
sbb
push
repz
mov
mov
cmps
stos
adc
out
sbb
jnp
das
mov
cmc
jl
push
dec
cmp
cmps
xchg
les
cmp
jns
push
xchg
pop
xor
call
mov
or
or
inc
in
sahf
mov
into
mov
fmul
push
mov
cmp
popa
jmp
iret
xor
inc
daa
jb
in
sub
xchg
xor
test
mov
call
push
push
(bad)
push
ficom
lods
or
adc
push
and
mov
add
or
ret
(bad)
repz
ss
(bad)
leave
leave
leave
popa
mov
nop
cli
cmp
jo
sti
in
push
mov
sahf
cs
loope
cmp
or
loopne
inc
ret
fdivr
int
scas
pop
aas
fidiv
jmp
out
pop
adc
retf
ret
mov
mov
fnstcw
cmp
and
inc
test
pop
ret
fbld
rol
push
ret
mov
imul
les
add
xchg
loopne
lock
movs
sbb
ret
mov
das
or
or
imul
mov
sbb
adc
mov
aad
and
dec
add
ficomp
sbb
mov
(bad)
lahf
icebp
cld
mov
mov
and
fcmovb
cwde
ds
popa
jecxz
jbe
lea
out
ja
and
mov
jmp
cmp
pushf
ins
int3
sar
adc
test
mov
vsubss
add
mov
pop
inc
pop
mov
add
in
add
push
fcomp
out
and
jl
inc
imul
imul
mov
call
mov
cld
movs
std
sar
pushf
or
sbb
xchg
pop
lea
xchg
pop
jnp
jo
jne
sub
inc
arpl
xchg
pop
mov
xor
mov
out
ds
pop
stc
add
sub
pop
sahf
mov
mov
sub
scas
mov
in
mov
dec
call
pusha
sbb
mov
cli
jb
and
(bad)
std
call
and
mov
outs
stos
fidiv
repnz
pushf
out
jbe
addr16
xlat
push
(bad)
jle
cwde
dec
xor
sti
loope
pop
xlat
neg
loopne
push
pushf
mov
pop
push
outs
jbe
sub
in
lds
pop
in
xchg
ret
aas
mov
mov
pop
inc
inc
call
mov
imul
sub
push
xor
xchg
leave
cmp
pushf
test
(bad)
mov
or
pop
jnp
scas
jp
xchg
retf
fsub
sbb
fld
lods
(bad)
test
inc
pop
repnz
arpl
loope
jb
mov
push
mov
xchg
jmp
dec
into
xchg
addr16
repnz
and
inc
(bad)
ret
movs
ins
push
xor
mov
in
das
jge
and
sahf
sbb
inc
jno
pop
jg
push
in
push
mov
pop
sar
sub
scas
mov
das
inc
pushf
retf
add
stc
cmps
enter
int
aad
add
pushf
pop
or
inc
ins
sbb
test
es
fcmovnb
ret
jno
sbb
enter
jp
xchg
mov
xchg
xor
lahf
iret
sahf
rol
inc
(bad)
stc
adc
inc
jne
fld
aaa
cwde
adc
dec
cmp
aaa
mov
bound
mov
iret
out
cwde
(bad)
adc
add
cwde
test
rol
dec
adc
xchg
aam
fnsave
cs
lods
lds
jb
sahf
out
sub
mov
xchg
xor
je
mov
and
xchg
cwde
fisub
aaa
dec
pop
retf
mov
fs
add
sub
cdq
mov
xchg
jl
iret
fimul
pop
pop
jno
jl
mov
jl
push
dec
stc
xchg
(bad)
jmp
or
mov
das
xchg
hlt
(bad)
sbb
dec
in
add
push
movs
pushf
cmp
and
and
test
gs
addr16
arpl
pop
not
xchg
repnz
lahf
pop
stos
adc
cmp
scas
cmp
jecxz
mov
push
cmc
ficom
xor
or
mov
test
mov
cmps
enter
xchg
call
inc
cmp
test
sti
jno
inc
lods
cmp
out
enter
adc
cmp
sbb
or
xor
in
aas
push
mov
rcl
ds
and
in
imul
xor
inc
pop
inc
mov
mov
loopne
jb
adc
mov
xor
jae
dec
or
repz
jnp
leave
loopne
repnz
push
push
and
jb
mov
or
mov
xchg
call
leave
pop
push
xor
dec
push
lahf
call
test
mov
mov
loopne
or
mov
out
push
hlt
(bad)
push
jns
out
pusha
cmp
xchg
jns
jge
out
aaa
cmp
add
dec
jg
mov
movs
mov
push
mov
sbb
push
adc
test
cli
sahf
adc
and
cmp
push
retf
imul
xchg
fld
cmp
(bad)
lock
call
jge
xchg
inc
dec
movs
mov
dec
fdiv
fcmovnb
nop
push
and
mov
idiv
sub
cli
jecxz
sub
call
(bad)
xchg
ja
sub
lahf
jg
stc
out
jg
stc
out
xor
sub
adc
add
add
dec
inc
scas
inc
pusha
or
add
add
add
(bad)
(bad)
inc
add
add
add
add
add
add
jns
je
ins
cs
jb
ja
outs
addr16
push
gs
imul
xor
xor
inc
jne
je
jb
cmp
jb
ins
sub
push
jne
ins
imul
imul
bound
xor
data16
xor
fs
add
adc
gs
cs
jb
ja
outs
addr16
imul
add
popa
je
pop
add
add
add
add
add
lsl
add
rcl
add
mov
inc
or
add
or
add
add
add
add
or
add
add
pusha
outs
rol
add
add
inc
dec
inc
add
mov
or
popa
add
jo
pop
jae
add
ret
add
push
ret
add
outs
test
add
adc
inc
inc
push
pop
inc
in
rol
loopne
aam
fstp
cmps
mov
out
sbb
cwde
pushf
cmp
pop
ret
popf
out
cwde
scas
jmp
sahf
pop
add
sti
in
add
jl
fimul
or
jb
jns
cmp
jecxz
push
cmp
sub
dec
xchg
mov
pop
pop
mov
stos
std
(bad)
stos
jp
xchg
lahf
mov
xlat
lea
ins
push
scas
inc
mov
jp
iret
jmp
pop
and
jge
and
inc
in
xchg
fdivr
mov
sbb
inc
cmp
stc
test
repnz
pop
mov
cmp
int3
repnz
jmp
or
mov
sbb
dec
mov
dec
pop
or
xchg
mov
add
or
movs
push
mov
and
int3
push
movs
jle
jno
out
cwde
sub
jmp
adc
cmp
iret
adc
mov
call
cdq
daa
xor
xlat
repnz
in
cmp
push
mov
cmp
sub
push
xchg
add
pop
push
sbb
mov
lds
jmp
out
loopne
outs
dec
shr
ja
inc
mov
or
jb
pop
sbb
cmps
xor
inc
sub
call
and
in
fcmovnu
add
and
mov
inc
push
dec
push
cmp
xor
mov
movs
mov
cmp
enter
lea
dec
pusha
enter
push
cmps
ss
imul
adc
push
pop
sbb
xchg
push
aaa
xchg
pushf
sti
les
sbb
inc
cs
scas
mov
jno
mov
and
sub
cmp
pop
mov
cli
(bad)
mov
sbb
cmp
pop
mov
xchg
push
dec
or
dec
repnz
jno
fadd
rol
jnp
outs
jbe
pusha
xor
in
stc
mov
push
out
pop
out
push
push
sbb
or
arpl
or
data16
push
pop
inc
(bad)
pop
push
pop
ja
ss
loop
jmp
pop
out
add
push
sbb
(bad)
jp
xor
sub
pop
(bad)
(bad)
je
pop
inc
xor
outs
inc
pop
push
inc
xor
adc
(bad)
shl
xor
inc
iret
or
aaa
arpl
out
ins
imul
popf
iret
out
into
hlt
pop
and
jae
imul
and
loop
xchg
pop
mov
push
dec
clc
dec
cmp
adc
test
out
xor
mov
pop
push
mov
jp
add
push
ret
fiadd
cmps
or
xlat
outs
ret
out
(bad)
out
add
push
jo
rcr
inc
(bad)
pextrw
(bad)
(bad)
jmp
sar
les
jne
ins
mov
(bad)
push
mov
and
sub
bound
mov
jno
push
and
add
mov
jno
mov
loope
stos
outs
xchg
xlat
das
int
out
adc
mov
xchg
inc
or
pop
sbb
xor
cld
sbb
dec
mov
ficom
and
push
stos
test
adc
or
dec
mov
jle
sbb
test
dec
xchg
add
add
fs
jge
retf
mov
fld
jl
inc
fist
sbb
cmp
call
lds
and
jecxz
sub
mov
fstp
mov
loop
clc
rcl
adc
cmp
inc
jmp
cli
cmc
cmps
repnz
nop
repnz
or
loop
icebp
fstp
jle
gs
stos
push
rep
jp
leave
retf
ficom
jnp
xor
les
js
aaa
iret
fs
jb
or
imul
into
clc
jp
push
int3
or
inc
sbb
sbb
mov
dec
adc
jmp
xor
mov
sbb
add
jmp
mov
out
jne
mov
out
jmp
dec
mov
jecxz
xchg
retf
cmps
adc
push
xchg
mov
test
inc
pushf
fidivr
je
push
aad
fisttp
leave
sub
push
fbld
rep
mov
cs
movs
fs
ja
das
repz
push
push
js
sub
fcomp
xor
jbe
(bad)
hlt
cmps
push
and
loope
jl
outs
cmc
jns
or
push
inc
(bad)
in
pop
jbe
add
inc
call
loope
and
rol
mov
int3
or
in
std
xor
xchg
xchg
inc
(bad)
jae
lods
loope
mov
dec
loopne
and
sysret
push
mov
mov
int3
mov
and
mov
rcr
(bad)
out
cs
adc
loop
lods
in
repnz
fwait
(bad)
pop
inc
jmp
call
mov
imul
and
icebp
mov
sub
mov
mov
mov
nop
clc
popa
or
ds
jp
repz
shl
mov
arpl
popf
mov
xlat
jae
rol
fisubr
pop
inc
test
enter
inc
(bad)
or
jmp
movs
mov
mov
mov
mov
aam
push
fcomi
or
push
imul
xor
jne
adc
shl
mov
retf
xor
or
je
neg
aam
and
xor
jg
cmc
jmp
cmp
data16
jg
cmp
pop
dec
cld
or
sbb
sbb
lods
add
repnz
cmp
out
jne
jbe
pop
pop
test
mov
sub
imul
cs
jg
in
pop
push
iret
call
call
movs
bound
nop
mov
stos
loope
xor
jge
mov
xor
fucomp
jns
xchg
and
cmps
inc
mov
out
jl
aas
mov
jle
stos
mov
outs
movs
or
sub
pop
mov
inc
mov
fsubp
arpl
inc
mov
adc
rcr
sub
ds
sbb
inc
out
adc
test
dec
cs
add
cmp
das
cs
in
adc
call
aas
dec
(bad)
std
cdq
mov
outs
adc
(bad)
(bad)
stc
cli
es
sahf
mov
mov
hlt
pop
dec
mov
dec
xor
sbb
add
push
ins
shr
aad
mov
clc
repnz
cmp
pop
inc
sub
out
dec
jp
xor
add
mov
fisub
(bad)
cmc
cmp
stos
loopne
jne
mov
ins
shr
sbb
cmp
jg
sub
pop
pop
lock
xor
(bad)
jno
mov
icebp
cmps
push
out
gs
jnp
(bad)
imul
not
jno
idiv
aas
mov
sbb
jb
fstp
aas
ins
test
sbb
add
dec
adc
(bad)
cmps
repz
repz
push
stc
(bad)
dec
test
pop
lds
pop
mov
clc
int
push
and
mov
rcl
pop
stos
stos
mov
or
mov
xchg
mov
add
add
movs
fstp
jg
imul
mov
addr16
sub
setnp
int
dec
bound
xchg
stc
pushf
or
cmc
mov
movs
inc
cli
xchg
int
or
mov
cmps
into
lods
clflush
test
pop
and
(bad)
sub
sub
inc
dec
dec
pushf
scas
mov
and
jl
jge
and
fsubr
push
pop
xchg
repz
adc
in
sbb
add
pop
xchg
adc
js
sbb
pop
sbb
shr
in
jmp
push
or
mov
fnsave
add
fs
and
xchg
dec
fwait
mov
and
add
cmps
mov
cwde
mov
loopne
sub
out
outs
stos
sbb
cmp
cmp
cmp
xchg
sbb
shl
mov
push
es
adc
pop
(bad)
xor
mov
push
adc
leave
adc
sbb
adc
cmc
je
inc
push
ins
out
xor
inc
(bad)
in
push
daa
jo
push
mov
cwde
lea
pop
pop
test
inc
int3
loopne
push
test
mov
test
dec
pusha
pop
and
outs
dec
jbe
std
push
push
pop
mov
cmp
inc
fdivr
test
lock
fsubr
dec
int
pop
and
ins
fiadd
leave
in
pop
hlt
push
push
test
nop
mov
xchg
out
mov
adc
iret
jle
xchg
pop
fstp
and
(bad)
(bad)
push
adc
icebp
leave
int3
repnz
and
ja
ins
dec
xor
es
outs
xchg
mov
xchg
sub
popa
jp
punpckldq
or
add
mov
dec
inc
mov
jb
sub
enter
out
inc
dec
out
inc
pop
xor
xchg
es
inc
add
mov
cli
fcomp
test
jo
pop
call
dec
mov
mov
das
out
cmp
jge
cmp
dec
add
jge
movs
aaa
jmp
dec
cld
je
outs
push
xor
test
mov
mov
xor
add
cmc
mov
adc
in
add
xor
mov
outs
adc
mov
in
mov
inc
test
adc
jo
mov
(bad)
lahf
dec
stos
jp
push
pushf
loopne
loop
push
rcl
push
ss
xchg
movs
cmp
sub
pusha
and
jl
cwde
push
dec
inc
stos
dec
clc
mov
xor
sub
stc
movs
mov
dec
or
imul
or
es
and
popa
lock
iret
cmp
xor
cld
cmps
aaa
dec
mov
or
arpl
mov
je
(bad)
inc
jl
pop
pop
gs
icebp
lahf
ins
pop
out
aas
into
fxch
stc
test
add
jle
sti
cmps
xchg
mov
push
mov
ja
rol
shr
ror
inc
loop
cmp
(bad)
mov
mov
addr16
jge
jle
xchg
jnp
sahf
fiadd
sbb
dec
jg
xchg
mov
or
(bad)
fst
push
outs
mov
imul
xchg
or
xor
pop
es
lods
jl
xor
inc
mov
fs
pop
dec
sbb
loop
inc
xchg
or
fidivr
pop
pop
cmp
jp
mov
inc
nop
inc
push
sub
dec
aad
cs
xchg
xor
adc
in
cmp
add
sbb
add
mov
jns
jle
ss
fisttp
push
pop
mov
push
inc
mov
cmc
xchg
cmps
inc
sub
mov
(bad)
dec
cdq
loop
clc
push
push
(bad)
fstp
xchg
mov
inc
inc
hlt
dec
dec
gs
and
cmps
into
pop
loop
fwait
(bad)
jo
cld
mov
push
xchg
sub
mov
mov
adc
push
and
xor
sbb
int
int
jmp
mov
cli
lods
mov
dec
jae
lds
pop
sbb
mov
outs
jmp
popf
jae
pop
add
inc
leave
stos
pop
mov
test
stc
mov
mov
repnz
(bad)
mov
adc
or
scas
cmc
or
cmp
imul
sub
push
and
data16
jns
jbe
neg
mov
jge
iret
sub
xchg
sbb
mov
fist
stos
add
lds
gs
or
imul
pop
sub
(bad)
ret
push
(bad)
shl
loop
cli
in
mov
jmp
ret
gs
pop
sbb
inc
push
(bad)
cmp
(bad)
or
hlt
jns
fdivr
mov
push
jmp
xor
cmp
les
sub
push
aam
js
call
(bad)
cld
movs
pop
int3
rcl
stos
repnz
cdq
and
popf
cdq
mov
push
cmps
inc
and
addr16
jle
lods
(bad)
lea
(bad)
iret
retf
outs
sahf
rcl
out
xor
adc
cmp
mov
sbb
push
retf
add
or
repz
sub
(bad)
sti
in
dec
mov
xchg
mov
and
push
retf
jp
cmps
mov
dec
pop
sti
sub
jo
add
loope
fadd
xchg
sub
mov
lds
and
in
shl
loop
jne
into
lea
pop
xor
out
jge
aas
ffree
adc
pop
jne
fild
mov
push
outs
loope
lods
add
outs
out
or
mov
cwde
mov
mov
pop
add
inc
enter
(bad)
in
mov
push
aaa
retf
cmps
sar
xchg
push
and
int
jb
or
sbb
pop
retf
jo
push
repnz
dec
xor
hlt
dec
ds
adc
mov
ficomp
mov
stos
ror
mov
cmp
and
pusha
adc
stc
(bad)
and
cdq
xchg
mov
arpl
push
iret
outs
pop
mov
pop
pop
push
push
call
nop
xor
jle
loop
xchg
int
call
mov
mov
pop
in
dec
shl
fiadd
cmp
pop
adc
inc
imul
stos
mov
repnz
sbb
push
loope
sbb
xchg
das
cmc
mov
fistp
inc
xchg
ins
cld
add
cdq
mov
daa
sahf
int3
gs
cmps
popa
aaa
int3
add
cmp
(bad)
repz
das
sbb
std
sbb
call
outs
cmps
push
popf
mov
les
mov
sti
adc
cld
test
lds
leave
xor
mov
arpl
nop
call
and
loopne
jmp
dec
add
mov
ins
jmp
jnp
dec
stos
xlat
sbb
mov
movs
sub
ja
daa
pop
inc
and
sub
jp
outs
clc
mov
out
call
mov
fsubr
push
fs
out
xchg
lods
dec
scas
(bad)
lods
xchg
mov
enter
std
inc
shl
push
jo
push
fmul
push
jnp
arpl
mov
div
sub
jnp
inc
adc
sub
and
enter
leave
daa
push
data16
inc
mul
mov
movs
repnz
pop
cdq
jge
aas
mov
popa
and
mov
inc
loop
push
popf
cmp
(bad)
jnp
inc
loop
mov
and
into
(bad)
enter
mov
or
jmp
push
xor
sub
retf
mov
add
inc
in
mov
mov
ja
adc
xchg
add
inc
adc
mov
stos
add
popf
sub
pop
fsub
xchg
inc
sub
movs
out
sar
pop
fist
retf
sub
sub
cld
bound
xchg
mov
inc
jle
das
mov
fcmove
retf
lock
and
sbb
rcl
xor
rol
and
rcr
(bad)
hlt
mov
stos
cmp
lock
sub
aad
imul
lds
pop
inc
retf
cwde
ror
ins
dec
jbe
cmc
fsub
ds
cmc
adc
mov
(bad)
(bad)
xchg
add
push
cmps
jo
outs
outs
imul
das
jno
out
scas
xor
cmc
in
rcl
mov
leave
push
je
bound
cmp
aas
ins
jno
dec
dec
sub
jae
jmp
xor
ret
jns
das
pop
iret
test
retf
add
leave
je
mov
push
sub
rcl
ins
and
imul
(bad)
fst
ret
jb
cmp
into
inc
mov
mov
cmp
nop
bound
mov
int
mov
cmp
ffreep
cdq
(bad)
es
test
fimul
xchg
sbb
(bad)
push
imul
inc
(bad)
xchg
mov
sub
jns
mov
inc
sub
adc
cmp
sub
(bad)
dec
jecxz
fcom
arpl
(bad)
stos
sub
pop
sbb
dec
jecxz
retf
je
in
mov
jg
or
push
iret
mov
mov
jmp
mov
jnp
aaa
cmp
aas
movs
call
cdq
je
(bad)
stc
out
jg
stc
out
jg
scas
add
inc
aam
jmp
add
add
dec
inc
scas
inc
pusha
or
add
add
add
(bad)
(bad)
inc
add
add
add
add
add
add
jns
je
ins
cs
jb
ja
outs
addr16
push
gs
imul
xor
xor
inc
jne
je
jb
cmp
jb
ins
sub
push
jne
ins
imul
imul
bound
xor
data16
xor
fs
add
adc
gs
cs
jb
ja
outs
addr16
imul
add
popa
je
pop
add
add
add
add
add
lsl
add
rcl
add
mov
inc
or
add
or
add
add
add
add
or
add
add
pusha
outs
rol
add
add
inc
dec
inc
add
mov
or
popa
add
jo
pop
jae
add
ret
add
push
ret
add
outs
test
add
adc
inc
inc
push
pop
inc
in
(bad)
test
or
jmp
outs
push
push
xchg
or
jmp
inc
nop
mov
xor
rcl
sbb
jecxz
adc
pop
add
ret
daa
add
imul
clc
movs
data16
inc
xlat
push
pop
nop
gs
leave
push
(bad)
movs
lahf
pop
(bad)
and
mov
ss
arpl
sti
pop
sar
fwait
jecxz
adc
adc
cmp
leave
retf
cmp
popf
push
lea
dec
add
mov
and
jecxz
or
inc
pop
adc
mov
adc
inc
adc
sbb
cs
aad
sbb
ret
add
fstp
cmp
scas
dec
sbb
mov
aaa
scas
mov
sub
jnp
test
mov
mov
pop
mov
cmp
fidivr
pop
mov
push
(bad)
sub
and
sub
push
(bad)
adc
int
repz
in
jmp
push
(bad)
adc
(bad)
xchg
sbb
add
imul
(bad)
mov
xchg
cmp
adc
cmps
pop
out
mov
lock
xor
xlat
and
mov
adc
and
mov
inc
dec
push
call
push
xchg
cs
jmp
jo
movs
stos
js
xchg
imul
jp
xchg
repnz
jge
loopne
adc
sub
cmp
jne
jmp
aas
jb
sub
sar
add
inc
adc
fcmovb
xlat
clc
ja
or
retf
jmp
push
push
popf
xor
scas
lea
pop
fbstp
pop
or
mov
sub
dec
mov
fwait
mov
test
mov
lods
add
(bad)
inc
mov
(bad)
mov
ror
xor
mov
test
out
and
int3
ds
(bad)
out
jmp
jnp
loop
popa
pop
sbb
aaa
popf
data16
sbb
cwde
js
xchg
mov
mov
(bad)
fld
imul
xchg
daa
loopne
sbb
mov
push
mov
stos
cli
push
leave
in
cmp
xor
push
adc
xchg
dec
sub
pop
pop
xchg
mov
push
cmp
push
or
std
aad
mov
scas
push
add
inc
pop
sub
xor
fs
push
jl
sub
sub
or
loope
scas
cdq
popa
retf
push
test
sub
(bad)
movs
push
addr16
mov
pusha
mov
enter
imul
cs
mov
push
xor
int
inc
ins
hlt
lea
dec
int
sbb
push
xchg
jns
adc
jmp
mov
fdiv
jp
inc
mov
cmp
out
test
xor
mov
call
cs
popa
pop
inc
adc
cmp
cdq
dec
sbb
fmul
adc
test
int3
(bad)
test
mov
out
sbb
das
jle
mov
cmps
(bad)
cmp
cli
xchg
pop
xlat
es
mov
int3
in
test
mov
in
je
adc
push
xlat
pop
js
jbe
jmp
(bad)
lock
cmp
outs
sar
pusha
pcmpeqd
dec
push
stc
ret
retf
aaa
js
cmp
test
mov
fnsave
popa
xor
out
cmp
test
jne
pop
fstp
icebp
(bad)
xchg
push
add
and
test
jbe
iret
mov
or
into
inc
(bad)
adc
xor
jp
jnp
pop
inc
xchg
jge
in
arpl
cmp
test
in
idiv
inc
and
pushf
push
dec
jle
push
cli
jbe
cs
stc
xor
sub
lods
(bad)
bound
add
push
mov
into
jno
aad
out
js
lds
and
mov
adc
call
xchg
pushf
cli
adc
sbb
aaa
hlt
call
and
jp
mov
sub
add
jns
push
and
mov
aad
iret
fs
pop
in
call
stos
ror
mov
and
jae
gs
mov
outs
mov
mov
ins
jne
jno
enter
ss
push
imul
jbe
outs
sub
loopne
je
pop
jge
in
out
xchg
pop
pop
or
loope
stos
test
and
retf
mov
pushf
test
and
add
push
imul
cmp
add
cld
(bad)
xor
daa
xchg
xchg
bswap
pop
sub
ss
dec
mov
aam
pop
lods
xchg
mov
stos
movs
push
mov
adc
je
xor
push
stos
mov
ins
dec
fst
neg
fld
pop
or
iret
push
cld
cmps
lods
shr
jmp
loop
xor
mov
dec
iret
fcmovb
loop
push
lock
ins
test
das
neg
mov
retf
mov
jle
fidiv
pop
push
xchg
js
fiadd
push
sbb
rol
stc
aam
jbe
loop
dec
jns
mov
ror
out
stc
or
xor
inc
(bad)
cld
je
xor
inc
in
xor
and
aam
aas
jno
jno
test
ret
adc
add
dec
out
in
outs
add
xor
mov
pop
jne
or
stc
lods
xor
imul
xor
jl
aaa
xchg
inc
xchg
mov
test
dec
dec
cdq
sub
push
dec
pop
pop
pop
mov
dec
inc
clc
mov
stc
addr16
ins
xchg
pop
sbb
push
outs
inc
and
xor
xor
pop
scas
pop
and
xchg
lods
adc
xchg
aas
mov
cmps
adc
jb
mov
push
enter
call
mov
(bad)
fst
cmp
outs
pop
nop
mov
add
in
outs
stos
int
dec
pop
dec
push
pop
imul
jns
sub
ds
cmc
movs
fucomp
mov
movs
bound
mov
idiv
in
push
lock
cmp
(bad)
mov
repnz
pop
pop
mov
mov
sub
fsubr
rcl
jl
mov
int3
push
push
cmp
sbb
popf
test
dec
dec
jl
push
jmp
adc
ins
mov
iret
mov
in
xor
fstp
cmc
jno
aam
dec
push
adc
mov
dec
repnz
arpl
lahf
(bad)
xlat
jmp
(bad)
stos
(bad)
cmps
mov
xor
add
xor
push
pop
loop
jmp
aaa
mov
jmp
push
mov
(bad)
lds
mov
loopne
push
pop
dec
aad
sub
nop
movzx
push
cmp
xor
mov
(bad)
sbb
(bad)
mov
sahf
shl
and
sbb
fdivr
cmp
mov
jns
fild
lea
repz
inc
xor
sbb
adc
xchg
adc
cmp
popf
fyl2xp1
jbe
mov
movs
repnz
push
mov
and
or
xchg
fnstcw
retf
jbe
out
and
cmp
adc
out
inc
push
inc
stos
mov
sub
push
js
test
stos
mov
xlat
mov
ret
xor
leave
xchg
sahf
ja
mov
mov
or
mov
sbb
fwait
leave
pop
and
add
or
push
mov
mov
sti
sub
hlt
push
inc
mov
dec
cmp
or
or
lods
sbb
aaa
cmp
inc
add
jno
add
inc
mov
dec
push
xchg
movs
adc
fcomp
mov
cs
lods
cmp
out
outs
mov
mov
mov
rcr
outs
loopne
jb
mov
xchg
and
cs
mov
push
pop
not
test
and
cmp
jno
add
mov
fwait
mov
mov
les
pop
ret
fnsave
js
jmp
adc
or
jae
and
xor
sbb
cs
pop
mov
lods
sahf
cmp
ds
lahf
mov
retf
fwait
scas
jle
and
sub
inc
dec
cli
xchg
xchg
mov
pushf
ja
test
mov
cld
jnp
push
sahf
daa
icebp
aas
in
cli
iret
jo
rcr
(bad)
sti
enter
xor
adc
arpl
shl
mov
inc
dec
jb
mov
in
add
mov
ret
mov
cmp
jno
cdq
scas
lock
out
dec
(bad)
jmp
inc
mov
jp
data16
add
scas
ja
or
pop
movs
outs
fstp
xlat
in
aad
sub
add
inc
pop
cmp
mov
push
and
mov
sbb
out
ja
dec
scas
xlat
xor
fcomp
push
xchg
stos
dec
out
sub
push
xor
mov
xchg
movs
ret
pop
lods
cmp
pop
test
ficom
add
mov
(bad)
test
inc
mov
pop
dec
fiadd
adc
pop
sub
shl
stos
sbb
mov
enter
sbb
in
iret
(bad)
imul
es
enter
xchg
inc
int3
fxtract
inc
mov
fidivr
(bad)
gs
in
mov
jp
inc
jo
pop
sbb
bound
inc
push
ret
and
push
mov
jle
sub
xchg
jl
aam
es
jg
mov
xchg
inc
addr16
mov
adc
test
loopne
dec
dec
xchg
cmc
xchg
jnp
frstor
ins
mov
pop
sub
popw
sub
mov
push
pop
inc
(bad)
or
ins
jbe
test
cdq
mov
inc
js
mov
je
cmp
fnstcw
ins
popf
dec
mov
hlt
data16
fcom
sub
shr
inc
jns
pop
scas
outs
out
sbb
cs
and
dec
xlat
sahf
xchg
push
pop
push
sbb
dec
add
dec
dec
adc
xchg
imul
fimul
mov
daa
std
das
leave
mov
test
and
(bad)
leave
pushf
pop
push
mov
cmp
mov
popa
lahf
dec
ret
scas
sub
aaa
adc
adc
out
retf
(bad)
cmp
sbb
push
or
sub
rcl
or
clc
shl
(bad)
jg
adc
(bad)
rcr
and
pop
lock
mov
ror
lea
je
inc
sub
gs
lahf
push
dec
pop
dec
popf
mov
dec
es
sub
adc
das
push
adc
out
les
(bad)
cdq
push
(bad)
push
and
div
cmps
pop
sti
or
(bad)
in
pop
and
and
(bad)
mov
(bad)
lock
jl
in
fisub
and
(bad)
inc
out
out
retf
push
mov
jecxz
clc
popw
(bad)
(bad)
nop
dec
mov
lods
push
adc
repz
inc
dec
sbb
repz
ret
mov
inc
in
cmps
(bad)
leave
call
lods
call
mov
mov
int
sahf
mov
mov
push
jmp
lock
sbb
ffreep
pop
cwde
lahf
cmp
(bad)
data16
rol
out
out
xor
pop
mov
call
xchg
fld
(bad)
jecxz
and
ret
shl
inc
ds
pop
pop
add
push
cmps
fist
out
sbb
pop
(bad)
mov
mov
cld
sub
mov
and
sub
sbb
jns
vcvtdq2ps
lods
fdivr
mov
sar
mov
sbb
popf
enter
loope
mov
and
jo
xor
cmp
int3
ret
xchg
cmp
repnz
jp
pop
dec
sbb
mov
lds
sbb
pop
jl
adc
lea
(bad)
mov
retf
(bad)
mov
push
fcmovnbe
mov
mov
pop
and
mov
das
cmp
inc
pop
cmp
add
push
(bad)
sbb
inc
ror
loop
lods
lods
(bad)
loopne
add
movs
das
ds
mov
and
lahf
adc
test
xchg
sub
cs
push
xchg
or
mov
add
pop
xor
push
and
xor
sub
lahf
push
cmp
out
add
push
dec
dec
fwait
test
adc
lods
inc
pop
bnd
daa
ror
int3
sbb
mov
imul
int3
sub
push
in
xor
pop
mov
xchg
jb
stc
and
xchg
jmp
mov
push
inc
scas
fld
mov
sbb
xchg
sub
xchg
and
sti
or
loope
icebp
popa
add
sbb
jle
mov
jg
mov
test
and
arpl
xchg
cmp
jp
sub
mov
mov
adc
jne
mov
add
clc
jmp
(bad)
cmp
call
fcmovne
add
xchg
call
mov
mov
pop
test
xchg
jns
in
out
xchg
std
pusha
cmp
mov
cmps
sub
popf
cmc
mov
and
cmps
in
(bad)
sahf
push
jle
fmulp
cs
mov
jno
test
(bad)
dec
out
mov
jae
push
lea
bound
inc
push
jge
push
jae
shr
cmp
or
and
movs
pop
xchg
sbb
jmp
xchg
fcomp
mov
xchg
mov
stos
fadd
rol
and
push
dec
adc
cmp
inc
stos
lea
cmp
inc
imul
hlt
popa
dec
rcr
xor
mov
loop
leave
push
bnd
fxch
add
ins
leave
out
add
jge
push
(bad)
mov
cmps
out
cmp
scas
xor
jae
(bad)
mov
retf
sbb
and
and
dec
cmp
mov
(bad)
daa
jg
dec
and
add
mov
sub
rcl
jmp
fadd
loop
pop
clc
adc
movs
pop
jg
retf
xchg
adc
jle
test
clc
add
push
mov
xor
xchg
jae
cs
shl
out
jecxz
dec
mov
fs
and
test
rcl
push
std
xchg
(bad)
rcl
mov
into
(bad)
jle
mov
xchg
sti
inc
pop
inc
cmps
fmul
dec
(bad)
mov
sbb
xchg
iret
and
push
mov
inc
jmp
sar
retf
pop
test
idiv
pop
lods
mov
sbb
scas
push
inc
or
ja
sbb
xor
push
cmp
cmps
lods
jmp
sub
fnstenv
jge
jo
xchg
shr
dec
add
jmp
xlat
rcl
jmp
inc
outs
push
or
imul
and
cmps
ins
sar
loop
mov
std
push
mov
and
int3
and
in
inc
cmp
pusha
sub
mov
dec
jo
inc
inc
add
stos
fs
loope
mov
jmp
hlt
mov
jmp
mov
out
in
scas
icebp
adc
inc
(bad)
sbb
aad
fstp
add
add
lahf
stos
adc
jns
mov
jge
or
cs
push
jno
mov
xor
push
stos
sbb
inc
sub
shr
(bad)
xchg
push
push
retf
repnz
outs
movs
std
mov
jg
repz
jg
mov
mov
push
push
loope
inc
jp
test
push
aad
push
lods
ret
mov
xlat
pop
js
jnp
inc
(bad)
mov
mov
adc
xor
push
jo
out
pop
and
out
test
pop
xchg
sbb
arpl
out
in
mov
mov
rep
shl
pusha
je
pop
xchg
mov
mov
or
popf
retf
sub
aam
xchg
rcl
fimul
jp
arpl
sbb
sbb
inc
dec
sar
lea
dec
fcos
jb
in
jo
lea
ins
sub
sub
xor
leave
fild
retf
pop
ror
pop
jns
mov
mov
loop
out
adc
scas
inc
test
aas
iret
fdiv
dec
int3
mov
xor
cmps
mov
in
ret
jmp
retf
je
xlat
pushf
fadd
xor
bound
xchg
sub
(bad)
jns
mov
(bad)
xor
xor
xlat
shr
leave
outs
xchg
out
neg
mov
mov
jo
and
(bad)
scas
aaa
arpl
push
and
add
cld
repz
aas
(bad)
cld
repz
aas
jmp
sti
add
shr
pop
jo
add
add
dec
inc
scas
inc
pusha
or
add
add
add
(bad)
(bad)
inc
add
add
add
add
add
add
jns
je
ins
cs
jb
ja
outs
addr16
push
gs
imul
xor
xor
inc
jne
je
jb
cmp
jb
ins
sub
push
jne
ins
imul
imul
bound
xor
data16
xor
fs
add
adc
gs
cs
jb
ja
outs
addr16
imul
add
popa
je
pop
add
add
add
add
add
lsl
add
lds
add
add
or
or
add
or
add
add
add
add
or
add
add
pusha
outs
rol
add
add
inc
dec
inc
add
mov
or
popa
add
jo
pop
jae
add
ret
add
push
ret
add
outs
test
add
adc
inc
inc
push
pop
inc
in
(bad)
cmc
aas
fisttp
outs
cmps
cmps
mov
mov
scas
xor
cmp
xlat
xor
dec
ja
xor
pop
adc
mov
pop
fistp
jns
add
push
sub
mov
loopne
bound
enter
test
data16
cmps
(bad)
jmp
in
sub
nop
adc
fwait
retf
pop
jge
div
sub
sbb
add
stc
and
add
and
xchg
sbb
jno
push
jl
bnd
inc
inc
adc
ror
inc
jo
stc
call
xor
movs
or
leave
(bad)
fstp
sbb
nop
sbb
mov
sub
mov
(bad)
pop
scas
fist
xor
loop
push
loop
div
(bad)
addr16
stc
xchg
push
cmc
in
jl
cmps
jno
or
lods
into
jno
int
out
iret
clc
in
mov
adc
adc
data16
push
imul
mov
(bad)
faddp
daa
mov
test
mov
nop
stos
aas
fwait
sub
dec
cmp
or
cmp
mov
mov
adc
mov
and
jg
ins
mov
xor
xchg
popa
mov
xor
int
cld
mov
cdq
sub
fadd
push
test
jp
arpl
adc
add
xchg
ins
(bad)
xchg
jl
mov
pushf
jo
mov
and
sub
cmc
push
adc
repnz
scas
mov
out
adc
ret
xchg
fiadd
pop
dec
xor
and
push
aad
sahf
or
ret
sbb
test
dec
sub
add
fcomp
bound
ins
nop
aam
or
aam
cdq
xchg
inc
adc
ja
mov
mov
ret
xor
adc
js
xlat
cmp
int
out
bound
push
mov
mov
xchg
into
int3
stos
fst
imul
push
add
test
pop
sbb
mov
xor
popf
xchg
sbb
fld
sub
dec
ja
and
lea
dec
jmp
mov
inc
mov
or
mov
aas
cmp
fwait
xor
xor
in
test
es
jb
pushf
mov
push
and
sbb
inc
arpl
pop
daa
pop
cmp
xchg
ins
loop
ins
push
and
(bad)
loopne
or
push
ja
mov
(bad)
mov
add
mov
stos
stos
dec
mov
ret
push
pop
idiv
and
xlat
iret
cmp
(bad)
and
push
xchg
xor
aaa
xor
xchg
dec
jle
jns
fst
sbb
in
std
mov
in
cmp
(bad)
lock
jns
sbb
and
icebp
pop
aam
test
jmp
dec
sar
test
xchg
sbb
and
sub
mov
cwde
or
ret
imul
ins
mov
daa
aas
ss
sbb
push
(bad)
enter
lahf
pop
push
xor
stos
les
jns
adc
addr16
xchg
stc
hlt
sbb
stos
out
inc
and
and
inc
jnp
psrad
xor
dec
mov
fisttp
and
sub
add
fidiv
jae
and
test
push
mov
stc
imul
inc
xchg
sbb
hlt
xor
ficom
and
dec
push
(bad)
pop
xchg
xchg
and
dec
sbb
sub
mov
inc
es
cmp
sti
adc
ss
inc
fwait
es
xchg
lock
add
push
mov
enter
jnp
ins
pop
mov
jne
inc
or
fwait
jmp
pop
mov
adc
push
jb
enter
pop
mov
mov
jne
jmp
jecxz
pushf
jmp
push
xor
ror
ins
xchg
mov
mov
jle
mov
mov
mov
mov
cmp
jo
mov
in
(bad)
lock
mov
cdq
sub
sbb
pop
push
mov
frstor
shl
jbe
stos
ret
fst
cmps
jne
lock
jle
cmp
mov
pop
mov
repz
movs
mov
push
aad
jecxz
dec
xchg
cmp
and
call
mov
mov
push
lods
xlat
inc
ins
xchg
imul
(bad)
je
movs
push
dec
mov
xchg
push
sbb
mov
mov
mov
(bad)
cld
mov
mov
cmp
push
mov
arpl
(bad)
mov
fist
xor
outs
popa
inc
jne
push
inc
fs
dec
sub
dec
stos
add
jae
dec
xchg
fsub
cmp
pop
mov
int3
call
std
(bad)
or
je
sub
cmps
mov
push
test
fisttp
out
pop
ja
mov
std
jbe
sahf
pop
mov
jo
fbld
adc
push
psubsw
mov
mov
pop
inc
sahf
jne
push
sbb
mov
int
loopne
not
mov
cmp
mov
popa
and
jno
into
aad
cdq
(bad)
mov
out
inc
xlat
push
mov
adc
cmp
sub
lock
pop
xor
fild
xchg
aaa
imul
pop
sub
addr16
aas
ror
scas
jnp
test
cwde
jge
enter
outs
int
int3
lds
aam
sbb
dec
adc
sahf
mov
out
jge
sar
movs
test
cmp
jecxz
jg
scas
dec
stc
in
mov
xchg
mov
inc
mov
push
cmps
sub
fst
add
sbb
mov
in
mov
and
add
shl
imul
sbb
aam
fidivr
(bad)
mov
out
and
loopne
adc
xchg
xchg
sbb
jmp
jmp
mov
(bad)
imul
pop
and
sbb
call
lock
mov
mov
lds
jge
xlat
inc
mov
rcr
push
pop
mov
jnp
inc
shl
nop
addr16
jbe
dec
jg
mov
out
xchg
xor
xchg
mov
mov
outs
mov
pop
lods
xchg
fs
xor
pop
repz
in
cmp
sbb
jno
or
test
inc
jp
pop
arpl
in
setae
mov
mov
adc
mov
lods
push
cmp
sub
cmps
dec
out
cmp
nop
shl
lods
dec
mov
(bad)
add
xchg
push
in
test
test
call
mov
retf
jecxz
outs
adc
add
pop
push
add
inc
mov
ins
sub
xchg
mov
(bad)
int
mov
xchg
mov
jns
faddp
inc
dec
add
sahf
aas
mov
(bad)
std
push
and
(bad)
cmp
fxch
jae
mov
adc
outs
out
jp
dec
inc
retf
lea
sub
in
cmp
jmp
retf
pop
mov
pop
icebp
pop
out
sub
ret
jnp
ror
and
xor
arpl
cwde
sbb
pop
cmc
call
xchg
push
push
xor
in
cmp
mov
iret
push
imul
mov
or
push
cmps
dec
fbld
cmps
frstor
sbb
sbb
inc
arpl
sbb
sahf
or
mov
imul
jl
cmp
inc
push
popf
das
mov
jmp
adc
(bad)
and
mov
shl
mov
movs
cdq
mov
pop
scas
das
test
jb
outs
sbb
leave
ds
xchg
mov
mov
stos
mov
lea
icebp
push
sub
addr16
cmp
lds
arpl
and
xchg
push
add
dec
pop
mov
leave
out
int
and
ret
out
neg
call
sti
lock
(bad)
adc
or
mov
outs
mov
movs
push
xchg
popa
sub
loopne
jmp
jp
and
dec
dec
jp
sbb
stc
or
dec
pushf
inc
loop
or
in
in
xchg
mov
push
ins
push
neg
pop
pop
or
push
jmp
movs
sub
nop
mov
push
fisub
dec
inc
pop
std
in
mov
xchg
and
je
ja
xchg
inc
inc
jbe
(bad)
pop
sbb
sahf
sub
call
jecxz
clc
(bad)
sbb
add
cmp
lods
rol
push
push
rol
shr
jae
ret
and
sbb
clc
pop
add
imul
sbb
sub
je
int
or
pop
loopne
jg
(bad)
pushf
scas
test
cmps
inc
mov
mov
call
xchg
add
icebp
pop
dec
test
fwait
push
sti
daa
dec
xor
pop
pop
pop
push
or
pop
inc
int3
cmp
xor
mov
sub
neg
js
popf
push
(bad)
pop
sub
jne
mov
shr
in
xor
outs
scas
outs
aaa
adc
pop
(bad)
sub
push
xchg
aam
mov
and
mov
sub
sbb
lock
adc
fdiv
add
xor
mov
mov
jne
jbe
cmp
shl
mov
jns
int3
mov
hlt
push
mov
sbb
dec
in
push
das
test
sub
in
bnd
fiadd
psrlw
or
push
test
sar
pop
movs
or
add
(bad)
fistp
cmp
lds
popf
lahf
enter
xor
or
scas
cli
clc
cmp
fst
pop
cmp
cmp
and
jecxz
mov
movs
lods
adc
je
fbstp
loope
xor
rcr
jmp
inc
dec
dec
bound
xchg
jns
and
repz
fcmovu
jb
sbb
and
gs
xor
fisubr
xchg
inc
shl
jb
pop
sbb
out
test
jmp
sub
outs
mov
add
and
or
jbe
mov
mov
xor
mov
outs
pavgb
jge
sbb
push
or
jbe
or
retf
fisub
mov
jp
mov
mov
sub
in
push
xor
or
xchg
or
sbb
push
sub
es
ja
ins
mov
pop
(bad)
out
sbb
jg
ss
jp
xchg
jmp
pop
dec
ds
int
adc
jg
sub
scas
fidiv
punpcklwd
xchg
dec
pop
jmp
pop
pop
mov
jp
gs
(bad)
mov
pusha
ins
mov
mov
dec
cmp
inc
test
xor
and
jp
mov
xchg
(bad)
je
mov
pop
montmul
cmps
add
mul
cli
inc
scas
cmp
fidivr
pop
jmp
js
pop
inc
fstp
fbld
mov
xchg
loop
push
or
xchg
xor
dec
sbb
stos
das
sub
dec
in
cmp
arpl
pop
scas
or
daa
sti
test
loope
(bad)
in
push
cmps
push
push
fcmovu
mov
shl
add
cmp
mov
sar
ds
pop
or
xchg
sub
pop
(bad)
sbb
pop
mov
repz
in
das
ret
movs
aas
cmps
shl
adc
pop
iret
jae
inc
repz
js
out
inc
scas
and
mov
and
or
jae
movs
xlat
xor
ins
and
stc
dec
push
xchg
mov
mov
mov
popf
xchg
sahf
pop
pusha
push
test
mov
mov
pop
jg
movs
maskmovq
imul
into
ffree
jae
aam
cmp
push
repnz
dec
xor
dec
sub
movs
rcr
pop
sbb
les
enter
dec
test
out
sub
jmp
aam
jno
test
mov
sub
mov
movs
shl
sbb
jp
pop
cdq
stos
das
mov
jp
sar
mov
outs
retf
je
and
cmp
call
push
outs
mov
icebp
add
lock
in
les
cmp
movs
sub
fist
mov
mov
lahf
mov
fbstp
push
push
cmp
sbb
dec
aas
in
out
jg
jmp
mov
add
push
jg
dec
call
lahf
repnz
mov
lea
mov
mov
rep
and
outs
sbb
cmc
dec
or
and
adc
pop
mov
push
(bad)
imul
repz
push
in
pushf
xor
outs
pop
retf
sbb
inc
inc
jb
outs
fstp
sub
or
jp
(bad)
das
cs
loop
in
cmp
jo
test
adc
or
mov
xor
xchg
in
ror
stos
cdq
lock
not
das
ficom
clc
stc
adc
retf
iret
leave
mov
push
addr16
sbb
inc
fisub
cmp
xchg
mov
cmps
rcr
jnp
mov
and
xchg
xor
and
pop
test
fmul
add
xchg
xchg
leave
inc
jb
mov
mov
loope
scas
xor
mov
sti
sahf
jbe
push
out
jno
inc
cli
mov
mov
(bad)
pop
fadd
mov
arpl
sar
clc
add
mov
retf
les
movs
test
push
sub
adc
int
inc
xor
jb
call
jo
in
or
adc
fisttp
(bad)
not
std
cmp
mov
lock
iret
test
sub
es
xor
cdq
in
pop
(bad)
cdq
add
ret
pop
iret
xchg
mov
in
dec
dec
pop
sub
fwait
and
cs
js
mov
les
jmp
pop
cmps
mov
ret
pop
fsub
xchg
stos
pslld
pop
fcmovu
adc
arpl
fisttp
jne
scas
pushf
(bad)
loope
cmps
ds
xchg
ds
stc
add
dec
mov
and
or
push
fcmovne
popa
mov
cmps
hlt
lahf
pop
stc
mov
jae
pushf
xor
pop
inc
mov
mov
xchg
adc
add
sub
(bad)
fdiv
mov
ja
aad
(bad)
arpl
loope
push
out
pusha
xor
and
ss
sub
cs
xor
mov
adc
lods
je
rcl
fild
test
mov
inc
popf
in
scas
inc
cli
jo
mov
adc
std
sahf
outs
push
mov
aas
ror
push
xor
rol
repz
jle
jb
push
mov
pop
xacquire
mov
jno
sahf
movs
inc
sbb
adc
pop
lods
dec
inc
lods
jo
fwait
outs
in
mov
mov
jnp
shl
lods
inc
mov
mov
sahf
inc
inc
inc
(bad)
xchg
clc
xchg
jns
dec
pop
out
dec
adc
push
jmp
out
ret
sub
fisub
jmp
adc
dec
dec
pop
push
xor
jno
jae
and
sbb
js
jo
inc
aad
popf
cwde
fist
mov
dec
add
adc
push
mov
movs
aad
xchg
cmc
mov
mov
out
fcom
imul
push
lock
push
pop
leave
in
(bad)
fisubr
int3
push
inc
and
mov
cmps
in
ja
mov
xor
cmps
mov
fmul
(bad)
or
fadd
in
jmp
js
cwde
adc
call
clc
fwait
jb
sahf
addr16
lock
stos
push
mov
cld
enter
or
cmc
or
mov
and
leave
mov
(bad)
push
push
shr
xchg
pop
addr16
in
cmc
adc
outs
lahf
imul
mov
jns
ja
sti
push
sub
in
mov
not
add
out
or
not
jp
xchg
fwait
adc
cld
jns
adc
aas
cmp
clc
lock
lock
fwait
mov
sub
add
sub
ins
ret
mov
sub
jns
xchg
ret
mul
fisub
fwait
int3
xor
test
mov
fisttp
sub
pop
or
mov
xor
adc
push
inc
jmp
pop
or
inc
in
stos
shl
push
cmp
repz
aas
(bad)
cld
repz
aas
call
add
jg
or
dec
xchg
aaa
add
add
dec
inc
dec
inc
scas
inc
pusha
or
add
add
add
(bad)
(bad)
inc
add
add
add
add
add
add
jns
je
ins
cs
jb
ja
outs
addr16
push
gs
imul
xor
xor
inc
jne
je
jb
cmp
jb
ins
sub
push
jne
ins
imul
imul
bound
xor
data16
xor
fs
add
adc
gs
cs
jb
ja
outs
addr16
imul
add
popa
je
pop
add
add
add
add
add
lsl
add
mov
mov
inc
or
add
or
add
add
add
add
or
add
add
pusha
outs
rol
add
add
inc
dec
inc
add
mov
or
popa
add
jo
pop
jae
add
ret
add
push
ret
add
outs
test
add
adc
inc
inc
push
pop
inc
in
xlat
add
add
out
sbb
mov
jae
cmps
dec
ja
scas
imul
(bad)
jmp
cld
lahf
div
in
repz
mov
aaa
xor
cmp
xchg
clc
cmp
arpl
cld
lods
dec
xchg
imul
in
shr
mov
shr
dec
xchg
sbb
sub
out
enter
lahf
sti
adc
in
xor
ss
(bad)
mov
(bad)
ins
pushf
mov
push
in
shr
or
xchg
clc
adc
xchg
movs
arpl
jnp
(bad)
cmc
pop
push
push
cmc
adc
aaa
mov
sub
mov
dec
jns
or
jae
sub
xlat
iret
bound
dec
dec
fcomip
adc
outs
jp
repnz
mov
and
and
pop
xor
cdq
and
sbb
dec
ror
cdq
dec
scas
lds
mov
mov
ja
push
loope
or
jp
clc
mov
pop
dec
rcr
scas
hlt
pop
fstp
mov
cld
icebp
xlat
mov
mov
sbb
icebp
xchg
jmp
std
jnp
cmps
es
sar
outs
(bad)
setle
call
(bad)
js
ror
inc
jne
outs
jp
or
cli
or
aad
inc
std
int
and
adc
int3
cmp
sub
xchg
enter
int3
imul
bound
cdq
addr16
into
not
(bad)
nop
add
(bad)
xchg
mov
test
sbb
cmp
data16
call
xchg
mov
adc
or
lds
jne
pusha
pop
(bad)
fucomi
outs
scas
push
out
ror
pop
rcr
stos
cdq
mov
sub
cs
cli
jne
stc
sti
fist
pop
and
jno
and
push
dec
mov
(bad)
pop
out
push
pop
je
xor
dec
aam
add
outs
dec
lock
ret
pop
xor
jbe
add
test
(bad)
push
in
jmp
mov
jae
pop
stc
cmc
mov
fidivr
push
jnp
cs
pop
sub
(bad)
ret
xor
or
push
icebp
nop
fisttp
or
pop
mov
nop
iret
jmp
ins
add
(bad)
sti
inc
(bad)
repz
sbb
cmp
arpl
cmp
pop
push
pcmpgtb
ret
jns
pop
xchg
inc
dec
repz
or
out
sbb
jge
mov
scas
cmp
xchg
call
inc
mov
xor
in
cs
in
lods
out
cmp
jns
daa
jae
xchg
sar
mov
sbb
std
popf
(bad)
fdiv
sub
mov
sbb
mov
ror
sbb
bound
cmp
dec
in
popw
fdivr
xchg
sub
jle
xchg
(bad)
and
lods
shr
jbe
retf
jo
jo
xor
mov
jmp
adc
push
cdq
fwait
loop
or
test
sub
test
imul
mov
mov
push
loope
stc
ret
push
(bad)
int
fptan
sub
adc
mov
mov
push
jae
or
mov
dec
xchg
dec
inc
xchg
mov
dec
(bad)
sub
cmc
mov
lahf
mov
(bad)
aam
jp
call
loopne
push
loopne
or
mov
xor
xchg
and
adc
cmovl
ss
cs
inc
cmp
adc
call
xchg
cld
mov
clc
test
call
jae
inc
jge
inc
jmp
cmp
das
gs
cs
test
xor
jmp
leave
or
jmp
in
popa
add
add
cmps
sar
fs
inc
imul
imul
push
outs
ss
push
pop
nop
test
sbb
lods
cdq
adc
cwde
xchg
sti
movzx
xchg
aaa
mov
nop
popa
or
fadd
rol
cdq
xchg
and
mov
adc
loope
test
mov
std
in
push
imul
pop
sbb
ins
es
in
cmp
mov
add
test
ins
dec
push
sbb
inc
push
cli
icebp
test
jmp
sbb
loopne
push
js
cld
out
or
iret
(bad)
mov
inc
cmp
fcom
lds
test
mov
cmc
or
sbb
dec
mov
(bad)
push
and
(bad)
dec
xchg
pop
xchg
aaa
ror
movs
jo
cmp
jmp
sbb
xlat
xchg
ins
cmp
jno
push
std
popf
inc
(bad)
push
daa
clc
jg
mov
sub
scas
not
mov
ror
jne
jb
ja
pop
or
sbb
mov
sbb
jmp
(bad)
fsub
and
loop
jp
push
jle
mov
imul
mov
fwait
and
and
mov
or
xchg
movs
cmp
(bad)
clc
ja
je
jg
loop
cli
icebp
(bad)
pop
mov
test
daa
rcr
inc
popa
ret
push
out
in
xchg
push
das
rcl
es
stc
and
pop
ja
clc
jp
fiadd
ja
push
xchg
in
mov
fimul
shl
sbb
mov
adc
retf
pop
int
xlat
add
in
rol
into
adc
sub
xchg
es
and
pop
add
sbb
scas
cmps
mov
jmp
inc
data16
dec
fcmovnu
lods
test
ss
or
inc
gs
jo
retf
pop
and
push
pop
pop
ror
xchg
xchg
jnp
jo
cmp
sub
jg
call
out
jl
out
dec
cmps
pop
inc
mov
push
out
cmp
or
or
cwde
dec
clc
iret
cld
into
pop
cdq
ds
adc
push
or
sbb
xchg
jne
bound
add
int3
jae
sub
das
in
test
sbb
int3
enter
pusha
imul
scas
jmp
sbb
mov
aad
xor
xor
in
push
mov
cmps
in
rsm
fnstenv
jmp
mov
adc
jae
or
sti
imul
stos
scas
hlt
and
xchg
and
cmp
pop
punpcklwd
popf
call
fmul
sub
imul
stos
dec
lea
push
mov
mov
mov
or
sbb
xchg
sbb
ins
cmps
jge
xor
clc
test
mov
add
int
test
(bad)
js
inc
mov
ins
jle
pop
jbe
adc
cdq
aad
pop
sti
pop
clc
ret
pop
adc
in
shl
adc
sbb
adc
not
mov
add
push
ror
sub
or
pop
jb
adc
sub
sub
cmp
push
int
sbb
(bad)
push
std
mov
iret
mov
test
mul
mov
fdiv
das
add
xchg
push
add
inc
scas
sar
jecxz
loope
push
imul
push
out
jp
(bad)
jmp
out
pop
(bad)
daa
cmps
jg
sbb
add
ins
cmp
pop
cs
sbb
dec
dec
mov
cli
(bad)
dec
fild
xchg
pusha
push
popa
adc
adc
lahf
adc
jbe
mul
lahf
(bad)
cmp
bound
scas
jns
cmps
jp
test
sahf
jb
xchg
xchg
test
jbe
pop
mov
das
jecxz
ret
dec
xor
out
test
adc
mov
shl
jns
push
jecxz
das
jbe
jns
ret
xchg
and
test
mov
mov
mov
popa
js
adc
push
xchg
push
in
cmp
mov
and
enter
push
in
xor
mov
mov
add
sub
jae
sti
cmp
mov
xor
in
ror
xchg
inc
pop
mov
or
mov
ds
stos
xchg
dec
retf
lods
sahf
(bad)
mov
push
icebp
dec
loope
popa
fidiv
xor
(bad)
add
inc
add
enter
lahf
bound
inc
pop
jmp
add
mov
jmp
pop
mov
pushf
push
xchg
sti
inc
or
popa
test
sub
mov
xchg
adc
std
out
dec
ja
aad
cmp
inc
das
mov
mov
cmps
push
adc
and
ins
jae
dec
rcr
push
repnz
mov
sbb
pop
or
cmp
call
dec
or
cmc
(bad)
in
mov
addr16
int
aad
push
arpl
cli
int
jae
pushf
in
std
inc
stos
adc
adc
adc
adc
jne
stos
clc
sub
in
add
(bad)
jp
sub
stc
xchg
and
xor
mov
push
in
cmp
dec
int3
adc
mov
outs
enter
aam
mov
jmp
sbb
pop
mov
sub
push
cmps
jmp
stos
test
ret
dec
test
fs
test
imul
inc
cwde
lods
pop
add
xchg
xor
dec
mov
outs
push
mov
inc
cmp
dec
xor
push
loopne
adc
inc
cmps
cmps
movs
sti
mov
les
arpl
data16
imul
inc
mov
icebp
jge
jno
ds
inc
int3
cmp
xchg
jl
and
mov
pop
push
push
mul
mov
(bad)
loope
in
in
dec
mov
jecxz
inc
add
mov
push
adc
test
mov
pop
mov
out
xchg
mov
loop
out
sub
rep
loop
bnd
mov
and
arpl
jg
push
call
mov
add
popa
adc
dec
dec
xor
je
sub
pop
data16
fiadd
mov
imul
and
inc
pop
xchg
cmovp
pop
xchg
jle
xchg
xor
call
aas
lods
ja
mov
(bad)
hlt
push
(bad)
cmp
das
sub
push
loopne
ins
lea
(bad)
(bad)
cs
test
mov
mov
bound
popf
dec
fwait
adc
fcmovnb
push
popf
push
ret
lods
mov
das
scas
arpl
cmp
sahf
outs
add
pop
(bad)
movs
mov
stos
sub
out
fidivr
ret
adc
xchg
mov
xor
lds
adc
lds
fs
addr16
pushf
or
and
das
add
std
sub
xor
les
(bad)
cmps
xchg
daa
dec
in
test
dec
add
cmp
movs
pop
mov
hlt
jnp
xlat
movs
in
mov
ss
push
fcomp
jmp
inc
or
sbb
and
sbb
push
mov
(bad)
fsub
mov
sbb
gs
sar
dec
lods
jmp
lds
test
adc
push
js
pop
aaa
out
rcl
sbb
bound
pop
and
wrmsr
xchg
stos
jl
lods
jae
jg
imul
jae
fs
rcr
cmp
mov
cli
shl
jno
in
mov
sub
adc
pop
mov
imul
pop
dec
loope
pushf
mov
push
jbe
ror
fnsave
lahf
mov
fidiv
and
adc
retf
fdivr
inc
stc
push
inc
jg
in
jbe
test
pop
fmulp
jmp
out
pop
fwait
sar
fld
sar
and
xchg
outs
stos
imul
lods
aam
(bad)
ficom
jnp
imul
mov
rcr
and
pmaddwd
sbb
sub
sbb
inc
loop
mov
test
inc
into
call
sub
dec
popf
and
test
sub
xor
mov
lahf
dec
cmp
inc
push
jb
xor
jae
or
lea
push
adc
push
mov
xor
jge
inc
scas
jmp
(bad)
in
(bad)
fwait
mov
mov
data16
hlt
imul
lock
sbb
inc
cdq
pop
call
push
stc
cmp
add
scas
jmp
push
cmp
xor
inc
xchg
fidiv
out
mov
mov
mov
fsubrp
arpl
enter
jg
mov
ficomp
adc
xor
push
sbb
mov
outs
mov
loopne
mov
jns
mov
cs
push
sub
push
jmp
enter
clc
mov
repz
and
fimul
adc
shl
mov
jo
pop
sar
call
jne
or
mov
ficomp
repz
jne
loopne
sbb
sar
(bad)
rcr
sub
sahf
sbb
lahf
jecxz
lock
jg
call
pushf
jp
sbb
push
xchg
inc
clc
mov
test
repnz
sbb
es
(bad)
std
mov
fs
(bad)
or
push
dec
sbb
push
mov
les
mov
fldcw
int3
xor
dec
gs
arpl
out
xor
shr
pop
lods
imul
xchg
sub
movs
pop
aaa
jl
pop
scas
aam
je
or
sbb
cld
mov
outs
cmp
pop
xlat
or
mov
sub
jae
in
fucomp
ret
xor
jmp
cmc
in
inc
mov
fs
pushf
pop
imul
jle
sub
(bad)
outs
int3
sub
cmp
cmp
fdivr
jge
jbe
rcr
mov
jb
push
mov
fsubrp
cmps
ds
dec
ret
sub
add
imul
cmps
fisubr
stos
xchg
inc
ficom
pop
mov
outs
fsub
jae
loopne
dec
in
jge
retf
dec
ror
or
stos
sbb
fldcw
mov
cwde
jbe
dec
push
or
cmps
sub
cmp
call
push
cwde
lahf
mov
push
pusha
dec
mov
shl
cmp
sub
adc
jo
mov
pop
lods
sbb
fstp
fsub
imul
mov
xor
in
mov
and
pop
mov
fisub
retf
cmp
sahf
test
xchg
add
(bad)
ret
xor
jle
shr
fldcw
and
jae
sub
lock
(bad)
push
xchg
addr16
or
jp
add
loop
dec
xchg
jmp
xchg
into
mov
cs
stos
ja
jo
xlat
mov
mov
(bad)
xor
sti
fs
pushf
push
cmp
pop
fistp
adc
popa
iret
inc
jo
outs
mov
xchg
and
pop
adc
std
xor
cmp
adc
pop
add
out
xchg
or
and
sub
jae
setbe
(bad)
xor
adc
add
inc
push
test
inc
stc
shr
mov
es
movhps
lds
xor
ins
push
in
fs
xor
cmp
mov
gs
push
fcmovne
daa
lock
pop
xchg
or
mov
lds
push
call
mov
scas
icebp
pop
leave
inc
ret
pop
pop
in
dec
pop
cmp
sub
lds
bound
lock
das
repz
pop
pop
dec
fcomi
xchg
dec
call
(bad)
fisubr
into
or
mov
in
mov
les
pop
pop
pop
icebp
test
xchg
stos
xor
mov
loop
std
dec
xor
out
fisttp
aas
shl
outs
xchg
stos
(bad)
mov
mov
call
mov
xchg
retf
mov
ins
xchg
bound
call
cmc
sub
imul
fist
imul
and
outs
dec
cmps
ror
daa
movs
ja
in
jmp
daa
push
pop
test
or
jmp
stc
retf
in
mov
adc
test
fidivr
std
outs
mov
adc
pop
jle
mov
adc
mov
rcr
and
xor
addr16
loopne
fisubr
pop
lock
aas
(bad)
cld
repz
aas
(bad)
cld
repz
add
movlps
adc
and
or
add
add
dec
inc
dec
inc
scas
inc
pusha
or
aad
mov
ins
xor
nop
les
pop
xchg
push
xor
aad
call
inc
aad
js
pop
xchg
mov
xchg
sub
xor
popf
jbe
or
or
or
cmp
pop
xor
shr
adc
and
xor
cdq
sub
lods
into
cli
idiv
hlt
sub
dec
in
in
aad
cli
jne
ja
jbe
gs
sub
ret
mov
xchg
add
push
lock
in
out
jecxz
and
pop
sub
push
jg
jl
js
imul
add
dec
or
arpl
adc
test
mov
push
movs
dec
hlt
sub
inc
jg
ret
mov
pop
mov
dec
test
xor
(bad)
ret
mov
jo
cmp
or
inc
loop
inc
(bad)
pushf
jl
xlat
mov
scas
pop
lahf
fcmovnbe
aaa
inc
retf
repz
cmp
xchg
aas
mov
in
mov
push
test
cmps
imul
add
inc
dec
jle
xor
inc
mov
les
pop
loop
out
add
cdq
inc
popf
xchg
sbb
ror
dec
adc
ja
jl
bound
ins
cmc
adc
push
loope
scas
repnz
popa
xor
dec
movs
xor
adc
jg
mov
mov
(bad)
jp
mov
test
(bad)
gs
out
sbb
test
idiv
jno
mov
leave
mul
mov
pop
lods
add
ror
sahf
cli
clc
push
into
repnz
xor
dec
xchg
push
xchg
retf
daa
frstor
or
cdq
mov
add
std
mov
outs
jno
mov
mov
pushf
cmc
dec
test
inc
addr16
xchg
jo
xlat
jecxz
jl
push
and
movs
cmps
mov
popa
pop
push
lods
push
jae
push
pop
dec
cmp
retf
push
dec
jg
pop
and
fwait
test
pop
sbb
jno
fbstp
dec
stos
push
adc
ds
or
pop
sbb
je
cmps
ins
mov
inc
fimul
inc
lea
jge
inc
or
pop
gs
lds
push
xchg
jae
xchg
movs
cmp
dec
dec
ss
mov
or
pop
fs
cdq
mov
or
mul
(bad)
jmp
arpl
and
hlt
pop
retf
pop
retf
adc
pop
mov
cmp
push
push
mov
push
repz
xlat
inc
mov
scas
ret
in
mov
pusha
add
test
push
jmp
shl
popf
pop
mov
xchg
mov
sub
mov
jne
pop
lods
fsubrp
fs
inc
pop
fnstsw
pushf
xor
sub
cmp
repnz
test
pop
or
inc
rcr
mov
sub
cmc
stos
add
and
xor
jmp
add
rcr
sub
popa
dec
test
loope
pushf
push
xor
jmp
sub
stc
mov
ret
inc
xlat
mov
in
xor
dec
nop
out
mov
addr16
cmp
sbb
lea
jns
jmp
mov
add
out
dec
xchg
ficomp
sub
js
repnz
mov
(bad)
int
mov
stos
ins
outs
ds
jle
mov
sub
and
nop
out
jg
xchg
lea
xchg
xchg
scas
loop
cli
imul
sbb
pop
jmp
cdq
mov
inc
mov
std
jmp
les
sub
into
mov
xchg
fadd
jb
test
xor
call
jp
rol
push
imul
jo
and
test
ins
enter
je
sahf
aas
cmc
push
jecxz
shr
bound
cli
mov
xor
or
in
add
pop
inc
aad
sub
dec
adc
push
enter
lods
ss
mul
mov
push
lahf
xor
pop
push
test
jg
scas
mov
add
sbb
cmp
dec
leave
fistp
sahf
adc
cwde
les
cmp
sti
jecxz
cld
sti
fadd
mov
imul
sbb
aam
(bad)
lea
cmp
rol
outs
or
push
mov
pusha
cld
(bad)
pop
mov
loopne
or
and
jne
pop
adc
(bad)
cmp
xchg
repz
mov
jns
jnp
addr16
xchg
test
push
or
jmp
cdq
sub
les
add
aad
pmaxsw
out
dec
into
cmp
xacquire
fidiv
pop
dec
pop
cs
xchg
or
fwait
pushf
mov
lds
lds
cs
clc
or
fist
mov
scas
out
fmul
mov
cmps
int
repz
adc
je
fistp
cmps
dec
cli
inc
jmp
and
push
push
mov
vcvttss2si
pushf
push
jl
cmp
sbb
inc
repz
jo
leave
loopne
in
retf
icebp
aas
imul
sti
pop
push
sbb
call
push
inc
lock
pop
jp
lods
icebp
enter
loop
sub
test
es
ds
jnp
inc
jge
sbb
inc
mov
fisubr
in
jns
jl
fcomp
fidivr
adc
mov
mov
push
lods
mov
xlat
sbb
cwde
lahf
mov
push
or
xchg
adc
pushf
add
sbb
xchg
xchg
mov
retf
mov
dec
pop
pop
xor
mov
hlt
stc
and
retf
sbb
jmp
pusha
mov
cmps
mov
mov
sbb
add
(bad)
ins
mov
nop
adc
lock
cmp
ss
mov
bound
cmp
inc
push
iret
mov
sub
adc
rcr
jl
mov
(bad)
xchg
retf
fs
pushf
xchg
and
(bad)
call
xchg
sahf
test
cmps
mov
add
inc
frstor
and
mov
mov
adc
lgs
icebp
or
pop
cmp
mov
add
push
vpaddsb
fidivr
dec
xchg
pushf
pop
outs
or
nop
or
dec
mov
jnp
neg
rcr
repz
xor
dec
outs
ss
pop
retf
xchg
xor
adc
push
jb
jo
shl
arpl
(bad)
push
retf
test
bound
fld
mov
inc
inc
sub
mov
and
add
cmp
int3
shl
sub
add
mov
scas
and
push
mov
sbb
adc
or
xor
cmps
clc
add
test
inc
aad
jae
cmp
cmp
lock
stos
mov
jno
cmps
test
aad
xor
dec
cmps
or
(bad)
int
arpl
repz
loopne
bound
call
mov
dec
push
jle
inc
imul
cmp
pop
and
push
and
inc
pop
or
jge
repnz
(bad)
push
mov
call
push
pop
rcr
sbb
or
pop
cmps
mov
ja
mov
fstp
ds
pop
enter
jno
scas
push
add
scas
(bad)
fidiv
jmp
and
cmp
ins
(bad)
mov
aaa
mov
or
aam
mov
test
outs
mov
push
jl
add
mov
sub
push
loope
idiv
pop
pop
adc
loopne
adc
imul
xor
iret
inc
scas
cmp
ja
push
std
icebp
repnz
xchg
loope
lea
movs
call
clc
push
adc
test
or
test
xor
or
add
pop
imul
sar
fwait
out
jg
mov
sub
dec
nop
mov
mov
nop
xlat
sbb
mov
dec
les
jp
shr
dec
imul
xor
icebp
mov
imul
popa
add
movs
pop
pop
jne
retf
dec
bound
mov
popf
adc
popa
cmps
movs
enter
jns
daa
imul
into
leave
mov
fnstcw
cmps
dec
push
pop
popf
(bad)
test
mov
movs
dec
inc
jge
iret
jnp
dec
or
jmp
stos
or
loopne
sahf
dec
cmp
mov
retf
add
jbe
clc
or
jge
or
mov
push
test
sbb
jl
daa
inc
in
sbb
add
stos
jmp
cmp
pop
jb
adc
addr16
push
dec
shl
imul
test
push
cmps
jecxz
fwait
push
add
das
outs
jp
inc
lock
dec
scas
add
sti
bound
pop
jno
push
jp
cmp
inc
xor
cdq
mov
das
iret
adc
dec
and
cmp
dec
mov
pop
ret
jne
push
cmp
into
push
cmp
mov
sbb
in
imul
adc
out
aas
cld
push
cmp
adc
pusha
mov
aaa
inc
dec
aas
pop
lds
cmps
dec
(bad)
lods
inc
test
xchg
push
and
pusha
stos
cld
dec
cmp
cmc
retf
mov
inc
cmc
push
test
call
in
jmp
push
lahf
mov
pop
dec
ror
fidivr
iret
loope
leave
sbb
add
inc
stc
and
jbe
fistp
fnstenv
xchg
add
enter
push
push
cmp
or
(bad)
xor
fild
test
mov
fbld
adc
xchg
mov
push
repnz
shr
fld
sub
mov
mov
out
das
add
sbb
sub
mov
adc
loopne
aaa
adc
push
nop
cmps
jb
pop
sub
pop
and
outs
push
and
sbb
jo
jge
stos
(bad)
xchg
jmp
jp
(bad)
mov
mov
adc
aaa
pop
and
and
neg
add
mov
xchg
sbb
or
cmp
lods
rcr
mov
aam
pop
lea
outs
das
inc
mov
xchg
(bad)
and
into
mov
xor
sti
jbe
leave
xor
stos
pop
int3
clc
or
(bad)
adc
out
xlat
popa
sub
fidivr
and
gs
mov
inc
pop
imul
fisubr
aaa
lods
hlt
bound
push
jae
int
fcomp
lock
xchg
fwait
ins
fldenv
sahf
cmp
add
mov
dec
retf
inc
fs
addr16
clc
setl
in
das
push
mov
mov
sub
xor
jg
mov
les
push
jno
sub
outs
pusha
loopne
or
mov
mov
mov
imul
gs
mov
xor
rcl
jmp
push
and
ret
and
arpl
push
cwde
cmp
sbb
mov
neg
push
imul
fild
push
dec
cmp
inc
and
clc
loope
xchg
adc
repz
pop
aas
mov
push
fisttp
xchg
mov
push
and
xchg
push
sbb
iret
lds
cli
daa
sahf
sub
int
mov
mov
popf
sahf
cld
aad
mov
jmp
mov
mov
mov
not
xor
lds
pop
iret
mov
pop
nop
mov
fsub
loopne
in
cmps
cmp
rol
stos
add
pop
sbb
pusha
or
test
adc
mov
adc
retf
lea
mov
pop
pop
addr16
sti
jns
ds
mov
(bad)
hlt
adc
xchg
cmp
mov
xor
cmp
or
push
pop
sub
and
pop
(bad)
dec
xor
loopne
xchg
pop
jle
pop
pop
cmc
gs
sub
adc
imul
mov
adc
(bad)
cmp
dec
mov
adc
xor
cmp
stc
sbb
pop
sub
push
in
jg
sbb
clc
cmp
adc
xchg
sbb
gs
sub
sub
mov
xor
jns
clc
jnp
jb
mov
push
movs
jb
xor
test
mov
mov
push
cmp
adc
pop
jmp
mov
in
call
jl
and
das
mov
sti
fwait
jb
add
mov
jbe
adc
dec
in
not
call
cmp
out
ja
or
cmp
pusha
inc
ds
xchg
xchg
push
inc
jg
scas
mov
pop
inc
lods
fisttp
(bad)
jecxz
add
cli
mov
push
in
nop
mov
add
(bad)
and
lock
lods
or
pop
sub
adc
fcom
mov
aas
jo
repnz
in
into
in
cmp
mov
jmp
jns
xlat
(bad)
std
mov
aad
loop
add
inc
mov
sub
scas
aas
test
xor
ins
fld
lahf
mov
mov
cmp
in
mov
in
lahf
inc
xor
jb
mov
mov
inc
mov
and
sti
sub
or
sbb
pop
and
or
adc
imul
out
dec
imul
(bad)
shl
push
xor
sar
sub
add
or
sbb
xor
mov
and
div
cmp
in
fdivrp
int
mov
push
push
dec
xor
iret
cmps
faddp
sub
retf
mov
cmp
shr
mov
sub
and
rcr
mov
jb
test
push
add
mov
jl
add
(bad)
and
sub
test
addr16
sahf
mov
cmp
mov
cmp
in
imul
daa
or
popa
push
imul
lds
retf
inc
retf
test
cmp
push
(bad)
test
in
icebp
mov
pusha
in
push
enter
inc
enter
mov
ss
loope
push
aas
push
fdiv
lahf
loop
adc
test
fiadd
scas
fcmove
push
les
int3
dec
fcom
mov
in
loope
pop
mov
dec
inc
stos
jle
fst
scas
in
arpl
or
add
nop
es
cld
dec
pop
dec
sub
out
fistp
dec
gs
and
repz
idiv
popa
mov
sbb
push
dec
shl
xlat
jb
bound
(bad)
jecxz
mov
ret
aaa
add
test
inc
mov
pop
mov
dec
dec
out
or
pop
push
lods
mov
in
cmp
loop
mov
sti
inc
in
xlat
stos
mov
fnstsw
rol
or
mov
clc
retf
xchg
das
icebp
test
(bad)
push
inc
mov
test
(bad)
mov
loope
shr
mov
adc
xor
and
mov
adc
test
adc
push
(bad)
(bad)
adc
test
fdiv
or
or
imul
gs
repnz
movs
xlat
mov
test
stos
imul
or
xor
loopne
pop
std
jmp
dec
or
mov
inc
pop
mov
arpl
sbb
sbb
dec
jmp
imul
xchg
clc
sub
data16
addr16
or
push
inc
xchg
or
jns
mov
mov
inc
ins
inc
(bad)
xchg
cmp
loope
ja
out
test
into
lock
pop
jbe
xchg
sub
xchg
push
scas
mov
pop
ret
mov
mov
fidivr
lods
clc
xchg
push
cmps
jmp
push
out
jle
dec
lock
loopne
pop
xlat
shl
jl
movs
jno
add
out
push
and
sbb
mov
aad
jg
inc
sub
jge
lods
mov
lds
(bad)
aaa
push
adc
leave
ret
shl
fwait
adc
xor
lahf
push
pop
pop
lods
stos
mov
lds
ds
or
add
or
add
mov
mov
mov
and
mov
xchg
add
add
jecxz
cdq
pop
cmps
mov
inc
add
mov
jbe
rcr
cli
mov
ja
scas
jae
and
cmp
call
adc
stc
dec
arpl
call
fist
sub
loopne
mov
js
and
int
popf
int
sub
dec
clc
fwait
xchg
sub
cmp
and
ret
fld
mov
sbb
into
push
pop
aaa
pop
and
mov
push
and
inc
pop
sbb
and
mov
push
repz
add
xor
jmp
mov
and
cld
repnz
sub
arpl
mov
repz
mov
shr
lods
in
inc
mov
or
mov
mov
lea
stc
cmp
into
and
mov
rcr
in
pop
mov
punpckhwd
pushf
leave
pushf
gs
xchg
adc
gs
dec
mov
jmp
push
pop
pop
sub
adc
adc
cs
dec
ds
dec
cmp
jg
adc
jge
xchg
adc
jecxz
movs
lock
lock
push
pop
or
cmp
mov
pop
sub
sar
pop
stos
xchg
pop
call
aam
jo
push
add
iret
mov
vcvtdq2pd
mov
daa
or
mov
ins
pushf
aaa
xor
sbb
adc
fild
in
mov
leave
sbb
or
nop
clc
out
aas
ret
xor
imul
inc
lahf
sbb
add
retf
mov
sbb
fcom
inc
addr16
sub
push
mov
or
(bad)
jge
adc
xor
shr
adc
test
mov
outs
or
ja
ret
lea
stos
pop
mov
nop
add
jecxz
addr16
hlt
add
scas
mov
push
iret
mov
and
jno
imul
jg
sbb
mov
jle
mov
arpl
sub
or
out
dec
or
fiadd
cmp
mov
push
sub
cmp
jl
sub
push
or
mov
pop
fnstcw
adc
mov
push
inc
xor
mov
push
js
aam
(bad)
adc
sub
adc
sub
or
mov
mul
jns
call
or
pop
xor
and
mov
mov
mov
add
fisubr
mov
add
mov
mov
xor
dec
jb
in
fnstenv
cmps
pop
add
adc
push
popa
mov
mov
add
jno
call
inc
fiadd
cmps
cmps
outs
cld
loopne
pop
imul
(bad)
clc
test
sub
icebp
(bad)
pop
shl
jecxz
(bad)
or
fsub
inc
aas
movs
loopne
dec
cmp
cmp
xchg
mov
cmp
idiv
test
and
loope
xchg
add
movs
jmp
sub
in
push
push
xchg
pop
(bad)
push
lock
imul
mov
adc
fdivr
xor
xor
leave
js
jo
mov
cmp
dec
not
mov
lock
sub
mov
dec
sub
icebp
jmp
cmp
aad
mov
inc
neg
mov
mov
xor
or
adc
push
loopne
xor
js
stos
mov
mov
ins
xchg
sub
or
addr16
ja
jae
stc
sete
cld
dec
aam
or
imul
in
xchg
sub
mov
(bad)
fidivr
xchg
mov
out
sar
fs
jb
adc
les
pop
and
retf
lods
lods
loopne
gs
sub
inc
in
push
sub
jne
sub
mov
repz
ja
push
aad
pop
aaa
add
mov
cmp
scas
loope
loop
in
jge
iret
push
repnz
or
(bad)
mov
jne
push
cmps
(bad)
cld
adc
mov
xchg
and
xor
stc
dec
mov
jbe
jns
or
xor
lock
cli
xchg
into
pop
adc
test
into
and
dec
sub
mov
repz
lods
push
outs
sub
fdiv
mov
jmp
in
or
sahf
xlat
xor
sub
test
lods
sub
fidiv
mov
push
push
xbegin
and
jb
and
cmp
adc
test
add
ret
fdivr
push
cmp
nop
arpl
stc
dec
sub
retf
and
xchg
in
gs
inc
int3
inc
ds
or
mov
(bad)
into
fdivr
stc
out
mov
call
push
into
adc
cmp
xor
xchg
mov
int
or
add
cmp
adc
adc
call
mov
pop
cmp
sahf
les
int3
rcl
add
cmp
pushf
push
xor
add
or
stos
shl
sbb
inc
sbb
pusha
les
pushf
xor
cwde
cmp
or
loopne
sbb
xor
add
cmp
ds
fcom
inc
jnp
sub
icebp
mov
xor
add
fscale
aaa
mov
imul
push
sbb
(bad)
data16
pushf
or
(bad)
mov
mov
pop
add
jns
bound
in
or
std
je
movs
cmp
cli
hlt
mov
adc
and
mov
xchg
out
sbb
test
adc
jp
xor
sbb
retf
fild
daa
adc
scas
mov
xchg
jb
mov
pop
inc
inc
es
adc
or
(bad)
adc
aas
ds
mov
ret
add
call
aam
inc
lahf
mov
mov
gs
rol
dec
push
fdiv
sbb
sti
or
mov
dec
mov
xchg
mov
nop
mov
xor
cmp
fadd
pop
cmp
cmc
jno
xchg
mov
cmps
xchg
xchg
jnp
in
das
ins
addr16
(bad)
sub
sbb
sub
ds
jne
aad
scas
leave
sar
mov
out
cmp
enter
(bad)
retf
ret
jae
and
inc
jmp
cmps
lahf
push
out
add
push
mov
dec
in
inc
push
lea
js
iret
mov
cs
lods
mov
adc
pop
fisttp
jne
mov
enter
icebp
jmp
in
jmp
ins
cld
in
shr
inc
out
stos
(bad)
hlt
inc
add
cmp
pop
popa
or
jmp
or
dec
push
and
inc
jle
jne
push
dec
mov
xor
and
out
inc
retf
sbb
adc
mov
xlat
int3
rcr
repz
std
inc
xor
sbb
fidivr
in
dec
jnp
frstor
inc
aad
rcr
dec
or
dec
push
scas
repz
leave
lahf
in
ror
jl
sbb
xchg
mov
adc
fcom
jp
dec
loopne
mov
pop
pop
or
bound
jp
bound
sti
repnz
enter
xchg
sub
lods
jle
mov
movs
xor
leave
inc
sub
(bad)
imul
fcom
sbb
and
jno
or
fmul
jge
test
out
arpl
mov
sbb
je
(bad)
(bad)
push
pop
xchg
inc
lods
movs
or
add
push
or
sahf
mov
push
push
dec
and
in
cmp
clc
loope
int3
es
or
test
or
lds
adc
pop
out
repz
mov
inc
xor
add
shr
inc
jbe
dec
adc
or
mov
dec
mov
dec
ret
inc
aaa
and
cdq
cmp
inc
sti
scas
jmp
out
arpl
not
and
popf
and
arpl
jnp
fcom
jp
push
cdq
mov
gs
xor
fadd
cli
shr
int3
cmp
or
push
ret
xchg
hlt
dec
fwait
hlt
push
out
inc
and
cmp
and
ins
ins
mov
push
sbb
rol
inc
out
pop
int
arpl
shr
movs
mov
mov
mov
xchg
retf
jmp
add
push
popf
fmul
dec
ss
and
(bad)
iret
pop
loopne
pop
out
pop
cld
int
mov
dec
inc
fmul
std
xchg
(bad)
pop
cwde
loopne
xchg
add
jl
dec
cli
cli
adc
inc
inc
out
test
jnp
retf
xor
lahf
fsubr
push
mov
fcomp
mov
into
arpl
cmps
cmps
stos
mov
rcr
add
inc
pop
and
pop
adc
pop
sbb
sar
sub
mov
idiv
pop
(bad)
sub
imul
scas
shr
inc
test
std
shl
fs
adc
cmp
add
sub
jns
or
mov
sbb
add
jmp
daa
push
push
aas
push
mov
pop
sbb
mov
jmp
xor
xor
and
push
and
pusha
test
xchg
and
xor
mov
inc
pushf
pop
lods
xchg
sub
mov
or
dec
fdiv
cs
and
xchg
lods
cld
cmc
in
movs
dec
(bad)
mov
sbb
mov
iret
jle
mov
mov
test
(bad)
(bad)
clc
mov
je
xchg
movs
add
mov
and
mov
pop
aad
dec
(bad)
icebp
gs
inc
popf
xchg
sbb
inc
sbb
sbb
repnz
das
sbb
and
sbb
repz
aad
int
imul
cmp
unpckhps
mov
cmp
xchg
sti
in
push
dec
xor
push
ds
jecxz
mov
mov
mov
jno
repnz
mov
xchg
add
std
jno
pop
and
dec
fisubr
in
call
and
mov
xor
addr16
pop
leave
sbb
cdq
dec
jp
mov
in
dec
iret
(bad)
test
test
mov
int3
cld
mov
push
push
fisubr
sbb
imul
mov
fdiv
mov
loop
popf
imul
(bad)
enter
jo
in
sbb
xor
fs
gs
adc
add
push
test
mov
sbb
push
or
xchg
test
out
add
mov
xor
push
jp
movs
inc
sub
retf
aam
xchg
out
mov
dec
(bad)
fwait
lea
and
lea
cli
or
dec
or
fisttp
pop
mov
xor
add
sbb
push
jle
sbb
popf
mov
sbb
xor
and
mov
adc
call
data16
scas
fwait
jae
xchg
lahf
idiv
push
dec
add
test
aam
mov
cmp
xor
les
jg
mov
retf
dec
sbb
outs
mov
pop
sub
adc
(bad)
popf
call
adc
cmp
ret
cwde
sub
cmp
aad
sbb
xor
lods
dec
cmp
into
out
test
jmp
lea
jo
cwde
pop
cli
add
inc
xchg
les
xchg
sbb
rcl
xor
push
les
or
add
mov
test
arpl
scas
repnz
inc
lods
jge
mov
addr16
mov
int3
mov
xchg
push
sahf
aad
adc
cmps
cmp
jae
xor
dec
mov
retf
(bad)
call
mov
xchg
add
fild
ja
sub
jne
push
mov
or
fwait
or
pop
out
mov
mov
icebp
mov
std
sti
in
mov
adc
out
mov
mov
jp
xchg
sub
adc
movs
xor
cmc
sbb
movs
jmp
xchg
lds
pop
dec
ds
sub
fwait
stc
add
jnp
xor
mov
movs
mov
stos
scas
pop
push
inc
data16
aam
outs
push
scas
repz
mov
inc
(bad)
and
shl
dec
cmp
fcomp
cdq
inc
nop
lea
add
lods
push
pop
mov
sbb
push
or
(bad)
adc
aas
jne
xor
in
inc
mov
mov
ret
mov
jecxz
add
movs
jo
adc
cmc
push
clc
movs
mov
out
popa
pop
pop
add
cmps
(bad)
and
mov
mov
push
clc
mov
call
jne
mov
jmp
scas
sbb
rcl
cli
(bad)
jecxz
mov
cwde
loop
lods
mov
jo
out
jns
lahf
mov
mov
adc
out
or
popf
xor
std
dec
and
fs
or
or
mov
ds
retf
mov
arpl
fcom
xor
imul
fisub
pop
cmps
jns
cmp
push
jbe
cmc
mov
jno
jne
inc
xlat
adc
jp
cdq
shl
call
push
jbe
jnp
rcl
into
mov
repz
jmp
mov
mov
movs
shl
lods
ds
out
adc
mov
in
dec
jle
add
aas
bound
mov
xor
cs
adc
ins
pop
rcl
rcl
mov
add
fistp
stos
sub
(bad)
xchg
and
bound
dec
test
pop
pop
xchg
pushf
xchg
xchg
js
sar
loope
mov
add
lahf
(bad)
movs
xchg
or
ins
inc
in
jp
or
mov
mov
mov
pandn
mov
mov
cmc
test
sbb
push
ds
mov
xchg
mov
mov
inc
lea
sub
out
pop
nop
sub
dec
loopne
jne
int
popa
ror
je
in
or
sahf
push
and
test
inc
inc
imul
jae
or
daa
bound
pop
imul
mov
cmp
mov
(bad)
sub
ja
mov
das
cdq
ret
shl
sub
idiv
enter
jl
std
rol
test
add
retf
and
fcomi
dec
ret
stos
stos
rol
ja
js
ja
add
(bad)
ins
stos
add
hlt
cmp
lds
xchg
push
loope
push
jb
cli
xchg
pop
sub
movs
xchg
stc
pushf
pusha
in
inc
push
ja
arpl
inc
ficom
ja
pop
(bad)
xor
clc
pusha
xchg
aaa
jg
out
lock
and
imul
add
dec
enter
inc
lahf
mov
or
push
mov
mov
xchg
cmp
ins
(bad)
mov
mov
pop
fxch
adc
mov
test
cmp
pop
or
add
sbb
inc
fild
gs
cdq
dec
xor
bound
ficomp
xchg
mov
sbb
aaa
sbb
add
xor
mov
imul
adc
scas
mov
call
xchg
pop
add
in
sub
adc
call
leave
pop
call
lahf
pop
and
or
movs
popf
cld
sub
adc
out
test
adc
and
mov
xor
xor
xchg
add
sbb
cs
add
inc
ja
fsub
and
call
xchg
push
dec
cmp
in
adc
sbb
add
mov
cmp
cmp
dec
fadd
adc
push
sub
retf
inc
inc
xor
(bad)
addr16
test
mov
sbb
pusha
add
pop
outs
movs
mov
cmp
push
imul
jmp
jb
mov
retf
add
test
(bad)
jae
mov
sbb
retf
movs
xchg
push
daa
fsub
jno
xor
xchg
push
jge
pop
(bad)
jmp
fsub
ins
adc
or
jmp
or
das
das
xchg
pop
or
jl
adc
pop
dec
mov
jp
xchg
sbb
cmp
cld
pop
cmp
sub
adc
add
movs
shr
fstp
enter
xor
pushf
cmp
pop
xchg
stos
rcr
lock
or
(bad)
repnz
jbe
in
mov
imul
mov
push
gs
mov
retf
rcr
xchg
xchg
xchg
outs
sbb
fucomip
jne
in
cmps
sbb
in
mov
stc
rol
dec
ds
sbb
lea
push
add
sub
out
jmp
mov
xchg
hlt
sti
or
test
aaa
fwait
fs
jae
mov
test
mov
in
aad
imul
icebp
cmp
ret
scas
or
out
int3
inc
jecxz
mov
leave
push
mov
aam
inc
xchg
xor
sar
fldenv
xchg
xchg
lahf
mov
mov
fidivr
push
cmc
xchg
xor
pop
fsubr
push
(bad)
cld
arpl
mov
fbld
daa
xchg
sub
clc
sub
push
and
fadd
(bad)
fmul
int
popf
and
mov
pop
dec
cmp
pop
movs
outs
push
in
(bad)
cli
lock
jge
sub
pop
popa
in
cmp
shr
ins
out
or
cmps
pop
inc
ret
sbb
add
sbb
(bad)
mov
inc
xchg
jecxz
gs
jbe
ror
inc
cld
cmp
into
inc
dec
xor
jle
rcl
ret
mov
(bad)
xchg
sub
jg
dec
adc
cmps
xor
(bad)
movs
cs
inc
lahf
int
inc
mov
adc
jecxz
cmp
lods
imul
adc
arpl
jl
retf
jmp
cs
adc
mov
xchg
jbe
mov
popf
pop
dec
push
sub
pop
into
aaa
sub
dec
mov
retf
rol
inc
cmp
ficom
retf
xor
fdivr
repz
lods
dec
ja
pop
inc
cs
retf
xchg
movs
out
add
dec
xor
adc
pop
push
bound
enter
loopne
inc
add
gs
inc
xchg
int3
nop
iret
sbb
(bad)
das
ds
xchg
mov
ror
cmp
in
icebp
push
mov
cli
xlat
ins
cmp
imul
or
sbb
sub
jns
cmp
fidiv
outs
dec
mov
add
xor
or
add
iret
ret
aas
add
add
adc
(bad)
cmp
xor
mov
pop
ja
cmp
les
and
push
daa
sub
xchg
(bad)
sub
out
les
mov
sub
push
push
cmps
aam
ins
adc
scas
cmp
xchg
jbe
stos
lahf
or
stc
jge
xor
clc
vmovq
sub
mov
mov
in
addr16
mov
jo
out
ret
es
call
cmc
sar
movs
dec
mov
ss
xor
inc
daa
arpl
das
jnp
xchg
stos
mov
adc
outs
movs
cmc
pop
cmp
and
stc
pop
ins
inc
mov
lock
repnz
pop
shr
repnz
shr
iret
or
ja
jle
push
shl
icebp
in
xchg
lock
stos
in
data16
fsub
je
or
jmp
or
push
inc
pop
loop
loopne
retf
inc
movs
dec
push
mov
mov
jecxz
rol
call
sub
add
cmp
not
xor
mov
daa
and
gs
xchg
stc
jmp
dec
pop
xchg
push
out
cmp
pusha
add
lock
and
add
dec
sbb
fwait
out
retf
sbb
pop
cli
popf
push
mov
movs
sbb
inc
cmc
(bad)
into
lahf
push
mov
std
outs
xor
mov
test
add
xor
test
call
dec
add
mov
push
aam
jp
cli
in
jno
cmc
pop
and
push
pop
adc
pop
adc
movs
stos
jp
(bad)
ror
mov
arpl
aam
xchg
mov
imul
add
adc
dec
dec
jecxz
stos
mov
sbb
xlat
mov
nop
(bad)
push
iret
push
pusha
cld
mov
data16
ds
sub
lahf
(bad)
clc
jo
jecxz
shr
call
pop
js
mov
xchg
ret
xchg
pop
(bad)
mov
out
clc
iret
cmp
(bad)
cld
popa
or
adc
stos
outs
mov
xchg
jge
jmp
add
retf
mov
sbb
sub
test
cs
ins
pop
mov
sbb
sbb
retf
pop
and
loop
repnz
mov
push
mov
cmp
pop
adc
scas
fldcw
scas
jo
adc
jp
adc
xor
jmp
sahf
pop
lds
icebp
mov
xor
ficomp
sbb
stos
loope
mul
into
jg
jle
xor
clc
aas
ins
sbb
popa
jl
jo
jge
push
xchg
rcl
scas
scas
rcr
div
arpl
imul
fucom
inc
or
dec
push
jl
ficom
arpl
pop
jo
jle
in
add
call
push
cdq
pop
mov
xchg
es
aaa
icebp
(bad)
jno
ret
mov
and
push
gs
or
hlt
adc
add
xor
cmp
ror
gs
mov
jp
mov
pusha
repnz
dec
popa
ja
cli
xchg
pop
cmp
push
cmp
sub
dec
push
iret
popf
mov
int3
psllq
out
inc
rcl
jnp
mov
les
jns
mov
shr
jle
mov
jno
xchg
es
icebp
pop
ins
outs
push
mov
out
xchg
inc
xchg
mov
cwde
fsubr
inc
mov
cmp
daa
(bad)
pusha
pop
add
sbb
jecxz
inc
sbb
stos
repz
push
inc
iret
sub
jae
jmp
leave
(bad)
enter
mov
mov
iret
push
hlt
in
ins
out
jb
pop
int
xchg
push
leave
inc
mov
dec
xchg
bound
xlat
push
inc
lods
mov
push
pop
mov
mov
inc
fwait
or
add
popf
xchg
jo
push
pushf
or
add
stos
shr
popf
jns
jno
shl
pop
push
stos
xchg
outs
sub
fldcw
pop
fcomp
push
pushf
popa
stc
pop
push
icebp
and
daa
pop
xor
mov
aam
push
jnp
dec
fmul
sti
push
jo
pop
ss
fs
jp
test
in
or
adc
stos
inc
test
dec
retf
xor
xchg
push
aaa
inc
xor
add
int3
ins
dec
push
xchg
fwait
and
jne
jmp
or
shl
daa
add
mov
pop
pop
jg
jmp
mov
dec
jge
scas
popf
xchg
scas
stos
enter
fwait
outs
jbe
mov
lods
ret
arpl
loop
aaa
dec
dec
aaa
stc
loope
nop
mov
imul
jle
dec
pop
sahf
mov
and
fild
jno
add
inc
shl
call
fwait
and
out
int3
addr16
repnz
les
inc
repnz
xor
pusha
xchg
dec
sbb
div
mov
xor
sub
in
push
leave
jmp
call
add
inc
in
dec
loope
in
jmp
or
add
or
mov
or
and
sub
movs
lock
adc
nop
cmp
(bad)
mov
lods
stc
mov
ins
pushf
clc
dec
mov
stos
add
and
mov
inc
shr
add
cmp
lock
nop
cdq
pop
arpl
(bad)
mov
or
push
mov
ret
mov
not
pop
jecxz
shr
push
out
xlat
ja
dec
cmp
std
das
mov
sbb
cmp
out
in
popa
std
cdq
fwait
jmp
inc
std
pop
jg
push
mov
js
jmp
stos
das
mov
imul
cmp
push
mov
mov
push
jp
jb
aam
mov
jne
rcl
adc
frstor
push
push
jp
in
popf
adc
addr16
inc
pusha
(bad)
test
xor
jmp
inc
cli
rcr
das
out
cmp
paddsw
sar
fs
xchg
xchg
or
inc
test
jl
loop
std
mov
test
dec
pop
test
(bad)
cmp
mov
ret
cmc
jl
cmp
pop
xor
ss
daa
mov
sub
es
sbb
push
in
jno
mov
or
into
nop
push
stos
call
aad
ss
test
inc
cwde
add
shld
or
adc
fnstenv
movs
xor
sub
dec
pop
jle
jbe
shr
xchg
add
retf
sbb
and
call
iret
mov
mov
jp
mov
and
lds
add
in
stos
xlat
(bad)
stos
push
and
push
jl
push
mov
adc
xchg
mov
pop
push
push
ins
je
push
repnz
xor
test
cdq
push
push
stc
scas
push
and
add
dec
or
adc
jmp
js
sbb
ins
inc
mov
popf
pop
pop
sbb
cdq
repnz
dec
into
push
imul
sub
cld
or
call
xchg
pop
in
stc
dec
sbb
out
mov
xor
les
push
loope
bsr
aad
sub
inc
outs
aam
inc
and
stos
nop
sbb
sub
pusha
or
push
mov
clc
and
sbb
imul
mov
ret
(bad)
out
cmps
mov
jbe
add
push
not
mov
bound
loop
std
jge
sahf
(bad)
mov
or
jo
add
push
jbe
add
ins
adc
mov
(bad)
popa
sbb
stc
sbb
mov
out
ret
and
and
pushf
add
mov
jp
(bad)
xchg
inc
ror
jns
mov
nop
dec
xor
mov
jmp
or
std
les
repnz
adc
push
hlt
dec
repz
or
sub
pop
push
mov
xor
jle
xor
push
pusha
lea
(bad)
cmp
push
jnp
cmc
(bad)
pop
mov
or
js
pop
sbb
jmp
sbb
repz
mov
xchg
xchg
fld
xchg
dec
sub
inc
adc
xchg
sub
ret
or
fst
mov
imul
imul
popa
mov
mov
or
or
adc
jmp
(bad)
jnp
mov
or
jne
pop
pop
and
js
fnstsw
or
data16
push
inc
(bad)
xchg
jmp
movs
jnp
and
daa
scas
mov
dec
and
rcr
xchg
cli
imul
and
cmp
daa
je
sub
sub
sbb
addr16
mov
and
mov
jae
call
add
sub
push
je
repz
fist
loope
xor
pop
mov
out
push
es
mov
dec
add
loope
je
jp
stos
cmp
out
mov
push
iret
gs
sub
jns
mov
in
fsub
or
jae
shl
div
les
sub
push
mov
xchg
jge
fs
mov
mov
cmp
xchg
sbb
cli
in
adc
cmp
dec
pop
cld
push
das
jnp
xchg
jb
push
sbb
leave
jmp
xchg
popf
mov
jecxz
call
fild
mov
out
shl
xchg
push
add
sub
push
push
pop
dec
sub
addr16
pushf
xchg
int3
test
jl
ror
hlt
mov
aaa
dec
call
cs
call
fisub
or
push
popf
sbb
int3
jp
ss
jmp
adc
push
jae
or
lock
pop
cmp
xchg
es
push
mov
mov
shl
scas
cmps
xor
pop
xor
outs
jp
mov
pop
jmp
sbb
xor
je
cmp
(bad)
xor
xor
pushf
mov
jle
test
into
jp
cmp
retf
or
or
popf
jecxz
or
scas
inc
aaa
fild
push
out
fldenv
movs
mov
pop
xlat
adc
pop
arpl
adc
pop
fwait
add
and
retf
mov
pop
lea
aad
int3
ror
jo
jecxz
ret
mov
ret
jmp
cmp
jne
retf
stc
cmp
mov
or
jns
fldenv
enter
cli
idiv
hlt
pop
fidivr
cli
sub
shr
add
xchg
shl
add
xchg
(bad)
dec
int3
dec
(bad)
cmp
xchg
xchg
shr
and
(bad)
jns
daa
hlt
stos
mov
xor
or
cmp
adc
pop
aad
enter
test
pop
jle
stos
mov
push
xor
cmp
mov
(bad)
aas
cmp
int3
imul
fistp
mov
sar
scas
dec
sub
retf
add
xchg
lock
std
push
out
cmp
pop
or
sbb
shr
jmp
jecxz
rcl
mov
mov
pop
cmp
aas
test
call
push
dec
jmp
mov
inc
(bad)
push
jns
xchg
sbb
mov
mov
pop
(bad)
and
sbb
mov
push
adc
lea
lock
inc
ja
adc
add
in
outs
lds
clc
aad
enter
xchg
cdq
(bad)
fiadd
dec
retf
adc
mov
xor
pop
sbb
data16
xchg
scas
mov
(bad)
cmp
pop
push
lahf
je
mov
mov
pop
rcl
push
xchg
addr16
sbb
add
xchg
aad
sub
jl
mov
enter
outs
push
outs
xor
jno
xchg
xlat
mov
in
icebp
adc
and
adc
ret
dec
mov
dec
mov
jmp
neg
push
out
icebp
inc
mov
mov
cld
inc
adc
sub
lahf
pop
ret
in
mov
inc
stos
xchg
fdivp
jmp
(bad)
mov
add
gs
(bad)
mov
in
rcl
fidiv
shr
adc
call
xchg
sbb
loope
xchg
loop
jp
push
call
aad
lea
aaa
pop
test
int
repnz
sub
bound
jns
sub
push
or
fdivr
jno
ror
jno
jecxz
mov
leave
jns
dec
pop
rol
mov
and
sbb
pop
add
or
pop
imul
(bad)
sub
sub
cdq
push
xchg
fimul
inc
retf
pop
xor
(bad)
mov
jl
jo
mov
(bad)
xor
fwait
mov
(bad)
ins
stos
sbb
loope
int3
cld
mov
cmps
imul
iret
dec
cmp
mov
jo
ins
pusha
(bad)
rol
repnz
lods
mov
sar
mov
cmp
push
jle
fistp
jbe
mov
idiv
(bad)
adc
fistp
jae
dec
ins
jnp
mov
push
xor
(bad)
mov
call
std
add
adc
movs
fist
popf
out
cmp
pop
jo
jecxz
mov
push
add
sub
adc
mov
mov
(bad)
mov
shl
pop
cld
mov
mov
std
outs
sub
imul
xchg
call
shld
push
sahf
arpl
inc
pusha
mov
(bad)
mov
adc
lds
pop
add
fidiv
call
test
pop
push
mov
inc
ins
xor
das
enter
adc
mov
add
ror
adc
adc
ins
shr
adc
fisubr
subps
inc
scas
adc
jmp
push
retf
arpl
sub
das
adc
jge
xor
cmp
xor
inc
push
mov
dec
fiadd
sbb
ins
aas
push
jle
sbb
aam
inc
and
add
les
loopne
lea
push
es
and
mov
call
adc
lock
adc
repnz
cmp
iret
adc
and
das
int3
or
or
out
jmp
push
jp
mov
cmp
mov
aam
dec
sbb
pop
(bad)
shl
mov
andnps
add
pop
xchg
or
enter
pop
pusha
lods
loop
sub
out
push
or
and
bound
jo
mov
(bad)
cmc
and
mov
dec
dec
or
mov
push
sbb
cld
dec
xchg
call
cmps
push
adc
cld
imul
sub
jne
(bad)
aas
xchg
mov
cmovno
sbb
js
inc
es
sub
cmp
mov
pop
jecxz
call
retf
aam
push
pop
jno
jae
cmp
mov
and
repnz
lods
push
loope
std
push
(bad)
shr
je
adc
aam
imul
or
or
add
mov
pop
mov
xor
out
jl
mov
cmp
cdq
pusha
dec
out
mov
sbb
daa
jb
stos
es
(bad)
clc
call
pop
pop
loop
fidiv
iret
pop
aam
push
push
pop
pop
test
push
scas
loope
jne
sbb
pusha
cld
push
pop
dec
ins
inc
rol
dec
push
dec
sub
add
dec
int
scas
popa
or
add
and
repnz
data16
mov
mov
movs
cmps
stc
jmp
push
fnstcw
sar
or
retf
dec
and
mov
(bad)
inc
add
push
or
in
ret
ror
sbb
sub
test
push
ret
(bad)
adc
adc
loop
call
jno
call
(bad)
aam
pop
cmp
les
aad
xor
jmp
stos
stos
or
pusha
xor
cdq
add
jne
lahf
das
mov
arpl
inc
out
in
shl
sbb
or
ja
stos
xchg
add
adc
sbb
outs
mov
iret
jbe
lahf
test
adc
daa
jmp
push
stos
out
shr
cmp
pop
out
xor
lods
fcmovbe
add
or
add
bound
xchg
fisttp
sahf
xor
mov
cmp
cmp
cdq
(bad)
mov
dec
lds
mov
push
fwait
push
icebp
push
sub
out
mov
cld
imul
cmc
dec
in
lahf
jmp
out
sbb
push
ja
lahf
adc
inc
mov
inc
loope
xchg
dec
add
stos
dec
(bad)
sti
aam
jno
sbb
loopne
test
(bad)
push
shl
fndisi(8087
cli
enter
iret
repz
clc
cwde
jnp
pop
jno
jbe
fld
sub
scas
fs
sbb
test
mov
dec
lods
xchg
popf
test
imul
daa
inc
lea
ret
data16
and
mov
pop
fadd
xchg
or
sbb
sub
mov
repnz
cmp
aad
cmp
add
leave
jle
test
inc
jne
scas
pop
sbb
jns
push
out
adc
sbb
push
in
jecxz
in
outs
addr16
cmps
xor
out
sub
xchg
and
jge
mov
cdq
aam
pop
outs
jo
xchg
adc
outs
int
add
bound
xor
push
xchg
inc
jne
cmp
enter
adc
(bad)
rcl
jb
cwde
and
movs
sub
jbe
pop
sbb
push
fld
(bad)
push
popf
mov
mov
xchg
mov
pop
jmp
test
mov
sbb
test
xor
(bad)
lea
jnp
mov
dec
jno
mov
neg
dec
or
and
inc
push
mov
test
scas
xchg
push
out
ins
mov
hlt
cmp
data16
mov
hlt
int
jb
push
or
(bad)
fwait
gs
dec
adc
dec
das
test
ja
shr
sbb
out
xor
xor
xor
sbb
push
lock
fs
xor
fimul
add
jmp
mov
mov
add
sub
push
test
sahf
fld
fisub
fsincos
repz
push
addr16
ret
xor
loop
int3
pop
sub
aas
stc
(bad)
cmp
xlat
fldenv
call
ja
pop
xlat
mov
repz
and
xor
mov
xor
fsubr
and
mov
and
sahf
stos
xchg
pop
shl
hlt
sub
aad
popf
push
hlt
sbb
jmp
jp
mov
mov
mov
jno
sar
aaa
leave
inc
xchg
xchg
mov
in
loop
or
scas
or
ds
xchg
outs
jns
fsubr
sbb
mov
gs
jne
dec
daa
aad
xchg
xchg
sub
and
pop
xor
dec
add
add
push
push
int
sahf
jo
test
push
mov
das
sub
stos
fistp
outs
(bad)
xchg
jb
(bad)
(bad)
xor
mov
cmp
add
mov
cmps
fsub
test
push
gs
dec
or
scas
and
shr
scas
icebp
jg
pop
les
(bad)
loop
lea
aam
mov
cli
lea
mov
add
push
xchg
repnz
xchg
adc
or
mov
mov
sub
fwait
out
dec
(bad)
lods
mov
and
or
mov
mul
(bad)
mov
je
sbb
and
call
es
push
mov
push
inc
loopne
inc
sbb
or
xor
pop
sub
int3
dec
es
sahf
in
jbe
mov
(bad)
add
mov
pop
leave
bound
dec
call
ja
dec
arpl
mov
xor
jg
jno
ds
dec
push
mov
cmp
fisttp
icebp
arpl
movs
movs
fadd
shr
inc
test
and
pop
inc
stc
and
push
inc
sub
jae
jge
mov
xor
scas
mov
push
imul
mov
pop
sub
js
test
stos
icebp
pop
pop
test
and
mov
(bad)
imul
mov
xor
aad
push
(bad)
push
mov
add
out
das
xor
push
jg
sbb
ins
ja
mov
mov
out
es
sbb
icebp
ins
stos
mov
cmp
jecxz
in
retf
cmps
(bad)
rol
dec
ss
push
fwait
popa
jae
shl
lods
adc
inc
mov
(bad)
leave
add
sar
popf
mov
cmc
cmps
hlt
cwde
inc
adc
pop
push
jns
jne
loope
sub
push
mov
mov
mov
jmp
cmp
loopne
inc
lock
lods
cmp
rcl
js
outs
dec
sub
push
js
enter
jnp
jmp
fcom
out
cmps
dec
lea
ret
add
mov
rcl
or
gs
mov
in
mov
and
into
and
aam
leave
out
out
call
mov
mov
es
es
xchg
(bad)
cli
push
dec
int
(bad)
test
icebp
xchg
push
popa
jne
mov
lea
inc
je
dec
or
jno
jecxz
cmp
jl
add
nop
sub
lds
dec
std
xor
test
inc
jmp
inc
sahf
jb
push
mov
xor
or
imul
push
or
(bad)
leave
aam
es
popa
push
dec
push
int3
pop
dec
int
out
mov
cmp
adc
sub
cmc
push
into
aam
dec
add
stc
mov
cwde
gs
movs
mov
ret
inc
(bad)
xchg
or
les
and
push
pop
xor
icebp
add
js
xchg
and
sbb
jb
jge
or
pusha
in
loope
xor
inc
ss
sti
xor
inc
arpl
int3
cmps
out
adc
xor
xlat
xchg
sub
pop
xchg
(bad)
jmp
sub
dec
inc
fist
xor
and
repnz
clc
cmp
mov
mov
xlat
retf
fild
xor
xchg
xor
pop
push
jbe
imul
mov
or
add
fbstp
jle
sbb
xchg
pushf
icebp
adc
mov
repnz
sub
icebp
out
mov
push
sbb
mov
sbb
outs
mov
test
mov
dec
ins
jnp
ss
ins
ficom
jnp
loopne
xchg
cld
mov
mov
out
push
cdq
pop
cmps
xchg
jl
push
repnz
sub
cmps
cmp
jmp
xchg
lods
pop
pop
sbb
cmps
(bad)
sahf
stos
lods
movs
xchg
push
retf
jno
pushf
retf
call
(bad)
stos
sbb
xor
idiv
xor
repnz
aaa
jge
and
es
dec
and
out
inc
jns
sbb
mov
(bad)
les
ja
in
xchg
bound
scas
test
inc
cmp
adc
inc
inc
das
jge
popa
xor
and
das
dec
out
mov
xchg
ror
xchg
sbb
mov
ds
es
in
xchg
cmp
cmp
xchg
bswap
pop
pop
adc
jp
dec
push
push
shl
pop
sub
or
sub
lds
std
mov
push
jo
adc
rcr
sbb
or
inc
dec
out
test
int3
aaa
sbb
sub
jecxz
inc
dec
leave
jno
pop
xor
nop
mov
pushf
dec
adc
(bad)
nop
xchg
push
jle
test
iret
imul
adc
fst
jno
xor
xor
push
inc
ret
mov
push
inc
sbb
enter
in
sbb
mov
(bad)
xchg
dec
popa
cmps
fidiv
fld
mov
bound
clc
push
outs
mov
xor
test
(bad)
or
or
mov
push
push
lahf
jecxz
cmp
inc
pop
mov
add
cdq
(bad)
repnz
or
fdivr
iret
fsub
daa
sub
data16
and
dec
jb
ret
xor
or
dec
add
cmc
hlt
lahf
xchg
push
or
(bad)
in
push
sbb
call
rcr
add
call
ins
ja
fisubr
mov
sbb
mov
pop
(bad)
pushf
scas
mov
pop
xor
xchg
jmp
push
in
cmp
jle
pop
pop
fadd
popa
outs
mov
mov
aad
pop
dec
push
jle
test
push
jbe
test
dec
sub
jns
sub
xor
mov
out
inc
clc
sar
ja
pop
jl
sahf
daa
inc
retf
(bad)
out
mov
jns
enter
mov
mov
and
mov
mov
xrelease
pop
push
mov
idiv
push
fcomip
cli
jmp
xchg
inc
repnz
jb
jae
jmp
adc
(bad)
retf
es
into
test
pusha
scas
or
push
movs
mov
sub
pushf
pop
push
sub
lea
movs
add
mov
add
call
mov
mov
sub
fisttp
daa
ins
mov
add
in
mov
jnp
retf
mov
imul
mov
cmps
ja
push
dec
arpl
mov
mov
aam
jge
rcl
test
cmp
adc
out
pop
test
dec
ins
sbb
repnz
push
test
sti
ror
icebp
imul
shl
shl
adc
inc
fisttp
mov
push
sti
adc
xor
mov
xchg
or
cmp
fs
mov
mov
shl
fs
ffreep
stos
inc
jae
xchg
dec
and
enter
jo
mov
push
shl
dec
cmp
mov
pop
dec
call
fiadd
es
dec
cmps
in
retf
jecxz
movs
retf
movs
or
aas
hlt
push
ds
add
and
sub
in
xchg
lahf
out
shl
dec
xchg
xchg
daa
pop
mov
and
xor
es
inc
inc
retf
and
xchg
and
pushf
scas
cmp
pop
push
mov
clc
fcom
lock
rcr
sub
outs
mov
je
cli
js
clc
mov
ins
mov
cmp
mov
dec
mov
or
in
cli
xchg
dec
test
(bad)
ret
dec
xor
pop
neg
add
mov
pop
xor
push
cmp
add
jge
loope
loope
cld
mov
mov
cmps
mov
cli
dec
out
or
and
retf
jne
mov
or
sbb
lods
shr
les
rol
dec
(bad)
mov
adc
pushf
aas
test
cld
mov
fisub
push
cmps
and
sbb
(bad)
movs
movs
pop
mov
aad
popa
rcr
add
xchg
cwde
mov
lea
daa
sub
adc
mov
(bad)
and
aad
out
sbb
mov
inc
xchg
jmp
cmps
xor
into
sbb
add
jmp
mov
inc
pop
sub
(bad)
and
clc
sbb
mov
gs
add
or
push
push
test
stc
xchg
adc
jp
inc
cmp
pop
dec
out
sbb
daa
sbb
movs
dec
repz
(bad)
call
gs
xchg
push
xchg
int
jmp
mov
xor
sub
lods
and
mov
add
fcmovnbe
pop
cli
scas
push
sbb
js
add
mov
mov
loopne
cmps
xchg
pop
sahf
add
mov
mov
arpl
rol
dec
ss
cmp
push
imul
jecxz
adc
test
dec
(bad)
xchg
ss
and
sbb
jbe
in
sub
adc
shl
cwde
cmp
xchg
ret
mov
test
jne
pop
retf
mov
push
dec
jmp
or
adc
mov
and
pop
mov
lock
dec
jo
clc
data16
mov
dec
out
mov
(bad)
mov
test
mov
mov
push
inc
test
pop
repnz
cmp
cs
or
sbb
inc
dec
vpaddsb
dec
out
jno
fisubr
xchg
dec
jmp
jmp
aad
pushf
xchg
dec
inc
add
cmp
mov
ror
into
xlat
into
std
mov
cmp
(bad)
fld
sub
xor
cs
dec
out
push
mov
xlat
inc
jge
push
sbb
dec
(bad)
ror
int3
add
stos
fdiv
pusha
inc
or
test
adc
mov
and
xor
test
dec
xchg
icebp
mov
loope
fs
push
xor
fadd
pop
jmp
mov
loope
rcr
cli
jns
adc
push
push
inc
sub
xor
xor
jge
pushf
into
sbb
sub
jg
mov
std
mov
test
movs
push
dec
jp
leave
mov
adc
call
cmp
xchg
inc
and
pop
mov
lahf
mov
in
jp
push
sub
movs
cwde
add
clc
scas
jmp
pop
(bad)
or
ins
xchg
mov
dec
jne
les
cmps
dec
aaa
sub
push
iret
scas
adc
mov
adc
arpl
pop
sub
ret
cmps
mov
mov
xchg
stos
xor
out
ror
sub
fnstsw
pop
mov
(bad)
jo
jmp
jmp
call
cmps
mov
jp
test
addr16
gs
repnz
fdivr
outs
xor
ficomp
sar
lea
inc
xchg
stc
fsubrp
push
adc
std
xchg
add
jo
js
shl
imul
pop
gs
es
mov
ror
repnz
mov
rcr
xor
sti
(bad)
iretw
sub
sbb
imul
out
mov
lock
scas
and
in
ja
pop
xchg
xchg
addr16
ficom
push
into
mov
fs
adc
sbb
pusha
popa
push
cmp
mov
dec
and
je
enter
add
push
xor
or
fwait
repnz
push
xchg
daa
cmps
bound
mov
jo
mov
xor
xchg
inc
test
pop
xor
fistp
cmp
fdivp
xchg
dec
lahf
push
push
in
test
push
int
xchg
cmp
jns
jle
bound
jle
mov
(bad)
je
(bad)
xchg
mov
mov
push
add
sbb
cmc
rol
mov
jmp
imul
pop
cmps
int3
stos
ret
sbb
cdq
pop
and
mov
pop
add
add
in
imul
pop
fwait
test
dec
cmps
rol
pop
cmps
sahf
repz
pop
leave
jmp
aad
fisubr
mov
jns
jb
int3
cmp
xor
mov
mov
aas
xchg
mov
rcr
in
jo
lods
add
pop
jecxz
cmp
xchg
leave
shr
xchg
cwde
enter
jge
hlt
fcomi
fldcw
sub
dec
and
inc
push
adc
aas
fistp
call
js
dec
cmp
xchg
inc
ss
daa
pop
jle
xor
loopne
mov
aam
jno
lock
add
ja
push
sti
xchg
xchg
addr16
pop
mov
inc
out
das
mov
push
sbb
mov
add
out
in
mov
fnstsw
cld
std
mov
fst
dec
mul
aas
in
jmp
sbb
ret
mov
jnp
adc
sub
xor
outs
aas
dec
aas
dec
pusha
ja
imul
jnp
outs
mov
dec
pushf
jbe
movs
adc
fist
sbb
(bad)
push
(bad)
xlat
sub
mov
(bad)
repz
xor
(bad)
pusha
ret
mov
xchg
pushf
mov
lds
dec
cld
retf
sar
(bad)
lahf
mov
mov
std
push
mov
push
pop
pop
xor
rcl
mov
mov
pusha
pop
mov
xchg
(bad)
pushf
(bad)
jne
mov
pop
cmps
imul
into
outs
sub
ins
cmc
pop
xchg
xchg
fs
rol
xchg
pop
mov
xor
shl
rcr
jmp
and
repz
dec
pop
sbb
push
pop
call
xchg
ins
jns
mov
dec
jle
ins
pop
mov
sbb
sbb
fwait
mov
lock
pop
into
aam
mov
mov
out
cmp
adc
add
jle
jne
ror
mov
pop
movs
lahf
pop
mov
xchg
mov
imul
inc
push
shr
scas
pop
dec
lock
jne
and
jnp
mov
mov
lods
cmp
dec
dec
xchg
mov
stos
sbb
xchg
jmp
aad
div
(bad)
xchg
fdiv
sbb
jmp
outs
dec
std
adc
imul
add
jle
loop
ret
or
fadd
cmps
push
iret
push
lods
vprotw
mov
(bad)
sbb
adc
cmp
adc
add
in
sub
mov
adc
test
mov
lahf
ret
into
outs
shl
jecxz
xor
lds
popf
mov
and
mov
add
xchg
aam
lods
test
ins
xor
adc
sub
mov
ja
iret
jecxz
cmp
retf
arpl
into
adc
or
sbb
mov
loop
sub
ds
add
imul
or
imul
cmp
dec
add
int
das
out
sbb
fsub
cmc
xor
push
dec
sti
and
sub
mov
xchg
rol
pop
mov
loope
cmps
pop
pop
mov
lods
mov
adc
inc
push
idiv
add
dec
mov
xchg
mov
(bad)
test
sahf
inc
(bad)
pusha
xchg
lods
push
xor
aaa
in
cmps
cmp
add
(bad)
xchg
adc
cmp
mov
lock
add
outs
dec
xchg
icebp
nop
push
add
lahf
adc
ins
jmp
shl
movs
(bad)
daa
mov
(bad)
lahf
xchg
jl
pop
dec
add
fdiv
push
fsubr
jmp
addr16
sub
mov
and
push
and
retf
and
and
aas
add
pop
cmc
nop
aad
std
jnp
(bad)
jp
jle
cs
out
mov
test
and
pop
and
inc
xor
imul
bound
push
xor
push
stos
outs
xchg
ret
aaa
cmp
jle
xor
(bad)
mov
inc
xchg
and
jg
addr16
ret
jno
and
xchg
ret
mov
ret
inc
icebp
inc
dec
cmp
push
mov
mov
sbb
sub
inc
icebp
ret
adc
out
xchg
pop
add
mov
sbb
(bad)
ja
in
or
jmp
inc
rcl
sar
ins
xor
dec
or
mov
mov
sbb
retf
dec
dec
sub
clc
mov
xchg
(bad)
jg
xchg
addr16
imul
xlat
or
dec
mov
jae
test
es
mov
mov
jge
jno
test
push
out
sub
inc
daa
mov
sti
push
sbb
or
(bad)
jae
sub
fst
cmp
sbb
es
bswap
mov
ds
xor
imul
dec
push
ret
add
push
pop
push
imul
fidivr
dec
rcr
push
loopne
retf
test
test
sbb
iret
push
pop
loop
push
iret
adc
mov
fimul
dec
test
enter
xchg
fidivr
push
mov
or
aad
bound
test
sbb
jbe
sbb
scas
xchg
fcmovne
ror
pop
cmove
pushf
lea
mov
push
jp
retf
jbe
sbb
repz
das
rcr
cmps
mov
push
jmp
retf
das
jns
call
cwde
jg
add
ret
jo
test
push
jg
fwait
mov
ror
test
cmp
enter
inc
into
cmp
loop
cmp
and
jo
lods
jnp
cmp
aaa
ror
rcr
pop
pop
into
or
pop
gs
push
sar
je
xor
jmp
test
mov
pop
pop
add
mov
fsubr
ret
(bad)
enter
ficom
fstp
ins
and
xchg
ficomp
xchg
aam
cli
sbb
sti
xchg
das
inc
xchg
outs
jle
bound
or
dec
pop
enter
scas
imul
adc
xchg
jecxz
sbb
out
cmp
std
fucom
push
or
jl
gs
test
test
pop
add
pop
pop
adc
cmp
jmp
cmp
adc
mov
jge
and
adc
(bad)
jge
in
xchg
mov
jecxz
mov
mov
mov
retf
dec
retf
and
jl
pop
jae
fwait
inc
int
xchg
mov
mov
cld
shr
mov
mov
call
and
dec
loopne
call
rcr
outs
sub
mov
mov
jle
mov
xor
xchg
adc
jmp
call
lods
push
in
cmp
pop
fwait
in
rcr
xchg
icebp
lahf
mov
iret
mov
pop
lods
pop
pushf
(bad)
or
adc
shl
test
add
sbb
and
pop
out
ss
int3
cmp
jl
jmp
in
xchg
inc
xchg
test
mov
jbe
xor
push
nop
mov
cmps
xchg
fiadd
sub
pop
(bad)
ins
cmp
push
mov
(bad)
fbstp
outs
std
ret
pop
pushf
into
stc
or
aas
ja
inc
in
jecxz
dec
cli
test
les
xchg
retf
sub
(bad)
xchg
icebp
inc
dec
and
stos
cdq
mov
outs
test
push
test
scas
mov
call
mov
ds
movs
inc
inc
pop
cdq
das
test
lods
sbb
out
fsubr
outs
aas
xchg
mov
int
inc
adc
lods
push
pop
ds
std
out
mov
mov
test
std
pop
and
jmp
cdq
imul
inc
inc
popa
adc
repz
sub
shl
dec
in
sbb
or
ret
add
mov
fisub
(bad)
lock
aam
scas
cmc
pop
jo
and
mov
out
xchg
adc
inc
das
ins
adc
xchg
iret
xor
mov
mov
loopne
push
dec
js
lea
or
movs
jnp
rol
ins
stos
outs
movs
imul
xchg
jno
sbb
push
ins
stos
test
lods
and
and
fisub
push
xor
mov
adc
mov
push
push
jmp
sbb
jg
(bad)
pop
movs
push
dec
dec
outs
rol
push
sbb
sbb
(bad)
jmp
and
cdq
ins
(bad)
js
sub
lods
ret
lds
push
out
xchg
je
pop
and
and
iret
fisttp
mov
call
ja
mov
add
pop
or
sub
push
sbb
sub
adc
adc
push
sahf
lock
jae
and
and
xor
inc
ror
adc
jno
push
mov
rcl
hlt
cmps
in
mov
jmp
mov
adc
add
fmul
(bad)
call
test
or
loope
lds
add
shl
push
add
pop
bound
mov
inc
jae
sbb
ss
addr16
or
xchg
push
aas
stos
loop
sub
pop
xor
sub
sub
or
ins
adc
pop
and
sub
pop
sti
mov
nop
pushf
movs
dec
stos
repz
xchg
(bad)
mov
gs
mov
sbb
lahf
cmc
jl
cmp
mov
push
leave
push
jo
sbb
sub
repnz
pusha
shl
sbb
lods
push
push
fs
dec
xor
or
push
aaa
mov
xchg
pushf
ffree
sub
leave
scas
rol
sar
std
sub
in
out
outs
mov
and
std
mov
stos
arpl
push
pop
ins
push
inc
mov
das
xor
imul
outs
lods
and
cdq
test
or
xchg
sti
push
inc
ds
stc
dec
(bad)
mov
and
fdiv
xor
imul
adc
push
xor
mov
shl
mov
(bad)
cmp
push
mov
dec
sub
and
jo
and
mov
sub
aam
inc
call
and
popf
pop
es
mov
(bad)
lea
es
test
push
mov
pop
rol
pop
in
rcr
dec
stc
jns
cld
mov
aad
jae
into
sbb
clc
lea
mov
add
lods
ins
cmps
mov
fs
pusha
rol
cmc
out
adc
in
lock
mov
pop
rcl
rol
xchg
mov
mov
out
push
dec
jae
std
ret
adc
fsub
aaa
scas
repz
sub
sbb
sbb
imul
push
and
push
and
sbb
mov
and
sti
dec
or
sbb
adc
pop
xor
pop
inc
pop
enter
mov
pop
icebp
xor
mov
jmp
rcl
add
daa
xor
mov
push
cmp
dec
(bad)
arpl
fild
imul
ja
sbb
retf
loope
mov
ins
pusha
cmp
sahf
adc
clc
(bad)
xor
arpl
push
jno
dec
or
call
xchg
rcr
mov
sub
mov
enter
pushf
fmul
scas
fild
jl
xor
mov
test
call
ins
sub
mov
(bad)
fldcw
sub
mov
mov
sub
jmp
out
dec
les
into
jmp
xchg
cmp
stos
arpl
xchg
outs
mov
mul
pop
in
jnp
test
lods
mov
and
xor
jecxz
mov
sub
add
outs
or
cdq
and
int3
ror
mov
shl
xchg
mov
data16
sti
dec
pop
js
xor
out
iret
jae
lahf
pusha
fsubr
rcr
ss
mov
sar
cld
sub
lock
sub
add
xor
scas
in
jp
imul
pop
lock
lds
jmp
jge
pop
mov
push
aas
jmp
xchg
and
pop
jnp
shl
mov
fs
push
pop
imul
movs
add
(bad)
mov
add
xchg
jns
mov
mov
push
lea
sub
call
rcl
pop
xlat
pop
jmp
iret
jnp
xchg
aas
dec
repz
xor
icebp
punpckldq
cmps
or
int
out
inc
ja
(bad)
push
mov
cmp
sti
xchg
stc
inc
shl
jns
hlt
lods
sub
jnp
retf
jno
rcl
repnz
mov
cwde
stc
inc
arpl
lods
out
sub
xchg
imul
mov
mov
sti
mov
inc
imul
mov
mov
inc
xchg
ja
fld1
jmp
jmp
(bad)
in
mov
sbb
aas
fisub
aas
pop
pop
inc
rol
jno
push
imul
js
hlt
adc
xor
sbb
clc
out
mov
repnz
movs
inc
add
inc
test
jno
mov
nop
jl
ret
xchg
xor
mov
in
ss
in
and
repz
enter
imul
sbb
or
mov
inc
jp
lods
mov
inc
sbb
pop
icebp
pop
xor
cli
repnz
push
xor
jno
pop
inc
fst
ret
in
inc
push
test
shl
loopne
jmp
xor
xchg
cli
push
shl
mov
pop
clc
int3
jb
cmc
out
sub
mov
cmps
js
fisub
fistp
(bad)
je
int3
loop
xlat
jle
sbb
cmp
mov
retf
sbb
dec
cld
push
push
in
ja
retf
mov
pop
test
fs
cmp
stos
shr
sti
adc
jne
jb
pushf
jmp
lods
jmp
ficomp
push
loopne
outs
out
and
mov
push
mov
adc
dec
pop
in
xor
push
test
test
retf
aad
and
js
xchg
mov
aad
lahf
outs
jl
sub
xlat
hlt
xor
mov
mov
repnz
mov
ins
sbb
(bad)
hlt
xchg
or
aas
pop
dec
jp
adc
push
or
in
stos
fadd
ds
inc
and
test
jno
sbb
scas
cmp
in
xchg
lock
xor
and
dec
push
push
cmp
(bad)
les
push
mov
adc
ds
cmp
cwde
xchg
aas
cdq
js
mov
mov
add
or
dec
add
test
xchg
cmp
or
add
xchg
fstp
pop
xchg
cmp
jmp
fidivr
mov
(bad)
push
pop
cli
lea
fldenv
mov
push
jnp
stc
dec
popf
mov
movs
push
mov
and
cmp
aam
jnp
push
or
ficomp
jge
stos
sub
cs
push
(bad)
mov
xchg
pop
xchg
cmp
fs
retf
clc
test
rol
enter
pushf
jge
mov
(bad)
(bad)
mov
stos
loop
mov
shl
xchg
js
por
sti
jl
fwait
xchg
adc
jb
push
cmp
cmp
and
cmps
mov
pop
jbe
sub
inc
sbb
cmp
scas
mov
(bad)
(bad)
mov
nop
fdiv
loope
or
enter
call
test
mov
add
call
ins
fistp
sub
cmp
sahf
int3
test
sbb
fnsetpm(287
xchg
ret
mov
test
ja
and
xor
sbb
fdiv
add
lahf
out
jns
inc
pushf
jg
cmp
daa
dec
cmps
cld
loop
mov
mov
clc
pop
sub
lock
jne
setp
ss
call
call
jecxz
loopne
mov
repz
push
cmp
aas
xchg
or
or
(bad)
and
cmp
repz
aad
mov
mov
loop
not
inc
std
inc
std
lahf
cmp
cli
xor
xlat
fistp
xor
dec
call
fcomp
push
sbb
aam
inc
stos
in
imul
in
dec
aas
dec
jl
add
jns
stos
ss
loop
mov
pop
retf
and
pop
xor
stos
cld
inc
and
mov
sbb
out
jge
xchg
popf
jle
xor
pop
aam
imul
push
addr16
mov
inc
ja
iret
ret
cmp
cli
repnz
jg
dec
std
cmp
clc
push
fdivp
sbb
stos
std
aas
mov
cwde
rcr
pop
add
ins
xor
xchg
jl
mov
jno
arpl
or
pop
lods
in
jnp
int3
nop
push
push
push
fcmovne
std
or
popa
fldcw
je
xor
jmp
or
(bad)
mov
jl
inc
mov
inc
mov
retf
outs
aad
xor
mov
push
adc
mov
(bad)
cwde
retf
clc
rcr
ins
xchg
jg
jmp
xor
stc
fst
xor
aad
sub
pop
imul
idiv
popf
add
mov
jbe
cmp
cwde
cmc
jecxz
hlt
fs
and
ja
cmp
mov
dec
cmp
inc
repz
clc
call
push
cmps
cwde
mov
cs
ret
push
or
int3
sbb
movs
add
push
cwde
into
cmp
jecxz
adc
sar
and
push
adc
cmp
std
test
addr16
cwde
imul
sub
loopne
or
adc
adc
sbb
and
jmp
pop
cld
pop
mov
hlt
lea
and
js
xchg
and
mov
push
rol
mov
test
xadd
cmp
imul
pop
mov
cmp
mov
xchg
ins
inc
jmp
adc
inc
jne
(bad)
xor
sub
shl
xchg
lea
or
mov
lds
adc
fisttp
pop
dec
adc
fsubr
test
mov
ins
inc
test
xor
jg
mov
in
cmp
mov
adc
daa
je
cmp
outs
xchg
cmp
les
dec
stos
cmp
or
hlt
loop
loope
sbb
and
adc
add
add
loop
mov
data16
adc
not
test
dec
stos
lods
adc
pop
in
imul
inc
and
and
mov
pop
inc
test
push
xchg
adc
mov
int3
pop
pop
dec
loope
push
mov
xor
sbb
sub
cmp
mov
jle
jg
neg
push
hlt
stc
stos
movs
xchg
adc
lahf
sub
(bad)
mov
in
xchg
or
(bad)
jmp
ficom
imul
mov
cmp
dec
aam
repnz
mov
dec
std
push
cwde
inc
sbb
fbld
mov
pop
sahf
xchg
dec
fnstsw
inc
mov
adc
or
pop
lahf
mov
adc
and
add
mov
pop
xchg
xchg
mov
and
dec
addr16
(bad)
(bad)
mov
(bad)
fwait
or
sub
pop
nop
scas
js
push
test
mov
xchg
test
cmp
ret
adc
iret
not
cli
popf
or
mov
(bad)
xor
adc
pop
xor
or
cmp
mov
xor
mov
jae
mov
xlat
push
add
call
and
dec
push
inc
xchg
jbe
out
dec
mov
jns
inc
fwait
leave
pop
mov
add
fs
pop
into
cs
dec
mov
xor
in
xchg
(bad)
mov
jb
pop
test
std
xchg
dec
jbe
push
dec
ins
ror
fmul
mov
fidiv
lahf
lds
ds
shr
mov
stos
jbe
adc
or
jg
clc
adc
xor
std
imul
push
ss
adc
jmp
jg
cmp
js
(bad)
mov
jns
push
push
push
mov
cwde
mov
cmps
lods
pop
inc
fstp
in
mov
addr16
xchg
push
loop
jno
ret
sub
jne
repz
enter
js
es
das
pusha
mov
pop
pop
lock
int3
push
gs
jns
ss
mov
out
sub
add
shr
jmp
fisubr
sbb
ja
push
inc
ds
dec
mov
lods
jo
hlt
rcr
cmovb
rol
cdq
dec
retf
movs
div
mov
push
jno
dec
xor
outs
(bad)
call
in
stos
sbb
scas
les
push
outs
pop
cmp
mov
push
mov
loope
sbb
ja
daa
and
dec
xor
jmp
add
mov
mov
scas
adc
mov
push
add
add
retf
jno
loope
into
mov
jbe
ds
jns
aam
mov
mov
es
adc
jp
movs
stc
ins
or
ins
imul
gs
shr
cwde
mov
dec
mov
js
dec
jae
popf
jmp
sbb
stos
movs
in
arpl
(bad)
mov
sti
jo
jnp
dec
scas
inc
xchg
mov
cli
arpl
add
mov
pop
and
xlat
sbb
add
sbb
aaa
inc
dec
ja
movs
adc
or
sbb
xchg
iret
jae
mov
adc
in
outs
dec
inc
out
ja
jns
ds
mov
mov
mov
enter
push
mov
fistp
or
cmps
fnstsw
or
(bad)
loopne
pushf
sar
movs
push
mov
adc
pop
adc
jge
iret
iret
sbb
jge
xor
lds
push
pop
(bad)
retf
iret
retf
lea
loope
xchg
dec
and
jl
imul
shr
ror
aas
mov
sub
mov
lock
or
inc
pop
scas
adc
sbb
or
mov
call
add
shl
in
or
iret
fsubp
orps
jg
mov
dec
inc
push
xchg
scas
fmul
mov
(bad)
jl
les
jae
aaa
mov
addr16
fs
aam
mov
push
stc
popa
repnz
shl
cdq
repnz
fsub
push
movs
jae
in
test
pop
or
icebp
test
mov
push
push
xor
outs
outs
cdq
dec
sbb
bound
aas
(bad)
cmp
pop
std
jb
adc
fst
pop
outs
lock
test
sti
sub
mov
push
add
frstor
pop
loop
outs
test
int3
xor
xchg
mov
jae
retf
out
fdiv
cld
scas
shl
aas
clc
adc
pop
cmp
aad
sub
in
(bad)
imul
mov
mov
iret
call
loope
loopne
test
gs
mov
aam
pop
push
push
rcl
jp
addr16
fwait
pusha
test
push
cwde
idiv
arpl
hlt
or
mov
cdq
icebp
xchg
mov
cmp
out
imul
push
and
and
out
mov
dec
inc
scas
and
push
xor
popa
int
jb
mov
mov
loop
js
jmp
hlt
fs
retf
bound
dec
and
cmp
lock
adc
call
cs
daa
sbb
outs
pop
adc
xchg
add
rcr
fdivp
pop
popf
inc
sar
in
cs
jge
pop
cld
xchg
loop
cmp
pop
out
jbe
cmp
pop
mov
jmp
stc
jns
ins
je
into
retf
sub
adc
adc
xchg
mov
dec
int3
arpl
add
adc
popa
adc
pop
add
enter
inc
clc
loopne
push
pop
into
out
mov
loopne
leave
jno
in
inc
inc
xor
xchg
loop
mov
jmp
dec
cwde
dec
pop
nop
push
dec
fcomi
mov
lds
cmp
call
jo
fidivr
cmp
cli
call
loope
and
adc
movs
jmp
jne
stc
or
retf
push
inc
mov
jl
fst
pushw
adc
loope
push
enter
cmp
cwde
les
jo
adc
hlt
add
cmp
das
sub
add
and
jbe
arpl
fld
jg
rol
aam
in
dec
fs
inc
push
mov
out
sbb
(bad)
cmp
pop
(bad)
outs
call
bound
pop
and
mov
dec
lods
sub
fld
add
imul
test
nop
inc
ret
or
popf
popf
in
sbb
(bad)
jge
pushf
call
rol
(bad)
jne
sbb
jne
mov
mov
sub
pop
lea
xor
mov
stos
imul
cs
cld
sub
ins
test
cmp
mov
or
and
mov
or
call
jge
sbb
mov
mov
into
rol
pop
inc
cmp
or
jg
stc
dec
lods
ret
outs
cmps
es
out
imul
jae
push
ret
idiv
mov
jg
outs
movs
xchg
push
inc
inc
add
dec
(bad)
(bad)
aad
fst
frstor
jmp
and
xchg
jmp
xor
or
enter
ss
jbe
jp
push
xor
sbb
loopne
loop
(bad)
aam
jmp
sub
cmp
sbb
jp
test
mov
imul
push
mov
mov
bnd
retf
jge
jae
pop
je
ja
jg
dec
daa
jecxz
xchg
fldenv
movs
add
je
mov
aas
inc
mov
or
ins
stos
dec
push
inc
(bad)
pop
repz
adc
sub
(bad)
lods
push
pop
mov
cmp
pop
dec
ins
out
aas
jge
mov
xor
mov
push
in
and
movs
or
fwait
mov
in
push
test
cwde
mov
sar
fstp
std
sbb
and
movs
sub
test
enter
retf
mov
(bad)
cdq
out
shl
xchg
push
into
std
dec
fwait
push
scas
popf
test
jbe
in
sbb
sub
(bad)
pop
arpl
imul
not
jle
xor
push
jns
call
mov
ret
loope
test
sub
xchg
and
pop
dec
shr
js
scas
pop
xor
lahf
rcl
aam
push
fdivr
sub
dec
int3
inc
pop
jmp
sub
xchg
loop
or
out
xor
dec
adc
les
mov
scas
cmps
(bad)
or
outs
cli
cmp
adc
push
clc
in
sbb
mov
aaa
xor
or
frstor
(bad)
fistp
shl
mov
push
and
and
xchg
dec
retf
push
push
push
std
mov
mov
jl
xor
jno
mov
stos
in
push
outs
arpl
sbb
lea
xchg
aam
push
xchg
fadd
mov
ret
dec
retf
test
cmp
inc
adc
pop
push
iret
lods
inc
out
push
and
out
inc
cmp
in
pop
mov
shl
les
mov
dec
mov
(bad)
mov
fldenv
xor
cmps
ror
enter
outs
(bad)
icebp
mov
es
lds
pushf
shl
ror
je
jg
pop
popa
movs
adc
adc
fld
enter
pop
hlt
mov
pop
inc
aaa
ret
pop
add
repz
mov
pop
imul
loope
push
mov
inc
sbb
push
ds
adc
shl
adc
scas
imul
lods
(bad)
(bad)
push
pop
std
out
call
fucomi
aaa
jmp
sub
push
int
pop
pop
xabort
and
sbb
lahf
mov
dec
sub
sub
push
or
div
leave
or
int3
jnp
jp
sub
mov
adc
push
stos
mov
sti
add
jae
in
mov
xor
cmp
sbb
jns
dec
jno
scas
je
push
cdq
pop
fcomip
(bad)
loopne
add
popa
adc
stc
push
mov
xlat
mov
(bad)
adc
dec
loope
(bad)
pop
mov
rcl
pop
stos
imul
loopne
in
es
push
push
pop
in
mov
mov
(bad)
rcr
mov
ins
cmps
bound
nop
jmp
pop
(bad)
mov
cmc
fcom
jg
jbe
outs
and
clc
mov
add
push
push
in
push
icebp
daa
mov
retf
add
mov
loop
in
popf
and
leave
loopne
mov
jecxz
add
and
and
jmp
adc
ja
inc
mov
je
or
lods
in
mov
mov
push
ret
pusha
xchg
out
adc
jle
pop
mov
pop
and
in
adc
dec
iret
adc
cmp
in
cwde
push
ret
cmp
(bad)
(bad)
fistp
retf
xlat
lods
sbb
add
jb
sbb
push
cmp
fadd
mov
mov
ds
icebp
xchg
shl
push
cmp
retf
out
add
daa
cmp
and
jl
outs
inc
ins
jecxz
rol
pop
int3
mov
(bad)
and
call
jecxz
scas
(bad)
xor
retf
cld
fcom
shl
add
inc
out
jge
push
aam
lahf
rcr
or
retf
fadd
leave
mov
push
dec
dec
jnp
adc
jns
out
lea
iret
mov
lods
hlt
xor
ror
jo
pop
push
loopne
fdivr
fbld
data16
xor
(bad)
sbb
repz
mov
fcomp
(bad)
jl
sahf
fcmovnu
ins
in
ret
mov
pop
mov
mov
mov
pop
lods
imul
and
jns
inc
xlat
jae
jge
popf
call
fisttp
pop
js
jp
(bad)
xor
push
fld
xchg
test
adc
movs
cmp
adc
jno
stos
mov
mov
(bad)
jo
les
xor
lds
movs
aam
mov
repnz
gs
in
movs
pop
mov
push
sbb
mov
hlt
pop
xor
mov
jle
jno
std
int3
sbb
ja
mov
jb
aas
cli
test
rcl
iret
fst
mov
mov
or
je
xchg
lea
mov
cwde
nop
inc
mov
rol
mov
test
xchg
inc
(bad)
jo
and
sub
aaa
jmp
js
sbb
xor
ds
test
daa
add
mov
xchg
jl
in
in
mov
push
xchg
sahf
sub
mov
ret
and
movs
int
rol
test
mov
aam
fld
arpl
cmp
loop
dec
mov
lahf
and
or
pop
ds
in
sub
jns
cmp
xor
add
loop
push
stos
mov
pop
inc
sub
jae
pop
xlat
repnz
and
shl
cmp
push
imul
mov
jg
mov
xlat
movs
jle
cmps
adc
push
dec
adc
test
pop
fwait
xchg
iret
add
pop
jbe
sahf
dec
push
jbe
lock
cmc
lods
lahf
inc
xor
mov
add
shr
mov
mov
cdq
lock
xor
outs
inc
sub
xor
push
inc
xchg
jmp
test
data16
adc
aam
fist
clc
xchg
mov
mov
in
jge
in
fsub
xor
or
cmp
out
or
push
dec
ror
lahf
mov
mov
push
or
xor
rcr
enter
push
outs
sahf
sub
jmp
(bad)
push
data16
mov
push
ds
cmp
xchg
lahf
xchg
sub
push
cmps
scas
ins
mov
(bad)
int
aas
push
out
dec
fwait
in
add
js
push
jl
push
imul
std
sub
mul
mov
arpl
inc
rol
jecxz
inc
dec
ror
adc
sub
cmp
outs
(bad)
xlat
or
xchg
dec
call
faddp
sbb
add
xchg
in
fdiv
sub
inc
mov
movs
cmp
jns
int3
and
pop
into
addr16
scas
fld
mov
inc
pop
stos
add
mov
in
int
cmp
and
out
ret
scas
shl
scas
call
or
mov
push
xchg
mov
xchg
push
add
das
dec
inc
addr16
sub
mov
cwde
fwait
in
push
int
pop
and
push
fs
bound
clc
pop
icebp
fs
sbb
sub
in
sbb
pop
pushf
push
rcr
inc
push
imul
push
sub
push
shl
inc
push
sti
xor
mov
pop
std
lahf
mov
scas
adc
mov
test
test
mov
mov
xor
clc
pop
ror
je
retf
hlt
jae
pushf
add
mov
jne
(bad)
aam
loope
cld
mov
mov
(bad)
scas
mov
xchg
loop
xchg
stos
mov
psrad
fcom
mov
dec
fcom
ins
fld
int3
sti
mov
xchg
push
and
bound
stos
push
mov
push
shl
test
mov
test
mov
mov
inc
(bad)
pop
cmc
les
enter
sbb
push
ds
add
nop
stc
stos
lods
bound
jno
fs
repnz
hlt
mov
dec
xor
outs
add
ror
xchg
rol
cmp
dec
adc
jno
adc
repnz
imul
xchg
pushf
stos
push
mov
rcr
shl
popa
or
and
sub
cwde
jp
push
sbb
or
xchg
push
mov
enter
pusha
mov
pop
cmps
inc
add
cmps
pushf
dec
cmp
inc
(bad)
and
sahf
xor
pop
pop
jp
loop
scas
add
add
pushf
or
fs
xor
adc
jg
(bad)
pop
loopne
into
or
adc
mov
lods
mov
jp
push
(bad)
jp
pop
icebp
dec
(bad)
jge
call
scas
xor
mov
enter
dec
mov
outs
out
ret
pop
jo
imul
pop
pushf
jo
jmp
mov
sub
dec
test
rcpps
xor
ret
sub
imul
and
pop
mov
test
shl
sbb
cwde
pushf
fidivr
cli
cmp
cwde
xor
mov
fild
mov
sub
pop
sub
jmp
inc
push
mov
push
dec
movs
icebp
cmps
sub
mov
cwde
cmps
pop
dec
(bad)
ror
and
popa
xchg
jl
out
pop
push
push
aaa
jmp
int
sbb
pop
and
and
lea
fcom
test
nop
addr16
std
xchg
sti
imul
xlat
inc
push
add
sbb
dec
mov
movs
mov
adc
push
xor
jno
sub
and
pushf
xchg
add
pusha
les
popf
lods
jae
mov
sahf
push
inc
sub
sbb
popf
test
and
jle
xor
dec
xchg
cdq
rcl
(bad)
lds
loope
scas
mov
addr16
jp
ins
jmp
jb
imul
inc
fiadd
push
into
dec
addr16
jecxz
adc
movs
repnz
shr
test
pop
in
fsubr
(bad)
stos
pop
pop
add
xlat
jo
push
sub
mov
inc
xor
(bad)
or
sub
arpl
and
mov
cmp
clc
jae
inc
call
hlt
iret
clc
cmps
or
pop
mov
into
ret
test
pop
cmp
cmp
es
dec
push
sub
aaa
dec
add
repz
pop
dec
ffreep
mov
ror
adc
jne
adc
inc
icebp
cmc
xor
sub
les
hlt
xor
jno
sub
les
push
xor
mov
xor
in
mov
pop
fs
jge
jp
mov
loop
hlt
adc
ss
cmc
sbb
mov
push
or
(bad)
sbb
mov
add
leave
sub
addr16
std
popf
jg
ins
shr
popf
test
dec
xchg
mov
and
mov
in
retf
and
std
es
mov
or
push
pusha
and
rcr
pop
xor
push
test
xchg
seto
jmp
jge
cld
repz
mov
xor
lock
mov
jnp
jl
and
add
test
outs
and
sbb
push
int3
imul
and
(bad)
and
nop
movs
or
jg
inc
push
ss
fdiv
es
jne
pusha
push
iret
loopne
push
lods
jge
inc
mov
xchg
mov
pop
cvtps2pi
mov
dec
xor
ror
scas
aam
cmc
push
push
pusha
dec
lods
jne
push
(bad)
xor
mov
push
dec
push
mov
inc
cmps
mov
stos
mov
push
mov
jle
sub
fimul
jb
mul
xor
test
xchg
and
sub
mov
adc
inc
mov
(bad)
cmc
mov
scas
and
push
sahf
lds
retf
in
(bad)
push
into
add
das
pop
int3
(bad)
sbb
test
mov
push
iret
xchg
push
cmp
out
jae
mov
xor
mov
push
outs
ds
jbe
stos
sti
retf
retf
pop
pushf
jp
xor
movs
xlat
cmp
xchg
ret
mov
jmp
or
in
(bad)
scas
pop
lahf
sub
pushf
iret
movs
add
mov
mov
pushf
adc
mov
cmp
push
add
push
fcom
mov
xchg
mov
adc
stos
aas
je
neg
in
push
jb
fwait
das
dec
pusha
adc
and
sbb
ret
pop
iret
pushf
loope
mov
into
jae
ret
out
or
mov
mov
add
sub
sbb
loope
adc
fistp
in
xor
or
test
loope
ret
cli
sub
imul
xor
sub
(bad)
into
rcr
push
mov
imul
xchg
sbb
xchg
clc
jno
int3
dec
scas
and
adc
sbb
in
lods
cmps
not
popa
pop
repnz
ds
jne
cmc
cmp
int
out
adc
addr16
jo
fwait
cmc
fadd
xchg
pop
cmp
mov
cmps
repnz
lock
or
outs
out
mov
mov
inc
or
dec
in
dec
jns
aas
enter
shr
sbb
retf
pop
loop
in
add
lods
push
mov
push
rol
push
add
sub
jo
es
int
dec
outs
mov
aad
and
stos
and
add
ins
push
and
and
iret
xchg
add
fnstcw
ins
inc
dec
mov
(bad)
sub
mov
int
adc
loope
arpl
dec
daa
xchg
push
xchg
add
nop
test
mov
cmp
xor
cs
cmp
rcl
out
movs
jge
mov
adc
jmp
daa
xchg
add
ja
call
lods
sti
lods
mov
addr16
add
popa
push
mov
arpl
test
repnz
cmc
out
push
enter
adc
fild
(bad)
cmp
lods
xchg
or
xchg
sbb
or
aam
mov
inc
(bad)
call
pushf
sahf
outs
mov
inc
test
mov
mov
add
add
xchg
mov
stos
dec
push
retf
fisttp
add
fstp
dec
or
mov
cmps
and
sbb
jg
ret
jb
push
mov
fidivr
mov
pop
test
(bad)
fist
mov
std
jg
sbb
push
outs
jmp
and
jmp
int3
outs
mov
ror
inc
in
out
xchg
mov
push
push
(bad)
mov
or
ins
cmp
imul
jmp
inc
outs
(bad)
cmc
js
sub
push
lods
mov
cmp
js
pop
xlat
popf
sbb
or
dec
mov
xchg
out
out
jnp
outs
mov
call
and
mov
outs
xchg
ret
jg
xchg
cmps
sbb
shr
sub
or
jg
popa
mov
jl
sahf
je
jo
movs
pop
push
js
sbb
mov
jb
sbb
pusha
inc
mov
in
add
int
(bad)
jbe
nop
dec
push
inc
mov
test
cdq
mov
aam
adc
mov
push
push
xlat
dec
mul
xchg
jns
xchg
mov
popa
push
pushf
jo
pop
add
and
mov
(bad)
sub
aam
sbb
(bad)
cmp
ins
sub
push
daa
shl
jbe
adc
popf
lock
jecxz
xchg
push
iret
fs
and
(bad)
pop
xchg
inc
or
dec
mov
jnp
(bad)
(bad)
dec
jmp
ret
ja
(bad)
pop
mov
lahf
or
inc
cmp
dec
pop
pop
data16
(bad)
ins
mov
push
and
mov
test
xchg
add
adc
push
addr16
into
mov
test
add
mov
pop
and
pop
adc
shr
and
fcomip
pop
nop
sti
sbb
pop
fdiv
aaa
xlat
lock
cmp
clc
or
mov
adc
outs
cmp
xor
and
push
icebp
shl
mov
cmp
mov
push
push
out
fadd
pop
into
(bad)
adc
test
aam
mov
xor
lahf
xor
and
out
xchg
into
sub
or
jns
call
das
in
movs
scas
pop
mov
scas
inc
ror
pop
jmp
mov
mov
in
lock
call
sbb
push
pusha
or
nop
mov
jae
imul
jne
movs
repz
lock
inc
cmp
mov
in
jge
aam
xor
or
icebp
pop
mov
ins
ret
das
scas
dec
add
cmps
popa
inc
inc
repz
inc
mov
in
xchg
cmp
into
ds
cmp
and
(bad)
xor
dec
cmp
retf
push
(bad)
retf
ins
test
out
jl
xchg
push
and
and
adc
xchg
jg
js
xlat
jp
xchg
push
imul
dec
scas
pop
xor
cli
idiv
or
xor
xor
jmp
xchg
movs
fild
add
sbb
ins
out
sub
xor
pop
jl
add
lock
dec
jae
out
pop
fcmovnu
in
aas
test
mov
cmp
push
ret
and
aaa
pop
in
stos
push
ins
cmp
push
push
retf
xor
les
mov
test
mov
adc
inc
fwait
cmp
addr16
dec
dec
daa
mov
std
jmp
inc
or
mov
cwde
xlat
and
out
js
push
xchg
fs
jmp
test
and
repz
std
imul
enter
cmc
out
jbe
sbb
inc
push
fst
mov
imul
mov
int
gs
scas
and
xor
and
ror
and
movs
leave
or
mov
into
push
outs
fstp
out
push
adc
add
cs
cmp
pop
hlt
and
sbb
dec
lods
mov
mov
jns
cmp
daa
repz
or
sub
xchg
and
aam
dec
push
add
scas
stos
sub
cmp
xor
pop
retf
lock
pop
push
lock
sbb
mov
cli
cmp
add
xchg
or
pop
fcomp
mov
push
enter
int
mov
mov
xlat
push
mov
xor
jg
jmp
adc
std
inc
std
aaa
call
in
jae
test
jge
data16
and
cmp
int3
fimul
mov
out
ins
sbb
scas
out
jb
sub
sbb
loope
or
loop
(bad)
jmp
xchg
add
adc
hlt
xor
cmc
stos
cmpps
imul
addr16
jmp
pop
retf
out
mov
sbb
dec
inc
lods
mov
and
and
dec
add
push
jecxz
mov
inc
xlat
and
out
adc
(bad)
push
movs
push
xchg
and
sub
lahf
call
lds
outs
xchg
lea
in
mov
cmp
jae
cmps
push
sahf
dec
fldcw
jno
dec
daa
xchg
adc
mov
mov
js
shl
inc
jno
mov
or
mov
int3
xor
and
leave
cwde
mov
or
inc
mov
xchg
cli
outs
arpl
adc
into
push
lea
(bad)
shl
xchg
sub
push
getsec
sahf
xchg
and
retf
ficomp
mov
xor
cdq
or
std
pop
mov
jb
add
sub
mov
mov
fwait
in
pusha
imul
dec
(bad)
fcom
or
or
add
push
inc
mov
mov
push
sti
lods
mov
aaa
or
pusha
cdq
mov
or
adc
lds
pop
jmp
inc
sti
adc
mov
outs
xchg
mov
push
leave
pop
outs
cld
jle
(bad)
into
push
cmp
cli
mov
mov
and
retf
or
stc
mov
mov
pop
imul
push
loopne
mov
sub
shl
cmp
jg
test
sub
arpl
test
xchg
(bad)
rcl
lea
sbb
mov
dec
sub
mov
push
push
fnstenv
ficom
inc
ja
cli
sub
dec
sti
int3
xor
nop
push
inc
ds
xchg
xlat
leave
das
aad
mov
popf
push
retf
loop
loope
cmp
nop
push
or
imul
ja
add
loop
inc
enter
push
outs
jl
push
mov
pop
xor
mov
loopne
and
jmp
loopne
xchg
daa
cmp
lock
push
rep
mov
repz
push
addr16
sub
out
and
jp
loopne
pop
fsubp
mov
lods
aam
out
clc
sub
jb
lods
mov
pop
mov
push
mov
(bad)
jl
cmps
scas
lea
adc
nop
call
dec
mov
ror
rcr
sbb
out
pop
xchg
in
je
cmp
mov
or
or
div
sbb
fidiv
leave
imul
ret
or
inc
dec
ror
dec
rcr
in
bound
pop
push
mov
mov
and
gs
call
lds
or
sub
add
(bad)
pop
lods
fisttp
test
xchg
mov
push
cwde
jno
(bad)
pop
movs
scas
xchg
(bad)
and
rol
lahf
arpl
mov
gs
mov
out
jp
push
mov
jmp
lods
pop
pop
mov
add
sbb
jp
mov
scas
loop
sbb
dec
les
mov
add
mov
pop
cmp
dec
aaa
fucom
cmc
adc
adc
jmp
imul
push
mov
cmp
xlat
pop
mov
push
test
ins
cdq
jbe
fmul
jg
imul
sbb
mov
xchg
mov
jge
push
mov
or
lea
xor
outs
fwait
mov
retf
inc
movs
sub
adc
sti
add
out
sub
sbb
loope
bound
mov
adc
sub
or
neg
ret
sbb
pop
movnti
aam
and
loope
xor
cmc
(bad)
or
outs
mov
setle
ror
inc
xor
jp
jg
mov
pop
mov
push
mov
inc
out
retf
sbb
imul
sub
push
mov
inc
add
mov
(bad)
mov
mov
and
outs
push
cwde
aaa
inc
jbe
aaa
scas
loopne
pusha
rep
xor
aad
out
in
iret
jmp
cmp
xor
mul
push
shr
jmp
jecxz
and
and
shl
jg
data16
jae
mov
fnstcw
adc
jno
mov
cmp
cdq
jmp
neg
loope
cmp
mov
mov
xor
pop
outs
cdq
add
gs
sbb
sbb
dec
pushf
sbb
mov
xchg
add
jns
jns
sar
cs
and
cmp
mov
mov
push
pop
xchg
mov
cmp
imul
mov
shr
ds
aam
jb
gs
adc
xchg
sbb
cmp
dec
xchg
push
add
add
xchg
sub
lahf
lahf
shl
cmps
push
(bad)
jo
mov
test
je
sbb
cwde
mov
std
loopne
pop
sub
cmps
lods
mov
out
mov
in
int
sub
mov
or
adc
cmp
fidiv
popa
pop
dec
es
hlt
test
add
mov
sbb
push
inc
xchg
inc
fwait
std
dec
fistp
and
jno
xor
stos
xchg
pushf
into
xor
xchg
inc
jo
push
js
ja
pushf
test
fwait
mov
or
xor
sbb
xor
test
mov
dec
ins
mov
add
into
mov
xor
js
aas
sbb
and
in
clc
enter
addr16
cmps
prefetchw
or
scas
push
sub
(bad)
xor
jae
jne
push
arpl
cs
cmps
mov
test
adc
(bad)
jnp
clc
pop
scas
loopne
push
push
mov
addr16
xchg
xchg
int3
jae
sahf
push
and
push
es
fisttp
cmp
ror
in
adc
gs
inc
mov
xlat
xor
pop
movs
inc
es
pop
cmps
cmps
mov
in
mov
adc
dec
shl
add
sub
cld
movs
dec
je
or
pop
retf
cmp
mov
xor
ret
popa
(bad)
fmul
inc
test
sbb
mov
aas
push
in
jae
dec
or
std
mov
inc
mov
in
mov
xchg
cwde
ja
or
(bad)
cmp
pop
adc
jbe
add
cmp
jg
sbb
push
mov
push
std
hlt
ror
jae
xchg
lock
pop
mov
xor
rcl
inc
adc
aam
jno
push
fnsave
dec
or
aas
mov
rol
movs
outs
mov
lods
leave
sar
push
sar
inc
call
pop
mov
scas
in
test
pop
into
push
cmc
cmp
fistp
xor
aad
inc
add
aad
adc
jo
pushf
dec
dec
fs
int
mov
enter
xor
push
push
inc
adc
aam
sahf
aas
add
add
dec
pop
lods
in
push
mov
cmp
mov
cmp
sbb
dec
sub
and
ds
mov
movs
ins
cmp
mov
movs
mov
fnsave
mov
push
sbb
in
adc
mov
cmp
hlt
aas
cmp
outs
aad
lods
stos
sub
and
iret
mov
pop
or
mov
and
mov
xor
or
mov
xor
mov
cmc
daa
jae
sbb
push
ret
dec
dec
pop
adc
in
aad
and
add
jp
cli
dec
(bad)
pop
push
inc
or
ja
pop
(bad)
mov
(bad)
lods
les
cmp
mov
xchg
into
arpl
loope
pop
xchg
inc
inc
(bad)
jns
push
lahf
loope
cmps
lahf
xchg
jns
bound
push
push
dec
call
pop
inc
cmp
pop
aas
sar
inc
fisubr
je
mov
(bad)
sti
call
push
clc
sbb
sbb
scas
adc
out
and
mov
xchg
iret
pop
jp
jmp
push
cmp
pushf
out
inc
or
cld
aas
clc
sbb
add
sub
pop
inc
icebp
mov
jg
jmp
and
mov
inc
jno
mov
cmp
(bad)
push
and
nop
adc
iret
ins
clc
mov
aaa
jae
jmp
outs
cwde
out
je
add
mov
dec
out
push
pop
xor
adc
js
add
mov
sub
test
push
repnz
lock
adc
nop
movs
dec
jae
jno
test
pop
(bad)
sahf
xor
mov
push
mov
pop
or
je
or
cmp
or
retf
push
push
dec
sahf
mov
repnz
xchg
sub
dec
cmp
pop
xchg
push
hlt
mov
test
not
inc
jns
sub
xchg
mov
mov
rcr
sahf
sbb
sti
sti
data16
jecxz
not
scas
imul
test
cmp
inc
fisub
loop
ss
adc
test
movs
xor
sbb
retf
stos
dec
jg
xchg
mov
xor
push
ret
pop
outs
out
dec
xor
ret
rcr
xacquire
outs
jge
push
inc
scas
inc
pusha
mov
imul
mov
ret
(bad)
pop
out
cmps
xlat
movs
outs
js
scas
adc
test
rol
fsubr
mov
jmp
sub
push
xchg
add
fnstsw
ss
test
xchg
sub
sahf
push
sbb
adc
fidiv
test
inc
repz
cmp
es
and
mov
js
jae
fcmove
mov
sbb
mov
cmps
lock
out
add
test
mov
xchg
mov
mov
jg
mov
jl
sbb
mov
dec
(bad)
js
les
lods
nop
outs
gs
ret
hlt
xor
scas
xor
sub
mov
xchg
jecxz
mov
sbb
pop
xor
inc
sbb
(bad)
lea
lods
fdiv
adc
push
mov
xchg
pop
movs
sbb
xor
xchg
scas
and
cs
jmp
rcr
test
popf
gs
push
jno
addr16
mov
adc
xor
inc
xor
ins
xchg
in
das
data16
cwde
cmps
or
jno
jmp
inc
mov
and
or
cmps
arpl
inc
pop
xor
pop
(bad)
inc
loopne
test
lods
cmp
popf
aad
or
sub
inc
cmp
(bad)
jle
jno
shl
mov
fdivr
in
cmp
xchg
stos
ror
sahf
mul
es
push
leave
xchg
mov
xchg
push
int
(bad)
cli
adc
mov
cld
ja
cmc
and
xor
xchg
loop
inc
test
cmp
in
dec
pop
daa
aas
mov
inc
out
retf
push
nop
or
shl
sar
ins
imul
xor
pop
fwait
outs
and
mov
into
and
outs
dec
dec
mov
lahf
add
adc
fsubr
stc
cmp
(bad)
test
cmc
sub
mov
stos
mov
xchg
inc
mov
gs
rcl
pop
not
mov
imul
icebp
add
pop
jmp
mov
cmp
imul
push
jae
nop
fstp
call
in
test
xchg
jb
cmp
mov
in
lea
xor
add
daa
fistp
cli
lods
mov
mov
je
dec
loop
aas
or
or
shl
mov
and
and
dec
jo
test
push
mov
ret
pushf
(bad)
(bad)
shl
shl
mov
nop
sbb
in
scas
stos
and
mov
icebp
lods
add
or
mov
dec
scas
outs
jnp
and
and
push
push
mov
rcr
sti
pop
mov
adc
sahf
aam
mov
fdivr
xor
and
or
leave
push
push
popf
test
adc
ja
sub
pusha
fstp
test
add
out
rcl
or
xchg
aam
add
in
aas
cmp
popa
in
sbb
or
xchg
cdq
cld
ja
repz
addr16
mov
push
jnp
jae
pushf
test
sbb
inc
mov
sbb
(bad)
retf
pop
sbb
enter
sub
sahf
add
mov
ret
or
ror
jno
mov
hlt
mov
or
jl
inc
lea
xor
jmp
xchg
inc
and
in
jbe
std
inc
inc
push
fiadd
dec
cdq
les
push
jl
movs
lahf
add
xchg
fs
dec
loop
js
jbe
dec
pop
sti
pusha
xchg
jecxz
adc
or
into
test
(bad)
call
mov
mov
enter
xor
(bad)
pop
std
mov
push
mov
mov
xor
in
in
ret
jge
xchg
ret
das
lahf
test
aam
imul
push
dec
int
(bad)
xchg
mov
push
adc
pop
or
(bad)
mov
arpl
mov
mov
or
push
into
test
stos
into
pop
leave
jp
loop
outs
and
add
jbe
(bad)
loop
add
outs
shl
inc
jne
cmps
mov
cmp
repz
out
pop
or
call
push
sbb
mov
pop
lods
or
push
sub
xor
push
adc
mov
sub
and
cmp
add
or
lahf
retf
pop
jmp
mov
pop
sahf
fistp
mov
jmp
mov
mov
jle
push
push
cmp
fisttp
inc
cs
das
outs
inc
mov
(bad)
cmp
mov
sbb
fs
jmp
retf
sub
cmp
xor
mov
inc
and
push
sub
arpl
rcr
mov
fimul
xchg
(bad)
aaa
xor
sbb
std
repnz
int3
in
mov
icebp
out
aaa
add
stos
mov
test
push
mov
xor
sub
mov
dec
xor
es
dec
xchg
rcr
inc
test
into
movs
daa
add
mov
pusha
iret
popf
mov
(bad)
push
mov
cld
lods
fs
out
push
inc
pusha
leave
retf
jge
mov
dec
adc
int3
or
and
pusha
pop
mov
(bad)
aam
pop
xlat
in
enter
jno
fdiv
aaa
inc
std
sub
xchg
imul
jo
cli
xchg
add
outs
rcl
xchg
mov
retf
push
mov
fild
xchg
xor
fs
push
(bad)
mov
aam
mov
mov
and
cmp
pop
arpl
jge
inc
int3
imul
jns
out
out
sar
fiadd
mov
imul
and
mov
add
inc
and
inc
inc
push
add
in
jp
mov
xchg
loope
and
dec
or
rol
shr
loop
jle
inc
cmp
movs
addr16
sahf
or
test
aam
dec
mov
loope
fimul
out
sub
pop
shr
mov
adc
mov
inc
jmp
cld
(bad)
jnp
pushf
in
ror
jns
cmp
out
mov
in
xchg
fist
xchg
fdivr
or
(bad)
hlt
imul
add
sub
or
mov
xchg
pop
cmp
cwde
call
xor
sub
adc
iret
jne
xchg
pop
movaps
or
inc
mov
outs
mov
mov
test
loope
(bad)
scas
mov
in
push
pop
sbb
mov
(bad)
mov
cli
fbstp
aam
xor
xchg
gs
sbb
clc
dec
ror
jns
push
(bad)
dec
out
pop
push
sub
xchg
in
dec
xchg
mov
inc
xor
lock
mov
xchg
dec
xor
arpl
push
out
call
je
dec
(bad)
fistp
int3
xor
and
push
scas
add
call
pop
daa
rol
mov
jmp
jmp
jne
test
in
addr16
in
ins
jae
(bad)
call
push
adc
mov
xchg
mov
sub
cmp
call
xor
movs
sub
jp
sti
pop
dec
cmp
sar
leave
pop
xor
neg
jbe
jo
pusha
dec
sahf
aas
outs
xor
bound
addr16
pop
mov
imul
push
xor
in
std
push
push
pop
mov
popa
xor
adc
out
dec
cmp
cmp
cld
aas
or
jmp
inc
mov
xor
sub
pop
and
pop
inc
pop
cmp
call
xor
std
cmps
or
jge
xor
pop
push
loop
leave
or
lods
sahf
sbb
mov
(bad)
fsubr
sbb
call
jp
inc
or
fimul
or
imul
fisubr
gs
aad
loope
inc
xchg
lock
push
cmp
lahf
cmp
ja
pop
mov
fmul
inc
mov
add
jl
sbb
mov
cmp
adc
cld
lock
fld
hlt
mov
jb
and
outs
(bad)
out
inc
nop
adc
or
(bad)
cmp
retf
and
aas
jle
mov
adc
scas
add
mov
mov
cld
out
push
(bad)
push
xchg
adc
and
pop
push
hlt
push
xor
jge
test
pop
hlt
and
dec
or
and
jae
call
repz
int3
or
pop
lahf
outs
hlt
pop
sbb
pop
mov
(bad)
adc
and
(bad)
sub
push
pushf
das
(bad)
les
and
mov
arpl
adc
dec
and
jno
xchg
repnz
dec
xor
push
or
sbb
dec
or
push
xor
add
movs
jno
fxch
xchg
cmp
mov
outs
sub
push
gs
in
sahf
add
call
dec
mov
mov
lahf
and
fist
aam
in
fs
fistp
mov
call
fidiv
cmp
add
in
jmp
xchg
add
dec
std
test
xor
sub
addr16
push
cmp
add
mov
lods
lods
sub
jle
scas
add
in
pop
push
out
jp
scas
fucomp
hlt
inc
aad
loop
pop
iret
mov
neg
or
outs
ins
xchg
xor
sbb
pop
xor
push
cmp
repnz
inc
push
xchg
sub
mov
push
inc
dec
push
or
sub
mov
repz
xchg
(bad)
adc
loope
push
mov
pop
mov
hlt
xchg
pop
call
movs
call
out
cmp
mov
pop
push
adc
loopne
or
loopne
inc
stos
or
sbb
or
pushf
aad
mov
out
sbb
pop
add
hlt
xlat
daa
scas
and
fist
mov
jle
retf
gs
ror
fcmovnbe
push
cmp
mov
int3
and
neg
mov
dec
(bad)
aas
addr16
jns
jp
mov
pop
dec
inc
mov
mov
aad
test
clc
pop
imul
sub
ins
fdiv
sbb
loopne
ins
int3
in
xchg
jmp
lods
fcomi
xchg
test
icebp
repnz
into
push
in
add
ins
xchg
cmps
(bad)
cmc
ss
adc
xor
jo
mov
cmps
mov
leave
lea
and
mov
loop
mov
enterw
push
pop
addr16
pop
push
not
clc
ss
xchg
rcl
fwait
mov
les
sbb
pop
pop
fidiv
xchg
mov
mov
jmp
cwde
aad
fld
dec
fild
ret
dec
out
in
outs
mov
mov
les
pop
cmps
ins
mov
hlt
pop
lods
call
push
push
lods
jmp
mov
adc
cs
pop
jno
xchg
ret
xchg
mov
rcr
mov
push
inc
jl
outs
inc
or
jmp
push
cmp
stc
addr16
loope
sub
retf
jae
fidivr
pop
inc
fwait
movs
or
dec
pop
repnz
lahf
aam
ffreep
jl
frstor
sbb
fnstcw
inc
and
and
and
inc
push
inc
arpl
out
sahf
mov
pushf
nop
pop
in
sub
fwait
sub
retf
ffreep
pop
inc
mov
fwait
jns
push
mov
adc
out
sbb
aas
int3
add
sbb
mov
fucomip
xchg
and
mov
jnp
xchg
push
jg
addr16
pop
cwde
cli
shl
lock
cmp
pop
test
ss
jmp
or
pop
add
sbb
jne
into
jnp
dec
lea
push
aaa
fst
add
nop
scas
lea
jmp
(bad)
xor
clc
mov
imul
outs
mov
(bad)
test
sbb
mov
in
mov
sahf
inc
out
repnz
daa
jl
xor
es
idiv
shr
pop
test
test
sbb
xchg
adc
xor
dec
push
call
pop
pop
movs
sbb
add
cmp
mov
mov
lods
stos
cmp
call
and
adc
aam
or
or
inc
movs
dec
mov
cmp
cmp
adc
xlat
push
and
fidivr
(bad)
and
ins
push
aad
jbe
js
(bad)
mov
cmps
ss
js
js
mov
rol
push
xor
sub
(bad)
jb
scas
dec
and
mov
mov
sbb
cmp
nop
jmp
mov
xor
adc
or
sbb
int3
retf
jecxz
or
cld
jbe
push
add
shl
std
mov
mov
cmovp
xchg
imul
sub
xchg
(bad)
cmps
jg
xchg
adc
jl
jne
stc
mov
call
clc
add
popa
mov
aas
int
jl
sub
inc
sub
mov
out
ds
sbb
and
shl
dec
lea
shr
xchg
pop
ins
inc
push
xor
enter
pop
xchg
xchg
jnp
gs
jle
into
jl
and
jno
jne
fistp
sub
fdiv
pop
pop
mov
ret
lahf
push
xchg
ja
sub
in
pop
test
mov
fnsave
or
jb
(bad)
hlt
fcmovbe
fsubp
ss
out
call
leave
add
mov
sbb
(bad)
out
dec
es
out
jg
dec
loop
inc
dec
xor
fcmovne
enter
movd
ins
outs
pushf
jno
imul
or
mul
jmp
bound
enter
jp
push
jae
mov
jno
ss
int3
fisttp
lods
mov
aaa
or
jae
ss
imul
push
sbb
inc
repnz
ds
test
and
dec
test
js
dec
(bad)
xchg
push
or
bound
cmp
ret
and
addr16
mov
aam
lahf
mov
adc
cld
psrlw
je
and
xor
jle
mov
xchg
call
push
push
dec
xor
js
sub
sbb
xchg
enter
inc
gs
lds
aas
jmp
or
mov
mov
sbb
test
test
iret
jo
adc
pop
xor
pop
jnp
sti
cmp
xchg
aad
sbb
pop
inc
inc
fldcw
into
push
add
cmp
dec
sahf
enter
ins
dec
cmps
jb
sar
out
std
in
xor
not
mov
xchg
mov
cdq
dec
icebp
out
rcr
xchg
fnstcw
jl
ror
pop
test
test
inc
daa
mov
xchg
stos
test
add
push
sahf
shl
and
ja
or
mov
mov
xchg
adc
mov
cmp
sbb
mov
hlt
cs
jno
data16
or
ins
out
xchg
sbb
clc
sub
add
int3
push
lea
shr
fild
fist
cmc
into
jg
jmp
and
aaa
popa
fscale
inc
clc
push
fisubr
jo
push
or
mov
nop
pop
pop
std
cmp
(bad)
dec
xor
add
dec
out
jno
inc
mov
cmp
sub
ds
push
push
sbb
inc
outs
gs
shl
jns
xchg
cwde
fild
daa
dec
ficomp
mov
pop
mov
dec
fiadd
cmps
mov
jae
jo
neg
pop
mov
push
push
xor
les
sahf
ficomp
mov
jo
push
cld
(bad)
adc
push
int3
cmp
jmp
jecxz
cmc
rol
sub
ins
ds
jo
sub
mov
push
push
xchg
out
(bad)
inc
and
ins
bswap
iret
out
mov
and
sub
retf
jge
jmp
pop
jmp
push
rol
dec
fnstenv
xchg
fdivr
popf
adc
sbb
(bad)
mov
aas
pop
and
call
pop
mov
or
cmp
dec
lods
lock
xchg
mov
xor
and
test
sub
sbb
sub
iret
and
or
mov
and
imul
pop
jmp
push
xchg
inc
jmp
cli
push
sbb
jle
into
push
mov
sub
out
xlat
dec
inc
mov
sbb
sahf
das
stos
enter
add
and
cmp
jns
and
fdivr
push
sub
jle
jg
cmp
ss
xor
movd
jmp
jb
push
mov
hlt
add
xor
push
xor
mov
iret
into
push
xor
loopne
in
sbb
gs
xor
shl
jecxz
cmc
jns
popa
push
xchg
ret
adc
rcl
sbb
jo
push
shr
adc
imul
and
popf
mov
ret
dec
pop
fsubr
or
and
inc
mov
sbb
iret
repnz
lods
cmp
pop
not
sub
enter
or
(bad)
sub
js
(bad)
andnps
jnp
cli
cmp
clc
adc
lods
leave
push
gs
mov
test
push
int3
mov
retf
arpl
dec
mov
repz
repnz
es
push
adc
(bad)
hlt
imul
mov
pop
sbb
popf
int
xor
jp
or
dec
push
paddusb
aad
lock
sub
adc
(bad)
jmp
fild
mov
ficomp
inc
mov
sub
add
cmp
jecxz
rol
dec
std
inc
jo
jns
jp
adc
cwde
lahf
mov
nop
push
inc
sbb
jecxz
pop
adc
dec
lahf
aad
adc
jmp
inc
pop
call
jge
adc
sbb
lods
mov
jo
add
sbb
mov
ins
ror
and
iret
xor
adc
or
enter
sbb
dec
cmp
(bad)
movs
sub
out
sub
in
jb
push
mov
jp
cwde
lds
mov
xor
outs
inc
jmp
fistp
xchg
cs
sahf
rcl
jp
imul
(bad)
mov
xor
push
mov
dec
lods
fbstp
pop
jbe
out
loopne
mov
mov
adc
cdq
jb
mov
retf
shl
sbb
xchg
push
mov
mov
mov
shl
lock
inc
mov
jle
jmp
push
cs
add
xchg
inc
adc
ds
mov
adc
out
mov
mov
sbb
pop
xchg
(bad)
in
xchg
inc
xchg
mov
mov
rcl
cwde
inc
mov
sbb
in
push
bound
test
into
jo
std
sub
or
jae
jg
pop
pop
push
test
and
popf
cmps
gs
dec
adc
push
mov
pop
scas
mov
test
lds
iret
fistp
enter
add
sbb
iret
loope
not
push
in
(bad)
stc
cmps
out
scas
aad
loop
inc
cmp
mov
mov
mov
mov
bsr
sbb
or
xchg
mov
cmc
fimul
add
pop
ins
jmp
scas
inc
mov
jp
cmp
mov
leave
out
stc
sub
jne
loope
mov
add
jns
inc
lods
mov
adc
xchg
jns
scas
shr
cld
les
push
sbb
sbb
cmp
and
mov
pop
je
lods
cwde
out
rol
ret
dec
fs
js
adc
push
add
adc
sub
adc
repz
leave
cld
jl
shl
and
push
addr16
test
mov
pop
or
mov
stos
stos
xchg
aaa
repnz
xchg
mov
lods
sbb
sahf
mov
loopne
sti
imul
fdiv
mov
(bad)
push
fistp
rcr
fwait
sahf
or
ss
loop
jmp
pop
mov
js
mov
jg
mov
sbb
xor
shl
inc
or
data16
lods
and
(bad)
jne
pusha
pop
fs
inc
retf
xor
jmp
dec
adc
retf
fdiv
adc
xor
mov
fdiv
xchg
push
sbb
int
or
leave
neg
(bad)
mov
jge
fwait
cld
shl
jbe
mov
dec
lock
repz
addr16
outs
dec
test
xchg
inc
mov
loopne
ja
(bad)
in
loopne
data16
xchg
inc
mov
jg
ins
add
xchg
xor
mov
mov
adc
std
adc
push
sub
and
inc
adc
add
bound
sub
je
xchg
aaa
mov
popf
push
dec
pop
aaa
data16
mov
in
cli
jo
stos
or
ja
gs
pop
dec
(bad)
xchg
icebp
push
jnp
xchg
rol
stos
std
into
sti
loopne
xor
pushf
cwde
in
and
lds
adc
inc
(bad)
jmp
mov
jecxz
and
cli
retf
xchg
sbb
jb
cmps
dec
ja
or
scas
add
push
or
stos
xor
jg
dec
and
addr16
jno
mov
and
aaa
and
push
js
mov
mov
mov
movs
jmp
lods
xchg
shl
sub
dec
shl
pop
inc
pop
jecxz
dec
fisub
imul
mov
sbb
push
in
mov
(bad)
jmp
mov
retf
sahf
(bad)
inc
and
mov
cmp
jb
pop
shl
jecxz
je
mov
outs
pop
adc
lar
cwde
mov
xchg
dec
je
outs
mov
mov
cmps
dec
inc
dec
imul
sbb
push
inc
gs
pop
xlat
outs
sti
jnp
push
ret
lahf
icebp
scas
xor
sbb
scas
dec
fs
xlat
push
cmps
and
aad
push
sbb
aam
mov
add
sbb
pop
adc
or
out
cld
xchg
ror
jmp
daa
jmp
pop
lods
mov
inc
push
clc
(bad)
in
aam
xchg
call
lods
ins
jae
and
xchg
adc
ret
mov
ret
inc
mov
cmp
not
push
mov
out
shr
push
rol
and
ins
mov
es
dec
(bad)
lods
ret
push
(bad)
stc
cmc
div
and
push
repnz
dec
sbb
mov
inc
movs
(bad)
repz
dec
clc
jp
(bad)
jnp
sub
inc
stos
add
aam
leave
mov
pop
out
jb
jmp
sub
mov
mov
add
mul
mov
xor
inc
push
fwait
sbb
rcr
fwait
jno
sbb
or
sub
xor
std
pop
and
iret
jb
mov
ror
add
mov
xchg
test
ret
pop
cdq
cmp
cmp
nop
out
fcom
or
jecxz
add
outs
dec
xchg
scas
mov
loopne
lds
mov
das
push
sbb
(bad)
push
ret
aaa
movs
in
sbb
lods
cmp
call
idiv
call
xor
cmp
fwait
pop
xor
call
or
add
jae
ins
mov
in
push
sti
out
cmc
xchg
pop
loopne
ds
out
fwait
cdq
jmp
out
fiadd
iret
adc
jnp
push
movs
(bad)
and
adc
mov
mov
or
mov
(bad)
(bad)
pop
jae
(bad)
call
jbe
or
out
dec
xor
and
je
clc
lock
mov
adc
push
cmps
scas
jge
mov
jno
stc
jle
leave
in
mov
add
xor
lods
pop
js
push
push
sbb
clc
mov
push
adc
int3
mov
sbb
or
stc
rcl
rcr
test
ficom
xor
mov
stos
loop
stc
int3
out
or
(bad)
fisubr
xchg
aas
mov
add
fistp
xchg
out
hlt
adc
mov
mov
lods
or
jne
das
retf
sub
loope
mov
or
std
or
jmp
add
ins
in
sbb
mov
fs
aad
repnz
cmp
popf
adc
into
dec
push
aad
hlt
or
out
pop
push
push
mul
pop
pop
pop
mov
inc
sbb
ja
test
stc
xchg
sub
bound
hlt
sub
sub
movs
(bad)
(bad)
pop
aad
call
jbe
pop
and
test
mov
and
loop
(bad)
and
cmp
into
inc
hlt
test
cmp
(bad)
ja
cmp
dec
lock
sbb
fimul
xor
inc
scas
sti
xor
fisubr
sub
pop
jne
stos
dec
push
cmps
dec
movs
and
sbb
adc
in
loopne
and
lock
sbb
sbb
mov
push
add
pop
jnp
loop
push
enter
das
cld
jl
add
jo
aad
inc
jns
stos
xchg
xor
(bad)
in
fisttp
jmp
lds
ja
add
bound
xchg
call
popf
mov
push
dec
xor
sub
outs
imul
(bad)
scas
mov
and
sub
lods
(bad)
adc
xchg
int
jmp
dec
jge
mov
rol
cld
push
in
pop
xchg
and
test
ret
sub
scas
sub
lods
push
ror
sub
in
mov
dec
cld
push
sub
and
je
jl
(bad)
cmps
test
dec
mov
call
xchg
push
pop
into
mov
jl
add
mov
push
xchg
xchg
sub
mov
inc
jl
hlt
inc
adc
inc
xchg
xchg
shl
(bad)
test
mov
add
sub
in
scas
add
or
mov
imul
(bad)
mov
fist
pushf
push
test
push
mov
pop
add
pop
hlt
xchg
pusha
mov
and
out
fcmovnbe
add
inc
pop
jp
ret
adc
adc
hlt
cld
in
jo
sahf
fldenv
cmp
mov
outs
push
int
jecxz
sar
test
lahf
inc
into
xchg
not
(bad)
fcom
dec
pop
pop
repz
aad
bswap
xor
add
mov
lahf
jne
repz
xor
cmp
inc
out
add
jmp
lods
dec
pop
aaa
call
sub
std
push
mov
pop
adc
xchg
addr16
dec
pop
and
int
inc
sahf
repnz
fsub
and
fst
(bad)
hlt
vpsubusb
repz
test
mov
add
in
adc
hlt
xchg
clc
je
and
push
xor
add
pop
retf
repnz
ss
dec
int3
fst
ins
movs
in
test
dec
movs
loop
sbb
sar
shr
test
bound
sbb
cld
frstor
cld
int
std
scas
push
mov
add
addr16
(bad)
or
test
push
xchg
inc
sub
push
cmps
or
es
mov
push
(bad)
push
or
cmp
into
push
mov
fst
push
retf
idiv
add
test
arpl
jns
icebp
push
(bad)
mov
(bad)
mov
mov
or
cmc
popa
and
inc
imul
cmp
in
mov
aas
adc
pop
nop
push
xor
icebp
adc
and
dec
(bad)
aad
inc
retf
int
dec
fdivr
mov
aaa
popa
jmp
cmps
in
cli
arpl
mov
pop
push
push
repnz
and
fwait
iret
clc
dec
mov
cmp
xor
outs
hlt
push
add
loop
xchg
adc
aaa
lock
xchg
jp
mov
mov
sbb
jno
push
jg
out
loope
adc
out
out
sti
test
push
mov
pushf
fs
mov
and
div
inc
pop
xlat
repz
and
shr
stc
add
xchg
xor
and
arpl
cmp
lahf
pop
out
mov
stc
adc
scas
mov
mov
lods
iret
addps
aad
stos
imul
dec
stos
loopne
das
loopne
and
mov
xor
sbb
ror
inc
sbb
(bad)
xor
cld
adc
(bad)
int3
in
mov
sbb
retf
(bad)
ret
cmp
add
and
mov
cdq
mov
ror
lock
mov
inc
jno
mov
outs
mov
out
ror
cmps
xor
leave
mov
sub
popf
xchg
js
pop
mov
or
inc
dec
(bad)
repz
xchg
mov
xchg
dec
cmps
pop
cmp
repnz
cmps
daa
neg
cmps
sbb
mov
push
inc
fnstenv
mov
stc
add
(bad)
xor
pop
mov
mov
(bad)
je
test
mov
movs
popa
(bad)
pop
add
jnp
xor
sub
sbb
enter
xchg
outs
or
lds
sub
sub
xchg
mov
mov
retf
xor
test
xchg
std
call
mov
popf
jo
sub
push
ins
pop
dec
pop
(bad)
jle
ds
sbb
and
test
mov
(bad)
clc
aas
dec
xchg
inc
add
in
xor
cdq
aas
aaa
xchg
mov
dec
jb
adc
das
jmp
rcr
imul
push
ret
pop
jae
fs
jbe
sub
mov
pop
and
pop
adc
test
outs
iret
mov
(bad)
ret
fdivr
stos
sbb
movs
fld1
aad
movs
mov
jb
ja
scas
out
pop
mov
xchg
jp
mov
mov
xchg
not
fst
add
outs
neg
ins
jle
xor
mov
stc
adc
fidivr
push
ins
xor
cld
(bad)
fisub
push
rol
dec
mov
fsubr
and
jecxz
mov
add
mov
sti
mov
sbb
or
stos
xchg
dec
mov
cmovg
lea
and
adc
push
les
sub
mov
xor
mov
icebp
or
daa
mov
call
dec
shr
popf
or
push
mov
fbstp
jae
fiadd
aad
lea
imul
std
or
sti
das
mov
xor
pop
rcr
mov
fistp
sub
dec
(bad)
aad
ret
rcr
mov
xchg
and
push
or
clc
cmps
mov
(bad)
(bad)
mov
push
lock
sub
sub
inc
or
jbe
pop
loope
rcr
cmps
jns
inc
(bad)
dec
es
movs
cs
jge
pop
jae
pop
(bad)
std
push
arpl
xchg
xor
lahf
mov
rcr
xchg
push
test
cmp
dec
clc
nop
fisubr
test
push
cmp
movs
jmp
fs
mov
cmp
rcl
lods
shl
in
loop
mov
mov
cli
push
in
pop
sbb
outs
cdq
sbb
stos
mov
inc
inc
xchg
or
mov
inc
and
imul
loopne
jns
push
pusha
xchg
ror
mov
aad
xchg
xchg
mov
in
add
xor
xor
push
rcl
scas
mov
xchg
test
push
out
push
add
push
and
sub
add
retf
add
dec
xchg
dec
xor
jp
test
cmp
loope
sub
loope
aam
dec
pop
pusha
fdiv
fisttp
daa
or
or
scas
mov
cdq
dec
sar
arpl
inc
aad
mov
add
mov
adc
out
xchg
push
aad
or
dec
jg
ins
in
lods
xlat
xchg
sub
fidivr
adc
arpl
cmc
hlt
movs
int3
(bad)
jne
mov
mov
push
push
repz
mov
gs
mov
scas
pop
fnstcw
mov
inc
xor
xchg
jo
and
call
ret
out
xchg
mov
xor
push
sub
popf
pop
jb
rol
sahf
data16
ja
xchg
xchg
cmps
icebp
push
dec
adc
stos
stos
call
adc
pusha
ret
rcl
jb
sahf
xlat
pop
cmp
dec
sub
pop
or
setl
push
lods
jl
mov
out
pop
xor
xchg
xchg
stos
xor
std
jecxz
jg
std
push
or
xchg
repz
int
cmp
pushf
sbb
xor
repz
cld
mov
repz
push
fist
iret
das
adc
or
xor
add
inc
jg
push
jl
inc
or
aad
xor
(bad)
xor
xchg
pop
xor
sub
ret
aam
stos
ja
lahf
sub
outs
push
retf
fld
xor
arpl
loopne
(bad)
sub
push
(bad)
xor
jg
ret
bound
ror
mov
xchg
scas
mov
xchg
mov
iret
(bad)
pop
jle
je
and
call
loop
pop
pusha
jnp
cmp
in
sbb
mov
sub
add
push
xchg
les
outs
ret
cmps
daa
ins
push
mov
jmp
stos
sbb
jno
jo
xchg
test
clc
stc
shl
pop
jnp
lahf
push
lds
nop
push
xlat
stos
out
add
sub
or
dec
xor
and
retf
sbb
mov
aas
rcl
outs
cmp
std
jle
out
pop
xor
adc
inc
dec
pop
ja
sti
push
aaa
mov
cmc
mov
mov
xchg
int
pushf
in
mov
movs
fwait
mov
mov
dec
pop
sub
pushf
fldl2t
(bad)
in
retf
(bad)
jge
inc
fcmove
fsubr
call
jmp
ins
inc
dec
(bad)
int3
xor
add
push
xchg
or
les
and
mov
test
call
fdivr
call
adc
adc
sub
sbb
cmc
sbb
jmp
inc
dec
or
cwde
inc
lods
(bad)
and
pop
fiadd
sbb
mov
adc
sbb
xchg
xor
ss
lahf
mov
adc
lods
cs
cdq
ss
dec
add
jb
ins
xchg
leave
test
mov
mov
sub
pusha
sar
mov
mov
push
lods
or
or
icebp
cmc
aad
push
jmp
jle
ja
and
mov
mov
mov
hlt
and
ret
add
arpl
mov
clc
cld
stc
or
pop
mov
test
ret
mov
xor
arpl
sbb
xlat
data16
xchg
dec
dec
push
arpl
cli
add
jns
cmp
in
out
add
bound
jecxz
ror
add
scas
mov
das
mov
xor
data16
(bad)
arpl
xchg
sti
xchg
cs
inc
push
ss
inc
jns
ins
js
cmp
ret
out
mov
(bad)
pop
inc
push
shl
outs
inc
or
mov
add
adc
jo
out
dec
test
xor
push
pop
mov
nop
bnd
xchg
xchg
lock
test
inc
inc
orps
xor
xor
call
sti
mov
sub
sub
out
cmp
stos
xor
jmp
shl
cwde
ret
jp
mov
cdq
outs
mov
inc
sub
cmp
sbb
pop
sub
jne
int3
jp
dec
jb
loop
std
sbb
push
xor
mov
fdiv
gs
push
mov
inc
sub
or
mov
xor
out
pop
test
es
repnz
iret
jle
add
jle
sub
fsubr
lahf
xchg
icebp
push
cmp
xchg
arpl
out
js
add
xor
cmp
and
jbe
mov
pop
add
push
inc
sub
in
stos
pop
aad
repz
push
mov
cmp
inc
ds
xor
lahf
je
popf
xchg
jle
fimul
mov
adc
add
loope
icebp
loope
pusha
sbb
mov
stos
ins
pop
sar
sbb
or
push
xor
vpavgw
sahf
fstp
jb
cmp
in
xlat
xor
jmp
ret
inc
ret
data16
adc
xchg
dec
add
xchg
pop
add
fimul
mov
icebp
or
push
daa
dec
shl
mov
push
les
jge
sub
pop
pop
fild
push
(bad)
int
mov
fdivr
sti
ficomp
or
popf
jp
aas
jns
gs
xchg
enter
outs
jmp
mov
mov
call
mov
dec
jmp
iret
(bad)
and
imul
cmps
jle
(bad)
inc
add
mov
addr16
cmp
jmp
pusha
xor
stc
mov
dec
mov
xchg
aaa
ds
test
inc
cmp
nop
fmul
jo
jmp
adc
test
dec
aam
aad
mov
cld
cmp
dec
(bad)
shl
mov
loop
add
mov
inc
push
pushf
loopne
cmove
push
jo
mov
xchg
pop
sub
xor
adc
ja
inc
loop
je
sahf
imul
popf
inc
inc
stos
or
sbb
mov
and
xor
sbb
adc
sbb
or
das
hlt
rcl
lds
data16
mov
lods
in
mov
ror
pop
lea
fs
xchg
push
call
mul
dec
jl
mov
fst
(bad)
mov
movs
push
stos
sbb
xchg
repz
pusha
gs
sub
inc
add
cs
dec
ds
fmul
out
mov
pushf
loop
jecxz
mov
jl
shl
mov
xchg
mov
jg
lods
test
adc
mov
jno
xor
or
clc
mov
xchg
mov
arpl
xor
dec
add
bound
fwait
call
cmp
sar
mov
xlat
ss
mov
fisub
sbb
imul
(bad)
lods
mov
xor
mov
mov
ins
mov
popf
sub
movs
into
mov
dec
sar
push
add
sbb
xchg
push
out
mov
jecxz
punpcklwd
repnz
mov
test
in
lock
out
int3
jbe
stc
adc
xchg
cmp
xchg
rcl
pop
mov
ss
icebp
adc
(bad)
popa
sbb
xchg
fstp
inc
push
jmp
arpl
mov
mov
outs
in
enter
retf
mov
push
push
stos
fist
push
cdq
xchg
sub
xor
gs
add
xchg
inc
and
(bad)
call
sar
in
mov
xor
xchg
pushf
dec
nop
mov
daa
sub
adc
daa
test
aam
xchg
adc
inc
clc
sub
fwait
push
dec
cmp
out
mov
iret
push
push
and
shl
clc
pop
pop
cmp
jle
bound
sub
cmc
out
mov
(bad)
in
call
retf
jl
test
test
call
mov
jae
jne
push
test
jmp
movs
add
xchg
loope
(bad)
cld
sahf
sub
xchg
stos
or
and
lahf
push
pop
jns
cmp
pop
fstp
fdiv
sbb
inc
std
pop
loop
loop
adc
mov
out
push
or
xchg
clc
iret
sub
jecxz
ja
jb
test
pop
push
xchg
push
jnp
and
test
out
aas
sbb
mov
imul
lods
push
mov
es
sub
shr
mov
sbb
mov
push
pop
retf
ja
push
pop
inc
jbe
test
mov
pop
gs
loop
test
mov
add
and
cmp
dec
ja
les
adc
xor
cmp
repz
sahf
xor
mov
mov
es
das
call
mov
int
xchg
jno
imul
bswap
jno
out
fadd
fs
push
sti
jp
and
(bad)
(bad)
popf
jl
jne
push
pop
mov
scas
sub
pop
jae
inc
stos
mov
mov
xchg
out
xchg
enter
fdiv
leave
retf
daa
sub
sbb
popf
ins
sub
adc
jne
mov
sahf
sbb
mov
cmps
jns
inc
pop
shl
shl
repz
jp
xchg
sub
pop
inc
in
jmp
push
xor
xchg
xor
mov
int3
push
pop
sar
mov
sbb
outs
ins
push
dec
cmc
nop
sbb
out
sbb
dec
mov
ffree
push
jl
scas
adc
xor
or
adc
mov
or
clc
test
mov
bound
(bad)
movs
int
mov
in
cmp
in
loopne
repnz
xchg
mov
scas
mov
enter
sbb
mov
leave
mov
cmps
push
int
(bad)
mov
iret
into
xchg
setg
fcom
inc
sahf
adc
dec
rcl
lock
vmovshdup
cmp
xchg
sbb
ss
jo
in
pop
hlt
xor
outs
xchg
pop
ror
push
cmp
push
ja
popf
inc
call
mov
cli
test
jo
pop
jne
adc
inc
mov
mov
add
stos
cmp
(bad)
mov
sbb
fwait
and
lahf
call
jo
loop
mov
push
jae
mov
add
rcl
fwait
test
or
call
jno
inc
sub
or
lods
fsub
mov
pop
jns
loope
scas
add
(bad)
ds
xlat
(bad)
mov
loopne
cmp
lea
(bad)
(bad)
loop
mov
outs
jo
movs
jnp
call
mov
lds
shl
or
pop
push
cmc
xchg
(bad)
std
mov
cs
xchg
mov
pusha
stos
jo
sub
ret
lods
ss
ret
imul
sbb
dec
jl
lods
sub
push
in
inc
call
xor
lods
fist
sub
(bad)
cmp
stos
mov
popf
mov
out
cdq
push
add
shl
dec
js
jmp
add
cmps
xchg
scas
sbb
jns
(bad)
lahf
or
sub
cwde
rcr
pop
xlat
fnstenv
mov
pop
je
cmps
xor
cmc
mov
js
push
xor
push
stos
cdq
out
xchg
pop
enter
mov
adc
xor
data16
xchg
(bad)
push
cld
cmp
addr16
pop
add
sbb
fucom
or
inc
adc
pop
(bad)
mov
jb
or
xchg
dec
inc
pushf
les
popa
dec
test
loopne
loopne
pop
ror
dec
jg
push
or
jge
inc
xor
(bad)
xchg
xor
dec
mov
loope
xchg
xchg
sbb
inc
xchg
add
popf
adc
jns
std
mov
adc
jns
push
loopne
pushf
sub
mov
pop
out
cmps
mov
test
(bad)
les
adc
cdq
dec
out
cmp
cmp
nop
je
push
lock
cwde
adc
add
aas
(bad)
sub
or
outs
xchg
clc
bound
test
out
xchg
and
pop
mov
fst
ins
inc
mov
iret
mov
aam
into
dec
mov
in
out
inc
push
cmps
jle
sub
cmc
jo
xchg
mov
pop
fistp
ret
pop
test
xor
cmc
dec
loopne
stos
mov
test
out
sub
mov
add
xor
pop
sbb
pop
adc
ss
cs
cmp
jne
mov
retf
adc
cmps
and
pop
xor
dec
mov
aas
out
aam
in
inc
dec
dec
cmp
sar
call
and
cmc
jae
lahf
in
push
sbb
bound
test
sbb
xchg
cmc
cmp
xor
repnz
addr16
push
jl
ins
pop
aas
add
mov
adc
cld
(bad)
push
ss
xor
pop
mov
aad
push
iret
xor
sub
pop
fisubr
pop
cmp
cmc
mov
ret
sbb
mov
mov
not
int
imul
aam
sbb
fild
pop
aad
xlat
stos
sbb
sub
add
jmp
xchg
jo
pop
mov
cmps
sub
dec
pusha
mov
enter
dec
xor
mov
cmps
hlt
cmp
adc
cdq
scas
adc
jp
das
adc
xchg
aaa
push
sbb
adc
loopne
gs
fwait
cmps
out
ret
cmp
test
pop
mov
adc
push
scas
mov
add
jb
mov
jle
lds
shl
push
xor
mov
aad
xchg
push
push
xor
jb
xchg
call
inc
hlt
test
lahf
push
in
inc
pop
xor
jl
push
dec
fidiv
scas
dec
dec
mov
mov
inc
pop
(bad)
sahf
adc
mov
popa
mov
push
pop
das
inc
xchg
cmp
adc
or
sahf
cmp
stc
test
sbb
xchg
stos
retfw
mov
push
fimul
adc
rcr
push
dec
push
mov
adc
sbb
or
aad
(bad)
and
rcr
adc
das
sbb
idiv
dec
arpl
pop
aaa
out
sub
stc
push
or
jle
cdq
(bad)
out
out
jae
call
xor
ds
sub
xor
sbb
sar
cmps
mov
(bad)
sbb
enter
jmp
inc
in
jp
or
add
jb
dec
test
fisub
xchg
sbb
sub
sbb
fldenv
mov
ret
(bad)
dec
adc
sub
lods
xor
pop
push
pusha
aam
loopne
rcl
mov
icebp
cmps
add
in
jle
es
mov
popa
aaa
sbb
imul
hlt
fidiv
fsubr
ins
sbb
aam
es
inc
fldcw
jb
dec
pop
mov
and
int3
fcomip
fiadd
or
call
arpl
mov
loop
xlat
(bad)
xchg
push
(bad)
int3
stos
pusha
iret
add
jle
dec
pop
cwde
jge
hlt
repz
into
in
sbb
movs
addr16
push
xchg
cmps
es
mov
or
int
cmp
fdiv
jl
test
fldl2t
mov
sbb
jbe
push
pop
push
rcl
in
mov
es
jns
push
mov
xchg
icebp
cmps
jecxz
fwait
stos
mov
jp
jge
xor
inc
jo
xchg
xchg
arpl
fiadd
adc
ss
pop
loopne
push
in
aaa
add
test
lahf
dec
leave
jmp
adc
sub
mov
leave
bound
out
push
stos
fxtract
jb
jnp
mov
mov
inc
cmp
adc
cwde
pop
cmp
aaa
dec
inc
mul
sub
jle
add
xchg
repz
xchg
inc
arpl
out
call
mov
ds
fisub
fist
push
pop
fld
mov
pop
pop
cmp
clc
dec
pop
lahf
imul
mov
sbb
or
test
mov
dec
fs
cmc
cmp
lods
push
add
ror
cmps
cmp
pop
inc
repnz
cmp
frstor
(bad)
fs
dec
dec
mov
(bad)
sub
and
(bad)
pop
das
ss
xor
sub
and
hlt
imul
loopne
call
pop
jle
or
push
fwait
mov
add
fnsave
retf
jne
pop
sahf
inc
popa
(bad)
lods
mov
jl
icebp
add
jbe
adc
int
sub
dec
popf
ins
dec
aas
jmp
push
stos
icebp
sub
xchg
ins
sub
mov
ret
movs
push
enter
(bad)
(bad)
dec
mov
mov
xor
sahf
push
leave
inc
sbb
add
cmps
xchg
sbb
cld
mov
cmps
cs
and
add
xchg
aaa
sbb
jl
push
scas
add
aaa
hlt
or
mov
cdq
adc
or
stos
and
jnp
pop
xchg
cwde
shr
imul
popf
xchg
inc
xchg
out
xor
in
sbb
stos
daa
cmp
fwait
sbb
rcr
loope
jne
mov
ret
es
aas
mov
jle
mov
aad
xchg
jmp
pop
and
iret
ror
jp
jle
or
xchg
pop
or
test
mov
int3
adc
mov
push
cli
or
fldenv
ret
jp
push
sbb
push
dec
lods
xchg
jl
inc
inc
out
push
inc
arpl
xchg
gs
call
xchg
call
ss
adc
push
jne
jbe
dec
out
push
in
mov
ja
pop
jo
xchg
in
inc
out
(bad)
push
pop
(bad)
dec
dec
mov
xchg
loope
mov
push
rcr
loope
xor
pop
jbe
loop
retf
bound
fld
jne
ret
int
push
cmp
iret
lds
dec
mov
dec
nop
daa
ret
xchg
mov
lds
add
dec
aas
jmp
fisub
cmp
cmp
fsub
sub
sbb
cmp
inc
jle
push
dec
mov
mov
cdq
mov
jmp
retf
xor
cmp
ds
cli
(bad)
adc
clc
mov
cdq
jmp
aam
outs
mov
sub
add
lahf
fcmovbe
adc
mov
mov
fnsave
dec
sbb
(bad)
cmp
mov
sbb
adc
(bad)
fcom
jbe
mov
test
push
add
mov
cwde
sbb
adc
mov
mov
mov
jns
push
xchg
iret
mov
mov
sbb
pop
repz
iret
imul
fs
or
arpl
arpl
pop
mov
inc
popa
or
adc
xor
xor
imul
unpcklps
retf
mov
cmp
xchg
pop
sub
dec
sub
mov
adc
mov
icebp
cdq
cmp
pusha
repz
pop
imul
out
ds
mov
mov
xchg
dec
ret
jge
inc
retf
das
and
mov
(bad)
pusha
scas
js
lea
fsub
push
or
mov
add
xchg
mov
xchg
sub
push
mov
cwde
dec
sbb
es
inc
(bad)
or
shl
sub
jmp
inc
dec
test
xor
(bad)
dec
xor
cmp
push
sar
mov
sahf
int3
sub
shl
cs
cmps
pop
inc
cmp
retf
mov
clc
arpl
inc
push
mov
test
push
cli
pusha
add
clc
pop
or
popf
test
loopne
fidiv
or
sbb
or
jmp
cmp
pop
adc
sub
xchg
repnz
adc
push
mov
jbe
xor
pop
int
in
inc
pop
cmps
mov
cmp
mov
cmp
(bad)
mov
dec
cdq
mov
sbb
fld
pop
sbb
jno
cmp
xlat
mov
adc
fwait
dec
mov
dec
into
shl
sub
fcomp
inc
push
sahf
mov
adc
imul
push
(bad)
xchg
mov
int
loopne
imul
sub
div
loop
xor
in
pop
mov
es
jmp
pusha
iret
xchg
mov
mov
in
fcomp
lods
pushf
test
addr16
jmp
retf
in
inc
lea
mov
int3
mov
push
or
and
sbb
xchg
popa
dec
(bad)
xchg
sub
push
aam
daa
push
loop
cld
mov
cmc
cs
xor
sub
jg
or
push
xor
xchg
sbb
repz
fisubr
jmp
inc
inc
mov
rol
inc
jp
enter
xchg
mov
push
cmp
jge
es
imul
jecxz
push
xchg
jle
push
inc
mov
cmp
retf
sbb
in
(bad)
jp
lods
into
fisub
jb
into
fsub
sbb
cld
std
jmp
inc
inc
dec
pusha
inc
(bad)
cli
sbb
dec
push
xchg
sub
or
dec
outs
gs
cmp
mov
stos
sbb
sbb
loope
sti
int3
sub
popa
push
inc
in
sub
movs
mov
mov
bound
push
inc
arpl
dec
mov
into
adc
int
out
ror
(bad)
scas
or
je
xor
push
push
arpl
div
mov
xchg
je
cs
jo
push
cli
ins
aam
jne
push
push
add
push
and
mov
mov
out
aam
xor
jmp
and
jl
add
jl
outs
aaa
and
ret
aaa
jp
(bad)
(bad)
lea
out
sub
fisub
lods
and
cld
push
xchg
dec
cli
xchg
sub
or
cld
es
and
retf
movs
ret
and
adc
xor
xor
inc
clc
outs
pop
sub
sbb
nop
inc
inc
mov
enter
jle
(bad)
cmp
lods
lahf
dec
or
(bad)
and
outs
push
out
mov
or
sub
std
cmp
call
sbb
jmp
adc
pop
ret
mov
adc
not
inc
test
test
mov
dec
jae
outs
sub
mov
sub
ja
ds
push
data16
pop
mov
fwait
mov
push
mov
cdq
out
hlt
cmp
and
jmp
cdq
jmp
es
jbe
(bad)
cmps
pop
or
lods
jae
mov
(bad)
loopne
inc
jp
xchg
xchg
cwde
js
sub
pop
push
pop
or
adc
jle
outs
sbb
cmp
(bad)
sbb
lds
clc
push
adc
inc
sub
cmc
call
mov
cmps
or
mov
leave
dec
mov
push
push
aas
sub
iret
imul
xchg
mov
cwde
push
inc
ja
not
add
aam
jns
in
mov
test
push
pop
icebp
idiv
push
pop
inc
xchg
out
pop
push
daa
mov
fisubr
ins
jg
inc
hlt
(bad)
(bad)
out
test
bound
pop
mov
loope
fdiv
jnp
or
or
loope
sub
jmp
cmp
jecxz
mov
mov
cld
stc
imul
mov
stos
int
mov
cwde
sub
test
shr
jmp
pop
mov
push
mov
jmp
out
and
xor
sub
pushf
mov
mov
sbb
add
out
xor
dec
mov
in
mov
dec
pop
mov
nop
push
aaa
jbe
aam
call
lods
push
mov
push
loope
lds
pop
lock
leave
cmp
sbb
fidiv
jns
add
dec
(bad)
call
mov
mov
stc
fwait
xchg
leave
aaa
lea
jae
mov
sbb
iret
fsubr
adc
das
xchg
mov
sbb
data16
mov
out
jb
mov
outs
mov
cmp
or
mov
test
jp
inc
jg
popf
out
std
fild
and
ror
and
cmp
and
int
mov
mov
mov
sub
push
mov
(bad)
xchg
pusha
jnp
ss
sahf
adc
lods
int3
shl
sub
popf
outs
rol
lea
ins
aam
mov
and
jecxz
aaa
fimul
xor
pop
mov
pop
fidivr
inc
mov
sub
jp
cwde
inc
and
hlt
xchg
sub
xor
sub
je
rol
xchg
inc
into
push
dec
mov
into
pop
std
idiv
repz
push
test
and
mov
inc
dec
sbb
icebp
push
jno
or
pop
iret
add
pop
and
mov
mov
stc
hlt
out
imul
data16
arpl
mov
mov
out
push
sbb
arpl
in
mov
shl
push
mov
and
test
cmp
ja
add
jmp
scas
lahf
add
dec
imul
jmp
idiv
fnstsw
mov
pop
or
repz
lds
out
popa
pop
adc
ins
jmp
mov
push
dec
xor
popa
cmps
pop
pop
es
mov
xor
aad
ret
fcom
mov
or
jge
adc
adc
or
not
mov
mov
out
inc
and
push
jp
inc
pop
fisttp
jp
adc
xor
dec
ficom
dec
inc
nop
mov
test
daa
sti
push
cmp
add
or
dec
fcmovne
cmps
push
xor
stc
stos
call
pop
push
ret
xchg
test
shl
pop
test
stos
rcr
in
cmp
fdiv
popf
stos
cmp
stos
jnp
xchg
pop
jecxz
aam
mov
jle
jbe
int
adc
inc
push
stc
mov
mov
test
outs
(bad)
mov
jecxz
lock
dec
ja
scas
(bad)
(bad)
mov
cmp
fisttp
mov
mov
adc
xchg
shl
cli
call
retf
xchg
jnp
cmp
push
daa
push
dec
pop
jp
xor
loopne
xor
inc
xor
sahf
imul
jne
call
fiadd
xchg
xchg
adc
cmp
ret
jmp
xor
adc
mov
nop
retf
shl
call
gs
fsubr
or
(bad)
xchg
jnp
leave
pop
stc
mov
and
or
(bad)
mov
adc
fnstenv
clc
dec
outs
repnz
lds
(bad)
inc
daa
sub
jle
pop
xchg
fisub
rcl
sub
out
ins
mul
jo
scas
mov
les
clc
push
xchg
rol
into
and
dec
repz
mov
sbb
(bad)
push
jg
(bad)
std
fcom
dec
push
shl
and
jnp
test
cmp
das
and
sbb
cdq
adc
xlat
(bad)
pushf
div
push
pop
(bad)
leave
scas
push
movs
push
shr
mov
call
jg
stos
jp
out
add
add
fisttp
lods
out
in
stos
(bad)
push
outs
je
mov
jg
enter
mov
js
xchg
out
mov
mov
mov
and
pusha
mov
pusha
jp
cs
pop
retf
xchg
adc
mov
jl
cmc
jl
or
int
ret
dec
pop
push
pusha
push
jge
ja
xchg
push
data16
ret
mov
mov
mov
addr16
mov
and
mov
jmp
lods
xchg
out
repz
lock
adc
rcr
jmp
out
scas
inc
push
cli
cs
imul
std
ret
loop
pop
test
les
popf
(bad)
fcmovnbe
jb
lea
(bad)
lds
int
sub
imul
and
xchg
into
imul
cmp
leave
jo
in
int3
sub
push
inc
ins
mov
sub
dec
out
in
(bad)
xchg
sahf
outs
pop
mov
hlt
call
(bad)
mov
cwde
xor
cld
imul
jmp
lahf
push
cmp
loop
mov
not
sub
loope
push
lahf
cmps
cdq
mov
(bad)
adc
out
ins
rcl
test
cli
mov
cmp
mov
rcl
dec
push
push
nop
inc
fisub
and
xor
daa
add
sub
scas
(bad)
test
test
inc
jnp
lock
outs
dec
(bad)
or
inc
out
push
sub
pusha
je
(bad)
cmc
xchg
outs
cmp
dec
push
sbb
fld
mov
lods
add
es
mov
mov
and
sub
mov
mov
add
cwde
(bad)
push
xor
aad
cmp
xor
mov
cmc
add
push
dec
leave
pop
outs
stc
push
dec
in
sub
mov
xlat
adc
fisttp
les
movs
test
cmp
movs
mov
push
ret
dec
sub
call
jb
sahf
inc
icebp
nop
and
mov
push
or
cmp
push
ins
mov
retf
test
scas
fwait
jl
sbb
inc
pop
mov
mov
daa
scas
stos
stos
or
pop
mov
mov
dec
mov
pop
push
(bad)
pop
inc
gs
mov
jg
pop
bound
fidiv
dec
call
fistp
jns
push
loope
std
es
mov
xor
data16
pop
shl
inc
push
mov
int
leave
xchg
mov
jg
mov
ins
sbb
mov
movs
cmp
cmp
leave
test
clc
adc
mov
mov
xchg
xor
add
scas
int3
imul
inc
dec
ficom
(bad)
mov
retf
mov
xchg
stc
outs
xchg
es
mov
int
pop
mov
cs
or
cdq
jo
(bad)
jne
cli
mov
ss
loop
mov
(bad)
clc
jns
(bad)
sbb
mov
cmp
mov
mov
add
popa
fisub
scas
es
xchg
stc
jle
repz
jo
mov
sub
or
sbb
outs
lea
cli
jnp
(bad)
int
xor
mov
retf
cld
jb
sar
js
mov
mov
repz
jne
lods
xor
push
xor
scas
fcmovb
push
or
xor
das
sub
mov
in
fs
push
aas
mov
mov
leave
xor
idiv
out
pop
push
xor
xchg
mov
scas
aam
outs
push
imul
fcmovne
xor
test
pop
add
bound
mov
mov
lods
(bad)
sbb
repnz
add
cwde
xlat
mov
sub
data16
jns
arpl
ins
inc
add
push
call
fs
test
push
pop
dec
fnstsw
inc
popa
ins
pop
cli
xor
loop
cmps
inc
inc
sbb
int3
xchg
fnsave
lahf
sbb
ins
jae
mov
cmc
stc
pop
data16
mov
jbe
adc
pop
pop
mov
cmp
mov
xlat
stos
repz
push
das
fdiv
call
sub
push
int
test
cmp
rol
arpl
or
rcl
add
and
retf
mov
call
adc
sbb
push
test
js
es
and
test
mov
mov
stos
mov
mov
imul
mov
and
fdiv
int3
lock
enter
mov
cmp
shl
not
dec
sbb
xor
cmp
outs
push
pop
and
cmp
std
cmp
inc
movs
mov
or
push
pop
stc
das
xchg
lea
retf
mov
ret
push
mov
mov
cmps
ss
add
out
mov
dec
mov
out
sbb
mov
jo
push
je
mov
mov
repz
xchg
cmp
(bad)
mov
and
ror
jle
cmps
xchg
scas
retf
lock
jae
push
xchg
outs
daa
jmp
pop
xchg
or
dec
test
mov
cmps
mov
dec
std
push
test
xchg
int
and
ja
inc
mov
add
test
daa
and
in
fimul
jno
std
ret
sahf
push
test
mov
out
rcr
(bad)
into
pop
loop
repnz
std
inc
js
dec
jnp
clc
test
dec
jecxz
dec
pop
mov
inc
lods
out
movs
out
stos
jb
loopne
ss
imul
ficom
adc
xor
lahf
lods
adc
out
movs
pop
jg
xchg
outs
push
jnp
push
jae
nop
adc
pop
rcr
mov
push
(bad)
cmp
dec
pushf
mov
lock
jmp
loopne
rol
xchg
cmp
in
out
jbe
and
or
je
jge
out
inc
inc
icebp
neg
mov
loopne
mov
mov
and
out
sub
lea
mov
mov
add
adc
mov
jge
dec
or
xchg
test
inc
inc
mov
and
in
jmp
xor
and
pop
call
cmps
lahf
cmc
and
xor
lahf
cwde
retf
jo
adc
and
jg
cli
cld
jp
dec
push
sub
scas
push
cmp
cmp
mov
or
fcomp
daa
pop
mov
mov
aam
jecxz
or
add
or
in
or
add
inc
mov
scas
lods
xchg
rol
fmul
mov
mov
mov
and
mov
enter
aad
pop
inc
ss
sar
lock
inc
in
aaa
test
push
push
test
xor
imul
xchg
nop
dec
ret
(bad)
loope
fsubr
sbb
add
and
(bad)
(bad)
out
js
inc
stos
stc
adc
imul
in
push
mov
sbb
popf
inc
inc
data16
ja
mov
loop
loope
out
fisttp
sar
shl
jae
test
test
push
mov
mov
test
jmp
movs
xchg
and
loope
add
jmp
das
inc
inc
and
ins
cwde
xchg
stos
adc
mov
jecxz
push
lds
pop
mov
fist
inc
fidivr
pop
xor
sbb
mov
scas
or
and
fwait
push
sbb
lods
cld
int3
xor
neg
icebp
in
pop
inc
add
mov
push
adc
xchg
adc
jmp
scas
pop
mov
and
sub
dec
dec
in
lock
mov
dec
ret
sbb
mov
mov
cmp
inc
(bad)
stc
mov
out
push
and
jle
fld
test
jb
addr16
das
xchg
sbb
sub
repnz
dec
sbb
jno
mov
mov
nop
xchg
and
cmp
adc
mov
jle
cmp
cmp
mov
add
int
popa
inc
mov
pop
fsub
xor
dec
aad
jns
xchg
cmps
retf
enter
sub
sbb
cli
dec
fsubr
stos
adc
test
outs
mov
fst
lea
xchg
nop
and
repnz
jmp
fbstp
stos
pusha
pop
xor
push
sar
aad
iret
ins
test
sub
out
dec
std
ds
xor
dec
sub
mov
lea
mov
or
adc
jmp
dec
jno
sbb
mov
cmc
add
ficom
inc
cdq
mov
cld
xchg
inc
mov
push
or
clc
pop
inc
mov
cmp
adc
or
dec
loope
scas
mov
lea
retf
popf
xor
data16
xchg
loopne
pop
inc
(bad)
std
and
xor
jg
inc
cmp
sub
scas
xor
out
sbb
mov
aaa
test
outs
mov
inc
mov
and
fisttp
xchg
adc
mov
fild
mov
mov
icebp
ds
xor
(bad)
mov
(bad)
movs
sbb
dec
mov
and
push
add
pop
cmp
adc
into
inc
dec
xchg
outs
dec
aam
ds
or
jb
sub
jle
fs
rol
xchg
les
xchg
pop
push
mov
aaa
call
sbb
loopne
sahf
call
retf
xor
cwde
jp
jp
sub
push
and
pop
inc
enter
lock
inc
(bad)
or
stc
ins
pop
and
mov
popa
movs
in
lods
or
pop
or
cld
xchg
push
add
push
(bad)
clc
jmp
lahf
push
pop
mov
js
inc
sbb
in
aaa
mov
sub
icebp
and
add
xchg
sbb
cmp
xchg
stc
nop
push
pop
fwait
pop
enterw
jb
into
adc
push
sbb
(bad)
adc
mov
mul
outs
jb
daa
mov
test
or
cmp
movs
repz
xchg
fidivr
loope
(bad)
pop
(bad)
ja
inc
xor
add
pop
xor
and
ins
xchg
jbe
mov
fwait
retf
mov
cmp
push
clc
inc
add
jle
out
inc
stos
aam
adc
test
fbld
retf
fwait
dec
inc
push
mov
dec
jne
push
push
push
push
pop
out
dec
ds
in
dec
test
cmp
fwait
lods
fist
(bad)
push
loop
or
imul
sub
sbb
rol
call
fstp
jg
movs
mov
xor
mov
ins
and
loopne
in
test
dec
cmp
push
(bad)
pop
sbb
mov
xchg
add
mov
mov
enter
fcomp
inc
rol
imul
ficomp
adc
repnz
sbb
das
(bad)
in
and
test
push
imul
mov
mov
ret
mov
push
jbe
sub
in
outs
xchg
mov
std
jne
inc
retf
push
mov
xchg
sbb
inc
inc
jmp
js
push
arpl
fcomp
or
sub
loope
sub
and
fs
fcomp
adc
pop
fistp
into
iret
mov
gs
push
push
dec
xchg
dec
push
pop
bswap
mov
push
push
push
sahf
or
jne
mov
push
cmp
ds
or
cs
dec
fadd
aam
(bad)
mov
cmps
jle
out
clc
stc
inc
push
jge
stos
leave
adc
xor
in
in
cmp
mov
mov
lods
in
into
neg
cmc
aad
dec
mov
mov
push
push
pop
and
cmp
ror
push
dec
xor
dec
mov
lds
mov
lods
test
sbb
cdq
cmps
std
ja
sbb
test
lahf
test
inc
sub
cmp
sbb
push
mov
lds
int3
ret
sbb
mov
lea
fidiv
jno
cmp
lock
jge
sbb
sbb
into
outs
ins
adc
leave
xchg
inc
shl
cmps
shl
pop
sbb
jg
dec
rol
ja
and
sbb
and
lods
jnp
pop
pop
das
push
call
sub
adc
das
mov
in
sub
lea
add
push
sbb
test
sub
or
push
mov
std
ror
neg
and
sbb
and
scas
div
rcl
shl
ret
push
std
rcl
(bad)
push
mov
sbb
icebp
sub
pop
push
and
push
dec
neg
retf
iret
jmp
pop
popf
push
test
push
fisubr
pop
push
add
jecxz
das
cld
lea
mov
dec
dec
push
(bad)
retf
pop
pop
int
(bad)
(bad)
and
and
xchg
or
(bad)
mov
outs
jp
sbb
jne
lods
stos
jge
mov
(bad)
outs
inc
push
or
pusha
test
adc
dec
or
cmps
shr
adc
in
ja
nop
pop
push
cmp
ror
int3
cmp
out
fnstsw
push
ror
jmp
or
mov
neg
ret
adc
popf
imul
dec
lock
or
add
movs
in
pusha
mov
pop
out
jmp
aas
adc
or
stos
push
xor
adc
mov
ins
retf
fwait
shr
call
jnp
pop
push
pop
jne
sbb
mov
pusha
push
arpl
jb
pusha
mov
jb
cmps
sub
cmp
pusha
mov
pop
mov
test
adc
or
pop
scas
pop
mov
test
je
inc
call
inc
dec
sub
pop
repz
xchg
jl
bound
adc
mov
scas
mov
dec
mov
sbb
dec
shr
call
adc
cmps
xlat
rcr
xor
call
jg
ror
mov
das
aaa
stos
jo
ret
sub
mov
rcl
int3
jp
or
xor
sub
jle
mov
or
inc
ins
in
stc
in
and
xor
jmp
pop
mov
call
cmp
mov
mov
adc
xor
jl
add
into
icebp
fcmovb
mov
jb
or
jo
adc
xor
outs
mov
imul
xchg
cmp
or
pop
sub
(bad)
push
sub
xchg
test
loop
mov
mov
mov
cmps
ror
pop
(bad)
pop
out
ror
mov
mov
mov
and
das
mov
(bad)
mov
lods
test
aad
pop
and
xchg
lods
addr16
leave
pop
setbe
jp
push
mov
es
lahf
retf
jmp
dec
add
push
adc
mov
imul
jp
dec
push
jb
cmp
std
push
and
imul
push
arpl
pop
mov
fs
push
fdiv
je
mov
pop
pop
xchg
mov
jg
dec
xor
jp
lahf
loopne
ins
(bad)
js
or
dec
mov
add
imul
ds
mov
and
das
xor
pop
out
int
(bad)
xchg
cmc
aad
aas
test
or
inc
mov
stc
mov
and
scas
mov
lds
or
sub
out
push
cli
pop
test
sbb
gs
mov
cli
out
add
ss
push
push
add
dec
sub
pushw
or
emms
popf
inc
enter
pop
jmp
xor
iret
mov
stos
mov
loop
mov
lods
sbb
test
ins
push
sub
fldcw
and
dec
mov
push
pop
pop
inc
cmp
fist
(bad)
sub
mov
xchg
fwait
cmps
cmp
ins
add
adc
cmp
push
repz
pop
test
(bad)
xor
sub
fwait
test
mov
xor
arpl
push
imul
pop
push
std
mov
(bad)
cli
pushf
shl
jmp
sub
(bad)
ficom
das
mov
mov
ins
sub
mov
cmp
mov
jle
pushf
jne
push
ficom
xlat
sub
xchg
jne
or
or
dec
cmc
fadd
and
mov
fisub
push
inc
mov
sbb
sub
popa
cdq
xor
mov
stos
arpl
inc
out
fimul
push
sub
pop
pop
pusha
loopne
(bad)
mov
add
xchg
xchg
sbb
retf
les
or
imul
test
push
pop
xchg
cmp
or
sub
cmp
pop
cmps
mov
inc
jge
jge
and
dec
sahf
push
or
and
xor
inc
rcl
daa
or
test
jg
jg
stos
test
adc
inc
or
cs
sub
repnz
jle
mov
mov
sar
sbb
(bad)
push
mov
mov
loop
cdq
(bad)
fs
js
push
movs
sbb
push
cwde
movs
xor
xor
mov
and
inc
out
pop
sbb
or
ja
sub
xchg
mov
xor
push
xchg
cmc
mov
jnp
jno
(bad)
pop
popf
bound
inc
xchg
xchg
mov
jnp
enter
mov
(bad)
daa
or
add
mov
mov
ins
cdq
loopne
and
push
xlat
popa
pop
push
repnz
stos
xor
daa
mov
lods
(bad)
aad
test
mov
daa
call
stc
xchg
fild
jb
mov
fwait
jne
frstor
mov
add
(bad)
sub
xor
loop
ins
xlat
in
sbb
aaa
movs
out
leave
sar
neg
out
retf
stos
jmp
inc
test
sub
call
adc
push
push
dec
dec
mov
dec
fdivr
or
ds
sub
into
jp
mov
imul
sub
ret
ror
pop
(bad)
(bad)
or
mov
inc
lds
xchg
pop
mov
aad
xlat
xor
cmp
(bad)
jae
add
je
dec
bound
jge
or
and
lods
cmp
dec
or
clc
mov
mov
int
pop
jns
jbe
adc
retf
retf
sbb
cmp
mov
fisttp
push
imul
jns
pop
push
jp
sub
retf
push
xlat
xor
mov
in
xor
aad
pop
scas
or
stc
sahf
mov
xchg
stc
xchg
pop
je
and
xor
stc
std
bound
cmps
test
mov
or
div
ror
mov
and
leave
imul
cmp
jo
fdivr
icebp
js
mov
xchg
fwait
das
test
std
pop
in
xchg
fs
add
dec
push
xchg
out
out
sub
or
loope
neg
sub
inc
cs
int
clc
ins
lods
sub
xor
lds
lahf
loopne
push
or
test
pop
scas
xor
jl
clc
sbb
out
or
xor
cmps
idiv
loope
mov
add
shr
xor
cmp
add
inc
scas
sub
(bad)
push
and
out
mov
mov
stc
or
or
or
xchg
and
shr
call
int
fld
xchg
jle
inc
ror
fld
js
in
aam
xor
les
call
sub
mov
push
gs
inc
fisttp
in
xor
sbb
fnstsw
or
(bad)
pop
dec
sub
jg
neg
shl
icebp
aaa
inc
sbb
add
inc
mov
out
fcomp
fist
push
and
sbb
jle
adc
cmp
out
je
in
pop
movs
ins
fbld
mov
retf
cmps
mov
sbb
movs
loop
xchg
mov
rcl
mov
xor
sub
out
adc
leave
mov
hlt
test
push
sub
cld
inc
jbe
mov
push
or
stos
repnz
daa
inc
(bad)
cdq
push
loop
or
mov
or
and
sub
mov
xchg
mov
inc
into
adc
mov
xor
mov
dec
pop
pop
ret
icebp
mov
std
mov
cmp
jmp
ss
shl
popa
push
xchg
mov
scas
xchg
ret
and
pop
test
inc
test
out
lahf
ins
sub
out
inc
sti
inc
jmp
cwde
nop
sub
mov
jns
ds
push
pop
mov
call
js
fild
sahf
repz
cmps
mov
lahf
mov
adc
addr16
xchg
and
cld
sahf
imul
mov
fnstsw
outs
ins
in
mov
push
aaa
ins
jge
mov
cdq
test
call
inc
and
popf
mov
pushf
das
sub
push
stos
pusha
dec
adc
fild
adc
retf
fdivr
(bad)
cmp
push
mov
jbe
jle
sub
je
pop
mov
repnz
arpl
fist
cmp
mov
mov
retf
pop
test
sub
or
mov
sub
fnstsw
pusha
pop
and
mov
add
add
push
push
ins
lahf
pop
imul
sbb
pusha
scas
pop
mov
dec
pop
push
outs
or
mov
fild
popf
mov
out
in
mov
adc
(bad)
jno
adc
mov
in
jp
or
xor
fidivr
and
cli
(bad)
adc
xchg
or
jnp
call
cli
xchg
shr
ins
and
aam
mov
sbb
pop
scas
sub
push
xor
out
ins
adc
loope
jmp
xchg
mov
loop
(bad)
in
jmp
movs
repnz
out
pop
and
push
jmp
outs
push
shr
fst
nop
pushf
out
sti
sbb
xchg
fisubr
and
inc
mov
or
xchg
sub
add
adc
sub
or
jb
mov
pop
inc
and
in
fcomp
jle
mov
mov
xchg
mov
push
out
adc
dec
xchg
mov
popa
push
lods
push
jmp
mov
xor
mov
mov
pop
inc
ffreep
jns
mov
mov
mov
add
xor
jmp
xor
add
pop
fsub
retf
daa
pop
loop
mov
push
cmps
dec
nop
sti
fsubr
int3
inc
pop
dec
loopne
sub
lods
mov
pop
into
xor
inc
push
aam
rol
fcomip
pushf
loopne
outs
movs
mov
push
lock
jg
loop
push
add
jae
cmc
dec
adc
bound
xchg
div
popf
cmc
inc
imul
bound
pop
jns
ins
xchg
pop
mov
and
dec
pop
repz
ret
sbb
sub
jb
ret
cmc
mov
mov
movs
cmp
pop
xabort
push
mov
ins
jp
cmps
adc
ins
cwde
inc
jge
in
hlt
cmc
enter
mov
cli
xchg
mov
sbb
mov
sub
fucomp
cmp
es
pop
clc
adc
mov
mov
ja
int3
icebp
pushf
stos
mov
gs
dec
sub
ins
mov
(bad)
jp
jg
rcl
mov
sar
imul
mov
rol
xor
std
mov
mov
pop
mov
cmps
or
xor
fisub
lods
or
jge
mov
stos
loope
leave
jns
jmp
jp
add
mov
mov
ror
popf
dec
sub
add
nop
xchg
and
jbe
idiv
xor
stos
inc
stos
jnp
mov
pause
(bad)
iret
out
xor
mov
nop
retf
sbb
inc
fs
inc
push
fcom
and
cmps
movs
inc
dec
xchg
int3
inc
jmp
div
and
fs
dec
xor
out
dec
ficomp
icebp
dec
test
into
sbb
pop
in
dec
icebp
popf
dec
xchg
inc
ficomp
std
fcmovb
and
test
stos
dec
out
jmp
mov
sti
mov
aad
stos
dec
mov
mov
fild
(bad)
gs
(bad)
icebp
push
dec
rol
push
ret
movs
iret
inc
inc
add
hlt
push
(bad)
aam
mov
shl
fisubr
mov
mov
mov
das
adc
cli
int3
in
xor
cmp
sbb
ja
xchg
cmovbe
call
pop
add
arpl
and
cmp
mov
fst
pop
mov
mov
mov
call
rcl
jecxz
mov
and
xor
ins
fst
xchg
nop
mov
test
(bad)
xlat
add
cdq
xchg
sub
push
xchg
(bad)
jmp
scas
mov
mov
mov
imul
es
mov
fwait
rol
les
icebp
rol
pop
inc
dec
mov
pop
jo
fndisi(8087
push
ficom
xchg
add
daa
fcmovnbe
add
fs
cli
shl
xor
gs
mov
adc
bound
inc
repz
push
or
jae
ss
ins
cs
adc
jae
push
inc
and
mov
arpl
push
ror
mov
imul
mov
cmps
push
lock
das
test
mov
add
and
and
xor
jnp
shl
js
sbb
cmp
movs
nop
xchg
sbb
pop
xchg
aaa
leave
mov
in
mov
and
pop
shl
ret
sub
repz
aam
cs
mov
push
add
out
ins
jne
mov
and
dec
inc
push
stos
or
sub
std
movs
xchg
out
mov
adc
push
push
ret
add
mov
js
push
cmps
int
push
cli
push
mov
cmp
add
jl
push
lock
jnp
retf
les
jne
push
mov
ror
push
inc
in
dec
mov
repnz
dec
jmp
imul
dec
cmp
stos
mov
sti
inc
mov
pop
xchg
or
jmp
push
in
ret
mov
repnz
sbb
and
add
dec
jle
fbstp
mov
jg
mov
mov
lea
jne
xor
adc
mov
test
rcr
(bad)
cmc
jo
daa
sub
push
sbb
adc
popf
mov
fnstenv
cmp
ins
stos
jne
and
stos
jmp
je
adc
shl
and
ins
iret
xchg
cmp
sbb
push
rcl
or
loope
jle
add
adc
fidiv
movs
mov
(bad)
mov
int3
dec
imul
scas
sub
fwait
jbe
fisubr
(bad)
jns
fwait
std
(bad)
sbb
lds
xchg
sbb
sti
imul
cmps
mov
push
add
mov
inc
lods
test
clc
xchg
pop
int
call
mov
dec
push
shr
aaa
pop
pop
(bad)
jns
pop
loope
xchg
sub
shl
add
call
mov
(bad)
aaa
aam
scas
fimul
leave
mov
in
adc
xchg
sbb
jne
push
inc
cmps
in
adc
movs
std
adc
inc
(bad)
fdivr
arpl
jns
inc
lock
lods
cmp
in
push
jmp
stc
cdq
push
cmps
xchg
shr
jg
pop
or
or
mov
das
inc
cli
jo
pop
or
mov
mov
adc
popa
rcr
gs
jbe
test
test
xchg
out
jno
test
aam
and
dec
sar
repnz
outs
ds
les
mov
test
and
lods
test
mov
in
dec
clc
inc
mov
jmp
wbinvd
sub
or
out
adc
mov
mov
push
and
cwde
ins
jg
das
push
jecxz
adc
(bad)
dec
test
imul
pop
mov
pusha
icebp
jge
bound
cmc
push
rcl
out
mov
(bad)
shr
mov
cmp
pushf
xchg
xchg
ret
ffree
or
push
dec
mov
cmp
adc
cmp
push
and
movs
sub
adc
add
fild
jle
xor
jne
sub
cli
pop
mov
sbb
je
inc
mov
lock
sub
jle
dec
movs
fdivr
scas
mov
push
add
cmp
and
scas
(bad)
mov
inc
fstp
inc
inc
push
das
and
mov
jae
jo
dec
cmps
jne
add
in
shl
jp
inc
add
outs
and
adc
cmc
adc
loop
pop
sub
pop
xor
jnp
call
cmp
sahf
rcr
mov
sahf
push
xlat
and
out
xchg
xor
or
es
mov
int3
xor
test
jno
push
fisttp
popa
into
dec
push
pop
xchg
jo
adc
es
xor
shl
movs
mov
callw
gs
bound
data16
popf
movs
arpl
shl
add
or
(bad)
ins
push
inc
push
or
push
mov
outs
and
inc
inc
mov
imul
outs
jg
mov
inc
sub
add
dec
sbb
imul
je
movs
push
add
mov
mov
and
jmp
fnstenv
ficom
sub
popa
or
adc
or
inc
cmp
jmp
lds
test
(bad)
int
lahf
adc
mov
sbb
xchg
cmp
sbb
adc
cld
call
shl
js
add
out
dec
sbb
in
inc
in
aam
push
push
inc
inc
les
xor
(bad)
dec
push
sbb
jns
xchg
sar
jns
cmp
outs
jno
test
cmp
add
mov
mov
jmp
sbb
cmp
out
sub
std
mov
addr16
xor
adc
lods
iret
pop
cmc
addr16
xchg
ds
das
jno
inc
jl
into
and
adc
adc
inc
out
popf
dec
mov
jmp
or
mov
xor
das
sbb
loopne
das
aam
cld
imul
jmp
pop
push
pusha
sahf
mov
push
pusha
ret
push
mov
jmp
test
test
sub
lds
xor
add
add
scas
test
add
out
push
xchg
or
scas
in
dec
cmp
xchg
neg
sub
xor
movs
inc
cs
test
ret
push
aam
int
inc
loopne
pop
sbb
mov
jnp
ins
xor
xor
ja
stos
pop
sbb
dec
mov
ret
out
and
data16
xor
push
and
pushf
test
fsubr
movs
out
jmp
xchg
fs
jle
xchg
ins
sets
(bad)
imul
retf
retf
mov
fwait
inc
mov
dec
scas
mov
aaa
ret
jmp
or
jl
jno
sub
rcr
addr16
imul
repz
cs
pop
call
xor
sbb
cmps
test
pushf
mov
out
dec
sbb
pop
clc
rep
or
inc
inc
xor
fcmovnb
jmp
adc
jo
and
hlt
mov
push
or
rcr
(bad)
in
outs
lds
in
xchg
jno
adc
sbb
inc
jbe
ffreep
pop
add
adc
retf
and
or
fdiv
inc
ins
push
xchg
out
push
push
call
sbb
cli
(bad)
or
imul
call
jp
nop
sti
jae
shl
(bad)
xchg
and
aas
add
in
cwde
loope
xor
ja
imul
nop
xchg
inc
aam
shr
mov
or
cmps
inc
call
add
xchg
aad
loopne
mov
cmp
sbb
arpl
fs
retf
aam
scas
jp
or
not
mov
xor
add
or
pop
stc
lods
fsubr
aas
clc
mov
mov
jecxz
inc
inc
pushf
out
bswap
mov
adc
rcl
clc
arpl
xor
test
out
fisub
test
push
xor
xchg
add
call
loopne
push
mov
sbb
ror
mov
jnp
(bad)
cmp
xchg
cmc
inc
clc
out
in
sbb
pop
jo
(bad)
and
in
mov
test
fsub
ret
dec
or
aas
or
loopne
ret
and
push
lahf
rol
(bad)
(bad)
cli
sub
ds
cmps
xchg
inc
mov
push
cmp
jle
inc
cwde
jbe
sbb
sub
cmps
imul
mov
je
push
push
push
das
mov
jb
xchg
cmp
cwde
and
add
mov
mov
test
inc
test
sub
fidiv
push
shl
xor
dec
bound
int
call
mov
cmp
retf
in
call
rol
lock
arpl
jae
push
imul
test
addr16
mov
mov
aas
setns
mov
cmp
pop
nop
out
sahf
jl
cmp
mov
aas
mov
sub
pop
arpl
jge
enter
push
hlt
aad
stos
lods
rcl
dec
addr16
jp
dec
cmc
or
mov
mov
in
pop
push
or
out
scas
in
xchg
cmps
push
fsub
std
sbb
cli
repz
or
inc
stos
push
loopne
out
bound
pop
popf
xor
mov
outs
mov
rcl
inc
or
cli
sub
aas
in
inc
and
(bad)
fs
pop
add
aam
push
cld
into
(bad)
outs
add
mov
mov
dec
mov
sub
pop
push
(bad)
adc
cld
sti
jmp
lods
and
jp
push
test
sahf
mov
idiv
scas
shr
jl
xchg
cmp
addr16
mov
cmc
jne
rol
sub
neg
mov
jl
xchg
or
mov
out
mov
fidivr
dec
add
or
in
scas
xchg
cmp
add
repz
push
inc
mov
sbb
mov
jne
stos
iret
mov
stc
jno
inc
jge
push
call
mov
ret
dec
add
xchg
inc
(bad)
out
dec
add
cmp
dec
(bad)
movs
addr16
sub
mov
ficomp
nop
and
jo
xchg
shr
push
cmp
mov
xchg
xchg
add
jne
dec
mov
pop
popa
and
pop
cdq
imul
dec
pushf
mov
in
(bad)
jae
adc
jno
test
lahf
adc
jge
jno
pop
inc
inc
js
sub
cmp
pop
in
xor
or
stc
inc
dec
jne
pop
pop
or
aam
mov
pop
ror
loopne
in
pop
sub
mov
icebp
(bad)
out
pop
div
js
mov
mov
arpl
sub
ins
dec
aad
ds
and
addr16
push
jg
hlt
lds
and
push
sbb
jl
xor
dec
xor
in
imul
aam
pop
push
pop
add
jae
jnp
jns
jno
(bad)
jg
cdq
jmp
mov
stos
or
adc
and
jae
push
cmp
jbe
sub
repz
pop
fnstsw
dec
in
fistp
mov
ins
loop
push
jne
and
cmp
scas
jno
clc
test
jne
cmp
lods
call
dec
add
jmp
test
jge
stos
fisttp
div
pop
movs
aas
ins
and
sbb
lea
pusha
hlt
shl
lds
lock
movs
pop
test
es
(bad)
cmp
lock
(bad)
and
imul
dec
dec
nop
jle
js
sub
jmp
fs
scas
ret
mov
(bad)
shl
adc
fldcw
fbstp
sti
adc
or
xor
xor
shr
addr16
cdq
mov
clc
xchg
inc
mov
push
ds
bound
pop
adc
add
dec
jae
cs
xchg
push
mov
fistp
sti
inc
jne
data16
test
nop
dec
call
inc
add
cmp
(bad)
or
cmp
aas
mov
je
cmp
aas
test
std
(bad)
or
and
jb
cmc
fistp
adc
and
sbb
dec
dec
je
mov
push
or
test
scas
sub
sbb
and
(bad)
(bad)
or
push
outs
inc
jns
fs
aas
out
xor
nop
dec
daa
or
and
test
xor
pop
fcmovnu
xlat
lock
xchg
aam
loope
loopne
push
icebp
dec
push
adc
fdivr
or
jb
or
adc
mov
fiadd
scas
mov
xor
or
pop
mov
je
ja
rcl
sbb
movs
fisubr
fs
cs
popf
(bad)
dec
scas
add
fist
jne
rcl
push
jno
mov
add
stc
add
mov
fwait
aas
cmp
(bad)
mov
mov
sahf
outs
adc
cmps
sti
fsub
pop
pusha
xchg
dec
gs
mov
aad
imul
pop
outs
movs
ja
scas
pop
adc
call
jge
fild
mov
mov
add
sbb
mov
pop
sahf
in
xchg
dec
inc
clc
jo
ins
jnp
adc
imul
mov
dec
xor
in
repnz
adc
(bad)
push
(bad)
jmp
test
mov
mov
add
and
add
mov
rep
adc
ja
rcl
adc
dec
int
inc
cld
cmp
lock
in
push
out
cmp
mov
stos
jbe
push
jg
bound
rcr
jge
out
pop
xlat
cmp
cli
pushf
dec
pop
push
xchg
clc
test
jl
imul
mov
das
mov
xchg
lods
inc
ja
mov
iret
int3
stos
call
jle
psadbw
ins
out
or
test
cmc
pop
es
mov
mov
test
retf
cmp
jne
mov
inc
mov
sub
clc
sti
xchg
mov
cld
retf
ret
or
mov
in
inc
inc
inc
stc
test
mov
cli
sbb
lahf
or
inc
or
retf
loope
jle
out
xchg
xchg
cmp
mov
or
push
cmps
or
dec
and
ret
mov
syscall
in
in
add
ins
dec
jns
outs
in
mov
inc
repz
mov
imul
pop
pop
addr16
jno
cmp
push
inc
or
cmp
and
mov
adc
loope
mov
in
fcomp
cmp
and
xchg
(bad)
retf
cmp
cdq
ss
pop
retf
mov
out
mov
mov
cmp
mov
xchg
cmc
pusha
pop
aas
jo
xchg
(bad)
and
cmps
sbb
and
retf
sbb
call
and
push
retf
cmc
xlat
retf
movs
inc
daa
(bad)
js
fdiv
int
mov
inc
paddq
aaa
test
adc
jge
or
out
mov
mov
inc
xor
(bad)
mov
or
adc
cs
shl
adc
retf
ins
jae
pop
pop
cwde
jl
cmp
sbb
rcl
or
pusha
push
push
pop
or
and
lods
out
xchg
mov
xor
push
xlat
lea
sar
repnz
repnz
jbe
pop
fsub
out
jns
scas
adc
mov
add
pop
int
mov
leave
mov
outs
xor
inc
mov
cmc
in
sub
mov
dec
jmp
jl
push
xlat
xor
mov
hlt
jne
push
or
pop
pop
scas
cmc
imul
inc
cmp
cmp
push
in
dec
stos
xor
in
xor
(bad)
hlt
inc
in
in
mov
mov
and
push
lods
hlt
xchg
inc
in
xchg
mov
out
js
and
clc
icebp
fdivr
cld
dec
lds
jecxz
add
dec
fcomip
mov
pop
rcl
pusha
push
(bad)
in
in
sbb
test
fild
dec
or
inc
adc
pusha
or
dec
jg
ror
aam
mov
aam
sub
sahf
fsub
ds
mov
push
push
ss
mov
inc
fistp
xor
push
or
je
mov
mov
pushf
imul
(bad)
mov
mov
into
inc
mov
mov
pop
push
dec
jl
add
jnp
retf
(bad)
pop
pop
sub
inc
in
sub
xchg
(bad)
stos
bound
cmps
and
mov
mov
dec
les
inc
icebp
dec
xchg
mov
retf
ret
or
lock
repz
jno
xor
or
mov
aam
out
test
out
pop
xchg
and
cmp
mov
and
inc
sub
push
push
pushw
retw
or
repnz
cmp
out
sbb
xchg
add
call
mov
push
int3
neg
cs
and
dec
dec
pusha
push
xor
dec
jnp
sbb
add
pop
adc
xchg
in
inc
xor
aas
sbb
pop
sub
jecxz
mov
out
ss
mov
bound
repz
cli
sbb
mov
fstp
inc
(bad)
jg
push
stc
das
call
retf
mov
cmp
in
adc
push
test
cwde
dec
repnz
(bad)
sub
mov
loop
js
sbb
fild
int
es
imul
sbb
mov
pop
fcomp
inc
push
push
fistp
dec
xor
and
fwait
push
stos
sub
es
xor
mov
inc
or
cmps
mov
mov
fwait
sub
dec
xchg
jmp
mov
cmp
aaa
and
ror
and
and
cli
cmp
aas
out
fdiv
cwde
cdq
stc
inc
jmp
mov
cld
out
lea
out
add
cwde
and
jbe
jle
mov
rcr
shrd
sbb
dec
jns
cld
shr
jb
pop
sbb
jbe
inc
(bad)
daa
mov
mov
mov
adc
aad
adc
pop
sti
inc
stos
or
jge
adc
fst
shr
and
mov
jne
or
div
test
js
push
adc
mov
fsubr
popf
jp
mov
out
fld
push
jecxz
gs
and
mov
in
scas
or
cli
ret
push
sbb
out
push
lahf
leave
mov
rol
daa
imul
in
test
mov
popa
push
dec
call
rcl
sub
pushf
inc
cmp
sub
jp
pop
sahf
jmp
int
sub
in
xchg
aaa
dec
push
xchg
addr16
aam
inc
addr16
adc
test
push
pop
jnp
dec
pop
mov
jo
repz
lea
outs
push
sub
aad
es
dec
jmp
sahf
jbe
inc
or
pop
jmp
cmp
ja
je
xchg
push
xchg
lahf
push
daa
push
and
xor
(bad)
ficom
cmp
sub
nop
outs
aad
jge
mov
cmp
dec
stos
ror
loop
in
call
pop
cdq
inc
xchg
adc
or
daa
fwait
jne
pop
jno
fdivr
and
test
repz
pop
mov
inc
imul
xor
(bad)
ret
sub
out
es
and
les
daa
or
cmp
dec
les
mov
jo
in
loop
ins
mov
sub
je
cli
and
mov
xlat
loopne
or
(bad)
pop
test
push
or
in
mov
arpl
push
pop
std
repnz
cmp
outs
call
out
dec
icebp
movs
sub
add
add
adc
mov
sbb
pop
pusha
neg
fiadd
adc
mov
sbb
dec
test
dec
icebp
mov
pop
sbb
adc
mov
popf
ss
jmp
xchg
inc
mov
inc
push
ins
and
pop
xchg
mov
out
pop
jae
clc
mov
pop
xchg
mul
mov
jmp
lods
cwde
hlt
aam
inc
xchg
push
sbb
push
jp
mov
push
retf
or
push
xchg
retf
push
stc
stos
js
movs
xor
jnp
jg
int
dec
jmp
xor
fidiv
mov
inc
call
sti
xchg
sar
mov
out
xchg
and
les
lds
adc
or
jle
push
push
mov
inc
daa
sbb
iret
out
pop
xor
cmp
push
popa
movs
rcr
mov
ss
movs
xor
into
inc
push
add
pop
fidiv
call
jl
jl
std
inc
imul
jmp
pop
and
cmp
and
addr16
jns
pop
or
xchg
loope
cmc
nop
sahf
repz
cmp
mov
mov
fcomp
cld
out
and
sbb
pop
test
mov
adc
cwde
mov
iret
dec
ja
fisub
jo
xor
add
mov
shl
loopne
not
jg
pop
jo
xchg
pusha
dec
jg
jge
loopne
rcl
jo
repnz
mov
dec
lock
push
adc
lahf
xchg
inc
dec
in
arpl
cmp
fild
push
minps
sbb
pop
mov
xchg
pop
jle
clc
pop
aam
out
xchg
mov
repnz
or
pop
enter
push
hlt
inc
sub
mov
outs
mov
xor
dec
jge
cmp
jg
inc
xchg
test
xchg
(bad)
jno
inc
int
sub
pop
jmp
mov
cmp
or
fstcw
mov
mov
leave
sub
jge
scas
jno
(bad)
mov
inc
and
movs
lods
retf
sub
je
cmp
(bad)
adc
and
cwde
stos
xchg
test
nop
xchg
int
xchg
mov
xchg
fnstcw
clc
xchg
jle
repz
mov
jg
shl
enter
(bad)
hlt
pop
inc
jae
sub
stos
ret
scas
cmps
cwde
jae
and
ds
dec
into
repnz
es
dec
fiadd
cli
lea
add
fst
shl
(bad)
div
inc
arpl
fbld
movs
xchg
xchg
(bad)
sbb
sti
adc
xchg
dec
ss
daa
inc
adc
lock
rcr
fist
jmp
call
sbb
sbb
stc
mov
xchg
and
mov
sbb
mov
mov
mov
aam
add
call
repnz
fidiv
and
cmps
shl
mov
jb
xchg
jge
cmps
or
mov
outs
cdq
xor
mov
xchg
sbb
and
retf
pop
push
imul
mov
lods
jl
and
jmp
add
xchg
scas
mov
pop
mov
xor
into
outs
xchg
(bad)
pop
dec
jg
cmp
fsub
pop
pop
call
push
es
imul
push
cmp
not
pop
aad
xor
adc
add
aam
pop
out
cs
add
cmp
movs
stos
cwde
pop
sub
push
adc
popa
enter
ins
cmp
push
dec
popf
sub
jecxz
sbb
xor
add
sbb
pop
add
adc
pop
xchg
xlat
in
and
xchg
sahf
xchg
and
mov
inc
adc
cmp
adc
add
call
sbb
addr16
jbe
or
jg
shl
pop
retf
sbb
adc
push
cdq
pop
sub
mov
cmp
mov
jns
int3
inc
inc
or
out
mov
test
mov
mov
pop
xor
enter
rol
jle
and
loop
cdq
xchg
cdq
scas
out
jns
movs
sbb
pop
xchg
adc
inc
fs
mov
(bad)
and
pop
(bad)
jmp
imul
sar
int
shl
add
mov
sbb
cwde
add
jecxz
repz
idiv
pop
mov
fstp
lds
mov
loopne
fisttp
pop
in
mov
test
das
icebp
sub
cmp
or
test
or
mov
enter
sti
xor
lahf
xor
jmp
cli
and
mov
gs
dec
jns
in
cmps
retf
cmp
mov
rol
fdiv
(bad)
pop
inc
fsubr
mov
add
jno
or
cwde
fcomp
(bad)
sbb
push
sbb
pop
stos
mov
sub
xchg
push
xchg
inc
sbb
mov
sbb
mov
mov
xchg
push
cld
xchg
jge
sbb
sub
mov
mov
(bad)
sbb
icebp
xor
in
dec
sbb
lods
xor
jmp
jmp
addr16
mov
or
or
adc
ret
xlat
dec
mov
inc
sub
dec
mov
dec
jg
xor
fsub
ins
xchg
test
nop
dec
mov
dec
in
adc
jmp
jb
int
dec
adc
js
pop
xchg
mov
push
push
xor
and
mov
imul
xchg
mov
or
les
aad
push
faddp
or
push
repz
aaa
add
(bad)
mov
shr
adc
loope
retf
jno
or
xor
or
adc
pop
push
sahf
xor
(bad)
push
push
fwait
and
xchg
cmp
stc
jge
or
mov
mov
fyl2xp1
ret
test
jp
push
sbb
je
xor
mov
push
pop
push
ret
loopne
iret
and
pop
xor
xchg
jecxz
jbe
xor
mov
rcl
or
jns
pop
lea
pushf
jnp
(bad)
cli
imul
call
out
(bad)
aad
xchg
cmps
xor
into
lock
aaa
repz
fiadd
mov
mov
in
sub
push
lods
loope
mov
repz
or
in
(bad)
movs
jb
retf
xor
stc
jae
push
loope
push
sub
test
jmp
setl
imul
jmp
inc
ins
cmp
fstp
stos
cmp
iret
sbb
sti
cmps
cwde
jle
retf
fstp
fadd
dec
sub
rcl
sbb
xchg
sbb
sbb
es
inc
mov
ret
cmp
adc
fsubr
sub
cli
cmp
imul
push
jl
fs
lea
outs
div
sub
mov
ds
sar
sti
cmc
sbb
jecxz
aam
and
lahf
aad
pop
cmp
xor
call
test
imul
retf
adc
pushf
in
loopne
jg
cmp
adc
mov
je
(bad)
pop
cdq
sub
cmp
pop
test
sar
cmps
sbb
mov
mov
sub
mov
sub
cmc
fisubr
(bad)
aad
gs
gs
sub
adc
cmc
retf
fisttp
sub
lds
xchg
jae
ret
push
movs
js
inc
shl
rol
jb
dec
and
jae
fistp
imul
xlat
xor
sbb
push
inc
cs
(bad)
pop
out
and
xchg
hlt
adc
ucomiss
pop
mov
rcl
nop
je
mov
pusha
nop
test
jbe
mov
sub
out
enter
xchg
add
fistp
jne
jns
sbb
pop
jns
gs
push
ins
repnz
xchg
popa
mov
push
loope
imul
js
jle
mov
inc
adc
mov
mov
imul
xchg
mov
ds
fisub
push
imul
ret
xchg
xor
mov
push
gs
lods
into
(bad)
pop
fadd
pop
imul
and
sbb
sub
sti
test
cmp
sbb
iret
in
outs
leave
mov
into
shr
sbb
mov
lahf
call
fwait
and
push
loope
dec
sub
shr
js
add
arpl
or
push
cmp
sbb
icebp
sti
jbe
loopne
cmp
inc
jbe
inc
dec
stos
aad
loop
mov
scas
bound
mov
push
mov
hlt
pop
int3
add
out
adc
cmp
bound
or
push
add
xor
mov
and
dec
out
and
into
add
sbb
dec
cwde
shl
sti
mov
rol
hlt
ret
push
shl
dec
push
das
push
push
sbb
out
repnz
jecxz
iret
xlat
fwait
ds
ds
jae
sub
cmp
xchg
xor
xchg
enter
cli
adc
mov
mov
iret
mov
mov
popa
dec
push
mov
repz
clc
out
std
bound
in
ror
mov
cmps
xchg
sub
sub
test
test
mov
add
ret
outs
inc
dec
mov
mov
inc
into
sbb
xor
dec
xor
xor
sub
adc
mov
pop
dec
pushf
popa
data16
inc
call
adc
fs
dec
mov
xchg
movs
push
xchg
in
cld
stos
repz
adc
pop
loop
sbb
fisubr
rcl
mov
(bad)
cmps
cmp
mov
stos
je
aad
jne
jo
ss
adc
mov
sub
pop
pop
xchg
jmp
fisubr
mov
mov
xor
sbb
dec
sbb
pop
into
in
test
mov
mov
fistp
lahf
outs
fucomp
imul
adc
ficom
or
(bad)
and
xlat
xor
sub
cli
or
in
lods
test
jo
mov
pop
in
out
ins
mov
and
in
repz
imul
into
sti
sbb
sub
int3
jb
movs
pop
xor
inc
jp
mov
cmp
daa
mov
hlt
dec
pop
scas
jno
xor
nop
fisttp
jmp
inc
ds
ret
cli
mov
sbb
xchg
fwait
mov
int3
int3
sar
sub
xlat
cld
mov
sub
rcr
int3
mov
mov
pop
jmp
stc
in
shl
dec
enter
fmul
imul
rol
cs
cmp
jmp
sar
sbb
fnstenv
add
add
sbb
loope
push
sub
loop
push
je
dec
int3
adc
or
repz
test
adc
add
inc
push
cld
mov
add
mov
jo
lahf
xchg
jns
fxch
gs
pop
ret
(bad)
pop
jle
jo
int
addr16
pop
lods
mov
retf
sahf
(bad)
mov
movs
mov
retf
pop
cwde
lock
or
test
pop
(bad)
scas
sbb
mov
add
inc
imul
icebp
jmp
xchg
xor
xchg
mov
outs
and
aad
jmp
adc
fldl2t
push
sbb
call
daa
adc
shl
loopne
mov
ret
mov
pop
dec
and
mov
cld
dec
movups
adc
sub
outs
push
adc
call
fdivr
fidivr
les
and
jmp
dec
aad
push
(bad)
repz
inc
loop
xchg
pop
xor
in
and
and
call
dec
jmp
repz
push
mov
shl
mov
push
dec
xor
add
mov
pop
lea
mov
(bad)
fs
xchg
mov
(bad)
and
cli
push
xor
in
add
fdiv
ror
and
ficom
adc
cmp
(bad)
adc
mov
scas
mov
cmp
inc
sub
xchg
or
xchg
mov
bound
add
xor
push
mov
scas
jge
lods
ret
adc
pop
pop
add
jnp
push
in
stos
mov
inc
push
scas
mov
rcr
mov
xor
mov
xchg
lods
inc
jns
xchg
push
scas
mov
inc
xlat
sbb
das
es
inc
fmul
out
xlat
cwde
xor
das
xchg
sbb
push
movs
xor
daa
in
scas
mov
adc
sbb
js
cmp
nop
js
retf
cwde
movs
jg
cmp
pop
add
shl
dec
xchg
ins
dec
fcomp
jmp
jmp
inc
jecxz
push
stc
sub
sbb
fnstenv
popf
sahf
jbe
(bad)
xor
ret
std
imul
sub
push
push
rcr
cmp
retf
in
ror
lods
ret
outs
dec
pop
pop
js
dec
dec
cmc
push
test
imul
imul
rcr
lods
mov
les
adc
sbb
pop
jbe
jl
jne
push
fdivr
push
cld
xchg
add
push
jbe
xchg
push
and
ins
retf
mov
test
int
pop
xlat
push
addr16
call
cwde
ror
cmc
pop
lahf
sub
and
mov
push
stos
cmp
fsubrp
aad
pop
stos
cmp
push
cwde
add
mov
inc
sub
hlt
mov
or
cld
mov
pop
in
addr16
jne
inc
out
inc
add
scas
je
js
inc
(bad)
pop
xlat
pop
es
push
pop
retf
xor
push
aaa
mov
mov
test
mul
mov
mov
(bad)
enter
and
push
dec
cmp
jnp
push
push
cmc
ss
or
mov
call
xor
xchg
out
or
aam
sbb
pop
jb
out
pop
retf
sbb
ja
sub
add
or
in
xor
mov
cmp
(bad)
push
sub
mov
lods
cmp
add
out
mov
jne
daa
fstp
test
stos
into
es
fst
xchg
push
popf
je
lds
xchg
cmp
in
ins
dec
pop
jp
and
mov
aad
mov
push
mov
lods
dec
fbld
jl
aad
mov
xlat
xchg
fdivr
or
sahf
xor
and
sar
rcr
popf
pop
mov
mov
cmc
xchg
ins
jp
fbld
arpl
sub
cld
xor
xchg
jmp
rcl
lds
cmp
xchg
leave
out
add
cdq
add
jo
push
call
adc
ror
mov
daa
icebp
std
xor
repnz
jb
shl
std
push
dec
aaa
outs
sub
div
add
fcom
inc
in
mov
hlt
sub
pop
jae
aam
xchg
mov
pop
loopne
fcmovbe
fbstp
test
jbe
sbb
mov
ins
or
mov
call
aad
lahf
adc
mov
out
loope
and
mov
scas
pop
jge
les
sbb
add
call
(bad)
in
jbe
aas
or
inc
add
cdq
add
lea
fld
add
out
movs
es
sbb
xchg
sti
dec
dec
movs
test
sbb
mov
out
out
loope
xchg
call
lea
test
in
lods
pusha
jb
jge
xchg
pop
cmp
out
test
and
adc
lods
das
xor
mov
je
xchg
sbb
es
in
gs
stos
pushf
test
inc
mov
inc
push
fistp
scas
dec
outs
ds
in
xchg
out
add
pop
cmp
aad
xchg
adc
sub
mov
push
sub
stos
adc
call
(bad)
lar
daa
(bad)
xchg
adc
call
sub
push
add
add
fidivr
in
lahf
adc
in
repz
jmp
stc
(bad)
loope
inc
shl
adc
ret
ins
repnz
cmp
bound
retf
jns
sub
adc
add
jg
pop
xchg
pop
pop
push
out
shl
cmc
test
mov
or
jns
hlt
pop
inc
or
outs
add
or
sub
test
scas
jbe
adc
cmp
inc
mov
scas
inc
add
add
xor
push
int
jp
mov
in
dec
add
stc
xor
sub
jne
(bad)
js
jb
inc
xchg
or
xor
mov
mov
cmp
push
ins
test
daa
ja
fdivr
push
nop
sub
cmp
sub
ins
loopne
outs
daa
mov
and
mov
pop
retf
add
in
xor
in
inc
repnz
add
retf
adc
sahf
sub
mov
mov
push
push
daa
ja
aad
shr
loop
cmp
dec
inc
test
out
xor
jmp
sbb
jns
xor
daa
sub
cmp
xor
comiss
sbb
stos
dec
dec
mov
push
aaa
out
push
in
and
scas
inc
pushf
daa
and
int
push
push
sub
je
or
sbb
dec
cmp
das
sbb
sbb
(bad)
scas
add
scas
push
mov
and
lods
mov
aas
cmp
and
rcl
outs
addr16
fld
pop
dec
cmps
aam
xor
(bad)
mov
push
andnps
pop
xchg
rcl
sbb
retf
test
sub
pop
inc
mov
cmp
repz
sahf
pop
mov
dec
loope
pop
mov
ret
cmp
scas
ficom
pop
jbe
lods
dec
ds
(bad)
mov
ds
cmpxchg
frstor
outs
or
sti
xor
ret
inc
sbb
mov
jecxz
mov
dec
xchg
adc
cmp
hlt
aaa
popa
loope
push
rol
(bad)
and
mov
xchg
aad
push
test
jae
mov
ins
cwde
jno
pusha
sahf
aam
sbb
ret
ins
jle
inc
ror
dec
cmp
dec
push
xchg
lock
mov
repnz
lahf
jb
clc
movs
xor
pop
adc
ror
in
adc
hlt
ret
js
das
push
pop
test
ss
out
ret
repz
jmp
pusha
push
adc
mov
rcl
mov
outs
icebp
cmps
xchg
xchg
cs
push
fld
stc
push
imul
rcr
add
jl
out
fisubr
xor
xchg
xchg
outs
movs
aam
aaa
inc
xchg
and
add
jnp
(bad)
push
xchg
in
lea
push
loope
and
sbb
xchg
sbb
xchg
mov
push
test
xlat
inc
pop
in
call
mov
xchg
cmps
arpl
xchg
jl
or
fstp
jecxz
pop
ret
inc
mov
mov
mov
mov
ins
test
cmp
and
mov
cmp
dec
loop
mov
adc
dec
mov
out
ss
push
fwait
xor
dec
lds
mov
imul
in
add
in
rcr
test
dec
leave
retf
cmp
xchg
and
sbb
sbb
por
jmp
repz
cli
xor
mov
inc
sub
mov
mov
cld
nop
sbb
dec
or
dec
xchg
pop
and
inc
push
xchg
retf
xchg
push
cwde
ins
retf
and
jle
test
js
call
das
iret
mul
adc
xlat
lock
mov
(bad)
mov
mov
mov
aaa
movs
inc
jo
add
pop
xor
xchg
xchg
lods
mov
cmps
fadd
inc
mov
xor
repz
loope
pop
push
sbb
cld
jmp
into
psubw
cmps
gs
das
inc
jb
jg
adc
mov
scas
ins
(bad)
sub
jns
xor
or
push
ret
jae
dec
mov
int
cmp
retf
imul
mov
xlat
mov
enter
xchg
fs
dec
sub
add
pop
or
std
cli
dec
es
lods
mul
mov
in
xorps
mov
xchg
ds
jle
out
cs
mov
mov
enter
lock
mov
xor
jmp
and
mov
mov
iret
sbb
xchg
xchg
mov
int
mov
mov
jp
adc
enter
push
jl
das
add
sub
aam
ins
cmp
popa
mov
iret
sbb
in
cmp
xchg
rcl
mov
add
scas
xor
mov
dec
sbb
xchg
inc
je
shl
int3
push
fistp
sar
aaa
fldcw
jle
gs
dec
or
jp
rcl
push
pop
test
icebp
int
sub
lds
xchg
clc
ins
rcr
pop
shl
mov
inc
jnp
lds
popa
inc
mov
(bad)
imul
add
fcmove
jbe
cwde
and
mov
loop
adc
inc
jb
jo
add
inc
test
(bad)
test
and
ja
sti
cld
fdivr
pop
or
cmp
inc
dec
int
xchg
fdivr
std
xor
pop
mov
dec
shl
xor
mov
hlt
gs
cdq
mov
mov
mov
and
out
push
cmp
fs
xor
xchg
das
popf
lea
retf
fcmovb
add
scas
das
add
movs
push
movs
jp
aas
mov
jae
loopne
into
and
jbe
or
sub
test
aad
pop
add
repz
imul
jge
rol
add
(bad)
mov
popa
repz
cld
in
xor
ins
mov
mov
(bad)
jo
int
outs
mov
ins
xor
inc
or
jns
(bad)
not
adc
fld1
push
cli
xor
rcr
pop
pushf
in
or
movs
jecxz
push
pop
cdq
ror
fwait
movs
or
outs
in
cmps
sbb
cmp
push
outs
mov
inc
jo
loopne
or
mov
cdq
cmps
mov
fsubr
fwait
sbb
popa
push
xor
sbb
mov
movs
ins
ins
js
jne
pop
mov
sahf
(bad)
pop
ret
es
sti
push
(bad)
inc
icebp
mov
in
pushf
mov
xor
mov
sahf
pop
xchg
add
push
jno
icebp
addr16
scas
inc
aam
retf
dec
rcr
adc
call
test
pop
in
std
rcr
and
cmp
(bad)
add
int3
and
imul
(bad)
push
mov
std
add
add
xchg
add
fwait
icebp
or
in
xchg
adc
lock
clc
test
jo
sar
push
push
movs
sahf
xchg
dec
jno
sbb
aad
inc
je
out
add
sbb
jno
and
ins
or
cmp
call
cmp
mov
lods
outs
lock
and
out
jae
retf
dec
out
aas
(bad)
mov
imul
ret
mov
ret
mov
jecxz
fidiv
push
(bad)
call
cmps
xchg
mov
pop
push
data16
add
jecxz
push
add
ret
mov
(bad)
outs
cwd
sbb
mov
mov
and
push
loope
out
lods
int3
sub
inc
xchg
shr
cs
fs
dec
ins
jnp
test
inc
and
push
loope
dec
jnp
mov
push
xchg
xchg
jecxz
jmp
xchg
out
adc
or
popf
jecxz
mov
fs
test
dec
rcl
sub
hlt
or
out
arpl
and
mov
jl
adc
mov
loope
pop
push
test
add
xchg
enter
and
inc
jecxz
push
push
lods
sar
pop
ds
cmps
aad
add
jmp
pushf
push
fcomp
xor
inc
in
adc
retf
cld
lock
in
stos
push
mov
sbb
mov
hlt
inc
pop
test
mov
cdq
sbb
jge
dec
stos
inc
out
mov
lds
(bad)
std
mov
ror
rol
pop
sahf
pop
and
mov
ret
inc
fidivr
or
repnz
call
xchg
hlt
test
add
sbb
fbstp
lods
sbb
out
xchg
sbb
aas
rcr
out
arpl
cmps
cli
mov
in
add
fidiv
out
or
sbb
cld
or
push
addr16
mov
jecxz
pop
idiv
or
ret
repnz
repnz
js
ins
inc
fisub
es
test
xchg
and
lods
mov
push
in
or
scas
cmps
push
fs
sbb
mov
or
iret
aad
out
and
jnp
and
pop
and
popf
imul
pop
cmps
xchg
or
sbb
mov
push
pop
inc
push
add
shl
ret
popa
rol
or
sbb
sahf
adc
cld
fmul
adc
jp
jbe
movs
mov
mov
stos
dec
add
and
push
sbb
mov
or
stos
mov
mov
pop
jbe
scas
jmp
inc
push
cmps
pop
jl
bound
adc
retf
xor
and
mov
inc
add
addr16
sub
fld
xchg
ds
mov
imul
sbb
lock
movs
inc
push
push
test
mul
jge
movs
mov
jmp
lahf
(bad)
pop
mov
enter
mov
sbb
frstor
pushf
pop
dec
(bad)
in
jmp
cli
and
movs
mov
(bad)
fnstcw
mov
in
fistp
xchg
ret
cdq
mov
repnz
fcmovnu
js
out
jecxz
and
and
rcr
movs
inc
mov
stc
outs
sub
pop
dec
cld
ss
(bad)
xor
in
inc
out
(bad)
outs
sub
(bad)
sbb
or
jge
or
cdq
and
push
xor
sub
sub
sub
fisubr
cmc
repz
hlt
loop
(bad)
push
jns
in
xchg
imul
loop
add
cmp
mov
and
add
mov
popf
jno
and
jmp
cmps
scas
popa
js
sub
push
ret
ror
xchg
push
mov
jo
lock
stos
enter
sbb
sbb
cmp
jb
(bad)
xor
cmp
pusha
rcr
push
cmp
add
dec
sbb
sahf
cs
mov
fist
push
xchg
(bad)
sbb
jl
out
int3
(bad)
mov
sbb
xor
fisubr
aas
add
jae
cmps
scas
(bad)
ins
push
sahf
inc
mov
rcr
scas
test
sub
ins
fwait
dec
add
addr16
pop
dec
sbb
mov
mov
xchg
pop
push
pop
dec
scas
mov
cwde
clc
pop
nop
cmp
out
shl
repz
adc
(bad)
rcr
repnz
lods
inc
scas
push
mov
xor
add
xchg
and
ins
jb
push
out
mov
inc
xchg
inc
push
or
pop
cmps
or
xor
out
aam
into
lahf
aam
pop
hlt
adc
outs
push
or
jp
ret
daa
ds
jnp
xchg
inc
push
inc
sti
cwde
pop
xchg
out
add
in
cwde
mov
pop
pop
push
(bad)
fdiv
ds
mov
in
arpl
xchg
les
push
in
test
test
aas
sbb
push
pop
leave
aaa
cwde
mov
mov
mov
xor
shl
cmps
push
mov
cs
mov
popa
ficom
aaa
fadd
pop
push
ss
dec
imul
push
cld
mov
out
jb
mov
daa
(bad)
movs
push
jge
iret
movs
mov
sub
push
push
pusha
jne
lds
mov
push
jmp
cs
jns
inc
mov
xchg
fld
loope
sbb
add
mov
out
cdq
xlat
cld
xchg
stos
data16
push
call
xchg
dec
sbb
adc
and
repnz
or
or
ret
lock
jmp
jp
push
xor
inc
add
test
cwde
iret
repnz
shr
scas
sub
or
sar
icebp
popa
icebp
lods
xor
xor
push
punpckhwd
pop
ja
pop
out
mov
mov
push
mov
dec
fnstcw
mov
cmps
add
(bad)
mul
cli
and
hlt
and
mov
shl
aaa
(bad)
mov
test
into
mov
adc
pop
mov
sbb
sub
mov
mov
jg
ror
jmp
adc
ja
fisttp
shl
jl
daa
aad
shr
dec
or
test
test
adc
inc
imul
sbb
push
fisubr
cld
jl
mov
movs
sub
push
adc
xchg
pop
or
mov
inc
fld
inc
or
sub
ja
fadd
aaa
pop
xor
jmp
mov
push
adc
aaa
cmp
or
jp
into
add
je
cld
sahf
stos
or
mov
push
xchg
retf
test
adc
cmp
inc
mov
xchg
or
jg
test
push
retf
jmp
test
leave
dec
inc
ins
mov
not
xchg
lods
ret
xchg
sub
adc
inc
stc
push
sub
fiadd
ds
in
push
das
or
mov
cli
fs
inc
mov
(bad)
out
ficom
and
sbb
js
test
test
jecxz
rcr
(bad)
add
pop
xchg
mov
jle
xchg
(bad)
jbe
sbb
rcl
enter
cmps
sbb
inc
sbb
sti
xchg
in
xchg
xor
in
pop
outs
dec
mov
add
fucomp
rol
ja
in
clc
and
mov
daa
movs
mov
push
xlat
in
sar
out
xor
int3
cmps
nop
rol
xchg
aas
jno
shl
and
scas
addr16
mov
scas
mov
movs
pop
adc
cdq
daa
cmp
xchg
mov
das
(bad)
ss
and
push
adc
mov
(bad)
stc
mov
outs
(bad)
xchg
dec
mov
iret
fisub
xor
call
mov
lods
bswap
scas
push
fistp
inc
fst
mov
adc
push
cmp
in
loop
push
xchg
leave
inc
mov
inc
cmp
(bad)
(bad)
shl
ret
cs
pop
out
jb
cmps
lods
sub
xchg
and
or
mov
lock
or
lods
enter
nop
pop
fidiv
fistp
cld
popf
sbb
jge
addr16
rcl
adc
(bad)
cmps
xchg
or
and
push
in
jge
or
in
sub
lock
inc
xchg
jno
stos
jo
test
cld
cmps
mov
fdiv
dec
dec
dec
ins
jnp
iret
mov
jae
push
xchg
jbe
push
push
xor
leave
xchg
cmc
cwde
test
push
push
jle
sub
sub
outs
mov
adc
adc
mov
mov
addr16
xor
fnstenv
sub
or
jecxz
call
xchg
(bad)
lea
ins
scas
jo
add
xchg
pop
fcomp
out
jmp
fistp
push
xchg
arpl
clc
cmp
jg
enter
inc
push
xchg
jns
mov
mov
pop
cmp
or
inc
cmp
jecxz
mov
mov
repnz
pop
aam
inc
xor
cwde
out
retf
dec
adc
leave
pop
lahf
mov
mov
sub
cmps
scas
call
das
cmp
pushf
adc
mov
stos
xor
pop
inc
dec
xor
jge
add
adc
cmp
out
cmp
out
jbe
inc
movs
jmp
inc
xchg
or
pop
mov
int
sbb
dec
mov
inc
add
cmp
shr
lods
push
gs
daa
adc
jno
popa
call
les
test
arpl
aaa
clc
rep
mov
cmps
pop
movs
popa
pop
adc
shr
jae
jno
outs
je
jmp
in
into
push
std
outs
fimul
in
mov
jg
call
cmp
xchg
retf
mov
dec
xor
fcom
jno
fiadd
inc
jp
pop
test
das
xor
or
and
push
js
mov
jecxz
aas
in
and
xchg
push
sub
stos
pop
cdq
outs
nop
cmp
inc
sub
inc
pop
dec
shl
add
sub
push
fmul
xchg
and
neg
add
sbb
add
push
push
sbb
lds
ins
dec
jno
push
sub
outs
mov
and
mov
loope
xchg
sub
pop
adc
cmps
jo
xor
lock
jb
mov
ret
dec
cmps
mov
cld
out
iret
outs
jle
adc
mov
(bad)
clc
pop
es
jecxz
mov
jnp
push
push
fsub
or
jle
jle
sbb
push
cmp
xchg
pop
jg
repnz
jmp
loope
inc
cwde
push
push
movs
das
mov
int
mov
push
fs
mov
icebp
inc
lock
enter
and
out
retf
jp
cmp
fcmovbe
fnstcw
fwait
sub
jle
cwde
leave
jne
cmps
movs
mov
xor
sar
scas
cmc
out
(bad)
(bad)
fimul
(bad)
sub
test
fcomp
jecxz
add
test
imul
jmp
aaa
sbb
adc
jbe
in
loop
adc
ds
adc
pop
out
enter
ret
(bad)
push
test
out
fcmovne
xchg
xor
xor
das
jnp
pop
push
push
loopne
pop
inc
mov
mov
fld
and
push
pop
xchg
mov
pusha
retf
popf
xchg
mov
mov
push
dec
xlat
jl
pushf
xor
cmp
shl
adc
xor
aad
outs
fsubr
outs
(bad)
cwde
test
ds
mov
jecxz
cmp
jle
sub
iret
lds
gs
aaa
test
push
rcr
(bad)
dec
xor
test
mov
jmp
repnz
xchg
ds
jo
cwde
sbb
shl
add
sbb
dec
aam
mov
lea
add
mov
int
inc
sahf
arpl
fiadd
xor
out
mov
out
pop
icebp
cli
aad
icebp
popa
lahf
cli
dec
leave
dec
mov
xlat
push
or
push
enter
mov
cmc
aam
push
lock
mov
and
int3
ret
repnz
push
ret
retf
ror
jecxz
xor
mov
xor
push
pop
xchg
cmp
inc
loope
(bad)
pop
fwait
xchg
xlat
add
in
xchg
mov
mov
jb
push
in
mov
lea
test
cmps
xor
ins
cmp
mov
enter
add
push
(bad)
icebp
dec
jle
pop
das
and
cmps
lds
gs
jno
js
sbb
js
cmp
adc
pop
call
jbe
(bad)
cmp
ins
retf
jl
push
iret
jmp
dec
out
outs
cmc
js
(bad)
(bad)
inc
(bad)
ret
cld
repz
shl
cmpxchg
push
daa
mov
test
out
xchg
add
movs
lods
test
dec
fs
pusha
sub
je
and
push
ret
mov
shl
out
dec
lods
pushf
stos
jnp
pop
mov
push
inc
popa
fimul
cli
callw
push
adc
cmc
int3
test
jl
inc
mov
loope
aam
or
xor
push
cmps
bnd
sub
loop
fstp
test
lods
add
push
inc
in
inc
aam
pop
hlt
cld
jns
dec
and
cld
scas
and
mov
das
pop
or
push
mov
pop
icebp
int
iret
call
in
fdivr
dec
outs
fistp
jmp
outs
arpl
in
and
xchg
cmp
push
popa
cmc
lahf
(bad)
jo
lods
nop
movs
mov
les
rcl
push
arpl
mov
mov
rcr
sbb
out
jbe
adc
stos
adc
lock
sub
outs
xor
sbb
and
dec
sub
cld
call
cwde
shl
add
scas
stos
pop
out
mov
xchg
push
push
push
(bad)
xor
div
sbb
pop
sub
enter
xchg
dec
mov
push
mov
pop
ja
pop
and
fnstcw
pop
add
loop
mov
test
ins
mov
loop
fwait
stos
cli
mov
inc
inc
dec
mov
xchg
push
ins
adc
sti
into
jno
jg
retf
xor
mov
movs
js
dec
stos
sbb
out
lea
leave
sbb
xchg
dec
ret
jns
push
clc
mov
xchg
jle
cmp
or
push
ins
cmp
mov
mov
sti
sub
jbe
out
sub
ins
call
or
inc
xor
sbb
and
loopne
div
idiv
sub
cwde
scas
lods
loop
rcl
sbb
cld
adc
inc
inc
mov
pop
fsubp
imul
sar
add
inc
call
mov
mov
push
push
mov
cmp
ins
jnp
movs
dec
fist
or
aas
in
sbb
daa
jl
ficom
pop
dec
adc
mov
stc
mov
cmps
out
mov
cli
(bad)
sbb
mov
cmc
mov
cmp
gs
xlat
out
or
pop
jnp
cmp
push
add
push
pop
test
clc
fisttp
or
imul
xor
mov
stc
adc
dec
(bad)
int
xor
cmp
mov
jl
inc
iret
stos
ds
mov
push
pop
sbb
push
and
fcmovnu
sbb
div
out
loop
push
mov
push
fdiv
xchg
push
jnp
xlat
ret
aam
fwait
lahf
dec
pop
push
ja
inc
or
jmp
sub
mov
aas
cmp
ret
and
enter
out
cli
loop
mov
cmps
xlat
dec
fadd
in
mov
les
ins
mov
ror
adc
and
pop
push
imul
mov
inc
inc
sub
push
sub
mov
push
inc
mov
(bad)
int3
push
ins
iret
pop
fadd
clc
add
inc
imul
(bad)
or
dec
mov
dec
(bad)
(bad)
imul
xchg
jnp
into
std
or
sar
sub
sub
mov
int3
mov
xlat
int3
repz
(bad)
ins
push
rol
and
out
mov
cmps
push
and
hlt
add
or
dec
xchg
aam
stc
jge
loopne
push
(bad)
fld
push
push
loopne
dec
pop
iret
dec
pop
add
xchg
pusha
clc
and
xchg
pop
(bad)
adc
test
adc
and
dec
outs
pmuludq
push
adc
cmps
add
inc
pop
jb
sub
ficomp
push
jmp
adc
fincstp
pop
cmp
arpl
push
push
add
shr
xor
ret
mov
cli
xor
xchg
jmp
es
add
les
jo
adc
jns
and
cmc
test
push
xchg
jmp
fnstcw
xor
fcmovnu
iret
scas
jp
dec
pop
inc
push
outs
loopne
pop
jp
pop
sub
adc
pop
adc
je
jp
cwde
pop
scas
fidivr
xchg
ficom
(bad)
pushf
mov
and
aaa
inc
test
sub
push
sub
or
adc
mov
dec
pop
(bad)
xchg
sbb
gs
addps
mov
mov
js
jnp
sub
lods
dec
(bad)
sar
inc
dec
dec
stc
xchg
es
or
test
imul
push
xor
push
or
mov
cmp
xchg
add
lods
out
ds
repz
mov
inc
sti
aaa
pusha
mov
sbb
lods
shl
jns
add
add
mov
mov
test
cli
lds
lds
jne
shl
out
call
test
retf
and
stc
add
mov
fs
test
rcl
pop
pop
jle
sub
mov
mov
dec
test
loope
jl
daa
cmps
hlt
sbb
adc
fisubr
dec
ror
sbb
and
in
and
cmp
iret
out
cmp
adc
loopne
mov
mov
imul
hlt
rcr
in
and
shl
push
mov
and
into
std
cli
sbb
adc
imul
fidivr
dec
push
test
inc
mov
dec
test
fwait
xor
mov
stos
and
ror
aam
push
lahf
sahf
lock
or
sbb
jmp
push
mov
mov
sub
jl
pop
lock
cs
dec
pop
lds
rcr
mov
out
loopne
scas
imul
pop
sub
aas
jl
gs
fmul
ds
mov
mov
outs
(bad)
ror
movs
mov
or
dec
mov
stos
cwde
mov
dec
sti
jo
rcl
lds
and
jae
sub
mov
pop
cs
cld
pop
arpl
fistp
sbb
retf
jle
cld
pushf
and
retf
enter
sub
(bad)
inc
dec
mov
sti
repz
pop
mov
jmp
fstp
xor
and
cmp
cmp
inc
cmp
cmp
(bad)
jne
dec
(bad)
pop
and
arpl
mov
xlat
mov
popa
mov
xchg
add
mov
ror
push
pop
push
daa
fwait
jbe
(bad)
and
or
pop
leave
push
inc
loope
jg
or
out
pop
pop
or
pop
cmp
xor
pop
fnsave
inc
xchg
stos
xchg
mov
jnp
mov
rcr
cwde
mov
push
jae
or
aad
or
and
or
dec
push
test
ins
pop
push
jg
adc
inc
dec
pop
int
xchg
mov
cld
adc
add
(bad)
in
dec
outs
aam
dec
enter
scas
shr
jmp
mov
sub
fisubr
push
push
(bad)
adc
adc
jp
jae
lods
test
pop
adc
mov
nop
lock
pusha
std
sub
sbb
scas
mov
mov
fwait
xor
pop
(bad)
cdq
retf
sbb
cmc
or
das
imul
mov
sbb
mov
fsub
sbb
enter
out
mov
adc
xchg
bound
cmps
out
loope
or
shl
fwait
bound
std
jmp
and
dec
sub
xor
cmp
inc
pop
dec
stos
dec
or
bound
xchg
test
outs
add
mov
xlat
out
ja
or
sbb
cmp
or
push
rcl
or
lea
fadd
cmp
les
mov
sbb
iret
mov
mov
and
repnz
fisub
mov
sub
pop
ficomp
enter
out
xchg
mov
xchg
jnp
push
test
jmp
xor
push
mov
pop
clc
leave
or
push
sub
stos
inc
push
arpl
fwait
sar
xchg
push
in
push
or
or
outs
out
aam
mov
xchg
push
sbb
adc
je
sub
lods
ret
cs
jg
sub
sbb
mov
stos
loopne
xlat
sbb
popf
sbb
push
outs
adc
dec
or
cmp
cmps
js
mov
pop
pop
ins
pusha
imul
add
int
pushf
inc
sbb
ins
add
in
fcomp
out
in
xchg
pop
pushf
dec
pop
pop
sub
jae
ret
rcl
cdq
inc
cdq
adc
call
or
sbb
out
dec
(bad)
ins
sub
dec
mov
push
xor
mov
cli
loopne
ficomp
xchg
sahf
popa
std
loop
sbb
std
sub
dec
pop
cmp
std
pusha
push
mov
nop
dec
out
jb
inc
adc
dec
adc
mov
lods
xchg
push
mov
data16
dec
mov
arpl
loop
jg
cmp
push
ror
hlt
mov
sub
aaa
mov
sti
add
mov
arpl
icebp
es
add
mov
leave
imul
push
fistp
outs
inc
add
loope
push
ret
xor
adc
es
movs
push
mov
cld
cdq
sti
pop
cwde
cwde
popf
mov
adc
xor
inc
jno
pop
out
fucomp
mov
mov
dec
cmps
scas
and
aaa
aam
xchg
popf
mov
(bad)
sbb
xchg
mul
ficom
cdq
adc
add
enter
das
pop
sbb
cmp
cli
and
mov
rol
xor
sbb
sbb
inc
sti
add
es
call
push
(bad)
push
in
cmp
cmp
in
jg
das
ror
mov
in
cmps
pop
sub
jmp
sub
pop
call
xchg
push
jmp
aas
push
jmp
sub
sub
nop
or
aad
sti
ss
or
inc
lock
call
rol
in
clc
push
and
add
movs
sti
sbb
dec
in
jp
shl
mov
test
push
or
or
or
call
cmps
cmp
mov
cwde
ins
xchg
pushf
leave
bound
xor
pop
fst
xchg
adc
sbb
rcr
aas
jno
push
adc
jl
(bad)
mov
fist
imul
out
fcom
aam
adc
jle
adc
push
xor
dec
scas
xor
out
add
or
lock
mov
jmp
cdq
in
or
xor
or
lds
cld
fild
sub
pushf
frstor
mov
pusha
int3
ds
inc
jmp
sub
jle
mov
jbe
mov
hlt
ds
push
pop
out
sub
lods
dec
test
sahf
(bad)
icebp
daa
push
outs
lea
jmp
loope
pushf
xchg
ja
fnstcw
pop
inc
pop
test
adc
and
push
cdq
fbld
jno
push
push
lods
fldenv
xor
jae
fisub
lea
shl
outs
arpl
dec
test
xor
lahf
push
cmp
adc
dec
popf
cmp
stc
rol
mov
jecxz
sub
mov
fcom
sub
lds
xor
out
mov
xor
mov
ret
call
add
jae
(bad)
xor
nop
js
rol
jp
push
pop
xchg
aam
neg
inc
sub
push
jo
clc
xor
scas
in
sub
dec
mov
adc
mov
xchg
xadd
push
xchg
fwait
adc
icebp
add
pusha
call
mov
dec
fcmovnb
mov
jmp
pop
mov
add
push
cmp
pop
pop
pop
dec
mov
mov
cmps
das
les
pop
pop
pop
ds
mov
out
sbb
sti
out
pusha
sar
out
xor
es
xchg
retf
ds
xchg
and
pop
mov
daa
pop
js
ret
(bad)
rol
xchg
daa
leave
push
or
and
xor
ins
call
cmps
aaa
out
scas
mov
mov
mov
repnz
cs
scas
test
jl
sbb
or
les
push
jecxz
push
nop
rol
and
daa
jnp
push
jae
cmp
leave
pop
cmp
test
loope
loop
out
dec
sub
das
push
xor
out
rcl
sub
push
leave
shr
inc
mov
or
or
sbb
inc
xor
pusha
shl
mov
cmps
xchg
subps
std
mov
enter
(bad)
mov
in
retf
jb
ret
(bad)
aam
ds
xchg
and
sbb
int3
mov
push
mov
xor
rcl
add
and
sti
das
shl
inc
add
lock
jl
fld
test
and
pop
sbb
add
clc
(bad)
and
mov
test
das
nop
fmul
pop
int
dec
les
fimul
jp
sbb
inc
pop
retf
ins
aas
or
cmp
mov
lahf
ror
aad
inc
cmp
call
push
call
aad
repnz
and
inc
sahf
in
add
sub
push
sbb
mov
xor
(bad)
push
xor
push
mov
loop
lock
in
mov
lea
addr16
push
xchg
out
xor
sbb
push
mov
jl
popa
mov
mov
cmp
push
stos
pop
mov
pop
jle
pop
ins
mov
dec
inc
in
lock
pop
pop
push
push
dec
mov
pop
mov
sub
in
(bad)
data16
(bad)
retf
in
sbb
jge
retf
sahf
cmc
int
push
fbld
std
xchg
mov
repnz
push
adc
xchg
and
mov
sbb
aam
lock
rcl
js
jne
ins
pop
inc
imul
nop
pop
js
popf
xchg
pop
stc
or
mov
and
dec
out
aas
xchg
(bad)
jns
fcomp
push
aas
clc
retf
and
sub
sbb
cmps
outs
xchg
jnp
cdq
addr16
(bad)
out
int3
(bad)
(bad)
loop
add
cmp
(bad)
cmc
xor
push
test
lods
cld
jle
inc
lahf
popa
cwde
stos
out
mov
and
shl
push
adc
ja
push
xor
push
sub
mov
fwait
inc
sbb
ja
movs
cmp
sbb
sbb
add
(bad)
cmc
(bad)
mov
out
cmp
jmp
gs
out
inc
(bad)
loope
push
aad
test
sbb
jnp
test
cmp
ret
stos
or
and
jno
sub
cli
stc
pop
pop
fwait
sbb
in
retf
retf
mov
dec
enter
mov
mov
sub
dec
xchg
xlat
mov
pop
push
adc
scas
test
mov
xchg
dec
nop
leave
push
in
push
push
push
cmps
cmp
xor
dec
and
or
in
mov
std
jmp
mov
adc
mov
fbld
mov
pop
and
push
and
mov
(bad)
fist
in
xchg
xor
(bad)
and
xchg
mov
and
xchg
shr
push
es
cmps
sahf
frstor
dec
stos
mov
adc
aaa
inc
lds
jae
or
pop
jmp
jbe
xchg
icebp
xor
jb
xchg
xlat
xchg
push
mov
sar
xor
bound
jnp
call
push
shl
(bad)
out
push
lods
xchg
xchg
inc
push
jl
test
mov
retf
xor
js
jp
add
adc
popa
and
and
pop
xor
stc
daa
ret
das
cld
lods
cmc
cmp
sbb
pop
daa
pop
xchg
adc
test
mov
es
pop
ds
jo
loope
loope
pop
inc
cld
adc
push
inc
mov
fld
pop
add
and
cmp
xor
sub
mov
xchg
pusha
xor
pop
inc
sbb
int3
push
repnz
adc
int
cmp
lock
popa
das
dec
sbb
movs
xchg
xlat
jecxz
pushf
in
xor
mov
call
pop
sub
fiadd
sahf
cmp
cmp
iret
inc
sub
(bad)
gs
push
xor
sbb
int3
cmp
rcr
sub
loope
dec
add
sbb
sbb
je
push
adc
loopne
sahf
(bad)
xchg
add
ret
pop
fild
push
scas
mov
or
iret
inc
imul
cld
daa
lea
mov
test
xchg
or
pop
inc
lahf
add
sti
pop
mov
adc
arpl
fmul
mov
dec
leave
pop
mov
mov
cld
mov
shl
icebp
mov
movs
xchg
cwde
pop
mov
rcl
inc
pop
sub
cs
loop
sbb
fs
test
mov
adc
aad
add
icebp
pop
ins
shr
fwait
lods
xchg
test
mov
call
and
cwde
xchg
dec
mov
mov
mov
jl
in
xchg
mov
pushf
gs
fnstcw
pop
jo
mov
sbb
jbe
or
jecxz
sar
imul
push
pop
pop
repnz
xchg
or
pop
xchg
or
fisub
pop
cmc
scas
sbb
dec
fwait
mov
cmp
xor
pop
push
jns
sbb
loopne
mov
cmp
rcr
div
cli
and
and
xor
push
nop
or
ins
push
add
das
or
imul
inc
mov
aaa
mov
xchg
popf
int
xor
ja
pop
jae
push
push
enter
mov
imul
jne
and
and
push
mul
loop
into
cmp
ins
xchg
(bad)
movs
add
jecxz
mov
outs
adc
xor
out
mov
outs
dec
adc
(bad)
inc
hlt
loope
ret
push
retf
pop
ret
retf
add
inc
mov
or
add
xchg
mov
jp
in
mov
mov
add
sbb
mov
add
push
mov
xchg
inc
movs
cld
cld
pop
xchg
addr16
mov
and
(bad)
mov
mov
xlat
enter
jbe
shld
push
std
(bad)
adc
das
test
nop
(bad)
fdiv
mov
cmps
push
xor
jl
mov
pop
mov
test
adc
dec
(bad)
push
iret
pop
sub
xor
jp
jmp
inc
mov
push
ror
pushf
cli
mov
mov
pop
pop
mov
xchg
and
or
cmp
xor
jns
pop
repz
adc
rdtsc
mov
imul
jmp
aad
loope
dec
aas
or
jl
pop
bound
or
mov
mov
sbb
call
pop
push
jl
ret
sub
xchg
xor
outs
shl
es
cmp
mov
xor
push
mov
pop
cmp
xchg
popf
daa
jb
shl
mov
mov
add
inc
(bad)
sbb
mov
or
aad
mov
mov
and
push
daa
int
xchg
xchg
ret
ret
sbb
(bad)
pop
push
ret
inc
pop
xor
mov
stos
jne
scas
pop
stos
movs
xor
inc
mov
iret
or
sub
sbb
mov
dec
das
cld
push
aas
jae
jle
jb
dec
fadd
push
mov
not
(bad)
(bad)
mov
sbb
jmp
xor
or
pusha
or
dec
fcom
xor
xlat
js
pop
aad
push
xchg
outs
mov
std
sub
sbb
fiadd
push
imul
mov
jns
in
add
aaa
dec
into
in
inc
mov
inc
cld
fisubr
dec
pop
dec
jnp
jmp
xor
push
mov
jle
and
dec
and
pop
in
xor
jp
(bad)
push
jp
inc
stos
je
ins
inc
stc
pop
jp
jecxz
inc
jg
pop
adc
ds
push
outs
loope
mov
pop
cmp
dec
dec
xchg
cmc
inc
sub
jae
adc
sub
dec
push
push
xchg
stos
leave
outs
adc
aad
jge
add
jg
cmp
adc
sbb
out
in
aad
(bad)
les
es
icebp
jmp
cmp
hlt
fld
pop
cmp
cmp
jb
cmp
mov
xchg
adc
jge
lea
(bad)
and
ins
iret
neg
mov
lock
mov
cwde
or
into
pop
gs
repnz
fadd
xchg
test
in
or
xor
iret
ret
dec
pop
and
ss
cli
fidiv
push
(bad)
xlat
jno
fisub
ds
mov
push
push
repz
jb
data16
pop
mov
and
cmp
mov
sbb
jecxz
clc
and
sub
call
fidiv
jp
mov
push
xchg
in
and
scas
std
movs
stos
push
test
cmp
in
and
clc
cdq
sahf
cld
leave
cmp
jns
stos
mov
push
mov
or
mov
neg
and
jle
xchg
shl
in
or
lds
arpl
adc
mov
adc
jl
je
call
mov
and
mov
les
mov
iret
mov
jp
vdivps
dec
imul
call
neg
and
sub
dec
rcr
das
inc
loopne
pushf
leave
and
add
aas
cmp
sbb
push
cmps
inc
or
ret
adc
add
rcr
div
outs
in
adc
dec
stc
pusha
mov
inc
pop
faddp
stos
xchg
fcomp
(bad)
in
repz
jae
mov
out
idiv
adc
out
sahf
sub
leave
dec
out
add
inc
add
jbe
gs
xchg
rcl
jge
ja
mov
call
lods
sahf
mov
xchg
cmp
push
test
daa
(bad)
out
dec
cmp
inc
cmp
push
xor
xchg
(bad)
mov
and
add
test
cmp
ret
fimul
xchg
xor
adc
stos
xchg
mov
enter
or
mov
sub
sub
jae
jb
(bad)
call
fs
sbb
sbb
in
cli
inc
xlat
jo
out
jnp
mov
inc
in
stc
(bad)
push
push
test
ret
mov
and
cmps
ret
inc
lods
popf
pop
cmps
add
dec
fiadd
lods
pop
xor
jae
pop
pop
test
popa
sbb
sbb
sar
and
push
mov
out
cmp
mov
cmps
add
jno
fild
scas
in
out
cli
std
or
pop
jge
cli
stos
enter
sbb
jbe
mov
int
cmps
stc
and
dec
sub
jecxz
pop
scas
jecxz
push
inc
push
cmps
leave
inc
mov
fldcw
push
repz
(bad)
cmp
imul
aad
add
cmps
push
cmc
push
aad
mov
dec
mov
lods
addr16
xchg
jo
call
cmps
shl
push
xchg
xor
dec
mov
scas
push
mov
inc
ficom
dec
cwde
inc
(bad)
dec
mov
mov
mov
push
mov
mov
push
jecxz
mov
sub
clc
shl
fisub
neg
aaa
jge
lea
std
out
add
ins
(bad)
aam
ds
jno
xchg
adc
dec
mov
fsubr
jecxz
mov
inc
jmp
btr
add
jp
stos
psllw
je
add
adc
test
retf
outs
and
inc
outs
push
add
add
and
jae
fld
adc
sbb
ds
push
fsincos
mul
icebp
nop
or
cmp
and
out
mov
retf
sbb
cwde
idiv
pusha
cli
out
sbb
es
test
or
sub
inc
popf
mov
frstor
arpl
mul
or
stos
mov
jns
jmp
inc
sub
pop
xchg
(bad)
(bad)
clc
add
test
sub
out
adc
xor
ror
cmps
aaa
jle
and
cld
in
in
sub
xchg
dec
cmp
cmps
pop
pop
fnstcw
pushf
test
test
add
or
cdq
mov
ins
data16
sti
mov
add
(bad)
icebp
jne
int
sbb
das
test
enter
inc
pusha
jno
lods
push
aas
mov
popf
pop
mov
xchg
mov
pop
mov
rol
sub
or
int3
dec
dec
mov
daa
sti
cwde
sub
sbb
add
jno
mov
outs
xlat
cmp
pop
imul
(bad)
ds
push
adc
hlt
fist
cmc
pop
inc
sub
adc
push
cmp
lds
imul
sub
mov
clc
sub
sub
lds
inc
inc
adc
xchg
test
ja
xchg
shl
dec
sub
lahf
cmp
cwde
xchg
stc
or
enter
jae
jae
jmp
push
jnp
leave
data16
adc
and
inc
sub
push
xor
scas
jl
lods
ret
adc
test
clc
rcl
scas
ds
(bad)
pop
ss
shr
lock
(bad)
cmp
jl
test
icebp
jle
por
movs
jmp
inc
mov
xor
dec
fisttp
fisttp
and
adc
push
inc
outs
jnp
adc
aas
test
cmp
ins
xchg
mov
or
fnstcw
mov
or
nop
loop
and
and
fstp
xchg
xchg
test
loopne
fstp
leave
into
sbb
cmps
fild
ror
lds
rcl
inc
stos
pop
cmp
mov
cmc
shr
iret
cmps
retf
jno
pop
jbe
div
push
shr
les
mov
mov
jle
pop
js
lock
sar
repz
stos
test
cs
or
loope
xlat
lock
cli
inc
lods
fdivr
mov
adc
das
dec
scas
mov
aam
inc
pop
ss
sbb
mov
enter
leave
fcomp
lock
call
push
sti
inc
iret
cli
pushf
jb
pusha
jp
xchg
adc
xor
inc
in
xor
out
pop
dec
sub
out
and
xor
std
dec
es
adc
loope
idiv
test
inc
jle
imul
scas
loop
lods
jl
je
jl
ds
mov
imul
push
add
cmp
pop
mov
xchg
or
pop
mov
dec
or
repz
aaa
fmul
(bad)
jge
fwait
vpaddusw
imul
ins
out
leave
ds
rol
aam
loop
ins
pop
stos
mov
pop
cmp
std
(bad)
xor
jp
pushf
dec
je
sbb
scas
aaa
test
mov
sar
(bad)
or
inc
mov
cmp
mov
adc
pop
mov
jmp
inc
idiv
fistp
rcl
(bad)
test
mov
sbb
jecxz
jo
mov
mov
lock
inc
jg
fild
nop
inc
shl
and
push
mov
fld
sub
aaa
mov
xlat
mov
jo
pcmpeqw
or
imul
jg
sbb
push
test
popf
xor
and
ret
popa
int
nop
leave
fadd
adc
(bad)
mov
xchg
sub
shr
or
mov
popf
and
cs
loope
gs
jecxz
test
daa
scas
jge
stos
fs
hlt
xchg
(bad)
push
mov
or
bound
or
jle
jnp
retf
(bad)
add
push
hlt
sar
adc
and
(bad)
or
scas
pop
adc
cdq
jmp
(bad)
jmp
loope
loopne
gs
cmc
aaa
cs
pop
or
pop
sub
sub
xchg
or
jne
inc
retf
lock
cmp
and
jnp
in
sbb
inc
sti
(bad)
jge
je
ret
lea
mov
mov
xchg
inc
push
movs
rcr
jmp
arpl
es
mov
push
scas
out
rcr
cs
mov
retf
stos
hlt
ficom
pushf
mov
and
adc
inc
adc
ss
ja
or
or
pop
pushf
clc
or
pop
dec
into
hlt
xor
(bad)
sbb
mov
adc
out
retf
fist
or
inc
mov
push
fwait
mov
cld
push
test
push
in
mov
add
inc
call
(bad)
pop
lods
mov
dec
arpl
(bad)
int
(bad)
cld
inc
(bad)
in
adc
and
arpl
callw
sub
inc
and
test
call
jns
inc
ins
pop
outs
int
aaa
dec
fld
iret
jecxz
jne
pop
fstp
pushf
xor
sub
add
cmc
push
repnz
(bad)
adc
jb
out
daa
call
retf
pop
movs
push
shr
jno
and
mov
push
xchg
cs
das
jle
mov
or
stc
mov
and
fnsave
cdq
add
xchg
sti
popf
icebp
cmp
cmp
sbb
push
aaa
mov
pop
out
adc
jne
aad
ins
add
lahf
dec
mov
imul
mov
imul
sbb
lods
or
sbb
xor
push
sub
not
fild
es
jb
shl
outs
shl
aas
sub
frstor
sbb
push
cs
and
adc
dec
leave
(bad)
bound
fcom
mov
mov
and
out
add
nop
fdiv
fisttp
sub
and
push
add
adc
aas
das
ret
inc
in
std
and
arpl
sahf
retf
shl
inc
imul
test
pusha
fadd
out
dec
cs
mov
imul
je
movs
xchg
repnz
mov
jl
call
sbb
or
jo
cmps
inc
test
and
cmp
pop
movs
addr16
(bad)
mov
inc
das
jb
outs
dec
push
mov
dec
fsubr
inc
lock
hlt
fwait
cli
lock
js
jp
int3
es
ins
xor
adc
lea
lods
mov
pop
xchg
adc
add
pop
xchg
stos
add
adc
mov
mov
cmps
scas
add
jb
mov
stos
xchg
add
mov
mov
icebp
sbb
(bad)
pusha
pop
add
inc
push
mov
jmp
outs
jg
ffree
mov
push
jmp
inc
call
mov
retf
cmc
jg
mov
push
add
mov
pushf
or
push
pop
cmp
jo
xchg
lea
add
and
int3
mov
pop
aad
push
and
jnp
inc
std
das
iret
repz
je
loope
int3
add
add
jp
and
ror
xchg
pop
xchg
xchg
stc
jnp
retf
jns
xor
je
aas
lods
rol
in
es
(bad)
hlt
xchg
loopne
push
(bad)
stos
fcmovbe
aas
aaa
inc
into
mov
mov
sbb
gs
add
mov
test
push
popa
cdq
adc
pop
and
not
xor
out
int
lea
push
hlt
cwde
jle
popf
rcr
dec
or
movs
stos
(bad)
jge
movs
mov
sbb
dec
jmp
dec
test
cs
push
shr
add
sbb
scas
fwait
std
fdivr
out
inc
xchg
cdq
out
pusha
push
xchg
sub
xlat
std
sti
inc
jp
adc
sub
jno
ss
pop
sbb
stc
lods
aam
out
add
jl
rcl
push
sub
and
jmp
lahf
lods
sbb
movs
push
inc
jmp
loop
sbb
stc
adc
shl
mov
repz
mov
(bad)
push
fdiv
inc
fs
retf
mov
or
lock
call
pop
sbb
inc
mov
xor
out
mov
push
clc
mov
dec
les
jb
aaa
or
cmp
inc
add
sti
out
push
mov
mov
mov
test
jno
sub
push
int3
mov
js
mov
fcom
sub
lods
dec
and
mov
or
sub
shl
xchg
leave
lahf
sti
jbe
push
sbb
xor
and
fsubr
xchg
mov
pop
movs
pop
dec
(bad)
(bad)
pusha
add
inc
cmps
je
push
mov
jmp
xor
mov
sbb
outs
add
rcr
cli
outs
dec
fwait
jbe
movs
pop
mov
mov
test
(bad)
adc
ja
jae
xchg
ins
inc
add
shr
mov
xchg
inc
push
dec
rcl
mul
cwde
lahf
inc
inc
loopne
mov
add
in
jp
mov
call
les
pop
jp
push
inc
push
pop
ins
mov
dec
in
js
or
sahf
push
mov
add
and
stos
cmp
ror
arpl
mov
jmp
cmp
cmp
xor
out
or
fs
and
rol
repz
and
ja
mov
sub
rcl
xchg
or
push
dec
iret
(bad)
sti
bnd
pop
sti
cwde
inc
and
jno
movs
aad
sub
jbe
ret
jp
pop
fisub
rcl
push
pusha
cmp
loop
sub
xor
test
adc
scas
fs
push
ds
cmp
and
sbb
push
ds
xchg
fisub
sub
inc
cmp
adc
push
add
in
imul
jnp
jge
add
sub
mov
pop
sbb
xlat
mov
div
sbb
in
das
(bad)
int
jne
add
push
push
add
and
jnp
rol
jle
mov
adc
shl
push
popa
add
leave
out
ins
stos
ss
xchg
xchg
sub
js
add
pop
sub
pop
push
jae
add
sbb
repz
outs
lock
test
xor
mov
pop
wrmsr
pop
(bad)
(bad)
out
cwde
fmul
int3
mov
cwde
sub
inc
push
inc
shl
xor
mov
sub
or
in
mov
xchg
enter
mov
jge
jl
mov
adc
or
jno
or
cmp
mov
pushf
cmp
inc
pop
sub
icebp
cdq
cmp
in
stc
jle
cwde
rcr
in
(bad)
jp
jge
and
add
stc
jmp
(bad)
push
cmp
mov
cmp
pop
cmp
jmp
lea
adc
push
mov
out
aas
je
adc
cmps
movs
popa
out
add
mov
xchg
mov
mov
dec
sub
int3
cmp
out
push
pop
movs
or
out
cmp
lods
mov
dec
xchg
nop
mov
inc
or
xor
repz
jb
outs
mov
pop
jb
pop
sti
out
inc
mov
add
mov
shl
mov
popf
cld
imul
push
xor
lea
daa
or
cs
cmp
mov
cmp
(bad)
int3
scas
and
and
xor
ja
push
sar
imul
pop
outs
add
mov
test
mov
popf
push
cmp
inc
sbb
cli
fdiv
fcmovne
nop
aam
and
xlat
mov
mov
pop
pop
mov
adc
dec
sub
xor
sar
cmps
dec
cdq
or
adc
ret
cmps
mov
mov
mov
and
je
fdivr
not
cdq
mov
aaa
xor
leave
es
in
popa
ret
dec
mov
stc
icebp
mov
clc
jge
mov
ror
fcom
xchg
jp
sub
fs
xor
sub
int
mov
lods
xchg
dec
push
or
div
scas
mov
lock
cmps
pop
and
jb
stos
mov
lods
cmp
xor
or
cli
sub
xor
retf
push
cmp
push
lds
loopne
or
(bad)
pop
xchg
jne
stos
mov
sbb
push
fld
arpl
sti
fist
div
push
push
xor
xor
out
(bad)
int
jge
mov
add
aaa
xchg
repz
fmul
dec
mov
adc
jnp
add
push
cld
push
je
pop
dec
rol
or
dec
aas
ja
pop
cmp
rol
add
mov
fsub
pushf
jb
xchg
mov
inc
fninit
mov
mov
sti
mov
inc
cdq
or
push
cmp
inc
movs
jno
mov
movs
pop
div
pop
mov
or
in
adc
std
mov
aas
cwde
repz
je
out
ficomp
out
mov
call
xor
xor
cmp
xchg
xor
mov
faddp
pop
inc
or
arpl
lahf
mov
xchg
push
mov
sub
pop
pop
dec
adc
dec
sahf
push
mov
ret
jmp
stos
and
fdiv
sbb
in
inc
pop
push
add
sahf
mov
pop
ffreep
add
(bad)
dec
idiv
inc
je
scas
pop
enter
jbe
sbb
mov
scas
push
imul
sub
or
mov
dec
jl
add
dec
mov
out
or
mov
dec
sbb
pop
sub
mov
shl
sub
adc
fistp
das
popf
rol
jb
pop
nop
ins
arpl
fidivr
push
ins
sub
out
(bad)
int3
lds
fistp
mov
dec
sbb
sti
xor
dec
xor
shl
movs
mov
push
inc
pop
mov
adc
pop
push
sub
sti
inc
xor
cmp
sbb
sub
popa
fimul
lds
cdq
cmp
pop
hlt
jg
(bad)
xchg
and
cdq
jno
loopne
not
jb
data16
(bad)
adc
gs
out
fld
pminsw
sti
ret
push
cmp
loop
popa
out
xchg
fucomip
cmp
(bad)
xor
imul
or
dec
inc
out
xchg
mov
retf
inc
outs
adc
push
retf
jnp
jecxz
icebp
sub
in
lock
stos
movnti
jne
popf
push
pop
call
inc
pop
push
cs
jbe
push
mov
xor
push
or
loopne
sub
imul
mov
inc
or
iret
add
xchg
inc
stos
nop
movs
shr
pop
cmovg
ss
inc
mov
add
clc
iret
jge
in
mov
xchg
cmp
es
cmc
test
cmp
cmp
xor
cmp
js
retf
sub
stos
hlt
and
push
push
jne
inc
jl
mov
sub
lds
cmp
inc
shl
inc
(bad)
fisub
scas
test
cld
in
dec
and
pushf
setns
test
std
and
leave
aam
retf
outs
ss
mov
cwde
js
mov
repnz
fbstp
lea
repnz
pop
xor
adc
lods
mov
inc
scas
ja
jmp
add
xchg
fcom
(bad)
and
test
aas
in
jmp
gs
ds
std
jns
jge
xor
inc
pop
adc
dec
lods
mov
jmp
nop
clc
jns
sbb
arpl
sbb
leave
ss
test
(bad)
cvtps2pd
lods
out
fistp
and
jae
jecxz
mov
(bad)
push
dec
in
test
lods
push
ret
and
dec
outs
mov
dec
cmp
inc
aam
mov
adc
xchg
cmps
int
vphaddudq
adc
cmp
cmc
fcomip
hlt
mov
and
pushf
xor
out
loopne
dec
xchg
aas
jl
jbe
inc
cld
adc
jb
xor
fiadd
mov
and
jle
mov
cli
fstp
adc
mov
jl
push
mov
adc
lods
or
dec
mov
jecxz
xor
dec
lock
popw
xchg
imul
jbe
fwait
xor
xor
ins
dec
js
and
add
mov
test
push
in
mov
push
push
in
adc
mov
xor
sub
sbb
sbb
fs
mov
mov
sahf
push
or
(bad)
loopne
jbe
mov
mov
cmps
call
neg
pop
cmp
xor
pop
and
inc
sub
pop
mov
add
mov
stos
fist
xchg
sahf
movs
call
out
lahf
mov
sub
je
imul
lods
push
sbb
push
or
pusha
push
sar
cmp
push
imul
aaa
push
cmp
jp
clc
push
sub
and
pop
xor
aaa
dec
jle
popf
xchg
jns
pop
or
mov
dec
dec
cmps
js
xchg
sub
in
cmps
out
outs
leave
mov
push
xor
mov
cli
mov
mov
ret
push
(bad)
les
mov
sub
fwait
std
ja
stos
sub
push
push
dec
icebp
push
mov
mov
push
or
inc
sbb
or
jmp
int3
inc
mov
lock
rcr
popa
repnz
mov
sbb
or
ret
and
mov
jge
ret
inc
(bad)
ds
and
and
push
loop
cmp
fwait
and
std
loope
dec
cmp
or
pop
cmp
sbb
cwde
and
rcl
lock
repz
pushf
cmp
mov
mov
frstor
out
and
stos
popa
sbb
jns
cwde
inc
or
data16
cmp
(bad)
(bad)
xor
sbb
mov
movs
add
sub
cmps
fdivp
mov
nop
and
mov
xchg
les
xor
and
retf
pop
or
sar
inc
stos
jp
aad
or
test
cmps
xchg
aam
sub
ret
and
out
adc
sar
stos
lods
sbb
cmps
cmp
push
test
in
inc
das
mov
idiv
lock
ins
in
or
fwait
sar
mov
fcmovbe
cmp
cmc
sbb
inc
cwde
jecxz
cdq
xchg
rcr
xchg
out
add
inc
xchg
je
sbb
ins
adc
push
je
lea
imul
push
or
mov
(bad)
sub
out
or
add
push
push
mov
add
in
sub
push
loope
out
or
(bad)
jmp
adc
cld
std
sub
mov
xchg
pop
push
xor
fstp
sbb
mov
movs
je
push
cmp
aad
out
mov
bound
in
xor
dec
and
jg
jbe
shr
fs
mov
call
cmp
es
or
fwait
int3
push
or
repnz
dec
push
test
push
xchg
lds
nop
(bad)
rcr
in
and
pop
push
stos
cwde
(bad)
in
pop
jb
xchg
stos
mov
scas
ja
mov
fs
cmc
in
icebp
or
leave
ins
sbb
das
sbb
pushf
and
inc
dec
aad
test
inc
or
ds
ja
push
(bad)
loope
cmp
pusha
xchg
cmp
test
jg
mov
pop
add
adc
push
test
or
cmp
push
xchg
pop
cli
pusha
stos
fcmovne
xchg
xchg
xchg
jp
shl
mov
add
dec
shr
call
(bad)
and
loope
jae
out
dec
inc
rol
enter
fild
cdq
leave
pop
xchg
repz
cmps
call
fwait
cli
pop
cmc
outs
(bad)
cmp
dec
stos
lods
loope
(bad)
mov
jp
sbb
out
mov
lods
pop
sub
pop
cmp
jbe
ds
mov
push
call
aam
(bad)
sbb
test
repz
xor
sbb
fiadd
mov
retf
lods
js
test
stos
movs
lods
ss
mov
fcmovnb
mov
aaa
sbb
aaa
jno
push
mov
ja
push
aam
cmp
test
sbb
inc
jmp
cs
cmp
stc
les
nop
mov
xchg
push
in
mov
push
mov
mov
cmps
out
xchg
or
dec
mov
sub
dec
ret
test
out
shr
push
test
jns
sub
dec
dec
adc
push
jmp
push
push
js
cmp
fwait
sub
push
(bad)
mov
cld
mov
jnp
cmps
cmp
sbb
jns
stc
mov
jns
jns
mov
scas
cmps
mov
push
test
dec
xchg
jae
cld
jge
fld
and
sti
(bad)
mov
mov
push
pusha
scas
inc
jae
jo
sbb
inc
inc
mov
dec
dec
pusha
(bad)
loopne
mov
enter
cdq
cmp
push
pop
hlt
lea
test
jmp
jge
ins
int
mov
sbb
dec
mov
bound
jnp
pop
repz
scas
arpl
loope
sahf
jno
ret
jbe
pop
dec
pop
dec
adc
sub
push
fidiv
pop
adc
data16
gs
inc
repz
sti
dec
into
std
(bad)
fimul
cmp
mov
(bad)
fdivrp
or
jle
leave
mov
xchg
lods
int
ds
push
dec
int3
pushf
mov
das
stos
loope
jbe
das
fistp
test
cmc
imul
jns
and
xchg
and
inc
inc
(bad)
call
xchg
push
lods
and
or
scas
and
adc
xlat
mov
or
jp
ss
test
cld
dec
mov
xor
mov
adc
pop
es
pop
ja
xchg
mov
lock
lods
arpl
and
je
xchg
sub
sub
fldlg2
xchg
xchg
sbb
es
mov
jg
test
and
in
pop
pop
inc
std
cmp
mov
mov
fmul
icebp
popa
xchg
hlt
in
sub
adc
and
inc
mov
stc
xor
pop
call
or
mov
idiv
repz
clc
int
mov
add
cmc
mov
pop
pop
jmp
jae
xor
push
ds
fs
xchg
xchg
ret
cmc
mov
out
mov
or
hlt
or
xor
stos
cmps
mov
xchg
ss
jle
pop
pop
loop
add
add
sti
sub
leave
out
mov
push
mov
rcl
iret
lods
add
xchg
les
(bad)
in
inc
dec
dec
cld
retf
or
popf
sub
movs
movs
(bad)
adc
xor
cli
push
sub
jle
sbb
and
or
push
repz
pop
call
xchg
icebp
mov
ror
repnz
dec
push
into
imul
aad
mov
jl
inc
jns
addr16
or
fs
jbe
sbb
call
test
dec
cmp
jle
rcr
sbb
test
mov
sub
ss
pushf
mov
test
ss
sbb
aam
jbe
fisttp
sbb
pop
cmp
xchg
(bad)
aad
mov
mov
pop
xchg
push
das
and
xor
inc
xlat
aas
hlt
adc
cli
sub
sub
dec
adc
mov
movs
xchg
enter
pop
loopne
leave
sbb
push
les
js
fnsave
int3
mov
dec
daa
mov
outs
and
arpl
mov
into
scas
cwde
dec
and
cmovne
loop
mov
jnp
jnp
xchg
iret
ins
aas
and
ja
sar
jl
inc
mov
rol
lock
in
mov
cs
xchg
mov
push
cmp
imul
js
push
rol
inc
mov
pop
bound
add
xchg
xchg
dec
jle
ficomp
mov
(bad)
leave
xlat
(bad)
jmp
gs
js
(bad)
mov
push
pop
outs
inc
lea
outs
jo
jmp
aam
lds
adc
or
lods
mov
dec
mov
and
fwait
(bad)
mov
jl
je
outs
adc
pushf
ins
xchg
mov
rcr
test
pop
lahf
daa
in
das
(bad)
xlat
jno
cmp
(bad)
lds
arpl
pminub
dec
popa
jle
ucomiss
iret
cmc
and
xor
mov
in
test
jmp
ins
pop
push
mov
pop
in
out
fst
das
in
pop
in
imul
sti
push
mov
pushf
imul
clc
cmps
mov
aaa
jecxz
cmp
stc
push
leave
xor
mov
into
jo
add
jno
je
ss
imul
stc
or
xchg
xor
inc
pop
or
rol
dec
sub
int
dec
mov
xor
or
lahf
int
jno
ins
ins
pop
imul
and
adc
push
mov
es
add
retf
cmp
enter
retf
pop
xor
xor
xor
mov
js
xchg
stos
inc
sbb
cmp
aas
jnp
xchg
(bad)
jp
lds
mov
pop
ins
push
and
sbb
adc
push
push
mov
scas
pop
jmp
movs
jo
hlt
inc
and
neg
std
jnp
xchg
jmp
lea
dec
xor
and
loope
loope
loope
jne
rcl
mov
adc
pop
dec
mov
jp
lea
ins
addr16
sti
and
push
in
in
adc
stc
rcl
push
imul
sbb
add
loop
inc
push
inc
bnd
and
ret
pcmpgtd
xor
dec
lock
outs
(bad)
fild
push
fidiv
pop
xor
(bad)
cld
and
aaa
jmp
js
push
fs
call
jns
sar
shr
std
add
pushf
add
arpl
lock
mov
clc
xor
push
pop
ins
data16
adc
lea
adc
mov
rcl
shl
inc
loopne
jb
sar
inc
push
xor
retf
dec
jecxz
xchg
popa
scas
sbb
mov
xchg
aam
loope
inc
dec
xor
das
mov
ins
aaa
pop
popa
fst
and
jo
xor
out
lea
pop
enter
inc
mov
or
(bad)
jle
pusha
in
loope
outs
mov
inc
loopne
daa
lods
in
lods
mov
icebp
lods
addr16
rcl
sbb
xchg
inc
add
lods
jl
cmps
xor
adc
or
popa
call
ins
push
ja
or
ficomp
xor
pop
into
ja
and
loop
jl
cwde
mov
sub
dec
(bad)
xor
fisubr
mov
test
pop
xor
mov
jb
mov
ret
inc
test
dec
cmp
push
xor
jmp
or
popf
outs
sbb
cdq
ret
dec
cld
or
add
push
outs
jns
hlt
out
dec
pop
cs
aaa
shl
outs
add
sbb
mov
xchg
loop
cli
mov
ret
movs
push
jae
test
(bad)
add
sbb
pop
xor
test
jb
jecxz
adc
dec
sub
dec
(bad)
outs
jl
adc
mov
pop
int3
cmp
cld
in
cwde
add
jmp
dec
ret
adc
add
pop
ds
mov
pop
int3
xor
xchg
movs
sub
xor
ficomp
jp
jmp
in
mov
pop
loop
or
inc
movs
sbb
adc
pop
pusha
fidivr
cmp
rol
das
jp
ins
mov
jl
ror
ret
jno
push
cmp
test
cli
mov
jg
mov
scas
xchg
jbe
data16
xor
and
lods
ficomp
dec
out
cmp
movs
clc
jns
xor
movsx
into
iret
inc
aaa
shl
and
and
jbe
mov
ror
or
ror
mov
add
sbb
push
cmp
outs
sti
outs
movsx
mov
xchg
pop
mov
cmp
dec
or
(bad)
ja
pop
jmp
bound
int3
mov
iret
and
into
movs
nop
in
inc
xchg
test
jle
out
cmp
or
and
pushf
adc
mov
jmp
not
and
pop
pop
les
cmp
cmps
fld
cmp
adc
sbb
out
pop
js
leave
xor
mov
stos
dec
jle
loope
push
enter
dec
xchg
mov
aad
inc
mov
cmc
adc
repz
sbb
js
push
xchg
aam
int3
std
ins
and
mov
les
aad
iret
es
mov
xor
xchg
jno
cmp
mov
and
jne
in
movs
push
scas
sbb
jge
push
shr
mov
dec
adc
icebp
mul
and
jecxz
fistp
xchg
movs
stc
data16
jmp
enter
xor
cld
add
retf
xor
js
out
and
ror
xor
adc
xchg
dec
xchg
pusha
cmp
pop
or
pop
fistp
pop
jbe
jecxz
or
out
push
jne
es
cmp
inc
test
neg
and
hlt
outs
push
xchg
and
sub
adc
iret
xchg
jae
push
gs
sbb
in
jo
push
pusha
xchg
or
and
add
icebp
sub
(bad)
mov
and
imul
scas
mov
mov
sbb
mov
aam
xchg
sbb
cmps
pop
xchg
(bad)
jge
(bad)
cmp
repz
out
mov
call
sub
loope
in
xchg
xchg
fild
arpl
pop
mov
movs
jns
mov
jge
shl
es
sbb
popa
loopne
mov
mov
fmul
stos
inc
fwait
and
xchg
adc
mov
push
mov
push
mov
ins
es
aas
mulps
fsubrp
pop
sbb
sbb
les
sar
neg
out
in
sub
mov
imul
push
xor
ins
es
lods
xor
sbb
idiv
push
frstor
lock
nop
loopne
scas
jmp
out
pop
and
call
in
mov
sub
nop
mov
scas
test
dec
stos
pop
aam
fisubr
int
mov
gs
stos
dec
adc
fs
cmp
cmps
dec
push
pop
sahf
imul
bound
jnp
jnp
mov
pushf
repnz
cmp
in
cdq
add
push
enter
shl
psubq
mov
icebp
sub
jbe
and
sbb
inc
sub
hlt
mov
rcl
adc
mov
cs
xor
mov
out
test
loope
jno
adc
imul
sti
inc
jo
sub
sub
in
retf
inc
daa
mov
(bad)
mov
retf
push
dec
mov
int3
out
icebp
aad
xchg
ror
push
pop
sbb
stos
jg
xchg
add
ret
or
cld
dec
xchg
fwait
jl
iret
cdq
xchg
mov
mov
ja
sbb
or
and
loop
mov
mov
outs
pop
pop
cdq
lods
mov
jg
mov
inc
add
add
popf
rol
jmp
pop
xchg
push
pop
ja
inc
test
in
pop
cmp
xor
mov
mov
stos
fst
lock
aaa
rcl
dec
shl
jp
repz
out
pop
cmp
lock
icebp
stos
cvttps2pi
pop
stos
jb
ins
or
sbb
xchg
mov
fsub
imul
xchg
jl
mov
jbe
cdq
aas
inc
jmp
sahf
into
xchg
add
dec
pop
xor
add
inc
aam
add
pop
rcl
or
and
scas
xchg
pop
rcl
cmps
and
push
nop
xchg
dec
mov
fmul
jl
cmp
popa
pop
or
aad
mov
sbb
arpl
hlt
sbb
or
pop
sbb
cs
dec
jecxz
lock
jp
mov
movs
cmp
or
mov
hlt
cmp
push
cmps
mov
xlat
xor
fcom
aam
or
push
xchg
hlt
idiv
adc
lock
dec
ins
pop
xor
adc
inc
xchg
imul
(bad)
sbb
add
sbb
and
dec
sahf
pop
call
inc
pop
push
hlt
lods
push
lahf
pop
jmp
add
les
in
pop
call
test
cdq
jg
lods
mov
rol
std
mov
imul
jle
into
gs
shr
push
neg
scas
mov
mov
(bad)
rcr
mov
inc
push
sbb
hlt
pop
push
and
in
push
pop
cdq
xchg
push
ret
pop
xchg
cwde
fs
cmps
jecxz
lods
mov
sbb
hlt
je
repz
mov
rcr
fs
ret
and
inc
sub
mov
fistp
loop
sti
pop
loop
ss
jmp
xchg
pop
sub
loopne
popf
mov
lea
shl
cli
sub
scas
iret
mov
repz
out
(bad)
aad
das
lods
lea
or
push
cs
or
iret
xor
aas
std
mov
clc
push
dec
mov
in
jne
frstor
cmp
test
cwde
sub
sbb
mov
push
cmp
mov
sub
popf
mov
dec
popf
cmp
rcl
gs
mov
add
cli
xor
mov
shr
lods
aam
fsub
(bad)
dec
shl
mov
es
jl
xor
cmps
xor
bound
ret
or
lods
pushf
push
test
push
jns
fadd
fsubr
sbb
ret
mov
xchg
xor
lahf
(bad)
je
inc
sbb
jne
dec
std
nop
test
push
sbb
fs
pop
cmp
aad
loop
mov
sbb
in
mov
add
or
mov
retf
and
neg
dec
(bad)
jbe
lahf
dec
mov
and
lods
(bad)
cmp
clc
mov
inc
ret
mov
fsub
mov
mov
imul
xor
(bad)
jmp
cmc
mov
inc
aas
inc
es
es
and
daa
jl
aam
push
mov
mov
outs
xor
add
pop
add
rcr
or
xchg
pop
std
push
test
repz
push
mov
xchg
shr
and
xor
scas
cmp
hlt
test
mov
inc
mov
jns
hlt
(bad)
cs
ror
mov
lods
test
(bad)
cmp
inc
nop
bswap
adc
mov
xchg
bound
iret
pxor
xchg
into
and
adc
in
jo
and
aaa
mov
jg
stos
cmp
adc
mov
jno
shr
out
add
les
jmp
mov
jns
inc
addr16
xchg
jmp
cmp
push
js
int
xor
mov
jns
push
fst
jmp
inc
rcl
mov
jns
mov
or
nop
adc
scas
movs
inc
dec
and
cmps
data16
call
sbb
fimul
scas
fild
pop
adc
aas
jb
shl
xor
jb
xor
cmp
jle
mov
push
fcom
scas
adc
cwde
dec
sbb
inc
add
or
mov
fisttp
ins
je
xchg
add
push
pop
les
pop
das
or
ret
icebp
movsx
sbb
dec
in
shl
xchg
mov
push
addr16
movs
sub
push
and
or
outs
xchg
lock
movs
xor
dec
in
jno
test
xor
popa
jno
pop
cwde
dec
(bad)
test
dec
loop
icebp
cld
ins
test
xchg
(bad)
push
sub
mov
sub
cmps
xor
push
mov
fisttp
movs
pop
mov
jp
xchg
std
pop
xchg
in
sbb
pop
mov
mov
les
shr
push
pop
leave
fbld
inc
pop
arpl
mov
ds
xchg
ja
mov
inc
mov
(bad)
popa
pop
sbb
ss
cmp
leave
mov
cmps
mov
cmc
mul
out
push
leave
das
push
fs
mov
int3
dec
inc
push
fcom
push
aam
xchg
cdq
push
cmps
add
fst
in
dec
test
ror
or
push
dec
in
mov
and
js
add
lds
push
int3
inc
popa
out
inc
fwait
icebp
cmps
cmps
sub
dec
adc
sub
push
nop
aaa
(bad)
pop
or
mov
dec
cmps
mov
call
dec
pop
retf
js
mov
lock
or
fidiv
xchg
cmp
push
leave
adc
cwde
cmps
fsubr
mov
inc
or
xor
dec
(bad)
sub
jb
push
cmp
call
lea
popf
jnp
jecxz
mov
dec
sti
lahf
out
(bad)
adc
(bad)
shl
test
daa
push
pop
sahf
mov
imul
jmp
xor
xchg
std
and
pop
add
inc
aaa
xor
loop
jb
dec
aad
aam
or
stos
mov
sar
and
sbb
xor
dec
sbb
outs
jne
das
test
pop
lea
aad
aaa
inc
dec
mov
add
aad
xchg
cmp
mov
and
sti
pop
adc
adc
shr
mov
mov
call
xor
mov
and
(bad)
pop
imul
lods
and
movs
mov
mov
ins
imul
cld
ret
shl
add
xchg
push
imul
sub
(bad)
cmc
xor
fisub
xchg
call
fucomp
xchg
mov
in
in
fmul
dec
adc
mov
and
arpl
push
mov
(bad)
(bad)
inc
iret
in
pusha
pop
inc
dec
or
jge
cmp
dec
popa
out
dec
ror
xchg
inc
clc
mov
or
adc
out
arpl
fyl2x
dec
jae
and
movs
gs
arpl
test
leave
(bad)
jno
sbb
jno
or
pop
sub
inc
ret
jl
jb
and
rcl
sbb
pusha
jp
rcr
rcl
mov
retf
std
ja
es
call
clc
and
jl
loopne
outs
xor
sti
cmp
xor
inc
leave
sub
mov
(bad)
(bad)
xor
shl
das
dec
jp
call
int3
sahf
ret
push
pusha
fldenv
jge
stos
xor
mov
adc
popf
xchg
test
xor
jmp
hlt
(bad)
call
xadd
daa
repnz
pop
in
jl
fld
mov
cmp
loopne
faddp
enter
jne
pop
nop
fs
outs
push
lods
mov
aam
xor
mov
push
mov
push
out
fst
gs
mov
icebp
xor
pop
jns
aaa
das
jle
mov
lahf
ds
cmp
sbb
das
sub
call
jge
jno
out
out
add
inc
nop
cdq
sbb
test
pushf
mov
xor
or
test
popf
jne
int3
adc
mov
cmp
stc
je
xchg
mov
stos
sbb
stos
push
cld
fld
adc
pushf
lock
es
call
inc
sub
mov
or
xchg
pusha
sbb
cs
mov
xchg
jno
dec
aas
mov
jg
mov
lods
jb
scas
cwde
shl
xor
adc
fmul
inc
jae
inc
xchg
sub
jae
pop
outs
aaa
xchg
cdq
mov
mov
retf
xor
dec
pop
jmp
clc
cld
xchg
inc
bound
nop
out
cs
in
pop
pop
mov
xchg
inc
mov
ret
xchg
push
cmp
pop
je
add
std
ret
and
test
lea
jmp
js
dec
pop
xlat
inc
(bad)
das
das
push
arpl
jp
cmp
pusha
fs
push
mov
fsub
mov
in
aas
hlt
add
rcr
inc
xor
out
cmp
jbe
cmp
int
mov
stos
es
div
outs
shl
clc
adc
dec
fldenv
xor
in
sub
ins
xchg
aaa
push
or
lea
and
dec
setne
in
and
sahf
iret
lahf
out
cld
dec
push
not
pop
ret
es
or
pop
push
mov
shl
cli
lds
in
fld
sbb
mov
xchg
sahf
mov
cwde
cdq
add
stc
cld
cmp
jg
fstp
into
mov
xchg
and
inc
icebp
out
dec
(bad)
cmp
lock
and
inc
test
mov
fstp
push
pop
scas
xchg
pop
sahf
push
aam
mov
cmp
xchg
inc
jl
imul
push
nop
xor
mov
pop
sbb
xchg
add
stos
cdq
inc
(bad)
push
pop
mov
pop
xchg
and
mov
push
sbb
cld
daa
sub
push
and
stos
adc
xor
(bad)
adc
xchg
jmp
and
in
daa
adc
cmp
push
xor
xchg
ja
pusha
clc
and
push
or
mov
ret
popf
adc
retf
add
in
and
jns
mov
outs
adc
cld
mov
and
xor
jmp
xor
jbe
or
or
lods
mov
aad
arpl
or
sbb
add
mov
mov
lods
or
retf
xchg
xchg
sti
pop
jge
xchg
mov
imul
test
repnz
sub
mov
cmp
mov
(bad)
push
jae
mov
outs
repz
arpl
inc
add
outs
push
adc
push
out
sbb
ficomp
iret
in
ins
cli
add
add
pop
adc
(bad)
push
mov
stos
cmps
xchg
lods
mov
fwait
push
and
dec
jno
inc
in
inc
sub
stos
retf
call
mov
hlt
mov
push
lods
jmp
ds
push
push
test
mov
not
cmp
cmp
mov
sub
sbb
shl
add
push
(bad)
push
cmp
or
arpl
cmp
push
sar
(bad)
cdq
or
or
in
call
cmp
idiv
xor
mov
adc
jmp
enter
cs
dec
adc
das
js
sbb
cwde
rcl
mov
mov
jl
pop
test
mov
(bad)
jl
sbb
xchg
xchg
xchg
sub
movs
jno
push
rol
jne
fwait
scas
jp
mov
sub
lods
sub
outs
push
cmps
xchg
push
add
ror
jnp
add
xor
sbb
push
stc
xor
test
mov
dec
mov
sbb
mov
or
xlat
loopne
adc
dec
push
sbb
mov
fld
into
mov
jnp
pop
imul
xchg
imul
out
ds
mov
and
cmps
sub
cmp
call
inc
add
popf
jnp
mov
scas
or
test
sub
(bad)
jb
stos
jp
jo
fcmovnbe
gs
push
mov
mov
ror
sub
test
out
in
sub
and
fidiv
mov
sahf
mov
and
arpl
ror
ins
jne
aaa
iret
(bad)
retf
mov
mov
pop
inc
pop
cmp
cmp
adc
sbb
push
mov
jp
push
push
movs
fs
mov
jecxz
or
and
add
ins
and
jle
cdq
xor
push
and
cmc
cmp
popa
mov
or
lods
out
xor
dec
jmp
daa
xchg
or
fistp
xor
sti
add
adc
fidivr
mov
jmp
add
movs
push
call
mov
dec
rcl
stos
sbb
retf
aaa
enter
jmp
cmp
dec
ss
sbb
dec
lahf
cmp
add
test
and
jl
adc
xchg
push
pop
bnd
jle
mov
inc
pop
(bad)
les
clc
call
jnp
hlt
aas
fs
mov
push
cmps
sbb
xchg
xor
sbb
nop
or
sbb
dec
inc
xchg
adc
and
cwde
xchg
inc
cmp
sub
ds
jb
mov
add
icebp
jg
dec
dec
fadd
cmp
sbb
iret
(bad)
push
xor
mov
sbb
xor
adc
sbb
and
cmp
stc
and
mov
inc
shl
les
mov
in
or
adc
xchg
and
stos
jp
sub
cwde
dec
push
and
std
xor
mov
or
sti
aad
push
inc
add
cmp
(bad)
and
mov
jo
es
and
cmps
push
aas
mov
test
and
sbb
aas
add
iret
outs
es
das
loopne
aad
xor
push
aad
jmp
mov
xchg
ret
cmps
popa
xchg
(bad)
and
sbb
(bad)
(bad)
cmc
inc
and
mov
mov
xchg
(bad)
ja
ja
dec
or
in
test
dec
pop
push
inc
jno
jg
stos
stos
lock
mov
bswap
call
neg
adc
push
pop
jg
push
pop
je
mov
imul
pop
add
mov
stos
add
adc
mov
scas
push
push
loope
and
or
lock
mov
jle
mov
lds
fnstenv
mov
or
sti
fcmovu
jmp
or
ins
dec
dec
xor
test
daa
jmp
sub
mov
add
ret
inc
loope
pop
add
cdq
ffreep
leave
mov
push
pushf
cwde
dec
adc
dec
retf
das
test
out
xchg
fldz
jo
pop
inc
mov
sub
jmp
fimul
mov
mov
lea
cmps
test
movs
int
mov
fwait
jp
lods
mov
jle
jmp
mov
fimul
stos
ja
dec
sbb
xchg
or
push
out
jg
cmp
mov
pushw
inc
push
(bad)
sub
fist
mov
setnp
(bad)
in
xor
push
in
fs
fstp
cmp
jnp
int
test
xchg
dec
pop
jmp
inc
push
(bad)
cmc
bound
mov
push
into
leave
push
mov
adc
mov
cmp
and
ss
scas
call
repz
jge
aad
push
xchg
data16
push
add
scas
sbb
mov
(bad)
cmp
stos
cmc
out
adc
mov
adc
cmp
lods
(bad)
mov
mov
movs
mov
lds
in
dec
jno
lds
jmp
and
rcl
jle
sub
imul
fsubr
jnp
mov
inc
inc
mov
mov
sbb
dec
test
ins
push
sub
xchg
mov
pop
mov
xchg
or
int3
mov
mov
mov
inc
adc
les
add
add
cmp
mov
xchg
pop
pop
push
scas
ret
xor
push
mov
imul
es
sar
mov
fdivr
push
je
loop
int
or
push
push
push
jb
mov
push
loopne
xchg
push
mov
dec
sbb
(bad)
pushfw
aam
sub
push
dec
jbe
cmp
jmp
call
fimul
lods
aaa
or
(bad)
cdq
sahf
dec
iret
fs
(bad)
movs
jmp
mov
jmp
inc
dec
cs
std
jl
ror
or
cwde
stos
dec
cmc
retf
rol
gs
mov
outs
into
mov
out
(bad)
ss
add
leave
xchg
aam
jle
jo
out
in
imul
push
sti
sbb
(bad)
sbb
mov
adc
dec
stos
mov
inc
out
adc
test
or
add
mov
sub
mov
cmps
and
clc
out
ret
inc
bound
sbb
and
push
xor
add
xchg
call
idiv
jo
mov
nop
sbb
dec
and
in
xchg
ffree
jae
fwait
mov
test
iret
cwde
add
mov
les
test
and
add
add
test
sub
sub
xchg
fs
jae
cld
scas
sahf
clc
call
adc
cmps
mov
adc
je
in
inc
xchg
jne
inc
in
sbb
mov
push
mov
adc
adc
popa
pop
jg
jo
ss
gs
lock
mov
out
jno
ret
cmp
push
or
xchg
inc
xchg
mov
cmp
int
lods
rol
mov
cmps
dec
push
jl
or
push
into
retf
repnz
sbb
sub
repz
mov
leave
cs
mov
in
test
xor
or
inc
idiv
in
push
xor
jl
movs
js
inc
test
jg
mov
sub
push
xchg
xchg
and
cmp
mov
daa
(bad)
mov
lds
mov
fimul
inc
jno
adc
inc
pop
dec
stos
push
fdiv
jmp
mov
mov
or
mov
in
sbb
je
scas
clc
ds
dec
adc
cmc
popa
lahf
xchg
and
or
add
mov
aaa
sub
arpl
adc
loope
xor
pop
bound
or
aad
sub
push
jmp
sahf
xchg
out
jno
pop
push
retf
sbb
mov
push
jb
sbb
jmp
sbb
outs
idiv
adc
mov
out
mov
rol
push
push
xor
fsubr
mov
mov
cs
aad
cmp
ret
xchg
outs
dec
addr16
mov
imul
sub
int3
mov
mov
push
cmp
idiv
mov
lds
repnz
mov
xor
xchg
stos
std
xor
jge
mov
jg
fs
mov
inc
into
scas
aas
push
adc
push
xlat
rol
jg
test
ret
jl
pop
pop
in
lock
mov
xor
gs
popa
mov
xchg
xor
dec
sub
lods
mov
pusha
push
and
cli
dec
iret
mov
(bad)
push
add
mov
add
pop
xchg
in
jo
and
pop
mov
jecxz
stos
sbb
cmps
das
mov
push
aad
mov
ss
sbb
add
push
das
sbb
(bad)
fcomp
cs
nop
je
mov
inc
and
add
outs
ins
ficomp
icebp
push
xor
(bad)
out
jmp
mov
cmp
jge
jns
movs
adc
cdq
les
xchg
mov
lock
jg
stc
and
cwde
fdiv
ins
pop
adc
scas
add
imul
adc
sbb
je
dec
sbb
sbb
movs
or
loopne
aaa
jno
daa
mov
inc
shl
pusha
test
stc
pushf
sbb
push
cli
sti
ja
leave
inc
retf
pop
push
pop
pop
sbb
ins
xlat
(bad)
sub
clc
sub
and
pusha
(bad)
hlt
pop
xchg
dec
(bad)
and
fnsave
shl
mov
sbb
std
mov
das
data16
leave
pusha
xchg
arpl
ret
or
dec
imul
bound
cwde
sub
sbb
les
lea
and
pop
test
add
sar
rcl
cmp
(bad)
mov
cwde
(bad)
enter
in
adc
push
std
adc
fnstenv
das
cmp
into
in
pop
xchg
out
mov
mov
stos
fstp
mov
fmul
aas
cmp
or
in
sub
sbb
mov
aam
sahf
jmp
add
(bad)
jbe
call
dec
rcl
in
cmp
adc
mov
int3
inc
sbb
test
dec
push
or
lea
push
push
sub
inc
pop
fiadd
enter
jmp
inc
test
cli
xchg
sbb
inc
loope
jmp
xchg
cmp
adc
mov
and
in
inc
jb
adc
cld
inc
mov
add
mov
cmp
jno
adc
dec
dec
popf
add
and
cmp
adc
xchg
test
add
clc
sub
loop
mov
lds
inc
je
loop
push
aad
test
(bad)
daa
gs
jmp
mov
jmp
or
adc
xor
or
xor
mov
xchg
out
cld
mov
ror
add
adc
pushf
jmp
add
inc
mov
fisub
or
inc
mov
add
mov
dec
mov
xchg
cmp
loope
mov
pop
mov
mov
lods
(bad)
(bad)
inc
xchg
and
sbb
iret
xrelease
mov
jle
mov
daa
cwde
loope
or
mov
mov
fldenv
and
rol
aas
push
xor
aad
imul
add
and
loopne
(bad)
mov
jae
ja
(bad)
in
pop
in
xchg
les
iret
int
sbb
cwde
ret
pushf
push
or
push
mov
js
adc
jae
mov
inc
mov
lock
(bad)
sti
in
aas
inc
dec
lods
addr16
inc
xor
xchg
mov
and
jle
push
or
(bad)
int3
or
adc
xchg
test
sub
jge
ret
mov
dec
pushf
aam
out
push
(bad)
repz
add
jmp
add
adc
pop
movs
movs
mov
std
arpl
dec
add
repz
cmp
movs
cmps
sbb
jno
mov
xchg
adc
fadd
dec
pop
jo
mov
fwait
inc
push
cli
hlt
jmp
ud2
push
movs
mov
(bad)
adc
ds
movs
xchg
pop
xor
imul
mov
push
mov
or
add
inc
jp
enter
sub
add
sub
push
cmp
jle
add
mov
dec
xor
jb
or
push
ret
xor
sbb
outs
imul
mov
xor
xchg
adc
mov
lds
ins
(bad)
rol
pop
jb
and
pop
lods
mov
test
repz
mov
lods
push
xor
pop
sbb
ficom
xchg
lds
xchg
lods
sbb
bound
fsubr
ror
outs
popf
push
sar
dec
loopne
pop
add
push
jb
lea
sbb
add
setns
loop
fcomp
cmp
xchg
ins
stc
push
xchg
stos
bound
add
xor
dec
xchg
cmc
iret
mov
cmp
pop
cli
fiadd
lahf
inc
out
xor
sbb
(bad)
retf
idiv
jle
xor
or
(bad)
mov
stos
mov
mov
movs
fsub
test
xchg
xor
jge
and
ja
sbb
add
push
lds
rcl
sub
inc
mov
dec
aam
sbb
adc
stc
jmp
or
sub
out
(bad)
mul
jne
(bad)
retf
dec
int
xchg
mov
push
test
or
push
sbb
cmp
pop
pushf
add
or
push
mov
pop
xor
fstp
nop
ja
add
pop
int3
into
fisttp
addr16
fdiv
xchg
addr16
enter
or
and
pusha
bnd
dec
xchg
cld
outs
push
or
adc
push
(bad)
push
xchg
sbb
add
mov
mov
outs
dec
push
jo
dec
loopne
xor
into
mov
cmp
in
jmp
push
mov
and
add
iret
stos
lock
ja
add
and
aad
mov
arpl
aaa
or
ins
ds
sub
mov
mov
cs
xlat
or
push
popa
sbb
sbb
pop
inc
xchg
and
xor
mov
sar
stos
sbb
enter
mov
ret
xor
test
scas
int
jge
test
push
mov
adc
daa
jg
loopne
add
xchg
jmp
jae
inc
fwait
lea
gs
(bad)
lea
pop
imul
ds
xor
push
scas
mov
mov
dec
mov
inc
jnp
mov
mov
mov
repz
dec
mov
pop
xor
lahf
ins
inc
movs
jg
push
scas
hlt
lea
stos
xor
mov
ja
adc
je
xchg
push
push
mov
jmp
mov
int3
outs
popa
adc
mov
cmp
mov
(bad)
pop
mov
jne
loopne
and
push
mov
jle
out
popa
mov
scas
stos
movs
cmps
cwde
or
xchg
int3
inc
rol
fst
add
cld
call
xchg
cmp
repnz
jge
or
sbb
loopne
test
jle
cmp
inc
out
pop
shl
lock
xchg
add
push
dec
sbb
outs
xor
popf
xor
outs
xor
adc
adc
dec
out
movs
mov
out
in
mov
inc
cmps
push
and
mov
call
lea
inc
lods
xor
push
sbb
pop
ja
out
sbb
mov
mov
call
ror
gs
test
inc
fstp
add
shr
cwde
fdiv
mov
(bad)
inc
push
push
mov
cmc
mov
int3
cmp
mov
push
fstp
cmps
mov
loop
xor
les
daa
mov
adc
or
jp
fistp
stos
dec
bound
mov
aas
and
push
cmp
inc
inc
clc
mov
out
leave
inc
daa
jnp
test
cli
inc
sbb
mov
scas
mov
imul
test
xchg
fisubr
out
ror
cwde
fild
fs
adc
xchg
nop
or
aas
outs
lods
rcl
je
dec
mov
xor
(bad)
sub
mov
dec
or
mov
stos
mov
cmps
enter
push
jns
jecxz
push
daa
inc
popa
and
lods
mov
mov
movs
jb
(bad)
out
inc
adc
mov
mov
outs
test
and
pop
and
push
sub
inc
jo
aad
mov
dec
jb
mov
xor
in
add
rcl
inc
rcl
test
add
imul
push
lods
cld
and
sar
fld
fimul
mov
mov
adc
jae
mov
paddusb
mov
ins
(bad)
cwde
pusha
int
or
clc
push
mov
outs
lods
pop
xchg
cdq
sub
pop
mov
aas
xor
jo
dec
cmp
and
lods
sub
pop
add
push
lahf
lahf
les
daa
ins
sar
mov
aad
mov
into
push
dec
rcl
xchg
and
fidivr
push
pop
pop
movs
mov
xor
jmp
lock
xor
lds
sbb
xchg
jl
rcl
xor
pop
popa
ins
xchg
xor
stc
(bad)
ret
push
jmp
pop
xchg
mov
push
fdiv
jae
sbb
inc
pop
and
cmps
pop
mov
jle
mov
sahf
inc
into
jecxz
ins
jle
sbb
rcr
ret
lods
mov
adc
fcmovnb
sbb
clc
mov
xchg
ror
mov
xchg
inc
xchg
xchg
pop
pop
and
fsin
into
mov
adc
aas
sbb
push
jae
add
ret
pop
cmp
inc
or
inc
jmp
das
(bad)
mov
mov
test
pop
gs
and
movnti
jno
inc
or
adc
jbe
cmp
mov
cwde
fisub
jmp
adc
mov
sbb
add
xchg
mov
add
out
ins
mov
rol
mov
std
push
mov
xor
cmc
popf
add
loopne
inc
mov
cmc
rcl
pop
adc
cmp
mov
cli
and
mov
add
inc
std
fnstcw
pusha
mov
out
cdq
xchg
xchg
cmp
dec
popf
push
dec
fstp
inc
movs
dec
int3
jmp
repnz
xchg
les
sahf
sub
fcomp
mov
cmps
(bad)
loope
push
imul
push
inc
dec
shl
mov
fnsave
push
mov
ins
div
mov
mov
repnz
jecxz
sub
xor
ds
mov
iret
and
dec
add
loopne
popa
jne
imul
jmp
pop
cmps
movs
mov
adc
xor
cs
cli
mov
mov
sbb
add
cld
or
sbb
fcomi
cdq
pop
cmp
mov
mov
hlt
ins
hlt
mov
xchg
push
ins
jne
fist
push
call
and
sub
mov
out
lods
retf
sar
loopne
jbe
enter
in
jecxz
mov
popf
hlt
mov
popa
pop
mov
dec
sub
adc
cmp
pop
push
(bad)
stc
pushf
pop
iret
xchg
cmp
mov
loopne
test
cmp
mov
xor
daa
pop
cmp
add
sar
push
mov
movs
(bad)
adc
jo
cmp
xor
mov
xor
ins
test
clc
mov
pop
sub
out
test
inc
and
scas
push
retf
shr
pop
or
sub
dec
push
sbb
push
shl
leave
shl
lods
xchg
les
dec
and
test
inc
ja
adc
dec
mov
loopne
push
enter
into
dec
je
aas
test
mov
push
mov
cmp
nop
mov
jnp
cmp
jo
or
jecxz
sub
mov
pop
mov
mov
out
jp
sub
in
jnp
test
push
repz
nop
scas
(bad)
mov
(bad)
push
push
int3
fadd
pusha
pushf
jns
or
dec
test
jp
in
loop
fisttp
xchg
adc
xor
(bad)
dec
push
mov
daa
cmp
pop
mov
pop
lods
fldcw
or
out
mov
in
xchg
mov
int
xor
mov
sar
mov
gs
scas
and
sub
add
or
cdq
jae
ret
es
and
lock
push
and
cmp
sbb
(bad)
sub
cmps
jge
and
idiv
or
popf
scas
rcr
test
fistp
mov
jg
ror
(bad)
jo
xchg
mov
stos
out
test
pop
dec
sbb
pop
inc
lock
(bad)
mov
xchg
pop
inc
xchg
xlat
loop
arpl
fdivr
in
xor
jp
not
addr16
cmp
popa
add
icebp
push
sub
xchg
jmp
movs
sbb
sub
clc
inc
sbb
cdq
movs
cli
xor
xchg
xchg
xlat
push
inc
outs
xchg
out
ror
lods
sbb
inc
jne
dec
inc
sub
jp
or
cmp
enter
loopne
sub
jle
xchg
push
sahf
movs
and
cmp
xor
add
pushf
mov
gs
xchg
jmp
jmp
dec
das
imul
cdq
xor
popf
fwait
push
call
imul
mov
neg
popa
push
mov
stc
out
add
or
xor
test
fldenv
sub
pop
sbb
adc
pop
ja
mov
std
jle
loopne
xchg
sbb
jp
into
dec
jmp
iret
repnz
cld
pushf
inc
ja
pop
inc
mov
adc
sbb
in
repz
mov
je
in
in
push
stos
inc
jp
arpl
fcom
add
fisubr
movs
jmp
push
les
or
inc
ret
ins
(bad)
pop
ins
inc
mov
mov
sbb
sub
add
mov
inc
cmp
popf
ja
stos
add
inc
jno
pop
imul
rcl
sbb
shr
inc
inc
or
push
add
test
loop
sbb
daa
dec
stc
scas
cmp
inc
cmp
int
(bad)
push
loopne
and
in
inc
mov
not
and
jno
loope
pop
lds
std
neg
call
mov
gs
sbb
aaa
es
(bad)
mov
test
inc
stos
push
int
aas
mov
dec
sbb
add
aad
pop
mov
and
adc
in
in
xor
arpl
cwde
push
in
scas
mov
sbb
adc
arpl
mov
or
mov
shl
add
and
inc
cmps
push
mov
loopne
inc
and
pop
ds
push
xor
jg
add
lods
dec
cdq
and
pop
ret
nop
or
(bad)
bound
jne
cmp
mov
(bad)
push
lds
fwait
inc
ret
sbb
xor
jae
push
shr
cld
sbb
add
cs
push
or
xchg
mov
test
ins
cld
stc
rcl
dec
fidiv
push
pop
inc
ror
scas
xlat
sub
movs
aad
ror
mov
int
xor
dec
les
inc
push
sub
ja
mov
(bad)
lods
cmp
dec
(bad)
fisub
imul
popf
je
fnstenv
lds
leave
gs
pusha
inc
repz
fwait
daa
in
cmp
push
pop
test
xchg
dec
int
cmp
push
cmps
mov
les
(bad)
sahf
test
inc
mov
in
call
(bad)
sbb
ficomp
aaa
pop
xor
xor
lds
iret
cmps
ret
out
call
adc
ret
std
cmp
in
shr
not
inc
daa
pavgw
fisub
pop
mov
adc
jle
movs
ror
jmp
and
pop
jns
cmp
mov
add
sbb
inc
cmp
movs
mov
cmp
jb
and
daa
mov
sub
pop
dec
push
jge
js
xchg
stc
push
fnstcw
das
push
in
js
cmp
int
(bad)
cmp
or
sbb
scas
(bad)
pusha
lahf
stos
xor
mov
leave
sbb
ss
pop
or
jg
pop
jle
in
shr
cs
loopne
push
push
push
shl
sahf
call
test
shl
imul
cld
aad
enter
das
jmp
jb
push
push
lds
ja
int3
cmp
sub
fmul
stos
and
xchg
mov
cmps
test
popf
xchg
adc
repz
retf
mov
jl
jmp
xchg
int3
loope
cs
out
ret
dec
and
(bad)
in
push
xchg
cmp
(bad)
xlat
in
pop
icebp
inc
fxch
push
add
mov
mov
pop
mov
sbb
fsubr
fistp
cmp
jecxz
mov
mov
add
sar
pop
repz
pop
dec
ja
dec
les
pop
cmp
push
ret
pop
push
das
or
push
mov
add
jge
scas
loopne
into
or
(bad)
stos
pop
popa
ja
aas
inc
shr
cmp
or
dec
pop
icebp
int
xor
scas
adc
mov
or
or
inc
int3
sub
lock
test
pop
bound
mov
xor
imul
pop
repz
je
xor
cdq
sar
test
scas
aas
cld
test
xor
rol
and
retf
dec
pop
pusha
imul
mov
call
call
xor
retf
aaa
loope
push
es
xchg
dec
xchg
xor
into
sbb
sbb
nop
cmp
xchg
sbb
pop
(bad)
sti
inc
jecxz
fdivr
mov
idiv
xchg
dec
mov
xchg
sahf
inc
pop
xor
or
dec
pop
add
or
mov
or
sub
out
fadd
enter
pusha
dec
les
xor
cld
mov
pusha
push
mov
and
sbb
mov
or
mov
test
movs
jne
mov
popf
sub
push
shl
jg
sbb
enter
ret
sbb
dec
mov
cmc
or
shr
inc
cli
rcr
ds
add
icebp
int
ja
pop
jmp
xchg
xchg
das
jecxz
xchg
dec
xlat
stos
add
xor
or
mov
xor
xchg
adc
ins
xor
les
jl
push
or
test
pop
(bad)
test
jecxz
test
pop
mov
inc
sub
mov
push
and
mov
js
inc
data16
jmp
push
aad
int
xor
sub
add
jg
sar
pop
or
iret
jb
loope
lea
icebp
cmp
dec
inc
or
push
popa
test
sub
shl
sbb
repnz
cli
cwde
outs
test
icebp
dec
in
rcl
mov
add
icebp
cld
push
and
out
cmp
stos
mov
cmps
out
sbb
mov
cmp
iret
add
mov
aaa
dec
daa
movs
out
mov
int3
dec
mov
cmps
inc
cdq
rcl
xchg
shl
aad
sbb
push
push
ins
imul
bound
push
and
mov
pushf
cmp
jecxz
cs
add
jmp
fwait
mov
rcl
not
cmp
outs
lods
add
mov
mov
out
rcr
or
sahf
xor
push
and
imul
push
stos
icebp
and
dec
pop
adc
xor
xchg
loopne
sbb
xlat
out
cmp
xor
pop
mov
sbb
sbb
add
or
xor
pop
mov
loope
dec
paddw
jg
push
aaa
enter
loope
loope
cdq
push
daa
ins
jnp
lock
out
fadd
xchg
and
push
fucomi
fwait
add
inc
sub
xor
lea
and
out
sub
shr
push
mov
test
xchg
cwde
loopne
mov
aam
cld
(bad)
xor
stos
sbb
mov
cmp
and
call
xchg
or
add
sbb
and
xchg
fisubr
cmps
and
pop
xchg
mov
push
icebp
test
sbb
pop
rcl
jmp
pop
push
test
or
or
sbb
clc
jne
dec
fs
jle
add
mov
mov
fcomip
clc
rcr
ficomp
and
hlt
fiadd
(bad)
adc
and
adc
dec
mov
shl
(bad)
leave
sbb
push
fisub
daa
aas
mov
push
retf
and
inc
ret
pop
movs
int3
adc
outs
int
pop
out
stos
cmps
in
aam
or
daa
mov
push
and
ret
mov
inc
in
push
xor
pop
xchg
leave
outs
hlt
adc
and
lock
cmp
or
push
test
ror
jns
and
call
fyl2xp1
cmp
xor
push
sub
push
hlt
sahf
fsubr
test
mov
and
mov
xchg
sti
pop
jge
adc
sbb
adc
aad
hlt
jecxz
popa
arpl
aad
pop
sub
inc
ret
mov
sahf
ins
in
test
xor
mov
push
retf
jno
pop
pop
push
(bad)
ficom
mov
jecxz
and
es
xchg
dec
dec
ret
fs
imul
sbb
cwde
adc
int3
loope
cmps
xor
daa
fistp
fld
das
pop
mov
call
mov
ja
xor
inc
push
lahf
lock
pop
sar
test
xchg
xor
je
shl
or
or
cmp
nop
xchg
jb
xor
stc
push
scas
outs
sbb
cmp
neg
adc
imul
jg
push
jmp
imul
sbb
shr
call
or
sbb
div
or
hlt
stos
xchg
jge
jo
add
das
stos
xchg
push
popf
fidivr
pop
sbb
daa
cmc
es
or
lods
call
addr16
ss
cmovs
push
mov
pop
in
inc
loope
cmps
lods
and
mov
iret
idiv
xchg
ret
mov
push
xchg
or
push
jbe
cmp
inc
pop
shr
test
sub
mov
icebp
test
das
out
and
inc
mov
fcomp
scas
inc
jl
cwde
ja
xchg
pop
or
gs
xchg
jnp
movs
ss
mov
lea
xor
(bad)
stos
aam
fcmovb
xchg
(bad)
mov
push
fwait
out
dec
mov
jmp
jle
sub
add
scas
test
xor
mov
dec
inc
hlt
inc
dec
sbb
iret
pop
out
and
sti
jo
repnz
jle
aas
pop
mov
xchg
sbb
iret
(bad)
mov
aad
push
push
sbb
adc
cmp
mov
inc
daa
xchg
xlat
int
(bad)
and
cmp
mov
mov
fld
jecxz
mov
(bad)
sub
das
loopne
daa
sbb
adc
jno
cmp
inc
retf
push
fist
jo
scas
sbb
add
fisttp
add
xor
sub
pop
and
mov
and
sbb
pop
sub
out
lahf
inc
aam
mov
adc
jmp
popf
pop
mov
jns
rcr
in
popa
hlt
push
int
and
jp
add
popa
retf
sti
pop
inc
mov
xchg
sbb
sahf
ret
rcr
neg
xchg
cmc
imul
sbb
lea
(bad)
mov
mov
mov
stos
and
adc
(bad)
adc
aaa
mov
add
scas
mov
shl
in
add
add
in
cdq
das
lock
xor
les
(bad)
xor
mov
inc
sub
sub
sub
outs
int3
inc
rol
stc
test
mov
adc
push
pop
mov
xor
shl
mov
xchg
lahf
xchg
(bad)
push
rcr
enter
add
sub
int3
sbb
out
sbb
lods
int
ret
fdiv
push
jmp
mov
jne
xor
bound
ret
jmp
xchg
push
adc
mov
sbb
aaa
out
bound
add
mov
jns
(bad)
call
dec
loop
sbb
inc
xchg
xor
push
pop
test
idiv
imul
dec
fcomp
jbe
dec
pushf
stc
jne
jnp
ror
sub
dec
sub
dec
dec
in
sbb
test
mov
cmps
mov
and
jle
xchg
sub
jmp
ins
sub
push
and
mov
sub
add
(bad)
push
add
xor
dec
adc
rcr
(bad)
call
xor
(bad)
iret
or
js
cwde
loop
imul
xor
xchg
sbb
retf
or
popa
sub
push
(bad)
inc
mov
test
jno
jns
or
out
shl
inc
pop
push
xor
and
ret
jmp
scas
sbb
or
ins
mov
gs
lea
enter
cdq
hlt
xor
adc
xor
mov
pop
sub
inc
jp
call
int
sub
gs
xor
scas
xchg
test
ja
mov
xchg
sbb
ins
mov
or
ins
sbb
sbb
jl
or
jo
pop
mov
xchg
pop
or
pusha
inc
call
mov
sti
sbb
daa
inc
mov
pop
test
pop
and
inc
xchg
mov
sub
pop
mov
xor
fisttp
clc
cmps
outs
in
add
pop
add
jmp
lods
icebp
and
mov
push
jbe
pop
in
in
movs
and
adc
pop
or
pop
add
iret
cmc
xchg
daa
adc
xchg
in
xor
lods
or
lock
aam
scas
sbb
icebp
popf
pop
fistp
cmp
sub
sbb
fs
iret
shl
jg
mov
push
add
icebp
(bad)
jnp
inc
in
aam
and
xor
xchg
call
jle
mov
mov
arpl
es
dec
pop
mov
aam
xchg
xchg
cmp
and
rcr
dec
ror
das
loopne
out
inc
and
js
pop
(bad)
jmp
jb
xor
imul
enter
or
inc
(bad)
and
inc
dec
xor
cmp
lods
adc
or
dec
cmps
xchg
mov
push
cmp
pop
and
popa
aaa
js
adc
mov
out
jb
dec
stos
cmps
ja
push
pop
jmp
call
mov
cld
xchg
push
push
add
lods
in
sbb
and
out
mov
push
mov
stc
lods
adc
jge
clc
mov
xor
or
aam
sub
jb
cs
or
cwde
xchg
sar
dec
pop
pop
add
push
xor
fadd
push
lds
pop
shl
pop
pop
out
inc
mov
dec
cmp
lock
(bad)
inc
sbb
push
into
push
retf
addr16
mov
fisttp
or
or
mov
mov
xchg
sub
sub
inc
dec
pop
inc
add
icebp
rcr
pop
loopne
aaa
lds
sub
add
shl
popf
imul
retf
imul
xchg
dec
jns
jg
(bad)
aam
cmps
hlt
outs
nop
add
add
mov
inc
jecxz
mov
pushf
cmps
jb
ret
imul
jmp
add
mov
nop
mov
in
shr
xor
add
sbb
test
aas
je
inc
add
or
(bad)
iret
out
or
inc
sub
cmp
push
hlt
pop
dec
mov
or
push
jns
popa
js
jecxz
(bad)
inc
mov
sahf
mov
jbe
push
xchg
dec
outs
(bad)
or
cli
pop
xchg
mov
cmc
jo
lods
jne
lds
dec
sahf
inc
repnz
ret
popa
into
jmp
jne
out
jmp
pop
(bad)
push
bound
cmc
sub
lahf
fisttp
arpl
push
aas
push
daa
xchg
xor
mov
sbb
push
ret
jo
test
stc
into
and
xor
jo
jmp
lahf
adc
pusha
loope
push
mov
in
jmp
ins
leave
or
xchg
inc
das
rcr
adc
fucom
hlt
jno
sub
mul
push
mov
dec
arpl
adc
add
jge
test
mov
mov
in
pop
and
leave
mov
xor
stc
xor
cmps
add
or
dec
mov
inc
xor
push
cmp
stc
call
pop
dec
xlat
inc
jno
pop
outs
pop
cmp
jp
push
xchg
xchg
std
nop
clc
ins
or
jmp
lahf
jle
icebp
aaa
adc
cmp
or
int
xchg
in
xchg
cmps
cli
mov
fs
movs
test
loope
test
es
xchg
push
ss
xor
and
(bad)
data16
fwait
sub
retf
aaa
rcr
loope
in
loop
add
pop
sbb
push
cmps
xor
jno
mov
push
adc
dec
retf
dec
cmps
sub
pop
pop
xchg
dec
int3
sub
pop
mov
mov
hlt
into
sahf
lea
jnp
das
test
std
clc
sub
xchg
imul
xchg
mov
mov
xor
in
leave
int3
out
call
mov
cdq
add
out
ss
or
lock
out
cmps
(bad)
fdiv
mov
add
push
jp
xor
pop
dec
push
mov
ret
stos
rcl
and
jb
jecxz
or
cdq
(bad)
inc
push
push
push
cld
test
addr16
pop
mov
push
pop
stos
jns
mov
les
jbe
xchg
pop
fistp
cwde
push
aam
adc
cmps
outs
icebp
adc
or
dec
bound
inc
cmp
cmps
push
sti
repnz
push
inc
or
in
or
(bad)
and
and
out
inc
add
jecxz
in
xlat
and
jbe
or
mov
mov
loop
cmp
and
(bad)
or
sbb
xchg
(bad)
and
call
daa
cmp
ror
(bad)
hlt
pusha
sub
or
push
jnp
lock
push
lods
adc
pop
dec
dec
repz
int
or
scas
sbb
add
cmps
jg
dec
int
xchg
inc
jp
sub
iret
movs
jmp
xchg
cmp
jmp
test
sti
pop
pop
sub
out
ret
scas
dec
sub
ja
cmp
sbb
sbb
pop
retf
mov
sub
jl
div
jns
push
pop
sbb
cwde
fmulp
xor
mov
jo
add
fstp
sbb
dec
add
aad
cmp
outs
xchg
repnz
cld
mov
xchg
sub
push
inc
popa
pop
dec
sti
mov
jl
jmp
mov
inc
cmps
add
xchg
dec
ds
test
shl
or
adc
xchg
out
enter
pusha
push
cmovb
adc
pop
dec
loope
lds
int
arpl
inc
repz
into
je
mov
clc
xchg
pop
xor
inc
adc
push
jnp
inc
mov
inc
pop
add
jae
sub
dec
push
ficomp
mov
or
out
cmp
cmc
push
and
mov
rcl
in
stos
push
ret
lea
xor
es
cmps
rcl
xchg
rcr
mov
fisub
out
jnp
mov
inc
pop
fdiv
leave
mov
sub
sub
xchg
push
ret
xor
pop
jo
or
test
mov
inc
hlt
ret
dec
push
jae
push
pushf
xor
jg
sbb
mov
sub
int
mov
push
add
push
add
or
aaa
movs
ss
cmp
and
xor
or
xchg
ret
dec
add
push
push
fwait
mov
pop
sbb
sub
(bad)
xchg
fistp
push
dec
push
adc
sbb
repnz
sbb
outs
or
ret
retf
leave
push
jmp
mov
sti
test
xchg
jns
ins
popf
repz
xor
test
xchg
arpl
dec
mov
adc
xchg
popf
scas
fsubr
and
mov
cmp
push
leave
jmp
dec
pop
xor
loope
lock
movs
loopne
fmul
mov
ret
mov
daa
mov
out
fmul
cwde
test
ss
jle
int
sahf
add
(bad)
fdivr
push
int3
pop
add
cmp
pop
cwde
jge
push
mov
sub
ins
sahf
out
icebp
test
out
fs
fistp
inc
mov
jae
call
pop
adc
sbb
ret
sbb
add
(bad)
dec
hlt
xchg
sub
inc
int
pop
adc
outs
jp
jo
movs
addr16
jle
in
aas
jecxz
inc
cmp
jp
cwde
jae
push
mov
push
jg
mov
sbb
cmps
iret
jle
shr
adc
in
rol
xor
outs
jo
push
cmc
mov
cli
add
test
repnz
pop
pop
or
loope
mov
in
test
jno
gs
cmc
sbb
xor
push
push
dec
outs
out
sbb
add
xor
xchg
stc
test
jmp
inc
cld
mov
push
in
outs
pop
sti
xchg
inc
dec
push
jl
loope
pop
mov
sbb
retf
bound
sub
jle
icebp
adc
add
mov
push
jnp
or
movs
or
ds
out
jp
cmp
pop
mov
enter
xchg
xchg
jbe
imul
push
(bad)
dec
xchg
push
enter
fist
loop
inc
test
jl
aas
fwait
clc
shl
or
jb
jecxz
mov
xchg
retf
dec
fistp
mov
sub
stos
mov
fst
xor
inc
xor
inc
pusha
or
lods
pop
(bad)
in
xchg
outs
(bad)
into
push
fmul
jbe
in
add
mov
stc
dec
and
data16
out
mov
add
icebp
sub
std
not
adc
pop
out
ins
mov
inc
sar
data16
in
aas
lahf
push
ror
push
dec
sbb
int
push
jmp
jle
xchg
(bad)
imul
jmp
and
pop
or
pushf
leave
mov
or
out
add
add
test
and
(bad)
cmp
cld
and
loopne
add
xchg
cmp
stos
popa
adc
inc
mov
push
cmp
clc
(bad)
push
aam
xchg
mov
push
sub
add
push
out
dec
sub
scas
sbb
adc
(bad)
jae
mov
mov
push
stos
retf
inc
out
(bad)
or
cmp
fsub
pop
movhps
push
addr16
mov
and
jecxz
inc
pop
jae
cwde
or
and
mov
cmp
and
ror
bnd
cdq
popf
mov
add
arpl
sahf
pop
jg
les
outs
jl
clc
fst
(bad)
push
mov
mov
mov
lods
cli
mov
adc
in
addr16
xchg
dec
inc
js
add
nop
iret
push
retf
push
xchg
xchg
mov
cdq
das
fwait
sbb
and
adc
jne
cmps
dec
mov
ja
movs
lahf
cld
add
mov
in
pop
xchg
in
dec
mov
jns
fisubr
xchg
out
fstp
fldcw
and
xchg
dec
adc
dec
add
push
push
imul
dec
(bad)
imul
sar
push
test
sub
punpckldq
lea
dec
(bad)
(bad)
stc
loopne
mov
mov
adc
add
daa
inc
nop
pusha
test
sub
hlt
nop
lods
mov
neg
frstor
adc
outs
adc
push
cli
loope
call
jne
and
or
push
cmps
xchg
fwait
mov
adc
jbe
jae
pop
mov
xor
adc
jecxz
fcom
sub
std
int3
mov
mov
fwait
test
jnp
ror
sbb
push
dec
int3
test
adc
jmp
(bad)
movs
sbb
loopne
inc
mov
mov
push
stos
out
in
out
aad
and
dec
jp
mov
in
push
push
mov
dec
out
sti
mov
pop
cmp
mov
inc
mov
dec
or
push
std
adc
pop
jnp
clc
jmp
cmp
mov
into
pop
rcr
push
test
sub
adc
in
fcmovu
adc
add
dec
sub
stos
inc
or
mov
clc
mov
movs
fs
mov
jmp
dec
mov
mov
fild
sahf
push
ins
fist
push
aam
stos
(bad)
mov
add
jbe
xchg
lea
idiv
(bad)
jge
inc
mov
in
scas
pushf
or
stc
iret
div
xchg
adc
adc
mov
repnz
mov
lods
and
ds
test
xor
pop
jl
iret
jecxz
jg
lea
mov
xchg
xor
push
mov
sbb
movs
js
mov
(bad)
lea
cmp
fiadd
arpl
xor
(bad)
jmp
lds
je
loop
sbb
push
pop
popf
out
fst
sub
jl
sub
dec
(bad)
xor
jns
pop
xor
add
cmp
and
cmps
jnp
and
or
push
pop
data16
out
cli
nop
ins
xchg
sub
sub
popf
in
push
inc
lahf
dec
in
bound
rcr
inc
xor
push
mov
adc
out
push
add
test
jo
test
and
int3
icebp
loop
sbb
sub
mov
repz
pop
mov
mov
adc
push
jno
push
adc
jmp
mov
retf
mov
cmc
dec
dec
lahf
xchg
fwait
xor
or
dec
popa
dec
push
adc
xchg
fdiv
(bad)
cmp
dec
ficomp
or
adc
adc
push
cmp
pushf
loopne
mov
inc
or
pop
xchg
test
xchg
dec
xchg
or
sub
add
pop
imul
lahf
arpl
iret
and
loop
jb
pop
or
loopne
pop
cmps
ja
xor
adc
pop
xchg
push
sbb
jo
test
add
adc
xchg
jo
mov
push
cmp
or
fsub
cwde
add
retf
movs
nop
(bad)
sti
xor
push
push
push
inc
push
je
xchg
repz
mov
ficomp
lea
enter
adc
mov
xchg
jne
into
xchg
mov
test
scas
mov
sar
es
sub
pop
push
push
ds
sub
in
out
outs
pushf
jecxz
imul
xchg
push
pop
clc
mov
xor
mov
push
dec
cld
xlat
(bad)
lea
xchg
fwait
mov
jmp
push
pop
pop
jecxz
shl
mov
adc
sti
aas
add
lock
jbe
das
push
xchg
xchg
dec
daa
(bad)
mov
jg
cmc
into
pop
inc
test
retf
icebp
(bad)
test
add
imul
loop
pop
adc
in
mov
pusha
cmps
mov
in
cdq
loope
into
repnz
out
mov
imul
das
das
ret
leave
mov
(bad)
aas
int
cmps
mov
cli
ins
push
cld
mov
ss
fbld
(bad)
cmp
in
pushf
push
lods
jp
jmp
inc
and
mov
aam
xchg
outs
out
jmp
call
sbb
call
(bad)
fimul
int
push
fimul
mov
outs
push
lds
(bad)
cmp
xlat
sub
and
fistp
mov
popf
dec
pushf
out
jo
addr16
sub
fcom
icebp
mov
sub
les
cmps
adc
inc
repz
scas
jb
call
fs
dec
leave
pop
das
mov
cmp
js
xchg
dec
lea
sbb
dec
pop
sub
sbb
adc
inc
fadd
loope
mov
adc
(bad)
xor
das
lock
and
sub
jecxz
sti
loope
out
adc
cmp
cmp
and
and
scas
cmps
sbb
cmovb
xchg
popa
movs
loope
add
icebp
(bad)
popf
dec
or
ins
mov
retf
in
ja
mov
scas
sub
mov
or
movs
retf
xchg
cmp
cwde
jle
xor
add
jae
dec
repz
inc
push
aas
neg
loop
outs
scas
out
xchg
xor
or
dec
inc
rol
push
outs
lahf
push
and
sti
cmp
xor
retf
lds
adc
sbb
inc
out
out
mov
cs
pusha
inc
adc
std
adc
xor
push
call
gs
sbb
or
cld
loop
call
call
mov
or
nop
ins
in
or
lahf
xchg
ret
cld
fwait
xor
xor
jae
sbb
push
adc
in
mov
cld
push
daa
shr
inc
dec
sar
and
mov
dec
in
call
test
or
jbe
(bad)
adc
and
push
push
xchg
lods
adc
popa
sbb
push
hlt
dec
leave
aad
jmp
cmp
cmp
cwde
mov
push
sbb
ja
pop
dec
mov
mov
and
loopne
dec
rol
cwde
retf
ins
mov
nop
sub
adc
or
pop
es
mov
mov
mov
push
cmc
and
nop
fbstp
ret
add
cmc
iret
jle
adc
addr16
in
and
mov
mov
outs
movs
sub
cmps
jo
pop
lods
push
daa
push
loopne
mov
mov
test
in
cwde
push
inc
push
rcl
fwait
ins
jmp
sahf
mov
repz
mov
movs
inc
and
or
pop
imul
imul
ja
ins
push
push
push
retf
es
sub
lods
imul
push
sbb
mov
jg
scas
icebp
loope
in
out
and
xchg
or
xchg
cmp
adc
shl
cmp
data16
sbb
mov
and
push
pop
cmp
fisttp
test
cmc
inc
cmp
cmp
in
fcom
cs
xor
mov
adc
xor
mov
in
and
pop
loop
stos
and
ret
cli
ret
push
adc
adc
sbb
inc
sub
cmp
xchg
or
outs
and
fmul
inc
push
push
(bad)
sbb
movs
shr
add
or
or
ret
push
and
mov
ror
test
jae
xlat
sbb
fistp
pop
mov
movs
adc
sbb
xchg
add
push
cmps
ja
test
xor
ret
pop
clc
dec
jle
add
test
inc
sbb
loopne
cmp
fs
mov
cmp
addr16
xor
repnz
cmp
dec
fimul
mov
test
cmp
scas
xlat
push
imul
loopne
xchg
adc
cmp
dec
inc
sti
inc
push
jae
add
retf
dec
ds
push
inc
movq
out
div
xchg
lahf
push
pop
push
jmp
cli
xchg
add
arpl
sub
cwde
imul
aam
(bad)
ret
add
xchg
call
sbb
jae
jmp
mov
sub
jmp
and
mov
adc
daa
sbb
icebp
add
dec
loopne
dec
dec
inc
adc
add
inc
pop
xor
push
rol
lea
(bad)
and
sub
or
repz
ds
cdq
out
idiv
xor
or
mov
jl
daa
cs
and
mov
in
imul
jb
jnp
push
pushf
scas
sbb
gs
iret
ret
xchg
jb
mov
dec
add
(bad)
(bad)
sbb
daa
sub
dec
call
push
push
dec
icebp
cld
pop
out
stos
xchg
xor
mov
cmp
and
fisttp
call
es
jno
lds
jp
and
fidiv
jnp
and
push
ss
loopne
(bad)
fld
bound
jge
arpl
cmps
dec
mov
popa
or
into
retf
leave
aas
clc
xor
in
int
xor
mov
in
fiadd
jle
(bad)
xor
out
call
ret
or
inc
inc
inc
mov
not
adc
cs
sbb
xchg
das
inc
outs
aas
mov
test
movs
dec
sbb
inc
mov
pop
in
pushf
leave
adc
pop
dec
jb
mov
push
ss
adc
outs
push
fld
mov
lahf
dec
lea
inc
ret
dec
jne
test
mov
fisttp
jno
rcr
mov
sbb
cmp
pop
xor
out
cmp
jge
adc
(bad)
mul
jno
adc
or
imul
leave
ror
and
xchg
enter
jl
sti
in
pop
loope
push
cmps
push
or
dec
dec
dec
stos
pushf
dec
cmp
cmps
mov
jecxz
retf
cmp
xchg
enter
cmp
pusha
or
mov
mov
pop
cmp
aam
dec
out
int
test
sub
cmc
mov
(bad)
call
repz
mov
pushf
xchg
xchg
add
test
cmp
imul
(bad)
cmp
mov
out
jo
in
outs
cld
mov
mov
pop
mov
sahf
popf
push
cmp
stos
mov
mov
das
aas
das
pop
sbb
inc
jge
cmp
inc
adc
pop
cmp
xor
jmp
shl
retf
mov
jo
js
(bad)
adc
and
push
pop
jge
dec
pop
out
xchg
pop
cmp
mov
push
cmp
lea
mul
gs
clc
xchg
jecxz
int3
popa
bound
cs
inc
or
out
push
cmps
ss
ret
mov
cmp
(bad)
ret
inc
pop
mov
movs
rol
jne
aam
ret
cld
repnz
call
stos
sbb
test
or
jecxz
jae
clc
rol
add
mov
xchg
jl
push
sbb
sbb
cmp
push
sahf
std
dec
imul
jne
jo
movs
push
hlt
in
dec
push
push
add
sub
loopne
mov
mov
test
or
jo
pop
pop
fistp
pop
xor
scas
iret
add
fimul
jno
sub
les
adc
mov
push
adc
out
xor
push
repz
int
mov
mov
ss
pushw
shl
mov
xchg
add
movntq
out
jmp
sbb
icebp
imul
sti
inc
jae
adc
jo
int3
(bad)
(bad)
iret
(bad)
leave
fistp
or
xor
pop
ins
sar
repz
(bad)
mov
inc
mov
icebp
cmp
aam
pusha
inc
mov
sub
xor
jg
mov
xor
sbb
repnz
push
cmp
mov
in
test
add
inc
adc
std
rcr
adc
ss
scas
data16
adc
push
mov
cs
pop
test
jmp
mov
pop
out
mov
fidivr
enter
sbb
jle
aam
or
add
mov
push
(bad)
jge
div
pop
adc
in
pushf
mov
mov
cwde
pusha
loopne
fnstcw
or
fstp
sbb
pop
jmp
mov
mov
cld
out
jg
adc
sti
mov
ja
mov
sbb
jmp
cmp
or
sbb
xor
daa
(bad)
cmp
mov
leave
adc
fcomp
xacquire
mov
minps
push
outs
cld
repz
mov
xor
aaa
jne
mov
push
aaa
jae
stc
and
ins
add
sub
push
cmps
sub
dec
cmp
call
or
ja
sub
jns
pusha
jbe
mov
dec
arpl
pop
stc
popf
sub
xchg
mov
xchg
popf
adc
jle
push
adc
mov
jmp
cmps
add
jmp
cwde
dec
dec
lahf
cmp
cli
dec
mov
xor
dec
sbb
adc
fst
enter
ins
push
push
(bad)
and
ret
shl
adc
jle
sub
enter
stos
dec
sahf
loopne
popa
jo
ss
shl
add
mov
xlat
cs
and
cs
fadd
jns
in
jl
(bad)
std
sti
push
mov
push
in
stos
xor
icebp
out
stc
cdq
or
sub
sbb
adc
push
jne
adc
mov
mov
and
adc
movs
inc
xor
popf
cmp
in
or
pop
push
push
lods
ror
jge
xchg
(bad)
dec
xor
add
mov
ret
mov
adc
pop
inc
int
mov
push
out
adc
mov
or
ds
and
repnz
nop
push
fbstp
lods
js
and
pop
mov
mov
pop
test
mov
or
mov
fisttp
rcr
xor
scas
into
call
xchg
jle
mov
jp
push
sbb
or
sbb
adc
imul
cmp
ror
stc
xor
push
sbb
aaa
inc
xchg
stos
pop
retf
push
jl
or
or
mov
cmp
fnclex
adc
cld
nop
lock
ss
data16
dec
cmp
(bad)
jge
pop
and
sbb
addr16
rol
mov
inc
sbb
xor
iret
ds
cmp
pushf
popa
pop
jbe
sti
xchg
pop
xchg
in
fiadd
imul
addr16
mov
imul
test
lds
inc
add
sub
jbe
arpl
cmp
fwait
pop
loope
sti
dec
jmp
pop
aad
jmp
in
inc
cdq
neg
dec
push
xchg
mov
jge
add
xchg
scas
mov
mov
lahf
push
fnstsw
ss
inc
add
retf
xchg
fnstenv
cs
(bad)
(bad)
pushf
pop
mov
cs
mov
call
mov
pop
or
xor
adc
icebp
sub
mov
rcr
or
fwait
jg
mov
sbb
xchg
push
(bad)
(bad)
lods
jp
call
jl
xchg
fwait
jno
imul
dec
not
mov
mov
xchg
daa
adc
call
div
les
and
cmp
add
scas
inc
scas
mov
test
inc
push
sbb
mov
retf
frstor
pop
sti
cmp
jecxz
cdq
retf
repz
add
fdivr
mov
add
aaa
cld
outs
push
out
scas
sar
(bad)
xor
mov
inc
les
fdiv
cmp
sbb
cli
cmc
adc
and
dec
cmp
fs
sti
jmp
sub
fld
push
shr
cwde
adc
ins
sbb
sbb
loop
imul
scas
mov
(bad)
push
icebp
adc
es
test
movs
adc
jb
ficom
add
lock
nop
push
ss
xor
jmp
outs
mov
sub
ss
test
in
xor
mov
mov
cmp
inc
sbb
sbb
add
dec
xchg
repz
mov
xchg
mov
pop
stos
push
mov
push
(bad)
xor
cmp
add
pop
or
in
jecxz
mov
and
loope
sub
stc
and
or
push
pop
add
push
pusha
ja
cmps
push
and
fwait
call
popf
jne
mov
adc
call
out
mov
hlt
add
push
push
jns
push
xor
shr
test
xchg
das
(bad)
out
lods
das
push
pop
mul
cld
(bad)
add
push
jno
iret
hlt
or
in
stos
iret
jb
push
mov
mov
ds
repnz
outs
les
mov
xor
or
dec
fdiv
mov
fwait
mov
cmps
jmp
lods
retf
xor
dec
ret
mov
or
leave
test
and
cmc
mov
inc
(bad)
inc
mov
xchg
mov
cmp
cmp
stos
jp
xchg
xchg
test
jne
loopne
push
stos
mov
mov
jle
test
shl
out
mov
retf
loope
fild
mov
inc
cmp
dec
sbb
push
push
cmp
int3
ss
mov
jp
cmps
sub
(bad)
mov
sub
(bad)
call
ins
mov
cli
sub
cmps
jns
jg
in
neg
xchg
enter
sbb
das
push
ror
adc
add
inc
fld
add
xor
in
mov
jbe
call
jmp
js
cmp
shl
shl
jp
je
data16
push
sbb
aam
push
outs
push
cs
push
inc
sbb
xor
or
pop
das
dec
retf
mov
jns
nop
jo
jo
or
mov
in
cmp
pop
test
mov
lods
scas
or
gs
or
pop
(bad)
repz
movs
and
sbb
pusha
fs
or
adc
gs
mov
dec
je
mov
jno
mov
adc
stc
fbstp
iret
repz
mov
and
fld
sbb
jmp
(bad)
test
xchg
addr16
xchg
fmulp
and
cs
push
call
in
mov
out
ret
sar
repz
cs
movs
test
jns
aaa
gs
mov
jmp
imul
push
adc
test
and
cmp
inc
popa
fnsave
fs
ret
cmp
push
(bad)
imul
loopne
ret
sbb
cmp
cmp
out
les
mov
jo
and
mov
lock
mov
and
pop
ss
mov
mov
out
and
jns
sbb
mov
ret
mov
popa
push
xor
vmovntps
icebp
sub
mov
cmp
ins
sub
dec
mov
mov
adc
cli
mov
outs
repz
iret
dec
xor
xor
adc
or
mov
add
xchg
and
ror
xchg
mov
and
popf
movs
pop
lock
loopne
and
xor
(bad)
movs
stos
inc
inc
(bad)
adc
ret
ins
or
idiv
fist
pushf
outs
pop
test
dec
xor
pop
cmc
clc
pop
and
dec
mov
std
iret
imul
(bad)
mov
jb
mov
(bad)
adc
xor
call
test
aad
popf
sar
jbe
fs
cmp
ins
mov
outs
adc
mov
and
adc
mov
mov
or
inc
fstp
icebp
mov
ds
xor
pop
mov
cs
inc
jp
rol
aad
fisttp
push
pop
and
popf
inc
xor
imul
xor
ret
dec
arpl
xlat
stos
push
es
pushf
jge
arpl
stc
(bad)
lahf
mov
inc
test
call
or
jb
xlat
sbb
mov
and
stc
div
(bad)
push
jae
sbb
inc
mov
icebp
aaa
aas
mov
ja
jbe
mov
add
mov
int3
adc
sbb
mov
aam
sbb
rcl
rcr
mov
shr
jbe
inc
std
xor
loopne
stos
sub
int
test
test
dec
mov
in
pusha
jae
jno
pop
mov
inc
popa
push
push
mov
fidivr
mov
in
mov
lock
mov
add
shr
jbe
leave
loopne
movs
lods
or
aas
das
int3
retw
aaa
push
mov
pusha
fwait
adc
inc
sub
jmp
jecxz
mov
inc
adc
xchg
push
stc
popa
add
fst
shl
xchg
pop
ror
push
rcr
in
mov
arpl
retf
je
in
leave
repz
push
ret
push
adc
fs
dec
shl
cmp
out
push
retf
xor
rcl
jns
outs
mov
and
out
fwait
and
in
call
add
jmp
sub
cmp
int
inc
gs
inc
loopne
(bad)
xor
inc
sbb
mov
outs
mov
pop
dec
add
sbb
and
inc
(bad)
cmp
mov
pop
leave
add
imul
and
retf
cmp
in
jp
and
push
dec
jmp
push
sub
aaa
ret
push
inc
imul
enter
cs
mov
outs
lods
adc
enter
or
add
xor
popa
add
inc
fwait
sbb
push
pop
(bad)
in
and
cmps
retf
shr
sbb
jno
inc
cmp
or
push
rcl
xor
fidivr
xor
call
jae
mov
daa
cdq
cmp
aad
sbb
clc
mov
sub
leave
(bad)
arpl
pause
retf
popf
sub
pop
xchg
fnstsw
sub
sbb
and
xor
cmp
ss
sahf
pop
dec
popf
data16
sbb
fdivr
cdq
enter
cmc
ja
dec
popf
fcmovb
push
mov
jp
or
inc
out
ret
xor
or
ss
inc
into
cld
xor
std
out
(bad)
sbb
aaa
mov
arpl
inc
mov
adc
sub
mov
xchg
pop
in
out
psrlw
(bad)
add
xchg
arpl
sbb
imul
mov
xchg
test
mov
cmp
cmp
and
ins
(bad)
retf
fmul
jnp
ins
inc
dec
imul
jmp
mov
jl
and
gs
cmp
inc
and
jo
daa
or
in
xchg
lock
mov
sbb
jecxz
cmp
xlat
jo
pop
jmp
mov
imul
ds
shl
sbb
popa
pop
add
jnp
addr16
sub
ja
pop
clc
push
popf
fisub
mov
jge
inc
jge
sbb
leave
inc
test
test
push
xchg
and
inc
retf
sbb
daa
mov
mov
xor
js
in
dec
jne
test
cmp
cmp
aaa
in
adc
push
loope
fst
test
scas
clc
adc
dec
xchg
jnp
or
xchg
pop
mov
into
push
mov
add
and
inc
or
outs
mov
jno
mov
and
sbb
mov
lds
sar
sbb
ret
push
fdivr
sub
pop
jl
movs
cs
mov
xchg
imul
adc
push
jo
retf
int3
mov
pop
(bad)
jns
mov
mov
add
sub
or
jl
fadd
ss
into
add
xchg
cmps
and
or
cmp
int3
dec
xor
popa
push
fimul
inc
mul
cdq
out
pop
xchg
sbb
add
imul
cli
les
or
mov
inc
add
mov
(bad)
mov
aad
jmp
mov
neg
dec
push
pusha
pop
fsub
ficomp
fwait
xor
retf
aam
pop
enter
sbb
rol
cmp
clc
out
mov
cdq
(bad)
loope
cdq
popf
add
js
cmp
sub
das
(bad)
xor
jo
jle
or
sahf
out
or
xchg
popa
or
lods
mov
adc
pop
jp
xor
inc
ret
ret
or
or
jo
leave
or
jo
test
movs
xor
frstor
js
or
mov
enter
nop
fnstenv
push
cmp
test
or
or
xor
and
nop
mov
inc
or
dec
add
adc
xchg
lahf
jb
cdq
adc
fild
xor
xor
ffree
xabort
and
jo
adc
or
mov
out
cmc
lahf
sub
jnp
push
ins
or
push
ss
retf
push
enter
in
icebp
mov
lock
out
mov
lock
lock
clc
push
adc
sub
mov
das
xor
cli
mov
jno
icebp
in
push
(bad)
ds
pop
outs
stos
adc
das
adc
dec
inc
and
mov
lea
push
xchg
fiadd
rol
sbb
aad
cdq
jnp
imul
jmp
xchg
lea
jecxz
jp
icebp
and
pop
std
nop
add
(bad)
fadd
inc
dec
ret
shr
xor
ds
mov
xor
cmp
sbb
test
push
(bad)
and
mov
mov
shr
jb
xor
xor
cmp
add
ins
arpl
mov
mov
xchg
dec
dec
hlt
out
add
xchg
mov
ja
pop
xchg
push
dec
jg
into
pop
or
xchg
adc
xchg
std
pushf
in
arpl
popa
mov
in
iret
mov
test
jbe
pop
mov
clc
aas
shl
pushf
call
cli
test
add
sub
push
jl
xchg
popa
in
rol
or
mov
ret
popa
fs
adc
push
in
cld
sbb
es
into
stos
pushf
push
cmovo
cmps
iret
jmp
inc
test
in
mov
aaa
addr16
into
(bad)
xor
mov
xchg
mov
fiadd
mov
mov
(bad)
mov
ret
daa
int
stos
test
sub
cmp
push
outs
dec
mov
inc
enter
fst
inc
jns
call
push
mov
(bad)
cld
sub
(bad)
lock
div
mov
loop
(bad)
jle
ja
cmps
cmp
int3
fwait
gs
dec
xchg
adc
clc
xchg
stc
xor
inc
cmp
add
daa
repz
lea
dec
mov
retf
lock
call
and
jno
jbe
push
inc
add
popa
pop
pop
pop
mov
fxam
ret
lock
pop
rcr
xlat
mov
repz
cwde
mov
sti
push
or
fild
movs
xor
inc
add
jno
sub
pop
xor
jb
fbld
or
jae
imul
shl
xor
inc
mov
mov
jmp
xor
fdivr
jmp
jbe
(bad)
addr16
ins
push
dec
sub
pop
test
ss
sub
mov
stos
inc
add
outs
add
push
(bad)
mov
pop
lahf
jecxz
sub
nop
icebp
int
cwde
xor
mov
mov
aam
in
ja
xor
test
xor
enter
push
inc
cmp
jg
outs
mov
rcl
xor
pushf
(bad)
sbb
xchg
mov
add
jp
mov
mov
es
(bad)
cs
push
arpl
cwde
es
sbb
stc
fsubr
pop
sbb
jnp
gs
outs
mov
pusha
dec
movs
aaa
dec
pop
mov
scas
cli
push
lahf
repz
ins
cld
inc
cmps
dec
inc
jge
lea
and
jbe
repnz
adc
cmp
cwde
dec
pop
clc
sbb
jmp
push
mov
and
dec
and
data16
xor
mov
fist
jle
adc
sar
inc
push
inc
retf
fild
or
xchg
stos
mov
movs
mov
or
add
loopne
cli
pop
ja
popf
nop
xor
mov
jbe
inc
ins
sahf
aad
fld
lods
int
ins
sub
cmp
and
pop
test
mov
fadd
xchg
(bad)
movs
mov
rcr
into
mov
mov
mov
jbe
data16
cld
push
add
(bad)
rcl
push
dec
movs
cmp
mov
xchg
or
fnstenv
adc
add
pop
icebp
pop
xor
sbb
xlat
mov
mov
sbb
aam
imul
push
retf
pop
lods
in
test
mov
sub
jae
fwait
xor
repnz
jnp
jne
sub
xlat
iret
ins
shl
imul
call
dec
jecxz
sbb
mov
cwde
iret
imul
inc
and
mov
inc
fwait
push
xlat
lods
pushf
and
aas
mov
ror
outs
jmp
lea
(bad)
and
push
imul
(bad)
mov
data16
jle
inc
cwde
out
(bad)
add
push
out
test
loopne
aam
je
mov
bound
mov
out
lock
jnp
hlt
push
test
sbb
ret
inc
mov
out
sub
add
mov
pop
mov
mov
out
fs
iret
and
addr16
test
ret
jno
and
jp
mov
inc
mov
mov
or
add
icebp
and
rol
(bad)
ss
fisub
jbe
pop
push
xor
aas
push
dec
fisttp
es
inc
adc
ja
add
stc
test
mov
lods
inc
mov
test
adc
cmp
test
mov
stos
arpl
(bad)
movs
addr16
arpl
and
(bad)
mov
jl
test
es
push
retf
arpl
jae
out
push
(bad)
push
fcom
inc
repz
push
and
jge
fsubp
cwde
xor
cs
sbb
scas
mov
mov
mov
mov
jecxz
jecxz
xchg
es
cmps
dec
inc
rol
test
sub
imul
push
push
repnz
out
gs
scas
lods
lock
nop
out
iret
test
arpl
adc
add
stos
and
clc
fidiv
cmp
mov
shl
lods
hlt
push
push
cmp
or
ss
push
cmps
loop
pushf
mov
jge
pop
push
pop
out
out
sbb
icebp
jbe
in
loope
jl
into
test
fnsave
mov
jo
gs
loope
stos
test
addr16
scas
arpl
cmp
dec
cmc
pop
and
cwde
and
or
cwde
loope
cli
jle
in
fild
fcomp
into
out
dec
(bad)
iret
imul
sbb
pop
inc
call
add
mov
fmul
xchg
dec
std
or
jae
mov
cmps
xchg
jbe
and
xor
add
xchg
fnsave
sbb
call
ds
dec
inc
adc
add
cwde
repnz
popa
mov
push
cld
aam
pop
je
bound
das
add
xor
aam
xchg
iret
mov
enter
dec
sub
xor
out
xchg
sub
aas
lds
std
inc
xchg
repnz
fsubr
mov
(bad)
stos
cmp
aaa
retf
mov
vpperm
mov
xor
jo
test
xchg
add
cmp
jne
jl
test
jg
or
mov
mov
xchg
call
outs
(bad)
xor
adc
xchg
mov
dec
fdivp
push
rcl
sub
test
mov
cmp
loope
mov
cmp
mov
icebp
daa
pop
jnp
ror
push
and
sahf
pop
mov
mov
jne
push
je
push
clc
sub
sub
sbb
adc
mov
loop
cmc
mov
fadd
ret
popa
jmp
ins
pop
dec
push
pop
xor
int
sub
ror
sti
test
sub
mov
test
add
sahf
ja
pop
repz
xchg
push
int3
ss
sub
fnstcw
inc
mov
loope
push
scas
push
or
push
sbb
popa
pop
push
dec
pusha
pop
lahf
adc
test
imul
mov
xor
fstp
xchg
data16
mov
jp
ss
and
add
imul
lods
rol
cmps
lahf
push
inc
retf
cmp
int3
push
jns
ds
dec
std
in
sti
mov
daa
dec
test
cwde
(bad)
xlat
outs
jecxz
pop
bound
pusha
fdivr
cmp
or
aas
xchg
mov
retf
clc
mov
mov
jne
stos
scas
jno
lock
mov
cli
sub
ds
popa
(bad)
stc
mov
add
fdiv
push
out
or
imul
cmp
pop
aad
test
addr16
add
pop
xor
dec
bnd
push
sahf
cli
(bad)
jmp
aaa
dec
push
xchg
adc
mov
leave
dec
sti
ins
cmps
cmp
sbb
mov
cwde
fldcw
cmp
or
push
in
mov
sbb
inc
lea
loopne
sahf
shr
lahf
int3
in
mov
retf
xchg
jl
lea
clc
mov
or
inc
dec
pop
popa
or
sbb
mov
ret
xor
jl
xchg
leave
dec
mov
(bad)
enter
(bad)
inc
adc
outs
jl
repz
nop
adc
xchg
jl
into
cmps
pop
idiv
sub
ret
mov
neg
xor
dec
mov
ret
sub
sbb
mov
jle
leave
ret
cmp
adc
mov
adc
cmp
jmp
enter
test
push
push
xor
cmp
sub
sub
inc
lahf
dec
pop
retf
mov
movs
test
add
add
aam
xor
pop
xor
mov
in
and
push
inc
lods
imul
in
jae
jl
ins
not
js
dec
fldenv
pop
mov
push
xchg
add
retf
test
xchg
cwde
in
pop
mov
out
push
xor
add
(bad)
loop
or
xchg
loop
outs
sub
and
xor
cwde
fs
dec
pop
int
sti
imul
fcomp
sbb
lods
iret
(bad)
or
jmp
sbb
mov
sub
adc
mov
jmp
shl
ja
test
shl
mov
fst
retf
xor
pop
adc
inc
xor
adc
cmp
fcomp
mov
jp
sbb
sbb
mov
xor
lods
jns
adc
jle
jge
and
mov
cmps
inc
cmp
cmp
out
inc
inc
int
dec
std
in
rol
punpckhdq
bound
aad
mov
jae
pop
sub
outs
mov
pop
fdivr
sbb
shl
jne
fs
inc
pushf
cli
fiadd
jecxz
pop
jne
outs
xchg
sub
pushf
mov
retf
stc
jmp
jmp
sbb
mov
fwait
mov
fstp
xchg
cmc
sub
xchg
and
mov
int
fisttp
mov
fld
pop
and
neg
or
(bad)
imul
into
jnp
mov
dec
fwait
xor
xchg
mov
mov
xor
mov
and
cld
ds
stc
mov
jns
sti
imul
jmp
inc
iret
add
push
push
aaa
inc
cmp
mov
cmp
add
or
dec
xor
adc
xchg
xchg
mov
test
mov
rol
adc
cmp
mov
push
add
inc
sub
data16
mov
jmp
inc
sub
mov
bound
pusha
rcl
jb
mov
jmp
adc
and
sub
lods
dec
dec
mov
scas
ror
fmul
inc
adc
cmc
inc
mov
cmp
cmp
push
nop
popf
sbb
mov
je
dec
sbb
lods
xchg
xchg
ja
fwait
and
(bad)
int
sub
mov
scas
mov
pop
push
jae
sahf
mov
push
sub
mov
pop
pop
pop
sbb
loop
and
call
ins
jbe
pop
inc
sbb
std
pop
lahf
outs
ins
mov
clc
lock
movs
je
fst
and
pop
adc
dec
dec
sub
shr
jnp
xor
pop
imul
ret
push
movs
sub
mov
adc
outs
int
arpl
sahf
in
mov
test
push
mov
mov
jae
enter
popa
pop
xchg
(bad)
sti
div
inc
xchg
imul
mov
(bad)
jmp
xchg
push
not
shl
and
and
sub
rcl
cdq
xchg
pop
loope
xor
and
add
adc
enter
ins
int
jo
cmp
mov
inc
sub
push
and
mov
adc
(bad)
push
xor
and
sbb
daa
pop
stc
(bad)
das
xor
pop
sbb
xlat
and
pop
les
jmp
mov
or
jg
adc
nop
pop
lea
add
ss
inc
mov
add
dec
in
jp
sub
loope
cmps
in
xchg
and
dec
or
ja
aad
or
push
or
cmp
outs
aaa
loop
pop
pop
icebp
and
mov
push
inc
adc
lods
and
lds
mov
neg
push
ror
stc
lods
lahf
test
sbb
pusha
lea
(bad)
mov
or
pop
push
rcr
or
jbe
in
and
popf
jo
sbb
lock
xchg
cmp
cmp
mov
push
sti
test
add
outs
(bad)
cmp
jle
dec
ror
sub
adc
aaa
mov
ret
aaa
cmps
xchg
(bad)
int
pop
sbb
cmp
pop
push
int
add
push
push
adc
loopne
in
push
jmp
lahf
add
jne
cmp
loope
imul
fidivr
fwait
dec
xor
aam
pop
loope
jbe
xchg
call
in
dec
enter
cmc
sti
mov
pop
cld
cmp
xchg
or
cmp
aad
pop
rcl
dec
pop
fld
push
aad
mov
jo
xor
push
mov
gs
fwait
add
pop
sbb
xchg
pop
or
loope
rcr
ins
jmp
mov
ucomiss
adc
cs
scas
mov
mov
sbb
or
aaa
xchg
mov
out
les
inc
cs
xor
enter
push
pop
dec
popf
inc
mov
pop
lea
sbb
inc
xchg
arpl
xor
in
fs
sub
xchg
sbb
dec
gs
lods
mov
fmul
mov
jno
pusha
inc
fisttp
push
adc
dec
movs
ss
and
in
stos
jns
push
leave
retf
inc
pop
out
push
or
js
xor
and
clc
sti
fst
dec
sub
inc
retf
push
xchg
or
inc
scas
mov
mov
and
pop
movs
nop
jo
sbb
(bad)
jmp
dec
sub
(bad)
out
xchg
sbb
push
call
jns
fld
pop
stos
and
jnp
stos
jno
jmp
sub
or
(bad)
in
xor
mov
mov
jmp
in
mov
push
dec
xor
shl
sub
das
clc
mov
out
xchg
mov
and
sub
jl
scas
add
out
pop
ins
push
pusha
mov
imul
clc
push
mov
add
inc
xor
adc
xchg
outs
in
xchg
in
pop
inc
out
mov
in
mov
jg
test
mov
mov
pop
leave
call
mov
idiv
jbe
rcr
repz
and
adc
mov
cwde
test
call
iret
fwait
je
dec
mov
and
outs
push
cmp
cmps
arpl
dec
enter
push
sbb
cmps
jo
cwde
loopne
pop
pop
push
mov
test
dec
icebp
clc
nop
dec
lods
mov
cmp
jge
xchg
mov
mov
jle
push
push
add
pop
jl
and
cli
xchg
jg
adc
pop
xor
sbb
adc
outs
adc
retf
jmp
xor
int
in
lds
dec
jnp
mov
(bad)
retf
or
xor
mov
das
leave
test
push
movs
cmp
fs
jmp
mov
shr
xchg
or
fisubr
fnstcw
pop
xor
sbb
es
xor
ror
cmps
push
mov
into
(bad)
pop
cwde
mov
je
popa
mov
imul
inc
and
fisubr
clc
int3
ins
or
fs
ret
pop
push
xor
(bad)
popf
push
shl
es
out
out
cmp
and
dec
jae
adc
sbb
cmp
or
mov
cmps
cmps
inc
es
push
or
in
test
test
and
xchg
and
jg
imul
dec
fnstenv
cmp
push
xchg
dec
xchg
gs
addr16
mov
add
test
or
pop
mov
call
(bad)
test
jbe
inc
mov
cs
sti
popf
push
add
push
lods
jmp
jp
jbe
retf
in
xor
jecxz
jo
xchg
jns
pop
or
inc
repnz
mov
add
sub
xchg
retf
fidivr
adc
rcr
cmp
in
(bad)
(bad)
stos
sbb
pop
pop
and
mov
inc
out
mov
add
nop
loope
sub
push
mov
out
cmp
add
test
add
movs
push
cmps
into
adc
dec
push
xor
pmullw
(bad)
cld
adc
mul
inc
test
adc
shr
ror
xor
mov
in
mov
loop
adc
mov
push
xchg
xchg
les
push
pop
aaa
dec
adc
push
vmovaps
cmps
scas
stos
mov
push
arpl
loop
inc
jl
fadd
pusha
sbb
mov
ins
mov
movs
mov
out
add
push
push
sub
ret
fs
dec
xor
push
sub
cmps
mov
cwde
adc
das
xchg
or
rcr
int
jb
adc
cmp
imul
or
cld
push
imul
addr16
xchg
sub
test
mov
nop
jecxz
out
iret
fdiv
mov
mov
imul
push
add
adc
jb
jle
and
lods
mov
sub
popf
dec
add
push
push
pavgb
and
inc
cdq
ins
fcmovnbe
std
cmps
pop
enter
or
or
scas
jns
mov
push
dec
sub
fistp
xor
inc
or
cld
push
shl
lock
imul
push
xchg
mov
in
add
mov
cmps
int
call
cmps
lods
dec
xor
sbb
mov
sbb
rol
adc
lea
cdq
cmp
in
mov
(bad)
xchg
jg
out
push
cmp
lods
mov
aad
xlat
pop
bound
lds
xchg
cmp
push
cmp
cmp
inc
xor
fistp
or
scas
jno
ror
fs
xor
retf
(bad)
sbb
push
cmp
aad
loop
lea
cmp
scas
add
lods
hlt
call
push
cmp
sub
mov
repz
fs
add
loopne
ror
or
pop
dec
fwait
jns
imul
sub
add
xchg
push
lods
icebp
push
inc
cmp
xor
or
lds
jb
xchg
xchg
in
icebp
fistp
sbb
int3
(bad)
mov
cmp
push
ins
sti
add
lods
adc
aas
ror
jbe
stc
aam
sbb
pop
jmp
or
pop
(bad)
(bad)
jle
inc
and
(bad)
jl
cmp
gs
and
push
call
adc
and
stos
and
xchg
inc
int
das
fidivr
shr
outs
stos
and
cmp
scas
les
push
sub
cmp
adc
mov
inc
jo
cdq
dec
imul
inc
inc
pop
bound
or
popf
jbe
scas
push
ficom
add
xchg
xchg
(bad)
jle
dec
inc
mul
lds
mov
mov
sbb
mov
mov
push
mov
adc
rol
test
push
pop
xchg
ins
jne
daa
(bad)
loop
idiv
pop
gs
dec
jmp
sbb
out
and
mov
pop
ret
sub
fisttp
cli
pop
push
add
mov
add
jmp
int3
xor
or
xor
movs
fwait
sbb
cmp
outs
add
mov
sahf
fst
scas
dec
mov
adc
inc
push
inc
mov
jno
aad
sub
add
mov
repz
pushf
test
sti
clc
ins
adc
sub
jl
add
xchg
adc
adc
mov
lahf
sub
pop
and
dec
iret
push
xor
test
popf
and
mov
mov
imul
movs
std
(bad)
test
inc
inc
or
mov
ss
mov
inc
lea
xor
aad
ficom
sbb
adc
cwde
jp
push
or
test
cmp
aas
jo
cmp
dec
cdq
mov
loop
mov
sub
fwait
test
cmp
(bad)
pop
jecxz
popf
aaa
push
jmp
and
pop
movs
nop
out
mov
ins
das
fisttp
xor
(bad)
dec
and
mov
mov
mov
jnp
sub
sub
std
shl
jne
std
retf
div
outs
xor
and
cmp
push
and
add
cwde
and
mov
add
iret
mov
mov
repz
lods
(bad)
or
mov
fwait
data16
repz
pop
stos
stc
loope
and
retf
xor
sbb
sbb
pop
push
test
test
jmp
test
and
add
sbb
dec
sbb
push
jb
sbb
out
mov
sar
scas
xor
jp
(bad)
cmp
nop
mov
stc
jle
adc
sub
arpl
push
enter
clc
addr16
and
mov
sbb
and
mov
adc
pop
test
mov
mov
loope
paddusb
push
test
(bad)
fisttp
shl
arpl
lods
arpl
push
shr
out
int3
or
mov
add
das
sti
pop
sub
sahf
stos
cmp
cmp
jp
sbb
test
ret
pop
mov
cli
lods
aas
add
iret
dec
jbe
(bad)
dec
sahf
xchg
xchg
sbb
pop
adc
(bad)
jg
(bad)
fucomi
in
es
ins
mov
bound
lea
cdq
test
inc
adc
imul
lods
fidiv
xor
dec
push
lods
mov
lods
out
loope
jno
pushw
movs
cmp
fsub
ins
xor
dec
cdq
cmp
sbb
(bad)
out
xor
jns
dec
pop
jno
ror
(bad)
sti
add
push
mov
add
clc
cmp
pop
repz
hlt
es
xchg
fdivr
inc
sbb
xchg
push
mov
fwait
arpl
inc
sti
imul
jnp
lock
shr
cwde
dec
leave
lods
test
add
aas
mov
lods
mov
dec
jno
mov
xchg
dec
divps
pop
fiadd
push
mov
dec
call
shl
xchg
xor
pop
fst
inc
or
imul
push
out
mov
pop
int3
repnz
adc
xor
adc
mov
rol
popf
rcr
push
and
stos
xchg
jmp
sbb
pop
sub
not
cmp
js
adc
jge
xor
push
inc
or
movs
pop
not
mov
scas
adc
pop
sahf
mov
ret
pop
xlat
mov
aad
mov
test
jne
sar
cld
pop
(bad)
pop
push
push
sbb
jbe
shr
rcr
push
addps
push
mov
dec
mov
sub
idiv
call
es
dec
push
jae
aaa
dec
js
popa
rol
sub
and
loopne
pop
in
jno
cdq
ret
movs
hlt
xchg
cmp
enter
call
sub
int
inc
into
mov
adc
popa
es
inc
sbb
fwait
or
rcr
and
xchg
xlat
leave
inc
cmps
inc
pop
mov
xchg
jge
dec
ret
mov
mov
sahf
mov
sbb
mov
popf
mov
and
mov
dec
scas
mov
jmp
sub
fidiv
dec
int
mov
ds
mov
mov
xchg
xor
mov
cs
cmp
add
imul
jecxz
mov
sbb
and
or
out
cli
push
and
stos
aad
pop
sub
adc
push
xchg
sub
test
iret
add
push
and
jno
mov
add
sbb
icebp
scas
jo
ins
(bad)
fwait
mov
sbb
dec
retf
sahf
jnp
mov
in
(bad)
cdq
cli
rcr
(bad)
jle
int3
xor
mov
gs
mov
push
sub
dec
mul
xchg
retf
jge
pop
cli
in
sub
add
(bad)
sbb
stc
and
jge
dec
add
(bad)
xchg
lods
aaa
push
(bad)
(bad)
or
mov
adc
add
icebp
push
or
xor
xchg
jb
mov
test
dec
punpcklbw
and
(bad)
das
ss
popa
aam
inc
les
xchg
mov
inc
sbb
jae
fiadd
xchg
inc
mov
(bad)
cmps
stos
mov
stc
outs
pusha
dec
jl
inc
outs
cmc
icebp
int3
jp
stc
ss
cmps
scas
add
pushf
fld
sub
(bad)
cmp
in
cld
aad
jae
sub
and
jne
push
popa
in
jmp
push
enter
and
outs
std
sbb
sar
fidivr
adc
inc
icebp
lods
push
outs
push
outs
add
mov
cs
mov
adc
or
xchg
inc
mov
or
pushf
inc
rcl
pop
xor
in
(bad)
int
mov
std
sub
pop
sub
inc
aaa
hlt
xchg
(bad)
fcomp
pop
sub
or
enter
jmp
loopne
shr
pushf
aaa
mov
mov
repz
js
test
mov
push
(bad)
mov
xor
pop
imul
iret
(bad)
lock
mov
xchg
dec
pushw
mov
dec
cmp
(bad)
int3
push
and
sub
(bad)
or
sbb
push
leave
into
popa
in
out
or
les
(bad)
loopne
outs
dec
idiv
pop
or
imul
mov
into
cmc
outs
fs
mov
outs
dec
add
ret
fld
add
mov
or
pop
lds
dec
mov
sti
add
ja
jg
jno
jmp
jl
fbstp
enter
into
pop
xchg
and
out
dec
(bad)
mov
xchg
lahf
sbb
mov
cmc
or
xor
mov
gs
sbb
cmp
fiadd
test
jnp
adc
nop
dec
out
stos
je
mov
inc
jg
inc
gs
repnz
xchg
inc
mov
aaa
xor
popf
frstor
out
inc
stos
sbb
repnz
stos
cmp
cmp
mov
push
mov
test
(bad)
mov
sub
cld
cmps
sti
xor
sahf
cmp
adc
out
out
mov
out
cmc
test
jnp
mov
jno
loop
jmp
inc
and
mov
shl
adc
scas
mov
leave
cmp
lods
inc
adc
imul
add
mov
and
and
cld
xchg
and
or
sub
add
mov
dec
xchg
fisubr
push
(bad)
(bad)
sbb
dec
push
dec
and
scas
pop
push
lahf
call
inc
pusha
xchg
in
fist
bound
mul
outs
cdq
hlt
jo
and
adc
and
dec
aas
mov
(bad)
push
clts
pop
pop
sbb
loopne
sub
and
push
lods
les
dec
aam
jne
push
push
dec
rol
pop
jp
or
and
pop
cmc
mov
or
std
daa
stos
mov
ins
sub
aad
test
push
jecxz
clc
push
mov
sbb
jmp
fcmovnb
xchg
push
out
pop
idiv
stos
adc
(bad)
mov
pusha
jo
jo
outs
stc
pop
mov
ss
pop
mov
push
xor
imul
mov
pusha
add
popa
pop
add
jge
push
pop
cmps
mov
cmps
push
scas
gs
lahf
call
xchg
xchg
add
jg
or
xchg
xlat
test
dec
popf
or
or
xchg
jg
jbe
(bad)
mov
jbe
enter
push
xlat
scas
mov
cmp
clc
jbe
rcr
dec
jp
cmp
(bad)
xlat
jmp
cmps
push
jge
icebp
mov
pop
mov
pop
fldcw
sahf
hlt
das
push
outs
cmp
adc
xchg
fisttp
push
add
stos
jae
dec
cmc
shl
mov
cmp
xor
inc
imul
cmps
xor
popa
repnz
aad
imul
mov
or
dec
int
popf
jns
dec
cmp
push
test
fstp
outs
iret
movs
into
fdiv
xor
rol
mov
je
cwde
sbb
bndstx
imul
sub
sbb
arpl
outs
test
fmul
(bad)
enter
xor
cmps
pop
nop
ficom
mov
cmp
or
or
int
and
mov
jne
loopne
data16
call
jecxz
lods
cld
and
pop
stos
pusha
test
mov
loope
xchg
mov
test
in
(bad)
cmp
cmp
mov
dec
push
ss
cmps
les
or
cmp
fisubr
sub
test
int
jl
xchg
scas
push
mov
iret
push
jle
dec
cdq
dec
xchg
in
mov
scas
popa
jmp
shr
jae
cmp
mov
test
jle
inc
push
add
add
mov
mov
pop
push
mov
xchg
add
cdq
(bad)
int3
ficomp
sbb
or
adc
inc
inc
cmp
pop
mov
gs
pop
and
inc
or
and
pushf
js
movs
add
or
sub
pusha
mov
add
stos
loopne
loopne
pop
cdq
xchg
xor
adc
inc
not
enter
ficom
jmp
fimul
pop
xor
jecxz
add
retf
mov
retf
(bad)
jae
xchg
mov
aas
add
outs
pushf
pop
pushf
xchg
adc
push
bound
outs
adc
cwde
lahf
cmp
cdq
dec
inc
mov
cdq
or
test
inc
addr16
pop
cmp
mov
pop
mov
sub
movs
mov
sub
std
jmp
out
and
dec
addr16
mov
push
dec
xchg
push
jae
sbb
adc
pop
outs
pop
push
inc
fdivr
div
pop
dec
xchg
cmps
aad
mov
je
je
mov
adc
add
pop
rcr
xchg
test
cmp
sub
mov
popa
jns
popf
in
cld
je
adc
bound
mov
dec
dec
push
call
sbb
gs
adc
test
mov
pop
inc
inc
rcl
xchg
cmp
ins
(bad)
sbb
mov
das
outs
dec
cmc
gs
jnp
fldcw
(bad)
outs
lea
or
jle
jl
dec
inc
fmul
not
dec
fcom
fwait
(bad)
adc
dec
fadd
enter
(bad)
mov
push
xor
sub
jle
cwde
sbb
stc
jae
cld
sahf
pop
jbe
fidivr
popf
test
push
dec
addr16
jmp
movs
mov
jge
ins
and
in
repnz
mul
mov
lahf
jmp
inc
xor
cdq
push
jmp
sbb
mov
fcom
pusha
call
bound
xchg
les
and
inc
lock
dec
lods
ss
xchg
out
or
push
in
(bad)
imul
aaa
stos
shl
add
js
cmp
push
jmp
test
cwde
adc
repz
cmp
adc
adc
inc
mov
or
xchg
cli
gs
dec
push
sbb
fnsave
add
sbb
into
(bad)
in
ror
in
js
adc
cmp
sub
les
ins
dec
ins
jae
test
jno
(bad)
movs
fsubr
repnz
push
jl
xor
loope
ins
(bad)
lahf
iret
adc
jae
push
adc
bound
sti
xchg
jae
(bad)
aas
(bad)
fmul
inc
xchg
sbb
add
jb
movs
clc
inc
ins
pop
mov
out
jp
jns
sete
js
jno
add
mov
data16
nop
data16
ror
fcomp
inc
lods
out
retf
cmp
dec
test
mov
dec
fidiv
in
cli
lods
fwait
sbb
mov
ins
mov
cmp
jne
xchg
cdq
stos
inc
inc
push
push
and
cld
cmp
inc
(bad)
loope
pop
cs
lds
cli
xor
and
movs
int3
add
push
fisttp
movs
arpl
push
pop
dec
jge
into
pushf
inc
cmp
(bad)
mov
ret
idiv
cmp
les
fisub
mov
xchg
mov
xchg
xchg
jmp
xor
in
or
lods
shl
das
adc
mov
test
jge
(bad)
xchg
pop
data16
push
stos
and
pop
cli
fist
hlt
fisttp
dec
jne
pop
pop
or
xor
fild
sar
or
bound
imul
mov
ret
mov
jge
sub
xor
loope
inc
rcr
scas
out
or
enter
mov
dec
cmp
fnstsw
adc
call
mov
lahf
sar
cmp
lahf
test
cmp
jbe
push
imul
lds
mov
mov
mov
enter
jno
xor
loopne
lahf
push
xor
(bad)
cli
dec
repz
ja
push
xchg
inc
jo
sub
js
shr
inc
test
xchg
inc
pop
jnp
ins
mov
in
ficom
mov
test
sbb
mov
clc
add
popa
jno
call
shl
or
dec
inc
inc
ffreep
sbb
push
adc
leave
jns
mov
pop
cmps
icebp
(bad)
mov
mov
mov
jmp
test
jge
pop
cmp
cmps
aad
or
xor
xor
repnz
xchg
mov
adc
imul
xchg
sub
or
ret
push
cwde
pushf
inc
inc
rcr
jbe
mov
mov
mov
push
push
nop
xor
push
mov
mov
cdq
pop
mov
ror
rcr
daa
and
mov
mov
cmp
addr16
lock
jmp
call
adc
adc
sbb
inc
jb
ins
mov
xchg
popa
cmp
rol
nop
push
xchg
mov
xor
fstp
retf
xchg
repz
test
fisub
aad
inc
mov
mov
fsub
xor
fbstp
cld
imul
sbb
add
outs
inc
scas
or
fdivr
retf
movs
cdq
addr16
popf
ja
mov
shr
enter
push
sub
test
add
ret
cmps
mov
outs
add
je
dec
jne
and
or
xor
je
popf
fcomp
xor
ja
lods
and
jle
mov
inc
or
jp
repz
sbb
cmps
out
or
cmp
icebp
mov
cmp
pop
or
jb
sub
inc
pop
iret
cwde
push
stos
es
xchg
popa
into
jle
data16
mov
test
repnz
dec
jmp
or
bound
scas
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
xchg
xor
ja
popa
push
out
mov
les
(bad)
hlt
push
xor
xchg
fs
xor
fdivr
jmp
rcl
mov
sub
mov
sbb
dec
jno
repz
test
ficomp
jmp
(bad)
mov
hlt
mov
imul
std
in
leave
mov
add
ins
push
arpl
psubd
or
outs
cmp
imul
addr16
add
aam
dec
std
test
movs
cli
test
xor
(bad)
leave
mov
lods
jecxz
fdiv
jne
fild
or
shr
cmp
ficom
push
xlat
enter
mov
and
mov
cdq
xchg
mov
mov
or
or
and
or
adc
stos
sbb
data16
inc
fdiv
jno
add
aad
mov
mov
movs
in
lahf
xor
mov
js
stc
add
mov
push
loope
or
ins
or
pop
arpl
hlt
push
imul
ins
sbb
xor
dec
add
in
xchg
push
ins
jnp
add
shl
adc
cmc
(bad)
fnstenv
adc
mov
mov
bound
ficom
gs
aam
pop
popa
mov
into
push
mov
je
mov
aam
movs
fisttp
xchg
fdivr
sti
hlt
(bad)
shr
imul
mov
sar
add
in
add
pop
dec
or
cmp
add
daa
adc
or
and
test
or
mov
popa
into
push
stc
ficomp
leave
fldcw
and
xlat
(bad)
pop
cmp
mov
cmp
lods
ins
mov
in
mov
mov
add
inc
aad
scas
ja
popf
adc
push
fdiv
or
test
fs
ds
or
or
push
in
dec
xchg
daa
scas
add
mov
pop
jge
xchg
(bad)
shl
add
inc
push
imul
xor
sbb
push
imul
aam
loopne
ror
int3
dec
frstor
fistp
mov
mov
aad
mov
call
xchg
shl
push
repnz
addr16
cmps
fld
mov
dec
ss
fisubr
or
scas
test
pusha
jp
inc
ret
out
pusha
fist
addr16
mov
jns
imul
and
shr
ss
push
xchg
ja
int3
add
mov
das
es
lds
or
sub
mov
cmps
call
ret
shl
sbb
ret
es
pushf
mov
ins
add
ss
jmp
addr16
jb
push
add
adc
mov
jnp
sbb
xchg
or
out
fdivr
fisttp
aam
rol
clc
mov
push
int
mov
mul
ja
outs
ja
mov
out
or
retf
pop
or
adc
sahf
gs
clc
sar
imul
ins
push
js
or
push
add
mov
cmp
cmps
not
pusha
ror
imul
push
scas
fcomp
fldenv
fild
cmp
aaa
push
scas
mov
fidivr
mov
jmp
repnz
retf
mov
cmps
mov
sar
sub
push
mov
jp
mov
dec
popa
les
sbb
xchg
sub
aaa
mov
or
sbb
add
sub
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
push
add
add
add
jae
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
popa
add
add
add
add
add
add
add
add
add
add
add
add
push
add
add
add
add
add
adc
add
sbb
add
and
add
xor
add
inc
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
or
add
or
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
or
add
add
add
or
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
or
add
add
add
or
add
add
add
add
add
add
add
add
or
add
push
push
add
add
cmovb
inc
add
add
add
add
or
add
jbe
xor
xor
add
add
add
add
inc
add
and
add
add
or
add
push
je
imul
add
add
and
add
add
and
dec
inc
add
add
dec
add
dec
or
add
inc
ins
outs
bound
add
add
add
push
xchg
mov
add
cli
add
add
add
add
add
push
add
add
add
lods
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
xor
push
add
add
add
add
xor
push
add
add
add
in
repz
add
add
add
add
add
add
add
add
add
add
add
add
add
add
push
add
add
add
add
xor
push
add
jne
push
add
add
add
fadd
or
push
add
add
add
add
add
push
add
add
add
add
add
add
add
xor
push
add
add
add
xor
push
add
add
add
rol
add
add
add
add
add
add
add
add
add
add
add
add
sub
bound
ins
add
je
jg
push
add
add
add
add
loopne
repz
add
push
xor
push
add
mov
push
xor
push
add
xor
push
add
in
add
add
add
add
push
in
add
add
push
in
add
add
push
in
add
add
pop
xor
push
add
pop
xor
or
dec
pop
xor
push
add
xor
push
add
add
pop
fiadd
push
add
or
add
add
xor
push
add
xor
push
add
xor
push
add
mov
add
add
or
add
add
or
add
add
or
add
add
add
or
add
add
or
add
add
add
xor
push
add
or
add
add
or
add
add
or
push
add
add
or
push
add
or
push
add
add
add
or
or
add
or
push
add
or
or
add
add
add
add
add
add
add
add
add
add
add
add
add
sbb
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
adc
add
add
add
jo
add
adc
add
add
xor
add
add
add
sub
jp
add
adc
mov
add
add
add
add
add
mov
add
adc
aad
add
xor
add
add
add
add
xor
xor
pushf
add
add
add
add
xor
add
add
add
add
add
add
add
add
add
add
add
add
xor
mov
add
add
add
xor
add
add
add
add
cmp
loop
add
add
fld
cmp
in
add
add
add
add
cmp
in
add
add
add
add
cmp
in
add
add
add
push
add
xor
cmp
in
add
add
add
add
xor
add
add
add
push
add
xor
add
or
add
add
add
add
add
std
add
and
add
adc
xchg
add
std
add
and
add
add
add
and
add
add
push
add
or
add
add
or
add
add
or
add
add
or
add
add
or
add
add
or
add
add
add
add
or
add
add
or
add
add
or
add
add
or
add
add
add
add
or
add
add
add
add
add
xor
cmps
add
add
add
add
or
add
add
add
add
or
add
add
add
add
add
add
add
or
add
add
add
add
or
add
add
add
add
or
add
add
add
add
or
add
add
add
add
add
xor
add
add
add
or
add
add
add
add
add
xor
add
add
add
add
xor
add
add
add
add
xor
add
add
add
add
xor
add
add
add
add
xor
add
add
add
add
xor
add
add
add
add
xor
add
add
add
add
xor
add
add
add
add
xor
add
add
add
add
xor
add
add
add
add
add
add
add
add
xor
add
add
add
add
xor
add
add
add
add
add
add
test
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
stos
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
mov
add
xor
add
add
add
lods
add
add
add
add
add
add
enter
xor
add
add
add
or
add
add
add
add
or
add
add
add
add
or
add
add
add
add
or
add
add
add
add
or
add
add
add
add
or
add
add
add
add
or
add
add
add
add
or
add
add
add
add
or
add
add
add
mov
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
and
enter
and
enter
and
loope
add
and
enter
and
enter
and
aam
dec
add
add
add
add
enter
add
aam
out
add
add
add
add
(bad)
add
add
add
add
and
aam
pop
add
add
add
add
add
add
add
add
add
add
enter
add
enter
add
enter
add
aam
push
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
enter
add
enter
push
add
add
push
add
add
push
add
add
add
add
add
add
add
add
add
xor
enter
adc
enter
push
add
add
push
add
add
add
push
add
add
push
add
add
xor
enter
xor
aam
in
pop
xor
(bad)
add
pop
xor
fadd
in
pop
add
enter
add
aam
push
add
add
add
add
add
add
add
add
add
add
add
add
add
enter
add
enter
add
enter
add
enter
add
aam
add
add
enter
add
enter
add
aam
push
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
ss
add
or
add
add
or
add
add
pop
xor
aam
in
pop
add
enter
add
aam
or
add
enter
add
enter
add
aam
push
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
pop
add
enter
add
enter
add
enter
add
enter
xor
enter
xor
enter
add
enter
add
enter
add
aam
(bad)
or
add
add
or
add
add
add
aam
or
add
enter
add
aam
push
add
add
add
xor
(bad)
add
add
add
add
xor
fadd
or
push
add
add
push
add
add
add
add
add
add
add
add
add
add
add
add
enter
add
(bad)
add
add
add
add
or
add
add
add
add
add
add
aam
pop
or
add
add
add
add
add
add
add
add
add
fadd
push
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
or
enter
add
enter
add
aam
push
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
pushf
or
add
add
add
add
add
add
add
add
add
add
add
add
add
add
or
add
add
add
add
add
add
push
and
add
add
add
add
add
add
add
jl
add
or
xchg
add
dec
and
add
add
add
add
sub
add
add
add
add
add
or
xchg
add
add
add
or
xchg
add
add
add
add
add
add
add
or
xchg
add
add
cmp
add
add
add
add
add
or
xchg
add
add
cmp
add
add
add
add
add
add
add
add
add
or
xchg
add
add
cmp
add
add
add
add
xchg
add
add
add
add
add
add
cmp
add
add
add
add
add
or
xchg
add
add
add
or
xchg
add
add
add
or
add
add
add
add
add
add
add
add
add
or
xchg
add
add
add
or
xchg
add
add
add
or
xchg
add
add
add
or
sbb
add
add
add
add
add
add
fdivr
add
or
add
add
add
inc
inc
add
or
add
add
add
add
add
add
add
xchg
add
add
inc
add
or
xchg
add
add
inc
add
or
sbb
add
add
add
inc
add
or
add
add
add
add
add
or
add
add
add
add
add
add
add
add
add
add
add
dec
add
or
xchg
add
add
dec
add
or
xchg
add
add
dec
add
or
xchg
add
add
add
or
xchg
add
add
or
add
add
add
add
add
add
add
add
dec
add
or
add
add
verr
dec
add
or
add
add
add
add
dec
add
or
add
add
add
push
add
or
add
add
popa
add
or
add
add
sbb
and
add
or
xchg
add
add
add
or
xchg
add
add
sbb
and
or
xchg
add
add
add
or
xchg
add
add
add
or
xchg
add
add
add
or
xchg
add
add
add
or
xchg
add
add
add
add
add
add
add
add
add
int3
add
or
xchg
add
add
daa
add
add
or
xchg
add
add
sub
cld
add
or
xchg
add
add
add
add
add
or
xchg
add
add
add
or
xchg
add
add
add
add
add
add
add
add
or
xchg
add
add
add
add
add
add
add
add
add
add
add
or
xchg
add
add
add
add
add
or
xchg
add
add
add
hlt
add
or
xchg
add
add
aas
add
add
or
sbb
add
add
in
add
or
add
add
inc
add
add
or
add
add
add
loopne
add
or
add
add
add
mov
add
add
add
mov
add
add
mov
add
or
xchg
add
add
inc
add
imul
or
sbb
add
add
imul
or
add
add
inc
add
add
add
add
test
add
or
add
add
add
fsubr
add
add
add
or
add
or
add
add
jo
add
add
add
push
jo
add
add
add
push
add
add
xor
or
add
add
add
movs
jo
add
add
add
aam
add
or
add
add
add
les
add
add
add
sbb
add
add
add
sub
add
or
xchg
add
add
jne
add
add
add
pop
jne
add
add
add
pushf
jbe
add
add
add
ja
add
add
add
pushf
js
add
add
add
je
add
or
add
add
add
sar
add
add
sar
add
add
add
mov
add
add
sar
add
add
add
in
add
or
xchg
add
add
pop
add
add
or
xchg
add
add
pop
add
jg
add
add
add
cmp
add
add
add
mov
add
add
lock
or
add
add
add
sub
add
add
add
add
add
add
arpl
add
add
add
add
add
add
add
sbb
add
add
les
xchg
add
add
arpl
hlt
add
add
add
add
add
add
add
test
add
add
add
int3
test
add
add
add
call
add
add
cld
test
add
add
add
adc
xchg
add
add
data16
test
add
add
add
inc
test
add
add
add
pusha
test
add
add
add
mov
add
or
adc
enter
push
add
add
add
add
mov
add
add
add
cld
mov
add
add
add
mov
add
add
add
mov
add
add
add
mov
add
add
add
push
mov
add
add
add
jo
add
or
xchg
add
add
add
cwde
mov
add
add
add
lods
mov
add
add
add
ror
add
add
jo
fmul
sbb
add
add
hlt
mov
add
add
add
or
add
or
xchg
test
sub
xchg
sbb
add
add
add
xchg
add
add
add
sub
adc
enter
jb
cmp
add
or
adc
enter
jne
mov
adc
enter
jns
push
cwde
add
or
adc
enter
jl
ins
cwde
add
or
adc
enter
jle
mov
adc
enter
jg
mov
add
add
add
jg
mov
add
add
add
add
or
adc
enter
add
cwde
add
or
xchg
add
add
cdq
add
or
xchg
add
add
cdq
add
or
xchg
add
add
add
cdq
add
or
xchg
add
add
cdq
add
or
xchg
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
call
enter
mov
sbb
add
add
call
aam
xchg
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
popf
add
adc
enter
mov
add
add
add
add
mov
xchg
add
add
mov
xchg
add
add
mov
xchg
add
add
mov
add
add
add
add
add
add
or
xchg
or
add
add
or
xchg
add
add
add
or
les
enter
movs
add
mov
add
movs
add
add
or
adc
enter
movs
add
add
add
add
test
add
add
add
add
scas
add
test
adc
enter
mov
inc
test
adc
enter
mov
pop
test
adc
enter
mov
jo
add
or
adc
enter
mov
mov
adc
enter
mov
add
add
add
add
add
add
add
add
add
add
add
add
add
add
or
xchg
add
add
mov
add
add
add
add
add
or
xchg
add
add
mov
add
add
add
add
add
or
les
enter
ret
add
add
les
mov
adc
enter
les
mov
adc
enter
leave
add
add
or
adc
enter
int
adc
add
or
adc
enter
rol
call
add
add
add
mov
add
add
add
add
aad
sbb
adc
enter
aad
xor
adc
enter
xlat
add
add
add
add
add
add
or
adc
enter
fadd
xor
add
add
add
or
xchg
add
add
fild
mov
add
or
xchg
add
add
mov
add
add
add
add
mov
add
add
add
add
mov
add
add
add
add
mov
add
add
add
add
add
or
xchg
add
add
add
or
xchg
add
add
mov
add
add
add
add
add
or
xchg
sbb
add
add
add
add
or
xchg
add
add
add
add
add
or
xchg
add
add
mov
xchg
add
add
mov
xchg
add
add
mov
xchg
test
nop
mov
les
enter
out
add
add
add
add
add
adc
enter
lock
adc
enter
icebp
add
xchg
add
add
icebp
add
mov
xchg
add
add
mov
xchg
add
add
mov
xchg
add
add
mov
xchg
add
add
hlt
add
xchg
test
inc
mov
xchg
add
add
add
add
add
add
add
add
add
add
add
xchg
add
add
cmc
add
xchg
test
enter
or
xchg
sbb
add
add
add
add
add
add
mov
xchg
or
add
add
add
mov
xchg
add
add
add
add
add
or
xchg
add
add
stc
add
les
add
add
add
add
xchg
add
add
add
add
lds
add
add
push
std
add
xchg
add
add
lds
add
add
add
add
add
add
add
add
add
add
add
add
add
add
xchg
add
add
lds
add
add
push
add
in
lds
add
add
add
or
add
or
xchg
add
add
add
or
xchg
add
add
push
add
add
or
xchg
add
add
or
pop
mov
or
xchg
add
add
add
add
or
xchg
add
add
mov
or
xchg
add
add
(bad)
lods
mov
or
xchg
add
add
mov
or
xchg
add
add
add
mov
or
xchg
add
add
add
add
mov
add
add
add
add
add
or
xchg
add
add
add
add
mov
add
add
add
add
add
add
add
add
add
or
xchg
add
add
mov
add
add
sbb
add
add
add
add
mov
add
add
and
fadd
add
or
xchg
add
add
and
hlt
mov
sbb
add
add
add
or
xchg
enter
and
add
add
push
add
add
push
sub
(bad)
int3
add
or
xchg
add
add
add
int3
add
or
xchg
add
add
add
or
xchg
add
add
int
add
add
add
add
add
push
sub
add
add
add
add
add
add
push
xor
js
add
or
xchg
add
add
int
add
add
push
xor
mov
add
or
xchg
test
int3
int
add
add
add
add
int
add
add
add
add
into
add
or
xchg
add
add
aaa
add
into
add
or
xchg
add
add
push
cmp
pop
iret
add
or
xchg
add
add
push
cmp
enter
or
xchg
add
add
push
cmp
add
add
add
call
add
add
or
add
or
xchg
add
add
inc
add
add
or
xchg
add
add
inc
add
add
or
xchg
add
add
fld
add
add
add
fld
add
add
add
(bad)
fld
add
add
add
fcomp
add
or
xchg
add
add
fld
add
add
add
adc
add
or
xchg
add
add
push
add
fiadd
add
add
add
fiadd
add
add
push
push
add
add
or
xchg
add
add
add
or
xchg
add
add
add
or
xchg
add
add
add
mov
add
or
xchg
add
add
add
fiadd
add
add
add
in
fiadd
add
add
add
or
add
or
xchg
add
add
fild
add
add
pop
add
add
or
xchg
add
add
fild
add
add
add
js
add
or
xchg
add
add
pop
ins
add
add
pop
jo
mov
add
or
xchg
add
add
pop
jo
int3
fild
add
add
pop
jb
in
add
or
xchg
add
add
loopne
add
add
push
je
sbb
add
or
xchg
add
add
jbe
cmp
add
or
xchg
add
add
add
push
loopne
add
add
push
jl
ins
loopne
add
add
push
jge
mov
add
or
xchg
add
add
pop
jle
movs
loopne
add
add
pop
add
loopne
add
add
add
add
add
pop
add
loopne
add
add
add
add
add
add
add
add
add
add
add
add
add
add
push
mov
js
add
or
xchg
test
dec
loop
add
add
add
or
add
mov
and
add
or
add
mov
push
jmp
add
add
add
or
xchg
add
add
pop
mov
add
add
add
add
add
or
xchg
add
add
in
add
or
xchg
add
add
add
or
xchg
add
add
pop
xchg
add
xchg
add
add
pop
xchg
add
add
add
pop
cdq
add
add
or
xchg
add
add
or
add
add
add
add
add
or
add
add
push
mov
add
add
push
movs
add
in
add
or
xchg
add
add
add
add
add
add
add
add
add
add
add
add
or
xchg
test
sub
add
add
or
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
or
or
xchg
enter
mov
add
add
or
add
cli
add
or
xchg
enter
ret
add
add
or
xchg
enter
mov
sti
add
or
xchg
aam
mov
sti
add
or
xchg
enter
mov
std
add
or
xchg
aam
icebp
add
add
add
or
xchg
add
add
std
add
or
xchg
add
add
std
add
or
xchg
add
add
pop
leave
add
xchg
add
add
add
add
add
add
add
std
add
or
xchg
add
add
aam
fdivr
add
or
xchg
sbb
add
add
add
xchg
test
loopne
add
or
add
(bad)
add
add
add
add
or
add
add
add
add
add
add
or
xchg
add
add
pop
add
or
xchg
add
add
fadd
pushf
pop
add
or
xchg
add
add
pop
add
or
xchg
add
add
or
add
pop
add
or
xchg
add
add
pop
fadd
in
pop
add
or
xchg
add
add
add
or
xchg
test
and
add
or
xchg
sbb
add
add
add
or
add
add
or
add
add
add
or
add
add
or
add
push
add
or
xchg
add
add
loopne
call
add
or
add
add
or
xchg
add
add
pop
jecxz
sbb
add
or
xchg
add
add
pop
in
cmp
add
or
xchg
add
add
sgdtd
or
xchg
add
add
sgdtd
or
xchg
add
add
sgdtd
or
xchg
test
xor
add
or
xchg
fiadd
add
add
add
or
xchg
enter
jmp
add
add
add
add
add
add
add
adc
add
add
add
add
adc
add
add
or
add
add
or
xchg
add
add
jmp
pusha
adc
add
add
add
add
add
add
add
add
add
push
in
add
xchg
add
add
adc
add
add
add
add
adc
add
add
add
add
adc
add
add
add
add
add
or
xchg
test
xor
add
or
xchg
add
add
sbb
add
add
add
add
add
or
add
add
or
add
test
sbb
add
add
add
add
xchg
aam
icebp
add
add
add
or
xchg
enter
clc
add
add
or
xchg
aam
ror
cld
add
and
add
add
add
add
and
add
add
or
add
add
or
add
add
add
add
add
add
or
xchg
add
add
add
or
xchg
add
add
add
or
xchg
add
add
add
or
xchg
add
add
push
add
add
or
xchg
add
add
pop
add
add
or
xchg
add
add
daa
add
or
xchg
add
add
add
add
daa
add
or
xchg
add
add
pop
or
add
add
add
add
add
or
xchg
add
add
pop
adc
push
add
add
add
add
add
add
add
add
add
add
or
add
daa
add
or
xchg
test
mov
add
add
add
add
or
add
add
or
xchg
enter
and
cld
sub
add
add
or
add
das
add
or
xchg
aam
icebp
add
add
add
or
xchg
enter
and
dec
aaa
add
or
xchg
enter
and
cmp
add
or
xchg
aam
inc
or
add
xchg
add
add
and
push
cmp
xchg
add
add
cmp
xchg
add
add
cmp
xchg
add
add
cmp
xchg
add
add
cmp
xchg
add
add
pop
sub
sar
xchg
add
add
pop
sub
in
cmp
xchg
add
add
pop
sub
add
add
or
xchg
test
xor
add
or
add
das
add
add
add
add
add
add
or
add
das
add
add
or
xchg
(bad)
add
add
add
inc
add
or
add
das
add
add
add
or
add
add
or
xchg
aam
imul
add
add
or
xchg
enter
xor
lods
push
add
or
xchg
(bad)
add
xor
add
add
add
add
add
add
add
push
add
or
xchg
add
add
push
add
or
xchg
add
add
add
add
or
xchg
add
add
pop
cmp
dec
push
add
or
xchg
add
add
pop
cmp
add
add
or
add
add
or
pushf
push
add
or
xchg
add
add
push
add
or
xchg
add
add
push
add
or
xchg
test
add
add
or
xchg
enter
dec
add
add
add
add
adc
or
xchg
fiadd
add
cwde
push
add
or
xchg
enter
dec
add
xchg
aam
outs
add
or
add
add
add
and
add
or
xchg
enter
push
add
push
add
or
xchg
add
add
push
add
or
xchg
add
add
push
add
or
xchg
add
add
push
add
push
add
or
xchg
add
add
pop
add
push
add
or
xchg
test
cmp
add
or
xchg
test
pop
push
add
or
xchg
enter
pop
add
xchg
aam
or
pop
add
add
add
push
add
or
xchg
aam
mov
push
add
or
xchg
add
add
add
pop
add
or
xchg
add
add
pop
add
or
xchg
add
add
pop
add
or
xchg
add
add
add
or
xchg
add
add
add
je
add
add
xchg
add
add
pop
add
add
xchg
add
add
pop
add
add
xchg
add
add
pop
add
add
xchg
add
add
pop
add
add
xchg
add
add
or
pushf
pop
add
add
xchg
add
add
or
movs
pop
add
add
xchg
add
add
or
lods
pop
add
add
xchg
add
add
or
mov
add
add
xchg
add
add
or
rcr
add
xchg
add
add
or
enter
add
xchg
add
add
or
int3
pop
add
add
xchg
add
add
or
aam
add
add
xchg
add
add
or
fcomp
add
add
or
call
add
or
lock
add
add
xchg
add
add
or
pop
add
add
xchg
add
add
or
add
add
add
or
or
add
add
add
adc
add
add
or
sbb
add
add
or
and
add
add
or
sub
add
add
or
xor
add
add
or
pop
add
add
xchg
add
add
jle
inc
pop
add
add
xchg
add
add
pop
add
add
xchg
add
add
or
add
add
or
add
add
or
add
add
or
add
add
or
add
xchg
add
add
xchg
je
add
add
xchg
add
add
or
add
add
or
add
add
or
add
add
or
add
add
or
add
add
or
add
xchg
add
add
lea
add
add
enter
add
enter
add
enter
add
enter
add
enter
add
enter
add
aam
add
add
(bad)
add
add
fadd
add
add
enter
add
enter
add
enter
add
enter
add
enter
add
enter
add
aam
add
add
enter
add
enter
add
aam
add
add
enter
add
aam
add
add
(bad)
add
add
fadd
add
add
enter
add
enter
add
enter
add
enter
add
aam
add
add
enter
add
aam
add
add
(bad)
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
fadd
add
add
enter
add
aam
add
add
(bad)
add
add
fadd
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
fadd
add
add
enter
add
enter
add
enter
add
aam
add
add
enter
add
enter
add
aam
add
add
enter
add
aam
add
add
enter
add
enter
add
enter
add
aam
add
add
(bad)
add
add
fadd
add
add
add
add
add
add
add
add
add
add
add
add
fadd
add
add
enter
add
aam
add
add
enter
add
enter
add
enter
add
enter
add
enter
add
aam
add
add
(bad)
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
fadd
add
add
enter
add
aam
add
add
(bad)
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
fadd
add
add
enter
add
aam
add
add
(bad)
add
add
fadd
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
fadd
add
add
enter
add
enter
add
aam
add
add
enter
add
enter
add
aam
add
add
enter
add
aam
add
add
(bad)
add
add
fadd
add
add
enter
add
enter
add
aam
add
add
(bad)
add
add
fadd
add
add
add
add
add
add
add
add
add
add
add
add
fadd
add
add
enter
add
aam
add
add
(bad)
add
add
fadd
add
add
enter
add
aam
add
add
(bad)
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
fadd
add
add
enter
add
enter
add
enter
add
enter
add
aam
add
add
enter
add
enter
add
enter
add
aam
add
add
(bad)
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
fadd
add
add
enter
add
enter
add
enter
add
aam
add
add
(bad)
add
add
add
add
add
add
add
add
add
add
add
add
add
add
fadd
add
add
enter
add
enter
add
enter
add
enter
add
enter
add
enter
add
aam
add
add
enter
add
aam
add
add
enter
add
aam
add
add
enter
add
enter
add
aam
add
add
enter
add
enter
add
aam
add
add
enter
add
aam
add
add
enter
add
aam
add
add
enter
add
enter
add
enter
add
aam
add
add
enter
add
aam
add
add
(bad)
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
fadd
add
add
enter
add
enter
add
aam
add
add
(bad)
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
fadd
add
add
enter
add
enter
add
enter
add
aam
add
add
(bad)
add
add
fadd
add
add
enter
add
aam
add
add
enter
add
aam
add
add
(bad)
add
add
add
add
add
add
add
add
add
add
add
fadd
add
add
enter
add
enter
add
aam
add
add
(bad)
add
add
fadd
add
add
enter
add
aam
add
add
enter
add
aam
add
add
enter
add
aam
add
add
enter
add
aam
add
add
(bad)
add
add
fadd
add
add
enter
add
aam
add
add
enter
add
enter
add
enter
add
aam
add
add
enter
add
aam
add
add
enter
add
enter
add
aam
add
add
enter
add
enter
add
enter
add
enter
add
enter
add
aam
add
add
enter
add
enter
add
aam
add
add
(bad)
add
add
add
add
add
add
add
add
add
add
add
add
add
add
fadd
add
add
enter
add
enter
add
aam
add
add
enter
add
aam
add
add
enter
add
aam
add
add
enter
add
aam
add
add
enter
add
aam
add
add
(bad)
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
fadd
add
add
enter
add
aam
add
add
enter
add
enter
add
enter
add
aam
add
add
(bad)
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
fadd
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
fadd
add
add
enter
add
aam
add
add
(bad)
add
add
fadd
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
fadd
add
add
enter
add
enter
add
enter
add
enter
add
enter
add
enter
add
enter
add
aam
add
add
(bad)
add
add
fadd
add
add
enter
add
aam
add
add
(bad)
add
add
fadd
add
add
enter
add
enter
add
aam
add
add
enter
add
aam
add
add
enter
add
enter
add
enter
add
enter
add
aam
add
add
(bad)
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
fadd
add
add
enter
add
enter
add
aam
add
add
enter
add
enter
add
enter
add
enter
add
enter
add
aam
add
add
(bad)
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
fadd
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
fadd
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
fadd
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
sub
or
jne
sub
sub
add
add
mov
inc
add
xchg
add
jp
cdq
add
mov
mov
add
add
cmp
add
rol
add
add
add
add
in
add
add
xchg
add
add
add
add
add
add
add
add
add
add
add
add
add
add
push
add
add
add
add
add
xor
add
add
add
add
add
add
stos
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
adc
fwait
add
add
add
add
add
add
add
cmp
das
add
ss
icebp
add
add
dec
add
push
add
pop
add
jge
pop
add
add
add
add
add
add
add
test
test
inc
push
mov
push
push
add
add
out
add
inc
add
test
add
add
dec
add
add
add
push
push
push
mov
in
push
adc
push
sbb
add
rol
push
pop
push
add
add
cmp
fld
add
push
leave
add
add
inc
push
loope
cmps
pop
push
push
dec
add
mov
pop
pop
push
dec
add
pop
arpl
dec
add
pop
outs
push
dec
add
pop
jnp
jmp
add
icebp
pop
add
push
or
add
add
push
jns
daa
or
or
dec
add
stos
push
icebp
add
add
add
mov
leave
add
add
push
dec
add
push
add
add
add
add
add
add
push
jns
mov
call
add
add
add
add
add
add
add
add
mov
or
or
or
or
or
or
add
sub
lea
pop
add
or
or
or
or
add
pop
jns
js
add
add
add
add
add
add
add
add
test
jmp
mov
jno
in
add
pop
pop
add
or
dec
add
fimul
dec
add
hlt
or
pop
or
or
add
add
add
add
test
test
test
test
test
test
test
test
test
test
jmp
test
add
or
add
add
add
cs
add
add
add
or
add
add
or
add
add
or
add
add
or
add
add
or
add
add
or
add
add
add
push
add
add
push
mov
add
mov
add
adc
adc
adc
loopne
mov
add
pop
mov
add
pop
mov
add
sbb
sbb
sbb
sbb
sbb
add
add
add
or
add
nop
add
add
add
add
fiadd
add
add
add
add
sbb
add
mov
add
sbb
add
adc
add
add
add
add
add
add
add
add
add
add
add
xor
add
or
add
xor
add
dec
add
add
add
add
add
add
arpl
cmc
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
scas
push
fild
test
pop
sysret
push
pop
add
or
xor
cmp
dec
or
push
xchg
or
or
or
or
jno
adc
add
sbb
add
add
add
add
add
add
add
add
add
add
add
aam
inc
or
add
add
add
add
or
add
add
add
add
add
add
add
enter
add
mov
add
add
hlt
add
add
add
add
add
add
or
add
popf
add
add
add
add
add
add
add
add
add
add
adc
add
add
add
pusha
add
int
dec
add
jmp
sub
add
out
and
add
or
add
ror
xor
push
dec
(bad)
xor
add
add
add
(bad)
cmp
sub
adc
cdq
add
adc
call
add
add
popf
add
add
add
add
add
add
add
add
movs
add
xor
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
pusha
cmp
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
and
and
add
add
add
add
add
add
add
add
add
add
add
add
and
add
add
add
add
add
add
add
add
add
or
add
add
add
adc
mov
add
add
pop
add
add
add
add
enter
add
outs
add
add
add
add
enter
add
jae
enter
add
xchg
add
add
add
add
add
add
add
add
add
add
add
add
jp
cwde
add
add
int3
add
rol
push
add
add
add
add
add
pop
add
add
add
or
xchg
add
add
add
add
add
add
(bad)
jns
add
add
ret
mov
test
les
js
add
add
ret
mov
test
les
jae
outs
jb
imul
gs
add
jae
gs
cs
imul
inc
outs
jb
jae
popa
jae
dec
outs
popa
add
jae
gs
cs
outs
jb
add
jb
gs
xor
add
xor
cmp
xor
sub
sub
sub
cmp
cmp
gs
gs
xor
popa
bound
sub
gs
jne
arpl
cs
jae
jne
arpl
add
xor
add
add
add
arpl
outs
jb
inc
jb
popa
jns
push
jne
je
ins
gs
imul
fs
add
ins
outs
jb
push
je
gs
ins
add
jae
gs
cs
dec
add
arpl
add
outs
je
xor
push
jns
add
je
jns
gs
jb
ins
dec
popa
outs
fs
add
outs
je
ins
gs
jns
gs
popa
outs
fs
add
je
ins
gs
outs
je
jns
add
gs
je
dec
outs
jae
popa
outs
arpl
inc
jne
data16
inc
ins
outs
arpl
outs
jo
add
arpl
imul
je
ins
cs
gs
add
je
push
push
inc
cmp
inc
gs
je
imul
imul
gs
add
add
add
data16
dec
cmp
push
dec
outs
push
inc
jns
ja
xor
push
ins
je
bound
dec
push
ins
dec
ins
fs
outs
fs
push
dec
xor
pop
inc
jb
bound
inc
add
push
inc
outs
inc
dec
inc
jb
dec
push
outs
arpl
xor
push
jne
je
ins
gs
gs
jo
jb
add
jae
gs
cs
jne
je
ins
gs
outs
ins
jo
ins
gs
gs
imul
imul
inc
jb
popa
jns
push
xor
push
jae
pop
push
dec
push
push
fs
push
je
gs
ins
add
popa
fs
jns
add
dec
pop
dec
dec
pop
push
ins
fs
ss
cmp
imul
dec
outs
addr16
add
jbe
inc
jo
push
jno
inc
imul
dec
dec
imul
cmp
dec
push
jbe
push
inc
ja
js
cmp
push
push
xor
xor
inc
inc
ss
xor
push
fs
imul
gs
add
fs
push
xor
xor
dec
push
cmp
bound
cmp
pop
push
pop
push
add
ins
jne
push
jns
add
add
add
arpl
adc
and
or
dec
popa
je
add
js
adc
add
imul
adc
or
add
jae
ins
bound
push
jns
je
ins
cs
gs
arpl
outs
add
ins
ins
gs
imul
imul
je
ins
cs
arpl
imul
je
addr16
jo
jns
push
imul
add
arpl
imul
jb
je
arpl
inc
je
jb
bound
add
jae
gs
cs
arpl
imul
je
add
adc
dec
inc
imul
ins
add
jo
jae
add
adc
dec
gs
outs
fs
popa
jae
add
adc
dec
inc
outs
outs
je
imul
jae
gs
cs
outs
ins
jo
outs
outs
je
outs
fs
add
adc
dec
inc
jne
je
ins
inc
je
jb
bound
gs
jb
jbe
fs
dec
inc
outs
outs
jbe
jb
imul
je
outs
fs
outs
outs
add
jb
outs
addr16
jne
ins
fs
inc
jo
outs
add
je
imul
jae
xor
dec
outs
popa
add
je
inc
outs
je
jns
outs
imul
add
add
imul
jae
push
data16
cmp
cmp
imul
jae
jae
je
dec
gs
push
popa
fs
add
je
jns
gs
jae
je
dec
push
add
adc
inc
jb
jo
outs
push
je
gs
ins
add
jb
jo
outs
push
jb
outs
jae
outs
jb
add
jns
je
push
je
gs
ins
dec
outs
fs
gs
je
inc
arpl
jo
outs
jb
adc
inc
outs
ins
jo
outs
outs
je
addr16
or
inc
jne
outs
push
arpl
gs
outs
fs
outs
je
imul
outs
je
imul
je
outs
ins
add
jb
popa
jns
jae
je
inc
jne
outs
push
arpl
gs
outs
fs
adc
inc
outs
jb
add
outs
je
outs
ins
add
je
push
gs
add
jbe
imul
gs
push
popa
fs
jae
inc
imul
arpl
or
inc
jns
add
jb
add
outs
arpl
add
jne
gs
bound
push
jns
je
ins
cs
imul
arpl
inc
outs
jne
gs
bound
xor
push
jns
je
ins
cs
outs
ins
ins
arpl
outs
jae
inc
outs
gs
arpl
push
push
inc
push
push
inc
je
jb
bound
add
adc
push
jae
jb
outs
outs
je
outs
ins
add
add
ins
jo
ins
gs
outs
gs
je
fs
je
jb
bound
add
add
add
arpl
je
outs
outs
add
adc
inc
imul
jb
pusha
xor
dec
outs
jbe
inc
imul
outs
arpl
jae
push
jns
je
ins
cs
imul
imul
inc
jne
jb
outs
je
jb
arpl
jae
push
outs
dec
outs
ja
jb
push
gs
ins
jbe
inc
jbe
outs
je
popa
outs
fs
gs
inc
imul
ins
add
ins
imul
add
outs
je
imul
addr16
dec
je
ins
add
je
add
je
gs
jo
popa
je
add
jb
popa
je
inc
ins
outs
jae
add
arpl
jns
inc
jb
popa
je
inc
imul
jns
inc
imul
jns
outs
outs
add
ins
add
outs
push
jb
je
add
je
dec
je
ins
add
ins
gs
outs
popa
fs
js
gs
imul
dec
ins
popa
addr16
outs
jb
popa
je
js
gs
imul
outs
ins
jbe
inc
jbe
outs
je
jb
jae
addr16
dec
popa
imul
add
outs
arpl
jae
outs
fs
add
je
dec
outs
fs
gs
popa
ins
add
jo
outs
ins
popa
imul
inc
jne
jb
outs
je
outs
ins
popa
imul
inc
jae
gs
bound
gs
ins
jbe
add
je
dec
popa
ins
add
outs
jbe
jb
add
popa
jae
ss
je
imul
pop
inc
push
dec
outs
fs
data16
bound
jb
outs
add
outs
imul
je
ins
cs
push
imul
gs
inc
gs
js
arpl
imul
ins
bound
inc
gs
popa
outs
imul
jae
jne
arpl
je
gs
ins
add
imul
popa
fs
imul
add
adc
push
gs
imul
jb
jae
imul
add
je
imul
je
jb
bound
gs
jae
addr16
je
jb
bound
add
je
imul
jb
gs
add
adc
or
add
je
popa
ins
add
jae
ins
bound
popa
ins
add
push
fs
gs
dec
popa
outs
popa
gs
push
inc
jb
jo
outs
push
gs
imul
imul
ins
popa
je
js
gs
imul
gs
imul
pop
pop
gs
jb
addr16
dec
outs
outs
je
add
je
inc
popa
jns
addr16
dec
outs
jne
add
je
dec
imul
gs
push
arpl
add
je
push
outs
jae
je
outs
outs
add
imul
gs
imul
push
outs
jae
je
outs
outs
add
outs
jae
outs
jb
inc
imul
arpl
inc
gs
jne
ins
imul
jb
popa
je
inc
outs
arpl
jo
outs
jb
inc
gs
popa
ins
ins
imul
ins
bound
addr16
dec
outs
ja
dec
imul
push
pop
dec
gs
popa
add
add
je
or
dec
outs
jbe
ins
imul
imul
jo
imul
jne
outs
je
jne
dec
push
popa
outs
addr16
js
gs
imul
jns
pop
adc
or
dec
outs
je
xor
sbb
unpcklps
adc
add
je
add
adc
adc
add
push
add
push
add
imul
or
add
push
add
push
add
push
add
push
add
push
add
add
push
add
push
add
push
add
push
add
add
add
push
add
push
add
popa
jb
or
add
outs
arpl
add
push
add
push
add
push
add
push
add
push
add
push
add
pop
inc
jno
popa
ins
imul
push
add
push
add
push
add
add
add
push
add
push
add
push
add
push
add
push
add
push
add
push
add
add
add
add
push
add
push
add
pop
dec
outs
gs
popa
ins
imul
push
add
push
add
push
add
push
add
push
add
push
add
add
add
ins
jo
ins
popa
je
outs
outs
push
gs
popa
js
je
outs
outs
jae
je
jb
bound
add
outs
je
ins
gs
outs
ins
jo
je
bound
imul
bound
add
jae
ins
bound
jb
fs
je
je
jb
bound
add
jae
ins
bound
gs
jb
jo
imul
imul
jae
gs
bound
outs
ins
jo
outs
jns
je
jb
bound
add
jae
ins
bound
imul
imul
jae
gs
bound
outs
jo
jb
addr16
jb
bound
add
jae
ins
bound
jb
fs
popa
jb
inc
je
jb
bound
add
imul
jne
add
jae
gs
cs
jne
je
ins
gs
outs
je
jb
jo
gs
imul
jae
ins
bound
imul
outs
outs
inc
je
jb
bound
add
ins
push
imul
je
jb
bound
add
add
adc
xor
ja
jo
add
js
add
sbb
jae
jo
outs
add
je
pop
add
jo
add
js
add
or
add
dec
add
push
add
cmp
push
add
add
xor
push
add
add
push
add
pop
add
add
pop
add
push
add
add
ins
add
jae
dec
add
inc
add
add
dec
add
popa
add
dec
add
add
ins
add
bound
xor
je
ins
add
push
xor
jne
add
js
jae
sub
pop
add
pop
add
cmp
xor
add
aaa
add
add
add
add
add
popa
add
add
add
add
add
add
sub
add
popa
add
add
xor
add
add
xor
add
add
jnp
xor
jge
jnp
xor
jge
pop
add
or
add
add
pop
push
add
bound
ins
add
arpl
dec
add
jns
push
add
imul
add
cmp
add
jb
jae
imul
cmp
add
jne
je
jb
popa
add
or
jne
ins
add
adc
jne
ins
add
add
add
add
add
jne
bound
ins
add
arpl
dec
add
jns
push
add
imul
add
cmp
add
add
add
jae
imul
cmp
add
add
jne
ins
add
add
add
add
outs
add
add
add
add
add
jb
and
push
add
add
popa
add
add
add
sbb
imul
add
ja
outs
add
add
add
add
jb
add
popa
add
add
add
push
add
add
add
add
add
add
add
add
add
mov
in
nop
adc
mov
dec
js
add
mov
pop
push
sbb
mov
push
sbb
sub
pop
add
or
add
add
pop
add
pop
add
add
add
or
or
or
or
or
push
and
add
add
sbb
sbb
pop
push
or
or
or
or
or
push
pop
or
push
add
sbb
adc
push
add
adc
add
adc
add
add
adc
add
and
and
push
sbb
add
push
push
push
adc
add
add
add
add
push
add
add
or
and
or
add
sbb
and
or
add
sbb
add
or
add
sbb
and
or
add
sbb
or
add
add
add
or
and
add
or
adc
sbb
or
add
or
pop
add
or
or
pop
push
or
or
or
or
add
sbb
adc
add
adc
or
add
sub
or
or
or
add
add
or
add
sbb
push
adc
add
adc
push
adc
push
sbb
adc
add
add
push
adc
and
add
add
or
pop
add
or
and
add
sub
adc
sub
or
or
or
or
or
or
and
adc
or
or
or
or
or
or
add
or
or
add
add
or
or
add
add
add
add
or
or
or
add
sbb
sbb
or
add
add
add
sbb
or
push
adc
push
and
or
adc
add
sbb
add
or
or
add
adc
or
adc
or
add
add
and
add
sub
add
or
add
add
or
add
or
pop
and
add
add
sbb
or
add
add
add
add
cmp
adc
or
or
or
add
adc
add
add
add
add
inc
add
add
pop
push
sbb
dec
adc
add
or
or
add
inc
add
add
or
adc
add
sbb
sbb
add
push
push
add
add
push
add
sbb
push
adc
or
pop
sbb
or
or
add
or
pop
or
or
sbb
or
add
adc
sbb
adc
or
pop
sbb
or
or
sbb
add
add
add
adc
pop
or
sbb
or
sbb
or
add
adc
add
or
add
adc
add
gs
add
add
adc
add
and
push
add
add
sbb
add
adc
cmp
popa
add
adc
sbb
adc
add
add
ins
add
push
pop
and
add
sbb
add
jno
sbb
add
adc
add
add
add
adc
and
sbb
add
or
pop
or
dec
adc
or
or
or
add
jns
or
adc
or
add
adc
pop
or
sbb
or
or
or
add
adc
add
push
or
add
adc
or
adc
add
add
adc
inc
add
adc
or
adc
or
and
add
add
or
pop
pop
or
or
or
add
push
add
or
or
or
sbb
or
or
add
add
add
or
adc
add
or
lea
add
add
adc
add
adc
add
add
sbb
add
add
push
and
add
or
adc
adc
pop
add
or
or
pop
push
adc
or
or
adc
or
add
add
pop
or
or
or
sbb
or
or
add
push
add
jne
or
adc
add
add
push
or
add
add
add
add
add
add
sbb
adc
sbb
add
inc
adc
add
add
jns
and
add
push
and
sbb
sbb
add
jne
add
add
jne
push
push
add
sbb
add
and
add
sbb
sbb
add
adc
push
add
push
add
push
add
add
add
add
sbb
sub
add
sbb
or
add
adc
push
adc
adc
push
adc
mov
push
add
add
push
or
or
shr
pop
adc
push
sbb
or
or
adc
cmp
leave
adc
cmp
or
and
sbb
and
add
add
and
adc
adc
add
add
push
add
push
push
sbb
push
add
adc
add
or
pop
and
add
add
add
add
adc
add
jmp
sbb
add
in
push
and
add
add
and
sbb
add
sbb
add
push
sbb
add
add
or
add
add
add
or
add
sbb
or
add
add
or
push
add
add
push
add
add
sbb
add
adc
add
adc
push
push
sbb
or
add
push
add
or
push
add
add
add
sbb
and
add
add
add
add
outs
add
add
add
pop
add
add
add
or
add
add
cmp
add
inc
adc
add
adc
add
pop
add
adc
pop
adc
mov
add
or
or
add
or
or
adc
add
sbb
add
or
add
sbb
add
and
xor
sbb
sbb
or
sbb
sbb
sbb
pushf
sbb
or
sbb
add
sbb
sbb
or
adc
add
or
add
or
add
sbb
and
adc
add
add
sbb
pop
add
sbb
or
pop
add
sbb
sbb
add
sbb
or
or
sbb
add
add
add
sbb
or
push
adc
adc
push
or
or
or
or
pop
or
or
or
or
or
or
add
or
or
add
or
pop
add
or
or
add
or
sub
or
sub
add
and
add
or
pop
pop
add
or
and
or
or
pop
add
pop
adc
or
or
or
or
or
or
or
or
or
and
or
or
push
add
or
or
or
add
adc
sbb
adc
add
adc
sub
add
add
adc
add
sub
or
add
add
or
or
add
add
sbb
push
adc
add
and
add
sbb
pop
push
sbb
or
adc
invd
or
or
or
or
or
or
or
pop
or
or
or
or
or
or
or
or
or
push
and
add
and
sysret
or
or
or
or
push
or
or
add
add
add
or
or
add
or
push
add
add
or
adc
cmp
push
adc
or
push
adc
adc
sbb
add
jns
add
sbb
sbb
sbb
add
popa
sbb
add
adc
add
or
add
push
push
push
push
add
or
sbb
sbb
add
push
push
add
or
sbb
add
sbb
add
add
inc
sbb
add
adc
push
push
push
add
or
sbb
sbb
add
sbb
inc
add
adc
sbb
sbb
adc
or
add
adc
add
sbb
add
sbb
pop
add
or
add
or
add
add
push
add
add
push
add
push
jb
jo
outs
outs
inc
js
gs
imul
ja
add
jo
jae
arpl
add
sbb
add
inc
push
outs
and
jb
outs
jb
je
outs
outs
add
adc
add
dec
gs
inc
jb
and
gs
jns
add
add
inc
jb
jo
outs
addr16
jo
imul
gs
outs
and
imul
add
or
inc
sub
xor
xor
add
add
add
add
and
bound
xor
xor
xor
sub
sub
sub
xor
arpl
add
sgdtd
or
xor
xor
xor
add
add
xor
adc
dec
mov
add
and
add
adc
add
pop
inc
outs
jb
js
dec
popa
imul
jb
gs
ins
add
add
add
and
