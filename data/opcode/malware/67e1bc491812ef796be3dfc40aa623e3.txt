pop
add
add
cmp
xor
inc
mov
sub
mov
xlat
out
sub
scas
cdq
in
test
mov
or
xchg
jp
lods
xchg
cmps
ret
xchg
mov
mov
fs
xchg
dec
sbb
ds
rcl
retf
sub
push
push
add
and
es
call
in
or
pop
int3
cmp
dec
shl
cmp
out
sub
pop
call
push
push
test
pop
mov
retf
cld
mov
adc
scas
fld
mov
jae
arpl
cld
mov
fidiv
sub
push
iret
or
cmc
jp
mov
mov
jp
div
jno
xchg
xor
js
and
mov
push
jmp
outs
fst
int
jmp
test
mov
push
jg
push
or
mov
pop
sbb
sbb
xlat
pop
nop
clc
mov
dec
and
sub
pushf
inc
imul
pop
clc
adc
sbb
rcl
(bad)
jnp
stc
out
or
push
lods
dec
stc
cld
jnp
pop
pusha
gs
sahf
jae
xchg
paddusb
test
and
mov
mov
inc
and
mov
je
xor
inc
mov
aad
xchg
out
jecxz
fdiv
movs
mov
pop
jl
call
inc
adc
ja
dec
jle
imul
daa
jbe
js
pop
push
or
pop
aam
dec
arpl
mov
aaa
xor
jne
fcmovu
adc
retf
cdq
sub
add
pop
loope
pop
int
(bad)
rep
cmp
test
(bad)
or
sub
fcmovu
cmps
mov
mov
in
jae
lods
cs
mov
in
xchg
std
inc
pop
repnz
add
in
test
sahf
push
fmul
jae
xchg
aad
lds
push
movs
test
cs
inc
jmp
js
fidivr
rcl
sahf
sub
lahf
mov
aad
leave
push
xor
movs
shr
cmp
mov
ret
js
cmp
xor
inc
mov
mov
aaa
aas
movs
cli
sub
cwde
mov
ja
jo
or
jecxz
cmp
mov
xchg
(bad)
nop
fadd
cmp
sub
nop
fiadd
and
nop
fiadd
mov
dec
scas
pop
jecxz
adc
xchg
push
ror
mov
add
leave
cmp
inc
dec
fld
icebp
jmp
sbb
popa
add
(bad)
or
inc
xor
scas
and
mov
mov
sub
fistp
in
or
add
loopne
xchg
jecxz
popa
or
cmp
data16
pop
stos
adc
not
xchg
pop
pop
jo
retf
sbb
push
enter
jmp
sub
fadd
or
in
iret
rcr
sbb
(bad)
lods
retf
jb
jg
pop
(bad)
out
and
je
aad
pop
and
mov
aad
dec
leave
jbe
xor
adc
mov
add
mov
cwde
xchg
lahf
adc
sbb
mov
cvtdq2ps
mov
outs
xor
fadd
sbb
clc
xchg
pop
sbb
in
xor
mov
das
fsub
or
mov
bound
mov
push
inc
popa
in
cdq
nop
pop
add
sti
pop
pushf
mov
shr
pusha
push
add
push
in
pusha
jmp
int
das
sub
mov
dec
xchg
retf
dec
arpl
xchg
out
in
mov
mov
xchg
stos
pop
pusha
and
add
dec
sub
mov
lea
sbb
pop
xchg
shr
in
fmul
jnp
fcmovnbe
ds
loop
jmp
push
push
outs
jp
fs
adc
test
stos
pushf
or
push
xor
ja
clc
movs
stos
fsubr
cmp
jmp
add
add
add
add
add
jp
and
mov
leave
xchg
outs
jbe
or
mov
ins
mov
cld
add
shr
in
xchg
jge
cmp
(bad)
cmps
jmp
mov
ss
mov
or
dec
sub
jns
sbb
dec
xchg
ins
(bad)
in
pop
pop
ffree
call
pop
loope
cmps
sub
loope
jo
out
xor
cmp
mov
jp
sbb
or
jb
test
inc
ss
(bad)
mov
cmps
imul
icebp
es
xor
jge
lsl
pop
retf
sar
jle
fcmovnbe
cmp
fdivrp
sub
popf
jnp
call
daa
adc
sbb
cmp
xchg
in
mov
xlat
inc
push
mov
xor
mov
pop
pop
push
dec
mov
lock
add
dec
adc
push
lock
and
stos
in
xchg
jae
aam
dec
rcr
call
sar
fisub
jg
sub
cld
inc
arpl
xchg
cmp
add
ins
and
xchg
xlat
pop
jne
test
mov
das
lds
(bad)
sub
movs
mov
loope
adc
mov
fstp
rep
scas
loopne
pop
aas
scas
cld
adc
mov
xchg
aas
jae
dec
and
shl
in
cdq
loop
mov
retf
sti
mov
sub
cld
xor
outs
sub
xchg
mov
leave
fs
cli
into
rol
stos
ins
push
or
xchg
mov
mov
pop
mov
mov
xchg
pop
dec
mov
dec
rcl
adc
sbb
inc
sub
fldcw
mov
and
retw
adc
or
xor
out
shl
xor
fild
nop
rol
dec
mov
and
vmovlhps
popf
mov
in
mov
int
mov
sbb
(bad)
lahf
loopne
dec
pop
mov
scas
jp
adc
jle
pushf
inc
add
out
enter
and
cmp
sub
mov
xchg
nop
lea
iret
push
hlt
adc
jg
imul
stos
popa
xchg
scas
cwde
xchg
jae
daa
cmp
sub
js
push
ret
retf
pop
and
cdq
jmp
ror
inc
sti
(bad)
jo
test
sbb
int3
enter
clc
or
and
out
mov
ja
jge
in
xchg
xrelease
je
int
repz
outs
xlat
out
add
dec
xchg
xlat
adc
lods
rcr
or
sub
xchg
in
mov
or
xchg
out
ins
and
add
mov
xor
add
stc
or
xlat
leave
sub
lods
and
call
jo
or
sbb
into
loope
xor
jle
out
adc
sbb
mov
daa
jg
(bad)
lds
mov
aas
jmp
jp
push
push
xor
xchg
sbb
mov
mov
and
push
push
fild
cld
rcr
sbb
mov
mov
cli
xor
and
(bad)
scas
mov
inc
sub
sahf
js
dec
cmc
push
repz
sbb
sbb
div
test
push
imul
or
sbb
adc
inc
xlat
in
retf
mov
xchg
mov
mov
pop
cmp
hlt
jns
sbb
mov
mov
xchg
jbe
xor
xor
aas
fstp
sti
inc
(bad)
or
fist
test
jno
les
movs
adc
push
fdivp
mov
leave
outs
(bad)
es
lds
call
aam
shr
out
xor
(bad)
scas
add
cld
dec
jl
push
aad
push
mov
or
aaa
inc
test
test
scas
loop
pop
inc
mov
popa
add
mov
fist
xchg
setae
pushf
int
cmp
jl
mov
lods
push
imul
add
jecxz
lea
fnstsw
test
and
ins
das
(bad)
je
cld
fisubr
fadd
rcl
mov
rcpps
(bad)
in
mov
scas
jge
mov
inc
push
sahf
arpl
sbb
or
test
icebp
stc
sub
jle
jge
sub
cmc
pop
adc
loop
or
cmc
cmovl
mov
fs
lds
popa
cmc
mov
sbb
inc
ffreep
ins
add
xchg
sub
dec
add
clc
inc
or
scas
jg
js
adc
sub
sbb
xor
lock
hlt
int
jbe
sbb
jae
mov
xor
push
lods
fiadd
rcl
loope
retf
jp
jg
aas
sub
ficomp
sub
aas
ja
and
adc
cmp
mov
adc
jmp
in
popa
push
cdq
dec
jmp
jbe
inc
imul
dec
add
xor
xchg
sar
mov
or
cs
rol
call
xchg
sti
in
dec
cmp
dec
jnp
adc
mov
daa
lods
pop
leave
cmp
lock
mov
loop
mov
jne
and
(bad)
pop
mov
push
cmps
popa
add
imul
push
pop
mov
sbb
xchg
test
ret
xchg
xor
das
xlat
fimul
cmps
jnp
xor
out
ret
xor
inc
mov
jmp
arpl
sbb
sbb
pushf
dec
add
or
retf
out
jo
push
repnz
stos
ins
movs
mov
push
outs
add
adc
xor
cs
push
add
(bad)
xchg
pop
pop
sbb
aaa
shl
add
outs
mov
dec
or
movs
add
test
int
movs
xchg
jge
mov
mov
es
fs
jno
mov
jecxz
pop
sub
(bad)
std
push
and
cmp
in
xor
frstor
pop
xlat
shr
sub
stc
add
mov
(bad)
in
add
out
mov
sub
pusha
push
cmp
rcl
pop
jae
mov
sbb
jae
aaa
dec
xchg
addr16
leave
mov
sub
in
xor
and
mov
jb
sbb
jmp
loop
lock
sar
enter
xchg
out
jge
push
shr
xor
mov
gs
dec
js
inc
nop
mov
or
hlt
mov
in
add
jae
inc
adc
aam
mov
rcl
aaa
add
and
leave
pop
rcr
push
dec
iret
mov
cmp
mov
lea
int
and
aad
iret
stos
mov
pop
and
adc
mov
lea
mov
mov
pushf
dec
shl
adc
bound
(bad)
sub
sub
hlt
pop
push
test
sub
dec
mov
push
addr16
fwait
xor
adc
push
mov
shr
mov
rcl
cs
enterw
mov
popf
data16
adc
test
cwde
jecxz
outs
loope
ret
adc
xchg
xchg
cmp
jb
fstp
cmp
add
push
jl
(bad)
cmps
fwait
loop
arpl
shl
les
mov
dec
ins
mul
xchg
jge
js
ror
out
push
pand
or
and
inc
stos
(bad)
popa
adc
adc
scas
push
shr
adc
jno
movs
mov
div
jmp
loope
lahf
shl
int3
imul
jmp
(bad)
aas
adc
xor
mov
adc
inc
jne
lds
iret
or
xchg
retf
cs
mov
sahf
xchg
rcr
inc
inc
loope
dec
jb
stc
sbb
(bad)
xchg
jnp
(bad)
mov
jo
xor
mov
test
push
push
jmp
push
fs
cwde
add
shl
ja
ret
pop
je
dec
loope
outs
inc
mov
mov
out
push
jp
es
retf
pop
sbb
scas
(bad)
cmp
es
jp
jge
lds
mov
loope
repz
lock
test
sbb
mov
push
in
sbb
dec
nop
dec
(bad)
sub
cwde
or
and
or
cmc
loope
dec
lds
pop
mov
or
outs
sbb
cmp
xchg
add
call
cvtps2pi
cli
sub
sub
jmp
sub
outs
imul
ds
setno
pop
cmp
cs
dec
dec
push
retf
retf
push
fsub
into
dec
aaa
mov
call
lds
inc
fnstenv
jnp
fstp
xor
stos
mov
and
icebp
mov
dec
test
icebp
ins
inc
stos
xchg
push
lods
popf
pop
sub
xor
fnstsw
jl
mov
xchg
mov
pop
cmp
fld
adc
mov
xor
test
pop
cmps
and
push
mov
push
aas
xchg
fsub
repz
cmps
outs
retf
(bad)
stos
(bad)
int
int
or
ds
call
mov
inc
lahf
jns
mov
mov
cmp
loopne
jne
pop
loopne
(bad)
xchg
jle
cmovnp
retf
lea
gs
xchg
and
(bad)
cmp
(bad)
adc
sub
dec
pop
jns
or
xchg
adc
fmul
cmp
push
xor
push
ds
pop
daa
sub
je
mov
int
enter
iret
mov
out
cmp
jecxz
iret
mov
mov
aam
and
xrelease
inc
dec
out
and
cli
xchg
xor
push
popa
or
mov
jp
stos
test
ret
ret
gs
cmps
addr16
pop
and
push
mov
mov
mov
das
ret
push
xchg
mov
jmp
mov
aad
(bad)
or
loop
icebp
dec
jp
push
mov
scas
jmp
das
stos
or
outs
dec
add
sub
(bad)
sahf
cmp
or
xor
(bad)
sbb
out
imul
movs
iret
div
clc
cmp
dec
add
cmps
pop
cwde
fwait
addr16
cwde
and
daa
bound
hlt
sbb
js
jbe
jmp
mov
imul
jbe
icebp
fcomp
or
cs
jo
mov
inc
sbb
out
and
movs
mov
stos
les
ins
and
pop
dec
ds
pop
sbb
sbb
repnz
xor
pop
add
sub
mov
pop
push
lock
xchg
repnz
movs
adc
inc
scas
mov
push
sar
sbb
inc
(bad)
jno
inc
sub
(bad)
in
jecxz
add
mov
pop
sbb
fisttp
push
cmc
pop
inc
adc
ss
add
sbb
loop
mov
or
sub
pop
int3
outs
cmp
call
in
inc
xor
adc
ret
sub
test
pop
repz
stos
push
pop
add
and
add
mov
int3
and
pushf
inc
sub
(bad)
hlt
cmc
jmp
fwait
xor
test
in
mov
(bad)
xchg
lea
mov
rol
push
repz
dec
adc
push
(bad)
xchg
call
cs
(bad)
cwde
pop
retf
shl
push
xor
int3
in
cs
ins
aas
pop
dec
xchg
adc
sbb
enter
xor
outs
lds
mov
jl
cmp
pop
inc
push
pusha
sbb
xlat
and
or
push
mov
hlt
cmp
test
push
cmp
sbb
pop
scas
aam
jno
mov
adc
test
out
addr16
nop
imul
sub
leave
or
mov
cdq
dec
add
or
mov
xor
aas
aaa
scas
(bad)
sub
jne
test
sahf
out
je
std
lahf
xchg
add
mov
fsubr
sar
xchg
icebp
push
mov
inc
int
and
jp
sub
and
jl
leave
dec
adc
stos
xchg
xchg
cwde
(bad)
adc
cli
cmp
pushf
outs
stos
sahf
hlt
stos
jnp
cmc
icebp
mov
(bad)
mov
inc
les
jae
stos
int
sub
mov
or
cmc
mov
pop
lods
into
nop
mov
imul
ins
cdq
sub
dec
cmp
pop
sbb
sbb
inc
loope
ins
movs
pop
xchg
pop
mov
push
sub
pusha
mov
cmps
jp
cmps
add
iret
mov
lods
les
das
sub
out
fild
push
sbb
loope
stos
mov
stos
enter
cs
repnz
je
push
inc
pop
fwait
dec
pop
xchg
test
(bad)
dec
in
std
mov
mov
aad
std
jmp
xor
data16
xchg
jnp
cmp
cmps
(bad)
shl
jge
and
pop
dec
and
jge
popf
idiv
stos
inc
xcrypt-ctr
cmps
cdq
mov
adc
js
xor
movs
punpckldq
cmc
lock
cdq
shr
out
rcr
ins
and
aad
add
xor
push
mov
push
sub
(bad)
retw
mov
aaa
fcomp
xor
push
mov
popa
repnz
mov
aam
loopne
es
fs
and
enter
ss
lods
and
adc
mov
dec
jbe
out
adc
movs
pop
inc
outs
(bad)
fcmove
jp
mov
stc
or
rol
pusha
mov
jmp
and
fs
jb
push
mov
add
scas
das
sub
dec
adc
jp
jmp
jmp
mov
sbb
and
dec
mov
inc
mov
shr
lahf
mov
sbb
sahf
jne
scas
and
mov
push
pop
xchg
push
rol
call
dec
pushf
add
mov
add
and
std
pop
mov
mov
adc
xor
or
jg
(bad)
jmp
sahf
stc
test
adc
into
std
and
pop
mov
adc
movs
or
push
test
ds
fucom
jno
clc
cmp
cmc
adc
mov
push
mov
mov
loop
inc
leave
shl
mul
das
add
outs
dec
cmp
pop
inc
out
fadd
retf
push
or
push
push
enter
xchg
pop
ins
mov
mov
mov
jnp
inc
lods
add
add
pop
mov
int
xor
mov
(bad)
mov
push
inc
xchg
jp
repnz
and
mov
pusha
jne
inc
retf
sar
fiadd
dec
mov
jge
or
mov
lods
xchg
or
xor
jmp
je
jne
xchg
rcr
jbe
retf
dec
ror
add
pop
fnstenv
ds
sahf
pop
mov
jg
xor
jns
sbb
mov
je
fcmovb
add
hlt
mov
adc
mov
pusha
data16
inc
dec
mov
xchg
cmps
and
xor
lods
call
dec
dec
cmps
or
mov
cmps
and
mov
test
aaa
out
int3
add
pop
jbe
mov
movs
fst
or
inc
(bad)
push
dec
daa
out
scas
out
dec
push
cs
lods
xor
mov
jne
cmp
add
loope
das
int3
fist
sysret
loop
and
pop
sub
and
or
rol
jne
jb
(bad)
xor
or
lods
icebp
call
mov
pushf
cmp
push
pop
mov
fucom
jns
call
inc
mov
jmp
dec
jle
(bad)
ror
movs
mov
iret
mov
stos
adc
mov
popa
and
and
inc
mov
mov
fisub
pop
rol
daa
cmp
aas
cmp
xchg
xor
sbb
adc
add
cld
dec
xor
add
push
in
mov
repnz
jp
xor
mov
test
xchg
mov
jo
loop
mov
sub
arpl
fild
fmul
ror
aad
or
pop
cs
jmp
cmp
push
jo
ret
sub
push
and
fldenv
lds
fcmovbe
push
or
mov
call
(bad)
mov
leave
or
or
and
and
out
icebp
dec
cwde
cmp
or
push
fdivr
inc
adc
cmps
add
cmc
adc
xchg
add
pop
xor
ins
aas
inc
push
out
loope
je
pop
or
mov
jmp
(bad)
pop
and
pop
das
or
loop
cmp
sbb
push
shr
(bad)
sub
je
aas
cmp
lea
mov
and
add
sub
mov
imul
fs
ja
jmp
fsub
or
das
loope
mov
rol
xor
leave
xchg
pop
aaa
and
sub
add
loope
adc
ja
cmp
fist
mov
sbb
cmp
push
shr
out
ret
enter
pop
push
jle
or
repz
sub
sbb
hlt
and
sahf
loopne
jne
loope
and
sub
jno
sub
inc
push
enter
inc
je
push
aad
jmp
idiv
jle
fimul
xchg
fstp
xor
neg
movs
fbld
add
mov
mov
mov
xchg
sbb
sub
cmp
out
inc
repnz
or
mov
outs
fwait
scas
loop
or
les
bound
cdq
or
arpl
push
push
inc
std
cmps
jae
mov
mov
jecxz
retf
aas
or
xchg
jo
fimul
xlat
push
and
pop
mov
jmp
(bad)
out
cmp
(bad)
loopne
retf
mov
js
xor
test
int
aaa
(bad)
xchg
sbb
sub
jnp
jns
add
dec
jmp
sbb
xchg
out
pop
jns
leave
jmp
xor
jb
cld
iret
cmp
push
hlt
mov
stc
or
fnstcw
xchg
add
jne
ret
sbb
dec
push
jo
into
les
xor
jae
push
mov
mov
mov
jge
enter
mov
sbb
mov
adc
cmp
jl
xchg
cmps
sbb
test
sbb
shl
inc
or
iret
(bad)
lock
scas
ret
inc
int
pushf
popa
mov
sub
cmp
dec
mov
out
(bad)
pop
aam
bound
(bad)
clc
int3
loopne
fist
adc
xor
cdq
jb
inc
ss
and
mov
jns
(bad)
mov
xor
(bad)
arpl
cmp
dec
jbe
xor
jp
add
imul
fstp
pusha
fxch
mov
push
sub
addr16
rcl
fwait
cmps
mov
hlt
jecxz
adc
jne
push
pop
(bad)
test
imul
fs
fs
jl
mov
or
push
es
inc
aaa
add
dec
sub
sbb
imul
sbb
push
jne
xor
jp
test
mov
jle
lods
lods
movs
mov
xchg
jmp
cwde
sub
pusha
and
in
or
mov
add
cdq
shl
cmp
es
xchg
xor
cmps
and
cmp
or
xchg
sub
xchg
lahf
or
ret
adc
shl
inc
xchg
jle
out
jo
sbb
hlt
mov
in
mov
push
xchg
retf
mov
or
sbb
add
pop
add
jo
pop
xor
sti
dec
dec
(bad)
jae
retf
mov
fucom
es
popfw
outs
push
mov
int
int3
and
mov
movs
leave
jecxz
jno
push
inc
mov
jecxz
mov
dec
xor
pop
sub
xchg
aam
sti
mov
xor
mov
mov
lock
scas
push
sub
jo
dec
xchg
imul
fist
xchg
cmp
scas
retf
pop
bound
mov
dec
das
jae
mov
jno
pop
mov
mov
xor
push
or
int3
jle
push
pop
cmp
fwait
sub
dec
idiv
stc
sub
cmps
div
push
sub
mov
cli
mov
dec
jmp
and
enter
fs
int3
in
pop
mov
jno
sbb
or
arpl
scas
adc
jg
and
mov
inc
(bad)
das
mov
sub
dec
jnp
js
hlt
shr
test
loopne
mov
into
aas
cmp
aaa
mov
mov
loopne
in
xchg
adc
js
lahf
jnp
adc
push
fwait
rcl
inc
(bad)
fwait
ror
mov
movs
adc
xchg
out
jne
dec
loop
pop
cs
add
dec
ins
js
mov
mov
dec
rcr
bound
mov
and
sar
mov
push
cmovo
(bad)
add
mov
xor
dec
imul
ror
xchg
cmp
add
jb
stos
dec
icebp
pop
sbb
push
add
pop
fistp
push
ins
imul
test
or
inc
test
jp
imul
mov
cmp
xor
mov
lods
fnstenv
pop
popa
cmps
aam
dec
ja
mov
inc
sub
jmp
sbb
push
mov
nop
imul
jmp
sbb
mov
or
jg
popf
cmp
inc
lds
add
in
shl
popf
or
xchg
inc
cmp
fs
adc
mov
sub
xchg
into
mov
rol
ins
mov
cmp
or
in
je
sti
into
adc
pop
sbb
sti
push
cmp
icebp
sub
cs
imul
stc
pop
push
test
mov
dec
mov
mov
dec
xor
lods
mov
dec
test
icebp
add
xor
xor
adc
sbb
leave
imul
(bad)
(bad)
aam
inc
gs
daa
mov
mov
inc
push
mov
mov
sbb
xchg
icebp
arpl
xchg
inc
pop
adc
test
retf
or
clc
push
stos
sti
mov
or
jne
xchg
call
mov
lods
mov
xlat
mov
mov
repz
xchg
xchg
mov
sub
add
sub
and
fisubr
mov
lds
gs
sub
pushf
dec
stos
mov
cli
cmps
out
mov
inc
push
sbb
dec
mov
test
xor
int
jno
cmp
(bad)
mov
jp
push
stc
pop
mov
bound
xlat
arpl
je
call
aaa
pop
loopne
(bad)
lock
repz
xlat
fwait
add
sub
lahf
mov
xor
shl
fcomp
and
adc
sub
imul
push
mov
pop
adc
int3
sbb
xchg
add
fmul
sub
fist
js
fcom
test
std
cmps
dec
cmp
xchg
jge
movs
call
push
dec
movs
not
clc
gs
jo
icebp
dec
mov
scas
push
or
jb
inc
leave
dec
xchg
in
rcr
and
stc
lods
adc
stc
push
in
mov
sub
or
popa
jecxz
mov
shr
mov
add
mov
jecxz
ror
stc
aam
repnz
out
in
in
stos
call
mov
test
pop
ret
and
push
div
ss
sahf
fld
ss
sbb
or
ret
inc
nop
pop
dec
push
es
pop
gs
arpl
fwait
inc
sti
in
loopne
fld
mov
cmp
dec
in
jg
in
fnstenv
push
mov
pop
test
dec
sub
jl
adc
rol
jo
dec
cwde
sbb
cdq
push
mov
aaa
jno
sub
sbb
movs
add
lea
add
lea
popa
inc
pop
sub
jne
pop
sti
shr
pushf
push
pop
jne
les
adc
mov
stc
xor
addr16
add
xor
fwait
popf
cmp
push
cmps
jmp
and
mov
jns
mov
mov
retf
dec
and
mov
or
sbb
shl
xor
imul
push
jmp
xlat
cmp
cs
mov
cmp
cdq
jo
pop
aad
mov
call
mov
mov
mov
into
mov
daa
int
push
out
adc
xor
jg
repnz
popf
mov
dec
inc
sbb
imul
lock
pop
mov
jmp
call
test
pop
xchg
loop
call
sar
pop
rcr
ret
jns
addr16
push
and
mov
pop
mov
cmp
xchg
scas
mov
outs
dec
push
push
fcomp
mov
out
or
mov
sub
sub
xlat
xor
mov
lods
movs
inc
in
in
sub
icebp
jp
mov
fsubr
test
mov
or
lahf
enter
stos
mov
add
(bad)
in
pushf
or
or
push
cdq
fisubr
mov
push
push
fyl2xp1
mov
retf
jne
test
xchg
stc
data16
mov
ficom
or
call
dec
push
add
imul
rcl
jnp
ret
adc
in
mov
daa
mov
(bad)
loop
(bad)
shl
dec
sub
dec
out
add
clc
mov
push
adc
retf
xor
aad
mov
jae
pop
push
sar
jmp
cmp
xchg
jns
sbb
mov
call
and
repnz
fisub
adc
ror
fdivr
pop
cmp
sbb
pop
inc
adc
fild
je
mov
(bad)
neg
lock
test
fucomi
cld
pop
iret
loopne
mov
fs
stos
cmps
clc
out
dec
ret
popf
lods
out
ret
or
mov
inc
bound
sti
and
cmp
mov
aad
xchg
mov
hlt
adc
push
pop
sub
enter
sbb
sbb
repz
lods
adc
mov
nop
adc
mov
pushf
push
dec
mov
mov
movs
pop
test
pop
or
icebp
mov
jne
pusha
sub
rcl
mov
lahf
jns
popf
inc
jmp
loope
adc
mov
adc
inc
xor
outs
add
aad
jge
psrlw
and
xor
push
sub
sub
push
and
dec
sub
arpl
rcr
add
pop
jb
xor
jbe
push
jl
jae
sbb
and
das
jle
mov
ror
les
or
xchg
mov
daa
sti
pop
lds
not
fcomp
pop
and
dec
ins
pop
into
mov
add
fmul
cmc
pop
sub
int3
ins
lods
pop
cmp
inc
pop
push
mov
mov
das
mov
shl
call
xlat
mov
dec
cmc
test
fisub
cmps
inc
jbe
xor
ficom
fwait
and
inc
inc
icebp
fistp
pop
fcom
fild
movs
les
adc
dec
sar
add
nop
push
cs
sub
mov
jecxz
mov
or
adc
faddp
scas
inc
imul
adc
xlat
add
xchg
inc
sub
mov
repz
add
sbb
test
fdivr
and
sbb
ja
rcr
push
test
ds
(bad)
push
addr16
inc
adc
out
fsubr
ins
aam
int3
or
in
mov
lods
in
xor
mov
sub
mov
nop
mov
(bad)
push
jns
xor
lds
mov
jmp
aas
inc
push
cwde
sbb
stos
mov
push
ret
icebp
popa
push
xchg
cmc
or
mov
push
pop
dec
dec
inc
jg
push
sbb
dec
out
push
mov
mov
mov
inc
sbb
aas
sbb
in
push
out
xchg
xchg
xchg
out
(bad)
jbe
push
cmp
jle
jle
rcr
jmp
and
jl
daa
push
xor
ret
push
test
lds
jg
jle
push
mov
sbb
shl
scas
xchg
sub
pop
je
and
mov
xchg
xor
dec
cdq
jae
add
mov
and
mov
das
jbe
and
add
add
sbb
mov
hlt
aam
cmp
or
cld
xchg
inc
mov
loope
das
mov
xor
mov
xchg
js
xor
gs
mov
aas
pop
scas
inc
mov
pop
push
call
cdq
arpl
cmc
rcl
out
pop
enter
cwde
sahf
add
xor
adc
push
hlt
not
(bad)
cdq
sti
cmp
cmp
sbb
mov
and
lea
cli
add
mov
push
push
scas
push
js
cmp
rcr
data16
push
fst
push
mov
jl
(bad)
fdiv
inc
xor
mov
repnz
ret
ds
outs
fmul
jecxz
icebp
mov
or
pop
in
and
stos
cwde
or
mov
jge
add
popa
push
cmps
test
sbb
mov
sub
mov
jge
cdq
jb
(bad)
lods
inc
mov
and
and
test
xchg
jmp
push
jmp
aad
xchg
mov
fidivr
cmp
cmp
call
aas
pusha
lds
(bad)
iret
and
adc
daa
ficomp
into
out
sbb
sar
hlt
jo
cmp
(bad)
jp
in
aad
sahf
sub
loopne
and
inc
cmp
add
mov
jb
stc
jmp
xor
pop
out
sbb
je
pusha
ret
push
bound
hlt
pop
sbb
nop
push
loopne
sbb
ss
cmp
neg
pushf
imul
hlt
in
push
dec
(bad)
jns
push
jle
ins
add
xor
rol
test
(bad)
xchg
inc
xor
cmps
in
loopne
inc
(bad)
outs
jo
xchg
mov
fisub
fstp
push
cmps
cmps
pop
mov
enter
idiv
sbb
call
inc
xchg
mov
pop
(bad)
jno
es
mov
scas
push
xchg
sub
sub
fadd
push
or
pop
mov
ret
dec
sar
sub
ins
je
pop
push
repz
adc
ins
dec
outs
push
mov
fprem1
add
or
call
scas
stos
xor
and
mov
mov
adc
add
cmps
push
push
or
jl
push
xor
mov
cmps
mov
push
add
scas
popf
icebp
jno
aas
add
push
(bad)
dec
jmp
xor
imul
sub
sbb
in
push
or
push
das
push
dec
sbb
bnd
fst
sbb
inc
inc
dec
loopne
cmp
nop
mov
lods
dec
test
test
and
je
ins
scas
hlt
xor
push
inc
pushf
xchg
lea
cli
sbb
dec
js
pop
jno
inc
mov
stos
pop
mov
pop
or
mov
push
sbb
cs
push
push
fdiv
mov
push
push
jnp
dec
call
(bad)
push
push
repz
nop
dec
jo
dec
xchg
arpl
cmp
cmps
rcr
sub
cmp
mov
inc
aad
loopne
mov
xlat
push
xlat
mov
and
(bad)
int3
ds
sbb
call
or
pop
stos
(bad)
test
mov
push
(bad)
jl
sbb
scas
fwait
sbb
movs
or
xchg
test
in
xor
sub
add
loop
pushw
mov
(bad)
cmp
int3
mov
psubusb
pop
or
jle
xchg
out
fisttp
dec
scas
push
rol
pop
xor
cs
push
retf
mov
add
cld
and
dec
pop
cmp
pop
xchg
sbb
mov
mov
mov
(bad)
fild
push
stos
jecxz
bound
push
and
cs
sti
retf
add
cdq
jae
mov
(bad)
test
lods
ins
add
int3
bnd
jmp
movs
idiv
jne
inc
cdq
adc
call
push
(bad)
adc
and
mov
(bad)
mov
leave
shr
(bad)
loopne
xchg
and
fisttp
(bad)
fst
mov
jbe
xor
gs
pop
cmps
or
push
mov
pop
push
pop
jle
(bad)
xor
fcmovb
jle
and
mov
mov
popa
idiv
push
jle
and
iret
test
jo
gs
stos
repnz
test
xor
leave
mov
xchg
cmp
repz
pop
or
jae
outs
mov
xchg
test
add
cli
and
mov
xlat
(bad)
neg
and
pop
test
iret
icebp
shl
mov
call
(bad)
sti
lock
sub
xor
lahf
out
call
and
movs
sbb
add
cmp
pop
pop
stos
loope
add
push
jl
fcmovu
inc
jbe
in
adc
lock
daa
pop
dec
jmp
mov
pop
shr
dec
in
xor
iret
loope
jmp
(bad)
mov
scas
imul
mov
sbb
adc
dec
fdiv
pop
fwait
cmc
aad
jmp
stos
xor
jp
inc
(bad)
arpl
popa
cmp
jmp
sbb
das
jmp
shr
test
jg
test
shl
aam
sti
fsubr
add
sub
clc
mov
sub
rcr
cmc
aad
pop
mov
mov
cdq
cwde
dec
and
xchg
in
xor
xor
jle
adc
fsubr
or
outs
xchg
fist
arpl
int3
scas
push
lds
add
hlt
ror
out
jmp
xor
aad
jns
xlat
push
leave
mov
jno
xchg
rcr
xchg
push
adc
inc
xor
or
popf
ins
jno
gs
mov
into
jg
shr
lock
mov
mov
imul
push
sbb
mov
nop
jle
dec
jge
inc
aad
movs
(bad)
and
mov
sahf
xchg
and
mov
jmp
outs
xor
jl
or
mov
sub
inc
mov
call
and
pop
call
jno
dec
cmp
retf
fs
inc
mov
jo
pop
xor
(bad)
dec
mov
rcr
mov
sti
sbb
xor
ins
lahf
lock
add
jbe
jno
out
aad
test
mov
inc
and
mov
test
jno
data16
xchg
cdq
mov
pusha
push
xor
popf
std
dec
into
push
js
int3
in
inc
outs
cmc
push
cli
or
test
or
arpl
fnstcw
js
in
shl
into
dec
ret
loopne
bound
sub
jae
fidiv
scas
mov
xchg
inc
and
imul
xchg
lea
or
inc
pop
sar
gs
scas
mov
add
fimul
retf
pop
adc
xchg
jns
fistp
mov
xor
jmp
imul
je
ror
pop
push
ja
aam
xor
repnz
jb
jmp
jno
push
sub
hlt
rcl
sbb
call
inc
sar
sbb
mov
pop
pop
jp
repz
sti
or
and
inc
je
adc
js
outs
movs
lods
std
inc
out
scas
jo
ror
or
push
ins
add
adc
inc
push
lds
mov
adc
shl
mov
dec
cwde
xor
mov
call
cmps
lds
xor
pop
add
push
retf
out
jne
and
push
cmp
push
jecxz
je
call
push
pop
xor
or
cdq
nop
inc
sub
add
bound
ficom
call
arpl
ja
lds
adc
and
int
enter
cmp
sar
jnp
xor
movs
push
into
cli
lds
dec
dec
leave
dec
daa
outs
repnz
fld
mov
push
std
xchg
retf
push
test
mov
iret
int3
jle
sbb
aam
fld
fcmovnu
and
sub
sbb
cmp
mov
mov
(bad)
movs
sbb
pop
sub
add
lods
sbb
adc
jmp
push
bnd
jg
mov
jmp
pop
cmp
mov
pop
call
mov
sbb
jmp
push
push
inc
cmp
or
jne
jmp
xchg
jbe
pop
sbb
ret
lea
fsubr
pop
lock
add
enter
dec
lahf
stc
mov
dec
inc
(bad)
mov
jle
xchg
js
das
jmp
sub
or
jbe
or
fcom
popa
or
jecxz
sub
imul
std
mov
mov
push
inc
ret
das
mov
adc
inc
fwait
mov
sbb
adc
popa
pop
inc
movs
push
mov
fstp
mov
(bad)
jl
lock
addr16
int
ins
shl
sbb
int
pop
pop
sbb
bound
add
sbb
push
ss
push
cmp
xor
inc
ror
dec
stos
adc
test
and
sbb
enter
scas
outs
add
cmp
jge
addr16
retf
div
fst
daa
cmp
or
pop
mov
mov
call
test
hlt
jb
add
inc
jno
jne
inc
adc
repnz
xchg
std
mov
mov
in
or
mov
mov
sub
retf
(bad)
js
in
mov
ficomp
jno
(bad)
data16
xor
cld
pop
add
fsubr
std
mov
in
lods
(bad)
fist
and
addr16
adc
pop
xlat
mov
or
inc
adc
shl
xor
pop
add
sbb
and
fisttp
xchg
mov
aad
loop
push
repz
imul
push
(bad)
jmp
pop
xchg
aad
int
int3
loope
xlat
std
mov
loop
mov
int
xor
jmp
shl
mov
or
add
cmp
jns
xchg
mov
jmp
and
dec
mov
or
ins
repnz
pop
mov
stc
xchg
call
xor
push
mov
fidiv
push
in
les
cmp
xchg
sti
xor
fsubr
imul
fadd
stos
push
pop
adc
xchg
dec
cmps
sahf
inc
jbe
outs
test
mov
sbb
jne
loopne
(bad)
je
fcom
sub
mov
not
daa
test
inc
pop
cmp
bndldx
lds
call
or
push
jge
test
shl
lods
lahf
jb
lock
xor
lea
pop
pop
out
or
or
hlt
jne
into
add
pop
(bad)
xlat
and
cmc
inc
shl
jbe
pusha
or
int
std
fdiv
js
imul
or
mov
mov
push
cmp
stos
push
dec
in
stos
fucomip
aad
sbb
movs
mov
jb
inc
sub
dec
cmp
and
pop
add
xchg
mov
and
push
lahf
scas
cmps
loope
neg
mov
ds
pushf
or
xchg
cmp
jno
sub
xor
out
loopne
xchg
repnz
push
ret
ja
jns
cmp
mov
xlat
dec
mov
cmp
dec
outs
inc
test
mov
ds
sti
jp
xor
mov
sub
cmps
push
bound
cwde
sbb
dec
sub
stos
sub
(bad)
icebp
lds
add
mov
aas
xlat
dec
dec
mov
imul
jmp
push
imul
xor
out
imul
push
leave
cld
mov
cmp
adc
test
mov
push
loope
imul
pop
jns
jmp
push
sub
mov
xchg
(bad)
xlat
mov
imul
(bad)
inc
popa
mov
rcl
cmp
push
cmc
adc
push
mov
shl
xor
in
mov
xlat
inc
clc
fisubr
leave
and
push
out
fimul
mov
or
jle
cmc
jge
lods
adc
out
cmc
test
sbb
dec
outs
xchg
mov
xchg
adc
dec
add
sub
sti
loop
ss
lock
cdq
cmp
cmp
out
sub
xor
pop
jb
mov
xchg
xchg
inc
push
xchg
arpl
lahf
ror
mov
dec
dec
out
fnsave
cmps
dec
adc
pop
test
or
pop
jecxz
push
mov
in
mov
shl
jne
mov
call
fwait
push
xor
dec
and
les
imul
lds
pop
(bad)
push
push
movs
jge
call
shl
ret
rol
push
sub
mov
push
add
call
arpl
dec
ret
ins
inc
sbb
and
ds
stos
xchg
mov
pop
push
pushf
mov
test
mov
adc
xchg
xor
push
ja
mov
std
loopne
test
call
fstp
pop
jmp
xor
push
mov
or
push
dec
daa
mov
aam
retf
mov
cli
mov
lahf
nop
fdivr
sahf
call
push
mov
imul
inc
fadd
mov
adc
test
mov
mov
xchg
xchg
shl
adc
out
jns
ja
dec
sahf
lahf
push
add
xor
popf
mov
inc
xchg
add
xlat
push
into
imul
pop
popa
idiv
mov
sar
inc
and
sub
adc
fcomp
call
pop
(bad)
jne
ds
adc
ja
xor
sbb
pop
fbld
push
jno
pop
test
jl
fmul
ss
xchg
shr
add
xor
mov
sti
mov
repz
fsubr
les
pop
and
lea
cs
mov
sbb
mov
mov
rcl
adc
rcl
xlat
cld
outs
imul
jbe
xchg
or
mov
lock
pop
or
jmp
adc
and
and
xchg
shr
ss
(bad)
dec
imul
lods
or
fidiv
clc
xchg
mov
rcl
push
lahf
sbb
clc
test
jle
sti
push
sbb
fld
jg
mov
cmp
mov
mov
mov
nop
mov
retf
mov
or
dec
js
repnz
sahf
pop
test
xchg
jle
(bad)
fcom
xor
lds
pop
mov
inc
sub
outs
dec
test
mov
ins
adc
or
inc
loope
cmp
xor
cmp
ret
ds
inc
jbe
sub
dec
loope
into
call
das
bound
movs
pop
inc
xchg
sbb
pop
push
sub
dec
xchg
nop
push
call
push
sbb
dec
xlat
icebp
shr
std
aam
cmp
xchg
push
or
sbb
fistp
mov
mov
adc
pop
(bad)
cmp
loopne
dec
mov
cmps
stc
out
add
dec
lods
cmp
xchg
jnp
into
repnz
lods
call
adc
push
shl
out
mov
ja
lock
aad
jbe
dec
iret
in
ret
jle
xchg
fisub
popa
lahf
enter
iret
inc
lods
mov
sahf
mov
jbe
(bad)
pop
loope
in
xor
sbb
sub
ds
lods
mov
cmp
fstp
call
cmps
sub
test
pop
mov
out
xchg
imul
jno
inc
mov
push
add
push
push
cs
cmp
xchg
cmp
xor
lds
mov
sahf
push
pop
jp
repz
loopne
cmp
add
(bad)
cmp
jb
mov
mov
and
fstp
xor
pop
das
sbb
je
fstp
mul
mov
(bad)
neg
dec
sbb
inc
test
or
in
dec
cld
dec
movs
xchg
xchg
stc
pop
cmp
mov
popa
hlt
sti
pop
add
addr16
add
add
fsub
dec
sub
in
int
test
and
imul
sbb
add
inc
ret
cmp
pop
fwait
dec
push
gs
out
adc
stos
push
jg
(bad)
push
jp
or
retf
ins
xchg
or
mov
loop
mov
jmp
xchg
outs
das
das
sbb
or
into
in
enter
stc
sbb
pop
rdtsc
sub
cmp
lods
(bad)
(bad)
jne
jo
jns
fs
and
and
jmp
or
pop
adc
jmp
cs
aad
pop
inc
push
fidiv
sub
and
pop
jge
imul
shl
or
mov
mov
push
mov
jb
jo
in
sbb
or
cdq
stos
es
shr
pop
cmp
pop
fisub
psubd
cmp
les
or
cmc
jp
xor
or
ret
das
ins
sbb
lods
push
cmps
inc
sbb
les
pop
inc
jno
cli
add
cwde
js
inc
xor
pop
sbb
dec
sub
fcomp
cmp
loop
dec
cli
bound
lds
sbb
jmp
push
outs
popa
(bad)
xor
mov
scas
dec
rcr
jp
xchg
add
and
sub
dec
(bad)
ins
dec
adc
jge
ret
in
ret
gs
lea
loop
lock
mov
sbb
add
cld
outs
add
adc
fxch
cmc
sbb
jnp
push
rcl
stos
iret
rol
(bad)
xchg
aam
xchg
sub
adc
mov
cdq
call
push
lahf
add
add
out
adc
lods
movs
pop
jbe
pop
lods
xor
sti
dec
mov
push
leave
xor
outs
cwde
inc
test
dec
fidivr
xchg
pop
ja
cmp
jne
ret
call
xor
stc
lahf
out
xor
stc
push
ins
jne
jmp
and
jmp
ret
jmp
dec
pop
outs
pop
outs
mov
mov
pop
inc
jmp
movs
shl
fadd
pop
xchg
sub
mov
mov
mov
push
test
xchg
dec
dec
data16
push
cs
lds
sbb
repnz
fcmovnbe
ret
pusha
dec
(bad)
cmp
dec
fnstenv
mov
ins
adc
into
(bad)
cmp
lods
lahf
dec
aas
jbe
repz
xchg
mov
cmp
jno
jge
xchg
stos
fdivr
jp
repz
xor
loopne
xor
sbb
das
call
popa
sti
or
mov
mov
push
and
jnp
push
xor
pushf
jnp
pop
ret
mov
stos
test
and
push
arpl
(bad)
ffreep
jns
mov
add
push
das
mov
mov
ret
xor
cmps
sub
pop
inc
clc
out
aas
mov
adc
cmp
fisttp
sbb
aaa
pushf
cmp
sub
adc
dec
jmp
ins
mov
cs
mov
mov
popa
dec
lods
dec
scas
or
xor
cmc
sbb
inc
jle
sub
dec
mov
and
jnp
in
sub
cmps
test
repz
je
stos
call
inc
xor
in
mov
mov
sub
cmp
xchg
pop
inc
cwde
pop
or
test
das
add
(bad)
cli
ret
icebp
and
clc
jae
test
sub
add
imul
inc
mov
imul
(bad)
enter
mov
push
mov
mov
mov
pop
mov
sub
out
jg
cdq
dec
cmps
leave
xor
pop
inc
xor
popa
mov
daa
adc
scas
call
ins
add
mov
xchg
add
(bad)
xchg
adc
inc
shl
xchg
scas
xchg
hlt
imul
das
mov
js
jl
bound
pop
lock
jbe
dec
jp
test
jmp
sbb
mov
xor
cmp
mov
dec
mov
(bad)
push
test
xchg
jae
(bad)
mov
xor
div
add
dec
fnstcw
adc
xor
call
mov
test
and
xor
pop
push
add
shr
sbb
out
adc
repnz
repz
iret
pop
fisttp
ins
inc
test
or
adc
call
mov
mov
pop
loopne
ins
xor
dec
ds
imul
inc
sbb
mov
push
cmp
inc
aam
iret
adc
push
das
xchg
mov
inc
(bad)
std
lds
repnz
xchg
adc
(bad)
(bad)
dec
inc
mov
inc
sbb
adc
and
pusha
(bad)
cmc
push
mov
and
pop
retf
daa
pop
sub
test
fwait
ja
jb
loop
in
lods
pop
outs
test
and
sbb
les
push
and
out
clc
nop
and
pusha
sar
in
sbb
or
xor
lds
jmp
inc
jmp
mov
fld
fadd
test
mov
outs
aaa
bound
cld
jge
mov
add
jne
(bad)
fimul
jnp
fdiv
sahf
stos
repnz
and
aaa
push
outs
pop
jbe
xchg
repz
fiadd
imul
out
popa
jb
push
jo
loope
add
scas
push
imul
lock
pop
cmp
outs
into
add
ja
xchg
inc
stc
inc
and
adc
jge
cmc
shl
sub
(bad)
sbb
push
call
test
mov
push
cli
xor
sti
leave
sub
ja
jns
mov
retf
push
sub
xor
fs
popa
(bad)
(bad)
aas
rcl
les
jbe
sub
add
cmp
xchg
daa
pushf
jne
pop
push
push
push
jb
dec
or
leave
mov
xor
imul
mov
stos
xlat
push
jno
std
push
add
sbb
stos
mov
fs
cmp
sbb
mov
jecxz
sbb
test
mov
pop
jo
(bad)
push
lea
scas
add
js
jmp
cli
mov
fwait
repz
inc
pop
add
xchg
mov
xchg
and
mov
stos
xor
enter
dec
ffree
shl
fild
sbb
push
push
lds
nop
lahf
mov
dec
ret
push
mov
push
jecxz
and
push
or
mov
enter
(bad)
push
hlt
js
pop
fdivr
ds
xchg
cmp
jl
imul
fmul
leave
inc
inc
int
(bad)
int3
and
and
loopne
or
cmps
out
and
mov
fdivr
inc
pop
push
jae
mov
or
popf
pop
out
jb
movs
test
repnz
call
retf
jl
sahf
sbb
and
jo
pop
mov
imul
xchg
xor
pop
add
xlat
sbb
dec
jno
cmp
add
ffree
and
adc
xchg
jmp
hlt
hlt
xor
fild
and
cs
int
stos
jg
jmp
pop
vprotw
sbb
mov
call
sub
mov
jae
or
jbe
sar
fisttp
cs
xchg
retf
and
cli
test
push
neg
dec
or
mov
jb
fsub
and
popa
jns
jp
fwait
sub
jae
xchg
fst
das
inc
lods
retf
test
rcl
stc
arpl
(bad)
jge
in
inc
jbe
shr
adc
dec
dec
pop
ins
scas
fwait
repnz
(bad)
rcr
mov
and
rcl
push
or
mov
imul
outs
test
jmp
push
jo
sbb
add
pusha
xchg
inc
scas
(bad)
add
je
mov
or
sub
test
nop
adc
jne
fs
add
ins
sub
or
cmp
mov
xor
lahf
pop
pushf
cmc
idiv
or
jb
fs
repnz
addr16
sar
push
outs
dec
add
inc
add
es
sub
and
cs
xchg
inc
fsub
hlt
xchg
sbb
sbb
inc
mov
push
push
adc
inc
mov
int
cdq
xchg
nop
jmp
jecxz
call
sub
xchg
jecxz
jo
inc
pop
push
pushf
out
retf
inc
or
es
(bad)
pop
xor
jle
or
push
aaa
push
cmps
sub
out
mov
fwait
push
mov
in
or
sbb
ror
jmp
shl
fsub
adc
std
adc
xor
sbb
jmp
sti
xchg
and
cmpxchg
iret
sub
cmc
cld
in
enter
outs
cld
mov
scas
es
add
inc
and
jecxz
push
add
jge
adc
popf
sub
adc
mov
xlat
cmp
sbb
xchg
inc
jb
sbb
cmp
xor
(bad)
shr
aas
mov
xchg
mov
imul
mov
xchg
scas
cld
int
out
cmps
out
jb
cmc
ror
cmc
inc
mov
out
sub
ror
pop
dec
mov
jg
adc
pop
add
jbe
or
fisub
ds
sub
push
push
push
call
ja
push
xchg
jl
cmp
call
jmp
sub
adc
push
inc
scas
leave
sub
xor
xor
in
sub
fcomp
shl
test
xchg
mov
in
repz
popa
jo
xchg
xor
and
sbb
dec
adc
div
arpl
ds
jl
inc
shl
movs
scas
sbb
xchg
sub
add
sub
sub
jg
inc
adc
adc
shl
mov
mov
jbe
out
and
ins
dec
dec
mov
je
mov
jb
jl
aam
push
lods
stos
out
jne
scas
or
xor
sub
repz
enter
add
jns
push
cmp
repnz
add
xor
pop
pop
out
ss
in
out
jns
in
jnp
cmps
daa
pusha
push
iret
out
test
movntq
cmp
test
add
imul
mov
ins
and
push
ja
or
dec
idiv
aad
cmp
push
cmp
retf
push
mov
mov
jp
pop
dec
inc
push
jae
and
mov
ret
cmp
mov
je
and
aaa
fstp
push
pop
out
sbb
cdq
mov
clc
in
inc
pop
mov
in
push
or
push
ret
inc
sahf
(bad)
mov
add
pop
sbb
sbb
mov
xchg
int
dec
sub
add
std
inc
out
or
add
xlat
retf
and
jg
jnp
jmp
daa
cmc
das
retf
dec
xchg
add
pxor
inc
adc
sub
hlt
pushf
xchg
push
inc
jmp
mov
mov
fwait
push
sbb
cmp
jg
pop
int
mov
iret
test
arpl
icebp
inc
xchg
pop
std
cmp
jmp
stos
xchg
pop
jmp
fdivr
cmp
lahf
and
pop
fiadd
loop
outs
mov
lods
pmaddwd
sub
pop
cmp
and
ret
mov
jmp
cmp
out
(bad)
fisub
jmp
gs
adc
xchg
jmp
rol
mov
adc
fcmovb
inc
out
xor
addr16
es
mov
xchg
xchg
xchg
fmul
jle
fsubr
push
sbb
dec
adc
push
pop
mov
movs
jae
das
aas
ror
stos
adc
and
xor
aad
imul
stos
cmp
jo
scas
or
mov
mov
pop
xchg
pop
mov
pop
cmp
call
adc
inc
mul
fsubr
mov
out
push
sub
fwait
jne
xchg
mov
mov
fsub
pop
call
push
push
sbb
inc
pop
aam
pop
or
xchg
out
out
ror
xchg
push
adc
xor
(bad)
in
adc
js
inc
sub
adc
xchg
in
mov
ins
jno
cmp
inc
inc
mov
or
retf
jae
sbb
stos
call
das
je
mov
cld
outs
call
les
xchg
popa
add
xchg
dec
pushf
and
shl
je
ror
mov
jns
cmps
pop
or
int
push
jmp
test
or
fdivr
jae
gs
mov
jns
imul
xor
push
push
and
dec
dec
into
dec
push
std
sub
xchg
lea
adc
jmp
cmp
pop
lds
test
mov
add
xor
push
xchg
pushf
loop
int
push
adc
test
(bad)
lds
lock
inc
loope
in
hlt
xor
adc
pop
test
nop
add
jp
clc
cwde
or
cli
mov
hlt
xchg
and
inc
xchg
sub
ret
fld
call
pop
ja
sar
adc
scas
push
fs
add
inc
mov
dec
pop
push
cwde
scas
sbb
inc
fmul
adc
push
and
cmp
mov
inc
iret
cmp
jb
pop
xor
push
dec
lock
sub
pop
mov
xchg
cmp
in
outs
sub
loopne
cmp
js
jne
dec
sbb
std
xchg
es
jae
hlt
iret
arpl
jno
and
jne
cld
sub
idiv
pop
inc
lock
and
push
out
adc
xchg
inc
mov
dec
imul
push
sub
mov
pop
mov
mov
and
mov
inc
push
mov
fnstsw
test
push
gs
jno
mov
pop
or
push
fwait
sub
jns
cld
and
loopne
push
cmp
push
jmp
mov
scas
mov
aad
cmp
sub
mov
jmp
test
sub
std
repnz
inc
or
fsubr
(bad)
cmp
ins
jg
in
into
icebp
and
lock
and
fwait
pop
movs
jnp
shl
fwait
hlt
inc
ret
add
ss
ror
sbb
je
nop
test
sub
pop
mov
pop
in
fsubr
dec
arpl
stos
loopne
push
(bad)
das
rcl
and
mov
lds
jo
sti
inc
mov
ins
add
out
in
in
xor
ins
je
pop
fwait
dec
jmp
jmp
bound
(bad)
pop
xchg
daa
mov
xchg
inc
shl
mov
xor
cs
ins
xchg
push
push
fstp
jnp
mov
div
cmps
pushf
fsub
cmp
push
movs
inc
xor
aas
lods
sbb
mov
jo
xchg
neg
xchg
sub
and
jne
fs
frstor
xchg
out
jmp
mov
retf
sub
mov
xchg
and
inc
pop
sub
cmp
ss
cmps
inc
jmp
jle
in
inc
adc
or
push
sbb
mov
mov
dec
cs
pop
cmps
pop
in
push
popf
jne
hlt
fldpi
mov
cmp
mov
out
jnp
xor
(bad)
adc
les
sub
sbb
iret
ds
sbb
pop
out
mov
push
jae
cmp
pop
out
jne
push
push
or
cmp
sub
cmp
imul
mov
inc
jle
xchg
add
stc
repnz
mov
pop
cmp
(bad)
in
rcl
call
loop
jmp
(bad)
dec
mov
jo
aas
sbb
js
sub
sbb
cdq
jge
xchg
mov
pusha
or
add
ss
cmp
jno
(bad)
int
pop
dec
ret
cmps
dec
nop
jb
out
movs
push
add
movs
int
rcl
les
mov
cmp
xor
div
loopne
xchg
cmps
cld
sbb
inc
sbb
mov
scas
mul
sub
fwait
sub
adc
mov
jb
aad
xchg
outs
mov
xchg
retf
inc
scas
pop
int3
sbb
dec
arpl
rol
jle
fwait
xchg
ins
sub
push
mov
stos
ins
sti
enter
jbe
or
push
mov
aaa
push
rcl
sub
addr16
clc
push
pop
adc
xor
xchg
sbb
fnstcw
or
loope
adc
das
mov
jl
mov
or
test
pop
dec
sub
test
xor
loop
mov
mov
shl
sub
jmp
ret
cmc
inc
inc
test
jb
ins
test
stos
xchg
adc
cmp
sahf
hlt
jmp
stc
les
push
xchg
pushf
add
sub
icebp
mov
das
jo
mov
dec
add
sti
xor
scas
xchg
test
mov
retf
xchg
and
call
cmp
push
fnstsw
xor
inc
call
mov
dec
retf
xchg
cs
jae
lods
adc
mov
push
push
rcl
inc
rcr
dec
jo
mov
shld
arpl
or
icebp
sub
push
cwde
xor
mov
adc
add
mov
adc
je
cmc
daa
pop
xchg
cmps
adc
cdq
sti
mov
jnp
and
nop
dec
test
retf
rcr
scas
das
or
fistp
mov
xor
fs
xchg
pop
xchg
mov
cmp
(bad)
mov
movs
adc
or
ins
sub
cmp
xor
ds
dec
pushf
sbb
syscall
shr
add
shl
push
(bad)
add
les
fst
inc
repz
fidivr
mov
xor
test
outs
mov
mov
and
inc
in
mov
sub
shl
adc
push
push
fcomp
ret
test
jns
add
call
aam
add
adc
push
mov
pushf
jg
dec
or
out
addr16
inc
int3
pop
mov
hlt
or
add
jecxz
cmps
mov
jb
jbe
fcom
bound
test
mov
fsubr
scas
pop
mov
daa
mov
mov
and
scas
out
fldcw
std
xchg
sub
stos
fadd
inc
and
jl
sub
call
xor
pop
or
js
cmp
mov
cdq
mov
outs
rcl
push
jecxz
add
repz
add
or
pop
jl
hlt
pop
sub
sub
dec
ret
jle
inc
out
or
mov
push
push
jmp
pop
fwait
push
add
inc
in
xchg
jge
leave
adc
test
(bad)
cmp
std
sub
dec
out
sub
or
fs
push
(bad)
mov
jo
cmp
ds
sbb
jle
xor
sbb
mov
add
(bad)
test
mov
mov
pusha
add
mov
jb
fcomip
xchg
push
das
dec
loope
lods
in
pop
call
mov
pop
adc
xor
jb
repnz
daa
sub
push
lahf
mov
inc
cmp
in
push
mov
xchg
dec
add
and
cmps
jb
mov
push
mov
addr16
sbb
and
xor
mov
jle
das
enter
mov
mov
shl
pop
sub
mov
jo
scas
sahf
(bad)
jp
adc
cmps
iret
mov
or
mov
retf
mov
rcl
jae
nop
nop
cld
loopne
and
mov
icebp
sti
icebp
jae
mov
sub
sub
push
aad
and
and
mov
repnz
xchg
mov
xchg
ficom
ret
fnstenv
sbb
add
je
icebp
add
aas
cmp
ret
xchg
inc
div
icebp
push
es
outs
jbe
fcomp
frndint
pop
icebp
outs
scas
(bad)
jb
sbb
add
xchg
mov
xchg
ret
xor
out
fs
pop
push
test
(bad)
mov
mov
repz
pop
cld
retf
enter
and
or
cmp
aas
mov
int
mov
retf
gs
adc
dec
jp
push
sti
(bad)
.byte
xchg
out
.byte
