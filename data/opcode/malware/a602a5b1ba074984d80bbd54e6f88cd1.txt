xor
add
add
and
cmp
mov
cmp
sbb
cmp
pusha
adc
mov
mov
xor
cmp
cmp
cmp
cmp
pop
and
cmp
cmp
je
cmp
cmp
cmp
cmp
adc
cmp
cmp
cmp
jo
cmp
cmp
movs
xor
cmp
cmp
dec
pop
add
test
test
repz
add
jmp
cmp
pop
add
jno
inc
in
and
sbb
enter
sub
xor
xor
xor
xor
dec
int3
xor
add
mov
add
adc
push
mov
pusha
lods
rcr
out
dec
mov
call
dec
lods
xor
rol
stos
add
xchg
movaps
loopne
and
add
ins
or
add
add
inc
dec
xor
cs
pop
inc
add
loopne
or
aam
jo
sbb
and
and
push
out
sbb
ins
je
add
pop
pushf
in
add
cmp
sbb
test
push
sub
outs
mov
sub
inc
pushf
jns
retf
arpl
sahf
out
(bad)
into
(bad)
fimul
out
test
div
loop
cmp
sti
sti
test
mov
pushf
icebp
cmp
(bad)
jae
cmp
xchg
out
pushf
repz
push
inc
iret
out
arpl
out
jmp
pop
sbb
in
lods
repz
jns
jne
imul
cmp
in
mov
into
mul
mov
cmp
cmp
test
popf
cmp
dec
xchg
xor
sahf
mov
arpl
cmp
pop
xlat
imul
jne
pushf
pop
jnp
lods
push
pop
adc
mov
mov
into
(bad)
dec
sbb
arpl
xchg
xchg
mov
add
stos
adc
push
push
mov
xor
mov
and
and
and
and
and
add
xchg
popf
cmp
neg
mov
jmp
outs
repnz
add
xchg
adc
(bad)
adc
push
xlat
in
fisub
cmps
cmp
jno
jns
mov
lods
jns
out
mov
add
ret
sub
gs
ins
mov
fistp
retf
dec
cmp
mov
cmp
ret
jnp
clc
int3
xlat
(bad)
cmp
cmps
arpl
imul
cmp
jae
retf
xchg
push
pushf
pushf
pop
addr16
movs
out
out
ret
loop
lods
and
mov
push
(bad)
mul
mov
hlt
dec
mov
xchg
shl
jnp
pop
mov
xlat
int
iret
jae
(bad)
arpl
jge
sahf
sub
enter
dec
mov
imul
jb
mov
aas
stc
sub
div
lods
jge
add
push
ins
add
out
lods
pop
jno
bound
pop
mov
jge
xchg
sub
pop
fs
or
pop
js
xchg
outs
dec
inc
pop
pusha
retf
not
je
out
add
add
in
pop
add
push
je
cmp
pop
js
ja
push
out
stc
out
push
jo
dec
inc
push
add
(bad)
push
push
cmp
iret
add
ror
pop
ficomp
ds
(bad)
rol
push
xor
cmp
adc
mov
pop
push
push
jp
sub
jl
and
dec
sbb
jns
pop
pop
add
mov
adc
pop
dec
test
xchg
cmp
fiadd
sub
dec
test
ins
adc
jecxz
lock
push
or
pusha
jno
jnp
add
clc
(bad)
jnp
xchg
mov
aad
mov
xchg
or
pop
mov
mov
pop
push
xchg
or
or
lock
xchg
sub
jg
sub
or
pmaxub
xor
gs
daa
xor
jnp
call
or
addr16
leave
adc
push
and
das
xor
adc
or
xchg
or
rcr
mov
inc
or
mov
add
test
das
inc
sahf
push
push
or
sub
xchg
mov
lock
pushf
rol
cs
push
mov
or
xchg
pop
adc
das
add
add
adc
and
dec
pop
pop
dec
lea
jg
push
sub
sub
int
sbb
add
fild
add
fmul
pop
push
jp
lahf
lahf
pop
or
push
jo
retf
rcl
pop
jp
cld
push
xchg
mov
adc
mov
js
push
fwait
or
inc
pop
sahf
cdq
pusha
inc
(bad)
or
cdq
loopne
add
pop
sbb
sbb
xor
repnz
cmp
pop
push
mov
gs
inc
(bad)
(bad)
pop
inc
jg
(bad)
pop
pop
iret
iret
pop
pop
add
cld
add
aas
in
pop
fdivr
add
mov
pandn
mov
rol
add
add
add
xor
pop
jnp
rol
inc
add
inc
enter
mov
push
imul
adc
add
mov
add
xor
add
add
add
xor
into
ins
inc
inc
pop
xchg
sub
dec
pop
push
out
pop
pop
or
and
add
xchg
cmp
cmp
xor
enter
adc
cmp
ret
pusha
adc
cli
adc
fisttp
inc
sbb
add
push
add
dec
stos
(bad)
test
sbb
inc
sub
mov
xchg
add
xor
jle
mov
or
(bad)
ja
enter
mov
inc
ins
outs
or
jecxz
add
add
and
int
fwait
add
push
jns
mov
test
outs
ins
fs
xor
mov
icebp
sub
loop
cmp
and
inc
sbb
sbb
ret
jb
push
sbb
loope
dec
jmp
jo
push
push
jle
lods
movs
sbb
mov
push
add
push
jno
cld
mov
mov
add
cmc
popa
pop
lock
jl
and
bound
xchg
mov
inc
mov
jbe
cmp
out
mov
adc
xchg
or
or
aaa
jmp
sbb
imul
inc
adc
mov
push
cmp
fs
jo
mov
adc
xchg
loope
push
add
data16
push
dec
imul
xchg
sub
mov
outs
in
pusha
push
in
sbb
xor
mov
mov
push
(bad)
push
push
ins
mov
push
push
adc
sar
jl
inc
dec
push
(bad)
add
dec
cmp
bound
dec
fisttp
shl
iret
fistp
push
add
enter
push
test
mov
mov
cdq
test
mov
sbb
sbb
js
xor
dec
or
out
mov
test
ins
mov
add
inc
cmp
jb
push
call
xchg
fmul
aam
cmp
les
clc
(bad)
xor
jg
test
lods
pop
int3
pop
gs
repz
xor
pop
push
pop
repz
xchg
adc
adc
jns
jge
dec
cmp
jge
push
mov
sbb
push
push
sbb
xchg
cmp
mov
adc
jae
loop
out
in
jge
shl
and
test
je
mov
or
outs
add
jae
push
or
scas
loope
add
cmps
dec
clc
dec
add
pushf
sbb
mov
push
loope
xlat
xor
ret
fadd
jo
ret
or
mov
sub
jecxz
iret
mov
jb
lea
xor
les
sbb
jecxz
inc
dec
adc
test
mov
add
mov
or
daa
sub
sub
ror
mov
adc
loope
push
pop
cwde
pop
sbb
xchg
rcr
push
scas
xor
jo
push
pop
pop
scas
push
out
cmp
cmp
push
js
iret
repz
lods
shl
or
cmp
fmul
and
cmp
repz
pusha
cwde
(bad)
iret
fsubr
push
mov
cmp
xchg
ins
arpl
inc
fdivrp
aaa
push
outs
js
mov
xchg
jno
mov
int3
adc
adc
(bad)
call
fwait
sub
sahf
pop
push
rcr
and
repz
(bad)
enter
stc
stc
icebp
icebp
lock
movs
pop
sub
cld
clc
clc
fsubr
cmp
ds
jl
movs
inc
clc
ins
pop
aas
aas
aas
mov
and
imul
(bad)
psubsb
jo
jecxz
mov
cld
push
mov
and
fist
jle
adc
pop
ds
fsubr
in
(bad)
(bad)
pop
pop
pop
push
add
push
push
jecxz
(bad)
iret
or
push
jo
sub
stc
icebp
icebp
in
mov
push
jl
cld
clc
mov
ds
lods
push
or
lahf
pop
pop
call
dec
ret
sbb
ror
add
mov
ds
cmp
ret
push
int3
sub
xor
inc
add
push
repnz
inc
mov
xor
jo
add
jb
xor
je
rol
xchg
adc
arpl
xchg
mov
pop
movs
aaa
pop
ins
dec
fldenv
imul
(bad)
mov
data16
cs
cmc
int
xchg
or
cmovbe
cmp
jge
dec
cld
xor
mov
xor
jo
xchg
add
or
and
add
fsubr
cld
sub
sub
lock
ds
and
dec
push
and
inc
mov
sbb
or
les
test
inc
jecxz
sbb
repnz
scas
inc
xlat
dec
iret
mov
xchg
inc
ins
mov
pop
shr
push
xchg
mov
fsubr
push
mov
jo
daa
and
aam
mov
fidiv
sar
mov
loopne
out
sbb
cwde
dec
or
adc
addr16
cmp
comiss
aaa
sti
cs
xchg
sbb
and
xchg
rcl
fcom
fisubr
push
adc
mov
add
xor
mov
rcl
ret
mov
inc
scas
repz
(bad)
pop
shr
movs
not
(bad)
mov
or
jecxz
sbb
mov
xor
xchg
pop
lock
fwait
or
das
je
cld
xor
xor
xor
ds
xchg
sub
add
sbb
jnp
add
ins
loopne
pop
test
sar
mov
inc
fisttp
call
mov
pop
sbb
push
ret
cmp
push
mov
mov
sbb
xchg
inc
sbb
add
and
addr16
dec
sub
aas
push
(bad)
jecxz
jo
pop
daa
(bad)
es
fst
lea
push
aas
cmp
pop
leave
and
pop
aas
aas
shl
retf
sahf
lahf
lahf
dec
test
ret
stos
cld
push
and
fist
ret
pushf
ret
fistp
aas
pop
inc
fisttp
push
xchg
xor
xor
xor
xor
and
popa
jno
inc
pop
add
sbb
scas
pop
das
aam
cmc
loope
xor
jmp
push
mov
xchg
cmp
call
out
call
adc
xchg
call
aam
mov
sub
sbb
loope
pop
push
mov
pop
sbb
xchg
test
cdq
xchg
adc
or
jecxz
cmp
mov
call
(bad)
push
fsub
jno
sahf
clc
sbb
jo
sbb
mov
xchg
js
nop
fwait
jo
iret
jecxz
enter
sub
je
lods
int3
repz
call
inc
fs
repz
test
repz
sahf
xor
(bad)
repz
shl
lahf
sbb
cmp
repz
push
jo
lods
les
sbb
repz
adc
cmp
repz
repz
clc
adc
iret
repz
js
mov
cmp
mov
nop
push
(bad)
repz
shr
or
sub
dec
push
cmp
(bad)
repz
adc
xor
pause
lods
(bad)
loopne
repz
(bad)
adc
xor
push
push
iret
pushf
mov
iret
repz
xor
iret
jecxz
cmp
add
cmp
repz
mov
iret
jecxz
test
test
push
iret
repz
adc
xor
dec
push
jo
iret
aam
adc
cmp
iret
push
iret
jecxz
cmp
add
sbb
cmp
repz
mov
ret
icebp
sbb
jo
iret
repz
in
or
iret
jecxz
pop
jo
lods
jecxz
cmp
shl
or
sub
dec
iret
repz
push
mov
scas
sbb
sbb
xchg
dec
js
rol
cmp
popa
push
mov
jp
dec
fdivr
inc
mov
add
dec
rcl
cmp
and
sahf
mov
test
in
ss
sub
jns
xchg
pop
mov
test
dec
push
add
xor
push
sbb
push
int
enter
dec
push
push
xchg
add
dec
add
cmp
sbb
mov
push
xchg
loope
adc
and
adc
nop
cld
iret
jecxz
sbb
xchg
sub
push
jo
jecxz
sbb
mov
mov
(bad)
icebp
mov
mov
jno
and
dec
mov
loopne
retf
jmp
shr
sbb
in
mov
jg
je
out
jge
xchg
loope
mov
mov
ror
push
add
cmp
js
test
ror
in
jnp
data16
iret
jecxz
test
pop
mov
xor
xchg
movs
mov
mov
mov
cmp
mov
mov
icebp
cmp
test
sub
fist
inc
push
jo
inc
cmp
mov
adc
enter
(bad)
mov
aas
pop
inc
out
enter
sbb
xchg
cmp
cmp
pop
cmp
vpshufd
cmp
repnz
rol
add
pop
sti
bound
sbb
outs
movs
into
stos
enter
xchg
mov
dec
cmps
pop
out
dec
xor
xor
cmp
sub
je
push
scas
jmp
jmp
add
jmp
mov
sbb
sbb
or
test
cmp
push
ins
pop
hlt
adc
xchg
add
mov
xchg
sti
movs
mov
(bad)
icebp
cmp
sbb
sbb
xchg
movs
nop
jo
adc
jecxz
sbb
xchg
push
cmp
inc
jl
cmp
sub
retf
movs
jo
adc
sar
push
pop
sub
xchg
jno
xchg
nop
xchg
lods
xchg
call
fsub
enter
xchg
sahf
out
sbb
xchg
push
inc
sbb
xchg
ins
xchg
int3
xchg
sub
loope
sbb
inc
xchg
fs
fsub
in
or
xchg
mov
cdq
dec
or
enter
js
sbb
(bad)
and
inc
add
cmp
lea
fcmove
int3
xchg
loope
into
movs
mov
test
jnp
sbb
call
mov
sbb
hlt
retf
js
hlt
lds
(bad)
mov
adc
inc
(bad)
pop
retf
mov
sub
cmp
xchg
jo
adc
nop
in
xchg
loope
add
in
mov
cmp
cld
pop
xor
jl
mov
xchg
loope
jecxz
push
inc
jmp
cmp
in
or
out
add
call
or
fdiv
sub
jb
dec
(bad)
sub
mov
mov
je
jae
xor
adc
mov
jnp
ss
jb
xchg
xchg
cmp
ret
fdivr
(bad)
shr
sbb
cmp
dec
out
cmp
inc
shl
add
fs
jmp
sub
pop
pop
mov
jb
inc
push
repnz
xlat
sbb
mov
xchg
pop
pop
sbb
ja
je
fdiv
and
rol
add
jno
or
imul
fdivr
and
pop
push
imul
pop
add
es
or
movs
mul
adc
jecxz
iret
ret
mov
jl
enter
imul
fcmovb
inc
push
ret
loope
repz
dec
add
push
lea
push
mov
mov
cmp
cmp
dec
sub
jae
(bad)
cmp
nop
ss
mov
mov
imul
push
mov
mov
cwde
cmp
sub
cmp
lds
inc
push
fs
repz
jo
mov
cmp
(bad)
rcr
push
iret
jecxz
cmp
push
fcomp
hlt
push
retf
popa
and
or
sahf
out
sbb
sub
cmp
push
mov
dec
imul
loope
push
js
loope
fidiv
mov
mov
in
cmp
jo
sbb
dec
inc
daa
push
cmp
daa
hlt
pop
adc
sub
out
sahf
ret
je
test
(bad)
jecxz
sahf
int3
in
or
and
repz
push
push
xchg
icebp
mov
adc
in
arpl
sbb
popa
jno
fsubr
add
aam
push
dec
dec
xor
xchg
loope
enter
cmp
pop
pop
iret
repz
jl
enter
jns
add
xor
sub
fsub
jo
sbb
pusha
adc
inc
popa
ins
popa
mov
shr
xor
(bad)
icebp
cmp
push
xor
out
sahf
pop
push
sahf
out
mov
fsubr
clc
or
repz
jecxz
xor
pusha
iret
repz
je
pushf
mov
sahf
(bad)
icebp
cmp
hlt
add
and
jns
out
inc
pop
push
rcr
push
push
(bad)
fsub
gs
and
cmp
sub
push
dec
jge
ret
data16
xchg
data16
nop
addr16
xor
addr16
adc
add
inc
push
push
sub
push
jb
js
jo
pop
pushf
jb
in
pushf
jbe
jae
arpl
test
sbb
ins
je
jne
pop
adc
xchg
loope
jbe
jne
jne
jno
jo
sbb
ja
ja
ja
ja
js
push
xchg
and
js
js
js
ja
cmp
js
push
mov
add
xor
out
sahf
out
xchg
mov
pop
xchg
data16
jns
sub
sbb
xchg
pop
cmp
pop
jp
jp
js
div
pushf
jp
sub
jno
iret
jecxz
nop
mov
scas
and
pop
add
push
pop
inc
stc
inc
xchg
or
mov
jmp
dec
sar
retf
test
repz
aad
jo
sbb
enter
(bad)
mov
jns
jl
or
(bad)
push
cmp
lock
ror
iret
jb
leave
sub
pop
lea
or
inc
test
cmp
mov
(bad)
cmp
in
sbb
and
xor
mov
les
jo
xor
mov
imul
in
popf
add
sub
xchg
loope
test
cmova
inc
inc
inc
jo
sbb
push
inc
imul
xchg
inc
cmps
inc
push
mov
loope
inc
iret
inc
jecxz
iret
jecxz
test
pop
repz
rep
adc
iret
shl
sti
aaa
inc
dec
inc
cli
ds
pop
jnp
adc
sub
icebp
cmp
push
push
inc
mov
inc
sbb
sbb
repnz
adc
sub
scas
add
jb
cmps
pushf
imul
sahf
bound
xchg
push
jne
mov
jb
xchg
movs
jno
mov
push
lods
mov
enter
std
in
dec
xor
cmps
sbb
out
pop
sub
es
xlat
scas
addr16
sub
je
popa
lods
and
sub
imul
leave
xor
dec
xor
sub
add
xchg
inc
mov
cmps
xor
js
fbld
pushf
jb
add
test
ss
or
mul
dec
inc
adc
sbb
xchg
inc
sti
xor
mov
or
pop
sahf
mov
and
dec
mov
inc
cmp
xor
sbb
lods
dec
icebp
mov
clc
push
gs
retf
jecxz
(bad)
fisttp
ins
push
xor
repz
add
gs
fbstp
fcom
dec
(bad)
xor
clc
lock
loopne
mov
aas
scas
repz
sbb
icebp
cmp
iret
hlt
and
add
cmp
cld
aaa
sbb
(bad)
jmp
xor
pop
fdivr
jle
repnz
sahf
pop
pop
sbb
cmp
loope
sti
sub
out
inc
add
repz
pop
jno
sbb
shl
push
sbb
inc
add
pop
loop
push
dec
push
sti
pop
push
daa
push
in
inc
retf
cmp
pop
push
(bad)
cld
sbb
fmul
iret
popa
fwait
loopne
js
xlat
sub
in
inc
xor
mov
mov
jg
popf
js
mov
push
(bad)
call
retf
call
mov
dec
lods
xchg
aad
inc
inc
imul
mov
or
in
add
jne
xor
(bad)
repnz
xor
out
ss
xchg
add
jb
popa
je
dec
je
ins
push
imul
je
sbb
iret
xor
and
push
rol
sti
outs
not
sub
imul
imul
pop
and
pop
xchg
arpl
mov
fsub
sub
(bad)
dec
or
cmp
add
push
aad
gs
jb
cmp
inc
ins
inc
fnstsw
sub
jmp
sub
repz
int3
xchg
shl
jmp
mov
leave
js
mov
iret
(bad)
cmova
push
imul
adc
inc
push
pop
pop
lods
jge
hlt
sub
aaa
dec
ficomp
dec
fs
sub
jo
in
cdq
jns
gs
fild
addr16
out
bnd
clc
out
add
es
sub
add
hlt
dec
mov
in
call
add
mov
push
and
das
mul
mov
push
sub
out
or
cmp
push
add
cmp
add
xor
inc
cmp
outs
addr16
ins
and
arpl
mov
jae
dec
imul
mov
add
jae
popa
ins
and
jne
imul
bound
outs
and
cs
dec
inc
push
repz
lahf
inc
sbb
push
or
push
(bad)
sub
xor
pop
jmp
cmp
mov
cmp
adc
or
push
outs
dec
dec
xchg
mov
mov
mov
cmp
shl
push
mov
data16
dec
inc
sbb
mov
xor
push
sti
dec
outs
addr16
inc
mov
ds
dec
dec
push
mov
adc
add
movs
outs
jne
mov
sub
stc
pop
pusha
movs
cmp
xor
dec
pop
dec
dec
mov
sub
mov
mov
adc
xor
inc
ins
popa
jae
ds
and
sbb
loope
js
dec
inc
pop
add
adc
jb
je
push
fs
jl
(bad)
cmp
test
in
arpl
jne
or
add
add
pop
adc
and
mov
iret
jae
inc
dec
repz
lds
pop
pop
daa
fiadd
pusha
add
enter
add
icebp
les
xchg
adc
mov
in
popf
jne
(bad)
and
xchg
add
cmp
repz
popf
aad
lods
push
add
sbb
xor
mov
xlat
add
pop
out
cld
pop
or
or
out
cmp
push
inc
repz
ret
in
shr
sar
outs
ins
jo
je
pop
les
pmaddwd
mov
push
in
xchg
test
push
(bad)
xor
shl
repz
cmp
ins
retf
sub
jae
call
mov
es
lahf
and
loope
ds
mov
push
(bad)
xor
cld
or
ror
inc
push
add
adc
repz
outs
outs
imul
mov
shl
outs
push
fdivr
jno
lahf
(bad)
int3
in
and
cmovae
aaa
push
outs
sbb
push
rcr
mov
push
add
je
dec
outs
jbe
inc
cmp
clc
clc
cmp
cmps
mov
in
or
jbe
jo
or
and
rcr
ins
dec
jo
push
lock
dec
gs
dec
ds
push
aam
mov
cld
inc
test
in
in
adc
xchg
rcl
gs
and
loope
push
aaa
hlt
cld
sub
push
retf
cmc
das
jp
test
fs
or
sti
jo
jge
push
les
les
arpl
sub
fist
mov
ins
push
and
mov
push
pop
ins
push
enter
xchg
rcl
adc
xchg
sar
xor
jns
xor
xchg
ins
cmc
fs
je
pop
push
out
sbb
iret
imul
push
mov
popa
outs
push
sub
pop
movs
cs
ret
gs
pop
ja
outs
add
jmp
xor
pop
loopne
arpl
popa
je
mov
sub
cmp
adc
push
pop
out
sub
out
push
aas
(bad)
icebp
push
sbb
sub
xchg
xchg
push
and
sbb
jmp
sub
push
push
mov
cmp
cmc
or
sbb
js
(bad)
cwde
cmp
mov
xor
in
enter
rol
outs
and
lea
jae
ins
sar
ja
stc
cmp
add
repnz
jecxz
push
gs
push
ret
addr16
dec
cwde
push
cwde
dec
in
xchg
pop
or
add
loopne
mov
cvttps2pi
push
add
cmp
nop
fist
and
add
and
sbb
add
rol
in
nop
mov
mov
fwait
jb
xchg
fsub
cmp
dec
rcl
repz
out
push
jp
mov
xor
unpcklps
sub
hlt
and
out
idiv
dec
xor
mov
(bad)
in
mov
loop
add
or
iret
loopne
vpmacsdql
cmps
and
movs
arpl
dec
test
clc
xor
outs
aam
hlt
xor
xor
aaa
or
pop
out
xchg
bound
pop
pusha
xor
sub
sbb
lea
shl
addr16
ins
je
imul
ins
retf
mov
xor
shl
movs
js
push
or
jg
sbb
jl
add
imul
sbb
push
inc
inc
ss
dec
inc
aad
sbb
pop
push
cmp
test
xchg
mov
iret
or
retf
xlat
gs
inc
cmc
xchg
dec
es
call
push
sti
mov
fldenv
dec
gs
out
inc
jecxz
outs
retf
dec
push
cli
xchg
rcl
mov
cmp
sub
popf
xchg
ja
cmp
mov
fisubr
setp
popf
xor
add
mov
repz
repz
repz
daa
xor
repz
xor
repz
cmp
lods
(bad)
xor
jns
xor
mov
pop
popa
push
je
jmp
popa
cdq
outs
adc
jb
aam
lea
sbb
rcl
inc
and
xor
aam
data16
gs
inc
imul
imul
cmp
mov
std
add
jp
bound
mov
ss
mov
das
call
adc
aaa
jns
dec
push
jne
enter
je
in
data16
and
out
je
xlat
stos
(bad)
fstp
push
mov
loope
sbb
imul
(bad)
mov
add
daa
xchg
in
or
popa
jns
into
lods
or
data16
popa
add
inc
jmp
(bad)
js
stos
pop
sub
gs
scas
mov
jle
and
ja
jbe
mov
ins
jmp
cmp
jae
daa
mov
mov
mov
jne
gs
adc
and
pop
jb
div
sti
inc
pop
cmps
int3
retf
arpl
callw
popf
xor
(bad)
leave
mov
(bad)
dec
add
into
cmps
gs
adc
fcom
aad
jo
jns
in
jno
push
cmp
call
fs
mov
outs
retf
push
cdq
push
dec
and
dec
test
mov
arpl
sub
sbb
mov
enter
add
(bad)
fstp
and
loop
mov
ret
xchg
leave
into
je
mov
(bad)
imul
in
mov
out
mov
shl
push
mov
pop
sar
sub
fsubr
sbb
gs
xchg
mov
sub
mov
sti
and
scas
aad
das
fidivr
les
sbb
xor
mov
jge
cmps
cmps
arpl
xchg
pop
mov
inc
sbb
xlat
std
int
int
imul
call
add
cmp
jae
inc
dec
mov
xchg
icebp
jne
outs
pushf
(bad)
mov
cld
jecxz
sub
push
ja
jb
push
push
lahf
inc
xchg
arpl
and
adc
jmp
inc
mov
jb
xchg
xor
or
(bad)
das
pop
push
fiadd
inc
dec
xchg
dec
pop
ins
stc
repnz
ss
fs
fnstenv
test
outs
(bad)
push
ret
mov
fcomip
sub
into
xor
pop
xor
sti
fistp
(bad)
(bad)
jo
in
add
and
pop
jle
add
xor
jne
xchg
aad
adc
push
mov
stc
ds
pusha
adc
je
icebp
cmp
outs
in
popa
cwde
xor
fcmovnbe
imul
daa
retf
lds
popa
xchg
out
cld
or
ja
jmp
dec
in
xchg
jcxz
test
push
popa
push
push
jmp
jns
inc
sti
mov
jo
call
movs
imul
iret
cmp
jle
aam
jae
imul
movs
push
addr16
and
dec
mul
lds
repnz
nop
bound
push
mov
imul
cli
mov
xchg
popf
out
adc
jbe
imul
fs
bound
popf
fwait
bound
push
movs
cli
ins
call
pop
leave
cmc
nop
sbb
dec
mov
pop
out
stos
ins
push
push
(bad)
fbld
bound
mov
jmp
nop
mov
fs
ins
adc
xchg
retf
dec
lahf
mov
or
int
daa
gs
sub
jae
pop
ds
fwait
sub
(bad)
and
add
lods
pop
cmp
aaa
add
jo
aam
mov
in
(bad)
jmp
and
push
rcl
or
in
(bad)
lss
jo
(bad)
iret
(bad)
fsub
xlat
mov
loope
push
mov
xchg
pop
sub
ins
adc
inc
ins
les
cmps
pop
add
dec
sbb
lods
and
ins
outs
bound
inc
jb
gs
cmp
ins
pop
mov
loope
jb
mov
jae
fldcw
ja
push
shr
inc
stos
mov
into
push
mov
adc
add
or
imul
pop
(bad)
jo
sub
dec
imul
(bad)
mov
fldl2e
call
psrlw
addr16
pop
xchg
pushf
setne
push
(bad)
mov
mov
arpl
push
popa
xchg
or
mov
lods
mov
icebp
mov
cmp
imul
xor
stos
cmp
inc
jbe
imul
sbb
pushf
dec
push
loopne
cmove
addr16
jne
jb
stc
lahf
xor
inc
out
call
pop
mov
imul
inc
pop
fsub
sub
(bad)
imul
inc
ins
arpl
sti
xor
test
in
sti
(bad)
or
test
hlt
popf
jg
sar
movs
or
cmc
fs
imul
ds
push
cmp
mov
cdq
call
or
jl
pop
and
dec
sbb
add
or
popa
xor
dec
movs
xchg
mov
and
rcr
mov
adc
push
add
inc
popa
jle
ret
or
das
or
mov
cmc
xor
ja
adc
(bad)
jb
push
int
xchg
lahf
or
leave
pop
call
in
and
dec
xor
fcmove
iret
ror
add
add
and
inc
sub
mov
ins
pop
dec
loop
adc
adc
fidiv
cmps
add
and
out
imul
(bad)
sub
sbb
fdiv
and
jo
outs
popa
jo
icebp
mov
je
ins
xor
ja
cmp
jbe
jae
xchg
lahf
test
popf
cmp
repz
cdq
clc
push
push
push
(bad)
aas
xor
push
xor
jg
inc
ins
jo
pop
shl
repz
je
loopne
xchg
push
jns
ins
dec
outs
data16
fdiv
inc
mov
jecxz
ds
pop
movs
push
or
dec
bound
stc
mov
fsub
pop
ja
push
(bad)
pusha
inc
gs
dec
outs
or
xchg
je
jecxz
shl
call
outs
test
jno
jne
icebp
pop
icebp
inc
addr16
and
adc
(bad)
(bad)
iret
je
js
jne
rol
add
push
push
jns
aam
lahf
leave
mov
mov
lods
jge
and
ds
outs
cld
loope
ds
cwde
sub
mov
xlat
mov
ja
pushf
cdq
movs
cdq
pop
ss
cli
repz
popa
(bad)
push
or
inc
jb
ja
icebp
mov
xchg
out
adc
enter
rcr
pmaddwd
fsubr
imul
mov
imul
mov
je
sub
loope
ds
jo
daa
cdq
jmp
lods
jecxz
int3
cdq
aam
ins
and
cmp
dec
xor
pop
push
mov
pop
stc
xchg
sbb
aas
fwait
div
loopne
movs
add
pop
inc
in
call
mov
mov
in
sbb
dec
jecxz
dec
xor
push
mov
mov
call
hlt
clc
push
xchg
or
xor
add
popa
pop
cmp
inc
push
sahf
xchg
adc
push
cs
dec
dec
add
mov
popa
mov
nop
ss
push
inc
call
pushf
jl
ret
jb
add
xor
les
call
cld
mov
lods
jo
dec
(bad)
fcmovnu
and
push
in
call
pop
pop
push
in
jecxz
inc
fs
js
xor
push
les
and
cs
jb
jnp
fcomp
jp
pop
mov
sahf
test
dec
cmc
adc
sar
pop
pushf
outs
fs
push
ss
jg
shr
sub
pop
push
xchg
shl
retf
push
aad
and
add
outs
inc
and
push
cmp
cs
push
mov
and
in
sub
in
pop
(bad)
jae
aam
dec
jbe
leave
jg
jnp
xor
daa
cmp
xor
jbe
aam
ret
int
push
pop
imul
inc
inc
mov
enter
dec
call
sub
mov
call
xchg
sub
dec
push
mov
cmps
or
sbb
jmp
inc
inc
enter
push
push
jp
mov
jge
dec
inc
xor
inc
dec
push
dec
stos
fs
and
pop
mov
cs
mov
movs
arpl
(bad)
scas
inc
mov
xor
out
dec
icebp
inc
mov
push
push
mov
inc
jne
int
inc
gs
bound
aam
and
mov
xchg
cmps
movs
jg
(bad)
out
inc
push
jge
mov
mov
sub
mov
dec
cmps
ja
xor
add
popa
mov
fstp
push
mov
frstor
mov
sbb
ret
fdivr
dec
ds
pushf
(bad)
and
mov
push
call
add
cs
and
cmp
jmp
mov
(bad)
aaa
and
adc
mov
mov
mov
cmp
cmp
mov
add
scas
arpl
sub
or
pop
cmp
pusha
mov
cli
xor
mov
push
pop
mov
data16
cmp
cmc
and
mov
lds
aas
pop
or
lahf
mov
mov
aad
pop
mov
aam
inc
ja
cmps
cmps
xchg
mov
xchg
scas
and
xor
dec
pop
es
cmps
dec
and
sahf
inc
jne
cmp
cdq
popf
xor
push
mov
mov
cmp
jge
call
sub
xor
inc
ins
aam
sub
xor
retf
pushf
nop
jle
stc
pusha
aad
cs
adc
addr16
in
pop
sub
cli
xor
cmp
ins
add
xor
fs
popa
dec
jmp
mov
ins
mov
test
in
cld
xor
adc
or
and
xor
dec
and
adc
rol
rol
jmp
dec
dec
push
lea
scas
(bad)
jns
fimul
jb
mov
and
bound
outs
push
xchg
jp
cmc
ja
ins
gs
(bad)
test
fiadd
sbb
outs
and
(bad)
in
retf
mov
add
in
pop
and
outs
pop
cmps
pop
fnstcw
mov
imul
and
inc
cmp
and
aaa
add
dec
movs
cmps
js
cmps
and
xchg
outs
push
dec
xchg
cmc
imul
cmp
call
test
and
aas
sbb
and
mov
jg
inc
xchg
gs
mov
adc
pop
mov
sbb
mov
mov
xchg
into
in
mov
dec
lods
rcl
xchg
push
jae
push
sbb
in
jae
lods
loop
ins
(bad)
in
repz
ja
jbe
enter
or
cwde
inc
addr16
cld
cs
test
ss
mov
and
retf
mov
pusha
ss
fs
dec
outs
outs
inc
jns
ror
inc
mov
pop
and
jb
mov
dec
(bad)
add
out
int3
mov
(bad)
push
ins
sbb
mov
int
pop
adc
mov
test
out
mov
mov
mov
neg
dec
xchg
inc
mov
push
cmp
sub
dec
call
push
add
pop
push
movs
jns
pop
xor
fstp
imul
jns
jb
jmp
pop
in
inc
lea
add
cmp
scas
cmp
adc
imul
inc
pop
jb
inc
mov
pop
push
int
cld
scas
(bad)
(bad)
mov
je
shl
fld
jbe
movs
mov
xchg
icebp
mov
jbe
enter
xchg
frstor
mov
xchg
jns
enter
push
jne
mov
lahf
leave
clc
and
inc
add
std
sub
mov
hlt
mov
mov
cmp
jne
dec
cs
aam
(bad)
retf
mov
icebp
xor
pop
inc
jg
sub
fs
cmc
aam
push
ret
sbb
mov
ss
pop
jp
or
ds
cli
fnstenv
jl
xor
mov
fld
xchg
dec
retf
mov
fs
add
cmps
int
scas
imul
jb
jne
cdq
push
dec
xchg
mov
pusha
push
out
pop
and
aaa
push
gs
push
xchg
jns
cli
and
add
jbe
sbb
add
sub
(bad)
cld
sbb
sbb
xchg
jmp
push
push
adc
imul
dec
cdq
cmc
dec
es
mov
push
scas
inc
call
mov
ret
retf
mov
cmps
shl
out
icebp
mov
sub
mov
test
mov
jns
mov
ins
xor
sub
push
push
inc
repz
sub
cld
cmp
idiv
in
(bad)
sbb
jecxz
xor
mov
pop
and
mov
(bad)
cmp
jmp
cmp
ficom
jmp
mov
cmp
jp
jmp
jne
leave
mov
mov
movs
ds
imul
jne
je
(bad)
dec
push
stc
out
jo
mov
push
retf
mov
dec
movs
sub
cmc
jae
pop
xor
xor
call
inc
jmp
jbe
leave
sti
jp
xchg
stos
mov
ins
mov
arpl
push
mov
mov
mov
jecxz
(bad)
cmp
push
push
repz
(bad)
loope
movs
retf
cmp
jo
cmp
jl
mov
mov
retf
jns
test
dec
enter
xor
jnp
jno
ss
jbe
(bad)
fidiv
cmp
inc
stos
leave
push
aam
sub
ds
mov
movs
push
push
inc
addr16
(bad)
cmp
out
sbb
cs
icebp
xchg
dec
cmp
movs
push
sahf
pop
mov
cli
xchg
jns
sbb
retf
fstp
loop
arpl
in
and
mov
cmp
es
mov
repnz
imul
shl
xor
inc
imul
jle
neg
sar
ins
dec
jp
loop
cli
es
popa
das
outs
sbb
aas
sbb
push
dec
scas
sbb
mov
sahf
inc
jle
push
ss
xchg
sub
js
pop
cvttps2pi
mov
lods
dec
dec
test
outs
and
jne
ret
add
sbb
push
mov
pop
fldcw
dec
push
xor
mov
cwde
jmp
mov
xor
out
outs
sbb
jne
fnstcw
lea
add
stc
mov
jmp
jl
(bad)
mov
imul
dec
jecxz
cs
outs
mov
outs
nop
fst
sub
std
push
(bad)
or
pop
lea
rcr
cwde
mov
and
adc
cmps
(bad)
je
dec
xchg
(bad)
mov
jo
loope
cld
jb
cli
dec
call
dec
mov
cwde
les
cmp
sti
cwde
mov
pop
xchg
sub
enter
stos
jne
push
jge
enter
push
cmp
inc
sub
inc
push
scas
adc
cdq
ja
jns
clc
jg
mov
dec
stos
test
imul
je
mov
and
int
repz
(bad)
jge
ret
cli
cmp
call
xchg
push
or
inc
sub
adc
sar
rdmsr
cli
pop
adc
xor
movs
jmp
push
(bad)
in
mov
fwait
outs
pop
out
sar
test
ficom
jmp
(bad)
out
fwait
enter
cmp
push
cmp
icebp
mov
sbb
retf
inc
jns
je
(bad)
push
mov
inc
sub
cmp
add
mov
into
adc
ror
leave
pusha
mov
outs
test
xchg
lods
popa
add
or
mov
out
xchg
data16
bound
cmp
pop
mov
sbb
mov
pop
push
ja
pop
push
mov
jmp
inc
out
call
retf
fs
dec
inc
push
inc
das
out
test
and
stos
into
adc
mov
aad
add
mov
fs
xor
and
sbb
mov
jge
ret
push
push
sub
jne
sub
xchg
sar
mov
mov
mov
and
retf
(bad)
mov
cmp
data16
inc
leave
out
movs
sbb
repz
mov
test
pop
sub
das
hlt
jns
mov
aad
dec
stc
jne
mov
xchg
pop
ss
sbb
sbb
pop
mov
dec
inc
sbb
in
out
rol
sbb
fisub
into
inc
(bad)
(bad)
pop
pcmpeqb
jmp
pop
pop
dec
sbb
cmovl
scas
cld
pop
imul
xchg
and
int3
cmps
test
sub
and
daa
dec
fnsave
jb
outs
test
push
out
push
jno
lods
adc
push
jae
jnp
jge
pop
shr
imul
scas
adc
xor
ins
inc
in
pop
inc
jle
pushf
repnz
pop
ret
in
xchg
cli
jnp
mov
jge
xor
arpl
lods
dec
repz
movs
push
bound
cmps
pushf
shl
mov
mov
cmc
sti
call
stos
daa
mov
mov
mov
jge
sbb
ud2
repz
jbe
jns
xchg
jns
hlt
jb
fsubr
(bad)
out
pop
add
and
cmc
ffree
dec
lds
cs
popa
cmps
sti
out
pusha
push
mov
fnstcw
pop
pop
jle
cmp
cmps
adc
jae
dec
adc
and
mov
sbb
mov
gs
adc
aad
inc
iret
imul
add
scas
bound
xlat
jp
fwait
sub
pushf
sub
add
out
in
pushf
cs
outs
jg
sahf
sub
dec
mov
mov
stc
mov
mov
ds
mov
mov
popf
push
inc
mov
mov
mov
jle
jbe
int
cmp
stos
pop
push
inc
out
lahf
in
or
pop
nop
jb
mov
mov
dec
cmps
dec
cld
cmp
fiadd
mov
sbb
pop
push
xlat
aam
movs
popa
adc
jp
add
push
xor
push
push
aas
aas
imul
out
aam
xlat
retf
imul
inc
loop
dec
imul
mov
cli
out
shl
in
cld
jecxz
adc
imul
adc
xlat
cmp
out
push
in
mov
cmps
sub
push
dec
push
pop
sub
movs
jns
scas
mov
xlat
xor
sub
adc
push
ds
push
cmp
push
inc
aam
stos
jnp
fwait
retf
stos
inc
push
sub
test
popf
ffreep
idiv
mov
mov
pop
jbe
sbb
mov
dec
pop
push
out
mov
std
add
in
push
cmc
mov
dec
mov
lea
pop
mul
jne
(bad)
jo
cmps
(bad)
push
xchg
mov
cmps
pop
ja
mov
and
dec
dec
addr16
dec
cli
imul
jmp
and
(bad)
(bad)
jmp
jmp
out
xor
push
pop
xchg
xor
popf
cmps
mov
loope
adc
adc
mov
test
mov
imul
popa
rcl
dec
jmp
dec
out
mov
mov
call
das
mov
fist
ja
frstor
cmps
div
idiv
inc
inc
call
iret
xchg
(bad)
dec
(bad)
push
adc
shl
inc
mov
and
mov
outs
push
or
(bad)
push
push
add
aas
fwait
sbb
out
popa
movs
push
ds
xchg
fucomi
pop
push
cmp
cmp
push
bnd
addr16
mov
adc
cmp
mov
pop
jmp
adc
xor
popf
dec
(bad)
mov
jne
dec
repz
scas
repz
xchg
mov
scas
adc
nop
aad
dec
xchg
scas
inc
pop
(bad)
dec
inc
pop
cwde
cld
xor
dec
dec
mov
mov
mov
pop
xor
fwait
add
xchg
and
dec
dec
imul
or
(bad)
(bad)
xor
inc
mov
jg
pop
mov
mov
lods
call
fnstenv
add
push
ins
rcl
pushf
push
mov
das
and
sub
(bad)
in
adc
jbe
sbb
pop
retf
outs
cmps
sbb
jb
ins
inc
(bad)
out
aas
jecxz
mov
push
gs
fist
ins
push
mov
scas
jge
xlat
test
repz
mov
dec
rcr
ja
jnp
std
ss
xchg
sbb
add
aaa
jne
push
in
jle
xor
fnstenv
sub
cdq
out
leave
cmp
sets
ins
add
(bad)
fwait
push
ins
push
ret
mov
push
push
mov
iret
xchg
inc
ror
rcl
movs
mov
mov
fild
icebp
out
pushw
pop
dec
mov
dec
jae
clc
mov
loop
lds
pop
inc
scas
mov
push
sbb
cmps
mov
mov
retf
pop
push
neg
mov
pushf
push
lahf
imul
xor
xchg
(bad)
js
dec
xor
rcl
test
fnsave
mov
dec
cld
mov
sub
adc
cld
inc
dec
mov
push
jmp
(bad)
mov
mov
mov
into
lods
popf
in
dec
inc
cmp
call
cmp
cmp
(bad)
jmp
sbb
jp
out
add
sbb
mov
in
popa
les
add
repnz
mov
maskmovq
inc
shr
cmps
jge
sub
add
jne
mov
xchg
stc
cmp
xor
out
out
fcom
xchg
sub
cmps
cmp
sbb
push
(bad)
idiv
push
pop
imul
movs
mov
adc
cmp
stos
jg
(bad)
jl
inc
push
pop
mov
pop
add
pop
fcomp
cmps
mov
in
cdq
scas
sub
jg
cmc
push
in
jne
cmps
push
fsubr
cdq
std
mov
mov
jecxz
push
cmp
stc
push
push
dec
pop
cmp
mov
cli
repz
dec
pop
cmps
imul
pop
repz
jo
cdq
jmp
outs
stc
fistp
cmc
push
cmp
pop
aad
jae
jle
retf
sti
mov
jbe
(bad)
xchg
das
adc
adc
mov
je
scas
pop
jp
xor
mov
cmp
mov
mov
inc
out
sub
pop
cmp
pop
adc
jo
loop
or
das
xchg
in
sub
mov
push
das
sub
movs
pop
and
push
movs
cmc
repnz
adc
push
ficom
iret
and
imul
sti
cmp
lea
sub
push
int
xchg
(bad)
jmp
jmp
cli
jl
cmp
ret
push
push
sub
xor
fs
ins
dec
rcl
dec
inc
xlat
inc
cli
sub
sub
das
dec
std
and
mov
fld
ins
mov
or
dec
dec
sub
fidivr
stos
cmps
shr
cmc
popa
retf
pop
add
call
cmps
and
cmps
ds
outs
shl
(bad)
fwait
cli
mov
and
(bad)
sbb
cs
push
sub
xor
fsubr
push
lods
outs
in
xor
cwde
mov
leave
add
int
jae
xor
out
dec
push
push
sar
inc
(bad)
cmp
aas
gs
xor
je
inc
into
imul
jecxz
dec
xor
pop
or
ins
dec
in
dec
inc
fidiv
fs
cdq
lahf
in
mov
xchg
sub
mov
fdiv
out
sbb
sub
jle
add
dec
and
mov
adc
(bad)
inc
scas
imul
call
adc
push
call
mov
jb
push
push
je
fisubr
adc
addr16
out
jnp
mov
(bad)
push
jmp
ds
sbb
fidiv
xor
add
and
push
sbb
arpl
ja
mov
repnz
mov
mov
push
xadd
call
int3
out
and
mov
push
int
xchg
or
mov
push
jmp
pop
inc
aad
pop
pop
inc
push
cmp
ret
sub
jge
add
mov
xchg
or
mov
xor
pop
dec
test
and
ins
and
mov
inc
add
inc
int
fs
or
in
mov
leave
lods
jecxz
dec
xor
popf
add
add
fwait
(bad)
mov
pop
inc
xchg
xlat
imul
ror
adc
sti
or
nop
mov
add
mov
sub
pop
sbb
hlt
sbb
outs
xor
sub
je
lock
ins
inc
add
inc
in
mov
call
repnz
loopne
clc
ret
mov
pop
xchg
popf
mov
out
add
and
imul
add
pusha
int3
mov
jmp
stc
push
repz
jmp
add
or
jecxz
mov
cmp
rep
sbb
xor
xchg
jmp
jmp
lock
shl
out
push
pop
outs
pop
mov
cld
out
mov
ud2
hlt
movs
imul
mov
add
aam
mov
or
adc
lea
cli
cmp
nop
jo
cmps
add
ds
mov
out
lock
sub
iret
jge
pop
cld
ja
jecxz
inc
pop
das
test
mov
jl
sbb
xchg
popa
in
add
adc
push
or
cmc
sub
mov
or
cmp
push
stc
inc
bound
into
mov
fiadd
and
xchg
or
and
cdq
loopne
adc
sub
ins
call
and
xchg
jle
add
mov
gs
add
pop
aaa
add
imul
sbb
sbb
fcomp
call
add
lea
inc
imul
sub
lahf
add
shr
add
dec
in
dec
aaa
pop
ins
mov
pop
jo
pushf
je
add
add
adc
je
std
cmp
push
sbb
and
mov
mov
pop
sbb
dec
add
cdq
inc
cs
fstp
or
push
dec
jns
xchg
sbb
push
bound
mov
je
dec
addr16
ss
dec
(bad)
sahf
addr16
dec
std
cmp
adc
or
jb
sbb
es
or
clc
leave
and
and
add
and
pop
neg
adc
cmp
dec
idiv
add
jns
icebp
adc
xlat
jns
jns
or
(bad)
out
adc
or
xchg
or
fwait
push
cdq
aaa
add
pop
(bad)
mov
mov
xchg
stc
sbb
ins
shl
cmc
pop
fnsave
repnz
jno
pop
or
cmp
jno
mov
cmc
ins
mov
xor
add
in
inc
retf
jae
hlt
adc
or
push
add
addr16
aas
mov
ret
stos
cmp
mov
push
dec
daa
mov
sub
aaa
(bad)
push
retf
jnp
fsubr
js
mov
call
sbb
add
pmullw
or
and
sbb
(bad)
fwait
dec
ins
ret
mov
pushf
xor
jnp
cmp
je
sbb
jb
lds
or
in
adc
scas
xchg
aad
or
push
loope
jns
add
popa
fnstcw
je
das
pop
sub
add
inc
loop
adc
dec
mov
or
or
push
push
add
or
sbb
test
movs
sbb
es
and
xchg
sub
or
popf
stc
add
add
jp
add
adc
push
clc
icebp
je
or
dec
mov
sub
or
cmp
cld
enter
mov
jge
pop
ins
xchg
dec
fidivr
push
push
mov
mov
rcr
dec
daa
mov
pop
push
adc
or
lock
scas
mov
jmp
mov
(bad)
sbb
cmp
jb
and
stos
pop
xchg
sbb
aaa
xor
mov
push
nop
(bad)
out
psrad
out
jbe
add
lods
in
popa
cli
in
repz
mov
mov
mov
lds
stos
pop
ins
adc
mov
cmp
lea
xchg
inc
add
inc
xor
jle
and
inc
shr
xchg
jl
fiadd
add
pop
and
xor
mov
pop
add
fmul
adc
push
sti
fs
add
retf
ja
cmp
or
xor
add
fisub
adc
lea
sar
fs
jns
popf
adc
push
imul
adc
je
pusha
mov
add
lods
stos
imul
add
fidiv
mov
(bad)
sbb
add
out
or
fwait
mov
push
push
pop
cmp
jns
mov
data16
je
in
xchg
fs
sub
jecxz
sbb
pop
cli
push
sti
xor
sub
pop
or
out
jae
icebp
add
cmp
loopne
fld
pop
xor
mov
gs
mov
add
xchg
add
imul
sbb
or
add
and
mov
fld
push
std
imul
sbb
push
xchg
fs
shl
sar
int
shl
push
inc
add
xor
int
enter
and
rcl
and
fst
(bad)
sub
sbb
cmp
addr16
push
sub
stos
mov
or
je
fidivr
xchg
jo
cmp
bound
or
ss
xchg
pop
addr16
pop
sti
inc
(bad)
ds
ins
sbb
jmp
mov
inc
pop
in
or
mov
or
push
enter
mov
ins
mov
inc
test
enter
push
clc
xor
data16
int
inc
mov
clc
push
xor
sub
shr
unpcklps
(bad)
mov
mov
jbe
or
inc
out
loope
and
or
gs
sbb
lods
cwde
ret
sbb
xor
rcl
jno
sub
sbb
adc
adc
dec
ins
dec
out
aas
adc
xor
in
add
fld
(bad)
jns
gs
adc
cmp
inc
push
dec
sub
push
inc
or
adc
shl
out
pop
(bad)
icebp
ss
pusha
fs
out
fs
pop
add
push
loop
std
(bad)
push
call
cdq
clc
pushf
or
popf
out
in
test
sbb
mov
nop
ja
pop
pop
xor
sbb
pop
push
xchg
fnstcw
push
lock
push
push
push
int3
push
sahf
xor
xchg
push
ja
jbe
jmp
frstor
lods
adc
stos
cs
sub
sub
jge
cmp
dec
jl
jnp
push
pop
mov
xor
add
arpl
fadd
movs
push
mov
push
fs
mov
in
cmps
sahf
cmps
push
cmps
cmp
or
rcr
and
and
bound
sbb
adc
mov
adc
aas
mov
arpl
sbb
shl
adc
push
retf
pushf
shl
sub
xor
jge
nop
aam
adc
mov
lea
or
jo
cmp
movs
mov
inc
(bad)
jae
or
imul
inc
add
push
sbb
add
hlt
outs
dec
jae
adc
push
fisttp
and
push
dec
adc
jecxz
sbb
pop
std
adc
jmp
pop
out
lahf
inc
dec
or
bound
mov
out
cmp
nop
xchg
fdivp
pop
in
dec
cmps
ins
mov
in
dec
fwait
mov
aaa
imul
dec
iret
push
jmp
loop
push
ins
idiv
fiadd
or
mov
hlt
add
pop
and
js
aas
std
cmp
out
sub
mov
ins
and
fiadd
mov
mov
mov
aad
ins
rol
mov
sbb
mov
leave
fld
push
add
add
add
inc
jmp
cwde
das
sub
adc
or
inc
inc
cmp
imul
dec
sbb
call
pusha
pushf
out
shr
add
adc
repnz
push
jns
xor
xor
out
inc
clc
xchg
repnz
push
into
movs
lds
enterw
pushf
push
xchg
loopne
dec
lock
je
push
ret
push
jmp
daa
lock
std
(bad)
adc
in
pop
lahf
lods
test
adc
jnp
je
jne
inc
dec
mov
sbb
add
les
add
in
fnstenv
ja
(bad)
adc
sub
daa
pop
push
or
enter
dec
pop
int3
xor
sbb
(bad)
mov
inc
(bad)
or
sar
push
mov
popa
sbb
xlat
add
pop
imul
push
(bad)
int3
dec
xchg
scas
dec
loopne
shl
fist
pop
pop
xor
cmp
cmp
push
js
test
into
lea
push
push
cmp
cmp
in
das
sbb
neg
mov
pop
cld
inc
add
neg
movs
sub
mov
mov
pop
cmp
out
mov
test
cmp
test
dec
jbe
push
cmc
mov
test
jns
xor
cdq
push
retf
imul
sbb
outs
cmp
les
or
stos
scas
add
das
je
jns
mov
xor
inc
or
sbb
(bad)
jo
(bad)
sub
sar
test
pop
xor
add
xchg
das
or
sbb
pop
cwde
adc
fwait
xor
xor
xchg
jno
cmp
jl
ds
cmp
cmp
mov
add
push
push
je
inc
mov
ds
je
cmp
es
xchg
sub
sbb
and
scas
sbb
push
mov
sbb
cmp
mov
cwde
cmp
inc
jae
imul
scas
(bad)
mov
push
add
test
or
arpl
mov
shl
and
sbb
pop
xor
das
sbb
jecxz
add
leave
xor
sahf
sub
sbb
or
push
test
sub
dec
retf
cs
inc
sti
xchg
in
out
pop
adc
inc
jle
push
sbb
adc
mov
push
jo
lea
xor
cli
xlat
mov
into
adc
popa
jns
inc
push
hlt
test
jmp
lds
xchg
or
std
push
cwde
js
and
dec
sbb
sub
sbb
and
repz
hlt
adc
stos
outs
mov
and
inc
adc
add
call
sub
leave
push
and
fdivr
ss
adc
pop
mov
test
push
aaa
hlt
cmp
or
dec
pop
xor
aam
sub
ficom
mov
sti
push
fdiv
and
movs
jp
ins
sbb
in
and
jmp
push
dec
call
push
aad
push
inc
mov
jo
aaa
hlt
xor
mov
inc
sbb
aam
inc
xchg
les
pusha
and
int3
xlat
aaa
pop
repnz
pusha
ror
sub
add
nop
xor
mov
not
lods
je
push
push
jbe
xchg
retf
test
inc
inc
dec
call
xor
dec
jo
into
dec
and
gs
iret
and
test
(bad)
dec
inc
bound
inc
cmp
add
mov
or
cmp
sub
jo
sar
push
les
sbb
cmp
inc
mov
sti
xchg
mov
push
sub
jno
cmp
lods
cmps
push
fwait
xor
retf
inc
aaa
jmp
inc
pop
adc
inc
dec
jp
push
sbb
jae
lods
and
mov
add
dec
sub
stos
cmc
jge
adc
iret
outs
shr
inc
push
(bad)
jle
adc
es
shr
mov
push
fadd
outs
dec
mov
repz
mov
mov
out
inc
and
loop
jg
fs
fnstenv
jo
add
cmps
mov
cmp
xor
push
adc
pop
cmp
mov
imul
les
pusha
jbe
ret
cld
add
sbb
sbb
xor
movs
and
out
sub
mov
push
jl
add
push
lods
jmp
adc
add
adc
sub
cdq
mov
push
cli
mov
pop
mov
aas
push
adc
pop
add
xchg
ins
(bad)
cmc
stos
repnz
imul
sahf
xchg
popa
loopne
scas
cs
push
adc
xor
std
inc
mov
jl
mov
xchg
mov
xor
loop
retf
sub
and
xchg
or
(bad)
scas
call
cmp
inc
imul
outs
adc
jecxz
stos
dec
xor
clc
bound
xchg
in
mov
push
daa
fldcw
adc
push
mov
fs
cmp
ret
push
daa
or
and
fwait
shl
pushf
(bad)
xor
sub
mov
popa
lods
add
add
inc
sub
xor
adc
out
mov
ret
and
(bad)
push
not
cmp
push
test
pushf
cmp
push
pop
cmp
into
add
or
bound
lds
add
sub
dec
cmp
jae
jmp
xor
mov
push
je
ins
pusha
cmp
dec
xchg
das
mov
sbb
call
adc
mov
adc
(bad)
je
xor
pushf
in
loop
lock
(bad)
imul
push
(bad)
push
daa
push
and
sbb
push
popa
jbe
mov
out
mov
pop
cmp
hlt
add
stos
aas
nop
les
shr
mov
imul
or
in
test
sub
mov
js
push
pop
jle
mov
mov
js
dec
ds
sar
pusha
sti
mov
out
loopne
and
dec
or
push
adc
add
and
mov
cdq
cmp
fisub
mov
or
adc
pop
xor
ds
dec
inc
jbe
cmp
sub
sub
es
jnp
or
fist
push
and
cmp
or
xchg
xor
pusha
jmp
push
push
jle
add
adc
add
push
xchg
rcl
adc
repnz
ficom
ins
inc
ret
sub
add
ss
or
cmp
mov
and
pop
fisttp
cmp
clc
ds
sbb
xor
out
or
(bad)
jns
iret
add
cmp
enter
out
fcomp
enter
dec
(bad)
pop
mov
mov
cli
xor
sbb
into
hlt
data16
aas
(bad)
xor
push
hlt
fadd
fdiv
jb
add
inc
jp
call
pop
cmp
push
mov
xchg
enter
jns
test
cmp
inc
leave
(bad)
aad
push
sbb
mov
jecxz
cmp
(bad)
mov
ja
js
stc
push
inc
int
fild
xlat
icebp
out
into
out
push
add
cs
xor
and
inc
and
adc
sbb
cmp
cmp
or
in
pop
sbb
jecxz
dec
xor
sbb
xchg
test
pusha
and
or
jo
not
cdq
push
stos
jne
sbb
pop
iret
mov
pop
cmp
ins
mov
push
cld
pop
cwde
and
sbb
inc
int3
out
hlt
and
js
push
sbb
push
test
movs
add
adc
pop
popa
cwde
add
iret
(bad)
sti
dec
in
push
dec
mov
setae
idiv
test
out
shl
(bad)
out
pop
cmp
out
jge
shl
cli
rcr
sti
mov
cmp
sbb
mov
test
push
add
xchg
ins
sbb
mov
daa
dec
add
daa
sbb
loop
aaa
xchg
cmp
popf
data16
add
xchg
xor
mov
add
pusha
pop
cdq
inc
mov
xor
sbb
popa
xchg
aad
imul
out
xchg
jecxz
es
push
push
in
imul
inc
sub
and
outs
outs
ds
hlt
sbb
jge
sub
ss
test
fimul
inc
jecxz
or
outs
cwde
add
push
int
in
or
pop
adc
outs
jecxz
sub
ins
inc
shr
dec
pop
icebp
jecxz
add
std
out
imul
pop
jae
push
add
dec
or
add
add
outs
mov
pop
and
(bad)
call
test
or
loope
pop
js
add
je
push
xor
dec
pop
rol
add
movs
sbb
adc
cmp
adc
inc
mov
sub
pop
or
push
sbb
or
xor
jne
add
icebp
test
and
or
arpl
pop
push
loop
cdq
stos
mov
(bad)
arpl
add
jp
inc
out
pushw
mov
adc
ins
or
and
push
push
das
xchg
mov
mov
in
jno
push
dec
mov
retf
sti
xor
mov
sbb
mov
iret
pop
push
shr
call
out
scas
jmp
pop
inc
xor
fs
inc
adc
inc
and
dec
cmps
xchg
mov
or
and
pop
or
sar
(bad)
je
or
cld
ja
sbb
mov
std
cmp
add
push
or
jo
mov
xlat
ss
mov
and
inc
in
ss
pushf
pop
and
cmps
adc
or
sti
cmp
mov
enter
jno
cdq
xor
xor
nop
push
mov
bound
dec
ds
inc
mov
add
or
retf
mov
les
dec
imul
push
sub
adc
call
gs
adc
or
cwde
jmp
popf
jg
pusha
push
jg
out
sbb
add
mov
cmp
cs
sbb
popa
jno
sar
js
div
push
jo
ss
std
repz
cmps
push
sbb
pop
cmp
mov
add
out
jne
xchg
ins
pusha
shr
add
mov
ins
mov
retf
or
xor
ds
mov
xchg
jl
adc
or
dec
dec
push
icebp
imul
xchg
dec
sub
(bad)
push
call
mov
or
not
fs
sbb
jmp
imul
nop
or
js
adc
movs
call
arpl
(bad)
pop
hlt
imul
fsubr
or
into
xchg
in
or
xor
fiadd
call
dec
aas
and
fidiv
in
aaa
cmp
sbb
dec
push
ret
sub
push
ret
ins
js
sub
fadd
adc
dec
jb
pop
and
mov
(bad)
out
xor
rcr
push
dec
sbb
mov
mov
mov
cmp
je
sub
sub
ja
test
xchg
pusha
pusha
pusha
push
mov
jnp
pop
outs
sbb
xchg
mov
sbb
(bad)
mov
leave
xor
sub
nop
xchg
xor
sub
or
sbb
adc
inc
adc
cld
sti
jmp
fdivr
push
fwait
and
mov
sbb
ffree
jns
xor
fcom
cmc
mov
ins
(bad)
or
xor
mov
aas
(bad)
outs
das
xchg
int
xor
aam
sti
jmp
popa
das
xor
sti
cmps
add
shl
sbb
outs
sti
out
xor
xor
call
pop
imul
pushf
repz
push
or
jnp
popa
sbb
inc
(bad)
js
pusha
add
fsincos
fsubr
xchg
cmps
adc
in
arpl
cmps
pop
jmp
push
(bad)
hlt
push
jns
scas
push
add
inc
xor
xchg
cmp
inc
loope
dec
pop
pop
popf
cmc
enter
out
jl
push
movs
pop
sbb
je
push
push
fucomip
push
pop
pop
sbb
add
mov
xor
inc
hlt
mov
jne
jno
pop
add
xchg
mov
push
loope
jne
sahf
add
into
mov
mov
push
mov
dec
and
sub
xchg
aad
jae
bound
cdq
inc
dec
or
test
out
sbb
and
mov
add
ds
sbb
pop
jge
xchg
xor
add
xchg
jno
imul
add
daa
adc
add
mov
repnz
or
popa
or
xchg
xor
lock
add
shl
jnp
out
xor
addr16
fistp
inc
add
or
fnstenv
dec
pushf
or
and
fs
ins
cmp
mov
ins
and
ins
push
jle
or
outs
stc
popa
out
mov
sbb
xor
pop
sbb
or
pushf
dec
std
and
call
jnp
or
pop
mov
push
pop
adc
push
sbb
mov
pop
add
or
inc
lods
adc
lods
xchg
inc
popa
or
pop
adc
test
fnstcw
xchg
call
add
mov
inc
mov
push
rcr
pushf
xor
push
aaa
addr16
jmp
cmp
fadd
mov
sub
xchg
push
je
dec
cmps
les
imul
popa
nop
pop
mov
mov
push
(bad)
cmp
xor
test
and
or
hlt
(bad)
adc
or
sbb
mov
cs
mov
sub
or
xchg
or
nop
ret
pushf
mov
jl
cmp
ins
mov
shr
push
sub
mov
pop
add
jl
sbb
lods
mov
mov
iret
jl
or
pop
add
xchg
xchg
fdiv
cmp
ror
pop
mov
adc
xchg
les
lods
data16
push
mov
jl
ds
push
push
jg
sub
mov
pop
data16
das
xor
loop
pop
pop
sbb
retf
fisub
xchg
(bad)
cwde
pop
sub
mov
cmp
nop
(bad)
pop
xor
into
retf
mov
xchg
jecxz
bound
and
cmp
loopne
add
call
and
xor
fist
pop
jns
fild
lds
shl
pusha
js
push
jmp
int
popa
push
test
(bad)
js
mov
call
std
and
(bad)
jns
jbe
inc
or
mov
pop
xor
add
pusha
jns
punpcklwd
push
or
mov
ds
mov
mov
test
pusha
add
jns
xor
movs
rol
rcl
cmp
push
and
adc
shl
add
js
stc
mov
xor
pushf
out
(bad)
and
shl
mov
(bad)
hlt
add
das
fs
jmp
add
rol
lock
and
sub
ret
push
and
add
mov
sub
adc
pop
xchg
jbe
pusha
add
jae
inc
xor
test
add
out
mov
nop
cmp
jg
inc
inc
mov
mov
ret
stos
aas
inc
imul
mov
jmp
push
sub
hlt
bound
dec
mov
jne
mov
cmp
jl
pop
add
shl
jbe
add
pop
xor
jo
add
loop
pop
xor
pop
dec
xor
jae
pusha
xlat
push
lea
sub
mov
add
cmp
pop
dec
add
div
cmps
mov
push
add
jmp
dec
dec
imul
xchg
ins
jo
mov
push
cmp
in
les
pop
cmp
pop
push
dec
cmp
cmps
and
xlat
imul
xchg
icebp
mov
sub
xchg
or
cmp
jbe
in
nop
cld
(bad)
sub
(bad)
jmp
(bad)
pop
ss
dec
xchg
cwde
add
mov
imul
push
(bad)
mov
les
add
or
pop
(bad)
je
pushf
out
or
test
cmp
lea
adc
int3
shl
cs
test
mov
sub
dec
push
loop
push
int
fmul
jg
cmp
not
inc
jne
cli
jae
je
outs
or
ins
adc
xor
outs
rcr
xor
adc
xor
xchg
mov
and
dec
in
xchg
and
cmp
inc
xor
jmp
retf
sub
ins
daa
pop
dec
cld
jp
cmp
or
pop
(bad)
mov
imul
and
(bad)
sub
or
clc
(bad)
out
call
adc
and
(bad)
jle
clc
mov
push
push
pop
iret
das
mov
add
sti
clc
les
ficomp
(bad)
out
clc
add
pusha
imul
add
cmps
jg
cmc
xor
sub
cmp
les
xor
into
pop
lds
mov
mov
loopne
pop
mov
xchg
pop
jo
int
mov
nop
dec
sbb
or
sbb
add
sbb
test
push
and
adc
dec
pusha
add
sbb
mov
cmp
je
je
adc
inc
sbb
nop
loop
push
repz
jp
sbb
mov
sahf
mov
and
xchg
sub
imul
pop
stos
cmp
adc
retf
lahf
add
out
inc
(bad)
pop
mov
and
adc
xor
daa
addr16
adc
push
mov
outs
and
mov
push
or
xchg
neg
mov
xchg
leave
push
add
imul
xor
aaa
adc
sti
adc
test
jl
or
es
out
add
and
cmp
add
or
xchg
add
imul
xor
push
lods
jmp
cmp
loope
int
dec
jmp
ins
sub
(bad)
dec
mov
test
test
adc
mov
rcr
cwde
push
aam
test
lods
mov
adc
int
jb
adc
jbe
popa
js
add
popf
pop
sar
xchg
adc
test
repnz
adc
jecxz
stos
sbb
jle
sub
xor
in
data16
pusha
bound
aaa
mov
jmp
in
inc
push
sbb
int
mov
mov
out
sbb
outs
outs
mov
repz
xlat
fxam
and
add
retf
sar
ins
loopne
les
loop
call
jl
xchg
xchg
daa
xor
adc
inc
loope
dec
push
xchg
jecxz
mov
dec
in
int
inc
lock
cmp
in
call
sbb
and
loopne
jb
aaa
retf
(bad)
call
or
xor
leave
(bad)
jg
cmp
lock
or
mov
adc
push
cmp
dec
cld
mov
jbe
pop
xchg
mov
test
and
adc
aas
mov
cmp
in
call
idiv
fsub
(bad)
or
sub
mov
or
or
xchg
shl
out
outs
cmp
pop
call
or
and
sbb
cmp
gs
pop
inc
mov
mov
paddusb
xor
xchg
mov
pop
adc
lods
or
adc
jnp
(bad)
sbb
xchg
test
lods
add
adc
xchg
dec
cmp
dec
or
in
cld
retf
(bad)
fs
(bad)
out
xchg
cli
or
xchg
sahf
adc
fwait
lods
daa
cmp
jmp
fdiv
fisub
call
inc
push
jo
or
outs
push
mov
pop
in
cmps
add
sub
das
pop
jno
jno
or
add
cmp
mov
pop
sahf
pop
je
pop
and
stos
fscale
xchg
push
pop
in
cmp
shl
mov
or
inc
mov
sub
add
xchg
mov
xor
sub
not
inc
shl
sti
pop
in
fdivr
cmp
mov
lock
jbe
dec
mov
popa
std
pop
sub
pop
adc
sub
daa
(bad)
sub
mov
sub
out
lock
pop
cld
ins
jge
sub
mov
pusha
push
xlat
push
and
bound
dec
dec
ins
and
pop
sub
scas
or
ins
std
xor
inc
loopne
jecxz
or
sbb
cld
pushf
mov
sti
push
jo
std
adc
js
movs
pop
xor
shl
lods
out
int3
sti
mov
sti
ins
es
cmps
inc
ins
enter
jb
inc
std
jmp
and
sti
mov
mov
xlat
(bad)
dec
scas
or
sub
es
std
out
sbb
push
cmps
fptan
cmp
mov
dec
jno
jnp
cmp
add
xor
sub
and
dec
inc
sti
nop
and
add
mov
jge
push
dec
xor
pop
cmp
psraw
adc
jmp
ins
inc
pop
mov
bound
lock
daa
add
push
fsub
and
and
mov
stos
mov
cs
outs
or
(bad)
xchg
pop
pusha
mov
inc
enter
sub
movs
test
jmp
mov
into
or
or
aaa
xchg
or
pop
in
add
into
sti
mov
push
loop
cmp
cmps
mov
addr16
and
ret
dec
mov
inc
xor
mov
test
fs
mov
push
sbb
int
adc
mov
mov
jbe
mov
adc
sub
sub
push
(bad)
xchg
cmp
inc
cmps
adc
xchg
ins
xchg
mov
and
push
pop
jle
bound
outs
loope
add
scas
cmp
cmp
loop
(bad)
ss
rcr
ds
xchg
or
cmp
sbb
xchg
mov
pop
inc
adc
out
add
xlat
adc
xchg
jns
int3
push
mov
sub
dec
lock
mov
sub
pop
add
and
loop
add
mov
imul
jbe
lds
leave
or
inc
popa
push
ss
test
push
mov
adc
adc
mov
mov
dec
fstp
push
das
xor
cmp
or
pusha
inc
ret
ds
aas
inc
xor
cld
mov
pop
in
stc
add
cwde
xor
jns
in
and
in
(bad)
les
movs
pop
aaa
and
test
pushf
xchg
test
repnz
fs
out
xlat
or
sub
pusha
ss
dec
lea
push
rcl
popa
mov
ds
xchg
cmps
ja
cs
pusha
pop
add
ins
inc
leave
dec
daa
jb
pusha
jnp
jnp
xor
pop
bnd
jg
mov
arpl
aam
not
out
movs
iret
repz
xchg
test
cld
imul
mov
push
sbb
in
in
push
dec
pop
push
mov
dec
dec
ins
push
push
sub
sti
std
adc
push
sbb
adc
loope
add
sbb
cmp
(bad)
ds
mov
fdivr
pop
pop
ret
xor
pop
mov
cmp
xor
pop
xor
pop
push
aaa
(bad)
add
ins
mov
sbb
sti
cmp
ins
sub
aam
cmps
pop
shl
aam
xor
xor
sbb
nop
xor
sbb
pop
cmp
into
cmp
(bad)
fadd
inc
pop
sahf
or
arpl
dec
jmp
arpl
cmp
pushf
mov
cdq
les
dec
xor
jl
shr
imul
pop
hlt
mov
jmp
pop
pop
jmp
xchg
jmp
cmp
ror
xor
fsub
jns
in
fcomp
jns
sbb
xchg
es
lock
fs
jb
icebp
add
scas
cmp
retf
or
in
add
add
xchg
add
fcomp
ret
paddusw
ja
adc
ja
(bad)
popf
adc
adc
fstp
fnsave
adc
adc
pop
push
or
int
adc
cmps
mov
imul
loop
dec
jb
dec
out
or
mov
xchg
sub
(bad)
daa
sub
sbb
pop
lock
std
push
(bad)
(bad)
push
pop
(bad)
push
repz
fs
jo
cmp
jl
xchg
out
addr16
stos
or
jae
fs
add
jns
adc
pop
imul
add
stc
sbb
iret
mov
dec
out
call
pop
and
ins
adc
xor
sti
scas
lods
mov
rcr
into
outs
enter
cdq
cli
push
push
sbb
jo
inc
push
and
jbe
adc
dec
sbb
fs
mov
and
adc
inc
xor
mov
and
daa
cwde
inc
sbb
push
xor
les
push
and
jmp
or
mov
cmc
push
xchg
push
pop
xchg
mov
push
push
jne
(bad)
or
mov
push
mov
out
lods
(bad)
adc
ja
in
lahf
jge
sub
rcr
xchg
in
out
pop
xchg
(bad)
push
jp
sub
push
fwait
cmps
sub
mov
pop
sar
test
add
rcr
add
jae
icebp
mov
mov
cmp
inc
aam
into
add
add
mov
add
rol
out
fidivr
shl
test
sub
push
pop
aaa
pop
add
cmp
cld
pop
add
sahf
shl
(bad)
or
mov
mov
xor
jecxz
arpl
or
shrd
fcomp
push
adc
in
mov
xchg
(bad)
mov
adc
inc
cdq
mov
pop
aas
stos
push
jmp
push
add
cmp
sbb
adc
adc
fs
and
sbb
mov
or
sbb
aas
cld
add
in
jecxz
mov
lods
push
jo
or
add
add
xor
scas
repnz
into
jmp
pop
jb
pop
retf
mov
push
adc
jmp
fst
or
arpl
nop
sub
fdivr
mov
int3
mov
jo
pushf
adc
sub
mov
sbb
aaa
in
pop
pusha
cmps
shl
adc
repz
fs
das
sbb
sbb
(bad)
push
or
mov
(bad)
aas
or
dec
shl
enter
mov
jle
xor
imul
je
stos
(bad)
scas
ficom
stc
fist
pusha
imul
and
shl
jle
add
or
dec
icebp
mov
cld
adc
shl
int3
lods
and
cmp
ins
xor
add
pop
dec
enter
inc
int
in
pop
push
jmp
inc
xor
add
loopne
push
ins
pop
pusha
sub
jbe
pusha
xor
or
lahf
jle
add
inc
daa
mov
dec
pop
xchg
dec
leave
mov
xchg
pushf
xor
in
fsub
(bad)
and
jne
rol
js
enter
xchg
leave
jns
adc
je
mov
cld
mov
xor
add
dec
pop
mov
inc
mov
daa
aam
ss
mov
dec
add
adc
inc
clc
xchg
mov
mov
test
ss
jmp
cmpxchg
pop
out
sbb
lods
add
out
sahf
cmp
mov
jge
mov
jne
xor
and
iret
mov
gs
xlat
dec
jl
test
pop
inc
and
or
mov
ja
sub
cdq
popa
mov
adc
rep
adc
ja
dec
cmp
xchg
and
xor
inc
in
data16
(bad)
adc
pop
inc
mov
shl
imul
shl
mov
test
cmp
aam
int3
and
out
ss
ss
xchg
cld
cs
loop
sbb
sahf
ja
loope
sub
ds
add
push
mov
jge
cld
sbb
jns
fsub
pop
or
ins
pop
lea
jle
sahf
cmps
xchg
std
mov
dec
sub
pop
mov
fist
lods
imul
push
push
lahf
test
push
pop
cmc
pop
pop
pop
cmc
push
pop
pop
pop
pop
push
pop
cmc
push
pop
pusha
popa
cmc
push
pop
cmc
bound
cmc
push
pop
fs
cmc
push
addr16
push
fst
cmc
mov
and
cmp
test
pusha
std
clc
add
lods
daa
out
imul
mov
and
bound
pop
les
mov
mov
add
pop
add
mov
mov
iret
xor
aas
adc
push
inc
xor
lsl
pop
pop
popf
pop
jnp
dec
push
in
pop
lds
inc
fidiv
inc
mov
add
pop
push
sahf
or
cmp
push
push
jecxz
adc
and
je
xchg
xor
mov
shl
pop
icebp
cmp
sbb
int
push
loopne
iret
jns
inc
(bad)
cmp
xor
or
imul
lgdtd
adc
sbb
out
cmp
popf
adc
jecxz
mov
retf
imul
les
pushf
(bad)
(bad)
or
shr
hlt
sbb
push
mov
pusha
test
sub
cmp
add
xchg
je
sbb
movlps
(bad)
xchg
pusha
clc
out
pusha
and
add
mov
dec
repnz
aad
xor
nop
(bad)
inc
int
xchg
std
enter
fstp
or
adc
nop
inc
pusha
in
dec
out
(bad)
je
dec
pop
mov
push
push
or
pop
add
push
add
and
adc
cld
in
out
sub
fs
iret
out
rcr
lods
adc
inc
cmp
into
and
aaa
add
(bad)
sbb
test
mov
xor
add
push
in
add
inc
fisub
mov
(bad)
xor
pop
mov
(bad)
xor
push
mov
mov
(bad)
xor
sbb
mov
fldenvw
rcl
mov
lods
(bad)
pusha
and
ds
in
das
sub
das
leave
xchg
xchg
mov
lods
pop
test
cmp
inc
inc
(bad)
rcr
inc
arpl
mov
lods
dec
dec
mov
jmp
push
or
jno
dec
sbb
push
in
mov
add
dec
add
sbb
test
push
push
add
push
mov
push
inc
cld
fwait
in
adc
pop
ss
pop
shl
sbb
fstp
dec
movhlps
add
sbb
sbb
add
mov
mov
inc
jnp
pop
lods
xchg
imul
cmp
mov
sbb
aam
mov
xchg
cmp
movs
add
or
xor
sub
adc
mov
sbb
mov
mov
inc
cmp
icebp
cmp
icebp
and
mov
xor
mov
inc
je
mov
mov
shl
mov
sub
sbb
ja
push
retf
push
mov
pusha
pop
(bad)
mov
dec
push
push
hlt
repz
fs
repz
dec
fdiv
or
test
jb
enter
sbb
jne
ja
sbb
jns
sbb
sbb
sahf
ja
sbb
movs
dec
pop
fs
pop
in
add
lea
dec
int3
dec
add
and
imul
sub
pop
mov
aaa
adc
and
mov
mov
cmp
and
mov
pop
pop
lea
push
xlat
inc
jb
inc
sbb
lea
add
add
mov
mov
outs
sbb
xchg
out
test
call
add
(bad)
pusha
pusha
mov
or
pusha
pusha
cdq
cmp
lahf
pop
dec
pusha
sub
jg
pop
pusha
(bad)
adc
outs
jno
(bad)
push
inc
dec
sub
push
jecxz
add
stos
repz
mov
retf
stos
mov
cmp
es
gs
(bad)
in
lods
in
pop
inc
push
sub
mov
out
mov
add
iret
adc
adc
jno
test
shl
push
jmp
(bad)
arpl
pusha
cmp
shr
ret
movs
mov
in
mov
or
pusha
lea
xor
and
xor
int
push
ds
jmp
adc
dec
fs
(bad)
cwde
stos
and
add
int3
and
dec
(bad)
and
stc
xchg
call
mov
cmps
fwait
mov
add
cmp
cli
sbb
cli
adc
inc
sahf
inc
call
test
(bad)
ror
inc
js
jae
in
cmp
loop
pop
dec
and
icebp
cmp
sbb
mov
cmpxchg
ja
cmp
jns
shl
cld
or
push
xor
sub
nop
out
jmp
aad
daa
mov
cli
adc
fnstsw
gs
add
add
adc
int3
test
sar
dec
cmp
imul
out
cld
imul
dec
jge
call
push
jp
or
xchg
jns
mov
cmp
dec
push
lods
adc
sub
dec
and
xor
inc
jp
dec
jl
xchg
inc
js
ja
cmc
and
add
and
xchg
out
pop
add
repnz
daa
xchg
xor
mov
ins
push
sub
xchg
imul
dec
jb
movs
aam
cwde
sub
mov
inc
push
inc
pop
mov
and
call
sub
mov
cmc
inc
inc
and
push
leave
pop
ret
pop
(bad)
inc
inc
lea
cmp
aaa
dec
push
mov
shr
dec
imul
dec
mov
sahf
xchg
out
hlt
leave
or
cmp
jo
out
mov
lahf
lahf
ins
and
cld
outs
fdivr
add
out
out
sbb
ja
sbb
js
fcomp
jns
out
mov
lahf
lods
mov
test
iret
scas
jne
push
jnp
sub
or
mov
inc
sahf
jmp
add
sbb
and
nop
add
and
movs
sbb
loop
jle
adc
mov
dec
xchg
sti
call
out
sub
push
jne
sbb
cs
dec
(bad)
stc
stc
inc
adc
icebp
push
shl
bound
das
inc
pop
cmp
ds
imul
mov
pop
add
jmp
push
adc
and
push
les
cmps
jo
(bad)
aas
lods
cmp
sub
(bad)
in
stc
es
test
pop
dec
push
lds
test
mov
sbb
mov
test
mov
test
push
mov
test
pop
mov
add
rol
xor
or
fld
fld
or
or
pminub
or
or
es
xor
div
pmaddwd
div
mov
adc
jno
jno
adc
adc
jno
jno
adc
adc
cs
das
pop
div
jno
sbb
sbb
in
xor
test
test
popf
sbb
test
fnstenv
test
popf
sbb
test
fnstenv
mov
test
(bad)
popf
cmp
js
fnstcw
test
inc
stos
adc
adc
mov
sbb
cmp
cli
inc
test
cmp
in
inc
test
jecxz
mov
in
mov
into
mov
inc
test
out
in
mov
cmp
cmp
test
dec
sbb
int3
cmp
dec
sbb
je
addr16
sbb
and
(bad)
cmp
test
out
adc
inc
add
cmp
mov
ins
dec
inc
and
add
mov
pusha
add
in
lods
pop
or
bound
jecxz
std
xchg
sahf
mov
sbb
push
dec
leave
adc
inc
fst
les
cmp
es
inc
retf
rcl
mov
sub
mov
test
dec
adc
stos
cmp
out
mov
ja
mov
psllw
push
adc
fst
adc
jmp
loop
adc
xchg
repnz
add
popf
xor
outs
cmp
outs
std
dec
xlat
in
rcr
add
add
cmp
xor
les
movs
xor
or
adc
inc
cmp
mov
adc
(bad)
adc
das
adc
lods
sbb
loope
jl
sbb
cmps
mov
or
in
cmp
xor
jns
mov
(bad)
fwait
cmp
pop
adc
mov
cld
push
mov
xor
lods
sbb
pop
add
call
pusha
mov
pop
or
je
test
in
sbb
pop
cmp
cs
cld
mov
xor
pop
add
mov
xor
mov
xchg
push
sbb
hlt
cmp
std
inc
cmp
or
push
inc
cmp
xor
inc
xchg
and
sub
push
xchg
cmp
jge
add
mov
cdq
pop
test
dec
cdq
pop
retf
add
mov
sbb
sbb
cmp
out
and
add
xchg
enter
fdiv
dec
mov
iret
test
sbb
ja
mov
aad
xchg
xor
push
or
mov
mov
jne
or
out
pushf
push
mov
adc
rol
sar
shr
pop
xchg
je
inc
or
inc
cmps
pop
xchg
mov
jmp
cli
inc
(bad)
mov
cld
adc
xor
mov
es
add
push
std
imul
(bad)
aaa
mov
ins
nop
pusha
sub
push
sub
js
rol
xchg
xchg
cmp
outs
xchg
push
leave
xchg
mov
test
and
cmp
xchg
leave
xchg
movs
push
cmp
pop
pop
and
cdq
sti
(bad)
sbb
je
out
mov
(bad)
cmc
push
push
or
push
(bad)
shr
jg
pushf
sbb
retf
aaa
sbb
dec
popf
sahf
scas
popf
test
lahf
mov
lock
mov
fnstenv
movs
lock
popf
sbb
lock
jno
cmps
lock
sbb
lock
fnstenv
(bad)
lock
lock
push
arpl
fsubr
scas
jecxz
mov
lock
lock
in
mov
into
mov
cmp
mov
mov
mov
lock
xor
push
ss
mov
addr16
pop
lock
fnstcw
mov
mov
mov
mov
push
call
or
ror
cmp
sbb
popf
dec
sub
add
stc
test
loopne
xlat
cs
and
add
adc
retf
aad
mov
sar
pop
cmp
sahf
enter
dec
xchg
mov
sbb
das
dec
frstor
sbb
inc
aaa
and
(bad)
cwde
mov
ret
jbe
test
sbb
ins
mov
xchg
or
das
sub
sub
call
ins
int
sbb
ss
lahf
and
xor
xor
xchg
pop
xchg
pop
xchg
jo
xor
jno
int
pop
test
jb
jae
xchg
popa
jae
addr16
mov
je
jns
xchg
jne
xchg
xchg
in
cld
(bad)
adc
mov
(bad)
adc
lds
jge
mov
outs
sbb
(bad)
fisttp
bound
pop
std
pop
mov
lods
outs
std
imul
xchg
xor
mov
std
outs
int3
cli
mov
std
lods
outs
movs
cmp
sbb
std
push
cmp
jno
std
mov
mov
jmp
mov
sbb
(bad)
std
fcomp
mov
and
frstor
lods
jecxz
cld
pusha
daa
jne
jmp
cld
popa
sub
bound
sbb
arpl
cld
fs
mov
arpl
gs
sub
jecxz
cld
addr16
push
(bad)
cld
imul
pop
cld
or
sub
sar
pop
xor
mov
pop
(bad)
stc
jno
and
mov
sbb
mov
jne
out
loope
jne
sbb
add
pop
sub
and
pop
out
inc
scas
jne
sub
pop
out
scas
jne
sbb
popa
sub
cs
sub
scas
jne
sbb
shr
fst
(bad)
xor
out
mov
(bad)
xor
mov
ss
rol
test
(bad)
cmp
and
outs
(bad)
cmp
mov
or
call
out
mov
inc
cmp
gs
cmp
std
ds
sar
fisubr
inc
and
outs
sub
inc
movs
ja
cli
ins
in
imul
jp
vorpd
call
inc
out
std
inc
pusha
sbb
std
inc
mov
jo
mov
ins
or
inc
hlt
outs
imul
pop
les
cld
inc
fld
xchg
or
cld
dec
mov
(bad)
dec
or
out
mov
dec
sbb
test
dec
sar
fisubr
ret
outs
imul
cld
dec
pop
int3
xor
cld
dec
call
or
add
push
mov
lock
or
or
inc
mov
inc
es
dec
inc
inc
dec
or
mov
pusha
sub
inc
push
inc
sbb
retf
sbb
sbb
cld
sub
and
add
int3
neg
cdq
pop
add
sti
out
loop
dec
pop
call
cli
aaa
loop
add
pop
test
cmp
mov
nop
movs
ja
pushf
test
test
add
jno
xchg
pop
loopne
mov
add
adc
sti
xchg
cld
xor
gs
pusha
add
jno
or
mov
push
adc
fst
in
mov
cmp
dec
or
aas
pop
out
scas
cmp
lea
push
test
pushf
mov
sbb
sbb
sub
xchg
ror
push
cmp
mov
sbb
and
pusha
sti
jmp
push
pop
xchg
ss
ss
out
rol
add
or
add
xor
jle
inc
push
aam
mov
stc
sahf
mov
pop
or
mov
clc
adc
mov
fsub
cmp
fld
popa
add
mov
sub
mov
add
cld
out
add
add
xlat
jns
add
into
or
lock
and
sub
jge
cmp
mov
inc
cmp
ret
int3
test
lods
inc
test
out
cld
lea
mov
or
int
push
sahf
xor
sbb
mov
dec
and
sbb
aaa
sbb
sub
adc
adc
sub
sahf
mov
mov
sbb
add
lods
mov
add
ja
xchg
add
add
sub
add
push
stos
xchg
and
or
sbb
or
sbb
dec
jne
in
cmp
push
push
(bad)
adc
add
aad
mov
sub
(bad)
mov
sbb
enter
add
call
test
mov
cmps
jae
jne
icebp
push
push
add
rcl
das
push
add
add
aas
jmp
sbb
add
out
and
mov
inc
add
jb
loop
push
test
add
call
add
push
aaa
sar
pop
addr16
adc
loop
test
sub
mov
int3
fs
test
pop
(bad)
push
jl
(bad)
mov
sub
push
add
daa
stos
into
add
fimul
xchg
mov
lea
ror
or
call
pusha
and
jno
push
inc
add
pop
jnp
or
add
cmp
adc
test
sahf
out
sub
js
pop
mov
cmp
ja
pushf
pop
call
xchg
cmp
cdq
jo
xchg
xchg
pop
adc
jno
dec
push
data16
add
mov
test
mov
xchg
(bad)
cmc
xor
jp
mov
cmps
jecxz
or
icebp
adc
sub
cmp
mov
jp
test
sub
ret
xor
mov
hlt
adc
rcl
cld
ins
shl
(bad)
call
(bad)
repz
test
hlt
mov
push
daa
ror
push
jbe
nop
push
lea
hlt
fcmovb
mov
cmc
mov
in
or
loope
pushf
push
mov
xlat
jno
cmp
or
sar
ror
jne
sbb
adc
rcl
mov
mov
es
cmps
mov
test
jne
retf
repz
js
jmp
out
pop
pop
cmp
out
fidivr
push
sbb
js
inc
fwait
es
imul
pop
jmp
or
addr16
sbb
popa
mov
xor
sub
mov
and
and
add
push
stos
fcomi
loope
xchg
mov
mov
mov
mov
sbb
mov
adc
or
add
sahf
imul
inc
sub
test
sub
scas
sub
neg
stos
adc
push
(bad)
in
scas
adc
cmps
and
inc
inc
dec
es
adc
mov
add
fwait
and
sbb
inc
adc
sar
ja
or
dec
inc
nop
mov
lock
pop
add
or
push
add
or
and
cmp
std
nop
jne
cmc
and
test
xor
loope
jl
outs
movs
cmp
mov
rcr
sbb
push
sub
mov
mov
adc
pushf
aam
cld
sbb
aam
ins
pusha
std
and
loop
pop
push
pop
lods
pop
sub
push
cmp
jecxz
dec
jo
push
inc
xchg
(bad)
icebp
mov
icebp
cmp
loope
adc
sub
ss
mov
std
int
cmp
and
jns
adc
sbb
rol
xor
mov
jbe
inc
or
xchg
sbb
pop
xor
sub
push
pop
push
cwde
pop
iret
loopne
mov
or
sbb
in
cld
cmp
add
cld
cmp
cld
sub
repz
mov
sub
cld
cmp
fsub
pop
dec
cmp
add
cmp
sub
out
xchg
sbb
push
xor
fdivr
xchg
sbb
cmp
pop
cmp
mov
sub
add
sti
pop
dec
sti
das
cmp
jo
(bad)
or
xor
cli
ins
or
or
in
cli
xor
cli
ins
dec
cmp
int3
cli
mov
addr16
mov
cli
xor
cmp
xchg
pop
dec
cli
xor
sbb
pop
sub
cli
inc
or
int3
les
stc
xor
xor
cs
psrlw
and
adc
pop
inc
mov
dec
xor
scas
in
sub
retf
add
bound
(bad)
(bad)
loopne
cs
and
add
and
add
cdq
adc
pop
sbb
inc
fcomp
sbb
inc
mov
ins
ror
cmp
add
sub
pop
sbb
sbb
xchg
scas
fcom
aaa
or
mov
xchg
repz
adc
ror
pushf
dec
cmp
jl
mov
add
out
xor
add
fild
or
or
add
mov
add
adc
jmp
pop
pop
je
push
push
xchg
sub
pop
out
ret
in
pop
adc
(bad)
cdq
data16
push
mov
(bad)
sbb
push
xor
in
call
or
cmp
cmc
outs
movs
or
fucomi
xor
push
mov
test
adc
jns
mov
xchg
test
sub
ds
cmp
pusha
cmp
out
fs
pop
pop
push
push
out
sahf
out
dec
inc
inc
cmp
out
sahf
cmp
sub
nop
sahf
in
and
sbb
int
inc
dec
sar
div
fsub
jns
out
pushf
jl
dec
mov
jp
sub
repz
in
lods
pushf
jl
hlt
cmp
pop
cmp
out
push
or
cli
cli
cmp
jae
pop
cmp
cld
shl
int3
fdivr
xor
je
add
sbb
inc
push
or
jne
(bad)
and
pop
(bad)
adc
adc
pop
adc
push
pop
(bad)
jne
(bad)
sbb
sbb
pop
sbb
push
pop
(bad)
jne
(bad)
and
and
pop
and
es
(bad)
jne
(bad)
sub
sub
pop
sub
cs
(bad)
jne
(bad)
xor
xor
pop
xor
ss
(bad)
jne
(bad)
cmp
cmp
pop
cmp
ds
(bad)
jne
mov
pop
inc
inc
jne
(bad)
jne
inc
inc
(bad)
jne
(bad)
dec
dec
dec
xlat
fnstenv
dec
dec
sbb
dec
dec
jno
xlat
jno
push
push
xlat
jno
xlat
push
push
xlat
jno
push
push
push
pop
(bad)
jne
pop
pop
jne
(bad)
jne
pop
pop
(bad)
jne
(bad)
pop
pop
pop
pop
(bad)
jne
pusha
popa
jne
(bad)
jne
arpl
pop
(bad)
gs
(bad)
jne
push
jne
imul
(bad)
ins
outs
outs
pop
(bad)
jne
jo
popf
pop
(bad)
jne
jae
jno
xlat
jno
jbe
xlat
jno
xlat
js
sbb
jnp
jno
xlat
jno
jle
xlat
jno
xlat
add
add
xchg
jno
xlat
mov
mov
jno
mov
nop
xchg
sbb
xchg
xchg
jno
xlat
jno
xchg
xchg
xlat
jno
xlat
cwde
cdq
sbb
fwait
pushf
jno
xlat
jno
sahf
lahf
xlat
jno
xlat
mov
sbb
sbb
cmps
xlat
jno
xlat
test
sbb
stos
lods
jno
xlat
jno
scas
scas
xlat
jno
xlat
mov
sbb
mov
jno
xlat
jno
mov
xlat
jno
xlat
mov
sbb
sbb
mov
rol
xlat
jno
ret
jno
xlat
jno
mov
push
sbb
adc
mov
popf
shl
pop
mov
test
xchg
loopne
ja
test
sub
xchg
add
iret
repz
sub
push
push
cmp
repz
or
or
ja
cmp
repz
sub
repz
enter
retf
popa
pop
pop
or
retf
jb
or
sahf
ret
imul
jns
pusha
int3
push
and
cmp
repz
sbb
cmp
inc
inc
add
push
inc
mov
stos
mov
and
push
inc
push
dec
ss
popa
xor
je
add
imul
inc
push
inc
dec
push
pop
push
dec
dec
dec
pop
inc
fs
gs
mov
ins
inc
jne
arpl
jnp
mov
ins
gs
jae
push
push
in
mov
loop
popaw
arpl
jbe
popa
inc
js
xchg
jo
mov
inc
out
pop
(bad)
