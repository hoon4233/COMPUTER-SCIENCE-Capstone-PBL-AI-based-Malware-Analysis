mov
adc
add
inc
outs
outs
ins
gs
outs
add
or
add
(bad)
jmp
add
jb
gs
push
jns
je
ins
add
xor
add
inc
outs
jae
inc
fnsave
jb
inc
xor
add
add
jg
jmp
or
outs
jb
dec
outs
je
sub
jg
test
ins
(bad)
ins
ss
stos
jl
cmp
mov
gs
add
(bad)
out
cmp
das
add
jns
mov
das
push
int3
fs
call
sub
data16
xchg
jb
pop
cld
out
inc
push
fs
jle
xor
pop
sbb
adc
div
xor
add
fbstp
sbb
push
push
inc
add
pop
pop
sar
popa
je
jbe
dec
jae
je
or
push
out
xor
ss
and
cld
sti
mov
push
fs
mov
inc
outs
jne
mov
and
pop
out
ins
jo
aas
aam
or
addr16
jne
jb
arpl
jmp
add
aas
call
jb
fdivr
es
push
xchg
mov
sbb
xor
inc
push
adc
das
push
imul
movs
dec
sub
or
push
add
movs
mov
pop
pop
dec
outs
fcomp
pop
ffree
outs
or
mov
jl
or
or
or
mov
or
daa
xchg
les
or
push
mov
js
push
imul
call
(bad)
adc
push
inc
ins
popa
jae
pusha
sbb
mov
push
inc
push
push
dec
push
lds
adc
push
add
adc
cmp
or
int3
xor
repnz
inc
sub
xor
xor
cdq
cdq
std
pop
add
sbb
push
or
pop
cld
pop
sub
outs
jo
inc
jno
imul
jns
sti
outs
lock
dec
gs
pop
add
sbb
jo
mov
or
fsubr
addr16
gs
jb
or
cli
cmp
adc
push
xchg
jb
popa
sti
jge
in
arpl
adc
adc
add
push
andps
dec
push
add
sbb
adc
add
popa
ror
(bad)
in
xor
push
push
push
popa
sub
aam
or
pushf
mov
and
adc
sbb
or
inc
and
add
je
and
jl
xchg
outs
aaa
les
pop
sub
dec
in
jne
mov
inc
adc
imul
mov
loopne
pop
push
dec
cld
hlt
or
add
in
fs
jmp
adc
std
pusha
pcmpgtb
inc
add
out
push
lods
push
dec
pusha
inc
pusha
fs
out
pop
sbb
mov
add
push
outs
mov
inc
adc
pop
inc
punpckhdq
leave
enter
(bad)
add
sub
leave
leave
leave
push
xchg
into
or
mov
mov
daa
mov
mov
test
mov
stc
mov
daa
sbb
dec
add
mov
idiv
jp
sub
clc
dec
sbb
(bad)
cmp
aas
pop
inc
psubq
mov
add
mov
mov
dec
push
dec
inc
add
inc
dec
bound
arpl
mov
jg
cmps
adc
add
pusha
jmp
lahf
test
ins
data16
and
dec
add
inc
je
rcl
inc
or
imul
movs
or
inc
in
(bad)
or
or
out
ret
das
add
inc
ror
xchg
mul
jne
sbb
stc
std
stos
or
in
inc
in
mov
xor
pop
inc
push
dec
popa
ins
mov
and
addr16
sahf
mov
dec
jae
into
lea
dec
jno
loopne
mov
push
popa
push
je
pusha
mov
das
jno
pusha
mov
or
fisub
add
push
loopne
xor
mov
and
jp
adc
push
cmp
pusha
push
push
xchg
or
outs
ins
jae
push
pop
pop
add
push
inc
add
outs
cwde
loopne
pop
popa
and
ins
inc
fs
adc
sub
in
in
sbb
ins
je
arpl
out
inc
cld
je
aas
mov
jo
add
mov
popa
add
push
adc
pusha
data16
inc
inc
jnp
sub
inc
outs
ins
jns
push
nop
cmp
sub
in
mov
jb
popa
add
in
push
pusha
cvttps2pi
add
adc
cmc
add
or
xchg
add
lods
popf
jecxz
pop
cmp
mov
add
or
ins
xchg
add
imul
jp
adc
xor
mov
or
push
shl
cs
arpl
xor
adc
icebp
jo
pop
bound
sbb
adc
add
xchg
dec
lock
mov
jo
jnp
or
and
push
add
and
fbstp
popa
gs
pusha
inc
js
jo
imul
jbe
adc
or
(bad)
push
cmp
or
bound
test
pop
pusha
mov
data16
rol
les
arpl
out
xor
adc
gs
cmp
adc
in
mov
jo
je
push
cmp
popa
addr16
aas
(bad)
lods
adc
ins
scas
outs
or
mov
jge
add
pop
fdivp
or
ja
ret
add
sub
mov
out
daa
xchg
pop
rep
or
mov
dec
popw
and
mov
jmp
dec
or
fst
mov
pop
ror
ins
fmul
shl
rcr
in
popf
ins
jne
push
add
imul
or
rcr
add
add
int
add
add
(bad)
inc
jmp
adc
push
pop
jnp
das
push
cmp
repz
inc
push
sub
push
push
push
push
jno
xchg
popf
lods
pop
daa
call
mov
les
jbe
xchg
mov
test
sub
pushf
popf
or
push
dec
ins
sbb
dec
dec
pop
dec
mov
mov
adc
shl
cmps
cmp
aad
adc
or
test
push
mov
rol
lds
jns
inc
sub
ins
mov
and
fistp
sbb
call
xchg
mov
xor
fwait
cmp
pop
das
bound
lds
push
movs
jg
iret
loopne
out
push
add
push
inc
jne
outs
ins
inc
je
test
into
bound
mov
std
outs
sbb
adc
push
scas
lea
shr
test
ror
push
and
gs
jns
das
lock
popa
cmp
outs
xor
push
call
inc
cmp
jmp
and
daa
or
movq
adc
push
inc
jp
outs
mov
rol
bnd
aad
push
adc
outs
jbe
adc
push
jbe
bound
jle
sub
push
out
dec
jmp
or
hlt
xor
push
imul
push
add
xchg
and
inc
ins
in
fistp
add
ja
dec
enter
add
cmps
or
mov
and
push
and
push
cmp
push
imul
adc
or
test
pop
and
loopne
loopne
leave
add
jae
or
sahf
sub
mov
ins
arpl
bound
push
push
jmp
pop
ja
imul
popf
mov
jb
pop
push
xor
xchg
cmp
pop
and
xchg
push
sahf
mov
sbb
or
sbb
and
pop
mov
push
stos
stos
pop
rcr
or
arpl
xchg
xor
lods
dec
sub
fisttp
pop
pop
or
leave
xchg
pop
stc
mov
pop
push
ds
movs
jge
and
pop
fld
or
and
pushf
add
(bad)
sub
and
adc
mov
neg
add
dec
push
push
inc
pop
xor
and
mov
xchg
gs
mov
outs
fcom
lods
in
sub
inc
nop
mov
inc
jns
and
xchg
mul
and
ins
pop
sub
or
adc
xchg
icebp
push
and
jmp
inc
and
(bad)
gs
inc
outs
or
mov
xchg
int3
and
sub
cdq
push
jae
iret
push
mov
fsub
outs
and
cs
test
loope
pop
cmp
mov
out
cld
adc
pop
in
cmp
imul
adc
push
test
out
les
adc
popa
pop
sti
jge
pushf
fidivr
or
adc
add
call
(bad)
push
(bad)
fnsave
xchg
xor
xor
pop
fdivr
pop
xchg
pop
es
dec
imul
jo
aam
jmp
jge
mov
pop
es
and
inc
in
mov
mov
dec
or
das
pop
cmps
popf
jle
or
sub
popa
cwde
imul
imul
popf
and
sub
push
or
(bad)
sbb
or
cmove
pop
cmp
aaa
in
pop
lock
sbb
fild
nop
inc
jle
dec
aaa
and
push
mov
lds
fldcw
aaa
dec
add
push
mov
and
arpl
sbb
mov
xor
mov
cdq
fdiv
mov
mov
adc
in
pop
adc
rol
and
ret
popa
in
ret
mov
mov
jb
adc
pop
add
in
cmc
std
inc
ror
add
ret
nop
xchg
add
mov
mov
push
sbb
cmp
mov
cmp
movs
fnstcw
and
push
push
fsub
in
in
ror
enter
in
sar
mov
test
in
in
mov
in
xchg
nop
mov
test
in
js
jo
in
in
push
in
in
push
push
dec
in
in
dec
inc
inc
cmp
in
in
add
sub
jb
hlt
lock
xor
leave
leave
in
sub
sub
outs
daa
mov
in
loopne
fcomp
sbb
pop
sar
punpckhbw
pusha
or
(bad)
stos
pop
pop
pop
xchg
ret
pop
(bad)
sub
mov
in
sbb
div
jg
nop
nop
push
add
mov
inc
(bad)
jmp
sbb
test
je
movzx
mov
inc
inc
pop
ret
pop
into
in
mul
(bad)
adc
or
mov
add
push
inc
popa
mov
ins
shl
shl
inc
hlt
out
arpl
jb
push
fs
idiv
imul
xor
sub
push
sub
mov
mov
push
imul
add
mov
fdivrp
call
popa
imul
stos
and
arpl
cmp
adc
push
pusha
pop
xor
das
or
inc
and
arpl
mov
or
pop
pusha
iret
jp
popaw
dec
leave
mov
call
bound
test
retf
jnp
and
mov
pusha
sub
pop
cwde
popa
inc
in
push
int
ret
int
or
mov
(bad)
mov
in
mov
mov
mov
dec
add
inc
or
and
mov
or
or
adc
or
adc
sahf
fld
cmp
inc
adc
adc
cmps
jge
mov
adc
sbb
sub
push
cmps
mov
cs
jp
add
sub
aas
lods
cdq
(bad)
push
add
inc
sub
jp
dec
imul
dec
xor
jbe
test
push
lahf
push
add
push
mov
pop
cmp
inc
arpl
add
fs
inc
inc
imul
jmp
retf
jns
fistp
ins
fcmovnu
fbstp
push
cmp
add
js
and
xchg
inc
data16
xor
test
cmc
mov
add
nop
call
cmp
mov
call
add
sub
retf
add
mov
mov
(bad)
pushf
rol
and
pop
mov
and
je
mov
jmp
adc
(bad)
inc
sbb
and
add
xchg
mov
cmp
xor
mov
add
pop
test
(bad)
sbb
iret
in
ret
cmp
ins
jle
icebp
call
inc
cld
add
or
adc
dec
add
sbb
push
add
cmp
dec
pop
mov
lock
and
sub
fmul
xor
mov
inc
pop
mov
cld
push
js
add
je
dec
adc
push
test
test
call
pop
push
jbe
pop
mov
lods
mov
loop
mov
out
mov
push
rol
and
mov
sub
mov
mov
rol
xor
int
shl
cmp
cmp
xor
frstor
out
sbb
clc
stos
sbb
add
in
sbb
or
push
xor
loope
add
push
push
push
mov
adc
cmp
and
ins
fwait
pushf
push
clc
inc
pop
sub
mov
outs
or
sub
pop
pop
mov
pop
cld
test
sbb
ins
mov
sbb
add
ret
pop
cld
(bad)
fucom
pop
pop
pop
faddp
add
mov
sub
jae
(bad)
sti
in
mov
mov
mov
push
and
or
test
jne
in
je
and
adc
add
jmp
aas
or
cmp
in
push
push
lea
daa
mov
bound
pop
push
jne
push
push
mov
(bad)
push
cmp
jbe
sub
add
jmp
test
jne
lods
(bad)
fiadd
and
fisubr
loopne
(bad)
sub
dec
(bad)
loopne
das
mov
mov
mov
sub
pusha
add
pushf
fdivrp
inc
das
cmp
inc
mov
data16
sar
(bad)
jbe
shr
out
mov
xor
and
add
call
push
fimul
aas
cmp
jne
and
imul
adc
shl
aad
push
cmp
loop
fidivr
ret
jae
fdiv
arpl
mov
or
xchg
sub
mov
jo
es
mov
or
call
fisttp
ins
push
std
sub
add
jbe
ret
push
je
add
jle
mov
xchg
neg
imul
fcom
jmp
repz
xor
(bad)
out
push
ja
jmp
dec
(bad)
and
ins
out
(bad)
mov
cmp
add
cmp
data16
int3
test
aaa
cld
push
jl
jl
lea
push
mov
jl
ins
xchg
inc
adc
fidivr
fisub
(bad)
add
xor
dec
(bad)
je
(bad)
sub
call
sbb
mov
add
sar
adc
jbe
mov
sbb
dec
adc
dec
aas
dec
clc
pop
or
or
mov
lahf
lds
sbb
ret
je
pause
or
cmps
rol
fisubr
inc
and
xchg
fwait
sub
xchg
movsx
cld
fld
sub
mov
cmp
int
mov
lea
lea
or
push
pop
push
add
cmp
sbb
mov
test
btr
inc
psubusw
pusha
or
add
mov
dec
jnp
sub
lea
(bad)
pusha
xchg
and
jmp
and
iret
jb
mov
lea
xlat
enter
iret
sub
sub
cmp
and
or
inc
push
mov
enter
(bad)
fbld
add
and
lea
dec
cld
xor
das
mov
mov
mov
inc
and
rcl
call
pop
push
adc
imul
iret
mov
addr16
out
or
mov
pop
pop
mov
fidiv
mov
jle
lea
mov
cmp
jne
lea
or
fsub
or
pop
je
mov
jg
loope
rol
or
jmp
nop
nop
cmp
sub
(bad)
xor
mov
enter
sti
mov
shl
push
xor
sbb
sub
cmp
push
clc
adc
jmp
mov
inc
push
pop
or
adc
loopne
add
cmp
(bad)
xchg
inc
inc
inc
adc
push
sub
pop
xor
sbb
setno
(bad)
imul
lock
mov
fisttp
dec
popa
scas
inc
jns
or
rep
stos
pusha
test
rol
test
add
(bad)
fisttp
push
jmp
clc
ror
pop
data16
or
xchg
push
mov
jge
cdq
push
push
mov
aad
ret
or
mov
sub
aaa
cwde
dec
push
sub
and
push
cld
dec
shl
iret
dec
es
push
scas
jmp
js
icebp
loopne
out
push
push
mov
nop
nop
mov
and
push
push
adc
add
lock
pop
pop
fmul
scas
test
or
daa
js
xor
test
jne
cmp
hlt
je
lea
and
mov
sbb
ss
mov
pop
ret
pop
and
lock
cmp
sbb
aaa
jmp
pop
dec
clc
sub
sub
sahf
into
xor
sub
ret
aad
push
lahf
test
mov
cmp
sbb
add
jo
lods
mov
add
(bad)
mov
loopne
mov
xchg
mov
or
rol
in
or
in
fld
cmp
jb
sbb
or
retf
jb
jns
jb
inc
add
mov
ret
jg
aas
shr
or
lea
push
mov
loop
xlat
mov
sub
adc
and
add
hlt
outs
outs
fneni(8087
xor
clc
iret
mov
jl
push
sbb
add
ret
xchg
fild
div
loop
retf
mov
add
stos
add
cmp
xor
setae
cmp
jb
lods
les
mov
loopne
push
int3
push
mov
push
jmp
xor
xlat
xor
cmp
push
jbe
fcomp
push
or
mov
cld
or
mov
push
mov
int
dec
mov
jne
or
adc
pop
pop
pop
cmc
(bad)
clc
mov
rol
xlat
sub
mov
jno
clc
add
cmp
and
lea
mov
lds
cld
adc
xchg
out
mov
test
ret
or
xchg
loopne
cmp
cmp
dec
or
inc
(bad)
iret
pop
mov
adc
es
rcl
or
mov
push
sar
mov
ja
cmp
push
dec
(bad)
pop
mov
call
jmp
rol
sbb
fiadd
mov
push
ret
and
push
add
push
ins
fsub
cmp
lea
jl
inc
aaa
xor
lds
add
and
fisttp
xchg
sbb
ret
pop
(bad)
(bad)
dec
iret
push
gs
pusha
fcom
loop
shl
xchg
ret
es
sar
and
sbb
push
lea
jecxz
(bad)
mov
leave
lea
or
jae
neg
fldz
cli
adc
(bad)
fst
add
js
or
rcr
mov
pop
das
loopne
add
adc
add
mov
mov
sbb
cmp
add
rcl
sbb
mov
cmp
jb
dec
mov
pushf
scas
mov
rcl
sbb
mov
jmp
push
mov
sub
jle
std
outs
call
cmp
jne
mov
pop
adc
sbb
jmp
sbb
neg
mov
add
retf
fistp
dec
mov
mov
mov
test
test
push
sbb
ret
xor
div
mov
ret
add
push
cmp
lods
jmp
clc
inc
mov
add
mov
adc
test
jne
mov
rol
mov
pop
push
xchg
ins
jg
imul
shl
test
iret
retf
mov
repnz
rcr
sar
adc
sub
cmps
mov
outs
pop
push
rcr
xor
push
mov
ins
adc
out
jbe
jg
lock
pusha
mov
push
in
cmp
ja
mov
out
jg
jmp
pop
xor
leave
mov
push
adc
ret
xchg
add
push
adc
neg
add
adc
test
je
adc
into
mov
mov
pop
mov
pop
pop
inc
or
pusha
fsub
out
sub
cli
and
call
lods
jge
push
push
cmp
test
inc
xchg
es
and
mov
push
cmp
daa
test
daa
dec
cmps
sti
out
fadd
inc
adc
lea
mov
and
mov
cmp
inc
ret
sbb
pushf
in
sbb
mov
sbb
vandnps
mov
pop
mov
sub
mov
stos
scas
jecxz
adc
jne
cli
or
rcr
mov
je
add
cmps
jno
xor
pxor
movs
sub
aas
inc
sbb
dec
movs
js
mov
jns
je
add
jb
xor
add
ss
mov
mov
push
rol
or
fwait
mov
jl
sub
es
pop
mov
cmp
jne
add
data16
mov
or
and
or
ret
test
frstor
xchg
fdivr
add
pop
outs
adc
call
loopne
push
xlat
cmc
jmp
(bad)
dec
inc
(bad)
test
fild
sbb
pop
neg
jne
and
movs
push
inc
or
cmp
je
aaa
sub
sbb
clc
test
cmp
add
add
jle
sti
inc
jge
hlt
adc
jne
mov
inc
add
jge
ret
add
mov
adc
jecxz
dec
shr
or
test
ins
mov
mov
jae
dec
aas
ror
adc
add
mov
test
adc
cmp
stos
imul
and
add
mov
and
adc
fdiv
cmp
sbb
adc
mov
mov
call
and
call
bnd
and
cdq
fild
xchg
das
sti
pop
ret
add
mov
je
or
pop
or
add
xchg
jle
movq
popa
sub
(bad)
inc
fiadd
in
cmp
fmul
xchg
test
push
(bad)
jbe
mov
test
out
lds
data16
mul
lea
adc
mov
inc
and
pop
inc
add
loop
loop
push
dec
mov
mov
(bad)
mov
xor
pop
add
xor
add
loope
test
cld
je
xchg
sub
cmps
push
shr
pop
jmp
mov
cs
loop
mov
inc
repnz
(bad)
mov
mov
cmp
push
sub
jecxz
dec
mov
jg
mov
jb
sbb
jmp
inc
and
enter
es
in
push
neg
xchg
mov
ds
dec
jl
cmp
mov
sbb
adc
pop
mov
std
and
mov
daa
fiadd
inc
aaa
ds
adc
xor
cld
dec
out
in
loope
mul
push
mov
mov
(bad)
retf
or
jl
fmul
xchg
cmp
xchg
adc
add
jne
mov
fiadd
call
push
not
add
add
inc
rol
test
push
mov
sbb
in
adc
push
(bad)
(bad)
retf
cld
sub
or
cld
out
out
add
je
dec
je
jmp
in
mov
jmp
mov
mov
inc
je
mov
mov
enter
push
xchg
dec
sub
adc
mov
sbb
clc
adc
push
cmp
xchg
jge
xor
test
jne
sbb
cmp
sub
(bad)
shr
xchg
ja
pop
sbb
or
cmp
out
adc
cmp
mov
dec
(bad)
ja
pop
jb
inc
xor
mov
cmps
dec
inc
push
es
xlat
add
jmp
aaa
add
(bad)
inc
push
div
mov
adc
mov
sub
push
ror
mov
sbb
les
idiv
std
adc
xchg
cli
in
fcomip
cmp
out
add
cmp
jbe
mov
push
ins
adc
cmc
call
aaa
jne
mov
jl
cmp
pushf
mov
add
jle
nop
sub
mov
or
sub
mov
stc
cs
sar
add
add
in
or
call
jbe
imul
js
scas
mov
shl
mov
shl
add
mov
call
xor
loope
lea
add
popf
and
jae
mov
pushf
sbb
in
inc
pop
sub
imul
mov
jb
push
data16
jmp
shl
pop
xor
mov
mov
sar
mov
ret
out
lods
adc
inc
dec
pop
adc
stos
mov
push
push
push
mov
hlt
out
sub
mov
xchg
push
mov
cmp
cld
std
cmp
jne
mov
mov
mov
adc
or
mov
imul
dec
jne
mov
mov
cmp
rol
dec
fcom
mov
inc
inc
nop
add
(bad)
jle
idiv
repz
mov
mov
pop
cmp
int3
je
mov
adc
mov
sbb
mov
das
call
dec
je
lahf
mov
sbb
sbb
push
xor
call
fiadd
ret
mov
push
aaa
call
jno
adc
pop
lods
xor
pop
adc
addr16
mov
repz
nop
lahf
fs
jne
clc
mov
lahf
lahf
mov
test
je
test
je
push
mov
inc
push
mov
adc
add
adc
imul
test
arpl
sbb
pushf
out
movs
mov
fisttp
je
sbb
mov
inc
or
aas
add
cld
pusha
lods
push
and
or
mov
js
add
cmp
(bad)
rcl
ret
mov
add
push
and
jae
xchg
jns
mov
jge
test
jne
mov
dec
cwde
outs
cwde
mov
sbb
movzx
add
js
hlt
(bad)
aaa
nop
daa
into
ins
xlat
push
(bad)
push
mov
push
add
or
add
outs
movs
add
out
add
pop
pop
pop
jne
loop
sub
sub
int
push
cwde
in
and
nop
push
add
rcl
je
cmp
ja
push
int3
sar
jmp
and
mov
jo
push
sub
or
dec
push
adc
nop
sbb
add
fcmovbe
and
mov
xchg
dec
push
dec
push
sbb
sahf
out
and
xor
mov
pop
push
mov
dec
or
adc
fld
fcom
or
jl
pushf
sbb
fistp
cmp
jle
or
shr
retf
adc
jbe
adc
cmp
add
and
sub
pop
inc
cmc
pop
jae
sbb
mov
ds
jecxz
inc
mov
add
mov
(bad)
and
pushf
pop
xlat
and
add
cmp
cmp
ret
cmc
fwait
imul
fild
fistp
jnp
(bad)
add
push
out
push
and
cmp
jne
or
or
ins
adc
fmul
jmp
and
mov
and
inc
imul
ss
cmp
pop
mov
fcomp
mov
cli
js
bound
jnp
pop
fild
jmp
sub
pop
es
test
adc
jbe
fadd
jmp
out
cmp
pop
xchg
js
pusha
push
mov
scas
jno
mov
mov
xor
std
mov
push
mov
pop
mov
fwait
or
ret
pop
cmp
add
mov
pop
pop
pop
pop
adc
jo
or
(bad)
dec
ret
mov
dec
mov
add
add
lock
test
push
inc
jo
jg
mov
dec
loopne
imul
push
std
cli
ror
test
clc
dec
adc
dec
jmp
ret
mov
or
sub
or
fisttp
sbb
jmp
mov
imul
mul
or
fistp
sub
fnclex
fldcw
mov
and
cmp
pop
push
cmps
add
popa
push
sahf
push
stmxcsr
pop
pop
fld
fldz
mov
(bad)
outs
in
add
fnstcw
fwait
or
or
fldcw
es
or
std
rcr
fild
jmp
(bad)
lock
faddp
fscale
fstp
pop
ret
retf
aas
in
cs
fwait
and
and
and
pop
pop
mov
hlt
mov
rcr
pop
cmp
pop
jae
push
cld
mov
push
pop
xor
mov
fimul
das
out
outs
jg
jb
cmp
jb
or
data16
mov
(bad)
add
jnp
ss
sbb
outs
sbb
jnp
add
or
test
outs
add
inc
sbb
movs
sub
sbb
push
jl
pop
cwde
fs
mov
xchg
adc
mov
das
mov
or
repz
fmul
or
adc
jg
or
int3
sbb
clc
push
add
add
out
add
hlt
fmul
jae
mov
ficomp
enter
push
and
pop
bound
or
cmps
mov
ja
push
icebp
call
sbb
inc
(bad)
es
and
sti
(bad)
js
cmp
rcl
dec
aaa
mov
pop
cmps
adc
jle
setg
dec
je
or
mov
(bad)
and
mov
cmp
in
sbb
dec
out
and
inc
mov
pop
xchg
sub
mov
fdivp
dec
jg
jne
repnz
mov
je
inc
or
popa
icebp
dec
pusha
in
cmp
loopne
cwde
mov
mov
mov
mov
jmp
push
adc
pop
xchg
jae
clc
add
sub
adc
lock
movs
imul
cld
mov
add
fsub
add
sub
aaa
clc
push
jo
test
sahf
dec
loope
mov
cmp
(bad)
(bad)
in
ja
mov
ret
cld
push
xchg
daa
sbb
mov
mov
out
mov
mov
mov
sbb
je
and
add
ret
les
je
or
jbe
lahf
jge
inc
cmp
inc
inc
xor
outs
cmp
jne
xchg
loopne
push
push
(bad)
sub
in
or
adc
jmp
popa
push
leave
mov
xchg
add
retf
ds
fcomi
neg
xor
add
adc
clc
cld
fs
(bad)
pop
mov
mov
shl
push
add
movzx
add
push
sub
jno
pop
test
jle
ins
sub
inc
jae
mov
mov
and
fwait
mov
pusha
lea
dec
cwde
inc
jae
retf
aam
jge
icebp
mov
(bad)
jmp
stc
pause
or
fild
adc
jo
mov
dec
(bad)
aam
fadd
sar
and
(bad)
sar
fucomi
mov
cmp
cmp
mov
push
popa
dec
dec
push
sbb
inc
aam
and
(bad)
loope
pop
inc
mov
add
sar
ret
push
outs
adc
imul
mov
or
shl
(bad)
jmp
inc
test
cmp
xchg
xchg
or
rcl
mov
mov
and
jne
je
jnp
sbb
arpl
and
push
clc
adc
pop
ret
iret
mov
inc
test
mov
pop
loopne
and
les
xor
ds
add
mov
cmps
es
cmps
ja
and
add
or
pop
cdq
ins
in
not
(bad)
fucomp
adc
fmul
add
add
xchg
mov
jl
nop
adc
mov
mov
push
add
pusha
(bad)
jmp
fld
fst
fst
mov
and
mov
adc
shl
fisubr
fwait
sahf
ror
sub
dec
loop
inc
lea
cmp
repz
cs
sbb
sbb
push
adc
cmp
repz
push
or
adc
dec
mov
ret
(bad)
mov
cmps
cmp
jge
dec
mov
mov
scas
les
mov
mov
xor
mov
push
add
jmp
mov
ja
loopne
cmp
jae
adc
jl
and
dec
sbb
dec
mov
dec
mov
lea
xchg
xchg
adc
xor
mov
rcr
or
sbb
inc
push
sub
xor
push
test
add
xor
dec
adc
xchg
add
imul
push
cmc
pop
jmp
mov
and
ret
mov
(bad)
push
sbb
mov
sub
shl
mov
push
fisttp
jle
add
cmp
je
mov
sti
sub
je
lahf
lahf
lahf
jb
je
js
outs
pop
je
xor
mov
cs
push
data16
dec
lods
xor
sub
ja
cmp
ja
fisttp
and
fsub
pop
and
jmp
iret
(bad)
(bad)
jmp
neg
jle
js
pop
sub
jmp
inc
dec
jmp
mov
xor
addr16
sahf
popa
jb
mov
mov
jbe
adc
add
or
mov
xor
add
mov
pop
loope
push
or
add
sbb
push
rcr
aas
ret
sete
pop
into
repz
adc
imul
aas
test
js
movq
out
cli
add
adc
js
push
or
push
xchg
jmp
std
or
retf
add
rcl
mov
rep
call
std
add
pop
jmp
xchg
adc
(bad)
xor
push
nop
fist
or
stc
mov
inc
push
fiadd
pop
pop
mov
mov
inc
adc
cmps
iret
cmp
scas
jo
mov
(bad)
xchg
cmp
push
cmp
xor
cmps
inc
mov
inc
mov
sbb
mov
jg
xor
fwait
mov
xchg
and
mov
enter
(bad)
and
or
rcl
push
mov
cmps
inc
mov
mov
in
ficomp
ret
add
cld
imul
inc
sbb
add
pusha
nop
dec
push
xlat
dec
pop
jecxz
pop
dec
mov
pop
cmp
mov
das
outs
test
cmps
pusha
push
movzx
adc
iret
pop
sub
pushf
inc
ja
mov
add
test
mov
add
test
cmps
jbe
je
arpl
add
sub
jae
inc
nop
inc
sub
fdivr
add
sub
jae
and
adc
adc
add
mov
pushf
adc
pop
jle
test
sub
mov
mov
inc
cmp
mov
enter
pop
push
dec
lock
sbb
loopne
clc
div
pop
cmp
xor
sti
and
or
or
jns
mov
jp
sbb
jmp
or
cld
shr
jb
push
cld
inc
xor
pop
pop
mov
pop
clc
pop
scas
pusha
inc
das
js
and
mov
clc
cmp
lahf
cmps
pop
clc
mov
push
xor
pop
mov
pop
shr
ins
lahf
pop
iret
mov
mov
(bad)
icebp
mov
xchg
dec
mov
jge
add
sub
pop
outs
inc
mov
push
xlat
inc
inc
mov
ja
pop
nop
mov
mov
jmp
cmp
fs
enter
sbb
fadd
inc
cld
mov
pop
sbb
mov
sbb
cmps
lahf
std
cmps
pop
inc
pop
jo
mov
std
cmps
scas
(bad)
daa
or
mov
(bad)
fcom
or
inc
sub
inc
(bad)
xor
mov
mov
jl
sub
inc
mov
jmp
rcl
shl
fnstenv
or
pop
in
or
jecxz
adc
std
(bad)
jg
shl
fidiv
lea
cmp
ja
dec
mov
and
shl
shr
sbb
test
rcl
in
push
test
sub
jne
and
mov
jmp
stos
dec
mov
je
daa
(bad)
pop
add
ror
xlat
and
outs
or
ret
sahf
shl
dec
fsubr
aas
shl
mov
mov
cmp
repz
sbb
int3
(bad)
pop
mov
sub
sub
leave
jne
push
jg
retf
fiadd
scas
icebp
sub
and
icebp
sbb
push
push
xor
jg
mov
jl
je
call
clc
mov
lea
mov
and
lea
fld
sub
fmulp
inc
je
sub
je
loope
mov
das
out
fadd
popa
inc
and
mov
jmp
neg
xchg
jge
mov
dec
gs
sub
sbb
push
jg
jmp
fstp
fld
adc
out
sbb
addr16
(bad)
jg
push
pushf
pop
mov
xor
out
into
popf
adc
enter
pop
sub
xor
mov
je
or
adc
add
sahf
scas
dec
jo
test
jg
loop
cmp
mov
mov
jecxz
cmp
and
xlat
sbb
cmp
enter
cmps
inc
test
pop
outs
jp
sbb
in
mov
inc
adc
push
mov
add
pop
inc
ss
rcl
ins
pop
icebp
ret
adc
mov
mov
mov
(bad)
dec
lods
or
mov
aaa
mov
dec
or
int3
outs
test
out
fidiv
sub
pushf
push
movups
fs
mov
jae
popf
cs
push
inc
xor
hlt
out
add
pop
mov
mov
call
or
jp
stos
mov
loop
fidivr
dec
add
stos
pop
and
mov
ror
add
push
mov
(bad)
(bad)
sub
je
pop
mov
xchg
jae
ds
sti
sbb
push
mov
mov
push
sbb
cmp
sar
test
lods
(bad)
mov
mov
mov
loop
call
mov
adc
mov
push
ss
cmp
lods
jae
paddd
movsx
and
and
loope
inc
xchg
ret
add
mov
daa
les
pop
push
ret
mov
out
stos
(bad)
pop
clc
or
mov
mov
mov
dec
pop
xchg
xor
fistp
cmp
add
sub
mov
push
add
sub
je
sbb
dec
jo
out
jmp
test
loop
sar
pop
jne
or
adc
push
push
pop
adc
shr
mov
outs
mov
inc
lods
lock
ins
shl
cmp
jne
jb
cmp
sub
dec
rcl
push
or
jb
push
or
inc
daa
bound
push
call
add
xchg
push
fild
inc
retf
add
add
enter
pop
aad
or
(bad)
jae
jmp
ret
aas
push
mov
mov
cdq
mov
loope
scas
jl
jl
push
xor
iret
or
sbb
cmp
les
scas
dec
je
pop
loopne
pop
pop
ja
sar
inc
jne
xor
mov
cmps
adc
mov
mov
and
(bad)
mov
jne
jp
aaa
pushf
mul
xchg
or
mov
pop
imul
(bad)
dec
cmp
push
loope
push
push
(bad)
dec
(bad)
xchg
or
stos
jecxz
in
push
add
xchg
jg
lock
adc
movzx
push
add
xor
scas
cmp
push
add
stos
fbld
xor
pop
ret
pop
add
sub
inc
inc
cld
adc
fadd
fcom
les
dec
mov
sbb
add
out
push
cmp
mov
mov
push
daa
ret
lock
scas
and
ja
mov
xlat
inc
dec
jbe
pop
pop
pop
(bad)
fwait
push
sbb
dec
or
cmp
jae
push
push
rol
add
adc
stos
hlt
pop
cmp
addr16
push
pop
sar
push
sub
push
repnz
hlt
(bad)
jmp
lock
inc
movs
lea
inc
rcl
jbe
push
cmp
aaa
adc
fucomi
jo
call
leave
xor
mov
loope
jo
xor
outs
cmp
int3
ds
call
xor
es
and
add
dec
jne
sbb
jmp
pop
jmp
sbb
jmp
push
lea
inc
nop
add
(bad)
mov
mov
mov
test
jne
xor
psubusw
sar
push
adc
pop
mov
sbb
fbstp
aam
adc
pop
and
xor
ds
(bad)
fcmovnu
add
xchg
adc
mov
cli
cmp
je
or
(bad)
repz
fst
xor
ds
adc
clc
test
pop
add
push
js
nop
out
loopne
js
push
xchg
mov
lahf
adc
je
pop
jmp
rol
pop
xor
call
out
pop
test
iret
push
pop
add
pop
imul
outs
mov
or
hlt
xor
lea
mov
mov
mov
mov
push
in
xor
push
push
or
cmps
mov
inc
in
lahf
pop
sub
or
add
popa
mov
aaa
ficom
adc
push
clc
aaa
push
fiadd
inc
mov
rcl
daa
arpl
xchg
and
ja
mov
fwait
ds
or
inc
inc
cmp
neg
push
jg
rcr
dec
sub
ja
or
out
xor
push
les
jg
cmp
ins
add
sbb
std
fist
or
sar
cmp
jne
fild
sub
lea
mov
outs
enter
ret
sub
jbe
add
les
add
or
pop
and
aad
xchg
inc
push
cld
loop
call
retf
mov
fmul
fcomp
je
les
pop
cli
sbb
das
fdiv
enter
jle
pause
dec
push
jg
dec
call
add
sar
push
rcl
or
sar
add
push
enter
ds
fdiv
jnp
in
or
das
ss
(bad)
neg
pop
nop
arpl
xor
fild
adc
adc
lock
jne
nop
pop
ins
bound
das
xchg
mov
ins
clc
sbb
fcomi
retf
lock
pushf
loop
sbb
test
mov
aaa
in
test
inc
cli
mov
imul
arpl
jb
or
or
jb
outs
or
rcl
cmp
ins
add
mov
push
inc
mov
call
pop
pop
or
in
test
sbb
push
add
adc
sbb
lahf
xor
or
sbb
shl
ss
out
mov
jne
or
or
inc
mov
or
out
fiadd
and
push
add
pushf
shr
and
xor
inc
int
int3
push
push
pop
pop
pop
jno
push
push
inc
stc
mov
int3
rcl
xor
and
inc
adc
mov
fdivr
add
or
xor
push
adc
pushf
push
mov
jbe
inc
mov
or
lds
cld
adc
mov
aad
add
hlt
inc
lock
(bad)
mov
pushf
mov
sbb
adc
bound
(bad)
outs
test
test
jle
mov
outs
adc
mov
push
and
mov
or
adc
push
cmp
cmp
sub
push
mov
push
sbb
inc
neg
fisttp
add
push
dec
mov
xchg
xlat
clc
push
ret
add
mov
outs
jb
push
lea
xchg
lea
dec
push
test
pusha
scas
pop
push
sub
ret
mov
cmp
push
push
xchg
mov
add
pop
(bad)
shl
lds
jmp
push
fdiv
ret
clc
je
fdivr
mov
sub
or
fucom
inc
add
mov
add
inc
cmp
lock
cdq
cmovge
xor
movzx
les
lock
dec
add
jle
jne
sti
sar
rcl
dec
mov
test
test
je
leave
(bad)
ss
les
pop
or
fisttp
xchg
loop
pop
or
dec
ja
adc
ja
or
leave
popa
sbb
xchg
jmp
fimul
mov
test
call
sub
push
cmc
cmp
or
pop
gs
add
jmp
mov
cmps
adc
inc
jl
ret
inc
or
add
ret
ret
add
lock
stc
push
cmp
(bad)
aam
cld
(bad)
jecxz
jmp
nop
mov
addr16
sub
adc
in
pushf
or
aam
ret
iret
pop
or
and
fdiv
cmp
cmp
adc
push
nop
aad
lock
cmp
daa
mov
popa
pop
adc
pop
shr
imul
pop
je
pop
push
movs
push
mov
add
xchg
sub
cmc
imul
(bad)
pop
add
xchg
push
call
es
je
fiadd
jmp
cmp
jne
jbe
test
and
or
ins
dec
cld
cmp
jne
ret
cmc
out
nop
sbb
shl
jmp
or
push
inc
cdq
push
enter
push
inc
ror
(bad)
mov
add
in
and
add
pusha
sbb
and
add
or
fidiv
xchg
ret
call
pop
lods
or
popa
push
(bad)
push
sbb
aaa
popa
and
xchg
les
mov
xchg
mov
int3
outs
xchg
aad
push
fimul
arpl
pop
loopne
ds
jno
mov
xor
in
pop
in
or
dec
inc
mov
cmp
adc
mov
xchg
mov
inc
(bad)
push
or
pop
loope
fsub
add
sbb
sbb
cli
in
push
call
lock
pushf
inc
adc
push
ins
mov
loopne
scas
cmp
push
push
pop
and
pop
push
push
adc
pop
xchg
and
leave
je
inc
or
test
cmp
je
or
jne
movsx
inc
inc
int3
pushf
mov
rol
xchg
inc
pop
fs
jecxz
nop
fldcw
je
pop
mov
push
aas
loop
or
loop
cld
cmp
(bad)
jecxz
or
je
fdivrp
mov
add
xchg
adc
jge
cs
je
call
adc
adc
inc
rcr
push
xchg
out
push
and
dec
add
into
cli
out
push
je
dec
cli
xor
sub
test
nop
and
stos
xor
sbb
dec
or
xor
sbb
jne
push
cs
push
jns
dec
or
add
sbb
fiadd
call
sub
push
push
sbb
or
inc
push
rcr
mov
pop
add
inc
add
push
sub
test
ret
add
pusha
inc
pop
mov
(bad)
mov
cmovno
xor
in
loope
inc
adc
pop
test
adc
retf
xchg
sbb
or
sub
add
lds
mov
repnz
call
push
int3
cmp
test
add
dec
mov
cmp
jne
inc
inc
xor
je
mov
(bad)
fistp
push
add
dec
jne
faddp
pop
cmp
or
adc
inc
jmp
or
daa
mov
inc
push
in
adc
adc
jno
adc
lods
inc
or
inc
mov
nop
outs
pop
adc
icebp
push
sub
js
out
cmp
arpl
jecxz
push
je
mov
jo
pushf
and
dec
or
xor
mov
jo
add
imul
aad
mov
fsub
jmp
dec
pop
cmp
pop
in
push
dec
test
imul
push
out
cmp
mov
stos
add
lds
retf
je
cdq
adc
inc
mov
das
je
jg
adc
or
fnstcw
out
and
jmp
cli
imul
jg
lock
inc
jnp
mov
call
mov
stos
inc
sub
xor
mov
push
or
pop
lea
pop
jmp
xchg
clc
mov
adc
push
push
push
adc
loopne
jne
sub
pop
inc
push
call
jo
jo
add
or
jg
int3
outs
add
xor
pusha
cmps
test
test
and
nop
mov
cs
and
mov
push
and
mov
or
pusha
add
pop
or
inc
or
xchg
mov
adc
sbb
add
push
lods
hlt
ret
xor
sbb
test
aas
scas
xor
stos
ret
loope
call
cmp
adc
je
cmp
push
sub
fbld
xchg
jmp
add
call
fst
std
je
jmp
cmp
sub
adc
call
jge
jmp
sub
cmp
mov
jmp
mov
jmp
mov
jmp
sbb
iret
jmp
push
sbb
into
or
fsubr
push
mov
jmp
mov
sub
dec
mov
test
sub
or
nop
mov
ds
mov
add
mov
jno
xlat
mov
cmp
mov
push
ins
inc
sbb
mov
shl
bound
pop
jno
push
inc
call
sbb
outs
or
nop
daa
mov
ret
mov
and
or
pop
sbb
int3
inc
lock
sbb
adc
retf
sbb
inc
mov
add
xor
cs
imul
out
or
cmp
cmp
jne
sbb
pmaxsw
and
sbb
jle
add
mov
push
iret
aaa
je
add
pop
mov
inc
ins
pop
inc
(bad)
xor
pop
jmp
adc
aam
mov
jmp
mov
shr
add
and
rcl
cmp
jle
jl
fadd
xlat
dec
mov
mov
jg
xlat
sbb
mov
test
mov
lock
(bad)
mov
loopne
adc
cmp
mov
inc
pop
arpl
fs
enter
cmp
test
xor
mov
and
jae
jne
inc
enter
cmps
mov
popf
xchg
(bad)
xor
loopne
hlt
in
xor
push
sub
sbb
add
inc
(bad)
pop
push
dec
cld
pop
dec
je
add
out
fisub
int3
leave
lock
gs
jmp
or
out
bound
cli
dec
jne
pop
pop
mov
or
sahf
mov
lds
stos
mov
pop
(bad)
pop
and
cmp
mov
jg
pop
mov
clc
and
(bad)
dec
mov
add
cmp
in
ficom
out
pop
sbb
ror
pop
loopne
cmc
sbb
pop
fiadd
mov
mov
jge
mov
ja
add
mov
mov
cmp
add
rol
nop
push
dec
pop
dec
loope
adc
inc
jbe
mov
cmp
mov
les
pop
or
and
in
pop
clc
mov
add
in
inc
dec
in
aad
pop
ret
retf
jne
jp
and
mov
fwait
lar
addr16
popa
imul
ds
enter
sbb
aaa
jmp
test
mov
dec
inc
lods
adc
cmp
mov
jnp
pop
call
add
jne
xor
jne
cmp
lock
mov
icebp
adc
or
and
mov
push
outs
xor
adc
test
inc
(bad)
mov
mov
cmp
or
push
jl
cmp
mov
add
push
and
js
sbb
je
inc
mov
jne
mov
mov
(bad)
loopne
mov
push
sar
lock
imul
pop
mov
lahf
inc
addr16
push
inc
add
adc
(bad)
and
pop
cmps
(bad)
aad
sub
add
jp
adc
movs
shl
adc
rcr
sub
(bad)
fldenv
push
xor
push
je
mov
push
ror
cli
ja
pushf
sbb
test
pop
call
xor
xor
add
scas
adc
iret
push
mov
jmp
jge
les
or
dec
pusha
push
rcl
or
inc
jmp
mov
inc
jmp
adc
dec
cmp
(bad)
or
mov
addr16
dec
mov
ja
cmp
or
int
mov
push
add
jo
mov
jo
jmp
pop
mov
clc
ja
cld
data16
sub
shl
inc
mul
adc
jge
push
hlt
cdq
dec
aam
sar
ja
xor
scas
mul
(bad)
push
push
cmp
xchg
pop
fstp
mov
or
cmps
cs
stos
(bad)
(bad)
xchg
mov
jg
ret
inc
out
retf
mov
pop
cwde
pop
rcr
sbb
dec
clc
dec
jl
lock
adc
hlt
out
inc
add
mov
push
sub
mov
(bad)
mov
cmp
mov
cmp
or
push
dec
ret
cli
fsubrp
loopne
mov
inc
call
xchg
daa
push
clc
inc
jle
mov
inc
push
pop
ja
cmp
mov
jmp
ror
sub
xlat
cmp
dec
ret
ret
cli
sbb
xor
cmp
sub
loope
fidiv
in
loope
dec
cmps
mov
fs
pusha
dec
popf
xchg
lea
jnp
ins
fsubr
adc
call
pushf
mov
mov
fmul
add
stos
aaa
adc
sbb
mov
das
push
cmp
or
mov
or
and
lock
push
cmp
outs
lods
movzx
mov
rcl
rcl
cld
ins
and
data16
std
rcl
jg
dec
jmp
lea
cmp
push
jo
loop
ins
test
out
ins
dec
cld
mov
xor
addr16
lea
sbb
aas
adc
lea
sbb
js
jne
dec
cld
popa
pop
call
jge
inc
pop
ret
loopne
mov
mov
cmp
mov
test
inc
pusha
mov
adc
or
aas
aam
adc
push
push
ins
jmp
fadd
xor
jecxz
scas
stc
adc
push
aam
add
or
xor
(bad)
push
cmp
xor
jle
dec
gs
data16
dec
pop
inc
add
mov
cli
sbb
pop
scas
dec
clc
icebp
rcl
inc
mov
add
jmp
mov
pop
push
dec
cld
lods
pop
pop
jmp
adc
jmp
fstp
mov
(bad)
jle
cmp
je
call
stos
test
push
jp
out
cwde
mov
push
movd
inc
sub
pop
mov
pop
mov
dec
or
inc
into
enter
adc
imul
sbb
jmp
inc
cmp
jne
mov
stos
mov
ret
daa
or
cmp
sub
cmp
push
mov
mov
add
int3
ins
sbb
inc
ret
or
mov
cmp
mov
cmc
pop
cmps
outs
adc
adc
fisttp
adc
pop
ror
or
ja
add
push
mov
mov
fnstenv
dec
ds
out
pop
add
aaa
(bad)
(bad)
add
loop
push
outs
(bad)
fild
loop
je
mov
cmp
jne
push
adc
dec
sti
cmp
jne
adc
add
jne
add
jmp
pop
cmp
int3
sti
mov
jne
shr
shr
sbb
mov
push
mov
shr
or
loopne
addr16
add
and
ins
rol
pop
and
cmps
xor
out
pop
int
dec
mov
loopne
xor
call
xchg
inc
push
movzx
inc
xchg
arpl
pop
cmc
mov
retf
jbe
cmps
mov
inc
inc
sbb
xor
xchg
inc
(bad)
cmp
jl
icebp
or
je
xchg
sbb
ret
inc
inc
test
ss
(bad)
jl
cmp
jg
add
mov
inc
rep
jmp
pop
jmp
and
lods
adc
mov
call
int3
mov
xor
mov
test
push
in
rol
je
dec
je
or
lods
or
pop
inc
add
mov
cmp
sub
and
pusha
(bad)
out
sahf
fist
or
push
push
outs
or
in
add
jnp
jle
movs
mov
inc
mov
pop
push
push
push
shl
scas
push
lock
push
pop
pop
pop
cmp
test
aad
sbb
mov
mov
inc
(bad)
bound
inc
in
mov
cmp
ss
sub
xor
jne
dec
cld
call
push
lea
lea
neg
mov
push
gs
pop
mov
cmp
je
bound
push
or
sti
push
cld
ret
cmp
dec
dec
ins
fwait
pop
cmp
pop
add
aaa
add
rcl
imul
hlt
ret
mov
jg
test
ret
add
mov
push
jmp
dec
cmp
jge
rcl
sbb
(bad)
repz
cmp
and
mov
xor
or
neg
push
cmps
xchg
cmp
pusha
mov
into
shl
inc
dec
inc
add
push
push
mov
int
call
xlat
cmp
adc
out
dec
or
movs
push
not
xor
rol
push
(bad)
mov
add
mov
inc
test
inc
jmp
jge
mov
test
icebp
movs
jne
loope
icebp
add
and
and
shr
push
rol
(bad)
(bad)
inc
mov
rep
out
adc
dec
pushf
nop
and
jg
in
add
sbb
adc
push
sub
jp
hlt
pop
dec
inc
jle
push
mov
jle
pop
push
outs
cmps
mov
clc
pop
jmp
push
sti
rcl
adc
pusha
pusha
and
out
rol
push
inc
xor
xor
mov
pop
add
pop
mov
fs
jmp
push
adc
adc
jb
dec
or
push
sub
cld
leave
and
xor
ss
scas
pop
add
inc
and
sbb
or
pop
das
or
pop
add
scas
and
leave
je
hlt
sar
jmp
dec
lods
call
add
mov
xchg
fistp
inc
adc
and
cmps
mov
lds
xor
xchg
idiv
or
outs
mov
repz
mov
(bad)
sub
sub
ret
ins
aad
loope
outs
push
in
jmp
(bad)
jge
les
call
push
lds
pop
sub
pop
push
jo
popa
xlat
sar
dec
inc
pusha
pop
out
clc
sub
fbstp
(bad)
xor
pop
mov
pop
lock
pop
inc
inc
mov
lock
dec
jne
(bad)
push
out
mov
stos
cmc
push
dec
in
shr
cld
test
add
lock
add
pushf
ret
cs
fisttp
loopne
xchg
xchg
cmp
mov
jbe
push
ror
xchg
lds
out
pop
cmp
push
iret
lock
imul
sbb
das
dec
imul
mov
mov
das
scas
xor
sbb
mov
jne
inc
add
prefetcht2
adc
(bad)
out
out
xor
mov
test
or
pop
dec
and
adc
or
sldt
or
inc
leave
lock
add
jg
add
sar
aaa
add
jo
inc
push
jo
push
shl
enter
div
xor
push
sbb
adc
call
aas
push
pop
je
sbb
mov
push
cld
add
in
fiadd
fsubr
cmp
je
gs
outs
xor
sahf
fucomi
adc
out
popf
mov
cdq
jno
scas
pop
cmps
outs
stos
pop
lea
lds
adc
or
out
or
pop
dec
jns
xlat
ror
or
jl
stos
test
ins
outs
daa
push
dec
mov
jmp
mov
fsub
lods
or
lock
inc
cli
add
dec
iret
in
push
retf
or
mov
push
xor
dec
cmp
enter
sbb
push
adc
cmp
into
mov
mov
dec
jmp
xor
jnp
add
inc
or
dec
in
fwait
loopne
ret
ja
iret
jl
add
cld
aad
mov
dec
test
hlt
(bad)
test
dec
pushf
sbb
repnz
mov
addr16
add
dec
adc
add
add
mov
imul
xchg
jmp
popa
nop
add
sub
and
leave
loop
dec
popf
push
mov
cmp
jne
rol
xchg
mov
sahf
(bad)
cmp
out
adc
out
pop
cwde
(bad)
and
jecxz
ret
dec
stc
mov
mov
or
loopne
into
ss
jl
pop
cs
cmps
sub
mov
shr
in
test
fdivr
lea
xor
adc
sbb
add
iret
in
xor
mov
cmps
shl
mov
adc
cdq
cmp
in
mov
paddd
sar
pop
dec
cmp
mov
cmp
or
push
sbb
xor
jae
add
mov
jne
or
ss
jle
inc
xor
cmp
sub
idiv
sub
stos
data16
adc
mov
sub
adc
in
or
xlat
and
adc
aam
out
sar
push
push
push
inc
dec
js
mov
inc
(bad)
add
jle
jo
mov
inc
shl
cmps
pop
dec
rol
jmp
pop
jmp
pop
mov
sub
outs
pop
add
adc
(bad)
mov
sbb
xchg
data16
(bad)
add
pop
mov
iret
adc
bound
or
or
xchg
shr
mov
call
or
dec
or
shr
lahf
cs
pop
or
ret
push
(bad)
xor
push
sub
mov
or
pop
clc
add
mov
inc
sub
or
push
(bad)
pop
cmp
add
mov
pusha
adc
movs
clc
push
dec
loope
jbe
cmp
jne
in
pop
jle
je
aas
(bad)
mov
or
jo
adc
add
out
jge
sub
call
or
push
add
ins
sub
adc
aam
in
mov
(bad)
cld
nop
mov
aas
push
bound
mov
sbb
ret
daa
sbb
sub
(bad)
retf
push
inc
hlt
mov
retf
loopne
xor
push
jecxz
popa
or
hlt
push
cmps
push
in
mov
pop
mov
mov
mov
sbb
in
add
adc
mov
loopne
mov
push
scas
cli
add
adc
sbb
popa
add
movs
fmul
stos
addr16
movs
dec
jg
dec
shr
add
pop
jmp
add
cmp
sar
je
cmp
je
adc
ret
(bad)
cmp
je
cmp
je
cmp
mov
mov
sahf
xchg
xor
mov
inc
adc
hlt
fwait
dec
inc
or
and
jmp
push
mov
inc
jo
(bad)
or
and
adc
into
out
in
pop
cmp
pop
jmp
cmp
mov
sub
ja
add
pop
adc
nop
scas
add
sbb
push
cmp
ja
call
push
lock
cmp
add
add
out
inc
jb
js
jns
pop
jecxz
push
fimul
call
aas
xchg
add
rcr
jg
push
and
retf
and
nop
imul
sahf
std
(bad)
pop
movs
ja
test
outs
es
mov
sub
pop
repnz
nop
sar
lock
jo
jmp
test
add
addr16
and
mov
adc
mov
xlat
sub
ret
jnp
add
add
(bad)
(bad)
inc
mov
rcr
retf
repz
inc
mov
mov
add
cmp
outs
cmp
xchg
adc
push
xchg
enter
sbb
mov
jne
or
sbb
push
xor
sbb
ror
push
outs
pop
mov
cmp
dec
clc
inc
test
ds
add
sar
add
add
cdq
inc
add
loope
add
or
sbb
push
inc
or
bound
or
push
movs
inc
xor
cmps
adc
xchg
adc
cmp
pop
pop
sub
in
adc
jae
mov
daa
sub
jge
pushf
ins
lea
or
in
mov
push
pop
dec
fmul
inc
sbb
jnp
add
jmp
aas
add
inc
push
imul
test
and
pusha
ss
ds
in
mov
jne
or
add
pop
(bad)
shl
sbb
jg
ins
and
mov
and
movs
dec
pop
ins
jl
xchg
inc
stos
mov
sub
push
and
nop
out
and
jne
sub
rcr
jmp
dec
push
sub
icebp
cmp
dec
outs
test
das
mov
or
push
xchg
in
pop
cmp
pop
add
inc
call
stc
xor
jnp
(bad)
adc
add
cmp
add
in
sub
fsub
iret
mov
mov
and
in
(bad)
ret
add
out
push
aas
bound
adc
or
or
cmp
push
xchg
daa
jne
or
sub
add
mov
stos
adc
mov
xchg
xchg
push
xchg
mov
inc
retf
mov
push
into
adc
test
mov
push
lock
and
sar
mov
mov
pop
pop
or
cwde
adc
in
outs
pop
dec
nop
adc
sar
mov
lock
sub
sbb
sar
(bad)
xor
xor
sub
sbb
jne
mov
or
cmp
retf
outs
adc
or
aad
shr
rcr
ror
fisttp
mov
loopne
fcomp
rcl
and
push
mov
imul
in
mov
cli
sub
sbb
cwde
ret
mov
cwde
xchg
loope
fwait
inc
test
and
sub
dec
enter
leave
mov
je
mov
mov
xor
dec
loopne
rcl
add
sub
(bad)
rcl
cmp
jb
hlt
cmp
jb
sub
sbb
inc
loop
data16
icebp
jp
mov
repz
icebp
in
mov
pop
pop
push
jns
neg
neg
jg
rol
ficomp
add
jns
neg
neg
sbb
int
add
mov
iret
repz
in
je
(bad)
not
ja
(bad)
in
pop
mov
adc
(bad)
out
mov
jp
pop
add
cmps
mov
inc
adc
cmp
je
(bad)
outs
in
jnp
push
popw
add
pop
sbb
push
mov
aaa
and
add
add
sbb
enter
sbb
sbb
loop
call
cli
pop
sete
test
push
jne
inc
pop
xor
aas
cmp
setg
mov
inc
and
adc
push
or
mov
and
push
mov
and
inc
dec
or
fimul
shl
jb
adc
push
jb
jg
jge
out
jmp
inc
stc
sub
jmp
getsec
jmp
fadd
xor
jne
or
rcr
sbb
mov
inc
and
iret
sub
jbe
jmp
jg
mov
cdq
xchg
cdq
ds
shld
aam
adc
(bad)
adc
or
xor
jp
lock
icebp
les
or
ficom
pop
loopne
pop
cmp
addr16
sbb
pop
add
out
add
sub
jg
stos
adc
ret
cs
add
rol
fld
je
pop
jmp
add
setb
jmp
setl
cmp
or
cld
shl
das
data16
pop
jmp
push
adc
mov
pop
mov
push
ror
jg
rcl
loopne
mov
aad
mov
jle
test
jg
adc
inc
cmp
mov
nop
add
scas
add
and
dec
sbb
xchg
enter
(bad)
fadd
mul
push
add
lods
add
jg
aaa
jl
neg
imul
inc
in
in
idiv
cmp
fisttp
and
in
int
lea
jmp
push
mov
loopne
std
loopne
jge
jge
push
rcr
in
aam
xlat
pusha
scas
add
mov
sub
adc
test
lea
cmp
or
in
ins
aad
push
inc
in
xchg
jge
mov
mov
push
sub
mov
or
out
repz
int
into
stos
add
and
ret
add
pop
sub
(bad)
imul
cmp
xlat
sub
test
test
loop
ret
mov
sbb
mov
mov
dec
mov
adc
inc
mov
mov
retf
mov
out
push
or
sub
dec
nop
push
add
call
outs
icebp
fsub
pop
add
push
leave
mov
mov
pop
(bad)
mov
mov
out
iret
pop
or
pop
mov
mov
lds
and
call
es
(bad)
cli
adc
xchg
jle
sub
cmp
jle
fisubr
pop
mov
imul
dec
adc
clc
inc
(bad)
pop
push
xchg
loope
popa
cmp
hlt
xchg
mov
push
pop
jo
in
adc
xor
hlt
add
mov
pop
mov
xchg
(bad)
popa
adc
xchg
cwde
cld
cmp
mov
cmp
and
dec
sbb
xchg
adc
xor
das
test
add
xor
add
dec
jne
dec
sbb
adc
mov
cld
adc
inc
pop
sub
dec
and
imul
rol
adc
dec
jl
fmul
inc
push
mov
stos
pop
pop
jbe
add
dec
inc
clc
or
jge
jmp
jb
pop
js
out
mov
cmps
add
push
lods
shl
mul
jg
loope
rcr
lds
retf
jle
pop
or
dec
rsm
dec
add
cmp
adc
cli
xor
inc
leave
into
sar
aam
adc
cmp
je
jmp
and
push
in
mov
out
retf
sub
cld
(bad)
(bad)
mov
jg
mov
add
call
test
fcmovnbe
rol
cmp
push
pusha
mov
and
jmp
inc
dec
scas
sbb
add
rol
(bad)
jne
xchg
mov
push
push
mov
push
fdiv
outs
sbb
mov
shr
ror
jl
inc
sub
push
ds
std
dec
bound
mov
shr
sub
sbb
inc
sbb
push
xchg
xor
dec
cmp
movs
xchg
(bad)
hlt
jnp
fidivr
shr
push
jge
loop
(bad)
mov
adc
push
mov
retf
add
add
ror
cmp
sbb
cmp
or
mov
or
push
aam
jmp
jmp
jo
ret
add
sub
ss
mov
gs
inc
push
pop
je
popa
outs
ins
pop
outs
bound
std
mov
mov
sub
push
outs
cmp
sub
sub
push
ins
or
in
out
jge
dec
sub
outs
push
push
xchg
sbb
fistp
mov
inc
inc
les
dec
inc
push
jno
arpl
sbb
jo
sub
outs
pop
jb
add
popa
sub
popa
sub
aaa
jae
lods
cmp
outs
outs
pop
outs
jae
pop
add
das
pop
fs
inc
xor
inc
sub
sub
push
aaa
aaa
aaa
nop
sbb
mov
jg
adc
sbb
ins
sub
jb
jnp
cmp
dec
inc
jae
cmps
neg
jl
jl
push
inc
dec
jae
push
test
or
xchg
bound
ror
inc
inc
pop
push
inc
jae
aaa
xchg
popa
aaa
div
push
inc
mov
in
bound
inc
dec
ss
movs
cmp
aaa
outs
outs
cmps
mov
push
dec
dec
inc
das
pop
push
adc
sbb
mov
lea
clc
push
setae
add
or
inc
fild
mov
push
pusha
xor
ss
into
sub
push
les
ss
push
adc
jne
push
add
push
ja
nop
ss
sub
adc
xlat
(bad)
repnz
push
call
sub
cld
cmp
out
add
sub
sub
jmp
test
and
jne
xor
dec
mov
ret
mov
leave
push
movs
pop
pusha
jge
push
push
popf
sub
mov
add
inc
adc
jmp
fs
dec
jne
bound
inc
nop
mov
jmp
jmp
stos
pop
mov
jne
add
mov
jo
dec
sbb
fstp
dec
dec
mov
xchg
call
stos
cmp
xor
lea
inc
xchg
cmps
xor
lock
es
jecxz
push
add
mov
mov
xchg
(bad)
movs
cwde
lea
fimul
cld
sar
loope
cmp
fld
adc
ja
mov
movs
cmc
cmp
cmp
fild
pop
clc
shr
ret
pop
shr
xor
push
jae
sti
dec
jmp
sbb
in
push
inc
mov
ret
sub
loope
outs
fst
jae
cmp
inc
dec
push
cmp
(bad)
outs
nop
push
mov
fisub
mov
pop
ficom
jge
push
fldenv
movs
(bad)
pop
and
lea
push
mov
push
xchg
or
inc
pushf
movs
(bad)
pushf
fadd
outs
shr
sub
mov
add
lds
pop
call
movs
mov
sub
or
inc
mov
stos
push
sbb
jne
sbb
push
jg
test
adc
cmps
aad
pop
dec
ins
push
jns
cmp
adc
sbb
int3
xor
cmp
sub
mov
lea
mov
je
loopne
sbb
mov
cdq
es
cs
popf
mov
mov
and
dec
bound
rol
jmp
dec
jge
mov
pushaw
in
dec
in
mov
out
imul
leave
adc
and
adc
jecxz
add
mov
ss
add
and
xor
loope
xchg
out
mov
add
shl
mov
and
push
lods
int
shr
hlt
push
or
inc
and
or
xor
sbb
adc
mov
mov
inc
inc
dec
repnz
dec
sbb
push
mov
sbb
dec
imul
xchg
inc
jmp
adc
and
cmps
jmp
ins
xor
mov
adc
push
das
mov
cmp
test
jecxz
movs
sub
rol
inc
or
jmp
iret
xchg
cli
or
cmp
xor
push
(bad)
lds
ret
jl
mov
sti
pop
rcr
push
in
leave
inc
push
or
das
xchg
push
sbb
test
dec
mov
cmc
loopne
inc
cdq
pop
inc
cmp
cmp
movs
pop
jg
js
pop
ins
cmp
sbb
(bad)
xchg
jl
cs
pop
fucomi
lock
inc
add
adc
push
mov
jmp
mov
sub
sar
jns
adc
sub
jbe
jae
in
cmp
sar
xchg
sub
sar
pop
rol
add
inc
cmp
mov
xor
push
add
ret
add
push
imul
sub
in
mov
sub
std
stc
mov
push
add
jg
mov
ja
xor
and
ret
dec
push
push
imul
(bad)
sbb
inc
rol
cmp
test
add
push
scas
push
outs
addr16
popa
je
fld
add
rcl
and
jne
ins
jne
retf
adc
out
popa
jmp
mov
sbb
inc
cmp
or
daa
bound
xchg
retf
lea
call
mov
pop
in
add
dec
call
xchg
je
cmp
lods
jg
or
push
ss
ja
cmp
pop
pop
ret
ret
pusha
xor
sar
shl
popa
and
add
pusha
cwde
xor
shl
mov
ja
add
mov
push
ins
movs
and
inc
or
or
fwait
mov
pop
push
jns
and
push
les
and
data16
jecxz
shl
imul
jge
arpl
fs
outs
cs
add
jg
mov
ins
jae
add
add
inc
add
aam
jnp
imul
jb
or
in
ds
outs
add
imul
imul
push
rol
add
cmp
jae
or
dec
sub
cdq
xchg
sbb
ret
cdq
add
cmp
lds
popf
or
sti
je
mov
test
cmp
inc
mov
aas
js
sub
xlat
stos
das
test
iret
sahf
and
(bad)
jnp
stos
and
pop
or
popf
hlt
setne
test
je
pop
leave
adc
jne
js
adc
arpl
pushf
call
(bad)
pop
mov
stc
(bad)
scas
sbb
(bad)
or
(bad)
xchg
or
push
xor
inc
or
push
push
js
aad
pop
(bad)
sub
call
sub
(bad)
add
movs
adc
lods
mov
(bad)
cmc
popf
or
mov
leave
xchg
push
mov
ret
jmp
mov
in
push
sbb
ror
sbb
push
aad
adc
call
in
pop
mov
sbb
mov
jo
xchg
dec
add
imul
xor
pop
in
dec
add
and
mov
xchg
scas
inc
xor
in
pop
xor
ror
(bad)
push
add
mov
xchg
jb
xor
fdivr
jo
mov
inc
and
jmp
jne
test
mov
mov
pushf
mov
pushf
shr
dec
and
mov
jne
in
push
xchg
pop
mov
into
aaa
in
mov
jne
popa
call
into
sahf
or
inc
xor
cmps
sub
dec
jnp
movs
sub
call
jmp
stos
mov
call
leave
inc
sbb
frstpm(287
repnz
scas
ror
in
or
scas
mov
lahf
push
addr16
aaa
(bad)
repz
dec
hlt
inc
pop
push
fs
ret
loopne
ret
addr16
std
lods
outs
mov
mov
pop
je
addr16
mov
adc
cmp
mov
sbb
or
pop
dec
jge
dec
ror
inc
xchg
inc
ffreep
mov
lock
xor
pop
jne
push
mov
dec
push
add
jecxz
dec
fstp
pop
jg
aad
adc
jmp
(bad)
mov
mov
pop
mov
mov
add
outs
jmp
dec
ror
cmps
adc
movs
fsub
movs
dec
jmp
mov
add
jno
shl
rol
jne
mov
mov
mov
cdq
dec
(bad)
dec
(bad)
sbb
clc
jmp
mov
mov
lock
dec
loopne
sbb
add
jbe
mov
pop
add
push
inc
xor
mov
sbb
(bad)
mov
mov
clc
add
cmp
push
push
mov
jp
pop
add
sbb
addr16
clc
fcomp
ret
sbb
add
into
ret
inc
dec
jmp
push
js
add
inc
add
xor
iret
cmps
pop
adc
mov
mov
mov
dec
sahf
dec
in
add
pop
cmps
mov
fld
les
js
inc
fild
or
cwde
jb
or
adc
inc
sbb
mov
pop
cmp
jmp
sbb
push
loopne
add
and
cmp
mov
rcl
into
arpl
lods
mov
repnz
into
lods
mov
shr
xor
(bad)
pop
push
pop
pop
add
adc
and
ja
pop
(bad)
jmp
xchg
cmps
es
jle
jg
pop
test
adc
mov
push
loop
cmp
fild
mov
(bad)
sub
sbb
sub
ret
jnp
ds
dec
dec
dec
cld
xchg
imul
push
push
jbe
inc
push
clc
and
jae
ss
cmp
jb
or
push
cmp
or
inc
(bad)
out
push
dec
test
sbb
push
and
clc
out
fdiv
adc
fbstp
dec
push
xor
or
pop
and
sbb
cmp
sub
sbb
push
scas
add
adc
dec
mov
pop
test
jo
dec
pop
pushf
cmp
ss
outs
add
jb
scas
pop
adc
das
jl
movs
add
adc
loopne
jns
or
loopne
jl
pop
outs
int3
lods
mov
add
inc
pusha
test
jno
pop
pcmpgtd
mov
push
scas
enter
or
and
inc
mov
mov
aaa
daa
pop
ret
or
jmp
jge
fst
out
pushf
std
or
test
jb
enter
stc
je
lea
or
push
out
nop
xor
out
jmp
nop
nop
nop
push
xchg
mov
setb
dec
js
mov
and
xchg
and
sub
adc
sub
imul
inc
mov
das
shl
add
dec
add
mov
push
(bad)
and
sbb
aaa
and
cmps
mov
add
and
dec
or
or
test
add
cmp
arpl
inc
mov
jo
add
mov
test
xchg
add
mov
pop
ret
sub
or
add
add
sbb
das
pop
or
adc
sbb
add
mov
dec
sti
push
add
aas
sbb
pop
xchg
(bad)
fcom
loope
stos
jo
add
ja
adc
sti
mov
and
or
(bad)
adc
mov
or
and
mov
or
dec
add
dec
dec
sbb
mov
inc
or
inc
or
add
jns
add
mov
add
mov
into
mov
xchg
fcomp
or
jbe
jnp
mov
mov
push
fcom
mov
sub
ret
stos
pop
lock
dec
jmp
xchg
retf
iret
(bad)
cld
sub
jb
clc
hlt
lock
sub
mov
call
mov
inc
sti
dec
in
push
adc
addr16
and
das
ss
dec
push
arpl
dec
mov
mov
push
out
rcr
or
mov
jle
stos
xor
mov
and
cwde
es
jns
push
in
ins
js
cmp
mov
mov
pusha
js
ret
ror
pop
mov
push
arpl
stos
adc
inc
sub
dec
or
dec
lea
mov
mov
xchg
lock
test
or
lea
ficom
pusha
dec
ja
test
dec
inc
and
push
pop
rcl
in
mov
pop
sbb
adc
mov
shl
and
fmul
pop
fidivr
adc
loopne
sbb
mov
sub
enter
ds
sahf
enter
icebp
push
rcl
add
mov
sar
rcr
fnstenv
movs
inc
push
gs
xor
or
push
add
mov
ins
rcr
inc
scas
and
aam
sub
push
add
sbb
rol
clc
std
cmp
out
add
test
outs
and
pop
aas
mov
cs
pop
inc
pop
add
clc
sbb
or
mov
jo
retf
test
das
and
dec
mov
adc
sbb
je
add
xchg
fisttp
dec
push
add
mov
or
xchg
mov
adc
pop
add
adc
push
sub
in
in
or
push
fstp
pusha
add
(bad)
fst
jns
clc
mov
sti
push
inc
xor
push
outs
adc
and
in
nop
fcmovb
lock
test
xlat
lods
add
adc
or
fisubr
jge
test
add
pop
shl
cmp
sbb
mov
das
lock
ret
cmp
sub
jne
fs
xor
ret
cmp
movs
pusha
add
cmp
cmp
ins
jne
sbb
push
int
popf
mov
std
add
and
lods
std
in
or
std
jg
shl
and
inc
cmp
sbb
jg
dec
loope
add
sbb
outs
xchg
mov
inc
jo
push
cmc
push
jo
mov
sbb
sub
adc
sub
jecxz
(bad)
push
mov
push
push
add
mov
add
add
ss
retf
(bad)
mov
mov
cmp
mov
imul
or
cmp
dec
sbb
inc
xchg
mov
ret
push
in
loopne
pop
xchg
mul
outs
in
sbb
push
jae
mov
retf
mov
push
sti
dec
stos
and
mov
mov
sub
and
or
jno
shl
add
add
pop
add
jge
lods
dec
nop
loopne
or
mov
push
push
pop
lock
cmc
xchg
mov
push
cmp
jne
sbb
push
or
jne
or
push
bound
push
cwde
push
ret
mov
xor
sbb
or
cmp
push
push
xchg
or
sub
push
and
ja
add
rol
xor
jnp
cld
xchg
push
sub
mov
inc
cs
sub
dec
sub
xlat
jmp
sbb
inc
inc
dec
je
mov
cmp
stos
and
movzx
add
pop
aaa
sub
push
jmp
push
inc
popa
sbb
pop
jg
fisubr
add
mov
add
mov
test
icebp
mov
das
xchg
add
mov
inc
stos
add
retf
cmp
clc
or
or
inc
push
mov
xor
xchg
dec
les
add
inc
mov
mov
fmul
or
cmp
imul
xchg
add
je
inc
cmp
xchg
pop
add
adc
xchg
and
push
cmp
adc
inc
mov
add
sub
popa
rcpps
push
scas
pop
mov
arpl
add
and
cmp
arpl
imul
inc
add
xor
dec
jae
out
pop
or
adc
cwde
mov
add
ret
enter
mov
add
and
repnz
add
add
in
ret
and
dec
push
adc
aad
stos
and
ret
in
ret
aad
push
or
gs
ret
movs
mov
lds
vxorpd
aad
push
mov
mov
(bad)
(bad)
push
push
and
daa
test
add
push
cmp
call
inc
ds
int
and
inc
sub
popf
fadd
and
adc
xchg
gs
les
and
popa
jg
in
movs
mov
into
mov
cmc
add
popa
push
cs
dec
sub
ror
fadd
loope
js
dec
or
arpl
retf
push
es
push
icebp
add
pop
or
jbe
(bad)
sub
inc
fldenv
xchg
push
lea
mov
pop
xchg
fadd
inc
cmp
sub
jle
loopne
test
fmul
es
je
gs
jo
ret
add
mov
fbld
cmp
jae
aam
lods
dec
fadd
or
add
jno
into
or
inc
outs
je
or
loope
nop
shr
ins
fucomp
in
jne
aam
adc
xchg
in
add
jo
outs
daa
fwait
or
push
adc
cdq
sbb
(bad)
fld
xchg
jecxz
and
push
stc
add
add
fldln2
in
bound
dec
adc
add
sbb
lock
lock
dec
inc
js
fadd
add
add
mov
push
lds
inc
aas
add
mov
pop
mov
add
js
cmps
or
mov
add
pop
test
dec
add
js
rol
lds
or
cmc
mov
cmps
in
and
add
push
gs
jnp
push
in
popa
dec
jne
pusha
sub
xchg
pop
xor
cmp
sbb
jmp
test
push
and
cmc
pop
inc
or
arpl
inc
cmp
into
jae
sbb
jo
je
inc
mov
aas
push
inc
jae
jae
test
dec
pop
add
mov
dec
mov
push
xor
adc
push
(bad)
adc
add
or
xchg
dec
mov
adc
sar
gs
add
jno
mov
and
dec
adc
add
adc
dec
push
push
adc
cmps
loopne
push
inc
sbb
adc
js
mov
xor
push
sub
jo
and
sti
push
imul
push
(bad)
push
fsub
arpl
cmps
or
inc
add
aaa
(bad)
pop
js
add
add
add
outs
or
add
xor
inc
hlt
or
ins
popa
jne
add
jmp
push
add
ret
adc
ficomp
pop
mov
adc
cdq
jmp
cmp
fidivr
cmp
mov
test
push
pop
addr16
pusha
sub
xchg
lock
movs
add
hlt
idiv
sub
jb
je
dec
je
push
and
sub
or
ins
je
push
xchg
adc
jmp
popf
add
sbb
sub
inc
and
rol
jmp
add
xor
pop
scas
hlt
mov
aaa
cmps
inc
push
pop
jmp
mov
cmp
or
cmp
push
and
pop
aaa
mov
ror
bound
push
inc
mov
add
dec
push
inc
or
fisttp
pop
or
(bad)
fisttp
pop
mov
add
sar
pop
aad
sbb
jnp
mov
jnp
jo
stos
inc
add
test
fimul
call
fsub
ins
imul
pop
sub
inc
xlat
fisub
push
push
int
dec
add
or
scas
adc
inc
cmp
and
push
add
add
loopne
push
jl
ja
push
sti
mov
(bad)
clc
shr
or
cmp
pop
mov
cmp
jl
cmp
jge
retf
jl
pop
push
pop
xor
jb
rcl
shl
inc
jl
repnz
mov
add
ins
popa
out
retf
mov
rcr
push
adc
or
dec
fs
mov
and
adc
inc
cmp
mov
mov
xchg
inc
data16
and
je
jle
jl
mul
add
sub
rol
add
push
cwde
push
adc
add
call
xor
mov
loop
and
dec
arpl
icebp
lods
jp
fistp
bound
dec
sbb
retf
outs
mov
sbb
imul
xor
fwait
push
dec
gs
jo
or
mov
add
test
mov
add
lods
mov
out
ss
mov
je
lock
leave
(bad)
aaa
hlt
xor
ja
fwait
sbb
jno
adc
fs
jmp
clc
push
mov
fisttp
or
js
outs
inc
popa
jae
fnstenv
out
test
push
retf
add
inc
push
dec
add
test
js
add
outs
outs
cmps
shr
shl
aas
xor
mov
in
arpl
mov
pushf
fmul
or
sbb
outs
aad
mov
adc
imul
or
daa
xchg
push
scas
daa
in
out
les
dec
or
jno
outs
xor
jle
jb
lss
adc
loopne
ror
outs
inc
outs
je
push
fs
imul
xchg
jb
xor
pop
dec
jmp
mov
xor
pop
icebp
cmp
nop
xor
data16
ins
fs
push
mov
or
je
arpl
adc
gs
xor
imul
je
cmp
ja
jge
scas
sbb
(bad)
jmp
mov
add
out
or
mov
out
adc
or
xchg
das
jl
xor
push
nop
sub
xchg
(bad)
dec
sar
sbb
or
jae
pop
mov
dec
ins
arpl
fs
xor
or
sar
or
lahf
dec
outs
jne
(bad)
scas
rcl
lahf
or
aaa
imul
or
or
xchg
fs
or
(bad)
in
das
jp
or
fcmovnbe
loopne
or
int3
ret
dec
adc
adc
xchg
fs
or
and
mov
sbb
out
popa
loop
(bad)
pop
aam
push
aam
outs
aad
dec
add
(bad)
push
js
mov
mov
jne
adc
sbb
ds
or
inc
pop
or
or
mov
inc
sub
sahf
arpl
es
movs
mov
fsubr
in
xor
xor
pop
xchg
sub
dec
jp
and
call
jbe
(bad)
aad
cld
mov
jne
jbe
sub
push
imul
jnp
or
aaa
ins
ja
pop
dec
fdiv
sbb
jnp
push
sub
cmp
or
push
daa
pop
pop
daa
fidivr
cwde
mov
das
aam
ret
push
addr16
push
arpl
ins
ins
inc
jnp
jb
pop
and
xor
jae
push
stc
sub
adc
outs
es
popa
addr16
cmp
adc
adc
cmc
pop
pop
adc
cmps
imul
lock
or
jl
int
jecxz
inc
aas
pop
(bad)
mov
add
mov
mov
lods
je
push
ins
jl
add
outs
jb
mov
ds
jo
sar
sar
xor
mov
fild
push
dec
dec
dec
inc
clc
xor
push
push
pop
dec
inc
push
inc
inc
pop
dec
dec
push
inc
or
iret
add
sbb
les
or
or
iretw
push
add
daa
adc
inc
dec
or
jbe
add
fs
mov
add
ins
xor
out
xor
push
or
dec
push
push
pop
inc
in
push
pop
rcr
cmps
mov
add
cmp
add
jmp
data16
mov
(bad)
dec
inc
jb
mov
rol
push
gs
fsubr
cwde
aas
sbb
jne
mov
adc
inc
push
out
cld
or
inc
adc
inc
inc
pop
inc
inc
inc
push
inc
and
jecxz
das
pop
add
push
add
push
inc
pop
xor
jno
lds
inc
enter
sbb
push
jne
rcl
ror
xor
or
and
xor
jo
jae
aaa
(bad)
add
adc
push
dec
ins
inc
jp
outs
cmp
xor
xor
inc
push
jo
jb
sbb
sbb
adc
adc
mov
xor
mov
shl
xchg
mov
add
es
(bad)
jne
hlt
les
or
or
fsub
cmp
xor
push
add
nop
(bad)
push
fld
dec
push
dec
inc
pusha
mov
das
add
dec
xor
lock
test
pop
dec
inc
inc
mov
dec
xor
inc
hlt
dec
inc
push
das
mov
imul
outs
push
push
push
dec
xchg
int3
das
add
inc
sub
(bad)
xor
push
out
repnz
enterw
das
adc
movs
sbb
call
sub
shl
add
push
shr
inc
aaa
add
xchg
(bad)
push
cmps
retf
das
je
jmp
dec
sub
jo
jo
sub
imul
jae
xor
or
adc
push
or
adc
pop
inc
or
les
or
mov
push
jecxz
dec
ret
push
ret
adc
mov
imul
pop
adc
enter
bound
mov
mov
or
lock
inc
dec
out
dec
sub
or
cmc
mov
(bad)
xor
xor
and
jmp
jle
pop
inc
dec
stos
adc
stos
xor
or
rol
dec
jo
mov
rol
dec
push
gs
sub
inc
enter
nop
les
mov
or
loopne
int3
fidiv
mov
dec
ins
clc
pop
lock
ja
fdivr
push
pop
sbb
pop
pop
jbe
mov
or
sub
mov
imul
xor
sahf
popa
jb
xlat
or
xchg
inc
das
fwait
ss
ja
jg
das
(bad)
pop
das
fwait
jbe
ror
inc
(bad)
cwde
das
fldenv
push
vpmacssdqh
add
fstp
xor
popa
pop
lods
pop
retf
inc
xchg
inc
push
push
cmp
or
adc
pop
mov
dec
sbb
aad
je
sub
mov
adc
imul
pop
inc
arpl
push
nop
jbe
aaa
adc
in
or
ja
std
outs
xlat
cmp
xor
xchg
xor
neg
call
inc
inc
add
push
cwde
loopne
stos
sub
arpl
fild
xor
push
arpl
mov
outs
jb
aas
sub
cwde
add
sbb
shl
ins
mov
pop
and
ins
and
inc
sbb
les
clc
jbe
int3
jg
push
ins
cli
daa
call
lahf
xor
cmp
xchg
sub
mov
pop
or
push
mov
inc
inc
int
mov
adc
jno
jb
bound
and
add
and
xor
out
pusha
test
es
gs
or
sbb
mov
out
dec
(bad)
adc
in
mov
xor
hlt
inc
push
sub
or
inc
movs
rcr
fistp
imul
sub
fsub
je
popa
ret
mov
add
or
sbb
add
popa
add
or
cvttps2pi
lods
mov
mov
xchg
xor
dec
pop
and
xor
push
jae
sbb
sub
outs
jb
popa
and
jo
test
mov
push
inc
inc
dec
inc
cli
xor
sbb
ficom
pop
loope
in
adc
enter
xor
mov
push
in
fidiv
in
loope
pop
dec
adc
push
dec
sbb
push
pop
pusha
xor
(bad)
invd
rcr
add
cmps
add
sbb
push
pop
ins
adc
outs
sbb
std
push
test
dec
push
jmp
and
outs
clc
lods
fadd
repz
jl
jg
adc
call
and
outs
fs
mov
xor
stos
or
pushf
or
adc
es
fistp
pusha
js
or
push
mov
shl
outs
arpl
jge
dec
outs
lods
or
dec
outs
ret
mov
arpl
loopne
push
or
xor
ja
imul
push
(bad)
push
outs
inc
outs
js
jmp
jo
cs
data16
pop
push
pop
sbb
loopne
add
mov
out
inc
pop
or
scas
mov
inc
push
push
push
push
in
call
inc
dec
inc
jno
ja
inc
inc
je
sbb
out
ja
popa
test
pop
adc
outs
arpl
pop
jo
inc
inc
inc
div
xor
xor
inc
inc
xor
xor
inc
inc
inc
inc
xor
xor
cmp
mov
xor
and
push
and
mov
aas
adc
adc
cmp
cmp
add
mov
cld
xor
xor
mov
(bad)
jb
jb
(bad)
aam
jb
jb
int3
enter
jb
sar
mov
test
jb
jb
mov
jb
jb
mov
jb
jl
je
daa
daa
daa
jo
push
ja
or
xor
xor
adc
ins
add
cmp
in
loopne
push
inc
and
or
sbb
dec
loope
adc
adc
nop
push
sbb
js
xor
dec
mov
xlat
sbb
sbb
daa
mov
andps
dec
cmp
mov
jbe
nop
outs
das
lods
lods
iret
inc
jg
pushf
pop
in
cmp
cmp
pushf
pushf
pushf
pushf
sub
and
pushf
pushf
pushf
pushf
sbb
adc
pushf
pushf
pushf
pushf
or
add
xchg
xchg
mov
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xchg
xchg
xor
jo
dec
js
cs
in
cmp
pcmpgtb
in
in
pop
push
push
in
in
dec
dec
inc
inc
in
in
cmp
xor
in
in
sub
and
in
in
sbb
adc
in
in
or
add
jb
pop
lock
das
out
pmuludq
jb
jb
in
call
jb
(bad)
aam
jb
jb
int3
enter
jb
jb
mov
jb
lods
test
mov
pushf
cwde
xchg
nop
jbe
and
scas
mov
mov
in
in
test
in
je
ins
push
fs
pop
pop
in
in
push
push
dec
dec
in
in
inc
inc
cmp
in
in
xor
sub
in
in
and
sbb
in
in
adc
or
adc
test
add
aas
add
ret
xor
punpckhbw
fucomi
bound
aas
fmul
aam
mov
enter
cmp
sar
mov
test
cmp
cmp
mov
xchg
mov
cs
in
bound
js
jb
xlat
je
(bad)
push
fs
pop
pop
daa
daa
daa
daa
push
push
dec
dec
daa
daa
daa
daa
inc
inc
cmp
daa
daa
daa
daa
xor
sub
daa
daa
daa
daa
and
sbb
daa
daa
daa
daa
adc
or
jmp
adc
add
paddb
das
pmuludq
in
in
in
call
in
in
aam
int3
in
in
enter
in
in
mov
in
in
movs
mov
in
xchg
nop
mov
in
in
test
call
loop
nop
xchg
fucomi
out
je
jo
ins
push
fs
pop
pop
xchg
or
cmp
xchg
xchg
xchg
xchg
inc
dec
inc
cmp
xchg
xchg
xchg
cmp
sub
xchg
xchg
xchg
sub
sbb
xchg
xchg
xchg
sbb
or
xchg
xchg
xchg
or
cld
sub
jb
jb
sub
sub
cmp
pavgb
cmp
cmp
fcom
ror
cmp
cmp
enter
mov
fisub
test
shrd
shld
cwde
xchg
nop
xchg
xchg
xchg
xchg
mov
xchg
xchg
jl
je
xchg
xchg
xchg
xchg
ins
push
xchg
xchg
pop
pop
push
push
cs
xchg
xchg
dec
dec
inc
inc
dec
dec
dec
dec
cmp
xor
pop
dec
dec
dec
sub
and
and
sbb
xor
xchg
fnstsw
rol
das
call
(bad)
jg
adc
push
mov
xchg
mov
jnp
cmp
repz
adc
sbb
and
xchg
and
cmp
pop
ret
sub
mov
call
jno
in
add
push
in
ret
mov
cmp
mov
push
and
sbb
std
push
in
lock
fbstp
add
pop
inc
push
sbb
arpl
inc
pop
or
dec
cmp
xchg
(bad)
scas
mov
aad
mov
outs
add
addr16
shl
and
push
mov
add
mov
out
inc
outs
add
jae
pop
pop
inc
pop
in
jnp
push
cs
push
dec
das
inc
aas
jle
mov
dec
add
push
push
add
dec
push
push
add
(bad)
rol
push
push
or
pop
push
in
mov
dec
add
push
push
ds
shl
in
sub
mov
mov
push
in
pushf
cwde
cwde
add
pop
mov
jo
pop
aad
sbb
add
cmps
dec
add
fldenv
mov
push
ins
neg
mov
xor
jl
mov
das
loope
cmp
ret
test
test
jo
or
mul
lock
psllw
pushf
pushf
pushf
pushf
repz
cmc
neg
stc
cli
pushf
pushf
pushf
pushf
sti
cld
std
(bad)
pushf
pushf
pushf
pushf
jmp
loope
pushf
pushf
pushf
pushf
jecxz
in
pushf
pushf
pushf
pushf
out
jmp
pushf
jmp
in
out
pushf
pushf
pushf
pushf
out
rcl
rcr
aad
pushf
pushf
pushf
pushf
xlat
fcomp
ficomp
fstp
pushf
pushf
pushf
pushf
ffreep
rol
pushf
pushf
pushf
ret
(bad)
(bad)
pushf
pushf
pushf
(bad)
enter
pushf
pushf
pushf
retf
int3
int
pushf
pushf
pushf
pushf
iret
mov
mov
pushf
pushf
pushf
mov
mov
pushf
pushf
pushf
pushf
mov
mov
pushf
mov
pushf
pushf
pushf
mov
pushf
pushf
pushf
mov
pushf
pushf
pushf
cmps
test
stos
pushf
pushf
pushf
pushf
stos
lods
lods
scas
pushf
pushf
pushf
pushf
scas
nop
xchg
xchg
pushf
pushf
pushf
pushf
xchg
xchg
xchg
xchg
pushf
pushf
pushf
pushf
xchg
cwde
cdq
call
popf
sahf
pushf
pushf
pushf
pushf
lahf
add
add
xchg
pushf
pushf
mov
pushf
(bad)
jo
jb
pushf
pushf
pushf
jae
jne
pushf
pushf
pushf
pushf
ja
jns
pushf
pushf
pushf
pushf
jnp
jge
pushf
pushf
pushf
pushf
jg
popa
bound
gs
pushf
pushf
pushf
addr16
pushf
pushf
imul
pushf
pushf
pushf
outs
push
push
push
pushf
pushf
pushf
pushf
push
push
push
push
pushf
pushf
pushf
pushf
push
pop
pop
pop
pushf
pushf
pushf
pushf
pop
pop
pop
pop
pushf
pushf
pushf
pushf
pop
inc
inc
inc
pushf
pushf
pushf
pushf
inc
inc
inc
inc
pushf
pushf
pushf
pushf
inc
dec
dec
dec
pushf
pushf
pushf
pushf
dec
dec
dec
dec
pushf
pushf
pushf
pushf
dec
xor
xor
xor
pushf
aaa
cmp
cmp
cmp
pushf
aas
and
and
and
sti
jge
dec
adc
add
pop
jb
sub
jne
sub
xchg
repz
aaa
add
add
sahf
rol
jmp
dec
cmp
pop
lods
add
ret
mov
pop
rcr
les
inc
add
ss
fcomp
loope
test
scas
inc
sbb
shl
arpl
xchg
out
sub
ret
cmps
jmp
out
mov
imul
and
jmp
pop
push
or
or
enter
add
ins
je
cmp
cmp
cs
inc
shl
rcl
push
push
mov
add
mov
std
cmp
fild
test
mov
pushf
mov
add
and
add
test
adc
loope
xor
mov
clc
mov
aam
inc
mov
xchg
je
inc
jl
cmp
bnd
inc
out
jns
popa
sub
in
mul
add
mov
cmp
xchg
in
dec
stos
je
sbb
data16
sbb
ins
cld
imul
pop
sub
add
mov
pop
cmp
mov
inc
(bad)
shl
add
add
add
cmp
bound
push
xchg
int3
xchg
rcr
rol
arpl
std
add
dec
push
add
push
pop
jb
push
fild
pop
jmp
imul
adc
sub
sub
and
data16
mov
scas
mov
sar
or
inc
push
dec
xchg
fdivr
mov
(bad)
cmc
and
jmp
cld
and
call
cs
dec
sahf
ss
mov
and
add
xchg
mov
and
add
add
add
inc
call
add
add
add
aaa
std
jg
add
jo
add
add
rol
loopne
test
and
xor
inc
add
call
add
sbb
add
rol
loopne
lock
mov
sub
add
das
mov
and
jle
out
xor
inc
push
push
add
add
pop
sti
or
mov
rol
jmp
inc
and
add
jg
mov
xor
add
add
add
add
add
add
add
adc
out
push
loopne
lock
add
add
adc
add
aaa
cld
(bad)
xor
pusha
add
add
mov
add
stos
imul
lock
push
or
inc
push
xchg
push
loopne
adc
and
jno
sub
test
mov
dec
inc
xchg
inc
inc
cmps
pusha
and
jns
popf
push
push
adc
rol
in
mov
mov
jo
popf
ret
push
add
pusha
adc
pop
cmps
dec
add
sahf
sub
inc
data16
xor
outs
fwait
jge
xor
add
ja
or
outs
sti
jecxz
jp
add
fist
adc
push
clc
xor
inc
add
loopne
add
movs
adc
bound
out
outs
adc
lock
das
add
arpl
xor
sbb
loopne
cmp
and
sub
add
neg
test
add
add
mov
jo
add
fsubrp
inc
push
push
push
pusha
push
pop
jo
cmp
stc
retf
push
mov
pop
loopne
(bad)
cld
in
mov
sbb
mov
xor
inc
push
pop
pusha
pop
jo
pop
cld
add
add
pop
mov
fbld
ror
add
dec
or
or
or
or
outs
cmp
out
pop
push
or
jo
or
mov
or
or
or
ror
loopne
jnp
or
or
or
or
or
or
pusha
or
jo
xor
in
jg
adc
or
pop
xor
xchg
or
adc
lock
add
adc
fsubr
and
or
jnp
sub
push
or
mov
nop
push
mov
jg
or
or
push
or
or
or
daa
adc
sbb
(bad)
or
add
sub
pusha
or
jle
jle
in
add
push
out
sahf
or
add
pop
ror
or
fwait
cmps
or
ret
aaa
cld
popf
adc
or
or
inc
or
or
mov
pusha
or
adc
or
or
push
jmp
mov
es
loopne
cmps
xlat
ficomp
add
paddsb
jle
or
add
or
sti
out
cmps
fisttp
pusha
or
nop
or
sar
ror
or
xor
inc
call
push
push
pusha
push
jo
or
nop
push
mov
push
ror
loopne
lock
clc
lods
ret
add
and
xor
inc
(bad)
push
punpcklbw
jo
or
add
frstor
sub
push
push
add
mov
ja
add
cmpxchg
xor
adc
mov
add
dec
out
fcmovb
jle
ins
movntps
and
jns
inc
push
pusha
adc
adc
mov
pop
jo
rcl
rcl
je
mov
add
loopne
lock
add
push
adc
dec
adc
adc
loop
pop
call
scas
adc
pushf
arpl
xor
xor
add
pop
nop
adc
add
(bad)
mov
mov
pushf
mov
add
adc
cmps
or
call
outs
adc
adc
adc
dec
inc
adc
push
adc
or
dec
cdq
push
adc
mov
add
push
mov
or
aaa
adc
stos
adc
inc
or
jne
dec
xchg
adc
es
dec
sbb
loopne
mov
das
movhlps
cs
lahf
icebp
xor
lahf
adc
adc
adc
pop
jle
inc
cmp
adc
daa
jmp
nop
adc
pop
mov
mov
shl
add
or
fistp
adc
adc
adc
adc
adc
adc
adc
adc
sub
lahf
(bad)
pusha
adc
add
das
add
(bad)
cmp
rcl
nop
mov
sbb
adc
shl
outs
fisttp
push
or
sar
(bad)
inc
adc
adc
adc
push
xor
(bad)
imul
cmp
(bad)
mov
and
adc
jo
loope
loopne
adc
mov
in
jge
push
adc
in
ss
adc
mov
scas
jnp
xchg
das
add
lock
push
daa
jmp
push
lock
push
cwde
adc
sbb
outs
ja
add
push
push
std
loopne
jmp
div
loopne
add
dec
or
add
sub
ror
push
iret
ja
in
lock
pop
jp
(bad)
test
pop
dec
add
pop
mov
pusha
aas
movs
or
mov
or
inc
and
sub
imul
adc
add
test
in
add
push
loopne
add
loopne
js
mov
pop
nop
pop
mov
rcl
and
loopne
pop
mov
mov
dec
cli
lock
test
adc
and
xor
inc
sbb
and
xor
jo
rcr
out
outs
or
sbb
(bad)
aaa
mov
or
rcr
sbb
sbb
sbb
neg
sbb
int3
sbb
sbb
pop
adc
cld
ss
cmp
sbb
sbb
add
lock
pop
cmp
adc
sbb
jo
cld
sbb
outs
sbb
sbb
mov
sbb
dec
adc
and
loop
mov
loopne
in
sar
out
loopne
add
rol
das
add
mov
add
sbb
fidivr
push
adc
or
jbe
adc
or
push
adc
sti
mov
adc
mov
sbb
add
lods
std
neg
(bad)
pcmpgtd
adc
adc
mov
ins
fdiv
adc
add
cdq
nop
popa
adc
add
cmp
or
add
jmp
pop
xor
pop
add
or
test
add
retf
cmp
pop
or
add
pop
add
push
sbb
add
ja
mov
dec
push
add
push
ficom
out
ror
scas
add
add
js
or
fld
addr16
and
add
xlat
inc
test
jne
sbb
or
add
add
or
stc
sbb
add
cdq
sbb
add
or
or
sbb
vpermpd
adc
cmp
or
(bad)
outs
in
sbb
mov
mov
xor
add
pop
add
sbb
jne
or
jbe
test
ss
cld
or
pop
adc
in
dec
ss
pop
add
add
xchg
(bad)
adc
sbb
mov
sub
sbb
add
xor
dec
or
or
test
push
jo
add
jne
retf
in
push
mov
push
pop
jno
jo
mov
pop
pop
movs
popa
pop
xchg
pop
fstp
adc
push
pop
(bad)
lock
imul
add
pop
sar
fidiv
push
gs
sar
inc
adc
and
pop
or
or
imul
add
sub
imul
add
add
sbb
jg
jmp
call
mov
or
fistp
mov
adc
add
popf
sbb
(bad)
pop
lds
(bad)
add
pop
or
mov
pop
sbb
mov
or
or
mov
xchg
pop
sub
mov
add
pop
lahf
aas
lahf
or
pop
or
sub
inc
and
xchg
xchg
add
adc
imul
sub
mov
add
ins
cwde
mov
aas
or
test
ins
add
mov
sti
sbb
jge
mov
add
jg
add
or
add
das
xor
pop
pop
mov
lds
mov
sub
fisttp
or
(bad)
fdiv
push
adc
sub
adc
and
stc
or
pop
jo
mov
pop
sbb
sbb
lahf
pop
or
ret
or
pop
pop
jg
adc
push
dec
pop
pop
pop
sbb
rol
shl
pop
cmps
and
or
aas
adc
pusha
pop
out
xor
pop
das
add
cld
push
stc
sgdtd
add
sbb
idiv
(bad)
call
xchg
bound
sbb
cmp
imul
push
in
or
or
adc
and
jecxz
xor
stos
sub
mov
mov
aas
test
(bad)
mov
sbb
adc
mov
mov
test
pop
or
pop
cmp
sub
fs
and
(bad)
sbb
lea
mov
sub
cmp
sti
and
adc
pop
or
fistp
pusha
js
in
dec
aaa
adc
mov
sbb
pop
ins
test
or
fwait
loopne
add
xchg
or
jg
jo
movs
adc
icebp
shl
sbb
adc
and
arpl
pop
mov
pop
dec
adc
sbb
(bad)
fild
adc
imul
lods
and
fcmovu
add
add
aas
or
sub
test
sbb
imul
mov
mov
add
movs
xor
add
lock
push
adc
cmp
lock
dec
cmp
adc
or
push
adc
dec
jnp
jge
adc
xchg
out
xor
add
push
cmps
sbb
outs
push
push
cmp
imul
pop
add
push
sub
into
or
mov
mov
fwait
call
inc
or
inc
cs
gs
add
jnp
sbb
dec
sbb
and
push
add
in
jb
cmp
pop
pop
stos
pop
fcmovb
or
sbb
sbb
add
aaa
sub
(bad)
jo
add
add
jecxz
inc
bound
add
dec
les
mov
add
pop
pop
or
or
push
add
push
adc
arpl
adc
inc
cmp
inc
popa
into
push
imul
fsub
xchg
sbb
xor
(bad)
sbb
shl
or
(bad)
mov
xchg
jno
pop
in
mov
mov
popa
daa
add
cmp
setg
push
pop
and
xor
adc
inc
popa
adc
adc
mov
(bad)
(bad)
push
sbb
outs
add
sub
or
jmp
pop
adc
and
cmp
fsubr
push
(bad)
mov
pop
pop
adc
sbb
mov
pop
pop
jecxz
sub
add
sub
adc
mov
mov
or
xchg
or
mov
int
add
push
pop
icebp
or
fmul
and
dec
test
cmp
sbb
test
sbb
repz
add
jae
retf
cdq
popf
and
loop
aas
adc
lea
xor
mov
adc
mov
xchg
pop
rcr
addr16
ins
cmc
push
pop
loop
push
fistp
or
aas
aad
inc
cs
add
rol
and
dec
mov
mov
mov
mov
sbb
call
adc
mov
adc
aas
fwait
je
loopne
push
aad
dec
sbb
xchg
adc
or
test
mov
pusha
out
les
pop
push
push
lods
mov
mov
or
sbb
xchg
imul
and
push
loopne
add
retf
mov
sbb
add
adc
jo
lahf
push
aaa
push
mov
loope
fld
sbb
iret
push
push
mov
imul
xlat
je
adc
xor
and
clc
xchg
div
add
sbb
or
pop
(bad)
mov
adc
pop
pop
sbb
pop
or
pop
lea
pop
add
test
ss
adc
daa
popf
sub
add
mov
xchg
add
addr16
sbb
or
(bad)
add
std
fisubr
or
add
add
inc
inc
push
inc
jo
pop
jb
sbb
jbe
nop
fcomp
xor
sbb
test
adc
add
ins
or
sti
pop
sub
sbb
adc
add
cmp
sbb
sbb
jnp
sbb
sub
fidiv
bound
fwait
add
add
add
push
pusha
or
nop
cli
adc
jmp
mov
punpcklbw
jo
jge
ins
ins
add
push
add
add
into
ss
adc
add
push
xchg
xchg
pop
icebp
jle
mov
pop
inc
jo
mov
add
mov
mov
push
mov
adc
test
xchg
push
and
push
dec
jb
stos
or
adc
mov
xchg
adc
add
and
fiadd
xor
pop
xor
test
or
ficom
pusha
mov
pop
push
aaa
pop
dec
xor
fiadd
mov
sar
pop
mov
mov
and
push
in
shl
mov
add
pop
pop
mov
dec
repnz
(bad)
jnp
in
pusha
pusha
in
sub
inc
inc
pop
inc
shl
dec
xchg
xor
xchg
push
les
add
scas
pusha
xchg
rcl
fdiv
pop
lock
push
cmp
out
inc
add
adc
mov
adc
add
or
add
add
nop
adc
dec
das
rol
mov
fadd
add
in
adc
pop
lock
add
add
inc
adc
cdq
(bad)
aas
jo
sub
fsubr
add
add
pop
xchg
bound
mov
shl
mov
lock
shl
mov
movups
sbb
lea
cwde
pushf
and
ror
das
fcmovb
jbe
shl
pand
or
mov
ror
out
mov
enter
adc
xor
xchg
pop
cmovo
add
sub
mov
jmp
popa
jp
ins
or
call
(bad)
daa
mov
add
or
adc
sbb
daa
daa
push
and
add
ins
cmp
jg
xor
enter
ds
dec
dec
adc
leave
in
adc
push
lahf
mov
add
ins
push
add
aas
add
adc
(bad)
aas
fild
mov
and
call
cdq
sbb
ret
sar
aas
pop
(bad)
(bad)
lds
aas
call
imul
push
aad
pop
push
dec
mov
in
leave
psubusw
xor
jecxz
cld
(bad)
fistp
jmp
and
lds
mov
stos
jmp
pmulhuw
aas
xchg
es
pusha
xor
movaps
jg
je
outs
jg
add
push
or
les
add
outs
fist
stos
jmp
andps
xor
and
inc
xor
aas
imul
push
push
sub
lahf
syscall
dec
adc
add
scas
lahf
dec
add
jns
das
or
or
mov
pop
btc
mov
jb
aaa
cmp
cmp
jb
cmp
fstp
cmovo
sldt
xchg
fild
inc
lahf
inc
das
inc
mov
inc
inc
cmovne
inc
inc
inc
cmp
cmp
inc
inc
dec
dec
and
dec
push
das
dec
jmp
iret
outs
loop
and
sbb
out
jg
popf
mov
xadd
push
test
or
test
inc
pushf
fnstsw
mov
and
into
pshufw
and
outs
addps
sete
(bad)
adc
cmovl
pop
jecxz
cmp
jg
dec
cs
pop
pop
icebp
aas
cvtsi2ss
shl
cmc
lahf
dec
ret
adc
scas
ins
nop
or
jg
or
daa
cmp
mov
add
inc
dec
outs
ret
out
data16
mov
test
bound
ud0
pusha
test
ds
lar
sbb
inc
jg
lds
loopne
pop
mov
sbb
pop
push
jb
push
popa
push
sbb
das
je
mov
fistp
pusha
das
mov
fild
or
mov
pop
das
pop
pop
or
inc
pop
mov
mov
jg
fild
test
inc
aas
adc
lds
push
xor
add
scas
sub
sbb
push
nop
and
adc
push
mov
push
push
mov
jo
pop
sub
inc
jg
and
lahf
adc
add
inc
or
and
add
dec
xor
sar
and
sqrtps
dec
add
adc
lahf
xor
add
add
dec
cmpxchg
je
pop
js
xchg
aam
or
fnstcw
add
mov
and
pop
add
jl
imul
adc
add
mov
movs
dec
aas
cld
sub
mov
sar
add
inc
inc
test
adc
cmp
mov
jae
shr
push
out
push
movzx
(bad)
cmp
dec
add
push
and
cmp
xor
into
or
lahf
aad
ins
mov
cs
add
es
shl
sub
pop
pop
test
and
xchg
dec
dec
jmp
imul
and
or
or
push
push
mov
xor
gs
imul
or
gs
ins
add
jbe
ja
add
sbb
ja
ret
call
mov
push
ret
dec
or
sbb
aaa
iret
pop
or
or
adc
push
imul
add
jb
ins
gs
cmp
xor
unpcklps
mov
es
arpl
push
push
out
and
imul
mov
popa
js
inc
add
adc
bnd
popa
cmp
(bad)
data16
jo
icebp
imul
mov
or
imul
sub
push
jne
push
mov
mov
cs
ins
jo
neg
fiadd
test
push
push
ins
mov
(bad)
nop
mov
or
fld
mov
add
std
movs
add
jno
clc
test
and
add
push
rcr
into
cmp
and
stc
mov
pop
push
xor
sbb
arpl
nop
outs
cwde
dec
outs
inc
and
mov
cmp
xor
js
cmps
jo
loopne
aaa
in
mov
pop
pusha
pop
pop
fucomip
cdq
jne
jno
push
and
dec
push
xor
and
ins
cmp
in
cmp
mov
sub
mov
inc
(bad)
sbb
sbb
adc
inc
xor
adc
push
mov
mov
mov
or
frstor
xor
into
mov
clc
inc
mov
sahf
xchg
iret
enter
in
in
cmp
xor
dec
call
xchg
mov
jl
addr16
das
fcom
mov
(bad)
ja
pop
aam
lods
rcr
addr16
fst
int3
(bad)
stos
pop
enter
lahf
xchg
iret
les
xor
call
xor
xchg
inc
nop
or
mov
push
loop
test
nop
and
add
lods
or
cmp
inc
fisttp
(bad)
sbb
xchg
lahf
push
outs
in
fisub
sahf
jo
in
push
dec
inc
xor
lahf
xchg
add
and
add
adc
in
mov
sbb
jns
add
aas
or
outs
ins
jne
xchg
mov
jo
sbb
or
fwait
js
or
cld
fsub
or
mov
sub
enter
mov
adc
push
cmp
pop
aad
cmp
push
push
lock
inc
ret
adc
mov
pop
add
pushf
inc
sbb
or
xchg
fist
push
add
invd
or
arpl
lods
and
cmp
fadd
mov
jge
sbb
sbb
inc
xchg
push
sbb
add
mov
jbe
in
push
into
push
jmp
dec
xchg
inc
jne
sbb
mov
pop
add
jnp
cmp
inc
add
loope
arpl
add
or
icebp
dec
rcr
jae
or
push
aam
dec
sar
mov
std
(bad)
setbe
leave
leave
rol
push
call
xchg
data16
test
adc
lods
stos
push
or
add
xchg
pop
xor
xchg
dec
or
sub
fwait
cmp
add
push
ds
lahf
cmp
inc
vmovups
adc
pop
or
adc
inc
gs
fadd
mov
fistp
push
add
cwde
jl
dec
adc
out
shl
pop
push
mov
jne
inc
movhps
xchg
add
mov
popf
inc
jge
inc
gs
push
sub
dec
lea
scas
inc
xor
clc
xchg
ucomiss
push
cmps
push
in
je
retf
or
push
pop
aaa
call
jae
fisub
lahf
add
xchg
adc
add
jg
inc
lds
add
push
mov
add
or
es
dec
in
cmp
adc
jg
sub
test
add
add
jmp
cdq
xchg
mov
mov
push
sbb
mov
add
xor
pusha
inc
fadd
xchg
xchg
and
mov
add
adc
stos
inc
or
inc
sbb
add
mov
popf
xchg
cmovbe
ret
sbb
jno
sub
add
jno
inc
inc
xchg
cmp
push
int
jg
lea
inc
arpl
imul
cmp
cmp
push
fwait
pushf
pushf
pushf
mov
data16
jo
inc
sahf
and
div
push
sbb
dec
or
mov
inc
ds
pop
adc
mov
and
call
or
jae
mov
jns
or
je
sub
loope
jne
push
mov
stos
jo
cmp
cmps
add
inc
outs
and
or
jmp
ins
aaa
jge
in
or
nop
nop
(bad)
and
inc
inc
cdq
inc
not
push
sbb
and
add
mov
xlat
pop
(bad)
or
sub
add
repz
inc
ins
xor
lods
pusha
mov
retf
adc
adc
inc
sub
or
mov
add
out
adc
xchg
mov
mov
dec
pop
push
sub
xor
pop
sbb
and
sbb
imul
sub
sub
inc
pop
(bad)
outs
ja
push
add
sysret
sub
adc
dec
add
cs
out
pop
jo
or
pop
mov
xchg
out
dec
mov
bound
add
inc
dec
or
add
mov
and
(bad)
add
jbe
and
inc
jecxz
push
add
or
inc
mov
(bad)
lea
loopne
push
inc
add
lea
out
inc
and
scas
test
inc
push
mov
aaa
mov
adc
jb
jne
push
test
push
xlat
pop
xor
test
mov
outs
rcr
setle
push
mov
outs
sbb
cmp
xchg
adc
and
inc
dec
mov
inc
sar
xchg
pop
mov
mov
pop
pusha
pcmpgtd
stos
inc
nop
dec
adc
fisttp
inc
nop
into
cmp
pop
push
lds
mov
inc
lock
ja
pop
sbb
and
sub
ja
inc
or
xchg
cmp
fs
test
cmp
dec
das
adc
add
mov
test
and
jg
inc
inc
add
sub
lods
arpl
jns
inc
lods
pop
ror
out
inc
adc
aam
pushf
mov
es
stos
syscall
push
or
jno
mov
in
dec
fild
cmp
fld
or
fild
popa
xor
mov
sub
mov
jb
cmp
mov
aaa
adc
mov
add
push
cmp
inc
push
and
add
dec
inc
xchg
dec
jns
and
jg
inc
ins
je
sti
push
ins
je
xor
xor
mov
cwde
sbb
inc
dec
gs
jo
or
dec
adc
outs
pop
enter
adc
movs
iret
jae
dec
xor
sbb
and
mov
mov
or
push
mov
(bad)
adc
xor
pop
and
mov
dec
clc
push
les
loope
adc
das
out
dec
(bad)
fsubr
or
adc
add
stc
or
mov
mov
das
inc
and
cmp
cmps
fistp
mov
stos
jns
add
das
mov
xchg
and
mov
push
pop
dec
jnp
pop
pop
and
dec
cmps
(bad)
jo
push
orps
sub
add
pop
xor
daa
mov
in
adc
pop
or
push
add
dec
or
adc
mov
inc
jbe
or
lods
femms
xchg
mov
cmps
or
outs
mov
and
pop
sbb
loopne
outs
adc
cvtps2pd
xchg
stos
dec
shl
push
ins
mov
or
adc
and
addr16
das
add
ror
js
jo
push
pushf
stos
dec
add
fld
pop
movs
rsm
stos
aaa
sbb
popf
push
inc
scas
jge
pop
and
mov
dec
fs
dec
rsqrtps
push
mov
dec
inc
stos
pusha
in
push
outs
lahf
mov
fadd
mov
mov
or
add
push
sbb
ins
mov
adc
pushf
verw
cmp
mov
fwait
or
lods
inc
pop
pop
add
jbe
cmovbe
in
push
push
and
mov
js
lods
push
loopne
dec
inc
data16
lahf
test
je
and
xchg
jne
sbb
pop
sub
(bad)
neg
cwde
setle
push
int
aaa
or
cmp
xchg
xlat
mov
lds
jmp
scas
scas
dec
daa
mov
pop
and
les
aaa
or
rcl
or
in
das
repnz
(bad)
mov
inc
arpl
pop
pop
xor
shr
mov
jbe
or
pop
pushf
cpuid
mov
lahf
or
xchg
mov
outs
adc
mov
pop
inc
pushf
stos
loopne
cmovp
inc
bound
pop
sub
cmp
pop
in
or
outs
push
or
hlt
das
cli
pop
outs
mov
add
inc
aaa
mov
pop
sbb
cmp
mov
or
pusha
scas
dec
call
nop
scas
pushf
pop
adc
cmp
push
pushf
mov
adc
mul
sub
inc
add
inc
jo
sub
cli
pop
push
add
inc
popa
arpl
mov
cmps
iret
pop
sub
sub
mov
or
in
xchg
pop
movs
rsm
pop
or
add
iret
push
add
pushf
mov
dec
(bad)
fwait
nop
mov
push
push
push
jno
ja
sub
xchg
xchg
clc
pop
(bad)
mov
dec
push
sub
pop
sbb
sub
jnp
mov
add
in
xor
adc
push
repnz
lods
push
scas
arpl
pop
xor
pop
add
shr
enter
inc
jo
outs
nop
jo
dec
inc
lds
and
inc
pusha
mov
mov
add
pushf
fld
outs
aas
push
xor
pusha
fst
pop
xor
add
or
stos
xor
and
sub
adc
jno
inc
and
bound
mov
js
(bad)
mov
mov
mov
and
iret
pop
sub
cmp
test
pop
outs
and
adc
mov
mov
push
inc
clts
push
add
test
inc
or
xor
fimul
pop
cmp
xor
adc
mov
xor
xor
bound
mov
pop
xor
andnps
xor
add
add
movs
pop
adc
jae
jb
adc
sbb
out
faddp
sbb
lods
push
fdiv
pop
neg
mov
add
dec
sub
gs
and
and
xor
or
dec
gs
pop
xchg
gs
in
or
or
xor
and
mov
and
pand
add
push
mov
or
fmul
inc
dec
fwait
dec
das
int3
movs
sbb
cmp
and
xor
imul
or
xor
into
or
pop
popf
jns
pop
xor
sbb
xor
nop
fsub
jae
imul
div
int3
ror
movs
sub
push
ja
addr16
gs
icebp
or
ret
mov
sbb
mov
mov
jecxz
arpl
xor
pusha
aaa
inc
sub
inc
dec
add
push
sub
cmp
sbb
adc
pop
js
fisttp
cmp
xor
adc
pop
sub
push
pop
aaa
cli
mov
pop
pop
push
xchg
jle
push
dec
enter
jo
xor
mov
adc
sbb
and
loopne
sbb
ror
jle
mul
adc
xor
das
jne
add
add
mov
xchg
imul
sub
pusha
xor
mov
lahf
mov
fdivr
sub
out
clc
push
dec
add
mov
popa
das
jge
inc
add
mov
ficomp
and
dec
outs
xchg
les
lods
setge
shl
fld
lock
gs
mov
mov
dec
or
outs
repz
and
or
add
pop
xchg
add
fsub
mov
inc
mov
inc
je
imul
test
sbb
pop
shl
cmps
fist
rcl
cmps
add
rcl
adc
aam
push
sbb
aam
xor
out
sahf
xlat
les
push
inc
adc
and
adc
pushf
sub
push
cs
loopne
sub
nop
xchg
call
retf
sub
shr
loopne
or
or
sbb
shl
add
mov
test
nop
add
ror
inc
icebp
push
adc
inc
fsubr
sub
inc
outs
xor
popa
pop
pusha
jnp
movs
jns
ins
gs
inc
adc
(bad)
pop
sub
jae
push
outs
mov
jae
and
pop
jb
inc
lods
jnp
fsubr
sub
adc
imul
push
dec
pop
add
popf
call
ret
cpuid
and
dec
int3
cmps
push
repz
mov
jecxz
cwde
mov
outs
adc
jb
add
add
or
hlt
ret
cmp
dec
sub
push
cmp
addr16
push
int3
sbb
loopne
mov
cmp
mov
jae
fisubr
adc
push
add
or
xor
xor
les
test
pop
inc
ret
sbb
push
imul
outs
ret
movs
mov
ds
sar
sbb
mov
fsubr
add
push
sbb
jmp
adc
les
(bad)
icebp
and
stos
fbstp
outs
imul
das
test
loop
cmps
loopne
pop
ror
jo
jbe
mov
dec
push
adc
mov
add
xchg
or
loopne
add
mov
add
mov
xchg
dec
inc
mov
scas
fsub
outs
inc
es
clc
xor
inc
in
jns
outs
inc
cmps
mov
(bad)
inc
jmp
daa
daa
and
daa
daa
daa
int3
fucomi
add
adc
cs
(bad)
out
out
pop
seto
(bad)
fld
or
xchg
push
mov
rol
(bad)
outs
bound
inc
dec
leave
es
pop
push
add
pop
mov
xor
sub
cwde
xchg
add
call
push
ja
sub
fstp
dec
jae
gs
sub
test
ins
outs
adc
ins
inc
sub
jne
hlt
aaa
cs
adc
aam
inc
add
adc
lock
pop
sbb
dec
or
stos
push
repnz
xor
or
add
test
shl
ins
test
ss
xlat
xor
inc
outs
xchg
jae
aad
mov
jb
jno
je
fcmovnu
and
shl
movs
enter
jae
mov
clc
je
movs
loop
call
mov
xor
or
xor
xchg
cmp
xor
popa
xor
inc
adc
sub
icebp
add
adc
or
adc
push
and
pop
add
out
or
add
shr
sbb
loopne
les
mov
shl
jnp
pusha
adc
mov
mov
fcom
jae
lea
in
inc
arpl
scas
ins
inc
adc
lods
xchg
add
xlat
or
icebp
or
add
retf
push
mov
fisttp
add
sbb
pop
ret
stos
or
jns
mov
lods
jl
out
shl
dec
and
jns
iret
shr
xor
js
(bad)
loope
fld
add
mov
inc
fwait
push
adc
cmovbe
push
outs
push
dec
sub
push
mov
fnstenv
sub
cwde
inc
xor
mov
jg
jo
ud2
add
scas
mov
cmovle
inc
call
movs
add
push
inc
and
xchg
cmps
test
int3
push
cmp
js
add
push
push
sub
in
push
add
inc
mov
and
ret
push
pop
add
sub
mov
in
push
or
sub
inc
lods
int3
xor
sbb
jp
aaa
pop
daa
mov
dec
leave
push
(bad)
js
pop
jo
xchg
dec
add
int
add
enter
cmp
scas
push
loopne
mov
inc
ins
and
add
int
retf
inc
mov
icebp
dec
inc
or
jnp
inc
icebp
dec
je
addr16
sub
cmps
sub
and
mov
pop
lds
int3
mov
repnz
rcr
cmp
in
outs
das
iretw
(bad)
in
out
push
pushf
sub
inc
inc
in
jp
je
call
iret
add
inc
rcl
mov
in
inc
push
and
sub
lds
inc
lahf
leave
test
inc
jl
test
push
inc
jl
or
pop
pop
push
ins
jge
into
(bad)
jbe
push
mov
add
cmp
mov
ror
dec
inc
test
adc
or
out
sahf
outs
push
sub
pop
pusha
mov
jnp
clc
jl
push
test
mov
sbb
jb
sar
sahf
shl
shr
and
ror
adc
aas
mov
int3
jl
sar
xchg
pusha
mov
dec
aaa
jb
cmp
xor
test
enter
xor
mov
dec
daa
pop
in
call
adc
rcl
and
shl
nop
ror
jl
mov
push
sar
sbb
mov
adc
adc
cmps
mov
rol
outs
mov
stos
and
push
or
dec
adc
add
imul
rcr
add
pop
push
inc
pop
xor
dec
or
scas
sbb
add
outs
add
in
outs
xor
(bad)
hlt
mov
add
xchg
out
movs
mov
xchg
je
shr
dec
inc
xchg
mov
aam
add
pop
dec
or
and
fmul
jbe
sub
aas
je
pop
push
sbb
dec
sar
test
mov
lea
push
ins
mov
adc
add
test
pushf
ret
xor
ret
imul
out
jmp
sub
dec
sub
add
test
jns
inc
xchg
sub
mov
js
xor
neg
daa
movzx
into
or
mov
inc
add
js
and
pop
add
pop
das
cmps
jbe
call
sub
je
or
cli
pusha
push
jnp
mov
pop
push
ror
and
ds
outs
sub
(bad)
mov
dec
loopne
mov
inc
cmp
jne
in
mov
add
cmp
mov
mov
pop
pop
inc
push
mov
pop
fadd
push
call
add
adc
mov
push
inc
and
mov
outs
xchg
mov
mov
mov
sbb
sbb
mov
mov
movzx
sbb
jns
iret
sbb
and
test
sub
xor
or
cmp
retf
sahf
inc
inc
push
dec
dec
stos
xchg
jp
(bad)
push
or
or
gs
dec
loopne
sub
add
cwde
les
xor
or
sub
mov
xor
and
push
hlt
dec
inc
jge
push
mov
(bad)
out
xor
mov
imul
ret
or
jbe
pop
or
call
push
fwait
leave
add
and
mov
gs
add
mov
lods
stos
inc
push
mov
data16
fisub
ror
add
add
icebp
dec
imul
jne
int3
sub
lods
dec
test
adc
mov
aam
jl
lahf
cli
out
sbb
lock
popa
test
les
or
and
lahf
mov
push
xchg
push
push
movs
in
mov
or
ret
lea
out
cld
jmp
push
and
ins
std
jg
xor
sub
push
adc
and
sub
imul
mov
mov
add
add
jns
mov
push
adc
sub
pop
pop
(bad)
sbb
xor
pop
movs
or
sbb
jae
pop
rol
fldcw
ins
jge
or
inc
arpl
push
cwde
(bad)
mov
movs
and
sub
jg
sub
pop
add
pop
adc
iret
and
jg
sub
mov
stc
add
or
sub
push
and
push
pop
and
jecxz
pop
jg
and
cmp
and
cmp
jne
mov
and
push
cs
ds
ret
pop
add
shl
adc
mov
cld
sub
rol
lea
ja
xor
(bad)
je
mov
dec
cmp
je
data16
and
adc
jl
clc
jp
push
add
add
sti
sbb
jle
mov
jmp
sub
jne
outs
and
dec
dec
out
jp
aas
cmp
cmp
pop
cmp
pop
aas
mov
cmp
jne
add
fs
leave
dec
aaa
ins
mov
(bad)
ja
aaa
aad
or
jmp
adc
dec
push
fild
enter
movs
outs
jo
aam
cmps
push
dec
aas
je
sub
pop
push
fwait
(bad)
mov
rol
leave
in
mov
add
ret
aam
push
and
ret
aam
add
sub
enter
pop
xchg
mov
jne
lock
ja
sar
or
push
nop
cmp
lds
sub
pop
jo
adc
add
sbb
ror
add
add
sub
out
push
test
mov
push
push
adc
push
imul
sub
je
(bad)
add
ror
or
sub
mov
je
push
loopne
shl
aas
push
rcr
lods
and
dec
push
adc
add
test
jle
idiv
and
push
ja
into
add
leave
outs
sub
xor
mov
adc
repz
jge
pop
push
popf
mov
sbb
div
pushf
pop
mov
dec
and
ret
imul
or
xorps
pop
sahf
xchg
xchg
(bad)
ja
sti
sbb
jmp
fcomp
push
jo
dec
pop
mov
outs
jbe
add
stc
mov
test
push
mul
fbstp
div
addr16
pop
in
movzx
dec
and
cmp
jl
and
jmp
cmps
mov
xchg
pop
pop
or
push
push
push
imul
data16
add
imul
dec
iret
add
push
push
add
js
xchg
push
js
cli
pop
sbb
add
mov
adc
(bad)
cmc
push
or
add
(bad)
in
aaa
add
pusha
add
xchg
xchg
repz
xor
in
cdq
sub
pusha
in
inc
mov
mov
cdq
dec
dec
in
movaps
lock
push
das
inc
inc
dec
lahf
out
push
add
sub
lock
jne
or
add
sub
add
add
fsubrp
sub
jne
adc
addr16
out
add
sahf
mov
jg
and
mov
mov
mov
adc
mov
mov
shr
aad
push
pop
mov
push
call
and
xor
fimul
test
push
sub
aas
adc
sbb
inc
dec
inc
or
(bad)
lock
add
add
sub
xor
adc
add
pop
pop
or
adc
dec
mov
sets
out
mov
add
add
and
div
mov
cmc
fild
pop
sub
or
add
sub
jp
sub
pop
and
sbb
jne
data16
sub
gs
sbb
mov
out
cmp
sub
outs
sahf
ret
push
imul
add
mov
fadd
jmp
(bad)
movs
xchg
adc
or
mov
jmp
or
sub
jb
inc
push
aam
push
push
inc
or
adc
sbb
sbb
lock
sbb
shl
jae
lds
add
stos
mov
jmp
js
je
or
xor
test
mov
test
aaa
jle
dec
add
jecxz
jge
xchg
cwde
jne
std
jmp
inc
or
mov
cs
pop
mov
jne
jmp
xchg
iret
mov
add
jnp
fadd
pop
pop
pop
sbb
mov
mov
mov
bound
clc
clc
cmp
push
inc
inc
not
test
cmc
add
dec
retf
setae
cli
out
add
jmp
and
xchg
cwde
add
jmp
mov
and
and
xlat
clc
fs
das
test
or
or
popa
and
xor
adc
xchg
adc
enter
sbb
test
xchg
add
test
xor
jl
imul
clc
sub
xlat
pop
ins
push
test
(bad)
sar
mov
pop
jg
or
xor
jo
dec
add
mov
iret
xor
imul
sub
jge
pop
fimul
pop
cmp
or
inc
retf
jne
inc
sub
mov
cs
jmp
add
js
(bad)
jns
pop
daa
pop
shr
mov
hlt
jb
repz
add
repnz
inc
jp
jb
and
xchg
add
outs
jb
mov
loopne
stc
repz
or
add
(bad)
mov
idiv
pop
dec
jb
mov
mov
sahf
mov
or
add
call
adc
push
mov
std
leave
iret
ffreep
movs
das
por
add
adc
jp
repnz
or
cmp
lods
add
in
push
jb
sbb
call
inc
mov
lahf
loopne
adc
adc
xor
inc
popa
sub
push
push
push
dec
sar
jne
push
xor
rol
mov
sbb
ins
mov
adc
inc
xor
aas
hlt
ds
in
add
nop
cmp
rcl
mov
adc
lock
lods
out
push
hlt
inc
xchg
fstp
in
and
aas
ja
and
ins
sub
adc
pop
test
push
in
dec
loopne
sar
and
enter
cwde
or
xchg
pushf
(bad)
fild
mov
pusha
adc
shl
fcomp
pop
add
ret
cmps
int
xchg
add
adc
fimul
jp
jbe
xchg
mov
fadd
jae
pusha
add
or
xor
inc
into
push
sbb
push
inc
add
dec
inc
rol
sbb
hlt
data16
fdiv
test
sbb
je
sub
add
clc
jge
mov
sar
push
dec
xor
in
mov
shl
cmps
xor
push
push
cli
and
mov
fisttp
mov
mov
adc
jg
mov
loope
mov
aas
shrd
rcr
xor
jmp
inc
xlat
sub
popa
jne
into
jge
ja
cmp
jle
leave
aam
inc
aad
jne
sub
sar
add
mov
jp
jo
(bad)
fnstsw
push
or
clc
jmp
dec
jne
sub
pop
ror
mov
mov
mov
sahf
pusha
jle
adc
pop
dec
jle
cmp
shr
jo
pop
pop
xor
jbe
loopne
rcl
sti
mov
aaa
inc
and
push
adc
lea
test
repz
jg
fadd
mov
js
lock
xchg
add
and
in
mov
ins
mov
ja
loopne
add
add
sub
inc
push
lock
and
jle
imul
push
push
outs
jge
mov
sahf
nop
or
aaa
xor
or
mov
ins
imul
jmp
pop
outs
mov
fistp
inc
xchg
mov
mov
cmp
sub
cmc
or
adc
push
shl
or
inc
gs
push
pusha
neg
hlt
add
scas
or
xchg
xchg
clc
cld
fisttp
mov
push
mov
xor
mov
mov
sub
mov
in
fistp
inc
dec
mov
sub
xchg
pop
mov
adc
sub
push
push
push
jne
mov
mov
pop
das
add
mov
xchg
fisttp
stos
xchg
or
jg
xchg
mov
repnz
inc
xor
test
cmp
inc
and
rol
jge
add
xchg
push
xor
mov
pop
sub
pop
pop
stos
mov
adc
dec
or
mov
int3
add
add
in
neg
inc
adc
ins
lock
fnstsw
sahf
setne
jmp
jmp
push
ror
fisubr
imul
mov
and
mov
xor
add
mov
push
or
jecxz
xor
(bad)
or
add
push
sbb
sub
push
fdivr
add
adc
sub
sti
mov
(bad)
and
mov
out
(bad)
mov
daa
test
mov
(bad)
mov
loope
repz
ds
cli
inc
ja
js
pop
and
sub
into
fiadd
adc
mov
mov
mov
fcom
(bad)
scas
lock
cmp
iret
in
mov
in
xor
out
test
add
cmp
mov
pop
sub
push
and
mov
add
fild
mov
push
popa
lods
in
xlat
push
xchg
xchg
shl
gs
cmp
sbb
lock
loopne
loopne
fnstenv
mov
and
mov
add
xlat
loopne
add
adc
adc
sbb
adc
add
jnp
push
gs
clc
push
loope
imul
js
dec
mul
je
test
dec
imul
cmp
cmp
fs
or
sar
inc
push
cmp
out
mov
xlat
cs
daa
sub
inc
pop
fcomp
sti
add
jnp
or
fisttp
fsubp
cs
xlat
outs
mov
clc
xor
imul
mov
cmp
(bad)
(bad)
fadd
or
test
add
sub
xchg
rol
ficomp
loop
cs
xchg
ins
jmp
or
mov
adc
jae
add
xor
into
and
jo
push
pop
test
xor
clc
movs
or
movs
add
or
ret
pop
pop
aaa
lods
jo
pop
cmps
jmp
out
inc
retf
push
aad
daa
and
mov
movs
das
add
inc
sbb
and
add
adc
inc
dec
sub
sbb
fld
jge
aam
mov
inc
pop
lock
ret
or
fwait
xchg
add
xchg
loope
pop
add
lahf
jne
adc
fcomip
push
fisubr
daa
in
test
mov
movs
inc
sbb
out
jmp
add
cmps
mov
clc
out
lea
pop
push
dec
push
inc
sbb
in
cmp
ins
fucomip
sbb
lock
xor
inc
sbb
inc
xor
pop
inc
add
cmp
push
lea
xchg
or
ror
inc
inc
call
not
dec
mov
add
jp
xchg
mov
push
or
sub
push
dec
mov
add
jle
pop
pop
in
cmp
not
and
pusha
sbb
in
sub
mov
push
leave
fbld
adc
loopne
jmp
pop
mov
sbb
mov
mov
push
sar
pop
imul
fwait
stos
(bad)
ds
or
sbb
iret
cmc
imul
push
sbb
pop
cmps
fucomi
ss
push
and
test
stos
sbb
adc
shl
add
push
push
jae
push
sub
mov
push
xchg
cmp
inc
rcr
push
dec
and
cmp
or
or
adc
rol
jge
add
jb
ud0
ja
add
push
push
inc
aas
pop
pop
mov
or
mov
ret
mov
test
adc
out
inc
add
mov
xchg
rol
inc
add
call
(bad)
cwde
call
test
dec
test
je
ret
add
out
jge
mov
pop
pop
and
ds
lahf
je
mov
mov
loopne
sub
pop
or
test
mov
or
add
jnp
push
add
inc
cmps
push
enter
dec
test
aad
cs
fidiv
aaa
sar
into
adc
add
aad
or
jns
sub
jae
lock
repz
or
aaa
cwde
inc
movs
add
inc
cmp
jne
dec
ret
inc
bound
push
enter
repz
inc
add
add
ret
jg
into
lock
movs
rcl
jne
inc
inc
loop
jne
ret
bound
dec
cmps
pop
push
jmp
add
push
add
icebp
movs
cmp
adc
sub
push
push
xlat
jp
dec
scas
rol
inc
push
js
push
pop
popa
pop
fmul
push
imul
and
mov
adc
add
dec
(bad)
shl
call
cmp
out
out
shl
push
jb
clc
cld
push
push
mov
mov
imul
dec
pop
xchg
push
jo
inc
push
mov
or
rol
mov
sbb
loopne
enter
dec
inc
add
and
ss
add
add
aad
add
cdq
mov
out
adc
mov
or
dec
ret
push
push
mov
dec
movs
ss
add
push
ret
push
pushf
mov
mov
sti
int3
inc
pop
add
icebp
sbb
mov
push
shl
xor
stc
inc
or
pop
ja
pop
ret
inc
pop
outs
ins
add
lea
retf
xor
dec
add
cmp
inc
sub
mov
mov
jo
(bad)
rep
add
pusha
or
movs
cmp
add
mov
repnz
sub
clc
add
fdivr
jmp
loopne
xor
arpl
dec
aam
pop
ret
(bad)
lods
and
mov
jno
stos
retf
imul
cmc
add
sbb
rcl
iret
iret
in
pop
mov
movs
sbb
jge
sub
ds
and
icebp
ss
push
and
adc
pushf
jle
pop
mov
fisubr
pop
add
xchg
push
xor
cmp
jae
movzx
xor
div
mov
ret
fild
test
adc
push
jb
add
xchg
rcl
adc
adc
mov
push
bound
add
push
mov
add
mov
adc
ins
scas
dec
xchg
pop
das
adc
das
adc
call
in
rol
aad
(bad)
pop
add
push
into
inc
cmps
jb
in
scas
ret
jmp
push
pop
pop
retf
loope
lock
loopne
add
or
adc
add
(bad)
lock
inc
mov
test
outs
cmp
inc
and
lock
icebp
xor
push
aas
inc
mov
jle
out
xor
inc
stos
shl
mov
into
mov
and
icebp
call
and
lea
mov
shl
add
add
aas
or
lea
or
pop
jl
lahf
(bad)
clc
mov
mov
movs
and
or
push
pushf
cs
xor
cmps
lods
fisttp
pop
and
divps
mov
push
js
gs
or
je
inc
dec
jne
test
add
fist
imul
jl
add
add
add
cmp
sbb
mov
inc
cmp
loopne
sub
jae
fadd
ss
call
inc
inc
adc
test
pop
sub
add
adc
push
and
test
mov
mov
pop
jbe
mov
js
ror
inc
cmp
add
out
push
mov
pop
les
push
mov
mov
and
imul
ret
or
inc
aas
xchg
addr16
(bad)
jmp
leave
xor
dec
loopne
cmp
nop
xlat
xor
sbb
outs
dec
out
sub
pop
movs
scas
popa
add
rol
js
ins
sub
cmp
mov
retf
cmp
inc
lods
or
add
inc
mov
and
ret
aaa
push
push
and
xchg
push
in
(bad)
sub
sub
xor
in
rcl
add
or
std
loopne
jge
iret
imul
pop
add
movs
mov
add
add
pop
or
inc
sub
add
cmp
inc
cld
pop
adc
or
cmp
idiv
and
fwait
jbe
hlt
dec
jno
lods
fist
dec
add
cmp
dec
fmul
mov
dec
cmp
jg
jmp
add
adc
enter
fst
movs
mov
or
inc
dec
mov
jle
in
or
mov
in
fimul
lods
cmp
dec
imul
clc
loope
add
xor
and
inc
cld
clc
dec
test
mov
push
je
cmc
jbe
adc
push
cmp
xor
or
sub
add
aas
hlt
inc
jl
mov
mov
mov
jmp
xchg
ja
ret
mov
je
and
in
add
sbb
or
fistp
rol
ss
sbb
push
loopne
cdq
movs
xchg
hlt
add
sub
jle
cmc
aad
cmps
push
mul
sbb
mov
adc
pushw
xchg
lock
and
add
inc
lock
jb
or
xor
adc
sbb
sti
dec
and
sub
push
mov
mov
stos
sub
add
into
test
inc
add
xchg
cmp
adc
sub
js
je
adc
xchg
sbb
jo
add
aam
add
inc
xchg
idiv
sbb
xor
movs
mov
lods
sub
clc
setb
les
es
mov
push
lds
jecxz
pop
cmp
enter
in
or
cmc
xchg
pushf
pusha
cmp
je
mov
pop
or
mov
pop
scas
lock
clc
movs
add
fs
lock
dec
mov
mov
mov
imul
call
jmp
pusha
retf
dec
add
cdq
lea
mov
popf
adc
xchg
(bad)
in
adc
sbb
pusha
push
fcom
rcl
(bad)
loopne
mov
fsubr
jge
add
sbb
idiv
push
jmp
adc
jl
fadd
rol
sbb
fcomp
lock
adc
jne
call
pop
jbe
mov
mov
inc
ret
add
call
sar
es
adc
call
adc
cli
ss
xor
inc
xor
inc
and
jmp
jle
dec
test
jo
shr
add
aam
pop
fucomi
cmp
je
loop
shr
aad
retf
sbb
int3
adc
or
pop
sub
mov
push
add
pop
fcom
test
cmp
and
out
jge
mov
ror
xchg
mov
or
inc
jmp
sbb
add
cwde
sahf
rcl
sub
movs
adc
or
jne
and
jnp
test
adc
hlt
adc
sbb
in
pop
aaa
cld
push
mov
or
and
or
cwd
jmp
mov
add
xchg
clc
and
push
or
jg
inc
cli
jmp
sbb
and
dec
(bad)
jne
cmp
jl
mov
adc
xchg
cmp
xchg
xor
cmp
ss
add
ret
mov
or
pop
hlt
inc
jmp
add
xor
test
push
(bad)
movs
pop
adc
cmp
push
movs
or
pop
retf
add
mov
cmp
ja
jb
lahf
out
inc
or
mov
add
iret
adc
adc
cmps
mov
mov
inc
jbe
das
mov
lock
neg
push
adc
in
cld
lock
inc
je
or
je
or
jmp
in
mov
jo
test
out
lea
xor
sbb
fadd
lea
pop
ins
ja
or
lds
inc
scas
loope
les
retf
test
cmp
cmp
push
movs
cmp
sbb
xchg
or
or
or
stos
les
xor
aad
je
or
jbe
cmp
adc
sbb
pop
out
inc
dec
dec
ins
push
and
push
adc
mov
add
imul
fidivr
iret
mov
cmp
jae
dec
mov
pop
cdq
or
ja
not
lods
pop
in
pop
push
dec
jmp
adc
inc
cmps
ficom
sbb
repnz
repnz
push
xor
out
xchg
sbb
test
xchg
jge
add
cld
push
pop
loop
aaa
inc
mov
mov
loop
jg
loopne
sbb
jno
jne
scas
aaa
or
call
movs
jns
add
add
nop
add
fs
sub
popa
je
popa
aas
add
add
sub
mov
mov
movs
movs
lahf
and
xchg
add
in
inc
sahf
add
jle
mov
mov
and
sub
sar
and
xor
inc
sbb
gs
leave
mov
inc
and
or
sbb
or
jle
mov
aas
xlat
add
and
jecxz
pusha
xor
or
sub
xchg
paddsw
mov
pushf
mov
retf
and
les
mov
cli
fcmovbe
jb
aam
dec
push
mov
cs
push
test
pop
das
sbb
add
ins
loop
jg
add
stos
add
pop
enter
inc
inc
aam
gs
imul
fidiv
shr
xchg
repnz
sar
mov
neg
jmp
or
ror
mov
lods
push
inc
pop
imul
adc
mov
inc
dec
or
or
jg
push
dec
mov
pop
std
cmp
jne
pop
mov
dec
movs
pop
iret
cs
outs
sbb
xor
inc
xor
aam
fimul
cmp
std
scas
sub
add
sbb
xchg
repnz
sar
out
adc
popa
cmp
mov
in
cmp
pop
push
push
jge
repz
jle
or
xchg
mov
mov
rcl
or
fistp
mov
(bad)
jg
add
mov
push
outs
clc
jg
stc
adc
dec
add
mov
jne
push
mov
movs
jmp
jne
test
pushf
je
or
or
mov
inc
xor
mov
popf
out
or
pop
adc
mov
or
ror
sub
sti
adc
cwde
xor
ror
jg
out
add
inc
lods
or
xor
ret
add
fdiv
mov
sub
dec
(bad)
add
dec
adc
cmp
jl
rcl
imul
loopne
and
dec
inc
push
adc
fldenv
push
stos
jmp
std
inc
movs
je
sahf
mov
loop
adc
push
stos
sbb
in
xor
cmc
addr16
adc
jmp
add
fisttp
or
scas
sbb
std
push
ror
loop
mov
or
add
add
leave
mov
mov
mov
cmp
dec
mov
pop
lea
adc
mov
add
or
xor
jg
fisttp
je
mov
dec
mov
div
mov
inc
mov
je
dec
jne
or
mov
jmp
and
and
mov
jecxz
lea
inc
cs
retf
jno
data16
fdivr
pop
adc
out
dec
ja
sbb
mov
or
cmp
dec
mov
jmp
pushf
fwait
sbb
cmp
aaa
sub
pop
bound
je
push
push
cmp
adc
adc
lock
sahf
cli
sahf
jmp
lods
aam
pop
inc
loop
ret
in
pusha
add
hlt
out
cld
out
fld
pop
(bad)
scas
and
inc
add
and
and
adc
mov
fstp
inc
sub
sub
addr16
es
sbb
and
sub
pop
sub
or
push
mov
sub
xor
inc
aas
mov
movs
sub
mov
sti
imul
cs
dec
add
jmp
inc
or
fisub
or
movzx
add
dec
or
repz
add
in
mov
pop
loopne
xchg
shr
inc
cli
aam
cmp
add
into
or
daa
adc
jle
jno
enter
xor
push
cld
ins
neg
jmp
jbe
inc
xlat
repnz
sar
jne
je
sti
or
and
xchg
or
sub
cmps
sub
ins
pop
xor
and
data16
push
adc
and
mov
jp
loop
mov
add
jbe
push
cvtps2pd
add
mov
jbe
lods
mov
xchg
adc
(bad)
mov
je
ror
mov
add
(bad)
and
call
shr
pop
ror
sub
idiv
cmp
inc
mov
gs
je
mov
jmp
inc
or
push
inc
jmp
cmp
aaa
push
add
mov
jge
mov
data16
mov
jmp
push
jnp
push
movs
adc
fmul
icebp
pop
jmp
out
sub
stos
sub
adc
and
cmp
(bad)
clc
idiv
outs
dec
nop
inc
xlat
mov
sub
xchg
xor
mov
add
pop
fdivr
pop
ret
shl
jl
loopne
push
adc
aam
jg
ss
cvtps2pd
aam
jb
dec
push
mov
xor
call
fdiv
jne
icebp
cmp
cmp
icebp
xor
in
out
push
xchg
retf
in
xor
jo
cmps
xor
jmp
lds
add
jmp
or
fsub
inc
sub
push
jo
mov
cmp
pusha
push
jo
and
mov
xor
mov
add
cld
pop
jno
pop
adc
gs
fidivr
lods
je
jl
in
dec
add
jmp
inc
(bad)
call
idiv
jmp
mov
inc
push
or
scas
xchg
daa
ins
ror
cli
and
jge
scas
cmps
add
nop
sbb
or
(bad)
xlat
xor
xor
dec
ds
fwait
xor
rol
ja
in
cmp
adc
cli
lods
inc
push
(bad)
jnp
mov
mov
jnp
add
jb
and
cmps
sbb
test
aas
adc
or
add
(bad)
or
inc
add
(bad)
mov
and
imul
js
mov
clc
fabs
loop
add
dec
call
std
dec
clc
xchg
fld
fstsw
fwait
mov
test
je
mov
mov
call
loopne
jnp
mov
inc
adc
sar
fisttp
and
data16
test
sub
sbb
add
das
cmp
sar
jo
cmp
idiv
fwait
or
or
cmp
jb
mov
mov
or
ja
push
pusha
jo
cmp
cmp
inc
outs
cmp
call
jmp
push
out
rol
ret
xor
or
aad
xor
sahf
scas
xchg
xor
std
ror
je
aad
or
xor
push
adc
jl
mov
cmp
xor
sbb
dec
add
sbb
mov
fild
cli
mov
push
sub
or
mov
retf
cmovb
popa
and
dec
sbb
sbb
sub
mov
and
jne
and
jmp
mov
add
stos
aas
jmp
inc
or
jmp
xor
inc
pop
into
cmp
jbe
mov
jmp
mov
sbb
and
adc
cdq
jecxz
dec
inc
dec
push
in
add
jle
fs
js
mov
xor
xor
pop
mov
push
mov
xor
ja
cmp
or
and
pop
sub
and
xor
aaa
mov
cmp
ss
bound
clc
mov
rol
ret
add
loopne
(bad)
ffreep
ret
add
aas
jmp
fstp
and
adc
xchg
or
cmp
ror
jmp
lods
retf
and
sub
fidiv
pop
cmps
repnz
jae
jbe
test
fimul
inc
jmp
inc
xchg
pop
aad
mov
stc
add
imul
imul
pop
add
add
xchg
push
xchg
lock
add
call
add
clc
mov
sbb
sub
xchg
add
xchg
sar
in
adc
push
adc
add
scas
mov
pop
xor
sahf
add
cld
lds
loopne
or
ins
or
les
push
ins
loopne
sbb
test
sti
sbb
shr
test
sbb
sub
ss
data16
dec
mov
in
aam
loop
adc
and
rol
fld
inc
cmps
lock
push
lea
mov
add
loopne
add
jp
ins
lock
mov
pop
add
mov
(bad)
sbb
rcr
adc
and
test
fld
mov
repnz
sbb
and
jae
icebp
out
aaa
fwait
push
sub
pop
fwait
mov
mov
mov
or
nop
dec
sar
add
out
jmp
shr
data16
leave
push
jo
in
(bad)
jle
into
pop
inc
out
loop
xor
inc
pop
sbb
aaa
or
mov
adc
pusha
leave
mov
add
inc
mov
jg
call
sub
or
pop
icebp
lea
xor
int3
loope
popa
adc
adc
xor
mov
(bad)
imul
push
test
adc
mov
add
mov
xor
push
adc
cld
scas
and
push
rol
jo
out
push
or
sar
or
adc
add
xor
cmps
inc
dec
call
inc
adc
mov
adc
ins
sbb
jne
jle
shr
mov
and
cli
je
mov
mov
push
lea
test
lods
pop
pop
or
js
add
arpl
stos
pop
into
retf
inc
sti
loopne
enter
add
or
mov
mov
les
or
daa
in
sbb
xor
pusha
(bad)
push
sbb
out
fcmovne
or
or
sbb
hlt
adc
push
outs
sub
mov
add
loopne
adc
cmp
push
ror
cmp
jae
loopne
test
imul
test
daa
cld
shr
cmp
sar
add
push
jo
rcl
pop
cld
or
xchg
sbb
sbb
mov
or
sub
cmp
clc
fwait
jbe
push
in
enter
iret
mov
loope
add
or
xchg
es
hlt
add
dec
push
outs
or
push
dec
icebp
add
sar
dec
(bad)
mov
jge
ret
push
cmp
xchg
int
mov
iret
and
call
add
outs
enter
sub
ret
shl
fldenv
mov
imul
jge
aaa
adc
mov
popa
pusha
and
xchg
sbb
mov
call
hlt
std
add
sub
int3
mov
mov
ror
mov
hlt
test
adc
daa
ja
retf
shl
add
or
push
fild
push
cmp
add
inc
(bad)
ja
adc
push
loopne
sti
dec
inc
jne
sub
dec
mov
mov
pusha
loopne
or
icebp
ins
inc
push
pop
shr
mov
add
repnz
add
inc
fadd
popa
dec
pop
daa
aam
add
or
mov
inc
clc
inc
std
std
(bad)
bound
rcl
(bad)
xor
or
xor
xchg
call
and
pop
sbb
sub
dec
in
test
jg
in
or
test
clc
pmuludq
bound
mov
add
lea
dec
dec
push
inc
ret
cmp
sbb
add
and
add
push
fld
cld
xchg
lods
mov
aaa
lock
and
cmp
add
cmp
popa
scas
rol
fcom
mov
fidiv
repnz
mov
pop
sbb
ret
cmp
dec
push
xchg
loop
pop
lock
mov
mov
ret
jbe
dec
mov
adc
cmp
(bad)
dec
cmp
jb
mov
outs
in
adc
sbb
(bad)
sbb
or
adc
xchg
rcl
inc
add
ret
les
dec
sahf
sbb
mov
push
sar
add
add
xchg
inc
xor
xchg
mov
push
outs
adc
sbb
rcl
loopne
jb
xor
ffree
push
push
dec
or
sbb
ins
in
in
ins
xor
dec
push
jmp
cmp
mov
and
sbb
clc
xor
cmps
inc
stc
jbe
adc
jle
icebp
add
mov
mov
push
mov
cli
push
popf
or
pop
adc
mov
jle
loopne
push
pop
pusha
addr16
push
or
fldcw
(bad)
lods
pop
sbb
mov
mov
push
sub
adc
add
and
sub
push
nop
dec
add
pop
push
lods
and
retf
xchg
push
lock
je
mov
add
iret
xor
add
mov
pop
mov
or
call
(bad)
adc
mov
add
gs
sbb
inc
movs
add
mov
mov
das
lock
sbb
lock
jl
sbb
jnp
xor
push
and
ja
loopne
sub
dec
mov
add
shr
or
mov
aas
adc
dec
aam
stos
inc
stos
jp
or
mov
mov
mov
sub
sbb
sbb
dec
(bad)
add
adc
or
xor
add
jmp
inc
call
in
mov
jecxz
sub
or
mov
lea
or
cmps
mov
dec
mov
inc
jecxz
outs
loop
fsubp
fist
push
repnz
jge
mul
xchg
pop
jo
loop
push
push
xor
xchg
bound
jo
jecxz
push
mov
jmp
inc
in
adc
cld
out
cld
repnz
xchg
lahf
and
pop
add
sub
add
xor
or
out
push
aad
add
clc
ss
mov
add
mov
add
les
leave
add
or
fcom
add
enter
(bad)
sbb
jno
cmp
push
push
add
push
fmul
mov
jo
mov
inc
mov
int3
inc
jbe
xchg
or
pop
add
dec
adc
add
dec
call
pusha
sub
imul
and
xchg
and
fcomp
xchg
inc
mov
and
prefetch
or
adc
sub
add
stos
and
shl
sub
xor
mov
xor
dec
mov
pop
sbb
adc
(bad)
aaa
dec
and
add
dec
pop
jns
jns
ret
inc
add
das
inc
loopne
clc
dec
rcl
fmul
sub
mov
or
jg
xor
in
push
std
pop
pop
inc
jo
and
xchg
jp
enter
jp
jmp
and
psubusb
daa
stos
inc
xor
in
jecxz
mov
and
xor
cmps
(bad)
sub
ss
js
jmp
push
adc
adc
dec
mov
loopne
jne
mov
pop
clc
pop
loopne
mov
fidiv
ja
ret
jnp
mov
dec
mov
pusha
or
xchg
or
add
push
push
pop
add
or
or
out
ffreep
or
and
jo
or
push
and
jmp
cli
cmp
mov
mov
jnp
push
push
hlt
and
sbb
or
push
je
enter
std
pusha
sbb
lods
ret
xor
ss
jbe
add
popf
dec
push
lea
shr
fcomp
(bad)
lea
mov
pop
jp
shr
dec
pop
push
lock
jbe
jmp
sbb
mov
inc
imul
sar
mov
ret
push
sbb
push
loope
adc
ja
cld
je
dec
je
dec
xor
pushf
fiadd
inc
sti
mov
mov
or
inc
aad
in
xchg
pop
jl
pop
enter
cmp
js
pop
jb
adc
mov
fsubp
jne
xor
add
cmp
or
mov
(bad)
in
rol
ja
ret
clc
dec
jg
into
call
inc
mov
or
push
jmp
or
icebp
div
and
pop
sub
push
cmp
dec
mov
loopne
mov
out
scas
cwde
fisubr
mov
mov
push
add
sbb
or
adc
xchg
or
loope
cmp
movs
pop
movs
stos
int3
and
je
mov
fadd
test
or
fstp
jbe
or
cmp
xor
fldenv
fmul
popa
div
mov
add
and
or
add
dec
es
out
repnz
mov
les
jne
rol
dec
clc
loop
pusha
fld
cmp
mov
push
and
or
xchg
arpl
add
mov
jns
sbb
adc
jmp
das
in
das
jb
lods
push
add
add
stos
mov
add
outs
cmps
lahf
or
sbb
or
mov
jnp
rol
push
mov
lock
popa
cmp
cs
add
add
iret
imul
dec
stos
arpl
(bad)
fsubr
test
add
aas
fs
sahf
and
jle
jmp
mov
xchg
jne
loop
pop
adc
push
adc
cmp
in
add
cwde
jo
(bad)
or
iret
les
add
or
loope
sub
in
jecxz
test
jae
adc
retf
add
sbb
clc
in
sub
test
test
in
push
add
inc
pop
mov
dec
push
pop
retf
pop
xchg
cmp
daa
and
add
data16
dec
and
pop
cdq
popf
cld
dec
test
add
icebp
xor
push
inc
lahf
jbe
push
hlt
cmp
lock
add
lea
or
popf
test
xor
stos
mov
mov
xchg
arpl
lea
outs
cmp
popf
adc
jl
inc
xor
push
mov
cdq
adc
jb
fstp
mov
inc
dec
jne
sbb
les
test
fs
fcom
pusha
(bad)
fsubr
movs
or
in
pop
mov
enter
sbb
enter
das
and
xor
outs
sub
mov
retf
xor
add
outs
pop
cmp
or
mov
ss
call
in
mov
out
sub
sti
sbb
rol
mov
sbb
mov
add
pop
xor
or
add
mov
mov
mov
pop
icebp
pop
jno
and
int3
sbb
lods
cs
sub
test
or
test
dec
inc
mov
pop
pop
das
(bad)
xor
inc
mov
aam
cmp
call
pop
(bad)
shl
inc
loopne
adc
pop
pop
ja
ror
adc
jmp
fwait
mov
pop
test
and
cmp
jl
lock
mov
pop
mov
aas
fmul
add
push
push
gs
pop
loope
jl
jle
dec
ins
sti
sbb
push
adc
je
or
add
mov
sbb
inc
fs
adc
fist
add
mov
jle
mov
lahf
and
jmp
and
in
(bad)
call
inc
or
jbe
fwait
loope
push
xchg
jnp
mov
add
ret
fadd
popf
adc
inc
or
pop
addr16
sub
and
sar
sub
pop
imul
inc
rol
adc
movs
or
jmp
mov
add
cmp
xchg
fimul
adc
adc
cmp
jg
movs
popa
push
add
xor
call
add
push
xchg
jg
stc
imul
add
in
push
or
js
div
inc
inc
cmp
inc
dec
gs
inc
xor
addr16
add
aad
push
pop
hlt
in
inc
cmp
movs
xchg
xor
das
or
jmp
int3
mov
inc
add
cmp
lahf
ror
int
mov
fsubr
or
and
(bad)
int3
mov
pop
and
jno
into
push
sbb
loopne
mov
mov
xlat
xchg
ret
or
stc
popa
mov
rcr
cmp
push
test
rol
sub
and
repnz
out
or
repnz
jecxz
arpl
pop
int3
nop
repnz
jb
daa
(bad)
scas
adc
popa
inc
in
jmp
add
call
aam
out
inc
inc
out
lock
or
mov
adc
in
jge
(bad)
xchg
sar
sbb
adc
loop
push
jmp
cmp
ja
in
add
mov
ins
scas
inc
push
out
adc
push
jmp
clc
cmp
cmp
mov
push
fs
jnp
cwde
repnz
adc
and
sub
push
loopne
ret
xor
sbb
sub
push
hlt
nop
mov
cmp
sub
mov
in
add
syscall
jmp
pop
jp
ss
jl
inc
lds
jmp
dec
adc
xchg
adc
mov
lock
jo
fsubr
xor
cmps
in
inc
dec
sbb
sub
lods
dec
push
ret
sbb
movs
push
call
repz
mov
out
xor
add
rcr
add
gs
out
pusha
nop
add
add
fmul
or
push
clc
fmul
popf
lea
dec
dec
adc
(bad)
pushf
or
push
xor
and
mov
jmp
push
sbb
add
sbb
dec
sbb
xchg
clc
mov
xchg
cmp
pop
test
imul
add
adc
or
pop
xor
pop
je
jnp
sti
add
or
mov
and
jge
sub
(bad)
into
cwde
pop
or
aaa
shl
push
pop
push
pop
add
xacquire
hlt
div
cmp
dec
pop
cmps
push
ret
add
xchg
sbb
push
cmps
adc
or
push
bnd
add
mov
in
pushf
and
leave
push
mov
adc
add
mov
inc
setl
mov
outs
out
div
mov
clc
or
xchg
mov
mov
dec
sub
or
test
cmp
setb
and
lock
scas
popf
push
sbb
push
or
sub
mov
push
mov
mov
pop
dec
dec
mov
popf
inc
loopne
push
add
or
fnsave
and
push
and
or
pop
outs
cs
out
ds
add
pop
es
cmp
sbb
inc
ja
test
rep
sti
add
add
add
cmp
jecxz
out
or
out
add
push
sub
ins
xchg
clc
lock
sub
or
cli
add
mov
or
loopne
or
jp
adc
int3
or
dec
dec
adc
inc
mov
je
and
fadd
je
fisttp
inc
sub
cdq
jno
pop
fcomp
dec
or
jmp
pop
fs
xchg
adc
mov
jnp
xchg
add
jmp
iret
mov
cmps
push
pushf
add
sub
shl
mov
sbb
xchg
dec
jmp
jg
js
cmps
cld
lahf
mov
adc
add
mov
lods
cs
cld
xchg
mov
fadd
cwde
add
xor
inc
scas
and
pop
dec
mov
cmp
sub
out
scas
or
add
or
push
lock
aas
test
or
and
(bad)
nop
add
rol
loopne
dec
in
pop
xor
fisttp
xor
xor
push
loope
scas
add
mov
test
ins
mov
ins
stos
(bad)
pop
pop
mov
daa
dec
jne
xor
adc
push
mov
lea
mov
adc
shl
push
dec
adc
xor
dec
add
xor
loopne
dec
sahf
mov
adc
mov
and
mov
mov
inc
inc
sbb
mov
push
imul
sbb
lods
inc
cmp
push
je
movs
sbb
pop
cmp
in
add
jno
dec
pop
mov
xor
add
pop
loopne
(bad)
mov
aaa
sub
or
icebp
sub
fwait
lods
push
sbb
je
and
inc
rcr
jae
dec
mov
xor
sub
push
loop
or
pushf
sub
or
dec
aam
mov
int
push
sub
sbb
push
xchg
add
rol
add
pop
aaa
les
inc
outs
sub
int3
jge
in
fwait
fs
aas
inc
enter
enter
ret
hlt
mov
and
add
sbb
mov
mov
jp
pop
dec
push
mov
cmp
jbe
mov
out
xchg
adc
mov
mov
ins
(bad)
jnp
daa
jo
add
pop
or
add
inc
sub
and
nop
mov
add
jo
mov
inc
push
xadd
and
les
and
adc
sar
cmps
daa
or
jae
push
scas
push
test
(bad)
cmp
in
add
or
xlat
dec
add
iret
sub
(bad)
aad
sti
add
dec
jmp
lea
aaa
clc
mov
jp
sbb
jmp
frstor
cmp
mov
push
fnstsw
or
loop
and
push
xchg
mov
lahf
or
jo
pop
cmp
arpl
dec
inc
fnstenv
xor
daa
lock
or
scas
dec
mov
add
inc
popa
inc
add
inc
jge
ins
mov
dec
lea
lahf
outs
movhlps
sub
rol
jl
dec
inc
sub
xchg
inc
inc
and
adc
jne
fldenv
or
retf
inc
inc
or
(bad)
lea
jbe
sbb
aas
imul
push
add
adc
xbegin
push
xchg
xchg
hlt
cmp
pop
or
jae
pop
or
dec
push
add
inc
arpl
mov
ins
adc
js
sahf
movs
stos
movs
lea
pop
rcr
dec
fisttp
(bad)
clc
dec
scas
loop
or
push
or
add
pop
pop
mov
add
cmc
cmps
mov
sbb
or
mov
aas
mov
cmp
xor
aad
push
mov
adc
add
imul
push
jb
ins
stos
fisttp
repz
js
add
cmp
sub
xchg
dec
add
or
loope
push
inc
(bad)
and
push
gs
or
call
jne
ret
mov
mov
jmp
pop
sbb
adc
fsub
loopne
mov
sti
mov
gs
mov
mov
fcom
test
enter
shl
mov
xor
adc
add
cdq
loop
add
or
lock
xchg
adc
data16
pop
sub
xchg
add
adc
in
mov
pop
add
push
test
(bad)
mov
cwde
shr
xchg
pop
into
push
jb
inc
fidiv
inc
lods
xor
xchg
adc
dec
push
pop
(bad)
jge
mov
cmps
jle
fmul
add
inc
jmp
add
sbb
adc
push
div
out
adc
sub
lods
pop
(bad)
add
add
test
inc
and
jmp
mov
push
cmp
je
inc
cmp
inc
add
popa
or
fadd
inc
leave
mov
lahf
push
inc
jnp
add
add
in
inc
cld
(bad)
jg
loope
(bad)
mov
ja
inc
nop
and
stc
push
add
sti
lea
xor
inc
cwde
or
je
fcom
jae
push
lds
push
mov
fidivr
xchg
lock
jne
push
push
in
test
add
jmp
cmps
sbb
ss
pushf
stc
fadd
popa
add
pushf
stc
mov
rdtsc
push
rol
sbb
test
cmp
jmp
add
xlat
inc
cmp
sbb
in
fist
add
test
dec
lods
add
jp
aam
and
mov
xchg
sub
std
inc
cmp
or
popf
gs
pusha
xchg
mov
dec
sbb
imul
add
out
movs
out
pusha
mov
pop
cmp
or
add
jo
je
test
repz
inc
bound
into
or
aaa
movs
mov
push
div
retf
push
jb
inc
add
xor
fimul
mov
pop
dec
iret
out
xchg
dec
test
test
adc
test
or
jbe
mov
mov
or
mov
mov
pusha
mov
js
or
add
pop
ror
ins
outs
xlat
lea
adc
add
jno
lods
and
cs
lock
mov
mov
add
loope
(bad)
cmps
xor
js
stc
adc
(bad)
fiadd
inc
daa
mov
adc
aas
gs
inc
or
sbb
pop
jb
cmp
int3
addr16
arpl
jns
cmp
pushf
pusha
cmp
push
pop
gs
leave
mov
rcl
dec
in
mov
pop
pop
in
inc
and
push
ins
and
gs
(bad)
xlat
cmp
clc
ins
mov
xlat
push
pop
dec
xor
push
jmp
inc
mov
test
aas
sub
jecxz
jne
shl
test
dec
scas
das
mov
inc
dec
sbb
sub
sbb
sub
adc
mov
test
mov
mov
mov
sbb
push
dec
lods
dec
or
sub
mov
aad
add
mov
dec
lock
rcr
jmp
push
imul
inc
mov
sti
pop
aaa
adc
movs
or
test
ja
in
mov
jb
nop
loopne
clc
xchg
xchg
test
mov
pop
push
pop
cmps
sbb
mov
xchg
psubb
push
ss
inc
push
lea
das
add
movs
fsub
sbb
add
pop
ins
std
retf
adc
mov
loope
aam
jle
adc
ins
inc
add
sub
test
aaa
sbb
sbb
gs
pop
inc
movs
cdq
push
or
dec
mov
push
adc
add
push
cmps
push
mov
test
je
aaa
adc
pop
add
daa
push
add
aas
and
add
cs
hlt
lea
ss
ficomp
cmp
xor
test
mov
rcr
ret
iret
or
sbb
sti
cwde
ins
add
dec
xlat
(bad)
nop
loopne
add
jge
add
or
inc
cmp
jg
in
in
add
fild
adc
pop
fdivr
push
shl
push
adc
outs
pop
adc
data16
cld
adc
pop
pop
out
sub
lock
sbb
test
push
adc
jmp
cmp
and
retf
adc
pop
jg
adc
or
inc
ret
mov
pop
scas
mov
fidiv
pop
sub
mov
push
or
in
mov
mov
adc
fisttp
xor
jno
dec
clc
fwait
dec
cwde
inc
hlt
cmp
mov
mov
ss
sbb
jge
test
cmps
xchg
mov
push
in
jo
cmp
add
cmc
les
jmp
into
push
loopne
nop
outs
dec
add
fiadd
inc
mov
imul
ret
pop
mov
test
and
add
jb
pop
and
push
cmp
inc
(bad)
cmp
je
jmp
xor
inc
xor
sub
or
sbb
dec
shl
and
add
pop
dec
shl
or
xor
add
fs
loop
mov
mov
loop
sbb
mov
shr
xor
fs
movs
jl
xchg
or
lods
dec
ret
or
jle
sbb
adc
xchg
sbb
ins
mov
sbb
pop
inc
test
adc
inc
sbb
(bad)
push
ss
xchg
in
cmps
shr
or
cli
mov
and
sub
lea
les
add
mov
jae
or
cld
push
(bad)
enter
adc
sti
sbb
lods
(bad)
je
jo
jo
loope
pushf
outs
ja
pop
inc
mov
scas
xor
pop
sub
sti
xchg
out
nop
jge
mov
pop
pushf
mov
pop
data16
add
ins
mov
and
jle
into
int3
lea
xchg
shr
inc
dec
aad
ret
pop
and
clc
es
gs
add
cmp
jbe
es
sub
add
stos
pop
mov
rcl
imul
add
sub
pushf
inc
mov
enter
lock
mov
cmps
add
inc
pusha
adc
cmps
pusha
movs
sbb
inc
sbb
clc
or
inc
mov
imul
bound
pop
imul
ret
lahf
or
jmp
sar
sbb
add
inc
mov
rcl
or
aaa
mov
xlat
sub
ins
mov
lock
ficom
iret
out
mov
dec
jo
out
jnp
or
das
call
dec
pop
iret
pop
in
imul
add
out
add
arpl
std
hlt
sbb
(bad)
ins
dec
or
inc
sbb
adc
rcl
movs
sbb
adc
in
ror
jo
sub
jo
mov
in
cmp
movs
adc
in
or
js
xor
add
dec
xor
xlat
fdiv
push
inc
lds
lods
mov
add
shl
dec
add
mov
push
mov
movs
mov
dec
test
ret
in
mov
loope
adc
pop
push
fnstenv
sbb
out
fbstp
sub
cmp
test
xor
or
ss
sbb
(bad)
push
dec
sar
jmp
pusha
and
test
shl
sbb
cmp
jp
enter
jnp
mov
ret
sbb
lea
adc
adc
sbb
sbb
pop
mov
imul
aas
jl
loopne
dec
inc
mov
mov
xchg
sub
inc
mov
loopne
ret
and
fdivr
xor
in
jbe
xor
lea
jmp
add
pop
fild
adc
arpl
lea
ror
add
test
or
or
idiv
and
imul
and
sbb
xchg
sub
jne
pop
or
and
sub
or
popf
jp
cmovle
test
adc
mov
ds
loopne
aad
inc
or
push
push
cmp
push
loopne
into
je
inc
in
call
outs
shr
outs
das
dec
mov
pop
adc
xchg
sbb
add
cmp
pushf
sbb
and
mov
mov
push
dec
ficom
mov
push
xor
stos
and
imul
adc
add
cdq
xlat
js
add
lahf
or
mov
add
mov
sbb
add
mov
dec
adc
pop
gs
adc
xlat
adc
pusha
inc
mov
test
mov
inc
call
icebp
cmp
outs
fld
pop
push
and
rol
push
add
and
push
cmp
popf
rol
and
add
push
cmp
stos
pop
xlat
push
or
pop
out
and
ins
mov
(bad)
(bad)
mov
add
call
push
dec
fidivr
and
sbb
iret
push
data16
sbb
jnp
pop
pop
retf
sti
shl
inc
push
mov
rcl
dec
inc
add
add
movs
xor
cmp
mov
lea
lds
xor
cmp
jl
mov
add
adc
mov
dec
pop
add
nop
dec
jge
sub
out
je
ret
int
iret
xor
jecxz
and
pop
(bad)
(bad)
push
cmp
jmp
ret
jge
dec
dec
sub
jge
jle
cmp
jl
or
sbb
pop
adc
or
or
js
and
fiadd
or
or
(bad)
or
fs
cmp
xor
sti
dec
jge
mov
sub
adc
lea
or
(bad)
aas
sub
jmp
dec
add
mov
add
inc
add
js
out
mov
icebp
sub
dec
mov
pop
jge
mov
sar
ret
repz
shl
mul
jge
and
retf
jo
dec
xchg
sbb
dec
cs
mov
push
rsqrtps
or
lods
push
fcmovnb
cdq
inc
es
and
pop
sbb
and
add
ret
add
ret
dec
mov
jns
dec
or
adc
(bad)
cli
test
xor
mov
push
and
inc
shl
add
jge
test
popf
xlat
add
mov
or
pop
adc
and
dec
inc
in
test
loope
mov
rcr
add
(bad)
frstor
lea
push
and
xlat
mov
and
sub
(bad)
mov
pop
test
cmp
add
and
ror
mov
imul
dec
loope
xchg
add
lahf
je
mov
lock
xor
js
pop
and
rcl
mov
ror
pop
xlat
retf
pop
shl
test
sub
out
inc
dec
add
in
cmc
(bad)
cmp
adc
and
in
adc
loope
(bad)
call
mov
xor
aaa
push
or
add
pop
sub
mov
xor
adc
add
mov
retf
jne
out
or
or
sbb
jne
pop
xchg
adc
push
in
imul
cmps
fmul
sbb
or
or
ins
rcl
jbe
mov
add
les
shr
mov
cld
pop
jmp
jmp
mov
and
inc
or
inc
sbb
pop
test
pop
add
mov
test
mov
xor
mov
pop
scas
test
or
xor
xchg
arpl
add
cmp
test
mov
xor
inc
(bad)
mov
sbb
push
inc
in
jbe
lods
lods
sub
sbb
mov
mov
pop
or
pop
(bad)
in
in
mov
dec
mov
sbb
push
rcl
xchg
pop
enter
ret
xchg
int3
sbb
fimul
adc
dec
mov
cmp
sbb
fist
gs
fnstcw
lea
mov
push
aad
ret
dec
lods
jnp
dec
add
mov
rcr
mov
loop
test
add
sbb
test
fmul
ins
add
lds
or
push
sub
nop
jno
test
loope
fwait
pop
lock
mov
icebp
jle
hlt
sub
fmul
add
js
sbb
inc
pushf
sti
cmp
cmp
vmread
cmp
rol
push
pop
push
pop
rcr
mov
jnp
jne
add
(bad)
pusha
add
xor
retf
sti
and
pop
add
mov
and
add
xchg
call
call
add
rol
adc
retf
inc
test
popa
call
es
test
scas
sbb
add
push
push
or
test
je
test
add
fs
push
push
push
aaa
sbb
inc
sub
cdq
pop
mov
add
add
push
sahf
jbe
add
or
js
rol
jne
clc
sbb
data16
or
mov
jo
mov
mov
gs
add
ins
pop
mov
xchg
or
test
fistp
inc
xchg
push
hlt
or
popa
out
popa
je
inc
add
sub
and
aaa
adc
sbb
jb
inc
jge
adc
leave
inc
clc
ret
add
and
ins
pushf
sub
(bad)
cmc
retf
cmp
add
mov
jbe
mov
and
mov
js
push
push
push
push
inc
cdq
or
jg
sbb
jl
sub
shl
shr
or
clc
ror
mov
or
xor
repnz
or
jmp
sub
inc
push
or
mov
add
rcl
and
imul
or
rol
(bad)
(bad)
sbb
adc
inc
jl
pop
jg
add
xor
inc
jmp
pop
pop
pop
ret
pop
push
fmul
inc
ins
sbb
shr
and
mov
pop
pusha
jo
mov
push
sbb
mov
dec
cmp
test
and
js
push
sbb
jns
mov
adc
rcl
jmp
jo
sbb
sub
push
fisttp
lea
cs
ss
test
add
jb
sub
and
mov
lea
mov
mov
cs
cli
or
cmp
push
(bad)
mov
jl
inc
cmp
ret
popf
mov
mov
add
xchg
cmp
xchg
adc
dec
adc
inc
clc
add
adc
push
test
add
xor
pop
add
pop
push
sbb
add
rcr
mov
push
dec
mov
ja
aas
in
movs
sahf
push
loopne
pusha
pop
aaa
mov
cli
les
es
dec
mov
dec
sbb
pop
ins
cmp
add
aaa
pop
mov
mov
inc
mov
repnz
ss
outs
and
test
test
inc
mov
push
pushf
cld
scas
mov
xor
mov
int3
fimul
inc
cmp
jne
and
imul
mov
movs
mov
add
sub
push
jo
call
and
mov
stos
lods
cmp
call
ret
outs
pusha
adc
push
inc
sub
lock
je
inc
mov
add
popa
add
pop
mov
push
ja
pop
add
pop
dec
sbb
popf
push
scas
mov
inc
repz
(bad)
in
jmp
adc
movzx
cld
mov
dec
aam
jle
sbb
push
es
lods
aam
adc
or
cli
xor
and
mov
jnp
lods
or
mov
push
mov
mov
ins
xchg
loope
adc
outs
add
and
aaa
gs
std
push
push
add
jne
mov
mov
and
inc
mov
lahf
fs
inc
mov
adc
in
ja
sub
mov
test
pop
and
or
push
es
pop
ret
add
add
jl
pop
and
dec
mov
les
in
ss
cmp
rol
gs
push
or
sbb
pop
inc
or
mov
(bad)
pop
jmp
inc
inc
arpl
mov
inc
adc
sbb
es
mov
lea
loop
fcmovnbe
or
(bad)
out
ins
lea
mov
gs
ror
or
ja
xchg
cwde
ret
scas
fcmovne
add
push
(bad)
enter
stos
and
call
xlat
adc
mov
pop
adc
cmp
push
ret
mov
cmp
add
push
rol
sub
push
cmp
inc
inc
and
sub
pusha
ins
jge
or
xchg
loop
and
push
pmaxub
jmp
push
clc
or
sbb
pop
cmp
adc
(bad)
cmp
xor
fnstenv
or
hlt
mov
pop
cli
call
outs
dec
mov
sbb
add
and
dec
cmp
repnz
and
fistp
add
(bad)
xor
xor
outs
or
inc
leave
aas
adc
mov
add
ret
xor
es
je
xor
popf
push
sub
and
dec
rcr
inc
out
iret
jmp
cwde
mov
les
dec
lods
fcmove
mov
jg
dec
cdq
movs
mov
in
inc
sub
xchg
jge
dec
mov
jmp
les
dec
sub
sbb
sbb
adc
inc
and
xchg
lahf
and
or
or
xlat
xlat
gs
cmps
add
pop
mov
xchg
enter
das
adc
mov
and
imul
push
cmp
adc
cmp
mov
mov
rol
inc
ret
or
data16
mov
dec
lds
rol
xlat
sub
leave
inc
data16
xor
adc
test
pushf
lahf
mov
test
lahf
adc
sbb
and
mov
mov
imul
add
sbb
mov
fidivr
push
add
mov
out
arpl
dec
sbb
add
sub
sbb
sub
add
or
jno
jmp
xor
cld
mov
xchg
push
or
dec
mov
nop
jo
xor
inc
outs
outs
aas
nop
add
push
add
add
lea
in
or
sti
xchg
and
and
mov
ds
inc
inc
or
(bad)
fiadd
aad
aam
pop
push
mov
inc
adc
sar
add
pushf
xor
or
sub
sbb
jns
or
push
push
and
movs
mov
fisttp
cwde
pop
sahf
push
fimul
or
xlat
test
add
out
mov
loopne
mov
dec
jmpw
inc
and
and
and
rcr
xchg
sbb
mov
adc
clc
jl
inc
add
pop
or
sbb
sub
mov
out
je
shl
cmp
out
into
(bad)
cmp
mov
loopne
inc
xchg
out
mov
or
loop
push
adc
loopne
cmp
pop
and
daa
pop
adc
push
and
inc
ss
hlt
adc
and
(bad)
jo
fcom
into
mov
scas
out
and
xor
sti
ret
add
lds
adc
stos
xor
dec
xchg
sub
jo
fild
fs
mov
lea
cmp
dec
shr
cdq
mov
out
mov
add
inc
(bad)
je
cmp
cmp
sbb
shl
xor
sbb
lods
push
xor
xlat
(bad)
retf
ficomp
shr
clc
or
add
add
xchg
mov
addr16
cld
gs
jo
cld
mov
nop
lods
xchg
lds
sbb
jo
xor
pusha
std
push
inc
test
adc
outs
mov
aam
or
mov
mul
adc
mov
ror
cmp
int3
rcl
in
xchg
inc
enter
xchg
adc
les
rcl
xor
ror
cmps
add
and
je
lock
aaa
or
call
sbb
xor
sub
xor
les
stos
mov
xor
les
leave
mov
mov
arpl
xchg
fidivr
test
ins
enter
push
inc
lods
adc
jo
pop
mov
inc
pop
add
adc
ret
jnp
or
adc
adc
sbb
mov
pop
(bad)
cmp
xor
add
mov
or
jmp
lea
fbstp
test
xlat
out
and
les
loope
adc
pop
sub
xor
jo
ins
test
(bad)
mov
call
ins
mov
dec
sub
push
neg
dec
sub
add
and
in
xor
pop
or
hlt
or
inc
cmps
sahf
loopne
mov
dec
inc
call
cmps
mov
push
cld
jnp
adc
xchg
out
dec
push
mov
loope
pop
xor
xlat
mov
mov
mov
retf
sub
pop
in
scas
sbb
xor
hlt
leave
xchg
inc
loope
repnz
jge
mov
and
adc
retf
test
push
enter
test
dec
pop
pop
push
or
or
push
mov
arpl
inc
pop
neg
xor
push
out
adc
sub
xor
ja
or
add
or
inc
add
mov
daa
test
cmps
not
adc
retf
or
fld
retf
icebp
jle
xor
dec
dec
or
or
(bad)
shr
mov
and
ss
jmp
pop
adc
popw
sub
cmp
rol
jmp
jge
mov
lock
mov
and
bound
add
inc
xchg
push
ret
div
loope
xchg
cmp
outs
les
iret
mov
fmulp
sub
cmp
inc
js
cmp
add
sub
nop
dec
or
js
dec
ret
mov
add
jno
add
or
in
cwde
imul
inc
ins
popa
jo
mov
outs
adc
das
xchg
or
add
push
push
mov
ss
cmp
in
pop
rcl
sub
stos
cmp
popf
lahf
dec
in
push
mov
sbb
fcmovne
mov
or
gs
inc
push
jmp
inc
lods
adc
or
jp
jns
jno
arpl
or
ret
dec
fs
push
jo
loope
pop
pop
dec
jmp
outs
or
(bad)
(bad)
add
inc
lock
add
test
aaa
push
dec
mov
push
mov
sub
cmp
inc
or
add
imul
dec
inc
pop
add
test
fbstp
sub
or
in
and
sti
inc
dec
ret
push
or
jp
push
into
jl
and
stos
popa
inc
jne
ins
test
or
lea
add
ret
outs
inc
xor
add
inc
dec
push
rol
xchg
push
mov
stc
jae
mov
xor
nop
shr
adc
sbb
int3
imul
loopne
ins
je
adc
and
xchg
cmps
cmp
dec
arpl
push
data16
cmps
cmps
and
pop
inc
ja
or
push
sub
jmp
inc
clc
push
shl
push
cmp
(bad)
nop
ror
xchg
ins
mov
inc
xchg
enter
shl
rcr
clc
sub
cmp
test
and
sbb
dec
push
imul
sbb
xchg
add
jo
mov
push
xor
cmp
xor
das
push
cmps
mov
or
mov
rcl
xchg
or
add
pusha
jno
and
pop
arpl
rol
std
mov
loopne
adc
int3
inc
adc
in
xor
mov
push
outs
dec
inc
test
add
rcl
sbb
and
inc
adc
jl
pusha
push
test
adc
test
pop
add
inc
inc
adc
xchg
and
adc
sahf
add
xor
fsub
fsub
xor
out
or
add
jg
fcom
cmp
or
mov
xlat
jmp
or
and
adc
fild
scas
push
in
dec
sbb
add
loope
test
cmp
test
inc
add
out
fld
and
mov
or
(bad)
fnstsw
(bad)
push
sbb
sbb
jae
dec
mov
cdq
mov
lock
out
fld
push
mov
out
or
shr
mov
ins
push
call
adc
inc
fistp
aaa
or
cmp
and
xor
add
bt
adc
loop
add
add
and
scas
mov
out
fidivr
add
(bad)
nop
push
pusha
dec
fnstsw
and
pushf
or
mov
and
inc
add
jmp
mov
dec
pop
sahf
mov
adc
inc
mov
sbb
es
add
mov
jmp
add
add
inc
fcomp
push
ds
ss
test
arpl
jg
inc
js
aam
push
xor
and
add
int
add
mov
inc
mov
mov
test
jle
push
and
ret
ins
or
and
retf
or
daa
inc
sbb
jmp
xor
outs
nop
add
and
adc
push
pop
add
jne
rcr
sub
and
adc
or
adc
pop
(bad)
inc
pop
xor
shl
or
mov
(bad)
and
push
into
dec
jne
add
or
ficomp
mov
push
nop
jle
xor
jnp
or
and
inc
adc
popa
push
sub
(bad)
xchg
jg
adc
jb
call
cmp
adc
push
in
imul
mov
mov
lea
mov
jo
add
es
clc
jo
jno
mov
and
push
push
ins
imul
sti
cmovl
js
dec
cmp
int3
mov
adc
jle
jo
in
xchg
out
test
push
sub
ins
arpl
ds
dec
data16
data16
cmp
js
int3
inc
imul
jl
ins
les
shl
jmp
das
mov
mov
fwait
rol
aaa
cmps
and
mov
push
and
clc
outs
mov
fld
mov
cwde
ja
push
xchg
dec
mov
nop
pop
mov
push
jo
mov
push
addr16
popa
in
imul
pusha
jo
and
fstp
in
sbb
(bad)
ins
inc
pop
push
push
or
mov
jae
xor
out
pop
pop
push
sbb
push
sbb
mov
jb
mov
dec
gs
adc
mov
les
cld
pop
test
aas
std
gs
clc
mov
or
fdivr
aam
stc
test
dec
mov
fadd
(bad)
ds
mov
and
mov
rol
sbb
mov
mov
dec
pop
push
iret
mov
add
test
dec
jl
or
sub
push
or
rol
mov
lods
cmp
mov
ins
or
mov
add
fwait
xor
cmp
adc
test
enter
or
push
or
inc
push
dec
imul
mov
or
add
in
in
inc
xchg
push
aaa
or
add
mov
jo
push
push
loopne
bound
ret
or
dec
adc
add
sub
imul
fldlg2
cmps
fisub
xchg
les
sub
add
popa
or
cmp
or
daa
jg
adc
and
push
daa
jg
xchg
or
daa
jg
test
xchg
add
push
push
push
dec
dec
gs
pushf
scas
pop
or
xchg
adc
add
clc
sbb
fs
push
outs
push
jbe
imul
dec
xor
pushf
or
cs
dec
movs
mov
push
dec
cmps
fadd
push
jb
cdq
pop
push
cld
and
dec
add
jae
jb
add
xchg
xchg
div
das
or
cmp
xor
rcl
aaa
mul
int
push
and
mov
and
std
dec
mov
ror
inc
or
add
in
(bad)
lods
test
pop
iret
xchg
or
xchg
inc
outs
push
push
inc
push
push
inc
dec
jg
(bad)
popa
ins
or
adc
jo
arpl
xor
inc
scas
push
fs
hlt
nop
add
adc
arpl
icebp
cmps
mov
sbb
and
add
pop
mov
and
push
outs
inc
or
dec
outs
fs
dec
loopne
jge
ss
add
ins
jae
fs
fs
pop
pop
enter
rol
call
jg
adc
adc
dec
xor
xor
xor
je
sti
jg
sbb
xor
jae
sbb
into
adc
sbb
dec
pusha
ja
sub
ja
dec
addps
mov
pop
ret
xor
sbb
or
aaa
jb
popf
jmp
or
add
adc
xor
push
add
mov
loope
push
adc
inc
(bad)
cmp
mov
clc
es
idiv
mov
popf
and
mov
aam
push
or
inc
pop
inc
inc
inc
(bad)
xchg
or
jl
jmp
aas
or
stos
add
or
pop
lahf
sub
push
push
test
sbb
loop
enter
rol
add
es
mov
jns
add
sbb
adc
popa
jp
add
inc
xlat
jecxz
rdtsc
movs
or
out
pushf
mov
dec
or
adc
outs
sbb
add
nop
push
in
push
das
add
add
cmp
mov
mov
daa
daa
daa
daa
test
mov
daa
cwde
xchg
mov
test
add
cdq
pusha
sbb
mov
es
das
add
hlt
aam
inc
cmps
add
push
pop
fst
or
lea
test
add
mov
inc
push
add
xchg
inc
sbb
jne
das
dec
inc
movs
shl
xor
sbb
out
pop
inc
dec
mov
inc
test
mov
leave
add
sbb
xor
jb
sbb
inc
dec
mov
mov
inc
mov
das
dec
lahf
dec
mov
xchg
rcl
add
inc
dec
mov
loopne
jae
xlat
pop
xor
sub
inc
or
mov
add
mov
mov
sbb
gs
aam
sub
xlat
push
xor
and
leave
leave
in
lock
in
dec
loop
xchg
and
jmp
push
jo
sub
cmp
xchg
push
fimul
cmps
push
fwait
mov
push
and
sti
pusha
add
div
mov
jo
ss
jne
xchg
fcom
not
or
shl
lahf
nop
cvtpi2ps
(bad)
lock
add
xor
mov
fcom
cmp
adc
sbb
ins
out
xor
mov
outs
(bad)
rcl
adc
xlat
cmp
pop
enter
or
or
fcomp
add
jecxz
jbe
pop
ja
fnstsw
enter
add
push
(bad)
and
nop
add
xchg
pop
leave
stos
add
(bad)
dec
or
xchg
jmp
nop
sub
jae
clc
lea
(bad)
xchg
test
rol
mov
stc
inc
nop
inc
xchg
xchg
(bad)
loope
stc
jg
das
sbb
xlat
sbb
xor
scas
adc
es
and
cmp
adc
add
mov
fs
dec
prefetcht0
nop
or
jb
and
dec
xchg
inc
jb
jns
je
xchg
or
or
les
and
icebp
push
or
inc
mov
pusha
aaa
adc
in
and
pop
enter
mov
enter
xor
adc
pop
sub
mov
aaa
nop
clc
sbb
rcl
int
or
add
dec
imul
rol
jbe
cmp
hlt
xchg
fdiv
pop
xor
mov
dec
clc
and
adc
mov
xchg
jno
jo
mov
(bad)
and
pop
cld
mov
adc
adc
sub
stos
mov
fbld
dec
lods
aam
fs
mov
mov
clc
cmp
xchg
pop
push
xor
push
les
mov
out
and
jne
pop
cmp
inc
sub
aam
ins
test
stos
adc
or
in
push
cli
inc
jle
add
fist
int3
xchg
lea
xchg
jae
jg
sbb
and
mov
fs
dec
cmp
add
xchg
push
xchg
or
dec
xor
and
adc
xor
and
sbb
leave
and
dec
sub
xor
xchg
dec
xor
sub
sub
xor
xchg
push
cs
push
xor
cmp
xchg
push
pop
cmp
mov
or
cmp
sub
sub
pusha
sub
dec
shr
push
nop
mov
push
fmul
push
scas
xchg
jo
es
fcomp
outs
xor
popa
xchg
or
and
adc
js
lock
sahf
mov
jo
ror
pop
inc
dec
jne
jbe
std
jae
cmovns
das
outs
dec
inc
outs
sysenter
sti
jnp
dec
jb
pop
outs
jb
inc
ins
jo
xor
or
nop
xor
jb
push
pop
into
adc
cmp
mov
and
outs
ins
(bad)
pushf
inc
add
pop
dec
add
xchg
int3
or
call
clc
jb
adc
mov
xor
or
sub
push
xchg
xor
adc
push
push
inc
test
nop
dec
mov
jae
imul
ror
push
clc
movs
pop
mov
and
mov
cmp
int3
xor
xchg
mov
push
xor
jo
stos
cwde
icebp
cmp
push
jl
lahf
mov
pushf
mov
cwde
aas
adc
lea
call
mov
push
jl
mov
add
js
jno
test
xor
pusha
in
inc
mov
push
les
mov
test
inc
loopne
bound
or
rcr
adc
getsec
cdq
xchg
aas
sti
sbb
add
rol
ins
pop
sub
push
pop
sti
dec
add
das
or
fwait
(bad)
inc
shr
xchg
mov
push
push
mov
adc
or
adc
es
xor
(bad)
es
inc
pushf
aam
and
dec
jmp
push
inc
and
leave
es
push
and
pop
add
mov
out
mov
iret
adc
adc
push
pop
ins
inc
test
add
stos
out
es
add
jns
xchg
add
mov
pop
imul
push
adc
jl
or
xchg
or
in
(bad)
adc
stos
dec
ins
mov
pop
push
cmp
mov
sbb
xor
push
push
pop
(bad)
jo
mov
cdq
mov
test
and
in
(bad)
or
jb
dec
jo
sub
add
mov
lods
dec
mov
push
xchg
xchg
jle
push
aas
es
and
add
adc
mov
pop
ja
push
add
pop
scas
jmp
pop
xchg
push
jo
xor
push
inc
jae
imul
stos
pop
adc
mov
pop
bound
daa
cmp
daa
shl
adc
inc
popa
mov
das
test
aam
and
rcr
jbe
aas
or
outs
jbe
imul
adc
call
retf
mov
jg
push
mov
and
xchg
cmps
or
cld
inc
inc
or
mov
jmp
or
xor
jne
hlt
hlt
pop
popf
repz
sub
pushw
jo
xor
add
or
push
cmp
jl
inc
add
add
adc
push
cwde
popf
aaa
or
mov
cwde
mov
or
aaa
test
loop
sahf
not
cmp
clc
aam
add
push
loope
mov
add
mov
xchg
aas
movlps
scas
adc
push
cmp
jg
xchg
mov
inc
outs
inc
jne
arpl
add
add
cmp
and
cmp
add
jo
pusha
or
and
(bad)
shl
inc
xor
fs
gs
and
add
imul
aaa
sub
lods
ret
arpl
add
push
lahf
inc
add
test
mov
clc
xor
daa
neg
fsubr
std
mov
xchg
dec
jle
or
mov
out
or
adc
add
pop
mov
lea
pop
rcl
push
lahf
push
cmc
or
xchg
xchg
add
in
outs
adc
cmp
sar
mov
ins
cmp
out
test
push
sub
inc
or
cmp
movzx
jg
pop
lods
dec
push
jo
lss
inc
test
shr
cmp
(bad)
xlat
pop
xor
inc
or
mov
lods
and
movd
pop
sbb
ja
into
rol
pusha
ja
and
and
mov
pop
xor
es
das
inc
jb
fild
sbb
sbb
cmp
loopne
jnp
jg
movs
pop
in
jmp
popa
xchg
mov
or
sub
movs
les
sub
cmp
pop
push
add
cmp
movs
ja
pushf
dec
add
cmp
movs
ja
stos
xor
pusha
pcmpgtd
or
js
mov
movs
test
adc
cmps
jg
pop
and
push
sub
into
es
and
js
jg
cmps
cmp
sbb
mov
add
jg
xchg
adc
(bad)
jo
fisub
fdiv
nop
cmps
mov
jo
setle
cdq
and
mov
nop
cmps
jg
mov
jl
pop
divps
scas
out
outs
sub
adc
mov
jl
push
mov
push
test
pop
loop
push
adc
cmp
push
push
inc
add
test
push
mov
test
jne
adc
int3
add
cld
pop
aam
fidiv
mov
loope
mov
xor
adc
inc
inc
push
push
push
bound
out
inc
stos
shl
jp
push
and
mov
sbb
add
imul
jl
outs
jae
in
and
add
mov
and
mov
je
mov
dec
add
inc
add
mov
ins
inc
lahf
add
loope
jo
test
adc
xor
imul
retf
sub
inc
mul
or
and
call
retf
add
lods
test
out
rol
lea
test
cmp
add
inc
sbb
pop
fistp
enter
lods
in
push
mov
sbb
push
enter
je
sbb
add
nop
push
and
add
cmp
or
pop
lods
fbstp
enter
lods
sub
or
sbb
aad
scas
jg
or
pop
ret
cmp
test
je
sub
es
sub
scas
jl
pop
add
aas
dec
je
push
cmp
pushf
jb
or
int3
xor
fs
dec
adc
pop
jo
enter
fcom
jge
inc
jno
mov
dec
sbb
enter
xor
mov
xchg
retf
pop
ja
add
dec
push
or
lock
mov
add
ins
pop
call
sbb
mov
mov
push
inc
cmps
dec
inc
xor
js
sbb
jnp
jae
fist
push
shl
clc
cmps
out
cmp
sti
enter
mov
xor
les
les
mov
mov
arpl
mov
data16
mov
cmp
ds
popf
into
push
sbb
test
add
ret
push
add
sub
addr16
fwait
sub
adc
adc
mov
sbb
sub
hlt
test
adc
cmp
sub
mov
xchg
mov
lods
adc
xor
scas
add
push
push
mov
mov
enter
mov
arpl
inc
push
xor
mov
scas
and
iret
mov
sub
add
scas
lahf
les
(bad)
rol
add
call
cli
inc
add
out
clc
test
cmp
retf
in
add
fwait
add
jo
inc
test
mov
mov
div
les
and
add
add
add
test
or
mov
loopne
mov
dec
ss
push
ins
sbb
outs
xor
cmp
adc
pop
add
or
sbb
push
and
rcr
xchg
add
sub
push
adc
ss
or
in
push
loopne
jae
push
cmp
or
sbb
jne
sub
adc
jmp
sub
add
int
dec
jmp
add
adc
(bad)
int
adc
data16
mov
mov
adc
dec
or
add
jnp
adc
clc
mov
in
or
pusha
and
mov
fbstp
or
push
gs
mul
cmp
jne
sar
popa
mov
and
pop
mov
(bad)
xchg
jne
out
popf
test
iret
adc
sbb
push
mov
mov
pusha
mov
cmp
dec
jg
pushf
call
test
ss
ficomp
jl
lds
cmp
fcmovnbe
in
push
pushf
jmp
jmp
xor
and
inc
push
retf
cmps
sar
push
and
adc
adc
or
adc
std
cdq
mov
add
mov
sub
jae
and
jp
jp
or
popa
data16
or
push
retf
js
test
stos
sahf
add
inc
mov
sbb
sbb
popf
mov
movs
inc
adc
dec
cld
out
add
movs
add
pushf
pop
add
add
adc
and
jmp
pop
cmp
mov
xor
(bad)
adc
xor
jmp
arpl
sub
mov
and
cmp
jne
sti
mov
jne
jb
inc
daa
or
xor
mov
adc
ins
pushf
inc
mov
outs
cmp
dec
xchg
mov
rol
or
add
add
adc
lods
mov
jg
jae
daa
in
mov
ja
(bad)
jmp
jecxz
hlt
or
mov
aaa
test
push
bound
cld
xor
cmp
ja
ins
lgs
(bad)
(bad)
jmp
outs
add
or
or
push
mov
add
adc
add
mov
adc
push
shl
dec
ins
loop
repz
mov
push
es
repz
aas
push
gs
cmp
repz
loopne
sub
mov
dec
pusha
popa
add
sbb
inc
loop
adc
fwait
pusha
mov
and
sbb
inc
add
xor
loopne
adc
cmp
xchg
adc
ror
jmp
add
leave
outs
nop
popa
sub
in
adc
sub
inc
add
mov
retf
adc
pop
and
mov
push
pop
xor
or
shl
popa
daa
inc
into
cmp
lods
ss
xchg
pop
mov
xchg
inc
dec
xchg
mov
or
or
(bad)
cmovp
stos
jle
js
ret
sti
cmp
add
cli
imul
pop
or
and
push
jb
jmp
call
mov
add
dec
in
and
pop
push
sbb
(bad)
jmp
jmp
add
fs
push
rol
shl
and
mov
scas
setg
dec
push
loopne
jecxz
xor
icebp
fcmovnu
mov
inc
sbb
push
add
xchg
jg
iret
and
dec
xor
jmp
mov
and
and
jle
clc
adc
test
pop
fld
xor
dec
dec
ss
(bad)
clc
push
fdivr
cld
push
test
pop
dec
cmc
add
jl
cld
or
or
test
data16
sbb
fstp
pop
pop
jnp
cmp
imul
mov
push
loopne
adc
add
push
push
jae
or
hlt
and
adc
sub
ins
adc
mov
inc
add
dec
jne
lea
cmp
lock
jno
fcom
add
jnp
or
adc
daa
sbb
dec
adc
ins
or
adc
sbb
test
enter
jno
(bad)
in
repz
dec
mov
fmul
ins
cmps
cld
pop
test
adc
test
or
lds
push
xor
push
mov
push
mov
sub
xchg
jmp
pop
and
adc
sub
add
nop
pop
icebp
sub
push
cpuid
test
pop
retf
cmp
jae
mov
rcr
ja
fs
jne
mov
add
lea
mov
add
jmp
lods
fisubr
inc
je
add
outs
adc
lods
adc
pusha
add
ret
inc
lock
aam
inc
xor
dec
mov
mov
test
out
ret
mov
mov
movups
and
or
or
clc
xchg
xor
cmps
scas
cmp
je
outs
jns
(bad)
or
jmp
and
pop
jmp
inc
sub
pop
pop
cmp
inc
push
shl
sub
in
lods
aam
add
mov
aam
add
and
jmp
(bad)
dec
lds
pusha
dec
out
dec
mov
mov
pushf
mov
hlt
cli
adc
jmp
mov
aaa
jne
mov
pushf
lods
mov
cmp
mov
push
jle
pop
sahf
out
mov
dec
pop
(bad)
fcmovnb
jns
sub
movsx
mov
imul
pop
mov
and
mov
push
sub
fld
mov
pushf
and
inc
push
leave
fstp
sub
inc
adc
sub
rep
mov
std
mov
repnz
sbb
mov
arpl
adc
ret
pop
fimul
add
jle
mov
ss
add
ins
jge
pop
pop
(bad)
lods
adc
sbb
push
push
jmp
adc
xor
aaa
rcr
mov
adc
cmp
nop
mov
inc
add
test
mov
int
mov
mov
call
test
jne
adc
mov
push
cmp
or
push
or
inc
mov
push
sub
jae
outs
add
mov
addr16
cdq
test
xor
add
(bad)
push
dec
iret
lea
mov
mov
mov
je
pop
ja
xchg
sar
add
in
adc
(bad)
aas
xchg
push
nop
sbb
jb
sbb
and
cmp
pusha
jmp
inc
xchg
mov
sbb
inc
sti
lods
mov
and
nop
inc
dec
cli
loopne
or
xor
push
cwde
pusha
xor
adc
sub
(bad)
retf
push
cmc
add
mov
or
and
shl
mov
xor
ins
and
jae
pop
adc
inc
xchg
pop
add
inc
cmp
adc
(bad)
std
jo
neg
or
scas
and
inc
vmovsd
inc
and
ja
sub
jmp
push
push
aaa
add
xor
nop
shl
or
cwde
inc
push
sbb
cmp
jne
mov
inc
cmp
adc
jmp
adc
(bad)
iret
jae
js
shr
(bad)
rcr
cli
adc
cs
aam
out
(bad)
cli
adc
sar
ret
pop
test
call
(bad)
(bad)
call
xchg
repnz
loopne
inc
bound
sar
xchg
sar
mov
lahf
ret
mov
sub
xchg
shl
stos
cld
fld
mov
inc
(bad)
pop
xchg
daa
cmp
xor
fisttp
dec
fistp
sbb
dec
imul
stos
scas
nop
dec
or
rol
adc
mov
or
imul
cmp
jge
sbb
jnp
jmp
and
or
fs
and
nop
not
scas
je
inc
and
test
jmp
or
sbb
and
jmp
sahf
mov
popa
dec
sub
adc
add
mov
sub
aas
pusha
sbb
push
pop
repz
aaa
rcl
dec
daa
xchg
jmp
and
jg
lods
xor
push
sti
(bad)
std
jg
sub
test
mov
test
mov
sbb
inc
inc
or
mov
inc
cmc
test
add
inc
call
test
and
push
lahf
push
pop
push
cmp
inc
xchg
arpl
inc
pusha
sub
sbb
xor
popa
(bad)
inc
in
xchg
(bad)
jmp
mov
sub
shl
pusha
mov
fwait
les
test
push
jecxz
ss
(bad)
imul
inc
and
push
mov
rcr
outs
ror
pop
or
jb
mov
mov
mov
mov
and
jns
test
mov
shl
sbb
push
jge
lods
cmp
cld
and
cdq
inc
jl
sub
clc
or
(bad)
out
outs
in
push
in
pop
arpl
jb
xor
cmps
(bad)
mov
jo
push
mov
and
mov
or
int3
shr
cmp
sar
cmp
pop
jg
int3
inc
cmp
mov
or
xor
lock
push
jo
dec
ins
xor
adc
movsx
not
test
jns
mov
rcr
add
push
inc
or
addr16
(bad)
sub
(bad)
pop
(bad)
lock
dec
je
scas
mov
out
or
jmp
mov
mov
inc
pop
movs
and
test
stc
call
shl
fwait
std
js
outs
and
leave
pop
(bad)
push
xlat
push
out
mov
lock
push
ins
xacquire
pop
pop
iret
repz
push
mov
push
call
pop
ins
mov
fxch
inc
add
sub
xor
pop
xchg
xchg
xor
add
add
push
jo
jbe
jae
hlt
adc
jmp
cmp
jae
daa
loope
hlt
cmp
sbb
mov
or
jae
shl
jmp
xchg
pop
call
cli
cmp
add
lock
push
sbb
adc
outs
out
daa
inc
cld
popa
sub
jb
ret
sbb
add
mov
ss
adc
mov
pop
or
pop
adc
sbb
cmc
xor
push
fadd
xor
sti
dec
jbe
and
dec
push
in
adc
ins
sub
add
cmp
or
rcl
lds
inc
pop
push
adc
nop
or
dec
add
sub
jns
retf
and
add
(bad)
xor
or
push
inc
mov
cmp
pop
addr16
and
adc
xor
imul
push
mov
sub
das
mov
dec
sbb
jecxz
(bad)
(bad)
out
repnz
nop
add
ja
out
int3
and
push
int3
ins
jns
neg
sub
push
xor
pop
sbb
pop
not
mov
and
cmp
adc
adc
cmp
test
cmp
adc
sbb
mov
iret
adc
cmp
push
imul
dec
stos
push
xlat
daa
add
int
or
and
fcom
adc
mov
aad
enter
sbb
or
cdq
les
and
or
fld
aaa
jnp
js
pop
adc
add
or
pop
adc
add
inc
and
ret
inc
call
xor
add
pop
fdiv
inc
iret
adc
mov
mov
aas
or
ins
test
popa
push
dec
rol
mov
jo
cdq
cmp
mov
popa
cmps
dec
adc
nop
add
adc
inc
loopne
ins
and
int3
push
xor
xchg
pop
rcr
inc
lock
hlt
add
or
rol
xchg
inc
or
mov
das
call
nop
call
mov
mov
jb
cwde
icebp
add
push
sub
les
int3
dec
pop
pop
aaa
sub
push
enter
ret
mov
aas
and
xchg
aam
push
sbb
aas
ror
push
stos
and
out
push
shl
out
jl
inc
push
or
sbb
mov
repnz
pop
jl
pop
adc
jns
mov
and
mov
adc
jb
mov
std
aas
arpl
xor
enter
dec
jnp
cmp
cmp
or
sub
mov
fwait
mov
shl
mov
jnp
loope
and
or
adc
mov
ror
pop
xor
jnp
movs
and
adc
or
nop
into
or
mov
jno
lahf
mov
aam
loop
repz
mov
int3
push
cmp
jns
into
jno
test
sysret
out
ficomp
cdq
es
push
(bad)
xlat
jmp
cld
mov
adc
fld
jno
fimul
xor
cmp
push
adc
mov
cmp
jmp
mov
and
sbb
push
inc
cmp
sub
xor
sbb
test
test
cmp
sbb
adc
ret
xchg
add
movs
sbb
(bad)
and
imul
fwait
cmp
xor
xchg
add
inc
jge
les
mov
lds
adc
cmp
std
call
inc
add
bnd
aad
push
push
ja
repnz
xchg
pushf
xchg
push
(bad)
repnz
lds
jmp
maxps
iret
aad
or
mov
or
clc
push
jmp
adc
push
adc
inc
mov
jl
mov
xor
adc
mov
test
pop
cmp
mov
sti
leave
pop
mov
outs
pop
fisttp
add
mov
mov
test
mov
jb
xchg
mov
inc
ror
(bad)
mov
pop
(bad)
out
sub
(bad)
addr16
xlat
adc
addr16
frstor
(bad)
mov
inc
mov
fcmovnb
addr16
inc
das
popa
mov
ja
in
or
or
lahf
add
cdq
out
fcomp
movs
adc
sar
sub
out
sahf
sbb
out
sahf
sbb
(bad)
inc
xor
aam
inc
fstp
pop
in
jnp
jnp
icebp
push
dec
sbb
cmps
popf
add
test
retf
inc
ins
add
and
mov
xchg
sbb
in
xchg
icebp
pusha
sbb
inc
fcom
and
mov
sub
xchg
dec
rcr
imul
pop
sub
add
or
or
sbb
add
ret
add
sub
fadd
nop
sbb
lea
arpl
jb
sbb
jno
nop
and
and
pop
iret
repz
cmp
push
ins
fidiv
inc
stos
push
push
sahf
test
dec
or
jns
add
mov
mov
sub
iret
push
sbb
mov
sbb
in
add
sub
das
push
sbb
sbb
in
add
jmp
pop
jno
jmp
ret
popf
and
pop
scas
mov
fld
and
mov
sub
pop
sti
and
adc
dec
or
adc
inc
dec
test
or
sbb
neg
pop
loopne
mov
mov
rcl
fdiv
inc
pop
adc
mov
ds
sbb
sub
clc
stos
dec
adc
fisub
call
jle
add
or
ins
loopne
pop
lock
jmp
inc
repnz
add
cmp
fsubr
das
fld
mov
mov
xchg
js
and
add
or
gs
sbb
(bad)
rcr
and
inc
inc
xchg
add
adc
and
push
lock
push
gs
mov
stos
jge
out
into
(bad)
repnz
repz
cmp
push
sub
cli
cmp
cmp
fcmovu
pop
pop
dec
bound
loop
iret
mov
and
imul
add
mov
pop
inc
fisttp
xor
cld
pop
fld
push
les
or
mov
xor
movs
(bad)
ds
xlat
retf
pop
inc
movsx
mov
inc
and
movsx
scas
add
mov
mov
sti
lock
daa
adc
xor
or
dec
mov
or
mov
xchg
lods
dec
mov
add
adc
mov
mov
int3
sub
jecxz
mov
adc
pop
int3
je
rol
inc
xor
sub
fild
loopne
mov
idiv
aam
test
push
loopne
repz
outs
cs
rcr
pop
inc
pop
xor
iret
jae
mov
loopne
(bad)
sbb
mov
push
mov
and
fwait
sub
adc
dec
adc
inc
inc
dec
mov
test
mov
xor
push
mov
add
jnp
push
ins
push
mov
cmc
push
sbb
push
jmp
out
jmp
jmp
jmp
jns
fcomp
lock
xor
adc
pop
inc
dec
mov
push
and
adc
fsubr
adc
(bad)
or
and
add
out
pop
adc
push
mov
cmp
cmp
repz
xor
xchg
jae
xlat
mov
sbb
mov
or
int3
add
js
push
adc
sbb
fild
movsx
and
enter
ja
jecxz
retf
in
sbb
ins
in
xor
jb
xor
push
cmp
aam
cli
push
in
inc
ja
cmp
sbb
(bad)
test
int
xchg
dec
or
fxam
xor
push
inc
mov
leave
push
xor
in
in
addr16
ins
call
mov
and
jae
pop
jne
mov
addr16
and
mov
pop
pop
mov
jb
out
fnsave
jecxz
cmps
and
and
out
sub
cmc
js
popa
shr
xor
sbb
dec
push
mov
hlt
adc
push
or
or
test
dec
pop
jns
xor
inc
pop
icebp
in
pop
repnz
clc
in
or
repz
mov
inc
into
repnz
or
sbb
out
lods
mov
stc
pop
pop
push
push
cmp
repz
stos
les
fstp
pop
sbb
ins
rol
push
imul
aam
pop
and
or
inc
shl
cmps
in
test
fstp
sbb
sub
and
fsubr
mov
psrlq
and
and
ds
inc
add
mov
sub
(bad)
aas
enter
shl
imul
jp
aas
mov
jle
sub
out
fidiv
sbb
inc
sub
in
sahf
out
(bad)
pop
pop
aas
push
ins
test
mov
add
add
sbb
fstp
sbb
arpl
cmp
sbb
add
test
test
loop
jmp
sbb
(bad)
jo
cmp
xor
jmp
or
aaa
aam
aam
sub
outs
lock
cmp
xchg
pushf
loop
jno
arpl
aas
lock
push
or
push
jmp
movs
in
ins
das
or
add
sbb
xchg
rol
cmp
sub
inc
jb
cmc
jmp
fistp
cld
jmp
push
repz
add
ins
jmp
push
shl
out
sub
or
scas
pop
sub
xor
lahf
dec
dec
in
dec
push
pop
push
aaa
in
cmp
jne
pop
pop
ja
xchg
push
lods
enter
repz
xchg
add
inc
es
inc
mov
outs
mov
out
les
and
and
cmps
xchg
or
push
pop
mov
sub
fldcw
ins
sbb
mov
xor
pop
inc
outs
aas
or
les
push
in
adc
movs
out
inc
add
bound
adc
or
cmp
sub
dec
jl
jnp
pushf
mov
bnd
pop
push
out
cmp
leave
jnp
push
ds
bound
xchg
aaa
in
inc
adc
pop
clc
sahf
out
lahf
es
es
sbb
ret
fild
inc
cmp
pop
push
xchg
dec
test
jmp
movsx
mov
pusha
shl
or
and
out
cmp
or
jmp
pop
ret
sbb
and
push
sbb
cmps
xor
mov
out
ret
push
mov
push
mov
push
ror
inc
mov
(bad)
sbb
imul
inc
dec
and
adc
cmp
outs
aam
test
sar
push
mov
xchg
xor
mov
add
outs
scas
inc
dec
je
and
inc
sbb
xchg
sub
jo
je
mov
fs
inc
ss
mov
test
push
dec
out
ins
js
add
lock
adc
sbb
jb
add
fisttp
mov
push
inc
js
mov
imul
imul
call
in
ror
fsubr
ss
js
fnstcw
push
mov
push
inc
mov
enter
repnz
(bad)
or
shl
stc
add
loope
(bad)
in
dec
rcl
stc
dec
stos
sbb
push
mov
dec
cmp
jne
ror
ror
mov
(bad)
hlt
rol
mov
int3
add
or
cdq
xor
inc
sbb
pop
inc
in
or
iret
stc
push
sbb
push
fldcw
sbb
enter
repz
push
jae
(bad)
loopne
loope
hlt
mov
pop
cmc
inc
out
jne
fbld
dec
cmc
pop
pop
xchg
cmps
push
mov
cmp
or
sub
adc
inc
cmp
dec
jmp
neg
cmps
sbb
cmp
sbb
loopne
adc
mov
call
or
adc
loopne
add
test
loopne
rcr
mov
fs
fst
fadd
push
push
jnp
add
push
gs
push
jae
add
and
fistp
inc
fimul
retf
mov
mov
jb
jne
push
pushf
push
add
and
loopne
xchg
mov
ds
and
xchg
gs
movzx
nop
dec
push
stc
dec
mov
mov
adc
dec
call
or
inc
test
xor
fmul
mov
int
pop
xor
jl
xchg
mov
sbb
sbb
inc
out
lds
dec
sbb
out
js
loope
js
pop
dec
pop
gs
add
sub
test
jb
jne
dec
push
or
clc
cs
fwait
pop
test
lods
push
aam
not
push
mov
mov
jl
sub
cdq
xor
test
leave
pop
sti
nop
sbb
push
call
xor
not
test
add
pop
add
xchg
je
add
xchg
ins
movs
dec
jo
dec
jo
sub
pusha
(bad)
and
enter
jnp
add
sub
test
imul
push
in
mov
mov
imul
mov
ins
sbb
ins
daa
out
bound
jb
push
push
nop
push
sbb
js
mov
fs
mov
lea
jnp
pusha
mov
inc
pusha
xchg
pop
dec
mov
fs
mov
pop
out
dec
das
sbb
add
mov
xchg
push
push
fimul
push
mov
xchg
mov
dec
push
push
sub
(bad)
cmc
jmp
aas
jmp
mov
sbb
mov
cmp
jmp
add
loope
pop
popa
and
shr
inc
dec
and
adc
(bad)
push
cmp
xchg
add
lods
rcr
or
aas
or
adc
xor
(bad)
ds
mov
shl
icebp
sub
cmc
xchg
inc
test
pop
iret
cmc
stos
in
repnz
cli
jns
pop
pop
adc
or
cmp
sti
sub
add
int
push
sti
add
outs
mov
(bad)
daa
cmp
mov
jge
in
dec
das
pushf
dec
push
xor
(bad)
cli
jmp
xor
or
sti
pop
mov
push
fcom
loopne
fsub
cmps
pop
sbb
nop
mov
outs
sbb
sbb
mov
jno
les
push
loop
in
dec
ja
sti
je
jbe
jg
cmp
fsub
sbb
pop
sti
mov
inc
lods
adc
inc
jecxz
dec
fs
into
jl
out
push
test
shl
jns
ss
pop
js
(bad)
pop
(bad)
push
test
push
push
(bad)
pop
pop
stos
icebp
cmp
push
loope
sbb
aaa
(bad)
and
sbb
fiadd
dec
or
adc
rol
xor
test
and
xchg
pop
push
dec
lea
add
cmp
push
jno
pushf
sbb
fdiv
pushf
mov
cmp
cwde
sti
xchg
lea
xor
add
nop
xor
lock
mov
aam
cmp
lds
pop
pop
pop
and
imul
cmp
div
sbb
inc
movs
jmp
in
loop
movs
addr16
mov
lahf
add
xchg
repz
jns
shl
add
inc
push
imul
inc
in
test
pop
sar
xchg
mov
nop
xchg
paddsw
fwait
lock
mov
and
and
mov
inc
mov
inc
les
or
pop
sub
sub
pop
pop
push
ret
adc
lds
(bad)
es
and
loopne
mov
mov
mov
test
inc
mov
popf
fs
mov
loop
xchg
pusha
inc
pop
dec
or
lea
pop
sub
push
or
imul
dec
push
or
ret
jmp
adc
jmp
das
jmp
sbb
pop
cwde
jns
dec
lea
sbb
ret
inc
idiv
rcr
cmps
xchg
outs
jb
fcomp
test
test
add
imul
jae
push
push
je
jg
and
add
add
adc
(bad)
add
cmp
loopne
repz
add
xchg
sub
in
shr
inc
push
mov
inc
fisubr
shl
lock
inc
stos
or
xor
xor
push
mov
cs
adc
dec
add
iret
repz
push
jle
mov
cmovg
jns
add
bound
xlat
movs
jge
xor
pop
pop
mov
movs
push
mov
(bad)
adc
and
stc
leave
mov
push
loope
mov
push
mov
popa
dec
pop
mov
pop
mov
ins
push
popa
mov
lds
dec
cmovs
and
sti
xor
icebp
xor
out
push
test
push
fnstsw
ror
pop
add
inc
repz
and
and
fdiv
(bad)
js
inc
inc
test
or
stos
mov
or
xchg
mov
mov
pop
pusha
pop
push
push
movs
cmp
jns
add
repnz
sbb
(bad)
stc
jg
test
or
push
popa
xor
(bad)
ins
add
stos
pop
adc
lea
or
shl
ja
mov
dec
repz
add
inc
pop
dec
adc
mov
push
mov
push
and
sub
sub
sbb
add
sub
push
cmp
(bad)
ja
mov
push
xor
mov
sbb
in
dec
repnz
inc
pop
inc
xchg
push
push
and
or
dec
enter
dec
or
test
add
or
retf
or
adc
push
add
inc
nop
inc
adc
push
or
or
xchg
or
sub
mov
xchg
xor
pop
jecxz
cli
(bad)
and
or
xchg
pop
cmp
jle
je
jmp
sub
std
je
sub
outs
ss
dec
adc
mov
or
cmp
test
leave
sbb
ss
pop
lahf
sub
push
sbb
mov
(bad)
ins
push
and
dec
adc
inc
retf
ret
pop
pop
pop
mov
adc
sub
data16
mov
fisubr
xchg
pop
rcl
ins
outs
or
push
jb
dec
inc
pop
pop
jb
(bad)
dec
or
add
xchg
add
push
add
call
sbb
test
sbb
mov
pop
cli
mov
cmp
mov
xchg
xor
movs
jne
dec
or
in
or
mov
adc
mov
cmp
in
inc
cmps
aas
adc
mov
inc
or
cs
add
mov
push
xchg
add
cmp
inc
xchg
mov
push
pop
push
add
adc
sub
and
xchg
fadd
mov
test
add
add
pusha
cs
scas
and
pop
or
and
pop
fistp
ins
xchg
and
fistp
mov
jo
div
rcr
mov
adc
ret
dec
mov
or
push
sti
xchg
mov
dec
outs
jne
pop
pop
mov
sub
dec
dec
push
or
sub
inc
movs
adc
out
je
pop
pushf
(bad)
xlat
push
mov
lahf
jnp
add
adc
xor
adc
cmp
pop
or
test
lock
pop
pop
or
test
cmp
mov
or
xchg
or
cmp
cmp
test
not
clc
clc
shl
jb
je
dec
je
xor
inc
inc
mov
cmp
out
rcl
dec
cmp
ss
lahf
mov
je
xor
push
or
bnd
xlat
ja
jmp
jg
and
pop
xchg
add
jb
rcl
pushw
add
aaa
adc
loopne
aam
cmc
jmp
es
in
jno
icebp
dec
arpl
mov
add
js
jmp
(bad)
jmp
sub
lock
xchg
in
adc
popf
push
mov
cmp
mov
or
cld
jo
lea
ror
adc
adc
and
sub
inc
sbb
retw
lods
mov
adc
loopne
mov
cli
sti
or
jmp
dec
push
xor
pop
and
call
enter
mov
sbb
sbb
stos
adc
(bad)
fs
mov
es
push
call
outs
jg
xor
jmp
jbe
or
adc
xchg
push
or
aad
cmps
rcl
call
fwait
inc
lea
cmps
push
or
sub
or
add
xor
push
std
aad
les
rol
dec
mov
rcl
adc
add
adc
add
adc
or
adc
sbb
(bad)
pushf
sbb
inc
sbb
cwde
xchg
mov
lods
add
data16
jnp
lahf
scas
xchg
or
jmp
xchg
jmp
mov
jmp
test
jne
inc
ins
in
jns
jne
jmp
and
jns
dec
xchg
dec
sbb
lea
mov
mov
lods
daa
cmp
das
or
in
in
adc
leave
inc
(bad)
add
jne
cmp
jae
jmp
in
cdq
pop
add
sbb
jbe
outs
dec
sbb
test
mov
ja
push
daa
jbe
fucomp
or
fnstsw
fcomp
mov
cmp
ins
adc
fcompp
cmp
and
push
mov
inc
inc
add
movs
jle
xor
psllq
enter
imul
inc
pusha
inc
or
sar
jno
or
add
sar
dec
and
push
mov
add
jbe
adc
add
mov
shl
mov
jns
cmc
inc
pop
sahf
out
sahf
adc
mov
ins
movntps
ret
(bad)
jns
pop
add
add
and
mov
pop
mov
and
xor
ins
adc
lods
mov
mov
and
adc
leave
dec
mov
les
add
cs
sbb
aad
sar
add
dec
je
pop
inc
mov
(bad)
sbb
jmp
(bad)
shr
xor
ror
(bad)
xchg
adc
cmp
adc
jmp
in
pop
inc
sbb
adc
neg
push
push
push
fcomp
push
scas
or
jae
out
adc
mov
sbb
mov
(bad)
in
loope
mov
add
cmp
mov
fidiv
icebp
aaa
mov
popa
daa
inc
sub
and
push
or
fnstsw
jb
cmp
jl
sbb
lods
test
mov
fdiv
ds
(bad)
xchg
dec
gs
add
push
adc
dec
cld
nop
inc
pop
int3
out
mov
xor
mov
adc
mov
inc
xchg
inc
xor
or
or
fsubr
add
xchg
pop
xor
ins
jecxz
or
mov
cmp
push
stos
loopne
cmp
fwait
inc
icebp
dec
inc
je
add
rol
or
enter
xor
in
mov
mov
rol
mov
in
or
add
call
add
mov
sti
dec
aad
loope
dec
fdiv
stc
in
sub
js
mov
ss
inc
test
shl
and
sub
add
js
or
fsub
sub
inc
outs
mov
add
scas
je
pop
jb
lods
fcomp
add
push
rcl
xchg
pop
pop
push
lods
push
into
lock
rcl
out
jmp
imul
push
sti
in
add
adc
sub
jmp
push
jno
jmp
das
xor
sbb
jbe
sbb
hlt
mov
or
xchg
or
xor
mul
jmp
mov
loope
xchg
push
xchg
inc
jge
mov
jo
je
jns
loope
lods
das
cs
add
xor
ret
pop
push
pop
popa
mov
and
add
push
dec
cmp
mov
xor
frstor
add
bound
push
scas
sbb
inc
xor
fisubr
popa
add
push
push
ss
pop
shl
inc
ret
jo
arpl
or
outs
xchg
test
inc
es
aaa
data16
cs
es
je
in
faddp
aaa
push
imul
ja
and
out
inc
call
ret
and
inc
push
icebp
and
dec
pop
jne
loope
add
jns
das
push
pop
(bad)
lock
das
xchg
cmps
add
add
sbb
xchg
push
fnstenv
and
xchg
push
xor
add
call
mov
adc
sub
mov
out
inc
addr16
push
and
jmp
dec
sub
add
sub
push
jg
push
add
and
mov
dec
fcom
cli
sar
cmps
mov
rol
rcl
shl
adc
adc
(bad)
test
pushf
je
into
in
test
inc
les
cmp
hlt
mov
lds
jmp
out
add
xchg
pop
bound
push
mov
inc
add
jns
inc
ja
xor
daa
aaa
push
mov
data16
add
or
adc
add
or
adc
sbb
movs
add
xchg
cmp
rcl
add
lds
sub
adc
inc
je
or
call
mov
sti
and
mov
pop
push
push
gs
push
lea
sbb
adc
cli
ds
aas
push
mov
dec
pop
adc
cmp
or
or
dec
mov
xchg
push
and
ins
int3
push
mov
add
xor
nop
mov
push
mov
arpl
xchg
cmps
icebp
adc
adc
lea
push
icebp
pop
xlat
or
xchg
inc
pop
xor
int
clc
pop
push
into
popf
adc
cmp
imul
jmp
mov
dec
jo
pop
pop
test
lds
pop
mov
and
pop
xchg
dec
sbb
push
aaa
adc
sub
and
add
pop
xor
mov
cmps
ds
cli
add
mov
and
pop
mov
mov
adc
arpl
add
xor
jmp
xor
adc
sbb
jo
push
ins
or
fst
add
add
ret
sbb
jb
stos
dec
mov
mov
or
and
je
fdiv
push
inc
or
cmc
gs
rol
pop
dec
xchg
sbb
dec
sar
sti
test
pop
adc
or
test
cmp
xor
xlat
adc
enter
clc
mov
sbb
sbb
jmp
xor
sub
inc
mov
out
mov
adc
out
loopne
dec
mov
mov
rcr
js
jo
or
fcom
loopne
mov
xor
push
loop
call
pop
dec
dec
(bad)
push
pop
push
out
ror
or
jbe
dec
lea
mov
push
push
sub
pop
add
scas
sbb
push
push
dec
adc
mul
aad
and
xor
or
call
cmps
cmp
(bad)
pusha
pusha
mov
mov
mov
ret
pop
sub
dec
shr
ret
adc
and
inc
cmp
or
push
jae
jl
jge
lock
adc
add
jg
adc
and
push
push
call
movs
(bad)
adc
push
popf
xlat
cdq
mov
lea
and
imul
loope
je
or
add
pop
and
mov
mov
movups
and
mov
jne
sub
jecxz
lock
sub
inc
shl
or
pop
push
sti
mov
clc
call
in
or
ret
mov
es
(bad)
mov
mov
inc
jle
push
dec
jns
mov
xchg
aam
lea
pop
je
add
fsub
movs
lods
mov
dec
call
in
cmps
lea
loopne
mov
xor
ja
out
data16
cmps
stos
sar
adc
add
push
ret
inc
sub
mov
push
enter
sub
inc
jg
ret
inc
mov
jne
mov
sbb
lock
fmul
add
xor
fiadd
popa
std
mov
in
(bad)
fcomip
push
mov
daa
and
test
retf
add
or
jne
jge
pop
jo
push
lea
mov
adc
sbb
mov
xchg
or
addr16
mov
cli
cdq
dec
sbb
mov
sbb
push
in
bound
adc
push
dec
in
loope
mov
and
out
pushf
adc
or
shl
xchg
test
(bad)
xor
adc
aaa
jge
cli
mov
cmp
inc
dec
jne
pusha
jmp
cmp
jl
mov
neg
inc
mov
sub
mov
bound
adc
dec
das
out
push
dec
cmps
shl
jp
ror
dec
jmp
ss
sub
lds
rcl
push
xor
push
inc
sbb
push
in
js
inc
call
cmp
(bad)
mov
mov
mov
mov
js
push
and
sbb
ror
ins
in
neg
cmp
cmp
jne
movzx
test
pop
or
shr
jle
or
lock
int
je
pcmpeqb
sbb
nop
add
arpl
out
dec
dec
std
cmp
push
xchg
rcl
push
mov
imul
lods
cmp
jmp
mov
push
sub
sbb
jb
clc
mov
icebp
or
repz
mov
rcl
sub
jne
jmp
jle
and
adc
je
lods
fmul
push
aam
xchg
add
ret
dec
lock
mov
movs
mov
lds
and
cmp
arpl
add
pop
mov
retf
pop
cdq
adc
repnz
lss
pop
pop
call
push
cmps
jo
test
dec
in
inc
mov
xchg
fs
inc
rol
inc
into
sub
mov
push
sub
in
push
(bad)
jns
cmps
stc
or
dec
mov
out
imul
push
adc
add
inc
add
imul
fstp
add
sbb
and
cmc
sub
cs
leave
rcr
movsx
in
inc
mov
sub
mov
and
cmp
add
(bad)
pushf
sbb
test
sub
cmp
adc
add
adc
dec
sar
mov
or
jmp
sbb
data16
or
push
fild
inc
nop
loopne
xor
pop
fcom
stos
and
xor
xor
and
sbb
dec
jnp
cld
jmp
pusha
jmp
inc
mov
and
shl
cmp
clc
adc
cmp
test
sbb
dec
fdiv
mov
cmp
mov
(bad)
push
mov
dec
das
mov
test
call
and
jle
xor
(bad)
in
imul
call
add
xchg
(bad)
xor
mov
adc
cmp
loopne
aam
adc
add
pop
aad
cdq
imul
loope
or
inc
xor
cld
arpl
cmp
pop
adc
pop
sub
inc
jmp
jne
mov
(bad)
sbb
cmc
add
mov
ret
std
fidiv
ret
inc
add
ja
clc
hlt
xor
cmp
cmps
shr
push
in
leave
and
lock
loopne
out
inc
or
retf
enter
push
rcl
inc
pusha
sub
push
lock
or
out
mov
pop
loop
repnz
add
adc
out
push
and
inc
push
pop
xor
pop
out
or
lea
mov
cli
mov
hlt
or
mov
and
push
(bad)
jp
sbb
rcl
fwait
pop
frstor
pop
mov
mov
pop
jnp
fisttp
sbb
or
mul
rcr
push
push
jmp
push
xchg
ret
cmp
jno
cli
loopne
gs
mov
sub
dec
xchg
jmp
mov
add
jmp
add
les
push
push
in
pop
repz
dec
lea
in
xchg
std
sub
push
lahf
stos
push
imul
adc
or
or
adc
dec
in
aad
fcomp
add
jl
mov
jmp
call
xor
cmp
jl
sbb
std
ror
cwde
out
mov
in
push
lahf
pop
xor
cmp
xor
cmp
out
cmps
rcl
xor
push
es
pop
push
xor
inc
movs
rol
retf
or
push
imul
add
inc
pop
push
std
call
add
pop
xchg
(bad)
adc
into
mov
xchg
or
mov
call
adc
xor
aas
add
push
add
mov
rcl
pop
(bad)
add
mov
int3
leave
sub
ror
push
or
adc
mov
sbb
mov
or
sbb
aas
rol
sbb
xchg
pop
rol
adc
mov
adc
xor
mov
imul
lahf
dec
mov
pop
fiadd
dec
nop
mov
fstp
in
sub
test
into
enter
dec
inc
adc
xchg
push
iret
mov
popa
daa
or
push
xor
cld
mov
js
ss
jg
ins
or
and
(bad)
fwait
inc
inc
mov
shl
sub
sub
sub
add
mov
xchg
popf
jbe
push
gs
(bad)
push
int
pop
jge
sbb
adc
mov
push
icebp
aas
pushf
loopne
test
inc
rcl
test
fsub
mov
jmp
add
enter
pusha
sbb
in
add
jmp
mov
(bad)
les
and
sub
add
sbb
jbe
or
mov
leave
jmp
mov
icebp
or
gs
lock
inc
mov
xlat
(bad)
test
call
or
loope
fld
sbb
ss
mov
sbb
and
pop
aam
jle
sbb
cmps
jno
add
push
pop
aad
jnp
ins
dec
and
sbb
xchg
push
cmp
xchg
fwait
enter
cmps
lods
or
xor
xor
xor
ins
daa
mov
aam
out
xchg
int3
rcr
mov
jno
sbb
pop
pop
loop
ret
mov
(bad)
cmp
fisttp
jmp
push
push
dec
scas
(bad)
pop
or
add
add
iret
xor
sbb
push
lahf
inc
clc
and
or
pusha
push
inc
adc
fcom
push
pop
icebp
dec
mov
pop
and
ja
(bad)
aam
sti
nop
xor
fdiv
popf
and
and
outs
idiv
lock
inc
add
cmps
(bad)
hlt
push
sbb
nop
ss
jg
xchg
xchg
fcompp
inc
jae
jae
inc
xchg
lea
shl
arpl
shl
int
and
mov
les
inc
cmp
ss
add
ins
inc
cmp
div
out
das
mov
stos
test
clc
adc
mov
ds
daa
cmp
xchg
sahf
and
in
jns
jg
sub
inc
retf
fcomp
sub
push
xor
inc
movs
push
push
mov
test
xor
mov
dec
lea
cmp
sub
adc
lahf
and
xlat
sbb
cmps
fisttp
shr
cmp
shl
dec
jae
pop
jl
stc
inc
ror
lock
lock
shr
jns
je
movhps
xor
jns
jne
xchg
fs
jno
push
mov
movs
or
lds
mov
leave
dec
call
nop
dec
and
lods
cmp
jbe
xchg
dec
sbb
push
std
push
sbb
or
mov
push
add
sbb
and
fsub
xchg
ds
out
adc
jb
jge
ret
fs
mov
test
aam
test
xor
xlat
sub
shr
fistp
adc
ins
jb
or
pop
add
push
cmp
dec
push
ins
jg
adc
xchg
adc
mov
push
lahf
shr
and
mov
mov
sub
and
js
dec
mov
dec
adc
xchg
push
mov
pop
mov
cmp
sbb
mov
cmp
retf
gs
push
cmp
sbb
xchg
lea
sbb
mov
sbb
mov
retf
mov
push
cmp
push
sti
sbb
push
(bad)
fsubr
xchg
fild
es
fcom
sub
int3
outs
mov
in
adc
cmp
fidivr
xchg
xadd
cmp
jne
inc
and
xchg
xor
add
xchg
xor
add
dec
mov
inc
add
add
sub
je
add
push
xchg
js
dec
mov
call
push
jo
or
outs
imul
outs
adc
addr16
adc
and
or
pop
mov
sbb
outs
adc
push
sar
stc
add
fsubrp
sbb
push
sbb
mov
jnp
dec
push
adc
add
ins
jo
or
outs
jg
and
push
inc
jns
test
lock
dec
xchg
loope
or
mov
sub
cwde
inc
pop
jp
push
sub
adc
inc
adc
in
push
lock
pop
jle
push
push
xchg
jno
xchg
xchg
mov
ds
iret
inc
sub
sub
jbe
inc
cmp
add
cmp
mov
sbb
push
inc
dec
xchg
(bad)
loopne
xchg
scas
push
icebp
call
fst
xor
adc
pop
push
push
jne
ins
imul
sbb
mov
retf
add
xchg
mov
xor
mov
movs
fild
test
push
inc
pop
cmp
xor
add
pop
push
push
pop
xor
mul
pop
or
push
or
fwait
scas
cmp
add
add
pusha
cmp
rcl
xchg
adc
xchg
inc
xchg
mov
ret
add
inc
scas
and
add
das
sbb
inc
ret
or
ja
sbb
xor
xchg
or
int3
xor
adc
pop
mov
sar
mov
adc
add
pop
xor
ja
and
imul
in
ss
pop
cmp
ds
inc
pop
imul
pop
and
adc
pop
xor
adc
pop
or
mov
jne
push
out
pop
or
rol
xor
pop
mov
cmp
pop
xor
or
push
mov
in
xchg
es
pop
nop
sbb
and
test
popa
push
or
dec
or
inc
dec
mov
inc
jmp
test
xchg
xor
sub
sbb
inc
ins
adc
xchg
add
jl
jecxz
inc
loope
inc
inc
cmc
mov
leave
das
and
fild
inc
and
add
lea
inc
add
(bad)
rep
jae
push
enter
out
jae
repnz
push
sbb
outs
add
adc
cmp
mov
cmps
inc
loop
fisub
add
adc
inc
xchg
cmps
push
rol
sub
in
add
ja
mul
icebp
sbb
push
cli
mov
es
iret
jae
repz
js
test
cmp
or
cmp
add
inc
cld
pusha
lock
ins
pusha
inc
cmp
mov
inc
or
ds
pop
lahf
inc
jge
fidiv
(bad)
push
aam
leave
or
dec
inc
jo
sar
test
pop
adc
or
mov
and
push
add
gs
clc
mov
xor
test
in
enter
call
sti
into
imul
pop
adc
ins
lea
test
sub
cmc
add
shr
xor
cmp
fucompp
and
mov
inc
loopne
jbe
sub
push
inc
xchg
inc
jne
mov
push
lds
movs
pop
pop
add
sbb
pop
add
sub
mov
inc
jmp
push
iret
adc
rcr
inc
iret
rcl
mov
mov
pop
imul
adc
adc
es
adc
or
adc
xor
xchg
sbb
dec
ins
fild
inc
xor
adc
sub
das
push
or
dec
push
cmp
xor
push
not
sahf
inc
lds
push
mov
(bad)
fadd
rol
dec
mov
mov
xchg
adc
jo
(bad)
jmp
(bad)
jmp
enter
fld
xchg
pop
sub
(bad)
push
stos
(bad)
jecxz
or
cmc
push
(bad)
(bad)
sbb
jne
add
mov
pop
xchg
push
push
pop
fneni(8087
test
shl
dec
daa
mov
adc
pop
add
leave
dec
push
in
cmps
(bad)
test
repnz
es
int3
dec
fcmovbe
inc
into
aaa
leave
dec
daa
inc
push
jp
das
xor
pop
pop
mov
imul
inc
add
in
aaa
jnp
cmps
add
ins
cmp
ss
in
fstp
dec
jle
push
dec
sbb
neg
inc
xor
inc
xor
dec
adc
xchg
pop
add
push
jbe
and
xor
icebp
sahf
push
sbb
fimul
push
mov
or
adc
mov
cld
sub
push
jne
mov
test
jge
inc
and
mov
ja
movs
test
add
mov
cmp
inc
ficomp
sub
jne
lock
inc
lock
add
ret
out
(bad)
xchg
add
cmp
jno
jb
add
call
in
cmovnp
in
rcr
nop
adc
loope
cld
adc
outs
add
push
push
or
or
push
push
add
icebp
adc
gs
inc
add
fmul
rcr
ss
push
add
mov
pusha
imul
mov
push
mov
jmp
cmp
adc
pop
aad
add
xor
inc
adc
stos
push
xlat
imul
add
in
jb
sbb
add
dec
and
ror
add
mov
mov
push
mov
dec
cmp
lock
push
adc
ds
mov
push
fild
call
dec
js
add
aam
setne
and
dec
cmp
test
jg
(bad)
stos
sbb
push
dec
pusha
dec
inc
add
xchg
inc
inc
xchg
pop
(bad)
ret
xor
shr
ror
or
adc
ret
repz
lea
sbb
ret
dec
(bad)
mov
sbb
dec
inc
jecxz
xor
cmp
add
cld
and
push
lea
sti
fistp
xchg
and
mov
movs
push
lea
push
retf
sub
add
mov
add
add
aas
mov
inc
pop
scas
popa
sbb
mov
ret
fcmovne
mov
int3
adc
nop
jne
jl
sub
cmp
jne
test
adc
sti
outs
fisttp
push
xor
movups
fbstp
dec
jne
jmp
mov
push
mov
ds
pop
jne
push
rcr
add
jle
out
dec
shl
addr16
push
inc
add
movd
and
fisttp
inc
cmp
jge
mov
mov
outs
and
nop
add
pop
enter
hlt
xor
xchg
sub
or
jmp
outs
jmp
xchg
movs
lods
sub
lock
dec
push
inc
xchg
push
cmp
xchg
adc
pop
sub
out
mov
or
fmul
cmc
push
push
js
je
add
outs
js
push
or
inc
push
or
pop
pop
mov
test
push
test
dec
xor
fistp
retf
je
mov
dec
push
sbb
push
je
adc
dec
hlt
jmp
mov
and
cmps
sbb
loop
mov
imul
ins
sbb
mov
loope
(bad)
(bad)
sub
sbb
dec
in
popa
lock
fstp
or
mov
or
je
push
mov
ins
sub
push
shl
push
mov
inc
int
(bad)
call
dec
push
or
stos
mov
push
dec
lea
add
aad
mov
or
dec
sbb
pop
sub
data16
bndstx
jbe
test
and
lds
hlt
pop
push
dec
or
shl
sar
out
adc
paddd
ja
movsx
add
ret
call
ret
push
mov
inc
cmp
aas
pop
je
jnp
cmps
or
add
lar
jnp
fdecstp
in
ja
jmp
jl
sbb
ror
mov
mov
std
jle
add
add
shr
or
and
ret
jle
pusha
movs
test
sub
loopne
aaa
fs
ds
pop
call
in
in
push
mov
cmp
retf
or
cmp
div
jb
xor
xor
push
add
out
ins
cmp
lock
mov
or
pop
xor
push
cmp
inc
or
add
push
add
in
adc
clc
lea
sub
adc
cmp
push
or
or
sub
xor
jo
inc
ss
dec
popa
int
and
xchg
add
jg
iret
inc
pusha
pusha
ins
and
(bad)
cdq
add
adc
jmp
mov
repz
push
sub
aaa
std
dec
push
dec
pop
inc
adc
rol
adc
or
add
cmp
sbb
pop
mov
inc
pop
mov
mov
inc
dec
iret
xor
ins
loope
jg
sub
jmp
sub
mov
jne
adc
test
leave
mov
pop
pop
pop
lods
mov
add
xlat
fdivr
dec
imul
shl
retf
movs
inc
test
add
xchg
add
lea
cmovnp
shr
je
push
mov
scas
jo
fbld
cmp
sar
mov
xchg
cmp
or
jno
xor
test
jne
rcl
dec
in
sbb
pop
pusha
xchg
nop
scas
or
mov
adc
jno
mov
xchg
pop
sbb
mov
inc
adc
retf
xor
and
pop
data16
cmc
xor
and
or
jne
jp
xchg
dec
aaa
mov
push
dec
repz
je
std
adc
xchg
inc
mov
cwde
lock
jnp
popa
push
test
test
xchg
dec
sub
ja
xchg
mov
inc
mov
inc
mov
cmp
and
mov
fdivr
lea
mov
pop
and
imul
pop
cmp
enter
sti
push
stos
fiadd
sbb
pop
mov
adc
out
hlt
cdq
push
mov
out
inc
mov
enter
pop
std
dec
xchg
ror
push
sub
loope
cmp
adc
repnz
scas
cmp
ja
js
or
mov
cmp
rcl
cmp
cmp
pop
icebp
add
cs
xlat
or
inc
xor
pop
nop
into
xchg
cmp
adc
mov
stos
mov
rep
shl
add
xor
and
push
loope
rol
jge
fild
cmp
hlt
inc
push
fbld
pop
lock
out
jmp
jnp
sahf
inc
inc
mov
mov
and
scas
icebp
push
imul
out
mov
mov
outs
int3
pop
pop
jg
or
mov
clc
inc
jge
adc
push
addr16
in
cld
test
push
or
jl
push
lds
(bad)
call
sub
outs
mov
cmp
xlat
push
jnp
xchg
adc
aas
pop
jns
adc
xchg
pop
or
enter
pop
jo
je
pushf
pop
test
addr16
js
jnp
sbb
dec
mov
movs
xchg
and
ds
sub
pop
test
fxtract
fimul
and
jmp
adc
leave
je
adc
stc
fucom
aad
and
jb
pop
ret
adc
sub
dec
push
nop
dec
inc
sti
xchg
add
push
xchg
sbb
lahf
jb
sub
adc
retf
je
adc
retf
in
xlat
(bad)
fsubr
dec
push
or
lds
(bad)
inc
out
xor
add
pop
(bad)
dec
mov
push
push
mov
sbb
inc
test
dec
call
push
jmp
sub
and
mov
sbb
and
nop
cdq
push
or
inc
pop
push
loope
or
and
xor
mov
test
xor
daa
and
xorps
rcl
add
xchg
in
loopne
ret
inc
nop
(bad)
xchg
aas
push
xor
dec
mov
pop
cmp
dec
mov
adc
push
cwde
xor
nop
pop
cmps
aas
adc
sub
add
adc
pushf
add
jle
std
xchg
pop
hlt
dec
cmp
cs
adc
test
add
dec
inc
sub
jecxz
xor
add
test
adc
xor
inc
inc
pusha
pop
test
outs
ror
jg
retf
loop
sbb
jge
jnp
sbb
dec
sahf
sbb
cmp
aad
xor
sbb
mov
adc
out
(bad)
test
ret
pop
pop
sbb
mov
sti
push
loopne
repz
lea
mov
inc
pop
jmp
mov
sbb
cmp
aas
pop
test
stc
mov
dec
pop
adc
jo
mov
sbb
adc
add
jecxz
in
push
mov
fimul
mov
xchg
xor
xchg
and
pop
jmp
ja
test
cmp
fs
mov
arpl
data16
fs
cmp
addr16
jmp
in
xor
xchg
fdiv
xor
xor
int3
push
dec
data16
pop
dec
lock
or
cmps
jo
das
push
push
jg
test
push
jg
inc
(bad)
out
jns
into
mov
or
test
ins
xor
fstp
add
lahf
add
push
pmulhuw
and
imul
sar
fmul
xor
shl
pop
or
cs
mov
out
lea
dec
hlt
loope
push
and
data16
xchg
push
pop
int3
popa
pop
das
cli
loop
xor
lods
fs
xchg
inc
fld
sbb
or
sub
inc
xor
ds
lock
scas
ds
add
inc
add
add
push
and
mov
add
adc
inc
sbb
add
adc
and
add
or
mov
bound
cmp
push
stos
mov
movs
test
sbb
mov
dec
or
test
fs
dec
inc
dec
shl
pusha
das
jp
call
sbb
call
pop
jae
add
or
xor
cmp
mov
adc
cmp
(bad)
out
fsub
psadbw
arpl
xor
push
fs
cld
dec
adc
sbb
dec
add
xor
xor
out
mov
xor
shl
in
mov
mov
xlat
push
ret
or
test
arpl
js
daa
in
and
das
pop
gs
cmps
push
shl
cld
mov
inc
outs
jne
jae
in
leave
mov
jae
jb
push
dec
mov
data16
add
dec
xlat
push
in
or
xchg
addr16
das
retf
ret
sub
xlat
in
(bad)
das
addr16
and
push
pop
sbb
ficom
cmp
and
and
dec
adc
adc
pop
lea
jecxz
push
sbb
pop
das
cmp
push
mov
fwait
punpckhdq
dec
and
mov
and
jne
or
cwde
add
jo
mov
and
(bad)
jns
iret
mov
push
cmp
popa
das
mov
add
inc
addr16
stc
mov
xchg
(bad)
xchg
jbe
enter
and
mov
push
mov
mov
push
push
je
das
dec
scas
pop
add
jle
fild
dec
jl
xchg
and
jo
mov
adc
mov
jecxz
sbb
cmp
jae
pop
or
xor
outs
ins
imul
pop
adc
out
or
in
or
or
loope
pop
enter
out
push
mov
ret
lods
mov
or
adc
fbld
es
or
dec
add
add
sbb
adc
mov
sub
push
mov
mov
iret
loopne
imul
cmp
mov
push
jno
and
jg
fiadd
clc
dec
xchg
push
add
sub
rol
inc
sti
or
push
ins
or
pop
adc
or
jmp
dec
(bad)
mov
jmp
pop
lds
fimul
inc
adc
jmp
mov
jmp
sbb
rcr
mov
cmps
inc
inc
jg
mov
call
sbb
cmc
xor
aas
adc
pop
popf
mov
ins
aas
pop
ins
xor
lea
mov
(bad)
or
dec
sahf
and
sbb
add
xor
or
mov
movs
fcom
pop
sub
out
pop
xchg
sub
pop
popa
ins
imul
jne
mov
add
mov
outs
fsubr
sbb
outs
sbb
adc
and
ja
or
add
or
mov
aaa
mov
jae
and
or
sbb
and
mov
in
popf
sub
xor
adc
cmp
sbb
or
test
fisub
push
sub
adc
cs
and
lahf
cld
pop
or
xor
mov
xor
dec
jne
adc
push
or
jmp
xchg
dec
or
add
add
xchg
pop
jns
test
syscall
adc
mov
sub
inc
sbb
inc
mov
rcr
and
shl
pop
or
mov
ror
add
pop
xor
sub
sbb
sub
jno
adc
ret
add
mov
adc
jecxz
repz
mov
test
addr16
ror
push
push
mov
pop
adc
pop
pop
fld
sbb
inc
add
jmp
or
dec
push
adc
adc
(bad)
adc
pop
icebp
ja
inc
sbb
femms
xchg
or
pop
sub
inc
movhps
add
bound
sbb
xor
and
daa
enter
or
and
adc
repz
outs
pop
push
push
add
cmp
sbb
add
xchg
pop
sbb
xchg
daa
aaa
push
or
add
push
mov
push
inc
xor
xchg
add
cmp
fistp
push
or
iret
add
mov
mov
and
adc
arpl
pop
jmp
adc
hlt
inc
dec
jns
or
nop
xor
mov
fbstp
xchg
inc
xor
jae
in
or
xor
push
inc
add
xchg
in
je
adc
ss
mov
sbb
fs
xchg
or
(bad)
adc
cmp
ins
outs
je
nop
xor
mov
push
sbb
int3
int
sbb
div
jb
call
push
xor
cmps
add
or
imul
pop
inc
adc
or
outs
xchg
(bad)
fnstcw
adc
dec
outs
pusha
pusha
mov
mov
sub
mov
pushf
fmul
dec
outs
ins
jns
nop
out
adc
aam
xchg
or
xor
mov
adc
adc
out
cs
jae
lock
fcomp
sti
lahf
or
in
and
ss
push
jbe
jae
je
or
jb
or
adc
in
shl
or
dec
imul
std
xor
jne
push
push
ins
popa
pop
sub
push
mov
push
lds
xlat
fcmovbe
adc
jmp
adc
add
add
sub
add
cmps
jnp
aaa
add
loopne
mov
push
jne
adc
ja
fmul
push
adc
jb
pop
test
outs
sub
fimul
or
or
dec
outs
jne
jbe
jecxz
pop
mov
push
shl
push
dec
bound
arpl
mov
inc
inc
inc
and
sub
outs
pop
pushf
cpuid
outs
inc
stos
cmp
mov
ret
mov
sub
and
inc
and
sbb
cmp
inc
xor
adc
xor
adc
push
push
pop
dec
add
hlt
cmp
or
dec
push
adc
inc
stc
mov
add
int
mov
push
retf
mov
inc
cmove
fsubr
fs
dec
rsqrtps
sbb
dec
add
iret
les
and
sub
or
add
fsub
hlt
das
cli
dec
mov
add
or
test
mov
xor
push
and
jg
aad
jb
jg
jg
pop
pop
sub
dec
shl
mov
mov
es
ins
and
or
inc
sysret
dec
push
pushf
dec
dec
jg
inc
xchg
and
xchg
punpcklbw
and
add
mov
add
in
das
repnz
pusha
and
xchg
adc
mov
fwait
or
or
push
add
inc
icebp
jbe
and
mov
push
or
cmp
inc
add
push
gs
mov
and
es
mov
inc
dec
sub
fnstsw
ins
xchg
pop
and
in
inc
dec
lods
pop
xchg
setp
xchg
push
dec
lods
and
dec
enter
pop
pop
cmp
sub
xchg
lods
arpl
pop
pop
sub
pop
icebp
and
test
test
rol
pop
cmovne
test
or
sub
or
inc
inc
test
shl
mov
pop
xchg
test
xchg
fild
pop
inc
cmovp
mov
movs
mov
sbb
or
cdq
div
pop
sub
sbb
movs
scas
in
pop
popa
sub
sbb
push
sub
sub
sbb
xchg
dec
outs
inc
jae
push
(bad)
in
arpl
jae
xor
fs
outs
add
stos
jno
aas
enter
adc
sub
cmc
sbb
rcl
sar
adc
mov
scas
outs
adc
pusha
add
fcom
(bad)
scas
or
in
inc
sti
std
inc
test
add
add
adc
jmp
mov
inc
jne
cmc
inc
push
fxam
jnp
push
xchg
or
jnp
or
adc
fs
add
xor
add
dec
jb
pop
fimul
or
test
inc
push
xor
ins
dec
pop
xchg
into
or
sbb
or
out
in
mov
xor
push
mov
int3
add
add
xchg
sbb
jg
in
add
jns
icebp
add
popa
mov
xchg
push
inc
rcl
adc
add
push
lea
sti
sub
add
mov
add
inc
push
or
or
dec
inc
sbb
pop
add
shl
xchg
add
not
outs
jbe
add
dec
arpl
mov
or
shl
sub
add
adc
push
into
mul
jns
(bad)
push
sub
aas
mov
inc
dec
and
xlat
inc
outs
mov
outs
ins
dec
cmp
retf
imul
pop
sbb
push
mov
mov
push
movs
cmp
mov
dec
add
cmp
add
adc
xor
xor
pop
mov
fsubr
push
hlt
addr16
dec
fwait
in
out
xchg
and
or
out
sub
lods
movs
add
xchg
inc
popa
push
arpl
jns
cmp
xor
sbb
and
fimul
ja
js
and
lahf
pop
aam
int
adc
adc
pushf
mov
mov
mov
sahf
pushf
pushf
xchg
retf
pop
dec
dec
dec
dec
jge
stc
inc
nop
cmp
mov
(bad)
sub
shl
pop
cld
add
ret
daa
ja
shl
dec
repnz
mov
add
mov
inc
mov
sbb
fs
or
add
xor
loopne
adc
fdivr
addr16
outs
push
fdivr
mov
add
add
inc
dec
xor
nop
lock
pop
add
sub
push
sub
dec
fs
xchg
adc
sahf
jb
adc
fild
test
iret
(bad)
in
xor
add
(bad)
es
push
pop
and
mov
push
ret
xchg
pop
dec
inc
jo
push
and
dec
scas
adc
imul
loopne
(bad)
mov
xchg
or
(bad)
cmps
inc
es
dec
adc
xchg
add
xor
std
sbb
movs
adc
imul
imul
pushf
and
xchg
lds
adc
adc
jg
pop
mov
add
and
push
add
popa
sub
xlat
mov
pop
inc
js
jo
rcl
inc
jne
jne
ja
fs
gs
xor
loope
push
inc
imul
xchg
pop
and
or
add
data16
push
nop
test
aam
xchg
add
mov
xchg
clc
outs
push
or
std
inc
push
outs
jb
(bad)
enter
add
je
adc
dec
imul
adc
inc
push
add
push
or
sbb
xchg
pop
add
arpl
inc
or
scas
and
add
rol
int
pop
shl
lds
sub
test
ja
mov
add
add
xchg
or
xor
jae
pop
or
mov
inc
mov
mov
popa
mov
fwait
in
inc
add
adc
adc
sbb
test
daa
inc
mov
sahf
xchg
inc
add
test
inc
test
add
inc
cmp
(bad)
xchg
pusha
sbb
and
sbb
pop
loope
xor
inc
and
push
clc
adc
idiv
xchg
imul
cmp
cmp
mov
sbb
mov
mul
js
inc
inc
hlt
call
icebp
fsubr
shl
jge
mov
fidiv
retf
leave
and
or
pop
sbb
or
cs
cdq
add
add
inc
jbe
xor
mov
sub
and
xchg
push
outs
ins
push
mov
lahf
pop
or
and
or
xchg
in
or
inc
lds
xchg
push
push
add
and
lds
mov
pop
sub
rcl
stos
cmps
add
dec
mov
jae
fwait
add
adc
(bad)
mov
sub
jo
mov
mov
ss
test
add
xchg
icebp
or
jp
xchg
sub
xor
xchg
jb
popf
push
inc
imul
jge
push
xchg
gs
xchg
add
mov
arpl
aam
das
add
sbb
jmp
mov
sbb
inc
and
cmc
dec
sbb
and
dec
mov
or
add
pop
jne
xchg
cdq
push
in
sbb
neg
jne
add
sub
jbe
pop
and
addr16
adc
cmp
jb
imul
mov
and
imul
jg
in
in
enter
mov
add
mov
outs
scas
imul
cmps
add
xchg
lock
popa
sahf
out
sahf
imul
sahf
out
cdq
mov
jns
out
leave
rcr
loope
mov
add
jmp
lea
push
movs
aaa
lock
or
adc
es
cwde
aaa
jb
cmp
cdq
scas
push
add
pop
pop
mov
ja
xchg
pop
dec
hlt
mov
mov
mov
or
mov
cmp
sahf
pushf
pushf
pushf
test
dec
dec
inc
pop
cmps
retf
test
popf
adc
jbe
mov
add
pushf
popf
je
cmp
jo
dec
and
push
sub
jbe
jno
mov
popf
or
pop
sbb
and
dec
and
inc
add
xor
jb
inc
mov
popf
jmp
fstp
or
pop
mov
jb
ja
dec
xchg
add
js
test
pop
stc
and
das
push
xchg
or
imul
xchg
add
jns
aaa
jle
nop
dec
dec
add
jns
imul
add
and
adc
mov
arpl
adc
ret
jl
push
mov
and
ja
lock
stos
push
jo
xchg
cmp
in
loope
sbb
test
sub
add
inc
mov
xlat
mov
push
aad
jecxz
test
cmp
add
stos
add
or
inc
lea
adc
inc
xor
sti
push
(bad)
dec
sti
or
outs
fisttp
daa
mov
fcomp
aas
mov
adc
aas
jle
adc
test
cmp
sahf
ret
out
add
sub
xor
sub
mov
pop
push
daa
mov
push
pushf
or
test
inc
lods
jl
loopne
jo
test
xor
cmp
pop
sahf
add
mov
mov
and
imul
adc
gs
mov
cmps
test
inc
xchg
pop
test
xor
xor
push
iret
ds
loopne
nop
das
push
jnp
int
sub
fisubr
ficomp
push
cwde
idiv
jge
and
sub
push
cld
les
sahf
movs
mov
add
sub
into
push
loopne
out
xor
push
les
push
or
mov
mov
loopne
daa
xchg
mov
sbb
cmp
and
cmp
inc
jmp
and
pop
pop
test
push
(bad)
mul
cmp
add
mov
or
sub
pusha
mov
pop
scas
jo
adc
inc
leave
add
dec
dec
ja
or
pop
jnp
gs
adc
xor
mov
push
push
loopne
hlt
mov
mov
inc
xor
push
mov
into
add
in
loop
push
or
inc
pop
adc
add
(bad)
jmp
jbe
or
ja
ret
adc
outs
gs
add
movs
cmp
sub
psubw
adc
(bad)
int
push
(bad)
ficom
and
add
pop
rol
adc
and
test
or
dec
add
and
adc
sahf
shr
adc
test
jne
ja
xchg
movs
movs
and
pop
addr16
sub
adc
xchg
dec
daa
cmps
mov
les
jnp
add
and
cs
jo
sub
imul
in
sbb
adc
add
jne
xchg
add
push
or
adc
push
jno
inc
pop
add
inc
retf
adc
ins
add
cmp
out
fs
ret
andps
test
(bad)
fsub
or
in
and
movs
cmp
cmp
xor
fsub
adc
mov
arpl
mov
cmp
movs
jae
or
xor
pop
pop
ds
jnp
add
fiadd
adc
xchg
adc
xor
aaa
movs
mov
aas
or
inc
cmp
ret
add
(bad)
adc
xchg
adc
add
out
and
dec
outs
fbld
jnp
xchg
or
mov
xchg
cmps
xchg
int3
cmps
push
test
push
push
xor
inc
sbb
pop
and
movs
or
adc
jne
shr
pop
sub
pop
dec
ja
mov
daa
or
cmps
je
cmps
jno
dec
adc
sbb
cmps
jnp
adc
test
ret
mov
adc
push
test
cld
push
sbb
inc
ins
daa
jns
adc
push
jl
sbb
sahf
out
push
test
mov
inc
or
das
mov
jbe
movs
mov
inc
iret
sub
inc
and
sub
and
push
jo
popa
je
ret
push
imul
fld
inc
xlat
and
in
or
sub
out
sahf
cs
mov
pop
mov
(bad)
push
stos
mov
cld
aaa
stos
das
pop
setno
or
popf
add
mov
stos
lahf
push
stos
sbb
popf
pop
mov
sar
clc
std
(bad)
cld
(bad)
sti
(bad)
inc
sbb
inc
mov
stc
cmp
add
icebp
sub
add
cdq
pop
add
and
mov
mov
xor
pop
pop
add
es
push
cmp
and
lock
pop
sbb
movs
inc
fist
add
sub
or
movs
mov
inc
test
inc
xchg
pop
int3
adc
jecxz
movs
aad
push
add
pusha
pop
pop
xor
sbb
mov
mov
ret
aad
sbb
mov
and
nop
lock
push
sub
pop
add
in
inc
mov
in
dec
cmp
aam
pop
push
loope
es
imul
ins
push
add
imul
je
add
xlat
les
cmps
dec
ins
pop
push
and
stc
add
push
jge
enter
add
xlat
mov
mov
jo
test
xlat
mov
sub
mov
cmp
xlat
rcr
inc
push
pop
lock
jns
jo
mov
outs
sar
or
sbb
jnp
sub
mov
lahf
or
ins
in
outs
jecxz
test
adc
ja
test
inc
or
cs
lods
push
scas
push
popa
int
inc
mov
or
ret
push
rol
aaa
mov
lods
inc
or
cmovns
scas
outs
sub
adc
fsubr
xor
pushf
jae
test
cld
in
push
rcl
sahf
cmps
and
icebp
scas
and
jmp
cmp
xor
xor
jae
jle
inc
js
imul
pop
mov
adc
cmps
and
std
adc
inc
dec
imul
mov
js
pusha
shr
mov
addr16
mov
fs
(bad)
ficomp
es
das
js
adc
add
sbb
xchg
or
stc
mov
cmp
scas
add
adc
or
inc
repz
rcl
fsubr
or
int
lock
nop
fimul
dec
or
add
pop
sub
mov
jl
stc
pusha
mov
out
xchg
adc
mov
ins
mov
fnstenv
pop
mov
mov
add
popf
jmp
add
in
mov
mov
add
femms
scas
mov
push
loopne
push
cwde
ss
es
push
pop
mov
or
cli
fisubr
pushf
mov
js
pushf
xchg
cs
push
ds
in
dec
cld
das
xor
adc
push
push
and
cdq
popa
and
pop
call
sbb
sub
cld
icebp
jmp
mov
inc
loope
sbb
std
(bad)
scas
mov
iret
add
adc
mov
add
dec
imul
inc
and
ffree
fs
push
sbb
push
cmc
mov
adc
mov
dec
lods
aas
sbb
push
inc
jmp
js
and
sub
out
push
inc
inc
add
dec
sub
add
mov
jle
dec
ins
push
mov
inc
push
dec
aaa
push
ret
idiv
mov
(bad)
jmp
adc
mov
pop
bts
outs
lahf
dec
loope
or
push
retf
adc
mov
(bad)
jge
jo
shufps
mov
xlat
mov
pop
bound
adc
jno
push
add
pop
push
mov
ja
dec
push
push
sbb
mov
sbb
xlat
loopne
sub
sbb
scas
jmp
cmovp
sbb
nop
mov
mov
mov
or
xchg
mov
lods
mov
inc
cmp
or
sub
fimul
pop
mov
lock
or
push
sub
inc
xchg
es
jae
dec
or
sbb
xor
ins
rcl
push
dec
cs
sbb
sar
or
pop
rcl
sub
inc
in
pop
pop
sub
popa
xchg
pop
xor
or
jo
gs
dec
mov
cmp
or
dec
imul
add
xchg
and
les
in
xchg
ss
sbb
jno
test
add
pushf
mov
inc
sbb
mov
add
test
push
enter
aaa
add
mov
jae
sub
push
xor
aas
add
push
shr
cmp
call
imul
push
adc
add
mov
xor
and
fnstsw
add
ret
mov
push
inc
dec
mov
repz
jno
hlt
inc
test
rol
movs
inc
outs
test
lods
adc
clc
adc
sbb
add
mov
or
repnz
and
mov
mov
ins
fbld
xor
add
mov
adc
retf
push
lahf
and
bound
mov
sbb
add
cdq
add
mov
sub
add
mov
xchg
and
aam
mov
cmp
or
or
add
and
addr16
push
aad
add
rcl
add
or
inc
sti
fcomp
mov
add
mov
jne
in
add
out
outs
les
or
(bad)
jmp
mov
inc
mov
test
inc
mov
dec
cmp
mov
inc
arpl
inc
jne
dec
push
mov
jne
or
xor
dec
inc
nop
cmp
add
sub
cmp
test
inc
jno
and
inc
dec
add
(bad)
push
outs
or
sti
pop
xor
push
mov
ret
dec
jo
push
js
or
push
and
cmp
movs
test
dec
xchg
adc
dec
inc
or
mov
inc
loope
pop
pop
and
xor
mov
lahf
psrad
loope
pop
arpl
mov
jl
push
sbb
pop
cld
das
add
mov
mov
pop
mov
mov
mov
and
test
pop
add
and
add
mov
push
ins
sbb
ret
je
push
add
adc
jmp
inc
mov
mov
xchg
and
fmul
pop
mov
adc
or
sbb
push
call
mov
dec
adc
in
mov
ret
push
or
and
sahf
inc
or
sub
add
xchg
aam
hlt
repz
cmp
sbb
and
mov
test
jge
mov
mov
js
nop
cmp
sbb
shr
mov
push
xchg
test
into
mov
push
and
or
inc
shl
inc
sbb
mov
outs
push
cwde
push
pop
pop
pop
iret
add
dec
add
test
vmread
mov
sub
pop
push
cwde
push
fwait
sub
and
arpl
xchg
test
mov
xor
inc
mov
jmp
(bad)
loopne
neg
call
push
rol
aas
les
test
or
mov
push
fild
inc
mov
cmps
jl
jns
jbe
(bad)
enter
sti
test
or
les
pop
aad
jmp
sbb
inc
jge
movs
push
push
mov
xor
cmp
cmps
(bad)
in
push
fidivr
add
add
adc
sbb
scas
sbb
pop
sub
in
or
xlat
xor
jnp
jns
xor
sub
or
push
(bad)
push
adc
pop
(bad)
push
leave
cmp
cmc
push
mov
jo
into
cmc
sti
ja
jl
sub
xor
jnp
add
dec
outs
mov
mov
mov
ret
frstorw
ja
(bad)
cli
or
fldcw
pop
xchg
(bad)
cmp
rol
add
inc
psubb
adc
in
add
add
(bad)
daa
cld
repnz
call
sbb
into
sbb
and
movs
mov
cwde
or
es
inc
pusha
rol
rcl
add
xor
inc
mov
sbb
cs
sbb
nop
mov
mov
test
mov
add
dec
enter
movs
inc
test
dec
dec
push
xchg
cmp
rol
test
xchg
sbb
lds
add
xor
and
repz
fild
inc
and
mov
or
sahf
dec
cmc
pop
int
or
icebp
xchg
shl
pop
push
pop
mov
rcl
mov
loopne
ins
add
sbb
sbb
xchg
add
(bad)
cmp
lds
test
rol
cmp
or
mov
popf
inc
or
adc
das
inc
or
add
adc
js
cmp
pop
xor
mov
pop
pop
je
pop
cld
retf
adc
stos
jmp
lods
loopne
adc
push
lods
push
pushf
mov
fld
lods
add
(bad)
test
ror
cmovb
retf
fst
retf
punpcklbw
out
int3
and
mov
bswap
jbe
cmp
into
pop
pop
push
jae
jo
sahf
dec
cmp
or
into
fstp
sub
cmps
add
inc
jne
data16
add
add
mov
jae
adc
push
cmp
aam
sbb
je
in
sar
xchg
sub
leave
lods
mov
fidiv
xchg
jns
add
dec
aam
scas
add
pavgw
test
mov
inc
sti
les
cmp
out
mov
or
inc
sub
pop
pop
cmp
aaa
add
lea
push
aas
add
scas
mov
mov
push
xor
mov
sub
ficom
rcl
jge
add
mov
sub
lds
in
dec
inc
push
sub
gs
pop
inc
or
sub
push
gs
and
push
cmps
add
gs
in
add
mov
movs
movs
inc
sbb
bound
dec
addr16
adc
sbb
and
int
adc
pop
fadd
cmp
pop
add
and
ror
inc
imul
mov
daa
lods
dec
ins
inc
xor
out
or
pop
mov
add
pop
and
loope
sbb
lea
lahf
add
enter
add
call
jecxz
sbb
mov
dec
stos
fs
call
dec
dec
aaa
jne
adc
mov
loope
aam
push
dec
pusha
mov
add
adc
pop
iret
xchg
out
neg
int3
rcr
je
(bad)
das
mov
or
enter
sub
sbb
js
mov
push
xor
dec
loopne
dec
cmps
jne
ret
add
or
dec
mov
sbb
mov
push
es
ror
or
lods
dec
or
add
sub
rcl
aad
inc
fcomp
ror
das
ja
ror
ja
loopne
enter
scas
out
pop
adc
cmp
shr
mov
and
das
mov
into
mov
sub
ror
jo
sti
push
popf
and
jl
inc
cwde
push
mov
iret
lods
push
(bad)
das
in
outs
iret
inc
repnz
inc
adc
inc
sbb
or
add
xchg
out
sub
icebp
shr
ror
(bad)
mov
cmp
or
push
mov
inc
in
fild
je
mov
(bad)
mov
int3
mov
loopne
sbb
xor
or
clc
test
add
lds
cmp
les
pop
and
mov
dec
enter
push
sub
icebp
shl
push
and
mov
jnp
loop
call
push
mov
int
les
adc
movs
outs
nop
out
scas
push
mov
mov
int3
mov
rol
(bad)
xchg
pop
jne
retf
lds
cmp
add
mov
pop
js
outs
scas
aam
dec
cvtps2pd
in
push
retf
mov
cmc
dec
fs
mov
and
rcr
or
mov
xchg
or
cmp
or
psubq
aad
add
dec
ret
aad
dec
jle
xchg
aad
add
pop
xor
scas
xor
inc
mov
push
aad
in
push
dec
daa
xchg
xlat
mov
add
adc
cmp
sbb
shr
in
fdiv
and
dec
(bad)
and
or
xchg
dec
retf
dec
popf
imul
jo
int
mov
adc
or
or
adc
or
dec
daa
add
mov
nop
xlat
(bad)
mov
out
cmps
sbb
nop
xlat
jmp
pusha
mov
shl
nop
xlat
adc
lock
in
shl
ret
outs
pop
xchg
test
sbb
(bad)
or
nop
xlat
daa
pop
dec
bound
aad
out
dec
(bad)
sub
scas
inc
push
cwde
push
push
mov
mov
push
sbb
aad
mov
pushf
or
add
add
jns
outs
(bad)
adc
jl
push
sub
(bad)
or
push
sbb
jg
cmp
push
nop
inc
into
fadd
aad
mov
outs
(bad)
fsubp
inc
pop
clc
fisttp
mov
ret
out
and
xlat
push
pushf
mov
inc
xchg
add
jns
and
loop
add
add
add
test
fstp
ss
(bad)
fldcw
fimul
pop
into
enter
repz
movs
lods
cdq
jno
add
pusha
xchg
imul
lods
or
sbb
fistp
mov
hlt
(bad)
add
das
mov
add
mov
and
in
mov
lahf
or
xchg
loopne
inc
popf
inc
and
mov
sub
fnstcw
or
xchg
daa
(bad)
jmp
test
hlt
(bad)
sub
inc
cmp
aad
inc
adc
mov
add
out
adc
xchg
fadd
push
mov
shl
stos
or
mov
or
aad
cmp
pop
test
add
(bad)
dec
fnsave
scas
pusha
inc
daa
push
mov
rcl
test
dec
sub
xor
cs
mov
dec
aas
loop
jae
dec
inc
ins
outs
bound
mov
fnstsw
mov
adc
and
movs
outs
dec
sub
mov
mov
sbb
inc
lea
xor
(bad)
scas
xchg
in
mov
sbb
aas
add
ret
inc
mov
push
add
fild
test
sbb
mov
push
sbb
pop
mov
sbb
outs
fcomp
jecxz
dec
lahf
sbb
outs
add
out
(bad)
pop
xchg
mov
aaa
(bad)
mov
push
push
sub
or
in
enter
or
or
sbb
sbb
enter
jp
or
sub
sbb
in
in
call
push
scas
jg
add
out
nop
cmp
loopne
out
arpl
fist
outs
mov
pop
add
aam
loopne
lock
pushf
stos
fild
hlt
in
es
loopne
push
test
out
shl
jo
inc
add
fwait
iret
xor
push
cld
pusha
push
push
xchg
stc
cmp
or
movs
push
inc
into
add
inc
ret
push
sbb
pop
mov
inc
vprotd
repz
inc
retf
mov
movs
loop
mov
orps
mov
(bad)
push
jecxz
(bad)
maskmovq
test
mov
add
in
jno
mov
jecxz
or
mov
push
cld
pop
ret
add
inc
movs
nop
mov
(bad)
lock
add
rol
mov
pushf
repz
repz
pop
call
xchg
pop
mov
sbb
add
or
and
add
add
dec
js
add
push
fs
pop
jo
cmp
jnp
push
sub
fwait
or
fild
ret
adc
and
adc
fs
mov
jbe
adc
ja
add
inc
adc
inc
xor
and
inc
or
jbe
out
add
or
sub
scas
dec
(bad)
jmp
pop
sbb
outs
jae
add
mov
fcmovnb
or
add
mov
inc
pop
inc
or
movs
ret
sbb
push
add
or
push
cmp
sbb
in
in
push
sbb
mov
or
add
cmc
test
or
adc
pop
outs
outs
xchg
int
dec
xchg
or
out
xor
and
or
add
xchg
stc
pop
(bad)
dec
add
dec
bound
pop
lds
add
lods
sbb
jbe
xor
inc
jae
push
jcxz
add
jo
cdq
xlat
inc
clc
adc
mov
nop
xchg
outs
outs
shr
xor
add
inc
jnp
loopne
add
xor
push
or
push
imul
pop
aas
call
jnp
mov
push
adc
push
inc
sbb
call
dec
add
not
pusha
mov
sbb
pop
ror
inc
rcr
idiv
inc
daa
push
das
ja
out
lods
xor
push
int3
pop
push
in
push
loopne
test
jo
ins
mov
or
data16
or
fsub
jmp
scas
test
and
std
or
pop
sbb
xchg
pop
mov
pushf
or
stos
pop
add
fcmovnu
adc
add
and
mov
pop
test
mov
inc
out
sbb
dec
or
add
neg
lea
stc
push
dec
and
sbb
push
in
adc
add
add
cwde
loop
rol
das
pop
add
adc
fwait
scas
out
cmp
test
fcomi
or
or
ror
jnp
jns
push
aam
push
jbe
test
or
xor
jle
mov
pop
or
xor
dec
lea
in
or
aaa
movs
icebp
into
sbb
inc
cmp
pop
addr16
gs
jb
ds
cwde
les
or
daa
shr
or
adc
xchg
push
mov
std
mov
push
iret
sti
jnp
dec
loop
push
push
inc
cmp
add
push
cs
add
scas
add
enter
add
inc
daa
cmp
pop
adc
or
pushf
push
dec
or
inc
push
pop
add
jo
mov
or
addr16
jae
add
pop
ins
xchg
add
or
push
sub
clc
xor
int
pop
sub
jo
into
jmp
aad
dec
or
dec
mov
jae
fld
pop
push
aad
or
sahf
xchg
nop
mov
jo
push
mov
xor
xchg
and
add
and
cmp
mov
nop
daa
(bad)
mov
sbb
inc
(bad)
int
dec
sbb
inc
push
in
addr16
jmp
in
push
lods
es
jmp
call
out
in
mov
mov
mov
pop
add
adc
aad
adc
ds
and
bound
es
outs
jae
and
mov
inc
push
out
pop
jmp
outs
outs
je
sbb
fisubr
retf
imul
cmp
mov
add
xor
out
push
pop
jecxz
xor
rcl
stc
xor
xchg
mov
inc
stc
lsl
add
mov
loop
in
mov
and
out
push
in
cmp
add
push
jmp
and
add
sub
ret
fmul
xchg
add
push
and
fsub
or
lock
idiv
js
adc
cmp
mov
pop
mov
fstp
sub
mov
scas
push
pop
sbb
mov
push
add
ins
push
and
mov
cwde
or
sar
inc
mov
mov
dec
(bad)
or
out
and
test
lds
add
add
inc
push
and
push
out
xchg
andps
lock
or
loopne
test
sub
dec
add
add
(bad)
cmp
es
out
pop
inc
fs
xchg
add
inc
pop
popf
and
add
dec
(bad)
xchg
outs
pop
mov
mov
bound
loopne
addr16
inc
cwde
xor
imul
jl
(bad)
xor
inc
add
cmp
bound
and
and
or
or
jo
adc
dec
xor
dec
enter
das
out
inc
add
mov
and
inc
popf
and
and
xor
je
adc
add
pop
sub
idiv
aad
iret
push
push
fsub
sbb
icebp
pusha
and
mov
mov
adc
xchg
outs
push
ins
mov
gs
lock
stc
adc
dec
mov
loopne
mov
lock
cdq
xor
sub
adc
test
sbb
or
icebp
pop
jecxz
inc
add
int
adc
mov
mov
aaa
mov
sbb
popa
mov
push
sti
cdq
ja
cmp
js
cmp
sbb
icebp
sub
sbb
inc
mov
xor
mov
mov
mov
mov
mov
adc
mov
(bad)
mov
cmp
adc
clc
add
lea
cld
repnz
aas
add
add
adc
add
or
int
(bad)
into
jno
(bad)
fcom
jb
mov
fist
xchg
or
dec
jo
and
pop
xor
and
jecxz
and
adc
add
je
out
pop
jo
push
xor
scas
not
push
inc
jmp
ret
ins
popf
(bad)
not
xchg
push
cmp
jle
push
movs
lds
cmps
shr
jmp
or
cmps
push
fcom
ja
or
sbb
add
add
ret
lods
mov
cmp
inc
dec
cmp
cmp
cmp
out
int3
xor
(bad)
stos
xchg
rcl
fdivr
and
outs
(bad)
not
cmp
test
cmps
adc
or
aam
dec
inc
or
xchg
jp
push
pushf
inc
push
dec
sub
cmp
sub
ss
adc
imul
loope
sbb
dec
outs
inc
nop
es
or
dec
jo
stos
cmps
icebp
inc
adc
jne
adc
outs
(bad)
mov
sbb
(bad)
mov
mov
test
out
arpl
outs
daa
dec
mov
sbb
je
outs
aad
scas
add
fwait
and
push
dec
aas
pop
(bad)
pop
clc
cmovne
in
jo
mov
das
stc
das
add
mov
div
fistp
or
cmovs
repnz
fwait
(bad)
or
dec
jns
jb
cmps
iret
stc
and
cmp
cmp
dec
ja
(bad)
loopne
cmp
jmp
subps
inc
daa
daa
daa
jbe
fmul
or
inc
or
xchg
daa
sbb
jo
push
push
xor
mov
mul
sbb
iret
push
stos
or
arpl
xchg
mov
push
pop
les
xor
cmp
call
test
pop
leave
mov
jmp
mov
scas
lds
loopne
xchg
dec
push
adc
dec
add
xchg
mov
adc
push
cmp
outs
pop
sub
mov
add
sub
leave
les
ja
mov
ins
push
push
add
lahf
sbb
add
es
cmc
sti
mov
or
xor
movs
cmp
dec
dec
inc
jns
or
dec
or
push
ins
or
cmps
ds
push
push
sub
cmp
dec
add
adc
mov
adc
xor
ret
and
adc
dec
sub
jae
add
or
cmp
imul
inc
add
jo
inc
mov
mov
icebp
xchg
pop
sbb
rol
push
pop
add
je
icebp
lods
and
or
cld
rol
dec
or
pop
xchg
push
dec
aam
cli
and
jno
dec
xor
aam
dec
fs
push
cmp
and
dec
xor
push
adc
test
mov
xchg
and
or
sub
add
rol
mov
and
ins
fs
sbb
sbb
dec
adc
cmps
add
test
jl
in
lds
test
inc
dec
sbb
dec
mul
fbstp
add
add
dec
ss
add
(bad)
and
outs
sub
outs
sub
or
xor
hlt
pop
pop
cmp
(bad)
add
dec
rol
cmp
inc
lods
adc
inc
dec
in
inc
(bad)
int
cwde
add
sub
sbb
fiadd
out
push
cwde
or
push
mov
push
shr
add
es
push
mov
and
sub
in
iret
call
jo
das
mov
(bad)
push
pop
lea
push
clc
pop
and
iret
mov
ja
fdiv
push
adc
aaa
add
or
push
js
into
fs
fs
dec
jne
xor
movs
add
sbb
int3
and
sub
push
cmp
mov
mov
ins
and
pusha
xchg
inc
int
ficomp
or
jecxz
or
repnz
xor
retf
jecxz
aad
les
(bad)
ror
mov
call
adc
(bad)
test
popf
push
push
and
adc
and
mov
js
pop
pop
inc
sub
cmps
fimul
xchg
mov
inc
sub
ins
lods
add
xlat
ret
or
xor
sub
pusha
jg
lar
mov
inc
mov
adc
jne
jne
mov
repz
or
dec
xchg
xchg
in
sub
fist
imul
cmp
(bad)
add
adc
adc
inc
inc
mov
push
test
loop
mov
cwde
hlt
mov
das
mov
pop
fidiv
cmps
icebp
inc
ds
mov
or
test
cmc
push
lock
cmp
test
rcr
jge
(bad)
xor
add
or
mov
sbb
xor
cmp
inc
lds
(bad)
jmp
push
cwde
hlt
movs
or
dec
add
xchg
ret
adc
xchg
and
imul
addr16
ror
pushf
mov
push
inc
mov
dec
popfw
or
pop
punpckldq
loope
or
xchg
xchg
daa
daa
ficomp
or
xchg
xchg
xchg
mov
(bad)
cmp
in
leave
leave
jne
iret
adc
in
in
push
jle
lock
repnz
push
add
push
mov
and
and
test
bound
pop
pop
xchg
mul
lock
and
inc
mov
xor
or
sub
icebp
push
mov
dec
or
cmp
push
repnz
inc
or
and
or
xor
inc
repz
aaa
mov
sbb
jnp
cwde
mov
mov
inc
mov
cmp
jb
inc
push
add
nop
dec
cmp
outs
or
std
ja
mov
stc
xor
pop
adc
or
cmp
movs
sahf
or
or
shr
and
jne
mov
(bad)
pop
add
xor
jbe
or
fs
inc
xchg
fcomp
adc
ja
push
lds
adc
inc
popa
je
adc
out
and
xor
push
mov
and
inc
icebp
ror
inc
sbb
cmp
test
add
je
inc
jo
adc
adc
push
mov
cs
test
push
das
sub
adc
rol
mov
pusha
std
repz
hlt
add
jae
mov
sbb
adc
dec
out
xor
test
inc
fstp
out
mov
pop
aaa
add
sub
imul
push
inc
and
loope
rcl
inc
jne
inc
sbb
inc
mov
pop
inc
mov
xchg
sub
call
and
repnz
addr16
mov
mov
pop
cmc
push
data16
xchg
aas
push
add
and
mov
stc
cmps
add
sub
push
and
(bad)
adc
push
adc
mov
les
dec
or
inc
icebp
cdq
jl
and
pusha
sbb
sbb
xchg
jmp
mov
mov
test
fist
push
adc
retf
outs
test
adc
ret
add
jnp
(bad)
mov
inc
scas
lods
xchg
or
add
repz
push
loopne
adc
loopne
cmp
or
popa
cmp
sbb
and
pop
push
sbb
add
push
adc
push
and
in
cdq
jbe
sub
or
add
adc
cmps
inc
rcr
cmp
imul
push
lods
and
cmps
aas
xor
(bad)
mov
or
shl
hlt
ficomp
pushf
push
push
inc
add
adc
scas
shld
dec
(bad)
dec
ins
cmps
jl
add
retf
jecxz
into
in
adc
(bad)
push
cdq
adc
ficomp
outs
into
wbinvd
adc
dec
test
jmp
xchg
sbb
jp
shl
repnz
adc
stc
nop
inc
add
mov
cmp
dec
adc
push
mov
sbb
sbb
les
xor
pop
jp
pop
inc
(bad)
call
adc
push
mov
daa
lahf
lods
rol
sar
sbb
retf
push
lea
pop
dec
adc
add
icebp
add
sub
imul
ins
bound
xor
dec
pushf
sbb
pop
adc
jmp
push
sbb
inc
ins
je
in
mov
(bad)
sbb
loopne
inc
mov
or
js
add
ja
cmp
push
push
inc
rcr
add
dec
inc
lahf
loopne
xlat
mov
jae
sub
push
ja
xor
push
and
fwait
mov
rol
dec
gs
sbb
mov
jp
ins
jnp
xchg
test
push
iret
add
sbb
pop
push
dec
outs
je
ret
lds
dec
cmp
and
add
popf
ret
or
jnp
(bad)
lods
push
pop
push
stos
lods
pop
jae
aam
or
jge
adc
add
pop
xor
or
push
dec
dec
popf
push
push
and
add
add
or
outs
loopne
adc
xchg
dec
lock
pop
sbb
dec
pop
cmp
sbb
loopne
ins
(bad)
cmp
in
adc
jo
mov
pop
lods
lss
(bad)
inc
stc
pop
jo
mov
pop
sbb
adc
lock
or
cmp
leave
push
aad
push
movups
sbb
inc
pop
jo
and
push
jle
punpckhwd
imul
push
inc
cmp
je
call
dec
outs
ja
pop
adc
and
ins
adc
mov
mov
inc
push
adc
call
or
addr16
mov
sbb
dec
test
jnp
push
inc
outs
arpl
scas
js
dec
cli
cmps
sbb
jmp
nop
aas
ja
lods
int3
shl
and
scas
add
inc
and
ja
test
inc
fldcw
movs
add
xlat
mov
push
(bad)
push
(bad)
sbb
int3
sbb
pop
test
inc
cmp
aam
sbb
push
cs
ds
enter
or
add
clc
pop
or
or
mov
pop
push
mov
pop
loope
inc
out
push
jne
mov
xor
in
gs
or
push
je
repz
lea
inc
gs
add
mov
push
pushf
inc
in
xor
ret
or
push
add
in
and
jne
sbb
mov
mov
push
xchg
sub
jne
ds
adc
cmp
fnop
js
test
cmp
pop
pop
pop
or
add
loop
dec
fmul
cmp
xchg
pusha
loope
sub
pushf
push
mov
js
cmp
sbb
repnz
popf
xchg
xchg
xchg
sbb
mov
repnz
outs
scas
pmaxub
sbb
ins
jnp
jb
(bad)
sbb
leave
leave
mov
sub
mov
add
std
sbb
inc
and
push
daa
mov
aas
sub
or
mov
inc
scas
add
push
(bad)
retf
shr
inc
outs
push
jns
outs
mov
push
shl
test
xor
pusha
mov
adc
adc
jne
out
add
adc
xchg
jb
dec
mov
sbb
hlt
add
inc
scas
loop
hlt
jns
inc
aas
lahf
test
popa
xchg
jmp
xchg
clc
adc
and
jg
ss
dec
fsincos
es
add
push
(bad)
push
pop
add
xor
(bad)
test
dec
sbb
mov
inc
or
or
dec
ret
adc
sbb
jae
aas
add
mov
arpl
xchg
stos
mov
jge
jge
rol
and
adc
mov
or
lock
or
or
and
inc
add
nop
xchg
mov
xchg
pop
push
lods
and
add
push
add
rcl
lods
dec
mov
mov
int
add
mov
sbb
popf
lock
add
add
movnti
jl
popa
imul
dec
je
jae
xchg
stos
sar
jo
pop
rcr
scas
adc
test
dec
pop
pop
imul
aam
pop
add
cmp
or
pop
mov
pop
or
and
xchg
and
and
add
pop
push
sub
push
pop
ret
sub
push
adc
dec
ins
or
sub
mov
cmc
test
stos
mov
or
cmp
call
inc
mov
gs
ficom
jmp
and
and
and
dec
add
cwde
push
or
and
and
sahf
std
daa
adc
das
and
addr16
adc
add
arpl
ins
scas
lock
adc
mov
or
retf
inc
inc
sbb
mov
and
adc
aaa
sub
cmp
inc
jae
add
pop
and
mov
dec
outs
pop
dec
adc
xor
pop
cmps
mov
adc
aas
call
add
inc
imul
xor
inc
sbb
outs
cwde
jmp
xor
outs
jo
and
out
std
adc
pop
sub
add
js
push
xor
out
or
je
or
mov
inc
mov
fcom
push
gs
pop
int3
pop
jmp
enter
pusha
and
push
push
pop
adc
adc
es
jnp
ja
adc
iret
imul
mov
or
and
(bad)
lock
xchg
push
cld
pop
inc
and
cmp
mul
or
loope
repnz
fwait
push
or
popa
imul
arpl
adc
outs
xchg
pop
cmp
movs
(bad)
jns
add
cmp
or
xchg
jge
mov
sbb
add
mov
(bad)
fld
jnp
dec
daa
or
adc
push
add
mov
mov
adc
dec
call
jno
cmps
jecxz
add
aad
mov
mov
pop
mov
cmps
cmp
inc
daa
rcl
(bad)
loopne
call
dec
add
add
in
inc
test
ins
sub
jp
movs
cmp
retf
cld
and
jmp
inc
je
(bad)
or
push
bound
cmp
nop
pop
add
add
cmp
jo
or
add
ins
adc
je
fld
inc
test
sbb
pusha
wbinvd
dec
dec
bound
idiv
jg
cmp
push
xor
mov
jecxz
fwait
xchg
in
rcl
mov
das
call
mov
dec
add
dec
xor
pop
pop
cmp
stos
push
adc
sub
std
jle
loopne
stos
jnp
mov
xchg
dec
inc
retf
push
sub
and
and
inc
jl
dec
fwait
add
push
ret
pshufw
xchg
or
int
mov
xchg
push
adc
sub
fs
fisub
dec
and
push
jl
les
push
push
add
sbb
mov
das
bound
sbb
in
imul
arpl
and
push
mov
sub
imul
mov
clc
icebp
adc
mov
test
in
or
pop
jecxz
ins
fisub
jae
mov
imul
add
jmp
add
arpl
and
mov
cmovp
mov
dec
or
adc
jp
add
sub
sysret
add
dec
shr
es
loope
daa
push
sub
in
lock
stos
mov
ss
bound
add
dec
push
mov
sbb
(bad)
test
sbb
cmp
not
lahf
and
push
jecxz
fiadd
mov
adc
sub
or
and
fst
mov
jns
add
adc
and
sub
pop
and
nop
adc
jne
xor
lahf
das
or
add
dec
xchg
fsubr
je
xchg
mov
inc
inc
xchg
add
sub
inc
add
call
es
push
pop
mov
sub
mov
pusha
jp
push
mov
cmp
rcr
mov
inc
jne
out
pop
adc
(bad)
lea
pop
inc
sbb
sub
cs
ds
or
cmp
jnp
cs
int3
inc
ins
xchg
inc
push
int3
int3
int3
add
sub
repz
out
push
sub
xor
pop
pushf
xchg
cmp
mov
pop
pusha
and
add
push
ss
clc
jmp
mov
sub
push
push
mov
daa
add
pop
fst
mov
iret
in
dec
loopne
ds
lahf
ds
ss
push
pusha
cmp
inc
mov
inc
add
push
fadd
xor
int3
dec
into
jnp
fnstcw
dec
jl
movs
mov
push
push
add
push
hlt
cmp
add
cmps
sbb
and
outs
or
add
test
and
test
rcl
icebp
mov
adc
inc
(bad)
mov
jae
aaa
or
mov
and
xchg
push
xor
jmp
loopne
outs
and
mov
lods
ret
and
xor
sub
sub
inc
adc
int
push
inc
arpl
sti
or
mov
iret
in
pop
dec
cli
call
xor
(bad)
push
fs
test
jmp
xor
imul
mov
paddd
mov
xor
call
mov
fnstsw
inc
das
jo
inc
mov
cmovl
(bad)
(bad)
and
stc
jmp
cdq
xor
push
(bad)
(bad)
fcmove
icebp
cmp
mov
push
in
xor
jns
not
add
or
dec
inc
fdivr
dec
pop
jl
add
call
clc
cwde
push
ss
ss
xchg
mov
inc
addr16
arpl
add
fsubr
ins
mov
out
(bad)
out
ds
gs
gs
gs
cmp
push
popa
rol
mov
mov
or
cmp
rol
movs
add
inc
fwait
add
fisttp
inc
and
aas
lods
sbb
frstor
mov
inc
inc
popa
lods
movs
push
call
adc
mov
push
push
shl
loope
push
das
xchg
or
xor
add
test
test
shl
inc
pop
pop
(bad)
pop
xor
adc
or
push
arpl
or
ss
pop
sbb
add
test
push
iret
mov
fmul
sbb
movs
sets
and
pop
fcomp
out
test
das
jmp
stos
pop
jne
test
push
dec
dec
sbb
jns
sbb
popa
ins
ja
or
xor
xchg
and
sub
or
test
jbe
cmp
inc
nop
loopne
cmp
sub
dec
pop
adc
data16
push
loopne
cmp
dec
jecxz
mov
mov
sub
sbb
cmp
movs
aad
pop
stos
cli
cmp
pusha
dec
inc
gs
push
out
and
sbb
sbb
jle
sub
jmp
adc
mov
jmp
and
mov
jns
inc
movs
fcomp
or
mov
sti
jns
mov
xchg
and
sub
das
add
or
(bad)
aam
fisttp
shl
lds
mov
stc
sahf
bound
jge
jne
push
inc
cmc
ret
or
pushf
dec
inc
lea
and
push
in
ret
ret
add
pushf
adc
adc
ret
lods
adc
mov
dec
in
popa
or
loope
jmp
fisub
push
or
ror
xor
xchg
es
mov
aad
sahf
or
sub
push
push
lods
out
sub
cmps
push
adc
cmp
mov
pop
clc
jnp
push
dec
out
add
jae
fsub
dec
ss
aaa
jmp
rol
sub
sysret
mov
push
inc
test
arpl
aaa
call
pop
push
cmp
pop
and
ss
sbb
pusha
and
popf
pop
or
inc
push
cmp
or
jge
and
push
adc
pop
pop
scas
sub
sub
mov
or
dec
popf
dec
adc
dec
out
and
add
mov
xor
push
dec
lods
mov
add
jecxz
cmp
inc
push
pop
fs
inc
jo
push
pop
push
and
push
es
rol
push
aam
push
mov
sbb
arpl
xchg
add
lds
push
jno
xchg
xor
or
cmp
mov
cmp
cld
push
inc
cmp
outs
iret
cmp
push
add
jmp
cmp
mov
into
add
add
or
je
jo
ss
scas
mov
jecxz
cmp
push
add
arpl
popa
jb
test
test
sub
jl
in
push
dec
imul
cmp
ja
add
jne
jns
adc
add
sbb
cmp
stos
adc
jae
pop
sbb
call
sahf
jp
push
outs
jg
xor
inc
push
push
in
dec
cmp
adc
and
in
mov
mov
and
cmc
(bad)
clc
push
mov
cs
movhps
mov
dec
or
aam
arpl
clc
jnp
or
scas
das
dec
and
jl
cmp
push
inc
dec
es
push
(bad)
xlat
jbe
jmp
fcom
inc
pop
dec
loopne
xchg
push
ins
pop
test
sbb
pop
dec
movs
push
or
jl
fild
fadd
inc
jmp
mov
inc
test
shl
and
push
aam
xor
jns
xor
repz
(bad)
sub
push
dec
jb
mov
outs
ds
movs
(bad)
pinsrw
adc
aas
fdiv
ret
psubd
mov
inc
aam
rol
xor
xor
sub
and
shl
bnd
aas
xor
add
imul
jno
jmp
inc
jne
ins
jns
ins
pop
xchg
push
or
mov
push
push
out
popa
mov
(bad)
popa
cmps
add
sbb
cmp
fs
or
mov
mov
adc
cmps
push
stc
and
sbb
mov
out
aad
inc
and
movs
aas
int
sbb
retf
lock
jmp
sti
or
jmp
ror
jge
add
mov
or
mov
in
jbe
add
push
cmp
sub
outs
push
imul
js
fsub
jno
daa
inc
fadd
fmul
push
push
mov
xor
push
loope
mov
stc
push
es
icebp
push
sahf
adc
sbb
inc
inc
sbb
xor
fnsave
cmp
mov
imul
outs
add
test
daa
add
dec
push
push
sbb
cmp
inc
push
fild
call
push
out
lahf
mov
push
xchg
fwait
inc
loopne
jle
sahf
and
imul
or
cs
jno
enter
leave
addr16
cmps
cmps
or
adc
xchg
sub
fbstp
xor
test
xor
mov
dec
mov
test
out
push
inc
outs
ins
popa
adc
or
inc
adc
sub
ins
jmp
jmp
mov
ins
add
pop
and
(bad)
sub
adc
jb
pusha
shl
loopne
or
push
into
loop
rol
jae
pop
inc
inc
aad
inc
mov
aad
push
mov
cdq
cdq
jle
bswap
push
dec
pop
or
pop
das
stos
inc
inc
inc
and
mov
jbe
(bad)
daa
daa
mov
divps
xchg
xchg
inc
popf
xchg
daa
jo
or
dec
into
sahf
sub
pop
or
dec
xor
ja
bound
jns
add
dec
pop
mov
pop
cmp
dec
add
and
shr
add
cmp
sub
inc
dec
inc
jbe
loope
(bad)
pop
stos
mov
push
movs
xor
rol
adc
in
lods
ja
and
scas
xor
or
add
add
add
pusha
cli
and
jecxz
push
or
mov
inc
push
cmc
and
fwait
add
pop
lds
inc
inc
mov
aaa
mov
mov
mov
pop
dec
das
pop
adc
lods
dec
aaa
daa
or
push
xlat
inc
loopne
or
stos
rcl
imul
sub
call
and
push
cmps
fimul
(bad)
sub
pop
dec
enter
add
mov
test
jg
es
xor
inc
aam
call
push
cmp
dec
lahf
clc
dec
inc
daa
pushf
das
add
mov
pop
push
cmps
jp
test
das
sbb
pop
push
sub
loopne
mov
dec
popa
sub
les
xchg
lea
add
jbe
push
fmul
inc
dec
ds
imul
in
xchg
cli
(bad)
dec
outs
xor
in
movs
loop
dec
ins
js
arpl
xor
xchg
cmp
push
iret
dec
mov
adc
loopne
adc
sub
out
ins
add
mov
or
fst
imul
jo
xor
ret
in
xor
loopne
(bad)
(bad)
cmp
and
and
test
and
lock
adc
sbb
dec
xchg
dec
ins
add
cmc
jmp
xor
or
aaa
xchg
ins
lock
and
rcl
ins
or
xchg
push
cmp
add
jns
inc
mov
lahf
adc
or
or
push
jecxz
gs
push
sbb
mov
and
xchg
inc
and
pop
and
imul
push
jo
inc
cmps
push
inc
in
cmp
xor
adc
sub
or
jmp
push
frstor
scas
push
arpl
add
xlat
inc
push
adc
push
dec
xchg
add
adc
fsubr
pcmpeqb
loope
mov
dec
mov
dec
dec
pcmpgtw
out
adc
mov
ficom
cmc
wrmsr
mov
cdq
xchg
or
push
mov
inc
dec
add
js
in
lods
cwde
or
inc
or
push
jno
cmp
outs
test
int
seto
cld
push
rcl
fistp
or
and
push
imul
mov
push
ds
sub
nop
jno
jno
lea
das
jg
inc
leave
fwait
and
call
mov
fcomp
cmps
rcl
or
enter
adc
jb
iret
xchg
and
mov
ins
and
jg
mov
cdq
and
mov
leave
cwde
inc
pop
jp
xchg
add
push
mov
fbld
inc
add
popa
pop
xchg
jg
inc
js
sbb
outs
or
cmp
in
push
cmps
push
test
in
repnz
push
mov
scas
jo
fidivr
inc
xor
add
bound
fsub
mov
push
and
push
sbb
mov
and
inc
clc
jg
mov
inc
dec
jne
mov
pop
pop
das
movs
jb
sbb
cmp
(bad)
mov
inc
and
nop
xor
pop
add
femms
sbb
fsub
cli
jge
and
xor
sbb
mov
int
outs
jmp
imul
and
pop
pop
mov
out
mov
dec
inc
sbb
or
aas
add
mul
xor
mov
pop
add
jae
adc
push
xor
ret
mov
(bad)
outs
retf
int
jmp
in
(bad)
movs
inc
dec
or
cwde
or
xor
dec
or
(bad)
push
mov
xor
add
sbb
and
add
fidivr
or
push
add
add
nop
sahf
inc
ror
sbb
or
sub
sbb
movs
mov
test
jo
clc
dec
into
(bad)
jmp
or
add
pop
push
push
inc
iret
dec
ret
mov
retf
adc
clc
push
mov
cmp
pop
cmp
jle
lds
xor
(bad)
dec
ror
adc
or
in
and
xchg
inc
and
mov
jb
push
pslld
pop
dec
add
nop
and
and
sub
push
and
pop
adc
rol
xor
cmp
test
push
jo
sub
sbb
rol
bound
(bad)
mov
cmc
cdq
mov
jne
sub
push
shl
dec
push
cmc
imul
pop
sub
xchg
aam
sahf
jle
mov
je
ret
nop
ss
adc
mov
and
lea
es
imul
push
sub
and
jne
cmp
and
mov
push
icebp
mov
xor
shl
cmp
jb
or
or
cmp
jb
sub
leave
aas
pop
mov
lods
or
cmp
cmp
das
pop
cmp
mov
stos
movs
jo
stos
xor
in
fbstp
rol
inc
push
push
or
push
and
pop
xlat
fild
or
pop
pop
jg
mov
mov
scas
je
out
ins
xlat
cmps
inc
jo
add
and
or
mov
mov
cli
aas
adc
pop
mov
inc
fsub
mov
xchg
arpl
adc
or
adc
inc
xor
lock
cmp
mov
loope
cmp
jnp
adc
dec
dec
ret
push
pop
retf
loopne
bound
pop
scas
ja
clc
nop
and
ins
or
lds
leave
cmp
test
pop
and
jae
inc
ret
pop
pop
jp
mov
mov
cmp
push
lods
push
inc
xchg
aas
bound
xchg
aaa
cmp
mov
aaa
hlt
sub
pop
push
dec
or
or
jno
sub
or
add
mov
mov
mov
sbb
and
sahf
and
jae
push
mov
adc
push
mov
push
pop
or
inc
cmp
or
call
push
mov
inc
or
add
scas
ja
cmp
xchg
cmp
pop
rcl
pop
test
loope
mov
mov
mov
hlt
mov
out
mov
in
mov
or
jl
ja
xor
inc
pushf
dec
cmp
mov
add
dec
call
inc
cmp
fnstcw
add
push
push
mov
popa
pop
cmps
imul
cmps
add
inc
push
adc
xor
mov
retf
xchg
add
ins
inc
cmp
and
mov
int
rcl
clc
das
lahf
cwde
jne
mov
xor
shr
push
daa
adc
test
sbb
clc
jne
mov
retf
aas
out
add
movs
mov
cmp
cmp
sub
inc
add
test
lahf
pop
inc
and
in
jmp
add
jne
inc
cmc
hlt
adc
jne
sbb
adc
call
arpl
ins
adc
add
xchg
aam
sbb
adc
and
jmp
xlat
cmps
pusha
mov
and
mov
inc
and
mov
add
cmps
mov
pop
or
jns
pop
jmp
dec
inc
push
sub
xlat
mov
das
jp
pop
jbe
inc
lock
bound
and
movs
jns
imul
imul
add
or
loopne
xchg
xor
and
ret
jne
pop
lahf
mov
add
jo
and
cmp
pop
imul
push
scas
out
inc
pop
or
shl
clc
sub
dec
pop
dec
or
mov
mov
pop
mov
clc
rcr
mov
pusha
mov
in
fdivr
lock
xchg
cmp
lods
std
sbb
add
or
mov
mov
rcr
out
pop
pusha
cmps
popa
sub
dec
jne
pop
mov
nop
lahf
jge
lock
or
inc
test
dec
jb
movs
ror
test
enter
pop
repnz
mov
stos
xor
mov
or
adc
push
lods
cmp
add
sti
mov
push
das
test
inc
fucomip
adc
or
push
lods
inc
jb
mov
(bad)
or
pushf
adc
imul
xor
retf
or
sbb
xchg
aas
and
pop
or
dec
or
lods
data16
cmps
fs
loope
jb
aas
test
inc
xlat
pop
gs
stc
add
sub
add
pop
out
cwde
pop
mov
repz
dec
dec
or
xor
or
inc
dec
lds
sar
push
nop
add
and
scas
arpl
aaa
cmp
add
cmc
cld
cmp
sub
cmp
out
add
pop
mov
or
jne
inc
mov
adc
fisub
mov
popa
imul
(bad)
popa
lahf
test
in
add
xchg
sbb
lock
loope
out
lock
popa
xor
movs
mov
mov
add
test
inc
(bad)
sub
push
xchg
cmp
add
mov
call
or
test
add
add
inc
lods
lea
and
out
retf
outs
add
jne
loop
inc
mov
add
sahf
sti
push
mov
outs
sub
nop
jo
retf
dec
jne
sub
sbb
pop
clc
sbb
lods
jne
mov
imul
add
push
xor
ja
xchg
je
div
pop
adc
mov
push
xchg
mov
mov
mov
shr
xchg
mov
call
mov
in
pop
add
nop
ja
dec
into
rcr
adc
loope
push
xchg
pop
ret
ja
out
adc
mov
mov
or
rol
or
imul
pop
sbb
es
sbb
arpl
(bad)
push
inc
aad
fwait
sahf
int3
mov
sbb
cmp
in
nop
add
(bad)
mov
mov
sub
cwde
scas
add
xor
or
nop
pusha
xchg
push
xor
aaa
aas
das
arpl
pop
loope
(bad)
mov
ins
dec
je
sbb
or
out
out
or
pop
pop
adc
push
xor
fucomip
(bad)
pop
xor
lock
mov
push
or
mov
xchg
aaa
mov
arpl
or
xchg
fs
pop
call
xor
cmp
xlat
adc
ret
mov
jo
cmp
test
push
adc
mov
daa
inc
cld
cmp
mov
cld
pop
lea
mov
lods
or
fistp
push
dec
ret
addr16
xchg
or
inc
cmps
xchg
push
push
gs
mov
sbb
and
fs
cmp
push
fstp
aam
idiv
add
xor
lods
add
dec
push
adc
shl
push
mov
ficomp
lods
aas
movs
mov
sbb
sub
or
xchg
cmp
(bad)
mov
push
fist
xor
dec
xor
aas
test
pushf
nop
into
jo
push
pop
push
jmp
xchg
test
jecxz
xchg
inc
adc
or
daa
hlt
sbb
add
vpsubb
mov
mov
and
cmp
ret
push
pop
das
rcl
aad
and
or
dec
sub
jnp
push
fs
hlt
mov
dec
hlt
push
sahf
add
leave
cdq
call
push
push
sti
adc
fs
add
xchg
mov
sbb
jne
cmp
ds
jmp
or
pop
int
ret
(bad)
aaa
push
sar
dec
in
loopne
xor
sbb
clc
pop
inc
ret
out
add
pop
(bad)
mov
or
inc
shr
dec
or
inc
or
push
imul
aas
jae
jae
add
push
ins
pop
fnstsw
add
shl
leave
lods
add
jg
inc
add
rol
pusha
icebp
mov
pop
and
nop
cmps
mov
maskmovq
not
add
stos
cmps
into
mov
inc
jae
ja
pop
sub
test
not
jge
sub
test
cs
shr
adc
or
cmp
inc
or
mov
mov
add
pop
or
pop
dec
jmp
jb
aaa
dec
sbb
inc
add
push
adc
fidiv
in
mov
xchg
jno
test
push
jnp
adc
xor
push
mov
sub
cs
pop
pop
icebp
pop
ret
add
call
ss
push
xor
mov
mov
rol
call
pop
or
mov
std
mov
jg
cmp
jle
cmc
test
outs
rol
stc
add
adc
dec
mov
int3
jmp
push
add
mov
mov
xor
sar
push
inc
je
idiv
adc
add
dec
or
mov
pop
test
pop
mov
sbb
lea
xchg
mov
popf
or
jmp
xor
aas
push
inc
sub
jle
retf
add
cwde
cmp
push
inc
pop
jne
fstp
cmp
dec
push
or
cld
ret
jmp
inc
add
xor
inc
cmp
cli
daa
fnstsw
div
xlat
xchg
jne
js
mov
js
xchg
mov
pop
lods
or
sub
outs
mov
or
test
fisub
mov
or
adc
cli
push
test
pop
rol
sub
test
mov
push
ins
sbb
xor
pop
mov
or
or
cs
mov
lock
pusha
xor
pop
sti
not
or
pop
or
inc
add
cmp
sub
sbb
out
jg
fisttp
jle
add
dec
cmp
jge
sbb
pop
icebp
stos
ins
test
(bad)
sub
inc
sbb
add
lock
add
pop
add
ucomiss
add
aas
jge
cmp
or
and
(bad)
hlt
pusha
enter
nop
xchg
inc
pop
dec
jo
clc
mov
jge
push
je
xchg
pop
mov
jle
xchg
adc
sub
lods
dec
xor
xchg
aad
push
mov
xor
sub
jg
dec
mov
mul
out
ss
nop
in
add
or
in
data16
jne
mov
pop
pop
pop
or
mov
fist
ret
(bad)
outs
mov
loope
pop
pop
jmp
lds
lock
shr
nop
add
repnz
lea
je
mov
lock
or
jmp
mov
jmp
sub
sbb
add
lea
sti
mov
push
inc
cdq
mov
cmp
rcl
jge
cmp
jle
sar
fnstsw
cmc
add
test
pop
hlt
jl
sbb
inc
jb
rol
cmp
std
mov
jg
ret
shl
sbb
push
unpckhps
pop
cli
lahf
data16
ss
and
and
add
adc
sub
popf
xlat
pop
call
sahf
neg
xlat
push
loope
add
add
ins
repz
js
push
imul
add
xchg
outs
cdq
outs
inc
jmp
movs
inc
xchg
xor
test
sbb
ds
aaa
push
dec
fisub
sub
adc
ror
ret
daa
adc
mov
lds
mov
sub
jno
outs
inc
inc
cmp
jo
sub
and
(bad)
mov
test
sti
popf
mov
test
sub
lock
enter
jle
mov
add
xor
outs
inc
add
mov
dec
jle
or
dec
jl
mov
ins
pop
push
mov
fld
movzx
xor
pop
test
mov
adc
or
mov
mov
mov
or
int
nop
pop
pusha
xor
push
(bad)
stc
mov
push
nop
in
clc
push
sbb
jmp
cmp
mov
rol
pop
jo
aaa
push
ja
int
jns
icebp
loopne
push
jb
add
cmc
dec
xor
mov
xor
mov
nop
dec
adc
jmp
mov
adc
mov
inc
movs
rcl
pop
sbb
mov
gs
jne
sub
fdivr
add
adc
rol
mov
and
or
mov
ins
mov
adc
inc
clc
rcl
in
mov
je
aaa
rol
pop
or
cmp
int3
test
inc
pop
pop
add
inc
clc
lods
out
mov
(bad)
call
mov
xor
dec
cwde
pusha
add
jb
shr
jno
test
out
sub
mov
pop
push
and
push
xor
pop
push
or
xor
lods
sub
add
data16
cmp
add
cmp
(bad)
and
rol
adc
adc
mov
pop
in
pop
out
fucompp
cld
cmp
and
or
je
ja
xadd
ror
jmp
dec
add
fist
jb
lods
imul
and
or
inc
add
stos
dec
repz
pop
and
repz
aad
and
sub
into
adc
pop
rcl
pop
int3
in
push
pop
jbe
mov
jecxz
mov
cs
or
pop
sbb
jmp
loope
pop
cmps
aad
cmp
jge
adc
add
dec
jo
rol
mov
push
mov
adc
mov
cbw
pop
pop
add
adc
push
sub
bound
adc
inc
mov
mov
or
add
nop
push
out
sub
aam
mov
jbe
scas
jno
cld
jge
pop
mov
test
xchg
sbb
ret
jbe
jmp
out
or
mov
jmp
adc
loope
leave
sbb
das
das
imul
dec
loopne
pop
fild
rcr
fcmovnbe
inc
nop
adc
stc
cmc
push
ja
pusha
stc
mov
clts
mov
fwait
add
mov
call
push
or
clc
in
enter
pop
ja
or
popf
or
retf
push
cmp
pushf
pop
xchg
lods
or
mov
inc
and
xchg
call
rcr
lea
and
or
clc
push
push
mov
adc
xchg
cmp
sbb
and
shl
ja
add
mov
sbb
sbb
loope
jns
dec
xchg
pop
out
xlat
add
or
shl
mov
dec
fist
test
inc
enter
pop
pop
lahf
loopne
push
jb
jns
cmp
leave
push
test
mov
imul
pushf
imul
(bad)
(bad)
xchg
xor
out
mov
jle
mov
or
test
lds
pop
xchg
mov
sub
sub
sbb
mov
std
lods
enter
xcrypt-ecb
cmps
or
nop
xchg
jnp
and
in
push
mov
lods
arpl
mov
adc
in
pushf
push
pause
test
and
imul
les
mov
lods
sub
adc
ins
push
mov
cli
adc
pop
add
test
in
jg
imul
pop
int3
dec
mov
sar
inc
inc
push
outs
pop
call
out
je
xor
push
mov
mov
icebp
mov
push
leave
sbb
bound
icebp
inc
cmp
cmp
xlat
mov
ror
adc
(bad)
fldenv
adc
test
retf
fs
and
lock
add
jae
or
leave
je
sbb
pop
inc
stos
adc
btr
cmp
sbb
xchg
inc
adc
pop
jmp
sbb
mov
dec
xchg
les
and
clc
adc
and
cmp
je
sbb
dec
cmps
inc
push
cmp
ja
mov
and
xlat
jb
mov
loop
ins
(bad)
in
ja
add
sbb
cmp
jl
adc
push
inc
cmp
jne
inc
test
outs
mov
add
inc
test
pop
mov
sbb
xchg
sub
mov
pusha
test
add
stos
push
mov
jge
div
sbb
jmp
outs
mov
add
popa
adc
sbb
inc
and
sub
call
rcl
test
mov
dec
add
xor
iret
call
(bad)
push
cwde
loopne
or
push
xchg
mov
(bad)
cmps
jle
xlat
mov
cmc
adc
ret
mov
in
mov
pop
and
xor
fild
pop
push
push
push
mov
push
and
inc
sbb
xor
cmc
mov
push
add
pusha
(bad)
mov
pop
and
call
or
sbb
dec
lods
rcr
ror
pop
xchg
mov
xor
dec
pusha
stos
push
inc
les
inc
jmp
jmp
xlat
aas
jo
dec
enter
bound
push
and
adc
rcl
mov
add
sub
scas
pop
or
inc
sbb
je
addr16
push
adc
xor
sub
sub
gs
adc
test
mov
out
or
mov
repz
sub
scas
pusha
sub
or
adc
jmp
dec
int
cmps
mov
sbb
mov
mov
ror
popa
xor
xor
sub
addr16
lock
mov
cmp
mov
rcl
jmp
jne
xchg
adc
mov
xor
or
ret
mov
out
mov
iret
pop
pop
das
or
pop
xchg
mov
ret
sub
add
mov
cmp
push
out
sbb
and
jle
jno
sub
fcom
rcr
mov
mov
mov
or
lock
pop
lahf
daa
mov
push
pop
or
mov
inc
das
push
or
shl
sbb
push
sub
jbe
adc
pop
dec
test
sbb
and
out
push
lock
cmp
cmp
sub
ret
cmps
mov
into
adc
xchg
sub
cmp
lds
iret
mov
add
pop
ja
enter
inc
or
sbb
nop
push
dec
xchg
pop
or
or
test
or
and
jge
ror
pop
in
fs
pop
pop
mov
ins
nop
sub
lahf
sub
mov
inc
mov
punpckhwd
ds
xor
and
aas
icebp
xchg
mov
jb
adc
fucomp
pop
cmc
or
jecxz
outs
pop
mov
add
mov
popf
inc
or
ins
dec
addr16
push
hlt
inc
xor
mov
xor
jnp
or
bound
enter
cmp
dec
sub
sbb
(bad)
push
popf
das
test
sti
pop
pop
je
dec
icebp
mov
mov
sub
inc
or
icebp
push
jb
retf
or
cmp
hlt
dec
or
(bad)
leave
or
dec
mov
test
inc
jo
sub
push
push
inc
dec
pop
repnz
jp
add
test
xor
xchg
add
pop
aad
add
or
push
(bad)
sbb
xor
add
ins
loopne
pop
jne
fstp
sbb
mov
sub
push
into
jmp
add
inc
rcl
rol
es
add
movs
mov
pusha
sti
fiadd
add
pop
jae
add
add
hlt
imul
add
cmp
jne
sub
and
xchg
jne
pop
jne
dec
and
sbb
cwde
test
test
movs
mov
ret
push
inc
ss
stc
and
sbb
xor
fwait
shl
adc
adc
mov
mov
rcl
sub
pop
pop
pop
div
jl
dec
cmp
sub
hlt
jno
adc
outs
dec
jnp
ret
pop
pop
out
mov
push
add
lock
mov
push
daa
add
loope
dec
aad
int
or
es
add
mov
cdq
mov
push
(bad)
cmp
inc
shr
pusha
lock
inc
arpl
pop
daa
push
sub
jb
loopne
aaa
cwde
mov
aam
pop
push
lea
pop
addr16
loope
shl
sbb
push
mov
xor
jg
sbb
adc
or
inc
lods
popf
pop
pushf
pop
push
mov
ffree
inc
sub
mov
pop
lods
popa
cmp
sbb
addr16
cmc
mov
js
lea
iret
sbb
xor
inc
pop
loopne
popa
add
cwde
cdq
mov
bsf
mov
mov
loope
fisttp
or
stc
mov
mov
cmp
rcr
lods
sbb
ret
jmp
push
fld
iret
hlt
jg
mov
jp
sub
clc
repz
sub
in
clc
ror
sahf
mov
xchg
mov
mov
bound
add
rcl
or
pop
dec
cmp
mov
and
sub
sub
mov
stos
add
add
mov
int
mov
inc
nop
stos
fadd
mov
mov
sub
mov
jns
fiadd
adc
sbb
adc
das
xchg
in
bound
push
ret
sub
adc
push
sbb
test
test
jnp
add
mov
xchg
ins
in
rcl
mov
pop
in
mov
jo
daa
mov
stc
and
and
inc
clc
(bad)
sub
into
adc
pop
test
cmp
ret
pop
pop
fist
cmp
jo
cdq
clc
push
push
test
push
xor
enter
jb
out
pop
xor
mov
call
js
inc
xor
iret
lock
cmp
sbb
mov
pop
jp
loope
cmp
jne
mov
int
lock
icebp
inc
addr16
push
pop
cmp
aas
out
push
in
mov
jecxz
jne
rcl
mov
dec
into
mov
shl
pop
pop
or
jo
pop
(bad)
call
mov
adc
add
and
or
inc
and
or
and
dec
pop
test
xor
mov
repz
or
stos
or
or
add
inc
mov
push
sub
xchg
sbb
neg
adc
jno
xor
dec
fisubr
push
sub
and
fs
cmps
scas
sbb
and
push
mov
sbb
pop
lea
jg
cmp
cmc
test
add
sub
inc
push
xchg
iret
xchg
fs
inc
mov
call
test
pushf
xchg
test
xor
int3
mov
add
jb
adc
dec
sub
(bad)
ins
js
mov
mov
into
pop
or
add
jg
cmps
data16
adc
sub
sbb
daa
in
nop
mov
and
cs
add
and
mov
jo
or
mov
neg
in
sti
mov
pop
jmp
les
rcr
cmp
jl
dec
add
sbb
(bad)
int3
in
clc
imul
fadd
nop
test
or
int3
inc
xchg
pop
stos
outs
jmp
aaa
cdq
nop
or
loopne
mov
enter
push
les
push
jns
add
lea
test
aam
lea
mov
rep
pop
jne
mov
inc
dec
fsub
rcl
fsubr
dec
sti
fild
cmp
push
lea
jl
sub
lods
mov
shl
mov
mov
inc
push
sbb
inc
(bad)
lea
js
adc
mov
shr
sub
mov
sbb
aaa
movs
test
pop
inc
std
and
shl
and
sub
mov
mov
sbb
or
int
(bad)
outs
pop
fdiv
adc
mov
jne
mov
or
dec
push
push
mov
xor
xchg
and
dec
jne
adc
or
mov
fimul
add
xchg
data16
loopne
add
retf
mov
iret
clc
movs
sub
les
pop
sbb
scas
add
mov
sbb
outs
add
xchg
mov
dec
ins
xor
pop
pop
gs
mov
mov
call
jge
and
inc
adc
jns
sbb
pop
fistp
dec
push
cld
rcr
cmp
pop
fwait
les
push
dec
pop
add
(bad)
fmul
fcom
arpl
mov
xchg
popa
jo
mov
hlt
xor
in
call
cmps
hlt
mov
and
aas
(bad)
sub
std
into
(bad)
jo
ret
xchg
cwde
cmc
push
adc
sbb
jne
rcl
jmp
rol
push
call
xchg
leave
nop
dec
call
fcomp
mov
cld
xor
aam
pusha
sub
pop
daa
lods
pop
cmp
pop
dec
loopne
and
clc
adc
sub
mov
movs
jae
jecxz
mov
cld
cmp
(bad)
jg
clc
popa
cmc
and
pop
mov
mov
adc
pop
test
ss
mov
or
add
xchg
mov
addr16
cld
daa
rol
xor
adc
hlt
inc
xchg
call
sbb
and
xor
xor
push
jmp
(bad)
dec
mov
inc
clc
loopne
add
in
and
xor
and
add
push
xchg
aaa
sub
pop
xor
out
in
inc
cmp
add
pushf
mov
fadd
mov
cmp
clc
test
movzx
les
mov
xchg
sbb
cmp
outs
(bad)
push
push
adc
xchg
push
inc
fucomip
call
mov
fs
inc
pop
pop
cmc
call
cmp
jmp
xor
mov
mov
xor
mov
loopne
mov
push
cdq
add
xchg
test
sbb
call
test
icebp
lods
add
pop
or
and
arpl
ror
pop
pop
(bad)
std
leave
sbb
push
adc
out
sti
adc
add
push
or
jmp
sub
cmp
adc
or
cli
outs
pop
add
adc
out
add
dec
jmp
retf
sub
xlat
leave
hlt
push
dec
lock
bound
sub
sub
inc
inc
dec
sbb
xchg
inc
loop
arpl
dec
pop
mov
mov
add
xor
nop
sar
(bad)
je
or
lea
mov
and
lea
loopne
cmp
dec
pop
data16
xor
(bad)
pop
mov
sub
adc
xor
clc
adc
jno
xchg
jne
pop
addr16
sub
mov
cmp
mov
cwde
jmp
das
push
lds
lea
or
std
and
xor
pop
int
dec
push
inc
add
mov
xor
or
xchg
(bad)
aas
push
pusha
inc
daa
cdq
xchg
mov
pusha
cmp
dec
imul
sbb
ror
add
cmp
cs
push
cmp
je
or
and
shl
enter
aaa
or
popf
js
add
cld
fldenv
lods
xor
cdq
inc
popf
adc
adc
test
xor
and
sub
push
pop
push
pop
push
cmp
and
fcomip
sub
adc
rol
sub
push
or
adc
fwait
pop
rcl
rcl
sbb
push
test
jns
push
mov
cmp
lock
call
sub
sub
xor
adc
dec
inc
lods
mov
cmp
push
jmp
add
jb
fcmovb
inc
push
ja
nop
scas
movs
cmc
cmp
or
retf
into
sar
add
test
(bad)
rol
test
xchg
add
hlt
and
lods
outs
or
add
test
sbb
pop
mov
inc
push
leave
or
and
jge
movups
pop
repnz
inc
inc
in
ret
push
cld
mov
dec
dec
clc
jmp
je
pop
sub
add
sti
jne
sbb
mov
push
fmul
out
jge
sub
icebp
in
(bad)
push
test
sub
mov
(bad)
or
xchg
add
mov
cmp
cmp
sahf
(bad)
test
pop
jno
jae
(bad)
jge
inc
sub
fisttp
loopne
ds
ret
jne
bound
or
std
or
xlat
jge
jmp
add
adc
sbb
cmp
jge
js
and
cli
popf
aam
jne
(bad)
in
add
dec
cmp
add
fstp
add
and
or
sahf
xchg
icebp
push
lea
push
test
mov
(bad)
mov
adc
cmps
ret
popa
sub
jo
xchg
add
lods
popf
adc
imul
jb
inc
(bad)
bound
cmp
jne
sbb
mov
mov
sbb
and
sbb
or
pop
fisubr
adc
je
mov
xchg
pop
inc
xchg
mov
adc
push
push
adc
popa
mov
inc
dec
popf
aaa
sbb
fdivr
sti
sub
jne
xor
pop
mov
loop
push
pop
xor
shl
or
lahf
mov
scas
cwde
daa
scas
lahf
stos
and
cmovo
test
or
pop
add
pop
lock
fistp
or
cli
or
or
push
dec
pop
pop
ret
add
xchg
pusha
xchg
clc
pop
ficom
adc
popa
xor
pushf
mov
cmp
sbb
or
xchg
or
sub
pop
mov
add
xor
inc
jmp
or
cld
mov
pop
in
pop
ins
inc
lahf
cmp
push
mov
data16
and
jb
jo
add
rcl
jbe
mov
loope
sbb
push
fimul
lea
outs
sub
mov
out
sbb
daa
push
inc
or
add
out
cmp
sbb
inc
ss
or
sbb
dec
add
fs
loope
ja
scas
cmp
rcr
sbb
add
add
sbb
adc
add
clc
mov
lahf
das
mov
aad
jl
daa
je
cmp
leave
jnp
add
sbb
clc
push
or
mov
mov
adc
push
sub
mov
aas
mov
xchg
setnp
inc
aaa
outs
xchg
jg
push
pop
mov
sti
ror
dec
add
cmp
ss
mov
xor
lods
sub
aaa
inc
movs
adc
inc
sub
inc
fmul
mov
mov
bnd
mov
or
and
mov
adc
loopne
sub
enter
or
pop
push
mov
es
dec
popa
pop
sub
pop
call
cmp
pop
inc
mov
sub
xchg
das
inc
add
retf
xchg
pushf
les
sbb
pusha
cmp
es
dec
lods
mov
js
xchg
rol
imul
sbb
or
mov
cmp
cmps
jns
xor
shl
test
cmp
cmp
jnp
mov
mov
ja
or
adc
data16
bound
cwde
xchg
add
jmp
dec
call
pop
out
push
mov
and
add
adc
neg
xchg
xchg
adc
mov
mov
inc
dec
inc
sar
lock
dec
fwait
inc
pop
or
xchg
clc
jns
dec
or
icebp
sub
add
ror
ins
test
movs
dec
xor
jo
test
sar
mov
lock
or
adc
dec
xor
movs
sub
leave
dec
or
je
adc
retf
in
dec
sti
adc
shl
loopne
mov
add
adc
xchg
cmp
xor
(bad)
out
adc
lds
call
shl
sub
jo
mov
sar
dec
pop
add
add
adc
push
aas
in
add
mov
add
push
pop
jl
data16
inc
stos
in
mov
push
jg
mov
add
jmp
adc
add
pop
or
hlt
mov
jo
xor
pop
jge
lea
jmp
cld
imul
ret
sbb
repz
jle
ss
dec
inc
clc
mov
movzx
add
push
xor
add
xor
pusha
add
jnp
xor
push
xor
imul
inc
push
xor
ja
lock
ret
add
(bad)
test
xchg
sub
mov
and
adc
lods
fidiv
push
mov
cwde
mov
lods
push
mov
push
aam
sahf
push
cwde
imul
push
dec
or
adc
cmc
mov
add
mov
test
fisttp
push
xor
jmp
or
es
xor
pop
jg
call
jo
js
push
repnz
mov
mov
dec
mov
rol
inc
add
ret
xchg
inc
inc
or
cdq
outs
add
xlat
sub
setno
jmp
jno
stos
dec
push
inc
sbb
ja
sbb
(bad)
jg
inc
add
enter
xchg
out
sub
mov
xchg
sahf
add
add
cmp
movs
aaa
sub
sbb
mov
inc
das
scas
cwde
int3
jl
jge
adc
push
mov
xchg
outs
sub
or
pop
shr
test
je
pusha
outs
inc
xor
or
and
test
loope
int3
test
fbstp
add
retf
in
pop
ret
pop
nop
lahf
mov
hlt
add
inc
adc
or
in
xor
xor
mov
pop
push
pop
loopne
movs
mov
xchg
xchg
lock
(bad)
add
jmp
add
dec
dec
cmp
xor
cmp
adc
jno
jmp
ret
call
add
add
inc
clc
add
push
cmp
js
outs
aas
retf
adc
cdq
mov
into
mov
sub
xor
gs
cmp
add
pop
pop
(bad)
or
adc
mov
mov
ins
ret
jno
in
ins
push
sub
fwait
sbb
jmp
sbb
inc
adc
jmp
inc
sub
imul
jge
jge
and
and
cmp
add
sub
sub
ds
push
mov
add
sbb
jecxz
cmps
sar
lods
loope
mov
outs
or
add
rol
ret
jl
(bad)
add
mov
ret
inc
shr
iret
loopne
dec
jg
adc
in
lea
pop
pop
push
shl
dec
xchg
jns
in
cwde
mov
pop
xor
cmc
xchg
push
adc
or
pop
add
cmp
cmp
sahf
add
fwait
mov
cmp
(bad)
push
xor
mov
(bad)
loopne
add
int3
out
rcr
xor
aaa
clc
sbb
shr
cdq
xor
add
stc
mov
aaa
iret
pop
add
sub
push
sub
das
add
and
pusha
mov
add
cli
mov
leave
jg
es
ins
jg
pop
pop
pop
in
lea
mov
or
mov
das
cli
xor
pop
dec
cmp
push
call
outs
fcom
jmp
or
jo
jp
or
or
dec
add
inc
or
xlat
call
inc
scas
mov
sub
cdq
jmp
mov
inc
add
ror
add
push
outs
sbb
cs
ret
cdq
sub
push
mov
mov
inc
mov
in
cmp
mov
xchg
aaa
inc
leave
xor
inc
push
hlt
inc
push
add
and
xchg
cli
iret
fdivr
aam
lea
pop
pop
fidivr
xor
aas
rcl
ror
(bad)
add
lock
scas
ror
ja
jno
std
dec
movs
jge
pop
xor
and
inc
add
test
or
dec
shl
fdivr
xchg
mov
push
add
push
test
and
xchg
adc
pop
push
(bad)
or
dec
xchg
push
cmp
test
and
gs
loop
fmul
repz
adc
loopne
rol
pop
call
ss
mov
xor
dec
and
mov
mov
and
add
inc
dec
inc
add
pop
(bad)
dec
pop
inc
add
xlat
ror
xlat
pop
(bad)
repz
add
nop
imul
dec
pop
inc
lods
pop
call
icebp
jecxz
sar
loopne
add
lods
pop
(bad)
es
cwde
lea
in
cld
jb
scas
add
in
jge
jmp
xlat
xchg
sub
lods
shl
daa
adc
in
mov
loopne
fadd
jns
and
xchg
jle
(bad)
sub
xor
test
inc
lea
scas
test
mov
out
and
inc
add
mov
dec
pusha
(bad)
push
mov
pop
push
jnp
push
and
leave
or
cmp
mul
pop
or
inc
sar
into
sub
push
add
fadd
jae
mov
mov
dec
cld
adc
ret
inc
adc
(bad)
stos
xchg
xchg
sbb
inc
dec
mov
out
adc
inc
or
and
and
or
fdiv
lock
adc
xchg
aad
pop
ret
fisub
add
icebp
mov
add
cmp
js
mov
or
add
pop
add
mov
add
hlt
push
add
and
jb
push
pop
stos
scas
mov
xor
or
cli
mov
mov
jnp
inc
mov
adc
jg
or
adc
cmp
jge
data16
retf
jnp
or
iret
out
cmp
adc
sub
adc
push
add
or
ret
mov
mov
loopne
adc
mov
cmp
dec
xchg
mov
sbb
test
jmp
inc
add
ss
call
sub
shl
ret
adc
loopne
movs
pop
in
dec
aad
push
(bad)
cmp
(bad)
inc
test
push
xor
mov
pop
add
jle
or
jle
mov
xchg
and
inc
in
test
add
lds
xor
jmp
lea
push
or
push
or
call
adc
call
inc
rol
inc
inc
cmp
xchg
adc
(bad)
ds
mov
imul
call
lea
inc
fsubr
adc
sub
hlt
mov
sbb
cmps
and
scas
mov
pop
movs
call
push
pop
jbe
test
jo
pop
add
pushf
jecxz
sbb
or
arpl
shr
ret
mov
inc
sbb
sbb
sbb
sbb
sub
adc
jnp
jge
jle
ja
test
cmp
mov
or
add
sbb
dec
popf
add
and
mov
xor
mov
and
xcrypt-cfb
cmps
in
inc
test
movs
aas
add
aad
(bad)
mov
mov
cld
loope
inc
or
push
cld
lock
push
and
popf
push
push
cld
inc
mov
add
repnz
inc
loopne
in
les
push
loope
lds
jmp
pop
push
adc
cld
push
mov
add
shl
fsubr
and
cmps
inc
shl
xchg
pop
adc
(bad)
js
xlat
or
push
xor
jl
cmp
sahf
pop
cmps
ret
pop
arpl
or
or
and
push
hlt
mov
ret
push
std
fiadd
push
fisttp
aad
adc
push
sub
push
dec
pop
push
push
dec
sbb
ins
mov
jb
mov
ret
push
sbb
cmps
test
imul
adc
ja
fadd
clc
mov
call
add
add
loopne
cmp
adc
mov
shl
sbb
add
inc
inc
add
dec
out
sbb
inc
mov
sar
mov
mov
mov
pop
ror
ror
jo
add
mov
or
add
sbb
sbb
(bad)
out
xor
mov
or
add
add
add
push
push
adc
out
sub
xor
cwde
(bad)
adc
imul
push
mov
sbb
ret
mov
adc
cmp
pop
add
pop
cmp
or
out
push
scas
mov
imul
icebp
ss
mov
mov
push
mov
jg
lds
inc
push
push
xchg
inc
xchg
mov
or
pop
lods
lahf
sbb
or
push
out
inc
mov
aam
adc
push
mov
and
ss
inc
or
sbb
mov
cdq
stc
scas
lock
sbb
add
clc
xor
xor
test
add
lds
push
xor
cmp
cmp
jg
in
clc
sub
sti
loope
or
inc
adc
lock
retf
inc
aam
imul
stos
xor
add
mov
pop
or
adc
push
pusha
adc
jg
leave
add
mov
cs
and
fild
enter
pop
in
push
pop
ret
or
or
(bad)
push
inc
add
xchg
adc
loopne
dec
shr
dec
hlt
pushaw
or
xchg
js
sub
mov
mov
add
mov
mov
xchg
xor
add
jo
sub
pmovmskb
test
dec
mov
push
add
and
adc
xchg
or
mov
cmp
push
mov
jmp
popa
push
jbe
ja
mov
icebp
shl
jge
add
popa
pop
or
adc
jle
and
rol
xor
cli
add
imul
xor
add
call
sbb
push
fild
imul
push
add
imul
xor
ret
outs
fs
dec
xchg
dec
inc
es
mov
xor
or
add
shr
in
mov
inc
(bad)
push
movs
mov
(bad)
pop
sbb
or
test
test
ror
mov
movs
mov
adc
push
dec
mov
sbb
test
aaa
inc
lods
pop
push
lock
jecxz
fbld
inc
sbb
jne
outs
sub
mov
or
jmp
scas
or
inc
jmp
sbb
mov
xlat
into
or
cmp
jl
push
repz
(bad)
xlat
les
pop
sub
inc
mov
ja
xchg
stos
pop
clc
and
or
or
jmp
or
loope
sub
xor
ror
lock
adc
adc
cmp
fisub
mov
xor
add
add
cmps
cmc
ret
cmp
aaa
lock
jl
xchg
loopne
cs
cmp
mov
popa
dec
jl
pop
inc
adc
or
push
push
adc
shl
not
leave
push
mov
or
cmps
stc
ret
ret
sbb
and
das
or
out
shl
ret
sub
dec
jecxz
inc
shl
adc
adc
add
adc
push
add
loopne
jle
out
pop
ret
mov
int3
ret
nop
push
mov
adc
dec
xor
jp
adc
or
adc
iret
lock
push
adc
nop
aaa
movs
shl
jg
loopne
and
pop
xchg
mov
clc
pop
aaa
(bad)
test
fmul
adc
xlat
in
push
sub
mov
ss
xchg
add
pop
cmp
ins
adc
xor
dec
popa
sti
call
lea
rcl
push
in
adc
lahf
add
mov
push
adc
and
add
arpl
movs
cmps
cmps
mov
xor
addr16
test
je
les
jle
dec
and
(bad)
xor
mov
or
push
aas
push
in
mov
add
mov
in
xor
aaa
loopne
popa
mov
jo
push
pop
mov
add
inc
addr16
sbb
mov
call
repnz
push
push
dec
mov
bound
sub
xlat
xchg
dec
adc
xchg
xchg
adc
jg
or
dec
lahf
add
fs
ss
pusha
mov
loope
pop
inc
push
(bad)
push
mov
cld
enter
pop
dec
not
idiv
and
add
sbb
fidivr
outs
adc
movs
or
sbb
aaa
(bad)
dec
add
cli
(bad)
pop
mov
mov
add
(bad)
mov
mov
call
push
or
or
jb
sub
add
add
call
mul
and
loopne
push
sti
(bad)
sub
mov
cmp
outs
push
or
js
outs
push
or
push
cmps
(bad)
dec
and
popf
aaa
add
add
scas
(bad)
jno
and
sar
push
mov
or
leave
inc
xor
inc
adc
(bad)
stos
lods
inc
adc
enter
or
mov
lods
ins
neg
icebp
adc
add
rcr
push
clc
fwait
jge
mov
sbb
pop
int3
jp
test
jge
sbb
test
mov
or
lods
ret
xor
icebp
rcr
mov
xor
leave
xor
pop
inc
sub
dec
loope
les
mov
xor
inc
enter
das
sbb
cmp
je
mov
inc
adc
adc
and
daa
push
xchg
lock
rol
je
(bad)
es
mov
dec
add
mov
in
dec
mov
inc
fisttp
ret
out
jne
movsx
dec
mov
inc
jo
(bad)
adc
mov
mov
retf
je
push
dec
jne
es
xor
jo
cmp
retf
into
add
addr16
sbb
mov
mov
and
lock
pop
jl
fcom
(bad)
(bad)
sub
sub
aad
frstor
pop
mov
fidivr
sub
push
pop
push
push
mov
mov
mov
jmp
mov
dec
adc
clc
pop
loope
or
cmp
push
or
and
fs
dec
int3
(bad)
cmp
retf
add
rep
mov
and
rep
pop
or
pushf
push
lock
pop
das
push
loopne
inc
mov
or
dec
mov
mov
clc
adc
pop
lock
mov
addr16
outs
mov
push
push
ret
jmp
cmp
(bad)
shl
shl
or
xor
and
lods
mov
iret
inc
add
(bad)
xchg
retf
mov
aad
pop
shr
or
nop
push
xor
adc
adc
xor
fcomp
cmp
sti
daa
cli
jae
jmp
lods
push
add
sub
jae
sbb
adc
cmp
test
(bad)
mov
jae
add
and
shl
adc
iret
mov
cmps
lock
cmp
mov
ret
cli
rol
rol
movs
aas
stos
fsub
jge
jo
scas
adc
adc
or
jo
xor
in
pop
pusha
sbb
pop
(bad)
xor
cmp
cmp
shl
pop
test
je
mov
cmp
add
pushf
retf
pop
add
sbb
push
pop
mov
icebp
daa
ret
mov
retf
adc
pop
add
cmp
xor
ret
cmp
xor
sbb
or
pop
push
jmp
add
outs
and
shl
cmp
ror
add
jle
inc
or
mov
call
scas
mov
push
neg
imul
add
and
cmp
dec
pop
sbb
mov
aaa
ins
addr16
push
xchg
addr16
jae
xor
or
imul
aaa
pop
in
xchg
or
add
nop
sub
push
jb
jle
loopne
(bad)
jo
imul
rol
shl
push
mov
push
ss
lock
hlt
or
pop
and
sbb
adc
or
dec
ins
or
enter
dec
sub
adc
lahf
add
popa
es
pop
scas
jnp
or
mov
nop
and
mov
pop
data16
outs
pop
pop
hlt
pusha
mov
sub
mov
fsubr
hlt
icebp
sar
dec
comiss
cs
push
push
dec
or
inc
nop
or
jne
in
adc
sub
aas
xchg
iret
pop
inc
xor
sub
xor
pop
sub
xor
push
xchg
add
sbb
or
rol
(bad)
mov
daa
in
or
retf
jecxz
mov
test
mov
pusha
ins
cmp
sub
ja
lock
add
inc
sub
pop
loopne
sbb
sbb
inc
add
adc
push
jne
idiv
mov
je
and
sbb
fnstsw
push
cmp
inc
push
xchg
mov
xchg
mov
outs
ja
aam
hlt
inc
das
test
ret
jg
mov
adc
xor
shl
test
add
clc
push
sbb
daa
xor
in
clc
sbb
inc
pusha
sbb
push
jo
pushf
popa
xor
adc
xchg
sbb
fld
push
into
clc
inc
xor
fnstenv
adc
shl
cmp
xor
jne
lea
add
mov
mov
xor
sar
inc
fdivr
aas
out
dec
jmp
paddb
in
popf
add
xor
add
iret
rcl
xor
out
dec
fisub
and
(bad)
movzx
pop
or
movs
fstp
ins
pop
pop
pop
(bad)
popf
mov
sti
out
or
enter
out
shl
fs
bound
and
adc
inc
(bad)
sti
fwait
push
popa
movs
shl
shl
(bad)
pusha
mov
cld
mov
in
and
jne
jge
popa
sub
pusha
inc
sbb
jnp
mov
adc
pop
inc
call
sti
rcl
push
and
pop
test
test
add
add
loopne
push
mov
jle
xchg
dec
adc
ret
jo
sti
and
adc
or
mov
fild
mov
ja
xor
xor
lock
dec
and
or
add
cmp
pusha
bound
outs
inc
cmp
les
xchg
sti
lods
aad
or
push
ja
pusha
shl
into
sbb
sti
add
mov
add
jo
sahf
neg
hlt
sub
pop
push
data16
fwait
or
repz
dec
repz
sub
and
and
push
shr
dec
xor
or
and
sbb
daa
loopne
enter
das
loopne
sbb
sbb
clc
adc
mov
add
push
aad
call
sub
push
mov
sbb
cmp
or
addr16
add
das
or
pop
and
pop
call
mov
rcr
push
mov
int
push
adc
stos
call
nop
xlat
mov
pop
int3
cwde
cmp
sbb
icebp
push
pop
aam
cdq
mov
push
scas
mov
ja
mov
(bad)
add
adc
adc
mov
mov
and
cmp
jne
ret
and
test
push
dec
add
mov
in
rol
iret
or
fcmovbe
and
add
out
adc
sbb
push
cmps
mov
jo
or
pusha
test
xor
test
mul
cmp
adc
jbe
add
out
add
mov
inc
sub
xlat
sbb
xor
mov
cwde
inc
aas
mov
xlat
in
mov
adc
jp
std
(bad)
dec
fisub
sbb
fabs
xchg
sbb
push
rol
xlat
shl
jmp
rcl
or
mov
ja
lods
outs
test
dec
repz
aaa
jl
(bad)
cs
scas
xchg
ret
sub
jg
outs
(bad)
shr
dec
jl
in
sti
mov
adc
inc
pop
dec
or
popa
jge
(bad)
push
fist
mov
das
in
lahf
jge
mov
test
mov
mov
popa
xchg
lods
retf
jecxz
mov
mov
test
dec
mov
or
in
sar
sbb
mov
out
mov
mov
jno
jle
ins
jge
aad
add
iret
femms
add
fild
cld
jmp
jnp
sbb
cli
pop
adc
mov
(bad)
pop
clc
xchg
mov
adc
leave
jmp
js
out
dec
adc
mov
xchg
cmp
xor
repz
call
sbb
push
fidivr
and
add
movs
jae
cmp
test
jno
(bad)
(bad)
call
adc
fld
dec
clc
fild
cmp
call
sbb
daa
loope
ret
int
lahf
or
pop
add
sar
xchg
push
loopne
and
xor
cmps
mov
popa
jns
test
xchg
add
add
dec
lock
or
inc
add
imul
inc
das
or
and
or
dec
sub
mov
pushf
or
test
lock
cmp
aad
dec
out
pop
cwde
jmp
mov
sub
xchg
clc
jge
mov
adc
add
dec
mov
out
fstp
add
mov
mov
inc
ins
scas
or
ror
imul
(bad)
jge
jmp
dec
add
sbb
cmps
inc
clc
dec
imul
mov
mov
sbb
pop
adc
fild
nop
fdivr
sti
sahf
pop
fcmovu
push
and
push
push
xchg
mov
adc
sbb
mov
cmps
cmp
aad
add
addr16
and
shl
pop
repz
push
dec
sbb
dec
mov
jne
test
lods
retf
iret
and
call
enter
xor
adc
mov
mov
fmul
out
fist
adc
sub
mov
ret
pop
sbb
cmp
pop
dec
sub
sub
loopne
adc
pusha
mov
jb
mov
fcom
dec
fadd
or
fcom
aam
xor
aam
lea
fcom
bound
adc
mov
or
scas
sbb
cmp
les
adc
push
(bad)
test
sub
mov
inc
push
es
cmp
int3
mov
sbb
add
imul
pop
out
shl
sbb
push
sbb
shl
in
cmps
aaa
lea
out
js
pusha
imul
iret
loopne
jmp
or
mov
aas
pop
inc
mov
push
mov
pop
mov
fs
rcl
ret
push
xchg
rcr
pop
loopne
and
pop
mov
not
shl
jmp
inc
cld
jge
mov
push
sbb
das
aam
mov
mov
and
shr
adc
pop
(bad)
shl
aam
rcr
cmp
add
das
fs
add
rcr
adc
ror
mov
jns
loop
adc
pop
add
xor
je
cld
xor
push
push
xor
push
add
lods
or
push
cmp
out
push
loopne
and
pop
jnp
push
rcr
mov
dec
lods
fild
es
sub
call
sbb
add
cmp
mov
mov
ret
push
xchg
xor
jno
in
dec
nop
cmp
cmc
add
xor
sbb
int
jmp
inc
in
outs
or
call
xor
adc
(bad)
and
inc
xor
adc
enter
push
xor
mov
adc
inc
test
xor
jle
and
lock
mov
leave
mov
push
dec
ins
and
pusha
sub
or
mov
xor
and
into
mov
pop
dec
dec
inc
aaa
jno
and
jne
push
sbb
arpl
jo
sub
add
cld
mov
std
mov
pop
xor
sbb
and
or
push
sub
aad
shl
mov
jo
jmp
xlat
push
push
and
call
jecxz
push
or
loop
scas
or
mov
pop
rcr
push
loopne
call
jmp
aad
loopne
lock
fadd
(bad)
inc
inc
sub
xchg
nop
shl
and
jl
sbb
dec
je
mov
ret
pop
nop
push
pop
movs
jbe
das
sti
cmp
push
call
pop
xchg
mov
fdivr
repz
add
push
and
shr
adc
pop
in
inc
loopne
inc
into
adc
add
adc
or
add
in
cmp
pop
push
je
push
adc
and
sub
sbb
js
or
lock
cmp
mov
xchg
push
fs
nop
inc
ret
xchg
adc
lahf
mov
inc
jle
push
push
jne
aam
and
jo
push
(bad)
outs
int
rcl
and
cs
daa
push
test
push
movs
fcmovb
cmps
sbb
leave
imul
in
cdq
add
and
jo
pusha
dec
dec
or
nop
popa
dec
leave
mov
and
mov
test
sbb
jge
das
mov
add
mov
retf
ffree
or
loope
rcr
out
jne
dec
jp
mov
scas
or
sahf
add
jmp
mov
jp
call
in
jg
adc
or
sub
in
sbb
imul
mov
popa
jmp
mov
aad
cmp
fst
movs
add
movhps
xor
imul
or
(bad)
jmp
scas
pop
pop
adc
pop
call
cmp
push
call
shl
loopne
icebp
push
sti
daa
out
sahf
ja
push
adc
xor
lock
dec
pop
push
fnstenv
xor
ins
mov
xchg
sbb
ins
(bad)
and
add
and
add
mov
mov
jnp
pusha
pop
(bad)
jmp
xor
adc
pop
gs
jmp
mov
dec
shl
cmp
or
mov
ror
adc
jg
push
cmp
outs
aad
call
xlat
xchg
fsubr
and
push
xor
cmp
and
hlt
mov
push
popa
je
or
sub
pop
aam
or
lock
aam
nop
push
out
fndisi(8087
push
ror
(bad)
inc
xor
or
lods
jmp
xlat
push
inc
dec
dec
pop
jmp
push
sub
jae
call
cdq
mov
mov
dec
mov
pop
push
lea
sti
and
inc
pop
call
cmp
cmp
pop
push
aam
jmp
fwait
test
mov
inc
push
mov
sbb
lock
es
push
pop
mov
aam
lock
dec
jmp
mov
mov
pop
daa
push
sub
inc
retf
imul
stos
pop
jnp
inc
sbb
inc
sbb
sbb
pop
or
retf
or
sar
mov
adc
pop
test
js
mov
js
pop
push
xor
add
and
loopne
jo
cmp
add
pop
pop
sub
fisttp
and
sar
cmp
push
inc
outs
in
sbb
add
jmp
jbe
mov
adc
cmp
pop
xor
dec
mov
cmp
cmp
fwait
dec
fist
sub
dec
call
ret
hlt
pusha
push
xor
gs
xchg
fistp
enter
and
shl
movs
or
dec
cmc
dec
or
nop
sbb
call
mov
gs
and
mov
pop
fadd
loopne
lock
add
inc
cmp
in
shl
dec
dec
psubsb
shl
inc
das
sbb
xlat
mov
sub
aas
sbb
xor
scas
fmul
mov
inc
sbb
pusha
xchg
mov
dec
adc
imul
push
call
out
in
jnp
jae
push
fld
hlt
or
jo
das
fidiv
pop
jo
and
mov
jns
xchg
sysenter
out
dec
push
int3
pop
mov
inc
add
push
dec
lods
cmp
mov
loopne
xor
mov
cld
push
test
das
ret
cmp
(bad)
pushf
daa
mov
scas
in
jo
fmul
retf
enter
mov
aas
scas
pop
mov
inc
and
mov
sub
lea
ds
sub
fdivr
lea
test
jge
and
mov
lea
repz
and
enter
or
pop
or
sbb
or
sub
pop
xchg
and
push
loop
mov
mov
test
je
js
adc
add
mov
pop
fs
(bad)
dec
sbb
in
mov
cmps
mov
pop
mov
out
inc
adc
add
scas
(bad)
clc
movs
movs
sbb
fwait
out
test
mov
jne
add
jne
clc
add
inc
sbb
adc
push
mov
rol
das
lods
out
clc
sub
aas
lds
(bad)
jg
push
add
cmp
mov
xor
(bad)
mov
sub
dec
mov
dec
adc
test
idiv
dec
or
dec
clc
xchg
xchg
pop
sbb
sub
push
push
adc
out
inc
adc
cmp
mov
(bad)
fcom
arpl
repnz
ret
por
pop
sbb
imul
leave
adc
loope
pop
add
xchg
push
daa
and
xor
bound
and
das
in
adc
pop
fs
mov
sbb
or
pushf
sbb
movsx
sub
add
or
xor
cmp
pop
adc
repz
xchg
or
je
xchg
jo
test
xchg
repz
push
sub
scas
add
scas
jle
mov
data16
adc
and
add
jl
in
pop
cmova
jbe
sbb
xor
test
jecxz
aaa
out
dec
add
mov
xor
jmp
xor
js
dec
sahf
xchg
dec
shl
xor
call
pop
or
clc
push
mov
xchg
sbb
mov
fist
inc
(bad)
and
hlt
stos
mov
pop
add
int3
lock
mov
movs
mov
scas
cmc
movs
or
sbb
loop
mov
or
movs
cmp
popa
loope
test
(bad)
cdq
je
push
addr16
sub
repnz
pop
mov
inc
imul
or
das
pop
sar
or
xor
mov
cmp
jg
scas
leave
fcomp
adc
sub
xchg
and
in
pop
cmp
add
cwde
out
ja
ja
mov
dec
mov
mov
add
js
imul
or
mov
add
adc
aam
jb
push
add
stos
push
jo
rcl
pusha
cdq
hlt
scas
cmp
dec
or
sub
cmp
jge
and
into
dec
gs
pavgb
xlat
mov
(bad)
ds
(bad)
sti
and
je
and
je
pop
push
or
sub
cmp
adc
or
out
mov
xor
pop
sbb
lsl
inc
or
inc
sbb
add
mov
ret
jne
dec
mov
mov
repnz
(bad)
cmp
inc
jecxz
inc
das
loopne
and
dec
pushf
jmp
or
push
adc
call
mov
mov
pop
imul
shl
push
or
aas
push
or
and
xor
cli
jle
inc
or
push
sbb
mov
das
jns
or
adc
cmp
mov
and
lock
add
stos
test
movs
icebp
jo
ins
(bad)
and
ins
and
leave
mov
dec
add
sub
or
inc
sbb
sub
std
and
lock
push
xchg
les
add
jg
inc
test
jge
sbb
repz
cld
pop
push
inc
icebp
arpl
mov
inc
add
add
in
aas
not
mul
scas
and
in
pushf
mov
add
and
retf
in
sub
cmp
je
xchg
js
cmp
cmps
push
mov
cmp
jne
mov
loope
sti
pop
xchg
inc
rol
pusha
push
push
pop
test
inc
pop
paddb
pushf
dec
ror
ret
movs
jge
fs
sub
sub
sbb
or
loope
and
inc
(bad)
and
or
sbb
or
sub
xor
rcl
sti
in
mov
dec
jmp
inc
and
sbb
or
mov
imul
mov
cld
test
mov
or
fs
in
call
inc
call
lock
jo
xor
test
leave
(bad)
mov
loopne
cmp
xor
loopne
outs
ins
(bad)
pusha
mov
pop
adc
mov
add
sti
jno
test
loopne
or
pop
inc
(bad)
inc
sub
pop
ja
cs
jl
or
cmp
jg
mov
xlat
aam
mov
inc
xor
cmp
adc
jg
sbb
add
jmp
mov
xor
pop
and
loope
adc
push
add
jnp
jns
cmp
sbb
xchg
jge
add
ror
es
mov
pop
push
mov
and
add
les
or
mov
aam
ret
ins
cmps
mov
div
add
sub
push
les
scas
icebp
clc
frstor
add
add
inc
or
add
jle
stos
and
and
or
add
mov
mov
and
cs
pusha
sbb
pushf
pop
lods
cmp
ret
adc
inc
inc
dec
xchg
push
mov
cmc
and
add
or
popf
add
push
call
movs
adc
enter
sub
xchg
mov
lahf
push
sub
dec
cwde
cld
mov
loope
js
jns
ss
adc
in
mov
ret
test
dec
add
movs
sbb
pop
aad
(bad)
pop
fneni(8087
test
adc
dec
in
cmps
push
ins
mov
sbb
mov
das
mov
mov
inc
inc
add
xchg
rol
fsub
push
imul
or
dec
mov
clc
iret
inc
imul
mov
ret
xor
sbb
xchg
in
or
sub
pop
dec
js
inc
(bad)
mov
cmp
je
push
cmp
jne
inc
clc
imul
dec
sbb
dec
fdiv
dec
dec
push
or
xor
pop
and
sub
mov
push
imul
jo
jg
inc
aas
ins
xchg
fild
xor
adc
movntq
out
fsubr
sar
pop
fnstcw
or
xchg
ror
pop
mov
inc
mov
test
or
mov
add
fwait
sub
inc
lds
and
imul
leave
or
mov
xor
lahf
and
sbb
or
std
jno
aaa
imul
xchg
ret
jecxz
dec
lock
push
jmp
inc
imul
cmp
sbb
pop
push
xor
cmp
pop
mov
sub
pop
retf
stos
enter
add
mov
xor
inc
and
fwait
dec
cwde
mov
(bad)
pop
xadd
aas
jge
push
add
jne
or
lea
js
das
xor
jp
xor
adc
pop
dec
lock
sbb
jns
inc
cli
fild
or
test
cmp
mov
push
shl
cmp
sub
and
iret
lea
add
dec
(bad)
es
call
adc
mov
jae
sbb
jmp
fsub
jo
dec
add
dec
add
pop
mov
push
pop
sub
cmp
cmp
je
xchg
hlt
ss
add
inc
add
clc
or
push
js
es
xchg
add
cmp
(bad)
mov
ins
nop
dec
movs
out
inc
xchg
js
xchg
lock
or
ins
adc
cmp
(bad)
mov
adc
add
pop
adc
sbb
dec
and
bound
in
dec
add
add
dec
and
add
xlat
test
ror
adc
sub
inc
scas
xor
call
mov
bound
shr
inc
cli
dec
and
and
dec
xchg
sub
fwait
mov
mov
popf
ins
ret
cmp
addr16
add
scas
xchg
mov
pop
sbb
int
sub
imul
shl
ja
loope
or
add
add
cmps
sbb
iret
repz
push
cmps
mov
(bad)
(bad)
into
repz
fucomp
fucomi
push
sub
stos
cmp
jmp
adc
pop
jmp
fcom
pop
in
pop
cld
adc
lock
lods
repnz
(bad)
das
jb
sbb
shr
mov
mov
push
xchg
dec
push
shr
pusha
je
outs
sub
lods
and
mov
rcl
ret
aaa
cmp
js
dec
or
jae
adc
dec
out
enter
call
aam
adc
add
and
push
sub
dec
pop
inc
arpl
dec
hlt
sbb
sub
sbb
scas
jecxz
jmp
fild
pop
pop
pop
ja
mov
sti
push
xor
pop
and
xchg
inc
loop
adc
dec
dec
cdq
push
int
sbb
leave
jbe
sub
mov
aam
dec
add
(bad)
sub
pop
inc
dec
popa
nop
adc
dec
clc
sar
or
push
cld
mov
(bad)
push
sub
imul
ss
add
inc
jbe
push
push
(bad)
cmp
scas
pop
pop
mov
rcl
mov
sbb
shr
loop
jmp
(bad)
mov
dec
jo
jmp
imul
xchg
fwait
add
(bad)
pop
sbb
jns
out
in
inc
mov
scas
or
mov
scas
xlat
cs
add
repnz
push
call
xchg
and
rcl
jns
ret
add
in
lods
aas
and
or
fisttp
sbb
fwait
dec
mov
lahf
in
js
mov
movs
nop
adc
(bad)
push
or
inc
pushf
mov
add
rcr
loop
xor
jne
adc
dec
dec
sub
popf
cmp
cmp
adc
xorps
cli
shl
ret
xchg
das
dec
cmc
mov
or
lock
je
cmp
(bad)
push
sbb
add
mov
mov
push
push
or
add
add
mov
and
or
pushf
loopne
mov
sub
cmp
scas
inc
xchg
shl
or
pop
jo
and
push
pop
xchg
dec
cmps
sub
fsubr
push
add
les
stc
xchg
xor
or
clc
or
pop
std
push
cmp
mov
ja
inc
lock
push
dec
std
inc
and
aaa
or
clc
retf
stc
clc
sbb
dec
add
int
adc
jmp
rol
mov
adc
fs
add
ds
clc
pop
rol
sbb
jb
test
add
sbb
xor
pop
aad
or
cmp
mov
push
cs
(bad)
push
sbb
aas
dec
out
xor
fimul
or
rcr
dec
sbb
mov
shl
xchg
cmc
push
sbb
cmp
test
out
and
cmovg
inc
mov
xchg
or
sbb
inc
jne
and
and
push
xor
inc
gs
clc
pop
pop
or
sub
hlt
xor
and
mov
push
inc
mov
sub
hlt
push
icebp
scas
push
add
mov
jp
dec
btc
lea
clc
and
and
pop
adc
add
push
add
cmp
push
or
xor
sbb
pop
jo
sbb
inc
ret
ror
inc
jg
lock
les
pop
mov
retf
cld
ror
xor
dec
jl
lock
cmp
xchg
lahf
sbb
pop
jb
in
leave
int
dec
add
iret
les
xchg
cwde
mov
(bad)
gs
xor
shl
bound
hlt
sbb
icebp
(bad)
adc
sub
jns
out
xor
inc
dec
push
jbe
in
pop
addr16
sub
adc
in
movs
pop
imul
xlat
pop
call
adc
lock
shr
std
dec
pop
sbb
mov
lea
xor
or
shr
adc
loopne
push
pop
loop
push
mov
and
into
shr
jg
test
or
add
mov
pop
test
push
dec
mov
iret
jae
mov
adc
lea
je
adc
cmp
ins
xchg
ret
pusha
fisub
or
mov
cmp
sti
or
add
xor
sbb
sbb
adc
rcl
mov
sti
ret
inc
ins
sub
adc
mov
add
xor
ins
and
xor
nop
xchg
xor
call
jmp
retf
push
sub
dec
imul
and
xor
push
pop
or
fcom
daa
add
cwde
xchg
scas
(bad)
jno
ds
inc
in
ror
mov
xor
(bad)
dec
enter
js
mov
retf
adc
push
bound
and
inc
sub
and
mov
mov
pop
test
in
push
in
loope
jp
hlt
pop
push
aaa
lock
and
in
mov
sbb
call
scas
mov
and
xchg
mov
cmp
clc
mov
rol
inc
loop
out
or
jmp
xchg
arpl
sbb
inc
test
cmp
cmps
int3
mov
rcr
mov
into
stc
jne
jne
xchg
jmp
pop
sbb
call
adc
les
popf
mov
es
inc
mov
or
mov
mov
(bad)
adc
lods
add
ret
add
push
jle
inc
rol
mov
dec
dec
jb
hlt
or
and
pop
pop
cmps
sbb
arpl
mov
adc
sbb
adc
mov
jl
les
mov
jmp
dec
jne
pop
or
sub
mov
xchg
jo
es
add
inc
xor
push
pop
add
adc
or
pop
test
aaa
mov
xor
adc
pop
movs
inc
ja
add
clc
jmp
or
(bad)
(bad)
or
adc
or
or
push
sub
jmp
mov
das
mov
ffree
pop
mov
leave
mov
nop
or
add
iret
pop
and
or
gs
arpl
and
push
les
mov
jmp
cld
cdq
inc
and
mov
sbb
pop
fstp
push
in
loope
pop
push
test
pop
pop
and
icebp
push
xor
dec
dec
sbb
or
xor
lahf
push
push
sub
jg
mov
sub
add
std
push
mov
add
sub
jae
sbb
pop
daa
mov
cld
inc
xor
push
ss
or
add
mov
inc
add
bound
shl
adc
and
inc
sub
push
push
adc
inc
mov
sbb
push
or
pusha
dec
rol
push
movs
popa
mov
xchg
mov
xchg
shr
(bad)
push
hlt
pop
movs
fwait
jge
inc
adc
movhps
or
sub
stos
xchg
mov
or
clc
(bad)
push
cmp
adc
mov
lahf
pop
cmp
bound
sbb
fldcw
cmp
je
jge
popf
cmps
rcl
and
pop
and
xor
cli
jle
fwait
add
ror
jmp
loope
in
pop
mov
add
div
and
jbe
or
pop
sbb
sbb
rol
out
sub
stc
clc
jae
inc
mov
dec
or
mov
mov
push
push
jb
or
jb
sub
sbb
mov
mov
add
mov
mov
call
xor
or
je
sub
and
or
shl
or
(bad)
ja
inc
or
and
bound
fsubr
jbe
(bad)
ins
mov
(bad)
push
cdq
std
leave
shl
or
popa
add
jb
xchg
pop
adc
and
xor
(bad)
daa
xchg
and
jbe
aas
cmp
loope
xchg
loopne
sub
add
pusha
in
xor
pushf
jp
add
shr
psubsw
les
push
cmp
jge
les
ss
je
add
and
or
push
je
jmp
dec
hlt
mov
sbb
stc
sbb
or
sar
jae
mov
push
test
add
push
add
stos
in
inc
inc
jne
iret
popa
ins
loopne
cmp
dec
jmp
pop
add
ja
fstp
pop
and
popa
xor
es
sbb
neg
add
push
inc
sub
push
inc
add
add
push
or
xor
inc
add
leave
sub
test
sbb
fnsave
dec
je
or
popf
(bad)
outs
dec
add
je
jmp
and
ret
jmp
mov
nop
arpl
clc
cmp
adc
xor
and
jle
outs
lds
lock
add
mov
rol
dec
cmp
sbb
cmps
xor
adc
(bad)
xchg
adc
icebp
add
or
and
icebp
pop
movaps
lock
pop
and
jmp
call
movs
xor
popf
jmp
lahf
neg
or
or
in
dec
xor
cmp
jnp
lahf
or
xor
in
or
mov
jnp
test
adc
sub
cmp
or
sbb
neg
and
je
out
leave
add
xchg
(bad)
mov
cmps
retf
ret
scas
adc
fld
std
add
clc
xchg
sub
sbb
ret
cld
mov
shl
xchg
lock
in
pop
push
into
scas
add
add
xchg
pop
xor
xchg
test
mov
cmp
jae
jne
data16
ins
inc
sbb
and
fs
cmp
lock
mov
and
add
mov
loopne
xlat
call
das
mov
and
iret
retf
pop
sbb
aad
and
mov
fdivrp
sub
mov
paddq
add
push
scas
and
mov
push
sub
jb
mov
and
mov
pop
cld
rol
add
adc
cmp
ret
fsub
inc
mov
cmp
xchg
test
mov
push
xchg
shr
clc
inc
or
pop
fbld
shr
fnsave
jle
sti
add
push
inc
or
jle
aaa
mov
fisttp
fnstenv
repnz
test
push
sub
inc
ja
add
(bad)
push
jmp
daa
jne
jmp
add
inc
mov
xor
or
cld
fldenv
or
adc
scas
adc
jp
adc
xchg
clc
and
mov
add
sub
sub
xchg
cmps
call
call
movs
jge
stc
in
mov
or
repnz
xor
sub
mov
add
or
adc
inc
add
xchg
mov
out
out
add
inc
mov
inc
or
xchg
sub
je
fistp
mov
jmp
loope
and
xchg
loope
imul
aaa
ja
push
mov
icebp
call
shl
add
bt
jae
xchg
mov
jae
in
adc
sub
and
add
mov
adc
mov
adc
xrstors
pop
pop
cwde
push
or
mul
fcomp
aad
lods
or
sbb
dec
sub
test
jo
sub
inc
(bad)
ss
adc
push
add
sub
pop
sub
adc
sub
cmp
add
jp
lods
mov
adc
(bad)
dec
dec
xchg
mov
adc
mov
jne
adc
jbe
or
inc
mov
sbb
push
or
adc
imul
adc
xor
lock
ret
or
add
sub
jb
jmp
sbb
or
adc
dec
jbe
sar
inc
sub
jmp
pop
cmp
sbb
mov
and
dec
mov
dec
sbb
add
scas
call
or
(bad)
or
mov
inc
pop
push
and
xor
aas
fld
test
pop
js
xor
daa
lock
fdiv
or
in
stos
inc
mov
mov
jl
cs
js
scas
adc
jae
mov
sub
xor
and
out
pusha
pusha
jns
repnz
mov
jecxz
xchg
or
shr
js
sbb
jmp
add
lea
clc
xchg
pop
and
test
push
cmps
xchg
lea
pop
rol
add
sbb
dec
or
aaa
inc
mov
fild
arpl
hlt
aaa
xor
bnd
xor
cs
add
adc
inc
xor
add
push
add
clc
cs
jne
add
add
push
nop
stos
jge
xor
sbb
fmul
or
pop
imul
mov
push
out
mov
and
or
das
xchg
call
out
jne
or
ret
mov
xchg
gs
xor
inc
clc
mov
adc
bound
add
add
mov
jl
add
sahf
shl
in
mov
mov
enter
dec
jb
call
je
sub
or
jge
add
add
hlt
call
scas
lock
scas
in
xchg
call
dec
(bad)
push
lock
in
mov
add
sub
inc
aaa
fcomp
ficomp
pop
(bad)
mov
xor
jmp
and
or
dec
and
movs
or
dec
adc
or
mov
sbb
and
js
arpl
fwait
push
hlt
(bad)
hlt
pop
js
mov
cmp
adc
ret
sub
or
lock
imul
js
pop
push
push
leave
std
xor
and
sub
aas
pop
mov
dec
add
jmp
xor
adc
mov
js
cmp
mov
into
movaps
shr
add
mov
lods
jne
dec
push
arpl
test
cmp
jno
sub
inc
pop
ja
icebp
scas
sbb
inc
and
or
add
test
aam
ret
jecxz
push
(bad)
jge
rcr
xor
jg
je
fnstsw
mov
pcmpeqb
jl
fs
ret
not
jne
lea
lods
mov
les
inc
fdiv
mov
adc
call
mov
or
jo
pop
cmp
fild
dec
add
mov
pop
pop
pop
test
xor
jge
and
xor
add
fstp
xchg
xchg
or
cmp
or
dec
mov
adc
icebp
call
rcr
in
mov
jmp
cdq
pop
and
test
or
pop
je
popa
sub
inc
mov
mov
std
sub
add
cmp
hlt
pop
adc
pop
sbb
sbb
and
inc
add
fnstenv
cmp
nop
fcomp
add
pop
xor
je
cmp
inc
pop
in
lea
mov
xchg
cmp
dec
mov
je
cmp
js
adc
mov
mov
cmp
(bad)
ds
mov
mov
les
or
mov
add
in
add
jg
adc
and
xchg
push
(bad)
pop
mov
gs
imul
add
dec
mov
outs
xlat
xor
push
ja
inc
cmp
add
add
push
dec
popa
ins
dec
xor
inc
daa
pop
cs
inc
push
xor
push
loope
ss
and
clc
cmp
adc
hlt
dec
xchg
(bad)
add
inc
dec
hlt
iret
sbb
cmp
cmp
hlt
cmp
sub
add
dec
adc
cdq
aas
inc
xchg
gs
lods
push
push
mov
out
cmps
addr16
add
and
mov
xchg
cmps
sub
or
mov
xchg
or
ss
adc
sbb
fmul
popf
fcom
adc
and
mov
or
push
jnp
out
xor
lds
or
dec
dec
add
jo
adc
popaw
sbb
aas
dec
or
add
aaa
dec
ins
dec
mov
inc
add
dec
xchg
ret
adc
(bad)
xor
repz
add
ds
test
mov
inc
test
cmp
data16
pop
rol
xor
pop
cmp
loopne
jmp
xchg
inc
jmp
fwait
adc
ror
into
in
dec
lea
add
push
cmp
inc
enter
inc
cmp
call
add
cld
cmc
mov
lock
mov
std
stos
(bad)
push
xor
add
jo
movd
out
add
retf
xchg
pop
jl
hlt
andps
push
pop
movs
pop
es
xor
movs
adc
or
add
das
pop
jne
enter
adc
cmp
adc
jecxz
mov
or
inc
mov
and
adc
test
lods
mov
push
push
mov
ja
sar
stos
cmp
pop
pop
add
xchg
ret
xchg
mov
pop
inc
mov
test
idiv
add
adc
sub
xlat
(bad)
je
dec
sbb
fdiv
dec
pop
rol
(bad)
dec
mov
add
pop
mov
xchg
ret
shr
call
(bad)
enter
in
jle
pop
xlat
pop
test
add
mov
mov
add
fsub
or
xlat
push
daa
js
add
or
cmp
dec
test
and
cwde
nop
ins
push
dec
adc
mov
jmp
in
sub
sbb
inc
or
xchg
jp
call
and
lock
jne
xchg
pop
push
sbb
aaa
and
sub
ja
rcl
xchg
cmps
xchg
leave
adc
and
stos
dec
sbb
(bad)
and
ror
stos
(bad)
xor
stos
sbb
loopne
or
call
jmp
sbb
mov
in
inc
adc
adc
dec
nop
mov
push
jl
mov
mov
jmp
mov
aam
(bad)
and
sub
mov
jmp
add
push
jo
test
mov
jbe
sbb
jecxz
es
xor
mov
dec
xor
add
pop
and
ds
inc
out
pop
aaa
fs
cmp
out
push
xchg
sbb
or
push
and
inc
cmp
and
dec
je
xor
xor
mov
lock
retf
or
jmp
jl
sbb
or
ins
or
sub
les
pop
and
pop
adc
fnstenv
push
popf
and
and
cmp
pushf
inc
push
xlat
inc
imul
cmp
and
sbb
jne
push
push
lea
push
mov
std
or
pop
repnz
or
test
inc
lods
ret
mov
dec
sub
popa
jmp
imul
add
bound
inc
or
sbb
xlat
in
into
es
push
mov
xor
in
jne
or
push
sub
sbb
sar
gs
xor
and
or
ret
jnp
imul
movs
or
mov
sbb
mov
adc
jmp
adc
fidivr
pop
pop
js
or
pop
sbb
(bad)
daa
cld
pop
sti
dec
adc
sar
mov
mov
js
mov
xchg
push
or
jbe
mov
fwait
xor
inc
add
add
adc
jge
add
jecxz
xchg
int3
add
jmp
or
push
sahf
pop
mov
test
cmp
sub
push
cld
das
dec
and
sar
je
dec
mov
popa
lock
push
push
or
adc
or
push
cmc
ror
sbb
pop
push
cli
popa
clc
pop
push
sahf
cmp
push
or
inc
jno
pop
or
aas
or
mov
test
push
or
xlat
shl
add
je
cmp
je
push
aaa
ret
dec
cld
xchg
xor
dec
push
and
clc
mov
movs
cmp
out
fdivr
cld
mov
ret
aad
or
sti
daa
xor
fidivr
fwait
ins
cld
xor
mov
inc
mov
icebp
in
nop
ret
add
mov
sbb
sbb
inc
mov
xchg
and
sub
mov
jl
mov
push
xchg
mov
enter
dec
loop
scas
pop
adc
xchg
cmp
cmp
push
cmp
jg
or
inc
jmp
push
mov
pop
sti
adc
pop
pop
in
inc
or
push
repnz
xchg
sbb
fwait
xchg
cmp
or
(bad)
cmp
dec
ins
mov
mov
adc
jnp
mov
add
jmp
loopne
into
cmp
adc
fsubr
gs
add
clc
or
cmp
shr
pop
pop
jne
push
sbb
jae
push
mov
sbb
cmp
mov
mov
xor
add
inc
adc
call
add
push
ds
and
xor
inc
sub
sub
ja
sbb
jl
sbb
adc
mov
(bad)
cwde
cmp
(bad)
fadd
ret
je
xor
inc
jl
mov
push
test
dec
mov
sub
jne
cmp
cmc
fbstp
test
xor
icebp
mov
lahf
cmp
push
inc
adc
push
push
je
sbb
pop
mov
rol
test
jg
ja
xchg
jg
fwait
es
dec
cmp
(bad)
sub
shl
add
mov
dec
mov
lock
xor
daa
push
call
pop
(bad)
scas
xchg
mov
setge
dec
jne
push
dec
sub
add
js
shl
adc
loopne
sbb
mov
cmp
imul
sbb
push
xor
xchg
and
adc
jg
sub
sbb
(bad)
push
push
out
mov
and
sub
in
out
inc
pop
or
inc
sub
out
cmp
add
hlt
mov
or
mov
cmp
push
adc
mov
pop
pop
js
xor
xchg
add
or
sahf
fnstcw
pop
pop
test
xchg
test
dec
dec
nop
adc
mov
data16
push
popf
inc
(bad)
cmp
cmp
add
push
jnp
lea
mov
mov
popf
aam
sbb
adc
fdiv
ret
mov
ds
inc
sub
test
jp
xlat
lds
and
xchg
popa
idiv
cmp
add
cwde
jg
sar
test
or
dec
sbb
cs
xchg
xchg
pop
add
mov
xor
push
or
inc
sub
in
adc
or
push
push
mov
push
sbb
adc
adc
xor
jl
add
ss
mov
and
jne
jae
rcr
fimul
sbb
push
xor
fsub
dec
test
or
loope
adc
adc
jle
push
dec
pushf
arpl
sbb
cmp
cmp
rol
popf
shl
sub
cdq
les
push
mov
push
push
jbe
call
pusha
pop
ret
cli
jle
ins
lds
or
mov
adc
pop
or
test
je
pop
adc
jnp
inc
js
call
or
je
pop
test
add
icebp
retf
cmc
nop
test
and
scas
inc
or
xor
jl
xor
mov
add
add
cdq
les
xchg
dec
or
sub
add
sub
lds
fmul
ds
movs
inc
inc
cli
test
push
push
stos
mov
clc
sub
loop
clc
and
adc
clc
cmp
jne
ret
jle
fstp
add
sbb
mov
dec
js
and
add
sbb
in
inc
inc
sub
dec
or
sub
mov
xchg
inc
or
mov
jg
sahf
je
mov
daa
pop
sbb
inc
(bad)
jne
adc
xchg
mov
adc
xor
adc
jnp
sub
cmp
and
mov
pop
mov
and
mov
xor
mov
jge
mov
ror
add
cmc
jbe
pop
or
cmp
pop
push
push
xor
or
xlat
pop
not
jo
mov
je
call
push
pop
shl
jno
loopne
dec
icebp
ja
xchg
sar
add
inc
inc
movs
xor
je
int3
mov
addr16
dec
loop
fdivr
(bad)
add
add
sbb
mov
(bad)
xor
ret
nop
outs
xchg
and
arpl
add
push
das
scas
inc
xchg
fdiv
inc
daa
push
arpl
inc
retf
xchg
sar
xchg
push
inc
rcl
and
mov
ret
mov
inc
pop
inc
dec
mov
call
sbb
xor
add
and
mov
adc
push
sub
xor
xor
jge
xor
call
cdq
push
inc
cld
adc
pop
xor
xchg
xchg
inc
add
test
and
cmp
xor
cmp
xlat
fcmovb
or
hlt
call
push
pop
fs
and
and
or
or
sbb
inc
inc
mov
fcomip
cmp
pop
push
hlt
mov
mov
push
ins
loop
fadd
aaa
or
pop
pusha
push
push
fucomi
xor
das
cwde
inc
pop
push
lahf
outs
adc
fist
mov
or
mov
out
push
sub
add
jecxz
aad
dec
ds
mov
cmp
(bad)
loope
lds
adc
cmp
inc
outs
sti
rcr
lock
jp
jne
outs
inc
(bad)
inc
add
pop
jo
sbb
inc
or
daa
push
hlt
inc
xchg
test
mov
mov
pop
(bad)
cmp
jne
loope
pop
jo
cli
push
aam
or
ss
inc
inc
add
add
push
adc
dec
and
pop
xchg
rol
idiv
int
cmp
jl
lea
shr
and
rol
jo
popa
push
mov
pop
inc
or
aas
adc
hlt
mov
sti
push
scas
dec
mov
push
rol
add
sti
fild
shl
adc
scas
add
or
jo
into
and
pop
mov
add
cld
je
movs
dec
loopne
inc
das
inc
add
mov
or
or
aas
dec
stos
xchg
orps
(bad)
jmp
sbb
pushf
sbb
mov
pop
pop
xchg
sub
sbb
js
push
dec
rcl
ret
pop
sar
popf
push
adc
fcom
rol
adc
xor
fist
adc
xchg
jne
pop
lea
jg
mov
xchg
adc
adc
mov
adc
test
inc
xor
mov
dec
fimul
(bad)
fstp
mov
(bad)
jg
push
dec
cmp
adc
jo
movs
dec
inc
add
add
hlt
dec
push
cmp
and
aam
jle
and
xor
add
inc
in
dec
dec
cmps
xor
add
push
imul
push
inc
stos
push
mov
ds
repz
rcr
mov
(bad)
aam
call
add
dec
cli
lock
push
lock
movs
dec
cmp
dec
ja
dec
xchg
add
cdq
daa
mov
push
adc
outs
push
inc
in
jne
xor
xor
stos
push
add
pop
mov
sbb
dec
xchg
lea
outs
dec
sbb
pop
jmp
xchg
xchg
inc
sub
pop
pop
jg
pushf
push
cmp
dec
ret
dec
dec
test
add
or
fsubp
cmp
fistp
clc
push
or
mov
js
sub
jo
or
xor
lea
pop
in
inc
pop
and
adc
mov
dec
pop
pushf
dec
mov
push
dec
lea
fiadd
or
jmp
or
je
je
sbb
imul
add
sbb
push
cmp
inc
dec
jne
mov
shr
pop
pop
cld
dec
pop
in
ins
sbb
je
and
add
mov
add
ret
(bad)
out
fwait
pusha
or
fisttp
fadd
mov
jecxz
sbb
dec
and
adc
loope
inc
sub
and
pop
add
cmps
dec
cmp
adc
sub
aad
pop
mov
outs
div
(bad)
rol
xchg
push
(bad)
ins
cmp
pop
xor
xchg
(bad)
in
pop
add
or
rcl
inc
and
fs
test
xor
or
test
sbb
sbb
ret
adc
ret
jmp
push
push
sbb
pop
rep
add
cmp
or
push
in
and
adc
movs
mov
push
inc
aas
adc
loop
jno
mov
push
add
lock
or
adc
ret
out
outs
mov
pop
in
mov
lock
sbb
dec
inc
(bad)
movs
add
arpl
add
push
xor
push
add
add
fadd
out
add
sub
lea
pop
rcr
mov
inc
cmp
xlat
and
jmp
jp
hlt
xchg
ja
leave
out
inc
pop
push
pop
or
and
(bad)
push
add
imul
or
ja
mov
push
rcr
dec
sub
and
call
add
push
movs
or
aaa
push
ds
pop
call
shr
cs
dec
je
dec
pop
jmp
and
adc
pop
fs
call
sub
dec
and
mov
jno
cdq
(bad)
and
mov
pop
cs
sbb
mov
xlat
outs
shl
ret
sbb
lahf
adc
fcom
xor
pusha
shl
js
cmp
sub
cmp
cs
dec
mov
and
call
jmp
adc
dec
push
and
or
mov
mov
inc
outs
adc
jns
not
btc
add
(bad)
jmp
inc
dec
adc
cmp
mov
xchg
mov
adc
push
jmp
jnp
into
add
test
mov
and
pop
and
add
pushf
leave
dec
int
iret
fistp
sbb
test
loop
nop
jbe
mov
add
add
add
push
dec
sbb
aaa
loopne
push
or
pop
push
or
and
or
inc
sahf
add
sbb
test
or
inc
push
pop
loope
arpl
adc
cmp
lods
cmps
mov
mov
adc
retf
cs
rcr
pop
or
pop
fmul
inc
adc
and
push
push
push
xchg
lea
xchg
push
mov
or
arpl
xchg
in
pop
adc
add
retf
enter
mov
sbb
pop
nop
sub
neg
and
mov
mov
les
jg
enter
or
mov
add
mov
hlt
jle
les
adc
lock
push
add
inc
and
cmp
mov
frstor
push
add
ins
fadd
push
inc
fcomp
push
push
jae
popf
and
mov
xor
pop
in
xor
fdivr
fdivr
jae
add
shl
pop
(bad)
push
int
call
xacquire
push
adc
adc
and
fistp
sbb
pop
in
jmp
sub
sub
mov
arpl
adc
mov
sbb
shl
ret
pop
lea
shl
inc
or
or
adc
shl
mov
mov
jae
leave
dec
pop
aaa
mov
dec
sbb
xchg
lds
mov
mov
rol
and
lock
movs
rcr
or
and
sub
fs
mov
add
add
(bad)
adc
adc
and
add
mov
lods
test
add
sub
xchg
pop
mov
gs
movs
adc
push
pop
pop
dec
inc
ret
in
jno
or
call
cmp
cmc
scas
push
inc
and
es
push
inc
rcl
shr
xor
lds
mov
add
stos
add
retf
adc
test
or
xor
shr
leave
push
mov
cs
call
shl
sub
loope
push
call
pop
mov
and
pop
pop
push
mov
sbb
jmp
jne
ffree
test
and
test
xor
(bad)
rcl
adc
loope
hlt
in
push
add
fnstcw
call
arpl
mov
clc
adc
push
or
div
mov
or
mov
mov
pop
pop
test
xlat
adc
inc
sub
jnp
fmul
sub
fstp
or
add
ret
arpl
inc
inc
add
push
pop
mov
inc
pop
inc
pop
jp
sub
push
cld
aas
adc
test
pop
pop
sbb
sub
xor
xor
jb
cmp
pop
jmp
loopne
imul
add
push
int3
jp
adc
out
sbb
rol
and
smsw
sbb
inc
push
fsubr
js
add
sub
nop
inc
inc
pop
adc
sbb
imul
into
push
or
or
xor
int
jmp
arpl
mov
adc
push
cmp
push
neg
mov
mov
test
lock
dec
aaa
ins
nop
pushf
fcomp
popa
sbb
enter
push
scas
ror
daa
dec
inc
or
add
pop
das
sbb
adc
outs
aas
jp
outs
sti
jge
loopne
sbb
data16
gs
xlat
retf
jp
push
push
push
shl
mov
mov
push
sub
push
add
cli
scas
xchg
sbb
jmp
aam
fidiv
jmp
mov
inc
mov
inc
setns
xor
xor
sub
cld
mov
lea
inc
loop
clc
dec
clc
jne
dec
nop
cmp
jge
xor
mov
and
cs
mov
ficomp
xor
ret
nop
pop
in
fwait
adc
pop
pop
daa
inc
dec
loopne
scas
inc
cmp
pop
mov
cmp
fiadd
inc
cmp
test
ds
mov
add
mov
mov
call
scas
pop
adc
das
mov
xlat
les
ss
fistp
ret
nop
ins
push
cmps
or
xlat
xor
or
mov
mov
xchg
lock
mov
xchg
out
fwait
push
les
inc
pop
or
add
dec
std
(bad)
hlt
push
leave
and
ss
or
or
es
cmp
mov
xchg
ficomp
mov
fcom
or
push
mov
dec
push
or
push
or
sub
sysexit
popa
mov
push
push
push
jmp
dec
mov
jmp
and
test
mov
cmp
iret
sbb
ficomp
popa
adc
movs
test
mov
ja
imul
lea
cmp
jne
inc
jmp
dec
cmp
and
dec
lods
repnz
add
or
push
xchg
sbb
mov
sar
cmp
mov
idiv
cmp
ret
in
imul
dec
push
mov
mov
das
sbb
pop
push
push
shl
imul
fwait
sahf
mov
ja
add
ins
lock
cld
(bad)
call
adc
outs
stos
daa
push
rcr
push
rol
pop
sub
mov
push
fdiv
sub
dec
sub
pop
push
loopne
push
mov
sub
mov
push
mov
addr16
adc
loopne
mov
push
sbb
push
cld
mov
inc
add
mov
pop
cld
push
aaa
xchg
pand
sti
xor
mov
das
dec
push
dec
push
ret
xchg
test
sub
in
push
clc
mov
cwde
iret
imul
cwde
pop
xchg
push
pop
sub
push
cmp
ss
out
add
cld
pop
push
sti
sbb
pop
lea
pop
(bad)
and
sub
xor
call
dec
sbb
push
mov
mov
sbb
and
mov
jecxz
or
cmps
push
clc
ret
sbb
pop
popa
aad
xchg
add
loop
loop
clc
mov
add
add
adc
clc
or
mov
scas
push
add
js
pop
mov
mov
daa
add
jne
rcl
aad
jmp
dec
add
push
popa
cmp
push
dec
adc
dec
mov
adc
pop
adc
(bad)
push
ja
jl
jo
or
or
pushf
add
sub
loope
leave
popf
or
mov
xchg
sub
mov
and
ror
ret
imul
std
jne
pop
add
push
xchg
and
lea
sbb
add
push
mov
mov
xchg
or
cmp
loope
add
mov
out
inc
bt
lea
add
add
rol
push
add
sub
sbb
push
ror
or
sub
rcr
fs
and
out
lock
sbb
cmp
ins
cdq
js
test
push
sub
cmps
scas
and
in
push
test
adc
xchg
mov
loopne
lea
adc
mov
xchg
xchg
pop
jne
add
je
mov
push
mov
xor
add
stc
pop
cwde
sbb
outs
mov
dec
push
in
xlat
ja
dec
ins
sbb
mov
or
retf
hlt
ret
and
adc
mov
adc
mov
ins
mov
cmp
mov
dec
gs
adc
push
ret
inc
mov
idiv
out
mov
add
test
or
add
out
mov
fs
shl
daa
push
ret
mov
push
test
push
mov
ficom
push
jle
inc
or
sbb
sbb
jg
loopne
(bad)
into
lock
push
and
pop
ins
xchg
xor
lahf
mov
pop
jae
mov
dec
je
mov
leave
push
inc
jno
add
aam
pop
and
mov
xor
pop
push
cmp
and
dec
add
mov
das
in
cmp
jmp
inc
add
imul
xlat
cmp
sbb
dec
jp
mov
push
ret
and
loopne
js
into
adc
cs
lock
aam
or
pop
xor
pop
lahf
sbb
dec
add
sub
mov
mov
mov
push
inc
inc
ror
push
mov
shl
add
xchg
sub
nop
addr16
mov
and
loop
inc
xchg
sar
je
pop
pop
jb
xor
push
mov
pop
adc
inc
push
aas
push
mov
or
lods
in
pusha
mov
cdq
dec
and
iret
call
adc
iret
in
call
popa
mov
inc
sar
xchg
and
xor
adc
lea
cdq
pop
xchg
es
js
xor
fcomp
popf
dec
and
rcl
inc
movs
imul
pop
imul
enter
test
pop
pushf
sar
imul
and
shl
push
adc
ret
ror
push
fwait
cmc
mov
push
jo
xor
jge
cmp
cs
in
sub
ret
jne
pop
pop
dec
call
call
jno
sbb
fs
xor
mov
outs
mov
test
or
mov
repz
pusha
inc
call
add
mov
ret
sub
lods
imul
add
gs
popf
add
jl
push
cmp
lods
lock
inc
sbb
movs
or
ret
xchg
mov
imul
shl
mov
int3
mov
push
(bad)
cmp
cdq
dec
inc
or
ds
mov
inc
mov
dec
nop
lock
jge
imul
adc
dec
test
pop
or
xchg
push
ins
add
xor
(bad)
add
lds
push
lock
in
ins
idiv
sub
pop
sbb
ins
mov
pop
ins
inc
add
ror
gs
inc
or
aas
xchg
shl
scas
inc
or
nop
adc
mov
push
and
cmp
add
ins
jns
xchg
and
inc
add
ins
inc
add
call
lea
aaa
or
inc
cli
fucomi
sahf
add
loopne
leave
inc
pop
test
rcl
pop
inc
test
jbe
bound
add
adc
or
adc
jmp
and
(bad)
mov
sub
shr
pop
in
push
dec
jmp
popa
mov
mov
pushf
push
in
imul
lods
add
(bad)
imul
add
leave
clc
ret
lods
aad
pop
jbe
or
adc
dec
std
and
outs
sub
(bad)
adc
bound
push
adc
dec
push
dec
dec
movs
call
add
dec
dec
inc
inc
push
inc
push
mov
push
(bad)
lods
clc
xor
call
add
push
xor
add
jecxz
xor
outs
in
dec
inc
or
jne
mov
and
jne
or
aaa
hlt
xchg
adc
jge
jbe
add
sbb
jae
push
imul
sbb
xchg
dec
xchg
lods
and
jae
jne
shl
add
and
lea
pop
daa
push
div
and
or
je
iret
movs
or
sub
add
fs
ja
mov
push
dec
sub
outs
outs
popf
cld
or
outs
cwde
fcmovb
and
ja
data16
and
mov
and
mov
pop
or
sub
or
push
or
(bad)
ror
mov
ins
rol
jmp
shl
sahf
adc
mov
push
out
cmp
cmp
mov
add
push
jno
jno
jo
adc
mov
(bad)
xor
pop
movs
ins
popa
jo
(bad)
ffreep
sbb
push
repnz
dec
mov
inc
sti
xchg
ucomiss
mov
inc
imul
xchg
(bad)
arpl
inc
sti
add
add
jnp
mov
push
pop
pop
pop
xchg
mov
push
pusha
jl
mov
sbb
daa
push
jno
js
cli
mov
retf
fidivr
adc
(bad)
sbb
pop
mov
setg
jno
add
xchg
out
jmp
xchg
lock
pop
add
test
xchg
pop
inc
jge
push
mov
lods
push
les
iret
mov
test
(bad)
adc
pop
or
add
call
add
xchg
es
xlat
movs
(bad)
push
scas
dec
push
sub
fild
scas
test
popf
pop
test
aas
xor
aaa
add
mov
fs
dec
mov
cld
dec
clc
mov
adc
ret
js
pop
xor
cmovs
mov
ror
or
sub
shl
outs
cmp
jl
mov
inc
test
sbb
cld
add
shl
add
add
add
sub
neg
imul
xchg
std
sbb
movzx
cmp
je
or
movs
dec
fstp
add
cmp
sub
cld
jecxz
xor
or
je
mov
jle
pop
pop
xor
ret
outs
cld
je
or
jne
stos
test
dec
mov
dec
jecxz
sbb
cmp
jne
cmp
pop
pop
xor
mov
sbb
call
push
add
fdivr
dec
gs
or
adc
ret
mov
shl
cmp
pop
mov
mov
add
into
jecxz
fld
mov
imul
fild
sahf
je
fnstenv
leave
fistp
fld1
fchs
push
fscale
test
fstp
pop
fstp
fwait
pop
lea
outs
jbe
loopne
dec
adc
lock
cli
or
ret
sub
sbb
xor
fwait
dec
add
ret
or
mov
cmp
loop
ret
adc
add
iret
enter
adc
add
adc
and
inc
add
lahf
je
or
movq
pop
inc
sbb
add
arpl
pop
mov
fmulp
mov
push
int3
out
adc
test
js
push
or
xor
add
push
and
inc
push
adc
mov
imul
add
jbe
mov
push
inc
xchg
pop
(bad)
dec
or
inc
pop
aas
or
add
inc
mov
pop
dec
or
gs
push
gs
fs
sub
inc
popa
jns
xchg
add
sti
movs
cdq
cmp
jae
or
add
lods
sahf
jae
pop
in
mov
adc
add
or
rol
push
dec
gs
sub
fidiv
sub
cdq
or
mov
or
inc
rcr
fild
push
inc
or
dec
or
dec
mov
xchg
das
sbb
add
adc
cmp
push
dec
adc
or
(bad)
fild
inc
xor
add
xor
and
add
clc
neg
fstp
pusha
ins
aas
stc
aas
xor
or
jmp
pop
mov
xchg
imul
loope
adc
add
add
push
addr16
jnp
sbb
out
push
sub
xchg
and
sub
movs
fild
add
xchg
loope
jne
push
addr16
outs
scas
sub
mov
imul
cmp
xor
push
add
js
dec
jb
jnp
pusha
fwait
jb
cmp
jae
adc
shl
jne
mov
jnp
jbe
cmp
pop
push
ins
jne
mov
mov
shl
in
lea
js
adc
and
mov
jns
rol
mov
dec
ss
dec
aas
jno
hlt
int
sbb
push
cmp
test
sub
add
and
pop
adc
adc
jl
aaa
cli
and
or
in
data16
sahf
inc
and
jg
xchg
ins
fild
fmul
fstp
fld
fcomp
mov
clc
fadd
ja
jmp
sbb
adc
test
push
sbb
jbe
pop
sub
cmp
inc
ret
cmp
xchg
outs
leave
ins
push
push
scas
push
mov
jnp
loopne
dec
sbb
call
cdq
aam
inc
sbb
pop
pop
mov
xor
mov
pop
dec
mov
adc
mov
into
add
popa
mov
lods
xor
ja
sub
adc
mov
and
adc
sub
fs
push
pop
(bad)
in
(bad)
push
dec
dec
adc
or
inc
or
dec
or
loopne
push
mov
jl
jo
pop
test
cmc
ins
js
sahf
jl
(bad)
jns
pop
pop
and
cmps
push
xor
jnp
shr
dec
adc
psraw
inc
dec
lar
and
push
jg
popa
lods
xchg
aas
daa
test
inc
arpl
push
stos
ins
jmp
mov
retf
pop
jo
ror
cmp
add
daa
sbb
sub
mov
or
add
add
adc
adc
clc
pop
movs
xlat
sbb
shl
adc
push
push
adc
movs
inc
sbb
mov
inc
daa
cmp
daa
fucomp
mov
nop
das
mov
les
and
jl
lahf
jl
inc
cdq
shl
xor
call
nop
adc
sbb
loope
inc
add
dec
inc
dec
dec
popa
std
inc
retf
lahf
outs
les
jecxz
sti
pop
dec
dec
mov
push
mov
or
push
xchg
lods
xchg
pop
fs
xchg
mov
push
jl
and
xor
xchg
cmp
push
clc
jg
add
xor
sbb
jg
add
imul
int3
add
jo
in
jae
add
sbb
inc
ins
xor
sbb
sub
xor
adc
out
int
push
inc
xchg
mov
and
mov
xor
pop
lea
push
push
and
inc
mov
xor
or
stos
or
cmp
adc
fadd
in
adc
cmp
or
fsub
pop
add
and
movaps
push
and
popa
sub
inc
loope
adc
inc
add
test
sub
and
cmp
or
inc
dec
mov
addr16
xchg
pop
sub
call
add
mov
mov
test
fadd
sub
sub
call
or
push
bound
add
push
dec
or
loopne
ss
aaa
pop
dec
outs
clc
jg
add
xor
add
fsubr
sbb
and
ins
(bad)
cmc
mov
out
add
cwde
fadd
add
cmps
jno
std
les
sbb
add
cmp
xchg
js
out
cmp
cmps
js
cmp
movlps
adc
add
mov
test
mov
jb
xchg
dec
sub
inc
cmp
mov
sbb
arpl
adc
shl
add
scas
nop
add
scas
inc
inc
mov
test
sbb
sub
ds
xchg
cmp
xor
retf
cmp
(bad)
jae
ret
ffree
sub
push
cmp
or
push
in
mov
mov
out
sub
add
xor
enter
sbb
xor
jbe
test
fsubr
add
dec
push
pop
xchg
popa
arpl
push
rol
cmc
adc
enter
ins
cli
mov
pop
scas
aaa
(bad)
dec
xor
mov
repnz
xchg
mov
sbb
cmps
add
cmp
add
cmp
cwde
lock
fild
ja
cmp
push
arpl
fiadd
fmul
add
inc
jnp
add
in
xor
sbb
js
retw
(bad)
mov
inc
call
popf
and
mov
xlat
push
cmp
pop
add
sub
xor
jb
sbb
add
jle
or
(bad)
fidiv
sub
adc
adc
adc
push
fcom
outs
aam
in
adc
add
mov
in
mov
add
or
mov
outs
xor
loope
les
push
inc
sub
jo
ret
push
mov
add
outs
into
jne
pop
mov
jo
dec
cmp
gs
add
sub
add
dec
inc
jbe
std
mov
push
push
push
call
pop
ror
dec
imul
ror
mov
rol
mov
dec
and
and
jge
int
lock
pop
shl
sub
mov
sub
in
loopne
mov
loope
(bad)
jg
fucomi
push
mov
jmp
xor
fmul
or
retf
lods
loope
fcmovnbe
sub
inc
push
push
mov
sub
push
je
sub
or
jmp
mov
jmp
xchg
jle
add
mov
push
dec
rol
pop
aaa
movzx
lea
dec
and
ja
fwait
cs
jno
push
sbb
add
(bad)
push
adc
es
inc
add
add
inc
leave
popa
mov
imul
add
mov
call
sbb
out
lea
(bad)
pop
cmp
fld
add
test
js
movs
jbe
(bad)
push
and
sbb
jl
neg
int3
push
nop
adc
add
ja
hlt
cdq
test
mov
add
lods
mov
sbb
and
push
pop
mul
mov
add
mov
clc
cmp
push
xchg
push
cmp
stos
je
push
push
mov
mov
push
retf
sbb
dec
inc
rol
setg
pusha
mov
mov
cld
popf
outs
mov
and
mov
ror
add
and
sub
cmp
push
mov
xor
sub
mov
out
pause
dec
cmp
or
xor
add
movs
sbb
sbb
ins
sub
popa
sub
dec
cmp
mov
call
sbb
or
and
add
clc
mov
add
(bad)
sbb
jmp
test
mov
xchg
retf
adc
push
push
dec
frstor
outs
sub
or
mov
adc
jmp
rol
mov
inc
and
daa
hlt
popa
lea
cmp
imul
test
sub
outs
inc
lock
cmp
fistp
popf
mov
jae
into
push
jp
(bad)
pop
dec
inc
or
dec
neg
push
lea
rol
pop
leave
aam
ds
scas
push
daa
loope
loop
pop
bound
add
clc
add
sub
push
or
loope
mov
push
(bad)
mov
inc
in
mov
sub
and
in
cmps
frstor
jnp
mov
cmp
jg
sub
rol
ins
add
cmp
aas
add
jns
dec
or
xchg
sbb
jp
(bad)
stc
clc
pop
ins
sti
fcom
mov
xor
icebp
cwde
popa
int
lea
mov
cmc
aas
nop
mov
xchg
lock
add
or
jo
jle
xor
adc
jne
into
push
js
out
add
fucomip
cmps
inc
neg
sub
add
out
pop
sahf
lock
hlt
test
in
rcl
popf
mov
push
push
cmps
pop
hlt
pushf
imul
popf
jle
xchg
outs
or
dec
dec
mov
outs
mov
popa
and
gs
or
popf
lock
bound
(bad)
imul
inc
jmp
int
and
jo
test
push
inc
pop
pop
add
or
cmp
je
test
dec
outs
or
or
mov
into
sub
in
(bad)
jg
pop
cld
xor
sub
push
adc
and
sub
sub
retf
mov
push
or
pop
fstp
repz
je
fcmovnb
pop
or
and
add
jns
mov
or
adc
rcr
data16
inc
jp
or
add
(bad)
ret
sub
addr16
add
ror
mov
dec
and
das
rol
cmp
inc
fild
cmp
cmp
cmp
lahf
std
inc
mov
movsx
add
mov
add
sub
fistp
retf
xchg
outs
les
leave
movs
xchg
add
mov
call
cmp
push
mov
inc
pop
mov
call
xor
test
neg
xchg
scas
cmp
sbb
mov
movzx
add
jbe
jae
inc
push
sbb
sbb
push
ret
add
mov
xchg
nop
jbe
push
mov
ret
repz
sar
sub
enter
out
or
mov
adc
fmul
adc
call
xchg
adc
or
mov
sbb
jns
jmp
test
jecxz
push
adc
adc
add
popa
mov
inc
and
or
clc
xor
mov
push
xor
pop
std
dec
mov
mov
pop
jns
jae
sbb
imul
sbb
push
push
sbb
inc
out
jae
or
in
or
xor
sar
or
fcomp
in
sbb
and
sbb
push
mov
daa
or
mov
mov
cmp
cmp
jo
ins
ins
pop
movs
xchg
pop
mov
sbb
loope
ds
(bad)
jns
or
mov
scas
xchg
pop
imul
add
aas
and
(bad)
cmp
and
fld
sub
adc
push
xor
jbe
pop
xchg
and
dec
jecxz
pusha
inc
dec
sbb
inc
mov
leave
push
nop
std
push
lock
add
or
fild
fistp
popa
pusha
and
cwde
ficom
mov
jno
mov
jg
ja
cmp
imul
xchg
ss
retf
pop
mov
jmp
mov
stos
int3
out
clc
and
repz
mov
dec
push
mov
mov
mov
in
cmp
fadd
adc
add
sub
mov
jbe
sahf
adc
and
in
xchg
push
rol
jp
(bad)
and
sbb
adc
adc
or
mov
ret
adc
add
jg
js
push
sbb
ret
in
inc
sbb
jecxz
push
push
mov
add
(bad)
out
lock
mov
popa
adc
sub
jmp
mov
pop
(bad)
fdivr
sti
test
and
imul
repz
divps
add
ins
imul
xchg
xchg
movs
scas
jbe
call
repz
nop
jp
sti
cmp
test
push
retf
idiv
popa
clc
imul
sub
inc
shl
inc
inc
mov
sbb
lds
dec
jb
ret
das
je
jg
jg
icebp
lea
sub
cmp
jb
mov
mov
inc
inc
rep
sti
push
les
ror
jo
pop
push
and
pop
add
push
gs
push
pop
mov
rcr
xchg
jo
jb
add
add
mov
mov
mov
mov
sti
inc
inc
xlat
mov
mov
addr16
mov
gs
ja
add
movs
sete
mov
lock
aaa
(bad)
adc
push
pop
aaa
or
scas
and
test
add
fiadd
push
jg
push
mov
mov
lea
dec
pop
xor
and
jb
dec
je
dec
jmp
rcl
or
aam
std
push
ss
in
aaa
add
inc
xchg
repnz
mov
push
lahf
add
mov
pxor
mov
mov
adc
int3
inc
popa
loope
pop
rcr
gs
dec
xchg
les
mov
lea
(bad)
ja
add
xchg
ja
ret
xor
inc
je
mov
bound
out
and
and
out
lods
test
mov
ret
lea
pop
and
xor
add
shl
daa
and
adc
iret
(bad)
in
jno
xlat
je
push
mov
add
push
aam
xchg
scas
(bad)
jno
jno
adc
out
mov
ss
(bad)
rcl
rcr
add
loopne
je
and
stos
nop
xchg
and
mov
jmp
retf
call
mov
xchg
and
mov
dec
or
adc
push
jno
mov
jmp
xchg
jmp
adc
cmp
inc
cld
add
add
repz
add
mov
loope
inc
or
fadd
cdq
xor
add
(bad)
movs
bound
jo
test
pop
dec
and
pop
and
or
fdivr
push
sbb
out
push
and
in
sbb
mov
adc
adc
and
loopne
rol
popf
sbb
mov
pop
lea
lods
outs
rcr
repnz
ins
clc
and
push
cwde
sbb
sahf
adc
dec
or
mov
inc
sub
pop
pop
lds
or
daa
pusha
jmp
add
and
add
pop
rcl
add
out
imul
lods
dec
pop
or
cmp
add
popf
lods
xor
xor
or
outs
loope
test
loopne
(bad)
pusha
movs
scas
ja
les
or
retf
push
rcl
pusha
(bad)
test
pop
and
pop
out
add
add
fiadd
jne
xor
aam
clc
mov
neg
icebp
pcmpgtb
add
test
cmp
jle
call
add
or
loope
(bad)
or
pop
xor
xor
loopne
out
ss
lods
js
or
sbb
mul
(bad)
xor
inc
call
jne
and
inc
push
fcomp
(bad)
mov
aam
xor
stos
xor
dec
xor
sub
call
int3
cdq
and
(bad)
int3
xor
add
push
call
and
rcl
xor
dec
shl
inc
adc
or
mov
and
xchg
mov
sub
cmp
clc
into
aam
icebp
pop
movs
adc
sbb
jmp
fs
repz
call
(bad)
or
or
xchg
mov
and
dec
push
adc
xchg
(bad)
ins
and
(bad)
call
fnstsw
xchg
dec
cmps
add
adc
(bad)
jmp
or
leave
push
jb
inc
(bad)
call
fadd
aaa
jmp
add
pop
call
shl
add
pop
dec
xor
add
add
mov
sbb
sub
inc
cs
xor
sub
inc
xchg
dec
scas
pop
or
leave
fcmove
(bad)
jbe
push
imul
fwait
cmp
test
test
test
dec
sbb
movs
and
mov
pushf
and
aam
cwde
leave
cwde
xchg
and
nop
and
mov
mov
mov
jp
adc
leave
cwde
(bad)
ja
sahf
out
cmp
cmp
ret
mov
jns
out
lahf
xchg
mov
sar
out
pop
push
inc
rcl
push
jb
loop
xchg
pop
dec
xor
or
or
mov
pop
pop
adc
push
pop
fnsave
pop
pop
add
add
fs
out
pop
add
add
lock
jnp
adc
adc
shr
or
add
push
sub
mov
adc
fucomip
or
mov
out
adc
out
rcr
(bad)
or
push
adc
xchg
es
pop
(bad)
pop
jo
or
call
ins
ins
pop
adc
stos
pop
adc
or
jb
mov
pop
add
sbb
push
sub
daa
pop
pop
lods
loopne
push
mov
xor
call
push
pop
sbb
stos
pop
or
push
adc
jecxz
fs
ror
jnp
mov
push
adc
(bad)
pop
or
jo
shr
fist
dec
pop
arpl
or
or
or
inc
js
test
pusha
fist
sbb
adc
rol
jl
mov
jae
jl
add
cmp
mov
js
or
(bad)
ds
jae
gs
adc
mov
adc
xchg
or
mov
clc
mov
stos
pop
cmp
jle
fdiv
mov
ror
jl
push
test
pusha
cmps
out
cmp
movd
push
or
outs
adc
or
hlt
sbb
pushf
dec
outs
jbe
fs
test
pusha
and
cmc
mov
add
(bad)
jle
add
add
push
ja
xchg
xlat
add
mov
loopne
ins
je
outs
fs
cwde
shl
js
pusha
add
push
cmp
inc
ins
bound
push
or
jmp
add
fisub
xchg
test
fisub
pop
or
pop
sub
out
setle
repnz
in
test
xchg
xor
add
stos
mov
mov
repnz
inc
and
xchg
pop
loop
scas
or
ret
arpl
fcomp
stos
aas
inc
pusha
aad
mov
bound
jge
xchg
and
or
and
cwde
pop
add
adc
add
iret
push
outs
push
outs
imul
push
inc
loopne
clc
push
(bad)
stos
fsubr
(bad)
test
and
add
xor
jo
scas
lods
sub
add
add
inc
fbld
loopne
add
jb
jbe
add
addr16
dec
mov
or
mov
adc
mov
and
xor
cmps
sbb
mov
aas
adc
cmps
aas
pop
or
adc
inc
das
inc
ja
mov
inc
or
sub
pop
iret
pop
test
in
sub
or
add
and
mov
pop
ins
or
add
test
repnz
fidivr
fiadd
or
push
nop
outs
dec
inc
or
aad
outs
adc
dec
or
push
pop
or
aas
data16
pop
nop
dec
pop
mov
int3
call
cmp
add
data16
pop
movs
pop
xor
push
(bad)
jg
popf
adc
and
lock
lea
jl
push
jp
pop
rol
ret
inc
(bad)
pop
lea
pop
add
pusha
mov
idiv
xchg
inc
xchg
lea
mov
aas
mov
lods
sub
fwait
mov
add
adc
dec
arpl
push
xchg
stos
icebp
sub
cld
pushf
pushf
push
push
mov
or
sbb
jne
fadd
and
cmp
out
adc
xchg
call
fild
jo
clc
add
test
mov
imul
add
and
rcr
mov
sub
fisttp
pop
ret
jbe
add
cmp
mov
push
not
mov
sub
jmp
and
sub
vcvtps2pd
cmp
jecxz
pop
add
xchg
in
ins
fmul
xlat
mov
sar
rcr
adc
inc
test
int
push
dec
cmp
sbb
cmp
or
mov
xchg
fwait
pop
sub
(bad)
lods
pop
rcr
xchg
xor
clc
or
movs
inc
xchg
mov
ret
cmp
fsubr
jbe
pushf
mov
repnz
je
jp
inc
dec
lds
js
xlat
sub
pop
inc
pusha
add
push
sbb
dec
add
sbb
push
push
dec
jg
xor
nop
push
ins
repz
dec
ja
add
and
or
movs
add
push
dec
add
inc
lahf
in
ret
mov
inc
inc
sub
add
pop
gs
add
cmp
cmp
pop
inc
fsubr
push
inc
cmp
push
or
movs
fs
jne
data16
pop
fcom
fldlg2
cmp
push
(bad)
push
sub
add
or
add
push
xor
adc
aam
or
add
popa
arpl
jmp
add
pop
add
retf
inc
(bad)
mov
fidiv
xchg
icebp
mov
es
aam
add
pushf
cmp
popa
mov
adc
pop
mov
jns
and
fist
outs
push
inc
data16
cmp
push
mov
sub
lea
push
or
adc
sbb
pop
add
adc
add
or
add
inc
test
ss
add
fdivr
add
inc
or
inc
add
push
jg
dec
adc
or
cmps
aas
cmp
mov
push
cmp
std
loopne
push
adc
pusha
mov
les
shl
adc
mov
and
push
or
sar
fld
inc
jecxz
adc
pop
mov
iret
pop
sbb
mov
ror
push
add
mov
jo
xchg
adc
push
addr16
mov
das
loopne
push
icebp
mov
popa
lock
pop
push
out
mov
sbb
add
ja
jo
mov
add
add
jno
mov
cld
loopne
xor
in
or
xor
in
jmp
aam
rcr
adc
js
mov
lea
or
pop
jo
out
sbb
mov
aas
stc
cwde
test
push
dec
pop
xchg
xor
xor
adc
push
inc
add
(bad)
bound
add
cs
das
jo
test
push
cmp
in
inc
je
outs
ror
add
mov
mov
inc
add
mov
cmps
or
(bad)
(bad)
aaa
fs
or
lahf
jns
pusha
xor
xchg
arpl
add
sbb
fbstp
mov
in
fnstcw
popf
dec
jmp
add
mov
dec
inc
adc
xchg
or
arpl
shl
ror
push
or
adc
sbb
xchg
adc
and
sub
add
push
mov
pop
fcomp
test
xchg
ror
mov
mov
jmp
push
jb
icebp
aam
aas
pop
or
cmp
lea
pop
adc
daa
mov
mov
dec
inc
mov
pop
lods
das
ret
test
push
in
add
stos
out
adc
mov
ror
addr16
jns
loopne
shr
aam
jns
or
mov
scas
add
ins
dec
inc
in
mov
inc
or
std
movs
mov
dec
loopne
ja
mov
bound
sbb
js
test
and
dec
push
in
dec
add
jmp
daa
mov
inc
and
cmp
pop
xchg
pop
inc
inc
adc
or
push
inc
shr
mov
or
movs
dec
das
mov
jmp
or
rol
add
adc
push
push
stos
jge
fsubr
sub
add
stos
clc
mov
mov
popf
pop
add
das
in
fiadd
shr
into
mov
and
xchg
mov
and
mov
xor
dec
and
add
sbb
rcr
stos
out
jmp
in
shr
rcl
mov
rol
xlat
cmp
xchg
mov
xchg
and
(bad)
pop
adc
(bad)
jp
shl
ror
adc
adc
or
adc
ret
das
scas
rcl
cmp
std
cmp
xor
xchg
sub
add
ret
aam
xchg
aad
rol
mov
xchg
cwde
mov
xor
les
and
into
in
or
and
aad
mov
pop
ret
xlat
mov
leave
or
cdq
adc
and
in
adc
xor
test
ret
or
(bad)
pop
dec
xor
in
add
ffreep
ret
push
inc
sbb
xchg
cmp
pop
cwde
lds
shr
les
shr
in
je
pop
cmp
dec
xor
inc
add
or
imul
pop
inc
pop
adc
pusha
in
push
test
aaa
xchg
lds
cmp
jp
in
add
cmps
pop
cmp
add
daa
mov
mov
push
daa
mov
(bad)
aaa
loopne
mov
es
das
jmp
ret
cmp
shr
in
in
pop
mov
jge
and
inc
jne
(bad)
lea
pop
fsubr
and
jmp
in
cmp
xchg
(bad)
and
sbb
nop
add
(bad)
loopne
(bad)
pop
movs
and
push
loope
sbb
outs
enter
sub
enter
pop
ds
cmp
and
adc
mov
mov
stos
pop
cmp
out
jle
mov
(bad)
leave
mov
pusha
stos
sbb
and
cdq
hlt
leave
mov
push
mov
cmp
mov
pop
pop
mov
xchg
es
mov
mov
push
sub
in
das
loopne
sbb
int3
dec
sbb
cmps
cld
out
push
lods
call
and
sub
inc
outs
jl
pusha
sbb
into
inc
or
dec
(bad)
inc
gs
jo
mov
arpl
xchg
add
and
push
or
ja
jae
bound
clc
xor
mov
cdq
adc
lea
inc
push
cs
xor
mov
test
pop
xor
sub
inc
popa
jbe
aaa
pop
test
xchg
or
(bad)
in
fs
xchg
retf
sbb
sub
aas
into
ror
in
leave
mov
sbb
inc
xor
in
mov
or
inc
add
jbe
adc
cmps
push
add
cpuid
inc
and
pop
sbb
cmc
and
imul
ror
xor
cmp
add
mov
iret
and
mov
es
std
jecxz
pop
repnz
mov
push
add
mov
dec
or
inc
scas
jae
call
cmp
adc
fcomp
shl
add
rol
add
test
add
add
lock
and
xor
adc
ins
inc
fld
cmps
shl
mov
aad
add
push
cmp
and
cmp
pop
and
or
pop
mov
sub
add
lds
mov
imul
jae
push
test
or
add
fwait
clc
inc
gs
adc
data16
cmp
inc
ret
sub
dec
xchg
and
pop
or
fs
mov
loop
and
cdq
add
cmp
xor
xchg
cs
out
xor
push
imul
dec
pusha
push
xor
and
addr16
lds
pmulhuw
popf
push
adc
push
addr16
and
pop
outs
add
pop
xor
push
mov
adc
retf
(bad)
fs
mov
jmp
or
sub
sub
add
or
js
fs
nop
ret
add
mov
push
add
es
or
or
adc
xchg
xchg
imul
sub
popa
or
sti
push
adc
iret
aam
es
das
mov
push
cmp
retf
lea
out
outs
les
xor
sbb
out
inc
sbb
outs
shr
adc
in
mov
add
adc
xchg
test
dec
fsubr
push
dec
dec
sbb
nop
xor
inc
sbb
adc
pop
std
pop
add
cdq
loope
push
lock
dec
xor
adc
mov
lds
test
and
mov
ja
not
pop
aad
jg
dec
add
jl
push
fdivrp
mov
push
inc
pushf
xchg
adc
cmp
xchg
(bad)
cmp
inc
out
push
add
daa
fcom
lea
fild
adc
lea
das
sub
movs
push
or
mov
sahf
mov
(bad)
dec
inc
ins
add
in
rol
or
mov
xlat
cwde
ret
add
add
push
les
jmp
or
lea
push
mov
adc
pop
and
dec
pop
lock
sub
jnp
push
arpl
and
ins
or
xor
inc
mov
outs
add
xchg
stc
ss
sbb
fisub
mov
mov
sub
sub
add
test
sbb
(bad)
xor
in
mov
mov
adc
ja
and
sub
daa
xchg
and
mov
lds
mov
mov
popa
or
or
or
or
mov
or
mov
sub
push
shr
push
faddp
add
push
test
out
cmc
inc
mov
mov
jmp
jae
inc
inc
dec
clc
inc
xlat
sbb
popa
xchg
add
xlat
inc
add
call
aaa
mov
or
cdq
xchg
mov
or
leave
cmp
dec
push
push
inc
scas
mov
ja
jmp
add
test
add
(bad)
inc
mov
sub
or
cmp
cmp
jae
ret
sub
adc
add
sub
sar
fcmovnbe
pop
sub
adc
add
or
aam
cwde
js
inc
cdq
sub
loopne
jle
aad
mov
jnp
jb
xchg
jbe
fcomp
or
sub
test
jns
aam
aad
push
xor
rcl
add
lea
int3
push
rol
add
push
(bad)
mov
push
pop
mov
ret
ja
sub
mov
das
dec
cwde
sub
lock
fucomp
inc
bound
rol
inc
in
out
pushf
adc
or
sub
repnz
repnz
lods
add
xchg
add
push
mov
xchg
je
popa
aas
pop
mov
jg
adc
dec
(bad)
inc
dec
cmp
push
daa
cmp
mov
adc
inc
fmul
stc
aad
add
test
xor
push
or
test
and
push
pavgw
cli
mov
push
push
push
dec
sbb
sub
mov
dec
inc
idiv
int3
fstp
and
sahf
js
(bad)
movs
adc
xchg
mov
arpl
add
(bad)
pushf
inc
dec
xchg
inc
add
imul
cdq
mov
cld
int
test
lea
lea
cmps
add
add
inc
xchg
pop
push
dec
mov
movs
dec
push
jo
test
and
popf
in
loope
aaa
call
cmc
les
fstp
mov
pop
mov
xchg
fld
mov
test
call
sub
movs
mov
mov
test
add
or
movs
push
and
inc
sbb
push
sbb
push
cmp
out
sub
outs
sbb
push
add
mov
gs
push
movs
pop
and
and
xchg
fs
mov
in
mov
jo
inc
cmp
adc
or
jmp
xor
and
jg
in
imul
seto
cwde
pusha
les
xor
adc
jae
xor
push
jge
(bad)
adc
mov
cmp
and
inc
repnz
jne
add
inc
pause
pop
sub
hlt
dec
sbb
das
ds
fdivr
in
(bad)
aam
cmp
or
enter
cs
mov
and
sub
pop
inc
aam
sub
lahf
scas
call
loopne
call
sar
inc
jecxz
cld
fld
pusha
mov
clc
inc
or
nop
shl
repnz
movs
test
fldenv
sub
icebp
push
or
inc
cmp
add
addps
inc
ins
loopne
call
xchg
js
test
popf
xor
imul
jp
push
pop
add
test
popf
test
adc
test
mov
mov
sbb
(bad)
mov
mov
or
adc
cmps
inc
mov
mov
dec
clc
icebp
sbb
fild
nop
cdq
mov
mov
adc
mov
not
add
add
inc
scas
sub
jge
add
pop
idiv
jnp
push
dec
jl
inc
mov
cmp
cmp
lock
test
adc
and
das
mov
or
test
mov
in
add
add
sub
or
cld
push
mov
jo
mov
adc
and
mov
fidiv
loopne
in
js
sbb
mov
and
add
jae
inc
mov
xlat
pop
jmp
mov
or
fs
add
mov
dec
movs
das
add
inc
pop
push
daa
call
pop
cs
pop
and
dec
or
out
xchg
xchg
adc
pop
fcmove
jle
ror
push
pop
call
push
fisttp
js
sbb
push
inc
nop
loop
fdivr
push
pop
jecxz
into
cs
je
adc
mov
add
adc
xchg
or
or
repnz
loope
loope
and
cmp
mov
das
aaa
cmp
addr16
xor
je
push
sbb
add
mov
dec
adc
cmps
push
dec
test
lods
lea
or
add
sbb
push
and
adc
push
or
jns
xchg
or
call
add
fisttp
mov
pop
jne
or
rcl
jmp
popa
in
or
mov
loope
dec
mov
push
fadd
dec
mov
out
pop
add
leave
jl
fisttp
jp
or
sbb
adc
push
mov
add
cmp
inc
jno
add
pushf
loope
xor
scas
inc
pusha
mov
je
icebp
nop
push
jmp
sub
sbb
add
jo
(bad)
xor
adc
sub
in
jno
movs
cmp
cmp
and
call
add
inc
jle
xor
add
cmp
push
push
or
mov
push
div
jnp
cmp
jle
add
or
mov
sub
xorps
fwait
in
fistp
push
push
test
mov
mov
push
add
jl
xchg
mov
mov
ror
lock
das
mov
pop
xchg
add
loope
and
mov
shl
shr
mov
inc
adc
add
je
jge
in
mov
or
or
add
cmp
rol
(bad)
aad
enter
sub
popa
push
dec
frstor
mov
fwait
or
pop
add
jne
sbb
sar
inc
adc
xor
xor
xor
and
xor
mov
xchg
ja
mov
sub
and
dec
or
add
mov
not
jmp
adc
mov
sbb
adc
ret
and
inc
or
mov
inc
test
fdivr
mov
pop
pop
mov
imul
cmps
cmp
pop
xor
mov
sbb
pop
int
adc
xchg
int3
not
adc
pop
shl
xchg
adc
jne
push
je
or
pop
inc
inc
dec
and
lea
fisttp
dec
daa
mov
adc
jge
xchg
adc
jb
push
imul
inc
arpl
iret
add
rcl
cmp
mov
popa
inc
fld
out
pop
and
push
mov
lea
jl
and
push
and
jno
enter
out
je
xor
test
dec
adc
add
or
retf
mov
or
dec
cmp
in
jp
inc
outs
cmp
push
add
(bad)
adc
inc
add
add
jle
icebp
xlat
cwde
scas
sub
mov
push
arpl
adc
jns
inc
adc
push
data16
xor
adc
data16
in
imul
rcr
test
not
mov
jne
inc
imul
push
push
xchg
pop
and
aad
in
or
stos
push
push
jmp
cdq
inc
sub
addr16
jg
cmp
ror
inc
mov
ins
daa
pop
cmc
mov
push
pop
lods
jp
or
and
fist
(bad)
std
retf
sbb
push
adc
icebp
pop
xchg
les
cmps
and
inc
std
hlt
xchg
add
inc
adc
(bad)
mov
ja
add
imul
and
and
adc
es
mov
ret
(bad)
(bad)
fisub
mov
cmp
add
jnp
aas
xchg
push
dec
(bad)
(bad)
(bad)
aaa
test
dec
ret
imul
jecxz
out
jo
push
dec
dec
in
mov
ret
xchg
jmp
clc
aaa
cmc
adc
mov
ds
sbb
pop
jle
into
and
out
cmps
nop
cwde
ror
or
cmp
lock
aaa
hlt
adc
push
push
xor
out
stc
push
jmp
retf
and
shr
sub
arpl
jl
sbb
sbb
sbb
sub
jmp
xor
jg
inc
es
leave
ret
nop
xchg
ins
jne
lods
ja
pop
(bad)
add
mov
clc
lahf
sub
out
cmp
sub
lock
lea
xrelease
pop
adc
pand
mov
dec
sbb
(bad)
jmp
inc
retf
int3
add
and
sbb
mov
mov
invd
ins
xor
cmp
(bad)
int3
pop
pop
cmp
add
add
cmp
popf
adc
loop
dec
inc
les
sbb
sbb
lds
pop
pusha
push
jmp
nop
daa
paddusb
mov
in
xor
xchg
in
and
fst
add
in
xor
fstp
pop
enter
nop
leave
cmp
(bad)
arpl
(bad)
frstor
push
lea
mov
cs
ds
or
or
push
xchg
test
imul
fsub
add
dec
je
sahf
fst
push
push
and
adc
test
xchg
psadbw
adc
and
adc
xor
mov
add
mov
mov
and
pushf
or
mov
jne
dec
add
inc
or
add
xchg
push
(bad)
aaa
xchg
test
les
je
and
dec
shl
lods
adc
out
adc
scas
pop
push
sbb
out
add
push
add
xor
dec
or
ret
or
push
outs
xchg
or
loopne
adc
je
sbb
rol
mov
lock
(bad)
enter
jecxz
mov
sub
daa
loop
mov
call
shl
mov
push
ror
jno
push
cmp
dec
lea
pop
push
or
mov
add
sbb
pop
push
add
add
dec
add
mov
adc
or
out
mov
dec
(bad)
in
fs
aaa
and
mov
pop
retf
adc
pop
push
call
push
sub
push
in
sub
sub
ins
add
loope
(bad)
mov
test
mov
iret
sbb
inc
(bad)
mov
cwde
(bad)
xchg
sbb
dec
add
mov
push
repnz
add
ret
nop
outs
sub
or
xchg
arpl
inc
std
in
lds
rcr
mov
mov
mov
cmp
call
inc
or
or
cwde
pop
fistp
inc
pushf
adc
rcl
repz
inc
jp
xor
jl
and
ret
push
cli
mov
cmp
test
daa
test
loopne
test
or
arpl
sub
dec
dec
pusha
jecxz
mov
dec
sar
movs
push
fs
and
cmp
cmp
cli
push
push
mov
push
movs
or
(bad)
dec
or
sahf
add
add
jp
mov
daa
sub
cmp
div
popa
jmp
movs
lock
mov
inc
lock
xor
fs
fdivp
icebp
jnp
cdq
je
inc
das
hlt
and
loope
mul
sub
aam
mov
mov
cmc
nop
ficom
shl
xchg
jp
or
dec
jne
adc
xchg
add
xor
inc
pop
fimul
fild
push
push
cmp
addr16
pop
jno
iret
ds
pop
fcom
movs
jg
inc
sub
lahf
out
psubb
jl
ror
xchg
mov
pop
ret
cmp
add
in
movs
push
inc
leave
dec
pop
test
or
sbb
mov
les
daa
xchg
mov
in
scas
dec
jae
jmp
adc
jns
pusha
enter
pushf
mul
pop
das
sbb
call
out
and
push
add
mul
aam
adc
daa
idiv
repnz
sbb
clc
inc
test
jae
in
add
aam
xor
pmulhuw
xor
or
jp
push
inc
mov
adc
ss
test
jo
(bad)
bound
stc
jmp
mov
push
jae
pop
or
in
mov
cmps
dec
cwde
jle
add
test
jmp
xchg
maxps
pop
fisttp
add
ins
jno
jne
cmp
pushf
mov
sub
lahf
pop
cmp
jns
jmp
mov
jmp
push
or
ret
nop
sub
pop
and
sbb
in
in
jmp
pushf
dec
sti
in
das
aaa
mov
mov
add
and
push
sti
pop
(bad)
or
pusha
dec
xchg
mov
enter
jmp
adc
mov
scas
push
loop
cmp
xor
enter
arpl
loop
dec
outs
or
fist
mov
addr16
push
ret
addr16
std
push
xchg
js
ins
int3
xor
in
add
rcr
add
dec
jmp
dec
loopne
aas
sbb
mov
pusha
adc
test
hlt
and
push
(bad)
jecxz
movs
fimul
adc
les
ror
dec
fmul
add
aas
add
mov
xchg
js
push
fdivr
jp
jnp
sub
mov
jge
push
stos
and
push
daa
adc
cmp
out
pop
dec
fistp
adc
dec
add
add
xor
mov
push
mov
xchg
adc
xchg
scas
in
in
cmp
adc
mov
push
mov
pop
dec
out
add
inc
mov
push
not
cmp
call
es
das
ins
add
(bad)
shl
jo
pop
test
ja
popa
daa
cmp
or
imul
ror
fadd
push
dec
adc
gs
xchg
or
jge
sbb
icebp
add
or
into
add
inc
rol
adc
popf
xchg
rol
inc
pop
adc
push
dec
faddp
fwait
mov
pop
push
nop
push
jb
enter
fsubr
fisubr
or
push
lods
adc
call
lock
xor
or
xor
sub
pop
or
int
ret
and
and
cmp
loope
seta
xchg
clc
push
adc
in
jbe
pop
(bad)
jne
jb
repnz
pop
or
cmp
jns
fmul
mov
loope
or
inc
sahf
pushf
pushf
lods
in
or
dec
dec
jnp
(bad)
pop
or
sar
movs
xlat
cmps
test
movs
prefetcht1
push
ror
inc
(bad)
icebp
pop
cmp
cmps
push
mov
sahf
nop
test
call
mov
push
mov
shr
mov
add
xor
sub
in
mov
inc
lds
dec
lods
ret
xor
add
inc
add
and
or
ja
adc
sbb
xor
and
movs
stos
jae
pusha
test
sbb
and
inc
mov
push
xchg
sub
adc
lds
sbb
mov
or
gs
xor
sub
push
add
dec
or
push
inc
lea
add
sub
in
sti
dec
sub
bound
inc
cmp
bound
inc
cmp
adc
rdtsc
in
sar
pop
add
or
aaa
xor
inc
outs
jae
dec
call
cmp
in
inc
xchg
pop
push
inc
fld
mov
imul
lds
pop
clc
and
inc
ss
xchg
dec
pushaw
add
fld
xor
into
add
cmp
inc
push
outs
jb
jecxz
stos
add
loope
xchg
xchg
or
cmp
push
xchg
dec
or
daa
jns
(bad)
icebp
and
cmps
adc
and
cmp
ret
pop
call
sbb
fdivr
lods
mov
mov
pop
add
outs
call
aad
mov
or
add
test
mov
jp
xchg
or
cmp
lahf
pop
inc
aaa
mov
or
and
xor
fcomip
data16
out
daa
adc
or
pop
add
add
sub
inc
cmps
or
inc
xchg
movs
mov
mov
test
adc
dec
sub
add
or
or
iret
mov
pop
add
test
dec
test
or
xchg
scas
cmp
(bad)
mov
pop
add
(bad)
mov
das
xor
push
mov
push
stc
(bad)
push
sbb
adc
test
push
fild
pop
adc
jmp
adc
push
sbb
mov
pop
ins
add
pop
pop
adc
mov
adc
stc
cmps
loop
cmp
aaa
xchg
rcr
ja
push
pop
mov
sbb
mov
pop
push
and
in
scas
inc
or
inc
adc
sbb
add
inc
ja
push
test
adc
nop
pop
pusha
mov
and
(bad)
adc
adc
cs
dec
dec
dec
push
jmp
adc
xchg
xchg
xchg
push
dec
or
leave
leave
enter
pop
and
sbb
in
in
jae
repz
sbb
call
jbe
pop
fcomp
jmp
ja
sar
test
es
imul
push
sbb
xor
or
jmp
or
jmp
push
div
adc
cli
xor
test
jmp
sub
adc
mov
push
jmp
mov
inc
mov
fwait
mov
mov
add
add
mov
sbb
and
pop
jmp
jns
mov
adc
adc
int3
imul
mov
or
cmp
push
sbb
xchg
inc
mov
and
xchg
push
push
mov
add
push
sbb
mov
adc
add
inc
jns
add
dec
rcl
adc
in
pusha
mov
or
dec
add
sub
cmp
pop
push
mov
mov
push
lods
inc
cmps
adc
pop
xchg
rcl
sbb
sbb
call
mov
cdq
ins
or
add
retf
add
and
enter
fsubr
sbb
add
jo
push
mov
ja
or
inc
cmp
mov
inc
ror
push
(bad)
dec
ror
je
clc
push
and
cmp
popf
sub
inc
fcomp
in
imul
xlat
les
sbb
lock
add
add
daa
rol
js
arpl
or
xlat
inc
mov
jmp
rcr
test
sbb
sub
ins
add
add
test
je
sub
pop
pop
popf
rol
std
xlat
mov
push
mov
fimul
xor
add
dec
and
adc
cld
inc
(bad)
cli
inc
push
neg
cli
pop
and
leave
test
push
and
sbb
dec
or
jb
push
cmps
pandn
and
in
mov
mov
stc
cmp
adc
dec
dec
jmp
and
inc
sahf
pushf
fmul
mov
dec
dec
dec
dec
mov
daa
daa
and
mov
daa
std
inc
es
bswap
cmp
pop
sub
and
or
xor
movs
push
and
test
fmul
test
movs
cmp
sbb
shl
push
movs
add
lds
xchg
cld
movs
je
daa
sub
les
mov
movs
sbb
and
or
inc
pop
ror
(bad)
mov
adc
call
mov
or
rol
pop
jb
inc
mov
in
push
mov
adc
and
test
daa
shl
pop
or
mov
movs
test
or
dec
mov
and
movs
jae
dec
pop
xor
push
add
jns
pop
add
xchg
nop
add
movs
call
inc
cwde
add
mov
inc
retf
mov
call
add
bound
stos
sbb
test
movs
mov
mov
rol
outs
xchg
sbb
test
lds
push
push
add
mov
pop
bound
sub
and
in
rcl
stc
jns
sbb
in
cld
stc
or
add
sbb
test
dec
cmp
adc
dec
xor
push
test
xor
inc
in
or
popf
out
pop
cmp
xor
mov
data16
sbb
lock
je
ja
sub
hlt
add
fbld
adc
inc
imul
mov
aam
jle
xor
pminsw
(bad)
pop
adc
mov
push
sbb
pop
inc
lods
inc
js
lods
lahf
add
fist
loop
in
dec
cmp
push
and
pop
or
test
mov
pop
(bad)
push
cmp
in
loope
mov
dec
adc
sub
mov
inc
movs
mov
sysret
inc
cmc
adc
mov
or
sub
in
or
xor
es
test
or
fiadd
pop
leave
(bad)
rol
frstor
test
mov
push
lods
mov
sub
jo
push
jne
addr16
js
setbe
stos
mov
push
lods
sub
cs
sub
sbb
push
sbb
movs
js
add
jns
in
xchg
test
push
movs
inc
jns
test
pop
jns
imul
add
mov
sub
cmp
arpl
adc
mov
mov
mov
call
das
stos
mov
(bad)
das
addr16
mov
xor
data16
call
xor
and
xor
nop
mov
sbb
cmp
and
das
test
mov
dec
pusha
xor
adc
(bad)
push
pushf
mov
xor
adc
jo
shl
dec
dec
dec
or
(bad)
(bad)
cs
jg
pop
add
daa
dec
push
imul
cmps
pop
add
add
add
(bad)
movs
push
or
inc
adc
shr
push
xor
retf
sbb
push
and
pop
push
cs
push
xor
stc
add
sbb
(bad)
jl
aam
add
cdq
push
mov
and
mov
push
adc
jmp
outs
jo
and
fstp
test
nop
fisttp
xor
fsub
xor
push
out
das
inc
add
jnp
xor
mov
cdq
loopne
push
sub
call
shl
repnz
add
int3
mov
dec
fdiv
ffreep
lock
ja
xor
inc
fisub
add
shl
and
xor
inc
add
(bad)
ins
sti
push
adc
add
test
les
add
cmp
movs
ret
or
shr
pcmpeqw
pop
fcomp
inc
or
push
xor
adc
sbb
pop
pop
ret
pop
rcr
add
xchg
fs
out
xchg
cmps
add
inc
xor
push
loop
add
xlat
stc
xor
in
push
and
adc
es
cmp
dec
cld
mov
push
add
inc
test
aam
sub
inc
aaa
adc
mov
stc
sahf
inc
ss
lea
mov
call
and
jmp
mov
or
cmp
mov
dec
add
call
jno
es
loopne
fs
jmp
xor
or
lods
loopne
(bad)
(bad)
jb
retf
cmp
sub
push
lock
cld
mov
sub
lock
neg
sbb
inc
ja
push
adc
in
mov
or
pop
adc
js
out
mov
add
mov
popa
clc
adc
and
mov
mov
cli
xor
fcom
xchg
aaa
inc
test
movs
or
inc
add
or
(bad)
shl
push
hlt
mov
xor
shl
push
add
mov
pop
sti
nop
data16
(bad)
and
add
and
pop
popf
add
pop
cmp
sbb
and
not
fstp
outs
sbb
cli
and
xlat
add
(bad)
pop
(bad)
adc
inc
and
xchg
xchg
or
or
scas
add
inc
dec
nop
cmp
mov
clc
aas
nop
sbb
outs
jo
hlt
jb
cli
push
pop
sub
mov
ins
and
add
adc
loopne
in
push
pop
sub
dec
dec
imul
or
inc
das
ins
jno
mov
cmp
adc
or
test
test
mov
dec
jae
sub
push
addr16
adc
adc
lock
push
pop
test
sar
cmp
les
pop
dec
jecxz
add
xlat
fist
daa
int
inc
icebp
stc
cmp
inc
push
or
(bad)
movs
sbb
pop
sub
sub
(bad)
adc
dec
mov
fwait
push
inc
pusha
or
xchg
inc
xor
add
or
jmp
xlat
test
mov
les
jnp
movzx
and
add
adc
or
pop
pop
adc
xor
push
xchg
jmp
or
retf
cmp
cmp
test
loope
pop
xchg
and
add
adc
cmp
sbb
test
lea
adc
inc
int3
adc
adc
pop
(bad)
imul
xor
push
lock
sub
jae
js
test
or
add
pop
test
jo
(bad)
lock
add
add
mov
inc
push
dec
repz
scas
add
dec
add
daa
add
pop
mov
xchg
cmp
cdq
xor
fbstp
ins
cmp
inc
clc
cld
cmp
fidiv
or
enter
push
jns
cmp
mov
add
mov
jne
jge
pusha
stos
sti
pop
jnp
pop
pop
jne
ss
pop
pop
jnp
sti
sub
push
xor
xor
xchg
pop
add
push
add
icebp
and
fadd
fisub
dec
loopne
inc
retf
dec
pop
xchg
inc
adc
cld
cmp
add
lahf
lea
dec
inc
sub
mov
ds
or
sar
push
or
jbe
call
push
add
in
and
mov
les
or
push
(bad)
pusha
pop
dec
ret
mov
dec
jns
mov
xchg
mov
mov
(bad)
lock
fwait
cmp
inc
idiv
push
adc
js
(bad)
mov
ret
stos
cmp
clc
or
shr
test
sti
add
push
mov
lods
imul
cld
jecxz
mov
inc
mov
jecxz
fsubr
sbb
not
dec
add
xor
je
sbb
out
movs
lods
push
ss
jae
add
sbb
xor
sub
popa
arpl
mov
cmc
test
xor
and
idiv
inc
out
xchg
std
pusha
test
jecxz
repz
retf
les
test
wrmsr
push
inc
mov
jmp
ja
add
inc
nop
adc
sub
inc
into
jl
inc
pop
or
jne
dec
loop
out
je
add
ret
sub
fsub
sbb
jne
dec
jl
inc
(bad)
and
jnp
add
fmulp
dec
popf
pop
sbb
jne
inc
push
add
add
sbb
adc
inc
mov
push
movs
and
mov
int3
cmp
loopne
add
aaa
fsubr
mov
pop
xchg
ret
mov
or
aam
dec
xchg
retf
lahf
sub
ror
(bad)
(bad)
sbb
(bad)
pmulhuw
or
in
add
jge
mov
fs
cld
xor
sub
mov
cld
fistp
pop
sub
out
cmp
sete
xchg
mov
pushf
add
pop
mov
mov
les
add
add
cli
or
(bad)
jmp
popa
xor
pop
push
shr
loopne
xchg
sub
and
xor
cmp
xor
xchg
mov
call
inc
mov
jge
icebp
loope
and
sbb
adc
ins
mov
xor
or
cmp
ins
jl
jmp
je
cmps
mov
pop
inc
jge
xchg
adc
inc
inc
js
jmp
das
je
pusha
xchg
loope
mov
pop
rcl
adc
jo
imul
ss
jnp
sub
inc
cmp
pop
aam
or
(bad)
or
cmp
(bad)
punpckhbw
fistp
out
pop
jb
or
xor
cli
jns
rol
ins
adc
sbb
sub
sub
jbe
add
mov
nop
jmp
adc
lea
mov
push
inc
js
int
xor
mov
xor
aad
push
out
or
lea
inc
(bad)
fsubr
pop
sbb
loop
popa
ins
jae
or
dec
stos
adc
mov
inc
add
or
pop
and
add
jne
inc
loop
outs
and
test
nop
arpl
cmps
jge
or
add
pop
out
aas
sub
stc
(bad)
mov
push
mov
adc
cmp
sbb
mov
pop
repnz
jecxz
xor
lahf
lock
mov
sbb
cmp
sbb
sub
jne
or
and
push
inc
xor
aas
jne
mov
xor
cld
ret
fmul
ins
fistp
scas
or
jae
xor
sub
push
push
not
das
cld
ret
fsubr
sub
add
adc
xchg
or
xchg
add
rol
dec
lock
push
inc
aam
nop
inc
mov
fsub
in
add
ror
jo
xchg
test
add
inc
inc
push
pop
mov
add
xor
retf
loopne
add
(bad)
push
inc
and
jmp
push
adc
push
rol
mov
add
push
std
pop
inc
nop
jl
push
dec
loop
pop
add
mov
retf
cmp
mov
inc
dec
pop
sbb
dec
jo
mov
pop
xor
daa
rcl
or
cs
imul
(bad)
cmps
and
dec
push
or
jo
dec
ret
mov
lea
test
repz
ins
test
add
aam
sbb
sub
or
icebp
in
or
int3
push
and
inc
test
jle
push
sub
sbb
inc
imul
dec
add
jg
ret
or
fs
mov
outs
outs
ja
or
push
pusha
outs
addr16
outs
(bad)
adc
popa
outs
sbb
adc
inc
mov
xor
fstp
dec
add
popa
in
xlat
sub
idiv
pop
inc
and
or
pop
or
dec
mov
cmp
fmul
pop
rcl
sub
das
add
and
inc
sub
cmps
push
(bad)
fs
daa
add
xlat
or
sbb
add
loop
adc
inc
dec
stc
push
pusha
cmp
push
int3
inc
sbb
add
mov
mov
jp
push
fsub
mov
or
push
test
pop
pop
inc
test
dec
inc
ins
outs
into
sbb
jae
lea
arpl
or
xor
add
dec
jl
adc
mov
xchg
xor
push
xchg
xchg
daa
mov
push
inc
push
mov
sbb
pop
mov
movs
add
mov
std
pushf
pushf
mov
dec
gs
loope
es
cmp
dec
pushf
mov
maskmovq
not
shl
sahf
pushf
cli
xor
mov
mov
push
jo
inc
sahf
pushf
rcr
push
pusha
xchg
daa
and
iret
sbb
outs
mov
mov
xchg
jb
dec
dec
frstor
inc
fmul
and
es
pop
inc
sbb
mov
sub
dec
push
or
add
inc
test
inc
loope
mov
mov
push
dec
or
mov
mov
mov
sbb
mov
sub
and
and
imul
daa
xor
imul
inc
and
jnp
enter
cmp
inc
jae
in
inc
cmp
cmp
or
or
pop
sbb
sub
xchg
imul
mov
or
mov
adc
cmp
retf
sbb
xchg
and
cs
jnp
pop
inc
jbe
jnp
mov
add
adc
les
inc
or
iret
ret
loopne
pop
icebp
adc
inc
inc
mov
mov
nop
imul
pop
dec
ret
sbb
add
xchg
xor
or
ins
jnp
adc
and
repz
dec
push
sbb
pop
push
pusha
js
jae
hlt
pop
ret
add
and
push
ss
js
cmp
mov
adc
clc
adc
dec
ins
fs
fcom
adc
and
adc
std
dec
in
xor
inc
fs
outs
cmp
fwait
popaw
outs
mov
jg
pop
(bad)
xlat
adc
ins
das
fmul
add
or
stos
stos
out
adc
arpl
adc
adc
ins
jae
mov
xchg
shl
cmp
add
push
inc
jne
data16
stos
fiadd
push
scas
xor
or
cs
imul
cmp
pop
mov
and
jae
inc
mov
inc
sub
ins
outs
jbe
mov
loope
and
pop
ins
(bad)
adc
pop
dec
jno
loopne
call
and
adc
outs
add
or
rol
rcl
sbb
je
clc
adc
pop
push
dec
inc
jg
jecxz
popa
ins
mov
adc
mov
cmp
or
arpl
jmp
scas
jne
inc
push
stos
fld
dec
mov
outs
jb
jno
test
xlat
std
push
popa
jbe
ret
or
push
outs
lea
or
and
or
gs
add
push
dec
je
jmp
add
push
in
ins
scas
pop
add
adc
inc
nop
sub
inc
call
inc
add
pop
sub
inc
xchg
add
mov
and
pusha
dec
add
mov
shl
inc
dec
push
xchg
retf
not
and
mov
sub
xlat
(bad)
aas
pushf
cmc
xchg
inc
dec
add
aad
out
(bad)
pop
mov
movups
addr16
imul
mov
xchg
pop
jnp
xor
shl
enter
push
mov
fs
mov
jo
in
add
inc
push
add
pop
push
xor
push
mov
sti
jb
sbb
or
aas
out
add
mov
add
or
jae
mov
rol
notrack
pop
inc
dec
pop
inc
mov
fst
or
dec
and
inc
add
xor
retf
ret
test
inc
inc
sbb
and
and
lea
clc
sbb
pop
xchg
out
add
addr16
push
push
adc
lea
sbb
add
inc
push
cs
sbb
dec
jne
or
inc
nop
or
fadd
jmp
iret
lods
lahf
pop
push
adc
jmp
dec
adc
shr
xlat
outs
sbb
cmp
mov
mov
push
sbb
mov
nop
das
push
dec
in
ja
add
movs
sbb
out
mov
rcr
lods
xchg
rol
add
out
mov
cmp
sbb
rol
or
sar
adc
fs
push
scas
or
fs
cmp
mov
jae
and
clc
pop
add
fld
aas
mov
sub
nop
sbb
outs
dec
inc
sub
clc
xor
sbb
mov
retf
pop
(bad)
xor
dec
cdq
inc
pop
add
xor
pop
ret
je
inc
pusha
test
aam
and
ror
cmp
test
push
push
adc
or
dec
sbb
aas
ret
setae
rol
jmp
lea
sti
mov
imul
push
dec
or
or
cli
xor
add
fdiv
push
sub
push
cmps
or
leave
push
pop
data16
arpl
dec
pop
jns
and
add
mov
nop
sbb
shl
sub
mov
mov
and
shl
or
mov
mov
iret
mov
dec
pop
dec
dec
adc
cmp
rol
sub
in
test
iret
add
lds
adc
call
sbb
mov
iret
test
and
pop
pop
push
push
sahf
data16
jbe
or
fistp
cmc
sbb
add
outs
sub
and
mov
xchg
cmp
lock
dec
push
or
ret
sub
push
mov
push
or
outs
je
dec
or
fadd
pop
or
test
mov
inc
loope
mov
mov
es
fidiv
mov
add
popa
fnstenv
(bad)
mov
ja
fadd
mov
cmp
push
inc
iret
loop
or
cmps
xchg
add
push
push
push
test
rol
mov
dec
jp
add
and
fild
push
push
add
dec
iret
xor
mov
push
inc
add
push
push
push
jae
pop
adc
neg
cmp
ret
dec
push
inc
add
fcom
or
ja
pop
sbb
adc
sti
fiadd
push
scas
dec
mov
cs
push
push
add
push
or
or
nop
imul
or
jg
mov
js
inc
ja
add
mov
mov
mov
and
add
pop
lea
inc
and
mov
or
mov
mov
jae
xor
dec
add
stos
ins
mov
mov
cwde
and
sbb
mov
mov
push
sub
and
jmp
jmp
and
shl
dec
mov
enter
in
frstor
push
push
pop
push
push
imul
xchg
retf
ror
push
pop
mov
pop
push
push
pop
fist
fwait
mov
xchg
enter
daa
outs
je
or
js
cli
cmp
outs
ins
retf
add
cmps
loopne
sbb
pop
pop
shl
test
fwait
dec
loopne
or
or
mov
and
sbb
pop
cmp
inc
cdq
test
jl
sbb
dec
pop
int3
imul
popa
imul
add
mov
mov
xor
add
and
sbb
mov
cmp
loopne
popa
mov
pop
ins
mov
jnp
pop
ret
add
leave
bound
sub
sar
jns
in
shl
push
jne
mov
in
hlt
and
push
adc
push
xchg
aaa
inc
inc
mov
aaa
scas
push
sbb
data16
sub
mov
jmp
xor
or
(bad)
mov
xchg
push
add
es
cmp
or
out
fisttp
or
jne
inc
movs
xchg
and
rcr
sub
push
sub
jge
add
repz
test
and
add
or
sub
sub
adc
adc
xchg
mov
inc
mov
add
add
or
add
inc
add
mov
mov
add
aas
out
xor
mov
mov
out
test
in
ret
mov
call
push
cmps
outs
adc
pop
in
add
clc
(bad)
push
add
dec
pop
jbe
gs
cs
scas
xor
sbb
inc
pop
ss
xchg
jo
ins
add
push
fsub
ins
aaa
inc
shl
shr
scas
inc
ins
mul
pop
jnp
jb
add
cmps
loop
std
scas
dec
outs
ins
add
pop
push
ins
cmps
ja
pop
lods
inc
mov
ja
aaa
inc
xor
push
mov
push
ja
(bad)
sbb
jne
popa
out
push
outs
inc
xor
sbb
inc
shr
xor
call
push
jo
push
loop
inc
(bad)
sbb
or
inc
add
or
outs
dec
imul
dec
mov
arpl
je
ret
mov
loope
fs
xorps
add
and
inc
push
pop
cmps
xlat
push
mov
xor
or
stos
in
cmc
push
sbb
adc
inc
xchg
out
sub
inc
aas
dec
pop
fadd
test
xchg
sbb
cmp
popa
add
cmp
xlat
or
out
pop
dec
rol
pop
pop
pusha
clc
jp
mov
iret
mov
rol
ja
or
movs
pusha
push
pop
or
jnp
and
push
mov
inc
inc
pop
or
pop
jp
push
outs
cs
outs
mov
or
aaa
mov
xchg
pop
out
cmps
add
adc
pop
jle
outs
inc
inc
add
stos
push
sbb
aas
lahf
push
daa
xchg
(bad)
aaa
inc
add
add
aas
daa
inc
shl
push
pop
or
sub
dec
pop
out
push
push
jl
arpl
ins
add
cmps
pop
add
lods
sub
scas
dec
dec
push
push
test
push
push
call
pop
add
dec
test
lea
out
lock
call
jl
push
push
and
jno
inc
push
fnstcw
xchg
jecxz
pop
fnstsw
jecxz
adc
(bad)
mov
jmp
pop
push
add
test
mov
into
frstor
mov
cmp
add
or
or
mov
adc
(bad)
inc
sbb
test
mov
enter
jo
out
fld
fwait
mov
sub
cmovg
inc
clc
push
(bad)
jno
ja
pop
inc
lds
lods
push
stos
pop
js
inc
shl
ins
sub
ror
stos
cmps
dec
jp
packuswb
daa
popa
lahf
daa
(bad)
outs
rol
imul
jne
xor
daa
adc
and
(bad)
push
sbb
outs
add
fs
cmp
jbe
and
pop
inc
ins
add
je
imul
sahf
not
imul
adc
pop
fs
push
mov
retf
cmps
and
scas
or
sar
jae
gs
push
cmp
daa
inc
shl
mov
outs
adc
jo
inc
sbb
fwait
and
xor
shr
pop
jp
push
imul
ja
inc
mov
add
inc
jns
popa
add
clc
jo
mov
ss
arpl
loope
addr16
sti
outs
add
cs
lods
jbe
pop
mov
rol
dec
mov
imul
lods
inc
cmp
xchg
push
dec
aas
addr16
cwde
or
popa
lahf
push
mov
or
in
xorps
add
add
div
(bad)
popa
dec
jb
add
xchg
jae
add
push
cmp
add
adc
add
push
dec
add
add
leave
gs
add
out
add
jae
gs
inc
and
mov
pop
cmps
jo
imul
xor
jae
xadd
push
add
push
inc
push
pop
xor
gs
mov
or
fist
out
add
bound
mov
add
push
dec
ins
sub
in
sub
outs
cmps
jae
je
or
pusha
push
push
gs
mov
into
add
add
inc
pop
jmp
jmp
or
inc
call
pop
mov
push
sbb
adc
or
dec
push
fwait
or
push
aas
jns
pop
ins
sub
jns
push
ret
pop
ja
mov
cmp
dec
inc
mov
add
or
pop
mov
rol
out
ds
or
add
out
ds
scas
cmp
add
fadd
retf
jg
mov
mov
push
mov
ja
outs
lsl
loopne
cmovg
fwait
add
clc
data16
cmps
sbb
shl
adc
or
sbb
or
scas
inc
dec
(bad)
mov
adc
mov
dec
mov
mov
add
pop
mov
or
sub
pop
and
mov
test
mov
mov
fcom
pop
jo
or
add
mov
pop
das
mov
scas
push
inc
pop
or
push
(bad)
add
or
loopne
dec
outs
pop
dec
add
fadd
lods
sbb
add
enter
aas
gs
jne
ret
sbb
or
pusha
push
cmovg
push
pusha
or
push
add
push
mov
inc
test
adc
shr
and
xchg
add
xlat
mov
addr16
sbb
pop
xchg
outs
dec
sbb
dec
rol
dec
add
jo
les
mov
aam
dec
push
mov
stos
imul
popa
fwait
push
push
outs
mov
pop
push
jns
push
cmp
(bad)
dec
mov
add
fwait
sbb
adc
cs
jle
bound
iret
sub
add
aaa
add
mov
test
mov
stos
test
pop
imul
mov
scas
out
pop
cmp
inc
inc
out
pop
jo
loopne
push
sti
popa
cmps
jo
lods
jo
loop
pop
push
dec
push
out
dec
jb
jne
aas
mov
lea
add
cmp
fs
mov
rcl
dec
(bad)
mov
ds
aas
push
add
push
push
test
sahf
cmp
xor
cli
outs
dec
jns
popa
add
rcl
push
push
jmp
je
mov
or
add
or
or
pusha
stos
dec
xchg
loopne
inc
or
add
adc
(bad)
pop
add
imul
pop
outs
add
test
push
cpuid
rcr
or
stos
adc
mov
scas
xchg
or
bound
pop
and
addr16
mov
shl
mov
jno
and
ret
dec
and
rol
mov
push
xchg
ins
jmp
jmp
loopne
inc
push
addr16
je
fimul
pusha
adc
popa
daa
aas
push
cmp
adc
or
stos
inc
retf
imul
sub
in
push
push
aas
aas
adc
push
and
aam
test
test
pop
pop
test
adc
sbb
push
push
and
imul
push
or
mov
pop
or
fiadd
dec
ins
xor
cmp
jns
cmp
fadd
jne
sbb
push
pop
sbb
sbb
add
push
inc
pop
add
mov
and
loope
push
add
pop
cmp
mov
mov
daa
add
jo
push
test
pop
(bad)
mov
cmp
mov
imul
add
or
push
push
pop
pop
bound
(bad)
loopne
ret
mov
ins
lods
test
pop
xor
pop
js
pop
inc
movs
movq
add
pop
cmp
sbb
fisttp
xchg
je
mov
add
or
shr
push
in
cmp
mov
jle
cld
test
and
pushf
xchg
inc
add
or
mov
pop
pop
outs
and
pop
(bad)
mov
data16
test
test
outs
xchg
sub
out
lock
jl
push
fist
test
call
(bad)
mov
or
gs
shl
xchg
xchg
xchg
daa
sub
sub
sub
cs
xchg
xchg
xchg
das
adc
adc
adc
push
xchg
xchg
xchg
xchg
pop
sbb
sbb
sbb
push
xchg
xchg
xchg
xchg
pop
add
add
add
push
xchg
xchg
xchg
xchg
pop
or
or
or
push
leave
leave
enter
(bad)
icebp
repnz
leave
leave
leave
repz
cmc
test
leave
leave
idiv
stc
cli
leave
leave
leave
leave
sti
cld
std
dec
leave
leave
leave
jmp
loope
leave
leave
leave
leave
jecxz
in
leave
leave
leave
leave
out
jmp
leave
jmp
in
out
leave
leave
leave
leave
out
rcl
ror
leave
leave
leave
rcl
aad
leave
leave
leave
leave
xlat
fcomp
fcmove
leave
leave
leave
fcmovnu
fstp
leave
leave
leave
leave
ffreep
rol
leave
leave
leave
ret
(bad)
(bad)
leave
leave
leave
(bad)
enter
movs
iret
leave
retf
int3
int3
mov
dec
out
cmp
pop
aam
fisub
cmovne
cmp
jo
imul
add
push
arpl
ins
and
mov
pop
push
adc
xchg
xchg
sbb
sub
(bad)
pop
xchg
add
pop
cmp
push
add
push
or
pop
inc
or
lea
std
cmp
jg
push
push
sbb
inc
outs
outs
je
nop
inc
jnp
and
fldcw
push
gs
iret
or
imul
sub
rcr
in
dec
rol
push
push
je
dec
add
jnp
inc
push
and
bnd
xor
(bad)
cdq
add
jle
cmp
hlt
inc
push
push
imul
imul
add
xchg
add
div
outs
enter
jae
outs
jp
push
sahf
jae
repnz
push
or
adc
sar
push
mov
int
in
gs
jb
or
add
mov
inc
ins
cmp
int3
inc
adc
jmp
out
mov
push
or
fs
jge
sub
ins
inc
call
test
pop
js
ins
dec
outs
jo
je
lods
jmp
jns
sbb
or
inc
fnstsw
sbb
sbb
mov
jnp
pop
xor
aas
mov
mov
pop
outs
jb
pop
adc
adc
pop
xchg
cmc
adc
push
mov
rol
jo
stos
mov
outs
jb
cmp
ret
add
or
not
lds
bound
pop
mov
lahf
shl
bound
bound
das
or
push
dec
mov
jp
ins
or
mov
or
popa
outs
outs
fdivr
outs
jb
jae
es
pop
dec
cld
iret
or
shr
inc
add
push
inc
jo
dec
out
ja
jnp
mov
add
mov
add
(bad)
jl
(bad)
mov
ror
fs
data16
loopne
pop
xchg
adc
das
push
sbb
or
call
js
stos
adc
rcl
adc
jne
adc
fiadd
cmp
mov
pop
xor
xchg
push
mov
mov
adc
pop
(bad)
lods
cmc
or
add
pop
add
pop
cmp
mov
stos
movs
jnp
rol
mov
cld
das
inc
add
js
xchg
push
lock
push
xchg
and
out
imul
sbb
mov
jnp
(bad)
push
add
fimul
adc
mov
je
add
pop
push
xor
push
and
imul
xchg
and
cdq
ja
or
ret
push
jge
fadd
cmp
dec
scas
(bad)
dec
xchg
inc
imul
ror
sbb
ds
pop
test
push
add
call
adc
(bad)
dec
lea
mov
or
in
pmulhrw
adc
xchg
mov
rcr
pop
cmps
inc
rcl
sahf
xchg
shr
cmp
add
js
cmps
jns
xlat
mov
push
call
jns
or
dec
nop
cmps
lock
stos
movs
call
dec
xchg
out
div
push
fwait
mov
idiv
adc
imul
push
jo
mov
push
mov
test
fsubp
sub
call
and
add
pop
lds
pop
pop
ins
push
or
aam
pop
jmp
dec
mov
push
aas
ret
and
xchg
scas
pop
sbb
jbe
(bad)
sar
adc
ret
fidiv
sbb
xchg
add
pushf
fdiv
ins
pop
push
(bad)
jl
inc
add
jbe
inc
add
adc
or
aas
dec
cwde
or
add
jns
fcom
dec
pop
jnp
movs
inc
add
cmp
xlat
jg
cli
pop
add
aad
mov
inc
pushf
clc
dec
xor
add
outs
sbb
ss
mov
push
cmp
sub
call
add
mov
pop
mov
mov
ss
or
daa
data16
cs
das
xchg
cmps
push
or
pop
add
inc
inc
inc
cs
je
mov
lds
push
mov
or
fs
pop
cmp
add
in
mul
sub
sbb
add
into
jae
shl
jns
shr
add
push
and
in
cli
adc
and
sti
inc
cmps
add
js
call
enter
jg
xchg
pop
xchg
dec
das
or
xchg
jg
push
jl
in
mov
in
cli
jmp
ss
jge
xchg
das
pop
nop
dec
push
pop
sbb
add
ds
call
outs
ficom
ins
call
aas
push
loope
popa
add
add
xchg
pop
mov
sti
xor
std
jge
sub
pop
xchg
ss
aas
lsl
sbb
pop
fild
jmp
or
mov
iret
js
(bad)
icebp
and
std
jnp
cwde
daa
jno
mov
enter
cmp
or
pop
mov
xchg
push
sub
inc
cwde
cmc
addr16
mov
push
jns
pop
inc
enter
cwde
mov
lds
idiv
les
inc
sbb
nop
sub
add
adc
inc
ret
cmp
inc
stos
into
mov
dec
mov
jl
add
pushf
add
mov
add
dec
cdq
inc
ins
mov
cld
or
cdq
outs
mov
dec
sti
and
inc
lock
mov
daa
cs
lods
jl
jo
inc
mov
cmc
jnp
sbb
cmc
jne
inc
ins
xor
data16
push
aam
data16
adc
xor
jge
stos
fstp
jle
or
cs
es
shl
or
or
(bad)
jl
ins
pop
or
or
and
cdq
sbb
add
or
add
push
add
daa
mov
push
inc
or
adc
dec
pusha
push
outs
push
or
andpd
frstor
mov
loopne
je
xchg
fwait
popf
pop
push
mov
push
je
outs
ins
or
fdiv
bound
pop
arpl
es
in
add
mov
ss
add
sbb
inc
ins
movs
ins
sub
jae
sbb
or
mov
popa
bound
sbb
cmc
dec
add
jmp
in
data16
aaa
push
adc
enter
cmp
inc
pop
adc
gs
cdq
mov
jge
push
or
add
sbb
dec
or
sbb
jo
or
rol
pop
or
mov
out
imul
sbb
hlt
mov
push
mov
fmul
rol
imul
jge
or
lea
loope
stos
fcom
gs
pushf
mov
push
mov
movs
(bad)
pushf
rcr
dec
pop
mov
push
jns
stos
icebp
mov
add
(bad)
fmul
in
loopne
inc
pop
clc
ss
inc
aas
push
test
xchg
loopne
cmps
sub
or
ud2
push
setg
inc
xchg
retf
lea
cmp
and
movs
xor
fisttp
cmp
nop
retf
repnz
fnstsw
lahf
prefetch
mov
ltr
lock
mov
adc
lds
test
mov
pop
adc
add
mov
pop
pop
rsqrtps
sbb
mul
stos
clc
bndldx
xchg
jg
scas
jbe
nop
nop
mov
aad
movs
cmps
push
push
and
jno
fnstsw
loop
xor
mov
mov
das
neg
and
inc
cmps
pmaxsw
(bad)
add
and
sqrtps
xor
mov
shl
test
pop
or
int3
scas
xor
inc
jb
inc
adc
or
xchg
push
adc
fsub
stos
add
sbb
xor
js
ins
cs
adc
xor
or
pop
or
xor
jbe
bound
add
add
or
call
mov
js
sbb
or
add
add
push
mov
inc
ret
inc
jne
mov
ins
jg
iret
retf
pop
mov
gs
and
jg
movs
(bad)
repnz
push
jg
and
(bad)
jg
daa
test
out
cmp
add
sub
cmp
(bad)
nop
or
cmp
jb
ror
aas
inc
scas
inc
jb
ja
lahf
cli
stos
popa
mov
pop
arpl
adc
popa
xchg
icebp
sar
add
mov
cmp
mov
ret
fadd
inc
pop
jb
call
add
mov
and
jb
or
lea
adc
ins
lods
pop
or
or
fisubr
push
xor
or
out
mov
retf
or
or
add
inc
loopne
das
adc
push
in
or
cmp
and
add
push
pop
sub
add
mov
mov
push
imul
push
inc
push
lock
shl
sbb
sub
fst
jp
adc
and
pop
push
add
and
push
inc
ja
mov
and
inc
adc
inc
scas
ins
jno
mov
ins
mov
jo
in
add
adc
xchg
stos
add
add
adc
shl
jne
popa
mov
inc
pop
test
or
lea
neg
lock
and
sbb
je
jge
or
outs
xor
inc
xchg
daa
in
pop
adc
test
pusha
sub
and
add
inc
test
cmp
pop
fst
pop
sbb
shl
and
ins
add
add
sbb
cmp
xchg
cld
fwait
ror
imul
mov
push
enter
or
loope
mov
movs
jo
or
addr16
add
sub
add
in
push
push
outs
ins
jns
sub
add
inc
adc
std
jge
or
pop
dec
jnp
jg
imul
rcl
mov
es
pushf
imul
jne
fs
pop
ins
test
in
or
imul
cmps
push
mov
push
mov
mov
adc
or
or
addr16
inc
adc
mov
sbb
lea
push
xchg
les
stos
xchg
mov
jae
test
xchg
mov
aad
fist
dec
xchg
adc
push
xor
lods
mov
jo
push
test
inc
lods
sbb
rol
inc
ins
fild
push
js
push
mov
es
push
in
ds
mov
(bad)
jl
push
sub
test
and
data16
ins
call
or
or
cmc
jns
pop
movs
loopne
or
out
cmp
movs
shr
or
mov
fcomp
fisub
push
mov
in
push
movsx
inc
cmp
sub
(bad)
enter
push
mov
push
dec
ficomp
scas
add
dec
das
data16
inc
or
add
push
cmp
xor
push
inc
lds
xor
lods
lods
sbb
sub
push
mov
pop
stos
pop
add
lods
mov
cmp
retf
and
prefetch
push
scas
test
iret
sub
call
scas
mov
jne
push
mov
adc
in
add
inc
mov
adc
add
push
add
pop
xor
in
push
push
fidivr
sbb
mov
add
push
hlt
add
mov
mov
pusha
push
syscall
iret
ds
sbb
movd
out
sub
jg
and
sti
and
mov
mov
shr
loopne
paddsb
(bad)
add
(bad)
sub
pop
mov
push
or
inc
ja
repnz
enter
jge
sub
dec
dec
adc
clc
mov
inc
and
xchg
sub
inc
jp
mov
sub
inc
dec
clc
mov
add
clc
mov
adc
imul
add
es
add
or
jecxz
mov
retf
cmp
cmp
xor
mov
dec
inc
aad
mov
pop
mov
je
inc
xchg
adc
push
or
leave
or
sub
push
movs
add
inc
or
push
sbb
aas
imul
push
add
and
imul
stos
imul
or
add
leave
xchg
dec
jmp
mov
add
add
or
push
inc
adc
mov
das
and
xor
daa
or
push
inc
adc
mov
or
add
inc
mov
mov
dec
sub
xor
add
inc
cmp
jns
clc
mov
sbb
inc
xchg
xor
mov
jne
ret
mov
repnz
sahf
sbb
inc
clc
mov
and
and
pop
cmove
pop
sbb
gs
test
mov
add
(bad)
cmp
icebp
mov
push
cmp
push
test
add
(bad)
xchg
xchg
test
test
jmp
fcom
pop
pop
popa
xchg
data16
mov
push
or
ds
adc
push
out
mov
fwait
pusha
adc
pushf
sbb
addr16
push
pop
jp
addr16
call
sbb
sub
mov
call
ret
add
rol
jne
xchg
mov
cmp
pusha
lahf
pop
inc
xor
add
xchg
add
shr
add
inc
arpl
pop
test
(bad)
add
jns
and
fs
ins
jmp
sbb
and
cmps
add
rcr
mov
pop
xor
mov
(bad)
push
mov
mov
push
or
fiadd
setns
stos
(bad)
dec
imul
nop
ret
mov
xor
sbb
add
movs
push
fcomp
aaa
or
into
scas
pusha
jnp
outs
adc
xor
add
or
pop
jg
repz
jmp
es
pop
pusha
jmp
sbb
pusha
mov
push
adc
ror
push
jl
imul
in
jp
repz
pop
call
sub
enter
push
jp
pop
inc
sub
pop
jg
jle
test
sub
xchg
es
lods
inc
(bad)
sbb
sbb
xchg
pop
jnp
int
test
or
inc
sub
push
push
sbb
mov
jle
push
mov
ja
push
scas
shl
out
add
add
outs
loopne
mov
mov
imul
and
inc
push
bound
(bad)
out
test
or
mov
gs
in
add
push
dec
add
call
adc
pop
mov
jle
mov
cli
sbb
popa
mov
loop
ins
std
(bad)
jl
or
or
sti
lea
fnsave
aas
push
movs
mov
add
dec
jae
loope
arpl
dec
xchg
jne
shl
add
jo
imul
fst
or
pop
mov
sbb
adc
mov
ja
push
repz
test
popa
ins
jg
inc
into
inc
add
xor
gs
pop
repz
fdivr
adc
fs
mov
pop
sbb
pop
leave
repnz
jns
or
setle
add
fisttp
or
fisttp
adc
pusha
int
add
call
std
lock
add
mov
loope
mov
adc
xchg
sar
xchg
movs
add
pop
jmp
stos
mov
xor
mov
int3
jp
pop
mov
or
cmc
adc
pop
cmp
add
add
call
lods
mov
sub
mov
xor
aas
imul
xchg
jmp
outs
push
or
push
mov
mov
xchg
or
xor
imul
inc
dec
push
test
mov
outs
sub
xor
add
or
jne
jo
jae
clc
lock
in
ins
cmp
add
ins
add
loope
add
cmps
pop
sub
(bad)
sbb
rcr
fdivr
fcomp
rcr
jmp
sub
cmps
add
je
(bad)
jnp
sti
cmp
icebp
push
and
sahf
out
shl
or
sub
inc
test
ss
aaa
inc
cmp
xchg
push
push
cmp
not
adc
sbb
xlat
clc
xor
lock
sub
loopne
cwde
sub
adc
inc
and
sahf
outs
shl
xor
xchg
sar
sbb
rcr
scas
mov
pop
mov
andnps
fwait
add
std
(bad)
cld
in
scas
loopne
test
ror
sahf
add
test
fidiv
add
push
sbb
loope
ss
mov
xchg
and
les
rcl
cmp
add
inc
and
pushf
pop
test
lahf
daa
rcl
inc
push
xor
sub
call
dec
bound
test
jge
jl
lea
adc
gs
ret
pop
call
or
fadd
ins
aas
leave
xor
ror
arpl
jo
push
lods
fist
and
pop
in
loope
mov
arpl
mov
mov
push
outs
jb
inc
or
xor
mov
fadd
jnp
das
dec
pop
shl
gs
xchg
(bad)
clc
add
adc
cmp
pop
mov
je
adc
pop
test
lods
retf
xchg
xchg
(bad)
xchg
xchg
xchg
xchg
xor
xchg
outs
rol
add
inc
add
xor
jno
loope
sbb
call
sub
xchg
xor
pop
adc
cmp
jecxz
fadd
popa
mov
or
add
push
int3
js
dec
lods
cmp
or
std
xor
popa
imul
gs
ret
xor
adc
mov
push
xchg
push
xor
lock
mov
add
jbe
push
pop
leave
or
push
(bad)
lods
ret
ja
or
push
push
shr
push
jb
xor
add
js
pop
push
pop
lods
xor
pusha
jae
(bad)
jge
js
or
add
js
das
jno
push
or
call
push
jg
lds
sub
ror
aad
sub
inc
push
inc
cmp
xchg
dec
inc
jnp
clc
or
lods
push
mov
inc
add
rcl
inc
jmp
gs
jo
stc
xor
scas
push
sub
and
push
push
mov
cmp
dec
loope
fadd
jns
pop
xor
pushf
pusha
shr
push
aas
(bad)
fnstenv
fsub
or
das
jno
out
mov
or
cmp
in
cmp
test
push
rol
daa
jge
inc
out
push
rol
xor
cmp
jnp
dec
lahf
push
push
mov
sub
mov
jnp
pop
push
dec
pop
inc
jbe
jle
push
cwde
sar
enter
push
inc
jmp
sub
inc
outs
loop
pop
icebp
movs
arpl
jnp
dec
mov
cmp
mov
add
nop
je
push
add
(bad)
ror
sbb
cmp
xchg
(bad)
fmul
or
and
mov
or
sbb
push
int3
je
ror
push
or
stos
add
dec
mov
pop
ds
je
cmp
or
mov
daa
cwde
std
push
int3
cmp
sub
imul
jns
int3
rcl
and
int3
ss
mov
push
int3
push
and
jno
add
ror
inc
cmc
or
pop
stos
imul
aad
int3
fidiv
push
or
mov
popa
xor
ds
adc
sub
fs
fwait
dec
and
fsubr
aas
inc
or
add
sub
movsx
loope
or
inc
call
add
mov
dec
lock
das
dec
dec
xchg
cmp
loope
lea
mov
jno
and
jl
pop
rcl
int
mov
into
push
push
scas
into
das
mov
push
js
test
or
mov
or
inc
loopne
fst
and
shr
and
nop
fmul
cmp
inc
dec
inc
push
ins
loopne
add
test
inc
add
push
clc
adc
sbb
shl
ret
std
mov
inc
leave
into
xor
adc
icebp
cmp
or
lock
aad
cmp
xchg
jno
int
sub
dec
sub
mov
or
or
add
mov
fmul
inc
inc
pop
push
test
sti
xchg
pop
shr
fs
jo
push
push
inc
sahf
pop
sub
(bad)
enter
enter
pop
sub
rcl
jno
xor
jp
lods
popf
sbb
inc
ins
and
out
jo
mov
or
mov
dec
adc
ins
movlps
ins
test
imul
shl
push
push
inc
iret
aad
push
push
mov
jne
pop
or
imul
aam
sar
dec
int
movs
shr
das
cmps
push
inc
repnz
adc
test
in
adc
pop
pop
pop
bound
cmp
in
sub
lock
cld
mov
push
inc
jbe
jbe
jl
adc
push
sub
(bad)
imul
ins
push
nop
jl
out
repz
push
cwde
cmp
xchg
cld
push
pop
pop
pop
ror
jne
lock
xlat
clc
ins
adc
retf
mov
xor
clc
push
mov
add
xor
out
jae
ror
or
xor
and
add
(bad)
mov
push
mov
sbb
mov
inc
pop
add
cmp
inc
aas
int
scas
mov
std
mov
or
rcl
sti
shr
ins
jl
xor
fisttp
adc
clc
sbb
in
ss
cmp
das
xchg
cmpps
jp
icebp
and
dec
xchg
inc
ret
fld
popa
lfs
out
pop
stc
cmp
loop
daa
gs
(bad)
mov
xlat
or
call
(bad)
mov
pop
mov
pop
outs
je
sub
cmp
or
gs
dec
mov
push
daa
adc
imul
push
in
(bad)
ds
loop
and
xor
or
push
push
add
jae
mov
ins
jns
cmp
cwde
fldenv
xor
mov
popa
mov
mul
mov
pop
in
pop
pop
gs
sub
retf
in
(bad)
xchg
cwde
sub
leave
add
sbb
inc
cmp
fistp
rol
dec
pop
or
push
xchg
jns
(bad)
push
mov
loope
mov
aaa
jns
popa
ins
test
push
push
je
or
push
loope
sbb
push
lods
adc
sub
lods
add
bound
les
not
arpl
cdq
cmp
(bad)
adc
cmp
dec
mov
add
add
scas
push
iret
pop
xchg
int3
shl
daa
jbe
or
(bad)
enter
or
enter
fadd
cwde
daa
cs
ret
sahf
fiadd
dec
or
adc
add
dec
mov
dec
loopne
and
rol
xchg
xor
push
mov
add
jbe
or
pop
push
imul
outs
cwde
in
test
ror
xchg
dec
and
xor
mov
and
cwde
jge
dec
sahf
or
jo
(bad)
shl
adc
xchg
xchg
jmp
mov
ja
das
xor
das
xchg
push
push
dec
les
jge
hlt
push
aad
(bad)
mov
dec
gs
in
jns
fadd
add
adc
xchg
add
inc
dec
test
cmp
mov
(bad)
mov
mov
xlat
sbb
dec
lahf
pop
ins
inc
bound
mov
stos
push
ficomp
mov
in
shl
das
(bad)
fld
sub
pop
pop
push
ins
les
sbb
push
(bad)
mov
add
bt
test
loope
(bad)
movs
push
test
inc
scas
fadd
pop
lods
cmp
call
iret
cld
test
xor
xchg
mov
out
jmp
popa
add
out
push
jb
jne
dec
mov
push
std
mov
xor
(bad)
mov
(bad)
jmp
pop
mov
pop
push
fdiv
jbe
adc
and
mov
xchg
ja
or
pop
je
montmul
cmps
add
nop
inc
and
fidiv
or
dec
ss
jae
fidiv
dec
mov
pop
cmp
imul
or
fdivp
sub
and
test
push
lods
cmp
imul
hlt
fldenv
mov
rol
fiadd
mov
and
pushf
jmp
push
ficom
add
fidiv
mov
fadd
adc
mov
push
aaa
dec
cli
adc
std
jns
aas
cmp
ja
inc
ins
jo
push
outs
addr16
dec
jo
push
sbb
add
or
push
dec
push
push
inc
add
fmul
cmp
arpl
rcr
inc
je
push
sbb
pop
push
push
push
loope
dec
push
push
dec
sub
mov
xchg
clc
push
jns
adc
nop
mov
jns
call
add
push
pusha
nop
dec
xchg
pop
xchg
mov
push
lea
sub
ja
jo
add
add
inc
cmps
or
shl
inc
sbb
xor
or
pop
(bad)
fidiv
nop
arpl
loop
sub
inc
or
pop
loopne
sbb
cs
cmp
add
mov
jb
dec
out
pcmpgtw
push
xor
sbb
dec
xor
jmp
loope
jl
jge
xchg
loope
loope
movhps
loop
daa
cli
pop
jecxz
nop
nop
xor
mov
outs
in
sbb
(bad)
ins
mov
ss
mov
jecxz
pop
or
les
or
jns
mov
jne
jecxz
ja
inc
add
and
add
lock
das
and
add
sub
pop
mov
scas
(bad)
add
push
jno
fs
or
mov
jp
clc
(bad)
sti
fwait
call
rcl
inc
or
inc
xor
mov
fdecstp
jge
mov
in
daa
jne
add
mov
adc
sete
rcr
add
add
or
inc
inc
dec
inc
add
lock
loope
int
and
xor
push
ds
dec
add
inc
icebp
sub
or
sar
shr
ror
jle
ror
int
add
rcr
ret
add
pop
add
in
js
inc
daa
add
in
sub
or
ret
daa
(bad)
iret
push
cmp
cmp
xchg
push
add
aam
pop
call
push
fsub
sbb
das
popa
out
add
pop
mov
in
or
ds
inc
add
aas
push
pushf
mov
aas
push
or
movs
inc
add
add
mov
lea
out
push
sub
out
bswap
or
leave
test
call
pop
push
fisttp
sbb
mov
dec
jmp
jge
push
(bad)
shl
pop
or
lods
inc
rol
jmp
mov
xlat
push
jno
dec
pop
or
(bad)
or
push
add
xor
xlat
cmp
retf
and
mov
and
je
dec
xlat
js
and
adc
rol
xor
push
add
sbb
xchg
jg
arpl
pop
or
add
add
outs
pop
stos
push
or
fmul
pop
and
pushf
push
fisubr
pop
xchg
push
and
jl
dec
repnz
dec
test
mov
(bad)
jmp
(bad)
int3
dec
or
jle
mov
push
out
(bad)
in
or
lods
unpcklps
cmp
into
or
xor
(bad)
inc
and
ror
rol
xor
inc
dec
pop
jo
shl
mov
pop
add
and
sbb
xchg
pop
popa
rcl
mov
push
mov
cmp
fnstenv
add
xchg
or
inc
test
dec
pusha
xchg
es
je
or
fisttp
dec
xchg
lock
and
adc
xor
cmp
jne
ret
dec
cmp
stos
test
pop
std
sbb
dec
cmp
mov
inc
loopne
loope
add
or
push
mov
retf
or
or
sbb
mov
lods
lahf
dec
sbb
enter
dec
cmp
inc
shl
push
inc
scas
sbb
sbb
sub
test
xchg
(bad)
push
and
movs
sub
pop
fucomip
sub
fsubp
xchg
mov
aaa
inc
clc
mov
add
xor
in
mov
mov
push
cs
add
les
outs
dec
xchg
push
sub
add
add
pop
dec
jecxz
jmp
add
adc
shl
inc
lock
dec
adc
outs
adc
xchg
jmp
mov
shl
sbb
or
jp
dec
sub
pop
mov
add
push
movs
into
add
popa
mov
inc
xchg
add
mov
sub
dec
div
and
or
push
fidivr
cmp
in
mov
pop
ret
xchg
icebp
mov
adc
inc
loopne
leave
popf
pop
hlt
repz
sub
push
rol
rcr
js
jo
popf
adc
jo
icebp
inc
jmp
lea
xlat
sbb
and
movs
fldenv
cmp
adc
or
sub
and
push
dec
cmp
adc
rcr
mov
loop
popa
shl
cmp
jge
push
dec
in
inc
jmp
push
repnz
add
cmp
pop
or
mov
or
add
inc
ins
mov
dec
xchg
(bad)
call
jo
pusha
(bad)
pop
or
jle
addr16
sub
pop
add
and
not
jae
push
jg
mov
jg
fadd
mov
or
pop
cld
outs
push
sub
fist
fbld
push
stos
push
in
or
add
mov
mov
xchg
ret
iret
ins
call
hlt
xchg
pop
pop
add
and
out
dec
and
sub
mov
(bad)
jns
rol
(bad)
push
ret
ja
or
push
(bad)
cmp
mov
ss
add
xchg
or
stos
std
jnp
dec
inc
sub
push
add
pop
mov
pop
push
pop
and
inc
mov
jbe
loope
jae
ficom
inc
out
push
push
scas
ror
ss
jl
scas
fadd
dec
mov
push
mov
call
inc
xor
ret
xor
xor
adc
add
js
movs
adc
outs
dec
jp
(bad)
inc
mov
or
push
push
xor
or
cmovs
sti
scas
sar
push
xor
mov
jnp
inc
push
dec
inc
or
pop
adc
sbb
ret
daa
pop
mov
mov
pop
lds
es
xor
jle
mov
clc
stos
mov
push
mov
mov
(bad)
pop
push
in
(bad)
ins
add
mov
loope
inc
xor
jae
sti
mov
movs
rep
pop
or
cmp
lea
push
push
or
lock
lock
pop
movs
cmp
aas
aam
or
mov
movs
jmp
mov
or
mov
lea
nop
jmp
xchg
movs
fldenv
adc
jl
jno
je
and
or
pop
and
or
cdq
add
inc
and
add
fs
loop
shr
ret
loopne
jo
ret
mov
cmp
inc
dec
push
aas
test
xchg
jle
mov
call
mov
fisub
sbb
iret
mov
inc
add
xchg
sbb
outs
push
push
and
cmp
ret
scas
(bad)
loopne
add
loopne
or
mov
ds
fdiv
sti
repz
mov
das
fiadd
les
push
xor
pusha
mov
and
xchg
test
je
jne
cld
mov
aaa
jns
mov
call
pop
lock
mov
pop
or
mov
inc
inc
adc
popa
inc
stos
test
inc
int3
jo
cli
xlat
mov
pop
test
pop
pop
rdmsr
pop
mov
and
hlt
sub
sbb
fwait
js
pop
sar
push
sbb
cmp
xchg
data16
std
ret
mov
psubusw
push
out
rcr
mov
loopne
cdq
fwait
shl
inc
adc
rol
add
ins
sti
sbb
test
pop
push
and
pop
imul
ficomp
pop
nop
stos
xchg
sbb
cwde
add
pop
movs
pop
pushf
push
test
mov
(bad)
jmp
adc
cdq
test
sbb
or
jo
and
adc
fucomp
shr
add
stos
or
scas
mov
add
or
loopne
mov
cmovg
and
and
sub
lods
mov
fcmovnu
push
cld
inc
out
jmp
and
inc
nop
rol
xchg
clc
aaa
or
mov
add
and
inc
cmc
push
push
(bad)
cmc
cmp
or
stos
cmp
in
mov
pop
jmp
test
push
test
fidivr
clc
push
push
or
or
stos
add
or
dec
stos
cmp
loop
cmp
inc
sbb
stos
ret
cdq
(bad)
popa
in
pop
pop
(bad)
push
ins
and
rcl
push
pop
or
push
outs
mov
add
sub
shl
adc
sub
nop
inc
sbb
lds
adc
ret
nop
pop
test
lds
adc
push
repz
ja
mov
jl
pop
and
and
or
dec
cmovno
inc
pop
inc
adc
sbb
or
add
mov
dec
push
pop
rol
add
push
mov
push
pop
sbb
inc
jmp
dec
and
in
cmc
xor
neg
cmc
loop
and
test
push
and
add
mov
jecxz
xor
pop
and
sbb
adc
push
and
aad
es
mov
adc
pop
push
movs
and
inc
and
and
or
push
cmp
je
jne
mov
sub
sbb
mov
outs
mov
pushf
and
cwde
shr
jne
push
and
xchg
or
stc
adc
push
ja
(bad)
icebp
push
or
dec
cmp
jge
add
shr
(bad)
(bad)
mov
pop
cmp
call
cs
rcl
add
jp
adc
not
out
mov
inc
or
rcl
sub
inc
jo
jl
jle
mov
retf
dec
movs
mov
cld
push
push
mov
scas
add
xor
mov
daa
or
mul
xor
mov
retf
stos
mov
mov
sbb
cs
in
push
mov
and
dec
aam
or
push
icebp
xchg
aaa
pop
fsub
pop
mov
add
sbb
pop
and
nop
dec
push
push
mov
jns
pushf
sar
sti
js
or
mov
shr
pushf
mov
sti
mov
sti
(bad)
test
xchg
nop
xchg
or
push
popa
xchg
xchg
mov
pusha
xchg
test
push
lahf
push
es
push
jmp
jmp
adc
or
sbb
dec
iret
jmp
and
push
std
sbb
inc
js
add
and
data16
inc
in
dec
loopne
dec
sbb
sbb
fisttp
inc
icebp
jge
mov
adc
cwde
lods
sub
dec
adc
jmp
cwde
or
retf
cmps
ja
sub
cmp
movs
sub
out
in
mov
or
iret
frndint
jecxz
xchg
jns
je
push
push
inc
xchg
outs
dec
je
add
or
pop
sub
pop
jmp
mov
xor
jge
lahf
adc
push
xlat
pop
dec
xor
xor
inc
add
or
inc
jmp
or
mov
mov
cmp
mov
push
dec
sub
push
outs
js
add
adc
addr16
and
cmp
js
cs
xchg
mov
inc
or
inc
(bad)
inc
xchg
push
push
inc
jbe
push
pop
pop
je
cmp
pop
das
leave
test
dec
(bad)
nop
add
sbb
test
mov
jmp
pushf
jmp
xchg
and
cmps
arpl
pop
ds
sbb
icebp
nop
cmp
jne
adc
or
xchg
out
js
bound
add
mov
xchg
pop
call
rcl
xor
inc
pop
jl
jl
nop
jecxz
mov
rcl
add
rol
xor
push
add
jmp
fcmovne
and
test
jmp
ins
jmp
ja
adc
icebp
or
adc
mov
arpl
inc
push
call
add
(bad)
aam
sbb
in
int3
das
outs
dec
das
dec
fiadd
arpl
jl
xchg
sbb
mov
mov
or
cs
push
mov
ret
cmps
xchg
mov
xchg
push
daa
xchg
mov
dec
push
ds
js
push
inc
sbb
inc
mov
out
pusha
sub
mov
xchg
scas
sub
pop
das
sub
pop
dec
imul
cdq
add
xor
ins
pusha
add
dec
sbb
and
jle
mov
jg
fcomp
and
dec
sub
pop
sbb
or
pop
leave
sub
push
loop
add
clc
aas
xor
jle
mov
pop
pop
rol
nop
xchg
out
push
jmp
sbb
out
push
dec
or
(bad)
inc
push
mov
int3
call
xlat
inc
add
add
jo
and
pop
add
push
or
(bad)
mov
add
jo
pop
add
inc
outs
push
inc
adc
xchg
dec
lea
jge
and
mov
pop
adc
add
enter
fisub
add
sub
wbinvd
adc
and
pushw
lods
cwde
jge
adc
jae
outs
and
and
mov
or
fadd
add
cmps
inc
and
dec
pop
inc
adc
nop
or
shl
and
pop
or
xchg
add
or
iret
pop
lahf
pop
inc
adc
loopne
inc
cld
mov
add
scas
sbb
in
or
pop
mov
cdq
add
jnp
cmp
sub
add
neg
hlt
jae
add
and
add
mov
add
ins
in
loopne
dec
neg
loopne
dec
fdiv
cs
loope
xchg
fprem
xor
dec
lea
or
in
imul
fdiv
pop
je
push
add
sub
pop
xchg
add
add
daa
or
retf
mov
ror
clc
imul
mov
add
and
and
push
pop
call
push
sub
inc
loopne
or
jge
test
and
test
adc
xchg
aaa
enter
rol
push
ja
fidiv
push
call
push
ss
imul
pop
loop
xchg
or
loopne
out
inc
pusha
sub
js
bound
and
cwde
mov
sbb
fdivr
test
xor
jecxz
add
imul
mov
dec
or
or
adc
pop
cmp
(bad)
cmps
push
enter
imul
popa
push
pop
sbb
or
push
mov
pop
shr
enter
or
mov
and
or
xor
and
add
sub
push
push
push
or
jo
ss
ins
or
(bad)
mov
and
pop
je
and
mov
xchg
shl
cmp
repz
dec
jecxz
pusha
int3
or
ror
adc
mov
sub
and
outs
dec
mov
shr
sbb
xor
iret
jg
mov
adc
shl
shl
or
adc
xchg
nop
retf
add
mov
and
cmp
or
or
mov
mov
or
adc
or
jae
add
(bad)
jno
popa
adc
out
or
(bad)
dec
(bad)
fmul
sbb
fs
fcomp
add
js
sbb
or
mov
pop
sub
xor
mov
sbb
pop
jb
or
push
inc
xor
xchg
(bad)
rol
jge
fnstenv
in
jbe
or
in
or
adc
pushf
add
and
fst
test
sub
dec
ret
ja
inc
push
inc
push
mov
cmp
push
xor
nop
push
inc
ja
shl
popa
and
in
lahf
mov
adc
call
test
stos
add
and
ja
movs
icebp
fist
jg
inc
sbb
add
mov
int3
lahf
pop
gs
inc
iret
fsubr
add
hlt
rol
ret
pop
unpckhps
jo
and
sbb
psubb
mov
repnz
add
pop
test
push
mov
(bad)
movs
jp
sbb
jb
or
(bad)
xchg
imul
adc
fcom
cmc
and
add
arpl
aad
rol
push
adc
jmp
outs
or
pop
push
cmova
add
add
dec
aam
cmp
ret
pop
repnz
gs
add
mov
and
(bad)
mov
add
sub
div
sbb
lock
lods
or
push
in
jmp
xchg
xchg
ficom
call
push
call
bound
icebp
jmp
je
loopne
inc
or
fiadd
and
adc
cmp
xchg
xor
xchg
mov
call
push
loop
iret
pop
call
inc
pushf
cmp
nop
retf
push
or
mov
enter
je
xor
sar
in
rcr
test
dec
cmp
clc
stc
jg
iret
xchg
pop
sahf
pop
lods
nop
adc
loopne
sbb
sub
pop
clc
push
lock
cmp
mov
mul
push
push
inc
or
lea
iret
xchg
out
pop
imul
add
push
loop
inc
daa
add
call
ret
mov
clc
mov
sbb
test
pop
and
xchg
ja
inc
shl
mov
sbb
sbb
fs
pop
ret
inc
idiv
pusha
sub
add
mov
je
movs
or
js
or
fidivr
add
ja
adc
mov
push
cwde
int
fwait
enter
inc
seta
es
dec
data16
dec
not
mov
es
inc
cmp
cmp
sar
mov
cwde
push
or
or
prefetcht2
fdivr
mov
mov
cmp
push
push
gs
loop
inc
or
or
xor
pop
jg
mov
arpl
sub
push
inc
aad
dec
ret
lea
push
sbb
cmp
xor
push
pop
in
pop
cmp
shl
sbb
scas
(bad)
mov
ret
je
test
daa
adc
sub
xchg
pushf
(bad)
jle
mov
pusha
fcmove
in
mov
dec
sti
xor
hlt
push
add
jbe
out
and
push
or
mov
or
inc
cs
scas
cmp
in
dec
pop
ret
push
aam
in
je
inc
dec
jns
add
loop
mov
mov
(bad)
mov
mov
mov
xchg
loopne
jle
lods
repnz
out
test
aas
sbb
xor
inc
and
jbe
bound
adc
das
rcl
(bad)
aas
add
mov
dec
or
mov
or
pop
cmp
add
das
je
pop
inc
ret
cmp
add
cmp
mov
cmp
lods
adc
iret
mov
shr
test
adc
pop
inc
inc
test
push
add
jp
push
shr
pop
inc
add
push
js
sbb
add
test
daa
adc
sub
das
lea
pop
push
add
sub
jmp
ja
or
jae
test
fs
imul
add
cld
popa
int3
mov
iret
int3
out
sub
hlt
dec
fxch
popa
and
call
pop
mov
inc
int3
push
push
outs
push
loope
push
jp
xor
add
cmps
mov
bound
fisubr
cmc
ret
fs
fwait
imul
xor
js
stc
lods
adc
fsub
movs
fild
mov
sub
call
int
jmp
sbb
test
or
dec
out
pop
(bad)
sahf
fs
push
fidiv
push
xchg
jb
arpl
adc
or
mov
inc
fdiv
cmp
mov
rcl
dec
js
and
pop
dec
mov
ret
loopne
mov
xchg
push
dec
sbb
cmp
not
and
xor
inc
add
ret
mov
push
fsub
push
xchg
xchg
or
loop
sbb
leave
jne
sub
sbb
popf
jne
mov
sbb
je
mov
aad
xchg
or
sub
mov
int3
and
push
and
ss
and
sub
push
xchg
movs
sbb
mov
mov
mov
test
adc
sbb
into
mov
mov
add
(bad)
icebp
cmps
dec
and
popa
ja
jbe
push
sub
dec
jmp
jns
(bad)
popa
imul
push
mov
mov
pop
sbb
pshufw
inc
inc
das
inc
cmc
add
cmc
sbb
bound
add
mov
add
dec
jmp
pop
and
push
je
lds
ss
pop
add
enter
punpckhdq
adc
mov
pop
or
inc
iret
ret
ret
and
mov
jnp
xchg
lea
add
dec
pop
add
sub
std
fwait
add
mov
mov
dec
push
fcmovnb
mov
add
pop
aas
js
imul
xor
aas
dec
or
add
rol
inc
jnp
lea
add
test
int
pop
inc
jne
ds
dec
add
cmp
mov
push
adc
push
dec
pusha
jmp
pop
push
das
and
mov
or
lahf
hlt
sub
dec
inc
lods
cmps
ss
cmps
outs
cmp
add
adc
bswap
shr
mov
dec
jns
jmp
push
xor
and
(bad)
mov
sti
mov
sub
shl
mov
mov
jmp
ja
sahf
sti
fisub
test
push
cdq
cmp
add
cli
fs
cld
or
pop
clc
push
mov
add
mov
push
sbb
push
ret
lahf
sub
jl
mov
or
cmp
sbb
rol
jne
ds
lahf
popa
cmp
cli
ret
sub
push
inc
arpl
std
jnp
mov
lea
jmp
push
cmp
arpl
imul
cmp
fsub
data16
or
clc
les
pop
out
(bad)
loopne
push
sbb
or
pusha
clc
retf
inc
xchg
cmp
sbb
retf
sbb
jmp
adc
or
test
push
mov
pop
push
inc
add
or
outs
pusha
gs
mov
xchg
inc
adc
ds
mov
pop
mov
push
add
lea
add
cmp
mov
push
push
pop
clc
pop
sahf
pop
mov
inc
fnsave
(bad)
and
aas
and
mov
adc
ret
mov
cmp
ret
sub
adc
add
cmc
or
or
jg
and
or
les
or
or
xor
add
ret
js
mov
push
push
pop
dec
shl
mov
push
push
imul
cmp
cmp
inc
push
outs
push
dec
iret
fdiv
fidivr
bound
test
in
mov
mov
or
es
in
jmp
adc
push
cld
std
ss
push
cs
in
lock
push
test
js
or
jne
xor
jge
add
add
jb
adc
add
mov
xlat
lock
mov
jo
cmp
or
inc
jno
jle
hlt
cmp
hlt
and
loop
cmp
add
cld
mov
xchg
inc
pop
enter
xor
ret
jno
and
sub
and
ror
out
cld
push
addr16
nop
add
popa
in
mov
jo
push
jo
push
jg
push
jns
inc
cmp
and
add
movs
push
pop
xor
mov
test
daa
pop
push
sub
or
xor
pop
sub
jmp
xor
sub
sub
inc
add
sahf
adc
jo
ins
mov
mov
sub
adc
fadd
or
mov
dec
mov
dec
repnz
shl
rol
(bad)
fwait
pop
or
arpl
mov
or
repnz
xor
sub
add
je
cmp
jg
dec
sub
add
dec
cmp
xor
enter
jg
adc
mov
jge
xchg
and
icebp
sub
pop
popa
and
or
enter
add
mov
repnz
pop
cmp
es
sub
enter
int
out
ficom
add
pusha
jne
push
not
or
mov
mov
or
call
xchg
adc
xchg
and
push
dec
and
xchg
sbb
scas
push
mov
or
in
inc
mov
push
jg
or
cmp
stc
xchg
ins
and
mov
mov
xchg
test
outs
jge
or
shr
add
sub
ret
(bad)
mov
jg
or
jl
push
inc
lea
mov
ins
sahf
je
dec
add
mov
sbb
test
push
mov
mov
add
push
mov
shl
cmp
aaa
jmp
and
gs
mov
cmp
cdq
cmp
cmp
or
add
fild
and
add
add
jg
add
sub
(bad)
mov
dec
clc
pop
aam
rcl
das
les
pop
repnz
lea
mov
push
fs
mov
push
test
jbe
sbb
pop
cwde
add
nop
cmc
mov
ins
mov
mov
sbb
lods
adc
sti
shl
pop
xor
jecxz
jge
mov
dec
rol
push
push
mov
lods
mov
push
mov
test
cmps
inc
in
mov
std
and
or
mov
sub
cmp
jmp
rol
in
loope
xor
or
sbb
mov
cli
aam
jmp
in
xlat
push
push
or
xor
or
jmp
test
push
jo
out
or
or
inc
add
push
adc
call
loop
jmp
ficom
push
push
retf
inc
aaa
pop
leave
inc
(bad)
push
jmp
mov
ret
js
sub
mov
arpl
sbb
or
jmp
and
sub
mov
push
and
jmp
and
cmovs
lock
sub
jmp
mov
lea
mov
jmp
adc
sub
idiv
js
pop
xchg
data16
or
inc
and
inc
jmp
or
and
add
push
stos
inc
push
push
sub
lods
loopne
pop
addr16
xor
mov
add
mov
js
icebp
inc
cmp
icebp
add
adc
and
adc
cmp
imul
add
add
es
xchg
or
add
mov
sbb
add
pop
adc
(bad)
mov
scas
rcr
xchg
add
push
jno
es
xor
push
(bad)
fild
shl
(bad)
mov
outs
loop
xchg
fst
ret
dec
push
out
jns
push
jecxz
jmp
xchg
(bad)
add
inc
push
rcr
xchg
clc
call
popf
push
mov
lods
scas
je
cmp
test
inc
(bad)
test
add
inc
lods
outs
imul
sbb
jg
mov
sub
add
mov
clc
dec
in
mul
pop
add
sar
in
add
dec
and
inc
inc
push
pop
xlat
retf
ins
add
adc
add
shl
mov
dec
cmp
loope
mov
inc
repnz
and
int3
push
inc
add
push
pop
js
xor
push
add
or
sub
shr
imul
xchg
fwait
jns
fidiv
mov
push
repz
lods
or
lods
not
inc
lock
mov
xor
jle
push
movs
push
mov
enter
add
or
loopne
test
mov
dec
aas
imul
out
sub
imul
cmp
adc
jmp
adc
or
xor
loopne
inc
xchg
sub
mov
adc
mov
or
test
and
push
ror
pop
mov
adc
loopne
inc
adc
and
ins
mov
daa
aas
adc
pop
ret
das
test
scas
test
add
push
push
in
dec
add
in
sub
loope
sbb
stos
pop
sbb
jo
sub
pop
les
sub
pop
pop
(bad)
dec
sub
pop
fistp
or
mov
out
lock
push
ror
sbb
inc
jl
call
xchg
inc
add
mov
ret
(bad)
adc
arpl
inc
ret
mov
fcom
push
jmp
pop
int3
imul
mov
mov
add
daa
sar
jg
dec
or
jne
pop
pop
push
dec
inc
push
push
xor
sub
lods
cvtps2pd
push
or
and
and
inc
imul
inc
sub
je
cli
fsubr
inc
dec
adc
xchg
jmp
push
and
add
and
sbb
pop
sbb
fs
and
inc
add
jmp
add
and
jo
idiv
mov
(bad)
pusha
pop
xor
or
and
aad
jbe
ret
adc
or
(bad)
xchg
sbb
or
das
and
pop
pop
out
pop
mov
jno
pop
scas
pop
ret
pop
or
pop
inc
sub
xchg
pusha
push
sub
pop
or
jecxz
inc
inc
cmp
mov
adc
not
ret
xor
out
sbb
fmul
mov
addr16
pusha
dec
loopne
aad
or
add
add
add
ret
sbb
add
test
sbb
or
jae
or
jb
inc
sub
(bad)
ret
pop
(bad)
sub
fld
push
das
mov
adc
or
lds
(bad)
xor
imul
jmp
push
stc
mov
sub
pop
daa
or
movd
hlt
retf
cmps
pop
sub
shr
outs
jmp
mov
dec
popf
fs
dec
test
loopne
pop
add
ret
retf
push
or
dec
add
xchg
daa
add
push
sbb
adc
mov
push
jle
popa
and
mov
push
dec
fadd
cmp
mov
not
jae
or
clc
mov
shl
add
ds
data16
pop
inc
jne
sbb
sbb
not
add
or
or
dec
test
div
add
mov
aaa
sbb
and
cwde
test
das
sub
sbb
inc
cmc
ret
xor
and
out
daa
out
and
nop
mov
mov
and
clc
mov
or
sahf
in
add
fxtract
mov
xchg
repnz
js
lock
and
enter
in
mov
xor
mov
pop
jge
mov
inc
fisttp
(bad)
jo
or
and
and
ja
ins
add
add
gs
sbb
mov
outs
or
add
mov
daa
bound
push
je
mov
mov
loopne
push
test
mov
xor
lock
dec
jne
cmps
push
adc
rcr
jmp
cmp
clc
inc
jmp
fcom
jecxz
add
jl
retf
mov
dec
fmul
mov
inc
fcomp
loopne
clc
pop
(bad)
lock
das
push
xor
cmp
test
or
add
aas
and
pop
or
mov
sub
lock
fdivr
pop
into
popa
mov
or
xor
xor
xor
mov
mov
xor
outs
lahf
pextrw
xor
inc
mov
push
not
sub
mov
dec
push
mov
int3
jo
fdiv
out
xor
out
idiv
xor
daa
xchg
das
ret
add
call
pop
and
test
retf
or
stc
add
repnz
xchg
xor
xor
popa
sub
repnz
xor
cwde
xor
imul
adc
dec
fidiv
imul
imul
ins
push
rol
imul
inc
mov
in
mov
xor
push
ret
adc
pop
and
mov
xlat
pop
add
jle
push
bound
mov
add
shl
je
and
popa
or
ins
mov
sbb
and
(bad)
and
mov
push
jecxz
rcl
add
or
adc
test
aaa
call
repz
sahf
jmp
fld
mov
dec
sbb
xlat
aad
sub
jg
rcl
adc
rcl
mov
dec
ret
adc
and
pop
cwde
mov
lods
test
in
xor
push
or
mov
or
cmps
inc
or
cmps
jg
imul
jb
mov
mov
imul
aad
add
add
fadd
sbb
iret
dec
ret
(bad)
out
jne
or
push
push
aas
cmp
mov
call
push
mov
ret
push
and
mov
imul
dec
cmp
or
retf
js
lea
push
mov
pop
adc
enter
and
sub
fisttp
push
add
add
movntps
stos
in
push
lock
push
mov
adc
sbb
ins
je
cld
sbb
stos
cmp
fsub
inc
or
hlt
sbb
pop
push
cmps
inc
mov
shl
mov
push
push
xchg
dec
dec
add
(bad)
adc
inc
cmp
inc
and
mov
jne
sbb
lds
or
jmp
dec
dec
sub
test
shl
or
add
clc
inc
cmp
lods
sub
push
daa
call
xchg
popf
mov
cmps
and
fimul
repnz
imul
lods
es
test
mov
cmp
inc
popf
add
ins
sub
push
add
lahf
mov
aas
jno
inc
pusha
lock
dec
clc
adc
out
ss
cmp
dec
pop
dec
ret
fild
add
jmp
push
dec
repz
and
pop
dec
xchg
dec
or
inc
mov
pusha
hlt
inc
cmp
sar
lea
cmp
push
int3
popa
jmp
and
popa
cmp
jb
outs
hlt
ds
popf
or
mov
in
adc
add
mov
push
xor
sub
(bad)
inc
add
nop
sbb
fimul
sbb
pop
test
jmp
xchg
xchg
je
or
add
xor
adc
xchg
or
int
hlt
sbb
mov
push
punpcklwd
gs
mov
test
stc
push
test
jo
stos
dec
fadd
repz
adc
div
fidiv
jo
pop
sbb
int
daa
movs
or
push
or
mov
or
jnp
ret
setne
mov
lahf
sbb
cmp
inc
outs
daa
in
pop
dec
sub
mov
add
es
sbb
xor
pop
or
and
nop
mov
and
cmps
jne
push
pop
cmp
pop
mov
or
inc
or
(bad)
sub
sysret
sbb
push
and
and
(bad)
(bad)
mov
(bad)
fild
in
inc
adc
imul
pop
and
inc
sub
int
outs
out
mov
mov
sub
test
jmp
lods
(bad)
imul
retf
inc
push
mov
sbb
dec
mov
clc
je
adc
(bad)
repz
and
stos
and
adc
fsubr
sbb
cli
cmc
je
jg
inc
ret
and
or
push
push
mov
scas
jne
loope
push
call
pop
jo
xor
and
adc
in
test
or
inc
or
xor
adc
mov
pop
pop
inc
pop
icebp
inc
call
jle
add
cmp
push
sub
cmp
clc
ret
push
popa
js
js
cmp
push
fbld
mov
inc
push
xchg
(bad)
xchg
sbb
mov
fidiv
jns
cs
inc
pushaw
dec
mov
in
inc
push
add
inc
sub
add
mov
xchg
xor
adc
and
mov
adc
xchg
and
std
pop
retf
dec
loopne
jle
movs
mov
data16
jp
sbb
add
push
lahf
mov
cld
sti
fsubr
push
fs
push
rcr
(bad)
adc
jmp
push
add
sub
cmps
popf
cdq
push
ins
iret
mov
leave
push
mov
ret
loope
or
das
or
ret
xchg
cmp
fsub
jne
ror
arpl
scas
push
and
jo
dec
cmp
clc
jle
and
xor
cmp
gs
mov
jns
push
adc
mov
(bad)
xor
(bad)
mov
push
pusha
mov
pop
sbb
ret
ret
gs
dec
xor
scas
(bad)
or
pop
aaa
add
mov
jmp
daa
push
outs
(bad)
jmp
sub
aaa
xor
pop
bound
push
std
add
push
adc
ins
test
jp
imul
not
ret
bound
or
shl
or
daa
cmp
loopne
add
cwde
xchg
cmp
test
lahf
nop
push
in
and
nop
mov
call
jge
and
inc
je
ins
sahf
mov
adc
call
popf
and
adc
push
lea
mov
mov
adc
pop
or
and
ins
cdq
add
aad
jns
stc
xor
add
jl
mov
aas
or
sub
xor
inc
sti
add
lods
sbb
push
adc
cs
add
mov
in
icebp
dec
inc
cmp
xchg
pusha
(bad)
(bad)
dec
ficom
cmp
aaa
(bad)
xor
(bad)
int
adc
call
cmp
inc
outs
loopne
retf
sub
pop
sar
inc
cmp
adc
test
xor
push
sbb
push
loope
mov
add
mov
retf
movsx
push
push
in
ret
sahf
or
adc
mov
jl
mov
xor
aam
push
jo
ret
aad
pusha
add
loopne
test
fisub
retf
repnz
pop
adc
pop
add
xchg
inc
nop
xchg
cmp
mov
gs
mov
add
jg
adc
pop
sbb
popf
xor
imul
cmp
push
xor
jecxz
(bad)
push
or
rol
cld
sar
sub
fidiv
je
out
or
mov
sbb
xor
push
sub
call
cmp
lods
stos
dec
mov
adc
loop
and
je
cmp
or
cmp
inc
cmp
or
add
popf
dec
sti
add
mov
lock
adc
adc
test
sbb
nop
xchg
mov
push
and
sub
pop
push
(bad)
icebp
sbb
xchg
and
push
movupd
loopne
or
jo
or
retf
shr
aas
pop
push
loope
shr
pop
fs
hlt
add
jle
ss
aaa
sbb
in
ret
pop
xor
add
xor
sbb
fcomp
adc
jbe
je
popa
les
shl
dec
dec
and
and
or
or
test
xchg
retf
sbb
push
mov
in
push
jmp
fiadd
pop
or
pop
ins
jle
mov
mov
xchg
cmps
or
mov
ret
lock
cmp
sbb
mov
fistp
push
mov
jo
add
aad
iret
add
add
xlat
pop
ror
retf
fstp
mov
mov
mov
pushf
push
sbb
push
and
mov
or
inc
test
outs
rol
mov
xchg
xchg
and
hlt
out
xor
jle
add
cmp
push
loopne
imul
sub
pop
xchg
pusha
lahf
mov
pusha
adc
in
mov
dec
fisttp
and
lock
sbb
and
enter
ret
xor
mov
mov
push
cmc
sub
push
test
stos
blci
add
cld
loope
sbb
je
jp
test
jb
inc
pop
push
and
sub
loopne
jns
mov
(bad)
ror
push
enter
inc
sub
adc
pop
sub
jo
xchg
push
repnz
dec
imul
call
inc
or
std
add
ror
addr16
cmp
cld
jno
jb
push
mov
inc
sbb
aas
fucompp
push
xchg
add
clc
ret
push
test
pop
pusha
jle
ins
(bad)
mov
inc
test
test
inc
sahf
adc
enter
dec
mov
sbb
and
inc
ret
dec
and
nop
mov
fdiv
addr16
inc
sbb
push
add
dec
sub
(bad)
retf
out
stos
jne
ret
out
enter
aad
or
js
jmp
fistp
add
xor
js
bound
imul
adc
dec
push
cmp
lock
dec
ds
das
call
mov
add
or
je
cmp
nop
inc
pop
mov
fadd
test
arpl
sub
pusha
sub
jl
ins
test
(bad)
dec
inc
and
loop
push
ins
mov
aaa
adc
mov
lock
or
sbb
mov
popf
pop
inc
xlat
daa
xchg
or
cmp
sti
outs
and
pop
in
je
fsubr
xor
mov
imul
xor
shl
adc
push
mov
pop
or
and
push
push
repnz
stos
inc
add
ins
mov
pop
pop
jno
xchg
aas
pop
mov
mov
call
push
dec
sbb
mov
add
cs
ror
imul
js
hlt
push
xor
imul
push
pop
mov
adc
adc
xchg
or
mov
mov
add
sub
xchg
xrelease
in
aam
loopne
neg
cmp
je
dec
push
push
aam
fsub
ins
mov
xchg
cmc
and
inc
cmp
xchg
or
adc
xchg
clc
pop
pusha
sub
push
outs
mov
pop
cmp
shl
fdivr
sbb
and
xor
cs
push
cld
popf
jo
and
inc
jmp
adc
dec
pop
setb
nop
rol
xchg
test
retf
mov
adc
ds
imul
dec
xor
dec
les
dec
push
lahf
sbb
js
hlt
pop
loop
(bad)
mov
(bad)
pop
dec
adc
push
push
fidiv
mov
add
rcr
sbb
sub
and
arpl
push
push
add
aam
jg
mov
dec
cmp
adc
jno
add
packuswb
and
jo
adc
pop
mov
adc
es
xchg
and
rol
ins
loope
mov
add
mov
and
pop
cmp
inc
or
or
shl
(bad)
jmp
inc
adc
sbb
pop
(bad)
sbb
cs
(bad)
clc
das
push
sub
sahf
retf
jns
or
xchg
jle
inc
lea
push
push
adc
jp
shl
jb
ja
dec
or
pop
push
std
fimul
or
push
fisub
and
int
jnp
adc
fstp
loope
retf
shl
imul
je
xor
mov
jne
movs
es
add
pop
data16
adc
mov
and
dec
cwde
jmp
cmp
mov
repnz
add
add
push
inc
outs
punpckhbw
lds
or
dec
fild
mov
sbb
and
cdq
or
and
aam
xor
add
add
sbb
add
out
ds
nop
mov
sbb
sbb
clc
sbb
arpl
loope
mov
int3
push
outs
push
and
sub
inc
scas
pop
jmp
jae
adc
mov
pop
fs
inc
or
mov
jne
push
addr16
iret
or
or
pand
jl
popa
mov
(bad)
inc
mov
mov
aas
fadd
mov
fld
xchg
test
adc
es
mov
and
cmc
dec
push
sti
cmp
arpl
dec
dec
mov
out
sbb
cmp
(bad)
sbb
jnp
aam
add
and
lods
inc
shr
(bad)
fistp
int3
sub
data16
sbb
loopne
cmp
sbb
push
and
cmps
mov
jmp
xor
adc
sbb
lea
adc
hlt
cmp
nop
xchg
add
xor
jbe
mov
pop
and
cmp
xchg
fsub
ins
and
push
fdivr
inc
mov
clc
adc
and
and
jl
and
mov
inc
mov
adc
jp
add
aad
inc
mov
lea
aam
fadd
nop
mov
cmp
xchg
cmp
and
inc
cmp
jne
scas
pusha
inc
jo
jbe
xchg
aam
sub
mov
or
xchg
mov
es
neg
add
sub
popa
and
sbb
jp
gs
(bad)
shr
xchg
test
cmp
add
add
xor
pop
sub
shr
xchg
test
dec
add
out
ins
cmp
sub
mov
dec
(bad)
jmp
inc
popa
mov
or
adc
js
popa
sbb
pop
mov
call
lods
xchg
nop
add
and
and
add
add
push
cmp
(bad)
je
mov
daa
mov
loope
lock
mov
aaa
call
sar
add
loopne
add
jo
dec
loopne
jnp
adc
sub
sti
push
inc
push
or
out
shl
cmp
xor
ins
xor
push
push
(bad)
loope
or
mov
outs
and
ret
lock
call
addr16
inc
shl
sahf
push
and
in
and
(bad)
push
jg
mov
ror
inc
loopne
add
or
adc
sbb
inc
xor
jne
mov
(bad)
cmc
mov
test
jne
or
daa
or
add
pop
movs
push
jg
push
mov
push
xchg
and
sub
dec
add
add
sub
jecxz
and
inc
and
iret
emms
and
cwde
mov
dec
mov
inc
add
and
mov
in
(bad)
pop
jne
inc
sub
sbb
inc
addr16
inc
test
dec
mov
dec
fmulp
pop
scas
cmps
push
pop
mov
out
add
lock
test
add
dec
cmp
mov
cmp
push
push
test
push
psubsb
aas
hlt
push
add
fld
sub
(bad)
push
mov
or
mov
sub
lahf
test
jge
je
push
call
hlt
loop
inc
repz
js
mov
jo
popa
xor
and
movs
pop
ror
jmp
loop
aaa
mov
add
push
pop
push
stc
rcl
cwde
mov
and
inc
cmp
add
cmp
test
js
cmp
add
ret
pop
xor
pop
pop
add
fwait
test
jne
call
add
js
jle
adc
mov
xchg
xchg
movs
fadd
scas
push
add
jo
es
repz
std
sub
fstp
adc
and
xchg
cmp
addr16
cmp
cli
repnz
pop
pop
addr16
cmp
jmp
mov
stos
xchg
fisubr
frstor
xlat
pop
xor
push
push
add
(bad)
lods
and
cld
or
add
jge
jg
xor
push
xlat
movs
sbb
or
cmp
popa
or
ret
adc
retf
test
pop
push
adc
xchg
push
cmp
or
mov
pop
add
add
cli
es
xor
sbb
dec
xchg
jno
fisttp
add
jmp
mov
xchg
movs
or
dec
add
jge
cmps
cmps
add
push
dec
push
sar
add
sub
fnsave
adc
mov
sbb
xlat
scas
add
test
fadd
pop
sbb
mov
test
fwait
dec
mov
js
aaa
cmp
jb
pop
sbb
or
pusha
ret
and
inc
and
sbb
push
enter
stos
enter
add
loopne
add
pop
addr16
bound
pop
mov
adc
mov
hlt
adc
pop
adc
popa
rcr
jnp
push
push
and
ror
inc
or
jmp
(bad)
movzx
push
dec
in
scas
rcr
xchg
add
or
lea
pop
sti
mov
kmovw
loope
cmp
das
sbb
sbb
cli
pop
aam
mov
pop
jnp
sub
dec
add
add
xor
lods
xor
or
pop
or
push
fnstsw
popa
dec
and
add
test
cmp
inc
arpl
and
in
mov
and
sub
push
retf
gs
add
pop
jmp
dec
rcl
in
mov
jae
push
ins
mov
aaa
test
call
jno
mov
dec
sbb
push
loope
in
int
jmp
add
jne
loope
sbb
movs
add
loopne
ret
xchg
cli
push
test
mov
ds
adc
xor
repz
fwait
or
mov
(bad)
jge
add
(bad)
fwait
jmp
adc
add
dec
mov
cmp
fs
add
inc
mov
movs
and
dec
push
xchg
call
push
add
cmps
jbe
mov
and
fs
add
ret
pop
lock
jle
pop
aam
jnp
add
sub
lea
xor
and
mov
cmp
lods
(bad)
xor
icebp
and
or
push
and
mul
sub
mov
add
pusha
sub
sti
sbb
aam
and
jmp
dec
inc
dec
lahf
inc
adc
bound
sbb
sbb
add
add
sbb
(bad)
mov
cmp
and
(bad)
(bad)
mov
adc
mov
or
pcmpeqb
adc
pop
sbb
or
pop
fld
les
push
or
add
dec
in
sub
cmps
test
icebp
addr16
xor
push
lahf
add
inc
cli
bound
js
add
xchg
lods
and
jecxz
loope
add
mov
mov
dec
jge
lea
lea
dec
rcr
jg
je
dec
push
add
mov
je
jmp
or
je
or
je
jmp
mov
xor
pop
dec
add
add
sub
clc
push
cmp
pop
test
jmp
cmp
and
sbb
ficom
mov
jmp
mov
or
sbb
mov
sbb
popa
cmp
push
imul
mov
je
push
and
xor
jl
mov
mov
sub
movd
clc
loopne
and
jnp
pop
les
mov
ret
cmp
add
in
jp
or
test
mov
push
dec
loop
scas
call
inc
jne
fdivr
mov
std
lea
call
adc
pop
sub
imul
in
scas
dec
cmp
lods
cmp
dec
sub
push
adc
jge
das
mov
daa
push
cmp
and
daa
data16
or
xchg
popa
sub
int3
or
sub
inc
inc
cmp
ja
inc
enter
inc
movs
fisubr
sbb
mov
dec
lock
sbb
add
add
dec
jns
or
sub
(bad)
push
cmp
jg
test
ret
adc
pop
and
idiv
pop
cmp
out
in
jne
inc
dec
or
nop
push
cmp
xor
ret
push
inc
jmp
test
inc
js
sbb
mov
inc
loopne
push
adc
xor
data16
gs
jo
bound
add
dec
or
rcr
sbb
push
lds
sub
outs
sub
mov
fisub
gs
mov
sub
fld
leave
push
xor
mov
and
add
mov
sub
or
nop
and
add
dec
adc
or
shl
ja
jae
sub
inc
adc
push
enter
rcr
aas
add
adc
lock
xor
imul
ins
test
inc
or
xchg
push
or
sahf
push
das
pop
push
pop
mov
xchg
mov
push
adc
dec
ins
cmp
sub
pop
(bad)
bound
sub
in
push
hlt
pop
fst
add
mov
test
das
movs
dec
mov
jmp
imul
sti
sti
(bad)
lods
inc
add
mov
(bad)
push
add
ret
add
sti
pop
mov
add
inc
mov
adc
out
cmps
shr
xor
imul
outs
inc
mov
inc
lock
inc
inc
or
jae
adc
xlat
dec
mov
dec
push
add
mov
sub
jge
adc
(bad)
je
push
sahf
or
call
mov
push
mov
or
sub
push
mov
adc
jge
outs
daa
out
in
outs
leave
adc
adc
inc
rol
push
sub
jmp
mov
mov
inc
lods
xchg
js
repnz
cwde
sub
pusha
add
inc
xor
aaa
adc
add
adc
test
(bad)
stos
mov
stos
inc
retf
ret
retf
mov
or
cwde
add
inc
jecxz
(bad)
sub
call
inc
and
push
or
sub
ins
loope
aam
pop
lea
je
mov
pop
rcr
cdq
daa
ret
ret
xlat
mov
or
inc
popa
mov
xchg
inc
ins
cs
inc
sub
jno
and
xchg
aam
cmp
adc
ins
sbb
mov
mov
add
in
and
cmp
hlt
call
cmps
ss
test
add
or
sub
xchg
mov
popa
enter
add
(bad)
push
cmp
or
xchg
jle
test
or
add
and
mov
cmp
inc
loopne
dec
loopne
(bad)
ror
xor
mov
nop
sbb
or
pushf
aam
push
stos
mov
les
mov
push
mov
pop
mov
outs
cmp
push
mov
push
sub
dec
pop
fisub
rcl
push
call
add
mov
add
test
adc
adc
jne
push
pop
fild
and
push
data16
and
frstor
dec
mov
mov
mov
dec
sbb
pop
ret
sub
daa
(bad)
adc
dec
sub
add
add
fisub
add
push
out
nop
rcr
fiadd
xchg
rcr
out
inc
in
or
push
cwde
jp
push
push
push
sub
inc
push
add
inc
adc
adc
mov
adc
lods
xor
jne
pusha
imul
mov
or
retf
push
xchg
jnp
ins
imul
push
sub
sbb
push
mov
fwait
int3
cmp
jbe
jl
or
or
mov
dec
or
jne
pop
es
mov
outs
adc
or
pop
push
mov
test
sbb
lock
hlt
sbb
sbb
fdiv
ror
pop
aam
int3
jmp
jbe
mov
daa
add
stos
add
rol
push
push
loopne
pop
std
icebp
jno
add
bound
mulps
mov
or
add
(bad)
pusha
jge
inc
adc
adc
or
into
dec
xchg
or
dec
int3
arpl
adc
push
sbb
test
jb
push
call
sbb
loopne
push
add
and
cmp
inc
xor
test
leave
or
sbb
adc
jb
ret
mov
push
or
test
sbb
add
lds
and
lea
test
lahf
pop
inc
jp
and
lea
sub
mov
cmp
or
adc
add
sbb
sub
imul
inc
sbb
out
xor
ret
mov
jo
mov
call
ins
shl
sbb
cmp
or
push
inc
(bad)
mov
(bad)
pushf
sub
or
lock
add
inc
add
jmp
sub
lock
cmp
bound
sbb
push
into
or
add
pop
inc
(bad)
fs
rol
sub
jle
loop
jo
pusha
mov
mov
sbb
sub
dec
mov
ins
push
jmp
mov
and
xor
and
in
je
loop
js
pop
jo
xchg
outs
push
and
jbe
pop
cs
aas
lods
mov
cld
adc
or
jle
cmp
mov
movs
and
adc
push
pop
or
or
xor
mov
(bad)
push
rcl
loop
imul
mov
or
inc
add
ins
mov
bound
sbb
sbb
sub
mov
outs
adc
adc
push
jno
mov
int
rcl
mov
inc
popf
adc
adc
jmp
je
fmul
add
rcl
or
lea
or
pop
xor
push
add
jmp
loopne
popa
or
add
sti
ret
inc
adc
push
mov
jns
inc
ror
adc
xor
xchg
lods
lock
mov
xchg
sti
iret
add
push
or
or
add
ret
hlt
andps
out
add
lea
mov
push
add
mov
dec
ins
pop
sub
adc
ret
mov
jg
or
icebp
push
adc
adc
dec
js
or
adc
push
mov
aas
inc
cmp
call
lock
mov
jnp
add
sbb
sbb
inc
sbb
xor
adc
add
int3
add
jp
iret
mov
xor
fisttp
xchg
inc
inc
dec
call
inc
adc
pop
inc
push
mov
sub
mov
inc
mov
mov
sti
nop
push
sub
je
jmp
mov
data16
(bad)
pop
inc
js
imul
adc
mov
or
push
fstp
retf
loop
mov
movs
sbb
test
les
mov
xchg
mov
out
push
ins
add
add
retf
je
mov
xor
dec
(bad)
clc
jmp
ret
pop
inc
outs
sbb
push
push
test
mov
dec
adc
add
pop
gs
ret
inc
in
push
leave
push
retf
add
mov
loope
jo
dec
clc
pop
or
sbb
inc
push
adc
jns
or
add
jmp
lahf
xchg
cmp
je
cmp
cmp
xchg
jge
mov
adc
(bad)
mov
repz
push
cmp
sub
pop
outs
push
mov
jmp
fild
and
scas
and
test
add
(bad)
loop
mov
dec
pop
cmp
and
add
dec
mov
in
je
push
stos
jno
adc
mov
fwait
cs
xlat
add
js
pop
ins
(bad)
dec
or
mov
cmp
imul
outs
les
add
in
movs
sub
push
push
or
or
adc
adc
add
push
or
data16
xlat
and
add
pusha
add
add
push
add
call
outs
pop
aaa
mov
mov
(bad)
pusha
adc
sub
icebp
mov
add
push
or
xchg
inc
fdiv
mov
ds
sar
mov
or
adc
add
sub
mov
xor
add
cmp
push
aaa
nop
call
(bad)
sub
adc
pushf
jmp
dec
jbe
adc
sbb
sahf
mov
adc
sbb
jl
ret
push
inc
mov
and
sbb
loopne
inc
xor
je
and
add
mov
add
lods
or
out
sbb
and
and
push
add
fldcw
jmp
or
xchg
sub
inc
push
push
jle
fimul
push
fnstcw
and
inc
aas
push
xor
test
je
pop
and
imul
jns
jno
mov
loope
ret
sbb
and
fidiv
sbb
rcr
leave
(bad)
cmp
or
mov
push
push
je
adc
sbb
sbb
pop
in
movs
lock
mov
mov
ins
je
mov
ins
adc
lock
jecxz
call
push
add
cmp
aam
add
jge
mov
sbb
add
or
inc
clc
cmp
lea
push
jge
jge
mov
push
sbb
push
mov
add
xor
and
js
mov
lods
pop
rol
push
(bad)
adc
or
bound
or
xchg
test
arpl
outs
push
xor
div
xchg
retf
jmp
pushf
adc
jne
dec
jne
shr
and
mov
lea
push
ss
push
(bad)
xchg
add
hlt
pop
ret
pop
inc
jbe
pop
adc
(bad)
das
pop
lahf
push
dec
add
sbb
mov
enter
mov
pusha
mov
loopne
push
xchg
jmp
cmp
or
loop
adc
mov
ficom
loope
pop
mov
sub
add
mov
mov
imul
call
popf
outs
push
add
or
inc
pminsw
lock
push
sbb
xchg
in
mov
lock
addr16
pop
movs
cmp
pusha
ins
loopne
test
add
or
mov
add
fsub
mov
mov
clc
add
and
cmp
jl
gs
push
xor
sub
fst
or
pop
sbb
cmp
popa
push
ror
mov
clc
inc
mov
test
pop
dec
jne
dec
and
shr
adc
leave
ror
fiadd
xchg
adc
inc
add
je
jbe
xor
dec
scas
clc
jb
push
sbb
aam
or
nop
xor
xchg
lahf
daa
cmc
mov
pusha
inc
and
cld
(bad)
jb
(bad)
fdivr
ja
and
adc
mov
xchg
pop
pop
lock
pop
jnp
mov
xor
hlt
sti
mov
jecxz
mov
test
or
test
pusha
jnp
add
mov
add
xchg
cmp
jb
sbb
cmp
xor
cmp
outs
call
fcomip
inc
mov
xlat
push
sbb
jne
cmp
mov
ds
jmp
cmps
push
or
or
and
adc
sbb
ret
pop
pop
cmp
jo
xor
out
and
adc
push
add
add
aaa
loope
mov
stos
lods
jmp
push
jo
cmc
push
lea
rcl
dec
add
nop
add
add
inc
adc
icebp
inc
rol
pusha
cmp
push
aas
neg
pop
jl
hlt
xchg
xlat
or
scas
mov
add
rcl
jo
xor
cld
xchg
ds
stos
in
adc
xor
inc
push
cwde
xor
add
aas
hlt
pop
sub
stos
and
cmp
pop
sub
mov
sahf
mov
sahf
push
out
xabort
or
stos
pop
retf
into
movs
aaa
jl
add
dec
cld
inc
je
ror
movs
or
add
outs
xchg
pop
xor
sbb
loop
adc
js
cmp
jns
pop
sub
clc
add
xor
loope
mov
jg
out
push
mov
aam
cwde
ret
adc
or
mov
lock
adc
jg
dec
jmp
aam
push
fmul
push
adc
xchg
in
inc
mov
mov
mov
mov
inc
mov
push
pop
xor
mov
mov
pop
cmp
and
push
das
ja
sbb
cmp
mov
or
cdq
xchg
fbld
and
daa
pop
or
js
push
push
test
in
inc
repz
je
cmp
in
jmp
add
add
push
dec
inc
xor
mov
adc
ret
inc
ds
out
xchg
leave
mov
(bad)
cmp
and
xor
loope
sbb
sbb
call
lods
adc
cmp
enter
xlat
adc
xor
mov
dec
dec
xchg
sbb
jnp
mov
retf
jnp
sub
xlat
dec
popf
fcomp
loop
jmp
arpl
jne
mov
stos
shr
mov
inc
xor
clc
stos
sub
les
xor
inc
test
fnstenv
loop
fild
and
aam
ret
xlat
cmp
mov
cmp
ss
gs
cli
push
mov
sbb
add
jmp
cmp
in
gs
lea
nop
mov
test
adc
aam
jp
dec
add
int3
mov
ror
ja
adc
ja
and
or
push
aam
and
and
iret
enter
cmp
in
inc
inc
inc
cmp
add
adc
inc
or
ins
in
mov
xchg
sbb
xchg
inc
pop
mov
push
xor
adc
hlt
outs
mov
sub
pop
arpl
push
add
and
aas
or
jg
inc
sub
mov
push
inc
lods
out
push
ret
add
les
cmp
sub
mov
sbb
mov
inc
test
adc
and
rcr
push
mov
sbb
(bad)
stos
pop
and
mov
pop
dec
ja
adc
rol
daa
adc
or
sti
push
mov
iret
add
sbb
(bad)
push
lahf
push
jmp
jecxz
jae
mov
push
inc
into
movs
xchg
aaa
xchg
nop
xor
inc
xlat
push
xor
fbstp
ret
fisubr
scas
inc
inc
add
mov
cli
add
sbb
add
inc
stc
adc
bound
add
test
cmc
mov
inc
xor
adc
xchg
sub
inc
and
inc
ins
movsx
mov
dec
xor
adc
add
test
xchg
mov
xor
loope
(bad)
lock
jp
loope
mov
adc
call
mov
jo
and
add
xchg
or
inc
js
sub
test
ret
mov
adc
call
pop
push
pop
shl
popf
(bad)
sbb
cmp
test
rcr
mov
mov
out
push
pusha
loopne
jnp
cmp
cmps
and
jge
cmp
(bad)
shr
lock
into
hlt
push
test
mov
pop
sub
arpl
fcomp
adc
xor
rcr
dec
xchg
inc
sub
cmp
aas
mov
mov
jge
jbe
pop
and
adc
adc
xchg
sbb
or
jno
add
inc
jmp
fld
test
in
lea
dec
or
pop
rcl
call
and
mov
adc
sbb
or
test
add
and
or
test
test
xor
adc
inc
pop
inc
xchg
xchg
imul
inc
xor
sub
aaa
dec
cmp
retf
push
dec
aam
xchg
scas
lock
lea
std
neg
push
cmp
jmp
mov
mov
mov
inc
mov
jle
add
xor
sti
push
add
inc
rol
push
cmp
xchg
dec
ret
cmps
inc
mov
and
cmp
ja
jbe
loop
(bad)
mov
push
mov
mov
aad
mov
xchg
mov
movs
jmp
and
dec
xor
jg
mov
or
fstp
xchg
jo
add
lods
dec
fsub
pop
pop
test
mov
xor
mov
mov
xchg
jo
sbb
pop
push
dec
xor
and
push
cwde
mov
imul
inc
je
pop
add
cmc
dec
sbb
sub
or
jbe
adc
push
lds
add
add
imul
mov
mov
sub
jnp
add
es
pushf
pop
cmp
jl
clc
xchg
push
sbb
or
adc
stos
loopne
enter
jecxz
mov
nop
aam
(bad)
and
rol
add
retf
or
ret
ret
jne
pop
outs
or
mov
xor
aam
test
or
adc
cmp
inc
dec
sub
push
add
push
mov
mov
loop
loop
(bad)
loop
out
movs
imul
sbb
out
mov
push
inc
cmp
sub
add
mov
add
addr16
cmps
mov
sub
int
adc
jmp
(bad)
adc
movzx
push
test
mov
les
cmp
push
xchg
dec
cmp
lahf
test
add
cmp
cmp
adc
or
push
call
jl
and
fmul
ret
dec
in
popa
test
cwde
cmp
int3
mov
dec
fs
ds
mov
push
cmp
mov
push
pushf
or
(bad)
mov
popa
jo
lea
sbb
dec
and
inc
or
lahf
pop
jp
hlt
and
push
sub
aaa
repnz
inc
loop
add
push
sub
test
xchg
cli
data16
add
and
sub
dec
push
sbb
xor
fld
fst
cmp
je
dec
bound
mov
fidiv
adc
adc
(bad)
ins
test
push
add
mov
addr16
xor
aam
or
and
and
test
mov
cld
or
daa
out
or
push
dec
int
add
pop
add
popa
and
mov
or
pop
in
data16
sub
addr16
or
add
xchg
inc
mov
js
inc
xchg
inc
daa
into
int
push
push
inc
pusha
jmp
xchg
inc
iret
lods
xchg
shl
popf
add
adc
mov
leave
mov
test
adc
enter
mov
mov
bndldx
mov
xor
js
ss
out
out
mov
add
lods
push
ror
xchg
cmp
cwde
dec
cmp
nop
fisub
cmp
mov
xchg
push
inc
jmp
xchg
sub
cdq
xor
add
jae
int
ss
fcom
or
scas
xchg
push
mov
dec
add
xchg
fisttp
mov
jo
fdiv
cmp
and
mov
mov
xchg
inc
pusha
jmp
ds
sub
loop
sbb
mov
jge
jge
mov
inc
add
pop
mov
push
cwde
pop
dec
ror
icebp
movs
add
add
inc
sub
clc
push
adc
(bad)
push
adc
sbb
ficomp
scas
mov
add
fisubr
cmp
repz
cwde
sbb
xor
inc
clc
sbb
push
sbb
pop
bound
push
in
inc
pusha
and
push
inc
fucomi
call
jns
dec
or
inc
xchg
loop
dec
or
inc
cmp
cmp
mov
push
sti
or
jno
test
cmp
shl
in
iret
inc
xchg
mov
hlt
and
cmp
jmp
mov
das
hlt
mov
popa
std
sbb
add
arpl
xlat
add
les
dec
fmul
add
test
dec
test
sub
ret
pop
outs
cmp
adc
mov
aaa
shl
and
cmp
add
lods
(bad)
jg
cmc
mov
cmp
ja
and
bt
jae
shl
dec
loopne
xor
cmp
jne
mov
xchg
lock
clc
mov
pop
mov
push
and
pop
bound
fmul
mov
sar
jl
or
add
sbb
or
and
mov
add
and
or
add
inc
inc
and
movs
jne
inc
add
push
or
xchg
jbe
and
test
sbb
add
add
push
mov
call
or
ja
dec
or
fld
and
fwait
add
push
and
dec
jb
and
mov
fneni(8087
and
sbb
enter
loopne
adc
adc
cmps
adc
or
es
dec
in
or
and
mov
sbb
and
add
pop
or
push
xchg
retf
mov
or
dec
or
add
(bad)
retf
push
xor
pop
ins
pop
cs
add
cmps
dec
add
dec
inc
add
shr
or
fprem
mov
adc
add
xor
add
add
mov
and
sub
adc
cmp
mov
test
xchg
nop
inc
gs
xchg
xchg
jno
inc
fsubr
adc
inc
mov
adc
aaa
pop
js
pop
int
inc
sub
push
js
push
es
das
adc
cmp
(bad)
push
sbb
cwde
in
push
adc
inc
call
add
add
enter
popa
dec
loopne
xchg
loop
jns
fstp
or
mov
cmp
dec
inc
sahf
pushf
mov
mov
dec
dec
shl
and
dec
rol
and
push
adc
push
mov
cmp
dec
dec
pop
or
inc
jo
inc
shl
cmp
pop
jno
or
or
and
or
inc
lds
add
sbb
and
ins
loopne
into
neg
jno
add
dec
fcomp
add
out
inc
imul
sub
sbb
pushf
adc
pop
or
or
and
and
cmp
add
adc
add
punpcklbw
fwait
(bad)
pusha
daa
and
sub
jmp
dec
sbb
add
mov
add
sub
or
popa
add
xchg
dec
add
pop
inc
fistp
pusha
adc
jae
jmp
xor
and
repz
sub
sub
add
mov
lahf
sti
adc
push
or
inc
cmc
add
(bad)
inc
sub
test
test
pop
bound
clc
addr16
add
xor
(bad)
rol
mov
jecxz
cmps
push
bound
loopne
sbb
repz
sbb
popf
inc
pop
pusha
cmps
fs
lods
inc
jo
mov
or
adc
test
adc
mov
push
mov
lock
lock
sub
daa
xor
enter
cmps
outs
xchg
aaa
loopne
into
fadd
adc
imul
push
pusha
inc
push
cmp
cmps
sbb
sub
add
mov
lds
xor
or
or
cmp
aad
ins
dec
jne
push
push
add
ins
cmp
push
add
mov
mov
imul
jns
xor
stos
sbb
and
sub
sbb
or
sub
mov
or
inc
dec
push
inc
mov
jp
cmps
retf
xchg
add
adc
leave
and
pop
in
nop
xchg
stos
jnp
out
push
mov
add
pop
add
test
daa
addr16
add
push
daa
add
cmps
xchg
fisubr
test
jge
inc
push
iret
sub
ins
push
pop
scas
pusha
add
xchg
cwde
sub
enter
ins
test
xchg
test
test
sbb
fstp
unpckhps
fnsave
je
push
dec
dec
gs
call
pop
sub
(bad)
or
arpl
add
aaa
pushf
add
inc
in
gs
jae
movs
mov
nop
test
add
xor
fcom
push
jne
push
mov
in
movs
loope
sti
inc
(bad)
and
outs
jo
sbb
lock
les
gs
cmp
shr
cdq
pop
fwait
cmp
out
stos
aas
cmp
or
cs
cmps
cmp
add
mov
pop
xor
push
cmps
arpl
pop
dec
adc
ins
sbb
inc
push
dec
xor
ja
and
add
add
je
mov
add
test
inc
cwde
add
jmp
xchg
test
test
mov
xchg
mov
retf
jmp
push
sbb
or
or
add
jmp
ins
inc
idiv
stos
inc
push
sbb
sub
add
pusha
xor
imul
inc
shl
pushf
stos
lahf
ins
lods
scas
cmp
mov
dec
add
inc
das
pop
adc
mov
dec
inc
nop
fsubr
xor
inc
inc
(bad)
out
sbb
loope
mov
int3
pop
dec
jecxz
dec
push
push
pop
dec
dec
inc
inc
cmps
loope
out
cmp
push
lods
push
hlt
cmp
sbb
(bad)
adc
cmp
mov
lock
xor
fadd
xor
pop
sbb
ja
push
loop
in
lods
out
cmp
mov
inc
xor
iret
adc
sub
call
fimul
mov
cmp
push
cmp
mov
xor
sub
add
pop
call
das
push
adc
movs
jae
sub
sbb
adc
sar
xor
mov
sub
outs
adc
jge
cmp
lods
inc
lea
jb
jmp
cmp
cld
push
push
sbb
add
add
pop
xor
ins
in
push
push
in
adc
inc
and
test
jmp
or
add
pop
or
ret
fsubr
aas
call
cdq
dec
push
or
inc
or
adc
sub
(bad)
jg
push
pushf
out
adc
dec
inc
dec
inc
dec
dec
inc
pop
inc
push
push
add
add
dec
shl
or
jne
push
inc
mov
outs
xor
push
mov
sub
jp
and
jg
or
adc
push
push
mov
cmp
inc
cwde
sub
push
loope
inc
out
jmp
cmp
addr16
aam
mov
and
je
push
add
mov
mov
push
mov
xor
xchg
sbb
aam
push
mov
sub
xor
cmp
adc
scas
call
mov
add
or
or
cld
sub
neg
sbb
xchg
mov
pop
(bad)
jbe
push
je
xchg
xchg
xchg
jo
push
xchg
pusha
pop
pop
push
xchg
xchg
xchg
xchg
push
dec
dec
inc
xchg
xchg
xchg
xchg
inc
cmp
xor
xchg
xchg
xchg
xor
and
xchg
xchg
xchg
and
adc
xchg
xchg
xchg
adc
cs
movs
adc
inc
and
dec
lock
and
add
xor
mov
dec
xchg
and
xor
call
addr16
or
ret
xchg
jmp
mov
ror
pop
dec
inc
push
inc
dec
dec
push
mov
aam
adc
or
es
rol
mov
outs
leave
add
jge
push
push
lahf
pop
or
push
outs
jo
mov
push
sub
or
std
pop
nop
push
jp
ins
gs
pop
pop
pop
inc
push
push
push
jge
push
in
push
mov
movs
fistp
nop
nop
das
int3
int3
inc
push
cmp
add
in
rol
pop
push
in
mov
out
fs
mov
repnz
sub
call
sbb
je
fwait
loop
(bad)
mov
stc
(bad)
or
lods
xor
xor
mov
mov
xor
(bad)
enter
xor
rcl
fcomp
xor
xor
loopne
call
xor
hlt
clc
cld
xor
jb
add
add
or
xor
xor
adc
sbb
xor
xor
and
sub
xor
xor
xor
cmp
xor
xor
dec
dec
xor
xor
push
push
pop
pop
mov
aam
pusha
jmp
push
xchg
dec
push
add
pop
ins
mov
push
retf
retf
mov
int3
cmps
sti
mov
mov
imul
cmp
pop
cld
and
mov
add
xchg
(bad)
aad
and
cmp
gs
sub
lods
pop
mov
test
mov
mov
mov
xor
xlat
xchg
cmp
movs
xor
shr
aam
xchg
dec
push
add
fsub
push
push
movs
xor
dec
loopne
sbb
call
shr
lock
mov
mov
jnp
clc
sti
and
ins
or
jae
add
mov
xchg
add
push
movs
xor
adc
xor
xchg
dec
adc
sbb
sbb
push
sbb
enter
add
call
or
gs
sub
xchg
add
mov
inc
aam
and
dec
cmp
xor
push
mov
fadd
sbb
pop
ret
push
cld
pusha
xlat
xchg
add
jnp
mov
cdq
test
sub
imul
mov
sahf
inc
imul
inc
push
loope
and
mov
pop
jae
cmp
xchg
lods
mov
arpl
mov
sub
or
push
mov
push
test
push
adc
add
inc
pop
push
cmp
addr16
xchg
mov
inc
ret
inc
sub
dec
cmove
xchg
push
add
imul
jae
sbb
push
pop
inc
fild
push
pusha
aaa
dec
add
adc
pop
iret
xor
add
and
mov
popa
add
in
jne
ficom
xchg
fs
add
add
mov
fidiv
xchg
out
add
(bad)
mov
xlat
outs
mov
xor
cmp
cs
adc
jne
outs
mov
cmp
addr16
add
test
aaa
and
mov
mov
outs
add
popa
or
or
add
inc
not
pop
push
dec
inc
lahf
or
repz
mov
add
ja
cmp
(bad)
jp
popa
inc
push
into
sub
push
lds
inc
fild
pusha
jb
push
or
sub
sub
imul
sub
test
jnp
mov
adc
pop
inc
mov
pop
imul
cmps
cmp
cmps
rcr
sbb
inc
stos
bound
ins
pop
and
retf
add
scas
punpcklbw
xchg
push
mov
mov
mov
shl
cmps
or
dec
movs
adc
push
retf
jp
and
jnp
inc
push
cwde
fwait
add
cmps
sub
sbb
mov
ds
(bad)
cmc
jbe
lds
adc
lock
cmp
and
add
gs
es
add
sbb
cmp
sbb
repz
pop
dec
loopne
pop
cmp
dec
dec
push
dec
push
hlt
or
push
aad
jb
dec
sbb
js
test
(bad)
in
xchg
(bad)
scas
mov
in
pop
call
das
call
enter
fadd
fsubr
pop
jb
fcom
aam
rol
add
cmp
mov
push
xor
pushw
pushf
mov
add
lahf
fdivr
mov
aam
add
dec
fmul
push
aad
mov
(bad)
mov
es
rcr
add
or
jns
aam
(bad)
inc
(bad)
es
ja
and
inc
rol
sahf
outs
loopne
cmp
loopne
inc
mov
inc
outs
add
cmp
pop
mov
xchg
das
ja
dec
adc
inc
icebp
push
fst
into
push
dec
out
loopne
cdq
xor
and
add
adc
hlt
fst
iret
fs
sbb
fadd
and
test
add
jl
arpl
mov
xor
adc
sub
jo
push
add
sub
call
mov
pop
inc
inc
jg
push
mov
add
inc
jle
es
pop
xor
jo
popa
mov
add
mov
test
push
lds
add
inc
cmovo
aad
or
xchg
rol
dec
ret
pop
(bad)
and
add
sbb
icebp
dec
aad
test
dec
adc
jno
jo
push
pop
aad
sar
push
mov
dec
(bad)
fdiv
les
addr16
push
enter
aaa
les
push
sub
sub
pop
inc
imul
mov
in
rol
fmul
mov
rcl
mov
lahf
mov
bound
(bad)
adc
int3
and
add
add
or
test
sub
add
jl
test
das
mov
sub
xor
or
ja
push
call
sbb
adc
out
lds
push
mov
pop
or
adc
fnsetpm(287
int3
push
imul
xchg
jle
ror
dec
pusha
xor
cmp
add
test
add
xchg
jmp
sbb
or
jae
aam
adc
xchg
bound
popa
push
(bad)
out
sahf
neg
in
mov
mov
je
out
xlat
jo
(bad)
fsubr
jo
sysret
aam
xor
repnz
push
fcmove
push
mov
adc
adc
jne
and
adc
rcr
sbb
repnz
cmp
mov
dec
add
es
xchg
inc
adc
xor
or
pop
push
push
enter
add
add
inc
cdq
xchg
popa
mov
pop
push
dec
daa
lods
in
rol
fstp
adc
repz
movups
push
push
add
push
(bad)
mov
mov
mov
cmps
addr16
pusha
popa
in
mov
aaa
movlps
stc
jmp
loopne
inc
mov
cwde
push
adc
jp
mov
sbb
loopne
mov
lods
(bad)
cs
sbb
clc
pop
pusha
ins
add
sbb
cmp
movs
add
loopne
adc
outs
fdivr
or
and
loopne
fadd
adc
cmp
sub
aad
jnp
add
sahf
fadd
inc
popa
ss
mov
dec
or
lock
adc
ds
ret
push
xor
adc
or
cmp
dec
jb
bound
adc
inc
jno
jno
adc
or
adc
ins
mov
add
sub
xor
aam
xchg
aaa
fs
jmp
in
and
inc
inc
retf
xor
addr16
cmps
xor
and
mov
fcomp
xchg
mov
sti
jmp
cmps
(bad)
ficom
dec
lock
daa
push
sbb
pop
nop
lods
aad
jbe
shr
xchg
pusha
jl
out
push
pop
call
xchg
push
inc
mov
pop
push
add
rol
jge
add
int3
xchg
mov
test
push
fwait
ss
dec
stos
push
in
xor
fisttp
mov
sbb
cwde
push
mov
lock
pop
ja
out
push
ins
push
pusha
xchg
mov
xchg
pop
push
std
aam
fisub
xchg
xchg
cwde
mov
xor
inc
fidivr
lahf
xchg
push
rcr
xchg
shl
or
push
push
add
adc
ins
cld
mov
dec
aam
jo
int3
sbb
int3
jno
cmps
rol
sti
fld
cmp
xor
xchg
ja
daa
push
push
repz
pop
sub
cmp
or
push
adc
pop
xor
stc
dec
arpl
call
add
dec
jnp
mov
xor
pop
stos
lock
mov
test
inc
add
mov
(bad)
mov
lock
or
push
test
ja
push
add
sbb
adc
sub
inc
hlt
push
push
sahf
sub
cs
fld
test
jae
icebp
adc
dec
lods
int
adc
inc
push
shr
sub
or
push
loopne
sbb
adc
lods
jo
adc
jo
inc
(bad)
fdivr
inc
sbb
inc
(bad)
call
cmovge
adc
loope
loopne
in
sbb
jo
test
adc
or
mov
ins
push
push
jb
jg
dec
leave
mov
stos
push
dec
rcr
arpl
xchg
hlt
push
adc
daa
push
and
pop
sub
pop
push
cmps
jo
add
js
dec
js
repz
sub
sub
js
cmc
mov
adc
and
adc
ja
jb
add
push
jbe
push
xor
fnstcw
(bad)
(bad)
imul
pop
cs
mov
imul
(bad)
nop
fld
movs
lds
rcl
fs
push
je
cmp
push
ret
dec
mov
mov
popf
sub
mov
lock
nop
jmp
mov
add
and
pop
(bad)
pop
(bad)
icebp
pop
sar
push
add
push
fild
adc
push
xor
arpl
rcr
jecxz
add
je
jg
ror
ins
push
test
lods
inc
jmp
imul
dec
fild
fistp
pop
jecxz
mov
xchg
inc
add
mov
add
add
fs
fs
or
lahf
or
in
adc
xor
jb
fs
bound
sub
and
lds
inc
mov
dec
fiadd
cmps
dec
mov
push
dec
inc
pop
popf
dec
jmp
push
mov
mov
dec
icebp
push
inc
add
and
(bad)
in
(bad)
or
inc
adc
pop
popf
or
push
and
call
xor
stos
push
or
loope
jecxz
and
cli
jmp
xchg
scas
mov
enter
or
mov
and
int
inc
stos
push
dec
add
call
push
aad
inc
int
movs
sub
mov
xchg
dec
inc
sbb
adc
call
in
sbb
rcr
jae
pop
jo
jbe
mov
inc
jns
xchg
lahf
js
inc
add
sahf
out
loopne
push
loopne
adc
les
push
hlt
loop
(bad)
iret
repz
pop
ins
adc
rol
int3
cmp
repz
aam
fsub
ror
cli
repz
cmps
or
push
add
add
shl
outs
imul
sbb
push
cmp
inc
adc
adc
mov
test
enter
aas
rcr
test
push
push
shl
adc
bound
xchg
push
fs
pusha
add
les
aaa
add
pushw
mov
xor
xor
data16
add
add
xor
ret
nop
add
mov
mov
add
xchg
add
inc
inc
or
add
pop
test
mov
sub
in
xor
push
sti
lds
cmp
jg
repnz
cmp
je
cmp
or
add
inc
cmp
inc
or
mov
fwait
inc
pusha
(bad)
inc
push
lea
sub
bound
xor
popa
sahf
mov
ds
inc
sbb
adc
enter
test
add
and
sbb
(bad)
sub
dec
ror
rcl
or
mov
mov
mov
mov
add
adc
dec
xchg
inc
push
adc
(bad)
pop
jmp
mov
sar
xor
dec
je
inc
mov
icebp
pop
jae
movs
push
pusha
lods
xor
dec
shl
movs
cmp
xor
and
aas
popa
(bad)
and
mov
pop
fild
mov
aas
jle
inc
ret
inc
cmp
je
xor
les
inc
cmp
stos
mov
sub
pusha
test
and
(bad)
add
ds
mov
pop
jnp
push
pop
add
pop
cdq
mov
cmp
jg
lea
js
or
and
outs
inc
pop
ds
fsubr
add
jmp
shl
inc
adc
(bad)
shl
or
ret
pop
dec
jne
imul
adc
out
vpsrlw
cmc
sbb
adc
cmp
lds
ret
pop
or
ror
adc
sub
pop
es
fmul
mov
daa
fisttp
inc
out
mov
push
inc
jne
aad
sub
and
jle
or
sar
data16
jmp
ret
sbb
adc
mov
test
and
pop
sub
dec
addr16
fcomp
jp
js
aam
add
jl
inc
xor
fs
not
dec
call
imul
and
or
sbb
hlt
pop
sbb
dec
jne
jp
lods
cmp
xor
xchg
xor
push
or
clc
sub
mov
mov
cmp
xchg
push
pop
mov
fisubr
adc
int3
adc
sub
xlat
push
inc
add
jmp
bound
sbb
inc
inc
xchg
js
scas
inc
loopne
push
xchg
push
and
sbb
xor
or
adc
cmp
fdivr
sbb
lock
sar
inc
je
or
push
add
mov
mov
and
gs
push
xor
push
add
push
outs
int3
or
cmp
sbb
sbb
in
sar
adc
pop
lahf
and
adc
pusha
cmp
test
ret
shl
dec
std
add
inc
shl
mov
inc
fld
and
add
jmp
in
in
cmp
cmp
aas
or
push
jmp
inc
sbb
ja
adc
mov
add
xchg
mov
push
mov
xchg
jno
test
inc
daa
pop
cld
jg
popa
pop
add
jb
mov
xchg
xchg
add
and
xchg
xchg
jo
cwde
inc
sbb
mov
adc
scas
arpl
cwde
out
aam
popf
jne
fs
(bad)
jecxz
movs
repnz
cdq
sub
adc
adc
in
pop
push
je
call
add
pop
mov
repz
inc
rol
test
rcr
je
mov
(bad)
rcr
rol
popa
sbb
shl
es
dec
loope
mov
test
inc
in
inc
mov
jae
add
pop
inc
in
std
mov
nop
dec
adc
inc
push
push
push
retf
jo
lods
cdq
or
inc
or
xchg
push
cmps
out
or
aas
enter
cmc
push
mov
test
xor
mov
std
pop
xchg
xor
adc
or
adc
dec
inc
dec
jne
mov
sub
xor
fdivr
sahf
xlat
push
pop
pop
dec
daa
or
jle
repz
lea
lods
fs
sar
cmp
pop
push
faddp
rol
mov
je
adc
or
out
jo
pop
pusha
fistp
pop
jno
test
or
adc
sub
and
inc
not
pop
add
cdq
leave
push
fimul
test
je
jle
out
push
and
pop
clc
jnp
mov
mov
movs
inc
push
sbb
les
cmp
push
add
mul
fcomp
or
int3
add
xchg
jb
sti
and
fild
xor
add
and
das
iret
and
sar
inc
cmp
sbb
cmp
jne
dec
jb
adc
sbb
xor
bound
mov
mov
dec
adc
add
aas
and
leave
or
xor
pop
lods
mov
pop
push
pop
jp
sub
sub
adc
add
adc
sub
inc
ret
inc
sub
or
aad
hlt
push
mov
lea
mov
jl
mov
fwait
jl
cmp
aaa
scas
xchg
test
inc
mov
mov
je
mov
sbb
ins
je
lds
or
mov
mov
jne
mov
popw
adc
mov
pop
adc
or
or
cmp
rcl
loop
ja
push
movs
push
add
mov
rol
adc
adc
pushf
sbb
jge
aaa
js
daa
or
mov
pop
pop
jno
or
mov
add
loopne
inc
fadd
mov
xor
sub
sbb
inc
push
loopne
loope
mov
add
pop
inc
cld
daa
push
cmp
cmp
icebp
ja
xor
adc
jnp
jge
ds
push
mov
or
sbb
loopne
and
in
or
add
and
cmp
inc
jbe
shl
(bad)
pop
mov
inc
mov
test
add
sbb
std
xor
mov
mov
and
jmp
xchg
xor
test
enter
jne
inc
and
xchg
xor
jmp
push
in
adc
outs
pop
sub
sbb
mov
cmp
mov
push
and
add
ins
adc
adc
fwait
cmp
mov
jo
adc
hlt
neg
add
daa
lock
xchg
(bad)
das
pop
lock
mov
adc
jecxz
adc
pop
mov
rol
or
daa
mov
or
fmul
enter
daa
daa
aam
dec
outs
leave
leave
leave
ins
in
shr
pushf
shl
mov
movs
mov
mov
xor
(bad)
test
gs
fstcw
ja
das
ret
push
or
cld
mov
jge
fcomp
add
fwait
xor
mov
and
push
lods
adc
sub
sbb
dec
adc
push
jnp
outs
bound
sub
xor
xor
xor
(bad)
xchg
cmc
adc
data16
arpl
jmp
outs
jo
jno
gs
xchg
jb
imul
sbb
mov
mov
gs
push
out
adc
test
pop
popa
fs
sbb
and
mov
add
xchg
cmp
push
and
pop
outs
sti
pop
push
push
ds
mov
jmp
popa
imul
je
je
jne
daa
xor
rcr
outs
jne
iret
retf
xchg
arpl
or
adc
sub
jle
xor
rol
xlat
fimul
sub
lods
add
(bad)
pushf
and
push
jp
cmps
cmps
push
jno
and
sbb
jmp
inc
cmc
or
rcl
cmp
pop
jb
pop
je
std
xor
je
shl
xor
cmp
jo
inc
and
fs
and
ret
cmp
inc
jns
push
mov
ins
add
sbb
push
arpl
adc
or
(bad)
fadd
sbb
adc
inc
arpl
les
dec
lods
pop
dec
imul
test
mov
jo
ins
or
add
pop
cwde
adc
cmp
mov
jmp
jp
ret
pop
ficom
adc
mov
cld
push
and
dec
stos
es
mov
and
lods
lods
inc
rcr
movs
or
pop
pop
inc
or
adc
mov
and
enter
or
sub
std
hlt
out
inc
pop
or
(bad)
or
(bad)
jmp
xrelease
arpl
popa
cmp
ins
add
add
push
adc
mov
pop
mov
(bad)
jmp
call
mov
jp
lahf
mov
sub
mov
test
fisubr
fmul
jmp
jo
jo
fidiv
outs
in
dec
dec
sub
prefetchnta
call
adc
and
es
xor
mov
push
push
or
or
sbb
pop
(bad)
hlt
repz
add
test
cmps
adc
mov
arpl
or
ja
imul
dec
inc
cmps
ret
or
fcmovu
fisub
mov
or
scas
retf
popf
lods
push
inc
(bad)
call
test
sbb
inc
add
(bad)
jmp
or
add
aaa
xchg
mov
fistp
test
outs
sbb
push
in
addr16
add
add
pop
fld
push
imul
loopne
xchg
test
in
rol
rep
test
and
in
int
mov
rcr
mov
in
dec
pop
lock
clc
aam
mov
stc
fisttp
pop
push
push
xchg
and
popf
test
out
out
out
mov
out
adc
and
ret
pop
movs
test
push
jno
stos
push
xchg
imul
xor
push
daa
push
addr16
inc
push
leave
mov
or
and
out
and
xchg
pushf
js
js
cmp
mov
and
xchg
fnstsw
add
out
test
or
cmp
cmp
pop
inc
cmovbe
test
add
inc
outs
pop
and
loope
pop
add
(bad)
and
loopne
(bad)
inc
mov
icebp
pop
in
jmp
xchg
add
pop
pop
add
push
xlat
pop
xor
daa
push
lock
addr16
icebp
into
in
and
adc
test
inc
lock
xlat
pop
xor
xor
imul
and
mov
add
and
inc
sub
outs
xchg
or
pop
fadd
adc
xor
aam
aam
ins
rol
pop
pop
loopne
add
aaa
popa
aam
cmps
xor
sbb
pop
push
mov
xor
das
jo
loopne
aas
adc
push
pop
jmp
pop
dec
inc
jg
or
js
pusha
xor
in
fisttp
add
clc
fprem
or
adc
ins
jecxz
nop
mov
test
inc
adc
nop
nop
call
push
xlat
jns
in
jns
icebp
and
add
out
dec
enter
mov
loope
sub
or
or
pop
(bad)
pop
lea
mov
inc
inc
pop
sar
sub
std
aas
jecxz
lea
mov
mov
loop
loopne
pop
shl
or
mov
and
cmc
pop
loop
or
xlat
fild
pavgw
jmp
xchg
aad
push
inc
les
jo
xlat
mov
mov
int
jecxz
and
pusha
mov
add
sar
loop
and
push
adc
inc
adc
arpl
push
add
inc
fsubr
push
out
in
xor
mov
adc
push
pop
cmp
and
popf
js
pop
hlt
std
jo
test
inc
das
push
das
and
lock
icebp
fadd
jne
lea
fstp
cmp
enter
cwde
and
xchg
dec
in
push
icebp
cli
clc
pop
xor
movhps
xor
sbb
xor
fdiv
aam
mov
or
lods
mov
adc
(bad)
and
pop
lahf
push
cwde
mov
es
jne
scas
and
xchg
cld
daa
pop
mov
mov
mov
cmp
xchg
dec
inc
pop
push
jae
das
jp
xor
dec
cwde
adc
lea
add
call
inc
mov
outs
adc
inc
scas
pop
dec
cmp
mov
xor
stos
or
add
or
sub
aam
xor
add
out
jo
and
sbb
inc
outs
add
mov
xor
and
and
or
fild
mov
adc
or
stc
fadd
jmp
les
pop
or
sbb
fldenv
adc
sbb
mov
inc
icebp
out
adc
mov
dec
out
inc
mov
and
mov
push
jmp
xor
or
xchg
aam
scas
es
pop
mov
sub
addr16
call
sub
xor
mov
daa
in
xor
jmp
lea
dec
adc
cmc
call
in
jne
les
jns
sub
shr
or
bnd
or
adc
clc
loopne
cmp
leave
jbe
cmp
xchg
dec
jne
fbstp
mov
pop
xchg
push
sub
sub
loopne
inc
inc
and
mov
add
mov
inc
rcl
(bad)
push
and
add
jo
add
je
mov
inc
pop
add
jne
xchg
leave
jne
repz
mov
loop
or
inc
sbb
push
xchg
add
inc
adc
mov
shr
nop
push
jne
cld
shl
add
popf
dec
or
inc
xor
mov
test
jns
add
or
sar
jbe
mov
pusha
pusha
loop
xchg
fbstp
loope
cmp
or
mov
sbb
sbb
dec
sbb
add
outs
or
dec
out
jmp
mov
jo
pop
cli
jmp
lahf
ret
push
mov
sub
sbb
xor
push
lock
inc
sbb
lods
rcl
or
nop
cmovne
and
or
fs
jg
cmp
cld
jl
mov
cmp
jg
lock
jge
cmp
cli
inc
(bad)
ret
es
in
push
enter
inc
mov
xlat
fwait
sahf
sub
mov
dec
sub
loopne
and
and
xor
inc
or
mov
mov
fbld
pop
movd
jmp
out
adc
add
or
fnstsw
dec
or
inc
or
jg
mov
mov
out
add
ss
sbb
xor
jle
push
fmul
adc
xchg
push
adc
pop
inc
push
or
mov
cld
mov
or
mov
mov
pop
mov
sahf
shl
mov
test
xor
and
xor
add
repnz
dec
push
ficomp
icebp
ss
ror
or
fisubr
loope
and
push
mov
mov
mov
push
and
loop
dec
sub
sub
push
inc
cld
mov
add
inc
push
sub
mov
std
mov
rol
sbb
push
jnp
xchg
sub
loop
pop
jo
adc
lock
inc
sub
jnp
push
inc
mov
lock
(bad)
xor
(bad)
fwait
push
cld
push
(bad)
call
and
loop
xchg
icebp
jmp
xor
jmp
and
ss
or
add
mov
test
sbb
mov
test
inc
mov
outs
push
jo
or
ins
lods
mov
and
jg
je
adc
push
dec
rcr
inc
adc
dec
aas
mov
adc
je
out
sub
pop
or
pop
loopne
or
push
dec
xor
push
adc
int3
sbb
inc
jae
push
inc
sub
clc
pop
pusha
clc
or
add
(bad)
repz
cmp
aad
mov
add
sbb
jbe
fld
mov
push
dec
mov
pop
dec
loopne
sbb
xor
and
es
jle
inc
mov
xchg
pop
xor
add
xor
and
(bad)
sub
dec
mov
sbb
pop
imul
in
pusha
mov
retf
mov
dec
add
pop
(bad)
cmp
jbe
mov
sahf
dec
pop
pop
dec
or
enter
sahf
xchg
xchg
sbb
and
out
movs
cmps
add
fsub
inc
xor
sub
rcl
shl
mov
push
sbb
or
es
fstp
pop
adc
aaa
pop
mov
mov
mov
mov
movs
ret
fadd
fsubr
push
pop
jne
mov
push
sub
xor
pop
or
std
rcr
mov
push
jo
jno
es
push
je
pop
xor
or
pop
dec
scas
dec
sbb
push
jp
ror
outs
or
push
pop
js
fsub
inc
xchg
mov
or
add
and
xchg
push
and
mov
movs
mov
sbb
mov
and
gs
lock
mov
dec
jl
ds
or
mov
jle
mov
pop
sbb
mov
ins
hlt
inc
cmp
pop
cmp
inc
ret
xchg
or
jg
pop
mov
cmp
jge
fisttp
test
mov
push
mov
add
loop
jl
add
cwde
jle
mov
pop
scas
or
xor
dec
inc
push
dec
dec
mov
push
adc
nop
inc
xor
pop
repnz
jl
pop
mov
imul
pop
pop
lea
shr
shr
or
fadd
adc
fs
icebp
lea
add
dec
and
dec
test
std
popf
ss
dec
je
jmp
xchg
retf
mov
(bad)
ins
mov
and
add
cmp
mov
dec
mov
loop
sub
inc
inc
cmp
push
pop
dec
mov
bound
or
push
daa
xor
pop
ss
and
pcmpeqb
or
ror
add
pusha
push
shr
add
in
sbb
rcl
add
dec
je
mov
pop
xchg
ret
out
mov
call
mov
or
push
outs
mov
xor
movs
fild
inc
or
or
out
pop
call
cmp
cmp
hlt
repnz
push
cmp
aaa
sub
pop
push
cli
repz
outs
mov
sbb
inc
adc
jae
sub
dec
sbb
jno
je
sub
pop
mov
test
adc
wbinvd
rol
cmp
out
xor
je
cmp
and
push
cmp
jne
and
mov
bswap
addr16
adc
sti
cwde
push
sbb
jo
xor
or
or
or
pslld
aad
fwait
adc
stos
add
dec
into
add
pop
je
dec
adc
int
mov
xor
sbb
ret
or
push
sub
jle
push
mov
cmp
mov
(bad)
sub
sbb
int
jge
xor
pop
lahf
and
sub
jo
mov
jnp
or
inc
or
cmc
pusha
(bad)
cmp
test
adc
add
jl
in
jge
sub
mov
es
and
fld
and
ret
sbb
sub
adc
jle
call
push
or
mov
imul
inc
pushaw
sub
in
mov
leave
xor
dec
xchg
dec
(bad)
mov
sbb
hlt
shr
outs
loopne
push
pop
mov
and
adc
not
push
fdivr
pop
push
cmp
xor
xchg
xchg
into
inc
dec
fsub
bound
fs
push
shl
or
mov
jl
and
push
jge
add
jne
jmp
or
mul
ja
loopne
or
xchg
mov
cmc
xchg
fs
push
push
mov
div
pop
mov
enter
sbb
add
mov
xchg
cmps
push
sub
mov
cmp
and
mov
sbb
mov
sbb
lock
sbb
cmp
ss
sbb
lock
sub
clc
call
cmp
dec
and
fld
jmp
mov
add
ins
adc
xor
and
or
mov
jge
jne
rcl
(bad)
dec
fwait
pop
adc
pusha
adc
ins
add
(bad)
dec
hlt
ret
cmp
out
shl
sub
inc
ret
in
adc
hlt
push
nop
test
add
jg
mov
add
pusha
and
push
dec
sbb
adc
ss
outs
fisttp
pop
test
dec
inc
dec
hlt
hlt
addr16
in
mov
and
dec
mov
mov
(bad)
in
in
jnp
shl
lea
fld
adc
call
call
mov
adc
or
cmovae
loopne
pop
fs
pushf
jbe
inc
dec
(bad)
push
mov
or
dec
mov
in
mov
and
mov
inc
add
pop
das
adc
jmp
adc
sbb
add
jne
xor
(bad)
fiadd
stos
(bad)
cmc
cli
out
test
sbb
rol
push
in
mov
das
sbb
or
sbb
and
icebp
jle
mov
or
jo
push
lea
add
adc
pop
push
push
jne
pop
icebp
ret
xchg
aam
shl
outs
and
xchg
in
add
xchg
inc
in
or
adc
and
cmc
dec
add
xor
jne
ins
or
pop
pop
jmp
sbb
data16
stos
mov
inc
cwde
aam
cmps
push
pop
push
jo
jl
clc
sbb
add
push
pusha
inc
mov
ret
add
sub
ins
mov
mov
sbb
ret
(bad)
adc
jg
inc
cmp
xor
ins
mov
jae
add
mov
xor
sbb
shr
cwde
jno
cdq
pusha
nop
sub
arpl
sti
mov
jle
nop
mov
add
fnstsw
out
push
cmp
mov
in
add
(bad)
sub
inc
je
aaa
aaa
aaa
aaa
dec
je
pop
je
addr16
jno
pcmpeqb
xchg
cmp
gs
mov
stos
addr16
push
mov
enter
inc
pop
and
push
mov
enter
hlt
call
add
cmps
sbb
sub
ret
inc
test
jbe
in
mov
std
push
mov
push
push
push
xchg
xchg
pop
pop
pop
mov
push
push
mov
mov
cmp
inc
dec
dec
fs
mov
mov
mov
shr
xchg
xor
rol
cmp
inc
cmp
jae
in
sub
dec
inc
in
imul
or
lahf
or
sub
add
lea
jmp
mov
mov
enter
mov
xor
or
cmp
in
jl
mov
xor
add
lock
jno
adc
add
push
sub
sub
sub
inc
or
sbb
inc
xor
sbb
(bad)
adc
adc
ins
and
outs
jl
loope
sub
add
(bad)
cli
xor
jo
mov
xchg
or
mov
sbb
sar
nop
xchg
mov
inc
mov
cmp
push
lea
mov
jl
ins
aaa
pop
mov
xchg
push
inc
js
push
or
mov
and
cs
dec
inc
mov
and
push
cld
or
xchg
ins
imul
stos
and
sub
out
push
clc
popa
add
ins
call
lds
fst
dec
sbb
js
mov
push
fsubrp
outs
push
cmp
dec
ins
add
mov
lods
mov
or
or
inc
js
mov
xchg
mov
cld
add
jbe
sub
jo
nop
(bad)
xchg
clc
dec
or
sbb
cmp
xchg
imul
call
out
sbb
sbb
xchg
adc
js
push
jb
sti
sbb
sbb
sysexit
sub
jb
adc
call
sar
mov
and
clc
pop
cli
aad
inc
mov
cmp
cmp
sub
jge
xchg
jge
and
(bad)
das
fsub
in
in
cmp
jl
cmp
jbe
iret
inc
adc
push
ss
je
into
cmp
into
mov
inc
mov
mov
bt
cmp
inc
je
ins
sbb
stos
adc
jne
mov
mov
add
imul
(bad)
cmp
ja
jo
xor
aaa
sub
add
push
xlat
mov
test
pop
(bad)
adc
aas
push
rcr
inc
or
ja
test
cld
sub
inc
mov
dec
sub
pop
pop
fadd
dec
inc
adc
cmp
mov
imul
pop
jmp
push
push
clc
pop
mov
and
add
out
mov
pop
pop
or
dec
cwde
cmc
popf
jne
push
ins
movzx
dec
inc
push
ins
mov
pop
push
and
stos
adc
mov
jmp
add
retf
dec
lds
test
ret
pop
stc
sub
cmp
mov
push
aad
(bad)
mov
add
mov
xchg
inc
mov
mov
jbe
or
inc
shl
cli
dec
cs
mov
mov
xor
or
mov
sub
lock
cmp
enter
dec
push
add
xor
jecxz
pop
loope
jne
mov
test
das
xor
push
sbb
add
icebp
mov
pop
(bad)
gs
ret
push
mov
mov
inc
xchg
dec
pop
push
test
adc
jo
add
sbb
pop
add
or
sub
jl
adc
or
sbb
jmp
sub
pop
add
push
inc
lds
(bad)
sub
push
pop
lock
clc
ss
imul
xchg
ret
add
mov
inc
lahf
rcl
ss
push
or
js
ja
sbb
push
ret
dec
cmps
and
aaa
xor
cli
cmp
cmp
jle
xchg
add
imul
inc
add
rol
pusha
xchg
add
add
add
push
xor
dec
xor
inc
shl
inc
mov
sub
or
push
push
imul
push
adc
cdq
add
enter
loopne
or
clc
inc
pusha
aam
add
cmp
push
push
(bad)
jle
call
mov
scas
jno
jmp
pop
dec
inc
mov
xor
call
leave
mov
jne
and
test
push
inc
inc
dec
mov
cli
mov
xchg
int3
or
jmp
adc
sar
mov
cld
push
pusha
mov
push
or
push
jnp
test
sub
test
fimul
cmp
cmps
adc
mov
and
inc
ins
pop
call
pop
fcom
lock
pop
call
xor
mov
mov
aas
rcr
fs
mov
or
pusha
out
enter
add
loope
add
dec
pop
adc
xchg
adc
(bad)
mov
das
add
and
sub
je
not
push
jb
mov
add
adc
dec
outs
mov
sbb
leave
or
rcr
leave
mov
inc
and
js
jo
enter
fs
mov
js
cmps
sub
dec
add
dec
add
inc
das
ss
jp
jne
or
mov
add
lods
mov
add
lods
jb
xor
cvttps2pi
adc
xor
cs
fiadd
retf
mov
jmp
mov
ins
sahf
stos
imul
push
daa
jns
sub
pop
push
jns
mov
or
jl
push
test
movs
jecxz
data16
pusha
adc
test
xchg
adc
and
xor
icebp
mov
mov
loope
push
fild
mov
push
mov
pop
mov
xchg
arpl
cmp
je
xchg
pop
mov
add
icebp
sti
mov
dec
mov
inc
in
cmp
jne
adc
pop
or
and
mov
call
jne
sysenter
sub
daa
daa
daa
and
adc
shr
daa
add
mov
sub
sub
mov
add
inc
stos
add
lds
imul
dec
jo
inc
pop
out
add
loopne
clc
sbb
or
xchg
sub
in
adc
loop
or
stos
(bad)
shr
es
and
pop
pop
jne
add
or
pop
jecxz
jns
test
xor
push
or
xor
adc
inc
adc
jg
pusha
adc
pop
xor
out
sbb
fcmovnbe
mov
dec
adc
or
sbb
mov
jp
pop
ds
mov
and
sub
in
add
cmp
call
push
push
add
in
sar
dec
mov
fistp
mov
xor
inc
mov
test
jmp
jmp
sti
xor
or
inc
jge
jecxz
es
or
sti
movd
cld
adc
pop
mov
cmp
je
cmp
in
adc
adc
cmp
dec
and
mov
punpckhwd
stos
test
push
or
adc
je
jmp
test
aaa
outs
push
ds
scas
sbb
retf
dec
sub
(bad)
or
jp
push
repz
cmps
loopne
pop
test
push
cmp
ficom
dec
or
push
adc
jo
xor
clc
or
and
push
pop
into
sbb
ret
xor
(bad)
push
call
and
mov
inc
pop
mov
push
inc
cmp
sti
in
add
and
or
stc
and
test
retf
out
and
cmp
sar
shl
add
add
xor
jmp
adc
mov
pop
retf
or
jge
lods
inc
push
pop
add
pop
add
pop
sub
and
sub
or
push
sub
call
add
test
sbb
add
out
xchg
or
mov
push
push
outs
popa
imul
sub
jg
sub
fnstcw
jb
mov
loope
or
push
adc
pop
xor
sub
xor
sub
cmp
je
cmp
pop
(bad)
push
pop
add
arpl
push
imul
cmp
sbb
mov
xor
inc
xor
add
sbb
nop
mov
call
cs
xor
add
sub
rcr
test
push
xlat
nop
addr16
pop
je
push
adc
or
adc
fidiv
push
or
(bad)
or
bound
push
ins
push
or
mov
jnp
movs
popf
add
sbb
and
add
xchg
cmp
xor
(bad)
aad
sub
stc
pop
ja
(bad)
and
and
sar
stos
and
pop
and
out
es
shr
dec
repz
lock
jo
mov
sub
cs
das
jmp
xor
xor
test
sar
fs
mov
sahf
out
xor
push
rcl
shl
fist
dec
xor
jp
dec
mov
loop
push
lock
jmp
mov
jb
test
je
cmp
lods
push
inc
aas
inc
sbb
xor
mov
das
mov
mov
push
mov
adc
test
cmps
mov
push
dec
push
sbb
add
fidiv
aam
pop
call
ja
push
sub
add
ret
mov
popa
(bad)
in
sbb
jmp
mov
out
aas
pop
ins
pop
pop
cli
shr
sbb
and
ret
mov
push
push
fsub
jo
mov
movs
popf
inc
and
inc
fcomp
shr
jbe
push
inc
sbb
mov
push
inc
inc
adc
adc
jmp
test
mov
push
push
mov
in
mov
or
fnsave
sbb
adc
pop
sti
cmp
je
dec
or
loopne
dec
inc
sbb
xor
jmp
test
mov
pop
xor
xor
xor
mov
mov
mov
bound
xor
leave
pusha
cmp
pushf
pusha
xlat
sahf
add
(bad)
and
adc
and
div
mov
fnstenv
nop
rol
cmp
int
or
push
mov
push
std
inc
cs
xor
push
add
aas
ds
inc
adc
mov
mov
xchg
and
inc
and
out
pusha
adc
shr
add
ins
add
outs
or
sub
mov
in
sbb
pusha
adc
adc
ss
cmps
aas
jmp
add
and
adc
(bad)
mov
xor
cmp
test
mov
xlat
inc
push
jp
dec
cli
xchg
fs
jnp
je
stc
repnz
mov
fistp
jo
sbb
bound
jbe
int3
in
inc
fld
add
es
xor
add
push
pop
mov
add
mov
or
push
dec
sub
xor
loope
sbb
(bad)
in
push
fiadd
mov
or
inc
pop
push
push
cmp
xor
(bad)
in
add
add
push
es
sbb
cdq
aam
xchg
jbe
test
mov
mov
jp
dec
fadd
adc
inc
fdivr
add
inc
test
pusha
gs
cld
arpl
push
push
cld
popa
sbb
mov
rol
and
jg
or
fisubr
xchg
retf
inc
mov
or
cmp
test
cld
fwait
xchg
cmp
sbb
dec
dec
ja
push
and
or
jecxz
dec
or
sub
mov
mov
or
icebp
cmps
out
rol
clc
or
cmp
or
push
test
js
xchg
xchg
out
sbb
pop
mov
inc
add
(bad)
outs
sub
or
and
out
call
dec
cmc
loopne
sub
loop
add
add
mov
mov
fidiv
xor
test
sbb
pop
mov
loope
(bad)
or
xor
inc
adc
call
mov
dec
cmp
add
bound
sub
mov
push
test
adc
in
jnp
sbb
outs
and
shr
(bad)
icebp
pop
sbb
xchg
sub
add
or
pop
in
pop
sub
dec
add
mov
mov
add
loopne
mov
je
daa
shr
xor
inc
cmps
or
js
test
pop
sbb
and
jne
sub
or
sub
fisub
adc
in
dec
sbb
xchg
movs
dec
adc
lds
test
mov
sub
cmp
or
cld
fsub
xor
jecxz
jge
jae
xor
inc
push
dec
rol
inc
mov
inc
test
or
adc
xor
aas
cmp
hlt
cli
(bad)
je
pop
in
aaa
bound
je
clc
xchg
pop
repnz
mov
inc
hlt
jns
sub
(bad)
call
push
dec
shr
pop
add
fisttp
pop
add
test
and
add
lahf
or
jle
cmp
outs
mov
jbe
(bad)
xchg
push
push
or
leave
jecxz
lods
or
add
fdivr
push
clc
inc
fdiv
aam
jo
fdivr
stos
call
pop
jb
jmp
dec
inc
mov
inc
xor
lea
call
dec
push
in
or
lea
mov
lea
or
lock
push
icebp
das
xchg
lods
inc
mov
push
cli
aam
mov
add
adc
push
cmp
push
sbb
scas
dec
and
mov
add
jae
sbb
nop
or
sar
inc
sbb
cmp
dec
jmp
push
lods
add
movs
xchg
mov
xchg
fnsave
lods
jbe
and
data16
mov
or
call
ja
inc
fucomp
mov
mov
xlat
inc
enter
repnz
mov
inc
add
ret
xchg
test
xor
icebp
jo
ins
push
rol
ins
imul
(bad)
clc
leave
inc
jb
adc
ret
pop
add
xor
mov
(bad)
push
cmps
outs
data16
push
xchg
pop
jg
or
add
jb
push
add
retf
sbb
and
jmp
(bad)
int3
adc
or
mov
hlt
mov
xor
cs
sub
fsubr
inc
repz
mov
add
mov
or
in
dec
shl
adc
aaa
mov
pop
test
xor
nop
or
call
ins
adc
inc
rol
rol
pop
test
movs
dec
xor
mov
movs
aad
ret
cmp
push
adc
sbb
sbb
add
jge
xor
retf
in
and
clc
mov
fadd
push
or
mov
sbb
cmp
jo
mov
jo
push
mov
mov
xchg
jo
jne
sbb
lods
or
sbb
dec
fisttp
je
adc
inc
dec
mov
lods
loopne
adc
add
cmp
jle
inc
loopne
jne
jbe
inc
jae
(bad)
fmul
cli
cs
fld
enter
shr
(bad)
fiadd
shl
push
enter
fist
mov
add
rcl
and
popa
mov
cmps
dec
add
aaa
xor
mov
(bad)
inc
fld
mov
push
pop
das
xchg
pop
cmp
adc
loope
xchg
das
dec
cmp
and
nop
cld
sbb
pop
and
repz
xor
xor
dec
mov
mov
nop
cwd
or
sub
mov
icebp
add
cmp
outs
dec
loopne
pop
add
add
and
inc
or
dec
sbb
fisubr
jp
enter
jmp
xor
mov
push
adc
mov
aaa
sub
nop
push
enter
(bad)
lock
pop
stos
lds
call
and
test
lods
add
sbb
call
mov
ret
pusha
inc
cmp
mov
sub
add
add
mov
xor
lea
push
sub
enter
jmp
rsm
cmp
xor
mov
jg
sub
mov
sbb
fld
cmp
push
push
leave
mov
pop
push
inc
mov
lock
and
(bad)
call
fcmovnb
and
mov
scas
dec
iret
add
add
hlt
or
fwait
push
add
push
add
retf
xchg
aas
jnp
push
jecxz
lods
loope
sub
dec
jmp
xor
dec
or
and
mov
je
jmp
jno
pusha
lea
and
jnp
and
loope
and
inc
push
cmp
loopne
sbb
dec
adc
shl
push
retf
adc
loope
mov
(bad)
repz
mov
sub
repz
pop
inc
inc
loop
lahf
sbb
mov
lea
xor
aaa
mov
dec
mov
and
daa
jp
jg
add
cmp
jge
adc
sahf
call
inc
cmp
or
push
push
inc
pop
and
clc
jecxz
add
retf
mov
adc
push
call
or
popa
mov
push
sbb
dec
add
xchg
inc
xor
push
mov
inc
call
sub
imul
pop
mov
aas
mov
mov
dec
loopne
rcl
clc
adc
and
test
sub
add
push
ins
sbb
ja
or
xor
mov
push
cwde
or
jge
adc
in
je
inc
cwde
mov
pop
lods
push
stos
push
xor
or
loopne
mov
or
xor
pop
push
jne
inc
add
sub
pop
push
setp
je
and
hlt
sbb
sub
mov
push
sbb
lds
bound
push
push
outs
or
jmp
lea
scas
add
sub
mov
mov
sbb
or
pop
xchg
push
xor
movs
(bad)
cmps
movs
sub
sub
pop
aas
in
adc
or
test
pop
push
add
jle
xor
rcr
or
push
xor
mov
lods
xor
dec
scas
xor
and
cmp
jne
inc
jmp
cmp
arpl
pusha
pop
or
mov
cmp
jbe
add
retf
mov
and
xadd
cmps
pop
xchg
inc
jno
mov
sub
ret
inc
fimul
jae
sti
cmp
pop
dec
push
push
dec
pop
stc
cmp
arpl
xchg
xor
lock
sub
div
jmp
lods
jmp
inc
shr
imul
clc
test
inc
push
sbb
or
push
popa
sub
dec
rol
nop
push
clc
(bad)
sub
add
add
push
xor
ret
cmp
push
inc
mov
icebp
add
cmp
leave
cmp
jne
dec
ja
sub
ret
sbb
push
and
and
out
jbe
xchg
aaa
sub
mov
inc
arpl
(bad)
adc
sub
inc
popf
arpl
pop
add
je
dec
xor
shufps
sbb
shr
ins
or
test
sbb
or
pusha
cli
out
push
ret
mov
sub
mov
hlt
ret
cli
add
add
add
imul
les
mov
enter
mov
push
sar
pushf
add
loop
ins
cmc
sbb
cli
mov
jecxz
dec
adc
jno
imul
cld
pop
cmp
sbb
neg
mov
adc
add
xchg
loopne
inc
nop
xor
push
inc
imul
adc
loopne
xor
and
and
dec
inc
cmp
pop
mov
adc
add
or
add
shld
repnz
mov
fsubr
fld
xchg
outs
add
mov
jbe
jl
sub
adc
adc
ds
xor
adc
inc
adc
mov
adc
adc
int3
pop
ret
mov
(bad)
pop
and
ret
outs
lock
sub
dec
jg
xor
test
adc
add
sub
and
sub
or
rol
fisttp
je
mov
shr
sub
sbb
inc
or
push
ret
cld
(bad)
mov
mov
out
ret
adc
sti
inc
push
mov
mov
ins
jbe
ror
fcomp
mov
inc
mov
mov
mov
ret
das
xchg
ss
add
adc
dec
repnz
jae
mov
xchg
jbe
lock
sbb
add
out
mov
dec
xor
test
push
mov
shl
jb
mov
outs
lods
mov
mov
dec
je
sub
jmp
xlat
jno
pusha
sub
jbe
inc
test
dec
in
ins
repz
rcl
xchg
mov
jge
xor
mov
mov
xchg
ja
adc
mov
or
mov
xchg
or
jecxz
outs
arpl
or
ja
or
das
retf
sub
jno
add
xchg
dec
xor
xchg
mov
cdq
push
inc
jne
call
fwait
div
out
icebp
ret
jle
sub
jmp
adc
or
sub
(bad)
jmp
jge
sar
shr
repz
dec
and
push
jb
enter
mov
inc
mov
or
clc
dec
jae
cmp
cmp
shr
mov
mov
push
sub
ja
sub
aam
and
cmc
inc
mov
test
dec
or
jge
mov
mov
ret
or
and
cmp
pop
scas
adc
int3
jae
in
or
out
cmc
sub
add
and
xor
fsub
das
loopne
pop
cmp
add
iret
test
outs
es
add
push
adc
mov
xor
fadd
add
pcmpeqd
sbb
add
sbb
adc
jle
sbb
sbb
movs
push
ja
mov
add
jo
mov
out
push
or
outs
xor
cmps
js
fadd
jae
jge
pop
adc
lock
cmp
inc
fadd
fld
or
xchg
hlt
loopne
mov
add
dec
or
ss
pop
sbb
add
shr
fimul
mov
fistp
xor
pop
clc
sbb
dec
rcr
cmps
jae
adc
stos
es
(bad)
call
mov
das
jb
icebp
clc
jae
loopne
or
add
leave
sbb
mov
enter
mov
lods
inc
sub
mov
pusha
sti
pusha
pusha
xchg
add
mov
adc
add
add
jp
xchg
cmp
jns
jle
push
outs
ins
adc
pop
cld
leave
adc
dec
test
rcr
retf
sbb
or
outs
dec
inc
jno
aad
add
jmp
inc
push
sub
lods
pusha
int3
add
mov
push
jmp
adc
mov
sub
retf
mov
enter
or
cmp
clc
mov
enter
sbb
mov
cmp
sbb
or
call
push
in
adc
shl
je
loopne
mov
call
pop
bound
mov
jae
sbb
ret
pop
sbb
adc
call
mov
lock
mov
(bad)
mov
enter
mov
fcom
mov
dec
popf
fldcw
retf
inc
data16
dec
pusha
add
mov
xor
fmul
or
add
lods
jnp
shr
add
cdq
sar
pop
scas
jne
cld
dec
jno
add
call
mov
adc
xlat
add
push
ret
sbb
cli
push
cld
dec
pop
mov
mov
rcr
js
adc
jmp
jp
push
add
inc
(bad)
mov
mov
(bad)
and
push
loopne
call
xor
sub
clc
shrd
loopne
add
jne
jne
test
add
ins
or
std
into
mov
call
(bad)
push
dec
cmp
or
xor
loopne
fiadd
cmps
pusha
push
push
fimul
lock
imul
pop
mov
jle
push
cmp
mov
mov
fiadd
or
mov
nop
sub
test
je
or
jmp
shr
and
sbb
fldenv
dec
and
fsub
mov
aaa
out
sbb
shl
pop
inc
cmp
stos
mov
cli
dec
in
mov
xchg
or
sar
mov
and
mov
jmp
or
pop
mov
(bad)
and
and
push
loopne
mov
mov
xor
push
sbb
mov
xchg
pop
push
ret
jne
or
rol
xchg
fld
cli
cmp
mov
int3
sub
jl
sub
test
xchg
add
xor
jb
lods
push
lock
push
xchg
fstp
mov
mov
loop
xchg
nop
pop
or
cld
and
ror
aas
fistp
and
lea
add
cld
not
je
in
nop
push
sub
dec
mov
neg
cmp
jb
das
jnp
and
jne
mov
jnp
hlt
mov
pushf
das
fs
gs
ja
push
xor
and
rcr
add
mov
imul
and
mov
mov
dec
mov
rcl
lods
inc
aaa
fistp
cmp
or
and
adc
out
cmp
cmp
inc
or
fndisi(8087
xchg
jecxz
add
jle
jg
push
fdiv
test
add
sbb
inc
test
les
cmp
(bad)
fwait
in
dec
mov
outs
imul
mov
or
sar
mov
mov
es
pop
sub
aam
jmp
xor
or
push
ds
xor
and
xor
pusha
jne
push
out
mov
xor
mov
lock
xor
dec
push
enter
dec
scas
enter
xor
or
les
mov
or
add
inc
std
jmp
cmp
dec
idiv
fidiv
sub
add
nop
pop
ja
sub
xchg
jg
mov
sbb
mov
loop
or
retf
ror
in
dec
lea
dec
ins
sub
ret
mov
cmp
jg
dec
je
add
lock
adc
xchg
test
push
add
cmp
mov
xor
mov
mov
jg
mov
xor
icebp
add
add
pop
adc
push
test
fidivr
jg
retf
stos
fcom
cld
sbb
inc
jne
dec
popf
movs
sub
mov
xchg
inc
fwait
inc
cmp
mov
jle
xlat
mov
mov
pop
ficom
clc
movs
jnp
dec
mov
pop
xor
gs
xchg
mov
sbb
cmp
adc
test
inc
and
xlat
push
or
loop
pop
(bad)
mov
and
inc
fs
inc
xchg
inc
xor
outs
jl
jmp
add
add
call
or
sub
test
ins
mov
inc
mov
mov
add
mov
mov
(bad)
jns
or
sar
mov
pushf
hlt
add
push
mov
fmul
dec
es
cmp
in
pusha
outs
or
add
mov
and
push
outs
push
sub
loopne
test
pop
and
mov
or
fisubr
ja
add
push
mov
mov
fist
or
cld
or
xchg
(bad)
mov
mov
mov
mov
test
mov
adc
sub
or
jge
pop
aaa
xor
inc
ss
ret
add
fwait
cli
cmps
cmc
mov
pop
setb
push
clc
pusha
or
dec
mov
outs
or
mov
add
pusha
pusha
or
add
clc
mov
adc
and
mov
mov
pop
adc
(bad)
lods
jge
inc
sbb
aaa
fnstcw
mov
pop
cmp
dec
inc
cli
push
push
add
jmp
xor
cmp
je
cmp
adc
cmp
jg
(bad)
cdq
push
and
or
les
and
cmps
sbb
push
jmp
cmp
pop
or
shl
push
or
mov
sbb
add
xor
retf
aaa
mov
adc
xchg
adc
(bad)
push
pusha
cs
jb
not
xor
mov
xchg
scas
push
jbe
add
or
mov
loop
xchg
ss
jle
cmp
jne
or
or
cmp
stos
add
scas
mov
jp
mov
or
call
mov
dec
idiv
jge
xor
xor
shl
or
adc
push
pop
mov
outs
sbb
xor
pop
mov
pop
data16
(bad)
mov
pop
and
xchg
inc
jmp
or
inc
jnp
jmp
in
sti
in
push
add
dec
jne
in
fnstenv
sub
test
lods
loopne
movs
lods
call
in
in
sub
adc
cmp
and
xchg
ja
xor
leave
push
fsub
and
mov
dec
adc
into
jle
fdiv
ret
std
gs
push
sbb
or
rcr
push
and
sub
sub
rol
ds
jmp
cmp
dec
add
mov
ja
lock
ret
aam
shl
(bad)
and
push
jb
or
aam
add
or
mov
or
mov
jo
enter
les
les
(bad)
les
add
enter
pusha
xchg
add
shl
or
cmc
rcl
jns
push
(bad)
cmc
shl
dec
push
push
clc
test
jne
xor
push
repnz
lahf
add
sbb
int3
stc
inc
mov
sbb
test
push
dec
cmp
xor
sub
inc
push
fcom
out
sub
cmp
out
adc
mov
or
mov
lods
add
dec
cs
lea
pop
jp
pusha
adc
xchg
test
(bad)
mov
add
int3
xchg
or
jmp
jg
xchg
inc
mov
repnz
stc
or
adc
stc
push
xor
mov
jp
push
cli
js
xor
xchg
sub
add
sbb
dec
push
out
cli
or
inc
push
jae
sub
sbb
dec
dec
adc
xchg
and
or
pop
add
cld
dec
shl
fs
xor
add
cmp
jge
mov
ins
jge
call
mov
or
push
mov
jns
xchg
sub
xchg
or
rcl
and
fisttp
mov
ffreep
in
add
inc
jge
inc
jo
cdq
sbb
or
dec
jns
nop
pop
cwde
jbe
pop
adc
sub
adc
test
add
and
stc
mov
shl
out
repz
repz
nop
nop
push
jo
or
cs
jge
je
xchg
pop
add
sub
mov
sbb
cmp
das
(bad)
or
or
push
sub
adc
call
mov
js
mov
pop
mov
ror
push
add
aas
pop
sub
cmp
push
shl
cmp
enter
aad
call
(bad)
or
add
push
xchg
sub
jmp
mov
pop
jle
aaa
fs
stos
ja
bound
inc
sub
sbb
sbb
and
inc
and
add
ret
or
call
jmp
cmp
jb
mov
jmp
lea
lea
cmp
jb
cli
or
push
out
adc
or
rol
retf
ins
les
stos
cli
in
iret
and
or
mov
add
lea
fsqrt
aad
fist
xor
sbb
movs
inc
ret
and
ret
push
fisubr
pop
dec
cmp
not
xchg
add
loop
lods
js
push
add
inc
inc
add
push
dec
push
add
es
xchg
add
int
adc
lods
inc
xchg
jbe
inc
push
mov
adc
jecxz
xor
in
mov
push
fild
inc
push
mov
inc
inc
and
dec
movzx
std
or
mov
mov
pop
adc
ror
fisubr
stos
nop
pushf
jne
nop
in
test
lea
in
cmp
pop
pusha
cmp
push
jmp
mov
push
ss
nop
mov
cmc
dec
test
adc
and
cli
mov
mov
mov
(bad)
cmp
xor
popf
and
cdq
not
cwde
mov
movs
mov
sbb
jne
ins
inc
push
out
lods
inc
lahf
rol
aaa
add
loope
xchg
push
mov
add
ja
xor
mov
adc
jmp
cs
hlt
mov
add
jb
ins
hlt
inc
lds
pusha
mov
test
push
stos
add
adc
int3
nop
push
ror
jbe
rcl
pop
inc
stos
sbb
fild
mov
or
xchg
sub
sbb
push
mov
cmp
mov
jge
pop
movs
dec
ins
idiv
mov
cld
mov
stos
xor
inc
push
push
shl
ins
and
sbb
add
scas
sbb
xchg
add
mov
les
je
mov
add
pop
sbb
inc
shr
mov
(bad)
or
push
pop
adc
imul
mov
sbb
rol
or
sub
dec
xor
add
aas
inc
ins
cld
jmp
in
je
jne
ret
jns
mov
mov
jno
scas
pusha
or
adc
cmp
and
cmp
mov
push
inc
iret
rcl
loop
jmp
add
add
cs
dec
jp
jmp
call
fisttp
adc
mov
dec
or
jnp
sbb
sub
aas
or
jg
sar
mov
or
popf
(bad)
jecxz
sub
pop
xchg
shr
fstp
outs
test
scas
inc
jmp
imul
adc
inc
mov
aaa
jge
adc
test
sbb
push
adc
jl
add
lea
push
xchg
jp
mov
retf
(bad)
mov
add
xlat
sar
mov
pop
not
add
rcr
push
add
xchg
iret
not
mov
inc
or
xor
setnp
inc
xor
repnz
(bad)
cmp
mov
xlat
adc
daa
push
mov
shr
and
add
mov
cmp
icebp
and
sub
call
out
pcmpgtd
mov
or
call
mov
xchg
jae
jmp
add
add
inc
cmp
bound
cmp
mov
mov
mov
mov
xor
jo
ins
sbb
xchg
int3
cmps
movs
cmp
add
adc
push
add
enter
add
push
pop
or
or
or
or
or
push
wbinvd
dec
cli
sub
test
xchg
and
add
ret
shr
ret
retf
inc
je
xchg
stos
adc
push
(bad)
scas
fcom
add
adc
fs
pop
scas
xor
and
or
or
or
mov
xor
pop
adc
shl
or
push
inc
mov
sub
add
iret
mov
pop
or
mov
imul
xchg
pop
rcr
xor
dec
inc
leave
je
cdq
pop
jge
or
sbb
dec
bound
fldcw
mov
int3
jne
(bad)
ins
add
out
bndldx
out
inc
aam
push
arpl
push
(bad)
and
push
or
sahf
mov
hlt
ret
jne
ror
mov
hlt
jecxz
push
test
hlt
fwait
mov
mov
and
sbb
pop
pop
jo
out
mov
adc
les
sbb
(bad)
ret
xor
pop
(bad)
call
mov
sub
adc
ins
push
dec
inc
inc
dec
xchg
test
das
jne
xor
pop
adc
shl
pop
add
inc
and
dec
cld
sub
ret
loopne
sti
and
fcomp
add
nop
pop
mov
jg
add
pop
mov
or
pusha
or
mov
not
jge
sbb
add
xor
mov
jg
push
mov
xor
aad
or
dec
mov
scas
add
mov
dec
inc
je
inc
cmp
jne
dec
scas
mov
mov
mov
mov
iret
add
shr
rol
add
jmp
sbb
scas
mov
add
mov
cmp
xor
dec
pop
adc
add
mov
mov
fst
in
adc
fiadd
(bad)
shl
or
not
inc
and
sub
aam
popa
test
xor
gs
imul
push
cs
add
mov
adc
shr
or
loope
pusha
and
ret
das
inc
in
xchg
xor
ins
test
je
xor
shr
or
dec
(bad)
shl
shl
seta
fdivr
pop
rcl
daa
add
push
ret
add
ss
jmp
jl
scas
dec
mov
add
xor
idiv
fiadd
dec
neg
mov
mov
pop
jno
mov
inc
out
ja
mov
jl
lea
adc
mov
add
inc
adc
lea
ja
jmp
push
xor
add
inc
lock
lea
inc
rcl
mov
out
sbb
clc
mov
xor
mov
jne
xor
adc
inc
daa
mov
xchg
adc
sbb
xchg
xor
and
add
std
pop
fnsave
or
je
jmp
jmp
inc
outs
test
jmp
add
mov
cmp
or
movs
cmp
fimul
or
(bad)
in
dec
adc
cmps
jne
mov
xchg
pop
push
dec
mov
fmul
or
push
sub
(bad)
adc
pop
cld
hlt
xor
aas
loopne
mov
enter
jne
loopne
fs
aad
pop
out
or
and
lds
into
dec
sub
push
mov
pusha
inc
test
adc
xor
cmp
(bad)
adc
xchg
mov
aas
inc
xchg
mov
or
sbb
inc
inc
inc
outs
mov
push
xchg
imul
or
fist
inc
inc
xor
xor
dec
and
and
inc
gs
cmps
fadd
xchg
femms
cmps
push
iret
inc
shl
pusha
jecxz
test
sbb
push
js
and
retf
pop
add
sub
push
mov
push
inc
inc
bound
mov
xor
inc
ss
test
shr
add
sbb
lds
(bad)
mov
or
movs
popa
aam
pop
scas
bound
and
adc
ja
ret
or
adc
out
aaa
and
xor
inc
imul
or
test
or
jae
jno
inc
xchg
mov
mov
push
sub
mov
popa
and
xchg
add
and
shr
or
and
mov
or
mov
push
xchg
and
xchg
aas
add
and
add
lock
mov
add
xchg
or
push
inc
dec
iret
push
ins
or
mov
or
ins
iret
fisubr
cmps
das
and
sbb
test
push
xchg
test
push
pop
loope
pop
imul
pop
inc
add
jo
iret
push
add
and
pusha
pop
maxps
xchg
sbb
cmps
inc
adc
push
inc
mov
sbb
dec
push
inc
xor
and
inc
imul
scas
lods
or
inc
mov
mov
inc
cmps
pop
cmps
rol
inc
or
xchg
adc
lahf
aaa
jl
mov
adc
popa
pop
lds
dec
sub
add
mov
das
lds
push
mov
or
out
jae
dec
and
dec
xchg
add
mov
outs
jne
jae
gs
inc
add
inc
pop
and
push
add
ret
jmp
pop
adc
mov
inc
push
neg
std
pusha
dec
scas
imul
xlat
jmp
adc
and
neg
add
sbb
xchg
sahf
sub
rcl
push
adc
fucomip
inc
ins
mov
or
cmps
sub
adc
lds
addr16
push
or
add
push
push
mov
mov
addr16
(bad)
lock
scas
mov
add
or
mov
inc
ret
push
pop
xor
ja
mov
rcl
dec
inc
push
popf
nop
mov
daa
xchg
iret
inc
add
popa
imul
dec
adc
imul
arpl
mov
pop
movs
or
or
push
xor
sbb
jno
push
addr16
adc
les
mov
push
pop
mov
ret
les
stos
and
lds
div
add
and
push
(bad)
outs
and
rcl
add
mov
pop
gs
and
pop
(bad)
dec
pop
adc
or
lds
or
(bad)
retf
adc
jo
add
mov
jbe
neg
adc
pop
jns
test
xchg
lea
xor
imul
mov
pop
pop
imul
retf
clc
fisub
add
sub
mov
cmps
pop
xor
inc
mov
add
addr16
sbb
dec
movzx
shl
cwde
adc
aas
jmp
push
sub
push
jg
add
fmul
sbb
imul
inc
mov
adc
add
fisttp
cs
cmps
ins
xlat
mov
xchg
pop
push
jg
ins
das
and
inc
fild
push
mov
retf
push
sbb
jmp
not
push
test
lahf
xlat
cmc
test
test
(bad)
adc
mov
pop
(bad)
dec
ins
(bad)
jns
fist
or
mov
inc
not
inc
dec
sub
(bad)
lods
cwde
pop
push
or
jbe
pop
pusha
dec
sub
aaa
push
out
jmp
lods
sub
shl
inc
out
addr16
add
ds
inc
jl
push
bound
sub
(bad)
sub
fsubr
mov
mov
ss
sbb
mov
and
in
in
test
mov
and
clc
sbb
enter
loopne
hlt
mov
movzx
mov
xor
clc
sub
sub
xlat
add
mov
add
shr
add
dec
fidivr
sar
aaa
push
xchg
fstp
fwait
xor
push
push
push
je
add
nop
jb
mov
mov
enter
rcr
inc
enter
mov
rcl
out
fadd
ss
xchg
loopne
mov
loopne
jne
movs
push
ret
add
xor
push
push
pop
mov
mov
jo
pop
ja
jno
vpaddsb
in
jnp
je
faddp
sbb
stc
fsub
fwait
jmp
dec
ins
iret
or
fld
cmp
addr16
fsubr
sbb
mov
mov
ret
push
mov
sub
pop
arpl
mov
pop
rcl
ret
popa
clc
repnz
ret
aam
pmaxsw
rol
jne
jl
fisttp
jmp
fsubrp
gs
pop
push
jns
les
xchg
xchg
jae
sbb
pavgw
fs
sub
lods
das
sbb
sbb
or
mov
adc
and
clc
and
icebp
sub
and
add
iret
jmp
fdivr
push
inc
and
and
mov
mov
loopne
add
push
pusha
mov
cmp
or
xchg
push
pop
rcr
cs
dec
jp
sub
lods
ret
xor
cwde
pop
pop
jo
dec
cdq
or
dec
or
jmp
cmp
outs
into
xchg
xchg
clc
and
or
leave
mov
nop
sbb
clc
xchg
movs
pop
pop
pop
ret
add
sbb
inc
fild
out
and
push
(bad)
mov
sar
jg
xchg
sbb
imul
mov
push
ss
xchg
cmp
shl
push
pop
xchg
movs
hlt
fild
sbb
sbb
cld
xchg
mov
dec
xchg
adc
(bad)
gs
push
out
cmp
mov
movzx
sbb
jnp
add
jb
imul
inc
add
dec
(bad)
xor
push
es
(bad)
mov
dec
pop
ret
xor
pop
xchg
fsubrp
arpl
rcr
lods
leave
ret
mov
xlat
fiadd
cmp
cmp
les
xor
adc
int3
sub
or
sbb
xchg
inc
push
adc
mov
enter
add
test
adc
pop
neg
sub
adc
pusha
sbb
dec
sub
or
in
mov
push
ret
fidiv
ss
imul
add
lods
stc
jmp
adc
xchg
lods
push
cmps
inc
mov
loopne
fcmovbe
ins
(bad)
into
push
lea
add
xor
inc
add
jo
jo
mov
jmp
sub
sbb
adc
sbb
mov
pusha
add
lahf
int
sub
sub
sbb
jg
adc
xor
and
das
cmp
jae
mov
xor
fdivr
adc
(bad)
push
mov
das
mov
xor
sub
js
dec
lock
mov
sbb
je
jmp
and
jge
mov
sub
sub
xor
push
xor
imul
into
jne
mov
test
mov
add
add
or
mov
mov
pop
and
div
lea
adc
dec
fcmovb
add
add
jne
cmps
pusha
push
sbb
sahf
push
clc
in
add
sbb
mov
push
or
mov
dec
lock
ins
ror
hlt
lock
scas
jne
jne
push
or
mov
or
mov
enter
retf
mov
sbb
push
in
cwde
jnp
pop
lock
mov
add
xor
sub
pop
push
aam
or
inc
ret
test
loope
adc
adc
add
(bad)
xchg
sbb
(bad)
int3
test
mov
sub
fisub
loop
add
mov
sbb
shr
dec
or
shl
arpl
loopne
sbb
outs
repnz
hlt
jo
xchg
ror
inc
and
dec
bound
push
push
xor
inc
push
push
ins
retf
push
outs
jecxz
mov
and
mov
add
xchg
dec
aaa
and
fcom
stc
jmp
dec
dec
cld
cmp
add
push
dec
les
or
adc
gs
xor
sbb
outs
sbb
inc
mov
sbb
dec
pop
addr16
in
push
inc
sbb
or
pop
dec
popa
add
adc
gs
dec
and
lahf
xchg
inc
xchg
stc
fmul
mov
push
sbb
ins
mov
adc
inc
push
xchg
imul
or
popa
outs
or
push
outs
inc
add
xor
push
adc
pop
inc
ret
test
cmp
inc
outs
sbb
aam
adc
push
push
retf
inc
dec
jo
imul
push
and
dec
sbb
outs
rcl
fldcw
jp
test
jle
ins
sbb
iret
outs
enter
xor
jne
fadd
(bad)
jnp
adc
jp
jo
or
mov
addr16
mov
xchg
mov
inc
(bad)
dec
rcr
push
push
clc
jnp
ss
sub
inc
loop
and
loope
dec
sbb
push
or
ss
outs
inc
add
cmp
je
dec
dec
in
lods
cmp
dec
mov
push
cs
sub
(bad)
dec
xlat
in
xor
or
or
cwde
cmp
jnp
retf
mov
jo
adc
or
jae
jb
fst
push
sub
xor
pusha
not
lods
mov
add
outs
jne
xor
adc
mov
dec
test
fsub
rol
add
ds
outs
imul
push
push
adc
push
scas
mov
add
or
sub
enter
or
cs
add
outs
adc
mov
xchg
dec
add
mov
fcmovu
out
xchg
das
sub
push
inc
dec
pop
icebp
stos
(bad)
pop
dec
jp
dec
dec
cmps
ins
pop
or
inc
fadd
aam
mov
sbb
jl
push
hlt
push
cld
and
and
call
inc
into
ja
jns
ja
mov
adc
call
adc
arpl
ins
pop
push
fst
sub
pop
and
and
or
pusha
loop
lods
in
lds
pop
stos
retf
jb
je
leave
or
mov
sub
xor
fmul
fs
mov
stc
cmps
fsubr
add
mov
inc
adc
xor
push
fild
inc
sbb
xchg
loopne
adc
imul
sbb
outs
cmpps
(bad)
int
ds
pinsrw
pusha
cmps
cs
stc
call
or
push
js
dec
enter
mov
sub
sti
sbb
pop
or
sub
pop
shl
sbb
ror
ins
inc
cmp
(bad)
mov
mov
or
sbb
inc
outs
add
sub
xor
bound
sbb
inc
icebp
adc
fild
jg
adc
mov
inc
ret
jne
mov
dec
inc
inc
test
jb
popa
jmp
add
sbb
push
stos
cmp
neg
aaa
cli
pop
push
enter
jae
mov
in
call
and
inc
adc
outs
or
and
lea
aas
cmp
or
push
dec
fwait
mov
dec
pop
ja
ret
in
call
pop
push
sbb
scas
test
popa
add
add
add
aad
cmp
mov
out
dec
stos
xor
shl
bswap
fwait
jge
mov
fwait
das
xor
dec
je
or
cwde
xchg
str
cmp
es
dec
lock
or
pop
add
inc
idiv
js
mov
push
dec
pop
add
jae
out
sbb
stos
sbb
cmp
mov
cmp
lds
pop
das
adc
dec
xchg
mov
xor
adc
scas
lds
mov
mov
inc
or
arpl
sub
(bad)
jl
sbb
into
fwait
xor
push
aas
pop
dec
pusha
inc
inc
mov
adc
clc
pop
inc
test
push
adc
rol
popf
ss
dec
or
or
aad
sub
pop
in
outs
adc
dec
fucomi
les
popf
jg
sahf
pop
loopne
jb
cmp
out
popf
jg
pushf
movs
dec
inc
add
add
sahf
sub
js
xor
pop
xor
push
lods
shl
pop
xchg
adc
xchg
ins
daa
xchg
and
or
push
xchg
addr16
jl
cmps
jmp
mov
cmp
out
mov
test
call
adc
jns
pushf
cwde
add
jmp
in
or
sbb
rol
loopne
(bad)
adc
bound
add
adc
mov
mov
xor
addr16
bound
inc
js
sbb
out
nop
shl
clc
les
imul
add
cmp
test
jns
xchg
test
pop
mov
daa
jae
and
inc
cmp
xor
jns
mov
jmp
imul
or
inc
inc
inc
inc
jg
int3
add
and
sub
pushf
dec
dec
jmp
(bad)
test
add
pop
stos
or
push
movs
in
mov
adc
rol
pop
xor
jecxz
jmp
xor
inc
(bad)
stc
cmp
add
inc
cmovg
adc
rol
in
je
test
enter
or
repz
in
add
cmp
mov
call
push
pop
dec
pop
sbb
or
retf
daa
xchg
pop
pop
push
dec
loopne
fiadd
add
pop
xchg
sub
in
nop
add
mov
ret
jo
inc
adc
fsubr
push
cmp
add
loopne
sbb
lsl
dec
mov
inc
sbb
adc
add
mov
icebp
or
cwde
push
lods
xchg
mov
mov
sbb
inc
sbb
movaps
imul
inc
pop
adc
add
or
stos
sub
lock
mov
push
movs
lods
call
das
add
push
jbe
push
pop
mov
daa
pmulhuw
mov
xchg
inc
movs
adc
mov
jmp
dec
add
shl
push
outs
jecxz
jo
add
push
rol
mov
movs
arpl
nop
sub
test
dec
and
dec
rol
xchg
xchg
(bad)
bound
les
adc
ins
in
arpl
arpl
fs
and
ficom
clc
pusha
arpl
test
adc
push
sahf
mul
push
nop
test
xor
pop
push
add
arpl
test
sub
sub
mov
ss
add
(bad)
in
lods
(bad)
popa
pop
pop
das
outs
test
ret
mov
les
add
xor
in
inc
cli
sti
aam
shl
arpl
mov
call
in
gs
inc
add
adc
add
nop
push
add
sbb
ins
add
dec
dec
gs
add
and
mov
mov
or
pop
jo
enter
inc
mul
adc
jno
outs
shr
out
push
cmp
jp
xor
add
or
arpl
pop
mov
inc
movs
mov
push
jb
push
adc
enter
inc
mov
or
jl
cmp
cmp
cmps
aas
xor
loopne
frstor
xor
mov
xchg
inc
inc
or
adc
cmps
add
add
inc
ja
or
and
xor
test
push
dec
and
sub
xchg
stc
jecxz
bound
gs
js
ret
add
or
push
inc
(bad)
fldcw
aaa
mov
mov
jo
and
inc
fmul
and
stos
fs
iret
dec
cmp
push
pop
aaa
aam
or
push
dec
outs
jb
enter
in
pop
jmp
dec
or
jne
jae
outs
add
add
adc
adc
or
lods
call
and
xor
dec
sahf
lock
mov
cmp
outs
imul
pop
adc
out
aam
push
cmp
pop
dec
outs
sub
add
adc
push
pop
sbb
inc
jne
test
imul
jnp
popw
sub
in
hlt
add
mov
or
mov
inc
mov
or
pushf
gs
cmp
add
pop
push
fs
imul
(bad)
scas
test
dec
jg
xchg
stos
addr16
loopne
cmps
stos
dec
sub
das
stos
das
cmp
add
imul
dec
push
sbb
inc
js
push
call
sbb
adc
shr
pop
cmp
xor
mov
mov
add
inc
jmp
cwde
and
sub
push
mov
add
sub
mov
rol
add
add
adc
push
and
jae
xchg
inc
xor
stos
mov
adc
lahf
xchg
push
sbb
ret
xchg
shl
arpl
or
inc
fist
push
xchg
sub
sbb
or
sbb
add
or
aaa
inc
add
add
pop
or
outs
lods
test
fbstp
and
and
mov
cwde
pop
add
push
jecxz
neg
daa
in
lods
inc
scas
(bad)
es
das
and
icebp
shr
icebp
imul
push
clc
ins
push
xchg
push
hlt
imul
pop
sbb
inc
adc
add
in
in
add
es
adc
sbb
mov
and
lea
mov
mov
mov
hlt
add
sub
jns
sbb
dec
jae
push
idiv
lock
inc
and
or
adc
adc
jo
rol
inc
or
loopne
xor
pop
add
jle
add
aad
and
xchg
or
test
lods
gs
push
dec
call
in
and
mov
es
dec
dec
xor
jns
inc
adc
mov
(bad)
adc
and
push
jl
pushf
jno
inc
popa
add
sub
or
dec
lods
push
shr
ins
dec
pop
sub
fmul
aaa
add
pop
cmp
aam
push
jnp
mov
xor
add
mov
cmp
xchg
aas
add
in
shl
rol
or
push
enter
add
stos
or
sub
and
or
jmp
cmp
jb
ror
dec
add
push
sbb
pusha
fmul
or
mov
dec
test
add
or
pop
dec
add
inc
js
movs
pusha
and
je
add
test
push
jmp
adc
pop
dec
push
add
adc
pop
mov
add
mov
mov
adc
clc
jns
bndldx
lods
dec
fucomip
xchg
in
mov
push
popa
fs
mov
sbb
pushf
xchg
iret
add
cmp
add
cmp
add
dec
mov
push
outs
sbb
lock
or
xchg
adc
xchg
lock
xchg
add
or
push
dec
lock
pop
adc
pop
sbb
loopne
and
cmps
icebp
fiadd
or
mov
or
xor
inc
xchg
or
add
clc
sbb
and
add
ror
rcr
jnp
inc
das
add
in
ret
adc
daa
or
retf
jp
femms
jmp
or
adc
adc
mov
lds
add
imul
clc
mov
add
dec
jae
adc
sbb
push
loopne
mov
data16
xor
add
loopne
mov
test
dec
mov
pushf
jl
movs
pusha
js
push
and
dec
aad
mov
xor
(bad)
add
mov
mov
sbb
adc
inc
mov
ins
daa
mov
call
pushf
arpl
in
mov
adc
data16
ja
or
call
push
push
ins
mov
adc
jb
neg
adc
pop
das
data16
jae
inc
mov
push
fisttp
add
jae
jl
pusha
add
or
or
gs
scas
push
jne
xor
addr16
adc
push
dec
test
sub
jecxz
push
and
lds
jmp
pop
mov
jno
mov
adc
push
outs
imul
jl
(bad)
mov
mov
gs
outs
inc
fidiv
mov
adc
mov
mov
ds
fmul
mov
add
sbb
xchg
in
popa
jns
mov
add
dec
and
or
push
out
sub
jns
sub
cmp
add
jmp
mov
push
cvtps2pd
adc
mov
sbb
push
in
sbb
nop
test
add
test
pop
add
pop
nop
rol
ins
movs
js
sbb
push
pop
inc
repz
add
mov
adc
repnz
push
and
xor
out
and
inc
or
not
scas
sti
pop
jmp
test
inc
sub
dec
loope
jecxz
inc
or
test
add
jecxz
sub
dec
push
aas
rol
adc
iret
xor
sbb
fs
push
xchg
mov
call
add
or
(bad)
push
xlat
add
fs
inc
dec
rol
jle
fnsave
and
ror
popf
cmp
push
pusha
mov
sar
pop
fsubr
pop
mov
stos
out
inc
inc
rol
adc
outs
retf
scas
call
adc
retf
xchg
mov
ror
sbb
jg
scas
push
mov
sbb
mov
add
mov
push
jb
jmp
mov
push
xchg
mov
adc
pop
add
fs
push
inc
out
repnz
dec
mov
fdivr
mov
inc
fld
cwde
aaa
arpl
jge
push
mov
or
bound
add
push
or
cdq
or
(bad)
out
and
loopne
mov
add
mov
jns
and
dec
mov
dec
jo
or
inc
popa
mov
push
add
aam
and
call
add
(bad)
int
popa
push
movs
bound
cmp
push
push
or
int
jge
inc
fisttp
push
inc
popa
xchg
nop
nop
popf
frstor
push
imul
push
ret
jle
xchg
push
inc
gs
dec
cmp
push
loopne
cmps
sub
mov
dec
add
fwait
mov
gs
jl
mov
sahf
pop
mov
pop
mov
and
xchg
pusha
push
ror
cs
adc
cs
test
jle
add
aam
loopne
push
mul
add
add
aam
inc
jge
add
adc
pushf
pop
and
push
daa
iret
inc
outs
rcr
cmp
push
sbb
(bad)
or
or
jecxz
add
sbb
jge
pop
nop
sbb
bound
sub
iret
mov
shr
(bad)
fld
rcr
das
outs
rcl
inc
cmp
loop
push
pop
fild
scas
add
cmp
and
ror
push
add
push
add
cmp
rcl
adc
std
mov
pop
cmp
mov
imul
mov
call
loope
sub
in
push
inc
or
popa
xchg
adc
in
out
pop
jb
push
mov
idiv
or
ror
add
dec
adc
sub
lds
into
ds
es
movs
or
or
add
(bad)
pop
add
xlat
pusha
fadd
popa
test
cli
dec
xlat
les
clc
sbb
xlat
xor
xchg
inc
adc
imul
sub
in
sbb
pop
dec
sti
dec
fdivr
iret
sbb
push
dec
or
xchg
ret
mov
xlat
add
adc
fiadd
scas
inc
cmp
popf
ins
add
lock
ja
add
dec
clc
test
ret
jnp
ret
jb
xor
jecxz
les
pop
xchg
fst
xor
jns
lds
adc
ins
mov
out
jg
test
cmp
dec
add
jno
and
pop
add
and
lds
aas
daa
jns
pop
push
pop
stc
cmp
xchg
mov
inc
add
sbb
mov
push
nop
add
test
std
(bad)
fisubr
shl
sbb
mov
cmp
or
pop
xchg
retf
pop
mov
xchg
dec
pop
or
out
int3
or
retf
push
mov
sub
scas
mov
jmp
dec
or
jne
inc
xor
sbb
push
(bad)
cmp
pop
pop
ret
sbb
jne
clc
mov
xor
rcr
mov
cwde
push
jo
or
xor
xor
or
ror
loopne
mov
lods
rcl
(bad)
mov
push
call
cmp
popf
les
add
inc
push
push
arpl
add
arpl
arpl
cmp
and
adc
les
adc
mov
jp
xor
or
mov
leave
jecxz
leave
add
clc
push
or
add
mov
push
int
dec
sahf
adc
push
push
sbb
pop
xchg
pop
pop
shl
xchg
and
add
into
push
das
jle
cwde
sar
push
jb
rcr
div
push
jecxz
add
sbb
popf
pop
adc
loopne
(bad)
pop
dec
or
pop
xchg
sbb
add
inc
cmp
push
inc
retf
fild
cmp
adc
or
ins
mov
popa
je
pop
(bad)
sbb
push
pusha
xchg
jmp
mov
and
sub
pop
xor
adc
and
sbb
or
retf
mov
cmp
cmp
scas
add
adc
jmp
test
adc
adc
add
xchg
inc
xchg
ins
lods
add
adc
or
sti
or
aaa
xchg
dec
aas
dec
call
add
test
mov
out
jbe
mov
mov
mov
int
jmp
or
add
lds
movs
push
mov
int
dec
push
push
pop
push
cmp
sbb
adc
cdq
dec
xchg
std
inc
lock
dec
mov
cmp
jmp
jnp
int
push
ror
ror
cs
cmp
or
and
cmp
cmp
fiadd
int
aas
jg
(bad)
loopne
dec
jo
push
shr
adc
sbb
jae
into
into
mov
mov
mov
iret
dec
push
mov
pop
push
dec
mov
inc
ret
nop
inc
inc
outs
iret
dec
xor
test
dec
xor
ret
adc
adc
movs
nop
rcl
pop
nop
mov
ror
jns
clc
fwait
mov
mov
gs
imul
loopne
inc
ja
and
dec
mov
add
cs
outs
dec
int
(bad)
scas
sub
sbb
call
xor
xchg
shr
dec
xor
or
or
add
dec
idiv
(bad)
or
inc
fdivr
(bad)
push
inc
add
or
ins
pusha
jae
into
adc
fadd
and
adc
addr16
call
dec
lods
bound
push
cwde
xchg
movs
and
mov
xchg
mov
push
das
add
push
cmova
and
jecxz
add
mov
push
xchg
retf
out
sbb
cmp
ins
or
push
adc
pop
lds
rol
shl
gs
shl
and
mov
and
jg
popa
js
mov
nop
test
and
mov
std
movs
xchg
dec
xor
mov
ss
jno
push
aam
adc
jo
ins
imul
or
mov
pop
push
xchg
push
push
pop
fcom
test
mov
jg
test
rcr
pop
pop
jb
or
push
jo
cwde
icebp
xor
mov
rol
lds
cmp
retf
pushf
pop
pusha
retf
jne
test
dec
inc
or
cmp
mov
scas
inc
clc
xchg
jb
mov
xchg
add
jl
or
pop
mov
dec
outs
cmp
repz
sar
cmp
push
cld
ss
in
cmp
repnz
inc
fild
sahf
loopne
loop
add
push
nop
dec
iret
je
xor
hlt
gs
mov
fmul
lea
push
shr
inc
repnz
and
stc
int3
ror
dec
cmp
mov
or
fcomp
mov
mov
mov
pushw
mov
inc
push
cwde
mov
sbb
ja
push
mov
(bad)
rol
jge
scas
push
jo
(bad)
jge
jge
movs
es
in
imul
dec
in
pop
push
sub
dec
cmp
ins
das
push
add
push
pop
ja
push
xor
inc
inc
or
(bad)
clc
jmp
dec
add
and
dec
fmul
aad
and
and
fs
ins
sbb
test
cmp
inc
dec
imul
(bad)
ss
or
jae
je
push
jp
jo
outs
outs
jmp
add
bound
daa
arpl
pop
jge
lods
pop
das
call
jo
mov
push
sbb
or
push
lock
add
inc
fs
push
jae
sti
arpl
popa
adc
inc
add
inc
mov
imul
push
paddw
mov
outs
arpl
xchg
or
or
add
cmps
dec
add
pop
aas
mov
jo
pop
rol
js
mov
cs
pop
(bad)
jne
pop
fild
jne
jp
pop
(bad)
and
or
sub
push
lea
mov
cmp
xor
mov
add
mov
xlat
cmp
sub
and
mov
xchg
push
sbb
sub
xchg
or
jne
sbb
ins
inc
test
add
cwde
repz
add
push
pushf
xor
inc
add
and
jne
je
rol
mov
adc
mov
in
(bad)
mov
push
inc
lods
scas
pop
add
push
inc
inc
shl
push
adc
aaa
pop
mov
test
xor
xor
mov
xlat
dec
outs
xor
jno
jns
int3
shr
rep
push
inc
arpl
xor
outs
add
movs
ja
dec
add
shr
(bad)
outs
pop
fsub
das
push
jmp
xchg
stos
xchg
lds
stos
call
cmp
push
push
fdiv
pop
dec
arpl
(bad)
adc
inc
cmp
jns
mov
into
dec
lods
dec
mov
inc
or
sub
and
add
pop
adc
jae
mov
mov
sar
daa
and
dec
jnp
ret
call
dec
outs
adc
xor
dec
xor
adc
inc
fwait
outs
push
inc
pop
cmp
or
mov
xor
je
mov
jl
dec
ss
xor
fwait
xor
test
pop
cmp
stc
jns
pusha
xchg
ret
cmc
gs
push
xchg
movs
cmc
js
jo
xor
call
push
cmc
add
js
xchg
add
push
jns
adc
pop
test
mov
xor
mov
add
test
sub
das
leave
shr
loope
aas
das
dec
mov
xor
xor
jbe
(bad)
adc
push
sbb
mov
movs
push
jecxz
mov
stos
test
shr
or
in
add
hlt
lods
push
push
mov
ret
add
jl
mov
cmp
cdq
jge
xor
add
repnz
cmp
push
add
dec
jb
inc
mov
xor
in
inc
jns
retf
mov
repnz
fcomip
dec
out
sub
dec
addr16
sbb
(bad)
mov
inc
fimul
ds
inc
subss
call
call
call
add
jg
mov
jnp
inc
sub
push
mov
psubb
ja
lods
jle
aas
xchg
jmp
mov
cdq
mov
pop
ds
call
and
adc
addr16
mov
call
cmps
add
pop
add
add
add
xor
add
add
(bad)
(bad)
out
push
mov
push
mov
mov
mov
mov
mov
mov
mov
mov
cmps
(bad)
dec
mov
mov
mov
mov
mov
mov
mov
mov
jb
cmp
js
pop
(bad)
in
(bad)
in
(bad)
jmp
jmp
jmp
jmp
(bad)
dec
loop
loope
loopne
(bad)
fdivrp
(bad)
fdivr
(bad)
(bad)
fcos
fdivr
xlat
inc
(bad)
call
call
call
call
call
call
call
dec
dec
dec
jmp
xchg
sub
xchg
or
repnz
xchg
xchg
dec
int
addr16
hlt
xchg
push
cwde
out
ficom
(bad)
push
and
js
fcomp
cdq
ja
out
pop
call
cs
jnp
cmps
les
pushw
sbb
test
popf
ss
int3
rcr
cmp
mov
pop
push
mov
out
cmp
push
xor
mov
sub
pushf
mov
jle
lock
neg
cmps
mov
mov
cmps
into
jge
sub
ss
rol
movs
test
ja
cs
jo
fiadd
sub
call
shr
push
and
or
add
push
push
or
(bad)
cld
push
movs
mov
pusha
push
data16
mov
cmps
jnp
loopne
(bad)
mov
mov
outs
xchg
or
mov
ds
dec
jbe
dec
adc
inc
cmp
jne
sbb
shl
clc
in
(bad)
je
mov
int
lods
rcl
ins
xor
or
cmp
push
daa
mov
sar
fsubr
cmp
push
push
add
ins
fs
test
mov
inc
fs
mov
sahf
inc
repnz
je
in
push
push
mov
sbb
pop
sbb
fadd
pop
in
leave
push
call
sub
ret
xchg
(bad)
clc
inc
cmp
pop
arpl
mov
fsub
std
movs
cdq
add
sbb
mov
cli
loop
or
add
in
sub
jg
or
ins
adc
add
loope
loope
clc
je
or
adc
and
mov
adc
xlat
mov
sbb
outs
(bad)
lods
sbb
fwait
out
jmp
rcl
add
mov
xchg
mov
aaa
clc
in
adc
xchg
sub
repz
add
jge
push
xchg
dec
adc
jae
dec
outs
ins
jns
add
sub
mov
pop
(bad)
cmp
dec
inc
ror
push
in
and
add
push
dec
add
lea
jmp
jge
push
sub
mov
xor
xchg
test
jnp
ror
dec
outs
add
add
adc
sub
mov
jbe
fs
je
xor
sub
mov
xor
pop
xchg
adc
rcl
sub
sbb
jae
cmp
or
aad
js
inc
and
mov
in
or
push
rcl
mov
or
sub
push
inc
cmp
imul
sub
add
(bad)
sub
ja
test
scas
cmps
xchg
out
cmp
push
lock
add
mov
inc
fsubr
push
adc
icebp
mov
in
dec
pop
xor
inc
cmp
(bad)
add
or
dec
push
xor
pop
add
cmps
pop
fwait
loopne
inc
adc
daa
add
dec
jo
imul
ins
inc
mov
gs
cmc
syscall
movs
cmp
jb
sub
xor
sub
call
jae
cmp
mov
pop
mov
mov
sub
jmp
popa
arpl
adc
jns
and
jge
test
or
scas
dec
inc
add
mov
xchg
test
inc
jne
inc
adc
mov
addr16
and
test
sbb
pop
es
adc
push
cwde
push
lods
in
mov
pop
add
jns
sub
imul
pop
sbb
inc
popa
jb
aas
nop
pop
push
outs
mov
jnp
dec
and
scas
cmp
add
ficom
xor
inc
mov
jecxz
adc
ret
inc
imul
push
inc
(bad)
xchg
test
popf
inc
push
xchg
je
mov
cmp
pop
aas
cwde
daa
imul
push
inc
sub
test
add
add
inc
cmp
pop
stc
(bad)
pusha
and
dec
nop
lods
mov
test
jno
das
sub
mov
pusha
dec
push
aam
call
add
sbb
(bad)
(bad)
push
pop
ins
add
cmp
jo
stos
push
rcl
xchg
loopne
lods
mov
(bad)
mov
jp
pop
add
jae
fcomp
aam
inc
ins
mov
mov
jmp
or
ror
faddp
leave
ins
cmp
jl
or
cmc
or
pop
movs
enter
call
pushf
add
mov
call
or
pop
popf
cld
mov
push
and
push
hlt
jnp
es
pop
ror
sbb
xor
unpckhps
mov
sub
and
sub
or
inc
inc
test
lock
icebp
inc
inc
inc
cs
inc
(bad)
std
daa
repnz
dec
and
and
je
(bad)
and
mov
and
and
pop
fs
hlt
or
xchg
retf
pop
in
dec
imul
out
xchg
xchg
xchg
xchg
sub
cdq
add
xor
clc
push
mov
cld
dec
add
adc
push
ror
mov
mov
add
cmp
loopne
mov
out
dec
add
cmp
popf
or
adc
jns
lds
pop
inc
lock
push
lock
xor
push
push
sub
ret
cmps
add
out
mov
fs
sbb
mov
dec
or
or
dec
in
mov
mov
or
xchg
and
jnp
xor
test
add
add
add
aad
pop
dec
not
pusha
pop
jns
pop
call
movq
call
xchg
mov
dec
xchg
mov
dec
xchg
mov
dec
xchg
push
adc
adc
or
aaa
retf
and
in
sub
add
mov
pusha
test
or
or
xor
dec
add
xor
add
loopne
push
jns
loop
push
mov
mov
adc
(bad)
jl
nop
push
call
into
movs
lea
test
rol
adc
int
cmp
nop
int
and
adc
sub
or
movs
push
dec
add
in
mov
or
sbb
rcr
(bad)
out
ficom
sub
movs
lahf
lods
adc
jle
test
mov
dec
mov
mov
and
adc
inc
xchg
jg
shl
mov
adc
xor
mov
dec
or
push
or
gs
mov
or
or
imul
pop
adc
cli
gs
pop
mov
jo
or
nop
inc
mov
sub
inc
ins
jo
popa
inc
cmove
mov
or
push
loop
jp
push
push
or
mov
ins
sub
xchg
pop
lea
daa
cmps
mov
cs
das
push
pusha
mov
imul
jg
aas
mov
aas
scas
xchg
fisubr
(bad)
rcr
rcl
sbb
pop
cmps
hlt
push
ret
and
nop
pop
and
retf
mov
fisub
(bad)
fld
sbb
inc
cli
call
inc
jne
sub
xchg
inc
cs
bound
leave
aam
(bad)
or
adc
adc
xor
mov
gs
lahf
or
addr16
mov
or
(bad)
adc
and
imul
jae
mov
(bad)
jo
sub
or
imul
imul
loop
sbb
clc
xor
mov
dec
(bad)
xor
sbb
dec
jae
call
pop
mov
add
add
dec
mov
jo
mov
jbe
pop
loopne
sub
or
add
pop
adc
inc
xor
push
sbb
jecxz
daa
add
mov
jnp
stc
dec
mov
inc
test
adc
push
xor
adc
dec
or
or
jne
ret
adc
add
and
jle
and
mov
jo
adc
adc
imul
xor
(bad)
pop
sbb
push
loope
test
jae
add
or
push
dec
sub
inc
ja
jae
pop
sub
and
and
cmps
pop
clc
pop
loopne
addr16
mov
push
dec
sbb
add
add
push
aam
dec
loopne
pop
stos
addr16
fdiv
pop
clc
inc
pop
adc
pop
(bad)
addr16
rcl
lods
addr16
jns
test
adc
js
dec
loope
push
aad
sbb
es
push
add
and
push
nop
jmp
out
nop
cmp
push
sar
and
dec
mov
push
enter
lds
ret
push
dec
loopne
popa
mov
inc
push
inc
retf
fdivp
jl
(bad)
(bad)
and
call
rol
out
push
test
(bad)
add
push
sub
dec
call
rcl
xorps
pushf
call
jl
das
arpl
jne
pop
mov
adc
imul
popf
cmps
fmul
xor
inc
mov
stos
add
pop
add
cmp
sub
hlt
mov
imul
or
pop
rol
push
pusha
les
das
add
add
or
add
les
(bad)
int3
jnp
sub
imul
inc
retw
add
aam
adc
inc
mov
jno
inc
adc
loope
outs
xchg
test
loope
pop
or
push
mov
xchg
daa
in
xchg
or
cmp
call
xlat
arpl
in
pop
fcom
xor
dec
jecxz
lock
fstp
mov
jo
icebp
fld
ins
xor
push
dec
mov
adc
dec
cmp
popf
push
jae
xlat
shr
cs
rol
sub
add
mov
mov
adc
(bad)
movs
xlat
test
leave
mov
pop
inc
or
fs
adc
idiv
inc
xchg
iret
retf
(bad)
add
movs
pusha
xor
daa
push
ja
je
adc
scas
pop
cmps
shl
inc
js
mov
push
test
jo
pop
pop
test
xor
push
or
cmp
push
data16
sbb
sub
mov
bound
pop
xor
sbb
mov
mov
jne
in
lock
mov
add
inc
pop
jo
push
fmul
gs
adc
mov
cmp
dec
outs
mov
push
ror
out
or
sti
sbb
xchg
pop
(bad)
push
adc
pop
add
(bad)
add
push
push
std
cmovbe
or
dec
inc
push
enter
ds
repnz
and
rcl
pop
ins
stc
mov
push
add
push
sbb
push
sbb
inc
and
cmp
push
mov
xchg
push
add
packssdw
mov
std
adc
push
pop
(bad)
push
dec
mov
and
jbe
mov
pop
dec
sete
mov
ror
mov
(bad)
cli
std
inc
mov
xor
ja
in
prefetcht0
push
div
adc
sbb
outs
adc
ins
jnp
call
iret
btc
loop
pop
or
addr16
into
or
or
cmp
add
dec
lea
add
(bad)
push
ja
mov
xadd
dec
test
clc
sub
adc
adc
adc
adc
adc
xchg
fistp
add
add
stos
mov
rol
das
imul
jp
add
or
mov
sbb
hlt
sub
add
add
test
scas
add
sbb
int3
add
mov
mov
mov
mov
or
dec
cmp
mov
mov
mov
mov
mov
mov
mov
mov
and
and
mov
adc
jmp
mov
mov
add
push
mov
dec
mov
mov
push
clc
call
add
pop
mov
mov
mov
mov
(bad)
in
inc
dec
sbb
inc
inc
inc
inc
inc
inc
(bad)
mov
mov
jb
(bad)
mov
ret
sub
(bad)
stc
data16
test
mov
adc
and
mov
js
shl
jns
mov
push
js
jl
out
mov
lock
lock
js
out
push
xor
dec
clc
cmp
mov
add
(bad)
or
or
push
cmp
outs
push
add
iret
adc
jae
push
xor
push
aam
dec
test
cmp
fdivp
push
push
xor
pop
add
push
inc
into
pop
cmp
jns
push
adc
jl
inc
mov
dec
push
sbb
pop
sahf
ja
push
cmps
push
call
jge
stc
jbe
mov
xlat
cmp
les
sti
(bad)
cs
into
out
neg
enter
mov
push
cmp
lock
inc
fs
test
pop
or
mov
xor
push
push
ror
out
jne
fimul
cs
jle
push
push
jl
mov
push
dec
pop
clc
xchg
int3
push
loopne
nop
out
inc
and
sbb
mov
push
jl
cld
sub
push
push
mov
cmp
in
inc
push
mov
rol
in
mov
xchg
xchg
ja
outs
jo
test
icebp
cmps
mov
mov
mov
or
add
mov
push
data16
push
cwde
ror
mov
pop
push
test
sbb
test
adc
ins
or
mov
sub
push
imul
add
mul
jnp
push
or
xchg
adc
bound
sti
adc
mov
test
std
xchg
add
daa
xchg
add
ins
daa
push
and
or
popa
arpl
je
and
sub
int3
outs
ins
pushf
add
adc
mov
mov
adc
fldcw
fld
jge
iret
dec
add
inc
cmp
popa
mov
loopne
retf
gs
add
add
in
add
or
jmp
sub
or
adc
shl
xor
xchg
xor
nop
fadd
inc
mov
or
inc
ins
rcl
adc
loope
dec
inc
or
or
jecxz
inc
pop
mov
jne
sub
icebp
cmps
push
pop
test
leave
repnz
inc
push
sbb
imul
aas
mov
inc
or
aad
nop
and
xor
loop
jecxz
xchg
gs
inc
sbb
mov
push
mov
or
xor
cmp
mov
fld
cmp
add
fs
jge
sbb
push
xor
add
and
je
pop
cmps
add
mov
pop
retf
xchg
and
call
or
aam
iret
inc
add
add
mov
ret
(bad)
adc
mov
cwde
and
cmp
add
inc
dec
dec
add
xchg
push
mov
loopne
or
rcl
cdq
ds
adc
jmp
adc
pop
pop
aad
hlt
loopne
adc
fldenv
or
adc
xchg
in
push
call
sbb
adc
movs
push
dec
scas
test
aad
lock
jns
inc
and
test
adc
and
mov
sar
enter
cmp
jge
addr16
mov
or
mov
mov
add
jnp
mov
xor
adc
push
sub
push
pop
cmp
dec
xor
push
adc
push
xor
push
inc
xchg
or
aam
adc
xchg
pop
ja
or
ror
jo
shr
test
test
imul
(bad)
inc
mov
add
or
sbb
inc
push
xchg
retf
xchg
xchg
mov
xchg
xchg
xchg
xchg
push
jne
retf
jp
fst
or
xor
daa
mov
fiadd
out
add
pop
stos
push
mov
and
push
and
sbb
pushf
push
inc
call
sub
or
je
bound
loopne
dec
dec
push
mov
bts
fiadd
scas
mov
or
xlat
aam
inc
mov
push
in
in
push
push
retf
cmp
add
shl
lea
add
ds
mov
or
and
ror
test
(bad)
call
add
mov
fcos
mov
pop
inc
dec
lods
sbb
call
or
or
xor
or
rcr
dec
das
pop
cmc
ror
mov
loopne
push
lds
mov
dec
add
sahf
cmps
adc
adc
jg
popf
jns
add
cmps
push
nop
and
mov
syscall
sbb
in
es
lods
daa
or
or
jo
dec
lods
adc
adc
loope
mov
pop
andps
inc
cmp
cdq
pop
es
rol
repnz
daa
imul
add
sub
mov
pop
mov
add
cwde
adc
out
(bad)
inc
adc
adc
scas
lds
clc
ss
int
cli
cli
xchg
sub
dec
xchg
xor
adc
jns
sbb
xor
add
gs
fcom
adc
and
dec
js
mov
xor
jno
adc
adc
push
jb
jns
xor
add
das
xlat
pop
out
jno
shl
add
adc
push
pop
mov
adc
pop
shl
push
je
dec
pop
adc
sbb
fild
sub
jle
das
push
sub
inc
movs
mov
push
pop
cs
cs
outs
call
add
fld
loope
leave
clc
sub
add
jae
cmp
pop
pop
add
lds
fild
cmc
cmovno
sub
inc
add
lock
sub
pop
inc
add
pslld
add
adc
js
loope
loopne
inc
xor
push
adc
out
xor
cmp
or
fwait
push
add
add
data16
sub
popa
dec
test
mov
mov
repnz
dec
sbb
loope
adc
mov
fs
xor
add
shl
sbb
push
clc
jae
pop
sub
push
pop
pop
sub
adc
push
push
jb
inc
mov
mov
addr16
or
ins
arpl
imul
clc
cli
dec
sbb
ds
mov
xchg
pop
int
scas
lods
add
cmp
sbb
sbb
scas
ret
in
fs
sbb
bound
add
or
sub
inc
cdq
movs
dec
mov
xor
inc
mov
mov
daa
dec
mov
push
dec
dec
(bad)
enter
rol
movs
add
or
push
dec
pop
add
pushf
sbb
add
das
int
or
xchg
loopne
dec
ja
int
sbb
xchg
push
pop
call
dec
ja
mov
ds
xchg
rcl
ins
push
or
neg
lahf
push
enter
cli
dec
movs
rcl
mov
add
addr16
add
retf
mov
je
jo
imul
pop
jne
mov
dec
ins
fs
sub
lods
sbb
in
fs
out
sbb
ss
leave
adc
sbb
jo
iret
push
cmp
push
daa
test
push
lock
loop
jmp
cmp
adc
dec
mov
xor
daa
push
enter
ins
cmp
jno
imul
mov
add
push
outs
jae
add
rcpps
ds
cmps
dec
outs
jbe
popf
and
pop
cld
sbb
dec
xor
movs
mov
sub
test
sub
jp
dec
lods
imul
dec
inc
adc
out
movs
(bad)
xor
js
aaa
sbb
les
sub
dec
mov
push
(bad)
ret
pop
xchg
pusha
pop
sbb
ret
push
xchg
pop
xor
inc
pop
sub
xor
and
adc
xor
cmp
adc
pop
cmp
xchg
pop
add
or
pop
outs
jge
and
xchg
push
call
dec
mov
in
mov
mov
std
adc
mov
push
fistp
fld
pop
pusha
pcmpgtd
add
rcr
arpl
pop
pop
and
test
js
or
sub
or
push
or
outs
fs
into
add
sbb
dec
xchg
dec
add
pop
adc
add
cld
cs
or
out
add
jns
xor
js
pop
push
(bad)
xchg
or
mov
push
lock
inc
inc
mov
test
jo
xchg
jns
and
cwde
lea
stos
js
xchg
xchg
jbe
dec
inc
dec
push
mov
adc
jl
jno
(bad)
sets
dec
add
(bad)
inc
imul
pop
or
jnp
add
or
adc
push
jo
movs
adc
outs
lock
sbb
pop
cmp
mov
mov
repz
add
ds
or
jb
pop
sub
je
fs
mov
daa
mov
jg
and
sahf
and
xor
das
in
sub
add
sub
ja
pop
and
dec
jns
pop
outs
outs
gs
or
add
ret
push
imul
add
pop
adc
scas
(bad)
sub
sbb
jbe
nop
leavew
ret
dec
jg
jae
popf
shl
and
xchg
add
imul
inc
lahf
ret
sbb
(bad)
and
cmp
mov
xchg
mov
cmp
and
xor
aad
add
xor
and
sub
ins
and
push
scas
mov
cmp
ror
loop
outs
fs
jns
fmul
and
push
lods
push
les
adc
xor
lds
test
mov
or
pushf
pusha
or
push
mov
adc
fist
ss
xor
and
pop
cmp
xchg
fcom
out
pop
es
add
push
mov
in
out
fs
xchg
xchg
out
or
or
xchg
xchg
xchg
cwde
mov
xchg
retf
sub
xor
dec
push
add
inc
stos
xor
or
add
(bad)
xchg
lock
jmp
rcl
loop
inc
xor
pop
int
sar
pop
sbb
call
arpl
push
add
int
pusha
fld
jg
inc
adc
inc
and
jmp
cmps
inc
les
jno
adc
dec
pop
jg
lds
int3
add
or
bndstx
into
xchg
movs
sub
aad
or
sbb
add
nop
add
xchg
add
nop
sub
xor
sbb
jle
inc
lock
add
xchg
repnz
iret
repz
cld
ins
jne
test
lahf
lods
mov
xor
xlat
test
or
dec
add
pop
inc
sub
es
ror
int
test
sahf
sub
repnz
test
push
fild
mov
rcr
clc
sbb
cmp
mov
sbb
call
push
xor
dec
inc
push
adc
jmp
dec
add
pusha
mov
dec
cs
push
int3
cs
mov
pop
push
dec
inc
ror
inc
dec
xchg
fmul
das
adc
and
add
xchg
clc
shr
add
or
mov
cmp
adc
jb
cs
push
loope
loopne
das
jae
outs
stos
in
adc
push
lea
inc
inc
pushf
es
cmp
int3
and
xchg
inc
out
stc
ret
xor
inc
(bad)
cmc
dec
test
jg
adc
adc
mov
xor
jbe
popa
cmp
push
adc
xor
daa
ins
arpl
mov
int
dec
inc
jbe
and
loopne
inc
inc
aas
pusha
ins
sub
js
test
fs
loop
xor
push
pop
rcr
ret
ins
jge
jne
clc
xor
jo
push
xchg
adc
je
xor
pop
shl
imul
cmps
mov
mov
push
retf
adc
mov
sti
rcl
add
mov
lds
rol
jecxz
shl
or
and
ret
movs
loopne
push
mov
aaa
pop
inc
inc
aam
cmp
pop
inc
add
mov
push
popf
or
add
push
sub
pop
sub
inc
sub
xchg
push
rol
cmp
ffreep
stos
mov
scas
cwde
out
mov
xchg
add
xchg
mov
cwde
out
and
repnz
mov
stos
imul
data16
jno
inc
push
inc
add
mov
sub
loopne
push
dec
xchg
push
sub
lea
loopne
add
push
iret
adc
and
lods
mov
sub
add
sub
xrelease
pop
cmp
and
sbb
fdivr
aas
sub
les
cs
jb
xor
int3
jne
dec
jl
out
or
add
movs
mov
dec
push
or
adc
mov
gs
or
add
jmp
aaa
xlat
mov
cmps
mov
imul
xor
das
add
jmp
jg
ja
imul
add
sbb
clc
rcl
das
jno
and
das
je
inc
jns
sub
adc
jecxz
jns
add
or
lahf
cs
(bad)
or
pop
call
cmp
cwde
fs
call
outs
jl
aad
fdiv
push
mov
clc
xor
je
(bad)
fisttp
inc
pop
pop
jge
and
mov
push
mov
ret
adc
sbb
call
sub
ins
or
mov
pop
(bad)
and
mov
in
xor
loope
sbb
add
test
lea
out
or
(bad)
or
add
prefetchw
ficom
loop
adc
sbb
pop
add
dec
loopne
bound
adc
add
adc
dec
or
pop
xor
std
push
push
or
sub
pop
test
lahf
mov
(bad)
mov
adc
fisttp
stos
dec
push
adc
xlat
xor
les
inc
add
das
imul
cld
or
add
or
jae
mov
mov
mov
xor
xor
mov
push
dec
push
ret
push
icebp
or
inc
adc
outs
jb
or
dec
inc
jo
or
aaa
inc
les
jo
or
fld
mov
jl
adc
add
mov
cmp
(bad)
and
inc
bound
add
lods
std
ror
je
gs
add
imul
pop
sub
sub
sbb
pop
popa
push
xor
jnp
mov
or
in
inc
inc
js
sbb
outs
in
dec
push
or
or
xor
sbb
add
mov
or
inc
or
dec
lods
mov
aam
jnp
cmp
ret
adc
sbb
frstor
aam
dec
jno
nop
jbe
cmp
xor
outs
cmp
pop
pop
inc
and
xor
jnp
jne
je
or
adc
cmp
add
sbb
cmp
mov
adc
inc
jae
stos
xchg
jbe
xchg
(bad)
sbb
mov
dec
mov
sub
cmp
sar
cmp
or
das
dec
push
pop
pusha
pop
add
inc
call
and
cmps
jns
aaa
push
push
and
aaa
mov
inc
xchg
or
cmps
popa
adc
push
jne
jne
add
mov
mov
sbb
inc
test
cmp
imul
inc
call
inc
push
sbb
sub
inc
in
push
xor
shl
mov
xor
lods
aaa
aam
xchg
(bad)
rcl
call
mov
fs
cmps
dec
call
(bad)
or
pop
imul
or
add
or
or
or
stc
mov
sbb
cmps
ffreep
pusha
xchg
sub
jg
add
add
sbb
outs
add
imul
adc
cmp
(bad)
dec
fs
dec
out
xchg
bound
enter
rol
dec
lahf
shr
addr16
cmp
out
push
dec
push
dec
cmp
test
push
bsf
add
add
and
dec
mov
add
jnp
jae
push
pop
and
or
dec
mov
(bad)
cmp
cmp
or
xchg
cmp
nop
cmps
cmp
and
push
dec
add
or
add
ret
inc
add
hlt
dec
cmps
jno
(bad)
or
xchg
cdq
push
pop
imul
int
outs
push
adc
cdq
icebp
mov
add
inc
pop
inc
inc
data16
in
and
test
nop
push
or
adc
sub
mov
ins
or
mov
mov
fisttp
or
cmp
cmp
rcl
pop
cmp
pop
mov
add
repnz
into
push
movs
loop
test
cmp
scas
mov
sub
cmp
pop
mov
aaa
add
push
test
mov
ins
jae
add
jbe
loope
stos
or
sbb
add
pop
add
aas
cs
sti
dec
dec
mov
aam
outs
addr16
arpl
jg
cli
push
or
add
or
sbb
dec
adc
dec
inc
jge
dec
cmp
xchg
jnp
aas
pop
pop
fisubr
(bad)
sti
mov
add
pop
test
cmps
sbb
jecxz
push
xor
jno
push
jae
add
stc
add
movs
dec
or
push
pop
dec
sub
mov
clc
adc
hlt
adc
popa
cmp
sbb
push
pop
mov
bound
xchg
xchg
out
and
or
cmp
pop
jnp
cmp
mov
nop
ret
arpl
mov
xor
sub
movs
retf
dec
test
xchg
sbb
retf
inc
add
or
loope
retf
mov
frstor
and
mov
mov
pusha
mov
add
cmps
jae
sbb
adc
das
hlt
xor
sub
sub
pop
mov
(bad)
xor
mov
das
dec
jg
fisub
pop
daa
jmp
and
add
lods
pop
sbb
mov
mov
cmps
mov
inc
mov
push
aas
loop
aaa
lock
ja
sbb
je
hlt
xor
imul
jnp
push
pusha
and
mov
push
push
lock
or
fmul
mov
inc
push
add
push
xor
mov
add
and
fwait
pop
adc
push
sbb
stos
leave
fst
mov
sahf
pop
cmp
and
pop
mov
add
fbstp
mov
adc
sbb
dec
push
cmc
dec
jne
xor
or
mov
push
inc
and
ret
or
jno
adc
jmp
sar
(bad)
or
pop
rcr
out
push
shl
inc
out
test
or
or
cmp
inc
stos
je
add
sti
adc
adc
add
sbb
mov
ins
push
pop
inc
add
call
push
mov
push
add
(bad)
mov
inc
and
pushf
xor
rcr
jmp
lahf
xchg
mov
inc
retf
dec
aaa
(bad)
and
xor
in
mov
xchg
xchg
push
test
cmp
fimul
add
fstp
mov
cld
xor
inc
dec
push
cmovs
push
mov
inc
cmp
push
dec
mov
lock
and
int
call
loopne
pop
stos
mov
fld
fs
jge
add
enter
xchg
pop
mov
cld
inc
ins
push
dec
push
jno
ret
push
clc
pop
cdq
push
addr16
fbstp
jmp
test
xchg
or
pop
dec
dec
xchg
shl
nop
inc
inc
not
cmp
cmp
adc
jne
mov
sbb
jnp
mov
or
rcr
push
sub
retf
in
jne
mov
push
mov
ds
cmps
cmc
shr
nop
pushf
pusha
inc
fld
daa
inc
pop
jo
inc
add
rcl
lds
outs
cmps
inc
shl
adc
mov
les
inc
lock
outs
movs
inc
or
mov
jb
loopne
or
pop
test
add
xor
(bad)
ds
xor
test
in
cmp
sub
jno
xor
add
outs
jo
adc
xchg
ins
add
sbb
popa
popf
adc
pop
sub
cmps
pop
mov
fdivr
in
xchg
inc
add
add
ret
cs
fmul
add
adc
add
cmp
xchg
jne
inc
xchg
add
dec
jl
movs
das
mov
dec
push
std
mov
scas
test
sub
or
cmp
adc
mov
nop
jno
(bad)
jno
rol
mov
jnp
adc
xor
pop
imul
add
mov
mov
lea
or
sbb
mov
jo
out
adc
lahf
mov
scas
fisubr
dec
pop
or
push
retf
shl
aam
lock
xor
imul
mov
sar
mov
sbb
adc
push
jo
lock
xor
call
jne
jmp
sbb
jmp
loopne
ins
shl
or
nop
lods
es
lods
or
add
push
add
ss
push
or
push
dec
xor
or
dec
add
jne
sar
out
dec
adc
test
cmps
lods
mov
mov
dec
adc
add
or
xor
fsubr
dec
sub
sub
fidiv
ror
dec
xor
xor
aas
mov
or
popa
add
fbld
or
out
add
push
push
push
jo
ficom
ror
call
xor
inc
dec
(bad)
jg
mov
add
je
sub
mov
and
or
je
mov
mov
xchg
or
xchg
sub
mov
imul
test
mov
add
add
adc
jae
rol
mov
ja
add
jmp
xor
adc
jmp
mov
adc
jge
mov
dec
add
xchg
jne
mov
xchg
adc
or
inc
inc
add
stos
mov
jbe
je
or
xor
adc
mov
sub
ror
push
les
bound
clc
adc
call
pop
outs
xor
fistp
(bad)
mov
push
mov
add
repz
mov
popa
adc
in
xchg
pop
push
xchg
inc
lock
or
das
ror
and
imul
pop
dec
mov
sub
jle
rol
or
sbb
jl
adc
test
inc
add
inc
push
inc
clc
scas
pusha
mov
lock
test
add
stos
push
in
retf
push
mov
fbld
and
aaa
and
pop
add
mov
xlat
sbb
add
or
jae
xchg
xor
mov
mov
int
sbb
push
add
nop
call
xchg
xchg
sub
imul
xor
ins
ret
and
inc
or
add
adc
sbb
push
ins
cmps
or
push
cwde
rol
xchg
outs
out
push
loope
dec
push
xor
mov
lahf
pop
mov
push
out
in
add
lahf
push
sub
xor
sub
push
movs
test
sahf
sub
and
add
push
stos
pop
mov
cs
sub
je
or
dec
lea
sub
addr16
fs
lar
mov
add
nop
int
or
inc
sbb
or
jmp
mov
out
clc
loopne
and
push
pop
enter
add
ja
cmp
aaa
sahf
adc
lock
es
ret
cmp
repnz
fldpi
push
int3
xor
in
and
scas
xor
jle
sub
dec
push
sub
cwde
cmp
inc
not
sbb
and
adc
sub
sbb
test
push
lea
cmp
cmp
add
adc
inc
test
jmp
sbb
daa
fadd
stos
sub
dec
push
gs
push
into
xchg
jg
and
bound
mov
pop
xchg
jmp
daa
(bad)
ret
fnstsw
pop
jg
cmp
or
out
xor
or
adc
jmp
cmp
jne
je
cmps
fs
dec
sbb
adc
adc
push
mov
mov
stos
inc
rcl
lahf
test
icebp
icebp
cmps
and
pushf
fmul
cwde
add
dec
rol
cmp
push
add
test
inc
adc
fxam
jb
leave
add
in
or
push
and
fiadd
jge
cmp
inc
add
inc
test
mov
call
jmp
dec
arpl
stos
(bad)
leave
je
sub
call
pushf
clc
pop
adc
or
mov
clc
mov
popf
icebp
adc
aam
pop
or
clc
mov
jno
add
sbb
jmp
dec
les
sub
xchg
add
sub
jb
mov
cmc
sbb
mov
aas
cmp
je
mov
popa
mov
je
mov
add
mov
sub
jmp
in
icebp
pop
fisubr
ss
sbb
inc
jl
shl
lds
fdiv
ror
cmp
cmp
adc
test
push
add
rol
cli
or
mov
mov
jl
xlat
sub
and
lock
(bad)
lock
in
cmp
mov
jl
test
jo
and
and
sbb
fisub
pop
pusha
push
jmp
jp
xchg
into
mov
fadd
dec
sbb
popa
cmp
mov
popa
push
fadd
(bad)
xchg
hlt
adc
ins
hlt
cld
inc
mov
or
push
push
and
push
push
xchg
jle
cmp
xchg
adc
dec
sub
jmp
sbb
fadd
cmp
adc
xchg
adc
mov
xor
inc
jne
and
push
jmp
(bad)
jl
and
dec
sbb
sbb
shl
movs
cmp
sbb
imul
pop
hlt
mov
pop
sbb
cmp
ret
sbb
adc
push
test
xor
add
mov
aas
push
test
push
sbb
sub
inc
cmp
adc
aas
xor
push
add
push
dec
movs
inc
mov
sbb
dec
clc
inc
add
xor
mov
adc
or
push
bound
push
leave
jne
dec
sub
jmp
mov
mov
add
sbb
sub
and
lods
or
push
ret
add
add
push
cld
aam
leave
adc
and
and
mov
or
xor
dec
sub
jge
jo
sti
mov
mov
mov
jl
clc
out
xor
bound
cs
add
shl
cmp
dec
std
xor
push
dec
mov
pop
rcl
jno
sub
jb
je
xchg
fisttp
inc
cli
mov
add
test
and
repz
rcr
pop
add
pop
addr16
(bad)
ds
mov
mov
sbb
in
daa
inc
add
mov
lds
cmp
push
loope
mov
cmp
in
mov
test
cmc
inc
les
test
adc
or
and
push
mov
dec
mov
add
ret
in
sbb
sbb
add
cmp
popf
mov
je
and
cmp
jne
xor
adc
movs
pushw
sbb
xchg
fs
add
ins
or
xchg
adc
add
sub
and
lea
fnstenv
fist
arpl
int
push
sbb
sbb
push
mov
mov
add
rol
inc
inc
xor
mov
or
adc
inc
pop
and
das
dec
int
cmp
add
cmp
sub
sbb
pop
or
sti
mov
xor
movs
adc
and
jmp
pop
mov
mov
and
mov
aad
mov
pop
mov
fmul
mov
add
push
inc
xchg
shl
dec
add
jmp
mov
scas
js
nop
and
lea
dec
mov
ficom
into
and
inc
pop
sub
mov
pop
mov
or
hlt
xor
pop
sbb
mov
jecxz
enter
add
mov
(bad)
hlt
or
xor
xor
mov
in
pop
xor
lea
clc
rcl
inc
dec
mov
xor
add
fdivr
pop
adc
in
add
jo
mov
mov
aaa
cmp
inc
inc
sbb
(bad)
lea
add
mov
sub
xor
or
mov
(bad)
dec
bound
cwde
xor
sbb
pop
sub
jne
sub
mov
push
add
retf
mov
jns
xchg
mov
sub
imul
cmp
add
mov
pop
xor
push
sbb
push
mov
push
adc
mov
cmps
in
xor
sbb
fcomp
je
popf
jmp
sub
add
inc
stos
adc
pop
or
inc
dec
lods
sub
xacquire
pop
pop
pop
fcomp
mov
push
lahf
cli
(bad)
xchg
add
mov
(bad)
push
dec
div
test
pop
inc
popf
push
mov
inc
fiadd
and
es
shl
inc
mov
cmp
in
test
js
out
iret
and
popf
test
add
xchg
in
in
ja
sbb
adc
push
(bad)
jo
mov
xor
mov
(bad)
or
mov
fwait
addr16
ret
mov
lfs
imul
dec
ret
loope
dec
mov
es
movs
fld
mov
pop
dec
sub
into
in
fcomp
fidiv
push
push
adc
mov
std
loopne
xchg
xor
cmc
pop
add
clc
cwde
inc
or
dec
leave
push
mov
jmp
popa
add
inc
ja
push
or
ds
inc
or
jmp
jne
mov
push
sbb
jne
int3
adc
sbb
aas
or
inc
outs
out
or
xor
mov
(bad)
imul
mov
fist
mov
inc
and
ja
add
xor
dec
cmp
das
ret
pop
push
xor
mov
adc
add
dec
sbb
and
cmp
xor
nop
mov
test
mov
adc
sbb
or
push
ss
(bad)
daa
adc
inc
sbb
gs
in
test
lock
and
icebp
daa
hlt
inc
test
jle
sub
(bad)
adc
(bad)
jb
mul
scas
dec
mov
je
nop
mov
adc
cmp
mov
inc
clc
test
xor
or
in
mov
add
sub
fbstp
mov
mov
or
lea
ds
shl
or
nop
sbb
add
jne
mov
dec
cmp
test
adc
js
xor
or
sub
mov
mov
addr16
sub
inc
push
adc
and
or
and
pop
dec
and
jbe
sti
scas
fmul
dec
add
daa
int3
or
es
and
sbb
push
jecxz
iret
mov
in
adc
or
mov
pop
inc
cmps
jmp
pop
popf
out
fmul
daa
fsub
adc
rcl
hlt
mov
dec
push
mov
cmp
push
ret
stc
add
or
cmp
cdq
add
mov
(bad)
shr
add
mov
xor
call
push
es
movsx
and
retf
sbb
mov
pop
add
inc
add
out
pusha
rol
in
mov
(bad)
adc
jg
jo
lock
test
jle
out
dec
mov
mov
rcl
lock
clc
jne
sbb
jmp
inc
xlat
out
xchg
lods
int3
cdq
cld
or
cmp
sub
mov
add
stc
sti
jge
(bad)
push
or
xor
or
cld
mov
sbb
ret
sub
and
inc
or
call
push
cmp
loope
mov
arpl
test
or
xchg
mov
dec
in
xchg
xor
jmp
in
inc
dec
add
dec
jne
popa
xchg
sbb
sbb
lahf
dec
inc
add
out
cmp
lds
pop
cmp
jb
dec
xchg
xchg
hlt
jg
pusha
sub
add
mov
xchg
dec
sub
xor
or
rcr
or
mov
pop
jne
dec
inc
add
aad
les
int3
nop
dec
adc
outs
mov
js
cmp
xor
and
outs
out
pop
or
push
adc
sub
lods
push
pusha
add
mov
mov
int
inc
mov
(bad)
xchg
add
dec
sbb
add
shl
adc
cmc
pop
jg
xchg
mov
pop
arpl
adc
mov
call
and
or
mov
lahf
cmp
pop
sub
test
mov
mov
xor
sbb
xor
pop
inc
pop
jo
sbb
fcomp
jae
je
pop
imul
fdivr
xor
mov
dec
or
daa
pop
and
ret
sub
add
xchg
sbb
cmp
lds
and
hlt
and
push
les
mov
nop
ror
adc
push
or
cmp
popf
add
cld
or
outs
sbb
xor
or
inc
add
fcmovnu
jg
jmp
cmp
je
mov
test
jbe
push
adc
adc
(bad)
xor
ret
and
push
or
sar
adc
adc
and
jbe
cmp
cmp
not
sbb
or
or
ror
rol
jne
inc
or
jnp
imul
in
pop
add
leave
retf
inc
cwde
fisubr
js
pop
rol
outs
inc
aam
add
mov
loope
xchg
xor
cmp
cli
dec
cmp
lea
sub
pop
out
movs
in
adc
rcl
rol
test
or
aam
loopne
hlt
in
push
cli
add
fsub
sbb
add
add
outs
fbstp
add
sub
in
push
push
lods
mov
xor
and
push
sub
sub
mov
in
bound
jp
rol
lea
loopne
rcr
jns
pop
add
and
inc
push
lock
rcl
adc
iret
sub
cmovo
inc
sbb
les
inc
jb
inc
ins
movs
lock
push
ja
pop
fnsave
and
ds
sbb
nop
cmps
or
add
jae
cmp
sub
adc
popa
cmp
mov
add
out
pop
popf
mov
inc
dec
sete
adc
dec
xor
push
mov
and
mov
mov
pop
mov
test
pop
daa
leave
pop
pop
nop
retf
rol
inc
sbb
stos
pop
pop
mov
xchg
cmp
ror
xchg
add
lock
fist
ror
push
inc
sbb
pushf
add
fadd
xor
pop
cmps
pop
pslld
or
jo
jne
push
test
add
sbb
push
sbb
pusha
mov
sar
mov
aas
or
add
pop
pop
inc
rol
shl
add
call
mov
pop
inc
xor
nop
jl
push
loop
push
mov
pop
in
and
and
mov
or
call
aas
ror
mov
dec
fwait
adc
mov
dec
sbb
in
out
mov
cmp
jl
or
out
test
inc
push
mov
inc
test
jns
popa
add
bound
sub
mov
push
push
fmul
jmp
or
cmp
in
je
xchg
ret
adc
je
js
dec
xor
xchg
dec
ret
sbb
stos
adc
adc
mov
hlt
and
inc
nop
jb
movs
jno
mov
sub
cs
adc
call
xlat
sub
int
add
xchg
dec
and
push
and
and
fs
jl
outs
call
imul
dec
pusha
in
mov
test
int3
jnp
xor
jle
jmp
pop
lea
ret
sbb
inc
js
ins
loopne
xor
xrelease
jo
imul
jl
call
mov
add
mov
pop
or
(bad)
xlat
ds
bound
add
adc
sub
cmp
sbb
xor
bound
xchg
dec
lds
adc
call
pop
push
lds
(bad)
and
lds
lock
das
mov
popa
push
push
adc
add
rol
xor
test
lds
fcmovnbe
add
xchg
mov
mov
mov
sub
loopne
push
jo
inc
cmps
inc
add
push
jo
cmp
je
sub
and
inc
dec
adc
fs
in
ret
je
adc
xchg
outs
mov
adc
mov
xchg
in
pop
ss
push
je
sub
or
pop
mov
jg
int3
movs
add
pop
pop
lods
xor
loopne
mov
mov
fadd
jmp
dec
loop
icebp
and
or
jmp
jnp
push
mov
xor
ret
add
ins
test
cli
mov
pop
sahf
adc
add
test
xor
scas
jp
mov
imul
test
mov
gs
jbe
push
loop
xchg
iret
cs
std
lahf
test
bound
pop
dec
je
push
cmp
inc
mov
ret
arpl
pop
imul
stos
push
xor
sbb
sbb
mov
lods
sub
pop
or
cmp
rcr
test
repnz
pop
add
pop
push
sahf
js
or
mov
mov
sub
addr16
pop
shr
inc
cmp
add
outs
lock
scas
cmp
lahf
mov
xor
rcr
xchg
lock
add
add
jne
add
and
inc
xchg
dec
test
mov
or
adc
daa
aas
jo
int
sbb
mov
pop
or
nop
or
adc
aaa
scas
dec
or
das
popa
cmp
mov
cmp
push
pop
jmp
mov
clc
sub
neg
jmp
push
cwde
or
add
and
jmp
sar
add
bound
xor
std
push
or
into
xchg
sbb
dec
push
xor
push
fs
rol
add
imul
pop
pop
leave
push
(bad)
fld
sbb
jg
xchg
push
mov
push
nop
sti
push
adc
sbb
std
dec
cmc
dec
sub
setb
push
add
shl
ret
jne
xor
sub
xor
adc
sbb
jne
hlt
ja
dec
dec
mov
mov
fwait
cmp
(bad)
xchg
gs
adc
or
add
out
dec
lods
or
mov
xchg
xchg
mov
cli
adc
aad
xchg
push
or
cmp
inc
outs
and
pusha
retf
dec
mov
mov
inc
aad
cwde
mov
sub
pop
lock
(bad)
jae
adc
ret
xchg
adc
pop
and
xchg
jo
mov
xchg
pop
fs
dec
pop
ret
aas
lock
sbb
test
pop
add
test
or
xor
cmp
movs
jo
cmps
neg
sar
rcr
ror
add
mov
add
mov
sub
xchg
xchg
xchg
nop
mov
in
inc
and
jmp
test
in
ret
add
inc
ins
adc
inc
test
cmp
shl
out
adc
mov
jns
or
add
mov
add
sub
fdivr
mov
pop
data16
in
pusha
add
mov
inc
push
js
repz
ss
cmp
push
dec
dec
xchg
sbb
out
and
loop
add
add
push
aaa
ins
daa
cmp
pop
addr16
push
cdq
fcom
imul
mov
addr16
leave
arpl
inc
imul
movs
iret
push
addr16
push
cdq
or
or
(bad)
(bad)
in
sahf
shl
cwde
(bad)
lock
cld
imul
jle
sub
and
ret
ins
cmps
and
mov
cmp
xchg
loopne
je
cmp
push
mov
movs
lock
pop
add
test
adc
ins
and
(bad)
mov
rol
cmp
je
clc
dec
xor
inc
aam
arpl
test
js
and
xor
nop
gs
push
(bad)
mov
mov
pusha
pop
inc
nop
es
fcomp
sbb
(bad)
shl
cmp
fstp
sbb
jmp
adc
xor
pusha
add
rcr
call
test
mov
or
adc
dec
jbe
sbb
pop
pop
jno
inc
fwait
add
scas
(bad)
or
aam
les
mov
cwde
sbb
stc
cmps
dec
xchg
and
clc
sbb
add
dec
or
and
clc
dec
test
and
sub
push
dec
sub
mov
sub
push
jmp
adc
dec
ror
xor
cmp
sub
jbe
pop
mov
ret
adc
or
aam
mov
fucomip
(bad)
xor
dec
pop
callw
inc
mov
stos
sbb
je
js
add
inc
hlt
mov
dec
jb
nop
mov
or
jne
inc
or
aam
(bad)
adc
ret
inc
or
outs
popf
hlt
add
jl
push
xchg
xor
adc
inc
or
cmp
push
add
dec
pop
in
add
and
jno
push
mov
rcl
cmps
bts
push
add
mov
call
or
mov
test
jbe
push
push
mov
fmul
ins
adc
call
jb
add
add
add
shl
or
add
pop
pop
jl
or
loopne
pop
mov
cmp
pop
mov
test
scas
cmp
sub
nop
sub
lock
fist
adc
cmp
les
ja
pusha
dec
loope
adc
scas
jne
iret
xor
shl
or
adc
aad
jne
loop
je
and
jne
fdivr
mov
jge
rcr
lea
inc
mov
add
inc
mov
aaa
add
and
shr
pop
inc
sub
jno
inc
or
cmp
push
dec
enter
sbb
mov
push
push
mov
call
in
outs
dec
repnz
dec
cmp
xchg
jmp
dec
adc
push
js
cmp
mov
xchg
and
inc
push
pop
sub
xchg
arpl
push
xchg
push
jmp
les
xchg
jne
fstp
xchg
shl
cmp
push
test
or
ret
jbe
jno
bound
or
icebp
and
call
and
mov
sub
pop
div
das
fs
mov
cwde
pop
cmp
lods
mov
and
inc
aaa
ins
inc
call
cld
lods
rcl
mov
clc
add
inc
push
or
into
retf
pop
add
movs
in
out
and
data16
mov
adc
(bad)
loope
or
pop
pop
lods
aas
pop
pop
or
fidiv
test
je
add
mov
jle
xor
mov
or
inc
sub
jge
out
cli
cmp
dec
in
jmp
mov
fcmovnbe
push
pusha
popa
aas
or
retf
pop
xor
in
sub
sbb
aaa
icebp
mov
pop
mov
or
push
test
icebp
sub
adc
add
aaa
enter
sub
ret
shl
mov
push
ins
clc
adc
or
pop
outs
ss
js
or
pop
or
mov
sbb
pop
outs
in
adc
push
xor
cmp
mov
into
mov
mov
push
(bad)
or
push
push
lds
cmps
into
push
adc
or
sbb
repnz
mov
mov
push
mov
adc
aam
(bad)
nop
mov
daa
push
lods
es
pop
or
outs
nop
test
cld
mov
mov
js
adc
rcl
add
loope
pop
pop
clc
dec
sub
sar
xchg
mov
sbb
push
add
jo
lea
inc
fsubr
lods
jle
add
inc
push
push
jecxz
mov
push
retf
add
shr
add
and
pushf
pop
pop
fldenv
mov
cmps
push
fist
push
lea
std
add
mov
aad
(bad)
ins
sbb
ret
inc
arpl
jp
imul
cmp
add
xchg
data16
xchg
add
sub
inc
cmp
inc
sbb
or
adc
mov
(bad)
pop
and
inc
mov
push
or
jne
push
sub
sub
pop
adc
nop
arpl
mov
arpl
adc
add
arpl
xor
lock
shufps
and
xchg
and
nop
add
shl
nop
icebp
push
mov
add
inc
je
mov
hlt
dec
mov
test
fbld
or
cmp
or
es
in
and
add
or
sub
or
adc
scas
dec
jb
fst
inc
push
cmp
xor
out
ja
adc
cwde
cmp
stc
popa
push
das
push
movaps
fsubr
sbb
inc
xchg
jmp
iret
inc
and
and
push
or
loope
mov
inc
pusha
mov
push
cmp
inc
add
dec
push
nop
shl
std
mov
xor
mov
xchg
stc
push
and
cmp
mov
pop
dec
sub
sbb
and
rcl
mov
cmp
shl
adc
dec
test
adc
push
inc
jge
push
mov
xchg
ret
push
cmp
enter
mov
or
ror
xor
lock
add
cmp
jl
jle
loopne
dec
inc
inc
cmp
xchg
movs
mov
test
inc
cmp
call
scas
leave
jl
pop
(bad)
dec
jmp
push
xchg
cmp
or
pusha
mov
sbb
pusha
dec
adc
dec
dec
call
add
inc
inc
pop
inc
je
jbe
xchg
sub
adc
adc
add
fild
mov
gs
ds
jns
out
xor
iret
mov
mov
jle
push
push
push
clc
repnz
adc
pop
or
pop
add
dec
sahf
rol
fstp
dec
sub
adc
dec
or
pop
add
jge
mov
rol
aas
push
ins
xchg
sbb
mov
mov
mov
add
popa
mov
xor
in
pop
fstp
std
add
mov
sar
cmps
jp
push
or
lods
aaa
jl
push
or
push
mov
in
xor
ins
rcr
add
ds
dec
xor
hlt
les
les
inc
sub
ins
adc
jne
add
sbb
jg
ja
add
adc
fidiv
dec
dec
mov
inc
pop
cmps
jmp
add
add
inc
dec
mov
adc
addr16
addr16
pusha
add
cmp
mov
cmp
push
add
xchg
mov
cmp
push
call
arpl
xchg
xor
into
adc
sub
xor
sub
jne
addr16
ror
pop
bswap
sbb
test
mov
inc
adc
test
aas
cmc
sar
xchg
mov
jg
and
mov
add
push
shl
outs
enter
xchg
sub
rcl
outs
xor
clc
mov
ret
push
and
mov
(bad)
or
xchg
pushf
and
adc
or
cmp
jae
add
(bad)
cld
add
das
pusha
xor
mov
mov
push
jb
(bad)
js
sub
adc
ret
push
jp
push
inc
push
mov
cmp
add
pop
jnp
push
mov
(bad)
fisttp
cmp
push
and
jmp
fsubr
mov
(bad)
add
jno
gs
test
xor
arpl
sub
sbb
mov
inc
jmp
mov
mov
mov
(bad)
or
inc
or
jle
loopne
inc
mov
lock
inc
dec
stc
(bad)
cmp
dec
and
shl
mov
jmp
cmps
add
movzx
and
cmp
retf
in
add
stc
stos
retf
jae
fst
inc
add
loopne
stos
repnz
movs
out
push
or
adc
or
add
sbb
out
cwde
mov
mov
movs
sbb
push
cmps
jle
pop
fiadd
add
xlat
in
test
cmp
pop
adc
mov
in
dec
inc
inc
jns
clc
mov
call
add
mov
dec
sub
inc
or
loope
ror
sahf
mov
adc
sbb
add
fstp
retf
inc
cmp
dec
pop
xchg
ds
outs
add
outs
or
push
inc
add
dec
cmps
sub
es
inc
add
clc
and
add
es
mov
int3
pop
push
outs
push
mov
and
jecxz
sbb
mov
(bad)
cmp
cmc
scas
in
inc
jg
add
add
mov
sbb
jge
add
jle
xchg
add
pop
sub
and
push
sub
add
or
push
or
xor
mov
rcl
mov
jg
jb
(bad)
xchg
inc
popa
mov
cmps
bound
inc
(bad)
jecxz
(bad)
faddp
inc
repz
push
sbb
or
add
(bad)
mov
xchg
dec
fs
jne
add
loope
scas
lahf
inc
jmp
bound
and
ret
jne
xchg
int
call
jnp
les
inc
je
inc
neg
xor
lea
movzx
cmps
jecxz
or
adc
xchg
cmp
clc
js
mov
pushf
(bad)
es
int3
test
pushw
or
inc
js
pop
push
fwait
pop
(bad)
push
or
xchg
dec
adc
std
sahf
test
push
inc
xchg
cmp
xor
xchg
pop
pop
enter
pop
add
cmp
dec
dec
cmp
sbb
fs
retf
ss
or
dec
cmovs
jg
push
and
add
test
push
xchg
add
lock
sbb
addr16
sbb
pop
mov
jne
mov
(bad)
sub
cmp
fadd
add
dec
mov
xor
(bad)
cmp
(bad)
aaa
jne
pop
(bad)
sub
sub
in
dec
jmp
in
or
inc
in
push
xor
add
sbb
or
pop
sbb
xor
lahf
push
ds
mov
pop
arpl
test
aas
mov
loop
or
push
mov
test
lods
xchg
aaa
sbb
push
or
aad
jo
pusha
sbb
add
ja
add
cmp
sbb
inc
out
mov
(bad)
adc
loopne
add
or
ret
imul
adc
adc
mov
mov
jmp
movs
sbb
sbb
mov
xor
or
dec
les
pop
inc
add
and
jne
mov
pusha
mov
pop
xor
push
movs
daa
dec
adc
es
(bad)
test
fcom
fild
dec
fmul
dec
mov
pop
inc
and
mov
xor
xor
sub
mov
inc
fcom
mov
fldcw
sub
inc
mov
pop
loopne
inc
xchg
push
lea
aad
mov
jns
jb
pop
loop
sti
sar
outs
adc
mov
xor
cwde
mov
imul
mov
and
cwde
mov
mov
or
dec
or
push
xchg
and
movs
xchg
add
mov
hlt
jbe
jmp
jg
mov
add
sbb
pop
test
inc
loopne
rcr
lahf
mov
jne
add
movs
fist
mov
cmp
inc
jge
idiv
lock
xor
aaa
add
cmps
jno
out
adc
mov
dec
dec
dec
ja
adc
jo
push
sti
iret
mov
repnz
je
mov
mov
mov
jp
cmc
adc
cmp
and
cwde
ins
hlt
inc
xor
popa
mov
dec
mov
inc
xchg
mov
jns
pop
popa
jmp
and
dec
sub
or
and
rcl
(bad)
push
fisttp
(bad)
int
adc
push
jg
call
mov
pop
loope
add
lock
je
and
and
add
(bad)
jp
adc
or
jg
adc
push
inc
clc
cmps
test
je
add
in
ret
sub
jae
pushf
push
mov
xchg
and
add
jle
sbb
add
mov
sbb
or
xchg
pop
push
loopne
sti
cdq
lahf
or
dec
push
jnp
mov
mov
xchg
ret
add
push
in
les
or
sbb
movs
aas
xor
int3
adc
jg
jl
not
add
push
or
stos
mov
xor
push
xchg
cmps
repnz
add
or
adc
cmp
mov
movmskps
dec
and
mov
ins
jp
xchg
jmp
adc
daa
adc
je
test
or
or
mov
or
mov
xor
int
jmp
dec
cmp
adc
inc
sub
loopne
sbb
ret
sub
add
ja
jnp
push
add
jmp
sub
jle
les
jge
or
dec
mov
fiadd
loopne
cld
jle
or
push
inc
xor
xchg
inc
inc
cld
cmc
dec
push
xchg
push
aas
jp
xor
xor
xchg
jne
in
cmps
cs
xor
jne
ret
add
ja
and
or
ficom
iret
inc
push
adc
and
inc
cmp
js
fist
in
gs
imul
jmp
inc
add
std
inc
or
test
add
test
daa
add
dec
(bad)
sub
(bad)
sbb
or
and
movs
or
or
ret
jmp
hlt
add
lock
xor
sbb
xor
loopne
push
cld
mov
or
mov
mov
jne
jb
dec
in
out
cmp
mov
(bad)
repz
mov
and
jns
sub
cmp
mov
add
cmp
fcom
xor
sub
xchg
pop
repnz
sbb
bound
jge
cmp
push
notrack
out
add
(bad)
lods
inc
(bad)
movsx
xchg
ss
(bad)
mul
adc
add
retf
cwde
add
and
or
adc
mov
pusha
or
imul
dec
mov
mov
mov
push
test
sub
mov
add
out
mov
mul
inc
xor
addr16
xchg
mov
jg
shl
inc
sub
mov
je
jns
and
call
or
das
inc
cmp
add
or
mov
sub
dec
pop
add
and
jmp
cmp
jb
jg
inc
add
mov
mov
inc
sbb
cmp
lea
xor
xor
add
outs
add
dec
dec
push
test
mov
mov
xchg
jmp
or
push
push
bound
cwde
add
mov
shr
sbb
jecxz
outs
in
adc
dec
lea
outs
dec
sbb
or
dec
dec
add
jmp
mov
and
xchg
(bad)
sub
movs
call
rol
in
fisubr
mov
mov
xor
xor
call
and
mov
lods
stos
icebp
aas
xchg
adc
out
scas
push
dec
push
imul
loopne
jl
scas
or
jl
repnz
js
pop
add
add
aaa
outs
adc
clc
cmp
outs
pop
ret
cmp
clc
das
fist
fist
dec
sbb
fdivr
sub
pop
lahf
add
add
fs
mov
jne
inc
xor
or
add
shr
add
sti
ins
lds
xchg
jne
xor
es
inc
dec
jae
sub
adc
mov
cmp
dec
movs
movs
sbb
add
loop
or
xor
out
test
test
test
(bad)
adc
test
or
add
rcr
cld
sbb
push
push
xchg
lock
pop
jmp
dec
mov
rol
xchg
or
pop
fild
jmp
mov
mov
daa
pop
dec
lock
add
and
and
test
add
and
nop
xchg
pusha
add
adc
enter
add
lock
dec
add
dec
add
out
sahf
add
out
mov
movs
les
mov
push
mov
dec
or
mov
or
shl
or
mov
add
xchg
mov
adc
or
add
cmp
sbb
xor
dec
pop
popf
or
pop
into
dec
jne
jmp
adc
push
shl
jmp
mov
arpl
xor
push
add
and
add
pop
outs
add
pop
xor
(bad)
mov
adc
cli
in
xor
push
fsubr
mov
cmp
jge
adc
xor
add
add
mov
or
fdivr
or
mov
not
and
push
mov
xor
mov
push
or
arpl
sbb
pop
ror
loopne
cdq
mov
pop
add
jle
sub
or
in
mov
rol
fadd
ds
xor
cmp
rcl
xchg
mul
cmp
ror
test
jmp
fimul
or
(bad)
fmul
aaa
lock
mov
xor
xchg
inc
and
mov
aam
aam
ds
gs
cmp
or
aam
(bad)
adc
pusha
or
jno
sbb
sar
mov
jne
int
lods
push
int3
or
mov
out
enter
fistp
add
enter
add
inc
stos
popf
sbb
je
scas
pop
in
in
mov
or
test
sbb
add
mov
adc
sar
ficomp
adc
cli
xlat
dec
lds
ror
dec
xor
and
push
mov
push
aam
mov
inc
je
stos
push
cs
or
dec
ret
aas
aad
sub
sbb
aad
sbb
sbb
and
sub
push
sbb
rcr
xchg
cmp
in
mov
rol
sbb
(bad)
std
dec
cmp
mov
xchg
xchg
cmp
lods
int3
ret
or
xor
dec
jmp
dec
loop
and
rcl
push
movs
aad
mov
(bad)
icebp
out
pop
inc
out
inc
scas
add
(bad)
adc
shl
mov
jno
repnz
fadd
xchg
jb
cmp
inc
jae
or
xor
or
lock
lock
xchg
jno
dec
iret
xchg
and
push
inc
add
push
or
les
mov
xor
pop
ret
addr16
gs
cmp
fwait
fwait
in
sub
cmp
push
jge
mov
mov
sub
lods
in
or
sbb
sub
sbb
adc
xor
shl
lea
jne
div
sbb
sub
pop
or
inc
jo
inc
add
push
jbe
loope
pop
je
xchg
pop
pop
inc
clc
inc
js
dec
mov
add
sbb
not
or
nop
(bad)
je
adc
js
sub
add
push
or
inc
dec
cdq
in
xor
je
sub
push
mov
jmp
push
xchg
mov
mov
inc
lahf
add
inc
rcl
lock
rcr
lahf
sub
jo
cmps
add
mov
lea
mov
add
in
and
fdivr
sub
pop
aaa
inc
loop
inc
mov
sub
lock
mov
push
add
push
sub
cmp
pop
xor
shr
push
xchg
inc
push
push
loop
mov
xor
sbb
or
sbb
push
icebp
adc
adc
cmp
retf
or
xchg
jns
jg
or
(bad)
popa
mov
cvtps2pi
push
(bad)
or
adc
sbb
sbb
into
es
punpckhwd
cmp
jnp
cmp
push
adc
dec
or
add
adc
push
sbb
ins
sbb
and
sar
test
popa
dec
add
push
jno
or
ror
(bad)
jne
jbe
in
ror
xchg
mov
xchg
mov
jl
sti
sbb
pop
fcom
dec
xchg
add
cdq
in
cmp
or
or
or
inc
rol
mov
fsub
mov
mov
pop
mov
push
pusha
jb
inc
mov
lods
dec
cmp
sahf
ror
out
dec
add
mov
adc
or
(bad)
call
lods
mov
out
xor
popa
inc
ret
sbb
sub
dec
cwde
add
ret
iret
pop
ja
mov
(bad)
jge
jne
mov
mov
push
loopne
and
cmps
sub
inc
int
xchg
sahf
inc
dec
(bad)
rol
and
adc
add
dec
fld
mov
push
clc
movs
imul
in
mov
add
add
sub
push
lea
push
aas
fs
xor
sub
cmp
iret
mov
js
dec
fdiv
dec
add
push
and
(bad)
sub
rcl
or
ret
xchg
pop
add
xchg
adc
aas
dec
pop
pop
test
hlt
mov
ret
lea
add
outs
jmp
sub
sub
add
push
push
retf
and
pop
ud1
add
std
cli
repnz
(bad)
cmc
test
pop
les
loope
mov
mov
adc
out
pop
lea
pop
fnsave
test
inc
push
fwait
push
ins
sub
push
or
and
xchg
and
je
xchg
lea
mov
push
cmp
arpl
add
and
clc
fldcw
mov
ins
sbb
push
inc
outs
fcomp
xchg
aam
inc
dec
adc
shl
stc
sahf
lea
push
mov
pop
test
cmp
test
cmp
jne
nop
(bad)
or
test
xchg
sahf
lea
aam
xchg
(bad)
cmp
xchg
sub
aas
sub
xor
dec
cs
inc
or
inc
mov
push
shr
popf
shl
or
adc
push
rol
cmp
leave
shl
cmp
mov
push
sbb
adc
iret
ins
xchg
cmps
cwde
mov
inc
add
addr16
lock
mov
mov
(bad)
and
imul
cmps
enter
test
aaa
enter
pushf
(bad)
jmp
and
ficom
frstor
aam
fdiv
dec
jne
or
inc
fisttp
popa
out
dec
lods
jp
jo
js
(bad)
jg
mov
sbb
push
ficom
add
jns
lock
ins
xor
ins
cmp
push
add
jle
or
fisubr
lock
jnp
cmc
dec
fs
mov
pop
mov
and
out
jns
sbb
and
xor
fwait
loopne
mov
xchg
int3
fucomi
(bad)
and
or
je
add
jmp
bnd
inc
add
jnp
push
aam
int3
mov
ror
ret
jo
ror
ret
push
and
fstp
shr
ret
inc
push
push
push
push
inc
daa
lods
inc
mov
push
fdivrp
lods
add
jne
and
jmp
mov
ror
add
push
or
xchg
mov
add
xor
push
dec
fild
mov
shr
xchg
ret
push
sbb
sbb
cmp
inc
and
adc
push
cmp
daa
or
mov
push
cs
inc
std
call
and
xchg
sbb
pop
push
mov
rol
js
xchg
loop
stos
adc
jnp
adc
sbb
mov
pop
ror
mov
aaa
nop
(bad)
pmullw
or
jmp
or
sub
mov
sub
dec
ret
adc
and
imul
(bad)
jne
or
jl
jne
adc
fcomp
pop
dec
or
aam
jnp
inc
mov
loope
mov
cmp
mov
call
out
cdq
test
and
popf
mov
sub
loopne
pop
rol
or
or
test
lds
sub
adc
and
jmp
sub
sub
pop
pop
xchg
xchg
pop
vmread
add
add
lods
inc
mov
push
enter
test
xor
data16
adc
or
sbb
and
push
add
sbb
pop
adc
ret
add
mov
add
cmp
adc
or
add
push
jae
repnz
xchg
in
shl
mov
xchg
sbb
shl
test
sbb
mov
push
or
dec
mov
cmp
inc
push
mov
stc
dec
xor
jl
arpl
jno
sub
jbe
mov
mov
adc
rcr
je
sbb
outs
push
pop
(bad)
(bad)
xchg
sbb
das
es
pop
inc
jne
adc
cmp
pop
add
ficomp
mov
add
mov
or
pop
test
xor
(bad)
jl
cmp
ret
xor
sub
adc
jb
pushf
lahf
inc
push
rcl
sbb
mov
inc
push
inc
aaa
ja
push
inc
scas
clc
daa
cmp
or
rep
cmp
xor
movs
push
push
mov
aaa
dec
sbb
or
add
enter
jp
je
lock
push
or
shr
or
or
mov
aam
add
movs
and
jne
lea
jmp
add
mov
stos
cmps
cwde
clc
cmp
or
arpl
add
xor
iret
mov
add
iret
mov
test
pop
aam
or
mov
sub
(bad)
imul
dec
test
mov
dec
add
ins
add
cld
outs
mov
lea
shr
sub
mov
ret
aaa
mov
arpl
jmp
hlt
int
xchg
fcmove
lock
aas
sub
xchg
push
mov
adc
adc
mov
xchg
ror
or
xor
jle
dec
in
dec
cmp
xor
push
jo
pop
aas
rcl
jg
sub
mov
pop
jmp
jnp
pushf
jp
cld
push
jne
jecxz
dec
or
enter
add
(bad)
lahf
mov
les
fwait
test
jp
mov
aam
je
imul
push
inc
(bad)
dec
rcl
add
hlt
mov
jmp
or
or
lods
rol
push
pop
hlt
call
(bad)
sub
lock
add
call
sahf
or
xor
sub
mov
call
mov
cmp
push
enter
and
and
shr
pop
and
mov
js
(bad)
jge
clc
cmp
imul
aas
sub
adc
dec
ins
jne
mov
shr
shl
lahf
mov
sbb
sbb
pushf
pushf
sbb
rcr
fisttp
push
jl
bsf
(bad)
mov
or
in
add
pop
adc
and
cld
inc
adc
inc
or
pop
movs
and
inc
pop
mov
push
or
imul
scas
dec
cmp
arpl
cmps
inc
dec
sub
xor
jl
pop
hlt
mov
dec
jb
in
in
idiv
mov
sbb
rcl
iret
sub
ror
ret
das
cmp
ds
jmp
imul
adc
or
mov
loop
cli
push
rcr
cmp
jle
or
add
push
cwde
mov
jmp
(bad)
fdivr
das
outs
jne
or
and
fmul
jo
in
je
clc
or
inc
lds
les
xchg
and
cli
pop
mov
sub
leave
or
nop
add
and
pusha
inc
rcr
lds
sbb
stos
pop
or
ins
xchg
add
sub
inc
jl
pop
mov
in
jb
sub
mov
mov
sub
inc
jl
pop
dec
jbe
vxorpd
mov
dec
shl
dec
dec
ja
fld
or
mov
mov
jnp
imul
push
mov
fimul
mov
push
fisttp
cmp
add
jmp
or
mov
test
or
xchg
clc
hlt
jecxz
dec
loopne
je
push
push
sahf
bound
(bad)
shl
push
cmp
push
pop
test
fidivr
mov
sti
idiv
repz
jbe
movs
mov
and
add
aas
mov
push
mov
or
push
mov
sbb
sub
rol
or
sub
repz
aas
jl
(bad)
cmp
test
in
mov
inc
mov
nop
imul
push
or
test
ss
loopne
xlat
je
pop
mov
adc
pop
sar
mov
push
push
sbb
inc
pop
cmp
daa
push
mov
inc
push
test
mov
push
cmp
out
or
xchg
(bad)
sbb
fdivp
add
call
jo
ja
mov
popa
int
sub
fmul
pushf
mov
(bad)
push
push
fimul
outs
xchg
push
and
fdivr
repz
jmp
xor
fnsave
rcl
jmp
aas
lock
adc
rol
add
and
add
inc
inc
cwde
pop
push
clts
inc
xlat
ja
push
push
push
mov
(bad)
cmp
push
popa
sti
pop
(bad)
out
mov
xchg
ins
inc
add
test
sbb
(bad)
sub
inc
hlt
mov
add
je
push
and
add
sbb
inc
popa
or
adc
pop
cmp
jne
xchg
push
xor
cdq
sbb
push
arpl
mov
shl
dec
adc
das
push
inc
dec
cmp
iret
pop
dec
cmp
xchg
push
adc
mov
inc
push
sahf
jne
cmp
cmp
je
xor
neg
out
loop
imul
das
pop
nop
or
xchg
imul
add
cmp
jge
and
jnp
shl
ror
pop
jl
cmp
pop
pop
inc
sub
imul
push
push
xor
addr16
mov
movs
cld
add
pop
lock
enter
and
xor
addr16
sub
leave
ret
or
add
aaa
jge
(bad)
sub
gs
mov
cmc
cmp
inc
mov
jl
mov
(bad)
sbb
xchg
sbb
pop
xor
mov
imul
push
(bad)
xor
pop
lods
add
xchg
adc
mov
or
inc
cld
mov
dec
das
mov
in
mov
add
dec
mov
adc
mov
inc
mov
mov
sbb
adc
add
adc
sub
faddp
mov
sub
popa
push
hlt
dec
loopne
data16
iret
call
icebp
(bad)
xor
cmp
or
lea
or
xchg
div
pusha
add
lods
es
stos
loopne
jbe
sbb
sub
xor
lahf
test
xor
mov
js
sbb
loop
or
add
push
pop
push
and
xchg
aam
mov
or
ret
repnz
dec
sbb
sub
pushf
mov
or
and
push
adc
jnp
jle
push
js
ror
fistp
fld
cmps
lods
(bad)
xor
popf
add
fcom
jns
xor
add
popa
das
aad
lock
cmp
or
pop
push
(bad)
pop
adc
aam
push
out
pop
mov
imul
jns
neg
push
adc
mov
jmp
add
or
inc
push
jg
icebp
cmp
loope
test
test
mov
adc
call
clc
jge
cmp
popf
mov
sar
mov
cmp
es
hlt
dec
add
adc
pusha
pminub
jp
pop
push
cli
and
pop
push
imul
push
loopne
xor
sbb
adc
xor
rcr
lock
das
stos
sub
repz
loopne
pop
sbb
push
add
(bad)
sub
movs
mov
mov
add
sahf
add
push
add
sub
sub
adc
and
jnp
push
outs
or
jmp
(bad)
in
rol
mov
imul
and
shl
arpl
add
leave
and
sbb
xor
cwde
mov
mov
test
pop
mov
pusha
fnstcw
jmp
cmp
add
(bad)
(bad)
mov
lods
mov
adc
imul
(bad)
aas
test
and
out
mov
and
jne
lock
test
ret
je
or
std
pop
mov
or
jmp
inc
sub
or
scas
mov
push
call
adc
mov
mov
fwait
es
lea
out
repz
out
inc
sti
jne
and
je
mov
(bad)
ror
mov
adc
sti
xchg
rol
adc
inc
clc
inc
pop
out
and
inc
es
loopne
xlat
sub
fisubr
or
ins
mov
call
xchg
mov
cwde
push
xchg
push
or
js
and
aas
pop
push
jo
add
aam
jp
mov
js
xor
int
push
pop
sub
jmp
lea
js
rcr
inc
and
scas
sar
push
das
inc
xor
aaa
mov
push
lock
add
shl
fild
jne
fnstcw
daa
and
adc
lds
push
mov
adc
mov
adc
sub
mov
inc
jg
add
popa
sbb
and
mov
inc
ins
xor
and
(bad)
test
pop
js
rcr
aam
push
aam
dec
or
push
jo
test
inc
add
xor
dec
scas
mov
imul
in
test
cmp
add
cmp
dec
jnp
dec
fcomp
loopne
or
add
jae
ja
cwde
lods
cmp
test
or
sbb
cmp
add
stos
ja
push
cmc
add
and
scas
adc
add
div
cmp
push
dec
fnstcw
sub
test
push
aam
call
into
mov
jmp
dec
test
lds
inc
jno
push
xor
push
add
xlat
inc
and
sar
jmp
adc
push
adc
push
cwde
or
and
xchg
ss
pop
cmp
cmp
pop
shl
arpl
iret
mov
rcr
ds
sti
scas
xor
dec
loop
ja
jmp
adc
ja
lock
stos
scas
pushf
mov
mov
xchg
xchg
and
(bad)
rol
add
stos
mov
push
add
jle
push
xchg
jmp
adc
jnp
add
pop
and
(bad)
ficomp
add
push
or
call
ret
ss
clc
xlat
(bad)
sbb
jo
push
add
add
ficom
leave
add
inc
ret
mov
ja
fnstenv
ret
xor
pop
cmp
and
das
gs
jne
mov
outs
add
xchg
and
pop
adc
and
sti
add
aam
in
(bad)
aam
add
add
lea
push
xchg
xchg
add
sub
dec
push
mov
push
push
pop
push
cwde
cdq
push
mov
and
enter
pop
xor
adc
pop
adc
push
and
inc
xor
add
(bad)
sbb
adc
mov
add
sub
test
inc
not
pop
fbstp
xchg
sar
inc
cmp
xor
xchg
(bad)
mov
clc
inc
lea
cmp
pop
mov
sbb
pop
call
lds
lahf
sbb
cmp
xchg
pop
add
sbb
push
adc
test
test
add
sbb
pop
rcr
es
xchg
call
sbb
jmp
jg
xor
add
push
cmp
inc
sbb
mov
fisttp
xor
inc
jmp
sub
adc
xchg
sub
(bad)
pop
or
in
jle
add
or
adc
xchg
mov
jge
lds
cmp
ja
xor
xor
xchg
adc
cmp
test
adc
inc
mov
inc
inc
pop
mov
es
je
pop
add
or
or
pop
adc
pop
jp
adc
mov
xor
lea
rcr
test
mov
jbe
or
push
xlat
mov
or
and
mov
das
dec
jae
das
add
add
mov
fwait
dec
and
pop
mov
test
xchg
fisttp
sbb
(bad)
out
mov
cmp
pop
mov
mov
sbb
sub
push
clc
pusha
mov
mov
shr
ins
xor
jl
add
jo
popa
stc
nop
add
(bad)
int
push
in
xchg
xor
pusha
add
ret
xchg
cmp
je
push
lock
inc
sub
inc
hlt
push
test
or
mov
mov
add
or
add
enter
and
sbb
mov
push
movs
push
push
mov
(bad)
push
or
jg
lock
add
loopne
pusha
add
lock
ins
fldcw
out
mov
jo
and
inc
les
mov
push
cmps
jne
and
mov
mov
add
test
in
cmp
jo
rol
mov
test
sub
mov
add
push
xchg
push
or
cvtdq2ps
and
imul
iret
push
fsubr
jmp
adc
(bad)
ss
cs
sub
scas
xor
dec
inc
mov
(bad)
ins
pop
daa
fimul
imul
aad
call
push
call
and
push
scas
and
ins
sbb
mov
push
push
sbb
ss
xor
xor
arpl
lea
pop
or
sub
or
mov
pop
jp
gs
ret
adc
xchg
push
pusha
dec
ss
jnp
inc
add
lods
aam
mov
dec
add
and
mov
mov
add
jle
aas
fmul
dec
inc
mov
popa
xor
(bad)
cmps
call
cmp
jae
cdq
add
and
enter
inc
or
lahf
push
sbb
inc
xchg
std
dec
jno
adc
imul
stos
mov
cmps
push
aad
inc
pop
inc
mov
js
sub
xor
xchg
mov
mov
xchg
loope
xor
iret
push
popa
pop
xchg
adc
mov
mov
cmps
add
loope
arpl
fcom
dec
jg
(bad)
sub
popf
inc
cli
inc
push
(bad)
mov
or
pop
bt
psrad
xchg
leave
mov
mov
xchg
das
and
push
sub
add
data16
push
add
or
mov
xchg
lock
rcl
inc
or
daa
mov
loopne
mov
adc
xor
retf
(bad)
xchg
xchg
pop
sub
loope
call
adc
cmp
je
loopne
test
clc
loopne
cli
xor
push
jne
sbb
add
dec
inc
add
push
ret
adc
(bad)
je
je
adc
(bad)
and
mov
jge
repz
xchg
loope
daa
pop
add
pop
adc
push
clc
mov
leave
dec
test
inc
aam
and
xchg
nop
sub
pop
add
inc
cmp
sti
push
inc
ss
or
or
rol
popa
inc
sbb
inc
adc
sbb
outs
xor
pop
stos
add
add
pop
inc
(bad)
pop
pop
pop
movntq
fwait
je
mov
ja
add
sbb
data16
xor
pop
pop
cwde
movs
mov
je
mov
dec
or
xchg
mov
in
adc
movs
and
fdivr
ss
je
jnp
lods
push
cmp
je
mov
repnz
xchg
int3
xchg
xor
jnp
loop
das
xchg
movs
dec
js
sbb
mov
dec
(bad)
fisttp
sub
ret
add
push
sar
loop
and
adc
imul
and
inc
jmp
mov
cmp
jne
mov
test
pop
cmp
outs
jae
int
and
push
sbb
sub
and
pop
or
cmps
dec
test
repnz
cmp
repnz
test
xchg
or
inc
xchg
adc
cwde
mov
jmp
add
bound
gs
cwde
mov
pop
push
ins
rcr
jo
inc
or
jb
sub
cmp
mov
push
pop
add
xor
inc
push
dec
mov
lea
xlat
adc
mov
ins
in
lods
sbb
leave
pop
cld
push
les
mov
jbe
cmp
adc
lds
xchg
mov
jmp
js
dec
add
adc
add
loopne
jbe
or
add
inc
push
pusha
gs
lods
adc
hlt
mov
imul
dec
push
inc
mov
mov
es
mov
add
hlt
and
icebp
inc
hlt
(bad)
lock
mov
es
or
test
loope
sbb
in
arpl
jg
push
mov
mov
push
or
fsub
mov
imul
inc
jg
adc
push
pushaw
jl
sahf
jb
or
xlat
mov
popf
adc
arpl
mov
fcomp
push
inc
aaa
or
push
test
mov
jne
mov
rcl
in
push
ins
in
mov
in
cmc
and
xchg
pop
in
or
pop
and
ret
cmp
pop
and
mov
cmp
mov
adc
xor
or
sub
cwde
adc
adc
push
adc
mov
pop
and
push
and
addr16
sub
inc
or
ins
outs
arpl
add
dec
es
les
je
add
jl
pop
or
fmul
das
mov
cmp
inc
inc
or
add
(bad)
test
or
pop
(bad)
dec
push
lds
sub
add
sub
arpl
or
test
mov
fstp
repz
lds
and
test
add
sbb
jmp
jae
sub
jl
adc
mov
and
clc
xlat
and
cmp
add
int
mov
dec
or
jmp
mov
(bad)
std
das
push
and
or
push
mov
dec
xchg
jmp
aam
cmp
add
inc
div
mov
data16
xor
mov
and
pop
push
dec
ins
and
in
movs
sbb
add
jg
xchg
aad
fistp
mov
jne
adc
cmc
inc
loopne
jne
jecxz
mov
add
cmp
sub
stc
jge
cmp
jg
or
pop
jne
jae
cmp
dec
or
add
pop
add
adc
enter
push
sub
rol
or
jb
nop
jg
cmp
push
inc
xor
mov
ins
jo
arpl
ins
add
xchg
mov
xor
call
push
mov
pop
test
dec
and
xor
sub
fmul
frstor
or
(bad)
shr
push
push
iret
sbb
dec
mov
mov
nop
xchg
ins
ret
dec
add
xor
call
inc
sub
outs
test
dec
add
inc
cmp
pshufw
(bad)
or
push
in
or
icebp
pop
or
pop
and
pop
dec
clc
cmp
or
adc
fiadd
or
or
or
push
loope
and
in
out
xchg
inc
inc
es
xchg
sbb
test
inc
push
push
les
leave
sbb
mov
cmp
leave
add
outs
pop
push
adc
in
jne
jmp
pop
sti
pop
sub
cs
add
mov
jae
jge
push
stos
or
jbe
hlt
mov
jne
cmp
test
js
and
xor
push
push
xor
fmul
pusha
ins
loope
bound
xor
or
mov
addr16
pop
and
or
pop
(bad)
aam
ss
out
sbb
add
adc
rol
mov
cmp
sub
push
or
movs
popa
pop
push
and
add
mov
rcl
shl
sub
mov
push
sbb
add
mov
inc
aam
push
sbb
cld
mov
inc
inc
int3
call
jecxz
cdq
rcr
icebp
test
test
je
cli
or
add
or
mov
inc
jge
clc
or
cmp
mov
sub
test
in
cmc
test
stos
add
jno
idiv
add
test
fcomp
push
mov
mov
adc
movs
mov
pop
test
outs
cmp
inc
adc
xchg
xchg
pop
and
in
imul
xchg
add
push
inc
in
mov
inc
inc
push
int3
sti
add
adc
add
xor
pop
arpl
jno
loopne
xchg
out
cld
scas
and
cmp
mov
push
int
dec
adc
and
cmps
es
ret
js
cmp
mov
adc
pop
(bad)
adc
or
retf
cmp
ins
clc
inc
cmp
test
xchg
(bad)
push
movs
ficom
xchg
mov
adc
pop
xor
pop
and
sbb
js
cli
push
cmp
mov
ror
ret
fiadd
dec
(bad)
or
sbb
das
or
fisttp
ret
imul
ret
out
fsub
mov
js
add
loop
push
xchg
sub
outs
jne
and
loop
mov
sbb
dec
sub
xchg
lock
mov
lock
push
and
loopne
retf
sbb
jecxz
f2xm1
fucomi
fidiv
inc
sub
popf
xor
movs
loopne
in
or
(bad)
aam
fstp
sti
adc
aaa
and
push
and
xor
sub
je
sub
push
adc
push
push
push
ins
inc
dec
pop
add
cld
adc
je
dec
je
push
add
(bad)
fisubr
outs
addr16
leave
push
int3
add
call
adc
mov
mov
in
rcr
clc
jns
(bad)
add
cmps
sbb
pop
jg
push
adc
xchg
adc
push
or
lods
sub
pop
jmp
sbb
mov
jge
xor
popf
push
sub
sbb
ret
ja
mov
sub
dec
mov
or
lea
hlt
adc
mov
sub
cs
add
cmp
push
push
and
in
call
shl
call
lods
nop
test
popa
loopne
(bad)
lds
sbb
push
and
ffreep
loop
movs
sbb
adc
or
or
enter
and
cmps
and
fisttp
outs
dec
dec
or
ror
push
adc
fs
popa
jg
clc
mov
adc
sub
or
mov
pusha
pop
jg
inc
hlt
jnp
ret
push
imul
dec
cmp
lods
push
in
xor
add
mov
ins
icebp
inc
test
xchg
test
adc
daa
push
gs
outs
sub
sub
xchg
adc
mov
test
daa
sub
sbb
adc
push
or
dec
push
sbb
iret
jbe
out
push
fdiv
push
addr16
mov
xchg
cmp
xchg
pop
test
or
(bad)
(bad)
jmp
in
mov
fiadd
push
nop
ds
and
sti
(bad)
adc
rol
xchg
xor
mov
adc
jl
push
sub
push
sbb
push
repnz
cld
xchg
jl
out
loopne
mov
lock
nop
cmp
(bad)
sub
psllq
gs
or
cmps
in
cld
xor
xor
aas
push
loopne
lahf
mov
add
push
ror
mov
dec
add
sbb
or
adc
xor
or
dec
jg
imul
sbb
push
jl
push
adc
lea
dec
rcl
into
push
and
loopne
into
sub
and
fwait
stos
push
mov
jmp
sbb
add
xchg
adc
xlat
cwde
adc
xor
shl
retf
mov
adc
sub
arpl
adc
int
and
push
push
adc
test
stos
adc
adc
jno
sbb
aad
cld
xchg
pusha
and
add
imul
adc
or
xchg
dec
jecxz
add
in
in
xlat
fstp
sbb
pop
loope
(bad)
add
cld
imul
sbb
lods
push
push
or
inc
scas
xchg
cmp
push
push
xor
pop
jno
jnp
sbb
int3
rcr
movs
add
je
(bad)
call
lods
mov
xlat
mov
add
test
push
push
aad
or
push
scas
outs
push
jl
sbb
cmp
xchg
add
sbb
push
or
in
nop
pop
and
cmp
pushf
and
fsubp
dec
and
jno
out
loopne
push
mov
shr
inc
xlat
jecxz
sub
loopne
inc
clc
popf
(bad)
fadd
mov
add
popa
inc
fisubr
mov
loopne
push
add
daa
scas
daa
mov
jmp
daa
rol
ds
movs
int3
bound
add
retf
les
test
mov
dec
or
sbb
pop
inc
fld
add
pop
fdiv
xor
inc
jno
xchg
aam
(bad)
shl
push
xchg
in
rcr
aas
mov
inc
pop
lock
push
xchg
dec
inc
mov
and
fld
push
sbb
fisttp
or
das
daa
and
pusha
adc
test
inc
inc
nop
inc
xchg
add
or
retf
add
push
into
dec
arpl
mov
dec
cmp
sub
aaa
or
mov
add
add
ss
jge
inc
aam
or
push
add
xor
movs
test
out
mov
pusha
jmp
cmp
sub
jne
mov
jg
daa
pop
loope
and
mov
call
inc
or
or
adc
inc
pop
adc
or
pusha
add
push
sbb
inc
(bad)
sbb
dec
add
mov
mov
sbb
das
add
rcl
sub
out
data16
je
or
rcl
out
neg
nop
mov
adc
lods
shl
pop
shl
cmp
aaa
cli
xchg
add
push
push
push
xor
and
inc
sbb
lea
cmp
pop
and
or
or
sub
pop
dec
aaa
sub
adc
ss
sbb
ret
sub
cwde
add
psubsw
mov
dec
out
ret
push
mov
jne
pop
jo
enter
stos
and
jp
xchg
pop
ret
or
pop
mov
pop
pop
or
and
jne
clc
daa
shr
dec
test
inc
jp
pop
daa
cmp
push
and
xor
jb
cmp
int
pop
sub
jmp
adc
out
and
sub
loop
shr
je
jmp
inc
ror
cmp
push
add
out
dec
pusha
push
sub
pop
lock
add
std
test
clc
je
sbb
arpl
xchg
mov
dec
ficom
or
pop
xchg
add
add
mov
xchg
aam
nop
daa
xor
and
inc
rcr
add
(bad)
call
or
mov
mov
sbb
jb
leave
push
xlat
add
push
inc
addr16
or
icebp
(bad)
sti
jge
pop
mov
(bad)
cmp
call
sbb
xchg
adc
jmp
fist
xor
push
jno
dec
dec
(bad)
adc
sar
fcomp
sbb
loopne
inc
jnp
enter
mov
dec
adc
loopne
cld
mov
retf
adc
adc
adc
ja
add
inc
jo
jnp
push
aam
xor
test
fadd
cmp
cmp
push
or
scas
or
inc
push
bound
mov
xchg
aam
or
(bad)
jmp
pop
lock
dec
fist
je
adc
xchg
retf
adc
movs
or
lock
inc
push
sub
or
mov
push
fadd
test
push
shr
das
xchg
shr
cmp
out
jecxz
lock
mov
add
mov
dec
or
adc
add
or
pop
repnz
es
outs
mov
jl
aam
shl
cli
lahf
fld
jmp
dec
inc
mov
add
add
inc
add
xchg
inc
push
in
and
xor
sbb
add
add
jo
adc
add
imul
push
icebp
shr
or
imul
xor
cmp
leave
push
nop
loopne
xlat
push
mov
and
ds
mov
mov
pop
pop
xchg
push
jecxz
add
sbb
(bad)
cmp
pusha
inc
daa
inc
push
inc
sbb
sub
or
add
push
imul
arpl
adc
or
loope
test
and
inc
and
adc
mov
sbb
test
addr16
add
leave
jge
(bad)
mov
or
mov
push
js
pusha
add
inc
or
sbb
add
addr16
popf
dec
test
and
or
jl
wbinvd
adc
lods
jne
dec
xor
jne
test
outs
mov
repz
jp
daa
adc
mov
pop
mov
call
jmp
or
sub
ins
rol
push
inc
mov
out
lds
stc
jne
cmp
mov
adc
jp
daa
scas
addr16
push
jb
inc
sbb
pop
pop
ret
into
inc
mov
fimul
pop
cmp
cmovle
mov
and
pop
add
and
retf
inc
jge
lea
por
cmp
jo
dec
push
sub
mov
cld
jno
inc
cmc
sbb
rol
or
(bad)
cmp
or
mov
sbb
jg
xchg
(bad)
or
std
add
call
fdivr
sub
inc
jne
dec
lock
sbb
add
mov
sub
pop
push
pusha
push
add
add
test
add
sbb
adc
(bad)
mov
xor
xor
data16
mov
sbb
pop
icebp
push
push
and
pop
push
iret
mov
push
sbb
pop
pop
xlat
shr
or
jne
xor
sbb
xor
es
add
sbb
icebp
jge
lea
adc
xor
sub
icebp
or
sbb
mov
nop
cwde
mov
push
push
push
and
loopne
or
cmp
cmp
and
pop
jg
add
gs
mov
adc
dec
cmp
loop
mov
dec
(bad)
rcr
shl
push
or
mov
sub
pushf
pop
push
imul
ins
shr
loope
jne
mov
call
les
int
push
add
jb
arpl
mov
daa
test
inc
fistp
xchg
pop
jo
or
ins
adc
nop
aas
push
in
and
xor
jb
loop
loop
sbb
mov
test
aas
mov
add
daa
sub
das
mov
sub
add
push
push
and
jns
in
add
push
and
fsubp
cwde
shr
rol
mov
adc
and
pop
dec
add
adc
inc
bound
xor
inc
xchg
(bad)
(bad)
xlat
mov
jbe
movs
pop
cmc
push
push
pop
add
and
mov
dec
cld
(bad)
test
add
jne
cmp
pop
test
and
arpl
push
fsubr
add
data16
iret
sub
popa
add
lock
adc
add
mov
xor
js
and
sub
xor
fisubr
lock
adc
and
aas
xor
je
lods
sbb
adc
dec
jo
push
in
pusha
sub
or
loope
jo
or
xor
test
iret
int
imul
outs
push
or
mov
push
shr
xchg
inc
pop
jo
gs
mov
(bad)
dec
cmps
xchg
mov
test
inc
jecxz
call
gs
hlt
jecxz
xchg
test
mov
pop
ret
dec
push
and
mov
call
test
push
mul
mov
std
fcomp
test
jne
dec
mov
pop
cmp
adc
fsubr
aam
fst
add
add
push
outs
or
push
les
xor
xor
sar
inc
add
out
js
std
cmp
mov
ror
push
pop
das
mov
inc
imul
or
pop
jg
and
push
push
push
pop
and
sbb
movs
ss
xchg
and
movs
pop
inc
(bad)
loop
jmp
push
cmp
jo
add
mov
fiadd
bound
jno
sbb
imul
cmp
adc
clc
sub
ins
stos
add
push
(bad)
rol
rcr
(bad)
sbb
icebp
dec
je
rol
aam
cmps
daa
pop
pusha
and
aad
push
inc
cmc
add
inc
xor
push
xchg
in
push
(bad)
pop
addr16
mov
int
pusha
add
push
jo
push
push
(bad)
xor
cmps
sub
inc
outs
imul
xor
adc
push
jns
adc
jcxz
mov
or
mov
test
dec
sub
popa
fimul
sbb
pop
mov
dec
or
mov
loop
or
mov
test
dec
dec
jg
fdiv
je
mov
sti
mov
pop
pop
xor
mov
imul
push
xor
sbb
or
pop
dec
outs
and
pop
pop
dec
and
je
jge
push
add
js
test
adc
sar
inc
dec
cmp
cwde
cmc
jns
sbb
(bad)
inc
xchg
adc
or
imul
jl
icebp
shl
sbb
aaa
nop
xor
call
jmp
sub
cmp
pop
inc
xlat
mov
and
xchg
inc
inc
add
add
popf
xor
jb
dec
xchg
cmp
push
add
adc
ror
pop
push
jbe
jmp
fcmovnb
call
or
jmp
xor
sub
jno
mov
adc
ret
jp
sub
mov
outs
fdiv
sbb
or
mov
imul
xor
pop
jb
mov
aad
in
not
test
shl
mov
dec
sbb
je
pop
dec
or
push
add
(bad)
int3
inc
mov
or
jmp
rol
or
mov
add
adc
add
cs
sbb
add
xchg
jmp
inc
or
cmp
jg
jle
loop
fs
sub
push
je
fdivrp
inc
loop
pop
jmp
add
adc
add
adc
fcomp
jmp
mov
pop
in
loopne
in
dec
push
mov
dec
fild
xchg
daa
or
(bad)
or
and
push
call
or
dec
or
and
mov
jle
inc
dec
push
sbb
scas
push
adc
jmp
add
dec
push
iret
adc
movs
xchg
movs
aas
jns
add
adc
test
push
ret
xchg
push
call
pop
mov
and
xor
xor
jg
and
push
das
aam
dec
outs
clc
outs
sbb
cmp
mov
adc
mov
enter
js
push
push
mov
(bad)
xchg
xchg
mov
in
les
sbb
adc
or
pop
add
test
pop
mov
mov
out
inc
push
xchg
adc
imul
or
jae
mov
fisubr
inc
add
jne
rol
mov
xchg
icebp
add
or
arpl
sub
and
add
cmps
pop
cs
and
in
ss
pop
pusha
or
add
mov
mov
add
icebp
pop
mov
adc
dec
icebp
push
loope
arpl
jg
cwde
push
xchg
mov
jbe
xor
and
push
mov
cmp
outs
ins
lea
(bad)
sbb
inc
or
mov
fs
push
push
imul
sbb
dec
lods
xor
or
pop
push
hlt
and
mov
jae
add
pop
and
out
and
add
mov
push
ins
inc
xor
inc
mov
movs
fwait
je
or
add
adc
jo
sti
inc
dec
jmp
retf
jne
fs
or
or
xchg
outs
add
dec
nop
clc
adc
inc
dec
jne
xlat
xchg
lock
sub
pusha
ja
pop
mov
jp
mov
nop
in
add
jb
mov
adc
cmp
mov
inc
iret
pop
adc
int3
(bad)
aam
(bad)
jp
mov
xchg
cmp
or
call
sub
jmp
cmp
test
jge
add
cmp
(bad)
daa
mov
lea
ins
das
movs
xchg
xlat
movs
jmp
sub
pop
dec
sti
and
daa
push
out
sbb
add
sub
sub
add
dec
or
movs
add
loopne
mov
test
mov
sahf
repnz
mov
ss
data16
ds
in
je
ret
and
adc
adc
ret
sbb
xor
ins
sbb
test
add
dec
popa
xor
sub
or
jbe
(bad)
sbb
cdq
cmp
mov
and
pop
jmp
sbb
data16
dec
or
popa
adc
xor
dec
sbb
adc
push
dec
mov
sub
adc
imul
fimul
sub
fimul
imul
fcomp
je
sbb
gs
dec
jne
(bad)
int3
mov
xchg
nop
das
cmp
test
adc
pop
mov
loopne
rol
fwait
push
push
cmps
jmp
dec
fisubr
add
xlat
push
mov
mov
frstor
sbb
fcmovb
nop
xchg
les
call
add
das
jae
jg
mov
sub
ret
or
add
sbb
pop
or
inc
mov
mov
test
popf
lods
xchg
data16
jecxz
lahf
leave
lods
addr16
imul
push
popa
lods
and
ss
add
mov
scas
repz
ins
adc
mov
sbb
or
sbb
pop
adc
stos
add
enter
imul
or
push
add
cmp
jge
xchg
data16
sti
inc
add
test
call
push
aas
ins
cdq
dec
outs
mov
sar
or
shl
test
test
push
ins
inc
dec
mov
cdq
push
and
pop
enter
jne
pusha
test
das
sbb
inc
push
lahf
and
cmp
cmp
or
cmp
icebp
aas
sbb
arpl
cmc
mov
sub
push
xor
jbe
leave
daa
in
into
cmc
adc
pop
add
pop
mov
mov
cmp
imul
xor
ins
ds
xor
arpl
xor
add
or
in
(bad)
cmp
and
pop
std
rcl
sbb
or
add
cmp
addr16
mov
or
ret
cmp
push
cmpxchg
push
mov
mov
sbb
xor
adc
and
add
jmp
xchg
aas
mov
and
inc
inc
lea
cld
fwait
jl
inc
cmp
cmpxchg
xor
jo
icebp
test
cmc
stc
dec
cmps
adc
add
and
sti
push
or
aam
mov
sbb
daa
push
sbb
dec
lock
mov
mov
xor
sub
inc
cmp
cmp
mov
sub
and
cdq
jns
cmp
loope
ins
and
inc
add
mov
movs
pop
les
sub
es
adc
add
inc
and
das
and
inc
and
dec
adc
in
jb
adc
inc
dec
inc
dec
gs
ret
sub
push
ins
sub
cli
mov
mov
cmp
mov
mov
dec
dec
cmp
dec
dec
and
mov
adc
xor
out
pop
cmp
mov
jg
sub
inc
jge
cmp
dec
popa
sbb
xor
add
add
shl
fsubrp
out
aaa
cwde
mov
sar
nop
xor
popf
test
cmp
mov
or
add
mov
(bad)
mov
mov
loope
lock
jo
and
cmp
into
xor
mov
lock
scas
dec
push
adc
push
push
fimul
mov
ds
xchg
or
fdiv
mov
or
cmp
mov
fsub
or
jge
fidiv
mov
pushf
stos
mov
mov
xor
movs
outs
(bad)
or
je
and
jb
sub
jnp
in
sti
pop
mov
sbb
push
pop
aam
inc
push
xchg
mov
aam
or
scas
lahf
or
cmp
enter
out
and
adc
loop
add
ret
xchg
inc
or
push
mov
cmp
shr
lods
cmps
lock
jp
dec
pop
mov
js
jbe
pop
js
pop
add
and
call
ins
dec
adc
rcr
daa
sbb
test
or
enter
ss
or
out
sub
mov
cmps
xor
sbb
ret
or
loop
sbb
adc
outs
cmp
pop
jl
(bad)
cmp
jle
arpl
xor
retf
neg
add
or
add
ret
push
add
lea
dec
add
(bad)
sub
push
inc
dec
jno
cmp
and
dec
sbb
mov
pop
popa
adc
mov
mov
mov
sub
cld
adc
scas
inc
or
call
sbb
in
inc
add
push
inc
aam
sub
jle
js
push
xor
dec
ja
jmp
pop
or
push
test
push
ror
enter
loopne
shr
int3
fmul
aam
mov
(bad)
sbb
push
movs
xchg
in
push
in
(bad)
pop
arpl
and
lock
dec
mov
shl
popa
cmps
enter
push
mov
imul
push
push
lods
jmp
popf
or
mov
cmp
test
adc
shl
or
dec
inc
in
add
xor
inc
outs
ror
pop
push
ins
rol
daa
inc
ins
or
add
mov
jmp
or
or
or
jo
(bad)
or
mov
je
push
dec
sahf
mov
dec
mov
(bad)
mov
mov
mov
mov
aam
pop
rcl
call
jbe
pop
outs
push
push
cli
rol
jge
ror
adc
loopne
add
aas
mov
rol
cs
int
in
mov
jle
adc
mov
push
add
pop
int3
add
fucom
xchg
mov
clc
lea
pop
mov
fcomp
mov
js
add
int
cs
fdivr
xor
and
add
adc
enter
adc
les
or
scas
jle
xor
and
add
mov
jle
sbb
rol
mov
add
sbb
mov
fadd
rcl
cmp
cmp
cmps
inc
cmp
xchg
aam
les
bound
pusha
pop
sbb
fs
adc
hlt
repz
daa
je
pop
add
arpl
cmp
sldt
sbb
into
and
iret
repz
call
loop
add
mov
nop
clc
adc
in
push
jo
add
outs
ror
push
jl
mov
mov
setae
xchg
les
jo
aaa
mov
xlat
int3
jg
xchg
add
sahf
mov
push
mov
hlt
add
sbb
pop
nop
mov
pop
add
sbb
pop
cmp
sub
fst
je
xchg
pop
push
adc
push
add
jae
ss
add
sub
scas
or
dec
scas
dec
sbb
ins
inc
frstor
int3
cld
retf
mov
push
loopne
xor
out
out
fs
adc
dec
sub
enter
dec
call
dec
jne
push
pop
adc
push
and
mov
push
loop
pop
inc
mov
sub
inc
sbb
es
cld
add
add
test
aam
sub
or
cmp
adc
je
enter
adc
sbb
fsub
mov
jle
retf
sub
add
arpl
or
add
retf
mov
je
mov
(bad)
cmp
je
mov
cwde
xor
icebp
fsubr
push
cmp
and
add
retf
xor
or
cmp
cmps
pusha
push
call
out
aas
add
xor
test
or
ror
fisubr
jge
imul
enter
test
mov
mov
inc
xor
adc
std
xchg
stos
add
test
mul
mov
and
add
adc
call
rcl
push
xchg
test
or
pop
jl
xchg
jne
cmp
pop
and
add
shr
frstor
je
sbb
xor
fsub
imul
xor
dec
inc
out
push
aam
fidiv
sar
js
xor
push
(bad)
call
pop
lea
lea
push
jbe
xor
cmp
sbb
add
call
xchg
not
add
ins
jo
add
mov
loopne
mov
ror
add
xchg
and
xchg
xor
add
jmp
cvtps2pi
test
mov
bound
dec
cld
sbb
push
loopne
ja
xchg
ja
xor
pop
or
icebp
test
sti
jge
add
jb
cmp
sub
ja
sbb
xor
mov
and
cmp
imul
jmp
in
fst
inc
pop
cmp
jle
les
push
fdiv
ror
inc
loopne
push
icebp
sahf
xchg
clc
add
arpl
call
inc
test
(bad)
push
cmps
icebp
sbb
dec
in
inc
add
mov
mov
and
fdivr
or
(bad)
call
call
sbb
out
push
push
xor
xchg
sbb
push
xchg
cmp
push
inc
or
xchg
in
and
pop
cmp
jmp
ja
nop
sahf
inc
inc
push
jnp
sbb
dec
jo
sti
movs
mov
(bad)
and
mov
inc
adc
xchg
adc
push
das
adc
ss
dec
repz
in
sbb
push
loope
dec
pcmpgtb
sub
push
jmp
sub
pop
or
sub
imul
aas
cmp
jmp
je
or
ret
in
adc
jmp
mov
xchg
or
and
ret
or
pop
lock
and
cmp
sbb
and
fwait
sahf
jmp
inc
mov
je
push
push
sub
jbe
push
dec
outs
jg
enter
enter
jno
loop
push
or
arpl
jns
xchg
adc
iret
or
(bad)
inc
jo
test
add
and
lds
sub
mov
inc
dec
or
and
or
xor
inc
cmp
xor
pop
sub
xlat
shr
les
call
pop
dec
pop
add
or
push
popf
push
adc
jl
repnz
lock
ret
add
mov
add
ss
test
add
dec
xchg
lea
cwde
pop
add
js
adc
pop
xchg
inc
test
push
dec
mov
adc
fmul
lock
pop
ja
mov
dec
(bad)
mov
add
cwde
dec
call
add
push
sbb
pop
adc
push
cmp
push
ins
sub
fs
jo
add
je
jne
xor
add
sbb
mov
add
and
out
and
sub
inc
arpl
out
xchg
sub
ds
es
sub
pop
xchg
daa
inc
test
inc
inc
sub
or
sbb
adc
(bad)
push
push
jne
popa
in
arpl
inc
loopne
js
rol
test
or
push
push
push
push
addr16
je
aad
pop
inc
add
or
shl
dec
in
jmp
or
adc
pop
movs
inc
call
pop
mov
push
aam
int3
int3
cs
movzx
cld
jle
sbb
or
xor
xor
fld
sti
fmulp
push
inc
add
pushf
jbe
sbb
ss
adc
cmp
rcl
inc
sub
pop
pushf
mov
jo
or
je
(bad)
mov
movs
add
adc
and
dec
add
or
xor
fsub
mov
sbb
and
dec
stc
add
jg
dec
inc
ds
push
add
test
leave
and
add
pop
dec
jg
or
or
popa
ja
fs
inc
adc
jg
mov
cmps
push
sbb
aas
out
jmp
daa
jmp
sbb
sub
sbb
arpl
sub
mov
lock
add
adc
and
pop
dec
das
adc
xor
mov
int
adc
mov
and
xor
int3
mov
pop
add
lea
test
mov
pusha
in
dec
out
sbb
mov
push
jmp
ret
call
out
add
add
and
pop
div
or
mov
or
mov
adc
out
xchg
rol
jnp
mov
call
movs
cmp
outs
xor
xchg
or
rol
imul
shr
dec
imul
out
bound
push
in
ret
adc
retf
and
mov
jb
or
add
call
pushf
add
adc
sbb
xor
mov
mov
daa
(bad)
(bad)
(bad)
retf
daa
ror
add
or
fwait
add
inc
adc
xor
xor
sbb
add
inc
sbb
xor
xor
jae
push
or
ja
mov
inc
sub
jae
cmp
pop
adc
inc
xor
mov
add
cmp
jmp
mov
(bad)
jecxz
add
pop
and
add
outs
adc
or
inc
or
push
aam
add
pop
fnstsw
movs
dec
daa
ret
je
mov
mov
arpl
sub
cmp
pushf
sahf
add
cld
mov
mov
call
popa
pop
xor
and
bt
retf
sar
jae
mov
not
and
inc
cmp
jne
cmp
rcr
push
pop
add
and
sub
mov
outs
lods
inc
pop
mov
sbb
and
shl
scas
loope
clc
pushf
les
cmp
add
sbb
cmp
mov
add
cs
mov
inc
out
arpl
pop
pop
js
sbb
push
or
dec
push
mov
push
xor
aas
cmp
cmp
cmp
push
mov
ror
jb
dec
cmps
and
ret
or
or
out
rol
push
or
inc
or
(bad)
fbld
sbb
add
jne
add
fld
xchg
add
push
out
add
push
sub
cmp
clc
mov
jne
mov
repnz
push
adc
push
sub
jae
pop
xchg
sub
inc
or
or
and
pop
push
and
ins
(bad)
mov
add
les
mov
and
addr16
es
push
cmp
pusha
call
add
push
aas
addr16
push
loop
add
mov
repz
jne
mov
sar
dec
and
call
test
dec
pop
dec
inc
int
dec
or
adc
add
inc
sbb
xor
fstp
test
arpl
mov
daa
push
add
and
dec
out
cmp
add
lods
push
test
dec
movs
xor
imul
push
xchg
cmps
cmp
out
mov
fimul
iret
and
adc
arpl
inc
nop
jge
inc
jnp
js
push
add
xchg
xchg
or
icebp
cwde
pop
ins
jl
shr
(bad)
pop
pop
mov
rep
data16
inc
adc
and
or
mov
lea
loope
shl
xchg
cmp
sbb
pop
or
ja
adc
or
iret
sub
mov
mov
and
inc
iret
and
xor
add
push
pop
push
mov
sub
sbb
pop
lock
adc
inc
sbb
(bad)
clc
das
sub
lea
lea
ror
adc
mov
or
mov
jl
fisttp
pop
adc
test
mov
push
je
add
mov
add
mov
jle
xor
xchg
ins
cmps
xor
push
mov
push
sub
or
inc
xchg
xchg
or
mov
and
push
inc
nop
imul
pop
lock
in
or
ret
push
fs
push
cmp
shl
ds
push
in
bound
adc
in
ins
pusha
pop
(bad)
or
or
stos
loope
jmp
xor
inc
push
xlat
mov
test
inc
enter
adc
or
and
cld
enter
adc
ffreep
and
push
or
pop
test
call
(bad)
int3
sub
xchg
adc
rol
repz
(bad)
inc
imul
cmp
retf
push
add
cmp
sub
pop
sub
mov
or
aas
mov
xor
push
stos
inc
jl
push
or
call
and
mov
mov
sbb
dec
cmp
xor
mov
call
movs
lock
cwde
inc
clc
dec
mov
add
mov
jno
(bad)
sub
mov
and
pop
pop
lahf
sar
dec
hlt
iret
repnz
and
pusha
lds
outs
in
add
imul
addr16
test
rcl
scas
test
call
adc
enter
adc
adc
outs
movs
and
cmp
mov
xor
jecxz
push
add
dec
adc
clc
jge
cmp
sub
mov
and
push
dec
shl
cmp
add
xor
inc
or
enter
cmp
push
mov
(bad)
daa
imul
jmp
and
test
or
stos
in
add
jno
out
cmp
xchg
mov
sub
fs
jns
cmp
popf
cmp
aad
sbb
push
adc
jp
pop
das
sbb
dec
cld
sbb
adc
hlt
cmp
adc
dec
inc
and
shl
fimul
frstor
push
adc
and
mov
ror
popf
mov
loopne
mov
loopne
lock
cmp
sub
push
sbb
rol
dec
out
movaps
cli
mov
add
add
iret
jae
sub
cmp
rol
cmp
and
jge
add
add
jl
or
lock
push
inc
add
push
or
(bad)
cmc
or
sbb
popf
mov
shr
push
add
mov
dec
push
sbb
jne
push
std
add
ret
pop
mov
xor
stos
jno
inc
xchg
mov
std
rcl
or
cmp
push
inc
bound
push
mov
les
jge
(bad)
pop
pushf
push
add
iret
or
sbb
mov
jb
or
(bad)
outs
push
cld
pop
push
fistp
inc
daa
or
sbb
es
inc
sub
stos
sub
cld
pushf
outs
(bad)
add
pop
scas
and
(bad)
shl
imul
mov
jl
sahf
shl
mov
push
dec
jge
mov
and
mov
pop
adc
dec
add
inc
add
cmp
ror
or
add
sub
push
test
movs
cmps
adc
adc
push
js
xor
or
push
or
leave
pop
pop
cmp
or
dec
add
pop
push
xchg
add
(bad)
mov
cmc
add
das
xor
dec
inc
xchg
push
js
jecxz
add
add
sbb
add
cmp
ja
je
pop
add
cli
fwait
mov
pop
jl
sbb
mov
pop
enter
jl
xor
lock
add
inc
mov
cli
shl
push
cmc
adc
jnp
mov
popa
cmp
inc
xchg
push
inc
(bad)
dec
mov
push
mov
fnstcw
xor
mov
imul
cmp
out
pop
enter
call
pop
push
je
sub
cdq
movs
inc
sub
xchg
push
test
cmp
cmps
mov
(bad)
push
adc
shr
repnz
js
add
fwait
jo
dec
xchg
sbb
cmovo
(bad)
je
sbb
pusha
and
scas
lea
cmp
outs
in
popa
fidiv
and
mov
push
mov
jle
or
clc
ret
add
fadd
sub
adc
cmp
add
imul
mov
mov
xor
inc
fidivr
movs
or
cmp
test
sbb
or
fldenv
push
(bad)
sbb
es
dec
arpl
jecxz
mov
push
ret
add
test
sar
and
inc
mov
push
add
movzx
jmp
add
add
adc
cmp
out
rol
pop
inc
mov
dec
adc
out
adc
and
cmp
mov
mov
mov
mov
pop
dec
pop
ret
(bad)
in
adc
in
das
jne
cmp
ret
(bad)
sub
add
adc
pop
or
inc
sbb
xchg
add
jmp
mov
xor
jmp
add
pop
test
sbb
push
jne
xchg
jp
or
bound
fmul
inc
and
cli
call
inc
call
inc
arpl
sbb
inc
cmps
jl
jne
mov
mov
stos
or
mov
idiv
sub
add
push
adc
sub
mov
mov
jmp
mov
push
add
push
stos
mov
lods
fsubr
call
fdiv
sti
jmp
dec
out
cmp
pop
push
popa
lds
mov
cmps
jmp
xor
xor
cmp
mov
adc
mov
xchg
adc
push
push
adc
and
or
mov
es
jbe
mov
jmp
cld
pop
mov
cdq
idiv
ins
aaa
adc
xor
jns
xchg
xor
push
(bad)
call
(bad)
daa
or
(bad)
ins
sbb
leave
pop
or
sahf
mov
cmp
inc
add
fsubr
stos
lea
mov
jp
sub
fadd
out
adc
push
or
adc
xor
rcl
inc
(bad)
fild
arpl
cs
adc
add
adc
arpl
pop
or
icebp
mov
dec
aas
push
cmp
call
jg
test
or
inc
daa
das
push
retf
imul
mov
xor
cli
fsubrp
mov
(bad)
in
inc
or
popa
ror
add
add
cmp
aas
test
push
adc
adc
xchg
mov
in
fdivr
loope
or
pop
out
and
adc
not
sub
jmp
adc
jo
imul
mov
sub
bound
sub
fs
adc
rcl
add
push
clc
in
fdivr
add
pop
call
push
jo
and
adc
push
out
xchg
pop
call
mov
loopne
mov
movs
adc
aaa
mov
pop
xor
loop
sub
scas
push
and
mov
and
add
ret
adc
neg
ror
jp
pop
or
and
and
adc
jle
sub
cmp
sub
jno
fmul
nop
jne
ss
ins
dec
push
and
imul
ins
inc
adc
adc
in
and
fistp
adc
sbb
push
(bad)
or
mov
add
xchg
xchg
push
in
daa
(bad)
pop
sbb
xchg
fdivr
add
test
adc
add
and
push
push
or
movs
add
mov
aam
(bad)
add
dec
xorps
pop
dec
clc
push
imul
into
push
inc
mov
in
add
retf
push
and
ins
add
sbb
and
sub
pop
call
or
adc
mov
bound
popa
fnstsw
dec
fs
or
and
dec
pop
iret
inc
or
in
and
jno
rcl
or
sbb
mov
cmp
mov
mov
test
sub
out
dec
inc
push
inc
add
add
jmp
pop
xor
movs
sub
mov
inc
cli
xor
adc
fs
aas
and
adc
lahf
cmp
add
pop
jmp
add
cmps
inc
ret
dec
cmp
add
imul
adc
adc
mov
cmp
xchg
push
clc
es
mov
cmp
add
xor
es
sub
pop
pusha
in
imul
or
mov
imul
outs
clc
leave
adc
pop
xchg
rcl
mov
add
xor
or
movlps
call
aam
and
add
inc
mov
mov
and
or
(bad)
pop
cmp
pusha
and
add
loope
push
mov
adc
xlat
inc
cmps
inc
cmp
fiadd
mov
xor
push
ret
xchg
push
dec
test
hlt
or
ds
or
inc
(bad)
mov
(bad)
pusha
fs
mov
ror
add
add
jne
mov
es
icebp
test
popa
add
or
imul
mov
push
pusha
jl
add
sbb
cmp
(bad)
out
in
xor
or
xchg
ret
cs
mov
sbb
loopne
test
push
jge
shr
add
ror
push
pop
sbb
adc
push
xchg
xor
shl
pop
fisub
sub
scas
(bad)
adc
pop
inc
xchg
iret
loop
rol
sbb
sub
ror
xor
sub
sbb
loopne
push
dec
jne
xor
inc
adc
loop
mov
push
sub
sub
and
add
push
daa
dec
add
mov
adc
jb
loopne
and
adc
ins
add
add
idiv
add
jo
sub
xor
enter
or
xor
push
push
daa
pop
push
cmp
dec
es
add
jg
test
pusha
js
adc
inc
or
inc
xchg
sbb
push
push
out
push
mov
and
inc
aas
inc
inc
dec
xchg
inc
out
xlat
fcmovnu
and
aas
leave
xor
inc
or
inc
pop
dec
sbb
cmps
sbb
mov
jo
ins
pop
fs
inc
push
cmp
pusha
out
sub
js
push
or
or
enter
in
add
inc
or
test
dec
sbb
xor
xchg
xor
icebp
ja
pop
clc
outs
adc
or
clc
pop
inc
adc
and
in
pop
inc
or
cmp
mov
add
sbb
adc
aaa
cvtps2pd
loopne
adc
push
mov
inc
retf
inc
mov
js
jmp
mov
sbb
shl
or
or
movs
push
inc
mov
add
jne
fld
jae
test
or
mov
jne
sbb
and
jl
dec
inc
mov
or
inc
push
push
add
push
mov
sub
mov
xchg
push
cmp
sbb
add
adc
seto
push
jmp
jg
mov
push
rcl
push
mov
cli
sbb
cmp
jg
mov
add
add
cmp
and
or
xchg
add
and
gs
call
loopne
in
repnz
push
sub
cmp
jge
or
pop
jmp
(bad)
push
mov
xchg
jl
mov
or
(bad)
ja
sbb
push
xchg
jg
idiv
push
xor
jl
add
and
sub
xor
and
scas
ret
arpl
or
mov
pop
mov
xor
fs
dec
push
(bad)
sub
and
outs
add
hlt
pop
xor
(bad)
add
and
sub
mov
add
or
sub
xchg
movs
and
dec
les
inc
aaa
jge
add
and
sub
and
(bad)
xor
enter
adc
pop
lock
xchg
add
add
cs
add
sub
and
adc
icebp
lock
xor
inc
lods
push
nop
inc
out
fnstenv
jmp
lods
and
enter
xor
pop
dec
rol
pushf
sub
rcr
fwait
cld
repz
xor
test
gs
dec
xor
dec
test
inc
mov
push
adc
sub
mov
shl
call
sbb
push
daa
push
lock
(bad)
add
daa
inc
push
clc
loopne
rol
fld
pop
clc
jle
je
sbb
inc
push
(bad)
cld
sub
inc
dec
cmps
popa
loopne
mov
ret
add
js
call
push
cs
dec
fmul
adc
loop
pop
xor
xor
push
rcr
bound
dec
sbb
mov
test
ficomp
(bad)
je
inc
fbld
icebp
arpl
mov
dec
rol
call
jo
outs
enter
add
cli
xchg
call
push
je
(bad)
fs
cs
pop
jmp
pop
dec
add
inc
cld
jl
aam
inc
adc
test
rol
les
aas
shr
shl
xchg
rcr
popa
sbb
inc
mov
adc
pushf
pop
jecxz
cs
pop
aaa
cmp
push
jp
cld
or
lea
dec
push
jmp
add
lea
jb
jp
addr16
lock
lock
aam
mov
push
or
fisubr
fbld
add
mov
sub
mov
call
push
or
cmp
ret
xor
adc
xor
or
push
adc
adc
imul
cli
xor
xchg
daa
nop
ud0
add
dec
in
pop
retf
inc
add
or
lods
cmc
mov
nop
pop
push
cmp
jne
cmp
xchg
mov
adc
push
mov
jp
test
jbe
arpl
rcl
mov
inc
mov
dec
pop
jge
fdiv
imul
sub
push
sbb
add
xchg
fstp
jbe
or
inc
sbb
bound
popa
dec
les
and
inc
dec
dec
f2xm1
sbb
clc
push
fisttp
adc
popa
shr
mov
shr
lods
sub
test
in
inc
arpl
js
mov
popa
inc
bswap
add
add
xor
cmp
popf
sub
sbb
clc
push
nop
in
cmp
sbb
add
sbb
add
xchg
push
or
outs
add
inc
mov
sbb
shl
mov
pop
and
pusha
pop
dec
or
test
xchg
mov
xchg
and
mov
pusha
popf
xor
aas
stc
inc
sub
(bad)
jo
or
and
add
mov
aam
mov
pop
or
lds
std
in
jae
inc
mov
inc
(bad)
adc
shl
ins
pop
std
sub
add
mov
adc
push
out
test
(bad)
clc
(bad)
pop
dec
sbb
inc
mov
cmp
fcmovne
and
inc
cmp
sbb
add
add
add
ja
inc
call
inc
sbb
scas
add
xchg
or
lahf
inc
add
enter
mov
adc
mov
das
add
jo
mov
add
gs
add
jb
mov
xor
push
inc
and
pop
pop
pop
jmp
rol
sub
xor
or
dec
and
les
adc
dec
int
mov
add
pop
js
add
loop
push
add
mov
xor
xor
rol
xor
jecxz
jo
dec
in
adc
jmp
and
stos
jl
push
xchg
test
xor
mov
in
add
push
xchg
loopne
mov
add
outs
cmp
mov
(bad)
add
adc
dec
or
cmp
scas
retf
pop
inc
xchg
jmp
mov
cmp
sbb
add
cmc
pop
adc
sbb
push
sub
jecxz
or
cmps
movs
sbb
or
push
clc
push
nop
inc
popa
pop
out
pop
mov
xor
cs
and
call
inc
fidivr
push
cmp
xor
pusha
or
pop
mov
or
scas
clc
sar
jns
adc
sub
loopne
dec
in
fcomp
push
(bad)
push
jecxz
hlt
sub
push
dec
push
add
xor
add
dec
daa
jmp
sbb
cld
sti
pop
push
ss
shr
imul
pop
push
mov
dec
adc
lock
sub
cmp
in
ins
dec
push
pop
push
outs
dec
or
shr
mov
sbb
or
sbb
not
mov
fldenv
mov
iret
icebp
adc
jl
dec
call
jmp
mov
out
pusha
sar
cmp
cmps
shl
cmp
pop
and
loopne
fyl2x
fcmovb
dec
sub
lods
fs
imul
sbb
jns
pop
fstp
mov
lock
aad
and
in
shr
inc
and
in
lock
fprem
dec
and
ret
adc
mov
inc
xchg
and
test
or
add
lea
pop
add
xchg
outs
rcr
jb
jne
(bad)
movs
dec
jp
js
pop
mov
in
pop
dec
and
push
cmp
sub
jb
aas
jmp
in
mov
jnp
add
mov
xchg
test
mov
inc
mov
jle
jecxz
inc
into
(bad)
test
sub
push
add
cmp
and
push
cmp
or
pop
pop
and
sbb
fwait
inc
jp
inc
sbb
push
lods
or
mov
shr
push
sub
adc
jmp
mov
inc
sbb
push
sub
or
outs
rcl
cld
lfs
xor
push
ja
and
sbb
adc
or
(bad)
adc
pop
mov
(bad)
das
or
push
rcr
inc
pop
cdq
jbe
mov
add
sbb
add
and
popf
sbb
ret
stc
inc
mov
(bad)
push
lea
dec
add
std
je
cmc
xchg
(bad)
lea
add
mov
fwait
or
adc
imul
push
int3
mov
das
inc
add
int3
inc
and
inc
jno
push
fadd
inc
rol
mov
fbld
sbb
jp
jg
sub
hlt
or
data16
sbb
add
popa
mov
pushw
mov
xchg
cmp
or
xchg
loope
cmp
add
push
mov
adc
pop
mov
push
test
xor
cld
adc
popa
shr
inc
inc
pop
xchg
cmp
xchg
adc
mov
cmp
sbb
mov
lock
lock
add
inc
push
or
out
rol
jl
push
push
or
lea
cld
sbb
pop
das
bound
jp
adc
hlt
xor
inc
pop
pop
or
and
and
shl
push
xchg
or
inc
pop
inc
and
xchg
push
jp
call
dec
add
push
loopne
inc
mov
push
lods
pop
clc
adc
cs
pop
jnp
arpl
mov
sub
xor
or
repz
mov
daa
in
inc
dec
add
popf
lea
fidiv
lock
in
add
dec
xchg
adc
pop
ss
inc
je
add
das
ins
stos
inc
xchg
pop
adc
push
sbb
(bad)
add
lea
push
and
and
fbstp
jge
and
inc
cmps
mov
push
xchg
adc
int
or
(bad)
call
dec
pop
adc
or
inc
push
in
mov
es
out
and
push
not
arpl
das
inc
test
in
xchg
loop
mov
xor
test
xor
adc
xchg
popf
stc
daa
jecxz
push
sbb
push
idiv
clc
mov
push
je
clc
push
jmp
dec
(bad)
dec
or
daa
adc
dec
jno
rcr
dec
pop
ror
push
mov
jne
mov
xor
jne
jo
jne
das
cmp
loope
repnz
sub
jbe
popf
scas
or
pusha
pop
test
dec
mov
loope
jp
daa
add
(bad)
pop
inc
inc
pop
frstor
gs
movs
and
jge
dec
pusha
cs
int
fisub
mov
push
or
mov
popa
pop
pop
out
adc
arpl
mov
adc
and
add
stos
and
pop
retf
icebp
lahf
xor
add
fcmovnu
test
fstp
push
sbb
js
(bad)
ret
pop
loopne
pop
add
cmp
sbb
or
sub
mov
xor
xchg
cmp
push
add
jecxz
inc
lds
mov
push
adc
add
push
cmp
mov
add
cdq
adc
push
retf
inc
loop
and
or
scas
lods
daa
mov
jnp
ss
loopne
mov
minps
rcl
xor
clc
shr
inc
lahf
enter
loope
(bad)
outs
or
add
jae
rol
mov
add
adc
mov
mov
xor
or
xor
pusha
js
(bad)
adc
add
add
jmp
addr16
adc
inc
or
fistp
ss
pop
pop
inc
cdq
mov
inc
adc
ins
cmp
push
stos
xchg
mov
inc
mov
retf
daa
mov
ffree
fsub
mov
xlat
fiadd
inc
in
cld
je
outs
and
rcr
sub
fcom
(bad)
sub
sub
enter
push
pop
jl
cmc
adc
inc
jo
popa
cmp
jle
jl
push
push
das
and
dec
dec
and
and
test
add
pop
iret
sub
pop
aam
dec
adc
int
or
fs
movs
mov
out
xchg
mov
inc
pop
push
rcr
adc
mov
dec
mov
jmp
mov
jbe
popa
je
pop
lock
daa
ret
cmp
inc
ss
es
push
or
mov
bound
(bad)
sub
jno
lods
(bad)
adc
icebp
cmp
push
and
push
out
dec
les
sbb
shl
cs
mov
ret
sub
test
xlat
mov
dec
and
cwde
les
pop
and
jo
pop
xchg
(bad)
ret
inc
outs
dec
sub
adc
xchg
bound
mov
push
mov
sbb
ss
std
cmp
inc
or
ror
(bad)
cmp
pop
adc
sbb
push
lea
push
(bad)
mov
mov
lods
imul
inc
and
pop
pusha
mov
hlt
dec
cwde
lods
inc
mov
addr16
sbb
xor
cmp
xor
test
jb
pushf
mov
movs
imul
xor
and
and
push
adc
icebp
or
jmp
push
inc
outs
cmp
icebp
push
jmp
inc
cmp
lock
cld
shl
icebp
stos
imul
mov
dec
xor
nop
rol
sub
or
push
cmp
iret
xchg
add
mov
and
sub
and
lds
sub
push
popa
sub
int3
mov
and
dec
js
sti
sub
adc
test
movs
cmp
cmp
push
into
inc
dec
mov
dec
lea
adc
push
out
scas
lods
xor
mov
movs
mov
add
mov
sub
jecxz
xor
xor
push
push
adc
or
rcr
or
adc
xchg
add
mov
lods
or
push
cmp
test
or
or
or
ficomp
scas
push
ret
mov
jo
mov
adc
and
push
gs
inc
inc
aaa
push
push
and
or
xchg
pop
dec
cmp
mov
xor
outs
mov
and
adc
js
pusha
ds
jnp
sub
jg
(bad)
imul
add
inc
add
adc
fdiv
das
cmp
dec
add
imul
pop
imul
sbb
pop
mov
dec
std
fmul
test
mov
sar
pushf
inc
loopne
and
inc
lods
inc
sub
add
sub
inc
add
add
adc
sub
pop
push
sub
and
or
sub
mov
add
mov
mov
adc
shr
pop
shl
das
push
inc
adc
or
ret
sbb
pop
push
fdivrp
jle
and
inc
add
clc
mov
and
add
or
pop
inc
js
xchg
retf
div
push
jne
call
inc
jbe
mov
sbb
in
ds
push
or
outs
leave
jne
mov
add
mov
or
mov
inc
pusha
mov
xchg
dec
ret
(bad)
xlat
std
adc
jge
pop
add
mov
adc
lock
cmp
or
jo
pop
clc
pop
(bad)
inc
(bad)
ds
or
outs
xor
bound
pop
pop
sbb
jo
dec
ss
add
or
lods
pop
test
cdq
mov
jl
or
dec
push
pop
call
and
fsubr
xor
(bad)
mov
bound
push
push
jg
lds
arpl
lock
push
inc
out
ror
mov
pop
mov
outs
push
jp
add
push
or
xor
adc
jne
pop
imul
cmp
or
push
mov
push
hlt
or
xchg
mov
mov
cmps
adc
test
inc
mov
adc
jmp
jae
xchg
sub
outs
fcom
mov
push
lods
fld
pop
or
clc
ret
je
jl
lock
rcr
inc
mov
add
xor
pusha
in
add
mov
aad
into
out
cmp
aas
mov
adc
in
pop
pop
popa
mov
fisttp
push
retf
xor
sub
or
fdiv
add
inc
and
(bad)
fiadd
fdivr
xor
or
jge
daa
lods
in
mov
sbb
dec
lock
adc
jge
push
fisub
inc
or
sbb
dec
imul
cmp
inc
xchg
push
mov
inc
arpl
inc
sub
and
enter
sbb
js
sbb
inc
clc
add
xor
retf
xchg
xor
pushf
adc
pop
stc
push
pop
push
push
pop
rol
mov
outs
loopne
cmp
mov
and
xchg
(bad)
mov
push
test
and
xor
lock
xor
inc
mov
or
inc
adc
or
adc
push
dec
ins
out
out
lea
lock
sub
dec
adc
push
and
sbb
loope
add
add
sbb
test
pop
adc
popa
int3
aas
cmp
add
retf
inc
mul
jmp
push
seto
loopne
add
test
sahf
and
and
rcl
mov
retf
jae
aas
adc
pop
or
and
push
(bad)
sub
das
ins
imul
add
sbb
cmp
and
pop
sub
push
or
call
mov
lock
add
jo
ds
mov
push
push
in
add
(bad)
loopne
cdq
adc
cwde
jmp
cmp
and
jnp
movs
addr16
inc
jo
and
mov
ret
(bad)
fwait
xor
jno
or
add
mov
add
mov
ret
pop
sub
scas
call
js
in
movs
into
push
push
idiv
and
push
mov
test
cdq
and
ja
mov
sub
cmc
push
in
mov
aam
gs
adc
shl
sub
pop
retf
pop
adc
add
add
lock
add
inc
popa
adc
mov
or
mov
mov
pop
std
stos
push
fadd
push
dec
jle
mov
sbb
dec
mov
xchg
je
mov
push
mov
xor
add
push
jmp
add
sub
(bad)
loopne
test
mov
aad
ret
and
inc
repz
dec
push
push
ret
xor
movs
xchg
nop
inc
pop
aam
inc
adc
cld
nop
mov
add
adc
or
loope
push
ja
xchg
jb
fsubr
inc
xchg
mov
inc
popf
fld
cmp
add
fwait
jecxz
mov
int3
push
push
mov
ja
inc
or
js
add
imul
and
fwait
aam
enter
push
or
dec
fadd
push
cld
mov
outs
sub
adc
mov
adc
pop
shl
movs
pop
sti
int
loopne
in
aam
xor
fnstcw
inc
sahf
lock
daa
data16
sub
sbb
or
test
dec
mov
cmp
sub
pop
push
mov
test
adc
sub
inc
or
mov
popf
mov
xchg
fbld
aas
in
xchg
pop
mov
icebp
mov
addr16
add
fild
stos
loopne
mov
mov
outs
ror
pop
mov
dec
hlt
mov
mov
sbb
nop
push
gs
enter
bound
pop
aad
push
gs
mov
imul
call
pop
lahf
push
or
jo
and
mov
pop
dec
add
test
push
jae
mov
push
and
push
sbb
cmp
add
imul
ret
mov
add
adc
jnp
mov
cli
inc
pop
mov
call
xchg
movs
inc
popa
bound
xchg
adc
jns
mov
and
vmptrld
xor
out
inc
or
fmul
or
test
je
add
je
jmp
cmp
dec
sub
rcl
movs
pop
sbb
adc
mov
aaa
add
add
or
es
cmp
cmp
xchg
out
add
inc
ret
push
sub
pop
xor
add
movs
stos
mov
xchg
aas
movs
xor
popf
inc
shl
jno
or
adc
fimul
inc
or
dec
push
jp
or
or
xlat
mov
les
pop
cmps
cmp
inc
push
or
icebp
add
es
in
ins
dec
aas
adc
dec
push
adc
rol
dec
mov
sbb
inc
push
cli
mov
push
ss
mov
push
dec
cli
pop
seta
fisttp
push
outs
xchg
ss
pop
xchg
xor
out
fadd
outs
das
pop
sahf
add
add
pop
mov
or
or
pop
jg
(bad)
imul
dec
pop
mov
or
cmp
sahf
add
push
mov
push
xchg
push
push
dec
outs
dec
adc
add
in
mov
aaa
sbb
jl
mov
test
adc
in
add
push
push
jmp
sbb
sub
sbb
test
jmp
sbb
or
mov
add
cmp
mov
das
pop
adc
push
out
fld
sub
addr16
jns
and
mov
adc
mov
in
xchg
arpl
or
push
mov
and
inc
pop
mov
das
mov
add
imul
and
or
ficom
adc
mov
imul
imul
loopne
mov
mov
adc
outs
rol
inc
pop
inc
(bad)
adc
pop
mov
js
fs
fld
loopne
sar
test
movs
addr16
in
ror
rol
sub
xchg
movs
add
ins
xor
loopne
or
dec
inc
mov
mov
sub
sub
popa
cmp
mov
rsqrtps
mov
(bad)
jno
jno
mov
xchg
jg
or
repnz
dec
adc
cmp
scas
(bad)
push
aam
mov
cmp
js
push
mov
and
add
fadd
pop
popf
test
shl
test
inc
mov
adc
dec
cmp
xor
mov
xchg
push
les
not
and
push
jb
sbb
data16
sbb
adc
clc
add
adc
inc
fnstcw
out
dec
jns
jge
loopne
push
jl
xor
shl
dec
out
add
adc
jns
(bad)
es
jge
loope
das
or
push
inc
mov
sub
and
clc
enter
mov
fidiv
push
push
mov
fiadd
sbb
add
inc
sti
mov
adc
pusha
jge
push
lea
dec
mov
outs
pushf
sbb
mov
sbb
jp
test
outs
pop
jne
pop
ja
push
inc
push
add
aas
push
cmp
adc
shl
arpl
or
leave
aam
lahf
push
test
loopne
push
movs
mov
movs
mov
outs
mov
mov
add
and
imul
movs
inc
adc
xchg
adc
add
and
repz
sub
push
pmulhuw
rcr
xor
jo
ins
jecxz
fdivr
mov
aad
push
jl
sbb
shl
(bad)
ds
push
add
add
xor
add
cmp
ins
or
mov
test
cmp
sub
mov
lods
call
and
leave
mov
mov
inc
xor
les
add
push
add
mov
bound
mov
mov
aam
in
mov
add
mov
add
in
call
mov
fbstp
or
xchg
imul
enter
mov
mov
add
inc
idiv
push
loopne
push
xchg
xchg
push
es
in
lea
add
adc
jl
das
int
cmp
cmp
or
pop
and
cmp
push
sar
xor
push
ret
xchg
jo
hlt
dec
jp
pop
adc
add
inc
inc
jb
dec
xor
lods
push
pop
popa
aaa
adc
inc
sti
xor
mov
pop
add
ret
and
push
sub
add
mov
mov
xchg
(bad)
add
icebp
or
adc
lods
ror
js
cwde
or
mov
sbb
xor
pop
mov
jo
add
cmc
adc
mov
push
dec
sbb
(bad)
xchg
hlt
push
addr16
sub
pop
rol
js
and
push
push
mov
sbb
sub
lods
push
inc
adc
inc
and
ja
inc
sub
mov
push
and
test
sbb
or
jl
addr16
(bad)
aam
add
cmp
popa
and
aas
mov
xchg
mov
push
inc
(bad)
and
sub
aam
inc
push
popa
pop
mov
push
dec
add
inc
inc
inc
mov
add
add
or
fmul
loop
jl
and
add
jp
inc
cmp
ja
ins
and
or
in
dec
mov
les
and
mov
or
ja
inc
push
adc
fcmove
xor
adc
xlat
xor
sbb
adc
inc
xchg
jg
retf
jp
lea
add
clc
and
xor
fwait
push
lea
fcomp
(bad)
in
xchg
and
sar
add
xchg
pop
sub
push
push
push
pop
mov
ins
loopne
mov
sbb
xor
mov
lds
mov
jp
jl
cld
je
inc
out
add
push
pop
and
test
xor
ret
jecxz
(bad)
in
add
jo
clc
mov
jg
lock
xor
sbb
inc
lock
sub
xchg
xor
sub
mov
dec
mov
outs
(bad)
cld
out
add
add
cdq
ret
adc
add
stos
int3
out
jo
xor
jp
shl
xor
lock
fdiv
nop
jg
mov
lock
mov
sar
jecxz
inc
inc
(bad)
xor
dec
ret
or
xchg
scas
add
(bad)
fnstcw
mov
sub
push
xor
jne
dec
js
clc
adc
add
movs
loopne
pop
pop
inc
dec
(bad)
xor
rcl
fiadd
ins
fwait
mov
xchg
fadd
dec
push
enter
dec
mov
xchg
push
or
xor
inc
push
pop
(bad)
in
pop
jbe
dec
adc
pop
mov
cmp
or
adc
rcr
jle
jmp
dec
in
mov
dec
call
dec
std
sbb
mov
pusha
inc
add
les
cwde
or
push
ja
or
imul
push
xchg
and
loopne
push
fsubr
in
xchg
gs
adc
mov
push
mov
add
adc
lock
mov
dec
nop
mov
pop
sti
inc
and
popf
pusha
ins
fidiv
arpl
inc
push
xor
push
nop
push
jmp
mov
cmp
cmp
push
and
and
mov
adc
push
test
test
and
cmp
jno
je
jno
lea
mov
imul
ins
and
pop
sub
push
inc
xchg
aam
inc
xchg
clc
and
pop
rol
ffreep
push
xor
mov
adc
push
mov
push
sti
add
fadd
fimul
inc
lods
xchg
sbb
data16
inc
sub
icebp
mov
(bad)
sub
mov
pop
test
add
into
retf
sbb
and
cmp
les
rcl
inc
scas
push
inc
into
add
sub
cmp
add
pop
out
push
push
stos
test
inc
movs
xlat
dec
in
push
rcr
sub
mov
push
inc
inc
add
mov
cmc
or
ret
test
test
aas
sub
jmp
loopne
(bad)
loopne
pushf
cmp
rol
inc
or
je
fcom
inc
jmp
fimul
repz
stos
pop
add
adc
push
push
and
and
or
(bad)
sbb
mov
push
add
jp
add
daa
mov
mov
rol
inc
and
mov
inc
xchg
je
push
ret
inc
shl
and
sbb
xor
test
pop
ss
aad
loopne
shl
mov
adc
pusha
inc
push
dec
add
or
mov
xchg
push
cmp
mov
loopne
xor
mov
loopne
dec
pop
mov
mov
sbb
xor
jmp
and
sub
rcr
ja
jns
fild
sub
add
or
or
cmp
retf
pop
or
test
jb
aaa
xor
adc
jmp
shl
jae
mov
ins
jo
push
gs
outs
xlat
adc
push
or
popa
je
push
popa
sub
mov
sbb
sbb
push
xor
out
sbb
rcr
mov
pop
inc
dec
xchg
fistp
stos
call
dec
push
add
fmul
pop
mov
jae
rcl
sbb
(bad)
xchg
add
ret
lods
add
cwde
sbb
aam
adc
adc
mov
jae
loopne
pop
push
test
mov
add
xchg
fwait
add
jnp
lods
add
add
outs
mov
cmp
dec
add
clc
xchg
add
mov
test
jle
jo
mov
mov
pop
adc
mov
pop
dec
add
fcom
dec
aas
inc
push
sub
add
or
sbb
lock
data16
dec
add
push
sbb
adc
retf
adc
pop
out
dec
add
out
es
push
add
shrd
(bad)
fdivr
rol
xchg
enter
out
xchg
fs
sub
sub
inc
out
icebp
outs
mov
push
jb
jo
sar
sub
push
jnp
mov
push
test
iret
sub
push
outs
jae
xor
gs
lahf
shl
adc
outs
xor
(bad)
bound
add
mov
mov
mov
or
clc
outs
nop
push
lods
adc
imul
push
ss
pop
aaa
je
hlt
cmps
adc
pop
sub
pop
xchg
cmps
push
fcmovu
adc
movs
xchg
rcl
xchg
add
add
mov
out
adc
and
jmp
sub
aas
clc
xchg
popf
fucomi
ror
jl
icebp
xor
loope
fnsave
pop
pop
sbb
push
add
aam
js
movs
imul
add
adc
or
pop
xor
add
adc
mov
add
jb
jns
xchg
adc
adc
push
adc
jo
mov
push
cdq
rcl
aaa
lods
xor
pop
add
xor
into
fs
fwait
dec
loopne
dec
sbb
or
jo
push
jl
push
adc
mov
sbb
(bad)
(bad)
cmp
retf
jo
mov
ror
iret
sbb
lahf
fcomp
xor
call
or
add
in
sbb
pusha
enter
call
pop
add
cmp
push
addr16
cmp
mov
call
dec
cmps
or
ud0
xor
adc
and
add
dec
pusha
adc
sub
movs
js
and
or
push
or
loop
dec
cdq
and
or
add
or
in
pop
in
add
fidiv
add
aam
iret
fild
daa
add
sbb
dec
or
leave
call
jmp
mov
sub
inc
pop
inc
add
inc
adc
xor
sub
jmp
int3
adc
or
jmp
inc
push
and
pusha
push
cdq
test
jmp
push
add
or
cmp
add
es
nop
add
sbb
(bad)
call
enter
jno
adc
inc
fnsave
test
inc
sbb
or
adc
call
inc
xor
xchg
xor
popf
rol
cmps
push
or
mov
add
leave
loopne
es
push
dec
imul
mov
rol
jae
call
sbb
nop
mov
jbe
adc
mov
(bad)
fmul
xor
das
add
stos
or
push
xor
rcl
(bad)
cmp
or
cmp
mov
call
cmps
or
or
cs
adc
or
ror
ds
mov
sti
hlt
add
mov
fs
in
sbb
fs
aam
push
mov
in
mov
xlat
jmp
mov
fs
in
lock
fs
jb
mov
sbb
fs
add
cli
mov
inc
loopne
in
in
call
in
hlt
clc
cld
add
pop
mov
sbb
and
lods
cmp
fst
lods
add
test
add
push
push
adc
adc
loop
pop
dec
pop
in
stc
and
lahf
inc
or
sub
sbb
dec
lock
and
lahf
call
sbb
or
sub
call
push
adc
pop
push
or
shl
push
add
pop
push
jmp
nop
pmuludq
adc
js
popf
adc
sahf
mov
jo
add
addr16
dec
push
dec
add
pop
out
inc
add
stos
or
mov
push
mov
ja
dec
add
pusha
inc
add
adc
mov
fld
jo
mov
sub
add
ja
and
and
mov
outs
or
loopne
mov
inc
dec
in
loopne
ins
in
popa
dec
ror
fld
mov
pop
xchg
pop
push
sub
add
and
pop
adc
aam
pusha
mov
jno
test
and
or
lock
push
add
push
fiadd
ins
cwde
add
push
rcl
dec
arpl
and
xor
jg
add
iret
mov
inc
icebp
lock
(bad)
aaa
cmp
add
jge
mov
shr
adc
fimul
add
xchg
adc
ins
fdiv
fimul
fucomi
mov
fmul
xchg
das
inc
setge
(bad)
out
pop
adc
cmp
test
imul
pushf
rcl
jo
mov
scas
in
fdiv
xor
jmp
push
scas
stc
ficomp
pusha
push
mov
fadd
inc
pop
and
push
mov
out
jns
mov
dec
je
push
xor
ret
or
(bad)
add
mov
ss
out
lods
mov
and
mov
mov
enter
jecxz
dec
imul
(bad)
std
fisub
sbb
bound
jb
pusha
add
test
jne
pop
aas
adc
add
jno
sysret
xchg
pop
xor
pop
sub
gs
xchg
cmps
or
dec
adc
dec
and
add
les
push
cmps
push
or
cmp
push
movs
and
mov
fild
pop
push
adc
or
inc
ins
ins
ret
dec
xor
mov
or
add
cwde
push
cmp
fcomp
dec
or
add
mov
add
sub
or
add
or
adc
in
or
mov
pusha
adc
cmps
xchg
arpl
and
push
mov
sub
sub
and
cmp
add
outs
retf
or
cmp
cmp
dec
nop
cmps
fild
in
or
test
or
add
call
addr16
adc
or
or
sbb
mov
lods
sbb
jne
inc
sbb
and
mov
dec
in
inc
test
pop
ror
in
pushf
(bad)
lods
nop
dec
dec
and
add
jge
sub
push
fild
adc
dec
dec
dec
xchg
inc
sbb
adc
adc
adc
add
adc
or
fwait
addr16
add
or
add
sahf
(bad)
xor
out
invd
xor
shl
cmp
add
adc
out
rcr
jmp
pop
add
movs
adc
fadd
xchg
cmps
adc
sub
inc
adc
in
pop
xlat
sbb
call
adc
les
sbb
or
mov
nop
sub
sbb
or
mov
sbb
adc
aam
push
add
dec
and
adc
or
add
and
add
popa
pop
xor
enter
sub
inc
nop
pop
add
xor
xchg
es
push
sub
aam
fs
imul
ror
cmp
mov
mov
inc
jno
das
(bad)
fcom
daa
inc
mov
lea
mov
sub
or
aam
bound
dec
dec
sub
or
sub
lods
outs
or
mov
call
dec
dec
pop
push
push
adc
adc
or
xor
add
inc
cs
repnz
inc
das
xor
and
fdiv
nop
mov
add
adc
scas
sub
aaa
add
add
cmp
scas
outs
icebp
cmp
xor
nop
pop
cmp
icebp
and
add
and
leave
push
jb
inc
inc
cmps
push
and
pop
or
inc
add
mov
sbb
cmp
inc
loopne
add
mov
inc
xchg
or
ja
ja
push
mov
inc
or
cmp
inc
add
push
adc
cmps
(bad)
xor
pop
pusha
add
add
adc
mov
sbb
jmp
dec
dec
sbb
dec
jecxz
or
add
call
fwait
or
mov
pushf
mov
lahf
pop
mov
sub
cdq
mov
fdivrp
and
mov
mov
jb
xor
add
xor
jl
retf
xor
adc
cmp
xor
mov
xor
xor
inc
imul
xchg
sbb
cdq
or
mov
stc
sbb
sbb
mov
sbb
movs
sub
sub
data16
ret
loopne
sbb
add
push
cwde
test
or
mov
aas
cmp
bound
shl
push
add
jle
inc
iret
shr
test
xchg
mov
inc
sahf
mov
and
jl
sbb
cwde
and
and
test
sbb
sub
es
daa
xchg
sbb
aam
enter
rol
add
inc
or
test
inc
popf
lods
add
add
push
popa
lods
add
or
adc
mov
add
add
test
fld
cmp
loopne
cmp
arpl
inc
add
divps
cmp
sub
push
pop
cmp
sub
dec
test
and
push
jmp
fild
test
daa
sbb
ss
add
pop
fld
cmc
nop
push
xor
mov
ds
or
add
xor
and
pop
add
sub
cs
mov
jno
aam
or
in
test
pop
adc
and
pop
js
dec
fs
out
pop
adc
and
add
out
pop
and
adc
push
movs
sbb
xchg
or
sbb
leave
add
sbb
push
pop
leave
push
jb
and
sbb
and
or
xchg
dec
and
dec
xchg
inc
add
add
and
cdq
add
add
add
or
sub
jmp
(bad)
das
adc
xor
call
sub
add
mov
xchg
xor
adc
ret
xor
add
add
scas
pushf
scas
lods
pop
push
or
ss
dec
sbb
jmp
or
and
sub
cmp
stos
shl
xchg
jmp
mov
dec
cs
cmps
xchg
stos
in
aas
inc
sub
cmps
xchg
mov
mov
inc
add
add
cmps
xchg
add
inc
push
inc
dec
lods
xchg
push
or
stos
imul
je
mov
call
dec
jb
sbb
sbb
mov
sbb
ins
(bad)
and
and
mov
clc
sbb
and
xchg
scas
cmp
and
hlt
sbb
int3
or
mov
dec
imul
test
mov
mov
or
inc
inc
lods
shl
sbb
inc
or
sbb
movs
leave
out
adc
cmp
scas
sub
push
mov
lea
sbb
xor
mov
adc
test
repnz
mov
(bad)
pushf
sub
add
push
shr
in
sub
add
xor
gs
adc
xchg
pop
das
test
jbe
int3
cmc
mov
outs
cmp
arpl
scas
mov
aaa
push
push
add
sbb
dec
or
inc
add
mov
sbb
push
xchg
inc
mov
sub
push
and
cmovo
dec
mov
or
or
pop
adc
xchg
bound
sub
inc
jns
sub
jae
sub
sbb
cmp
add
jle
cmps
adc
add
mov
push
push
aad
push
xchg
sub
popf
(bad)
fs
arpl
or
jecxz
pushf
add
inc
cmp
or
jno
shr
add
push
imul
or
add
push
add
repz
jne
fst
pop
out
idiv
adc
mov
ret
das
leave
mov
push
inc
and
shr
push
js
shr
adc
inc
push
or
jecxz
shr
outs
and
cmp
mov
inc
je
add
clc
add
adc
gs
push
jnp
adc
adc
jae
adc
adc
pop
dec
or
push
ins
std
add
pop
xchg
inc
sar
and
push
add
test
xadd
call
sub
add
or
or
sbb
pushf
pop
sbb
add
call
push
out
mov
fisub
push
ins
add
xchg
fld
lahf
or
xchg
call
sbb
xor
jno
mov
mov
pop
loopne
hlt
das
cli
mov
push
or
sbb
dec
dec
sub
adc
push
add
mov
out
pop
xor
mov
push
jbe
sbb
stos
pop
outs
xchg
jnp
jmp
mov
dec
push
or
jae
js
xchg
out
rcr
push
test
mov
and
xchg
mov
jns
out
push
xor
push
pop
popf
aam
fs
xchg
shl
add
pop
sbb
cmp
dec
lahf
das
cvtpi2ps
push
ss
adc
add
das
out
test
movs
add
jmp
adc
gs
add
inc
mov
sub
inc
dec
shl
lock
inc
jnp
movs
inc
inc
stc
and
adc
inc
or
xchg
xchg
push
adc
gs
sbb
mov
gs
imul
stos
cwde
or
loopne
(bad)
test
(bad)
and
jne
mov
cmc
xor
sbb
add
or
test
jae
pop
add
and
inc
adc
xor
and
arpl
loope
add
rcl
xor
jbe
aam
(bad)
nop
add
mov
pop
call
cmp
cmp
cmp
fsubrp
(bad)
jne
les
adc
adc
cmp
xor
push
mov
pop
cmp
mov
or
sub
sub
xchg
or
js
add
adc
int
test
jle
sar
or
ins
mov
push
hlt
cmp
xor
jns
je
loopne
je
sbb
sbb
mov
rcl
movaps
ins
mov
pop
mov
mov
dec
adc
sbb
aaa
sub
sbb
push
ins
aas
pop
and
or
push
mov
adc
or
or
fs
aad
les
fs
jae
mov
in
lds
pop
(bad)
mov
pop
inc
mov
outs
sub
call
cmps
add
fnstcw
cwde
push
pushf
ja
push
stos
cmc
out
call
inc
inc
in
mov
or
add
icebp
mov
sub
mov
adc
push
or
dec
mov
cmc
jne
ja
frstor
xchg
ret
ret
test
mov
and
cmp
or
pop
inc
jnp
mov
ret
sbb
push
jne
ja
pusha
xor
in
pop
mov
call
sbb
shl
adc
out
mov
jmp
ss
adc
in
add
add
shr
enter
shl
dec
xor
jae
cmp
pop
cmp
inc
mov
stc
test
mov
add
mov
add
push
dec
ret
cmp
inc
repnz
lldt
leave
and
add
add
inc
adc
(bad)
push
xchg
xor
adc
pop
or
or
add
push
adc
push
leave
mov
add
in
sbb
sbb
sbb
jg
cmp
repnz
pop
jo
arpl
mov
add
add
add
add
repnz
jmp
add
jo
add
add
daa
or
add
sub
sub
das
mov
add
add
add
dec
pop
adc
das
add
add
mov
or
pop
add
xor
fs
adc
mov
xchg
imul
inc
xor
pusha
and
dec
scas
xchg
aaa
cmp
push
repnz
add
mov
xchg
jb
or
push
leave
aas
inc
inc
or
or
inc
inc
sbb
sbb
inc
inc
xor
cmp
xor
dec
and
jb
xor
lods
(bad)
cmp
jb
xor
sbb
cmp
xor
xor
enter
add
enter
jecxz
retf
enter
js
addr16
enter
retf
add
and
mov
arpl
and
int3
sub
jp
and
and
int3
scas
or
mov
or
mov
xchg
pop
mov
xor
mov
mov
nop
sar
mov
mov
mov
push
addr16
cmp
arpl
outs
arpl
push
mov
out
stos
adc
jns
pop
aaa
pop
fcom
rol
dec
addr16
mov
push
inc
fdivr
xchg
enter
scas
cmp
add
aas
jne
adc
scas
jo
pop
and
inc
push
ds
lock
cs
inc
popa
std
data16
in
in
inc
add
push
sub
sub
mov
adc
push
fcom
loopne
cli
push
cdq
push
aam
cmp
or
jge
addr16
ins
es
or
sub
mov
shl
out
push
or
dec
push
push
push
fsubr
mov
jns
fistp
or
xor
jecxz
mov
xchg
mov
pop
add
fs
inc
xchg
inc
adc
scas
imul
sbb
clts
(bad)
(bad)
fimul
and
mov
sbb
cmc
fild
xor
inc
mov
adc
ins
mov
inc
or
adc
leave
mov
add
dec
or
pop
adc
adc
test
cmc
push
fst
cld
pop
sbb
cmp
adc
dec
sbb
sub
pop
add
adc
xor
pop
sbb
rol
sbb
mov
sbb
mov
ins
sub
dec
or
pusha
mov
and
and
mov
adc
les
pop
adc
sub
sbb
repnz
add
adc
sub
leave
add
xor
push
jb
das
xor
xor
xchg
test
sub
xchg
push
inc
xchg
cmp
inc
push
cmp
cdq
dec
push
cmp
sbb
and
cmp
sbb
cdq
mov
pop
or
add
iret
or
and
(bad)
repnz
xchg
or
xor
push
xchg
cmp
cld
sub
out
or
jns
shl
mov
call
inc
push
and
and
mov
and
popa
or
mov
xor
sti
adc
ins
xchg
and
fisttp
leave
dec
inc
add
loopne
iret
loopne
not
and
es
push
sub
mov
add
inc
and
inc
mov
adc
loopne
jle
inc
inc
dec
mov
add
adc
retf
pop
and
test
cmp
sbb
loopne
call
out
inc
fmul
or
push
fnstsw
shl
jo
in
xchg
pushf
dec
dec
mov
pop
or
mov
bound
mov
aas
pop
mov
push
xor
add
bound
inc
mov
pop
mov
adc
add
add
mov
push
jb
adc
push
repz
push
mov
and
inc
enter
dec
and
sbb
ins
inc
daa
add
mov
pop
adc
or
inc
add
pop
leave
push
jb
xor
xchg
dec
and
enter
enter
cmp
leave
add
add
cmp
add
push
cmp
and
add
loopne
loope
mov
scas
pop
or
mov
loop
xor
mov
xor
xor
xor
jb
pop
test
add
mov
enter
dec
ins
mov
shl
push
in
enter
push
add
enter
dec
and
jbe
and
out
or
gs
mov
outs
add
jmp
jle
adc
retf
pop
sbb
inc
dec
fild
pop
add
stos
or
and
or
aas
rcl
mov
call
or
shl
xor
ins
xchg
and
fsub
or
push
mov
ds
jmp
xchg
jmp
xlat
in
adc
mov
mov
cmovle
pop
rcl
dec
daa
push
les
loopne
pop
push
dec
popa
ss
push
loopne
add
xchg
push
pop
inc
daa
cdq
or
les
imul
inc
dec
imul
adc
cld
jae
cwde
dec
pushf
cmp
dec
inc
popa
pop
lock
je
outs
fist
dec
je
xor
push
ins
popa
ins
ins
mov
xchg
xor
nop
mov
gs
cmp
push
mov
arpl
push
in
push
inc
and
pop
sbb
les
scas
jmp
push
dec
pop
sub
push
sub
ja
pushf
int3
rol
xchg
inc
hlt
ss
mov
lods
in
or
add
sbb
add
popa
ins
jae
or
dec
and
or
outs
sbb
sbb
mov
pop
cmp
fnstenv
xchg
fist
stos
push
jo
out
dec
cs
adc
nop
or
mov
inc
es
add
adc
mov
push
nop
mov
fadd
jge
mov
dec
adc
mov
xchg
dec
sbb
dec
sub
xor
outs
(bad)
jl
mov
(bad)
cwde
fs
loopne
ficom
movs
cmc
jmp
cmp
mov
dec
dec
xchg
or
sbb
jmp
push
inc
pop
call
mov
cmp
fsubr
xchg
mov
movs
add
inc
scas
and
call
sub
mov
or
popa
daa
and
push
xor
pop
push
add
mov
jg
jb
lea
add
and
sub
cs
dec
and
xor
or
xor
pop
and
xor
push
lea
popa
sbb
data16
or
adc
nop
add
dec
fmul
add
in
mov
sub
sub
icebp
adc
sbb
sbb
push
jnp
mov
push
push
sbb
add
dec
sub
mov
mov
push
js
mov
icebp
mov
cdq
add
add
xor
xor
sbb
jo
dec
ret
hlt
ja
lods
inc
js
idiv
add
mov
js
pushf
cmp
and
dec
rcl
sbb
add
ins
and
jne
sub
cld
clc
dec
pop
and
lock
rep
outs
imul
ins
mov
jle
inc
inc
adc
dec
jl
retf
cmc
pop
ds
test
psubusb
mov
or
or
push
and
cdq
scas
xchg
sub
dec
add
add
aas
popf
push
push
pop
pop
mov
inc
and
pop
sbb
dec
pop
test
movs
or
(bad)
js
mov
ins
sbb
dec
inc
(bad)
jl
add
inc
jo
packsswb
ret
aam
pop
or
pushf
mov
js
cmp
les
shl
mov
cmps
adc
movs
call
jo
lahf
push
mov
cwde
loopne
jl
push
in
les
sub
jbe
es
add
cmc
sub
inc
aam
sbb
test
or
sub
adc
jo
cwde
addr16
sub
or
cdq
xchg
outs
pusha
sub
inc
adc
xor
mov
inc
inc
call
jecxz
cmp
inc
sub
sub
add
xchg
outs
aas
and
or
mov
add
fiadd
aam
in
ja
jl
cld
push
sbb
arpl
push
xlat
ins
pop
shr
mov
mov
adc
sub
nop
rcl
cmp
pop
test
je
adc
nop
inc
rol
cmp
popf
cld
clc
test
cmp
hlt
loopne
jnp
push
loope
mov
pop
or
cdq
lods
fwait
dec
add
cmp
mov
xlat
sbb
pop
mov
jns
mov
ret
and
xchg
xlat
jo
jno
pop
xchg
jbe
call
mov
push
ins
into
imul
adc
and
or
add
add
adc
icebp
jge
in
mov
ins
mov
add
rcr
and
mov
xlat
sti
pop
in
repnz
cli
push
in
sbb
les
push
add
(bad)
push
nop
push
pushf
lods
sbb
test
mov
dec
ds
mov
cmp
scas
mov
adc
sub
mov
jo
adc
sti
sbb
pop
dec
sti
popf
nop
inc
or
pop
mov
push
pop
sar
out
push
pushf
loopne
mov
adc
sahf
xchg
xor
lahf
loopne
shr
xchg
push
inc
sbb
je
ins
pop
nop
inc
bound
pusha
ja
js
xchg
int
add
pop
or
add
test
xchg
sub
gs
or
int
ret
xlat
ja
or
dec
mov
jo
ins
pusha
scas
or
out
cmp
and
pusha
es
pushf
bound
cmp
push
adc
in
pushf
xor
ins
fdivr
test
mov
cmps
pop
lahf
sar
mov
add
inc
(bad)
loop
out
cmp
rol
hlt
shl
sbb
aaa
add
jnp
inc
add
add
cmp
mov
loop
movs
push
fs
add
and
add
pop
add
jl
neg
dec
xchg
or
cmp
adc
sbb
dec
vpsubb
test
pop
jne
loope
mov
(bad)
fsub
adc
call
or
push
or
repz
ret
(bad)
jl
mov
mov
add
sub
xor
test
jmp
dec
and
sbb
pop
movs
jo
push
fimul
push
ins
dec
aaa
(bad)
mov
xor
mov
xchg
inc
push
pop
push
mov
push
ror
dec
add
push
push
je
mov
cwde
fidivr
mov
mov
push
mov
push
push
pop
mov
scas
mov
inc
es
sbb
pushf
xchg
push
xchg
push
cld
int
mov
pushf
jle
xchg
push
pusha
push
mov
xchg
sbb
fild
and
xor
xchg
rcl
scas
call
test
xor
sbb
pop
ror
(bad)
retf
sbb
lock
and
test
(bad)
or
call
and
push
loope
mov
xor
ret
xchg
sbb
inc
add
popf
push
ins
add
lock
imul
add
inc
mov
outs
pop
pop
mov
sbb
inc
cmc
ret
and
push
xchg
mov
mov
mov
loope
sbb
in
sbb
mov
push
mov
ja
add
pop
cmp
dec
xchg
or
push
or
test
and
push
and
add
inc
les
inc
add
int3
push
or
or
mov
lods
shl
xchg
into
mov
add
mov
xor
xor
mov
int
movs
xchg
mov
or
fcom
and
js
push
sub
dec
sar
lea
pop
mov
xlat
ret
or
dec
jmp
cli
add
push
and
test
add
and
add
xchg
dec
dec
add
fisubr
inc
push
and
sub
push
jno
pop
outs
jo
push
sti
ret
mov
test
dec
inc
push
add
push
pusha
loope
ret
dec
sbb
sub
icebp
jmp
fs
sub
mov
push
retf
ss
mov
mov
jne
jns
jmp
cmp
jne
jae
sbb
or
fistp
mov
je
inc
xchg
lock
push
xchg
mov
pop
enter
rol
movs
sti
push
mov
sub
mov
mov
push
cld
pop
and
movzx
mov
aaa
push
imul
xor
stos
jae
add
add
loopne
add
sbb
inc
cmp
pop
js
adc
or
sbb
mov
pop
sbb
les
inc
sbb
popf
call
jl
lock
test
dec
push
adc
adc
js
setg
pop
mov
lock
pop
sbb
arpl
xor
push
retf
cmp
inc
add
xor
iret
sbb
sbb
mov
ds
jns
inc
pop
pushf
adc
cmp
lds
sbb
cmp
clc
add
test
mov
fisubr
xor
js
push
push
push
push
adc
xchg
and
or
outs
add
push
or
outs
and
jnp
cmp
sbb
add
outs
fisub
add
jecxz
cmc
adc
mov
adc
fsubr
das
or
jg
call
add
add
fild
dec
inc
dec
mov
call
test
cmp
mov
push
dec
clc
dec
or
push
out
loopne
inc
sbb
je
ret
adc
into
inc
in
ret
test
outs
jne
lea
or
push
jmp
mov
lods
or
pop
mov
dec
jmp
mov
inc
jp
jl
lahf
mov
iret
inc
and
or
xor
add
pusha
push
dec
xor
adc
mov
ins
mov
test
xchg
pop
add
sub
rol
xor
lea
in
cs
jmp
sub
xchg
mov
xchg
add
jge
bound
loope
aad
(bad)
mov
xlat
movs
jmp
cmp
fstp
ja
mov
mov
and
or
mov
js
xchg
pop
adc
inc
xor
inc
arpl
leave
fwait
jns
and
inc
push
mov
lds
and
in
out
pop
shl
mov
add
mov
or
xchg
(bad)
cs
add
fsubr
outs
inc
fistp
push
jno
popf
mov
idiv
aas
arpl
xor
mov
test
rcl
outs
cmovnp
daa
cmp
out
je
mov
mov
push
cmp
std
mov
xchg
and
cs
mov
sbb
or
xor
clc
xchg
mov
sbb
add
les
int3
xchg
sub
xchg
int3
fdivr
xchg
(bad)
xchg
(bad)
icebp
les
jge
sub
aaa
dec
retf
loopne
jbe
cmp
div
adc
test
shr
mov
xor
bound
cdq
hlt
adc
inc
mov
xchg
call
mov
pop
dec
or
mov
push
mov
inc
hlt
adc
add
imul
push
or
shr
and
adc
dec
sbb
adc
cmp
mov
movs
or
pop
icebp
adc
icebp
mov
mov
in
(bad)
lock
inc
sub
xor
and
cmp
std
jmp
mov
scas
add
xor
test
clc
lods
mov
(bad)
push
ins
or
sbb
or
pop
mov
pushf
adc
or
movs
mov
mov
mov
fild
push
add
push
fidiv
fild
pop
je
sbb
pop
sub
arpl
cmc
adc
mov
leave
push
ja
adc
popa
jbe
aaa
cmp
punpcklbw
imul
sub
and
dec
cmp
push
out
or
bt
arpl
mov
xchg
or
cmps
cmp
lea
cmovp
(bad)
mov
push
xchg
or
cmp
sbb
mov
mov
test
push
loopne
clc
pop
pop
iret
mov
adc
cs
mov
daa
adc
sbb
mov
imul
loopne
add
inc
and
sub
add
and
dec
mov
imul
mov
mov
test
add
add
add
add
repnz
xor
ss
xor
dec
(bad)
pop
mov
xchg
sub
inc
inc
pop
or
push
pop
push
dec
icebp
outs
movs
dec
enter
mov
mov
sub
je
jb
inc
xchg
add
(bad)
mov
xchg
cld
inc
(bad)
stos
popf
pop
jmp
arpl
sbb
iret
cmp
cmp
sbb
jmp
xchg
mov
iret
dec
cmps
in
push
xlat
adc
(bad)
xchg
adc
sub
pusha
jns
clc
mov
cmp
xor
mov
iret
inc
jl
dec
cmps
mov
iret
jmp
cmp
ret
je
mov
xor
or
jl
jl
sbb
sub
inc
add
bound
xchg
lock
add
push
push
mov
lahf
xchg
mov
outs
dec
sub
push
and
xchg
rol
fimul
cwde
pop
mov
mov
jo
xor
push
movs
push
inc
cmp
lea
sub
sahf
push
adc
fmul
dec
(bad)
loopne
ja
adc
add
dec
jmp
push
sar
mov
test
cmp
xchg
add
clc
pop
add
inc
and
pusha
outs
push
jno
inc
mov
adc
lock
mov
test
cmp
pop
clc
jl
loopne
fistp
rol
cmp
add
in
mov
mov
sbb
dec
sbb
inc
mov
add
inc
or
retf
arpl
adc
jb
sub
pop
pop
push
lea
leave
mov
xchg
cmp
adc
dec
and
dec
xor
fcmovnbe
shr
lods
ret
int3
loope
out
pop
pusha
addr16
cmp
je
or
mov
cmp
mov
inc
cmps
add
loopne
leave
hlt
shl
or
sub
(bad)
mov
pusha
jg
add
xchg
test
pushf
mov
stos
loopne
jne
test
sbb
jb
sub
xor
clc
fiadd
data16
mov
dec
xchg
cmps
icebp
data16
cmp
mov
cmp
jg
rcl
mov
or
push
dec
inc
fistp
inc
or
push
add
sub
mov
add
cld
fisubr
jne
lahf
jmp
aaa
lock
mov
inc
test
in
pop
mov
cmp
xchg
xchg
retf
leave
(bad)
(bad)
adc
add
or
cs
ret
movs
pop
(bad)
sub
sahf
push
inc
cs
bound
jbe
cld
out
mov
and
fs
xor
cmp
and
fcomp
dec
int3
data16
add
cmp
pop
xchg
mov
xor
lock
or
lock
mov
pop
push
push
adc
adc
mov
fldenv
ja
inc
test
sub
dec
aas
lock
daa
retf
xchg
rol
sbb
adc
xor
shl
or
xchg
adc
sbb
xor
or
or
xchg
add
or
rcl
rol
clc
enter
xchg
and
mov
push
or
add
inc
sbb
pop
fimul
jne
daa
lock
push
sbb
mov
loopne
lods
ret
mov
jmp
popa
adc
add
mov
xor
loop
lock
sar
push
aaa
sti
(bad)
call
call
push
xor
(bad)
fbld
stos
dec
daa
mov
pop
jl
dec
fwait
add
shl
inc
pop
int
add
add
ins
mov
sbb
pop
mov
lea
add
and
push
test
xchg
mov
fild
add
push
add
retf
or
test
adc
sub
and
int
sub
pushf
outs
mov
movs
and
and
mov
and
adc
mov
inc
cmps
gs
movs
sbb
pusha
add
and
(bad)
or
push
imul
add
mov
call
mov
inc
fmul
xchg
cld
add
inc
add
xor
xor
or
loop
push
repz
mov
lea
and
sbb
pop
outs
pop
mov
ror
stc
test
mov
adc
sbb
pop
arpl
xor
lahf
outs
in
lea
adc
enter
nop
mov
dec
(bad)
cld
cmp
sub
mov
or
push
mov
sbb
push
push
mov
fistp
jnp
cdq
xor
mov
jmp
sbb
mov
dec
inc
(bad)
push
jp
jno
jbe
xchg
movs
aas
pop
pop
icebp
loopne
or
add
push
sbb
(bad)
fwait
xor
retf
sbb
sbb
sbb
jmp
add
(bad)
adc
sub
push
pusha
(bad)
loop
push
and
sbb
pop
pop
inc
mov
xor
sti
mov
add
cmp
xor
xor
jae
jg
hlt
hlt
cmp
jmp
mov
and
pop
fisttp
(bad)
pop
mov
into
stos
sbb
pop
fsubr
add
mov
ja
ret
add
sti
add
ret
mov
add
imul
xchg
adc
nop
jecxz
ins
xchg
nop
or
push
loopne
nop
scas
push
je
sub
out
pusha
in
push
xchg
inc
jmp
sbb
add
add
mov
daa
jo
push
ins
dec
div
jne
mov
outs
add
mov
dec
je
mov
push
add
add
add
enter
lods
mov
mov
jno
mov
or
out
add
push
hlt
add
inc
pop
adc
pushf
add
inc
add
and
inc
pop
dec
xlat
pop
fbstp
sbb
sbb
les
retf
popa
fiadd
pop
push
sbb
jne
pop
outs
sub
js
hlt
or
add
mov
sbb
push
xchg
cmp
xchg
mov
jp
add
stos
add
mov
sub
and
repz
xchg
pop
mov
ret
jns
add
adc
ror
cmp
add
add
std
push
mov
mov
mov
bound
and
daa
mov
call
lods
pop
mov
sub
retf
inc
cmp
or
jno
adc
add
dec
pop
jne
and
sbb
or
daa
xor
mov
sti
aam
dec
push
or
sub
pop
cdq
mov
dec
push
dec
(bad)
adc
or
mov
adc
sbb
sub
xchg
or
add
mov
sub
adc
dec
mov
idiv
sbb
imul
aas
inc
aad
xor
add
mov
mov
xor
push
clc
fs
cmp
rol
sub
shr
or
cmp
or
inc
sub
lock
sti
inc
push
push
dec
push
push
inc
shl
shl
adc
aaa
push
push
imul
sti
loope
les
push
dec
jne
test
jg
cmp
mov
mov
les
push
xchg
xor
inc
cmp
inc
xor
les
and
sub
mov
and
inc
aaa
rol
push
ret
dec
mov
push
sbb
popa
pop
daa
shl
scas
xchg
and
test
sbb
sbb
and
adc
inc
ret
fisub
bound
mov
pop
imul
pop
ret
add
xchg
push
arpl
(bad)
push
add
adc
and
fwait
aaa
aas
int3
inc
xor
push
push
push
int3
inc
int
shl
fwait
and
pop
fadd
pop
pop
pop
ret
scas
or
mov
scas
pop
out
or
fwait
sub
bound
inc
cmp
jge
inc
ss
jno
loop
(bad)
push
dec
push
dec
mov
sub
adc
in
or
add
popf
sbb
aad
push
sub
push
aam
xlat
jo
cmp
cmp
outs
add
std
push
ret
test
mov
cmc
xchg
nop
shr
test
push
push
or
sbb
add
xchg
jp
test
mov
or
mov
jb
outs
and
add
fild
rol
call
hlt
xchg
and
sar
sbb
dec
loopne
aas
loop
xor
or
loopne
lods
adc
mov
cld
pushf
and
int3
(bad)
push
js
sub
sub
pop
fidiv
clc
jne
xor
fs
mov
xor
or
aam
inc
and
shl
adc
mov
popf
push
add
add
adc
ror
test
add
and
into
sub
jo
mov
mov
adc
rol
adc
add
or
pop
sbb
fisttp
push
ja
sub
sub
rol
pop
ja
cmp
jno
es
pop
test
mov
add
and
movaps
push
or
adc
or
test
mov
push
sbb
or
cmp
adc
fs
xor
adc
jmp
inc
mov
or
int3
fwait
add
imul
(bad)
retf
mov
mov
push
push
jmp
retf
add
and
repz
clc
sub
fcomip
lahf
in
sbb
sub
dec
ret
push
enter
sub
adc
jg
add
fbstp
push
mov
push
inc
mov
addr16
inc
mov
pop
jmp
pop
lods
fsub
lods
daa
lods
lds
ja
dec
jl
mov
dec
or
fadd
jbe
std
and
add
sti
mov
(bad)
jae
or
je
or
xor
or
inc
pop
sub
pop
xlat
cdq
sub
adc
fsub
inc
push
push
sub
dec
and
outs
test
pusha
add
or
xor
and
mov
(bad)
dec
loope
jbe
and
std
jbe
adc
dec
loop
add
adc
xlat
pop
add
mov
xchg
inc
add
inc
mov
add
pop
xor
push
mov
sti
fsub
lahf
inc
mov
push
jno
mov
xchg
loope
test
in
inc
xchg
push
test
add
pop
ffree
xchg
push
or
jmp
mov
inc
mov
sbb
push
xor
push
or
daa
add
xor
loopne
or
jne
ins
adc
pslld
jmp
popa
inc
xor
adc
jb
mov
add
fiadd
xor
add
pop
inc
xchg
fst
push
cmp
lahf
jns
cmps
xor
out
out
cmps
mov
inc
mov
jbe
cmps
inc
fild
add
and
xchg
jns
mov
mov
xchg
push
and
imul
js
call
rol
rcl
lods
(bad)
loopne
add
and
jg
mov
dec
je
add
jmp
cmp
je
outs
lods
pop
adc
sbb
mov
inc
pop
add
sbb
push
sbb
pop
adc
or
inc
loopne
push
call
shl
or
pop
jo
cmp
push
fwait
js
sub
aas
inc
test
jo
mov
dec
cld
or
xor
lods
sbb
push
test
xchg
mov
stos
or
jbe
lahf
sub
mov
lock
add
sub
cmp
mov
ja
aas
jle
test
mov
mov
cmp
mov
stos
cli
mov
add
(bad)
mov
mov
or
pop
push
sahf
dec
es
push
iret
js
sub
test
push
out
(bad)
aaa
rol
or
jne
sbb
sub
pop
ret
js
jge
je
jl
cmp
jbe
or
mov
sbb
(bad)
out
loope
pop
lea
enter
stos
add
loop
xchg
push
jo
fcomp
nop
aas
xor
arpl
(bad)
sbb
push
enter
dec
xchg
and
dec
mov
daa
movs
and
aam
adc
dec
jmp
push
out
cmc
lods
mov
xchg
sub
push
aas
cmp
ja
lahf
clc
mov
inc
inc
pop
add
mov
inc
rol
rcr
xchg
or
cmc
adc
mov
(bad)
xor
cli
or
fs
pop
push
rcl
push
sbb
jg
sbb
test
xchg
lods
add
loopne
imul
and
push
jmp
ins
or
push
xchg
or
and
pop
outs
push
js
sbb
js
push
jl
jae
jo
mov
clc
pop
shr
sbb
test
sub
push
inc
sub
call
xchg
mov
mov
push
int3
adc
sbb
inc
out
pop
das
stos
push
jbe
(bad)
mov
mov
stos
gs
adc
sub
daa
xchg
cmps
mov
add
and
adc
push
clc
pop
iret
jle
cmp
xchg
xchg
scas
je
mov
cmp
je
mov
mov
mov
nop
nop
pop
adc
shr
xchg
cmp
adc
test
xchg
push
push
cmp
jne
int
ja
cmps
sbb
sub
pop
adc
mov
mov
rcl
or
stos
push
lock
push
xchg
cwde
push
push
pushf
popa
scas
push
jnp
ret
call
outs
inc
test
(bad)
scas
pop
sbb
push
(bad)
mov
inc
inc
je
push
xor
push
xchg
sti
stos
int
stos
jmp
ret
ror
xor
adc
pusha
lds
or
mov
sbb
(bad)
mov
adc
push
mov
pop
mov
test
cmp
out
fwait
js
gs
cmp
or
add
add
les
dec
mov
adc
and
(bad)
mul
push
xchg
repnz
add
les
mov
test
int
cmp
pop
push
xchg
mov
xor
adc
xor
adc
lods
sub
movs
adc
jb
xchg
mov
xchg
dec
dec
mov
sbb
sub
ins
and
inc
sbb
xor
cwde
xor
es
sub
fst
inc
dec
dec
loop
sbb
dec
(bad)
sub
add
push
imul
in
sbb
sub
xchg
movs
jge
xchg
mov
and
adc
xchg
xchg
icebp
ja
popf
jne
mov
or
adc
adc
xor
cmp
movs
xchg
dec
adc
xchg
mov
pop
cmp
add
push
cmp
mov
push
lods
pop
cwde
aas
in
or
xor
inc
adc
mov
sar
push
repz
pop
cmp
add
pop
(bad)
les
lock
mov
cmp
fdiv
dec
mov
mov
fisttp
pop
mov
jmp
and
add
inc
dec
dec
ror
dec
cmps
push
call
and
push
xchg
sbb
daa
xlat
dec
inc
push
mov
jmp
add
inc
add
rcr
adc
add
je
and
push
pop
mov
inc
and
add
mov
sub
lea
push
and
pop
mov
mov
jg
push
out
(bad)
cld
aaa
dec
sub
sub
sbb
outs
jo
dec
les
ror
push
pop
and
dec
add
or
movs
jecxz
pop
mov
aaa
sbb
push
adc
xchg
cmp
push
movs
ror
add
rcr
nop
bt
nop
add
call
add
aaa
cmp
sub
cmc
xchg
add
jne
mov
adc
sbb
retf
or
sub
retf
inc
jp
js
dec
jge
cwde
stos
and
mov
mov
lock
rcl
in
pop
pop
pusha
dec
sub
gs
cmp
dec
xchg
and
inc
scas
jecxz
movs
and
pop
push
fsubrp
inc
call
stc
push
cmp
sub
mov
mov
loop
mov
ret
mov
xor
jmp
and
add
hlt
xchg
rcr
add
daa
(bad)
push
neg
push
xchg
mov
or
mov
inc
repnz
repnz
pop
push
pop
cmp
dec
or
sbb
or
int3
enter
es
movs
cmc
sub
stos
pop
lea
push
fucomi
sub
int3
and
xor
add
nop
xor
fsincos
nop
aas
stos
adc
add
popa
add
(bad)
xchg
icebp
xor
fbld
mov
cmp
iret
mov
adc
add
in
(bad)
mov
jmp
mov
xchg
sbb
outs
push
adc
les
test
push
enterw
push
push
or
jne
gs
push
imul
bound
je
aas
lock
pop
adc
rol
mov
jecxz
sbb
mov
xor
in
daa
xor
xor
sbb
enter
pop
ror
scas
and
(bad)
ins
cmp
or
add
les
xor
xor
in
or
(bad)
rol
fucom
push
inc
pushf
rcl
cmp
je
ss
jb
sar
mov
xchg
xchg
dec
push
push
inc
add
mov
push
mov
pop
je
inc
jb
cmps
das
xchg
xchg
inc
push
xchg
pushf
sbb
mov
cmp
and
(bad)
aas
sub
inc
inc
clc
mov
sbb
sbb
adc
add
pop
dec
out
sbb
cld
dec
push
or
and
inc
pop
sbb
inc
and
cmp
xchg
ror
adc
sub
in
mov
aas
or
add
mov
nop
jbe
(bad)
pop
push
xor
or
add
inc
mov
cmp
push
test
or
inc
xchg
push
jno
sbb
aas
call
mov
ret
lods
push
pop
or
lods
smsw
nop
mov
and
inc
and
jnp
movsx
adc
cmps
movs
sbb
or
std
mov
add
xor
mov
mov
inc
mul
xor
push
icebp
mov
add
inc
push
addr16
mov
jne
xor
pop
iret
xlat
xor
mov
push
sar
sahf
inc
je
inc
adc
adc
cmp
xor
sub
data16
cmp
add
in
das
push
inc
pop
inc
push
and
shl
(bad)
mov
mov
inc
or
ror
icebp
ret
dec
mov
sbb
out
add
idiv
lea
shl
xchg
sar
add
fucomip
loope
mov
sub
xchg
or
sub
adc
(bad)
mov
mov
mov
add
lds
add
call
sub
lods
je
ja
mov
pop
and
fs
inc
shr
xchg
push
dec
jne
xchg
sub
daa
sbb
cwde
sbb
ret
je
pop
adc
mov
lods
(bad)
add
es
jo
fwait
loopne
jae
and
push
xchg
add
mov
xor
fistp
xchg
xor
fstp
mov
test
(bad)
test
mov
leave
inc
inc
add
adc
fild
and
and
imul
inc
jg
pushf
icebp
adc
ja
jp
add
sbb
push
xchg
ret
mov
leave
push
mov
pop
ret
xchg
fcomp
add
rcl
fwait
push
fstp
dec
jno
shl
dec
sbb
add
jmp
xor
ins
add
xchg
fild
rol
push
cmp
mov
iret
int3
dec
out
push
pop
sbb
push
cmc
add
pop
fisub
sbb
js
inc
pop
push
or
jmp
or
jg
cwde
shl
clc
mov
cmp
(bad)
jge
dec
sbb
dec
add
inc
rcr
es
add
pop
aad
jg
sub
and
mov
outs
movs
lods
das
push
mov
and
rcr
mov
(bad)
out
les
push
lahf
popf
pop
pop
sub
shr
sbb
cmp
not
jmp
push
in
aas
je
adc
fs
jo
mov
lods
add
add
sub
inc
setge
sbb
inc
sbb
add
bound
sbb
nop
sbb
adc
das
adc
dec
inc
lods
or
inc
add
cmp
jl
mov
jge
sbb
adc
outs
clc
sub
jge
mov
cmp
jge
(bad)
fwait
xchg
sar
jo
out
adc
sub
inc
cmp
cmp
sub
pop
shl
jl
and
mov
push
dec
pop
dec
mov
jno
xor
push
inc
loope
pop
push
leave
mov
and
pop
jae
scas
inc
lods
dec
es
stos
push
dec
jmp
push
mov
test
rcr
push
dec
push
add
loopne
cmp
ja
std
add
xor
mov
xchg
popa
sub
mov
push
or
mov
and
push
push
pop
cmps
xor
xchg
pop
ret
push
retf
loopne
rcr
jnp
cmp
cs
cmp
arpl
call
xor
retf
and
jo
mov
aas
mov
xlat
sub
xor
and
add
repz
or
cmp
imul
movzx
dec
jmp
add
in
mov
fisubr
xchg
dec
jmp
and
lahf
add
out
push
or
jno
push
sbb
test
(bad)
mov
xor
pop
sti
push
mov
lock
dec
push
jle
(bad)
data16
cmp
cmps
lods
jmp
adc
cmps
cmp
mov
cmp
dec
add
mov
dec
or
cmp
sub
inc
pshufw
and
push
push
(bad)
jmp
inc
int
pop
pop
dec
adc
mov
mov
(bad)
cmp
dec
jp
sub
imul
dec
mov
mul
or
mov
dec
or
jno
rol
test
mov
push
mov
xchg
or
mov
add
jl
or
sti
jbe
or
fidivr
adc
push
loopne
and
dec
fsubr
jno
jp
adc
inc
and
push
dec
ret
rol
push
add
scas
es
inc
sti
add
cdq
pop
inc
mov
add
mov
adc
mov
sbb
icebp
cwde
xor
push
push
ror
ficomp
imul
imul
nop
push
aam
push
sub
inc
jmp
pop
push
pop
shr
in
pushf
popf
xor
pop
pop
test
xor
add
mov
inc
cmp
lock
sub
sub
inc
sub
push
ins
ss
int
add
push
das
push
xor
xor
dec
add
or
mov
cld
dec
loopne
dec
dec
arpl
fisubr
ficom
xor
and
jecxz
(bad)
mov
jmp
push
inc
ror
add
xchg
aam
adc
sbb
mov
sub
push
retf
and
loopne
dec
pusha
stos
or
outs
mov
mov
mov
xor
push
mov
sti
jmp
push
and
das
xor
loopne
inc
enter
sub
fld
xchg
clc
stos
push
test
pop
mov
fisubr
jae
or
pop
and
push
nop
fsub
sbb
or
(bad)
xor
shl
ror
ds
or
add
sub
int3
jo
shl
mov
addr16
or
push
pop
add
jae
mov
pop
loope
jo
(bad)
pop
adc
xchg
adc
fldcw
inc
lock
push
cmp
sub
cmp
(bad)
dec
inc
sub
sbb
adc
jb
adc
inc
dec
sbb
pop
pop
xchg
femms
mov
push
jl
adc
aaa
xlat
push
or
and
inc
fbstp
push
mov
add
lahf
fisttp
add
sbb
aaa
sti
ins
mov
inc
inc
(bad)
inc
pushf
and
clc
pop
pop
mov
cmp
push
out
push
out
adc
addr16
push
or
lea
fs
mov
lock
ss
jle
test
popa
ret
fld
sbb
rcr
mov
jnp
or
pop
add
fld
jl
ror
add
sbb
and
inc
idiv
fisttp
mov
stc
cmc
inc
add
add
adc
or
pushf
add
stos
mov
in
leave
cmp
add
jnp
sbb
dec
shl
jbe
or
sub
cmp
jle
dec
cmp
lds
test
add
lds
sub
jo
and
daa
mov
ins
mov
out
dec
xchg
and
ins
mov
pusha
sub
push
test
adc
add
cwde
cmp
mov
cmp
(bad)
ja
inc
cmps
cld
adc
add
ror
std
sub
jmp
gs
mov
push
mov
sub
int3
test
add
movnti
inc
or
aam
(bad)
cmp
sar
inc
lea
pop
inc
or
adc
jae
pop
sub
add
push
mov
jle
cmp
jle
das
jmp
stos
movs
or
pop
mov
call
xchg
xor
adc
xchg
and
xchg
mov
ror
xor
fwait
xor
mov
loopne
push
add
xchg
or
jmp
fist
test
add
or
sbb
hlt
ins
out
inc
movs
adc
out
or
cs
add
cdq
pop
add
hlt
adc
add
dec
es
fisubr
(bad)
cmp
or
mov
sub
fidivr
in
dec
or
xlat
jnp
xor
pop
ins
mov
ins
cmp
jge
daa
dec
jmp
dec
dec
nop
add
ror
mov
dec
push
dec
cld
adc
xlat
push
add
aaa
sbb
cmps
pusha
aaa
xor
jbe
pushf
add
mov
or
mov
push
xor
adc
(bad)
adc
int
sbb
mov
push
adc
cmc
adc
xor
or
mov
pop
aad
adc
add
add
test
inc
dec
pop
(bad)
jl
scas
add
add
call
ret
int3
add
mov
test
pusha
imul
out
inc
lods
inc
or
push
xchg
sbb
arpl
fdiv
aas
pop
sbb
xchg
push
inc
xchg
sar
dec
xor
rcr
int
in
les
mov
push
pushf
and
retf
clc
pop
dec
inc
pusha
sub
ins
aaa
push
repz
and
push
inc
dec
pop
inc
jmp
nop
test
push
pop
xor
adc
jne
addr16
adc
mov
sub
mov
and
xor
in
call
sub
add
mov
out
mov
add
add
add
inc
pop
push
in
fcomp
sub
mov
fldcw
cmps
hlt
push
je
imul
pop
das
inc
add
xlat
fisub
mov
mov
fwait
imul
sub
add
mov
xchg
iret
daa
xor
or
sbb
mov
sbb
dec
dec
lahf
push
arpl
or
lds
and
adc
adc
push
int3
pusha
dec
jmp
call
adc
mov
mov
mov
out
xor
call
ja
cmp
test
cmp
inc
hlt
inc
(bad)
es
mov
out
and
ss
and
mov
inc
pusha
ins
fisttp
nop
or
hlt
js
sub
dec
lods
hlt
loope
push
sbb
and
fwait
xchg
js
cmp
mov
and
jmp
out
fcom
push
hlt
mov
mov
sub
mov
mov
inc
mov
fcmovnu
mov
and
out
ret
ror
addr16
bound
(bad)
and
loopne
mov
cvtps2pi
mov
or
xor
lea
ror
mov
inc
sub
mov
inc
test
fild
push
bound
loopne
adc
std
outs
and
test
adc
popa
add
jg
(bad)
jmp
pop
and
inc
and
pop
pop
sbb
dec
dec
cmp
mov
mov
addr16
and
and
sub
or
and
inc
mul
fldcw
dec
dec
retf
mov
pusha
xor
pop
pop
xchg
inc
push
leave
dec
adc
adc
sbb
xor
pop
or
sbb
pop
ret
scas
mov
pop
adc
cmp
aaa
lock
div
sbb
add
sbb
mov
sti
push
ret
js
jne
xor
push
add
add
mov
jecxz
dec
sti
and
mov
cs
fnsave
aam
cld
jne
dec
push
pop
jns
lds
sbb
sub
ja
jbe
push
push
or
or
inc
jne
pop
lods
inc
mov
(bad)
xor
aas
imul
ins
push
nop
adc
inc
test
inc
push
inc
movs
fisttp
sub
imul
aas
js
add
cmp
pop
daa
and
sub
das
jne
sbb
add
xchg
add
ins
(bad)
and
out
and
addr16
out
out
mov
cmp
and
push
out
xor
iret
dec
cmp
into
inc
repnz
sub
out
xor
addr16
adc
out
pop
dec
push
xor
inc
pusha
push
xchg
int3
out
out
sbb
into
adc
sub
out
out
jns
sbb
out
adc
out
out
pusha
cdq
inc
jb
dec
dec
add
sets
out
out
dec
imul
push
iret
pop
dec
push
and
add
dec
mov
push
shr
aad
enter
fsubr
add
fadd
sbb
jo
adc
add
jb
add
and
pop
adc
aad
cmp
fmul
jne
test
add
inc
cwde
add
pop
inc
ds
or
or
push
nop
xchg
adc
push
cmp
inc
or
sbb
sahf
xor
push
das
push
jno
jge
loopne
xchg
inc
add
add
cmp
xor
push
jle
rcl
mov
add
add
add
push
loopne
add
out
aam
inc
pusha
xor
mov
mov
jl
shr
inc
and
pusha
(bad)
sbb
pop
mov
push
add
or
or
ficom
inc
fwait
pop
lea
imul
push
jb
rcr
rcr
adc
pop
pop
cmp
inc
imul
nop
dec
jns
pop
ror
xor
enter
inc
adc
loopne
and
push
sub
(bad)
mov
lods
sub
rol
(bad)
cmp
push
cmp
xor
inc
fnstcw
or
jl
rcr
sbb
mov
dec
jmp
pop
out
or
push
adc
mov
ins
je
mov
aaa
jnp
and
or
mov
pop
imul
scas
sbb
pop
pop
mov
imul
xlat
pushf
sbb
call
and
loopne
sbb
jb
push
mov
mov
je
mov
enter
jmp
xor
in
add
push
ret
push
das
icebp
inc
cmps
test
cmp
pop
sub
arpl
sbb
and
mov
sbb
adc
sbb
mov
rol
inc
imul
jge
xchg
ja
inc
inc
sbb
ret
push
pop
dec
ror
(bad)
lock
and
clc
inc
pop
ins
sub
jmp
fmul
sub
sar
call
or
popa
(bad)
mov
add
scas
xor
inc
mov
or
pop
adc
push
and
mov
and
das
std
push
ins
scas
add
and
xchg
adc
pop
jle
and
inc
ror
jle
dec
mov
inc
loopne
mov
enter
push
(bad)
cwde
xchg
or
pop
add
push
push
rcl
dec
pop
push
cmp
push
inc
sub
jmp
js
cmp
jmp
push
add
cdq
shl
jb
ret
push
xor
jmp
adc
sub
cmps
push
adc
add
mov
mov
nop
adc
push
nop
or
cmps
mov
inc
jo
lahf
aaa
test
mov
fnstenv
mov
jg
jb
movs
sub
shr
lods
and
inc
add
mov
scas
mov
xor
inc
fst
(bad)
pusha
and
or
sub
stos
jns
pop
push
mov
pusha
out
imul
mov
stos
sbb
int
mov
add
or
adc
test
cdq
add
mov
movs
push
dec
pop
mov
push
mov
sbb
arpl
xor
gs
sbb
adc
retf
js
push
pop
xlat
out
jp
adc
jns
pop
in
mov
sti
inc
push
cdq
jb
jg
loopne
test
ret
outs
fld
push
sub
cmp
fwait
sub
cmp
sbb
push
mov
mov
lea
add
xchg
lea
xor
mov
add
sub
gs
inc
mov
add
mov
push
inc
fsubr
push
xchg
das
jmp
mov
xlat
sbb
push
imul
sbb
add
add
int
dec
sub
test
push
pop
daa
push
add
dec
inc
and
(bad)
sbb
cmps
sbb
(bad)
cwde
xchg
movs
in
sub
cwde
jb
hlt
pop
sub
rol
push
push
push
xchg
push
add
add
rol
mov
test
xor
lahf
in
adc
mov
jp
jne
and
add
sti
jne
test
xor
and
push
movs
movhps
xchg
jne
mov
inc
pusha
pop
xchg
and
gs
ja
aaa
clc
aas
aaa
cli
xchg
je
fisub
fst
test
dec
pop
mov
ret
fadd
pop
mov
or
add
add
pusha
add
mov
(bad)
and
pop
jecxz
xchg
or
stc
imul
pop
iret
push
mov
fs
mov
add
jne
push
scas
dec
fstp
sysexit
hlt
pop
test
mov
or
mov
ins
and
fimul
and
inc
sub
adc
push
fsub
fdiv
je
push
shr
xlat
add
dec
ins
adc
shl
loopne
inc
(bad)
test
neg
pop
push
pop
clc
je
mov
imul
aam
outs
adc
icebp
sub
pop
add
add
ret
and
xchg
(bad)
movs
es
sub
cwde
add
or
push
inc
fwait
xchg
push
pop
pop
dec
adc
dec
mul
bound
jp
mov
data16
sub
popa
lods
xor
mov
mov
add
test
or
jo
add
jmp
mov
jmp
mov
jmp
cmp
or
dec
dec
push
jmp
mov
jmp
mov
jmp
inc
pop
in
dec
es
jmp
mov
jmp
mov
jmp
aaa
or
add
fidiv
add
xor
(bad)
fstp
jnp
nop
add
loopne
mov
add
xchg
pop
loop
add
xor
aam
adc
ja
jl
jo
xor
rol
bswap
imul
cmp
lock
cmp
les
xor
call
movs
fimul
push
jmp
mov
jp
lahf
dec
mov
sub
dec
adc
mov
pop
aas
movs
nop
mov
les
loop
dec
aam
arpl
inc
in
jle
add
fisttp
push
jo
jmp
mov
push
adc
pop
add
sub
aas
mov
xchg
or
inc
gs
sti
mov
ret
xor
sbb
fstp
inc
jo
dec
add
jge
imul
loope
jg
sub
or
imul
les
lods
imul
fnstenv
xor
test
inc
add
pop
xchg
pop
ins
mov
and
test
bound
cwde
adc
adc
xchg
cmp
std
cmp
jge
mov
imul
xor
xchg
push
dec
jg
jnp
and
rol
mov
cmp
adc
fadd
(bad)
addr16
add
pushf
inc
(bad)
ja
test
or
sub
pop
pop
jg
loop
mov
cmp
or
inc
adc
call
imul
jmp
mov
jmp
mov
jmp
daa
inc
out
sbb
aas
xor
or
xor
(bad)
shl
sbb
or
mov
xor
sub
test
add
mov
mov
imul
bound
dec
mov
mov
mov
adc
mov
xor
jbe
cmps
xor
(bad)
push
ret
xor
(bad)
sub
mov
jmp
mov
test
pop
or
leave
leave
dec
fcmovnb
mov
push
or
in
fs
xor
hlt
lock
and
int
add
psadbw
in
into
iret
mov
or
out
fld
mov
sbb
dec
das
push
sub
xor
push
ret
inc
pusha
inc
dec
mov
or
ins
gs
jb
mov
jb
pop
sbb
dec
adc
cwde
ret
jo
cs
pusha
ins
or
dec
dec
dec
mov
fstp
fwait
in
dec
push
data16
je
and
xor
loopne
or
cmp
pop
mov
or
dec
xlat
pop
or
bound
push
inc
pop
rol
adc
or
fild
adc
or
or
inc
or
pop
pop
or
jo
ret
pusha
or
pop
loope
pop
mov
mov
dec
add
aam
jnp
sahf
imul
sbb
push
mov
xchg
fdivrp
push
sub
mov
sbb
lea
sbb
and
add
pop
inc
mov
cmp
fwait
inc
or
inc
imul
or
out
sub
adc
inc
adc
mov
lea
adc
test
or
and
nop
outs
pop
sub
loopne
pop
push
sbb
test
hlt
and
and
xchg
mov
pop
call
imul
addr16
add
test
sbb
sar
aas
shl
jp
test
aam
push
mov
xchg
sub
aam
lea
dec
jne
je
push
pop
cdq
sbb
adc
sub
push
test
adc
les
adc
push
sbb
xor
movs
xchg
jp
hlt
pop
push
push
(bad)
jp
inc
add
mov
test
cmp
(bad)
jp
dec
push
and
sbb
mov
sub
rcr
cld
xchg
xchg
stc
pop
in
test
pop
add
add
pop
xor
ss
fcomp
retf
jbe
inc
and
or
adc
or
jp
sbb
jns
mov
mov
pop
sbb
sbb
push
or
inc
enter
xchg
xor
cld
fadd
xchg
and
test
pop
dec
mov
sub
pop
inc
add
add
cmps
jns
jmp
add
inc
adc
add
das
inc
outs
ficomp
pop
push
dec
push
jne
ins
(bad)
mov
sbb
or
outs
ret
add
add
dec
outs
add
mov
jmp
adc
sub
mov
in
inc
add
jle
outs
inc
pushf
adc
cmps
add
xor
mov
ret
and
mov
add
aas
push
aam
adc
hlt
movs
and
xchg
cmp
adc
std
xchg
mov
push
jo
or
or
dec
out
add
dec
pop
outs
pusha
dec
mov
sbb
sub
(bad)
(bad)
fcmovb
mov
inc
push
add
stc
jmp
sbb
jae
cdq
xchg
mov
add
mov
mov
add
sbb
add
cdq
push
add
in
adc
loopne
(bad)
cmps
in
jge
jbe
or
fwait
and
pop
in
inc
sbb
sub
mov
pushf
call
sub
les
pop
mov
pop
mov
retf
test
(bad)
cli
inc
out
or
iret
mov
adc
push
mov
push
std
call
and
shl
cmp
or
(bad)
push
mov
test
scas
sbb
dec
mov
jns
cmp
enter
jmp
push
jmp
loop
adc
mov
pop
mov
mov
popa
call
add
add
and
mov
push
push
imul
push
call
pop
mov
push
and
outs
and
cmps
mov
jne
inc
aam
push
sub
push
inc
add
push
(bad)
jge
inc
add
push
and
and
push
or
and
pusha
pusha
push
xchg
test
xor
retf
imul
fs
cld
jo
mov
dec
push
pop
js
inc
sub
dec
xchg
gs
inc
mov
inc
mov
add
sbb
arpl
jmp
add
imul
ffree
aas
inc
stos
add
mov
or
scas
fucomi
fwait
jae
jae
dec
ins
jmp
add
sbb
sbb
inc
xor
ins
outs
add
push
gs
push
push
push
dec
sbb
xchg
dec
jg
or
fmul
stc
push
ins
popa
ret
call
hlt
ss
or
(bad)
xlat
cwde
xor
and
adc
dec
js
cmps
and
jns
daa
jne
loopne
sti
mov
and
mov
push
sub
push
aas
cmc
dec
pusha
dec
adc
ds
loopne
push
lock
cli
dec
xor
fadd
ja
lods
sbb
mov
sbb
pop
(bad)
fldenv
imul
dec
cmc
or
inc
xchg
(bad)
inc
scas
in
or
iret
dec
pusha
test
(bad)
cld
(bad)
dec
push
mov
xor
test
and
adc
fs
mov
xor
cmp
js
fisub
(bad)
xchg
mov
cmp
mov
xor
test
movs
lea
movs
sub
mov
fistp
push
ror
shl
test
mov
mov
cmp
push
add
enter
xor
ror
add
aam
xor
das
mov
cmp
loope
lods
or
or
mov
adc
mov
push
jne
stos
inc
push
jne
cmp
or
out
push
sub
lods
rol
pop
sbb
rol
cmc
das
cmp
push
jge
mov
repnz
fimul
sub
xchg
sbb
mov
popa
popf
repz
sbb
ror
adc
ins
iret
out
stos
adc
jmp
jnp
sub
repz
or
add
dec
jne
rcr
xchg
outs
add
push
cmp
inc
adc
es
mov
dec
add
cmp
jge
fmul
cwde
adc
mov
sub
add
test
lock
or
outs
icebp
in
mov
mov
sbb
nop
sbb
adc
xchg
shl
ret
mov
pop
in
add
es
mov
inc
sub
ret
lock
sub
adc
lea
xor
ins
add
hlt
lea
sub
mov
scas
in
push
jmp
mov
cmps
sub
jmp
pop
inc
add
mov
mov
add
ins
push
aad
mov
adc
mov
cmp
add
jns
sub
loopne
push
and
mov
inc
movs
add
rol
xchg
sub
jno
repnz
rol
hlt
or
fsub
mov
enter
jo
adc
dec
daa
cld
(bad)
outs
leave
not
push
das
jne
dec
inc
jbe
(bad)
int3
push
call
lods
daa
or
fisub
inc
mov
rol
and
xor
sub
cs
add
mov
push
add
pop
jle
test
cmps
cmp
das
xchg
add
push
cmps
cmc
mov
aad
jl
pop
dec
pop
jecxz
iret
ficomp
xchg
cmp
push
xchg
inc
cli
repz
push
pusha
push
add
xchg
es
xchg
add
or
hlt
push
loop
shr
adc
adc
jb
(bad)
out
fisttp
adc
add
inc
loop
rol
bound
jmp
pop
pop
xchg
call
lds
lock
adc
loopne
jo
sbb
shl
push
fisttp
push
add
jne
inc
popa
pop
push
adc
(bad)
idiv
jmp
or
iret
repz
push
js
xchg
mov
or
cmp
mov
es
push
aam
outs
add
iret
jmp
clc
mov
jmp
add
add
add
movs
(bad)
push
ins
lahf
movzx
mov
jecxz
(bad)
(bad)
xor
cdq
and
add
cmp
cmp
sub
lds
cdq
cmp
or
add
ret
push
cmp
push
fneni(8087
in
aas
jne
fucomi
ss
inc
out
pop
pop
pop
cli
lahf
out
out
es
and
test
pop
stc
or
jbe
imul
mov
fisttp
ins
fild
adc
ret
jle
bound
push
movsx
arpl
ss
sub
jne
add
and
cwde
jmp
adc
jmp
adc
cmp
add
adc
xlat
(bad)
add
push
call
xor
in
push
push
pop
jb
push
es
sbb
mov
test
xchg
add
jg
ja
inc
mov
add
adc
jns
jg
mov
adc
inc
xchg
out
pop
jne
rol
or
data16
xor
pop
outs
lea
jns
adc
adc
mov
stc
gs
fstp
add
sbb
ret
mov
pop
xchg
dec
xchg
(bad)
mov
dec
pop
dec
dec
inc
dec
dec
dec
ins
jo
add
jecxz
fwait
lock
call
add
jnp
adc
cwde
ds
or
fwait
or
jg
jo
cs
jae
ins
ins
fbstp
or
jae
sub
xchg
and
ja
in
fs
jg
push
xor
adc
mov
or
nop
jl
or
test
xor
rcr
je
mov
add
adc
pop
jg
jns
sbb
xchg
jl
push
inc
ins
gs
pop
push
or
jbe
inc
je
push
adc
xor
push
je
adc
out
es
adc
jb
or
fs
xchg
dec
or
jo
add
jnp
lock
jmp
adc
add
jecxz
pusha
jne
sbb
and
mov
and
push
je
jge
add
adc
adc
cmp
mov
imul
jbe
adc
cld
dec
pop
inc
dec
dec
push
inc
push
push
push
inc
inc
or
xchg
shr
out
pop
jo
(bad)
and
jp
add
pushf
or
or
push
or
inc
clc
push
cmps
mov
sbb
out
inc
daa
fiadd
loop
ret
jnp
or
dec
ror
ja
inc
jb
inc
xor
sub
outs
inc
mov
daa
adc
sahf
cli
test
dec
adc
pop
aad
cld
(bad)
mov
mov
jo
dec
mov
outs
retf
pop
pop
sbb
das
sbb
add
ja
dec
lods
inc
imul
addr16
jae
fist
xor
xchg
jg
sub
inc
test
sub
push
sti
add
fisttp
fs
xchg
xchg
mov
sub
adc
mov
dec
jae
jle
ud2
inc
add
push
clc
inc
jle
pushf
inc
test
in
pop
adc
jae
repz
push
addr16
or
rcr
(bad)
adc
or
jns
mov
and
imul
jbe
add
fcomp
mov
cmp
cmp
xchg
lods
into
adc
xchg
mov
icebp
imul
push
cmp
inc
xchg
fcomp
ss
inc
push
fmul
aad
in
cmp
mov
loop
xor
push
es
shr
push
aam
(bad)
pop
or
loope
pushf
loopne
in
xor
add
imul
push
push
pusha
frstor
fisub
ss
jmp
add
dec
add
test
aad
push
nop
ror
(bad)
jmp
add
add
pop
shr
sbb
pushf
mov
push
pop
retf
call
mov
dec
data16
xlat
scas
mov
js
add
push
cli
addr16
repnz
jb
or
or
fistp
and
dec
or
bound
dec
(bad)
ins
daa
int3
cmps
adc
xchg
mov
adc
or
sahf
ins
or
mov
dec
jno
gs
sbb
xchg
adc
adc
adc
and
push
popa
jne
gs
inc
aaa
stos
and
mov
pop
mov
in
stos
icebp
mov
lods
cmp
and
js
dec
test
mov
(bad)
xor
xor
sahf
mov
(bad)
and
jl
aas
dec
cmp
pop
add
add
test
stos
test
pop
or
push
and
xchg
les
xor
mov
in
or
ins
outs
outs
je
and
xchg
stos
and
push
xchg
push
adc
jns
call
mov
cwde
add
(bad)
sbb
mov
fstp
mov
fsubr
in
inc
push
outs
jne
fs
inc
movs
add
sahf
sbb
mov
cmovp
sar
inc
adc
mov
jl
rcl
call
icebp
mov
push
dec
je
inc
push
xchg
or
adc
test
mov
inc
sbb
lock
inc
mov
sub
loopne
add
cs
cmp
add
test
adc
add
in
fidivr
mov
adc
push
pop
js
push
and
nop
and
or
add
arpl
pop
lock
mov
cmp
mov
xchg
(bad)
inc
fsubr
pop
repnz
fbld
jmp
or
in
sbb
daa
in
sbb
add
ss
push
jbe
xchg
cwde
in
inc
pusha
push
stos
das
pop
add
fisttp
jle
and
pop
ret
mov
or
and
stos
push
xchg
dec
sub
call
sbb
imul
and
cmp
adc
add
rcl
icebp
push
cmp
push
inc
outs
lds
xchg
xchg
mov
es
mov
je
sbb
sub
and
jmp
arpl
pop
sub
cs
out
sub
shr
das
leave
push
xor
inc
inc
xor
(bad)
push
pop
test
arpl
sbb
jo
sbb
jecxz
in
sub
inc
cmp
add
add
xor
dec
xchg
sub
add
pusha
xchg
xchg
retf
fstp
sbb
xchg
xchg
lea
xchg
retf
adc
cmp
retf
xchg
xchg
xchg
pushf
retf
hlt
sbb
cmp
data16
movs
ret
or
inc
jge
ret
inc
cs
add
sub
inc
inc
fwait
mov
inc
inc
cs
jbe
cs
inc
inc
(bad)
jmp
pop
mov
test
sar
pop
or
adc
inc
pop
ja
add
fadd
jo
test
add
pop
add
jge
out
cmp
(bad)
add
cmp
hlt
xor
push
adc
les
inc
mov
or
rcr
adc
push
push
je
ins
sbb
pop
nop
fnstenv
imul
icebp
pusha
sbb
arpl
movs
xchg
jl
adc
inc
ins
shl
dec
push
adc
les
or
test
add
mov
push
loopne
in
add
or
xor
mov
addr16
stos
daa
sub
pushf
imul
into
push
(bad)
pop
ret
ins
loop
adc
aam
fidiv
mov
imul
cs
in
(bad)
xlat
retf
outs
or
mov
mov
pushf
mov
shl
and
mov
rol
and
inc
lds
mov
dec
mov
daa
add
inc
mov
js
add
dec
aas
push
push
lahf
xchg
aad
jo
mov
add
xchg
add
cli
xor
adc
xlat
mov
fwait
(bad)
jmp
jo
shl
mov
test
std
ret
lock
lock
pop
or
into
push
nop
xchg
add
ror
mov
cwde
add
adc
add
call
mov
shl
(bad)
adc
xchg
and
mov
xchg
dec
xchg
add
loop
cmc
(bad)
or
jmp
push
ret
repz
sbb
jnp
sti
sub
or
sbb
je
pusha
xor
cmps
add
ror
popa
sbb
into
pop
xchg
or
xchg
xor
push
adc
xor
push
jp
xchg
inc
cmps
ss
ins
push
pop
add
or
or
jb
or
xchg
mov
gs
adc
outs
adc
mov
mov
dec
mov
push
movzx
int3
adc
aaa
jo
xor
les
sti
jbe
mov
mov
mov
mov
pushf
sbb
push
sbb
xchg
movs
sbb
and
cmp
(bad)
or
and
daa
test
sete
adc
or
adc
scas
call
das
mov
mov
or
mov
test
pop
add
add
add
mov
mov
add
sbb
das
add
test
xor
mov
popa
js
or
int
jle
daa
jmp
jp
mov
loopne
inc
cld
adc
hlt
je
lock
rol
sbb
jmp
adc
cmp
mov
or
mov
sbb
je
int
pop
add
push
sub
and
mov
push
into
add
mov
adc
cmps
add
mov
and
hlt
call
(bad)
and
add
in
sub
jno
mov
xchg
jns
cmp
jne
inc
nop
and
xor
adc
or
or
mov
xchg
sbb
xchg
ficom
ds
xchg
aas
sub
andnps
add
jns
push
imul
arpl
inc
nop
dec
nop
cmp
xchg
xchg
xchg
test
add
popa
and
ret
push
push
leave
clc
add
add
or
mov
movs
sbb
sbb
pop
add
nop
fbld
jle
pusha
cmp
or
jmp
dec
or
lock
adc
arpl
out
mov
add
adc
mov
loope
push
cmps
or
jo
adc
inc
inc
loop
sbb
and
(bad)
iret
adc
ss
xchg
test
adc
inc
ficomp
mov
test
add
repz
mov
add
dec
movs
fadd
js
mov
cli
mov
pop
adc
sub
stos
lods
mov
and
adc
xchg
lock
inc
or
and
mov
mov
sbb
hlt
jmp
and
mov
dec
adc
test
inc
xchg
pusha
xchg
pop
call
adc
xchg
fisttp
jp
pop
(bad)
fisttp
inc
push
cmps
mov
adc
clc
fsub
sub
fdivr
cmp
jg
out
test
mov
ret
dec
clc
ins
imul
sti
adc
mov
or
stc
fstp
fwait
inc
push
into
dec
(bad)
add
cmps
push
repnz
push
add
outs
mov
push
ja
popa
ret
(bad)
enter
adc
pop
cmp
sbb
js
sbb
inc
adc
and
inc
pop
outs
mov
xor
movs
pop
cdq
test
xchg
push
xor
jne
sbb
sti
jmp
xor
add
add
inc
sbb
mov
mov
js
jmp
loopne
pop
fadd
test
cmps
adc
sub
or
add
sbb
or
cmp
push
adc
les
xchg
(bad)
cmps
sbb
loopne
push
or
and
mov
or
mov
and
xor
retf
(bad)
sub
or
in
dec
(bad)
or
adc
nop
add
(bad)
jae
mov
cmove
loope
call
aaa
jmp
cdq
je
mov
fsubr
add
and
jp
(bad)
pop
lahf
ja
mov
sbb
stos
fnstenv
sub
cld
inc
mov
cmp
mul
pand
xor
mov
nop
xor
pop
mov
inc
push
jg
mov
(bad)
int
jnp
and
into
(bad)
add
add
mov
fadd
leave
xchg
mov
jae
xchg
test
push
sub
and
test
(bad)
push
adc
into
mov
adc
jmp
in
dec
arpl
or
mov
ret
sar
ja
cdq
ds
jmp
mov
pop
sub
mov
add
test
pusha
je
mov
pop
sub
data16
sbb
sbb
adc
inc
iret
add
and
ins
leave
inc
mov
or
shl
fbstp
arpl
stc
ficom
(bad)
push
sbb
bswap
mov
in
test
movzx
test
rcr
adc
mov
sub
mov
inc
dec
add
push
add
sbb
ja
push
push
pop
xchg
pop
js
sbb
cmp
cs
aad
dec
mov
sbb
adc
retf
cmp
cmp
imul
cmp
mov
cmp
call
and
cld
or
or
sub
enter
inc
pop
enter
(bad)
and
cmp
clc
xchg
push
push
mov
ja
test
fcomp
xchg
(bad)
fimul
daa
mov
jle
xchg
mov
inc
inc
add
and
imul
js
loope
dec
cmp
test
dec
add
retf
call
add
inc
and
sti
(bad)
fsubrp
sub
jne
adc
xchg
or
cmp
ret
jle
shr
aad
add
push
push
fdivrp
mov
enter
ins
push
or
inc
les
xor
icebp
xor
mov
(bad)
clc
nop
inc
cmp
add
sub
out
call
cmp
mov
rol
cmp
lods
inc
aaa
push
add
bt
mov
sub
push
ret
pop
test
jb
ret
(bad)
pop
xchg
cld
mov
pop
rcl
mov
pop
or
lods
cmp
and
inc
nop
jae
ins
jg
or
push
das
jmp
jg
xor
sti
(bad)
jg
add
lds
jno
inc
mov
movs
leave
aam
add
jg
test
gs
sar
pop
cs
call
xlat
popf
rol
jg
xchg
loope
mov
lock
push
imul
std
adc
pop
dec
popa
outs
popa
addr16
repnz
mov
imul
dec
inc
cdq
(bad)
icebp
sbb
xchg
cmp
pop
outs
and
add
out
je
mov
pop
or
adc
inc
imul
sar
add
lods
push
mov
std
jno
les
(bad)
or
xchg
jmp
and
pop
and
fdivr
adc
int3
and
sub
push
and
cmps
or
test
(bad)
dec
xchg
and
fadd
mov
(bad)
in
leave
dec
in
ins
in
retf
inc
lds
mov
jb
rcl
enter
mov
jb
mov
enter
fcomp
nop
arpl
ja
dec
mov
aam
xchg
adc
adc
mov
push
mov
rol
out
outs
add
pop
pop
pop
daa
jnp
out
das
aaa
aas
movntq
mov
fsubrp
push
idiv
pop
es
push
ja
sbb
jns
gs
loope
sub
add
ss
pop
test
sub
xchg
aaa
dec
ficom
mov
loopne
lods
sahf
es
adc
js
in
sar
popf
push
add
pop
sbb
push
push
fwait
and
xor
out
jmp
retf
cs
jmp
add
shl
or
xchg
sub
addr16
mov
or
shl
adc
dec
or
loop
es
xchg
hlt
pushf
adc
and
xchg
cmp
adc
call
and
pop
adc
ds
fstp
xor
mov
inc
push
xlat
pmulhuw
leave
enter
mov
les
repnz
dec
mov
lds
sbb
stos
or
inc
jns
xor
fcom
loopne
ja
add
leave
pop
adc
movs
icebp
xor
daa
sti
popa
mov
dec
call
gs
xchg
add
jbe
icebp
inc
ficomp
sub
pop
outs
inc
dec
aaa
mov
repnz
enter
push
test
dec
shl
xchg
xor
or
or
mov
mov
bound
cmp
adc
into
movs
or
ficom
add
cmps
add
xor
cmps
ror
add
cs
imul
xor
push
fs
add
outs
jo
arpl
add
and
(bad)
mov
xchg
sub
cmc
les
adc
add
push
rcl
js
add
rcl
not
sub
in
sbb
xlat
sub
sbb
and
jmp
pop
mov
call
je
jae
stos
fsubr
imul
pop
dec
add
xor
or
dec
mov
call
popa
jb
push
mov
mov
inc
pop
mov
push
mov
inc
or
ret
xor
pop
(bad)
fs
or
add
push
xor
push
test
add
je
xlat
addr16
pop
xor
pop
and
dec
out
mov
fstp
add
mov
ss
add
or
inc
fild
pop
push
ds
jae
sub
imul
cmp
lock
pop
iret
in
shr
or
or
add
or
adc
fst
dec
push
dec
dec
add
(bad)
repz
(bad)
fist
nop
enter
mov
adc
xor
mov
mov
add
pop
inc
jo
sub
lods
pop
or
and
ror
push
enter
xor
mov
inc
lds
bound
pusha
mov
and
inc
cmps
inc
pop
cdq
hlt
adc
test
pop
cmc
rcl
test
xchg
out
enter
pop
lea
fsub
or
push
add
jno
push
aam
pop
(bad)
mov
mov
xor
fsub
sub
out
out
mov
fadd
push
xor
ret
mov
add
xchg
rcr
test
mov
pop
add
std
inc
lea
mov
xlat
les
or
pop
scas
in
inc
sub
adc
adc
inc
lock
inc
sbb
ja
cmp
mov
call
sbb
inc
mov
lods
inc
sub
push
or
das
add
sub
nop
sbb
lea
mov
ror
and
call
jmp
test
mov
wrmsr
inc
ror
inc
retf
cmp
add
inc
add
add
(bad)
sbb
xor
push
sbb
test
cmp
dec
push
jl
fwait
ror
or
inc
pop
dec
shr
pusha
retf
xor
mov
adc
xlat
xchg
pop
or
test
(bad)
adc
mov
jae
jnp
movs
pushf
cmp
jmp
cmp
in
das
add
pop
mov
sbb
mov
or
mov
(bad)
ja
add
pop
inc
adc
adc
int3
mov
inc
dec
test
xor
fistp
(bad)
xchg
xchg
lahf
mov
loope
adc
add
or
fwait
sbb
push
out
sbb
sbb
enter
movzx
or
and
hlt
jbe
sub
ret
inc
mov
dec
push
ret
shr
sub
push
rol
cld
call
sbb
(bad)
cmp
clc
div
and
(bad)
rol
sub
ss
ret
sbb
jo
jg
rol
fmul
add
xchg
ret
cmp
pop
mov
mov
imul
jno
clc
or
and
add
xchg
sub
mov
add
adc
lahf
xor
or
dec
lods
hlt
pop
xchg
mov
cmp
pop
dec
adc
push
shl
or
pop
ror
in
ja
dec
pusha
adc
into
fmul
push
js
mov
pusha
xchg
dec
test
xor
or
adc
shl
cmp
or
jmp
jbe
mov
and
arpl
stos
(bad)
in
in
sbb
call
xor
pusha
(bad)
xor
stos
and
adc
(bad)
push
bound
or
fst
repnz
lea
xchg
push
xchg
push
dec
rol
mov
sbb
jo
inc
or
sbb
xchg
mov
jmp
pop
out
add
bound
sbb
and
push
cld
lods
in
(bad)
das
jmp
xor
dec
xor
test
dec
in
ins
sub
xor
push
loopne
test
or
inc
sar
pop
daa
add
dec
add
cmp
mov
call
mov
or
pop
xor
into
xchg
and
sbb
nop
cmp
sti
or
and
sub
imul
add
int3
add
inc
mov
inc
jno
test
pushf
rol
pop
add
call
scas
lahf
push
call
push
(bad)
mov
sbb
mov
jmp
sbb
arpl
add
cmps
loopne
stc
inc
adc
(bad)
(bad)
sbb
sbb
hlt
mov
repnz
nop
in
lahf
add
call
mov
test
mov
jo
stc
leave
or
xchg
inc
add
loopne
fwait
push
ret
sub
add
dec
rcl
fiadd
and
pop
pop
mov
jo
shr
inc
cmp
outs
mov
adc
arpl
mov
pushf
push
fdiv
int
int3
sbb
mov
sbb
pop
inc
add
sbb
ror
dec
fcom
and
sub
jo
jb
rcr
mov
cmp
mov
hlt
mov
(bad)
les
push
ret
push
jg
or
push
hlt
pop
rcr
push
jno
add
inc
mov
mov
pop
fmul
push
add
leave
lock
dec
enter
adc
dec
hlt
push
sub
stos
ror
pop
dec
std
aas
ret
sbb
and
in
jmp
retf
push
dec
and
mov
pop
(bad)
inc
inc
xchg
rol
sbb
sub
xlat
call
rol
jnp
mov
mov
mov
out
test
mov
mov
cmps
mov
xor
or
jo
lods
xchg
in
inc
mov
mov
mov
xor
shl
ret
cwde
aam
or
adc
inc
adc
jne
and
sbb
dec
mov
inc
pop
test
mov
stc
cmp
push
cmp
or
sbb
cmp
mov
clc
add
mul
inc
or
push
or
fcmovb
mov
jmp
xor
mov
(bad)
(bad)
inc
or
sub
add
cs
push
or
js
push
sar
outs
pusha
sbb
adc
enter
pusha
and
sbb
fwait
lods
jg
or
sub
jg
push
jmp
(bad)
mov
imul
pop
mov
push
out
sti
hlt
hlt
shr
pop
mov
loopne
js
sbb
cmps
cmp
repz
xchg
jno
jecxz
fadd
or
test
outs
mov
inc
add
adc
aaa
or
cmps
push
jle
dec
xor
and
inc
inc
mov
xor
sbb
aad
sbb
add
inc
mov
test
ja
xchg
or
cdq
dec
sahf
adc
cmp
add
in
cmp
add
jae
xlat
xchg
mov
sbb
test
push
pop
lds
dec
push
sub
aaa
loopne
xor
call
xchg
out
mov
jno
pushf
test
xlat
sbb
fwait
pop
loopne
std
in
aaa
nop
ins
xor
fsubr
jmp
or
mov
pop
ret
(bad)
loopne
jns
inc
fstp
push
stos
inc
mov
mov
xor
cmp
cmp
retf
fnstcw
inc
fld
leave
retf
lock
mov
add
dec
lock
aad
adc
cmp
(bad)
mov
sbb
inc
or
ins
dec
fistp
sar
pop
aad
dec
mov
dec
add
ret
lock
or
add
aas
movs
push
pushf
cmp
xchg
sub
push
sub
pop
adc
dec
cmp
add
imul
xor
push
in
dec
push
or
lock
and
imul
push
shr
sbb
retf
dec
xchg
test
xchg
xchg
test
push
inc
rcl
rol
(bad)
inc
ror
test
and
sbb
push
jmp
call
push
(bad)
inc
pusha
adc
(bad)
hlt
or
add
push
and
lahf
and
mov
inc
mov
xor
xchg
and
pop
cmp
pop
imul
jne
sbb
xchg
ror
adc
cmp
shl
adc
and
dec
int
push
xchg
imul
xchg
movs
ret
mov
inc
xor
repnz
cld
mov
rol
jmp
(bad)
es
push
scas
iret
je
mov
cmp
(bad)
dec
lahf
adc
mov
push
xchg
mov
fadd
xor
inc
divps
and
inc
inc
cmp
dec
mov
pop
test
shr
loopne
test
push
cdq
pop
adc
push
inc
xchg
inc
inc
adc
sub
xor
inc
or
pushf
add
inc
outs
mov
ret
mov
inc
clc
push
gs
fmul
data16
movs
add
js
jne
clc
mov
sti
ror
ins
outs
jae
pop
mov
adc
and
add
in
pusha
adc
cmp
(bad)
mov
fs
cmp
mov
or
add
add
xchg
out
add
(bad)
movs
fidiv
adc
retf
cmp
inc
js
dec
scas
popa
push
retf
std
adc
call
push
test
div
test
enter
add
xor
clc
rcr
in
xchg
(bad)
movaps
ins
sbb
lds
fild
sbb
and
sub
pusha
mov
inc
js
sar
jne
adc
cmp
sbb
inc
jb
pop
outs
pop
movs
in
call
in
(bad)
sar
dec
sub
push
or
(bad)
mov
mov
add
cmp
inc
pop
sub
ret
rol
gs
add
(bad)
cmp
and
xor
mov
adc
mov
push
mov
out
fcom
mov
pop
inc
hlt
and
scas
push
scas
sar
add
or
ret
retf
outs
add
arpl
int
mov
loope
pusha
pop
cmp
mov
pop
mov
inc
push
xchg
mov
popa
push
sahf
jne
fild
cmp
mov
xor
fiadd
push
pop
inc
add
inc
push
mov
sbb
jmp
adc
sbb
outs
mov
mov
(bad)
arpl
cdq
jb
ss
and
outs
and
in
rcr
jb
push
enter
jb
outs
ins
mov
loopne
cs
pop
leave
inc
int
out
adc
add
push
xor
cmps
add
push
adc
mov
mov
dec
cmp
adc
cdq
mov
mov
and
mov
and
dec
jne
pop
or
pop
out
inc
ja
jb
ret
xor
jge
daa
push
gs
sub
sbb
or
push
mov
lods
jmp
fs
adc
call
sbb
pop
imul
sub
add
(bad)
xor
adc
repz
xchg
dec
dec
loopne
ficom
jbe
rcl
clc
and
dec
jnp
pop
jecxz
mov
outs
jae
popa
or
mov
js
add
push
push
mov
jo
pop
cmp
jno
je
or
or
add
jbe
adc
ffree
ins
data16
std
aam
and
cld
ins
imul
jae
ret
push
jae
cmp
dec
push
imul
pop
enter
add
rcl
test
pop
mov
sub
sbb
add
jnp
push
cmp
dec
jae
lods
out
dec
mov
push
ja
imul
stc
or
xchg
cmp
in
add
ds
pop
or
addr16
xlat
rol
(bad)
sbb
aas
popf
push
mov
sub
(bad)
and
stos
arpl
pop
jmp
push
nop
mul
fistp
push
aam
push
fimul
dec
add
inc
call
mov
pop
lods
sbb
or
mov
adc
sbb
sbb
adc
add
or
pop
dec
movs
mov
adc
sbb
mov
das
push
jp
mov
in
jle
inc
and
or
pop
(bad)
ins
mov
loop
cmps
out
or
or
add
cmp
jp
outs
call
inc
xchg
or
add
test
test
lods
sbb
push
dec
out
in
and
mov
sub
test
daa
dec
mov
lods
inc
push
sbb
call
ss
popa
ins
add
imul
or
or
pop
and
dec
clc
sub
dec
bound
sub
push
nop
fst
sbb
adc
inc
fld
push
dec
jmp
loopne
mov
mov
push
cmc
nop
inc
adc
repz
add
(bad)
loop
inc
stos
ins
jmp
xor
mov
out
fstp
jp
inc
icebp
or
push
adc
pop
add
push
or
repnz
jmp
loop
dec
jmp
and
adc
call
inc
sub
ss
cdq
test
jb
dec
xlat
rcl
sub
mov
popa
(bad)
xor
push
imul
imul
add
inc
(bad)
cs
sar
mov
push
and
cmp
xor
push
jmp
push
adc
pop
jno
out
add
jp
push
enter
sbb
xchg
iret
or
add
aam
imul
leave
add
and
jnp
lock
test
das
or
or
lods
test
sbb
mov
fs
or
outs
fild
xor
xor
dec
in
add
je
pop
add
xor
ja
lock
add
lods
or
scas
adc
sbb
ins
fcomp
shr
cmps
in
icebp
ror
cld
sub
jl
add
outs
inc
add
mov
loop
inc
pop
inc
pop
cld
in
jmp
cs
pusha
rol
mov
or
mov
jb
jl
movs
xor
cmps
jmp
jge
aam
aam
add
loop
gs
mov
outs
loope
rol
add
stc
push
ins
adc
add
inc
in
aaa
or
pusha
adc
sbb
jbe
clc
push
pop
sbb
in
jg
out
pop
add
cli
jle
cmps
or
outs
push
push
out
pop
fist
mov
out
dec
inc
lar
jno
mov
pop
add
movs
xchg
sbb
and
in
out
xchg
sub
cmp
or
in
sub
dec
jl
and
mov
add
add
mov
jmp
js
je
out
(bad)
cmps
loop
add
mov
(bad)
fdiv
repz
push
jp
cmps
mov
or
mov
mov
les
aas
mov
mov
sbb
push
sbb
push
ins
scas
or
jae
cmp
(bad)
inc
inc
outs
mov
loope
das
in
xchg
inc
add
pcmpgtb
cdq
dec
xor
xor
je
sbb
test
jne
fs
adc
inc
sub
sbb
stc
push
cmp
push
sbb
dec
cmps
loopne
icebp
pop
gs
or
adc
jg
push
sub
das
add
xor
mov
push
mov
(bad)
push
or
sbb
adc
jmp
cmps
aam
xchg
jae
pusha
add
aaa
push
sbb
test
mov
jbe
stos
fst
int
xchg
mov
inc
icebp
add
mov
or
xchg
sub
aad
push
test
and
jo
cmc
retf
xchg
sub
dec
aad
outs
pop
push
inc
pop
aaa
push
sub
imul
nop
aas
xor
mov
mov
fld
jae
cmp
mov
cs
xchg
jnp
movs
mov
test
mov
jne
arpl
popf
imul
and
neg
pop
icebp
push
repz
push
adc
(bad)
loop
jmp
push
mov
out
(bad)
in
or
(bad)
jmp
(bad)
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
call
and
repz
jo
mov
dec
mov
sub
sub
cmp
js
sub
push
cs
fs
add
adc
mov
mov
mov
add
repz
push
jecxz
les
push
ins
mov
mov
dec
sbb
jns
or
ins
add
sbb
pop
adc
and
ins
adc
aad
and
retf
pop
fimul
xchg
xchg
xchg
xchg
jbe
shl
xchg
xchg
fld
or
inc
mov
inc
inc
inc
inc
dec
jbe
mov
clc
(bad)
cwde
lock
jecxz
and
add
and
gs
adc
inc
jnp
inc
push
pusha
sub
or
dec
inc
add
push
aaa
mov
inc
adc
arpl
push
das
xchg
test
fisubr
jg
loopne
dec
or
push
and
fwait
add
pop
push
mov
sub
add
fstp
add
rcr
cs
add
(bad)
add
adc
cmp
xor
stos
fs
and
and
mov
inc
jmp
pop
add
or
mov
or
or
rcr
xchg
push
push
cmp
add
popa
shr
(bad)
aad
adc
sub
jmp
mov
shl
nop
pop
adc
inc
aaa
sub
sbb
adc
call
fisubr
nop
aas
jmp
or
stc
add
ja
add
push
dec
(bad)
jmp
adc
ds
loopne
(bad)
cmps
int3
cmove
adc
jmp
outs
jb
or
xor
push
jae
jb
dec
popa
and
sbb
push
outs
(bad)
sbb
mov
retf
das
xchg
test
push
int
not
dec
jae
and
dec
xchg
in
js
bts
in
movs
inc
pushf
adc
add
aam
add
add
adc
cdq
aam
dec
test
sub
sbb
pusha
scas
movs
add
movnti
mov
fiadd
add
mov
sbb
pop
add
xor
gs
push
outs
push
loopne
scas
ret
or
cli
fiadd
mov
cmc
push
push
dec
fld
fnsave
adc
dec
pop
cli
ins
pop
rol
mov
into
adc
enter
jae
fnstcw
stc
add
adc
aaa
sbb
add
cmp
sub
sbb
or
aaa
ret
or
or
adc
pop
add
cmp
sbb
jae
fdivr
pop
mov
dec
add
aas
add
or
pushf
lahf
(bad)
jg
cli
(bad)
in
jae
adc
push
es
or
jmp
sti
jg
sub
inc
mov
jl
inc
add
es
inc
ror
daa
(bad)
gs
adc
add
outs
add
adc
lahf
add
mov
daa
sub
cwde
sti
lods
loope
cli
jae
sti
add
pop
dec
cli
jne
aaa
add
push
sti
test
cs
xchg
dec
and
sbb
dec
fdiv
inc
xchg
shl
or
adc
push
sub
sti
push
pop
call
xchg
push
add
push
jmp
add
pop
pusha
ficom
jbe
sub
add
pushf
add
or
and
add
(bad)
jl
add
adc
retf
xor
jmp
xor
jge
fwait
mov
add
push
call
js
cmps
into
and
shl
loopne
or
pusha
xor
(bad)
iret
jnp
jo
add
and
inc
pop
xor
and
add
xor
fadd
add
add
mov
or
mov
pop
pop
cdq
sbb
adc
int3
adc
mov
clc
pop
cmp
rcl
clc
or
dec
outs
push
aaa
ror
cld
or
sub
adc
push
rol
mov
test
shl
nop
xor
or
inc
push
inc
dec
pop
cs
das
fwait
jno
pop
push
je
mov
lds
fild
test
cmp
stc
push
jmp
jg
xor
add
mov
cmp
inc
add
popa
dec
out
or
add
sbb
inc
jle
push
in
or
test
push
fsub
push
or
jmp
xor
jo
popf
push
or
mov
mov
mov
push
stos
push
in
das
add
mov
push
sub
std
dec
pop
xor
ss
cwde
pop
jmp
and
xlat
and
retf
sub
pop
xor
mov
push
add
stc
scas
in
add
add
das
jg
loope
and
rol
pop
or
push
push
daa
mov
(bad)
jge
pop
push
xchg
lods
add
and
mov
lds
sub
add
dec
add
or
sub
add
icebp
outs
mov
pop
fsubr
out
and
loopne
pop
pop
mov
pusha
aaa
push
jl
(bad)
mov
lahf
mov
xlat
lea
inc
(bad)
sbb
and
mov
cmp
pop
mov
mov
sub
add
rol
adc
jbe
sti
sbb
cmc
cwde
scas
inc
sub
adc
daa
adc
inc
das
arpl
daa
adc
cmp
cwde
cmp
mov
push
inc
in
add
es
daa
add
aaa
std
adc
jmp
loopne
sbb
leave
and
(bad)
jge
add
or
in
aaa
dec
xor
mov
jmp
daa
push
add
adc
dec
cmp
add
rcr
cld
push
push
int3
xor
in
push
push
push
popa
cmps
scas
lock
shr
add
daa
(bad)
movs
sbb
sbb
add
rol
push
into
daa
scas
lock
inc
loop
scas
jne
push
sub
inc
add
mov
xor
test
rol
nop
pushf
jmp
out
or
rdpmc
jae
jnp
pushf
jg
add
dec
and
ins
xor
dec
sub
adc
cmp
jo
daa
out
dec
or
fdiv
mov
xchg
cmp
ret
dec
inc
xchg
cmp
loopne
scas
add
dec
push
call
or
push
sub
sub
add
inc
pusha
les
jo
inc
mul
xchg
(bad)
pop
sbb
adc
scas
das
add
pop
and
sub
cmp
xor
imul
call
pop
sbb
jg
inc
push
xor
push
arpl
inc
scas
push
add
int
mov
inc
cmp
fwait
add
out
and
push
mov
les
pop
pop
jnp
pop
xchg
sbb
jge
pop
fadd
sti
or
mov
inc
pop
inc
scas
imul
inc
xor
or
and
sub
jne
sti
repnz
add
adc
nop
sub
xor
data16
nop
push
cmp
mov
push
dec
stos
in
add
inc
or
js
add
cs
mov
push
stc
dec
dec
mov
pop
push
mov
or
jo
dec
pop
inc
daa
rcr
pop
mov
jae
fistp
push
pop
or
cli
sub
inc
or
add
inc
sahf
retf
aaa
adc
mov
dec
arpl
cmp
loopne
fstp
cmp
and
iret
adc
cmp
or
pop
pop
add
lock
bound
aas
gs
or
sub
add
pusha
jne
or
jo
xchg
movs
push
fadd
ret
sub
add
ins
add
aaa
cmp
mov
pop
rol
iret
xor
fisub
jl
push
add
(bad)
add
ret
mov
(bad)
in
loopne
shr
adc
inc
arpl
cld
loope
xor
add
push
push
dec
add
data16
lea
repnz
imul
xor
outs
ret
(bad)
test
loopne
inc
ins
aas
lahf
aaa
mov
or
mov
pop
push
cld
jo
push
cmp
or
jns
sub
xchg
cmp
popa
jbe
cmp
fisubr
xlat
shr
adc
imul
outs
sbb
mov
es
das
mov
push
mov
or
repz
xchg
sbb
push
mov
inc
loope
adc
mov
inc
out
sahf
sbb
push
nop
mov
iret
repz
adc
push
test
cld
lock
ds
push
inc
cmp
push
cwde
inc
jne
sbb
popf
adc
ins
(bad)
cmovl
pop
push
push
add
cmp
add
ins
mov
or
dec
dec
enter
add
sbb
pop
sbb
adc
mov
inc
and
lahf
adc
or
loop
adc
enter
sub
in
adc
mov
enter
shl
sbb
popa
and
and
int3
and
adc
ins
and
and
xchg
ret
call
xchg
adc
mov
(bad)
cmp
push
add
push
bound
(bad)
scas
add
xlat
call
retf
inc
add
or
inc
cmp
enter
and
enter
pop
add
sbb
call
pop
call
add
call
cmp
inc
or
loopne
mov
(bad)
jmp
dec
or
add
mov
inc
sbb
push
sbb
lock
jmp
sbb
jmp
mov
ret
rcl
lock
jae
sbb
xlat
add
int
adc
out
(bad)
js
push
cmp
add
jl
add
outs
imul
or
mov
shl
dec
fldcw
das
and
push
and
push
fld
jmp
test
cmp
stos
and
add
xor
xchg
in
add
nop
cwde
xor
(bad)
push
adc
out
adc
pusha
addr16
dec
jmp
cwde
jno
addr16
push
(bad)
mov
push
or
mov
lds
addr16
enter
and
(bad)
ror
mov
jo
std
mul
nop
jmp
inc
adc
add
dec
unpcklps
jo
add
ins
outs
fist
dec
jns
jne
arpl
xor
loopne
add
test
pushf
div
xlat
inc
je
pop
pusha
add
lock
or
fst
nop
jl
or
adc
inc
cmp
jo
stos
cmps
sahf
jbe
dec
push
fs
or
mov
sub
(bad)
imul
add
add
push
mov
aam
mov
mov
push
adc
mov
add
jge
mov
mov
into
jb
jl
das
add
adc
scas
push
adc
test
xchg
xchg
call
or
inc
test
movs
xor
adc
jmp
mov
cdq
call
pop
cli
mov
loope
mov
add
jmp
add
ud2
das
sbb
pop
in
pop
retf
inc
sbb
push
inc
and
test
cmps
inc
pusha
(bad)
dec
pusha
mov
call
ja
inc
dec
std
xchg
inc
inc
pop
imul
and
pop
or
clc
outs
shr
and
pop
adc
into
push
mov
retf
inc
in
pop
ficomp
rcl
pop
rol
jge
push
jmp
cmps
clc
mov
or
sar
(bad)
add
adc
ins
(bad)
aaa
repz
lds
sbb
mov
or
out
fimul
add
not
iret
xor
stos
sbb
push
pop
dec
mov
rcl
ret
daa
pop
sub
dec
pop
ret
rcl
test
pop
pop
sbb
mov
inc
inc
inc
and
popa
cmps
test
and
fcomp
and
into
sub
rol
and
popa
sbb
sbb
aam
clc
mov
jo
or
or
outs
sbb
rcl
dec
fiadd
sbb
jo
mov
add
push
add
xchg
cmp
mov
inc
adc
push
cwde
ins
(bad)
cmc
outs
sub
jno
dec
nop
inc
push
jbe
sbb
sbb
aaa
fmulp
dec
loope
test
call
xchg
xor
fisttp
jns
or
or
push
add
in
daa
or
fiadd
dec
jne
mov
aas
mov
inc
jmp
je
push
cmps
cmp
add
ja
leave
pop
xor
jo
ret
inc
or
or
out
mov
nop
xor
lahf
ret
movs
sbb
(bad)
inc
ds
add
jmp
mov
add
outs
mov
push
in
jmp
cmp
mov
daa
clc
mov
enter
push
cld
push
ins
sbb
in
in
add
sahf
out
sbb
loope
jmp
fwait
jns
out
movs
scas
mov
add
pop
sbb
pop
cmps
sub
sbb
pop
pop
dec
cli
add
sbb
or
dec
jl
pusha
fdiv
sub
inc
inc
and
inc
or
ret
cmp
push
or
sbb
and
mov
xchg
xchg
daa
sub
les
lock
std
add
adc
cmps
push
std
cmp
nop
pop
loope
pop
adc
sbb
mov
and
ror
xor
call
clc
cmc
jns
pop
adc
add
adc
jo
inc
push
add
and
enter
jns
add
dec
les
add
ret
mov
mov
or
adc
adc
add
add
mov
adc
jns
add
sbb
in
dec
add
and
sbb
scas
(bad)
add
dec
add
(bad)
shl
sub
sub
and
sbb
sub
or
movs
add
add
push
xor
add
mov
mov
xchg
sbb
cmp
loopne
es
jmp
mov
add
jg
fs
imul
xchg
xchg
mov
pop
in
or
std
xor
gs
loope
adc
ss
cmp
cmp
sahf
es
inc
loop
pop
and
or
out
bound
inc
push
push
sbb
movntq
xor
cmp
fisttp
or
pushf
ror
or
dec
aaa
jb
pop
ins
pusha
hlt
adc
(bad)
cli
and
jmp
ins
jecxz
cli
cmp
jo
mov
add
fwait
cmp
into
pinsrw
cmp
jp
call
mov
lods
inc
push
cld
add
pop
push
xchg
pushf
cmps
adc
add
call
inc
ret
fcomi
or
mov
xor
push
mov
xchg
xchg
xchg
dec
nop
xchg
xchg
fcmovnbe
xchg
call
inc
jp
idiv
arpl
movs
cmp
lods
outs
inc
cmps
jge
test
mov
cmp
mov
dec
ret
and
pop
je
cmp
sbb
mov
jmp
inc
lock
sbb
pop
and
or
pop
cmp
push
push
cmp
daa
adc
xor
inc
sbb
fild
jle
cwde
fld
pop
push
dec
mov
fsub
push
mov
lahf
ins
sub
sti
inc
mov
jo
sbb
push
scas
inc
repnz
arpl
inc
jp
daa
mov
gs
jge
push
push
add
push
sbb
push
(bad)
imul
add
push
xchg
jnp
pusha
inc
inc
loop
jecxz
pop
mov
pop
mov
retf
je
push
pop
dec
mov
adc
dec
mov
push
or
mov
shl
push
lods
pop
es
lods
dec
je
jb
mov
add
or
xchg
popa
int
mov
test
mov
(bad)
enter
cwde
cwde
xor
cmp
jo
mov
sar
mov
ret
mov
fstp
div
or
pop
jne
out
pop
or
pop
into
ds
jmp
loop
cmp
ja
and
bt
jae
or
inc
inc
ret
mov
jne
push
arpl
or
neg
push
inc
or
mov
scas
jmp
push
jo
mov
xor
xchg
or
and
sbb
(bad)
retf
ret
fiadd
sub
iret
push
mov
mov
fild
inc
scas
(bad)
cmp
loop
dec
inc
mov
or
inc
adc
mov
rol
mov
stc
mov
rcr
xchg
mov
push
mov
add
sub
add
arpl
jmp
xor
pusha
sbb
ss
adc
inc
xor
mov
aaa
add
sbb
gs
jb
push
in
das
or
pop
or
cmp
sar
shl
ret
icebp
nop
add
xor
test
les
add
add
pop
cmps
cmp
aam
mov
mov
xlat
add
add
ret
xchg
dec
push
xor
jnp
in
sub
xor
inc
daa
imul
inc
push
xor
loopne
jnp
pop
xor
xor
inc
and
mov
(bad)
lea
(bad)
(bad)
pop
sbb
xchg
frstor
test
mov
(bad)
push
dec
push
(bad)
pop
dec
jo
xor
xchg
inc
ins
mov
dec
and
mov
fnsave
dec
xor
cmp
and
(bad)
cli
sub
jecxz
mov
sbb
sti
leave
shl
iret
sbb
pop
or
(bad)
fwait
push
fsub
adc
add
cmp
or
or
inc
inc
mov
adc
cmc
mov
movs
sub
jo
call
adc
cmp
dec
xor
adc
or
cmp
cmp
ins
or
dec
je
xchg
movs
mov
ins
std
ins
push
add
pop
retf
push
sub
sbb
rcl
adc
pop
clc
adc
arpl
fmul
xor
mov
xor
lock
cmps
sub
bound
mov
les
jo
addr16
mov
cmp
xchg
mov
cmp
jno
mov
movnti
add
daa
mov
test
hlt
pop
icebp
adc
lds
adc
jno
inc
clc
push
mov
adc
adc
mov
mov
dec
pop
push
mov
mov
dec
jmp
lea
hlt
pop
mov
mov
jnp
mov
or
push
adc
sbb
inc
gs
dec
push
dec
cmp
and
in
dec
jne
jns
sti
adc
or
inc
out
outs
add
lea
inc
sub
mov
hlt
ins
mov
mov
sahf
cs
sti
inc
push
add
pop
sbb
fucomi
cmp
dec
stc
cld
scas
or
add
lea
mov
div
test
je
xor
adc
sub
lock
sub
mov
dec
das
push
cli
mov
out
cmp
sub
js
std
mov
mov
addr16
inc
pop
loopne
jmp
fdiv
ret
das
dec
jbe
loope
into
push
ins
mov
(bad)
jp
push
mov
cmp
mov
mov
sbb
push
or
lfs
push
add
std
adc
sub
dec
imul
push
and
push
jmp
pop
rol
imul
and
inc
pop
clc
loope
shl
and
xor
mov
adc
add
push
mul
(bad)
sbb
ret
gs
mov
and
jmp
(bad)
imul
add
ficom
cs
push
add
or
retf
and
xor
fistp
js
fiadd
pusha
or
cmp
lea
mov
sub
or
test
sbb
jp
daa
dec
daa
leave
push
leave
xor
jmp
pop
pop
cdq
add
add
adc
jmp
and
(bad)
dec
fs
add
js
test
mov
or
mov
xlat
or
cmps
hlt
loope
add
test
xchg
push
or
outs
or
jge
loopne
imul
loopne
ins
dec
and
inc
popa
add
sbb
int3
cmp
push
cs
cmp
or
jae
adc
push
cs
(bad)
adc
dec
sub
push
add
add
dec
test
push
adc
rcl
test
ret
mov
mov
jo
cmp
test
call
retf
add
inc
and
(bad)
jg
mov
mov
popa
push
cwde
sbb
mov
lea
push
adc
or
inc
bound
popa
aad
call
dec
loopne
ret
(bad)
fimul
retf
inc
sub
fcmove
adc
into
push
ret
fcomp
ins
push
inc
cmp
lea
jmp
cwde
mov
imul
adc
fbstp
mov
std
sub
add
cmp
addr16
daa
mov
adc
adc
test
jo
fiadd
shl
cmp
sub
sbb
popa
movs
cmp
mov
push
sbb
data16
mov
aaa
adc
dec
adc
cmp
outs
inc
(bad)
pop
jmp
cmp
loopne
neg
hlt
mov
aas
cmp
jne
or
adc
pop
inc
test
fs
inc
xchg
jb
push
pop
jns
js
mov
xor
xor
cwde
push
ret
imul
xchg
and
jbe
adc
dec
inc
stos
nop
and
lods
mov
out
or
cmp
sub
test
add
rol
cmps
mov
outs
or
int
data16
(bad)
loop
nop
sbb
adc
in
in
xor
cmps
or
ins
sti
adc
fimul
imul
push
or
push
hlt
dec
xor
lods
cmps
or
xor
leave
ror
mov
dec
movs
sbb
mov
sbb
out
jae
cmp
rol
leave
sahf
mov
jne
adc
je
push
push
adc
xor
mov
icebp
sbb
jne
pop
pop
lahf
or
mov
and
ds
mov
and
add
adc
xor
bound
cmp
sbb
cmps
push
leave
arpl
popa
and
outs
jo
in
adc
xchg
sub
push
jb
xchg
and
aaa
daa
cs
or
test
and
jl
mov
lods
clc
adc
idiv
push
sbb
imul
sbb
add
and
dec
fdiv
and
repnz
aad
adc
and
mov
aad
sbb
dec
sub
cmp
add
or
fadd
add
aas
mov
jne
xchg
xor
sub
fwait
adc
lahf
sub
jle
xor
cld
xor
adc
mov
lods
or
xchg
outs
or
fadd
mov
mov
pusha
or
mov
push
or
ins
inc
cmps
mov
mov
and
jecxz
aam
dec
push
xor
cld
and
mov
pop
sub
pop
les
hlt
sbb
leave
jl
imul
call
jo
mov
xor
fxch
add
fmul
sbb
dec
jbe
mov
je
adc
push
inc
sub
fcomp
dec
or
(bad)
mov
mov
jnp
cmp
jl
push
add
gs
fild
call
adc
or
push
jl
push
adc
ret
dec
mov
adc
dec
cmp
pop
aas
cli
push
retf
or
xchg
jmp
cmp
cmp
push
daa
leave
neg
bound
icebp
push
jb
push
mov
mov
not
into
ret
clc
jne
mov
jmp
gs
push
mov
es
pusha
call
inc
(bad)
or
aam
mov
inc
jg
add
rol
(bad)
(bad)
jmp
mov
aam
(bad)
mov
or
push
jecxz
and
mov
pop
jmp
sbb
in
adc
ss
add
data16
sub
or
stos
jmp
stc
sete
mov
call
cmp
adc
sbb
(bad)
xor
pop
and
stos
dec
sbb
stos
sbb
aaa
add
rcl
add
int
jbe
adc
retf
mov
sub
clc
inc
stos
lea
jae
or
cmp
push
fld
inc
adc
xor
and
mov
pusha
mov
mov
or
push
add
les
push
std
rol
loop
bt
jae
sub
dec
mov
adc
loop
cmp
pop
ja
das
mov
pusha
call
jne
add
hlt
loopne
mov
ret
mov
push
add
xchg
mov
sbb
dec
sub
push
and
dec
mov
and
jo
sub
sbb
jnp
sbb
ins
add
xchg
fist
inc
ins
adc
inc
pusha
add
aas
and
inc
jb
pop
imul
sbb
add
push
pusha
add
push
pop
xchg
push
mov
retf
enter
sub
in
imul
push
add
dec
loopne
sbb
cmp
mov
xchg
fs
in
mov
pusha
pop
inc
pusha
xchg
retf
movs
cdq
inc
push
pop
push
test
jl
pop
dec
mov
and
adc
in
inc
or
and
shl
sub
scas
in
xor
xor
pop
js
ret
sbb
mov
outs
pop
xor
push
ret
mov
jne
daa
or
in
fmul
pop
cmp
pop
pop
mov
loopne
cmp
aam
mov
hlt
std
adc
mov
inc
jno
dec
in
xchg
shl
add
mov
mov
mov
js
cmp
cmp
pushf
mov
or
push
in
and
xor
dec
or
xor
sub
imul
mov
leave
and
sti
jle
call
dec
pop
test
and
mov
fst
and
mov
xor
rol
push
cmp
pushf
or
lahf
pop
pop
sbb
arpl
or
or
test
daa
mov
inc
push
adc
gs
xchg
or
enter
inc
rol
mov
pop
es
or
adc
(bad)
popa
adc
popa
and
mov
xlat
mov
nop
adc
xor
add
mov
pop
outs
retf
ins
add
int3
aas
enter
(bad)
adc
xchg
dec
hlt
sub
mov
sbb
cmps
fidivr
mul
push
test
lods
fadd
lods
push
mov
loop
and
loope
clc
pop
loopne
pop
sbb
mov
test
jb
jmp
push
dec
daa
and
mov
push
mov
fwait
sbb
dec
ret
cmp
xlat
je
mov
pop
mov
jo
cmp
je
mov
pop
jo
pop
mov
daa
subps
xchg
inc
cmp
in
inc
test
adc
fwait
mov
add
jg
or
movs
jo
repnz
pusha
cli
xchg
mov
inc
popa
add
and
aas
mov
cmp
xor
sub
cmp
je
push
rol
dec
mov
xchg
sbb
push
pop
(bad)
push
fs
mov
adc
mov
pusha
or
je
push
outs
push
xchg
mov
je
add
(bad)
lsl
mov
sub
pusha
mov
and
rcr
add
sub
inc
mov
push
pop
mov
ja
pusha
dec
sbb
rol
shl
adc
add
leave
fs
adc
bound
push
mov
add
fimul
fsubp
jmp
jne
imul
fdivp
and
xchg
sbb
inc
(bad)
mov
jbe
mov
push
pop
enter
pop
cmps
cwde
(bad)
push
outs
push
addr16
arpl
movs
repz
cmp
mov
in
pop
sbb
cs
push
xchg
xor
cwde
mov
aam
jle
popa
(bad)
dec
inc
je
inc
fs
sbb
nop
(bad)
shl
sub
fist
cmp
fnstcw
mov
push
add
jmpw
jg
dec
xchg
out
mov
push
xchg
add
addr16
ins
cmp
pop
jecxz
push
in
push
push
test
push
xchg
sbb
in
ds
xor
mov
aam
push
pop
call
and
das
pusha
repz
loopne
nop
les
mov
push
dec
loop
sub
fisubr
clc
ficom
cmp
inc
das
xchg
out
push
test
push
xchg
inc
push
dec
fdiv
movs
repnz
icebp
push
ins
xchg
push
mov
ss
jbe
nop
test
cs
push
sbb
in
test
xchg
pop
das
sbb
push
dec
loop
rcl
sbb
pop
cld
and
out
push
dec
das
cmp
dec
fld
fsub
pusha
jnp
sub
push
cli
data16
idiv
mov
(bad)
aam
push
sub
and
mov
repnz
jmp
nop
add
pop
mov
add
inc
test
push
xor
ja
bound
sub
mov
add
cld
and
or
std
test
ins
ins
jns
or
sbb
dec
add
mov
lock
and
push
fld
loop
std
add
add
add
push
sbb
movs
aad
aaa
sbb
push
inc
mov
xchg
shl
aad
mov
ror
add
cmp
jne
inc
outs
push
ja
inc
jne
cmp
outs
lahf
ret
mov
adc
sbb
dec
dec
dec
jo
sbb
add
add
gs
or
xchg
dec
icebp
add
and
push
pop
sbb
jg
jecxz
imul
iret
push
frstor
add
popa
pop
call
mov
clc
push
xor
mov
xor
aad
and
retf
rol
lea
push
cmp
iret
test
push
fmul
std
xchg
inc
in
sbb
aas
xor
xor
shl
or
sub
sub
fs
xor
pop
lods
add
gs
mov
int
iret
nop
add
push
add
jecxz
pop
or
loopne
mov
icebp
ss
sbb
jl
cli
push
pop
lock
jmp
lods
add
sub
push
and
jno
xor
fcmovb
imul
inc
xor
aam
mov
ret
(bad)
sub
lods
shl
add
inc
aas
clc
dec
dec
mov
bound
js
add
rcl
mov
and
jae
or
loope
jo
mov
mov
mov
mov
(bad)
nop
in
pusha
es
jbe
call
jb
movs
test
fwait
aad
jge
lods
adc
fistp
xchg
cs
pop
xor
adc
ins
clc
adc
rcr
in
inc
test
add
fcom
loopne
xchg
cmps
mov
add
cmp
call
and
inc
addr16
add
call
jecxz
mov
add
add
pop
es
in
add
aas
fcom
dec
adc
jmp
scas
xor
add
cmp
dec
add
daa
dec
add
mov
push
push
inc
or
or
fsubr
add
pop
je
jns
mov
add
gs
xor
retf
cmp
mov
inc
call
add
or
cmp
add
aaa
push
fimul
data16
adc
in
popf
retf
lods
cmps
fst
test
or
pop
adc
cmp
or
cld
mov
clc
jnp
loop
mov
imul
adc
ja
aaa
mov
cmp
icebp
mov
cmc
movs
mov
fdivr
das
sti
add
lods
cli
or
cli
out
and
mov
dec
add
or
mov
dec
pop
in
push
push
aaa
cwde
sbb
adc
in
mov
call
pop
fdivr
push
shr
fcmovnb
fimul
ficom
mov
test
sub
inc
cmc
jae
mov
ins
test
or
pop
push
push
out
loope
shl
and
push
aaa
fsub
mov
or
stos
jne
(bad)
mov
mov
mov
cmp
mul
cmp
jle
sbb
add
add
sti
enter
imul
loopne
popa
aam
xchg
and
out
push
mov
inc
call
nop
popa
in
add
movs
or
cmps
ret
mov
cmps
jne
xor
fcom
sbb
mov
ret
dec
sbb
pushf
dec
not
fcmovb
push
test
test
xor
adc
add
mov
or
push
(bad)
enter
imul
add
jge
fs
pop
mov
stos
or
jmp
sub
rol
jne
push
int3
add
xor
sbb
imul
dec
push
mov
mov
es
enter
add
enter
push
call
outs
pop
movs
loope
sbb
add
add
bound
jbe
add
sub
or
popf
inc
xchg
and
push
pop
dec
adc
in
sub
dec
push
cmp
aas
fsubr
push
test
add
cld
cmp
cmps
ds
ds
cmp
fiadd
xchg
mov
cld
mov
mov
mov
pop
xor
ficom
(bad)
fs
rcr
je
and
mov
ret
xchg
in
fild
icebp
clc
or
mov
pop
(bad)
outs
sbb
push
clc
std
push
retf
mov
adc
mov
jo
loop
xchg
add
xor
(bad)
mov
push
fidivr
mov
dec
cmp
sub
dec
inc
fs
test
inc
mov
add
jmp
bound
test
xchg
imul
or
or
test
jae
scas
adc
and
add
repz
mov
inc
jne
inc
mov
pusha
sbb
pop
mov
(bad)
inc
push
pop
data16
sbb
pop
or
mov
ja
jecxz
cmp
and
mov
sahf
xchg
loop
xlat
call
push
shl
or
sub
fdiv
xchg
jle
xor
jne
xor
or
and
in
sahf
into
pushf
(bad)
sub
inc
ret
mov
and
add
mov
loopne
ret
loopne
test
dec
xchg
gs
xor
dec
fwait
das
cli
inc
test
xor
and
add
mov
mov
jmp
jmp
je
add
and
es
pop
jbe
mov
xchg
add
js
or
inc
aam
ror
or
xor
mov
lahf
into
test
sbb
dec
xchg
(bad)
call
mov
out
mov
add
cmp
clc
or
out
cmp
inc
lods
pop
pop
push
(bad)
adc
lahf
push
adc
xchg
cld
fwait
mov
cld
mov
or
push
sbb
outs
pop
jle
and
mov
adc
js
out
adc
push
not
fmul
push
jmp
sub
xchg
jo
cmp
fiadd
call
adc
in
clc
inc
and
xchg
cdq
or
sub
inc
or
and
inc
adc
or
pop
aaa
inc
mov
pusha
pop
sbb
push
jo
cld
xchg
xchg
pushf
dec
inc
pop
ret
inc
mov
xchg
push
dec
outs
push
cli
inc
or
cld
push
dec
jnp
or
push
mov
dec
push
xchg
push
call
ss
or
movs
mov
adc
test
inc
and
lods
movs
inc
add
dec
mov
inc
clts
mov
or
pop
bound
rcl
mov
out
lods
jmp
out
repnz
push
push
pop
dec
pop
sbb
sbb
adc
push
popa
mov
pop
jg
cwde
hlt
or
call
sub
mov
out
movs
pop
rcl
test
scas
popa
dec
in
add
add
push
adc
mov
push
inc
ret
pop
ja
rcr
xchg
test
test
pop
scas
ret
push
pop
inc
dec
adc
dec
lods
aas
jne
ss
sub
cmp
pop
ins
adc
int3
sub
sar
xor
push
dec
xor
adc
(bad)
push
lods
dec
jge
lods
xor
push
sub
adc
inc
ja
(bad)
imul
mov
push
sbb
jg
fiadd
(bad)
cmp
adc
pop
dec
mov
inc
mov
scas
pop
mov
add
cld
mov
dec
jns
xor
int3
mov
scas
jne
adc
pop
adc
hlt
mov
add
inc
(bad)
adc
fdivr
retf
(bad)
sti
jo
mov
xchg
pusha
cmp
cmp
jb
or
xchg
and
pop
sbb
push
jb
and
pop
dec
gs
push
xchg
mov
adc
ins
fmul
pop
or
mov
pusha
shl
add
push
fisub
inc
sbb
push
xchg
mov
test
es
jae
ficom
mov
lock
fcomp
mov
or
inc
inc
ja
and
inc
sbb
lock
or
pusha
jne
xor
xlat
adc
sbb
mov
fidivr
sbb
ficomp
outs
add
xor
push
pop
ja
add
or
cmp
dec
mul
adc
xor
rol
push
jo
add
mov
cmc
adc
mov
push
loopne
sbb
test
pop
in
loopne
lock
hlt
int3
mov
in
clc
push
xor
adc
add
pop
pop
daa
dec
or
js
mov
mov
sub
and
ret
mov
add
adc
adc
sbb
sub
and
fdivp
dec
inc
mov
retf
fidivr
(bad)
mov
jmp
adc
jne
and
call
add
or
(bad)
fs
mov
test
add
mov
pop
jmp
and
ss
add
jo
inc
add
test
cld
fcomp
dec
add
rol
test
push
aam
push
jae
and
inc
add
mov
nop
dec
or
inc
ss
imul
sub
shr
leave
cmp
sub
or
movs
pop
imul
sub
adc
cmp
aam
out
mov
inc
xchg
in
loope
mov
jb
shl
mov
xchg
sub
cmps
mov
je
inc
add
pushf
and
mov
xlat
bound
push
nop
aad
call
adc
out
sub
adc
pop
je
ins
es
jle
cmp
xor
pop
dec
femms
inc
add
mov
push
lock
push
unpckhps
and
xor
and
nop
sbb
mov
or
adc
sub
xor
int
cli
call
or
call
push
jne
std
loope
mov
pop
lds
fstp
sub
cmps
push
out
daa
cmc
arpl
hlt
push
and
out
mov
dec
cmps
fistp
loope
cmp
outs
jb
lock
nop
add
cdq
mov
push
sub
push
xchg
add
aas
jg
aaa
xchg
pop
pusha
sub
jg
add
cmp
cmp
lock
and
xchg
push
adc
mov
jg
cdq
sub
xor
mov
dec
popa
(bad)
pop
pop
mov
div
popa
cmp
and
aas
test
mov
push
jo
xor
mov
sbb
cmp
ret
inc
sbb
add
mov
scas
jge
adc
or
mov
popa
dec
loopne
or
cmp
ret
pop
or
sub
ret
push
adc
adc
sbb
cmc
add
xor
(bad)
and
call
xadd
repz
cmp
ss
scas
test
inc
jo
aad
adc
cmp
hlt
cmp
sub
jl
or
add
mov
mov
adc
sub
ret
mul
dec
hlt
(bad)
aam
in
lds
and
and
popa
aaa
mov
mov
jno
cmp
leave
bound
pop
adc
adc
loop
mov
push
ins
mov
cmp
ss
clc
lahf
aaa
loop
or
test
lock
cmps
cmp
add
fbld
jmp
adc
inc
ret
inc
imul
sbb
imul
pop
mov
push
jmp
adc
dec
jge
movs
imul
jmp
push
movs
pop
imul
fisttp
cmp
inc
lea
sub
loopne
dec
mov
add
pop
pop
pusha
add
push
daa
arpl
in
or
mov
daa
mov
sbb
data16
fsubr
jecxz
mov
or
mul
test
adc
ror
hlt
ret
ret
mov
lahf
and
jmp
add
mov
out
dec
dec
pop
add
or
dec
mov
test
(bad)
sub
int
mov
inc
retf
push
lods
add
adc
movs
jo
mov
ret
push
dec
call
in
xor
dec
cdq
sti
loopne
fadd
pop
fdivr
add
shl
add
mov
(bad)
cdq
fdivr
dec
add
mov
xor
push
sub
pop
sub
inc
lock
push
mov
loopne
js
pop
dec
cwde
mov
outs
sub
add
adc
arpl
adc
stc
mov
add
cmp
fisttp
jne
add
xor
add
pop
lock
push
fmul
dec
sub
pop
dec
ss
pop
jo
pop
push
enter
mov
push
mov
cmc
mov
add
cmp
iret
leave
add
fadd
lock
and
and
imul
sbb
sti
lock
ins
sbb
push
ret
push
adc
mov
or
div
xor
mov
adc
xor
imul
sub
fdivr
sbb
loopne
or
adc
inc
inc
sub
add
push
fdiv
in
addr16
add
inc
in
aas
xor
shr
xor
or
repz
or
rcl
int3
inc
xor
popa
fld
pop
das
or
jecxz
push
shl
(bad)
jl
cmp
push
sbb
push
fldl2e
adc
bound
sub
jae
add
dec
inc
enter
xor
inc
inc
das
fisttp
add
add
add
dec
push
push
sahf
pop
inc
inc
or
std
inc
mov
jne
out
dec
mov
mov
ja
or
pusha
ret
outs
pop
mov
lock
mov
imul
cmps
pusha
outs
and
xor
and
xor
or
ja
add
jl
mov
sbb
sub
jbe
call
daa
inc
mov
jb
push
push
and
(bad)
js
dec
add
add
push
mov
sbb
sbb
imul
push
test
les
mov
out
mov
lods
in
dec
add
push
or
adc
rcl
enter
jecxz
test
jns
adc
and
(bad)
aam
ins
lods
enter
imul
repz
and
cld
or
add
adc
inc
inc
clc
std
adc
jnp
push
test
jle
call
pop
push
mov
dec
sub
mov
test
test
xlat
xor
and
lock
mov
jae
fcomp
test
push
addr16
inc
cmp
or
ins
mov
jmp
add
inc
aad
sbb
arpl
push
das
neg
aad
loop
push
nop
rdpmc
ja
sub
rol
xor
addr16
mov
sahf
leave
lods
addr16
test
push
pusha
ins
sbb
cmps
addr16
ins
daa
mov
ins
inc
or
push
inc
cmps
pop
pop
pop
jno
cmps
cwde
into
pusha
jns
ja
push
jae
add
(bad)
pop
fisttp
in
addr16
outs
or
in
fs
in
pop
or
in
out
xor
outs
jne
dec
lock
nop
loopne
mov
push
or
dec
cmp
add
fmul
fistp
mov
(bad)
push
add
or
pop
add
inc
mov
xor
push
or
sbb
add
xor
adc
out
sti
mov
push
ret
(bad)
arpl
sub
adc
dec
cmps
push
or
aaa
inc
nop
gs
add
outs
arpl
outs
loopne
dec
arpl
or
mov
add
push
add
shl
inc
mov
arpl
ins
xchg
out
test
jo
repnz
push
nop
imul
addr16
outs
xor
imul
inc
sub
test
inc
inc
jb
mov
or
add
xlat
push
add
jno
nop
push
jae
enter
jno
pop
inc
inc
or
cwde
inc
mov
push
bound
push
mov
ins
mov
or
aam
xor
adc
jg
cmp
nop
push
push
and
adc
clc
jmp
push
pop
mov
inc
inc
lds
inc
push
push
popa
pop
pop
adc
jg
cwde
mov
ins
aas
jb
jo
pushf
mov
pop
push
es
pop
sar
add
and
pop
movs
dec
add
and
push
test
cmps
test
lock
add
dec
test
test
lods
add
lahf
popa
js
daa
cmps
mov
push
inc
sbb
inc
out
add
jo
add
jb
cmp
mov
xor
imul
ins
call
outs
(bad)
xor
and
xor
mov
ins
aad
retf
fistp
or
or
das
test
jo
mov
es
bound
ds
xchg
(bad)
or
fcos
(bad)
dec
loop
test
xchg
loopne
mov
dec
jecxz
sub
pop
movs
ins
add
arpl
or
and
sbb
les
and
nop
stos
fisub
adc
call
or
pop
xor
pop
adc
xchg
stos
ss
jl
dec
leave
adc
push
xor
mov
stos
ins
or
aas
adc
sub
dec
scas
adc
loope
or
dec
add
sbb
inc
pop
sbb
xchg
sub
sbb
fcmovnu
fs
pop
dec
adc
mov
xchg
adc
fild
pop
nop
or
adc
shr
add
shl
imul
dec
cmps
call
and
inc
and
movaps
loope
sbb
fistp
adc
jb
xor
push
and
in
daa
sub
xchg
adc
imul
xor
sub
jb
jb
cs
dec
xor
or
push
ins
or
das
nop
or
ins
xor
add
in
add
and
stos
cs
inc
inc
into
out
adc
inc
inc
pop
and
clc
sbb
gs
inc
inc
inc
mov
cs
adc
pop
add
inc
cmps
int3
lock
inc
inc
inc
cmp
scas
cs
inc
inc
(bad)
cld
and
adc
pop
inc
imul
xchg
test
ret
adc
out
mul
(bad)
cmp
es
enter
lahf
rcl
js
add
int3
lods
das
jl
xchg
push
xchg
aad
mov
mov
hlt
cmp
or
nop
lods
addr16
push
cmp
add
add
jl
jnp
or
dec
or
fisttp
loop
sbb
xor
int3
lods
ins
pop
push
mov
add
pop
sar
test
pop
pop
pop
add
mov
cmp
and
jo
or
pop
and
test
push
inc
fsub
pop
jl
jnp
dec
pop
or
xor
aas
pop
xchg
mov
and
jg
jbe
xchg
(bad)
jns
mov
leave
inc
xor
out
lock
mov
dec
outs
pushf
mov
push
and
out
or
inc
cmp
dec
xlat
jbe
rol
xor
mov
sbb
dec
sub
mov
add
or
dec
or
mov
adc
xor
inc
repz
shl
add
or
inc
and
adc
cmp
repz
jne
cmp
test
mov
and
add
das
mov
mov
rcl
imul
lea
inc
jne
ja
adc
jo
push
mov
dec
shl
pop
ret
(bad)
jo
xor
gs
js
gs
xchg
pop
xlat
jo
or
xchg
push
or
movs
adc
and
scas
jg
in
adc
js
call
and
mov
mov
add
repz
mov
push
mov
lock
add
or
mov
inc
repnz
sbb
xor
pop
mov
imul
or
mov
jbe
inc
fist
(bad)
pop
ret
inc
test
cmp
(bad)
mov
shl
dec
mov
fadd
test
mov
das
fiadd
inc
fdivr
add
cmps
or
add
cmp
mov
mov
add
push
inc
test
xchg
out
or
inc
test
add
add
idiv
and
inc
mov
loope
or
xchg
mov
test
xchg
pop
out
add
push
sbb
and
jns
mov
sbb
shr
xchg
dec
xor
ret
sbb
dec
sbb
adc
push
cmp
mov
add
sbb
sbb
repz
or
jl
cmp
jae
lahf
or
hlt
mov
and
sbb
cli
xor
pop
jno
hlt
je
fwait
sub
pop
and
inc
dec
mov
add
cmp
dec
or
scas
add
add
out
adc
ja
daa
mov
ret
ds
and
push
shl
sub
jp
cdq
xor
test
pop
mov
les
sub
sub
cwde
pusha
add
adc
sub
sub
push
and
retf
das
pop
push
or
xchg
loopne
movs
or
sub
or
xor
xor
in
inc
or
daa
add
mov
jb
test
por
or
add
les
inc
aam
inc
daa
fst
(bad)
sti
lds
mov
sub
pop
dec
push
dec
pop
clc
inc
arpl
cmp
setae
push
sbb
inc
add
cmp
ins
dec
xor
jge
ror
add
jg
aas
xchg
cmp
pop
push
hlt
inc
sub
add
aad
pusha
stos
jb
test
clc
xor
mov
sbb
fadd
pop
stos
in
aam
inc
mov
inc
inc
aad
push
leave
push
xor
dec
bound
inc
sbb
inc
push
mov
ror
xchg
ret
mov
shl
dec
add
add
dec
dec
dec
sbb
cmp
aad
and
rol
sub
ret
rcl
or
pop
jo
push
push
or
in
or
pop
jno
pop
push
fst
loopne
stc
lea
or
xchg
xchg
xchg
outs
xchg
mov
xchg
xchg
xchg
retf
add
xchg
xchg
xchg
xchg
mov
xchg
retf
and
xchg
xchg
mov
(bad)
and
inc
imul
xchg
mov
call
or
xor
jb
fs
fs
pusha
xchg
(bad)
jmp
dec
fs
xchg
mov
jb
mov
inc
addr16
fs
mov
fs
push
ja
lock
mov
ds
shr
jno
sub
test
imul
push
outs
scas
icebp
sub
adc
bound
or
mov
or
in
sbb
jo
rcl
inc
mov
fistp
out
mov
ds
push
xchg
das
cmp
lods
xchg
mov
mov
cld
ror
inc
mov
push
sar
sub
push
xor
pop
add
dec
adc
dec
cmp
(bad)
adc
cmp
inc
pop
popa
je
add
mov
loope
inc
jnp
lds
ret
or
pop
xchg
retf
lods
jne
lods
or
jae
push
sbb
dec
sar
cmc
add
push
cdq
add
iret
imul
jo
stos
xor
and
mov
push
and
mov
les
add
out
pop
sub
inc
and
neg
outs
dec
loope
fwait
push
pop
cmp
and
mov
mov
sub
popa
loope
mov
js
dec
daa
or
adc
sub
mov
adc
sbb
or
mov
push
loope
sub
dec
sub
pop
adc
iret
jo
loop
paddw
adc
out
test
inc
cmp
fwait
cmp
inc
jb
xchg
add
in
mov
arpl
dec
and
and
add
add
lock
pusha
adc
outs
outs
fnstcw
cmp
das
int
mov
sbb
adc
push
pop
jmp
cmps
push
pop
and
fs
fs
jbe
(bad)
cmp
xchg
mov
xor
xchg
mov
loope
xchg
popa
xchg
or
jbe
cmp
movs
mov
dec
pop
cmc
push
adc
sbb
mov
adc
inc
test
pop
mov
std
push
test
xchg
sar
mov
push
ror
shl
mov
nop
in
pop
adc
adc
sub
dec
sub
cs
or
xchg
xchg
mov
lahf
xchg
mov
or
adc
inc
cmp
sub
cmp
xchg
pop
sar
inc
pop
(bad)
xlat
test
push
repz
call
dec
push
mov
(bad)
adc
aad
push
inc
movs
xchg
jae
mov
dec
or
inc
movs
inc
ja
fcom
push
and
mov
(bad)
shr
mov
les
cmp
mov
sub
lea
sbb
add
dec
pop
nop
push
test
adc
outs
mov
xor
mov
fdiv
lods
xor
jae
xor
stos
xchg
into
add
fwait
inc
fdiv
inc
or
cmp
add
mov
sub
add
or
in
into
enter
in
xchg
retf
fwait
(bad)
fistp
iret
jecxz
add
loope
jge
add
xchg
xor
loopne
das
cs
adc
sbb
clc
mov
fcom
test
jbe
sahf
add
sbb
dec
scas
pop
jo
in
retf
les
bound
clc
mov
dec
xchg
sub
ret
retf
js
adc
inc
js
pop
add
popf
pop
sub
ja
push
cmovbe
xor
adc
call
sbb
sub
dec
ror
dec
clc
cmp
push
icebp
jns
fistp
dec
mov
mov
ror
ret
mov
leave
add
aad
(bad)
and
(bad)
aaa
pop
popf
adc
add
lahf
cdq
cmc
shl
push
cdq
jge
or
sbb
retf
pusha
jno
jg
or
jns
(bad)
push
and
adc
call
nop
sbb
cmps
adc
or
es
popf
into
ins
jbe
fwait
pop
and
sub
mov
xchg
lahf
daa
inc
cmps
add
and
(bad)
outs
sbb
adc
(bad)
icebp
cwde
dec
add
xchg
sub
push
(bad)
ror
adc
and
adc
xor
adc
cmps
mov
inc
add
test
gs
mov
stos
or
sbb
mov
sbb
test
push
rcr
outs
adc
pop
push
mov
stc
pop
and
popa
loopne
and
cmp
add
mov
repnz
stos
lea
add
daa
mov
sub
or
sub
mov
psrad
sbb
in
add
add
and
enter
ss
aaa
xchg
pop
push
or
cmp
mov
cdq
shl
in
enter
test
mov
loop
pushf
popa
or
and
lahf
(bad)
and
and
xchg
xchg
and
and
and
and
xchg
mov
fdivr
daa
lahf
dec
and
and
jno
mov
and
mov
mov
adc
jnp
popf
loopne
jae
cmp
pop
or
push
scas
push
and
push
retf
in
xchg
cmps
sub
movs
push
mov
int3
retf
push
daa
cmc
mov
add
xor
mov
xchg
pop
movs
jmp
jnp
dec
sub
add
(bad)
sub
mov
mov
sahf
mov
add
or
test
or
loopne
sbb
sub
loopne
in
push
xchg
pop
xchg
cmp
fsub
sahf
nop
out
or
jo
or
dec
lock
jl
clc
imul
pop
loopne
mov
sti
icebp
in
call
dec
cmp
pop
hlt
push
pop
push
(bad)
adc
jg
inc
std
sahf
dec
jb
out
push
in
cwde
mov
dec
or
cli
and
or
dec
inc
invlpg
int3
jle
xchg
push
xchg
xor
inc
inc
push
inc
or
dec
push
inc
or
mov
adc
ss
mov
mov
(bad)
adc
inc
adc
inc
pop
dec
data16
add
push
rol
imul
std
pop
cwde
add
push
pop
sbb
or
add
or
outs
daa
or
bound
mov
or
mov
mov
(bad)
pop
aaa
jl
pop
in
jmp
cmps
sub
mov
sbb
xchg
lods
mov
adc
push
cmp
aaa
xchg
and
or
xor
jg
cmp
mov
cmp
mov
je
push
jle
test
jle
arpl
or
adc
mov
dec
and
dec
push
adc
stc
fstp
fwait
cmp
sub
je
ret
xchg
scas
ror
mov
lods
div
xor
jmp
sub
(bad)
xchg
pop
and
mov
ja
mov
call
jge
xor
and
pop
jg
sub
sar
shr
and
(bad)
rol
enter
push
cmp
add
cmp
pop
push
aam
mov
lods
inc
mov
cmps
add
add
mov
add
rol
mov
sub
dec
and
inc
test
and
das
call
ret
in
adc
cwde
push
mov
pusha
retf
jmp
icebp
imul
pop
pop
aas
jne
or
push
push
and
and
imul
jo
or
lds
nop
push
push
sbb
mov
arpl
and
jbe
adc
fld
xchg
fcomp
sub
add
push
call
pop
fsubr
sti
and
cmc
and
push
iret
mov
mov
test
sub
inc
mul
sub
jle
push
xchg
rol
cmps
imul
xchg
and
pop
mov
cmc
or
xor
mov
cmp
mov
or
jl
adc
lsl
jl
jmp
add
push
cmp
add
sub
jmp
adc
xchg
add
pushf
(bad)
and
lods
dec
mov
sub
ret
jbe
push
rcl
icebp
add
mov
(bad)
push
aam
sub
cmp
mov
addr16
imul
addr16
shl
cmp
inc
rcr
push
cmp
ins
sub
cmp
sbb
lea
daa
stos
out
pop
pop
or
sub
rol
inc
or
jmp
xchg
cmp
cmp
retf
sub
lea
jge
xlat
cmp
jnp
xadd
seta
inc
dec
enter
or
in
int
or
push
in
xor
or
add
add
xchg
add
mov
or
repnz
ja
sub
scas
xchg
sub
inc
aaa
mov
pop
mov
push
xor
mov
pusha
enter
mov
adc
add
jne
and
(bad)
and
xor
inc
or
sub
sub
jg
push
push
dec
sar
push
cmp
jl
push
jno
rcr
push
jl
mov
pop
xchg
add
and
sbb
cwde
xor
jne
mov
int
nop
mov
(bad)
in
push
sub
mov
add
add
push
push
loopne
pusha
adc
mov
push
jmp
xchg
or
xchg
jns
dec
inc
mov
mov
inc
fiadd
push
loope
in
fisttp
jae
arpl
adc
cmp
or
push
mov
add
fsubr
add
jle
fld
or
dec
push
sahf
add
sbb
leave
add
add
lea
sar
add
xor
push
arpl
jne
shr
adc
cmps
xchg
jmp
movs
dec
cmps
fcomp
push
cmp
push
ins
inc
cwde
add
lock
mov
mov
push
fisub
jae
ficom
xor
inc
dec
mov
inc
or
add
xchg
aam
loopne
cmp
mov
inc
loopne
repnz
or
sbb
dec
inc
js
test
dec
imul
loope
test
push
mov
cmp
mov
inc
sub
push
outs
inc
inc
(bad)
adc
pop
mov
xor
adc
mov
push
stos
xor
and
mov
or
inc
sub
ja
push
pop
mov
movs
out
pop
int3
pop
sub
xor
add
mov
rcr
(bad)
movs
je
add
nop
in
loope
xchg
xchg
or
and
cmp
dec
add
cmp
ja
add
in
ss
add
inc
mov
mov
or
adc
add
ror
mov
movzx
or
add
cmp
sbb
add
jno
add
jb
dec
and
popa
add
das
pushf
jmp
push
mov
mov
or
adc
jne
lock
mov
jne
imul
inc
loopne
aas
in
pop
or
cmp
lea
mov
outs
dec
xchg
push
xchg
mov
pop
sbb
mov
popa
inc
mov
call
test
adc
mov
xchg
push
fisttp
dec
leave
sahf
adc
sbb
and
pop
pop
mov
sub
dec
mov
add
mov
ins
or
push
inc
sub
xlat
pop
and
jl
(bad)
jns
mov
adc
push
call
inc
mov
push
clc
cmp
or
hlt
lahf
mov
scas
pop
lock
std
adc
sar
sub
fistp
(bad)
mov
xor
mov
mov
mov
sbb
cmp
or
push
leave
out
ds
in
je
mov
jo
mov
mov
data16
mov
test
rol
or
jno
push
in
mov
add
dec
mov
hlt
jns
xor
and
mov
and
add
adc
scas
adc
inc
or
pop
pusha
add
pop
add
jns
inc
adc
pop
mov
loope
(bad)
adc
not
add
rcr
sub
inc
sub
adc
sub
adc
xchg
es
cmps
mov
popa
popa
cs
jne
add
push
dec
adc
add
inc
add
sar
fwait
jae
push
ins
add
cmp
mov
stos
xchg
xlat
or
out
pusha
xchg
out
test
and
and
fsubr
sbb
jb
add
rol
xchg
or
sti
or
push
mov
dec
pusha
hlt
mov
ficomp
push
jne
mov
sbb
lock
add
test
push
or
or
adc
jo
(bad)
lea
gs
mov
mov
pop
push
and
pop
pop
add
loopne
xchg
or
scas
nop
(bad)
mov
nop
mov
mov
(bad)
xchg
scas
and
sar
nop
inc
push
je
inc
add
xchg
popf
call
and
sub
aaa
xchg
mov
(bad)
jg
mov
rcl
cmps
call
scas
clc
mov
cdq
add
inc
cld
jmp
lock
in
xor
fmul
inc
mov
push
cmp
stos
and
or
in
cmps
test
test
outs
hlt
jne
sub
cmp
fidiv
push
jmp
cmp
jbe
aas
cld
fstp
or
sub
mov
push
test
loope
dec
arpl
lods
cmp
or
jmp
xor
adc
jns
push
mov
inc
imul
cmp
jo
mov
sub
lock
and
lea
popa
loope
inc
or
add
jne
mov
inc
or
sub
arpl
cmp
out
or
ret
mov
scas
pop
sbb
(bad)
mov
add
movs
mov
xchg
aaa
addr16
retf
xor
pop
cmp
lock
sub
inc
dec
mov
push
inc
add
clc
mov
or
loopne
sub
adc
inc
push
sbb
and
mov
and
mov
xchg
jbe
inc
aad
push
shl
lahf
or
add
and
out
jmp
sub
mov
and
call
adc
and
pop
in
(bad)
outs
cmps
pushf
mov
jge
push
mov
jae
add
shl
inc
dec
clc
leave
sar
pop
clc
lea
mov
add
push
rcr
and
mov
jg
cmp
cs
ret
lock
add
ja
imul
cld
lock
das
scas
je
scas
test
pop
and
lods
jno
imul
(bad)
or
pop
js
outs
inc
sub
mov
sbb
dec
mov
cmp
or
fst
popa
cmp
and
call
clc
loope
sbb
cmp
je
sbb
adc
mov
cdq
ret
and
push
fisub
mov
pop
lock
pop
cmp
xor
inc
jmp
inc
rol
add
xor
and
outs
int
ror
or
mov
mov
mov
mov
mov
es
pop
pop
frstor
int3
retf
xchg
test
lock
jnp
xor
mov
mov
inc
pusha
xor
dec
mov
xchg
xchg
jp
jno
retf
ins
mov
pusha
jmp
sti
(bad)
jmp
pusha
or
mov
adc
pop
add
sbb
xchg
cmp
cmp
pop
(bad)
mov
fcomp
push
pop
xchg
stos
adc
shl
push
inc
sub
mov
lods
mov
sar
mov
cmp
push
jo
shl
fdivr
or
push
pop
add
adc
adc
add
loope
push
cmp
adc
push
aas
adc
pushf
sbb
or
movs
cmp
shl
jns
in
repnz
call
sbb
mov
mov
cdq
cmp
jge
jg
inc
add
lods
inc
push
neg
ja
imul
xchg
mov
aad
pop
cmp
test
dec
or
add
or
stc
add
jb
inc
fadd
pusha
add
xchg
and
xchg
stos
dec
dec
or
js
sub
pop
test
xchg
jno
test
das
imul
push
rcr
pusha
int
push
xor
ror
rol
in
sbb
cmp
adc
sar
pusha
add
add
add
ins
nop
mov
nop
xor
in
mov
add
pop
add
adc
loopne
jo
mov
nop
nop
mov
cmp
ins
mov
xchg
sbb
jo
cmp
pop
or
and
pop
push
pushf
(bad)
je
dec
pop
mov
mov
ins
pop
sbb
xor
mov
fld
add
nop
pop
lahf
add
daa
in
jmp
xchg
fs
dec
rol
jmp
addr16
loop
jmp
dec
jbe
adc
loopne
add
ret
jp
cmp
jp
mov
pop
pop
daa
imul
mov
and
fsub
and
es
adc
or
add
lea
inc
jg
mov
xchg
ds
add
inc
retf
add
and
movs
(bad)
fcomp
push
xchg
pop
clc
mov
rcr
inc
mov
test
dec
cmp
jle
adc
cmp
inc
imul
xchg
pop
scas
adc
jo
dec
dec
inc
cmp
das
add
sub
mov
add
add
pushf
xchg
inc
inc
push
xchg
adc
in
and
iret
jmp
and
icebp
std
or
mov
mov
leave
fldenv
add
jo
syscall
xor
neg
inc
pop
sbb
dec
loopne
push
push
scas
mov
add
clc
fimul
sub
pop
dec
mov
movs
inc
or
sbb
sub
add
sub
retf
aas
inc
add
adc
adc
or
sbb
xchg
jb
mov
loopne
add
xchg
adc
or
(bad)
gs
xor
pop
retf
retf
mov
dec
dec
add
xchg
inc
ja
rol
xchg
shl
not
lahf
sbb
loope
cld
add
dec
loopne
(bad)
hlt
mov
sbb
mov
test
dec
fs
aaa
sub
sub
mov
or
or
int
or
ucomiss
pop
imul
inc
push
out
pop
or
nop
xchg
lock
out
mov
adc
loopne
mov
xor
or
xchg
xor
and
loopne
cmp
pop
dec
(bad)
in
pop
xchg
rcl
movs
mov
inc
jge
dec
dec
add
mov
lea
add
mov
xchg
or
test
jne
add
mov
aaa
lock
mov
sub
dec
jmp
sbb
lds
adc
fiadd
test
mov
enter
adc
push
xor
mov
add
mov
add
lahf
sbb
ss
(bad)
shr
xlat
scas
loope
and
dec
mov
iret
cmp
loopne
lds
cmp
(bad)
dec
add
adc
push
cs
mov
xchg
add
pop
(bad)
mov
add
add
js
imul
push
add
xchg
cmp
dec
add
add
lahf
push
xchg
rcr
pop
iret
cmp
sub
test
or
pop
and
jecxz
cmp
jl
adc
cmp
push
inc
or
pop
call
inc
or
(bad)
fsub
push
jmp
call
dec
push
mov
(bad)
imul
mov
xchg
pop
and
cmp
sub
mov
jbe
mov
mov
jmp
dec
cmp
fcmovnu
push
dec
sub
sbb
cmp
dec
jg
and
add
jmp
push
call
lock
ss
or
jcxz
cmps
arpl
and
cmp
sub
ds
retf
push
pop
fidivr
xor
ror
enter
inc
dec
xchg
cmps
in
mov
or
mov
(bad)
retf
lods
dec
adc
pop
clc
jg
or
rcr
inc
cmp
test
int
out
imul
sti
dec
jne
call
test
xor
jo
in
inc
mov
clc
mov
dec
mov
cmp
out
data16
mov
pop
shl
mov
xor
stos
mov
out
or
ror
mov
mov
inc
fild
movs
cmp
mov
sar
and
test
jge
jle
or
fmul
sub
call
shr
movs
add
mov
push
push
jo
adc
add
clc
cmp
pop
inc
pop
add
js
pop
sbb
jnp
sar
call
add
or
inc
cmp
mov
lods
nop
jl
adc
imul
test
or
or
xor
push
das
jne
sub
adc
add
inc
add
lar
fadd
push
and
xlat
or
loope
test
(bad)
(bad)
add
je
jbe
push
jg
mov
je
adc
aad
aad
sbb
sbb
jmp
add
mov
imul
out
jmp
dec
cwde
cwde
lahf
dec
loopne
dec
mov
std
andnps
cmp
jmp
pusha
mov
push
add
add
gs
adc
adc
xor
xor
dec
js
les
and
jg
add
cmp
loopne
jl
push
loop
push
mov
shl
pop
mov
scas
inc
add
inc
add
stos
sub
push
sub
and
jmp
out
dec
jmp
add
push
add
sbb
adc
sbb
inc
push
wrmsr
outs
aad
pusha
and
fs
add
ins
outs
sbb
sub
or
adc
(bad)
add
arpl
push
outs
ins
bound
nop
adc
sbb
inc
call
jb
clc
mov
or
pusha
cwde
ret
xchg
mov
jns
adc
add
mov
mov
pop
rol
and
or
xor
and
or
fld
and
les
adc
je
les
jo
sub
(bad)
into
or
mov
jo
jb
ret
(bad)
cmc
movs
inc
or
je
jae
adc
jo
push
inc
jbe
or
pop
xor
pop
mov
xor
adc
add
out
ss
pop
imul
cmp
xchg
out
sbb
dec
addr16
and
sub
cmp
adc
jo
sub
adc
sbb
mov
lock
adc
popa
adc
enter
mov
imul
or
and
je
sub
xchg
les
add
les
int
mov
ret
imul
fidivr
shl
inc
not
gs
push
outs
rcl
test
xchg
push
or
inc
adc
or
movs
adc
(bad)
retf
push
add
jbe
or
hlt
add
or
sbb
or
inc
jno
sbb
and
push
adc
sbb
mov
sbb
inc
jecxz
xor
ficomp
das
fistp
pop
shl
xlat
test
or
mov
lods
not
sbb
add
ret
iret
pop
aaa
mov
mov
ret
sbb
mov
mov
sub
lds
pop
sub
test
mov
in
movs
ss
rol
jbe
xor
ret
and
fs
xor
(bad)
xor
aad
sub
int3
out
cmps
mov
xor
jae
sbb
jb
adc
fwait
movs
leave
or
daa
in
add
adc
and
adc
sbb
dec
or
pop
sub
movs
loope
inc
ins
jns
push
mov
aaa
sub
lods
ss
xor
adc
xchg
in
rol
mov
xchg
push
ret
(bad)
fstp
dec
fsub
aas
and
xor
ror
es
es
fst
and
add
xor
ss
adc
sbb
pop
add
repz
dec
jo
outs
sub
frstor
push
retf
or
test
outs
pop
xor
pusha
enter
sbb
push
sbb
mov
or
pop
adc
mov
push
adc
sbb
enter
sbb
imul
inc
jb
mov
cmc
inc
jo
pop
push
xchg
xchg
xchg
mov
sbb
pop
daa
lea
pop
xor
push
xchg
pop
test
adc
mov
sbb
mov
lods
mov
push
mov
and
sbb
inc
xor
adc
test
sub
cmp
xor
aad
adc
inc
or
or
sti
xchg
and
pop
xchg
adc
sbb
push
or
mov
push
pop
stos
mov
fldenv
sbb
sbb
adc
pusha
and
mov
pop
in
mov
xor
and
push
jecxz
jb
or
daa
data16
add
dec
(bad)
into
fcomp
push
aad
push
push
xor
ins
fcomp
mov
leave
or
mov
push
movs
mov
sbb
adc
imul
inc
test
fistp
out
jge
push
push
les
adc
jmp
dec
cs
push
and
mov
xchg
das
adc
cmp
sub
sbb
cmp
add
test
fsubr
pusha
ret
push
in
in
pop
xor
xor
mov
lods
outs
imul
add
das
sub
mov
pop
push
adc
sbb
arpl
jnp
and
jbe
fcomp
adc
ret
mov
push
imul
ja
aaa
mov
xor
sbb
adc
add
ins
cmp
dec
sub
inc
pop
push
stos
aaa
xlat
add
sbb
inc
jne
inc
outs
mov
imul
sbb
stos
daa
test
add
sar
jns
or
pushf
fisubr
jo
outs
bound
push
and
mov
movs
test
or
test
daa
jnp
mov
ins
adc
fwait
and
adc
mov
jmp
popf
sbb
popa
jb
sub
sbb
push
in
xchg
and
(bad)
sbb
or
into
or
shr
scas
imul
push
mov
sbb
cmps
adc
ret
fadd
sbb
pop
ja
ins
mov
cmps
mov
mov
xor
mov
or
and
inc
pusha
inc
xchg
lea
and
jmp
popa
adc
ss
fsub
sti
sar
inc
sti
push
lods
popa
adc
sbb
ins
loopne
sbb
push
ror
and
xor
sbb
inc
test
stos
pop
lods
push
xor
shr
aaa
int
sbb
mov
dec
aad
xor
xchg
call
inc
enter
push
push
xor
bound
ja
cmp
push
jae
pop
ins
dec
xlat
iret
jo
cmps
adc
enter
in
loopne
test
ins
inc
fsub
cmps
les
std
push
je
pop
pusha
(bad)
cmc
std
inc
retf
mov
push
xor
xchg
or
mov
mov
sub
test
fld
push
imul
(bad)
ret
daa
inc
sub
inc
adc
push
or
ss
sub
outs
xor
and
or
imul
sbb
sbb
ins
sbb
inc
lods
popa
jo
sbb
or
xor
(bad)
xor
cmp
or
shl
out
pop
shr
aaa
cmp
xor
xor
adc
adc
sbb
or
sbb
push
xor
ja
les
aaa
ret
xor
add
scas
aaa
pop
nop
add
mov
pop
aam
(bad)
loop
ss
out
js
aaa
inc
pop
cmps
ins
and
sbb
adc
push
add
imul
es
jb
ret
jae
push
sub
sub
das
dec
pusha
inc
test
and
pusha
jbe
movs
imul
imul
in
adc
sbb
gs
sub
xor
mov
das
shr
jmp
add
xor
addr16
ror
(bad)
das
sbb
mov
retf
push
sbb
sbb
dec
ja
nop
pop
sub
in
xchg
sbb
xchg
retf
imul
ins
test
ins
les
leave
sbb
sbb
fiadd
aas
jns
cmp
mov
xor
cwde
push
mov
sub
ins
or
imul
fdiv
bound
test
push
cmp
jnp
lahf
sbb
popf
push
xor
sub
mov
dec
and
addr16
ins
outs
xor
pop
xchg
fsub
sub
in
xchg
mov
cs
xor
add
jb
lods
jge
ins
ja
and
pop
dec
imul
pop
adc
sub
inc
test
sub
sub
cmc
cwde
out
loopne
cmps
push
aas
repz
xchg
fcom
lods
adc
mov
mov
push
call
sbb
sbb
push
adc
inc
daa
push
mov
mov
push
sub
push
fstp
adc
cmp
cs
jo
sbb
jge
test
mov
sub
ins
bound
add
and
sbb
pop
mov
fwait
and
mov
push
push
lods
data16
xor
loopne
jno
sub
outs
push
loope
test
mov
push
jl
outs
daa
sbb
not
in
popa
mov
mov
ror
or
mov
clc
cmp
ins
pushf
addr16
push
or
rcr
mov
test
adc
adc
or
cmc
xor
inc
gs
loopne
ins
ret
daa
and
je
push
jecxz
(bad)
adc
cs
imul
adc
xchg
(bad)
mov
xor
ins
and
xchg
int
stos
(bad)
adc
inc
int
dec
ret
sbb
test
jmp
aas
icebp
inc
and
and
mov
add
xor
or
cmps
cdq
daa
dec
cwde
and
fiadd
and
and
add
inc
mov
pop
arpl
cmp
or
and
cmps
pusha
rcr
jl
inc
mov
ror
mov
adc
es
sar
mul
dec
sbb
rol
rcr
or
inc
or
cmps
and
sub
rcr
leave
push
frstor
push
dec
add
fmul
lods
sbb
sub
pop
mov
ins
jmp
add
add
xchg
sub
xchg
or
lock
lods
fisttp
add
lea
fild
pop
or
loop
imul
mov
cld
mov
mov
mov
mov
rol
and
sub
mov
outs
and
sbb
add
ins
lods
adc
aas
or
test
mov
stos
sub
sbb
sbb
sti
mov
sbb
dec
outs
popa
aaa
adc
sub
std
and
adc
daa
shr
xor
add
mov
and
imul
cmp
dec
jae
sbb
cmovns
inc
ins
pop
or
daa
pop
sbb
adc
jge
mov
add
sbb
mov
cmp
je
or
inc
xchg
jb
mov
xor
not
xor
daa
push
adc
loope
push
jne
(bad)
nop
fcom
push
sub
cmps
pop
push
xchg
push
pop
adc
daa
sti
sub
nop
or
(bad)
mov
sub
ss
pop
imul
ins
mov
sub
add
mov
add
(bad)
aaa
in
loopne
mov
xor
daa
dec
ror
push
push
bound
jo
push
pop
ins
and
mov
sub
pop
das
jo
shl
xor
mov
sbb
push
dec
retf
inc
pop
cmp
mov
sub
or
stos
fdiv
and
adc
cmps
cmp
ds
leave
aam
cmps
arpl
xchg
fcomp
cmps
daa
inc
push
outs
or
push
imul
jl
xchg
pusha
adc
daa
mov
push
sbb
ret
addr16
or
sbb
sbb
push
inc
pop
in
cwde
sbb
push
sub
jns
xor
sbb
popa
jae
push
daa
rcr
stos
addr16
and
push
push
out
daa
and
fld
mov
or
aaa
mov
sbb
imul
pop
mov
bound
pusha
cmps
ja
aaa
sbb
ss
inc
dec
ror
adc
dec
xor
repz
and
and
mov
(bad)
out
rol
and
mov
not
cwde
mov
push
fild
xlat
sbb
xor
mov
sub
outs
test
fisub
or
sbb
adc
popa
cmp
fs
xchg
or
inc
mov
sub
stos
outs
dec
sub
and
movs
and
outs
inc
ret
cmp
xchg
adc
(bad)
fld
adc
or
outs
bound
sbb
inc
arpl
shr
or
fadd
xor
and
jg
imul
mov
and
push
and
mov
dec
xor
enter
dec
popa
jae
rol
cwde
ja
popa
jae
popa
outs
and
dec
and
inc
arpl
and
ins
ins
and
xchg
xchg
xchg
enter
xchg
xchg
jo
stc
inc
imul
inc
fs
jns
push
outs
push
outs
das
dec
or
push
outs
mov
ja
ja
and
and
loopne
jae
and
movs
mov
pop
and
sbb
popa
and
leave
es
ins
jns
sbb
adc
(bad)
repz
(bad)
sub
das
sbb
mov
mov
push
sub
mov
and
test
sar
(bad)
mov
adc
push
int3
xor
nop
imul
daa
(bad)
sbb
or
das
pop
adc
adc
psubq
and
or
and
arpl
sbb
movs
push
test
fadd
mov
push
pop
push
pop
rol
jnp
and
cmp
ds
sbb
inc
sbb
shl
jge
and
aas
sub
or
sub
fs
inc
ss
lea
or
cmp
mov
int3
sbb
and
ins
pushf
shl
das
fsub
xor
pop
sbb
popa
ins
adc
iret
push
sub
and
pop
adc
ror
es
pop
ret
or
in
push
das
xlat
and
icebp
add
loopne
sub
imul
xor
push
out
clc
or
and
add
jbe
sar
pop
adc
adc
and
stos
jb
dec
ins
or
sub
loopne
sbb
ins
add
or
pop
mov
leave
fldenv
adc
xchg
aas
pop
dec
cmp
jb
sbb
fld
mov
xor
sub
pop
inc
xor
pop
sbb
ins
or
and
pusha
xchg
mov
gs
cmp
adc
cmp
test
ins
ins
add
out
push
ins
jne
daa
sub
xor
jle
adc
in
inc
push
and
pop
mov
xor
and
adc
aad
fld
add
inc
je
dec
(bad)
inc
mov
rcr
daa
adc
sub
dec
pusha
xor
inc
sub
stos
or
xchg
fcom
sub
addr16
sub
sub
les
and
ret
addr16
lock
jno
adc
mov
jns
loopne
mov
imul
mov
je
nop
fcom
sub
and
pop
or
cmc
sub
(bad)
popf
sub
mov
dec
cmps
add
sub
jae
je
jb
push
pusha
add
push
adc
lds
vcvtsi2ss
or
push
mov
test
adc
jae
bound
test
mov
pop
pop
jecxz
jecxz
sbb
test
(bad)
inc
sub
ins
adc
mov
ss
sub
mov
jecxz
dec
sub
and
jecxz
lea
fdiv
shl
push
xor
and
adc
test
sub
or
fdiv
stc
shl
daa
lds
adc
xchg
add
pusha
cmc
and
hlt
repnz
or
lea
jecxz
push
or
sub
pop
sbb
or
fidiv
cmp
rol
sbb
xlat
sbb
imul
movs
pushf
clc
mov
push
mov
outs
neg
adc
div
leave
and
jae
or
jae
xor
sbb
and
jae
jae
inc
xor
jae
or
push
pop
je
dec
pop
mov
(bad)
out
es
jo
ret
movs
mov
xor
add
sbb
shl
je
popa
add
jae
pop
ja
aam
sbb
aad
xor
mov
das
adc
imul
adc
pop
jne
movs
fmul
cmp
arpl
movs
mov
inc
or
push
adc
jecxz
imul
sub
sar
call
or
rcl
outs
cdq
sbb
popa
mov
inc
xor
aad
arpl
out
xor
xor
icebp
adc
inc
mov
or
inc
ror
popa
jb
inc
push
adc
pop
pusha
and
ins
sub
xchg
adc
xor
xor
sub
mov
sub
dec
pop
(bad)
and
add
mov
cs
ja
popa
xchg
adc
mov
jne
cwde
aaa
cmc
repnz
push
sbb
gs
adc
gs
mov
sub
or
xchg
cmp
or
loope
sub
xchg
fs
mov
mov
sbb
adc
sbb
test
dec
or
or
shl
in
fisubr
inc
xor
or
repz
arpl
(bad)
or
mov
xor
sub
push
cmp
and
and
pusha
or
xlat
das
shl
mov
shr
shl
mov
outs
pop
xor
xor
cmp
jne
adc
push
loope
loope
xchg
cmps
shl
popa
adc
mov
icebp
fsub
or
das
icebp
sub
ret
icebp
xor
or
xor
(bad)
(bad)
push
imul
fisubr
xor
daa
or
mov
pop
int
das
mov
inc
cmp
aaa
sub
inc
retf
sbb
xor
add
retf
xor
lea
mov
arpl
sub
es
xor
adc
pop
sbb
add
je
jmp
pusha
pushf
or
and
sub
jp
add
mov
or
sub
inc
add
ins
shl
cmps
in
sbb
fst
and
push
je
push
inc
sub
pop
xlat
fmul
cmp
or
jae
scas
add
fadd
cmp
bound
cmc
enter
daa
sti
aad
loope
cdq
mov
sbb
ret
dec
leave
mov
shl
and
mov
lea
addr16
int3
retf
(bad)
arpl
aam
adc
jb
and
or
aas
push
imul
fadd
pusha
and
inc
or
lahf
imul
je
adc
in
mov
adc
mov
inc
adc
and
ds
(bad)
int
or
mov
and
and
pop
push
and
dec
rcr
addr16
(bad)
cmp
or
fdivr
fs
xor
mov
sbb
fisubr
add
jo
out
push
pushf
push
popa
popa
icebp
lea
pop
or
sbb
mov
or
sahf
lock
push
jb
and
shr
movs
jge
fcom
sbb
pop
sub
movs
shr
shr
sub
and
test
pop
mov
ds
mov
or
outs
mul
test
adc
lods
popa
mov
clc
cmp
push
je
mov
test
push
inc
test
cmp
jecxz
push
cs
mov
dec
pushf
adc
(bad)
dec
test
arpl
push
ins
xor
imul
rcr
push
sbb
mov
mov
idiv
sbb
jae
jmp
jnp
mov
jae
pop
pushf
imul
inc
in
sbb
mov
scas
jae
lds
(bad)
ficomp
sub
loope
loope
inc
or
or
cmp
jae
jg
js
mov
adc
imul
ins
cmp
add
cli
adc
cwde
movs
pop
pop
and
push
cdq
je
sbb
adc
and
inc
fwait
push
dec
push
adc
pushf
movs
mov
dec
mov
ret
and
dec
jb
fs
push
inc
adc
test
mov
je
inc
imul
retf
and
bound
inc
sbb
mov
xchg
add
test
sub
sub
pusha
loope
fisub
leave
sub
pusha
and
gs
jbe
sub
jbe
sub
in
fadd
sub
sbb
adc
and
xor
rol
cmp
cmp
inc
mov
push
or
out
adc
adc
xor
dec
sub
and
xchg
or
add
mov
or
add
das
(bad)
mov
or
das
mov
sub
test
add
leave
and
adc
jmp
sub
sbb
div
cmp
sahf
sub
pop
or
push
push
imul
push
or
adc
and
adc
test
push
imul
sbb
ficom
pop
mov
ror
sub
arpl
fcom
cmp
mov
mov
(bad)
adc
dec
adc
push
js
jg
daa
test
cmp
sub
pop
and
or
imul
xor
dec
push
and
jg
adc
cwde
inc
bound
aaa
les
push
xor
add
ret
pop
aam
pop
pop
or
push
int
(bad)
adc
rcl
sbb
add
or
or
add
xor
or
or
or
sbb
mul
sbb
enter
mov
push
sub
mov
and
fimul
inc
or
bound
sub
mov
push
outs
jo
and
sbb
or
fistp
sub
mov
and
aam
jno
mov
mov
daa
(bad)
mov
pop
daa
fsubr
test
mov
adc
sub
cs
cmp
push
sub
xor
jecxz
imul
jae
sbb
jg
(bad)
mov
pop
int
fnsave
imul
movs
mov
sub
sub
push
pusha
dec
rep
aas
sbb
pop
hlt
pusha
mov
gs
mov
adc
add
and
xchg
xchg
adc
and
je
sbb
push
je
mov
ja
je
shl
push
mov
ret
inc
fadd
xchg
push
ss
dec
outs
dec
pop
or
inc
cmp
or
jge
cmp
push
cmp
cwde
ja
lea
enter
lea
push
sbb
test
jo
shl
repz
ss
jno
mov
push
push
sub
cmp
cmps
imul
adc
retf
inc
sbb
inc
nop
pop
fmul
(bad)
in
js
js
js
add
or
popa
js
ret
push
xor
or
mov
sbb
adc
xchg
push
add
xor
jmp
xchg
push
sub
fwait
push
adc
mov
sbb
push
das
arpl
inc
xor
and
xor
movs
xlat
xchg
jmp
adc
push
and
sbb
fst
and
in
bound
inc
dec
xchg
adc
sbb
and
sub
imul
and
sbb
xor
outs
xchg
fmul
adc
adc
adc
enter
xor
popa
js
and
lea
jmp
xchg
adc
imul
mov
dec
or
aam
adc
push
fwait
lea
inc
jae
pop
rcl
int
jae
dec
daa
mov
mov
shl
sub
sbb
int
scas
pop
push
xchg
sub
fidiv
adc
or
sub
mov
arpl
aam
xor
ins
pop
pop
inc
pusha
mov
adc
or
xor
mov
adc
or
xchg
and
and
inc
push
pop
adc
push
cmc
(bad)
inc
pop
inc
arpl
sbb
cmc
(bad)
cmps
sbb
mov
and
mov
sbb
lods
pusha
and
pop
xor
dec
sbb
and
jo
and
and
and
popa
cs
xchg
mov
adc
fsub
lds
mov
cwde
sbb
sub
test
(bad)
(bad)
cmps
xor
cwde
pop
aas
sbb
aaa
bound
inc
loope
fidivr
je
xchg
add
xor
or
test
int3
test
jnp
add
xchg
out
dec
inc
enter
push
and
sbb
bndldx
jg
jne
and
dec
fmul
sbb
sar
pop
adc
dec
mov
adc
sub
cmps
adc
adc
and
inc
imul
push
sbb
iret
adc
or
adc
leave
nop
or
xor
xor
add
xor
mul
inc
ins
pop
adc
mov
and
inc
fdiv
cmp
and
imul
adc
and
fnsave
aad
in
arpl
xor
sbb
ins
daa
xor
loop
stos
pop
pop
inc
inc
sub
jo
jb
or
cmc
pop
adc
xor
push
popa
repz
xor
int3
sbb
push
push
push
sbb
fistp
sbb
ror
or
in
sbb
dec
and
or
fadd
or
jo
add
add
xor
aam
jne
mov
pop
sub
add
mov
(bad)
push
or
mul
or
inc
in
ret
or
or
call
(bad)
add
adc
sti
inc
mov
pop
sub
sbb
dec
dec
test
mov
mov
mov
push
jae
ror
dec
push
popa
cld
sub
cmp
daa
jae
in
sbb
mov
aas
mov
cmp
movs
cmp
retf
fadd
cmp
adc
cmp
cs
jbe
pop
inc
mov
mov
cmps
fisub
pop
ds
ins
and
add
xchg
pop
mov
inc
loope
jns
addr16
add
push
mov
or
pop
push
sbb
sbb
retf
cmp
aad
nop
jb
dec
or
jge
pushf
or
(bad)
pushf
and
pop
(bad)
cmp
or
leave
push
adc
xor
inc
cmp
(bad)
sbb
push
or
jae
mov
mov
add
cmp
add
xchg
pop
adc
sub
sub
les
add
mov
sub
or
jg
adc
adc
xchg
add
xor
dec
dec
cmp
sar
adc
add
inc
push
add
sbb
mov
rol
pop
jne
jmp
and
rcl
fiadd
xchg
lea
test
jge
test
sbb
div
or
adc
in
pusha
les
sub
popa
push
daa
or
or
xor
push
sub
add
sbb
and
stos
adc
ret
mov
jae
or
shl
imul
inc
pop
adc
inc
pop
inc
xor
jae
inc
mov
inc
adc
sbb
lahf
adc
and
adc
fadd
pusha
dec
adc
dec
or
lahf
adc
inc
push
push
popa
das
and
pusha
pop
dec
pop
adc
(bad)
cmovne
push
pop
add
add
sub
cmps
out
call
and
(bad)
mov
in
out
(bad)
mov
pop
inc
outs
lea
popa
test
and
mov
add
pop
add
sub
and
xlat
and
push
sbb
inc
sub
push
pushf
fwait
jae
in
cld
sub
je
cmp
inc
addr16
movs
xor
or
xor
and
test
sub
inc
retf
or
das
push
or
xchg
push
jae
lea
adc
sbb
cmp
mov
sub
and
sub
xor
xlat
lods
xor
sbb
bound
push
adc
sub
add
mov
or
dec
sub
xor
pop
and
es
pop
lds
adc
or
sbb
pop
jge
dec
and
mov
adc
xchg
sub
je
inc
bound
mov
add
push
mov
lods
xchg
retf
sub
pop
sbb
sub
pop
sub
sbb
std
test
lods
mov
and
push
add
fsub
push
sub
mov
ret
fwait
aad
lods
ss
push
aaa
fwait
cwde
dec
mov
sub
test
add
mov
stos
shl
imul
add
sub
sub
mov
xor
fst
pop
test
sub
jbe
ja
xor
pop
retf
jmp
push
inc
add
scas
jne
fadd
push
retf
outs
and
inc
and
mov
sub
rcr
inc
jns
daa
mov
and
lods
sbb
pusha
stos
sbb
add
jnp
or
and
imul
sub
ss
jecxz
adc
jo
push
and
je
jbe
aaa
mov
adc
push
add
jne
push
sbb
jnp
fstp
pop
in
and
cmc
mov
shl
push
sbb
mov
or
jge
or
inc
cmps
mov
push
add
add
shl
mov
pop
sar
inc
pop
je
dec
add
mov
in
in
mov
test
cli
cmp
test
loopne
pop
xor
adc
pop
(bad)
sbb
pop
movhps
test
in
das
sbb
inc
aas
sbb
lea
add
das
pop
scas
cld
sbb
and
push
add
out
adc
mov
push
and
mov
in
in
and
cmp
add
xchg
mov
(bad)
add
add
sub
add
dec
sub
cdq
sub
in
or
mov
das
add
fsubr
rdtsc
add
das
pop
mov
add
xor
inc
inc
jo
repnz
add
loop
movd
push
dec
or
add
cmp
or
push
cmp
pop
cmp
movs
cmp
fdiv
aas
add
stos
mov
dec
cmovb
push
inc
mov
push
push
inc
bound
arpl
jb
imul
pop
adc
or
jmp
sub
xchg
sub
cmp
sub
add
bound
mov
call
add
add
adc
push
(bad)
or
(bad)
pushf
add
or
clc
xchg
pushf
(bad)
nop
push
add
dec
add
fidivr
sub
xchg
out
and
in
xor
add
sub
xor
in
adc
repnz
cmps
add
add
add
adc
int3
sti
cwde
add
pushf
hlt
cld
pop
std
add
add
adc
sbb
jb
nop
push
fmul
inc
or
or
ins
(bad)
add
or
xchg
pusha
adc
sub
inc
adc
add
add
adc
or
scas
push
sbb
add
and
push
dec
outs
popa
fs
jnp
add
xchg
sub
pusha
pop
dec
add
mov
add
inc
into
movs
push
dec
fsub
jmp
outs
and
pop
xchg
sbb
inc
add
add
inc
add
inc
jb
dec
push
cs
mov
movs
or
inc
lock
sbb
outs
sbb
add
jmp
cmp
ja
scas
or
sbb
add
mov
jnp
les
test
rol
jae
jmp
inc
add
pop
dec
pop
ss
in
push
push
(bad)
jae
adc
mov
and
adc
cwde
dec
inc
fs
mov
jo
mov
dec
dec
mov
sbb
outs
or
inc
lea
xor
xor
shr
push
fs
test
push
sbb
xor
mov
mov
(bad)
data16
sub
push
inc
add
sbb
cmp
bswap
adc
call
out
repnz
fisttp
in
push
fstp
jns
sahf
push
push
jg
xor
sahf
fcom
cmp
pop
aas
paddsw
and
inc
movs
in
pop
pushf
add
pop
jno
push
outs
xchg
data16
pop
(bad)
mov
push
dec
rcr
call
and
push
add
push
mov
es
pop
aad
rcl
pop
cdq
xor
dec
adc
pop
pop
jo
pusha
and
pop
or
(bad)
add
ret
add
mov
adc
add
sbb
jae
push
int3
sub
fist
mov
adc
xchg
mov
test
jb
xlat
adc
xchg
enter
push
mov
adc
add
jae
pminub
cmps
inc
cmps
in
or
adc
push
jle
mov
inc
fs
inc
sub
leave
pop
pop
retf
data16
cmp
push
add
fld
jnp
pusha
fwait
sbb
icebp
in
add
stos
add
inc
sahf
add
sub
sub
push
fld
mov
ins
(bad)
(bad)
fld
push
adc
xor
or
add
int3
and
adc
push
ret
adc
push
fimul
fld
jno
add
lods
adc
loope
jno
(bad)
pop
xchg
cmc
push
push
je
pop
jo
adc
pop
inc
mov
sbb
xchg
mov
pushf
dec
push
daa
js
inc
retf
push
mov
add
adc
nop
sub
add
fs
pop
push
fstp
or
and
push
add
fmul
sbb
sub
in
adc
fwait
inc
mov
pop
inc
addr16
cmp
xor
add
icebp
adc
dec
adc
add
jge
mov
adc
inc
push
neg
xor
cmps
push
push
add
in
sbb
pusha
inc
pop
in
aad
stos
adc
jmp
inc
sub
or
lea
sbb
cs
adc
and
sti
dec
jae
sub
and
movs
xor
push
mov
mov
mov
out
jmp
add
fild
ins
pop
pop
pushf
add
pop
jo
mov
add
outs
and
xchg
in
add
ficomp
mov
and
mov
cmps
and
aam
push
imul
and
pop
je
sar
test
add
cmp
xchg
mov
add
jmp
popa
add
aam
dec
daa
add
adc
or
xchg
jecxz
das
out
jg
pop
in
loopne
add
jge
add
pop
add
in
cmp
add
test
sbb
clc
outs
adc
mov
rcl
sub
fnstsw
or
dec
mov
pop
mov
xor
adc
push
add
or
mov
and
dec
adc
rcl
mov
sti
fwait
test
jl
or
or
lahf
and
and
retf
push
add
or
test
rcl
iret
pusha
jmp
push
sbb
adc
das
cmc
rcr
vmwrite
(bad)
popa
bound
imul
or
bound
dec
jae
sbb
inc
fcomip
retf
sub
test
(bad)
daa
xchg
add
jo
jns
icebp
and
les
add
mov
adc
cmp
add
add
pop
mov
jb
mov
ins
enter
into
data16
or
stos
enter
retf
and
push
jnp
lds
shl
or
jno
xchg
xor
pop
sub
push
pop
and
inc
cmp
xchg
imul
push
pop
mov
rcl
retf
outs
imul
shl
inc
lea
test
adc
xchg
or
xchg
pusha
dec
add
adc
and
pop
shr
pusha
push
lds
mov
add
push
in
inc
dec
repz
xor
cld
push
xor
idiv
dec
aam
xor
cmp
lahf
out
jl
and
mov
cmp
ss
inc
clc
mov
out
mov
push
ins
pop
push
push
adc
dec
out
jnp
imul
push
cmp
dec
mov
pop
scas
stc
scas
push
(bad)
push
push
push
lock
mov
scas
mov
push
ds
pop
scas
push
not
dec
out
push
aam
xchg
xchg
and
mov
push
scas
pop
push
call
xor
sbb
shl
jnp
mov
lods
push
mov
mov
mov
ss
inc
ss
scas
adc
in
nop
inc
lods
pop
mov
pop
lock
add
mov
not
fstp
xor
pop
cmp
ret
mov
sub
or
push
fisubr
or
and
pop
push
jae
jg
pop
mov
and
add
push
(bad)
int
push
mov
sahf
push
dec
mov
dec
pop
add
arpl
add
mov
bndstx
data16
mov
das
ja
adc
push
push
nop
xchg
and
stc
jb
xchg
loop
add
and
jp
add
stc
stos
push
jle
add
sub
add
daa
add
sub
inc
push
mov
fisubr
push
imul
add
shr
mov
repnz
add
inc
imul
loopne
in
add
jb
movd
repnz
add
add
stc
imul
dec
xadd
stc
jb
popa
mov
outs
(bad)
add
add
dec
ror
aas
xchg
cwde
cmc
sbb
push
pop
add
inc
nop
xorps
sub
dec
sahf
push
js
xor
es
icebp
xor
mov
fsubr
jmp
dec
inc
xor
mov
shl
inc
add
sub
xchg
adc
pop
and
leave
adc
dec
xor
sbb
xchg
aad
pop
les
adc
sbb
xchg
or
or
cld
pop
or
nop
sbb
aad
push
adc
nop
sbb
clc
ins
adc
jns
f2xm1
push
adc
cmp
in
push
mov
cmp
inc
add
mov
dec
xchg
push
mov
jle
cmp
adc
xor
cmp
dec
je
jnp
inc
or
pop
inc
xchg
fadd
and
sbb
xchg
xor
jg
adc
das
je
xchg
xor
and
aam
inc
and
inc
aam
mov
pop
add
inc
add
sbb
add
adc
rol
(bad)
shl
inc
cmp
push
ud0
bound
pop
xchg
cmp
jnp
sbb
pop
xchg
dec
push
cmp
jb
cld
pop
jo
cmp
jb
mov
fmul
cmp
jb
nop
bound
mov
or
mov
inc
add
pop
pusha
(bad)
and
test
das
push
or
adc
or
push
mov
hlt
mov
adc
xchg
mov
or
cmp
jb
movs
push
or
xor
adc
inc
add
pushf
out
fadd
push
xchg
sbb
sbb
out
cmp
fadd
mov
or
jae
mov
mov
mov
sar
pusha
pop
dec
add
pop
adc
test
(bad)
cld
jnp
cdq
sbb
sub
sub
lods
std
imul
push
sbb
imul
or
jae
rol
ins
test
sub
and
push
mov
cwde
shr
cmp
fdiv
cwde
jb
test
xchg
pop
shr
inc
push
jno
jo
mov
mov
xchg
retf
jne
push
out
adc
sti
mov
cmps
xchg
arpl
add
inc
inc
clc
mov
out
call
add
pop
rol
inc
pop
mov
popa
add
or
pop
mov
stos
ret
fldenv
shl
inc
adc
add
sbb
xchg
inc
pop
in
push
loope
adc
lds
mov
push
stos
or
loop
(bad)
push
in
add
push
or
push
bound
fwait
adc
and
pop
adc
mov
shr
pop
mov
jge
mov
cmp
or
inc
sub
push
and
sub
pop
shr
(bad)
test
add
(bad)
cmc
add
xor
and
add
sbb
fwait
sub
or
int
std
inc
nop
sbb
dec
mov
add
or
and
fadd
push
call
add
or
out
push
sbb
sbb
movs
ror
jno
add
or
push
je
test
mov
nop
jnp
das
sub
loop
add
daa
mov
cli
fwait
pextrw
add
xchg
xchg
xchg
push
xchg
jmp
movs
loope
js
jns
xor
pop
jns
mov
jp
cmp
sbb
aad
xchg
dec
inc
and
push
mov
jl
dec
sub
add
mov
and
shl
push
loopne
add
mov
pop
or
jnp
add
pop
sbb
lds
stc
jnp
pop
adc
xchg
lea
xor
retf
jg
leave
mov
jno
outs
or
add
add
mov
jbe
or
cmps
cmps
ins
js
jmp
ins
cwde
or
in
sbb
add
xchg
rcr
jbe
leave
rcl
inc
mov
iret
add
adc
repz
and
and
lods
pop
xlat
pop
mov
(bad)
test
adc
add
cld
sbb
gs
jno
xor
repz
aaa
sbb
mov
imul
xor
xor
jnp
sbb
push
jb
dec
inc
push
inc
and
dec
inc
cmps
mov
add
dec
pop
push
sbb
ins
pop
jno
ja
push
jns
retf
xchg
inc
add
(bad)
out
sub
les
outs
pop
cs
push
dec
mov
mov
outs
push
test
mov
movs
pop
xlat
ret
inc
add
adc
sti
sbb
mov
xchg
sub
cmp
lea
add
sub
je
inc
lds
xor
mov
jnp
jbe
arpl
push
lock
out
pop
or
loop
int
je
jp
inc
clc
ds
jmp
sbb
pop
stc
mov
adc
sbb
cmp
or
ret
sub
jns
out
sar
inc
push
xor
out
cwde
movs
mov
idiv
into
dec
adc
rdpmc
push
mov
ds
imul
jb
adc
lods
retf
punpckhdq
js
push
sub
pop
push
(bad)
adc
jmp
or
add
lock
push
shl
sahf
inc
mov
or
jae
retf
or
fwait
retf
sbb
movhps
jmp
push
adc
sbb
pop
inc
adc
adc
and
mov
inc
jle
cdq
mov
sbb
xor
add
push
xor
ins
xchg
push
test
dec
mov
cwde
popf
push
lods
sbb
mov
or
mov
mov
out
add
add
jecxz
and
xchg
lahf
mov
add
(bad)
aam
sub
adc
cmp
icebp
rep
arpl
and
or
xchg
test
inc
inc
pop
loopne
jmp
cdq
fisttp
in
adc
add
les
pop
ins
iret
stos
sub
xlat
sahf
nop
dec
imul
push
pop
je
add
ins
cmp
pop
adc
mov
mov
cli
or
retf
loopne
or
test
or
enter
mov
jmp
or
add
ret
jbe
mov
pop
fmulp
inc
sbb
sbb
push
pop
dec
and
mov
hlt
or
push
icebp
cmp
mov
fiadd
dec
mov
mov
add
mov
std
test
ficomp
loop
xchg
xchg
xchg
cvtps2pd
and
xchg
pushf
mov
daa
mov
add
xchg
sbb
cwde
xchg
fld
xlat
pop
lods
mov
xchg
mov
fwait
or
pop
clc
das
push
mov
daa
pop
xchg
aaa
pusha
ret
add
push
ins
bound
xor
pop
xchg
jae
mov
inc
int3
mov
cmp
jecxz
mov
sbb
ins
push
rcl
xchg
mov
cdq
or
(bad)
push
sbb
sub
sar
pop
inc
cmp
mov
lods
mov
repnz
and
add
mov
or
jg
mov
push
add
inc
repz
enter
hlt
sub
rcr
adc
mov
xor
andps
adc
(bad)
pop
pusha
das
outs
mov
jno
cmp
mov
adc
jp
loope
xor
or
mov
ins
jbe
pop
xchg
(bad)
xchg
pop
shr
pushf
stos
loope
(bad)
mov
pushf
jmp
adc
adc
aaa
add
xchg
fwait
ror
outs
mov
add
pop
gs
pop
fnsetpm(287
inc
icebp
xchg
xchg
jmp
inc
dec
add
into
xchg
mov
push
pushf
in
out
push
mov
xor
dec
mov
xchg
xchg
pop
cmp
xchg
xchg
lahf
cld
xchg
cdq
popf
popf
sbb
enter
xchg
cmovle
push
ret
iret
cwde
test
ror
mov
sub
out
xchg
iret
dec
push
xchg
xchg
or
push
xchg
daa
(bad)
sbb
pusha
add
xlat
dec
add
test
out
cs
stos
call
out
cdq
push
adc
sub
mov
pop
xchg
mov
push
aam
push
xchg
push
out
xchg
dec
loopne
ins
push
and
aas
sbb
and
ins
push
out
dec
pop
xchg
lods
shr
sbb
(bad)
outs
add
les
inc
pop
or
fs
push
ror
inc
lods
or
jno
aad
inc
mov
and
stc
adc
mov
mov
sub
xchg
sbb
jmp
or
daa
pop
adc
push
and
push
test
pop
adc
jge
or
adc
cmps
or
out
or
sub
or
jbe
in
lods
mov
inc
imul
push
data16
cmc
cmp
ror
xor
aaa
sbb
and
std
daa
dec
outs
cmps
test
dec
js
movs
fst
je
dec
push
mov
jne
dec
and
dec
fdivr
jmp
movs
paddusb
push
or
mov
test
or
out
mov
cwde
inc
push
pop
mov
jae
or
sbb
push
lds
iret
jo
xlat
cmp
je
call
and
daa
fwait
repz
rcl
jne
xchg
xor
loopne
jns
push
bound
jmp
adc
inc
mov
add
push
popf
inc
jne
ror
cmp
into
jo
pop
pop
or
pop
and
js
add
movs
jge
and
inc
stos
adc
push
jg
out
adc
add
xchg
lahf
cmps
outs
push
test
outs
inc
test
pop
jle
jnp
mov
push
mov
or
and
das
sub
add
inc
push
nop
aas
push
lahf
les
or
ficomp
fisubr
fadd
fadd
sbb
rcr
xor
add
jbe
jb
scas
outs
(bad)
sub
jnp
xlat
xchg
sti
dec
outs
popa
and
and
xor
addr16
or
inc
add
sbb
push
mov
xlat
movs
lds
add
mov
or
pop
jno
out
add
rcr
outs
lock
and
xor
rol
and
pop
adc
mov
fbld
add
cmps
pop
xchg
cvtps2pd
pushf
mov
ss
pushf
sub
inc
rcr
dec
imul
movs
dec
leave
sbb
push
hlt
pushf
(bad)
pop
pop
pusha
cwde
push
shr
add
and
pop
push
sbb
mov
adc
push
dec
(bad)
push
in
mov
rcr
mov
out
popf
xchg
xor
cld
das
push
sahf
xchg
dec
inc
inc
or
inc
adc
cld
sub
inc
hlt
cmp
js
xor
jp
sbb
pop
push
outs
push
in
fwait
dec
(bad)
cmp
dec
inc
in
fwait
aad
inc
lock
fild
sbb
or
pop
rcr
mov
inc
cmp
scas
fdivr
jnp
jge
and
add
lods
sub
pop
pop
adc
inc
lahf
adc
and
shl
dec
xchg
mov
pop
inc
rcr
addr16
fld
dec
movs
mov
and
sub
mov
dec
ror
push
and
fisub
lods
pop
lds
(bad)
and
fist
movs
dec
dec
pop
push
sbb
jmp
fstp
fmulp
lea
add
push
scas
pop
xor
lds
dec
xlat
mov
dec
push
daa
or
mov
in
adc
aas
das
push
push
push
les
pop
call
xchg
cmps
test
dec
adc
sub
cmps
lahf
or
and
sub
(bad)
mov
add
sub
scas
sti
xor
xor
loopne
adc
ins
inc
adc
cmp
loope
add
fld
jo
inc
lock
pop
pop
mov
jcxz
mov
fsubr
and
les
mov
jmp
dec
cmp
popf
outs
test
fsub
dec
cmp
jmp
jns
lahf
dec
cmps
dec
add
lahf
add
push
inc
test
lods
jne
pop
sub
inc
mov
lahf
scas
sub
sub
push
or
add
(bad)
adc
cmp
jns
icebp
pushf
pushf
mov
dec
dec
inc
sahf
sbb
push
add
test
bswap
xchg
xchg
xchg
and
leave
leave
cmp
mov
cmc
ds
aas
pinsrw
outs
pop
sahf
neg
and
push
pop
inc
sbb
cmp
or
stos
cdq
call
add
push
add
rol
push
jmp
sbb
shl
push
mov
sbb
xor
add
popf
jge
shl
add
and
jge
xchg
bound
pusha
mov
mov
sbb
adc
jbe
inc
ja
jo
cmp
jge
xchg
jns
adc
sub
ret
adc
xchg
and
mov
pop
add
add
call
sub
push
push
dec
pop
rol
xchg
or
sub
or
imul
push
inc
lea
and
push
call
pop
jl
push
aam
add
imul
push
lods
or
sti
sar
in
dec
pop
xor
xchg
adc
jo
mov
ja
xchg
rcr
sub
es
mov
xchg
and
dec
popa
inc
test
dec
adc
gs
jb
loop
or
and
adc
imul
adc
inc
ret
or
jae
mov
daa
dec
adc
aam
jle
mov
sub
jecxz
add
ficomp
inc
and
or
and
adc
jns
movs
cwde
adc
ins
test
pop
xchg
or
dec
or
adc
pop
mov
mov
jnp
jae
pop
sub
mov
test
mov
mov
sbb
cmps
sub
add
shl
add
popf
mov
icebp
adc
adc
push
add
lods
cmp
pop
push
mov
and
les
stos
int3
movs
dec
test
mov
pop
adc
cld
(bad)
cld
inc
xor
add
mov
les
add
out
ins
jge
test
push
push
push
jbe
inc
lock
cmp
push
movs
sub
and
cs
(bad)
push
inc
add
dec
add
rol
add
movs
ror
fnsave
add
or
inc
popa
movs
inc
jne
cmp
(bad)
gs
xor
push
adc
(bad)
or
lods
sbb
dec
sahf
scas
aaa
xchg
cmp
cs
push
pop
call
push
add
sub
mov
cmp
stos
rol
popf
adc
pop
xor
sbb
inc
cmps
fiadd
lods
and
mov
in
das
add
xchg
cld
stos
daa
ins
mov
cmp
push
and
jno
mov
stos
in
les
daa
or
push
loopne
cmp
lods
stos
push
add
jecxz
mov
popf
lock
les
in
sub
adc
(bad)
pop
push
inc
imul
or
jbe
rol
or
push
pop
add
push
jb
or
sbb
xchg
sub
mov
popa
mov
add
push
ss
or
mov
inc
jno
push
mov
(bad)
(bad)
and
inc
fnstsw
and
dec
add
bound
cmp
ffreep
mov
lds
push
mov
xchg
lds
sbb
mov
pop
and
arpl
dec
sub
add
or
inc
sbb
adc
pusha
add
mov
jb
mov
loope
inc
es
mov
daa
push
stos
add
outs
push
and
or
hlt
mov
jbe
sbb
pop
pushf
mov
mov
clc
inc
mov
and
add
mov
nop
add
mov
loope
imul
inc
mov
nop
adc
dec
or
mov
jo
push
or
push
xor
int
js
mov
jl
mov
test
inc
mov
pop
pop
sbb
xchg
inc
pop
fisubr
mov
xchg
xchg
pushf
nop
mov
mov
mov
cmp
ror
mov
or
adc
mov
iret
std
jo
xlat
ss
loope
mov
xchg
mov
mov
sub
add
mov
in
mov
mov
mov
(bad)
jno
int3
cdq
or
add
mov
mov
fwait
add
mov
int
mov
int3
mov
pop
xchg
and
adc
add
add
pop
int3
mov
mov
adc
mov
icebp
pushf
mov
jnp
or
xor
jbe
loopne
pop
lock
mov
(bad)
fwait
mov
sbb
outs
jbe
test
outs
xchg
mov
dec
sar
mov
xor
pop
nop
cmp
mov
dec
je
int3
mov
nop
pop
test
mov
(bad)
mov
call
cmp
jns
mov
test
or
mov
push
adc
aas
pusha
repnz
dec
inc
and
push
fucomi
and
mov
(bad)
hlt
mov
mov
test
sbb
nop
mov
mov
xor
mov
or
test
fidiv
and
cvtpi2ps
shl
xchg
cmp
adc
and
leave
enter
les
shl
push
jge
hlt
mov
push
loope
add
or
mov
adc
pop
add
xchg
add
in
lds
fstp
inc
cmp
inc
adc
push
mov
ror
mov
shr
adc
pusha
cwde
inc
imul
mov
pushf
sub
sar
mov
jns
push
sub
clc
mov
pusha
rcr
shl
mov
enter
mov
pop
ret
fs
loope
es
das
or
ja
xor
inc
xchg
mov
js
cmp
push
sbb
push
mov
ffreep
lds
ret
push
loope
icebp
pushf
mov
adc
ret
mov
test
adc
in
repnz
call
mov
daa
xlat
jo
xchg
imul
ret
retf
mov
xor
iret
push
lds
mov
retf
das
jg
inc
shr
enter
cmp
push
inc
call
xchg
and
inc
push
add
sbb
sub
jns
mov
add
scas
ins
loopne
add
lds
mov
inc
add
jl
loope
mov
push
pop
(bad)
das
test
cmp
scas
ja
scas
fldcw
cmps
mov
push
or
push
sbb
mov
pop
push
or
mov
aaa
adc
push
inc
lods
imul
loopne
sub
or
xchg
mov
push
jle
sbb
dec
outs
dec
gs
cli
mov
and
outs
inc
xor
js
sbb
xor
push
pop
scas
or
lea
adc
adc
pop
test
mov
and
cmpps
dec
xchg
int
pop
cmp
leave
das
sti
outs
or
mov
setbe
and
rol
push
mov
pop
cmp
les
sbb
in
sub
xor
cmp
in
scas
iret
or
jmp
enter
xchg
or
xor
jno
mov
(bad)
and
push
aad
scas
jecxz
mov
add
or
xor
xchg
add
dec
jae
add
or
fwait
adc
mov
test
push
pop
inc
add
add
adc
add
mov
adc
add
mov
sub
sbb
movs
repz
arpl
lock
sub
ret
xchg
mov
push
push
ret
jo
test
inc
popa
and
mov
mov
and
xor
sub
and
nop
test
xchg
dec
jb
xchg
test
cmp
ret
(bad)
dec
gs
adc
add
xchg
stos
push
sbb
jo
xor
push
pushf
int3
mov
sbb
mov
dec
lds
xor
fsubr
ret
dec
push
sti
pop
scas
pusha
sbb
adc
dec
js
int3
mov
add
jmp
int
js
xchg
mov
fisub
adc
adc
(bad)
rol
aas
cmps
mov
scas
add
jae
test
nop
or
push
push
inc
jae
inc
pop
adc
adc
lds
dec
adc
pop
into
shl
or
cmp
loope
lods
or
dec
add
jnp
and
add
shr
sbb
int3
jae
push
enter
adc
jae
mov
xor
cmovle
dec
out
loopne
add
jae
or
xor
cmps
or
xor
sub
(bad)
pop
inc
adc
mov
cmps
loopne
sub
mov
sbb
mov
sub
inc
mov
jns
ror
scas
cwde
jne
pop
pop
std
js
pop
pop
das
(bad)
and
xchg
icebp
test
adc
pop
inc
lds
cs
cmp
iret
cmp
adc
lods
rcl
ret
push
mov
inc
sub
in
adc
shl
rcr
dec
mov
cmp
pusha
dec
inc
mov
fwait
in
push
add
scas
ins
adc
clc
cmp
mov
ins
sar
adc
xlat
das
ins
adc
nop
or
and
mov
jmp
cmp
jae
rcr
sub
cmp
add
fwait
push
push
jo
dec
rcr
adc
in
ror
and
pop
or
inc
mov
inc
mov
mov
add
mov
xlat
cmps
add
adc
sti
rcr
gs
add
(bad)
jae
aad
add
or
push
push
ror
aad
sbb
pop
inc
jne
ins
les
rcl
xchg
push
lods
mov
sub
push
jo
add
mov
add
loop
sbb
xchg
mov
aad
ins
(bad)
mov
xor
adc
xchg
or
popa
adc
push
test
inc
lock
push
xlat
push
hlt
mov
scas
and
push
dec
xlat
out
test
das
pop
shr
xchg
adc
repnz
adc
mov
sub
add
sub
xlat
rcr
out
std
call
(bad)
sub
aas
imul
es
das
ja
out
add
and
fs
shr
enter
out
in
xor
(bad)
fmul
add
dec
dec
jno
mov
dec
pop
cmp
jmp
jmp
fadd
sbb
sub
xchg
pop
fisub
add
pop
sbb
sub
(bad)
pop
ror
test
fild
push
das
jne
imul
lahf
imul
inc
lmsw
stos
sub
(bad)
(bad)
fisubr
rol
ret
repnz
js
cdq
hlt
mov
leave
stos
push
mov
add
inc
pusha
fild
inc
xchg
jb
fucomi
addr16
sub
fbstp
adc
jmp
scas
popa
in
sub
lock
sub
xchg
adc
pop
xor
int3
jae
adc
push
fadd
sub
pop
mov
loope
fsubr
cld
fsub
xor
add
ret
sbb
and
out
outs
pop
inc
and
fdivr
sub
push
sbb
dec
int3
jae
frstor
xchg
adc
inc
ret
mov
shl
fisubr
add
movs
xor
in
ins
or
sbb
mov
or
call
dec
inc
or
mov
add
loop
fisubr
sub
or
ja
(bad)
ret
daa
test
dec
push
es
retf
fistp
add
pop
fcom
adc
fadd
cmps
sbb
mov
push
and
dec
cmp
and
pusha
add
jns
and
jae
pusha
rcl
and
inc
or
push
in
aaa
pop
cmp
mov
pop
mov
scas
and
loope
fnstsw
lock
ret
enter
loop
pop
loop
loop
add
or
ret
loop
push
cmc
stos
mov
ret
loopne
nop
pop
jb
loop
ret
or
push
and
inc
fistp
imul
inc
jecxz
jo
or
mov
jecxz
(bad)
in
xlat
fist
es
das
or
jg
iret
mov
rol
in
loope
(bad)
and
mov
test
dec
fwait
in
push
jo
in
jge
in
sbb
pop
xor
jns
or
jae
add
mov
or
or
jp
imul
push
fidiv
push
call
out
loopne
dec
cmp
scas
mov
pop
cmps
mov
scas
mov
es
loope
scas
dec
scas
add
and
scas
add
test
push
and
inc
loopne
mov
jns
mov
loop
dec
je
(bad)
out
enter
jmp
pushf
mov
aam
les
(bad)
cmp
in
in
add
js
xor
inc
jmp
(bad)
shl
push
mov
mov
mov
addr16
ret
sar
or
jge
mov
test
pop
xchg
pop
sbb
dec
js
and
pusha
mov
lea
adc
test
mov
adc
jae
push
or
pop
push
xor
jge
into
outs
pop
xchg
lock
or
jge
mov
mov
sub
bound
js
pusha
lds
xor
jae
mov
dec
jge
ret
pop
cmp
adc
dec
jge
outs
mov
xchg
jge
out
js
or
mov
stos
in
sub
shl
ss
popa
(bad)
int
int3
jae
dec
push
push
loope
jae
pusha
pop
xor
bswap
pop
xor
cwde
test
loopne
pop
sbb
daa
cmps
or
and
or
test
push
fdivr
divps
mov
scas
xchg
ror
loopne
adc
push
or
test
lock
jb
lock
push
mov
pop
adc
fld
out
pop
hlt
das
add
mov
ds
in
cmp
add
xchg
push
push
mov
push
inc
xchg
aad
inc
xor
in
in
fsubrp
jecxz
mov
fwait
pop
out
mov
or
lock
jne
xchg
jo
mov
mov
shr
inc
add
push
cmp
nop
mov
(bad)
stc
xor
lock
sbb
sar
dec
cmp
adc
cmp
push
inc
or
out
ret
mov
inc
movs
cmc
ficom
push
pop
call
ret
sbb
test
or
dec
push
pop
or
add
lods
inc
scas
mov
adc
xlat
add
add
ret
ret
in
add
lock
inc
xchg
(bad)
and
jb
mov
je
ins
(bad)
dec
lahf
inc
sub
repz
movs
mov
(bad)
hlt
mov
push
das
imul
(bad)
xchg
in
push
retf
dec
ss
stos
sar
dec
(bad)
sbb
daa
fld
add
repz
loopne
adc
dec
pushfw
mov
or
inc
loope
imul
push
ins
add
pop
inc
or
add
adc
retf
icebp
cmc
mov
or
and
es
jl
xchg
not
cld
imul
sub
push
(bad)
scas
retf
(bad)
imul
push
xor
lock
add
add
ja
jns
jecxz
not
(bad)
mul
cmp
shr
cmp
inc
test
enter
in
stc
push
popf
call
xchg
xchg
pop
ud1
sbb
leave
leave
leave
leave
cmp
in
in
cld
das
scas
lahf
xor
std
pop
addr16
dec
outs
pop
xchg
std
jne
cmovo
add
lahf
sbb
xor
test
sub
pushf
xor
jno
mov
lahf
enter
cli
inc
mov
xor
clc
enter
mov
mov
lahf
mov
fs
mov
lahf
and
pop
xor
mov
xchg
lahf
mov
imul
mov
xor
pop
pop
push
cmp
leave
loop
add
and
or
inc
rol
push
lock
or
(bad)
mov
dec
les
mov
cmp
dec
inc
inc
(bad)
xchg
sbb
push
stos
lods
ror
pop
mov
push
pushf
loope
mov
call
ins
lds
pop
imul
mov
ins
jae
cmp
rcr
adc
pop
mov
add
jns
or
imul
and
sbb
pop
mov
stos
es
mov
sub
push
add
int
dec
mov
sbb
push
sub
add
dec
imul
push
test
sbb
pop
adc
pop
cdq
ins
mov
cmps
arpl
retf
xorps
jl
xchg
lds
mov
adc
push
aaa
test
scas
stos
sbb
sar
je
xchg
int3
mov
jmp
icebp
and
sub
iret
shr
jmp
stos
push
xchg
(bad)
dec
and
jmp
mov
sub
dec
and
mov
mov
dec
push
movs
push
or
lock
dec
cmps
rcr
cvtpi2ps
push
push
jmp
xchg
dec
addr16
add
stc
loopne
xchg
stos
in
mov
and
icebp
dec
in
(bad)
je
adc
inc
lds
daa
push
push
or
sub
xor
add
dec
push
ins
adc
int3
add
xor
sub
pop
mov
test
push
cmp
push
sub
pop
jmp
popa
pop
popa
lahf
push
add
xlat
xlat
lahf
add
cmp
and
int3
aam
lea
icebp
comiss
mov
add
add
out
es
leave
push
adc
inc
ret
mov
xor
mov
mov
loopne
(bad)
fmul
dec
cmc
xor
or
sub
and
loopne
sub
ror
pop
or
imul
add
pop
das
fst
jae
add
adc
vpmacssdqh
xor
fiadd
dec
(bad)
mov
add
pop
iret
inc
and
xchg
into
dec
shl
into
cmc
adc
push
(bad)
and
cdq
xchg
add
adc
pop
inc
test
fistp
nop
dec
add
and
(bad)
inc
popf
xchg
arpl
jb
repnz
or
sbb
jb
shl
or
cmp
cmp
sahf
pushf
pushf
mov
dec
dec
dec
dec
pop
pop
jmp
daa
and
or
pushf
xchg
daa
es
push
ficomp
jne
sbb
push
jle
paddq
icebp
add
cmp
cmovle
les
mov
cdq
add
adc
ja
rcl
push
ja
iret
push
add
adc
xor
bound
mov
rol
dec
ja
test
(bad)
in
ja
iret
dec
jae
test
dec
sub
ja
add
mov
ja
mov
ja
push
mov
shl
inc
or
shr
push
add
jb
imul
adc
inc
mov
or
push
or
xchg
sbb
pop
add
or
push
dec
xor
imul
ins
push
pop
imul
xor
sub
or
xor
cmp
jns
or
mov
movs
pusha
aam
pop
enter
mov
xchg
sub
or
add
push
pop
push
pop
add
sbb
push
xor
or
ror
sbb
pop
adc
xor
sahf
push
stos
ret
stos
push
xchg
fld
into
or
pop
movs
xchg
pop
mov
inc
or
int3
jnp
or
out
fisub
rol
pop
adc
mov
pusha
pop
cmp
mov
test
pop
inc
jmp
into
adc
icebp
inc
(bad)
(bad)
sti
adc
(bad)
and
sub
jae
add
aam
dec
sar
adc
mov
cmp
pop
mov
aad
shl
(bad)
xchg
adc
cmc
jbe
sbb
adc
jmp
rcl
jmp
adc
sub
inc
stos
dec
leave
stc
jmp
sub
mov
jle
enter
rcl
add
mov
sub
mov
sub
and
add
mov
test
enter
in
test
pusha
pop
test
fbstp
inc
mov
cvtpi2ps
scas
and
pop
stos
fldlg2
mov
test
(bad)
or
xlat
loope
add
pop
jb
inc
add
repnz
test
pusha
pop
inc
stos
push
fistp
and
push
sbb
inc
push
mov
xchg
das
pusha
rol
das
xor
aam
pop
xlat
jp
pushf
inc
mov
mov
rol
push
mov
jecxz
and
add
popf
sub
push
xor
add
inc
mov
popa
cmp
add
das
or
adc
test
ficom
mov
push
or
cmc
test
dec
push
mov
mov
jo
mov
xchg
imul
push
hlt
je
mov
adc
aam
xchg
test
mov
adc
cmps
in
test
call
push
fstp
sbb
sbb
cmp
mov
dec
iret
(bad)
xor
in
sbb
push
call
dec
sbb
xchg
daa
daa
mov
mov
xor
xchg
xchg
xchg
jnp
call
leave
leave
xor
fcomp
xor
leave
jmp
push
addr16
pop
sahf
pushf
jmp
pop
out
pop
pop
pop
adc
pcmpeqw
es
add
cmp
add
dec
and
cmc
ror
adc
jno
mov
ror
aad
xor
push
inc
loop
mov
ins
inc
mov
mov
mov
pop
jo
test
cmp
movs
and
pop
mov
push
mov
mov
adc
push
adc
push
xor
in
test
add
adc
add
mov
test
add
mov
cmp
and
adc
mov
push
or
inc
mov
popa
add
add
imul
xlat
mov
mov
mov
pop
test
add
or
and
add
mov
push
mov
and
inc
or
inc
xchg
movs
pop
ins
xlat
call
add
sub
ins
jns
(bad)
push
mov
ds
mov
add
push
rcl
cmp
adc
movs
mov
mov
test
xor
push
mov
pusha
add
push
test
test
push
bnd
cmp
in
jbe
pop
dec
cmovle
adc
sbb
aaa
xor
cmp
fadd
movs
push
jmp
inc
or
jo
xlat
pop
xor
clc
inc
popf
inc
add
lock
addr16
pop
cld
das
add
pop
mov
inc
addr16
xor
xlat
pop
xor
mov
pop
mov
leave
pop
fmul
mov
pushf
and
sbb
cli
sbb
jne
out
mov
xchg
or
fild
cmp
cmp
and
fwait
rol
push
push
push
lock
push
and
mul
sub
rcr
pop
sbb
add
add
fnsave
arpl
arpl
push
fld
bound
outs
add
add
pop
mov
(bad)
std
mov
bound
outs
pop
js
fs
pop
fwait
sbb
dec
repz
fcmovnu
jne
xor
je
push
jo
jb
(bad)
jge
aas
bound
popa
dec
data16
outs
add
adc
add
xor
jae
jbe
gs
in
xchg
jmp
add
in
ins
add
sbb
xchg
pop
or
daa
aas
jo
(bad)
outs
imul
ss
pop
jb
addr16
or
push
pop
jae
pop
jbe
adc
outs
arpl
add
xor
mov
dec
sub
mov
das
inc
fstp
sbb
and
ret
fcmovb
push
daa
jb
stos
scas
ret
mul
mov
cld
mov
outs
add
pop
lods
fstp
fbstp
sub
arpl
daa
sub
dec
ss
pusha
loopne
clc
add
ja
sbb
pop
arpl
addr16
popa
mov
jecxz
xchg
add
pop
cmps
sub
jne
or
inc
fild
das
fild
dec
inc
iret
arpl
loope
jmp
repz
loope
add
imul
xor
push
xchg
push
je
ins
cmp
imul
inc
xor
inc
cmp
rcr
je
cmp
lahf
cdq
pusha
loopne
es
and
add
xlat
mov
inc
clc
jl
cmp
(bad)
dec
mov
inc
mov
push
daa
imul
pop
aam
retf
and
sbb
mov
cmp
sub
ror
scas
rol
pop
or
lahf
add
sub
icebp
and
or
es
inc
mov
and
inc
xchg
ins
adc
shl
or
and
inc
repnz
or
add
nop
or
mov
add
or
mov
lods
and
mov
add
push
add
cmp
and
sbb
adc
xor
push
mov
or
pop
out
inc
adc
add
out
aam
mov
add
add
fsubr
add
sub
test
or
or
adc
and
sub
loopne
mov
adc
mov
ins
inc
inc
add
sbb
dec
clc
pop
add
dec
dec
in
call
repnz
in
test
je
je
sub
scas
mov
loopne
test
push
(bad)
or
and
or
in
shl
mov
enter
rcr
fdiv
and
ins
sbb
pusha
sbb
dec
test
adc
dec
loopne
or
and
mov
xor
cwde
sub
daa
add
(bad)
into
or
push
es
or
dec
in
aaa
add
and
inc
push
movs
clc
clc
cld
jo
pushf
or
clc
cld
in
and
adc
movs
xor
in
aam
mov
(bad)
sub
scas
lea
adc
add
add
add
xchg
or
mov
sub
or
fsubr
cmp
sar
jge
movs
add
add
dec
or
scas
imul
mov
dec
enter
inc
or
or
sti
test
fadd
or
inc
and
es
sahf
aaa
jbe
mov
push
in
nop
addr16
push
sbb
add
push
test
ins
mov
sbb
push
inc
pop
lock
ss
retf
retf
push
sub
sub
and
movs
scas
mov
adc
movs
and
add
ret
test
sub
push
mov
and
inc
test
jne
adc
inc
push
or
push
pop
ds
mov
push
jns
and
add
inc
enter
add
add
or
sub
js
call
inc
and
and
dec
aam
not
push
sbb
and
or
sub
mov
(bad)
add
push
enter
int3
add
adc
sub
and
or
or
outs
cmp
(bad)
repz
add
sub
das
add
nop
add
lea
and
js
mov
adc
adc
adc
nop
adc
adc
out
or
outs
or
push
mov
cmps
hlt
or
imul
pop
jg
add
sbb
rcl
ret
push
outs
lock
pop
pop
pop
adc
pop
or
or
adc
add
cmp
int3
movs
aaa
into
shl
or
cmp
cmp
adc
and
(bad)
ja
jbe
add
daa
inc
stos
je
and
mov
shr
xor
cmp
adc
(bad)
sub
dec
shl
add
add
adc
(bad)
push
jne
adc
lock
push
mov
mov
add
jnp
xchg
nop
pop
mov
imul
or
push
push
sbb
mov
add
xchg
cli
pop
and
push
xor
pop
outs
arpl
xchg
push
gs
pop
sub
shl
sub
pop
adc
test
sub
or
fcomp
rol
aaa
nop
(bad)
sub
call
xor
xchg
mov
cmp
cmps
out
pusha
jle
xchg
(bad)
loop
xor
addr16
add
jo
nop
cmp
push
or
or
pop
dec
dec
sbb
arpl
mov
mov
sbb
loopne
mov
adc
shl
int3
push
add
add
add
adc
arpl
add
xor
stc
iret
cmp
hlt
cmc
sar
ins
loop
test
je
xor
push
inc
mov
adc
neg
add
or
neg
sbb
add
dec
leave
dec
sub
push
and
add
mov
lods
mov
ficom
(bad)
test
add
sahf
and
xor
add
dec
addr16
clc
das
movs
and
mov
fwait
jo
mov
hlt
mov
dec
call
jb
jne
call
mov
iret
(bad)
dec
inc
lock
(bad)
lock
push
inc
clc
mov
call
add
fsub
js
sahf
sbb
add
jae
icebp
mov
pop
add
mov
mov
fmul
mov
and
(bad)
mov
nop
xor
or
xor
jg
sbb
jo
pop
outs
push
dec
add
jmp
je
sbb
popa
add
dec
xchg
or
(bad)
or
xor
pop
pop
jmp
ja
inc
push
sbb
mov
popa
add
pop
jns
push
test
je
sbb
push
push
jns
xchg
mov
fmul
sub
mov
mov
movs
xor
dec
clc
and
pop
mov
inc
add
adc
xchg
ror
(bad)
pop
rol
stos
(bad)
pop
cmps
or
mov
pop
push
arpl
jo
ret
jg
add
mov
in
sub
out
loope
mov
add
loop
mov
mov
pop
test
jne
call
mov
add
xchg
push
cdq
push
push
mov
loopne
cmp
rcr
adc
stos
or
add
sub
jae
aaa
and
into
sub
inc
xchg
lods
add
dec
pusha
(bad)
call
jmp
add
ds
ss
sub
ja
pop
or
sbb
push
xchg
jns
ja
fist
shl
nop
adc
shl
mov
shr
sub
cmc
test
or
sti
add
push
or
xor
push
jb
dec
adc
lock
add
or
jo
nop
cli
mov
movs
mov
or
cmc
nop
add
pop
mov
sahf
push
mov
sbb
mov
enter
shr
nop
add
adc
rol
mov
push
in
loope
pop
xchg
lods
lock
adc
or
rol
push
mov
out
pop
push
pop
or
push
sub
fild
mov
fs
inc
add
into
je
and
test
inc
mov
cmp
xor
mov
lock
cmp
loope
enter
inc
push
dec
mov
sub
sbb
push
adc
jp
fisttp
rcl
xchg
mov
in
and
mov
and
inc
mov
cmp
mov
pop
adc
ret
xchg
pop
call
adc
fwait
push
pop
and
shrd
daa
in
ror
or
sbb
(bad)
mov
fisubr
inc
inc
cdq
add
add
and
xlat
aaa
test
push
sub
cld
push
add
mov
mov
or
mov
pop
nop
dec
cmp
cmp
call
and
xchg
adc
xchg
out
fsubr
push
popf
fst
jmp
sub
add
stos
sub
test
fild
add
stos
es
movzx
sbb
cmp
push
xor
add
add
sbb
or
test
hlt
imul
and
adc
add
jg
xor
jle
cmp
ja
push
in
cmp
out
push
inc
dec
push
push
pop
out
sahf
out
imul
sahf
add
lahf
stos
mov
mov
ret
leave
iret
aad
inc
sar
out
fwait
pop
mov
xor
ret
mov
pushf
mov
add
mov
or
in
fwait
pop
imul
sbb
bound
or
add
dec
pop
ret
xchg
das
xchg
adc
ror
jae
inc
mov
jne
add
and
cmp
dec
fsubr
xchg
adc
das
fwait
push
lahf
or
xchg
cmp
int
out
sub
iret
repz
xchg
pushf
cmps
mov
les
fdivr
sbb
cmp
out
pop
jge
mov
test
daa
and
sub
iret
repz
inc
dec
push
jne
mov
fiadd
inc
es
outs
jl
out
xchg
mov
(bad)
and
cmp
rol
je
mov
(bad)
jmp
jns
jno
mov
sti
add
adc
outs
push
cmp
mov
push
test
repz
inc
cmp
repz
fnclex
inc
add
add
mov
adc
fild
pop
mov
jmp
adc
push
js
sbb
mov
imul
inc
or
and
adc
sbb
mov
adc
adc
adc
or
add
or
inc
add
add
out
jo
ficom
inc
dec
push
cmc
inc
push
ins
add
pop
add
cwde
pop
xchg
cwde
pop
and
cwde
daa
add
inc
setl
bound
addr16
aad
or
push
stos
and
push
push
inc
fsubr
sbb
(bad)
je
add
ror
and
inc
or
xor
mov
call
sub
mov
mov
scas
int3
inc
xchg
xlat
mov
scas
or
call
mov
sbb
mov
scas
or
add
(bad)
loopne
and
jbe
inc
push
inc
in
push
pop
inc
xor
adc
ret
movsx
or
jmp
jmp
add
mov
mov
ret
cmps
inc
xchg
pop
inc
movs
lock
push
stos
nop
clc
test
add
and
sub
movs
adc
rol
xor
(bad)
rcl
pop
push
mov
outs
cmp
sbb
inc
sbb
jecxz
sub
pusha
pop
cmp
sub
push
jbe
push
sbb
jmp
idiv
cdq
sbb
mov
ja
dec
adc
repz
mov
out
and
push
mov
sub
add
or
or
push
mov
adc
ret
ret
or
push
cmp
aaa
xchg
ja
push
mov
cmp
packssdw
jne
xor
xlat
mov
or
add
in
inc
add
adc
imul
je
fidivr
in
repz
clts
sbb
out
inc
push
mov
out
rol
sbb
data16
test
jmp
sbb
or
sahf
dec
in
or
or
push
or
pop
dec
in
push
sbb
or
or
adc
dec
xor
nop
pusha
or
rol
push
or
sbb
xor
push
ret
imul
mov
mov
push
xchg
and
xchg
(bad)
adc
mov
mov
dec
add
add
cmp
dec
xor
cmp
push
push
sbb
fdivr
sub
inc
in
arpl
and
loope
push
mov
xchg
xor
clc
adc
loope
or
into
(bad)
aam
or
jle
xchg
mov
push
arpl
sub
xchg
out
sahf
dec
pop
outs
jg
in
cs
mov
lahf
dec
cs
add
leave
leave
xor
sbb
leave
leave
inc
push
stos
cmp
and
push
ret
in
pop
add
ret
and
pop
and
sub
ret
inc
sbb
popa
mov
or
retf
popa
and
adc
adc
mov
sbb
shl
sbb
push
stos
sbb
mov
and
test
and
cs
mov
sub
sti
xor
push
jb
push
adc
sbb
push
aad
and
xor
and
daa
shl
mov
dec
lods
add
repz
popf
or
repz
adc
push
xor
iret
repz
outs
jl
cwde
cmps
mov
lock
aas
add
xchg
imul
add
add
xor
mov
push
xor
mov
or
inc
sbb
mov
mov
inc
nop
ds
mov
adc
jmp
mov
xchg
mov
inc
adc
fisttp
jnp
jo
into
sar
dec
push
dec
pop
iret
repz
push
pushf
lods
mov
cmp
in
add
pop
enter
sbb
pop
inc
pop
ds
ja
pop
ret
jo
ret
rol
xchg
or
xor
or
xor
or
or
adc
outs
push
das
push
or
iret
mov
and
cmp
sbb
sbb
rcl
mov
add
xor
(bad)
jge
add
sub
and
or
or
or
fdivr
je
dec
aaa
add
mov
dec
pop
jb
jmp
sbb
or
adc
or
es
add
pusha
or
pop
pop
dec
aad
rol
stos
inc
sbb
scas
add
xchg
jnp
jge
cdq
dec
push
pop
dec
out
cmp
jnp
hlt
add
adc
push
sub
push
mov
pop
and
retf
sbb
(bad)
push
add
xor
stos
pop
mov
or
or
add
xor
xchg
das
add
sbb
add
or
aas
xchg
push
cli
push
aaa
add
or
add
jns
sti
or
push
dec
cs
aas
push
popa
sahf
out
sahf
outs
jge
cdq
cmps
mov
push
out
ret
shl
loop
adc
pop
inc
loop
or
jb
sub
adc
jb
pop
adc
and
sbb
pop
jb
and
retf
retf
xchg
fld
or
(bad)
xor
add
neg
shl
or
fcom
push
push
jns
xchg
mov
adc
retf
push
popa
mov
pop
dec
inc
or
aas
(bad)
xor
adc
adc
icebp
or
mov
(bad)
out
(bad)
retf
mov
push
jbe
inc
cmp
ins
jp
dec
sahf
out
xchg
movs
rol
in
dec
add
add
and
add
add
cmp
push
scas
adc
fld
pop
and
ds
mov
jbe
add
test
add
or
sbb
jb
sbb
in
add
icebp
jb
push
in
fbstp
call
push
jns
daa
inc
(bad)
nop
push
and
jns
out
ds
pop
push
jbe
xchg
lds
inc
push
and
inc
and
xchg
daa
jns
add
sbb
add
xchg
daa
and
add
(bad)
cmps
inc
repz
pop
pop
int3
call
ror
pop
pop
xchg
ins
in
mov
stc
outs
(bad)
push
jns
out
push
push
pop
sub
sahf
out
gs
ins
and
in
add
push
add
aad
xor
fld
ins
push
jb
or
pusha
mov
add
test
or
or
aaa
dec
movs
jmp
jmp
es
cmp
inc
dec
push
mov
stos
or
nop
and
push
and
mov
dec
in
lds
jg
imul
push
push
pop
out
add
xor
add
sahf
out
sahf
movups
adc
adc
sahf
out
adc
(bad)
jg
out
sbb
and
and
ficomp
add
push
xchg
cmp
repz
mov
aad
jns
out
test
out
sahf
out
pop
outs
jg
sahf
out
sahf
mov
imul
jns
jnp
(bad)
sbb
sub
dec
repz
or
js
into
repz
xchg
mov
es
or
add
adc
and
and
push
sbb
adc
fsubr
or
test
test
sbb
push
xor
or
xchg
popa
cmp
and
sub
xchg
retf
adc
push
mov
adc
push
cs
inc
xchg
dec
sub
in
retf
dec
sbb
sbb
test
pop
sbb
pusha
push
popa
xchg
in
adc
xchg
outs
mov
push
aas
and
fs
and
inc
aad
push
gs
and
data16
stos
sbb
aas
and
jmp
es
mov
pop
and
sub
and
add
in
fwait
mov
ret
mov
xchg
xchg
or
cmp
dec
or
inc
outs
dec
and
add
jno
or
xchg
sbb
(bad)
lods
je
mov
adc
aaa
or
pop
fisttp
add
data16
out
push
pop
push
pop
jp
out
sahf
mov
das
jmp
or
pop
or
rcl
or
adc
fisubr
retf
add
pop
cs
pop
pop
scas
push
mov
push
shl
repnz
adc
jae
repz
and
pop
leave
jae
je
nop
iret
and
mov
cmp
fldenv
popf
nop
adc
dec
fld
or
and
dec
(bad)
ins
sbb
dec
(bad)
xchg
or
test
jo
mov
or
cmps
and
cmps
ja
inc
mov
xchg
push
mov
pop
xlat
(bad)
aam
add
jmp
add
pop
mov
inc
jno
mov
adc
stos
or
push
adc
xchg
inc
cld
lahf
sub
pusha
adc
push
sub
push
xor
xchg
push
inc
pop
sbb
lods
sti
hlt
ins
or
clc
xor
and
pop
ja
or
into
sbb
add
mov
xchg
cmp
mov
add
push
dec
jns
push
sbb
and
bound
jne
push
sub
xor
repz
popa
cmp
push
mov
in
sub
adc
fild
add
jne
bound
or
ret
bound
xor
push
gs
sahf
out
xchg
inc
sahf
out
in
dec
sahf
out
ficomp
push
sub
inc
push
pusha
stos
pop
ret
jns
in
push
jg
add
and
push
jg
jg
ins
add
or
xchg
xor
add
inc
xchg
and
or
push
xchg
and
and
mov
arpl
sbb
xor
push
arpl
push
inc
xor
rcl
adc
or
aam
sbb
push
addr16
aad
mov
cmps
lods
and
xchg
push
out
bound
dec
xchg
hlt
add
add
out
stos
iret
repz
sbb
dec
cmp
repz
fs
mov
das
mov
pushf
scas
push
lods
add
loope
pop
and
lahf
sbb
xchg
sbb
push
iret
iret
and
xchg
daa
jns
add
add
add
sub
sbb
pop
pop
push
push
xchg
repz
pop
mov
iret
test
cmp
bound
adc
cmp
stc
add
add
add
daa
aas
(bad)
jns
adc
repz
add
inc
mov
or
pop
sub
sub
or
mov
sub
jae
out
adc
sub
jle
add
cmp
xchg
jg
sbb
sti
and
mov
mov
or
out
enter
cmp
dec
lea
cmp
lahf
js
fcomp
mov
or
add
shl
and
jns
les
(bad)
pushf
sbb
js
add
test
jge
mov
pop
scas
lods
push
data16
xchg
push
or
into
daa
sbb
fcomi
mov
dec
adc
dec
(bad)
ja
dec
adc
sti
sub
pop
sbb
add
jnp
pop
sub
and
inc
loopne
cld
scas
adc
inc
cmp
push
cmp
jae
adc
fdivr
not
mov
in
push
push
loope
add
push
mov
pop
mov
pop
mov
cmp
sbb
mov
movs
(bad)
jns
imul
inc
imul
rol
add
adc
fild
xchg
pop
cmp
inc
lods
pop
jne
out
addr16
movs
mov
cmp
inc
mov
or
fcomp
stos
imul
add
rol
push
xor
or
push
jmp
sbb
push
dec
mov
lock
outs
or
pop
jo
xchg
add
outs
push
fdivr
cmps
push
and
lods
inc
adc
loope
sbb
xchg
nop
addr16
dec
mov
fadd
dec
inc
cwde
data16
pop
pop
cmps
or
out
jo
cmp
push
push
pusha
cmps
adc
pop
inc
sub
jbe
imul
(bad)
nop
and
push
pop
lds
push
sub
add
add
add
sub
rcr
add
adc
les
add
adc
and
xchg
nop
inc
sbb
fstp
out
je
lahf
das
mov
cmp
jl
fsub
je
push
ficom
imul
jbe
ins
add
(bad)
xchg
sbb
dec
fisubr
js
jg
jbe
sbb
add
fild
ret
add
cmps
pop
mov
out
ins
add
add
push
jno
out
ins
push
and
sbb
aam
cmp
outs
fist
cmp
pusha
fild
fimul
hlt
cmp
out
shr
pop
imul
mov
pop
imul
pushf
sbb
outs
jmp
fimul
and
pop
dec
outs
jae
out
outs
sbb
daa
daa
daa
and
adc
jno
call
jb
mov
fs
out
jae
jno
repnz
cmps
loope
je
sbb
jb
lods
or
sahf
ja
rcl
pop
xchg
push
add
dec
jno
dec
push
sbb
add
add
jbe
and
int3
dec
add
shr
sub
iret
jno
add
repnz
iret
jmp
(bad)
xor
fcmovne
inc
sub
sbb
jmp
inc
nop
dec
ds
fisttp
pop
inc
add
int3
push
add
sub
mov
inc
add
xchg
iret
loopne
dec
push
add
inc
adc
iret
fwait
adc
push
or
or
mov
push
cmp
aas
mov
push
dec
inc
mov
adc
adc
sub
stc
pop
stos
loop
fadd
or
add
or
pop
lea
lahf
and
les
pusha
push
imul
pop
add
cmp
inc
mov
push
rol
sbb
adc
nop
cmp
or
loop
xor
jge
add
adc
dec
rol
adc
dec
adc
lea
pop
and
mov
sbb
add
adc
push
pushf
mov
adc
mov
push
sbb
add
cmp
adc
mov
in
or
add
js
ret
add
rcl
adc
sbb
repnz
aam
dec
fstp
push
pop
cli
push
mov
cmp
loop
and
pop
retf
movs
pop
mov
pop
test
mov
cmp
in
mov
mov
adc
mov
jmp
gs
jecxz
sbb
pop
(bad)
gs
lock
xchg
sub
clc
std
push
xor
xor
test
mov
and
ss
push
add
mov
pop
mov
pop
or
pop
xchg
push
jnp
or
push
mov
mov
shr
fild
stos
mov
mov
xor
stc
nop
retf
mov
dec
les
xchg
add
pop
mov
add
mov
or
ror
jle
mov
cwde
add
fdiv
pop
dec
mov
inc
jne
and
(bad)
jmp
jbe
gs
clc
mov
add
push
jmp
dec
dec
or
repz
add
hlt
and
movs
scas
fcom
xchg
push
adc
jecxz
in
movs
hlt
and
clc
into
xor
sbb
jp
mov
sbb
pop
rcr
iret
jns
dec
sub
and
mov
fbld
or
xor
push
je
add
add
pushf
and
lods
adc
cmp
in
mov
inc
in
cld
mov
adc
ficom
int
adc
add
adc
inc
lock
cmp
push
rol
dec
pop
sysenter
xchg
je
lock
loop
nop
aad
pop
dec
mov
je
mov
cmp
adc
mov
mov
mov
adc
adc
mov
(bad)
fisub
test
pop
les
hlt
test
jne
scas
int3
sbb
aam
push
enter
out
jle
and
pushf
adc
mov
sbb
xlat
inc
push
call
rcr
cmps
js
inc
mov
xor
test
xor
rcl
xor
push
cld
and
fdivr
dec
pop
mov
add
jmp
loopne
mov
inc
fbstp
dec
jne
ret
rol
pushf
push
loop
sub
push
push
shl
rol
add
cmp
adc
mov
cwde
adc
loope
add
into
mov
cmp
jge
and
xor
adc
adc
scas
scas
adc
enter
lea
mov
sbb
inc
lock
cdq
pop
rcl
retf
sub
mov
(bad)
retf
push
out
push
icebp
push
xor
int
lods
adc
outs
pop
mov
rcr
add
xor
mov
sbb
jo
dec
and
and
jecxz
mov
cmp
mov
nop
outs
and
mov
inc
mov
jge
add
int
xor
scas
pusha
sub
bound
xchg
push
add
cmps
or
cmp
jle
inc
pop
pop
jno
jo
es
push
andnps
or
cmp
jne
and
loope
sbb
inc
sbb
dec
mov
stos
mov
lock
movs
loopne
bnd
push
movs
call
repnz
and
dec
add
mov
retf
ins
loop
rsm
sbb
jne
rcr
adc
mov
add
loopne
loopne
dec
xchg
add
rcl
ins
or
das
(bad)
sbb
out
aam
std
sti
das
test
mov
add
sub
jb
or
pop
js
jb
and
inc
add
jo
jmp
jo
sub
je
or
je
push
aaa
push
jmp
je
out
sti
sub
in
movs
add
sbb
push
or
movs
dec
or
add
mov
stos
cli
dec
add
mov
inc
leave
push
and
add
sub
sbb
ret
push
sbb
sub
and
xchg
pusha
push
call
fiadd
sbb
loopne
add
push
mov
and
(bad)
xchg
push
and
add
or
rol
retf
aad
(bad)
jo
pop
and
add
and
or
sub
or
jmp
add
sbb
call
or
mov
jmp
mov
adc
sub
in
dec
pop
jmp
fwait
sbb
shl
xor
sbb
cmps
lods
(bad)
or
ror
mov
cmp
inc
adc
inc
jb
lahf
out
push
stos
add
add
cmp
push
mov
sbb
xor
out
(bad)
jecxz
and
xchg
dec
push
mov
cmp
ja
pop
or
mov
in
fwait
pop
hlt
push
add
pop
xor
sbb
jl
bnd
ret
push
(bad)
or
xor
or
ds
inc
add
sub
xor
add
push
out
lds
les
sbb
jmp
fiadd
and
add
arpl
ficom
sbb
or
loopne
jne
sub
add
jle
pusha
inc
inc
arpl
outs
adc
and
lea
cmpxchg
adc
jae
inc
push
pusha
mov
test
inc
adc
dec
cmc
rol
sbb
inc
mov
movd
xchg
cmp
pop
je
scas
imul
adc
shl
aas
inc
bound
imul
sbb
adc
mov
add
scas
or
xchg
or
ins
ja
xor
jge
add
jne
or
dec
and
(bad)
lea
fadd
dec
add
add
cs
movs
cmp
push
or
mul
sbb
fild
add
or
mov
in
ins
add
sbb
push
test
into
(bad)
rol
jno
loopne
cmp
sbb
sub
mov
(bad)
ins
add
adc
inc
out
or
xor
pop
loopne
pop
adc
jbe
fsubr
push
add
mov
scas
ret
add
das
sbb
add
js
jl
push
xchg
and
outs
sar
lock
imul
mov
inc
jp
movs
pop
cmc
ret
mov
sti
popf
push
mov
jo
clc
mov
or
cdq
cmp
jl
mov
hlt
pop
pop
xchg
adc
adc
cmp
daa
inc
or
or
retf
jp
sbb
movs
popf
mov
xchg
lahf
mov
dec
cmp
lock
fstp
or
or
xlat
call
(bad)
dec
popa
adc
sti
clc
(bad)
es
test
mov
cmp
push
xor
sbb
shr
int
sub
je
jmp
sub
pop
add
add
pop
mov
cmps
fwait
push
data16
mov
pop
pop
sub
mov
xor
pop
into
mov
cmp
adc
loopne
repnz
or
xchg
or
sbb
in
xor
pop
push
cli
fs
mov
add
sbb
or
test
xchg
loopne
push
mov
add
ins
fild
add
and
(bad)
cmp
or
icebp
adc
daa
jmp
aad
mov
or
jl
hlt
or
pop
and
or
sub
outs
fimul
ja
mov
xchg
xor
push
aaa
in
jnp
ret
or
xor
add
inc
add
sbb
jnp
jmp
add
mov
add
iret
push
sahf
or
push
adc
ror
push
sbb
jmp
mov
ins
sub
jne
adc
js
cs
push
aas
adc
sbb
outs
inc
or
add
nop
inc
aaa
inc
(bad)
pop
cmp
dec
dec
dec
ret
gs
hlt
mov
pop
repnz
and
mov
push
fs
repz
mov
sti
sub
fs
sbb
adc
push
dec
adc
enter
adc
enter
jno
adc
or
daa
pop
add
pop
and
xor
lods
adc
bound
rol
sbb
add
mov
or
inc
sbb
pop
movs
ret
inc
jmp
pop
shr
mov
add
mov
mov
sbb
clc
inc
sub
popa
(bad)
push
clc
add
push
jmp
in
loopne
not
js
mov
xchg
data16
jns
in
and
(bad)
push
fwait
jb
xor
imul
mov
out
(bad)
aam
fwait
adc
xor
inc
or
push
pop
push
ficom
mov
or
sbb
push
sub
add
movs
adc
retf
or
xor
out
fdiv
pop
inc
sub
rol
sar
lods
ins
dec
out
cdq
add
mov
test
cmp
inc
dec
xchg
sahf
out
push
push
ret
or
adc
adc
sub
inc
pop
rol
shl
mov
fild
iret
mov
(bad)
mov
and
or
sahf
lahf
lahf
lahf
sbb
jmp
adc
or
js
add
imul
add
movs
test
das
push
push
pushf
sbb
push
sti
pop
in
fadd
cmp
in
pop
pushf
js
push
add
or
and
jae
ret
scas
lods
dec
(bad)
jl
movs
je
fild
pop
out
ja
fiadd
adc
jno
jb
dec
add
jmp
ret
sbb
fadd
push
arpl
ins
add
int
(bad)
jmp
addr16
adc
loope
ins
jno
cli
pop
ja
mov
mov
xchg
mov
xchg
pcmpeqd
and
push
jge
xchg
dec
fwait
xor
ror
test
inc
xchg
or
outs
jp
sbb
aad
push
push
xor
mov
in
mov
push
mov
jbe
and
or
inc
nop
aad
jbe
xor
add
cmp
add
cmp
and
or
sti
or
fild
jecxz
pop
daa
test
call
aaa
push
jnp
and
ret
lock
cmp
jb
or
add
add
add
mov
pushf
jl
mov
add
pop
inc
mov
push
or
push
and
pop
adc
pop
aaa
push
neg
xor
and
(bad)
(bad)
clc
sbb
cmp
push
pop
sub
stos
jl
rcl
inc
pop
ja
mov
add
adc
sar
mov
shr
or
int
pop
rcr
retf
sbb
leave
sbb
mov
add
adc
sbb
mov
or
jne
add
push
sbb
jecxz
jnp
mov
xor
push
add
pop
dec
jecxz
and
or
sbb
movs
sub
mov
stc
pop
jae
and
cmp
jb
push
adc
and
enter
add
inc
inc
jnp
or
in
pop
cmp
ja
or
pop
pop
imul
cmps
(bad)
adc
lds
test
pop
or
push
mov
dec
mov
push
inc
cmp
jae
dec
sub
sbb
sbb
jns
sbb
mov
in
imul
jns
in
mov
movs
mov
jo
mov
jne
adc
xchg
rcr
les
aaa
(bad)
and
dec
pop
and
mov
jns
sub
and
mov
ins
inc
test
add
mov
(bad)
push
mov
cmp
shr
or
inc
outs
push
pop
push
sbb
adc
pop
sbb
cmp
xchg
pop
out
push
rol
shl
pusha
ret
push
into
mov
sub
add
dec
pusha
sub
adc
lds
mov
js
add
inc
add
mov
aam
add
test
pop
or
cs
sub
jae
inc
inc
push
sbb
scas
in
mov
mov
or
push
inc
or
add
or
xor
sbb
shl
dec
push
cmp
jle
ds
in
push
sbb
pushw
test
pop
loop
add
inc
pop
scas
imul
fwait
xor
jmp
sbb
xor
imul
or
adc
xor
xlat
xor
push
(bad)
idiv
(bad)
jne
mov
cmp
je
sub
je
or
lock
push
mov
jae
or
xor
push
(bad)
mov
sbb
test
test
jge
aas
push
xor
scas
popa
cdq
push
push
cmp
dec
push
mov
xor
cld
and
sub
cmp
scas
push
mov
and
sbb
movs
mov
sub
xlat
xlat
add
xor
adc
sub
and
adc
xor
fild
adc
and
and
add
mov
pop
clc
adc
push
mov
imul
lea
or
and
aad
ror
ja
loopne
fwait
imul
dec
mov
cmp
mov
lea
push
daa
mov
mul
out
push
push
mov
inc
clc
ja
cmp
push
or
push
mov
sbb
adc
(bad)
mov
sti
xor
or
inc
ss
ret
jg
pop
jmp
or
and
ror
jne
pop
ret
inc
in
mov
jae
add
cli
adc
mov
xchg
rcr
nop
xadd
rcl
mov
lods
pop
pop
dec
push
clc
push
inc
or
test
add
adc
fadd
mov
jae
loopne
gs
inc
ins
mov
int
push
adc
and
inc
mov
in
adc
inc
rol
cmp
lock
push
sbb
add
ror
push
sbb
jmp
cwde
mov
cmps
loop
ror
fisub
adc
pop
ret
or
cmps
and
test
iret
xchg
popf
mov
mov
loopne
inc
jne
or
xchg
ror
cmp
mov
jnp
ret
inc
lock
das
inc
mov
ret
add
scas
or
clc
test
xor
stos
lock
adc
in
inc
adc
popa
mov
mov
sbb
mov
adc
aad
in
dec
popf
cmc
icebp
fucom
xor
clc
push
adc
add
mov
outs
xchg
sub
or
inc
das
iret
dec
pop
adc
cmp
pop
inc
hlt
push
repz
sbb
push
dec
(bad)
stc
xor
ins
jg
jne
mov
pop
add
hlt
sbb
dec
hlt
pop
adc
xor
call
xchg
hlt
(bad)
mov
test
jb
inc
cmp
mov
syscall
sub
popf
add
add
push
test
inc
or
adc
inc
dec
aad
out
or
or
mov
add
or
pop
inc
or
jmp
imul
sub
add
adc
ins
nop
or
push
inc
adc
or
not
pop
inc
sbb
or
clc
fucompp
js
mov
and
in
adc
or
and
sub
and
imul
pusha
adc
nop
add
mov
push
mov
neg
rcl
(bad)
push
pop
push
xor
add
dec
lock
ror
cmp
fimul
or
into
pop
cmp
test
xor
mov
gs
lahf
sbb
ror
and
fisttp
pop
mov
adc
pop
adc
in
mov
aam
sub
xor
nop
add
lds
adc
test
cmp
xor
or
sub
cmp
dec
(bad)
jne
or
mov
mov
pop
ret
xor
push
sbb
je
jno
aas
xor
add
adc
and
mov
sub
inc
mov
mov
jne
test
fst
rcl
(bad)
(bad)
jmp
hlt
cmp
shl
int
pop
cmp
data16
hlt
ror
pop
xor
push
adc
cmp
xchg
lds
(bad)
mov
cmp
mov
inc
xchg
je
push
xchg
mov
retf
(bad)
popf
imul
mov
popf
aam
cdq
inc
mov
or
adc
and
adc
(bad)
adc
and
shr
mov
or
loope
fs
ficom
xchg
xchg
outs
loope
mov
or
mov
pop
and
je
mov
ret
mov
sbb
mov
sub
mov
mov
pop
cmp
sbb
imul
fsubr
and
inc
adc
stos
or
cld
loopne
sub
in
fwait
xor
ins
dec
adc
es
push
loopne
jo
sub
shr
push
push
dec
or
lea
sub
sbb
dec
mov
adc
adc
call
mov
cmc
nop
xor
dec
mov
aad
add
sub
push
add
dec
or
add
xor
loop
dec
icebp
(bad)
shl
mov
push
dec
addr16
dec
icebp
xor
add
adc
icebp
adc
dec
cld
mov
(bad)
adc
test
leave
fwait
mul
clc
test
test
call
add
leave
aas
addr16
mov
movs
xchg
mov
mov
add
add
add
lahf
or
getsec
mov
jae
jge
(bad)
jbe
or
xchg
clc
push
xchg
add
mov
out
push
mov
bound
out
add
pop
xchg
das
sub
push
jge
fimul
jo
lahf
inc
inc
or
cmp
mov
neg
call
enter
in
inc
sti
cwde
or
in
test
jl
cmp
jl
xchg
and
inc
push
sub
call
daa
sti
data16
je
mov
fucomip
lsl
adc
cld
sub
add
jg
mov
adc
mov
push
test
jo
fadd
mov
(bad)
push
daa
push
inc
repnz
or
js
fmul
dec
fcmove
push
cld
cmp
je
sub
ret
add
lea
outs
and
fmul
xchg
jge
pop
mov
je
push
add
and
mov
cdq
aas
enter
mov
js
sahf
cmp
inc
js
adc
adc
sbb
cmps
fwait
xchg
call
jnp
iret
sub
ret
shl
aad
shr
jmp
cmp
or
inc
loop
ds
cmps
cmc
aam
and
out
lock
mov
inc
retf
cmp
or
loopne
daa
sbb
cmp
cmps
je
and
dec
daa
pop
les
push
sbb
sub
adc
inc
sbb
mov
call
cmp
xor
test
pusha
loope
sbb
pop
push
lods
and
and
or
cwde
add
fdivr
xlat
mov
xchg
aam
es
xor
push
sbb
test
or
cmps
outs
fild
ds
jg
push
test
test
pop
rcl
dec
add
ret
dec
pop
mov
mov
and
push
mov
inc
sub
mov
outs
dec
hlt
mov
pop
dec
sub
inc
pop
or
and
jmp
pop
loope
ins
mov
sub
mov
js
sbb
lock
jmp
or
nop
lock
jne
fwait
dec
cmp
in
test
pop
adc
pop
pop
mov
jo
mov
into
jle
dec
and
pop
inc
or
adc
mov
inc
inc
jo
push
shr
call
jbe
(bad)
cmp
jecxz
enter
push
jne
pusha
sub
inc
imul
fwait
stos
sbb
xchg
dec
mov
out
call
ret
xor
mov
mov
hlt
into
push
or
pop
repz
push
call
push
add
adc
ret
jecxz
or
mov
jg
jl
arpl
setg
out
mov
mov
mov
cmp
call
in
lods
sbb
jmp
pop
add
mov
and
or
inc
pop
fwait
mov
jecxz
je
xlat
pop
in
stos
pop
adc
sbb
(bad)
out
fsub
and
in
and
ret
push
ror
cmps
stos
inc
inc
js
adc
jle
jmp
and
daa
cmc
inc
adc
nop
pop
inc
(bad)
ror
xor
fild
xor
stos
sar
shl
mov
or
ret
mov
push
inc
push
aad
outs
or
shr
pop
add
hlt
add
add
adc
inc
hlt
xchg
je
add
sbb
xchg
mov
push
hlt
sbb
sbb
or
add
fs
cs
shl
sbb
mov
imul
jmp
hlt
shr
add
into
inc
cld
xchg
mov
nop
xor
cmp
jge
or
jbe
mov
cmove
and
pop
loopne
fidiv
lods
sbb
iret
mov
adc
into
mov
dec
ret
int
jg
xchg
rcl
rol
shl
add
(bad)
mov
adc
or
jbe
sbb
sbb
mov
ds
fdiv
push
mov
push
shr
xor
jl
sub
xchg
jl
pop
adc
adc
cmp
jl
inc
ret
pop
mov
fwait
adc
(bad)
or
and
bound
sti
adc
and
enter
or
pop
dec
inc
push
adc
jecxz
add
inc
xchg
xor
inc
pusha
cs
fdivr
jle
loopne
clc
(bad)
not
lea
dec
jne
mov
and
in
adc
xchg
mov
dec
dec
nop
or
mov
adc
icebp
xchg
retf
or
stos
jge
adc
inc
mov
in
push
imul
or
or
fs
and
xor
mov
sbb
cmp
das
test
xchg
xor
mov
push
loope
mov
addr16
or
dec
test
pushf
movs
lahf
adc
xchg
fcom
aam
xchg
cmps
mov
xor
sbb
mov
sub
lock
sbb
sbb
das
or
loope
cmp
jl
cmp
cmps
clc
mov
stos
push
cmp
stos
cmp
adc
enter
ret
rcr
push
loop
adc
cmp
nop
scas
les
or
add
stos
ret
(bad)
mov
int
sbb
inc
mov
push
cmp
in
(bad)
and
inc
or
adc
test
pop
mov
mov
and
call
popf
add
into
js
xchg
clc
stos
pop
xchg
cmp
test
sbb
retf
adc
inc
nop
imul
ds
dec
repz
shl
mov
ret
sub
leave
mov
mov
adc
push
mov
adc
or
clc
or
xchg
xor
inc
mov
sbb
ja
sub
bound
scas
clc
loope
daa
pushf
loopne
iret
jl
fbld
xor
ins
aad
stc
adc
fisttp
jnp
sub
in
mov
fcom
jb
pop
mov
shr
sbb
and
icebp
add
lds
dec
loop
mov
sar
(bad)
mov
xor
dec
sbb
loop
pop
sub
(bad)
movs
add
and
xor
lock
(bad)
mov
push
add
out
jmp
mov
out
add
dec
call
inc
jg
xlat
(bad)
mov
mov
mov
inc
dec
jne
movs
add
js
cmp
ficomp
js
(bad)
push
jmp
(bad)
movs
push
adc
jmp
daa
loop
mov
jg
cmc
add
mov
and
(bad)
movs
cmp
cmp
or
mov
pop
or
mov
pop
add
sar
mov
or
mov
mov
pop
ret
add
pusha
mul
sub
movs
sub
dec
add
push
lock
mov
cmps
mov
mov
test
pop
cmp
popa
jmp
dec
test
mov
adc
hlt
lods
xor
sub
sub
inc
xchg
out
mov
sub
cmps
adc
neg
fadd
xor
adc
cwde
xor
fild
xor
das
leave
inc
sub
jmp
lock
hlt
fwait
loopne
and
aad
add
xor
shl
sbb
cwde
movs
push
mov
sub
mov
mov
mov
xor
add
push
rcl
and
pop
and
out
add
fwait
adc
ss
mov
sub
sbb
add
cmp
mov
ret
sub
int
cmps
nop
push
call
rcl
fist
push
cmp
loopne
xor
xor
adc
shl
sar
inc
and
xchg
mov
inc
inc
ret
bound
(bad)
adc
add
call
das
jl
fsub
or
or
pop
inc
xchg
and
pop
push
scas
adc
outs
mov
in
cld
xor
or
rol
call
sbb
shl
pop
cmps
stos
hlt
and
dec
push
xchg
jo
sbb
jns
lods
call
fbstp
push
leave
or
shr
gs
pop
sub
dec
fstp
daa
dec
pop
mov
add
sbb
in
shr
cmps
fs
adc
fmul
imul
lahf
xor
sbb
loope
mov
lahf
fs
mov
pushf
mov
shl
sub
adc
fistp
jo
add
scas
call
rol
popa
jmp
sbb
mov
push
lea
xchg
inc
jecxz
push
ret
aad
fsub
fstp
leave
mov
adc
push
ret
dec
lock
jb
lock
into
mov
adc
in
imul
mov
push
add
dec
in
push
inc
clc
add
fdivr
and
inc
adc
adc
adc
arpl
je
jno
dec
scas
jg
add
mov
rcl
xor
adc
adc
or
mov
bound
cmp
dec
fcmovbe
add
scas
les
adc
mov
pop
mov
mov
out
pop
and
xlat
pop
add
adc
ret
dec
mov
pop
mov
and
loopne
setns
and
mov
mov
shr
dec
push
jmp
push
mov
or
inc
mov
inc
adc
or
mov
and
push
inc
push
cmp
sub
and
add
add
mov
and
dec
mov
mov
(bad)
lea
pop
enter
or
jb
inc
rcr
(bad)
loopne
pop
sbb
mov
sub
dec
ret
or
das
and
mov
lahf
and
or
sbb
mov
in
mov
push
loopne
dec
mov
inc
mov
lds
push
inc
mov
fs
push
(bad)
pop
inc
mov
dec
adc
mov
jge
mov
(bad)
mov
ins
adc
pushf
mov
or
dec
popf
pop
pusha
lds
test
lea
and
lgs
dec
jb
ins
mov
mov
and
movs
jl
cmp
test
cs
(bad)
mov
add
and
rol
test
mov
fist
push
xchg
mov
jecxz
enter
dec
out
mov
or
(bad)
cmp
mov
xchg
ja
xchg
xchg
pop
inc
add
mov
jo
xor
dec
lea
inc
mov
push
cli
adc
enter
rcl
rol
leave
adc
ins
cmp
addr16
mov
fisttp
fisttp
adc
push
adc
cmp
enter
in
inc
lock
adc
jb
sbb
sub
in
xchg
sbb
jmp
mov
mov
mov
mov
jecxz
(bad)
aas
cs
xor
sbb
inc
loope
outs
mov
push
enter
retf
push
pusha
xor
dec
dec
into
add
test
test
inc
jl
gs
push
mov
shl
inc
cmp
push
mov
das
test
xchg
adc
(bad)
out
mov
or
or
lock
pop
arpl
(bad)
jb
xchg
pop
retf
in
sbb
jo
inc
xchg
mov
shr
inc
sub
fwait
add
lea
retf
mov
popf
jns
(bad)
ret
aaa
push
retf
inc
and
in
adc
enter
push
xor
out
inc
add
out
mov
dec
(bad)
mov
adc
test
dec
or
daa
rol
pop
int3
lock
mov
adc
pop
int3
loope
push
les
test
lea
mov
dec
dec
lds
nop
mov
push
rol
das
call
jns
push
cmps
sar
mov
pop
cmp
neg
(bad)
and
lods
pop
mov
inc
push
add
pop
xor
push
test
daa
pop
or
test
cmp
in
leave
sub
sbb
and
pop
mov
stos
mov
(bad)
adc
in
push
mov
mov
add
and
mov
mov
adc
mov
and
adc
add
inc
pushf
or
pop
scas
nop
add
addr16
mov
and
add
ret
pop
dec
pop
addr16
ret
and
stc
jg
ins
and
inc
cmp
jg
sar
test
ret
rol
les
add
dec
pop
ror
mov
mov
in
pop
dec
ret
push
ret
pop
mov
and
xchg
pop
inc
jg
add
and
mov
loopne
push
pop
pop
loopne
pop
push
int3
jg
add
cmp
sub
out
jg
and
jb
aad
inc
and
aad
or
sbb
jg
cmp
inc
adc
xchg
add
mov
fstp
cmp
dec
ret
fadd
adc
fcmovb
push
outs
pop
std
mov
sub
outs
xor
fs
mov
cdq
cli
fsubr
cmp
jo
inc
aas
rcr
sbb
cmc
jb
mov
add
(bad)
dec
push
inc
add
add
and
sub
jb
in
imul
stos
cmc
dec
int3
int3
aas
mov
mov
mov
mov
mov
dec
add
pusha
mov
lds
das
leave
int3
into
sub
push
loopne
test
(bad)
sub
dec
sbb
ds
(bad)
add
cmp
add
xor
cmp
inc
fist
(bad)
mov
mov
mov
ret
out
mov
and
hlt
xor
imul
inc
outs
push
addr16
mov
xor
pop
pop
dec
adc
jne
inc
add
xchg
xor
xchg
icebp
or
add
mov
int3
jp
inc
cmp
adc
sub
or
push
pop
es
or
jae
(bad)
pop
daa
inc
mov
sub
mov
jp
jbe
cmp
jl
push
scas
cli
into
add
add
dec
hlt
jne
test
adc
inc
or
dec
pop
out
mov
out
add
in
push
daa
and
jns
inc
and
aam
add
xchg
or
stos
pop
test
cmp
stos
shl
mov
nop
fdiv
jmp
mov
mov
add
js
and
pusha
push
sar
ret
iret
adc
outs
nop
mov
cwde
frstorw
(bad)
sub
pop
rcr
or
out
and
jne
add
popa
push
pop
xchg
adc
sub
int
push
into
les
shl
or
add
(bad)
push
cmps
mov
add
mov
test
ret
dec
repnz
mov
push
and
dec
iret
push
fmul
xchg
inc
rol
pop
leave
mov
ja
or
mov
in
xchg
push
ins
and
adc
push
shr
loopne
add
cmp
xchg
xchg
pushf
cmp
ja
loope
cmp
in
sub
out
push
add
xchg
outs
jl
cmp
inc
cmp
jl
add
push
fsub
aas
add
inc
repnz
push
cld
jno
add
shl
aas
ret
hlt
push
mov
aam
inc
rol
adc
mov
aas
add
dec
push
aam
call
in
push
or
out
inc
mov
fcom
cmp
daa
fsub
cmp
int3
jmp
(bad)
sbb
loopne
jmp
daa
dec
inc
add
mov
daa
mov
or
adc
aad
or
call
jl
ds
pop
addr16
dec
and
mov
dec
aam
movs
push
jg
fcom
outs
fdivr
pop
test
mov
push
push
outs
fstp
repnz
pop
and
and
sub
mov
out
enter
(bad)
fisttp
enter
mov
lods
push
inc
dec
outs
ficom
add
adc
outs
push
xor
jns
jmp
test
dec
jmp
adc
or
outs
fimul
sbb
adc
push
and
inc
hlt
mov
cmp
enter
je
mov
lods
outs
pop
test
pop
or
sbb
test
adc
sub
fcomp
in
mov
inc
jno
xlat
push
jbe
adc
pop
jnp
pop
pop
add
or
in
fisubr
movaps
test
cmps
jne
xor
in
imul
fbld
out
cmps
sub
cmp
daa
push
leave
stos
add
es
in
fsubp
stos
or
fdivr
out
sbb
adc
(bad)
dec
push
adc
iret
int
movs
jmp
cmp
test
inc
fild
jg
add
test
dec
add
aaa
add
repz
nop
fcomp
xchg
sbb
xor
add
push
add
repz
shl
icebp
or
ins
and
inc
sbb
out
add
imul
repnz
cmps
dec
(bad)
shl
sub
lock
mov
and
or
sbb
inc
jmp
pop
dec
(bad)
les
xor
xchg
repnz
fiadd
or
or
lahf
mov
leave
push
xchg
ds
out
aam
mov
test
jecxz
test
mov
leave
test
sub
jecxz
pushf
in
pusha
jecxz
out
in
push
sub
out
adc
sbb
sub
inc
add
push
jmp
sub
in
add
outs
cmp
xlat
jno
add
out
and
jmp
xor
or
call
jo
daa
popa
push
jb
call
and
in
loop
and
out
xlat
cmps
mov
aas
dec
mul
xchg
jecxz
cmp
jo
or
leave
xor
mov
div
imul
clc
mov
mov
push
lock
or
clc
call
in
dec
add
fadd
xchg
sbb
(bad)
call
rcl
out
or
mov
sbb
inc
push
call
add
cwde
add
shl
dec
xchg
inc
add
jmp
scas
in
inc
and
imul
cli
inc
add
pop
push
dec
push
dec
pminsw
inc
xor
das
cli
inc
mov
add
inc
xor
inc
loopne
dec
out
jmp
repnz
cld
int3
jae
jo
inc
jle
push
in
mov
int3
jae
or
loope
enter
sbb
sub
or
mov
and
(bad)
in
in
lea
and
adc
or
inc
cmp
pop
int3
aas
pusha
pop
mov
in
inc
aas
pop
in
mov
sub
inc
sti
or
aas
or
mov
mov
int3
jae
ret
pop
aam
in
push
dec
add
xchg
mov
jae
outs
mov
sbb
mov
int3
add
inc
jmp
cmps
add
xchg
ret
or
imul
push
hlt
pushf
mov
int3
jns
pop
add
push
push
xor
add
add
fwait
jle
add
adc
push
jo
dec
imul
(bad)
aas
clc
add
lock
push
push
adc
les
pop
inc
mov
ins
mov
pusha
adc
adc
adc
xchg
and
(bad)
data16
xor
and
or
loopne
and
push
sbb
mov
popa
popa
xchg
(bad)
out
or
sbb
add
gs
or
dec
sub
outs
mov
test
add
add
hlt
add
ins
addr16
aad
sbb
push
or
outs
mov
pop
aad
mov
pop
inc
sub
xor
fst
push
xor
and
inc
or
dec
ror
loopne
lods
pop
sub
jo
push
mov
fs
or
inc
movs
and
adc
sub
jae
push
or
(bad)
and
imul
or
ja
push
push
and
fistp
cmps
or
dec
cmp
pop
push
push
inc
outs
das
test
mov
push
or
jecxz
enter
add
neg
xchg
sub
xor
jo
add
mov
xor
adc
jecxz
push
push
dec
adc
ror
or
cvttps2pi
ins
add
inc
ror
cmps
adc
retf
pop
push
(bad)
mov
je
call
jg
neg
fimul
push
clc
das
push
or
sub
gs
sbb
pop
adc
dec
inc
clc
js
jae
dec
adc
mov
adc
add
xor
dec
adc
imul
fild
or
cdq
psrld
or
xor
inc
leave
leave
leave
ins
pcmpeqb
in
or
fidiv
xor
adc
xchg
aam
cmp
jns
or
mov
call
inc
sahf
pushf
pushf
mov
adc
pop
mov
loopne
int3
adc
adc
call
mov
imul
les
dec
add
loope
dec
add
or
retf
jno
mov
sbb
test
pusha
mov
inc
loope
inc
adc
repnz
and
add
movs
adc
mov
pop
jae
mov
les
sub
and
pop
mov
pop
fwait
int3
mov
mov
pop
or
inc
push
sbb
jae
bound
add
mov
push
shr
sub
lds
adc
pop
adc
bound
pop
xchg
sbb
xchg
mov
pop
aad
rcl
imul
inc
and
pop
pop
sbb
imul
mov
bound
sub
pop
fwait
and
or
jecxz
mov
les
bound
mov
add
pop
adc
xchg
dec
and
retf
cmp
jecxz
jno
sbb
bound
cmp
pop
(bad)
mov
inc
mov
pop
push
ins
jmp
lods
add
push
push
sub
es
jge
gs
adc
scas
add
adc
movs
or
(bad)
sbb
xchg
fcomip
dec
mov
jb
ffreep
icebp
pop
adc
xor
pop
inc
adc
test
in
or
add
scas
dec
test
loopne
push
prefetcht0
call
pushf
cmps
sbb
xchg
xchg
ss
inc
add
dec
aas
adc
sbb
mov
das
jge
dec
and
xor
jno
ins
lsl
addr16
mov
or
out
and
dec
loop
mov
shr
cld
adc
call
dec
add
sbb
adc
pop
add
add
sbb
push
adc
sbb
mov
add
scas
xor
cmps
aam
aas
loopne
test
rol
adc
sbb
add
mov
push
fs
test
dec
outs
mov
inc
cmps
js
scas
call
xchg
inc
leave
mov
push
sbb
sahf
adc
mov
pminub
scas
cmp
pushf
pushf
fsub
add
jl
hlt
dec
dec
inc
sahf
cmp
dec
cwde
out
daa
and
sbb
rcl
sbb
leave
enter
iret
push
sbb
leave
leave
leave
jbe
sar
cmp
xsaves
outs
pop
and
pop
bound
or
xor
movs
sbb
sbb
add
shl
(bad)
cmps
push
jns
and
mov
mov
xor
mov
mov
adc
inc
add
mov
cmp
mov
shld
in
inc
push
add
mov
setnp
mov
sub
cvtdq2ps
leave
or
shld
out
sbb
and
adc
leave
and
stc
movs
sbb
movs
sbb
adc
mov
add
add
mov
imul
and
or
dec
push
movs
sbb
xor
jns
inc
add
adc
add
adc
shl
xchg
dec
cmp
add
inc
cld
adc
sar
in
adc
cmp
mov
(bad)
rol
cs
add
cwde
test
inc
push
push
push
mov
xor
push
pop
ins
sar
pop
inc
cmp
adc
int
clc
adc
mov
ja
leave
pop
add
mov
getsec
mov
ret
lock
pop
out
sbb
sbb
mov
or
push
sub
push
das
imul
add
push
inc
dec
in
(bad)
call
or
test
sub
add
cwde
cmp
adc
hlt
or
fucomp
sub
mov
xchg
inc
pop
add
or
ss
xor
mov
mov
fild
or
push
in
retf
js
das
mov
mov
addr16
mov
jmp
inc
jmp
cmp
dec
or
je
lock
mov
enter
and
addr16
call
cmp
and
mov
ret
call
jg
fisttp
inc
sahf
sub
daa
daa
and
daa
pusha
test
xchg
xchg
daa
daa
icebp
push
sub
xchg
xchg
xchg
cmp
mov
scas
js
std
mov
call
fwait
cwde
sar
(bad)
xor
push
inc
add
scas
jmp
arpl
aam
add
push
cs
push
lock
lea
push
cmp
mov
leave
push
(bad)
rol
add
lea
mov
mov
shl
fs
fstp
adc
lea
mov
lea
cmp
stos
popf
mov
fadd
fs
and
push
lea
or
mov
and
mov
imul
lea
pusha
jge
and
sbb
imul
pop
lea
or
xor
jmp
cmp
lea
pop
imul
push
add
push
cmp
lea
add
sub
or
push
sub
push
push
and
push
sub
pop
add
push
sub
dec
push
jmp
dec
in
je
push
pusha
mov
dec
mov
sbb
xor
mov
rcl
stos
cwde
lock
mov
clc
cmp
imul
xchg
or
sub
and
xor
cmps
adc
push
aaa
shl
in
fbld
add
cli
adc
je
aas
sbb
adc
test
inc
adc
into
jo
push
dec
sbb
inc
popf
psllq
rol
adc
dec
fbstp
add
dec
bound
leave
test
fild
or
jg
cs
and
inc
push
jg
inc
sbb
sbb
in
call
das
inc
xor
dec
dec
adc
aaa
xor
rcr
xacquire
shr
das
sbb
je
xchg
adc
loopne
jmp
scas
dec
push
das
mov
cmp
jb
jns
repz
and
pop
ja
ror
jbe
inc
fisubr
out
lods
repnz
fwait
mov
xor
cld
push
and
mov
ins
add
int3
mov
cmp
xor
lock
sbb
xchg
into
icebp
mov
fsubr
and
and
sub
cmp
into
xor
fimul
sub
xor
xchg
fistp
ror
or
leave
leave
leave
inc
mov
in
xor
jb
repnz
ss
out
cmp
sbb
aaa
inc
jp
pushf
mov
jmp
sahf
pushf
mov
cmp
test
out
pop
call
push
shr
add
outs
loopne
movs
out
pop
and
movs
dec
enter
dec
add
ins
sub
push
or
ds
mov
daa
stc
mov
inc
xchg
pop
xor
jmp
xchg
add
cmp
lods
mov
movs
adc
add
cmp
or
pop
mov
xor
and
rcr
dec
mov
add
lock
adc
stc
imul
loopne
sub
aad
mov
dec
test
inc
lahf
push
or
mov
sub
adc
or
push
push
and
out
dec
dec
je
pop
pop
xor
shr
jae
shl
test
out
cmp
movs
rol
and
jns
sbb
dec
test
or
pop
pop
fsubr
mov
add
outs
dec
je
mov
outs
pushf
repnz
in
mov
push
push
pop
and
mov
into
inc
and
mov
bound
inc
pop
jne
pop
mov
cmp
sbb
shl
in
add
mov
inc
dec
lahf
fadd
in
add
push
and
(bad)
clc
sub
add
push
add
dec
and
in
cwde
dec
rdtsc
adc
jg
push
adc
adc
jg
push
adc
and
pop
add
neg
inc
cmp
das
mov
sub
clc
sub
adc
adc
mov
adc
or
mov
clc
add
mov
mov
mov
sbb
pop
pop
add
jo
ret
rcr
sbb
inc
xor
neg
adc
aas
and
sbb
rcl
push
nop
das
cmps
aas
inc
push
push
or
(bad)
mov
or
cwde
hlt
or
lds
sub
dec
test
inc
xchg
cmp
dec
sub
test
fwait
loop
repnz
dec
mov
jl
sbb
inc
push
inc
jnp
dec
dec
outs
jae
lods
bsf
xor
daa
daa
daa
and
fsub
xchg
xchg
xchg
xchg
inc
pop
nop
(bad)
mov
rcr
pop
shrd
mov
packuswb
dec
dec
popf
xlat
(bad)
and
daa
daa
and
(bad)
sub
popf
std
mov
pop
xchg
sbb
inc
jg
inc
dec
add
hlt
fst
inc
jge
aad
sub
add
xor
add
jno
inc
xchg
fscale
and
mov
in
cmc
mov
mov
sbb
fmul
inc
adc
fnstcw
fst
inc
test
cwde
mov
pop
adc
push
mov
fwait
adc
push
mov
fstp
xchg
adc
adc
test
and
inc
mov
add
adc
adc
adc
jns
sbb
push
pushf
mov
or
push
or
fstp
add
fst
inc
pop
adc
rcl
fldcw
inc
mov
add
inc
add
mov
adc
push
cmp
je
adc
sub
test
add
sub
in
push
push
push
lods
inc
stos
push
lock
aad
sbb
inc
add
inc
xlat
and
and
fimul
mov
es
jp
fs
mov
or
loopne
jno
call
push
and
add
sbb
adc
clc
adc
mov
rcl
int3
jae
shl
pop
out
pop
dec
imul
add
cwde
lahf
mov
je
push
pop
xlat
xor
sub
and
xchg
xor
call
xchg
add
mov
xchg
adc
inc
adc
(bad)
std
push
cli
sbb
or
lds
mov
xor
inc
scas
adc
push
push
sub
std
std
ins
adc
pop
aaa
add
add
jmp
call
clc
cld
mov
inc
dec
xchg
dec
push
push
inc
loop
sbb
das
ror
push
adc
loopne
xor
pop
sbb
cli
repnz
push
jb
rcl
loopne
push
and
aam
dec
popf
xchg
fnstcw
sub
mov
lock
sub
(bad)
btc
fs
int
dec
imul
cmps
cmp
jns
out
pop
push
dec
jae
cmp
sbb
jb
retf
cmps
pcmpgtw
sbb
imul
fsub
inc
or
xor
es
stc
test
or
push
push
dec
cli
pop
and
hlt
ror
dec
test
sbb
pusha
jno
pusha
and
cli
lds
es
test
fld
sbb
dec
rol
test
push
xor
sub
pop
mov
sbb
lds
push
cmp
cmp
mov
in
repnz
push
push
adc
ja
add
imul
add
push
push
and
test
push
mov
lahf
jg
push
sub
mov
pop
ins
shl
adc
jae
pop
or
test
or
push
jge
inc
or
test
mov
pusha
rol
dec
test
xchg
movs
pop
mov
pusha
mov
push
or
jbe
xchg
adc
adc
push
push
sbb
dec
iret
push
push
mov
add
pop
add
xor
lods
shl
add
les
push
lods
nop
push
xor
clc
lods
int3
clc
aam
cmp
mov
mov
cmp
(bad)
iret
sbb
inc
imul
jno
idiv
faddp
push
shl
neg
push
inc
lods
mov
or
push
addr16
fist
ins
push
jp
test
jle
test
push
inc
add
add
cmp
pop
push
add
loopne
nop
push
repnz
add
add
nop
jl
scas
add
cmp
add
mov
push
cmps
lock
xor
or
inc
iret
pop
push
sub
cmp
pop
std
gs
and
inc
hlt
push
dec
mov
xor
mov
outs
sub
add
mov
push
jmp
shl
push
or
sahf
imul
imul
mov
push
int3
into
je
in
inc
push
pop
divps
add
cdq
and
mov
dec
imul
ret
mov
repnz
xchg
add
lods
xchg
sbb
aas
jo
loope
shl
xchg
add
adc
int3
daa
and
xor
add
adc
add
or
inc
add
xchg
jg
lods
call
pextrw
adc
push
bound
in
idiv
shl
pop
or
cli
push
fs
pop
dec
outs
mov
pop
pop
pop
pushf
daa
mov
call
pop
pop
maxps
xor
pop
sub
xchg
mov
add
and
test
test
sub
sbb
js
scas
sbb
test
pop
stc
pusha
pop
pop
and
add
or
pop
fstp
inc
hlt
cwde
pop
stc
add
dec
inc
adc
(bad)
xlat
icebp
fild
lods
xlat
je
mov
inc
or
or
add
in
int
clc
dec
sub
clc
pop
data16
cmps
adc
lock
aaa
pusha
pop
mov
cmps
pop
xlat
lds
dec
xchg
ins
test
push
and
or
mov
jns
imul
loopne
imul
sub
shr
add
xchg
call
inc
xlat
mov
pop
lds
sub
pusha
out
adc
xor
pusha
inc
add
sbb
call
(bad)
hlt
sbb
xchg
push
sbb
dec
mov
pop
in
jmp
ins
cmps
adc
push
cmovnp
cdq
into
cdq
pop
push
mov
scas
lods
shl
adc
aaa
mov
mov
mov
pop
add
mov
jmp
mov
lods
jne
pop
xor
adc
pop
rcl
xchg
xchg
add
outs
inc
outs
and
xchg
add
push
popf
jge
test
(bad)
push
xchg
gs
xor
push
mov
stos
aas
xor
pop
cmp
push
fwait
jmp
mov
jae
aas
sbb
mov
add
lahf
dec
push
and
inc
adc
cmp
mov
xor
mov
in
inc
lahf
shl
or
pop
mov
add
addr16
loope
dec
cs
mov
cmp
rol
adc
lahf
scas
inc
ret
mov
sub
dec
lahf
js
(bad)
test
add
push
mov
jbe
(bad)
pop
or
es
call
imul
aaa
push
popa
push
inc
jbe
xor
(bad)
push
cmp
lock
xchg
push
jb
fsub
push
and
push
mov
loopne
stos
jge
pop
and
imul
adc
jmp
push
inc
shr
sub
push
sbb
cmp
lods
lea
imul
push
enter
mov
jg
ins
pop
dec
ins
fistp
jg
ins
outs
test
cmps
mov
wrmsr
ins
jg
add
sbb
mov
lods
scas
ins
sub
pop
xchg
add
sub
jb
push
add
sub
movs
outs
jecxz
ins
jmp
inc
xchg
je
into
scas
out
pop
and
inc
ins
fbstp
adc
xor
loop
mov
sub
movs
(bad)
inc
cmps
sbb
outs
outs
inc
and
call
mov
lahf
xchg
jo
je
cmps
xchg
outs
outs
lahf
iret
outs
xor
int3
into
pop
jo
dec
mov
dec
adc
add
xor
cmp
test
mov
mov
push
cmp
nop
jo
sbb
mov
jo
xchg
outs
add
loopne
addr16
jb
xor
adc
das
out
jmp
shl
retf
das
repz
mov
leave
add
adc
jno
cmps
(bad)
jo
pop
pusha
jb
jle
mov
push
(bad)
scas
jb
loopne
sub
(bad)
das
jmp
jge
leave
add
inc
mov
xor
movs
add
jno
test
dec
ins
jae
adc
pop
jnp
int3
jae
or
or
pop
in
js
rcr
shl
dec
es
nop
cwde
je
mul
inc
inc
jne
daa
enter
out
fsubp
adc
push
test
jg
cmps
stos
cmp
arpl
inc
jge
clc
cmp
mov
jnp
gs
inc
pop
out
jmp
scas
add
(bad)
(bad)
scas
jns
rcr
push
push
ret
or
or
imul
pop
inc
loope
mov
jne
add
and
push
inc
outs
dec
or
jnp
fild
mov
xchg
inc
or
ins
addr16
popa
jge
or
push
ror
add
fldl2e
shl
mov
sbb
mov
pusha
and
clc
jl
mov
imul
fs
pop
and
or
outs
or
gs
outs
jb
popa
ins
or
call
pop
jbe
or
inc
mov
scas
jnp
or
pop
imul
js
imul
aaa
xor
or
jae
and
jb
inc
push
sbb
pop
(bad)
jb
jb
add
inc
adc
xchg
clc
ds
ins
popa
jns
push
mov
mov
sub
mov
ins
or
cmp
pop
or
xor
jl
inc
imul
inc
dec
sub
sbb
sub
das
and
ja
push
lea
pusha
push
icebp
(bad)
rcr
lock
outs
dec
add
out
xlat
dec
arpl
jg
je
add
push
frstor
jo
cmp
shl
jmp
rcr
adc
pusha
iret
sbb
and
or
out
(bad)
pop
xor
rdmsr
xor
xor
cmp
cmp
call
jns
dec
jnp
jl
ds
addr16
aas
mov
nop
ds
jne
jnp
sbb
call
push
and
inc
fadd
xor
int3
dec
push
sar
fnstcw
jl
movs
mov
push
jge
imul
push
int3
mov
ds
xchg
push
test
loopne
push
push
or
pop
std
(bad)
cmp
dec
gs
shl
xchg
inc
push
imul
mov
mov
jo
fadd
sub
and
sbb
ror
dec
push
mov
jge
mov
(bad)
push
dec
hlt
jae
fisttp
or
pop
popf
and
sub
add
jbe
ret
sub
push
sbb
es
xchg
or
push
rcl
or
mov
es
(bad)
inc
dec
(bad)
ja
hlt
call
and
pop
xor
sub
loope
and
jp
xor
js
push
add
mov
scas
or
ja
out
scas
sub
(bad)
cld
xchg
cwde
push
ins
jecxz
and
pusha
cld
test
jl
sbb
pop
add
push
adc
dec
dec
cld
xor
add
rsm
iret
add
test
lsl
fcom
outs
(bad)
sub
mov
push
cmp
(bad)
dec
dec
inc
sahf
push
or
and
test
lfs
test
jb
and
xchg
repnz
nop
in
lsl
jb
cmc
adc
sbb
push
cmp
or
(bad)
pusha
sbb
mov
iret
les
repnz
ja
inc
enter
dec
imul
outs
add
add
jae
cwde
inc
dec
addr16
enter
sub
dec
nop
sbb
daa
xor
loope
inc
shl
dec
cmp
xor
and
pop
(bad)
dec
add
popa
je
inc
or
xchg
sbb
cmp
stos
jle
loop
adc
aaa
mov
pushf
fadd
and
fadd
push
or
cmc
and
cwde
jo
movs
add
cmp
mov
or
sbb
repz
in
push
aaa
add
adc
pop
shr
xchg
cmp
push
test
jo
pop
(bad)
aas
and
(bad)
xchg
dec
mov
loop
popa
cld
xor
popa
cmp
test
jo
ret
add
inc
enter
and
inc
dec
arpl
add
adc
inc
dec
dec
mov
test
xchg
add
and
and
cdq
adc
push
or
inc
lds
add
imul
inc
ja
ss
cs
sbb
mov
sbb
fcomp
mov
pop
mov
or
adc
or
dec
sbb
rol
jno
and
pop
adc
or
fs
sbb
jno
fisub
and
xor
das
cmp
xchg
jb
add
pop
addr16
add
popa
stos
or
cmps
ins
jg
inc
adc
inc
movs
aas
mov
and
dec
mov
sub
inc
nop
push
jo
dec
loopne
xor
(bad)
dec
in
pusha
pushf
ins
inc
not
loope
outs
enter
arpl
mov
dec
jo
dec
mov
mov
cmp
cs
push
fild
imul
mov
jmp
jg
ins
(bad)
and
sub
fwait
rcl
loopne
cwde
add
loopne
cmp
add
mov
sbb
cmp
dec
add
arpl
mov
adc
xchg
add
and
inc
and
ds
sub
xor
sub
popf
push
inc
pop
push
inc
clc
push
dec
test
sub
jo
xlat
dec
and
addr16
popf
(bad)
lods
and
add
xor
shr
pop
test
xor
inc
add
add
test
mov
cmp
cld
addr16
sub
inc
mov
pop
inc
jne
push
xchg
pop
pop
sub
adc
outs
jmp
nop
xor
pop
rcl
call
arpl
add
inc
sub
rcl
hlt
mov
push
jno
aaa
fadd
xor
and
nop
sbb
add
sahf
adc
mov
pop
xlat
jne
xchg
inc
ficom
stc
add
(bad)
js
inc
enter
or
push
inc
dec
movs
and
xchg
xchg
out
mov
mov
xchg
xchg
je
mov
retf
add
add
or
cmps
add
cwde
nop
dec
add
add
inc
add
in
lea
imul
inc
sbb
int3
pop
mov
push
inc
xor
(bad)
and
sbb
ins
or
dec
pop
dec
jnp
in
imul
addr16
lock
dec
call
popa
adc
fnstcw
dec
jnp
or
sbb
dec
inc
fs
mov
sub
sub
loopne
dec
inc
call
adc
or
jmp
and
ror
pop
rol
jo
dec
push
scas
or
mov
pop
ss
je
inc
add
inc
mov
pop
aam
scas
xlat
jg
inc
addr16
sub
sbb
adc
inc
xchg
gs
jno
jmp
mov
xor
or
into
(bad)
xor
dec
dec
mov
push
cmp
out
inc
pop
ss
div
fwait
das
jle
sbb
inc
inc
int
sub
sbb
mov
in
add
mov
or
mov
int
dec
mov
loop
push
pop
xchg
mov
mov
adc
mov
or
sbb
jnp
add
sbb
add
xchg
or
inc
inc
inc
mov
rcr
pusha
int3
dec
xchg
sbb
dec
sbb
xchg
out
or
and
mov
cmp
inc
pop
push
jl
mov
mov
add
sub
je
js
xchg
daa
adc
pcmpeqw
or
ret
subps
adc
fadd
fadd
mov
jge
dec
cmp
cmp
idiv
ret
fcomp
push
xor
jp
hlt
inc
dec
xor
in
xor
pop
push
cmp
mov
or
pop
test
sub
sbb
add
add
shl
icebp
inc
or
push
push
ror
test
cmp
imul
push
lea
push
shl
mov
movs
cmp
ss
pop
ins
rcr
push
ins
add
sub
cmp
je
std
outs
mov
push
inc
inc
ror
mov
push
push
push
xchg
outs
imul
test
jp
mov
adc
sub
jbe
cmp
stos
ins
daa
push
js
push
ja
fs
rol
frstor
sbb
mov
adc
mov
xor
mov
rol
syscall
movs
fistp
xchg
cld
fild
scas
cli
movzx
cmp
or
loop
add
dec
sub
fist
mov
pop
inc
jo
mov
pop
loope
addr16
andnps
cli
xor
jl
mov
or
pop
adc
inc
sbb
inc
cmps
je
pusha
xor
cmp
or
shl
cmp
inc
xchg
sbb
test
out
pop
(bad)
rcr
sbb
jle
inc
push
push
bound
movs
adc
dec
or
ret
push
cmp
enter
jae
fadd
sub
cmps
call
sbb
jp
or
mov
arpl
mov
fild
call
cld
aas
pop
pop
aad
outs
sbb
jo
test
test
mov
das
dec
mov
sbb
hlt
mov
sbb
jl
sub
fnop
dec
mov
add
mov
shr
aaa
nop
ror
pop
nop
pop
dec
or
fiadd
dec
dec
adc
popa
jmp
xor
cs
pop
cmps
add
mov
push
or
mov
mov
aam
nop
push
add
mov
ret
sub
mov
mov
fldcw
xchg
das
nop
das
mov
cmp
jl
mov
arpl
clc
lods
mov
test
and
xchg
rcl
mov
mov
shr
inc
scas
jmp
mov
or
imul
jmp
dec
mov
pop
ds
lahf
push
push
or
je
adc
or
xchg
aad
(bad)
sbb
mov
mov
(bad)
fsubr
test
push
jno
in
repnz
jo
add
add
test
or
push
lods
pop
adc
shl
sub
or
fsubr
nop
sahf
sub
test
jge
dec
dec
lea
movs
in
xchg
sbb
jecxz
adc
mov
adc
test
pop
dec
into
pop
or
push
mov
pop
(bad)
cs
cmp
push
push
pop
mov
xchg
mov
pop
mov
add
adc
pop
pop
pop
mov
jnp
and
dec
cmp
adc
fcom
imul
aaa
jge
add
in
retf
pusha
retf
ds
adc
stos
inc
cmc
pusha
addr16
mov
outs
mov
dec
dec
dec
jo
adc
lock
dec
push
aas
sti
in
push
push
or
pop
loop
push
inc
mov
xchg
rol
or
test
fld
in
jmp
add
dec
mov
pop
mov
ret
pop
movzx
and
dec
test
hlt
jecxz
int
jle
sub
hlt
inc
push
int
push
cmp
test
mov
loop
rcl
adc
inc
dec
test
dec
dec
xor
adc
push
sbb
inc
call
ins
sub
xor
nop
std
scas
cmp
and
lea
xchg
loop
mov
imul
test
inc
jae
add
cmp
js
mov
xchg
sahf
push
pop
hlt
jne
xchg
clc
add
jge
and
inc
cs
mov
push
adc
push
and
jg
cmp
inc
sahf
mov
jmp
test
mov
lds
and
or
aaa
jmp
(bad)
je
(bad)
jmp
daa
test
or
or
bound
push
or
or
aaa
jne
das
inc
jne
(bad)
jmp
and
loopne
call
mov
not
adc
inc
sub
adc
imul
fbstp
add
in
or
std
push
dec
test
ja
mov
xchg
add
dec
adc
add
nop
add
ret
push
and
in
jb
outs
sbb
or
push
xchg
rol
fsub
leave
mov
aas
and
pop
and
pop
jl
out
push
cmp
mov
inc
or
sbb
imul
pusha
mov
je
mov
fist
stos
add
arpl
mov
scas
add
push
mov
pop
nop
out
push
mov
cmp
jg
push
mov
jno
xchg
and
xor
imul
es
lods
inc
jne
stos
mov
mov
pop
shl
inc
push
ins
fsubr
sahf
jmp
(bad)
cs
loopne
jne
push
inc
add
push
mov
add
cmps
fld
xor
jl
mov
imul
cmp
test
cmp
or
ja
jne
cmp
jne
xor
ss
add
enter
je
add
mov
inc
push
pop
lds
ja
inc
int
fdiv
inc
inc
fst
outs
mov
mov
cmp
adc
sar
inc
shl
test
xor
shl
sbb
(bad)
nop
fld
int3
mov
pushf
cmp
fstp
cdq
dec
inc
mov
cdq
dec
jmp
jmp
push
scas
push
jmp
cmp
mov
and
add
adc
xor
mov
push
dec
stos
xchg
xor
mov
add
std
xchg
pop
mov
dec
sbb
mov
lock
and
shl
ffreep
ds
inc
dec
push
adc
je
add
in
and
jmp
mov
pop
pop
pop
adc
inc
mov
loopne
inc
sti
sbb
mov
mov
sti
mov
mov
sbb
mov
sbb
lds
call
outs
cwde
jge
lea
call
in
movs
dec
sbb
lock
hlt
pop
xchg
pop
mov
pop
adc
mov
test
or
inc
clc
loope
outs
icebp
fwait
add
cdq
idiv
dec
inc
mov
sbb
loopne
inc
mov
outs
(bad)
mov
xor
sub
pop
cmp
mov
jb
xor
movs
add
pusha
inc
imul
xchg
adc
aaa
push
mov
rcr
xor
pop
push
cmp
lock
jg
test
in
dec
call
pop
inc
push
loopne
push
(bad)
dec
dec
dec
jb
popf
aas
test
fadd
pop
cs
push
ror
cmps
lahf
adc
test
xlat
and
mov
loop
loopne
add
js
scas
inc
hlt
push
add
(bad)
popf
loopne
mov
sub
fistp
xor
test
mov
cwde
hlt
fild
fsubr
sahf
lds
clc
or
add
and
adc
sub
out
sbb
dec
fdivrp
inc
mov
cmp
jne
dec
cmp
mov
out
or
xchg
jmp
push
adc
dec
sete
je
adc
or
lock
xchg
retf
sahf
rcr
out
out
sahf
sub
or
dec
out
in
jg
fisttp
push
adc
lock
inc
sub
aas
rol
fwait
cmp
aam
movs
rcr
or
mov
xor
add
shr
mov
pusha
test
pop
xchg
cmp
je
cmp
jne
cmp
and
in
popf
(bad)
lea
or
call
(bad)
or
push
mov
lahf
inc
ror
enter
fidiv
jbe
inc
add
fistp
push
fmul
(bad)
pusha
push
in
mov
add
mov
cmp
ret
enter
or
add
push
pop
loopne
sbb
call
cmp
add
das
inc
daa
or
or
mov
pusha
pushf
adc
js
imul
mov
and
push
aaa
dec
sbb
pop
mov
or
add
inc
inc
repz
jae
inc
dec
cld
fwait
jecxz
ret
push
xchg
push
cmp
sbb
push
mov
nop
xor
or
mov
or
fdiv
les
add
(bad)
and
or
push
(bad)
pop
or
pusha
mov
dec
outs
jne
jb
outs
jb
pop
and
add
or
das
test
daa
inc
imul
sti
in
dec
push
ins
bound
outs
gs
or
or
out
jnp
out
popa
jb
xchg
push
nop
push
or
xchg
jl
and
inc
sbb
adc
int
or
add
(bad)
jg
bound
ins
fs
inc
outs
outs
ins
scas
mov
cmp
adc
jmp
or
popa
das
inc
popf
pop
xchg
inc
loopne
adc
mov
lock
es
and
inc
imul
adc
cs
and
push
or
cmp
lea
inc
add
mov
sbb
gs
fdivr
push
inc
fs
push
adc
ja
mov
je
js
pop
xor
pop
xor
and
push
xchg
adc
gs
inc
push
and
retf
add
mov
push
pop
add
inc
rcr
mov
inc
(bad)
dec
jne
outs
jle
mov
push
std
inc
or
or
or
or
in
cmp
rcl
push
retf
rcl
lahf
or
leave
add
cmps
daa
lahf
ja
outs
enter
stos
das
mov
and
shr
and
lea
js
inc
push
sar
imul
shr
push
lods
shl
xor
push
sbb
ds
pop
sti
cmp
push
push
mov
mov
call
push
adc
push
mov
jae
inc
or
aam
fadd
sub
dec
ss
out
ins
mov
enter
xor
adc
mov
push
pop
add
aaa
popf
shr
cmp
fsubrp
pop
das
or
test
inc
pop
ja
lock
mov
dec
daa
and
mov
push
adc
and
iret
add
push
stos
adc
add
sbb
pop
out
sar
add
jmp
adc
paddq
cmp
fs
sar
add
verr
rcr
add
adc
and
add
add
ror
mov
add
pop
mov
cmp
push
cmps
pop
popa
test
test
test
sub
cmc
fcom
pop
shl
mov
hlt
test
cmp
into
data16
cs
or
cmp
ja
aam
adc
and
test
ins
mov
(bad)
in
push
ja
in
in
in
push
jle
mov
mov
outs
ror
jo
mov
cmp
test
mov
or
pop
addr16
data16
add
and
adc
adc
popa
fbld
ds
loope
int
add
pop
repnz
and
jns
das
inc
adc
mov
rcr
gs
xchg
jecxz
or
inc
call
in
push
popa
fs
sub
push
imul
call
mov
shr
jne
xchg
push
ja
lea
add
sub
cmps
retf
sub
add
dec
adc
dec
rcl
test
mov
and
jecxz
jnp
or
dec
in
aad
loope
pusha
sbb
lods
add
mov
add
jg
xlat
lods
fdiv
push
push
jge
je
push
pop
outs
and
cmp
pop
and
in
sub
nop
mov
jbe
fmul
je
ins
push
ins
xor
or
jne
add
lods
adc
ficomp
and
outs
jne
jl
sar
iret
mov
add
test
jo
or
loopne
xor
test
push
stos
rol
es
repz
mov
imul
pop
add
pop
nop
fdivr
xchg
mov
sbb
or
pop
data16
lods
dec
jecxz
sbb
push
push
or
sar
lods
ins
mov
scas
cmovne
adc
hlt
in
lds
cli
and
idiv
jmp
sti
xadd
sub
das
repnz
pop
pop
mov
dec
enter
jb
lahf
loope
mov
leave
leave
leave
push
pop
xchg
mov
jmp
clc
jmp
and
xchg
xchg
retf
out
(bad)
stc
push
jmp
pop
push
hlt
or
mov
imul
scas
jecxz
ss
and
mov
daa
rol
adc
ins
cdq
jp
mov
rol
adc
pop
inc
xchg
cmp
or
stos
shld
mov
push
mov
in
rol
mov
push
add
add
and
lahf
(bad)
mov
add
imul
clc
test
inc
sub
sbb
mov
mov
xor
sbb
pop
jae
(bad)
cmp
inc
repz
or
jb
inc
scas
mov
and
pushf
or
fisttp
outs
outs
je
cmp
adc
sbb
rol
push
lods
xor
(bad)
scas
div
test
imul
adc
or
movs
mov
adc
ror
mov
sub
or
pop
dec
and
inc
or
push
outs
jo
pushf
push
adc
push
inc
sub
and
mov
pushf
test
outs
jb
retf
add
and
inc
adc
data16
sub
add
dec
out
pop
je
mov
jecxz
lea
sbb
xor
cwde
or
mov
(bad)
mov
push
pop
mov
cmp
pop
mov
add
inc
jno
push
inc
mov
stos
push
imul
add
push
je
test
ret
aas
cmp
pop
popa
lahf
dec
je
lods
mov
cmp
add
loopne
or
mov
and
popa
add
inc
adc
inc
loop
mov
push
or
sbb
and
(bad)
fcomp
mov
add
or
adc
sbb
call
add
adc
clc
mov
mov
pusha
dec
mov
cwde
add
fninit
call
dec
(bad)
sub
jae
ja
(bad)
dec
inc
push
lock
arpl
cmp
or
or
adc
adc
pop
or
test
scas
jmp
push
sbb
out
xlat
push
or
js
dec
mov
call
or
pushf
add
xchg
dec
fcom
loop
mov
test
vmptrst
mov
push
outs
mov
dec
test
cdq
fsubr
cmp
add
ja
call
or
sbb
clc
dec
mov
jmp
nop
or
sbb
xor
adc
or
mov
cmp
bound
mov
out
(bad)
inc
int
pop
dec
mov
pop
out
jmp
call
xchg
sbb
dec
sbb
daa
xor
and
test
pop
fiadd
sbb
enter
mov
enter
mov
into
hlt
enter
and
enter
int
adc
pop
jnp
enter
(bad)
out
mov
dec
add
enter
and
cmp
(bad)
stc
hlt
enter
mov
cmp
inc
mov
xor
aas
pop
or
dec
pop
jb
or
pop
mov
push
nop
sbb
jmp
and
xchg
mov
mov
ss
add
or
xor
push
cmp
mov
mov
pop
cmc
mov
mov
xlat
out
push
cmc
push
arpl
and
add
shr
inc
inc
lahf
clc
daa
push
xchg
sub
int3
sbb
data16
adc
and
adc
xchg
add
mov
and
adc
inc
ja
push
rol
movs
add
or
inc
push
pop
outs
ja
adc
(bad)
push
cmp
inc
xchg
sub
imul
or
daa
mov
rol
inc
push
push
std
cmps
pop
inc
jnp
or
push
ror
add
lea
push
popf
push
mov
cmp
mov
sbb
mov
rcr
push
mov
sub
(bad)
mov
mov
push
lods
shl
fnstsw
adc
nop
mov
ins
xchg
fiadd
ficomp
fcom
pop
ret
lds
inc
out
dec
movlhps
sub
add
je
push
add
pop
mov
(bad)
mov
inc
fiadd
push
pop
or
jge
arpl
adc
pop
inc
inc
cwde
adc
or
ret
inc
fwait
add
adc
pop
lods
add
or
ror
inc
mov
seto
push
adc
and
fsubr
inc
jns
mov
cmc
xchg
in
mov
push
outs
dec
mov
pop
inc
or
(bad)
cmp
cld
and
adc
pop
(bad)
jae
xchg
push
pushf
push
bound
or
add
sti
add
sbb
jl
pusha
push
add
and
adc
adc
ja
es
cmp
pop
das
les
sbb
pop
add
add
or
(bad)
add
aaa
or
fs
int
sbb
pop
mov
cmp
call
jnp
fst
test
scas
dec
daa
push
ror
inc
lock
push
jle
mov
and
in
and
shr
popa
inc
xor
ret
jmp
or
ficomp
daa
fisttp
in
adc
daa
add
lock
adc
(bad)
jmp
rol
or
and
mov
xchg
cmp
push
lock
jge
sbb
ins
mov
popf
jbe
mov
or
xchg
add
pusha
dec
js
lods
push
lods
xor
clc
sbb
in
and
pushf
pushf
fdiv
jne
mov
dec
popf
adc
call
mov
add
shl
sbb
std
or
xlat
sub
fs
push
outs
ins
imul
not
(bad)
ins
add
push
popf
push
sub
stos
jbe
inc
arpl
fist
dec
pop
mov
pop
cmps
rol
or
pop
fild
mov
dec
or
add
add
add
add
push
and
or
jb
push
push
add
mov
or
test
scas
cli
mov
or
push
jecxz
push
lds
add
pushf
pop
rol
sbb
sbb
adc
bound
mov
jbe
outs
enter
push
fld
outs
mov
test
ins
add
cmp
jmp
sti
shl
pop
or
or
push
les
pop
inc
inc
xchg
aas
adc
pusha
mov
push
add
inc
mov
movs
outs
cmc
or
or
cdq
mov
xor
pop
test
outs
imul
adc
xchg
ins
pop
push
outs
mov
ret
sub
test
mov
xchg
add
sbb
and
push
and
fst
outs
bound
fild
int
cmp
loopne
ret
aaa
xor
or
data16
(bad)
es
das
pop
push
test
jecxz
leave
mov
xor
shl
test
cmp
add
inc
rcr
lds
inc
cmps
das
add
inc
add
dec
retf
sbb
add
gs
out
test
adc
xchg
jo
inc
rol
lock
mov
xchg
popa
retf
or
addr16
mov
xchg
imul
add
les
les
adc
retf
call
lds
stos
sbb
push
xor
ins
mov
retf
ins
outs
jae
ror
gs
push
cmp
(bad)
add
inc
and
mov
ja
movs
cmp
mov
adc
(bad)
jmp
ins
add
pop
or
add
push
dec
and
imul
cmp
sbb
pop
mov
lock
xor
mov
mov
mov
jno
pusha
pop
xor
mov
or
scas
push
push
mov
push
and
shr
add
call
js
sldt
call
pop
(bad)
pop
loopne
movs
mov
lds
mov
(bad)
mov
mov
retf
icebp
adc
add
jmp
or
mov
or
ret
or
pop
es
ret
out
xchg
push
sbb
mov
adc
inc
xor
fadd
adc
outs
and
hlt
push
daa
dec
and
inc
cmps
pushf
pushf
lods
pop
xor
adc
scas
gs
enter
add
or
pop
das
mov
leave
pop
and
or
popf
(bad)
rcl
lock
imul
pop
out
aas
sbb
test
jmp
jbe
cmp
mov
retf
adc
retf
cmp
aaa
sub
(bad)
mov
out
push
ins
pop
cmc
fxch
mov
add
inc
add
rcr
sbb
and
add
es
inc
mov
fnsave
pop
popf
(bad)
shr
cmp
inc
out
push
xor
xor
xor
sub
pop
adc
in
add
push
jbe
stos
inc
call
inc
ror
pusha
or
mov
add
push
lods
sbb
push
and
push
vmovddup
pop
add
pop
pop
es
ss
sahf
mov
je
dec
pop
xchg
je
jp
sbb
mov
loop
add
or
ss
and
pop
nop
je
adc
test
dec
sub
mov
xor
xor
movzx
sti
(bad)
dec
shr
test
jne
mov
test
je
add
adc
sbb
iret
inc
add
test
push
lahf
(bad)
aas
adc
nop
rol
shl
inc
sub
add
sbb
cli
mov
(bad)
retf
das
and
jmp
jge
inc
imul
test
fbld
aas
and
sub
clc
inc
(bad)
push
test
add
je
pop
sbb
or
or
out
ficom
jge
sub
push
sub
adc
cdq
aas
sar
lods
fwait
jns
mov
daa
push
mov
mov
mov
jo
call
cdq
in
and
and
xor
jp
jg
enter
arpl
sub
add
and
and
ja
jmp
inc
inc
cmp
pusha
dec
sub
cmp
test
sbb
mov
(bad)
jmp
jg
sub
cs
sub
cmc
test
add
dec
into
add
or
daa
inc
and
push
nop
xchg
and
adc
out
xchg
aaa
sub
or
xchg
mov
call
inc
mov
inc
(bad)
ret
js
pop
or
push
fs
mov
jg
in
jnp
or
call
sbb
into
pop
sbb
outs
pop
jne
shr
sahf
add
sbb
mov
xchg
icebp
push
jnp
jp
outs
test
pop
or
sub
dec
imul
loope
push
neg
outs
bsr
je
dec
into
sahf
jmp
stc
leave
div
inc
jmp
popa
and
xchg
dec
or
mov
or
jle
scas
popf
pop
sub
mov
mov
add
fs
jl
pop
jmp
or
sti
push
add
pop
mov
or
out
into
mov
pop
pop
cmps
aam
sbb
mov
fwait
rol
js
ror
clc
fdiv
ret
cmps
or
adc
add
inc
test
xchg
add
dec
popf
jmp
and
inc
jo
and
xor
push
fcomip
push
jbe
inc
cmp
or
lock
jg
sahf
mov
call
mov
and
retf
aad
in
mov
and
adc
pop
lock
(bad)
pop
shl
sahf
push
jmp
sbb
cli
cmp
jle
inc
imul
cli
add
jne
jle
ret
hlt
outs
(bad)
(bad)
sub
cmp
jl
push
std
push
push
sub
xlat
cmp
popf
mov
cmp
push
hlt
aaa
pop
inc
cmp
add
pop
rcr
xchg
jle
call
in
fist
in
icebp
pop
pusha
push
fs
jbe
pop
dec
push
cmp
cli
and
xchg
inc
pushf
test
cmp
inc
sbb
mov
cmp
shl
inc
mov
inc
sar
xor
xchg
cmp
bound
push
mov
pop
retf
ret
xchg
inc
adc
sar
adc
mov
rol
rcl
retf
add
add
inc
call
mov
dec
(bad)
dec
sbb
dec
cmp
fdiv
push
jmp
dec
dec
jl
into
xchg
add
inc
push
mov
test
fist
cld
jns
cmp
add
je
jmp
imul
push
mov
dec
or
pop
nop
dec
adc
cmp
and
cmps
movs
repz
inc
sti
fadd
test
mul
push
adc
mov
dec
add
js
fs
xchg
mov
sbb
push
pusha
inc
outs
ror
cwde
test
push
stc
cmp
aas
ror
jb
sub
sbb
pop
mov
push
xor
push
mov
add
push
xor
cli
ss
addr16
cmp
add
inc
aas
sbb
in
(bad)
call
jg
mov
jle
test
or
adc
jp
or
adc
dec
loope
out
movs
xor
out
fidivr
mov
push
cmp
mov
add
out
inc
inc
inc
lea
sbb
pop
(bad)
pushf
inc
je
ins
dec
popa
add
jl
pop
or
inc
or
push
pop
test
add
imul
not
(bad)
mov
cmp
xor
test
lea
sti
xchg
xchg
push
push
push
cld
push
movs
inc
add
in
add
jg
cmp
or
leave
cld
xchg
push
push
(bad)
inc
pusha
nop
push
or
push
dec
fiadd
mov
data16
rsqrtps
sub
inc
push
ficomp
jb
outs
(bad)
or
sub
pop
add
mov
mov
test
xchg
jne
fsub
cmp
jl
pop
adc
inc
cmp
sub
movs
or
cli
adc
dec
cmp
stos
mov
and
movs
cmp
(bad)
xchg
or
xchg
adc
aas
aam
jne
push
push
mov
ret
sub
adc
cld
out
dec
dec
or
lock
mov
xchg
add
loopne
frstor
add
push
idiv
jle
mov
adc
les
lock
std
mov
sub
enter
jne
mov
inc
inc
mov
outs
sub
cmp
or
enter
cs
push
cmp
pop
je
push
mov
adc
and
lods
mov
inc
iret
(bad)
cmp
lock
hlt
shl
or
dec
(bad)
dec
mov
js
inc
addr16
retf
add
add
js
repnz
jmp
push
inc
xchg
dec
dec
or
scas
jmp
das
rcl
mov
enter
je
cmp
xor
ds
inc
int3
movs
push
mov
shl
aam
fcomp
dec
pop
dec
cmps
popa
or
or
cwde
jmp
test
loope
sbb
inc
out
iret
in
loopne
dec
adc
std
cmp
sub
in
outs
xor
mov
or
icebp
and
int
push
or
push
in
jo
jp
jmp
push
mov
adc
aaa
xor
fmul
aad
fwait
cmp
es
aas
or
add
pop
in
pop
dec
pop
push
cmp
(bad)
test
(bad)
(bad)
movs
pop
dec
cmps
pop
and
cmp
adc
rcr
add
xor
adc
and
mov
and
cmp
sbb
sar
pop
xor
push
fsincos
ror
imul
jae
or
and
push
push
(bad)
and
jg
or
out
test
jne
jns
push
adc
xor
iret
push
jge
dec
mov
mov
sbb
mov
rcr
and
inc
fdiv
jnp
bsf
and
adc
or
js
sub
cmps
hlt
push
mov
movs
call
test
pop
rcl
pop
xchg
sub
in
mov
lds
xor
jge
clc
and
or
xlat
(bad)
jno
xor
test
dec
push
inc
fst
test
jne
xor
fbstp
mov
dec
data16
and
es
gs
cmp
je
daa
mov
(bad)
pushf
test
jle
xor
push
sbb
pop
dec
enter
sub
lds
pop
cmps
push
and
dec
add
cmp
push
sar
pop
inc
inc
jg
adc
xor
cmp
jge
aad
cmp
jae
mov
sbb
sbb
mov
or
int
mov
jne
pop
mov
fadd
cmp
imul
sbb
sub
and
ret
xor
fld
jp
aas
jecxz
imul
les
std
rcl
cld
sar
and
loope
add
rol
not
cs
rol
je
pushf
add
pop
jne
push
test
or
cdq
pop
clc
add
mov
outs
fisubr
add
lods
push
das
es
dec
pop
dec
xor
loopne
or
jecxz
or
jmp
fstp
clc
aad
push
es
add
add
add
cli
retf
test
je
cmps
fdivr
cmp
jne
adc
jne
in
sti
movs
pop
jl
frstor
sub
enter
mov
cs
push
push
inc
inc
or
jg
add
movs
add
add
icebp
xchg
xor
push
cmp
pushf
jo
cmp
int
repnz
pop
pop
and
cwde
cmp
pop
jp
stos
and
ss
in
lea
and
adc
jmp
outs
aaa
stos
push
call
ja
je
or
sbb
inc
lea
js
mov
stos
dec
arpl
(bad)
clc
stos
dec
xor
lea
mov
fs
clc
call
add
adc
sub
or
std
mov
jne
pause
mov
and
pop
hlt
add
mov
aam
sub
mov
add
push
loopne
das
add
add
movs
ret
adc
jmp
pcmpeqb
cmps
sbb
push
fbstp
bnd
jmp
fild
xor
pop
add
mov
cli
push
not
and
add
xchg
push
sbb
adc
adc
xor
test
not
and
dec
and
hlt
jp
and
ret
add
add
pop
retf
pop
ret
js
xor
jle
repz
lock
or
add
ins
aas
jne
pop
jp
cmp
daa
pop
es
lods
mov
ret
outs
(bad)
mov
inc
popf
or
sbb
gs
sub
pop
sbb
addr16
add
add
cmp
adc
push
sub
and
mov
sbb
or
ss
sub
xchg
fsubr
fsub
mov
mov
xor
and
pop
enter
test
xor
pop
inc
pushf
mov
sbb
xchg
ret
data16
adc
lahf
cmp
scas
inc
xor
in
rcr
imul
xor
(bad)
shr
ror
push
aam
and
lock
mov
jo
mov
adc
frstor
jne
jno
repnz
mov
js
add
es
out
pop
ins
cmp
push
mov
xor
test
inc
in
add
sub
dec
aam
test
js
add
dec
call
add
jne
pop
mov
jmp
int
jg
pop
mov
jge
sub
sub
push
lea
or
jne
xlat
stos
js
mov
imul
sub
sbb
cmp
jle
sub
in
add
das
jbe
mov
sbb
leave
je
inc
icebp
(bad)
jnp
call
loopne
in
sub
sar
jns
adc
lea
loopne
lods
sub
sar
push
cmp
mov
push
test
add
pop
push
add
sbb
js
or
sbb
sar
fiadd
add
adc
ss
pop
cmp
inc
test
sub
outs
jne
fsubr
loopne
mov
fwait
xchg
dec
shr
jl
adc
cs
shl
clc
enter
pushw
inc
iret
jmp
popa
push
add
inc
fwait
sbb
adc
inc
cmps
icebp
inc
push
and
jmp
push
add
add
inc
and
xchg
xor
(bad)
aam
clc
jl
fadd
in
sbb
pop
outs
push
push
test
or
mov
imul
or
int
pop
packssdw
mov
jae
or
add
sbb
sub
add
jle
pop
mov
adc
jge
add
cmp
ss
sub
in
retf
fisttp
jg
sub
xor
retf
movs
push
test
adc
jnp
sbb
enter
cmp
imul
loopne
adc
(bad)
cmps
cmc
test
and
pop
nop
add
xor
ds
push
inc
icebp
ret
pop
adc
xor
jge
push
std
rol
popf
mov
ror
push
mov
jbe
jge
and
pusha
adc
push
aas
add
popf
daa
and
in
xchg
xor
test
pushf
pushf
retf
bound
mov
daa
dec
push
(bad)
int
das
loope
mov
sbb
inc
icebp
test
push
mov
xor
pop
(bad)
jo
ror
adc
mov
clc
(bad)
inc
and
(bad)
jne
scas
or
sbb
pop
or
int3
jmp
adc
push
imul
ins
pop
cld
push
push
pop
test
(bad)
inc
call
movs
sub
push
jo
daa
add
scas
mov
push
push
adc
imul
inc
mov
iret
into
mov
xor
add
movs
adc
iret
call
cmp
ja
xor
xchg
cmp
(bad)
loope
sub
add
add
bts
or
add
cmp
mov
xor
add
cld
add
lea
popa
cdq
sar
scas
loopne
mov
cmp
or
or
iret
pop
gs
sbb
add
cld
inc
lods
push
mov
mov
xchg
rcl
inc
add
fidiv
shl
sub
pusha
cmc
push
out
(bad)
xor
mov
fs
add
add
xchg
icebp
adc
inc
xor
push
cmp
jno
imul
inc
lock
addr16
call
add
add
lea
loop
mov
push
repnz
add
clc
push
add
lds
add
pop
adc
jo
outs
out
in
add
punpckhdq
inc
jmp
pop
mov
nop
and
inc
sub
in
cld
mov
lahf
pop
and
ret
out
mov
addr16
les
add
add
add
(bad)
repz
lock
ret
push
stos
fcomp
adc
add
pop
fwait
enter
mov
dec
aas
mov
inc
mov
sub
adc
(bad)
or
scas
pop
xor
push
inc
ror
dec
adc
pop
adc
fnstcw
mov
dec
scas
shr
loopne
gs
outs
and
sar
jne
sub
fcomi
mov
data16
cs
ss
stc
inc
cdq
pop
inc
cmp
outs
push
test
sbb
push
add
fmul
mov
mov
sub
pop
js
les
add
sbb
sub
pop
mov
mov
mov
je
inc
sbb
pop
and
cmp
mul
and
jmp
push
sbb
pop
push
adc
in
ds
ins
sub
ret
add
inc
or
mov
jl
mov
jnp
cmps
arpl
or
mov
clc
sysret
mov
dec
cs
mov
lea
jecxz
jnp
and
loopne
push
jle
push
call
lds
push
arpl
inc
xor
cmp
outs
movs
or
inc
inc
jnp
lock
pop
xlat
loopne
aam
loopne
mov
fnstenv
mov
xor
mov
pop
lock
arpl
jg
pop
or
mov
fwait
(bad)
adc
add
test
jae
xor
push
(bad)
in
stos
jno
sub
(bad)
fiadd
inc
push
dec
xor
dec
(bad)
adc
rcl
inc
leave
pop
ret
xchg
sbb
inc
lock
js
fcomip
dec
add
in
mov
or
inc
sahf
inc
mov
mov
sbb
cmp
jge
cmp
lds
inc
daa
inc
add
das
mov
(bad)
jbe
push
loopne
add
jne
ins
inc
sbb
xchg
in
inc
es
iret
in
cmp
mov
pop
into
in
mov
push
pusha
jo
sbb
inc
stc
mov
les
dec
call
mov
ret
ins
xor
lea
or
leave
loopne
xchg
xor
adc
add
jne
or
adc
sbb
push
aad
xchg
inc
call
xor
aad
mov
pusha
lea
or
xor
or
mov
ins
push
mov
lock
sub
ja
adc
stc
push
bound
mov
jo
sbb
and
mov
jne
inc
xor
add
sbb
mov
jne
xchg
mov
dec
repz
inc
mov
loope
jg
or
push
(bad)
(bad)
mov
les
pop
imul
xor
mov
inc
push
in
add
movups
ret
mov
add
loope
sub
retf
jo
or
adc
sbb
jne
popa
leave
mov
xor
sub
pusha
adc
pop
jo
lea
and
pusha
mov
xchg
push
xchg
mov
test
scas
mov
or
fimul
stc
ja
repz
mov
push
aad
nop
ret
mov
inc
std
scas
and
mov
jo
sbb
push
pusha
std
cmps
add
and
sub
ss
repnz
mov
call
or
pop
call
push
and
xchg
loope
call
ror
adc
call
jmp
jns
and
stc
jl
add
dec
sub
ret
mov
sub
add
pusha
arpl
push
pop
sbb
inc
bound
adc
and
and
iret
ret
adc
sbb
std
test
xchg
and
sbb
mov
in
jns
sbb
sbb
jo
pop
add
pop
or
scas
and
test
std
inc
scas
dec
js
les
js
test
dec
inc
out
adc
imul
loop
pop
mov
addr16
adc
outs
mov
pop
lock
adc
jg
adc
mov
cmpxchg8b
fld
je
scas
(bad)
push
les
cmp
pop
ds
adc
sbb
add
push
cwde
pusha
loopne
pusha
push
pop
adc
push
idiv
into
push
test
movs
ins
mov
push
and
and
test
sar
mov
add
fist
add
xchg
dec
pop
pop
mov
test
clc
inc
pop
mov
inc
cmp
or
mov
push
jns
lods
push
add
imul
push
xor
rcr
aas
and
arpl
and
adc
or
fiadd
add
inc
cld
or
add
divps
or
sbb
jl
loopne
jmp
popa
js
pop
dec
adc
les
(bad)
jmp
jecxz
mov
jl
sbb
rol
loopne
sbb
mov
mov
sbb
in
sbb
adc
pushf
push
stos
inc
sbb
push
add
jo
pop
stc
mov
push
sub
test
jg
adc
fdivr
ror
cld
cli
or
inc
les
daa
rcr
inc
into
adc
or
push
aam
push
add
ret
sub
rol
dec
(bad)
in
sbb
push
pop
out
inc
cmp
jle
sbb
(bad)
mov
inc
cmp
dec
jp
lock
inc
popa
jecxz
lahf
and
mov
xor
movs
(bad)
inc
and
adc
adc
or
or
lea
cld
push
div
adc
add
lahf
pusha
pop
aas
mov
sbb
pusha
sbb
add
xchg
xchg
data16
sbb
fldenv
adc
outs
sbb
movs
inc
mov
ss
inc
ds
add
mov
mov
cld
rol
sbb
ret
(bad)
stos
sbb
jne
lea
lods
fsubr
fcmovnu
fmul
xchg
inc
fistp
add
(bad)
pop
js
(bad)
sbb
push
shl
loopne
mov
xchg
std
arpl
sbb
sbb
loope
pop
push
mov
pushf
imul
cmp
sub
aam
in
jno
lds
daa
loopne
add
inc
pushf
mov
ins
test
push
int
aam
daa
sbb
jo
mov
ret
clc
mov
sbb
inc
lock
fstp
inc
shr
inc
inc
int3
test
adc
int3
(bad)
cmp
xchg
and
ss
jmp
clc
adc
dec
cmc
ror
out
inc
pop
add
lock
push
push
add
or
or
or
mov
cmc
nop
cmp
ret
inc
push
add
pop
popa
push
sub
xor
push
pop
jmp
jnp
sub
das
pop
addr16
sub
sbb
cmp
mov
xchg
push
or
cmp
jmp
mov
loope
and
jne
lods
push
out
jnp
jge
or
sbb
in
sti
jge
test
push
sub
pusha
inc
inc
fadd
push
das
jecxz
ret
xchg
cmp
push
and
mov
aas
push
mov
mov
mov
fucomi
ret
loopne
mov
pop
xor
lea
push
scas
sbb
call
jl
mov
enter
data16
dec
jl
add
shr
cmp
dec
data16
cmp
lock
inc
add
imul
stos
jl
add
stos
or
scas
inc
shr
sub
add
int3
popa
adc
xor
cmp
adc
pusha
push
add
call
jecxz
les
pop
dec
outs
inc
cmp
and
jb
lea
outs
sub
dec
jg
enter
push
outs
das
scas
sub
jmp
inc
dec
add
inc
add
mov
(bad)
sub
ret
mov
inc
cmp
jne
fadd
shr
fdiv
mov
inc
mov
mov
sub
shr
nop
add
loope
mov
nop
xor
add
dec
clc
push
or
or
jl
xor
jns
je
cmp
mov
adc
mov
mov
add
pop
add
xchg
mov
sbb
loopne
in
outs
out
inc
je
(bad)
adc
(bad)
popa
sti
pusha
sub
cwde
xor
and
push
add
loopne
adc
xchg
shl
inc
xchg
adc
fnstsw
loopne
mov
test
jne
daa
inc
fwait
jno
mov
jb
mov
test
adc
pusha
pop
dec
push
push
(bad)
cmp
push
fadd
or
outs
mov
push
test
inc
inc
int3
inc
cwde
cdq
sbb
pop
mov
(bad)
je
fisub
or
ret
jo
das
lds
jge
push
jecxz
(bad)
idiv
(bad)
jg
sub
test
pop
mov
mov
loope
xchg
in
xchg
mov
add
rcl
sub
xchg
dec
or
sub
retf
ret
sub
ds
or
dec
inc
dec
jne
rcl
mov
pusha
add
pop
scas
add
jo
fist
aaa
ds
dec
xor
pushf
mov
and
push
daa
jae
dec
ret
push
pop
mov
mov
test
call
adc
inc
sbb
xchg
or
jle
dec
jb
xchg
jg
sbb
dec
test
jl
xor
push
aad
sar
or
cmp
jbe
and
push
dec
xchg
adc
xlat
hlt
outs
out
js
mov
mov
inc
mov
sahf
sbb
adc
add
push
sbb
xor
daa
and
push
sbb
ret
xchg
stos
mov
inc
out
adc
or
ret
cmp
mov
out
dec
inc
push
mov
add
or
and
sbb
push
pop
test
ins
jnp
mov
mov
or
xchg
dec
and
push
ins
xor
repnz
jo
ficom
in
inc
and
cmp
cmp
cld
cld
adc
jnp
dec
jne
jmp
ss
xor
jmp
popf
ja
and
cmp
jo
jo
add
adc
ins
stos
add
push
pop
ret
dec
add
mov
adc
sub
(bad)
jmp
shl
xor
cmp
fwait
add
add
mov
jo
mov
adc
rol
int3
cmp
rcr
xchg
mov
inc
cmp
outs
or
or
pop
gs
sub
enter
aad
sbb
pop
ret
arpl
xor
paddb
(bad)
pop
pusha
jo
add
(bad)
ins
add
adc
add
adc
xchg
mov
push
add
inc
aam
mov
mov
jo
push
push
ror
cmps
fnstcw
ins
mov
jmp
mov
loope
out
or
fisttp
cmp
mov
dec
mov
or
fdiv
inc
sbb
ror
(bad)
mov
enter
inc
add
ds
mov
jns
imul
aad
(bad)
sar
dec
cmc
cmc
loopne
int3
out
iret
push
add
es
add
je
mov
daa
aas
add
call
sub
mov
es
ins
or
cmp
js
sbb
cmp
ffreep
test
ret
sti
lods
mov
jg
push
inc
je
mov
movs
rol
es
xor
loopne
ret
lahf
fld
(bad)
mov
test
dec
scas
add
cmps
mov
adc
out
xor
jle
pop
mov
call
push
daa
adc
xchg
and
enter
pop
xor
pop
mov
or
pop
pop
push
lea
mov
xlat
outs
sub
mov
cwde
scas
je
gs
daa
in
pop
or
std
mov
dec
sub
cs
movzx
xchg
into
mov
cs
mov
or
outs
and
cmp
cmp
adc
rcl
xor
clc
adc
lods
jp
jnp
pop
pop
cmc
adc
mov
xchg
or
aas
and
and
leave
inc
cmp
inc
jb
pop
cmp
and
leave
inc
or
inc
and
mov
adc
mov
or
push
pop
iret
pop
adc
pop
pop
dec
sbb
inc
les
adc
add
inc
adc
aad
and
jmp
xlat
cwde
push
retf
mov
add
xchg
or
sub
mov
xor
push
cmp
jne
rcl
inc
jmp
mov
adc
cmp
(bad)
mov
adc
(bad)
add
cmp
xchg
mul
adc
add
pop
das
repnz
sbb
push
test
jbe
sub
or
and
mov
arpl
nop
enter
in
lock
mov
cmp
push
push
inc
xor
inc
add
maxps
mov
xchg
adc
add
(bad)
aam
jl
or
shr
movs
push
add
(bad)
sbb
xchg
and
imul
mov
sbb
jl
out
fild
pop
xchg
aam
adc
jmp
adc
or
mov
push
inc
int3
jge
sbb
adc
in
and
test
adc
(bad)
sub
ficom
sbb
dec
mov
and
rcr
call
jo
ins
(bad)
mov
mov
in
aam
inc
cwde
pop
not
xor
loope
inc
inc
popf
sub
and
and
mov
cmp
inc
jo
mov
je
cmp
jne
and
out
pop
test
jg
pop
xchg
or
add
sub
stos
hlt
(bad)
int3
out
jnp
in
mov
fimul
ja
retf
sub
cmp
rep
adc
call
adc
outs
sbb
push
push
rcl
shr
cs
cmp
add
test
cmp
and
mov
addr16
mov
pop
jnp
dec
lods
es
sbb
add
or
sub
jmp
jmp
stc
mov
mov
popa
stos
sbb
jp
push
mov
fist
adc
test
add
adc
clc
adc
push
pop
rol
fistp
push
mov
xchg
adc
(bad)
mov
enter
rol
fs
sbb
enter
pushf
mov
add
xor
ja
inc
imul
and
jns
dec
dec
dec
aaa
cmp
mov
and
or
dec
(bad)
stos
enter
jbe
cmp
fdiv
dec
push
pop
dec
cmp
aam
fs
sbb
add
mov
bound
(bad)
mov
sar
out
pop
fisubr
dec
daa
sub
push
pop
push
xlat
sub
and
pop
or
sbb
shl
adc
mov
or
loope
call
inc
mov
cmp
(bad)
sbb
and
xor
mov
imul
cmp
fdiv
pop
(bad)
fbstp
inc
jmp
test
adc
push
cmp
adc
sar
inc
pop
je
mov
dec
add
push
xor
mov
lahf
not
add
sbb
mov
adc
push
pusha
bswap
dec
loopne
std
fcom
mov
adc
outs
inc
push
inc
or
mov
xor
push
mov
sub
inc
or
adc
in
es
in
pop
fxtract
movs
(bad)
sbb
icebp
out
nop
loopne
retf
mov
xor
pop
clc
cmps
push
dec
mov
adc
mov
add
test
lds
jmp
jle
and
add
clc
arpl
pusha
sbb
outs
retf
sub
clc
jnp
pop
fist
pop
add
sbb
outs
mov
cmc
call
leave
or
sub
lea
ja
fadd
cwde
jecxz
inc
sbb
out
scas
pop
xchg
jne
sar
fcom
push
loope
add
adc
dec
fsubr
lods
sar
xor
add
adc
dec
sbb
(bad)
ror
and
movs
mov
push
aas
fstp
(bad)
aas
daa
and
std
push
lds
add
ret
and
lods
(bad)
(bad)
movs
add
mov
js
lods
cwde
adc
gs
xchg
cli
pop
and
and
cli
sub
jl
inc
push
aad
sub
jle
call
ret
inc
inc
rcr
lds
xchg
test
je
cmp
data16
and
inc
sbb
adc
mov
jmp
add
pop
jne
cmp
fsub
les
aaa
dec
jnp
sub
fisub
sti
adc
retf
pop
add
dec
sub
add
cmp
jne
je
pop
loopne
push
xor
and
aam
pop
inc
mov
pop
mov
stc
and
add
xor
mov
ret
mov
add
in
sub
mov
mov
ror
add
int3
mov
iret
cs
mov
pop
add
iret
sbb
dec
inc
mov
add
mov
add
call
dec
out
add
bound
dec
in
mov
push
loopne
and
inc
nop
mov
test
add
cmp
dec
ins
pop
adc
jle
retf
outs
cli
sub
inc
sbb
popf
movzx
cmp
je
sub
add
cmp
int3
mov
inc
sbb
aam
or
push
jmp
or
lods
mov
inc
xlat
push
add
add
inc
shl
pop
add
fbstp
inc
push
xchg
and
test
inc
sahf
pop
jmp
pop
hlt
mov
pop
xchg
add
mov
jp
inc
push
push
mov
jmp
mov
cmp
adc
inc
push
cmp
daa
mov
add
sbb
cmp
adc
pushf
jmp
push
pmovmskb
rcl
sbb
push
pop
mov
pusha
loope
int
adc
sbb
sbb
call
test
mov
out
mov
mov
add
sub
pop
adc
inc
mov
in
mov
jp
push
mov
adc
lock
dec
leave
nop
mov
fmulp
lods
inc
dec
into
cmp
cmps
add
outs
jo
imul
cmp
jmp
add
fist
add
fnsave
cmp
icebp
sbb
xor
or
and
shl
ror
repnz
dec
imul
push
cld
push
mov
lea
and
setge
in
fistp
push
or
adc
nop
lock
push
add
sbb
cwde
cmp
arpl
test
mov
push
xchg
pop
or
and
cmp
dec
add
sti
add
pop
lods
add
inc
loopne
loopne
dec
mov
inc
cli
or
not
dec
pushf
std
fldenv
mov
or
fmul
and
dec
in
fsubr
test
mov
mov
push
movs
lock
sbb
mov
les
mov
add
or
mov
nop
ds
push
fdivr
dec
mov
jmp
out
push
jl
clc
push
into
fdivr
shl
mov
fimul
sub
adc
xchg
out
sub
sub
sete
cmp
and
adc
loopne
or
or
and
pusha
adc
es
xchg
add
xor
pop
bound
lea
inc
add
xchg
add
add
add
inc
and
add
dec
mov
jb
or
cmps
cmp
xchg
lock
cmp
pop
mov
sahf
dec
add
cmp
outs
dec
test
imul
and
ins
cmp
dec
cmp
pop
in
test
div
pop
pop
daa
js
push
mov
sbb
pop
enter
xchg
je
pop
outs
xchg
xlat
mov
mov
mov
lahf
pusha
lahf
add
xlat
movs
cmp
cs
popf
bound
cwde
add
dec
and
and
mov
and
and
call
js
test
jle
push
mov
adc
aas
clc
add
sbb
push
pop
adc
lea
dec
jmp
in
adc
jmp
shl
adc
or
sub
push
add
js
scas
fidivr
xor
pop
cld
or
(bad)
dec
push
or
inc
cli
xchg
sub
push
ficomp
push
cli
cmps
mov
div
imul
push
adc
cmp
or
mov
cmp
pushf
xor
add
adc
test
popf
pop
push
add
cmp
add
test
and
hlt
test
pop
cwde
jmp
add
dec
add
push
sub
cmp
mov
jmp
pop
add
pop
call
adc
jmp
ins
cmps
out
inc
add
pop
xlat
cmp
jne
jl
(bad)
fisttp
popa
(bad)
ror
(bad)
ret
stos
enter
xor
and
mov
pop
cmp
xchg
and
repz
hlt
cs
push
cli
mov
mov
test
aam
adc
ds
push
mov
shr
mov
arpl
fild
imul
leave
out
jnp
pusha
dec
pop
mov
push
out
bound
popa
cmp
push
add
arpl
(bad)
inc
xor
test
jmp
pop
int3
aaa
or
adc
add
inc
lods
mov
pop
jle
out
jae
shr
inc
jno
or
mov
fbld
push
mov
fisttp
push
pop
pop
or
fadd
add
outs
loope
sbb
inc
cmp
push
ins
xor
push
inc
fstp
aam
pop
shl
clc
push
push
out
mov
cmp
(bad)
or
push
cmps
jo
imul
push
add
outs
hlt
adc
aas
push
lea
pop
dec
add
gs
call
ret
sar
aaa
aad
and
dec
push
dec
out
movs
test
push
into
inc
adc
xchg
fistp
in
fadd
mov
adc
clc
add
mov
push
cli
es
fs
inc
inc
add
mov
cmp
inc
cmp
jge
cmp
adc
ss
sub
ret
scas
pop
push
mov
fcom
or
adc
rol
cmps
aam
push
sbb
not
jecxz
inc
add
fdivr
xchg
jg
out
clc
jbe
popa
mov
mov
rol
pop
cmp
or
fild
je
fnstsw
fs
sbb
push
inc
mov
mov
daa
nop
or
add
call
or
rcl
mov
mov
and
dec
pop
add
push
dec
rcr
push
nop
or
fsubp
push
cmp
adc
mov
pop
mov
pop
push
(bad)
push
(bad)
sub
xor
push
iret
push
xchg
and
in
add
(bad)
xchg
aad
cmc
or
out
data16
adc
rcl
dec
or
pop
add
mov
pop
leave
add
or
lock
cmp
jne
popa
nop
aaa
stc
add
xlat
dec
cmp
sbb
test
jo
push
or
add
sbb
lods
add
ja
push
mov
jl
jne
cmp
push
lahf
adc
adc
inc
sub
out
(bad)
mov
adc
ins
sbb
mov
loopne
adc
jmp
xor
or
mov
clc
push
push
cmp
leave
or
mov
push
cmp
imul
mov
les
push
out
push
mov
in
or
test
in
add
out
push
fsubr
sub
test
fisub
mov
je
or
outs
les
or
push
mov
sub
or
jne
and
outs
in
push
cmp
and
pop
sub
rcl
imul
ins
xor
pop
outs
adc
sbb
sub
in
and
cwde
inc
ret
pop
sbb
sbb
dec
xor
jnp
sbb
(bad)
rcl
lock
and
shl
loop
out
rol
scas
test
add
xor
bound
dec
add
sub
ror
test
idiv
(bad)
stos
jmp
sbb
ret
pop
(bad)
lock
adc
stos
push
cmp
push
ins
or
or
jl
adc
cmp
cmp
dec
out
dec
rcl
call
add
cmp
sbb
mov
ins
movs
or
push
xchg
mov
or
sub
add
add
jge
push
or
sti
cmp
in
aaa
in
xchg
cdq
cmp
fidivr
ror
inc
jbe
dec
retf
push
les
call
clc
mov
scas
adc
sub
xor
mov
pushf
stos
sub
push
mov
test
loopne
mov
cmp
dec
add
add
jmp
sub
mov
test
cmp
jb
or
or
inc
inc
sahf
js
outs
loope
mov
fadd
pop
and
add
call
or
inc
icebp
mov
imul
push
outs
push
retf
(bad)
dec
fild
test
cmps
push
add
push
pop
test
sub
aam
xor
jge
pop
out
ret
daa
inc
inc
sbb
xchg
and
mov
add
vmwrite
rcl
daa
adc
cs
icebp
in
rol
pusha
cmp
pop
push
add
fcom
or
addr16
push
ret
mov
scas
sub
or
lahf
jg
nop
js
or
push
repnz
sbb
std
int
div
ror
adc
cmp
jne
or
sub
xor
js
retf
dec
mov
or
add
adc
ror
shl
(bad)
enter
mov
(bad)
push
cs
adc
add
dec
xor
out
push
cld
adc
xchg
mov
and
enter
xchg
push
cmp
dec
jg
je
sub
mov
mov
add
or
push
lock
jmp
and
pop
adc
mov
ja
jno
das
out
add
sub
bnd
icebp
es
sub
test
push
cmp
sar
mov
mov
loope
jo
push
cdq
or
loop
sbb
add
inc
push
adc
add
jl
jl
add
rcr
or
adc
push
mov
out
adc
mov
xchg
xchg
adc
mov
repz
jmp
inc
arpl
hlt
cmps
and
test
xor
push
sbb
inc
sar
adc
mov
jno
fisubr
xor
sub
test
adc
sti
sbb
push
fdivr
inc
or
adc
and
adc
mov
xor
ins
inc
cwde
xchg
test
push
push
das
mov
int3
dec
push
ficom
ror
aaa
sub
xor
and
je
adc
add
mov
push
(bad)
and
adc
sub
movs
in
aam
add
jns
add
adc
xor
fwait
ret
and
mov
xrelease
pushf
xor
or
pop
fwait
rcr
f2xm1
aaa
jg
push
xor
mov
sbb
add
push
rcl
add
inc
xchg
adc
lea
mov
or
adc
and
pushf
xor
mov
dec
cmp
out
pop
jno
push
shl
push
xor
mov
and
shl
add
or
add
push
rcr
std
xor
dec
loope
pusha
in
fdivr
mov
mov
jge
push
rcr
movs
loopne
adc
or
bound
dec
aad
dec
dec
xor
push
loopne
push
or
fadd
ret
in
pop
xchg
add
fbstp
push
xchg
or
push
pop
rsm
pop
call
in
dec
in
shl
cmps
adc
add
add
push
add
add
mov
int3
push
lahf
jge
jmp
mov
sbb
sbb
push
jbe
sbb
and
adc
rcr
jecxz
inc
mov
jo
adc
and
mov
adc
sub
adc
dec
mov
inc
adc
and
sbb
mov
sti
pop
or
pop
ret
pop
mov
inc
inc
pusha
add
inc
cmp
loopne
inc
dec
lahf
jmp
mov
jb
inc
mov
(bad)
mov
or
xchg
inc
and
lock
shl
je
dec
add
test
inc
pop
jl
js
ror
es
pop
(bad)
pushf
sub
ret
je
loop
bound
aas
xor
sub
adc
and
cs
ss
jl
or
cdq
jns
movs
cwde
sub
inc
or
shr
pop
jo
cmp
push
pop
retf
mov
ret
sbb
xor
mov
(bad)
jle
jp
aam
and
mov
pop
or
xor
out
inc
cmp
inc
push
mov
fild
add
fs
push
imul
add
adc
mov
sub
fimul
mov
sbb
shl
or
push
leave
retf
mov
retf
movs
and
mov
push
pushf
and
and
sbb
jbe
gs
fs
mov
test
test
pop
sub
sbb
ret
out
int3
loopne
mov
call
mov
push
test
pop
jge
mov
add
repnz
adc
push
lods
test
clc
or
cs
sti
xor
and
test
push
sbb
mov
dec
out
sub
push
sbb
jmp
push
movs
jge
and
je
add
xchg
dec
ins
inc
sbb
pop
shl
push
mov
imul
xchg
inc
xchg
adc
outs
jecxz
inc
mov
loopne
and
cmp
or
fbstp
frstor
mov
push
inc
dec
cs
scas
daa
fimul
call
jg
cmps
jnp
std
add
cmp
leave
ins
add
dec
push
inc
nop
ror
sub
sub
mov
jbe
mov
jle
or
cld
sub
xchg
scas
mov
or
dec
in
sub
or
lahf
add
or
lahf
dec
sub
aad
mov
add
jmp
loope
xchg
jo
imul
inc
mov
jno
cli
das
vpmacssdd
pop
inc
add
adc
aaa
loop
add
jle
mov
aas
add
cmp
jl
inc
pop
ss
xchg
or
and
in
jmp
jne
mov
sub
dec
jl
inc
pop
cli
add
pusha
push
mov
sbb
adc
inc
jle
rcr
add
repz
push
xchg
daa
sub
rcl
sbb
dec
jns
mov
or
rol
adc
xchg
lock
enter
not
sub
sbb
arpl
lahf
xchg
iret
sbb
adc
jo
addr16
cmp
push
iret
enter
xor
outs
iret
in
mov
addr16
clc
shl
push
adc
nop
jb
xchg
ja
mov
ja
push
lods
ja
push
in
adc
sahf
loopne
out
xchg
cmp
add
jl
cmp
pop
rcl
fdivr
fwait
int3
mov
fidiv
ret
or
add
outs
cmp
gs
sahf
mov
fdivr
outs
(bad)
cmp
test
push
mov
or
(bad)
call
sub
adc
loopne
add
in
pop
cmp
scas
loop
sbb
inc
in
lock
add
rcl
fs
call
xor
in
push
in
dec
push
sub
je
cmp
xor
sbb
clc
in
push
cmp
cld
cld
ret
push
sbb
mov
xor
jp
jo
add
add
aad
aaa
out
dec
pop
adc
fisttp
pop
add
gs
arpl
ins
in
adc
shl
push
push
(bad)
or
sbb
test
pop
arpl
popa
add
or
sbb
push
outs
sub
cmp
add
das
pusha
mov
outs
pop
outs
add
fadd
xchg
dec
xor
cwde
(bad)
not
dec
sti
fs
ret
nop
push
adc
or
sbb
xchg
lock
push
push
arpl
inc
(bad)
or
bound
jb
jp
pop
push
sbb
imul
mov
fisttp
pop
pop
pop
push
add
add
out
jg
jmp
adc
js
(bad)
jle
adc
arpl
je
jae
inc
adc
lods
jb
xor
push
je
jae
add
fnstcw
sbb
sbb
addr16
dec
fisub
loopne
or
lock
dec
into
mov
adc
ficomp
test
int3
mov
add
inc
test
adc
add
push
inc
js
or
jb
sub
push
clc
jmp
push
xchg
adc
movs
xor
or
pop
(bad)
push
outs
jae
rcr
push
xchg
mov
lahf
push
popa
or
arpl
or
pop
adc
sbb
add
pop
or
cmp
imul
sbb
(bad)
(bad)
call
cs
mov
pop
and
pop
xor
sbb
xor
pop
add
mov
arpl
jecxz
mov
or
push
test
sbb
mov
push
mov
xor
fdiv
xor
or
pop
ja
cld
push
push
jne
bound
or
inc
imul
xchg
daa
xor
mov
gs
mov
inc
mov
jo
mov
mov
xor
push
stos
xor
prefetch
std
and
lea
sub
xor
into
xor
nop
adc
frstor
arpl
into
dec
jae
sbb
test
add
arpl
ss
and
xor
int
mov
test
sub
dec
push
(bad)
cdq
dec
mul
cdq
mov
inc
in
pop
(bad)
call
or
add
inc
fbstp
call
add
icebp
or
arpl
mov
mov
push
add
mov
jge
adc
add
mov
ret
inc
and
call
aad
add
(bad)
pop
jnp
and
add
cmc
jo
xor
test
or
call
cs
or
inc
ret
mov
das
aam
inc
cmp
jg
call
inc
jb
fs
dec
outs
xchg
jb
fs
jmp
fs
pop
jg
add
mov
shl
shr
adc
push
in
or
rol
add
mov
ins
mov
push
push
inc
sub
cli
dec
out
push
loopne
nop
fmul
push
inc
or
pop
(bad)
es
shr
push
inc
rol
lods
pop
push
leave
xlat
out
jbe
in
xlat
and
jle
adc
js
fcomp
(bad)
sub
sbb
es
push
add
jl
mov
pushw
mov
jmp
fist
and
and
push
shr
out
imul
push
jo
out
mov
push
pushf
stos
xchg
mov
push
mov
scas
sub
jbe
push
imul
inc
fdiv
lds
in
mov
lods
push
fistp
mov
les
add
fcmovu
push
adc
int
cld
add
xor
imul
dec
mov
fadd
push
fild
or
js
paddsw
pop
jne
fsubrp
test
das
sbb
push
loope
test
jp
ret
mov
fisttp
es
mov
adc
popa
gs
nop
or
rol
mov
cmps
xor
inc
push
push
inc
leave
dec
(bad)
mov
inc
add
pop
adc
adc
(bad)
mov
ret
sar
mov
or
xchg
ret
push
ins
(bad)
call
sbb
mov
scas
mov
ins
and
push
cdq
jbe
pop
(bad)
adc
xor
push
ja
pop
dec
sar
pop
ds
daa
sbb
int3
stos
dec
outs
loop
dec
loope
xor
in
dec
add
cmps
(bad)
pop
sub
stos
add
and
add
clc
xchg
inc
add
mov
dec
outs
mov
adc
aaa
dec
mov
stc
pop
dec
push
dec
pop
ja
shl
add
pop
mov
jecxz
push
ret
sbb
in
sbb
pushf
dec
adc
add
add
inc
jno
stc
ds
sbb
inc
ins
add
sbb
cs
push
add
push
mov
push
fs
push
mov
pop
cmp
cmp
adc
xor
and
imul
or
push
outs
jmp
inc
and
sub
or
fimul
xlat
add
lock
dec
pop
(bad)
fild
and
and
push
movs
sbb
out
mov
std
int3
inc
std
das
mov
imul
mov
dec
mov
in
add
shl
int
push
rcl
sahf
cmps
jp
cmp
jp
or
les
or
dec
ja
outs
fs
push
pop
add
arpl
aas
push
fldenv
add
nop
in
or
dec
pop
fwait
or
adc
add
or
cmp
repz
lea
add
jmp
pop
mov
cmp
or
or
dec
inc
dec
(bad)
jmp
or
je
mov
add
outs
nop
cmps
or
clc
mov
mov
or
lahf
mov
and
xor
data16
ins
jns
and
dec
push
scas
gs
loope
xchg
(bad)
jge
adc
push
arpl
adc
and
xor
xor
dec
dec
push
xor
ins
mov
or
adc
add
or
sbb
mov
int
adc
jbe
xchg
mov
mov
or
outs
sbb
daa
mov
push
sub
mov
popf
mov
int
or
inc
or
fld
cwde
outs
inc
imul
or
sbb
lock
xor
cmps
dec
pushf
int
mov
push
push
adc
dec
fdiv
pop
pusha
xchg
bound
adc
xor
cmp
dec
inc
push
xchg
out
cwde
push
adc
or
cs
and
mov
dec
pop
push
clc
dec
or
push
push
es
scas
mov
add
pop
or
push
or
sti
push
xchg
mov
push
mov
push
ins
and
sbb
lods
popf
jne
xchg
loopne
adc
loope
pop
nop
inc
xor
and
aas
add
(bad)
jae
out
or
test
or
add
pushf
add
add
lds
sub
pop
jp
xor
gs
dec
popa
popa
dec
push
daa
pop
cwde
fiadd
lods
push
idiv
dec
cmps
test
add
ror
push
push
addr16
pusha
fist
add
addr16
push
push
dec
dec
gs
pop
push
inc
lock
sar
xchg
push
dec
rcl
sub
popa
or
xor
dec
or
push
cmp
add
addr16
gs
adc
test
or
cmp
outs
mov
ins
pop
popa
xor
xor
add
adc
xchg
add
push
add
mov
add
lock
xchg
xchg
lods
ss
adc
push
les
movs
jmp
push
or
inc
js
call
dec
addr16
and
adc
cmp
neg
movs
(bad)
cmp
push
mov
mov
dec
pop
and
and
pop
add
inc
test
rol
push
push
inc
push
push
fidiv
push
sbb
jae
and
pop
jmp
popa
or
inc
gs
call
jp
(bad)
lock
fsub
jnp
mov
les
mov
popa
fimul
or
sub
pop
inc
jb
push
push
fwait
inc
add
push
das
aaa
pop
and
add
ins
sub
add
xlat
movs
push
(bad)
(bad)
es
in
rol
jnp
or
outs
fs
adc
mov
jae
adc
sub
cmp
pop
leave
sysret
xor
or
push
sub
hlt
mov
jne
xor
push
and
xchg
cmps
push
xor
in
fs
mov
adc
mov
lahf
cmp
or
into
leave
cmp
mov
dec
add
fdivr
add
pusha
adc
les
push
adc
or
pop
mov
push
sbb
stc
jbe
inc
push
or
js
sbb
out
add
jmp
mov
push
test
mov
adc
sub
pop
sbb
cmovl
daa
enter
pop
jecxz
in
mov
in
jp
in
and
push
aam
loopne
push
inc
inc
call
sbb
push
push
pusha
repz
loopne
xchg
add
xchg
inc
push
ficomp
nop
push
movs
repnz
mov
push
daa
ror
in
repz
xor
sub
push
in
sbb
xchg
pop
daa
sbb
push
dec
and
rcr
daa
cld
and
mov
in
ds
int3
sub
push
cli
data16
fiadd
mov
(bad)
aam
push
or
and
mov
mov
pop
shr
inc
and
aam
sbb
jo
push
pop
jno
and
sub
lea
outs
add
out
es
or
scas
mov
popf
fcom
mov
je
icebp
push
pushf
pop
scas
(bad)
pop
xor
das
shl
xor
neg
das
pop
xor
in
inc
mov
test
movs
sub
call
sub
jnp
or
xsha1
cmps
push
or
adc
fldcw
cmps
add
mov
test
mov
xor
sbb
jecxz
stos
or
lds
je
mov
adc
and
push
aaa
popa
jecxz
add
dec
inc
lock
mov
add
mov
push
sbb
adc
adc
je
dec
js
mov
mov
mov
push
fucomip
cmps
adc
jp
sbb
addr16
xchg
das
cmc
push
imul
arpl
es
icebp
jo
push
ja
xchg
inc
xchg
xchg
or
loopne
xchg
adc
mov
push
or
add
loopne
push
gs
push
sahf
imul
gs
pop
call
push
adc
dec
ins
push
jmp
jno
pop
in
cmp
xor
cmc
rol
imul
dec
outs
rcl
or
inc
mov
clc
lea
es
daa
adc
xchg
xor
popa
jno
pop
cmps
mov
hlt
adc
pop
xchg
xchg
dec
push
sbb
popf
sub
mov
icebp
out
int3
mov
add
ja
xor
fst
aaa
and
icebp
or
lock
inc
or
mov
xchg
dec
test
les
fst
sub
pop
cmp
fmul
sub
mov
dec
ss
or
jb
sbb
lods
push
(bad)
mov
push
sub
ret
(bad)
pop
inc
ins
inc
jno
push
in
test
dec
xchg
jmp
cmp
jae
pusha
sub
jae
sub
or
pusha
push
call
fmul
sbb
std
push
dec
sar
and
data16
rol
test
inc
out
stos
add
std
cmps
je
push
push
and
fistp
mov
fstp
sbb
push
fisubr
mov
sub
sub
jo
inc
fld
push
xor
ja
test
fisubr
bound
mov
inc
mov
ror
cmps
mov
sbb
add
repnz
pop
push
clc
pop
add
sbb
pop
xlat
or
push
dec
mov
lock
inc
das
pop
pop
pushf
push
mul
retf
in
call
pop
pushf
std
jmp
maxps
mov
mov
leave
push
cmp
iret
je
fcmovnu
cmp
add
das
push
push
push
mov
add
repnz
add
stc
(bad)
fsub
sahf
mov
and
ja
add
js
sbb
cld
pop
mov
adc
pop
add
add
add
ins
fisttp
add
push
add
adc
push
push
bound
pop
mov
mov
mov
mov
(bad)
(bad)
dec
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
(bad)
(bad)
jmp
(bad)
in
jmp
test
jmp
jmp
or
pop
es
into
call
or
pushf
es
xor
cmp
jge
cmp
loopne
sub
cmp
js
cmps
stc
pop
sub
mov
les
fistp
mov
das
pushw
sub
xor
sub
push
mov
push
fdiv
cmp
ss
jne
mov
in
push
jl
cld
jl
inc
fwait
or
adc
mov
xor
cld
cmp
test
sub
push
jp
std
xchg
push
and
add
fwait
int
push
inc
push
mov
pusha
and
jnp
adc
in
mov
nop
push
jge
imul
inc
push
push
je
data16
add
lock
mov
out
jge
clc
and
add
scas
push
and
mov
push
mov
sbb
or
cmp
sub
dec
or
or
xchg
sbb
clc
jae
or
jns
pusha
sub
xor
in
adc
stc
enter
push
outs
jae
dec
xor
mov
sub
fmul
push
push
aas
mov
cmps
retf
jmp
inc
sub
lods
jno
call
sbb
or
jge
push
mov
popf
(bad)
leave
or
and
pop
or
pop
cmp
fwait
inc
add
outs
arpl
js
push
adc
aam
push
imul
sbb
add
and
leave
push
sub
(bad)
sub
xchg
push
sub
(bad)
retf
pusha
bound
mov
popa
shr
sbb
out
call
stos
cmp
sub
sub
sbb
inc
pop
icebp
pop
pop
adc
imul
ins
jns
push
xor
pop
bound
inc
pop
sbb
pop
adc
in
push
jb
and
rcl
call
dec
imul
inc
cmp
push
packsswb
cmp
arpl
dec
ins
inc
pop
and
jmp
test
xchg
clc
mov
sub
movs
fimul
cmps
pop
loope
mov
pusha
ins
dec
outs
jmp
and
and
mov
push
or
arpl
retf
inc
je
mov
pop
adc
fs
cmp
test
pop
and
cmp
sbb
sub
rol
ins
mov
dec
sub
daa
adc
mov
aaa
inc
nop
in
dec
movs
cwde
dec
or
add
imul
cmps
je
adc
loope
or
sbb
xor
adc
or
sub
and
test
xor
inc
sbb
dec
inc
gs
add
cmp
mov
addr16
cdq
lock
dec
lock
lock
pop
cmp
xor
out
add
lock
mov
test
mov
or
mov
xchg
hlt
inc
inc
cs
mov
inc
inc
scas
shl
adc
inc
inc
inc
cmp
mov
(bad)
jmp
inc
inc
inc
push
js
rcr
inc
inc
out
addr16
bound
out
add
fsub
sbb
inc
mov
jo
mov
or
mov
inc
mov
mov
(bad)
push
jge
pop
dec
idiv
int3
sbb
inc
mov
mov
imul
xor
out
test
ins
cli
dec
mov
adc
js
les
mov
jne
xor
(bad)
scas
adc
jp
inc
pop
sti
daa
and
(bad)
push
lds
jmp
mov
das
mov
test
adc
fmul
adc
inc
test
xchg
jns
mov
sbb
inc
in
or
or
jecxz
shl
jmp
or
je
pushf
dec
push
push
push
mov
sub
aam
add
xchg
dec
dec
jmp
mov
je
push
jo
jno
or
pop
inc
movs
mov
aam
or
sub
sbb
or
ds
xchg
push
and
test
mov
adc
aam
(bad)
or
retf
stc
sti
in
or
dec
movs
cmp
or
or
or
addr16
loopne
hlt
imul
and
add
mov
(bad)
lock
dec
dec
cmovae
mov
add
je
add
dec
sbb
sbb
or
cmp
imul
mov
arpl
gs
pusha
sbb
add
pop
gs
xchg
movs
pop
outs
jne
bound
mov
xchg
push
imul
push
pop
adc
lea
xchg
popa
and
inc
add
and
adc
dec
sbb
xchg
in
je
sub
mov
lea
into
or
inc
or
mov
jmp
cmps
pop
inc
push
aad
imul
in
pop
test
inc
je
sti
lock
jb
sub
out
push
loope
push
loop
sbb
inc
lock
inc
idiv
sub
test
sbb
or
test
imul
mov
(bad)
out
sbb
inc
pop
or
and
add
sub
pop
sbb
shr
mov
dec
dec
push
dec
rol
cmps
xor
in
xor
add
mov
mov
enter
and
pop
mov
dec
dec
mov
fsub
sub
test
lds
mov
(bad)
(bad)
pop
and
adc
mov
adc
fisttp
mov
and
inc
and
mov
fyl2x
iret
(bad)
sti
jns
mov
pop
dec
dec
das
or
out
add
inc
aas
repz
stos
ror
dec
out
push
jae
mov
and
fsub
dec
mov
inc
jle
rcr
mov
dec
and
sub
mov
mov
pop
dec
inc
sub
jle
xchg
gs
sahf
add
or
jae
xchg
mov
mov
push
mov
inc
jg
inc
cmp
mov
rcl
sub
(bad)
mov
xchg
ret
fst
das
add
or
(bad)
in
add
in
and
repz
add
shr
fdiv
push
fisttp
xor
and
ror
inc
sub
popa
cmc
mov
dec
xor
add
mov
xor
and
dec
jbe
or
or
mov
js
fs
out
add
xor
sbb
sahf
fdiv
add
(bad)
fadd
(bad)
cmp
push
mov
mov
lods
ret
in
in
sub
cmp
ret
bound
xlat
or
test
and
mov
jecxz
mov
and
cmp
lods
dec
movs
les
add
(bad)
enter
cmp
add
xor
rcl
in
or
cmp
xor
out
leave
jmp
xor
adc
pop
xchg
push
add
mov
mov
arpl
mov
push
xchg
mov
sub
cmp
loopne
test
inc
stos
adc
(bad)
cmp
mov
stc
in
dec
mov
dec
add
mov
push
add
push
jmp
(bad)
sub
pop
popa
sub
and
lods
mov
cmps
xlat
and
add
jnp
add
imul
jae
inc
imul
push
(bad)
or
or
dec
dec
inc
adc
or
and
fwait
loope
fist
fisubr
add
mov
or
popa
outs
rcr
inc
pop
dec
fild
add
mov
aad
clc
mov
adc
jbe
inc
push
cmp
cmps
icebp
inc
add
add
inc
test
adc
inc
sbb
adc
inc
add
sub
fimul
push
gs
aad
sub
sub
pusha
bound
pop
dec
add
jbe
loopne
les
sar
sti
add
or
mov
and
push
add
iret
mov
inc
(bad)
push
daa
adc
or
scas
inc
clc
bound
add
js
jbe
(bad)
clc
ja
ffreep
jnp
or
inc
movs
dec
add
xchg
push
dec
sub
dec
loopne
mov
leave
mov
jl
mov
and
sbb
jb
dec
into
sbb
fadd
add
pop
fisttp
and
jecxz
mov
pusha
ds
xchg
inc
add
pushf
mov
rol
sbb
add
inc
je
xor
cmps
adc
or
inc
jo
mov
ret
jo
adc
scas
sub
and
and
pop
rol
ja
sbb
xchg
das
test
js
pop
add
mov
jae
xor
dec
and
sti
in
add
push
jo
retf
add
stos
lea
pushf
ror
sbb
push
enter
popa
mov
pusha
add
push
sub
pop
ret
xchg
popa
add
loop
into
and
scas
ret
bound
fsub
ror
fmul
out
arpl
sbb
fmul
add
or
dec
aam
rcl
mov
not
push
dec
popf
inc
pusha
mov
dec
rcl
push
enter
pop
push
add
pop
sbb
adc
add
cmps
add
lods
pop
add
pop
add
imul
addr16
or
or
mov
imul
inc
test
enter
out
or
lahf
mov
dec
rol
cmp
shr
fidivr
push
add
jp
das
and
fbld
or
adc
and
xchg
push
pop
jp
xchg
and
and
jmp
imul
and
and
mov
and
adc
and
and
xor
and
ins
dec
ins
xchg
and
and
mov
and
xchg
outs
inc
mov
not
outs
cmp
and
and
movs
into
and
jo
and
and
lea
xchg
and
jno
arpl
stos
int
adc
or
mov
mov
ror
xor
mov
mov
push
jbe
mov
jbe
mov
xor
mov
xor
sti
sub
shl
iret
cmc
dec
add
pop
adc
add
push
jne
cdq
push
xchg
pop
push
add
xchg
or
ret
pop
fcmovbe
sub
mov
ror
add
(bad)
pop
add
sbb
jmp
adc
adc
ficomp
cmp
dec
push
add
dec
push
and
and
adc
mov
xor
inc
(bad)
push
mov
sub
cmp
mov
clc
test
push
and
push
push
enter
fiadd
push
dec
dec
push
je
loopne
(bad)
sub
mov
inc
loope
pusha
cdq
enter
mov
xor
cmp
ret
add
cwde
nop
or
not
add
imul
bound
hlt
add
jge
mov
(bad)
dec
xchg
push
and
mov
jp
add
add
jge
outs
and
dec
push
daa
ss
cmp
push
jecxz
stos
add
mov
sub
test
cmp
jne
add
movs
fisub
cmc
pop
and
lock
and
out
ret
(bad)
inc
icebp
jbe
mov
ja
in
in
ror
enter
push
jne
shr
mov
xor
dec
sub
jo
test
and
adc
or
push
fs
jno
int3
inc
cmp
sbb
cmp
cmp
sbb
jmp
aas
or
cmp
jae
dec
sub
popf
mov
shr
and
inc
(bad)
pop
dec
mov
stc
out
ds
js
or
data16
arpl
mov
cdq
add
in
adc
pop
push
icebp
in
sbb
test
mov
xchg
lahf
add
(bad)
sbb
add
in
cmp
cmovae
xchg
xor
fs
mov
push
push
adc
ss
pushf
push
and
mov
push
je
sbb
push
inc
adc
jp
push
adc
inc
push
push
ja
or
ja
push
sbb
xor
mov
rcl
inc
sbb
(bad)
inc
push
inc
xor
add
cmp
cmps
mov
jae
or
mov
ins
fld
retf
fadd
mov
bound
outs
jne
add
add
sub
pop
inc
mov
dec
pop
xchg
or
sub
push
inc
mov
cs
mov
ins
das
pop
loopne
mov
adc
sbb
add
mov
mov
ds
add
inc
pusha
jl
push
cmp
ins
or
jo
adc
mov
je
adc
stos
inc
js
sysret
popa
mov
das
jb
mov
push
popa
jbe
aaa
inc
add
sub
xchg
fld
test
imul
mov
add
pop
dec
sub
mov
and
nop
push
jmp
mov
or
xchg
icebp
movs
push
mov
rcr
mov
cmps
rcl
or
fiadd
dec
add
mov
or
cmp
xchg
mov
pop
pop
mov
mov
popf
inc
cmp
and
test
test
jg
fwait
and
and
clc
push
xchg
mov
fisttp
sbb
popa
popf
(bad)
adc
cmp
add
xchg
push
pop
js
or
and
sub
rol
sub
dec
push
adc
lods
ins
out
movs
add
push
sub
xor
push
in
or
push
push
cli
addr16
adc
das
jmp
push
les
pop
ins
lods
xor
test
inc
cmp
fbstp
or
cmp
lods
push
test
lods
out
stos
inc
jnp
cmp
clc
arpl
pop
xor
mov
add
sub
xor
mov
push
(bad)
rcl
push
pop
pop
(bad)
popa
push
sub
mov
add
jae
cmp
arpl
adc
mov
and
cmp
in
pop
push
pop
and
jmp
jno
xlat
or
push
jl
sar
jno
add
clc
mov
rol
or
cdq
mov
jns
sar
jnp
push
adc
mov
or
mov
jp
jo
in
dec
mov
xor
cmp
push
add
mov
test
or
int3
or
push
xchg
xchg
xchg
(bad)
xchg
retf
xchg
out
mov
pop
xchg
xchg
xchg
xchg
and
inc
push
retf
xchg
xchg
xchg
mov
sti
and
inc
mov
xchg
xchg
iret
stc
sbb
xchg
imul
pop
add
jb
mov
add
add
ret
dec
pop
es
or
outs
imul
js
fcomp
jge
popa
or
adc
adc
mov
jno
std
jo
jae
mov
jbe
xchg
cdq
xchg
cs
push
popf
or
inc
adc
or
call
pop
push
jns
pusha
popf
icebp
dec
sub
lock
(bad)
add
loopne
ret
or
pop
mov
or
imul
pop
and
push
or
sbb
cdq
or
outs
inc
cld
push
fwait
arpl
out
aad
dec
or
adc
mov
fdivr
fsubr
add
xchg
inc
and
push
pop
lahf
shl
mov
and
loop
enter
xchg
sbb
mov
mov
dec
mov
jmp
inc
dec
in
xchg
pop
pop
push
push
inc
ror
xchg
jns
inc
popf
adc
call
movs
adc
adc
mov
out
or
push
mov
dec
and
mov
push
outs
in
(bad)
xchg
mov
lods
sbb
sub
push
lds
adc
adc
and
push
in
lds
push
popf
sbb
jmp
add
cmc
out
jmp
mov
adc
or
and
fild
jno
xor
je
xchg
mov
js
jp
and
inc
sbb
jge
add
add
arpl
rol
inc
add
inc
stos
add
mov
add
push
popa
jae
push
dec
mov
cmp
jns
mov
inc
mov
outs
mov
or
mov
mov
jmp
push
popa
aas
mov
sub
jge
sub
add
xchg
(bad)
movs
mov
aam
daa
mov
or
sbb
retf
cwde
dec
fadd
into
adc
mov
pushf
mov
push
dec
inc
and
cmp
mov
rol
mov
jo
push
stos
sti
inc
and
and
imul
or
adc
test
adc
je
push
push
pop
push
shl
pusha
inc
popa
test
cmp
or
ss
lods
jmp
clc
xchg
cmps
jp
std
sub
xor
or
mov
bound
or
xor
test
movs
jo
adc
fsub
arpl
jge
test
adc
into
push
loope
or
je
add
adc
ins
push
test
cmp
rol
dec
(bad)
ret
out
mov
cvtpi2ps
dec
shl
icebp
retf
pusha
leave
jge
mov
sbb
in
cld
fbld
adc
cmp
jo
or
and
xchg
dec
jns
jge
test
lahf
test
mov
push
into
push
cli
fwait
das
pop
popf
add
jns
cmps
lahf
sub
or
push
mov
outs
cmove
dec
add
push
addps
mov
movs
shr
push
mov
js
fdiv
push
fistp
es
add
and
add
add
sbb
sub
or
dec
bound
jb
xor
inc
mov
sub
pop
cmp
inc
dec
and
ror
push
push
ret
dec
ret
imul
mov
ror
add
sub
dec
cmp
dec
out
pop
jns
outs
js
or
or
enter
test
mov
dec
xor
add
mov
pop
jo
movs
ror
and
test
mov
cmovge
mov
sbb
comiss
fidiv
push
xor
out
popa
jne
fnstsw
inc
or
sub
fsubr
es
sbb
test
(bad)
lock
fidiv
imul
bound
jmp
js
scas
add
lea
sub
inc
push
mov
push
jp
mov
div
test
cmps
ret
outs
jo
jae
(bad)
cwde
cs
push
xchg
das
frstor
xchg
adc
fcmovb
and
jp
test
movs
add
pop
or
imul
xchg
add
xchg
add
sub
fidiv
jae
cdq
mov
lods
in
sbb
mov
cmps
push
xor
xlat
and
std
mov
jne
outs
add
sbb
fdiv
dec
jmp
sahf
lods
add
mov
pop
sub
lahf
inc
imul
push
mov
inc
pop
les
adc
dec
xchg
ret
mov
adc
jge
add
cmp
push
ud1
pop
jae
mov
retf
test
arpl
lods
cmp
add
mov
(bad)
or
cwde
retf
jp
bound
inc
ins
xchg
jae
push
lea
mov
cld
xorps
movs
popa
movs
fadd
add
push
rcl
pusha
mov
mov
sub
imul
sti
dec
call
cmp
mov
lds
call
adc
aaa
inc
pusha
clc
loopne
loope
outs
mov
das
mov
lods
dec
outs
add
sbb
mov
inc
xor
adc
je
xchg
or
jmp
aas
(bad)
sar
ds
mov
adc
dec
inc
aam
mov
sti
inc
fisub
sbb
xor
inc
jb
jmp
sub
xor
loope
push
cmp
fs
jae
xchg
jbe
push
xor
adc
pop
popa
pop
sub
mov
fsubr
dec
dec
sub
lds
jne
push
adc
xor
ficomp
js
or
jl
jmp
test
xchg
aas
inc
imul
add
add
add
jecxz
outs
imul
mov
popf
iret
fwait
popf
ret
add
adc
sahf
aas
cmp
cmp
sub
sahf
pushf
pushf
mov
mov
xor
daa
daa
and
mov
pop
and
mov
leave
leave
js
int
in
fs
mov
xor
in
and
push
jbe
js
jb
xlat
adc
xchg
out
js
cmp
sub
cmp
aad
test
sub
ins
push
add
cwde
add
pop
loopne
lds
cdq
mov
jl
or
cwde
add
sahf
jge
fs
sbb
xor
push
pop
arpl
inc
(bad)
sbb
sub
or
je
mov
outs
inc
adc
or
dec
mov
and
sub
push
rcl
dec
dec
imul
push
push
xchg
test
push
add
out
xchg
xor
movs
inc
pop
adc
or
gs
rcl
gs
fsubr
sbb
push
jbe
jg
mov
popa
cwde
sub
test
push
or
jmp
sbb
inc
add
pop
jl
push
sbb
aad
imul
imul
std
adc
dec
add
add
inc
cmp
xor
mov
mov
lea
in
pop
xor
(bad)
xchg
outs
je
sub
pop
or
sbb
adc
fdivr
ja
jne
jo
mov
push
inc
dec
inc
mov
push
ins
ja
jb
ins
mov
dec
ja
rcr
lea
push
xchg
rol
cmp
lahf
dec
sub
jg
movs
leave
out
popa
sub
in
xchg
push
jle
hlt
dec
mov
push
add
popf
cmp
adc
cmp
fsubr
push
mov
pop
popa
xor
ret
dec
cmp
pushf
adc
mov
add
pop
xchg
xor
(bad)
ficomp
ins
inc
add
movs
push
jb
jo
test
popf
stos
ds
jmp
int
rcl
mov
rcl
and
or
inc
les
mov
gs
push
or
inc
mov
push
jno
inc
add
out
test
adc
mov
repnz
sbb
adc
inc
push
push
jnp
inc
pop
adc
loopne
shl
mov
stos
push
ja
popa
and
daa
add
jle
retf
scas
or
xor
pop
lds
(bad)
and
mov
sbb
outs
inc
jp
mov
pop
mov
clc
sub
retf
imul
nop
shr
rol
ds
xchg
adc
push
sub
inc
not
jnp
test
push
or
add
and
call
sbb
test
xor
in
lods
dec
dec
je
pusha
les
nop
idiv
imul
lea
cli
mov
xor
js
add
les
push
adc
jmp
add
jecxz
out
movs
les
jp
pop
or
xchg
stc
cdq
xor
and
jb
sbb
sbb
push
mov
sar
stos
ja
xor
xor
dec
jno
mov
out
stos
sub
xor
xor
retf
out
xor
jb
adc
cmp
xor
scas
into
std
sub
xor
xor
jg
retf
xor
xor
and
xor
xchg
mov
sti
enter
and
enter
mov
add
iret
test
push
sub
(bad)
iret
inc
mov
inc
push
and
bound
or
mov
sub
push
ret
or
jge
add
inc
and
loope
aam
sbb
adc
movs
lahf
das
jae
mov
lahf
sub
add
xor
in
imul
loopne
or
mov
adc
mov
sbb
pop
aam
sub
xchg
dec
(bad)
aaa
mov
push
test
add
mov
push
(bad)
icebp
(bad)
fcom
imul
cmps
inc
lods
test
(bad)
ror
ret
(bad)
jl
or
(bad)
adc
sti
inc
sbb
jg
in
mov
mov
mov
or
push
iret
push
inc
jnp
sar
inc
mov
pop
mov
pop
lods
add
jmp
pop
adc
mov
add
nop
push
inc
adc
inc
push
(bad)
cmp
xchg
mov
pusha
ret
inc
or
and
in
sbb
sbb
into
add
add
cmp
add
push
push
xor
inc
loope
jbe
rol
stc
call
shr
adc
add
dec
adc
addr16
pusha
aaa
mov
dec
int3
dec
ret
mov
push
xor
inc
adc
push
call
mov
aad
fisubr
or
(bad)
inc
cdq
adc
scas
test
push
mov
adc
in
jmp
inc
cmp
cmp
clts
or
inc
sbb
xchg
push
inc
sahf
(bad)
ror
lods
mov
adc
xor
push
lods
mov
aas
and
inc
ret
lods
adc
mov
inc
ret
xchg
add
push
add
sub
pop
sub
xor
jno
call
or
rol
icebp
outs
sbb
jo
setg
je
and
nop
pop
cmp
mov
call
out
test
xor
mov
rol
stc
je
dec
lock
add
jnp
fisttp
add
mov
add
push
fistp
cs
mov
cmps
and
test
dec
adc
push
and
inc
xchg
add
add
or
xchg
sub
push
or
xor
add
mov
adc
jno
js
push
lock
mov
cs
xor
jno
mov
adc
pop
mov
dec
cmps
(bad)
popf
adc
adc
dec
and
add
mov
ret
xor
lods
jl
sub
mov
pusha
es
push
retf
inc
add
sub
mov
test
pop
push
or
mov
mov
or
push
enter
loopne
in
jo
cs
les
sub
mov
mov
push
xchg
push
scas
sar
pop
shr
mov
mov
dec
icebp
sub
out
or
adc
and
adc
out
cmp
out
imul
or
jo
inc
sub
test
inc
add
dec
inc
cmp
test
inc
xchg
rcr
xor
mov
sti
and
mov
inc
sub
inc
pop
sti
lea
xchg
adc
or
or
jb
aaa
lea
sbb
inc
adc
stc
jp
test
push
popf
(bad)
inc
loopne
mov
shl
xor
mov
add
add
aas
es
add
push
adc
jmp
inc
add
jns
pushf
pop
push
jo
ret
js
mov
mov
xor
push
dec
push
add
call
test
mov
xor
push
sar
cmp
outs
movs
push
adc
cmp
mov
loopne
mov
rol
jmp
inc
pop
add
sar
adc
fbstp
pop
lock
push
xor
xor
push
adc
adc
xchg
or
test
scas
add
sbb
inc
push
call
jne
add
int
or
sbb
es
cmp
sub
jbe
test
xor
add
xor
xor
je
mov
pushf
mov
je
in
and
lods
inc
push
add
ror
out
xchg
movs
arpl
bound
(bad)
sbb
adc
ficomp
xchg
xor
sbb
retf
inc
and
sub
dec
mov
jg
les
cmp
adc
add
dec
xchg
sti
hlt
fld
fld
and
and
ror
dec
outs
inc
sub
or
xor
lea
add
stos
xlat
cmp
ret
inc
xor
sti
sub
xor
je
add
arpl
test
jge
push
inc
test
xchg
inc
xor
or
inc
adc
fwait
or
dec
xchg
punpckhbw
inc
adc
popa
mov
push
jne
push
jo
test
mov
mov
jne
mov
je
arpl
or
xchg
dec
dec
mov
inc
mov
or
inc
sbb
les
in
push
sbb
mov
jae
and
push
pop
(bad)
aas
test
sbb
movs
add
sbb
adc
loop
inc
or
adc
lock
in
inc
aad
setbe
jb
repnz
cmp
jnp
xor
jns
in
xor
daa
in
push
sub
leave
leave
cwde
mov
fwait
or
enter
mov
retf
adc
aas
pop
pop
into
in
mov
cmp
fadd
push
push
xchg
inc
iret
add
cs
js
ins
lahf
fsubr
call
xor
sbb
cwde
mov
inc
arpl
(bad)
xor
dec
ror
shl
je
jb
repz
cmp
sub
idiv
icebp
jns
add
mov
es
and
ins
xor
or
test
add
cwde
lock
bound
jg
xor
dec
add
push
popa
fld
dec
or
fs
into
adc
add
ret
inc
lods
movs
inc
pusha
push
hlt
data16
movs
leave
daa
push
cmp
xor
rep
test
sbb
push
iret
ins
add
jp
push
pop
adc
mov
mov
adc
mov
xchg
xchg
addr16
mov
rcr
ins
or
movups
xor
test
mov
in
or
jmp
sbb
cmp
inc
push
addr16
or
xchg
and
dec
adc
push
pop
inc
psllw
xor
jmp
dec
mov
and
or
mov
mov
movs
inc
rol
cmps
xor
xor
in
mov
pop
jb
fdiv
sbb
dec
les
inc
fwait
dec
mov
push
xor
fdiv
out
cmp
int3
clc
push
ins
and
add
clc
xor
pop
and
and
push
aad
cmp
xor
pop
sub
out
ret
out
xchg
add
add
les
gs
cmp
mov
mov
loope
or
xchg
jmp
sahf
mov
inc
movs
popf
lods
add
jle
outs
je
pop
add
add
mov
pop
popa
push
xor
push
(bad)
mov
ins
pop
(bad)
in
jo
je
dec
aad
leave
inc
sub
fldcw
popa
mov
icebp
ror
test
aam
sbb
arpl
add
xor
xchg
jne
sbb
inc
outs
js
cwde
cdq
mov
pop
mov
cdq
mov
inc
inc
shl
and
adc
push
jb
pop
pushf
mov
xchg
rol
ds
push
fcmovnb
adc
cmp
arpl
pop
inc
rcl
or
les
xchg
jecxz
or
xor
popa
movs
enter
lods
lock
add
add
sbb
mov
aam
cwde
(bad)
loopne
pop
mov
retf
inc
ins
jne
popa
je
add
inc
(bad)
lock
popf
jnp
mov
inc
add
clc
adc
mov
clc
push
add
push
mov
mov
std
push
mov
sub
sub
les
sub
push
cld
push
movs
push
ficomp
dec
enter
in
mov
es
outs
cmc
imul
push
sbb
idiv
and
call
mov
xchg
push
jl
dec
icebp
jne
loope
push
sub
sbb
fbstp
fsubr
jno
dec
and
push
int3
clc
push
movs
pop
rol
pop
cmp
mov
and
retf
aad
add
add
add
out
or
cmp
mov
push
or
sbb
or
add
lock
xor
pusha
push
mov
jg
dec
mov
mov
dec
push
push
loop
push
or
jbe
or
les
jne
or
je
and
cmp
mov
and
push
push
add
xchg
enter
adc
mov
hlt
mov
mov
test
ffree
dec
hlt
test
(bad)
cmp
shl
(bad)
push
arpl
inc
and
pop
push
add
mov
or
cwde
push
loopne
sbb
mov
push
jmp
cmp
sti
jmp
das
or
in
pop
cmp
jl
push
sbb
or
(bad)
mov
adc
stos
cmp
dec
fld
pop
out
fcom
add
add
and
and
addr16
cmp
pop
mov
adc
sub
sbb
sbb
mov
mov
sub
adc
push
dec
and
or
pop
push
sbb
(bad)
lahf
movs
and
mov
adc
fnsave
and
sar
(bad)
push
push
push
push
mov
add
add
and
ins
dec
mov
aam
xor
mov
fisub
or
push
mov
dec
popa
push
inc
dec
ss
bound
int
mov
jno
adc
stc
test
add
outs
add
sbb
ja
enter
xchg
ficomp
mov
xor
cmp
push
sbb
loopne
xor
cmps
shr
pop
xchg
xchg
cmp
or
jl
(bad)
pop
jmp
cmp
pop
mov
cld
sub
pop
push
adc
jl
or
or
push
add
imul
pop
mov
and
mov
lock
and
add
gs
mov
pcmpgtw
or
enter
stos
cmp
adc
inc
add
mov
add
push
sub
adc
jb
(bad)
cmp
aas
fneni(8087
push
jne
add
push
pop
aaa
lods
pop
xor
ret
xor
shl
sub
pusha
xlat
mov
push
adc
fcom
inc
ret
xchg
loopne
es
and
shl
not
sub
test
push
dec
xchg
ss
stos
add
out
inc
fiadd
pop
xor
dec
loopne
and
mov
stos
mov
sbb
loopne
ret
or
xchg
loop
xchg
pop
adc
shr
fs
outs
adc
fdiv
outs
nop
int3
ret
add
add
or
adc
add
adc
adc
xchg
cmps
adc
(bad)
adc
mov
pop
arpl
add
sbb
test
cmps
sbb
in
push
dec
retf
add
pop
add
(bad)
jns
imul
pop
and
test
adc
imul
sub
adc
xchg
data16
sbb
add
add
or
adc
and
scas
je
(bad)
sbb
and
loope
inc
jl
shl
loop
rcr
clc
mov
retf
and
movs
inc
out
and
push
dec
in
jbe
adc
add
and
adc
in
adc
xlat
loop
je
pop
xor
dec
cld
and
dec
pop
mov
movs
or
div
push
cmps
dec
les
mov
sub
adc
mov
fsubr
add
les
and
ins
leave
hlt
(bad)
call
or
hlt
push
and
and
mov
aas
mov
xor
mov
test
pop
les
mov
dec
or
pop
inc
div
push
inc
or
xchg
int
and
and
ins
or
sbb
sub
inc
dec
ss
inc
add
xchg
mov
add
fs
xor
ret
nop
pop
sar
inc
(bad)
rcl
sbb
lods
call
push
adc
pushf
ret
movs
or
pop
mov
mov
mov
iret
imul
jnp
ss
jbe
sbb
mov
fist
mul
or
sar
add
data16
pop
(bad)
je
mov
or
mov
fbstp
mov
sub
push
dec
je
jmp
cs
test
je
add
imul
mov
loopne
cmp
cmp
fimul
hlt
mov
push
or
and
dec
add
cmp
jl
fisubr
dec
mov
push
hlt
pop
jb
and
push
add
bnd
add
rol
dec
into
dec
into
mov
add
rcl
pop
sbb
add
xlat
cmps
mov
mov
cmp
or
push
outs
dec
adc
xchg
clc
adc
inc
sbb
and
cmp
jno
loopne
movntps
cmp
mov
(bad)
inc
movs
mov
scas
adc
loopne
mov
adc
push
mov
xor
add
sbb
call
test
push
mov
mov
jne
adc
sbb
cmc
inc
test
adc
sar
setne
jge
clc
nop
sti
xchg
push
jne
jne
outs
sbb
idiv
jp
cmp
or
adc
in
out
icebp
sub
mov
and
(bad)
push
sbb
lock
hlt
neg
jmp
pop
jne
or
adc
dec
outs
mov
mov
pop
push
shl
test
sub
rol
sub
push
mov
jl
int
int3
push
popa
mov
aam
in
in
jmp
adc
add
inc
jbe
lock
inc
test
mov
jge
addr16
cmp
setl
test
fst
push
or
shr
cld
dec
mov
inc
push
mov
push
not
mov
dec
lods
js
push
jne
mov
xlat
or
mov
pop
jb
push
pop
sub
sub
and
pop
xchg
xor
and
mov
out
xchg
rcl
cmp
fwait
dec
mov
loopne
jmp
or
xor
or
pop
(bad)
mov
adc
sti
jmp
xor
cs
cld
or
aaa
aad
mov
repz
inc
jo
jae
enter
popf
and
(bad)
cmps
add
cmc
pop
sub
xor
je
push
sub
test
pop
scas
or
pop
jmp
and
add
adc
push
les
adc
pop
inc
(bad)
pop
(bad)
jns
add
aas
or
jb
(bad)
add
or
jl
fcmovnb
lock
scas
test
mov
or
jmp
or
pop
or
and
ret
loop
(bad)
out
sahf
out
sar
pop
mov
imul
rcr
mov
add
push
jae
in
ja
jbe
or
inc
xor
inc
pop
cmp
adc
jle
push
xchg
jg
jp
mov
test
fs
mov
mov
sbb
int
sub
xor
dec
popa
jg
pop
gs
adc
outs
sbb
push
and
and
push
(bad)
repnz
or
jb
adc
or
fmul
outs
cmp
inc
inc
add
inc
mov
inc
in
fist
mov
mov
push
dec
inc
ror
mov
add
push
fimul
inc
hlt
and
test
ss
sub
mov
jle
sar
shr
push
test
jge
and
sbb
imul
mov
nop
mov
pop
das
movd
not
sub
push
xor
lods
icebp
sbb
enter
idiv
pop
mov
pop
cmp
cmp
dec
sbb
adc
jmp
lds
(bad)
push
mov
mov
into
je
sbb
test
push
xor
inc
call
adc
add
xor
sbb
xor
sysenter
push
push
push
mov
das
and
dec
adc
ret
push
adc
nop
mov
mov
popa
push
add
cmp
(bad)
fmul
sub
ja
sbb
add
jg
inc
or
icebp
jo
sti
dec
xchg
add
add
inc
sbb
jns
sbb
lea
and
jne
pop
add
mov
push
xchg
popa
sbb
or
nop
inc
cmp
nop
add
xor
and
inc
call
nop
sbb
mov
xchg
adc
je
lea
push
mov
lock
push
fwait
loopne
push
push
es
and
movzx
mov
js
push
mov
clc
test
push
sbb
test
jge
ja
inc
fsub
loopne
push
and
test
fwait
adc
or
shr
add
aam
cmp
inc
test
push
or
lods
outs
dec
mov
mov
test
ret
xchg
push
cmp
push
inc
inc
test
loope
cli
rcl
lods
popa
dec
fadd
mov
sub
mov
mov
fdiv
inc
or
push
push
lock
cdq
rcl
pop
imul
sbb
dec
adc
test
push
sub
mov
sbb
xchg
outs
sbb
les
movs
pop
pop
jb
or
or
mul
xchg
test
mov
shl
mov
and
and
and
or
fcom
ret
repnz
ret
mov
test
mov
ins
pop
push
clc
aaa
outs
sub
dec
jmp
sbb
data16
movs
sbb
imul
lods
das
stc
xchg
mov
inc
lods
mov
ficom
test
mov
cwde
psubusw
cmp
dec
jmp
lea
cvttps2pi
mov
mov
aaa
jne
(bad)
mov
pop
shl
mov
scas
sub
add
mov
movs
dec
jecxz
xor
int3
xor
pop
sub
rcr
ja
push
dec
mov
jl
push
in
xlat
xor
cmp
push
(bad)
push
pop
lahf
sub
test
cmp
ss
push
and
mov
test
fsub
int
xchg
add
or
jnp
and
sub
adc
or
(bad)
dec
ss
or
add
mov
fwait
enter
test
add
in
or
test
adc
jecxz
sub
(bad)
cmp
mov
test
je
pop
push
xchg
pushf
xor
jae
mov
push
and
mov
in
in
pop
ret
pop
nop
jbe
das
and
dec
mov
test
stc
test
repz
jne
mov
daa
cmp
(bad)
jo
es
mov
jg
iret
imul
xlat
and
pop
movs
jb
xlat
add
xor
imul
xchg
dec
ror
push
mov
icebp
mov
push
call
add
dec
dec
in
push
(bad)
pop
xor
and
test
pop
jecxz
ja
pop
mov
test
or
sub
and
xor
fistp
sub
add
movs
add
sbb
sub
cmp
add
repnz
mov
sbb
adc
jmp
inc
push
loopne
cld
ins
mov
sbb
xlat
jmp
ret
clc
sub
add
inc
push
inc
add
or
or
push
fstp
aaa
or
mov
pop
or
out
in
adc
push
push
lea
push
inc
or
add
adc
sti
mov
cmp
(bad)
pop
inc
pop
mov
outs
or
lds
sbb
out
sbb
pop
ss
aad
mov
pop
push
jle
sub
enter
mov
nop
fistp
dec
inc
pop
mov
mov
add
in
or
mov
mov
mov
and
loopne
pop
mov
xchg
loopne
jge
inc
jle
mov
xchg
std
adc
jb
sbb
or
add
jo
sbb
jb
(bad)
fadd
push
push
fs
(bad)
cwde
adc
dec
sbb
nop
aas
adc
ret
in
add
sahf
add
mov
push
adc
test
push
pop
pop
lock
mov
sub
mov
sbb
inc
rcr
cwde
fiadd
mov
sub
pop
dec
dec
je
xor
shr
mov
mov
out
add
xchg
xchg
or
mov
pop
hlt
in
arpl
jnp
jp
push
in
pavgb
add
sar
(bad)
repnz
loopne
mov
bound
jne
xchg
inc
mov
(bad)
icebp
push
cmp
mov
popa
jns
or
in
dec
xchg
aaa
aam
ret
inc
nop
nop
and
jb
xchg
mov
pop
sbb
xchg
xor
sbb
stos
or
add
jmp
lock
sbb
xchg
xchg
nop
xor
(bad)
cli
push
aas
push
neg
mov
fmul
inc
adc
mov
mov
fcom
mov
pop
inc
adc
cdq
inc
dec
or
popf
call
sub
sbb
cmc
ins
loope
or
or
adc
xor
or
sub
or
push
sub
push
add
popa
or
pusha
ret
pop
mov
arpl
pop
cmp
mov
dec
sub
call
xor
cdq
clc
sbb
or
jnp
imul
sub
and
cmc
punpcklwd
mov
xor
test
daa
mov
or
sar
add
lods
add
stos
cmp
mov
sbb
mov
fld
loop
adc
popa
adc
add
push
in
inc
dec
adc
sub
mov
adc
loopne
pop
retf
sbb
jmp
xor
jmp
loop
and
(bad)
pop
sub
add
retf
jbe
xchg
sbb
adc
out
pop
ds
lea
test
sar
adc
(bad)
jge
xor
xchg
lahf
xchg
push
add
pop
loopne
cld
sub
ret
daa
test
and
ret
retf
and
daa
fbstp
mov
adc
in
adc
add
cmp
mov
cwde
mov
or
xchg
(bad)
clc
(bad)
add
mov
mul
and
aaa
inc
push
pop
xor
adc
adc
ja
push
add
popf
lods
pop
jge
imul
inc
add
mov
aam
mov
sub
xlat
mov
mov
jg
or
jge
pop
fst
pop
and
inc
and
push
jbe
add
sbb
icebp
test
mov
(bad)
fsub
dec
cs
je
lds
fidivr
push
adc
mov
(bad)
call
imul
mov
add
pop
loop
pop
scas
sahf
sub
pop
and
add
fldcw
test
mov
xor
fstp
or
stc
imul
or
pop
call
cmp
pop
xchg
cmp
xchg
rcr
sub
xor
ds
cdq
(bad)
or
pop
add
sub
push
outs
adc
push
cld
addr16
sub
aad
cmc
or
sub
push
fsub
sub
push
xor
and
popa
sub
jae
adc
push
inc
scas
rol
mov
sub
add
(bad)
adc
cld
inc
cmc
test
xlat
enter
out
les
jecxz
or
push
in
aaa
push
lea
cmp
dec
xchg
out
jmp
dec
push
xchg
inc
cmp
xchg
cmp
inc
push
cmps
lahf
jmp
dec
cmp
in
push
movs
das
mov
sbb
cmp
jbe
add
pusha
pop
jecxz
sub
inc
pop
mov
sub
test
leave
cmp
test
dec
fs
clc
dec
adc
xor
inc
cmp
mov
adc
dec
popf
movzx
mov
or
outs
jl
(bad)
xor
daa
jge
or
push
xchg
call
ins
aas
je
sbb
or
dec
aam
shr
fnstenv
test
jnp
divps
or
jle
adc
aaa
and
ret
std
(bad)
fadd
and
cmp
and
ins
push
movs
cmp
cld
rcr
push
add
pop
mov
ret
push
mov
xchg
fisttp
mov
sub
add
es
push
mov
int3
pusha
or
mov
xchg
rcl
call
add
into
mov
add
sub
pop
mov
stos
mov
fadd
add
push
nop
fsubr
push
xchg
int3
adc
sub
adc
jae
adc
lods
ins
test
fisttp
cwde
mov
fiadd
movs
push
loopne
mov
mul
or
loop
je
arpl
or
cmp
jo
inc
adc
inc
inc
fld
cmp
out
lahf
ficom
ret
adc
out
mov
lock
icebp
cmp
(bad)
ja
add
cmp
ins
or
cwde
stc
push
sti
or
je
mov
mov
xchg
inc
sbb
and
xor
nop
cmp
je
ins
ins
xor
pop
mov
jo
pop
xor
adc
fmul
jle
ror
popa
pusha
add
mov
nop
sub
or
or
ret
cwde
dec
push
and
gs
and
jl
sbb
push
sub
ins
add
imul
aaa
add
push
fisttp
dec
push
lods
popf
test
or
je
jb
or
sbb
addr16
sub
data16
scas
or
push
inc
es
xor
fisub
xor
add
imul
std
ds
add
dec
cs
mov
or
xor
xor
xlat
mov
jns
add
xchg
mov
mov
mov
mov
loop
mov
outs
mov
cmp
ss
push
hlt
cmp
or
add
adc
dec
and
movsx
inc
pusha
stc
scas
les
nop
aas
adc
inc
data16
cmp
xor
clc
adc
movs
mov
pop
movs
fwait
cwde
and
push
movs
shl
and
loop
les
inc
mov
test
or
mov
stos
cmp
imul
xchg
dec
push
lea
call
pop
push
jecxz
ss
mov
daa
mov
mov
push
xchg
nop
ins
in
push
retf
aad
ret
sbb
jmp
ret
repz
add
add
std
mov
sbb
mov
mov
in
adc
outs
cmc
mov
mov
add
inc
jecxz
sub
jno
or
adc
dec
int
pop
mov
mov
jle
cld
pop
in
jle
call
add
cmp
retf
add
add
xor
xor
cmp
ins
sbb
jo
push
pop
loopne
ret
mov
clc
sub
push
cmp
xchg
shl
sbb
fisub
and
push
sub
add
imul
or
push
push
mov
inc
ret
or
cmp
retf
ins
ret
and
std
aas
in
add
aas
cld
xchg
cmp
jne
add
and
ss
test
mov
ret
(bad)
icebp
dec
aam
inc
sub
sbb
xchg
mov
sub
or
push
adc
push
fstp
jmp
cwde
lods
jne
repz
sub
retf
sete
mov
pushf
adc
mov
ss
and
sub
loope
adc
fsubr
lds
outs
ja
jmp
adc
(bad)
js
or
pop
lds
or
das
ins
sbb
mov
ins
mov
jne
inc
add
dec
cwde
push
sbb
or
daa
sahf
add
pop
push
push
push
loopne
or
dec
mov
test
je
mov
push
loope
xchg
adc
jne
add
cli
or
mov
outs
add
pop
and
ret
addr16
mov
or
push
add
scas
call
mov
and
hlt
xor
popa
popa
pushf
inc
cmps
fwait
std
or
addr16
ret
(bad)
sbb
ja
mov
fsub
sub
shr
add
pop
xchg
mov
pop
rol
jmp
xchg
mov
lea
rol
lahf
aas
icebp
arpl
fmul
test
dec
les
xchg
call
(bad)
aaa
push
fisttp
adc
stc
mov
int3
bound
inc
(bad)
jne
jae
sub
shl
mov
adc
cld
mov
or
inc
jno
mov
mov
leave
lods
cmp
out
data16
inc
iret
and
xor
or
das
adc
sbb
pop
dec
cmp
cmp
jg
add
ret
jb
mov
shl
sbb
sub
mov
dec
sub
fild
mov
mov
ret
push
add
dec
in
push
cli
lods
push
loope
xchg
inc
mov
fcmovnu
test
mov
fbld
mul
icebp
mov
sbb
cld
sbb
jl
xchg
push
fdivr
sbb
sub
mov
xchg
adc
sub
pop
add
push
inc
out
imul
add
icebp
add
(bad)
ins
xchg
mov
in
cmp
cmp
or
(bad)
ret
mov
adc
or
add
or
lods
sub
not
adc
cwde
fmul
and
xor
jmp
pop
inc
inc
sbb
adc
fst
loopne
inc
in
cmp
gs
or
out
cmp
div
fs
cld
fidivr
mov
mov
js
inc
adc
or
cmp
xor
clc
mov
mov
cmp
ss
test
jmp
mov
pop
xchg
mov
movs
(bad)
cwde
mov
mov
inc
dec
enter
scas
ficom
and
adc
movs
outs
add
test
inc
sbb
sub
lea
jb
in
test
push
cmp
aaa
jle
or
inc
inc
add
xchg
retf
out
rol
add
adc
dec
sbb
imul
test
call
dec
xor
cmp
jp
popf
test
pop
xchg
je
ficomp
sub
leave
iret
add
retf
dec
mov
sub
and
push
sar
clc
cmp
arpl
js
sbb
and
or
arpl
(bad)
call
(bad)
fdiv
shl
adc
or
inc
call
repz
in
sbb
cmp
inc
mov
pop
push
out
rol
add
frstor
cmp
clc
xlat
inc
and
mov
mov
daa
xor
lock
inc
sbb
rol
push
rcr
push
push
or
xchg
rcr
lock
mov
(bad)
out
cmp
aas
cmp
or
shl
(bad)
icebp
and
mov
add
rcr
loope
fisttp
mov
lea
xor
push
jmp
cmp
jl
mov
and
nop
or
xor
nop
or
push
sbb
test
cmc
dec
adc
dec
mov
test
adc
adc
add
sbb
pminub
and
jle
retf
mov
inc
clc
mov
fs
adc
mov
add
call
jmp
push
push
or
lea
add
mov
enter
je
add
outs
sbb
scas
jno
sti
mov
jmp
js
(bad)
call
inc
or
xchg
in
sub
mov
enter
scas
gs
inc
xchg
add
gs
lea
add
sbb
cmp
pop
sbb
sbb
dec
movs
push
mov
push
pusha
sbb
push
or
or
sbb
movs
adc
push
call
or
in
inc
les
ds
mov
fisttp
adc
cdq
ret
adc
cs
loop
daa
fisub
fldl2t
inc
add
and
pop
inc
shr
sbb
nop
mov
inc
hlt
sbb
fistp
sbb
test
(bad)
(bad)
loopne
mov
enter
xor
sbb
mov
(bad)
or
push
(bad)
cld
icebp
inc
pop
in
jg
leave
sub
cmc
xchg
jecxz
inc
push
mov
jle
sub
push
push
mov
sub
push
push
push
push
cld
or
pop
adc
push
mov
or
out
daa
ficom
loope
je
pmullw
adc
imul
add
inc
enter
sti
adc
dec
lock
mov
mov
mov
cld
dec
clc
mov
adc
mov
je
ret
push
push
in
test
(bad)
or
push
call
fistp
or
aam
mov
pop
or
add
mov
push
in
adc
sub
add
push
das
adc
xor
push
(bad)
pop
das
test
jne
(bad)
data16
inc
adc
jmp
mov
xchg
push
xchg
and
push
cmp
cmp
rol
jmp
and
sbb
add
(bad)
push
add
sbb
sbb
sbb
push
and
lea
sbb
shl
je
pop
lds
loop
inc
aam
and
fild
mov
les
popa
jg
xor
mov
sbb
mov
xchg
or
sbb
mov
sar
stc
fld1
and
push
aaa
mov
rcl
jns
jge
or
pop
pop
pop
mov
nop
pusha
loopne
daa
push
mov
inc
push
xchg
mov
fisubr
pusha
ins
sub
inc
push
fwait
push
shr
push
sahf
push
adc
(bad)
mov
or
dec
ins
sbb
and
jmp
jmp
fsub
jns
inc
fsubr
or
movs
add
(bad)
add
push
and
pop
inc
ret
inc
add
add
or
je
or
shl
cs
and
adc
and
bswap
mov
fadd
inc
jo
mov
jns
es
or
je
and
in
or
mov
ds
add
pop
mov
xor
dec
push
push
cmp
scas
gs
xor
fs
sub
push
nop
or
jge
push
sub
jmp
sbb
pop
push
out
pusha
push
jl
test
jg
jle
inc
icebp
das
or
and
mov
and
pop
lods
xchg
add
add
jmp
and
add
and
fidiv
xchg
push
out
mov
fsub
jne
or
rcl
adc
gs
fisttp
jl
popa
je
aaa
into
or
(bad)
out
or
or
sbb
jmp
mov
dec
inc
add
push
loope
les
adc
je
push
or
adc
adc
jnp
push
jbe
jae
pop
dec
pop
pop
pop
or
xchg
and
mul
cld
cmp
mov
movs
ss
jecxz
xor
mov
push
sub
mov
push
pop
mov
push
dec
adc
push
cmp
jne
add
mov
and
ret
sub
out
xchg
sub
(bad)
cmps
jmp
push
(bad)
jg
aaa
hlt
xchg
(bad)
or
cdq
fcmovne
rcl
mov
ror
test
je
fucom
fbstp
or
sub
push
mov
add
dec
push
(bad)
jmp
push
das
popa
sub
sbb
dec
loopne
pop
sar
(bad)
mov
sub
rol
inc
nop
pop
pop
rol
and
(bad)
icebp
or
aam
bound
mov
pop
test
sbb
cmp
adc
hlt
xor
xsaveopt
cmc
sub
and
xchg
movs
dec
adc
add
js
sub
lahf
jmp
dec
js
add
add
pusha
xor
jl
push
xor
inc
and
dec
les
imul
add
rol
lods
or
lea
or
lds
push
rcr
mov
add
sub
mov
out
(bad)
aaa
mov
xchg
jae
xor
xor
inc
add
xor
adc
ret
or
js
push
or
out
popa
jecxz
add
cld
jo
add
push
add
and
and
vpshaw
sub
cmp
jne
and
cmp
add
push
imul
and
test
ret
mov
xchg
xor
xor
add
or
push
dec
loope
lahf
jb
adc
mov
lock
and
dec
adc
in
add
and
mov
and
push
xchg
sbb
outs
or
add
dec
ins
dec
pop
cbw
push
and
sub
mov
pop
cmps
fucom
mov
and
cli
call
xor
aam
(bad)
push
inc
stos
(bad)
add
add
adc
clc
call
icebp
fwait
xor
or
loope
cmp
movs
dec
(bad)
inc
push
call
cmp
cmp
and
hlt
xchg
pop
aas
inc
fcmovnbe
test
and
jle
lock
lock
ret
push
push
push
or
ret
ss
(bad)
das
rcr
fild
retf
stos
jb
add
setno
ret
fisubr
lock
imul
inc
add
inc
or
jo
jl
test
lods
test
xchg
popf
cmp
hlt
pusha
daa
fdiv
push
mov
hlt
lock
sbb
mov
add
add
sub
jne
rol
mov
dec
adc
fisttp
sbb
mov
dec
ins
cmps
rcl
icebp
mov
cmp
repz
and
mov
pop
push
xchg
mov
sbb
xchg
push
hlt
inc
icebp
adc
clc
mov
dec
clc
je
fidiv
je
push
add
dec
outs
pusha
jnp
push
dec
ffreep
sbb
and
fild
je
sub
rcr
in
sub
imul
ror
jl
in
add
(bad)
inc
data16
test
ja
inc
(bad)
aas
or
adc
mov
shl
aam
sbb
nop
cli
loop
icebp
dec
repnz
xlat
xchg
jo
jnp
adc
ret
inc
adc
add
test
add
pop
pop
pop
xchg
mov
and
push
push
jmp
shl
mov
mov
in
push
add
or
jp
dec
cmp
sahf
push
pmaddwd
add
push
mov
stos
clc
jo
push
pop
sub
test
mov
clc
push
add
lods
ret
push
mov
adc
push
cmp
je
adc
mov
push
and
mov
pop
scas
adc
xchg
sar
ins
xor
cmp
xchg
mov
mov
mov
pop
jmp
in
xchg
sbb
je
idiv
and
popa
sbb
lods
inc
fild
(bad)
mov
adc
or
pop
movs
cmp
jne
mov
rcl
mov
adc
arpl
mov
xor
inc
sbb
ins
ret
data16
adc
mov
icebp
clc
and
cmp
cmp
cmp
daa
sbb
push
rol
sbb
dec
sbb
fdivr
les
fnstcw
das
loop
fdivr
cmp
inc
adc
adc
or
jns
in
pop
clc
cmp
jne
inc
jo
shr
adc
cmp
ss
jo
inc
js
mov
inc
xor
cwde
xor
xor
mov
adc
or
mov
jne
jmp
add
add
test
mov
xchg
fsubr
mov
pop
pusha
out
dec
sbb
or
rcl
(bad)
stos
inc
test
inc
sub
push
cs
div
and
mov
sub
sub
in
dec
std
popw
and
xchg
sbb
shr
push
push
pop
das
inc
mov
xchg
movs
sub
fbld
push
jne
clc
adc
push
fisubr
mov
(bad)
or
push
and
test
xchg
push
cmp
xchg
xchg
mov
and
add
aad
pusha
outs
dec
(bad)
sti
sbb
sub
js
call
xchg
cmp
mov
sti
loopne
xor
sar
inc
shr
add
cmc
subps
or
pop
adc
test
sub
add
adc
inc
push
and
int3
sub
inc
pop
push
mov
nop
mov
mov
in
stos
lds
inc
ret
pop
jmp
ror
sbb
jnp
push
or
and
inc
mov
jae
je
inc
call
mov
and
imul
loopne
movs
fsubr
or
in
jle
or
xor
and
or
or
inc
push
movs
scas
push
inc
mov
addr16
adc
jecxz
xor
or
rcl
enter
movs
and
nop
mov
cmp
mul
and
dec
enter
ror
mov
daa
js
int
sbb
out
cs
jl
mov
jmp
icebp
or
daa
loopne
int3
add
pusha
sbb
sti
jbe
or
stos
cld
test
xchg
sub
pop
(bad)
or
adc
adc
dec
push
adc
and
and
pop
dec
imul
pop
ja
sbb
push
mov
mov
or
scas
inc
fsubr
cmp
(bad)
sub
aas
adc
(bad)
les
mov
cwde
xchg
cmp
ja
xchg
stos
inc
pusha
lods
test
test
push
sbb
sbb
or
lock
or
cmp
sbb
jg
ret
rcl
jne
push
push
neg
mov
jnp
sbb
add
add
and
xchg
loopne
xlat
jnp
or
jp
push
push
mov
rcl
cmp
push
or
cmp
loopne
or
jo
push
push
repnz
adc
shr
pop
cmp
je
dec
mov
add
push
cwde
jae
dec
stos
movs
call
mov
or
mov
and
push
pop
les
and
pop
jb
pop
add
inc
aam
cmp
loope
jae
mov
in
lea
cmp
mov
inc
adc
xor
sbb
mov
jp
mov
sub
or
mov
mov
add
push
and
push
pop
ins
enter
mov
jmp
or
(bad)
jmp
fnsave
and
adc
mov
mov
jnp
fstp
or
dec
retf
pop
test
push
sbb
push
push
ins
or
or
loopne
or
lea
dec
sub
mov
mov
push
and
sub
sbb
fidiv
(bad)
pop
push
lods
lods
cmp
jne
adc
or
or
mov
sbb
cs
lea
pop
pop
aas
push
pushf
xor
(bad)
mov
adc
sub
jle
pusha
in
and
pop
and
dec
cs
popa
or
sub
test
das
jmp
pop
xor
mul
adc
pop
xor
dec
push
jne
in
mov
ss
add
loop
call
add
jecxz
nop
xor
mov
sub
and
adc
and
movs
adc
add
pop
add
shl
(bad)
and
push
mov
mov
das
pusha
ror
js
fbld
fild
or
iret
sbb
sub
hlt
loop
in
add
mov
mov
jae
leave
mov
les
jb
push
movs
test
dec
pop
mov
lds
lods
imul
stos
inc
cld
and
mov
xor
mov
aaa
sbb
jg
rol
daa
test
and
mov
adc
cld
dec
xor
shl
and
jmp
sbb
xchg
or
dec
or
stos
sbb
mov
sub
sub
jmp
pop
mov
push
add
fist
outs
dec
push
sbb
mov
add
shr
test
sbb
aad
sub
shl
dec
inc
dec
or
xor
inc
add
neg
leave
mov
sub
les
jne
fdiv
mov
das
adc
imul
jne
ss
inc
jo
mov
sub
inc
call
movs
xlat
ret
inc
or
inc
adc
cmovp
inc
sbb
inc
push
and
inc
fcomp
inc
ds
inc
pop
inc
cmp
add
test
mov
cs
add
fdivp
lea
ins
outs
xor
rep
and
add
mov
xchg
jl
out
push
aaa
pusha
test
xor
ja
in
mov
inc
or
mov
sub
add
sbb
push
push
test
movs
push
mov
jo
nop
xor
add
pop
call
rol
loope
or
mov
popf
inc
or
xchg
mov
(bad)
sbb
clc
and
push
and
mov
pop
(bad)
sbb
dec
cmp
and
inc
sti
ins
xor
add
inc
scas
add
rcl
(bad)
out
pop
rol
jl
call
push
push
(bad)
xor
lock
sbb
add
mov
arpl
adc
shl
push
mov
push
mov
and
mov
dec
ins
sub
fild
add
add
jo
and
sti
mov
ds
xchg
dec
call
cmp
jne
sub
add
sti
dec
retf
cmp
cmp
cmp
xor
add
mov
adc
add
adc
dec
jno
cmp
je
xchg
add
jne
jne
xchg
inc
jle
add
lods
jo
pop
fistp
test
adc
adc
cmp
lods
xchg
sbb
lock
nop
call
test
pop
je
mov
and
xor
xchg
pushf
add
mul
cmp
xor
loop
push
add
xchg
ds
sbb
cmp
add
xchg
cmp
cmp
jo
or
mov
push
mov
mov
mov
mov
(bad)
hlt
xor
inc
call
xor
out
out
adc
ds
add
addr16
sbb
jge
(bad)
jmp
jmp
jg
lea
push
std
pop
mov
add
iret
movs
or
mov
(bad)
sub
ins
out
and
push
push
jne
jmp
and
inc
ins
addr16
test
mov
dec
pop
or
pop
mov
pop
and
add
out
push
das
cld
mov
js
mov
test
call
xor
sbb
pop
push
adc
cmp
dec
add
dec
push
pushf
push
mov
mov
dec
pop
xbegin
mov
xor
inc
adc
movs
sbb
mov
stos
xor
push
mov
movs
test
repz
jecxz
neg
cmp
mov
dec
call
sub
ficom
das
sub
and
arpl
pop
lock
or
xchg
cld
movs
jbe
jbe
adc
push
fiadd
mov
mov
jb
loop
mov
dec
sub
popf
push
das
arpl
and
inc
test
int3
fwait
or
inc
addr16
mov
data16
pop
jg
mov
fld
or
fprem
lock
test
jmp
aad
and
call
jecxz
lock
cli
pusha
cmp
pop
popa
(bad)
and
sbb
mov
cmp
jl
ins
jne
ins
push
mov
clc
or
xlat
xsha1
cmps
retf
mov
out
push
cmp
cmp
inc
and
or
add
fbld
(bad)
mov
adc
push
pusha
add
sub
inc
xchg
adc
add
xchg
shr
out
lods
xor
fwait
push
adc
mov
and
xchg
jne
jg
add
jns
xchg
mov
cmp
iret
je
cmp
je
(bad)
jle
jnp
je
dec
cmp
pop
and
add
cmp
mov
mov
cmp
sbb
sahf
sbb
cwde
sbb
push
(bad)
das
sub
fimul
inc
xor
add
out
cmp
sub
cwde
jno
or
ss
sbb
push
mov
adc
bnd
cmp
hlt
xchg
pop
mov
ja
pop
add
mov
repnz
add
or
xlat
jl
ins
or
xchg
and
and
adc
ins
xchg
mov
movs
or
ins
mov
mov
sub
sbb
pop
lods
add
cmp
loopne
mov
cwde
jl
mov
ss
div
add
cmp
jle
fimul
or
inc
pop
dec
mov
add
push
inc
daa
fsub
sub
in
or
in
pop
inc
cli
inc
adc
or
cmc
fdiv
inc
les
(bad)
jp
ret
adc
push
lahf
jne
push
xor
or
stc
lds
fcomp
jmp
mov
int3
add
mov
push
add
je
js
inc
or
test
nop
imul
add
add
and
mov
sub
jmp
je
ja
pop
or
arpl
jmp
mov
mov
mov
int3
xchg
leave
cld
or
inc
pop
sbb
xor
shl
sbb
push
mov
jb
add
fstp
push
add
adc
retf
xchg
push
or
rol
cmove
push
cmp
outs
dec
ja
xchg
test
jo
adc
ins
div
adc
mov
mov
jne
gs
bound
mov
in
xor
mov
aas
call
popf
adc
data16
or
mov
shl
inc
jmp
out
jmp
push
inc
popa
shr
lock
adc
(bad)
inc
pop
add
dec
in
add
ret
jns
xchg
or
adc
sub
cmps
push
push
mov
adc
test
adc
es
lds
jo
cmp
push
mov
adc
je
jmp
test
mov
push
daa
sub
xchg
pusha
inc
das
fcmovne
nop
call
mov
fisttp
test
add
push
dec
sbb
xchg
jle
fisttp
push
sbb
dec
pop
sbb
(bad)
or
fwait
jmp
ins
fimul
add
add
push
outs
fdiv
adc
mov
pop
shr
popa
xor
movs
pop
cmp
adc
mov
pop
ja
xchg
push
inc
ret
wbinvd
movs
daa
xchg
ja
add
nop
pop
sub
dec
add
je
xchg
add
pop
sub
popa
push
inc
or
rcl
or
dec
mov
fsubrp
stos
xchg
cmp
add
cmp
mov
fcomp
dec
mov
adc
adc
mov
mov
(bad)
push
(bad)
adc
imul
or
or
jnp
add
add
xor
jbe
jg
mov
mov
jmp
xlat
jno
lea
ins
mov
inc
jle
jmp
pop
mov
jne
dec
cmps
xlat
cmp
jmp
loop
clc
inc
mov
jge
fcomp
inc
lock
dec
pushf
sbb
inc
movs
inc
inc
push
pop
xchg
add
add
enter
shr
(bad)
in
inc
cwde
in
test
adc
je
cmp
sbb
inc
rol
jge
adc
cmp
lock
and
jge
inc
fist
je
ins
mov
xchg
mov
imul
or
cmps
jno
aam
push
pop
or
movs
inc
xor
push
ins
inc
pop
fistp
push
sbb
mov
daa
xor
pop
add
adc
mov
ja
or
jp
(bad)
(bad)
cli
cmp
push
pop
ins
sub
movs
mov
mov
cmp
adc
mov
fst
mov
cmp
jp
inc
test
add
jge
xchg
xchg
sbb
jle
les
rol
popf
aad
jle
or
xlat
ret
pop
pcmpgtd
push
clc
movs
mov
ret
fild
js
lahf
add
push
mov
pusha
mov
mov
lea
add
or
adc
sub
push
push
dec
aas
xchg
and
lods
lar
inc
or
xor
shl
push
or
push
pop
push
in
jno
jmp
mov
sar
outs
mov
sbb
call
int3
pop
xchg
cmps
icebp
inc
inc
stos
ja
pusha
and
jl
sbb
and
or
popa
xchg
data16
sub
push
or
jp
add
add
sub
jne
add
jo
jmp
sub
call
dec
push
jl
xchg
push
xor
mov
mov
or
and
xor
push
adc
adc
loopne
sbb
mov
sbb
ret
call
xor
cmc
mov
add
add
or
xor
mov
sar
jae
inc
or
sbb
sub
inc
and
sbb
add
mov
or
loopne
add
add
mov
fimul
cmp
sbb
push
popf
inc
int
nop
frndint
fs
or
or
adc
pop
je
fist
ret
jl
es
xchg
adc
jo
fcomp
push
outs
or
push
jo
pop
xor
scas
adc
cmps
mov
and
push
gs
(bad)
mov
outs
mov
jne
outs
adc
(bad)
xchg
imul
dec
mov
je
clc
into
push
push
xor
icebp
adc
xchg
pushf
add
xchg
xor
adc
retf
pop
cmp
adc
push
jecxz
shr
mov
jp
jns
dec
repz
mov
push
add
loopne
xchg
inc
dec
mov
jo
hlt
bound
inc
fcom
xchg
push
push
pop
aas
adc
test
rcl
mov
test
inc
dec
inc
xchg
aam
xchg
ror
std
sahf
xchg
imul
and
loop
or
sub
(bad)
enter
sub
or
movlps
jmp
lea
xchg
sub
jmp
(bad)
dec
popf
adc
push
clc
sub
mov
add
jae
push
add
inc
dec
sub
test
fdivr
xor
lea
dec
adc
leave
jbe
adc
jbe
mov
sub
sbb
js
popa
sub
inc
and
sbb
ins
ins
dec
or
xor
ja
ins
std
scas
xchg
add
shr
cdq
xor
xchg
shrd
cmp
dec
adc
xor
jb
js
ja
pop
mov
imul
add
xor
push
in
mov
xor
jns
repz
call
push
push
fdivr
stos
jne
adc
push
push
inc
int3
out
outs
movs
fidivr
push
lea
sbb
int3
pop
sbb
mov
dec
sub
jae
push
inc
push
adc
pusha
and
and
jecxz
fdiv
mov
(bad)
aas
fs
and
jle
xchg
adc
ins
in
addr16
lahf
test
sub
pop
add
mov
xor
jp
push
adc
push
outs
test
and
mov
sbb
test
fnsave
add
sub
in
aas
rol
out
cld
cmp
jg
ins
jle
adc
ret
js
sub
jne
out
scas
and
cmp
add
inc
cmp
inc
push
push
xchg
or
in
sbb
xchg
call
rcr
jae
in
(bad)
jge
fsub
inc
adc
shr
and
popf
lock
mov
rol
xor
sub
pushf
cmp
pop
pop
sbb
rol
pop
pop
jg
jne
push
fisttp
jo
add
xchg
je
xor
mov
push
(bad)
ret
and
jmp
or
ret
add
call
mov
xor
add
or
in
and
imul
xor
addr16
jmp
add
popf
rcl
inc
cmp
inc
lods
fwait
rcl
and
sbb
out
xor
cli
daa
je
or
push
leave
jmp
adc
add
push
cmp
and
call
mov
sbb
test
sub
pop
scas
add
add
(bad)
mov
and
xchg
sbb
jo
test
add
arpl
add
pop
cmp
jnp
addr16
ss
add
shl
pop
stos
test
ret
xor
and
push
int3
hlt
add
mov
jne
pop
inc
cmps
push
mov
pop
push
fmul
loop
sar
pop
rol
aaa
mov
push
jo
sar
jns
adc
jmp
ror
xor
jnp
pop
pop
inc
pop
dec
imul
jnp
jne
jne
add
inc
clc
stos
or
dec
arpl
inc
mov
lock
ficom
inc
dec
mov
inc
stos
sbb
jmp
push
sub
sub
sbb
lock
or
dec
or
jo
inc
pop
jne
mov
repz
add
push
push
and
cmp
pop
test
cli
xor
inc
cmc
fdiv
dec
mov
dec
xor
fndisi(8087
or
add
xor
mov
dec
xchg
cmc
inc
push
or
cmp
inc
mov
popa
pop
xchg
sbb
xchg
or
add
inc
sbb
imul
inc
dec
jo
mov
nop
repz
xchg
sub
test
mov
lock
shr
(bad)
push
fbstp
pop
mov
dec
jmp
test
xor
push
add
push
arpl
ror
xor
imul
mov
push
or
jo
sub
pop
mov
or
das
cmp
(bad)
ins
sbb
ins
dec
mov
sbb
adc
icebp
jae
and
xchg
add
or
mov
push
aaa
adc
mov
jo
cmp
lods
inc
add
and
ror
and
hlt
shl
das
cmp
pcmpeqb
xlat
sbb
xchg
mov
cmp
sbb
sti
push
cmp
or
lods
aad
out
fsub
in
inc
(bad)
mov
out
and
cs
cmp
cmp
inc
loope
add
pop
add
sbb
pop
lods
mov
jo
jmp
mov
jmp
(bad)
and
or
add
outs
fisub
jl
xchg
arpl
add
aaa
add
aas
pop
adc
ja
sar
jbe
arpl
(bad)
add
outs
push
cmp
xchg
jb
pop
ss
adc
fbld
add
add
or
inc
adc
movs
jmp
sbb
adc
and
cmp
xchg
or
jns
jmp
dec
and
iret
(bad)
dec
imul
xchg
sti
adc
enter
hlt
pop
fist
cs
mov
(bad)
sbb
adc
mov
dec
shl
sub
jp
pop
shl
jo
jae
xor
int
pop
push
adc
pop
ret
adc
lea
cmp
fld
push
jg
jo
jle
jmp
nop
sbb
test
mov
or
stos
loope
aaa
mov
loope
in
inc
mov
outs
mov
or
ja
dec
imul
loope
push
(bad)
xor
or
cmp
adc
cmp
cmp
xchg
fs
aam
aam
or
add
in
aaa
and
and
loopne
das
add
mov
inc
mov
fmul
mov
sbb
xchg
dec
push
jns
add
loopne
fsubr
loopne
xor
mov
hlt
push
inc
pop
sbb
inc
xor
mov
inc
push
pavgw
or
xchg
or
sbb
lgs
sbb
add
shr
push
mov
lods
and
or
add
popf
add
setp
cmps
mov
test
push
fstp
mov
or
es
pop
enter
adc
test
popa
jmp
push
cmp
inc
dec
push
jecxz
xor
cld
inc
inc
xchg
pop
and
or
xchg
pop
sbb
rol
add
test
mov
sbb
imul
inc
cmp
mov
push
and
adc
aam
lahf
in
push
dec
cmp
adc
sbb
cdq
and
or
add
cmp
mov
out
xor
or
xchg
das
dec
pop
mov
lds
sahf
jle
rol
sub
mov
jmp
lds
js
pop
jl
pop
push
or
mov
adc
mov
mov
or
jge
lock
inc
push
retf
pusha
stos
fist
in
xchg
lea
add
push
scas
lahf
lock
cmps
clc
cmp
push
xlat
cmp
inc
add
pop
inc
inc
scas
jg
dec
xor
imul
sub
fwait
add
mov
test
pop
nop
jns
mov
xor
mov
shl
retf
xor
pushf
add
adc
mov
jmp
mov
or
inc
stc
add
add
shl
test
aam
fcomp
cmp
shr
xadd
js
mov
stos
add
dec
(bad)
jmp
pop
jmp
add
xchg
popa
js
fisubr
inc
add
vpblendd
nop
scas
or
inc
mov
das
jne
mov
aaa
xor
test
cld
xchg
cmp
add
inc
inc
or
pop
pop
pop
or
add
leave
push
daa
and
clc
add
pop
lods
sub
xchg
or
pop
pop
adc
sahf
xchg
adc
mov
cpuid
stos
xor
xlat
cmp
imul
push
ror
sbb
dec
retf
or
imul
jmp
sub
cmp
je
pusha
adc
mov
adc
xor
in
add
jg
pop
pop
repnz
pop
xor
xor
xor
inc
iret
js
dec
in
pop
mov
test
or
loope
mov
inc
repz
inc
sbb
sbb
sbb
movs
xchg
inc
mov
movs
sbb
jo
xor
adc
ror
sub
or
inc
test
mov
adc
cmp
daa
lods
or
add
pop
push
and
pop
xlat
icebp
nop
pop
jge
and
mov
and
cdq
cld
dec
pop
and
cmp
or
js
popa
sar
mov
or
mov
dec
(bad)
ror
(bad)
push
mov
push
leave
cmp
test
add
dec
imul
lock
dec
pop
sub
sub
xor
loopne
ins
xor
sbb
add
or
imul
rol
sub
cmp
add
das
inc
(bad)
fwait
lahf
pop
call
call
and
fadd
xor
sbb
inc
xchg
fild
add
psubw
es
dec
cmp
jl
nop
je
mov
js
dec
je
mov
fstp
jecxz
mov
jae
or
sbb
(bad)
xchg
inc
je
dec
or
jl
and
sbb
pop
or
add
movs
sub
or
mov
and
push
push
sbb
movs
icebp
add
add
push
sbb
ja
neg
shl
and
xor
jl
loopne
lods
xchg
ja
jnp
fild
aad
mov
adc
push
push
or
sbb
push
mov
std
adc
hlt
xchg
or
pop
or
pop
out
dec
add
pushf
fmul
or
mov
sub
sub
pop
mov
sbb
mov
cdq
test
mov
mov
adc
add
std
or
or
sahf
mov
fisubr
push
pop
pop
aam
stc
push
jnp
add
and
jg
pop
sbb
and
mov
sub
jl
(bad)
inc
arpl
in
mov
sbb
int
add
dec
loopne
fdivrp
retf
(bad)
inc
fisttp
daa
bound
xchg
jge
and
inc
movs
in
aas
lock
or
xor
hlt
mov
mov
sbb
mov
cmp
and
add
mov
cmp
rol
in
inc
hlt
jl
pop
pop
inc
cld
xchg
mov
mov
sub
sahf
jecxz
ss
push
push
mov
je
cmps
aam
clc
dec
or
xor
and
or
lock
cwde
push
aas
jl
pop
pop
test
push
adc
push
cwde
or
jns
adc
test
retf
dec
mov
adc
mov
fiadd
and
mov
add
call
retf
inc
pusha
jno
add
jp
jo
outs
popf
inc
dec
stos
sbb
fnsave
mov
lahf
pusha
or
mov
inc
mov
imul
fnop
mov
fmul
dec
retf
pop
test
rcl
(bad)
lahf
mov
test
call
add
aam
push
jo
hlt
mov
pop
(bad)
push
ja
loopne
add
ror
mov
dec
es
jne
inc
push
outs
cdq
lods
push
idiv
clc
sbb
pushf
mov
fistp
inc
sbb
mov
push
icebp
dec
dec
adc
shl
(bad)
dec
add
fld
jge
xchg
in
(bad)
add
ins
dec
xor
aaa
int3
stos
push
cmp
push
aad
movs
popa
add
int3
ffreep
(bad)
mov
push
xlat
ror
outs
sti
pop
jne
lea
movs
movs
stos
jmp
dec
xchg
add
mov
adc
adc
retf
inc
inc
sub
dec
add
or
jae
ins
imul
push
fwait
pop
xlat
jle
or
pop
imul
inc
rol
mov
push
xor
push
adc
pop
sbb
add
pop
cmp
enter
fcomp
mov
mov
(bad)
push
pusha
mov
or
aam
push
test
mov
(bad)
adc
jg
push
adc
adc
add
lock
adc
cmp
lods
or
sub
add
xchg
test
icebp
inc
fsub
(bad)
jl
aas
test
test
sar
ins
jmp
sbb
shl
gs
mov
and
fist
sbb
loopne
add
and
xchg
pop
push
xchg
inc
sbb
add
loopne
inc
and
pop
pop
call
cld
sub
int3
cli
fstp
ins
test
and
xor
test
pop
ret
xor
and
ret
es
mov
add
das
sar
push
or
lahf
outs
fimul
test
clc
ror
rol
scas
scas
sti
push
inc
add
inc
aad
sub
push
adc
mov
dec
and
rcr
sub
(bad)
or
pop
(bad)
mov
pop
adc
inc
pop
loope
js
mov
cmp
inc
adc
push
mov
clc
cmc
or
xchg
hlt
adc
shl
mov
pop
and
xchg
add
push
push
ror
inc
mov
ror
sahf
std
jo
mov
pop
mov
mov
push
dec
imul
pop
jecxz
mov
rcr
adc
mov
push
jl
mov
push
mov
mov
inc
cmps
mov
aad
jp
xchg
stc
loop
es
mov
and
or
adc
test
out
pop
test
in
mov
mov
call
xor
lea
push
int3
adc
test
leave
mov
inc
pop
pop
pop
push
test
cmp
mov
sar
mov
in
das
push
fimul
adc
hlt
cwde
fdivr
pusha
imul
inc
jge
hlt
aaa
test
inc
mov
pop
or
lds
ror
popa
fmul
loopne
test
push
cmovge
in
dec
dec
dec
xchg
add
ud0
and
fwait
int3
or
dec
mov
aaa
test
test
out
dec
mov
xlat
inc
(bad)
aaa
pop
or
push
pop
adc
rcr
and
jp
push
stos
add
test
test
xor
leave
push
imul
add
iret
push
and
adc
xchg
jg
loopne
sbb
add
pop
popa
in
inc
push
add
jne
loop
push
push
dec
mov
adc
sbb
sbb
fs
test
movs
neg
add
add
call
fist
xor
mov
xchg
mov
out
jl
or
test
hlt
jg
cmp
xchg
cs
push
push
pop
mov
mov
add
add
jne
sub
fcomp
les
(bad)
mov
add
jmp
std
test
rcr
push
mov
mov
push
mov
mov
movs
sbb
cmp
sub
test
push
push
pop
(bad)
adc
inc
out
clc
mov
test
pop
sbb
push
add
repz
mov
mov
adc
dec
adc
fcmovne
push
mov
ins
xor
outs
pop
mov
div
mov
addr16
jne
das
xchg
jne
imul
ror
loopne
pop
push
inc
ins
pushf
push
sbb
add
and
rcr
mov
sbb
xchg
pop
mov
mov
cmp
push
add
and
adc
adc
adc
or
(bad)
pop
dec
sub
jg
jbe
test
add
xor
cmp
shl
and
add
add
in
and
xchg
div
outs
fild
pop
add
and
pop
(bad)
jmp
hlt
push
push
or
adc
test
mov
imul
fcomp
mov
dec
push
ret
jmp
shl
xor
ds
ror
cmp
aas
imul
or
push
sar
es
cmp
xchg
inc
jmp
sub
mov
add
bound
sub
cmp
add
jne
out
jno
imul
das
js
sub
lock
idiv
(bad)
(bad)
mov
mov
sahf
cdq
mov
arpl
adc
jecxz
pop
call
ret
add
add
jb
add
inc
or
pusha
and
or
outs
sbb
xchg
xor
les
dec
push
ffree
outs
sub
mov
pop
fild
mov
cmp
sahf
aad
pop
mov
test
sub
rcl
(bad)
outs
retf
loopne
out
into
cmp
sbb
aas
add
xor
mov
adc
(bad)
add
dec
fcom
xor
jae
imul
jge
mov
enterw
js
or
inc
outs
and
pop
mov
add
add
enter
pop
enter
scas
inc
xor
mov
or
xchg
cmp
add
ret
jae
jo
or
sub
push
and
adc
ror
fldenv
stos
(bad)
gs
lahf
sub
push
push
adc
push
adc
sub
fisttp
movs
and
or
std
int
sbb
pop
je
mov
sbb
mov
nop
or
mov
and
std
mov
lods
sub
test
movlps
push
(bad)
xor
mov
inc
dec
or
mov
or
scas
add
dec
test
adc
xlat
clc
mov
sub
call
call
sub
jecxz
pusha
mov
add
mov
addr16
nop
pop
inc
test
data16
int3
mov
sahf
xor
nop
xchg
sbb
inc
dec
std
nop
cmp
or
ins
ins
add
daa
fadd
push
jb
fwait
xchg
pop
test
add
test
jo
mov
push
and
pop
or
imul
xor
sti
add
adc
adc
or
jo
adc
dec
dec
ret
jge
test
out
push
(bad)
dec
mov
jns
mov
and
dec
jmp
jo
xor
and
es
pushf
shr
sbb
pop
push
inc
lea
push
cmp
mov
dec
js
sbb
addr16
inc
pushaw
mov
pop
push
cmp
outs
paddb
jbe
mov
lods
lock
inc
dec
hlt
jae
add
xor
or
sub
mov
mov
push
test
jno
dec
sub
jne
pop
mov
jns
lods
inc
inc
icebp
js
push
mov
rcl
scas
add
pop
jns
popa
ja
cmps
dec
inc
push
sbb
add
pop
clc
xor
inc
sti
add
mov
cmp
sub
cmp
call
mov
sub
(bad)
push
(bad)
mov
or
add
sub
sub
pusha
lock
or
(bad)
push
fadd
je
jae
cmp
ja
jmp
push
cmp
lods
mov
pop
push
aas
mov
or
sub
inc
and
inc
or
xor
lods
pusha
shr
sub
add
pop
pop
inc
jmp
sbb
ds
ins
pop
mov
clc
cmp
mov
adc
call
adc
cmp
fs
or
pop
mov
fwait
add
cmp
fdivr
adc
add
sbb
loop
(bad)
ins
pop
xchg
dec
outs
add
popa
stos
sbb
inc
pop
xor
arpl
or
std
test
pop
dec
pop
mov
loop
je
cmp
je
push
inc
je
sbb
in
push
mov
adc
add
(bad)
cmp
add
dec
jne
sub
sub
push
xor
pop
movs
mov
pop
outs
add
data16
btr
mov
loope
rcl
mov
ds
mov
setne
imul
jne
imul
jno
xor
sub
jl
aas
(bad)
push
in
sbb
or
jle
mov
push
xchg
pop
adc
add
add
pop
shl
mov
cs
add
mov
mov
(bad)
adc
xchg
cld
or
mov
dec
jnp
arpl
and
mov
mov
pusha
lea
(bad)
fnsave
inc
mov
inc
pop
xchg
mov
out
xchg
sub
mov
pushf
addr16
test
xor
sub
sti
add
mov
add
test
push
add
sub
inc
jmp
push
dec
push
push
jb
sbb
add
pop
or
push
adc
inc
add
cmp
dec
aam
pop
push
ficom
push
loop
xchg
jne
ins
jg
shr
push
mov
not
pop
jne
pop
mov
jns
mov
fidivr
push
add
ins
pop
hlt
fwait
xchg
cmp
and
aaa
enter
and
cmp
and
ret
xchg
adc
and
pop
(bad)
mov
adc
and
movs
lods
sub
popa
das
add
add
ins
pushf
xchg
js
aaa
mov
pushf
(bad)
and
mov
mov
out
mov
cmp
add
add
sub
movzx
(bad)
add
mov
push
inc
and
loope
xchg
jae
pop
xor
cmp
ja
mov
(bad)
aam
sti
(bad)
arpl
jne
leave
jo
xor
sahf
in
push
xor
push
cmp
mov
mov
xor
pop
sbb
das
mov
add
dec
mov
cmp
or
loopne
xor
mov
xchg
and
add
arpl
mov
or
cmp
mov
xchg
je
jmp
les
adc
push
mov
rcl
fidiv
xchg
fld
fld
mov
clc
mov
push
adc
xor
push
inc
add
cdq
mov
or
ror
add
cmps
pop
xchg
popa
cmp
ins
ja
sahf
mov
mov
sub
dec
push
sbb
jo
inc
adc
sbb
sti
sbb
mul
pop
mov
push
adc
imul
int3
sti
inc
lock
js
push
pop
jno
daa
push
xchg
push
pusha
inc
pusha
addr16
push
xchg
pusha
pop
mov
or
mov
jg
pop
pop
push
jg
call
mov
jbe
push
fcomp
adc
mov
dec
test
rol
(bad)
push
dec
in
jnp
cwde
sub
push
and
or
ja
add
add
jmp
sub
cs
and
push
fbld
(bad)
arpl
push
arpl
imul
dec
mov
cmp
popa
mov
add
fcom
jne
xchg
add
add
add
and
adc
add
cmp
push
pop
mov
sbb
adc
and
push
loopne
outs
mov
sbb
push
inc
cld
nop
push
add
add
and
pusha
sub
and
fmul
and
adc
inc
pusha
cs
hlt
or
(bad)
cmp
(bad)
fwait
add
ror
sub
or
adc
(bad)
jge
or
in
rcl
jbe
push
or
js
lods
xor
mov
sbb
mov
push
pushf
jns
sbb
adc
fisubr
aam
daa
data16
dec
pop
(bad)
ret
push
lea
sub
xchg
popa
pop
and
adc
cs
enter
mov
jp
std
push
and
or
lea
xchg
(bad)
std
xchg
js
aaa
push
push
adc
push
or
jne
inc
cmp
ins
ret
pop
aam
pop
add
pop
pop
or
popf
loope
xor
aad
loopne
mov
fcomp
or
sbb
and
add
or
lods
aas
sub
dec
add
dec
xchg
mov
push
lds
in
xor
add
add
arpl
rcr
pop
sbb
pop
aaa
in
js
mov
mov
inc
sbb
or
dec
mov
mov
xchg
mov
mov
es
inc
loopne
mov
dec
push
ins
xor
into
jle
push
push
jbe
ss
push
cli
adc
test
adc
in
jmp
mov
jg
(bad)
push
add
xchg
cmp
fisttp
inc
loopne
test
push
push
push
add
shl
mov
ret
dec
mov
mov
les
adc
xchg
adc
movs
test
push
cmps
sub
test
add
push
out
jae
and
les
aam
popa
enter
inc
xlat
outs
push
jnp
sub
test
sbb
clc
push
cmps
sbb
mov
jg
cmp
mov
add
out
mov
nop
jne
sbb
hlt
ds
jle
or
hlt
aam
mov
or
pop
sub
cmc
pushf
retf
mov
push
popf
movs
inc
bound
adc
ret
inc
enter
mov
pop
mov
pop
add
mov
lds
mov
adc
movs
adc
push
add
mov
imul
xchg
inc
add
xor
imul
xor
or
mov
mov
inc
lods
fstp
loop
push
mov
(bad)
cs
inc
add
ror
sub
rcr
dec
test
mov
ret
lahf
mov
lea
jmp
cmp
pop
adc
outs
pop
sub
(bad)
jne
push
inc
add
cmp
je
pop
dec
in
es
xchg
inc
je
pop
out
pop
add
jecxz
sbb
inc
ins
cmp
dec
lock
push
les
loopne
inc
lock
ror
mov
and
jne
inc
add
inc
imul
movs
or
fdiv
add
or
xchg
ret
or
push
test
dec
sti
jmp
xchg
lds
add
cmc
sub
or
test
and
(bad)
mov
xchg
jb
push
mov
cmc
mov
adc
dec
je
and
and
xor
sub
inc
lock
mov
mov
pop
(bad)
xchg
faddp
repz
adc
pop
imul
inc
jno
out
mov
inc
push
sbb
or
mov
xor
inc
or
add
add
inc
pushf
or
dec
or
and
mov
pusha
or
mov
sysexit
mov
rcr
push
rol
sar
mov
sub
loopne
mov
pusha
dec
mov
mov
mov
pop
in
inc
mov
inc
dec
jne
(bad)
mov
lock
pop
(bad)
jle
sub
in
enter
inc
dec
sub
xchg
fadd
mov
sub
cmps
pop
or
push
cmp
test
(bad)
or
arpl
ret
pop
ror
fmul
sub
inc
push
sub
cmps
js
imul
pop
cmp
or
pop
jmp
sbb
fsub
add
ret
or
out
adc
xchg
and
xor
dec
(bad)
dec
(bad)
aam
mov
push
push
mov
in
test
push
leave
mov
jl
hlt
mov
cmp
xor
mov
push
out
mov
cmp
pop
push
daa
or
add
adc
cmp
sbb
mov
push
mov
dec
and
mov
push
cmp
inc
or
fs
sub
ror
mov
adc
sub
mov
test
xchg
in
add
(bad)
es
ss
arpl
add
nop
add
cmp
adc
outs
dec
mov
pusha
cmp
ins
fidivr
loope
loop
dec
sbb
pop
add
popa
outs
xor
dec
pop
addr16
daa
fmul
mov
mov
fisttp
lods
(bad)
mov
scas
clc
jbe
add
inc
sub
das
xor
data16
cmps
mov
sar
sar
jmp
adc
pop
movs
lods
pop
ja
outs
jne
(bad)
jmp
test
sbb
xor
lock
mov
push
das
popa
xor
push
fisub
push
pop
mov
adc
(bad)
push
sahf
mov
aaa
and
jo
rcl
mov
pop
mov
and
pop
stos
or
xor
add
call
add
ret
push
adc
mov
arpl
fimul
cmp
loope
(bad)
stos
xor
clc
adc
lods
inc
cld
movs
adc
adc
xchg
push
iret
stos
pop
in
mov
test
sbb
mov
int3
setnp
dec
jns
dec
arpl
out
idiv
xor
pop
jp
scas
sbb
(bad)
hlt
out
call
pop
mov
add
pop
or
aaa
inc
and
sbb
add
(bad)
ss
jg
and
cmp
clc
int3
and
sbb
and
call
stos
sub
push
mov
and
add
test
add
stc
mov
dec
pop
add
sbb
test
pop
add
inc
or
add
imul
sub
aam
cmovge
int3
dec
mov
outs
shr
pop
sub
mul
pop
xor
aam
addr16
dec
sbb
arpl
adc
scas
fmul
popa
cmp
dec
jne
or
movs
and
pushf
mov
push
add
or
stc
or
ror
daa
pop
mov
mov
bound
ins
pop
sub
add
dec
fmul
or
sbb
test
inc
dec
ret
cmp
xor
jne
adc
popa
js
inc
scas
and
repnz
mov
addr16
or
ins
imul
cmp
hlt
test
ins
mov
or
mov
pop
dec
or
xchg
adc
pop
aad
add
add
add
(bad)
and
jne
or
adc
xor
mov
mov
push
adc
mov
scas
add
sbb
push
dec
dec
add
mov
les
or
sub
shl
sbb
addr16
jnp
dec
inc
out
jge
mov
push
and
add
rdpmc
in
inc
and
jae
mov
add
jg
mov
cmp
aaa
mov
pop
and
add
lahf
retf
sub
imul
adc
sub
adc
mov
mov
cmp
or
adc
xchg
jp
dec
sub
xor
sbb
je
ins
ss
inc
gs
aaa
jp
in
adc
sbb
psubusw
shl
push
mov
fsubr
push
sub
call
cmp
mov
mov
lock
xchg
lahf
add
add
ins
loopne
add
shl
cmp
test
push
lods
(bad)
and
mov
scas
push
pop
dec
sub
push
mov
mov
mov
mov
jo
jmp
mov
add
les
sbb
std
jne
aas
mov
mov
or
mov
mov
lock
fcomi
mov
or
or
jmp
gs
inc
or
sub
lea
pop
dec
pop
shl
jmp
gs
mov
mov
mov
or
pop
xor
aaa
dec
inc
mov
int
inc
js
push
xchg
out
or
sub
movs
add
adc
hlt
push
jecxz
ret
push
ja
mov
mov
stc
jp
mov
sbb
mov
inc
cmp
inc
add
sub
inc
fadd
inc
or
mov
iret
cli
inc
outs
mov
add
and
mov
ins
cmp
mov
sbb
inc
dec
movs
inc
jge
ds
push
inc
dec
xchg
sub
js
cmps
rol
loopne
jg
jp
sub
fild
adc
push
test
mov
push
or
(bad)
push
or
sbb
fdivr
rol
icebp
xchg
mov
pop
ror
shr
push
sub
jmp
lds
nop
or
sbb
test
sbb
and
xchg
scas
rcl
adc
mul
rdpmc
shl
adc
xor
retf
cwde
fwait
sti
fs
or
mov
pop
xor
gs
pop
add
sbb
adc
fcmovu
cmc
sbb
or
sub
(bad)
and
test
xor
push
sub
arpl
aas
inc
rol
loopne
dec
adc
or
dec
push
push
sub
aam
mov
push
mov
xor
or
mov
(bad)
nop
jmp
sbb
mov
test
out
push
cmp
je
mov
or
lods
push
test
daa
add
lods
inc
and
rcr
inc
mov
mov
or
les
std
dec
stc
cmp
mov
retf
xlat
sbb
adc
imul
sub
outs
test
add
cdq
and
or
xor
pop
sub
xlat
add
arpl
in
mov
test
sub
fs
in
mov
pop
jae
mov
cmp
mov
mov
mov
push
cli
xchg
imul
add
jno
imul
fwait
and
cmp
mov
pop
addr16
cdq
fistp
pop
out
mov
jb
adc
lock
xor
pusha
call
mov
mov
sbb
test
clc
daa
in
mov
jmp
push
icebp
cmp
add
pushf
pushf
inc
or
jnp
jmp
fld
add
push
pop
add
call
sahf
or
pop
cmp
or
fild
or
sbb
gs
retf
xchg
nop
loop
adc
mov
mov
pop
cmc
add
ror
dec
add
lods
call
test
loopne
adc
push
push
and
mov
jne
adc
cs
(bad)
cmp
mov
xlat
push
lahf
adc
adc
push
(bad)
and
inc
call
jnp
inc
cmp
sti
jne
sub
lea
ret
pop
test
add
sar
add
lea
mov
lods
adc
ins
dec
mov
mov
sbb
inc
imul
sbb
js
sbb
push
(bad)
(bad)
sub
cwde
add
jmp
xor
pop
inc
inc
enter
xchg
inc
or
pusha
int3
and
aas
push
jno
xor
push
or
daa
add
call
(bad)
adc
add
add
add
xor
fsubr
xchg
movs
mov
loope
push
pop
dec
mov
push
dec
adc
xchg
adc
cli
dec
push
pop
sbb
mul
jns
mov
or
daa
in
sbb
cmp
mov
shl
adc
push
or
add
test
ret
pushf
add
xlat
pop
fstp
and
aas
jne
xor
sbb
ret
add
cmp
mov
pop
sbb
cmovo
jge
cmp
dec
(bad)
mov
add
and
sahf
adc
sub
add
pop
add
cmp
inc
fwait
cmp
fistp
cmp
fsubr
sbb
and
jo
mov
sbb
adc
xchg
pop
inc
ins
sub
dec
clc
cmp
icebp
or
inc
ret
or
inc
sbb
jno
std
add
push
mov
call
es
xor
pop
push
adc
jecxz
loope
mov
jmp
les
test
sub
test
call
push
dec
ret
imul
pop
shld
pop
dec
movs
jo
call
or
xchg
sub
or
mov
lods
std
jns
adc
outs
pop
pushf
shr
lods
xchg
and
or
mov
and
cmps
mov
or
(bad)
push
add
push
jecxz
adc
in
mov
jg
mov
rcr
daa
mov
(bad)
xchg
add
pusha
add
xchg
mov
xor
adc
(bad)
jmp
jne
add
sbb
movs
inc
cld
push
pop
mov
jmp
pop
pop
icebp
(bad)
es
cmp
jo
in
outs
jne
test
sbb
gs
adc
(bad)
push
bound
add
push
mov
mov
ret
inc
jmp
and
push
fmul
test
psrad
push
fadd
lock
xchg
mov
outs
(bad)
push
sub
mov
add
mov
add
xor
and
outs
cld
push
adc
gs
sbb
pop
fs
fdivr
lock
mov
jb
push
mov
mov
and
dec
pusha
aaa
cs
stos
mov
xchg
mov
jne
push
cli
and
adc
xchg
clc
mov
or
sbb
pop
nop
lahf
xor
add
(bad)
test
add
out
add
repz
jl
lock
adc
(bad)
push
pop
sbb
add
mov
push
xor
push
add
daa
fsubr
cmp
je
mov
add
daa
mov
add
sahf
sub
mov
xchg
movs
mov
dec
jl
push
and
shr
ja
mov
push
push
mov
xchg
aam
push
out
loopne
movs
dec
dec
cmp
in
inc
inc
and
les
adc
adc
dec
ins
cmps
ror
push
push
sub
add
pop
inc
jno
and
lods
and
and
scas
lock
sub
mov
daa
das
sub
xchg
fs
xor
arpl
pop
in
lods
lods
or
cmp
lock
je
add
and
and
jne
or
popa
add
xchg
cs
push
scas
pop
or
push
sbb
add
(bad)
mov
pop
(bad)
xor
push
add
out
add
hlt
mov
or
jmp
loop
arpl
aad
jle
cmp
add
pop
js
add
call
sub
mov
adc
xor
xor
scas
cmp
loopne
test
mov
lods
inc
jb
add
pop
dec
out
dec
mov
fdivr
pop
mov
xchg
ret
cmc
loopne
mov
(bad)
push
add
pusha
(bad)
push
inc
sbb
sub
jmp
push
shl
(bad)
xchg
jne
out
int
xchg
xchg
push
lea
test
and
sub
ja
clc
movzx
push
push
add
imul
loopne
mov
inc
pop
adc
nop
adc
and
push
ret
and
dec
push
sbb
je
mov
add
ret
adc
push
sub
xchg
clc
lods
sub
xchg
test
pop
sub
add
jno
add
jae
sbb
outs
clc
ja
dec
push
cmp
(bad)
push
mov
cmp
and
rcl
and
and
xor
sub
mov
push
fst
(bad)
mov
sub
out
push
adc
xchg
(bad)
aad
ret
test
pop
nop
iret
cdq
mov
adc
enter
nop
inc
pop
add
mov
js
cmp
lea
test
in
add
dec
mov
in
ins
mov
pusha
mov
js
mov
or
adc
mov
push
xor
sbb
popf
lock
xchg
xchg
imul
repz
bound
sub
add
push
loopne
mov
sub
(bad)
dec
bound
pop
jg
std
add
clc
mov
les
imul
dec
mov
inc
dec
je
mov
pop
pop
push
mov
xor
(bad)
pop
fst
cmove
imul
xor
inc
and
inc
stc
test
mov
and
adc
daa
sub
adc
sub
adc
inc
dec
pushf
mov
mov
push
xor
out
lock
daa
hlt
icebp
test
sar
or
lahf
into
and
scas
adc
add
add
clts
(bad)
cmps
or
and
or
out
stc
ror
mov
(bad)
outs
sub
mov
test
mov
or
(bad)
mov
mov
movq
sub
ss
inc
add
add
or
bound
or
push
lods
(bad)
and
push
bswap
add
(bad)
xlat
sti
add
adc
or
loop
pop
mov
sub
cmp
mov
push
adc
shl
xor
sbb
sar
outs
pop
sub
jbe
pop
outs
sub
adc
xor
mov
jp
xchg
int3
call
push
rcl
test
jnp
and
inc
push
push
dec
sti
lock
or
xchg
push
in
lock
or
push
mov
inc
ss
xchg
ret
mov
dec
inc
cld
cmp
cmp
inc
or
test
imul
sub
add
xchg
and
(bad)
push
les
mov
push
sub
gs
pop
loopne
mov
pushf
adc
icebp
pop
pop
bswap
jno
js
sub
ss
jb
retf
aaa
sub
mov
and
ret
retf
ss
inc
or
jg
test
pop
jmp
adc
dec
add
or
loop
push
dec
inc
or
or
and
sbb
imul
push
scas
mov
xlat
mov
clc
mov
pop
cmp
cmps
add
or
retf
adc
out
adc
xchg
sub
mul
(bad)
shr
sahf
neg
nop
dec
ret
xcrypt-ctr
cmps
pop
dec
mov
push
sbb
jmp
rcl
xor
aam
sbb
dec
or
call
cmps
cmp
cmp
aaa
mov
outs
nop
fcmovnbe
adc
and
pop
cdq
rol
imul
sub
cld
xchg
fwait
or
jl
add
daa
jle
push
push
inc
pop
lea
cs
dec
and
mov
test
lock
xor
rol
ret
dec
fcom
shr
and
cmp
push
pop
mov
sbb
in
dec
jne
daa
xchg
jmp
fsubr
xchg
add
or
jmp
iret
mov
cmp
push
jg
pusha
fs
cdq
inc
sub
fsub
movs
push
push
add
sub
repnz
adc
inc
pushf
mov
xor
push
rol
fmul
jmp
rsqrtps
clc
aam
test
enter
movs
jns
cmps
sar
outs
mov
cli
mov
pop
repz
mov
mov
aas
fcomp
das
hlt
mov
fisttp
jge
ins
jo
mov
sbb
add
clc
test
mov
ss
lods
rcr
int3
(bad)
mov
mov
cwde
sub
cmp
xor
pop
dec
add
hlt
shl
jmp
xchg
push
imul
add
and
test
sub
sbb
ret
cli
add
pop
imul
hlt
sub
mov
sbb
pop
mov
fwait
inc
mov
sar
ret
dec
add
inc
xchg
fdivr
retf
mov
cmc
shl
imul
daa
pop
aaa
dec
ss
jmp
inc
call
and
push
sbb
push
test
(bad)
mov
push
loopne
add
in
push
enter
dec
jmp
adc
adc
cmp
sub
ret
add
and
js
daa
xchg
adc
pop
mov
and
mov
jno
outs
retf
outs
sbb
mov
call
jno
imul
fisub
or
mov
hlt
daa
or
retf
sub
xor
cmp
sbb
cmp
cmp
xchg
daa
mov
cmp
jge
fld
pop
cmp
adc
clc
xchg
push
add
pop
xor
sub
inc
sub
je
mov
and
ror
pushf
jge
movs
movs
cmp
sbb
jg
lea
retf
sahf
sub
inc
pop
mov
add
mov
sti
popf
cmp
or
pop
mov
hlt
cmps
xchg
add
adc
cs
fstp
mov
fisubr
cli
test
daa
das
(bad)
sbb
xchg
or
stos
add
fmulp
fistp
fsub
lods
popa
ror
push
fs
cdq
outs
mov
lea
and
sub
cwde
jne
lods
ret
ins
movs
or
cmp
sub
(bad)
or
das
cs
popf
mov
cmp
lahf
je
imul
fsub
hlt
add
mov
lods
mov
sar
mov
stos
loope
mov
test
lea
jmp
in
test
sub
test
pop
adc
cmp
push
js
and
movs
fldcw
xchg
push
mov
or
adc
mov
inc
push
add
movs
mov
ins
sahf
xor
adc
push
or
push
add
ja
adc
dec
or
pushf
jecxz
add
add
add
rol
pop
repz
mov
xor
test
and
add
icebp
test
les
ror
and
pop
shr
jg
out
hlt
mov
add
sub
cwde
pxor
ret
cmps
aam
pop
adc
ficom
adc
fadd
or
sbb
xor
popa
rcr
sub
pop
or
lea
in
push
int3
in
inc
call
shl
xchg
jmp
dec
push
lock
inc
and
and
shl
retf
xor
xlat
adc
aad
mov
add
out
jmp
mov
sbb
ins
mov
test
xor
dec
push
or
(bad)
xchg
and
loopne
add
sub
les
mov
or
sub
(bad)
cdq
pop
jl
rcl
nop
iret
(bad)
(bad)
loopne
add
or
mov
pop
mov
test
mov
mov
mov
sbb
pop
dec
js
lahf
cmp
or
push
mov
pop
or
push
sub
loopne
addr16
mov
xor
xor
ret
fbstp
mov
sub
je
adc
pop
add
jb
mov
push
jo
into
sbb
add
sub
or
mov
mov
mov
jg
setae
call
ret
daa
xchg
or
or
cdq
or
adc
add
imul
sbb
pop
mov
dec
(bad)
(bad)
imul
sub
cmp
je
test
inc
or
jnp
rol
ficomp
jne
mov
(bad)
ins
loop
push
and
add
xchg
icebp
mov
ret
jnp
add
js
scas
sbb
mov
jmp
push
lods
call
xchg
dec
repnz
pop
or
enter
mov
ret
and
push
sub
and
std
mov
jne
adc
xor
mov
inc
add
mov
test
inc
cmp
pop
push
out
and
add
test
and
and
fisub
mov
mov
jmp
jle
arpl
out
dec
mov
or
cmp
mov
inc
push
mov
dec
ret
cmp
loopne
out
and
pop
mov
cmp
loope
add
ins
lods
xchg
ror
les
(bad)
adc
mov
nop
pop
cmp
pop
jo
(bad)
or
jne
and
inc
lock
test
cld
mov
mov
loope
jmp
dec
shl
dec
pop
mov
test
adc
movs
sbb
addr16
and
cmp
jo
ins
xchg
inc
pop
push
lds
popa
mov
sub
dec
das
clc
or
mov
mov
cmp
xchg
fs
add
mov
push
stc
mov
pop
sub
push
xchg
stc
sub
push
int3
dec
jae
clc
mov
jg
mov
and
scas
sub
sbb
add
(bad)
mov
sub
in
or
leave
clc
dec
movs
adc
mov
mov
sbb
ja
adc
or
or
xor
popa
add
sub
push
dec
pop
or
push
adc
add
pushf
or
sbb
jg
sub
and
or
lea
sub
scas
push
jne
enter
and
add
or
inc
rol
push
mov
push
jae
sub
inc
and
lock
and
cmc
adc
push
inc
mov
(bad)
je
pop
and
add
sub
cmp
sbb
jnp
mov
jne
or
inc
adc
adc
clc
fld
xor
add
or
outs
xchg
cmp
je
int3
ins
adc
clc
lahf
push
sub
sbb
or
inc
adc
test
inc
ret
or
out
dec
push
and
xor
test
jmp
cmp
je
mov
inc
jne
mov
jmp
and
sbb
out
xor
adc
and
sbb
fcomp
adc
sbb
ret
dec
add
mov
sub
imul
stos
mov
cmp
mov
mov
test
loopne
cmps
or
or
test
dec
fnsave
push
cmp
fidivr
xor
inc
ins
add
pusha
in
cmp
(bad)
cmc
test
ins
clc
sub
mov
add
and
mov
add
mov
cmps
pop
xor
add
sti
or
mov
mov
cmps
cwde
mov
sbb
or
imul
das
pop
test
mov
dec
mov
push
frstor
xlat
mov
push
jle
inc
je
lea
mov
cmp
scas
movs
cli
dec
lods
sbb
xchg
outs
je
mov
lock
rcr
imul
inc
sub
pop
xchg
test
test
add
cmc
xchg
sbb
dec
mov
jl
test
sub
mov
jecxz
mov
or
test
inc
or
dec
add
add
push
add
(bad)
fwait
mov
push
hlt
and
pusha
or
aaa
nop
mov
sahf
cmp
sub
adc
dec
lea
cdq
push
mov
jnp
and
add
inc
into
les
popa
aas
sub
xor
sub
loope
inc
push
mov
pushf
int3
sub
cmp
into
and
sub
or
push
xchg
jnp
xchg
add
in
xchg
push
mov
ins
mov
je
add
dec
popa
shr
inc
test
retf
pop
adc
dec
and
dec
mov
cmp
jmp
mov
inc
add
in
add
xor
inc
or
inc
xchg
inc
adc
outs
aaa
xor
sub
movs
fimul
add
sub
dec
add
dec
inc
push
int
outs
pop
pop
add
xor
and
and
xor
je
dec
test
mov
dec
jmp
push
and
dec
push
fs
test
and
daa
fdiv
repz
xor
das
adc
enter
sub
or
enter
pop
inc
jb
and
jne
nop
ins
push
pusha
pop
int3
dec
sbb
dec
sbb
xor
mov
fldcw
add
jne
gs
push
xor
xor
test
inc
inc
fcom
sub
aas
ror
xlat
cmp
sub
push
mov
mov
and
sti
mov
call
addr16
ret
mov
mov
mov
push
jmp
jo
jg
sbb
imul
lock
jmp
out
sbb
les
inc
or
adc
les
adc
popa
je
je
push
call
ret
aas
dec
(bad)
(bad)
aad
push
push
mov
popf
lds
addr16
test
(bad)
and
jno
sub
sub
mov
hlt
xchg
mov
sub
and
sub
pop
lahf
push
and
adc
test
pop
jmp
iret
mov
cmp
clc
add
push
add
push
out
loopne
cld
push
lea
icebp
inc
shr
inc
mov
add
sbb
test
test
mov
cmp
fist
ins
rcr
outs
or
shl
mov
cmp
adc
add
jo
fcom
push
push
call
add
pop
pop
fisubr
sbb
or
inc
and
shl
jecxz
add
push
jmp
pop
sub
mov
mov
add
push
call
out
sbb
pop
and
movs
rcr
lods
cmps
in
xchg
inc
inc
cmp
dec
pushw
movs
test
mov
dec
push
cmp
and
dec
jmp
ja
fist
fild
add
ror
fisttp
add
iret
xor
add
push
adc
adc
popf
and
xor
jp
cmc
push
sub
test
inc
cmp
push
dec
add
sub
test
mov
push
test
in
repnz
mov
mov
mov
add
push
in
loopne
adc
(bad)
adc
xchg
or
test
inc
enter
and
aad
nop
and
inc
dec
xchg
xchg
xchg
fild
adc
xchg
and
cmp
dec
xchg
shl
ret
jbe
ds
leave
jle
push
sbb
adc
sti
test
mov
movs
clc
cmp
fcmovnb
pop
aad
sti
pop
movs
dec
mul
sub
add
add
pop
pusha
lods
xor
mov
das
inc
aam
push
ins
add
js
inc
stos
push
add
adc
aaa
or
inc
or
sbb
xchg
addr16
push
jecxz
es
jle
js
xor
pop
adc
sub
inc
cmps
push
sar
test
jne
test
mov
dec
inc
adc
mov
ret
not
jbe
jecxz
and
sub
add
mov
adc
xchg
fcom
adc
inc
cmp
inc
jns
mov
cli
adc
dec
pop
ss
sti
inc
(bad)
icebp
mov
add
xchg
or
in
adc
push
out
add
adc
scas
mov
or
ja
mov
pop
pcmpeqw
add
mov
leave
je
and
mov
ss
dec
push
push
arpl
lods
iret
cmp
mov
sahf
bnd
adc
push
mov
outs
sbb
pop
aas
push
xchg
or
sub
in
adc
pop
das
shl
shl
aas
dec
add
or
sub
or
or
adc
mov
cld
and
ins
shl
call
inc
or
stos
or
or
in
mov
sbb
sbb
sub
fs
sbb
fs
add
add
scas
sbb
adc
inc
adc
(bad)
jge
fidivr
inc
xor
and
push
inc
jmp
clc
pop
pop
add
push
fisttp
addr16
fstp
fwait
(bad)
fwait
mov
mov
jmp
out
cmp
or
nop
ror
lods
fistp
push
enter
and
add
and
jl
xor
outs
inc
dec
and
inc
xor
popa
sub
sub
loope
aam
cmps
fadd
cmp
add
cmps
imul
adc
rcl
imul
pop
pop
inc
test
imul
mov
(bad)
dec
mov
inc
cmp
in
add
mov
jne
sahf
xor
cmc
popa
dec
dec
hlt
jno
scas
mov
adc
cmp
push
xlat
popa
jb
(bad)
cmps
lods
jno
cs
fbld
jo
push
xchg
cli
fiadd
jmp
aaa
cmps
lods
(bad)
in
and
fmul
in
les
add
and
test
test
rcr
xchg
inc
inc
ja
retf
and
ficomp
aad
or
pop
push
mov
cdq
xor
sbb
pusha
test
lds
jno
add
js
pusha
adc
and
test
inc
rcl
mov
lds
fisttp
dec
in
clc
or
das
in
cmp
fsubr
mov
jmp
dec
pop
aas
aas
xchg
sbb
sbb
jo
mov
mov
test
and
retf
xor
cdq
repnz
push
test
dec
add
pop
xor
mov
retf
fmul
lock
dec
jns
shld
dec
es
retf
inc
inc
cmps
fcomp
retf
inc
retf
xor
xchg
cmp
fmul
pop
retf
repnz
call
mov
test
cwde
enter
retf
cwde
retf
xor
xchg
cmp
adc
cvtps2pd
leave
sub
push
pusha
and
sbb
retf
in
retf
rcl
pop
lea
popf
sub
jg
cmp
push
ret
out
inc
out
loopne
xor
or
mov
adc
push
or
aad
jmp
adc
rcr
or
cmp
or
and
add
fdiv
adc
push
test
mov
inc
and
outs
mov
mov
daa
ds
push
push
leave
push
fld
xor
lods
push
fidiv
dec
cdq
push
ja
call
pop
je
je
push
outs
ret
and
fstp
sub
cmp
push
inc
and
sbb
cmp
rcl
pop
push
ins
inc
fdivp
xchg
mov
(bad)
mov
fmulp
fdivr
mov
leave
in
dec
loopne
jbe
push
and
or
sub
shl
mov
gs
mov
jae
jmp
or
iret
adc
inc
adc
push
push
ficomp
cmp
call
jnp
out
dec
add
mov
mov
inc
push
mov
jecxz
xor
add
add
xor
lea
push
xor
add
or
and
inc
movs
xor
je
cmp
jne
icebp
sub
xchg
xchg
out
cmp
sbb
xor
iret
das
xor
or
sub
cmp
vmread
sbb
sub
cmp
add
or
jnp
adc
sub
xchg
adc
or
add
push
mov
ret
scas
pop
fmul
or
inc
sbb
sub
adc
in
sub
push
pop
pushf
shl
adc
inc
fisub
adc
sub
push
add
fistp
or
mov
pop
pop
das
mov
sbb
popa
addr16
cs
je
not
mov
je
sub
int
pop
add
mov
cmp
int3
xchg
inc
or
int
dec
in
xchg
push
popa
add
add
add
and
outs
xor
push
outs
adc
sub
icebp
dec
dec
add
adc
fimul
ret
xor
arpl
test
popa
loope
ret
dec
push
or
call
(bad)
lock
pop
call
imul
or
ins
xor
and
mov
inc
or
inc
jl
or
cmp
add
and
test
xor
ret
mov
rcl
pushf
mov
xchg
cmps
mov
int
movs
scas
xor
and
nop
dec
(bad)
or
mov
dec
xchg
mov
test
and
pop
adc
mov
adc
cwde
clc
bound
mov
das
push
inc
cmp
jne
js
adc
xchg
dec
adc
push
jmp
and
mov
adc
inc
pop
rcr
aam
and
or
sbb
push
scas
or
and
jg
mov
and
push
push
punpcklwd
pop
ja
leave
mov
js
stos
push
aam
(bad)
cli
lods
jo
xor
cwde
add
sbb
jne
adc
inc
inc
test
lods
sub
sub
sbb
add
mov
div
loopne
push
mov
adc
xor
outs
cmp
mov
add
lahf
mov
add
or
lods
loope
mov
ret
and
fist
cmp
dec
(bad)
fidiv
mov
nop
iret
cmp
mov
aas
mov
mov
test
jo
inc
inc
clc
sub
cmp
nop
cli
pop
adc
cli
out
sub
test
jl
inc
sbb
add
add
fimul
or
push
out
cmp
(bad)
rol
dec
jne
add
test
add
jo
popa
mov
rcr
fcomip
seto
or
cmp
int3
inc
leave
pushf
mov
xchg
pop
fidiv
adc
add
ret
enter
mov
and
sub
xor
int3
out
push
jecxz
stos
inc
sbb
mov
push
aam
mov
adc
mov
mov
pop
sbb
loop
mov
inc
nop
mov
pop
or
push
inc
js
pop
das
movzx
xor
ret
call
adc
ja
jne
mov
pop
ja
or
sub
sub
or
aas
arpl
sub
pop
popf
ins
inc
jns
test
sub
sbb
neg
push
mov
or
inc
sbb
adc
xor
fs
adc
fsubr
mov
mov
mov
cmp
mov
push
movs
pop
xor
dec
popa
and
jmp
or
push
mov
push
cmp
jg
or
jg
test
sub
or
add
cli
scas
pop
add
xchg
xchg
sahf
adc
xor
loope
and
push
in
out
mov
imul
adc
dec
add
adc
add
sti
pop
sub
mov
je
sub
arpl
outs
syscall
(bad)
std
dec
adc
and
scas
jo
loop
sbb
lods
adc
push
out
add
sub
lea
iret
lock
cmp
inc
pop
pop
pop
cmp
mov
aaa
adc
out
cmp
cdq
daa
and
enter
(bad)
out
out
pop
add
cdq
movs
and
add
add
mov
xchg
enter
aas
pop
push
mov
and
fmul
xor
cmps
or
stos
pop
and
sub
dec
je
gs
inc
outs
jp
cwde
dec
fwait
push
lahf
les
sbb
xor
xor
mov
mov
adc
or
je
aaa
xchg
mov
or
ss
(bad)
loope
ret
pop
inc
inc
pop
je
sub
jo
push
jmp
dec
jmp
xchg
cwde
call
rcr
jo
or
ins
inc
jmp
mov
or
dec
mov
lahf
sub
int
sub
inc
loop
push
pop
shr
or
add
sbb
jl
pop
jg
push
sbb
or
add
popf
push
pop
mov
int
lds
mov
pushf
pop
sub
cmp
jl
xchg
or
retf
ret
shr
mov
cmp
cmp
sti
mov
push
push
pop
push
pop
iret
mov
call
pusha
loop
sub
dec
inc
sbb
dec
jl
push
push
dec
ret
daa
push
lock
xor
mov
push
rcr
pop
sub
ds
or
jne
fsub
scas
add
daa
and
call
pop
rcr
mov
inc
jp
dec
sub
push
push
fbstp
(bad)
mov
inc
jp
push
jle
lock
lock
inc
jae
mov
loopne
ror
jne
in
sbb
mov
adc
out
clc
scas
les
(bad)
test
mov
mov
jle
mov
stc
jne
mov
in
or
add
stc
out
(bad)
dec
(bad)
mov
sub
add
push
adc
outs
and
sbb
jns
add
add
jmp
popf
push
xor
xor
lock
arpl
loopne
mov
jmp
or
out
xor
(bad)
or
mov
dec
pop
cs
clc
adc
add
sbb
dec
mov
cmp
xor
xor
mov
js
std
jmp
sub
push
dec
push
retf
pop
addr16
ret
(bad)
sub
adc
or
mov
imul
pop
out
dec
jne
and
add
sub
ds
enter
adc
sbb
ret
pop
jl
dec
inc
(bad)
(bad)
jae
inc
jmp
sbb
add
je
fsub
js
add
mov
jge
lock
and
mov
xor
mov
pop
(bad)
out
lds
jp
push
mov
pop
xchg
and
cli
and
xor
mov
jmp
dec
inc
mov
xor
jbe
pop
mov
xchg
cmp
push
sbb
push
ret
adc
pusha
pop
ret
ret
movs
cmp
pop
fsub
je
cmp
adc
cwde
xor
add
or
jmp
mov
cmp
cmps
add
clc
dec
mov
cmp
xor
inc
sub
test
jle
(bad)
sbb
add
movs
push
je
jmp
call
mov
popf
mov
mov
sbb
loopne
sti
xchg
jmp
retf
add
nop
adc
xor
in
outs
sub
inc
xchg
enter
pop
cli
retf
mov
adc
adc
inc
or
ds
adc
leave
or
ja
icebp
inc
es
mov
test
fadd
scas
ins
dec
call
call
pop
inc
out
ins
arpl
loop
and
xor
aam
pop
out
xor
imul
push
cwde
or
adc
jecxz
imul
inc
lea
rcl
imul
mov
pop
sbb
mov
adc
rol
mov
ror
mov
inc
sbb
loop
cmps
inc
mov
dec
cmp
jne
sbb
fstp
in
out
test
mov
shl
mov
jg
dec
mov
add
jne
jbe
cld
xor
je
in
pop
sbb
or
jne
scas
ins
and
cmp
pusha
pusha
push
ins
xor
rol
cmp
push
mov
movs
inc
mov
push
inc
cmp
push
fs
add
or
fst
lock
lods
or
add
xchg
fs
dec
arpl
test
pop
inc
int
inc
out
xor
push
fld
mov
xlat
adc
adc
xor
jo
clc
shr
stos
les
pop
in
add
and
loopne
dec
dec
sub
mov
adc
mov
xchg
push
mov
push
dec
loopne
ret
sub
push
outs
sbb
inc
shl
enter
jg
pop
xor
imul
retf
sbb
cmp
ja
mov
pop
xchg
mov
hlt
lds
push
or
lock
enter
sub
lock
add
pop
or
pop
push
inc
push
adc
sbb
dec
movs
test
or
push
cdq
cmps
call
mov
(bad)
lods
dec
mov
xchg
rol
push
adc
test
cli
inc
loopne
clc
xlat
inc
icebp
sbb
sbb
es
jns
adc
fstp
mov
xor
mov
cmp
je
pop
mov
dec
or
mov
jge
sbb
inc
sub
les
adc
fwait
or
pop
lock
inc
or
push
xor
or
xchg
pop
add
mov
mov
or
sub
mov
fistp
fcomi
fs
pop
dec
mov
in
pop
(bad)
ins
or
push
test
into
xor
mov
push
ss
jle
jnp
and
pop
xor
adc
push
or
add
xchg
mov
add
cmp
adc
inc
lock
adc
jo
sbb
xor
inc
cmps
or
fst
inc
sub
xor
ret
clc
and
add
lahf
and
das
adc
out
mov
inc
pop
mov
or
mov
add
and
mov
mov
adc
jo
ins
push
loopne
sub
scas
daa
mov
or
mov
dec
adc
jge
mov
sbb
xchg
mov
mov
mov
adc
movs
pop
dec
sbb
mov
xlat
cmp
out
ja
cmp
jmp
xchg
inc
adc
mov
or
push
adc
and
ror
sbb
xchg
jge
(bad)
in
fistp
push
push
mov
or
jns
repz
xchg
add
lea
jge
inc
mov
jg
or
inc
inc
push
add
sub
jo
add
into
adc
add
js
aam
and
cs
inc
inc
popa
loop
ds
pop
popf
mov
xchg
in
push
adc
sub
inc
sub
mov
aas
inc
cmp
push
push
push
jno
push
push
jmp
fsub
sti
rol
mov
add
imul
and
jb
adc
stos
test
jbe
cld
push
sbb
push
mov
fdiv
push
fs
pusha
ins
and
call
push
mov
inc
mov
adc
dec
neg
or
sti
lock
pop
daa
pop
add
and
mov
movs
or
fmul
inc
pop
(bad)
mov
jmp
mov
xchg
add
push
adc
jb
and
aam
pop
xchg
sbb
shl
ret
dec
sti
sbb
jp
add
and
data16
shl
dec
push
jmp
and
sub
sub
fild
js
adc
add
push
dec
inc
in
add
test
sbb
sbb
das
hlt
in
jmp
push
sbb
mov
pop
inc
aas
push
push
stc
push
pop
in
fsub
out
les
xchg
push
hlt
xlat
mov
sbb
shl
(bad)
add
(bad)
les
xchg
or
fcom
adc
mov
retf
aaa
dec
mov
push
xor
xor
push
sub
jo
icebp
cmp
add
es
or
adc
mov
rcl
push
mov
jge
pop
fcmovb
loopne
or
sub
jmp
add
and
add
loopne
xor
sub
add
mov
sti
add
add
sti
cmp
ret
sbb
add
and
inc
sub
adc
add
jo
es
pop
adc
lea
push
ret
xor
fwait
push
gs
and
or
xchg
jecxz
or
inc
or
sbb
pop
or
sar
and
daa
call
or
leave
jnp
mov
sbb
adc
lock
push
fcom
sbb
out
or
jge
clc
popa
or
outs
fsubr
sbb
adc
sub
fwait
jmp
cmp
xlat
sub
sub
sub
jne
or
adc
inc
loop
adc
add
sub
cmp
arpl
adc
push
adc
mov
dec
shl
cld
std
(bad)
jmp
xchg
cwde
f2xm1
pop
sub
adc
aam
movs
data16
call
pop
pop
ret
das
inc
pop
ins
push
dec
mov
(bad)
inc
(bad)
xor
sbb
call
or
test
daa
cmp
sahf
cmp
jle
sbb
jle
jmp
cmp
and
dec
sbb
test
sub
or
adc
loopne
add
(bad)
push
inc
das
add
(bad)
call
xor
out
mov
adc
jo
xchg
add
xor
movs
push
pop
sub
movs
scas
dec
mov
push
or
ds
or
jmp
bndldx
push
push
test
into
xchg
cmp
jne
cmp
adc
add
test
jmp
movs
push
push
xor
add
sub
xor
ins
cmp
add
add
das
bound
mov
retf
cmp
adc
add
mov
ins
push
loopne
sar
adc
sbb
or
or
ret
or
bound
(bad)
jne
add
adc
ror
sub
fsub
add
(bad)
or
test
imul
inc
or
or
mov
push
clc
xor
inc
push
or
pop
pop
dec
add
out
adc
in
adc
and
add
sbb
inc
push
xchg
sub
sbb
add
mov
repz
lock
clc
repnz
jp
add
or
call
add
mov
add
sbb
pop
mov
shl
inc
or
movs
inc
addr16
inc
rol
std
mov
mov
jmp
and
sahf
add
push
ror
push
rcr
cmc
sbb
inc
mov
(bad)
push
or
dec
add
not
jne
sbb
movs
cmp
adc
xor
sub
adc
and
jmp
shl
cmp
add
fild
std
mov
sbb
jge
scas
popa
pusha
call
push
mov
mov
lds
out
mov
xor
add
jne
xor
loope
sbb
xchg
rcr
sbb
jb
pop
jl
mov
test
xchg
call
inc
sbb
xor
add
cmp
in
int3
leave
pop
cmps
fs
ins
add
ins
xor
sub
les
jo
and
adc
pop
loop
and
inc
xor
pop
push
jne
xor
mov
mov
jmp
jmp
jnp
fdivr
xchg
cdq
ret
adc
add
inc
stos
xchg
test
pop
jmp
jo
stos
leave
adc
inc
je
xlat
and
inc
in
pusha
xor
lea
pushf
and
push
xchg
jo
push
cmp
push
enter
xor
xor
dec
cmp
cmovb
icebp
lock
inc
ret
cmp
sahf
std
scas
mov
je
jmp
or
jmp
fcom
and
rol
fild
fcom
test
push
jle
ret
inc
inc
cmp
cmp
ret
add
add
push
xor
mov
dec
push
xchg
xchg
pop
movs
lahf
and
or
or
in
out
(bad)
mov
adc
mov
push
rol
and
iret
adc
das
test
lea
cmp
fisub
push
xchg
add
push
add
and
mov
ins
dec
jb
nop
sbb
adc
xor
lea
push
jae
add
jle
push
or
push
cmp
add
sahf
mov
mov
push
sbb
inc
and
das
aas
mov
xor
test
mov
mov
cmp
je
dec
push
sbb
adc
add
add
dec
les
mov
add
fsubr
std
nop
div
mov
mov
fcmovnu
fild
jnp
test
mov
test
or
out
or
or
int3
sbb
or
adc
push
aaa
xbegin
clc
in
addr16
out
sub
adc
call
jle
sbb
add
add
mov
add
add
inc
inc
addr16
mov
sbb
pop
mov
sbb
dec
mov
or
popf
ins
mov
sub
mov
or
inc
xor
sbb
sahf
mov
in
jo
adc
mov
add
fiadd
xchg
je
daa
shr
mov
push
xlat
adc
add
adc
enter
in
(bad)
or
cmps
clc
or
mov
in
adc
shr
lea
mov
jns
xor
mov
nop
mov
mov
jbe
out
adc
push
xlat
(bad)
sbb
add
(bad)
aad
cmp
(bad)
adc
add
out
lods
add
jno
mov
adc
add
push
and
nop
xor
bound
mov
add
cmp
jne
test
and
lds
call
jns
dec
leave
nop
pop
fld
push
imul
add
push
add
ja
daa
je
in
movs
xor
pushf
xchg
mov
outs
jg
nop
inc
cmp
xchg
add
mov
pop
push
sub
add
inc
js
mov
popf
or
sahf
or
dec
push
mov
or
push
loopne
jne
dec
push
jecxz
lods
mov
push
xchg
ror
add
pusha
cmp
or
pusha
es
cmp
rol
shr
sub
inc
or
sbb
cmp
imul
xor
add
push
inc
loop
lea
xor
or
lods
nop
lea
xor
(bad)
cli
add
out
xor
enter
push
and
stc
stos
sub
dec
and
mov
xlat
imul
vmovapd
(bad)
push
sub
push
loopne
in
add
jmp
push
add
mov
aaa
jmp
addr16
sbb
enter
sub
cli
nop
xor
(bad)
cmp
cmp
jne
mov
inc
and
cmp
rol
push
not
call
leave
xor
mov
jb
jmp
movs
xor
xchg
rsqrtps
rol
test
sub
cmp
clc
out
add
or
add
sbb
lods
push
dec
repnz
push
(bad)
sbb
lea
icebp
(bad)
aas
and
mov
lock
mov
or
mov
jg
(bad)
xchg
je
aam
cmp
mov
rcl
jnp
pusha
test
aad
inc
push
cmp
add
aaa
test
cmp
and
add
iret
out
rol
push
addr16
and
or
adc
vaddss
and
movs
sub
xchg
cmp
jo
push
mov
add
sbb
inc
ror
fild
dec
or
adc
jnp
pusha
in
jae
mov
and
(bad)
je
push
sub
xor
push
mov
out
ja
mov
les
and
fwait
push
test
mov
leave
enter
sub
ret
enter
pusha
push
pop
jne
dec
mov
push
push
aad
(bad)
cmp
mov
jl
xor
cdq
adc
out
xchg
or
add
sub
and
adc
add
and
xor
add
add
xor
sbb
lea
sbb
adc
outs
push
push
pop
xor
push
push
dec
inc
ja
jmp
pop
pop
sub
add
push
mov
jg
mov
mov
jno
mov
xchg
pop
dec
inc
or
stos
fwait
jle
jae
shl
jle
sbb
mov
pop
(bad)
sbb
sub
push
ror
enter
fcomp
mov
adc
mov
xor
xor
hlt
mov
out
cmps
fadd
adc
mov
cmp
test
xchg
adc
cs
or
or
xor
pop
pop
mov
pop
(bad)
or
push
adc
push
push
lds
cmp
jae
sbb
in
or
xchg
scas
pusha
xchg
ja
test
mov
addr16
push
sbb
and
jns
inc
inc
cwde
jbe
adc
dec
ins
pop
xchg
and
(bad)
dec
out
es
aam
je
mov
es
fimul
repz
mov
ja
ins
fadd
rol
mov
dec
clc
test
xor
scas
mov
(bad)
push
loopne
outs
inc
xor
push
push
jg
adc
adc
or
pushf
jmp
mov
jmp
lods
inc
scas
jl
add
xchg
bound
jmp
xchg
mov
sbb
sub
add
xlat
xchg
xchg
ret
or
loope
mov
dec
test
sbb
sahf
sub
js
call
inc
push
adc
test
inc
lds
xchg
push
cmp
inc
inc
push
push
mov
sbb
pusha
add
mov
lea
adc
cmp
adc
neg
mov
ins
pop
mov
pop
jo
push
cmp
push
sub
(bad)
push
mov
and
mov
gs
bound
cmp
je
jno
push
jl
loope
cmp
cmp
add
xchg
js
push
pop
adc
inc
push
add
xchg
ret
(bad)
div
dec
sbb
sbb
mov
inc
lods
inc
stc
repz
add
(bad)
xor
clc
mov
cmp
imul
adc
pop
inc
push
sub
jecxz
mov
je
or
inc
add
daa
dec
add
add
jmp
aad
or
sbb
xor
(bad)
jmp
and
push
pop
ret
jg
ss
push
push
adc
inc
adc
or
lods
pop
sub
mov
dec
xor
jae
push
push
and
dec
lock
fistp
sub
xchg
push
or
sub
dec
cdq
xchg
in
dec
leave
adc
or
xor
ror
push
mov
xor
pop
dec
jmp
lods
or
ror
add
aaa
in
inc
inc
mov
lock
loopne
add
add
and
dec
call
pop
add
jmp
mov
and
adc
sub
mov
cmc
add
pop
ins
xlat
inc
add
pusha
add
repnz
add
iret
push
cmp
inc
or
push
or
or
mov
or
inc
enter
push
push
jb
retf
jnp
or
out
cmp
in
jge
adc
inc
xor
sbb
cmp
mov
fcmovnbe
sti
popa
or
or
retf
leave
mov
dec
pop
dec
add
xchg
fild
daa
push
fwait
adc
cmp
adc
mov
xor
push
mov
fcom
jb
push
idiv
push
(bad)
push
or
xor
in
xor
xor
js
aad
cmp
add
jl
xchg
fsubr
inc
cli
ins
inc
or
daa
mov
add
sub
clc
inc
dec
pop
or
mov
clc
dec
cld
mov
adc
ins
push
lea
aaa
sbb
loopne
mov
mov
add
mov
cdq
or
xchg
cs
cmps
mov
add
das
adc
cdq
fs
js
and
or
das
adc
gs
add
enter
sub
dec
scas
add
test
clc
out
xchg
movs
hlt
sub
mov
cli
add
mov
pop
jmp
sbb
and
adc
int3
test
ror
mov
or
xchg
pop
cmp
pop
adc
mov
dec
cdq
lods
sbb
ins
push
fisttp
lock
int
sub
dec
sbb
mov
retf
xor
xchg
dec
rcr
and
cmp
push
push
fcom
xor
xor
dec
cmp
cmp
mov
mov
cld
xor
mov
jmp
out
cdq
sub
mov
pusha
addr16
iret
inc
cmp
jnp
sahf
aam
mov
fdivr
adc
out
mov
mov
js
add
cmp
xchg
out
or
outs
sub
xchg
dec
adc
or
xchg
dec
inc
js
sub
jecxz
xor
unpcklps
aaa
sbb
popa
sub
mov
mov
add
mov
mov
jo
mov
pushf
lock
inc
stc
outs
and
sub
push
nop
cmps
lea
pop
or
mov
outs
arpl
inc
inc
push
daa
js
rcr
jne
mov
sbb
popa
dec
ins
or
arpl
cmp
adc
cmc
arpl
stos
xchg
pop
sbb
xlat
inc
add
sub
pop
push
sbb
mov
mov
push
shl
dec
inc
inc
jne
sbb
sar
je
add
push
lds
in
(bad)
mov
cmp
shr
push
repnz
jne
pop
rol
and
inc
and
fist
jae
fucomp
aas
sub
or
pusha
inc
mov
ret
push
push
cmp
pop
ret
popa
and
add
pop
shl
push
mov
movs
jnp
test
ja
adc
jl
or
retf
test
adc
mov
dec
neg
sbb
loop
cmp
clc
adc
mov
cmps
adc
movs
adc
xor
retf
jbe
mov
and
mov
adc
or
push
fisub
sbb
rcr
cmp
mov
adc
xchg
jns
xchg
je
out
jnp
call
setne
adc
or
adc
pop
cmp
aas
rcl
mov
aad
cmc
push
(bad)
call
(bad)
mov
test
or
jb
lds
popa
jl
dec
je
loopne
sub
sub
add
add
pop
push
std
sub
popa
sub
and
mov
or
pop
(bad)
jo
add
or
mov
and
push
test
pop
push
adc
add
cmp
outs
imul
pop
mov
ins
inc
mov
retf
push
mov
out
or
shr
add
jo
bound
mov
jbe
aas
mov
in
sbb
and
gs
sbb
mov
adc
xor
aas
rol
adc
mov
jnp
das
xchg
xor
mov
fisttp
xchg
sub
adc
loopne
scas
lods
and
xchg
dec
and
je
cmp
fst
cmp
ins
sbb
mov
or
jmp
and
fdiv
push
inc
popf
dec
ins
fiadd
les
cmp
adc
mov
add
outs
and
xor
mov
out
fimul
push
lea
in
shl
push
sub
or
and
lock
sub
mov
add
pop
bound
mov
and
in
loopne
or
or
fcomp
push
mov
xor
sbb
pop
shl
sub
ss
push
lahf
push
inc
add
in
xor
je
test
mov
jbe
jle
or
mov
sub
adc
nop
fmul
or
sub
inc
shr
xor
(bad)
pop
add
push
movs
add
in
xor
test
adc
or
push
or
idiv
jo
in
ss
pop
xor
xor
aaa
or
mov
div
jmp
gs
sbb
cmp
sub
idiv
idiv
stc
test
xor
jl
loope
push
cmp
call
mov
lods
rcr
imul
je
mov
daa
outs
jo
pusha
or
outs
test
sbb
loope
adc
stc
inc
jmp
pop
inc
push
in
or
pop
ret
mov
xor
sbb
xor
ret
mov
mov
enter
js
rol
cs
pop
dec
pop
or
jmp
pop
scas
loope
jmp
pop
sub
sub
or
lods
jmp
psraw
repnz
test
pop
cmp
add
mov
xor
sbb
mov
xor
clc
or
aad
pop
sub
(bad)
cdq
rcr
add
inc
lock
cld
pop
out
adc
push
fadd
rcr
fcomp
lods
sbb
or
retf
rcl
lahf
sbb
ror
mov
sub
mov
adc
sbb
rcl
inc
jne
sub
and
test
xor
jns
and
and
lea
cdq
and
push
das
push
pop
mov
sbb
or
dec
inc
enter
add
mov
pop
inc
sbb
push
xor
addr16
sub
call
push
clc
rol
push
leave
inc
add
call
xchg
add
xchg
ror
icebp
push
or
fmulp
inc
xor
add
cmps
add
push
adc
popf
adc
push
jl
sbb
inc
dec
cmp
xor
(bad)
pop
jbe
sub
dec
pop
push
data16
cmp
xchg
mov
loope
pop
aam
push
and
or
sbb
cmp
jne
jns
lock
dec
icebp
jmp
test
aas
or
push
push
popf
outs
xchg
pusha
inc
in
adc
push
pusha
sub
ror
pop
sbb
mov
ret
mov
movs
add
dec
popa
test
lea
and
adc
fimul
hlt
ror
xor
and
adc
fbstp
jne
dec
add
mov
or
mov
pop
loope
test
mov
jp
adc
wbinvd
mov
jns
push
sbb
push
jmp
test
sub
jle
dec
jp
jo
outs
add
cmp
bound
inc
cmp
jmp
add
inc
mov
mov
ror
and
arpl
push
add
or
add
add
or
clc
cmp
jno
shl
add
mov
adc
push
or
pop
add
das
pop
pop
pop
iret
mov
stos
(bad)
xor
mov
hlt
jbe
jbe
test
sbb
adc
mov
add
jnp
or
sbb
mov
rol
jle
je
js
cmp
and
std
adc
push
pop
je
aaa
test
mov
cmps
popf
rol
jo
sub
inc
mov
pop
(bad)
add
inc
adc
dec
sub
jmp
test
inc
or
das
bound
adc
jne
inc
rcr
repnz
(bad)
pushf
push
or
and
or
or
pop
add
adc
enter
imul
push
scas
mov
add
lea
adc
jb
dec
dec
fld
or
je
or
jne
or
sti
push
cmp
je
or
pop
clc
sahf
add
or
sbb
pop
inc
or
add
xor
jle
add
push
and
add
mov
das
jne
sbb
and
jecxz
cmp
arpl
icebp
adc
push
push
nop
pop
enter
in
and
dec
add
js
mov
mov
inc
or
lds
add
pop
inc
loope
mov
fsub
jecxz
mov
cmp
imul
inc
out
and
in
fstp
lea
sub
or
sbb
arpl
leave
shl
or
push
mov
scas
jno
mov
cmps
stc
adc
adc
jle
jnp
sub
rcl
or
ficomp
je
add
sub
sahf
inc
pop
call
dec
rcl
or
jae
adc
rcl
mov
xchg
cmp
sub
and
adc
xor
inc
add
add
xchg
movs
fnstenv
arpl
pop
adc
in
loop
jmp
add
add
inc
jmp
sbb
dec
mov
(bad)
mov
pop
xor
add
sbb
add
dec
je
inc
and
loope
xor
je
xor
mov
sbb
add
loope
adc
je
stos
adc
call
jne
arpl
add
push
adc
imul
adc
test
pop
shr
pop
sbb
sub
fadd
aam
stos
adc
adc
or
cmp
daa
nop
icebp
mov
(bad)
push
test
xchg
and
mov
inc
in
jle
xchg
jmp
xor
cmp
inc
push
push
fnstenv
sub
inc
cmp
sub
mov
push
inc
adc
(bad)
fiadd
enter
mov
repnz
sti
pop
shl
fwait
repz
mov
cmp
inc
inc
push
(bad)
mov
(bad)
sbb
rol
and
clc
movs
repnz
ret
test
test
sbb
mov
add
cmps
je
jp
add
jmp
in
mov
jge
mov
popa
push
ror
xor
test
js
daa
in
add
loopne
push
add
push
sbb
lods
dec
lea
nop
xchg
ret
(bad)
push
jo
dec
xor
jno
mov
dec
sbb
out
and
clc
mov
xor
inc
mov
push
ja
add
xor
dec
pop
dec
loope
nop
xor
loope
mov
push
ret
push
sub
add
cmp
js
push
scas
add
add
adc
dec
push
cmp
lock
fldcw
add
and
and
int
mov
xor
sbb
je
repnz
retf
nop
stc
cld
add
and
xor
enter
jp
scas
stc
pop
dec
push
push
es
and
data16
push
int3
push
mov
sar
out
mov
mov
dec
push
mov
push
push
push
pop
push
in
in
jnp
jge
enter
push
inc
push
lods
push
test
push
cmp
jnp
jnp
dec
push
inc
adc
cmp
jnp
jns
inc
sbb
ss
push
dec
push
pushf
out
fidivr
js
test
and
or
mov
scas
push
nop
mov
jnp
jo
mov
push
mov
shr
mov
adc
test
push
test
push
cwde
xor
or
fld
or
cmp
or
xchg
cld
inc
add
xor
sbb
imul
std
sub
sub
push
(bad)
sti
and
mov
mov
sub
add
pop
mov
sbb
jmp
(bad)
retf
add
xor
nop
imul
and
(bad)
and
das
pslld
mov
into
mov
cs
dec
jne
and
(bad)
add
xor
jl
sub
pop
sub
stos
sub
imul
add
in
xchg
xor
mov
xor
sub
comiss
jb
mov
ret
push
xor
xor
(bad)
cld
repnz
add
add
xor
or
pop
aaa
add
cmp
push
add
pop
cmp
mov
repnz
popf
fimul
cmp
dec
cmp
out
loope
in
aas
sar
push
dec
outs
call
inc
add
cmovb
or
rol
es
inc
add
lods
sti
add
xchg
adc
xlat
add
sub
sbb
push
push
push
dec
xchg
add
pop
adc
gs
out
ins
mov
pusha
xor
dec
push
popa
ror
bound
jae
inc
es
dec
sbb
pushf
xor
xchg
int3
inc
sbb
test
sar
shr
aad
push
jb
cmp
push
(bad)
sar
rol
les
in
xchg
or
leave
cmp
dec
pop
nop
add
inc
pushf
fst
leave
add
in
inc
mov
pop
xchg
pop
ins
fmulp
xor
push
xchg
add
std
sbb
xchg
in
xor
and
das
inc
or
push
les
out
mov
push
pop
xor
xbegin
push
test
jg
mov
mov
repnz
dec
aam
in
enter
test
add
xchg
fdivr
xor
xchg
mov
ret
jg
movups
push
call
and
jb
inc
dec
push
mov
daa
jo
xchg
and
adc
dec
fmul
and
adc
dec
inc
or
mov
cmp
xchg
and
adc
leave
adc
xchg
pop
and
cmovb
adc
ds
sbb
mov
sbb
push
xchg
add
jo
fiadd
xchg
nop
inc
cmp
adc
dec
and
xor
cmp
xchg
call
dec
outs
popa
fs
or
cmp
popa
ins
nop
pusha
push
mov
xchg
pop
add
jns
jge
call
push
xor
mov
std
and
add
add
jb
add
push
cs
pusha
add
inc
and
push
outs
sbb
inc
rcr
push
mov
jo
dec
bound
mov
inc
addr16
pop
mov
dec
(bad)
push
or
lock
test
push
jbe
mov
jle
push
test
add
push
in
ret
cmps
dec
or
dec
jg
sub
inc
outs
ds
inc
and
ror
inc
pop
or
loopne
inc
inc
and
lahf
add
mov
push
or
outs
je
inc
or
mov
ins
ret
and
and
push
dec
jo
add
pop
inc
mov
inc
mov
in
ret
push
stos
xchg
jb
cld
cmp
cmp
and
pop
sub
jp
or
jnp
xor
cmp
out
dec
push
enter
fs
push
jmp
call
mov
ret
cmp
ds
push
test
mov
imul
sbb
divps
vmwrite
hlt
bound
sbb
sub
es
(bad)
test
adc
xor
das
or
jo
movs
ja
fs
shr
mov
or
ret
xchg
jecxz
lock
mov
pusha
sbb
test
sbb
add
jmp
pop
pop
adc
push
addr16
adc
and
jle
retf
clc
clc
sub
cmp
add
adc
or
sbb
mov
or
and
or
popa
inc
sbb
pop
fs
push
fs
or
adc
inc
add
xchg
popa
dec
arpl
(bad)
fild
sbb
or
sbb
inc
adc
leave
fild
or
push
je
ror
xchg
jg
inc
loopne
andps
dec
add
dec
push
pop
and
cld
fwait
inc
inc
adc
add
dec
xor
jae
cwde
stos
sbb
jnp
xor
dec
or
sub
je
jo
inc
xor
imul
rcl
cmp
das
ins
outs
jb
rol
enter
pushf
cdq
or
imul
imul
pop
sbb
call
push
aaa
jae
popa
jo
popa
loopne
adc
dec
push
push
mov
scas
push
mov
ror
add
or
adc
mov
and
ins
nop
or
push
sbb
add
imul
inc
fs
sub
xchg
inc
daa
xor
add
sub
pop
xchg
rol
fisttp
mov
adc
rol
inc
js
pop
push
add
out
jae
dec
popa
jae
push
inc
(bad)
in
or
add
or
pop
adc
popa
shr
and
inc
lahf
mov
lock
mov
xor
sub
outs
imul
xor
repz
sub
push
cwde
push
movs
mov
or
popa
adc
inc
xchg
inc
cmp
add
adc
and
test
jns
mov
jmp
push
add
xchg
pop
pop
push
iret
xchg
stos
fwait
popf
cmp
pop
sub
inc
out
js
inc
jne
retf
and
arpl
fs
push
loop
fwait
xchg
push
int
cmovge
fdiv
ds
nop
push
adc
add
cs
enter
jo
inc
and
xchg
fucom
and
ret
cmps
test
stc
arpl
pop
xchg
fbstp
push
sub
(bad)
cmp
xchg
mov
adc
das
fiadd
in
and
push
cmp
jle
cmps
dec
jno
push
ins
pop
jb
inc
xchg
push
leave
lock
xor
add
cmp
cmp
dec
scas
adc
popf
nop
push
or
sbb
dec
add
das
pop
dec
aaa
aaa
push
imul
jle
xchg
jl
and
(bad)
(bad)
and
test
xchg
mov
sbb
mov
add
adc
dec
xor
mov
mov
xor
cmp
pop
das
jp
adc
dec
das
push
mov
pushf
jmp
sbb
pop
mov
xchg
dec
pop
xor
jne
dec
aas
mov
aas
sbb
cmp
in
or
imul
xor
inc
add
(bad)
adc
xchg
pop
jge
mov
adc
lea
dec
das
daa
jp
popf
mov
add
fmul
dec
aam
pusha
inc
je
dec
femms
sbb
lods
iret
cmp
cmp
mov
push
cmp
xor
push
pop
pusha
das
outs
dec
inc
jne
sbb
movs
cmp
adc
loope
nop
xchg
xchg
xlat
mov
inc
push
adc
sbb
cmp
imul
cmp
inc
pop
inc
or
inc
push
out
xchg
dec
enter
xchg
mov
push
push
test
pop
cmp
icebp
add
cmp
ins
adc
push
fdiv
test
pop
push
sbb
mov
sub
mov
push
scas
loope
add
lea
cmp
push
or
adc
cmp
pusha
sub
rcl
xchg
adc
inc
mov
lock
dec
xor
movs
push
lea
js
cmps
push
mov
pop
movs
das
mov
cmps
cmp
push
push
test
data16
xchg
call
imul
stos
cmp
or
movs
xchg
add
shl
fsub
xchg
mov
sbb
xchg
das
sbb
adc
add
iret
xor
add
jae
and
js
pop
fisub
sar
pop
inc
lahf
push
sbb
push
push
(bad)
pop
xor
fisub
jl
xchg
push
aas
xchg
pop
pop
dec
rcr
sbb
mov
jo
push
xchg
fild
mov
push
add
lock
pop
out
sbb
sbb
dec
mov
mov
stos
xor
and
cmp
les
das
pusha
pop
pop
pop
pop
mov
mov
pop
ja
ja
lea
add
push
jae
push
mov
fwait
call
add
sbb
loop
pop
ja
pop
das
hlt
pop
aas
test
or
pop
imul
sbb
push
loopne
test
and
pop
jge
push
jb
js
or
pop
or
and
push
pop
sahf
add
xor
pop
adc
pusha
pop
push
fucomi
(bad)
cmc
add
aam
enter
loop
out
xchg
add
and
or
pop
add
gs
xchg
lds
pop
out
inc
xchg
sbb
jb
xchg
or
adc
cs
fmulp
call
outs
xchg
pushf
and
mov
cs
xor
ds
add
pop
add
or
add
xchg
cdq
dec
sbb
and
pusha
add
repnz
xchg
fcmovbe
jae
outs
add
addr16
add
imul
adc
xor
ja
mov
pop
inc
ror
adc
frstor
mov
sub
or
in
push
mov
add
test
mov
dec
push
and
adc
mov
mov
push
mov
aam
call
add
mov
pusha
pop
add
in
pop
std
sub
push
mov
ins
jbe
sbb
inc
pop
mov
or
ins
or
imul
push
sar
add
ror
pop
push
icebp
ss
shl
sub
and
mov
and
rcl
push
dec
inc
aaa
bound
sti
stos
push
cmp
inc
popa
mov
xor
rol
das
pop
push
outs
dec
dec
gs
dec
pop
pop
add
cmp
shr
add
dec
add
mov
lahf
jg
add
outs
or
inc
push
inc
xor
pusha
in
or
je
aaa
adc
add
sahf
push
sub
or
cwde
push
adc
ins
add
lock
push
and
in
loopne
or
sub
inc
jno
loop
ret
cmps
fst
adc
sar
mov
rol
int3
xor
push
dec
shr
or
push
add
jns
movs
or
add
inc
pop
adc
add
or
push
mov
jns
sbb
movs
inc
add
gs
fcmovb
adc
outs
add
pop
pusha
push
sub
mov
pop
adc
cmp
or
mov
lock
outs
ins
inc
pop
adc
shr
jl
add
hlt
push
(bad)
adc
mov
pop
xlat
outs
adc
(bad)
sub
pop
jne
fmul
mov
adc
sub
xchg
data16
pusha
and
lods
leave
and
lock
push
addr16
sbb
test
cmp
das
pop
dec
shl
out
xchg
aaa
jo
into
lock
aaa
adc
adc
out
pop
jb
pop
je
inc
mov
pop
pop
dec
inc
lock
or
ret
js
call
mov
xchg
sub
jnp
adc
sub
out
popa
das
mov
lahf
ja
push
adc
pop
jecxz
sub
push
popa
add
dec
loopne
jl
jmp
adc
lea
enter
lods
and
retf
inc
adc
imul
dec
test
lock
cmp
or
pop
or
inc
pop
sub
or
add
push
repnz
pop
imul
add
mov
push
or
sub
adc
test
ins
es
das
ins
push
and
fwait
mov
js
inc
pop
call
test
idiv
sub
hlt
imul
std
inc
sbb
jg
jmp
ins
cmp
push
mov
push
ins
nop
add
or
push
ins
push
jne
test
push
shl
push
push
fisubr
loopne
std
mov
or
add
movs
adc
fwait
retf
sub
mov
ins
jae
dec
sbb
cld
pop
pushf
rsm
mov
int
gs
jmp
push
pushf
pop
mov
push
mov
push
pop
movs
xchg
ins
ret
adc
outs
cmc
ret
inc
adc
and
adc
jmp
pushf
mov
mov
loope
outs
ja
outs
add
push
shl
loope
xchg
mov
cmp
ins
jo
add
movs
mov
or
jmp
je
out
and
pushf
and
loopne
lock
and
pop
loope
mov
outs
jo
cmp
cld
cwde
mov
out
call
jo
and
mov
jmp
adc
dec
repz
mov
pop
and
cmp
xchg
add
pop
imul
pusha
jp
add
lods
mov
mov
es
jae
es
test
imul
add
jl
push
dec
inc
dec
jno
jb
bnd
jae
and
and
mov
call
jno
jae
add
mov
jae
mov
sub
jo
addr16
mov
push
je
jne
test
das
mov
pop
shl
imul
addr16
cmp
je
sub
dec
scas
cmps
adc
add
mov
rcl
add
jns
inc
xor
add
mov
(bad)
mov
mov
adc
jbe
push
sbb
aaa
sti
push
inc
ja
jecxz
xor
popa
pop
or
push
es
mov
addr16
push
mov
push
pop
add
sbb
push
add
or
enter
and
fsub
sbb
or
jo
mov
repz
xchg
mov
into
fs
neg
inc
jb
push
pop
sbb
jb
and
xchg
mov
inc
cmp
arpl
js
sbb
xor
les
xor
aad
inc
aaa
test
pushf
fsub
outs
pop
setb
sbb
test
gs
mov
jns
fwait
mov
jp
mov
cmp
mov
ret
repz
inc
or
jl
cmp
cmc
push
inc
cmp
mov
lock
and
add
(bad)
popa
and
imul
pop
jno
lds
cdq
stos
or
push
push
fsub
loop
jecxz
inc
mov
jno
shr
movs
inc
mov
sbb
lods
cmps
add
and
ss
sahf
popa
mov
(bad)
dec
add
fs
inc
lds
pop
(bad)
aam
pop
js
fild
add
add
add
or
push
(bad)
add
ins
aad
inc
push
inc
je
add
or
adc
and
gs
jb
clc
sbb
or
add
adc
push
or
push
jns
ins
rol
xor
sub
dec
inc
fimul
pop
mov
xchg
test
cmp
(bad)
jmp
pop
mov
adc
je
or
add
add
pop
and
or
mov
lds
mov
cmp
test
add
pop
sbb
and
and
jge
sub
dec
ins
add
adc
cmp
sub
(bad)
les
jae
jo
popa
pop
ss
mov
ds
jae
jl
push
xchg
add
popa
push
or
aaa
jmp
dec
or
inc
ror
fiadd
test
cmc
mov
jle
lods
push
loopne
jmp
mov
push
mov
jg
lock
or
sub
inc
push
test
enter
pop
data16
inc
sub
rcl
pop
dec
jo
loopne
pop
inc
scas
bound
test
jp
in
fwait
int
ds
push
sub
dec
imul
stc
xor
inc
sub
jns
push
sub
test
push
mov
push
mov
push
xchg
jge
xchg
cld
jo
cmp
or
add
cmps
pop
add
add
push
pop
or
adc
int3
jo
popa
inc
or
repz
lock
dec
jbe
jg
push
add
mov
cmovg
cmp
mov
or
mov
sbb
dec
dec
inc
sahf
sub
mov
dec
je
popa
jo
movnti
call
ss
and
hlt
push
inc
push
mov
push
dec
ins
add
cmp
add
test
push
inc
imul
add
inc
in
loope
jg
mov
inc
retf
jp
cmp
cmp
mov
lds
push
ret
bound
jle
xchg
add
ja
inc
loop
lahf
pop
mov
test
shl
pop
add
xor
sub
pop
push
adc
inc
add
xor
mov
mov
mov
inc
jae
mov
xchg
mov
enter
xor
imul
inc
pushf
or
or
lahf
pop
pusha
out
dec
mov
mov
and
cmp
inc
mov
sbb
cmp
and
mov
pop
les
push
cmp
pop
xor
nop
(bad)
pop
sbb
shl
je
mov
cmp
mov
gs
dec
imul
aaa
or
jnp
inc
add
add
adc
pop
jne
inc
leave
and
(bad)
inc
add
pop
bound
xchg
pop
push
test
or
jmp
into
and
inc
dec
add
mov
mov
cmp
fwait
jge
outs
ror
push
test
xchg
push
and
loope
cmp
inc
es
cld
sbb
sub
int3
mov
sub
fadd
sbb
mov
(bad)
sub
and
rol
add
push
inc
gs
xor
mov
jae
or
xor
add
ud1
test
repnz
xchg
mov
xchg
mov
fnstenv
xchg
inc
add
xchg
add
or
mov
push
xchg
inc
jbe
adc
repz
retf
jge
ins
int
mov
imul
dec
mov
ins
ins
pop
xor
add
xchg
xchg
push
sub
push
cmps
push
xor
mov
xor
not
call
sbb
je
jb
cmps
push
fwait
(bad)
in
fisttp
or
jl
mov
add
xlat
popa
shl
xor
mov
cmp
test
add
adc
sti
aad
or
mov
lea
lods
int3
in
adc
sbb
mov
cdq
mov
sbb
cmps
push
cmps
push
pop
mov
pop
or
push
arpl
add
add
sbb
xor
adc
xor
mov
push
mov
call
inc
and
pop
adc
mul
sahf
stc
add
add
test
out
push
adc
mov
enter
mov
outs
js
lahf
push
pop
push
hlt
addr16
nop
imul
sub
cld
sahf
dec
inc
and
fwait
jmp
leave
outs
mov
sidtd
dec
add
mov
mov
ror
daa
or
pop
jo
lds
les
jecxz
jo
(bad)
mov
adc
shl
inc
add
lds
and
xchg
and
and
and
or
add
push
xchg
add
cwde
jnp
ud0
mov
icebp
and
out
lods
mov
add
sub
and
jo
mov
fld
pop
and
sbb
repz
xor
push
add
pop
add
push
movs
sub
add
arpl
clc
mov
sbb
fwait
shr
pop
ins
jl
adc
(bad)
inc
jl
cmp
jnp
mov
inc
or
push
js
setb
mov
test
pop
loopne
xchg
xchg
inc
dec
jne
mov
and
call
xor
imul
mov
sub
and
add
sahf
adc
ret
rol
pusha
pusha
das
jecxz
movs
add
add
add
or
add
pushf
dec
pop
ins
icebp
add
sub
and
adc
push
mov
mov
adc
mov
(bad)
jl
jg
call
call
sbb
or
and
loopne
push
leave
and
mov
mov
enter
add
xchg
push
scas
xor
xchg
jmp
aaa
mov
rcl
push
retf
pop
xor
js
or
add
mov
cs
or
xchg
sbb
or
add
add
sub
scas
add
or
add
ror
loop
or
std
push
cdq
frstor
aad
push
xor
push
sub
dec
or
rcl
add
add
dec
jecxz
fcom
cs
xchg
fst
sbb
or
fbstp
xor
adc
push
mov
dec
pop
in
sub
pop
test
int3
jmp
cmp
cmp
pop
lock
mov
ret
mov
enter
inc
clc
ret
enter
in
ins
pop
push
sub
aaa
adc
in
pop
bound
and
(bad)
or
aaa
fcom
mov
dec
add
mov
add
add
dec
sub
add
inc
add
in
add
add
clc
inc
or
inc
add
inc
movs
push
inc
out
test
pushf
cmp
mov
cmp
aaa
push
and
mov
mov
dec
adc
inc
xchg
mov
xlat
loopne
adc
add
add
fdiv
fcmovne
mov
lahf
shl
cvtpi2ps
repnz
pop
outs
imul
push
pop
push
dec
jg
or
sub
sbb
jmp
add
in
popa
cmp
imul
adc
cmp
push
or
outs
push
loopne
xor
push
mov
iret
dec
ror
pop
outs
adc
jnp
mov
les
adc
ror
loopne
sub
or
fist
sbb
fwait
call
push
inc
sbb
pop
movs
add
and
or
sub
mov
adc
xor
repnz
add
adc
cmp
mov
in
inc
jg
lods
mov
jl
inc
dec
xor
push
or
inc
sti
mov
fcom
mov
xchg
push
ror
mov
cdq
xchg
sahf
popa
pusha
xor
mov
stc
popa
loop
pop
mov
inc
dec
ret
outs
clc
pop
(bad)
pop
and
call
imul
fmul
cwde
dec
jmp
les
push
ins
add
and
dec
mov
xor
jne
hlt
in
aad
push
ins
jl
stc
data16
mov
out
push
push
jg
loopne
jne
inc
jecxz
jecxz
mov
mov
ffreep
or
mov
frstor
nop
aaa
lods
jbe
imul
les
mov
xchg
clc
add
leave
inc
call
das
(bad)
xor
popa
adc
cmp
sub
pusha
gs
js
sbb
jo
sub
add
push
cmp
push
pop
push
sbb
push
fnstcw
dec
(bad)
jmp
inc
cld
jmp
and
or
fmul
mov
jae
push
test
daa
test
fdivr
rcl
xchg
add
add
cmp
push
daa
or
jecxz
inc
and
jle
loope
icebp
cmp
daa
jmp
add
add
adc
adc
ds
add
dec
pushf
pop
push
test
push
fimul
pop
pop
or
adc
mov
push
lea
mov
in
add
or
cmp
ds
sti
inc
sbb
mov
pop
bound
jmp
into
inc
lock
add
int
push
push
or
adc
jg
mov
rcl
aam
cmp
mov
lock
repz
hlt
sbb
rcr
iret
ins
das
into
or
shl
dec
aaa
inc
dec
mov
push
xchg
rcr
and
adc
out
inc
sub
mov
push
test
aam
and
adc
cmp
push
and
loop
fiadd
fiadd
xchg
shl
add
sbb
push
lods
cmps
pop
and
retf
xchg
xor
and
add
push
pop
mov
mov
jp
adc
mov
pop
fistp
ins
and
ror
mov
sahf
adc
jae
inc
(bad)
cli
push
mov
retf
add
clc
clc
jne
cli
pop
test
push
pop
mov
fcomp
hlt
and
cmp
dec
enter
(bad)
daa
add
cmp
mov
(bad)
lar
mov
std
xchg
add
ins
mov
and
mov
lock
ror
push
jp
stc
mov
jns
(bad)
pop
pop
cmp
jmp
shl
jmp
test
retf
in
mov
push
inc
stc
shl
jmp
ret
por
push
ret
inc
push
or
pop
push
or
inc
dec
jne
aas
push
lock
or
les
jle
mov
je
inc
pop
aam
out
mov
mov
adc
and
js
nop
mov
aas
inc
loopne
sti
jge
out
add
ds
cmps
xchg
popa
sub
(bad)
out
inc
add
add
dec
fmul
sbb
dec
add
add
sbb
mov
mov
push
in
add
adc
inc
or
rcr
test
mov
mov
cwde
and
add
sbb
cmps
mov
jae
inc
and
push
popa
sbb
adc
(bad)
(bad)
cld
dec
sub
pop
(bad)
jne
imul
loopne
fisttp
aam
cs
data16
push
stc
push
mov
hlt
cli
jmp
xor
or
push
sbb
sbb
mov
add
adc
add
mov
push
mov
mov
mov
and
enter
lea
inc
mov
fiadd
stos
inc
xchg
jo
xor
push
lods
inc
or
in
adc
adc
imul
je
aas
inc
and
loopne
shr
adc
pop
hlt
test
cmp
inc
hlt
cmps
cdq
idiv
ret
mov
dec
adc
mov
add
pusha
out
push
mov
ret
test
mov
mov
imul
mov
and
push
lods
std
ins
mov
and
in
imul
pop
or
fistp
rcr
adc
and
(bad)
loope
(bad)
imul
dec
int3
test
pop
sahf
mov
adc
loop
and
pop
mov
daa
dec
inc
add
(bad)
int3
push
jnp
dec
aaa
or
adc
add
out
or
pop
mov
adc
mov
cwde
pop
pop
sbb
inc
or
mov
and
adc
mov
mov
sub
cs
add
adc
inc
outs
push
pop
cwde
mov
adc
and
enter
push
imul
and
ret
ror
mov
adc
sbb
cmp
sbb
cmp
les
test
xor
mov
fiadd
inc
enter
inc
test
ss
adc
push
mov
daa
cmc
clc
(bad)
fcom
xchg
bound
test
addr16
lahf
(bad)
push
cmp
hlt
inc
jle
add
inc
imul
cli
and
fcomp
jmp
adc
sti
inc
mov
xor
inc
mov
adc
xor
aaa
push
dec
jae
js
and
out
lahf
push
test
pop
loope
push
sbb
ss
inc
adc
push
inc
lods
jo
aam
push
ror
ja
add
mov
sub
inc
adc
pop
add
xor
les
sub
pop
mov
or
cwde
or
mov
ror
inc
ja
stos
aad
ret
pop
js
aad
mov
sub
and
fiadd
jecxz
adc
ins
ret
data16
enter
test
add
dec
xchg
add
add
retf
or
add
dec
pop
popa
and
pop
mov
xor
sbb
repz
test
popa
dec
je
popa
clc
jmp
ret
lock
jnp
pop
mov
lds
pop
sub
sub
mov
dec
inc
pop
out
sub
and
push
imul
daa
shr
ja
pop
test
add
inc
and
daa
outs
arpl
push
lea
cdq
jmp
les
retf
mov
push
inc
repz
mov
or
sbb
sbb
repz
jmp
mov
add
sbb
sub
jg
add
sahf
retf
sti
mov
or
lahf
jge
lods
(bad)
int
xchg
jo
pcmpeqb
sub
jl
push
daa
sbb
lock
bound
inc
scas
jnp
daa
pop
dec
pop
jge
pop
mov
not
xor
clc
jle
sbb
adc
jl
jge
push
add
and
sbb
sbb
jge
(bad)
jnp
inc
test
fiadd
cwde
mov
dec
push
inc
cmp
cmp
dec
in
into
nop
add
jl
das
sub
and
or
or
dec
(bad)
call
or
push
popf
cmp
push
sub
mov
movs
cmp
jp
lods
jge
scas
fst
add
push
mov
jae
shl
arpl
xchg
jo
xchg
push
push
fdivr
enter
or
mov
add
pop
cwde
or
scas
or
div
pop
arpl
add
add
ins
das
ret
aaa
pop
pop
loop
push
or
or
jno
cmovno
cmp
jp
lea
fiadd
or
dec
add
out
mov
or
pop
popa
sbb
or
pop
ins
jecxz
jg
dec
sar
dec
add
shl
push
add
bound
or
dec
outs
jb
push
ds
(bad)
call
adc
push
inc
ja
and
out
sub
sub
xchg
and
sub
fs
sub
jg
mov
and
rol
mov
iret
aas
push
or
mov
or
cmp
and
inc
adc
lea
icebp
pop
jmp
mov
push
xor
push
adc
rcl
dec
mov
pop
mov
and
lea
clc
or
push
jo
and
jl
cmp
jge
ror
or
xor
inc
xchg
outs
clc
pop
inc
cmp
or
retf
pushf
adc
cmp
sub
push
adc
das
inc
movs
into
mov
outs
into
arpl
pop
xlat
inc
pushf
inc
or
ret
inc
add
push
push
xchg
sbb
aad
(bad)
xorps
shl
cli
jo
push
or
jbe
inc
ss
dec
arpl
gs
data16
nop
push
dec
mov
xlat
or
faddp
push
push
ds
ret
push
or
fidivr
or
aam
or
movs
xor
or
imul
fbld
dec
add
popa
sqrtps
push
adc
push
xor
xchg
out
fimul
outs
inc
push
imul
push
or
push
push
sar
inc
dec
inc
jne
outs
mov
push
or
push
pop
mov
(bad)
popa
add
mov
jge
or
add
inc
stos
mov
dec
addr16
dec
sub
xchg
pop
add
xchg
inc
dec
inc
pusha
stos
loopne
add
dec
mov
add
add
stos
push
add
or
jmp
adc
add
sbb
imul
lahf
ret
arpl
adc
pop
jnp
pop
jae
and
popf
or
outs
ins
bound
rcl
sub
adc
inc
imul
jnp
or
jl
sbb
and
arpl
shl
inc
imul
sbb
(bad)
jnp
popa
inc
jmp
pop
adc
add
clc
push
in
loopne
fmul
fidivr
pop
(bad)
ss
or
sti
jo
pop
adc
dec
and
lods
mov
idiv
sub
div
sbb
or
mov
pop
pop
cmps
fcomp
sub
(bad)
sub
pop
adc
xor
addr16
sub
icebp
dec
stos
mov
lods
pop
outs
dec
add
es
push
scas
nop
jo
test
out
mov
and
movs
hlt
inc
fldln2
cwde
cmp
lock
adc
jo
aad
mov
retf
push
inc
dec
adc
cmps
inc
and
pop
push
dec
jbe
psubsb
lock
(bad)
scas
mov
neg
inc
punpckldq
jmp
jae
add
loop
scas
or
xor
xchg
inc
and
ja
scas
inc
dec
sbb
cmp
adc
or
fdivr
jbe
mov
mov
jmp
mov
repz
ins
movs
push
fld
ins
hlt
pop
mov
mov
outs
pop
pop
fsub
in
mov
mov
xchg
xchg
add
push
push
mov
and
es
fcomp
push
and
mov
aas
punpcklbw
jb
mov
out
sbb
fistp
mov
xchg
mov
int
push
sbb
bound
and
dec
pop
leave
and
mov
xchg
mov
das
xchg
push
enter
mov
aas
mov
adc
rol
test
sub
and
adc
inc
pop
ins
adc
ja
cmc
and
push
mov
cmp
add
jne
push
pop
xor
or
add
adc
test
add
dec
and
cmps
sub
push
sub
popa
jbe
popf
movs
xchg
sub
sub
pop
adc
inc
es
ins
imul
xor
adc
mov
ret
sub
mov
cmps
popf
adc
dec
out
and
daa
fiadd
sbb
or
inc
sbb
leave
sub
aam
mov
(bad)
push
sub
adc
aam
fst
sub
(bad)
push
repnz
fisubr
xor
adc
xchg
out
pop
cmc
sbb
rcl
and
ins
and
dec
push
adc
test
and
ins
mov
adc
lods
ins
or
or
dec
dec
test
fdiv
adc
add
mov
push
aaa
or
mov
mov
add
mov
and
mov
pop
dec
push
shl
mov
sbb
in
push
aaa
adc
addr16
mov
cmp
lock
cmp
sbb
jae
or
xchg
pop
push
jne
xor
adc
xor
xor
sbb
push
xor
add
rcr
sbb
ror
adc
xchg
mov
xchg
and
stos
lds
aad
sub
cmp
jo
pop
pusha
ret
add
int
cmp
outs
je
aad
or
ins
(bad)
aad
inc
push
push
std
and
pop
mov
mov
and
mov
mov
mov
push
inc
ds
xchg
aad
lds
adc
test
shr
popa
adc
imul
in
popa
daa
inc
imul
rcl
daa
cdq
and
pop
fwait
and
pusha
das
or
loope
hlt
mov
cmps
mov
mov
push
push
add
jnp
jl
movs
inc
push
lock
add
inc
cs
out
inc
pushf
inc
cmps
add
xor
or
movs
fs
inc
ficomp
xchg
inc
add
or
jnp
pop
hlt
or
movs
mov
stc
sbb
push
add
(bad)
cwde
sar
mov
imul
aaa
clts
add
inc
jb
(bad)
jmp
mov
fnstenv
cmps
in
push
ss
jl
pushf
inc
dec
and
inc
jl
pop
or
xchg
pushf
inc
ja
xor
dec
leave
push
inc
add
aaa
mov
xchg
add
mov
fstp
movs
xchg
inc
cmp
inc
ins
cmp
popf
mov
mov
xor
rol
mov
dec
pop
imul
jo
ins
imul
shl
inc
shr
pop
shl
mov
(bad)
cs
add
sbb
jle
ins
je
out
pop
into
mov
pushf
pop
je
test
dec
or
nop
jmp
dec
outs
or
sbb
pop
inc
out
jp
or
pop
or
cs
jle
or
sbb
out
mov
sbb
or
popa
pop
nop
or
or
or
jb
xlat
packssdw
jo
xchg
and
ins
push
call
pop
fnstsw
js
jp
sbb
cwde
sub
cwde
mov
cwde
pop
nop
sbb
imul
xor
cmp
sub
in
sahf
loopne
and
jae
jns
ret
xchg
add
ds
push
imul
mov
imul
adc
push
sbb
adc
xlat
jl
(bad)
fadd
sub
pop
sub
adc
or
pusha
call
dec
outs
ins
jns
and
mov
and
sbb
or
cmp
aas
in
lods
mov
mov
mov
pop
xchg
mov
jae
imul
fs
add
inc
adc
push
fs
sub
jae
adc
dec
mov
jae
xchg
ins
ror
mov
push
or
pop
cmp
je
push
je
or
call
outs
or
out
add
pop
fmul
sbb
je
dec
add
cmp
jnp
lea
arpl
or
fisub
fisub
loopne
mov
les
lahf
cmp
lock
lahf
jae
mov
jge
scas
fst
mov
xor
jae
lods
jae
mov
arpl
jae
adc
in
xchg
lea
sbb
adc
xchg
and
or
out
add
sub
and
int3
pop
or
adc
sbb
enter
sti
aad
bound
or
and
and
jo
push
mov
pop
jmp
mov
pushf
rcr
adc
adc
jb
sbb
push
jns
inc
ins
xor
or
cmp
scas
add
xchg
jmp
dec
push
movs
mov
inc
cmp
pusha
and
adc
push
xchg
jmp
ror
cmc
pop
pusha
pop
dec
sbb
add
add
jb
je
stos
mov
fist
adc
outs
movs
das
outs
mov
retf
jg
push
js
sahf
data16
fist
hlt
loope
dec
fidivr
or
push
js
cmp
retf
ss
adc
jmp
push
pop
adc
les
push
dec
sbb
psignd
dec
loopne
inc
loope
mul
ss
cmp
dec
dec
push
jae
or
js
add
mov
add
lock
cmp
or
push
cmp
outs
cmp
xchg
jb
adc
xchg
les
or
je
jae
lock
dec
pop
cmc
mov
xor
pusha
ret
mov
pop
clc
les
popa
sbb
push
mov
xor
sbb
imul
mov
das
mov
push
jmp
dec
and
mov
(bad)
fs
ins
aaa
repnz
arpl
das
mov
nop
ds
ins
fcmovne
inc
je
push
cmp
ss
push
and
out
mov
push
xor
int3
dec
push
rcr
sti
fidivr
jl
movs
mov
push
lods
push
js
pop
xchg
jo
pop
movs
ds
or
cmp
cmp
dec
cmp
or
stos
xchg
inc
inc
sub
pushf
mul
dec
add
(bad)
push
add
or
inc
dec
add
inc
jnp
mul
jo
popa
jns
js
nop
xchg
xlat
xor
scas
out
sbb
or
enter
mov
inc
xor
and
stos
or
jo
mov
and
lock
push
xlat
sti
adc
xor
dec
dec
fdivr
(bad)
sub
xor
js
(bad)
xor
push
das
pop
out
fiadd
lock
imul
mov
inc
adc
cmp
mov
test
and
test
pushf
mov
add
mov
adc
mov
and
lahf
mov
cmp
push
pushf
in
jnp
mov
out
(bad)
fldenv
retf
js
mov
push
inc
dec
ja
lds
fldcw
adc
loopne
sbb
mov
popa
ucomiss
fisttp
or
mov
inc
imul
or
repnz
sbb
mov
or
ja
clc
js
xlat
push
adc
addr16
outs
fs
or
ss
push
loopne
and
push
cs
call
stos
mov
scas
adc
push
xor
dec
or
pop
adc
add
daa
pushf
jns
daa
inc
jns
xchg
cmp
xchg
pop
pop
push
xor
jns
sbb
and
fdivr
add
dec
test
push
(bad)
arpl
inc
push
push
loopne
rcr
add
sbb
ror
mov
jge
mov
retf
mov
mov
cmps
add
test
mov
cs
cmp
add
sub
rol
adc
push
cmp
push
push
aaa
push
dec
push
cmp
fsubr
nop
sbb
pusha
sub
or
or
inc
lea
scas
dec
inc
inc
inc
into
in
adc
mov
or
cmp
push
fsub
adc
dec
inc
lods
inc
ficom
xchg
cmc
inc
push
add
xor
cmp
fcom
popf
inc
stos
movs
inc
dec
imul
or
aad
pop
lods
sub
daa
loopne
ret
add
add
ret
daa
daa
(bad)
call
popf
add
dec
jge
lock
(bad)
pop
lock
mov
adc
sar
mov
jecxz
pop
cmp
or
bound
adc
pop
jecxz
add
add
push
cld
xor
stos
add
js
ret
ins
mov
sub
push
in
lods
mov
cvtps2pi
movq
inc
pop
jae
sub
adc
ret
in
sbb
sbb
int
push
pop
and
add
dec
neg
sbb
sbb
or
jmp
pop
lea
ds
adc
out
inc
or
and
into
(bad)
sti
cs
push
iret
inc
mov
jl
das
bound
(bad)
mov
daa
test
and
push
jmp
inc
cld
out
clc
push
push
add
push
loopne
pop
repnz
pop
repz
sub
cmp
repz
cmp
dec
xor
and
and
test
and
dec
das
jno
push
push
inc
pop
cmp
cmp
cmc
mov
hlt
ds
and
and
xchg
int
ds
pop
inc
bound
in
ficom
pop
mov
imul
and
mov
xor
jle
add
push
mov
cmps
jp
test
sbb
push
inc
push
or
adc
and
inc
dec
ins
fs
xor
sub
pushf
mov
or
mov
sti
inc
sbb
fsub
mov
xchg
add
mov
jmp
jge
not
sar
xlat
(bad)
xchg
in
aaa
loope
xchg
push
sub
xor
or
xor
and
fldenv
mov
sub
push
push
gs
test
xchg
mov
add
nop
xor
sub
xchg
imul
mov
inc
add
xchg
dec
outs
fs
popf
add
cld
mov
adc
std
mov
push
push
cdq
fistp
fs
push
loopne
cmp
stos
dec
cmps
test
jge
add
pop
rol
test
cs
jecxz
push
sbb
scas
rcl
fld
lock
dec
pushf
dec
inc
xor
sbb
xor
out
dec
adc
xor
mov
aaa
imul
push
cs
push
sub
movhps
pop
mov
scas
sbb
std
sbb
dec
xlat
and
repnz
cwde
xlat
jmp
cmps
mov
subps
sahf
sbb
aas
setg
sbb
add
int
test
xchg
xchg
adc
cmp
int
call
ins
add
pop
or
int3
ret
ins
pop
push
mov
add
xor
inc
aad
xor
cmp
mov
jns
adc
fisub
jg
scas
pop
(bad)
sub
jmp
or
add
hlt
bound
and
mov
add
mov
push
mov
xchg
push
int3
xchg
add
les
dec
popa
lds
adc
cmps
dec
mov
cmp
cmc
mov
inc
loop
fs
jae
call
pop
xchg
adc
xlat
xchg
jge
or
mov
cwde
mov
add
sbb
push
popa
inc
movs
pop
mov
sub
mov
bound
ret
or
push
add
jo
inc
or
lea
xor
mov
or
xlat
or
or
push
or
jp
pop
or
gs
mov
pop
dec
add
shr
aam
scas
popf
pusha
jnp
add
rcr
or
push
jo
push
mov
das
call
bound
push
leave
stos
inc
icebp
adc
mov
cli
push
jne
push
ins
ror
pop
je
outs
fs
pop
inc
sar
mov
push
add
dec
shl
sti
mov
sub
xor
movs
sub
jns
je
mov
jnp
ficom
jge
cld
pop
in
pop
movs
jl
push
outs
imul
js
fadd
inc
imul
jg
test
dec
dec
cmp
and
cmc
popa
jb
gs
shl
pushf
dec
mov
arpl
(bad)
cmp
or
fiadd
inc
stc
movs
adc
pop
fmul
addr16
xor
xor
adc
add
int3
ja
shl
dec
les
fldcw
adc
xchg
mov
add
in
int3
mov
scas
jne
cmp
push
lea
call
cmp
shl
sub
int3
aad
lods
cmp
or
sahf
add
xor
mov
cwde
and
add
cmp
pushf
push
das
jmp
dec
cmp
add
push
in
dec
and
dec
or
pop
in
pushf
xchg
(bad)
mov
cs
test
setns
(bad)
pop
ret
push
adc
or
jecxz
popf
sbb
add
or
dec
lea
ja
(bad)
js
cmp
test
adc
push
sub
jmp
add
je
xchg
mov
mov
mov
push
jbe
or
shl
(bad)
jl
rol
lea
push
add
int3
cmp
ficomp
or
mov
mov
mov
mov
aas
ficomp
movs
pop
mov
and
and
icebp
sbb
cmp
mov
or
adc
sbb
test
mov
(bad)
push
gs
and
lahf
dec
or
pop
jmp
call
inc
adc
fcom
and
inc
or
(bad)
cmp
fwait
jae
mov
aam
xor
dec
push
shr
jmp
mov
mov
sbb
rol
cmp
ins
xor
arpl
jno
call
sub
jge
adc
push
xchg
mov
mov
add
test
xchg
dec
loop
fist
or
loope
add
test
push
lahf
test
push
xchg
pop
inc
push
rol
rol
dec
push
and
add
loop
test
enter
or
mov
retf
inc
or
push
clc
je
mov
repnz
loope
loope
jge
hlt
(bad)
loope
lds
adc
loop
cdq
test
push
add
test
inc
jno
add
xor
sahf
test
push
ins
push
inc
mov
lds
sbb
loop
inc
xchg
mov
daa
add
pop
js
cmp
xlat
dec
or
mov
or
fcomp
inc
je
scas
imul
push
push
icebp
pop
add
scas
test
ins
mov
lds
lds
jnp
mov
out
fld
fsub
add
call
cdq
pop
jecxz
and
xchg
dec
rcl
aam
push
in
push
dec
repnz
fadd
int3
add
cdq
int
pop
pop
xchg
push
in
or
sub
add
imul
pop
inc
pop
loopne
or
rcl
inc
jno
mov
pusha
xchg
adc
aaa
loope
pusha
adc
add
addr16
xchg
pop
add
(bad)
xchg
xor
in
daa
in
pop
in
dec
xchg
mov
in
push
fstp
dec
push
push
(bad)
add
out
add
inc
and
ins
sbb
xor
lock
dec
stos
cs
mov
and
cmp
out
or
sbb
dec
jmp
iret
xchg
sub
mov
inc
movs
jge
stos
inc
lds
pop
pop
pop
jecxz
ja
pushaw
sbb
aad
add
aad
adc
push
jnp
vsubsd
(bad)
fidiv
mov
sbb
add
sbb
dec
mov
adc
sbb
(bad)
mov
mov
sbb
or
xchg
fldcw
out
imul
mov
push
mov
push
call
dec
test
out
push
ror
mov
add
(bad)
pushf
or
mov
pop
push
push
pop
fbld
inc
xchg
push
sbb
inc
stos
mov
pop
vmread
arpl
mov
cmp
mov
fidivr
call
call
add
cmp
sub
mov
ss
mov
es
mov
push
mov
ins
fldenv
mov
inc
push
push
dec
mov
mov
or
dec
pop
pop
pop
addr16
sbb
jmp
cmp
test
jmp
sbb
movs
inc
xchg
push
jmp
add
pusha
push
mov
mov
(bad)
test
dec
sbb
sahf
and
or
jmp
stos
sub
add
push
shl
out
js
leave
mov
sbb
sbb
mov
les
das
or
lods
add
fidiv
outs
outs
push
(bad)
push
loope
inc
enter
les
cmp
popa
mov
cmp
(bad)
dec
or
jmp
inc
mov
in
aas
in
jne
mov
add
es
dec
pop
lds
das
ret
mov
jne
ins
shl
sbb
xor
jne
dec
dec
daa
call
inc
and
fwait
mov
das
adc
shl
call
fsubr
jbe
push
fnsave
push
mov
xchg
cmp
pop
inc
and
or
xor
in
jne
in
or
or
sub
enter
push
adc
jl
clc
in
scas
lock
imul
dec
scas
loopne
fcomip
pop
scas
bound
pop
aaa
or
pop
ins
and
adc
mov
mov
mov
sub
stos
mov
icebp
ret
sbb
mov
jb
out
js
mov
and
stc
repz
and
cmps
pop
ret
and
hlt
pop
in
sbb
and
inc
and
loop
or
inc
xchg
pop
leave
mov
and
or
pop
ror
sbb
xor
in
(bad)
and
push
cmp
add
jmp
xor
and
inc
sbb
push
pop
in
push
lds
push
sbb
add
jo
cwde
dec
pop
sub
rcl
icebp
xlat
(bad)
out
xlat
dec
cwde
repz
fsub
inc
repnz
pop
outs
repnz
in
and
popf
cmp
outs
and
cmovbe
mov
push
dec
adc
fsubr
xchg
push
or
lahf
movs
jmp
daa
sti
and
inc
imul
ja
or
xchg
xor
repnz
repz
les
add
in
xor
xchg
and
xchg
repz
mov
and
cmps
jno
es
repz
dec
pop
mov
xchg
repz
popf
mov
stos
xchg
xrelease
mov
out
pop
push
cmps
pop
sbb
(bad)
rcl
mov
mov
mov
pop
ror
push
jl
add
out
(bad)
enter
jecxz
or
cmp
or
in
cwde
dec
loop
pushf
jge
adc
mov
push
hlt
cmps
xor
sub
shl
xlat
xlat
mov
push
test
push
(bad)
cli
rcr
cmc
das
nop
cmc
cmp
add
sub
or
and
out
mov
sub
out
mov
mov
add
mov
xchg
add
lahf
push
mov
inc
cmp
cmc
or
in
dec
jne
shr
and
add
xchg
jo
add
pop
ror
bound
push
sub
add
mov
and
push
or
sbb
movs
clc
adc
neg
div
sub
das
mov
(bad)
mov
or
sub
sub
push
dec
cmp
sub
and
xor
pop
icebp
repnz
(bad)
not
inc
mov
clc
adc
cmps
push
cmp
inc
sub
xchg
mov
and
sub
sbb
jmp
dec
inc
sub
sub
rcr
test
ror
jns
pop
mov
cmp
sar
or
fimul
push
loopne
push
cli
call
mov
cli
iret
nop
xchg
sbb
push
dec
sub
enter
dec
mov
or
je
push
outs
xchg
sbb
sub
loopne
jb
push
sub
fdivr
jne
or
rol
and
add
xchg
pop
xor
sbb
add
aaa
sti
pop
sti
xchg
sti
sbb
and
retf
das
xchg
push
shl
sub
fdivr
dec
sub
fdivr
pushf
sub
fdivr
ins
sub
call
fdiv
ja
mov
js
or
pop
or
das
cmps
jo
pop
popf
or
jno
(bad)
nop
sbb
das
pop
inc
inc
test
mov
and
add
add
cmp
icebp
sbb
or
cmps
(bad)
fcomp
ficom
cmp
sub
icebp
lds
add
dec
movups
dec
div
or
jp
cmp
xor
sbb
cdq
or
popf
inc
sbb
in
adc
pop
aam
retf
cmp
jno
sbb
cmp
and
ss
push
pop
stos
dec
or
sbb
xor
ret
jmp
cwde
add
movs
xchg
push
adc
push
sub
stos
xor
ret
xor
in
push
add
sub
push
inc
mov
adc
push
sahf
xor
adc
mov
sbb
and
jne
pop
fist
test
jno
pop
pop
in
std
rol
retf
adc
shr
pushf
adc
mov
or
inc
dec
out
fdivp
or
push
test
dec
popf
test
repz
ins
fnsave
jns
ss
js
jno
xchg
jge
pop
dec
imul
mov
pop
fimul
imul
or
movs
mov
into
inc
minps
test
das
cwde
rcr
rcr
das
sahf
and
mov
xor
push
push
dec
je
clc
retf
imul
imul
jae
in
inc
imul
jecxz
push
push
inc
ins
and
jae
pusha
test
es
xor
retf
or
inc
js
popa
and
loopne
mov
push
or
daa
jae
sbb
or
movs
sbb
out
retf
push
popa
xchg
xchg
stos
add
outs
or
outs
cmp
push
in
xchg
aam
outs
jo
arpl
dec
adc
int
test
(bad)
dec
outs
outs
sbb
shl
mov
xchg
jmp
mov
add
sahf
or
and
adc
ret
sub
adc
mov
or
jo
iret
pop
inc
ins
jns
push
adc
lock
addr16
mov
mov
shl
pop
stos
inc
nop
push
imul
sub
pop
out
fucomip
sub
test
jmp
pop
add
fild
mov
add
and
push
jne
arpl
sbb
cmc
leave
mov
lds
popa
jp
sbb
loope
add
addr16
jecxz
movs
stc
pop
jmp
loope
gs
sbb
xchg
xor
sub
icebp
dec
add
inc
mov
cmp
inc
inc
call
xchg
sti
mov
adc
pop
in
outs
dec
pop
pop
or
dec
ss
in
dec
in
cmp
cli
rol
(bad)
sbb
fcomp
adc
dec
imul
mov
dec
xchg
sbb
or
xchg
pop
outs
adc
push
xadd
nop
sub
jg
je
sbb
pop
pop
outs
xlat
pop
mov
ja
daa
call
scas
pop
and
push
sbb
sbb
pop
xor
inc
sbb
add
fld
outs
outs
iret
mov
call
add
ds
push
inc
sub
and
cmp
test
fld
adc
pop
and
mov
das
test
gs
test
mov
pop
dec
inc
inc
aam
mov
rcl
movs
aas
adc
cwde
adc
adc
sub
cmp
push
sub
sbb
cmp
aas
enter
dec
arpl
xchg
sbb
aam
adc
imul
or
(bad)
loopne
xchg
mov
frstor
add
mov
jae
cmp
test
mov
add
or
push
rol
cmps
push
cmp
pop
add
jne
fdivr
ins
call
ins
lds
jns
dec
outs
imul
mov
ins
add
out
cmp
aad
xor
test
lea
xor
jbe
ins
xor
mov
inc
cmps
rol
adc
jne
enter
and
pop
gs
cmp
leave
or
bound
fild
adc
arpl
clc
test
push
jo
push
jo
mov
dec
sbb
sbb
sbb
jne
push
add
jne
out
or
stos
or
js
jns
bound
xor
cmp
ins
ins
push
xor
push
pop
lods
int
and
push
pop
mov
add
idiv
stos
push
daa
pop
add
mov
stos
pop
daa
push
or
shr
or
push
mov
or
mov
add
jae
or
nop
out
or
out
add
in
in
ds
sbb
xchg
repz
imul
imul
mov
jno
push
dec
add
not
arpl
cwde
adc
add
sub
sub
movaps
xor
(bad)
ss
jae
sbb
inc
xchg
push
inc
mov
sbb
push
mov
in
or
mov
xor
mov
test
fidivr
or
adc
sbb
sbb
cmc
call
sub
add
sar
test
sbb
dec
div
or
sbb
add
dec
inc
sub
or
arpl
inc
scas
jmp
mov
js
sbb
cmp
xchg
movs
sbb
or
repz
nop
cwde
jmp
mov
pushf
enter
bound
mov
cmp
adc
test
les
jge
jnp
add
aam
mov
cmp
nop
push
pop
dec
dec
leave
xor
xchg
gs
and
gs
test
bound
or
aaa
out
sub
or
or
mov
ja
mov
dec
or
not
or
loopne
adc
jmp
(bad)
test
or
ds
pop
adc
and
inc
popa
xchg
inc
imul
fbld
scas
lods
inc
ret
sbb
outs
or
push
rcl
repz
ins
fidiv
lea
aad
pop
jbe
pop
(bad)
sbb
push
retf
mov
sbb
cmp
dec
js
push
push
and
scas
(bad)
jecxz
sbb
or
push
sbb
cmps
jecxz
imul
sbb
dec
fs
pop
jo
loopne
dec
iret
ffree
or
and
arpl
sbb
ins
rcl
call
mov
and
adc
inc
push
in
popa
popa
mov
cmp
and
cmp
and
push
adc
lods
push
dec
push
dec
dec
je
push
or
pop
xor
inc
inc
leave
mov
add
xor
mov
nop
add
xchg
cmp
mov
xor
inc
packssdw
inc
inc
adc
ins
add
sub
xchg
fild
dec
outs
ins
push
out
cmp
lea
(bad)
imul
or
lea
jne
imul
xor
or
sbb
xor
xor
mov
shl
push
pop
mov
adc
imul
pop
push
add
call
sbb
adc
rcr
adc
mov
mov
stc
cmp
daa
add
fistp
add
mov
(bad)
push
dec
(bad)
jmp
xchg
push
adc
jmp
adc
and
scas
ja
jmp
movs
push
mov
aam
pop
dec
cmps
or
or
jbe
dec
jo
inc
imul
adc
iret
inc
rcr
adc
inc
aad
mov
adc
imul
rcl
(bad)
dec
int
sbb
int3
cmp
fucomip
in
mov
arpl
cmp
sbb
xchg
loopne
xor
ds
adc
in
jae
bound
jmp
sub
lahf
jb
cmps
in
sub
push
sbb
stos
mov
push
lahf
push
and
sub
dec
sbb
mov
ins
dec
test
retf
sbb
sbb
push
popa
ud2
imul
sbb
stos
call
inc
and
pop
pop
xlat
cmp
xchg
je
je
sub
dec
je
xlat
je
icebp
jbe
loopne
mov
out
or
dec
shl
push
pop
div
test
loope
adc
or
sbb
pop
mov
mov
pop
add
dec
loopne
pop
mov
fcom
arpl
cmp
call
add
sub
or
sbb
test
(bad)
adc
xor
and
add
push
sbb
sub
sbb
adc
icebp
pusha
ds
jo
jbe
addr16
(bad)
sbb
sbb
xchg
cdq
and
in
out
push
sub
or
and
adc
xor
movs
cdq
inc
dec
fcom
jnp
inc
ja
cmp
or
sbb
add
sbb
ins
mov
inc
das
ins
ins
jmp
jb
cli
or
ins
adc
mov
sbb
out
pop
enter
inc
sbb
inc
xchg
or
sbb
xchg
and
mov
mov
mov
rcr
inc
sbb
fst
in
mov
cmp
out
or
fisttp
cmp
or
adc
sub
sbb
shl
add
or
mov
adc
cmps
inc
imul
adc
sub
cmp
push
sbb
and
or
inc
imul
shr
repnz
in
or
sbb
or
xor
xlat
lea
pop
push
or
das
ins
jbe
cmp
and
push
dec
popa
jae
iret
hlt
sbb
adc
pop
lock
xor
imul
je
fbstp
ficomp
mov
sbb
adc
push
adc
ja
inc
js
or
fisttp
leave
pop
add
call
or
push
jo
aas
movs
cmp
mov
xlat
adc
and
sbb
mov
les
adc
sub
sbb
mov
add
push
pop
adc
xchg
lock
mov
adc
js
cmp
ret
in
call
pop
test
jne
int3
clc
or
push
shl
pop
adc
jae
mov
inc
fld
scas
push
mov
pop
int3
push
push
lahf
inc
xchg
loopne
cmp
dec
rcr
pop
scas
inc
arpl
or
stos
pop
sbb
and
sti
push
not
addps
jg
rcl
or
fs
mov
pop
push
or
enter
pop
test
or
pop
(bad)
aas
add
jo
sub
and
sub
stc
inc
movs
test
inc
out
jo
test
mov
sbb
jb
jne
and
je
cmps
and
iret
in
add
mov
aam
adc
or
ret
jmp
sbb
outs
arpl
ins
mov
stc
arpl
lods
cmp
dec
pop
and
rcl
and
popa
jb
mov
test
inc
inc
ins
outs
outs
xchg
mov
fsub
sbb
sbb
adc
in
and
pusha
push
xchg
popa
jo
add
dec
repnz
arpl
bound
add
cmp
bound
pop
ins
xchg
xor
out
and
popa
jb
dec
ret
pop
pop
les
rcl
js
push
adc
pop
ror
bound
jmp
xchg
js
pusha
sub
xchg
mov
enter
lea
bound
sbb
ds
pop
pop
mov
jb
inc
fsub
imul
mov
inc
push
mov
imul
imul
jmp
xor
dec
mov
mov
adc
and
sbb
mov
push
xor
and
cmp
xchg
ins
and
outs
and
sbb
and
hlt
mov
das
mov
mov
adc
out
sbb
sbb
mov
and
das
outs
jne
and
or
pop
sub
adc
mov
loope
push
jmp
lea
add
jb
cmp
fld
adc
jo
cwde
js
and
or
aaa
shl
push
loopne
push
adc
xor
adc
dec
or
adc
or
les
daa
fldz
mov
pop
dec
imul
cmp
inc
inc
jge
and
outs
push
push
je
jmp
test
adc
imul
dec
push
sbb
mov
add
out
xlat
or
pop
jb
sbb
xor
loop
sbb
cmp
push
add
adc
xor
dec
xlat
loopne
rol
adc
enter
test
cmp
sbb
push
inc
jo
rol
sbb
pmuludq
cmp
mov
cmp
aaa
outs
jne
mov
daa
pop
fisttp
jo
sbb
ret
sbb
stos
and
mov
dec
(bad)
imul
adc
dec
mov
jns
adc
push
cmp
cwde
mov
shl
sub
sub
xlat
cmp
(bad)
push
adc
shr
in
sub
push
pop
mov
add
or
bound
push
adc
jbe
or
push
stos
int3
fucom
in
xor
frstor
out
push
jo
pop
je
adc
pop
enter
imul
push
imul
sbb
je
xchg
dec
dec
je
sub
ficom
or
es
add
cmp
sbb
fldcw
ins
je
sbb
adc
ins
je
or
mov
add
push
pop
(bad)
shl
dec
loope
scas
rol
xor
jmp
retf
mov
sbb
cmp
ret
fwait
out
xor
pop
or
adc
mov
lahf
stos
je
push
jbe
scas
repz
aas
sbb
xchg
mov
fsubr
jne
pop
add
out
(bad)
adc
push
sub
sbb
xor
cmps
pop
(bad)
cmc
add
add
mov
pop
mov
rol
test
(bad)
lock
and
mov
aad
xor
mov
xor
ins
or
cmp
ins
and
xlat
and
dec
xor
lock
mov
jbe
sbb
mov
out
hlt
loop
in
cmp
sub
sbb
jmp
jg
stos
jne
outs
or
push
shl
ja
inc
push
push
and
fsubr
cs
pop
cdq
sbb
leave
add
xor
inc
jns
pushf
cmp
xchg
sbb
cmova
enter
sub
xchg
rol
gs
das
jb
add
nop
inc
jb
mov
cmps
nop
jb
das
(bad)
out
jo
or
add
push
gs
add
add
xchg
das
pop
or
ret
jmp
inc
lock
xor
aaa
dec
or
sbb
fs
inc
push
add
cmp
xchg
pop
push
adc
or
mov
out
sbb
js
or
out
sbb
addr16
jb
lock
out
shl
and
dec
pop
or
out
xor
and
mov
cmp
and
sti
fidiv
inc
jns
mov
or
push
or
pop
leave
adc
outs
faddp
fiadd
outs
jb
mov
adc
ins
ror
ficom
mov
aas
adc
out
popa
or
fsubr
and
or
add
sbb
cmp
pop
ins
dec
or
movs
lock
outs
cvtps2pi
pop
aas
mov
jmp
inc
sti
or
jne
push
shr
imul
ret
jg
pop
cs
fld
adc
shl
mov
xor
jae
cmps
bound
outs
iret
fcomp
cmp
out
mov
cmp
add
dec
add
mov
pop
loopne
push
push
jecxz
iret
and
pusha
scas
pop
cwde
push
mov
std
pcmpgtw
xchg
daa
ja
sbb
iret
dec
(bad)
je
je
sbb
xchg
push
sbb
ja
(bad)
sbb
cmps
rcr
jg
push
dec
mov
addr16
adc
jae
imul
dec
sub
xcrypt-ecb
cmps
or
mov
push
adc
add
and
sbb
bound
sbb
push
add
adc
xlat
adc
push
ins
push
sbb
arpl
add
xchg
mov
mov
or
pop
shl
cwde
push
movzx
push
push
add
adc
adc
mov
cmps
das
adc
sub
rol
(bad)
dec
xor
pop
mov
mov
cs
bound
(bad)
fist
sub
out
add
out
mov
and
jmp
scas
jmp
xor
lods
outs
push
mov
out
and
or
fisttp
ja
adc
xor
dec
mov
mov
aas
adc
mov
inc
lds
adc
add
iret
adc
les
(bad)
adc
mov
add
fwait
bound
push
addr16
les
add
push
ret
and
loopne
fisttp
iret
dec
jg
push
and
les
push
push
xlat
outs
adc
sub
mov
aaa
lahf
or
adc
add
test
adc
lahf
or
imul
popa
push
push
pop
add
stos
or
sbb
ss
sbb
jg
mov
add
dec
add
mov
les
sbb
ins
xor
jg
jge
fwait
sbb
add
stos
push
add
add
ja
mov
jg
mov
pop
outs
mov
push
xor
mov
outs
xor
inc
(bad)
pop
or
ja
inc
sub
mov
adc
inc
adc
ins
adc
pop
mov
sub
pop
push
mov
outs
and
push
js
pop
out
push
cmps
jo
shl
inc
outs
inc
inc
dec
mov
daa
adc
push
or
jg
out
dec
mov
sbb
lahf
xchg
lahf
cmps
inc
dec
xor
ja
nop
push
dec
mov
mov
add
pop
pop
mov
adc
push
add
and
sbb
xchg
(bad)
adc
mov
adc
addr16
packuswb
or
push
pop
outs
(bad)
sub
das
not
push
xchg
sub
pop
pop
inc
ins
inc
xor
addr16
fwait
call
shl
add
mov
and
push
push
outs
jo
fmul
aaa
mov
cmp
add
mov
push
adc
dec
push
scas
clc
ret
ret
push
mov
jo
adc
dec
push
(bad)
mov
add
shrd
dec
mov
jnp
sbb
lods
std
mov
pop
mov
pop
aaa
add
jnp
loop
add
lock
and
loopne
je
(bad)
std
xor
push
add
pop
add
movs
cmp
lea
mov
rol
lock
or
leave
push
dec
pop
or
dec
xlat
push
push
test
xor
gs
adc
lods
and
adc
adc
lea
movs
mov
adc
mov
sub
sub
or
cmp
pop
cmp
push
and
das
mov
outs
fcom
leave
test
dec
jno
jecxz
outs
test
inc
sbb
adc
inc
bnd
dec
rol
daa
mov
push
sub
in
ss
jno
ret
fst
call
pop
imul
mov
pop
add
xor
jl
test
or
cmc
mov
out
cmp
imul
test
adc
inc
aad
outs
mov
cmp
xor
call
pop
jmp
arpl
neg
push
and
dec
ss
sub
or
mov
sub
sub
fs
dec
inc
jo
push
dec
and
sbb
inc
mov
aas
jg
lods
adc
dec
lahf
cmp
mov
xchg
mov
push
je
or
or
adc
shr
aas
or
jle
fiadd
aas
or
pop
mov
lahf
push
add
dec
add
cdq
cs
cmp
push
dec
push
dec
pop
jmp
clts
add
ins
jae
add
rol
pop
xor
ss
or
mov
dec
les
call
call
mov
sahf
mov
inc
sub
aaa
(bad)
ins
and
scas
in
lods
add
jnp
jge
cdq
pop
dec
jno
in
les
loop
jno
aas
mov
jmp
push
dec
mov
mov
out
push
cli
or
mov
sbb
clc
add
mov
out
or
jp
add
xor
mov
jne
popa
outs
mov
fst
add
cmp
add
jmp
or
cwde
push
xchg
jo
js
jo
pop
pushf
out
fwait
aam
mov
mov
and
lods
add
popa
in
test
hlt
cmp
leave
fstp
mov
imul
or
or
mov
lods
das
push
daa
or
push
ror
xchg
push
add
add
pop
test
clc
les
std
lods
cwde
rcl
push
das
mov
add
ja
pop
jno
sub
cld
push
scas
stc
pop
(bad)
push
clc
inc
xchg
push
push
inc
int3
lods
out
fidivr
pop
cs
push
fs
in
xor
push
mov
push
sbb
mov
adc
adc
js
(bad)
push
lods
pop
cs
mov
cmp
or
or
push
sub
cmp
repz
je
jl
out
ds
lock
sbb
cmp
jns
rcl
fdiv
jo
scas
idiv
out
mov
call
out
idiv
pop
xor
jle
cmp
lahf
out
sahf
je
xchg
cwde
shr
mov
popa
push
in
jo
cmp
jo
bound
or
inc
cmp
ds
sar
arpl
push
xor
iret
jnp
repz
fcomp
jns
loope
inc
fs
dec
push
ins
xchg
sahf
out
out
adc
pop
pop
lahf
out
movs
pusha
mov
data16
(bad)
cmp
add
cs
push
repz
fisttp
add
dec
push
sub
push
fs
(bad)
push
xchg
push
pusha
gs
gs
repz
push
mov
mov
out
cmp
pop
and
mov
push
sub
jo
inc
enter
sahf
ja
push
je
js
jl
enter
out
sub
add
clc
outs
cmps
push
loopne
cmp
mov
fs
sahf
neg
call
jl
adc
ds
into
in
push
inc
push
cwde
mov
or
and
push
mov
sbb
inc
popa
dec
push
sbb
or
jnp
add
test
mov
and
and
inc
les
xchg
jnp
test
rcr
aas
icebp
cs
mov
or
and
sbb
call
pop
lock
std
push
add
jge
mov
jnp
pop
push
fimul
out
loopne
xchg
or
ret
lods
stos
mov
maxps
repnz
cmp
add
iret
mov
pop
mov
ud2
sahf
mov
pop
adc
lods
ds
inc
in
jne
adc
xor
mov
xadd
nop
mov
add
jg
retf
xchg
bound
add
dec
sbb
retf
xchg
arpl
add
pop
stc
in
lock
mov
jecxz
add
and
stos
or
mov
and
pop
add
add
mov
sub
push
sub
imul
xor
sub
aas
push
lock
das
scas
wrmsr
bound
lock
inc
xor
rdmsr
push
rdpmc
pop
out
pop
xor
xor
dec
sub
ins
getsec
add
mov
add
outs
cmp
(bad)
cmp
shl
(bad)
add
cmp
(bad)
ds
(bad)
adc
jo
ds
(bad)
add
mov
jno
inc
add
inc
add
add
xchg
sub
call
scas
div
inc
add
inc
add
dec
add
icebp
call
add
xlat
and
jb
fidiv
sub
cmovle
ja
dec
add
push
add
push
sar
push
mov
sbb
jns
push
jb
sahf
in
jb
lock
jp
push
add
lahf
scas
addps
jmp
cmp
inc
push
loop
cvtdq2ps
cmp
pop
out
minps
jnp
add
pop
add
shl
jmp
jg
bound
packsswb
stos
fs
cld
repnz
add
add
push
adc
punpckhdq
mov
jmp
or
dec
(bad)
mov
cmps
call
movq
cpuid
retf
pop
ret
jo
test
jno
lds
je
xchg
mov
fwait
je
xchg
jne
jno
adc
pcmpeqd
lods
ja
mov
stos
scas
jmp
jns
mov
jp
out
or
jg
jnp
cmc
jl
mov
jge
mov
(bad)
xor
movq
pop
out
or
cmp
sub
je
mov
mov
lahf
mov
add
mov
jne
xchg
mov
lods
mov
nop
jnp
jle
mov
scas
jmp
out
jg
scas
jmp
nop
dec
setno
(bad)
mov
sete
setne
lods
imul
seta
cwde
mov
divps
setp
repz
inc
xlat
je
xor
adc
std
xor
test
cmp
push
dec
pop
or
sub
pop
mov
or
leave
mov
add
and
sti
xor
xchg
rol
push
bound
jo
push
push
push
sub
ror
fcmovu
mov
or
push
mov
inc
adc
inc
(bad)
adc
pusha
and
fs
ja
add
push
xchg
push
test
movs
inc
ins
popa
mov
mov
sub
or
add
je
mov
dec
inc
or
adc
adc
rol
ins
add
bound
xor
je
nop
pop
jg
cmovns
ins
les
fs
dec
add
inc
mov
arpl
stc
bound
pusha
mov
test
add
movs
mov
add
mov
sbb
jnp
adc
add
sbb
imul
fadd
sub
and
adc
(bad)
mov
adc
pop
shl
or
leave
aaa
add
jbe
retf
push
and
mov
adc
and
jae
ret
(bad)
cwde
push
iret
mov
sub
inc
add
jnp
in
pop
sbb
dec
outs
iret
or
sbb
dec
push
test
add
or
stos
jae
adc
sbb
jmp
mov
dec
imul
sub
retf
adc
ror
sub
lods
sub
add
xor
sbb
and
cmp
call
xchg
ins
or
(bad)
jmp
and
xchg
push
mov
adc
or
rcr
or
rcr
add
lods
xor
jg
adc
inc
jge
cmp
cmp
movs
inc
cdq
das
or
imul
adc
jae
mov
and
or
push
pusha
call
je
cdq
push
xchg
mov
sbb
adc
gs
adc
je
or
stos
dec
sbb
das
cdq
lock
add
cmps
rcl
lock
cmp
cmp
dec
or
lock
xor
loope
inc
stc
add
lods
mov
dec
sbb
stos
adc
adc
cmp
mov
ins
push
inc
sbb
das
or
lea
into
call
push
sub
ins
lods
add
cmps
adc
sbb
loope
out
cmp
repz
(bad)
dec
cmp
movs
sbb
mov
mov
push
ja
movs
add
stos
imul
or
loop
ret
and
add
test
xor
fst
mov
inc
xor
adc
test
add
sbb
sbb
add
retf
xor
pop
jnp
mov
mov
stos
jecxz
mov
add
das
or
les
sub
aaa
pushf
or
xor
dec
xor
sub
addr16
pop
mov
loope
popf
sub
dec
mov
loope
popa
xor
jns
jo
clc
push
fadd
fist
mov
xchg
mov
sub
add
mov
jp
add
lds
or
pop
invd
fndisi(8087
push
fcom
out
or
add
adc
iret
sbb
push
push
rcr
movs
add
outs
sub
dec
xor
ins
push
xchg
adc
int
loopne
and
fst
xor
jnp
xor
leave
enter
and
nop
jmp
sub
cmc
sub
mov
inc
inc
add
cmp
pop
test
ins
mov
add
inc
arpl
adc
mov
jae
or
sub
icebp
daa
mov
movs
movs
sbb
das
and
popa
or
sub
sub
adc
mov
popa
add
stos
and
loope
test
mov
int3
adc
push
loope
loope
dec
xchg
sub
sbb
leave
or
add
mov
inc
popa
xor
popf
push
mov
mov
xor
fistp
add
cmp
mov
adc
ror
pop
mov
test
jmp
and
push
mov
xor
jno
push
mov
cmp
pop
sbb
bound
push
lods
outs
pop
jno
call
cmp
in
add
sub
test
lods
mov
fnsave
scas
mov
inc
xchg
in
push
and
repz
push
xor
jb
pop
out
xchg
push
and
stos
xchg
or
addr16
xor
cli
mov
mov
cld
das
sub
das
in
pop
add
mov
and
das
and
sub
aam
adc
push
mov
sub
mov
or
xchg
mov
in
sbb
jae
fmul
pop
shr
scas
or
movs
jne
push
in
jecxz
jno
add
rol
out
cmps
call
add
push
aas
data16
leave
call
jo
push
push
fst
mov
std
test
loopne
in
adc
cmp
cmp
push
ror
cmps
adc
pusha
mov
sbb
mov
or
adc
or
push
icebp
stos
or
push
lock
sbb
or
push
ror
pop
mov
(bad)
push
mov
retf
add
add
sbb
mov
lock
aaa
or
adc
pop
sbb
pop
pop
adc
inc
mov
or
in
or
and
pop
mov
add
push
mov
pavgb
pusha
stos
shl
pop
jg
sbb
push
or
push
mov
jne
cmps
adc
inc
add
push
xchg
jecxz
enter
or
dec
bound
ret
mov
sbb
das
mov
adc
sbb
add
dec
mov
push
xor
arpl
loop
pop
imul
pop
mov
sub
or
js
push
jne
xchg
pop
xor
add
mov
xchg
repnz
add
fld
sahf
fisubr
daa
cmp
adc
dec
push
xor
outs
jne
and
and
cmp
jne
push
pop
outs
loop
aad
aad
mov
mov
xchg
xor
pusha
lods
stos
adc
cs
sub
pop
in
pop
adc
addr16
add
xchg
add
adc
daa
dec
jge
test
in
jmp
add
mov
adc
aas
jl
adc
mov
aas
inc
outs
arpl
cmc
cmp
jge
push
or
sub
dec
jo
inc
outs
jnp
or
push
pop
push
sub
and
shl
sbb
pushf
xchg
shl
xchg
pop
out
imul
dec
and
nop
aaa
push
and
pop
mov
push
xchg
fst
sub
cmp
fnsave
in
push
dec
inc
xchg
pushf
xchg
xchg
cmp
sub
mov
mov
mov
adc
inc
mov
xor
adc
test
adc
arpl
push
and
outs
inc
or
xchg
or
cmp
mov
or
sbb
test
jg
sbb
add
daa
add
bound
jns
add
sbb
sub
jno
sbb
sbb
mov
pop
jnp
add
pusha
out
sub
rol
sub
add
adc
and
push
add
or
loopne
or
pop
adc
push
xchg
inc
outs
xor
jecxz
fbld
imul
mov
ficomp
push
push
add
daa
or
mov
add
mov
iret
push
dec
retf
cmp
sahf
adc
cmps
ins
add
jecxz
add
dec
sbb
pop
inc
push
popa
bound
leave
loope
xchg
ror
sbb
fstp
push
iret
jo
shr
fld
adc
in
and
lods
loopne
cmps
imul
mov
icebp
mov
icebp
jg
push
popa
imul
out
stos
or
adc
inc
inc
es
xor
inc
addr16
mov
sub
repnz
add
cmps
push
xor
mov
shr
cwde
pop
lods
pusha
and
add
jmp
add
enter
cmp
lds
jnp
mov
xchg
in
sbb
mov
or
scas
pop
mov
cmp
push
lahf
jle
sub
inc
mov
mov
push
add
imul
sti
mov
std
pop
cs
clc
outs
out
push
cmp
mov
xchg
pop
mov
dec
pop
outs
add
movs
rcl
sar
push
shl
xchg
xchg
scas
cwde
push
and
push
fimul
jmp
adc
jns
sbb
or
mov
lods
fldenv
fstp
inc
inc
or
fld
inc
inc
fidivr
cli
or
(bad)
loopne
mov
mov
in
enter
in
add
mov
and
movs
fnstenv
sahf
fisubr
xchg
push
stos
sbb
pusha
or
fprem
das
pop
mov
or
add
aam
fnstenv
hlt
stos
frstor
xor
jl
add
adc
(bad)
push
cwde
mov
push
mov
or
std
cmps
xor
xchg
fld
pop
xor
xchg
clc
(bad)
sbb
daa
popf
pop
sbb
xlat
cmp
aas
call
or
mov
aam
call
sbb
ja
rol
pop
ins
and
and
add
mov
and
lods
retf
add
lea
mov
lea
add
(bad)
aas
pop
rcl
mov
bound
out
rcl
pop
cmp
inc
popf
pop
sbb
call
add
add
cs
stc
cmp
and
mov
call
and
aad
dec
pushf
aam
bound
out
pushf
das
call
dec
sub
push
imul
stos
inc
push
mov
int3
cmp
push
mov
in
les
enter
dec
inc
mov
mov
push
dec
cmp
nop
cld
pop
test
sahf
push
fmul
add
test
dec
mov
sahf
aam
or
push
push
je
and
repz
push
sbb
aad
mov
fwait
push
call
pushf
push
mov
(bad)
add
push
push
cmp
push
push
fbld
idiv
cmps
idiv
cld
push
cmps
cs
push
test
(bad)
lods
not
push
mov
ds
inc
sbb
dec
cwde
mov
pop
mov
push
mov
adc
shl
aam
jbe
dec
mov
mov
div
mov
fsubp
sub
cwde
(bad)
inc
aam
mov
mov
cmc
push
aam
cmps
jmp
mov
test
(bad)
(bad)
mov
push
mov
retf
mov
lds
loopne
sbb
push
retf
lock
test
push
adc
push
and
outs
aad
xlat
pmaddwd
fiadd
test
fsub
fcomi
repnz
loope
(bad)
sahf
xchg
call
test
mov
mov
mov
je
mov
in
jmp
neg
fimul
xchg
sahf
and
pop
hlt
cwde
push
jle
xor
aad
xor
test
(bad)
sbb
inc
les
ret
out
les
dec
imul
das
leave
mov
out
repnz
and
sti
sub
sbb
pop
or
in
stos
inc
mov
mov
jmp
mov
sbb
pop
add
js
test
aas
fisttp
add
test
test
dec
add
xchg
xchg
cmps
in
cmps
ds
test
in
push
jl
test
mov
stos
pop
(bad)
jle
out
stos
(bad)
add
mov
push
stos
iret
ret
stos
inc
lods
mov
xchg
lods
in
lods
pop
lods
inc
mov
lods
or
lahf
jge
shr
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
and
in
pop
push
jo
outs
mov
retf
seta
test
dec
loop
aas
xchg
mov
stos
jge
xchg
mov
mov
(bad)
jb
in
in
pop
les
fisttp
jmp
mov
pop
das
pop
push
sbb
mov
cs
inc
mov
out
in
or
mov
in
mov
ss
push
adc
mov
outs
mov
pop
scas
mov
jb
psrlq
pop
pop
mov
and
je
pop
pop
pop
pop
icebp
ret
fadd
dec
les
mov
jg
(bad)
repnz
lds
test
out
ror
test
(bad)
aas
xchg
inc
adc
jp
mov
cmp
jmp
mov
seta
shr
add
cwde
mov
fld
out
add
outs
sub
bswap
enter
cli
popa
int
repnz
in
into
xchg
std
fs
xor
jns
retf
xor
cdq
in
leave
dec
mov
shl
repnz
add
push
(bad)
cmp
jns
aam
push
aad
add
push
dec
mov
leave
or
je
jo
mov
pop
dec
xor
cmps
fdiv
mov
jmp
and
inc
inc
pop
loope
mov
in
mov
xchg
cmp
or
inc
pop
addr16
jmp
mov
jb
js
add
rol
jo
mov
(bad)
aam
enter
bound
or
pop
cmp
add
push
jge
add
push
in
fmul
adc
inc
shl
add
sub
sbb
sub
adc
xchg
mov
repnz
inc
xchg
jb
adc
(bad)
cmp
mov
sbb
outs
add
mov
adc
and
inc
shl
dec
jge
cmp
jge
jb
or
dec
xchg
mov
sbb
push
jge
cdq
in
mov
cdq
test
sbb
add
mov
jge
cdq
mov
jge
mov
jb
call
push
add
call
sub
cmp
stos
das
and
test
sbb
iret
fs
or
adc
add
mov
mov
outs
arpl
add
fwait
or
mov
js
push
dec
add
cmp
push
sub
and
sub
pushf
xor
(bad)
push
ins
ins
mov
push
xor
xor
inc
nop
and
pop
xor
movs
lds
enter
adc
cld
cmps
add
mov
adc
jb
cmps
lods
outs
shr
add
sub
and
push
test
imul
nop
pushf
jmp
push
dec
add
ins
xchg
mov
dec
push
dec
inc
ja
lahf
or
movs
push
xchg
movs
les
mov
jmp
xchg
sub
stos
ins
xchg
sub
push
movs
xchg
cdq
adc
dec
xchg
dec
mov
xchg
inc
mov
xchg
push
sub
cmp
mov
jmp
ds
bound
inc
xchg
in
in
test
and
fwait
out
fsub
jns
mov
or
out
mov
xchg
in
xlat
jmp
sub
dec
or
sbb
sub
mov
push
xchg
inc
sub
imul
stos
sub
xor
mov
shl
sub
leave
sbb
push
imul
push
bound
(bad)
jns
and
mov
test
jns
mov
jmp
inc
dec
adc
sub
sub
bound
in
mov
inc
jns
mov
stos
ins
xlat
adc
stos
inc
xchg
cdq
xchg
xor
xchg
push
adc
xchg
sti
punpcklbw
movs
push
sbb
add
mov
in
call
shr
in
sub
fld
add
in
fsubr
sbb
push
mov
push
pop
dec
ins
inc
and
mov
ja
enter
ins
test
daa
sar
ja
mov
fnsave
(bad)
in
loop
push
loope
(bad)
sub
je
ja
jns
or
aaa
xchg
fmul
push
and
add
or
inc
mov
nop
push
jno
mov
add
mov
ja
push
or
mov
or
test
stos
mov
hlt
mov
xchg
lea
aam
leave
call
mov
sub
adc
test
bound
lea
push
mov
cmps
jge
inc
or
xor
inc
lea
and
mov
and
xor
call
sbb
lea
sub
inc
mov
adc
mov
sub
xchg
loop
lods
in
xchg
sub
push
test
sub
int3
(bad)
or
push
or
mov
sub
add
loope
jno
and
cmp
xor
test
add
test
in
lods
out
cmp
and
pop
add
in
sbb
test
inc
mov
pop
lahf
ffree
sbb
sbb
jns
fisttp
add
add
ss
jmp
pusha
or
stc
imul
aam
adc
xchg
adc
sub
sbb
fstp
push
enter
(bad)
pop
adc
bound
fbstp
inc
mov
sbb
xchg
or
scas
bound
push
push
pushf
mov
movs
adc
push
and
daa
and
arpl
adc
add
xor
jle
sbb
test
repz
sets
test
popa
or
push
gs
lock
pop
ror
pop
or
xlat
int
stos
push
add
int
cmps
adc
mov
int
and
and
ins
aam
int
pusha
test
dec
jne
dec
int
stos
inc
or
int
fld
jno
push
add
int
and
dec
add
push
int
jo
mov
stos
and
aad
add
int
adc
dec
add
add
int
push
add
nop
jne
add
sub
mov
int
pusha
test
dec
jne
aad
mov
add
add
xchg
pop
mov
aam
movs
pop
sub
lods
nop
pop
mov
inc
dec
sbb
inc
push
daa
pop
stc
adc
cld
mov
or
cli
adc
je
jne
push
cdq
pusha
add
dec
jle
mov
sub
hlt
mov
mov
jmp
popf
inc
pop
mov
inc
hlt
shl
xchg
jmp
inc
or
retf
sub
sub
add
add
xchg
fucomi
inc
cmp
outs
sub
inc
mov
imul
(bad)
pusha
retf
and
(bad)
cli
out
gs
cmp
and
pop
retf
jge
mov
retf
leave
and
adc
sbb
and
scas
cs
pop
in
mov
xor
pusha
sbb
shl
push
out
dec
repz
cmp
cmp
je
xchg
or
mov
add
add
lock
adc
or
nop
pusha
retf
push
xchg
and
pop
outs
cmp
push
push
and
push
add
and
jb
push
pop
sbb
pop
psubd
test
call
push
xchg
jae
inc
daa
inc
dec
jne
inc
push
cmp
or
and
xchg
lock
or
(bad)
sub
lods
ret
sbb
aaa
add
test
test
cmp
jecxz
push
cmp
adc
add
inc
dec
dec
cmp
and
adc
lds
(bad)
out
ud2
mov
or
pop
lods
sbb
dec
test
jl
inc
or
stos
xor
xlat
shl
add
jge
push
(bad)
addr16
popa
je
inc
ret
adc
cmps
push
xor
in
lock
dec
jne
dec
inc
push
iret
push
push
hlt
inc
or
cmp
or
dec
aam
adc
or
retf
push
imul
fld
adc
enter
loopne
adc
adc
dec
lods
(bad)
sti
pusha
dec
pusha
call
inc
pop
adc
mov
jmp
jmp
es
pop
shr
rcr
inc
cld
sub
fisubr
ss
cld
adc
mov
xlat
cmp
sbb
enter
xchg
inc
jmp
ja
add
push
cs
(bad)
leave
lods
adc
and
mov
in
mov
dec
stos
add
push
fiadd
pop
popa
addr16
mov
(bad)
add
inc
dec
sti
sbb
cmp
rol
sbb
sub
sbb
cs
outs
inc
loop
mov
lea
add
js
sar
mov
or
pop
jne
push
(bad)
jp
fmulp
movs
and
add
fwait
sbb
lods
jmp
outs
lock
dec
mov
push
icebp
push
hlt
iret
sbb
nop
retf
mov
lock
or
stc
mov
push
mov
mov
jge
fld
inc
mov
adc
push
aaa
pop
mov
gs
or
push
and
into
retf
jno
fmul
push
mov
adc
fsubr
or
jmp
imul
and
outs
mov
out
pop
lods
mov
mov
scas
popa
mov
xor
mov
cmp
jne
sbb
push
inc
dec
jne
scas
pop
imul
dec
inc
mov
jno
cmp
(bad)
mov
jmp
xchg
loope
lahf
jle
jo
jl
mov
cmps
fistp
outs
rol
mov
cmp
push
lock
mov
fild
js
dec
test
jl
inc
xor
inc
inc
sbb
add
fsubr
cmp
and
sti
xlat
sub
inc
inc
fsub
scas
jmp
xor
or
inc
dec
jne
mov
mov
lock
add
shl
cs
ret
fist
cmp
(bad)
stos
int3
enter
jmp
mov
xchg
add
inc
addr16
pop
add
or
sub
push
jle
push
push
cmp
jge
cmp
mov
jmp
sti
pop
sar
push
movs
nop
push
mov
ret
ret
mov
ret
add
cs
jae
mov
mov
mov
test
pop
ret
das
dec
(bad)
stos
cs
push
out
mov
ret
inc
out
mov
clc
rcr
fs
jne
jge
in
inc
test
out
jge
(bad)
(bad)
loope
lods
cld
cmc
or
add
and
repz
mov
pop
ja
xlat
repnz
add
adc
in
and
or
mov
dec
mov
add
aam
inc
je
loope
test
or
daa
pop
fidivr
inc
xchg
cmc
sub
push
fsub
xor
aaa
rcl
add
push
fdiv
gs
xchg
retf
fadd
aam
xor
leave
inc
rcl
dec
cmp
cdq
in
int3
retf
mov
add
repnz
mov
ss
std
xchg
clc
lock
ins
aad
inc
in
jne
(bad)
icebp
icebp
stos
add
inc
in
popf
cmp
loopne
jmp
call
nop
push
(bad)
jo
loopne
and
das
xor
or
imul
pop
sar
push
xchg
pop
psllw
sub
dec
push
inc
das
pop
daa
or
push
xchg
fistp
mov
in
cs
inc
xor
lods
jnp
jne
sti
push
loope
test
xor
fnstenv
je
dec
cdq
inc
pop
mov
pop
push
(bad)
push
push
pop
repz
int3
inc
pop
push
mov
sbb
popa
cmp
outs
mov
pop
dec
aaa
inc
es
mov
fild
mov
out
jb
fbstp
inc
inc
dec
loop
jb
cmp
lock
outs
lock
dec
fsub
add
loop
lock
outs
xchg
jne
adc
push
in
mov
lods
jmp
xchg
adc
mov
and
and
mov
bound
cmp
sub
loope
inc
and
fmul
rcl
cmp
not
lods
add
adc
push
add
xor
pop
push
loopne
pop
daa
sbb
in
mov
pop
xor
stc
xchg
add
mov
add
cmp
adc
mov
adc
or
aas
sub
and
mov
push
inc
push
aaa
shl
ins
imul
xchg
add
jnp
xor
pop
jp
jne
aas
adc
mov
cdq
mov
cdq
push
dec
add
in
xor
mov
iret
add
xchg
shl
pop
and
out
clc
inc
pushf
push
(bad)
hlt
(bad)
retf
jle
sbb
adc
xor
adc
sub
adc
(bad)
in
imul
inc
add
sbb
enter
je
shl
push
push
xor
xchg
push
hlt
fsubr
aam
aaa
test
cmp
pop
fcom
movs
movs
mov
jae
add
mov
mov
sbb
xchg
out
add
sahf
clc
mov
jb
movs
in
sahf
sahf
int3
mov
div
mov
ins
jmp
sbb
dec
out
cmp
or
ret
outs
clc
ja
rol
cli
mov
mov
pop
sbb
(bad)
daa
call
add
sub
ret
idiv
lock
mov
nop
ins
dec
cld
sbb
push
ror
es
jno
(bad)
pop
outs
hlt
sbb
sbb
ja
out
lds
addr16
sub
pop
(bad)
nop
pop
cld
cld
addr16
enter
jno
les
or
mov
dec
div
pusha
jno
cld
popfw
sbb
fst
ror
dec
aam
sbb
add
shl
add
leave
mov
push
sysret
pop
add
mov
lods
loopne
mov
loop
rcl
(bad)
dec
add
and
add
and
daa
loop
jmp
mov
out
mov
dec
test
add
jno
xor
adc
ss
mov
push
addr16
xchg
inc
and
clc
test
adc
retf
xchg
mov
hlt
and
movs
rcl
mov
pop
test
push
and
push
push
dec
or
and
xchg
fild
leave
mov
mov
cmp
cmp
movs
jle
pop
sub
mov
dec
xchg
or
xchg
jnp
or
push
or
test
xor
js
or
call
mov
out
mov
mov
nop
retf
in
mov
inc
pop
setne
sbb
(bad)
stc
ret
inc
(bad)
pop
clc
xchg
xchg
jne
sbb
cmp
push
cmp
add
mov
or
xchg
inc
sub
sub
push
sbb
jmp
xor
push
sbb
repz
(bad)
xchg
cmp
mul
mov
lock
movs
fld
add
loopne
loopne
xchg
and
mov
jne
jecxz
jmp
mov
add
test
retf
add
or
mov
aas
ins
shl
fiadd
adc
push
jbe
cmp
add
in
or
dec
cmp
scas
aaa
add
mov
mov
adc
pop
adc
rcr
jne
dec
mov
pop
fidivr
shl
or
add
fild
mov
out
mov
pusha
or
popa
jne
bound
adc
xchg
xor
mov
in
push
les
aam
jl
xchg
adc
add
mov
add
cmp
dec
lods
xor
fst
mov
imul
mov
int3
mov
les
(bad)
mov
push
mov
xchg
dec
jb
pop
and
inc
enter
(bad)
gs
sar
push
shr
push
dec
(bad)
dec
push
lock
pop
jb
loope
test
aas
cwde
add
pop
xchg
imul
xor
mov
inc
les
pop
xchg
(bad)
cmp
jae
mov
xor
int3
(bad)
push
mov
aad
adc
or
push
mov
xchg
into
dec
jb
add
ret
add
inc
in
cwde
sub
mov
inc
loopne
jo
pusha
test
mov
test
mov
fadd
fdiv
xchg
fmul
or
fmul
cmp
inc
jle
gs
xchg
dec
mov
jle
pcmpeqw
sbb
shl
daa
add
fadd
sbb
add
push
ins
sbb
and
sbb
add
sbb
xor
lds
add
jb
inc
ror
ds
xchg
call
jne
dec
push
mov
pop
push
inc
dec
aas
rol
test
inc
sar
xor
push
cdq
rcr
add
loope
shl
pop
xor
mov
and
jp
pop
mov
jl
mov
dec
sbb
fisttp
int3
mov
xchg
inc
rcl
and
xor
cmp
fmulp
xchg
add
jne
pop
mov
ficomp
inc
jo
cli
test
call
mov
lahf
jnp
jne
cmp
jle
push
sub
push
adc
cmp
sub
imul
imul
pop
repz
adc
in
jne
js
add
or
or
sub
adc
(bad)
and
dec
inc
inc
push
test
push
sub
and
push
inc
pop
adc
ror
sub
inc
loopne
iret
cmp
jne
dec
cmps
sbb
inc
push
cmp
inc
add
mov
dec
mov
xchg
ret
(bad)
adc
push
mov
mov
adc
mov
clc
rcl
mov
jle
adc
jle
adc
out
ror
sbb
out
pop
inc
or
ja
mov
inc
cmp
test
repz
mov
loop
inc
adc
xor
rcl
and
push
and
or
test
mov
add
mov
jg
cmp
mov
cmp
push
xchg
cmp
add
mov
cmp
add
imul
mov
loope
sbb
inc
stos
(bad)
leave
(bad)
(bad)
rcl
push
mov
call
ds
inc
jmp
dec
adc
nop
adc
loope
mov
icebp
out
adc
sub
ret
sub
loopne
stc
rol
pop
loop
and
adc
mov
into
lods
aam
dec
sub
sar
push
and
jge
loopne
clc
pop
pop
mov
add
add
dec
test
inc
xor
xchg
pushf
push
mov
pop
sar
adc
mov
in
mov
adc
pop
mov
adc
in
mov
mov
data16
and
adc
and
into
xor
xchg
mov
imul
inc
jge
or
imul
inc
adc
lds
(bad)
push
clc
add
add
mov
push
mov
inc
test
jle
int3
mov
jp
popf
jle
pop
jnp
pop
jae
push
imul
outs
pusha
jle
pop
dec
ins
add
adc
jnp
xor
ins
stos
add
cmp
jmp
mov
addr16
test
xchg
mov
(bad)
loopne
out
add
hlt
sbb
dec
pop
mov
inc
call
add
inc
push
add
adc
in
inc
mov
dec
loope
test
shr
imul
ins
add
ja
jmp
repz
repz
aam
loop
lock
ins
ds
idiv
add
jmp
mov
and
mov
scas
pop
mov
sbb
or
sub
movs
loopne
add
add
xlat
mov
je
adc
push
je
inc
inc
in
clc
test
mov
cmp
mov
mov
popa
add
in
push
cmp
jne
add
cmp
dec
movs
mov
inc
sub
add
ins
cmp
icebp
into
test
jmp
(bad)
(bad)
int3
or
mov
sub
dec
sar
jb
je
jmp
push
lea
inc
dec
inc
add
jg
jmp
aam
or
int
mov
xchg
fcomp
mov
mov
clc
sbb
push
clc
dec
inc
dec
cmp
(bad)
pop
mov
inc
push
dec
push
pop
pop
data16
out
ins
je
mov
mov
es
sbb
sub
sbb
nop
mov
or
inc
mov
pop
jge
test
adc
mov
sub
adc
xchg
pop
push
mov
xor
cld
fbld
adc
jne
movs
lods
bnd
jmp
stos
jo
leave
xchg
in
addps
shl
adc
mov
pop
pop
jmp
sub
js
and
dec
mov
dec
adc
inc
xor
or
add
cld
push
sbb
push
xchg
add
or
inc
add
xlat
mov
fwait
jbe
push
shr
fisttp
mov
jne
mov
mov
fld
pop
dec
inc
frstor
ficom
inc
push
push
xchg
and
ret
cmp
xor
js
pop
ss
mov
mov
packuswb
dec
in
test
add
inc
push
jmp
and
jg
mov
mov
add
jae
jge
xchg
and
test
test
push
and
fcom
loop
add
jmp
jp
mov
inc
test
cmp
sub
pop
inc
fild
jmp
add
dec
jne
mov
ja
repnz
xchg
jp
xor
adc
xchg
dec
mov
adc
pop
mov
adc
dec
adc
pop
jmp
cld
dec
adc
jne
in
xchg
aaa
pop
lock
es
mov
pop
and
clc
push
dec
inc
inc
jmp
inc
add
popa
push
mov
jp
and
push
dec
push
div
jmp
sub
mov
call
test
fst
ret
and
add
and
pop
daa
call
sbb
jge
lahf
sub
pop
cmp
pusha
push
sub
jmp
jne
jns
mov
push
add
jne
mov
jmp
aas
je
inc
imul
push
add
mov
adc
and
pop
pop
or
xor
push
je
call
int3
mov
mov
xor
and
sbb
pop
cmps
dec
cmps
rol
or
(bad)
arpl
out
push
cmp
or
and
pop
cmp
and
and
aaa
jo
add
fs
in
push
repnz
jmp
sub
ret
pop
iret
clc
mov
stos
or
mov
xor
mov
mov
sbb
add
test
clc
imul
jmp
fs
mov
enter
dec
add
dec
inc
jne
push
cli
add
push
xor
inc
cmp
add
jae
sbb
add
inc
fs
inc
or
dec
add
or
pusha
(bad)
dec
adc
mov
mov
or
fcmovnu
or
sbb
sub
dec
ret
mov
int3
adc
dec
out
ins
mov
aaa
cmp
sub
cmp
(bad)
mov
and
loopne
add
adc
lock
add
aas
ins
sub
out
push
ror
or
add
fst
add
aad
xchg
and
jne
jae
and
ins
mov
jne
outs
add
fcmovb
imul
mov
mov
lock
and
adc
pop
sbb
add
adc
pop
inc
dec
clc
or
shl
push
mov
adc
xchg
add
test
or
and
(bad)
adc
or
mov
mov
fcomp
call
xor
push
mov
cmp
pop
sub
dec
or
mov
sub
dec
push
push
imul
lock
and
or
lock
rol
push
fldcw
(bad)
fxch
or
xchg
fwait
cmps
sahf
adc
pusha
cmp
repz
jmp
xchg
inc
imul
std
mov
mov
pop
sub
xlat
xor
mov
or
adc
push
xchg
or
inc
gs
add
mov
pop
adc
inc
fldenv
enter
adc
movs
mov
or
fild
cmp
mov
xor
lock
add
xchg
or
xchg
mov
hlt
test
mov
test
jg
inc
pop
push
mov
cmp
mov
in
push
add
adc
jae
xor
adc
hlt
push
loope
js
jnp
xchg
sub
dec
add
mov
mov
inc
push
add
sub
jg
pusha
inc
or
pop
pop
sahf
adc
push
movs
pop
fsubr
or
push
add
fnsave
pusha
xchg
add
and
mov
test
unpckhps
cmp
movs
add
dec
add
inc
cwde
or
rcl
jge
loopne
and
jne
pand
xor
mov
scas
jo
xacquire
add
xor
inc
cmps
push
popa
add
push
push
mov
adc
add
daa
lea
jo
cmp
clc
test
fdiv
pop
mov
inc
lea
jbe
jge
fisubr
mov
dec
push
js
fisttp
or
pop
rcl
push
xchg
xor
nop
das
add
xchg
cmp
dec
pusha
add
xchg
xchg
push
shr
or
or
mov
outs
jns
cmp
sbb
or
add
or
mov
add
add
mov
and
jno
cmp
or
mov
and
inc
push
cli
movs
sti
fwait
or
or
clc
push
ja
adc
rol
push
cs
call
cs
pop
movd
nop
ret
adc
inc
lea
jecxz
cwde
je
jmp
iret
push
lock
or
and
xchg
push
inc
push
mov
sub
scas
sub
pop
data16
dec
xchg
jmp
js
inc
or
(bad)
fidiv
inc
scas
mov
xchg
outs
aam
cli
mov
inc
push
push
xor
enter
or
lods
movs
(bad)
iret
mov
sti
sub
xor
or
add
inc
add
int3
xor
add
mov
cmp
loop
sti
inc
mov
adc
ret
fistp
rcr
sti
fild
out
loop
sbb
adc
add
mov
pop
mov
daa
inc
jbe
rcl
mov
or
sub
push
jno
loop
xchg
int
loopne
push
push
or
clc
mov
push
add
mov
iret
fiadd
push
lds
push
mov
add
inc
sbb
aam
pop
push
lock
sub
call
cmp
pop
sbb
adc
sub
mov
sbb
dec
ret
xor
lea
add
xor
inc
adc
push
xchg
out
fisttp
int3
pop
xor
in
mov
sub
ss
fiadd
inc
and
pop
adc
add
adc
add
adc
jno
push
or
add
sar
aad
and
adc
or
adc
movs
jno
cmps
shl
cmp
lods
test
pushf
xor
cmps
adc
imul
mov
jne
test
adc
(bad)
sbb
pop
cmp
cmps
inc
loopne
jl
cmp
inc
push
ror
jge
lods
rcr
xor
xor
and
(bad)
icebp
test
jns
adc
es
add
lods
add
mov
loope
jecxz
push
js
and
in
ror
add
lock
push
call
cs
into
mov
sbb
mov
ret
clc
or
adc
push
add
ins
imul
imul
movzx
sub
jb
rol
dec
cli
jmp
leave
mov
dec
push
jge
sub
mov
dec
xchg
rol
adc
ss
or
dec
dec
push
addr16
cmp
push
in
push
jne
call
lods
pop
dec
push
xor
popf
imul
and
inc
lock
push
mov
add
inc
pop
sbb
pop
lock
sbb
pop
dec
sbb
icebp
nop
(bad)
imul
neg
xor
and
mov
push
in
mov
nop
or
inc
enter
sbb
mov
fcom
pop
in
jge
push
out
xlat
dec
sti
jp
lsl
sub
lds
push
sbb
(bad)
xor
push
push
(bad)
std
movs
pusha
call
and
add
or
add
mov
mov
push
sub
pop
sbb
outs
loope
pop
lahf
push
sbb
ins
stos
outs
push
add
dec
inc
or
rcl
(bad)
ret
fst
dec
add
mov
lds
imul
add
xchg
mov
(bad)
xor
cmp
mov
inc
in
mov
jno
gs
add
and
jmp
(bad)
div
ins
xor
push
mov
and
and
ret
pop
rcl
sbb
cs
clc
imul
cmps
jmp
pop
jbe
ins
call
cmp
out
aam
lods
sub
add
push
outs
cmp
pusha
mov
push
push
push
pop
fmul
cmp
je
mov
inc
dec
stos
test
jg
fst
push
shr
and
push
dec
ja
and
dec
or
or
mov
mov
clc
and
push
sbb
sbb
inc
cmp
stc
mov
arpl
lods
fidiv
and
push
in
mov
adc
call
push
jmp
dec
cmp
aas
in
cwde
hlt
adc
fcomp
add
mov
cmp
inc
and
popa
leave
inc
cs
mov
lods
add
mov
mov
cmc
and
test
cmc
pop
mov
mov
in
dec
xchg
out
xlat
cmc
aam
dec
xchg
(bad)
shl
pop
test
and
or
jb
lods
out
jmp
add
mov
sbb
icebp
dec
aad
inc
sar
dec
lds
or
test
pop
dec
dec
cmp
leave
push
(bad)
sbb
sbb
push
xchg
lods
in
fidiv
inc
sbb
cmp
push
not
push
mov
lahf
les
and
dec
add
shl
(bad)
out
adc
pop
mov
cmp
pcmpgtb
addr16
out
les
nop
add
es
add
cmp
shr
inc
push
rol
mov
push
nop
call
xor
les
(bad)
rcr
lock
pop
dec
nop
pop
pop
mov
cmp
xchg
icebp
nop
inc
push
and
dec
je
push
dec
jg
not
fcom
mov
sub
ss
dec
add
pop
jne
dec
es
add
jae
push
xor
inc
and
fdivr
fcom
pop
xchg
inc
dec
aam
mov
xlat
push
sahf
mov
add
cmp
jns
out
pop
jle
sahf
ret
sahf
scas
pop
scas
test
mov
mov
pop
add
jb
pop
or
pop
dec
sbb
movntps
lds
jmp
sbb
shl
lahf
sbb
or
pop
(bad)
loopne
jle
sahf
mov
mov
retf
adc
dec
jb
add
dec
hlt
das
ins
jo
sub
push
test
loopne
test
add
or
jmp
inc
mov
push
lea
pushf
jb
mov
clc
mov
mov
add
push
push
push
add
push
adc
pop
icebp
mov
inc
fidivr
into
add
pop
out
in
(bad)
mov
jne
push
sbb
adc
push
adc
lock
jmp
push
mov
(bad)
adc
push
daa
mov
ja
adc
inc
test
or
jge
or
add
pop
pop
mov
pop
enter
inc
fld
xchg
pslld
mov
add
or
mov
pop
pop
push
jecxz
pop
push
add
and
inc
fucomip
dec
aas
or
sahf
pcmpeqb
xchg
test
sbb
(bad)
repz
pop
or
inc
push
les
ins
cmp
and
xchg
cmps
push
mov
ja
inc
shr
(bad)
je
add
fsub
fs
pop
pop
push
rcl
fstp
add
dec
and
rol
loop
xor
or
or
lea
xor
and
frstor
lahf
stc
es
test
stc
inc
or
jbe
jle
nop
(bad)
leave
mov
pop
dec
inc
es
test
scas
and
adc
fisttp
mov
ror
pop
fiadd
lds
scas
cmp
mov
xor
enter
cmp
or
dec
mov
pop
cmps
pop
push
mov
xchg
cmp
imul
dec
int
daa
(bad)
and
fsub
cmps
call
and
adc
and
out
test
daa
mov
leave
mov
add
and
out
and
add
mov
test
(bad)
addr16
mov
mov
popa
jmp
fsub
ins
mov
mov
push
push
leave
mov
and
push
shr
xchg
xlat
cmps
or
dec
(bad)
jle
and
or
hlt
sbb
sbb
sbb
sub
xchg
mov
mov
push
retf
lea
sbb
sub
je
in
mov
push
nop
bound
add
jmp
push
ds
stos
inc
daa
fwait
call
push
sub
push
and
fwait
sbb
xor
mov
js
enter
sub
inc
dec
add
stos
imul
push
inc
or
out
retf
push
or
ret
xor
or
add
sub
push
xlat
pop
or
push
or
lods
add
or
sbb
ja
rol
shr
mov
or
lds
nop
js
lds
add
inc
xor
and
icebp
dec
rol
cmp
call
add
test
fild
jle
lods
jne
push
call
fadd
or
xchg
mov
inc
pop
in
push
loopne
adc
adc
js
loope
or
push
mov
repz
fs
pop
in
test
test
std
adc
add
iret
push
adc
adc
sub
push
push
push
enter
not
sahf
call
or
adc
inc
add
scas
add
lea
pop
enter
enter
and
sub
push
les
enter
test
xchg
inc
iret
mov
dec
or
jno
sbb
push
fwait
or
cmp
out
shl
jb
(bad)
enter
push
daa
enter
dec
xchg
mov
imul
xchg
adc
add
(bad)
push
xor
hlt
loope
in
pop
fisubr
sbb
or
and
enter
(bad)
dec
fdivr
pop
aam
movs
(bad)
xchg
mov
les
push
test
hlt
mov
aam
rcpps
inc
in
or
shl
inc
icebp
mov
push
sub
and
mov
repnz
cmps
add
outs
arpl
push
xor
push
xchg
xchg
jbe
sub
inc
push
in
push
ror
inc
push
mov
les
sub
mov
test
pop
mov
adc
jns
inc
dec
or
push
xor
fs
mov
cs
nop
dec
mov
ror
dec
pop
jl
outs
dec
cmp
push
xor
cmp
add
mov
lea
inc
xchg
xor
sbb
jo
(bad)
sbb
sbb
out
push
xchg
test
out
inc
jecxz
das
push
scas
fdiv
(bad)
push
fs
push
xchg
in
xchg
ror
js
rcr
mov
retf
in
fld
mov
xor
add
xor
sbb
dec
xor
mov
pop
aas
and
add
pop
(bad)
loopne
push
cmp
icebp
add
cmp
sbb
sbb
push
inc
xlat
sbb
shl
pop
lock
out
das
arpl
lea
and
dec
stos
and
inc
add
mov
or
shl
mov
neg
mov
fiadd
test
sti
jns
dec
inc
in
inc
in
add
scas
hlt
xor
loopne
pusha
in
sbb
or
add
into
pop
cmp
inc
and
mov
bt
rol
shl
jns
movs
and
imul
and
pop
repz
jp
mov
inc
pop
stos
(bad)
call
mov
test
and
push
pop
repz
xor
mov
stos
cmp
dec
cmp
inc
pop
scas
pop
ins
lock
xor
adc
rcl
mov
push
xor
xor
dec
clc
xchg
mov
lea
inc
loopne
out
inc
sbb
ret
jle
inc
mov
aas
cmp
sar
jno
adc
or
add
mov
add
ja
lods
cmps
sub
aas
pop
or
stos
mov
dec
ficom
sub
test
mov
pusha
xchg
sub
rol
ins
adc
mov
sbb
bound
adc
sbb
daa
mov
push
cwde
inc
loopne
retf
loopne
add
dec
stc
add
loope
or
shl
sti
jmp
and
in
inc
mov
xchg
imul
jg
adc
shl
and
or
cmp
fiadd
mov
pop
and
fisub
test
call
out
add
push
hlt
inc
add
mov
shl
dec
fs
sbb
or
arpl
aas
cmc
jmp
cmp
xor
iret
push
call
test
lock
mov
sbb
add
push
or
rol
mov
cmp
cmp
adc
iret
jmp
sbb
dec
push
fcos
inc
mul
mov
and
movzx
mov
inc
cmp
sbb
add
mov
push
scas
fbstp
add
and
jb
inc
mov
mov
sub
or
cmp
(bad)
es
jne
pop
pop
add
bound
xor
jnp
inc
mul
adc
out
ret
js
add
lods
or
pop
(bad)
(bad)
adc
sbb
or
or
cmp
js
add
push
movs
inc
imul
sub
xor
dec
lods
mov
sbb
shl
jmp
sti
ror
sbb
lock
push
in
shr
xor
in
adc
iret
jle
dec
enter
jp
cmp
add
sti
and
ins
bound
ret
sub
mov
les
inc
and
adc
xchg
push
push
xchg
out
add
push
cmp
outs
mov
rcl
(bad)
stos
xchg
je
pop
out
sub
lea
outs
add
ins
adc
inc
jae
movs
addr16
and
outs
pop
xchg
and
test
inc
sar
sar
ror
cmp
xor
xor
sub
push
mov
pusha
push
inc
(bad)
mov
cmp
sub
test
lea
rol
fistp
jnp
mov
add
or
std
scas
leave
and
loopne
lods
ror
jl
pop
xchg
retf
nop
cmp
fs
pop
lock
in
push
fisubr
in
sbb
call
ins
push
in
in
cli
in
ret
or
shl
or
mov
loopne
or
pop
shr
aad
cmp
mov
pop
pop
xlat
push
push
pop
add
and
cmp
sub
and
jb
in
mov
mov
mov
sub
test
and
or
or
mov
inc
adc
xchg
or
sbb
sbb
or
push
xchg
jnp
retf
add
add
push
dec
cmp
add
inc
jl
lods
push
aas
adc
mov
jg
add
mov
push
jne
jo
inc
jno
xlat
push
ror
sbb
mov
mov
call
mov
js
hlt
cmp
jle
jle
mov
mov
fld
xchg
sbb
cmp
and
push
xchg
adc
mov
push
ficomp
sub
xchg
add
push
mov
jbe
dec
push
stc
test
sub
dec
mov
call
and
(bad)
loop
fiadd
cmp
and
lock
shl
lock
test
pmulhuw
ds
sbb
(bad)
and
add
push
shl
out
jo
inc
pop
sbb
add
jl
inc
add
add
je
pop
jg
inc
add
sti
ret
inc
push
bound
cs
xchg
cmp
loop
nop
add
cmp
ret
push
mov
(bad)
je
je
ja
pusha
push
mov
sub
fs
add
shl
pop
jne
std
(bad)
pop
adc
and
lods
pop
xor
and
lods
inc
cwde
mov
in
or
dec
das
xchg
pop
jo
fs
jne
push
cmps
fcmovb
aam
shl
retf
push
adc
dec
xchg
outs
and
das
dec
pop
jge
mov
popa
mov
jne
and
xchg
call
add
add
push
cmp
mov
jge
jne
dec
sub
jl
inc
lea
jne
(bad)
mov
push
adc
or
stos
(bad)
jg
inc
mov
sub
shl
cmp
adc
xchg
inc
out
sub
inc
add
(bad)
pop
push
or
jg
or
out
xor
ret
cmc
(bad)
pop
push
and
push
mov
test
add
lods
in
and
cmp
jne
or
or
out
cld
cld
adc
add
(bad)
adc
mov
pop
aam
mov
pop
sub
cld
ret
mov
enter
mov
pop
add
adc
jne
mov
push
fild
repnz
jmp
loope
out
mov
dec
hlt
pop
hlt
and
loop
(bad)
and
cwde
add
mov
pop
xchg
xor
das
pushf
mov
and
das
push
sub
mov
sub
xor
cmp
or
rcl
pusha
call
popa
in
div
fistp
idiv
not
test
pop
sub
mov
not
add
call
jmp
sti
and
(bad)
add
lods
out
sbb
aaa
sub
cmp
sbb
in
add
in
sub
inc
jp
jne
add
or
cmp
add
neg
sub
jb
dec
fnsave
icebp
test
add
jae
adc
push
xor
push
js
or
inc
inc
adc
or
jb
and
inc
cmps
sub
lea
clc
sbb
or
or
push
xor
push
sub
into
adc
into
xor
jg
or
sbb
and
mov
je
mov
inc
int3
and
ret
cmp
cmps
sub
or
jb
stos
out
rcl
push
nop
or
dec
retf
or
scas
pop
inc
and
sbb
pop
enter
or
and
mov
add
iret
cli
mov
pop
mov
enter
add
cmp
or
js
inc
or
aas
(bad)
in
add
xor
or
sbb
fnstsw
mov
inc
(bad)
test
dec
shl
add
adc
rcr
stos
mov
and
adc
mov
iret
push
push
or
nop
pop
push
pop
popa
test
add
mov
fdivrp
mov
sbb
nop
pop
or
test
add
fmul
adc
dec
ins
or
or
xchg
xor
pop
add
mov
mov
sbb
add
add
sbb
push
push
pop
adc
add
fimul
add
inc
or
xor
or
mov
aaa
push
and
popa
xchg
out
xchg
pushw
jnp
mov
push
jnp
neg
dec
adc
dec
jbe
xchg
add
or
add
push
mov
sub
push
das
xchg
test
fs
dec
mov
xchg
cmovne
dec
cmps
xchg
test
sub
cmps
xchg
adc
sub
sbb
push
in
add
xchg
sbb
add
cmps
xchg
test
sub
mov
lds
in
add
add
add
and
rol
inc
sub
daa
pop
add
(bad)
mov
inc
push
pop
or
les
jg
iret
lea
inc
(bad)
rep
mov
mov
test
mov
mov
div
inc
std
add
into
out
cs
xor
cld
push
jle
out
adc
pop
add
push
add
push
bound
outs
jo
push
or
not
adc
adc
and
or
inc
sub
(bad)
cmp
jo
push
sub
fimul
cmp
sbb
mov
or
ror
add
add
and
out
push
fs
dec
adc
iret
xor
dec
push
lods
movs
add
stos
aam
push
scas
xchg
xor
aam
mov
movs
ins
adc
inc
fdivr
sbb
fwait
dec
test
repnz
sar
push
dec
pop
mov
rol
or
cmp
inc
jae
or
sbb
mov
mov
das
xchg
mov
sar
jmp
inc
aaa
pusha
aam
fistp
jne
add
sbb
loopne
arpl
push
sbb
retf
imul
mov
lahf
cmps
jno
inc
push
mov
pop
shl
js
icebp
daa
sbb
imul
xor
mov
adc
jecxz
sar
push
inc
or
imul
in
pusha
or
fild
jns
bound
pusha
js
fs
or
(bad)
call
add
lahf
or
mov
xor
adc
jle
iret
rcl
pop
les
movs
aam
sti
lahf
cmp
loopne
add
test
sbb
loopne
lock
ds
cmp
int3
or
sub
add
or
jb
push
les
pop
push
push
pop
lods
pusha
mov
dec
ins
mov
sub
adc
mov
nop
fmul
mov
and
sub
test
xor
add
in
xchg
mov
add
add
add
ss
xor
or
cmps
movs
jbe
xor
add
lods
bound
xor
test
mov
ret
push
sub
adc
xor
imul
ret
out
ins
sar
inc
add
adc
int3
mov
cmp
jne
xchg
mov
cdq
mov
push
shr
(bad)
fs
mov
sub
adc
push
push
inc
mov
inc
cmp
adc
pop
pop
add
shr
xlat
mov
push
push
mov
fstp
movs
cs
and
xor
cmp
or
or
mov
or
repz
push
rol
iret
and
mov
es
inc
jge
pushf
cs
shl
jge
dec
push
daa
mov
js
enter
sub
test
out
jb
test
rcr
jnp
cwde
adc
ja
daa
daa
and
pop
or
repz
aas
test
je
repz
pusha
push
dec
pop
cs
inc
add
mov
rol
and
or
sub
jb
or
and
dec
mov
arpl
daa
sti
sub
or
ss
dec
cmp
push
sbb
cmp
add
and
cmp
add
jno
mov
jmp
(bad)
cmp
ins
sub
sbb
and
push
push
rcr
add
rcl
xchg
aaa
mov
test
push
sub
aad
pop
call
jne
out
push
icebp
pop
sbb
nop
test
lds
sub
mov
or
sbb
jbe
jl
pop
shl
enter
adc
cmp
fadd
fcomp
cmp
xor
in
mov
das
jmp
mov
sub
lahf
xor
adc
and
adc
sbb
cmps
and
fistp
mov
fist
sbb
sbb
inc
jo
stc
fbld
mov
in
movs
mov
jmp
test
adc
add
sbb
lahf
test
push
push
jne
or
mov
or
lahf
mov
(bad)
jo
outs
cmps
call
sbb
pop
fwait
adc
aam
dec
call
pusha
add
inc
mov
mov
icebp
xchg
dec
lea
or
pop
xchg
sub
aaa
fsubr
invd
pop
fsub
ret
mov
push
lds
(bad)
mov
aam
push
leave
sub
pop
pop
stos
mov
xchg
inc
cmps
sbb
inc
jno
mov
dec
push
and
movs
push
pop
jmp
nop
outs
(bad)
(bad)
cmp
add
dec
stos
or
jmp
inc
jb
in
dec
push
pop
sbb
test
fdiv
shl
mov
ins
xor
push
push
repnz
stos
push
les
mov
pop
lahf
and
cmp
pop
imul
pop
ror
push
or
and
iret
pop
sbb
std
add
adc
dec
jle
or
sti
push
sub
add
pop
push
jne
xchg
aaa
shl
pop
push
dec
xchg
mov
xchg
mov
sbb
out
adc
and
and
das
and
enter
bound
lahf
in
cmp
dec
adc
paddd
and
adc
dec
xor
sub
push
(bad)
nop
pushf
add
or
fs
loop
sbb
or
inc
push
or
or
pop
or
adc
outs
add
dec
add
pushf
add
xor
xchg
pop
adc
mov
out
scas
ret
stos
mov
pushf
mov
ret
add
mov
mov
std
lahf
push
ror
cmp
fstp
rol
xor
rcr
or
arpl
sub
fnstcw
sub
ss
popa
sub
add
sub
and
fisttp
sub
aas
add
dec
or
ins
jmp
lea
lods
stos
in
(bad)
xor
and
inc
add
dec
xchg
cwde
scas
in
sub
xchg
lock
aad
dec
test
shr
and
imul
lock
pop
pop
push
add
mov
lea
mov
lock
push
add
add
call
shl
movs
mov
push
sbb
xchg
push
push
pusha
add
dec
jg
cmp
lea
movs
adc
pop
dec
hlt
add
(bad)
lahf
sub
jmp
sbb
xor
xchg
xchg
mov
sti
or
jmp
mov
xor
pop
mov
add
adc
add
sbb
push
add
and
outs
pop
sar
daa
inc
sbb
mov
add
int3
sub
dec
jno
lods
inc
inc
ret
test
xchg
mov
push
mov
sub
mov
js
pop
in
jle
add
adc
pop
jmp
add
cs
push
or
mov
sub
inc
xchg
push
or
dec
test
lahf
push
cmp
or
mov
or
sub
pop
or
pop
mov
pop
jle
mov
push
and
push
xor
xchg
push
jbe
int3
in
cdq
push
sbb
jno
add
je
cmp
test
jb
int3
and
pop
add
aaa
enter
stos
push
sbb
enter
scas
movs
pop
dec
inc
pop
cld
cwde
add
clc
or
dec
and
dec
push
mov
mov
inc
es
inc
or
or
jg
push
inc
shr
(bad)
xor
jge
mov
add
sbb
sbb
mov
sbb
push
inc
ret
mov
inc
pop
or
inc
fdiv
push
pop
leave
or
les
movs
ins
push
(bad)
mov
daa
pusha
cmp
lahf
pop
fsubr
out
inc
xchg
push
and
outs
xchg
xchg
dec
iret
sbb
xor
xchg
and
aaa
mov
and
out
and
or
mov
rol
xlat
jo
dec
and
lahf
rol
push
mov
mov
mov
sbb
sbb
popf
xor
cld
sub
js
xor
adc
add
movs
inc
dec
pusha
push
jnp
or
loope
push
cmp
jno
lea
inc
fwait
out
add
loop
add
adc
add
push
call
adc
jmp
pop
add
pop
pushf
inc
idiv
add
push
sub
sbb
pop
repnz
jmp
or
sub
add
test
jmp
or
inc
push
or
rol
adc
lods
jo
or
mov
xor
pop
rol
and
adc
test
add
mov
xor
cmp
sub
int
or
and
sub
adc
rcr
ret
aas
push
add
add
and
jnp
(bad)
mov
mov
adc
adc
add
cmps
or
cmp
xor
xor
int
out
xchg
mov
cwde
cmp
push
adc
ret
ds
mov
mov
mov
and
daa
jmp
nop
dec
adc
push
add
les
jo
push
stos
mov
inc
adc
xlat
(bad)
adc
adc
pop
and
inc
mov
push
xor
jg
outs
mov
mov
imul
daa
es
or
pop
adc
stc
ss
xchg
push
adc
add
pop
ja
and
fbstp
and
push
or
lahf
out
adc
mov
ret
mov
add
inc
mov
adc
add
inc
sbb
push
nop
pop
xor
icebp
push
adc
sbb
jo
sbb
jo
popf
adc
sub
mov
and
xor
leave
mov
and
and
push
pop
nop
adc
out
aam
mov
jmp
test
sub
mov
les
fwait
outs
sub
pushf
retf
ja
(bad)
loopne
inc
pop
jo
mov
nop
inc
jmp
aas
js
repz
sub
sbb
sar
xor
pop
dec
dec
out
or
xchg
mov
int3
adc
pusha
pop
add
pusha
sbb
(bad)
pop
xchg
lds
sub
lock
mov
imul
push
mov
or
ret
out
pop
jecxz
test
cdq
cmp
mov
ins
mov
imul
add
push
sahf
out
mov
cmp
test
psubsw
adc
add
out
adc
ja
inc
ins
fdivr
pop
(bad)
in
sub
fcomp
call
add
push
add
out
add
jns
ins
call
shl
shl
test
test
and
sahf
or
repnz
cmp
cmp
inc
xchg
hlt
mov
bound
cmps
jnp
xchg
cli
popf
loopne
dec
rol
lock
push
and
(bad)
cmp
mov
push
je
dec
inc
imul
test
mov
cmp
bound
mov
push
add
push
inc
dec
push
in
shr
bnd
mov
or
sti
iret
mov
test
xlat
ds
test
push
(bad)
into
std
sub
cmp
inc
cmp
push
or
or
loopne
sub
je
push
mov
and
xor
add
inc
xchg
and
pop
push
jno
xchg
mov
mov
js
and
mov
mov
add
jl
push
mov
inc
js
rcr
stos
or
inc
jno
bound
inc
js
push
sbb
cmp
inc
inc
js
adc
sub
inc
js
inc
js
lds
mov
js
inc
js
in
loop
inc
js
in
mov
adc
or
sbb
dec
sbb
dec
and
xchg
mov
push
and
sub
and
pusha
push
and
nop
cmp
cmp
inc
inc
mov
inc
inc
mov
inc
repnz
cmp
mov
push
mov
lock
mov
xor
and
pusha
mov
in
sbb
mov
xchg
and
push
add
sub
push
aam
adc
inc
inc
pop
dec
imul
inc
inc
add
or
or
daa
jne
mov
bound
or
and
xchg
gs
add
sub
inc
dec
aaa
mov
push
cmp
add
push
ret
mov
mov
or
popa
sbb
or
lods
les
sub
out
out
adc
push
leave
pop
jae
inc
mov
ja
outs
add
add
lahf
add
push
xchg
mov
outs
pop
pop
or
push
xor
loope
push
or
jb
lods
aad
add
ins
lahf
call
cmp
dec
jmp
add
adc
fisub
mov
push
bound
lock
js
dec
outs
jo
clc
adc
adc
aaa
inc
cmps
fs
or
or
sbb
or
mov
adc
add
inc
add
test
mov
xor
inc
sub
sub
test
xchg
xchg
fwait
add
test
test
add
push
pop
imul
push
mov
push
pusha
mov
shr
mov
ret
fist
sub
jp
je
mov
loope
xlat
in
setne
jne
movzx
add
outs
cmp
jmp
cmp
cmp
xor
push
adc
(bad)
jge
add
pop
ret
cmps
shl
pop
dec
add
dec
xor
xor
or
test
push
out
push
push
dec
loopne
out
out
sahf
out
add
cmc
paddb
mov
enter
jmp
or
xchg
add
js
shr
and
iret
and
xlat
or
loopne
inc
add
ret
pop
jl
sub
jge
and
mov
xchg
or
lock
pop
out
loopne
jo
out
dec
mov
sbb
jge
dec
push
add
mov
jmp
nop
test
jb
or
adc
ja
mov
ror
shr
xor
mov
sbb
(bad)
dec
sahf
add
mov
in
push
jecxz
lock
fwait
loop
pop
cmp
test
jmp
push
iret
sar
push
sti
xchg
cmps
push
xchg
cmp
imul
mov
les
mov
push
pusha
add
xchg
aam
jb
fisttp
add
cs
push
add
push
nop
dec
adc
xor
mov
and
add
repnz
repnz
fadd
xor
stos
(bad)
push
adc
push
push
pushf
das
jmp
push
pop
je
in
push
(bad)
arpl
push
fs
aas
pop
sbb
inc
add
push
jne
xor
xor
mov
jae
mov
sub
dec
std
loop
or
jo
test
pop
mov
fwait
lods
or
pop
pop
fldcw
int3
mov
rcr
or
or
cmps
rcr
movs
ins
xchg
sahf
out
mov
sub
cmp
out
gs
push
punpcklbw
sahf
ins
or
xor
ret
jo
push
sbb
sbb
aaa
and
(bad)
sbb
or
shl
pop
dec
or
mov
lock
cmp
jmp
add
rcl
mov
(bad)
stos
sub
dec
shr
leave
js
xchg
mov
push
enter
mov
cmp
mov
inc
mov
fcomi
mov
or
inc
push
and
ins
das
cmp
test
mov
cmp
pop
add
ds
dec
enter
jne
sbb
cmp
sub
jae
mov
adc
pmulhuw
jne
add
es
add
add
or
or
dec
imul
shr
mov
ret
pusha
data16
push
sbb
je
test
or
mov
mov
repz
fwait
movups
sbb
es
xor
or
mov
or
in
adc
std
inc
xor
add
sbb
mov
out
push
cmp
enter
popa
or
int3
and
pop
ret
mov
outs
aas
inc
push
out
mov
cs
push
sub
cs
xor
popa
ret
jns
cmp
inc
ds
outs
ret
(bad)
jmp
push
inc
sbb
cmp
cmp
and
cmps
jmp
xor
xor
js
ret
aaa
add
call
pusha
shl
push
mov
push
sti
cmp
std
rcr
lea
ins
adc
js
je
jnp
std
jo
sbb
jne
push
and
lock
xchg
mov
setne
popa
push
cmp
fprem
(bad)
push
outs
jmp
and
lea
mov
add
imul
push
in
out
aam
mov
jle
xor
int3
push
adc
xor
sub
cmps
mov
and
adc
or
mov
in
or
or
out
and
or
test
pop
xchg
xchg
mov
pop
idiv
pusha
rol
adc
(bad)
ud2
pop
ror
inc
sbb
or
cmp
test
arpl
adc
retf
cld
sbb
inc
sub
nop
daa
ret
mov
inc
pop
pop
cmp
sbb
(bad)
and
(bad)
and
cld
jl
or
sub
mov
and
inc
adc
aas
not
pop
pop
arpl
cmp
jne
mov
pusha
sbb
scas
daa
test
popa
das
xor
jae
cmps
cmp
test
sbb
or
ins
ss
fsub
add
push
loop
jno
cmp
faddp
adc
push
inc
xchg
or
or
push
(bad)
movhps
sub
or
into
rol
sbb
jmp
test
add
nop
mov
add
xchg
xchg
lock
jge
dec
xchg
xchg
cmp
push
sub
std
mov
icebp
add
xchg
ret
xor
push
push
and
(bad)
ins
lds
retf
sbb
jmp
adc
push
fadd
cmp
xchg
mov
out
add
repnz
mov
leave
add
retf
push
out
in
sbb
push
fiadd
xchg
add
add
and
in
or
add
shl
jno
test
adc
ret
sub
adc
sub
adc
adc
cwde
call
stos
pop
pop
mov
jo
push
sub
pop
xchg
ret
jbe
mov
test
lods
cmovo
xchg
aaa
iret
cdq
inc
or
jo
jo
mov
pop
dec
nop
pop
adc
pop
repz
cdq
jbe
dec
sbb
cdq
idiv
xchg
dec
outs
iret
repz
jg
emms
xchg
aad
adc
call
xchg
and
pop
and
mov
rol
push
dec
add
sar
hlt
ja
jae
mov
and
or
ins
loope
push
popa
div
mov
mov
or
pop
add
push
nop
lods
inc
xor
dec
(bad)
jbe
psrlq
add
inc
mov
out
daa
cld
sub
mov
retf
push
push
daa
cwde
mov
mov
stos
sbb
inc
cmp
xchg
mov
outs
jge
js
outs
sub
or
ror
sbb
imul
add
inc
rol
adc
int3
cbw
mov
imul
adc
and
dec
or
xor
ins
dec
lahf
sub
les
rol
ds
(bad)
leave
add
sub
test
pusha
clc
xor
add
lock
gs
fnstsw
loop
adc
inc
mov
add
push
cmps
nop
inc
js
push
add
push
inc
cmp
or
xchg
aaa
lock
add
jmp
enter
pop
and
ds
pusha
adc
sub
add
test
sbb
cmps
aaa
xor
mov
xchg
test
or
mov
js
(bad)
jg
or
push
xlat
add
push
jo
dec
push
lahf
pop
xchg
retf
or
gs
dec
bound
pop
push
arpl
adc
loope
mov
xor
out
pop
mov
cmp
sub
cld
mov
pop
sbb
and
adc
inc
loopne
sbb
pop
jno
test
arpl
sbb
mov
adc
popf
xchg
mov
lock
jmp
or
or
dec
je
(bad)
out
das
sbb
jmp
subps
or
in
nop
jp
ficomp
daa
mov
std
lea
sahf
cmps
test
xor
pop
pop
outs
ret
push
ss
mov
inc
call
dec
mov
pop
push
pusha
add
add
ret
mov
rol
jne
clc
popa
mov
add
jo
or
and
push
shl
cmp
ror
(bad)
add
imul
xchg
leave
push
pop
push
add
pushf
cmp
daa
jae
fbld
leave
adc
ss
mov
ret
cmp
or
sar
ss
test
push
jmp
ret
outs
and
or
add
imul
and
pop
sbb
gs
not
lods
inc
add
or
xchg
mov
add
ret
mov
inc
and
add
aas
xchg
and
(bad)
or
gs
cmps
or
mov
sar
cmps
adc
adc
push
lods
shl
sbb
mov
xor
and
leave
push
pop
add
outs
fistp
xor
mov
adc
or
fcom
mov
ret
(bad)
jae
and
dec
fmul
sbb
inc
out
jge
xor
mov
mov
femms
mov
aas
lock
mov
dec
cmps
lods
pop
sbb
ins
mov
mov
js
fdiv
xor
fwait
sub
add
push
sbb
cmp
add
push
jbe
ins
popf
out
or
jb
or
jmp
mov
pop
pop
aas
mov
sbb
jmp
ret
aam
dec
cmc
or
inc
or
inc
imul
mov
lahf
mov
cmps
push
test
pusha
push
in
mov
sub
pop
sbb
imul
push
inc
xlat
stc
icebp
mov
out
add
iret
jmp
mov
or
pop
adc
sub
adc
jge
pop
sbb
push
psrld
mov
(bad)
add
push
inc
mov
cmovs
adc
leave
pop
mov
sub
adc
xor
cmovp
xor
call
not
or
test
or
cmps
loopne
bound
out
clc
adc
into
or
push
jle
lods
cmps
mov
push
cmc
push
add
out
movs
ss
mov
push
push
lods
push
les
lock
add
fiadd
xchg
or
jl
add
or
jl
pushf
enter
pushf
pushf
inc
scas
sub
pop
sbb
iret
jnp
ins
int3
add
mov
push
gs
iret
repz
out
mov
xchg
fstp
jmp
ret
test
(bad)
jmp
int
cmps
xchg
cmp
jmp
rol
sbb
adc
inc
cmp
xchg
out
pop
adc
mov
xchg
int
(bad)
xor
arpl
adc
mul
aas
imul
push
ficom
xor
movs
pusha
and
jmp
adc
push
cmps
mov
adc
fs
and
fs
jge
js
loopne
pop
add
and
push
mul
add
pop
sub
mov
push
outs
inc
push
das
fwait
in
les
outs
sub
(bad)
dec
popa
dec
out
hlt
or
add
jns
test
mov
mov
hlt
ret
and
cmp
lods
mov
pop
pop
dec
push
cmc
cmp
out
daa
dec
lahf
sbb
cmp
adc
push
cmp
push
mov
sti
add
pop
inc
mov
out
call
fistp
jp
mov
push
out
je
mov
stos
push
push
inc
call
out
cmp
jnp
inc
add
push
es
cmp
repz
push
push
mov
xchg
mov
jle
pop
xor
jmp
push
push
mov
pusha
mov
inc
xor
cs
pop
sti
push
mov
or
push
or
aaa
aad
jle
(bad)
loopne
and
sahf
add
dec
mov
stos
mov
xchg
push
jmp
jecxz
or
fild
or
mov
daa
jno
or
pop
ror
cmp
call
mov
les
pop
sbb
adc
mov
sbb
sub
in
fstp
rcl
lods
lods
mov
push
pop
mov
scas
dec
xlat
pop
cs
inc
mov
or
jmp
push
add
clts
push
js
das
movs
scas
jmp
fwait
stos
(bad)
inc
clc
add
out
inc
dec
out
push
ins
xchg
cwde
lock
mov
shr
jp
sbb
loopne
mov
cs
sahf
cld
clc
push
pop
jb
cmp
add
scas
mov
sub
dec
popf
sti
test
jne
mov
and
push
xchg
jmp
enter
mov
xor
mov
dec
leave
push
sbb
jno
or
push
jo
popa
or
push
cwde
shr
ret
inc
(bad)
push
jnp
(bad)
cmps
add
add
or
push
cmp
inc
pop
mov
scas
nop
inc
push
cmps
sbb
test
scas
xor
mov
push
dec
xor
push
xor
loopne
out
mov
lahf
call
cmp
cmc
imul
jmp
mov
test
xor
add
dec
enter
fidiv
cmp
mov
or
dec
jne
ja
adc
(bad)
(bad)
iret
movs
and
sar
outs
iret
xchg
mov
lods
mov
add
mov
xchg
test
clc
cmp
mov
push
bound
cmps
enter
mov
ret
mov
push
test
cdq
cmp
add
jne
dec
jmp
ss
fs
inc
jle
mov
mov
sbb
fdiv
and
mov
test
out
loopne
movs
js
push
xor
xor
push
xor
into
repz
inc
push
pop
pusha
nop
xchg
jmp
mov
adc
nop
cwde
pushf
scas
mov
push
add
push
bound
popa
dec
enter
adc
arpl
sub
test
xlat
neg
mov
push
mov
ror
sbb
aas
and
push
pop
(bad)
out
sub
push
jmp
mov
aaa
(bad)
sete
dec
jmp
scas
inc
popa
mov
(bad)
mov
repnz
sub
xchg
mov
pop
mov
aad
test
sbb
jg
lock
push
push
add
or
and
add
clc
jb
enter
or
add
(bad)
dec
jb
test
sub
ror
cmp
dec
push
jo
sub
add
jmp
clc
fcom
adc
sbb
shl
inc
mov
or
(bad)
or
add
outs
inc
push
jb
add
cli
dec
add
jae
inc
inc
pop
sbb
xchg
inc
aaa
push
add
loopne
push
(bad)
cs
push
je
inc
sbb
push
push
add
(bad)
push
mov
add
inc
lock
stos
jmp
sub
daa
sub
aam
iret
cmps
or
push
shl
xchg
and
ret
push
in
push
add
mov
(bad)
mov
push
jl
mov
mov
arpl
cmp
mov
and
sbb
pop
pop
xchg
push
js
aam
je
fs
or
add
dec
push
jo
sbb
mov
mov
rcl
movs
adc
adc
inc
xchg
lock
inc
loopne
mov
lea
push
repz
std
add
nop
sub
add
loop
or
mov
xor
push
or
inc
aad
push
or
aas
(bad)
cmp
adc
dec
inc
push
cmp
adc
dec
ss
or
adc
or
scas
add
adc
xor
sbb
cmp
icebp
or
pop
jle
push
addr16
jns
jns
icebp
add
inc
sbb
push
pushf
push
retf
xor
push
inc
mov
stos
arpl
sub
sub
xchg
xchg
sub
inc
jno
and
pop
lahf
mov
and
cld
push
das
and
pop
inc
dec
and
mov
add
adc
xchg
mov
pop
clc
je
xor
lods
call
cmp
hlt
adc
in
and
pusha
or
jmp
adc
inc
adc
or
loope
test
mov
adc
sbb
mov
adc
(bad)
int3
xchg
xchg
sbb
les
test
adc
cdq
adc
push
imul
xchg
xlat
test
dec
ins
mov
inc
imul
mov
mov
dec
xlat
and
xchg
push
add
pop
mov
mov
shl
inc
test
adc
inc
cmp
out
retf
fsubr
add
nop
jecxz
xchg
push
aaa
xor
(bad)
cmp
push
(bad)
sbb
cmp
rcr
lds
fstp
aas
and
add
push
clc
not
ins
jge
jg
les
mov
popa
jo
gs
cmp
sub
cmp
inc
test
fcomp
push
jbe
sar
popa
add
mov
sbb
push
cli
ret
push
retf
dec
adc
push
lds
fistp
cmp
sbb
inc
sub
add
dec
pop
and
inc
xchg
mov
ins
lds
enter
aas
adc
pushf
pop
dec
mov
push
mov
add
or
fild
rol
mov
test
xor
inc
mov
pop
push
sbb
adc
add
pop
test
jg
lds
sbb
xchg
adc
xchg
mov
imul
nop
out
and
and
mov
jns
loopne
sbb
inc
mov
dec
nop
sbb
ret
in
mov
call
sbb
mov
lea
in
inc
sbb
icebp
mov
sbb
lock
dec
mov
add
mov
dec
scas
pop
mov
loop
shl
sbb
push
sbb
cmp
pop
mov
adc
add
test
ja
int
or
lea
add
jno
(bad)
data16
aad
fcom
int3
adc
rcl
and
aam
mov
int3
rol
aas
mov
and
push
mov
loopne
inc
xor
mov
(bad)
daa
mov
cmp
xor
and
jns
popa
xchg
add
cmp
mov
loop
fwait
or
push
daa
add
add
xor
xor
leave
pop
jb
push
push
push
inc
and
dec
jmp
xor
push
inc
push
mov
pop
pop
das
imul
loop
(bad)
pop
(bad)
les
retf
outs
inc
cmp
bound
loopne
jo
popa
inc
jb
test
add
adc
dec
xlat
push
aas
ret
cdq
pop
gs
add
adc
jae
mov
adc
push
int3
sub
add
rol
into
xchg
push
fmul
or
stos
or
pop
in
or
or
dec
pop
mov
les
or
imul
xchg
add
dec
and
dec
sub
jo
xlat
sub
xchg
inc
pop
lock
jl
daa
hlt
mov
push
inc
js
mov
mov
xchg
cmp
cld
push
test
scas
cwde
js
je
fdivr
push
dec
jmp
or
ds
(bad)
fcom
inc
sub
ins
mov
je
inc
aas
pusha
rol
(bad)
sar
push
mov
and
xor
inc
jmp
pop
and
mov
and
and
and
adc
fstp
sub
pop
bound
enter
rcl
adc
sub
je
inc
mov
fs
push
popa
pop
adc
or
push
jmp
push
sbb
jl
aaa
jmp
xor
add
daa
cmp
lods
mov
pop
add
xchg
imul
jge
fsubr
xor
fdivr
push
(bad)
mov
xor
pop
adc
inc
cmp
pop
mov
jnp
pusha
add
lahf
and
or
mov
scas
push
pusha
popa
xor
jnp
jl
xchg
cmp
dec
lahf
add
clc
and
push
cmps
adc
ret
mov
xchg
push
or
xchg
ja
add
cmp
and
pop
cmp
in
loope
xchg
clc
or
push
jnp
pop
daa
adc
sbb
push
push
test
cmp
xchg
imul
pop
xor
ins
int3
pop
and
add
xor
call
add
sub
push
pop
aam
ja
sahf
sar
lock
ja
scas
push
and
mov
push
inc
int
iret
pop
stos
into
shld
cmps
fmul
iret
pop
xlat
pop
cmp
stc
mov
push
loopne
call
mov
mov
push
or
adc
stc
sbb
sbb
enter
rol
pop
and
add
cmc
and
mov
and
mov
or
leave
inc
rcl
adc
add
mov
sti
push
cmps
adc
and
mov
dec
cmp
xchg
in
lock
and
mov
test
shl
add
jo
icebp
loopne
popa
mov
ror
ss
mov
and
push
mov
mov
sahf
mov
test
xchg
mov
call
pop
adc
mov
es
cs
ror
push
(bad)
stos
bound
and
xchg
pop
ror
ja
add
mov
fbstp
bound
hlt
lds
ins
test
rcr
shl
sub
mov
adc
xchg
xchg
js
test
repnz
shl
loope
hlt
rol
inc
add
and
not
(bad)
shl
(bad)
jb
je
dec
jne
mov
xor
push
ret
pop
mov
ins
test
sbb
fdecstp
stos
cmc
or
outs
outs
dec
fstp
mov
fwait
sbb
pop
test
lahf
push
xcrypt-cbc
cmps
push
add
je
movs
in
cmp
push
push
sub
retf
dec
pop
inc
loop
adc
jne
ja
add
and
rol
lds
inc
fs
cmp
in
mov
lock
shr
je
aad
pop
gs
sub
aaa
test
xchg
sbb
call
test
xlat
sbb
jae
sbb
sbb
sbb
jnp
leave
dec
sub
and
sbb
adc
xor
sbb
enter
push
loop
enter
dec
mov
inc
sub
inc
ins
retf
outs
or
outs
ja
rcl
daa
dec
add
mov
adc
ins
adc
pusha
jg
cmps
mov
mov
lock
jge
mov
jp
inc
clc
or
jnp
ror
aaa
je
sub
pusha
ret
sub
aaa
jp
fiadd
fs
xlat
mov
mov
xor
je
loopne
dec
inc
and
sbb
dec
ins
xlat
jnp
xlat
test
adc
pop
or
pop
add
pop
popa
jne
test
or
xor
fs
adc
lods
fcomp
rol
inc
movs
xor
lds
imul
pusha
push
push
in
fsub
xor
ret
rcl
maskmovq
test
add
jo
inc
imul
fldenv
gs
push
iret
ret
mov
and
imul
mov
push
and
mov
fld
and
add
jns
mov
inc
push
xchg
add
mov
xchg
adc
mov
and
push
xchg
mov
push
dec
loop
rol
sbb
inc
and
ja
push
xchg
or
pop
(bad)
sbb
das
ror
push
adc
push
je
mov
lods
mov
leave
dec
pop
jle
dec
adc
inc
(bad)
test
mov
fcom
sub
push
mov
daa
push
sbb
cmps
mov
xchg
push
add
inc
sbb
sbb
fs
cmp
sbb
sti
adc
push
imul
daa
imul
ret
es
mov
pop
out
cmp
ja
outs
ins
test
jns
out
popf
lods
mov
lahf
out
std
or
call
mov
xor
daa
and
mov
jle
outs
inc
push
in
pop
mov
cs
cs
push
pop
mov
xlat
lds
add
xchg
cmp
and
(bad)
aam
and
fild
loope
pushf
and
add
ret
call
inc
enter
icebp
dec
or
xor
adc
push
aam
and
stos
or
add
std
xchg
clc
jb
push
and
pop
ret
ja
push
mov
push
lock
daa
jmp
sub
pop
sbb
dec
ret
fcom
ins
xchg
(bad)
icebp
mov
ud0
xor
inc
dec
xchg
adc
and
add
inc
xsha1
cmps
mov
mov
push
mov
mov
cmp
loopne
lock
xor
(bad)
lods
or
add
sbb
pop
dec
loope
rcl
call
xlat
and
ret
mov
ret
(bad)
mov
test
inc
aaa
mov
or
out
push
sub
daa
jnp
pop
test
test
dec
pop
daa
mov
loopne
jmp
ret
les
(bad)
loopne
xor
loope
mov
shl
adc
dec
neg
(bad)
call
pop
fcom
pusha
mov
xchg
aaa
arpl
adc
pop
or
jbe
xchg
rol
add
js
inc
cmp
pop
mov
xor
pop
stc
adc
test
idiv
adc
inc
or
cdq
or
add
push
add
in
jecxz
push
or
(bad)
ror
xor
adc
cs
sbb
iret
scas
or
push
popa
mov
jecxz
add
test
das
iret
lods
or
iret
or
pop
push
js
in
push
test
inc
enter
aaa
test
(bad)
ja
add
xlat
push
pusha
xor
push
jp
xchg
sbb
push
cs
xchg
pop
sti
pop
sti
or
dec
and
es
mov
icebp
sub
scas
dec
out
out
and
or
adc
test
sti
xlat
sub
fs
sbb
ficomp
jg
sbb
inc
imul
pop
test
jmp
pop
bound
push
mov
xchg
or
add
and
jne
adc
popf
mov
ret
jge
mov
mov
loopne
mov
loopne
push
and
loopne
inc
imul
aaa
mov
fbstp
sbb
call
pop
fist
out
xor
push
push
mov
add
jmp
mov
repz
adc
sbb
repz
jmp
or
fdivr
sub
dec
and
xor
mov
fs
mov
cmp
cmp
dec
aam
adc
es
sub
in
into
repz
xor
ret
adc
dec
pop
dec
(bad)
mov
sbb
enter
and
lahf
add
adc
mov
sbb
ins
mov
xchg
and
adc
push
imul
push
cld
int
or
mov
sub
test
(bad)
daa
mov
movs
jmp
sbb
test
sbb
cmp
add
sub
inc
add
pop
dec
sbb
push
xchg
add
mov
fcom
movs
mov
sar
mov
pop
cs
adc
je
and
rol
xor
aaa
adc
push
test
mov
ins
xlat
ins
retf
jae
and
fnstenv
cmp
daa
mov
jecxz
out
aaa
int3
hlt
xchg
add
sub
sub
pop
mov
xor
mov
imul
dec
shl
scas
pop
or
xchg
nop
mov
xchg
cmp
xchg
mov
and
icebp
into
dec
jle
movs
sbb
mov
shl
adc
mov
daa
adc
xchg
xchg
push
push
xchg
fsub
and
out
jmp
or
js
cmp
fadd
div
adc
xor
adc
je
ret
push
dec
and
call
dec
add
aas
adc
inc
fcom
pop
dec
xor
add
adc
or
mov
push
sbb
inc
sbb
jle
clc
lods
mov
std
rcr
push
push
push
adc
lock
sti
jle
cmp
gs
mov
push
pop
addr16
xor
inc
aam
xchg
and
jmp
mov
or
dec
push
sbb
rcr
out
loopne
sub
sbb
jle
xchg
iret
adc
clc
lea
jbe
or
stos
jae
or
sub
push
cmp
fiadd
inc
aad
add
hlt
push
mov
aaa
inc
sbb
inc
(bad)
out
cdq
inc
outs
adc
adc
das
jo
outs
addr16
pop
dec
jb
and
out
adc
call
inc
sbb
sbb
pop
ss
adc
and
mov
ja
mov
dec
push
(bad)
or
push
pop
push
sub
fucomp
xchg
nop
cld
inc
xchg
xchg
scas
push
push
dec
inc
pushf
je
dec
je
neg
mov
mov
adc
lods
jo
test
push
lods
push
push
cmp
push
mov
adc
sbb
mul
adc
cmps
or
sub
pop
mov
out
push
sbb
outs
inc
xchg
add
mov
shl
push
ror
pop
or
ror
aam
push
or
adc
sub
jmp
js
test
mov
xor
pop
fwait
or
adc
not
add
shl
mov
cmps
aad
repnz
ret
jmp
dec
mov
das
and
in
jbe
xlat
or
xchg
adc
in
adc
aas
sar
pop
cli
sbb
xchg
leave
in
lea
sub
fmul
fisub
test
sub
test
sub
adc
fsubr
ss
sbb
aad
retf
xchg
dec
out
scas
pop
cmp
mov
sub
jg
add
mov
pop
dec
and
or
jo
push
mov
stos
ins
pushf
mov
inc
adc
push
sub
push
push
or
push
inc
adc
pusha
and
sbb
cmps
out
cs
lods
and
imul
js
jmp
ror
stos
mov
das
cmp
cmp
jl
or
adc
fs
js
push
mov
or
mov
inc
adc
cmp
jg
sbb
sub
sti
push
or
fnstsw
add
adc
imul
and
push
inc
add
xchg
or
fiadd
push
into
lods
dec
adc
or
loopne
imul
mov
lock
pushf
neg
mov
inc
loopne
mov
adc
fistp
or
mov
enter
mov
adc
push
jno
addr16
jmp
leave
jmp
ret
jmp
mov
xchg
mov
scas
or
enter
in
push
push
push
push
sbb
push
por
ja
shl
fdivr
add
test
sub
das
bound
pop
push
inc
in
jge
loopne
pop
pushf
mov
push
or
dec
(bad)
lock
dec
push
les
outs
pop
int3
xor
lds
out
movs
adc
rcl
clc
add
mov
rcl
test
sub
pop
or
fsub
mov
imul
jmp
push
gs
push
push
pop
jmp
ret
mov
add
pop
inc
inc
push
pop
adc
or
or
add
scas
sub
outs
xlat
or
bound
outs
cmp
ja
aas
mov
idiv
pushf
lods
scas
out
sahf
mov
inc
sahf
out
fiadd
adc
and
inc
push
push
jns
lods
fwait
mov
into
fcomip
add
in
sahf
out
push
and
sbb
js
inc
add
jns
or
ret
and
xchg
or
add
pop
add
and
xchg
and
add
add
sbb
sbb
sbb
and
xchg
nop
sbb
adc
sbb
and
xchg
sbb
adc
push
dec
inc
push
ret
or
mov
or
xor
push
xchg
sar
cli
or
in
push
cmp
repz
dec
arpl
mov
cmp
loope
or
jns
adc
dec
pop
out
sahf
out
mov
jl
(bad)
pop
std
sbb
jns
out
xor
jo
lahf
out
sahf
call
out
sahf
push
jp
sub
jns
ins
adc
call
sahf
out
sahf
test
push
push
out
cmps
mov
cmp
jmp
inc
and
iret
repz
jns
mov
cmps
stc
cmp
or
and
dec
jns
out
pusha
jne
lahf
mov
add
or
mov
lock
or
or
and
add
fadd
jnp
rcl
sub
add
inc
inc
inc
inc
push
nop
add
add
inc
adc
inc
push
nop
adc
seto
add
dec
add
inc
push
dec
dec
push
nop
add
and
inc
push
pop
inc
push
nop
add
sbb
sbb
nop
push
dec
dec
nop
add
sbb
sbb
xor
push
nop
add
cmp
cmp
inc
push
nop
add
cmp
add
and
nop
and
or
inc
add
inc
push
inc
ds
nop
add
pop
add
inc
push
adc
push
nop
add
sbb
xor
inc
push
nop
xor
aaa
nop
add
xor
xor
push
nop
add
add
add
inc
push
nop
add
add
daa
push
sbb
nop
push
push
push
nop
add
sbb
or
sbb
rol
or
push
loopne
cmp
cmp
pop
xchg
and
add
cli
inc
xchg
outs
movs
and
test
(bad)
clc
call
adc
iret
adc
add
sbb
outs
in
pusha
test
adc
jne
pop
cmp
dec
je
rep
inc
stos
lock
add
or
or
scas
imul
dec
(bad)
es
mov
mov
add
xchg
sbb
xchg
mov
mov
dec
mov
add
hlt
lock
mov
adc
(bad)
(bad)
pop
pusha
add
mov
add
js
mov
inc
dec
hlt
inc
clc
push
adc
lock
imul
adc
or
or
xchg
call
mov
jmp
add
inc
and
push
dec
inc
push
popf
cmp
out
dec
jmp
pop
inc
jmp
and
test
(bad)
fidivr
adc
xchg
push
adc
push
(bad)
mov
call
jp
xor
rol
xchg
mov
jge
movs
scas
mov
adc
into
and
adc
adc
jge
pop
nop
push
movs
(bad)
lock
addr16
dec
mov
or
mov
add
mov
iret
or
push
dec
in
or
sbb
add
mov
or
or
or
test
push
cmp
(bad)
cmp
imul
ss
dec
repz
adc
adc
ret
shr
mov
cmp
call
ror
cmp
push
or
nop
mov
inc
mov
and
enter
es
pop
mov
add
cmp
test
test
dec
push
mov
int3
jb
dec
das
fcmovnbe
sbb
pusha
add
fimul
jmp
cmp
sbb
ror
sbb
sub
dec
gs
and
or
ret
dec
mov
add
out
jne
pop
xor
les
rcr
rcr
push
sub
rcr
add
mov
adc
jecxz
mov
dec
jmp
pop
cmp
loopne
jno
mov
clc
not
mov
jmp
and
ss
mov
mov
inc
fs
int3
adc
stos
mov
xor
imul
neg
xchg
and
add
dec
jge
push
xchg
mov
loop
push
test
push
add
and
pop
or
sub
cmp
mov
mov
rcr
adc
and
mov
rcr
shl
cmp
je
sbb
addr16
mov
or
addr16
dec
jnp
fstp
or
outs
idiv
push
adc
push
popf
loope
shl
aas
push
sti
push
push
push
test
and
mov
add
pop
or
arpl
push
add
add
xor
xor
pop
and
adc
sar
and
xor
test
sbb
push
fadd
add
clc
out
add
mov
and
cmp
aaa
jne
inc
and
addr16
addr16
mov
addr16
inc
es
stos
xchg
addr16
adc
lods
addr16
call
ds
cdq
pop
pop
mov
lock
arpl
ss
xor
add
dec
push
fs
mov
sub
push
clc
sbb
and
jb
fld
xor
pop
mov
push
int
add
pop
sub
push
test
or
jne
aaa
jp
push
dec
push
dec
xchg
xchg
call
mov
jns
cmps
stc
or
xor
cmp
out
push
adc
xchg
and
cmp
push
mov
in
pop
enter
add
mov
loopne
mov
addr16
or
adc
adc
adc
mov
add
xor
xor
inc
xor
xor
jmp
push
popa
jmp
push
cdq
and
cmp
and
shl
mov
mov
pop
pop
or
or
xchg
or
test
and
xchg
and
or
add
leave
and
mov
sbb
inc
xor
rcl
sbb
ins
dec
push
mov
sbb
leave
inc
jb
sbb
push
xor
add
gs
es
test
and
imul
inc
add
sub
shl
adc
inc
or
inc
loop
and
add
inc
in
sub
sbb
enter
add
mov
popf
sbb
(bad)
sbb
mov
jne
inc
pop
mov
inc
push
sub
cwde
inc
call
jo
es
or
mov
sub
add
dec
inc
lock
movzx
or
mov
sub
leave
ret
and
push
lea
test
inc
cmp
cmp
fs
and
inc
jge
sti
cwde
enter
mov
pop
pushf
jb
jb
add
in
add
jb
popa
movs
push
add
sbb
repz
sti
mov
rol
sub
ror
shl
movs
adc
int3
movs
pop
rol
add
or
in
and
shl
daa
xor
push
xor
enter
loopne
cmp
dec
jp
push
mov
lea
jnp
mov
ja
mov
sub
test
dec
push
outs
dec
je
or
cdq
shr
jns
jne
mov
push
inc
movs
fwait
jbe
cwde
xor
jmp
fadd
pop
pop
push
push
int
pop
inc
sub
test
clc
xor
mov
dec
pop
pushf
or
test
pop
jne
add
inc
add
add
dec
cwde
add
std
inc
inc
ficomp
fstp
pushf
adc
adc
add
or
cmps
mov
or
pop
ins
mov
push
loopne
xor
outs
or
fidivr
cwde
jnp
cwde
neg
inc
jo
or
cs
stos
pushf
add
sub
xchg
push
adc
fisub
jmp
fadd
scas
push
mov
push
push
jne
add
pop
jbe
and
adc
add
pop
shl
lds
jae
xchg
push
sbb
cmps
or
aas
xchg
mov
add
xchg
xor
sbb
pop
addr16
adc
arpl
dec
and
sbb
push
mov
ror
cmp
sub
add
or
outs
sbb
inc
js
out
mov
add
jns
jo
push
dec
add
cmp
sbb
jne
pop
adc
(bad)
xchg
fsubrp
fstp
cmp
or
push
pop
icebp
or
and
mov
mov
xchg
push
add
pop
sub
cmp
inc
jbe
and
daa
(bad)
or
xchg
ja
movs
int
mov
add
add
sbb
inc
xchg
push
je
inc
je
pop
xor
xchg
inc
or
jle
pop
ret
and
call
jne
mov
or
popa
push
jp
cmp
clc
add
enter
dec
and
push
add
int
cmp
(bad)
(bad)
push
in
adc
inc
dec
xor
push
(bad)
retf
sub
fdivr
xor
and
lock
test
inc
lock
es
pop
add
outs
push
mov
das
out
hlt
sbb
or
test
inc
ret
push
xchg
lock
mov
fs
mov
lock
(bad)
mul
and
nop
xchg
adc
inc
sub
mov
push
and
or
ss
pop
mov
int3
sub
push
adc
mov
mov
push
xchg
sub
xchg
movs
bound
fs
rol
push
adc
sahf
mov
add
sti
dec
add
test
adc
pop
test
add
xchg
ret
sub
cdq
hlt
sub
jne
daa
sbb
lds
or
sbb
mov
inc
enter
pusha
cmps
push
nop
jo
and
or
vunpcklps
sub
in
dec
add
add
or
fnsave
cmps
sbb
adc
add
sub
inc
sbb
in
cwde
or
add
push
xor
add
adc
popa
and
clc
shr
mov
xor
jae
add
mov
jp
mov
sbb
add
test
xchg
sub
xchg
pop
sub
mov
pop
push
push
mov
out
sti
dec
add
push
inc
sub
les
out
or
xchg
inc
cmps
clc
sbb
mov
popa
xor
push
dec
leave
stos
ins
ins
cld
(bad)
mov
mov
or
and
adc
add
add
stc
mov
pop
ja
cmp
sub
sub
cmp
push
sub
push
push
push
sub
dec
push
nop
mov
or
and
pushf
xchg
or
or
push
test
or
test
or
ins
ins
push
nop
dec
pop
xor
push
push
enter
daa
add
add
inc
and
enter
and
enter
add
and
and
jne
iret
inc
dec
cwde
imul
hlt
std
or
cmp
cmps
pop
mov
dec
push
jp
js
ror
sar
scas
push
scas
or
add
nop
push
dec
or
or
pop
retf
xor
mov
es
push
pop
cmp
rol
(bad)
pop
mov
sub
add
ja
mov
dec
test
and
addr16
gs
pusha
and
pusha
rol
mov
mov
dec
cmp
mov
aam
push
lock
or
xor
icebp
mov
dec
or
and
xchg
mov
mov
loopne
add
pop
repnz
mov
in
(bad)
jg
add
(bad)
fistp
inc
rcl
adc
les
adc
adc
test
cmp
mov
adc
(bad)
add
sub
sub
add
fneni(8087
or
add
add
mov
or
dec
push
sub
adc
push
inc
test
sub
aam
jle
add
ds
fwait
push
int3
les
dec
outs
sahf
out
fisub
jge
stos
ret
xchg
icebp
jns
mov
leave
clc
rcl
nop
mov
xchg
adc
ret
cmp
push
inc
mov
xchg
mov
pop
jb
lods
call
adc
inc
push
jmpw
daa
cmp
cdq
nop
retf
push
adc
mov
dec
das
movs
inc
cs
mov
sub
loope
add
add
inc
cs
movs
icebp
jns
sub
push
sbb
pop
mov
adc
dec
es
sub
add
bnd
cs
fisub
mov
and
mov
sub
jb
adc
add
enter
and
sbb
and
mov
cmp
or
je
or
or
imul
add
in
sub
sub
in
jg
inc
daa
jl
jg
std
mov
or
je
push
sub
cwde
out
mov
rol
push
movs
retf
clc
mov
inc
or
jmp
cmp
dec
je
dec
je
jmp
add
mov
fcom
scas
movs
mov
add
pop
push
add
lods
push
jecxz
cmc
add
outs
add
ds
mov
je
pop
clc
ins
mov
push
sbb
cld
popa
push
call
daa
xor
dec
jmp
adc
loopne
mov
or
mov
adc
in
xor
dec
dec
xor
enter
sub
shl
add
sbb
sahf
adc
(bad)
or
jo
jo
xlat
enter
mov
push
je
inc
or
aam
or
ins
add
test
xor
jmp
lods
or
sub
outs
syscall
pop
xor
xor
mov
lods
push
pushf
pusha
adc
mov
fadd
sbb
add
push
mov
xchg
add
inc
mov
inc
jo
dec
jl
test
clc
daa
mov
xor
add
push
or
inc
push
test
mov
xor
or
push
sbb
push
and
dec
inc
inc
test
lods
std
mov
(bad)
ror
push
xor
imul
das
sub
es
add
or
loop
hlt
inc
sub
clc
jo
sub
nop
mov
mov
mov
or
je
dec
adc
fld
jb
cmp
and
cwde
mov
movs
or
push
sbb
mov
adc
adc
pop
pop
add
ins
push
add
mov
jno
jmp
popa
jmp
pop
enter
invd
inc
cmp
mov
or
or
fmul
cli
push
adc
add
ret
nop
aaa
aaa
hlt
or
bsf
dec
push
xchg
mov
push
and
loopne
sub
xor
xor
addr16
or
xor
xor
retf
sahf
scas
push
and
enter
aad
adc
ret
jb
or
dec
imul
fst
shr
and
xchg
sbb
or
sar
xchg
arpl
jnp
cld
loopne
fcmove
sub
push
daa
jnp
add
or
or
or
add
cs
repz
ss
cmp
jecxz
in
push
stc
in
pusha
xchg
out
aaa
adc
add
add
add
fild
mov
clc
in
add
movs
push
push
(bad)
outs
jp
nop
pushf
or
pop
mov
adc
or
push
sub
aaa
adc
repz
dec
push
pop
repz
rep
js
mov
pushf
lea
pop
lock
xchg
jb
sahf
retf
jmp
jnp
pusha
adc
push
or
or
or
popa
pop
xor
add
and
sub
push
pop
add
add
out
cmp
repz
jae
js
outs
(bad)
icebp
xlat
xor
pop
mov
das
sbb
or
sub
and
jns
jmp
mov
xor
cmp
sbb
cmc
jns
jo
ins
sub
lods
mov
out
fincstp
inc
fidiv
fidiv
or
ret
add
pop
jecxz
cmps
cmp
test
jmp
or
add
in
bound
pop
cwde
jo
jnp
int
push
or
int3
fld
sahf
out
out
push
add
or
adc
and
fmul
ins
jbe
inc
or
int
pusha
sub
ja
pop
inc
enter
aaa
sti
ds
mov
(bad)
enter
mov
xchg
pop
repnz
jecxz
sbb
lock
adc
sub
and
push
xor
sub
dec
dec
xor
enter
adc
icebp
pusha
and
sbb
and
(bad)
test
loop
ins
cmp
lea
sub
mov
ins
add
test
pop
ds
mov
ds
repz
mov
aas
cmp
cmps
std
or
cmc
xor
shl
aaa
mov
inc
pushf
xchg
shl
fsubrp
test
loope
in
popf
cs
sbb
loope
sbb
fmulp
test
inc
sbb
imul
push
repnz
sbb
ror
fmulp
gs
cmp
xor
movs
or
iret
repz
out
push
pop
sub
int
or
inc
cmp
int3
add
jns
mov
jp
xchg
shl
mov
int
jecxz
jnp
add
push
(bad)
adc
(bad)
mov
push
or
ds
xor
aad
jno
int
mov
loop
scas
fistp
neg
pop
jle
lock
imul
ds
pop
xchg
add
out
aaa
jne
sub
or
or
or
or
repz
adc
adc
repz
repz
push
pop
sbb
repz
sbb
sbb
and
iret
adc
and
es
inc
ficom
xor
scas
fistp
inc
inc
pop
mov
fiadd
inc
sub
pushf
jns
jmp
mov
icebp
inc
inc
mov
out
sahf
cmps
rol
mov
sar
jns
fucomp
test
jns
out
cmp
cwde
fidivr
or
adc
jne
out
jmp
or
popa
icebp
dec
fwait
push
ins
add
push
in
adc
mov
inc
mov
push
push
in
test
adc
or
or
fcom
cmp
push
test
sbb
sbb
push
leave
sub
pop
retf
inc
xor
and
dec
inc
fadd
inc
sub
out
lea
sub
cs
and
pop
xchg
pop
jb
sub
in
push
popa
inc
retf
push
leave
bound
xchg
mov
shr
sbb
or
push
or
imul
sub
or
jo
nop
or
or
(bad)
and
and
fwait
es
and
pop
jb
pop
and
and
pop
jb
daa
and
inc
pop
cli
mov
lahf
mov
(bad)
fwait
inc
in
pop
push
adc
mov
(bad)
data16
dec
ja
aaa
cmp
xchg
or
rcr
leave
mov
adc
adc
sbb
inc
pop
xchg
or
xchg
push
dec
ds
retf
and
dec
test
adc
sbb
jne
popa
and
sub
les
sbb
inc
ja
sub
(bad)
jge
popa
adc
mov
call
dec
sti
fnstcw
aas
and
ret
jge
out
pop
dec
dec
adc
jge
jnp
mov
push
fsubr
outs
aas
stos
ror
popf
out
in
loope
sbb
adc
dec
or
loopne
mov
xor
dec
aas
inc
and
inc
xor
pop
out
sahf
out
dec
dec
pop
fs
out
sahf
jl
xchg
mov
out
(bad)
rcr
call
ret
push
leave
adc
repnz
and
int
and
shl
rcl
xchg
pop
jb
aam
(bad)
xlat
mov
in
push
out
push
or
dec
jecxz
pushf
add
cmp
cmp
sub
ror
and
push
jb
and
mov
sub
and
sbb
ss
daa
fsub
(bad)
jmp
dec
outs
or
aaa
ret
dec
sbb
jne
xor
or
adc
dec
pop
(bad)
adc
sbb
ins
dec
cdq
dec
cmp
mov
adc
lds
dec
or
jmp
fdivr
xor
xchg
push
repnz
or
pusha
inc
ficomp
jp
dec
pop
sti
push
add
into
repz
sbb
mov
mov
std
aas
push
sub
das
sbb
xor
dec
dec
movs
bound
ins
js
nop
int
pop
push
sbb
hlt
ins
mov
repz
movs
leave
push
rcr
jmp
int
gs
sub
faddp
sbb
xor
cmp
push
cmp
jmp
and
(bad)
mov
fmulp
gs
jmp
sahf
mul
push
and
sub
movs
push
repz
xchg
push
cs
ins
les
out
mov
enter
loope
lds
push
push
jmp
jnp
xlat
cmp
lods
das
push
sbb
mov
mov
pushf
shl
or
jmp
pop
bound
mov
rcl
sbb
das
or
jmp
imul
cld
daa
add
fbld
or
sub
es
push
sub
adc
sub
push
push
push
iret
xchg
jbe
xchg
test
(bad)
cwde
or
push
hlt
cmc
add
(bad)
xchg
cmp
pop
sub
or
cmp
js
jae
adc
add
push
jo
jo
div
rol
push
sbb
add
in
push
test
cmp
daa
pop
mov
out
xchg
mov
push
cmps
fprem
outs
push
pop
shl
fild
sbb
loop
mov
add
arpl
add
add
shl
sbb
mov
push
xor
inc
inc
fs
or
sbb
mov
loope
shl
loopne
mov
sbb
sbb
test
in
adc
repz
ret
and
push
jbe
mov
adc
add
sbb
dec
je
jp
sbb
cmp
jmp
(bad)
fnstenv
sub
push
lea
fadd
or
nop
or
lods
xchg
push
sbb
into
dec
sub
arpl
js
add
sub
adc
jl
jge
sub
mov
dec
pop
mov
imul
in
xor
lea
or
in
mov
bound
jno
ret
cwde
repnz
dec
push
cmovb
dec
sbb
add
add
lea
aam
shl
hlt
scas
adc
xchg
mov
mov
leave
add
jl
push
in
or
loopne
mov
xchg
jle
inc
daa
ins
and
adc
cmp
xor
and
rol
push
inc
or
jb
js
push
int3
ret
sub
cmp
(bad)
cmp
vmovaps
xor
mov
add
jne
mov
xor
fist
and
jg
(bad)
adc
cmp
scas
jb
mov
push
push
test
mov
jg
and
test
and
cmp
inc
dec
mov
dec
cmp
cmp
retf
jne
fcom
test
pop
sub
add
cmp
push
ret
mov
add
(bad)
xlat
push
adc
mov
pop
outs
sbb
add
xor
sbb
inc
shl
and
dec
nop
push
push
pop
jmp
jne
(bad)
jo
clc
les
or
je
push
cld
cdq
call
pop
hlt
xor
push
adc
loopne
in
xor
in
(bad)
sbb
inc
andnps
add
loopne
cmps
add
ret
sahf
shl
stos
out
jae
sbb
sbb
dec
pop
or
daa
xchg
dec
cs
inc
ins
cmp
ds
popa
and
fcom
mov
(bad)
mov
cmp
sbb
pop
mov
pop
or
and
add
std
inc
add
or
ret
jo
push
call
jns
cmp
and
sbb
fldcw
loopne
jne
mov
mov
adc
(bad)
push
and
push
xor
imul
jnp
popa
aam
sbb
push
jmp
sub
pop
xchg
or
dec
sbb
outs
ret
sahf
adc
dec
sub
or
pushf
xchg
sbb
in
add
inc
inc
in
add
fdiv
movs
cmps
enter
adc
sub
je
js
or
mov
inc
outs
cmp
jo
mov
push
and
mov
sub
ins
or
loopne
mov
mov
ror
or
jmp
bnd
jge
retf
fnsave
cmp
je
push
je
push
jne
sti
mov
sbb
sbb
or
dec
or
adc
sbb
test
jo
sbb
cmp
scas
cmp
jp
add
pop
outs
into
jnp
out
add
jmp
mov
ins
and
(bad)
push
xor
adc
pop
mov
sub
xor
jno
push
inc
call
cmp
lock
push
sbb
xor
js
rcr
adc
popa
pop
mov
sub
inc
inc
adc
fldcw
xchg
jmp
daa
adc
add
or
movs
adc
mov
push
jbe
or
xor
pushf
add
or
(bad)
ror
push
add
in
and
rcr
cmps
mov
(bad)
retf
fiadd
fild
addr16
(bad)
popf
xchg
pop
inc
push
rcr
cmp
pop
ficomp
mov
adc
sbb
xchg
mov
dec
jb
shl
test
pop
xor
add
and
jnp
dec
jp
pop
or
outs
les
add
and
sti
or
arpl
jne
inc
push
jb
or
aas
pop
ror
lods
inc
aaa
dec
push
jae
sub
dec
push
aas
dec
js
mov
lahf
jle
or
nop
inc
add
and
test
sub
cdq
fdiv
stos
repnz
pop
xchg
push
or
lds
out
sti
ss
lock
lahf
out
jmp
ins
pop
out
pusha
jecxz
xor
mov
(bad)
cli
cwde
xor
je
hlt
cmp
push
dec
xchg
sqrtps
sbb
test
xchg
jmp
jno
mov
repnz
jne
push
and
push
dec
shl
and
xor
out
div
pop
je
clc
sub
imul
or
fchs
cmp
mov
mov
jg
xor
or
jo
pop
das
sub
popa
sbb
cmp
and
lock
add
inc
jecxz
rol
aas
sbb
push
fild
sub
or
fistp
jmp
pop
push
adc
mov
lods
add
add
adc
lods
mov
dec
jmp
lods
jmp
cmp
(bad)
cmps
sbb
xor
inc
mov
sbb
mov
adc
mov
or
sti
sahf
add
adc
jnp
and
ins
popf
cmp
(bad)
or
iret
or
add
push
pop
sbb
ss
xchg
ret
out
enter
xchg
ins
not
sub
and
or
fimul
xchg
jbe
xchg
dec
pusha
mov
jmp
xor
mov
in
mov
jnp
loope
popa
dec
xor
je
jo
stos
addr16
jns
push
cmp
inc
adc
adc
add
ret
push
or
mov
mov
pusha
xchg
adc
and
inc
xchg
es
jg
pop
dec
inc
and
add
push
xchg
and
in
add
sar
mov
jg
sub
add
add
sbb
clc
rcl
jge
pop
aas
xchg
jp
retf
hlt
push
dec
adc
outs
xchg
adc
jae
nop
xchg
and
aaa
outs
jo
lock
push
mov
pop
xor
push
test
xor
mov
daa
mov
test
add
fs
mov
bound
shl
(bad)
popf
and
inc
lea
or
push
jo
jmp
push
pop
pop
adc
hlt
mov
cwde
test
outs
sub
nop
push
loop
push
cwde
scas
xor
pusha
jmp
sbb
jne
jp
ins
inc
jb
inc
jmp
addr16
dec
push
repnz
jle
adc
nop
or
jo
adc
and
pop
jo
mov
sub
je
data16
lds
add
lods
mov
out
mov
addr16
pop
sub
(bad)
push
in
push
xor
adc
push
or
cmp
adc
and
pop
mov
es
adc
pop
push
sub
mov
dec
cmp
push
test
mov
(bad)
mov
add
mov
inc
jmp
add
mov
(bad)
mov
xchg
fiadd
popf
out
push
push
int
or
mov
jmp
cmp
add
es
and
jmp
daa
pop
dec
in
shl
mov
push
cmp
dec
cmp
push
outs
or
test
ja
add
pop
push
inc
jle
dec
daa
lock
xor
imul
adc
dec
sbb
mov
push
dec
pop
adc
sub
daa
mov
pop
sar
pop
pop
fdivr
push
les
mov
mov
cmp
xchg
push
(bad)
jne
cmps
add
movs
mov
jp
sub
adc
mov
(bad)
ins
out
mov
aaa
sysret
jno
pop
bound
dec
add
add
fidiv
sbb
movs
xchg
cs
cmp
inc
mov
div
mov
xor
push
adc
jmp
dec
pop
pop
loope
sti
ins
or
sbb
and
sar
and
and
in
out
cmp
inc
mov
inc
enter
jb
popa
push
fld
scas
in
jp
inc
inc
pop
sbb
adc
jp
(bad)
dec
or
sub
test
stos
jge
shl
bound
jno
test
dec
mov
movs
xor
idiv
cld
sub
mov
fs
push
stos
adc
cdq
icebp
push
cld
lods
jne
test
je
dec
outs
inc
add
lds
jg
stos
mov
adc
aaa
jo
js
js
push
dec
adc
test
loope
fstp
test
jnp
call
or
or
and
push
push
rol
test
xor
jne
movlps
add
lea
xlat
or
(bad)
(bad)
cs
adc
mov
cmp
inc
sti
mov
pop
or
jno
stos
inc
ds
sbb
pop
scas
mov
mov
adc
gs
mov
push
sub
mov
adc
pop
test
clc
xor
cmp
sub
jge
(bad)
test
inc
jne
or
sbb
adc
or
xchg
jge
or
fsub
push
sti
imul
xor
pop
(bad)
xor
pop
add
add
and
loopne
inc
sbb
adc
jmp
daa
imul
add
call
dec
push
movs
adc
mov
or
sub
jae
add
inc
pop
hlt
daa
call
add
or
sbb
sbb
outs
stc
push
push
mov
fwait
test
adc
and
mov
pop
(bad)
mov
mov
xor
xchg
call
ret
mov
out
ret
shl
repz
sahf
out
sbb
sub
adc
and
inc
jns
fdivr
aas
arpl
jae
cmp
out
mov
rol
fwait
idiv
adc
and
imul
aas
push
pop
arpl
add
pop
inc
cs
and
sub
add
inc
cs
add
and
enter
add
add
push
mov
enter
pop
enter
add
add
test
add
and
and
sbb
and
fwait
ror
dec
in
imul
pusha
sub
je
fild
cmovne
cmp
push
jno
mov
pop
jmp
push
imul
jb
push
sub
in
daa
jnp
loopne
add
inc
shl
loope
adc
mov
push
push
test
ror
and
dec
nop/reserved
adc
mov
add
or
inc
sbb
nop
sub
xor
jno
or
fmul
js
add
cmp
clc
mov
shl
inc
test
je
les
adc
pop
cmps
xor
arpl
leave
rcl
lods
xor
pop
inc
dec
shl
clc
mov
mov
fcomp
scas
test
fisttp
xor
mov
js
aam
mov
pop
dec
or
or
add
jecxz
add
push
sbb
sub
push
mov
mov
mov
pop
mov
daa
ds
push
repnz
sub
fiadd
(bad)
jmp
pop
mov
data16
pop
dec
or
inc
jge
sbb
cdq
fbstp
mov
or
(bad)
push
mov
cli
inc
add
mov
pop
inc
addr16
add
mov
out
daa
clc
sbb
pop
cmp
and
push
imul
adc
jp
cmps
sbb
adc
adc
(bad)
mov
fisttp
push
and
and
stc
clc
leave
mov
or
adc
mov
lahf
loop
push
and
test
adc
retf
sbb
rcr
mov
sub
lds
cld
xlat
cmp
push
and
push
add
dec
pop
popa
dec
mov
cmc
lock
out
or
jbe
mov
inc
and
ror
movs
push
cld
repz
aam
outs
or
sti
jge
mov
popf
movs
mov
push
gs
iret
adc
jns
fst
pop
popa
jae
xchg
jns
out
test
sahf
out
out
pop
test
pop
pop
sub
sahf
out
dec
dec
pop
ins
jns
jns
out
xchg
mov
in
test
aam
mov
pop
sub
ins
loope
out
imul
rcl
imul
fmul
sbb
add
(bad)
mov
push
pop
mov
nop
adc
and
mov
ins
nop
imul
jb
inc
and
push
cmp
rcr
push
mov
sbb
arpl
jmp
inc
sbb
jbe
pop
mov
jae
sub
sbb
or
adc
xor
push
pop
sbb
cmc
adc
iret
xchg
repz
cmp
imul
mov
fisttp
outs
jp
les
jg
or
sbb
je
jmp
adc
pop
clc
frstor
aaa
pop
and
or
pop
add
and
loope
and
mov
add
je
push
loopne
jmp
jg
pushf
cmp
adc
adc
and
nop
daa
adc
cdq
cmp
arpl
xchg
sbb
scas
repnz
hlt
stos
push
lahf
jg
or
inc
aam
inc
add
sahf
neg
push
repnz
cmp
shl
loop
icebp
add
je
neg
clts
push
sub
cmps
mov
add
sbb
test
sbb
push
out
sbb
enter
jecxz
or
movs
adc
not
xor
add
repnz
add
xchg
sub
and
pop
sub
popf
adc
aad
sti
push
and
sub
ins
xchg
cmc
adc
ds
loope
ds
push
mov
xor
ret
jb
or
push
popa
mov
xor
pop
and
and
test
je
(bad)
cmp
dec
or
loop
stc
dec
push
push
daa
jmp
jno
mov
jmp
unpcklps
jns
inc
ds
and
and
lea
scas
cli
push
clc
xchg
femms
xchg
add
mov
repnz
sub
ret
add
cdq
mov
arpl
push
or
adc
cmp
cmps
push
mov
jl
sar
add
das
test
xchg
push
and
sub
adc
(bad)
inc
inc
mov
and
loop
or
mov
pop
sar
inc
jmp
mov
or
add
jp
fdivp
clc
push
rcr
or
jbe
xchg
nop
or
sti
pop
and
pop
jb
dec
mov
xor
add
or
mov
add
std
loop
in
add
jne
jno
push
mov
add
rcr
adc
bound
aas
xor
cmp
inc
push
or
add
pop
push
add
xor
lds
sti
icebp
add
rcl
mov
mov
lods
test
scas
sbb
jo
sar
fsub
clc
sbb
cmps
dec
iret
push
shl
ror
retf
mov
add
push
arpl
xor
sub
add
dec
ret
ins
add
(bad)
mul
or
and
(bad)
loopne
iret
cmp
mov
push
shl
clc
sub
mov
mov
stos
pusha
inc
pop
jns
mov
pop
and
xchg
mov
daa
outs
sbb
test
or
mov
mov
or
xor
inc
or
push
add
movs
pop
inc
sub
jae
push
push
push
inc
add
add
adc
lahf
in
pop
inc
lock
pop
jecxz
outs
ins
xchg
or
movs
popa
and
xchg
icebp
movs
adc
push
movs
test
jmp
pop
add
adc
bound
leave
jmp
mov
test
jnp
sbb
dec
dec
adc
test
nop
(bad)
and
pop
push
mov
and
push
sbb
or
push
or
(bad)
mov
mov
rol
cli
xor
pop
add
mov
and
or
popa
xchg
mov
add
out
add
or
mov
jb
icebp
jns
test
scas
fld
mov
out
sahf
out
push
sub
lods
pop
adc
sbb
aad
rol
push
mov
cdq
mul
jl
push
pushf
push
mov
or
xchg
xchg
fmul
hlt
adc
push
leave
push
jb
xor
push
and
ins
and
jae
mov
push
jb
leave
dec
mov
and
fsubr
pop
movs
xchg
push
pop
das
dec
adc
rcr
dec
jle
sbb
xor
divps
je
push
dec
arpl
push
stos
outs
mov
aas
retf
js
je
add
aaa
addr16
pushf
(bad)
fmul
aaa
cmps
in
pop
adc
aas
inc
xchg
add
mov
sub
push
pop
aaa
or
mov
dec
out
es
inc
pop
mov
arpl
or
inc
(bad)
aas
push
shl
clc
pop
push
out
add
push
fs
xor
das
jae
adc
lds
inc
sbb
shl
cmp
or
daa
test
cmp
add
add
test
and
es
into
sbb
xchg
add
lea
xchg
test
xchg
add
lea
ins
push
or
push
daa
jg
jnp
dec
adc
adc
cmp
les
cmp
test
pop
cbw
xor
data16
cmp
and
mov
lea
repnz
add
sbb
sbb
push
mov
es
sub
adc
sar
xchg
adc
push
movzx
xlat
call
nop
pop
adc
lods
inc
pop
inc
in
jb
pop
pushf
pop
ins
push
sub
(bad)
(bad)
or
aas
ficom
(bad)
push
cmps
push
cdq
and
sbb
or
adc
add
fisttp
and
lods
test
cs
es
push
scas
dec
je
sub
imul
mov
mov
cdq
neg
inc
xor
jle
ret
vunpckhps
scas
push
sub
out
sub
push
mov
ret
nop
(bad)
dec
xchg
sbb
cmp
fs
aam
dec
fild
cwde
jns
and
add
call
jo
cld
daa
ins
dec
cmp
sub
pop
adc
pop
and
adc
sub
pop
dec
gs
sub
fadd
add
jns
jae
cmp
xchg
push
shl
sbb
out
and
push
push
push
popa
imul
fs
outs
pop
xor
push
inc
xor
inc
gs
or
sbb
ins
add
mov
adc
push
cli
jnp
cmc
dec
outs
outs
imul
or
mov
in
inc
pop
add
jns
mov
and
pop
rol
fbstp
mov
mov
outs
add
or
inc
inc
sbb
mov
gs
inc
jb
popa
jns
not
movs
and
xchg
xchg
pop
div
xor
pop
push
lahf
adc
push
fadd
mov
fstp
das
repnz
sbb
loopne
fist
out
fdivr
cmps
add
push
inc
outs
jne
out
inc
mov
inc
add
int3
je
outs
jbe
dec
gs
mov
js
add
mov
or
sbb
push
jo
xor
add
sub
adc
dec
clc
pop
pop
add
add
inc
leave
push
sbb
inc
jne
ins
jbe
mov
xchg
xchg
xchg
pop
mov
rcr
aam
xchg
loopne
mov
xor
inc
inc
xor
cmps
cmps
bound
aam
jo
sub
pusha
ins
popa
jno
push
add
mov
cli
rol
(bad)
dec
ror
cld
xchg
add
add
cmp
imul
lmsw
xor
(bad)
and
sti
pop
push
inc
imul
push
or
imul
jp
jns
pushf
loopne
pop
adc
or
push
or
inc
cmp
add
pop
das
xor
add
push
adc
rol
popa
fsub
cwde
push
xchg
aas
in
mov
(bad)
jl
adc
dec
outs
or
pusha
push
cld
jns
jbe
outs
je
(bad)
jbe
rcl
fs
add
into
inc
or
shr
cmc
loope
inc
rcl
fs
pop
test
out
lock
das
call
loop
jmp
out
add
xlat
outs
jnp
scas
pop
mov
in
cdq
movs
fwait
push
es
das
pop
push
cmp
in
mov
pop
jo
jecxz
(bad)
popa
retf
shl
clc
daa
or
mov
aaa
push
inc
dec
pop
js
pop
outs
(bad)
sbb
sub
xor
cmp
xchg
or
imul
aam
pop
or
or
inc
xchg
add
add
lds
aam
(bad)
mov
inc
inc
pop
mov
push
stos
add
adc
sbb
xchg
lock
outs
cmp
push
clc
cmp
outs
mul
pop
popf
das
xor
outs
cmp
hlt
outs
add
popf
dec
fcomp
add
jbe
and
inc
clc
push
repnz
dec
jb
pop
push
aam
cmp
push
mov
dec
rol
push
lds
dec
pop
mov
sbb
mov
fnsave
repz
xchg
fimul
push
and
call
shr
mov
lahf
mov
sub
lahf
or
test
lahf
cld
lahf
jne
pop
jo
cmp
icebp
add
xor
mov
cmp
xchg
les
dec
je
and
jae
dec
or
rcr
sbb
xor
jno
xchg
nop
(bad)
xlat
ins
adc
xchg
cmp
adc
and
leave
mov
and
int3
mov
nop
(bad)
jne
dec
shufps
inc
jno
adc
cmp
adc
pop
add
mov
int
jecxz
mov
sbb
push
call
sub
(bad)
pop
cmp
mov
mov
ror
pop
adc
in
push
test
pop
mov
mov
sub
pop
jns
and
mov
lds
ja
movs
mov
ret
(bad)
mov
push
movs
ja
cmps
clc
or
sahf
imul
adc
push
clc
es
push
out
test
mov
jg
push
mov
adc
cmp
jno
ret
pop
arpl
cmps
scas
push
push
ret
cwde
(bad)
fwait
mov
cmp
and
or
sbb
daa
jnp
lea
mov
xlat
shl
dec
xlat
retf
cmp
iret
pop
test
es
cmp
fisubr
xchg
mov
pop
pushf
enter
jae
lock
repz
inc
or
mov
add
movs
enter
or
inc
call
jns
mov
and
mov
jp
test
pusha
enter
(bad)
adc
je
ja
push
test
jns
out
sub
push
popa
stos
das
dec
xor
xchg
out
dec
shl
(bad)
push
jo
push
lea
push
push
xchg
fmul
icebp
add
cwde
mov
or
push
mov
mov
mov
imul
fist
push
inc
xor
je
cwde
ja
jb
push
sub
pop
sbb
or
dec
outs
sub
data16
cs
xor
cs
xor
sub
cmp
add
lea
adc
test
adc
stos
fist
xor
push
lods
push
popf
sub
adc
add
in
jns
enter
jae
xor
int3
es
call
sub
mov
mov
shr
adc
push
adc
pop
cmp
add
arpl
retf
jno
imul
add
aam
push
sbb
jecxz
mov
mov
cmp
pushf
add
dec
add
adc
loope
add
pop
pop
inc
shl
mov
fwait
or
mov
add
add
fs
add
cld
movs
test
add
add
lods
(bad)
or
add
gs
or
cld
push
gs
outs
jbe
and
or
mov
mov
repz
pop
jg
and
mov
add
pop
push
jb
sub
mov
push
add
arpl
push
inc
and
loope
test
mov
adc
test
and
pop
imul
or
xchg
and
push
or
cmp
or
sub
ret
xor
push
dec
pop
mov
test
xchg
xchg
je
imul
rol
(bad)
sub
sub
xchg
push
test
xor
ret
adc
mov
mov
in
push
pop
push
addr16
adc
and
push
or
xchg
jg
push
pusha
mov
fs
or
or
inc
fs
adc
adc
push
test
dec
push
movs
inc
sub
cmps
loopne
stos
ret
adc
jae
loope
jge
mov
test
pop
inc
or
adc
cmps
jmp
dec
or
leave
loopne
mov
push
mov
pop
pop
and
ret
xor
test
mov
sbb
add
sbb
add
mov
jmp
aam
fadd
fadd
lahf
sbb
movs
je
mov
add
aaa
mov
movs
xor
lock
add
dec
call
sbb
mov
and
pop
daa
shl
(bad)
xor
jge
(bad)
jmp
(bad)
stc
adc
clc
cmp
push
lock
mov
and
xchg
xchg
mov
in
in
sub
popa
jmp
pop
mov
mov
cld
mov
push
cmp
jge
mov
retf
cmp
jne
mov
push
gs
ret
mov
sar
add
or
mov
sub
int
push
and
mov
mov
add
mov
mov
test
add
jge
(bad)
xor
jnp
push
add
xchg
arpl
and
mov
lahf
mov
rcl
mov
adc
mov
add
xchg
add
in
sub
add
bound
shr
hlt
shr
add
enter
mov
lods
xchg
ja
cmp
cmp
jge
or
loopne
cmps
xor
push
aaa
mov
mov
pop
add
(bad)
iret
adc
and
rcl
loopne
xor
add
xchg
add
and
push
adc
lds
add
test
rcr
js
in
mov
lock
jbe
add
push
clc
and
cwde
fdivr
xor
not
jmp
cmp
adc
cs
xchg
pushf
gs
mov
icebp
popa
aas
jp
inc
cmp
rol
pop
mov
xor
pop
shr
mov
and
pop
pop
mov
add
enter
and
in
cmp
dec
mov
pop
add
mov
xchg
jp
xor
dec
cld
xor
(bad)
jb
mov
ror
dec
push
lea
cld
jo
dec
add
ror
pop
add
nop
or
arpl
loope
cmp
push
fimul
dec
jge
adc
push
in
push
imul
call
into
stos
adc
xor
mov
mov
inc
pusha
or
pusha
(bad)
mov
and
cmps
push
shl
iret
xchg
adc
cmp
xor
aaa
mov
mov
das
sbb
mov
add
sbb
add
push
xchg
imul
add
shl
or
sub
mov
or
add
mov
mov
mov
inc
data16
jmp
inc
fdivr
sbb
dec
add
or
inc
dec
bound
mov
mov
push
sbb
test
mov
cmp
push
push
retf
push
sbb
or
repz
and
icebp
and
add
push
aam
leave
sbb
test
jo
inc
or
popa
and
and
out
inc
inc
xor
mov
cmp
jne
fst
mov
xor
(bad)
and
cmps
retf
push
ror
adc
add
jns
inc
mov
test
adc
add
ins
and
inc
adc
jl
retf
enter
push
jo
stos
jl
cmp
stos
and
add
adc
movs
enter
xlat
pop
movs
adc
push
or
cmp
movs
mov
adc
push
(bad)
sub
ror
inc
add
iret
or
int3
popa
cmps
dec
lahf
dec
push
or
sbb
push
and
push
sbb
iret
and
sub
or
jmp
jne
inc
sbb
in
pop
add
or
inc
setge
outs
adc
jmp
pop
jo
add
cmp
retf
call
or
xchg
mov
xchg
aas
sub
ss
pop
int3
jno
ins
sub
add
jecxz
dec
rcr
jae
scas
mov
and
lahf
aaa
lock
sbb
gs
xor
sub
cmc
adc
or
clc
mov
lock
xor
inc
call
lock
loop
xor
imul
and
inc
das
pop
hlt
ud1
je
call
mov
sub
and
adc
sub
adc
inc
movs
adc
and
stos
lock
mov
sbb
mov
pop
lea
inc
dec
sub
add
adc
add
pusha
sbb
sub
push
mov
sub
lea
repz
ins
shr
add
arpl
(bad)
es
stos
aam
mov
push
sbb
mov
hlt
add
adc
add
add
dec
push
(bad)
inc
add
push
je
sbb
(bad)
cld
ins
cmp
dec
lods
cwde
int
mov
cmps
lods
push
xchg
mov
fadd
push
les
dec
mov
shrd
cmp
and
cmps
inc
dec
push
mov
jmp
enter
(bad)
in
xchg
sbb
or
lods
rcl
pop
push
jb
cmp
pop
sti
jbe
pusha
or
jbe
add
mov
or
rol
add
ret
dec
pop
jl
imul
clc
inc
jns
or
lock
push
and
shl
scas
enter
xchg
sbb
add
xchg
lahf
push
dec
adc
lock
leave
push
xor
inc
inc
push
rcr
add
sub
mov
add
test
enter
shl
rcr
and
cwde
push
sub
inc
fwait
and
mov
pop
jns
rcr
jno
push
push
call
add
pop
jg
inc
and
mov
ja
mov
push
dec
les
ja
cmp
ja
nop
push
les
inc
adc
ja
data16
lahf
ja
daa
pop
leave
scas
xor
xor
cwde
ja
movs
aas
mov
ja
ret
loopne
sub
(bad)
cmp
enter
call
stos
femms
mov
pop
loope
pop
(bad)
mov
cmp
enter
test
push
loop
jge
(bad)
xlat
mov
js
jb
add
fild
int
stc
cmp
ja
mov
inc
sub
adc
in
mov
inc
pop
(bad)
js
repnz
(bad)
mov
xor
add
(bad)
cmp
scas
loopne
test
mov
(bad)
mov
loopne
mov
and
or
cmp
jge
push
mov
std
mov
movs
jmp
arpl
sbb
lock
pop
sub
mov
jle
into
daa
adc
cmp
mov
xchg
fld
pop
inc
lods
cmp
mov
or
dec
add
dec
ror
cmovno
jge
fdiv
inc
fucomip
lsl
adc
cmp
jg
dec
loopne
or
xor
loopne
div
popf
(bad)
jb
or
inc
test
jne
add
je
les
jle
mov
and
adc
pop
fnsave
pop
pop
js
mov
sub
inc
jg
mov
fs
add
push
mov
dec
mov
das
mov
(bad)
mov
repnz
retf
rcl
push
and
jecxz
xor
retf
or
(bad)
aas
inc
pop
xor
in
lock
das
sqrtps
push
or
mov
bound
sub
out
mov
mov
dec
ret
add
mov
xor
cmc
adc
add
add
xor
idiv
pop
icebp
test
adc
repz
punpckldq
mov
and
cmp
shl
test
xor
mov
push
pushfw
cs
int
push
and
int
pop
jle
jle
add
leave
add
cmp
popa
lock
push
add
add
adc
push
retf
fwait
call
dec
adc
int3
pop
ret
pop
sar
sub
dec
add
(bad)
add
add
leave
xor
dec
ins
sti
inc
cmp
adc
or
ficom
mov
lock
inc
xor
ret
cdq
inc
jb
imul
cmp
int
jnp
inc
and
dec
hlt
rcr
push
xor
add
test
jnp
hlt
add
stos
rol
add
test
shr
jne
(bad)
dec
retf
retf
pop
ds
pop
and
add
cmovae
cmp
mov
jmp
mov
das
mov
inc
or
setg
mov
pop
(bad)
push
inc
add
add
mov
pop
ret
and
jns
aas
mov
jb
add
cld
stos
add
ret
nop
push
pop
and
daa
out
aaa
pop
leave
mov
add
mov
call
pop
daa
jae
in
int3
iret
mov
inc
mov
inc
dec
daa
pop
rol
add
daa
popa
push
jb
daa
data16
scas
pusha
and
mov
lock
sbb
nop
pop
or
or
inc
scas
ins
cs
xchg
mov
gs
mov
sbb
or
mov
mov
adc
or
cs
add
popa
dec
pop
lock
outs
inc
sbb
jbe
mov
inc
xor
mov
jnp
aad
push
bnd
inc
add
or
mov
test
je
or
shr
add
xor
in
cmovs
hlt
ret
add
pushf
out
nop
inc
add
sbb
nop
adc
aam
das
test
outs
les
add
mov
aam
push
xor
jns
aad
test
push
aad
adc
or
outs
ret
loopne
sbb
adc
push
and
inc
cld
ins
ret
adc
(bad)
dec
add
ret
(bad)
sub
mov
rol
shr
cmp
loopne
push
(bad)
lods
(bad)
mov
retf
in
add
enter
rol
int3
add
dec
fnstenv
xlat
add
les
dec
pusha
or
or
dec
fld
pusha
add
xchg
push
and
mov
xchg
movs
pop
cmp
mov
das
shr
xor
nop
mov
out
pop
inc
pop
pop
enter
(bad)
or
mov
dec
pop
shl
int3
adc
dec
add
dec
in
in
adc
int3
sub
dec
push
int3
iret
push
outs
push
adc
int
or
rcl
outs
jae
or
cmp
out
ss
add
into
pop
push
inc
fiadd
jns
add
iret
ficom
push
xor
out
adc
(bad)
cwde
outs
jnp
dec
inc
enter
loopne
pop
cmp
dec
int
fs
add
test
in
inc
inc
int3
addr16
pop
cmp
int3
(bad)
fidivr
pusha
xchg
aaa
adc
inc
sbb
ss
repnz
xor
or
lea
add
imul
xor
jge
cmp
adc
test
pop
test
cmp
lock
xchg
inc
cmc
sbb
nop
dec
dec
sbb
sub
fisubr
add
fisttp
gs
jne
je
add
inc
and
nop
stos
movs
mov
xchg
dec
push
sub
push
ss
jb
inc
dec
mov
xchg
dec
add
mov
adc
xor
xchg
cmovle
or
or
push
mov
add
push
aas
out
ror
mov
dec
push
adc
pop
push
pop
rol
mov
sub
add
inc
fild
sahf
fsub
in
and
adc
cli
xor
xor
enter
cld
in
arpl
push
or
inc
pop
dec
add
pop
nop
into
cld
in
push
inc
rol
nop
inc
sbb
nop
neg
out
int
je
test
or
unpcklps
cmp
div
push
clc
cs
test
call
loop
sbb
jo
cwde
push
and
mov
pop
or
sbb
mov
nop
shl
pop
imul
ja
pop
sub
iret
and
jecxz
mov
or
cmovb
cmp
and
jmp
and
pop
mov
enter
cmp
in
inc
mov
jb
xor
add
xor
sbb
jb
jmp
out
dec
mov
cmp
jns
or
xor
pop
scas
push
add
push
shl
lock
xor
or
call
fcmovbe
hlt
ins
sbb
add
dec
add
mov
or
mov
jno
and
jmp
repz
xor
dec
mov
pop
ror
mov
pop
adc
dec
in
mov
push
popa
outs
addr16
add
xor
or
ja
push
xor
xor
push
je
pusha
and
enter
mov
add
scas
xchg
inc
jnp
dec
and
mov
pop
adc
xor
bound
inc
cmp
lds
cmp
sti
adc
imul
inc
jnp
add
add
or
jno
mov
dec
dec
retf
mov
loopne
stos
mov
xor
mul
add
outs
jbe
lahf
or
or
popf
or
ja
jmp
or
xor
repnz
xor
add
das
out
dec
popa
pop
and
movs
jae
shl
sub
aaa
daa
(bad)
bound
ss
jo
nop
pop
xchg
dec
and
xor
add
or
in
daa
fbld
pop
jl
and
cmp
push
outs
jb
add
pop
adc
inc
jge
aaa
and
dec
ins
or
cmp
inc
xchg
dec
mov
or
jae
rcl
and
sbb
or
xchg
dec
imul
shl
int
jmp
inc
pop
pop
pop
test
daa
sub
cld
in
push
pop
adc
leave
loop
push
lods
pop
push
pop
adc
aad
inc
and
add
inc
cmp
les
and
clc
xchg
into
ss
(bad)
fild
stc
or
in
jmp
add
and
leave
add
xchg
or
add
or
shl
adc
cli
scas
les
jae
clc
adc
daa
lea
push
and
imul
pop
sbb
and
movs
fcomp
mov
mov
sub
ret
push
lods
repnz
sbb
inc
test
(bad)
fild
mov
jecxz
repnz
xor
push
sub
rcl
jecxz
jb
std
and
xchg
push
repz
mov
cmps
dec
sbb
pop
xchg
shl
xor
inc
scas
adc
inc
std
pop
xor
xor
or
call
hlt
cbw
sbb
inc
mov
repz
xor
js
mov
hlt
mov
lock
outs
jo
inc
test
push
loopne
not
cld
mov
outs
test
pop
iret
outs
clc
pusha
iret
sbb
mov
icebp
jns
icebp
mov
jns
pushf
cmp
movs
icebp
mov
pop
test
psllw
in
mov
xlat
neg
test
sahf
pushf
pushf
aam
xor
and
dec
dec
mov
aaa
stc
ins
xchg
daa
daa
daa
mov
and
xchg
xchg
xchg
xchg
inc
imul
adc
cmp
or
fcomp
aas
cld
packsswb
xchg
pop
ret
clc
andps
aam
sbb
loope
enter
pushf
sbb
std
lock
xor
or
addr16
rol
je
mov
pop
test
xor
loopne
addr16
and
push
popf
fmul
adc
addr16
push
add
inc
std
adc
shl
push
repnz
lds
push
cmp
cmp
mov
in
repnz
rol
sbb
and
aas
inc
or
adc
enter
inc
std
xor
or
and
sbb
inc
add
add
and
mov
and
sbb
xor
and
xor
cmp
jns
mov
dec
push
adc
sbb
pop
pop
pop
and
leave
imul
gs
inc
cmp
pop
mov
sbb
and
pusha
ror
rcl
push
jno
add
popf
add
mov
je
mov
mov
add
or
mov
add
push
cmp
and
pop
ror
sbb
rol
mov
or
test
mov
cmp
loopne
test
push
mov
cmps
cs
adc
ror
pop
jp
es
leave
jmp
jecxz
cmp
push
xlat
cmps
arpl
repnz
daa
add
sub
stos
les
imul
add
or
jns
lahf
nop
xlat
ins
and
data16
das
pop
pop
pop
and
push
stos
clc
ins
xchg
mov
sub
push
xchg
push
jno
xlat
xchg
pop
out
sub
cmp
or
push
lds
jge
push
lods
das
ret
xchg
outs
pop
xor
lds
sbb
xchg
sbb
add
(bad)
gs
sbb
jb
push
and
cdq
jge
add
add
add
cmp
cmp
lahf
add
shl
and
pavgb
pop
pushf
xchg
daa
daa
daa
scas
cld
dec
add
jg
push
leave
jge
jmp
xor
fisub
daa
xor
jb
and
xchg
daa
add
sub
pop
pop
mov
add
adc
inc
inc
sbb
es
fiadd
or
test
adc
or
vprotw
jno
jo
(bad)
mov
pop
cmp
xor
hlt
xor
ins
aad
sub
rcr
sub
je
dec
dec
(bad)
jae
jge
popa
mov
inc
cvtps2pd
adc
dec
push
mov
(bad)
pop
sub
adc
sti
add
aad
pusha
nop
add
or
sub
(bad)
sti
dec
inc
mov
inc
mov
xor
xchg
sub
(bad)
mov
(bad)
sub
(bad)
mov
push
mov
add
sub
(bad)
jecxz
mov
(bad)
adc
add
inc
jns
add
dec
rcl
adc
aam
test
ins
push
adc
ins
(bad)
and
push
mov
add
sbb
or
add
pop
xchg
add
mov
int3
test
jnp
popf
or
add
sar
sbb
xchg
cmp
mov
in
adc
sub
and
and
out
inc
sbb
clc
xor
out
and
and
xor
jne
and
and
popa
or
dec
push
pusha
and
shl
cld
dec
pop
add
ss
or
dec
pop
icebp
or
punpckhdq
jns
mov
mov
fs
push
cmp
add
pop
ins
es
das
lods
push
push
push
xchg
mov
fcomp
mov
sbb
lgs
push
pop
jmp
push
mov
fdiv
es
push
sbb
sbb
xchg
jl
sbb
xchg
adc
fisub
out
cmps
jecxz
movs
adc
push
hlt
js
fincstp
xor
push
and
das
ss
movs
push
xor
pop
add
add
(bad)
test
xor
loopne
mov
movs
mov
movs
push
out
xor
ins
(bad)
out
cmp
fwait
adc
shl
sahf
fmul
cli
xor
out
adc
lea
pushf
fcom
xchg
xchg
pop
test
leave
enter
jo
in
in
cld
inc
push
mov
adc
inc
jge
jns
jb
fiadd
sbb
daa
cmp
or
out
fcmovbe
in
cmp
pop
ror
adc
mov
fcomp
lock
sbb
push
inc
dec
or
xor
sub
cmp
and
(bad)
daa
sub
and
push
ja
xor
ins
push
test
mov
dec
push
cmp
test
inc
mov
add
ja
sbb
lock
push
ja
mov
push
cmp
mov
dec
push
and
ja
setb
lock
push
inc
pop
lock
mov
inc
add
inc
dec
and
(bad)
lock
sbb
popf
adc
push
inc
jnp
adc
lock
and
test
push
push
mov
jns
mov
mov
mov
jns
push
push
mov
xchg
dec
push
and
jne
cmp
jno
sbb
fcom
pop
push
push
mov
lods
dec
stos
push
cmp
mov
sbb
add
sub
and
pop
rcl
test
sbb
shr
sbb
pop
dec
iret
int
in
pop
fisubr
mov
nop
inc
in
xlat
rcl
loop
pop
adc
push
push
ins
pusha
adc
clts
popa
adc
or
getsec
shr
lock
test
jb
out
dec
add
pop
xchg
inc
jne
sbb
test
lock
mov
push
les
out
das
add
pop
call
cld
loopne
xlat
js
pushf
test
inc
sbb
sar
scas
aas
mov
dec
add
pop
cmp
sbb
sbb
add
cmp
or
pop
inc
or
push
push
test
call
in
lock
loop
cwde
push
mov
push
mov
mov
sub
out
push
push
inc
(bad)
hlt
jp
es
mov
rcr
or
jns
out
sbb
cmp
push
leave
adc
sbb
push
fsub
cmp
bsr
pop
call
and
daa
daa
mov
maxps
xchg
xchg
and
enter
and
in
in
cld
inc
and
lea
repnz
mov
pop
and
jb
movs
(bad)
aas
fild
out
pop
jmp
aas
add
test
scas
and
es
test
daa
pusha
fidivr
inc
pop
ins
dec
or
push
jno
mov
push
test
rol
xor
sbb
std
sub
mov
sbb
adc
add
xor
add
stos
mov
mov
mov
hlt
add
cmp
cmp
inc
test
pop
fild
test
add
repnz
adc
xor
dec
xchg
std
movaps
and
xchg
push
push
mov
jns
mov
test
shr
sub
or
add
inc
jns
mov
adc
test
dec
inc
adc
mov
test
dec
sbb
sub
mov
mov
movs
sbb
call
pop
push
sub
xchg
sub
and
mov
clc
and
les
enter
push
lds
inc
dec
xor
(bad)
sbb
cdq
ins
add
adc
clc
cli
cmovle
inc
add
adc
std
outs
push
and
add
xchg
ret
sub
fdivp
and
ins
and
inc
mov
xchg
test
or
adc
sbb
add
add
sub
or
push
mov
arpl
cmp
aas
xchg
outs
xchg
push
movs
lock
mov
je
call
inc
mov
mov
push
js
aaa
pusha
mov
inc
adc
bound
sbb
in
hlt
call
popf
retf
push
movs
or
loopne
and
add
and
icebp
test
aas
nop
mov
inc
jo
mov
jne
add
je
outs
jmp
pop
ss
rol
xchg
repz
in
sub
adc
je
push
xor
je
call
jno
inc
mov
pop
inc
lds
push
sub
push
push
shl
cwde
push
push
mov
mov
scas
popa
popf
out
add
dec
push
xor
cmps
pop
icebp
sub
cs
int3
into
pop
adc
outs
xor
bswap
xchg
stos
xchg
scas
and
or
nop
pop
rcr
movs
icebp
movs
icebp
sbb
push
and
icebp
hlt
sub
test
adc
cdq
push
sbb
cwde
push
sbb
call
sub
inc
jo
pop
lock
into
mov
xchg
mov
mov
mov
out
fadd
push
xor
pop
das
cmp
outs
mov
hlt
push
ins
das
mov
xor
in
daa
or
fwait
call
xor
mov
push
or
cdq
add
jb
jns
inc
in
(bad)
aam
cmp
inc
pushf
dec
in
xor
mov
(bad)
scas
(bad)
xchg
pop
int
das
sbb
inc
inc
cmps
inc
xor
xor
(bad)
punpckhdq
cwde
inc
shl
sahf
push
or
test
imul
je
cmps
imul
test
das
push
xor
je
addr16
add
mov
cmps
mov
push
mov
pop
mov
sbb
sbb
in
sbb
add
sbb
pop
pop
mov
mov
jo
jmp
sti
dec
and
push
iret
mov
sub
pop
pop
pop
mov
dec
in
xor
add
rdpmc
push
dec
loopne
cwde
xor
add
adc
jg
pop
adc
push
sub
mov
add
jg
fldcw
push
inc
ss
aaa
pop
jne
stos
mov
daa
loop
jg
aaa
cmp
mov
xchg
jg
push
push
xor
call
sbb
scas
in
jb
xchg
xor
dec
fdiv
aad
push
jb
frstor
jmp
ss
les
cmp
cmp
sar
(bad)
nop
push
lods
imul
inc
add
mov
shl
mov
ss
add
inc
arpl
shl
sbb
adc
out
mov
adc
sub
adc
outs
push
jo
movs
adc
popa
ins
push
sbb
ja
inc
jb
jecxz
ret
pop
std
adc
or
inc
retf
jo
dec
int3
ins
in
nop
push
fsubr
je
call
jl
add
dec
or
mov
or
call
mov
test
inc
js
ins
mov
mov
add
inc
arpl
cmp
xchg
add
out
std
add
add
inc
pop
movs
rcpps
mov
jne
je
pop
pop
add
jno
pop
imul
inc
imul
cmps
loopne
sbb
addr16
pop
add
push
cmp
or
jp
bound
adc
stos
push
std
inc
in
es
cmova
jb
popa
outs
pop
or
dec
movs
push
pop
mov
fcom
mov
mov
(bad)
add
fucomi
mov
pusha
(bad)
syscall
jle
data16
cwde
inc
das
xor
xlat
push
push
or
inc
fadd
add
or
pop
pop
mov
and
jle
popf
inc
pop
or
cs
ins
je
ins
and
push
jg
cmp
sbb
add
push
inc
sub
sub
or
(bad)
loopne
outs
ja
xlat
pop
xor
add
outs
sbb
or
inc
add
or
das
pop
mov
add
fwait
scas
clc
mov
mov
(bad)
mov
push
push
lgdtd
cwde
(bad)
mov
movzx
shr
dec
test
jl
inc
(bad)
dec
cmp
test
hlt
clc
std
mov
xor
test
je
push
rol
jmp
mov
enter
xchg
(bad)
and
mov
cmp
(bad)
movs
push
sbb
outs
pop
or
and
or
mov
inc
ret
inc
push
fsubr
sbb
out
aaa
ret
xor
cmp
inc
lea
dec
add
sti
inc
jmp
test
jne
dec
jmp
xor
or
(bad)
add
dec
jne
cmp
jle
cdq
jbe
jmp
mov
add
bound
shr
movs
inc
add
and
cmps
push
jae
pop
clc
jne
ret
push
dec
inc
xchg
into
dec
and
sbb
cmp
fisttp
push
sub
pop
ins
sub
and
xchg
dec
and
shl
mov
add
add
mov
enter
jne
inc
add
mov
cmp
cmp
jl
or
dec
cmp
jge
mov
imul
daa
and
add
sti
sbb
enter
retf
mov
or
mov
jp
and
and
pop
mov
xor
inc
add
dec
add
add
les
dec
mov
or
push
mov
pop
addr16
add
or
ins
mov
nop
(bad)
sbb
and
pusha
adc
or
push
inc
cmp
inc
es
sub
pop
lea
mov
ret
push
clc
cmp
mov
cmp
js
mov
jle
push
jmp
mov
jge
neg
cmp
xor
xor
mov
jle
mov
and
(bad)
xchg
inc
jge
cmp
jge
test
call
arpl
dec
(bad)
mov
sbb
sbb
rcr
push
cwde
das
push
add
inc
sbb
ror
shl
add
shr
or
sub
jb
sbb
inc
ret
in
xchg
lock
popa
mov
mov
inc
rcl
ret
mov
arpl
js
aam
mov
pop
hlt
inc
ins
dec
retf
shr
inc
add
cmc
in
mov
cmp
xor
shl
adc
add
dec
mov
clc
fs
pop
add
mov
adc
fadd
loop
sbb
ja
add
inc
clc
clc
pop
or
mov
mov
mov
dec
jl
sbb
js
or
and
mov
shl
sub
mov
ret
ss
add
and
fidivr
add
inc
inc
push
add
add
ins
hlt
push
xor
fld
js
and
mov
sti
pop
stos
adc
inc
call
inc
jne
div
(bad)
add
jle
jbe
cmp
(bad)
cmps
and
dec
fisttp
mov
out
or
mov
jmp
push
inc
pop
cmc
mov
mov
inc
fiadd
add
or
pop
stos
inc
push
or
call
xchg
push
mov
pusha
cmc
push
lahf
mov
xchg
or
dec
sub
inc
lea
je
loopne
cdq
sub
ror
and
cmp
mov
cmp
push
jmp
adc
into
mov
xor
cmp
inc
or
outs
iret
add
(bad)
icebp
jne
test
pop
add
xchg
and
clc
xchg
adc
mov
jl
sub
push
inc
pusha
pop
iret
into
mov
shl
push
xor
dec
push
xor
jp
or
and
dec
add
(bad)
jns
pushf
mov
add
sbb
cmc
cmp
and
add
sub
add
or
add
cmp
and
jmp
loope
push
lods
and
mov
adc
retf
mov
and
lea
jmp
push
and
adc
add
add
imul
cmp
test
lods
sub
push
loopne
mov
psubq
ss
mov
cmp
mov
cli
add
push
push
mov
fisubr
hlt
xchg
inc
not
sbb
std
(bad)
sbb
shl
inc
mov
clc
(bad)
sub
(bad)
fs
push
mov
aad
inc
mov
das
mov
mov
sbb
pop
ins
or
and
ds
add
js
ins
inc
jbe
lods
sub
xchg
cmp
inc
add
pop
add
jmp
and
and
test
jbe
xchg
mov
aad
ds
call
in
adc
sbb
dec
inc
ja
inc
adc
call
lods
xor
jle
xor
sbb
test
xor
test
jge
mov
dec
add
shr
sub
cmp
jge
sub
mov
neg
push
mov
pop
cmp
lea
cli
lea
or
pop
or
test
adc
loope
mov
pop
dec
cmpps
mov
inc
jno
xor
cs
jecxz
sub
dec
mul
lock
repz
das
dec
scas
lea
retf
adc
and
dec
mov
push
push
lods
js
add
shl
pop
inc
xor
dec
mov
lea
clc
add
pop
xchg
cli
push
scas
stc
es
in
fidiv
inc
aas
mov
dec
pop
test
jle
test
ja
push
shl
mov
jmp
pop
into
fdivp
push
dec
and
pop
and
mov
jo
inc
sar
cli
nop
je
and
add
sub
cmp
jae
and
add
mov
clc
pop
jmp
cmp
fs
add
mov
jecxz
ds
mov
xor
lea
repz
push
add
mov
sbb
movs
lea
cmps
add
cmp
jle
push
xor
les
clc
aaa
test
out
pop
and
pop
and
add
push
mov
add
int3
pop
loopne
add
mov
ror
jne
inc
rol
and
shr
jp
or
fld
jne
movs
mov
mov
pusha
adc
cmp
test
fwait
sub
mov
cmp
ss
mov
xor
jmp
out
dec
or
push
fadd
sub
push
jbe
ret
and
pop
xor
dec
cmp
jp
mov
dec
es
fisttp
stc
inc
shl
and
loop
pop
sbb
pop
adc
test
jno
mov
mov
and
mov
std
adc
and
enter
and
jl
loopne
add
pop
int
dec
push
mov
or
cwde
div
je
mul
(bad)
clc
shl
add
sub
xor
jg
cmc
mov
lea
mov
add
push
loopne
mov
or
movs
fcmovb
inc
add
ret
ja
xchg
int3
test
cli
push
dec
xor
cmp
adc
xor
jmp
sub
(bad)
lahf
test
pop
mov
mov
add
add
loop
aas
add
push
mov
mov
aas
call
mov
lea
pop
mov
arpl
fucomp
fld
scas
test
mov
sbb
icebp
inc
outs
sub
cmp
ja
add
ds
lea
ror
cmp
scas
adc
push
and
outs
sbb
and
sub
clc
pop
xchg
data16
ror
jbe
cmp
ss
cmps
jge
add
sbb
add
sbb
xchg
adc
idiv
shl
nop
xor
popf
mov
dec
cmovns
pop
enter
jne
push
inc
jo
movs
push
jmp
pop
dec
xor
sti
or
cmp
je
pop
mov
fnsave
cli
jne
xor
(bad)
nop
push
mov
sti
jmp
or
xchg
in
inc
lock
pop
packsswb
cmp
popa
aad
rcl
cmp
sub
cmp
sub
xchg
mov
mov
inc
fimul
xor
wrmsr
push
push
mov
mov
xor
fild
sbb
add
je
adc
dec
mov
js
popf
xchg
data16
sbb
mov
mov
scas
lods
cmp
jp
mov
push
and
or
sbb
std
jmp
mov
fcmovb
add
xchg
(bad)
cwde
test
sar
sete
pop
cmp
cli
sub
pop
push
fdivr
jle
sub
test
mov
lahf
mov
add
(bad)
pop
mov
cmp
je
mov
ficomp
sbb
mov
mov
icebp
sbb
jns
jle
cmp
push
ror
mov
mov
or
fnsave
cmp
jnp
inc
and
ror
fimul
cmp
xchg
cmp
cmp
je
pop
test
gs
jae
cmp
sbb
loope
(bad)
lock
xor
loope
mov
sub
mov
ss
sbb
lock
xchg
add
(bad)
xlat
adc
mov
mov
inc
pop
mov
test
adc
jae
sub
jnp
jnp
or
lea
xchg
mov
xchg
sub
adc
aas
mov
fcom
test
push
jge
scas
(bad)
loope
jge
rcr
pop
std
fstp
test
neg
cmp
jle
loopne
xor
cs
push
jge
sub
or
popf
push
in
fnstcw
and
mov
sub
sub
mov
xchg
mov
or
push
popf
rol
iret
imul
popf
aaa
jmp
cdq
add
mov
sbb
or
jmp
jnp
or
add
adc
je
mov
popa
ss
sbb
xor
push
and
in
xchg
fcom
dec
(bad)
cdq
(bad)
pop
xor
mov
rol
jl
movs
pop
or
mov
sbb
or
inc
add
add
pop
add
mov
ror
dec
(bad)
fld
fstp
fwait
adc
mov
push
cli
hlt
add
dec
inc
or
and
and
cmp
ror
adc
xlat
push
out
jmp
add
inc
les
jmp
sub
cmp
(bad)
test
arpl
add
push
inc
adc
mov
push
cmp
aas
fsub
fwait
add
in
fld
fstp
lods
in
bnd
xchg
cmp
fs
xchg
fadd
dec
inc
cs
cmp
push
push
mov
or
add
seta
cmp
jmp
or
fdivrp
push
inc
enter
ficomp
sub
fsubrp
and
outs
stos
push
sbb
rol
in
les
ret
nop
cmps
(bad)
push
pop
or
data16
call
or
mov
ret
lahf
cmp
add
mov
add
ret
mov
adc
add
inc
add
or
pop
lock
add
fdiv
rep
mov
pop
shr
push
sbb
ds
inc
cmp
cmps
call
outs
(bad)
aaa
push
jl
mov
pop
xor
js
aam
adc
xor
inc
fbstp
push
mov
ss
imul
es
push
xchg
push
in
cmp
clc
inc
dec
add
out
xchg
ins
pusha
pop
push
add
push
xlat
sahf
loopne
jbe
add
(bad)
mov
cs
psubb
stc
pop
add
push
add
dec
dec
loope
cs
(bad)
popa
outs
je
jns
gs
adc
cmc
test
or
in
adc
dec
add
aas
clc
add
push
dec
add
outs
jo
jnp
sbb
pop
out
push
rol
in
sbb
jecxz
or
jb
in
xor
lea
or
imul
inc
adc
cmps
popa
jae
cmps
add
push
adc
ret
enter
ss
aas
sbb
cmp
dec
jo
mov
push
ins
test
and
ror
lods
pop
mov
push
fsubr
sar
add
xchg
inc
or
push
or
jae
imul
mov
inc
inc
ror
pop
neg
test
mov
das
mov
jle
lahf
xor
jge
add
jle
sub
inc
xor
and
mov
addr16
inc
std
and
sub
(bad)
pop
sbb
inc
(bad)
rsqrtps
fcom
sar
outs
add
cs
xor
xor
push
adc
or
sbb
sub
shl
dec
dec
enter
add
arpl
add
mov
cs
add
jno
fadd
mov
inc
shr
add
or
jl
adc
mov
stc
inc
push
jno
loopne
pop
repz
push
pusha
pop
inc
mov
lds
or
add
mov
xor
mov
cmps
add
pop
pop
outs
test
pop
mov
pop
pop
xor
push
inc
test
das
mov
sbb
je
movs
sub
inc
int
es
outs
or
sub
sbb
mov
add
push
into
push
xchg
push
mov
mov
test
inc
and
test
and
(bad)
xor
pop
gs
call
xor
fcom
push
push
add
mov
pop
or
xchg
add
mov
ret
call
(bad)
push
loopne
mov
xchg
dec
sub
xchg
pop
mov
aas
imul
in
push
mov
add
inc
jb
(bad)
and
pop
call
(bad)
aas
add
jo
xchg
(bad)
fmul
mov
jmp
add
imul
idiv
es
nop
add
js
dec
cld
cmp
jmp
data16
sub
clc
mov
push
add
or
add
clc
ds
loopne
loop
(bad)
js
data16
jle
xlat
cdq
and
adc
xchg
ror
fcom
ror
add
in
fmul
pop
sbb
dec
fdiv
push
cld
arpl
or
imul
ins
adc
aam
inc
mov
xor
xor
pop
hlt
clc
dec
in
jnp
ja
mov
inc
push
and
mov
pop
and
ror
jg
fadd
test
cmp
add
push
(bad)
rcr
test
push
(bad)
mov
bound
and
cmp
jmp
mov
lea
fsubr
ret
rol
mov
in
enter
jg
xor
loopne
enter
and
mov
add
mov
xchg
xchg
fdiv
add
push
push
dec
xor
pop
lea
loope
push
mov
repnz
imul
loopne
inc
add
in
(bad)
pop
rcr
cmp
sbb
leave
xchg
pop
mov
or
js
clc
pop
inc
dec
mov
retf
or
add
adc
rol
pop
cwde
add
aaa
std
add
imul
push
sti
mov
dec
sub
xor
pusha
rcr
add
pushf
cld
inc
pop
push
pushf
fld
and
inc
out
add
and
ret
movs
or
movs
inc
sub
test
lock
dec
jmp
ss
(bad)
add
ins
sahf
ret
imul
xor
xchg
fdiv
mov
loope
xor
xor
or
pusha
cmp
dec
or
loopne
add
lea
dec
and
cmp
inc
daa
les
out
clc
ret
inc
mov
not
adc
(bad)
clc
push
or
push
imul
jo
sysret
add
sbb
or
xor
mov
dec
pop
cdq
jne
sbb
add
inc
popa
jns
popf
cld
int
push
pop
dec
outs
jne
pop
push
dec
imul
je
and
push
arpl
test
cmps
cmp
retf
aad
and
popa
sar
adc
data16
je
dec
sbb
xchg
or
sbb
jo
aad
or
pop
add
mov
mov
test
sub
fucomi
shl
das
out
fbstp
push
test
push
aam
adc
jnp
fist
jge
retf
retf
add
clc
jge
jge
(bad)
retf
retf
retf
retf
das
arpl
add
sbb
test
add
leave
and
jge
xor
cmps
adc
add
inc
push
adc
jmp
jge
push
xchg
sbb
fs
jge
push
outs
pop
mov
repz
adc
fs
loopne
pop
mov
cmp
jb
mov
into
movups
dec
push
push
inc
mov
cmp
and
lods
add
and
enter
sbb
jne
addr16
cmp
push
dec
jne
addr16
pop
je
cmps
mov
xchg
jns
adc
push
repnz
jne
mov
pop
jg
ror
sub
(bad)
mov
js
daa
movs
imul
jmp
imul
mov
mov
or
xchg
or
push
imul
das
or
and
push
push
jle
or
add
jo
imul
xor
and
cmc
push
xor
arpl
push
xchg
rcr
movs
pop
mov
and
pop
jp
cs
sbb
push
in
les
and
xchg
inc
ins
lds
in
inc
adc
push
(bad)
mov
xor
imul
inc
leavew
mov
ins
push
or
mov
cmp
pusha
call
inc
rol
jp
or
xlat
out
or
inc
inc
push
js
push
pop
lea
outs
sub
fadd
ja
inc
outs
mov
je
or
shl
scas
inc
ret
sub
push
and
jmp
or
push
lds
push
mov
jae
jo
xlat
and
pushf
inc
int3
dec
add
jae
jb
in
call
sbb
adc
push
jnp
cmp
inc
jmp
or
push
mov
and
xchg
(bad)
js
jnp
xor
mov
retf
pop
add
dec
inc
lods
xor
add
xor
neg
ins
inc
inc
inc
cs
pop
jp
add
inc
mov
xor
icebp
or
pop
add
jo
jecxz
mov
push
shl
repz
inc
outs
xchg
sbb
and
fild
popa
pop
dec
pop
outs
fwait
(bad)
bswap
enter
sti
xor
adc
leave
leave
mov
and
rcl
test
ins
jo
in
mov
add
inc
in
call
push
nop
and
jo
in
sbb
and
inc
inc
lea
adc
or
inc
push
sti
adc
test
ins
jo
dec
nop
or
test
fild
pop
les
xchg
or
(bad)
clc
or
(bad)
mov
cwde
out
inc
add
pop
(bad)
push
inc
es
inc
mov
mov
push
popa
xchg
loope
mov
dec
(bad)
loopne
sub
push
dec
jns
dec
sub
mov
push
push
inc
popf
mov
stos
or
dec
cdq
pop
jle
sub
jno
mov
and
aaa
cmp
bound
add
icebp
push
inc
sbb
test
inc
mov
imul
push
adc
jns
(bad)
into
or
lods
or
pop
mov
sub
in
lods
mov
adc
add
and
mov
aas
xchg
jae
stos
add
dec
add
xchg
jl
aaa
popa
sub
in
dec
jae
pushf
test
imul
dec
dec
cmp
and
ret
loopne
fiadd
and
test
push
jmp
scas
sub
and
inc
adc
leave
mov
callw
daa
mov
add
int
xor
inc
sbb
add
dec
cmps
and
xchg
xchg
sbb
sbb
jge
mov
add
outs
scas
xchg
and
push
or
inc
inc
add
sub
mov
push
push
xchg
stc
add
or
rcr
push
inc
dec
scas
nop
icebp
push
addr16
jmp
cmps
push
add
add
ficomp
ja
jmp
add
mov
push
(bad)
fidiv
mul
popa
push
outs
or
ins
xchg
jl
scas
jnp
xor
jmp
in
add
mov
inc
or
pop
or
fidiv
sub
mov
pop
ja
adc
push
dec
inc
aaa
in
mov
ror
pusha
or
push
and
repz
or
xchg
vprotq
add
lea
arpl
stos
xchg
out
adc
push
in
in
push
fdivr
push
ins
add
jl
and
fwait
rol
inc
mov
push
sub
outs
mov
or
mov
or
test
adc
push
jno
mov
clc
xchg
ss
mov
stos
add
push
popf
popa
call
data16
enter
push
push
or
out
or
or
(bad)
inc
add
push
and
or
adc
out
enter
sub
test
jne
xchg
ss
or
enter
or
loop
retf
jae
push
push
mov
sub
adc
pop
ret
push
jle
adc
dec
(bad)
rol
sub
or
daa
xor
(bad)
jb
jae
bound
sbb
(bad)
pop
pop
scas
out
jmp
sbb
addr16
jae
mov
lea
movs
add
and
xor
xlat
inc
pop
inc
and
fadd
in
xor
push
inc
jne
push
dec
add
out
push
bound
shl
test
jl
data16
jmp
xor
push
push
or
ret
(bad)
mov
fild
mov
test
lock
adc
in
aam
arpl
lea
enter
or
push
imul
xor
(bad)
push
or
dec
repz
adc
push
or
leave
leave
push
push
add
loopne
mov
addr16
cmp
dec
jo
or
imul
dec
test
addr16
inc
dec
test
jnp
daa
dec
push
iret
jnp
jge
cmps
nop
adc
ins
std
cmp
mov
push
cwde
nop
push
repnz
jl
mov
push
and
mov
neg
adc
sbb
xor
push
sbb
cmp
push
sub
jne
minps
iret
xchg
lods
push
lods
call
sbb
push
cmp
jmp
sbb
rsm
(bad)
push
pushf
adc
xchg
xchg
pop
add
add
mov
fwait
jle
inc
fsubr
jmp
sbb
or
lock
dec
dec
or
cs
and
adc
xchg
(bad)
push
test
inc
jno
sbb
mov
push
sub
mov
xor
and
sbb
sub
pop
ja
and
jg
or
ja
or
jbe
pop
shl
pop
aaa
aad
xchg
jo
iret
retf
dec
add
inc
xlat
mov
dec
icebp
and
leave
mov
dec
scas
dec
stos
loopne
nop
jne
idiv
loop
out
pop
jo
add
sar
ins
mov
dec
jns
outs
ds
ds
push
mov
xor
aam
pop
push
jns
sti
and
mov
ret
jg
jecxz
out
jbe
or
rol
call
sbb
or
nop
ds
push
mov
cmps
fdiv
mov
call
mov
and
mov
xor
test
cmp
mov
dec
xor
sub
rol
cmp
in
fimul
dec
jb
or
pop
cmps
jge
test
pop
xor
fdiv
mov
es
outs
stc
mov
adc
cmc
mov
jns
mov
sbb
push
lods
pop
dec
or
push
neg
test
(bad)
xor
mov
fidivr
pop
pop
je
push
movs
add
xor
dec
cdq
dec
rol
mov
rcl
xchg
and
push
xor
cli
add
push
cmps
inc
or
mov
adc
sti
in
cmp
cwde
jns
ins
inc
mov
jg
or
mov
pop
(bad)
adc
pop
scas
mov
jns
xor
mov
fdiv
movs
push
jmp
inc
cwde
sbb
push
mov
sbb
xor
mov
addr16
dec
pop
xchg
add
gs
test
add
add
jmp
enter
je
sbb
into
out
cmp
stos
jo
loop
mov
cmp
dec
nop
enter
adc
or
dec
sub
and
sub
inc
mov
jle
adc
int3
ret
xchg
outs
ret
adc
or
outs
test
loop
(bad)
stos
and
sbb
push
inc
inc
mov
repnz
dec
popf
xor
enter
push
scas
inc
(bad)
mov
jp
and
ret
enter
jecxz
mov
push
add
add
push
paddd
int
push
sub
adc
aaa
aam
ss
dec
push
xlat
sbb
pop
in
sub
or
add
mov
inc
push
sahf
inc
add
and
repz
loope
and
pop
je
push
dec
or
jbe
test
mov
xor
dec
push
jmp
cmp
sub
pop
ret
iret
dec
or
loopne
cld
lock
jno
and
or
loopne
xor
fcomip
and
mov
mov
push
mov
jo
mov
xchg
leave
add
xchg
xor
lods
fsub
push
add
cld
inc
cld
idiv
xor
mov
enter
int3
inc
lods
adc
enter
mov
add
and
ss
dec
cmp
hlt
jl
fwait
xor
inc
into
movs
jne
sbb
and
adc
inc
(bad)
mov
sub
push
add
inc
out
push
popf
jmp
push
enter
add
push
or
or
adc
push
jnp
pop
retf
sbb
cmp
bound
inc
xchg
aas
add
rcl
clc
hlt
dec
mov
ret
fxch
inc
xchg
mov
fdivr
in
pushf
mov
cs
fcom
fmul
add
and
add
inc
dec
into
fld
jno
imul
mov
outs
in
rcr
fwait
lock
hlt
xchg
loopne
add
push
push
fsubr
or
push
mov
xchg
inc
sub
mov
cmovp
add
or
push
test
add
daa
sub
xchg
retf
test
cmp
sub
and
push
jg
hlt
jl
adc
(bad)
fdivr
fidivr
sub
sbb
jle
inc
mov
test
les
dec
int3
add
out
adc
sub
cmp
test
pop
sbb
pop
xlat
(bad)
call
cdq
dec
test
jl
cmp
(bad)
enter
and
xchg
in
popa
pusha
mov
retf
and
arpl
adc
mov
div
and
outs
jo
lds
sub
and
(bad)
fwait
movs
push
loop
pavgb
sub
aad
ror
lods
jo
sbb
xchg
das
xor
out
int
dec
dec
ficom
lahf
imul
neg
loopne
into
mov
or
adc
fcom
adc
jnp
ja
or
test
loope
imul
ficomp
or
enter
(bad)
(bad)
in
and
inc
dec
ja
in
mov
jb
or
in
xchg
push
or
add
mov
dec
push
add
or
mov
or
test
xor
inc
data16
adc
sbb
ins
adc
and
jae
js
pop
jnp
pop
(bad)
xlat
std
aam
les
push
mov
xor
xchg
pushf
bound
nop
clc
clc
or
mov
jmp
das
xchg
pop
dec
mov
push
lock
mov
or
retf
js
retf
jae
(bad)
or
xchg
pop
cwde
or
push
adc
mov
cmp
sbb
or
idiv
pop
jp
pop
xchg
cmp
cmp
sbb
test
mov
xor
or
mov
and
pop
movs
cmp
je
add
and
mov
and
xor
leave
jae
(bad)
sub
xchg
(bad)
ja
push
mov
push
je
jno
mov
fucomp
movs
fucomip
xchg
add
fist
jns
push
scas
add
movs
loope
and
lea
out
cld
inc
push
xchg
dec
adc
inc
retf
mov
fadd
cwde
push
loopne
popf
rcr
bound
out
inc
add
push
sar
xlat
das
or
or
or
pop
or
es
jne
out
jge
(bad)
sub
mov
push
jle
fcmovnu
test
pop
add
or
mov
clc
adc
sub
icebp
sub
or
push
pop
dec
test
jge
mov
sbb
cmp
in
push
or
leave
dec
sbb
mov
add
sti
icebp
sub
adc
les
ror
lods
jb
jle
add
cmp
out
xchg
jne
inc
pushf
sbb
movs
and
out
stos
add
(bad)
fmul
ret
sbb
stc
add
sbb
sub
sub
xchg
mov
adc
es
adc
fsub
lea
or
push
iret
add
call
in
adc
mov
mov
mov
dec
xchg
cmp
push
lods
call
(bad)
ret
add
fidivr
sbb
xor
push
xor
ss
mov
push
out
xchg
inc
xchg
shr
pop
push
jge
pop
jnp
adc
jl
xor
dec
adc
test
and
pop
shl
dec
out
pop
adc
retf
cdq
push
push
or
dec
gs
sbb
sbb
xor
add
sub
fsub
jo
sahf
or
cld
mov
add
dec
push
mov
add
inc
(bad)
mov
xchg
fistp
mov
mov
xchg
xchg
xchg
mov
xchg
xchg
xchg
mov
xchg
xchg
xchg
mov
xchg
xchg
xchg
movs
movs
cmps
cmps
xchg
xchg
xchg
xchg
test
stos
stos
xchg
xchg
xchg
xchg
lods
lods
scas
scas
xchg
xchg
xchg
xchg
nop
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
cwde
cdq
call
popf
sahf
lahf
xchg
xchg
xchg
xchg
add
xchg
test
xchg
xchg
mov
adc
sbb
daa
bound
or
shl
cmps
add
adc
adc
or
addr16
xchg
or
xchg
mov
andps
dec
outs
je
or
adc
fwait
mov
adc
add
push
add
add
fwait
imul
inc
call
sbb
ror
pop
dec
enter
daa
pop
xor
pop
clc
imul
mov
add
data16
inc
fadd
(bad)
movs
xchg
pop
test
xchg
push
mov
jecxz
cmp
iret
mov
fwait
push
popaw
test
iret
push
ja
fidiv
add
add
pop
inc
inc
jne
data16
inc
jecxz
test
mov
add
iret
leave
ins
jo
stos
loopne
adc
push
std
xchg
(bad)
das
fsubrp
aas
dec
add
jmp
xchg
pop
push
sahf
jge
push
aas
mov
add
nop
sub
pushf
xchg
or
fld
add
jno
sbb
imul
movs
fwait
push
jne
mov
pushf
push
inc
jo
outs
fs
dec
mov
sub
sbb
cmps
or
sbb
jo
ret
add
or
jbe
dec
inc
addr16
ins
int
outs
or
outs
mov
add
pushf
jb
inc
sbb
jecxz
jecxz
jl
icebp
or
add
jbe
jecxz
or
stos
es
add
enter
pop
dec
fs
inc
push
ins
shl
inc
push
pop
xor
or
add
inc
(bad)
daa
das
mov
pop
iret
movs
push
mov
stos
xchg
adc
outs
jmp
push
mov
or
add
sub
or
dec
imul
je
fs
outs
fisttp
daa
jge
retf
cwde
xchg
cmp
add
sbb
ret
aas
add
push
adc
cwde
out
cwde
xor
es
ror
jg
ins
push
cmp
adc
imul
pop
leave
sub
cmp
call
jae
inc
pop
ins
dec
xor
hlt
pop
sbb
add
and
xchg
inc
mov
inc
ins
arpl
mov
inc
js
or
je
push
call
fisubr
xor
push
imul
iret
adc
or
pusha
stos
mov
inc
ss
ins
adc
cmp
sub
pop
mov
cwde
dec
cmp
mov
add
push
popf
fadd
test
adc
jne
mov
xor
imul
dec
xchg
movs
mov
das
repz
mov
aad
jno
fwait
addr16
adc
inc
add
xchg
inc
mov
pushf
adc
mov
ins
jg
js
ds
or
imul
lds
add
test
call
adc
inc
test
jge
dec
aas
test
jo
cmp
add
cmp
jge
add
jmp
lea
jmp
add
ds
in
mov
mov
cmp
and
push
jo
inc
(bad)
dec
jne
mov
inc
dec
jne
inc
fdiv
xchg
inc
ret
call
push
ret
arpl
pop
or
popf
pop
and
xchg
(bad)
push
sahf
and
adc
lahf
lea
mov
mov
call
pop
adc
push
mov
jae
pop
or
nop
je
xchg
push
jp
imul
jo
xchg
or
sbb
mov
mov
add
cmp
(bad)
div
je
xchg
(bad)
(bad)
out
mov
add
cmp
sub
adc
(bad)
das
bswap
xor
data16
adc
test
fcom
(bad)
pusha
nop
addr16
in
lods
xchg
inc
test
mov
in
retf
add
imul
inc
push
call
sbb
mov
add
dec
les
(bad)
retf
pop
fnsave
fist
cs
dec
nop
je
add
out
mov
xchg
std
inc
sbb
inc
loop
je
or
popa
inc
fadd
dec
jg
mov
dec
imul
inc
add
mov
or
les
pop
adc
arpl
cmps
adc
ins
pop
push
(bad)
and
ins
add
mov
pop
unpcklps
xchg
xchg
push
ret
sbb
lahf
ja
jmp
pop
fstp
sub
pop
lea
(bad)
(bad)
cli
xlat
pop
mov
add
inc
inc
push
cmp
(bad)
or
mov
push
dec
arpl
push
push
inc
inc
inc
inc
or
inc
dec
dec
push
dec
dec
push
inc
or
inc
inc
dec
out
out
in
addr16
sub
es
push
push
push
push
pop
inc
push
add
outs
fisttp
or
inc
dec
inc
dec
inc
push
push
dec
push
push
pop
and
push
xor
loopne
jne
inc
push
push
pop
adc
cmp
outs
icebp
repnz
fsubr
adc
rsqrtps
and
push
aam
jl
loop
cmps
addr16
dec
adc
lods
rcr
jb
jnp
inc
adc
nop
mov
aad
pop
test
in
cmp
mov
ror
or
shr
inc
cmp
mov
mov
add
retf
jp
pop
push
add
adc
imul
jo
inc
push
(bad)
and
mov
mov
and
call
pop
add
(bad)
neg
mov
mov
mov
das
sub
mov
dec
sub
dec
daa
mov
cmp
cwde
scas
fisttp
inc
adc
dec
aas
mov
lods
je
push
push
outs
lock
popf
aam
xor
fdivr
aad
pop
push
jo
fild
adc
xchg
push
lea
cwde
adc
aam
sub
gs
jg
popa
fsub
mov
jge
rol
mov
ins
popa
jne
jmp
mov
sbb
mov
(bad)
inc
push
or
dec
inc
add
cmp
xchg
mov
mov
lahf
cmp
mov
mov
or
adc
sti
xor
test
push
(bad)
iret
jnp
mov
push
push
jbe
push
cwde
fs
fucomip
mov
addr16
mov
outs
lock
neg
in
push
mov
push
push
jbe
shl
inc
push
push
pop
hlt
mov
ret
xchg
or
mov
push
prefetch
mov
sti
add
mov
mov
movs
gs
dec
xchg
dec
and
es
imul
pop
cwde
test
dec
dec
inc
sub
sub
jne
push
jbe
test
inc
dec
popa
mov
imul
mov
push
int
cs
lahf
add
or
push
jo
popa
je
daa
pop
and
addr16
push
test
test
sbb
stos
(bad)
(bad)
cmps
adc
repnz
fsub
cmps
pop
fcomp
add
mov
data16
clc
push
retf
test
mov
jo
adc
push
in
vmwrite
mov
mov
and
pop
daa
test
lods
dec
movhps
pop
add
inc
test
stos
pop
sbb
mov
fild
mov
sbb
int3
sbb
stos
nop
pop
jbe
pop
mov
add
lock
lds
mov
mov
je
sub
lods
(bad)
add
jp
div
ja
push
sub
wbinvd
add
das
ds
xorps
in
or
scas
stos
pusha
es
test
pop
push
pop
mov
mov
daa
xchg
stos
scas
push
cs
stos
adc
or
inc
std
inc
push
movs
push
cmpxchg
add
sbb
and
popf
sbb
ss
pop
inc
and
mov
dec
jmp
fsub
jmp
or
inc
jb
push
push
leave
cmp
jne
pop
jo
xor
icebp
dec
jae
out
adc
sbb
ins
cmp
dec
repz
xor
or
xchg
outs
(bad)
mov
or
or
scas
icebp
mov
mov
sub
or
jo
mov
sub
push
dec
xor
dec
lea
mov
add
mov
add
jmp
pusha
and
push
push
daa
jns
lds
repz
dec
je
jo
xor
arpl
push
imul
test
sbb
mov
or
push
xor
subps
jno
jg
or
pop
jb
jbe
inc
cmp
pop
inc
aad
std
or
outs
popa
fs
jo
inc
imul
or
push
mov
mov
or
inc
inc
mov
or
push
arpl
sbb
test
push
gs
ins
js
inc
push
sbb
dec
xchg
or
sbb
jnp
sub
and
dec
das
sbb
adc
stos
sub
cmp
popa
mov
popa
mov
ret
push
mov
fs
or
int3
adc
xor
stos
sbb
mov
inc
adc
pop
push
mov
xor
jp
add
es
cwde
adc
mov
daa
pop
shr
inc
and
pop
bound
or
test
cmps
jne
cmc
push
sub
sbb
loope
adc
adc
add
imul
inc
pop
xor
dec
xchg
push
pusha
add
jg
movs
xor
add
je
add
add
adc
pop
mov
rol
fiadd
or
push
mov
and
and
neg
and
and
mov
fcom
add
pop
mov
lock
inc
add
and
pop
ja
arpl
out
sbb
xor
push
inc
enter
dec
test
add
jne
or
adc
pop
mov
ror
es
jecxz
mov
movs
xchg
nop
lea
enter
mov
or
xor
or
mov
or
into
xlat
dec
sbb
xlat
test
dec
ds
inc
ins
pop
mov
sbb
retf
mov
or
mov
in
mov
inc
cmp
daa
rol
dec
(bad)
jmp
les
push
pop
nop
push
or
pop
jo
or
mov
add
push
push
mov
add
ss
rol
int
push
cdq
sbb
dec
sti
fs
pop
inc
stc
mov
repnz
jnp
cmp
pusha
ins
jg
test
ret
inc
push
cmp
ret
hlt
add
jo
js
in
mov
jbe
retf
js
xor
clc
stc
push
cmp
dec
fcom
sub
and
cmps
lss
xor
sbb
enter
cmp
retf
add
(bad)
retf
shr
lock
lock
dec
push
push
mov
rcl
mov
add
or
mov
sbb
or
add
adc
or
test
mov
cmps
mov
xor
push
pusha
sub
aaa
or
xchg
aam
xchg
dec
mov
and
add
jg
pop
xchg
xor
jmp
dec
sbb
mov
adc
push
push
outs
pushf
jo
adc
mov
mov
and
mov
xchg
rol
jg
scas
xchg
fs
loopne
sub
xor
xor
sbb
outs
outs
push
test
mov
and
pushf
arpl
dec
dec
lods
cmp
xchg
push
(bad)
hlt
jbe
xor
and
in
xchg
mov
fiadd
rcr
(bad)
xchg
jmp
out
cmps
hlt
inc
aaa
in
ds
cmp
jne
jns
cwde
popf
out
mov
cmp
nop
fisttp
pop
mov
gs
clc
nop
mov
mov
pop
(bad)
mov
cmp
add
inc
cmp
cmp
mov
and
mov
fmul
test
clc
mov
lahf
add
push
dec
call
sbb
sub
aad
ret
push
mov
mov
fmul
adc
sar
jnp
add
mov
or
add
xchg
add
jo
loope
and
mov
blcfill
add
mov
xor
jmp
inc
std
add
cmps
pop
test
sar
rcr
fdivr
rcl
je
outs
fsub
pop
add
aam
add
add
out
dec
jmp
outs
add
aam
movs
jmp
dec
push
pop
movs
or
pop
xor
jnp
sub
dec
popf
mov
inc
aas
push
or
xchg
pop
cmp
call
and
inc
lock
imul
pop
clc
jne
jne
dec
sar
mov
adc
into
add
sbb
pop
fcmovne
push
or
not
sbb
lock
rol
mov
test
sub
cld
(bad)
inc
sbb
(bad)
push
push
mov
(bad)
add
sub
mov
cld
xor
and
xor
or
out
xchg
mov
pusha
nop
sub
adc
pop
mov
lsl
sbb
inc
js
(bad)
aas
movs
sti
imul
fidivr
mov
push
and
dec
inc
sub
aas
ja
jo
shr
stos
test
data16
movs
or
adc
mov
in
sti
mov
(bad)
sbb
xchg
mov
imul
mov
popf
jp
imul
daa
sub
cmp
je
jne
sub
cmp
in
adc
stos
xchg
push
loopne
mov
jecxz
clc
pop
mov
rcl
add
jecxz
mov
jmp
push
mov
and
xor
sub
leave
in
add
ins
mov
add
out
pop
and
jno
daa
cmp
mov
adc
ret
out
js
sub
call
push
adc
loopne
pop
ins
mov
pop
mov
pop
fsubr
jnp
inc
xor
cli
and
dec
loopne
jg
sbb
or
les
push
push
mov
mov
push
push
cmp
aam
fmul
imul
xor
mov
std
shl
mov
ror
in
or
xchg
mov
mov
add
nop
repz
loopne
jmp
dec
in
in
sub
sbb
rol
out
add
xchg
mov
inc
pop
ret
test
pop
bound
shl
add
pusha
pop
push
inc
pop
pop
add
fmul
cmps
xor
loope
cmp
shl
mov
pop
add
test
add
inc
inc
jb
push
je
xor
shl
fcom
sbb
repz
mov
shr
add
add
test
lds
jmp
ins
add
add
fs
fst
jo
cld
jle
add
retf
mov
adc
push
int3
jecxz
sbb
add
add
push
clc
adc
and
sbb
jmp
jne
and
xor
and
pop
xchg
dec
pushf
or
mov
cmp
sub
clc
hlt
fldcw
jo
mov
sbb
scas
sub
sbb
or
dec
cmp
pop
loop
outs
mov
lea
js
mov
out
scas
call
mov
aas
mov
cs
mov
das
dec
repz
jp
ret
je
inc
and
loop
scas
ins
test
add
push
shr
clc
test
out
dec
or
movs
les
inc
sbb
loop
pop
cdq
push
jecxz
pushf
test
sbb
pop
or
jl
push
and
adc
xor
inc
add
rol
out
or
xor
push
aaa
movs
adc
jb
dec
(bad)
mov
fwait
inc
xor
aam
mov
das
inc
inc
inc
popf
arpl
sub
mov
push
mov
jne
push
jl
add
push
mov
pushf
push
inc
xor
rcl
mov
inc
das
inc
sar
xor
scas
xor
cmps
xor
ss
js
iret
addr16
sbb
test
cmp
je
xchg
push
test
loopne
arpl
adc
mov
sbb
sti
dec
xlat
push
cmp
shl
ror
or
jmp
mov
push
mov
jmp
push
or
mov
lea
sbb
rcl
ins
and
jmp
push
push
in
cmp
push
aad
ror
lock
and
xchg
shl
dec
xchg
sar
pop
test
adc
iret
and
sbb
push
clc
mov
movs
xchg
ret
mov
fwait
add
mov
pop
mov
in
xlat
inc
jmp
mov
sbb
mov
call
dec
dec
mov
xor
adc
test
xchg
mov
(bad)
add
aaa
lock
(bad)
add
add
lea
inc
and
xor
enter
or
js
inc
mov
or
cld
leave
ret
push
shl
(bad)
push
add
dec
pop
ret
pop
cdq
popa
aaa
xchg
jg
mov
add
stos
(bad)
adc
mov
test
(bad)
(bad)
call
jnp
test
sbb
add
lea
inc
das
inc
test
and
sub
jmp
add
je
out
sub
test
xor
push
ret
bound
fist
fbstp
mov
xchg
mov
push
sub
and
dec
test
das
sub
je
cmps
xor
mov
outs
pop
sbb
fidiv
cmp
jnp
test
lock
add
or
xchg
or
into
cmp
and
xchg
ins
add
mov
cmp
jne
adc
add
movs
shl
inc
push
call
push
test
mov
push
in
jmp
lock
imul
dec
adc
cmps
je
cmp
jne
pop
mov
pop
dec
or
and
lock
cmp
inc
cmp
not
inc
mov
fcmovnb
sbb
push
add
or
pop
add
and
add
add
mov
(bad)
jae
out
mov
xchg
sub
call
mov
push
rol
mov
mov
call
les
jge
ret
xor
push
scas
sub
(bad)
jo
push
jl
mov
fwait
sub
test
int
fwait
mov
push
push
ss
fsubr
movzx
lds
push
mov
ins
addr16
jne
sbb
add
shl
ltr
xchg
inc
and
fisubr
and
and
push
adc
mov
jne
adc
pop
adc
dec
mov
add
adc
mov
push
push
pop
ficom
jbe
xor
popf
push
adc
ficomp
xchg
je
jno
sti
(bad)
div
push
js
enter
push
mov
mov
shr
test
jne
mov
mov
sbb
or
inc
leave
push
aas
pushf
scas
push
sub
std
add
pop
pop
ret
add
lahf
cmp
retf
pop
enter
xchg
call
dec
sub
adc
rcr
out
jl
push
jne
sbb
or
test
sub
sbb
dec
jne
dec
es
dec
fisttp
in
in
or
xchg
or
add
xor
jl
add
mov
pop
mov
pop
or
sbb
dec
test
add
dec
inc
movs
rcl
add
cmp
add
add
cs
add
pop
xchg
or
cmp
test
retf
cmp
mov
retf
imul
out
retf
mov
retf
sub
adc
add
movs
push
call
mov
dec
pop
fst
pop
mov
sbb
cmp
or
mov
(bad)
cs
loope
push
adc
mov
pop
nop
push
lock
(bad)
retf
sbb
cmp
inc
push
add
mov
push
imul
add
pop
and
add
mov
mov
test
std
add
outs
xchg
sub
addr16
aam
shr
outs
push
jnp
add
mov
inc
out
jo
adc
pop
or
test
push
and
mov
arpl
jns
bound
add
add
mov
and
inc
adc
das
test
ins
add
xchg
lods
outs
cmp
(bad)
jns
sbb
outs
sub
jb
add
or
jp
push
arpl
inc
rcr
add
dec
ret
cli
ins
add
fadd
add
mov
pop
aaa
aaa
inc
bound
xchg
jo
not
cld
add
mov
ror
ins
lea
pusha
adc
push
gs
gs
or
sbb
dec
push
sub
into
pop
mov
or
add
inc
add
test
mov
inc
push
jecxz
adc
pop
pop
dec
outs
icebp
xchg
xlat
inc
add
add
popa
sub
pusha
adc
sub
jecxz
adc
gs
popf
and
jb
push
push
push
sbb
adc
dec
add
jg
and
pop
call
imul
inc
jo
push
cmps
data16
jle
pusha
retf
or
jo
arpl
push
ja
add
hlt
stos
mov
add
adc
ins
add
dec
dec
add
lds
inc
mov
add
push
test
jg
imul
adc
sbb
sub
push
jmp
je
mov
stos
fild
outs
inc
add
das
outs
sti
scas
or
pop
add
out
xor
xor
or
ins
pop
dec
xor
add
inc
add
sbb
push
adc
dec
fadd
das
sahf
data16
add
bound
push
cmps
aam
sbb
pop
daa
test
adc
fcom
out
jle
out
and
push
arpl
outs
sbb
outs
jb
xor
or
and
xchg
or
sbb
xchg
add
rcl
inc
jecxz
popa
imul
test
inc
inc
fstp
shl
xor
and
dec
scas
retf
or
mov
sub
push
inc
mov
dec
push
mov
pop
xchg
pop
int
jmp
loop
call
sbb
jbe
mov
dec
xchg
or
or
data16
sbb
mov
mov
test
in
add
inc
xchg
in
in
sar
add
cmps
sbb
jl
fs
pop
call
imul
mov
repz
mov
iret
mov
lahf
ins
xor
xor
add
push
add
pop
test
push
pop
fld
rcl
push
aad
fimul
pop
aam
mov
data16
xor
imul
or
lods
sub
mov
mov
inc
push
shr
sbb
sbb
push
hlt
es
cmp
mov
aad
sbb
ficomp
sbb
dec
jecxz
scas
mov
mov
dec
jl
fiadd
loope
dec
aad
aaa
push
fwait
jmp
push
push
icebp
adc
and
xor
jl
xchg
jmp
inc
push
and
mov
ret
inc
test
xchg
ss
jb
xchg
push
popa
addr16
loope
dec
xor
dec
add
and
and
and
scas
push
sub
fild
mov
loopne
(bad)
jl
scas
add
or
(bad)
jle
push
lea
mov
aaa
rcl
jecxz
dec
adc
push
inc
pop
mov
mov
add
mov
jg
(bad)
fs
sar
dec
mov
push
scas
enter
pop
adc
push
cmp
or
pop
xchg
aam
mov
popa
rcl
push
outs
jae
push
das
adc
pop
pusha
data16
jae
popa
add
dec
movs
or
xchg
adc
adc
das
iret
cmps
or
or
(bad)
cmp
mov
ins
ja
pop
inc
fwait
or
and
nop
xchg
cmp
dec
(bad)
es
add
ins
out
nop
fmul
sbb
push
sbb
inc
mov
cmp
pop
pop
ins
add
dec
(bad)
jnp
ret
push
repnz
add
dec
xor
mov
ret
adc
and
jno
dec
fidivr
fcomp
adc
push
add
inc
fdiv
pop
sbb
aas
inc
or
imul
jg
mov
dec
push
je
mov
or
or
mov
jg
xor
pop
gs
fisub
jl
jmp
and
or
sbb
popa
add
lods
add
sub
jbe
inc
jns
mov
rcr
pop
pop
cmp
ja
sbb
sbb
mov
push
scas
pop
les
retf
xchg
(bad)
mov
jo
or
jb
jb
pop
cmp
sub
and
jg
add
pop
jnp
pop
xor
push
das
sbb
jne
call
punpckhdq
test
nop
fwait
jmp
add
loopne
dec
sbb
add
test
push
pop
jb
cmc
inc
cmp
dec
ficom
push
adc
ret
mov
inc
xor
int3
pusha
pop
clc
dec
add
in
push
call
test
xor
test
ins
test
add
inc
sti
or
adc
imul
sar
pcmpgtb
aas
or
mov
push
add
cli
fcom
xor
loopne
movs
push
dec
push
xor
inc
aam
int3
lock
sbb
cmp
xchg
jl
xor
sub
dec
arpl
inc
xchg
lods
or
ins
sub
fcom
sbb
ror
fstp
mov
stos
sub
cwde
or
or
jg
xor
mov
mov
retf
(bad)
ja
push
dec
xchg
add
dec
jne
mov
(bad)
mov
or
dec
and
or
jecxz
add
sub
adc
jmp
stos
xor
dec
inc
mov
out
sub
sti
sub
xchg
enter
mov
fiadd
add
xor
je
js
jae
(bad)
clc
add
mov
fist
adc
adc
ja
fcom
js
adc
or
add
xchg
jo
inc
sar
adc
xchg
adc
push
rcl
les
cmp
add
sti
add
or
xor
sub
or
add
nop
cld
adc
(bad)
int3
cmp
jle
pop
mov
in
dec
dec
cmp
jl
cmp
add
jle
pushf
push
sub
inc
adc
bound
cmp
rcr
xchg
cwde
call
and
jl
jne
cmp
mov
add
cmp
in
xchg
retf
inc
(bad)
call
popf
sub
jnp
add
dec
add
das
aad
or
xor
add
pinsrw
fadd
lods
or
xor
stos
mov
add
and
xchg
dec
and
ss
or
test
daa
xor
pop
pop
add
or
mov
jl
jmp
fs
test
je
xor
or
push
sti
sbb
mov
inc
pop
or
jnp
push
adc
loopne
cld
or
ins
and
adc
adc
sbb
adc
jns
sbb
add
inc
sub
inc
jo
cmps
sub
js
mov
scas
fsubr
icebp
fidiv
mov
les
ret
shl
sub
pop
lea
mov
inc
retf
push
adc
adc
cmps
adc
daa
jb
retf
jmp
dec
add
dec
daa
call
bound
sbb
mov
push
or
and
(bad)
and
stc
loope
xor
pop
mov
and
xor
jnp
or
add
inc
xor
sbb
push
in
pop
adc
add
cmp
cmp
fiadd
pop
pop
jp
sbb
mov
add
ror
sbb
mov
push
imul
pop
retf
fdivr
sub
adc
int3
mov
or
scas
aaa
jecxz
loop
mov
or
clc
and
int3
jle
mov
and
adc
mov
cld
and
ret
fisub
dec
rol
inc
pusha
(bad)
xor
sbb
fst
or
or
xor
cld
inc
adc
sbb
in
sub
inc
imul
loope
jnp
mov
inc
shl
mov
adc
cmp
add
sbb
sbb
or
add
pop
pop
jp
push
pusha
sbb
sbb
sbb
add
pop
lods
dec
nop
inc
adc
inc
js
mov
push
ss
add
add
or
and
mov
push
rol
fmul
lock
dec
mov
mov
inc
lock
mov
adc
push
ficom
pop
iret
aad
stos
adc
adc
in
test
add
jo
push
sbb
jle
aam
retf
jl
rcr
mov
mov
pop
rcl
or
lea
loop
in
mov
or
mov
fld
(bad)
mov
scas
push
and
sbb
iret
mov
call
pop
xor
or
inc
inc
pushf
or
lods
lods
cmp
jecxz
add
outs
out
jo
rol
add
mov
imul
sub
adc
(bad)
popf
clc
sub
jnp
jmp
jns
mov
ret
int3
into
push
pusha
xor
pop
hlt
sysret
or
lods
pop
push
push
inc
cmps
ror
lock
call
sbb
push
call
add
adc
es
mov
sbb
loope
fmul
cdq
adc
add
add
xor
scas
add
fiadd
jmp
inc
and
sar
(bad)
call
pusha
xor
repnz
add
pop
addr16
sbb
sbb
ret
in
mov
inc
ret
pop
js
inc
add
imul
mov
pop
sub
inc
cdq
inc
mov
ret
mov
inc
lock
add
aas
add
or
pop
ror
call
xchg
lock
mov
jmp
adc
stos
je
sbb
cmp
xchg
push
(bad)
mov
mov
ins
push
fimul
shl
dec
or
or
in
and
call
inc
mov
add
ds
jle
adc
sahf
cmp
xor
xchg
inc
dec
adc
add
outs
loopne
add
ret
cmp
xchg
pusha
inc
add
or
xlat
or
mov
mov
adc
add
scas
dec
das
inc
call
scas
push
jecxz
add
bound
sub
std
sar
add
sbb
mov
inc
ret
pop
mov
cmp
inc
or
xor
jo
test
mov
xor
jmp
cs
sbb
iret
jbe
icebp
cmp
inc
pop
and
mov
push
je
mov
mov
fwait
cmp
iret
or
jge
add
shr
push
sub
sti
pop
rcl
mov
stos
inc
jmp
dec
add
pop
jmp
inc
push
fincstp
cdq
xchg
(bad)
imul
scas
lock
push
js
push
dec
or
inc
add
xor
or
aaa
es
xor
mov
or
jne
xchg
jae
inc
mov
femms
rcr
xlat
jge
or
in
ja
scas
pop
imul
jg
lea
push
cmp
std
pop
and
mov
test
in
push
sahf
push
aad
repz
and
adc
pop
sbb
push
fist
inc
test
in
or
mov
(bad)
in
dec
in
btr
fimul
nop
mov
jae
popa
dec
mov
test
lock
hlt
in
sbb
pop
jo
or
add
or
scas
push
dec
add
addr16
nop
dec
rcr
xor
outs
outs
gs
dec
or
adc
sbb
push
adc
(bad)
mov
mov
outs
pop
sub
jmp
or
daa
mov
xor
push
or
bound
adc
xchg
loope
inc
pop
push
jl
or
pop
jbe
in
jg
and
push
push
adc
(bad)
push
mov
add
xlat
sub
cmp
or
mov
outs
adc
adc
(bad)
int
push
imul
popa
out
add
test
xor
jae
sub
sub
xsaveopt
inc
lock
or
outs
jb
add
mov
outs
mov
adc
dec
addr16
mov
add
cmps
mov
out
jmp
add
int3
jne
sar
push
dec
ret
aaa
int3
sub
out
push
out
add
pushf
xchg
lods
icebp
push
daa
adc
xor
shl
adc
js
sbb
(bad)
addr16
mov
ffreep
loopne
ja
cld
arpl
push
adc
lods
pop
mov
mov
cmp
or
sub
and
or
mov
pop
popa
xchg
aas
inc
jbe
mov
add
leave
movhlps
cdq
movs
inc
inc
mov
mov
sub
int
pop
stos
adc
pop
push
stos
add
ret
cmp
outs
cmc
icebp
adc
repnz
push
inc
addr16
inc
mov
push
je
cmp
cmp
clc
push
add
sahf
mul
pop
repz
mov
add
dec
pop
pop
ja
ins
pop
dec
push
lods
dec
push
sbb
pop
retf
push
mov
call
xchg
lahf
dec
sbb
test
ret
nop
dec
sbb
xor
pop
add
or
inc
dec
ja
sbb
or
cs
mov
push
outs
jno
clc
jnp
xchg
dec
jmp
adc
xchg
add
pop
in
sbb
dec
ins
hlt
(bad)
sub
call
fs
mov
or
pop
xor
jb
cs
movups
push
mov
or
mul
jno
sbb
cmp
mov
push
push
sbb
pop
add
clc
shl
mov
hlt
rol
add
jmp
fsubr
jae
add
push
outs
push
shl
popf
add
cmps
push
outs
adc
push
adc
jb
jecxz
or
outs
dec
adc
push
push
or
imul
and
(bad)
jnp
add
mov
inc
inc
fprem
out
xor
bound
dec
sbb
mov
mov
fcomp
jp
xchg
add
xchg
lds
pop
push
pop
test
cmp
ret
leave
mov
rol
dec
add
jne
inc
push
and
bound
push
outs
imul
pop
mov
jns
cmp
or
call
outs
pop
(bad)
or
adc
add
out
jecxz
imul
jae
add
add
add
xor
daa
fwait
and
and
pop
dec
test
pop
mov
pop
jecxz
pop
pop
sub
repnz
xchg
in
jecxz
add
bound
inc
or
cmp
sbb
jne
outs
inc
movs
dec
or
mov
pop
add
push
or
add
sub
xchg
shl
jo
adc
hlt
inc
adc
xor
inc
pop
jbe
in
les
gs
(bad)
nop
aaa
nop
or
mov
scas
jge
add
add
inc
push
or
add
adc
in
push
jmp
mov
stc
iret
or
fnstenv
movs
jb
sbb
add
dec
mov
test
int
fisttp
push
cld
dec
je
pop
neg
xchg
pop
mov
or
add
hlt
dec
das
(bad)
data16
mov
and
sub
cmovbe
sub
add
shl
int3
hlt
push
cmp
ja
test
xchg
ret
outs
fs
outs
ins
mov
adc
sbb
es
add
inc
fdiv
stos
imul
mov
lahf
add
push
add
sub
and
shr
out
add
and
ffree
inc
pop
adc
call
(bad)
mov
push
push
dec
pop
mov
wbinvd
pop
cld
retf
shl
icebp
push
retf
add
push
cmp
dec
cld
push
push
or
repnz
or
mov
das
sahf
fcom
jg
jno
add
sti
cmp
pop
inc
lahf
jns
ffree
lds
fsubr
push
jbe
adc
inc
adc
push
daa
and
cld
inc
adc
add
cmp
sahf
aad
jns
cld
sub
pop
xchg
stc
cdq
add
popf
jge
(bad)
dec
add
or
jmp
or
or
pop
(bad)
test
lahf
sub
or
push
mov
mov
push
pop
add
pop
xlat
imul
ud0
ror
xor
push
stos
pop
sub
dec
pop
enter
xor
inc
push
ins
cs
shl
fidiv
clc
les
push
xchg
push
mov
mov
or
push
iret
adc
adc
fadd
ins
push
mov
idiv
push
push
test
push
les
ins
pop
pop
adc
jo
fsubr
imul
ret
fsub
xor
push
adc
jae
jbe
scas
movs
das
push
imul
or
inc
mov
cld
add
adc
cmp
pop
pop
fisubr
in
retf
jne
pop
lods
aad
in
push
cmc
sbb
pop
imul
mov
push
gs
add
or
or
pop
and
dec
jae
xchg
and
sub
and
enter
inc
or
sbb
bnd
sbb
test
add
or
dec
in
sbb
pop
add
push
add
add
cmp
and
jb
and
or
sub
mov
cmps
stos
(bad)
daa
movs
xchg
pop
add
or
inc
mul
div
dec
add
gs
adc
add
add
xor
mov
dec
out
test
add
adc
dec
mov
xor
inc
pop
dec
imul
or
dec
sbb
mov
fsub
push
inc
sbb
add
inc
inc
fsub
lock
mov
sti
adc
shl
sbb
aaa
push
int3
push
mov
les
jns
rcl
dec
push
jns
and
and
add
mov
call
jmp
sbb
gs
lea
popa
inc
outs
xor
and
cmp
adc
cli
shr
pop
adc
xchg
std
mov
int3
and
add
inc
bound
inc
inc
xchg
sub
pop
add
mov
xchg
or
add
adc
cwde
nop
add
push
pop
sbb
or
push
mov
dec
shl
lock
sub
sbb
add
leave
jae
out
shl
mov
adc
push
lock
stc
jb
inc
add
and
bound
pop
(bad)
je
add
push
movs
push
pop
iret
bound
or
and
add
push
push
daa
jmp
stc
push
pop
daa
loop
adc
nop
js
add
daa
add
(bad)
dec
sbb
push
test
inc
es
lea
pusha
test
or
enter
frstor
loopne
dec
xor
or
sbb
adc
inc
or
inc
gs
adc
or
push
push
xchg
pop
sbb
loop
neg
pop
push
sti
or
add
push
scas
mov
add
(bad)
ja
sbb
adc
sbb
punpcklwd
pop
inc
das
jge
xchg
adc
xchg
sbb
gs
add
jo
mov
jae
jae
or
pop
mov
cld
gs
or
push
or
js
hlt
mov
ror
jge
outs
ja
ds
push
cs
loopne
addr16
cmp
js
lods
ins
imul
aaa
int3
mov
sub
fcmovnbe
sub
dec
fs
imul
mov
push
push
jo
and
push
push
push
ds
outs
xchg
call
adc
jb
and
sub
leave
add
push
fdivr
daa
mov
or
dec
mov
cld
ja
xor
inc
jne
adc
sub
adc
push
add
sbb
cmp
fxch
(bad)
in
rol
outs
fcomp
or
xchg
xchg
xor
mov
or
or
xor
in
add
nop
jg
add
adc
push
push
rcl
pop
push
pop
ins
push
sub
jne
pop
sub
xchg
mov
mov
cmps
loope
adc
ins
leave
mov
mov
or
adc
adc
cmps
stos
sub
pusha
or
push
pop
adc
ins
movlps
push
ins
pop
xchg
test
ins
sbb
lea
cmps
sbb
mov
sbb
add
push
loopne
push
push
and
inc
adc
push
xor
ins
pop
sar
dec
movs
outs
push
push
clc
pop
jo
fmul
push
movs
(bad)
lods
call
or
test
cmp
mov
mov
pop
sub
ss
xor
ins
push
xor
pop
push
sbb
call
push
add
das
add
arpl
inc
sbb
popf
fcmovb
add
leave
inc
das
inc
scas
aam
xlat
test
test
mov
or
lock
adc
retf
nop
pop
test
sbb
xchg
adc
xchg
jp
adc
dec
xor
(bad)
push
clc
add
push
repz
jae
or
and
adc
cmp
mov
fimul
inc
pop
lock
pop
and
xor
xadd
retf
retf
retf
push
movq
lods
nop
or
pop
sbb
daa
fstp
enter
(bad)
outs
or
jge
js
jne
nop
add
pop
leave
and
adc
(bad)
mov
pop
sbb
ins
dec
sub
or
mov
shl
aad
sub
mov
push
pop
sub
cmp
pop
sbb
call
gs
mov
shr
ds
pop
minps
push
lods
xchg
adc
(bad)
jmp
or
add
cmp
je
xchg
mov
fiadd
sub
daa
inc
inc
jne
adc
push
xlat
xchg
pop
xchg
or
sub
arpl
and
addr16
(bad)
adc
push
jo
mov
xchg
dec
sbb
inc
call
sbb
add
push
(bad)
pop
xor
add
mov
add
test
add
aad
adc
push
jo
and
sub
pop
adc
dec
fistp
ins
adc
into
add
push
dec
js
add
cmp
xor
mov
mov
push
inc
jne
lods
push
adc
fadd
pop
jae
iret
(bad)
or
fmul
mov
inc
lods
push
je
mov
sbb
mov
enter
out
push
push
pop
aad
cs
add
mov
pop
jne
(bad)
and
packuswb
std
es
(bad)
imul
push
mov
inc
add
test
xor
add
xchg
and
rcr
xchg
adc
(bad)
add
adc
adc
cmp
dec
nop
jo
pop
push
jo
imul
or
push
adc
shl
sbb
popf
movs
or
sub
cmp
or
nop
add
adc
popa
and
test
adc
sub
or
pop
cmp
loop
mov
inc
push
sbb
pop
lahf
pop
icebp
mov
lahf
push
cmps
jmp
adc
mov
push
int3
push
xchg
push
mov
add
shl
jg
jbe
or
mov
or
cmp
scas
push
mov
mov
mov
aas
call
mov
pop
add
add
int3
rcl
sahf
or
adc
loope
and
inc
xchg
mov
movs
adc
adc
fild
push
or
mov
add
movs
adc
ret
add
push
movs
push
jo
cmp
cmp
push
sbb
xchg
sbb
popa
or
push
(bad)
push
push
add
ror
jb
adc
fcomp
push
aad
or
add
pop
rcl
add
and
imul
imul
add
add
outs
mov
and
cmp
sub
mov
fst
dec
jge
sub
pop
xlat
sbb
sbb
and
add
add
and
xlat
mov
iret
mov
and
mov
es
jne
cmp
mov
xor
lods
jle
mov
out
and
sbb
jns
gs
fmul
fistp
mov
push
mov
pop
push
loopne
bound
inc
mov
adc
loop
mov
sbb
add
loope
imul
push
movups
popf
sub
(bad)
movzx
jmp
jecxz
mov
xor
mov
lock
mov
add
(bad)
sub
adc
dec
push
mov
or
pop
push
add
add
xchg
adc
mov
cmp
dec
cmps
push
aaa
xchg
sbb
mov
add
jge
out
or
pop
shr
enter
fidiv
pop
outs
mov
mov
pop
popa
(bad)
(bad)
aas
add
xor
sub
lods
lods
dec
loope
in
or
daa
loop
push
inc
in
pushf
xor
cli
sbb
call
cmp
adc
test
sub
pop
loopne
fdivr
in
sti
(bad)
cli
push
daa
sbb
pop
lock
cmps
xor
jle
pop
or
mov
fcomp
jnp
xor
pop
aam
pusha
push
mov
jnp
lock
sbb
mov
push
push
je
jmp
or
mov
out
cmp
push
inc
rcr
fadd
inc
inc
cmp
jnp
fmul
fs
mov
ret
push
xor
stos
mov
mov
and
dec
add
xchg
pushf
or
sub
xor
ret
jmp
or
dec
lods
sub
jecxz
inc
or
les
sub
adc
movs
ja
imul
outs
push
pop
xor
hlt
jl
sti
and
mov
inc
imul
ret
cmp
sub
les
mov
dec
cmp
xchg
jbe
imul
daa
shr
addr16
cli
sbb
inc
xchg
adc
cmp
cmps
dec
mov
push
or
icebp
dec
xor
push
pop
jae
stos
add
dec
dec
sbb
ret
dec
rcl
ins
cmps
addr16
cmp
test
sbb
or
mov
test
cmp
sbb
pop
adc
jbe
imul
arpl
inc
ret
(bad)
sbb
cmps
mov
ret
inc
xchg
add
add
push
pop
xor
les
mov
sbb
cdq
cmp
repnz
sbb
sbb
mov
jmp
sbb
sahf
retf
movs
push
adc
or
add
push
je
or
or
jae
sub
movs
or
pop
push
arpl
push
add
aas
shl
or
and
inc
or
jg
inc
inc
and
sbb
inc
jmp
inc
cmp
mov
dec
imul
ins
push
mov
xchg
loopne
sub
xor
in
lods
mov
add
dec
jne
and
pop
(bad)
and
dec
outs
ins
jns
enter
pop
or
(bad)
cs
fdivr
or
jo
dec
adc
dec
mov
push
adc
pop
push
dec
or
inc
test
test
or
jmp
push
cmp
xlat
lea
cmp
es
cmps
dec
imul
lfs
test
cld
pop
and
xor
out
add
pop
inc
dec
js
in
xchg
setle
repnz
out
push
clc
or
(bad)
push
ffreep
and
xor
sub
retf
lock
push
test
scas
jb
adc
inc
rep
and
lock
and
mov
ja
into
add
fwait
push
loop
jg
ds
and
and
pop
sbb
push
cld
add
mov
or
push
inc
push
adc
in
jae
or
cmp
dec
inc
sub
cmps
lea
or
or
jno
adc
sbb
mov
sbb
sbb
push
or
sti
sbb
mov
cs
mul
(bad)
fsubr
fucomip
fcomp
aad
pop
xchg
inc
pusha
jbe
or
mov
pop
jl
icebp
xor
and
or
sub
jno
mov
dec
fild
loopne
ror
dec
dec
jle
or
das
or
pop
inc
inc
call
idiv
ficomp
or
cmp
int3
push
mov
pop
sti
loopne
loope
ss
aaa
or
out
push
and
or
ret
call
and
xchg
sbb
cmps
daa
push
loop
inc
into
hlt
or
imul
stos
lea
(bad)
(bad)
sub
add
imul
sysret
add
jl
jb
add
sub
or
pop
or
mov
add
sar
add
inc
adc
xchg
lods
mov
std
pop
cmp
inc
dec
push
xchg
daa
(bad)
jecxz
imul
dec
add
mov
mov
pop
or
ss
loop
jne
ret
pop
or
mov
or
jge
inc
add
add
(bad)
ret
jmp
(bad)
inc
in
inc
cmp
add
or
cvtps2pi
jnp
movs
adc
or
xchg
mov
xchg
stc
jp
das
xchg
mov
cmps
and
dec
adc
pop
shr
push
push
cmp
pop
inc
addr16
pop
lds
test
int
mov
shr
test
add
sub
aam
or
xor
lods
loope
test
test
bound
pushf
adc
mov
push
jmp
fcomp
mov
mov
aad
das
lods
iret
or
jle
push
mov
inc
(bad)
fiadd
xchg
jnp
cwde
push
push
pop
push
push
out
mov
mov
push
add
push
fdivr
pop
fistp
mov
push
push
sub
out
mov
cs
test
movs
push
rol
out
mov
out
push
sub
dec
push
fistp
cmp
pop
pop
lods
xchg
fadd
lock
sahf
adc
int3
push
mov
nop
push
repz
repz
and
pop
js
clc
mov
and
mov
mov
aaa
push
push
add
mov
in
mov
or
xor
lds
pop
das
pop
mov
adc
add
cmp
add
add
sub
sti
movs
cs
jo
mov
xchg
pusha
(bad)
cs
(bad)
jl
lods
jo
das
jno
das
jnp
shl
mov
ficomp
repnz
add
and
scas
and
(bad)
and
(bad)
and
daa
xor
cmp
add
add
sub
shr
adc
cvtpi2ps
mov
mov
pushf
xchg
sub
in
push
xor
push
sti
mov
jle
xor
rdmsr
jb
lock
xor
xor
xor
jo
retf
lahf
loop
ins
(bad)
add
aaa
ret
add
(bad)
out
or
jg
cmp
out
jb
(bad)
add
and
pop
cmp
out
daa
add
and
or
push
movs
xchg
xlat
test
push
adc
hlt
push
jnp
ret
cmp
jle
ret
add
cmp
push
imul
popf
sbb
push
pusha
stos
in
pop
rcr
jmp
sub
jo
dec
(bad)
jne
aad
jne
add
push
cmp
inc
jmp
outs
jae
jne
pop
(bad)
inc
lods
dec
mov
inc
add
pop
fadd
jmp
mov
sub
scas
mov
fldenv
imul
(bad)
test
sbb
mov
rcr
pusha
imul
xor
or
sub
cli
add
push
adc
jne
(bad)
push
pusha
add
or
es
popf
xor
add
int3
push
sub
or
add
daa
xor
or
dec
mov
pop
add
pop
lock
in
push
inc
ds
pop
ror
jne
sub
adc
loopne
xchg
inc
or
sub
sub
rol
pusha
push
shl
sub
push
mov
cmp
cmps
adc
xchg
sbb
mov
sub
sub
xor
push
add
in
pushf
cmp
cmp
sbb
dec
in
mov
add
ins
push
inc
mov
bound
and
adc
inc
adc
or
inc
cmp
inc
fwait
xchg
or
jge
shr
sub
mov
jl
push
xlat
(bad)
and
mov
dec
dec
repnz
add
inc
add
or
sbb
pop
das
adc
test
pop
addr16
xchg
dec
adc
add
and
in
add
(bad)
cmc
adc
dec
add
xor
add
fs
add
sbb
inc
movs
inc
add
cmp
pop
xchg
mov
adc
or
add
mov
add
inc
xchg
xor
add
fwait
jge
pop
add
mov
jnp
or
inc
and
inc
dec
add
jnp
push
(bad)
pop
adc
inc
jnp
dec
jnp
or
push
jp
and
push
fiadd
inc
sub
jno
js
jg
push
loop
add
sub
or
and
xchg
inc
mov
dec
aaa
xchg
nop
mov
inc
inc
inc
(bad)
neg
cmp
inc
inc
inc
pop
and
out
cmp
dec
inc
inc
inc
inc
jae
mov
xor
les
test
mov
arpl
push
and
adc
gs
inc
mov
daa
xor
sub
mov
inc
inc
popa
mov
mov
inc
lods
pop
xchg
or
or
inc
adc
ret
fisubr
dec
shl
inc
sbb
call
push
fs
cmp
les
mov
pushf
idiv
sub
mov
sar
leave
inc
jae
lea
xchg
inc
lds
rcl
add
mov
mov
ds
push
adc
js
mov
je
or
cmp
mov
mov
(bad)
cld
cmp
sbb
or
addr16
sub
stos
dec
daa
clc
dec
nop
ja
jnp
push
cmp
push
push
mov
cmp
jo
push
nop
loopne
pop
sahf
out
div
clc
and
jnp
mov
and
int3
push
inc
push
sbb
pop
pop
out
sahf
push
pop
into
cwde
inc
push
add
neg
in
add
mov
out
out
mov
int3
push
in
push
xchg
push
xchg
out
out
mov
mov
sbb
push
fs
mov
cmp
ret
xchg
or
outs
test
ror
or
inc
cmp
icebp
(bad)
adc
xchg
clts
ror
cs
out
mov
pop
add
add
sbb
pop
add
pop
cli
aas
lahf
jecxz
je
pop
or
pop
pushf
punpcklbw
shl
inc
punpckldq
inc
arpl
pop
(bad)
adc
pcmpgtb
scas
gs
data16
jg
retf
adc
push
sub
inc
xchg
sub
inc
ins
pop
shl
iret
or
add
outs
mov
dec
jo
jno
adc
push
aaa
test
daa
rol
inc
jne
or
jo
and
pop
daa
rol
ret
pop
int3
lahf
dec
push
mov
or
ins
push
adc
mov
jmp
push
jne
and
pop
sub
cld
out
push
push
jge
fdivr
es
and
or
or
fdivr
icebp
sar
ror
and
lldt
sub
push
nop
daa
fsubr
and
jmp
pusha
dec
mov
cmps
or
push
add
ins
xor
ja
pop
pop
pushf
das
cmp
push
gs
adc
stos
mov
retf
or
and
sub
(bad)
imul
or
outs
xchg
std
mov
or
ins
daa
cmp
xor
xchg
or
pushf
in
push
fidivr
ss
ins
cmp
sbb
xchg
mov
sub
outs
xchg
and
in
loopne
adc
outs
adc
dec
jecxz
arpl
push
and
cdq
jns
xchg
mov
dec
sub
push
inc
or
jno
mov
add
add
or
xor
push
and
add
xor
test
sar
adc
daa
or
imul
add
rol
add
mov
popa
push
xchg
push
push
mov
xchg
xchg
pusha
test
or
dec
sbb
dec
adc
stos
test
sbb
das
xor
daa
pop
lock
ss
mov
inc
inc
and
mov
repz
xchg
and
out
adc
push
and
and
ja
mov
and
and
ins
or
and
nop
mov
fwait
dec
and
add
and
cmps
adc
adc
adc
push
sbb
push
ins
and
rol
add
sbb
inc
cmps
xor
cmps
xor
shr
xor
adc
add
cmps
add
cmp
dec
dec
inc
cs
and
jns
dec
add
cwde
add
pop
sbb
and
and
(bad)
add
dec
pop
clc
dec
jg
dec
mul
cmp
nop
pop
aam
pop
test
mov
jl
inc
jno
sub
lods
xor
mov
pop
loopne
and
ins
dec
sub
jno
mov
add
fadd
lds
inc
fld
cmp
clc
dec
xchg
in
push
inc
test
dec
das
sbb
and
lods
pop
ret
ret
ret
add
pop
mov
mov
cmp
push
pushf
scas
es
ins
push
loopne
pushw
rol
neg
or
push
mov
mov
add
repnz
lods
pop
pop
lods
and
jp
lods
pop
lods
xchg
and
jecxz
mov
test
imul
mov
push
add
or
outs
push
pop
es
stos
xchg
adc
movs
or
push
inc
loop
jg
adc
add
pop
inc
sub
add
rcl
retf
fist
push
loope
dec
and
sub
outs
in
dec
jp
xor
add
or
dec
not
repnz
mov
dec
repnz
repnz
ud2
add
add
or
(bad)
verr
push
fxam
out
mov
pusha
cmovns
call
cmovae
cmove
inc
inc
sub
das
pop
dec
inc
add
add
push
in
lahf
dec
bound
dec
add
fld
push
cmovle
dec
add
jo
mov
sub
cdq
and
lods
pop
pop
scas
cs
push
and
and
fadd
pop
pop
add
adc
lock
cmp
out
sub
mov
inc
sub
fimul
test
pop
sub
mov
xchg
fisttp
push
pop
sbb
mov
xchg
test
or
pop
sti
pushf
scas
xchg
inc
dec
sbb
push
add
sbb
sbb
sar
sbb
dec
mov
and
mov
push
and
or
mov
dec
mov
push
dec
mov
and
push
xor
xor
inc
or
mov
imul
push
xchg
scas
dec
dec
add
xchg
cmp
or
push
push
mov
aaa
push
adc
or
jmp
mov
cmp
test
mov
mov
pusha
sub
or
in
or
or
adc
inc
jae
push
cmp
push
mov
jns
and
test
xor
fs
cwde
or
imul
and
sbb
push
mov
daa
pop
and
test
push
sbb
xchg
sbb
dec
mov
stc
inc
add
and
sbb
or
push
add
add
jmp
pop
stos
pop
and
outs
cmp
push
cmp
daa
push
push
cmp
adc
add
outs
lock
lea
rcl
mov
xor
sub
scas
and
mov
dec
adc
mov
pop
ja
mov
push
popa
add
adc
pop
iret
push
and
(bad)
sbb
dec
xchg
cmp
jns
inc
mov
jl
repnz
add
lar
inc
mov
lahf
mov
call
adc
sar
pop
or
pop
int3
nop
push
cmp
sbb
xlat
icebp
sbb
das
ja
dec
popf
or
push
add
add
in
xchg
ins
sbb
xchg
pop
add
or
jmp
dec
adc
push
ret
popa
pop
dec
mov
fistp
dec
xor
fimul
inc
pop
or
cmp
sub
mov
push
mov
sbb
(bad)
pop
or
dec
pop
ds
rol
inc
and
pop
sbb
or
adc
pop
inc
lods
sbb
or
inc
js
mov
dec
pop
enter
mov
cmp
inc
enter
sbb
and
nop
mov
lods
or
mov
and
cmp
cmp
pop
leave
sbb
sbb
push
and
mov
adc
adc
or
xor
fwait
cmp
pop
rcr
fimul
inc
lods
scas
inc
lods
scas
mov
mov
pop
lahf
adc
adc
loop
mov
pop
dec
add
mov
sbb
scas
lods
(bad)
jne
pop
aas
add
inc
je
pop
das
test
rol
ins
pop
das
cmp
lock
mov
cmp
into
push
lock
cmp
and
mov
cmp
ins
mov
push
sbb
lock
ja
les
movs
jb
mov
mov
in
mov
je
xor
inc
test
inc
push
dec
pop
bndldx
fwait
dec
or
(bad)
mov
das
das
jg
ss
pusha
pusha
mov
pusha
clc
cs
das
fisub
popa
xor
dec
lahf
loope
addr16
cmovb
cmps
inc
(bad)
cmove
push
add
bound
jns
(bad)
std
pshufw
leave
outs
arpl
in
or
(bad)
mov
movs
arpl
adc
cmp
movs
add
lock
std
adc
movs
arpl
mov
mov
mov
add
sub
das
mov
retf
push
sub
lock
retf
sti
test
push
xchg
mov
movs
bound
push
adc
jmp
arpl
in
mov
nop
pop
leave
movs
arpl
mov
push
and
mov
jns
or
movs
arpl
or
inc
mov
nop
pop
xchg
mov
inc
push
movs
mov
push
jo
xor
scas
nop
arpl
inc
inc
mov
or
movs
arpl
inc
daa
sub
ss
dec
je
and
imul
js
pop
and
mov
adc
gs
adc
les
stos
jo
popw
aam
mov
cmp
dec
mov
sub
pop
push
mov
dec
xchg
mov
mov
or
push
ror
daa
into
jnp
push
es
push
adc
push
js
and
jns
mov
xor
pop
lea
pop
(bad)
pop
sbb
pop
jo
dec
retf
fild
sbb
verw
test
shr
jg
adc
aad
adc
dec
cld
sub
jg
dec
add
add
adc
pop
icebp
and
cmp
xor
lds
je
mov
(bad)
iret
xor
rcl
and
cmp
lea
push
dec
rcl
(bad)
cmp
mov
sub
mov
retf
cmp
pop
and
or
add
sbb
mov
cmp
pop
push
mov
jns
imul
cmps
xor
mov
add
imul
add
add
xor
jnp
cmp
mov
push
and
jae
xchg
push
retf
imul
ins
pop
xchg
push
inc
xchg
pop
je
sub
push
imul
jnp
enter
push
mov
push
push
push
mov
les
dec
retf
das
add
pop
je
add
push
(bad)
movs
lds
test
xchg
sbb
rol
ret
lods
shl
fistp
mov
ret
jbe
shl
fiadd
aam
mov
je
add
test
mov
pop
popa
or
fadd
or
(bad)
mov
ins
sbb
add
jl
subps
or
(bad)
add
fadd
pop
pop
jle
das
outs
pop
outs
test
outs
scas
test
pop
fmul
or
jg
stc
sub
outs
popa
js
mov
hlt
scas
imul
cmovns
es
popa
xchg
xchg
xchg
xchg
jo
jo
jo
jno
pop
jnp
xchg
jno
jno
lar
cmovnp
fisubr
loope
sub
bound
ret
sar
sti
cmovle
mov
test
add
jae
cmps
adc
adc
or
mov
mov
cmp
cmp
add
jae
add
scas
cs
ror
pop
dec
mov
sub
dec
jge
add
xor
and
bound
or
sub
push
call
push
dec
sti
mov
enter
xchg
mov
push
test
push
mov
adc
xor
pop
push
pop
push
or
sub
add
xor
push
or
or
in
ret
pop
ins
rol
les
xchg
loopne
cmp
rol
sub
cmp
and
repnz
mov
enter
jae
les
pop
and
and
cmp
jae
ret
nop
adc
push
push
adc
mov
inc
rcl
and
ret
in
mov
push
pop
mov
lea
and
fst
dec
push
jo
je
popf
mov
cmp
les
repnz
mov
inc
push
jl
mov
js
lds
imul
pop
mov
imul
stos
test
hlt
jnp
jbe
sub
mov
jbe
int3
or
pop
mov
pop
das
pushf
push
in
jnp
out
pop
push
xor
push
sar
xor
(bad)
sbb
in
add
das
mov
pop
ins
mulps
or
pop
mov
outs
cs
sub
sahf
out
push
inc
in
cwde
mov
mov
jg
mulps
or
scas
add
add
lods
xbegin
mov
dec
push
add
loopne
add
jge
push
or
adc
xor
repnz
clc
lsl
or
xchg
mov
retf
lahf
cwde
ud2
add
jbe
jns
das
jg
stos
inc
cmove
jge
add
adc
cmova
stos
push
retf
xchg
mov
popf
dec
add
(bad)
cs
adc
dec
jnp
pshufw
ret
pop
out
mov
mov
popf
popa
pushf
cmp
lock
xor
je
mov
ror
pop
inc
test
std
lock
add
icebp
je
push
sbb
icebp
xor
mov
xor
add
sub
xor
pop
pusha
and
sbb
xchg
mov
adc
sbb
stos
js
mov
enter
mov
bound
jnp
pop
xor
jg
add
js
imul
fist
pop
cwde
fcom
daa
sub
fistp
cmp
loopne
scas
aad
pop
icebp
jne
jmp
sub
add
push
les
pop
loope
ins
jnp
and
sub
push
pop
ins
add
cwde
jnp
cmp
sbb
rol
mov
or
jnp
in
push
pop
adc
jnp
jno
dec
cld
cmp
cwde
push
pop
push
jnp
mov
sbb
mov
inc
and
jnp
and
jnp
mov
adc
test
popa
stos
and
push
je
hlt
jnp
dec
je
adc
dec
je
jl
shl
test
inc
jle
pop
jns
pop
mov
maskmovq
ja
dec
adc
push
or
push
or
push
ret
sahf
mov
adc
jmp
test
add
xchg
xchg
pop
jo
fcom
mov
iret
dec
cmp
push
push
jo
push
ror
jb
mov
test
adc
ret
pop
mov
inc
push
popa
xchg
mov
adc
test
pop
inc
syscall
add
push
mov
das
popa
cmp
in
in
mov
add
jns
mov
jmp
inc
jns
stc
or
sbb
jns
or
mov
mov
xor
adc
sub
adc
dec
and
gs
adc
aaa
adc
shl
inc
sub
push
pop
sahf
pop
addr16
sub
sahf
cs
addr16
add
push
nop
or
pop
push
sub
add
pop
and
scas
mov
das
or
test
test
adc
adc
push
xor
test
and
and
nop
inc
mov
mov
and
inc
jb
jns
adc
pop
leave
or
push
adc
fcomp
and
nop
adc
jo
jns
pushf
inc
and
and
in
repnz
rcl
nop
pop
leave
or
in
inc
push
and
and
mov
sbb
test
jb
test
push
and
test
add
fild
outs
aam
push
js
cs
adc
jo
outs
adc
mov
iret
xor
sbb
mov
jns
out
mov
xor
mov
dec
adc
add
(bad)
outs
aam
scas
jl
rcr
rcr
sar
ja
mov
je
push
adc
jnp
mov
and
(bad)
jno
adc
dec
adc
outs
popa
mov
inc
outs
daa
jne
add
retf
fisttp
push
cmps
movhps
int
push
add
syscall
add
sbb
pop
push
add
dec
add
mov
mov
lea
loope
jmp
inc
sbb
das
das
das
xchg
mov
mov
mov
das
das
das
das
jl
mov
lock
mov
and
das
popa
mov
loope
(bad)
cmp
icebp
cmp
loope
ror
jno
xchg
dec
aaa
sbb
pop
ror
sub
mov
sub
jecxz
scas
cs
sub
jecxz
das
in
ror
sbb
lock
jne
push
sub
nop
mov
mov
jecxz
ss
pop
pop
clc
mov
and
(bad)
fcom
pop
imul
sbb
aad
push
test
mov
enter
pop
adc
ror
cmp
push
ror
aam
ror
rcr
mov
rcr
mov
nop
unpcklps
pop
ror
rcr
mov
aam
ror
rcr
mov
add
and
pop
ror
rcr
mov
xchg
pop
ror
in
ror
pop
leave
mov
push
dec
test
mov
fcomp
push
aas
add
test
push
pop
pop
pop
sahf
out
pop
push
and
push
cmp
repz
mov
jo
pop
rol
(bad)
xchg
and
mov
pop
(bad)
mov
das
movs
and
and
push
in
out
jns
repz
mov
push
mov
inc
loopne
push
sbb
fsub
daa
push
test
xor
and
jae
dec
push
lock
add
loopne
loop
inc
push
pop
sub
sti
mov
jl
pushf
(bad)
add
xchg
psrlw
add
xchg
pop
xchg
xchg
xchg
xchg
xchg
xchg
adc
cmp
xchg
aam
xchg
xchg
xchg
xchg
or
inc
xchg
jg
mov
xchg
repz
sub
xchg
mov
xchg
ficom
outs
pop
lea
out
sub
lahf
adc
xchg
and
dec
push
xchg
jne
cmp
in
icebp
je
adc
ret
sub
jne
push
mov
sub
pop
push
sub
outs
pop
push
push
mov
(bad)
xlat
lds
aaa
pop
inc
inc
mov
bound
pop
push
add
and
and
or
pop
jmp
add
pop
xor
xor
cmp
xchg
inc
repnz
cwde
and
xchg
pop
leave
add
and
xchg
mov
xchg
adc
and
xchg
jo
pop
and
nop
pop
adc
push
and
cmp
and
inc
repnz
and
mov
xchg
pop
and
repnz
pop
adc
and
xchg
fdivr
pop
adc
inc
mov
xchg
pop
adc
mov
xchg
pusha
and
mov
push
adc
lea
xchg
shl
sahf
push
aam
push
out
adc
pop
add
mov
je
pop
jl
jle
iret
jnp
cmps
inc
push
inc
mov
push
shr
test
fistp
add
nop
push
pusha
fnstenv
clc
fadd
fidivr
add
fdivr
js
(bad)
mov
fcomp
inc
add
push
push
add
cld
push
or
cmp
int3
jo
inc
js
and
adc
pop
add
pop
xor
mov
adc
loope
mov
sbb
jecxz
iret
jno
sti
dec
or
sbb
sbb
sahf
or
add
repnz
syscall
add
jb
in
repnz
pushf
wbinvd
add
or
icebp
or
fwait
loopne
not
pop
dec
cmovns
mov
icebp
retf
lahf
inc
cmovae
std
inc
add
jg
xchg
pushf
test
loope
dec
add
popf
mov
push
popf
mov
pusha
xor
(bad)
xor
stos
clc
fdiv
or
cmp
sub
cs
mov
dec
test
cs
rcl
jne
cmp
pop
ins
sahf
sub
daa
mov
sahf
lds
xchg
cmp
push
fsubr
aad
mov
push
mov
mov
push
(bad)
in
aad
add
mov
xor
mov
aam
fcmovb
push
nop
fnstcw
push
xor
test
ins
sahf
or
pop
cmp
inc
ret
repnz
sahf
cmp
jp
pushf
mov
xlat
ror
sahf
push
and
cmp
ins
sahf
inc
jb
stc
call
and
repnz
pop
ins
sahf
adc
in
xlat
pop
icebp
cmp
dec
push
jmp
fistp
jmp
add
inc
and
(bad)
pop
scas
in
in
sahf
js
pop
ins
sahf
jns
pop
and
fcomp
sahf
dec
sbb
or
sti
push
test
imul
ins
adc
or
imul
aaa
cmp
xchg
aaa
cld
sahf
out
mov
inc
xlat
sbb
push
shl
or
mov
xchg
pop
xlat
and
scas
fmulp
cmp
repz
test
dec
pop
push
mov
xlat
push
add
mov
add
fidiv
int3
fcom
loop
pop
xlat
pop
fisttp
fld
cs
push
pop
sbb
jge
push
loopne
and
movs
fcmovu
push
inc
mov
(bad)
jo
xchg
sub
dec
adc
retf
and
in
mov
adc
lods
gs
or
cmp
jl
jbe
add
fadd
mov
push
mov
aad
das
pop
ret
xlat
xor
das
test
loope
sbb
das
das
mov
cmp
jb
test
and
(bad)
rol
movs
fld
dec
enter
clc
faddp
lds
mov
test
cmps
test
bound
push
(bad)
and
add
loop
and
xor
inc
push
pop
or
(bad)
push
sub
(bad)
push
sub
fcomp
in
or
sti
dec
mov
pop
push
push
pop
push
add
push
sbb
inc
mov
(bad)
push
and
push
and
cmp
xor
cmp
in
repnz
fistp
cmps
xchg
adc
xor
cmps
dec
push
and
enter
and
cmp
fcomp
cmps
and
repnz
cmps
setb
enter
cmps
mov
cmp
dec
and
cmps
loopne
repnz
sbb
in
sbb
xchg
add
cmps
jo
loop
movs
push
sbb
xchg
jp
push
sbb
push
mov
cmp
inc
test
cmps
int3
scas
mov
test
stos
mov
cmp
xor
cmp
test
imul
mov
pop
ins
out
sahf
test
pushf
adc
out
loop
adc
cmp
in
call
in
iret
jnp
inc
cs
ins
push
jo
repz
daa
push
loopne
cmp
jecxz
cmp
or
movs
in
cmp
leave
mov
inc
(bad)
inc
fs
jne
fwait
(bad)
clc
daa
clc
add
packuswb
ins
mov
stos
mov
das
xor
shr
stos
stos
lods
ucomiss
or
ud2
add
iret
cli
prefetch
jecxz
add
retf
retf
pop
lods
xchg
lods
leave
lods
add
cmp
jne
scas
scas
call
retf
and
(bad)
jb
and
aad
int3
out
inc
test
scas
test
mov
push
cmp
adc
adc
add
adc
sbb
xor
pop
pop
add
xor
dec
push
add
mov
and
sub
pop
sti
mov
pop
push
sub
inc
pop
push
mov
add
xchg
pop
pop
adc
push
push
shl
pop
push
mov
pushf
or
xor
add
loopne
enter
in
and
enter
nop
pop
mov
enter
inc
push
test
enter
add
in
scas
pop
leave
or
push
in
scas
jo
and
nop
in
scas
mov
jns
pushf
inc
enter
in
repnz
scas
cmp
nop
pop
leave
or
scas
cld
jecxz
push
and
enter
sub
sbb
scas
call
leave
enter
(bad)
add
test
popa
sub
mov
jl
adc
popf
(bad)
mov
adc
mov
movs
loope
loop
iret
jae
mov
int3
loopne
hlt
push
adc
repz
push
pop
push
inc
les
and
inc
repnz
cmp
hlt
loop
js
mov
mov
add
push
push
nop
push
xor
repz
jnp
pop
push
jo
lods
and
add
loopne
pop
and
mov
xor
ds
cmps
and
pop
and
pop
dec
(bad)
add
cpuid
push
(bad)
repnz
loop
mov
das
das
pop
pop
cmp
mov
das
das
das
loopne
or
das
das
das
das
xchg
mov
mov
mov
mov
das
das
das
jns
mov
in
mov
mov
das
das
das
pop
mov
mov
mov
mov
inc
mov
or
jecxz
mov
lods
loop
or
cmp
add
mov
cmps
ss
pop
js
adc
or
sub
inc
dec
mov
icebp
mov
loop
inc
mov
mov
adc
rcl
push
or
pop
or
sub
inc
loop
and
mov
pop
les
cs
xor
pop
js
shl
pop
leave
or
add
inc
push
and
js
push
loope
jns
pushf
js
nop
loopne
in
bnd
xor
daa
nop
pop
leave
js
cmp
js
pushf
inc
push
and
loopne
mov
jo
js
leave
or
inc
lods
loopne
mov
and
js
nop
sbb
push
loopne
js
inc
jb
jns
jecxz
mov
push
fistp
jl
inc
pushf
push
dec
iret
pop
mov
and
enter
sub
icebp
(bad)
out
mov
mov
retf
or
pop
add
hlt
push
xchg
cmc
push
clc
cmp
jle
je
hlt
(bad)
inc
neg
repz
fcomp
push
jo
xrelease
sub
repz
or
or
repnz
inc
repz
icebp
jnp
mov
ss
push
lock
sbb
cmp
test
push
fild
push
clc
lock
push
nop
icebp
pop
and
jmp
mov
xchg
popa
xchg
inc
cmp
repz
mov
cmps
add
scas
sbb
iret
scas
cld
jnp
mov
add
mov
push
add
psrlw
sub
(bad)
add
add
xchg
mulps
mov
mov
mov
inc
mov
xchg
mov
sub
xchg
mov
or
xchg
xchg
rol
or
arpl
add
sub
div
xchg
pop
xchg
inc
sub
loope
or
xor
and
sub
mov
ss
pop
sub
and
mov
pop
inc
pop
pop
sub
sub
lods
push
sub
je
pop
and
mov
pop
inc
inc
mov
push
loop
mov
pop
push
xor
mov
adc
jo
add
pop
push
xor
pop
sub
setb
enter
rcr
shr
and
sub
and
sub
inc
icebp
and
xchg
pop
sub
lock
cmp
repnz
and
sub
cmp
pop
enter
sar
sub
setb
(bad)
icebp
sub
cmp
sub
in
repnz
sub
dec
pop
leave
adc
sub
add
aad
mov
pop
mov
push
(bad)
mov
cmp
push
mov
les
pushf
mov
outs
push
push
inc
push
adc
lock
js
and
jmp
dec
cld
in
imul
push
or
add
sub
(bad)
ins
in
dec
add
inc
cmp
bound
inc
add
mov
or
into
add
inc
out
cmc
outs
and
jne
xchg
sub
test
jmp
xor
push
xor
pop
add
add
les
stc
sti
jg
(bad)
add
pop
add
push
loopne
punpckhwd
adc
retf
or
xor
adc
fistp
lds
pusha
in
mov
ds
bswap
add
int3
ret
sub
cs
mov
dec
push
aad
sub
xor
sbb
das
xchg
icebp
test
cmp
adc
das
loop
mov
shl
scas
mov
repz
retf
(bad)
jnp
dec
sahf
and
push
rcl
lahf
sub
cwde
and
push
jb
and
popf
sbb
leave
inc
and
outs
jae
sbb
addr16
scas
mov
xchg
mov
test
or
pop
sbb
adc
push
push
icebp
les
(bad)
jecxz
push
sub
das
(bad)
push
adc
dec
rol
inc
jno
jns
mov
jg
(bad)
mov
into
mov
inc
(bad)
mov
aaa
cmp
dec
push
pop
or
inc
dec
popa
xor
inc
push
sahf
out
or
loop
lock
adc
hlt
xchg
shl
xlat
pop
enter
iret
fstp
dec
xor
mov
fcomp
pop
jnp
push
stos
(bad)
iret
dec
pusha
sbb
push
sbb
jmp
add
cmp
or
push
test
gs
add
js
and
leave
pop
sub
cmp
leave
std
and
ins
jno
pop
leave
inc
and
inc
leave
dec
xor
ror
inc
adc
dec
mov
les
cli
jb
jmp
mov
pop
test
mov
std
ins
(bad)
in
jp
mov
ret
adc
aad
test
jge
int3
leave
lahf
fcom
dec
rcr
push
push
retf
push
sbb
mov
push
add
test
in
push
outs
sbb
add
add
mov
add
add
mov
sub
lods
adc
les
dec
jecxz
sbb
jnp
scas
inc
or
push
add
mov
xchg
fmul
dec
ins
shl
and
add
adc
pushf
cmp
repz
push
jno
daa
mov
icebp
lds
xchg
sbb
pop
lds
mov
lds
ret
and
add
xchg
mov
leave
and
ror
jne
cmp
inc
into
das
sub
outs
popf
push
pop
pop
rcr
cwde
leave
rol
jns
test
cld
cmp
cli
dec
xor
dec
sbb
add
cld
pop
cld
dec
or
nop
sti
mov
cli
mov
xor
or
dec
xor
adc
adc
dec
adc
lds
inc
pop
jmp
dec
cmc
inc
push
sub
sub
sbb
push
lahf
add
adc
xchg
push
inc
xor
jmp
add
fwait
jmp
mov
orps
aaa
ret
not
jmp
pop
pop
sub
mov
inc
iret
movhps
inc
push
add
add
(bad)
pop
inc
mov
stc
pop
test
sbb
adc
clc
cwde
sub
int
push
pop
xor
adc
mov
pop
xchg
inc
dec
test
xor
add
and
jno
jae
scas
or
xor
push
adc
shr
bound
inc
adc
push
je
jecxz
push
jmp
push
nop
mov
xchg
shl
add
and
pop
div
add
sbb
icebp
mov
add
and
(bad)
mov
push
call
fild
push
shr
test
sub
push
mov
out
(bad)
out
sbb
sbb
cwde
push
sar
loopne
push
(bad)
fsubr
es
lock
cmp
mov
dec
out
pusha
rol
fist
(bad)
sar
loopne
fisubr
movs
push
and
or
pop
mov
xchg
pusha
mov
cld
add
xchg
pop
ror
xchg
rol
jnp
add
mov
retf
fild
pusha
das
aam
gs
add
pop
mov
adc
movups
sbb
sub
push
pavgb
or
(bad)
dec
adc
push
mov
add
loopne
mov
xor
ins
add
out
adc
mov
dec
mov
push
or
mov
add
cmp
and
xchg
aas
ss
or
mov
pushf
sbb
or
pop
mov
lds
or
pop
push
mov
pop
rcl
inc
imul
ror
inc
pop
adc
mov
(bad)
adc
add
adc
dec
ins
outs
jmp
push
sub
jmp
mov
mov
xchg
rcl
popa
pop
aaa
mov
leave
mov
cmovle
in
in
mov
mov
aam
imul
das
inc
xlat
aaa
sbb
fimul
fldenv
fldcw
(bad)
in
cmp
push
xor
clc
or
xor
mov
pushf
pop
add
or
adc
pop
clc
or
punpcklbw
rol
or
pop
aas
cmp
(bad)
sub
adc
nop
pop
aas
adc
push
add
dec
mov
pop
fcom
dec
push
cmovns
push
shl
xchg
(bad)
sub
(bad)
pushf
add
fiadd
pop
and
push
cmp
rol
adc
inc
ja
sbb
pusha
cmp
imul
fistp
fld
adc
jecxz
data16
mov
sbb
inc
daa
scas
fisub
test
adc
aad
xlat
cmp
call
push
fld
push
jno
dec
movs
add
fnsave
cmp
jmp
test
push
add
or
mov
cmc
cmp
outs
push
nop
sahf
test
pop
or
or
push
push
add
or
pop
adc
adc
pop
aaa
out
mov
ror
xor
mov
xor
in
popa
test
add
data16
test
mov
push
and
inc
or
sbb
mov
aas
fnstcw
ins
(bad)
sti
fst
add
mov
fiadd
dec
pmuludq
sub
push
shl
jmp
xchg
mov
pop
seto
andps
sahf
adc
sub
pop
xchg
push
add
sub
pop
pop
pop
pop
add
bound
push
call
or
add
xor
bound
pop
or
and
shl
loope
div
jge
add
mov
add
pop
jmp
jo
clc
xchg
test
add
or
sub
les
enter
inc
jmp
add
ins
jecxz
cmps
xor
xor
xchg
rcl
loop
push
dec
das
nop
push
add
push
jg
push
xlat
cmp
pushf
add
cmp
cwde
push
xlat
mov
or
sub
out
push
inc
out
sub
mov
loop
xlat
cmc
inc
ror
icebp
(bad)
add
jecxz
sbb
test
adc
push
xchg
pop
push
(bad)
(bad)
dec
xor
cdq
pop
aas
dec
adc
or
and
xchg
aaa
test
dec
cmc
push
lock
daa
stos
inc
add
or
push
inc
addr16
das
and
pop
add
icebp
sub
mov
lods
call
pop
pop
inc
cmps
out
pop
out
jmp
daa
dec
arpl
cmp
jae
sbb
inc
ss
and
lea
mov
stc
pop
xchg
mov
das
or
adc
add
pop
or
xchg
pop
call
add
in
push
in
sti
and
psubd
sbb
out
in
push
out
add
dec
push
sar
add
add
rol
pop
or
loopne
fisttp
or
fbld
inc
cdq
push
mov
xor
add
or
pop
repz
sar
jns
xor
cwde
and
xchg
mov
and
or
dec
adc
dec
mov
ret
nop
out
ins
lods
idiv
xor
xchg
xor
inc
or
or
push
inc
pop
xor
leave
shl
mov
and
xlat
pop
popa
fsub
int
adc
test
mov
jno
sub
ret
sub
fwait
add
imul
adc
dec
test
lea
push
aad
jecxz
dec
or
sub
pop
sub
fcom
add
out
sub
sbb
fld
nop
sub
out
cmp
inc
fcos
mov
mov
sbb
or
add
jmp
dec
lahf
sub
push
adc
pop
adc
dec
fwait
pushf
rcl
adc
popf
aas
and
in
push
out
sbb
std
add
cdq
jmp
fild
mov
add
repnz
sbb
inc
adc
test
in
in
lea
mov
(bad)
add
add
mov
jne
sbb
pop
add
enter
jl
repnz
dec
or
push
or
push
stc
repnz
or
push
add
mov
in
cdq
adc
push
retf
xchg
xchg
adc
push
pop
outs
daa
shl
inc
dec
pop
pminsw
fidiv
push
add
adc
test
sar
push
enter
xor
xor
cwde
dec
jnp
xor
lock
aaa
test
or
mov
dec
jae
dec
inc
xor
inc
mov
add
lds
je
inc
mov
inc
mov
test
dec
add
push
sub
pop
add
mov
ret
ret
and
adc
pop
movs
shl
and
jmp
test
cmp
ins
loopne
and
test
sahf
sbb
fcomp
push
mov
mov
jg
in
out
push
fsubr
imul
inc
add
push
movs
(bad)
mov
xchg
xlat
dec
sub
scas
hlt
mov
pop
pushf
ss
in
push
aaa
add
cmovbe
lods
mov
jae
push
add
mov
ins
in
fisttp
sbb
jg
call
(bad)
cs
xor
in
mov
ror
test
xchg
pop
push
xchg
loop
cmp
add
sti
lock
add
add
adc
je
pop
jl
or
neg
or
push
mov
lods
das
mov
popa
jmp
lahf
push
addr16
jno
out
imul
out
sub
mov
dec
inc
dec
inc
add
adc
jmp
and
pop
add
and
mov
pop
add
pop
fwait
sti
jecxz
rcl
icebp
idiv
das
pop
icebp
push
daa
clc
das
lock
arpl
out
test
femms
inc
pop
xor
adc
jae
xor
fiadd
sbb
pop
adc
gs
xchg
pop
mov
test
pop
lock
in
mov
aam
psllw
add
loopne
pop
imul
or
push
icebp
add
dec
jl
jecxz
sti
mov
dec
xchg
adc
adc
ror
dec
nop
jmp
popa
lods
lds
or
fdivr
push
outs
jb
add
or
adc
data16
and
push
daa
popa
xor
inc
lahf
pop
icebp
inc
xor
ror
jne
nop
cmp
and
push
(bad)
repnz
dec
repz
or
out
mul
push
xchg
jl
neg
repz
out
push
je
push
pop
push
push
in
inc
add
ds
dec
xchg
sbb
xchg
mov
repz
lods
mov
clc
mov
xor
push
cmp
repz
push
sbb
adc
ins
push
je
sahf
out
mov
neg
jnp
add
push
pop
push
sbb
out
sbb
push
mov
mov
out
jns
xchg
push
sbb
ds
push
fsubr
jns
out
lods
cwde
nop
loopne
fdiv
std
jo
mov
(bad)
cmp
test
xchg
add
jecxz
mov
shl
sub
push
repz
dec
inc
add
pop
outs
ja
add
not
repz
shl
cmp
mov
pop
pop
pop
add
fld1
icebp
mov
fild
pop
cmp
dec
das
mov
enter
hlt
mov
add
adc
xchg
jnp
movs
bound
mov
mov
mov
loop
mov
mov
ins
sbb
test
cs
icebp
shl
push
adc
call
pusha
stc
add
fdivp
addr16
adc
pop
jbe
cmc
xor
addr16
cmp
lds
xor
mov
in
test
and
xchg
stc
or
sub
sbb
dec
sub
loop
pop
and
stc
loop
adc
or
xor
sub
dec
push
cdq
lea
cdq
jae
xchg
pop
mov
dec
adc
mov
add
and
adc
mov
inc
xor
add
adc
jae
push
adc
xchg
inc
mov
adc
and
popa
movs
jo
cmp
or
add
div
pop
xor
xchg
mov
pop
inc
sbb
adc
pop
ins
lds
jmp
xchg
(bad)
or
out
add
or
xchg
jp
add
adc
adc
or
push
mov
adc
pop
add
add
pusha
or
punpckhbw
sbb
sti
pminsw
add
aaa
les
and
clc
stos
nop
mov
mov
push
or
mov
xor
add
and
lock
sti
push
and
repnz
and
dec
prefetchnta
sbb
stc
or
repz
add
lea
jmp
or
mov
fs
sub
push
add
clc
mov
loop
bound
add
popf
pop
fmul
cmp
popf
xor
leave
icebp
sub
xchg
popf
and
(bad)
fs
cmp
or
and
fs
pop
sub
fs
popa
xchg
pop
and
pop
adc
stc
mov
mov
daa
je
addr16
addr16
idiv
pop
inc
into
jb
imul
int
test
sbb
adc
cmc
js
pop
or
cmp
int3
pop
push
inc
in
mov
repnz
pop
stc
bnd
das
add
nop
lea
leave
sbb
jl
add
push
cmp
pop
in
sbb
into
and
add
into
sub
cmp
push
sub
gs
cmp
leave
(bad)
scas
mov
into
lds
and
cmp
dec
mov
xlat
pop
fbstp
sbb
or
aad
pop
xchg
std
scas
pop
test
hlt
std
mov
je
bswap
pop
scas
add
add
pop
xor
jg
xchg
or
adc
adc
aas
ins
adc
xchg
in
xchg
scas
pop
scas
pop
mov
pusha
adc
adc
fs
mov
inc
pop
mov
pusha
inc
fmul
push
aas
xchg
push
cmp
adc
bound
gs
aas
dec
jae
mov
and
aam
call
es
int
pop
push
aad
scas
cld
push
pop
cmps
pop
xchg
jnp
add
add
scas
daa
clc
fsubr
(bad)
es
mov
or
wrmsr
add
push
scas
sub
rdpmc
add
iret
mov
movd
scas
push
popf
cmove
sbb
dec
cmp
pop
sub
pop
shl
inc
frstor
mov
or
or
cmp
dec
stc
xchg
jle
fisub
adc
aaa
xor
mov
lds
(bad)
inc
popa
xchg
dec
cli
lds
and
push
outs
(bad)
rcl
and
aaa
setae
push
dec
adc
cmp
daa
push
bound
dec
pop
inc
pop
daa
dec
les
push
mov
sbb
cs
(bad)
adc
bound
jecxz
add
add
mov
cmp
cs
and
jge
adc
xor
xchg
cmp
mov
mov
sbb
loopne
add
dec
pop
loop
or
les
daa
lea
mov
popa
pop
js
xor
pop
jne
cmp
pop
stos
push
or
clc
outs
or
push
pop
les
pop
pop
jecxz
jno
cwde
pop
lahf
adc
les
sub
inc
sbb
add
call
mov
neg
sbb
rcl
dec
push
pop
push
pusha
xor
inc
shl
add
or
inc
pop
jle
xor
out
or
aas
lock
or
das
cs
stc
push
fwait
pop
rdtsc
add
dec
push
(bad)
mov
lea
stc
jae
ret
jo
je
add
retf
inc
leave
test
pop
shl
jae
adc
js
pop
stos
pop
dec
aas
inc
and
rol
(bad)
mov
mov
adc
add
or
aam
or
ror
dec
adc
je
adc
inc
adc
adc
movs
inc
inc
mov
enter
or
pop
ror
ret
rcr
or
outs
test
aaa
imul
or
loopne
aad
or
sar
fld
ds
movs
loope
les
lahf
sbb
xlat
pop
loope
add
inc
movs
pop
outs
push
xchg
scas
(bad)
push
mov
and
inc
or
cmps
cmp
fild
sahf
xlat
lea
mov
movs
push
ds
inc
dec
fild
jle
pop
das
loope
adc
nop
or
sub
and
inc
pop
add
adc
mov
jmp
add
inc
add
ret
ror
shl
sbb
shl
dec
mov
inc
fcomip
push
dec
push
xchg
xchg
push
push
and
or
daa
test
inc
(bad)
fcomp
add
aaa
inc
scas
push
inc
sbb
loope
imul
ret
pop
add
jo
bound
dec
add
iret
icebp
popf
add
loopne
lods
mov
shl
or
pushf
and
push
add
push
push
pop
ror
lock
pop
pop
fsub
aad
out
pop
mov
pushf
sbb
movs
nop
adc
jnp
mov
out
das
sbb
pop
or
push
inc
mul
call
ds
add
inc
ret
or
inc
mov
mov
mov
shl
out
test
adc
push
xchg
sbb
lahf
fmul
inc
add
sub
loope
adc
fsubr
rol
sbb
dec
adc
mov
or
adc
sub
push
sahf
push
addr16
push
xchg
jle
int3
or
and
adc
addr16
wbinvd
scas
sub
ins
cmps
test
cmps
fcom
scas
add
xor
shr
xchg
inc
iret
pop
xor
dec
std
push
add
sbb
sub
cs
daa
inc
push
(bad)
adc
test
and
dec
gs
push
push
loopne
add
mov
jae
fdiv
add
sbb
mov
push
and
and
cmp
cmp
mov
fs
add
retf
mov
(bad)
enter
popw
pop
adc
shr
ficom
pop
mov
gs
add
or
call
sub
fsub
push
call
dec
add
xor
adc
jnp
popa
adc
in
push
xor
push
sti
jbe
cmp
push
pop
sahf
mov
jbe
pop
in
pop
cmps
outs
mov
icebp
push
adc
push
xor
das
pop
jno
ret
loopne
sub
test
add
inc
push
push
cmp
sbb
and
les
add
sub
cmp
or
push
add
lahf
xlat
xor
cmps
push
push
cmp
pop
imul
imul
mov
jnp
xchg
jno
mov
inc
call
pop
or
inc
pop
add
test
pop
nop
dec
out
aas
idiv
idiv
cmp
sbb
sbb
xchg
mov
jb
xchg
xor
or
cmp
push
inc
lods
pop
lds
jae
adc
inc
add
pop
inc
mov
nop
add
pop
test
scas
push
sbb
cmps
ror
or
das
adc
push
mov
dec
out
movs
adc
sub
pop
dec
lds
dec
aas
or
aaa
and
call
sbb
mov
mov
push
xchg
or
jnp
adc
mov
pop
push
or
call
add
sub
jns
and
xchg
xchg
arpl
loopne
aas
sbb
dec
loope
sbb
sbb
dec
jno
stc
cwde
test
and
sbb
sbb
fstp
das
or
mov
fsubr
test
sub
push
mov
push
sbb
(bad)
xor
mov
inc
sbb
sub
dec
and
(bad)
sub
mov
cmp
sub
mov
rcr
xchg
sub
inc
sub
hlt
sbb
add
dec
pavgb
xchg
adc
jno
xchg
sbb
pop
shr
inc
mov
cwde
pop
adc
and
adc
stos
cmovge
add
xor
xlat
mov
pop
cmp
dec
xlat
adc
pop
je
push
sub
fs
pop
imul
pushf
sbb
adc
inc
sub
push
sbb
push
sbb
(bad)
xor
push
xor
int
pop
pop
test
call
pushf
sub
push
push
mov
ret
sub
dec
leave
cmps
inc
icebp
push
cmps
inc
pop
mov
sub
test
and
inc
cmp
xchg
sbb
pop
movups
push
inc
sbb
daa
xchg
fcomp
mov
in
push
es
sub
pop
fcomp
jecxz
xchg
lock
jle
or
scas
and
mov
imul
adc
sbb
aas
jp
test
and
push
sbb
ss
jne
add
pop
arpl
cmp
dec
cmp
xor
aam
sbb
mov
and
mov
das
sbb
test
lock
and
data16
and
into
and
inc
test
jg
stos
loop
and
jecxz
and
push
mov
mov
test
and
add
add
dec
cmp
and
dec
enter
and
pusha
sub
cld
and
and
jecxz
mov
dec
and
jo
call
rcl
xchg
and
into
and
inc
xlat
inc
and
mov
push
and
fdivr
and
sbb
pop
and
jns
or
ror
sub
jp
loop
xlat
sub
mov
cmp
push
cmps
out
add
(bad)
out
push
loope
das
push
ins
sub
add
push
push
sub
sub
sub
push
inc
sub
in
fmul
jno
pop
add
or
inc
push
dec
cmp
inc
push
cmp
inc
movs
xor
dec
sar
loope
push
inc
inc
jb
ja
jae
aaa
lock
ror
(bad)
xchg
pushf
cmp
lods
xchg
jle
mov
jecxz
arpl
mov
out
ret
or
adc
and
adc
mov
push
xchg
xchg
xchg
mov
movaps
jne
es
bound
xchg
fdivr
daa
sub
dec
inc
outs
mov
sub
inc
aaa
sti
add
push
push
aam
jge
leave
cpuid
aaa
add
push
pop
cmp
xor
mov
push
sbb
imul
mov
xor
push
cmp
or
xor
das
aam
adc
xchg
or
or
add
sub
sbb
or
and
pusha
mov
sbb
loope
add
aaa
add
inc
xor
mov
sbb
aam
or
cmc
cmp
xchg
xlat
add
ret
shl
push
lds
and
imul
pusha
pop
add
sub
push
lods
cdq
rcr
fisttp
pop
and
inc
call
adc
and
(bad)
xor
adc
dec
popa
push
or
call
dec
add
or
jae
gs
adc
nop
mov
and
sub
jo
shl
xor
pop
enter
sub
add
sub
clc
and
mov
xchg
push
or
pusha
pushf
xlat
popf
and
jge
clc
shr
test
adc
push
push
shl
fld
(bad)
or
cmp
mov
add
add
jnp
loopne
pop
push
xor
stos
lods
add
sbb
in
mov
push
fstp
test
ins
sub
push
cmp
mov
inc
adc
adc
inc
fwait
ds
add
dec
loopne
push
adc
pop
adc
mov
cmps
pop
cs
jno
dec
movs
cmp
adc
sub
adc
test
outs
xchg
adc
aad
cs
daa
lock
sbb
cs
mov
loope
je
xlat
xor
pop
jne
xchg
xlat
pusha
das
sbb
out
int
xlat
cli
das
jmp
cmp
adc
cmps
fs
ficomp
test
sub
loopne
mov
popf
or
cmp
dec
inc
pop
sub
popf
xor
dec
cmp
je
xor
ficom
push
mov
push
mov
sysret
and
jae
stos
test
xlat
and
push
cmp
(bad)
retf
mov
mov
add
add
nop
sub
fldcw
add
sbb
sti
add
add
inc
mov
sbb
and
jle
js
(bad)
(bad)
or
add
daa
jno
cmp
xor
xor
jmp
mov
jns
addr16
add
adc
cmps
xor
sub
shl
xor
cmps
pop
push
cld
lea
mov
mov
xor
outs
mov
add
sbb
or
push
jo
or
shl
pop
pop
inc
add
cs
jp
cmp
outs
rcr
sbb
add
es
fidiv
push
mov
mov
shr
mov
and
push
xor
mov
xlat
das
pushf
xor
sbb
pop
das
lods
cwde
xchg
ss
das
sbb
test
nop
xor
inc
movs
mov
push
shr
and
xlat
ss
std
psllw
in
aaa
jo
xchg
aaa
mov
int
leave
psubusb
push
sahf
pushf
pushf
pushf
xchg
cmps
hlt
inc
cmp
dec
inc
ja
imul
and
loop
jb
dec
movs
cmp
jns
jb
stc
sbb
cmp
popf
stc
and
in
push
cmp
mov
push
jmp
xor
stos
popa
or
xor
fsubr
add
and
inc
xchg
pushf
xor
inc
pop
retf
out
rol
jbe
xor
xor
dec
add
xor
cwde
popf
bt
adc
mov
add
mov
jo
mov
movs
add
icebp
pop
mov
adc
xchg
lods
mov
je
pop
fwait
test
inc
xor
inc
xor
inc
xor
sbb
repnz
movs
fimul
sbb
lock
outs
push
inc
or
push
pop
ss
int3
movs
cvtdq2ps
add
inc
mov
push
ins
xor
cmc
sti
(bad)
mov
add
or
and
inc
imul
push
sbb
inc
push
cs
sti
ja
or
shr
sbb
daa
or
dec
mov
ret
or
or
daa
movs
mov
imul
or
jb
jecxz
add
das
xchg
nop
add
or
push
cmc
add
inc
and
jns
nop
add
dec
and
mov
rsqrtps
dec
adc
pop
nop
push
or
xor
add
icebp
test
das
sub
sbb
add
div
pop
mov
adc
cmp
shl
mov
lds
and
mov
push
rcr
mov
jne
enter
or
and
sbb
sub
pop
in
test
add
cmp
or
pop
lods
push
pop
addr16
jno
inc
retf
dec
aas
outs
je
push
imul
push
in
push
nop
add
inc
fbld
cmc
out
xchg
push
icebp
aaa
add
and
add
pop
add
push
faddp
neg
jnp
mov
xor
add
and
fadd
or
pop
in
scas
xor
add
mov
aas
inc
add
test
mov
sub
mov
mov
shr
movsx
cmps
push
mov
test
icebp
cmp
dec
inc
inc
inc
adc
pcmpgtd
(bad)
cmp
(bad)
(bad)
in
sub
xchg
syscall
bound
push
add
pop
add
sub
wbinvd
add
mov
push
mov
xchg
repz
push
cmps
inc
pop
sub
add
rcl
mov
cmp
test
imul
sahf
sti
push
push
sub
ins
ror
lds
adc
or
mov
adc
xchg
mov
add
xor
xor
retfw
xchg
setns
or
add
stos
shrd
test
lds
cmovb
push
mov
mov
cmps
pushf
jno
and
nop/reserved
inc
int3
push
and
stos
adc
pop
xchg
repnz
xor
rol
push
(bad)
add
push
nop
push
jo
pop
sub
mov
in
xchg
xchg
jp
inc
(bad)
in
mov
inc
push
fidivr
inc
push
loopne
daa
mov
movs
lahf
test
pop
in
inc
rcr
jo
add
mov
inc
cmp
mov
and
adc
add
dec
sub
clc
or
add
add
jge
pop
add
pop
inc
jae
push
pop
(bad)
mov
add
push
sbb
jnp
loopne
repnz
add
pop
aam
lds
cmp
test
pop
ins
test
dec
mov
dec
sub
push
inc
cmc
mov
pop
mov
in
loop
dec
xchg
dec
push
add
pop
imul
mov
mov
movs
rol
adc
push
push
xchg
mov
jns
and
adc
stos
adc
sbb
pop
movsx
into
dec
hlt
nop
dec
pop
cmovne
push
mov
pop
xchg
xor
gs
mov
mov
sub
adc
cmp
push
sbb
shl
xchg
fmul
leave
pop
inc
adc
shl
jae
add
pop
pcmpeqd
or
jl
rcr
push
add
fimul
movs
xor
or
add
mov
js
mov
mov
push
xor
or
push
inc
stos
out
push
dec
sbb
and
and
sub
dec
add
sbb
inc
inc
inc
jo
shr
push
inc
and
or
push
rcl
rol
popa
add
mov
xor
ret
add
adc
push
(bad)
xor
add
add
ror
adc
in
lea
sbb
or
pop
add
adc
bound
dec
xchg
add
movs
sbb
fadd
xor
dec
mov
call
inc
add
push
jo
hlt
adc
and
xor
adc
dec
pusha
fisttp
ret
cmp
scas
sbb
or
pop
gs
add
pop
or
add
(bad)
push
inc
or
and
adc
push
jo
into
and
xchg
and
fnstenv
push
and
xor
xchg
jmp
inc
and
sbb
idiv
xor
pop
add
jmp
add
adc
lock
(bad)
rol
mov
inc
or
adc
imul
sub
inc
test
fld
(bad)
jg
add
test
or
leave
adc
xchg
pop
shl
xlat
dec
pop
add
js
call
dec
add
push
jge
sbb
adc
addr16
loopne
fs
dec
sbb
sti
and
add
push
lock
push
aam
jl
mov
cmp
or
or
sbb
cdq
dec
xchg
mov
dec
pop
cmp
push
dec
add
shr
call
inc
or
jmp
and
and
call
mov
dec
aam
fisubr
sbb
push
jle
pop
push
in
push
mov
add
fs
nop
xlat
or
add
add
mov
mov
adc
cmp
xlat
pop
loopne
push
and
xchg
dec
cs
js
adc
shl
add
dec
repz
push
sub
ret
imul
jae
push
inc
add
xor
jg
push
push
pop
adc
cmps
(bad)
outs
inc
dec
inc
mov
sub
xchg
daa
jb
dec
sub
push
dec
add
ins
inc
xor
xchg
pop
cld
sbb
inc
jg
dec
bound
ins
mov
adc
lock
cmp
imul
les
fisttp
xor
sahf
adc
push
mov
dec
out
sbb
push
adc
add
js
add
pop
fsubr
nop
add
aaa
sbb
pop
dec
jnp
add
jnp
mov
outs
dec
jns
call
add
or
(bad)
pop
ror
sub
mov
jbe
ja
adc
add
jge
add
mov
stos
sub
push
fcmovb
add
vshufps
add
mov
bound
call
xor
sti
sub
loop
or
xlat
pop
or
dec
out
or
mov
scas
dec
loopne
test
push
mov
add
jecxz
fdivrp
add
mov
add
nop
fbstp
pop
push
mov
mov
movs
fild
jl
xchg
add
add
push
add
(bad)
inc
or
or
or
push
movups
adc
adc
push
pop
sbb
sbb
sbb
push
lock
in
aaa
test
and
and
iret
repz
mov
enter
sahf
out
ds
sbb
sahf
out
popa
jb
xchg
movs
out
sahf
out
(bad)
fsubr
cli
jns
out
or
push
sub
sahf
out
jno
xchg
movs
sahf
out
sahf
mov
rcr
in
sti
lods
clc
xor
cs
lock
in
jl
fcomp
inc
cmp
fsubr
xchg
das
and
cmp
inc
pop
in
shr
cmp
or
loopne
in
(bad)
and
inc
adc
push
and
outs
cmp
inc
xor
jb
lds
add
imul
mov
push
cmp
push
or
sub
ins
shl
mov
test
xor
ja
and
jmp
sbb
in
ins
pop
call
xchg
xchg
pop
jmp
sbb
xor
add
xlat
inc
xor
add
or
clc
into
and
or
xchg
(bad)
xor
inc
mov
or
sbb
jg
dec
outs
and
inc
adc
shl
out
pop
push
lock
fdivr
mov
pop
pop
inc
test
addr16
(bad)
jp
inc
pop
rol
pop
pop
add
mov
jne
and
xchg
xchg
mov
iret
push
or
inc
cmp
and
push
push
adc
mov
pop
adc
cmp
scas
dec
mov
cmp
lods
or
mov
push
cld
leave
pop
cmovge
mov
push
cmp
xchg
adc
mov
popa
xchg
or
pop
xchg
shr
adc
xor
push
pcmpgtb
cmp
shl
sbb
daa
sbb
das
test
xor
sub
inc
pop
push
xor
les
or
push
and
xor
mov
or
shr
xlat
sub
fs
cmps
in
adc
fild
inc
rcl
or
xchg
das
test
push
jb
add
add
leave
dec
sbb
iret
or
outs
mov
iret
dec
dec
sub
jae
je
mov
xchg
retf
mov
pop
pop
ret
aaa
adc
mov
fucomi
cmp
sbb
mov
dec
xor
and
pop
not
ja
or
int
das
add
add
out
pushf
push
sbb
imul
call
jne
cmp
je
mov
dec
call
sbb
pop
pop
mov
mov
addr16
and
and
xlat
sub
cld
and
mov
inc
push
push
pop
sbb
aaa
mov
mov
lahf
add
or
adc
add
add
dec
ret
shl
or
ds
and
loopne
sbb
cs
add
mul
mov
jo
and
push
adc
pop
out
dec
ins
cs
pop
mov
imul
mov
adc
xor
jns
in
cmps
push
fwait
lods
mov
into
fucomip
or
push
bnd
push
loopne
lods
push
pushf
inc
pop
pop
add
add
and
nop
or
mov
inc
push
or
cmp
fs
push
push
sbb
in
mov
jo
sbb
push
and
and
xor
inc
xor
test
fcom
adc
sahf
inc
fsubrp
ja
sub
inc
sahf
inc
sahf
pop
ins
dec
mov
iret
xor
aam
mov
mul
push
and
push
jno
ret
mov
aas
bound
imul
pop
pop
inc
test
dec
push
pop
add
push
add
out
pop
sub
(bad)
push
pop
rcr
les
inc
aaa
out
mov
pop
mov
ss
add
das
inc
add
out
pusha
out
push
dec
add
call
xchg
cmp
pop
ds
sahf
and
xor
xor
add
sub
jnp
push
aaa
inc
and
add
in
push
add
add
add
mov
pop
out
push
xor
(bad)
dec
xchg
inc
adc
fwait
add
and
aaa
mov
fild
pop
rol
ds
sbb
dec
add
add
sub
sub
push
add
push
pop
fsubr
mov
push
xchg
inc
add
jmp
sbb
(bad)
mov
inc
adc
pusha
push
ins
add
add
push
fcom
dec
mov
push
jbe
push
inc
neg
bound
in
inc
dec
mov
call
sub
add
sub
push
scas
sub
fiadd
scas
jae
cs
stos
mov
rcr
push
xchg
test
push
add
inc
test
sbb
arpl
add
hlt
dec
call
ja
mov
lock
mov
daa
in
sub
xchg
in
push
loopne
inc
mov
mov
mov
loope
rcr
pop
rol
sub
out
sbb
outs
and
outs
pmaxsw
adc
add
test
adc
imul
add
retf
test
test
or
bound
lar
in
push
pusha
inc
(bad)
mov
mov
loopne
mov
test
nop
rcl
and
ret
sbb
int3
sahf
add
rcl
add
mov
xor
fsubr
or
mov
fdivr
cmp
lods
and
ins
cmp
clc
add
adc
add
lods
sete
sbb
and
pusha
mov
sbb
lahf
sbb
or
outs
or
leave
mov
fbld
and
ffreep
pop
jb
sub
mov
(bad)
mov
add
nop
push
add
rcr
push
add
clc
(bad)
jle
mov
mov
mov
cmp
cmps
jge
pushf
arpl
jmp
bndldx
scas
lahf
inc
cld
xor
imul
pop
or
aas
loope
sub
int
cmp
cmp
jge
ficom
xor
mov
cmp
call
or
push
pop
xor
pop
adc
rol
adc
jnp
fst
xor
loop
mov
mov
pop
inc
sbb
adc
(bad)
jmp
or
aad
pop
pushw
or
out
pop
mov
in
push
or
xor
pop
and
ror
ja
sub
shl
fadd
add
(bad)
ja
add
(bad)
stos
aaa
js
mov
pop
in
mov
mov
popf
or
test
push
mov
xchg
mov
inc
mov
or
jbe
pop
adc
mov
adc
sub
pushf
xor
in
mov
cmp
lds
push
push
adc
or
mov
sbb
aas
loopne
cmps
push
mov
jnp
and
inc
mov
adc
pop
push
adc
dec
shl
dec
pusha
add
add
or
ror
sub
sbb
jmp
ficom
inc
sbb
sub
js
jmp
(bad)
inc
aas
into
push
inc
adc
push
jmp
or
add
push
es
mov
popa
xor
popa
rol
pop
inc
add
in
repz
out
test
jae
shl
mov
daa
fsubr
push
xchg
mov
jl
sub
pop
jmp
jmp
cmp
jne
mov
shl
push
mov
xor
int
rcr
add
cmp
inc
mov
inc
mov
mov
add
test
aam
push
inc
mov
dec
add
mov
mov
mov
adc
push
test
cld
fsubrp
push
push
push
mov
xor
mov
add
nop
inc
dec
or
mov
cmps
and
xchg
push
cmp
mov
movs
sbb
out
push
pop
or
fcom
test
or
adc
rol
fidiv
and
sar
add
cmp
mov
push
or
aas
mov
jne
retf
sub
push
daa
push
and
adc
and
movs
push
inc
fidiv
rcr
cmp
xor
and
loopne
adc
xchg
push
movs
lock
fmul
je
enter
xor
rcl
or
xchg
and
adc
push
add
cmp
stos
stos
mov
jne
inc
mov
jmp
mov
or
call
sbb
mov
inc
fs
sub
add
sbb
sub
sub
sbb
dec
je
stos
fs
add
or
ror
push
pop
cmp
(bad)
xchg
pop
popa
mov
mov
push
inc
lock
inc
sub
push
xor
sub
mov
mov
mov
pop
ret
or
dec
pop
dec
xchg
sar
cmps
mov
ret
or
inc
imul
outs
inc
mov
in
and
nop
xor
jg
xor
fdiv
popf
sbb
jecxz
and
xchg
cmp
pop
push
imul
pop
pop
ret
sahf
dec
aas
rcr
add
je
jns
bound
imul
bound
cs
int3
or
sub
pop
mov
sbb
aam
fnsave
push
adc
pop
cdq
jp
je
push
push
lods
int3
retf
imul
push
mov
invd
dec
mov
dec
cmc
push
or
(bad)
ja
add
and
add
arpl
push
cwde
push
movs
outs
cmp
ds
enter
scas
test
pop
nop
sbb
test
mov
pop
sbb
xor
outs
xchg
shl
xor
jo
(bad)
cmp
push
in
outs
add
js
fbld
shl
mov
jae
add
sbb
and
pop
cld
xor
mov
and
ret
pop
cmp
cmps
inc
test
shl
addr16
aas
add
jbe
or
jp
pusha
or
or
and
inc
gs
or
pop
jb
and
push
pop
jle
ret
jne
cdq
lock
gs
clc
pop
dec
mov
arpl
imul
repnz
(bad)
adc
adc
adc
sbb
inc
sbb
cmp
push
and
nop
mov
and
or
add
outs
int
inc
or
je
gs
cmp
add
aam
(bad)
sbb
sub
and
dec
pusha
sbb
stos
dec
rcr
jp
aas
mov
popa
daa
push
inc
or
movs
jno
sbb
ins
jae
dec
movs
adc
sub
sub
ror
xchg
sbb
pop
jo
out
inc
push
mov
xor
mov
xchg
(bad)
adc
test
push
jb
adc
nop
or
retf
fs
pop
dec
sbb
das
cmp
enter
mov
out
ds
jl
lea
pop
out
pshufw
and
and
sbb
jg
ret
ret
retf
mov
(bad)
and
and
sbb
pop
jae
push
xor
or
test
or
rol
push
cmp
push
(bad)
push
adc
loopne
sbb
inc
sbb
push
jns
dec
inc
sti
sub
push
xchg
nop
mov
sub
mov
(bad)
cmps
xor
cmps
lea
adc
add
or
sub
or
pushf
and
adc
adc
clc
xchg
sbb
pop
sub
mov
sbb
cmp
sub
jo
add
repz
jb
pop
aaa
out
pusha
aaa
call
jo
test
jae
and
aas
dec
pop
push
test
lods
(bad)
cmp
mov
mov
scas
sub
push
sbb
cmps
inc
xor
gs
add
in
das
ja
out
jp
test
call
inc
add
enter
pop
push
jb
lea
cmp
loopne
lea
add
or
or
cmp
sbb
mov
pop
int3
add
push
and
gs
aam
shr
adc
push
and
jbe
test
fmul
or
das
adc
sbb
jle
or
cmp
jmp
jle
jbe
xchg
fst
push
jbe
sbb
jne
push
test
jbe
add
pop
inc
loopne
test
sar
add
adc
dec
sub
push
inc
adc
dec
(bad)
data16
addr16
pop
or
test
xchg
xchg
sbb
data16
mov
std
fcom
repnz
aas
nop
adc
push
sub
mov
xchg
jl
inc
sbb
inc
inc
adc
out
inc
jmp
add
inc
inc
sub
sbb
and
sbb
sbb
adc
test
mov
add
adc
dec
mov
scas
or
pop
cmp
mov
pop
fist
adc
or
push
push
mov
xchg
daa
into
mov
sbb
loopne
push
in
push
pusha
and
call
xor
outs
addr16
dec
pop
repnz
js
adc
fs
or
sbb
inc
js
mov
out
jge
inc
jne
arpl
pop
movs
push
ins
jmp
pop
ret
cmc
and
popa
inc
test
or
mov
or
jb
cmp
sub
jns
sub
mov
push
jmp
and
sub
loope
adc
add
js
xchg
fcomp
cmp
ins
xor
adc
mov
mov
push
iret
or
loop
pop
cs
inc
mov
or
adc
and
outs
pop
adc
adc
xor
jno
mov
jle
outs
sbb
mov
fs
inc
dec
sbb
push
sbb
(bad)
rcr
inc
aaa
mov
test
sbb
or
inc
mov
inc
sub
inc
or
sub
pop
adc
ja
lock
jns
jnp
push
add
pop
shl
lock
add
or
adc
mov
mov
pop
adc
loop
dec
add
jns
sbb
add
add
sub
mov
adc
push
outs
push
div
adc
rol
pop
add
dec
test
dec
clc
loop
dec
push
mov
out
xchg
add
jg
sar
(bad)
fild
loope
cdq
cmp
ja
push
jle
dec
imul
jge
aaa
sti
sahf
test
push
inc
jge
outs
push
xor
sti
mov
jle
push
jge
rcl
xor
in
add
das
or
imul
mov
sub
cwde
lods
xchg
jmp
pop
mov
sub
xchg
cmp
mov
pop
test
xchg
and
sahf
outs
pop
sub
shl
mov
sub
push
mov
cld
dec
pop
fsub
fsubr
xchg
and
cmps
shl
ins
adc
pop
test
mov
scas
in
push
cmps
add
mov
cmps
sub
in
in
aas
pop
call
jne
push
nop
stc
movs
sub
in
cld
push
pushf
std
sub
jo
in
inc
mov
and
sbb
and
js
int3
shl
ins
mov
popa
(bad)
inc
add
and
(bad)
push
clc
pop
dec
adc
inc
pop
cmp
or
fndisi(8087
push
mov
je
cmp
inc
jae
add
add
sar
hlt
jle
mov
cld
sbb
jmp
jno
jle
sbb
push
mov
adc
inc
sar
icebp
test
lahf
outs
push
xor
and
sub
xor
sbb
cdq
icebp
xchg
cmp
and
cmp
nop
outs
add
inc
push
mov
add
mov
in
and
add
pop
pop
in
or
push
inc
push
xchg
sub
sbb
and
inc
faddp
inc
xchg
mov
mov
adc
scas
shl
push
adc
enter
or
lods
sbb
push
rol
inc
ins
jmp
call
cld
ret
sub
mov
or
out
ret
daa
add
pushf
shl
push
push
ins
test
mov
cmp
enter
dec
js
xchg
daa
fcom
nop
xor
(bad)
loopne
xor
cmps
inc
mov
xor
mov
jo
mov
sbb
mov
or
test
mov
lock
sub
mov
(bad)
in
pop
retf
pop
dec
pop
nop
pop
leave
shl
xchg
test
repnz
dec
dec
cwde
mov
aaa
sbb
shrd
and
mov
je
lahf
pop
punpckldq
mov
adc
xor
sbb
shl
pop
cs
or
das
and
jbe
mov
sub
loop
fcom
addr16
and
xchg
das
mov
pusha
mov
and
and
rep
movs
pop
icebp
aaa
xor
sub
pop
add
aaa
mov
push
jecxz
xor
pop
inc
add
xchg
add
retf
lods
or
js
xor
push
push
mov
add
push
add
cmps
daa
inc
enter
pop
call
fild
jo
xchg
fucomi
mov
push
jmp
lods
or
or
pop
(bad)
add
xor
mov
mov
add
sub
lahf
inc
cmps
jle
dec
js
aam
inc
mov
or
aad
sub
outs
add
std
cs
lods
add
nop
inc
inc
ins
inc
nop
jo
cmc
idiv
test
add
pop
mov
call
xlat
out
jl
adc
daa
das
xchg
sbb
pop
adc
or
add
add
mov
xchg
adc
dec
ja
jbe
and
sbb
sbb
lahf
call
mov
imul
adc
pop
rol
add
pushf
inc
mov
lock
mov
adc
jne
or
sub
dec
ret
xchg
or
push
cmp
imul
push
and
mov
leave
mov
xbegin
inc
aaa
push
outs
pop
mov
sbb
mov
cmc
jle
sub
adc
and
or
cwde
test
xchg
mov
add
shr
and
fucomip
movs
or
push
aam
js
sbb
and
adc
or
ret
sbb
loop
daa
lock
xchg
fld
sbb
mov
clc
mov
sub
mov
add
inc
cmp
cmp
pop
movs
or
cwde
push
xchg
fild
mov
mov
xor
(bad)
xchg
rol
test
jo
dec
or
add
mov
sbb
xor
call
cmp
xchg
add
int
inc
cmp
add
cmp
jl
sbb
lahf
js
test
xchg
push
xor
cmps
fiadd
test
xor
xchg
mov
test
cwde
inc
aam
dec
cmp
inc
mov
mov
xlat
push
push
or
and
sar
leave
das
or
test
mov
jecxz
mov
mov
test
add
lock
jge
or
and
jl
inc
push
cmp
xchg
push
inc
xor
cmps
add
dec
jne
mov
js
cs
jmp
inc
dec
jne
hlt
cwde
mov
push
mov
in
inc
xchg
adc
or
jo
ret
inc
loop
dec
std
sbb
mov
outs
jo
out
pop
sub
or
dec
retf
sbb
(bad)
push
iret
call
cmp
lock
pop
add
pusha
inc
add
pop
in
push
add
xchg
add
cmp
pop
push
mov
dec
xlat
xchg
xor
add
jl
jo
add
push
mov
push
add
adc
mov
imul
mov
rcr
push
out
push
aad
pop
and
loope
xchg
nop
push
stc
mov
sbb
or
adc
test
enter
add
aas
les
in
jle
mov
pop
or
jb
mov
dec
push
je
out
test
dec
and
in
sbb
or
ja
ror
cld
sub
push
sbb
inc
mov
and
les
and
xor
jmp
adc
push
or
ins
add
call
out
dec
push
lea
loopne
add
pop
pop
mov
inc
and
outs
xchg
jo
dec
inc
mov
std
imul
pop
repz
inc
dec
push
xchg
loope
push
daa
pop
pop
outs
fbld
sub
enter
pop
xlat
pop
or
push
sbb
inc
mov
les
or
inc
xchg
jbe
call
pop
jns
mov
popa
or
popa
inc
push
call
adc
or
bound
xchg
nop
sbb
push
fild
mov
mov
inc
mov
mov
aaa
shr
add
sub
inc
aas
sub
ret
scas
mov
dec
mov
push
outs
ret
mov
cld
or
arpl
inc
cs
adc
jno
mov
pusha
dec
sbb
movs
push
mov
sar
cld
adc
sbb
pop
inc
push
test
outs
sub
in
dec
lock
and
sti
daa
test
inc
adc
mov
mov
leave
push
or
sbb
push
ret
clc
or
mov
movs
sar
add
mov
or
cli
sbb
xor
dec
push
call
in
jge
xchg
in
mov
in
mov
dec
push
enter
loop
inc
and
in
fdiv
arpl
pop
loopne
jns
sub
ret
cs
or
inc
mov
dec
and
xabort
call
not
adc
inc
sub
dec
add
pop
sub
bound
cmp
pop
mov
push
xor
je
add
fist
js
inc
test
data16
sti
mov
out
push
mov
outs
lea
inc
loop
rep
and
rol
add
sar
add
clc
mov
add
jae
popa
push
fwait
xor
outs
fadd
jecxz
iret
je
xchg
mul
stos
lea
mov
fidiv
iret
adc
add
clc
xor
inc
adc
inc
sbb
(bad)
adc
sbb
dec
dec
mov
cmps
add
inc
jnp
add
mov
dec
adc
mov
js
add
fs
add
mov
into
(bad)
fbstp
arpl
or
jg
inc
dec
sub
mov
scas
add
xor
inc
cmp
lock
rcr
rol
sbb
jecxz
push
mov
push
in
adc
lea
push
add
xor
cmp
adc
or
dec
(bad)
aas
pusha
add
or
aas
clc
xor
push
sbb
lods
push
ins
and
sahf
or
fwait
rcl
xlat
push
lea
jl
add
sti
xchg
movs
add
aaa
adc
xchg
xor
dec
xor
sbb
test
inc
clc
dec
mov
add
ret
pop
add
push
jmp
fwait
test
adc
sar
(bad)
jmp
retf
or
xchg
jp
and
cdq
sahf
inc
clc
add
push
xchg
call
repz
std
push
push
ja
das
pop
cdq
push
loope
or
fimul
and
das
pop
sbb
les
in
pop
jbe
xor
or
imul
js
retf
pusha
jno
dec
outs
aas
sbb
pop
fs
xor
cmp
ins
mov
in
ins
je
bound
or
imul
cmp
xor
(bad)
sbb
and
nop
add
xchg
nop
add
adc
mov
outs
arpl
cld
clc
inc
cwde
imul
xor
xchg
aam
sbb
jmp
add
and
clc
sbb
xor
aaa
or
pop
jb
jmp
in
xchg
sbb
push
fwait
int3
jmp
mov
xlat
cs
push
xchg
xchg
dec
mov
pop
stos
fcom
sbb
test
mov
daa
pusha
ins
pop
fwait
or
inc
sbb
cmp
or
mov
adc
pop
jmp
jle
mov
idiv
rcl
add
add
sub
push
xrelease
xor
inc
movs
and
cmp
inc
sbb
inc
and
jecxz
in
inc
and
or
sub
sub
push
jmp
and
mov
sbb
adc
js
xchg
stos
sbb
dec
and
sub
dec
and
ja
push
xor
aad
ds
xor
add
add
lahf
and
lahf
push
sub
pop
popf
jo
out
or
push
into
out
out
aaa
sti
push
sahf
das
aas
push
or
push
pop
dec
sti
je
pop
lahf
das
psubsb
popf
daa
das
jns
test
dec
inc
mov
mov
pop
fdivr
sub
enter
pushf
dec
sub
adc
and
fcomp
sbb
xchg
pop
add
push
mov
adc
mov
pop
dec
pop
fsub
dec
cmp
and
mov
mov
hlt
jae
jl
daa
in
pushf
pop
test
lea
and
inc
dec
add
xchg
test
jne
nop
stc
in
fiadd
cmp
mov
jae
xchg
pushf
nop
inc
mov
int3
rcl
lds
cmp
fcomi
fcomip
inc
dec
dec
jb
pop
in
(bad)
xor
inc
movs
dec
inc
inc
(bad)
push
pop
adc
jne
xchg
jae
sub
lods
ret
mov
xor
lock
or
imul
xor
stos
(bad)
push
add
xor
dec
pop
ins
and
xchg
inc
lods
adc
cmp
sbb
push
dec
cmp
mov
and
shr
lea
adc
sbb
inc
push
cmp
inc
js
iret
ins
adc
push
dec
mov
or
mov
nop
add
add
pop
pop
jns
stos
mov
sub
pop
push
add
dec
pop
xchg
das
jecxz
pop
fcomi
mov
cmp
rcl
cmp
aas
adc
xor
nop
std
test
or
ins
push
mov
das
pop
mov
iret
or
or
xor
clc
mov
gs
sbb
mov
jge
mov
out
inc
add
mov
pop
and
pop
mov
pop
adc
xchg
mov
dec
movs
pop
ret
out
and
rcr
adc
xor
cmovp
popa
push
test
sub
js
fstp
(bad)
and
(bad)
xchg
mov
div
lahf
push
jmp
jge
mov
jmp
cs
into
jmp
xlat
xchg
xchg
inc
sub
or
and
pop
scas
sbb
push
xor
mov
mov
mov
sbb
push
int3
nop
pop
iret
rcr
mov
pop
test
push
dec
sbb
imul
addr16
fisttp
outs
adc
push
jo
fild
inc
(bad)
repnz
movs
dec
push
adc
and
push
ret
sbb
add
xchg
or
fcomp
push
cmp
and
inc
ds
dec
dec
and
shr
xor
mov
ds
sbb
(bad)
mov
or
jno
push
test
jo
pop
push
mov
fld
lds
dec
rol
sbb
outs
dec
test
add
les
xor
pop
call
jno
arpl
mov
icebp
cmp
movs
push
dec
ins
adc
pop
cld
jno
ja
inc
or
push
adc
add
mov
in
push
sub
or
jmp
ins
gs
add
jae
or
pop
stos
sub
inc
sbb
bound
xchg
xor
bound
and
fild
clc
dec
rcl
or
int3
clc
mov
pushf
xchg
inc
pop
and
sub
jo
mov
sub
push
in
push
jns
aas
and
test
fucomi
mov
jge
fwait
mov
hlt
add
in
gs
or
mov
xor
in
mov
in
jb
rcl
mov
in
mov
push
call
and
mov
mov
test
sub
mov
fisttp
xchg
or
add
cs
loope
add
xchg
add
xchg
test
xor
lahf
sbb
cmp
(bad)
icebp
out
mov
add
clc
test
add
nop
out
stos
inc
add
cmp
ret
nop
add
jmp
sub
xchg
cmp
arpl
mov
repnz
scas
nop
add
add
mov
int3
rcr
add
xchg
stos
out
sbb
pop
mov
aad
cwde
loope
lods
mov
jmp
ins
adc
mov
mov
lods
addr16
add
sub
mov
sbb
retf
adc
fmul
fs
jo
cmps
jge
lods
in
add
ins
mov
jo
cld
add
(bad)
sbb
and
cmp
xor
cmp
icebp
mov
cmc
lods
lock
inc
push
iret
adc
lock
fldenv
mov
adc
sub
xchg
add
inc
jmp
add
ss
xchg
dec
scas
adc
js
fs
mov
push
scas
add
pop
xchg
xchg
in
add
or
pop
jb
shr
cdq
movs
pandn
mov
or
add
adc
mov
add
scas
adc
ret
ret
pop
loope
sub
mov
sbb
pop
int3
loope
test
inc
push
or
add
xor
fisubr
dec
mov
push
call
outs
imul
(bad)
fild
add
rcr
pop
lock
and
xchg
scas
(bad)
xor
sbb
fld
daa
push
repz
nop
inc
scas
sbb
clc
stc
jp
pop
shl
mov
lock
ret
xlat
and
iret
bound
ja
xor
pop
lock
ss
dec
xor
addr16
mov
adc
cmp
sti
adc
jb
jmp
sub
cmp
mov
in
xor
dec
fstp
aad
(bad)
xor
out
dec
and
js
ins
push
test
mov
sub
mov
or
cdq
cmp
xor
jb
mov
or
js
mov
xor
adc
pushf
xor
push
pop
mov
push
popf
mov
mov
(bad)
nop
push
mov
and
or
xlat
mov
aaa
jo
movs
(bad)
into
hlt
(bad)
and
pushf
mov
hlt
test
je
sub
sbb
loope
mov
push
rol
and
dec
xor
lahf
in
fwait
sbb
xor
mov
sbb
add
test
sbb
aad
fimul
push
in
add
sub
std
mov
(bad)
fmul
or
test
div
or
jle
jnp
and
call
pop
push
add
sbb
pop
ret
push
mov
add
cmp
and
inc
cmp
(bad)
push
popa
push
cmp
mov
adc
loop
or
mov
outs
mov
dec
sbb
mov
out
scas
mov
mov
push
les
pushf
sbb
xchg
lock
retf
sub
mov
lea
jmp
inc
and
es
xchg
shl
add
lahf
ret
xchg
fisubr
push
and
jbe
aas
adc
ds
call
add
cmp
cmp
sub
mov
sub
sub
aas
loopne
inc
and
push
mov
int3
les
add
mov
imul
clc
xor
jmp
clc
adc
push
sbb
(bad)
jmp
mov
cli
pop
add
mov
adc
mov
enter
mov
loopne
arpl
shr
xlat
outs
adc
mov
push
sbb
add
shl
sbb
scas
sbb
lock
lods
(bad)
(bad)
lock
and
ins
mov
or
gs
add
cmp
sti
adc
iret
and
(bad)
clc
mov
mov
xchg
and
test
pop
(bad)
push
shr
add
out
dec
outs
into
cmp
pop
retf
les
pop
pop
retf
call
pusha
(bad)
cwde
or
pop
pop
daa
cmps
ds
mov
add
test
ret
pop
mov
jge
clc
ss
dec
loopne
sar
cmp
ja
mov
lock
jp
pop
ret
pop
pop
ret
or
loop
fild
sub
mov
(bad)
movzx
(bad)
mov
iret
inc
cmp
cmc
push
push
shl
jmp
movs
jmp
or
or
cmp
xor
cmp
je
push
cmp
add
or
test
inc
adc
arpl
inc
push
jl
mov
call
leave
inc
pop
jl
ret
xor
add
ins
adc
adc
out
mov
push
add
pusha
aaa
push
test
jmp
rcl
add
adc
push
xchg
das
xor
and
dec
inc
enter
aaa
sbb
sbb
dec
cdq
mov
xlat
xlat
sbb
sub
sbb
pusha
sub
cmp
cmp
pop
enter
test
dec
lds
cdq
jmp
add
ja
ins
add
xor
or
add
rcr
jg
or
ins
inc
push
mov
(bad)
movs
jb
bound
inc
or
xlat
adc
pop
je
mov
or
mov
push
and
pop
pop
pop
pop
(bad)
xchg
adc
add
adc
lock
push
shr
repz
add
fwait
pop
rcr
(bad)
dec
sub
xor
fmul
jnp
js
sbb
stos
sub
invd
mov
and
clc
mov
aaa
rcl
dec
test
dec
ror
daa
(bad)
and
movs
rcl
adc
mov
repz
push
xor
test
in
inc
ret
adc
mov
fwait
ret
mov
mov
and
test
mov
jo
ret
add
pop
ret
add
add
ja
add
mov
pop
jg
ret
or
clc
or
push
adc
mov
cmp
push
adc
test
and
movs
mov
inc
push
mov
mov
fcmovb
add
test
outs
daa
lds
sbb
xchg
xor
movs
and
and
jne
and
adc
lea
or
push
scas
xor
lds
inc
pop
lds
mov
aas
scas
and
jo
xlat
mov
pop
stos
push
xor
add
xor
daa
mov
clc
add
adc
and
pusha
aas
mov
or
mov
rol
mov
sub
out
xor
xor
xor
push
mov
mov
aam
mov
icebp
aad
push
sub
popa
enter
pop
add
pop
rcl
aam
repz
mov
inc
push
xchg
sbb
sbb
ja
leave
fist
ret
mov
shl
add
mov
jbe
xor
stos
rol
or
and
mov
add
retf
rcl
pop
xchg
add
and
pop
ins
and
sub
mov
cmp
sub
xor
mov
call
les
movs
or
stos
or
in
retf
retf
or
pop
sar
add
sbb
xor
sub
cmp
ret
das
sbb
lock
retf
jo
pusha
push
mov
fxch
pop
cmp
inc
hlt
mov
int
adc
sbb
popf
aaa
cmovb
js
int
add
push
mov
xchg
test
or
xchg
retf
pop
push
cmp
xor
dec
test
inc
or
ret
pop
nop
in
int
add
pop
ja
(bad)
xchg
or
or
mov
mov
mov
les
push
sbb
mov
xor
out
inc
xor
aaa
in
fcmovu
or
cmps
or
push
add
pop
pop
sbb
push
sar
jbe
push
dec
pop
in
xchg
xchg
add
(bad)
or
sbb
(bad)
leave
and
cmp
rol
jmp
dec
mov
inc
lods
mov
mov
push
adc
or
and
mov
fild
dec
inc
rol
or
(bad)
add
ss
jo
jmp
add
push
push
push
add
lahf
sbb
sbb
mov
fs
jne
popa
aaa
add
xchg
sub
inc
cdq
pop
pop
xor
ds
pusha
or
mov
xor
jmp
pop
aas
rol
les
das
add
cwde
mov
pop
mov
and
rol
cmc
popa
xor
sub
pop
push
push
jmp
fbld
cmp
imul
add
imul
and
xor
imul
adc
add
sub
or
movzx
or
mov
ret
(bad)
cmp
inc
cwde
cmp
cmp
push
jl
dec
and
loop
dec
sbb
not
fcomp
loopne
ja
sbb
dec
jb
cmp
movs
lods
outs
xchg
in
rol
pop
push
add
(bad)
fadd
mov
outs
cmp
test
fstp
or
ins
jl
nop
div
jbe
jle
cmp
jg
and
rcr
(bad)
adc
jl
add
mov
add
or
xchg
mov
fsub
or
scas
add
cwde
jl
dec
scas
fldcw
(bad)
pusha
or
sub
jge
fistp
add
fdivr
or
jae
jmp
pop
cmps
pusha
add
mov
sub
and
daa
pop
lock
cld
(bad)
push
inc
in
fbld
adc
cmp
shl
sbb
mov
shl
popa
or
lds
push
shl
test
or
sub
dec
mov
ja
and
cmp
inc
push
lea
jl
pop
pop
ret
mov
pop
and
add
xor
dec
inc
sbb
or
test
jae
jp
scas
ficom
nop
push
fld
ret
pop
or
pop
test
nop
cwde
pop
test
mov
nop
iret
nop
or
and
pop
dec
add
es
and
jb
out
mov
adc
xor
nop
nop
movsx
inc
daa
lods
mov
xchg
or
lods
or
enter
dec
mov
test
sbb
mov
pop
out
or
and
or
aad
pop
and
or
adc
iret
mov
inc
nop
sub
and
add
jg
aaa
and
and
call
mov
fsubr
mov
retf
or
ins
pop
mov
add
daa
push
xlat
sub
push
xchg
mov
sub
nop
(bad)
sbb
pop
add
rcr
xlat
pop
imul
xchg
jl
aaa
pop
mov
and
ja
inc
sub
cmp
gs
jbe
adc
je
rol
dec
push
sub
pushf
adc
push
fxch
and
dec
xlat
push
mov
(bad)
lods
sbb
push
push
(bad)
dec
xor
inc
cmp
adc
jmp
pop
sbb
mov
aas
add
cdq
sub
jb
cmp
fistp
fadd
fbstp
fdiv
fcomip
jns
sub
pusha
and
sbb
sub
mov
ret
out
adc
frstor
jb
dec
test
xlat
ret
adc
cmp
add
pop
mov
inc
or
and
jle
sbb
adc
call
sub
rol
dec
das
add
pop
loopne
xchg
pop
ret
push
add
sbb
and
add
push
add
push
mov
jle
or
xor
cmp
test
add
dec
or
xchg
mov
repnz
ins
mov
xchg
sub
adc
pop
(bad)
mov
pop
out
bound
or
or
ins
daa
pmaxub
mov
pop
pop
cmps
lods
add
ss
mov
loope
dec
rcl
sub
jmp
sar
sub
adc
inc
and
dec
dec
(bad)
adc
adc
test
add
dec
ins
xor
ret
and
addr16
inc
jmp
jbe
jl
add
inc
cmp
loopne
mov
out
fmul
push
pushw
aaa
mov
scas
fild
shl
hlt
push
add
mov
sub
ror
add
inc
lea
lock
popa
lods
sbb
dec
mov
push
jo
inc
mov
mov
sub
sub
xchg
fsub
inc
rol
inc
sub
or
jg
add
pop
mov
out
xor
pop
ret
daa
xchg
ja
add
ret
sar
add
gs
and
adc
xlat
push
push
repz
enter
add
das
inc
test
out
jecxz
fcom
add
pop
sub
scas
inc
cmc
sub
mov
clc
fld
aaa
xchg
add
inc
cmp
mov
imul
fisttp
adc
and
fld
das
xchg
mov
packsswb
jne
pop
in
pop
adc
pop
clc
mov
pop
loopne
shr
ins
loopne
cmp
adc
mov
or
xlat
outs
mov
aaa
pop
inc
cmp
xor
cmc
xor
xor
push
sbb
inc
xlat
aaa
mov
stc
enter
aaa
aas
pushf
sub
les
pop
xor
inc
add
xor
dec
enter
inc
add
pop
outs
aas
xchg
stos
in
add
xchg
adc
push
sub
inc
push
push
loopne
ret
pop
dec
call
xchg
push
call
fist
les
mov
sub
seta
inc
sbb
movs
mov
sbb
pop
rol
mov
or
scas
xchg
push
jne
or
das
movs
xor
je
(bad)
pop
inc
loope
push
xchg
xadd
sub
dec
jne
sbb
xor
stos
call
sub
es
sbb
fiadd
sbb
iret
call
sbb
dec
xchg
mov
sbb
sbb
xchg
jae
or
icebp
cmp
add
jp
imul
in
add
idiv
cmp
jne
(bad)
and
fiadd
je
dec
fsub
aas
inc
and
pop
cmp
inc
test
pop
jp
fadd
adc
clc
pop
xor
retf
mov
lea
xchg
ja
jo
mov
in
pop
jp
push
int3
leave
rol
cli
pop
inc
dec
xchg
dec
hlt
xor
add
mov
inc
nop
cmp
dec
jmp
sbb
jmp
stos
mov
pusha
stc
ret
mov
or
inc
cmp
stos
push
pop
push
sub
sbb
or
inc
adc
stos
test
cmp
stos
adc
jge
ins
(bad)
nop
rol
aad
in
inc
dec
cdq
push
cmc
push
aas
adc
push
ficomp
xchg
lock
enter
add
sub
add
lds
push
les
les
or
jge
push
dec
scas
and
lds
or
mov
pusha
xchg
add
mov
bnd
pop
popa
xor
bnd
add
or
(bad)
mov
xchg
xchg
sbb
mov
mov
jnp
cmps
ss
sbb
pop
test
test
fidivr
iret
push
int
dec
rol
xor
and
dec
pop
or
mov
add
jo
stos
mov
iret
inc
sti
(bad)
cld
add
adc
inc
test
das
daa
cmp
andps
sbb
inc
inc
sub
mov
scas
stos
jo
sbb
(bad)
movs
sub
push
pop
sub
and
jo
stos
sbb
int3
sub
add
lea
push
aad
sub
or
mov
shl
and
or
sbb
aam
leave
cmp
mov
add
xchg
pop
cwde
inc
pop
imul
and
outs
ins
imul
test
retf
outs
imul
jg
adc
lahf
loope
je
lahf
lahf
xor
pop
pusha
xor
lea
nop
adc
jae
or
xchg
sbb
adc
dec
cmp
lock
push
lock
add
daa
adc
inc
adc
mov
add
sbb
or
cli
mov
jae
loope
inc
or
pop
dec
sbb
pop
add
xchg
add
add
or
inc
and
fcomp
aam
cmps
mov
loope
pusha
imul
jo
repnz
mov
bound
sbb
and
mov
add
aas
in
cmp
add
pop
mov
dec
mov
inc
cmp
jmp
add
rcl
inc
nop
or
mov
jg
push
movs
sub
and
movd
sub
cmp
dec
push
add
aaa
push
cmp
add
and
shl
mov
sub
movs
sbb
xor
pop
test
add
outs
fmul
and
push
hlt
aad
fcom
fmul
mov
hlt
mov
js
inc
daa
push
hlt
cmp
in
ret
mov
xor
sbb
add
std
adc
fmul
aam
sti
nop
adc
add
aas
adc
mov
xlat
ficom
jmp
cmps
rol
jg
xor
sub
and
aas
dec
scas
pusha
inc
pop
xor
adc
movs
push
xlat
int3
pop
nop
bound
ins
pop
and
adc
add
add
imul
mov
rdpmc
sar
mov
pusha
mov
or
or
sbb
das
inc
clc
add
sub
ja
and
mov
push
pop
xchg
add
add
popa
push
pop
pushf
je
mov
xchg
das
js
mov
xor
xchg
(bad)
or
inc
sysenter
adc
out
sbb
pop
outs
dec
sbb
or
cmovne
mov
nop
scas
call
inc
inc
inc
inc
bound
push
pop
icebp
mov
mov
add
add
inc
xor
dec
push
jne
cmc
aaa
fsubr
jb
add
xchg
push
mov
add
pop
mov
and
dec
jle
add
dec
sti
cmp
jne
and
dec
or
mov
xor
mov
mov
inc
shl
sar
and
sbb
rol
adc
inc
add
les
fs
xchg
jmp
fld
push
add
test
add
xlat
pop
cdq
mov
add
sbb
jmp
xchg
frstor
jns
jno
movs
(bad)
repnz
adc
sub
or
mov
cdq
lock
inc
movs
push
and
aaa
jmp
dec
test
adc
pop
fsubr
rcl
xor
aaa
sbb
pop
ret
nop
push
xchg
pop
push
inc
jmp
jo
inc
xchg
push
dec
jle
pop
xor
inc
cld
mov
sbb
xor
dec
aas
out
push
inc
mov
hlt
sar
or
fadd
ret
xor
mov
sbb
aaa
mov
stos
ins
inc
and
out
jmp
inc
inc
aas
xor
(bad)
xor
fistp
fs
jmp
sbb
ins
aaa
mov
ret
or
inc
fst
mov
cmp
adc
mov
scas
pop
out
dec
adc
nop
inc
jno
jg
lea
and
loop
lds
adc
inc
xor
icebp
gs
mov
and
outs
loop
mov
cmp
and
les
dec
add
ret
pop
or
out
jo
icebp
hlt
push
push
jmp
add
lock
push
dec
mov
dec
inc
dec
jne
adc
clc
add
test
rcr
mov
mov
jecxz
push
mov
cwde
or
push
or
adc
push
mov
pop
sub
jecxz
outs
add
or
(bad)
or
retf
into
test
popa
jmp
xchg
hlt
in
test
hlt
pop
aaa
shr
daa
leave
xor
jae
loop
mov
jo
js
pop
js
iret
sbb
pop
mov
cmovnp
jle
jns
pushf
adc
or
out
jne
popa
pop
jl
(bad)
and
jmp
or
push
inc
jle
inc
or
xor
or
sbb
push
(bad)
imul
jle
jg
ror
mov
xchg
and
adc
into
dec
cmps
push
neg
mov
adc
adc
mov
sub
lock
pusha
ss
pop
dec
jecxz
jns
cmp
mov
ins
pusha
xor
mov
or
pop
mov
imul
es
add
ret
push
add
sub
outs
add
and
ja
fmul
adc
ret
pusha
ss
cmp
add
add
add
add
sub
enter
mov
xchg
sar
add
mov
or
jae
aam
(bad)
in
test
pop
aad
popa
or
inc
and
pop
scas
ins
lock
and
and
cmp
(bad)
xor
ror
les
push
inc
or
push
dec
rcl
xor
test
xchg
or
(bad)
lock
push
sahf
inc
or
sub
(bad)
shr
call
add
add
adc
sti
mov
scas
mov
data16
sub
add
ror
ds
repz
add
xchg
cs
xchg
fisub
jge
mov
pop
push
xchg
mov
jnp
arpl
(bad)
mov
xchg
xchg
not
add
or
fistp
mov
fadd
push
dec
add
inc
sbb
jmp
add
fiadd
loop
add
jae
cmp
mov
or
add
add
test
fadd
or
inc
call
xor
cmp
or
pop
jnp
pop
xor
mov
mov
jmp
pushf
add
add
test
inc
cld
daa
loopne
in
pusha
test
je
mov
and
enter
xchg
dec
or
rcr
gs
add
es
cmp
jb
lock
fisttp
daa
mov
and
adc
popf
jne
push
mov
add
clc
pop
mov
and
add
lahf
vmwrite
inc
out
add
out
adc
call
je
add
xchg
mov
add
jmp
mov
adc
inc
cmp
and
or
mov
nop
daa
jns
test
pop
and
mov
add
and
loopne
cwde
and
in
aam
aam
daa
push
pop
call
in
push
call
add
mov
xchg
inc
pop
sub
mov
imul
inc
cmp
aam
aam
inc
cmc
es
add
push
xor
call
cwde
xchg
and
add
enter
sub
push
push
jno
fwait
mov
push
aam
inc
mov
fcmovne
ja
aam
lds
pop
pop
adc
xor
and
push
xlat
xchg
mov
push
xor
push
daa
loopne
cmps
inc
aaa
jle
or
div
mov
and
push
jb
and
mov
push
mov
sub
dec
inc
test
adc
push
adc
pop
bound
out
lods
adc
out
add
addr16
and
pop
mov
xor
mov
jp
dec
pop
retf
daa
and
add
push
das
and
stos
popf
xor
clc
test
jno
shl
add
test
int3
shl
mov
or
pop
inc
sbb
loope
jo
xchg
inc
cmp
imul
sar
xchg
mov
cli
dec
add
or
inc
dec
jne
pop
or
loope
mov
je
es
retf
pushf
xchg
stc
cmp
push
test
jo
pop
(bad)
mov
mov
adc
pop
add
add
sbb
adc
aas
inc
test
add
call
inc
or
das
test
test
or
add
xor
mov
in
lds
adc
mov
add
aas
xor
or
dec
out
pop
in
lea
out
ins
jne
lahf
jl
mov
sbb
inc
mov
push
(bad)
pop
adc
aas
xchg
and
and
dec
aaa
mov
ss
pop
fistp
mov
adc
push
imul
sbb
jg
xchg
inc
xor
mov
fsub
adc
sub
push
test
sub
daa
or
push
pop
das
or
pop
push
inc
es
daa
test
inc
add
sti
adc
cli
or
or
add
lods
mov
push
xor
mov
push
and
ja
test
sub
repnz
test
sbb
mov
push
in
sbb
and
dec
dec
test
inc
cmp
and
xor
jg
loopne
push
add
jae
cmovae
es
arpl
adc
xlat
sub
fnsave
xor
jno
jae
js
add
enter
dec
retf
sub
outs
push
popa
or
(bad)
sar
add
mov
push
popa
mov
jb
xlat
adc
adc
popa
and
push
cmp
call
push
cli
aam
xchg
pop
add
or
sbb
xor
cli
inc
data16
sub
push
or
sar
adc
add
and
mov
mov
daa
ss
data16
leave
xlat
ja
jg
pop
dec
in
sub
ret
nop
outs
lahf
jl
js
adc
sbb
pusha
xchg
add
mov
xlat
outs
add
xchg
jno
xor
xchg
push
cmps
pop
dec
lds
and
mov
xchg
loop
add
cmp
adc
and
mov
imul
test
add
cwde
popa
add
sbb
add
pcmpeqw
sbb
jge
sahf
jo
or
sub
jl
or
mov
sbb
adc
aad
dec
cmp
mov
inc
adc
gs
push
ins
je
std
rcl
xchg
inc
or
xchg
xor
aaa
adc
mov
mov
test
retf
mov
push
ret
cmp
sub
and
mov
inc
xchg
loope
sub
stos
and
test
xor
xchg
push
frstor
adc
inc
cmps
push
push
pop
retf
add
sub
push
aas
jb
xor
cmp
je
xchg
mov
cmp
sbb
test
and
add
sub
pop
sbb
mov
sbb
je
mov
arpl
nop
jecxz
jbe
mov
mov
test
adc
out
add
out
mov
(bad)
rcr
jns
xchg
cmp
(bad)
jnp
or
jb
or
jp
pusha
lahf
nop
sti
push
adc
add
xchg
push
pusha
or
cwde
adc
adc
mov
setle
push
push
and
stos
outs
sbb
mov
xor
call
sbb
fbld
inc
cwde
xchg
test
lahf
popa
lahf
and
mov
mov
rol
lods
les
imul
rcl
imul
sub
outs
xor
fadd
les
xchg
cmp
push
adc
nop
aaa
inc
inc
xor
imul
xor
jo
sbb
aas
pop
loope
adc
enter
jo
sbb
sbb
or
stos
ss
adc
cmp
jle
cmp
add
(bad)
and
jb
push
add
and
or
lock
add
cmp
inc
adc
inc
inc
test
clc
sbb
js
(bad)
sub
loop
xor
and
mov
icebp
mov
sbb
les
loop
pop
mov
(bad)
mov
add
add
or
jne
lock
inc
pop
sbb
sbb
stc
sbb
and
mov
jb
fisubr
pop
loop
sub
stc
sbb
movs
fnstcw
test
fsubr
pop
adc
mov
test
lock
dec
adc
dec
sbb
in
lds
cmps
les
push
call
jmp
aas
jecxz
add
add
jmp
arpl
mov
inc
push
pop
pop
xlat
pandn
jecxz
arpl
sub
lds
stos
push
adc
fsub
sti
pop
int3
or
push
push
pop
adc
in
fisttp
jo
xor
call
ror
mov
pop
(bad)
in
push
div
add
sbb
push
mov
sbb
push
mov
jno
sub
or
push
outs
mov
jne
xor
push
shl
cwde
or
das
push
ds
jno
xchg
mov
add
cmp
ins
lock
xchg
mov
call
or
(bad)
sbb
mov
aam
xor
xchg
mov
or
rcr
(bad)
jg
jg
inc
sub
jne
add
or
lods
jne
dec
mov
mov
or
mov
pop
lock
and
cld
xchg
jo
ror
call
stc
or
aaa
add
xchg
sbb
pop
call
mov
bound
fadd
out
and
es
adc
mov
lds
cmps
dec
rol
std
jl
movs
xor
add
sti
push
or
test
push
pop
sub
push
push
jb
dec
cld
aas
ins
out
add
push
xlat
(bad)
in
add
aad
mov
daa
mov
jl
adc
loope
or
and
dec
add
imul
fsub
mov
ins
call
mov
or
push
stc
(bad)
(bad)
leave
inc
pop
sbb
(bad)
aam
dec
sbb
fistp
add
mov
add
push
cmp
add
mov
dec
movzx
add
aad
sub
ror
pop
xchg
movzx
scas
mov
rol
add
sub
mov
js
dec
mov
mov
aaa
aas
dec
push
outs
sbb
es
dec
push
mov
(bad)
pushf
push
sub
add
and
mov
mov
jg
dec
dec
sbb
ret
popa
es
jge
pop
pop
dec
jp
data16
jge
(bad)
pop
or
cmp
sbb
aaa
jmp
push
and
into
push
or
dec
addr16
cmp
rcl
cmp
mov
dec
or
dec
pop
movs
sub
pop
bound
or
inc
pop
mov
mov
fist
js
and
and
mov
inc
pop
mov
cmp
pop
sub
sub
mov
je
mov
shl
xchg
jg
cmp
and
or
cwde
ds
in
cmp
sbb
and
fist
adc
jp
dec
xor
xchg
mov
ret
ficom
lea
sub
(bad)
fild
push
jne
push
adc
(bad)
call
fnstenv
shl
mov
dec
fadd
inc
test
or
cs
in
mov
leave
int
loop
mov
pop
add
fcom
cmp
and
in
das
jmp
out
and
in
daa
and
adc
sbb
mov
xlat
xchg
sar
mov
xor
aam
lock
mov
cmp
jge
js
mov
jmp
dec
jnp
add
inc
ret
popa
enter
and
mov
fistp
add
sar
add
or
mov
sub
adc
push
hlt
or
jg
cmp
xor
icebp
ret
mov
inc
hlt
je
mov
jl
cmp
(bad)
push
adc
sbb
mov
adc
or
adc
dec
inc
mov
test
inc
xor
outs
es
les
fs
out
jg
fsub
mov
popf
shl
jmp
ret
adc
ss
cld
cmp
adc
ret
pop
add
sub
aas
ficom
ret
pop
nop
(bad)
ror
cs
sbb
aas
daa
sub
adc
adc
loop
or
inc
sbb
jne
mov
dec
and
test
adc
sub
mov
add
shr
xor
jb
sbb
and
mov
mov
das
inc
movs
ret
inc
test
retf
fdivr
mov
push
pop
pop
outs
sbb
push
dec
scas
dec
dec
and
ja
imul
lock
mov
add
pop
sbb
pop
lea
clc
adc
xchg
jp
sub
das
scas
clc
dec
test
or
or
push
cmp
sbb
out
or
push
mov
and
in
mov
outs
retf
and
js
and
sub
jecxz
sbb
cwde
das
or
inc
add
test
mov
test
sbb
or
jns
xor
cmp
push
jecxz
lods
xchg
js
push
ss
imul
add
or
xchg
pop
loope
movs
push
daa
pop
sbb
call
adc
push
add
sub
xor
popf
xor
adc
or
popa
mov
xchg
mov
mov
rol
adc
sub
mul
inc
loop
mov
or
adc
push
and
dec
jne
std
and
mov
push
das
push
adc
inc
push
pop
mov
das
cmp
out
into
mov
sbb
clc
xor
jnp
sbb
sbb
jo
xchg
sbb
mov
fadd
add
ds
movs
xchg
add
ret
add
enter
stos
iret
push
cmc
push
fadd
nop
pop
push
sbb
sbb
les
test
cmp
loopne
jl
xchg
lea
scas
pop
shr
mov
arpl
jp
scas
dec
mov
sbb
bound
(bad)
adc
aas
xchg
sub
push
retf
xchg
jp
jmp
(bad)
mov
adc
mov
add
add
test
test
cmp
xlat
out
mov
in
rol
push
mov
sbb
push
loop
(bad)
sbb
pop
test
inc
arpl
sub
sbb
loope
(bad)
cld
add
sti
repz
adc
push
fadd
xor
mov
xlat
out
jp
jge
inc
add
stos
adc
aas
outs
in
imul
dec
push
aaa
sub
add
ret
dec
sub
xchg
sub
test
aaa
push
add
movs
fdivr
sub
and
clc
push
sub
nop
push
mov
neg
sbb
add
adc
pushf
and
push
leave
mov
sbb
cmp
add
sbb
cmps
inc
and
fisttp
dec
or
and
or
neg
xchg
sbb
xchg
and
hlt
in
add
rol
rcl
pop
inc
loopne
xchg
(bad)
dec
(bad)
push
jl
and
ror
jge
or
inc
inc
test
loope
out
leave
and
sbb
nop
inc
wrmsr
ja
lea
call
das
fisttp
jge
fldenv
push
push
push
xchg
scas
inc
addr16
xor
add
adc
and
je
mov
(bad)
adc
daa
and
in
adc
inc
xchg
inc
add
push
mov
aaa
mov
jmp
outs
fistp
xor
fucomip
lsl
test
inc
sub
sti
jg
and
and
and
movs
lahf
xchg
fidivr
sub
inc
test
jne
mov
daa
push
mov
xor
or
jo
or
or
dec
in
shl
push
sub
sub
ret
xor
xchg
xchg
jge
pop
mov
sub
xor
jae
cmp
retf
scas
push
leave
xchg
clc
add
daa
adc
or
es
add
adc
mov
js
out
pop
pop
and
das
xor
pause
mov
xor
sub
sub
daa
sbb
adc
loop
rdmsr
pop
bound
test
xchg
jg
pop
or
std
and
mov
mov
xor
call
inc
call
or
add
popa
div
adc
dec
outs
xor
adc
adc
xadd
mov
jg
push
test
aaa
rol
xor
call
pop
mov
jle
mov
xchg
pop
xchg
loopne
jle
push
pusha
pop
les
in
pop
int
cmp
adc
push
push
adc
xchg
in
ret
add
inc
add
fadd
xor
fucomp
adc
loop
jae
sbb
jp
adc
iret
pop
inc
dec
cmp
dec
sub
pop
jbe
sub
imul
xlat
push
inc
sbb
jae
inc
and
xor
and
sub
js
or
sbb
fstp
mov
inc
jbe
adc
call
cmp
cld
ret
nop
clc
add
cmp
iret
and
and
push
push
pop
dec
lock
inc
cs
or
or
cmp
(bad)
inc
and
xor
(bad)
and
in
inc
pop
and
and
dec
sub
das
mov
adc
scas
jmp
rcl
and
add
(bad)
push
mov
xor
sub
or
jle
retf
ror
or
(bad)
out
push
adc
inc
push
and
aaa
test
adc
(bad)
daa
sub
in
adc
adc
(bad)
lahf
aaa
add
(bad)
xor
mov
adc
and
push
mov
lods
dec
mov
out
push
xor
pop
jg
xchg
add
fistp
or
bound
add
add
loope
in
add
add
out
shl
loop
icebp
push
mov
das
fwait
pop
add
neg
xchg
adc
test
ret
xor
test
jbe
sbb
mov
sbb
movs
push
loopne
cld
neg
and
jmp
in
xlat
in
push
mov
cmps
or
add
rcr
jne
aaa
cwde
mov
in
jnp
rol
mov
jg
fadd
jecxz
sub
sub
xchg
fild
stos
push
ja
sub
jg
leave
add
xchg
sbb
cmp
sub
sub
sahf
cmp
int3
sub
add
call
ror
add
cmp
add
lds
sub
sub
xlat
xchg
test
mov
and
dec
pop
xor
cmp
cld
aaa
xor
mov
inc
xor
xor
cmp
dec
inc
add
sti
cmp
mov
or
mov
push
push
and
mov
sti
push
dec
adc
or
dec
ret
mov
cmp
pop
sbb
add
pop
scas
and
pop
ret
ds
mov
push
cmp
scas
dec
sub
ret
mov
les
sub
push
daa
push
ins
js
lock
sub
test
pop
popf
push
sbb
loop
cmp
popa
add
dec
fdivr
push
loop
(bad)
mov
xchg
dec
jne
add
add
jne
nop
push
xchg
xor
push
mov
das
add
jo
out
das
mov
ins
push
cmps
movs
clc
push
dec
adc
lock
add
pop
mov
pop
pop
mov
or
imul
bound
push
mov
sbb
fs
or
adc
gs
dec
addr16
movs
push
ins
repz
sub
inc
add
pop
add
(bad)
shr
mov
xchg
add
xor
leave
fld
nop
das
pop
adc
inc
pop
adc
and
shrd
jg
scas
mov
inc
pop
aas
outs
scas
inc
cmp
cmp
addr16
jge
xor
test
outs
inc
sahf
cs
sbb
cmp
fs
pop
test
xchg
jmp
or
push
mov
sub
pusha
cmp
xchg
movs
punpcklwd
jns
pop
sub
cmp
add
inc
sbb
sahf
add
shl
mov
push
cmp
inc
loopne
cmp
push
das
retf
dec
mov
ret
scas
rcl
inc
cwde
ss
push
js
xchg
push
mov
inc
push
xchg
movs
out
rol
dec
push
pop
xchg
ret
subps
inc
pop
mov
push
and
inc
cdq
cmp
jno
inc
cmp
stos
retf
xchg
xchg
fnstcw
leave
add
movlps
xchg
xchg
xchg
mov
loope
dec
in
leave
leave
jge
out
dec
xor
in
jae
add
jb
jb
bound
sbb
dec
push
jns
loop
or
movq
jl
in
(bad)
mov
fimul
add
dec
hlt
or
sub
add
mov
push
inc
or
aaa
int
fs
dec
or
jne
lods
pop
and
daa
icebp
cwde
or
pop
xor
ins
jno
push
aaa
jne
cs
push
sbb
rcl
shr
fs
pop
push
nop
or
mov
jne
and
push
sbb
xchg
jne
xchg
movs
add
movs
pop
sub
mov
pop
sub
jne
adc
inc
cmp
add
nop
sub
dec
jne
adc
adc
xor
adc
les
adc
xchg
mov
add
adc
mov
jns
add
mov
pop
mov
shl
inc
mov
xchg
mov
inc
pop
jno
mov
add
mov
pop
sbb
jecxz
imul
les
mov
xchg
loopne
je
dec
mov
xchg
movs
pop
cmp
sub
daa
dec
cmps
sbb
mov
push
mov
push
test
gs
push
or
cs
int
push
adc
mov
dec
ins
push
popf
iret
add
add
cs
xchg
pop
and
inc
in
cs
pop
scas
fs
jo
in
and
xor
sub
add
push
xor
adc
cmps
push
pushf
repz
out
dec
dec
pop
mov
jge
neg
fimul
daa
(bad)
sub
pusha
stos
mov
(bad)
sub
sbb
cdq
loope
inc
shr
push
jbe
mov
push
pop
xor
pop
adc
aas
les
addr16
icebp
sub
lods
pop
popa
push
lods
xchg
add
mov
aam
add
push
call
pop
lods
pop
pop
adc
jns
aas
rcl
add
aas
pop
daa
call
and
in
mov
mov
aas
xlat
mov
push
mov
mov
retf
push
rcl
or
ss
xlat
mov
mov
call
xor
lock
call
dec
sbb
sub
push
ins
mov
enter
push
or
leave
mov
jb
jb
cmp
xchg
sar
cmp
jns
push
sub
pushf
mov
cli
das
push
jp
dec
dec
inc
sahf
add
jnp
daa
and
iret
push
pop
cmp
daa
daa
daa
daa
popf
sar
cmp
aas
(bad)
(bad)
stc
mov
cmp
addr16
dec
stos
mov
loope
es
mov
mov
enter
or
dec
pusha
or
xchg
push
sub
and
xor
add
(bad)
sbb
jbe
mov
adc
mov
cmp
(bad)
aam
inc
test
icebp
xchg
adc
adc
(bad)
xor
and
mov
(bad)
or
rol
fwait
and
pop
mov
pop
in
jb
(bad)
lods
pop
xchg
cmp
lods
pop
jl
mov
mov
mov
add
vprotd
pop
lods
pop
push
inc
add
sbb
jg
pop
repnz
lods
pop
inc
test
xchg
push
(bad)
imul
(bad)
mov
pusha
shr
jge
add
std
data16
sbb
adc
mov
lods
sub
popf
call
sub
ins
jns
pop
push
mov
push
push
cmp
mov
cmp
sub
test
sahf
pop
cmc
adc
or
inc
and
je
sub
push
inc
cmp
sar
inc
add
push
and
add
cmp
nop
cli
(bad)
add
dec
lds
jecxz
add
int3
adc
lock
push
fiadd
xchg
ret
cmp
inc
call
ins
adc
int3
or
les
mov
add
add
push
mov
mov
arpl
fcomp
mov
hlt
call
xchg
int3
sub
mov
sub
add
adc
lea
loopne
inc
add
lea
adc
pop
cmp
add
xchg
fdivr
add
cmp
dec
add
push
out
push
dec
sbb
pop
adc
or
es
movs
jne
addr16
test
or
adc
pop
arpl
jae
or
xchg
test
push
add
ds
xchg
aas
inc
cmps
push
imul
mov
pop
inc
jle
adc
jne
add
xor
cmps
inc
xor
aaa
add
dec
dec
addr16
add
and
repz
imul
je
les
popa
cmps
test
(bad)
xor
je
addr16
add
mov
cmp
jg
psubsb
jo
addr16
dec
push
cdq
mov
cld
jns
add
call
adc
rcr
adc
popa
dec
stos
xchg
mov
mov
add
shl
pop
sbb
cmps
lock
dec
xor
(bad)
mov
retf
ja
push
dec
scas
lods
push
mov
cmp
je
shl
inc
and
pop
fs
fsub
cmps
xor
cmp
pop
fs
scas
mov
fs
aam
sbb
add
loopne
scas
daa
push
cmp
pop
shl
inc
fmul
sbb
push
fmul
dec
adc
sub
cmp
fmul
bound
lock
adc
lods
inc
cwde
addr16
inc
xchg
jo
(bad)
pusha
pop
mov
enter
sub
(bad)
addr16
push
push
push
dec
xor
ror
cwde
data16
fld
mov
or
cld
pop
idiv
repz
pop
lea
push
push
push
pop
fs
jge
in
add
addr16
or
push
cmp
and
sar
scas
mov
push
dec
fs
lsl
add
cmc
xor
pusha
ret
sub
mov
neg
or
mov
adc
shl
bound
movs
ret
or
jmp
lock
bound
jmp
inc
fidiv
dec
mov
add
fild
xchg
and
ds
xchg
sbb
or
fs
mov
add
ins
lds
xor
xor
and
inc
push
adc
inc
jae
pop
and
push
int3
add
sbb
xor
cmp
or
loope
outs
mov
dec
push
daa
mov
push
push
jmp
js
mov
stos
imul
jnp
les
cmps
and
or
add
mov
push
les
lock
pusha
cmps
daa
pcmpgtw
inc
mov
xchg
push
add
adc
dec
or
sbb
pop
or
xchg
or
adc
cmps
out
or
jnp
dec
and
push
or
adc
shl
cmp
push
add
xor
jb
cmp
mov
push
repnz
sub
add
das
pop
push
or
inc
mov
clc
call
push
inc
and
and
jno
jmp
dec
gs
ins
mul
inc
das
jl
adc
add
out
mov
in
or
and
mov
sub
out
push
jbe
fisub
loopne
outs
push
add
scas
mov
imul
ins
cmovbe
movnti
push
dec
jl
or
mov
jp
jb
xor
push
ins
ins
xchg
xor
fcmovb
xchg
daa
add
mov
add
shl
pusha
mov
adc
inc
add
adc
mov
add
push
and
lock
mov
xchg
dec
dec
pop
push
add
adc
or
pop
and
push
movs
xchg
pop
or
add
add
or
adc
add
mov
fstp
add
pop
icebp
pop
sti
push
sbb
jb
push
outs
das
cmp
and
mov
lds
(bad)
out
jo
std
push
nop
xchg
pop
pushw
test
frstor
sbb
unpcklps
xor
bound
add
cmc
dec
push
adc
add
sbb
mov
push
push
inc
cmp
mov
xor
fs
mov
outs
mov
mov
add
jle
outs
pop
mov
data16
xchg
xorps
push
fimul
enter
(bad)
sub
pop
xchg
das
or
and
pop
loop
sub
and
js
es
push
adc
jbe
ret
loop
xchg
retf
imul
xchg
ins
jo
jns
add
pop
test
jo
mov
outs
jb
or
add
jno
adc
sbb
pop
pusha
inc
je
mov
bound
inc
pushf
cmp
lds
push
cmps
enter
mov
pop
shr
fisubr
push
mov
xor
cmp
fadd
movs
in
jo
dec
mov
outs
sbb
sar
enter
jo
fldcw
sbb
and
push
mov
loope
sub
add
adc
adc
fsub
or
in
or
mov
or
xor
pop
push
loopne
cmp
mov
aam
lods
call
xchg
cdq
pop
clc
js
push
push
lock
or
xor
cmp
ds
add
jns
bswap
sub
inc
stc
sbb
sar
sub
idiv
jmp
push
cld
cmp
mov
dec
mov
jae
push
shl
push
dec
rol
or
ror
or
mov
ins
sbb
in
lods
sbb
pop
and
mov
mov
icebp
xor
and
mov
ret
jnp
popa
jno
cs
aad
xor
cdq
cli
dec
or
add
push
es
and
adc
dec
lds
jae
ins
ins
imul
dec
push
or
add
or
movs
cdq
pop
leave
jmp
mov
mul
adc
cwde
mov
push
lock
pop
je
popf
sub
movhps
push
bound
ffreep
dec
add
push
or
int
xchg
test
adc
stos
push
out
je
cwde
leave
or
jne
int3
das
bnd
jae
sbb
cmp
fwait
pop
aam
fdivr
push
cmc
push
cmp
out
call
xchg
push
sub
outs
jne
mov
push
xor
pop
xchg
jne
call
xchg
jne
bound
cmp
retf
pop
or
movs
loopne
dec
popf
and
fld
ret
push
add
fbld
das
xchg
es
das
mov
adc
aam
ja
dec
and
pushf
pop
sahf
mov
sbb
fistp
add
arpl
inc
pushf
daa
add
dec
or
addps
add
cli
shl
int3
jle
in
or
jnp
cmp
je
setb
(bad)
les
jb
js
cmp
push
xor
popf
add
dec
gs
fisttp
push
add
test
cld
in
fwait
std
pusha
js
xor
add
adc
add
fist
pushf
jge
pop
add
and
sub
inc
push
adc
add
add
pushf
cmp
pop
dec
(bad)
push
dec
cmp
repnz
aam
pusha
js
loop
lds
loope
pop
adc
cdq
add
inc
sub
pop
popa
sbb
adc
ret
into
icebp
mov
jns
pop
and
les
ins
mov
add
or
xchg
jb
push
cmp
jb
sub
pop
jp
daa
in
xchg
jp
jp
jp
jne
hlt
adc
ins
(bad)
cli
sbb
in
jp
add
test
push
je
imul
or
hlt
jp
mov
ins
mov
sub
and
mov
pop
mov
cmps
pop
cmp
test
jns
inc
cmp
enter
or
and
sete
fwait
popa
add
xor
rol
mov
jno
jnp
and
lock
daa
sub
jl
data16
movs
pop
aas
bound
adc
add
xchg
retw
xor
jmp
or
test
add
retf
or
lahf
cmp
inc
in
jl
movs
nop
fsub
fisttp
cs
loopne
mov
in
adc
mov
xchg
mov
push
and
sbb
mov
mov
lds
jge
sti
pop
mov
das
test
pop
add
push
inc
adc
in
mov
cmp
mov
cmp
fbld
les
sar
mov
and
test
push
xchg
or
jae
in
adc
(bad)
jle
repz
jg
in
fs
dec
sahf
out
inc
rol
adc
cdq
mov
pop
adc
cmp
cmp
ins
sub
in
adc
js
scas
or
cmp
idiv
or
sti
sub
test
or
push
or
add
ds
sub
adc
(bad)
adc
cmp
push
cmp
mov
inc
pop
sub
adc
pop
ret
cs
movs
sub
and
add
cmp
ja
or
retf
ins
add
sbb
adc
imul
aad
cmps
shr
cmps
dec
or
xchg
or
push
sbb
iret
jl
or
bound
cdq
scas
mov
inc
sub
test
jno
dec
mov
outs
mov
add
leave
add
nop
adc
pop
xchg
(bad)
rcl
daa
sub
xchg
mov
dec
xchg
add
pop
pop
xchg
inc
xchg
or
xor
imul
rol
xchg
es
add
mov
int3
cmps
pop
nop
or
les
enter
or
mov
xor
shl
daa
in
add
cmp
and
jge
pop
or
retf
dec
add
(bad)
or
push
inc
mov
or
cwde
inc
imul
mov
ret
add
sub
jge
jnp
loopne
mov
cmp
hlt
ss
into
xor
xor
cmp
cwde
cmp
jge
mov
mov
or
in
push
or
test
fwait
daa
in
mov
mov
xchg
push
cmp
les
stc
cwde
mov
adc
pop
sub
pop
pop
dec
sbb
jmp
test
xchg
popf
in
pop
sbb
ds
cs
xchg
lods
dec
mov
mov
mov
test
dec
test
test
and
inc
jl
mov
add
sbb
mov
loopne
lds
or
retf
loope
push
jmp
adc
xchg
xchg
daa
xchg
das
mov
fild
mov
inc
and
ds
add
mov
xchg
fmul
out
daa
xchg
adc
add
or
cmc
adc
push
xchg
ins
gs
pushf
jo
inc
lds
icebp
inc
or
ret
bound
dec
pop
pop
(bad)
cmp
add
leave
nop
xchg
popf
call
or
push
mov
es
das
xor
cmp
test
push
push
push
adc
daa
xor
(bad)
or
clc
inc
inc
ins
gs
xor
push
ins
scas
add
scas
(bad)
and
dec
sti
xchg
leave
ins
mov
lods
in
in
call
dec
cmc
in
mov
push
mov
pop
es
push
mov
push
pusha
int3
mov
aas
jno
inc
cld
inc
inc
add
lods
and
dec
ror
or
sbb
add
mov
cwde
sub
or
ficomp
adc
mov
cdq
daa
jmp
xor
pop
sub
mov
xor
dec
adc
mov
mov
arpl
lea
ins
push
adc
sbb
cmp
push
out
adc
sbb
adc
loopne
ror
sub
lea
jnp
add
add
push
add
and
push
adc
movs
or
mov
sbb
fiadd
and
or
lods
push
mov
mov
push
gs
dec
scas
mov
icebp
pop
nop
mov
adc
push
xor
pop
scas
jmp
push
mov
pop
or
fild
or
mov
iret
mov
add
dec
sbb
jle
add
adc
iret
or
and
inc
retf
push
add
or
pusha
inc
fcomp
cmps
bound
movups
mov
adc
mov
inc
movs
xor
addr16
inc
fcomp
push
pop
dec
or
in
mov
movs
or
adc
stos
and
nop
mov
cmovle
rdpmc
rcr
push
mov
inc
add
push
cmc
add
pusha
mov
mov
and
mov
xlat
jne
test
xor
pop
adc
jge
jg
pop
adc
pusha
out
ja
loope
sahf
mov
add
mov
pop
xchg
sbb
adc
lahf
std
out
out
jne
push
cmp
jne
adc
mov
adc
or
jnp
pushf
add
jo
(bad)
rcl
or
push
or
nop
or
call
inc
mov
dec
std
fsubp
dec
mov
dec
jne
mov
jge
mov
adc
jbe
test
ficomp
jl
or
mov
or
add
dec
jmp
or
jbe
leave
adc
xor
push
(bad)
adc
and
cmp
push
xchg
outs
xlat
movs
inc
jl
jl
enter
xchg
in
(bad)
xchg
push
mov
or
xchg
inc
aam
out
pop
(bad)
call
sub
(bad)
pop
dec
hlt
inc
outs
in
add
xchg
xchg
cdq
stc
adc
jle
inc
push
and
cmp
je
and
jnp
mov
dec
mov
inc
sub
fsub
out
shl
dec
sbb
in
or
push
(bad)
out
cmps
bound
cmp
add
add
sbb
ret
pcmpgtb
sbb
ficom
shr
cmp
jae
jns
clc
xor
add
adc
ficom
sbb
xor
shr
or
pop
loope
and
sub
cmp
dec
or
adc
rol
pop
leave
adc
or
les
inc
mov
pop
jbe
add
rol
inc
imul
in
sbb
add
mov
add
pop
prefetch
jb
jl
cmove
add
add
add
jp
add
mov
stc
add
mov
push
mov
mov
or
and
sbb
adc
adc
and
inc
add
cwde
pushf
rol
test
pop
sub
push
in
sub
jmp
push
or
movs
ret
loopne
or
(bad)
dec
les
iret
or
sub
div
pop
sbb
daa
mov
imul
sub
mov
and
fwait
cmp
mov
loopne
mov
leave
xor
leave
adc
add
and
mov
xchg
invd
mov
lock
add
shl
(bad)
ins
test
int3
mov
(bad)
or
or
cmps
push
add
or
jmp
sbb
nop
mov
sbb
xor
xchg
adc
icebp
or
jle
jmp
jmp
xchg
nop
mov
ret
or
mov
mov
or
xor
out
add
inc
xchg
jle
or
mov
add
iret
pop
dec
inc
outs
lods
retf
or
and
test
add
shl
mov
and
sbb
sbb
add
sbb
jp
ja
mov
inc
or
xchg
mov
outs
(bad)
pandn
enter
cmp
cmps
dec
or
push
adc
cmp
xor
or
mov
sbb
test
inc
or
and
rol
or
inc
add
adc
ret
fst
or
inc
cmp
aas
int
call
cmp
jle
add
iret
push
push
sub
adc
imul
sti
xor
out
add
add
cmp
push
and
mov
xor
or
sub
or
fsubr
test
inc
fcomp
fldcw
pop
push
sub
cmp
push
xchg
call
sahf
dec
fnsave
fadd
call
adc
scas
add
pusha
jo
jo
add
fsub
js
dec
mov
push
cmp
jb
gs
mov
pop
and
pop
sub
je
push
je
jnp
adc
ja
jg
mov
pusha
add
push
push
and
movs
xor
aam
sub
ss
push
ret
mov
inc
aad
stos
add
adc
adc
mov
mov
test
mov
mov
xor
js
inc
mov
cmp
or
inc
and
pop
(bad)
pushf
pop
adc
add
xchg
pop
iret
xor
dec
les
inc
adc
add
lds
and
(bad)
pop
add
lea
mov
or
jbe
xchg
int
outs
adc
adc
ins
pop
pop
sbb
and
sub
cmp
jge
dec
loop
adc
mov
aas
aad
xor
sbb
outs
add
clc
or
das
shr
or
cmp
stos
pop
dec
or
add
fucomi
add
mov
and
or
je
sub
cwde
sbb
and
push
and
and
cmp
mov
push
lods
sub
scas
sub
and
cmps
push
and
and
push
sub
sub
and
push
iret
ins
(bad)
xor
xor
mov
mov
push
cmp
cmp
mov
push
sub
push
int
cmp
jb
dec
sub
cmps
push
dec
and
cmp
jb
stc
pushf
push
xchg
dec
push
lock
dec
sbb
push
and
mov
mov
push
or
or
or
fs
add
inc
pop
invd
in
xchg
pusha
lock
sbb
dec
add
fs
inc
fsub
cmp
inc
in
ja
add
mov
push
hlt
jl
(bad)
call
add
pop
pop
outs
jg
ds
add
push
enter
push
add
fild
mov
aam
mov
test
lea
inc
repnz
mov
shl
arpl
fild
loope
jg
jne
(bad)
call
fdiv
xchg
adc
jg
or
xchg
sub
push
lea
adc
push
loope
retf
dec
xchg
and
hlt
pop
pop
inc
cmp
sbb
xchg
xchg
xchg
mov
mov
lahf
inc
xor
neg
fist
push
sub
mov
mov
cmps
jecxz
mov
and
mov
pop
or
ds
push
call
dec
mov
pop
add
out
sbb
push
jge
mov
aaa
(bad)
out
and
mov
ins
loop
xchg
(bad)
sbb
push
jl
sbb
add
sub
pop
pop
pop
and
add
pop
dec
fild
shl
mov
push
fadd
pushf
mov
ret
inc
pushf
(bad)
adc
xchg
cmp
xor
adc
cs
mov
sub
push
fs
sub
rol
out
mov
add
and
xchg
cmp
addr16
gs
nop
js
in
das
xchg
dec
mov
pop
fnsave
or
inc
hlt
ret
fnsave
sbb
mov
add
sub
xor
or
dec
xor
mov
sbb
in
dec
xchg
imul
shr
push
adc
cmp
or
or
nop
out
das
out
sub
add
ret
adc
cmp
push
ror
ins
jge
popf
xchg
in
dec
jge
jo
push
xchg
clc
add
cmps
and
aaa
in
rol
jbe
pushf
in
pop
mov
mov
mov
icebp
jg
push
and
jecxz
lock
ret
pushf
mov
lock
and
or
push
test
cmps
inc
mov
fist
xor
sbb
lock
call
fiadd
jecxz
xchg
and
sbb
mov
cmp
adc
pop
mov
jnp
or
mov
pop
jmp
ret
pop
(bad)
jnp
adc
dec
mov
adc
test
dec
fist
mov
nop
sub
mov
or
add
sbb
dec
sbb
mov
rcl
lea
or
sub
mov
loope
cwde
ret
xchg
and
inc
xor
arpl
test
out
mov
xchg
mov
ror
loope
push
or
add
imul
ret
sbb
ret
dec
out
push
pop
or
jae
test
or
sti
dec
and
jmp
aad
lock
inc
dec
jne
lea
aad
rcl
and
(bad)
into
cmp
fld
outs
jle
sbb
pop
xchg
mov
ret
je
add
(bad)
or
push
or
retf
mov
cmp
dec
dec
sub
inc
dec
cs
nop
pop
rcr
sbb
sub
movs
clc
stc
add
aas
ins
movs
xor
xor
inc
mov
cmp
inc
sbb
mov
sbb
and
adc
ds
inc
adc
paddusb
adc
nop
popf
adc
shl
fimul
jne
or
inc
test
fcomp
add
call
aad
cmp
push
jge
pop
ret
pop
push
and
xlat
arpl
xor
pusha
jnp
(bad)
mov
mov
pop
add
xlat
push
xchg
fnsave
test
jbe
add
adc
mov
mov
adc
test
cmp
sub
fucomp
xor
mov
add
outs
mov
dec
dec
mov
adc
dec
je
adc
cld
clc
int3
jg
cs
push
psadbw
jmp
xor
pop
sub
sub
mov
stos
push
mul
jge
jnp
jmp
inc
jne
xchg
or
inc
pop
jl
or
or
stc
jbe
jb
or
jne
sbb
aam
ret
sbb
sbb
aas
sub
mov
fimul
fadd
arpl
push
sbb
sbb
addr16
jmp
mov
xor
jne
push
cmp
jno
push
jge
or
test
adc
fmul
xchg
cli
jbe
xlat
and
adc
or
pushf
fst
jecxz
mov
or
sbb
dec
in
test
xchg
jb
mov
add
xor
cmps
loopne
mov
xor
cmps
mov
mov
call
test
and
(bad)
or
sar
retf
(bad)
or
je
popa
xchg
adc
aas
add
sub
in
push
je
or
je
das
aad
add
and
sahf
mov
push
retf
fwait
jo
add
fcom
fs
adc
in
jb
push
sbb
jne
pcmpgtw
fwait
mov
jno
in
and
jne
sbb
ins
or
ror
mov
push
cdq
fcom
jbe
jmp
std
jne
ins
cmps
mov
jno
fmul
cmp
mov
push
sub
adc
imul
sbb
sub
sub
jnp
mov
call
mov
or
xor
dec
sub
sbb
push
add
shr
jae
and
fcom
sub
loope
sub
sbb
add
push
dec
xor
fs
mov
xor
cs
cs
nop
mov
jg
loopne
jge
je
pop
inc
jne
and
out
add
enter
cmp
push
mov
nop
pusha
xchg
jecxz
pop
add
inc
out
add
cmp
cmp
cld
and
cmp
imul
jl
jne
jo
xchg
repnz
add
pop
inc
into
push
dec
mov
sbb
or
dec
add
cmp
or
test
and
pop
mov
test
mov
lods
stos
xor
and
push
cmp
push
retf
fmul
mov
scas
loope
pop
pop
sbb
sub
dec
shr
add
pop
cmps
sbb
sub
and
aaa
push
jnp
sub
lods
cwde
je
dec
je
je
fidiv
nop
je
dec
je
sub
xchg
and
or
or
and
push
or
inc
sar
push
inc
cli
cmp
shl
push
add
nop
ret
and
or
neg
adc
and
mov
and
pop
scas
jmp
or
test
sub
ss
or
rcr
rol
std
inc
arpl
test
lock
mov
mov
sbb
sub
push
mov
dec
mov
add
add
inc
call
xlat
clc
dec
aaa
inc
dec
inc
xor
mov
push
xor
pop
bound
or
add
sar
(bad)
into
mov
mov
xchg
sbb
in
and
dec
jnp
inc
sub
or
pushf
jo
adc
mov
mov
pusha
inc
daa
mov
cmp
mov
ins
mov
adc
div
test
(bad)
fdivr
add
jb
mov
jae
pop
or
maskmovq
test
mov
and
jo
rol
ret
push
push
xchg
push
push
push
loope
imul
push
push
fcom
jle
dec
pop
jl
cmps
add
push
dec
mov
aam
cmpxchg
sub
fnstcw
mov
pop
or
sbb
ret
cmps
or
sar
mov
je
sub
and
inc
or
nop
ja
mov
or
jmp
scas
pop
xchg
xchg
mov
movs
and
xchg
pop
xchg
xor
and
inc
pop
pop
enter
mov
iret
sar
scas
mov
inc
dec
cld
mov
inc
dec
mov
fdivr
pop
pop
minps
loopne
cmp
jns
inc
sbb
or
pop
inc
aaa
inc
popa
mov
dec
aas
(bad)
(bad)
xor
inc
cmp
ret
sar
cdq
jp
pop
fsubr
repnz
cmp
mov
add
ss
push
mov
push
mov
push
icebp
inc
add
dec
jae
fstp
rcl
rcr
xor
pcmpeqd
cmc
sar
sbb
xchg
pushf
pop
adc
push
pusha
int
push
addr16
xor
repz
sbb
and
mov
sar
adc
inc
xchg
push
dec
sbb
jmp
pop
xor
add
fsubr
cmp
pminub
mov
sbb
sbb
inc
(bad)
or
(bad)
loop
out
cmp
and
jg
and
outs
pop
xchg
setp
mov
sbb
arpl
je
cmp
and
pop
xor
mov
cmp
push
outs
xor
push
out
popa
addr16
dec
outs
inc
imul
shl
ror
clc
and
add
xchg
out
(bad)
outs
push
sub
sub
dec
ret
push
call
add
clc
imul
outs
fcomp
mov
cmpps
add
mov
xchg
xor
pop
xor
loopne
push
shl
outs
adc
or
xor
test
and
pop
cmp
lock
shl
pop
cmp
cmp
sub
jg
pop
add
pushf
fstp
(bad)
jg
lock
inc
and
popa
ins
imul
jne
pop
xor
add
xchg
and
mov
and
data16
and
add
dec
adc
mov
(bad)
test
inc
push
in
adc
or
jg
inc
test
loope
push
lods
imul
daa
daa
daa
popf
les
mov
daa
daa
jb
je
daa
daa
daa
daa
jbe
js
daa
daa
daa
daa
jp
jl
daa
daa
daa
daa
jle
pusha
popa
daa
daa
daa
daa
bound
gs
daa
daa
daa
addr16
daa
daa
daa
push
ins
ins
daa
daa
daa
daa
outs
outs
push
push
daa
daa
daa
daa
push
push
push
push
daa
daa
daa
daa
push
push
pop
pop
daa
daa
daa
daa
pop
pop
pop
pop
daa
daa
daa
daa
pop
pop
inc
inc
daa
daa
daa
daa
inc
inc
inc
inc
daa
daa
daa
daa
inc
inc
dec
dec
daa
daa
daa
daa
dec
dec
dec
dec
ins
fwait
cwde
ds
pop
mov
add
xor
aas
in
daa
jbe
inc
inc
lds
vmread
test
popa
push
dec
adc
and
dec
push
jo
popa
and
adc
lock
cmp
push
iret
mov
or
mov
adc
imul
or
mov
imul
xor
rcl
cld
add
sbb
mov
add
repz
inc
jns
add
mov
push
inc
add
pop
adc
mov
retf
or
sub
mov
syscall
cmp
rcl
and
push
lds
pop
inc
pop
or
adc
inc
adc
call
(bad)
cmp
pop
cmp
push
fisttp
jge
lea
xchg
mov
push
inc
cmp
(bad)
sbb
mov
es
loope
leave
dec
jecxz
xchg
xor
sbb
or
push
or
xlat
mov
adc
push
or
xchg
jl
mov
jecxz
dec
test
jmp
mov
adc
and
dec
(bad)
ja
mov
je
call
mov
mov
add
fdiv
cmp
mov
dec
push
push
dec
push
push
nop
mov
out
ret
aas
add
out
sbb
push
mov
inc
add
mov
mov
icebp
mov
mov
cmp
mov
es
je
add
and
jl
inc
fisttp
mov
push
adc
and
rcr
cs
inc
sub
in
and
inc
add
push
mov
xlat
sbb
or
pusha
sbb
pop
lods
jle
mov
inc
fwait
xor
outs
bound
popf
sub
pop
clc
enter
fsub
fcom
mov
and
inc
ins
adc
inc
dec
stos
push
sbb
xor
shr
mov
push
scas
mov
sbb
inc
inc
ret
sar
jbe
sbb
test
jnp
leave
inc
outs
jmp
(bad)
loopne
xchg
lods
out
lock
rol
or
pop
jno
fnsetpm(287
xor
bndldx
push
shl
aam
inc
mov
mov
jl
xchg
stos
and
xor
enter
sub
cld
push
arpl
and
inc
addr16
in
enter
jmp
shr
jp
pop
xchg
xlat
pop
sub
or
into
in
ss
pop
je
jp
cli
jno
add
ss
ss
pushf
or
fild
xor
test
out
out
add
jbe
rdmsr
outs
or
pusha
xor
cmp
push
xchg
outs
and
xor
mov
es
cld
sbb
fwait
cwde
xor
push
push
dec
add
xor
stc
adc
xchg
push
ror
ds
add
lods
jecxz
mov
cmp
mov
and
or
movs
je
and
int
or
mov
xor
jg
xor
xor
xor
add
in
ja
dec
mov
jp
mov
or
cmp
cli
inc
gs
add
outs
je
sbb
adc
dec
repnz
or
sub
mov
inc
iret
cs
loopne
shl
test
call
add
pop
iret
movs
call
stc
repnz
inc
mov
jnp
add
push
push
or
add
lock
inc
inc
fwait
add
popa
add
iret
icebp
xor
pop
pop
shl
or
sbb
add
add
mov
push
movs
mov
inc
cdq
push
mov
movs
xchg
mov
xlat
pop
mov
pusha
inc
into
add
scas
push
dec
test
imul
add
adc
jmp
adc
lahf
sbb
jmp
mov
shr
jmp
fsubrp
pop
adc
sbb
adc
pop
cmp
push
adc
sbb
mov
mov
shl
and
popf
test
fimul
cmp
aam
cmp
push
jbe
mov
jmp
dec
cmp
fcos
or
inc
dec
jne
cmp
jns
ret
outs
jg
adc
les
(bad)
adc
(bad)
mov
jmp
arpl
mov
clc
mov
add
inc
mov
inc
jmp
and
retf
mov
dec
and
push
pavgb
cmp
sti
sub
mov
cmp
xor
add
add
dec
lock
add
iret
std
mov
add
es
pop
inc
das
sar
mov
repz
or
ss
adc
jbe
repnz
shl
shr
and
jno
mov
pushf
nop
push
repnz
or
jb
jns
xor
or
enter
xor
adc
cmp
sbb
pop
movs
adc
or
or
cmp
test
lds
jg
data16
inc
mov
dec
hlt
ror
pusha
jg
inc
mov
imul
cld
inc
jg
mov
jb
inc
nop
dec
mov
mov
loope
into
arpl
and
stos
ins
pop
js
das
add
and
mov
bound
add
inc
xchg
dec
xchg
mov
add
mov
dec
sar
popw
iret
std
scas
add
enter
sbb
jne
pop
pop
mov
inc
inc
scas
push
xor
mov
xor
loopne
mov
ficom
in
pop
jecxz
js
fstp
jmp
adc
repnz
loop
inc
xchg
es
sub
mov
or
adc
arpl
xor
js
pop
jo
mov
and
lock
movs
rcl
movzx
imul
jecxz
xor
das
push
add
inc
dec
mov
adc
dec
clc
add
mov
test
add
xchg
lock
into
sti
sub
fld
aaa
lea
lock
jg
push
out
add
and
lods
xor
jns
not
pop
fadd
into
les
inc
hlt
pop
(bad)
pop
mov
pop
mov
shl
or
(bad)
xchg
mov
xor
shl
ins
sub
xor
jge
jne
or
or
es
push
ja
jmp
jmp
in
cdq
jae
lahf
mov
mov
add
adc
sar
cmp
or
dec
call
or
jp
dec
add
add
fs
out
loopne
mov
ror
ret
(bad)
sub
(bad)
mov
aaa
mov
pop
or
clc
nop
je
mov
test
xor
push
cld
push
mov
sbb
jmp
sbb
adc
pushf
arpl
sbb
push
and
outs
sub
dec
outs
jmp
pop
mov
dec
mov
push
add
inc
sub
shl
ss
jnp
jp
js
mov
(bad)
imul
adc
push
inc
cwde
or
sbb
and
lahf
add
add
xchg
and
jns
repnz
add
(bad)
imul
and
jmp
lock
mov
add
test
push
(bad)
sbb
pop
mov
loop
cmp
sbb
imul
jge
xlat
inc
loop
add
dec
aad
jle
(bad)
imul
ret
or
sub
sbb
pop
sub
test
cwde
retf
pop
icebp
mov
gs
shl
push
push
or
ret
fwait
xchg
sbb
dec
imul
push
jne
les
into
xor
nop
dec
aam
pop
sub
or
xor
add
xchg
movs
les
das
(bad)
sub
xchg
and
inc
cmp
ret
aam
xchg
xchg
cs
nop
pop
jmp
xchg
mov
mov
xlat
xchg
in
and
sbb
mov
retf
sub
inc
sbb
test
(bad)
add
mov
dec
loop
xchg
nop
sub
or
jbe
lods
push
dec
pop
daa
mov
sub
and
dec
cmp
rcl
mov
(bad)
(bad)
push
add
ret
inc
aad
push
fcom
fidiv
xor
mov
xchg
xor
or
mov
ins
test
sbb
pop
hlt
inc
add
adc
xchg
mov
popa
retf
icebp
sahf
gs
xor
xchg
into
sbb
sbb
scas
pop
in
inc
add
sbb
xor
ins
test
inc
push
lock
and
test
xchg
mov
adc
sub
push
out
cli
add
adc
shl
jmp
lods
aam
shl
iret
rcl
mov
icebp
cmp
xlat
fucomip
push
retf
xor
inc
cld
aad
cmps
popa
scas
xor
rol
inc
iret
add
loop
in
pop
dec
inc
mov
rol
inc
in
(bad)
lds
mov
mov
addr16
inc
jecxz
fidivr
inc
adc
popa
pop
data16
imul
add
ror
add
adc
(bad)
push
push
add
pop
inc
pop
es
les
aam
sbb
sar
es
jmp
and
bound
jmp
adc
or
nop
cld
int3
cmp
jo
test
enter
mov
div
adc
ins
xor
aad
aas
js
push
and
sub
and
test
jl
inc
outs
sbb
pop
call
pusha
push
(bad)
(bad)
push
or
ja
inc
dec
jne
jo
or
mov
iret
lds
fs
mov
mov
ret
inc
push
mov
inc
sbb
nop
lods
test
cmp
cmp
test
call
adc
mov
and
jbe
lds
lock
sbb
into
sbb
pop
push
sbb
add
xadd
add
xchg
mov
mov
jmp
or
mov
xchg
pop
cld
push
push
shl
xchg
push
fadd
dec
(bad)
pop
(bad)
retf
inc
jecxz
fsubr
cmp
dec
or
imul
scas
adc
add
mov
inc
loop
dec
cmp
fndisi(8087
shr
ds
cs
test
pop
out
inc
adc
dec
or
mov
les
or
xor
inc
cmp
xor
inc
gs
stos
mov
mov
hlt
test
lods
into
cmp
je
sub
je
add
rcr
sbb
or
cmps
rol
sbb
retf
add
sub
pop
sti
pop
cmp
pop
add
and
lods
ret
inc
hlt
repnz
mov
cmp
mov
jns
(bad)
movs
and
dec
in
jne
inc
add
out
mov
test
and
add
pop
mov
test
cmp
je
push
adc
xor
jmp
inc
push
pop
and
mov
mov
popa
fmul
and
inc
pop
retf
mov
sti
or
mov
jb
xchg
and
mov
adc
jmp
cmps
mov
nop
(bad)
mov
adc
inc
das
and
pop
sub
out
add
mov
cmp
jne
lods
inc
je
xchg
xor
add
jle
mov
mov
xor
icebp
jmp
inc
lods
test
shl
inc
mov
inc
mov
sub
jle
push
xchg
test
sub
inc
xchg
test
dec
loop
loopne
push
data16
jmp
movs
jae
mov
xor
or
add
movs
pushf
jp
fs
pushf
sbb
mov
rcr
retf
inc
mov
or
add
lds
add
mov
js
mov
push
nop
movs
and
mov
mov
les
sbb
adc
not
adc
sub
movs
add
pop
ret
cmp
push
imul
and
push
mov
add
or
dec
inc
sub
sbb
sti
jb
test
push
add
add
cmp
pop
fwait
xor
cmps
cmp
push
mov
hlt
push
(bad)
inc
sar
jecxz
mov
push
loope
pop
pop
pop
mov
or
pop
shl
mov
retf
sub
shl
call
jmp
add
lock
xchg
out
mov
inc
in
cmp
icebp
popf
(bad)
cmp
sbb
dec
cmp
xchg
hlt
add
jl
mov
ins
sbb
in
add
and
xchg
jo
icebp
xlat
movs
sbb
and
hlt
imul
inc
jge
add
sub
and
pop
or
sub
or
mov
add
call
mov
mov
mov
sbb
mov
loope
aas
push
pop
hlt
aad
(bad)
sub
scas
in
mov
add
rcl
add
lock
push
adc
nop
ss
lock
jbe
or
add
adc
test
mov
jmp
jne
sub
jb
inc
xchg
data16
aam
cmp
je
inc
dec
jne
pop
ret
aaa
aam
pop
das
dec
cld
lea
sub
jb
inc
xchg
and
mov
push
dec
or
sbb
in
sbb
jne
dec
jne
cmps
xchg
in
add
and
xchg
pop
add
xchg
cmp
cdq
push
lds
sub
sbb
js
in
pop
or
(bad)
je
jb
cmp
cli
ja
xchg
and
and
iret
rol
inc
rol
dec
and
rol
sbb
mov
jecxz
jno
aaa
sub
aas
push
push
mov
or
aam
mov
jg
jae
jmp
inc
jmp
es
jmp
retf
sub
push
push
xor
sbb
shr
test
pop
mov
(bad)
das
popf
add
es
loope
cmp
or
mov
ds
sbb
shl
cwde
mov
call
dec
js
rcl
push
rol
jmp
enter
(bad)
mov
scas
out
sub
sub
add
std
scas
add
call
and
cdq
lock
fwait
mov
dec
ret
jecxz
pusha
sub
mov
jmp
cld
jbe
lea
mov
cmp
add
jmp
push
push
neg
mov
xchg
sbb
and
mov
and
movs
pop
cmp
jl
mov
cmps
mov
or
mov
push
fst
push
jns
out
not
fiadd
movs
sub
inc
sub
add
mov
push
push
imul
iret
fld
call
dec
fadd
inc
shl
fdivr
test
stos
mov
sbb
pop
pop
cmp
mov
jge
shr
lahf
jp
sbb
mov
call
movs
in
(bad)
out
pop
push
cmp
push
push
test
dec
pop
stos
hlt
imul
scas
mov
lock
movs
push
cmp
(bad)
sub
(bad)
aaa
fcomp
add
dec
add
inc
dec
add
gs
mov
dec
fwait
dec
push
push
adc
pop
out
pop
in
mov
add
add
inc
add
add
add
jle
add
jb
cmp
aad
jns
jne
push
lahf
es
rcl
add
dec
add
dec
or
bound
jle
daa
inc
jbe
leave
cmp
les
or
dec
lea
mov
dec
jg
and
mov
and
enter
jl
es
fild
or
jmp
in
jno
pop
shl
test
add
xor
sub
adc
movs
repnz
in
jle
das
bound
push
mov
push
and
add
mov
dec
push
nop
cdq
movs
xor
cwde
jo
fcomp
dec
push
cwde
pushf
cdq
adc
mov
push
add
movs
or
or
adc
adc
sbb
dec
mov
jb
cmp
sub
sub
dec
shl
int3
ins
mov
cmps
cmp
fmul
retf
inc
fsub
xor
xchg
cmp
push
call
push
push
es
test
or
and
sbb
dec
adc
adc
sbb
retf
and
sbb
add
xor
and
les
lock
sbb
sbb
cmp
push
sub
push
es
xor
sub
into
sub
imul
sub
stos
xlat
mov
dec
aas
(bad)
jmp
add
xor
or
loop
int3
or
ins
sbb
inc
jns
add
adc
add
mov
fild
dec
add
and
test
push
xchg
inc
add
push
daa
stc
call
add
add
sbb
xchg
dec
add
loopne
(bad)
sub
sub
or
cmp
mov
das
xor
arpl
push
das
pop
imul
jbe
pop
add
das
ins
out
push
jo
add
je
or
js
aas
je
jo
mov
pop
or
or
add
dec
mov
push
jle
push
mov
push
es
add
popa
ret
lahf
aaa
pop
scas
ret
test
aaa
or
pusha
aas
or
jb
jae
jnp
sub
aaa
or
int
or
jnp
mov
add
mov
daa
xor
xor
mov
xor
or
push
mov
stos
iret
push
int3
icebp
xor
pop
cmp
icebp
sbb
mov
adc
test
pop
mov
mov
add
cmp
mov
and
cmp
adc
aam
fwait
adc
sbb
adc
adc
push
push
ret
mov
and
xchg
jne
cmc
icebp
sbb
(bad)
retf
mov
add
add
outs
add
jae
and
data16
loopne
push
push
and
enter
add
add
pop
xor
push
push
(bad)
xor
test
inc
repz
or
in
push
push
mov
add
add
xchg
or
inc
ret
add
lods
or
mov
mov
das
or
cmp
in
dec
and
jno
xchg
dec
repz
add
pop
ret
sbb
pop
das
mov
into
shl
sbb
push
lock
arpl
dec
sub
push
jle
(bad)
push
loop
aas
scas
inc
addr16
out
jmp
test
mov
dec
aas
shl
cmc
outs
pusha
test
dec
test
aaa
ins
pop
lock
je
add
xor
push
or
xchg
pop
mov
scas
push
retf
enter
jmp
sub
adc
dec
cmpps
add
jmp
and
call
inc
push
add
inc
add
xor
fimul
cdq
idiv
sub
adc
stc
scas
add
mov
pop
xor
or
mov
pop
cmps
fsub
mov
loopne
(bad)
mul
js
or
add
and
push
rcr
inc
cld
pop
pop
mov
fmul
mov
mov
sbb
pop
jns
mov
xchg
not
cmc
lahf
mov
inc
push
mov
rcl
(bad)
aam
jbe
mov
mul
mov
pop
stos
adc
pop
test
jmp
push
arpl
push
hlt
mov
add
sub
loop
mov
fdiv
jmp
pop
stc
sub
pop
ret
mov
jo
rcl
out
and
lods
ret
cmps
mov
xor
push
mul
jmp
icebp
add
std
xor
imul
(bad)
inc
test
mov
add
jl
cmp
add
aad
add
inc
mov
xor
into
xor
add
and
popf
ins
sub
out
or
std
imul
sbb
jmp
push
test
sbb
addr16
mov
cmp
clc
sub
cmp
cmp
lods
lods
or
push
mov
inc
(bad)
test
mov
test
stos
clc
pop
sbb
push
xor
ins
call
loop
add
dec
add
xchg
loopne
xor
ror
jbe
add
mov
add
add
or
mov
outs
push
outs
pop
dec
xor
mov
pop
pop
xor
add
or
xor
ja
pop
xor
push
test
fcom
loopne
inc
movs
xchg
xor
jo
retf
mov
hlt
push
mov
dec
sub
add
mov
cli
sbb
iret
pop
adc
add
(bad)
(bad)
dec
ret
ror
pop
mov
add
dec
daa
adc
jne
adc
cmp
push
nop
xor
mov
add
sub
arpl
sti
xchg
inc
mov
inc
mov
mov
xchg
retf
inc
xor
sub
hlt
add
es
xchg
hlt
lock
mov
or
xchg
enter
xchg
add
mov
test
jmp
push
call
jmp
pop
pop
pop
ret
fist
xchg
fxam
sbb
mov
in
push
jne
pop
cmp
loopne
(bad)
pop
data16
scas
test
xchg
lea
cld
xchg
das
sbb
jg
inc
leave
adc
outs
movq
or
rcl
add
add
mov
add
iret
sbb
repnz
pop
std
pop
ret
xor
dec
test
mov
imul
xchg
retf
sub
xchg
xor
in
jl
adc
repz
pop
sbb
xchg
or
and
sar
cdq
pop
pop
pop
scas
xor
push
or
push
dec
sbb
jno
sub
in
les
cwde
mov
inc
add
mov
inc
dec
inc
jp
xor
pop
ret
adc
and
jbe
push
nop
retf
push
and
or
cmp
xchg
push
sub
adc
mov
das
imul
sti
add
ins
stos
shr
rol
retf
adc
mov
mov
inc
jmp
add
lahf
add
mov
test
popa
lock
not
or
jns
add
add
fwait
sbb
pop
pop
push
test
sub
ror
add
xchg
add
push
hlt
stos
sbb
jge
pop
or
mov
adc
mov
sbb
cwde
mov
retf
lock
add
stos
add
call
pop
push
pop
or
add
(bad)
and
xor
xor
mov
adc
adc
sub
mov
lea
add
cld
sbb
je
lds
push
or
dec
iret
add
xor
(bad)
sub
(bad)
fimul
ret
in
push
and
stos
sub
mov
jl
inc
lea
mov
out
ret
mov
or
fsubr
xchg
(bad)
nop
and
push
icebp
fisttp
jl
and
outs
pop
cld
sbb
xor
std
out
data16
push
mov
scas
setge
sub
shr
shr
add
cmp
jmp
add
jg
jmp
jno
cmps
adc
call
imul
push
adc
daa
cmps
retf
add
mov
sub
inc
jge
mov
js
lock
push
pop
cwde
xor
(bad)
jl
pusha
or
dec
and
and
adc
cmp
adc
clc
jmp
inc
dec
jne
add
dec
fbstp
rcr
iret
test
movs
das
mov
add
xchg
inc
cmp
push
add
sbb
sub
popa
and
add
or
(bad)
test
add
or
xchg
jbe
push
test
jg
push
inc
cmp
mov
cwde
push
and
out
rol
mov
rol
outs
dec
add
mov
mov
and
mov
add
repz
adc
sub
inc
pop
fild
out
clc
cmp
inc
fwait
mov
push
inc
inc
test
jmp
call
sbb
mov
or
js
loopne
or
or
loopne
sbb
push
ins
pop
push
jnp
into
test
int3
xor
test
je
xor
or
repz
jbe
lea
dec
sbb
les
mov
add
mov
pop
xchg
mov
push
inc
shl
call
adc
add
enter
sub
inc
add
es
jmp
sahf
sbb
je
sub
out
lea
inc
ret
mov
(bad)
lea
push
pop
push
add
jb
pop
(bad)
movs
cs
mov
ss
sbb
test
xor
xor
ja
lahf
push
or
(bad)
data16
adc
bsr
dec
clc
test
xchg
jo
ds
xchg
sub
popa
inc
or
push
fild
pop
jbe
in
mov
lock
test
xchg
dec
mov
push
mov
fdivr
adc
shl
inc
sbb
cmp
push
or
ins
pushaw
sub
pop
jb
sub
inc
push
cmps
jle
repnz
xor
idiv
sbb
xor
jmp
not
push
clc
mov
cs
pop
mov
mov
loopne
push
push
pop
(bad)
movs
out
aaa
adc
outs
mov
sub
mov
dec
iret
or
(bad)
sbb
mov
inc
xor
leave
in
adc
mov
lods
imul
mov
iret
add
pop
mov
cdq
jae
movs
mov
call
xor
adc
or
or
dec
mov
xchg
mov
hlt
pop
clc
iret
xor
or
fisttp
cmovo
aad
sar
ror
push
jne
add
pop
je
scas
jo
popa
test
ins
dec
shl
sub
outs
sub
div
jb
add
push
fnsave
pop
fisttp
jo
pop
test
cmp
xor
and
hlt
adc
pmulhuw
mov
dec
mov
inc
sbb
mov
cmp
mov
movs
and
pop
inc
inc
popf
call
ret
cmps
inc
or
fsubr
pusha
add
or
mov
sahf
push
dec
clc
add
mov
mov
pop
nop
ds
mov
sbb
and
cmp
push
push
jge
dec
fisubr
fadd
push
int3
dec
ins
xchg
hlt
imul
inc
inc
cmps
mov
inc
cs
lods
push
in
or
movs
sub
inc
add
inc
add
dec
daa
dec
inc
adc
imul
gs
jo
mov
je
jle
pop
jg
sbb
cmp
mov
and
in
dec
add
mov
ret
in
inc
ins
xchg
sub
pop
cmc
test
popa
xor
xchg
mov
iret
dec
or
sbb
popw
lock
dec
iret
in
or
fdiv
adc
and
push
xchg
in
shl
dec
or
pop
popf
pusha
jo
sbb
fstp
xchg
pop
sbb
sub
sub
cmp
sub
jo
sub
push
(bad)
dec
mov
xchg
inc
sbb
out
fiadd
ret
push
adc
cwde
add
cld
call
scas
pop
xchg
or
pop
test
shr
and
dec
adc
mov
repz
push
test
es
mov
mov
pop
mov
addr16
fisttp
and
add
jp
aas
pop
stos
push
imul
mov
int3
sub
adc
ja
mov
inc
push
sahf
ins
sub
inc
xchg
fist
jp
push
ins
jae
push
je
bound
rcl
loopne
movs
dec
adc
add
inc
xlat
pop
dec
cmp
push
jb
xchg
cmp
sub
pop
pop
imul
mul
inc
mov
jg
cwde
cmp
jo
add
push
dec
in
xor
dec
xor
push
push
push
push
inc
inc
jp
les
fcomp
adc
or
pop
arpl
adc
nop
ins
and
out
pop
dec
loope
dec
add
pop
or
or
xchg
pushf
push
je
pop
ret
out
sbb
pop
and
push
push
sbb
(bad)
in
xor
adc
test
add
les
mov
pop
mov
test
cmp
pop
sub
xor
test
push
push
in
xor
nop
adc
pusha
jmp
dec
cli
push
cmp
mov
in
call
mov
and
out
mov
test
adc
sbb
add
cmp
mov
loop
lea
ret
in
je
push
aam
add
sahf
pop
ja
adc
add
adc
movs
adc
mov
cmps
add
add
call
int3
inc
pop
hlt
jne
add
inc
test
js
mov
dec
push
jns
mov
mov
xchg
add
xor
cli
push
clc
inc
adc
mov
ror
nop
mov
pusha
adc
fild
es
sub
push
push
sbb
(bad)
push
push
ins
add
mov
dec
hlt
jne
jecxz
inc
cmc
push
mov
jmp
push
push
push
sbb
loop
mov
mov
in
fdiv
pop
xchg
rol
(bad)
and
in
adc
hlt
mov
adc
lods
aas
movs
cmps
clc
push
push
data16
xchg
jmp
sub
mov
clc
adc
hlt
push
mov
ins
cld
push
mov
inc
push
das
cmp
pop
movs
adc
(bad)
push
sbb
out
ficom
syscall
mov
pop
sbb
jb
xor
add
mov
sti
js
shl
add
mov
inc
push
push
fs
mov
rcl
cmps
mov
sbb
outs
or
push
movs
cmp
fucom
adc
xor
mov
xor
ret
arpl
and
aas
cmc
adc
and
adc
xchg
xor
or
pusha
clc
and
xchg
cmp
push
xor
pop
test
push
in
adc
sbb
movs
popa
ds
sbb
ins
loopne
stos
add
push
push
and
cs
sub
aaa
xor
push
pop
enter
lock
lods
inc
dec
cmp
out
mov
and
dec
push
inc
sbb
inc
cmp
hlt
pop
hlt
add
add
sbb
add
js
arpl
outs
or
push
jb
clc
imul
add
sbb
clc
addr16
inc
ins
sbb
and
jo
inc
into
and
arpl
sbb
mov
or
cld
mov
call
imul
cmp
les
inc
push
leave
add
add
jo
repnz
sbb
jo
leave
add
mov
outs
sub
test
inc
leave
sbb
sbb
enter
or
dec
enter
leave
and
sbb
adc
or
adc
push
or
fs
cld
sbb
loope
outs
iret
adc
inc
sbb
push
retf
or
or
pop
mov
mov
xor
add
and
enter
adc
ret
fdivr
or
or
nop
and
jae
xchg
test
mov
and
adc
adc
jno
sbb
push
ror
mov
pop
test
add
and
leave
dec
and
pushf
ret
sbb
sub
and
inc
dec
and
lock
daa
adc
cmps
in
and
jno
push
xlat
sbb
xor
dec
daa
push
adc
xchg
mov
outs
(bad)
jne
and
or
sbb
daa
jl
xor
push
(bad)
dec
push
mov
and
and
add
and
xchg
jae
cmp
nop
push
shl
xor
aas
push
sub
test
adc
add
pop
jb
jbe
add
test
in
add
sbb
sbb
lahf
adc
daa
xchg
int3
daa
sbb
data16
mov
in
sub
or
dec
or
(bad)
out
xor
sub
adc
test
dec
ins
or
enter
sub
xor
sbb
cmp
cmp
xlat
aas
stos
les
bound
add
rol
cmp
sub
add
inc
bound
and
sub
sub
cmps
add
iret
mov
inc
pop
sub
inc
cmp
cdq
jae
sub
cmps
sub
or
daa
inc
jmp
daa
sbb
and
sbb
es
cmp
les
xchg
cs
test
cs
adc
push
xchg
inc
aas
pushf
sbb
call
jb
push
or
das
jb
pop
add
test
das
or
ja
out
bound
jns
xchg
psrlw
dec
lock
mov
(bad)
mov
aas
fdiv
mov
dec
xor
inc
xor
aas
pop
pop
xlat
inc
push
call
sub
or
adc
sbb
xor
jb
push
in
push
sbb
inc
sbb
or
call
mov
inc
cmp
xor
jb
and
mov
cmp
inc
xor
sbb
jno
pop
xor
rol
jp
aas
pusha
xor
mov
cmp
inc
jne
fadd
dec
(bad)
pop
add
xchg
ss
pusha
inc
dec
enter
ss
inc
scas
push
aam
popa
pushf
cmps
inc
mov
push
aaa
inc
repnz
nop
adc
aaa
push
cmps
xchg
cvtdq2ps
push
test
popa
arpl
loope
test
cmp
add
test
inc
cmp
enter
mov
aaa
inc
pushf
xchg
inc
and
cmp
cmp
ins
xchg
in
or
(bad)
inc
add
xor
imul
add
push
add
test
cmp
and
xor
adc
ins
mov
add
dec
push
shl
(bad)
cmp
sbb
daa
xchg
div
cmp
loop
mov
adc
push
add
cmp
pop
cmp
(bad)
js
js
push
cmp
inc
inc
lahf
arpl
push
aaa
ins
cmp
ds
test
shr
jmp
xor
ds
sbb
push
xchg
or
jb
mov
out
inc
ja
dec
pop
or
int
in
aas
sbb
pop
add
test
aas
push
mov
inc
mul
and
inc
xchg
test
cwde
mov
cwde
inc
outs
push
sub
cmp
push
aaa
dec
push
or
inc
and
add
inc
mov
in
sbb
pop
inc
push
(bad)
cmp
mov
or
inc
adc
dec
addr16
or
jg
inc
inc
or
cmp
es
dec
or
call
cmps
inc
inc
jg
push
inc
mov
pop
fist
inc
fild
ja
add
fwait
push
push
jno
cmp
inc
pop
ins
inc
sbb
pushf
sbb
cwde
ja
inc
jo
dec
lds
xlat
push
(bad)
loopne
xchg
jne
(bad)
cmp
sbb
or
fdiv
dec
movs
loop
dec
ja
shl
jl
pop
add
inc
add
ret
or
movs
dec
push
add
mov
pop
mov
dec
dec
pop
or
push
ins
lods
scas
sub
cmps
dec
mov
dec
jo
cmp
mov
mov
dec
loopne
das
les
arpl
push
xchg
add
rcr
rol
aas
xchg
xlat
dec
aas
push
adc
add
mov
dec
daa
sbb
push
pop
jo
arpl
sub
dec
push
add
aam
sub
xor
mov
dec
mov
mov
jno
xor
je
inc
dec
leave
mov
dec
xchg
loope
mov
pushf
sbb
dec
pop
mov
xor
inc
ja
aaa
sbb
mov
push
ret
push
outs
inc
imul
dec
shl
test
jo
dec
leave
sub
push
mov
and
les
jb
movs
push
rcl
popa
sub
push
addr16
cmp
sub
adc
cwde
sbb
inc
xlat
dec
inc
ja
sub
jmp
mov
inc
cmps
or
push
inc
jb
xor
int3
mov
push
adc
mov
pop
arpl
ret
inc
ss
cmp
dec
push
not
or
rcl
jmp
pop
das
sbb
call
and
dec
inc
ret
inc
call
cdq
push
add
push
mov
push
pop
and
xchg
sbb
in
sub
mov
pop
push
daa
call
shl
add
push
push
sbb
rol
dec
call
call
test
pop
add
aam
popaw
dec
mov
jg
adc
xchg
pop
push
xor
in
arpl
call
xchg
mov
fist
(bad)
push
(bad)
xor
xor
jno
push
or
inc
inc
bound
pop
push
or
call
cwde
call
lock
or
mov
or
add
and
in
xor
aas
jae
pop
jb
and
push
test
sub
das
adc
in
ins
xchg
pop
and
dec
imul
rcr
push
ret
jb
and
inc
dec
enter
and
ret
mov
mov
dec
jnp
inc
dec
leave
test
pop
jo
loopne
inc
pop
inc
pop
adc
pop
pop
dec
pop
push
pusha
add
and
push
add
or
pusha
pop
aas
test
xor
add
inc
sbb
dec
jmp
dec
lds
jg
pop
data16
rcl
jo
bound
sbb
push
push
add
push
bound
or
call
arpl
cmp
sbb
ret
adc
(bad)
pushf
xor
lds
or
cwde
xchg
mov
fs
mov
and
push
or
rcr
or
xchg
out
gs
or
jo
and
pushf
sbb
adc
mov
in
push
add
cmp
jo
pusha
addr16
or
bound
or
pop
adc
or
addr16
adc
cmps
xchg
push
jo
addr16
mov
push
clc
push
outs
popa
imul
outs
bound
add
pop
push
jne
imul
jg
xchg
push
inc
dec
or
and
pop
push
adc
daa
cwde
push
outs
pusha
inc
add
dec
mov
or
and
jl
adc
pop
jecxz
jb
push
icebp
ins
or
cmps
dec
(bad)
ins
pop
daa
in
cmp
in
and
jb
and
ja
and
inc
or
or
aaa
shl
dec
inc
mov
or
jg
daa
gs
outs
out
push
add
push
outs
(bad)
movs
inc
mov
sbb
movs
inc
mov
(bad)
adc
xor
jb
inc
enter
xor
test
test
xlat
jb
xor
test
pmulhuw
test
test
and
leave
adc
nop
add
cld
jno
and
(bad)
lods
inc
in
add
and
jae
inc
enter
test
sbb
adc
ret
push
or
sbb
pop
add
test
xor
jne
jne
enter
mov
jne
add
dec
sahf
lds
in
xor
and
and
sub
les
jbe
xor
out
dec
sbb
inc
mov
out
mov
inc
push
addr16
sub
add
add
xchg
add
dec
test
sub
js
xchg
add
push
push
cmp
pushf
pop
jns
mov
inc
jns
in
pushf
jge
pushf
jp
retf
pop
push
xor
bound
dec
or
test
dec
lods
sbb
aaa
jno
js
mov
test
nop
adc
cmp
jnp
cmps
in
push
cmc
jl
shl
pop
jge
cmp
pop
enter
jl
and
inc
jle
add
mov
pop
sub
xchg
push
ret
push
adc
cmps
xchg
pop
cmps
ins
jg
mov
jo
and
push
loope
xor
ror
dec
push
dec
dec
sub
sub
retf
or
jb
daa
add
adc
adc
loope
mov
nop
add
rol
xchg
push
pop
je
and
inc
das
sbb
out
mov
adc
adc
sbb
les
push
icebp
add
jne
and
jo
sbb
inc
addr16
xor
push
nop
or
inc
out
or
and
sbb
xchg
mov
push
jmp
daa
adc
test
mov
xlat
pop
add
xchg
scas
imul
add
loopne
add
xchg
and
xchg
cwde
sub
popf
xchg
stos
bound
loope
add
aam
pop
mov
push
and
clc
clc
inc
add
bnd
and
mov
sbb
movs
fadd
outs
cmp
das
sbb
jge
mov
fidivr
es
popa
jnp
test
sub
pop
mov
enter
mov
inc
repnz
push
fadd
mov
cmp
push
add
loopne
pop
repnz
loopne
mov
mov
ins
sbb
or
cld
dec
(bad)
rcl
dec
and
(bad)
inc
sbb
mov
dec
push
pop
add
fs
sub
sbb
xchg
add
inc
xor
sbb
push
sub
pop
ret
aam
pop
(bad)
lahf
add
pop
add
dec
or
(bad)
lahf
int
and
seto
ins
ins
ret
inc
popf
rcl
nop
addr16
lahf
or
stc
xchg
push
in
inc
dec
sbb
mov
xchg
inc
cmp
out
jb
xor
je
mov
je
xchg
push
repnz
sahf
adc
jo
jb
pop
add
pop
xchg
pop
pop
aam
les
xlat
or
addr16
mov
push
rol
ins
pop
inc
mov
lock
add
xor
mov
call
loop
pusha
add
mov
fidivr
imul
pop
test
xchg
mov
inc
pop
jo
lods
pushf
cmp
pushf
and
stos
cmps
xor
loop
add
xor
inc
lods
pop
inc
dec
sbb
cmp
or
pop
fwait
ret
jo
pop
imul
inc
loope
imul
cmp
and
mov
push
add
(bad)
xchg
mov
enter
aam
mov
adc
fwait
cmp
call
arpl
lahf
jb
sbb
mov
add
sbb
ins
dec
dec
push
add
mov
lea
movs
sbb
mov
inc
pop
mov
not
test
mov
test
inc
dec
push
es
je
cwde
imul
scas
lods
adc
sbb
repnz
fistp
jns
pop
cmc
(bad)
mov
inc
call
dec
sub
jnp
addr16
test
mov
(bad)
mov
stos
push
sbb
xlat
push
add
mov
es
jae
aam
adc
leave
dec
cdq
mov
pop
or
mov
push
mov
mov
das
or
or
outs
out
sahf
sbb
mov
sub
pop
pop
clc
js
gs
test
inc
mov
dec
add
sbb
add
stc
sub
adc
adc
stc
push
ds
and
and
and
nop
and
and
push
stc
push
ds
sub
xor
xchg
dec
in
daa
xor
sub
cmp
in
stc
push
cmp
sub
sub
ds
dec
inc
test
dec
les
dec
inc
in
stc
in
das
push
or
push
addr16
lahf
scas
xor
pop
push
xor
mov
pushf
xor
cmps
bnd
adc
push
ds
rcr
cwde
mov
mov
inc
adc
in
mov
retf
mov
inc
cmp
adc
inc
adc
outs
pop
adc
push
ds
jo
push
adc
loope
stos
mov
fmul
cmps
dec
adc
lahf
scas
inc
mov
dec
dec
rcl
test
jl
les
adc
xlat
jne
in
mov
out
mov
loopne
mov
pop
mov
adc
inc
push
adc
mov
push
adc
lahf
push
adc
add
push
aam
jne
push
adc
ja
daa
mov
lock
mov
sbb
adc
daa
sbb
mov
adc
daa
(bad)
ja
adc
adc
movs
jg
adc
cmp
and
pop
shl
push
ins
mov
cmp
rcr
inc
frstor
cmp
adc
cmp
js
add
sbb
mov
adc
jp
mov
jl
pop
jle
mov
clc
pop
dec
adc
pop
imul
call
cdq
dec
adc
adc
or
mov
popa
out
mov
push
fbld
adc
jge
or
sbb
hlt
sbb
lahf
(bad)
push
in
ficom
cld
arpl
addr16
lock
es
cmp
shl
push
(bad)
das
es
adc
xchg
arpl
cli
sbb
xchg
xlat
adc
sbb
repz
retf
imul
jge
aas
(bad)
hlt
adc
es
(bad)
(bad)
sahf
sbb
jae
adc
test
js
aas
sub
mov
sub
clc
das
call
out
inc
mov
dec
add
xor
and
mov
mov
adc
inc
add
dec
cmp
jb
fsubr
sub
pop
cmp
jmp
je
xchg
icebp
fbld
mov
add
cmp
loope
(bad)
mov
or
pop
pop
cmp
(bad)
cld
sbb
mov
cmp
ja
sbb
and
out
sahf
xor
repz
rol
pop
and
xor
iret
repz
aas
inc
dec
push
pop
bound
dec
mov
popa
adc
inc
mov
sti
sbb
xchg
aas
cs
cld
sub
mov
out
or
adc
(bad)
mov
mov
aam
mov
call
add
jne
push
push
add
push
pop
clc
cdq
sbb
fadd
or
mov
pop
xor
int3
inc
inc
inc
(bad)
or
aam
lock
inc
inc
hlt
clc
cld
ret
jg
lock
jne
adc
ror
ja
add
add
mov
mov
addr16
adc
or
xchg
aas
jno
jne
sar
mov
mov
test
jmp
pop
es
sbb
and
sbb
in
or
fsub
lds
fdiv
inc
sub
push
nop
in
adc
add
call
sti
dec
pusha
arpl
or
je
push
les
aaa
push
pop
push
mov
clc
rol
inc
sub
cmps
or
(bad)
mov
mov
sub
lods
adc
jg
mov
add
add
outs
inc
out
jg
dec
mov
stos
jg
add
add
pusha
mov
inc
aam
daa
dec
daa
adc
jo
mov
(bad)
push
aas
pop
mov
and
(bad)
push
ja
add
jmp
movs
inc
iret
addr16
inc
loope
fist
push
sbb
outs
ror
dec
dec
inc
fist
jnp
sbb
jo
push
popa
sti
sahf
bound
and
xchg
or
jnp
jne
jge
pop
mov
scas
jbe
je
or
sbb
push
(bad)
xor
dec
add
ds
push
clc
imul
clts
cmps
or
repnz
rol
(bad)
ja
add
pop
dec
mov
das
jbe
pop
ss
push
adc
or
fidivr
push
add
xchg
dec
test
mov
popf
idiv
lock
dec
mov
push
lock
ds
test
les
adc
pop
pop
sub
push
add
loope
add
add
ss
pop
pop
test
cs
retf
push
dec
add
repnz
add
add
push
mov
dec
sub
push
sub
mov
adc
push
dec
xor
pop
xor
rdmsr
sahf
test
out
or
cmps
xor
jbe
stos
sahf
jbe
aaa
add
push
pop
mov
xchg
and
cmc
and
lods
add
retf
pinsrw
je
inc
push
inc
rcl
and
xor
inc
neg
mov
adc
dec
aam
inc
jge
jne
jo
jb
(bad)
rol
mov
inc
pop
repz
or
mov
pop
push
mov
pop
pop
ja
pusha
into
xchg
xor
outs
ins
or
outs
test
cdq
inc
cmp
lfs
dec
inc
pop
stc
dec
iret
pop
cmp
jo
inc
xor
sub
inc
ins
gs
pop
adc
or
movs
pop
outs
mov
loop
ret
mov
jbe
inc
or
ins
gs
pop
ja
sbb
retf
jb
outs
jae
or
sub
pop
inc
add
outs
mov
sbb
sub
cmp
or
inc
inc
in
popf
cmp
mov
aam
pop
mov
sub
sub
add
sbb
sbb
push
push
inc
scas
sub
loope
pop
inc
jns
sbb
int3
mov
ror
imul
arpl
push
sub
inc
mov
adc
inc
ins
pop
cwde
jb
and
mov
push
and
pop
pop
sub
add
or
mov
mov
mov
mov
mov
lods
and
ret
mov
jp
push
add
and
and
xor
xchg
and
inc
inc
sbb
aam
inc
mov
loopne
sub
inc
dec
add
addr16
fwait
call
add
or
xor
mov
adc
jbe
xor
xchg
retf
inc
add
add
add
inc
cmc
mov
adc
adc
ja
inc
and
ins
jns
mov
and
jne
ins
adc
fadd
je
outs
ins
fmul
or
mov
in
adc
xchg
gs
leave
fwait
call
pop
aad
mov
add
add
add
and
jne
stos
inc
ins
mov
add
sub
cmp
pop
cmp
das
mov
xchg
push
out
jae
ins
fwait
xor
mov
xor
add
lock
jg
sbb
gs
or
in
into
or
add
adc
jo
out
and
ins
popf
add
push
dec
std
push
mov
jle
sbb
sar
pop
popa
pusha
inc
fisttp
jo
popa
arpl
add
cmp
push
std
pop
inc
(bad)
jo
(bad)
xor
mov
push
mov
pushf
fistp
xchg
inc
mov
dec
push
and
adc
dec
push
jg
push
hlt
cmc
push
and
bound
adc
jnp
lock
add
push
xor
add
shr
setbe
lods
dec
pop
inc
scas
fild
xor
test
fwait
or
jnp
scas
ja
pop
in
out
dec
rsqrtps
in
pop
mov
mov
xor
idiv
inc
lock
push
push
mov
pop
adc
cmp
pop
sbb
push
adc
push
add
or
int
pushf
xchg
inc
gs
cmp
or
test
mov
mov
inc
jne
ret
pop
or
jne
xchg
sub
jb
inc
rcr
jmp
inc
movzx
push
rcr
mov
jmp
inc
add
dec
outs
(bad)
loopne
and
in
push
mov
add
and
mov
leave
mov
popa
dec
call
inc
ja
push
dec
in
retf
inc
dec
adc
push
daa
inc
sbb
add
leave
es
cdq
jle
mov
cld
fadd
cmps
jmp
sbb
xchg
test
xchg
and
xchg
shl
add
add
cmp
lea
cmps
cdq
mov
in
pusha
es
pop
xchg
ret
sub
or
test
(bad)
(bad)
xlat
mov
mov
push
push
mov
mov
add
add
ins
sub
inc
mov
mov
and
add
loopne
dec
cmps
movs
jb
(bad)
add
adc
test
xor
fcmove
sbb
std
(bad)
dec
push
cmp
movs
add
retf
addr16
arpl
xor
aad
int3
xor
inc
aaa
outs
push
dec
pop
cmovl
fsubr
jbe
cmp
or
push
test
ins
add
int3
inc
rcl
xchg
mov
push
shr
cld
pop
inc
bound
rcl
cmc
cld
mov
add
sub
push
ror
loop
mov
scas
sar
test
fild
fadd
sti
les
ret
dec
add
mov
jbe
ror
push
cld
mov
dec
ja
xor
imul
ins
mov
es
dec
inc
sbb
push
jo
or
adc
(bad)
push
add
xor
ror
inc
sbb
pop
outs
in
sbb
lods
int3
ret
pop
mov
adc
push
add
or
inc
pop
or
pop
adc
or
cld
loope
fsubr
push
mov
scas
movs
enter
sub
sub
or
or
cmps
or
repnz
mov
mov
jmp
xchg
mov
mov
pop
or
push
add
loopne
mov
push
push
jmp
icebp
mov
je
mov
fadd
inc
mov
push
pop
inc
mov
sbb
(bad)
or
mov
fwait
rol
push
hlt
arpl
scas
mov
add
and
shl
out
fprem
sub
and
not
and
xchg
in
icebp
jmp
mov
push
dec
cmp
je
add
inc
xor
adc
mov
lea
sbb
add
xor
js
call
call
shl
xchg
mov
sbb
and
or
pop
inc
mov
mov
bound
sahf
add
sub
rcl
jmp
pop
pop
punpckldq
push
loope
je
outs
popa
jbe
popa
mov
sahf
pop
fild
xor
mov
in
outs
ja
js
add
or
ja
cmp
mov
push
das
mov
or
rcl
and
inc
fwait
ins
sub
adc
pushf
add
cmp
pop
fsubrp
jnp
imul
push
nop
fiadd
in
push
xor
in
fld
ds
add
pusha
cvtps2pd
sub
mov
pop
xor
add
packssdw
int3
or
push
add
lahf
(bad)
adc
stc
pop
add
sbb
addr16
dec
lods
mov
out
cmp
or
mov
xor
test
sub
call
dec
aaa
mov
cdq
cmp
cmovae
pop
bound
add
in
fsubr
push
add
ffree
aam
pop
ficomp
repnz
add
popa
or
push
sbb
loope
mov
cmps
(bad)
push
int
movs
mov
sbb
imul
aas
push
cmp
in
clc
and
add
cmp
popa
jmp
test
sbb
mov
(bad)
sbb
inc
or
dec
pop
ja
fstp
inc
mov
out
pop
xchg
pop
sub
push
or
emms
cmps
rcr
sbb
mov
dec
pusha
sub
jg
movs
jecxz
outs
or
(bad)
push
test
stos
pop
or
mov
mov
aad
mov
les
cmp
xlat
fidiv
retf
fistp
push
fcom
in
sahf
(bad)
inc
shl
push
pushf
loop
jecxz
mov
pop
fcmovbe
push
lods
int3
into
aam
or
dec
xchg
not
stc
sbb
sbb
shl
fimul
test
cld
sahf
xor
xchg
call
loopne
idiv
ss
sub
pop
push
out
add
imul
ss
idiv
(bad)
pusha
rol
cld
(bad)
clc
call
push
mov
rcr
ds
sbb
fidiv
add
sub
dec
push
scas
aaa
xlat
inc
push
add
push
lock
jecxz
or
jge
pop
(bad)
unpckhps
movhps
movhps
ror
outs
(bad)
jl
fcomi
psrad
ror
add
add
xor
inc
ret
rdpmc
add
sub
push
mov
add
movups
and
xor
sbb
mov
and
addr16
loopne
xor
mov
rcl
loop
adc
add
lock
sub
nop
inc
(bad)
sbb
enter
pop
or
leave
ds
daa
call
sub
stos
add
std
addr16
jb
inc
rcr
jp
(bad)
fmul
stos
add
outs
pop
fld
cmp
pop
outs
ss
mov
push
imul
lea
cmp
clc
sbb
adc
pop
cs
mov
ins
cmc
imul
out
test
out
cmps
dec
lock
dec
outs
or
or
add
adc
in
pop
jns
mov
add
enter
retf
icebp
fmul
or
stos
push
popa
icebp
add
pop
fmul
pop
aas
inc
sub
mov
adc
mov
add
inc
or
shr
sbb
sub
leave
pop
dec
and
or
leave
sub
mov
popa
inc
enter
leave
push
push
add
dec
rol
xchg
out
dec
or
movs
inc
and
inc
push
or
or
fmul
push
fisubr
loop
cmc
adc
call
(bad)
inc
dec
mov
add
das
push
arpl
xor
les
lea
cmp
sub
push
ins
and
pushf
jo
cli
fiadd
xor
sar
and
push
sti
gs
es
test
popa
shl
xchg
inc
cmp
cmp
add
mov
mov
pop
stos
iret
adc
pop
add
push
test
shl
pop
aad
sub
daa
jae
ficom
pop
sbb
mov
inc
call
arpl
enter
xlat
ins
out
or
push
fild
add
mov
ins
inc
dec
sbb
mov
sbb
(bad)
sbb
inc
xchg
push
dec
sub
inc
gs
or
data16
fnsave
and
in
mov
aas
stc
or
mov
stc
dec
jg
dec
dec
mov
dec
ins
add
sti
clc
mov
clc
out
add
add
adc
popa
sub
(bad)
(bad)
sub
or
pop
inc
int
jae
shl
mov
dec
inc
mov
mov
inc
push
cmps
not
cmp
fwait
inc
dec
or
rol
pop
(bad)
mov
seta
lods
mov
mov
or
dec
dec
retf
mov
or
adc
lea
inc
fs
adc
fs
movs
jo
aas
out
dec
push
xor
scas
(bad)
sbb
jb
jg
and
shl
or
addr16
adc
inc
cmp
loopne
push
sahf
pop
retf
jmp
push
sbb
ja
imul
ror
pop
add
adc
push
cmp
add
lods
add
add
add
sub
cmc
aam
sbb
inc
daa
xor
inc
inc
fadd
add
retf
arpl
les
add
or
cld
gs
jecxz
inc
fadd
call
push
sti
dec
test
add
mul
or
lea
loopne
int
pushf
bound
xor
cmc
mov
test
pop
inc
jg
jp
add
les
push
or
inc
or
aas
pusha
adc
in
pushf
in
mov
ins
aam
fiadd
iret
sbb
jmp
push
pop
jno
or
or
jns
jmp
retf
aam
add
add
arpl
dec
adc
ss
sbb
dec
add
xor
loopne
fs
aam
and
sbb
add
mov
sub
lahf
cdq
mov
or
inc
add
pop
mov
pop
pushf
pop
popa
push
call
popa
inc
loop
in
idiv
push
add
push
dec
add
lock
mov
add
shl
stc
ret
nop
popa
arpl
push
mov
inc
xor
clc
push
test
data16
xchg
loop
jmp
add
aaa
mov
clc
mov
or
dec
call
add
mov
outs
sbb
sgdtd
pop
sbb
xor
cwde
mov
loop
sub
nop
sbb
lods
popa
test
clc
mov
add
jg
pop
ret
sub
pop
mov
add
and
rcr
and
adc
or
jb
(bad)
dec
(bad)
sbb
es
sub
cmc
ret
sub
pop
je
lea
adc
xor
test
rcr
in
in
xor
popf
test
mov
xchg
mov
sub
or
imul
adc
ja
test
xor
inc
pushf
inc
sbb
ret
inc
or
add
mov
iret
pop
push
xor
push
push
push
imul
ins
pusha
rol
(bad)
sti
push
iret
cld
jmp
les
shl
and
pusha
imul
sbb
or
mov
push
adc
enter
imul
test
sbb
pushf
jo
push
and
shl
jl
add
dec
adc
xor
mov
add
jmp
lods
adc
les
push
pop
ja
sbb
adc
mov
fcom
(bad)
fmul
xor
pop
lea
mov
or
add
mov
add
xor
ret
fist
sbb
adc
jne
ret
scas
inc
cmp
lea
xchg
mov
push
arpl
mov
mov
jmp
cmp
je
pop
aam
mov
and
pop
and
pusha
sti
rcl
js
sbb
adc
push
lea
adc
test
mov
mov
les
jmp
js
in
push
pop
inc
arpl
dec
jle
aas
jmp
js
inc
dec
mov
mov
rcl
inc
ins
sub
jbe
xchg
fcom
mov
aas
fsubr
imul
in
test
jmp
add
mov
loopne
inc
add
push
dec
jmp
mov
sbb
pusha
sbb
int
sub
out
xor
call
jmp
shl
dec
sub
pusha
imul
add
or
es
cmps
xor
cmps
sbb
add
jo
sub
dec
js
rcr
mov
ja
add
ins
push
fwait
icebp
mov
cmp
add
push
(bad)
cmp
inc
mov
jl
mov
arpl
rcr
mov
pop
stc
cmp
addr16
push
pop
mov
push
mov
add
adc
and
not
xor
push
pop
xor
es
jne
sbb
push
inc
jmp
xor
bound
mov
add
fild
dec
mov
addr16
(bad)
out
sbb
lahf
je
mov
clc
sets
pop
jns
ja
test
push
pop
test
fs
and
cmp
push
ss
add
dec
or
fst
enter
fmul
adc
retf
enter
adc
cmp
jne
adc
jge
(bad)
pop
xchg
mov
sub
(bad)
add
dec
or
mov
push
out
ret
and
mov
ins
and
jns
sub
mov
lods
les
push
dec
add
pop
sbb
fstp
add
cmp
sub
lahf
cmc
inc
loopne
pop
pop
xchg
sar
cmp
adc
inc
dec
xchg
arpl
xor
ficom
rcl
outs
fsubr
inc
test
repnz
imul
pop
pop
loopne
sub
stos
rol
rol
loopne
push
int3
test
jmp
fild
test
sub
mov
test
nop
arpl
inc
loop
fsub
inc
xchg
stc
js
inc
test
push
xor
inc
mov
imul
cmp
push
or
shl
xor
fcmovu
fsub
adc
cmc
pusha
sub
scas
and
clc
xchg
mov
fbld
popa
jno
or
das
dec
inc
mov
sbb
cmp
and
movs
cmp
fidivr
dec
add
xor
cmps
xlat
push
add
jns
fld
or
ins
xor
xor
sar
sbb
cdq
jl
mov
imul
pushf
push
mov
mov
xor
cs
dec
iret
test
inc
int
fwait
sbb
dec
cmp
jg
push
cmp
push
aas
sbb
xor
sbb
mov
xor
pop
push
aad
ret
jbe
mov
pop
jmp
and
jb
hlt
hlt
lea
(bad)
xor
inc
xchg
xchg
push
adc
je
mov
fisttp
xor
xor
call
sar
xor
cld
cmp
jne
xor
fisttp
retf
push
xchg
or
mov
xor
pop
sub
enter
push
xchg
or
rol
scas
call
stc
call
mov
gs
lock
push
into
scas
sbb
mov
mov
in
jbe
sub
fstp
inc
inc
jne
arpl
test
jns
or
dec
std
adc
mov
inc
dec
into
bound
xchg
mov
les
repnz
test
mov
bnd
cli
push
retf
clc
arpl
adc
pop
and
clc
sbb
pop
or
fninit
bound
mov
inc
mov
cmp
xor
dec
retf
aam
call
mov
dec
adc
pop
or
lahf
ror
dec
stc
dec
stos
push
push
jb
ret
cli
sbb
cmp
or
mov
hlt
or
push
xor
(bad)
sub
psllw
fcmovu
pop
adc
test
push
sbb
iret
pop
cmp
cld
(bad)
call
jge
push
lea
xchg
adc
rcr
in
push
jbe
jnp
pop
in
imul
adc
sbb
cmp
outs
in
add
div
and
adc
mov
jg
pop
aas
push
cmp
lea
mov
push
rep
cmp
fnsave
test
rcr
cmps
movs
adc
jo
fiadd
nop
inc
sub
cmps
ficom
xor
jle
add
mov
out
push
push
push
mov
mov
ret
hlt
push
mov
cwde
test
rcr
inc
mov
mov
cmp
leave
xor
clc
clc
cmp
or
xchg
inc
dec
and
aam
or
cmp
add
push
aaa
sar
shl
call
loopne
mov
pop
je
into
iret
in
add
xor
or
es
mov
mov
cli
pop
adc
add
xchg
push
clc
jne
cmc
test
xchg
lods
fs
ror
aas
xchg
and
aam
es
xchg
into
mov
push
mov
xchg
xor
pushf
inc
clc
test
mov
lock
es
les
jmp
das
or
sub
cmp
xor
xchg
inc
and
movaps
add
add
pop
retf
inc
add
push
cld
or
xor
aas
add
push
cld
add
add
pop
push
mov
cmp
nop
das
mov
xchg
pop
add
loop
retf
cmpps
push
fdivr
call
dec
adc
or
xchg
jg
data16
sbb
lea
retf
xor
sub
xor
inc
ret
cs
adc
cs
ins
das
sar
pop
jle
inc
(bad)
cmp
jmp
pop
jmp
pop
jmp
mov
push
jecxz
sbb
mov
push
imul
push
shl
push
inc
sub
sti
jp
pop
jne
ret
add
or
mov
xchg
inc
cmp
jl
sub
cmp
dec
scas
shl
pop
or
hlt
push
data16
and
cmp
popa
fs
push
push
or
lds
or
and
cmp
pop
mov
es
or
fcomp
sub
mov
push
xchg
out
cmc
ins
lock
aaa
aad
clc
fwait
jecxz
push
pop
jmp
mov
sbb
dec
std
imul
jmp
clc
ds
pop
jns
into
(bad)
jp
ret
out
pop
adc
lods
sbb
adc
xor
ins
ins
inc
sub
pop
jge
ss
mov
rcr
add
fcmovnbe
in
rol
add
push
lds
cld
jo
mov
lock
add
and
cld
sbb
xchg
sbb
rcl
jecxz
inc
test
ret
xor
push
add
add
cmp
call
or
push
pop
jne
lods
mov
mov
cdq
sub
pop
xor
pop
pop
adc
inc
pop
(bad)
mov
repnz
adc
and
or
jbe
add
mov
cmp
test
cmp
push
out
sar
in
frstor
jmp
add
mov
mov
add
int3
or
outs
lods
fnsave
mov
or
dec
test
xchg
sbb
sub
mov
jno
jge
stc
mov
sub
push
mov
dec
add
(bad)
cwde
in
stos
inc
hlt
rol
and
and
inc
or
(bad)
ins
std
imul
push
clc
add
add
inc
add
xor
or
inc
add
mov
ror
cli
cmps
and
cdq
jbe
mov
addr16
nop
pop
stos
imul
sbb
test
popa
das
dec
test
xor
ror
pop
inc
ja
fstp
push
mov
and
nop
retf
lea
imul
out
xor
and
pop
cwde
pop
or
rol
cwde
pop
adc
fst
mov
xlat
mov
inc
mov
and
loope
inc
push
push
jmp
fcom
dec
xor
pop
or
retf
xchg
mov
inc
pop
jmp
jmp
sbb
dec
jecxz
xor
add
clc
lea
aad
inc
in
inc
mov
inc
outs
mov
icebp
movs
ret
sbb
fist
mov
add
setne
or
ror
inc
sub
pop
dec
(bad)
aam
ja
imul
or
sbb
fimul
push
mov
hlt
dec
dec
sti
push
or
test
and
mov
add
add
add
sub
sub
cmp
inc
mov
jbe
call
jmp
in
xor
adc
push
adc
push
pop
jne
jbe
call
dec
sub
clc
daa
cld
pop
or
pop
add
inc
pop
out
rol
dec
test
mov
rcl
retf
adc
inc
neg
xchg
repnz
js
(bad)
jmp
test
outs
or
push
inc
cmp
or
xchg
jo
jge
add
imul
cmp
loopne
cmps
mov
and
neg
shl
xor
dec
das
mov
push
and
lods
add
sbb
sbb
loop
inc
popf
add
imul
cwde
sub
ret
cmp
push
dec
cmp
nop
es
(bad)
mov
mov
inc
xor
inc
add
js
push
jmp
and
xchg
push
mov
add
jmp
inc
enter
push
push
in
(bad)
mov
je
jp
add
das
or
jns
iret
pop
and
push
adc
in
dec
inc
pop
sbb
and
into
and
mov
jo
arpl
jae
movs
inc
ins
mul
out
cmp
add
ja
iret
in
jbe
pop
fmul
loop
enter
sub
ja
add
xor
cmc
iret
js
hlt
in
add
imul
jmp
call
ins
add
ficom
cmp
pop
movs
push
lds
adc
out
add
js
inc
loopne
movs
aaa
out
retf
inc
sub
inc
str
sar
outs
push
adc
pop
jp
(bad)
out
punpckhdq
mov
and
push
add
add
inc
sub
mov
ror
icebp
(bad)
mov
push
or
mov
or
repnz
js
jne
cs
stos
repnz
mov
retf
es
or
jb
lods
push
test
lods
dec
push
(bad)
aad
push
fld
repnz
sbb
lahf
and
ins
mov
dec
jge
loopne
or
xchg
adc
and
push
popa
jo
add
dec
pop
aas
xor
push
test
pop
(bad)
and
(bad)
(bad)
adc
add
outs
arpl
je
punpckhdq
inc
jno
and
mov
jno
repnz
add
jno
adc
jg
adc
mov
sub
xor
rol
push
adc
jo
or
cmc
add
scas
les
arpl
push
out
add
push
mov
add
nop
stc
mov
fst
repnz
jne
or
retf
sub
pushf
das
jno
pop
cmp
pop
ins
inc
lea
dec
push
mov
or
pop
mov
aam
adc
test
lds
inc
xor
jb
add
int
sti
xor
cdq
test
add
add
int
test
idiv
mov
xlat
mul
jnp
cmp
(bad)
clc
lahf
jg
ds
sbb
push
(bad)
jmp
inc
stc
sub
adc
xchg
xchg
mov
dec
dec
prefetch
fwait
lods
mov
enter
sti
outs
inc
push
in
imul
str
adc
mov
daa
call
dec
mov
movs
mov
adc
push
std
pop
adc
xchg
setge
rcl
xchg
dec
pop
add
scas
loopne
dec
sbb
xchg
pop
sbb
bndldx
jnp
cld
std
jne
aam
sbb
loop
sbb
in
sbb
sub
aas
jb
push
push
add
nop
sub
stc
and
push
aas
sahf
(bad)
jge
out
adc
mov
jge
scas
add
pminub
dec
clc
out
jbe
test
push
push
daa
add
sub
sub
or
push
add
push
pop
out
scas
test
xor
inc
mov
sbb
push
inc
pop
push
call
sbb
gs
mov
mov
push
xchg
sbb
stc
sbb
arpl
movs
sub
add
test
outs
dec
pop
xchg
inc
push
sbb
aas
and
call
and
clc
mov
push
dec
outs
arpl
popa
scas
into
dec
add
pop
pop
leave
inc
gs
jmp
arpl
scas
ins
inc
test
pusha
pop
xrelease
pop
les
mov
mov
mov
pop
inc
adc
fist
pop
mov
adc
cmp
mov
xchg
dec
jns
cmp
clc
clc
dec
ins
xor
sbb
sub
or
xchg
out
adc
repz
xchg
int3
sbb
mov
out
pop
and
dec
cli
and
mul
or
xchg
test
jmp
push
jge
scas
add
mov
pop
les
lahf
push
fsubr
(bad)
sti
inc
or
or
mov
inc
adc
xchg
aad
pop
mov
sbb
xor
pop
xor
adc
xlat
mov
adc
test
in
mov
adc
cmps
pop
add
inc
inc
add
xchg
lods
adc
leave
xchg
loopne
ss
inc
or
sub
push
or
inc
push
or
xchg
ret
push
push
mov
jae
dec
and
sub
add
xchg
in
xchg
xchg
add
jae
fsubr
cmp
mov
add
rol
enter
mov
adc
xor
jo
fistp
jnp
sbb
mov
sub
push
rol
pop
jg
adc
sbb
push
xchg
rcr
nop
pusha
xor
mov
push
nop
and
iret
or
xor
lods
or
pusha
add
shl
add
add
add
mov
or
sbb
pop
push
add
inc
call
and
std
adc
sbb
inc
arpl
add
dec
pushf
rol
dec
addr16
test
jp
addr16
xor
mov
pop
dec
cld
repnz
pushf
mov
ror
hlt
or
xchg
lock
add
jge
and
pop
pop
add
add
lods
inc
aaa
sub
push
lds
(bad)
cdq
dec
scas
add
xor
push
xchg
adc
retf
test
push
or
pop
add
out
in
dec
sbb
add
and
iret
clc
and
add
sti
mov
addr16
js
lds
or
cld
pop
inc
add
jle
cmp
imul
jne
lock
push
add
lea
push
inc
hlt
gs
stos
lds
data16
adc
iret
jbe
fmul
loop
and
idiv
sbb
mov
mov
sbb
xchg
hlt
push
sub
and
inc
outs
mov
pop
pop
pusha
mov
aaa
hlt
pop
ror
aam
mov
sar
add
mov
dec
xchg
xlat
(bad)
movs
mov
mov
push
cs
ret
jmp
popa
jl
lea
clc
mov
jecxz
jnp
in
sldt
pop
sbb
add
test
xchg
ret
out
add
mov
cmps
mov
add
test
and
mov
rol
imul
outs
and
push
dec
adc
rol
repz
sub
mov
lahf
push
sbb
jmp
jge
shl
or
or
out
and
nop
in
test
cmp
add
ja
clc
sub
dec
in
adc
repz
sub
dec
or
inc
clc
push
daa
push
add
or
gs
and
cmp
jle
or
pop
jl
mov
dec
cs
xchg
jne
xor
push
sbb
in
pop
and
loopne
cs
xor
adc
movs
pop
adc
pop
ret
xchg
add
mov
adc
push
das
out
dec
in
xchg
cmp
iret
mov
mov
mov
add
jbe
inc
or
imul
jge
in
inc
mov
es
jmp
jg
div
inc
add
arpl
aas
mov
inc
int
leave
ret
adc
xor
dec
or
ins
cmp
test
xchg
in
dec
mov
popa
add
fld
mov
dec
adc
push
mov
push
add
aas
and
enter
sbb
xadd
dec
fdiv
push
ret
fisttp
fild
push
dec
mov
xchg
jmp
mov
jbe
xor
inc
xor
add
out
jp
mov
jo
inc
push
cdq
or
adc
rol
jmp
clc
jg
lea
inc
hlt
mov
leave
and
mov
(bad)
mov
adc
inc
ss
jo
or
cmp
shr
outs
push
cmp
adc
push
stos
adc
add
cmp
in
clc
jae
inc
lea
mov
pop
cmc
ins
xor
or
in
push
add
push
mov
or
cmp
mov
ins
jmp
call
sbb
jp
loop
call
xor
and
(bad)
mov
imul
aam
int
or
adc
lea
in
ret
jo
push
jmp
je
mov
dec
add
mov
dec
lock
ins
add
into
xor
shr
rcr
fdivr
pop
in
pop
adc
inc
inc
dec
adc
outs
xor
xchg
mov
ds
xchg
fdivr
and
pop
rcr
jmp
es
daa
jle
nop
dec
push
in
ss
mov
repz
pop
(bad)
push
fadd
jmp
mov
inc
push
push
jp
sahf
mov
fidivr
out
out
or
sahf
out
inc
push
fs
out
sahf
out
mov
sbb
jb
jbe
mov
add
and
shr
sbb
inc
fs
sbb
aam
(bad)
and
xlat
ss
neg
and
push
inc
data16
mov
push
imul
dec
xchg
xor
int3
enter
adc
ret
push
mov
loope
inc
cmp
inc
ret
shr
pushf
not
xlat
jmp
sbb
fs
ins
pop
dec
gs
frstor
jmp
sbb
in
loope
add
sbb
sub
mov
pop
repnz
in
in
push
std
bound
or
push
jmp
adc
pop
adc
lock
scas
jmp
pop
lea
lock
adc
gs
clc
nop
mov
icebp
jbe
sbb
sub
dec
and
sub
sbb
idiv
loopne
sbb
call
shr
inc
sbb
retf
jp
jmp
inc
mov
gs
mov
pop
add
mov
std
push
cmp
loopne
jl
adc
jle
movs
xor
cmps
jbe
mov
cmc
call
adc
xor
jno
and
jmp
or
push
add
dec
fs
add
gs
add
not
and
inc
inc
xchg
jg
mov
add
add
addr16
dec
add
mov
jmp
xchg
add
push
pop
mov
push
add
movs
clc
xchg
jle
outs
inc
adc
inc
add
adc
pop
jbe
and
daa
cmp
cmps
icebp
adc
push
test
sub
mov
imul
adc
push
lahf
inc
jmp
je
jae
adc
fisubr
or
adc
or
dec
inc
fisub
sbb
sbb
movs
ss
fmul
pop
gs
mov
jns
outs
mov
or
jo
push
or
pusha
or
inc
jns
sub
mov
adc
das
or
outs
loopne
mov
cld
inc
xor
push
jbe
push
pop
inc
sahf
sub
mov
lea
or
imul
icebp
mov
vcvtdq2ps
pop
ret
popa
stos
push
dec
cmps
lock
pop
lahf
outs
and
outs
push
xchg
dec
outs
ins
imul
xor
push
ja
mov
or
inc
loopne
or
fiadd
emms
inc
gs
out
mov
or
popf
add
inc
mov
add
sbb
mov
movs
mov
int3
adc
movs
ja
inc
or
jmp
inc
add
inc
push
adc
sub
and
or
movs
jg
int
add
push
lahf
jno
pop
pop
add
push
sbb
cmp
das
popa
push
xchg
(bad)
mov
addr16
sbb
mov
xchg
sbb
push
push
mov
inc
push
push
cmp
adc
lea
jo
push
sub
and
adc
out
inc
sbb
cld
push
or
sbb
push
add
sub
cmps
in
dec
lods
fs
shl
push
mov
jle
rol
outs
sub
inc
loopne
mov
imul
pop
adc
sub
adc
or
mov
dec
xchg
or
xchg
add
or
sbb
push
stos
jnp
add
jo
or
inc
fcmovb
ret
xchg
dec
daa
mov
sbb
cmp
push
inc
outs
(bad)
popa
sub
cmp
pop
lods
imul
pusha
cwde
and
xchg
xchg
pop
pshufw
(bad)
fisttp
mov
shr
jo
(bad)
cmp
cmp
dec
add
pop
bound
add
sbb
inc
or
dec
cmp
mov
cmp
xchg
and
je
les
rol
push
pusha
mov
xor
les
and
push
cmp
jg
cld
pop
test
and
rcr
cmp
dec
je
add
jp
xor
mov
and
add
inc
call
nop
rcr
lods
push
add
mov
adc
lods
mov
dec
xor
pop
jb
or
push
mov
sbb
fbstp
xor
outs
or
xchg
inc
inc
jmp
fmul
lea
(bad)
jp
je
inc
enter
push
add
push
mov
popf
in
push
push
push
fs
xor
add
pop
js
xchg
jb
dec
dec
loop
in
xchg
ins
xlat
xor
mov
xchg
mov
shl
inc
ror
inc
(bad)
push
or
inc
icebp
pop
adc
mov
jns
inc
push
pop
or
mov
rcr
pop
pop
js
cmps
(bad)
das
loop
ret
in
movs
daa
add
shr
rcl
cmp
mov
sbb
data16
sbb
push
dec
or
cs
and
and
sbb
mov
inc
sbb
loop
icebp
inc
or
cmp
std
push
xor
mov
imul
pop
pop
pop
push
enter
push
enter
jo
lahf
xchg
iret
dec
mov
inc
add
ds
adc
addr16
mov
pop
and
es
jg
sbb
clc
inc
ins
jb
add
adc
fild
xor
inc
jae
and
sub
cmp
xchg
or
mov
pop
fmul
loop
lods
add
or
add
mov
rcl
xlat
pop
sub
es
push
lods
pop
nop
setbe
adc
inc
mov
push
ror
cmp
cmp
pop
inc
cmovp
or
addr16
cmp
add
mov
pop
mov
dec
push
test
pop
cmp
cmps
or
or
in
ss
pop
sbb
push
cmps
mov
push
popa
imul
je
and
stos
add
test
data16
and
in
mov
repnz
icebp
div
jno
imul
or
pop
sub
and
dec
add
mov
test
add
rcl
sar
test
inc
push
(bad)
pop
adc
add
pop
xor
dec
cmc
fld
test
and
pop
adc
test
jl
sbb
and
push
xor
sbb
adc
pop
push
mov
xor
mov
jo
pop
adc
add
and
sbb
sbb
dec
add
xchg
sbb
jo
inc
ins
xchg
jnp
pop
cmp
mov
and
push
or
dec
and
shl
add
pop
add
sub
xchg
and
dec
and
(bad)
push
cvtps2pd
or
fwait
jne
xor
mov
sub
and
scas
jae
pop
or
push
iret
loope
bound
inc
push
cmps
(bad)
iret
sub
mov
addr16
mov
and
addr16
fmul
dec
push
push
dec
iret
push
jo
jns
lods
cmp
mov
shl
xchg
or
xchg
sbb
push
loope
mov
pop
sub
cmp
sub
mov
cmp
add
jne
and
fild
xor
sub
jnp
jae
pop
dec
lock
sub
ja
xor
adc
sbb
mov
xor
pop
add
jg
js
inc
sbb
push
xor
out
pop
inc
call
cmp
rsqrtps
and
push
xor
pop
and
mov
sub
mov
jo
jbe
or
push
pop
sub
adc
inc
jb
iret
add
mov
fild
xor
rol
and
mov
pop
xor
ss
sub
or
dec
xchg
sbb
movs
stos
(bad)
add
and
fwait
lock
and
pop
cld
das
add
rcl
xchg
sbb
mov
outs
jmp
pop
inc
inc
lock
shl
add
stos
(bad)
ja
push
enter
loop
rcl
push
push
outs
imul
lock
add
xor
cmp
sub
out
test
mov
sub
sub
fs
lods
sub
pop
inc
js
cmove
mov
pop
push
orps
dec
add
xchg
pop
push
jmp
sar
inc
jne
push
xchg
out
cmp
inc
mov
das
cmp
pop
adc
sbb
or
xchg
dec
jo
(bad)
sbb
or
shr
mov
shr
imul
xchg
sbb
ins
(bad)
hlt
das
inc
and
xor
cdq
mov
xchg
adc
setle
sbb
imul
popa
out
pop
inc
mov
js
jno
pop
xor
xchg
pop
push
adc
add
pop
or
pusha
push
sbb
push
or
aad
test
push
in
xor
pop
jo
inc
dec
add
mov
sub
sub
popa
arpl
pop
mov
inc
push
xor
mov
adc
mov
pop
sbb
cwde
add
add
push
and
fld
pop
dec
jle
jae
mov
pop
inc
add
xor
add
and
clc
das
(bad)
pop
dec
and
mov
pop
jo
fdiv
jo
jb
and
cs
call
lock
mov
inc
add
mov
bswap
not
mov
popa
xchg
push
add
lock
inc
or
loopne
xor
mov
xchg
pop
xchg
setp
fist
mov
fild
sbb
fdivr
mov
pcmpgtd
inc
mov
popa
mov
push
xor
xor
call
ds
in
mov
and
es
xor
pop
push
dec
rcl
add
push
push
dec
or
pop
dec
xor
adc
daa
ss
dec
scas
pusha
or
sbb
push
add
mov
lar
sub
or
sbb
xor
dec
push
jno
jne
pop
cmp
adc
push
fild
inc
xchg
sub
add
xor
jmp
hlt
xor
shr
mov
ds
push
xchg
rcr
xor
push
jb
ss
add
sbb
frstor
dec
add
cmps
lock
jbe
cmp
xor
add
(bad)
(bad)
loopne
push
mov
sub
xchg
or
push
dec
inc
push
inc
lea
jo
cmp
cmp
sti
or
or
xor
push
add
pop
out
ret
inc
(bad)
pop
pop
xor
out
inc
or
ret
imul
push
idiv
add
add
mov
adc
xchg
pop
dec
dec
mov
inc
push
xchg
dec
cmps
push
aas
inc
mov
mov
outs
mov
mov
xor
scas
jg
sub
adc
scas
pop
mov
bound
cdq
inc
cmp
push
out
inc
xor
xlat
xchg
inc
pop
clc
mov
add
add
sysenter
add
inc
call
add
add
cmp
ja
mov
xchg
push
inc
mov
dec
shl
mov
scas
test
rcl
or
mov
ja
mov
sub
inc
add
test
sub
inc
fbstp
fist
mov
lahf
dec
xlat
movs
lea
push
cmp
adc
dec
push
cmp
xchg
out
ss
inc
xor
fidiv
push
xor
inc
mov
push
rol
out
aaa
push
pop
adc
inc
dec
pop
inc
aas
jns
push
mov
cmps
jae
gs
add
inc
push
ja
add
cmp
cmp
add
inc
xor
or
pop
push
xor
sub
push
xor
sti
jne
fadd
jae
dec
cmovae
mov
add
pop
aaa
add
pop
lods
pusha
mov
dec
xor
cmp
push
or
jmp
sub
icebp
pxor
ret
sub
jbe
cs
xor
xor
push
xchg
cmp
dec
inc
arpl
and
push
push
add
test
aas
mov
sub
dec
push
inc
pop
(bad)
adc
or
les
bound
add
jo
xchg
pop
inc
or
dec
or
dec
pop
push
sbb
mov
ss
xor
mov
pop
bound
xor
loop
pusha
data16
popa
psrlw
js
pop
shr
scas
nop
or
sub
outs
loopne
and
stos
mov
ja
test
pop
pop
adc
rcl
add
add
lds
fistp
cmp
adc
xor
(bad)
push
jl
pop
ss
add
mov
and
mov
pop
inc
add
mov
xchg
inc
add
aaa
xchg
cmp
and
outs
inc
jle
cmp
cmps
outs
imul
in
push
xchg
outs
push
fs
cmp
mov
lahf
fbstp
inc
mov
dec
lahf
(bad)
ins
push
outs
add
bound
mov
inc
lahf
inc
sub
mov
xor
sub
add
fbstp
add
pop
dec
pop
adc
add
inc
or
or
rcr
loopne
les
xchg
cs
adc
pop
cmp
push
call
push
push
clc
inc
xor
xor
mov
mov
pushf
pop
les
call
dec
pop
inc
xor
xor
daa
xor
fbstp
or
(bad)
mov
xor
xor
aaa
invd
dec
xor
xor
add
or
aaa
inc
inc
sti
mov
sti
aaa
add
div
loop
and
(bad)
xor
mov
xor
ss
aaa
loopne
jnp
push
push
ja
mov
shl
out
out
adc
pop
aaa
mov
loope
add
sysenter
add
add
pop
jo
aaa
mov
sub
mov
cmps
lea
(bad)
arpl
lea
mov
xor
ret
pop
aaa
stos
pop
fwait
mov
cmps
or
pop
mov
div
cdq
pop
push
cmps
idiv
push
mov
add
add
xchg
mov
stos
pop
iret
cmp
sub
fcmovnu
aaa
add
arpl
outs
addr16
add
add
push
or
aas
or
xor
aas
jge
pusha
or
sub
pop
adc
or
cmp
xlat
cmp
aam
dec
xchg
jecxz
shl
push
add
add
daa
fsub
imul
outs
xor
mov
lahf
rcl
push
test
pop
ja
inc
fs
pop
adc
mov
ja
xor
xor
pop
jg
loopne
pop
adc
sub
dec
xor
xor
pop
or
(bad)
pop
inc
add
add
inc
xchg
loope
cwde
or
ret
(bad)
fild
dec
xlat
push
iret
js
fimul
ins
pop
or
(bad)
out
sbb
mov
scas
xor
mov
xor
cmp
xor
or
push
mov
loope
jg
adc
mov
or
add
pop
mov
das
pop
(bad)
sbb
aaa
add
push
jbe
xor
jecxz
outs
pop
cmp
add
inc
add
sub
jne
bound
jecxz
add
pop
adc
pop
das
or
jp
add
cmp
push
aas
mov
aaa
jae
scas
push
div
sbb
add
cmp
out
test
dec
xor
xor
adc
xlat
xchg
shl
daa
pop
push
repz
bound
aaa
or
mov
scas
dec
jo
add
sub
xchg
cmp
xor
cmp
xchg
mov
aaa
adc
pop
add
popa
dec
mov
test
xor
rcl
shl
push
arpl
jb
adc
mov
sbb
xor
inc
lock
add
dec
bound
lds
xlat
pop
push
or
mov
dec
mov
inc
cmps
bound
cmp
push
nop
fisubr
xchg
xchg
cmp
add
add
(bad)
bound
dec
push
jo
mov
ja
clc
and
adc
mov
sub
xchg
inc
sbb
jae
sbb
adc
pop
push
mov
test
sbb
xor
xor
popa
mov
push
sbb
ss
mov
pop
pop
aaa
xchg
dec
xor
xor
pop
push
rol
add
push
xchg
jmp
scas
adc
aas
or
cmp
outs
xor
cmp
cmp
or
call
add
push
inc
outs
dec
add
or
xchg
dec
or
xor
dec
xor
add
ins
inc
cmp
aaa
add
rcr
or
(bad)
lods
iret
aaa
add
dec
inc
push
idiv
add
mov
xor
aas
add
punpcklbw
xchg
adc
dec
fist
inc
ret
aas
xor
pop
and
add
jb
xor
push
rcl
dec
push
jbe
mov
push
ja
aaa
pop
adc
push
mov
sub
cmp
add
in
loopne
rdpmc
adc
cmp
dec
xor
cmp
adc
and
test
xor
xlat
xor
sbb
fbld
xlat
xor
js
jb
xor
pop
mov
repnz
add
cmps
scas
add
xchg
icebp
ror
inc
jmp
out
sti
mov
iret
pop
clc
mov
xor
pop
or
sub
stos
pop
inc
(bad)
push
popa
add
xor
scas
arpl
popa
inc
sub
mov
inc
add
scas
cmps
and
sbb
xor
add
shl
scas
xor
mov
adc
add
add
cwde
push
rdpmc
iret
retf
push
add
mov
sub
outs
fadd
popa
ss
add
out
cmp
pop
or
fisub
xor
xor
jae
lea
inc
adc
aaa
adc
mov
or
mov
rcl
scas
dec
in
popa
mov
(bad)
push
add
enter
dec
dec
leave
push
mov
push
and
mov
dec
inc
push
and
mov
mov
aas
add
test
lahf
xlat
shl
push
cmp
inc
pop
scas
push
and
aas
and
sub
dec
sub
pandn
jne
aas
aas
push
mov
sub
cmp
inc
xor
cmp
xor
cmp
cmps
cmps
push
out
ss
fadd
dec
pop
inc
ja
dec
pop
xor
out
pop
and
cmp
sbb
cmp
xchg
pop
cmp
loop
sub
into
cmp
mov
out
mov
int
aaa
cmp
and
dec
imul
jnp
scas
pop
outs
add
add
or
loope
ja
aaa
pop
inc
les
cmps
push
aaa
sub
jne
iret
test
pusha
add
aas
cmp
addr16
sub
inc
daa
xor
or
xor
cmps
push
imul
xor
stos
ins
fild
(bad)
int
out
push
add
jecxz
int3
or
cmps
ficom
mov
push
xor
xor
xor
jg
add
add
out
push
(bad)
clc
or
add
arpl
adc
out
mov
ins
jmp
clc
aas
bound
inc
jae
iret
pop
in
test
push
push
adc
push
push
add
adc
push
add
and
(bad)
dec
scas
stos
fs
nop
cmp
dec
or
pop
pop
sub
lahf
pop
in
add
pop
xor
pop
jmp
rcl
pop
pop
adc
xor
imul
dec
xor
jno
jo
aas
pop
inc
and
mov
sub
jne
jg
or
inc
or
jecxz
jne
ja
outs
add
jne
bound
popa
aas
shr
add
outs
(bad)
push
or
mov
or
push
les
add
test
inc
das
out
push
jg
ss
movs
dec
xchg
aaa
out
clc
dec
js
into
push
pop
xor
mov
push
add
or
pop
add
mov
inc
ins
xchg
pop
push
pop
mov
ja
adc
das
(bad)
push
jo
loop
imul
das
(bad)
add
fwait
inc
xchg
fiadd
add
xor
sub
inc
mov
fist
and
iret
mov
shr
mov
test
and
add
mov
out
daa
mov
(bad)
dec
add
or
push
scas
pop
loop
jo
aaa
iret
test
xor
add
out
pop
test
and
cmp
and
idiv
out
inc
cmp
pop
sub
xor
push
bound
mov
fs
fldenv
push
jmp
add
push
aam
pop
jne
sub
inc
test
and
sub
sub
fadd
movs
(bad)
xor
das
mov
add
add
je
inc
xchg
jno
dec
repz
sub
adc
xor
and
outs
mov
fisttp
(bad)
jg
and
test
add
push
mov
adc
xadd
ret
arpl
push
daa
xchg
xchg
and
or
xor
jb
mov
add
or
imul
add
dec
pop
and
xor
xor
inc
mov
sbb
mov
arpl
arpl
sub
adc
dec
pop
add
and
mov
add
outs
add
and
scas
out
int3
add
dec
in
mov
jg
dec
add
push
das
cmp
pop
pop
and
cmp
xor
shr
div
cmps
test
dec
ins
outs
cmps
fcom
shr
xchg
inc
add
or
dec
cs
lods
xchg
sub
jae
xor
aaa
das
out
or
dec
dec
add
aaa
jp
jno
cmp
sahf
sub
add
test
inc
sub
(bad)
nop
cmp
add
cmpxchg
aaa
imul
je
inc
sbb
test
pop
dec
outs
or
cs
inc
inc
scas
nop
test
mov
mov
out
enter
div
xor
sbb
push
xor
imul
nop
xor
xor
rol
push
enter
xor
es
sbb
fisub
div
sub
xor
call
iret
mul
mov
repnz
dec
xor
out
push
sub
out
mov
div
inc
fiadd
push
inc
cs
test
inc
ds
or
fsub
push
(bad)
cmp
mov
jg
adc
add
xor
ret
js
add
cmps
xor
inc
xchg
out
mov
cmp
push
push
push
cmova
add
add
add
test
je
push
xor
mov
pop
shl
xchg
daa
adc
jmp
or
jle
xchg
jne
popa
add
bound
adc
cmps
nop
mov
lods
in
mov
xor
mov
sbb
jo
iret
xor
xor
mov
and
xchg
and
in
and
add
dec
mov
pop
pop
in
xor
jae
and
or
xor
push
mov
stos
push
pop
call
div
xor
(bad)
xor
xor
xor
cmps
cmp
nop
xor
xor
ja
iret
xor
ss
or
push
pop
xor
ins
jo
inc
scas
xlat
inc
jo
dec
cmp
cmps
cmp
jb
cmp
test
in
cmp
sbb
inc
out
cmp
out
sub
setg
push
test
ret
not
add
dec
adc
cmp
add
xor
xchg
scas
fidiv
imul
jae
inc
add
inc
cmp
cmp
sbb
or
mov
cmp
cmp
cmp
xor
cmp
xor
outs
cmps
xor
or
xchg
daa
pop
pusha
imul
fwait
iret
popa
add
and
inc
sbb
pop
xchg
pop
mov
lea
sub
lds
xor
mov
pop
test
div
lahf
or
mov
mov
lahf
(bad)
arpl
and
aam
call
mov
mov
test
dec
xor
mov
aas
push
push
dec
push
dec
and
pop
pusha
mov
add
ss
lahf
out
mov
mov
add
push
dec
inc
mov
inc
push
lahf
inc
ins
jno
or
jbe
or
or
push
add
xchg
push
inc
add
push
xor
and
lds
lahf
or
sub
inc
jo
pop
and
jl
cmps
push
add
add
xchg
pop
xor
push
push
pop
aam
push
inc
es
retf
push
xor
out
dec
jg
add
inc
jp
ret
imul
add
imul
sahf
dec
add
and
iret
daa
cmp
or
push
pop
outs
daa
mov
mov
add
iret
ja
mov
rcl
xor
xchg
sti
les
add
push
add
(bad)
enter
(bad)
ss
ror
outs
add
dec
and
sbb
xchg
retf
push
rcr
inc
push
dec
inc
inc
pop
pusha
cmp
out
aaa
xchg
xor
outs
sbb
push
sub
pop
out
add
add
mov
jb
outs
aas
cmp
xor
xor
adc
push
cwde
mov
daa
and
adc
sub
mov
imul
inc
shl
inc
and
daa
cmp
adc
mov
mov
push
sub
xor
loopne
xor
adc
pop
mov
pop
les
xor
and
nop
xchg
mov
xor
push
cmps
addr16
leave
push
nop
(bad)
xor
sbb
and
daa
inc
xor
adc
cmp
jae
gs
sbb
push
leave
xor
xor
adc
adc
mov
dec
jae
xor
xor
pop
add
ss
pop
and
add
inc
and
aaa
push
je
aaa
pop
jo
shl
cmp
cmp
cmp
sbb
xchg
inc
shl
pop
add
pusha
shl
dec
push
cmp
pop
cli
cmp
jnp
or
adc
xchg
int3
sub
dec
cmps
push
mov
push
add
inc
aas
or
gs
inc
push
pop
mov
mov
cmp
scas
xor
xor
aaa
inc
mov
dec
shl
jle
and
(bad)
inc
xor
outs
outs
and
lahf
xchg
xor
add
fsub
mov
pop
mov
arpl
and
push
and
sub
and
and
je
test
mov
cmp
jbe
pop
pop
pop
add
(bad)
loop
xchg
xor
add
jb
xchg
jmp
cmps
xchg
pop
adc
xchg
fiadd
lods
ja
ins
daa
push
(bad)
xor
adc
in
cmps
pop
xor
xlat
push
das
das
ja
mov
adc
ret
jae
sub
jbe
iret
xor
bound
pop
pop
outs
push
jnp
mov
xor
push
push
and
mov
iret
ds
lods
cmp
or
mov
fwait
push
imul
add
pop
cmps
pop
add
sub
add
adc
ja
pop
add
pop
add
xchg
add
cs
mov
jnp
data16
push
inc
stos
popa
jecxz
dec
mov
pop
dec
(bad)
or
xchg
je
sub
and
and
idiv
mov
add
inc
das
(bad)
jns
pop
dec
and
adc
pop
sbb
sbb
mov
pop
mov
mov
or
jne
inc
or
inc
mov
mov
das
push
js
add
sbb
add
pusha
mov
push
rcl
pop
and
daa
pop
mov
xor
sbb
popa
add
fadd
dec
add
push
xchg
shl
mov
adc
push
ins
add
push
ins
mov
mov
xorps
pop
mov
pop
cmps
push
pusha
mov
out
or
sbb
mov
xor
inc
push
pop
(bad)
sbb
imul
xchg
pop
xchg
jecxz
and
add
movs
xor
xchg
sub
(bad)
(bad)
push
js
sbb
add
mov
pop
fiadd
xchg
xor
xor
bound
pop
inc
pop
xor
xor
ret
mov
pop
test
ja
sbb
pop
xchg
stos
xor
pusha
mov
aas
cmp
outs
dec
cs
xlat
dec
fsub
mov
stos
xor
mov
aaa
jno
hlt
adc
mov
test
xlat
inc
or
push
repz
cli
mov
test
sar
mov
mov
add
test
je
popa
jl
sahf
push
popa
add
outs
add
push
jo
imul
inc
adc
add
push
sbb
movzx
jg
mov
or
xchg
push
mov
stos
jae
and
loopne
test
inc
push
sbb
sbb
imul
add
arpl
cs
adc
push
sbb
fidiv
ja
fsubr
add
add
inc
pop
mov
ud0
xchg
or
jae
rcl
add
pop
push
mov
or
push
adc
add
aas
(bad)
add
adc
jnp
add
addr16
or
inc
xor
mov
jb
inc
dec
int
outs
xlat
push
or
adc
sbb
or
call
mov
xchg
das
or
popa
add
call
popa
push
mov
mov
iret
dec
lods
pusha
push
sub
lahf
sbb
or
inc
out
fadd
push
das
sbb
xchg
and
or
sub
daa
or
lahf
sbb
add
dec
call
xchg
sbb
pop
xchg
shl
aad
jae
pop
cwde
jno
xor
rol
scas
dec
or
imul
or
sbb
pop
push
mov
add
loop
inc
xchg
or
inc
clc
dec
pop
add
fistp
out
and
pop
push
inc
scas
pop
add
add
iret
xor
inc
not
push
add
iret
xchg
cmp
mov
pop
cmp
sub
pop
jb
push
add
lea
jnp
add
pop
ja
and
push
arpl
push
add
sub
pusha
dec
test
and
pop
aas
sbb
sbb
dec
add
in
or
sub
sub
push
xchg
popa
mov
aaa
or
adc
jl
neg
mov
shl
out
add
add
inc
imul
bound
sbb
and
mov
test
add
or
iret
adc
daa
cmc
test
or
mov
adc
push
fild
pop
iret
nop
pop
test
rol
and
aaa
add
pop
and
lahf
xor
enter
iret
xor
fbstp
scas
push
and
iret
(bad)
push
shl
aas
push
add
dec
add
pop
sub
sub
push
xor
xchg
daa
and
push
dec
les
dec
maskmovq
div
jb
sbb
xor
add
add
out
sbb
inc
and
cmp
jb
xor
sbb
(bad)
out
dec
add
and
rcr
jb
iret
rcl
mov
pop
xlat
jg
adc
mov
(bad)
push
cmp
popa
add
adc
mov
adc
sub
mov
stos
inc
dec
jae
adc
jecxz
add
pusha
and
add
mov
fist
adc
add
xlat
mov
jns
adc
das
das
and
dec
dec
or
jmp
out
xlat
push
inc
inc
leave
jg
lahf
repz
push
in
popa
add
inc
hlt
aam
jo
jg
push
data16
leave
rcr
xchg
dec
das
cmps
pusha
mov
inc
cmovge
push
add
cmovae
dec
add
mov
mov
xor
dec
pusha
push
stos
push
imul
dec
mov
xor
dec
dec
je
add
add
imul
xchg
loope
(bad)
dec
sti
xchg
dec
adc
ins
xrelease
ins
inc
adc
add
lea
adc
or
sub
aas
add
jmp
aaa
sar
sub
arpl
xor
jecxz
test
pop
xor
pusha
add
aas
push
lods
dec
jecxz
ja
add
or
ja
pop
inc
add
add
add
add
jo
(bad)
jg
clc
ror
xor
popa
xchg
xchg
lea
xor
mov
inc
nop
ja
aas
loop
sbb
or
jmp
fld
add
or
loope
push
sub
das
push
add
shl
addr16
pop
aaa
adc
or
jg
mov
in
in
xor
in
in
xor
in
in
ss
sbb
les
daa
push
adc
add
cmps
push
imul
aaa
aaa
jo
pop
int
mov
icebp
mov
add
idiv
adc
mov
aas
lock
inc
out
jmp
inc
jo
cmp
xchg
test
pop
mov
sub
sub
out
rcr
sub
pop
js
xchg
push
mov
push
mov
dec
sbb
pop
fwait
mov
das
and
pop
mov
aas
pusha
add
dec
mov
dec
and
inc
sbb
int3
addr16
fcmovbe
pop
xor
cmc
xchg
sbb
mov
sar
dec
dec
push
enter
in
movntq
mov
add
cmp
mov
sbb
push
inc
mov
inc
ins
fbld
adc
imul
or
mov
pusha
push
or
arpl
dec
push
in
add
add
and
inc
pop
sub
push
pusha
or
aam
jb
mov
or
jmp
loopne
pop
push
mov
mov
or
inc
adc
pusha
xor
pop
cmps
pop
inc
jmp
sub
nop
add
sbb
mov
pop
mov
loop
pop
mov
add
mov
fwait
jnp
cmp
and
test
dec
fs
ss
dec
fnstenv
jge
cmp
dec
dec
popa
pop
or
(bad)
(bad)
fsub
sbb
add
mov
or
add
push
xor
mov
in
cmp
sub
push
add
sbb
mov
enter
cmp
xor
xor
add
std
rol
or
retf
add
cmc
stos
add
sti
or
mov
rol
das
mov
xor
pop
pop
mov
scas
pop
xchg
aam
mov
das
ja
clc
nop
aaa
push
push
push
inc
push
add
mov
push
xor
cmp
loope
call
pop
xchg
mov
outs
pop
inc
(bad)
mov
les
retf
and
adc
ret
sub
dec
cs
hlt
hlt
fild
lock
lock
push
add
ins
pop
gs
push
fisttp
and
sbb
mov
push
cmps
mov
jae
inc
adc
or
or
jne
mov
pop
or
out
mov
ss
push
add
dec
ds
pop
cmp
xchg
add
xchg
adc
xlat
jne
add
adc
inc
dec
cmp
cmp
out
mov
(bad)
ficomp
mov
mov
xchg
or
shl
adc
or
sti
or
xchg
adc
cld
mov
adc
inc
leave
sub
rcr
and
movs
je
inc
and
mov
and
xchg
dec
pop
daa
daa
daa
mov
wrmsr
xor
xor
daa
daa
daa
xor
ss
daa
daa
daa
daa
cmp
cmp
daa
daa
daa
daa
cmp
ds
daa
daa
daa
daa
and
and
daa
daa
daa
daa
and
es
daa
daa
daa
daa
sub
sub
daa
daa
daa
daa
sub
cs
daa
daa
daa
daa
adc
adc
daa
daa
daa
daa
adc
push
pop
daa
daa
daa
daa
sbb
sbb
daa
daa
daa
daa
sbb
push
pop
daa
daa
daa
daa
add
add
daa
daa
daa
daa
add
push
pop
daa
daa
daa
daa
or
or
daa
daa
daa
daa
or
push
setae
icebp
repnz
xchg
xchg
xchg
repz
cmc
not
clc
stc
cli
xchg
xchg
xchg
xchg
sti
cld
std
(bad)
xchg
xchg
xchg
xchg
jmp
loope
xchg
xchg
xchg
xchg
jecxz
in
xchg
xchg
xchg
xchg
out
jmp
xchg
jmp
in
out
xchg
xchg
xchg
xchg
out
rcl
rcl
aam
(bad)
xchg
xchg
xchg
xchg
xlat
fcomp
ficom
(bad)
ficom
rol
xchg
xchg
xchg
xchg
ret
(bad)
(bad)
xchg
xchg
xchg
(bad)
enter
xchg
xchg
xchg
retf
int3
int
xchg
xchg
xchg
xchg
iret
mov
mov
xchg
xchg
xchg
mov
mov
xchg
xchg
xchg
xchg
mov
mov
xchg
mov
xchg
xchg
xchg
mov
xchg
xchg
xchg
mov
xchg
xchg
xchg
cmps
test
stos
xchg
xchg
xchg
xchg
stos
lods
lods
scas
xchg
xchg
xchg
xchg
scas
nop
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
cwde
cdq
call
popf
sahf
xchg
xchg
xchg
xchg
lahf
add
add
xchg
xchg
xchg
mov
xchg
(bad)
jo
jb
xchg
xchg
xchg
jae
jne
xchg
xchg
xchg
xchg
ja
jns
xchg
xchg
xchg
xchg
jnp
jge
xchg
xchg
xchg
xchg
jg
popa
bound
fs
pop
push
inc
mov
leave
jnp
adc
es
das
and
out
out
dec
and
add
and
and
lahf
xchg
mov
mov
mov
xor
dec
push
xchg
jne
es
sbb
cmc
inc
aas
add
imul
inc
dec
xor
dec
dec
inc
mov
mov
shrd
sahf
inc
cli
push
fiadd
imul
xchg
daa
mov
jg
psubw
inc
sbb
sub
ret
dec
ss
dec
pop
push
and
ficom
test
mov
int3
into
outs
sub
mov
push
or
jns
jo
cmp
shl
dec
inc
js
or
test
sub
or
mov
cmp
cwde
rcr
(bad)
enter
inc
pop
shl
fld
dec
sbb
mov
gs
jne
je
popf
xor
ins
add
outs
pop
mov
sbb
xchg
lea
xchg
or
or
or
daa
retf
or
mov
in
rcl
jbe
je
in
gs
outs
stos
cmp
retf
lahf
pop
fwait
cwde
(bad)
jecxz
push
mov
hlt
bound
int3
pop
jp
mov
daa
and
inc
ret
ja
movs
adc
fs
pop
jb
ret
cvtpi2ps
dec
outs
imul
mov
outs
ucomiss
and
jne
mov
xchg
outs
lahf
in
inc
or
xlat
fidiv
gs
ins
popa
cmp
adc
xor
or
xchg
or
mov
adc
push
push
fwait
jmp
add
ss
fcmovbe
ret
int
dec
cvtdq2ps
cdq
int
mov
ins
push
sub
add
sub
or
and
gs
(bad)
mov
rcr
xchg
fcmovnb
nop
push
mov
mul
test
cmp
add
cmp
clc
sbb
jnp
and
cwde
add
pop
or
push
sbb
pop
dec
cmp
jne
and
dec
or
jne
test
ins
mov
gs
cmp
mov
or
test
fmul
inc
or
jge
inc
imul
mov
cwde
xchg
sar
scas
jne
push
cmp
or
ss
aam
xor
mov
or
mov
(bad)
fcom
cmp
ins
rcr
loop
rol
pop
ss
sti
in
jne
mov
or
mov
adc
push
ret
sub
mov
sub
dec
in
inc
and
int3
sub
fstp
inc
jns
push
outs
xchg
ficom
dec
enter
jmp
inc
mov
sub
inc
cmp
or
push
les
sbb
iret
das
adc
push
sbb
movs
xlat
inc
mov
xchg
adc
and
test
mov
inc
or
adc
dec
paddsw
mov
popa
or
pop
in
and
or
sub
icebp
dec
scas
std
daa
aam
add
sub
jb
inc
xchg
adc
cmp
or
loopne
sar
inc
dec
jne
adc
or
xchg
adc
lea
sbb
sbb
mov
or
or
inc
xor
pop
sti
mov
inc
sahf
push
dec
mov
lea
mov
int
mov
xor
fnstsw
mov
in
adc
or
punpcklbw
push
mov
and
(bad)
fld
or
out
push
mov
push
clc
xchg
(bad)
sub
call
adc
movs
adc
add
adc
mov
pop
adc
retf
out
sub
adc
jmp
dec
es
pop
xchg
push
fmulp
and
mov
rcl
sub
leave
jp
ins
stos
sub
sub
xchg
test
jmp
sub
ret
div
and
(bad)
pop
xchg
loopne
enter
aam
and
sbb
shl
shl
pop
adc
aam
sbb
fdivr
dec
jle
sub
add
sub
je
lahf
jne
mov
pmullw
sub
sbb
shl
or
fucomp
rcr
push
adc
inc
pop
or
push
adc
adc
fld
or
xor
push
inc
adc
outs
sub
shr
and
xor
add
xor
jno
cld
movs
cmps
ror
push
inc
scas
fidiv
fistp
jp
xor
repnz
rol
jmp
sbb
jb
jge
out
or
sbb
ins
adc
retf
inc
add
sub
test
adc
pop
sbb
or
mov
xchg
or
es
and
or
les
cmp
cmp
test
xchg
outs
xor
pop
jnp
test
ins
and
mov
repnz
mov
pop
sbb
and
jle
jmp
fild
mov
idiv
jmp
mov
mov
gs
mov
mov
push
movs
and
aad
sbb
jge
sahf
mov
bound
or
adc
imul
adc
in
add
das
adc
or
or
dec
out
add
or
sub
fadd
pop
lea
mov
xor
or
cmp
(bad)
xor
mov
pop
push
adc
stc
push
in
loope
xchg
scas
inc
dec
into
pop
cmp
jo
inc
and
adc
sub
and
mov
movs
aam
sbb
ret
in
add
sbb
sbb
aad
jmp
inc
inc
outs
rcl
pusha
xchg
add
(bad)
and
add
shl
pop
dec
adc
ret
and
or
or
mov
jge
(bad)
and
xor
jge
xlat
jecxz
mov
inc
pop
xor
test
inc
(bad)
add
stos
or
ret
stc
(bad)
mov
pop
add
or
add
cmps
push
psubusb
xchg
and
mov
pop
iret
sahf
or
pop
add
mov
jmp
fstp
imul
cld
mov
jne
mov
dec
and
sar
test
add
add
test
xor
jnp
std
out
mov
es
adc
jne
mov
rcl
shr
sbb
pushf
lock
adc
mov
fadd
sbb
pop
mov
jmp
mov
cmp
imul
push
rcl
inc
push
or
or
js
test
fstp
inc
and
mov
push
jmp
mov
hlt
mov
cld
enter
or
adc
adc
dec
cmp
repnz
mov
inc
les
lods
sbb
test
dec
jg
push
add
mov
mov
inc
daa
push
add
inc
dec
test
das
not
inc
push
add
inc
add
add
out
pop
inc
aas
xchg
jl
pop
push
daa
inc
add
leave
sar
daa
inc
inc
sbb
addr16
xor
fadd
push
daa
mov
adc
xchg
dec
add
add
cmp
xlat
pop
bndstx
xlat
das
dec
add
lock
and
push
add
iret
or
test
dec
das
ja
les
scas
test
dec
neg
cmp
pop
pusha
daa
inc
ja
push
mov
jle
push
add
scas
pop
add
das
dec
mov
pop
leave
inc
aaa
push
daa
(bad)
arpl
inc
add
not
(bad)
bound
mov
leave
add
jmp
push
inc
add
push
xchg
mov
add
dec
add
add
dec
xchg
push
push
repnz
ja
ins
mov
das
push
jg
idiv
ret
test
add
inc
das
and
addr16
xor
mov
adc
push
cmp
or
test
lock
push
mov
pop
jne
inc
add
cmp
jne
xor
jne
dec
fisttp
pop
dec
popa
xchg
adc
mov
pusha
cmp
les
mov
lods
sar
ror
sbb
jb
jno
fld
inc
and
(bad)
or
mov
push
sub
xor
lds
rcr
lahf
sub
push
pop
sub
xor
scas
movs
add
push
ja
in
bound
or
push
sub
mov
inc
pop
xor
and
pop
add
dec
mov
mov
pusha
pop
add
add
xor
or
(bad)
pop
mov
or
pop
add
dec
xor
in
mov
or
sub
push
stos
mov
or
jne
comiss
push
aaa
pop
push
mov
mov
inc
dec
jbe
push
jb
inc
xor
scas
inc
das
add
jmp
inc
push
rcl
push
inc
daa
ss
push
pop
add
es
pop
ja
mov
push
inc
add
lock
add
inc
add
mov
daa
push
mov
pop
or
add
push
xlat
test
pop
fadd
sbb
xchg
push
repnz
pop
daa
dec
add
and
push
add
push
jb
ja
nop
add
or
xlat
dec
jg
test
pop
dec
dec
inc
pop
pop
pop
inc
xor
pop
pop
cmps
dec
add
pop
push
xor
xchg
mov
aad
sub
add
stos
popa
sub
dec
ja
inc
scas
xor
dec
daa
mov
lods
cmps
inc
aas
push
xor
jo
ins
test
mov
push
pop
jb
stos
pop
push
mov
ins
and
push
jg
jne
dec
pop
push
dec
mov
inc
outs
push
pop
push
addr16
stos
add
push
not
mov
mov
pop
pop
xlat
xor
pop
dec
xor
add
mul
clc
je
aaa
es
mov
sub
vmovdqa
dec
sub
adc
loope
mov
and
ja
mov
jmp
imul
mov
jmp
dec
in
pop
add
imul
jmp
loopne
(bad)
test
or
fiadd
mov
int3
clc
sub
add
or
je
lea
imul
ja
sub
add
jns
dec
push
or
xchg
loope
movs
and
in
mov
mov
je
sub
pop
xor
cmp
mov
ins
lock
retf
sub
cmp
fchs
and
or
xor
jp
cdq
xchg
jmp
cmp
call
sub
push
push
test
dec
xor
xor
loope
sbb
(bad)
fdivr
ins
fsubr
xor
fwait
pusha
mov
fcomp
loopne
jae
sbb
loope
into
inc
cmp
imul
call
jg
inc
lock
push
jo
sub
loop
jne
daa
xchg
icebp
push
sbb
jmp
mov
mov
loopne
and
outs
add
mov
add
sti
jg
jle
lods
loope
daa
cmp
jl
aas
cs
jae
mov
jg
lea
or
pop
pop
fcom
(bad)
pusha
xchg
and
jns
mov
lea
cld
mov
clc
lods
sub
fiadd
test
sti
inc
fisub
cmp
mov
or
add
aam
or
rcr
test
inc
rol
in
jmp
clc
aad
push
test
mov
jo
data16
imul
mov
cmp
xor
add
mov
lea
jle
xchg
sub
cmp
int
xor
inc
sbb
sub
jo
ss
iret
adc
fcomp
dec
test
sbb
(bad)
outs
cmp
push
add
sbb
mov
jne
inc
je
sub
add
imul
lock
std
ret
and
jl
adc
jle
pop
ret
xor
in
xor
es
jno
fnstsw
and
inc
mov
push
push
pushf
or
jno
out
add
push
in
ret
ror
pop
mov
mov
mov
call
aam
cld
fdivr
and
mov
pop
in
dec
call
je
jmp
mov
add
push
dec
pop
jnp
js
or
jne
push
inc
xchg
and
ret
inc
stos
out
arpl
sub
sbb
push
fs
cmps
fs
popa
cmps
fs
cmps
ins
push
dec
cmps
fs
popa
jae
dec
cmps
outs
outs
fs
xchg
pop
push
iret
mov
add
scas
imul
pop
test
je
or
mov
icebp
lahf
pop
pop
in
inc
jl
adc
jg
add
sub
cdq
cmp
adc
or
rcl
fs
adc
and
cmp
movs
lock
add
mov
gs
add
ds
cmp
jg
ror
push
mov
pop
pop
ret
imul
in
out
fst
and
in
inc
shl
fbld
popf
lahf
pop
mov
dec
push
daa
sbb
repnz
ja
pushf
es
add
dec
mov
test
jne
test
mov
aam
inc
imul
xchg
pop
mov
test
push
cvtps2pd
adc
out
aam
loopne
sbb
retf
cmp
xchg
rcl
sbb
or
or
sub
stos
mov
repz
cmp
ret
xchg
pusha
in
adc
pop
enter
mov
clc
cld
imul
inc
enter
leave
fld
faddp
dec
fsub
jmp
addr16
addr16
mov
xlat
adc
xor
loopne
fsub
test
push
and
inc
push
and
es
mov
push
sub
adc
mov
sub
aas
sbb
(bad)
jb
pop
add
pop
mov
test
int3
xchg
add
sub
daa
sbb
and
data16
push
mov
xor
outs
jle
pop
xchg
aas
push
mov
xor
mov
out
test
jg
sbb
int3
inc
int
cmp
xchg
pop
xor
push
leave
sar
sub
cs
mov
dec
sbb
dec
jl
leave
and
or
xchg
dec
es
cmp
cmp
or
xchg
pop
pop
pop
int3
cld
dec
cs
in
or
not
pop
mov
fimul
clc
sub
pop
pop
dec
cs
xchg
pop
pop
ret
sbb
daa
pop
js
es
and
mov
fmul
jb
and
in
dec
pop
or
inc
add
cs
daa
and
cwde
int3
pop
jb
in
add
ja
je
cdq
in
xchg
fcom
push
push
in
dec
cs
shr
das
mov
pop
xchg
adc
aas
dec
cs
xlat
push
lock
in
sbb
pop
pusha
pop
jb
and
jb
xchg
sbb
pop
dec
js
leave
and
sbb
sbb
pop
leave
dec
cs
and
pushf
loopne
cs
in
sbb
in
test
adc
inc
pop
jb
mov
test
xor
in
and
les
cmps
xchg
pop
pop
jb
pop
clc
cmp
mov
pop
fcomp
and
and
lods
lock
and
imul
and
pop
cwde
mov
mov
cmps
pop
and
add
pop
push
sbb
leave
xchg
in
daa
push
das
mov
hlt
cmp
cs
mov
dec
xor
xchg
enter
xchg
or
pop
push
mov
lock
sub
leave
and
sub
xchg
dec
es
or
push
pop
cwde
fmul
mov
mov
mov
or
pop
dec
test
cld
inc
xor
das
mov
xor
pop
pop
jb
pop
call
xor
pop
aam
xor
ins
add
xor
in
cmp
test
mov
xor
in
cs
ss
pop
hlt
xchg
dec
cs
in
aaa
jecxz
xlat
push
daa
pop
enter
dec
scas
lods
(bad)
pop
cwde
fcom
cmp
mov
mov
daa
pop
imul
aam
cmp
xchg
pop
pop
rcr
cmp
pop
hlt
ins
lods
mov
pop
sbb
ja
leave
and
pop
add
jo
enter
add
xor
pop
mov
adc
or
mov
pop
jb
pop
pushf
aam
cs
pop
mov
dec
xor
pop
rcr
add
pop
push
cwde
lods
loop
xchg
in
and
(bad)
fcmovu
dec
scas
pop
rcl
cmps
pop
mov
mov
jg
and
or
dec
sub
leave
mov
sub
lods
mov
sub
in
scas
pop
les
dec
pop
xchg
cmp
dec
cs
or
pop
pop
icebp
xchg
dec
cs
in
dec
leave
and
cwde
aam
imul
xor
pop
movs
xchg
inc
mov
pop
nop
mov
mov
iret
pop
dec
scas
lods
call
mov
add
pop
dec
mov
hlt
inc
push
daa
pop
in
scas
lods
loopne
inc
push
scas
pop
loopne
pop
ror
jg
xchg
sbb
and
pop
sub
pop
pop
pop
pop
shr
pop
or
xchg
loope
xchg
pop
nop
loopne
pop
ret
dec
scas
lods
xchg
enter
and
nop
rcr
ins
in
xor
pop
mov
xlat
(bad)
cmps
pop
xchg
fmul
and
pop
movs
leave
and
in
pusha
pop
js
and
mov
mov
fsub
bound
pop
mov
pop
pop
jb
pop
loopne
(bad)
pop
add
jmp
leave
and
mov
mov
adc
jb
mov
xchg
je
jb
xchg
pop
fmul
pop
cmp
and
aam
imul
add
fist
pop
dec
cs
push
sub
pop
pop
jg
movs
pop
mov
aaa
dec
lods
mov
xor
or
cdq
mov
in
nop
adc
shl
out
mov
mov
cmp
mov
mov
sbb
je
xchg
inc
adc
sbb
mov
call
cmp
lock
test
jl
xchg
test
cmc
sar
or
scas
inc
cmp
push
or
mov
cdq
stc
cdq
pop
sbb
mov
les
adc
push
fsubr
jle
add
lods
and
sbb
xchg
rcl
mov
sub
push
popa
(bad)
or
dec
jne
cmp
xchg
ds
and
punpckhwd
retf
scas
mov
fcomp
ja
into
jl
xor
loopne
mov
jb
aam
lock
mov
push
pop
inc
clc
inc
adc
mov
clc
ret
inc
aam
jl
je
outs
data16
lea
loope
je
sub
add
or
ret
or
pop
adc
nop
retf
mov
cmp
pusha
jnp
loopne
pop
iret
inc
dec
test
das
pop
push
add
(bad)
inc
cs
dec
add
ins
add
pusha
cmp
das
das
jb
jb
or
cs
jg
add
in
push
sub
push
adc
cmp
cwde
dec
push
scas
int
add
add
mov
arpl
fmul
add
pop
cmp
add
bound
xchg
adc
fldcw
cs
mov
loope
imul
imul
pop
cmp
cs
jb
lods
sub
addr16
popa
pop
or
pop
neg
xor
xchg
push
imul
push
pop
jb
cmp
adc
pop
xor
sbb
adc
mov
pop
pop
nop
and
maskmovq
test
outs
test
add
call
jbe
add
int3
pop
aaa
add
add
lahf
fs
add
push
(bad)
outs
jg
and
mov
add
inc
jae
xlat
das
ret
sbb
arpl
(bad)
jae
(bad)
outs
add
lods
test
pop
ja
jbe
mov
adc
mov
aas
jae
js
leave
push
enter
popa
ins
add
add
punpckhdq
aas
inc
das
inc
jo
add
dec
wbinvd
js
fcmovne
dec
and
add
inc
sub
jae
fist
inc
repnz
xlat
ror
or
push
fbld
add
fcom
push
push
stos
pop
adc
sub
shl
and
mov
fdivr
push
ja
or
add
shr
xchg
jo
push
nop
adc
ins
push
mul
push
jbe
ins
push
int
pop
aaa
jne
das
sbb
inc
sub
sub
dec
push
imul
pop
push
daa
inc
add
call
shl
push
aaa
mov
cmp
outs
mov
pop
push
jo
ja
das
xchg
add
bound
shl
mov
and
pop
push
daa
fldenv
push
(bad)
daa
test
jo
out
pop
add
dec
cs
mov
mov
dec
ja
(bad)
addr16
test
daa
nop
or
xchg
xor
jo
jo
xor
loopne
inc
shl
and
mov
(bad)
je
adc
push
outs
das
pop
inc
add
ss
or
adc
jae
call
je
arpl
fcmovu
or
imul
gs
cmp
push
jae
ins
jbe
aas
aaa
mov
ja
ret
data16
jb
sub
xlat
ficom
jmp
xor
mov
pusha
push
div
ret
call
jecxz
inc
xchg
das
div
mov
pop
pop
mov
pop
adc
imul
sbb
aas
je
xor
and
xor
push
xchg
jg
jae
mov
and
xlat
push
add
loop
(bad)
out
push
sub
add
outs
jo
xchg
ja
fs
ins
pop
adc
push
shr
cmp
add
mov
aad
fisttp
mov
scas
cmps
(bad)
rcl
jne
dec
imul
test
seta
or
or
cvtdq2ps
cwde
mov
pop
shr
das
ja
pop
pusha
fimul
addr16
outs
shl
ffreep
xchg
or
fcmovnb
aaa
add
inc
pop
js
nop
cwde
xor
xor
outs
test
xor
mov
inc
in
imul
mov
sub
add
(bad)
sub
daa
or
cmp
sub
pop
addr16
dec
mov
ins
and
in
mov
add
jbe
push
je
(bad)
push
arpl
or
sbb
push
mov
or
aaa
ins
fbld
inc
or
iret
fild
add
addr16
pushf
dec
or
or
xchg
push
call
inc
cmps
test
push
xor
cmp
xor
or
xor
popa
ja
sub
cs
pop
gs
cwde
sbb
push
addr16
call
adc
imul
mov
dec
sub
jne
adc
adc
popa
les
pop
dec
stos
loop
adc
xor
add
or
cmp
push
add
test
(bad)
push
rol
das
pop
ja
ins
cmp
and
ja
ins
emms
or
adc
addr16
nop
and
jbe
xchg
sub
dec
js
mov
inc
push
jbe
out
ret
inc
and
jmp
(bad)
and
sub
gs
pop
xlat
sub
dec
jne
add
dec
lods
not
(bad)
out
jno
fcomp
sub
loopne
push
cmp
fisttp
cmp
xor
cmp
lahf
inc
mov
xchg
or
jo
jae
fcmove
mov
and
bound
xor
inc
jb
rol
ins
jno
inc
xlat
lahf
or
xor
scas
mov
inc
mov
bound
ja
ds
clc
sbb
arpl
gs
and
xchg
lds
imul
sbb
pop
daa
ins
stos
mov
inc
ss
daa
lahf
les
outs
add
or
retf
mov
sub
push
inc
mov
push
bound
dec
pop
mov
xchg
jmp
test
pop
jg
fld
iret
(bad)
(bad)
bound
jnp
dec
push
icebp
aam
(bad)
bound
outs
adc
push
ja
inc
out
pusha
and
jbe
jg
idiv
push
dec
push
jp
xor
jg
mov
mov
outs
daa
pop
or
mov
imul
nop
movs
shr
push
push
shr
fild
outs
push
icebp
aad
arpl
arpl
inc
push
sti
xor
mul
jg
ins
loop
fs
pop
ja
add
pop
mov
push
jbe
adc
addr16
adc
ins
scas
xchg
dec
dec
popf
shr
jb
or
push
push
imul
psubusb
popa
add
je
imul
fmul
mov
jb
jns
arpl
cwde
bound
or
loopne
imul
daa
outs
es
adc
push
in
or
jo
arpl
jo
sub
jmp
xor
shl
jg
test
push
movs
bound
ja
je
jo
mov
adc
imul
sub
pusha
aam
daa
rol
xchg
cmps
fs
fcom
or
lock
ins
mov
lods
stos
daa
and
ins
inc
add
test
sahf
xchg
out
push
cmp
popa
inc
inc
jmp
aaa
sub
jg
stos
jbe
sbb
imul
add
jecxz
outs
out
pop
test
mov
xchg
inc
jne
arpl
push
sub
add
sub
jae
or
adc
imul
sub
sub
push
(bad)
jp
add
mov
ins
add
fisttp
and
add
or
push
sub
mov
pop
cmps
pop
outs
add
bound
mov
mov
je
jbe
mov
daa
pop
inc
xchg
sub
push
js
test
pusha
xchg
scas
cmp
test
or
iret
inc
inc
call
pop
mov
add
jae
mov
(bad)
jns
aad
pop
rcr
add
jns
arpl
or
iret
xchg
or
data16
sbb
cmps
out
and
arpl
jae
xabort
mov
out
dec
imul
inc
jg
xchg
ins
pop
ret
xor
imul
retf
sub
inc
daa
addr16
push
xor
pop
stos
addr16
and
mov
ins
jg
mov
pop
push
pop
scas
add
je
(bad)
push
test
inc
adc
das
xchg
ja
cwde
sub
push
push
mov
pop
ja
pop
and
push
push
add
daa
jno
sub
icebp
cs
addr16
dec
or
fisttp
bound
adc
je
inc
xchg
test
in
outs
imul
cmp
or
test
xor
xlat
(bad)
jl
fnsave
imul
or
imul
add
sbb
or
or
dec
fld
inc
shr
daa
fwait
sbb
mov
push
imul
cmp
outs
mov
push
(bad)
imul
add
ffreep
imul
cmp
sar
outs
add
jb
dec
sbb
(bad)
imul
add
(bad)
imul
cmps
push
xor
add
mov
ins
xchg
aas
xchg
scas
and
push
movs
sub
xor
daa
lea
out
pop
aaa
into
pop
rcl
mov
ja
inc
data16
mov
shl
jg
sub
pop
je
adc
nop
and
(bad)
add
add
add
pop
jg
sbb
inc
jo
push
(bad)
push
adc
jmp
cmps
sub
add
add
pop
ins
shl
popa
and
xchg
jl
push
xor
jo
jo
daa
inc
jo
dec
push
gs
mov
adc
sbb
inc
int
xchg
popa
xlat
je
or
and
data16
sub
daa
jb
or
stos
arpl
fild
push
daa
nop
or
ins
call
inc
adc
pop
sub
pop
iret
imul
push
(bad)
pop
sbb
outs
add
punpckhwd
into
and
(bad)
ins
add
popa
cmp
push
loop
inc
lahf
in
sub
xchg
outs
add
adc
fcmovb
inc
xlat
fs
outs
mov
outs
outs
aaa
test
pop
sbb
inc
jo
mov
stos
inc
loopne
mov
mov
sub
enter
pop
test
xchg
add
pusha
shl
xlat
jnp
dec
and
pop
and
mov
arpl
iret
xor
pop
xor
rol
arpl
out
out
add
add
das
mov
xlat
push
jp
or
out
jae
popa
stos
leave
pop
push
lss
add
push
or
addr16
sub
push
and
cmp
pop
and
cmp
sub
scas
sub
xchg
scas
je
push
push
inc
fbld
mul
cmp
pop
inc
imul
cmp
xor
inc
inc
dec
mov
ja
xchg
test
cmp
sub
xchg
dec
cmps
jg
and
aam
jg
mov
push
or
mov
jae
ja
ins
cmps
add
pop
inc
mov
xchg
push
mov
shl
jno
sub
pop
scas
jae
shr
mov
adc
test
sbb
xor
(bad)
pop
outs
mov
add
lods
(bad)
sub
fs
add
xor
xchg
test
mov
jg
push
or
sub
icebp
inc
add
inc
jo
ins
inc
sbb
jno
sbb
enter
jo
cs
aas
inc
ja
ins
adc
mov
(bad)
bound
ficom
adc
jp
xor
xchg
sbb
add
xchg
inc
(bad)
stos
rcr
out
push
cmp
pop
out
add
and
jno
jo
dec
pop
inc
and
dec
in
and
mov
mov
je
jecxz
add
aaa
pushf
push
pop
jb
push
jne
and
movzx
stos
ins
aas
(bad)
es
and
or
mov
bound
ins
add
xor
out
add
mov
and
add
xlat
ins
cmps
inc
push
xchg
add
shr
lock
push
pop
aas
push
or
js
enter
ins
out
mov
mov
mov
sub
or
das
xchg
pop
push
ret
clc
test
mov
addr16
jae
inc
mov
adc
mov
inc
popa
mov
jae
pop
dec
test
add
out
add
aas
inc
inc
or
dec
xor
xchg
adc
gs
push
push
paddsw
jg
jp
sub
loopne
neg
aad
dec
push
ins
bound
pop
pop
inc
jb
and
imul
iret
mov
std
push
push
ins
mov
arpl
outs
adc
les
mov
or
jae
fs
bound
enter
sub
je
rol
outs
ins
mov
sub
mov
ja
xchg
cld
mov
(bad)
jb
add
bound
test
jb
fild
xor
push
rcl
jae
mov
add
or
xor
add
lahf
mov
add
mul
jne
imul
pop
xchg
inc
add
mov
imul
dec
shl
ja
pop
test
das
ja
inc
or
fs
ja
dec
push
or
add
adc
or
mov
ins
add
jae
inc
mov
sub
cli
data16
push
popa
add
pop
(bad)
jae
call
ret
popa
adc
lods
adc
(bad)
push
xchg
push
ret
or
ins
rcr
outs
add
gs
inc
sub
push
lahf
jae
inc
pop
mov
mov
nop
mov
rcl
jg
sbb
add
mov
jg
mov
sub
or
sbb
addr16
xchg
rcl
mov
iret
jbe
adc
daa
push
add
inc
sbb
xor
ins
xor
aas
rol
jb
push
or
ror
sub
push
dec
xchg
cmp
xchg
mov
and
xor
pop
jae
js
push
inc
outs
adc
lahf
xlat
push
mov
mov
scas
jnp
test
mov
add
push
js
cmp
es
xor
mov
movlps
or
mov
mov
inc
ja
inc
lds
and
sub
sbb
add
popa
mov
mov
cmc
add
cmp
lahf
je
lea
jmp
lods
or
mov
pop
rol
mov
jg
sub
add
add
mov
pop
mov
dec
jl
and
aas
je
jb
test
sub
inc
mov
add
inc
push
fcmovb
fistp
xchg
cmp
ror
sbb
and
and
jb
in
retf
push
test
das
arpl
je
xor
push
rcl
call
mov
dec
jne
dec
push
imul
js
add
dec
sbb
jg
mov
(bad)
fisttp
cmp
mov
sub
add
fisttp
push
lea
dec
scas
cmp
imul
add
add
jne
mov
jbe
jae
arpl
push
xchg
in
es
pop
pop
dec
add
scas
mov
mov
bound
inc
lea
xlat
sub
add
adc
adc
xor
add
aaa
(bad)
sbb
push
mov
push
jg
mov
test
nop
pusha
dec
js
and
xor
inc
jae
add
xchg
add
jmp
add
push
xchg
fs
imul
imul
jo
sbb
sbb
(bad)
adc
ret
(bad)
or
js
popa
add
movs
ins
xor
imul
and
test
or
xchg
add
scas
xchg
leave
add
jo
inc
sub
mov
scas
fldenv
mov
jno
push
or
jge
add
cs
mov
daa
outs
pusha
lods
xor
xor
inc
mov
pop
jl
popa
adc
mov
arpl
add
xor
push
popa
addr16
retf
xor
sub
les
jmp
arpl
pop
adc
or
in
or
(bad)
xchg
and
punpcklwd
and
call
push
arpl
cmp
popa
add
adc
add
cmpxchg
dec
sbb
mov
adc
add
jns
mov
jo
jo
inc
or
js
mov
dec
arpl
pop
add
push
pop
push
out
addr16
inc
nop
bound
addr16
mov
adc
ins
adc
dec
or
das
pop
or
mov
popa
mov
dec
lahf
cmps
mov
je
call
or
push
xor
retf
sbb
mov
mov
mov
out
cmp
push
out
xchg
jbe
push
jb
dec
add
jg
add
bound
and
aaa
sub
ret
push
add
push
pop
jb
pop
pop
cs
test
cmps
je
fist
sbb
sbb
or
loop
and
test
push
adc
xchg
add
push
and
sar
hlt
dec
ds
enter
ins
fadd
mov
sbb
leave
cld
jne
test
sbb
test
cld
and
mov
mov
icebp
inc
mov
xlat
jge
or
jle
shl
jns
or
sub
and
jnp
jmp
add
and
jg
shr
or
and
jns
test
push
inc
jne
sbb
adc
mov
add
or
push
dec
xchg
sbb
mov
ret
add
mov
xor
movs
pop
popf
xor
iret
ins
sub
jnp
add
mov
shl
adc
pop
ret
push
adc
and
pop
adc
push
ds
das
and
outs
movs
ins
int
mov
(bad)
pop
ret
sub
fs
loopne
inc
retf
sbb
dec
pop
lods
add
loop
add
push
mov
scas
xlat
(bad)
mov
fld
add
js
adc
jnp
add
add
cmp
cdq
or
sub
int3
mov
iret
addr16
rol
lock
adc
or
push
sti
lea
pop
cmps
and
and
lds
or
(bad)
(bad)
ins
in
inc
popa
mov
hlt
pop
jecxz
or
mov
mov
in
add
inc
lock
cmps
push
cmp
repnz
or
imul
fsub
(bad)
adc
mov
jnp
ins
add
add
pop
int3
mov
retf
pop
sub
mov
add
loope
and
aaa
adc
nop
dec
xchg
or
inc
mov
add
loopne
adc
inc
outs
out
xchg
adc
adc
or
sbb
mov
das
call
add
int3
and
in
sbb
not
retf
dec
shl
jo
popa
jne
or
in
add
sub
inc
loopne
push
dec
fmul
mov
arpl
jne
jae
outs
fadd
sub
jge
and
add
and
fsub
mov
arpl
jno
or
popa
bound
clc
add
dec
loopne
leave
leave
sub
adc
dec
imul
sete
inc
js
push
add
jmp
xor
xchg
es
push
pushf
fild
mov
pop
add
test
jo
inc
mov
mov
add
cld
adc
addr16
xchg
and
mov
adc
lock
(bad)
lds
bound
pop
inc
inc
inc
xor
je
mov
xor
push
inc
loope
cmc
jle
mov
dec
les
or
or
ret
jns
into
or
add
and
(bad)
mov
(bad)
xor
cmp
inc
cmp
xor
rol
pop
xlat
add
mov
rcr
enter
push
fadd
pop
imul
pop
push
jl
(bad)
cs
ret
clc
mov
test
(bad)
jl
cmc
jmp
jb
or
add
shl
fwait
or
push
jl
ret
adc
xlat
es
in
mov
gs
in
jae
adc
and
jmp
pop
sbb
pop
in
inc
sub
inc
mulps
lock
lea
mov
sub
je
inc
jmp
pop
pop
ins
bound
cmps
aam
sbb
aaa
shl
add
movs
lods
add
je
ret
and
jne
adc
add
push
adc
sbb
sar
xchg
cmp
inc
in
dec
mov
mov
cmp
push
add
fistp
push
dec
mov
mov
cmp
xchg
pop
add
add
dec
inc
sar
push
repnz
add
mov
push
es
add
push
or
adc
pop
cmp
dec
das
or
push
add
sbb
add
push
sub
mov
push
inc
xadd
aaa
mov
arpl
and
push
mov
popf
sub
sub
pop
(bad)
mov
xor
ficom
lea
or
xor
icebp
in
cld
es
push
jo
cmp
add
inc
cmp
cmova
or
mov
adc
push
adc
cmp
jmp
or
(bad)
sub
aas
jne
xor
lahf
into
xor
shr
and
mov
xor
lea
adc
adc
mov
ds
sbb
fs
icebp
sub
or
jge
dec
xchg
pusha
loope
(bad)
mov
or
dec
jne
dec
out
pop
inc
jge
inc
jmp
sub
jne
(bad)
xor
daa
jns
cs
jle
rcl
jo
mov
mov
mov
shl
lea
dec
mov
push
fadd
test
in
push
jmp
dec
lock
scas
in
ja
mov
fild
je
sub
mov
or
cdq
or
push
and
ds
adc
pop
mov
shl
dec
pop
add
mov
bound
(bad)
out
aaa
lds
jge
push
movs
cld
or
je
jae
and
pop
add
outs
and
or
sbb
outs
fimul
inc
or
cmp
mov
call
sbb
mov
adc
mov
retf
or
add
and
add
shr
(bad)
repnz
fs
(bad)
push
push
cmp
ja
dec
inc
sbb
add
lods
add
scas
cmp
cmp
inc
data16
mov
je
inc
fsubr
fwait
out
ret
imul
es
out
outs
add
stos
outs
test
ss
test
mov
cmp
push
mov
adc
xchg
push
jmp
inc
sub
rcr
sbb
inc
jge
xchg
out
popf
rcr
cmp
test
mov
mov
sbb
push
sar
in
xor
mov
loope
and
das
jne
sbb
repnz
mov
xor
sbb
sbb
mov
pop
stos
add
sbb
mov
cmp
dec
lods
(bad)
lods
adc
pop
lods
add
add
inc
or
shl
add
movs
pusha
or
mov
test
sti
retf
in
movs
adc
test
jne
push
or
sbb
pop
sbb
dec
and
push
or
addr16
inc
xor
adc
mov
pop
xor
adc
pushf
out
cmps
mov
cmp
adc
lock
cmp
stos
pop
sbb
adc
test
add
pop
and
repz
int
nop
add
xchg
sbb
and
push
push
scas
test
fs
push
fdiv
std
push
int
pop
dec
sbb
sbb
mov
push
lock
sub
jmp
xchg
mov
sub
push
cmp
fldcw
test
xor
or
add
fiadd
mov
in
sub
push
fisttp
pop
das
enter
ror
mov
push
and
(bad)
jno
mov
push
mov
loope
inc
add
lock
jge
adc
ins
jmp
adc
mov
pop
jo
adc
test
xor
pop
add
mov
neg
adc
push
mov
popa
jmp
add
test
jo
xchg
sbb
inc
fadd
nop
pusha
pop
cld
inc
or
test
dec
mov
dec
push
jns
add
cmp
jae
mov
dec
ins
push
xchg
inc
cmps
sbb
fcom
push
clc
clc
inc
mov
mov
ret
scas
in
lds
sub
(bad)
cmc
bound
mov
pop
pop
shl
ret
maxps
mov
sbb
loopne
and
sbb
les
xchg
sub
mov
sbb
adc
mov
dec
cmc
mov
add
loope
popa
test
sbb
sbb
cmp
lock
cmp
and
enter
add
lds
mov
and
xor
in
cmp
adc
xor
dec
push
rol
call
jns
das
mov
push
inc
mov
inc
mov
repz
mov
ds
repz
dec
cmp
sbb
adc
mov
inc
(bad)
fsubr
and
or
or
scas
aas
xchg
jbe
test
cli
test
jo
cli
outs
repz
lock
outs
jbe
or
sbb
add
cli
xchg
xchg
mov
dec
mov
mov
pop
dec
mov
xchg
push
mov
adc
pop
xor
pusha
xlat
mov
push
mov
out
xor
sub
in
push
mov
lahf
daa
add
daa
push
mov
icebp
popa
pop
jbe
adc
loop
add
out
test
push
and
push
push
imul
and
dec
sbb
cmp
and
cmp
je
aas
dec
cmp
test
das
jg
adc
mov
mov
fild
pop
cmp
mov
adc
test
lea
add
push
clc
sub
adc
(bad)
test
push
adc
lahf
das
mov
or
push
lock
(bad)
sub
loopne
and
add
pop
add
pushf
rcr
aas
add
dec
push
jnp
jge
or
sub
sub
add
or
push
xchg
popa
test
adc
pop
mov
dec
std
cmps
ja
mov
mov
out
inc
(bad)
pop
jne
rol
dec
and
clc
in
call
clc
add
cmp
jle
mov
ja
sbb
test
and
jnp
push
cmovns
mov
lods
sbb
imul
or
pop
jge
sub
dec
cwde
mov
jl
and
test
sbb
cmp
add
fst
add
add
fld
or
and
xor
inc
lahf
dec
xchg
xor
movs
push
pop
and
cmp
inc
add
xor
nop
jl
pop
mov
xor
dec
xor
or
add
add
pusha
and
or
xchg
scas
mov
repnz
jg
sbb
fiadd
dec
fstp
push
movs
or
lahf
mov
sbb
jl
mov
lahf
inc
imul
jmp
shr
ins
rol
test
sub
jae
cmp
push
or
xchg
or
nop
pop
pop
xchg
fwait
or
jne
inc
dec
loope
adc
adc
sbb
jbe
sub
cmp
je
and
xchg
bound
cmps
and
cmps
dec
ret
test
(bad)
xchg
cmp
rcr
push
jns
or
fisttp
bound
scas
pop
jg
arpl
cmp
ret
retf
ins
pusha
pop
or
mov
iret
inc
pusha
add
mov
js
inc
pop
xor
push
mov
clc
mov
pusha
dec
test
add
imul
cs
add
test
add
mov
or
inc
mov
push
bound
mov
and
iret
pop
dec
sub
jae
xor
fneni(8087
mov
sub
ins
sbb
or
mov
ins
loopne
adc
inc
add
add
sub
ja
add
in
dec
jne
jecxz
dec
aad
sbb
mov
dec
out
lea
jmp
vpavgb
mov
and
pop
mov
or
stos
jmp
prefetchwt1
or
xchg
aas
lds
mov
pop
(bad)
xchg
movs
and
cmp
dec
xlat
push
in
sbb
xor
rcl
cmp
pushf
jmp
loop
sbb
mov
call
pop
fst
push
pop
mov
or
jb
inc
lock
(bad)
pop
jae
xchg
jge
xor
mov
adc
into
jecxz
data16
dec
sbb
fidivr
bound
pushf
and
push
add
pop
inc
sti
add
ins
dec
mov
arpl
cmp
pop
xor
xchg
clc
dec
test
jl
inc
xor
adc
xor
test
fsubr
push
fcomi
mov
inc
jne
rcr
dec
aam
xchg
mov
neg
xchg
jbe
pop
inc
imul
adc
mov
fcom
test
push
inc
xchg
mov
jae
ret
stos
add
add
and
outs
sbb
loopne
test
retf
call
jne
(bad)
and
fsubr
sbb
mov
pop
cmps
sbb
retf
mov
adc
or
ret
jo
psllw
adc
pop
and
jns
jmp
dec
mov
pop
fwait
lock
adc
mov
xor
lea
fisubr
jl
dec
jl
inc
cmp
iret
enter
mov
add
push
add
dec
jne
out
sub
add
ror
jg
cmp
mov
jo
jne
sbb
cld
dec
push
loopne
loopne
fmul
arpl
add
jmp
aas
mov
mov
dec
ret
rcl
sar
add
cmp
dec
mov
sbb
add
sub
or
inc
xor
pop
adc
arpl
jg
call
pop
ret
mov
inc
add
clc
adc
je
ins
je
mov
mov
or
or
je
or
jmp
dec
sti
out
ss
mov
or
add
or
add
jo
test
add
daa
xor
div
enter
fnstenv
leave
pop
add
xchg
push
scas
cmp
xor
mov
lea
sub
or
sbb
ror
(bad)
xlat
xchg
adc
dec
js
cmp
xor
sub
arpl
sbb
or
sbb
retf
js
add
sbb
adc
lea
or
sbb
or
add
clc
add
add
leave
push
add
ror
dec
jmp
jne
add
pop
or
adc
cmp
jmp
adc
loopne
shl
adc
fistp
jmp
scas
je
jmp
jle
rol
cmc
mov
pop
dec
pop
adc
sbb
test
dec
sbb
jmp
or
std
ror
imul
mov
lock
fiadd
and
sbb
sbb
mov
mov
jmp
(bad)
(bad)
pop
adc
ror
adc
xchg
nop
pop
test
mov
clc
dec
mov
add
mov
sub
push
add
jae
test
cmps
sbb
sub
or
imul
pop
mov
push
or
pushf
nop
pop
or
sbb
push
mov
pop
inc
dec
data16
je
or
or
add
add
arpl
pop
in
add
sub
or
inc
aaa
in
mov
add
push
xchg
pop
add
cld
push
push
xchg
(bad)
xchg
push
xchg
add
xchg
push
ins
or
out
fisubr
inc
fcomp
mov
ds
rol
rol
int3
xchg
ins
lods
adc
test
xchg
push
fisubr
ss
dec
stos
push
xor
inc
push
pop
jle
movs
push
int
xor
movs
js
and
jl
out
cmp
pusha
xchg
mov
xchg
imul
rcr
xchg
xchg
cwde
push
aam
cdq
xchg
loopne
xlat
jl
rcr
shl
cmp
out
push
add
adc
push
retf
add
sbb
add
and
inc
loope
add
je
inc
sbb
mov
jo
inc
or
push
inc
ins
jae
add
fs
das
pop
xchg
out
test
inc
sub
inc
xchg
add
mov
test
mov
xor
clc
sbb
add
adc
mov
dec
mov
aad
xchg
mov
push
push
pop
xchg
bswap
leave
leave
enter
xchg
push
cdq
clc
fs
jmp
xchg
mov
add
xor
sub
loopne
cmp
cwde
push
daa
mov
mov
pop
jmp
dec
or
(bad)
xchg
inc
or
fs
mov
add
push
jb
jae
sub
fldcw
inc
fs
shl
pop
jo
sbb
out
mov
jo
xchg
push
mov
sub
cmp
(bad)
jbe
lock
loopne
push
outs
or
je
pop
xor
sub
pop
add
inc
jno
lahf
ins
pusha
mov
cs
nop
push
arpl
inc
add
rcl
std
js
test
inc
rcl
or
lea
repnz
sahf
(bad)
aad
lock
inc
pop
fimul
pushf
adc
xchg
pop
add
fsub
mov
add
add
sub
xchg
js
push
gs
lock
pop
push
adc
adc
ins
xor
lea
or
xchg
dec
xor
rcl
pop
jl
push
inc
ins
ins
dec
jae
sti
fld
push
jge
push
mov
or
push
jae
add
mov
sub
aad
pop
pop
outs
mov
(bad)
pop
ds
mov
fnstenv
or
xchg
test
sbb
push
pop
sbb
or
stos
call
xor
xor
stos
cmp
sbb
movs
call
mov
and
dec
addr16
sbb
mov
jmp
shl
add
inc
sub
ficom
sbb
cwde
xchg
xor
(bad)
mov
jle
(bad)
cmp
inc
nop
and
(bad)
sbb
(bad)
adc
call
dec
jne
rol
aas
(bad)
xor
and
stos
cwde
xchg
dec
inc
and
pushf
outs
dec
cdq
mov
or
div
enter
ret
dec
movs
mov
and
push
jg
and
jae
push
mov
cmp
(bad)
mov
push
inc
mov
push
xchg
inc
lock
and
cdq
inc
inc
mov
adc
lods
adc
out
or
add
add
aas
int3
adc
hlt
pop
pop
pop
fidiv
adc
nop
ss
pop
std
dec
psadbw
or
sbb
(bad)
(bad)
or
iret
adc
hlt
ret
mov
xchg
cli
fmul
cmp
movs
or
bound
dec
cmp
jmp
(bad)
push
sbb
xor
je
cmc
(bad)
pop
outs
push
add
sub
inc
push
cmp
jg
cmp
pop
add
push
retf
(bad)
xchg
call
shl
jb
adc
inc
cmp
lea
ds
cmc
mov
push
pop
add
inc
pusha
mov
(bad)
pop
fisttp
fs
push
cmp
ret
jo
retf
xchg
fwait
jae
repz
or
aas
lock
jmp
daa
push
dec
or
push
shr
and
ins
xchg
mov
add
aaa
or
push
fwait
mov
or
mov
cmps
sbb
xchg
sbb
add
jp
pop
or
mov
or
aas
jae
aas
push
mov
std
jne
loopne
mov
shl
ds
loope
jmp
sub
sbb
xchg
jg
mov
les
ror
add
xor
in
jo
shl
lock
or
mov
jge
mov
add
push
inc
jbe
push
popf
jge
or
mov
dec
or
dec
add
loope
mov
and
adc
cmps
jle
idiv
inc
mov
enter
loopne
pop
add
jae
pusha
add
jmp
test
jg
mov
push
jmp
sahf
ins
inc
or
mov
clc
and
nop
sahf
fistp
mov
call
adc
sahf
rcl
adc
clc
outs
int
and
adc
sahf
movs
add
sbb
add
fisttp
daa
or
lods
adc
add
sbb
mov
jo
addr16
and
sub
test
imul
or
inc
clc
sub
call
test
ror
pop
sar
js
js
xor
adc
adc
shr
ja
push
mov
add
push
xchg
je
sbb
or
push
pop
pop
mov
xchg
cmps
(bad)
test
add
push
cwde
test
mov
(bad)
cdq
add
jp
rcr
adc
inc
mov
push
inc
xor
mul
sub
add
and
sbb
add
int
rcr
outs
inc
inc
cld
hlt
je
jmp
rcl
pusha
jl
les
(bad)
pop
retf
hlt
xchg
and
mov
push
mov
fmul
and
lods
or
xchg
leave
jns
sbb
pusha
sti
or
retf
jne
mov
or
and
push
mov
sbb
lds
ja
shl
leave
push
mov
cmp
add
pop
pop
xor
and
or
pmulhuw
je
mov
adc
mov
adc
out
lds
mov
add
inc
(bad)
stos
mov
in
jecxz
xor
push
inc
hlt
sbb
inc
dec
xbegin
adc
cmp
shr
push
iret
inc
movs
jno
and
mov
push
mov
add
xor
pop
daa
inc
and
and
js
push
push
mov
loop
mov
or
es
and
sbb
enter
sbb
sub
into
mov
sti
call
and
adc
shl
cs
dec
je
push
sub
dec
repnz
call
outs
loop
std
in
stos
mov
mov
jmp
dec
fcom
add
add
in
clc
lds
lea
gs
jl
sbb
jmp
add
shr
adc
xor
cmp
enter
inc
add
movs
jae
mov
ja
sbb
movs
pop
add
imul
xchg
das
movs
push
cmp
xor
cmovo
push
leave
ds
sub
jmp
cmp
and
mov
add
fisub
inc
push
mov
jns
jb
cdq
stos
mov
sbb
add
test
outs
arpl
xor
sbb
scas
inc
sbb
jmp
push
mov
outs
retf
inc
ficom
outs
ins
push
leave
adc
inc
and
xchg
inc
test
in
add
outs
and
pop
add
sub
and
ins
mov
xor
inc
in
mov
sbb
daa
test
xor
dec
aad
mov
xor
test
mov
or
xor
pop
mov
mov
mov
sub
inc
bound
retf
xor
arpl
fidiv
or
inc
adc
sbb
or
mov
mov
gs
ins
mov
inc
jno
jmp
jne
or
gs
ins
jmp
adc
add
retf
jo
add
pop
push
mov
or
test
inc
and
stos
fcmovu
imul
lods
push
mov
stos
push
inc
pop
dec
push
add
lods
pop
xchg
add
das
pop
sub
pop
cmp
inc
add
add
mov
add
pop
(bad)
sub
rol
fsubr
pop
movq
idiv
lds
inc
jecxz
sbb
add
pop
addr16
scas
lods
cmp
ret
sahf
cmp
outs
fs
push
sbb
add
add
and
inc
gs
(bad)
mov
les
imul
fiadd
and
or
cmp
inc
gs
jne
imul
loope
sub
fabs
push
cdq
add
xchg
pop
addr16
inc
aas
mov
mov
ror
mov
adc
cmp
mov
popa
lods
push
sbb
xor
aam
sbb
mov
push
mov
in
mov
in
lahf
push
or
mov
outs
cmc
out
inc
dec
sbb
sahf
jl
add
or
(bad)
cmp
test
mov
lods
or
and
and
(bad)
mov
or
sub
jb
(bad)
movs
rcr
sub
push
or
pusha
add
dec
fs
jns
cdq
pop
xchg
ss
pop
push
jg
sbb
push
cmp
stc
scas
mov
cmp
in
inc
jae
dec
jae
das
mov
mov
fucom
dec
dec
push
sbb
dec
add
push
lods
xor
adc
test
pop
clc
mov
loope
dec
jo
aaa
inc
sbb
lea
dec
mov
rcr
sub
or
push
mov
out
adc
mov
inc
push
pop
mov
retf
mov
lds
sbb
pop
xor
pop
sbb
retf
bound
sbb
inc
pusha
mov
pop
push
or
and
mov
cmps
adc
inc
or
push
and
lods
mov
loopne
inc
cmp
add
(bad)
push
mov
lahf
pushf
ror
adc
add
push
pop
xor
xor
or
retf
push
cmc
mov
out
nop
mov
test
repz
out
sub
mov
in
(bad)
inc
sub
adc
clc
jmp
rcr
iret
and
mov
fst
fs
pop
arpl
dec
mov
adc
mov
mov
pusha
xor
push
cmp
adc
or
mov
addr16
in
jno
or
mov
in
out
out
push
imul
push
inc
pop
inc
pop
int3
adc
cld
xor
dec
lods
adc
cmp
xchg
test
or
inc
xchg
int3
ja
add
xor
dec
or
ss
inc
push
pop
cmp
push
adc
std
push
pop
xor
pop
ror
push
popf
mov
push
pop
in
pop
xchg
retf
test
int3
add
or
add
or
pop
lods
loopne
retf
(bad)
push
push
nop
mov
add
mov
mov
cmp
sti
fidiv
fistp
cs
jnp
das
adc
push
(bad)
fild
(bad)
lock
cmp
or
or
add
and
lods
enter
mov
cs
ins
and
pop
mov
adc
pop
ret
imul
add
or
sbb
mov
aaa
push
add
cmp
adc
ja
push
and
jns
jns
dec
mov
adc
ins
jo
ret
xlat
sub
(bad)
cwde
adc
rcr
(bad)
mov
popa
inc
clc
js
ins
fucomip
or
out
jno
fld
add
xchg
test
stc
mov
ins
lock
sti
sub
mov
dec
or
dec
rcr
pop
inc
dec
jne
pop
sbb
jae
mov
(bad)
fstp
mov
into
(bad)
(bad)
cli
cdq
push
push
test
in
push
push
fcmovb
popa
push
test
mov
xor
(bad)
in
out
movs
add
lods
mov
adc
pop
and
push
adc
pop
mov
outs
mov
add
push
pushf
pop
inc
jg
inc
cs
in
add
pusha
sub
leave
add
push
inc
and
add
push
fcom
mov
bound
add
inc
cld
adc
inc
rol
clc
add
or
or
xchg
lock
cmp
out
add
ds
call
add
cmp
add
inc
aaa
add
mov
add
mov
jg
test
fs
add
and
add
jg
sub
push
pusha
push
adc
shr
sub
mov
or
jl
test
lahf
std
pop
inc
add
shl
pop
add
and
or
popa
add
nop
mov
xor
add
fs
and
movs
add
mov
add
or
mov
push
jmp
adc
add
mov
mov
cld
jle
inc
sub
inc
fld
mov
movs
mov
mov
xchg
mov
mov
adc
hlt
inc
in
push
stos
je
jg
adc
clc
jae
push
in
cmps
add
(bad)
fmul
arpl
stos
iret
dec
push
or
xchg
nop
shl
mov
daa
rcr
add
(bad)
test
push
pop
(bad)
xor
sub
mov
and
call
mov
adc
mov
or
push
add
push
or
das
push
or
shr
enter
les
nop
jge
aas
cmps
jmp
inc
sub
add
sti
mov
xor
jmp
outs
cmp
cmc
(bad)
out
mov
mov
mov
xor
loope
jnp
jbe
ins
jo
in
enter
int
add
out
imul
pop
push
push
cdq
xchg
cmps
push
add
push
mov
ror
mov
mov
imul
cmp
dec
or
push
push
inc
add
mov
sbb
imul
xlat
in
jbe
jmp
cmove
test
pop
mov
pop
lock
sub
push
xchg
call
inc
jo
xor
rcr
sub
cmp
mov
mov
mov
pushf
mov
add
add
push
(bad)
sar
jmp
daa
xor
(bad)
jmp
cmp
push
inc
inc
inc
dec
dec
dec
dec
dec
dec
dec
dec
push
fisttp
or
push
push
dec
pop
pop
pop
(bad)
(bad)
(bad)
in
popa
bound
addr16
imul
jo
jb
je
jbe
js
jp
xor
xor
retf
xor
ss
cmp
sub
lahf
ja
ret
js
retf
std
and
mov
pop
pop
js
push
rep
movs
movs
lea
adc
pop
inc
int3
(bad)
pop
cmp
or
bound
xchg
xlat
fnstcw
push
or
ins
or
jno
jmp
mov
mov
call
xchg
add
xchg
fs
push
push
in
xchg
sti
add
emms
outs
inc
jae
push
sub
aam
jp
fadd
mov
push
inc
outs
fild
push
and
mov
(bad)
adc
mov
fimul
cwde
mov
enter
sti
es
das
push
push
dec
icebp
adc
mov
hlt
add
sub
fisub
idiv
and
mov
push
nop
xchg
pop
add
arpl
add
jne
jb
or
jle
push
je
jo
xchg
mov
jo
dec
cmp
iret
or
inc
mov
movs
repz
push
jl
push
push
mov
neg
pop
es
push
dec
jl
wbinvd
add
retf
push
push
or
mov
loopne
jg
mov
xor
cmp
es
popa
add
daa
jmp
inc
mov
mov
mov
test
icebp
add
dec
dec
bound
inc
sub
shl
sub
test
jb
xchg
cmp
mov
cdq
lds
and
inc
icebp
sub
inc
mov
xor
push
push
and
aam
or
push
add
add
inc
xchg
sbb
cmps
pop
mov
push
mov
dec
add
ret
int3
cmp
or
mov
inc
lds
or
leave
cmp
add
cmp
fld
inc
pop
int3
mov
cmp
inc
or
jb
dec
ficomp
stc
xchg
inc
adc
sub
jae
fs
(bad)
nop
adc
test
pop
rcl
or
pop
adc
outs
inc
ins
cmps
jmp
pop
ret
jg
iret
fstp
push
sbb
push
call
inc
push
inc
aad
pop
jg
enter
xchg
(bad)
outs
cmp
js
pop
pop
sbb
adc
add
add
push
inc
jle
xchg
or
ins
ins
xchg
fnstenv
lods
push
cs
add
inc
fiadd
mov
or
(bad)
les
enter
pop
pop
lods
pop
sbb
aad
aas
jmp
mov
ins
call
or
add
loopne
xchg
scas
mov
xchg
mov
fdivr
add
or
adc
cs
add
jmp
push
shl
in
aaa
jg
shl
or
arpl
pop
dec
idiv
arpl
pushf
shl
sbb
push
push
jb
scas
mov
fidivr
or
cmp
test
inc
or
dec
push
push
sbb
jmp
xor
mov
or
mov
ins
and
(bad)
inc
dec
inc
or
or
and
mov
bound
fadd
mov
cmp
das
rol
inc
imul
hlt
cmp
xlat
or
retf
xchg
push
xchg
rol
nop
or
inc
and
fisubr
add
mov
mov
mov
and
ja
pop
jo
jo
ja
push
cmp
out
or
push
outs
lock
sbb
dec
and
(bad)
call
das
mov
and
jno
clc
iret
pop
or
dec
lods
ret
aas
mov
es
push
daa
enter
add
test
add
xor
std
pop
sbb
enter
adc
aaa
lods
and
and
lahf
cli
dec
(bad)
push
enter
nop
dec
inc
or
mov
sub
cs
and
add
sbb
iret
jl
jne
arpl
add
pxor
movs
das
fnstcw
pop
or
inc
push
nop
push
fwait
std
or
dec
pop
mov
sahf
pop
in
mov
push
stos
adc
(bad)
cli
jg
sub
inc
mov
mov
loopne
or
pusha
pop
aad
pop
push
sahf
jmp
sbb
sbb
fidiv
je
jae
or
push
in
sub
pop
or
test
arpl
mov
movs
mov
fsub
shl
icebp
and
jmp
ret
out
mov
or
add
mov
fisubr
popa
mov
pop
cmp
inc
sti
add
push
fidiv
adc
loopne
mov
repz
movntps
iret
sar
push
cli
push
dec
int
outs
jbe
dec
js
sbb
push
adc
clc
cs
pop
aaa
call
fcom
xor
nop
push
jl
cmovnp
out
or
or
pmulhuw
in
adc
sbb
in
in
dec
dec
push
push
js
scas
pop
add
ret
(bad)
popf
lock
dec
ja
gs
add
cmc
or
inc
jne
add
push
and
popa
ja
mov
add
pop
sub
add
lods
mov
xor
adc
mul
sbb
cmp
dec
mov
push
add
aaa
dec
popa
cs
addr16
pop
sub
xor
ss
shl
shl
xor
gs
rcr
jp
aaa
outs
cmp
into
jb
cmp
add
sbb
(bad)
push
arpl
out
mov
outs
movs
xor
add
cmp
mov
pop
xor
adc
xchg
jne
outs
ins
iret
fdivr
arpl
mov
sub
and
and
cmp
sub
jo
repnz
push
addr16
in
maxps
js
pushf
imul
mov
sar
jb
ins
popa
adc
and
inc
dec
push
xchg
or
ret
shl
mov
pop
pop
sar
dec
add
(bad)
mov
test
push
sub
pop
mov
sub
sub
out
jns
add
mov
push
add
adc
je
jb
dec
dec
and
bound
pop
cmp
mov
dec
ss
mov
dec
inc
sub
jmp
bound
jns
sbb
in
add
daa
pop
popf
and
scas
adc
push
test
sbb
cwde
push
mov
or
pop
lock
dec
ror
call
or
out
sbb
push
or
adc
push
mov
stos
add
sbb
mov
inc
and
add
inc
cmp
mov
cmp
push
cmp
pop
xor
pop
push
push
test
jae
or
adc
(bad)
inc
or
sbb
pop
xchg
mov
imul
add
int
jmp
stos
push
cmc
inc
mov
jecxz
mov
mov
shl
pop
(bad)
jmp
and
and
pop
pop
cmp
jo
mov
dec
mov
pop
xchg
outs
push
pop
mov
xchg
in
(bad)
out
mov
js
adc
push
lods
dec
je
ja
inc
shl
inc
rol
cdq
or
jbe
sbb
sbb
iret
sbb
sbb
sbb
rol
sbb
sbb
sbb
arpl
sub
add
pop
and
push
mov
mov
sub
fld
ins
sub
in
cmps
andnps
nop
out
add
pop
mov
or
rcl
or
test
or
div
aad
sahf
push
sub
das
pop
push
and
jb
adc
mov
inc
mov
fistp
adc
push
enter
dec
loopne
adc
sti
sbb
pop
or
mov
inc
jg
or
dec
inc
jo
xchg
mov
pop
and
inc
push
lods
xchg
movs
inc
jo
add
dec
outs
sbb
stc
inc
jns
or
cmp
cdq
add
ret
mov
dec
clc
(bad)
aam
jmp
rcl
ret
adc
pop
add
or
add
cmc
push
aad
push
ret
rol
push
cmc
jnp
inc
mov
loop
mov
pop
ins
adc
add
push
lock
xchg
push
sbb
imul
inc
xor
adc
pop
push
aad
stc
aas
xchg
dec
js
shl
adc
les
cwde
nop
sub
scas
push
or
mul
add
add
dec
outs
jb
mov
test
inc
xor
(bad)
jae
inc
popa
shl
jecxz
lock
in
imul
or
sbb
aaa
sub
jnp
push
push
and
dec
ror
loopne
outs
out
push
and
ins
das
jnp
sub
mov
xlat
mov
jmp
sbb
inc
adc
add
push
cld
div
or
data16
jae
sbb
cs
data16
popf
sbb
xlat
mov
mov
ror
push
sub
push
cmp
xlat
and
lods
push
mov
emms
arpl
add
pop
fwait
cmp
fisub
fsub
aas
add
adc
scas
loop
sub
mov
adc
adc
int
adc
push
adc
rcl
inc
mov
clc
mov
mov
add
push
add
xlat
xchg
xchg
out
adc
add
je
addr16
cld
fdivr
fldenv
sub
ds
push
fldcw
jbe
and
push
and
lods
out
movs
and
mov
adc
test
jmp
xor
dec
push
call
add
aaa
adc
push
inc
loope
xchg
push
test
sbb
push
dec
adc
jle
push
fimul
or
mulps
push
jecxz
rcl
cli
mul
dec
xchg
adc
and
pop
ror
dec
dec
cdq
movs
mov
inc
pop
sub
mov
sbb
and
pop
stc
push
ins
and
aam
shl
or
add
(bad)
sbb
lods
fwait
cmp
cmp
cld
arpl
aas
sar
in
sub
push
add
mov
fs
rol
sbb
push
imul
dec
fcomi
mov
cmp
push
fimul
dec
(bad)
adc
ins
push
int3
sbb
pop
scas
jecxz
add
add
or
int3
add
scas
leave
leave
in
mov
nop
leave
leave
leave
leave
xchg
cwde
pushf
mov
movs
test
mov
pop
ror
les
jl
add
xor
pop
sub
test
sbb
rdpmc
call
xor
inc
addr16
js
arpl
jge
inc
dec
and
dec
test
test
adc
shr
xchg
and
lods
pop
dec
mul
and
enter
mov
xchg
adc
ss
cmp
mov
add
fstp
or
xor
and
imul
into
sbb
(bad)
ror
pop
add
loope
inc
aad
ss
test
push
inc
mov
xchg
ins
or
lock
inc
pop
leave
imul
inc
xor
push
setno
mov
mov
sub
retf
dec
mov
call
call
add
xchg
push
inc
mov
mov
pop
jnp
mov
loope
outs
mov
mov
sbb
xor
jnp
xchg
call
xor
sbb
bound
or
inc
pop
sub
in
out
lea
mov
inc
sbb
mov
add
lods
inc
push
add
cmp
dec
push
pop
arpl
or
ds
pop
lea
add
dec
pop
cmp
mov
or
(bad)
aad
adc
les
in
outs
fsub
sub
or
and
lods
(bad)
add
and
and
and
xchg
into
clc
sbb
cmp
mov
scas
adc
jl
lods
add
js
retf
popa
jl
sbb
push
mov
push
and
shr
sbb
fs
jb
in
rol
add
pop
(bad)
or
dec
ret
dec
add
loope
cmp
mov
sti
outs
xlat
nop
aaa
inc
cmp
pusha
xor
adc
inc
scas
popa
dec
inc
sbb
adc
pop
sbb
jl
add
sub
loop
adc
or
jbe
sbb
lock
add
push
mov
shl
jecxz
fsub
add
add
daa
or
pop
aas
pop
loope
and
and
push
xor
pop
add
add
add
sub
or
pop
xor
push
or
test
(bad)
out
add
xchg
adc
sbb
push
inc
int
ret
inc
or
in
rol
in
or
enter
in
ss
call
in
fsubr
adc
daa
lock
and
inc
sti
in
loopne
dec
sub
inc
mov
push
adc
ss
xor
push
in
ror
inc
pop
inc
add
lods
pop
mov
dec
adc
or
or
and
popa
xor
xor
inc
shr
popa
mov
sub
xchg
cwde
push
mov
and
cwde
imul
pop
adc
push
push
retf
(bad)
mov
push
push
or
mov
fcomip
push
jp
(bad)
add
sbb
add
test
clc
sub
mov
retf
sub
mov
retf
or
outs
sub
xor
int
sbb
and
dec
jae
pushf
dec
dec
push
push
shl
mov
sub
xor
dec
shl
cmp
int3
xor
xor
inc
adc
call
pop
and
fimul
call
and
xor
ror
fs
je
sub
je
fnsave
inc
pop
push
adc
sbb
mov
(bad)
js
mov
cmp
mov
sbb
cmps
jle
fisttp
add
(bad)
dec
cs
mov
inc
pop
push
mov
pop
outs
dec
ret
or
add
inc
sahf
lea
mov
inc
popf
add
jo
add
sbb
push
ins
dec
fdivr
in
and
fdivr
daa
xchg
add
aam
sub
sbb
ds
rcr
mov
inc
int3
and
mov
pop
enter
fdiv
and
mov
ins
xor
sbb
cld
rcr
es
inc
mov
xchg
js
add
or
fcom
popf
cdq
loop
xchg
lock
xor
inc
cmp
nop
xchg
outs
and
xor
inc
or
fs
xor
lods
mov
les
pop
push
push
pop
adc
lahf
cmp
push
sar
test
inc
xchg
rcr
dec
outs
leave
fsubr
add
mov
adc
and
cmp
call
xor
and
jne
aas
clc
fwait
jp
adc
fldcw
(bad)
or
sbb
int3
rol
xchg
test
pop
nop
push
imul
cmp
lods
cmp
pop
movs
mov
sbb
in
xor
mov
jg
adc
add
jmp
jl
leave
fild
or
mov
jle
shl
ss
fs
mov
or
pusha
dec
or
shl
sub
jmp
dec
mov
fcom
and
push
cmp
dec
lods
mov
sbb
and
mov
pop
lahf
pushf
in
xor
cmp
push
xor
aam
push
sub
add
popa
scas
sub
adc
arpl
push
push
or
xlat
inc
aaa
outs
add
sldt
mov
mov
push
push
add
pop
xchg
add
add
add
add
dec
dec
scas
pop
pop
mov
gs
push
push
add
add
sub
mov
mov
pusha
je
cmp
dec
out
jae
dec
xor
mov
inc
or
(bad)
cmp
movs
and
test
mov
mov
inc
cs
nop
fsubr
aas
xlat
mov
mov
push
push
push
add
ins
add
inc
and
push
jae
or
pop
dec
pop
adc
xor
push
test
jo
loope
jle
adc
out
pop
add
jnp
push
enter
jno
clc
cmp
push
mov
or
sbb
jle
sbb
and
and
fs
mov
and
jge
outs
dec
mov
test
sub
push
jl
aam
jle
or
sub
and
sbb
sub
pusha
pop
or
loope
jae
or
fld
fcomp
and
mov
lea
jecxz
pop
jb
and
sbb
xchg
push
in
xor
pusha
push
jbe
pop
xlat
mul
inc
hlt
xchg
sahf
dec
xchg
js
jo
or
push
ins
test
and
and
and
sub
es
mov
mov
inc
jmp
cmp
and
in
iret
inc
and
inc
mov
iret
jmp
and
ret
push
or
add
ja
pop
add
test
adc
inc
push
and
pop
loop
sub
or
cmp
sahf
add
inc
mov
push
add
push
out
out
repz
pop
loop
push
je
ret
daa
clc
or
sbb
pop
adc
push
(bad)
adc
in
sub
inc
sbb
jne
push
inc
outs
mov
rcr
cmp
jnp
dec
cmp
test
lock
sbb
(bad)
mov
adc
xchg
hlt
pop
cmp
xchg
pop
lods
hlt
pop
sbb
mov
xchg
test
mov
pand
repz
add
mov
jne
jmp
pusha
pop
add
mov
sub
fild
sub
cmps
jo
jmp
test
shr
jmp
mov
(bad)
pop
out
inc
popa
add
aas
push
add
adc
(bad)
or
xchg
retf
jle
xor
xchg
out
mov
inc
inc
add
pop
jmp
xor
mov
dec
fidiv
popa
sub
sub
ret
movs
pop
mov
mov
dec
jne
mov
icebp
fstp
das
lea
jle
inc
jbe
xor
add
dec
paddsb
mov
adc
push
movs
or
jmp
adc
movzx
mov
and
dec
mul
add
jo
or
or
jg
cmp
nop
mov
xchg
pushf
repz
push
jae
(bad)
add
and
mov
and
ds
idiv
test
sbb
jmp
cmp
out
add
int3
test
ret
mov
and
mov
mov
std
push
or
or
adc
sub
cdq
push
push
cmp
std
lahf
push
(bad)
add
or
dec
mov
dec
sahf
mov
add
cmc
add
scas
cmp
je
(bad)
mov
pop
xchg
and
jns
fadd
rcr
(bad)
mov
in
add
push
add
add
sbb
or
sbb
and
stos
add
xor
out
sub
(bad)
cmc
dec
stc
add
add
fcom
add
adc
out
and
jb
les
add
mov
add
in
or
jae
jae
imul
push
fsubr
push
imul
mov
ins
pop
xor
outs
add
and
and
daa
lods
add
jae
pop
or
in
push
dec
lock
push
stc
pop
adc
mov
adc
pop
add
loopne
cli
dec
(bad)
sub
test
push
sti
movs
cli
lahf
add
inc
movs
dec
mov
fnstcw
in
mov
cs
xchg
bound
xor
mov
dec
sbb
inc
jnp
sbb
adc
inc
inc
push
xor
movs
lock
push
jmp
mov
and
and
xchg
cli
ins
rol
pop
cmp
push
and
ja
mov
and
adc
mov
add
scas
add
push
pop
add
in
cmps
add
add
add
push
rol
dec
fsin
and
pop
fdivr
pop
push
jl
addr16
xlat
fucomp
jecxz
call
je
sbb
inc
or
ret
mov
fwait
dec
cmp
jne
xlat
add
jo
push
mov
sahf
xchg
push
mov
sbb
sti
or
adc
sub
pushf
xchg
add
or
mov
inc
pop
pop
jae
std
push
clc
cdq
add
mov
lahf
dec
add
rcr
mov
inc
mov
aam
popf
adc
sbb
inc
and
mov
mov
mov
or
(bad)
push
jl
test
jl
inc
xor
adc
scas
or
hlt
fs
loope
in
out
jo
pusha
inc
leave
jmp
dec
pop
mov
add
push
inc
pop
sbb
loope
sub
or
std
fiadd
cmp
ret
xor
add
popw
xchg
cmp
sbb
inc
add
je
or
into
int
jmp
mov
add
pop
and
in
add
test
aas
rol
mov
sub
mov
xchg
mov
inc
push
mov
ins
or
hlt
ja
test
mov
popf
daa
add
dec
push
push
aas
jp
add
jae
push
add
dec
fistp
sbb
or
pushaw
cmp
mov
mov
add
nop
dec
ror
mov
in
mov
and
mov
mov
call
nop
daa
imul
dec
inc
sahf
movs
sbb
test
mov
jl
mov
ins
test
mov
jb
imul
lea
or
inc
jecxz
mov
bound
icebp
inc
aas
push
aaa
lea
pop
mov
push
xchg
(bad)
sti
(bad)
push
mov
sub
add
daa
outs
(bad)
and
pop
inc
cmp
or
ror
scas
cwde
inc
and
adc
outs
lock
push
pop
add
dec
dec
pop
push
ror
scas
(bad)
dec
add
aas
xor
shl
jmp
mov
xchg
retf
and
sub
nop
xor
gs
nop
xchg
xchg
pushf
dec
jb
in
lods
lods
mov
mov
push
inc
cs
mov
push
mov
pusha
inc
outs
outs
inc
xchg
sub
dec
pop
(bad)
cmp
aad
test
pop
leave
xor
jg
dec
mov
adc
(bad)
fild
xor
xlat
and
inc
jecxz
push
pop
sub
adc
icebp
push
mov
push
sub
inc
mov
push
dec
and
ins
or
add
(bad)
test
cmps
and
sar
xchg
pop
lds
das
adc
push
jns
sub
(bad)
popa
je
pop
loopne
xor
mov
push
xor
repnz
fnstenv
fidiv
push
stos
popf
sub
mov
mov
mov
xor
mov
mov
mov
sbb
cmps
in
xchg
nop
and
xchg
xchg
dec
leave
adc
xchg
xchg
add
fs
push
add
test
mov
xchg
push
mov
aas
in
cdq
cmp
or
aas
fld
fcomp
jae
add
in
sub
mov
pop
push
jnp
dec
adc
pop
or
dec
pop
std
jmp
cmp
push
rcr
mov
lods
sub
push
movs
sar
leave
and
mov
add
jo
ins
xchg
and
add
clc
test
pop
mov
push
and
stos
loopne
or
iret
aam
jl
xlat
dec
add
add
adc
sti
inc
test
add
bound
add
mov
push
mov
jmp
push
mov
sahf
jo
fs
mov
pop
pop
mov
and
das
push
add
mov
pop
jbe
add
push
pushf
and
cwde
xor
jbe
sbb
adc
pop
adc
mov
dec
push
enter
nop
add
pop
sbb
push
or
das
lock
xor
popa
push
mov
pmulhuw
sar
into
in
mov
push
jmp
push
jo
lea
push
dec
add
arpl
popa
fild
push
sbb
fwait
add
ja
jno
jne
push
add
sbb
adc
rcl
fsub
addr16
daa
cmp
ret
and
xrelease
jne
in
lods
unpckhps
in
cmps
pop
loop
jmp
mov
cmps
mov
enter
add
sub
inc
loopne
ss
sub
xor
or
mov
fldcw
(bad)
shr
pop
xchg
sar
aam
fdiv
ins
rcl
inc
mov
mov
fistp
hlt
sbb
add
std
xor
push
pmuludq
sub
in
adc
xchg
or
not
mov
dec
sbb
popf
int3
in
shl
inc
and
push
imul
push
icebp
sbb
test
das
and
xor
sbb
dec
add
sub
test
jg
jmp
test
pop
(bad)
mov
add
sub
xchg
mov
adc
pop
aad
nop
adc
cmp
cwde
xchg
pushf
sbb
inc
mov
rsm
aaa
mov
cmc
icebp
xor
rcl
mov
enter
arpl
les
or
inc
les
pop
add
adc
push
adc
push
and
jle
das
aam
test
jns
and
mov
data16
pop
out
call
adc
sbb
dec
fdivrp
mov
push
pop
in
cld
push
push
inc
shr
ficomp
jo
push
push
xor
pop
xlat
sbb
adc
add
add
add
out
inc
mov
jb
popa
jae
test
out
mov
cmc
les
pop
sti
and
mov
sbb
leave
(bad)
fucomp
dec
mov
adc
pop
xchg
xor
cmp
mov
ret
cs
call
sub
pop
out
push
mov
addr16
movups
movlps
loop
cwde
loopne
rcl
add
push
dec
adc
ret
fwait
or
test
inc
sbb
dec
out
or
pop
push
inc
icebp
pop
lea
dec
shl
add
jne
push
or
sub
cmp
add
sbb
das
cmp
or
pop
(bad)
add
imul
cmp
add
aam
and
das
retf
test
inc
stos
bswap
pop
inc
ins
int3
das
shr
push
sbb
js
jae
jae
push
jns
pop
pop
inc
lahf
jg
ss
mov
int3
add
xchg
sbb
mov
sbb
push
xchg
push
mov
sub
or
jo
dec
sub
nop
aad
pop
pop
pop
jns
inc
push
add
adc
add
aaa
call
int3
sbb
sbb
add
add
pop
jb
lea
push
or
cmp
lds
cmp
jl
sbb
ins
add
arpl
mov
lock
or
xor
push
adc
add
push
sub
fisub
mov
into
adc
mov
ins
mov
adc
and
adc
cld
bts
dec
push
leave
push
out
int
fcmovnu
or
and
jge
jmp
add
shr
and
and
cmp
(bad)
ror
les
inc
inc
add
sbb
not
mov
sbb
jmp
loopne
pop
mov
adc
sbb
call
dec
outs
outs
jb
or
push
add
jne
add
add
and
lds
xor
ins
jle
mov
pop
push
push
pop
test
imul
or
leave
outs
or
cmc
scas
mov
add
add
jne
add
pop
(bad)
js
loope
outs
pop
pusha
pcmpgtd
or
aas
ret
and
push
xor
rcl
in
dec
cmp
or
push
dec
test
ins
mov
or
inc
sbb
sbb
cmp
xor
loop
iret
inc
sbb
lea
cs
mov
jge
push
pop
add
and
fstp
sbb
push
push
mov
xor
sbb
push
adc
adc
out
mov
out
push
cwde
fadd
sbb
mov
mov
xor
push
push
fld
xor
dec
pushf
sbb
fucomip
or
push
or
pop
sbb
inc
inc
xor
pop
mov
(bad)
jnp
pop
pop
ret
daa
scas
push
xchg
(bad)
test
add
(bad)
js
xor
inc
rol
ret
nop
add
xor
mov
not
shr
sbb
xor
jne
ds
or
in
(bad)
ins
out
outs
cmps
loope
mov
aad
sbb
or
xor
je
mov
mov
(bad)
into
adc
test
push
pusha
sub
hlt
mov
sub
in
inc
clc
xchg
mov
inc
xchg
or
pop
push
jo
inc
paddsw
add
sub
xor
in
add
clc
sub
in
or
lea
(bad)
daa
sbb
sbb
dec
xor
mov
xchg
lock
or
add
fstp
sub
mov
scas
inc
cwde
pushf
test
out
add
xchg
shr
add
and
dec
std
clc
mov
ret
sub
call
cmps
test
cmp
rcr
test
inc
je
out
sbb
sub
add
je
sbb
fs
jne
mov
pop
shl
xlat
or
sbb
into
std
out
and
xchg
stos
or
sub
sbb
loopne
mov
les
repnz
sbb
stc
ficom
inc
cld
push
clc
and
popf
imul
fistp
je
aam
fisubr
sar
sbb
sbb
gs
ret
adc
or
mov
jg
adc
fadd
daa
in
sbb
sbb
cmps
pop
dec
inc
fisub
cmp
inc
or
inc
rol
cdq
push
push
daa
dec
icebp
neg
lock
pop
push
jbe
test
daa
cld
push
mov
or
dec
jmp
add
or
div
xchg
ror
mov
inc
push
push
jno
pop
dec
push
test
add
pop
ss
push
inc
lods
lea
sub
mov
mov
sub
cmp
(bad)
xchg
adc
sbb
fldenv
je
aad
push
push
popa
add
pop
das
dec
fst
or
(bad)
repz
dec
pop
sbb
ret
pop
pop
xor
rcr
js
pop
jle
sbb
daa
lods
pop
xchg
movd
pop
inc
jle
and
push
fs
cmp
pop
and
adc
adc
enter
adc
pop
pop
aaa
add
popf
and
xchg
jae
add
les
mov
cmps
xor
mov
mov
dec
and
jo
xor
sub
in
xor
int3
or
fdiv
and
xlat
pop
xor
fnstenv
arpl
sbb
jg
popa
aas
xchg
sbb
inc
dec
jne
shr
ret
cmp
sbb
jle
sti
xor
sub
inc
in
mov
and
jae
add
ins
sub
jmp
pop
add
or
jp
and
xchg
rol
add
pop
push
test
leave
and
inc
daa
cwde
mov
ret
out
inc
clc
push
inc
jl
enter
jge
(bad)
jb
popa
rol
xchg
pop
mov
inc
mov
adc
jg
pop
adc
ret
mov
mul
mov
and
adc
ret
test
mov
fadd
xor
xor
sbb
lock
in
mov
(bad)
pop
cmp
add
add
mov
and
jae
loopne
lea
push
call
lods
ds
jne
sub
mov
and
inc
mov
sub
mov
hlt
aas
jecxz
mov
mov
lea
and
mov
and
and
ins
push
dec
add
inc
mov
aas
jo
pop
test
es
dec
add
das
iret
cmp
adc
inc
int3
jbe
repz
mov
cmp
jo
ins
fld
mov
dec
push
jb
and
outs
in
or
dec
fs
or
jne
xor
mov
push
std
cmp
and
and
imul
fmul
xor
and
push
jge
cmovno
cmp
inc
jb
gs
inc
mov
mov
repnz
stc
(bad)
js
rol
and
and
adc
add
outs
push
inc
dec
nop
dec
pop
add
add
or
call
sbb
push
inc
sub
adc
xor
jo
or
push
bound
or
xchg
mov
pop
inc
or
test
or
push
add
xor
jmp
(bad)
dec
imul
sbb
add
adc
pushf
xchg
aas
cmps
cli
jg
inc
adc
pmuludq
mov
into
lods
stos
dec
cmp
sub
lea
ds
(bad)
cmp
fst
jne
call
stc
add
mov
cmp
xchg
pop
pusha
test
clc
pop
popa
shl
xor
or
jne
cmp
(bad)
adc
ds
pop
pop
pop
(bad)
add
push
daa
mov
int3
or
out
(bad)
sub
push
nop
xchg
cld
mov
inc
mov
push
cmp
dec
push
adc
pop
daa
popa
add
sbb
mov
or
add
inc
or
fucomi
(bad)
cmc
es
mov
sub
lock
mov
and
mul
pop
sbb
xchg
fimul
dec
outs
scas
sbb
data16
add
popa
dec
push
and
or
cmp
in
dec
or
arpl
(bad)
sub
pop
mov
and
movzx
or
dec
adc
outs
outs
dec
jne
jnp
pop
ins
xchg
out
cmp
sub
pusha
adc
lea
outs
test
pop
xchg
pop
adc
push
ss
add
add
cs
pop
mov
mov
push
mov
sti
add
sbb
adc
dec
inc
xor
push
sub
ror
mov
out
je
das
jp
push
sub
loopne
sub
xor
xchg
add
push
jnp
ret
xlat
or
loopne
mov
ffreep
add
xor
outs
ja
adc
popa
arpl
or
mov
push
add
sub
(bad)
fadd
ret
dec
outs
jnp
es
inc
push
imul
cmp
push
push
iret
femms
sub
out
pushf
mov
dec
xchg
sub
cdq
mov
sbb
pushf
mov
cs
pushf
(bad)
inc
sahf
sbb
pop
cmps
lock
and
(bad)
pusha
xor
daa
rdtsc
jo
leave
enter
rcr
xor
leave
leave
lods
neg
inc
lds
and
add
push
inc
xor
sub
aas
es
xor
add
add
or
add
stos
pop
cld
mov
or
jno
and
pop
push
mov
fdivr
test
adc
push
popf
sbb
test
or
popa
outs
push
push
pushf
dec
add
pop
es
das
add
jecxz
jo
or
je
push
and
cmps
push
ss
mov
pop
bound
leave
mov
movs
aaa
leave
or
pop
xor
adc
pusha
sub
jmp
ret
stc
int
mov
out
retf
pusha
cdq
jnp
sbb
dec
retf
(bad)
mov
xchg
retf
mov
sbb
or
inc
imul
aam
fldenv
jns
xchg
js
lock
outs
rol
test
ret
in
ss
cmp
fnstcw
adc
adc
shl
loopne
(bad)
sar
add
or
jne
test
and
push
enter
and
push
xchg
xchg
mov
inc
add
inc
pop
stos
sbb
add
xchg
bound
pop
dec
sub
cmps
add
mov
xchg
shl
icebp
push
gs
jg
or
cmc
cmp
cwde
jle
aaa
cmp
push
mov
sbb
pusha
or
sub
cmps
pop
lds
popf
outs
lea
add
je
or
sbb
int
or
scas
pushf
cmp
pop
ror
cmp
mov
or
add
push
icebp
call
adc
or
mov
jno
loopne
and
and
and
add
jne
enter
rcl
mov
pop
add
les
adc
lds
xor
jnp
mov
sar
sbb
popa
jnp
int
cmp
xchg
cmp
or
mov
and
clc
ror
pop
pop
and
sbb
out
adc
or
aaa
push
ret
dec
retf
fdivr
add
std
mov
std
das
cmc
pop
test
mov
mov
dec
and
fnstcw
or
mov
popf
or
xchg
xor
nop
push
adc
jg
test
xor
xor
jne
std
xor
and
cmp
jle
adc
mov
add
push
push
(bad)
cmp
lock
bound
sub
and
cld
lds
pop
lock
xchg
push
mov
sbb
pop
addr16
and
hlt
ret
sub
iret
add
pop
xchg
pop
sub
cmp
fcom
push
bound
xor
and
xchg
fisubr
add
xor
pop
sub
xchg
das
sbb
or
push
pushf
inc
sbb
or
ja
jl
icebp
shl
or
cli
je
sbb
and
mov
mov
or
(bad)
dec
add
dec
adc
push
push
mov
dec
adc
pop
push
mov
mov
mov
retf
stc
es
loop
push
push
sbb
test
lock
shl
and
out
inc
jl
push
clc
jne
add
cmps
xor
(bad)
mov
mov
je
and
call
hlt
push
ror
and
cmp
sub
inc
add
je
fld
xor
add
sbb
push
cmp
jg
mov
mov
idiv
push
cmp
mov
mov
ret
sbb
cmp
dec
pop
mov
push
out
xor
mov
adc
cmp
jge
aad
shr
jnp
clc
div
mov
iret
aam
iret
or
cmp
mov
add
shr
pop
adc
dec
pop
add
add
jne
and
mov
nop
mov
js
cmp
inc
out
jl
add
or
mov
jmp
add
sub
xchg
cmp
adc
sbb
jle
cmps
sbb
imul
les
lahf
inc
adc
pop
push
fimul
push
and
dec
rcl
mov
pop
sbb
xor
in
pop
jge
xor
sub
inc
push
add
add
add
cmps
inc
das
or
add
loope
test
inc
pop
enter
pop
gs
js
inc
sar
js
and
mov
(bad)
ja
enter
ins
jg
add
and
add
aaa
shl
movs
int3
xchg
mov
nop
outs
loopne
repnz
call
dec
fsub
xchg
sbb
xchg
adc
out
adc
xor
ss
mov
push
enter
and
sar
ret
in
inc
jmp
in
dec
test
jl
sar
lea
cmp
jge
pop
jb
mov
jb
xor
sbb
xor
out
push
je
push
add
add
dec
jne
outs
adc
icebp
outs
adc
shr
push
adc
push
inc
dec
jne
cmps
xor
mov
fadd
test
jne
fcomi
add
mov
pop
mov
sti
lds
bt
add
adc
and
and
inc
inc
jmp
test
and
add
sub
or
jae
leave
mov
(bad)
mov
into
stos
dec
adc
jp
mov
mov
xchg
add
movs
popa
jg
fbstp
xor
mov
shl
dec
into
xlat
mov
ror
stc
test
or
sub
loopne
mov
imul
sub
fisubr
lea
xchg
(bad)
jmp
lods
add
(bad)
adc
or
jle
lods
sub
sbb
push
or
rcr
mov
jmp
(bad)
push
xor
and
mov
sub
sbb
add
rol
and
stos
fild
imul
push
sub
movs
jl
add
mov
(bad)
shl
cmp
loope
xor
and
and
jmp
das
dec
cmp
adc
pop
divps
or
inc
jb
outs
lea
imul
imul
cmp
mov
add
mov
xor
sahf
or
jns
jbe
add
push
inc
add
sub
lea
cmp
and
ds
in
sbb
sub
push
mov
cmp
jns
loop
adc
ds
add
jge
lds
pop
mov
fucomip
mov
jne
add
sbb
inc
rcl
in
movs
inc
lock
dec
jb
ins
loopne
loop
add
mov
or
js
pushaw
jne
sub
ins
imul
inc
inc
add
fcom
outs
sbb
mov
dec
outs
test
push
push
xor
xor
and
rol
out
sub
inc
in
jecxz
sbb
inc
xchg
cli
add
or
mov
adc
ins
pop
sub
mov
cmp
sub
mov
pusha
jmp
mov
jge
div
xchg
cmp
add
add
pop
pop
aaa
pusha
jp
cmp
push
pop
inc
add
add
inc
test
cwde
push
pop
dec
xlat
xchg
or
adc
fdiv
repz
adc
or
pextrw
inc
mov
or
mov
shl
add
dec
cmps
ret
sbb
jmp
out
or
rol
js
jb
hlt
sbb
arpl
mov
cmp
add
test
push
and
cmc
sbb
push
and
fucomi
pop
inc
pop
shr
out
pop
cmp
add
aaa
call
jge
ins
es
inc
adc
and
jno
adc
(bad)
or
add
mov
push
add
test
inc
aaa
add
popa
mov
in
xchg
mov
jo
mov
mov
xor
outs
dec
mov
add
or
(bad)
je
mov
call
mov
push
mov
inc
dec
dec
test
xor
or
aam
pop
aaa
xor
int3
js
dec
ins
pop
imul
ja
bound
ret
fs
jno
scas
sub
inc
adc
mov
pmaxub
das
pusha
or
jbe
cmp
jne
or
aam
dec
sbb
aaa
dec
xor
inc
clc
adc
aas
xor
dec
pop
sub
in
shl
cmp
ret
push
push
pop
repnz
mov
jbe
add
and
xlat
in
pop
xor
daa
inc
pop
pop
or
repnz
retf
(bad)
call
cmp
jne
mov
xchg
adc
or
and
cs
fld
pop
xlat
pop
cmp
or
dec
dec
popa
es
ja
gs
pop
and
fidiv
mov
jnp
inc
aas
or
xor
ss
and
and
pop
add
rcr
push
loop
adc
popa
jb
push
mov
pop
dec
popa
inc
lock
inc
pop
popf
add
lahf
and
mov
sub
pop
clts
lahf
adc
or
push
aaa
push
sbb
add
xchg
loopne
(bad)
pop
dec
hlt
popf
dec
arpl
ja
jo
adc
push
aaa
jnp
adc
popa
adc
dec
inc
cmp
ficom
dec
das
adc
push
fdivr
add
push
pop
pop
mov
xor
nop
fs
xchg
mov
adc
sbb
push
sbb
mov
addr16
jle
jl
test
pop
into
push
cmp
push
xchg
pop
jge
or
pop
js
out
mov
push
mov
or
dec
test
push
dec
jl
(bad)
movs
push
mov
push
dec
fdivr
enter
loop
inc
cs
sahf
neg
repz
mov
dec
push
mov
shl
daa
mov
mov
adc
adc
or
jl
bound
inc
xchg
adc
xchg
rcl
jae
fs
bound
jne
ins
jo
pusha
add
jmp
mov
loopne
inc
(bad)
jae
call
jge
sub
sub
std
push
dec
outs
jo
lods
pop
je
jmp
sbb
sub
dec
pop
adc
dec
xchg
mov
mov
inc
stc
ins
mov
add
xor
push
es
push
or
and
xor
inc
push
xor
sub
push
pop
das
mov
std
das
sti
fs
jne
fnstsw
mov
les
arpl
out
push
sbb
xor
or
inc
int3
fwait
sub
and
movs
inc
shr
adc
or
mov
ins
fs
inc
adc
loope
mov
rcl
sub
and
bound
cmove
jg
in
not
and
dec
das
and
push
mov
ja
inc
pushf
das
and
cmps
ins
jmp
dec
imul
mov
inc
push
pop
push
mov
mov
add
xor
sub
jle
mov
add
sub
xor
push
cmp
sti
inc
push
mov
imul
pop
push
jg
push
pop
in
jmp
add
das
add
push
and
fistp
jns
repnz
push
mov
mov
fld
add
pop
sbb
cmp
pop
pop
pop
psrad
mov
pop
loope
and
sahf
pushf
pushf
movs
loop
pop
pop
lock
dec
xchg
rcr
out
leave
sub
push
pop
aas
jno
cld
cdq
xor
xor
lahf
ss
repz
pop
aaa
add
pusha
jg
or
loopne
retf
mov
por
cmp
or
loope
scas
inc
sub
popa
arpl
pop
cwde
popa
jbe
rol
inc
gs
dec
ins
push
mov
sub
bound
std
adc
call
xchg
add
int3
sub
mov
inc
js
data16
mov
jae
fs
pop
sbb
rcl
mov
fbstp
fdiv
or
jecxz
loopne
push
cwde
and
cmp
or
dec
dec
inc
ins
or
pop
inc
jp
fld
or
into
inc
xchg
rol
push
push
and
out
xchg
xor
add
push
and
rcr
xchg
add
add
test
out
popa
lahf
add
es
adc
imul
cmps
iret
push
mov
push
adc
sti
mov
fwait
aaa
push
cld
push
pop
push
xchg
je
in
sbb
pop
test
popa
xor
push
mov
mov
xor
add
jne
and
pop
inc
adc
imul
or
into
jb
mov
mov
fadd
aaa
icebp
or
dec
or
jb
mov
add
pop
movs
push
or
popa
inc
sub
jne
(bad)
xlat
test
mov
dec
js
movs
sub
repz
dec
add
lods
and
sub
dec
out
xchg
cwde
test
(bad)
out
popf
pushaw
adc
mov
test
sbb
inc
mov
ficom
or
adc
jns
jnp
and
mov
inc
and
jnp
test
clc
int
gs
icebp
or
lea
and
ins
stos
sbb
lea
or
adc
sti
ins
xor
sub
pop
or
xchg
sbb
scas
add
mov
jecxz
mov
jb
call
call
shl
nop
add
xor
clc
outs
jb
sbb
popa
or
add
(bad)
jae
add
iret
test
or
pop
sbb
or
push
cmp
inc
add
or
dec
jmp
mov
in
lea
mov
cmp
add
jae
loopne
fwait
and
add
adc
fist
sbb
push
push
push
imul
add
inc
and
or
add
test
mov
pop
add
stos
xchg
xor
push
lods
pusha
mov
cdq
cs
push
pop
ficomp
imul
push
inc
outs
je
lea
pop
xchg
into
jns
pop
in
mov
(bad)
cmc
adc
cmc
sbb
push
push
and
push
imul
dec
dec
rcl
sbb
xchg
das
inc
adc
mov
jmp
mov
jp
or
das
loop
call
dec
outs
das
or
dec
lods
mov
add
mov
xor
xchg
mov
stos
push
and
rcl
loop
pusha
pop
(bad)
ja
std
pop
push
or
add
push
dec
jae
add
test
retf
mov
cmp
dec
jae
and
xor
hlt
aam
outs
or
call
mov
adc
cmps
lahf
sub
outs
or
or
jae
retf
or
nop
nop
sbb
js
shr
inc
mov
add
dec
adc
aad
imul
ins
jge
nop
and
lea
push
xchg
icebp
retf
dec
mov
inc
comiss
sub
add
xor
sbb
popa
(bad)
lods
aas
jp
sub
push
cdq
jns
mov
mov
popa
in
mov
jne
ja
sbb
repz
mov
fild
pop
jg
ins
popa
ins
ins
cmp
push
cmp
inc
adc
into
test
dec
popf
retf
adc
and
push
ins
or
add
mov
test
add
outs
imul
jecxz
push
test
cld
popa
jb
mov
xor
mov
push
je
and
pop
sub
xor
lds
arpl
xor
add
adc
popa
nop
cmp
mov
nop
ins
lds
mov
call
sub
push
inc
mov
dec
rol
inc
inc
and
bound
(bad)
sahf
mov
test
xor
loop
test
movs
xchg
push
mov
adc
xor
je
arpl
push
adc
xor
pop
add
mov
pusha
loope
add
add
pop
cmc
add
adc
sbb
or
or
(bad)
pop
adc
dec
sbb
add
or
cs
test
add
adc
adc
mov
cmp
dec
dec
int
dec
adc
inc
mov
das
js
xchg
nop
inc
dec
pop
add
imul
mov
out
add
jle
push
ret
rol
push
pop
shl
mov
rcr
push
or
cmp
sbb
adc
scas
pop
mov
fs
mov
out
mov
gs
add
popa
mov
call
mov
mov
popa
xchg
out
fucom
add
or
rcl
and
push
ja
call
push
fadd
and
or
pushf
adc
inc
or
inc
inc
adc
mov
sbb
pushf
shl
ins
inc
xchg
fmul
sbb
(bad)
sar
lea
adc
push
cmp
lods
dec
popa
pop
call
inc
daa
jo
pop
pop
adc
inc
add
push
pop
outs
xchg
mov
movs
imul
(bad)
add
inc
adc
cld
adc
xor
jbe
in
fcmovnb
and
mov
mov
(bad)
cmp
mov
dec
inc
xor
pop
movs
xor
xchg
push
repz
pop
ret
pushf
cs
sbb
aas
mov
pop
mov
cs
outs
jge
or
add
test
fcom
or
std
ret
sti
mov
or
inc
add
rol
adc
mov
and
mov
adc
mov
and
xlat
rcr
loopne
stc
(bad)
mov
loop
cmp
fsub
lods
bound
push
add
push
dec
bound
je
dec
and
out
add
int3
retf
sahf
mov
mov
arpl
cmp
and
cmp
jo
shl
daa
cmps
(bad)
jne
mov
add
inc
jne
sbb
jl
pop
pop
fcom
loopne
cwde
add
lea
(bad)
jns
das
pop
rcl
push
cwde
push
aas
dec
mov
xor
or
add
adc
sub
add
cmp
mov
cld
mov
or
sbb
add
add
sbb
push
pop
js
ror
inc
(bad)
adc
dec
jecxz
lea
retf
inc
add
push
(bad)
loop
mov
push
rol
mov
iret
fistp
push
cdq
pop
mov
fcom
or
pop
and
icebp
xchg
push
add
xlat
jge
lock
push
pop
or
arpl
ffree
mov
push
ffreep
cs
push
pop
and
and
pusha
mov
(bad)
push
imul
test
xchg
jae
inc
or
frstor
arpl
test
je
sbb
jp
mov
mov
sbb
add
and
loope
dec
xor
push
xchg
jmp
in
adc
or
mov
pop
xor
xchg
pushf
mov
hlt
sbb
imul
lock
and
or
jmp
fwait
mov
daa
enter
arpl
shl
stc
jge
inc
dec
push
sbb
shl
test
pop
xchg
cmp
fwait
add
daa
add
mov
sbb
sbb
push
adc
iret
or
fcomp
jmp
jge
cmp
cmp
xor
sbb
or
retf
fld
leave
xchg
and
pop
lea
pop
push
lock
jne
jo
adc
cmp
imul
dec
and
pop
mov
jle
mov
pushf
xor
icebp
loope
inc
pop
mov
inc
sbb
push
push
jg
and
cld
in
fs
clc
jne
js
adc
xor
mov
push
(bad)
push
fcmovnbe
ins
dec
cmp
imul
ret
lahf
jo
(bad)
pop
or
shl
mov
fild
ret
xchg
dec
enter
mov
ins
add
retf
fcomp
movs
xor
xchg
mov
shr
jmp
test
aad
mov
jmp
sbb
xor
inc
jg
ror
add
or
js
dec
or
mov
add
out
pop
fwait
add
sub
xor
call
dec
sub
call
inc
inc
sub
rcr
(bad)
repz
add
aaa
(bad)
sbb
add
xlat
in
jl
sbb
xchg
sbb
sub
jo
inc
or
add
inc
adc
add
mov
sbb
mov
cmp
cmp
out
mov
push
adc
mov
out
bound
movs
rcr
mov
push
or
jge
xor
sub
into
adc
add
or
adc
ret
xchg
mov
aam
in
adc
std
add
adc
cmp
jl
fadd
add
loopne
pop
fprem
dec
lock
adc
mov
push
adc
pusha
add
push
xor
add
xchg
test
lock
out
or
push
popa
pop
inc
and
fwait
call
pop
mov
mov
jnp
es
icebp
enter
jb
in
add
or
out
pop
xor
jmp
fimul
mov
inc
mov
fisub
(bad)
stos
cmp
xor
push
sbb
enter
adc
push
mov
jle
call
pop
or
and
fmul
into
loope
and
mov
mov
inc
in
hlt
mov
push
cmp
push
push
ss
add
lea
jno
or
clc
xchg
add
test
mov
cld
jge
lea
adc
inc
loop
mov
sub
lock
sbb
inc
jne
jg
cmp
add
add
adc
pusha
leave
sbb
jecxz
inc
jl
sbb
push
in
inc
add
mov
inc
clc
ret
cmp
add
adc
or
inc
pushf
inc
mov
pop
add
test
pop
jbe
adc
clc
jae
jb
push
add
rcl
sbb
int3
sbb
lock
dec
lods
jo
hlt
fist
adc
xchg
loope
test
jo
jp
pop
sbb
neg
outs
ja
jne
pushf
inc
xor
mov
imul
jne
pop
add
xor
ins
jge
jb
mov
cwde
push
shr
jle
in
ja
push
add
or
sbb
add
cmc
or
mov
fwait
xor
push
movs
push
popf
adc
cmp
enter
adc
sbb
mov
nop
push
leave
mov
or
jge
dec
sub
fiadd
mov
mov
aas
fisubr
sbb
test
js
jmp
sub
or
push
or
inc
jnp
inc
mov
push
adc
pop
push
loopne
sub
int3
aas
xchg
cmp
cmp
js
test
(bad)
jmp
xchg
cwde
fadd
dec
fdiv
inc
push
icebp
aam
inc
xor
inc
mov
push
fdiv
outs
add
data16
je
sub
xchg
add
movs
int
les
arpl
sahf
mov
lods
call
call
inc
pop
stc
pop
cld
stos
icebp
sub
dec
mov
jbe
iret
mov
jae
push
cs
sbb
int
adc
push
rcl
ds
push
hlt
loope
mov
popf
push
fucomip
and
jne
pop
sbb
jle
push
mov
nop
and
mov
mov
movs
pop
or
cmp
or
jbe
push
or
mov
jl
in
mov
inc
pop
call
clc
fwait
or
mov
scas
enter
jg
sbb
push
adc
fdivr
test
add
sbb
jg
add
cmp
inc
inc
add
pop
out
retf
in
add
xchg
ret
cdq
sub
push
jo
or
aad
mov
jg
sbb
into
mov
mov
pop
pop
inc
(bad)
push
add
push
and
inc
xlat
jl
xor
adc
jmp
stc
and
xchg
adc
jle
mov
jo
jle
test
push
sub
movzx
out
sbb
movs
push
jmp
mov
ins
pop
inc
(bad)
stos
lea
call
dec
mov
push
hlt
mov
xor
and
js
or
mov
mov
sbb
add
dec
les
jge
add
add
add
xchg
js
mov
jl
mov
inc
and
xor
iret
sub
mov
inc
pop
inc
pop
and
sbb
pop
cs
or
ja
mov
xchg
rcr
test
das
mov
nop
popf
xchg
fisubr
sar
cmp
dec
mov
lock
dec
je
test
cmp
add
inc
ret
adc
ss
and
jbe
xor
sub
add
cmp
scas
push
call
jg
or
sbb
aam
mov
push
sbb
adc
jbe
or
cmp
xor
cmp
arpl
div
clc
pop
and
and
pop
loopne
push
sub
or
mov
or
sub
adc
(bad)
fcom
mov
mov
lahf
scas
int
test
jne
loopne
(bad)
jge
mov
hlt
jb
pushf
inc
(bad)
fmul
pop
add
pusha
push
push
aaa
push
mov
or
or
jbe
repz
je
aas
retf
rcl
mov
sbb
loopne
adc
scas
movs
inc
test
mov
adc
jmp
inc
sub
add
repz
shl
push
jae
or
sub
aaa
daa
mov
fistp
sar
sub
sub
add
mov
add
cmp
movs
jnp
in
xor
sbb
jp
dec
test
sbb
aaa
add
mov
add
or
dec
ja
in
fnstcw
iret
and
cmps
(bad)
mov
jb
shl
and
je
dec
xchg
out
lods
test
retf
leave
cwde
mov
or
xor
jge
mov
loopne
dec
popa
es
fs
hlt
ja
repz
stos
sbb
jle
cmp
jne
retf
adc
dec
cmp
sbb
sti
push
add
pop
pop
jae
jmp
or
adc
sbb
rcl
inc
adc
rol
mov
std
je
or
xchg
fild
jle
ret
inc
xor
mov
(bad)
push
jae
lmsw
and
sar
mov
sub
pusha
inc
dec
sti
pop
mov
sub
jnp
loopne
mov
add
jmp
jl
repz
fdivr
mov
lea
push
inc
cld
(bad)
popa
test
shr
jge
aaa
sbb
pop
add
add
dec
pop
inc
lods
outs
lahf
cld
int
pop
cmps
and
xor
sub
popa
add
ja
inc
xor
pop
daa
adc
adc
pop
jmp
inc
repnz
mov
inc
sar
and
sub
pop
test
cmp
imul
aaa
jle
inc
xchg
dec
push
cmovl
mov
mov
ins
ins
inc
cld
mov
mov
dec
xchg
jle
push
or
pusha
outs
push
jmp
mov
ins
cs
push
sub
dec
pop
mov
pop
adc
adc
inc
sub
adc
sub
daa
mov
imul
je
ja
sbb
or
dec
adc
jne
cli
adc
dec
inc
push
mov
aad
mov
nop
fwait
(bad)
push
xchg
mov
xor
cmp
and
aaa
sbb
push
or
xor
add
push
inc
mov
ret
add
or
leave
out
fucomip
xor
mov
hlt
jmp
mov
mov
imul
and
push
add
dec
sub
xor
push
in
push
adc
or
cmp
xchg
iret
clc
lahf
sar
push
jge
ficomp
mov
sbb
adc
ss
je
iret
bound
add
sbb
inc
push
lsl
sub
lods
jbe
hlt
sbb
popa
into
int3
mov
bound
mov
js
add
adc
shl
jbe
sbb
xor
nop
push
sbb
stc
adc
cmps
inc
cmp
push
push
ins
add
and
cld
mov
pop
(bad)
sub
push
dec
rcr
cmp
outs
loope
int3
icebp
lds
pop
cwde
data16
adc
mov
jns
movs
cdq
test
jg
not
sar
clc
adc
xchg
jns
xor
adc
add
add
cmp
movs
or
popa
mov
pop
sub
mov
dec
gs
aam
or
loope
or
hlt
inc
pop
lock
lahf
mov
adc
jle
sub
ss
ret
adc
loope
pop
mov
jge
fst
add
ficom
sub
popf
xchg
icebp
cdq
jmp
or
into
nop
cmp
call
cmp
imul
cmps
xchg
and
push
mov
sub
xor
or
mov
pop
nop
push
pop
xchg
repnz
shl
ret
mov
dec
sbb
cmp
jge
aaa
out
(bad)
adc
mov
pop
je
jge
mov
fld
pop
mov
adc
(bad)
pop
adc
add
inc
sqrtps
imul
mov
(bad)
cmps
push
add
or
xlat
mov
data16
jmp
jmp
ds
pop
gs
jbe
jmp
push
push
push
and
jecxz
test
xor
mov
jb
dec
jo
sar
and
retf
lahf
xchg
dec
inc
and
dec
sbb
(bad)
cmps
fisubr
mov
clc
fisttp
and
add
add
rol
adc
retf
fld
sbb
pusha
push
mov
mov
and
adc
and
enter
and
les
sub
mov
or
ret
mov
mov
jg
call
mov
aaa
sar
add
lahf
hlt
test
add
add
jg
cmp
(bad)
ret
nop
jnp
dec
dec
sub
sbb
lock
mov
test
outs
aas
fadd
add
push
push
enter
jnp
lods
mov
je
ins
add
shr
bound
sub
cmp
ret
pop
push
loopne
jb
jg
xor
int3
xchg
sub
adc
imul
cmc
retf
sbb
arpl
repz
xchg
inc
ss
cmps
jmp
push
gs
xor
mov
enter
dec
mov
jg
mov
lock
ins
pop
inc
call
dec
clc
push
xchg
into
dec
xchg
jns
push
out
cmp
xor
pushf
and
mov
pop
pop
xor
xchg
retf
push
sti
adc
mov
cmp
(bad)
jg
mov
xchg
js
leave
xchg
add
pop
mov
mov
mov
rcl
xor
in
es
das
(bad)
mov
addr16
add
add
and
test
sub
add
push
mov
mov
xor
pshufw
or
dec
les
push
outs
arpl
je
test
loopne
test
in
mov
add
xor
imul
cmp
add
(bad)
in
jne
imul
inc
inc
jns
pop
add
adc
dec
add
mov
sbb
outs
sub
imul
xchg
push
add
push
push
mov
dec
in
pop
push
xor
sbb
mov
mov
ja
adc
cwde
popa
dec
shl
lods
inc
hlt
lea
mov
in
cmp
inc
sub
push
pop
mov
jne
add
out
icebp
jno
dec
cdq
pop
iret
add
pop
cmps
hlt
jno
addr16
pushf
outs
cwde
pop
cmovle
cmp
shl
add
ud2
push
(bad)
push
xchg
and
mov
add
push
popa
js
or
js
xchg
and
dec
and
sub
leave
js
inc
dec
push
shr
mov
gs
push
aad
add
jmp
or
push
stos
pop
xor
add
add
nop
dec
inc
div
inc
sub
imul
sub
jo
xchg
or
ins
loopne
je
inc
push
adc
dec
jnp
xor
sub
adc
mov
outs
clc
jo
add
mov
xor
je
jno
jp
popa
cmp
sar
ins
mov
data16
ss
mov
ins
(bad)
push
in
popf
out
or
adc
push
mov
push
sub
ins
div
(bad)
dec
(bad)
prefetchwt1
in
sub
dec
jp
mov
mov
cmps
add
sub
xchg
hlt
in
fs
popf
out
xchg
leave
leave
sub
(bad)
push
inc
cmc
or
sysret
aaa
push
xor
iret
pop
cmp
sub
push
mov
jo
fisub
push
add
xchg
mov
pop
mov
sbb
lds
inc
xor
fsub
mov
cmps
add
cmps
sbb
xor
mov
fwait
xchg
shl
test
mov
add
pop
cmp
adc
add
imul
gs
shl
hlt
xchg
mov
add
rcr
rcl
loop
adc
and
cmp
mov
dec
scas
mov
daa
mov
jmp
cmp
inc
pop
mov
loopne
nop
ins
daa
ins
push
dec
pop
cmp
mov
fwait
mov
adc
jecxz
adc
and
mov
xchg
cmp
xchg
popa
mov
into
xchg
cdq
adc
paddd
cwde
ins
lods
adc
sahf
pop
cmc
mov
add
jl
dec
cwde
mov
mov
inc
or
je
cdq
pop
xchg
jl
push
push
outs
add
or
lods
movs
jecxz
enter
retf
pusha
add
fcom
(bad)
mov
or
push
push
gs
imul
sub
and
mov
add
jb
mov
shr
pop
lahf
mov
sub
enter
outs
dec
gs
or
xchg
inc
or
lds
lds
mov
push
and
push
dec
rol
aam
ins
mov
add
es
out
ins
arpl
xlat
inc
inc
aas
xor
push
leave
popf
enter
push
adc
add
adc
push
sbb
xor
and
xchg
inc
imul
jmp
mov
sub
dec
add
jne
dec
push
call
and
push
xchg
adc
mov
(bad)
push
scas
mov
push
pop
xchg
pop
imul
mov
jbe
ins
popa
or
shl
inc
popa
call
sub
mov
fadd
je
push
push
dec
jge
mov
or
loopne
fs
cmp
pop
ret
mov
jo
and
xchg
pop
xchg
ds
pop
iret
mov
xor
mov
cmp
jo
stc
push
sub
xchg
jecxz
or
inc
jb
adc
cmp
push
dec
add
adc
add
or
add
jmp
das
sar
dec
add
or
adc
ficomp
fstp
mov
lods
test
push
add
addr16
aam
xchg
cdq
cmc
or
inc
cmp
ins
xchg
inc
inc
inc
cs
mov
enter
inc
cdq
mov
pop
retf
add
add
movs
sbb
pop
lds
cmc
and
mov
clc
push
mov
jecxz
cmps
test
pop
ins
adc
nop
sbb
inc
push
(bad)
lahf
arpl
push
test
pop
sbb
or
adc
mov
fstp
cvtdq2ps
xchg
retf
and
xchg
pop
daa
push
and
jnp
je
mov
or
cmp
sub
call
std
outs
(bad)
xor
push
push
mov
inc
(bad)
loopne
xlat
mov
(bad)
shl
jns
push
add
inc
add
pop
push
xor
xor
sub
inc
adc
and
jne
or
(bad)
jge
cwde
pop
add
add
in
jmp
mov
and
xor
pop
mov
outs
popa
push
test
outs
dec
sbb
push
test
and
cdq
xor
std
mov
dec
or
or
dec
jno
lea
adc
test
push
jbe
retf
mov
mov
js
out
xor
sub
inc
jo
pop
ins
and
dec
push
or
push
iret
in
je
add
cmp
mov
push
in
and
or
mov
and
test
ss
jo
retfw
test
(bad)
hlt
xchg
data16
or
cmp
jbe
adc
add
hlt
sub
jmp
retf
loope
in
add
les
shl
and
sub
dec
mov
cs
xchg
call
adc
sbb
xchg
cs
mov
xchg
and
add
jne
or
add
or
lods
mov
ret
loop
or
add
iret
pop
mov
es
es
fmul
and
and
fldcw
cmp
add
retf
push
ret
fild
shr
enter
xchg
xor
scas
pop
addr16
addr16
adc
cmp
clc
clc
or
xchg
outs
ja
pushf
clc
sbb
mov
fmul
sub
cli
xor
add
les
sbb
hlt
jb
test
mov
dec
pushf
cwde
sahf
test
(bad)
mov
or
push
push
pop
into
outs
or
pop
jns
mov
cmp
mov
mov
jbe
jmp
in
sbb
(bad)
xor
dec
clc
mov
push
sub
sbb
xor
fsubr
scas
add
jns
jmp
mov
jne
int
xor
cld
leave
cwde
and
stc
mov
adc
popf
loope
and
push
out
bnd
inc
mov
pop
mov
push
fisttp
jg
in
cs
jne
push
mov
cmp
lea
ror
and
popa
inc
mov
popa
js
cmp
jg
push
mov
dec
mov
dec
dec
jg
cmp
or
xor
cs
xor
push
xor
popf
popa
sbb
and
sbb
and
inc
sub
(bad)
ins
dec
xchg
sub
aas
and
mov
push
aas
and
mov
lock
xchg
push
lea
test
sbb
mov
sbb
(bad)
or
mov
and
inc
dec
add
sbb
pop
jmp
mov
sub
or
cmps
push
inc
or
rol
cmp
push
addr16
test
fistp
pop
pop
rcl
call
mov
(bad)
imul
inc
jne
xchg
mov
sbb
test
test
sbb
pusha
mov
push
mov
dec
push
xchg
adc
or
pop
adc
ret
adc
mov
mov
inc
leave
cmp
data16
or
mov
(bad)
ja
jno
cmp
inc
push
adc
dec
ja
add
adc
inc
xor
cwde
je
mov
jl
add
je
or
hlt
and
jbe
cmp
mov
mov
ret
mul
add
sub
xor
pop
sub
add
xor
shl
call
dec
xor
adc
and
or
cmp
push
je
enter
(bad)
dec
test
in
add
or
mov
outs
rcr
setp
add
adc
nop
cmp
js
je
add
xor
test
xchg
mov
pop
dec
mov
sbb
jg
aaa
add
mov
pop
jo
jbe
dec
add
mov
imul
inc
push
mov
jo
loopne
mov
inc
push
mov
lds
dec
mov
int
xor
movs
das
scas
punpckldq
lock
lods
add
in
sbb
pop
jns
pop
pushf
test
dec
stos
sbb
ds
sbb
and
sti
pop
dec
stos
pop
jo
push
ss
fdiv
lock
xchg
mov
shl
test
sbb
rcl
sbb
js
pusha
cwde
add
xor
sbb
jno
cmps
adc
arpl
leave
or
push
adc
dec
add
test
jecxz
movs
(bad)
idiv
pop
mov
mov
add
pop
jmp
add
pop
sbb
cmps
pop
inc
sar
xchg
jecxz
sbb
adc
xor
cmc
ins
xor
cmp
cmps
pop
inc
outs
push
or
btc
ss
inc
mov
or
shl
movs
sbb
fwait
add
das
push
call
mov
add
add
push
add
icebp
or
jg
cli
icebp
jbe
or
add
test
mov
movs
fstp
ja
adc
call
fstp
adc
aad
cs
cmps
add
sahf
add
dec
pop
or
arpl
(bad)
adc
cli
(bad)
xor
repnz
adc
pop
pop
or
dec
add
scas
nop
stos
mov
test
fs
push
jne
jo
and
jb
call
lea
aam
(bad)
call
stos
fidivr
call
xchg
int
call
push
push
inc
push
jmp
stos
mov
or
out
inc
push
arpl
lock
daa
add
add
test
xchg
mov
mov
lea
dec
push
jmp
dec
jecxz
inc
jne
xor
mov
push
aaa
or
jo
mov
imul
sub
int3
mov
push
push
mov
(bad)
dec
xor
out
inc
pop
fimul
(bad)
cmps
mov
call
cmp
mov
mov
or
or
adc
test
test
adc
cmp
lea
sub
pushf
or
pop
ror
cmp
loopne
xlat
test
mov
in
mov
fcomp
sbb
push
in
enter
fwait
add
das
popa
(bad)
arpl
mov
nop
pushf
push
and
add
jbe
jne
arpl
add
add
pop
jge
bound
and
pop
retf
test
rcr
scas
jo
or
and
ficomp
adc
mov
mov
daa
fisubr
add
lods
(bad)
cmp
scas
pop
loopne
paddd
adc
pop
lods
add
aaa
dec
or
adc
add
pop
jbe
push
mov
adc
pop
add
push
pop
in
add
add
pop
lock
neg
pop
xor
push
clc
cs
(bad)
and
lock
mov
pop
add
mov
(bad)
fmul
out
inc
enter
mov
(bad)
les
out
push
in
adc
ds
mov
xchg
mov
or
or
or
mov
call
push
out
push
sbb
sub
sub
inc
push
or
shl
xchg
int
mov
or
add
xor
test
xchg
sbb
scas
mov
lods
push
jo
mov
mov
push
pusha
pop
inc
push
sbb
push
iret
test
inc
ja
mov
mov
aaa
push
cwde
mov
arpl
xchg
aaa
dec
fild
es
adc
jae
or
sbb
add
out
aaa
push
fwait
adc
inc
test
ret
push
shl
fadd
xor
(bad)
leave
dec
cld
cmp
icebp
ins
mov
adc
sbb
pop
lahf
adc
push
jbe
enter
loopne
mov
add
add
jg
mov
mov
cld
sbb
mov
add
xor
sub
add
loopne
lods
shl
mov
and
sbb
dec
inc
xchg
imul
sbb
mov
jae
xor
jmp
mov
dec
jmp
add
in
and
les
mov
jmp
pop
jo
or
sub
imul
aas
inc
pusha
test
mov
adc
pop
inc
xchg
sbb
push
fadd
fadd
and
jmp
dec
dec
cmp
aam
lock
inc
fwait
pop
gs
dec
pop
std
stc
sub
mov
ins
jecxz
sub
(bad)
sbb
mov
push
jno
lods
xor
cmps
sbb
mov
loope
sbb
cld
lea
mov
lahf
test
push
loop
(bad)
cwde
add
sub
les
inc
not
mov
les
mov
div
inc
dec
xchg
pushf
inc
mov
jmp
pushf
mov
aaa
pop
dec
cwde
push
jp
and
stos
add
ret
loopne
(bad)
xchg
cli
sbb
hlt
jle
xchg
push
jle
data16
cmp
fimul
dec
xlat
ins
mov
aam
(bad)
push
pop
je
or
(bad)
leave
imul
stc
mov
popa
xor
aad
push
lea
jbe
imul
stos
cmp
in
push
add
adc
cmp
dec
dec
cmp
mov
adc
div
fisttp
push
mov
in
mov
pop
jmp
mov
push
xchg
xor
pop
ss
ret
and
xchg
mov
movs
push
push
call
pushf
retf
cmp
pop
jg
rcl
add
fscale
mov
loope
pop
push
daa
mov
leave
pop
nop
ret
rol
jecxz
cmp
sbb
cmp
ret
add
or
mov
inc
xor
inc
pop
mov
inc
cld
sbb
test
xor
pop
stos
fidivr
cmp
pop
or
mov
das
pop
and
pop
int3
and
inc
cmps
ret
lock
cmp
movs
fldenv
loope
jo
inc
jno
and
fcmovb
push
pop
in
enter
sbb
mov
push
dec
push
add
and
cs
sbb
mov
push
add
gs
adc
add
pusha
push
inc
jno
ret
inc
xchg
aaa
in
mov
or
jecxz
cmps
inc
mov
or
dec
(bad)
fdivr
mov
push
and
mov
adc
rol
push
push
les
adc
inc
mov
add
inc
pusha
jnp
adc
mov
sub
(bad)
fsubrp
ss
adc
and
push
lock
mov
fs
pop
push
rol
rol
dec
adc
sub
aaa
adc
gs
inc
mov
add
push
jmp
sub
add
push
popf
inc
ins
cmp
pop
popa
loopne
ins
dec
mov
pop
dec
pop
test
add
mov
add
test
dec
jl
add
add
mov
clc
enter
(bad)
daa
and
in
mov
pop
push
mov
add
sbb
clc
sbb
dec
mov
pop
jb
cs
add
and
idiv
aas
cmp
cmc
test
ss
daa
jg
pop
pop
and
setae
adc
es
push
inc
push
inc
jl
inc
ins
inc
movs
push
mov
or
icebp
mov
add
sbb
sub
sub
scas
cdq
(bad)
sbb
(bad)
test
std
dec
xor
mov
loope
sub
adc
shl
in
ja
xor
sub
rcl
popf
add
mov
mov
sub
(bad)
(bad)
je
add
aas
or
or
mov
push
gs
xor
adc
mov
in
cmp
push
xchg
rol
inc
xor
or
cmp
xchg
jnp
cdq
jno
and
mov
mov
jge
in
imul
scas
arpl
sar
shl
xor
dec
cmps
imul
fadd
xor
add
adc
pop
mov
lea
aad
mov
pushf
push
xor
add
int
stc
arpl
or
push
adc
ror
pop
mov
or
inc
add
cmps
cmp
add
not
inc
ss
test
or
mov
push
jmp
pop
sbb
add
repnz
mov
xchg
xor
mov
or
xchg
cmp
rol
pop
add
or
xchg
add
fchs
and
add
adc
mov
add
stos
in
pop
add
add
push
adc
mov
jl
cdq
or
mov
sbb
cwde
mov
and
and
stos
xor
sub
and
adc
loopne
pusha
cmps
mov
test
or
mov
add
xstore-rng
cmps
and
addr16
mov
dec
aas
mov
test
ret
inc
sub
adc
adc
add
or
sbb
pop
in
rol
jecxz
lea
js
fmul
movzx
inc
cmp
xchg
jle
cld
xchg
adc
jecxz
pop
dec
mov
out
push
xor
je
cmp
pop
or
xchg
std
push
xchg
mov
inc
(bad)
mov
movs
dec
arpl
or
aas
jge
and
mov
inc
outs
mov
mov
cmp
jno
xor
cmp
mov
push
xor
push
(bad)
sbb
or
ins
inc
movs
xchg
popa
es
and
das
scas
into
test
or
imul
int
inc
loope
movs
adc
pop
push
or
xchg
into
xchg
dec
scas
shl
push
and
dec
loope
push
cmps
cmp
push
sbb
ret
adc
mov
mov
mov
call
inc
ret
jno
js
sar
ret
or
test
iret
sub
mov
add
movs
rcr
adc
cwde
adc
xor
xlat
ficomp
ret
test
mov
je
cmp
adc
inc
cmp
cmp
xchg
shl
inc
(bad)
dec
lea
mov
fmul
mov
adc
daa
and
dec
les
cwde
imul
xor
pop
jl
mov
imul
je
repz
and
rcr
add
pop
mov
pop
or
inc
movs
nop
mov
jecxz
cmp
sub
(bad)
mov
sbb
mov
add
fld
mov
imul
mov
sbb
inc
sub
je
xor
mov
int
and
hlt
xchg
mov
mov
push
cmps
add
xchg
aas
cs
(bad)
jle
xchg
inc
add
data16
add
jl
push
adc
cmp
cmp
inc
test
add
icebp
je
stos
std
pop
dec
popa
(bad)
xchg
pop
ror
(bad)
leave
(bad)
imul
mov
xor
sbb
and
jne
cmps
jecxz
enter
inc
inc
cmp
jnp
adc
fmulp
and
sub
xor
movs
jno
or
xchg
loopne
inc
fimul
mov
daa
xchg
push
add
adc
movs
inc
mov
and
push
or
xchg
add
ror
mov
xlat
mov
add
or
xchg
into
sub
push
push
cdq
inc
add
add
lock
nop
and
cmp
push
jle
cmps
sub
cmp
(bad)
mov
cld
mov
jo
(bad)
pop
test
loopne
ins
mul
ds
pop
jo
dec
and
or
pop
xor
call
pop
inc
jb
or
rol
and
(bad)
dec
aam
out
xlat
mov
ja
xchg
aad
push
mov
shr
xor
add
mov
leave
enter
outs
adc
popa
pop
adc
add
adc
fs
inc
retf
or
xlat
mov
sub
mov
rcr
xchg
adc
js
int3
add
mov
or
sbb
test
jb
imul
cmps
pusha
dec
adc
sub
add
xor
ins
cmp
lock
cmps
aam
call
add
pusha
xor
das
clc
or
adc
adc
adc
xor
add
sahf
imul
das
or
dec
xchg
hlt
sahf
and
fcmovb
xor
stc
pop
retf
in
mov
das
ss
or
hlt
icebp
pop
lock
mov
inc
xor
retf
dec
popf
adc
mov
test
adc
repz
in
fsubr
add
add
cmp
add
inc
repz
add
std
fwait
adc
xlat
pop
out
imul
imul
or
or
int
fisub
pop
(bad)
fadd
out
fidiv
or
mov
inc
inc
cs
add
lock
int
retf
cmp
fidiv
dec
aam
pop
jmp
inc
bound
(bad)
cld
inc
outs
mov
add
sbb
inc
mov
add
push
imul
add
movs
push
inc
sbb
stos
mov
adc
cmp
cwde
and
outs
imul
push
je
fild
sbb
mov
adc
cmps
xor
(bad)
jl
sub
cs
int
in
inc
add
nop
into
pop
js
adc
cmps
sbb
inc
pusha
mov
or
pop
mov
sbb
pop
and
inc
je
jecxz
jecxz
add
dec
jb
or
inc
into
add
adc
(bad)
mov
test
push
mov
in
(bad)
rol
inc
psubusw
inc
push
xor
adc
adc
(bad)
xchg
add
adc
adc
add
mov
dec
leave
adc
add
(bad)
fmul
fs
cmps
or
jb
fs
sbb
daa
mov
out
mov
mov
push
lahf
add
sar
add
pop
ret
out
jmp
adc
shl
(bad)
test
mov
jno
sbb
and
add
addr16
jne
push
xchg
jne
movs
fld
mov
(bad)
or
mov
xor
into
enter
stc
shl
pusha
xchg
dec
xor
cmp
cmp
mov
ret
mov
rol
mov
mov
push
add
mov
mov
in
aad
int3
sub
pop
icebp
xchg
les
push
outs
fist
cwde
arpl
push
pop
adc
pop
sbb
in
mov
rcl
mov
cs
data16
dec
xor
and
ror
and
fimul
add
lock
icebp
aad
add
rol
data16
clc
dec
mov
cld
in
out
imul
pop
sbb
xor
fbstp
clc
xor
mov
sar
add
or
push
inc
enter
in
push
dec
lods
fwait
test
mov
pop
and
sbb
pop
xchg
fwait
jmp
in
cmps
pop
inc
lods
rcr
cmp
or
add
dec
dec
add
xchg
jg
or
sar
push
pop
lods
stc
or
xlat
add
sti
retf
aas
les
add
aam
mov
and
and
out
enter
fiadd
add
rol
mov
call
cs
rcl
lods
(bad)
mov
div
mov
pop
ss
push
stc
sub
icebp
addr16
mov
in
ret
and
jae
pop
lea
mov
dec
inc
xchg
lods
mov
loopne
mov
xchg
and
cdq
fs
ficomp
mov
xchg
and
pop
int3
cli
and
cwde
into
(bad)
mov
(bad)
cmp
mov
movs
ret
dec
or
and
pusha
pop
fmul
ror
addr16
xchg
push
push
movs
jge
inc
adc
mov
dec
pop
nop
dec
rcr
xor
aam
mov
mov
jns
sbb
add
inc
cmps
fs
lock
or
cdq
xchg
or
cld
(bad)
sub
dec
lahf
xor
xlat
or
std
xchg
xlat
pop
mov
adc
xlat
jne
xchg
fistp
pop
xchg
xchg
rol
jmp
je
sbb
sbb
mov
mov
jnp
mov
stos
int3
retf
ja
das
popf
imul
nop
ins
xchg
add
hlt
or
pop
cs
or
jo
loope
outs
shl
hlt
ret
js
adc
or
lds
and
jge
(bad)
lock
aaa
or
mov
mov
fucomip
fsubr
jo
inc
cmovbe
and
cli
stc
jae
inc
jns
dec
inc
dec
push
adc
pop
push
xor
xor
cmp
pop
fisubr
leave
rcl
push
sub
pop
add
lock
addr16
std
or
mov
or
sysenter
or
sbb
sbb
inc
and
and
cmp
jle
sbb
jae
lods
aas
pop
pop
movs
dec
and
and
xchg
push
sbb
push
jg
lds
mov
add
lock
add
mov
jnp
rol
push
jmp
push
dec
xchg
push
int3
std
pop
test
add
rol
push
cmp
pop
jo
and
repz
rol
or
jbe
test
das
xor
sbb
inc
xchg
mov
xor
fidiv
test
enter
imul
or
aas
test
sub
push
mov
fild
sub
cs
pop
pop
(bad)
clc
repnz
bndldx
jb
add
jp
shl
and
add
lods
fdiv
or
outs
and
or
xor
out
sub
inc
add
sub
add
scas
pop
add
sub
lods
fcom
pop
jge
pop
(bad)
and
mov
nop
xor
data16
xlat
ret
mov
xlat
mov
or
add
jle
or
add
add
stos
add
adc
add
add
add
add
inc
loopne
adc
push
jb
add
add
test
lods
jmp
mov
nop
pop
or
or
pushf
xor
test
sbb
sbb
sbb
dec
or
sbb
aaa
push
inc
xchg
pop
fstp
sbb
movzx
scas
jmp
(bad)
test
sub
mov
xlat
or
mov
adc
jle
add
mov
adc
mov
jmp
and
enter
in
xor
mov
fisttp
clc
popa
call
lahf
jmp
cmp
jo
mov
jl
loope
mov
mov
adc
xchg
pop
into
les
add
dec
add
xchg
pop
jno
xchg
and
pop
and
add
cmp
dec
cmps
fs
aam
xchg
sub
inc
enter
xchg
les
sbb
out
cmp
stc
shl
jg
dec
mov
xchg
mov
pop
mov
mov
aaa
inc
ret
clc
add
nop
mov
test
mov
ror
or
add
enter
adc
aam
in
inc
fcomp
loopne
adc
mov
xchg
clc
fadd
daa
wrmsr
add
pop
xor
add
movs
cmps
mov
pop
data16
int
lods
or
fld
jbe
movs
into
push
xor
lea
sub
je
repnz
or
sub
loopne
aas
dec
jmp
aam
add
clc
mov
xlat
sub
addr16
fsub
rol
int3
inc
inc
jbe
mov
sbb
add
or
frstor
pusha
adc
das
add
ror
int
sar
mov
pop
xchg
scas
mov
test
add
(bad)
adc
and
add
add
adc
les
jo
jge
outs
mov
pop
add
add
or
movs
test
(bad)
pop
test
in
xchg
mov
sub
cmp
mov
test
cmp
sbb
add
adc
inc
sbb
test
mov
out
mov
and
add
lods
mov
sub
ror
and
push
add
ds
mov
or
adc
test
mov
adc
add
push
aad
adc
add
dec
sbb
popa
dec
or
jle
in
(bad)
and
add
push
push
cmp
inc
cmp
sub
jb
fadd
push
sub
push
inc
loopne
loopne
mov
and
dec
adc
loopne
hlt
call
and
mov
xchg
mov
(bad)
mov
xchg
cmp
xchg
mov
sti
cmp
mov
add
add
add
mov
adc
fsubr
xor
call
or
test
rol
dec
and
or
dec
mov
js
mov
sub
jp
pop
push
sbb
sub
out
iret
repz
cld
push
stos
push
shl
sbb
std
cmp
mov
leave
add
push
in
inc
dec
adc
xor
test
pop
in
pushf
test
repnz
stos
dec
loopne
xor
fsub
lock
mov
scas
idiv
loopne
bound
push
or
or
aam
xor
test
jno
shl
loopne
in
xor
nop
pop
int3
dec
add
add
sbb
pop
push
fld
aam
jmp
cmp
jmp
push
sub
or
adc
sbb
dec
inc
and
mov
jae
enter
xor
mov
mov
mov
popa
push
iret
xchg
(bad)
loopne
mov
cmp
xchg
mov
int
add
add
inc
adc
xchg
mov
sub
or
mov
nop
jge
mov
rcl
cmps
and
jp
movs
xchg
ror
pusha
mov
inc
cs
push
inc
cs
lock
loopne
inc
cs
call
popa
call
es
jmp
sub
add
mov
add
pushf
jno
add
enter
shl
enter
cmp
add
mov
xchg
add
(bad)
jmp
and
pop
fadd
(bad)
push
push
jmp
mov
add
arpl
cmp
sub
jb
and
or
jb
mov
(bad)
aad
pop
push
sahf
inc
mov
dec
sub
adc
cmps
inc
je
mov
mov
ins
mov
loopne
repnz
add
call
pop
xchg
daa
mov
imul
out
or
hlt
dec
xor
lea
mov
sub
pop
adc
jle
daa
ss
mov
and
add
mov
pop
xor
loopne
adc
lods
rol
gs
sub
aaa
mov
or
arpl
rcl
push
dec
cmp
fs
jp
add
(bad)
fimul
ror
imul
inc
call
pop
mov
add
sub
and
aam
xor
xchg
mov
add
pop
dec
jl
adc
add
push
cli
fcom
jb
cmp
jbe
push
jg
pop
add
mov
in
ins
out
outs
and
add
jnp
xchg
cmps
std
stc
mov
inc
jb
and
call
daa
jae
fisttp
and
jb
pop
fbstp
inc
push
in
js
jno
call
leave
dec
pop
cwde
ret
push
out
pop
add
call
lock
push
add
push
mov
inc
pop
cmp
sbb
inc
or
xchg
bound
sti
mov
mov
add
call
scas
lock
push
pop
push
xchg
xchg
sbb
dec
ror
fsub
hlt
fcomp
xchg
fstp
mov
add
aam
aam
cmps
xor
dec
icebp
(bad)
lock
sub
push
jns
(bad)
in
push
loop
xchg
dec
cli
xchg
push
add
fsubr
dec
enter
push
cs
add
dec
les
les
mov
ror
add
push
add
mov
or
mov
mov
icebp
push
add
and
hlt
and
dec
sahf
repnz
test
adc
enter
lock
cli
loop
add
xor
dec
adc
rol
and
mov
xor
icebp
dec
push
ja
out
fbld
cdq
jmp
movs
rcr
test
mov
push
jb
jmp
jbe
xor
xchg
sub
or
mov
jle
sub
adc
cmp
add
add
cmp
add
push
nop
lock
(bad)
adc
and
scas
mov
cmp
out
mov
dec
fcom
pop
inc
pop
or
ficomp
in
arpl
pop
icebp
xor
jae
fstp
add
jmp
stos
shl
jecxz
sub
(bad)
fstp
cmp
push
mov
and
dec
imul
lea
movs
dec
cmp
mov
lds
add
add
mov
hlt
cmp
inc
test
cmc
xchg
hlt
mov
push
jmp
cs
push
and
lock
in
ficom
xchg
dec
fcom
fmul
xchg
pop
pop
add
fmul
xchg
scas
or
rcl
ror
xchg
sbb
int3
enter
enter
test
add
shl
test
or
sbb
(bad)
jge
cmp
loopne
and
mov
cmps
outs
rcr
pop
and
pop
mov
add
nop
mov
dec
mov
out
mov
dec
(bad)
in
push
mov
es
mov
mov
lods
cmp
or
or
add
push
and
sub
(bad)
pop
ret
ret
call
and
into
add
out
and
dec
repnz
or
into
or
push
nop
push
jl
mov
and
and
clc
sub
jno
jae
lods
add
mov
push
das
or
int
pusha
mov
xchg
call
call
mov
syscall
lods
movs
pop
push
mov
xchg
xchg
jne
jp
mov
or
jno
mov
shl
jmp
inc
pop
cmc
mov
loop
lock
test
retf
cmp
mov
cmps
dec
inc
outs
ret
mov
in
or
jmp
lock
sti
jl
mov
neg
push
pop
adc
pop
cli
pushf
jmp
cld
xchg
push
push
dec
in
jmp
mov
in
loopne
jmp
mov
loopne
fcom
inc
mov
fmul
push
jmp
mov
fmul
push
nop
dec
push
nop
aam
rol
nop
dec
push
int3
int3
enter
test
enter
mov
(bad)
cld
push
sbb
and
cmp
mov
mov
and
pop
dec
mov
outs
arpl
mov
jmp
dec
push
loopne
sbb
(bad)
sbb
mov
std
(bad)
ins
icebp
mov
(bad)
xlat
stos
push
cwde
hlt
jmp
xor
cld
pop
shl
sub
add
push
loop
daa
lock
adc
add
xor
or
mov
cmp
cmp
loop
add
mov
push
inc
aas
pop
lock
sub
jmp
xchg
jb
js
test
(bad)
pop
pop
inc
lock
inc
enter
leave
jbe
imul
(bad)
movs
fmul
inc
es
movs
inc
xor
pushf
(bad)
mov
push
rcr
dec
js
dec
cld
jge
jmp
fdivp
lea
add
and
inc
add
lods
arpl
mov
inc
or
std
ins
push
fcmovne
out
aaa
outs
jle
mov
mov
cmp
xchg
add
jmp
mov
adc
and
test
push
ret
or
mov
pop
call
dec
pop
sbb
scas
fistp
dec
jne
pusha
push
(bad)
and
adc
sub
mov
shl
push
ds
adc
sbb
cmp
inc
add
(bad)
mov
pop
inc
dec
or
enter
loopne
and
or
mov
cmp
pop
daa
add
inc
jo
adc
rcr
jbe
add
cmovo
adc
add
out
in
push
add
xchg
adc
add
and
add
ret
mov
outs
loopne
add
lock
or
lock
outs
pusha
dec
or
mov
(bad)
jnp
jge
or
icebp
ret
and
and
sub
xor
cmp
xchg
dec
inc
cmp
cwde
or
inc
add
(bad)
jmp
and
(bad)
imul
or
adc
adc
dec
dec
es
or
fdiv
out
adc
add
xchg
or
hlt
(bad)
js
shl
stos
add
jecxz
pop
xchg
inc
hlt
push
aas
bound
push
jbe
push
dec
stc
clc
sub
ret
je
sbb
leave
imul
or
outs
or
jge
aaa
inc
aam
jmp
test
adc
add
sbb
jns
or
or
cld
cmp
in
(bad)
mov
push
xchg
imul
dec
jp
xor
fst
push
inc
inc
lods
mov
jo
(bad)
jno
popa
and
iret
lea
bound
cdq
pop
sub
iret
adc
adc
out
cmp
stos
mov
push
xchg
xchg
or
mov
sbb
daa
outs
(bad)
adc
cmc
aam
ret
mov
pop
mov
push
bound
cmp
inc
xor
clc
cmp
rcl
sbb
push
leave
mov
xor
imul
cs
pop
pop
ja
sbb
and
or
cmc
nop
add
pop
add
push
repz
mov
mov
push
pop
das
xchg
or
ror
bound
or
das
add
daa
aas
sbb
add
or
aas
xor
pop
or
add
pop
cmps
pop
and
mov
push
repnz
dec
nop
push
repnz
add
xor
adc
add
lock
adc
add
add
add
xor
cli
add
in
add
add
inc
inc
cs
call
cli
call
ror
mov
push
cmps
push
or
and
aas
and
arpl
inc
sar
add
daa
aaa
jo
mov
inc
and
xor
adc
inc
shl
push
pop
lahf
pop
and
lds
mov
jecxz
bound
dec
jno
mov
xlat
inc
push
pop
xchg
fsubr
not
add
pop
and
sbb
sub
xor
adc
adc
or
cwde
jmp
(bad)
shl
or
push
out
out
or
xchg
fdiv
cmp
push
add
sub
add
arpl
(bad)
clc
ja
shr
loopne
add
mov
div
mov
push
or
inc
dec
add
inc
inc
jmp
and
and
movs
jbe
sub
iret
outs
outs
mov
sub
inc
sbb
jmp
inc
mov
in
in
sub
(bad)
call
bound
(bad)
shr
in
sbb
clc
dec
adc
mov
add
dec
cmp
cmp
and
outs
add
movzx
mov
mov
clc
dec
fwait
or
mov
inc
sub
xchg
fadd
mov
std
enter
and
or
(bad)
mov
loopne
cmp
add
jmp
mov
les
sub
xor
jno
or
xchg
loopne
add
pop
pushf
add
adc
dec
pop
or
aam
ret
mov
inc
loopne
daa
sbb
lea
or
pop
jecxz
in
mov
push
ret
jl
xchg
out
jg
mov
add
in
add
mov
repnz
retf
or
cli
cld
xor
nop
clc
ja
jmp
pop
mov
adc
(bad)
cmp
mov
or
(bad)
je
je
push
(bad)
fs
push
imul
mov
add
or
push
xor
jne
inc
dec
cld
inc
leave
sbb
jmp
nop
or
cmp
int3
push
inc
xchg
xor
bound
std
adc
mov
sub
cmp
add
xlat
sub
push
sbb
lods
pop
test
adc
(bad)
call
fimul
loopne
inc
rcr
loopne
cmp
outs
call
mov
out
sbb
jbe
mov
push
inc
ja
fcom
leave
push
inc
(bad)
pop
add
leave
mov
add
inc
dec
and
cmps
hlt
sub
or
hlt
mov
and
fld
xchg
ret
dec
mov
add
and
xchg
mov
js
and
xor
fwait
inc
cmp
pusha
std
test
jmp
push
push
push
movs
dec
loope
aaa
mov
mov
add
sbb
pop
sub
sub
push
lds
mov
je
lahf
(bad)
push
push
lock
add
mov
mov
cmp
push
add
mov
sbb
xor
mov
mov
retf
stos
arpl
or
cdq
lods
sar
jb
pop
jmp
(bad)
jmp
jns
mov
pop
test
adc
pop
fstp
dec
jo
cmc
add
cmp
adc
xor
clc
mov
fist
xor
pop
inc
loopne
ret
inc
add
aas
or
leave
adc
pusha
out
adc
and
or
arpl
push
xor
data16
rcr
pusha
dec
daa
mov
xchg
in
pushf
push
or
inc
lea
push
test
sbb
sti
add
jns
pop
sub
ret
mov
std
push
rcl
pop
add
in
das
(bad)
or
test
fcomp
pop
xor
jb
scas
and
ins
pop
sbb
inc
fadd
aas
out
pusha
adc
pop
cmp
pop
adc
je
mov
mov
push
adc
cld
xchg
push
je
mov
add
inc
data16
dec
adc
inc
popa
add
shr
add
loopne
or
iret
xor
outs
int
es
repnz
fst
jl
jecxz
leave
leave
cmps
int3
add
shl
jl
paddusb
test
adc
or
pop
push
ss
inc
cld
pusha
mov
lea
imul
adc
jl
out
cmps
push
jne
push
sub
cmp
out
ss
push
and
in
add
inc
aas
sbb
add
mov
add
adc
inc
add
out
inc
pusha
adc
fst
outs
and
inc
inc
push
outs
or
mov
lods
pop
lds
cmps
lea
xchg
outs
leave
push
push
mov
add
cmps
ret
aaa
pop
xor
dec
jg
mov
loopne
xchg
mov
dec
pusha
or
jb
mov
xchg
out
outs
or
mov
invd
je
cli
scas
mov
xchg
movs
push
cmps
inc
outs
out
push
es
cli
adc
je
adc
push
sbb
in
dec
popa
add
or
movs
movs
scas
mov
ja
pop
movs
ins
push
ret
add
or
fwait
jmp
cs
aaa
push
push
pop
jns
add
adc
fisttp
std
or
push
popa
gs
jecxz
mov
jb
dec
and
retf
jg
add
outs
arpl
xchg
push
mov
push
push
outs
ins
dec
ja
mov
lods
adc
or
add
push
pop
call
into
or
dec
das
jo
adc
call
mov
adc
test
rcl
jmp
adc
and
xchg
jmp
xchg
add
fwait
ret
jge
aam
mov
outs
push
xor
inc
add
ret
sbb
sbb
cdq
ficom
and
movs
test
rol
cld
adc
add
dec
outs
xor
mov
in
mov
add
lock
sbb
ds
push
push
pop
sti
add
neg
inc
scas
jo
or
and
xor
mov
pop
push
scas
add
inc
sbb
(bad)
sub
outs
outs
ins
adc
adc
clc
outs
stc
push
outs
addr16
xchg
aas
dec
xor
lods
sbb
pop
add
dec
and
pushf
and
mov
sbb
mov
push
sbb
imul
pop
data16
aas
mov
leave
call
add
or
fisttp
mov
outs
mov
daa
pop
inc
sbb
das
lods
psrlw
and
clc
sbb
mov
adc
pop
add
loope
mov
xchg
pop
enter
jne
or
cmp
ret
push
fs
es
sti
das
ins
sbb
fmul
int3
pop
dec
aas
add
mov
dec
(bad)
sbb
adc
and
add
add
movs
adc
addr16
push
outs
jo
add
inc
bound
add
mov
ins
ins
inc
or
mov
lea
sti
pop
pop
movs
inc
fs
xchg
ins
arpl
add
cmp
dec
lods
jl
nop
xchg
nop
mov
inc
loopne
das
fwait
or
add
inc
push
(bad)
dec
loopne
call
rsqrtps
mov
ss
and
pop
add
inc
or
dec
adc
inc
arpl
nop
sub
dec
movs
fs
(bad)
fwait
xchg
inc
jb
add
push
fdivr
test
imul
xchg
xchg
or
add
adc
pop
mov
inc
pop
mov
sbb
ret
iret
add
ja
pop
sar
push
sbb
pop
mov
mov
push
mov
inc
sbb
or
pushf
pop
cmp
leave
adc
pusha
test
mov
bound
and
(bad)
and
mov
dec
mov
out
loop
lock
adc
ins
(bad)
out
std
and
or
and
(bad)
outs
cmp
ret
xor
sbb
xchg
outs
push
das
mov
and
inc
and
lahf
mov
mov
add
sub
ret
or
xor
es
xchg
pop
mov
xchg
fbld
push
es
push
pop
dec
cmovle
sub
add
inc
add
mov
mov
pop
xor
xchg
pop
aaa
(bad)
addr16
pop
sub
mov
das
add
addr16
pop
inc
add
mov
ins
sub
xchg
in
mov
pop
inc
push
and
cmp
and
out
adc
je
std
xchg
or
(bad)
or
mov
jae
fs
or
fnsave
xchg
lods
dec
daa
inc
push
xchg
mov
inc
daa
pop
or
or
or
addr16
cmps
lock
pop
xor
movs
xor
jno
add
(bad)
jbe
leave
sar
or
add
add
or
jno
and
mov
push
inc
mov
xor
bound
sbb
push
sbb
push
sbb
outs
int3
jl
adc
dec
outs
jae
js
dec
(bad)
and
push
dec
and
sbb
xlat
push
je
loope
or
clc
cs
inc
cmp
ins
add
int3
sub
rol
(bad)
jmp
ds
push
add
mov
jo
cld
das
push
jo
jl
dec
sub
es
adc
dec
andps
aam
pop
or
inc
add
inc
out
dec
cld
inc
and
add
adc
dec
and
repz
aad
and
inc
or
shr
loope
enter
inc
gs
or
outs
sti
adc
jmp
in
pop
sbb
jno
nop
lea
add
test
pusha
jecxz
pusha
lahf
jne
popf
sub
push
sbb
push
das
or
add
loope
(bad)
aas
and
ss
es
jmp
add
daa
movups
adc
or
popa
pop
in
sbb
push
outs
add
add
push
adc
and
movs
or
mov
jecxz
sub
sbb
mov
sub
les
sbb
sub
inc
add
imul
nop
bound
js
jp
xor
adc
adc
mov
sub
or
sbb
xor
adc
add
add
dec
imul
imul
and
dec
sbb
or
sbb
sbb
ins
mov
sbb
sub
push
loopne
inc
ja
add
test
cmp
inc
push
add
cmp
mov
adc
push
retf
jo
div
outs
pop
(bad)
add
outs
adc
or
dec
or
stos
add
cmp
dec
sbb
pop
pop
sbb
mov
push
jne
loope
push
inc
setno
pusha
push
lea
call
inc
jne
push
sub
mov
adc
loopne
jne
push
cmp
dec
push
jl
and
nop
inc
push
das
xchg
xor
stc
nop
xchg
xchg
xor
enter
sbb
dec
xor
mov
add
xor
sbb
cmp
dec
stos
xor
jle
movs
sub
adc
fst
push
sbb
inc
lea
adc
(bad)
jmp
pop
push
outs
mov
jns
retf
xchg
xor
add
add
dec
daa
inc
mov
push
pop
adc
loopne
push
add
sub
rol
add
icebp
pusha
jg
sub
jnp
sbb
inc
dec
and
sub
cwde
and
add
xor
mov
sub
add
ret
pop
pop
jno
inc
xlat
cmp
adc
loopne
inc
or
xlat
enter
lods
sbb
daa
push
xchg
icebp
sub
xlat
iret
pop
or
std
loopne
test
push
sbb
mov
cmp
or
and
pop
(bad)
lock
loope
test
mov
invlpg
mov
or
and
push
add
push
xor
sbb
pop
mov
into
sub
mov
bound
jmp
shl
sbb
mov
inc
movs
cs
and
gs
and
xor
and
lahf
pop
inc
sub
sti
sub
sub
retf
aam
xchg
call
sbb
pushf
popa
dec
jmp
test
pop
adc
iret
ret
rol
cs
adc
push
adc
mov
popa
or
mov
and
bound
adc
lock
push
dec
add
or
test
pop
(bad)
fnop
xor
push
xlat
shl
scas
pop
pop
mov
add
test
call
mov
cwde
les
dec
or
pop
adc
aas
retf
mov
mov
clc
pop
sub
cmp
add
push
movs
xchg
test
gs
jno
mov
das
pop
sub
inc
iret
test
xor
or
push
enter
and
iret
das
pop
add
es
add
call
jno
shr
shr
dec
mov
jmp
and
pop
sub
jne
es
jle
and
in
pop
test
arpl
and
ror
imul
test
and
xor
fnstcw
xor
dec
scas
in
out
jne
mov
sbb
pop
push
sub
jae
cmp
aad
mov
cmp
and
test
push
jmp
xor
xchg
shl
add
push
add
test
inc
push
inc
xor
ffreep
inc
mov
inc
add
(bad)
faddp
mov
je
rol
add
add
pop
ret
daa
bound
in
mov
pop
scas
and
add
jo
cmp
cmp
cdq
sub
sub
mov
add
arpl
lea
test
fsub
lods
add
inc
sub
cmp
add
inc
jo
retf
out
sub
sbb
mov
mov
push
outs
jg
and
(bad)
xor
or
sbb
into
xor
popa
or
sub
add
loopne
aas
inc
jo
and
nop
hlt
pop
dec
mov
pop
xchg
imul
cmp
cmp
or
xchg
ret
adc
sbb
xchg
fadd
xor
xchg
xor
cmps
es
push
xor
add
inc
dec
div
xor
inc
mov
mov
test
pop
pop
push
ss
xchg
jo
fcom
pusha
mov
jno
mov
test
aas
sar
jge
imul
out
fist
mov
das
adc
and
jae
add
push
add
mov
lods
and
sub
mov
cdq
or
sub
nop
or
or
xor
pop
mov
pop
mov
adc
test
push
add
leave
add
inc
xchg
xor
out
outs
add
xchg
or
inc
das
inc
adc
aas
inc
add
out
in
jo
xor
sub
ins
mov
mov
ins
lods
sti
fisttp
lahf
sub
cmps
cmp
test
lahf
clc
nop
mov
hlt
sbb
mov
(bad)
cld
xchg
push
jbe
fiadd
jo
nop
pop
adc
add
add
shl
jle
clc
adc
inc
add
push
mov
bound
adc
imul
add
popa
add
add
cmp
repz
cmp
jmp
and
adc
xor
lahf
sub
ss
fucomip
es
in
pushf
add
xor
aad
lahf
je
test
or
pop
xlat
out
fidivr
pusha
fsub
inc
nop
cmp
leave
les
idiv
not
jl
cmp
push
mov
fs
cmp
add
fwait
mov
cmp
pop
jmp
dec
(bad)
fisub
pop
add
lea
add
push
jmp
ret
adc
gs
jp
inc
test
adc
cmp
(bad)
gs
xlat
(bad)
xor
and
xor
gs
neg
pop
or
jne
outs
ja
dec
inc
mov
mov
xchg
adc
or
xlat
into
cmp
pop
mov
movs
add
aaa
xchg
add
mov
das
xor
adc
xor
pop
nop
add
ins
jecxz
dec
nop
add
dec
leave
add
nop
add
cmp
cmp
push
cmp
mov
push
movs
cmp
mov
and
mov
and
lock
inc
pop
lahf
imul
cs
inc
pop
sbb
push
outs
add
mov
test
shr
and
or
outs
data16
stos
arpl
cs
cs
add
dec
jae
gs
ja
sahf
adc
or
push
dec
push
outs
add
aad
push
retf
bndstx
and
sub
adc
(bad)
(bad)
and
xchg
hlt
adc
xchg
les
and
mul
mov
lds
pop
ror
push
push
dec
jns
inc
mov
(bad)
(bad)
sti
ret
adc
add
pop
push
jo
jl
or
jo
sbb
add
mov
cmp
or
cmc
push
shl
aaa
push
dec
lea
jae
fucomi
inc
cmp
mov
fdiv
lahf
pop
inc
adc
xor
inc
xchg
das
lock
(bad)
in
retf
sub
(bad)
sbb
pop
bndldx
sbb
sbb
sbb
sbb
xchg
pop
adc
ds
gs
sbb
popf
sub
add
fistp
xchg
push
push
push
jbe
xor
adc
pop
cwde
(bad)
les
js
pop
lahf
pop
cs
xchg
and
std
mov
mov
sub
outs
jne
lods
and
lea
iret
(bad)
aas
jae
pop
mov
scas
aas
mov
fbstp
inc
push
fimul
jg
nop
add
add
adc
inc
(bad)
ss
add
add
inc
gs
ja
pop
add
mov
mov
adc
jo
add
jbe
sub
sub
sub
adc
icebp
cmp
add
rol
dec
push
hlt
enter
dec
and
ret
jnp
sbb
adc
and
test
mov
push
add
lds
in
and
jns
pop
daa
lds
or
add
push
sbb
sbb
push
xchg
xchg
xchg
out
cs
or
or
jne
ret
aam
cmp
xor
jns
push
pop
xor
inc
sbb
mov
xor
dec
loopne
xor
loope
pop
mov
mov
jmp
xchg
mov
jmp
fld
ins
mul
ins
inc
pop
ins
das
xchg
push
sbb
dec
sbb
loope
mov
mov
clc
mov
inc
jne
mov
(bad)
and
or
stos
mov
retf
add
fadd
push
add
das
popa
jae
inc
pop
inc
inc
sbb
and
push
dec
add
push
or
inc
xlat
inc
pop
sub
pop
mov
add
cmps
add
cwde
or
adc
shr
add
nop
pop
cli
xor
mov
test
cmps
xor
das
dec
lods
mov
push
xlat
xor
sbb
or
dec
sbb
mov
inc
and
retf
push
loop
cmp
pop
enter
in
fwait
dec
int3
sub
push
scas
cmps
aas
outs
arpl
aam
or
sbb
ror
jge
imul
(bad)
das
or
sbb
(bad)
aam
pop
sbb
or
inc
pushf
mov
add
and
sbb
and
inc
mov
and
clc
push
es
push
das
push
cli
or
dec
retf
es
xchg
retf
push
inc
inc
dec
lds
das
push
inc
pop
xchg
sbb
or
int3
fwait
js
push
daa
or
sti
mov
movlps
mov
inc
(bad)
clc
inc
fcmovne
hlt
xchg
push
dec
xlat
cli
push
cs
add
ins
add
fwait
dec
cvtpi2ps
dec
das
jle
mov
inc
dec
outs
sbb
cld
mov
imul
cmp
pop
or
or
or
cmp
cmp
mov
or
icebp
aam
or
push
(bad)
dec
outs
pop
xor
xchg
sti
mov
mov
xor
mov
adc
or
loop
fild
imul
dec
ins
jbe
movs
rol
jns
ins
sub
rcl
inc
sub
shl
loope
pop
das
add
pop
xlat
inc
les
jae
ss
(bad)
sbb
mov
add
cmp
dec
inc
shl
mov
sub
inc
mov
add
test
mov
jo
jo
adc
push
lds
or
loopne
push
pop
dec
mov
lahf
pop
shr
clc
rcl
sub
inc
pop
and
add
std
inc
pop
imul
das
pop
or
mov
xor
inc
jmp
xor
mov
xchg
jns
pusha
or
add
je
jmp
mov
push
lea
inc
pusha
std
push
mov
mov
and
mov
fldcw
and
adc
nop
into
(bad)
outs
jecxz
add
add
xor
popa
clc
sbb
adc
sub
sbb
jnp
cmp
jne
push
dec
or
cmp
jle
in
jne
dec
adc
add
jne
mov
xlat
pop
or
dec
pop
das
mov
add
inc
sbb
xlat
clc
dec
in
nop
or
clc
inc
out
inc
dec
sub
mov
push
add
fist
(bad)
mov
pusha
pop
ret
jb
repz
cmp
or
pushf
push
pushf
ss
inc
pop
ins
xchg
ret
adc
push
lock
push
inc
adc
into
mov
dec
dec
pop
sti
pop
sbb
xor
mov
imul
mov
mov
int
mov
popf
sti
(bad)
pop
ja
push
mov
mov
push
inc
call
outs
and
movs
adc
pop
outs
add
adc
mov
mov
add
add
add
dec
jne
mov
pop
pop
test
sbb
ret
mov
adc
adc
mov
imul
xchg
and
xchg
dec
pop
mov
sub
add
mov
sbb
inc
imul
inc
or
shl
mov
ins
out
aad
xor
add
push
jae
or
test
(bad)
or
popf
loopne
in
and
push
push
out
(bad)
inc
push
and
imul
dec
das
pusha
push
xor
rcr
jmp
sub
push
shr
jmp
or
add
clc
xchg
arpl
jne
push
(bad)
cmp
sub
inc
cmp
inc
cmp
adc
cwde
dec
mov
je
add
xchg
(bad)
mov
sbb
dec
and
mul
adc
and
test
add
js
push
xchg
movs
push
jns
mov
inc
cvtsd2si
imul
xor
adc
or
mov
lds
or
xor
dec
into
bound
inc
push
sub
outs
ins
pusha
xchg
mov
inc
mov
adc
add
dec
cwde
xor
mov
pusha
push
ret
cmp
pop
aaa
cmp
loop
(bad)
xor
cwde
jb
test
add
adc
mov
pop
cld
movs
or
or
push
pop
(bad)
pause
pushf
and
sbb
push
sbb
inc
outs
pusha
adc
test
loopne
sub
mov
xor
add
cmp
pop
add
pop
movs
cmp
scas
addr16
fucomip
dec
loope
or
inc
push
mov
mov
mov
or
mov
stos
test
adc
inc
cwde
pop
pop
adc
and
pop
aam
or
sub
jmp
push
shl
jmp
test
jge
or
mov
adc
and
jne
mov
fs
pop
push
aam
loope
xchg
add
mov
inc
cdq
and
fld
jmp
fild
inc
and
pop
add
mov
nop
cmovne
add
sar
push
xchg
inc
add
(bad)
leave
mov
or
push
push
sub
aaa
push
mov
push
enter
inc
rol
test
pop
push
inc
mov
popa
and
mov
mov
sub
movzx
mov
aas
je
or
je
pop
jne
neg
mov
mov
sbb
add
jle
pop
pop
pop
(bad)
fild
adc
pop
nop
inc
add
pop
add
push
nop
setno
rcr
push
mov
jge
adc
hlt
inc
mov
or
xchg
mov
or
push
add
icebp
fcmovnb
gs
and
or
mov
mov
sub
lock
mov
push
pop
test
mov
rcr
lea
and
push
cmp
or
(bad)
jle
sub
push
add
fistp
ficom
scas
sbb
adc
(bad)
ins
test
cld
mov
cld
sub
fisubr
and
rcl
xor
inc
xchg
dec
add
lods
or
(bad)
xor
lock
sbb
jp
push
adc
xor
xlat
mov
push
sbb
push
dec
lock
inc
nop
ja
popa
in
sbb
inc
or
add
pop
adc
mov
in
adc
ss
ss
pop
rcr
pop
mov
push
aaa
ins
mov
ins
js
mov
int
mov
jne
(bad)
jbe
cmp
inc
adc
ds
aaa
inc
sub
pop
add
sbb
clc
cmp
jo
inc
push
add
fcomp
inc
xchg
cmp
pusha
fdiv
add
dec
xchg
pop
xlat
xchg
push
sbb
ds
or
and
adc
daa
das
sub
sub
aas
add
enter
pop
cmp
pop
enter
add
mov
dec
fmul
mov
pop
retf
pop
retf
aaa
xchg
in
or
rol
pop
pop
in
sub
mov
shr
loope
jno
inc
aaa
jecxz
aad
inc
out
sbb
inc
hlt
pop
cmp
add
pop
and
mov
jl
push
dec
cmp
test
enter
sub
inc
sti
and
test
inc
add
mov
pop
rcl
mov
ins
sahf
stc
das
lea
rcr
iret
pop
jns
mov
outs
xor
adc
xchg
or
cmovb
int
inc
pop
popa
xor
aaa
sbb
daa
add
bound
std
push
sbb
adc
push
cdq
or
dec
and
and
bound
fbstp
mov
rcr
lock
test
adc
pop
or
bound
lea
adc
jg
mov
xchg
add
icebp
add
inc
loop
jno
test
mov
add
add
add
xchg
pop
data16
adc
xchg
xchg
and
add
retf
lock
aam
add
add
loopne
mov
rol
add
aam
inc
cmp
jl
std
pusha
mov
retf
add
pop
sbb
pop
das
push
xor
jbe
sub
cmp
xlat
mov
lahf
sub
nop
push
sahf
fiadd
or
and
cmp
inc
inc
inc
add
add
cmp
push
rol
cs
add
popa
jo
or
or
inc
mov
clc
and
add
pop
sti
push
mov
mov
sbb
fadd
push
test
call
dec
jne
mov
shl
cmps
cmp
rol
inc
lock
xlat
inc
add
jo
cmp
aam
pop
pop
or
mov
imul
pop
inc
popa
cld
and
pusha
popa
pop
stos
js
inc
or
or
enter
mov
add
push
dec
popa
pop
call
add
mov
ja
sub
xchg
adc
bound
mov
cli
retf
pushf
loopne
inc
pop
rcr
push
dec
pop
cmp
fldenv
dec
or
dec
sar
in
push
inc
sar
hlt
inc
cmp
add
inc
add
sbb
dec
inc
sar
jbe
inc
sub
push
mov
dec
outs
pop
bound
jmp
xchg
test
inc
xor
add
loopne
lahf
mov
icebp
cmp
add
stos
movs
fs
mov
mov
push
xchg
add
add
adc
add
je
inc
push
sub
mov
mov
jns
lds
daa
mov
stos
je
rcr
and
loopne
pop
nop
sbb
or
xor
icebp
mov
loopne
aas
ins
imul
adc
int
mov
fld
mov
mov
inc
mul
or
test
pop
je
dec
je
jmp
imul
or
adc
push
dec
je
push
inc
push
test
xchg
test
cmp
xor
push
push
(bad)
pop
int
rcl
xlat
sbb
push
jo
dec
jo
push
adc
ret
mov
cdq
(bad)
ror
xor
rol
and
fistp
push
and
cmp
xor
inc
xchg
jg
add
scas
or
push
dec
fdivr
addr16
jne
jge
add
jg
xor
xor
mov
xor
push
or
add
or
sub
sar
push
or
xor
pop
ret
addr16
dec
and
jmp
or
sub
mov
dec
(bad)
pop
cmp
dec
data16
or
pop
pop
das
jp
adc
mov
adc
(bad)
imul
hlt
push
or
push
(bad)
push
mov
dec
add
inc
cmp
or
fbstp
das
jp
shl
dec
addr16
push
mov
(bad)
mov
and
add
(bad)
mov
cmps
jae
or
and
outs
sbb
fiadd
cdq
add
sbb
xchg
fwait
jb
add
int
gs
pushf
out
sub
mov
daa
or
fistp
mov
adc
les
push
and
mov
push
push
add
call
js
(bad)
xchg
cmps
pushf
mov
mov
pop
cmps
jns
js
push
sbb
cmp
aaa
or
jmp
push
pop
fcom
sub
ins
popa
popf
mov
add
adc
out
mov
push
aaa
mov
mov
mov
add
lea
add
mov
(bad)
jne
inc
sub
add
push
dec
fild
or
gs
mov
cmp
xchg
fsubr
push
inc
add
outs
jmp
jae
mov
lea
aam
je
xchg
add
fs
out
add
xchg
(bad)
push
dec
sbb
or
inc
push
lea
lock
inc
adc
out
cmp
add
ins
xor
out
xchg
lds
adc
inc
mov
mov
aad
dec
jmp
dec
jae
popa
and
add
and
push
int3
sub
adc
daa
adc
mov
sbb
add
inc
pop
add
test
push
std
mov
mov
cmovs
jo
jns
push
into
push
dec
aaa
dec
loopne
add
push
in
xchg
das
adc
mov
retf
ins
mov
xchg
mov
and
mov
stos
adc
or
sub
add
jbe
xchg
sbb
xchg
xor
sti
or
aad
push
jno
and
add
add
add
inc
inc
test
mov
inc
lldt
adc
mov
xchg
sub
jo
or
lahf
add
jo
dec
mov
push
or
cmps
mov
pusha
adc
scas
xor
mov
or
add
add
sbb
adc
sbb
jmp
and
push
push
add
add
and
adc
nop
pop
or
popa
movs
or
repz
jmp
cmp
mov
cmps
das
adc
sub
cmp
shl
sub
addr16
cwde
lock
inc
imul
sbb
or
push
push
mov
or
dec
outs
jae
outs
jns
test
add
jo
cmp
sbb
cmp
mov
cmp
pcmpeqw
sbb
leave
repz
mov
sbb
add
adc
push
or
xor
lods
or
ins
mov
mov
push
add
xor
inc
or
icebp
sbb
or
lods
imul
jl
inc
lds
push
xchg
mov
dec
dec
adc
pop
and
ud1
push
loopne
or
cmp
mov
dec
stos
nop
mov
jg
dec
or
pushf
pop
or
and
rol
loop
mov
not
adc
jno
lahf
or
nop
sub
das
inc
xor
and
jmp
push
ss
inc
cmp
inc
stos
dec
adc
shl
test
push
sbb
popa
xchg
xchg
addr16
movs
push
ja
inc
imul
xor
push
or
aam
fld
iret
or
sub
int3
gs
cmp
ins
ret
push
arpl
add
mov
xchg
lock
inc
fadd
mov
and
cs
rcr
inc
jns
add
ror
add
out
push
enter
lea
je
icebp
inc
or
outs
or
push
pop
push
mov
hlt
add
icebp
cmps
int3
lods
fstp
adc
xchg
or
cmc
and
pushf
mov
pusha
ins
push
(bad)
jmp
(bad)
and
or
(bad)
cld
jne
cmp
and
add
(bad)
clc
push
adc
hlt
je
cmp
adc
xor
push
add
rol
and
inc
inc
push
daa
sub
jne
(bad)
push
adc
push
fs
add
out
inc
ins
(bad)
adc
sub
or
adc
dec
(bad)
test
push
and
or
pop
cwde
or
into
sub
mov
aam
cld
jnp
inc
(bad)
fisttp
xor
dec
outs
fdiv
test
movs
add
mov
add
fs
xor
xor
adc
inc
lahf
enter
mov
mov
or
cmp
cmps
xchg
rcr
lea
mov
popa
repz
push
ret
test
mov
cli
mov
add
mov
push
and
shl
xor
aam
or
pop
pop
ret
pop
adc
mov
sbb
pop
das
jae
dec
add
lahf
push
push
xchg
add
lods
dec
lahf
les
mov
mov
out
cmps
(bad)
addr16
and
push
push
push
push
daa
xor
jp
pop
add
lock
mov
and
in
lods
add
retf
sub
pop
mov
mov
adc
mov
jo
or
pop
or
mov
aaa
mov
xor
ja
pop
xor
xchg
lock
mov
mov
push
push
and
cmp
outs
js
jmp
inc
mov
dec
out
es
pop
lock
out
dec
sub
arpl
push
aaa
adc
pcmpeqd
xchg
mov
jmp
sbb
mov
mov
jo
and
sub
push
daa
inc
adc
inc
adc
adc
inc
sbb
cld
adc
sbb
and
or
cmp
fiadd
sub
inc
xor
xor
imul
cmp
inc
inc
or
out
inc
and
dec
adc
push
adc
xchg
jns
inc
imul
daa
add
es
inc
add
xor
sbb
and
push
or
call
sbb
push
or
or
pushf
jns
aaa
cmovns
mov
cmp
jle
imul
(bad)
xchg
adc
lock
mov
fadd
cmp
and
je
jbe
add
cli
mov
movntps
pop
or
cwde
and
mov
mov
add
mov
lahf
or
mov
jecxz
xor
fild
rcr
jmp
dec
js
push
lea
call
mov
inc
scas
je
adc
push
lea
xlat
add
in
lock
cwde
mov
loope
jmp
not
inc
sbb
mov
sub
mov
xor
jae
jo
mov
sub
or
shl
add
cmp
push
inc
cmp
xchg
xchg
int
or
cmp
fistp
outs
(bad)
das
sbb
ins
adc
rcr
mov
bound
adc
push
xor
nop
or
or
nop
pop
ins
or
cmp
mov
jns
ret
test
or
fs
in
jle
mov
adc
sub
mov
in
test
adc
mov
pusha
add
fistp
jbe
cmp
mov
jl
aas
int
dec
fiadd
push
jle
ins
jg
(bad)
push
jmp
lea
popf
add
ins
(bad)
(bad)
ja
retf
or
or
add
and
sbb
call
mov
xchg
lock
test
lock
lods
pop
fdiv
pusha
push
fwait
(bad)
out
cmps
add
rcr
fcomp
xchg
mov
or
out
int3
mov
jge
fwait
add
xchg
aam
enter
xor
mov
imul
lea
(bad)
ficom
sub
and
pop
lea
loope
cmps
fcomp
and
dec
test
mov
mov
jb
in
pop
in
jb
sbb
addr16
jnp
dec
push
mov
pop
rcr
mov
dec
mov
ins
push
jo
pusha
xor
push
xor
add
int
push
adc
push
shr
push
add
in
mov
xchg
dec
sub
pop
lea
cs
xchg
add
mov
dec
enter
and
nop
into
sbb
sbb
push
dec
loopne
and
pop
jne
dec
mov
cmp
mov
test
adc
and
mov
sbb
dec
stos
or
and
pop
shr
jne
aaa
dec
add
js
add
adc
pop
inc
cmp
inc
stos
test
js
sahf
mov
aaa
arpl
jne
jb
push
or
pop
dec
fcom
out
dec
sahf
ins
out
cmps
xchg
sti
or
dec
inc
inc
mov
popa
(bad)
out
dec
add
push
add
loopne
dec
pop
pop
addr16
add
cmp
aaa
add
pop
mov
dec
xchg
dec
ja
out
and
das
add
push
dec
push
add
std
scas
sbb
push
add
inc
aaa
loopne
add
or
xchg
dec
mov
or
sub
xor
jp
or
jbe
mov
popf
rol
sub
adc
xlat
stos
add
(bad)
xchg
jmp
pop
push
push
cmp
cmp
and
fadd
test
(bad)
mov
inc
add
ja
ficom
push
add
add
call
mov
lock
sub
mov
ds
test
inc
fild
mov
mov
sbb
add
bound
mov
ret
push
push
jne
or
adc
xchg
inc
fsub
add
mov
addr16
outs
sub
sbb
scas
dec
add
xor
mov
jle
inc
xor
xchg
xor
loop
clc
out
in
sub
inc
dec
ret
mov
(bad)
mov
ror
rcr
adc
mov
loopne
ja
dec
rol
push
add
pop
or
push
dec
dec
xor
cmp
add
xor
inc
mov
imul
dec
inc
adc
mov
push
inc
sbb
pop
test
push
cmp
sub
sbb
lods
mov
arpl
clc
push
popf
aad
mov
pop
pop
jns
cmp
jo
push
bound
stos
mov
test
mov
inc
aaa
in
inc
test
in
cmc
mov
mov
cmp
loope
pop
(bad)
es
popa
or
mov
or
mov
in
fs
or
call
pop
add
xlat
bound
(bad)
sub
inc
dec
jmp
adc
jno
add
jns
out
mov
sbb
mov
mov
pop
adc
ja
xchg
xchg
mov
sbb
in
and
or
out
fdiv
jbe
in
sub
(bad)
adc
ror
movups
mov
dec
addr16
cs
push
xchg
mov
es
cmp
cld
adc
outs
popa
xchg
xchg
jae
push
shr
inc
xchg
and
shl
rcr
add
cmp
es
and
pop
and
mov
jbe
jmp
aaa
jp
sbb
movs
add
out
ret
add
fld
jo
xor
clc
adc
cs
adc
fst
xor
fs
pop
mov
jecxz
test
jae
ds
in
xchg
jp
add
xlat
xor
test
ja
push
dec
pop
inc
push
push
js
pop
add
xlat
mov
lds
mov
rol
pop
pop
add
cdq
adc
bound
mov
fisttp
lock
add
or
dec
ja
ret
jo
jmp
ds
out
les
aad
cld
and
mov
add
les
jg
shl
int
inc
pop
xchg
push
popf
call
push
int
pop
outs
jo
sub
test
jmp
test
and
cmp
jne
sbb
pop
xchg
add
and
fs
pop
(bad)
(bad)
dec
mov
add
lea
inc
push
and
and
sbb
mov
inc
add
fcomp
aas
mov
fdiv
dec
cld
mov
sub
loopne
sub
mov
add
(bad)
jmp
push
or
(bad)
in
test
inc
mov
xor
inc
mov
clc
and
push
pusha
sar
lods
nop
inc
mov
mov
inc
fsub
in
das
lods
in
cmp
sub
ror
pop
adc
cs
shl
push
push
fbld
push
call
inc
jecxz
enter
test
dec
cmps
add
mul
adc
cli
mov
div
sbb
add
jno
and
xor
sub
int3
unpcklps
add
(bad)
and
lea
int3
add
popf
jmp
inc
inc
shr
(bad)
out
add
lock
das
xlat
mov
test
push
push
inc
sbb
imul
add
or
pop
and
pop
ins
inc
mov
sbb
xchg
dec
or
ins
(bad)
jo
adc
mov
mov
push
adc
inc
inc
les
pop
mov
add
sahf
mov
pop
add
lods
out
push
inc
dec
pop
mov
push
fs
add
add
hlt
ins
ins
dec
fild
sub
mov
adc
or
cmp
or
add
inc
daa
cwde
or
(bad)
pop
cmp
hlt
pop
inc
add
xor
sar
jnp
mov
dec
push
jae
adc
xor
xchg
and
dec
dec
(bad)
out
dec
loop
or
xor
cdq
or
inc
pop
outs
pop
mov
cmp
loope
je
xor
loope
mov
add
pop
dec
or
push
push
stc
push
xor
sbb
pop
and
test
outs
add
(bad)
rcl
ins
mov
push
pushf
icebp
cwde
pop
mov
adc
mov
aam
sub
or
push
jle
cmp
jge
or
or
(bad)
pop
and
and
or
fisttp
push
inc
js
add
lds
cmp
sub
jne
popa
hlt
ins
lock
jo
hlt
das
jle
popa
or
xchg
inc
pop
(bad)
jbe
jo
test
sub
pop
jne
ror
jo
add
hlt
xlat
enter
jae
das
adc
or
sub
push
sbb
rcl
inc
or
lock
sbb
data16
dec
add
adc
xor
jp
mov
xchg
pop
or
clc
and
pop
mov
add
rol
mov
jp
or
sub
jl
inc
das
rdpmc
shl
mov
sbb
pop
fs
pop
sub
jecxz
scas
test
dec
dec
in
ret
jo
shl
dec
add
add
sti
xchg
sub
int3
or
mov
out
adc
add
or
movs
cdq
add
xor
inc
or
xchg
pop
inc
inc
rol
add
adc
test
push
dec
outs
dec
gs
adc
and
rol
mov
daa
lahf
add
es
add
push
fwait
movaps
test
cmps
in
in
adc
or
cwde
or
add
dec
leave
or
pop
cdq
addr16
adc
inc
cmp
add
aaa
test
adc
adc
mov
(bad)
jmp
inc
jb
and
inc
lea
xchg
fldenv
rol
es
xchg
das
or
jmp
jbe
pop
outs
(bad)
sbb
into
adc
push
and
loop
fsub
pop
sbb
movs
xchg
and
jg
das
or
ret
rcr
aaa
mov
ret
repz
cs
sbb
adc
push
add
mov
and
sub
dec
xchg
xchg
loop
ret
adc
cdq
daa
js
adc
or
sub
ret
pop
adc
cdq
pop
mov
mov
mov
dec
ins
call
xchg
dec
aam
mov
jge
mov
lock
inc
pcmpeqw
mov
cmps
jne
add
sub
inc
dec
or
je
xor
xor
xchg
mov
dec
or
test
jo
mov
xlat
pop
jne
push
pop
in
arpl
stc
mov
rcr
xchg
pop
adc
xor
popa
add
sbb
hlt
ror
xor
add
or
add
in
inc
(bad)
xor
imul
and
sub
add
das
mov
popa
adc
(bad)
push
imul
xchg
xor
lock
or
test
mov
cdq
gs
lahf
pop
aam
loopne
dec
mov
jbe
test
mov
inc
xchg
push
ret
sbb
inc
xor
loopne
into
inc
jmp
xor
adc
and
pop
dec
lea
inc
addr16
ss
bound
call
mov
cmps
jnp
ret
adc
adc
enter
mov
and
or
add
movzx
in
outs
or
mov
adc
shl
add
mov
cld
jle
mov
hlt
xor
add
int
dec
(bad)
sbb
inc
push
push
fmul
inc
cmp
or
xor
xor
fwait
adc
jle
loopne
repnz
xchg
lods
sahf
inc
inc
fidiv
xchg
push
in
add
aam
aam
sahf
call
rcr
mov
or
or
cmp
test
xchg
cdq
pop
rcl
aad
adc
mov
push
add
imul
pop
and
inc
push
std
fsub
call
adc
sub
sbb
mov
push
jb
push
jl
and
and
and
sti
sub
mov
and
adc
loopne
jo
sbb
nop
push
in
sbb
add
adc
mov
sub
and
lods
adc
push
mov
or
push
popf
add
adc
pop
fmul
jp
pop
dec
sar
test
or
cmp
mov
inc
mov
inc
pop
xlat
aas
add
mov
add
pop
or
aaa
mov
mov
or
sub
inc
jnp
cmp
jne
push
add
std
leave
(bad)
adc
(bad)
sub
stos
add
inc
and
sbb
and
lds
ret
jmp
jg
popf
pushf
ja
or
das
mov
sbb
pop
shr
mov
idiv
iret
fsub
out
push
pop
fwait
add
xor
mov
or
(bad)
pushf
fld
popf
mov
xchg
xor
push
dec
jl
add
or
leave
fnstcw
call
stos
lds
cmc
ja
clc
ins
or
js
add
(bad)
test
lea
add
mov
xor
mov
movhps
and
mov
or
aam
jge
pop
cmp
movs
(bad)
push
mov
push
mov
adc
push
sahf
pop
add
lahf
pop
je
call
cs
mov
mov
setg
fistp
sbb
sbb
mov
jno
and
adc
xchg
lahf
icebp
jmp
xchg
lahf
pop
rol
adc
push
pusha
gs
xchg
add
mov
shl
mov
arpl
shl
sub
ror
popf
mov
inc
pop
std
dec
sahf
fnstcw
rol
mov
mov
xor
mov
lods
das
ret
jp
cmp
aas
add
push
sub
cmp
pop
adc
int3
jno
in
xor
(bad)
adc
push
pop
daa
cmp
cmps
stos
mov
mov
not
jle
adc
mov
add
mov
cmp
mov
xor
loop
sbb
inc
cmp
or
mov
out
xchg
lahf
(bad)
and
mov
andnps
jle
iret
mov
or
fld
mov
xor
mov
shl
mov
or
push
or
xchg
xchg
nop
jne
add
mov
mov
add
das
add
in
fistp
les
sahf
push
movs
nop
dec
popa
cmp
pusha
xchg
xchg
jo
add
dec
inc
or
add
adc
scas
add
cmp
loopne
in
lock
xchg
and
cdq
sbb
inc
or
adc
or
loopne
adc
xchg
jmp
rcl
inc
mov
loopne
ret
movs
fild
repz
xor
dec
movs
lds
push
adc
inc
movs
icebp
movs
popaw
fsub
push
pop
sub
push
dec
aam
pop
inc
loopne
or
jo
jno
adc
sbb
shl
cmp
jp
add
fdiv
adc
dec
loope
sbb
out
dec
and
mov
adc
pop
and
xor
xor
xor
bound
bound
inc
mov
test
(bad)
sub
sub
mov
pusha
add
push
pop
xor
pop
lods
(bad)
pop
pop
add
out
ja
cmps
leave
iret
jno
pop
sub
mov
in
mov
adc
push
cmp
cmps
jo
push
add
add
jl
call
sbb
neg
and
adc
push
lods
ret
punpckhdq
and
std
ins
dec
push
push
or
xchg
cdq
or
mov
aam
outs
sbb
or
in
and
add
add
mov
adc
mov
mov
outs
adc
xlat
add
xchg
fcomp
mov
cmpps
and
inc
or
(bad)
xor
pop
imul
push
test
loopne
shr
fild
or
push
and
test
add
adc
and
mov
sub
loopne
cmps
sbb
jle
fsubr
ret
dec
jmp
xor
lods
mov
adc
ret
sbb
das
add
hlt
add
das
push
sub
inc
mov
inc
jge
sbb
mov
sbb
jmp
jl
inc
or
fsubr
cmps
add
or
sub
aam
inc
ret
xor
inc
cld
dec
test
stc
jo
add
popa
sbb
sbb
sub
inc
ret
(bad)
retf
sti
add
sub
adc
call
ficom
push
fs
add
shl
call
cmp
ret
or
imul
add
sbb
and
adc
jmp
mov
push
retf
mov
mov
xchg
jnp
xor
jle
pop
stc
pop
cmps
pop
add
in
xor
pop
pop
hlt
and
and
fnsetpm(287
mov
and
sbb
(bad)
xor
adc
xor
xchg
inc
add
cmp
rcr
cmc
jle
ror
stos
test
lods
pop
clc
das
push
lods
inc
adc
neg
cmps
iret
psubb
add
shr
cmp
test
lods
add
push
imul
dec
push
fsubr
xor
pop
pop
pop
adc
dec
nop
les
xor
sbb
sub
inc
mov
xor
add
in
rcr
faddp
data16
mov
stc
sub
adc
lea
fadd
dec
pusha
and
sti
mov
mov
ins
in
pop
jbe
sar
call
add
pop
xchg
sbb
sbb
mov
jo
pop
add
cmp
das
daa
or
mov
dec
addr16
das
loop
pop
push
push
mov
sti
push
loopne
iret
enter
adc
cmp
mov
sbb
add
in
add
mov
mov
inc
jbe
aas
aad
inc
stos
cmps
xor
mov
add
mov
pop
outs
and
xchg
mov
test
scas
add
mov
and
scas
adc
xchg
inc
hlt
(bad)
xor
xor
dec
push
or
(bad)
pusha
inc
repnz
mov
pop
(bad)
scas
cdq
adc
test
movs
add
ret
or
mov
add
mov
pop
(bad)
adc
sti
jle
and
dec
inc
lea
cmp
and
push
jmp
xchg
add
add
jne
or
mov
add
psubusb
push
mov
xchg
fld
arpl
int3
xor
shr
adc
mov
clc
jbe
jae
adc
jmp
or
or
add
inc
mov
pop
jmp
or
test
frstor
inc
stc
jle
int3
inc
les
les
mov
ja
inc
sub
mov
mov
or
bound
inc
jmp
retf
movs
stos
stos
push
cmp
fwait
call
add
mov
add
push
xchg
lods
pop
jecxz
pop
xor
or
test
and
imul
add
clc
mov
inc
fdiv
cmp
mov
je
mov
dec
jae
and
fs
mov
and
mov
loop
mov
arpl
call
add
je
mov
or
dec
jns
fst
add
mov
inc
call
pop
mov
ss
pop
and
fdivp
(bad)
repnz
pop
inc
sbb
cmp
sbb
xor
adc
sub
and
inc
and
(bad)
mov
xor
jb
subps
adc
js
ds
shr
mov
add
addr16
loopne
in
xchg
pusha
loope
fs
rcl
or
loop
lds
inc
add
int
cmp
(bad)
in
push
push
pop
jb
lods
inc
push
mov
lahf
or
jl
cdq
ret
outs
enter
inc
mov
cmp
pop
cwde
pop
or
sub
push
or
(bad)
shr
mov
pop
xor
push
(bad)
cmp
adc
in
dec
mov
mov
mov
sbb
ds
push
inc
or
and
mov
cmps
div
mov
xor
pop
repnz
mov
xchg
out
inc
mov
add
mov
ds
retf
push
mov
loopne
fmul
cld
push
pop
into
push
sub
mov
les
retf
popf
push
push
cmp
leave
cmp
aas
sbb
data16
mov
sbb
or
not
mov
clc
xor
das
cmp
add
jecxz
mov
sbb
xor
pop
or
inc
ror
or
or
nop
push
jo
push
mul
leave
mov
or
dec
inc
xchg
lock
inc
jle
pop
add
ret
dec
cmp
clc
mov
cs
jae
adc
pop
(bad)
and
test
data16
in
mov
mov
mov
addps
or
lds
shl
fild
jge
adc
dec
push
mov
xor
and
adc
aaa
xchg
sbb
xor
add
inc
mov
or
fstp
sub
test
and
xor
sub
lea
push
clc
push
inc
loope
stos
adc
in
add
and
sub
mov
sbb
pop
mov
push
imul
pop
xor
stos
test
scas
dec
jle
imul
imul
sub
push
sbb
inc
call
(bad)
rol
push
retf
cmps
adc
fmul
aam
lock
inc
inc
dec
cmps
mov
inc
(bad)
xor
aaa
add
or
sub
sub
inc
mov
add
and
push
add
push
sbb
push
cmp
jge
pop
movs
inc
pop
cmp
jne
inc
rcl
daa
lods
aas
xchg
pop
mov
mov
or
aad
pop
sbb
in
std
adc
sbb
(bad)
mov
in
mov
mov
scas
mov
xor
dec
sti
fld
xchg
pop
jge
cmp
inc
mov
cmp
adc
xor
sbb
imul
cmps
push
call
sbb
add
sbb
dec
into
sub
dec
mov
stos
ficomp
ret
sub
dec
mov
and
xor
sub
xlat
xor
daa
and
dec
inc
rcl
fsubr
add
dec
add
dec
inc
data16
push
aas
add
sbb
ins
rol
pop
xchg
loope
cmp
add
and
jmp
(bad)
mov
mov
inc
pavgb
add
add
xor
adc
dec
or
imul
scas
(bad)
lods
xchg
jl
sbb
jne
aam
and
aam
dec
in
jmp
and
pop
mov
fcomip
adc
shl
in
setle
add
push
(bad)
jmp
jmp
xchg
stos
sub
into
shl
add
(bad)
xchg
dec
aam
mov
mov
bound
adc
inc
clc
and
lock
jmp
mov
sbb
and
fimul
mov
add
mul
leave
scas
jns
ins
add
sti
add
ins
fsub
int3
ret
dec
inc
mov
sub
call
push
add
add
sti
retf
mov
inc
jle
sbb
(bad)
dec
in
add
push
idiv
fcmovnb
outs
mov
add
add
dec
mov
shr
or
ins
std
not
or
adc
loopne
ss
add
ret
cmp
inc
inc
dec
sbb
push
pop
or
sub
push
cmp
mov
add
mov
adc
jmp
mov
clc
sti
jbe
push
push
and
cmp
and
xchg
add
add
fs
jecxz
pusha
jns
test
movs
sbb
lea
(bad)
dec
push
or
aam
iret
mov
adc
not
call
pop
cmp
cmps
xor
add
jne
pop
dec
sar
add
std
fwait
shl
mov
cmp
stos
push
repnz
cvtps2pi
dec
neg
sbb
(bad)
or
push
mov
nop
mov
fwait
jmp
aam
xor
loopne
pusha
sbb
mov
mov
adc
push
adc
ins
add
or
xchg
in
div
cmp
call
iret
adc
mov
add
push
lods
jo
mov
push
movs
sub
fs
adc
mov
or
mov
cmp
inc
arpl
ror
cdq
movs
xor
or
mov
push
dec
call
mov
add
adc
aam
in
cs
je
jmp
mov
leave
xchg
pop
mov
shr
in
rcl
inc
pop
in
shr
sbb
inc
jecxz
ss
or
dec
enter
cs
cli
add
pop
or
dec
mov
inc
or
int3
adc
mov
ss
in
sub
aaa
mov
aas
or
and
scas
aam
mov
imul
xor
cmp
jle
adc
dec
jmp
inc
lock
push
mov
ret
loopne
or
add
inc
scas
push
hlt
sub
paddusb
xlat
cmp
push
out
aaa
sbb
cmp
sbb
pop
sti
or
(bad)
psubsb
inc
in
mov
pop
jp
dec
popf
pop
jne
call
push
aam
and
fld
dec
in
fbld
(bad)
pop
sub
and
or
jnp
push
rol
adc
mov
fcomi
push
adc
pop
test
mov
mov
mov
sbb
dec
jle
mov
jo
or
push
test
mov
xchg
outs
hlt
repnz
lock
sbb
adc
add
cld
jge
loopne
sbb
mov
add
cmp
test
and
pop
adc
add
sar
xchg
jae
ftst
xor
lods
inc
sti
mov
(bad)
sub
dec
je
add
add
inc
xchg
mov
pop
mov
inc
jae
in
iret
ds
lea
aaa
and
shl
cmp
dec
add
add
fs
mov
repz
sbb
cmc
aam
les
scas
and
mov
bound
aam
add
push
and
jmp
(bad)
push
aam
xchg
adc
xor
mov
and
ror
lods
xchg
add
sbb
mov
dec
xor
rol
mov
push
sar
aaa
in
push
test
ret
add
pop
xlat
jnp
ret
call
fadd
sbb
(bad)
lods
int3
and
add
add
mov
lods
test
ja
add
fcom
ret
sar
push
shr
ret
mov
add
dec
rol
jg
pusha
sahf
adc
mov
stos
dec
adc
daa
add
add
adc
add
dec
out
mov
fmul
sub
call
call
or
dec
pop
mov
clc
call
push
push
or
enter
ds
xor
mov
mov
int3
jo
xor
cmp
and
inc
ds
fistp
mov
inc
das
mov
xor
jne
or
xor
mov
sbb
pop
mov
fcom
lock
adc
cmp
out
and
nop
mov
clc
inc
or
cmp
add
std
and
push
test
mov
pop
pop
mov
adc
mov
dec
nop
loope
call
inc
shr
ret
icebp
mov
mul
mov
xchg
cmp
jge
add
cld
pop
neg
jge
pop
les
add
sub
jb
pusha
inc
cmc
cmp
sub
je
mov
and
cmp
mov
and
mov
push
inc
ins
sahf
or
or
push
pop
mov
xchg
jge
les
iret
mov
jg
mov
clc
sub
sub
or
fnstsw
jnp
mov
pop
ins
lods
sbb
lods
fwait
mov
and
ins
lods
ins
(bad)
stc
scas
or
scas
(bad)
leave
lods
fstp
enter
mov
pavgb
mov
mov
adc
mov
and
inc
lahf
pop
cmp
mov
inc
retf
fnstsw
retf
pop
pmulhuw
repnz
ins
movs
pop
add
sbb
pop
repnz
cdq
add
or
loopne
in
dec
cmp
jne
sbb
and
sbb
mov
(bad)
pop
pop
jae
js
push
jne
retf
mov
jo
jae
and
mov
test
or
jecxz
sbb
add
add
pop
call
(bad)
in
pop
push
push
pusha
push
push
nop
inc
mov
jp
inc
pop
cld
retf
inc
mov
sbb
pushf
jmp
add
stos
mov
sbb
addr16
add
add
xchg
jle
sub
lods
jno
add
loopne
sbb
mov
jns
xchg
pop
or
and
dec
sbb
adc
mov
out
or
jle
mov
in
ret
cmp
mov
and
xchg
(bad)
daa
xchg
(bad)
fdivr
pop
fmul
pushf
inc
(bad)
pop
xchg
cmp
fild
jmp
and
add
dec
add
adc
and
mov
dec
not
inc
sbb
jne
xchg
adc
xchg
push
inc
imul
push
add
push
dec
mov
inc
fcomp
dec
sbb
in
test
pop
dec
xchg
fcom
dec
xchg
scas
jne
jmp
add
and
mov
int
sbb
inc
dec
mov
movs
mov
sbb
and
dec
jp
arpl
retf
inc
pop
enter
daa
jmp
mov
sbb
imul
pop
adc
pop
sub
sbb
mov
dec
sbb
adc
pop
out
add
cs
xor
sti
cmps
add
push
in
rol
sbb
pop
xchg
push
pop
add
xor
ret
adc
adc
mov
stos
retf
in
cwde
and
pop
add
and
or
or
ret
inc
imul
and
scas
dec
pop
or
ss
adc
in
adc
or
xchg
sbb
outs
call
push
fdivr
or
aaa
or
in
add
test
fsub
adc
mov
or
popa
xchg
rcl
push
je
bound
add
std
sahf
lea
cmp
adc
pop
jle
outs
aam
inc
ins
jge
jnp
stos
xor
out
jne
imul
out
(bad)
stos
lea
iret
add
jecxz
push
xchg
je
jmp
jl
or
xchg
lods
into
repnz
cmps
and
jb
pusha
mov
test
repnz
inc
ret
repz
cs
mov
or
(bad)
rcr
rcr
push
cwde
hlt
inc
or
mov
icebp
jmp
jne
pusha
cmc
jo
mov
mov
adc
inc
or
and
add
in
jge
dec
inc
push
fisttp
mov
jb
and
add
and
das
adc
add
cmp
in
fdivr
mov
push
outs
xchg
cmp
push
rcl
js
popf
out
inc
mov
adc
jae
and
mov
rcl
pop
test
push
frstor
add
retf
or
imul
pop
ror
inc
mov
rcl
mov
push
mov
add
sbb
ins
movs
sbb
mov
cwde
in
ins
mov
jmp
ficom
pop
(bad)
cmps
loop
push
inc
rcl
out
lods
retf
push
lock
aad
(bad)
das
or
addr16
pop
out
pop
ins
sti
je
pop
xchg
stos
inc
dec
stos
fdivrp
lahf
fnstsw
push
adc
sub
rcl
neg
(bad)
in
lods
add
(bad)
sbb
or
add
ret
dec
xor
loopne
pop
adc
aaa
mov
add
adc
sbb
jns
adc
sub
adc
sbb
add
or
jmp
and
into
adc
fs
add
sbb
cmovbe
jae
in
pop
inc
popa
out
jae
outs
outs
sub
adc
pop
loopne
test
cmp
(bad)
fst
cmp
mov
psubusb
lds
add
push
ja
out
ins
loope
add
xchg
or
jle
push
mov
fisubr
inc
mov
or
mov
adc
or
mov
or
add
or
push
or
stos
add
or
inc
inc
add
and
pop
addr16
rcl
sbb
and
push
test
mov
push
sub
inc
or
cdq
push
add
xor
sti
adc
adc
shl
add
add
in
inc
aam
jno
mov
pusha
daa
add
pop
add
sub
inc
fld
arpl
call
adc
jmp
adc
mov
test
sub
pop
jo
pop
adc
pop
hlt
(bad)
cli
lea
in
js
push
fucomip
xor
mov
xor
inc
dec
xor
aaa
test
pushf
fucomi
mov
(bad)
add
adc
or
xchg
hlt
or
jg
inc
jb
xchg
adc
mov
add
test
lea
jo
cmp
pop
jl
xor
bound
xchg
fsubr
push
push
and
add
jo
lea
adc
add
ficom
cmp
test
outs
sub
sbb
jno
ins
loopne
add
jnp
add
je
ins
add
popa
add
dec
sub
xchg
ret
mov
sbb
mov
pop
imul
push
lock
push
iret
fsub
clc
mov
out
dec
nop
mov
mov
fld
inc
inc
dec
rol
aad
xchg
or
mov
out
stos
mov
aas
push
sub
js
sub
test
loop
cmp
test
sbb
xor
vmread
jno
pop
bound
or
ins
mov
jg
jo
sbb
mov
ja
hlt
mov
xchg
xchg
fidiv
shr
imul
cmp
add
sbb
xor
push
cmc
mov
cdq
js
sbb
test
pop
sub
jnp
dec
jmp
and
movs
ss
inc
in
inc
and
inc
sub
sahf
and
rol
or
adc
adc
ins
and
sbb
push
pusha
xchg
or
mov
ret
pop
aaa
push
inc
add
push
int3
and
jge
jne
push
ror
fild
test
and
add
add
jecxz
or
sub
jl
mov
or
inc
push
cmp
(bad)
mov
fistp
jb
mov
sub
cmps
push
add
xchg
or
cmp
sar
sub
imul
in
loopne
push
shl
(bad)
add
dec
clc
(bad)
xor
mov
dec
push
adc
push
cwde
loopne
lods
pop
mov
pop
loopne
rol
inc
and
movq
adc
add
bound
push
or
jp
fadd
imul
ins
mov
mov
add
jle
sub
movs
or
sbb
retf
or
adc
call
sbb
cmp
inc
inc
sbb
and
mov
dec
pop
sbb
adc
and
xlat
or
pushf
test
add
sbb
pop
pop
iret
in
add
adc
imul
call
sbb
and
adc
dec
inc
or
and
sbb
mov
clc
rol
push
shl
add
scas
dec
fstp
jnp
jl
inc
and
call
mov
push
(bad)
dec
shr
mov
aam
push
or
fistp
add
adc
in
loopne
dec
inc
and
mov
add
or
stos
push
stos
mov
xor
aaa
adc
mov
add
sbb
or
adc
add
and
add
sub
or
and
add
inc
arpl
(bad)
cmp
lea
adc
test
fsub
cmps
out
xor
push
push
sbb
imul
cwde
pop
adc
mov
or
jecxz
or
js
pop
sub
into
ret
add
sub
inc
sbb
gs
and
push
jns
fs
icebp
loope
ja
inc
lds
cmp
add
sbb
add
push
add
loopne
jno
addr16
sub
sub
icebp
test
jbe
pop
or
add
je
xor
mov
(bad)
mov
(bad)
jno
mov
imul
add
add
push
inc
or
retf
jmp
sbb
add
xor
stos
out
and
and
rol
cmp
(bad)
ds
mov
mov
jmp
sbb
in
adc
sub
inc
jl
sub
pop
test
add
mov
in
mov
inc
sbb
mov
scas
arpl
in
add
(bad)
imul
xchg
pushf
push
in
test
jns
pop
or
dec
sbb
inc
jb
test
or
aas
mov
and
jmp
lea
mov
adc
imul
or
rcl
inc
test
and
fsubr
shl
and
sub
inc
mov
pusha
jl
jl
outs
jo
ins
out
arpl
cmp
adc
fld
xor
stos
dec
lock
fimul
push
add
jns
sbb
xchg
ror
add
jo
cs
lahf
fild
adc
push
stos
dec
div
adc
mov
inc
js
test
ret
adc
mov
add
or
sub
cmp
mov
test
or
jmp
and
scas
(bad)
push
test
int3
inc
imul
ss
shr
ins
fs
mov
sbb
xchg
sbb
les
or
adc
and
jbe
sbb
or
rcl
and
jg
jo
mov
add
icebp
add
cmp
and
pop
sbb
add
cmps
and
(bad)
sbb
push
ins
add
jg
adc
addr16
cmp
fbld
add
mov
pop
push
pop
mov
fsub
das
adc
push
push
add
mov
sbb
xchg
cmps
pusha
scas
fcomp
pop
sbb
push
cmp
mov
inc
or
push
xlat
adc
icebp
xchg
in
add
xchg
inc
or
fadd
je
xor
jp
sbb
cmp
jmp
mov
pop
fmul
ret
xchg
retf
or
inc
or
mov
push
or
xchg
push
lock
push
inc
adc
outs
mov
xor
daa
adc
push
push
dec
sahf
push
pop
das
jp
inc
repz
and
inc
dec
js
or
jbe
out
jmp
mov
or
adc
xor
push
ins
stos
add
inc
nop
push
adc
cmp
enter
dec
add
jae
repnz
(bad)
sub
sub
in
sbb
and
pop
enter
movs
ja
inc
inc
xlat
xor
inc
xor
adc
push
jae
mov
into
and
jge
add
xor
jnp
jp
(bad)
dec
out
push
sub
add
sub
out
dec
inc
ja
dec
repz
cmp
(bad)
mov
fsubr
sub
add
xor
sub
rcr
add
sub
mov
sbb
dec
fist
shr
pop
add
inc
add
mov
fs
mov
mov
ins
loopne
push
pop
dec
call
xchg
call
xchg
cmp
cs
and
add
fisubr
mov
jne
pop
(bad)
(bad)
dec
push
out
push
or
jae
or
mov
popf
or
nop
ss
std
out
or
push
cmp
sbb
push
push
xchg
or
add
or
mov
fsubp
sub
jl
idiv
fsub
lock
retf
dec
mov
loope
and
sbb
pop
adc
mov
xchg
lds
add
push
mov
pushf
mov
cmps
xchg
push
or
or
or
stc
in
adc
pop
lock
les
pop
sbb
pop
hlt
test
mov
mov
pop
iret
ja
lds
lds
lock
or
and
loope
or
pop
sub
jg
lock
and
dec
cmp
ss
mov
popf
ret
daa
pop
scas
pushf
inc
or
lods
icebp
and
jmp
clc
sbb
and
pop
xor
or
xor
inc
rcr
mov
push
jge
cli
les
add
ja
loopne
or
and
mov
inc
adc
jno
mov
inc
(bad)
dec
hlt
ja
cmp
push
in
pop
ret
inc
(bad)
push
and
(bad)
jmp
or
lahf
or
mov
hlt
out
mov
or
xor
rol
addr16
repnz
pop
pop
pop
xor
(bad)
mov
sub
or
pop
and
repnz
mov
in
stos
jge
lock
xchg
jnp
add
pusha
(bad)
loope
jle
jg
xchg
in
mov
and
nop
dec
pop
repz
ror
lahf
ret
xor
cvtps2pi
and
nop
outs
cmp
or
push
repz
push
add
lahf
pusha
mov
jo
sub
inc
xchg
or
or
and
jno
std
stos
cld
mov
add
lock
iret
jl
add
add
outs
cmp
mov
jp
or
xchg
test
test
xchg
adc
hlt
inc
or
and
rcr
test
test
add
xor
jo
and
adc
push
sbb
shl
pusha
jo
iret
scas
push
xchg
adc
scas
pusha
add
pop
push
push
pop
cmp
add
pop
xchg
cmc
add
adc
cmc
and
jnp
and
frstor
mov
rol
adc
xor
xchg
xchg
adc
or
ror
or
or
enter
xor
add
inc
dec
in
cmc
and
or
push
adc
int3
pop
lahf
repz
gs
loop
push
mov
(bad)
pop
sbb
mov
punpckldq
sbb
pushf
push
inc
ins
addr16
ins
dec
outs
je
pop
outs
or
out
pop
inc
enter
push
test
inc
push
scas
mov
dec
hlt
lds
loopne
push
out
mov
dec
add
pop
repz
or
xor
outs
pop
cld
imul
imul
call
clc
dec
shl
inc
imul
cmps
dec
hlt
mov
add
clc
cmc
jae
es
nop
imul
shl
scas
pop
add
pminub
add
mov
push
test
out
clc
push
loope
fwait
push
add
dec
adc
mov
jg
or
aad
outs
jne
push
and
add
adc
mov
add
jae
data16
pop
popa
test
ins
mov
std
idiv
std
sbb
out
push
push
jmp
mov
(bad)
mov
dec
or
pop
and
pop
push
dec
dec
dec
inc
cmp
jns
pop
push
inc
dec
inc
dec
push
dec
popa
rol
add
pop
loopne
adc
jo
jp
popa
js
int3
push
lods
push
mov
add
sbb
jae
add
stc
fild
cmp
pop
fnstenv
or
clc
add
push
pop
inc
push
pop
dec
or
add
ud2
add
sbb
inc
dec
sbb
xlat
loopne
sub
dec
push
mov
ins
and
sbb
push
icebp
push
push
les
push
inc
push
pop
push
push
dec
pop
inc
pop
pop
xor
inc
inc
push
inc
or
mov
lock
xor
mov
aaa
mov
or
(bad)
mov
mov
mov
dec
and
and
or
mov
push
dec
dec
inc
dec
cli
dec
dec
or
or
add
or
dec
xchg
ret
cmp
ja
jge
or
bound
inc
mov
dec
bound
je
and
xchg
inc
addr16
add
in
je
ins
pop
sbb
arpl
adc
pop
fs
add
cmp
dec
call
jmp
scas
inc
mov
icebp
xchg
test
adc
rol
or
daa
stos
arpl
jb
icebp
add
sbb
or
mov
mov
adc
and
and
cmp
cwde
jae
push
sbb
xor
inc
adc
jo
add
pop
mov
(bad)
js
in
xor
je
bound
daa
sub
jbe
jo
test
adc
and
shl
shl
and
jnp
aad
js
ins
pop
add
xor
mov
push
sub
cmp
pop
jb
sbb
inc
push
dec
xor
inc
nop
add
dec
inc
pop
sbb
adc
xlat
jno
outs
sbb
ins
outs
pop
and
sub
mov
test
clc
adc
je
push
ret
popa
add
inc
in
scas
loopne
add
xor
das
mov
cmc
cs
pop
aas
fwait
ret
out
add
imul
xchg
(bad)
std
cmps
adc
jnp
lock
jnp
bts
xor
imul
xor
mov
or
push
lock
or
sar
push
mov
or
push
dec
dec
inc
push
and
das
sti
push
jmp
inc
inc
inc
push
xor
hlt
imul
je
adc
xor
inc
pop
push
ficomp
cmp
push
cmps
push
mov
cmp
adc
movs
pop
and
xor
dec
inc
inc
add
pmulhuw
jnp
xor
mov
dec
inc
xor
test
push
push
clc
dec
push
mov
dec
push
(bad)
out
into
dec
sub
adc
dec
pop
mov
jnp
fucomi
xor
adc
ds
shr
push
inc
push
inc
or
outs
lock
inc
dec
push
cmp
push
dec
push
dec
dec
movs
loope
and
push
push
mov
cmp
push
cmps
popa
nop
add
jnp
cmp
shl
jp
repz
in
arpl
jge
adc
cld
sub
pop
pop
outs
scas
mov
push
pop
imul
and
jnp
dec
test
mov
sbb
sub
or
arpl
mov
jo
int3
jno
popa
xor
sub
and
xor
ret
sbb
cmp
inc
pop
sbb
mov
pop
bound
sub
jne
aad
pop
jo
jae
add
pop
jne
jb
fadd
loop
inc
mov
cld
mov
mov
jbe
jae
jae
mov
fdivr
mov
sub
cmp
dec
cmp
pop
sub
mov
sahf
popa
jo
pop
mov
test
dec
sbb
jecxz
and
loop
lds
icebp
add
call
gs
or
ret
fisub
imul
add
pop
test
sbb
xor
cmp
push
(bad)
loope
adc
pop
jo
bound
pop
test
stc
push
sub
mov
inc
sub
(bad)
adc
lea
push
fadd
jo
js
test
outs
sub
int3
xor
push
data16
and
sar
test
shr
das
add
out
ja
(bad)
imul
sub
imul
outs
xor
xchg
adc
push
mov
or
sbb
test
cs
add
test
adc
rol
sub
add
js
add
jo
or
cmp
into
jo
jg
stc
pop
test
outs
sbb
std
les
sbb
in
jb
and
cmp
xor
sub
fdiv
xor
mov
cdq
inc
sbb
xor
dec
(bad)
mov
test
(bad)
cdq
mov
das
xchg
inc
cmp
jno
pop
aas
cmps
or
xchg
jmp
ficomp
dec
sub
push
push
ins
je
sub
(bad)
in
pop
add
dec
lock
push
adc
add
add
test
mov
push
je
xor
dec
sbb
in
cmp
sbb
and
fwait
push
loopne
add
pop
push
add
inc
call
push
inc
int
shl
xor
mov
outs
mov
jmp
ins
mov
popa
repz
add
mov
inc
push
sbb
pop
lods
fs
and
or
add
outs
and
adc
sbb
shl
dec
cmp
push
mov
push
sbb
or
adc
or
or
jae
or
adc
xchg
dec
adc
addr16
push
mov
ror
in
pop
ret
mov
mov
loope
imul
add
mov
popf
sub
(bad)
jno
jmp
adc
mov
leave
enter
and
ins
push
inc
xchg
or
push
push
pop
push
dec
idiv
lock
pop
lock
sub
pop
lods
(bad)
adc
mov
in
add
add
ins
pop
sbb
cmps
push
sbb
into
push
cmp
adc
arpl
nop
fist
mov
pop
inc
mov
inc
push
push
inc
cmp
les
ror
mov
hlt
(bad)
or
sub
loopne
inc
dec
or
add
xor
push
call
rcr
pop
dec
jo
mov
pop
repz
or
ss
cmp
bound
ds
ret
sti
add
dec
inc
cmp
sti
pushf
jge
xor
mov
das
mov
xor
cs
inc
xlat
or
sbb
or
in
loope
inc
adc
pop
cmc
add
jge
arpl
add
test
inc
push
push
push
pop
sbb
or
sbb
sbb
cmp
inc
add
rcl
(bad)
or
in
jmp
call
or
inc
jge
jmp
push
mov
mov
stc
adc
mov
fs
jne
inc
dec
mov
bound
cmp
push
jnp
or
cld
retf
lds
push
dec
push
dec
inc
push
sbb
pop
pop
jno
or
aaa
pop
sub
or
sub
xor
or
inc
inc
inc
sbb
outs
push
imul
(bad)
in
imul
packssdw
loope
or
mov
fisttp
imul
or
or
test
jo
in
pop
adc
sbb
jae
adc
dec
sbb
popf
in
rcr
adc
enter
or
pop
adc
das
sub
movs
test
xchg
pop
pop
xchg
adc
pop
add
mov
push
test
sbb
pop
jge
xor
jmp
add
push
jg
xchg
sub
pop
adc
test
pusha
and
xlat
jne
jmp
test
adc
add
add
ins
inc
daa
unpcklps
sbb
add
out
sti
das
fst
or
inc
dec
inc
add
xor
test
pusha
ror
mov
(bad)
out
movs
sub
push
pop
cmp
jo
fld
mov
sysret
cwde
xlat
adc
retf
aam
adc
mov
dec
in
repz
inc
push
dec
cs
inc
inc
and
or
or
xor
fnsave
popa
and
push
sub
inc
or
and
lods
jno
pusha
inc
pop
xlat
add
(bad)
jl
push
push
push
adc
dec
and
inc
dec
pop
xchg
adc
or
shr
adc
push
imul
pusha
nop
out
ja
jle
pop
aaa
ins
adc
or
and
mov
dec
je
outs
dec
test
and
adc
clc
adc
outs
outs
fs
psraw
and
or
or
mov
stc
clc
add
jne
ins
pop
outs
pop
push
mov
leave
ja
sub
pop
out
inc
cmp
sub
add
or
or
sub
add
fwait
or
cmp
ss
xor
xlat
adc
sbb
xor
pop
jl
xor
cmp
jae
inc
jo
gs
inc
jae
popa
ins
out
mov
dec
pop
sbb
mov
sub
cs
xor
or
xchg
sub
xchg
(bad)
das
push
adc
pop
mov
imul
rcr
fldenv
std
icebp
sub
(bad)
sbb
push
push
xor
stos
xor
push
xor
adc
(bad)
mov
pusha
cmps
int
xor
pop
add
adc
iret
or
push
dec
ds
sub
cs
les
dec
dec
jl
ror
add
mov
addr16
sbb
test
jp
and
mov
imul
add
lods
or
push
add
jle
dec
imul
sbb
or
pushf
daa
adc
mov
adc
inc
cmp
ins
push
push
xor
cmovno
or
pop
fcomp
or
push
dec
inc
loope
sbb
xor
sbb
xor
inc
loop
ret
adc
test
out
bound
adc
xchg
repz
cs
adc
mov
add
mov
push
adc
rcr
lock
jg
(bad)
or
dec
and
add
fsub
or
or
pop
mov
mov
cmp
mov
sub
push
cdq
jo
loopne
aaa
mov
aas
push
bound
cmps
adc
jns
daa
mov
ds
push
add
(bad)
pusha
je
js
and
cmp
data16
iret
or
cld
jne
sbb
push
aas
xchg
mov
inc
xor
mov
adc
lock
sub
nop
rcl
sbb
rcl
dec
add
jg
movs
add
fwait
inc
mov
nop
in
or
out
add
test
push
pop
call
pavgw
jae
push
and
or
sar
gs
jmp
jo
mov
pop
push
mov
dec
aaa
mov
mov
sub
ins
sbb
lods
pop
iret
cld
pop
or
dec
iret
inc
dec
dec
inc
adc
xor
pop
imul
push
push
ins
loop
fnsave
std
dec
dec
jne
(bad)
shl
fadd
mov
popa
data16
fwait
ds
sbb
aad
js
dec
or
or
fld
dec
outs
inc
rcr
inc
dec
in
dec
sbb
pop
movs
add
sbb
(bad)
(bad)
or
xchg
ins
test
fisubr
fbld
and
pop
sbb
sub
add
and
mov
add
out
and
dec
pop
in
pop
mov
jmp
repz
inc
xor
mov
jl
jecxz
or
cmp
cmp
adc
dec
adc
add
push
push
adc
push
stc
call
and
push
(bad)
and
or
adc
fucompp
sub
and
pusha
push
sub
lahf
dec
xchg
lock
or
pop
adc
retf
rol
rol
js
xchg
dec
test
jmp
xchg
arpl
jns
shl
and
imul
sbb
add
mov
sub
pusha
icebp
(bad)
cmp
imul
adc
sub
sbb
jo
ds
arpl
stos
xor
xor
pop
dec
adc
fcom
popa
jne
in
sbb
dec
dec
dec
dec
push
push
into
push
repnz
and
and
mov
adc
pop
add
cmp
push
adc
cmp
push
inc
pusha
pop
or
mov
(bad)
jecxz
stos
ds
adc
cmp
sbb
push
sub
add
or
and
push
or
fwait
add
push
int3
movs
add
das
fs
neg
outs
xor
xor
add
jb
das
or
pop
add
jns
lods
or
shl
cmp
clc
xor
jl
sbb
test
cmps
and
cs
adc
xchg
or
add
pop
imul
in
add
inc
or
jae
dec
popa
xlat
or
xlat
pop
add
push
stos
push
mov
popf
add
sbb
addr16
inc
push
push
pop
mov
test
dec
lahf
popa
rcl
and
enter
test
jo
jp
or
xor
add
int
or
adc
sysexit
clc
push
push
jb
stc
add
test
jb
xchg
test
push
xor
das
lahf
(bad)
das
les
or
cmovnp
fisttp
dec
or
test
push
mov
or
mov
test
js
adc
ds
ror
shr
push
or
adc
and
mov
pop
mov
clc
(bad)
sub
outs
fisttp
sub
(bad)
sub
fbstp
call
add
or
sahf
mov
push
das
leave
xor
out
lds
add
sub
out
sar
or
std
pop
add
xchg
inc
mov
dec
or
iret
inc
das
rcr
ret
ret
inc
pop
xor
add
jbe
push
into
je
xchg
mov
push
pop
or
ret
movs
dec
or
xor
mov
push
or
jmp
jecxz
and
fsubr
or
push
inc
or
xor
movs
leave
or
and
or
mov
cmps
or
jb
sbb
(bad)
loopne
mov
pop
pop
sub
cmp
adc
outs
fs
dec
cmp
mov
jo
and
fwait
dec
or
ins
cmp
pop
cmp
mov
fnstsw
sub
jne
add
imul
xchg
or
sub
je
sub
pusha
push
lock
xor
aas
xor
shr
jo
pushf
sbb
inc
mov
push
loope
shl
mov
outs
je
and
adc
pop
cmp
movs
pop
xchg
test
sub
push
hlt
fst
lods
and
int3
ret
je
sbb
test
xchg
(bad)
fisubr
ja
or
fdiv
or
data16
mov
pop
or
popa
add
js
mov
adc
sbb
inc
inc
jg
cmp
sbb
jo
imul
or
cs
retf
sub
ss
sbb
test
les
or
push
mov
ret
shl
ja
ins
sub
cwde
push
sbb
push
push
popa
lods
retf
mov
imul
mov
es
imul
inc
adc
jno
aaa
int
add
jg
dec
xchg
fcom
pusha
mov
retf
mov
cmp
and
xor
jo
repz
lods
pop
add
imul
add
jo
std
sub
repz
xor
mov
jmp
test
mov
jo
test
sbb
mov
jo
test
dec
sub
push
adc
push
jl
mov
sbb
retf
add
add
and
inc
add
jl
add
fs
cmp
sub
retf
add
xor
xchg
je
int
retf
and
sbb
ret
or
pop
mov
sbb
daa
jno
xor
adc
and
test
rcr
fs
add
ret
lock
rol
inc
sbb
mov
push
scas
jge
sbb
mov
mov
add
xchg
adc
add
pop
pop
pop
loopne
adc
or
std
xor
xor
and
lods
aaa
dec
loopne
loopne
mov
xor
cmpps
cmp
(bad)
adc
je
jae
sub
iret
out
das
fld
inc
in
jae
mov
or
or
adc
jl
jge
inc
loop
ins
sbb
in
or
inc
outs
ins
sar
push
pop
sbb
push
pop
sub
add
ret
and
xor
add
sti
xchg
xchg
pusha
cwde
or
xchg
rol
or
or
arpl
sub
ror
push
pop
(bad)
mov
shl
outs
add
push
or
add
pushf
sub
fcmove
xchg
in
sbb
or
mov
mov
jae
ret
adc
xchg
or
add
jg
shr
mov
and
adc
xchg
push
popf
cmp
mov
and
imul
adc
popa
or
xlat
gs
rcr
ret
push
mov
and
ins
or
call
or
sub
cmp
rol
ins
rol
(bad)
in
xchg
in
jge
aas
lods
cmp
sub
fs
cmp
test
mov
pop
aaa
and
adc
push
mov
je
arpl
and
js
mov
pop
inc
mov
lds
jl
pop
and
loopne
add
add
pop
dec
mov
mov
xor
stos
and
clc
cld
jp
adc
or
popa
call
je
daa
pop
stos
mov
inc
sbb
or
lods
or
jbe
maxps
cmps
call
sbb
test
js
icebp
jmp
mov
cmp
sbb
mov
mov
jbe
push
pusha
pop
pop
lds
cmp
and
int3
fsub
rcl
les
jge
pop
nop
pop
enter
inc
inc
cmp
push
mov
push
sbb
sti
int
mov
mov
sbb
or
adc
scas
dec
inc
clc
cmp
gs
xor
cld
xor
sbb
add
dec
sbb
inc
adc
dec
and
add
sar
push
into
sbb
aas
adc
in
pusha
es
fmul
jge
aad
dec
daa
pop
movs
cmp
adc
add
or
push
loop
and
das
xor
mov
enter
scas
sub
jmp
xor
dec
in
cmp
dec
push
xor
in
inc
fdivr
adc
xlat
mov
jg
mov
mov
add
add
or
xchg
mov
adc
icebp
test
fisttp
or
outs
or
push
mov
add
loop
ins
add
dec
and
cli
out
add
xchg
in
adc
ja
add
sub
add
mov
ja
je
adc
jecxz
lock
sub
or
dec
add
arpl
push
add
push
jecxz
movs
add
mov
or
push
dec
sbb
retf
gs
push
test
and
or
add
ficomp
mov
ins
jae
cmp
push
sub
cmp
data16
push
jo
sbb
loope
icebp
jmp
and
lea
pop
test
jae
inc
ror
das
jge
xor
ret
sub
pop
xor
or
jae
inc
and
xor
cmc
test
push
mov
js
(bad)
mov
retf
or
add
fs
ret
or
lock
mov
fwait
lock
test
test
sti
ud1
ret
jge
jge
sub
out
or
xor
movs
jecxz
adc
nop
or
in
adc
fs
and
mov
inc
pushf
iret
std
push
pusha
sub
leave
setae
jmp
inc
xchg
idiv
call
pop
arpl
aam
fsubr
fsubr
fistp
mov
in
mov
push
cmp
bts
pop
xchg
xor
jb
popa
sti
clc
cld
(bad)
cmp
pushf
pop
or
add
add
add
push
(bad)
out
add
push
adc
mov
pop
popf
mov
xor
push
outs
sbb
xor
add
inc
shr
fstp
push
pushaw
inc
jae
popf
adc
and
pop
push
int
loop
cmp
lea
loopne
add
xor
mov
mov
sub
push
or
daa
int3
test
jmp
cmp
inc
or
dec
je
pop
imul
and
ss
mov
ja
sub
dec
jb
inc
pusha
imul
jb
nop
outs
arpl
je
push
dec
jmp
sbb
xchg
cmp
or
inc
cwde
and
xor
sub
jge
test
sahf
mov
icebp
ficom
adc
sub
sbb
inc
pop
jb
outs
data16
jb
loope
aas
adc
add
data16
adc
movs
das
xor
jne
xor
jle
mov
pop
cmp
mov
mov
xor
dec
sub
push
pop
daa
inc
jae
sbb
lods
sub
or
add
push
dec
leave
ja
xchg
or
sub
xor
mov
fwait
or
rcr
adc
add
sbb
inc
mov
popa
ins
stc
cmc
inc
pusha
inc
cmp
push
push
pop
sbb
inc
iret
xchg
xor
adc
das
mov
mul
sar
or
ins
or
cmp
mov
jo
mov
xor
xchg
add
imul
jo
mov
xor
add
sbb
addr16
add
jae
call
fisub
ficom
jge
jne
ds
shl
mov
test
adc
fcomp
or
mov
daa
sub
in
add
fwait
pop
xor
dec
push
inc
dec
and
cmp
sbb
xor
or
inc
cmp
or
adc
dec
jo
je
js
mov
int
gs
xchg
clc
add
mov
and
pushf
fstp
adc
push
or
(bad)
mov
adc
xchg
adc
jne
or
jo
or
mov
gs
imul
cmp
fld
mov
clc
shl
leave
adc
popa
jns
add
jo
or
mov
mov
cmc
mov
xor
arpl
jnp
push
inc
rol
fst
xor
sub
or
in
outs
ins
xor
adc
jno
adc
fdiv
adc
gs
jmp
ins
outs
inc
bound
push
fld
data16
inc
loope
pop
iret
fidiv
in
xor
jmp
pop
(bad)
popw
in
aas
pop
add
int
mov
aad
dec
stc
inc
inc
bound
xor
std
cmp
ror
pop
adc
adc
dec
adc
xchg
sub
or
add
sti
sub
cmp
and
sub
cdq
in
push
je
das
sub
rcl
and
mov
xor
lea
in
test
pcmpgtd
ins
sub
cmp
scas
mov
jae
lea
pop
imul
inc
les
sbb
imul
sti
inc
aas
inc
arpl
cmp
imul
xchg
dec
add
test
pop
gs
ins
jno
or
ins
mov
mov
add
xor
(bad)
or
popf
push
add
mov
xchg
add
cmp
fnsave
inc
adc
cmps
fmul
dec
(bad)
mov
sub
inc
push
xchg
inc
dec
test
test
xor
fs
jmp
pop
mov
and
dec
sub
cwde
add
cmp
or
fadd
sbb
shl
inc
stos
xchg
and
sti
add
popa
test
add
adc
push
add
icebp
push
mov
ins
jns
xor
push
je
jne
arpl
js
add
aas
xor
adc
clc
rcl
add
or
xor
das
jno
sbb
mov
sbb
adc
fisttp
jne
jae
and
sbb
loopne
cmp
out
sbb
out
mov
cmps
and
retf
add
mov
inc
jge
dec
test
mov
xor
xlat
clc
inc
lock
xor
inc
and
push
add
push
sbb
fsubrp
jb
or
enter
shr
aas
hlt
inc
das
cmps
je
(bad)
in
lahf
pop
mov
dec
dec
push
movs
lds
jo
mov
out
test
push
fs
xor
ror
jmp
and
add
add
xchg
sub
push
dec
div
inc
scas
jl
int3
pop
cmp
pusha
pop
fwait
sub
inc
es
aaa
push
xlat
pop
ds
inc
push
adc
inc
push
sbb
(bad)
jo
pop
bound
xchg
lds
or
and
dec
shr
mov
or
gs
pop
push
inc
and
repz
jbe
pop
lock
gs
jge
inc
pushf
sbb
pusha
or
inc
scas
sbb
xchg
mov
jo
mov
dec
imul
lock
and
call
das
sbb
inc
adc
lds
add
sub
fwait
aas
dec
jae
mov
iret
(bad)
daa
xchg
mov
add
loope
fist
push
lods
or
jne
pop
data16
mov
ja
xor
pop
xchg
frstor
sbb
outs
stc
push
pop
or
and
add
and
arpl
fs
jo
or
cmp
das
sub
pop
xor
jmp
cli
or
or
or
stos
shl
and
jge
les
shl
xor
adc
xchg
cmp
mov
inc
cmp
(bad)
adc
fadd
cs
sub
je
dec
test
inc
mov
push
jp
add
arpl
dec
lfs
int
xor
push
fistp
cmp
fucomp
rol
cmp
out
je
push
and
shl
aam
xchg
jo
push
and
xchg
je
cld
je
xor
loope
(bad)
cmp
xchg
pop
data16
push
jb
xchg
mov
pop
test
mov
cld
pop
(bad)
das
jl
pop
cmp
das
out
jne
ror
out
repnz
add
push
mov
sbb
push
and
xchg
and
adc
inc
and
pop
jae
or
add
add
jp
push
inc
mov
pop
sub
add
mov
in
mov
in
outs
inc
dec
data16
mov
push
pop
adc
push
adc
fistp
mov
inc
outs
fs
or
in
or
repnz
fimul
repnz
or
push
dec
shl
or
xor
es
mov
dec
sbb
stc
jmp
in
ret
add
or
xor
ds
jae
fs
pop
inc
adc
data16
mov
pop
dec
ins
mov
inc
jb
add
movs
fcmovb
out
mov
cmp
cwde
mov
mov
cmp
les
popa
push
push
or
pushf
adc
ins
add
pop
dec
sbb
pop
push
push
dec
aaa
sbb
test
pop
das
jo
nop
dec
aad
out
add
add
fist
add
mov
fisttp
pop
jmp
push
inc
rol
push
add
pop
pop
push
jno
nop
inc
add
pop
mov
cmp
rcr
push
sbb
add
pop
pop
and
mov
dec
mov
mov
dec
cmps
clc
data16
mov
adc
pop
in
inc
leave
sub
das
repnz
pop
fmul
loopne
test
outs
fisttp
or
push
ins
jns
mov
pop
add
push
pop
add
inc
jo
cmp
or
cmp
add
frstor
xlat
pop
sub
add
dec
outs
nop
shl
fstp
je
jp
pop
dec
outs
dec
inc
xor
inc
xor
daa
pop
es
xlat
pop
sub
and
dec
jae
dec
outs
add
jbe
dec
pop
sub
xor
inc
xor
cmovno
mov
adc
js
pop
sub
cmovo
cmp
adc
add
or
lea
lea
dec
add
imul
or
or
out
sub
push
lock
pop
out
ins
mov
push
fdivr
jnp
push
push
call
sbb
ss
mov
pop
adc
push
pop
daa
xor
mov
test
mov
dec
or
call
add
lods
or
push
add
cmp
add
and
add
nop
and
cmp
sub
cmps
inc
push
xor
push
sbb
push
or
sub
push
or
inc
mov
sub
cdq
or
adc
sub
dec
and
ret
nop
imul
fucomi
mov
push
push
add
fmul
add
gs
ret
mov
inc
xchg
xor
sub
or
push
adc
add
push
jno
pop
cmp
test
dec
inc
mov
sub
ins
sub
call
adc
mov
and
add
xor
xor
xor
lds
rcr
fidiv
sbb
rcr
test
mov
cmp
scas
and
lock
sti
das
add
push
push
push
push
sub
in
add
push
jmp
and
xor
xor
inc
pop
and
out
and
xor
sub
push
and
sub
and
mov
arpl
add
mov
push
push
stc
xchg
iret
jae
or
adc
pop
jge
adc
mov
adc
or
std
inc
rol
aam
sbb
ror
push
sub
sub
je
xor
(bad)
jmp
sub
add
call
lock
dec
ror
adc
sub
add
cwde
das
push
add
mov
or
add
test
popf
adc
cdq
pop
hlt
xchg
and
retf
pop
pop
cdq
or
sub
dec
xchg
dec
pop
hlt
fsubr
push
fmul
sub
push
xchg
sti
pop
add
js
push
add
xchg
mov
outs
or
jbe
jo
(bad)
xchg
fwait
mov
add
hlt
or
mov
pop
sub
sub
xchg
fmul
pop
add
fdiv
test
adc
int3
push
cmp
adc
dec
sbb
pop
(bad)
stc
psubusw
popf
xor
cmp
retf
inc
inc
dec
dec
inc
js
pop
hlt
mov
aad
les
adc
ficom
out
dec
cld
and
push
sub
or
js
aas
fs
jno
mov
and
popa
inc
aaa
iret
sub
sub
pop
(bad)
lods
ins
cld
ror
adc
mov
loope
lea
jl
pop
jns
les
sbb
movs
cmc
(bad)
nop
push
aaa
mov
mov
and
stos
mov
in
jns
sbb
xor
ins
leave
inc
rcr
cmp
or
xchg
clc
cmp
je
ins
and
xor
adc
push
mov
cmp
movs
dec
xchg
or
mov
sub
std
mov
(bad)
fild
add
and
jne
fild
call
mov
xor
jo
(bad)
mov
cmps
mov
pop
sub
and
dec
loopne
bound
lock
mov
ins
or
jbe
outs
xor
sbb
and
xchg
fiadd
xchg
out
sbb
push
pop
dec
push
mov
or
cmp
(bad)
mov
dec
les
ret
fld
sbb
mov
mov
pop
and
mov
enter
les
in
inc
push
cmp
adc
push
in
xchg
inc
sub
xor
xor
jb
enter
push
cmp
mov
xchg
inc
(bad)
and
cmp
dec
test
mov
xor
add
pop
dec
pop
and
xchg
mov
xchg
push
jb
dec
jo
enter
je
js
test
or
sbb
test
jbe
xor
enter
push
mov
and
and
xor
in
ja
pushf
pop
mov
and
test
lods
jne
mov
sbb
mov
enter
and
in
jae
fadd
xor
test
and
xchg
les
enter
ins
cmp
test
inc
mov
or
leave
cmp
and
jo
inc
inc
push
sbb
in
cmps
call
std
and
jl
mov
fs
and
dec
push
outs
and
mov
fsubr
inc
and
sub
cmp
cwde
add
sbb
enter
or
inc
inc
push
sbb
js
in
xchg
and
cmp
push
xor
arpl
and
pop
cmp
mov
and
nop
pop
jno
rcl
stc
and
adc
push
in
push
cmp
cmp
enter
call
push
sbb
sub
enter
cld
enter
push
add
add
mov
mov
or
pop
mov
inc
je
inc
aaa
cwde
and
and
add
xchg
sbb
cdq
or
and
xor
fs
inc
push
pop
add
mov
movs
fmul
push
mov
ja
test
enter
and
enter
test
and
xchg
ins
lds
and
(bad)
sbb
cmp
push
sbb
and
and
inc
shl
xor
xor
sub
push
shl
xchg
adc
sbb
jb
and
loopne
fsub
shl
ins
cmp
jl
test
jno
aad
call
(bad)
arpl
jns
hlt
and
jb
xchg
and
cmp
je
xor
clc
ror
inc
and
and
mov
jb
fadd
imul
dec
sbb
fs
add
inc
inc
push
push
aam
retf
mov
nop
xchg
popa
and
fs
fs
and
sbb
test
jo
enter
je
inc
push
cmp
adc
cmp
mov
jl
and
mov
int3
nop
in
movs
mov
add
enter
pushf
jo
sbb
jb
mov
and
(bad)
das
ins
cmp
and
fs
jbe
in
and
jb
cmp
and
mov
nop
jae
push
sbb
add
mov
push
add
in
aam
cld
test
adc
and
enter
cwde
nop
mov
je
dec
and
xchg
xchg
arpl
and
pusha
mov
push
sbb
xor
xchg
mov
xchg
mov
sbb
js
movs
jb
ret
and
inc
and
pop
es
cmp
xchg
pop
fsubr
and
cmp
ins
loopne
jae
adc
in
and
mov
cld
and
mov
dec
and
xor
pushf
test
lods
arpl
sbb
and
xchg
mov
mov
cmp
jb
shl
mov
arpl
xchg
ins
xchg
aam
xchg
(bad)
mov
xchg
loopne
cdq
test
cmp
inc
call
push
in
mov
in
call
mov
xchg
popa
cmps
cmp
add
fs
and
dec
sub
and
mov
inc
sbb
jb
mov
mov
fs
and
or
popa
les
inc
in
xchg
inc
add
or
sbb
fs
fadd
sbb
pop
add
and
push
and
movs
mov
arpl
and
xchg
add
adc
adc
cmp
and
call
xor
int3
(bad)
lock
or
sar
xor
and
nop
fst
(bad)
data16
add
cmp
in
inc
xor
push
sbb
lahf
push
sub
add
fmul
and
sbb
fdivr
clc
or
sbb
mov
cmp
pop
sub
outs
and
push
sbb
fs
loopne
dec
mov
nop
shl
pop
dec
sbb
shl
add
ss
push
movs
mov
cmp
sbb
mov
and
xchg
shl
and
mov
ins
and
and
sbb
lds
rol
push
sub
shl
imul
enter
dec
test
add
aad
cmp
push
add
in
sbb
jne
pop
push
aaa
push
(bad)
rcl
fidiv
push
lods
pop
arpl
cwde
cmc
scas
or
pop
ja
push
adc
(bad)
push
add
pop
or
push
(bad)
ret
fs
sbb
jne
push
push
ret
jbe
out
int
pop
dec
push
jns
sbb
mov
ja
idiv
popa
arpl
add
arpl
fs
sub
outs
adc
fistp
pop
test
div
ss
sbb
(bad)
je
arpl
xor
add
loopne
push
jl
add
aad
lods
test
arpl
xor
jb
sbb
addr16
ja
or
aas
add
push
jnp
fimul
test
xor
jo
in
or
addr16
push
push
popa
inc
xor
fistp
ja
imul
cmps
xor
jb
or
sbb
arpl
imul
pop
add
pop
lods
or
or
mov
popa
fisub
add
mov
arpl
rcr
je
inc
add
out
(bad)
adc
or
aas
outs
jmp
mov
inc
pusha
mov
daa
inc
(bad)
cmp
es
mov
mov
aaa
cmps
mov
bound
popa
retf
arpl
ins
lds
test
or
lods
repz
xor
push
push
mov
adc
jbe
mov
arpl
cs
dec
cmp
adc
xor
xor
and
xor
xchg
dec
adc
or
and
or
sub
push
rcl
out
push
outs
xor
adc
xchg
pop
adc
dec
inc
and
and
inc
and
adc
or
ds
fs
lea
xor
inc
push
test
pop
das
add
inc
or
add
sbb
push
pop
xlat
(bad)
mov
pop
pop
xlat
scas
add
comiss
add
test
das
test
jb
mov
pop
jg
add
stos
mov
xor
dec
fst
js
adc
imul
and
xchg
jmp
sub
and
cmps
sub
add
xchg
mov
add
das
mov
add
inc
dec
imul
js
pop
daa
sub
scas
add
add
pop
push
ins
add
cmc
ret
dec
push
ins
xor
push
jae
mov
dec
sbb
inc
and
outs
addr16
fbld
push
nop
or
nop
cmp
sub
inc
es
lock
repnz
add
push
add
adc
pop
push
dec
xor
cmp
mov
addr16
pop
pushf
sbb
push
loop
push
pop
lahf
sbb
mov
xchg
jg
inc
xor
sbb
jg
xchg
loopne
movs
adc
jb
cmps
mov
pop
adc
sub
jne
adc
cwde
mov
outs
xlat
adc
adc
dec
adc
pop
inc
jle
push
pop
add
add
pop
mov
pop
adc
sbb
and
sub
outs
add
lods
inc
mov
push
dec
pop
or
and
imul
xchg
jmp
cmp
push
rol
pop
pop
pop
fcomp
pop
or
cmp
outs
dec
arpl
(bad)
fiadd
push
dec
inc
dec
idiv
or
arpl
lods
out
xor
and
sub
push
add
sbb
inc
pop
dec
daa
pop
sbb
arpl
outs
pop
inc
test
jmp
shr
scas
addr16
cmova
sbb
jns
jo
je
xor
jmp
adc
add
jmp
das
xchg
push
sbb
pusha
shr
(bad)
mov
xor
aaa
and
sbb
shl
sbb
aaa
sbb
pop
jecxz
push
and
lods
nop
imul
mov
pop
or
push
lahf
mov
lahf
push
inc
or
push
dec
jle
ficom
loop
sub
(bad)
rol
arpl
les
sbb
test
adc
mov
addr16
daa
mov
lahf
ret
jmp
inc
mov
out
fisubr
add
ja
lds
sbb
pop
lds
add
jnp
test
(bad)
dec
sbb
mov
push
lahf
in
adc
(bad)
movlps
int3
sbb
ins
and
imul
jb
mov
and
adc
mov
adc
mov
xlat
adc
push
sub
push
mov
push
lahf
nop
or
inc
and
ja
adc
popa
and
scas
inc
mov
jnp
jnp
or
fidiv
push
call
cmp
shl
sbb
sbb
add
shl
je
loopne
pop
push
sub
add
sub
lods
sar
dec
jae
inc
cmp
stos
outs
add
or
pop
add
inc
add
xor
aaa
mov
mov
sbb
or
jbe
daa
adc
xor
sbb
aaa
aaa
jp
add
(bad)
fild
push
clc
and
add
adc
xor
pusha
addr16
sbb
xchg
push
jg
inc
dec
sbb
imul
xor
bound
outs
stos
loopne
sar
xor
push
stc
inc
add
dec
aaa
push
int
fiadd
emms
cmp
ins
adc
(bad)
xorpd
adc
loopne
(bad)
aas
adc
push
xor
call
mov
aas
dec
adc
or
das
pop
xor
(bad)
aas
jg
adc
push
aaa
mul
add
pusha
rcr
rcl
stos
pop
das
or
pop
dec
ins
rol
sub
pop
inc
push
sub
aaa
aas
push
aas
test
cmps
pusha
aam
adc
add
sub
nop
pop
dec
jbe
aam
add
stos
push
push
outs
push
aad
pusha
mov
mov
mov
xor
push
pop
push
xlat
adc
pusha
inc
inc
mov
cmp
jecxz
jae
adc
aaa
dec
or
pop
in
pusha
lahf
dec
dec
pop
lds
lahf
dec
repnz
rcl
pop
shr
pop
cs
add
sub
inc
add
mov
pop
lahf
stos
shl
xor
rol
and
mov
push
movs
add
test
(bad)
aas
push
add
sub
or
fbld
popa
inc
aaa
inc
stos
or
and
pop
pusha
mov
sbb
inc
pop
push
jl
jb
or
bound
inc
push
adc
aas
adc
aaa
mov
je
daa
sub
call
add
outs
ror
sbb
ret
nop
cmp
push
daa
jle
xchg
mov
outs
mov
addr16
out
inc
bound
(bad)
stos
les
mov
stos
mov
adc
dec
lahf
pop
push
sbb
sbb
inc
test
pop
cmp
nop
push
xchg
xor
inc
call
xchg
inc
test
adc
mov
or
lods
push
pop
xlat
xor
adc
and
add
cmp
not
and
and
sub
test
push
ja
jmp
mov
xchg
test
shr
daa
inc
ins
adc
sub
test
outs
addr16
add
inc
sub
and
pop
test
and
pop
cmp
push
test
mov
xlat
push
push
test
pop
rcr
arpl
jbe
jg
cmp
jo
daa
bound
arpl
mov
pop
push
popa
add
xlat
inc
xor
rol
fcmovb
xchg
xchg
vprotw
ins
scas
adc
scas
fdiv
cmp
ret
aaa
dec
out
mov
rol
das
xchg
mov
out
jo
or
mov
fsub
ins
push
bound
pop
mul
mov
sub
pop
add
xchg
fisub
mov
test
add
mov
inc
cmovg
jae
mov
jne
adc
push
adc
dec
ret
daa
jle
stos
shr
pop
dec
push
cmp
or
ss
adc
add
jg
mov
pop
push
dec
push
movs
sub
out
sbb
inc
add
outs
xor
sub
or
aaa
rcl
shl
push
aaa
inc
push
pop
(bad)
(bad)
ins
das
inc
jae
dec
dec
xor
mov
xor
mov
pop
addr16
scas
test
bound
sbb
xor
adc
mov
pop
fs
add
or
push
add
sbb
adc
jg
jae
adc
outs
add
inc
mov
jb
or
pop
imul
add
maxps
push
iret
or
addr16
mov
test
xchg
nop
adc
cmps
push
test
push
pop
iret
rcl
xor
or
inc
sub
push
inc
movd
bswap
or
add
push
cmp
not
retf
dec
sbb
sbb
xchg
mov
adc
ja
sbb
pop
xchg
stos
add
call
ja
aaa
mov
aaa
jg
lahf
pop
dec
dec
adc
push
cmp
push
fisub
stos
pop
cmps
cmps
jl
sub
jbe
jne
adc
push
xchg
mov
pop
add
add
add
mov
in
pop
adc
jmp
jl
imul
test
or
test
je
and
jmp
jbe
stos
and
cs
mov
xchg
shl
mov
retf
out
or
imul
and
sub
jbe
xchg
xchg
xor
cmp
inc
or
dec
dec
push
push
fs
pop
pusha
fs
push
push
fs
or
sbb
enter
or
enter
xchg
cwde
pushf
enter
mov
enter
mov
mov
rol
int3
ror
enter
fsubr
enter
in
in
fxch
in
lock
hlt
sub
push
or
mov
mov
pusha
cs
lea
push
or
fs
push
add
or
ss
arpl
jo
je
js
fs
test
mov
fs
mov
fs
fs
enter
fs
rcr
fs
call
fs
clc
cld
dec
xor
or
sbb
cdq
or
sbb
sbb
push
pop
fs
sbb
sbb
jo
push
sbb
mov
sbb
sbb
enter
or
enter
movs
test
ror
je
inc
jmp
enter
inc
mov
data16
enter
jge
dec
inc
inc
inc
inc
mov
inc
inc
xchg
cwde
pop
sbb
or
mov
sbb
enter
sbb
sbb
fcomp
loopne
sub
mov
mov
xor
xchg
xchg
xchg
mov
mov
xchg
(bad)
enter
xchg
xchg
xchg
aam
fsub
scas
xchg
xchg
xchg
in
in
lock
adc
adc
xor
fwait
bound
sub
xor
xor
jg
mov
or
ss
int
mov
sbb
sbb
and
inc
data16
or
and
inc
inc
inc
inc
and
xor
mov
inc
adc
enter
xchg
xor
test
sbb
mov
mov
or
inc
inc
lods
data16
fs
xor
pop
sub
pusha
or
adc
and
mov
outs
dec
sbb
sbb
xchg
mov
cmps
scas
pop
mov
or
(bad)
pop
adc
in
(bad)
xchg
add
or
jp
inc
ins
call
mov
sar
loop
enter
and
je
sahf
neg
push
in
mov
jp
in
mov
fld
test
and
sar
dec
in
in
jnp
call
imul
sub
add
stos
inc
sbb
and
ret
inc
push
pop
aam
dec
sahf
retf
leave
fcomp
ror
in
xchg
xchg
int3
or
adc
enter
(bad)
les
icebp
push
enter
cmp
add
in
mov
and
xor
mov
mov
dec
call
or
sub
out
mov
mov
mov
je
sbb
and
loop
sbb
jo
mov
outs
mov
adc
pop
mov
packssdw
jb
lods
add
mov
push
push
xor
out
cld
out
ins
or
adc
lods
pop
lods
or
adc
mov
js
add
mov
push
cmps
jne
jp
mov
mov
stc
push
test
(bad)
ins
xchg
call
sbb
je
add
add
aaa
push
and
adc
(bad)
mov
sbb
xchg
xchg
pop
inc
imul
ret
push
mov
test
call
sbb
add
and
pop
pop
inc
jns
test
inc
dec
add
or
arpl
(bad)
add
cmovo
adc
scas
inc
and
dec
mov
ret
pop
and
leave
mul
mov
sub
js
shr
pop
inc
xchg
push
cs
sub
aas
aaa
mov
jo
test
push
inc
les
jnp
inc
mov
mov
pop
push
jmp
(bad)
dec
add
and
out
pusha
or
outs
mov
mov
or
inc
sbb
test
(bad)
pop
mov
cmps
sub
je
add
or
jne
add
(bad)
stc
add
mov
retf
frstor
and
lahf
sbb
and
xchg
loopne
jge
dec
cmps
std
mov
ds
add
jne
inc
jg
mov
ja
or
pusha
(bad)
fsub
xor
mov
mov
cmp
outs
fdiv
and
cmp
xlat
pop
sbb
xchg
mov
pop
push
mov
and
nop
outs
inc
js
and
inc
adc
jo
xor
jmp
jnp
aam
xchg
sub
shr
xor
mov
in
add
test
retf
lods
cld
dec
sahf
add
sub
sub
cmp
add
add
xchg
stc
test
or
or
leave
jne
push
dec
rol
xchg
or
test
xchg
push
adc
pusha
mov
or
mov
push
dec
fidivr
pop
(bad)
adc
jg
adc
adc
wbinvd
jg
add
add
add
fldcw
stc
push
mov
xlat
adc
fs
mov
mov
std
scas
enter
mov
lods
dec
ret
aam
or
inc
test
or
adc
mov
xor
add
add
mov
push
push
pushf
adc
xlat
ds
mov
cmp
loopne
inc
sbb
mov
add
(bad)
push
ret
mov
jne
jle
adc
dec
or
and
add
xchg
fistp
add
fiadd
cmp
jnp
sub
sub
push
sub
cmp
or
and
test
iret
dec
and
and
xchg
add
and
sub
pop
cmp
xor
in
add
cmp
cmp
cmc
cmps
repnz
adc
inc
adc
je
mov
data16
sbb
jo
fisubr
adc
scas
les
cmps
push
loopne
iret
inc
fbld
push
add
sub
adc
push
outs
fdiv
dec
cmc
dec
ins
mov
in
fsub
repz
dec
dec
ds
add
in
test
add
loope
push
outs
or
sub
xchg
add
pop
lock
add
test
aas
sar
adc
mov
lods
sub
fld
ret
mov
movs
mov
inc
idiv
(bad)
cli
or
xlat
ins
mov
sbb
and
pop
shl
dec
ja
cmps
clc
mov
ss
mov
add
mov
and
xor
test
out
inc
sbb
pushw
pop
daa
push
or
cmp
and
fisttp
movs
adc
jae
mov
sar
popf
sbb
pop
or
rcl
sti
daa
push
cmps
or
sbb
mov
or
push
int3
pushf
add
dec
push
or
in
push
add
(bad)
imul
pop
repnz
aad
add
pop
cmp
mov
cmp
add
push
jns
sbb
cmp
inc
add
sub
(bad)
cmp
or
mov
sti
cmp
or
mov
push
add
fidivr
pop
mov
push
ud0
sbb
sub
outs
pop
enter
loope
in
cmp
std
mov
push
mov
mov
aaa
and
pop
xor
and
xor
out
aaa
add
stos
add
mov
sub
(bad)
inc
mov
js
xchg
test
dec
add
adc
sub
xchg
xlat
xor
jl
jl
mov
mov
push
dec
das
cmps
outs
inc
inc
inc
cmp
mov
retf
cmp
imul
pop
pop
push
retf
test
ins
lods
push
das
push
add
inc
test
dec
lock
test
outs
ret
dec
cmp
cli
shl
lods
inc
test
push
add
stos
adc
mov
mov
jae
(bad)
adc
je
out
push
not
sub
or
cmp
cmp
pop
adc
ror
dec
mov
cmp
sub
add
add
pop
adc
jo
ins
clc
aaa
lea
jnp
mov
pop
pop
sbb
inc
ret
or
or
push
loopne
xchg
repz
adc
pop
mov
lock
add
and
popa
pusha
and
outs
iret
push
es
das
loop
movs
in
call
pop
add
cs
enter
pop
inc
pop
pop
(bad)
rcr
adc
rol
cmp
pop
jle
sbb
sbb
dec
add
pop
sbb
sub
fld
cmp
pop
adc
jo
and
adc
mov
adc
pop
inc
imul
mov
adc
iret
pop
add
test
shr
scas
mov
mov
cmps
sub
les
cmp
pop
es
(bad)
push
out
add
adc
adc
xor
jmp
add
(bad)
jmp
push
(bad)
and
popf
push
mov
push
test
cld
mov
adc
loopne
add
push
inc
add
sbb
lock
mov
punpckldq
mov
inc
or
and
pop
jno
sbb
ret
and
mov
fiadd
sub
xor
les
les
aaa
pop
int
ffree
and
inc
jl
or
iret
pop
scas
jl
test
jg
push
add
mov
aaa
pop
add
daa
mov
sub
dec
mov
xchg
das
adc
add
pop
sub
ret
ret
pop
js
lods
es
jnp
xor
push
push
movlps
mov
sub
adc
leave
rcr
test
push
pop
cmps
mov
movs
push
pop
sar
cmc
pop
rcl
sub
fsubr
adc
call
inc
mov
dec
out
(bad)
pop
pop
pop
push
icebp
test
and
je
stos
mov
(bad)
add
ss
call
xor
mov
sbb
sbb
add
(bad)
pop
cmp
mov
inc
(bad)
jmp
cmp
adc
inc
clc
cs
enter
fadd
xchg
jns
or
rol
(bad)
push
arpl
jno
test
jmp
xchg
add
call
fdivr
adc
pop
sbb
dec
adc
enter
aaa
or
pop
pop
js
adc
int
and
je
inc
(bad)
js
sbb
sbb
pop
test
loopne
ja
clc
fstp
jne
int3
les
adc
mov
and
stos
or
and
ja
loopne
fiadd
mov
xchg
call
in
cdq
add
sub
xchg
xchg
arpl
push
sbb
xchg
mov
xchg
pop
ds
in
sbb
xor
inc
das
mov
shr
jmp
ja
add
or
adc
out
sub
adc
or
(bad)
adc
add
push
sbb
add
or
(bad)
pushf
unpcklps
cmps
push
enter
(bad)
xlat
xchg
jl
mov
push
pop
push
ja
jge
outs
push
add
add
add
add
or
sbb
pop
cli
xchg
shr
mov
test
imul
and
and
adc
fmul
enter
mov
leave
push
jg
das
popf
push
sbb
and
shl
rol
adc
outs
bswap
rcr
hlt
rcr
add
cmp
in
test
sahf
iret
jae
mov
inc
push
sbb
mov
cs
push
cmp
aam
cdq
push
jns
test
(bad)
aad
pusha
sbb
icebp
push
dec
fistp
rol
xor
cmp
mov
dec
or
mov
scas
or
or
add
cld
fbld
ins
jo
je
inc
mov
hlt
(bad)
push
dec
mov
pop
inc
pop
add
stc
jns
add
xor
sub
(bad)
cmc
sbb
inc
jnp
jo
inc
inc
pushf
retf
or
push
test
das
mov
add
push
loopne
jae
mov
cmp
jo
add
gs
inc
and
loope
xchg
adc
shl
xchg
cwde
enterw
ret
or
and
fcomp
stc
cmp
cdq
cmc
jo
xchg
xchg
sub
fwait
cmp
ss
arpl
adc
or
ret
popa
adc
mov
call
adc
ror
(bad)
and
in
sub
xchg
mov
cmp
in
add
cmp
out
(bad)
or
adc
aad
jne
or
adc
jmp
push
(bad)
mov
pop
xlat
retf
mov
sti
pop
dec
add
jmp
daa
mov
xor
push
xor
div
adc
and
push
fadd
sub
pop
aaa
cmp
adc
push
push
loopne
scas
add
add
mov
add
sub
outs
retf
call
add
xchg
xor
jge
inc
ror
inc
or
xor
repz
bound
call
test
test
movs
loope
arpl
add
ins
das
push
jns
sub
push
test
test
dec
push
push
ins
mov
mov
inc
add
sbb
add
sub
sbb
dec
dec
or
adc
inc
add
(bad)
dec
fwait
inc
rcl
adc
jecxz
test
fdivr
rcl
add
add
jnp
fadd
add
or
dec
adc
sub
or
push
sub
in
(bad)
mov
push
adc
shr
shl
mov
xor
lock
adc
lock
and
or
pop
xor
iret
add
mov
add
mov
inc
inc
scas
aam
sbb
inc
inc
inc
cs
imul
out
into
xor
inc
sub
inc
and
add
test
push
sbb
inc
sub
and
adc
inc
jne
xchg
and
push
mov
xchg
call
int3
mov
rol
hlt
ror
cli
pop
inc
dec
loope
adc
pusha
add
test
pop
sub
call
movs
test
stc
pop
loopne
gs
retf
test
sti
call
lods
pop
mov
pop
rcr
pop
xchg
cmp
mov
test
or
sbb
test
cwde
or
sbb
add
xor
sub
lock
popa
add
sbb
or
aam
pop
fbld
pop
lods
push
inc
sub
add
leave
or
xchg
add
scas
add
repnz
ja
add
mov
aad
adc
add
dec
jb
xor
mov
adc
xchg
pop
xlat
popf
and
pop
jo
fisttp
cmc
fild
je
pop
xor
je
mov
and
mov
pop
cmp
and
jmp
test
lds
shl
aam
dec
adc
fidiv
mov
aaa
loop
loopne
add
mov
leave
inc
xchg
(bad)
rol
push
or
inc
pop
lods
je
pop
cmps
mov
leave
repnz
nop
xchg
movzx
push
xor
cmp
adc
inc
or
in
iret
xchg
test
jae
jae
sar
cmp
pushf
jne
in
mov
(bad)
out
xchg
dec
movs
or
jmp
cmp
or
mov
test
xchg
xor
mov
inc
cld
or
sahf
ror
je
add
and
push
and
jmp
pop
lods
push
and
aas
sub
mov
push
or
out
mov
add
data16
xor
leave
movs
add
mov
mov
nop
aaa
add
in
clc
mov
ss
inc
mov
inc
in
adc
cmp
adc
inc
inc
js
add
dec
enter
xchg
inc
rol
xchg
xchg
aad
lock
mov
and
sub
jg
(bad)
aas
mov
sub
mov
sbb
pop
mov
repz
sbb
add
push
ret
fimul
daa
mov
fcom
add
sbb
fiadd
arpl
inc
call
fadd
pop
mov
xlat
arpl
jl
lods
sbb
and
sbb
and
das
ret
or
mov
push
xor
and
mov
adc
and
xchg
(bad)
mov
adc
gs
test
inc
hlt
imul
push
iret
fst
(bad)
ins
call
ficomp
fsubrp
pop
call
pop
leave
fmulp
and
or
dec
test
cwde
jge
mov
push
jmp
push
push
pop
or
fmul
mov
mov
mov
scas
pop
mov
sbb
mov
cmp
adc
pop
add
int
movs
sub
jo
nop
fdivr
push
push
adc
adc
add
sbb
or
dec
outs
mov
ins
pop
sub
fmul
js
jb
sub
mov
and
xor
xor
inc
test
cmp
and
fimul
jno
pop
ret
test
mov
ins
mov
dec
sub
fcomp
mov
inc
add
add
loopne
sub
and
add
imul
sub
adc
xor
xor
jne
or
and
lock
inc
jo
sar
or
push
mov
leave
push
or
lahf
nop
sbb
pop
inc
fdivp
push
hlt
jg
fcmovb
add
dec
mov
(bad)
and
cmp
test
out
stos
dec
loopne
fsubr
mov
fldln2
das
adc
jge
pop
add
inc
xor
sti
add
loopne
jne
in
nop
lea
or
or
or
clc
test
retf
js
bound
inc
aas
(bad)
ins
pusha
add
arpl
xchg
hlt
or
int3
xchg
inc
mov
bound
sub
mov
punpcklwd
dec
add
pusha
pop
loopne
mov
adc
pop
enter
out
ret
sub
push
mov
or
push
fcomp
adc
pop
aaa
cmp
fdiv
cli
cmps
jae
or
xchg
push
sbb
mov
mov
sub
popa
add
add
inc
xor
imul
jge
cmp
mov
xchg
xchg
mov
and
add
in
pop
popf
jg
dec
xor
add
inc
movs
inc
inc
or
mov
es
sbb
push
clc
cmp
repnz
mov
or
inc
inc
mov
push
(bad)
and
sub
std
sbb
imul
and
and
adc
pop
sti
call
and
add
or
add
dec
add
test
jp
call
mov
or
lahf
push
dec
add
push
fwait
xor
ja
jecxz
mov
cmps
push
or
jb
addr16
add
push
sbb
ret
movs
jnp
je
inc
popa
das
jle
in
push
sub
push
sbb
sub
mov
jne
fild
push
xor
xor
int3
adc
pusha
push
jns
jle
jbe
call
mov
mov
jnp
(bad)
push
inc
test
out
add
fst
inc
pop
sbb
pop
call
sti
mov
cs
inc
inc
pop
sub
mov
xor
sub
and
push
scas
mov
push
and
xor
push
xor
add
jb
js
cmp
add
inc
push
imul
cmp
and
jge
stc
ficomp
rcr
test
mov
push
sub
inc
sbb
rcl
xchg
adc
cdq
pop
loope
sbb
dec
retf
xor
inc
or
add
les
cwde
sbb
in
pop
ror
mov
dec
out
mov
shl
sub
outs
sbb
fbstp
pop
les
js
sub
into
ins
jbe
loope
sub
sbb
cld
push
sbb
xlat
and
loope
cwde
rcl
xor
xor
pop
pop
and
pop
pop
pop
popf
inc
enter
push
mov
or
jmp
ret
lahf
out
loope
loope
add
outs
int3
loopne
mov
pop
sub
and
loope
push
xor
loop
and
push
cmp
cmps
mov
jg
jbe
mov
jbe
jbe
or
and
sbb
xor
adc
mov
or
add
scas
push
push
jae
mov
fnsave
aaa
adc
jo
push
mov
test
or
ins
ror
lock
adc
cmp
mov
adc
jmp
cmp
jb
(bad)
in
add
adc
or
push
fs
xor
cmp
mov
mov
int
jecxz
adc
shr
and
ja
and
push
ss
lds
dec
mov
mov
movs
pop
push
or
push
dec
nop
add
outs
or
mov
inc
xor
sbb
sbb
sbb
xor
xor
xor
add
outs
push
int3
dec
mov
(bad)
push
push
xor
cmp
add
sbb
popa
cmp
mov
fiadd
adc
inc
sub
add
gs
dec
and
inc
inc
mov
xchg
sbb
jb
popa
jns
lea
sar
or
inc
das
mov
cmp
les
add
cmp
cmp
test
dec
or
adc
xlat
xor
in
adc
push
mov
call
inc
pop
mov
push
inc
push
inc
push
rol
mov
adc
sub
je
add
xchg
or
daa
jbe
into
popa
add
pop
mov
les
dec
push
sub
add
push
mov
test
xor
add
push
pusha
push
cs
pushw
test
and
outs
add
push
push
dec
lods
jb
fistp
add
push
sub
xchg
jg
inc
js
stos
cmp
push
mov
mov
inc
or
fiadd
loopne
iret
jb
sti
imul
sbb
and
mov
xchg
loopne
aaa
dec
(bad)
xchg
or
add
or
jp
imul
sub
test
dec
mov
inc
popa
push
rcr
pop
mov
mov
pusha
add
xchg
pop
pop
out
mov
inc
mov
sbb
sbb
xor
pop
mov
arpl
sbb
dec
movs
out
or
jo
xchg
add
loope
std
add
mov
bound
call
(bad)
push
out
or
push
ret
push
mov
pop
jnp
sub
jmp
jmp
push
sub
push
push
popf
inc
mov
loope
cmps
push
test
outs
adc
cs
adc
mov
repnz
and
add
push
or
data16
fdiv
sti
and
or
out
cwde
xor
or
dec
gs
retf
xor
ret
ja
add
and
data16
jns
inc
cs
pop
dec
cmp
push
mov
adc
test
xchg
icebp
adc
xchg
data16
sbb
add
sub
dec
and
mov
aas
and
ret
add
nop
popa
or
ins
imul
ficom
pop
pop
pop
jne
mov
adc
mov
or
rol
test
adc
mov
mov
pop
add
inc
add
mov
call
mov
movs
cmp
or
(bad)
call
mov
pop
mov
call
rol
cmp
or
ins
sub
jg
rcr
mov
xchg
xchg
lods
push
cmp
and
or
or
rol
in
dec
and
mov
adc
sbb
cdq
jne
ss
sbb
sbb
sbb
pop
pusha
push
jmp
pop
jns
int
(bad)
out
push
sub
mov
das
les
cmp
add
fsub
mov
daa
pop
call
popf
add
or
push
xor
push
fstp
add
daa
cld
sub
and
data16
ret
(bad)
pusha
add
mov
mov
and
dec
outs
xor
cmp
mov
cmp
jle
sub
jecxz
adc
inc
daa
or
jle
clc
push
push
sbb
lahf
mov
cld
adc
scas
in
and
push
sub
out
jb
sti
sub
pop
or
jne
jae
jb
mov
out
mov
or
dec
xchg
mov
stos
mov
inc
xchg
or
inc
sub
ins
test
out
push
popa
rcl
or
in
or
dec
pop
dec
gs
and
pop
add
pop
and
dec
aas
popf
push
inc
xchg
xchg
fldenv
nop
mov
retf
xchg
xchg
xlat
neg
xchg
xchg
xchg
int
sar
(bad)
or
pop
jmp
test
dec
dec
jg
xor
xchg
or
add
fwait
mov
icebp
inc
add
xchg
dec
inc
call
sbb
adc
dec
pop
xor
(bad)
push
les
pop
push
mov
pop
adc
(bad)
call
inc
push
icebp
xchg
pop
daa
mov
mov
pusha
shr
or
mov
add
hlt
pop
fnstcw
clc
jmp
je
cmp
pusha
jecxz
pop
je
inc
xchg
test
in
adc
in
ja
iret
add
dec
repnz
sub
fidiv
cmp
xor
popf
sldt
xlat
jg
test
inc
mov
test
inc
xor
add
lods
sub
add
shl
ins
lea
and
pusha
xor
fdivr
(bad)
push
jo
sub
jno
lea
inc
mov
xlat
adc
out
pusha
aas
and
inc
ins
iret
fadd
jle
aaa
arpl
dec
mov
and
cmps
in
in
push
sub
aas
inc
adc
rol
or
inc
test
add
mov
adc
add
xchg
adc
adc
add
add
pop
pop
push
icebp
in
shl
repz
or
hlt
pop
sub
sbb
sub
das
or
inc
bound
add
sbb
nop
hlt
jg
(bad)
add
mov
das
stc
push
cmps
and
cmp
xor
pmullw
add
stos
inc
and
sbb
mov
xor
pusha
clc
xor
xlat
push
nop
pusha
ss
push
or
fild
ss
push
dec
out
les
push
cmp
xlat
jo
sahf
shl
cmp
or
mov
add
aaa
outs
jl
out
data16
cs
xlat
push
retf
sbb
lds
pcmpgtw
in
or
cs
pop
sub
cmovbe
xchg
hlt
mov
fdiv
xor
push
mov
mov
sti
inc
xchg
adc
imul
add
shl
jmp
outs
cmp
xor
pop
push
lock
outs
xor
mov
mov
sbb
add
add
cmp
jl
jmp
je
mov
add
dec
xor
mov
add
daa
pop
pop
clc
cmp
ins
xor
ror
push
xor
xchg
dec
loop
lds
dec
ret
jns
rol
out
mov
sbb
addr16
inc
lods
push
or
shl
pop
or
js
fidivr
add
pop
in
sbb
and
add
out
or
(bad)
jmp
dec
cmp
xchg
adc
loope
fdivr
xor
call
(bad)
cmp
mov
and
inc
rol
cmp
mov
xchg
or
pusha
sbb
sbb
xchg
rcr
mov
adc
or
(bad)
push
inc
pmaddwd
das
pop
inc
jnp
adc
mov
adc
sub
add
sti
das
mov
int3
fdivr
xchg
cmp
push
adc
add
cs
add
mov
cmp
push
push
push
test
mov
push
sahf
mov
adc
out
out
sbb
push
and
jo
mov
pop
rcr
push
inc
pushf
add
in
or
popa
dec
shr
and
sub
test
add
mov
inc
cmc
ucomiss
nop
jae
cld
xchg
mov
cmps
jmp
sbb
and
adc
in
and
in
inc
jns
loopne
std
and
call
nop
cs
xchg
daa
or
icebp
mov
cwde
xor
out
loopne
bound
test
fs
pop
push
sbb
les
out
lds
pop
jg
or
rcr
clc
pop
or
mov
loopne
cwde
fneni(8087
rcr
sbb
inc
push
test
pop
test
pop
and
outs
add
add
ror
add
jbe
xchg
pop
xchg
inc
cmp
sbb
mov
inc
aam
or
push
add
scas
adc
test
in
jnp
call
xor
aas
call
test
iret
fs
arpl
add
or
xlat
cmp
out
jne
mov
add
lods
sbb
cmps
mul
(bad)
movs
add
xchg
ins
sbb
adc
popf
add
mov
dec
call
imul
add
sbb
push
inc
jae
enter
add
movs
test
xchg
or
mov
push
add
out
clc
add
xor
das
mov
pusha
out
cld
cmp
ret
xchg
push
add
add
inc
mov
jmp
cmp
out
add
add
popa
add
mov
fist
popa
fild
add
pushf
pop
das
pop
test
add
xor
pusha
adc
pop
adc
xchg
ss
pop
jae
pop
xor
jmp
and
mov
sbb
push
and
iret
clc
sbb
popa
mov
lods
add
mov
into
add
icebp
add
xor
add
pushf
dec
cmp
push
dec
inc
xor
das
inc
movs
add
push
cmp
xor
in
inc
push
xchg
add
and
in
xor
add
femms
and
and
cmp
cmp
cmpxchg
xor
xor
push
or
or
or
pop
inc
xchg
inc
ins
fwait
mov
pop
das
ss
mov
sub
xor
adc
jg
pop
sub
jno
pop
mov
add
push
(bad)
add
cwde
push
lds
mov
mov
je
dec
inc
cmp
fwait
push
add
xchg
xor
add
pop
mov
das
nop
xchg
adc
test
rcl
add
or
and
add
es
clc
and
inc
or
pusha
pop
rcl
and
nop
add
adc
sti
rol
adc
xchg
shr
fist
sbb
inc
dec
mov
rcr
ins
dec
add
push
sbb
mov
mov
mov
add
sbb
movs
or
mov
push
add
push
scas
inc
or
dec
or
popa
ins
retf
xor
pop
xchg
add
pop
and
inc
add
daa
mov
mov
add
dec
and
and
jo
(bad)
out
and
dec
jne
aas
or
add
mov
mov
jecxz
push
jae
inc
ins
adc
(bad)
cmp
imul
pop
dec
jg
xchg
sbb
pusha
dec
adc
jmp
push
nop
outs
inc
cld
push
dec
pusha
jp
add
push
in
add
fsubr
test
pusha
adc
je
sbb
aas
rol
push
or
mov
aaa
cwde
or
mov
or
sub
iret
ins
cmp
cmps
add
fsubr
dec
mov
xor
pop
fldcw
xor
cs
add
sti
add
jmp
pusha
inc
cmps
xchg
or
add
js
push
or
rcl
or
mov
loope
or
add
fs
push
or
addr16
mov
adc
adc
cmp
fcomp
push
jnp
jg
fild
or
rcl
xor
sbb
pop
and
jns
adc
mov
rcr
imul
sbb
pop
inc
rcr
inc
xor
dec
xchg
mov
loopne
outs
pop
cwde
setle
adc
aam
pop
xor
xlat
pop
sub
mov
or
into
in
ss
pop
dec
rsqrtps
mov
add
jno
pop
xchg
fild
inc
rcr
int
enter
pop
or
push
jo
add
ja
xor
add
xchg
dec
inc
mov
pop
inc
inc
daa
or
cld
xchg
les
outs
pop
ror
(bad)
or
shl
adc
(bad)
clc
or
push
sbb
and
ror
jae
pop
cwde
setle
inc
inc
aaa
sub
inc
or
jo
push
(bad)
push
cmovo
mov
pop
pusha
pcmpgtd
pop
dec
xchg
mov
pop
cmp
mov
jns
adc
(bad)
add
inc
jo
push
inc
push
xchg
push
xlat
out
cmp
add
aam
cld
pop
loopne
and
(bad)
and
pop
pushf
loope
inc
inc
push
gs
adc
sub
mov
adc
pop
xchg
setno
xor
add
push
adc
adc
cmp
jg
into
in
ss
push
cvtps2pd
mov
add
inc
jnp
lods
or
pop
fild
xor
cs
adc
pop
add
jbe
movlps
inc
mov
jo
mov
xor
push
jno
adc
xor
sbb
mov
pop
add
push
inc
xchg
popf
cmp
mov
adc
inc
sub
add
or
je
hlt
pop
or
inc
aam
xchg
lahf
sar
sub
xchg
mov
or
push
inc
out
pop
xchg
pop
xor
fistp
in
and
call
dec
inc
mov
jne
adc
inc
push
or
adc
sub
sbb
mov
push
aad
mov
mov
or
cmp
add
or
sbb
and
out
cmp
sbb
push
push
inc
ret
inc
jmp
shl
pop
sbb
iret
mov
pop
xchg
pop
add
out
sbb
enter
dec
pop
or
or
sahf
fsubr
pop
and
into
clc
push
mov
rcr
xchg
xor
cmp
scas
loope
pop
cs
mov
pop
ret
sbb
aam
mov
pop
inc
aam
pop
mov
add
je
add
sub
sbb
sbb
sbb
shl
jmp
ror
sub
cmp
cmp
mov
xor
add
xor
imul
inc
and
aas
sub
sub
movs
pop
sub
and
iret
mov
sbb
sar
ins
dec
push
add
pusha
and
lock
mov
mov
inc
ja
push
stc
mov
mov
int3
jne
and
movs
jb
mov
dec
mov
mov
push
mov
jbe
ins
sub
jl
cmp
adc
or
jbe
push
les
dec
arpl
push
imul
repnz
imul
call
and
add
and
or
xchg
iret
xchg
jl
mov
and
ins
fnsetpm(287
stc
aad
daa
cmp
push
jo
stos
add
or
sub
call
call
js
(bad)
in
push
rcl
xchg
adc
mov
aad
mov
aad
fst
mov
add
sub
ins
sti
push
imul
aad
call
call
pop
add
in
adc
mov
shl
iret
rcr
das
enter
or
xor
(bad)
test
in
ds
in
loope
mov
pusha
ss
repz
sbb
lahf
adc
xor
xchg
call
iret
and
popa
add
in
cdq
unpcklps
mov
cmp
inc
mov
or
ret
push
and
and
js
call
cmps
sbb
in
(bad)
jbe
mov
cmp
jge
xor
xor
dec
jne
aam
mov
or
mov
mov
test
ret
sbb
push
xor
inc
ja
mov
xchg
inc
mov
mov
xchg
nop
push
sbb
pop
int
test
adc
add
(bad)
push
sub
cmp
mov
mov
loop
or
jnp
push
test
add
or
and
arpl
and
outs
and
sbb
pusha
add
inc
imul
cmp
xchg
push
sbb
pop
or
xlat
inc
add
rol
xchg
and
adc
dec
pop
add
repz
add
aad
lea
mov
and
call
sub
pop
mov
pop
pop
and
mov
nop
mov
inc
mov
push
leave
jns
arpl
and
adc
push
pushf
and
xor
cdq
push
pusha
enter
xor
push
push
sbb
div
or
cmps
faddp
dec
jmp
push
popa
cmp
pop
xchg
cmp
or
pop
mov
pop
retf
sub
push
or
xchg
and
mov
shl
sti
push
cmovo
loope
nop
popa
sub
mov
shl
mov
stos
loopne
ud2
sahf
cmp
je
test
jnp
adc
fbld
xor
cmp
and
jne
stos
dec
sbb
mov
or
push
push
mov
dec
hlt
dec
cmp
push
mov
fmul
dec
xchg
bswap
jb
prefetch
or
pop
dec
cmp
cwde
aaa
dec
cmp
push
retf
pop
sbb
fiadd
inc
(bad)
jecxz
stos
test
jg
in
sub
mov
dec
(bad)
mov
add
and
cmp
mov
mov
aas
test
aas
fisub
mov
dec
sbb
jnp
scas
arpl
mov
ins
sbb
and
loope
pusha
aas
imul
sbb
sti
adc
or
adc
sub
inc
xchg
and
mov
scas
mov
sub
push
test
pop
imul
or
inc
icebp
push
int3
add
aam
cmp
push
test
scas
adc
or
clc
pop
cmps
fild
(bad)
jle
cmp
or
lahf
cmc
jle
dec
or
or
or
mov
cmp
gs
fmul
arpl
ins
sbb
xor
xchg
inc
add
popa
push
add
add
shl
fwait
and
add
adc
adc
fs
xor
xchg
add
cmp
cmp
pop
mov
push
shl
cdq
push
pop
clc
push
sub
cmps
lds
sar
ror
add
inc
push
mov
mov
not
ror
ds
retf
ror
add
xor
push
push
push
add
or
xor
pop
mov
inc
scas
sbb
fdiv
cld
test
test
or
cmps
cmp
(bad)
cdq
push
pusha
sti
mov
jecxz
or
ins
mul
inc
jl
push
retf
and
mov
lods
xor
xchg
add
xchg
aad
mov
mov
ret
xchg
and
ror
jmp
xchg
int3
cmps
jmp
pusha
sbb
cmp
arpl
pop
jmp
(bad)
ja
popa
or
inc
cmp
ins
mov
and
push
mov
or
dec
cmps
sub
jp
mov
xor
rcl
add
sahf
scas
daa
aaa
rcr
dec
dec
je
add
jmp
mov
cwde
rcl
ror
mov
sbb
mov
addr16
jle
mov
sbb
ds
jge
sbb
rcl
outs
arpl
push
cmp
jno
and
jb
inc
std
inc
cmps
sub
mov
or
daa
in
xchg
sub
sahf
loop
rcr
xchg
sub
dec
jne
mov
int3
jb
scas
nop
test
lods
in
mov
outs
dec
push
and
sub
sar
nop
das
mov
sub
add
adc
dec
inc
scas
aaa
or
add
push
stc
pop
cld
xor
inc
pop
mov
or
ds
adc
rcl
jae
push
in
lahf
hlt
addr16
or
xor
mov
add
pusha
or
add
gs
out
jne
shl
stos
dec
cs
fmul
pop
fldcw
js
cmp
jge
mov
inc
jg
outs
js
pop
(bad)
jmp
or
add
or
ins
int
(bad)
jmp
add
dec
mov
aaa
jp
xchg
pop
mov
adc
popa
dec
inc
loopne
test
xlat
pop
add
sbb
adc
push
ja
jne
jg
ret
aas
sub
pusha
xor
mov
inc
push
mov
loope
mov
push
das
adc
push
mov
or
pop
xchg
sbb
mov
mov
ss
and
mov
or
sahf
in
mov
cwde
ins
sub
jge
sbb
push
or
shl
push
clc
sbb
and
pushf
mov
mov
mov
fwait
push
rol
and
sbb
dec
das
inc
xor
dec
stos
adc
pop
xchg
into
fld
mov
dec
js
(bad)
dec
(bad)
ror
and
push
cmp
inc
jb
add
rcl
movs
mov
sbb
jae
loop
xchg
sub
inc
and
or
xchg
enter
sub
push
push
push
sbb
sbb
add
push
mov
inc
adc
retf
mov
dec
and
pop
add
dec
pop
pop
sbb
mov
je
xlat
imul
jmp
and
jns
fs
ja
adc
adc
loopne
mov
movs
add
add
movs
or
inc
adc
cs
cmp
jne
mov
bnd
fistp
jbe
pop
and
and
jge
add
and
add
sbb
je
and
ds
imul
or
fs
pop
ret
add
push
rol
add
mov
pop
push
gs
lea
or
adc
add
fnsave
outs
mov
or
imul
out
cmp
mov
adc
in
adc
xor
inc
push
xor
js
pusha
loopne
int3
test
adc
jno
sbb
test
inc
push
inc
mov
in
imul
push
fdivr
jmp
sub
mov
inc
repz
mov
mov
lea
dec
xchg
or
or
pop
pop
xchg
inc
or
pop
cwde
and
mov
pop
sbb
pop
add
(bad)
inc
sbb
push
and
inc
and
mov
shl
ret
rcr
lods
mov
push
adc
mov
sbb
xchg
adc
adc
pop
pop
mov
into
add
div
xlat
jp
aam
mov
mov
xor
jne
sbb
add
push
add
fisttp
ret
out
sbb
add
pop
dec
lock
push
scas
adc
xchg
daa
data16
str
sub
sbb
jmp
push
add
and
movs
cmp
push
cmc
icebp
fld
(bad)
mov
mov
xor
adc
repz
or
lea
lods
pop
test
cs
es
lahf
mov
aas
mov
aaa
retf
xlat
mov
jl
cmp
dec
ret
or
pop
addr16
xchg
les
pop
inc
push
mov
pop
jg
push
(bad)
inc
rol
inc
mov
mov
mov
fnstenv
mov
rol
call
sbb
movs
add
lds
jge
dec
lea
outs
add
aam
ret
iret
push
xor
nop
cmp
mov
xchg
add
add
loope
add
lahf
add
cmp
sbb
sub
dec
sbb
pop
ret
xchg
retf
cmp
jne
adc
ins
jge
inc
or
add
mov
push
or
pop
mov
or
sub
inc
mov
fnsave
add
sbb
inc
inc
inc
clc
jae
sti
stos
sub
or
stc
adc
add
mov
push
pop
pop
lock
daa
pop
sbb
daa
sbb
addr16
lods
dec
xchg
ret
jne
mov
sub
(bad)
sbb
xchg
cmp
xor
add
cmp
cmc
outs
xor
cmps
adc
popa
sbb
stos
xchg
fbld
ja
inc
jo
ss
sahf
add
test
or
(bad)
cmp
cmp
adc
or
mov
jbe
pop
jmp
cmp
gs
cmp
jl
js
adc
sub
mov
or
push
retf
cli
push
sub
loopne
xor
aaa
fadd
movs
and
daa
cmp
jno
clc
pop
outs
cmp
xor
push
lods
loop
sub
test
push
lock
xor
jge
push
cmp
jne
and
cmp
add
adc
vmwrite
or
adc
adc
enter
adc
adc
in
dec
push
inc
add
add
add
mov
das
adc
sbb
adc
test
test
aad
mov
sub
jecxz
daa
and
fist
jb
sub
sub
sub
sub
lahf
xor
cmp
xor
cmp
cmp
cmp
cmp
add
inc
add
test
push
sbb
adc
hlt
lds
mov
or
dec
rol
mov
mov
mov
adc
sub
add
sub
push
daa
mov
xlat
cmps
not
jmp
sub
adc
cmp
lahf
mov
push
push
push
mov
mov
mov
cmp
rcl
xchg
adc
popf
mov
std
xchg
mov
sbb
daa
cmp
and
rol
jge
sbb
add
xor
fs
or
or
sbb
xor
add
jo
mov
pop
and
sub
xchg
jmp
cmp
lods
or
sbb
stos
je
inc
push
mov
add
lock
and
sbb
push
mov
xor
inc
or
push
test
jne
dec
pop
jns
or
adc
sbb
nop
dec
in
xchg
jle
cmps
iret
cmp
pop
mov
inc
test
jne
arpl
dec
push
xlat
mov
fdivr
aam
or
cmp
and
add
add
jo
add
es
xor
mov
xchg
pushf
jl
mov
add
out
and
ret
pop
push
lods
and
vmovd
rol
gs
jg
push
or
adc
push
add
cs
mov
das
xor
call
std
mov
mov
jmp
cld
adc
rol
jo
jmp
das
test
or
xlat
sbb
int3
ins
and
add
inc
inc
or
clc
data16
jl
pusha
je
or
and
pop
je
push
mov
pusha
arpl
add
inc
push
in
mov
pop
clc
cmps
test
sub
loopne
aas
mov
xor
popa
jl
and
xor
sub
mov
(bad)
xchg
cld
push
adc
enter
add
sbb
mov
mov
adc
popf
add
sbb
mov
ins
and
push
sub
mov
js
call
add
push
push
dec
sub
sbb
cs
mov
jmp
dec
sub
in
and
cmp
dec
adc
inc
loopne
xchg
hlt
adc
cmp
inc
xor
dec
inc
xor
dec
xor
movs
sti
(bad)
fdivr
inc
inc
push
cmp
dec
cmp
popa
dec
push
or
(bad)
sub
xor
inc
inc
dec
inc
push
inc
test
ins
std
xchg
fbld
je
test
je
mov
mov
sbb
xchg
inc
mov
je
add
sub
adc
add
push
push
push
loop
rcr
add
rol
inc
dec
arpl
test
inc
dec
popa
jmp
leave
cmp
mov
test
xor
push
add
aaa
clc
pop
mov
je
dec
je
or
pop
or
add
adc
jne
mov
les
arpl
fsubr
fadd
push
or
jnp
fmul
adc
push
jecxz
jbe
push
outs
popa
(bad)
push
jbe
imul
clc
popf
jmp
push
(bad)
loopne
mov
push
enter
outs
call
arpl
mov
xor
ret
pop
fbld
jg
mov
out
inc
pushf
mov
test
and
jo
in
add
and
xor
xchg
ror
and
add
adc
std
push
in
mul
mov
shl
adc
add
adc
fisttp
pop
add
dec
aaa
mov
add
dec
pop
mov
int3
push
mov
or
test
sbb
push
inc
and
ss
xor
icebp
call
sahf
loopne
mov
push
ror
jmp
retf
push
jp
bound
cmp
jg
outs
mov
mov
test
in
add
test
push
jecxz
inc
pop
xchg
mov
adc
xchg
popa
pusha
and
mov
push
mov
push
cmp
mov
add
cmp
movs
or
lods
aas
push
repnz
sahf
int3
sbb
push
pop
mov
rcl
sahf
xor
and
pop
mov
in
add
inc
fs
mov
jae
mov
add
je
dec
es
push
call
ret
fld
adc
cmp
loopne
and
in
dec
sub
push
aaa
loopne
dec
cwde
xchg
cdq
or
add
in
jo
pop
imul
inc
jns
rcl
mov
or
mov
cmp
xchg
or
dec
mov
bound
nop
xor
push
mov
add
bound
cmp
add
mov
add
mov
mov
lahf
adc
push
xchg
mov
mov
sbb
icebp
shl
in
push
pop
jg
and
pop
add
ret
mov
icebp
je
cmp
xchg
test
fs
sbb
and
inc
outs
test
cmp
and
sbb
jl
lea
test
and
mov
les
push
inc
sub
bound
or
inc
sub
push
pusha
and
push
push
leavew
mov
xchg
jmp
fbld
cmp
je
jmp
push
or
je
push
pop
mov
pop
adc
xor
and
pop
xor
ret
mov
enter
add
add
sub
cmp
jl
jmp
jle
retf
ret
mov
or
jbe
dec
push
js
xchg
rcl
daa
loopne
and
jno
mov
into
and
mov
dec
mov
pop
sbb
jmp
dec
cmp
es
movs
adc
add
(bad)
or
leave
mov
frstor
add
ja
mov
jmp
push
mov
and
(bad)
fmul
gs
fst
adc
mov
xor
fucomip
retf
jne
jno
push
push
mov
add
inc
inc
les
leave
fld
cmp
push
push
mov
hlt
mov
pop
(bad)
jmp
push
clc
(bad)
nop
es
pop
mov
mov
rcl
or
pop
test
dec
pusha
pop
pop
push
sub
mov
js
sub
daa
fwait
adc
in
and
and
and
add
movs
ins
adc
iret
dec
add
test
mov
dec
push
cmp
pop
push
arpl
mov
and
test
adc
mov
bound
add
dec
dec
pop
mov
adc
inc
jl
scas
jb
push
movzx
inc
test
inc
lods
enter
cmp
xor
add
loope
xor
dec
jne
add
sbb
adc
pop
xchg
inc
adc
stos
push
jl
ret
iret
cmp
add
jle
sbb
mov
lds
nop
adc
and
cwde
mov
and
push
xchg
shl
test
jbe
test
push
jb
mov
inc
fmul
inc
jg
loope
inc
dec
stos
dec
push
leave
popa
sbb
ret
imul
and
dec
fmul
js
dec
jmp
in
xor
add
pmulhuw
cmp
out
mov
loopne
push
enter
adc
jns
enter
jo
mov
out
and
das
in
ja
jb
sbb
mov
push
push
enter
sub
imul
imul
sub
inc
pop
jl
and
nop
push
mov
rol
nop
push
mov
push
xor
not
or
cmps
rcr
inc
push
pop
add
inc
inc
push
cmp
pop
push
hlt
jl
mov
push
inc
inc
or
jno
popf
inc
push
inc
or
and
xchg
bound
sub
inc
jo
ret
or
pop
cmp
getsec
nop
mov
push
jo
sbb
ja
sub
mov
adc
and
push
cmp
cmp
add
fadd
or
mov
sbb
sub
pusha
push
mov
xor
adc
add
in
cmp
inc
adc
inc
loope
dec
cmc
mov
push
pusha
jmp
sbb
ret
or
add
(bad)
enter
repz
nop
sahf
ficom
mov
add
and
mov
je
outs
and
mov
cmps
mov
push
xchg
fild
imul
sub
adc
add
adc
mov
add
or
pop
(bad)
leave
js
out
sub
dec
mov
push
mov
in
rol
in
sbb
mov
or
and
dec
push
adc
push
stc
push
adc
ins
push
mov
push
sbb
jae
sbb
addr16
repnz
cwde
push
test
inc
dec
scas
scas
cmp
sub
loopne
cli
and
jnp
add
sub
add
call
popf
cmp
imul
ja
aam
mov
bound
xor
adc
repnz
or
or
xor
mov
push
aaa
adc
add
mov
bound
push
or
dec
sub
add
mov
test
lea
or
and
push
call
dec
and
sub
call
pop
fsubr
idiv
movzx
adc
mov
adc
mov
not
std
imul
pop
and
fwait
push
xor
movs
sbb
mov
adc
or
cmp
xchg
out
or
sbb
xor
or
sub
leave
push
fsubr
fwait
mov
push
push
cmp
push
add
push
push
cmps
fst
push
mov
mov
rol
cmps
or
dec
daa
pop
and
cmp
test
adc
inc
out
sti
jmp
sti
sbb
or
xchg
aam
sti
scas
adc
or
das
jns
xchg
and
xor
push
sti
out
and
pop
cmp
jmp
inc
sub
push
cld
fist
popf
ja
adc
push
scas
adc
add
shr
mov
nop
push
leave
mov
sub
add
in
push
pop
pop
sbb
mov
sbb
inc
ret
test
mov
fcomp
mov
sbb
loopne
les
popf
pop
fcomp
mov
xchg
or
push
dec
sub
jb
push
xchg
(bad)
xlat
leave
enter
cld
or
ror
add
xchg
iret
xchg
mov
sub
and
or
fsub
mov
mov
mov
add
push
adc
adc
or
add
mov
add
leave
xor
dec
gs
xchg
add
aad
pop
push
add
xchg
ror
movs
or
fst
sub
add
adc
adc
push
call
jne
fisttp
dec
mov
inc
popa
mov
dec
cmp
add
adc
sub
sub
or
adc
inc
leave
adc
add
push
enter
mov
sbb
leave
add
sti
imul
mov
ss
rcr
out
pop
popf
test
outs
cmps
into
out
jge
and
add
dec
inc
pop
lock
jo
xchg
daa
or
push
pop
dec
movlps
js
arpl
pop
(bad)
jo
pusha
out
xchg
pop
pop
inc
pop
lock
add
push
sbb
inc
sub
das
adc
andps
pop
mov
pusha
adc
aad
out
outs
adc
push
pop
mov
inc
neg
setb
adc
js
add
xchg
cmp
pop
add
test
cs
dec
sub
cmp
push
push
inc
xor
push
in
pop
mov
pop
lea
hlt
push
pop
add
clc
mov
mov
pusha
mov
add
mov
das
sub
loope
inc
sub
enter
xchg
or
in
and
rcl
sbb
mov
push
js
pusha
pusha
and
(bad)
out
pusha
pusha
bound
and
fwait
dec
loopne
lahf
cmp
sub
jbe
(bad)
movs
pop
xchg
popa
jnp
mov
and
jge
int
fadd
push
add
or
(bad)
xlat
cmp
repnz
mov
push
add
jl
sbb
cmc
cmps
popa
pusha
cmp
in
jp
es
in
sub
mov
jecxz
jge
or
in
lds
jp
push
add
rol
sbb
mov
push
push
sbb
lock
sbb
pop
mov
add
test
stc
cli
in
adc
ret
pop
out
add
cwde
adc
add
or
test
mov
add
pop
rol
or
sub
or
ret
or
or
loop
out
xchg
ds
adc
(bad)
or
leave
mov
call
xchg
mov
das
icebp
sub
lods
or
add
rol
adc
arpl
or
push
aad
popf
dec
aaa
and
hlt
mov
cmp
xor
cmc
lds
rcr
and
scas
push
pushf
cmp
cld
mov
fs
inc
call
or
fs
mov
sbb
mov
call
jl
adc
mov
mov
inc
nop
dec
add
cmp
jbe
sbb
addr16
adc
dec
inc
loopne
dec
or
mov
add
push
(bad)
cmp
sbb
jne
sub
pop
pop
imul
ins
pop
(bad)
push
movs
ins
sbb
daa
fucomip
sbb
jae
gs
xchg
jns
push
(bad)
and
test
mov
sbb
ins
cmp
and
pop
sbb
hlt
bound
clc
add
pusha
pop
sbb
xor
mov
inc
xlat
inc
bound
sub
xor
xor
push
pop
sbb
adc
or
push
dec
and
jno
les
call
cli
push
or
sbb
or
pop
and
inc
shl
push
sub
adc
and
inc
inc
test
add
sub
adc
movs
or
adc
jmp
push
cmp
test
adc
mov
add
data16
fcmovb
sub
addr16
lock
repz
jg
sbb
gs
loope
mov
push
outs
xchg
inc
push
inc
shl
push
loopne
cs
adc
or
push
inc
push
je
mov
addr16
pop
xor
jecxz
and
xor
(bad)
aas
inc
mov
das
sti
cmp
sysret
loope
mov
data16
sub
in
xor
pop
sbb
mov
ds
mov
push
movs
popa
inc
nop
aaa
mov
outs
cmps
jo
pop
xor
mov
movs
daa
movs
xchg
aad
addr16
adc
mov
mov
sbb
inc
and
lea
adc
mov
push
sbb
aaa
mov
lods
and
or
adc
cwde
(bad)
pop
sub
adc
add
rol
adc
push
sar
mov
cmps
pop
mov
or
dec
push
adc
shl
add
push
nop
pushw
add
add
or
imul
fstp
or
jl
adc
(bad)
push
fprem
neg
push
lds
(bad)
and
xor
add
pop
or
add
or
push
(bad)
(bad)
xor
and
cmp
lds
inc
add
pop
xor
aam
ret
and
jns
mov
xor
mov
clc
xor
in
mov
lds
outs
ret
add
xor
adc
fwait
and
adc
dec
div
dec
mov
and
or
test
add
int3
add
(bad)
and
adc
inc
lds
sbb
mov
or
xor
or
into
xchg
aad
ror
or
push
popa
push
add
xor
add
fadd
cmp
xor
or
mov
xor
add
out
ror
and
add
cdq
pop
push
xor
fidiv
repnz
xor
in
iret
mov
sub
or
inc
dec
adc
mov
in
cmp
inc
mov
push
sbb
mov
jae
add
push
push
pop
or
retf
inc
xchg
cli
fwait
cmp
jl
or
fstp
retf
push
sahf
or
inc
pop
je
sti
pop
icebp
jmp
adc
push
inc
and
dec
inc
inc
adc
cmp
mov
sbb
push
js
jae
dec
int
sbb
cmp
stos
mov
test
jno
lock
aam
clc
cmp
outs
mov
jg
mov
sbb
inc
sbb
repz
add
fidiv
cmp
test
mov
clc
adc
cmp
add
(bad)
adc
loopne
push
mov
mov
xchg
std
mov
daa
shrd
shr
push
aad
or
dec
loopne
adc
push
imul
lds
add
fs
in
sub
fs
push
lods
lahf
or
scas
and
cmp
test
adc
cs
sbb
jne
ror
inc
inc
add
mov
shl
xchg
je
mov
xlat
push
hlt
clc
add
add
(bad)
sub
imul
mov
add
in
ja
(bad)
adc
jnp
sar
mov
neg
adc
mov
pop
mov
(bad)
cmp
imul
adc
lods
imul
mov
mov
(bad)
cmp
div
mov
pop
cmp
idiv
shl
vunpckhps
(bad)
test
test
fiadd
out
(bad)
jnp
rol
test
cmp
or
(bad)
mov
popf
imul
(bad)
(bad)
test
mov
loopne
test
idiv
pop
mov
mov
neg
mov
mov
not
sti
pop
cwde
cld
mul
add
add
neg
sub
sub
or
mov
mov
not
loop
cmp
fdiv
pop
add
iret
push
cmp
sbb
fisub
or
cmp
jmp
cmp
inc
adc
ret
ror
ror
out
sub
sbb
xor
sub
mov
out
(bad)
mov
inc
out
mov
sub
mov
fmul
sbb
sbb
ror
(bad)
xchg
cwde
push
cmp
(bad)
ja
ret
xchg
test
jecxz
stos
or
lds
jo
cmp
xchg
dec
mov
arpl
adc
cmp
test
cmp
ins
neg
idiv
je
nop
js
pop
mov
adc
cmps
adc
push
test
(bad)
adc
test
aam
scas
in
add
dec
push
dec
dec
push
add
(bad)
mov
stc
mov
cmp
pop
jo
and
or
add
sbb
ret
sub
ret
cmp
aas
push
or
jbe
ror
mov
gs
lds
add
icebp
pop
call
push
mov
sub
icebp
or
movs
movs
cld
fcomi
pop
pop
jp
mov
shl
and
push
push
add
retf
loopne
out
jmp
shl
and
inc
add
add
ror
add
sub
jnp
add
call
or
push
jg
add
ret
xor
out
push
push
push
sub
jge
and
sbb
push
adc
mov
push
shl
and
pop
push
sub
adc
and
lea
movs
mov
outs
aam
inc
cmp
(bad)
or
test
ja
arpl
pop
add
ins
push
pop
dec
pusha
(bad)
fadd
and
pop
xor
pop
test
mov
pop
add
push
push
test
adc
enter
inc
cdq
lods
aas
hlt
(bad)
xor
dec
(bad)
pop
jo
jp
xchg
cmp
jae
test
sbb
es
dec
push
mov
inc
pop
jb
pop
add
xchg
rcl
adc
mov
mov
cmp
jge
in
cmp
adc
loopne
jg
pop
adc
shr
inc
sbb
jne
call
stos
test
mov
fist
pushf
hlt
pop
inc
fsub
push
gs
jecxz
jae
arpl
xor
jmp
lea
lea
mov
sbb
jge
add
sbb
add
push
or
ror
add
adc
rcr
jnp
xor
sbb
adc
pop
cld
mov
inc
adc
add
mov
jnp
mov
in
push
mov
and
jmp
dec
ret
and
stc
loopne
jo
inc
ret
rep
jnp
pop
or
out
test
xor
add
sub
or
pop
sbb
lea
retf
ss
jae
or
int3
mov
out
int3
push
enter
ret
sti
loopne
sar
out
enter
and
jb
clc
loopne
adc
cmc
ror
in
and
fwait
gs
add
inc
or
out
mov
push
adc
inc
adc
adc
sbb
push
inc
in
movaps
mov
fcmovne
mov
add
lock
adc
inc
or
adc
and
fwait
in
rol
cmp
sbb
sbb
cmp
xor
jmp
inc
hlt
jnp
push
cs
sbb
sub
jo
pop
or
add
(bad)
or
fiadd
cmps
hlt
pop
ins
and
push
aad
xchg
nop
sbb
js
inc
push
les
test
cmp
or
and
ficom
pushw
ja
push
sub
mov
pusha
and
push
or
fadd
cmp
sbb
lea
sbb
mov
push
aam
xor
loopne
jns
jl
sub
push
fcom
jo
xchg
test
mov
add
and
or
xchg
xchg
sub
cs
js
arpl
or
les
push
sbb
fldenv
or
or
adc
inc
je
or
or
adc
or
rol
sub
sbb
sbb
push
ror
adc
sub
hlt
sub
and
cmp
loopne
scas
lahf
sub
outs
out
mov
fcom
xor
xor
add
push
push
sub
ret
or
sbb
out
xchg
jp
sti
cld
mov
or
push
mov
cmp
repz
adc
push
mov
cmp
cmps
cmp
push
xchg
aaa
int
cmp
repz
mov
cmp
outs
xchg
out
sub
push
cs
addr16
jle
xor
xor
sbb
cmp
adc
sar
sbb
hlt
lock
in
inc
push
add
inc
and
xor
ss
aas
or
adc
mov
out
ror
fild
add
rcl
and
test
and
movs
out
or
add
push
shr
push
and
mov
add
jl
pop
ret
xor
push
add
adc
(bad)
mov
push
nop
lock
push
clc
ss
mov
add
es
or
inc
nop
sti
ret
push
inc
repz
and
jg
popa
fwait
inc
outs
ins
popa
imul
inc
push
jae
xor
inc
ret
loop
into
scas
cmp
rcr
dec
cs
mov
dec
loopne
add
rol
pop
xchg
aas
mov
jl
cmp
push
sub
push
pop
lds
aas
or
lds
sub
dec
gs
ins
imul
ret
pop
add
pop
inc
mov
sar
or
(bad)
fs
pop
mov
lds
or
sbb
bound
add
cmp
add
pop
mov
std
inc
sbb
sub
je
dec
je
js
or
pop
sbb
enter
sbb
dec
push
add
or
or
add
fcmovnb
outs
std
pop
xor
fidivr
add
adc
add
in
fiadd
lock
dec
add
das
sub
pop
xor
or
sub
imul
rol
loopne
adc
test
adc
jne
xchg
enter
pop
dec
pop
or
out
add
loopne
sub
push
push
adc
xchg
and
out
ret
mov
hlt
mov
jge
in
xor
jne
jbe
mov
shr
mov
xchg
mov
push
and
lods
add
xchg
inc
dec
popa
or
push
div
pop
push
cld
test
add
cwde
dec
dec
jmp
pop
pop
jl
sub
sbb
scas
(bad)
push
sar
jle
or
daa
adc
mov
push
test
aaa
or
outs
ffree
dec
sbb
imul
adc
pop
jl
mov
sbb
lea
les
test
arpl
and
sub
das
add
out
dec
mov
(bad)
mov
jmp
xchg
nop
cdq
xor
add
sbb
pop
movs
add
imul
sub
or
(bad)
loop
jbe
add
sbb
int3
ret
or
in
es
icebp
stos
xchg
push
push
dec
dec
inc
in
clc
jns
shr
adc
inc
inc
push
add
push
push
push
pushf
cmp
or
sub
arpl
fild
push
or
push
jo
pop
das
fnsave
ja
jb
and
fst
shl
je
ja
das
sbb
rcr
adc
mov
or
addr16
or
cmc
inc
aaa
or
xlat
sbb
shl
sub
add
push
add
cmp
inc
popa
jo
bound
imul
std
or
pop
cdq
movs
cmp
push
push
ja
push
inc
dec
inc
bndstx
pop
popa
sub
push
fidivr
jns
das
adc
and
ins
ins
cmps
adc
mov
lock
cdq
je
(bad)
sub
popa
or
enter
adc
pop
or
jnp
push
mov
jbe
nop
movs
xor
out
aam
lods
jb
xchg
(bad)
in
div
or
sbb
or
push
gs
pop
adc
or
arpl
mov
daa
add
mov
xor
push
mov
or
inc
push
mov
inc
push
inc
in
add
out
jb
retf
ror
inc
or
push
xor
or
jl
sbb
call
adc
push
dec
jecxz
inc
pop
inc
inc
push
push
dec
push
inc
mov
inc
push
inc
jle
and
sub
fisttp
add
inc
dec
and
push
fucomip
add
ja
(bad)
outs
jo
jp
inc
inc
inc
jmp
mov
or
inc
adc
mov
pop
rcr
inc
or
les
fild
xchg
and
add
sub
add
adc
and
call
jne
pusha
cmp
ret
push
jle
das
es
je
inc
js
imul
inc
lock
mov
push
mov
cmps
(bad)
jmp
fdivr
xchg
inc
inc
test
clc
jnp
pop
mov
jae
add
add
adc
xchg
dec
dec
dec
jns
add
inc
sbb
dec
ds
cmps
lahf
enter
pushf
and
ins
or
shl
or
mov
or
lahf
or
push
gs
or
in
mov
frstor
or
jmp
rcr
push
jo
nop
mov
out
add
nop
dec
add
or
in
pop
jo
pusha
movs
(bad)
pop
test
je
pop
mov
das
inc
pop
sbb
inc
inc
push
push
pop
ror
adc
add
loopne
sub
movs
add
cmp
pop
mov
pop
push
dec
outs
dec
or
dec
repnz
mov
mov
adc
int3
(bad)
pop
dec
mov
mov
push
pop
cwde
cmp
repz
mov
sbb
mov
mov
xor
jge
jg
xchg
and
test
sbb
add
loopne
pop
js
inc
popf
jo
push
xor
pop
loopne
push
inc
push
and
lock
mov
push
dec
dec
or
dec
das
sub
push
inc
pop
sti
lods
sub
(bad)
popf
add
sub
pop
mov
ins
inc
cmc
out
in
pop
or
(bad)
mov
iret
mov
xor
mov
aad
add
dec
inc
xlat
push
mov
pusha
ffreep
push
nop
add
orps
cmp
adc
sub
xlat
mov
push
jne
fcomip
adc
add
push
dec
push
mov
inc
dec
add
repz
push
sbb
aaa
mov
adc
rcl
mov
aas
add
add
lock
add
in
pop
popa
inc
push
push
inc
inc
int
xchg
mov
jo
mov
inc
adc
mov
mov
push
adc
xor
push
cwde
inc
inc
out
add
cmp
or
sbb
adc
sub
jo
imul
inc
mov
dec
mov
pusha
dec
clc
rcr
ja
xor
jb
mov
or
mov
daa
push
push
rol
inc
xchg
and
fbld
lds
stc
sbb
ficomp
dec
pop
sbb
sub
add
leave
xlat
mov
add
pop
sbb
add
dec
jne
inc
jne
mov
inc
cmovns
pushf
in
pop
arpl
inc
ins
jno
xchg
pop
cmp
fs
xchg
pusha
ins
mov
sbb
xchg
retf
push
add
(bad)
push
sbb
sahf
xchg
sbb
inc
jns
xor
mov
dec
mov
xor
in
pop
push
and
xchg
mov
adc
inc
adc
push
mov
ret
jle
pusha
inc
xor
mov
clc
test
mov
mov
adc
outs
mov
inc
pop
push
call
add
cmp
mov
jge
adc
mov
mov
inc
gs
gs
fadd
jnp
jo
adc
jnp
xchg
loope
inc
sub
pop
inc
xor
cmps
aas
enter
mov
add
or
test
loopne
or
xor
push
inc
pop
sbb
in
sbb
cmp
jo
in
or
cmp
lock
jmp
xor
cmp
jne
inc
cmps
lock
dec
dec
sbb
in
xor
dec
adc
loopne
add
outs
jb
je
add
dec
ins
jo
icebp
push
fcomp
dec
pop
xchg
sar
xor
inc
sysret
xchg
jbe
in
ret
mov
and
mov
add
dec
push
inc
jns
mov
xor
gs
lods
test
xchg
icebp
neg
punpcklbw
jbe
dec
js
enter
xchg
push
jno
inc
test
call
xchg
and
lock
xchg
rcr
and
in
cwde
addr16
ret
dec
dec
outs
pusha
sbb
and
mov
data16
jbe
push
cmp
outs
mov
mov
inc
jns
and
nop
ins
mov
ret
or
movs
mov
xchg
pop
jne
stos
add
jl
pop
dec
inc
add
cwde
iret
add
in
ss
pop
enter
or
jbe
xchg
pusha
iret
rcr
sub
popa
inc
les
fild
cmp
cmp
mov
cdq
xchg
daa
icebp
das
pop
push
adc
inc
fadd
cmps
sbb
mov
data16
pop
das
int
repz
xor
js
pop
jle
xchg
or
(bad)
pusha
loop
das
movs
inc
dec
dec
aaa
shr
pop
leave
es
sahf
inc
movs
inc
retf
push
and
fisttp
push
push
movs
xchg
in
popa
retf
xor
inc
xchg
mov
xor
cmp
cmp
or
test
rcl
mov
or
pop
dec
dec
daa
xchg
adc
lea
dec
sbb
pop
ret
mov
sbb
add
push
call
lds
or
test
fwait
pop
xor
pusha
daa
fsubr
sbb
or
out
push
push
xchg
cs
or
retf
mov
ss
ins
or
gs
jmp
cwde
mov
jnp
pushf
pusha
lea
mov
test
dec
jg
popf
mov
pop
mov
call
sar
mov
outs
fst
mov
and
js
sahf
mov
das
inc
popf
pop
lock
pusha
fwait
xlat
loopne
pusha
add
cmps
les
je
(bad)
addr16
popf
test
pop
ret
aaa
lea
cmp
xor
mov
mov
enter
daa
inc
cmp
inc
shl
xchg
push
sahf
jo
xchg
or
test
ja
pushf
outs
outs
sahf
imul
cmp
adc
pop
leave
stos
add
cwde
sahf
inc
imul
mov
push
or
pop
fiadd
adc
push
jae
icebp
ja
sbb
arpl
sub
push
mov
mov
pop
pop
ret
outs
add
xchg
daa
mov
push
nop
imul
adc
adc
mov
push
mov
pop
inc
sub
sub
pop
data16
pop
jl
add
inc
ret
xor
inc
jecxz
sbb
repz
jl
push
adc
sti
dec
mov
daa
mov
mov
ds
test
outs
lods
mov
in
sar
mov
mov
mov
mov
lahf
dec
fwait
inc
inc
add
and
xlat
adc
mov
rol
sub
adc
pusha
inc
push
sub
add
sub
jge
lock
dec
sbb
mov
mov
inc
push
(bad)
mov
scas
xor
daa
cmps
sub
shr
adc
fmul
adc
dec
xlat
pusha
test
xor
add
xor
inc
jecxz
xor
popa
out
xor
dec
imul
mov
aaa
xor
cmp
jb
and
popa
aad
(bad)
aaa
pop
jne
nop
and
lods
mov
pop
push
mov
cmps
mov
das
fisub
adc
pusha
pop
loopne
push
cmp
push
add
sub
push
add
scas
lea
or
sub
sub
xchg
jmp
lahf
adc
dec
movs
add
sbb
retf
js
push
push
jo
retf
cmp
mov
mov
xor
xchg
mov
xchg
(bad)
dec
push
cmp
(bad)
int
fnop
les
or
xchg
inc
mov
ror
xchg
movs
rcl
adc
or
or
xchg
mov
sbb
push
jmp
cmps
das
aas
push
inc
or
cmps
(bad)
adc
shl
shl
mov
or
and
add
mov
add
cmp
das
xor
pop
adc
or
sub
icebp
and
rcr
loope
add
mov
sbb
aad
adc
in
mov
inc
add
or
sbb
and
sbb
rol
or
add
popa
shr
pop
sti
repz
fwait
mov
push
pop
cmps
inc
jo
lahf
ja
in
push
aad
jmp
pop
pusha
movs
jno
push
adc
jl
pusha
es
add
ins
inc
test
cmpxchg
jbe
dec
out
add
adc
jnp
push
inc
or
adc
add
or
and
repnz
push
cmovne
add
enter
push
ins
mov
test
daa
test
push
rcr
pop
and
int
add
adc
pop
inc
xchg
cmp
fs
in
ret
stos
sub
mov
or
lahf
shr
mov
inc
cmps
dec
lods
rol
cwde
sahf
inc
out
loopne
sbb
popa
in
xor
add
adc
cmp
cdq
popf
std
add
mov
out
movs
lea
add
fdivr
or
push
adc
nop
test
sar
xor
stos
xchg
mov
mov
in
mov
dec
enter
or
add
inc
bound
push
scas
mov
je
pop
inc
push
imul
xor
and
push
dec
in
cmp
mov
mov
lods
retf
mov
or
pop
pop
lea
test
mov
fs
mov
mov
shr
lods
adc
lahf
mov
pusha
pop
(bad)
push
leave
(bad)
dec
jl
lahf
mov
sbb
rcl
add
daa
and
dec
sbb
outs
shl
setne
icebp
daa
icebp
movs
rcr
lods
xor
xchg
lahf
(bad)
int
addr16
inc
mov
or
and
dec
dec
aam
aaa
sbb
das
lods
cwde
retf
adc
adc
mov
or
imul
mov
iret
pop
and
mov
test
cmps
lds
lods
(bad)
out
call
dec
and
inc
mov
lock
fld
or
inc
cmc
or
std
idiv
cli
cmp
xchg
cli
sahf
out
mul
sbb
ret
lahf
out
fsubrp
cli
or
rol
and
inc
dec
pop
jl
out
push
xchg
test
es
add
ins
push
cmp
repz
ja
pop
push
pushw
je
nop
mov
mov
lods
ss
iret
repz
in
add
out
sbb
cmp
push
cmps
mov
repnz
pop
add
mov
jnp
or
bound
jo
out
sahf
jle
call
out
les
rol
loopne
cld
mov
or
mov
push
outs
out
sahf
xor
push
pop
test
dec
rcr
sbb
repz
jp
mov
xchg
movs
jns
idiv
push
fcomp
clc
push
push
fwait
data16
adc
enter
fiadd
movs
cmp
sbb
push
dec
or
xor
push
fs
in
inc
and
ins
movs
push
dec
and
mov
cmp
add
jb
mov
mov
mov
jns
add
sbb
push
enter
hlt
outs
mov
sbb
sbb
mov
cmp
jb
(bad)
sbb
jns
push
and
mov
cmp
ins
sbb
push
xor
and
push
mov
lods
jnp
cmp
and
or
fild
sbb
and
xchg
sbb
cmp
cmp
lds
push
pusha
arpl
not
and
cmp
inc
aaa
adc
push
mov
(bad)
add
cmp
imul
sbb
pusha
pop
cmp
mov
sbb
mov
xchg
xchg
xchg
shl
aam
mov
sbb
and
inc
xor
xchg
ror
xor
dec
sti
sub
mov
cmps
inc
xchg
pop
cmp
push
sub
mov
sbb
sbb
xor
in
adc
ror
fist
sbb
outs
fdivr
mov
jne
pop
cwde
aaa
sti
cmp
inc
jno
sub
push
hlt
retf
dec
inc
and
mul
and
aam
aam
xor
add
sub
sbb
push
jecxz
mov
clc
aas
sbb
sbb
xor
jge
add
xor
jne
inc
or
jo
clc
ror
daa
adc
mov
sub
adc
daa
adc
mov
lock
inc
fsub
add
loop
test
jge
pusha
les
cld
ret
cmp
js
ss
pop
push
or
out
push
inc
mov
mov
jae
pop
pushf
mov
add
test
sbb
nop
movs
sub
das
test
in
mov
mov
lea
pop
jle
fstp
mov
es
movs
sub
adc
out
and
add
cs
mov
loopne
call
scas
clc
inc
(bad)
xchg
add
lahf
in
sbb
add
add
sbb
add
pop
sub
or
pcmpeqd
xchg
push
push
mov
add
cli
fdivr
ror
push
outs
or
cmp
or
adc
outs
and
xlat
sub
cmp
lods
je
aas
push
or
and
xor
mov
sub
or
or
cmp
or
inc
(bad)
add
sbb
xchg
hlt
lock
add
mov
test
add
xchg
loopne
sbb
push
mov
cmp
push
ficomp
ja
aam
add
scas
xchg
push
mov
das
cmp
fisub
xor
inc
sti
dec
xchg
pop
push
push
pop
inc
addr16
xor
cmps
inc
add
hlt
push
cmp
lahf
cmp
pop
adc
jle
pop
je
push
mov
lock
ret
retf
inc
fs
cmp
pop
pop
(bad)
cwde
ins
dec
popa
daa
add
push
mov
inc
or
lock
mov
add
test
sub
inc
(bad)
in
mov
cmp
into
ret
add
xchg
rol
mov
repz
rol
push
pop
test
jo
adc
and
or
shl
inc
add
xchg
mov
push
and
xchg
cmp
inc
add
or
(bad)
ja
and
pusha
das
nop
mov
or
dec
xor
ja
daa
sbb
push
mov
aam
xor
push
nop
xor
xchg
scas
pop
pop
pop
or
pop
push
repz
mov
data16
add
adc
push
and
inc
add
in
push
dec
mov
mov
ins
xchg
push
lahf
fiadd
adc
ins
rol
inc
sub
inc
(bad)
add
mov
jo
loope
and
mov
mov
mov
mov
push
inc
xlat
push
jnp
aad
mov
cmp
aad
jae
cmp
(bad)
mov
inc
xchg
push
je
push
inc
xchg
out
cli
push
inc
cwde
push
pop
mov
or
sub
add
fs
adc
out
xchg
das
mov
add
dec
adc
dec
in
or
sub
push
jl
out
pop
adc
push
pushf
lods
mov
div
dec
adc
mov
xchg
or
mov
cmp
and
cdq
adc
rol
pop
inc
out
mul
inc
push
imul
and
xchg
add
jae
or
add
pop
outs
adc
mov
lea
add
aad
adc
inc
mov
push
(bad)
jecxz
or
neg
adc
adc
jnp
or
xchg
adc
add
call
inc
cmp
aam
ins
not
das
pop
mov
out
movs
add
dec
das
mov
mov
adc
leave
dec
in
es
js
loopne
add
outs
mov
cmp
adc
jne
lahf
adc
xchg
pop
and
inc
pop
(bad)
das
call
xchg
xchg
or
mov
hlt
popf
pop
add
cmp
and
mov
xchg
mov
mov
xor
add
movs
nop
sbb
popf
push
mov
push
cmp
setge
xor
std
dec
clc
inc
jmp
jp
jl
inc
repnz
cmp
ja
add
out
ds
and
test
dec
push
add
sub
ror
daa
or
sbb
data16
jmp
dec
or
pop
xor
mov
inc
adc
add
(bad)
push
push
int
aam
sbb
xor
mov
lods
mov
push
xor
or
pusha
std
scas
add
xchg
hlt
add
mov
mov
daa
push
pusha
and
push
add
enter
scas
lahf
sub
dec
push
test
jg
test
sbb
cmp
sbb
pop
jb
adc
pop
push
loopne
bswap
sbb
adc
pop
sar
sbb
add
push
cmp
push
mov
(bad)
and
mov
ret
dec
(bad)
mov
mov
inc
add
push
mov
push
aaa
pop
pop
adc
add
xchg
xor
and
mov
aas
js
xor
sub
ja
or
cmp
inc
sti
add
add
es
mov
mov
add
test
call
std
test
cmp
test
push
les
pop
jmp
add
scas
cmps
je
mov
xchg
call
movs
enter
jl
and
push
xor
adc
sbb
fistp
cld
idiv
sub
jae
nop
add
mov
push
add
lods
jo
sbb
pop
das
and
out
cmps
ror
push
mov
call
iret
popa
and
pop
mov
adc
mov
jo
adc
bound
dec
out
call
add
je
inc
or
(bad)
pop
xor
and
jo
gs
in
and
dec
rcr
shl
fmul
sti
wrmsr
gs
into
inc
mov
mov
push
push
pop
cs
imul
sub
sub
retf
and
xor
sbb
push
cmp
mov
pop
xchg
daa
jns
pop
fiadd
loopne
daa
cwde
ja
ror
and
or
nop
dec
ret
loop
sbb
inc
retf
add
jo
pop
push
adc
or
mov
rcl
pop
pop
sbb
rol
(bad)
adc
popf
out
stos
push
mov
and
push
jmp
cmp
sbb
push
xor
mov
ffreep
loop
mov
rol
call
inc
or
cld
mov
getsec
inc
adc
pop
inc
popa
xchg
or
cwde
xchg
or
push
dec
loope
(bad)
(bad)
dec
adc
popa
popa
sub
sub
mov
cmovo
adc
inc
test
pop
mov
dec
or
sub
and
sbb
dec
adc
aas
dec
add
mov
dec
push
scas
and
es
or
sbb
dec
cs
(bad)
clc
or
mov
add
iret
xor
xlat
or
inc
out
stos
dec
xor
adc
adc
add
mov
gs
hlt
shl
cmps
scas
daa
or
and
xchg
fmulp
push
mov
outs
in
sbb
out
mov
mov
addr16
pusha
or
inc
inc
sub
dec
cmp
inc
adc
cmp
mov
addr16
fdivr
jmp
pop
mov
push
sbb
dec
leave
jge
mov
jge
(bad)
sub
outs
push
adc
push
or
dec
sahf
add
adc
(bad)
loop
or
pop
adc
add
(bad)
jno
leave
rcl
pusha
xlat
inc
or
mov
es
in
add
pop
add
dec
pop
out
lods
pop
pop
aas
mov
pop
test
add
popf
jecxz
aas
mov
or
clc
ret
add
pop
pop
pop
inc
(bad)
sahf
or
mov
sub
ds
xor
addr16
sbb
cmp
push
fs
jp
sar
xor
test
mov
call
pop
mov
call
call
jnp
mov
add
pop
enter
daa
inc
jge
mov
lea
cld
dec
dec
pusha
sub
adc
push
cmps
or
mov
add
or
dec
inc
js
cld
pop
stos
sbb
cs
cmp
shr
adc
mov
mov
xchg
push
push
data16
ins
mov
or
gs
clc
xchg
aam
inc
out
retf
fld
mov
popf
cmps
push
ret
loope
and
xor
inc
fild
xor
xor
mov
inc
and
popa
in
fwait
adc
int3
xchg
retf
fwait
jge
mov
inc
out
pmulhuw
and
push
fisttp
neg
or
xor
mov
mov
or
mov
mov
cdq
cli
fild
add
daa
daa
daa
sub
xor
mov
inc
push
dec
xor
adc
es
and
ins
gs
jle
cmps
mov
jo
jno
and
outs
pusha
cmps
xchg
sbb
and
xchg
mov
cmc
or
push
and
and
push
shl
aaa
or
sbb
mov
inc
imul
xor
inc
jg
mov
inc
je
inc
dec
jns
cmp
aaa
bound
lahf
sub
dec
loopne
jg
mov
int
into
dec
into
or
adc
loope
and
push
xor
ret
mov
sbb
enter
into
and
or
ror
loopne
jle
dec
(bad)
cld
add
popa
sub
push
int3
into
mov
test
jle
add
ja
fstp
dec
sub
mov
xor
daa
iret
inc
iret
pop
jmp
cs
sbb
sub
mov
test
cmp
and
adc
mov
pop
or
out
sub
xor
xor
cmp
inc
push
pop
or
popf
xor
pop
pop
outs
mov
or
shl
inc
mov
pushf
push
scas
xor
in
leave
and
lock
int3
add
clc
dec
mov
test
ja
xor
rcl
add
dec
inc
test
adc
shl
inc
inc
pusha
les
or
repnz
in
and
mov
cmps
mov
xchg
stos
mov
std
mov
idiv
mov
sub
lock
std
test
jae
jo
or
add
dec
mov
popf
cli
imul
jbe
cmp
sbb
sub
aam
and
(bad)
lods
or
cs
xor
sbb
js
cmps
and
js
jge
and
jle
into
and
test
iret
sar
sbb
adc
add
dec
int3
mov
add
inc
mov
dec
mov
ds
lock
push
pusha
sbb
ret
das
cmp
jno
sbb
xor
inc
sbb
push
jmp
push
jno
rcl
sbb
and
sub
xor
test
out
fld
inc
push
push
sub
fcomip
inc
lock
mov
cmp
push
mov
or
jo
lock
xchg
aad
retf
and
dec
inc
mov
inc
movs
jae
jmp
jp
sub
(bad)
test
push
inc
jl
xchg
retf
fdivrp
(bad)
dec
nop
mov
add
(bad)
mov
xchg
lods
pop
out
xlat
add
movs
mov
popa
mov
sub
xchg
add
and
fistp
mov
adc
ins
jmp
lods
mov
lds
outs
das
arpl
or
add
pop
dec
mov
ret
das
or
dec
jno
aas
push
(bad)
pop
xchg
xlat
cmp
inc
ret
add
pop
arpl
cli
jo
pop
push
jb
jo
aam
fwait
ret
inc
add
add
or
push
or
sub
adc
adc
in
(bad)
sbb
push
sar
jl
aaa
dec
mov
cmp
cmp
je
or
fnstcw
inc
inc
xor
push
mov
sub
cmp
pop
jae
clc
jnp
push
mov
mov
sbb
pop
pop
aaa
mov
test
stos
adc
movs
shl
sub
and
jo
xchg
adc
pop
addr16
lds
cmp
cmp
enter
ins
loopne
add
clc
sbb
fnstcw
mov
or
fiadd
cmp
push
xchg
(bad)
popf
ins
loopne
mov
mov
movs
int3
mov
and
mov
int
fsub
ret
repz
or
pop
and
stc
gs
mov
jmp
js
inc
shr
shl
fldcw
stos
add
xchg
xchg
test
inc
mov
pop
int3
shl
dec
cs
adc
dec
enter
call
jp
or
inc
in
cmp
mov
cmp
mov
jne
pushf
or
push
mov
ret
push
int
push
outs
jmp
mov
xor
cmp
xor
mov
fcomp
jg
add
je
rol
and
sbb
push
test
(bad)
pop
dec
repnz
mov
xor
rol
cmp
mov
sbb
addr16
push
dec
arpl
pop
dec
adc
mov
mov
fisttp
in
jne
mov
pop
arpl
pop
inc
add
retf
(bad)
rol
pop
and
fcomp
cmp
loope
push
(bad)
jmp
cli
add
xchg
push
movs
outs
inc
add
dec
push
and
aaa
add
inc
test
pop
mov
or
add
mov
outs
mov
and
cmp
scas
add
add
das
fisttp
jne
and
fs
push
add
aaa
xchg
add
mov
ins
lahf
loopne
aaa
sbb
push
add
or
adc
push
xlat
outs
or
pop
lahf
daa
mov
push
iret
comiss
(bad)
and
cld
inc
fld
and
pop
dec
add
push
push
push
xlat
pop
jmp
lahf
rcl
ficomp
sahf
inc
or
pop
pop
or
add
push
jb
enter
js
or
adc
cmps
ret
sti
shl
add
scas
test
punpckhbw
outs
dec
xchg
push
dec
pusha
(bad)
outs
out
jb
sub
outs
ins
adc
fadd
or
fidivr
dec
imul
sbb
nop
fst
gs
fild
pop
retf
aaa
dec
dec
test
nop
sub
popa
out
inc
mov
sbb
sub
xchg
push
outs
pushf
lods
sbb
test
adc
pop
fsub
jl
shr
jae
dec
ss
push
dec
dec
and
pop
mov
jo
add
xor
xor
add
stos
adc
neg
arpl
push
dec
iret
inc
add
or
push
adc
test
or
popa
push
shr
and
ins
add
push
rol
jmp
cmp
adc
cmp
pusha
test
call
mov
jp
pop
jmp
fcmovnb
adc
out
jecxz
or
push
movs
sbb
pop
inc
adc
lds
adc
ds
cmp
repnz
and
adc
inc
scas
loopne
xchg
pop
(bad)
inc
outs
or
addr16
adc
imul
sbb
test
jmp
gs
shr
add
faddp
shl
mov
push
dec
fs
adc
movs
sub
movs
jg
ret
pusha
out
mov
mov
fnstsw
fild
mov
jle
fild
adc
inc
mov
jns
nop
xor
movs
shl
fucomip
pop
int3
movs
inc
mov
rcl
and
jo
stos
jnp
xlat
push
ss
out
std
push
int3
dec
loope
cmp
in
hlt
xor
lgs
out
push
or
pop
int
ss
mov
test
mov
cwde
or
push
inc
mov
es
pusha
arpl
cwde
inc
add
ss
jae
lock
or
pop
cmp
sbb
cmp
mov
push
or
add
adc
mov
sbb
retf
jmp
push
loope
cmps
das
aas
push
inc
loope
add
iret
xchg
xchg
pusha
xor
adc
mov
loope
xchg
call
pop
pop
pop
out
adc
rcpps
mov
sbb
retf
and
retf
loop
sbb
mov
push
shl
popa
or
call
xor
scas
sbb
xor
dec
or
and
jg
mov
imul
out
vdivpd
vmwrite
fisubr
push
(bad)
mov
hlt
loopne
or
pop
sub
sbb
rep
dec
ins
ror
ret
push
in
popf
sub
fiadd
mov
cs
pop
xlat
mov
int3
add
add
inc
push
fcmovnu
or
add
adc
cmp
enter
pop
push
fcom
pop
shr
cmp
das
mov
jg
push
outs
jne
arpl
sub
mov
and
daa
push
int
add
dec
push
jmp
lahf
(bad)
mov
add
mov
xor
and
adc
cmps
pop
push
ret
push
mov
and
or
add
mov
out
or
int3
aaa
pusha
add
pusha
xor
call
mov
aam
mov
call
inc
imul
jns
(bad)
fld
aad
xchg
fidivr
cmps
das
aam
sbb
(bad)
loop
mov
popa
fwait
add
mov
enter
jmp
pop
dec
outs
or
sbb
xchg
xchg
out
inc
push
and
mov
setge
add
mov
cmp
call
in
ss
add
mov
mov
aaa
push
mov
dec
(bad)
jnp
jb
outs
inc
add
js
inc
push
inc
(bad)
jmp
(bad)
inc
mov
add
outs
push
pop
aam
and
imul
mov
mov
lods
push
sub
push
fistp
dec
dec
movs
repz
dec
adc
movs
add
xor
in
test
pop
and
jno
or
inc
mov
lahf
test
inc
mov
add
pop
adc
xlat
in
call
aam
das
stos
push
test
pop
leave
and
or
pusha
dec
add
pop
pusha
sub
cmp
sbb
push
loopne
xchg
ret
mov
cmps
(bad)
pop
push
es
les
jge
dec
lahf
shr
(bad)
lods
ss
sahf
xlat
mov
and
push
shl
mov
ja
out
push
ror
xlat
pop
scas
aad
push
mov
add
in
shl
adc
test
fiadd
pushf
sub
or
adc
jl
mov
adc
es
xchg
ja
test
adc
adc
cmp
pop
add
ja
inc
loopne
dec
popa
addr16
mov
mov
out
iret
(bad)
ja
(bad)
sub
inc
jno
(bad)
inc
bound
add
or
pop
mov
xor
and
adc
pop
mov
inc
out
or
int
push
xor
adc
mov
mov
mov
aaa
mov
xchg
repz
pusha
gs
push
xor
les
fwait
cmp
pop
push
rol
jmp
inc
add
jnp
dec
push
call
inc
popa
or
imul
inc
adc
inc
inc
clc
push
pop
or
jne
add
inc
ins
mov
pop
or
xchg
inc
mov
inc
xor
ficom
sbb
ds
mov
ror
shl
adc
sub
mov
jle
loopne
lea
pop
cmp
cmp
in
pushf
mov
in
outs
mov
sahf
pop
out
cmps
hlt
push
out
xchg
xchg
daa
and
es
jmp
mov
daa
cmc
xor
loopne
sub
in
xor
sbb
call
dec
push
push
ss
add
dec
add
xor
loopne
sub
push
add
jo
push
and
or
cmp
lods
stos
xor
pop
fnstenv
retf
xchg
or
popa
sub
or
out
popa
test
or
pop
mov
ds
sub
loop
add
sub
ds
sub
cmps
outs
sub
jnp
aas
scas
(bad)
in
add
push
outs
jae
pushf
add
fisttp
inc
ret
inc
aaa
gs
adc
pop
popa
mov
dec
sbb
cdq
rol
push
pop
mov
rol
add
sbb
ins
pop
inc
ins
in
repnz
enter
xor
fcomp
add
adc
movs
add
or
movs
popa
or
adc
dec
je
dec
push
popa
rol
add
or
xchg
or
add
popa
shr
test
ret
inc
pop
arpl
push
les
test
jo
push
push
jne
test
or
pop
or
push
cmp
sbb
sahf
call
xor
and
and
mov
fild
hlt
xor
and
and
mov
and
sbb
dec
jg
and
and
(bad)
push
call
adc
mov
das
in
cs
add
mov
adc
not
inc
xchg
jne
xchg
xor
dec
or
xor
xor
test
aad
in
into
test
mov
dec
pop
adc
inc
and
(bad)
jo
and
jmp
mov
inc
cmp
dec
bound
mov
adc
push
loop
sahf
ja
push
push
jb
jno
push
ja
add
push
movs
in
xchg
mov
(bad)
(bad)
cmp
movaps
ds
scas
imul
inc
or
jae
int
push
dec
sbb
jae
dec
xor
mov
mov
xor
or
les
inc
(bad)
sbb
movs
mov
test
xchg
mov
call
cmp
push
pusha
dec
adc
push
dec
jmp
sbb
bound
jno
stos
and
push
xor
js
adc
xor
adc
mov
scas
or
xor
shr
add
or
dec
adc
ror
sar
xchg
push
jl
dec
xor
pop
push
sbb
and
pop
xchg
sbb
xlat
adc
mov
or
add
in
or
or
add
push
add
or
pop
out
push
xchg
sbb
adc
adc
inc
enter
add
add
sub
adc
cmp
cmp
add
add
inc
test
sbb
xor
mov
add
shl
jb
xor
and
dec
je
xor
xor
xor
xor
jae
int3
aad
(bad)
xor
dec
movs
dec
mov
mov
sti
scas
hlt
cli
psubd
and
wbinvd
or
imul
outs
fbld
jecxz
outs
fild
xor
pop
mov
fbstp
loopne
sti
daa
mov
jl
cld
mov
jecxz
icebp
push
and
sbb
adc
call
pop
push
std
aaa
sbb
add
js
adc
adc
or
add
add
add
mov
xchg
outs
mov
or
(bad)
push
inc
loopne
cld
or
cwde
xlat
loopne
add
les
and
adc
add
xor
pop
xchg
mov
pop
mov
or
add
cmps
or
fmul
add
add
push
sti
xor
add
daa
xor
dec
mov
lock
std
pusha
cld
ret
add
mov
sbb
adc
loop
mov
fdivr
(bad)
push
fdivr
cli
dec
loope
ins
inc
dec
xchg
pop
pop
pop
add
adc
aam
das
add
ins
pop
adc
pop
loop
je
mov
cli
add
lahf
mov
gs
stos
mov
pop
mov
lahf
sar
psubb
xchg
inc
push
loope
inc
cmp
sbb
mov
pop
pop
fsub
add
sbb
mov
mov
sub
xchg
mov
mov
and
sub
jo
imul
cmp
add
(bad)
push
mov
add
xchg
lock
das
sub
add
mov
push
adc
je
rol
bound
add
sub
add
pop
push
dec
scas
inc
and
and
cmps
popa
and
(bad)
js
inc
inc
out
mov
pop
jl
xor
repz
sub
retf
test
das
jns
xor
clc
sbb
popa
jg
mov
fnstenv
mov
movs
jnp
ror
xor
div
pop
test
inc
bound
je
sub
dec
and
mov
adc
in
inc
mov
test
je
sbb
cs
aam
cmp
xor
add
out
pop
or
call
jo
sub
dec
fwait
xor
outs
mov
loopne
inc
stos
xchg
inc
add
mov
add
inc
dec
mov
sub
adc
shl
push
outs
push
push
push
add
add
cli
add
mov
fdiv
imul
mov
inc
mov
orps
pop
ja
add
push
jmp
pop
push
mov
adc
and
add
xlat
aam
fcom
pop
inc
in
icebp
aas
mov
popa
sbb
loope
or
test
std
shl
xor
mov
bound
popa
loopne
repz
scas
mov
pop
or
(bad)
(bad)
jmp
mov
mov
cmp
cmp
push
ds
div
sub
pop
ja
adc
adc
(bad)
push
ficom
js
loope
sub
jno
dec
int
test
inc
and
les
test
outs
lds
sahf
out
jge
je
lock
mov
xor
pop
test
pop
loopne
add
pop
and
mov
mov
aas
mov
inc
pop
jmp
(bad)
cmp
dec
loopne
loop
dec
ins
jbe
outs
xor
jnp
and
mov
jmp
mov
fwait
shr
adc
retf
jmp
jnp
mov
mov
add
sub
js
xor
push
add
xor
outs
inc
cmp
in
inc
push
mov
fwait
jge
adc
xor
push
jo
pop
das
sub
fbld
les
and
add
jmp
hlt
bound
add
(bad)
jecxz
sbb
jo
ja
sbb
jae
dec
jle
rcr
ror
popa
xor
add
mov
jle
dec
call
hlt
mov
or
(bad)
loopne
shl
adc
jmp
push
add
icebp
sub
mov
xor
lds
push
and
scas
pop
mov
or
test
outs
cmp
out
arpl
or
adc
and
adc
rcr
cli
fst
xor
mov
adc
inc
call
inc
call
jne
adc
push
in
out
imul
mov
adc
inc
xchg
mov
add
inc
in
jmp
dec
lock
jmp
idiv
or
push
repz
mov
cmp
dec
jne
shl
dec
aam
test
mov
dec
(bad)
dec
jmp
sub
inc
cmp
or
sub
xchg
xchg
sbb
call
lds
add
(bad)
jo
push
mov
or
pusha
jecxz
(bad)
pop
adc
js
sbb
push
mov
bound
out
mov
fcom
adc
cdq
movs
inc
rcr
test
xchg
sub
adc
movs
call
or
pop
sbb
les
mov
or
call
or
lock
xor
popa
out
pop
push
fwait
push
xor
pop
push
ret
or
ret
out
sub
add
jecxz
sub
and
imul
and
outs
or
scas
xchg
or
lock
das
iret
or
sbb
test
rol
or
mov
lock
dec
pop
sbb
xor
push
or
sbb
pop
xor
inc
shr
adc
lahf
enter
cmp
push
or
adc
sbb
leave
sbb
inc
xchg
xchg
xchg
and
inc
and
test
inc
sbb
add
loope
mov
xchg
in
repnz
or
dec
add
push
repnz
or
les
sbb
jb
pop
shl
and
and
paddq
jbe
(bad)
call
mov
outs
or
mov
push
mov
sbb
shr
pop
add
ins
dec
dec
push
call
add
dec
add
jmp
inc
cmp
imul
js
jl
mov
mov
fwait
dec
and
mov
or
xchg
push
xchg
pop
pop
clc
push
and
add
add
mov
mov
add
jnp
inc
adc
inc
adc
jle
fldcw
xor
adc
loope
ss
clc
int
xchg
cmp
pop
cmp
je
mov
adc
or
push
adc
jg
outs
repz
mov
mov
sub
je
push
dec
cwde
call
add
pusha
add
push
enter
rol
sahf
hlt
mov
arpl
call
add
or
ret
or
push
mov
mov
pop
rol
es
cmp
enter
cmp
lds
cmp
inc
adc
cmp
dec
es
jno
cmp
popf
xchg
outs
and
and
mov
lock
xor
outs
xchg
rcl
jmp
sub
mov
sub
movs
or
push
loope
enter
adc
rcl
pop
rcr
or
mov
or
sbb
shr
push
and
jmp
retf
sbb
shr
daa
mov
dec
in
push
jl
loope
xlat
xor
das
xchg
mov
push
popa
add
push
mov
sub
xchg
aam
je
test
ins
xor
mov
add
mov
outs
popa
cmp
push
adc
fist
clc
pusha
sub
adc
jg
push
les
sub
popa
cmp
inc
js
adc
add
sub
ret
mov
push
mov
idiv
retf
jne
xor
inc
push
and
dec
je
mov
mov
sub
addr16
inc
xor
and
jae
push
test
and
stos
ins
fcomp
in
pop
jle
mov
outs
adc
push
mov
test
mov
adc
mov
adc
xor
mov
xlat
jno
cli
xchg
ret
inc
das
int3
push
daa
mov
xlat
int3
add
cmp
icebp
es
xchg
jae
sbb
sub
push
pop
xor
or
add
dec
jl
icebp
fld
cmp
inc
or
pop
xor
addr16
fmul
mov
ins
inc
rol
dec
out
inc
adc
sti
and
or
outs
out
neg
fmul
cwde
and
(bad)
out
adc
jmp
inc
sbb
cwde
sbb
hlt
pop
enter
inc
fisubr
jl
inc
and
push
paddusb
adc
sub
adc
ret
loopne
jle
aaa
or
fucomip
jmp
mov
shl
or
inc
inc
sbb
out
push
mov
fdivr
xchg
adc
shl
add
inc
shr
shl
sbb
adc
or
pusha
sbb
or
inc
mov
mov
xor
(bad)
sub
dec
movups
mov
push
push
test
ins
arpl
adc
sbb
xlat
pop
fwait
imul
ret
cdq
xor
das
jmp
inc
or
lods
dec
ins
ins
cmp
cmp
dec
fst
popa
push
stos
push
adc
inc
jbe
icebp
jbe
fdivr
mov
and
pop
jae
dec
push
add
jnp
rsqrtps
sti
jmp
mov
jo
pop
add
jg
bound
cmp
jne
rcr
cmp
mov
(bad)
or
mov
inc
or
dec
adc
xchg
push
test
outs
pop
push
add
sub
into
cdq
sbb
push
pop
jmp
aaa
(bad)
sbb
mov
jno
in
in
in
ret
rcr
nop
cdq
clc
xor
dec
jl
je
inc
xor
cmps
push
popa
popf
adc
fild
ja
jecxz
xor
mov
(bad)
hlt
out
adc
add
or
and
jno
aam
xchg
mov
inc
mov
lock
or
test
ins
div
push
dec
scas
imul
jl
cmp
inc
outs
ins
mul
stos
add
adc
mov
push
xchg
stos
add
push
inc
dec
dec
dec
outs
and
call
add
dec
add
add
push
bound
mov
sub
aaa
iret
xchg
add
dec
or
xor
adc
add
add
aas
pop
jb
inc
dec
add
or
shl
xchg
push
loop
push
arpl
ficom
or
sbb
mov
sbb
mov
mov
inc
cli
inc
movs
rol
mov
or
std
call
add
and
xchg
xor
dec
push
add
pusha
add
inc
(bad)
sbb
adc
mov
scas
dec
xchg
mov
pop
add
or
push
dec
sbb
and
push
mov
and
je
mov
mov
mov
(bad)
cmp
sahf
inc
clc
cdq
add
es
add
cmps
jge
add
dec
outs
sub
ret
push
repz
adc
dec
xlat
jne
mov
add
scas
out
int
sub
inc
les
add
stc
stc
outs
inc
pusha
inc
sti
or
ret
fstp
cmp
add
add
add
xor
fdiv
hlt
ja
xlat
cmp
ja
dec
sbb
outs
pop
jmp
sbb
ds
ss
mov
cmp
js
cwde
inc
sbb
push
mov
les
test
push
lock
sbb
mov
push
mov
jo
les
dec
push
adc
mov
inc
dec
jne
jecxz
mov
push
push
fcom
enter
in
cld
xor
pop
xor
sub
cmp
enter
or
lods
pop
jle
imul
jp
movzx
hlt
adc
fucomp
push
mov
inc
add
dec
(bad)
out
loope
adc
push
jne
cmp
fild
mov
daa
int3
jmp
adc
bound
inc
adc
jp
jge
or
or
mov
clc
add
and
pop
cli
mov
cmp
lds
test
cmp
fist
sub
enter
mov
call
movs
mov
(bad)
les
mov
rcr
fcomp
repz
cmps
mov
mov
mov
cmps
mov
xor
xor
mov
pushf
lods
add
movs
add
pop
cmp
jne
ja
jge
aaa
outs
add
inc
inc
cmps
mov
mov
jo
push
call
ret
push
and
add
push
xor
pop
arpl
add
pop
mov
dec
imul
mov
push
adc
add
shl
pop
add
adc
(bad)
scas
and
mov
push
mov
lock
dec
pushf
sbb
inc
pusha
push
inc
pop
inc
and
and
(bad)
jo
les
movs
dec
inc
call
and
and
xchg
loope
gs
fs
lods
fwait
daa
adc
movs
cdq
and
call
cld
nop
cmp
test
inc
inc
mov
hlt
mov
addr16
add
add
xchg
retf
shl
sub
aam
nop
sbb
stc
dec
sbb
push
loopne
popa
sbb
jg
aas
in
xchg
xchg
xchg
or
and
mov
sub
sbb
xor
pminsw
push
pop
cmp
push
jge
mov
sub
out
jl
fld
mov
fcomp
lahf
lock
add
adc
sub
jb
out
in
mov
and
imul
js
push
push
jo
repnz
movs
lea
xchg
or
lock
inc
mov
je
push
xlat
jle
add
sub
adc
and
das
xchg
retf
fucom
mov
mov
mov
pavgb
cmp
ud1
sar
and
adc
jle
cmp
add
aam
loopne
dec
jmp
cmc
aam
add
cmc
mov
push
pop
mov
add
lea
push
add
in
dec
inc
xchg
rcl
aam
push
sar
cmpps
call
ins
jne
test
test
inc
arpl
jmp
mov
xchg
ja
(bad)
hlt
push
adc
xor
mov
add
popa
mov
adc
adc
pop
dec
arpl
pop
jmp
cmp
inc
das
fild
add
mov
imul
das
inc
xchg
or
push
xadd
ss
mov
and
inc
addr16
stos
add
daa
rcr
push
add
add
jg
mov
sbb
and
daa
mov
mov
rcr
adc
jmp
jl
push
addr16
pop
aam
and
add
outs
or
add
jmp
call
pop
add
bound
add
mov
aam
ins
out
push
in
push
adc
out
es
inc
sbb
repz
xchg
sub
pslld
mov
not
or
mov
jge
(bad)
cmc
xor
test
arpl
ds
push
cmp
jp
ss
cmp
push
sub
sub
jge
adc
lock
push
mov
mov
mov
fwait
inc
fisttp
clc
jbe
add
and
ds
and
pusha
sub
cdq
push
add
dec
or
test
test
dec
dec
pop
sbb
pop
cmc
xchg
sti
mov
nop
and
xor
sub
nop
dec
push
ins
jmp
daa
sub
fwait
mov
sub
or
pushf
test
loop
add
leave
hlt
push
ficomp
in
es
adc
push
cmp
adc
test
and
or
mov
out
imul
mov
in
rol
bound
jg
in
mov
scas
fsubr
rcl
sub
movs
es
and
lods
cmc
push
or
add
xchg
jo
je
xor
dec
cli
and
xor
and
out
aam
pusha
mov
test
and
xor
inc
mov
ret
pop
lea
and
sub
mov
cmp
dec
or
or
adc
rcr
fwait
cmp
jne
or
stc
xchg
or
xor
pop
shr
ror
dec
sbb
lea
movntps
jae
xor
adc
unpckhps
cmp
ret
add
jmp
scas
push
sbb
aam
sbb
sar
je
rcr
(bad)
shl
loopne
repnz
jne
ror
inc
add
or
cmps
and
sub
push
loop
out
or
add
das
push
add
add
outs
aaa
ss
dec
cmp
or
ret
inc
xchg
iret
mov
test
stos
add
mov
jp
ror
or
(bad)
movhps
loopne
xor
xchg
cli
xor
xor
or
mov
aas
loope
add
jae
mov
push
dec
mov
sbb
ins
mov
xor
or
and
sbb
xlat
jbe
add
add
jns
leave
mov
adc
sub
sbb
loop
add
dec
and
mov
fadd
mov
mov
mov
sbb
shl
(bad)
push
mov
sub
dec
jmp
pop
pop
out
or
push
sub
aas
adc
or
sbb
jo
xor
mov
imul
pusha
movs
rcr
sbb
out
ficom
lahf
fild
cmp
jmp
adc
push
ror
push
cmps
jmp
xor
icebp
iret
je
into
sub
jmp
xor
add
cmp
mov
and
test
mov
mov
inc
call
test
jo
jmp
mov
hlt
dec
call
mov
ret
inc
xchg
push
loopne
jbe
loopne
xchg
pusha
dec
(bad)
cmc
into
sub
neg
sbb
sti
mov
daa
ins
in
call
mov
icebp
sub
(bad)
jb
sbb
adc
adc
mov
xchg
shl
cmp
push
clc
add
lods
ror
outs
add
sbb
mov
mov
sub
push
rol
adc
mov
mov
sub
js
mov
pop
dec
push
xchg
fisttp
rcl
jmp
sbb
and
cmovg
add
jo
movs
fsub
or
dec
ficomp
push
fiadd
push
lea
(bad)
out
mov
loopne
and
test
je
add
add
clc
nop
cmp
jmp
or
mov
idiv
mov
add
das
lods
adc
jg
jp
xor
int3
mov
(bad)
loopne
pop
call
in
pop
dec
and
mov
adc
loop
dec
repz
sbb
scas
dec
inc
sbb
xchg
or
dec
aas
pop
jb
push
dec
jne
push
mov
adc
adc
adc
pop
push
cmp
mov
sbb
pop
js
jp
xchg
in
add
push
cmc
adc
(bad)
repz
and
addr16
sub
xchg
xchg
jmp
aaa
add
mov
fsub
je
lahf
adc
rcr
movs
jecxz
add
sub
stos
jl
sti
jo
js
push
lea
jecxz
push
and
loope
loopne
cmp
rol
and
sub
cs
add
or
lods
xlat
push
or
and
xchg
imul
mov
pop
cmp
cmp
add
jbe
into
sbb
js
dec
rol
add
sbb
mov
je
pop
ror
add
int
vmovd
mov
daa
cmp
or
mov
aaa
nop
xchg
add
pop
and
sbb
mov
add
xor
xor
fnstcw
inc
mov
mov
and
mov
xor
inc
les
push
jb
add
inc
inc
(bad)
into
cmp
nop
mov
mov
mov
and
push
ret
clc
jl
and
cwde
add
dec
add
mov
(bad)
mov
mov
mov
mov
push
or
xor
nop
daa
mov
or
stc
nop
popa
and
cmp
mov
or
xor
xchg
ret
sbb
inc
jo
test
dec
push
xor
xchg
cmps
pop
gs
xor
ret
xchg
sbb
adc
pop
inc
xchg
sbb
push
jbe
jmp
aam
hlt
mov
dec
and
xchg
lock
shl
xchg
inc
sahf
adc
or
and
stos
inc
jmp
ret
iret
test
xor
or
test
push
cli
add
add
loope
movs
and
out
xor
pop
add
pop
mov
popa
jo
clc
jne
xchg
and
iret
retf
mov
shl
xor
cli
inc
fsubr
test
loope
xor
dec
jo
daa
and
push
ficom
push
loopne
xchg
shl
mov
or
pop
test
jnp
xor
mov
add
push
fisttp
inc
std
out
or
inc
add
(bad)
dec
test
xor
jns
xchg
inc
scas
xlat
out
cmp
push
lock
xchg
and
inc
shl
jo
add
fisub
imul
mov
mov
and
add
fild
push
pop
and
add
or
(bad)
in
inc
js
pop
xchg
add
push
inc
sbb
add
aad
scas
and
jnp
stos
nop
shl
shl
and
iret
adc
sub
sub
or
sub
xor
in
sti
cmp
arpl
xchg
sar
in
adc
pop
mov
call
ss
or
push
fisub
mov
push
xor
(bad)
out
aaa
js
xchg
mov
pop
xor
pop
addr16
xchg
xchg
add
in
jbe
test
mov
popa
cmp
sbb
mov
in
and
stos
(bad)
mov
add
pop
and
mov
push
in
fiadd
shr
inc
ins
fild
cmp
aaa
xor
pop
jl
mov
add
mov
add
or
adc
add
add
pop
retf
xor
dec
or
sbb
xchg
add
and
aas
(bad)
and
mov
nop
fcom
sub
int
nop
add
scas
inc
das
bound
popa
sub
aaa
pusha
(bad)
rol
aaa
mov
test
cmp
mov
or
push
or
(bad)
cmp
jg
sbb
add
xchg
icebp
movs
add
xchg
sub
jmp
push
or
aad
inc
pushf
loopne
push
shl
cmp
pop
fcom
sbb
ret
lds
popa
int3
ficom
xchg
addr16
pop
dec
imul
push
cld
mov
push
mov
or
adc
std
aas
and
(bad)
jle
mov
test
jl
inc
and
dec
or
movsx
cmp
jne
call
dec
and
mov
ficom
push
hlt
lods
push
xchg
hlt
inc
(bad)
call
adc
out
lea
addr16
pusha
mov
fnstsw
dec
mov
add
adc
in
add
push
dec
ror
cmp
(bad)
push
clc
shl
sti
out
mov
push
mov
xor
rcl
add
fwait
repz
pop
test
push
or
cdq
frstor
outs
xor
or
cld
dec
movs
mov
movs
loopne
xchg
or
sub
fmul
mov
push
mov
sub
pop
mov
call
test
js
shr
call
test
jge
push
and
movs
push
faddp
and
add
or
mov
add
sub
push
lods
aad
mov
xchg
clc
add
test
lock
aam
jge
xor
test
mov
mov
mov
xor
rcl
pusha
fwait
add
and
sbb
jnp
test
stos
int
call
fwait
mov
dec
loopne
pusha
dec
lock
addr16
ins
mov
cmp
or
add
rol
push
jl
cmp
cmp
add
(bad)
cmp
fist
add
and
jmp
mov
mov
mov
mov
mov
cmp
outs
jo
cld
imul
sub
xchg
sub
add
fsubr
push
je
xor
out
sub
lods
adc
inc
test
xchg
(bad)
push
or
add
and
or
mov
add
icebp
add
setne
jmp
lds
sbb
xor
mov
retf
inc
and
sbb
aas
jmp
dec
or
pop
inc
or
add
pop
imul
cmp
data16
sbb
xchg
aaa
adc
sbb
adc
or
or
daa
jae
xchg
mov
pop
mov
xor
in
ja
ret
nop
inc
enter
test
sbb
gs
mov
jmp
add
stc
ss
sub
cmp
sbb
xor
or
test
fmul
ret
xchg
ror
cli
sub
int3
sbb
retf
in
jle
lds
xor
or
adc
sbb
ja
call
mov
push
sub
sar
aaa
(bad)
icebp
mov
add
in
push
adc
add
gs
pop
add
fnstcw
jge
jmp
add
test
mov
push
or
mov
mov
push
add
add
add
les
bound
xor
mov
adc
cwde
xchg
rol
test
add
out
cmp
dec
push
mov
retf
add
es
cmp
xchg
shl
pusha
movs
pop
cmp
inc
stos
mov
inc
sub
rol
jge
jne
clc
loope
cli
call
sub
mov
rol
or
sbb
mov
mov
or
aam
add
xor
mov
mov
dec
icebp
aam
jmp
push
in
hlt
lahf
pusha
push
or
push
(bad)
push
fdiv
push
sub
(bad)
daa
lods
test
aam
inc
shr
and
sbb
pop
rcl
or
pusha
push
scas
mov
mov
repz
adc
push
(bad)
add
in
cmp
add
addr16
fcom
pop
adc
xor
sbb
sbb
ret
inc
or
or
push
clc
dec
mov
or
daa
cmp
sbb
mov
cmp
je
mov
jnp
js
out
mov
sub
loopne
xor
ja
cmp
imul
push
inc
clc
push
push
push
push
pusha
shl
xor
jo
or
push
jge
(bad)
dec
mov
fwait
dec
lds
jno
mov
popa
(bad)
in
cmp
inc
das
dec
add
and
add
xchg
cmc
pop
mov
sar
mov
push
adc
(bad)
sub
push
jmp
jecxz
xor
sbb
pop
push
pop
aam
mov
xor
cmp
add
pop
mov
mov
popa
xor
clc
or
jmp
sti
inc
inc
popa
add
enter
add
push
pop
aas
outs
pop
push
mov
adc
rol
inc
outs
mov
fisub
mov
cmp
and
xchg
xchg
or
test
daa
mov
pusha
and
fbstp
xchg
add
mov
cs
mov
dec
popf
or
xor
pop
shr
sub
dec
ins
mov
or
in
and
imul
dec
add
adc
test
fldenv
xor
xor
pop
or
ins
imul
or
ret
jb
int3
dec
loopne
jmp
je
jne
xor
or
ja
add
xor
shr
push
jo
and
sar
(bad)
sbb
mov
inc
popa
ins
inc
imul
enter
outs
lods
dec
cmp
mov
mov
push
adc
jge
xchg
(bad)
sbb
dec
fs
sub
cmp
enter
ss
xchg
add
push
add
add
add
push
xor
outs
shl
stos
inc
xor
call
pop
arpl
pop
daa
xor
adc
adc
inc
dec
fsubr
arpl
outs
je
fcmovnb
push
xchg
sahf
inc
das
mov
mov
cpuid
mov
inc
ror
shl
inc
pop
xor
sar
cmps
xchg
or
add
fnstcw
aaa
sub
add
push
adc
sub
lds
sbb
jo
or
jp
pusha
lea
and
push
adc
jp
sub
push
xor
pop
push
test
fcmovnbe
pop
sub
jmp
inc
and
pop
daa
mov
jecxz
stos
dec
or
in
inc
aad
test
mov
cmp
imul
sub
or
imul
dec
mov
push
mov
scas
je
str
ja
call
and
(bad)
scas
mov
jmp
add
fisttp
enter
loopne
adc
cmp
enter
mov
enter
xor
enter
out
mov
in
dec
gs
pop
ret
cmps
mov
es
mov
push
popa
pop
sub
mov
mov
loop
cmps
shr
and
les
scas
aad
sub
ret
add
fnstenv
pop
call
add
push
rol
push
fiadd
fcomp
mov
pushf
psubusw
js
sahf
pop
dec
dec
add
or
dec
pop
imul
cwde
jb
test
mov
imul
ins
add
or
out
out
adc
cmp
add
sub
sbb
cmp
add
adc
test
pop
and
jo
adc
push
dec
mov
fcmovnu
or
mov
adc
adc
adc
push
add
push
gs
xchg
pop
inc
pop
sub
outs
pop
sub
and
pop
add
mov
in
adc
pop
pop
inc
pop
add
cmps
cmp
add
mov
or
adc
inc
pop
out
dec
sbb
and
mov
and
leave
inc
inc
inc
jp
jnp
add
jb
sbb
je
cmps
push
lock
cmp
movs
add
mov
ret
out
into
cmp
aam
add
pop
dec
pop
lea
add
test
mov
xchg
mov
bound
fs
mov
pop
popf
int3
call
outs
(bad)
mov
mov
outs
dec
mov
inc
rcr
mov
lock
in
or
xor
mov
inc
or
add
ins
in
fist
sbb
ins
push
daa
push
cmp
push
push
xor
add
cmp
leave
and
imul
push
in
xchg
nop
pop
add
fwait
(bad)
call
xor
cwde
ja
or
movs
dec
aam
xor
and
sub
ror
test
fild
inc
mov
(bad)
xlat
mov
pop
cmp
inc
jne
sbb
mov
inc
inc
jg
push
xchg
mov
pusha
lea
lds
adc
mov
add
add
fist
and
test
push
and
out
jbe
test
cld
imul
sbb
and
mov
fsub
xor
xchg
(bad)
mov
and
in
xchg
call
cmp
in
pop
jge
fnstenv
or
and
dec
pop
jge
ja
and
int3
inc
je
jo
add
in
or
inc
sbb
mov
imul
popa
add
and
jg
adc
cmps
mov
jae
xchg
mov
lods
cmp
xor
hlt
dec
add
inc
add
pop
cld
mov
aas
sub
pop
xor
and
jb
in
adc
push
pop
sbb
cmp
pop
push
push
mov
cmp
cs
nop
ins
nop
scas
or
inc
cmp
test
das
out
pusha
sbb
stc
pop
cld
jge
xor
sub
sti
or
and
cmp
mov
and
xor
and
or
mov
xchg
js
jne
inc
push
or
dec
(bad)
adc
pop
sub
push
and
sub
inc
sbb
fwait
and
fs
add
pop
pop
out
push
js
inc
push
and
push
imul
ja
icebp
aaa
and
adc
add
cmp
adc
add
and
dec
clc
sub
push
shl
cmp
adc
cmp
adc
jo
mov
inc
pop
push
or
push
outs
ja
and
add
cmp
ret
add
jo
sbb
pop
push
push
push
mov
pop
pop
neg
fist
out
or
mov
and
repnz
add
push
pop
aam
push
leave
adc
fstp
pop
xlat
aas
jl
mov
pop
mov
out
(bad)
enter
(bad)
cmp
inc
enter
pop
mov
mov
xor
fidivr
ret
nop
cmp
or
inc
es
pop
clc
(bad)
mov
pop
or
fucomip
adc
inc
dec
push
add
dec
mov
int3
je
loop
aaa
mov
push
cmp
push
adc
or
sar
mov
sub
push
arpl
pop
pop
sbb
sbb
bound
addr16
sbb
xor
repnz
fimul
mov
repnz
es
jb
mov
inc
rol
call
pop
or
add
or
orps
and
jl
mov
jo
pop
xor
daa
out
xchg
pop
dec
adc
ret
add
push
mov
mov
inc
lock
ins
shl
daa
inc
pop
sbb
in
cmp
and
pop
pop
cmps
pop
jne
pusha
sbb
mov
or
or
xchg
add
and
add
xor
rcl
cmp
dec
inc
jbe
(bad)
fcom
jmp
push
add
fld
sub
je
inc
ja
stos
pop
inc
jo
(bad)
push
lods
and
add
leave
leave
leave
leave
imul
leave
ins
outs
outs
push
leave
leave
leave
leave
push
push
push
push
leave
leave
leave
leave
push
push
push
pop
into
leave
leave
leave
pop
pop
pop
pop
cmps
je
and
imul
(bad)
cli
add
xor
je
xor
mov
arpl
loop
push
bound
data16
test
(bad)
pop
xor
sbb
jae
pop
or
and
or
jns
xor
rol
pop
xlat
xor
ret
mov
pop
in
pop
imul
xor
or
xor
or
xor
pusha
mov
daa
push
fcomip
cs
jg
(bad)
adc
outs
enter
addr16
add
sbb
je
popa
(bad)
aas
mov
push
ja
pop
les
retf
pop
(bad)
(bad)
dec
sbb
mov
mov
dec
cmp
jns
pop
and
mov
aas
xchg
ins
popa
cld
addr16
imul
mov
ins
pusha
pop
mov
push
add
jp
outs
xchg
sub
sahf
pop
jns
shr
pusha
dec
adc
jo
mov
cmp
sbb
and
sbb
adc
jmp
ror
sbb
pop
sub
adc
int3
sbb
inc
lock
aam
fisubr
xor
add
inc
jo
(bad)
inc
push
inc
iret
pop
sub
inc
imul
mov
mov
mov
ror
dec
dec
inc
push
iret
pop
sub
and
arpl
out
fwait
pusha
pop
cmp
inc
sbb
pop
leave
dec
imul
add
mov
mov
pop
cmp
xor
xchg
jo
pop
neg
fs
adc
push
ja
mov
dec
inc
add
fs
and
and
inc
jo
fs
rcr
mov
mov
jo
add
adc
mov
inc
fsub
push
mov
pop
dec
inc
lock
test
jns
gs
loop
scas
pop
ins
(bad)
or
inc
rol
ret
dec
mov
push
xlat
pop
xor
xor
data16
pop
test
rdmsr
jg
add
push
in
mov
jae
iret
pop
sub
or
ins
add
outs
add
or
addr16
in
jmp
inc
push
sbb
in
setp
jae
pop
sub
and
addr16
cwde
setle
add
push
sbb
adc
ror
inc
lods
aam
out
sub
es
imul
cmp
nop
neg
(bad)
loopne
outs
adc
and
xor
add
pop
push
jo
imul
cmp
ret
(bad)
ins
ins
inc
psubusb
add
pop
xor
pop
enter
imul
or
or
pop
add
shl
pop
sub
and
nop
push
rcr
clts
push
adc
cmp
push
or
loope
outs
ss
mov
add
nop
push
outs
mov
stc
pop
imul
punpckhdq
mov
inc
push
(bad)
mov
jg
pop
imul
inc
xchg
jmp
or
pushf
ins
out
sbb
xlat
pop
xor
sbb
jnp
dec
push
cld
add
dec
push
dec
inc
pop
inc
dec
or
sub
iret
out
push
xchg
inc
dec
fild
or
imul
sub
bound
fist
add
sahf
add
push
pushf
adc
sbb
test
sbb
gs
ins
lock
pop
add
push
push
or
(bad)
xor
ss
add
or
and
or
cmp
add
inc
fistp
mov
xchg
inc
sub
loope
das
or
daa
cwde
jl
aaa
xor
leave
or
aaa
imul
mov
fistp
outs
popa
dec
es
das
imul
aaa
mov
xor
sub
adc
leavew
or
add
outs
loope
pusha
or
pop
mov
ds
or
mov
push
adc
adc
add
or
ucomiss
ret
daa
int
aam
cld
cwde
ss
mov
pusha
mov
iret
and
push
mov
adc
adc
mov
dec
mov
ins
add
add
or
or
push
mov
jecxz
in
add
pop
ret
and
aaa
pop
fild
pop
and
movs
lods
mov
add
mov
call
popa
jle
add
or
adc
popf
cmp
mov
jno
cmp
stos
nop
out
data16
test
popa
int
add
add
unpcklps
leave
out
jno
stc
ins
test
or
das
mov
aas
or
enter
jno
add
sbb
movs
hlt
cmp
add
xchg
or
mov
sbb
jge
mov
or
xchg
cwde
js
and
loope
pop
lods
sbb
test
or
fsubr
add
cmps
pcmpeqw
dec
pop
gs
xor
gs
add
dec
push
jo
cmps
xchg
icebp
pusha
popa
and
xchg
(bad)
add
jge
fdivr
imul
ins
aaa
icebp
cmps
adc
push
shl
adc
outs
push
jl
add
test
jp
rol
push
push
xor
(bad)
sub
jo
int
or
fisubr
sbb
push
jo
or
gs
pop
adc
dec
mov
push
popa
xor
movs
or
mov
mov
mov
push
cmp
mov
je
cmp
and
dec
add
inc
mov
cmp
add
(bad)
push
in
pop
jg
aam
push
clc
icebp
fst
mov
push
xor
into
out
shr
or
cld
not
test
cs
out
mov
add
dec
push
push
sti
fidivr
jge
jl
push
cmps
sub
mov
shl
push
sahf
not
clc
mov
les
adc
ret
mov
bound
or
aam
adc
push
shl
nop
sub
pop
data16
loopne
fdiv
mov
cmp
ret
inc
xchg
or
es
sbb
test
adc
out
mov
fbstp
cmp
pop
dec
aas
ds
test
cmp
jno
adc
ss
cmp
or
cli
or
dec
and
dec
popa
add
inc
mov
xor
cmp
imul
or
jns
jb
fbld
jg
dec
pop
ror
sbb
cmp
mov
mov
push
js
cmp
fwait
push
sbb
push
js
in
pop
loopne
sub
xor
out
repnz
mov
jns
push
jae
adc
fisub
jp
sbb
pop
ss
mov
jnp
inc
pand
sub
xor
mov
push
sub
mov
add
push
push
imul
ins
pop
jl
popa
test
sub
add
add
pop
bts
adc
xchg
jo
popa
lods
test
pop
adc
jnp
inc
ins
test
mov
dec
or
je
and
or
lods
mov
sbb
push
daa
mov
add
mov
push
addr16
adc
dec
jo
cmp
inc
add
push
push
pop
cmps
add
dec
dec
lahf
or
adc
inc
mov
ret
or
int
add
jbe
rol
add
push
fadd
or
iret
pop
sbb
push
test
cwde
sbb
retf
push
cmp
js
ret
xchg
test
sub
(bad)
out
mov
pop
gs
jnp
(bad)
sbb
push
shl
push
or
or
js
xchg
adc
(bad)
fstp
sbb
or
push
inc
fcomp
mov
push
push
nop
(bad)
mov
fild
jp
imul
add
inc
data16
mov
mov
push
inc
dec
cwde
fld
dec
xor
and
outs
lods
or
ret
add
pop
xor
mov
adc
(bad)
mov
sbb
arpl
mov
addr16
inc
sub
stos
push
shl
rcr
movs
pop
xchg
mov
jl
mov
adc
inc
cmp
icebp
fcom
mov
jns
mov
lahf
sbb
xor
sar
push
and
leave
cmp
push
xchg
lods
repz
adc
imul
dec
adc
repz
mov
mov
adc
adc
adc
add
push
sbb
inc
mov
mov
je
inc
inc
adc
push
or
arpl
gs
loop
adc
pop
sub
test
xor
jmp
int
xchg
std
add
das
pop
cmp
or
lock
dec
dec
or
inc
sbb
ret
adc
pand
lea
or
jge
mov
xchg
push
gs
push
pop
(bad)
xchg
sbb
inc
pop
lods
mov
and
imul
scas
jb
xor
sar
sbb
xor
xor
data16
xor
sbb
add
adc
repnz
and
or
test
adc
sbb
cmp
mov
push
mov
inc
mov
mov
push
xchg
and
pop
add
call
mov
xchg
aam
cmp
fld
repnz
sbb
scas
movups
add
loop
ins
inc
xlat
(bad)
xlat
imul
jae
push
cmp
adc
(bad)
push
jmp
mov
xor
call
add
sbb
(bad)
clc
inc
ins
jo
jns
jmp
sub
sbb
mov
rol
push
ret
or
xchg
cmp
mov
daa
pop
mov
add
xor
mov
int
push
add
es
sbb
mov
stos
ss
sar
test
push
or
iret
add
dec
out
dec
and
lea
and
xchg
sbb
scas
or
fisttp
cmp
lock
xlat
pop
add
xor
xor
push
dec
mov
and
mov
iret
lock
add
or
std
jns
sub
pop
sub
pop
enter
test
or
stos
je
adc
cmp
xor
test
test
stos
(bad)
adc
inc
add
(bad)
or
(bad)
cmp
sub
mov
(bad)
pop
fwait
or
xadd
cmp
aam
or
sub
aam
adc
rol
inc
pusha
stos
ja
sub
dec
daa
pop
pop
mov
sub
fs
mov
mov
or
add
sbb
test
inc
or
pop
jne
ror
fldenv
sub
stos
push
add
cmp
or
rol
adc
cli
adc
sar
fld
xchg
sbb
or
pusha
jg
xchg
pop
cmps
inc
je
dec
inc
dec
inc
fisttp
mov
pop
and
test
jnp
add
dec
push
or
push
inc
xchg
and
pop
xlat
or
sbb
xchg
or
adc
outs
lds
daa
or
movs
add
fadd
or
das
arpl
sbb
sti
xor
pushf
ins
lock
cld
dec
add
push
inc
or
ins
xchg
xchg
ror
add
(bad)
jle
in
mov
push
sub
clc
mov
es
inc
mov
adc
or
js
or
outs
add
hlt
sbb
sbb
test
and
cmp
and
nop
pop
xor
pop
cmp
test
sti
mov
xor
sub
pop
sahf
push
or
sub
or
mov
retf
sbb
es
push
cmp
ja
mov
stos
jne
add
pop
pop
enter
pusha
pop
popa
bound
pop
and
clc
add
test
rcr
xchg
fwait
xchg
cs
(bad)
hlt
das
add
pop
mov
aaa
clc
xchg
loopne
cmp
(bad)
mov
add
and
clc
xchg
stc
test
imul
mov
add
clc
xchg
xchg
js
test
sbb
mov
neg
sbb
ins
add
lods
pop
in
xor
pop
add
shr
mov
sub
mov
push
jmp
lea
mov
mov
inc
scas
test
bound
adc
pop
lods
jmp
jmp
xor
add
and
jle
push
push
jmp
popa
ret
or
lock
fld
mov
mov
mov
pop
adc
lea
and
fisubr
stos
mov
push
loopne
bound
push
mov
mov
add
xor
push
sbb
daa
popf
daa
es
add
jmp
cmc
adc
aad
mov
jo
pop
jae
out
xchg
inc
test
mov
mov
mov
nop
cmp
sbb
push
lock
pop
ret
cmp
sbb
mov
or
sbb
mov
sbb
pop
xor
inc
pop
xor
and
daa
add
mov
lea
test
(bad)
mov
inc
xor
lods
loope
loop
add
das
loopne
mov
xor
addr16
xchg
inc
sbb
dec
inc
pop
gs
or
sub
pushf
lea
popf
daa
dec
dec
and
pushf
lea
push
mov
mov
push
or
mov
ins
push
sub
xchg
inc
call
test
pop
cmc
test
(bad)
push
sub
mov
pop
test
cmp
lods
sbb
scas
add
es
add
popa
xchg
and
push
cmps
js
enter
adc
fimul
pop
test
pop
push
dec
sahf
test
ret
les
inc
enter
(bad)
cmp
pop
sub
les
xor
fisub
or
aam
out
je
scas
add
push
jmp
dec
or
repnz
nop
popa
adc
pop
push
loope
jno
adc
cmp
nop
fcom
or
fldcw
test
add
addr16
mov
int
mov
iret
stos
adc
fnsavew
add
push
or
and
clc
xchg
add
xchg
popa
inc
sbb
das
je
dec
push
pop
fistp
xchg
xchg
jo
aam
and
mov
pushf
call
ret
pop
fbld
push
xchg
pop
stos
arpl
inc
or
jnp
mov
or
xchg
mov
sub
add
sub
xchg
push
fsub
sahf
xchg
das
xchg
push
je
mov
push
out
and
jnp
into
jbe
iret
pop
ret
inc
jl
push
out
pushf
xchg
push
xchg
adc
cdq
add
sub
sbb
xchg
and
push
pop
cmps
sub
dec
data16
shl
pusha
js
rcr
mov
cdq
mov
dec
arpl
jmp
sub
and
leave
dec
and
xor
push
outs
mov
mov
mov
je
stos
ins
mov
xchg
adc
xchg
movs
iret
mov
mov
loopne
pop
enter
cmp
in
xchg
inc
jo
push
xchg
mov
out
push
and
aaa
repnz
clc
ss
test
cwde
add
jb
push
pusha
jo
inc
push
dec
outs
outs
je
and
in
mov
pop
sbb
outs
jne
lods
int
sbb
aad
imul
and
xchg
cmps
cli
xchg
ss
push
adc
dec
push
xchg
cmp
mov
xchg
call
inc
mov
repnz
xor
adc
in
xchg
pop
jnp
lods
inc
(bad)
int
jbe
or
or
sub
push
xor
add
adc
push
pop
jno
mov
mov
lds
dec
loopne
adc
add
test
ss
mov
call
lea
add
xchg
out
clc
push
inc
cdq
in
dec
stos
mov
cwde
push
aas
add
mov
enter
test
lahf
lods
dec
cmp
in
(bad)
inc
xor
inc
arpl
inc
cmp
cdq
push
adc
and
repz
cmp
and
nop
inc
test
dec
pop
enter
retf
js
das
push
add
pop
(bad)
in
xor
iret
and
or
outs
pop
in
lods
adc
or
add
or
repz
lahf
pop
xor
inc
and
popf
mov
push
lods
cmp
add
scas
lahf
push
call
pop
push
mov
in
call
mov
das
pop
push
outs
cmp
ror
push
pop
cmpxchg
aas
dec
mov
jge
movs
add
jbe
call
out
adc
push
sub
jge
lock
push
or
clc
dec
shr
xor
sub
adc
or
sub
cmps
lock
mov
lahf
mov
pop
aam
scas
and
retf
sbb
and
sub
hlt
popa
fdiv
hlt
loop
push
jo
push
sbb
xchg
aam
xchg
and
pop
add
jae
ja
icebp
imul
enter
xchg
mov
or
(bad)
clc
ret
fcomp
add
add
dec
lock
xlat
test
mov
push
cmp
mov
ds
mov
ja
pop
and
lahf
sbb
push
fdivr
lock
popa
and
(bad)
aam
js
mov
fmul
inc
movs
push
in
and
xor
and
jp
jnp
cmp
xor
xor
mul
dec
arpl
mov
(bad)
fwait
inc
mov
(bad)
mov
or
push
and
adc
out
add
rol
cwde
dec
ins
push
adc
pop
xlat
mov
cmp
and
pop
mov
mov
push
xor
and
mov
or
xor
dec
jne
mov
pop
(bad)
adc
stc
sub
inc
in
xor
pop
faddp
pop
clc
movzx
add
addr16
or
add
and
cmp
jl
jo
add
push
sbb
shl
enter
xor
sbb
push
data16
ja
mov
repz
mov
push
ror
rol
jns
or
cli
add
fwait
daa
js
add
mov
sar
daa
shl
cmp
shr
lock
adc
cmp
loopne
cmp
xchg
xchg
les
cmp
and
(bad)
push
mov
mov
cmps
hlt
xor
sbb
rol
xchg
outs
mov
mov
mov
fisttp
adc
cld
lea
jb
cmp
nop
nop
sbb
adc
popa
jb
cdq
aaa
lock
cmp
daa
lock
jmp
inc
or
test
shl
add
xchg
mov
lea
and
mov
cmp
arpl
jmp
inc
dec
jne
imul
push
out
or
push
add
xor
dec
les
sbb
loope
xor
or
adc
mov
cmp
daa
add
push
jmp
jb
mov
sub
pcmpgtb
es
push
(bad)
scas
lea
mov
or
xor
and
les
pop
test
(bad)
bound
sub
in
test
daa
or
ins
or
out
inc
add
xor
test
mov
ds
inc
add
loopne
wrmsr
push
scas
mov
test
cmp
push
ja
test
fwait
pop
or
mov
sbb
push
mov
hlt
mov
inc
ror
inc
rcr
add
lea
mov
arpl
cmps
mov
and
aaa
or
add
js
xchg
jmp
ins
dec
mov
and
(bad)
mov
sti
jg
xor
adc
popa
jg
les
jb
cmc
dec
mov
jbe
cmp
mov
idiv
push
cmp
pop
mov
mov
or
test
jo
fisubr
add
icebp
fsubr
je
xchg
outs
add
mov
add
add
int3
jp
retf
dec
add
xor
fadd
inc
sub
hlt
xchg
xchg
and
fdivp
xchg
jmp
cmp
push
adc
mov
xchg
sub
fninit
or
jmp
fimul
xor
rcr
mov
add
lahf
das
xchg
jno
aaa
clc
or
pop
movs
mov
retf
pop
xchg
mov
std
push
out
shl
mov
mov
xor
jmp
inc
dec
mov
cmp
jge
mov
lea
mov
shl
sub
adc
test
xchg
ret
pop
pop
xlat
xor
fisttp
add
xchg
dec
adc
mov
sbb
add
(bad)
pop
pop
aas
add
and
push
or
iret
lahf
cmp
shl
add
cwde
sahf
add
cli
and
dec
lock
jbe
out
jbe
aaa
mov
stc
sub
add
mov
add
add
lea
sbb
cmp
or
add
push
adc
(bad)
jne
clc
std
or
shl
enter
(bad)
or
fnstenv
adc
adc
std
fisttp
lock
or
or
add
add
ror
xor
add
call
aas
and
add
and
jle
cmp
xchg
je
add
js
push
xchg
push
push
pop
sbb
icebp
fidiv
clc
cmp
add
imul
test
push
fisub
imul
div
psubusw
dec
xor
xor
add
sbb
jne
xor
mov
xor
mov
aad
add
adc
add
and
sbb
sbb
jnp
in
add
dec
call
dec
add
popf
lock
out
xor
adc
inc
into
and
mov
push
add
cmp
cwde
sahf
enter
fimul
adc
jnp
pop
jne
xor
xor
imul
add
hlt
push
cld
(bad)
not
push
mov
in
inc
addr16
cmps
jmp
jnp
sub
fnstcw
aaa
sub
add
jmp
adc
push
or
cmps
and
pushf
xchg
retf
fwait
xchg
scas
or
sub
push
int
aam
mov
cwde
in
sbb
sub
push
aad
push
daa
push
stos
lods
jo
sar
add
stos
xor
push
add
push
inc
mov
sbb
xlat
lock
xor
ins
fisttp
dec
mov
mov
inc
or
(bad)
rcr
into
sahf
mov
in
lds
rol
sbb
add
and
retf
push
or
xchg
add
or
inc
push
sbb
jnp
shr
push
pop
sub
mov
xor
cmps
test
sub
loop
mov
xchg
retf
jp
adc
jl
add
jne
test
out
fisub
cwde
mov
cmp
std
lods
push
in
sub
fild
lods
jne
pusha
and
xchg
mov
adc
fs
push
adc
inc
pop
cwde
inc
or
ins
pusha
sub
test
mov
clc
cld
pop
fcomp
and
adc
mov
pop
or
mov
xlat
xchg
inc
jno
and
or
(bad)
pusha
and
and
jb
call
adc
ret
xor
fisubr
clc
adc
pop
inc
or
inc
ins
adc
xchg
adc
or
int
cmps
adc
cmp
outs
push
rcr
and
and
ins
arpl
int
pop
or
js
push
pop
enter
in
and
mov
adc
xchg
(bad)
mov
shr
xor
add
inc
inc
or
jno
push
daa
lods
imul
das
add
aad
or
test
mov
cmc
push
cwde
push
sub
dec
dec
(bad)
dec
and
pop
inc
xchg
mov
push
push
xchg
pop
mov
popa
mov
cwde
clc
sbb
lods
popa
cmp
push
and
inc
xchg
rol
rol
pop
dec
sbb
fs
cmp
jne
or
or
loope
or
jle
jg
add
mov
es
push
mov
pop
add
add
add
cs
sbb
retf
pop
cmps
jns
mov
mov
push
mov
or
pop
cli
cmps
jns
sbb
sbb
push
sbb
sbb
mov
mov
retf
mov
mov
push
add
sbb
sub
push
ror
outs
shr
mov
pop
sub
out
mov
sbb
pop
xchg
lods
or
pop
fisttp
sbb
mov
cmp
add
xchg
out
dec
clc
gs
call
push
cmp
mov
inc
dec
sub
sbb
jno
stos
cdq
inc
pop
or
pop
(bad)
mul
cmps
rol
push
inc
dec
mov
cmc
in
add
sub
mov
scas
xchg
add
fs
fistp
and
call
sub
push
pop
outs
sti
push
(bad)
sub
jmp
rol
sti
mov
sbb
jb
retf
and
rcr
(bad)
(bad)
cmp
test
imul
popa
add
mov
inc
jo
js
sub
mov
in
les
shl
dec
xchg
int3
jmp
sbb
ror
aaa
xchg
sbb
add
xchg
aam
sub
push
mov
push
in
xchg
rep
and
mov
push
lock
add
cmp
popa
add
cmp
pop
or
shr
ret
clc
ror
mov
jb
popa
and
aad
mov
add
xchg
sbb
xor
cmp
dec
push
add
mov
push
or
xchg
mov
or
adc
adc
iret
mov
mov
push
adc
adc
add
push
sbb
aad
lahf
mov
call
outs
sbb
inc
sub
or
push
ror
sub
aad
dec
or
rcl
jmp
inc
mov
add
sub
pop
loope
(bad)
pop
sub
push
add
dec
cwde
ins
pop
inc
cmc
xor
sbb
pop
data16
xlat
inc
or
adc
(bad)
lods
push
dec
push
or
movs
mov
sbb
in
sbb
xor
pop
(bad)
es
pop
and
mov
push
test
in
adc
jne
shl
adc
add
jle
pop
adc
call
adc
data16
add
fucomp
outs
mov
imul
push
or
(bad)
mov
push
push
fbld
std
pop
lods
ja
lea
mov
inc
sbb
loopne
dec
ss
shr
sbb
jmp
cld
mov
mov
mov
jl
pop
test
mov
sbb
rcl
pop
dec
cmp
call
mov
and
mov
addr16
(bad)
inc
dec
pop
out
adc
mov
sbb
xor
sbb
aas
ss
cmp
push
jne
mov
and
xor
cli
clc
mov
lea
lods
sub
mov
cwde
ret
(bad)
fdivr
movs
cmp
pop
shl
jne
mov
pop
adc
imul
hlt
mov
xchg
hlt
test
jae
mov
jecxz
push
mov
lds
push
shr
cmp
pusha
push
mov
mov
les
fwait
clc
fs
mov
jmp
sub
test
fwait
adc
jp
pop
pop
jmp
dec
add
adc
ret
add
or
mov
mov
bound
dec
int
lock
mov
inc
test
jae
add
push
jne
fucomi
mov
pop
pop
push
or
add
fbstp
fsubr
cmp
jne
mov
in
lahf
ret
test
add
int
inc
or
data16
or
shl
xchg
add
mov
out
pop
pop
inc
cmp
lea
movzx
dec
mov
push
mov
mov
add
inc
add
add
enter
ret
add
jne
les
or
iret
pusha
add
and
mov
dec
push
jae
imul
or
or
or
ins
fild
xchg
dec
or
dec
dec
pop
enter
dec
inc
add
loop
call
cld
mov
cmp
cld
add
mov
mov
fmul
sbb
or
pop
add
or
das
sbb
div
in
or
push
popa
add
cli
or
or
popa
sub
sti
std
push
jns
sub
jb
adc
jl
ret
jbe
add
imul
jnp
hlt
xchg
jnp
popa
in
or
sub
add
pop
sub
iret
mov
add
movs
int3
pop
jmp
push
adc
retf
inc
pop
push
or
sbb
jo
push
push
mov
inc
xor
clc
add
and
shr
adc
add
ins
cmp
je
cmp
jmp
pop
(bad)
test
dec
add
pop
ins
out
mov
pop
(bad)
xor
inc
or
cmp
add
cdq
dec
push
jno
loopne
jo
lock
clc
(bad)
xchg
dec
sub
xchg
add
js
add
mov
jno
jne
call
sbb
in
loope
lock
(bad)
or
aam
adc
dec
xor
xor
imul
jnp
mov
mov
add
clc
jge
sbb
movs
fs
add
mov
xlat
call
xchg
adc
jnp
std
jp
or
cmp
pop
pop
pop
call
lods
adc
fiadd
add
inc
adc
sbb
sbb
xchg
inc
ins
sar
sub
data16
cs
push
and
adc
add
ret
js
or
and
xchg
adc
jmp
mov
push
or
inc
pop
pushf
add
jmp
mov
or
fsub
inc
mov
and
(bad)
aad
mov
aam
xchg
add
add
mov
pop
inc
inc
xor
loop
shl
mov
and
sub
xor
mov
fbstp
rol
fs
push
sbb
gs
push
shl
sub
or
sub
add
or
pop
in
adc
xor
push
jns
loopne
call
sbb
jmp
imul
dec
or
outs
pusha
inc
or
cmp
aas
arpl
ror
mov
ins
js
das
mov
hlt
jg
and
add
dec
jne
mov
pop
pop
pop
addr16
cwde
and
push
scas
mov
push
adc
adc
retf
push
daa
sbb
(bad)
adc
sbb
pop
jle
sub
hlt
jbe
inc
adc
cwde
mov
or
sub
cmps
mov
daa
(bad)
fstp
stos
xchg
in
aas
or
adc
adc
push
fs
lea
js
xchg
mov
movs
dec
xor
pop
and
pop
mov
or
or
and
cmp
add
pop
dec
test
leave
adc
xchg
add
cmp
dec
loope
test
mov
sbb
mov
daa
mov
add
add
loopne
or
fcomp
cs
xor
adc
icebp
mov
sbb
xor
xor
shr
call
dec
sahf
inc
jp
cmps
lods
inc
inc
sbb
fidivr
fiadd
ds
add
add
mov
inc
loope
add
cmp
pop
(bad)
jne
ror
es
loop
xchg
push
pop
or
mov
fmul
fadd
dec
clc
or
add
or
xchg
xchg
data16
pop
pop
(bad)
(bad)
into
mov
test
add
sub
repnz
inc
push
or
test
mov
inc
jbe
mov
push
call
(bad)
mov
dec
add
out
dec
adc
je
and
xchg
stos
mov
sub
sti
xchg
js
push
mov
lahf
jnp
mov
and
inc
loopne
enter
push
add
ret
clc
mov
ins
push
fsub
mov
pusha
jb
bound
aad
or
inc
test
add
mov
dec
add
fisttp
mov
fnstcw
cmps
loope
rol
push
or
xor
add
or
lea
sub
sbb
mov
pop
jge
jmp
pop
mov
shr
or
and
adc
add
sub
fld
mov
add
cmps
add
add
jge
ret
pop
and
clc
fsub
push
lock
ret
dec
clc
mov
ins
push
fadd
pop
cmp
mov
xchg
sub
pop
fistp
daa
std
sbb
or
dec
movs
nop
ror
inc
mul
inc
enter
jne
lahf
adc
adc
lea
add
lea
(bad)
dec
pop
test
enter
push
inc
adc
imul
cmp
mov
shl
xchg
sbb
xor
cmp
sub
add
add
cmp
xchg
push
sbb
or
sbb
dec
sti
push
or
imul
mov
add
add
and
test
xchg
jp
add
cmp
mov
or
xchg
lock
add
mov
scas
leave
adc
inc
mov
sub
fld
xchg
daa
mov
cmovne
lock
retf
push
rol
stc
ror
ror
inc
enter
and
jbe
je
push
repnz
inc
into
clc
inc
sub
shl
ret
or
jg
inc
adc
xor
fild
add
xchg
(bad)
jle
bound
and
and
scas
and
hlt
pusha
sti
in
jo
xor
(bad)
mov
sar
sbb
cs
push
adc
inc
lock
inc
and
aas
dec
or
inc
cmp
outs
or
or
js
xor
adc
leave
sbb
test
jge
retf
xchg
loope
jo
movs
cmp
pop
add
leave
push
dec
add
add
xor
pop
add
add
fisub
jge
mov
or
rcl
ja
lock
ret
and
cs
test
mov
mov
dec
daa
jne
pop
movs
mov
push
movs
push
xchg
or
rcl
aad
pop
adc
or
fmul
cwde
inc
mov
jg
sub
jo
cmp
add
enter
pop
popa
sub
pop
pop
jno
lock
xor
add
add
xchg
sbb
fdivr
pop
inc
imul
sbb
xor
cwde
inc
cmp
shr
retf
inc
iret
xor
push
inc
pop
sar
aam
add
movs
test
inc
add
sbb
nop
(bad)
cmp
inc
popa
lds
enter
les
mov
lds
aad
pop
scas
pop
test
dec
js
dec
add
je
push
adc
mov
not
test
int3
(bad)
stos
add
popa
add
add
xchg
dec
mov
nop
in
(bad)
push
xchg
rcl
pop
jns
cwde
cmp
fwait
dec
shl
cmp
push
data16
cmp
cld
push
and
pop
or
push
dec
push
push
xchg
pop
test
aas
cmp
lock
mov
ins
push
ret
or
sub
ins
sub
fadd
clc
push
outs
or
xor
aam
sbb
inc
xor
push
(bad)
pop
lods
int
fimul
sub
add
dec
push
mov
rol
pop
rcr
sbb
inc
dec
or
mov
cwde
pop
and
mov
cmps
shr
cmp
jo
adc
dec
sbb
add
ror
imul
in
daa
sub
mov
ins
jnp
sub
hlt
add
mov
lock
shl
test
mov
inc
retf
mov
mov
mov
pop
cmp
adc
mov
call
shr
or
jb
lock
jo
push
loopne
mov
push
add
sub
es
imul
sub
push
imul
add
sub
sbb
inc
repz
push
fcomp
add
pop
jne
sar
dec
inc
mov
jle
lea
xchg
jbe
pop
sbb
add
data16
jne
pop
pop
add
or
addr16
or
mov
leave
aad
add
add
add
add
xor
pop
popa
pusha
push
dec
adc
cmps
jbe
mov
dec
pop
neg
mov
lea
jo
adc
jae
and
and
or
mov
inc
and
fmul
and
repnz
shr
inc
call
cmp
shr
add
jecxz
or
mov
mov
mov
mov
and
mul
mov
pop
ret
shl
push
jae
mov
adc
mov
cld
add
jmp
pop
addr16
lea
test
adc
lea
dec
inc
add
or
mov
sub
xchg
xchg
dec
push
lds
stos
lods
or
push
mov
push
mov
jno
mov
or
inc
or
push
mov
out
ja
jo
add
and
fstp
jne
pop
ja
add
call
inc
mov
lock
mov
jae
pop
xchg
pop
addr16
js
not
fld
or
mov
push
mov
popa
add
inc
leave
int3
adc
ret
mov
retf
lea
retf
pushf
popf
out
aad
push
ds
fwait
xor
movs
dec
add
mov
and
pusha
int3
push
retf
or
or
jmp
cmp
mov
pop
pop
leave
sub
cmp
or
retf
pop
xor
in
mov
fdiv
add
sbb
add
push
xchg
ss
inc
mov
inc
clc
adc
add
sbb
push
sub
push
call
sbb
sub
sub
add
sbb
pop
mov
mov
adc
sbb
push
pop
cmps
cmp
lea
cld
add
and
dec
sbb
retf
dec
add
adc
xchg
add
add
add
mov
xchg
and
imul
jne
add
jmp
repnz
loop
mov
xor
xchg
xchg
add
or
pop
and
out
xor
or
add
jae
xor
jmp
cld
pop
xchg
mov
sub
add
mov
sar
ret
jle
push
rol
sub
add
and
sbb
shr
or
jbe
(bad)
dec
cmp
sub
sub
in
pop
sub
xor
adc
sbb
push
adc
pop
mov
xchg
mov
pop
test
jne
aaa
lods
pop
lods
inc
sub
aas
nop
iret
add
punpcklbw
jg
fsub
or
fisttp
clc
cmp
pop
pop
(bad)
cs
jae
xchg
and
inc
mov
add
mov
mov
push
call
ja
adc
pusha
jb
push
inc
daa
shl
and
mov
add
sbb
sub
cmp
gs
ins
jmp
sub
daa
and
jl
push
xchg
inc
or
pop
push
sub
cmps
scas
pop
shr
sub
xchg
ret
ror
call
cli
adc
cmps
adc
xchg
or
or
mov
xor
ins
test
sar
xor
out
adc
or
sub
je
dec
in
ret
sub
push
xor
xor
jno
push
adc
push
daa
outs
add
enter
xchg
sub
mov
por
mov
les
or
leave
ror
shl
popa
inc
cmp
add
pop
jne
cdq
nop
outs
sub
nop
xchg
or
xor
dec
pop
jne
cmp
or
nop
aaa
iret
outs
clc
pop
sbb
jecxz
mov
call
mov
int3
hlt
and
xchg
mov
add
into
inc
in
xor
xlat
ret
jmp
mov
xchg
xchg
add
aaa
add
dec
add
adc
or
sub
sar
cmps
rol
scas
mov
add
inc
adc
add
xor
mov
xor
stos
sub
repnz
jne
xor
cli
pop
sbb
cmp
jbe
mov
sub
fisub
jge
das
and
adc
adc
das
sbb
and
push
lea
fcom
movs
mov
mov
sub
xor
es
dec
lods
lea
and
mov
jno
dec
mov
or
int
sbb
repz
ins
test
cmps
inc
mov
sbb
jle
mov
mov
loopne
mov
xlat
(bad)
fsub
xchg
pop
mov
cmps
adc
icebp
mov
push
inc
daa
dec
popf
or
retf
adc
add
add
pop
jmp
mov
(bad)
mov
aaa
xor
push
adc
and
out
mov
dec
mov
mov
mov
out
pop
cs
push
in
scas
mov
mov
scas
nop
shl
and
fadd
push
ins
add
add
popa
lea
in
adc
js
xor
fsubr
imul
pop
dec
inc
stos
or
or
cmp
mov
popa
push
sbb
aam
sbb
xchg
xor
sbb
imul
and
pop
mov
cdq
xor
mov
add
mul
push
mov
push
and
push
push
adc
int3
sub
mov
loopne
dec
and
add
enter
pop
mov
sub
jae
push
bound
adc
ret
sbb
das
or
lea
inc
lods
inc
(bad)
push
and
sbb
add
adc
adc
push
push
mov
sub
frstor
jecxz
or
or
xchg
add
addr16
mov
fmul
mov
adc
sbb
loopne
and
inc
shl
ins
push
mov
and
adc
hlt
push
iret
sub
inc
dec
jmp
call
rol
clc
inc
sub
mov
loopne
ja
mov
sub
movs
or
cmp
push
jge
je
cmp
test
test
je
fisttp
jecxz
jae
xor
sbb
add
ins
ror
push
mov
into
add
ror
rcr
loope
addr16
mov
retf
or
or
mov
jg
inc
mov
adc
add
xor
pop
call
pop
adc
pop
sbb
pop
pop
jl
leave
sahf
test
or
add
inc
ror
sbb
enter
cmp
mov
retf
jo
dec
adc
enter
mov
add
mov
cmc
adc
cmp
pop
fmul
pop
loopne
ret
sbb
sbb
out
mov
repnz
push
jecxz
add
and
mov
iret
add
pusha
mov
sbb
push
neg
popa
add
mov
add
or
push
sub
je
sub
pop
cmp
popa
add
xlat
cld
sbb
pop
mov
pop
inc
cmp
nop
shl
sub
cmp
repz
jl
mov
sbb
mov
or
xor
xor
pinsrw
call
clc
lds
call
or
dec
and
pop
xor
nop
xchg
push
and
xchg
add
dec
mov
push
xor
add
jbe
xchg
imul
ins
or
mov
or
add
and
stos
mov
or
jb
or
mov
or
push
add
add
push
add
xchg
sub
jl
(bad)
pop
adc
mov
shl
or
and
sub
and
ss
lods
sbb
add
scas
lods
mov
fdiv
mov
sub
adc
das
fdiv
adc
jmp
push
or
and
sub
mov
sbb
into
pop
outs
sbb
xchg
sbb
int3
fcmovu
dec
sub
add
or
pop
jmp
out
pop
dec
in
sub
inc
or
push
cmp
cmp
rol
push
push
adc
sub
jge
sti
xor
adc
mov
jns
push
pop
enter
rcr
popa
add
imul
push
pop
lds
xchg
in
imul
stc
push
mov
icebp
cmp
cmps
jo
test
dec
and
xchg
or
stos
xor
xchg
js
cdq
ins
mov
cmp
jl
dec
mov
fxch
popw
enter
sbb
(bad)
rol
cmp
mov
bt
jae
ds
cwde
dec
(bad)
add
clc
enter
data16
and
xchg
jmp
aad
out
add
inc
shl
add
sahf
mov
or
adc
dec
push
cmp
je
and
push
lock
jne
push
cmp
dec
ja
adc
xchg
sbb
pop
add
outs
popa
cmp
je
movs
int
inc
lahf
mov
lahf
(bad)
pusha
and
icebp
fsubp
xchg
stc
dec
or
adc
cmp
sub
dec
ins
(bad)
adc
das
adc
inc
adc
cli
shl
nop
dec
sub
frstor
sti
clc
fisub
test
add
cmps
sti
pop
add
xchg
sbb
es
jge
cmp
mov
fprem1
push
cmps
std
jb
shl
sbb
jmp
stos
xchg
lods
mov
lea
mov
shl
jnp
test
jnp
test
dec
jae
aam
lods
test
mov
and
dec
add
xchg
hlt
sub
cld
jle
push
in
fstp
add
pop
add
fadd
repnz
add
inc
clc
dec
adc
inc
jb
inc
sbb
xchg
pop
mov
jmp
and
mov
xor
jge
and
jmp
lock
stos
movs
lock
or
mov
xchg
(bad)
lea
and
icebp
lea
js
sub
cmp
xchg
dec
ja
xor
add
pop
cmp
lea
sub
pop
mov
add
and
xchg
mov
dec
xor
sub
add
sbb
sbb
adc
or
int3
push
out
mov
bound
or
push
sbb
sahf
loope
cld
lea
mov
or
sub
les
cwde
push
movs
loope
sbb
mov
ds
in
mov
pop
shr
adc
mov
loop
outs
or
addr16
rcl
sbb
fld
push
lea
lock
sbb
adc
add
xchg
fcom
mov
mov
pop
rcl
add
ins
or
sbb
loopne
jne
movs
mov
inc
lock
dec
mov
aas
jmp
inc
adc
retf
les
arpl
mov
push
and
mov
push
call
leave
fdiv
adc
fstp
fwait
and
jge
fwait
sub
sbb
in
fsub
add
sbb
jnp
xchg
pop
imul
jnp
mov
(bad)
nop
or
cli
fdiv
rcl
jle
adc
sub
ins
in
sbb
add
or
fdivr
fcom
or
xor
dec
jg
pop
pop
sub
sti
xchg
jne
pop
xor
(bad)
ret
sbb
add
pop
cmp
test
sbb
sbb
lods
outs
inc
test
push
add
jmp
test
mov
mov
aaa
in
sbb
inc
je
inc
mov
add
(bad)
xor
cmp
and
(bad)
push
movs
imul
mov
pshufw
dec
adc
jmp
jmp
mov
int3
inc
mov
mov
retf
sbb
add
stos
or
and
or
inc
dec
jne
xor
sub
adc
pop
sbb
sub
xchg
addr16
add
mov
lods
pop
stc
pop
or
dec
test
or
mov
outs
ror
dec
dec
add
adc
dec
mov
out
xor
aas
add
test
mov
(bad)
or
bound
adc
in
fwait
sbb
push
sbb
xchg
jnp
rol
(bad)
in
dec
or
ja
cmp
bound
ror
ret
mov
or
dec
sub
push
(bad)
jmp
push
add
scas
xor
inc
pop
mov
jmp
test
das
add
sub
test
in
or
push
pop
cld
popa
fsub
xchg
je
xor
mov
adc
xor
or
xor
out
and
inc
daa
ja
mov
or
push
adc
and
mov
add
sub
je
pop
mov
dec
jecxz
mov
iret
cmp
sub
add
xchg
mov
push
ror
or
mov
sbb
sbb
(bad)
arpl
and
sub
lds
fld
leave
paddb
fsubrp
pop
jo
jno
imul
mov
call
(bad)
mov
cmp
jle
mov
push
and
out
xchg
push
or
push
or
push
add
xchg
daa
dec
sub
push
adc
xor
jmp
enter
test
add
outs
pop
push
jne
test
test
data16
cmp
sbb
xchg
or
xor
push
fsub
sub
nop
mov
sub
mov
(bad)
sbb
or
inc
jne
sbb
push
aas
(bad)
scas
jmp
mov
inc
push
fild
arpl
sbb
add
add
mov
mov
xchg
lock
fwait
mov
xchg
out
or
out
or
dec
dec
leave
mov
test
mov
fsub
cmp
mov
mov
scas
xchg
add
inc
mov
xchg
std
mov
sub
pop
clc
adc
ins
push
sbb
lahf
sub
xor
rcr
rcl
push
mov
ret
cmp
or
sti
gs
dec
fdiv
enter
lods
xchg
xor
xchg
cmp
xchg
jno
dec
js
cs
push
pop
mov
cwde
and
test
(bad)
lock
mov
imul
dec
imul
loop
div
dec
push
in
jne
rol
js
sub
cdq
mov
jle
pop
push
adc
push
add
adc
push
xchg
add
mov
jge
scas
rol
sbb
pop
imul
daa
or
push
ja
sbb
sbb
xor
inc
sbb
or
jne
clc
outs
call
mov
cmp
cld
adc
push
adc
jne
jmp
mov
les
adc
or
or
test
mov
(bad)
dec
pusha
(bad)
or
div
cmp
push
jl
push
push
add
fsub
in
or
xchg
in
jb
outs
and
ret
div
aam
pop
sti
push
mov
jae
inc
outs
push
jnp
jb
adc
ja
add
mov
add
jmp
dec
ss
xor
nop
mov
shl
inc
push
into
test
mul
mov
les
pop
push
dec
shr
mov
mov
sti
sub
dec
jp
enter
(bad)
inc
xchg
mov
fs
mov
inc
sub
xor
push
and
test
mov
cmp
ret
and
clc
call
ret
inc
ret
mov
daa
mov
cmp
dec
push
mov
add
shr
and
mov
popa
out
add
jmp
xchg
add
ins
inc
mov
cmp
inc
inc
stos
push
(bad)
test
retf
retf
(bad)
add
sub
push
xchg
mov
adc
mov
mov
mov
stc
pop
mov
adc
mov
sbb
mov
je
and
std
cld
stos
test
adc
cld
inc
ins
test
fxch
inc
xor
lea
dec
push
loopne
mov
loopne
xchg
add
pop
sbb
jno
popa
sbb
and
popa
mov
shr
xchg
mov
add
outs
adc
pop
inc
iret
rcl
sar
add
enter
add
adc
enter
popa
cdq
add
inc
or
sub
shr
xchg
or
ret
cdq
xchg
cmp
inc
daa
icebp
es
inc
call
inc
xlat
aaa
cs
test
cmp
mov
les
mov
sbb
mov
sbb
call
pop
add
jmp
lea
push
push
sbb
sbb
dec
lea
call
mov
jmp
push
xor
xchg
jge
jnp
cmp
xchg
popa
test
in
cs
hlt
sbb
ret
push
push
push
mov
js
cmp
popf
cmovno
mov
ret
dec
aam
cmps
add
cmps
addr16
xor
jns
movs
daa
test
test
hlt
cmp
and
sbb
sub
gs
push
adc
jl
in
mov
xchg
xchg
sbb
movs
js
push
jne
inc
in
mov
or
sti
jle
cmp
aaa
lea
call
mov
mov
mov
dec
pop
dec
fsub
je
dec
adc
and
adc
fsubp
mov
xor
je
jne
es
add
mov
xor
stc
aam
test
aam
shl
pop
sbb
lds
mov
mov
pop
enter
push
adc
mov
in
fld
lea
outs
enter
movs
lods
cmp
add
jno
and
jg
ficom
cmp
mov
mov
cmp
fidiv
test
sete
inc
lea
(bad)
outs
cmp
push
in
sub
mov
cmp
ret
inc
and
loopne
inc
push
call
dec
(bad)
dec
in
mov
nop
jno
dec
dec
adc
lahf
repz
mov
add
xor
push
je
std
(bad)
(bad)
jnp
xor
and
mov
or
adc
loop
imul
imul
dec
cmp
push
mov
scas
das
arpl
add
test
xchg
inc
add
fld
stos
push
ror
pop
iret
imul
es
jl
aaa
and
enter
rol
aam
sahf
pop
inc
lock
pop
dec
xor
dec
and
xor
inc
outs
mov
and
or
and
dec
addr16
or
cli
mov
mov
nop
into
aaa
dec
sub
pop
adc
pop
or
xlat
imul
fbstp
mov
lock
clc
ja
das
xchg
in
(bad)
fs
aas
jbe
ins
(bad)
sub
leave
pop
jmp
xor
add
add
lock
push
and
xchg
fimul
adc
movs
xor
std
or
pop
jno
int3
mov
rcr
(bad)
ret
or
cmp
push
pop
out
test
inc
add
add
dec
jns
cmc
outs
jmp
cmp
jb
pop
in
cmp
or
test
mov
iret
or
add
pop
adc
or
pop
int
mov
sbb
xor
fadd
xchg
dec
add
mov
mov
xor
mov
sbb
or
xchg
cmp
jne
mov
mov
adc
push
ja
adc
mov
stc
or
pop
or
mov
out
mov
push
push
push
pop
mov
jmp
mov
loop
scas
inc
test
aas
add
sub
jmp
stc
cwde
mov
add
add
add
cmp
adc
jmp
pop
stos
jle
xchg
je
cmps
sub
pop
mov
nop
push
repz
shr
std
mov
popf
pop
addr16
add
pop
movs
mov
cmc
call
push
jnp
xchg
test
sub
xor
jmp
test
mov
int3
cmp
push
pop
daa
jo
adc
add
cmp
loopne
add
add
adc
call
adc
mov
jge
push
adc
repz
movs
mov
pop
cmp
sbb
mov
js
cld
add
(bad)
push
inc
jmp
pop
ss
dec
xor
sbb
and
dec
jmp
mov
ja
add
add
sahf
push
or
jg
ret
cmp
ins
jae
pop
xor
test
adc
adc
jo
pop
push
sbb
or
dec
inc
lds
lock
jo
enter
clc
and
hlt
fild
adc
or
and
push
lock
lea
hlt
test
jmp
dec
jmp
test
sub
sub
aam
xlat
inc
mov
es
mov
test
inc
test
and
mov
or
cmovl
inc
adc
iret
icebp
xor
aas
and
in
jne
sar
mov
pop
adc
ret
mov
test
jns
add
cmp
nop
xor
or
sub
inc
push
add
jno
test
inc
(bad)
into
rcr
dec
adc
inc
add
fsub
mov
in
retf
xor
jnp
(bad)
jl
test
push
jmp
pop
cmp
sbb
add
dec
jne
dec
mov
sub
rep
nop
or
push
push
xchg
ja
fistp
push
je
or
call
add
xor
pop
ret
mov
lods
dec
(bad)
adc
pop
sub
fbstp
repz
mov
dec
push
loope
dec
xchg
lock
mov
cld
sub
adc
inc
dec
jne
clc
movs
pop
or
(bad)
add
add
xchg
dec
inc
cmp
dec
sub
mov
push
test
dec
ds
invd
push
cld
(bad)
pop
sbb
aam
btr
jmp
adc
inc
inc
dec
es
or
mov
adc
out
xor
je
lds
clc
inc
enter
leave
mov
or
bound
pop
sbb
pop
xchg
mov
dec
sub
call
jne
jb
or
cmp
jmp
sbb
cmps
adc
test
jno
cmp
mov
hlt
ret
mov
adc
bound
inc
add
outs
pop
and
pop
xor
mov
ret
cmps
xchg
les
mov
mov
inc
dec
and
mov
or
xchg
(bad)
or
sar
mov
pop
out
add
or
inc
rcl
or
dec
push
cmp
mov
push
leave
cmp
and
pop
fsub
inc
out
inc
icebp
dec
jp
aaa
lock
jae
or
out
lods
je
adc
adc
sub
jo
sub
cmc
push
inc
mov
cmc
inc
in
pusha
add
aam
test
xchg
adc
dec
stos
mov
in
add
push
push
dec
add
cmp
inc
xor
test
shl
dec
in
aaa
jl
sbb
shl
inc
imul
cmp
mov
out
fucomip
leave
xor
ret
inc
lock
imul
pop
popa
pusha
out
dec
cs
arpl
out
out
add
and
out
(bad)
loop
cwde
cmp
mov
add
add
lock
lea
pop
fdivr
or
xlat
nop
xor
pop
xchg
jmp
push
add
jae
sub
push
or
add
pop
add
push
adc
cmps
lock
add
jo
test
loopne
mov
call
xor
mov
adc
sub
pop
jo
and
or
xlat
push
and
inc
ret
cmp
push
inc
sahf
push
imul
pusha
lods
mov
out
bound
cwde
mov
movs
stc
mov
pop
add
mov
mov
inc
pop
loopne
cmp
mov
adc
lods
inc
adc
fdivr
mov
adc
loopne
xor
cld
pop
adc
and
popa
or
add
add
imul
mov
xadd
shr
ja
dec
fmul
or
or
rol
fiadd
daa
adc
push
call
xchg
call
cwde
rcpps
push
push
call
add
push
retf
jo
enter
rcr
mov
gs
test
push
je
pop
add
jp
or
jmp
mov
clc
sahf
retf
inc
add
inc
pop
dec
adc
or
in
les
sbb
mov
popa
xor
cmp
fs
add
les
dec
mov
dec
ins
repz
mov
icebp
lock
aam
push
add
aam
leave
pop
out
and
adc
(bad)
pop
mov
dec
outs
pop
inc
cs
dec
dec
aam
mov
(bad)
repnz
adc
adc
inc
push
clc
pop
pop
hlt
pop
fsub
mov
cmp
sbb
mov
aam
mov
imul
jo
xchg
imul
aad
mov
inc
jmp
mov
mov
jl
arpl
es
jl
or
dec
ja
dec
call
sti
hlt
in
mov
ja
and
xor
add
or
dec
repz
adc
dec
daa
sbb
test
and
jb
bound
mov
loopne
inc
adc
lock
pushf
fsub
sub
inc
sub
aas
repz
inc
test
stos
sbb
mov
lock
clc
mov
test
cmps
mov
mov
jle
or
pop
adc
inc
sbb
inc
sbb
test
mov
nop
dec
clc
repz
inc
jb
or
or
jne
and
in
mov
shr
lods
add
push
or
repz
dec
mov
cwde
dec
sub
mov
pop
repnz
mov
rcl
or
fsub
call
dec
idiv
mov
adc
push
adc
jno
leave
sub
mov
pop
xor
fld
jg
dec
stos
add
xchg
mov
mov
cld
or
adc
stc
in
pop
pop
rol
mov
add
dec
adc
xchg
dec
imul
icebp
jb
push
shr
shr
or
inc
or
sub
sbb
test
xor
mov
xor
xor
sub
(bad)
rol
pop
std
mov
maxps
fiadd
cwde
es
das
cli
push
sbb
inc
add
mov
push
fdiv
adc
xor
inc
inc
loope
add
inc
push
sbb
and
and
jecxz
mov
data16
inc
inc
fsub
ja
jae
popa
pop
add
inc
leave
or
inc
inc
test
daa
jmp
push
stos
xor
aas
mov
pop
ins
std
js
inc
fsincos
mov
jo
add
data16
push
jne
je
push
ja
das
inc
dec
add
aaa
dec
mov
and
retf
add
pop
pop
movs
add
jge
or
cmp
stos
inc
cmp
or
adc
fidiv
push
shl
mul
jmp
push
repz
sbb
pop
sub
inc
jne
ins
in
mov
jge
push
adc
cmp
or
jb
hlt
or
stos
jne
adc
push
nop
or
add
sub
pop
push
jbe
sbb
xor
mov
cmp
mov
(bad)
or
or
cmp
inc
pushf
aaa
fild
xchg
das
fmul
pop
loop
sub
les
mov
jl
jbe
push
bound
push
cmps
xchg
lock
inc
and
ins
lahf
mov
sub
sbb
push
push
shr
pop
sti
sbb
sbb
ja
sub
push
push
sbb
mov
mov
cmp
pop
and
inc
jnp
dec
clc
icebp
xor
scas
sub
dec
nop
push
(bad)
jae
in
(bad)
inc
cmc
jbe
cmp
clc
and
inc
sub
mov
das
stos
cli
aaa
jp
(bad)
cmp
jo
popa
ins
and
pop
cs
cmp
ins
outs
outs
je
dec
mov
sbb
cmp
icebp
pop
pop
inc
loope
cs
mov
inc
scas
popf
add
push
adc
dec
mov
mov
sbb
or
push
pusha
outs
fsubr
inc
or
cmp
sti
inc
dec
aad
popa
mov
add
pop
xlat
test
xchg
push
or
jb
mov
sub
or
out
push
and
push
lods
push
push
mov
mov
jne
xor
in
xchg
adc
out
xchg
bound
sbb
sbb
loop
inc
cmps
add
jmp
mov
adc
or
adc
or
mov
dec
sub
ret
adc
loopne
dec
inc
xlat
gs
sub
xor
shrd
push
ss
stos
and
push
dec
cmp
inc
or
or
cmp
dec
push
adc
or
adc
ja
cmp
popa
sbb
and
sbb
push
sub
mov
lods
bound
rol
xchg
lods
mov
nop
inc
fwait
pop
jo
or
cmp
adc
xchg
add
xor
mov
push
jo
ret
loope
sub
or
loope
and
push
aad
aaa
adc
push
push
cmp
inc
movs
mov
jge
cwde
sub
aam
mov
or
mov
movs
scas
xchg
dec
push
mov
movs
imul
ror
and
push
out
ds
or
pop
inc
adc
pop
scas
xchg
mov
or
xchg
push
in
mov
mov
cmp
pop
test
add
mov
inc
aas
test
je
jp
push
je
fcomp
mov
add
inc
mov
mov
mov
(bad)
es
and
call
jl
fldcw
add
mov
mov
push
pusha
add
movs
xchg
int3
mov
das
adc
push
sbb
adc
mov
bound
pop
jnp
or
dec
ins
mov
adc
sub
inc
or
or
mov
add
pop
add
and
test
or
add
push
mov
out
or
mov
mov
mov
clts
call
inc
pusha
and
mov
pop
sub
or
shl
sub
push
pop
inc
test
and
sahf
mov
jbe
sub
and
mov
sbb
pop
mov
fcmovb
nop
cmp
push
mov
imul
mov
or
fdiv
push
(bad)
push
and
pop
sbb
jae
push
add
add
in
and
aas
adc
daa
adc
loopne
sbb
cmps
test
xor
aad
nop
aad
adc
add
sub
cmp
idiv
push
and
jle
add
xchg
add
add
mov
push
xchg
jb
dec
jmp
lock
add
and
sbb
je
lock
xor
add
leave
mov
fild
add
fdivrp
or
rcr
in
pop
mov
test
mov
je
mov
shl
xchg
iret
adc
or
sub
test
shl
sbb
add
jo
jecxz
xor
mov
imul
jg
pop
movs
or
enter
leave
sbb
ret
or
mov
ss
or
push
pop
pop
sbb
sbb
xor
and
or
xor
ud1
mov
popf
mov
loopne
add
sbb
jl
mov
cwde
cwde
jne
mov
push
ret
inc
sub
outs
adc
or
push
test
mov
pop
cdq
dec
(bad)
out
and
xchg
pop
sub
test
out
(bad)
jmp
rcr
add
mov
or
xchg
mov
cli
std
and
add
sti
mov
jmp
dec
ds
retf
add
and
das
fistp
imul
les
and
xor
adc
mov
clc
dec
adc
adc
fisttp
push
pop
rcr
(bad)
dec
xor
sbb
jle
pop
in
call
add
add
push
and
mov
lock
sbb
add
lea
inc
cmp
lock
adc
inc
pop
inc
rol
xchg
test
loopne
and
inc
inc
rol
lea
sbb
es
call
pop
push
adc
push
cmp
or
scas
push
loopne
fistp
xchg
call
sbb
test
js
clc
jge
test
xchg
lahf
sub
enter
cmc
inc
sub
xchg
or
inc
xchg
xor
mov
mov
mul
sbb
xor
fild
fnstcw
jmp
shl
push
sub
xchg
and
and
dec
dec
arpl
adc
push
ds
xor
movs
sub
and
lea
inc
adc
push
cmp
rol
out
and
push
imul
add
lods
mov
adc
scas
dec
dec
test
inc
and
or
js
sbb
mov
in
cmp
fadd
je
xor
mov
xchg
fsubr
movs
sbb
aas
mov
loope
add
cld
jle
test
sub
sbb
lock
adc
and
adc
fld
test
mov
js
and
push
or
mov
popf
add
xchg
(bad)
movs
hlt
push
mov
add
push
and
inc
and
ins
imul
add
hlt
adc
cmp
rol
jb
cmps
loope
lock
test
fnsave
sbb
js
pop
mov
rol
adc
mov
gs
jbe
scas
cli
nop
mov
push
call
inc
aam
int3
adc
inc
push
xor
xchg
adc
add
cmps
add
in
jno
jecxz
sbb
mov
clc
xor
pop
and
add
xchg
icebp
inc
loope
mov
push
ret
push
cmp
(bad)
addr16
fwait
dec
rcr
mov
dec
add
(bad)
movzx
cmps
pushf
and
jmp
inc
mov
and
test
retf
stos
fmul
mov
rol
add
mov
push
sub
inc
test
das
add
dec
pop
inc
mov
or
add
add
pusha
sbb
shl
xchg
scas
xchg
rcr
push
inc
jl
cmp
cli
pop
pop
jnp
or
mov
add
out
call
hlt
cmp
cmc
jge
inc
mov
dec
xchg
jns
sbb
fcom
add
cmp
(bad)
push
dec
xor
add
loop
mov
dec
and
div
and
dec
loopne
mov
movs
xor
cmps
cmps
daa
in
add
test
push
pop
call
mov
aas
rcl
push
dec
or
mov
jne
push
ror
test
lea
and
jno
push
xchg
inc
les
xchg
jecxz
push
or
out
push
xor
inc
pop
sbb
or
fs
dec
pop
rcl
(bad)
push
mov
or
xor
jne
mov
push
int
add
call
add
pop
or
xor
dec
pop
sbb
adc
lock
inc
jo
int3
inc
dec
imul
jne
mov
adc
adc
je
jmp
inc
pop
pusha
cmp
and
push
lods
lock
xor
dec
loope
cwde
pop
loope
cmp
mov
push
mov
cmp
in
sbb
xor
fdiv
add
cmp
hlt
sub
jnp
adc
adc
nop
hlt
jmp
(bad)
or
xlat
lods
add
mov
add
jo
mov
sbb
sub
cmp
xor
js
lods
dec
push
mov
xor
push
add
jmp
inc
lock
pop
cmps
push
enter
mov
add
mov
dec
hlt
ins
xor
popa
mov
pop
lock
mov
jge
jp
add
adc
push
lock
shl
mov
jl
inc
imul
or
mov
cmp
aas
jb
daa
lahf
or
push
sbb
adc
in
lock
test
test
test
aas
clc
jge
push
rcl
mov
ss
inc
fcomp
mov
scas
cmps
je
mov
xchg
cmp
loope
inc
pop
adc
pop
pop
add
inc
sbb
jae
rol
adc
loope
fstp
mul
cmp
shl
pop
add
fisttp
pop
push
je
push
repz
das
test
or
dec
or
outs
push
adc
adc
stc
push
repz
pop
adc
and
pop
xor
ret
out
sbb
sub
jbe
add
xchg
push
sbb
mov
or
xchg
in
sub
ins
jge
fdiv
xor
fadd
inc
add
retf
jl
or
jo
scas
mov
inc
mov
add
push
inc
sub
loope
mov
loopne
sub
dec
call
scas
sbb
or
hlt
mov
mov
push
pop
fild
inc
mov
pop
lahf
lds
mov
in
and
dec
pop
loope
xor
jae
xchg
adc
add
xchg
add
mov
push
xor
aad
sbb
xchg
jne
daa
mov
enter
stos
fcom
xchg
jno
sub
add
pop
test
and
arpl
xchg
sbb
and
adc
jecxz
and
xchg
mov
neg
test
xor
movs
inc
add
(bad)
and
shr
cmp
adc
dec
dec
rcr
pop
ins
and
push
scas
mov
sub
sbb
or
jl
retf
push
shl
aam
pop
test
jp
cdq
(bad)
rol
test
pop
test
add
xor
mov
movs
and
dec
je
aas
test
xor
or
movs
popf
dec
movs
int3
dec
fst
arpl
ret
cmp
lahf
rol
or
enter
lea
icebp
outs
pop
mov
ret
cmp
loopne
sbb
nop
cmps
mov
and
sbb
sti
and
test
lahf
sbb
imul
mov
add
add
ja
cmp
(bad)
icebp
int
cmp
mov
push
mov
and
aam
mov
mov
inc
push
sub
inc
dec
test
adc
lods
mov
sub
les
and
je
mov
lock
push
or
cmp
jne
and
imul
sbb
inc
jnp
ret
iret
ins
xor
mov
mov
xor
out
jae
sbb
and
push
mov
mov
pop
sbb
imul
bound
in
jg
je
cmp
inc
dec
sbb
push
sub
xchg
lock
xchg
xchg
sbb
mov
or
adc
cs
and
jle
xlat
dec
or
jmp
or
aad
push
push
loope
or
push
lock
pushf
pop
add
add
pop
inc
xor
push
icebp
and
in
scas
jg
sub
pop
sbb
sub
ds
and
mov
xchg
mov
rcr
inc
cmp
cmp
jbe
adc
mov
clc
adc
mov
sub
fcomp
xor
mov
mov
clc
and
or
leave
mov
xchg
movs
mov
mov
cld
push
sub
sbb
test
push
pop
jl
sbb
mov
test
dec
or
inc
xor
cld
mov
and
and
xchg
or
int3
pop
retf
add
movups
sar
add
cwde
pop
dec
dec
add
icebp
adc
and
cdq
xchg
je
sub
sub
and
and
popa
inc
and
sbb
pop
and
inc
and
test
push
fcmovnb
pop
rcr
hlt
push
cmp
(bad)
(bad)
jmp
mov
sub
push
test
inc
lds
push
add
stc
add
push
fidiv
push
inc
inc
add
mov
add
mov
push
add
dec
or
outs
add
ret
fcmovnb
shl
arpl
dec
push
jns
mov
adc
inc
cmp
add
xor
jne
mov
mov
dec
mov
ror
lds
xor
cmp
sti
mov
mov
lock
inc
in
inc
inc
sbb
inc
dec
push
xor
pop
cmp
and
loope
mov
add
dec
push
cmp
xchg
mov
ret
xchg
lods
(bad)
je
cmp
adc
call
adc
pop
jns
stos
aas
adc
xchg
add
add
push
shr
sub
and
mov
out
add
mov
mov
shl
push
scas
js
mov
add
jl
jg
nop
jmp
or
add
add
sub
pop
stos
sbb
push
xchg
jne
add
pop
or
push
xchg
mov
push
or
(bad)
retf
out
push
cmp
sbb
adc
stc
sub
je
xor
mov
inc
xchg
jl
cmp
jge
shl
mov
pop
ret
addr16
cmp
adc
jmp
mov
xlat
data16
or
xor
mov
sbb
push
je
push
mov
sbb
lods
sti
ffree
iret
jmp
cmp
xor
je
add
inc
sbb
mov
jp
push
push
inc
xor
ror
add
push
sbb
lea
xchg
(bad)
adc
cmp
inc
pop
add
push
and
jbe
mov
pop
fdivr
add
out
add
add
pop
jl
or
jl
add
pop
jl
add
push
mov
(bad)
push
stos
cli
es
jbe
nop
xor
or
outs
call
shl
push
xchg
mov
adc
ror
neg
and
clc
stc
push
test
mov
push
xor
cmp
jbe
in
(bad)
jb
ffree
add
sub
and
or
xchg
hlt
mov
jae
mov
add
iret
sbb
not
add
add
add
sbb
add
or
or
adc
sbb
or
mov
cmp
adc
cmp
jo
sub
sub
ret
test
adc
jo
popa
mov
add
lds
movs
sbb
add
out
retf
lds
adc
retf
dec
movs
lahf
jg
or
into
add
pop
adc
(bad)
cmp
xor
jae
test
adc
or
pop
and
push
sbb
dec
fisttp
div
sar
push
add
adc
inc
aad
adc
add
pop
or
movs
adc
dec
xor
jge
pop
(bad)
imul
mov
push
shl
mov
lock
aad
sti
cmp
jae
inc
sub
pop
jbe
or
into
jns
push
xchg
mov
ficom
mov
and
mov
daa
xchg
call
leave
jbe
xchg
in
jbe
mov
push
jp
hlt
dec
push
sbb
hlt
fnstenv
test
sub
cmps
sbb
shl
icebp
add
inc
adc
or
jp
mov
adc
or
sbb
or
mov
inc
or
add
dec
dec
xchg
pusha
es
mov
je
mov
push
mov
mov
sbb
cmp
mov
fisub
mov
or
dec
cld
fs
lods
sbb
adc
mov
adc
inc
inc
cs
shl
pop
inc
inc
aas
jbe
adc
je
inc
je
jo
jo
cmp
push
cmp
sbb
or
dec
repnz
mov
call
mov
pop
inc
sub
mov
sub
xchg
shl
out
arpl
dec
mov
mov
lds
popf
add
push
lock
enter
pop
mov
adc
cdq
idiv
outs
add
xor
add
push
test
inc
cmp
add
test
jl
fimul
ja
and
or
lods
pop
adc
sub
and
add
push
cmp
and
stos
lods
stos
push
xor
dec
fcomp
loopne
adc
push
xchg
nop
add
and
inc
sbb
in
and
pop
jg
imul
mov
and
dec
or
sbb
mov
or
stos
imul
ja
scas
or
adc
add
sbb
test
sub
cmp
jl
sbb
push
add
add
clc
mov
add
mov
push
cmp
mov
or
movs
call
dec
jnp
add
push
xor
lock
(bad)
or
jae
aam
adc
xchg
dec
push
fsub
or
test
push
jae
cld
push
or
jnp
ja
inc
or
add
jmp
push
xor
mov
in
adc
cmp
xchg
or
pop
adc
xchg
shr
cwde
jo
jno
loopne
out
dec
sbb
sbb
mov
enter
sti
inc
or
pop
sbb
arpl
adc
jae
jae
mov
push
add
jne
pop
jae
nop
sub
loopne
out
inc
add
xlat
into
and
loope
sbb
lock
(bad)
jbe
pusha
add
xchg
sub
mov
inc
and
jmp
test
imul
xor
sbb
sbb
add
push
mov
xor
or
rcr
sbb
or
retf
data16
fnstsw
add
adc
iret
mov
and
dec
mov
xchg
je
add
xor
inc
mov
imul
movs
in
push
inc
dec
dec
add
dec
mov
cmp
dec
xchg
cmp
into
pop
and
mov
int3
rol
(bad)
adc
popa
adc
mov
fld
xor
jne
sahf
dec
adc
or
mov
mov
fstp
sub
push
mov
jnp
repnz
daa
jb
inc
psubusb
imul
add
xchg
movs
mov
cmp
add
daa
cmp
scas
rol
ret
popf
or
mov
sbb
stos
sbb
inc
mov
mov
adc
(bad)
imul
mov
sbb
hlt
das
bound
ja
xor
or
or
xor
jl
scas
pop
stc
mov
in
dec
xor
inc
aaa
and
and
cmp
fdivr
xor
jmp
dec
or
pop
je
mov
sar
jo
xchg
(bad)
call
mov
in
push
jns
ret
pmulhuw
nop
rcr
out
fsub
xchg
pop
sub
add
leave
or
adc
mov
nop
pop
or
jp
movs
sub
sbb
push
leave
sub
pop
fsub
mov
(bad)
or
setnp
inc
fist
or
cmp
adc
jbe
push
sbb
add
sbb
adc
mov
jmp
mov
mov
or
mov
or
jecxz
ins
imul
dec
or
adc
out
xchg
out
out
mov
xchg
cmp
mov
inc
add
ss
cwde
jae
ror
or
outs
mov
adc
push
scas
inc
pop
mov
jl
cdq
das
and
cmp
and
or
sub
mov
arpl
sub
inc
xor
xchg
shl
jl
inc
pop
scas
push
add
dec
or
inc
or
fsubr
xchg
loope
push
add
push
ss
jmp
xchg
pop
jmp
imul
mov
and
or
repz
sbb
add
lmsw
retf
inc
cmp
dec
aad
dec
inc
inc
sbb
add
and
jno
out
jne
or
push
fadd
inc
in
pusha
fs
rcl
mov
das
mov
ds
dec
and
pusha
add
cs
dec
and
add
add
xlat
outs
sub
mov
xchg
fild
nop
or
icebp
xchg
out
in
or
ror
push
xor
mov
or
ins
jns
jns
jns
in
or
and
inc
lods
add
cmp
push
rol
clc
outs
and
or
jmp
add
mov
sbb
mov
add
test
jg
inc
and
cmp
and
pop
cmps
sbb
add
lea
push
sbb
imul
jle
or
(bad)
cmp
jge
cmp
lods
add
test
push
inc
mov
pop
inc
stos
pop
test
push
aad
xchg
outs
lock
dec
cwde
adc
shl
cmp
mov
ret
nop
and
das
xchg
enter
sub
inc
adc
psrlq
test
shr
adc
sti
add
bound
(bad)
shl
dec
jle
mov
mov
outs
fdivr
rcl
push
ja
xor
jo
paddsb
push
sbb
repz
(bad)
(bad)
pop
cs
and
dec
mov
jmp
pop
les
sbb
adc
xchg
stos
popa
cmp
pop
nop
mov
pop
jge
mov
xchg
jb
ror
xor
mov
add
das
push
adc
adc
mov
or
push
mov
add
jbe
push
mov
jle
inc
or
push
inc
cmp
lock
mov
lahf
pop
sbb
push
sbb
sbb
sub
aaa
(bad)
loope
inc
sub
inc
add
add
call
pop
(bad)
push
fld
scas
and
mov
adc
xor
cmp
mov
test
mov
jle
jmp
sub
cld
ffree
mov
xor
lock
sub
pop
push
xchg
add
fmul
xor
cli
jmp
dec
push
adc
loop
sbb
sub
mov
add
retf
test
mov
and
or
mov
sbb
dec
lahf
cmp
jne
jmp
pop
xlat
daa
push
push
adc
retf
adc
jne
sahf
nop
lock
int
and
outs
push
dec
mov
sub
and
sbb
push
add
inc
inc
sub
push
inc
jp
or
dec
or
mov
add
ja
xor
loopne
inc
mov
and
test
push
pop
nop
or
test
add
cmp
(bad)
inc
adc
push
out
adc
mov
mov
out
mov
mov
loopne
call
cmp
or
jb
inc
(bad)
in
add
in
mov
push
mov
or
pop
mov
add
stc
sub
inc
jg
stc
xchg
cmp
and
mov
ins
jb
sbb
cdq
enter
cmp
inc
inc
sbb
dec
adc
(bad)
mov
adc
test
push
pop
and
pop
lahf
sbb
mov
push
imul
pop
pop
in
lock
es
imul
mov
fbstp
leave
pop
imul
mov
jmp
add
mov
cdq
or
mov
iret
and
mov
popf
and
sbb
outs
out
cld
fld
idiv
mov
mov
pop
and
pop
cmps
or
sbb
pop
add
inc
inc
rcr
sar
xchg
in
jg
cmp
add
xor
jle
imul
cmp
retf
js
data16
mov
in
push
fiadd
jne
or
aaa
call
sub
arpl
aad
pop
dec
cmp
adc
(bad)
pusha
add
test
and
fld
push
frstor
dec
js
pop
mov
out
jne
or
rcr
add
ja
jb
or
sbb
inc
jo
and
ds
daa
fnsave
loopne
inc
scas
jl
add
add
sti
cmp
add
dec
ins
add
imul
xor
add
imul
dec
jo
and
cmp
jmp
add
xchg
push
inc
and
or
retf
rol
or
xor
clc
sar
and
cmp
(bad)
mov
jmp
outs
(bad)
cmp
imul
imul
jmp
add
and
or
lea
sub
je
dec
sbb
or
sbb
sbb
add
sub
add
pop
and
data16
push
les
nop
in
jmp
ss
push
xlat
fcom
ror
(bad)
inc
add
add
and
lock
out
je
lea
pop
push
leave
addr16
(bad)
data16
(bad)
mov
inc
inc
cmp
stos
mov
mov
xchg
or
add
cmp
hlt
push
add
adc
xlat
jne
add
jl
push
inc
add
jbe
or
fnsave
ja
cmp
inc
cld
xchg
js
sar
ret
inc
jo
add
cmovle
test
push
adc
dec
sbb
push
ds
push
xor
into
stos
fnsave
fs
push
je
add
or
dec
out
add
add
push
jne
(bad)
jmp
cmp
push
inc
push
pop
or
sbb
mov
push
xchg
mov
and
es
sar
ins
sbb
mov
les
aaa
xor
or
sub
dec
fsub
fsubr
(bad)
call
mov
adc
clc
or
adc
fld
pop
mov
mov
push
loope
dec
fs
adc
stc
jne
lock
pop
loopne
sbb
xchg
test
cld
xchg
js
or
xchg
adc
inc
sub
xlat
popf
adc
push
jo
in
push
and
or
call
ss
adc
sbb
pop
jo
push
inc
movs
retf
loope
loope
or
xchg
add
invd
pop
inc
pop
inc
mov
and
pop
ja
mov
mov
adc
add
test
cmp
pop
inc
add
pop
sbb
scas
mov
mov
(bad)
cmps
jns
mov
jbe
test
adc
loopne
test
pop
pop
push
lock
adc
sub
lock
add
pop
mov
in
add
rol
ds
push
or
mov
rcr
push
xchg
add
cmp
mov
shl
pop
jne
pop
cmp
int3
sbb
fistp
ds
sbb
cwde
test
enter
inc
pop
adc
nop
aaa
in
and
inc
bt
lea
or
or
repnz
lea
add
jmp
hlt
aaa
test
mov
bswap
fs
cmp
outs
add
xchg
rol
es
pusha
(bad)
mov
clc
or
xchg
mov
std
outs
addr16
cmp
cli
inc
jl
xchg
fidiv
cwde
sbb
inc
sti
shl
push
pushf
add
or
jle
sub
das
adc
gs
ret
push
sbb
test
cmps
and
pushf
and
add
gs
test
(bad)
or
aas
sbb
push
inc
sub
pop
mov
mov
shl
add
jbe
sub
add
xor
fdiv
loopne
add
fmul
push
sbb
aas
or
adc
js
loop
inc
mov
cmp
data16
add
sbb
retf
jle
test
dec
push
and
cmp
mov
ja
mov
cmp
sbb
fdivr
jl
cs
add
push
inc
jmp
adc
mov
cmp
adc
xchg
add
xor
jmp
pop
pop
and
dec
(bad)
iret
adc
lea
imul
xor
sub
loope
dec
nop
push
mov
js
xor
mov
xor
gs
inc
setge
push
or
push
inc
adc
push
sub
jns
pushf
push
sbb
mov
xor
retf
pop
and
inc
sbb
loop
or
jmp
sub
movzx
repnz
or
cwde
arpl
adc
pop
sbb
sahf
test
mov
loope
mov
js
xchg
pop
push
call
mov
add
jmp
ss
jnp
in
pop
mov
arpl
test
imul
retf
call
dec
fild
sub
push
ins
jo
ret
mov
or
scas
jl
inc
(bad)
(bad)
dec
test
sub
inc
dec
test
mov
retf
inc
sar
sbb
popa
test
mov
mov
ins
and
add
cmc
jne
pop
push
push
test
outs
xor
and
jge
aas
add
mov
into
and
fst
add
loopne
mov
dec
or
push
and
xor
mov
clc
xchg
inc
cwde
xor
jae
ins
clc
imul
adc
bound
not
fisttp
jge
out
bound
or
into
push
push
out
or
test
inc
adc
lds
jmp
push
push
cmp
jle
push
cmp
inc
pmaxsw
repz
mov
or
loop
and
cmp
shl
jge
adc
adc
cmp
inc
hlt
shr
js
test
mov
bt
jecxz
mov
sbb
mov
or
xchg
jp
aas
jge
cmp
jg
test
pshufw
sub
add
or
js
mov
push
cmp
and
scas
lea
scas
imul
sub
les
push
test
aas
int3
mov
fist
sbb
ret
and
mov
mov
mov
cmp
pop
inc
stos
jle
adc
inc
xor
pusha
xor
mov
push
add
jmp
push
jae
retf
shr
ins
xchg
inc
out
and
(bad)
sub
dec
adc
or
and
in
push
mov
push
or
add
aaa
lock
jo
sti
inc
cs
pop
mov
mov
ins
sub
pop
dec
pop
test
xor
(bad)
mov
xor
jecxz
ja
movzx
sbb
push
or
ret
outs
clc
jl
ret
cmps
(bad)
mov
sar
out
push
je
adc
xchg
sub
clc
xor
cmp
sar
mov
dec
lock
xchg
jg
or
ins
and
rcl
lods
cmp
bound
pop
shr
push
push
movzx
xlat
gs
adc
(bad)
xor
repz
push
adc
imul
lock
dec
sub
inc
daa
and
lock
imul
(bad)
fisttp
ins
jno
inc
aaa
and
mov
or
adc
mov
xor
stos
dec
movs
test
jbe
pop
push
movs
ret
push
fdiv
mov
nop/reserved
scas
mov
inc
repnz
mov
jmp
loopne
jge
out
lds
push
jl
and
inc
icebp
jmp
xchg
cmp
dec
mov
jle
jge
sbb
test
call
cmp
sar
test
stos
sbb
or
inc
(bad)
dec
das
in
lea
mov
into
mov
jne
or
sbb
aaa
push
add
push
pop
das
inc
adc
inc
inc
add
repnz
je
inc
loopne
and
and
dec
push
or
call
add
push
pop
popf
in
push
jle
dec
pop
add
inc
sti
loope
or
mov
ins
xor
gs
cmp
call
inc
mov
mov
inc
push
mov
inc
cmp
and
sub
loope
xlat
sub
sbb
add
mov
xchg
dec
fs
lea
shr
dec
ins
adc
xchg
sub
add
imul
mov
(bad)
cld
lods
imul
frstor
imul
mul
push
mov
push
and
clc
or
jb
je
dec
je
mov
jbe
retf
push
add
call
xchg
push
dec
rcl
push
dec
test
push
adc
cld
std
push
jmp
or
jmp
sbb
je
add
push
push
xor
jne
pusha
dec
loopne
jbe
jge
out
cmp
shr
mov
push
dec
sbb
push
scas
jp
ins
add
ror
add
add
(bad)
inc
add
cmp
cs
jno
mov
shl
data16
ins
or
or
dec
mov
sub
jne
adc
js
(bad)
sti
dec
or
adc
lods
or
pop
add
add
rep
out
ds
jo
add
add
dec
mov
and
mov
add
(bad)
pop
lea
or
test
mov
jbe
das
mov
nop
add
push
or
or
(bad)
mov
jle
aam
gs
fadd
cmps
adc
or
out
add
pop
adc
sbb
push
add
xchg
push
jmp
sub
ins
sbb
aam
jle
ja
mov
cwde
sbb
cld
mov
int3
push
add
cmp
fiadd
add
jo
(bad)
xlat
inc
sbb
cmc
add
mov
push
dec
(bad)
shl
mov
les
repz
and
loope
outs
pop
retf
pop
mov
inc
push
jmp
jl
clc
jbe
mov
jl
inc
mov
xor
loopne
ja
pop
popf
inc
(bad)
scas
pop
jne
das
jo
fwait
icebp
aas
jne
in
or
mov
sbb
cmp
mov
sbb
test
dec
add
adc
cmp
mov
lea
push
(bad)
outs
mov
mov
iret
inc
xor
pop
jl
add
es
mov
test
mov
aaa
jo
xor
lea
pop
add
dec
fiadd
not
fwait
retf
mov
adc
push
scas
push
cli
call
sub
daa
jp
add
lahf
ret
add
add
dec
mov
sub
pop
add
movs
dec
inc
aam
or
test
and
cmp
mov
add
stos
dec
cli
dec
pop
or
mov
add
inc
pushf
sbb
inc
sub
ret
jo
inc
clc
jae
in
add
dec
sbb
sbb
or
mov
cmp
push
mov
push
sbb
add
lds
inc
pop
inc
inc
icebp
push
(bad)
fist
mov
or
test
add
push
inc
rcr
sub
jle
or
dec
in
lea
push
adc
dec
in
push
dec
mov
xchg
xchg
inc
inc
call
jle
xor
mov
add
movsx
or
jnp
lea
push
iret
inc
lea
mov
sbb
cmp
je
mov
into
add
ret
jg
sbb
pop
inc
sbb
fild
cmp
test
mov
lock
loopne
mov
inc
add
lods
push
fisttp
lahf
jo
or
les
lock
mov
mov
adc
inc
inc
stos
mov
outs
add
mov
add
or
mov
mov
into
popa
in
stos
(bad)
pop
dec
and
loopne
sbb
or
and
or
or
ret
jo
adc
inc
inc
cmp
ror
mov
in
sub
push
inc
test
shl
retf
stos
sahf
push
shl
aam
leave
pusha
add
mov
pusha
lods
jno
pop
sar
mov
sub
mov
inc
xor
ficom
add
rcr
mov
adc
sbb
scas
dec
jge
inc
push
loopne
jle
inc
pandn
pusha
xor
pop
outs
in
retf
add
adc
clc
movd
adc
icebp
test
inc
pop
jl
out
jno
pop
adc
in
mov
rcl
mov
lock
xchg
pushf
icebp
and
out
sub
mov
scas
add
cmp
jns
sbb
inc
addr16
lea
pop
add
mov
mov
mov
sbb
repnz
or
cli
mov
xchg
jle
and
sbb
push
pop
add
out
mov
xlat
jnp
in
mov
inc
sbb
shl
sbb
clc
(bad)
mov
jge
test
loopne
jb
mov
sbb
pop
lahf
fstp
pop
or
aaa
cmp
bound
test
clc
add
push
mov
and
(bad)
enter
dec
(bad)
in
mov
push
dec
or
xor
lea
sbb
lea
dec
push
sbb
cmp
lock
fs
xchg
neg
fisubr
mov
shl
and
rol
loopne
or
inc
push
push
cmp
cld
sbb
xor
jne
push
mov
or
sbb
adc
jno
or
cld
or
adc
inc
inc
or
pop
mov
mov
dec
push
sahf
adc
push
and
lea
(bad)
jle
retf
popa
cmc
out
adc
and
sbb
sbb
and
jns
mov
add
mov
cs
loope
mov
xor
cs
mov
or
cmp
je
dec
lahf
stos
movs
call
data16
and
rol
and
or
dec
mov
test
inc
mov
sbb
push
fs
cmp
(bad)
adc
mov
mov
arpl
xor
xchg
push
es
inc
shr
push
and
jge
mov
mov
mov
jb
xor
daa
add
mov
js
enter
je
inc
mov
int3
mov
sub
test
sub
push
iret
and
popa
stc
or
cmp
cwde
in
aam
int
xor
outs
pushf
bound
(bad)
lock
(bad)
mov
add
push
add
mov
push
repnz
inc
jmp
ja
inc
clc
(bad)
sti
daa
lds
inc
cmp
cmp
lods
mov
push
sbb
es
dec
sbb
and
ret
jo
loop
or
lahf
mov
iret
sub
loop
fbld
push
cmc
call
adc
cmps
sbb
xor
mov
jns
mov
in
inc
pusha
xchg
dec
and
or
push
pop
ja
ror
inc
pop
mov
cmp
add
jo
inc
sub
cli
add
pop
outs
popa
push
push
sbb
inc
push
xor
sahf
les
lea
xor
and
adc
xlat
es
push
add
test
data16
shl
xchg
ins
or
jae
sar
or
sub
loope
cs
xor
pop
out
je
jo
sbb
and
scas
xchg
cmp
or
mov
and
inc
mov
sub
dec
test
icebp
or
test
pop
icebp
xor
xor
push
aam
dec
push
jbe
enter
or
loop
adc
shl
imul
cmp
ja
push
add
repnz
ret
mov
sbb
je
jp
mov
test
mov
ret
cmp
adc
gs
inc
adc
lea
dec
lock
or
aas
mov
(bad)
fsubr
xor
jae
adc
adc
jne
mov
fsub
pusha
fnstenv
sub
or
mov
adc
pusha
(bad)
or
inc
push
pop
xor
mov
xchg
cli
ficom
cwde
jno
jae
jo
xchg
lea
fsubr
and
cmps
sbb
sub
mov
pop
add
call
outs
or
cmps
add
jmp
add
xchg
dec
lock
xchg
push
inc
sub
adc
bound
in
add
lock
ja
fs
xor
xor
or
sar
movs
xor
jge
push
nop
clc
les
or
idiv
mov
adc
pop
hlt
mov
rol
mov
push
in
cmp
mov
js
inc
jo
je
and
ror
cdq
fisttp
jmp
dec
ret
mov
out
ret
test
inc
adc
mov
jo
jne
jo
int3
mov
sbb
sbb
sbb
inc
ret
xor
xchg
add
push
inc
xchg
cmp
mov
and
push
adc
fiadd
push
ds
add
jo
jmp
je
xor
inc
xchg
fucomip
push
fmul
pop
jae
pusha
jne
in
fdivr
xor
lods
cmp
adc
in
adc
push
shr
push
in
nop
hlt
lea
rcr
mov
inc
sar
lea
jmp
nop
popa
nop
mov
gs
loopne
mov
mov
adc
pop
mov
adc
or
rcr
mov
pop
imul
popa
inc
jecxz
repz
scas
sub
mov
adc
daa
fs
leave
shl
jge
loopne
adc
cmp
add
dec
inc
imul
add
inc
xchg
add
push
dec
(bad)
mov
ins
nop
out
mov
or
nop
xchg
js
add
add
test
add
dec
loopne
jo
scas
push
js
pop
cmp
add
sub
cmp
push
sbb
adc
mov
jmp
loopne
mov
sub
bound
adc
push
push
aaa
out
mov
mov
or
or
push
or
adc
add
add
pop
movs
test
mov
mov
inc
dec
lahf
push
sbb
mov
mov
push
xor
imul
mov
pop
lock
sub
lock
inc
push
or
dec
fiadd
or
add
nop
cwde
xor
and
push
in
fidivr
ret
out
jae
mov
mov
enter
cmps
xor
js
dec
push
lock
mov
add
xor
not
lea
nop
loopne
cmp
daa
add
mov
mov
jp
ret
fbstp
mov
jns
pop
adc
nop
pop
mov
in
add
and
stos
inc
jo
pop
leave
js
dec
cmp
shr
cld
jge
shl
mov
add
test
mov
mov
sbb
neg
les
ins
lock
jl
inc
repz
cmps
mov
or
push
loopne
inc
or
adc
push
paddb
and
sbb
push
cmp
jle
cmp
stos
mov
sbb
sbb
fadd
es
add
iret
not
mov
in
(bad)
aam
pop
loopne
mov
scas
in
pop
aad
adc
fucomp
les
add
inc
inc
test
sar
out
in
xorps
xor
sbb
mov
push
sbb
mov
out
sti
fdivr
inc
clc
jmp
add
inc
add
mov
mov
push
sbb
(bad)
push
inc
mov
push
xor
pop
les
je
mov
sub
mov
or
add
push
mov
cmp
cmp
pop
inc
sub
or
mov
xor
inc
and
fs
add
or
add
mov
ret
dec
sub
or
mov
sub
xchg
adc
mov
test
call
sub
(bad)
retf
mov
outs
bound
push
test
push
jbe
dec
sub
imul
rol
mov
adc
xchg
xor
test
mov
sbb
pop
daa
or
dec
aaa
or
sbb
(bad)
stc
pop
sahf
rol
pop
aas
xor
xor
shl
add
and
je
mov
mov
leave
(bad)
jns
dec
add
jmp
sub
xor
jns
es
cmp
jne
or
(bad)
or
sar
rcl
pop
js
jg
or
push
ja
test
loopne
jl
out
fst
mov
mov
add
jge
imul
inc
adc
inc
jle
jo
test
test
jge
xor
cmp
adc
popf
mov
fcmovne
xor
sbb
add
jl
clc
ss
dec
sub
push
or
or
(bad)
sbb
jne
cmp
fnstcw
xor
pop
mov
cdq
idiv
sbb
inc
pushf
ret
sbb
and
add
or
inc
pusha
jbe
jmp
xor
adc
adc
mov
fmul
lahf
rcl
(bad)
xor
mov
(bad)
push
mov
inc
add
leave
and
jbe
dec
dec
push
dec
inc
pop
repz
push
fld
inc
fsubr
int3
pop
pop
adc
in
pop
bound
push
and
pop
add
sbb
or
mov
adc
or
inc
inc
int3
adc
test
pop
xlat
(bad)
jmp
les
popa
and
pusha
dec
push
sbb
sbb
push
inc
cmp
pop
cmp
or
mov
sub
add
mov
inc
bsr
call
dec
stos
lds
jno
push
loopne
js
lods
lock
mov
pusha
test
retf
add
ret
cmp
xor
fs
sbb
dec
cdq
add
and
fadd
jbe
scas
into
mov
sub
pop
pop
out
or
add
popf
or
fcomip
sbb
fld
fadd
fistp
mov
jg
add
fidivr
xor
jl
inc
call
jl
test
jecxz
into
rcr
div
dec
js
adc
(bad)
dec
inc
pusha
push
add
pop
dec
xchg
push
icebp
rcr
dec
xor
loopne
shl
gs
pop
mov
popf
popa
and
inc
cmp
cmovg
hlt
pushf
or
pop
sbb
sbb
push
(bad)
sbb
adc
push
and
mov
push
dec
xor
adc
fcomp
je
jno
test
mov
mov
scas
push
pusha
or
mov
sbb
jl
outs
push
(bad)
arpl
xor
sub
or
dec
inc
push
mov
inc
jg
(bad)
cs
mov
mov
cmps
adc
les
nop
sbb
sti
add
repz
test
cmp
fiadd
retf
jne
mov
xchg
mov
inc
inc
lock
mov
sbb
cmp
jl
adc
fisttp
cmovge
sub
call
add
shl
add
lods
inc
sbb
cmc
clc
or
cli
movs
xchg
or
(bad)
push
outs
lods
lock
fcom
add
mov
inc
xor
sub
data16
lods
loope
neg
cmp
sub
adc
sub
mov
test
mov
int3
movs
cmp
or
fsubr
cmp
adc
add
xchg
clc
xor
popa
jo
mov
push
sub
mov
fidivr
cmp
mov
ss
scas
jmp
int3
and
push
jg
mov
mov
mov
mov
cmc
enter
push
xchg
pusha
mov
jl
pop
cmps
cmp
cwde
push
pop
sbb
pop
jo
inc
js
sbb
and
lea
loop
push
in
or
push
loopne
les
sbb
jbe
jbe
lods
and
mov
and
ds
dec
sbb
pop
add
inc
add
and
cld
jbe
or
(bad)
dec
ja
push
dec
ins
dec
adc
add
in
rol
add
lahf
pop
outs
in
adc
mov
jle
mov
or
pop
fist
mov
test
add
outs
push
mov
pop
push
loop
rcr
div
cmp
xor
jo
in
adc
sbb
rcl
inc
and
ja
lock
fadd
jl
xor
sbb
jno
and
cmp
loopne
int3
movs
shr
jge
and
sub
rcr
add
es
nop
outs
arpl
and
xor
je
mov
aam
ror
add
aam
adc
ins
push
mov
jbe
or
inc
stos
cwde
bound
shl
loop
xchg
xor
adc
shr
xor
add
sbb
push
loopne
rcr
dec
loopne
fmul
rol
in
jl
and
loope
jbe
dec
xor
push
ss
xor
inc
int3
xor
or
std
mov
dec
sahf
xor
cmp
or
pop
cs
cmp
mov
push
repnz
adc
pop
pop
lock
ds
daa
lods
fdivr
add
sbb
push
int3
adc
xor
jns
shl
cli
cwde
dec
mov
ss
jns
adc
ret
push
adc
xor
or
adc
cmps
fcom
push
mov
popa
xor
push
inc
stos
lea
jbe
push
push
pop
in
xchg
push
shufps
adc
xchg
fcmovne
div
test
mov
xor
inc
xor
ud0
ja
lock
bound
push
pop
sub
add
add
mov
sub
pop
inc
fcomp
lods
dec
ret
enter
sbb
shl
shl
xor
xchg
enter
pusha
mov
in
lea
push
mov
shl
mov
push
aam
fdivr
ins
dec
adc
add
add
cmp
or
adc
add
call
inc
lds
pushf
fadd
fadd
pop
inc
adc
enter
push
loope
sub
sti
inc
hlt
(bad)
ins
fdiv
or
aam
sbb
jmp
sbb
mov
add
sub
psubusb
jl
mov
mov
jmp
ins
movsx
add
rcl
out
cmp
clc
add
and
jmp
js
add
xchg
pop
sub
shl
cwde
ret
fmul
fidiv
ror
sub
jne
aas
lds
dec
retf
ja
push
test
ds
add
add
int3
aam
mov
mov
add
jmp
mov
test
(bad)
fiadd
mov
pop
shr
mov
lea
xchg
pusha
jg
mov
mov
stos
fimul
mov
aam
jo
inc
push
mov
adc
add
cmp
jl
jle
mov
jge
adc
lar
and
xor
sub
dec
clc
and
es
je
clc
ins
(bad)
outs
imul
push
je
iret
js
ja
call
xor
imul
jle
add
fs
sbb
jecxz
movs
push
addr16
dec
dec
aam
outs
(bad)
jmp
push
push
xor
dec
ins
mov
inc
add
test
push
inc
in
lds
ret
nop
jg
(bad)
out
jmp
test
mov
jns
hlt
aaa
ret
imul
add
sub
call
int3
push
test
jge
jge
ror
ss
add
dec
cmp
in
gs
cmp
movs
jno
add
add
add
jnp
add
dec
hlt
mov
jmp
hlt
rcl
hlt
jb
dec
call
pop
cmp
pop
or
mov
ret
push
into
sar
shl
adc
add
sub
inc
add
sbb
inc
into
xor
mov
call
add
or
and
mov
dec
add
mov
sub
jmp
bound
nop
or
fidivr
js
jle
fiadd
fs
jbe
jg
inc
add
jo
push
dec
in
or
ja
mov
and
mov
mov
addr16
push
add
mov
test
adc
arpl
jno
rcl
mov
je
or
pop
cs
cmp
dec
les
xor
enter
mov
aas
dec
shl
add
or
ror
sbb
int
sbb
cmp
or
adc
adc
cmp
mov
jge
inc
jge
rol
call
mov
mov
mov
in
sti
or
pusha
sti
sub
leave
add
sti
sbb
or
xor
cli
adc
in
fnsave
cld
mov
out
cdq
inc
adc
sar
ret
adc
xor
pusha
repnz
call
xor
fnstenv
mov
lds
adc
adc
in
add
adc
mov
cmp
lahf
cmp
imul
aad
jl
cmp
inc
clc
add
test
xchg
mov
retf
das
loopne
cmp
ja
cmp
(bad)
cs
sbb
inc
movs
loope
push
sbb
mov
xchg
mov
(bad)
fnstsw
movs
(bad)
mov
or
sbb
out
mov
xchg
rcr
mov
dec
test
mov
add
fsub
mov
fadd
loop
sub
les
leave
mov
aaa
cmp
add
out
add
mov
pop
sub
add
jecxz
inc
inc
push
std
inc
sti
push
xchg
fidivr
push
inc
sub
imul
inc
cmp
out
push
and
inc
stos
pop
aam
mov
sbb
dec
pop
adc
push
push
mov
das
jnp
test
lods
add
(bad)
pop
and
jmp
pop
rcr
cmp
out
ror
add
xor
mov
dec
xchg
dec
stos
jb
lock
clc
or
xchg
xchg
inc
es
sub
rol
sub
loop
sti
dec
sbb
cli
es
sub
adc
std
xchg
and
stos
push
js
mov
cmc
sbb
push
leave
pop
pop
je
dec
or
mov
adc
pop
ror
mov
je
or
fdiv
fmul
xor
or
jmp
adc
mov
adc
adc
fisub
jbe
adc
mov
test
add
(bad)
addr16
popf
jp
dec
sbb
leave
jmp
sbb
mov
mov
push
pop
push
pop
pushf
pop
or
pop
add
adc
or
push
jb
add
xchg
jae
pop
mov
retf
pop
pushf
out
cmc
or
adc
mov
out
inc
das
addr16
sar
add
jae
movs
mov
sar
pop
add
rcr
add
jmp
(bad)
dec
push
lds
add
in
xchg
(bad)
add
add
mov
cmp
sub
mov
and
mov
movs
sar
mov
add
pop
call
xchg
and
lea
push
add
and
ror
adc
push
mov
ror
cs
ret
add
pop
sub
pop
lods
ins
(bad)
ror
(bad)
push
or
dec
adc
add
jns
xor
dec
push
mov
adc
(bad)
call
jle
xchg
test
cli
sub
adc
scas
add
(bad)
in
mov
pop
mov
sti
repz
addr16
outs
(bad)
sub
arpl
enter
es
adc
daa
loopne
add
aaa
and
aam
mov
call
test
int3
mov
mov
xchg
dec
enter
adc
sahf
sbb
cmp
fcomp
mov
inc
push
mov
outs
test
sub
call
enter
mov
cmp
jle
fcmove
xor
sbb
or
ficom
in
or
fcomp
inc
clc
jge
sub
sub
lock
pop
sbb
jo
jbe
fadd
inc
inc
in
jle
clc
outs
fdiv
and
jg
sbb
sbb
out
or
mov
lea
or
inc
inc
call
mov
and
jg
outs
push
dec
out
outs
adc
adc
dec
aam
into
or
add
es
jmp
lahf
pushf
adc
mov
cmp
or
adc
pop
es
pop
outs
rcr
pop
aam
push
adc
jg
mov
inc
sbb
xchg
ss
rcl
jo
xchg
mov
aaa
loope
jnp
retf
lea
jmp
aaa
jge
(bad)
hlt
or
ret
or
(bad)
out
ror
adc
add
or
mov
push
(bad)
dec
pop
not
sub
jge
js
dec
adc
sub
inc
sub
lea
add
add
lods
and
dec
inc
dec
test
adc
test
adc
retf
mov
push
add
sub
push
(bad)
hlt
adc
push
loope
add
cmp
mov
les
(bad)
cwde
call
and
fld
and
cmp
xor
mov
outs
jo
ret
jge
mov
add
add
add
and
or
(bad)
fnstsw
pop
sub
cmp
or
mov
mov
(bad)
sub
add
adc
inc
add
sub
fsubp
adc
mov
sub
ins
addr16
pop
arpl
in
(bad)
test
je
int3
sar
push
inc
inc
rcl
add
push
add
out
cmp
sbb
in
ret
fcom
loope
test
sbb
nop
mov
fs
mov
xor
gs
or
xor
gs
scas
jnp
jmp
push
add
sbb
test
shr
or
rcl
mov
clc
push
jle
inc
out
call
retf
or
adc
xor
in
mov
in
adc
lods
fs
movups
adc
sbb
les
out
nop
in
in
jbe
(bad)
fisttp
int3
jp
hlt
mov
inc
sar
mov
sti
add
inc
lods
xor
cwde
add
retf
mov
data16
sysenter
lods
and
sbb
mov
push
lock
push
mov
add
mov
xchg
xor
ins
mov
adc
mov
or
aaa
nop
es
retf
(bad)
xor
adc
pop
aaa
lock
call
jmp
test
sbb
movs
sbb
mov
mov
or
push
sub
mov
test
call
add
jo
dec
sbb
push
cmp
add
xchg
loop
dec
shl
mov
mov
inc
add
xor
dec
test
ret
(bad)
jge
mov
jmp
or
mov
or
sub
add
aaa
xor
inc
mov
push
and
and
push
push
ja
test
lock
mov
lea
sar
push
aam
pusha
jmp
retf
sahf
mov
gs
lock
stc
jbe
in
push
adc
mov
rol
cli
push
push
sub
sbb
test
pop
add
add
test
ficomp
cmp
adc
out
mov
mov
mov
adc
mov
popa
mov
stc
inc
jl
int
adc
test
lods
mov
push
fwait
add
or
xchg
cmp
mov
add
lea
pop
(bad)
push
aam
lods
push
mov
mov
call
cli
cld
ins
and
cli
fadd
jecxz
daa
out
jne
sub
into
test
cmp
cmp
shl
movs
cmp
add
mov
movs
ins
bound
or
add
pushf
sub
mov
cwde
aam
mov
push
data16
mov
loopne
push
adc
mov
(bad)
sub
cmp
jne
aam
sar
fadd
lock
(bad)
adc
push
lock
push
rcl
dec
movs
or
pop
not
int3
sbb
dec
loop
add
fcomp
mov
sbb
mov
pop
xorps
cwde
rol
mov
outs
icebp
mov
dec
or
adc
loope
call
nop
(bad)
xchg
lods
pop
pop
jmp
mov
jne
(bad)
mov
mov
enter
sbb
cmp
ds
fbld
neg
neg
pop
lea
mov
clc
push
inc
mov
lea
push
xor
cmp
pop
enter
dec
ins
sub
jl
pop
jg
sbb
hlt
push
mov
invd
shl
and
add
adc
push
mov
xchg
pop
pop
adc
mov
jle
rol
test
pop
push
sbb
push
jle
fistp
imul
push
or
sar
pop
mov
loope
jns
adc
inc
or
or
cmp
pop
ret
inc
push
xchg
fcmovu
ficom
stos
fimul
push
cmp
ss
cli
add
lea
push
xchg
aad
call
cmc
adc
dec
shl
push
(bad)
sbb
pop
rcl
sbb
or
jle
add
add
push
add
jmp
xor
push
pushf
retf
adc
and
mov
cmc
push
push
icebp
test
sbb
and
jns
mov
push
sub
fstp
push
or
inc
sbb
ret
inc
sbb
jmp
add
inc
xor
stos
adc
add
push
jnp
sub
jge
les
cdq
dec
push
imul
sub
mov
fcom
cmp
shl
adc
ret
add
pop
add
mov
es
adc
inc
or
mov
mov
test
test
std
add
or
and
xchg
cmc
dec
mov
popf
nop
jo
or
dec
pop
je
test
cs
mov
retf
aad
ret
push
sbb
out
popf
call
mov
test
fcom
loopne
and
pop
mov
movs
ret
cmp
mov
dec
and
fadd
dec
loop
or
cmp
push
lock
jl
pop
push
(bad)
data16
fld
mov
popf
mov
push
movs
mov
and
and
jl
push
push
int
add
or
sbb
ja
loopne
or
bound
or
inc
cmp
and
aas
fist
(bad)
bnd
sbb
pop
push
fucomp
and
shr
aas
mov
adc
and
add
sbb
xor
add
cli
jbe
sbb
sbb
int3
push
div
cmp
push
pop
mov
pop
aaa
int
pop
mov
xor
sar
push
mov
pop
sub
mov
clc
mov
sbb
inc
or
dec
mov
js
shr
and
add
pop
aaa
call
(bad)
js
inc
mov
add
jne
dec
and
cmp
movs
loopne
cwde
or
jle
mov
rcr
sub
scas
mov
nop
loope
pop
or
sub
mov
lock
add
mov
sbb
sti
invd
and
retf
in
jmp
mov
out
pop
or
pop
jno
(bad)
test
stc
repz
sub
add
inc
(bad)
clc
and
or
inc
(bad)
mov
inc
stc
cwde
cmp
or
ins
sbb
lea
jmp
lea
mov
push
(bad)
scas
out
test
retf
add
inc
or
mov
mov
inc
add
push
jle
jp
xchg
bound
in
inc
inc
clc
add
add
or
(bad)
cld
fdivr
pop
inc
xor
sub
bound
sub
ss
ret
mov
repz
daa
add
out
popf
cli
dec
jl
sbb
loopne
xor
mov
mov
imul
jle
or
mov
jbe
xor
cmp
or
inc
cwde
loopne
adc
adc
cmp
nop
out
push
mov
test
push
outs
scas
cmp
pop
jl
rcr
mov
sub
cmp
loopne
fs
les
je
pop
xchg
loopne
and
ror
push
clc
push
cvtpi2ps
mov
daa
inc
pusha
or
mov
xchg
ror
stos
or
fwait
push
mov
mov
dec
cmp
test
xor
sub
fistp
add
fimul
push
or
xor
add
mov
adc
les
push
not
mov
push
leave
and
push
cwde
mov
push
mov
inc
mov
mov
out
shl
mov
and
mov
push
jmp
or
lods
mov
outs
sub
push
ins
adc
add
aam
rol
mov
sub
cmp
imul
and
add
cmps
add
push
cwde
dec
sbb
ficom
add
add
shl
ret
sbb
inc
and
mov
or
mov
or
cmp
daa
sub
sub
sbb
push
add
or
or
push
and
cmp
or
and
clc
pop
inc
adc
xchg
ror
xchg
sar
and
das
ds
cmp
xor
and
sbb
aam
pushf
(bad)
xchg
mov
scas
add
mov
pop
sbb
mov
mov
push
push
sub
js
push
dec
(bad)
out
mov
xor
outs
cmp
or
push
xchg
lods
das
mov
xchg
adc
(bad)
mov
mov
xor
or
and
xor
or
rcl
leave
idiv
push
push
add
mov
pop
ror
sbb
adc
jmp
mov
xchg
jno
or
into
xor
and
mov
jae
xor
inc
add
pusha
popa
mov
inc
or
add
and
mov
push
inc
jbe
jne
mov
or
adc
or
fadd
loop
jge
stos
fild
cmps
sub
sub
clc
inc
aam
mov
dec
xchg
mov
jmp
cmp
jnp
inc
dec
jl
rcr
inc
in
add
xor
and
push
cmp
iret
adc
addr16
dec
add
jg
jbe
mov
cmp
popf
loop
jbe
and
sbb
adc
push
outs
jmp
sbb
adc
jae
or
mov
jmp
fiadd
test
shl
or
sbb
pushf
mov
pop
out
push
or
mov
inc
mov
ret
ret
mov
or
push
sbb
(bad)
xor
xchg
dec
iret
xor
bound
scas
push
and
popa
(bad)
mov
scas
loop
cmp
jmp
adc
pop
xor
jp
xor
pop
call
add
inc
and
jl
jl
xor
ins
and
adc
mul
mov
loopne
ret
mov
add
mov
xchg
pusha
add
sbb
outs
out
inc
cwde
inc
or
push
loopne
loop
repnz
ret
xor
jmp
jo
mov
sbb
sbb
mov
inc
cs
daa
add
sub
inc
sbb
dec
fwait
push
test
daa
adc
int
mov
repz
out
xchg
adc
and
(bad)
adc
neg
mov
sbb
mov
xor
aam
out
add
mov
pop
(bad)
call
jnp
add
xchg
and
into
add
add
sub
(bad)
jl
rcl
inc
retf
and
mov
or
mov
or
sbb
scas
push
dec
pop
mov
test
add
bnd
jns
mov
push
shl
retf
loop
jmp
out
cmp
inc
push
pop
retf
pop
stos
fstp
cmps
imul
inc
or
xchg
not
push
adc
add
or
jge
mov
xor
mov
push
adc
and
js
add
push
fwait
mov
cli
mov
jb
xchg
test
and
scas
(bad)
pop
fiadd
adc
stos
push
and
dec
add
cmps
ficomp
sbb
in
xchg
idiv
call
lock
nop
or
jae
adc
mov
lahf
sub
mov
cwde
imul
and
jo
test
(bad)
int
sahf
imul
ins
dec
sub
daa
test
and
(bad)
mov
jo
jae
xor
xor
mov
mov
ffree
das
xchg
cmp
and
stos
dec
inc
fdivrp
sbb
scas
add
mov
adc
mov
inc
xchg
or
fstp
pusha
inc
pop
or
mov
push
jbe
xor
imul
out
add
push
jne
mov
cmps
or
mov
rcr
xchg
ret
cdq
or
jecxz
dec
fdiv
lods
jo
dec
pop
and
mov
sub
xor
add
popa
bound
nop
shl
inc
movs
cwde
mov
or
arpl
and
xchg
and
mov
add
add
fild
add
cmp
ja
imul
cmp
fs
sbb
inc
jge
fadd
jns
cmp
stos
push
add
in
or
sbb
push
mov
add
ins
outs
fsubr
and
dec
jmp
and
dec
or
das
add
jbe
inc
sbb
sbb
push
imul
ja
aaa
ret
pushf
jbe
dec
push
or
push
adc
push
inc
dec
add
add
dec
mov
in
imul
sub
cli
rcl
sub
dec
jmp
mov
fmulp
mov
or
jb
(bad)
dec
daa
adc
dec
mov
cmc
fisubr
dec
adc
inc
push
(bad)
out
mov
adc
add
pop
inc
jne
sahf
ret
fs
inc
mov
mov
adc
pusha
and
aad
push
(bad)
add
dec
add
push
mov
inc
js
mov
fnstcw
sbb
add
dec
cmp
ss
sti
fs
jmp
dec
dec
cld
out
popf
movs
mov
cmp
or
daa
les
push
int3
push
mov
xor
xor
mov
sbb
pusha
out
jo
and
mov
mov
jl
push
repnz
mov
push
and
jne
add
cmp
jl
retf
jns
dec
push
unpcklps
mov
pop
lods
sldt
jne
mul
cld
cmp
arpl
(bad)
(bad)
cmp
nop
jecxz
push
data16
imul
movs
mov
or
pop
out
and
sbb
ja
pop
inc
jne
mov
xchg
jo
sub
inc
or
jo
mov
pop
xor
in
jl
shl
movs
sub
mov
bound
arpl
pusha
xchg
add
pop
or
sub
or
test
daa
sbb
test
je
add
and
and
inc
fs
inc
or
jb
cmp
call
mov
add
shr
inc
mov
imul
pusha
ins
adc
pushf
push
push
sbb
mov
mov
sti
pop
mov
mov
in
push
ins
arpl
mov
xchg
xchg
dec
scas
leave
sub
or
dec
movs
dec
je
pusha
js
dec
adc
and
sbb
enter
out
lea
push
or
fs
add
push
xor
stos
je
jo
xor
jmp
jmp
mov
fisttp
paddw
xor
xor
jl
inc
and
add
add
loope
(bad)
dec
iret
cmp
add
sbb
and
mov
cli
and
xor
das
and
sbb
stc
add
pop
add
add
adc
mov
mov
jo
stc
mov
rcr
rcl
or
jo
push
call
lahf
cmp
or
push
inc
sbb
mov
jmp
or
add
jmp
and
cwde
cmp
sahf
test
or
or
jb
adc
cmp
fwait
bound
imul
bound
xchg
(bad)
mov
cmp
lock
cli
add
cmps
fsub
mov
cmps
and
ret
add
mov
les
daa
out
sahf
outs
loop
lahf
mov
dec
je
add
jmp
cmp
add
lods
and
ins
sub
jb
or
pusha
jo
call
and
pop
nop
or
pop
mov
add
push
add
cmps
mov
mov
cmp
fsubr
sub
ins
loopne
mov
push
sbb
push
cli
aam
jge
cld
jns
or
aam
pop
or
dec
movs
push
sub
sar
scas
xchg
push
mov
js
or
lea
add
adc
lds
(bad)
test
push
or
adc
call
xchg
mov
js
enter
adc
aam
xor
mov
sub
dec
xchg
sub
push
sbb
in
adc
adc
jo
nop
push
push
rol
popfw
pop
mov
and
daa
(bad)
sbb
mov
mov
add
gs
outs
add
fs
add
movs
nop
jl
sbb
shl
push
aaa
aas
pop
dec
fcomp
in
fnstsw
lock
rol
jae
test
jae
sub
mov
jg
cmp
cdq
jge
rcr
mov
mov
das
push
xor
xchg
ret
sub
ins
add
add
xor
cmp
cli
push
mov
xor
dec
xor
jmp
test
outs
or
lods
push
jge
clc
mov
adc
or
movs
push
cld
je
mov
dec
js
or
lods
and
inc
je
(bad)
jmp
cmps
adc
out
push
inc
sub
cmp
bound
loopne
cmp
ss
mov
adc
stos
rcl
jg
hlt
in
jns
xchg
arpl
ins
(bad)
sbb
adc
test
add
hlt
inc
sbb
sub
je
jmp
pop
sar
pop
test
bound
jg
pushf
pop
sbb
mov
fneni(8087
jmp
mov
add
add
pop
in
outs
outs
popa
dec
dec
je
add
jmp
cmp
mov
jmp
pop
inc
and
mov
cmp
jo
out
jmp
jmp
push
rol
inc
xor
dec
sbb
enter
pusha
mov
rol
jnp
cmp
dec
sub
push
cmp
xor
or
jecxz
or
lods
add
jge
push
mov
in
or
call
shr
push
push
or
adc
adc
adc
mov
int3
imul
xchg
out
dec
(bad)
cmp
in
jae
add
mov
and
test
add
int3
push
inc
movs
sar
xlat
jmp
or
sub
xchg
xor
sbb
fnstsw
sub
push
jmp
cmp
push
fmul
fstp
add
inc
pop
or
es
fistp
sub
adc
jb
push
int
jle
cwde
icebp
or
add
(bad)
icebp
dec
and
xchg
or
inc
pop
neg
add
mov
add
sub
adc
mov
(bad)
mov
adc
stos
dec
sbb
adc
pusha
push
lock
push
and
rcr
or
adc
mov
pop
add
inc
daa
(bad)
pusha
addr16
pop
add
push
inc
pop
cmp
les
mov
mov
cli
in
push
xor
sub
ins
cld
pop
push
or
push
loopne
dec
scas
inc
ror
cmp
jge
(bad)
aas
pusha
inc
call
mov
cmp
call
(bad)
es
jo
inc
inc
es
jnp
or
sbb
call
dec
pusha
cmp
jae
lods
mov
or
fmul
test
sub
push
push
sbb
test
push
aad
mov
push
cmp
pusha
xchg
add
inc
je
mov
aaa
pop
inc
pop
jne
mov
or
push
test
dec
cmp
pop
or
sub
pop
sbb
mov
shr
sar
adc
sub
or
test
cmp
mov
call
nop
fild
add
clc
jbe
mov
jl
pop
add
mov
inc
dec
push
jg
ja
add
add
mov
pop
push
adc
push
das
sub
bound
dec
push
jnp
ror
adc
mov
jg
xlat
hlt
inc
and
xor
fadd
imul
sub
jns
in
jle
sbb
cmp
jbe
mov
inc
add
ja
mov
rol
jg
aaa
xor
adc
pop
adc
mov
aam
mov
enter
inc
call
or
js
fimul
cmp
loop
or
adc
sbb
call
add
sub
push
(bad)
or
hlt
add
in
or
mov
cmps
scas
push
mov
push
shl
hlt
stos
add
sub
js
push
lock
mov
adc
add
repnz
daa
and
sbb
shl
add
aam
pop
adc
add
and
push
mov
cmc
ret
les
mov
inc
clc
inc
sbb
sub
jne
inc
arpl
(bad)
mov
clc
jbe
xchg
fimul
test
adc
and
(bad)
(bad)
call
and
pop
adc
pop
fadd
inc
inc
mov
test
jp
adc
gs
dec
xor
sbb
aas
loopne
push
fist
sbb
jecxz
adc
or
or
les
mov
mov
lea
adc
dec
cwde
fdiv
cmp
enter
(bad)
xor
push
inc
mov
add
inc
cmp
sbb
inc
sub
add
idiv
mov
clc
mov
sub
push
cmp
or
xchg
nop
inc
(bad)
in
scas
and
test
add
jbe
jecxz
(bad)
cld
jecxz
sub
xor
mov
mov
shl
dec
jo
sub
xlat
sub
cmp
mov
and
inc
mov
adc
test
bound
mov
pushf
adc
cmp
mov
rol
jecxz
loopne
sub
ror
add
adc
add
mov
das
(bad)
mov
inc
and
movs
jae
or
and
jmp
dec
push
or
enter
pusha
and
adc
or
std
jg
in
outs
fcomp
shr
cmp
adc
cmp
mov
dec
cmp
inc
clc
inc
and
jg
dec
jg
add
pop
push
push
js
idiv
cld
mov
add
ds
mov
jge
pop
jle
xchg
sub
adc
mov
test
fiadd
scas
push
and
jle
dec
lods
add
dec
leave
std
loopne
mov
addr16
mov
ins
cmp
mov
cmp
cli
mov
jmp
es
dec
in
and
push
and
mov
add
inc
jo
mov
mov
(bad)
mov
test
xchg
mov
inc
push
pop
(bad)
push
add
test
inc
and
les
cs
aaa
mov
xchg
xlat
mov
lea
daa
add
jnp
inc
bound
jns
cmps
jns
xor
push
cmp
and
ficom
rol
fcomp
pop
or
(bad)
fstp
mov
or
dec
and
movs
retf
pusha
mov
adc
xor
shl
mov
add
cld
fild
fmul
int
mov
adc
inc
fmul
int
cmc
rol
lock
les
(bad)
lods
jns
gs
and
pop
rcl
ins
xor
mov
shr
pop
aam
fdiv
adc
and
aam
fidivr
fnstsw
loop
adc
xchg
(bad)
xor
xor
push
fsub
imul
in
call
xchg
mov
cs
(bad)
fld
rcl
gs
mov
rcr
add
enter
les
fcomp
cld
int3
fld
gs
xchg
add
clc
sbb
int3
jns
ror
aam
in
or
popf
not
push
fsubrp
in
or
pop
push
push
xchg
pop
and
adc
pop
inc
adc
data16
xchg
push
fwait
gs
pusha
push
mov
mov
pop
or
mov
mov
inc
pop
enter
sbb
add
pop
sbb
clc
sbb
push
test
repz
push
lods
test
push
jl
lahf
xchg
enter
lahf
adc
lahf
or
hlt
add
aad
jb
and
add
or
pop
xchg
mov
les
mov
add
cmp
push
aaa
cmp
inc
sub
add
push
or
scas
cmp
scas
and
and
inc
imul
retf
and
(bad)
jg
repz
aas
pop
sub
aam
mov
jne
daa
sub
das
sar
push
sub
or
xchg
mov
inc
jns
dec
push
and
pop
mov
(bad)
in
sub
gs
mov
jp
repz
repz
dec
pusha
inc
jo
xor
inc
cmp
cs
mov
loop
add
jl
fwait
inc
pusha
mov
shl
ror
mov
outs
dec
lock
stos
sbb
dec
in
and
ja
sbb
mov
and
or
mov
in
shr
mov
add
ds
das
(bad)
fsubr
push
imul
sbb
dec
add
sbb
lock
or
pop
(bad)
in
sbb
sub
test
nop
jge
adc
pusha
dec
loopne
xor
nop
(bad)
js
mov
xor
pop
adc
dec
mov
jg
jl
jle
loopne
jge
or
ror
fldcw
retf
push
add
imul
in
mov
push
arpl
sti
shl
sub
or
push
dec
int
push
sar
adc
sub
adc
mov
repz
fld
add
xor
add
sub
sbb
sbb
fmul
repz
sub
fwait
adc
mov
in
sub
cwde
shl
fldenv
sbb
cwde
jns
or
in
loopne
push
sub
clc
push
lds
sti
dec
sbb
push
sbb
pop
std
xchg
les
push
ret
push
push
add
add
pop
or
dec
pop
test
push
ficomp
and
lea
and
mov
pop
in
test
or
aam
dec
rol
add
push
pop
mov
hlt
lods
jecxz
fstp
test
sbb
call
inc
xchg
js
in
mov
sbb
mov
cs
pop
fldcw
add
dec
sbb
pop
or
sub
je
adc
sub
sbb
shl
and
sub
js
pop
cmp
sub
mov
push
push
cmps
mov
mov
shl
mov
popf
mov
or
xchg
mov
pop
les
mov
cmp
dec
add
sub
dec
or
mov
mov
loop
cmp
mov
pop
(bad)
jge
or
fchs
les
mov
test
jns
mov
nop
mov
mov
pop
cmp
mov
xor
or
rcl
ret
mov
cmp
adc
mov
std
push
pusha
push
scas
fidiv
adc
cmp
sub
jg
dec
pusha
sub
fistp
mov
or
add
stos
into
out
(bad)
neg
lea
shl
neg
and
test
imul
mov
sub
cs
call
hlt
and
xchg
out
mov
adc
adc
pop
and
mov
fimul
in
jg
push
xor
imul
add
jns
inc
str
push
add
cmp
xor
and
jne
ret
rcr
pop
dec
push
in
int
mov
add
jl
js
push
ja
xchg
neg
add
xor
sub
fist
jo
clc
add
add
adc
clc
add
in
outs
push
ds
(bad)
fcom
add
add
inc
aas
pop
cs
cs
xor
xchg
xchg
add
pop
(bad)
loop
std
cmp
adc
add
(bad)
adc
stos
add
mov
fcom
or
retf
cmc
retf
arpl
inc
xchg
retf
retf
push
sub
(bad)
push
mov
lea
pop
das
aad
fisub
push
sbb
adc
push
or
inc
add
es
imul
and
adc
iret
shl
pop
or
hlt
stc
sub
adc
xor
and
pop
stos
aad
aaa
push
pop
retf
pop
sti
sub
jmp
jmp
adc
mov
push
aaa
push
int
add
test
hlt
sub
cld
dec
repz
cmp
out
(bad)
out
cmp
cmp
cli
xor
ret
cmp
test
std
mov
rcr
add
mov
ss
neg
pop
shl
movd
mov
xor
pop
out
adc
out
stos
adc
jns
sub
or
sbb
pop
push
neg
push
das
sbb
sbb
mov
rcr
imul
inc
sbb
mov
int3
jge
sahf
cmps
imul
sub
mov
mov
mov
ins
call
xlat
(bad)
call
jo
or
sub
sub
mov
cmp
iret
xchg
pushf
adc
or
xor
mov
cmps
adc
mov
clc
dec
(bad)
es
add
cmp
sub
jo
add
loope
jbe
or
add
sbb
pop
add
daa
test
sbb
imul
loopne
dec
pusha
sar
or
pop
add
adc
jnp
add
enter
xchg
mov
mov
cli
aaa
add
inc
imul
aaa
loope
lahf
and
ret
xchg
xor
mov
daa
push
mov
out
(bad)
clc
adc
arpl
push
and
adc
fstp
fwait
mov
ret
icebp
add
jno
inc
mov
fdivr
(bad)
ja
lea
out
mov
and
jl
lods
or
mov
add
sub
add
xchg
mov
sub
sbb
scas
inc
pusha
data16
lea
and
and
sub
adc
movs
mov
or
loopne
out
inc
test
fcomp
push
cld
xor
or
push
sbb
inc
xchg
or
and
xor
fsub
add
push
mov
outs
sti
mov
outs
dec
movzx
shl
inc
pop
adc
cmp
adc
xchg
sbb
pop
inc
sub
ror
inc
adc
xor
or
mov
inc
sbb
adc
cli
inc
and
in
or
rcl
ss
xchg
add
push
add
or
fs
repnz
jns
inc
cmp
mov
dec
shl
or
jbe
ret
call
lods
int
mov
jne
or
sbb
mov
in
xchg
scas
int
rcl
mov
add
push
dec
or
fcom
and
stos
pop
mov
or
lock
test
scas
inc
mov
pop
(bad)
stos
cli
mov
ror
in
mov
enter
int
or
mov
das
(bad)
mov
ss
xor
lds
mov
push
mov
adc
(bad)
(bad)
or
mov
jecxz
push
nop
push
clc
imul
jecxz
jle
mov
pop
stc
lock
in
sbb
push
fcomip
or
jle
dec
add
and
pop
jl
dec
sar
pop
add
pop
es
and
dec
pop
inc
icebp
daa
xchg
test
ins
cmp
rol
inc
xor
icebp
jne
cmc
enter
inc
add
or
popa
and
int3
les
lock
or
pop
stos
lahf
mov
jge
sbb
pop
mov
iret
dec
clc
inc
and
push
je
inc
push
adc
cmp
out
pop
add
aaa
or
dec
sbb
mov
je
mov
cmps
dec
add
popa
push
mov
retf
push
in
dec
nop
push
sbb
je
push
push
adc
adc
jnp
add
and
inc
or
clc
and
or
pop
inc
jo
sbb
inc
inc
in
pop
add
int3
xor
or
pop
add
adc
(bad)
cmp
mov
push
push
push
out
mov
or
push
fstp
xor
stos
push
lock
push
cmps
mov
pop
cmp
sbb
dec
js
out
cs
xor
pop
outs
add
push
inc
sub
inc
and
lods
pusha
das
mov
jne
xlat
hlt
inc
jbe
jne
pop
(bad)
rcl
(bad)
js
and
jnp
sbb
xor
dec
ficomp
pop
(bad)
dec
inc
js
jecxz
sub
mov
add
xor
push
or
bound
mov
cmp
mov
adc
cmp
sbb
cwde
std
jne
and
push
inc
push
das
jecxz
push
push
and
mov
and
sbb
push
sub
jb
and
and
xor
and
and
lock
push
jg
out
outs
jle
adc
xchg
jge
or
in
lea
outs
add
or
or
jno
aas
jl
pop
mov
jo
inc
push
(bad)
jnp
shl
mul
je
sub
(bad)
jmp
test
(bad)
mov
pop
xor
icebp
loopne
xlat
jl
xor
iret
nop
shl
sbb
fst
mov
rcl
sti
dec
add
pop
or
pop
(bad)
cmp
adc
adc
ret
xor
(bad)
lea
cld
pop
enter
inc
inc
xor
lds
and
ins
loopne
sub
inc
nop
sbb
pop
cmp
cmp
xchg
or
xor
lds
bound
sbb
fbstp
push
jnp
and
fist
out
inc
popa
add
add
add
mov
fadd
inc
(bad)
xlat
add
jecxz
repz
push
pop
mov
test
sti
jmp
pop
(bad)
popf
aaa
xchg
lock
(bad)
mov
jle
mov
xor
add
add
add
or
pop
dec
call
jecxz
pop
push
and
fadd
sub
aaa
xor
lds
sbb
mov
test
adc
int3
cmp
sub
dec
dec
jae
les
jl
inc
jmp
sbb
mov
ja
push
fwait
push
or
adc
adc
sbb
jo
inc
cmp
adc
mov
sbb
add
rol
cmps
aaa
mov
push
sti
mov
outs
jmp
hlt
push
fimul
mov
test
push
add
inc
ins
jbe
das
mov
adc
mov
(bad)
or
or
int
or
clc
and
pop
pop
and
adc
push
or
dec
lock
add
add
and
lods
imul
push
mov
rol
or
fiadd
cmp
push
mov
lds
ror
lods
pop
adc
xor
ja
lock
jge
add
data16
cmps
cld
push
jb
clc
dec
jne
or
mov
cmp
sbb
scas
clc
(bad)
sbb
add
cmp
ins
sub
and
inc
cmp
fistp
mov
mov
mov
mov
push
add
aaa
inc
mov
xchg
mov
xor
shl
frstor
sub
sub
dec
mul
add
sbb
ja
sub
pusha
adc
jle
mov
jne
pop
push
pop
push
ins
or
inc
or
pop
sbb
push
pop
call
or
sub
or
dec
or
mov
pop
inc
or
shufps
lods
sub
stos
sub
inc
sub
mov
loop
inc
sbb
aad
pop
jae
arpl
cmp
les
lock
mov
adc
or
int3
rol
stos
add
jmp
pop
sbb
sbb
or
jmp
mov
adc
je
jmp
cmc
ins
or
xor
es
push
outs
cmp
xchg
or
or
fiadd
jmp
jmp
jnp
int
cmp
adc
mov
idiv
sar
imul
sbb
mov
bound
add
mov
outs
gs
std
dec
add
mov
cld
xchg
dec
push
cmp
dec
mov
mov
or
cld
aas
icebp
mov
mov
dec
sahf
inc
and
sub
mov
mov
rol
daa
arpl
in
mov
or
pop
dec
jecxz
inc
add
js
jne
sbb
xchg
(bad)
icebp
mov
dec
xor
push
add
das
jl
mov
pop
aaa
mov
imul
sbb
add
push
lea
adc
mov
cmp
pop
adc
in
or
cmp
dec
jge
add
test
dec
sub
pop
je
sub
je
xor
push
lea
dec
gs
lods
sti
ret
aaa
jne
das
les
cmp
mov
and
hlt
jle
ins
or
or
pop
mov
call
pop
mov
mov
loopne
inc
inc
cmp
jmp
push
ret
jg
adc
inc
or
xor
push
les
dec
inc
xor
inc
mov
addr16
out
xchg
add
add
dec
fcmovne
gs
les
pop
inc
jbe
jb
inc
push
adc
mov
(bad)
dec
add
mov
nop
sbb
jnp
test
jmp
pop
out
and
mov
add
or
lahf
add
adc
or
xor
cdq
invd
adc
xchg
push
mov
jmp
dec
(bad)
popa
pop
and
jo
in
push
mov
jmp
pop
mov
xor
loopne
mov
pop
ficomp
shl
pop
add
jne
ret
test
or
and
in
mov
inc
dec
inc
fwait
add
ja
adc
xor
dec
sahf
ror
xchg
jne
add
in
mov
call
mov
inc
pop
xor
dec
clc
aaa
mov
or
inc
pusha
mov
cmp
lock
mov
lock
jno
jmp
and
lea
aad
pusha
sbb
ss
sub
xor
push
fdiv
pop
iret
xchg
mov
mov
movs
inc
inc
shr
leave
mov
inc
stc
adc
ds
or
cmps
mov
push
out
pop
mov
cmp
xchg
hlt
movs
test
pop
push
lahf
push
or
xchg
inc
xchg
add
xchg
pop
popa
pop
adc
xrelease
mov
and
add
push
test
cmp
add
mov
dec
inc
cmp
inc
cmp
adc
enter
call
add
pop
sbb
push
aam
cmps
popf
mov
fidiv
xor
pop
and
je
ins
push
sbb
test
push
dec
push
and
pop
mov
inc
jmp
test
push
nop
pop
pop
clc
inc
sub
adc
test
mov
cmp
mov
inc
add
or
fdivr
sbb
add
mov
push
jno
imul
mov
lods
mov
mov
xor
lock
icebp
jnp
cmp
popa
retf
test
pop
pop
jmp
and
adc
and
xchg
adc
imul
push
jg
je
lock
aad
add
jb
add
frstor
ins
mov
dec
dec
mov
push
cli
inc
push
inc
add
je
mov
push
push
lock
sbb
pop
loopne
sti
test
scas
cmp
jnp
in
fist
imul
bound
jmp
sbb
pop
cdq
pop
push
push
ss
fcom
mov
enter
ret
adc
inc
sub
mov
adc
dec
mov
bound
jmp
mov
das
xchg
fs
cmc
xor
push
cmp
aad
inc
fdiv
cmp
add
iret
inc
popa
fcomp
test
or
add
push
fnstenv
jmp
mov
leave
clc
jmp
add
retf
mov
nop
retf
xchg
shl
mov
mov
lahf
ins
loopne
lock
fdiv
mov
fstp
dec
lds
adc
pop
inc
ret
mov
xor
inc
jne
pop
inc
sub
inc
adc
lods
cmp
dec
mov
sbb
add
dec
dec
dec
mov
cmp
ins
retf
div
mov
aas
push
sbb
pushf
cmp
(bad)
jmp
push
jo
add
push
adc
jbe
adc
ret
(bad)
mov
inc
and
mov
inc
les
daa
jmp
mov
fdivr
mov
pop
sbb
jge
sti
sar
mov
fcmovnb
sbb
jl
push
xlat
jle
add
sar
pop
mov
add
lea
fcom
imul
sub
mov
aaa
mov
fld
sbb
mov
push
mov
je
mov
add
rol
mov
or
rol
or
jnp
jmp
mov
mov
pop
mov
pop
sbb
mov
pop
in
xchg
cmps
std
mov
imul
inc
inc
xchg
ret
mov
dec
and
lods
xchg
pop
pop
add
movs
(bad)
imul
call
inc
and
add
mov
call
cld
fld
scas
dec
cmp
dec
pusha
and
adc
pop
inc
call
clc
jl
and
sub
jne
call
cli
pop
loop
mov
sub
cmp
jge
pusha
cmp
mov
jne
xchg
(bad)
sbb
push
jae
mov
es
fidivr
mov
cld
fstp
jg
mov
mov
mov
mov
pop
ror
push
inc
dec
jl
push
out
add
mov
xchg
cmps
mov
add
xor
cmp
iret
lea
mov
sub
sub
xchg
or
add
cmp
push
clc
and
ficomp
push
add
ret
lods
push
daa
cdq
out
lock
xchg
push
or
push
rcl
mov
movs
xchg
inc
fwait
cmp
add
push
loopne
add
push
push
sub
inc
aam
mov
nop
in
or
(bad)
cmp
push
mov
mov
inc
xor
pop
and
not
adc
and
jg
inc
test
enter
ss
mov
adc
xor
cmp
mov
in
dec
add
adc
push
cmp
aas
mov
push
cmp
out
sbb
das
lock
push
jl
(bad)
adc
pop
sbb
or
adc
bound
adc
cld
imul
xor
shl
and
rcr
mov
xchg
imul
mov
mov
jbe
mov
and
into
push
mov
push
adc
cmp
rcr
sub
add
xor
dec
xchg
xchg
pop
ret
popa
sbb
add
dec
jg
and
aam
adc
xchg
jo
sbb
push
xchg
jnp
pop
dec
and
shr
icebp
pop
pop
loopne
in
jo
lea
or
sar
inc
add
inc
out
push
push
leave
shl
ficomp
ins
or
mov
(bad)
inc
mov
adc
xchg
push
push
or
jge
mov
lahf
stos
inc
fmul
ret
inc
jl
mov
data16
icebp
loopne
sub
add
jnp
outs
fdiv
xor
nop
or
xor
lahf
enter
lea
pop
inc
adc
xor
fbld
prefetch
enter
leave
mov
add
retf
fs
add
xor
fdiv
sbb
or
aad
xchg
adc
pop
pop
or
dec
stos
add
fiadd
push
xor
adc
push
cmp
add
aas
sbb
and
pusha
mov
repz
clc
sbb
cmp
rol
mov
push
out
adc
(bad)
cwde
xchg
mov
fwait
mov
in
ja
shr
push
pop
inc
lock
push
stc
es
js
or
dec
mov
xor
pop
daa
fcmove
dec
ins
daa
adc
cld
jno
jne
add
dec
add
adc
sub
inc
cmp
ds
dec
or
aam
int
data16
js
inc
js
jle
pop
dec
xrelease
sar
std
sbb
mov
or
cmp
cmp
pop
add
aas
and
dec
imul
add
outs
mov
adc
fwait
add
sub
imul
(bad)
ficom
dec
xlat
rcr
mov
sub
cli
add
out
xor
cmp
push
push
adc
sbb
cwde
imul
add
push
enter
stos
arpl
lock
dec
bnd
sbb
and
adc
pop
jo
loope
fsub
inc
push
mov
sbb
test
push
movs
push
fiadd
ins
jmp
add
shr
inc
cmp
outs
int
inc
mov
or
aam
add
jbe
adc
push
sbb
scas
adc
add
push
mov
shl
dec
leave
sub
ret
push
leave
inc
push
dec
inc
dec
icebp
stos
and
dec
push
rol
add
inc
cmps
sbb
mov
xchg
add
leave
movs
xor
pop
push
mov
xchg
and
or
and
fisub
dec
inc
and
xor
dec
cmp
cmps
add
cmp
jno
ins
xor
pop
mov
sbb
lods
popa
cld
inc
add
cs
scas
adc
mov
adc
leave
rol
rcr
mov
xchg
or
and
inc
or
cmp
add
xlat
push
dec
(bad)
sbb
lods
push
rcr
adc
cwde
or
and
or
in
pop
cld
sar
addr16
push
imul
inc
sub
movs
test
in
xchg
mov
add
sub
aam
inc
clc
or
push
xor
popf
add
push
adc
fild
push
mov
sbb
cld
stos
and
and
iret
in
adc
jle
jle
aam
jle
dec
sbb
adc
cmp
jne
sbb
add
jecxz
sbb
lock
adc
mov
mov
mov
(bad)
ror
add
jo
ret
popf
es
je
sti
push
mov
or
mov
mov
mov
mov
nop
cmp
nop
mul
sbb
movs
leave
inc
jge
sahf
pusha
xlat
mov
sahf
lods
daa
cs
(bad)
xor
adc
push
push
retf
cmp
(bad)
fsub
add
aam
add
cld
sub
push
xor
add
inc
rol
push
add
mov
stos
or
mov
mov
fbstp
add
add
mov
ja
mov
push
sub
or
push
sub
xor
fild
mov
pop
fsub
pop
loope
imul
sbb
enter
dec
movs
arpl
adc
inc
mov
dec
xor
test
sbb
and
sub
jmp
jl
xchg
cmp
jb
mov
mov
add
sub
dec
adc
add
inc
pusha
cmp
xor
int
in
and
lea
mov
dec
sbb
data16
dec
bound
loop
xor
sbb
dec
and
or
dec
sbb
in
inc
int3
and
pop
shl
aas
pop
data16
adc
jmp
mov
sbb
and
add
sub
add
adc
jle
add
lea
(bad)
push
and
mov
or
mov
jo
push
xor
lea
mov
mov
jg
xchg
pop
dec
lock
dec
es
mov
test
pop
cmp
movs
cdq
sub
sbb
dec
fidiv
add
retf
daa
and
sahf
and
sub
addr16
scas
jmp
and
jmp
and
cmp
in
inc
popa
loop
xchg
lock
rcr
jecxz
inc
cmp
popa
jb
cmc
push
(bad)
aad
imul
rol
nop
or
add
xchg
clc
gs
out
sbb
icebp
jne
fstp
je
or
inc
dec
es
dec
scas
or
xlat
fidivr
adc
jmp
adc
call
inc
add
ins
pop
jbe
in
pop
fabs
ror
les
loope
mov
sbb
gs
adc
dec
dec
imul
inc
cmp
adc
mov
idiv
push
jne
pop
and
mov
fdivr
aas
std
mov
mov
add
xchg
daa
sbb
add
and
mul
aaa
in
xor
or
jne
inc
dec
movs
loopne
add
pop
dec
loop
sbb
adc
mov
add
dec
add
lock
dec
lods
cmps
(bad)
pop
push
cmp
dec
out
(bad)
out
sub
mov
in
mov
adc
call
cli
or
mov
xchg
dec
sbb
or
add
cld
add
add
adc
fnstsw
mov
mov
movzx
cmp
aam
inc
(bad)
inc
jl
cmp
loope
test
cwde
cmp
pop
mov
add
mov
add
push
cmp
adc
adc
xchg
push
loop
dec
push
inc
fwait
test
loop
pop
jmp
sbb
in
or
add
pop
pusha
lods
mov
push
mov
pop
or
xlat
jl
push
pop
sbb
push
adc
mov
sbb
test
or
adc
mov
jle
lea
(bad)
adc
adc
and
adc
xor
add
lock
aam
and
xor
dec
or
or
adc
jmp
sbb
ret
fistp
(bad)
jge
mov
xchg
enter
fild
adc
pop
lods
dec
sbb
xchg
bound
inc
push
cmp
push
and
push
sbb
adc
shl
ret
sub
pop
mov
jmp
pop
adc
xor
fs
nop
movs
pusha
sbb
movs
fcmovb
xor
push
mov
and
je
add
mov
jnp
dec
mov
inc
push
mov
test
jge
adc
clc
adc
scas
ficom
je
jmp
push
mov
push
mov
movs
shr
inc
xor
stos
(bad)
jl
pusha
xchg
mov
xchg
inc
sbb
and
xchg
dec
add
scas
loop
xchg
jg
loopne
adc
mov
pop
call
das
xor
adc
cdq
test
sbb
ins
push
mov
xchg
and
in
xor
mov
out
mov
mov
fs
sbb
outs
bound
or
fdiv
adc
add
xor
fadd
arpl
push
mov
inc
pop
xchg
cmp
adc
out
(bad)
sti
adc
lea
shl
jg
xor
stos
or
imul
shr
fs
inc
sbb
sbb
sbb
loope
xlat
adc
arpl
stos
jmp
adc
cmp
test
ret
mov
push
jnp
fs
mov
jg
sbb
mov
xchg
jle
ss
xor
mov
in
lds
jo
in
mov
loope
mov
jmp
icebp
sub
imul
ror
xchg
shl
jbe
call
or
mov
jp
jmp
loope
int
je
sbb
mov
pmuludq
adc
in
jmp
aas
push
sbb
xor
cmp
faddp
popf
(bad)
sbb
or
adc
pop
nop/reserved
popa
adc
icebp
out
dec
mov
or
pop
mov
clc
push
mov
cmp
shl
dec
call
mov
dec
pop
or
leave
dec
mov
xchg
xchg
div
mov
jmp
pusha
dec
add
add
stc
das
sub
retf
inc
sbb
sti
jl
jle
int3
or
loopne
push
sbb
push
test
outs
or
xchg
adc
add
(bad)
mov
and
jl
mov
in
les
push
add
adc
sbb
movs
cmps
pop
cmp
mov
cmp
push
inc
adc
add
nop
sub
call
adc
adc
add
add
lods
imul
pop
xor
call
repnz
add
add
add
mov
stc
icebp
or
outs
and
shl
movsx
test
adc
xchg
xchg
jg
sbb
or
adc
mov
mov
mov
mov
xchg
cli
inc
sbb
push
push
js
aas
je
mov
sti
adc
add
sbb
and
jmp
push
sub
jmp
xchg
mov
xlat
jne
jae
xchg
jne
lea
js
aam
sbb
lahf
or
add
push
xchg
push
inc
arpl
(bad)
mov
loope
xor
mov
mov
idiv
mov
mov
and
mov
mov
dec
inc
add
mov
ffree
dec
sub
rol
jg
push
(bad)
and
rol
xor
mov
xchg
ins
or
adc
jle
sbb
and
cli
add
test
fwait
and
std
add
das
or
xchg
aad
(bad)
jl
and
xor
mov
std
or
sbb
pop
push
(bad)
sub
or
adc
test
push
ficomp
jbe
sar
inc
jmp
popa
add
popa
rol
ror
jecxz
mov
dec
and
xor
pop
inc
dec
push
dec
add
fild
fcomp
popf
inc
mov
sub
lea
push
jg
push
sbb
mov
aaa
and
sub
add
mov
or
(bad)
mov
mov
lods
push
add
or
rcr
mov
and
push
stos
fdivr
adc
jne
nop
cmp
pop
jns
repz
leave
and
and
cmp
or
cmp
stos
jno
bswap
xchg
and
mov
imul
mov
(bad)
push
ror
lds
sub
sbb
xlat
loope
sub
mov
add
xchg
and
dec
pop
pop
jne
add
fmul
or
add
mov
addr16
or
mov
stc
lea
add
dec
dec
ins
ror
sti
das
(bad)
aam
sbb
jl
add
shl
add
adc
jl
mov
inc
enter
jl
mov
(bad)
xor
pushf
add
and
inc
or
mov
or
in
and
lea
xchg
adc
and
inc
ret
dec
out
cmp
pop
add
clc
sub
or
outs
inc
push
jecxz
xor
nop
cmp
sub
inc
cmps
add
mov
mov
xor
adc
inc
or
or
rol
dec
adc
lock
xor
hlt
mov
repnz
icebp
ins
dec
hlt
add
mov
sbb
dec
aaa
pop
ins
ja
sbb
adc
test
fwait
add
out
dec
bound
inc
scas
pop
and
adc
cmp
inc
push
sbb
mov
sub
add
and
int3
sbb
imul
call
mov
add
add
ficom
push
push
cld
adc
or
mov
test
inc
or
mov
pusha
scas
mov
aad
fs
retf
push
pop
ficomp
into
mov
xchg
mov
and
mov
in
nop
pop
pop
add
or
jbe
or
push
mov
inc
or
push
sub
lahf
or
(bad)
pusha
pop
push
and
adc
push
outs
xchg
mov
inc
add
popf
fmul
shl
test
push
add
adc
cmc
mov
dec
dec
sbb
hlt
pop
aas
das
mov
imul
xchg
mov
dec
scas
push
add
(bad)
push
xor
das
ror
add
dec
call
mov
dec
adc
sbb
and
adc
xor
inc
rol
sub
popa
jae
mov
push
ret
cmp
pop
jl
xor
mov
add
xchg
ins
add
add
cmp
push
or
sbb
lods
test
pop
outs
pop
pop
out
pop
jmp
push
and
(bad)
out
mov
and
push
sbb
or
fs
push
pop
add
dec
out
and
or
pusha
and
sbb
loop
sbb
jo
mov
ins
mov
cmp
adc
call
adc
xor
add
or
add
adc
jmp
push
dec
or
and
push
sbb
add
mov
sub
and
and
scas
add
inc
mov
unpcklps
hlt
cmc
inc
xor
inc
jmp
xor
daa
rol
mov
adc
or
hlt
add
adc
or
xchg
mov
mov
call
add
inc
adc
push
mov
pop
mov
pop
arpl
add
dec
jne
mov
cmp
sbb
sbb
les
mov
sbb
and
sbb
add
rol
push
test
mov
shl
in
shl
push
ja
and
lea
lds
sub
sbb
mov
movs
xchg
fbstp
test
sbb
add
call
into
lea
inc
add
jl
stc
pop
and
mov
or
retf
std
cmp
aam
mov
xor
sbb
add
adc
xor
xchg
cmp
push
and
xchg
ins
push
lea
mov
pusha
test
add
and
xor
hlt
add
dec
mov
mov
inc
movs
pop
clc
sub
xor
mov
int3
lea
jb
ins
push
xor
cmp
ins
inc
add
pop
add
(bad)
stc
pusha
inc
xchg
push
push
rcr
mov
cmp
(bad)
outs
add
push
xchg
or
hlt
rol
dec
add
mov
scas
ret
in
out
xor
dec
(bad)
xchg
loop
xchg
popa
daa
sub
inc
or
pusha
and
ins
or
push
push
add
or
sbb
xchg
aam
mov
push
lock
add
adc
push
test
pushf
fwait
ds
and
cdq
(bad)
sar
mov
in
adc
shl
ret
(bad)
pop
psrld
movs
jae
sub
push
lock
mov
sbb
sbb
and
jl
rol
sbb
push
lea
mov
mov
adc
jne
jl
push
add
dec
sub
jmp
and
add
data16
jmp
rcr
push
mov
push
inc
sub
pop
nop
mov
jnp
push
cmp
sbb
mov
lock
or
cmp
xor
inc
mov
test
mov
jge
and
out
(bad)
add
or
cmp
imul
fst
mov
cmps
pop
enter
mov
jns
mov
aam
adc
push
adc
imul
stos
mov
add
call
xor
mov
add
cmp
and
push
cmp
adc
shr
aas
(bad)
popf
mov
adc
or
rcr
inc
shl
clc
popa
jecxz
add
mov
or
cmp
dec
xchg
lahf
jl
sub
pop
push
mov
scas
add
and
jle
imul
fiadd
and
and
movs
xchg
lock
rcl
fwait
ja
dec
test
push
sar
mov
popf
jle
lea
aam
cmp
mov
mov
push
cwde
add
inc
pop
xor
inc
sahf
imul
or
xor
mov
cmp
test
mov
adc
add
dec
jno
or
pop
add
es
je
fisttp
ret
ror
mov
sub
arpl
adc
dec
rcl
outs
add
or
jo
lahf
and
push
pushf
inc
pop
or
mov
inc
sbb
mov
jle
add
push
lds
mov
pop
dec
iret
cmp
add
sub
in
loope
test
mov
dec
cmp
and
jecxz
mov
xor
movs
dec
sbb
inc
(bad)
sti
imul
or
fdivr
push
daa
ins
or
dec
sahf
xor
out
add
dec
je
add
jmp
pop
adc
dec
mov
movzx
inc
repnz
push
adc
inc
push
das
dec
push
mov
outs
int3
rol
xor
cmp
dec
adc
mov
add
push
adc
and
sub
push
lea
xchg
sbb
ss
or
push
dec
das
sbb
clc
mov
adc
test
mov
pop
sub
inc
xor
sub
imul
pusha
adc
shr
jns
inc
imul
mov
inc
pop
xor
test
dec
jge
adc
sub
cmp
mov
xor
inc
retf
ret
lock
sbb
and
jnp
pop
and
cmp
fisub
xchg
aam
adc
cs
cwde
and
jmp
shr
adc
inc
mov
data16
jle
ins
jo
call
inc
xchg
test
in
add
imul
inc
adc
adc
mov
cmp
cli
add
clc
rcr
xchg
mov
jl
cmp
aad
test
jmp
hlt
push
icebp
mov
dec
and
and
fidivr
cmp
stos
sbb
jl
jp
xchg
outs
and
arpl
fwait
jle
cwde
and
retf
inc
(bad)
rol
imul
dec
nop
cld
mov
pop
repnz
pop
add
adc
dec
or
gs
adc
sbb
inc
xor
fdivr
pop
lea
xor
cmp
mov
inc
or
scas
mov
jl
push
adc
inc
call
mov
or
mov
inc
and
add
xor
inc
sbb
test
repnz
sub
test
(bad)
sbb
or
dec
test
inc
popa
loope
inc
dec
and
(bad)
cmp
mov
mov
lea
xlat
add
loopne
repz
push
mov
inc
rcr
lahf
dec
dec
inc
mov
jae
stos
dec
sar
xor
ds
adc
mov
in
clc
js
cmp
sbb
adc
push
xchg
pusha
mov
add
pop
test
add
pop
dec
enter
push
dec
scas
xor
mov
dec
lea
add
repz
push
dec
and
jne
test
or
inc
push
sbb
and
add
add
jae
(bad)
pop
or
fmul
js
es
sub
mov
mov
fmul
inc
push
mov
inc
add
mov
ror
clc
es
add
push
adc
pop
inc
movs
adc
fidivr
leave
push
add
add
or
cmps
test
and
adc
and
inc
pop
pop
xchg
inc
hlt
add
popa
(bad)
xchg
add
add
add
clc
and
nop
add
add
add
add
addr16
xor
jmp
inc
scas
in
or
or
pop
inc
xchg
adc
inc
adc
aaa
inc
jl
adc
lock
mov
dec
add
out
mov
ds
adc
adc
mov
mov
aaa
inc
and
add
es
ds
mov
xchg
(bad)
mov
inc
cmc
jg
jmp
mov
and
push
sbb
jle
sbb
les
pop
ds
pop
pop
jg
mov
and
mov
jle
pusha
add
mov
loope
mov
xor
sbb
imul
inc
sbb
push
inc
xchg
jo
jno
adc
retf
inc
in
mov
pop
push
sahf
ficom
or
stos
adc
movs
movmskps
jg
adc
rcl
(bad)
jmp
loopne
adc
and
lea
mov
adc
pop
adc
ins
xor
or
in
jb
retf
inc
jmp
outs
hlt
cld
jns
add
pop
fistp
xchg
loopne
and
pop
adc
inc
in
sbb
xor
inc
sar
jle
xor
test
adc
mov
mov
add
(bad)
out
mov
test
add
add
mov
pusha
ror
or
leave
sub
pop
mov
aaa
aas
adc
in
xchg
adc
loopne
sbb
rcr
pop
add
or
popa
inc
mov
inc
loopne
inc
xor
xlat
xchg
aas
or
cmps
call
or
and
push
push
aam
je
pop
lds
pop
add
mov
mov
dec
cmp
add
dec
sahf
ja
pop
in
retf
mov
pusha
test
inc
inc
or
pusha
add
and
popf
sbb
inc
mov
mov
cmps
in
add
push
shl
mov
pop
pop
inc
in
push
fadd
push
sub
rcr
sbb
shl
and
dec
stos
call
add
movzx
pop
mov
das
push
sbb
jp
pop
jae
scas
push
xor
adc
cwde
mov
xchg
loopne
enter
fcomp
es
sub
jb
push
in
(bad)
cmps
mov
xchg
js
sbb
and
mov
pop
add
les
or
push
add
inc
inc
xor
adc
invd
and
loopne
(bad)
pop
cmp
nop
push
ret
xchg
ror
xor
add
xor
jae
sbb
sar
or
(bad)
sar
clc
jl
sbb
iret
or
or
pusha
add
ss
dec
and
xchg
cmp
sub
iret
sub
iret
sub
push
ins
je
push
sahf
neg
push
call
push
mov
push
add
push
ja
cmp
je
xchg
pop
les
or
mov
push
scas
loopne
inc
out
mov
hlt
and
adc
pop
xchg
or
sbb
add
outs
jb
mov
inc
cmp
mov
add
sbb
enter
pop
cdq
test
enter
inc
sbb
adc
mov
arpl
mov
hlt
cdq
les
mov
sub
mov
jne
aas
scas
jo
cmps
movs
push
or
push
adc
xchg
jno
inc
jle
push
dec
mov
cld
jge
test
rcl
bound
test
mov
adc
push
mov
adc
jg
inc
pusha
and
mov
ds
pop
pop
pop
adc
call
push
clc
mov
leave
dec
rol
mov
inc
push
push
sbb
mov
adc
and
add
ror
enter
outs
dec
cld
es
call
mov
sbb
jo
les
inc
cmp
mov
xchg
test
mov
push
loop
or
mov
or
dec
cdq
in
push
es
mov
out
in
imul
add
xor
jae
aam
in
fadd
rol
and
inc
mov
ins
cmps
int
adc
adc
dec
int3
js
inc
inc
adc
cli
pop
les
jle
or
and
(bad)
jge
adc
idiv
add
add
and
push
jge
xor
jge
icebp
add
inc
inc
add
inc
dec
jl
pop
test
sub
mov
fwait
js
mov
jge
scas
sar
mov
js
add
mov
jb
into
cmps
pop
pop
mov
push
int3
lea
jle
js
xor
push
mov
in
inc
adc
xchg
popa
add
dec
cld
loopne
loopne
(bad)
(bad)
xchg
cs
jmp
dec
and
gs
or
add
push
jb
push
test
inc
pop
add
into
push
pop
je
test
jmp
add
dec
or
lods
ss
jae
xchg
sbb
fld
xchg
sub
jb
shr
sbb
clc
jg
cs
aas
daa
lock
or
cmp
daa
call
sub
jge
jmp
adc
ret
add
inc
push
and
or
jae
inc
sub
adc
or
lock
loopne
pusha
fiadd
mov
inc
popa
jb
inc
or
or
jne
xchg
pop
inc
rol
aam
ins
icebp
add
inc
dec
lea
push
loopne
sub
add
push
adc
mov
jnp
mov
jne
and
jp
adc
cmp
dec
and
(bad)
mov
aam
push
adc
bound
loope
adc
icebp
ins
jl
add
and
xor
es
int3
icebp
xor
out
or
add
mov
pop
call
lock
mov
xlat
or
movs
jne
inc
mov
shl
adc
adc
inc
cld
lock
pop
in
pop
fcmovb
(bad)
mov
or
retf
jbe
(bad)
jbe
jge
push
pop
loopne
and
push
adc
add
cmp
jle
test
xchg
and
push
dec
sub
pop
adc
push
jp
push
pop
jmp
or
or
call
or
movs
scas
dec
xchg
sub
test
clc
xor
call
xor
dec
inc
xor
fimul
ret
add
inc
rcr
dec
ins
pusha
inc
add
inc
mov
fdivr
out
and
lahf
adc
inc
clc
or
adc
call
out
or
and
add
push
xchg
cmp
aam
shl
movs
and
inc
int3
adc
rcl
test
(bad)
test
cmp
or
cld
xor
pusha
xlat
call
call
add
sbb
call
lods
dec
je
add
(bad)
sbb
repz
and
and
push
ficomp
test
scas
adc
pop
and
add
std
loop
icebp
mov
in
in
(bad)
and
jbe
add
lock
enter
mov
lds
pop
aam
(bad)
sti
ja
stos
call
je
outs
add
pop
push
mov
test
and
lods
(bad)
jae
and
sub
ja
sub
inc
inc
inc
push
and
adc
xor
add
inc
add
sbb
or
inc
sbb
or
mov
enter
and
and
or
mov
or
outs
nop
lock
jne
ja
movs
les
lods
imul
and
and
push
inc
nop
mov
adc
jnp
mov
push
mov
pop
and
push
jae
iret
or
push
mov
sub
ret
outs
dec
and
andps
retf
jmp
mov
mov
cmp
inc
aaa
in
jae
or
adc
in
dec
scas
push
enter
mov
es
add
mov
daa
imul
fistp
pop
cdq
cmp
and
adc
and
movs
test
push
push
inc
cmp
cmp
pop
mov
gs
adc
sub
je
sti
pop
jl
dec
push
sub
ret
test
cmp
lea
dec
cdq
dec
test
aad
jmp
test
jle
mov
sbb
adc
mov
rol
(bad)
cmc
inc
idiv
or
fisubr
cmp
movsx
int3
fild
or
fisub
inc
jl
ret
les
jo
inc
and
and
add
dec
shr
dec
cmp
retf
std
xchg
inc
jns
adc
or
mov
js
xchg
or
or
pop
and
cmp
loope
sub
paddusb
fmul
cmp
adc
mov
mov
inc
and
sbb
mov
adc
add
push
jbe
xor
popa
sub
dec
cmp
in
rcl
out
mov
cmc
repz
sub
nop
mov
loopne
pusha
js
add
scas
je
xlat
(bad)
les
call
add
mov
pop
push
add
fcom
inc
sbb
xchg
lea
sbb
push
lock
sub
adc
in
pop
jb
jo
mov
mov
mov
add
cwde
pop
inc
(bad)
sar
cmp
aam
mov
enter
or
jbe
dec
sub
adc
and
dec
sub
pop
cmp
in
in
xor
aam
or
shl
enter
inc
enter
or
adc
mov
fld
mov
and
fidiv
loopne
fadd
xor
fcom
xor
and
aam
shr
and
int3
dec
push
icebp
push
in
das
test
dec
enter
call
ret
seto
outs
lea
movs
jnp
stos
mov
pop
sbb
xor
push
arpl
fcomp
rol
push
mov
add
mov
jne
adc
es
inc
mov
aam
inc
cmps
mov
pop
cmp
dec
mov
cmc
jmp
dec
pushf
stos
cmp
(bad)
(bad)
hlt
jl
pop
sub
pop
push
sbb
fild
cmp
or
fadd
jecxz
inc
gs
call
pop
or
or
jnp
out
sub
das
sete
pop
adc
das
pop
fnstenv
add
fidivr
adc
xor
xor
push
and
pop
xor
xchg
mov
inc
adc
call
and
inc
mov
nop
clc
xor
pop
adc
lea
mov
(bad)
jnp
sbb
jbe
daa
mov
pushf
xor
inc
popf
xor
or
mov
pop
jg
dec
xchg
xor
mov
sbb
in
mov
daa
push
and
inc
retf
mov
out
jo
mov
cmp
call
dec
sub
add
and
or
cwde
push
in
daa
add
or
frstor
xchg
or
sbb
adc
jg
je
push
test
imul
xchg
inc
fcmovu
dec
add
das
rcr
xor
(bad)
imul
dec
loope
outs
std
ja
and
out
mov
int
out
jae
jo
fwait
sub
sar
and
inc
sub
inc
das
(bad)
xchg
out
fisubr
das
adc
mov
cmp
mov
or
cmp
imul
add
div
movs
retf
jo
call
sbb
adc
daa
inc
and
loope
mov
inc
or
cmp
mov
mov
mov
outs
add
iret
cli
mov
jmp
dec
adc
jnp
jns
dec
inc
sub
jmp
fadd
jbe
mov
imul
add
clc
jne
cli
inc
adc
test
jp
cmp
sbb
fwait
jge
push
push
push
inc
inc
shl
test
mov
xor
vmptrld
mov
pop
add
ret
adc
pop
cmp
cmp
imul
into
(bad)
cmp
adc
lock
add
pop
mov
mov
das
sbb
adc
push
scas
or
dec
xchg
adc
rcl
les
pop
and
sub
dec
or
push
push
fnstenv
adc
je
cmps
adc
fwait
pop
mov
or
xchg
repz
mov
sahf
sub
dec
or
push
adc
or
xchg
(bad)
rcr
ror
aas
push
add
inc
dec
pop
inc
ja
adc
xor
xchg
fcmovne
mov
in
mov
xor
mov
adc
add
pusha
fwait
jbe
dec
mov
dec
add
and
pop
dec
pop
ret
popa
jecxz
mov
ror
test
add
mov
pushf
xchg
dec
adc
or
imul
mov
imul
and
and
lea
pop
jo
cmps
leave
xchg
push
xor
cwde
ret
sbb
(bad)
in
scas
cmp
xor
adc
neg
sti
mov
scas
hlt
shl
(bad)
not
call
outs
and
enter
jmp
dec
loope
hlt
int
or
add
neg
adc
cmps
and
add
xchg
clc
mov
std
or
push
mov
xor
ret
add
jns
int
aaa
sbb
stos
pop
test
(bad)
sbb
inc
neg
call
adc
sbb
dec
inc
sub
or
or
dec
jae
mov
inc
inc
arpl
inc
cmp
addr16
and
cli
mov
fs
mov
or
lock
cwde
sub
mov
dec
sar
addr16
sbb
sub
pop
add
adc
xchg
xchg
test
lea
(bad)
loopne
pop
aas
inc
(bad)
lods
jge
adc
fdiv
pop
inc
dec
or
mov
mov
and
or
adc
and
cdq
pop
jecxz
push
test
add
jg
xor
movs
loop
jo
or
xchg
cmp
neg
add
cwde
into
sar
imul
outs
jo
mov
lods
jle
jae
inc
add
adc
jmp
cmc
hlt
adc
add
mov
mov
jne
inc
or
xor
sub
add
push
out
shl
lock
shr
(bad)
cmp
fisttp
push
inc
or
jle
popa
jle
mov
cli
add
push
(bad)
jns
sub
inc
ja
or
cmp
jge
xchg
mov
mov
xchg
jmp
add
sbb
mov
push
pop
jmp
std
div
cmp
add
add
and
xor
call
das
lock
ss
shl
out
data16
in
inc
mov
add
fild
xlat
fwait
jg
and
mov
sahf
push
push
adc
xchg
adc
xchg
xchg
push
test
scas
jne
loop
inc
jl
inc
ret
mov
adc
(bad)
or
pop
sbb
inc
aaa
add
lea
jmp
or
xchg
mov
popa
jp
adc
pop
aaa
call
mov
or
int3
mov
xlat
or
sbb
ja
test
stc
daa
ins
enter
lock
arpl
dec
mov
ret
jmp
jl
lar
cmps
scas
call
pusha
test
repz
inc
cmp
sar
add
in
cli
fisubr
xlat
push
stos
pop
xor
dec
fdivr
and
push
add
mov
fwait
inc
sub
mov
xor
jmp
sub
or
xor
push
imul
push
cmp
mov
push
int3
jns
int3
cmps
mov
cmp
ss
clc
sub
add
dec
jge
xchg
es
and
sar
xchg
les
pop
add
add
lea
pop
scas
test
mov
fld
fstp
sti
mov
mov
les
or
xchg
jmp
or
and
adc
sbb
ret
sub
and
dec
sbb
inc
mov
xor
add
xor
push
push
and
mov
sub
es
mov
sbb
and
fisubr
add
scas
sbb
popa
inc
addr16
mov
rcl
sub
xchg
movs
dec
pusha
jae
mov
push
rol
(bad)
xor
repz
jecxz
add
inc
sbb
sbb
push
bound
mov
pop
and
inc
add
sbb
add
sub
es
or
cmps
push
pop
imul
adc
push
popf
or
and
repnz
das
sub
mov
push
and
jbe
in
sub
cs
fs
std
out
jge
adc
sub
or
dec
xor
sub
xchg
outs
cmp
pop
or
mov
out
sub
push
push
sbb
sbb
sbb
idiv
sbb
xchg
inc
fld
icebp
cmp
imul
sub
retf
jnp
fsub
cmp
sbb
cmp
inc
jl
cmp
cs
adc
fs
out
test
pop
add
fs
xor
sbb
sub
shr
fiadd
test
or
add
add
sbb
mov
inc
xor
es
pop
imul
sbb
push
mov
xchg
and
mov
pop
inc
call
add
fs
pusha
and
mov
xor
repz
aas
adc
out
ret
ds
or
xchg
mov
or
adc
loopne
fcom
sbb
pop
mov
inc
pop
xor
and
adc
dec
ror
mov
lds
adc
or
pop
fst
shl
mov
and
aam
or
jnp
mov
inc
sbb
xchg
push
mov
jo
ret
adc
or
xchg
pop
mov
adc
jo
lock
mov
inc
xchg
scas
push
sbb
or
jmp
lea
das
mov
pop
sub
sbb
push
push
xlat
xor
popa
xor
sub
xor
std
sub
xchg
add
in
std
or
xor
repnz
xchg
xor
lea
je
lahf
ror
dec
mov
jmp
sub
dec
cs
adc
add
push
push
or
cmp
jg
ss
mov
push
cmp
sbb
lea
add
add
pusha
add
icebp
inc
add
push
add
cli
mov
xor
movsx
int3
loopne
sub
jmp
lea
and
inc
inc
cmp
je
push
and
sti
push
and
mov
ret
mov
pop
xchg
in
adc
add
pop
cmp
pop
movs
mov
push
pop
ror
lea
fmul
jo
scas
cwde
ror
repnz
jns
jge
pop
xor
test
not
cmp
jg
rcr
jp
dec
mov
and
dec
ret
scas
mov
jecxz
or
aam
or
jecxz
add
fadd
lods
add
rcl
push
lahf
xor
sahf
sbb
iret
xchg
mov
or
or
jns
adc
add
add
mov
sub
cmps
sbb
sbb
cmps
mov
retf
inc
push
fld
xchg
mov
out
jo
push
stos
inc
out
inc
inc
fs
adc
or
xor
add
cmp
dec
in
add
sub
adc
jo
add
pop
and
push
xor
jbe
sar
mov
sbb
test
mov
cs
or
xchg
(bad)
fidiv
pusha
mov
jae
mov
repz
shl
mov
and
jne
dec
push
jae
in
mov
ret
lods
fistp
adc
loop
inc
dec
addr16
jle
aas
lds
mov
add
xchg
rol
add
jnp
mov
jg
push
aas
(bad)
shr
mov
add
push
inc
jb
ret
ror
loopne
add
cs
pop
or
sub
sbb
cmp
(bad)
and
inc
movs
in
and
push
jno
jmp
add
imul
xor
sub
push
je
call
push
mov
dec
aaa
or
gs
dec
inc
add
and
adc
pop
mov
mov
scas
fst
dec
jmp
push
lea
sub
(bad)
(bad)
jne
cmps
add
ret
jmp
imul
sub
adc
xor
add
lea
ins
cld
test
or
add
in
xchg
sub
rcr
js
aam
lea
mov
sbb
repz
sbb
mov
(bad)
adc
push
or
lods
jae
xor
sub
pop
mov
je
push
jge
dec
xchg
jge
jb
mov
xchg
pop
ss
aaa
or
sub
ret
mov
sbb
xor
and
add
movs
shl
push
sub
test
pop
int
mov
mov
fld
mov
jns
push
mov
adc
jge
sbb
add
pop
not
enter
mov
dec
loope
mov
adc
adc
stos
cmps
dec
push
dec
data16
inc
jmp
mov
push
inc
mov
push
jno
retf
inc
ins
mov
stos
add
into
mov
sub
loop
pop
xor
xchg
mov
call
(bad)
mov
sub
movs
push
xor
inc
sbb
inc
inc
dec
jecxz
add
or
xchg
fs
inc
mov
clc
lea
dec
aad
aas
xor
mov
xchg
dec
mov
mov
(bad)
popa
das
xor
movs
sbb
inc
aaa
adc
or
mov
clts
add
xor
push
mov
mov
mov
sar
push
jno
es
jle
lea
sbb
shr
cmp
mov
scas
retf
js
xor
or
stc
jl
pushf
loopne
es
jp
shl
cmc
out
retf
xor
mov
inc
daa
ret
je
div
shr
loop
sar
dec
hlt
cmps
mov
xchg
add
ja
pop
lock
in
test
cmp
jnp
sbb
inc
cwde
out
mov
sub
cmp
inc
jnp
retf
xchg
mov
ret
rcr
loopne
clc
and
jmp
push
inc
dec
jmp
jbe
inc
add
sub
into
rol
mov
or
add
cmp
stc
add
inc
add
dec
cmps
outs
movzx
movs
fimul
jb
out
popa
jg
les
dec
dec
cmp
sbb
inc
or
adc
push
xor
ja
pop
or
xor
sbb
pusha
inc
in
dec
add
gs
inc
movs
adc
jmp
push
jno
cmp
push
inc
jmp
lods
test
fs
pop
fwait
das
and
pop
mov
iret
js
add
push
sbb
sbb
imul
xchg
xchg
dec
pusha
lods
sbb
push
retf
popa
jne
jp
pop
or
mov
jns
sub
shl
or
mov
sub
cs
test
scas
cld
cdq
sbb
call
retf
or
xchg
arpl
xor
fdiv
push
dec
test
adc
xchg
jmp
mov
ins
cs
inc
push
dec
inc
ds
adc
push
push
cmp
add
adc
enter
add
or
test
data16
outs
mov
and
(bad)
push
jo
pusha
xchg
test
ds
xchg
push
push
jp
nop
out
cmc
shl
inc
dec
arpl
frstor
jno
mov
aaa
fadd
mov
mov
mov
push
aad
cmps
push
pop
dec
inc
dec
arpl
jb
jp
ds
push
push
push
pushf
xchg
or
rcl
or
dec
cmp
push
dec
jne
adc
inc
inc
add
sbb
pop
mov
push
or
inc
dec
sbb
sub
push
pop
or
idiv
out
inc
inc
inc
sub
push
push
dec
dec
dec
adc
inc
jne
je
lds
jb
clc
add
ins
jne
push
call
dec
add
sbb
xor
fs
push
inc
xlat
pop
in
pop
xor
inc
cs
push
push
add
sar
dec
pop
inc
(bad)
push
add
mov
push
push
out
add
add
ficomp
pop
ss
push
dec
into
adc
push
push
push
push
ror
or
inc
adc
or
and
jb
inc
cmp
xchg
add
xor
enter
lods
sti
ss
and
in
sbb
adc
dec
push
je
mov
outs
or
dec
cmp
or
mul
mov
jne
or
inc
dec
imul
outs
or
adc
js
or
mov
fistp
jecxz
add
sbb
int3
sub
int3
inc
mov
movhps
je
ss
add
or
add
sub
or
mov
push
ja
push
xchg
jmp
or
xchg
pop
add
xchg
sub
add
jae
xor
mov
or
pop
inc
aas
push
lock
cs
imul
jno
adc
jbe
jge
add
in
mov
pop
inc
outs
outs
ins
xchg
call
add
arpl
sub
rcr
add
cmps
adc
outs
pop
icebp
cld
adc
jne
test
xor
push
fmul
jge
jnp
or
sbb
jae
not
sti
neg
sbb
and
or
cmps
jb
popa
ins
and
or
into
rol
and
or
dec
fs
xor
jne
dec
loope
sub
outs
dec
add
and
push
ret
sbb
and
mov
and
and
pop
push
add
rol
adc
sti
jnp
inc
xchg
mov
(bad)
or
jae
pop
push
sbb
mov
xchg
lds
fs
iret
dec
lds
mov
imul
adc
scas
add
(bad)
mov
inc
add
or
inc
adc
mov
xchg
mov
ret
xor
or
mov
sbb
mov
test
adc
add
fwait
imul
cmp
mov
dec
inc
dec
hlt
pusha
fcom
aaa
add
out
rcl
mov
add
shr
daa
push
cmp
push
out
push
xchg
or
add
dec
jo
cmp
add
add
xor
xlat
mov
mov
push
push
sbb
arpl
sub
inc
popa
inc
or
sbb
gs
mov
or
dec
outs
pop
dec
push
addr16
or
ja
add
or
(bad)
sub
pushf
adc
rcl
or
sbb
add
or
pop
fbld
fcom
sub
nop
xchg
push
inc
add
sbb
inc
adc
add
or
push
add
lds
push
and
mov
sar
push
scas
add
aas
push
retf
mov
push
dec
push
outs
aas
add
mov
sbb
add
jmp
and
sub
push
(bad)
ins
cmc
outs
in
daa
sbb
xchg
push
arpl
add
jae
or
ficomp
push
mov
mov
ret
dec
or
xor
xor
(bad)
ss
ins
pop
xor
lock
nop
call
mov
inc
jg
pop
xchg
setp
jo
arpl
inc
mov
inc
ins
jb
jns
adc
xchg
retf
pop
inc
add
or
lock
arpl
jae
dec
mov
punpckhdq
sbb
loope
or
jo
adc
pop
inc
pop
push
fwait
or
sbb
pop
add
jbe
(bad)
inc
aaa
pop
xor
jo
fsub
add
mov
mov
stos
dec
push
pop
push
or
adc
pop
mov
dec
pop
adc
sbb
sub
and
stos
dec
push
xor
mov
sub
inc
imul
sbb
pushf
or
lock
push
popa
sbb
jb
es
das
mov
mov
hlt
ficomp
js
mov
in
iret
lock
add
loope
data16
pop
inc
outs
fidiv
dec
add
mov
lods
mov
push
mov
xchg
xchg
pop
fmul
fsub
call
in
lock
add
xchg
leave
leave
add
or
cmps
adc
out
add
enter
inc
js
icebp
pop
xor
cmp
int3
rol
iret
ja
hlt
outs
imul
sbb
inc
add
pop
inc
sub
ins
and
(bad)
cld
adc
cmovbe
ja
and
or
movs
add
ret
mov
fld
add
push
inc
outs
arpl
outs
or
in
add
push
push
dec
pop
in
dec
sbb
faddp
ret
lock
in
pop
cdq
nop
inc
int
or
aas
dec
popa
push
jb
clc
fiadd
jb
cld
xor
pop
push
mov
xor
mov
call
(bad)
jo
fs
sti
or
sbb
ror
lods
push
nop
dec
mov
or
fnsave
push
ds
test
or
cmc
sub
test
cmps
xor
adc
inc
mov
inc
or
mov
add
push
mov
dec
dec
jae
inc
je
int3
or
pop
test
icebp
ror
inc
fild
mov
push
stos
loopne
mov
add
inc
out
fiadd
(bad)
jb
call
or
jge
inc
inc
inc
mov
inc
inc
inc
cs
dec
jne
cs
inc
inc
shl
pop
cs
dec
inc
inc
push
retf
sub
push
ss
or
aad
movs
sti
ror
adc
mov
inc
dec
add
inc
arpl
jno
sbb
or
and
inc
popa
jmp
mov
push
mov
push
lods
scas
add
ficom
call
ret
stos
in
dec
xlat
or
test
stos
inc
sub
push
or
loope
(bad)
xchg
stos
mov
push
or
or
or
sub
jge
rcl
mov
push
mov
cmp
in
adc
aam
(bad)
hlt
push
(bad)
sub
push
pusha
nop
popa
das
adc
add
add
mov
pop
(bad)
or
popa
sub
neg
push
mov
or
cld
cmps
jb
or
mov
pusha
fadd
les
or
in
pop
push
cmp
cmp
enter
lods
add
movs
jbe
or
inc
xor
xor
jg
mov
lahf
mov
xor
inc
adc
loop
adc
fldcw
icebp
aaa
cs
pop
mov
inc
pop
mov
lahf
ret
dec
ins
cdq
shr
dec
in
mov
jmp
inc
cmc
jbe
adc
add
inc
loope
add
movs
int3
in
ins
movs
lods
shl
loopne
popa
push
std
sysexit
bound
add
jns
ret
mov
leave
in
and
dec
ja
scas
inc
mov
or
xchg
xor
mov
pop
rcl
test
icebp
call
sub
sub
add
dec
mov
addr16
inc
push
mov
push
add
add
or
adc
pop
jne
daa
es
mov
add
ror
xor
rol
xlat
inc
movs
cs
lds
inc
mov
or
adc
ss
lock
imul
adc
sub
dec
dec
add
sbb
cmp
pop
mov
les
shr
test
push
pop
push
dec
inc
adc
pop
adc
fisttp
push
adc
ja
sub
mov
popf
pop
sub
lods
push
push
ins
popa
jb
pop
in
popf
or
add
jo
pop
xchg
add
or
add
sbb
aaa
pop
out
mov
mov
loopne
dec
or
cmp
jp
je
fimul
xor
xor
movs
shl
jb
xor
pop
inc
ins
adc
adc
ja
test
ins
xlat
or
or
inc
mov
arpl
jnp
and
mov
rcr
cmp
or
dec
arpl
inc
and
ror
xchg
mov
push
adc
sbb
or
mov
pusha
adc
out
les
or
add
retf
xchg
(bad)
ins
push
loope
inc
push
outs
data16
popa
mov
jno
jae
xchg
mov
mov
or
(bad)
call
mov
into
sti
daa
(bad)
push
and
scas
mov
data16
push
shl
jo
inc
daa
push
pushf
pop
pop
test
sbb
sbb
push
add
mov
jmp
iret
xor
inc
dec
scas
mov
imul
xor
pop
ja
mov
cld
or
and
popa
push
jecxz
mov
adc
ss
sub
dec
outs
jae
add
inc
cld
adc
jno
push
cwde
push
adc
loop
ss
xchg
cmp
push
popa
loopne
xor
imul
int3
jp
fs
and
inc
imul
(bad)
dec
pop
pusha
pop
je
mov
js
add
test
es
push
outs
ins
dec
ret
pop
xchg
inc
call
adc
iret
ins
cdq
sbb
cmp
or
sbb
stos
stos
add
lds
and
inc
test
or
sbb
(bad)
popa
mov
jmp
adc
and
aaa
mov
mov
mov
das
adc
aas
push
or
das
pop
dec
ja
dec
inc
nop
ds
loop
mov
xchg
cmp
inc
mov
ins
jnp
and
push
fadd
xor
int3
dec
push
shl
pop
mov
pop
dec
jl
movs
mov
push
bound
in
or
sub
pop
imul
cmp
inc
inc
outs
jne
mov
push
or
aaa
cs
xor
inc
mov
outs
lds
in
les
dec
movlps
xchg
in
mov
adc
add
fwait
add
les
daa
(bad)
cmp
mov
inc
jno
and
lock
mov
pop
sbb
rcr
aaa
push
jne
aaa
mov
ins
cmp
sbb
gs
ret
popa
inc
ins
ins
or
(bad)
andnps
xor
jne
mov
cmp
push
mov
xor
test
xor
xchg
aad
icebp
cmp
rcr
add
or
nop
lock
and
push
(bad)
pop
adc
inc
ret
leave
add
inc
cmps
add
add
mov
test
(bad)
inc
push
sbb
or
test
jl
rcl
push
ins
or
mov
fsubr
lock
mov
jo
es
das
push
outs
arpl
push
adc
scas
(bad)
mov
ficomp
mov
nop
lock
adc
xchg
sub
add
add
cmp
lock
cmp
sbb
scas
add
test
ret
pop
add
push
popa
gs
pushf
fisttp
ss
and
(bad)
sbb
loopne
outs
inc
jne
pusha
cmps
imul
adc
jno
aaa
inc
jne
dec
cmp
in
popa
arpl
push
popa
ret
or
in
aaa
jns
test
in
lea
ret
add
or
xchg
push
adc
xlat
push
nop
loopne
jp
push
or
fisub
mov
pushf
ficomp
cmovl
mov
inc
sbb
leave
or
add
shl
inc
aad
jnp
inc
inc
dec
pop
adc
mul
jne
cmps
and
dec
fwait
pop
wrmsr
add
or
add
xchg
or
pop
imul
dec
inc
aas
sub
push
xchg
adc
xlat
clc
or
inc
stos
and
mov
arpl
mov
es
rol
mov
lahf
pop
xor
mov
test
jl
jno
mov
mov
pop
jno
pusha
push
mov
add
push
icebp
jae
dec
push
clc
jnp
les
hlt
or
adc
xor
(bad)
mov
retf
outs
test
jne
xchg
push
lods
jle
enter
cmp
xchg
shl
clts
mov
enter
ins
sti
mov
lock
sbb
mov
fdivr
rol
fs
fidivr
sar
sbb
inc
fisubr
pushf
inc
neg
xchg
es
iret
nop
(bad)
(bad)
mov
pusha
push
cmp
call
inc
in
(bad)
aad
push
jl
js
dec
fild
fadd
cld
sub
jl
test
test
(bad)
ja
lock
ss
rol
xor
arpl
adc
aas
(bad)
in
dec
cmp
or
fadd
ror
sub
add
mov
pop
dec
mov
inc
xchg
jmp
test
xchg
pop
imul
cmps
jmp
dec
adc
shr
xor
and
sub
iret
inc
mov
in
add
dec
xchg
xor
or
xor
mov
ja
adc
pop
dec
xor
rol
xchg
lds
jnp
out
jle
inc
adc
cmp
ss
out
les
push
sbb
adc
das
jo
bound
lock
add
add
stos
adc
add
add
push
mov
jo
xor
or
dec
sti
bound
dec
xor
shr
pop
mov
push
add
or
(bad)
push
cmp
rcl
adc
pop
xor
sbb
ja
lods
inc
mov
cmp
out
js
fstp
sub
daa
pop
mov
sub
and
jo
pop
mov
pop
mov
popa
js
jne
or
pop
jmp
daa
sub
mov
push
cmps
jne
mov
aas
loope
jbe
aaa
jbe
aaa
mov
adc
test
and
fst
push
stos
jbe
sub
push
jae
cwde
jle
sub
out
nop
xchg
aam
adc
add
inc
outs
dec
mov
test
dec
test
aam
adc
and
sub
jmp
call
push
lea
mov
adc
mov
and
pop
mov
lods
(bad)
push
push
retf
and
cmp
or
mov
pop
add
arpl
xor
movs
inc
add
push
(bad)
ficom
sbb
mov
jmp
sbb
loope
call
jne
add
sbb
pop
inc
shl
sbb
or
mov
js
inc
jmp
sbb
(bad)
or
int
js
imul
push
out
push
push
pop
push
dec
cs
ja
add
pop
in
inc
pop
movs
sbb
pop
adc
dec
push
and
xor
xchg
jecxz
push
and
mov
dec
and
vunpckhps
add
xor
sar
call
or
shl
pop
loop
(bad)
out
cdq
call
mov
jns
pusha
push
es
pusha
jno
std
call
inc
cmp
je
cmp
mov
or
mov
data16
mov
mov
(bad)
xor
add
pop
test
cdq
cdq
push
xor
xchg
aaa
inc
dec
imul
mov
jge
es
das
(bad)
push
xchg
iret
pop
int3
imul
push
out
xor
jbe
shl
push
adc
push
mov
mov
scas
addr16
add
mov
inc
and
lock
cmp
mov
jno
div
unpcklps
cli
fimul
push
add
push
or
adc
mov
mov
push
pushf
jge
jno
pop
ins
adc
dec
xor
sub
add
inc
mov
and
mov
mov
or
adc
add
mov
lds
and
mov
jbe
imul
jecxz
pop
inc
sub
fwait
scas
(bad)
or
gs
or
mov
or
jne
cmp
cmp
add
dec
cmps
sub
push
add
push
push
movs
pop
add
jo
mov
xor
inc
push
fisttp
movlps
jno
ja
pop
sub
add
jo
rol
mov
pop
sti
mov
push
ins
add
add
out
cwde
outs
add
push
add
add
add
push
xchg
mov
xchg
dec
push
dec
pop
pop
aas
xor
push
stos
dec
mov
add
push
push
sub
cmp
fsubr
cmp
xor
dec
nop
scas
dec
dec
sub
add
adc
mov
sbb
dec
dec
inc
loopne
mov
in
ret
or
and
mov
into
es
push
push
jl
ds
push
call
inc
fdivr
push
fs
ss
int3
sub
mov
lock
les
mov
imul
clc
ds
cld
das
test
jo
jl
dec
sub
or
scas
push
xor
jnp
aad
stos
sub
push
dec
push
push
adc
fisttp
add
dec
jno
xchg
mov
mov
dec
xchg
pop
lods
movs
mov
mov
add
in
call
pop
push
das
pusha
popf
or
movs
inc
fsubr
jne
mov
add
lods
add
mov
dec
cmp
rol
dec
daa
pop
add
xchg
pop
cmp
mov
in
sbb
mov
popa
je
or
mov
add
or
ja
(bad)
sub
pop
sbb
mov
dec
add
mov
loopne
rol
or
fxch
or
push
or
(bad)
add
pop
lods
add
pusha
mov
mov
or
adc
cwde
add
jg
and
or
cmp
and
ror
ror
or
ret
fsubr
dec
dec
sbb
neg
fbld
adc
jle
sbb
push
in
js
xor
clc
fbld
jae
inc
in
add
jo
arpl
and
add
sbb
add
adc
mov
push
push
mov
cdq
mov
mov
xchg
ror
push
cmp
pop
dec
sbb
mov
mov
adc
and
cmp
leave
sub
push
test
xchg
stc
mov
movs
or
mov
mov
and
adc
add
mov
sub
(bad)
mov
jae
shr
retf
inc
es
test
cld
icebp
xor
sbb
sar
icebp
or
aas
out
dec
or
test
and
mov
sbb
sbb
add
pop
cmc
jnp
add
and
pop
cmp
in
mov
cmp
jbe
adc
or
mov
rcr
push
mov
mov
inc
push
test
and
xchg
or
adc
mov
ret
adc
mov
adc
cld
test
in
test
out
add
not
nop
add
cmp
popf
ins
repz
adc
inc
icebp
push
add
xchg
js
pop
(bad)
ins
movs
push
and
outs
sub
js
and
jo
mov
push
leave
(bad)
call
mov
inc
cmp
imul
and
idiv
loope
mov
(bad)
inc
add
pusha
rcr
cld
adc
cs
clc
ret
lock
in
clc
xchg
inc
or
jne
imul
xchg
xor
push
aam
imul
pop
add
inc
call
jnp
inc
ret
dec
lea
fadd
fcomp
sub
sbb
and
add
ret
inc
xchg
add
push
loopne
or
das
inc
clc
pop
pop
ror
movhps
sub
push
add
inc
push
xchg
sbb
push
jmp
daa
inc
sub
daa
das
add
popa
shr
xor
nop
loope
add
xrelease
inc
push
add
enter
das
push
xchg
xchg
push
mov
mov
push
add
jb
dec
adc
xchg
popa
dec
aam
xor
push
jl
fmul
and
xchg
imul
add
imul
mov
inc
dec
imul
mov
aaa
shr
fsub
pusha
sar
sbb
push
dec
mov
ret
jno
call
mov
xor
mov
sbb
mov
js
shr
out
rol
test
inc
loop
aam
pop
aas
xchg
xor
xor
(bad)
int
or
adc
rol
mov
lock
pop
or
inc
popf
lock
test
addr16
test
add
add
mov
adc
xchg
and
lea
shr
std
xchg
push
xor
xor
sub
pop
inc
push
or
movq
js
out
call
add
or
call
retf
cmps
and
shr
imul
dec
sbb
mov
jmp
and
jg
cmc
(bad)
adc
sbb
push
cld
xor
jmp
pop
ret
pop
add
mov
outs
add
imul
push
pop
xchg
mov
push
mov
cli
hlt
mov
sbb
pop
addr16
push
add
ror
mov
mov
mov
push
push
or
jmp
push
hlt
outs
clc
cmp
add
and
lock
fild
imul
or
ror
(bad)
xchg
xchg
add
into
sbb
movs
push
loopne
cmp
sbb
popa
and
mov
mov
test
sti
mov
add
fwait
jle
shl
cmp
push
jmp
loopne
sbb
fild
nop
add
cvtpi2ps
jmp
mov
push
or
(bad)
jne
or
cld
sahf
xchg
mov
add
iret
std
xchg
sub
hlt
or
cld
aad
je
xlat
add
inc
dec
dec
mov
(bad)
leave
add
in
sub
inc
jmp
ss
cmps
pop
adc
add
pop
call
mov
loopne
dec
adc
mov
lods
push
adc
aam
dec
ins
pusha
div
push
cmc
adc
add
xchg
cmp
popa
xor
or
add
jne
fcom
in
sbb
lock
repz
jmp
outs
cmps
je
add
sbb
or
stos
push
mov
aaa
aas
mov
mov
and
(bad)
adc
scas
bound
and
daa
pop
cli
sbb
(bad)
dec
int3
cmc
cwde
cwde
add
add
xchg
jbe
add
cmc
out
in
retf
or
pushf
(bad)
push
hlt
inc
sbb
xor
ss
mov
call
xlat
jg
cmps
add
cmp
stc
xor
xchg
mov
ror
popa
aam
sbb
popf
mov
mov
mov
jo
shl
add
inc
lods
and
or
pop
scas
inc
mov
mov
add
push
into
dec
test
lods
jnp
lea
push
lock
ds
movs
xor
jno
add
les
sub
ficomp
in
fst
add
sub
in
or
push
xchg
nop
stos
jae
enter
test
loop
sub
mov
mov
add
sub
js
inc
mov
outs
mov
sub
sbb
rol
sub
xchg
call
mov
sub
addps
mov
ret
mov
xchg
je
pop
leave
jno
out
xchg
mov
xor
fwait
cmc
popa
or
inc
xchg
stos
test
xlat
add
mov
mov
pop
or
add
cwde
fisub
out
push
jmp
jbe
ret
daa
cmp
pusha
ret
test
or
pop
add
inc
(bad)
push
aad
inc
loopne
pop
jmp
sbb
iret
add
xlat
pop
lock
add
cmp
xor
cmp
sbb
or
clc
jb
adc
and
leave
jmp
and
mov
and
mov
test
push
arpl
lock
pop
scas
(bad)
nop
push
popa
mov
cmp
push
push
push
jl
nop
ins
sub
repnz
push
sbb
cmps
mov
pop
dec
(bad)
pop
cmp
inc
lahf
test
sub
call
arpl
test
in
add
cmp
movs
mov
lea
mov
out
mov
in
in
sub
daa
pop
sub
and
and
pop
inc
adc
ficom
sub
out
dec
(bad)
fstp
adc
cdq
mov
adc
or
dec
add
nop
ret
or
clc
ror
les
inc
idiv
pop
or
add
add
aas
mov
cmp
test
dec
je
dec
sub
adc
les
cmp
or
inc
inc
aam
pop
(bad)
rcr
ja
mov
out
xor
inc
fcomip
jne
fdivr
sbb
pop
loopne
push
and
loopne
add
adc
cwde
sar
add
inc
call
ret
pusha
es
movs
push
xor
je
aam
cmp
add
inc
pop
sub
sub
nop
dec
js
inc
add
in
shl
rcl
xchg
pusha
adc
push
mov
js
(bad)
cmp
ror
cdq
cmp
adc
lods
rcr
mov
sbb
sub
and
fcom
ins
or
arpl
outs
jo
push
out
push
nop
cmp
cmp
rcl
cwde
pop
pop
add
aam
lods
bound
sub
xchg
push
(bad)
dec
fidiv
sbb
(bad)
lods
mov
aam
mov
sbb
dec
test
sbb
jg
rcl
inc
int
add
pop
adc
mov
cmp
add
push
dec
enter
mov
add
jle
sub
enter
sbb
fsubr
ja
mov
push
add
retf
mov
dec
out
sbb
test
mov
iret
sbb
adc
dec
gs
pop
lea
mov
mov
je
stos
sbb
fsubr
inc
js
cld
in
adc
add
pop
ret
mov
mov
xor
mov
push
movs
mov
push
add
arpl
mov
iret
push
fisttp
fs
or
cmc
push
and
and
lds
add
lock
push
ror
or
sub
add
mov
pop
add
mov
jo
scas
or
cmps
rol
mov
lds
add
mov
pusha
mov
inc
mov
aad
jge
adc
add
add
clc
imul
add
adc
gs
push
rcl
retf
xchg
xor
in
xor
mov
shr
rcl
sti
xchg
loope
and
rcr
mov
outs
jb
sbb
push
sub
cmc
sbb
and
inc
sbb
int3
push
imul
add
and
add
sbb
push
push
ret
add
xor
mov
jl
js
inc
repnz
sub
movs
mov
push
sub
stos
test
mov
pop
ja
push
ss
cs
dec
add
add
js
jo
popa
inc
imul
sbb
jnp
xchg
sub
push
popa
jle
jnp
add
scas
test
ret
bnd
ja
push
sbb
mov
add
jne
ins
xchg
ficom
mov
pop
lods
mov
inc
data16
push
mov
xchg
rcl
xor
dec
retf
cmc
out
(bad)
or
test
mov
fld
dec
call
mov
mov
and
jo
and
add
sub
sti
jl
mov
and
lock
je
add
arpl
mov
(bad)
add
xchg
pop
pop
xchg
mov
or
lds
retf
arpl
lahf
cmp
mov
inc
sbb
sbb
jge
test
dec
push
push
sbb
jecxz
cmp
cld
or
jne
or
aas
pop
fisttp
sub
or
add
outs
sbb
cmps
jb
inc
ja
jl
cs
xor
retf
pop
sahf
nop
inc
stc
or
lea
inc
add
cld
into
mov
ds
and
jne
rol
xchg
test
aaa
push
rol
xor
xchg
jg
inc
mov
mov
mov
xchg
xor
sbb
mov
sub
inc
mov
enter
and
aad
sub
mov
clc
inc
lea
jnp
cmc
push
add
dec
dec
sbb
mov
sete
or
add
and
jne
jecxz
sub
(bad)
sbb
inc
nop
and
adc
mov
add
lock
fwait
xor
add
or
adc
(bad)
push
out
retf
and
mov
shr
cmp
mov
cmp
cmp
clc
(bad)
clc
das
mov
add
lods
and
iret
add
leave
push
jl
in
add
imul
clc
psubd
mov
js
add
dec
call
dec
add
and
mul
lea
in
or
mov
adc
xchg
adc
and
cmp
pop
or
inc
iret
mov
sub
add
in
inc
add
inc
adc
sub
adc
inc
inc
(bad)
mov
and
aad
or
inc
test
adc
(bad)
(bad)
push
call
pop
push
pusha
add
mov
and
popa
cmp
(bad)
push
and
data16
xchg
adc
mov
lock
sub
pop
ret
nop
das
xchg
pop
sbb
cmp
adc
cmp
ss
hlt
ins
scas
jnp
out
dec
addr16
mov
add
mov
add
rcr
ss
inc
sub
ds
cwde
aaa
xchg
add
and
frstor
mov
nop
in
add
outs
inc
cmc
sbb
jl
(bad)
es
lahf
xchg
test
cmp
xor
div
mov
adc
and
dec
jle
dec
sbb
pusha
mov
or
fcomp
and
inc
mov
in
or
lea
stos
dec
sar
call
adc
mov
inc
les
and
hlt
mov
add
cdq
or
add
sar
xchg
and
aam
dec
loope
test
mov
cmp
adc
fiadd
jle
inc
push
daa
ror
call
clc
loopne
mov
adc
das
mov
rcr
or
xchg
or
mov
mov
addr16
lods
mov
mov
mov
sbb
xchg
mov
lahf
test
jne
loopne
xchg
fs
add
aaa
push
push
cmp
lahf
add
mov
adc
(bad)
popa
xchg
jl
stc
nop
das
mov
xor
mov
jns
out
sub
pop
mov
mov
sti
mov
mov
addr16
inc
adc
mov
sahf
rcr
setb
pavgb
and
arpl
adc
inc
lea
or
or
retf
inc
ret
sub
loope
pop
pop
or
mov
dec
add
inc
mov
call
clc
xor
mov
add
daa
fld
fcomp
add
xchg
je
jo
sbb
int3
xchg
sbb
sub
loope
fild
sub
mov
push
or
in
add
xor
rol
pop
pop
ret
out
sbb
loop
xor
inc
mov
adc
dec
add
adc
mov
mov
repz
inc
(bad)
dec
stos
push
inc
cmp
jecxz
add
or
scas
xchg
and
xor
lock
sbb
sbb
pop
adc
push
add
pop
pop
das
jmp
and
add
icebp
cmp
jecxz
fcomi
mov
and
sbb
add
add
in
cmps
jns
jae
call
xchg
not
sub
inc
mov
imul
bound
push
sub
fucomip
popa
cmp
push
sub
sbb
jge
mov
(bad)
dec
cmps
in
add
mov
mov
test
and
push
mov
and
clc
or
fsub
sub
cmp
adc
and
xor
test
jle
sub
xor
xchg
cmp
push
cmp
div
ss
push
pop
sub
(bad)
(bad)
pop
ret
and
push
leave
in
arpl
jns
inc
xor
jb
dec
push
leave
adc
push
xchg
inc
fdiv
(bad)
in
push
jo
ss
in
les
inc
pop
dec
xor
imul
neg
pop
int3
push
loope
mov
imul
mov
imul
cmp
popf
pop
jns
ror
jne
inc
ins
dec
push
in
clc
ins
and
inc
mov
sbb
add
xor
push
push
fadd
xor
call
inc
dec
xlat
inc
sub
and
or
and
mov
out
test
cmp
pop
ficomp
jle
int3
cli
mov
dec
add
cmp
lock
inc
in
sub
pop
daa
or
or
adc
fisub
dec
add
clc
push
outs
sub
cwde
sbb
in
dec
add
enter
mov
mov
mov
aas
pop
cmps
lea
jne
inc
sub
xor
pop
xlat
sbb
adc
aas
je
popa
inc
ins
inc
pop
loopne
jae
add
inc
adc
das
or
rcl
arpl
mov
mov
inc
stos
inc
pop
outs
(bad)
xchg
jl
test
loop
test
daa
pop
icebp
ror
xchg
jle
mov
aas
mov
xchg
mov
loope
lods
(bad)
mov
dec
mov
pop
add
and
xchg
mov
gs
int3
add
(bad)
push
stos
push
cmc
lahf
add
jne
in
dec
pusha
mov
push
inc
clc
neg
add
ret
or
xchg
mov
jle
ins
mov
aas
add
rcl
pop
cmps
call
dec
jbe
sbb
add
ds
mov
ja
dec
(bad)
add
xchg
adc
leave
ins
adc
(bad)
lea
sub
cwde
outs
daa
sub
ret
and
mov
pushf
jge
lock
call
cld
xchg
pusha
mov
rcr
nop
js
lods
push
mov
ds
sbb
sub
in
pop
dec
push
jne
scas
sbb
mov
gs
fsubr
pop
cli
adc
add
and
adc
sub
ret
push
mov
cmp
dec
mov
push
outs
lods
jmp
ins
mov
mov
cmp
add
inc
add
or
lods
arpl
sub
mov
je
adc
adc
cmps
jae
or
xchg
shl
adc
pop
lods
ret
push
inc
mov
jo
pop
dec
rcl
ins
pop
es
push
bound
mov
jg
mov
popa
push
(bad)
sub
jmp
inc
lods
mov
inc
or
dec
cmp
pop
(bad)
sub
adc
fsubr
adc
js
push
push
loopne
call
mov
cmp
out
or
pop
aaa
dec
aaa
ds
xchg
fsubr
sub
int3
fild
inc
push
jbe
rcl
sub
push
popf
loopne
push
or
sbb
cld
cld
sbb
push
xor
cld
add
popa
add
sub
jg
xchg
cmp
pop
add
pop
xor
jecxz
jg
data16
out
cmp
aas
and
out
cmp
lahf
push
or
ret
xchg
nop
jne
sub
popa
cmp
das
pusha
push
pop
and
lea
cli
add
cld
das
fs
jmp
sbb
mov
sti
add
add
jnp
or
sbb
sbb
sbb
jle
ret
jne
mov
inc
cmp
lods
cmc
jo
add
pop
add
out
push
push
mov
adc
sub
retf
mov
retf
xchg
and
(bad)
(bad)
sub
inc
movs
mov
mov
or
or
or
inc
push
jo
push
cmp
jecxz
(bad)
(bad)
loopne
sbb
fmul
mov
cmp
inc
sbb
mov
dec
lea
adc
cs
add
aam
jb
sub
add
jbe
mov
add
push
lock
pop
inc
in
pop
and
xor
fmul
clc
add
mov
pop
add
or
inc
push
jg
or
xchg
movs
fwait
mov
inc
dec
jne
adc
mov
imul
in
xlat
mov
pop
imul
test
jo
dec
movs
push
fild
repz
mov
in
rcl
mov
xchg
fwait
aas
jle
dec
cmp
mov
and
mov
mov
and
in
add
loop
or
dec
mov
(bad)
data16
int3
popf
fcmovnbe
or
jg
jo
in
sbb
in
sbb
aaa
test
mov
sti
std
clc
(bad)
jle
mov
sbb
rol
adc
xchg
(bad)
into
add
mov
mov
add
sbb
dec
sub
gs
sbb
popa
or
jg
xor
add
push
ins
daa
test
mov
lds
ja
mov
xor
mov
call
dec
icebp
push
rol
jae
add
pop
push
mov
sub
outs
sbb
adc
dec
enter
pop
mov
mov
lock
adc
(bad)
rol
pop
mov
mov
dec
and
mov
push
adc
add
add
adc
outs
pop
and
mov
sub
or
cmp
push
dec
jmp
add
xchg
vmovaps
xchg
push
cmps
hlt
sub
adc
push
cli
bound
sub
or
push
dec
lods
lods
loopne
bound
or
adc
int3
mov
cmp
mov
outs
push
div
xchg
fbstp
mov
push
mov
mov
clc
fdivr
cwde
mov
fwait
push
or
cmp
mov
outs
pop
and
cmp
sub
sub
inc
add
sbb
sbb
call
push
dec
mov
add
mov
mov
push
or
fs
mov
hlt
test
push
sar
mov
dec
sub
jne
pusha
add
jb
push
loopne
pop
and
mov
cmc
fld
popf
sub
or
ja
push
int3
sub
cmp
push
sbb
mov
es
cmps
add
popf
jmp
pusha
sbb
je
bswap
adc
imul
shl
sbb
outs
pop
push
retf
mov
adc
out
pop
inc
sub
xchg
and
in
add
mov
loope
fld
das
or
pop
or
and
push
mov
das
push
pop
enter
pop
stos
mov
cmp
or
ret
nop
test
shl
mov
xchg
mov
ja
call
and
nop
pop
dec
jge
(bad)
and
xchg
sub
xor
test
dec
xor
clc
addr16
sbb
xchg
addr16
push
sub
push
mov
jmp
xor
sub
sub
xchg
es
add
daa
jge
(bad)
loopne
mov
jmp
jmp
xor
xchg
pop
adc
repnz
rol
ret
ret
ret
lsl
jnp
push
push
mov
js
sbb
jg
xchg
icebp
pop
pop
test
add
pop
ret
dec
lahf
fbld
and
and
adc
inc
cmp
call
rol
jl
adc
mov
inc
(bad)
pop
addr16
mov
rol
xchg
mov
(bad)
jne
(bad)
fs
inc
in
jbe
ror
pop
adc
rol
inc
xchg
aaa
adc
push
push
gs
outs
add
sbb
pop
sub
sbb
adc
inc
push
dec
add
push
pop
fsubr
fcomp
mov
pusha
inc
add
add
popa
arpl
or
fcom
and
or
sub
fld
push
jp
ret
das
ror
sub
cmps
push
adc
pop
add
lock
xlat
add
xor
cld
loopne
inc
jnp
jae
push
call
inc
outs
shr
movs
push
lods
out
mov
pushw
inc
ds
arpl
aaa
sbb
xchg
or
sbb
xchg
push
mov
xor
pop
pusha
jo
adc
retf
add
out
je
pop
inc
or
sbb
push
adc
pusha
mov
out
jp
je
(bad)
pop
dec
mov
add
sub
popa
addr16
cmp
add
stos
adc
fimul
(bad)
aam
jns
and
add
ins
(bad)
push
dec
or
push
jns
inc
cmp
lods
dec
out
ror
pop
dec
test
ror
jmp
cli
xchg
add
retf
mov
mov
xchg
test
cmp
out
bound
repz
sub
push
in
push
add
daa
add
daa
test
cmp
push
push
push
test
(bad)
mov
xchg
fcomp
cmp
cmp
fs
add
pop
in
pushf
add
ins
jo
inc
imul
inc
sar
push
xor
neg
xchg
push
inc
push
out
maxps
rol
lock
loopne
scas
mov
fisub
sub
scas
fs
or
and
sbb
movs
cs
pop
mov
sub
les
add
and
sub
rcl
adc
add
popa
je
das
or
fwait
adc
or
pop
pop
dec
jns
add
push
xchg
or
inc
xor
dec
sbb
push
sub
fbstp
add
adc
aaa
add
push
xor
or
xor
push
add
jl
add
mov
retf
int3
sub
loop
add
add
adc
dec
inc
ins
mov
(bad)
aas
ror
test
inc
mov
sbb
jo
(bad)
xlat
(bad)
jg
xor
jae
add
ficom
std
inc
xchg
xor
dec
sti
fst
mov
jno
shr
iret
dec
push
retf
dec
sti
xor
stc
inc
mov
pop
and
into
xlat
jne
retf
and
fsub
push
outs
pop
(bad)
arpl
mov
pop
dec
mov
(bad)
cmp
ins
ficom
adc
pushw
(bad)
push
adc
arpl
adc
push
mov
dec
mov
aaa
adc
sbb
and
push
ret
(bad)
(bad)
sti
pop
aaa
inc
jne
data16
sti
xchg
lahf
iret
or
push
test
xor
xor
or
addr16
(bad)
aas
add
adc
(bad)
in
xchg
sbb
sbb
in
in
adc
xor
mov
dec
(bad)
fld
test
fst
clc
bound
sub
data16
shr
mov
call
nop
adc
je
cs
cmp
add
jecxz
inc
mov
jnp
or
xsaves
les
adc
aaa
push
cld
push
cmp
pop
inc
mov
sbb
lock
pop
sub
sbb
std
inc
inc
cmps
std
(bad)
mov
out
sub
pushf
sbb
mov
add
adc
pop
test
(bad)
push
and
sbb
lock
push
adc
mov
add
data16
(bad)
ds
gs
into
pop
xor
imul
inc
inc
repnz
retf
push
and
pop
dec
xchg
jge
ins
loopne
enter
and
inc
ins
out
cmp
xchg
or
or
sbb
mov
(bad)
fcomp
pop
add
shl
nop
add
cld
(bad)
cmp
pusha
adc
mov
xor
js
outs
(bad)
cli
mov
adc
pop
sbb
ss
or
mov
movs
call
pusha
fdiv
lds
rcr
ja
mov
pop
es
(bad)
fist
pop
(bad)
xor
push
sub
add
outs
je
repz
call
out
cwde
xchg
cs
dec
mov
add
pop
retf
dec
push
sub
retf
xlat
and
add
cmp
aam
js
stos
ret
nop
out
test
into
push
xchg
mov
add
(bad)
jnp
inc
iret
in
add
xor
leave
aaa
sbb
clc
mov
imul
push
fisttp
js
jmp
sbb
fadd
mov
inc
out
mov
call
inc
mov
xchg
(bad)
jg
aas
push
inc
push
cmp
pop
jmp
cmp
xchg
outs
repnz
dec
lods
out
pusha
(bad)
ja
(bad)
imul
mov
add
sub
daa
pop
dec
cmps
sbb
sbb
jno
mov
jg
neg
pop
mov
dec
mov
jmp
lock
xlat
aam
inc
out
(bad)
push
jno
mov
pop
dec
cmp
(bad)
(bad)
cmps
ja
or
jg
dec
xchg
dec
lds
fdiv
leave
pop
cmc
inc
mov
(bad)
mov
push
pushf
sbb
inc
enter
imul
(bad)
aas
test
mov
fistp
mov
push
sahf
add
ins
sbb
dec
sbb
inc
mov
add
sbb
pop
sub
(bad)
jg
call
dec
mov
mov
ins
jns
je
popf
pop
ins
fcom
scas
clc
out
push
xchg
xchg
sub
xchg
jo
lods
cmp
sar
pop
out
sub
data16
jg
add
rol
xchg
dec
xchg
xchg
sbb
ja
pop
cmp
leave
pop
cmp
(bad)
jg
jae
loope
xchg
sbb
adc
ins
shr
(bad)
fild
pop
pusha
jle
cmp
pop
pop
xchg
jo
loope
inc
sahf
sbb
mov
jo
sbb
push
test
pusha
cmp
hlt
or
or
imul
lods
fcomp
retf
fcom
add
push
or
inc
dec
lahf
das
jg
or
lahf
mov
sbb
mov
pop
jg
fisubr
adc
movs
imul
mov
mov
shl
dec
pop
mov
les
pop
mov
mov
jmp
jecxz
pop
loope
inc
cmp
cdq
aam
popa
push
jae
mov
add
push
add
aaa
out
jmp
jmp
and
js
pop
inc
mov
dec
popf
sub
scas
aaa
movq
dec
dec
std
mov
rcl
mov
xchg
cdq
fldcw
and
add
movs
mov
inc
mov
mov
jg
movs
jg
adc
loop
sbb
ror
(bad)
lock
jg
add
(bad)
adc
push
jmp
or
add
ins
add
cmp
ja
inc
lods
jmp
lahf
mov
mov
stos
cmp
(bad)
call
outs
xchg
test
ins
jle
inc
stos
inc
je
test
(bad)
push
imul
fwait
jo
xlat
sbb
push
xor
add
adc
loope
es
ret
jmp
mov
sbb
mov
xchg
ins
inc
mov
adc
sbb
dec
mov
ins
rcr
outs
jge
cmp
test
add
fdivr
and
sbb
sub
int
pop
xor
js
gs
sub
sbb
push
dec
lea
test
test
pop
sti
pop
push
pop
xor
mov
lock
stc
jmp
pop
dec
mov
push
pop
pop
mov
int
jae
and
stc
loop
push
cld
dec
inc
sbb
add
pop
cld
dec
xchg
test
outs
push
pop
sbb
pop
push
or
dec
loope
adc
mov
hlt
hlt
popa
xchg
cld
sar
das
xchg
cld
test
test
arpl
mov
addr16
push
icebp
call
sbb
push
(bad)
push
fcom
or
mov
add
and
popa
add
imul
sub
fnstcw
adc
pop
gs
(bad)
fst
inc
pop
xor
xor
sbb
sbb
or
jae
add
push
cmp
sbb
mov
adc
cmp
cs
xor
xor
inc
cld
into
arpl
dec
adc
cld
lods
xor
jae
sbb
cmp
dec
adc
xchg
or
loopne
pop
outs
(bad)
adc
popa
loopne
and
lods
add
or
or
sub
ins
push
add
push
adc
outs
outs
dec
gs
or
adc
lods
shl
add
xor
xchg
jbe
jecxz
xor
jmp
pop
out
movs
arpl
inc
jp
jae
jbe
outs
pop
sar
xchg
mov
(bad)
scas
pop
pusha
push
jecxz
inc
pop
inc
aam
lock
iret
pop
rcr
movs
das
mov
ror
mov
lock
clc
dec
repz
mov
dec
add
pusha
inc
fistp
add
or
dec
xchg
call
fldl2t
push
shl
add
pusha
cmp
pop
push
outs
cmp
xor
push
idiv
add
pop
cmp
pushf
ror
les
push
sub
popa
jb
mov
dec
or
test
or
push
jmp
cmc
xchg
data16
sub
push
fdivr
gs
mov
dec
inc
jno
sahf
cmp
fmul
mov
mov
add
mov
mov
add
sahf
and
jmp
pop
mov
mov
sbb
pushf
add
push
sbb
imul
adc
add
add
aaa
mov
cmp
or
add
mov
sub
xor
push
scas
add
push
scas
fwait
cwde
pop
add
iret
pusha
pop
stos
add
jbe
bndldx
xor
sbb
sub
adc
adc
pop
aad
aas
pop
lea
inc
adc
and
inc
jmp
mov
(bad)
dec
enter
loopne
xchg
dec
adc
jo
adc
fs
dec
xchg
(bad)
pop
sbb
loope
sub
jp
loope
aad
(bad)
push
cmp
das
loopne
push
dec
dec
xor
loope
(bad)
iret
cmp
loope
push
xlat
jg
fcom
movs
das
mov
(bad)
clc
lods
aam
jg
push
mov
mov
pop
(bad)
arpl
or
and
fbld
inc
sbb
repnz
sub
add
test
cmp
dec
push
push
mov
pop
fsub
xor
adc
stos
mov
pop
sbb
mov
jns
pop
push
xor
pop
inc
push
xor
xor
fadd
mov
inc
adc
xor
loop
inc
fnstcw
loop
outs
iret
scas
imul
push
or
aad
cld
call
push
sub
ror
scas
loopne
sbb
mov
fldcw
fidivr
ret
and
xchg
lods
call
xchg
push
sub
adc
in
repnz
cld
adc
mov
pop
jo
xchg
sub
push
nop
pop
int
jno
adc
pop
add
pop
cmps
fild
cmp
dec
cmc
not
int3
sub
mov
stos
in
inc
sbb
push
pop
in
pop
pop
mov
into
icebp
adc
sub
fcomp
imul
sbb
pop
pop
xor
pop
enter
movs
pop
xor
call
pop
inc
add
mov
mov
das
xor
fsub
cmp
mov
push
fnsave
inc
fisubr
(bad)
mov
sbb
inc
cmc
lods
and
mov
push
jecxz
fstp
or
pop
pop
add
aad
ret
fdivr
add
stos
pop
cmp
ret
adc
das
in
sub
cmp
and
mov
mov
rol
nop
mov
push
ret
inc
fimul
add
or
cmc
scas
faddp
enter
adc
sub
pop
sbb
jb
popa
push
loopne
outs
das
ja
mov
stos
mov
or
call
mov
sub
fistp
ror
pop
mov
sub
sbb
mov
ins
sbb
push
and
outs
addr16
inc
add
mov
xchg
adc
stos
scas
int
mov
pop
pop
push
add
sub
in
das
mov
or
mov
fisttp
scas
fs
cmp
push
aam
jmp
push
pop
adc
in
lds
rol
movs
shr
or
inc
jno
dec
les
add
cmp
test
dec
outs
xchg
jae
xchg
inc
daa
shl
mov
add
or
pop
pop
add
cs
sbb
xor
sub
sbb
sub
dec
inc
loope
mov
fmulp
adc
mov
pop
in
(bad)
jecxz
pushf
xchg
xchg
jno
clc
pushf
fsub
cli
push
pop
in
pop
setno
dec
inc
sahf
pushf
stc
and
push
sti
add
jmp
out
pop
out
xor
sahf
aaa
xchg
add
push
jo
add
test
out
(bad)
leave
or
popa
dec
mov
mov
add
add
jno
sahf
lds
xor
add
mov
push
and
xchg
pop
adc
or
jle
mov
jae
je
adc
or
jo
pop
fwait
or
lds
mov
(bad)
dec
or
push
add
or
jbe
add
mov
retf
mov
inc
inc
js
mov
push
or
and
inc
adc
mov
inc
mov
inc
add
gs
xor
jae
adc
jae
inc
and
mov
cwde
nop
mov
inc
ret
adc
and
pop
dec
in
xchg
or
dec
jb
xchg
and
mov
test
loope
push
cmp
dec
pop
or
and
retf
and
mov
jecxz
and
add
test
or
pop
push
ret
add
lds
pop
pop
movs
add
xor
addr16
or
pop
repz
push
shl
add
stos
or
enter
cmps
and
adc
pop
mov
adc
xchg
pop
mov
mov
adc
mov
pop
out
or
cmp
dec
cmp
leave
call
jne
xor
sbb
adc
pop
xor
iret
or
mov
mov
loope
cmp
xlat
arpl
pop
mov
adc
xchg
or
inc
sub
cmp
jmp
inc
add
xchg
push
or
(bad)
push
mov
xchg
(bad)
mov
push
ins
and
fstp
aam
jnp
inc
mov
xchg
test
loopne
ficom
pushf
jmp
jmp
movs
sti
sub
xchg
mov
inc
add
or
sub
mov
cmp
jg
and
stos
fwait
shr
sub
jmp
outs
mov
addr16
pop
enter
cmps
loop
loopne
mov
daa
dec
in
dec
loopne
popf
cmps
jnp
jmp
or
jns
mov
sbb
pushf
jmp
loope
sbb
inc
or
aaa
pop
mov
fld
movs
shl
shr
loopne
sbb
pop
in
cs
add
loopne
ror
inc
add
add
enter
mov
sbb
outs
add
loopne
out
push
imul
jns
push
test
and
adc
in
aas
inc
lock
pop
pop
(bad)
add
pusha
or
or
and
xor
sbb
mov
pusha
test
dec
adc
mov
add
xchg
xor
pmaddwd
test
lock
fs
push
inc
lods
aad
or
sbb
and
movs
push
(bad)
pop
cld
mov
lock
add
test
xchg
jne
inc
or
pusha
or
mov
xor
and
add
pop
stos
sbb
aad
(bad)
dec
adc
sbb
icebp
addr16
les
fwait
add
mov
repz
pmaddwd
es
xchg
repnz
xchg
shl
push
xor
mov
push
add
push
loope
cmp
repz
or
rcl
test
jae
repz
push
inc
clc
sub
sub
mov
inc
shl
mov
ror
sub
mov
jno
pop
jo
xor
hlt
fist
repnz
je
ins
push
adc
add
inc
xor
mov
inc
clc
add
rcr
pop
pop
and
xor
lock
lods
and
arpl
and
fsubr
and
xor
xchg
test
sbb
popf
mov
mov
out
or
or
nop
mul
push
not
mov
scas
mul
xor
xor
lahf
in
mul
sbb
xor
adc
mov
cmp
cmp
rcl
hlt
arpl
icebp
or
inc
push
pop
mov
nop
neg
sbb
sbb
out
in
sbb
das
addr16
pop
adc
jg
(bad)
hlt
fistp
call
and
xlat
clc
pusha
sbb
add
test
or
and
push
push
mov
inc
cmp
mov
pop
mov
add
loope
cmc
mov
out
mov
pop
xor
ret
inc
push
xchg
movs
cli
cmps
mov
(bad)
pop
cmp
(bad)
clc
xchg
loopne
dec
and
adc
je
push
sti
jge
(bad)
(bad)
jno
or
add
cmp
jnp
sti
and
dec
cmps
scas
and
cmp
add
in
repnz
dec
and
and
out
fsub
ins
jne
dec
mul
or
and
and
cld
out
std
xor
std
das
and
iret
mov
dec
ja
jmp
adc
std
or
push
or
cmp
outs
fistp
push
and
cmp
add
std
jne
and
cmp
add
xlat
ins
mov
add
fistp
lea
inc
xchg
or
xor
mov
(bad)
sub
push
cmp
or
and
ins
cmps
push
xor
jmp
or
mov
js
data16
push
cmps
nop
push
test
aaa
or
shl
add
test
dec
aaa
or
in
out
imul
loopne
dec
mov
nop
adc
out
arpl
inc
(bad)
push
add
vmread
dec
mov
mul
ss
inc
mov
in
xchg
xchg
daa
daa
add
leave
enter
add
jp
mov
pop
(bad)
add
adc
loopne
xor
sbb
inc
xchg
and
movs
rcr
xchg
add
pop
shl
stos
movs
jae
add
or
cmp
and
xor
or
mov
xchg
pop
sbb
movs
cmp
loope
xor
outs
push
push
repz
repnz
movs
sbb
mov
adc
mov
push
add
push
popa
movs
and
or
add
cmp
call
jo
movs
mov
inc
xchg
movs
or
push
shl
ins
push
add
imul
add
dec
(bad)
(bad)
mov
movs
add
arpl
and
push
movs
clc
ror
xchg
test
popa
push
add
fidiv
adc
test
cwde
add
dec
clc
mov
inc
and
les
nop
sub
adc
mov
sbb
mov
fistp
ret
and
add
mov
push
and
jnp
inc
add
sub
adc
pop
(bad)
pusha
sbb
push
leave
fisubr
push
imul
cmp
push
jbe
push
mov
xor
(bad)
fs
jmp
add
iret
jbe
mov
dec
or
and
adc
es
or
in
add
mov
cmp
sub
cwde
sbb
add
mov
test
xor
cwde
add
das
add
nop
dec
push
mov
mov
mov
out
add
clc
pop
hlt
mov
inc
retf
and
pop
dec
inc
ins
adc
push
xchg
inc
sbb
and
mov
lahf
mov
pop
add
inc
clc
pusha
and
pop
mov
outs
jno
or
cmp
add
pmulhuw
or
sbb
sbb
test
and
add
iret
aas
sbb
push
mov
or
and
pushf
(bad)
lock
shr
add
cmp
sbb
jecxz
add
add
and
scas
push
sbb
mov
ins
pop
sbb
dec
inc
adc
cmp
pop
push
imul
or
sbb
jo
sahf
add
inc
add
mov
inc
and
and
push
(bad)
or
add
lds
shl
imul
xlat
adc
add
adc
push
(bad)
mov
jb
cmp
or
jl
push
or
es
das
sbb
test
pop
loopne
push
call
les
pop
test
pop
mov
out
or
mov
fs
mov
dec
sub
jne
cmps
sub
js
sbb
sbb
jne
mov
test
sub
mov
xor
push
add
or
push
mov
(bad)
scas
loopne
sbb
xchg
mov
add
daa
sti
push
fmul
ror
mov
add
pop
xchg
pop
shr
std
test
cmp
fwait
or
sete
clc
stos
lea
push
fst
cmp
add
jmp
add
lea
cmps
(bad)
aas
mov
cmp
push
cld
mov
lea
mov
shl
loopne
lods
jl
or
sbb
sbb
jo
pop
pop
pop
push
mov
inc
hlt
lock
pop
and
jmp
rcr
adc
sbb
and
sbb
inc
or
push
cdq
pusha
push
pusha
inc
add
pop
add
inc
sub
sbb
jg
and
and
push
cmp
jge
mov
cmp
add
pusha
rcl
ss
ret
push
push
loopne
stc
cs
xor
inc
inc
jb
jg
mov
sub
and
pop
jmp
paddsb
mov
test
jl
add
jbe
fimul
rcl
push
add
lods
xchg
and
sub
cmp
mov
and
inc
imul
clc
mov
jns
jne
sar
imul
jmp
fwait
pop
sbb
xchg
cmp
xor
ror
push
ret
mov
sbb
ret
aaa
mov
mov
pop
and
and
ror
push
push
dec
mov
ror
ins
pushf
ror
adc
lea
js
cmps
cmc
add
add
out
jmp
and
cs
adc
xor
dec
jmp
inc
push
jmp
and
in
es
add
sbb
lea
jnp
icebp
popa
aas
mov
cmp
jl
fiadd
mov
mov
mov
pop
dec
ret
repnz
es
or
or
ror
push
rcr
push
not
push
inc
pop
dec
inc
stos
adc
jb
out
mov
adc
lea
mov
push
push
sbb
dec
rcl
nop
adc
jne
pop
jl
popa
pop
cld
mov
xchg
dec
pusha
fs
jp
ret
and
mov
pop
and
xchg
mov
in
add
inc
adc
call
xchg
or
sub
push
in
imul
add
or
ins
mov
sbb
push
sbb
sbb
clc
fiadd
push
mov
ss
xchg
push
push
and
fwait
aam
xchg
jns
and
test
out
or
add
fwait
adc
je
jb
add
cmp
test
iret
cmp
push
je
xlat
mov
fisubr
(bad)
push
push
aaa
add
xor
lea
inc
(bad)
push
or
push
rol
mov
cs
adc
add
push
scas
sub
adc
popf
pop
inc
dec
push
or
imul
and
fwait
scas
add
pop
int3
pop
dec
ins
mov
add
mov
pop
repnz
out
cmp
mov
movs
dec
(bad)
mov
not
mov
jne
mov
out
xor
clc
sbb
adc
fs
xchg
aad
call
inc
cmc
inc
mov
dec
sub
mov
imul
jge
test
or
sub
or
call
push
and
pop
pop
mov
pusha
loope
pop
sbb
rcr
pop
add
retf
inc
outs
or
adc
ret
or
lods
popf
add
addr16
inc
or
xchg
int3
fadd
aam
jbe
nop
je
jle
adc
fisubr
adc
enter
aam
mov
adc
call
mov
pop
ret
call
push
inc
xchg
push
cmp
push
enter
or
or
pop
pop
mov
mov
push
bound
push
in
and
push
(bad)
inc
es
adc
and
inc
test
nop
fld1
ret
adc
dec
push
or
out
jl
fild
adc
scas
dec
or
xor
or
push
rol
cmp
dec
or
test
pop
pop
jg
push
adc
popf
add
(bad)
sub
ret
outs
inc
pusha
pop
ins
sub
xor
and
jg
add
add
and
cmps
cmp
(bad)
mov
add
dec
pop
adc
jns
add
fiadd
pop
pop
or
aam
jo
push
or
loopne
dec
mov
ret
daa
pop
cmp
mov
mov
addps
adc
mov
mov
outs
stos
loopne
cmps
mov
fmul
push
sub
push
rcl
xlat
or
inc
mov
push
jg
pop
jo
test
in
hlt
add
or
ss
dec
popa
jmp
shl
cmp
inc
lock
add
rol
pop
out
or
jne
xor
dec
ret
aad
jl
and
repz
adc
pop
lock
add
in
hlt
mov
cmp
shr
mov
add
cdq
dec
sbb
leave
inc
sbb
loopne
adc
and
ret
es
mov
loope
add
js
dec
mov
xchg
jae
daa
or
pop
push
mov
push
test
add
(bad)
or
daa
push
les
cmp
xchg
daa
(bad)
sbb
pop
or
jb
or
into
xchg
mov
add
or
sub
fstp
mov
aam
inc
js
and
and
add
das
or
mov
adc
adc
dec
add
dec
fcmovnb
push
mov
xchg
scas
dec
cld
or
dec
(bad)
loopne
(bad)
lea
rol
data16
mov
add
enter
das
add
mov
lods
inc
and
outs
mov
adc
call
ret
rol
pusha
xlat
fsubr
jmp
dec
sbb
aaa
inc
fcom
in
push
push
jecxz
cmp
sbb
test
push
frstor
unpcklps
js
or
inc
pop
push
ror
in
cmp
fstp
or
js
enter
cmps
and
frstor
cmp
ror
repnz
pop
or
shl
rol
js
fisttp
clc
icebp
popf
loopne
mov
adc
push
fdivr
aas
adc
outs
jl
sub
pop
dec
push
adc
out
mov
and
xchg
clc
or
lea
push
mov
add
mov
adc
not
add
pop
test
pop
lds
adc
push
lods
mov
push
loope
and
adc
adc
jne
xor
inc
pusha
push
lods
adc
jne
test
and
les
cmps
inc
outs
sbb
int3
ins
pop
sub
fmul
cmp
mov
sub
add
adc
sub
rcr
sub
sub
jb
loope
mov
jecxz
lahf
repnz
push
adc
test
hlt
adc
mov
xchg
adc
cmp
mov
jnp
repnz
push
call
addr16
adc
pop
adc
ror
stc
or
fisub
and
sub
cmp
movhps
in
fisttp
test
in
adc
inc
leave
sub
push
or
lods
movs
lock
shr
inc
xchg
jns
inc
xchg
or
adc
inc
push
adc
jp
pop
pop
mov
lahf
enter
jl
cmps
push
mov
xchg
xchg
aam
pop
mov
jne
imul
mov
les
pusha
stos
inc
pop
movs
add
mov
loop
dec
jmp
and
mov
inc
mov
mov
xchg
icebp
dec
add
mov
adc
je
mov
adc
cmp
je
xor
sub
add
push
loop
add
or
jmp
es
or
or
jmp
clc
sbb
sbb
lea
or
test
inc
movs
popa
mov
movs
xchg
pop
jno
arpl
or
sub
in
fst
dec
aad
add
cld
mov
adc
mov
mov
movs
xchg
cli
mov
push
(bad)
jmp
add
test
and
push
push
nop
icebp
je
jbe
inc
push
pop
outs
mov
lea
or
inc
test
jne
adc
pop
sbb
xchg
add
pop
ror
add
mov
push
pop
and
rol
ret
ret
sub
loopne
and
leave
xlat
sub
inc
xchg
or
mov
pop
xor
arpl
inc
jo
jp
(bad)
das
sbb
hlt
or
mov
add
sbb
ret
nop
or
jns
adc
test
inc
call
fmul
pop
movs
ret
lea
pop
or
and
inc
mov
ret
add
push
or
sbb
cmp
sub
xor
xor
mov
mov
cmp
rol
sbb
test
int
lock
mov
jns
js
sub
rol
into
cmp
push
leave
or
sbb
pop
lods
push
jb
aas
aad
call
xchg
cwde
call
ds
clc
imul
shl
rcr
leave
cmp
jmp
or
xor
lock
lods
jb
not
mov
mov
lods
cmp
imul
mov
mov
push
mov
and
and
and
scas
sub
fdivr
ret
je
and
mov
sbb
inc
dec
enter
pop
sub
xlat
inc
add
rcl
cmp
out
sbb
push
iret
inc
add
pop
xor
mov
fist
add
and
ret
add
pop
sti
lods
inc
and
lahf
ror
adc
cli
mov
mov
mov
pop
ret
dec
repnz
js
in
pop
dec
push
jo
jl
push
and
sbb
jbe
test
pop
outs
jg
add
push
jg
and
in
xor
fcom
or
xchg
xor
jp
movs
push
cmp
(bad)
jg
xor
sbb
xor
test
stos
xor
in
push
jl
ins
mov
pop
lock
jge
jnp
test
inc
aas
jg
inc
and
imul
jbe
fnstsw
jl
(bad)
das
xchg
mov
ret
cmp
xlat
add
popa
sar
(bad)
add
or
popa
jno
dec
mov
xor
sar
popa
in
out
xor
mov
and
out
xor
cmp
aad
in
addr16
dec
scas
add
ret
popa
imul
addr16
dec
xlat
add
nop
addr16
sbb
and
sbb
add
jb
pop
or
pop
and
cmp
test
nop
or
push
stc
movs
cs
push
sbb
push
or
push
xor
div
leave
mov
or
aaa
and
and
dec
pop
sub
xor
jge
les
and
dec
lea
xor
sbb
xor
add
(bad)
xor
in
and
lock
scas
xchg
mov
or
fimul
sbb
rol
aas
xor
xchg
pop
jb
xor
and
cmp
cmp
cli
xor
imul
xor
mov
ins
add
cmp
repz
sbb
lock
push
(bad)
mov
das
xor
xchg
sbb
xchg
test
cld
int
fdivp
cdq
push
sub
mov
test
cmps
cld
mov
(bad)
loopne
scas
dec
jne
sub
inc
stos
adc
inc
sbb
das
sub
inc
jb
(bad)
and
sub
push
add
lods
(bad)
add
dec
test
int3
inc
in
pushf
sub
sub
mov
lods
sbb
nop
xor
inc
jno
out
aaa
lock
pop
sub
pop
aaa
xor
(bad)
adc
adc
in
add
cmp
add
in
sub
arpl
pop
or
and
out
cmp
push
jb
inc
pop
idiv
xor
popa
in
or
xchg
shr
mov
pop
(bad)
lock
inc
call
sbb
scas
mov
test
cmp
push
push
in
adc
mov
mov
pop
lock
js
sbb
add
icebp
add
loop
pop
jp
icebp
cmp
in
outs
and
mov
add
sub
call
mov
jo
xchg
xor
addr16
leave
sub
mov
jg
aas
pop
add
enter
pop
adc
or
jge
and
das
ficom
cmp
inc
or
das
xor
dec
add
inc
sub
add
ret
jb
xor
lods
scas
clc
fimul
inc
xchg
adc
xor
xchg
dec
cld
into
stos
aas
imul
cs
(bad)
psubusw
ret
add
mov
dec
imul
or
xchg
inc
cmp
shr
loopne
(bad)
das
fld
xlat
mov
sub
mov
jg
inc
push
test
test
or
cld
jbe
inc
fs
cdq
dec
inc
adc
dec
aad
cmps
fnsave
jl
inc
push
imul
or
xlat
xor
sbb
inc
sub
push
shl
pop
inc
dec
shr
pop
(bad)
inc
and
out
loopne
lds
mov
push
mov
xchg
push
in
add
outs
das
add
or
sub
sub
(bad)
sub
in
xchg
lahf
or
fs
xor
ds
imul
dec
ins
mov
mov
inc
dec
pop
(bad)
xchg
into
leave
xchg
into
movs
cmc
inc
cmp
(bad)
jb
cmp
cmp
inc
sahf
pushf
pushf
mov
and
dec
xchg
fisub
dec
push
daa
daa
daa
daa
test
xchg
xchg
dec
push
js
je
fist
cpuid
mov
(bad)
pop
push
inc
cmps
and
call
adc
and
fisttp
mov
cmp
adc
jns
lahf
push
shl
fs
add
shl
adc
add
lds
xchg
sbb
pop
mov
fbld
outs
addr16
or
adc
jbe
add
sbb
inc
test
jae
sbb
mov
leave
adc
pop
fld
lea
je
xor
sub
mov
pop
and
jae
imul
(bad)
sti
add
clc
sub
imul
ins
mov
pop
cli
xchg
(bad)
loope
add
jb
les
or
sub
xchg
mov
cmps
jge
js
xor
pop
xor
fisubr
xchg
out
popf
sbb
or
aaa
call
test
and
test
popa
pop
push
or
adc
imul
fcmovbe
int
mov
push
dec
ss
xchg
dec
or
or
pop
les
fbld
sbb
or
and
push
lock
outs
jb
jecxz
test
jge
push
sar
test
or
imul
or
inc
jns
and
mov
dec
icebp
and
cmp
xchg
xor
jns
or
push
adc
add
pop
(bad)
dec
call
lods
sub
(bad)
(bad)
mov
push
jmp
dec
push
aam
mov
pop
push
inc
adc
adc
pop
adc
dec
and
add
dec
push
or
push
sub
add
sti
ret
add
and
mov
mov
inc
ins
sub
sub
je
adc
push
jge
lods
pop
cmps
cld
adc
add
sub
(bad)
cmp
test
jae
into
mov
pop
dec
jl
scas
push
add
sub
clts
jge
add
dec
pop
nop
dec
add
fld
int3
imul
or
push
shr
push
or
pop
pop
sub
dec
cmc
bound
pop
jno
push
and
and
mov
mov
pop
pop
push
and
push
and
mov
mov
pop
add
inc
mov
mov
add
lock
dec
aaa
call
push
pop
mov
push
sub
and
aaa
call
mov
das
add
dec
inc
aam
fisttp
and
dec
dec
jno
jns
aam
push
push
leave
sub
sar
mov
mov
stc
clc
sysret
push
inc
sahf
pushf
pushf
pushf
jg
aad
push
dec
dec
dec
inc
jno
(bad)
push
daa
daa
daa
and
mul
jb
dec
mov
mov
sbb
call
cdq
or
aas
push
(bad)
pop
jp
rcr
movs
pop
rcl
mov
pop
fist
shl
mov
inc
mov
add
adc
or
dec
mov
or
mov
enter
add
xor
inc
inc
adc
xor
mov
mov
adc
dec
js
pop
ja
adc
mov
mov
mov
hlt
(bad)
(bad)
mov
adc
enter
pop
pop
shr
aas
lea
mov
mov
pop
pop
pop
pop
je
sub
adc
jg
stos
add
cmp
pop
pop
sub
mov
imul
mov
in
pop
pop
adc
add
inc
jns
add
dec
rcl
adc
jl
popa
mov
and
and
mov
mov
push
lods
inc
aad
das
mov
sbb
push
mov
cmp
(bad)
shl
pusha
shl
or
add
popa
je
push
xor
mov
or
sbb
push
sub
adc
nop
pop
sahf
retf
add
and
loopne
or
or
es
aaa
fadd
(bad)
cmps
sub
sbb
mov
aam
rol
adc
sub
mov
add
or
cmp
add
mov
movs
stos
sub
out
aad
inc
xor
cmp
pop
jmp
pop
pop
xchg
and
pop
(bad)
add
push
xor
mov
pop
push
and
adc
sbb
movs
stos
ins
cmp
imul
lods
loopne
jnp
push
stos
mov
ins
or
clc
jo
mov
push
fstp
ret
je
pop
push
stos
cmp
shl
mov
(bad)
sbb
fstp
push
pusha
xor
mov
sahf
pusha
push
push
or
mov
mov
mov
xchg
aaa
shl
xchg
into
icebp
sub
fcomp
sub
pop
sbb
cmp
packuswb
push
enter
xchg
xchg
mov
wbinvd
bound
rcl
arpl
mov
mov
imul
sub
dec
dec
dec
dec
jge
jmp
dec
outs
cmps
out
push
cmp
jne
cmps
push
cli
dec
outs
pop
aam
inc
adc
inc
shr
es
xor
and
push
xor
fisttp
fcomp
push
or
mov
test
inc
daa
xor
add
xor
adc
shl
add
mov
pop
cmps
and
jo
inc
mov
mov
setno
les
les
xor
mov
rol
pop
cmp
push
std
add
setb
ss
push
jg
xchg
dec
add
in
xchg
mov
push
ret
push
pop
push
popf
lahf
add
xchg
mov
pop
add
movs
mov
pop
push
stos
push
or
or
imul
push
xchg
scas
ss
add
mov
push
jge
call
push
ss
movs
stos
add
adc
cmp
pop
pop
mov
add
dec
dec
pop
ins
jns
xchg
sub
loopne
mov
push
adc
add
imul
ficom
outs
add
(bad)
sub
push
pop
scas
and
cs
test
sub
mov
imul
dec
xchg
pop
mov
jb
dec
mov
mov
xor
pop
adc
enter
mov
or
xor
add
or
cmp
pop
or
jbe
xor
test
test
push
pop
add
icebp
cmp
out
clc
test
sub
inc
outs
das
test
lea
xor
inc
adc
push
jb
aam
cmp
inc
pop
jecxz
imul
and
sub
cmp
inc
inc
test
sbb
cmp
lea
addr16
add
or
push
popf
sbb
cmps
ins
sub
jnp
mov
ins
iret
xor
sbb
call
push
mov
(bad)
sub
cmp
push
cmp
lock
adc
fld
das
test
push
out
arpl
cmp
outs
cmovle
aas
je
mov
scas
outs
inc
sahf
fdiv
(bad)
sub
push
lods
mov
daa
daa
daa
pop
(bad)
jb
jb
mov
in
inc
js
jae
(bad)
xor
in
mov
adc
jns
jb
mov
jne
pop
jp
shr
ins
pop
call
ror
dec
cmp
in
mov
int
jbe
enter
dec
add
add
or
add
push
test
inc
mov
cmp
xor
adc
mov
add
mov
sub
je
push
mov
int
jbe
es
xor
out
sub
mov
int
cmp
test
pop
repnz
inc
int
jbe
cmp
add
sbb
imul
test
mov
jbe
adc
test
jbe
sbb
xchg
and
or
add
or
mov
mov
mov
or
and
mov
inc
and
lea
add
add
add
test
push
and
add
cmp
in
pop
ins
jns
ins
mov
mov
or
push
sub
or
pop
and
mov
lods
cmp
cmps
sub
ins
and
leave
or
dec
mov
adc
or
mov
leave
mov
call
push
sbb
inc
add
inc
adc
pop
adc
add
add
add
ret
jbe
or
hlt
hlt
lea
xchg
push
mov
pop
arpl
cmp
sbb
cmp
mov
pop
cmp
or
jns
cvtps2pd
xchg
mov
cmps
dec
mov
icebp
pop
jg
jle
ds
xchg
rcl
js
retf
push
mov
sub
adc
mov
inc
mov
or
mov
(bad)
loope
sbb
jbe
arpl
or
fcom
or
add
xor
aas
or
(bad)
push
imul
jg
pop
cmc
cmp
mov
push
ja
fstp
jno
stc
cmps
in
test
jns
xor
jp
dec
cwde
inc
adc
adc
inc
dec
mov
pop
cwde
into
repz
test
or
jnp
in
xor
in
jp
cmp
pop
inc
jnp
rol
jp
jmp
dec
out
lods
pmuludq
pop
push
and
and
shr
aam
aam
dec
leave
add
aam
xor
aam
aam
pushf
dec
cmp
aam
mov
and
xor
mov
jnp
mov
xchg
test
mov
movq
push
adc
add
inc
(bad)
jge
jge
sahf
xchg
pop
and
pop
jle
daa
daa
jns
xchg
jg
jle
mov
out
add
push
inc
addr16
jmp
call
in
repnz
fcomp
pop
xchg
add
sbb
cmp
jg
or
mov
inc
cmp
outs
jecxz
das
pop
add
mov
and
add
xadd
xor
jno
in
inc
rol
push
sub
adc
push
jns
add
jns
lahf
test
ins
adc
in
push
lahf
xor
pop
adc
rdmsr
ss
stos
lahf
outs
or
out
lahf
cmp
push
push
dec
push
mov
add
cmp
add
xchg
push
jb
loopne
add
push
test
pop
cmp
das
cmp
xchg
add
adc
and
js
icebp
(bad)
pop
mov
das
mov
(bad)
je
add
mov
ins
retf
out
xchg
test
repnz
lods
scas
dec
add
inc
push
and
or
mov
xor
fimul
shr
loopne
ins
xor
scas
cmp
test
or
xor
cli
jns
lods
or
outs
out
cmp
(bad)
js
pop
daa
daa
mov
cmp
pop
in
(bad)
ins
loopne
daa
daa
daa
cwde
mov
ins
daa
sbb
aas
cmp
pop
xor
sub
cmp
jbe
mov
punpckhbw
push
das
enter
mov
test
jmp
sahf
out
sahf
cmc
adc
and
xor
out
cmp
push
pop
out
sahf
out
imul
sahf
mov
jns
out
mov
mov
(bad)
mov
sub
add
cmp
xchg
js
pop
lock
adc
or
mov
dec
add
xchg
inc
shl
pop
xchg
xchg
xchg
xchg
mov
mov
leave
enter
mov
sub
pop
test
inc
mov
adc
jb
retf
dec
btr
add
adc
push
mov
inc
dec
dec
push
push
inc
pop
push
dec
inc
push
xor
inc
inc
inc
dec
dec
inc
dec
ins
or
fld
mov
add
ins
daa
jl
pusha
or
data16
pop
(bad)
rcl
push
out
pushf
mov
and
je
sbb
repnz
xor
jl
pop
or
pop
imul
cmp
stos
je
fld
imul
or
mov
pusha
xchg
imul
bound
loopne
jbe
gs
sysenter
add
out
in
cld
std
loopne
inc
add
xchg
push
add
xchg
xor
in
test
das
xchg
sbb
dec
jnp
jo
xchg
or
cmpps
aas
lock
or
mov
pop
or
adc
(bad)
cmp
push
push
(bad)
out
jg
sbb
push
push
pop
ins
push
pop
arpl
jo
outs
pop
jae
stos
or
mov
pop
jb
popa
ins
ins
jl
inc
mov
jo
gs
outs
in
rol
mov
or
imul
adc
fsub
repnz
and
cs
cmps
icebp
loope
pop
add
push
aaa
and
mov
add
sbb
mov
jo
jae
repnz
add
push
repz
mov
jo
xor
mov
jo
jb
(bad)
jns
jmp
adc
rcl
jmp
sbb
dec
add
and
adc
ror
and
pushf
sub
outs
fs
pop
mov
test
and
push
jb
sti
and
fist
pop
add
inc
gs
std
pusha
test
leave
inc
jbe
inc
mov
rep
mov
push
cmc
sub
adc
adc
dec
push
mov
jae
push
mov
lds
fsubr
inc
push
ret
lds
rcr
mov
dec
inc
outs
jns
push
enter
add
and
leave
adc
rcr
jnp
mov
inc
bnd
adc
or
push
mov
dec
adc
push
push
outs
rcl
push
push
loop
adc
add
mov
(bad)
sbb
mov
xor
fcom
dec
jae
dec
pusha
push
dec
add
add
inc
xor
add
inc
sbb
ins
pusha
adc
mov
aas
adc
adc
jo
add
mov
sbb
jbe
inc
arpl
popa
lea
int3
mov
jmp
push
dec
mov
out
push
adc
adc
ins
xor
xchg
pop
gs
xchg
push
fnstcw
dec
je
push
out
mov
push
lds
test
jecxz
aad
mov
mov
xor
pusha
(bad)
push
in
fisttp
nop
fs
jl
call
test
and
pop
push
mov
mov
xchg
mov
out
inc
cmps
and
rcr
pusha
mov
cmp
jl
mov
pop
test
add
cmp
sub
dec
push
(bad)
popa
push
sar
xchg
or
xchg
popa
or
cwde
movs
das
or
jge
(bad)
push
(bad)
mov
pop
mov
xchg
imul
loopne
clc
push
rcl
ins
int
in
cmp
aaa
xchg
aas
gs
ret
rcr
in
ror
mov
fcomi
xchg
xchg
fs
push
adc
pop
(bad)
shr
imul
(bad)
call
adc
and
push
out
sahf
mul
push
mov
push
ror
iret
mov
aad
push
mov
std
jno
xor
rol
adc
dec
sbb
sub
hlt
xor
mov
push
mov
xchg
xor
dec
xor
call
pop
xchg
mov
ja
adc
mov
cs
ja
pop
xchg
xchg
push
fcomp
mov
(bad)
neg
movzx
leave
pop
dec
js
and
push
ins
push
and
inc
arpl
push
movs
test
(bad)
rcl
cs
movs
or
in
or
pop
inc
push
test
pop
or
pop
push
sbb
in
mov
push
or
das
mov
pop
adc
cmps
mov
and
and
xor
or
push
(bad)
adc
xor
jo
mov
dec
outs
shl
jne
or
and
xlat
add
aad
and
jmp
nop
retf
jno
add
sub
mov
pop
aas
sub
sbb
cmp
data16
punpckhwd
addr16
jl
or
push
int
cmp
repz
mov
inc
das
sub
das
fcom
dec
js
xchg
push
hlt
xchg
into
ins
jbe
pop
mov
xchg
xchg
add
inc
add
sub
ret
mov
xor
mov
shl
fadd
in
in
jb
retf
in
loopne
loopne
fcmovne
in
enter
adc
push
pop
dec
outs
daa
mov
in
rdpmc
sbb
clc
sub
mov
mov
add
out
mov
in
jbe
pmulhuw
pop
adc
jo
rol
scas
xchg
loopne
loopne
dec
icebp
xchg
jmp
out
push
in
leave
scas
xchg
sahf
out
sahf
push
push
ret
outs
ja
jns
out
xchg
neg
jbe
push
push
jns
out
push
clts
pop
pop
daa
das
lds
out
aas
inc
dec
sub
mov
nop
aaa
rcl
out
add
inc
mov
and
retf
xchg
bound
iret
pop
cdq
sbb
mov
sub
test
xadd
int3
aas
gs
jnp
jmp
mov
sub
mov
ror
out
add
imul
loopne
xchg
jecxz
push
loope
out
jne
inc
call
add
stos
adc
sub
inc
test
dec
cdq
loopne
sub
ss
sub
or
test
int3
sub
cmp
add
fmul
je
xor
pop
inc
(bad)
sbb
inc
(bad)
call
cmp
mov
push
test
cmp
retf
aad
mov
ret
push
sbb
cmp
bound
xor
add
lahf
(bad)
fadd
mov
sbb
xchg
mov
retf
mov
mov
push
call
add
jb
jecxz
push
or
cmps
xchg
push
xor
gs
call
in
enter
call
pop
mov
in
dec
fs
jbe
in
push
sbb
dec
hlt
das
(bad)
mov
je
ds
faddp
test
jge
out
sahf
jmp
jmp
out
mov
xlat
add
jecxz
or
fs
js
add
imul
or
outs
and
add
pushf
dec
pop
sahf
(bad)
cmp
ficomp
push
and
fs
mov
pop
(bad)
call
add
jle
or
mov
nop
sbb
sbb
adc
pop
add
mov
or
add
ret
arpl
pop
scas
inc
das
mov
pop
popa
mov
scas
sahf
arpl
or
push
test
pop
scas
popa
or
mov
sar
mov
pop
pop
leave
shr
inc
shr
fmul
mov
dec
in
pop
arpl
sub
in
pinsrw
push
xchg
nop
in
in
xlat
mov
iret
repz
mov
cdq
xlat
loope
repz
jmp
(bad)
iret
cmps
inc
sub
add
sahf
fbstp
das
outs
dec
or
fs
xor
sti
push
es
pop
xchg
jmp
fs
fdiv
lahf
cvtps2pd
and
mov
or
fwait
add
(bad)
mov
nop
jae
and
push
mov
and
sub
adc
add
loopne
mov
test
sub
xchg
dec
pop
pop
rcr
outs
inc
pmulhuw
mov
jg
int3
xadd
jbe
jecxz
pop
psubb
loopne
scas
loope
jmp
cmc
sar
loopne
fldcw
mov
jns
loopne
lahf
push
clts
pop
pop
dec
push
jo
daa
(bad)
push
mov
inc
mov
dec
mul
enter
push
mov
daa
cmp
jecxz
mov
add
sbb
jno
out
mov
dec
pminub
adc
push
test
adc
les
mov
in
mov
or
popf
add
call
and
pop
cmp
neg
out
ins
(bad)
dec
test
pop
mov
mov
leave
in
inc
das
xor
pop
pop
(bad)
mov
das
jo
lock
clc
pop
mov
aas
jl
pop
repz
cmp
addr16
jno
push
jmp
repz
cmc
(bad)
jnp
mov
fwait
mov
cmp
repz
retf
rcr
jecxz
xor
test
movs
mov
pop
test
stos
test
cwde
je
add
jnp
mov
movs
fs
sbb
cmp
mov
jmp
dec
inc
and
out
adc
mov
adc
or
jo
in
movs
add
movs
fsubr
jp
xor
cmp
lods
es
cmp
fwait
add
cmp
add
daa
cmp
xchg
xchg
fstp
mov
jl
mov
sahf
shl
cmps
push
dec
and
sub
shl
pop
arpl
mov
or
jno
test
mov
inc
mov
mov
cmp
xchg
cmps
mov
test
add
jae
mov
movups
xor
dec
adc
and
mov
dec
inc
test
loopne
repnz
imul
cmp
or
popa
or
push
loopne
lock
arpl
mov
stos
dec
scas
cmp
pinsrw
pinsrw
rcl
cmps
mov
push
popf
jns
out
jns
(bad)
rcr
(bad)
jns
out
scas
mov
cmps
adc
in
call
and
mov
rcl
test
stos
fs
sar
mov
cmps
dec
add
and
sbb
and
stos
stos
stos
lods
cdq
arpl
adc
mov
and
stos
enter
pop
movs
stos
imul
cmp
daa
sahf
popf
add
adc
test
sbb
(bad)
xor
dec
outs
addps
in
jnp
stc
push
test
in
and
pushf
out
fisubr
sbb
push
jo
inc
stos
pop
sbb
cs
stos
scas
jnp
mov
push
or
es
scas
clc
lods
fs
das
jmp
scas
inc
xor
and
stos
lods
jecxz
out
push
lods
popf
jl
mov
lods
or
inc
xchg
pop
jb
hlt
lods
pop
inc
arpl
cdq
inc
retf
loopne
stos
mov
xchg
push
cwde
xchg
add
punpcklbw
mov
lods
pop
pop
sbb
cmp
je
pop
or
xchg
xchg
xchg
je
lods
ins
(bad)
mov
xlat
cmp
mov
dec
sub
(bad)
sahf
out
sahf
cdq
mov
jo
out
ja
xchg
dec
inc
dec
push
mov
imul
mov
clc
mov
ja
das
scas
fs
mov
inc
pop
aam
cmp
outs
jae
jecxz
not
scas
out
(bad)
scas
add
adc
xchg
test
xchg
pop
jb
scas
js
je
fmul
and
inc
xor
cmp
mov
add
mov
addr16
adc
or
xchg
cmp
pop
adc
or
mov
repz
mov
lods
mov
push
outs
mov
push
jo
test
adc
das
outs
inc
dec
cdq
sub
cmps
clc
fsub
inc
mov
cmp
fs
clc
push
mov
(bad)
leave
enter
or
mov
dec
mov
mov
push
sete
adc
mov
sbb
int3
mov
push
adc
int3
mov
jo
add
call
or
or
pop
and
jne
mov
inc
stos
pop
out
cmp
cmp
inc
inc
mov
xchg
fist
xor
push
mov
mov
pop
pcmpeqb
push
sbb
xchg
mov
or
jg
jns
out
xchg
aaa
aas
inc
sahf
out
sahf
dec
push
pop
outs
ja
cmp
inc
mov
es
xor
mov
adc
ds
pop
cwde
mov
xor
mov
inc
nop
mov
xor
mov
pop
cbw
popa
pop
sub
into
in
inc
pslld
pop
sbb
mov
add
inc
aas
lea
xor
xchg
mov
lods
in
test
popa
push
mov
or
mov
adc
mov
sbb
sbb
ret
inc
bsr
(bad)
ror
in
pop
mov
fmul
pop
les
daa
mov
adc
push
mov
outs
(bad)
das
pop
movzx
sti
xor
fcomp
mov
hlt
jns
ja
out
icebp
int
pop
mov
sahf
out
scas
push
outs
adc
out
sahf
out
sub
cmp
fistp
dec
push
sti
add
or
adc
add
nop
mov
lock
ror
sahf
push
add
mov
pop
test
pop
jp
stos
mov
enter
mov
inc
pop
pop
push
iret
mov
iret
or
(bad)
or
sbb
sbb
adc
imul
or
inc
arpl
adc
movlps
mov
adc
mov
sub
movzx
mov
call
xor
and
call
jno
shr
shrd
nop
mov
mov
bsf
mov
jbe
pop
loopne
mov
pop
pop
pop
pop
les
cs
comiss
mov
mov
shl
setg
cmps
inc
mov
push
test
cmp
loope
lds
iret
repz
mov
iret
repz
or
iret
repz
pop
cmp
out
cmp
xor
scas
repz
sti
xor
push
or
adc
inc
shl
xlat
sbb
ss
mov
ins
push
icebp
aaa
aaa
pusha
(bad)
leave
inc
adc
jbe
jbe
dec
mov
push
and
stos
cli
mov
iret
push
push
adc
jns
cmp
cmp
shr
add
xor
jl
arpl
jp
test
add
add
clc
pop
add
ja
sbb
inc
iret
sub
cmp
rol
leave
ror
ret
add
lock
or
mov
inc
jo
lock
or
mov
add
add
fnsave
xor
xor
pop
add
lahf
jmp
add
popa
test
cmp
gs
add
aaa
xchg
das
test
pop
shl
pop
rol
mov
add
and
pushf
fcomp
mov
pusha
adc
pushf
pushf
pushf
mov
mov
pushf
sbb
dec
(bad)
jns
inc
or
push
mov
jge
or
repz
ret
retf
shl
cmp
repz
jmp
sti
sbb
loope
mov
jp
inc
sbb
sbb
sbb
inc
mov
daa
xor
pop
mov
pop
or
add
mov
ud0
dec
adc
inc
dec
push
xchg
cwde
es
xor
mov
mov
lahf
aad
scas
and
jmp
pop
or
inc
mov
and
dec
add
adc
imul
cmp
sub
sti
mov
sbb
or
rcr
pop
lea
adc
fldenv
adc
and
enter
(bad)
in
daa
sbb
pop
leave
leave
leave
leave
movs
push
mov
leave
leave
leave
fdivr
mov
xor
sub
aas
mov
jnp
into
mov
pop
pop
sub
pop
je
mov
leave
in
mov
pop
fs
mov
outs
pop
mov
sbb
and
leave
out
rol
pop
clc
cmp
fnstsw
(bad)
repz
jmp
push
out
push
idiv
inc
cmp
repz
es
pop
pop
daa
das
repz
repz
aas
inc
dec
push
iret
repz
pop
outs
ja
xchg
repz
xchg
lahf
cmps
scas
loope
iret
repz
(bad)
iret
inc
movs
add
rcr
pop
int3
nop
fisttp
icebp
add
pusha
jg
sub
fsub
call
push
retf
push
daa
ret
push
arpl
jg
adc
add
lar
cmp
jg
into
pop
dec
add
adc
push
pusha
pop
stc
jno
dec
sub
push
inc
inc
xor
mov
comiss
popf
dec
and
or
imul
or
sub
xor
cmps
fs
cmp
mov
shl
or
and
cmp
mov
adc
jne
ret
ret
adc
add
and
mov
cmp
repz
test
into
repz
pop
ret
xor
adc
(bad)
inc
js
les
ror
mov
ret
aas
lods
lds
ins
and
aas
sbb
ss
push
xchg
outs
cmp
lea
pop
jb
cmp
adc
test
and
test
ins
jne
or
pop
je
popa
adc
sbb
mov
mov
outs
pop
jne
les
sbb
(bad)
push
test
aam
daa
mov
in
mov
pop
js
pushf
popf
pusha
daa
and
daa
sbb
sub
pushf
pushf
fmul
mov
mov
cmp
cmp
mov
in
and
pop
sub
pop
je
cmp
pop
fs
mov
lock
mov
call
aam
cs
aam
icebp
dec
sti
push
add
ja
push
jmp
push
jns
neg
push
dec
push
pop
out
sahf
out
outs
ja
xchg
xchg
lahf
cmps
scas
mov
sahf
out
mov
out
jns
out
out
idiv
pop
into
vmwrite
pop
daa
pop
mov
out
out
push
das
aaa
xor
or
push
out
mov
sub
in
inc
cmp
ficomp
fstp
leave
pushw
in
or
dec
std
rcr
and
shl
and
pop
xor
lods
pushf
cli
cmp
in
aas
add
or
pop
adc
leave
out
movs
xchg
cdq
ja
pushf
(bad)
das
sbb
cmp
leave
sbb
mov
aas
mov
push
mov
or
aad
lods
xchg
mov
test
pop
xor
lds
clc
mov
hlt
leave
add
shr
rol
mov
mov
xchg
paddsw
jo
mov
xchg
(bad)
fmul
leave
mov
daa
mov
addr16
movs
pop
push
mov
daa
daa
daa
add
mov
daa
aam
xor
sub
aas
mov
scas
and
add
sub
pop
je
pop
outs
mov
in
es
pop
fs
mov
dec
dec
dec
mov
mov
pop
cmp
ds
dec
sub
addr16
push
push
jnp
jns
jnp
push
jg
xchg
sahf
lahf
cmps
scas
mov
(bad)
jns
out
iret
xlat
(bad)
out
sahf
neg
xchg
clts
pop
pop
jns
out
daa
das
aaa
aas
inc
shr
out
push
pop
bswap
pop
cmp
jne
push
outs
pop
mov
sub
lea
(bad)
sub
rol
pushf
retf
(bad)
mov
sbb
int3
daa
iret
jmp
ds
adc
pop
xor
test
pop
daa
adc
pushf
jmp
loope
or
push
daa
or
movs
int
jno
out
inc
je
movs
push
stc
cwde
xor
inc
dec
and
int
xor
and
push
(bad)
int
push
aad
jle
stc
popa
and
cmps
xor
popa
or
mov
jg
xor
int3
test
mov
nop
je
jnp
nop
je
jb
jb
mov
int3
xchg
jno
xor
jl
repz
xchg
push
and
repz
std
out
push
mov
xchg
lahf
sub
repz
cmp
push
repz
repz
arpl
jnp
pop
mov
adc
lea
(bad)
push
bound
cld
sahf
mov
cwde
shl
iret
cmp
xor
aad
and
lods
or
mov
shl
sbb
push
movs
and
mov
pop
test
dec
push
add
shl
mov
stc
shr
pusha
mov
and
mov
ret
adc
xchg
inc
xor
mov
cmps
loop
rcr
hlt
push
pop
rol
jmp
push
outs
push
dec
add
mov
mul
je
jns
in
pusha
sub
and
sub
add
das
popa
fs
push
mov
(bad)
test
popa
jle
push
pushf
sub
sbb
pop
push
stos
(bad)
mov
mov
xor
add
pop
or
imul
xchg
and
out
mov
pop
pop
sbb
sbb
movs
mov
outs
ins
ror
shl
xchg
inc
comiss
jl
and
sbb
pop
lods
xor
mov
sbb
sbb
mov
fcom
enter
loopne
xchg
and
push
in
mov
cmp
sbb
sbb
mov
call
str
enter
jbe
fst
test
sbb
pop
bsf
jno
push
cmp
shl
cdq
lock
ja
mov
call
test
out
mov
cmp
repz
xlat
(bad)
idiv
repz
mul
iret
repz
xlat
(bad)
idiv
repz
div
sahf
out
sahf
pop
pop
daa
das
aaa
aas
jns
out
inc
dec
push
pop
addr16
sahf
out
ja
xchg
xchg
lahf
iret
and
bound
je
mov
iret
pushf
xchg
dec
popa
and
adc
aam
mov
jge
adc
mov
jge
cmp
adc
rcr
movs
pop
mov
lods
jne
ficom
psllw
jb
cwde
in
adc
inc
cld
mov
add
ret
pop
shl
inc
adc
add
or
ret
mov
loope
inc
call
sbb
jmp
inc
and
loope
or
add
mov
call
(bad)
(bad)
xor
xlat
add
aas
ror
gs
inc
fmul
xor
pop
jl
pushf
sub
mov
js
xlat
iret
jl
sbb
daa
pop
ret
xchg
cli
inc
xor
sub
sbb
jb
neg
sbb
xchg
pop
adc
cmp
and
fsubr
or
test
sbb
das
dec
fcom
add
cdq
xlat
add
int
je
movs
push
pusha
xlat
mov
iret
add
add
loopne
push
fsubr
sar
int3
je
mov
sbb
fsub
outs
nop
in
test
dec
outs
lds
adc
out
or
adc
cld
cmovs
jb
sti
dec
pop
ss
cmovs
cmp
jb
in
aaa
add
inc
cmp
adc
fstp
inc
add
jo
push
aad
sahf
cmps
shl
mov
cmp
xor
neg
out
out
idiv
out
cs
jns
clts
pop
pop
dec
xchg
(bad)
sub
sbb
pop
(bad)
push
or
dec
nop
sub
sbb
adc
pop
pop
mov
test
add
fstp
out
dec
mov
jb
adc
xchg
or
mov
mov
enter
rcl
cmp
pop
pop
imul
push
lea
jne
ja
pop
pop
or
es
and
iret
fiadd
test
fistp
push
and
jecxz
outs
or
rcl
mov
dec
inc
lods
fisttp
popf
ins
and
xor
fsub
pop
and
imul
popa
cmp
add
sbb
stos
sub
add
lods
fstp
add
pop
mov
pop
fld
fidivr
cmp
pop
xor
fs
lock
jae
outs
iret
jbe
das
test
and
test
fst
lock
jbe
repz
lds
sahf
nop
push
mov
dec
cmp
add
mov
sbb
ret
mov
stos
sub
wrmsr
in
aad
dec
jge
fsub
mul
inc
(bad)
pop
in
push
xor
adc
pop
add
dec
movzx
les
cmp
cmovo
mov
les
push
xor
aaa
cmp
xor
push
push
sub
cmp
movs
scas
imul
cmp
repz
xchg
pop
arpl
mov
bound
xchg
rcr
das
push
movs
push
pop
mov
cwde
fdivrp
fisttp
fbld
(bad)
ficomp
mov
add
or
gs
les
inc
in
fcomp
xlat
icebp
fiadd
push
js
out
xlat
lsl
lds
push
mov
rcr
pop
daa
sub
test
jbe
push
dec
jno
cmp
jno
test
pop
jne
scas
or
test
adc
pshufw
jl
jo
leave
leave
xchg
mov
push
ins
mov
dec
iret
push
inc
pop
xor
(bad)
mov
xchg
pop
cwde
rcpps
jbe
or
aas
in
lar
test
xor
(bad)
stc
dec
add
clc
fidiv
enter
icebp
push
scas
loope
fdivp
test
push
ret
mov
iret
repz
xlat
(bad)
out
idiv
repz
cmp
pop
pop
daa
iret
repz
das
aaa
aas
inc
dec
push
cmp
repz
outs
ja
idiv
xrelease
cmp
cmp
loopne
loopne
scas
mov
cmp
repz
pop
daa
das
aaa
iret
repz
aas
inc
dec
push
pop
addr16
repz
ja
xchg
pusha
sbb
add
xchg
push
xor
pop
and
ds
push
pop
pop
fist
jo
push
push
xchg
jecxz
jecxz
inc
adc
ja
xor
and
ror
add
mov
inc
inc
ror
sub
fisub
popf
cmc
sysexit
in
inc
and
push
cmc
stc
inc
dec
adc
and
in
loope
bnd
ins
in
pop
stos
(bad)
and
pusha
mov
xor
test
add
rcr
outs
add
loopne
push
fmul
sar
mov
daa
mov
(bad)
push
xchg
es
nop
pop
outs
pushf
outs
scas
call
pop
loopne
dec
dec
dec
push
in
pusha
les
dec
into
dec
dec
addps
aas
and
outs
daa
push
or
aas
div
adc
push
mov
jns
int
mov
out
cmp
xlat
out
fwait
xchg
in
in
in
repz
push
mov
cmp
out
idiv
pop
iret
repz
jbe
push
pop
pop
daa
das
aaa
cmp
repz
inc
dec
push
pop
sar
ja
pmulhw
idiv
in
repz
repz
in
in
repz
in
in
in
cmp
repz
in
in
and
or
in
test
adc
test
mov
inc
(bad)
pusha
cmp
movs
xor
or
out
add
cmc
push
test
xchg
push
jnp
cs
fcomp
bound
call
mov
ins
and
sub
sbb
add
add
or
and
(bad)
and
jmp
or
mov
add
fnstcw
movs
cmp
(bad)
adc
or
imul
outs
push
mov
lahf
fldcw
test
nop
fs
aas
std
mov
daa
pop
push
adc
(bad)
cmp
jg
test
dec
pop
cmovl
dec
pop
cmovl
or
das
dec
inc
subps
iret
repz
xchg
xchg
push
loope
(bad)
cmp
aaa
add
adc
jmp
repz
sti
test
(bad)
pop
mov
lds
jmp
sbb
push
jmp
fs
push
cs
popa
jmp
xchg
sub
pop
mov
and
aaa
pop
mov
cmp
add
push
ja
xchg
jmp
je
adc
ss
mov
adc
mov
pushf
sub
pusha
in
add
inc
add
fnstcw
adc
add
pop
pop
add
pop
inc
sub
mov
ror
jmp
fild
sub
in
fmul
mov
or
in
fsub
sbb
es
push
mov
xchg
popf
rcr
out
lock
jns
div
in
adc
push
add
in
aas
dec
xchg
mov
sbb
aas
out
fs
cmp
daa
(bad)
hlt
in
aas
mov
pop
sub
and
out
out
push
pop
ja
out
jge
gs
and
mov
call
cmp
inc
sbb
test
push
mov
mov
popa
or
rol
or
mov
push
add
pop
jno
in
add
adc
in
inc
mov
sub
daa
daa
mov
jo
dec
pop
mov
dec
pop
sub
mov
push
add
iret
outs
push
jmp
push
imul
sahf
out
aaa
aas
movhps
daa
das
add
sub
sar
test
mov
outs
test
aaa
mov
aaa
sbb
push
cmp
adc
out
xchg
pop
push
or
add
daa
xor
shr
cmc
mov
xor
arpl
ret
pop
sbb
xor
pop
add
loopne
sbb
leave
mov
ret
cmovbe
mov
xchg
xor
bound
nop
push
icebp
daa
iret
jae
or
cmp
bnd
xor
mov
out
nop
push
icebp
bound
test
rcl
xchg
sti
and
add
push
imul
call
and
or
mov
push
add
mov
xor
add
outs
scas
push
(bad)
push
jmp
stc
push
or
lahf
into
and
outs
inc
jne
cli
in
push
xchg
ins
mov
xchg
ret
scas
cwde
loope
enter
sbb
pop
ins
rcr
inc
repnz
push
aam
jno
cmp
call
hlt
(bad)
sub
sub
das
and
test
xchg
xor
mov
xor
das
ja
or
sub
lahf
push
fidiv
loopne
sub
emms
mov
cmp
adc
fwait
popa
fmul
rcr
in
in
jbe
pusha
mov
(bad)
int3
das
or
arpl
fcmovne
leave
leave
sbb
les
addr16
mov
pop
in
sub
fs
ror
pop
dec
pop
pusha
cwde
das
(bad)
sbb
jmp
mov
data16
mov
jns
iret
ins
inc
cmc
adc
push
mov
out
push
mov
ret
retf
shl
jns
out
jecxz
repz
jns
out
add
push
adc
and
test
sahf
out
cmp
sub
rol
fs
fs
add
lds
js
push
push
and
mov
js
push
cmc
mov
fidiv
push
call
dec
jmp
dec
inc
mov
rcr
xor
cmp
leave
or
jmp
lahf
mov
xor
daa
test
or
mov
inc
pop
mov
xor
lods
adc
and
and
dec
aam
adc
(bad)
mov
(bad)
xor
jle
hlt
imul
test
jne
gs
xor
clc
adc
xor
jno
sbb
mov
aam
scas
clc
mov
sub
clc
shl
xor
(bad)
mov
cmp
ja
mov
js
out
cld
clc
mov
add
fdivr
push
cli
push
jmp
add
mov
adc
mov
push
push
out
xchg
pop
adc
mov
sub
retf
jp
add
fild
fadd
jle
push
mov
adc
aas
pop
ja
adc
mov
sbb
xchg
mov
inc
pop
(bad)
add
or
sub
adc
lods
pop
lods
jbe
repnz
inc
mov
bswap
in
in
jbe
movs
aas
test
dec
in
pop
dec
mov
(bad)
inc
cld
fsubr
into
cmovp
mov
or
pop
enter
jb
in
push
jg
in
jbe
inc
or
mov
jb
cmp
lods
repz
inc
outs
push
mov
ds
mov
sahf
out
sahf
retf
pop
pop
daa
das
aaa
jns
out
aas
inc
dec
push
pop
out
sahf
out
outs
ja
xchg
xchg
lahf
cmps
scas
mov
jns
idiv
xlat
(bad)
jecxz
sahf
out
idiv
das
push
cpuid
ja
test
aaa
fsubr
push
dec
mov
in
ss
test
pushf
and
(bad)
into
cld
std
xchg
sbb
push
cld
out
push
test
sti
fiadd
push
ss
ds
daa
fs
pop
or
inc
aaa
mov
mov
xor
pop
add
or
push
cli
aaa
jmp
mov
or
in
xor
add
iret
and
add
add
push
popf
inc
mov
nop
add
xchg
lahf
cmovb
out
pop
dec
adc
test
cmp
jp
test
call
inc
or
cmp
mov
mov
and
or
mov
adc
mov
imul
push
ds
sti
cmp
daa
jno
pop
repnz
or
or
add
cmp
add
cmp
mov
(bad)
add
pop
ret
cli
mov
gs
lods
inc
loopne
pop
pop
pop
mov
mov
(bad)
mov
push
cwde
je
outs
pop
cwde
je
pushf
lods
aas
nop
shld
adc
lahf
add
add
push
sbb
add
jnp
std
jae
jge
xchg
repz
repz
dec
push
pop
and
cmp
sub
cmp
add
mov
sbb
test
vpmullw
out
out
js
fadd
xlat
test
pop
mov
gs
mov
and
mov
or
adc
fwait
cdq
in
jne
(bad)
in
mov
add
dec
loop
mov
gs
inc
add
adc
(bad)
loopne
lods
add
add
jo
popa
fld
mov
sbb
pop
test
mov
xchg
hlt
xchg
xor
sub
aas
sub
adc
(bad)
(bad)
icebp
jnp
inc
or
xchg
fimul
or
sbb
test
leave
pop
sub
cmp
ja
or
xor
add
cs
xchg
cmp
xchg
inc
adc
imul
fdivr
add
sub
push
cs
add
pop
pop
pcmpgtd
push
xchg
addr16
pop
test
sbb
mov
sbb
adc
cmp
and
add
nop
cmps
pop
cmc
or
sub
dec
lock
push
add
fld
dec
adc
mov
test
push
push
mov
cli
push
pop
pusha
sub
sub
pop
pop
xchg
jle
mov
push
push
push
push
xor
es
scas
adc
add
and
sbb
xor
ins
retf
dec
dec
not
sub
or
stos
test
(bad)
pop
scas
add
cmps
fadd
(bad)
jl
sub
data16
bound
fcomp
dec
movs
sub
add
aaa
cmps
cmp
and
or
xchg
jmp
jmp
or
nop
div
ss
and
adc
test
adc
cdq
clc
(bad)
or
rol
add
fimul
inc
out
cld
xor
adc
xchg
sbb
mov
pop
fld
das
pop
cmp
out
push
or
add
sbb
outs
test
mov
arpl
lock
or
sahf
sbb
mov
dec
jp
jb
call
sub
pop
movs
repnz
mov
aam
inc
adc
jo
mov
and
pop
cld
or
popf
push
inc
adc
or
dec
cmp
les
dec
aam
outs
js
pop
cmp
fcmovnu
das
repnz
add
or
add
shl
loope
push
adc
test
pop
pop
jb
add
pop
inc
add
popf
iret
mov
or
xchg
or
push
lahf
and
jg
fld
sub
pop
das
jae
aad
or
mov
test
mov
add
push
adc
adc
aam
push
leave
pusha
int
sbb
aad
sub
push
adc
jns
jg
pop
push
mov
in
pushf
cmpxchg
daa
mov
xchg
adc
inc
adc
fstp
das
pop
push
or
aaa
adc
jl
out
out
cwde
out
ret
add
xchg
push
ret
ficom
or
aad
inc
add
jb
loop
rol
inc
dec
leave
stos
xchg
mov
jb
jns
cwde
test
push
inc
xchg
fild
pop
movs
pusha
iret
xchg
je
inc
call
adc
cmp
push
xor
inc
in
in
sbb
pop
adc
fist
ins
loop
add
mov
pushf
fild
add
mov
pop
adc
nop
push
jbe
mov
adc
fcom
mov
loope
inc
cmp
mov
adc
sub
sub
adc
mov
outs
push
adc
mov
loope
or
lock
adc
or
sbb
adc
or
jb
and
adc
add
sbb
loopne
dec
mov
loopne
and
inc
test
add
mov
mov
adc
dec
add
(bad)
lock
cmp
dec
adc
jle
inc
iret
mov
call
adc
and
stos
add
out
mov
mov
lds
ins
adc
add
inc
fcom
shl
add
push
xchg
sub
loope
mov
clc
push
out
mov
in
popf
and
push
pop
push
pop
add
(bad)
mov
jmp
mov
test
enter
pop
fnsave
pop
adc
ret
sbb
jecxz
adc
and
ret
pop
mov
xor
and
and
add
push
pusha
push
(bad)
and
inc
iret
loope
sbb
cdq
push
adc
mov
adc
fimul
sbb
push
and
push
das
mov
into
cmc
imul
clc
add
js
xlat
cmps
ins
mov
shl
pop
out
in
sbb
inc
mov
or
mov
pop
sbb
xor
sbb
add
add
in
cdq
sbb
test
stc
adc
out
outs
neg
call
das
lahf
push
xor
sub
test
out
cwde
and
add
or
lea
ds
nop
xor
or
xor
or
push
adc
ret
add
mov
repnz
xchg
or
or
or
inc
or
dec
data16
cmp
sbb
nop
dec
xchg
aas
add
into
sbb
fld
xchg
xchg
fild
(bad)
test
pop
inc
(bad)
(bad)
in
add
push
and
jl
fild
dec
fsubr
add
ss
add
add
add
push
hlt
sub
int
gs
adc
in
test
lahf
loopne
jmp
push
dec
inc
or
repnz
and
jae
lea
jmp
add
sbb
xchg
pop
dec
loopne
or
add
jb
push
xor
sub
inc
adc
imul
repz
mov
cmp
and
leave
nop
xor
push
inc
mov
push
lahf
and
test
cmp
sub
cmp
test
lahf
mov
push
or
jae
xor
lahf
test
or
clc
inc
or
ja
call
int
jle
mov
xor
sub
add
add
test
mov
push
popa
push
movs
pop
pop
mov
xor
add
lea
es
add
mov
call
pusha
pop
mov
cmp
cmp
addr16
and
xor
dec
adc
stos
test
and
pop
daa
add
fild
popa
arpl
clc
and
aam
fstp
ror
adc
add
pop
add
inc
and
inc
call
add
call
ret
jne
add
inc
test
(bad)
push
js
shr
mov
dec
push
jns
mov
fwait
xchg
and
imul
push
pop
mov
popa
sub
int3
sub
inc
sbb
or
pop
inc
adc
and
or
ret
add
mov
ja
neg
adc
inc
sti
pusha
add
cli
sahf
adc
ret
stos
bound
sbb
mov
adc
mov
stc
xchg
xchg
call
lea
jl
adc
sbb
shl
and
and
mov
ror
mov
movs
(bad)
and
inc
sbb
out
mov
mov
inc
and
push
and
and
mov
add
jge
jne
dec
add
scas
pop
clc
mov
pop
out
dec
push
enter
cmp
lods
and
test
and
jg
adc
or
out
cmp
cwde
add
pop
add
inc
(bad)
mov
push
pop
or
(bad)
or
sbb
add
push
push
and
mov
ds
mov
add
out
or
lea
xlat
rcl
mov
and
and
sub
mov
and
dec
adc
or
mov
add
daa
or
inc
push
xor
add
pop
push
enter
les
and
in
daa
pop
add
adc
mov
push
push
clc
jl
adc
sub
mov
pop
enter
add
lods
pushf
lods
nop
mov
or
pop
sub
xor
xor
sub
sub
sub
stc
cmps
inc
cs
dec
repnz
and
lea
enter
rcr
loope
cmp
xlat
lock
push
clc
test
je
loop
cmp
fimul
sub
cs
add
or
mov
pushf
adc
jbe
dec
jae
add
retf
add
jno
shl
add
add
jne
retf
mov
call
adc
xchg
jg
adc
or
add
jge
dec
outs
adc
jmp
sbb
cmp
pop
add
sub
ja
xor
sub
(bad)
out
sahf
frstor
pop
pop
lods
add
jnp
xchg
mov
and
mov
jl
imul
push
sub
inc
or
sub
adc
and
(bad)
and
cmovns
xchg
cs
nop
xchg
test
inc
call
(bad)
or
inc
rol
call
test
mov
pop
push
mov
ds
iret
sub
in
inc
in
and
les
rol
jbe
int3
fdiv
sub
nop
cmp
adc
sub
sub
add
jb
or
cs
and
xor
or
xor
adc
adc
mov
and
adc
fcomip
ins
add
aaa
xor
mov
ds
push
cmp
adc
inc
adc
push
ss
cld
add
or
dec
cmp
add
fsub
xlat
cmps
int
mov
or
pop
push
shl
ret
(bad)
(bad)
mov
xchg
xlat
sub
mov
je
jmp
nop
mov
inc
xor
(bad)
cmp
xor
fldpi
pop
(bad)
pusha
and
dec
sbb
and
dec
adc
xor
cmp
jecxz
xor
enter
gs
enter
aam
(bad)
xlat
je
and
xchg
pop
cs
or
das
adc
sbb
je
and
jb
and
sbb
pop
ret
pop
pop
and
aam
(bad)
xchg
push
call
pop
pop
mov
push
sub
sub
pop
xchg
add
enter
mov
push
push
xor
pop
dec
adc
dec
cs
jb
inc
sub
cmp
inc
sub
inc
cmps
scas
xchg
xchg
add
inc
nop
pop
sub
lock
(bad)
mov
inc
mov
sbb
ja
fwait
rcr
xor
fbld
and
add
xor
fidiv
mov
and
shl
stos
add
mov
in
pop
out
pusha
mov
mov
sub
ins
xchg
shl
nop
pop
adc
and
or
pop
fwait
sbb
shr
daa
pop
aas
xchg
add
dec
movs
push
call
push
pop
mov
pop
xchg
sub
in
dec
cld
xchg
ret
add
js
xor
icebp
call
(bad)
lea
shl
gs
mov
sbb
inc
scas
and
stos
jmp
jp
add
call
mov
sub
scas
inc
pushf
and
add
cmp
outs
xor
dec
leave
(bad)
dec
and
and
cmp
iret
fnstenv
cmp
inc
mov
inc
pop
sbb
pop
int
xor
add
xor
call
sbb
(bad)
int3
lock
cmp
jae
sub
adc
and
ins
and
adc
xlat
dec
mov
xlat
push
adc
sbb
push
inc
es
push
adc
and
and
fst
sub
or
or
fld
pop
pop
push
cmp
pop
ror
inc
cs
adc
je
test
clc
xchg
outs
push
aaa
ror
or
or
xchg
(bad)
movups
adc
inc
nop
in
and
cs
add
mov
(bad)
aas
xor
leave
in
cmp
pusha
pop
add
dec
pop
push
das
dec
xor
aaa
xor
dec
dec
jle
jnp
ins
add
aaa
nop
lahf
cld
nop
inc
xor
adc
cmp
cmp
enter
pushf
and
xchg
mov
aas
rol
or
mov
add
sub
cs
sbb
xor
das
push
xor
jb
cmp
sub
loope
cmp
fsubr
adc
cmp
cmp
and
push
xchg
cs
nop
inc
addr16
pop
and
sbb
iret
push
out
jo
inc
jb
pop
push
cmp
add
sub
cmp
adc
inc
inc
sbb
or
sbb
cwde
(bad)
or
test
pop
sbb
sbb
das
xor
(bad)
or
sub
sbb
mov
fadd
cmp
out
mov
xchg
add
push
daa
fdivr
mov
add
xchg
mov
add
push
xor
icebp
and
add
add
push
inc
cmp
push
inc
repz
dec
inc
xchg
sbb
enter
sub
dec
cmp
xchg
inc
add
push
and
pop
add
inc
mov
pop
sub
or
dec
mov
push
cmps
dec
daa
sbb
and
mov
test
or
dec
add
jbe
adc
add
inc
or
adc
dec
xor
icebp
test
xor
adc
xor
xor
push
mov
cmp
inc
xor
fild
mov
adc
stc
movs
pusha
jo
add
adc
dec
iret
xchg
cmp
(bad)
cmp
add
pop
scas
xor
arpl
cmp
bswap
add
ins
mov
xchg
jnp
push
ss
and
ins
and
xor
(bad)
fcomp
fadd
mov
sbb
loope
inc
sub
push
cmp
xchg
stos
nop
mov
scas
outs
ins
fs
pop
ret
aaa
inc
cdq
cmp
xchg
mov
or
loop
(bad)
cmps
sbb
jecxz
loop
mov
fstp
add
fbstp
xor
nop
adc
push
sub
sbb
adc
out
movzx
lea
retf
outs
pop
pop
or
rol
fwait
test
dec
adc
call
adc
pop
fdivr
bound
mov
xchg
add
adc
push
daa
lods
aas
imul
fistp
mov
add
int3
add
xor
dec
sbb
sbb
pop
pop
dec
sbb
sub
and
xchg
in
enter
fsub
mov
in
jo
lds
div
inc
(bad)
dec
or
inc
mov
movs
xchg
inc
mov
mov
add
add
das
push
inc
and
sub
aaa
movs
jg
or
outs
aaa
mov
cmp
dec
xchg
aaa
ret
js
jle
xor
nop
test
mov
js
add
dec
nop
pop
les
leave
and
cmp
and
and
mov
add
sub
wbinvd
rcr
xlat
es
stc
scas
xor
mov
mov
cmc
inc
gs
or
inc
gs
test
neg
out
inc
test
sub
gs
call
xor
gs
xor
pop
or
adc
xor
mov
pop
pop
inc
inc
inc
mov
adc
xchg
fdivr
rcl
test
adc
adc
daa
in
jmp
dec
push
mov
mov
mov
daa
xchg
dec
mov
imul
ror
mov
and
mov
in
mov
jb
lahf
lock
inc
mov
sti
test
dec
inc
pop
adc
or
jg
push
sub
and
inc
clc
pop
fldenv
popa
adc
dec
cmp
and
cmp
ins
xor
pop
or
fistp
add
pop
pop
xchg
dec
cmps
ins
dec
cmp
inc
push
or
jo
popf
shr
test
adc
in
or
cmp
fisttp
aam
push
xor
test
or
and
or
mov
mov
sbb
and
add
dec
hlt
mov
cmp
mov
or
xor
inc
add
push
add
add
mov
data16
dec
mul
push
clts
xor
push
push
pop
pop
out
(bad)
ins
add
pop
(bad)
(bad)
adc
mov
cmp
add
inc
adc
outs
mov
add
rcr
nop
das
and
pushf
imul
mov
sub
sahf
mov
jno
ss
sbb
aaa
xor
jb
popa
fst
rcr
(bad)
ins
push
push
lahf
xor
cmovbe
cmp
in
inc
sbb
push
iret
ror
sbb
cwde
out
push
fcomp
es
and
cmp
xor
pop
aas
fwait
call
lds
lods
xchg
inc
rcl
bound
dec
popa
push
arpl
add
mov
(bad)
(bad)
cmc
mov
call
aas
sbb
ret
scas
cwde
xor
mov
lods
fstp
fwait
xor
aam
test
les
fnstsw
gs
es
mov
lea
sbb
sbb
arpl
mov
inc
lea
imul
mov
jg
jmp
dec
or
sbb
cld
in
dec
sub
fidiv
mov
not
fld
sub
and
ror
inc
adc
out
dec
sbb
push
xor
fwait
push
mov
test
outs
pop
cmp
adc
dec
loopne
sbb
js
add
mov
mov
mul
enter
icebp
adc
dec
aaa
loopne
push
sbb
adc
dec
iret
cmp
push
or
sbb
dec
push
xor
adc
aas
pop
push
and
mov
or
or
(bad)
outs
inc
adc
jb
je
dec
je
push
or
or
lock
ret
mov
mov
ret
pop
sub
dec
out
pop
dec
and
add
add
bound
loopne
pusha
rcr
sbb
(bad)
and
jae
add
in
outs
push
js
or
(bad)
inc
xchg
cmp
movlps
adc
das
add
cld
dec
imul
inc
sbb
aam
imul
enter
sbb
push
lods
adc
and
fistp
mov
cmp
dec
scas
je
adc
adc
mov
loope
jmp
push
and
sub
rcr
and
adc
jnp
scas
jg
jbe
push
sbb
pop
cmp
cmps
add
sgdtd
lock
cmp
dec
cmp
push
leave
inc
xchg
push
mov
mov
in
std
inc
jae
inc
sbb
add
and
sub
enter
jg
sub
call
das
xchg
or
push
pop
inc
enter
inc
push
inc
push
mov
nop
pushf
or
out
jae
sahf
test
fsub
xchg
pop
add
test
mov
test
inc
and
adc
movs
push
or
push
test
mov
clc
and
add
sbb
push
popf
cmp
and
fistp
sbb
in
sbb
lods
ja
int3
mov
push
push
push
rcr
xchg
lods
or
aas
jge
enter
test
and
movs
movs
dec
and
push
sbb
dec
loopne
sbb
jmp
out
sub
mov
xchg
sbb
hlt
repnz
test
icebp
arpl
scas
xchg
xchg
add
inc
and
cmp
add
and
in
pop
scas
test
cli
popf
pop
mov
or
mov
fsubr
or
or
ret
nop
xchg
push
xor
aas
inc
jb
aaa
sub
inc
rol
and
dec
in
sub
inc
push
nop
retf
jmp
mov
ucomiss
pusha
add
mov
or
cmp
sbb
cmps
shl
adc
stc
ins
imul
add
inc
outs
or
adc
jge
jmp
sub
fdivr
imul
inc
and
xchg
cld
pop
jl
out
push
hlt
hlt
pop
add
sti
hlt
mov
xor
cwde
dec
test
push
mov
push
dec
rcr
test
rcl
leave
and
dec
mov
add
adc
pop
pop
stos
lea
les
push
adc
mov
int3
test
push
pop
cdq
inc
inc
jbe
sti
pop
fisubr
pop
jae
ins
adc
shl
icebp
outs
js
retf
pop
pop
push
(bad)
mov
jno
add
dec
test
int3
cmp
adc
xor
and
sub
jp
xor
xor
xchg
sbb
out
cs
es
mov
or
sbb
adc
inc
rol
inc
or
hlt
jge
dec
add
mov
jg
mov
dec
mov
fs
pop
xchg
xor
pop
(bad)
and
push
ror
xor
push
cmps
push
sub
inc
gs
nop
repnz
pop
and
cwde
nop
inc
clc
xchg
or
and
ss
neg
popf
fdiv
pop
mov
sbb
mov
sbb
imul
(bad)
sahf
add
mov
add
test
jo
jl
add
add
add
dec
call
mov
or
dec
inc
jnp
or
cld
dec
adc
dec
dec
(bad)
sub
ret
jg
pop
or
ret
or
and
pop
push
lahf
sub
sbb
inc
test
xor
popa
inc
and
and
call
xcrypt-ofb
cmps
sub
mov
adc
fld
into
xchg
pushf
adc
out
mov
out
mov
or
je
adc
push
dec
scas
es
xor
adc
icebp
xchg
adc
aas
mov
test
or
add
loope
dec
loopne
and
es
and
adc
or
sar
adc
jmp
inc
or
or
(bad)
adc
ret
pop
or
outs
lea
and
xlat
or
pop
jo
or
fisttp
out
loop
cmps
or
js
lea
or
pusha
add
inc
mov
arpl
add
in
mov
cld
outs
in
aaa
xchg
jo
fs
or
add
enter
in
out
sahf
out
in
lock
cmps
mov
add
push
pop
ret
aam
push
jmp
sbb
lods
scas
adc
or
cmp
ins
add
ins
add
popa
add
push
jo
and
xchg
mov
push
dec
push
aam
xchg
mov
je
ret
arpl
sbb
fbld
mov
inc
stos
add
xchg
xor
push
cmp
or
call
fstp
and
dec
pop
jmp
movs
loopne
lds
std
fs
add
push
shl
test
lock
ret
add
bound
pop
call
aad
mov
fs
test
(bad)
cmp
sub
mov
leave
(bad)
adc
xchg
push
mov
mov
and
icebp
push
test
stos
(bad)
test
shr
mov
shl
ret
pusha
mov
les
cmp
cdq
pusha
call
mov
pop
push
sar
data16
add
push
int
ja
sbb
xchg
jae
mov
xor
mov
push
dec
mov
popa
pusha
dec
ret
shl
dec
dec
and
mov
inc
ds
pop
push
push
int
pop
sub
cld
jns
push
addr16
cdq
push
pop
test
or
jo
jno
cmp
jl
add
push
xor
and
or
and
push
inc
sbb
fsub
xchg
xchg
pop
sbb
sbb
mov
jbe
scas
ja
addr16
sbb
into
or
dec
adc
nop
fadd
and
les
mov
mov
and
mov
mov
dec
mov
nop
jmp
or
sub
jmp
push
inc
js
add
sub
mov
cmp
add
dec
mov
cmovs
mov
mov
sub
push
in
movs
iret
or
bound
and
dec
and
les
mov
in
adc
dec
mov
and
loopne
pop
mov
and
mov
fistp
lods
add
ins
mov
ins
or
in
cmp
adc
xchg
mov
sbb
pop
test
sub
nop
cmp
and
and
or
xor
ror
pop
sbb
out
in
out
push
stc
fstp
cmp
push
iret
add
mov
push
adc
loop
in
mov
aas
fsubr
test
outs
push
jb
dec
iret
ins
clc
jo
or
cmp
pop
pop
push
nop
outs
jmp
nop
out
dec
loop
mov
outs
lods
nop
aas
test
mov
lea
mov
add
mov
movs
aas
push
inc
jb
sub
sub
xor
pmaddubsw
shr
repnz
add
inc
pop
jo
(bad)
in
daa
xchg
mov
cmp
mov
das
call
or
and
retf
ret
adc
ja
push
add
ja
inc
cmp
and
call
and
adc
inc
jae
repnz
dec
jae
jae
add
jbe
test
aas
sub
ja
fsubr
daa
sbb
je
inc
push
add
and
inc
cdq
sbb
push
mov
ret
mov
mov
or
(bad)
or
mov
pop
add
xor
mov
rol
add
int3
addr16
movs
aaa
add
push
(bad)
in
xor
jbe
js
and
adc
pop
dec
xchg
and
imul
div
fmul
in
mov
fisub
inc
lock
push
inc
rol
jo
mov
call
pop
pop
and
mov
lods
idiv
mov
push
repnz
in
sbb
lea
clc
gs
pop
arpl
mov
stos
push
adc
adc
cmp
push
jbe
inc
in
mov
out
cmps
cmp
jmp
test
ficomp
outs
cmp
fadd
mov
pusha
mov
or
mov
xchg
mov
js
pop
int3
mov
push
clc
ja
mov
sbb
call
mov
xor
mov
or
adc
pushf
lea
sub
inc
mov
jb
add
jns
jbe
jns
loope
cmp
lock
call
pinsrw
sbb
out
or
movs
pop
cmps
fmul
mov
add
xchg
pop
inc
lock
cmp
ds
shr
pop
bswap
inc
add
or
addr16
xchg
test
adc
clc
pop
and
jg
(bad)
pop
cmp
inc
lock
sbb
pop
gs
or
jecxz
fucomip
aaa
cld
mov
sbb
inc
loope
mov
cmp
hlt
(bad)
push
and
imul
or
daa
push
in
mov
out
test
ror
pop
add
cmps
lock
cmp
packuswb
lods
mov
icebp
pop
push
shl
mov
fadd
inc
(bad)
add
movs
xor
jmp
hlt
xchg
or
outs
test
add
dec
jno
call
xor
nop
mov
xor
adc
aaa
lahf
jae
lock
ins
test
mov
cmps
push
push
sub
xor
bound
mov
add
pop
aas
fld
pop
pcmpgtb
test
inc
imul
inc
addr16
ret
inc
mov
loopne
fdiv
xchg
das
imul
mov
int
jecxz
xchg
mov
mov
jp
pop
push
inc
int
inc
jl
sub
scas
lock
push
mov
outs
lock
or
nop
add
add
add
and
sbb
movs
add
scas
push
repnz
sub
gs
dec
pop
push
add
sub
xor
sahf
xlat
jnp
fld
cmp
(bad)
sub
or
sahf
and
fbld
push
add
add
sub
sbb
jl
push
jl
mov
movs
add
push
pushf
scas
push
add
push
sub
pop
scas
jge
pop
leave
push
push
lahf
mov
gs
lahf
push
add
fwait
lahf
xchg
repnz
mov
fistp
js
sbb
adc
popa
(bad)
xor
mov
adc
lock
pop
add
or
push
push
xchg
or
add
mov
adc
inc
mov
add
sub
mov
push
sub
cli
imul
xchg
cld
aad
mov
mov
stos
and
(bad)
fld
scas
inc
xchg
push
(bad)
mov
mov
inc
inc
out
add
mov
jbe
push
push
and
aas
pop
add
cwde
cmps
and
jbe
adc
mov
shl
mov
jg
mov
jl
fimul
in
pop
xchg
cmp
xor
pop
mov
inc
add
push
xor
adc
rcl
and
add
aas
sbb
adc
mov
cmp
outs
xor
aas
push
xor
dec
cli
pop
xchg
add
or
aas
and
push
inc
sar
dec
idiv
imul
cmp
and
scas
and
add
and
xchg
push
push
and
pop
mov
out
push
add
add
out
shr
mov
push
sub
pop
add
inc
inc
pop
and
sar
add
and
mov
pop
cmp
xor
out
mov
mov
les
sub
sub
xchg
add
add
je
addr16
cmps
add
add
loopne
jno
sub
and
(bad)
dec
push
sub
das
sbb
popf
add
setns
pop
sub
pop
test
add
inc
pop
adc
cwde
loop
jo
int3
or
dec
add
mov
cmp
mov
push
jbe
push
mov
(bad)
dec
jecxz
mov
push
mov
xchg
pop
mov
loopne
in
icebp
nop
push
cmp
adc
jmp
push
cwde
addr16
js
jno
sar
fld
sub
add
inc
movs
push
add
test
xchg
das
clc
loop
pop
test
xchg
cmp
mov
jmp
clc
push
xchg
pop
cdq
lock
dec
xchg
jne
add
xchg
fldenv
xor
hlt
rol
push
sar
add
mov
adc
xor
push
test
daa
mov
cmp
das
add
jg
ins
xchg
lods
js
adc
add
inc
addr16
pusha
and
mov
rol
pop
add
loopne
xor
jns
ins
sub
jne
pop
and
arpl
xchg
mov
sbb
sbb
add
lea
jl
and
mul
not
aad
lea
js
mov
and
or
ror
movs
xchg
inc
xchg
aam
loope
(bad)
cmp
jnp
or
jno
scas
mov
and
ins
xchg
cmp
xchg
aam
sub
adc
inc
mov
xchg
and
pop
shl
add
push
sub
neg
or
loop
idiv
lea
mov
add
jmp
adc
add
pop
push
pop
add
(bad)
adc
add
push
loopne
not
not
push
loopne
or
neg
mov
loopne
xlat
add
inc
pushf
das
jle
add
cmp
test
not
push
or
add
pusha
and
jae
inc
test
out
dec
add
les
jg
jg
adc
inc
adc
aaa
out
xchg
pop
or
nop
js
adc
aaa
clc
nop
rol
lahf
mov
cwde
movs
arpl
add
sbb
movs
and
lahf
xchg
xchg
add
inc
and
adc
cld
push
shl
add
aaa
xchg
repnz
mov
scas
dec
enter
adc
and
sub
xchg
outs
dec
enter
or
add
rol
add
hlt
add
and
aam
outs
cmp
test
addr16
cmps
sbb
or
pop
jns
add
and
sub
in
cmp
cmp
mov
xchg
push
add
push
add
add
mov
sub
pop
outs
mov
add
retf
xchg
xchg
add
adc
xchg
mov
xchg
cmp
push
add
mov
mov
mov
sub
or
repnz
cwde
adc
pop
sbb
mov
dec
cwde
cwde
sbb
adc
and
clc
dec
in
xchg
adc
push
jge
loopne
pop
or
retf
lahf
clc
sbb
add
xchg
mov
mov
cmp
mov
add
push
daa
mov
sbb
popa
or
sbb
add
mov
aas
sub
arpl
into
pop
mov
add
and
shr
aam
gs
dec
ja
pop
je
sbb
pop
push
or
dec
(bad)
mov
les
mov
lea
cvtps2pi
test
mov
inc
test
add
loope
ins
cmovp
or
mov
mul
xor
cmp
and
retf
das
loope
test
loopne
push
cmc
xor
les
lods
fwait
xor
jne
add
(bad)
push
sbb
mov
nop
popf
(bad)
xor
push
xor
sub
pause
popf
and
or
(bad)
cwde
pushf
add
sahf
mov
std
mov
sahf
movs
push
enter
sbb
lahf
das
sub
test
pop
pusha
dec
clc
mov
retf
adc
cmp
cmps
sahf
jecxz
push
gs
push
mov
mov
jmp
call
mov
outs
mov
sub
leave
into
or
dec
outs
jae
popa
pshufw
mov
xchg
xchg
daa
bt
leave
enter
movs
pusha
nop
fs
leave
mov
repnz
in
mov
or
xor
fmul
fcmovbe
shr
push
cmps
pop
cmp
fmul
add
inc
sub
add
inc
rcl
add
test
cmp
dec
add
sbb
or
gs
arpl
jae
adc
jmp
xor
push
nop
mov
dec
pop
pusha
mov
aas
dec
add
sbb
mov
or
(bad)
mov
inc
imul
test
call
inc
mov
push
mov
call
mov
adc
mov
xor
mov
xchg
lods
add
int
inc
and
sub
inc
mov
push
adc
add
xchg
push
inc
add
add
jg
inc
imul
push
mov
inc
cmps
adc
push
xchg
inc
imul
inc
imul
inc
fwait
adc
imul
rol
and
jns
push
mov
rcl
inc
dec
inc
sub
nop
pop
adc
and
cmps
movs
mov
(bad)
retf
and
mov
and
and
lds
int
sub
dec
add
or
(bad)
cmps
add
or
or
cwde
sahf
rcl
add
dec
inc
cmp
pop
test
or
adc
daa
test
or
push
call
hlt
pop
enter
daa
lods
data16
mov
xchg
cwde
inc
mov
inc
inc
pusha
(bad)
retf
mov
add
dec
popf
pop
add
je
fdiv
add
iret
sub
gs
fld
adc
cmp
cmpxchg
mov
push
mov
sbb
fmul
adc
mov
sbb
sbb
rcl
stos
(bad)
pop
add
inc
ret
shr
pop
pop
adc
and
sub
sub
mov
xchg
test
loopne
(bad)
push
in
mov
dec
push
push
icebp
mov
lods
jg
add
mov
xlat
mov
repnz
je
test
sub
jg
test
sub
sub
xchg
or
ins
mov
xchg
fistp
call
scas
sbb
enter
xchg
inc
in
leave
leave
push
mov
in
fs
cmps
fsub
jb
jb
ins
xchg
mov
cmp
sbb
mov
sub
test
ds
mov
xor
andnps
clc
shl
mov
cmp
cmps
push
sub
cmp
push
dec
or
sub
jno
cmps
push
sbb
mov
dec
add
bound
inc
push
and
sub
sub
add
mov
mov
xor
add
pop
sub
mov
test
inc
fwait
je
sub
pop
jns
pushf
pusha
sub
xor
repnz
adc
imul
push
pop
lods
mov
fs
lods
mov
xchg
xor
add
jmp
add
add
mov
imul
and
or
dec
push
lods
mov
add
or
jns
inc
add
adc
and
adc
and
pop
lds
les
xchg
or
ds
(bad)
imul
jmp
or
inc
and
rcr
pop
lea
adc
dec
sub
jl
mov
inc
or
pusha
jge
fiadd
(bad)
jge
pop
sub
or
mov
adc
mov
xor
jg
mov
mov
fwait
in
add
and
test
pop
in
mov
mov
hlt
es
mov
dec
adc
xor
push
loope
shl
jg
mov
cwde
rcr
xchg
mov
inc
sub
jg
dec
mov
cwde
popa
inc
scas
adc
rcl
cdq
mov
pushf
shl
dec
adc
push
mov
mov
mov
push
pushf
call
cmps
add
mov
push
aas
jl
add
xchg
push
xchg
outs
repnz
xchg
jg
mov
inc
mov
jg
mov
dec
leave
mov
dec
outs
push
cmp
mov
(bad)
sbb
je
push
mov
xchg
xchg
xchg
inc
cmp
leave
adc
in
in
mov
jb
repnz
mov
sbb
repnz
cmp
lods
in
sar
shr
inc
out
jle
pop
adc
xor
dec
fimul
push
jg
cmp
jo
jg
and
nop
shr
add
add
jno
xor
xor
jg
ror
xchg
xor
xchg
jg
mov
add
sub
lods
add
mov
mov
jg
movs
adc
add
fimul
xchg
mov
dec
mov
fwait
mov
rol
add
push
pop
jg
pop
and
xchg
shr
cwde
rol
inc
and
inc
jns
inc
mov
test
cmp
add
add
push
jg
add
pop
shl
pop
mov
and
jae
leave
or
rcr
xchg
sar
and
sar
push
mov
call
mov
pop
sbb
mov
mov
push
dec
mov
call
cwde
sar
push
mov
sub
mov
rcr
add
xlat
movs
inc
pop
mov
inc
adc
xchg
dec
sub
add
or
lahf
stos
inc
xchg
pop
sub
dec
xlat
sbb
rol
xlat
pusha
xchg
out
sub
dec
or
and
movs
lods
dec
pop
sub
jmp
add
add
adc
cmc
ret
ret
jl
ret
bound
cmp
pop
mov
into
ret
gs
pop
sahf
(bad)
mov
setno
dec
push
adc
aaa
and
dec
test
test
pop
and
cmp
mov
add
jo
push
retf
dec
inc
call
fadd
imul
add
push
push
dec
out
retf
sbb
mov
addr16
lds
add
add
call
push
mov
jae
test
sub
push
popa
inc
sub
add
shl
cmp
(bad)
xchg
cld
(bad)
pop
cld
jmp
sbb
xchg
cmp
jo
jae
xchg
xchg
pop
push
nop
cmps
inc
test
inc
jo
cmp
test
sub
in
sub
push
mov
and
lods
add
xchg
xchg
mov
pop
lds
add
clc
(bad)
in
dec
enter
test
xor
xchg
mov
sbb
pop
mov
repz
sub
shl
and
les
dec
leave
xchg
adc
retf
daa
out
xchg
into
ins
mov
cmp
and
nop
mov
inc
lods
xchg
in
mov
cmp
mov
xchg
push
jb
enter
retf
test
leave
arpl
nop
pop
enter
(bad)
and
(bad)
leave
xchg
sbb
dec
and
lea
lods
imul
std
add
inc
inc
add
setle
femms
dec
pop
dec
dec
inc
dec
dec
pop
or
test
(bad)
(bad)
pop
sub
aam
sbb
ror
fst
pop
ins
ins
cs
imul
fs
sbb
(bad)
arpl
das
inc
int3
test
nop
cli
mov
mov
clc
or
dec
push
ds
clc
jb
arpl
xor
fbld
jg
push
popa
gs
popa
pusha
cwde
jo
loop
dec
ret
clc
adc
sbb
dec
mov
mov
ror
popa
sbb
xor
mov
mov
xor
xchg
push
or
add
inc
xlat
hlt
enter
xor
fsubp
inc
add
jmp
fdivp
push
sti
out
sub
arpl
jo
adc
xchg
pop
ret
jo
push
mov
pop
dec
into
outs
sub
inc
icebp
mov
push
(bad)
fmul
gs
lock
fcomp
pop
ins
xchg
dec
or
dec
add
add
or
sub
mov
xor
(bad)
aaa
xor
data16
(bad)
out
add
into
pop
mov
add
loopne
cmps
pop
movs
jecxz
push
inc
or
xor
in
ror
fwait
or
jne
sub
in
inc
add
in
popa
adc
cmp
fmul
inc
mov
and
cmp
nop
daa
dec
cld
xchg
adc
add
ss
daa
std
jo
mov
mov
mov
arpl
daa
ja
xor
enter
push
ins
idiv
ja
(bad)
mov
lock
mov
mov
dec
push
out
out
mov
push
aad
mov
jl
jl
iret
sbb
or
xchg
cmp
jnp
sbb
and
repz
dec
push
popa
imul
iret
repz
xchg
popf
cmps
mov
cmp
repz
push
iret
jnp
in
(bad)
jmp
loopne
repz
rcl
push
adc
loopne
sub
sub
cmp
gs
dec
daa
mov
jnp
fimul
or
test
call
mov
loope
mov
std
int3
shl
cmp
pop
push
int
stos
out
push
pushf
cmps
mov
xlat
mov
rol
loop
inc
ror
sub
ret
jo
mov
loop
sbb
data16
adc
mov
mov
fiadd
pop
rcl
cs
fs
pop
pop
fidiv
test
je
mov
jne
sub
(bad)
jg
inc
outs
arpl
or
fs
sar
jmp
shl
add
add
add
mov
mov
or
out
mov
rol
scas
es
cmps
mov
push
icebp
(bad)
in
pop
loopne
shl
loop
xchg
loop
xor
iret
pop
adc
aam
(bad)
push
in
repz
or
enter
or
or
aas
push
mov
push
icebp
cs
inc
cmp
xor
pusha
lahf
pop
fwait
mov
push
and
jp
in
mov
xchg
or
pop
push
jl
and
cmp
in
pop
cmp
test
pusha
cmp
adc
or
call
xlat
icebp
ds
push
add
or
stos
push
mov
sar
leave
rcr
out
sub
mov
test
xlat
lea
push
push
(bad)
push
sbb
in
daa
sti
aad
cmp
sub
sysret
(bad)
scas
inc
mov
jo
imul
cmp
(bad)
adc
xchg
scas
mov
dec
(bad)
les
mov
scas
mul
add
mov
stos
mov
nop
adc
cmp
ror
das
fsub
or
daa
in
jbe
fsub
or
arpl
and
pop
cmp
fadd
nop
daa
sub
cld
xchg
clc
add
ss
daa
std
jo
mov
mov
mov
arpl
xchg
ss
daa
ja
push
cdq
or
push
out
fcomp
sbb
fcomp
fmul
or
jl
cmps
in
xlat
push
test
cmp
jnp
adc
sbb
repz
inc
dec
pop
arpl
cmp
repz
mov
iret
repz
(bad)
rcr
out
call
xlat
push
out
sahf
loope
cmc
push
and
or
gs
add
ds
push
xchg
fdivr
xor
pop
adc
push
xor
inc
mov
dec
scas
add
mov
pop
shl
aam
popa
mov
and
rol
outs
fstp
xchg
cwde
sbb
shrd
xor
(bad)
push
mov
enter
sub
cmp
pop
push
inc
mov
mov
iret
jnp
out
fiadd
iret
hlt
fld
jecxz
repz
or
adc
iret
sub
cmp
iret
repz
outs
jns
(bad)
out
cmp
stos
popf
xchg
cmps
push
mov
or
cmp
lds
iret
and
aam
cwde
int3
(bad)
xchg
ror
fucomi
pop
int3
js
ja
fst
pop
and
adc
sbb
xor
popa
add
jl
or
push
inc
adc
nop
sbb
lods
pop
nop
adc
inc
push
jb
inc
sbb
clc
nop
arpl
cmp
sbb
dec
hlt
sbb
add
xor
adc
jmp
repz
add
es
(bad)
fstp
loope
jmp
cmc
dec
out
sahf
mul
adc
sbb
out
sahf
inc
dec
pop
arpl
jns
out
or
mov
push
pop
jns
out
imul
sahf
out
movs
scas
mov
sahf
int
retf
out
fdivr
dec
repnz
int3
or
fsub
test
fist
or
push
call
push
inc
je
frstor
or
and
cmp
jge
fcomip
xchg
es
sub
jge
fwait
popa
das
scas
rol
mov
cmp
or
cmp
mov
adc
mov
daa
mov
mov
cli
mov
jbe
add
xchg
clc
push
sbb
nop
add
stc
daa
std
jo
fsub
mov
adc
dec
mov
arpl
sbb
daa
ja
cmp
mov
aam
nop
inc
push
aam
ja
inc
lahf
nop
lahf
repz
jecxz
daa
outs
mov
jns
iret
push
fstp
in
out
stc
jns
out
add
or
xor
aas
dec
push
pop
addr16
out
sahf
jno
test
out
lods
mov
sahf
xchg
push
lahf
sahf
out
sahf
test
cmp
out
loopne
gs
push
inc
pop
add
pop
call
adc
loop
loopne
out
in
pop
aaa
mov
out
ss
fsub
inc
push
je
push
scas
add
(bad)
data16
and
add
add
dec
js
or
push
xor
mov
xchg
lahf
test
iret
mov
out
repz
outs
or
repz
sub
repz
cmp
inc
dec
pop
or
cmp
arpl
cdq
in
in
aas
test
cmp
xor
mov
cmps
in
mov
pop
mov
mov
mov
gs
fnstcw
outs
arpl
push
cmp
in
and
push
inc
inc
inc
rcr
inc
ret
cmps
rcr
shl
and
and
and
rol
rcl
rcr
enter
shl
and
and
and
rcr
jb
enter
pop
push
je
daa
adc
pop
cmps
add
dec
out
das
in
in
cmps
imul
cmps
imul
sahf
out
sahf
mov
(bad)
jecxz
mov
add
jns
out
fsubr
push
repz
pop
adc
sbb
cli
cmp
aad
addr16
xor
gs
data16
popf
mov
xor
addr16
out
cmp
and
loope
aaa
lock
push
loope
inc
inc
push
inc
push
cmp
mov
xchg
push
pop
pop
adc
cmp
cmp
and
add
and
push
call
js
pop
pop
push
leave
rcr
fild
mov
out
stc
add
or
iret
repz
xor
cmp
push
pop
addr16
test
cdq
mov
cmp
xchg
lahf
push
test
mov
daa
jmp
cdq
lods
push
(bad)
popf
addr16
test
jecxz
pop
cmp
gs
sbb
add
jmp
push
cli
sub
jnp
mov
xor
or
add
imul
dec
or
outs
ja
add
push
add
jo
add
mov
pop
pop
xor
jmp
js
jmp
sbb
push
dec
push
fldcw
fsub
(bad)
and
adc
js
push
push
scas
sar
add
sahf
jmp
mov
scas
ret
push
int
loope
sahf
neg
inc
adc
sbb
jns
cmp
pop
out
sahf
out
ins
ja
mov
cli
sahf
xchg
movs
jle
jmp
mov
test
mov
in
xlat
les
test
sbb
jae
aas
fst
test
fld
pop
in
ror
(bad)
in
inc
add
sbb
cwde
int3
xor
jno
xchg
retf
jmp
stos
call
xor
sub
out
jl
stos
add
out
cmps
out
push
inc
xor
rol
in
in
iret
xor
shr
in
in
in
push
cmps
cmp
repz
mov
cmp
test
ret
cmp
and
aaa
cmp
mov
push
in
pop
dec
out
and
or
cmp
mov
pop
mov
ins
jbe
out
pop
cmp
ds
xchg
retf
or
inc
psadbw
mov
and
addr16
adc
stos
mov
add
dec
push
mov
push
scas
xchg
lock
movs
lods
repz
jnp
mov
ror
fucomip
pop
cmp
jmp
adc
sbb
repz
das
cmp
repz
repz
popa
imul
sbb
into
mov
in
mov
lock
xchg
icebp
fld
stos
jbe
mov
pop
xchg
nop
pushf
call
or
fdiv
pusha
frstor
mov
jbe
or
aaa
shl
add
mov
repz
pop
repz
test
and
aaa
inc
dec
push
pop
sahf
out
sahf
imul
sahf
out
movs
scas
mov
sahf
out
loope
icebp
pusha
sti
push
ror
jecxz
repnz
adc
push
icebp
and
fiadd
mov
jmp
sub
pop
add
or
cmps
call
inc
dec
imul
int
or
outs
addr16
cmp
pop
daa
or
inc
add
aad
hlt
push
nop
int
gs
shl
add
int3
mov
loopne
(bad)
cmc
(bad)
cmc
repz
loope
test
(bad)
rcr
repz
frstpm(287
out
stc
add
repz
repz
pop
and
xor
iret
dec
push
pop
addr16
inc
aam
cmp
sub
pop
xor
loopne
not
outs
sub
not
nop
setbe
cwde
mov
jne
sbb
jb
addr16
iret
pop
mov
lock
jno
(bad)
loopne
or
pusha
or
sbb
xor
rol
push
sahf
xlat
out
xor
cmp
push
inc
or
(bad)
sbb
aaa
add
shl
adc
inc
dec
neg
xor
loopne
imul
gs
push
cmp
daa
inc
clc
sysexit
mov
fisubr
mov
call
sbb
add
pop
mov
cmp
inc
dec
and
cmp
sub
pop
clc
xchg
add
cmps
push
xor
xchg
xor
adc
sar
push
jo
mov
movs
fbld
mov
mov
adc
jns
arpl
mov
outs
push
or
sbb
sti
loopne
neg
aas
and
in
sbb
inc
push
clc
stos
arpl
ja
imul
cwde
adc
cmp
cmp
fsub
dec
cmp
fdivr
add
ds
aam
sbb
xor
scas
movs
adc
sbb
inc
adc
add
lea
enter
dec
xchg
adc
jl
int3
adc
push
sbb
and
sub
jo
jb
ret
adc
mov
in
cs
popa
pop
sub
sub
mov
pop
xor
(bad)
lock
cmp
shl
arpl
mov
sbb
int3
int3
int3
fs
inc
push
int3
int3
int3
nop
inc
push
sbb
int3
int3
inc
push
sbb
int3
push
sbb
int3
int3
int3
sbb
int3
int3
int3
mov
push
int3
int3
int3
imul
or
inc
stc
out
dec
xor
stc
push
std
cmps
push
cmp
repz
das
cmp
repz
repz
fldenv
jne
repz
jg
xchg
popf
cmps
mov
push
clc
cmp
xor
mov
fidivr
jnp
jecxz
in
push
test
cmps
(bad)
out
pop
sub
sti
jbe
sahf
out
sahf
std
add
jns
out
aaa
inc
dec
push
pop
out
sahf
out
jae
xchg
fwait
movs
scas
mov
out
xlat
loope
(bad)
pop
push
gs
out
sahf
outs
jns
lea
jns
mov
leave
rol
jns
out
out
sti
enter
add
push
or
cmp
jbe
aaa
xor
in
outs
popf
or
aaa
jns
repnz
nop
xor
pop
data16
mov
and
mov
ja
jae
cmp
mov
fisttp
sub
out
mov
pop
sub
mov
add
adc
fwait
cmp
pop
clc
das
push
push
cmp
mov
push
add
xchg
call
mov
sub
stos
mov
outs
sbb
adc
outs
adc
pop
iret
dec
pushf
inc
or
das
xchg
jge
in
xchg
jae
jb
jo
dec
sub
fwait
imul
out
ja
adc
nop
mov
mov
xchg
mov
adc
movs
lock
add
pop
adc
push
ds
pop
add
call
dec
rol
add
jo
pop
push
cwde
and
cmp
popa
loopne
sub
and
jmp
adc
and
clc
add
add
rol
test
dec
dec
add
push
add
and
adc
test
sub
adc
pop
test
xchg
shl
ds
(bad)
ret
inc
push
or
cmp
and
add
push
arpl
dec
xchg
pop
and
sub
daa
adc
inc
or
and
lods
pop
inc
sub
ret
outs
jo
add
add
xor
cmp
mov
loopne
cmps
or
mov
and
out
aas
push
(bad)
fst
push
mov
mov
and
or
jmp
pop
dec
lock
sar
es
faddp
jl
ins
jg
push
push
add
cmp
(bad)
and
ret
adc
(bad)
or
js
icebp
ins
pop
pop
pop
shl
xlat
test
sbb
sbb
shr
add
(bad)
outs
imul
lea
movs
add
outs
enter
int3
imul
or
add
push
or
or
leave
and
jno
in
mov
cmp
test
cmp
outs
mov
popa
adc
mov
mov
rcl
mov
jle
ds
xchg
dec
ret
mov
ror
mov
inc
or
add
and
outs
inc
mov
mov
sbb
push
loop
jb
adc
push
std
sub
les
out
mov
js
push
push
push
cmp
add
adc
and
jecxz
test
aaa
adc
enter
repz
mov
push
out
mov
movs
mov
loopne
iret
int
js
jle
mov
pop
or
das
adc
arpl
pop
adc
sbb
xor
jne
les
retf
outs
and
and
out
add
or
scas
scas
add
jnp
or
xor
iret
mov
mov
sbb
adc
sbb
imul
movzx
jmp
lock
fsubr
addr16
sbb
mov
push
aaa
mov
inc
in
nop
lds
nop
fidivr
call
test
inc
jo
or
or
loope
ret
popf
imul
fstp
inc
je
ja
sbb
and
cmp
shl
and
pop
sbb
pop
and
jo
or
and
mov
(bad)
aaa
mov
xchg
ins
fld
push
xor
ja
cmp
xchg
mov
or
cmps
xchg
jmp
in
inc
sub
cmps
out
fmul
(bad)
xchg
push
or
cmps
adc
xor
pusha
dec
dec
and
and
pusha
cld
out
cmp
xor
inc
ja
or
inc
or
fst
jne
adc
jmp
mov
sub
mov
aaa
xchg
nop
mov
cmps
adc
push
(bad)
fcom
adc
fadd
or
mov
jae
ror
or
sub
or
xor
cmp
sbb
or
adc
and
shl
mov
lock
dec
lds
jb
mov
cmp
test
loope
sbb
cld
xor
mov
sti
js
(bad)
fadd
fistp
loopne
and
xchg
inc
adc
or
mov
mov
or
or
mov
add
adc
imul
mov
mov
mov
pusha
leave
and
add
mov
js
add
ja
repz
or
stos
mov
stc
pop
test
cmps
jmp
daa
mov
ror
pop
xlat
inc
dec
and
push
or
in
sbb
push
jo
sub
pop
or
aas
mov
sbb
mov
les
jb
and
add
and
add
lea
test
mov
mov
xchg
lock
call
jne
add
lock
rcr
mov
cmp
adc
dec
out
adc
adc
or
rcl
gs
fist
(bad)
int
dec
mov
daa
cmove
pop
sub
das
xchg
(bad)
add
add
sub
sbb
push
outs
push
jb
lea
cmp
ins
(bad)
jp
add
cmp
mov
iret
sub
mov
jo
ins
clc
sub
sbb
cmp
inc
lods
push
or
adc
or
push
mov
xor
dec
xor
das
and
xor
sub
push
rcr
mov
cld
and
xchg
adc
sbb
add
cmps
adc
adc
add
jae
xor
mov
jo
(bad)
add
or
repz
or
adc
sbb
nop
xchg
xlat
cmp
sub
mov
sbb
sbb
daa
pop
adc
nop
xor
jns
lock
call
addr16
xlat
shl
cmp
inc
sbb
mov
mov
xchg
pop
shl
jbe
imul
jmp
sbb
(bad)
dec
arpl
sti
pop
xlat
xor
push
or
rcl
push
in
(bad)
(bad)
mov
cmp
cmp
in
call
sub
call
es
or
mov
add
add
daa
sub
cmps
pushf
adc
push
add
das
sub
test
mov
and
pusha
ja
push
fs
repnz
cmp
enter
mov
lahf
pop
(bad)
es
pop
mov
jmp
dec
les
clc
adc
scas
iret
mov
mov
adc
cmc
sub
sti
xor
(bad)
imul
sbb
mov
inc
leave
or
mov
xor
inc
bound
dec
sbb
in
in
sbb
xor
dec
adc
cmps
adc
dec
jg
mov
adc
test
mov
pop
daa
adc
add
ret
push
jmp
or
ret
inc
sbb
leave
in
ja
lea
aad
les
pop
or
inc
sti
sbb
adc
and
or
iret
xlat
lods
add
sbb
ror
mov
mov
jg
fld
in
(bad)
fistp
inc
xor
pop
jb
pop
or
nop
out
pop
sbb
and
sbb
adc
push
and
inc
ja
adc
add
imul
mov
adc
add
leave
xchg
push
test
inc
push
and
inc
sbb
and
cmp
jnp
outs
std
mov
pop
jnp
mov
int
ror
mov
push
or
sbb
ja
sbb
ins
add
add
xchg
add
add
dec
pop
and
push
jo
es
inc
dec
adc
sub
xchg
and
sub
in
pop
add
ror
std
in
sbb
psubw
dec
je
push
and
adc
mov
inc
cmp
ja
and
ret
and
xor
add
scas
push
lds
inc
in
push
add
call
xchg
aad
add
mov
jge
push
push
sub
jne
adc
adc
adc
das
push
sub
push
into
cmps
das
das
jecxz
dec
fwait
pmaxsw
xchg
jns
pusha
mov
les
pop
popa
jmp
push
sub
lods
sub
xchg
or
jae
ret
popf
mov
hlt
or
sbb
lock
ret
or
out
fsubr
hlt
and
pop
cmp
scas
rcl
aam
in
fisttp
and
aas
call
lock
and
inc
lock
dec
sbb
jne
jmp
mov
jle
rcl
in
and
mov
add
add
out
outs
cmp
(bad)
push
(bad)
pop
cs
mov
adc
sbb
or
lock
and
jb
out
fist
and
add
or
pop
adc
inc
xchg
iret
push
inc
aaa
add
ret
dec
add
dec
add
imul
xor
loope
sbb
push
mov
neg
sbb
xor
jo
cmp
adc
mov
(bad)
pop
bound
ret
push
(bad)
pop
pop
add
jg
daa
jmp
push
adc
sbb
jl
xchg
adc
out
das
inc
test
mov
xor
dec
xor
sub
nop
mov
cld
rcr
lock
fsubr
xchg
hlt
mov
adc
les
stos
push
add
call
movs
or
sbb
and
bound
imul
sub
adc
daa
fldcw
sbb
inc
pop
sbb
mov
push
or
nop
pop
push
sbb
inc
mov
icebp
adc
push
push
popf
pavgb
inc
test
pushf
(bad)
sbb
adc
sub
mov
sub
fsubr
inc
imul
or
push
(bad)
mov
pop
add
stc
leave
adc
or
mov
pop
cld
mov
sub
or
fmul
sub
loopne
mov
and
loopne
cmc
js
fstp
fsubr
call
add
icebp
inc
mov
(bad)
les
(bad)
in
mov
inc
enter
fadd
loopne
scas
and
mov
sbb
cld
lods
and
jne
addr16
mov
sar
test
pusha
sub
mov
sub
lods
nop
push
or
mov
xchg
es
mov
sbb
or
pop
adc
shr
bound
jecxz
xchg
cmp
sbb
adc
mov
sbb
and
adc
cmps
mov
sub
test
call
adc
cs
das
add
pop
xor
ja
push
jb
and
fwait
jbe
push
pop
jne
mov
dec
jae
gs
in
xchg
das
inc
push
adc
push
adc
(bad)
cdq
dec
es
invd
cdq
fs
repnz
and
and
movs
jo
leave
or
outs
xchg
test
fs
inc
push
adc
jle
cwde
mov
mov
jp
add
test
lock
ins
pop
addr16
push
sub
sbb
push
pop
xor
enter
push
jmp
xchg
xchg
xchg
add
outs
sbb
stos
push
push
push
xchg
(bad)
xor
dec
shl
add
or
mov
xor
and
ja
add
scas
sahf
emms
inc
es
fdiv
add
and
dec
xor
inc
push
dec
adc
iret
xor
add
iret
add
ss
mov
ss
inc
dec
add
inc
inc
rcl
sbb
das
rol
add
ins
push
inc
test
sbb
pop
adc
mov
cmps
lahf
push
push
push
ret
movs
adc
cmp
movs
adc
fs
fld
and
adc
mov
test
mov
cld
add
cmp
aaa
cmp
call
and
mov
(bad)
je
push
add
inc
sbb
mov
dec
mov
ret
out
ret
pusha
jmp
or
mov
hlt
add
mov
add
lea
loop
mov
(bad)
out
push
xor
or
sub
and
mov
je
mov
ins
mov
sbb
push
addr16
add
lock
cmp
daa
adc
inc
les
aam
fdivr
sbb
iret
mov
add
fldenv
ror
push
push
fsubr
add
push
add
loopne
jmp
inc
out
or
daa
adc
push
(bad)
sub
in
mov
dec
clc
mov
mov
(bad)
pop
(bad)
and
or
inc
cmp
cmp
push
enter
xor
jo
call
daa
std
mov
loopne
clc
ins
icebp
add
sub
push
aam
mov
cmp
add
add
xor
cmp
sbb
in
in
out
test
test
in
mov
xor
out
and
fcom
cmp
stos
inc
jg
fmul
adc
adc
mov
aas
adc
and
rol
lods
repz
lods
sub
aad
clc
aas
xchg
add
out
sbb
add
inc
das
in
jo
xlat
js
ror
inc
or
or
push
test
inc
inc
xor
cdq
dec
inc
or
std
movs
test
test
sbb
(bad)
hlt
jb
mov
sub
pop
dec
inc
scas
adc
dec
cs
int
inc
mov
inc
sbb
push
inc
iret
pop
test
fmul
sub
pushf
and
mov
push
push
shl
pop
inc
(bad)
or
cmp
sub
fs
add
iret
(bad)
imul
ja
push
imul
or
sub
dec
das
shl
arpl
push
je
out
(bad)
sbb
inc
jne
nop
stos
(bad)
cld
mov
test
dec
daa
adc
and
dec
xlat
and
push
jge
loopne
cmp
push
test
push
scas
push
push
adc
push
adc
test
push
aad
jmp
push
mov
pop
pusha
mov
xchg
test
adc
sbb
push
jo
xchg
pushf
mov
jg
push
(bad)
mov
cmp
cmc
adc
int3
les
rcr
adc
aas
add
lea
or
mov
leave
aad
and
and
adc
sub
pop
or
or
xchg
cmp
dec
and
mov
mov
xor
adc
stos
and
xor
les
dec
pop
add
sub
sbb
pop
pop
or
add
or
or
adc
add
scas
or
repnz
or
call
mov
rol
sbb
inc
lock
add
inc
aam
inc
and
inc
mov
fidivr
ins
add
(bad)
dec
sbb
arpl
sbb
add
clc
or
test
dec
or
cmp
sub
pop
sub
loope
push
pop
dec
pop
in
rcl
push
push
call
sbb
mov
inc
scas
loop
sbb
inc
or
add
loopne
add
scas
adc
xlat
add
int
icebp
mov
mov
aam
add
jmp
mov
es
sub
mov
mov
or
outs
jo
sbb
ss
fdivr
adc
jbe
add
fmul
outs
adc
nop
aam
aad
es
or
(bad)
mov
lea
stos
test
adc
aad
test
loop
inc
outs
test
les
add
and
dec
ret
adc
adc
(bad)
push
les
sbb
test
xchg
dec
sbb
xchg
mov
push
fstp
or
xchg
pop
inc
pop
sbb
nop
xor
or
(bad)
shl
pop
enter
xor
and
jnp
push
ret
and
and
mov
push
leave
mov
push
cmp
leave
inc
sub
or
push
mov
ins
mov
mov
push
cli
push
clc
mov
sub
add
and
jne
fist
or
mov
or
mov
push
data16
inc
mov
adc
sub
xor
and
movs
mov
xlat
push
sbb
inc
fadd
scas
add
int3
adc
ret
test
pop
cmps
or
mov
ret
test
xor
inc
popf
inc
push
or
add
sub
je
test
loopne
adc
mov
aaa
xchg
mov
jl
or
adc
nop
out
xor
push
dec
inc
lods
outs
loop
xchg
adc
xchg
sub
dec
ja
or
push
sub
stos
adc
sub
jns
mov
pushf
push
iret
inc
mov
in
dec
ja
add
and
mov
or
push
xlat
or
retf
adc
mov
out
add
xlat
enter
xor
and
push
add
je
cmps
test
xlat
sub
add
jns
dec
pusha
ins
mov
cmp
leave
jmp
mov
dec
dec
outs
jmp
repz
dec
sub
ret
imul
and
adc
sub
adc
sbb
mov
out
or
dec
lock
inc
add
out
popa
popa
cmp
pop
outs
jg
xor
jl
lock
pop
js
cmps
xor
cmp
push
xor
outs
push
inc
stos
lea
sub
pop
sbb
adc
xor
mov
adc
jno
jne
add
add
dec
movs
push
idiv
pop
xchg
addr16
pusha
aam
loope
or
sbb
add
push
ret
pop
in
aas
jg
pop
xchg
adc
xor
push
int3
lds
xor
dec
or
inc
xor
push
ss
hlt
inc
cmps
mov
repnz
ffreep
pop
and
mov
shl
push
pop
popf
fucomi
loopne
lock
pop
movd
stos
push
jl
cmc
fmulp
adc
push
and
sbb
push
nop
enter
mov
sbb
cmps
and
cmp
or
or
lods
loopne
mov
mov
push
movs
mov
add
pop
data16
pop
lds
cmp
fisttp
jae
outs
xlat
jne
jne
pop
outs
scas
in
shl
mov
pop
daa
jmp
adc
nop
and
inc
push
lods
fwait
cwde
add
fwait
xchg
ror
outs
cmps
sbb
and
int
jmp
xor
add
inc
test
enter
in
pop
push
gs
pop
and
sbb
fild
std
sbb
add
imul
shl
cmp
add
pop
enter
or
dec
les
ret
mov
sub
pop
js
fisttp
cmp
out
and
outs
js
mov
mov
or
ror
mov
ins
test
dec
cmp
dec
jl
inc
cmp
xor
lahf
in
sti
jg
pop
pop
adc
mov
mov
mov
or
add
push
push
push
in
dec
outs
push
lock
in
out
and
enter
pop
jns
dec
ins
or
inc
adc
aaa
pop
sub
or
mov
push
mov
xor
sub
add
mov
retf
dec
jp
jne
sub
call
pop
test
hlt
fs
sbb
cs
add
jno
xchg
(bad)
mov
ret
sbb
data16
sub
sub
and
repz
push
xor
bound
fstp
data16
jl
loope
cmp
cmp
inc
inc
call
dec
adc
jecxz
xor
ror
ror
xchg
mov
cmp
cmp
jne
lock
inc
dec
jne
push
mov
push
pop
sub
pop
sub
jl
test
adc
dec
add
(bad)
or
pusha
out
inc
dec
jno
into
inc
mov
je
and
dec
or
push
adc
arpl
push
add
mov
test
push
pop
icebp
sbb
aas
(bad)
je
jb
xor
mov
cmovns
push
sti
out
imul
inc
pop
inc
add
xchg
adc
push
push
xor
add
mov
push
push
data16
push
test
das
(bad)
movs
add
jae
push
fmulp
jnp
add
jae
push
pop
and
pop
pop
(bad)
add
daa
test
and
adc
xchg
mov
imul
or
inc
or
scas
mov
loopne
out
into
sub
mov
sub
pop
cmp
mov
push
ret
cmp
punpckldq
loope
bound
push
dec
add
in
movs
arpl
mov
push
mov
sbb
ds
or
test
gs
nop
inc
aaa
cdq
cmp
cmp
inc
jo
inc
inc
xchg
add
movs
add
adc
ret
imul
arpl
lods
ret
push
std
add
sahf
mov
add
pop
shl
outs
jae
cmp
dec
cmp
aas
dec
in
outs
jb
dec
adc
push
jae
sub
lahf
adc
inc
outs
fs
imul
inc
mov
xor
pop
rol
call
lock
or
add
add
jae
icebp
aaa
inc
pop
movs
jnp
call
inc
or
mov
add
inc
out
js
lea
loop
inc
cs
(bad)
cmp
xchg
sub
out
popf
mov
mov
cmp
sbb
or
inc
dec
or
xchg
mov
pop
dec
inc
jnp
test
xor
test
push
push
dec
stos
mov
sub
out
ror
add
lods
and
xchg
push
sbb
adc
cmp
scas
mov
mov
out
inc
xchg
pusha
in
pusha
xchg
(bad)
add
xor
xchg
lock
sbb
mov
add
fs
adc
adc
add
popa
out
add
push
outs
pop
xchg
inc
cmp
add
popa
outs
out
movs
sub
push
out
lods
inc
bound
je
adc
rol
das
or
ficomp
in
scas
sbb
je
push
add
ds
sub
mov
xlat
cmps
push
scas
inc
adc
cmps
or
push
xlat
cs
sub
test
dec
test
fadd
push
sub
ret
mov
lahf
push
or
dec
jae
add
jle
dec
add
push
sbb
test
add
or
imul
add
ins
cmp
and
sbb
outs
inc
add
push
jmp
loopne
fld
aas
pop
inc
aas
pop
sub
test
sbb
push
inc
sub
pop
and
cs
aaa
inc
sub
add
jg
pop
pop
dec
cmps
ja
or
mov
loopne
pop
iret
adc
push
imul
imul
bound
xor
mov
popa
pop
out
ins
add
inc
jo
jg
daa
mov
add
pop
xchg
sbb
bound
jns
ja
inc
mov
add
pop
inc
xchg
imul
mov
aas
or
push
ror
inc
push
sub
pusha
stos
jg
inc
lahf
fsub
or
dec
inc
dec
adc
add
push
movs
adc
xor
jo
dec
xor
push
call
arpl
dec
mov
retf
shl
or
add
xor
xchg
popa
lahf
cld
push
mov
jmp
add
je
adc
dec
aaa
and
adc
jns
pop
loope
or
inc
push
xchg
popa
ror
pop
fs
adc
data16
mov
enter
jne
pop
dec
ins
pop
enter
sub
jnp
inc
or
or
or
int
ins
inc
mov
out
and
jae
sti
xor
push
xor
inc
sub
add
add
daa
lock
das
add
adc
pop
xor
cmp
cs
das
pop
xchg
imul
sbb
add
push
arpl
inc
hlt
ja
jae
add
xchg
mov
xchg
retf
push
das
mov
test
mov
pop
or
stos
mov
iret
xor
add
cli
cmp
add
gs
ja
dec
les
dec
cli
lahf
je
mov
mov
mov
ror
int3
sub
loopne
jge
shl
add
cmc
retf
outs
jge
dec
adc
outs
and
and
jo
pop
retw
jae
cmps
inc
mov
sbb
dec
jle
mov
dec
cmp
xor
shl
adc
not
sub
mov
push
aas
push
add
not
jae
pop
push
add
xor
mov
xchg
inc
imul
lahf
scas
jge
inc
icebp
retf
pop
mov
xor
pop
or
sbb
dec
movs
add
popf
mov
addr16
xlat
or
cmps
sub
jbe
push
pop
push
movs
lahf
xlat
popf
add
pop
push
ins
xor
data16
add
cmps
aam
jb
imul
xchg
push
addps
jo
pusha
fs
pop
add
pop
sub
push
add
lock
adc
inc
fwait
idiv
push
jb
popa
ins
dec
jne
bound
add
push
and
adc
jbe
fistp
ror
push
push
popa
fild
push
xor
push
inc
int
stc
in
xor
gs
movs
dec
adc
jae
arpl
dec
clc
add
adc
inc
ins
popa
sub
jmp
aam
sbb
add
lods
jae
or
dec
and
push
adc
jae
jmp
jne
add
aas
adc
fs
push
dec
adc
push
jns
movs
push
pop
or
mov
add
and
sub
dec
scas
push
movs
xchg
mov
dec
adc
add
bound
dec
push
push
mov
cmp
lods
call
mov
shl
bswap
leave
call
mov
sub
dec
sub
mov
in
add
add
fimul
ja
dec
or
mov
sahf
pop
dec
jo
adc
xcrypt-cfb
cmps
loope
lds
or
jbe
das
jg
fistp
add
jae
je
inc
inc
inc
inc
push
sub
jne
xchg
pop
inc
lahf
xchg
fdivr
and
pop
iret
cmp
inc
sub
add
cmp
test
movs
inc
push
mov
(bad)
jle
xchg
push
or
mov
adc
adc
adc
retf
xor
mov
pusha
aam
or
adc
add
mov
push
pop
mov
push
push
add
ja
cmp
sbb
je
mov
movs
xor
inc
jnp
adc
and
xchg
push
ja
cs
ja
inc
bound
or
ins
pop
adc
pop
cmp
cmp
or
adc
mov
popa
popf
pop
ins
sub
test
inc
scas
pop
pusha
enter
iret
scas
mov
xchg
mov
push
aas
sbb
aam
addr16
rol
jmp
data16
shl
aaa
(bad)
xchg
cmps
jno
dec
mov
and
mov
or
adc
popf
ss
ss
pop
ret
aas
push
push
xchg
test
adc
mov
or
pop
or
pushf
pop
test
inc
xchg
out
adc
not
adc
push
outs
mov
push
(bad)
das
retf
jle
mov
inc
test
jne
adc
xchg
pop
or
nop
nop
push
inc
adc
vunpckhps
call
rcl
stos
into
push
mov
inc
add
fbld
inc
and
movzx
add
lea
mov
and
loopne
adc
sub
and
sub
and
or
inc
outs
add
test
jg
loopne
adc
mov
add
adc
repnz
jl
jle
and
ret
loopne
inc
mov
out
jmp
stc
arpl
je
dec
jg
je
sub
test
fisttp
or
add
sbb
daa
or
je
sbb
add
push
or
push
test
sub
push
pop
and
rol
push
cmp
add
pusha
hlt
jne
mov
clc
fwait
loope
test
add
adc
leave
jbe
sub
ins
xchg
pusha
das
inc
add
adc
xchg
je
and
fdivp
stc
jge
fsub
adc
mov
pop
or
inc
jmp
mov
sub
int
mov
inc
add
xor
mov
lea
add
hlt
sti
xor
push
pop
add
adc
jecxz
int3
and
data16
popa
data16
loope
cmps
je
inc
(bad)
into
xor
inc
sar
and
sbb
inc
adc
cmovs
sub
rcr
gs
jge
dec
mov
sub
and
ja
sub
jg
lahf
gs
jno
rol
dec
adc
jp
(bad)
mov
inc
shl
sahf
or
not
sbb
sub
hlt
mov
jge
dec
xor
xor
rcr
jl
mov
adc
aaa
jle
xchg
jbe
fcom
test
push
cmp
push
je
cmc
in
xor
dec
and
and
mov
mov
jmp
dec
jecxz
mov
push
hlt
push
popa
jl
or
cli
add
(bad)
jg
stc
inc
jge
mov
mov
mov
pop
test
or
mov
ficomp
pop
mov
not
or
or
and
push
clc
jmp
cwde
and
je
cdq
mov
ins
and
xchg
(bad)
jmp
cmp
mov
xchg
or
call
sbb
mov
cmp
dec
add
or
add
popa
fcom
jle
fimul
dec
(bad)
xor
push
(bad)
and
pop
ds
jne
or
sar
jle
pop
jne
mov
pop
mov
push
stc
ret
mov
mov
inc
adc
pop
jl
sbb
cld
sti
fistp
sub
inc
sbb
inc
fadd
inc
(bad)
xor
dec
inc
mov
jle
mov
add
sar
lea
sti
xlat
mov
movzx
add
or
inc
aas
mov
clc
push
pop
adc
rol
cmp
dec
ret
in
movs
xchg
or
sbb
or
add
pop
fisttp
inc
pushf
mov
sbb
inc
call
jmp
loopne
inc
hlt
ins
push
adc
or
ins
jo
or
add
gs
or
adc
mov
pusha
pusha
sub
inc
aas
retf
xchg
in
es
mov
mov
enter
mov
cmc
out
add
mov
cdq
xor
sub
add
inc
pop
ret
or
cmp
add
sub
xchg
jo
leave
(bad)
jmp
add
jmp
(bad)
push
sar
xor
xchg
jmp
js
cmp
mov
scas
pop
adc
add
sub
stos
cld
add
jmp
inc
sbb
test
mov
dec
cmp
add
add
mov
cdq
in
fwait
not
cmp
sbb
add
sbb
sub
cld
mov
js
push
movs
mov
xor
lock
lea
scas
jne
popf
dec
xchg
push
fimul
rol
xor
mov
add
(bad)
push
inc
sbb
fcmovbe
mov
dec
mov
jne
mov
mov
mov
push
jge
fadd
(bad)
pop
and
mov
fwait
aas
adc
or
je
inc
in
inc
push
xchg
rcl
rcl
mov
dec
mov
sub
fdivr
add
add
jne
nop
add
and
ins
sub
and
int3
dec
inc
xchg
sub
jbe
in
idiv
sar
sub
dec
cmp
mov
fdiv
push
jne
gs
data16
je
pop
cmp
add
test
push
out
cmp
push
ja
add
sbb
(bad)
jo
into
jno
cmp
add
sbb
fld
sub
je
adc
mov
pop
cmp
push
(bad)
push
call
es
cdq
add
test
loope
pop
jo
cld
add
pop
jne
inc
xchg
loope
aam
xlat
adc
sbb
cmp
imul
adc
pop
in
and
imul
das
inc
and
inc
pop
pop
adc
inc
int
add
push
je
test
clc
(bad)
in
add
mov
inc
push
push
jne
cwde
clc
xor
hlt
jmp
test
push
jp
mov
repz
jne
adc
test
jne
mov
add
or
mov
and
and
or
cmp
add
lock
rol
je
pop
jnp
xchg
fist
shl
jne
je
daa
or
cmc
in
or
lea
das
mov
add
jbe
push
aas
adc
(bad)
push
fidiv
repnz
mov
add
dec
out
rol
shl
stc
or
hlt
jge
mov
mov
clc
add
add
jmp
jmp
push
jl
adc
mov
pop
inc
int
push
fs
and
(bad)
call
cmp
inc
test
inc
sbb
xor
adc
pusha
nop
push
push
push
push
push
push
sbb
movs
add
push
sbb
sbb
mov
pop
mov
inc
or
push
jg
je
add
cmp
adc
je
cmps
popf
mov
jb
push
clc
dec
jmp
lods
push
outs
clc
inc
inc
clc
mov
and
and
mov
push
cmps
jmp
push
jle
movs
pop
aas
pop
shl
js
or
add
ins
push
ins
iret
mov
fwait
push
pop
and
lea
das
and
inc
lods
jmp
idiv
adc
and
or
dec
cld
popa
pop
call
push
je
addr16
xchg
cli
push
jg
push
sahf
mov
dec
pop
jmp
add
push
dec
jg
sar
dec
and
ja
xlat
mov
out
add
xor
ret
add
(bad)
add
cs
test
int3
cdq
std
jnp
push
xchg
and
jne
data16
xchg
push
xor
xchg
mov
push
jb
inc
fld
mov
xchg
repnz
pop
sbb
pop
and
retf
push
inc
aam
js
dec
push
pop
mov
loopne
in
jg
inc
add
or
ret
mov
aam
shl
rcr
out
mov
in
pop
sub
jne
jmp
cmp
je
ja
outs
adc
popa
enter
mul
push
mov
test
cmps
cmc
sub
test
mov
jp
add
and
mov
test
push
dec
test
loope
add
enter
fldenv
sbb
sbb
jb
adc
fnsave
adc
inc
adc
lods
cmps
jbe
pusha
push
jbe
loop
pop
ror
dec
and
jmp
ror
push
inc
or
fidiv
sti
jl
hlt
sub
ret
mov
shr
sbb
xchg
add
add
sub
cmp
xlat
mov
addr16
jp
pop
pop
xor
mov
js
out
push
jne
sub
push
out
loopne
cmp
fldcw
pop
jne
fs
loope
or
fmulp
cmp
inc
xchg
jle
(bad)
lock
mov
rol
jmp
out
adc
mov
es
xor
into
mov
stos
pop
daa
adc
div
and
mov
push
cs
shl
or
jne
sub
xchg
dec
mov
ds
cmp
inc
loop
add
inc
or
enter
iret
pushf
xor
xor
lahf
push
xor
mov
push
adc
add
pop
lods
or
xchg
and
jmp
pop
ret
mov
jmp
sbb
jmp
push
addr16
pop
es
sar
add
cwde
(bad)
rol
mov
jb
call
dec
pusha
or
cmp
test
adc
add
sub
or
jge
push
mov
pusha
(bad)
nop
dec
lods
pop
clc
(bad)
je
js
out
int
js
xchg
add
pop
cdq
ret
push
(bad)
jne
retf
sub
pop
aam
(bad)
xor
mov
addr16
or
call
jne
cmps
push
ror
sub
add
mov
and
call
adc
pusha
jne
popf
adc
or
jne
aas
mov
mov
scas
sbb
xor
test
mov
sub
sar
xchg
loopne
push
pop
pop
xor
or
test
xchg
in
sbb
xchg
cli
push
neg
lock
ja
movs
mov
test
mov
pop
nop
cmps
or
pop
pop
fcmovne
jle
pop
or
pop
add
cmp
sbb
int3
ss
add
or
push
loop
and
add
or
push
sub
ins
push
cmp
je
mov
mov
mov
push
lock
je
jg
push
jne
jmp
adc
call
sub
call
push
enter
or
lea
cmp
push
jmp
daa
add
and
sbb
jmp
neg
mov
add
mov
add
adc
fnstcw
mov
daa
sbb
les
sbb
push
aad
cmps
mov
add
inc
sbb
add
fdivr
or
stos
aas
or
mulps
push
mov
pop
jne
pop
stos
inc
call
pop
jge
div
jne
inc
or
shr
mov
push
fadd
xchg
outs
mov
xor
or
aam
push
push
cmp
inc
add
in
adc
pop
inc
inc
add
inc
cmp
shr
pop
or
mov
pushf
adc
loopne
shl
mov
cld
pop
jge
ret
pop
add
cmp
jne
cmp
sbb
mov
add
and
mov
jmp
inc
shl
cmp
jb
or
pop
or
ror
jb
pop
loop
(bad)
jne
add
add
pop
arpl
ds
clc
cmp
mov
imul
push
dec
adc
mov
inc
push
inc
pop
sbb
sti
nop
sbb
push
sbb
mov
add
jnp
and
outs
jp
mov
push
pop
jp
aas
dec
add
in
add
retf
sbb
sbb
or
jbe
dec
add
add
bound
adc
inc
mov
shr
and
xor
add
pop
add
out
xor
(bad)
jno
ret
push
leave
cmp
into
inc
pop
jae
push
jecxz
popa
call
mov
inc
test
mov
clc
shr
out
out
retf
retf
cmps
div
(bad)
jne
inc
sub
fadd
adc
inc
or
sbb
inc
sbb
inc
stos
and
pushf
popa
inc
ffreep
inc
fisttp
adc
nop
push
adc
sbb
jne
jmp
cmp
inc
stos
and
xchg
push
jbe
or
push
push
sub
xchg
adc
int3
daa
ins
mov
lods
ins
sti
int
xor
push
pusha
jb
inc
xor
cmp
call
pop
mov
pop
je
add
stos
pop
cmp
cmps
jle
push
fadd
ror
or
xor
fcomp
cld
xor
mov
movs
sar
xchg
or
fsub
aad
mov
retf
inc
mov
add
je
push
cmp
stos
add
mov
test
cmp
shl
add
int3
hlt
add
sub
mov
and
mov
adc
adc
sub
enter
int
adc
or
mov
and
loope
pop
jo
rcr
mov
jmp
(bad)
add
iret
and
iret
loope
or
sbb
push
shl
push
sbb
pusha
pop
lock
push
fcom
push
iret
leave
ret
imul
push
inc
or
push
jbe
sub
pop
add
add
cmp
push
or
iret
sbb
sub
sub
jno
adc
sub
loope
xlat
adc
fnstenv
xchg
out
nop
xchg
or
add
or
pop
jg
or
push
xor
add
out
mov
cmp
sbb
push
aam
div
out
mov
hlt
jbe
popa
in
jg
pop
lods
dec
add
or
add
test
mov
mov
or
jo
and
adc
repz
cmp
ins
dec
shr
cs
mov
jge
cwde
sub
jmp
lock
jmp
popa
dec
lods
jmp
shr
xchg
jb
xor
ds
add
mov
pop
sar
adc
retf
push
stos
in
or
dec
dec
in
int
lods
aam
sbb
sub
out
out
xor
dec
inc
aaa
jle
rol
sbb
pop
fst
push
bound
imul
or
jmp
cmc
stos
sbb
mov
das
adc
dec
loop
add
cmp
adc
or
imul
xor
movs
cmp
pop
add
or
xchg
sbb
jmp
jns
jg
cli
pop
test
and
daa
and
and
or
jns
dec
or
inc
add
pop
cmp
add
mov
stc
aas
xchg
outs
add
jg
adc
lods
js
popa
inc
mov
xor
or
mov
leave
add
adc
push
xor
clc
jbe
fisttp
sbb
jg
je
sub
je
or
je
sub
add
push
loopne
and
cs
mov
cmp
or
or
wrmsr
cmps
cmp
mov
addr16
jmp
jge
adc
lds
add
adc
outs
or
or
jne
stos
add
fnstsw
movs
sbb
mov
mov
mov
add
add
mov
imul
push
cli
xchg
sbb
(bad)
jns
jnp
push
xlat
push
jbe
mov
push
fs
xor
add
in
push
xor
loopne
es
add
cmps
inc
or
call
adc
inc
cmp
jg
mov
fistp
jmp
sub
sbb
cmps
clc
(bad)
push
jl
retf
test
push
nop
iret
repz
push
xor
fwait
js
xchg
push
xchg
and
mov
(bad)
adc
sbb
das
pop
sbb
or
xor
nop
or
and
add
push
mov
neg
cmp
loope
ficomp
and
xchg
stos
push
or
lods
mov
jle
jle
cld
cli
je
or
je
div
je
loop
mov
xlat
dec
and
cmc
div
std
pop
stos
test
je
xchg
or
js
jno
lea
push
in
push
dec
dec
jl
ror
push
cmp
scas
neg
fidiv
jb
jmp
sbb
xchg
popa
add
jmp
shl
add
sbb
(bad)
call
sbb
xor
jg
loopne
aam
aam
lock
mov
jmp
les
sar
xor
lods
stos
into
or
add
jge
pop
ret
mov
and
(bad)
xor
and
fimul
daa
xchg
shl
call
pop
fist
dec
in
fadd
fsub
inc
les
rol
add
push
ror
movs
cmp
lea
sub
cmp
test
ret
cmp
jmp
rol
xchg
fwait
mov
mov
bound
mov
mov
pop
cld
sub
sub
cmp
jge
unpcklps
(bad)
jo
mov
imul
sub
adc
(bad)
in
dec
pushf
cmp
jbe
mov
sub
sar
add
mov
dec
jo
mov
sub
sub
xor
lock
or
sbb
inc
and
cld
test
pop
cmp
inc
add
dec
daa
clc
mov
lods
jmp
push
jle
cwde
inc
std
(bad)
imul
jne
push
mov
in
add
cwde
inc
repnz
add
jmp
push
aas
jo
lock
push
mov
sub
jmp
je
or
je
movs
(bad)
fnstsw
inc
(bad)
outs
and
loopne
cmc
fisttp
ret
push
fsub
mov
std
daa
test
inc
sar
and
or
adc
pusha
adc
mov
les
cmps
pop
push
cmp
call
test
nop
mov
rcl
pushf
(bad)
mov
shl
mov
push
aaa
mov
movs
gs
inc
pop
ss
cmp
jb
imul
cdq
psrad
sbb
int3
sub
jmp
cwde
and
jecxz
adc
inc
jo
add
fild
sbb
adc
imul
inc
push
jge
xlat
inc
rol
adc
dec
sub
and
add
dec
and
cmps
test
mov
adc
add
xchg
sub
leave
(bad)
not
jo
dec
or
adc
ret
cmp
imul
pop
jg
push
sub
not
loopne
out
shl
jnp
es
jbe
je
and
call
fmul
or
push
imul
pop
mov
pop
push
fst
and
movs
fidivr
rcl
inc
add
or
(bad)
nop
pop
add
loopne
add
test
xchg
inc
loopne
sahf
aad
pop
mov
inc
sbb
or
inc
push
add
stos
mov
xor
pushf
xchg
add
mov
pop
cmc
in
push
and
test
test
inc
or
or
mov
lock
out
je
nop
mov
cs
xor
mov
into
push
mov
or
jbe
popa
je
pop
cmp
or
js
outs
xchg
adc
add
je
js
sub
cmp
xor
fwait
sub
add
or
das
sar
add
or
and
pop
mov
mov
pushf
ret
ins
dec
shl
mov
push
inc
xchg
sub
push
or
lahf
scas
loopne
inc
jle
xchg
je
cmp
lock
inc
push
lea
push
add
push
jno
or
dec
add
nop
(bad)
mov
sbb
or
dec
cmp
and
sub
jle
cmp
inc
sahf
and
adc
sar
scas
rcr
xchg
sub
lea
add
lea
cld
sbb
and
test
cdq
fiadd
leave
test
jle
(bad)
cmp
sub
push
jg
sub
test
paddsb
sahf
mov
push
jmp
enter
cwde
aad
pop
je
shr
test
cld
test
mov
sub
mov
rol
sub
scas
and
or
add
pusha
cmps
add
cwde
rcl
push
jl
movs
mov
test
popa
inc
sbb
lahf
push
adc
and
pusha
cmps
jnp
ret
mov
xor
(bad)
jae
mov
(bad)
movs
adc
sub
fucomi
sbb
into
add
mov
ret
push
lods
mov
cmp
daa
xor
add
adc
jo
ins
adc
mov
adc
adc
add
lea
movs
inc
xchg
pushf
cmp
sbb
xchg
shl
fs
sbb
inc
xor
test
inc
xor
out
or
pop
or
or
inc
call
jmp
jmp
sbb
lea
or
mov
lahf
not
and
test
lock
or
jne
and
mov
add
and
jg
adc
push
sbb
add
dec
sub
xor
or
ror
or
in
imul
mov
or
hlt
sub
movs
sbb
jge
add
mov
inc
push
sub
rol
in
xor
adc
inc
push
mov
mov
inc
clc
add
xlat
add
xor
sub
push
clc
push
push
pop
inc
sub
dec
push
adc
sbb
or
push
xchg
inc
add
or
mov
pop
sbb
lods
add
jmp
mov
sbb
or
dec
lea
or
cmp
jmp
out
pop
pop
int
push
jle
pop
mov
add
lds
in
add
mov
in
mov
push
jno
adc
loop
mov
xchg
add
cwde
adc
sub
adc
xor
in
add
ror
add
and
mov
inc
sub
add
mov
sub
pop
adc
cmp
(bad)
or
stc
imul
cli
adc
cmc
(bad)
test
jge
je
iret
test
add
imul
call
mov
add
mov
or
push
add
ds
or
es
cmp
(bad)
add
push
add
mov
in
dec
dec
push
push
or
sbb
and
das
mov
enter
and
xor
sub
jmp
repnz
add
mov
or
mov
xlat
xlat
dec
je
pusha
pop
jmp
sbb
adc
add
pop
pop
popa
ret
lea
repz
inc
dec
into
xor
or
add
jg
inc
cmps
adc
add
test
xchg
push
enter
and
and
jb
xor
in
or
jmp
sub
leave
add
mov
xor
sbb
push
add
xor
fild
adc
and
outs
pop
sub
ss
sbb
sub
xchg
adc
add
mov
dec
add
jmp
or
shl
pop
adc
add
ins
mov
lahf
inc
push
sub
imul
add
es
pavgb
pop
adc
cld
cmp
xchg
add
push
outs
sbb
or
ret
mov
imul
cmp
add
add
mov
ss
fistp
add
jge
pextrw
adc
outs
sub
les
je
test
(bad)
(bad)
pop
sbb
cmp
mov
inc
mov
or
or
xchg
adc
adc
push
ds
inc
inc
lods
mov
fistp
and
jmp
stos
jl
aam
or
jmp
cmps
mov
adc
inc
jne
cmp
out
sbb
shl
addr16
push
je
push
into
adc
jne
popf
pop
or
and
pop
test
sar
jmp
add
in
xor
hlt
push
mov
jo
jne
xchg
pop
xor
pop
(bad)
in
jne
add
mov
outs
call
add
mov
jne
push
cmp
lock
das
je
pop
aaa
lea
cmp
push
inc
lds
sahf
aam
xchg
adc
ja
push
jl
aas
shl
or
(bad)
jns
cmp
ja
(bad)
mov
add
pop
ror
lods
bound
xor
push
mov
enter
mov
jo
sub
push
call
je
xchg
inc
sub
sub
pop
and
push
loop
pop
cli
inc
cs
cmp
adc
or
in
das
pop
or
test
push
pop
je
inc
jg
xchg
mov
(bad)
sub
imul
add
repz
fist
xchg
stos
inc
jbe
or
popf
pop
movs
loope
add
jb
stos
loopne
sbb
or
cmp
aaa
jbe
iret
dec
dec
cmp
mov
test
jns
mov
jge
into
out
inc
jbe
jb
pop
mov
sti
aad
dec
sbb
daa
jne
jmp
sbb
jmp
add
push
xlat
popw
adc
sub
in
rcl
xchg
or
test
jle
pusha
inc
jp
mov
and
addr16
pop
sub
iret
mov
iret
mov
ret
je
push
vpcomq
clc
xlat
shl
cvtps2pi
jg
pop
sar
or
les
ret
mov
int3
cdq
pop
aam
pop
les
dec
jb
mov
inc
mov
pop
out
test
out
stos
inc
xor
stos
pop
and
and
add
jnp
jmp
(bad)
and
add
push
stc
sbb
je
or
iret
add
outs
push
sahf
ror
mov
rol
push
daa
xor
jo
es
push
iret
mov
pop
and
dec
call
pop
xchg
push
(bad)
add
adc
aaa
push
sub
mov
inc
adc
mov
jnp
movs
push
jge
push
mov
adc
mov
int
es
fdivr
push
mov
xor
push
inc
mov
mov
push
fwait
pushf
sub
mov
(bad)
adc
pop
(bad)
out
test
hlt
cmp
lds
or
fld
jns
mov
mov
jne
rol
push
and
inc
or
adc
push
sti
add
xor
(bad)
lea
push
push
sbb
mov
mov
lea
push
add
ret
movs
push
aad
mov
(bad)
jmp
aaa
inc
mov
sar
mov
sub
jge
and
dec
add
jmp
sub
mov
push
dec
pop
fadd
sbb
or
dec
xor
in
sub
adc
sahf
xchg
mov
push
addr16
aas
or
jecxz
ss
or
and
and
push
push
hlt
push
adc
inc
movs
add
and
sub
xchg
lock
dec
mov
jmp
adc
int
or
push
or
add
push
cdq
or
hlt
(bad)
fisub
pop
lods
push
aam
loopne
fcomp
mov
push
and
pop
pop
inc
add
xor
loopne
push
int3
inc
fs
fimul
mov
sub
dec
inc
jb
sub
jno
jmp
mov
scas
cs
das
test
adc
pop
pushf
push
call
je
pushf
xlat
mov
mov
xchg
push
test
mov
dec
loopne
push
dec
aam
push
mov
fisttp
loop
(bad)
sub
mov
inc
mov
iret
dec
jmp
add
inc
jle
push
add
or
push
jo
iret
(bad)
jge
adc
sti
lock
ret
shl
mov
jo
push
push
jae
jle
mov
lods
loope
scas
fld
sti
pop
loop
clc
ds
not
push
jne
cmp
adc
jns
pushf
out
js
sub
out
pop
not
ror
lock
push
fldenv
jnp
pushf
je
fldpi
pop
retf
add
xchg
rcr
inc
fstp
jne
leave
jge
shl
(bad)
or
btr
and
adc
fisttp
jne
scas
jmp
les
dec
push
add
rcr
leave
jo
cmp
mov
pushf
out
mov
add
fsub
cld
adc
jge
cld
mov
add
push
cmps
push
push
es
loopne
xchg
aaa
shl
push
sbb
dec
cdq
and
imul
call
dec
lahf
push
mov
ja
mov
scas
(bad)
sahf
or
(bad)
adc
clc
add
push
pushf
jmp
mov
lock
sar
push
pop
lock
dec
popf
pushf
jl
sbb
clc
daa
loope
hlt
rol
scas
pop
jno
xor
pop
mov
lea
push
xlat
add
push
iret
adc
aaa
pop
adc
jg
add
xor
gs
retf
sbb
jae
aas
int
add
xlat
lea
push
int
mov
mov
int
imul
pop
pusha
sub
ret
or
sub
and
xchg
das
or
jmp
xchg
and
test
lods
(bad)
jmp
leave
jl
dec
add
mov
popa
dec
je
stc
push
je
sbb
push
pop
jmp
(bad)
scas
aad
xchg
xchg
fucom
lds
icebp
or
leave
mov
adc
dec
std
gs
xchg
loope
iret
dec
icebp
xor
dec
test
dec
push
in
xchg
add
rol
jae
and
push
imul
pop
call
sub
mov
into
mov
popa
inc
add
jne
add
mov
pop
cmp
lea
aas
mov
sbb
or
add
clc
ins
and
add
pop
into
out
test
movs
lahf
fld
jg
mov
xchg
push
push
imul
arpl
cmp
push
xchg
jg
jmp
loope
jle
aas
or
add
adc
pop
mov
in
cmps
imul
out
add
push
mov
mov
add
xchg
sbb
mov
jno
ja
mov
pop
adc
mov
or
loopne
add
xor
fist
and
sbb
push
clc
sub
dec
sub
or
fisubr
hlt
dec
imul
sahf
test
mov
mov
inc
cld
outs
ss
mov
pushf
(bad)
into
leave
fucompp
fnstsw
test
je
outs
add
cwde
fnstsw
imul
push
or
jle
add
push
test
or
mov
fadd
test
adc
jp
test
adc
xchg
movs
ror
xor
jae
jnp
mov
and
xlat
fist
loopne
sahf
test
adc
sub
inc
and
les
push
jb
pushf
jmp
fs
dec
in
push
out
mov
jle
sub
lock
pop
mov
add
aaa
push
adc
push
or
repnz
es
mov
sub
fadd
ret
call
sbb
mov
adc
(bad)
fidiv
lock
cmc
(bad)
adc
loopne
cmp
in
js
push
inc
cmp
inc
dec
adc
inc
cwde
aas
jecxz
out
xchg
pop
(bad)
xchg
cwde
retf
mov
xchg
fistp
aam
pop
cwde
cwde
xor
fsubr
add
add
add
inc
xor
sub
hlt
add
lea
jecxz
je
das
ins
(bad)
sub
inc
mov
sub
mov
jp
rcl
sbb
mov
sub
mov
add
push
ror
js
test
dec
add
jecxz
xor
jnp
and
call
jl
or
repnz
or
in
jge
or
mov
fisttp
cmp
retf
mov
or
inc
es
cmp
cmp
test
mov
sbb
mov
push
mov
or
dec
cmp
mov
or
sar
mov
xchg
or
lock
movs
lds
jmp
add
in
add
pop
ror
test
add
mov
push
mov
daa
je
dec
mov
sti
add
inc
mov
xor
inc
inc
cmp
pop
inc
jne
dec
xor
dec
push
add
jne
mov
arpl
add
mov
dec
push
(bad)
int
sbb
and
xchg
cld
call
(bad)
(bad)
or
pop
mov
or
stos
or
push
add
pusha
cld
movs
ds
xor
cmp
xor
imul
cmp
repz
sbb
push
sti
test
movs
rol
mov
test
sub
sub
xchg
dec
xor
inc
inc
inc
inc
div
mul
jmp
xor
mov
jmp
add
pop
call
sub
pop
adc
add
jbe
ins
test
test
ss
dec
add
inc
push
inc
sbb
lods
pushf
cwde
int3
or
pop
dec
(bad)
cli
dec
scas
mov
lea
test
in
pop
dec
ins
adc
rcl
xor
push
mov
loop
xchg
movs
jecxz
js
xor
pusha
push
add
arpl
or
jl
cmp
arpl
inc
push
ret
lock
clc
cwde
mov
xor
cmp
jnp
enter
je
sub
xchg
push
xchg
cmp
mov
pop
cmps
jle
jne
mov
je
popf
call
mov
fwait
push
mov
shl
dec
repnz
jne
mov
pmaxub
cmp
pandn
ss
mov
pop
and
mov
add
cmp
rol
fstp
or
push
ffree
fistp
cld
xor
add
pop
or
sar
imul
mov
sysret
lahf
leave
mov
fsubr
(bad)
dec
daa
and
movhps
pop
add
pop
out
fcmovbe
jle
into
shl
jmp
or
pop
jnp
inc
stos
test
pop
push
jmp
call
aaa
ins
inc
sbb
add
or
push
aas
jne
mov
je
xchg
fdiv
adc
and
dec
jmp
xlat
add
pcmpgtw
add
shl
and
adc
lods
sbb
cli
and
or
das
mov
add
mov
push
jae
add
add
push
jne
lea
jne
test
mov
jle
jmp
or
push
call
mov
xchg
mov
xor
daa
xor
xchg
fadd
sub
imul
push
repnz
dec
or
jne
push
ins
sbb
pop
pop
or
push
pop
enter
movs
test
cmp
adc
xchg
push
push
adc
add
adc
ret
pop
out
mov
call
movs
(bad)
shl
sahf
ds
mov
or
jle
dec
outs
stos
ficomp
adc
cmp
and
arpl
stos
add
sbb
clc
mov
or
mov
loopne
cs
jg
cmp
aas
sub
mov
les
add
jecxz
int
cmp
jle
mov
emms
add
add
dec
add
inc
add
pop
mov
int
aad
je
xor
mov
sub
and
pusha
sbb
outs
cmps
(bad)
aas
inc
push
sub
lea
fdivrp
mov
dec
sub
mov
xor
adc
scas
pop
pop
in
sbb
xor
push
mov
cmp
xor
jbe
sub
mov
mov
add
jae
or
sbb
sbb
ret
xchg
je
push
je
ror
add
and
and
(bad)
sti
inc
(bad)
mov
add
or
or
sub
pop
aam
xor
inc
xchg
xor
mov
pop
(bad)
enter
pop
pusha
pop
pop
jge
jl
mov
jne
(bad)
adc
pop
mov
dec
add
jne
push
push
neg
stc
mov
test
into
test
push
ins
sub
push
cmp
ret
inc
retf
add
popa
bound
sldt
add
pop
add
popa
jns
in
dec
and
mov
inc
or
inc
pop
pop
add
sub
add
ret
mov
popa
call
adc
retf
mov
int
dec
lods
loopne
pop
daa
dec
and
cmp
add
lock
aaa
cli
sahf
inc
test
add
imul
push
pop
(bad)
and
div
xor
mov
jmp
stos
out
sbb
pop
xor
xchg
fimul
sbb
les
sbb
dec
sub
test
add
rol
add
or
pusha
jnp
lods
or
es
jnp
je
jae
jne
or
cmp
addr16
jmp
in
mov
cmp
or
mov
mov
or
xor
cld
icebp
sub
out
add
mov
arpl
cmp
add
jnp
adc
jg
and
cmc
ret
sub
mov
and
cmp
dec
sub
and
sub
aaa
or
sub
mov
push
scas
pop
xor
push
pop
popf
imul
aam
add
xchg
lea
pop
pusha
xor
jl
jne
or
or
jnp
sbb
sub
jmp
(bad)
outs
(bad)
push
pop
add
jge
mov
sub
imul
pusha
push
ins
jecxz
add
push
in
cmp
lea
adc
dec
or
inc
sub
mov
xor
inc
int
inc
add
loopne
(bad)
cmp
mov
js
in
jge
mov
and
in
push
adc
dec
and
arpl
mov
mov
sub
mov
mov
jo
pop
sbb
cmp
adc
xor
outs
push
outs
sbb
adc
mov
jmp
add
ins
adc
ins
ds
xchg
sbb
xor
fbstp
inc
enter
jge
or
pushf
loopne
dec
or
cmp
es
and
rol
adc
push
test
push
test
jg
std
add
das
add
push
jno
and
(bad)
add
aad
sub
int3
mov
shl
sbb
aas
sbb
mov
and
sbb
or
lahf
adc
xchg
xchg
and
test
jmp
mov
sbb
or
rcr
inc
mov
sbb
push
lods
sti
mov
jmp
mov
inc
sub
mov
cmp
cmp
and
sub
(bad)
and
loope
mov
adc
loope
ficomp
mov
push
add
sbb
rcr
sub
ja
popf
push
mov
mov
push
inc
js
mov
pop
xchg
or
add
fs
sub
push
pop
cmps
push
and
ds
or
mov
std
dec
and
dec
cmp
add
add
xor
inc
and
dec
dec
jnp
test
xchg
icebp
xor
(bad)
xchg
sub
mov
lock
pop
or
push
arpl
mov
add
sbb
stos
add
mov
mov
shl
push
stc
or
add
add
mov
lock
pop
test
pop
ins
ss
push
push
imul
sub
ficomp
mov
or
jmp
ins
lods
mov
aaa
retf
sbb
jge
inc
jmp
test
xchg
jmp
ins
add
jno
jmp
dec
fst
or
cmp
sti
pop
ret
or
inc
dec
or
jmp
inc
or
sub
and
mov
ds
jmp
dec
or
dec
movs
xor
lds
pop
cmp
ss
les
xchg
mov
std
xor
xchg
pop
jns
push
mov
call
mov
jne
fwait
out
cmp
sbb
adc
or
mov
add
add
pop
into
sbb
ins
and
enter
inc
inc
fsubr
loop
ins
test
mov
sbb
call
in
jno
sbb
shr
inc
mov
scas
outs
push
sbb
adc
jmp
dec
in
mov
(bad)
cmp
fistp
mov
fadd
or
sahf
sub
pop
jl
jbe
add
mov
push
outs
inc
inc
xlat
pop
mov
dec
mov
mov
jp
pushf
mov
inc
adc
sar
inc
jnp
mov
(bad)
push
mov
sub
mov
dec
or
loopne
mov
push
cwde
les
mov
mov
add
and
xor
gs
xor
into
add
test
ror
xor
pop
sbb
mov
inc
mov
sbb
xor
xor
pusha
jno
aas
add
das
aas
add
add
ins
pusha
push
inc
push
jmp
sbb
or
out
add
aas
je
loope
jge
cmp
in
iret
mov
dec
sub
add
pusha
xor
sub
movs
cmp
(bad)
sbb
mov
mov
push
pop
add
jle
fcomp
push
push
ins
loopne
aam
test
ins
xor
adc
in
mov
sbb
mov
loopne
test
ins
adc
add
aam
pusha
pop
sub
push
sbb
push
ja
pop
ret
push
and
inc
enter
clc
out
das
jl
mov
cmp
and
retf
mov
dec
mov
lahf
adc
inc
mov
mov
jbe
xchg
icebp
leave
out
add
sbb
mov
inc
ins
std
cmp
mov
sbb
(bad)
or
sbb
sub
sbb
addr16
add
jge
inc
dec
sub
and
dec
adc
xchg
or
and
pop
xor
xchg
mov
lea
jno
call
stos
(bad)
in
sub
mov
sbb
mov
push
inc
pop
stos
cmp
xchg
mov
jne
test
aam
sub
mov
inc
jecxz
adc
mov
xchg
sub
stos
xor
cmp
adc
sbb
sub
sbb
daa
cmp
push
dec
enter
add
sbb
cmp
jne
lea
lea
jne
xchg
xchg
pop
adc
dec
daa
jnp
adc
push
lock
mov
xor
jge
push
loope
loop
loope
jl
push
(bad)
jecxz
test
pop
push
mov
mov
xchg
push
(bad)
sbb
push
jmp
and
adc
or
inc
iret
shl
in
call
cmp
cmp
jle
dec
int3
(bad)
xlat
icebp
mov
jge
je
icebp
jl
arpl
jne
xor
enter
in
in
xor
xlat
cmp
js
cdq
js
leave
add
dec
sete
ret
test
xor
adc
lea
cmp
xor
test
mov
dec
or
add
ss
fmul
mov
sbb
(bad)
rol
iret
xchg
mul
cmp
push
pop
cwde
dec
cli
fmul
push
jl
jmp
mov
mov
or
test
dec
sub
outs
loope
lock
test
add
loop
inc
xor
lea
imul
jge
inc
movs
push
inc
inc
push
jo
sbb
jl
test
in
or
lock
clc
pop
push
bound
cs
div
ror
jne
jg
dec
sar
cmp
jmp
push
clc
pop
loope
xor
ja
ss
push
(bad)
sub
dec
sbb
call
dec
lea
lock
lods
ins
pushf
test
or
shr
js
push
dec
int3
jge
jnp
push
icebp
mov
mov
push
sub
push
push
jnp
mov
mov
pop
xor
int
lahf
lods
int3
mov
or
loopne
sub
lods
and
ret
mov
jmp
rol
je
or
mov
sub
and
or
or
xor
fcomp
dec
or
jnp
pop
nop
dec
or
pop
(bad)
mov
call
mov
bound
mov
loopne
xor
push
mov
or
out
(bad)
out
fidivr
loop
mov
add
inc
add
fisttp
les
(bad)
push
lea
pusha
xor
push
push
add
push
xor
sbb
cld
push
stos
sbb
or
js
jmp
cmps
and
sbb
aaa
clc
lock
dec
inc
xor
leave
mov
aam
lods
mov
test
dec
pop
cwde
in
shl
pop
retf
pop
push
imul
pop
in
call
hlt
push
rcl
mov
stos
ins
inc
sbb
adc
in
inc
ret
out
xor
mov
and
mov
or
ret
enter
cmp
dec
jp
dec
call
sar
inc
into
push
push
mov
add
outs
mov
lock
and
test
adc
pop
pop
cwde
sbb
push
retf
pop
movs
and
adc
pop
popa
push
adc
test
ficomp
pusha
sub
sub
adc
call
or
dec
add
sub
adc
cmp
cmc
push
mov
sub
xchg
sub
aas
icebp
and
ret
add
lock
push
mov
stos
pop
jno
cdq
adc
pushf
or
xchg
icebp
mov
cmc
adc
mov
std
inc
adc
in
pop
sub
jecxz
mov
push
pop
add
ret
popa
jge
les
fadd
push
add
or
cwde
idiv
aas
and
and
pop
jmp
xor
imul
push
fmulp
dec
add
pop
shr
mov
in
ins
stos
(bad)
or
popa
cmp
or
mov
xor
es
retf
(bad)
xor
ffreep
fadd
leave
movs
sar
pop
fisub
or
shr
add
add
shl
jge
out
sub
xchg
or
mov
pcmpeqw
jmp
nop
add
out
dec
pop
pusha
jne
stc
jne
je
xchg
jmp
inc
cmp
inc
jne
mov
inc
or
or
cmp
dec
cmp
mul
add
push
sbb
and
add
cmp
or
stos
mov
std
mov
add
adc
(bad)
fdiv
push
lock
push
cli
(bad)
movs
push
jne
stos
or
(bad)
imul
add
lods
xor
pop
mov
cwde
cmp
xor
push
lea
ficomp
(bad)
icebp
nop
mov
sub
dec
sahf
shr
pop
cmps
or
movs
loop
dec
push
ret
sub
je
push
cmp
sub
shl
jmp
inc
mov
sbb
adc
out
xor
jmp
xor
pop
or
test
cmovbe
jmp
push
adc
adc
push
aam
pslld
enter
cmp
lea
mov
aad
cmc
or
cmp
xchg
xchg
push
add
clc
jl
jge
std
nop
jp
clc
ficomp
je
push
movs
int
test
aad
in
test
je
jmp
or
adc
sti
xor
add
add
jge
add
push
lods
int3
pusha
mov
mov
fbld
dec
sbb
loopne
or
push
add
push
add
sub
add
push
push
mov
aaa
test
or
mov
sti
push
add
bnd
and
sbb
adc
dec
(bad)
xchg
xor
sub
scas
push
dec
xor
pop
inc
or
or
int
clc
xchg
push
and
jno
or
cld
sbb
dec
and
data16
loopne
add
lea
inc
inc
push
push
adc
adc
jp
sub
outs
outs
jmp
or
movs
or
inc
lock
xchg
rcl
iret
rcr
inc
adc
sbb
clc
and
xor
dec
sbb
loopne
add
sbb
rcr
dec
add
aaa
dec
cdq
pop
add
sbb
inc
add
or
dec
mov
test
cld
into
and
adc
xor
popa
fsubr
push
add
push
loopne
pop
and
ret
pop
or
push
add
sub
rol
sbb
mov
xchg
cmps
mov
fisub
and
mov
repnz
xor
xor
nop
fcom
int
push
inc
out
je
or
dec
inc
mov
dec
push
push
mov
fsubr
pop
js
or
push
jmp
dec
stos
xor
dec
pop
jb
addr16
dec
pop
add
dec
icebp
in
pop
mov
jmp
js
sub
or
or
xchg
sbb
cmps
ret
aaa
in
xchg
xor
sub
ds
or
adc
and
push
fdivr
(bad)
jmp
jb
sub
mov
adc
enter
ja
fs
fsub
sub
add
add
mov
enter
je
cmp
and
pop
cmp
jmp
jo
sub
xchg
pop
sar
adc
and
jmp
mov
dec
inc
sub
add
pushf
or
hlt
into
adc
mov
add
mov
in
fst
pop
cmp
sbb
mov
ret
push
jmp
push
push
jle
cwde
loopne
pop
push
xor
push
dec
pop
mov
jmp
es
push
pop
push
and
es
jb
push
add
cmps
inc
add
and
dec
push
adc
out
mov
lea
stc
push
adc
lea
pop
inc
sbb
ins
add
push
sbb
dec
test
push
inc
inc
push
cmps
in
lock
inc
mov
gs
add
push
test
les
adc
mov
call
cli
mov
push
push
dec
adc
lods
pop
test
nop
mov
cmp
mov
adc
pop
fild
scas
dec
sub
mov
daa
jbe
shr
int3
push
fst
call
jmp
adc
push
inc
push
inc
mov
cs
or
mov
in
cmc
or
mov
cmp
sbb
inc
push
inc
sbb
cmp
lock
pushf
sbb
adc
aad
add
inc
xchg
sbb
lahf
dec
jb
jle
(bad)
adc
sbb
dec
sbb
mov
mov
mov
in
in
adc
xor
add
pop
mov
pop
mov
pushf
les
push
add
mov
sbb
clc
push
mov
xchg
imul
imul
jo
add
push
adc
popa
rcr
jle
ss
mov
fwait
xor
sub
push
sub
(bad)
dec
arpl
jecxz
mov
add
jle
xor
inc
and
sub
push
and
leave
push
cmp
lock
inc
dec
or
sbb
sub
rcl
or
inc
in
aad
repnz
and
or
(bad)
cmps
dec
fcom
mov
inc
cmp
lock
or
adc
jbe
cmovnp
xor
push
je
push
fdivr
and
pop
sbb
sbb
push
dec
add
mov
adc
adc
(bad)
fild
push
mov
pop
inc
or
add
or
ret
es
rcr
sub
push
test
imul
ret
test
cmp
xchg
jge
fs
fsub
ret
clc
xor
inc
xor
fcom
sub
adc
mov
fiadd
inc
clc
sub
int3
ds
adc
xchg
and
cmp
inc
ins
push
je
add
jl
xor
in
mov
add
pop
gs
rcr
stos
cmc
pop
ds
std
stos
xor
and
jmp
adc
add
and
add
push
jbe
push
add
call
sub
cmp
jge
dec
je
in
(bad)
data16
dec
pop
adc
test
repz
jnp
sbb
cmp
pusha
movs
fwait
lods
ds
cmp
es
dec
mov
mov
add
arpl
dec
call
(bad)
dec
pusha
shl
retf
add
sbb
xchg
rol
sti
push
add
sbb
mov
lods
push
sbb
shl
jmp
sub
add
fnstcw
fild
xor
mov
je
xchg
adc
inc
xlat
mov
sar
movs
gs
mov
dec
rol
iret
add
rcl
sub
repz
clc
add
fild
mov
and
add
and
mov
out
lock
aaa
push
sub
mov
scas
jmp
mov
inc
sbb
retf
cmp
cmp
sbb
add
imul
or
adc
mov
and
dec
push
add
or
jmp
jg
dec
or
dec
sub
jmp
out
add
lds
mov
sbb
retf
pop
cmp
pop
jb
or
neg
ins
mov
pop
adc
dec
add
mov
and
sbb
or
call
outs
test
sbb
xchg
add
out
mov
test
push
int
push
or
sub
dec
mov
push
fdivr
pushf
add
jmp
sahf
xchg
rol
ss
pop
cmp
test
push
add
int
ss
pop
push
out
or
adc
loop
dec
clc
call
sbb
jnp
lods
sbb
sbb
xchg
adc
jns
dec
and
pop
test
jl
out
(bad)
outs
sub
out
sbb
xlat
sub
ss
adc
out
loope
sbb
int
adc
icebp
push
aas
div
xchg
ins
cmp
and
iret
(bad)
fwait
in
sbb
shl
push
xchg
jmp
jmp
pop
(bad)
pop
xchg
mov
push
adc
push
inc
mov
call
rcr
add
sub
mov
aam
or
arpl
pop
ret
stc
or
sub
mov
fisttp
adc
inc
mov
lahf
sbb
add
das
push
pop
pusha
dec
stc
push
or
sbb
push
add
dec
nop
retf
call
adc
push
test
mov
stos
data16
lea
inc
enter
(bad)
or
cmp
or
sub
push
dec
sub
xor
dec
xchg
or
dec
ficomp
sub
dec
jl
jg
pop
push
inc
pop
adc
sub
dec
or
add
inc
sub
hlt
repz
push
adc
and
iret
push
sbb
cmp
fmul
cdq
paddusw
cmp
pop
or
movs
add
dec
sbb
add
cli
icebp
push
je
pop
mov
mov
lea
inc
or
dec
nop
add
jp
add
or
pop
mov
xchg
popa
jl
mov
and
inc
add
pusha
jmp
pusha
cmp
pop
fstp
and
xor
scas
cli
rol
cwde
mov
and
les
iret
and
adc
mov
fstp
adc
or
enter
fistp
or
loop
fisub
mov
push
xor
fdivrp
loopne
mov
mov
sbb
push
js
cld
lea
fst
fs
mov
test
outs
retf
and
xor
pop
repz
cmp
test
adc
cli
push
adc
pop
ins
js
push
xor
iret
inc
loope
sar
mov
aas
mov
(bad)
test
push
lea
add
mov
sbb
mov
jle
rol
mov
cmp
add
(bad)
call
fld
push
pusha
mov
cmp
inc
test
test
add
shl
add
movs
inc
cmp
add
pushf
xchg
scas
mov
fisttp
jno
push
out
mul
adc
add
add
fs
jmp
add
ja
or
jg
cld
sbb
sar
mov
cmp
fsub
inc
mov
cwde
mov
loopne
dec
jo
mov
sahf
retf
xchg
rol
jp
(bad)
nop
inc
lea
dec
pop
fsubr
mov
add
(bad)
jmp
sub
push
mov
adc
sbb
or
jmp
mov
sbb
push
sbb
cdq
jne
pop
sub
jl
arpl
add
push
push
mov
push
dec
ins
mul
gs
mov
cwde
pand
mov
jl
add
pusha
adc
sub
jno
mov
or
adc
add
mov
jne
inc
bound
or
add
mov
dec
or
adc
data16
sbb
jp
jmp
mov
add
jne
sti
sbb
outs
ins
mov
mov
jecxz
movs
mov
push
add
ss
sbb
cmp
lds
je
xor
loop
inc
mov
and
sub
or
push
loope
pusha
test
rol
push
push
rcr
call
push
add
cmps
or
adc
cdq
inc
retf
pusha
xor
and
inc
pop
fistp
fsub
jmp
dec
sbb
pop
pop
jae
in
inc
xor
cmps
push
pop
shr
and
gs
inc
loopne
push
fnstcw
jecxz
es
add
test
test
dec
push
dec
lea
xor
and
jb
add
xchg
popa
rol
inc
and
add
js
push
ins
dec
jo
fcom
push
mov
ins
mov
add
push
jp
or
push
retf
cmp
dec
loopne
xchg
adc
retf
push
add
sub
jecxz
pop
mov
sub
int
iret
sti
sbb
sub
ja
jmp
adc
push
cmp
lea
sbb
idiv
loopne
(bad)
xchg
or
mov
fild
(bad)
push
loop
push
sqrtps
cmps
jo
not
jno
lods
imul
and
sbb
mov
or
and
xor
and
sbb
jl
xchg
cmp
or
sbb
jmp
(bad)
add
xor
and
dec
add
aas
xchg
jg
ds
jge
fwait
sub
daa
xor
inc
loope
in
mov
lahf
gs
daa
pusha
mov
(bad)
loop
ds
test
push
pop
imul
push
jle
add
push
mov
addr16
inc
cmp
enter
or
or
movzx
cmp
je
inc
xor
add
add
add
pop
sub
ficomp
popf
xor
sbb
push
push
clc
sbb
loope
sub
pushw
fist
dec
mov
mov
das
xor
mov
xor
or
inc
inc
add
enter
pop
popa
inc
(bad)
scas
jnp
add
call
dec
mov
aaa
push
(bad)
adc
loop
sbb
in
retf
lea
mov
inc
mov
xor
dec
push
retf
lock
or
mov
or
jmp
(bad)
sbb
out
inc
mov
mov
movs
add
mov
inc
sub
rcl
rcl
test
loopne
or
sub
pusha
and
mov
sbb
retf
pop
je
pop
enter
in
ret
enter
pop
je
inc
pop
je
pop
jne
push
inc
sub
adc
push
pop
jns
je
popa
bound
test
sbb
mov
test
nop
cwde
fstp
dec
pop
jle
mov
push
mov
test
cmp
cld
rol
inc
sub
push
mov
or
push
loop
push
add
mov
je
add
mov
jle
push
pop
mov
xor
add
and
or
and
adc
into
mov
in
xor
cli
jne
sbb
cmps
jnp
or
add
sbb
out
xchg
pusha
lahf
jb
xlat
sbb
xor
mov
pop
push
ficomp
push
rcl
xlat
dec
xor
rcr
aad
sub
icebp
push
mov
je
mov
push
cmc
pop
pusha
sub
inc
dec
jmp
push
push
adc
xor
pop
invd
push
pop
or
cld
mov
push
push
mov
add
ret
jl
jb
inc
rol
ret
hlt
or
pop
lds
pop
sbb
sbb
shr
push
dec
aas
idiv
push
sbb
fidiv
imul
not
outs
mov
or
dec
and
test
fwait
dec
add
push
add
dec
cmp
dec
pusha
lds
add
inc
mov
push
(bad)
(bad)
and
das
add
cmp
cmp
xor
push
rcl
nop
pusha
inc
nop
lods
fadd
loope
dec
fld
jae
inc
hlt
add
mov
jnp
out
jno
js
push
push
push
add
pop
sub
loopne
fwait
out
fnstenv
push
loop
cmp
jne
xchg
loopne
lock
(bad)
(bad)
and
dec
add
pop
pop
jo
sbb
adc
xor
jne
test
sub
pop
inc
add
xchg
sub
add
jbe
xchg
add
ins
sahf
fld
rcr
mov
sbb
sar
xor
push
push
pop
inc
xchg
add
and
xchg
inc
movs
scas
mov
adc
imul
jne
add
cmp
jne
sub
pop
xadd
adc
inc
lods
(bad)
(bad)
aam
cld
ss
daa
lea
pop
call
jnp
add
movzx
mov
add
add
popa
adc
addr16
idiv
sub
adc
addr16
test
xchg
adc
sub
loopne
dec
pop
push
or
gs
xor
jo
div
inc
enter
pop
shl
jae
push
sub
add
adc
rcl
inc
les
icebp
int3
cmps
fs
out
aaa
mov
clc
mov
xchg
inc
and
test
aaa
and
jg
fcom
addr16
test
add
bnd
cmp
xor
(bad)
jle
mov
and
mov
das
int3
push
scas
retf
je
sub
push
inc
movs
mov
dec
adc
(bad)
push
(bad)
jmp
loope
ret
jmp
push
inc
add
int3
mov
inc
clc
ins
pop
and
cmp
loope
pusha
inc
or
xchg
dec
xchg
xchg
dec
imul
push
ror
shl
adc
dec
arpl
xor
sbb
outs
lock
inc
jno
pop
jb
into
icebp
jge
sub
inc
cmps
ins
dec
jb
je
mov
inc
inc
and
fidivr
or
push
or
lods
sub
adc
jne
adc
and
push
(bad)
or
xor
je
dec
rol
xor
inc
shr
or
cs
and
cmp
mov
shr
shl
sub
or
and
sub
mov
fwait
add
test
shr
and
add
out
or
mov
sub
and
loopne
push
nop
sub
xchg
mov
push
jb
jo
fwait
adc
push
or
(bad)
mov
mov
sbb
xor
adc
sbb
adc
or
adc
and
test
and
sbb
dec
or
sub
and
or
in
sub
dec
or
jb
jmp
sub
sbb
sub
mov
xor
sbb
xor
(bad)
arpl
jne
inc
dec
adc
loopne
inc
adc
cmp
lock
mov
inc
xor
adc
add
or
inc
sub
or
adc
cs
mov
mov
je
or
je
mov
stos
sub
loopne
xchg
mov
add
jb
or
adc
aaa
xor
add
mov
jmp
lock
mov
xchg
add
add
inc
or
add
(bad)
test
add
xchg
jl
push
ss
sbb
cwde
push
sub
stos
cmp
clc
(bad)
stos
hlt
and
pop
rcr
test
(bad)
stos
hlt
hlt
and
and
(bad)
clc
(bad)
sbb
pusha
rol
inc
add
dec
ja
push
nop
stos
bound
add
adc
ret
lock
in
and
add
lock
in
in
pop
enter
lock
adc
mov
push
in
inc
xchg
push
in
pop
movs
in
call
push
add
push
mov
add
or
pop
jle
loop
inc
test
add
loopne
dec
loope
call
xchg
dec
and
out
imul
and
enter
push
shl
push
hlt
cmp
jg
sub
mov
add
add
call
add
shl
mov
rcr
ins
cmp
mov
imul
pop
arpl
pop
test
push
add
push
cmp
jne
dec
adc
mov
repnz
push
popf
or
popf
fsub
or
inc
xchg
fcomp
xor
popf
xchg
shl
mov
aaa
xor
or
jp
xchg
mov
hlt
mov
add
inc
jo
daa
jb
xchg
int3
jne
mul
and
test
loopne
sbb
jg
cmp
enter
inc
repz
xor
jle
test
inc
xor
pop
stos
inc
imul
push
int
adc
xchg
xchg
add
pop
add
xchg
mov
lds
sbb
test
test
pop
sub
add
std
cmp
je
push
sub
retf
inc
adc
or
shr
cmc
(bad)
ins
sub
mov
adc
call
mov
add
sub
jb
or
cmp
xchg
xchg
aaa
inc
mov
adc
mov
imul
fisttp
loopne
nop
inc
shl
push
shl
dec
sbb
or
sbb
sub
shl
pop
inc
lods
or
les
inc
hlt
mov
test
fsubr
cmp
add
cmp
iret
shl
sbb
int3
clc
mov
clc
cmp
jg
mov
inc
clc
(bad)
loopne
into
arpl
add
lahf
(bad)
iret
fld
fcomp
lock
mov
jge
cmc
adc
or
xchg
stos
test
add
lock
xchg
mov
adc
mov
call
imul
pop
test
jl
cmp
ds
or
pop
sub
call
or
jo
(bad)
adc
out
cmp
xchg
jmp
cmp
or
test
movs
xor
test
add
inc
and
rol
cld
fidiv
les
shl
test
inc
(bad)
test
shr
gs
(bad)
(bad)
fdivr
stos
jne
ds
cmp
sub
xchg
pop
mov
jbe
jae
add
call
sbb
cmp
and
add
xor
mov
mov
sbb
mov
fcomp
cmp
sub
and
cmps
enter
jge
ror
(bad)
jnp
movs
cmp
adc
out
xor
jle
sbb
aad
idiv
and
sbb
idiv
xchg
mov
pop
shl
sub
adc
xchg
pop
(bad)
add
mov
adc
out
mov
mov
adc
test
out
iret
shr
and
or
adc
lods
and
test
or
lods
out
lods
or
add
mov
sbb
in
je
jmp
(bad)
cmp
adc
jl
pop
fst
add
and
mov
js
(bad)
add
in
jmp
movs
jno
push
std
ss
jge
sub
stos
das
dec
or
shl
shl
inc
dec
rol
mov
(bad)
das
push
test
push
jb
sub
adc
adc
mov
nop
add
and
push
mov
xor
arpl
rcr
adc
cmps
and
jg
mov
mov
mov
mov
push
outs
sub
rcl
daa
jae
(bad)
stos
add
jmp
gs
inc
dec
add
shr
add
mov
daa
adc
adc
jg
cli
xor
mov
clc
mov
or
lods
or
lahf
icebp
mov
dec
fcom
pop
clc
mov
or
adc
pusha
rcr
jl
cwde
fistp
mov
scas
scas
cwde
ins
cwde
xchg
mov
xchg
ins
cwde
cwde
movs
xlat
mov
pushf
popa
dec
xlat
ret
stc
cmp
pop
jne
sub
adc
mov
test
cmp
xchg
nop
sbb
adc
mov
mov
in
jle
clc
mov
or
mov
sub
pusha
(bad)
sti
stos
lea
jle
mov
hlt
pop
mov
jl
jge
or
pop
inc
xor
ror
xchg
xor
mov
and
mov
repz
mov
shl
test
mov
xor
push
lock
sbb
and
test
(bad)
test
jne
loopne
test
push
test
cmp
mov
sar
mov
bound
inc
or
outs
adc
ucomiss
xor
mov
inc
cmp
mov
push
add
(bad)
out
and
or
retf
or
sub
add
(bad)
or
test
mov
icebp
xchg
sbb
inc
out
jo
ret
popa
pusha
in
jo
ja
adc
call
shr
cmc
push
push
popf
or
push
out
cmp
add
cmp
cmps
push
push
mov
bound
les
mov
add
xchg
(bad)
(bad)
sbb
imul
adc
arpl
mov
cmp
push
mov
ret
ror
cmp
cld
enter
dec
add
call
adc
xor
dec
or
jle
test
push
jo
sbb
ja
mov
jg
shl
jmp
cmp
leave
xchg
rol
imul
mov
dec
pop
movs
adc
pop
loope
and
xchg
lds
fdiv
add
ret
mov
leave
cli
cmps
call
leave
and
test
arpl
ins
xchg
loop
jb
push
mov
ins
mov
inc
fnstcw
mov
mov
scas
push
adc
sbb
inc
push
sub
movs
aam
or
popa
cwde
(bad)
je
push
inc
or
add
sbb
cmp
sub
push
mov
je
lea
and
mov
rol
sub
jg
rcl
ss
push
dec
push
icebp
push
xchg
shr
sub
adc
mov
lahf
sbb
cwde
hlt
cmp
inc
xchg
add
lods
nop
xchg
push
loope
sbb
add
sub
inc
movs
out
or
or
cmps
add
cmp
and
repnz
push
shr
or
sub
ret
jne
xchg
dec
xchg
jmp
jmp
mov
lahf
mov
sbb
in
adc
inc
jnp
sub
jae
cmp
fs
add
int
mov
mov
test
adc
sbb
icebp
adc
bnd
jle
mov
call
push
ret
adc
out
jmp
adc
ja
es
adc
inc
and
push
ins
shl
bound
adc
fimul
(bad)
(bad)
jmp
mov
mov
sbb
pop
mov
inc
pop
or
icebp
jg
push
movs
xchg
sbb
add
aaa
dec
adc
or
ret
pop
and
repnz
ins
inc
sbb
sahf
add
xor
sbb
in
mov
inc
jnp
xor
mov
pop
addr16
add
mov
sub
ror
sbb
enter
in
inc
pop
ins
inc
pop
xchg
(bad)
cmp
add
or
(bad)
sub
vmread
jp
add
shl
(bad)
dec
imul
xor
xchg
inc
ret
lds
pop
cwde
adc
push
xor
jo
jno
sub
shl
dec
cmp
test
test
aam
shl
xor
cmp
aad
out
gs
fxch
sub
mov
in
(bad)
add
or
int
lock
xchg
xor
xchg
push
(bad)
sub
bound
xor
xor
jecxz
and
pop
fs
push
inc
push
push
clc
jno
dec
xor
push
in
adc
js
inc
adc
popf
push
adc
das
or
ss
cmp
ins
(bad)
mov
add
sub
dec
add
jo
lea
sub
idiv
ret
or
(bad)
fs
ds
inc
dec
es
dec
inc
inc
dec
and
pop
inc
inc
inc
dec
or
dec
xor
mov
push
adc
sbb
cmp
scas
stos
add
xchg
inc
sbb
adc
loop
scas
dec
inc
rcl
fst
arpl
mov
mov
xor
and
popa
add
out
xor
jmp
mov
cmp
mov
xor
call
sbb
ret
mov
retf
addr16
xchg
pop
cmp
imul
daa
mov
test
push
dec
mov
test
jg
pop
div
pop
mov
push
icebp
imul
mov
xor
dec
rcl
sub
aad
(bad)
and
test
sbb
fs
dec
ror
xchg
and
pusha
cli
pop
and
test
xchg
sub
call
xchg
sub
gs
sub
sub
push
sub
ret
sbb
and
cmps
mov
push
push
xor
gs
retf
nop
sbb
sbb
sbb
and
sbb
push
xlat
and
sbb
and
sbb
sub
jno
fs
push
inc
cs
icebp
adc
push
adc
push
xlat
xchg
lock
ins
adc
clc
jo
lds
imul
jo
xchg
add
xchg
aaa
dec
jae
adc
lock
adc
(bad)
jg
sub
out
sbb
sub
loope
jbe
leave
rol
fwait
in
dec
jo
stos
add
adc
rdmsr
push
repnz
adc
jne
adc
sbb
cmp
stos
(bad)
cmp
or
add
daa
cmp
push
enter
add
es
cmp
adc
out
pcmpeqw
or
jge
ret
mov
jb
jmp
(bad)
fild
jg
sub
cmp
or
mov
adc
pusha
mov
add
or
push
push
leave
pop
inc
ficomp
sub
test
(bad)
pop
das
push
movs
xor
xor
loop
mov
jecxz
jo
lahf
loope
add
cmp
bound
movs
inc
mov
push
(bad)
std
and
lods
sbb
lock
sub
ror
out
add
int3
xor
pop
adc
sub
add
movs
push
std
std
std
std
test
retf
std
shl
or
push
sbb
out
or
add
les
cmps
mov
pop
mov
pop
adc
add
or
stc
inc
shr
in
and
test
stc
in
in
and
in
lock
inc
and
inc
mov
mov
mov
pusha
dec
jmp
lds
jecxz
(bad)
call
jmp
call
fs
call
xchg
and
pop
adc
inc
lods
mov
adc
and
sub
or
dec
inc
(bad)
loopne
sbb
jle
fsub
or
xchg
and
fsub
loopne
nop
out
adc
fld
and
setge
add
push
jne
push
add
and
fsubr
inc
shr
aam
or
jb
and
fcomp
adc
inc
mov
push
xchg
or
cli
std
or
and
mov
test
enter
les
test
cdq
mov
cwde
jbe
cmp
pushf
and
addr16
std
in
neg
lds
jle
mov
sub
rol
mov
shr
(bad)
outs
xchg
les
mov
dec
inc
push
scas
ja
add
(bad)
jmp
xor
in
cmp
lea
or
cs
mov
test
imul
cld
int
cmp
jmp
push
cmps
fnstcw
or
push
add
bnd
adc
mov
scas
stos
add
jge
inc
add
call
call
sub
bound
and
jle
lahf
add
scas
or
sub
jle
rol
or
call
add
dec
rol
mov
iret
add
add
dec
xor
adc
test
icebp
mov
shr
mov
or
jb
and
adc
xchg
sbb
add
jae
lock
mov
mov
lods
enter
and
test
sbb
lods
mov
or
sbb
loope
enter
sub
mul
test
movs
and
xchg
xchg
mov
movs
movs
shr
test
std
push
nop
sub
xchg
dec
popa
pop
add
and
sbb
pushf
and
test
dec
inc
pushf
mov
pop
cmps
in
inc
(bad)
mov
and
enter
and
test
sbb
xchg
cwde
cwde
add
adc
cmp
or
push
fld
xlat
add
lds
xchg
ds
aam
inc
pop
sub
stos
enter
mov
lahf
adc
jecxz
imul
js
loopne
loope
shl
add
and
jns
jo
loopne
or
jno
and
add
es
pop
xchg
push
xor
sub
add
test
sub
out
add
ret
mov
lock
cmp
add
cdq
push
call
stos
push
jp
shl
xor
movs
ins
loop
cs
daa
lds
add
ins
aas
sbb
sub
je
dec
jl
je
or
je
jbe
sub
jle
jecxz
pop
test
test
sbb
mov
fadd
pop
or
je
adc
sbb
jle
popf
xor
mov
adc
int
add
imul
add
fadd
retf
cdq
cmps
or
add
inc
cmps
iret
push
xchg
adc
loopne
pop
jle
cmps
inc
or
je
pop
sbb
dec
in
add
fiadd
repz
sbb
pop
bound
nop
mov
imul
push
aas
pop
add
nop
(bad)
(bad)
test
cmps
in
es
(bad)
cmp
test
push
mov
mov
push
ja
xor
add
pop
push
inc
push
pusha
inc
fs
lods
add
popf
xor
retf
nop
sub
dec
mov
retf
pushf
cmc
mov
xlat
xor
jns
or
loop
mov
mov
jno
and
jb
test
test
mov
inc
push
add
dec
push
xor
aaa
cmp
aaa
jl
or
or
inc
lods
retf
add
push
xor
sbb
pop
shl
add
jle
je
or
xchg
and
je
js
das
inc
lods
push
cmps
push
xor
mov
jo
cld
fidiv
ins
and
test
cs
xor
ins
ins
jo
loop
add
lock
cmp
out
(bad)
pop
add
add
push
les
mul
push
xchg
xchg
mov
fs
dec
sbb
cmps
fs
aaa
push
pop
jle
or
ja
cdq
push
and
test
and
mov
pop
pop
lods
pop
adc
in
neg
ror
mov
mov
sub
dec
pusha
outs
in
js
fdiv
dec
aad
push
add
add
lock
je
xchg
stos
dec
push
aaa
jge
ficom
push
repz
mov
adc
or
dec
xor
jb
push
push
push
mov
lea
jae
dec
addr16
dec
cmp
shr
dec
aaa
push
ins
mov
popf
pop
repnz
mov
sub
into
jnp
fwait
push
leave
xchg
cmp
jbe
je
jp
mov
jecxz
xor
cmp
dec
cmps
mov
jo
cs
loope
fs
sbb
xor
push
in
add
jns
mov
inc
inc
cmps
mov
xchg
cmp
sub
jne
enter
pop
adc
inc
movs
shr
jmp
mov
mov
iret
pop
sbb
sbb
add
jmp
fldenv
xor
sub
int3
test
mov
sub
dec
inc
push
dec
fst
mov
sub
dec
sub
add
sbb
inc
stos
enter
ret
mov
add
cdq
test
sbb
arpl
adc
adc
jne
xor
and
and
jb
push
sub
(bad)
jmp
add
aas
sub
add
cmps
push
and
lods
ds
shl
push
test
inc
xchg
dec
sahf
out
das
inc
pop
push
out
cmp
mov
js
mov
sti
in
pop
and
sub
je
jns
mov
add
mov
sbb
pop
jmp
pop
add
(bad)
xor
jnp
dec
sbb
cmp
dec
adc
leave
add
or
push
mov
jmp
jge
mov
mov
shr
inc
sbb
jne
inc
mov
and
inc
cmp
push
out
loope
or
pop
jnp
xchg
mov
push
dec
inc
add
push
ret
push
and
std
sbb
loope
pop
mov
add
mov
cmp
aas
inc
popa
cmp
fsubr
int3
or
test
pop
cmps
mov
sub
xor
mov
sidtd
sbb
xor
ret
inc
inc
mov
std
and
push
lods
pop
cmp
pop
mov
loop
test
cmc
shl
add
or
sbb
scas
xor
xor
sub
or
xchg
retf
xor
jnp
and
mov
(bad)
jle
mov
test
scas
stos
inc
add
pop
pop
dec
ds
movs
ret
jne
pop
cmp
inc
inc
test
jmp
push
adc
dec
push
sahf
sub
xor
xor
sbb
and
cld
ficomp
or
cmp
addr16
mov
and
rcl
loop
jle
mov
test
or
les
and
test
sub
in
(bad)
xor
dec
inc
mov
loope
xchg
and
dec
sbb
rcl
(bad)
loope
cmps
loope
dec
or
or
mov
adc
sbb
addr16
adc
iret
jle
mov
mov
test
cmps
test
lods
add
mov
sbb
inc
cmp
dec
in
add
emms
add
ror
add
jb
add
addr16
cmp
jle
in
xchg
add
inc
xor
js
cmp
xor
jns
cmp
add
or
je
dec
push
cld
xchg
mov
inc
add
add
(bad)
cmp
add
les
pop
push
clc
out
clc
cld
aas
pop
dec
movs
jb
cld
cld
cld
dec
xchg
and
sub
daa
adc
xchg
les
cmp
cmp
inc
lock
call
ficom
call
sub
cmp
sub
(bad)
cmps
in
addr16
cld
(bad)
mov
sar
mov
push
movs
add
cmp
and
mov
push
xchg
nop
inc
adc
inc
push
xchg
mov
inc
pop
fstp
add
pop
movs
and
xchg
adc
frstor
xchg
fwait
aam
or
daa
xchg
inc
(bad)
aam
ja
int3
addr16
fsub
sti
sar
mov
test
fisttp
scas
inc
addr16
dec
retf
xchg
or
call
cmps
push
fwait
add
or
add
imul
cmps
sub
addr16
pop
push
ficomp
fsubr
pop
aam
shl
bound
pop
add
push
pop
push
arpl
mov
fistp
push
je
pop
ret
jge
sbb
add
call
push
lock
push
push
or
jl
mov
push
ret
cmp
mov
inc
and
cmp
pop
dec
jb
js
dec
mov
or
or
push
shl
clc
or
adc
jne
mov
cmp
xor
or
jno
repz
inc
inc
ins
cmc
or
cld
add
popa
or
enter
cmc
jnp
inc
les
or
inc
inc
int3
int3
enter
in
addr16
inc
int3
push
mov
sar
mov
pop
pop
mov
movs
inc
jne
inc
pusha
mov
jne
cmp
jne
jbe
cmp
je
jo
fstp
out
xchg
cmp
or
or
sbb
ret
stos
xchg
cmps
(bad)
xchg
out
sub
dec
ins
adc
sar
inc
loopne
adc
loope
test
cld
xchg
push
test
mov
mov
mov
or
or
mov
inc
dec
mov
mov
out
mov
int
add
add
pop
dec
inc
call
cmp
xor
sub
sbb
xlat
jle
add
test
cwde
adc
push
xor
fwait
mov
or
(bad)
lods
repnz
fwait
test
loope
(bad)
cld
pop
fadd
fwait
jnp
lock
mov
and
jb
(bad)
lock
pop
in
mov
mov
movs
mov
mov
xchg
inc
or
leave
dec
lods
lods
adc
nop
or
hlt
repnz
sub
iret
add
loope
push
nop
jg
inc
mov
or
enter
nop
mov
jle
sbb
sar
imul
mov
pop
inc
adc
repnz
pop
test
icebp
cwde
push
inc
sub
nop
call
add
push
or
jmp
or
outs
or
jl
or
push
cdq
test
mov
icebp
test
sar
mov
test
or
push
add
jmp
pop
push
cmp
add
push
lock
test
jo
jo
ins
enter
and
test
je
in
jb
jo
addr16
stc
je
sar
call
js
add
and
xchg
or
icebp
retf
loopne
push
pusha
sub
pop
nop
mov
mul
or
enter
pusha
pop
addr16
sbb
sar
cs
iret
mov
test
pop
add
add
push
jmp
int
sub
xchg
push
xor
fs
mov
push
stc
push
sub
jb
push
push
dec
fistp
rcl
sar
add
mov
mov
test
adc
sbb
pop
jmp
jmp
dec
icebp
aam
push
or
loope
sub
cdq
or
cmp
or
pushf
pop
push
inc
inc
cmp
neg
push
xor
mov
lock
jle
mov
test
sub
shl
add
(bad)
(bad)
cld
adc
cmc
sbb
mov
movs
lods
ret
mov
cmps
sbb
icebp
dec
add
sahf
imul
inc
add
addr16
cmps
jmp
pop
xchg
cmp
mov
sub
push
and
adc
push
iret
ja
add
mov
xor
loop
inc
mov
xchg
js
daa
call
push
jo
daa
sbb
out
daa
dec
cmp
jbe
add
sub
rol
mov
repz
rol
inc
neg
or
shl
scas
add
jp
cli
xchg
mov
inc
loop
mov
xchg
mov
dec
movs
rcr
lahf
das
and
cmp
and
or
add
cs
pop
ficom
cmc
or
das
xor
repz
xchg
push
jb
add
mov
add
sbb
je
lea
cdq
fdiv
or
mov
sub
or
inc
or
xchg
sbb
mov
xor
test
test
ror
ror
(bad)
mov
xchg
cmp
test
dec
test
inc
lea
push
shl
pop
ror
mov
out
and
push
lock
imul
cmp
pusha
and
mov
adc
popf
add
mov
jle
mov
stc
addr16
adc
shl
adc
aad
nop
or
sti
movs
add
or
inc
loope
cs
popf
adc
xor
enter
xor
add
add
push
jb
sbb
mov
rol
add
call
mov
sub
mov
pushf
jmp
push
repnz
outs
pop
psubd
std
aas
cmp
or
inc
loopne
inc
or
jne
shl
inc
(bad)
push
jge
(bad)
pop
ror
push
push
mov
inc
add
xchg
cwde
add
mov
mov
ins
je
in
sub
outs
adc
retf
arpl
pusha
sbb
jb
add
cdq
mov
mov
je
push
iret
std
std
mov
or
je
pop
or
xchg
stos
and
rol
outs
pop
adc
or
cmps
sub
cmp
je
lea
xor
ds
xchg
and
add
fsub
add
mov
xor
xchg
jo
cmps
lods
and
inc
sbb
icebp
mov
test
mov
test
xor
pusha
lods
movzx
or
pop
adc
adc
add
add
xchg
lock
mov
outs
push
rol
jo
inc
pop
add
inc
pop
cld
sbb
rcr
mov
and
dec
pop
sahf
inc
inc
or
dec
jmp
test
sbb
popa
(bad)
xor
sbb
xchg
inc
sbb
aaa
mov
cmp
repnz
inc
xor
dec
les
cmp
sbb
xchg
arpl
jbe
loopne
jmp
inc
test
div
mov
(bad)
push
jmp
or
sbb
rcr
or
pop
adc
jne
lods
sbb
sbb
push
call
inc
and
out
jmp
xor
das
sub
and
jle
pop
or
aaa
adc
jmp
sbb
sahf
mov
push
and
adc
sub
dec
inc
and
(bad)
push
cmp
js
inc
sbb
ja
je
xlat
sbb
cmp
pop
arpl
sub
add
inc
inc
cmp
mov
mov
or
call
xchg
call
shl
(bad)
xor
ret
or
jne
stos
xchg
es
lahf
xchg
push
test
cmp
dec
jge
sti
js
and
push
adc
movs
ss
adc
jg
and
xchg
(bad)
cmc
cmp
mov
(bad)
nop
sahf
push
and
cdq
idiv
adc
test
add
sbb
adc
push
and
jg
adc
dec
or
add
int3
icebp
dec
fmul
loope
pop
movs
adc
or
jnp
push
les
ins
adc
xchg
add
call
clc
or
mov
sar
hlt
aaa
sub
ins
mov
push
or
inc
push
rcr
push
dec
and
and
fs
(bad)
cmp
add
lods
or
add
stos
and
shr
shl
jmp
imul
inc
mov
ins
mov
pushf
jae
adc
std
mov
jne
cmp
pop
setbe
mov
mov
xor
push
icebp
ror
sub
pop
push
sbb
pop
cs
ins
adc
push
push
pop
sub
push
ins
sar
daa
mov
and
pop
add
cmps
lods
fadd
mov
xchg
dec
inc
jmp
sub
sbb
mov
sar
rol
jbe
add
cmp
mov
std
(bad)
ins
mov
lock
inc
jmp
inc
jmp
inc
cmp
jae
dec
pop
mov
into
(bad)
jmp
cs
xchg
mov
jae
mov
mov
pusha
arpl
outs
sbb
mov
das
sub
sub
stc
ja
sbb
push
mov
cmp
push
cmp
int3
adc
add
push
and
and
mov
(bad)
cmp
pop
aad
push
rcl
fwait
mov
pop
dec
loope
rcr
add
pop
pop
sub
aas
add
push
rcl
inc
cmp
fsubr
push
test
xor
leave
in
shl
sbb
cmp
in
mov
sub
adc
push
pop
add
mov
sbb
mov
mov
loopne
sub
jnp
cmp
push
mov
shl
sbb
les
loope
push
or
push
push
xchg
add
retf
cmp
shr
and
or
cmp
inc
xor
shl
push
bound
ss
ins
fiadd
jo
push
ja
jno
je
sub
adc
xchg
add
add
adc
ins
xor
test
push
das
outs
cmp
sub
js
sub
es
sub
push
and
jne
xor
pop
pop
cmps
jne
cld
jl
sbb
add
ret
sub
mov
inc
das
ds
(bad)
(bad)
jbe
sub
inc
test
sbb
shl
test
mov
(bad)
and
jg
sahf
jne
dec
jmp
sub
jmp
mov
rol
jbe
dec
xor
xor
mov
push
jae
sub
inc
and
mov
pusha
push
and
push
push
push
je
mov
sbb
nop
ret
adc
mov
push
dec
je
std
push
fdivr
sub
and
or
mov
loopne
xchg
lods
xchg
sbb
push
mov
dec
loop
add
mov
push
pusha
pop
jmp
or
xor
je
jae
xlat
mov
xor
sub
push
push
mov
lahf
cwde
push
cmp
mov
pop
adc
sub
(bad)
and
adc
rcr
and
mov
es
(bad)
sti
(bad)
call
dec
push
rep
jo
add
and
dec
cmp
jle
add
les
sub
bound
pop
sbb
(bad)
scas
xchg
xor
jge
add
xchg
test
ins
add
adc
push
ror
inc
sub
xor
lock
pop
mov
mov
ds
rol
int3
push
add
pop
mul
push
pusha
xchg
sub
adc
mov
pop
sub
or
push
jno
mov
test
xor
jmp
pop
inc
adc
mov
rol
add
popf
sub
ror
mov
push
or
mov
jne
shl
or
push
je
gs
icebp
pop
add
cmp
les
mov
mov
test
inc
arpl
xchg
data16
enter
or
push
ja
jl
xchg
mov
push
add
out
sahf
out
sub
ins
jg
out
sahf
xchg
pop
sbb
jns
enter
push
sbb
cld
add
mov
test
test
test
and
adc
or
and
mov
adc
xorps
adc
adc
or
or
ins
inc
jmp
push
test
pop
push
adc
add
div
mov
push
add
push
jp
push
fstp
sbb
push
sbb
jmp
cmp
pop
jecxz
sbb
ret
mov
add
scas
in
dec
sub
sbb
mov
mov
sbb
ss
pop
and
cmc
mov
mov
pop
push
sbb
xor
lock
add
xchg
adc
fs
std
or
push
add
mov
mov
xchg
jg
stc
push
and
add
pop
pop
ss
jnp
jp
or
add
outs
xor
cmp
cmp
pop
inc
pushf
clc
shl
scas
repz
add
pop
int3
xor
or
popf
pop
adc
push
inc
xchg
add
fs
(bad)
lock
or
add
mov
jl
pop
cmps
shr
fld
aaa
push
fnsave
lock
add
les
or
pop
sahf
xor
in
jmp
fmul
mov
test
lock
pop
hlt
adc
adc
jnp
fidivr
pop
lock
cld
add
lock
nop
xchg
adc
sub
pop
ja
mov
sbb
(bad)
imul
and
xor
and
jmp
les
mov
stc
ins
push
add
lock
mov
pop
movs
or
pop
push
push
call
adc
fisttp
cmps
(bad)
cld
push
daa
les
enter
jmp
in
mov
ja
(bad)
pop
or
ror
cmp
mov
jl
or
add
inc
jbe
stos
movsx
cmp
icebp
adc
add
adc
or
or
add
jb
add
pusha
outs
iret
jl
popa
call
add
enter
add
sbb
lea
pop
mov
sbb
pop
add
sub
nop
sbb
fld
add
add
jo
inc
pop
adc
or
out
sar
push
ret
xor
ror
push
sub
mov
int3
enter
cwde
and
or
ins
cdq
stos
adc
test
lds
jge
mov
sub
sub
shl
(bad)
fs
inc
inc
test
jg
mov
jl
arpl
add
popa
stos
mov
cld
inc
repz
dec
or
adc
(bad)
lea
jge
mov
and
hlt
inc
or
pop
imul
nop
les
or
xor
call
je
enter
inc
int
sbb
nop
pop
mov
add
mov
pop
dec
mov
shl
rcl
mov
je
xchg
xor
ror
push
mov
and
cld
or
call
sbb
cmp
aaa
xchg
mov
or
adc
push
bsf
cmp
xor
test
push
mov
xchg
fbstp
add
icebp
xchg
add
mov
xor
lods
sti
adc
outs
and
xor
mov
cmp
in
jl
sub
sub
mov
pop
fs
pop
aad
cmp
movs
int3
xchg
cld
cmps
shr
stc
push
mov
inc
test
shl
test
shl
mov
dec
mov
push
in
pop
cmp
(bad)
xchg
add
dec
add
inc
pushf
imul
movs
sbb
xchg
lods
dec
loopne
and
jns
add
mov
and
cvtps2pd
sub
sub
mov
sti
or
add
les
adc
lahf
sbb
or
or
jne
test
mov
push
adc
das
int3
mov
test
push
add
pop
inc
mov
mov
gs
sahf
and
or
out
test
loopne
js
dec
sahf
mov
and
push
imul
add
lea
into
mov
clc
jg
movzx
(bad)
fs
sti
or
dec
xor
inc
stos
call
or
add
mov
lods
jmp
adc
pop
mov
iret
inc
outs
loope
dec
cmp
jae
sbb
ds
cdq
sub
jmp
int
pop
stos
or
mov
imul
test
call
scas
sbb
push
mov
and
mov
pop
add
cmp
adc
add
daa
cld
sti
retf
cmp
jne
add
sbb
and
les
inc
cld
in
pop
mov
das
and
adc
jmp
dec
jb
sbb
lea
shl
ds
popa
sub
xlat
jmp
jmp
jmp
sub
cmp
jbe
loopne
dec
pop
inc
imul
push
cmp
in
sahf
or
cmps
sbb
jb
nop
mov
push
jmp
leave
adc
jecxz
aaa
cmp
push
add
sbb
and
loope
aas
mov
aam
jmp
cmp
outs
test
adc
inc
out
add
add
(bad)
inc
enter
fiadd
or
stos
push
push
dec
and
in
or
adc
mov
or
je
lock
imul
add
shr
ret
rcl
pusha
xor
(bad)
pop
shl
or
sub
es
jmp
sbb
add
cmps
sbb
add
rcl
mov
sub
pop
pop
jb
dec
dec
rep
shl
(bad)
jge
inc
add
mov
and
push
in
mov
or
movzx
push
and
inc
or
adc
and
adc
push
in
in
adc
adc
push
push
nop
retf
sbb
add
sbb
dec
sbb
sbb
cmp
je
je
test
and
push
and
inc
add
mov
add
(bad)
iret
mov
add
or
clc
sub
fs
cld
test
jl
pop
push
mov
mov
add
cmp
jg
shl
adc
jle
sub
aas
mov
fimul
jecxz
sti
outs
fimul
or
mov
jmp
test
jne
xor
pusha
jne
test
ss
in
sbb
jnp
add
mov
pop
push
lock
nop
stc
hlt
sbb
bsr
pop
(bad)
push
jle
pop
das
jmp
inc
and
cdq
add
push
mov
in
xlat
add
jg
(bad)
enter
add
daa
out
test
pop
enter
jmp
add
retf
pop
and
jmp
or
add
or
and
ss
push
adc
push
jmp
test
test
and
inc
data16
sub
add
scas
jae
xchg
or
inc
inc
inc
aas
adc
inc
div
xor
mov
push
mov
push
pop
xchg
or
into
inc
int3
push
test
stc
std
and
jno
fild
or
adc
inc
add
mov
xor
lds
dec
and
adc
and
add
lock
call
cmp
lock
lock
sahf
inc
daa
mov
add
mov
cld
push
add
addr16
inc
jle
mov
out
pop
(bad)
stos
add
cli
loope
repz
fisub
or
sbb
(bad)
neg
xchg
shl
mov
inc
xchg
outs
dec
(bad)
je
adc
mov
retf
push
mov
fs
push
(bad)
jbe
dec
cmp
ret
cmp
pop
cdq
call
cmp
xor
sbb
das
aas
mov
inc
adc
and
shl
movs
dec
push
lock
xor
jg
ret
rol
inc
scas
inc
dec
dec
dec
outs
cmova
dec
inc
push
jg
cwde
pop
add
cmp
icebp
test
and
jo
jp
cmps
out
sahf
jae
dec
push
or
dec
push
out
pop
pop
lock
xor
fsub
cmp
dec
ja
cmps
mov
push
fs
inc
outs
arpl
ss
push
inc
or
adc
dec
outs
add
mov
or
sbb
cdq
dec
popf
ins
stos
popa
jb
inc
loop
loope
sub
push
push
pop
cmps
xchg
adc
jbe
mov
sbb
xlat
pusha
add
xor
fidivr
or
je
dec
dec
adc
pop
cmp
ins
cmp
push
cmps
xchg
push
paddusw
mov
push
aaa
or
enter
arpl
hlt
(bad)
(bad)
aas
push
imul
xchg
cmp
or
pop
inc
cmps
outs
push
adc
sti
add
jg
inc
pusha
adc
ss
add
adc
dec
pextrw
inc
sbb
fmul
xor
jo
push
mov
das
dec
mov
cwde
pop
or
or
or
or
ret
mov
add
inc
sbb
inc
imul
or
jne
imul
pop
das
daa
adc
mov
mov
sub
pushf
or
and
add
or
nop
rol
ss
in
or
(bad)
jne
sahf
popa
ret
ficomp
sbb
div
clc
jnp
add
or
outs
dec
out
xor
ja
jbe
lods
xor
pop
dec
data16
jbe
fisttp
fimul
and
dec
sub
sub
inc
push
inc
mov
sar
outs
daa
lock
dec
xchg
mov
and
ins
imul
dec
imul
adc
clc
or
aaa
push
cmp
xchg
popa
add
clc
mov
add
jo
add
or
mov
or
fcmovb
jge
hlt
jnp
sbb
mov
cmp
ret
mov
xor
pushf
pushf
pushf
pop
xor
sbb
inc
jg
repnz
dec
adc
dec
pusha
jb
mov
rol
xor
test
inc
mov
jo
dec
cmps
pop
daa
dec
pop
sbb
add
adc
arpl
mov
jne
mov
add
mov
add
fcom
xchg
adc
lds
gs
iret
jns
add
ret
jl
xchg
fbstp
mov
or
aam
dec
inc
addr16
add
inc
push
xor
cmp
imul
jp
or
or
arpl
ins
mov
push
adc
mov
fucomp
jne
gs
sub
stc
imul
rcl
and
add
or
dec
push
mov
(bad)
popa
cmp
add
or
in
push
fisubr
imul
or
inc
pop
fadd
add
imul
dec
sub
ret
pop
pop
fadd
les
add
mov
mov
clc
xchg
sub
fwait
test
dec
daa
das
adc
mov
add
test
dec
xchg
imul
jae
add
sbb
add
adc
pop
or
mov
pop
aaa
inc
mov
nop
push
xchg
xchg
xchg
fld
inc
or
xchg
retf
xchg
fadd
xchg
and
xchg
xchg
xchg
xchg
pop
test
xchg
repz
test
jge
add
sbb
sbb
ins
xchg
sbb
jecxz
nop
pop
adc
popa
loopne
and
leave
mov
inc
inc
xchg
addr16
push
pop
dec
or
fs
xchg
xor
inc
add
xchg
sub
leave
or
es
(bad)
cmp
add
ret
add
sbb
call
add
pop
mov
pop
and
fimul
push
and
cmps
daa
call
lock
iret
out
xchg
or
(bad)
js
pop
pop
inc
add
and
aaa
inc
push
nop
out
inc
xor
xchg
or
adc
mov
jne
mov
cmp
ins
call
icebp
or
les
xchg
push
mov
aaa
mov
pop
pop
and
ror
jmp
inc
or
jbe
jg
cld
xchg
add
sub
leave
cmp
or
sbb
push
rcl
inc
jnp
fwait
pop
ret
pop
cmp
cmp
or
add
cdq
mov
push
and
inc
add
xchg
jle
xor
fcom
jle
out
sbb
xor
sbb
(bad)
xchg
jle
lock
test
aad
(bad)
nop
mov
add
push
retf
pop
sub
in
mov
and
mov
or
push
xchg
stos
movs
xchg
adc
sbb
jo
push
fisubr
adc
call
es
jb
das
add
test
mov
add
inc
jmp
inc
push
lock
imul
fistp
sar
and
or
push
ret
pusha
ins
cmp
and
and
pop
mov
and
or
add
add
mov
loop
inc
pop
sbb
mov
mov
xchg
test
or
or
and
xchg
xchg
btc
pop
mov
inc
xchg
xor
mov
mov
dec
mov
sub
test
rcl
arpl
xor
sbb
dec
outs
les
push
sub
pop
ret
pop
jle
sbb
ret
dec
es
adc
add
int3
sbb
pop
sbb
cmp
jg
aad
test
jbe
xor
push
xor
xor
fld
mov
xchg
test
les
pop
pop
sbb
or
(bad)
nop
mov
adc
es
push
ror
or
cmp
push
mov
int3
jmp
push
mov
add
mov
sub
dec
pushf
sub
or
sbb
cs
pop
pop
pop
xlat
imul
add
data16
aas
add
lods
inc
xchg
mov
push
xor
xchg
(bad)
and
jne
sbb
mul
jbe
adc
retf
xchg
mov
mov
inc
or
jle
add
push
aad
loope
xor
inc
inc
scas
xchg
mov
ds
lock
and
cmps
mov
adc
ret
jp
(bad)
mov
call
xor
stos
inc
xor
ins
adc
xor
xor
adc
call
sbb
(bad)
jle
mov
es
push
and
ret
aaa
repz
into
or
inc
test
inc
fisub
inc
push
je
adc
fbld
mov
mov
mov
cmp
add
or
and
adc
mov
mov
pop
mov
adc
jo
push
inc
test
(bad)
pop
fs
lea
mov
cs
out
or
inc
adc
pop
pop
ret
jp
mov
xchg
or
ffree
xchg
es
retf
int
pushf
rol
dec
sbb
or
push
or
inc
adc
push
jo
faddp
inc
cmps
lock
jb
mov
sbb
jne
adc
push
les
push
daa
div
int3
dec
imul
push
jb
dec
and
jge
(bad)
or
outs
outs
or
mov
jns
push
dec
ins
imul
or
mov
test
adc
stc
inc
inc
test
push
jo
sbb
and
call
shl
add
jl
push
push
mov
or
or
pop
aaa
and
inc
dec
or
sbb
imul
add
arpl
add
jo
in
fbld
(bad)
not
dec
test
sub
xchg
mov
fsubr
cmp
cmp
inc
jne
in
adc
data16
loopne
test
sbb
jnp
or
aam
into
push
jmp
adc
push
adc
pop
or
add
or
pop
(bad)
and
test
aam
adc
adc
pushf
test
mov
lds
add
inc
cwde
cmp
rcr
test
rol
lods
push
pop
fwait
xchg
pop
outs
xchg
addr16
sub
scas
xchg
pop
sub
sbb
loope
sub
add
push
add
and
fwait
addr16
xor
mul
popf
jno
dec
pop
int
cmp
lods
sbb
pop
sahf
mov
sbb
jno
cmp
add
out
mov
pop
xchg
jbe
fadd
dec
add
and
arpl
add
adc
inc
(bad)
das
push
movs
aam
push
stos
jae
dec
add
gs
xor
sbb
inc
add
cmps
rol
in
sbb
ds
adc
mov
fstp
mov
pop
shr
jmp
pushf
mov
leave
xlat
hlt
popf
enter
hlt
popf
or
call
lahf
pop
lahf
(bad)
xchg
lahf
test
xor
shl
lahf
repz
popf
xlat
pusha
xchg
pop
jb
scas
dec
popf
jge
mov
cli
push
dec
popf
xlat
jecxz
scas
or
mov
outs
test
xlat
ins
adc
add
scas
jo
pop
adc
cmp
out
inc
jbe
stos
rcr
fnstenv
out
test
das
stc
stos
ja
mov
outs
(bad)
daa
adc
add
and
push
push
dec
sbb
or
sbb
pop
push
in
or
or
xor
daa
cmovbe
xchg
adc
add
inc
add
leave
pop
test
pop
rol
sbb
mov
pop
or
js
nop
add
xor
or
add
(bad)
shr
call
push
mov
or
or
or
arpl
dec
scas
add
add
add
jnp
shl
add
inc
sub
push
fs
inc
mov
cmc
adc
and
inc
nop
sbb
push
icebp
popa
add
fadd
mov
mov
pop
and
imul
adc
stc
retf
and
cmp
add
or
mov
movs
add
js
cmp
or
imul
and
push
fsub
shr
add
rol
or
pop
sar
or
add
fiadd
dec
push
lea
push
aaa
aad
dec
cmp
inc
inc
leave
lods
mov
test
push
jnp
add
xlat
cmps
adc
rcr
imul
adc
push
arpl
mov
mov
ds
inc
clts
fadd
xchg
retf
arpl
push
or
das
psubusw
and
clc
idiv
dec
enter
ds
push
test
jbe
push
inc
mov
inc
daa
sbb
add
icebp
adc
addr16
popf
test
inc
push
adc
arpl
gs
add
mov
test
xor
les
retf
mov
adc
daa
std
inc
ins
push
stos
cmp
jmp
les
test
sbb
push
pause
xchg
jmp
ins
add
nop
and
xchg
cmp
mov
adc
ret
cmp
adc
in
shl
sbb
int3
xor
cdq
sub
sbb
sahf
inc
inc
push
mov
sbb
sbb
or
add
aad
retf
or
inc
jmp
adc
inc
adc
ja
and
ret
fdivr
mov
(bad)
mov
fs
add
inc
or
or
adc
test
pop
pop
addr16
dec
add
sbb
sub
add
dec
mov
sub
lock
popf
jns
cld
pop
pop
ret
dec
and
add
imul
mov
loopne
add
cmp
stos
add
jnp
fcom
sub
xor
jnp
dec
mov
gs
sub
int3
mov
xor
retf
call
push
ss
mov
inc
in
mov
arpl
adc
daa
push
sbb
push
enter
(bad)
and
popf
xchg
dec
js
mov
jne
cmps
cmp
mov
adc
xchg
lock
dec
add
xlat
mov
pop
add
fdiv
(bad)
mov
add
dec
add
add
rcr
push
or
xchg
jge
push
mov
mov
aam
or
xchg
sub
xor
adc
sub
jne
in
push
adc
imul
push
add
pop
or
add
loop
mov
pop
icebp
inc
aaa
daa
mov
and
inc
aad
in
movs
jo
lock
add
fstp
cmp
sub
test
es
shl
mov
ds
adc
jmp
sti
stc
jne
and
outs
gs
jne
xchg
jmp
adc
sbb
imul
fadd
or
and
inc
adc
mov
jmp
mov
fcom
sub
jo
add
adc
mov
lods
fsubr
add
jecxz
inc
sub
(bad)
inc
xlat
push
xchg
ret
mov
inc
xchg
lods
xchg
lods
pop
jo
or
nop
cld
pop
mov
lock
push
into
lea
daa
fwait
cwde
jmp
pop
outs
lock
scas
pop
jb
xor
pop
sbb
scas
in
aad
sub
xchg
stos
clc
xchg
xchg
mov
in
mov
add
shl
mov
fldenv
call
adc
dec
mov
aaa
push
adc
jmp
add
or
aam
pop
and
(bad)
(bad)
movs
scas
add
and
clc
stc
fs
pop
push
inc
(bad)
pop
add
rol
sbb
sbb
or
jmp
inc
neg
cmp
jg
cs
ficomp
lahf
aaa
cmp
push
ins
inc
pop
pop
ret
add
or
adc
mov
and
loopne
mov
cdq
(bad)
dec
mov
test
sub
mov
xchg
adc
jmp
mov
rcr
daa
lock
dec
mov
mov
add
je
das
adc
add
adc
out
imul
adc
call
jae
test
prefetcht2
add
pop
enter
pop
pop
and
enter
jl
test
sub
enter
sub
jnp
mov
mov
or
lea
mov
mov
ss
int
sahf
into
sub
pop
shl
outs
cmp
jge
cdq
jmp
sbb
ret
inc
aad
je
dec
shl
sbb
movs
je
xchg
imul
pop
and
push
adc
xchg
test
mov
push
(bad)
rol
movs
or
std
xchg
lods
xchg
jo
test
mov
add
push
(bad)
add
mov
mov
out
add
xchg
clc
mov
scas
outs
push
push
das
das
jae
pop
and
jmp
gs
arpl
das
popa
jo
das
push
dec
dec
add
addr16
imul
add
test
sub
mul
mov
in
pop
into
imul
aaa
xor
jae
das
gs
arpl
jb
jo
test
mov
or
aam
call
int
repz
xchg
mov
jne
jl
or
adc
mov
mov
sbb
enter
xchg
sbb
enter
mov
mov
adc
push
rol
pop
nop
(bad)
adc
sar
xor
je
(bad)
mov
add
das
ss
xor
push
inc
xchg
inc
add
test
nop
pop
pusha
pop
movs
push
inc
mov
pop
scas
push
in
and
dec
or
dec
fs
push
push
push
and
pusha
mul
push
pop
movs
mov
and
pop
add
jne
xor
pop
push
cmp
mov
pop
pop
iret
repnz
enter
mov
or
mov
lahf
in
mov
dec
outs
fs
sub
jecxz
sub
ds
outs
ja
ins
pop
test
and
push
mov
js
adc
mov
and
arpl
aam
cld
sbb
sub
hlt
lahf
ror
adc
mov
mov
push
out
inc
xchg
lock
inc
sahf
fsubr
pop
mov
dec
in
mov
dec
or
jns
popa
pusha
push
xor
dec
fs
push
adc
add
lods
out
mov
pop
add
aaa
sbb
xchg
xchg
adc
sbb
inc
lock
xor
aaa
dec
cmp
ror
es
fcmovb
or
push
sub
pop
aas
add
lods
push
jns
add
pushf
adc
inc
inc
mov
adc
add
dec
inc
test
lds
cmc
xor
mov
xor
or
add
push
aad
push
popa
add
and
fs
mov
add
xor
jp
mov
pop
pop
fnstsw
or
push
dec
add
add
push
pop
pop
or
or
xor
cmps
loope
fld
push
mov
adc
add
inc
test
adc
and
adc
or
and
or
aas
dec
ins
push
push
or
adc
call
ss
mov
add
or
inc
push
lock
push
mov
push
inc
jge
dec
cld
adc
into
and
sub
inc
clc
(bad)
cmp
xor
or
imul
add
xor
sbb
std
cmp
sti
inc
dec
loop
mov
and
pusha
push
mov
and
adc
xor
sbb
fsubr
cs
call
call
je
xchg
push
rol
aam
fidiv
dec
dec
popa
jp
movs
leave
jle
sub
xor
in
out
outs
jo
mov
les
rol
xor
dec
sub
stos
ss
mov
mov
mov
push
xor
inc
and
clc
adc
pop
loopne
repz
pop
mov
mov
sbb
sub
push
lods
mov
jnp
shr
ins
sbb
ficom
mov
or
add
adc
and
jo
inc
fmul
mov
add
imul
xchg
js
push
jbe
push
and
xor
out
(bad)
leave
jne
jns
js
pop
lock
push
fist
(bad)
test
mov
sbb
pop
cmps
xor
ins
or
cmp
pop
xchg
test
in
call
ret
ficomp
in
xor
enter
push
cmp
and
lock
sub
(bad)
mov
outs
and
lods
pop
or
rol
stos
ins
sbb
sub
mov
sub
push
ins
cli
adc
push
daa
out
add
scas
sbb
add
add
push
cmp
push
jp
add
or
and
or
jp
mov
push
inc
inc
pop
imul
js
add
rol
in
cmps
inc
push
cwde
pop
rol
xchg
xchg
add
sub
hlt
push
dec
mov
mov
ret
jp
lock
in
and
inc
es
js
jns
hlt
popa
xor
dec
lods
mov
in
pop
(bad)
sub
loopne
out
les
mov
pop
lahf
hlt
inc
push
mov
in
sub
lgdtd
pop
icebp
mov
mov
pop
and
add
lahf
hlt
and
arpl
scas
test
in
mov
out
inc
add
movs
lods
adc
das
sub
mov
loopne
add
aas
add
aaa
mov
nop
adc
cmp
sub
add
mov
or
add
mov
dec
mov
xor
cs
jmp
aaa
ret
dec
and
popa
push
sbb
sbb
loope
mov
mov
pop
frstor
shl
hlt
add
popa
inc
ins
js
lds
dec
mov
dec
nop
retf
and
pop
cmp
jecxz
lods
adc
inc
jge
add
add
icebp
std
push
outs
sub
test
pop
jl
movs
add
es
mov
imul
inc
mov
ret
xor
push
xlat
test
mov
outs
pop
inc
inc
add
jb
xchg
or
mov
into
sub
and
xlat
push
(bad)
fcmovb
aaa
and
adc
add
scas
sub
mov
lods
inc
add
inc
(bad)
(bad)
out
mov
pop
clc
mov
ins
add
frstor
inc
nop
dec
cld
ins
(bad)
shl
sub
mov
sbb
jmp
cwde
pop
push
fild
fiadd
ins
ror
fldcw
pop
dec
mov
pusha
cmp
and
(bad)
les
xor
mov
or
ds
repz
mov
pop
stos
xchg
jp
adc
mov
cmps
clc
jnp
xchg
ret
mov
sbb
mov
cmp
cmp
adc
test
fstp
mov
pop
test
sti
pop
cs
mov
push
lea
aas
mov
ins
add
push
fnstenv
or
fdiv
and
sbb
add
loopne
scas
call
sbb
(bad)
loopne
inc
adc
lds
dec
out
jp
inc
jl
shr
add
stos
ret
call
add
adc
das
aaa
push
fild
dec
out
xor
add
mov
push
into
outs
aaa
adc
sub
inc
mov
es
bound
dec
idiv
pop
aaa
ss
cs
mov
push
add
jbe
push
imul
add
jp
daa
imul
fwait
pop
push
xchg
pop
loop
and
xor
shl
push
push
jb
imul
nop
dec
jl
add
xor
(bad)
jge
pop
sbb
adc
or
popf
inc
shl
xor
adc
inc
fdivr
sub
push
or
or
retf
popf
gs
mov
fstp
lock
mov
and
inc
pusha
mov
mov
push
mov
rcl
jmp
call
cmp
jnp
or
adc
jnp
inc
and
add
imul
das
test
(bad)
cmc
dec
push
jge
xchg
add
sub
clc
or
and
pushf
push
in
xchg
les
xchg
or
mov
mov
(bad)
ds
test
enter
pop
mov
enter
test
pop
lahf
mov
loopne
jmp
jae
push
in
mov
jl
mov
test
clc
inc
add
movs
int3
mov
add
push
add
or
outs
jg
imul
jne
imul
mov
sbb
jb
jb
sub
xor
add
xlat
mov
aaa
popa
xlat
add
push
and
sar
call
rcr
jmp
jo
aaa
push
sub
imul
pop
mov
push
sbb
add
outs
clc
mov
jo
cmp
jbe
and
xor
shl
inc
loopne
pop
add
stos
cmp
add
call
add
push
xchg
push
xchg
(bad)
push
mov
jnp
les
(bad)
loop
lods
retf
addr16
leave
inc
cld
or
mov
inc
test
jne
popa
jge
outs
mov
out
cmp
add
cmp
cmp
jo
mov
retf
test
or
cmp
xchg
enter
mov
mov
int3
jmp
ss
fcom
retf
mov
test
aaa
ret
push
fmul
fwait
and
clc
(bad)
cs
mov
enter
int3
and
dec
push
push
movs
xor
ins
aam
sbb
fadd
add
call
gs
adc
lock
inc
loopne
mov
add
and
and
pop
movs
xor
mov
adc
rcl
push
inc
add
push
pop
pop
or
xchg
aaa
and
cmp
mov
pop
jge
shr
gs
add
push
out
add
rol
adc
rcl
jo
add
jo
mov
int
je
dec
arpl
dec
mov
push
imul
pusha
cmp
xchg
push
pop
aas
outs
pop
add
add
push
push
fs
inc
dec
aas
dec
xchg
dec
add
pop
outs
mov
push
pusha
mov
push
xchg
adc
push
or
or
xchg
adc
cmps
outs
dec
rol
outs
push
add
sahf
add
bound
pop
clc
inc
loope
mov
or
call
xchg
xchg
cmp
mov
aas
loopne
leave
mov
in
adc
into
mov
or
xor
pop
fsubr
jmp
adc
and
add
outs
inc
or
adc
add
ficomp
sub
add
shl
repnz
cmp
(bad)
cmp
lea
loopne
rcl
into
stc
or
gs
test
js
in
mov
rol
pushf
xlat
push
loop
aas
addr16
rol
pop
sbb
or
or
push
pop
(bad)
dec
adc
push
clc
add
inc
dec
inc
add
inc
dec
or
call
and
gs
pop
or
mov
xor
inc
add
lds
sbb
sub
int
xor
ror
mov
shr
inc
dec
inc
out
mov
inc
inc
and
mov
add
shl
out
mov
iret
repz
lods
mov
push
pop
pop
rcr
cmp
pop
inc
inc
inc
inc
jp
mov
sbb
add
stos
ins
adc
and
ss
lahf
cmp
xlat
jo
aad
fsubr
pop
or
ins
ins
outs
inc
adc
and
pushf
les
daa
aam
adc
sti
daa
push
das
cmps
shl
cmps
xchg
cmp
fsub
test
sbb
inc
lahf
(bad)
int
cmp
and
in
jbe
shl
sub
cmovle
xlat
sbb
push
lea
lea
cmps
es
add
mov
cmp
mov
lahf
pop
dec
sub
in
fldenv
popa
sub
mov
lods
push
adc
(bad)
pop
pop
inc
ins
push
jb
aas
add
vmovlps
mov
mov
jno
add
mov
add
inc
adc
ss
sbb
cwde
mov
scas
xchg
test
add
or
adc
dec
dec
and
adc
push
add
mov
push
add
mov
adc
mov
cs
mov
shl
add
pop
push
add
xchg
fstp
aaa
or
jmp
inc
pop
pop
shl
inc
daa
sbb
pop
pop
or
jb
pop
aam
les
nop
mov
leave
aad
ins
mov
call
stos
inc
mov
loop
loope
mov
xor
push
fadd
lock
sbb
xchg
inc
lea
sub
adc
cs
cmc
daa
mov
nop
or
outs
sbb
mov
adc
mov
dec
jb
jl
addr16
mov
(bad)
retf
ror
shr
mov
dec
sbb
sbb
popa
and
call
mov
in
jmp
add
push
test
add
loopne
inc
push
(bad)
mov
sub
not
cmp
(bad)
(bad)
shl
ja
in
mov
sahf
sub
jg
add
fcomp
fmul
add
cmp
sbb
mov
push
mov
or
dec
cmp
inc
fisttp
add
adc
clc
aad
add
in
jmp
ret
mov
sti
cmp
xlat
(bad)
mov
ss
lock
jb
xor
sar
std
cmp
loop
jmp
(bad)
js
mov
fwait
and
fimul
mov
mov
cmps
dec
clc
add
ds
mov
jbe
inc
xor
and
push
popf
add
jne
xor
pop
fistp
clc
add
add
xor
(bad)
fs
call
push
and
or
adc
fild
aaa
jno
int
inc
add
push
lds
js
sub
xchg
jp
ret
inc
adc
push
add
rcr
cwde
popf
and
stos
inc
js
add
sbb
or
pushaw
add
mov
push
outs
mov
inc
ret
adc
jmp
push
loopne
out
pop
pop
neg
or
push
mov
mov
xchg
adc
lock
xor
(bad)
or
dec
mov
cwde
add
jmp
inc
push
(bad)
xor
rol
xor
dec
lea
(bad)
mov
mov
adc
cmp
pop
mov
popf
arpl
ret
mov
push
test
sbb
iret
mov
pop
jge
adc
sbb
adc
lods
rol
outs
dec
(bad)
mov
add
das
push
push
inc
hlt
arpl
mov
repnz
clc
popa
add
add
push
adc
(bad)
xor
or
push
or
and
test
xchg
add
iret
and
ins
js
sbb
loope
loopne
cli
add
push
mov
add
or
mov
inc
xchg
(bad)
punpcklbw
push
pop
in
sahf
test
ins
add
mov
icebp
test
shl
rcr
stos
add
jbe
mov
mov
push
push
add
jnp
mov
es
adc
push
sbb
(bad)
pop
sub
lock
jo
jl
add
xor
cmp
adc
aam
push
outs
ins
push
rcl
push
and
repnz
push
push
add
and
repz
sahf
cmps
add
add
jns
retf
cmp
add
inc
dec
loope
mov
mov
jbe
inc
rcl
mov
add
adc
adc
adc
sbb
ror
idiv
mov
test
jb
inc
xor
pushf
inc
lock
les
mov
mov
jne
cli
push
loope
add
pop
push
jo
ss
push
jmp
das
and
add
dec
mov
add
je
push
in
dec
mov
std
mov
push
push
push
push
cmp
and
jno
mov
push
jne
cs
or
jle
aad
aas
(bad)
dec
and
or
xchg
or
mov
mov
cwde
retf
les
cwde
not
lea
add
cmp
int
(bad)
add
mov
ror
cdq
fdivr
stos
xchg
push
push
not
fs
div
or
lock
jne
push
aas
push
xor
lds
inc
and
test
imul
fadd
cs
lea
sub
ror
imul
(bad)
and
sub
jmp
mov
adc
push
aam
imul
loope
jbe
xor
push
unpckhps
clc
dec
cmp
jae
pop
push
je
ins
mov
xor
xchg
andps
pop
inc
push
push
outs
outs
ins
inc
movs
mov
xor
stos
sub
sbb
pushf
pushf
pushf
and
sub
jecxz
jmp
outs
jns
adc
(bad)
and
or
bound
or
inc
jb
popa
ins
xchg
xchg
ins
test
addr16
jo
xchg
clc
ins
add
scas
add
xor
fbld
xchg
ins
popa
jb
jae
xchg
add
dec
adc
pop
imul
fs
je
and
ins
xor
mov
xor
add
shr
pop
xchg
mov
fistp
jbe
inc
jne
fwait
jge
inc
add
cs
jo
arpl
das
pop
xchg
nop
push
aas
pop
jge
ror
outs
mov
gs
cs
mov
pop
mov
sub
add
rol
pop
pop
pop
shr
jbe
dec
js
mov
add
arpl
add
or
and
pop
popa
jecxz
push
and
jle
sti
sti
mov
dec
data16
mov
fimul
ds
push
pop
dec
or
rcr
imul
inc
pop
add
add
lds
gs
inc
aas
call
dec
xchg
bound
mov
and
icebp
and
mov
loope
in
punpcklwd
outs
fidiv
push
sub
enter
and
add
clc
int
or
add
test
stc
jbe
dec
(bad)
and
mov
mov
out
mov
add
cmc
inc
hlt
jne
add
sub
(bad)
adc
sbb
and
and
test
push
xor
dec
sub
int
(bad)
adc
xchg
mov
inc
test
aam
cli
xchg
push
dec
ret
(bad)
lods
into
(bad)
rcr
ret
mov
test
inc
adc
ss
jne
lock
sub
rcl
sub
sbb
jecxz
xlat
(bad)
pop
push
test
(bad)
fidiv
add
mov
rol
inc
add
int3
mov
add
mov
inc
cwde
or
inc
pop
adc
mov
jb
call
nop
test
pop
les
out
call
xor
popa
or
adc
test
pop
out
enter
adc
mov
loop
add
sub
(bad)
or
shr
or
in
mov
cs
or
mov
pop
mov
mov
add
jbe
pop
in
push
mov
mov
mov
ret
add
pop
inc
and
mov
sbb
movs
mov
mov
and
les
ficom
outs
xchg
test
inc
call
xor
or
push
sbb
pop
xor
adc
repz
aad
sub
inc
enter
call
sbb
cmp
(bad)
in
adc
(bad)
jmp
aas
mov
inc
in
leave
mov
pop
test
cmp
fucomp
add
adc
(bad)
sbb
mov
dec
and
fdivr
lods
pop
add
inc
push
cld
inc
sti
push
push
test
add
sub
test
mov
jns
xchg
jmp
mov
mov
push
dec
push
fwait
inc
sbb
fidiv
int3
loope
sbb
or
jne
cmp
cld
jbe
jmp
jle
fs
dec
rcr
lahf
add
ins
or
xor
rcr
dec
adc
pop
or
add
test
xchg
sbb
ja
jbe
fsubr
adc
hlt
mov
cmps
jb
enter
nop
inc
xchg
cmp
jle
je
inc
scas
inc
and
retf
shr
enter
mov
call
jecxz
or
dec
in
test
movs
add
loop
popa
data16
in
clc
sar
(bad)
in
dec
or
push
loopne
mov
or
aas
jnp
fstp
add
add
add
imul
aas
sbb
pop
xor
das
aas
ret
dec
cmp
add
add
add
and
xchg
mov
adc
sub
ss
mov
sti
inc
or
(bad)
jnp
xchg
shl
int
inc
clc
adc
je
xchg
and
dec
mov
cmp
mov
fild
mov
push
adc
popf
pusha
xchg
adc
cmp
js
inc
or
repz
inc
cmp
or
sar
xchg
hlt
dec
or
mov
(bad)
pop
jl
loopne
xor
pushf
mov
lock
daa
fld
stos
frstor
xor
aam
adc
ja
hlt
mov
or
jp
(bad)
dec
xchg
xchg
mov
xchg
ins
dec
mov
mov
xchg
or
mov
out
out
sbb
popf
out
or
push
pop
loopne
out
inc
(bad)
aaa
aaa
sbb
and
add
add
add
das
call
sbb
jne
cmps
js
push
jmp
(bad)
add
add
sub
dec
cwde
push
mov
bound
cmp
ja
mov
cwde
push
pop
ins
jmp
rol
add
cs
add
lock
aaa
adc
inc
add
je
les
jne
push
adc
daa
dec
mov
jb
lock
dec
push
and
cdq
enter
mov
inc
dec
call
cmp
sub
mov
push
mov
nop
and
into
mov
lock
mov
xchg
fdiv
mov
clc
fld
lea
out
xor
or
add
test
add
test
sub
push
mov
fs
add
sbb
mov
xchg
dec
inc
es
add
inc
sbb
jmp
jecxz
fidiv
xlat
(bad)
and
imul
or
sbb
mov
sbb
shl
adc
sub
test
xchg
pop
sub
jmp
test
adc
inc
stc
aam
jmp
(bad)
int3
cmp
dec
lock
mov
dec
push
cmp
add
or
xor
push
sar
or
cdq
ja
mul
cmp
test
je
ss
or
cli
add
cld
inc
mov
not
pushf
push
mov
popf
inc
xchg
cdq
(bad)
out
sub
add
jmp
jmp
push
out
lock
or
je
ins
pushf
cdq
dec
cmc
imul
push
add
lea
loop
pop
inc
std
inc
fnstsw
mov
jmp
mov
xor
lock
in
adc
and
movs
js
push
add
pop
lea
push
test
add
jae
jg
adc
je
das
inc
ins
add
xor
add
shr
icebp
rol
pop
fcomip
in
sbb
dec
ss
cmps
mov
dec
push
loop
movs
fisttp
jecxz
fmul
fadd
loope
adc
mov
mul
mov
add
inc
stos
or
adc
xchg
adc
adc
popa
das
sub
add
icebp
popf
inc
cs
push
jmp
in
mov
movs
xchg
xor
test
push
test
rcr
jge
jno
scas
xchg
dec
lods
mov
(bad)
nop
pop
inc
mov
outs
(bad)
(bad)
mov
mov
pop
xchg
mov
mov
adc
(bad)
ja
out
add
repz
and
inc
scas
mov
xchg
(bad)
ja
(bad)
mov
stos
test
or
sub
dec
mov
lods
test
ins
jg
add
or
mov
or
jae
test
fisttp
sub
es
sbb
mov
or
xor
lea
sbb
(bad)
call
cmp
sbb
mov
sub
sbb
rcl
ffree
sbb
call
xchg
lea
stc
pop
mov
movs
push
mov
or
popa
daa
scas
dec
sub
sub
xor
arpl
xor
cmp
leave
pop
push
dec
xor
pushf
dec
jne
xlat
das
dec
mov
imul
dec
sub
mov
clc
push
pop
fadd
test
inc
pusha
mov
imul
movs
push
pop
in
outs
sbb
sub
movs
enter
mov
sub
push
loope
into
sti
call
rcr
inc
clc
outs
sub
push
add
rol
pop
mov
push
fnstenv
cli
lock
cli
and
mov
xor
add
sub
jle
lock
int
adc
call
add
ja
aad
rcr
adc
cli
pop
or
push
loope
cs
and
adc
pop
xor
and
add
push
fcomip
mov
jg
test
pop
add
imul
(bad)
mov
xchg
cld
inc
pushf
fimul
(bad)
aas
imul
push
xor
popf
adc
pop
adc
aam
jnp
outs
jge
scas
int3
mov
aas
int3
xor
cmp
ds
enter
adc
loop
mov
mov
jns
xchg
xchg
dec
les
cs
sar
add
xchg
rol
mov
mov
add
jns
mov
(bad)
mov
aaa
popf
adc
rol
daa
jmp
xchg
push
icebp
sub
out
add
jno
stos
in
push
inc
clc
jns
and
movs
push
push
fcmovbe
xor
hlt
xchg
test
dec
lods
test
sub
cmp
leave
es
xor
test
xchg
add
xchg
ret
jmp
loope
xor
call
cmp
pop
jo
jge
add
movs
and
pushf
xchg
loopne
mov
arpl
test
pop
aaa
jae
test
pop
mov
inc
cmp
aaa
xor
sbb
cdq
in
xchg
xchg
push
cmp
mov
outs
inc
mov
push
sbb
mov
adc
and
sub
sbb
jge
and
int
test
inc
adc
out
js
jo
out
jp
sbb
add
xchg
jo
jl
dec
aas
test
js
cmc
loopne
and
lods
sbb
mov
add
mov
dec
loopne
or
icebp
adc
lea
loopne
rcr
pop
jmp
jb
mov
push
add
das
push
daa
pop
repnz
add
add
add
add
imul
push
push
pop
les
fadd
dec
in
stos
add
mov
mov
jnp
fdivr
and
adc
mov
ret
xchg
push
int
das
ror
ja
pop
inc
and
or
add
pop
imul
icebp
push
lods
arpl
call
pop
popf
inc
hlt
dec
push
mov
xor
mov
mov
inc
xor
push
clc
mov
ret
jg
or
push
mov
sbb
pop
movs
movs
shr
sar
fs
cwde
test
cs
jecxz
pusha
dec
xchg
emms
dec
or
sub
add
adc
dec
movs
add
adc
js
shl
ins
cmp
push
(bad)
and
nop
push
repnz
and
and
lock
lock
les
mov
mov
jecxz
das
aam
jne
mov
pushf
popa
or
pop
adc
(bad)
jmp
push
cmp
test
(bad)
add
(bad)
jbe
mov
rcr
test
add
dec
ficomp
sbb
mov
push
(bad)
out
or
lea
(bad)
shl
xchg
xor
scas
rol
sbb
push
cmp
pop
mov
repnz
(bad)
test
pop
vmovaps
loop
pop
inc
mov
ja
dec
loope
mov
jo
nop
push
in
ud1
push
and
or
sub
sbb
jae
pushf
mov
fmul
pop
add
mov
mov
or
or
call
mov
xor
cdq
xchg
lods
pop
neg
and
inc
push
fcom
(bad)
fdiv
jl
xor
xchg
dec
enter
repnz
lock
es
loopne
scas
aaa
and
into
mov
mov
shl
hlt
or
mov
es
movs
mov
mov
push
add
or
push
pop
mov
test
add
cmp
fsubr
test
xchg
shr
js
rcr
fisubr
add
jmp
or
rol
add
sub
test
aaa
xor
sbb
and
push
das
imul
je
add
dec
add
adc
and
jp
scas
outs
ss
mov
dec
add
xor
enter
sub
loopne
sub
add
add
cmp
or
add
add
add
es
pop
mov
push
inc
cmps
push
push
scas
call
rcl
imul
mul
mov
jg
adc
pop
dec
add
js
lock
and
add
add
(bad)
outs
not
jg
cwde
xor
mov
in
popf
daa
aad
mov
fsub
and
adc
imul
ret
lea
in
in
mov
pop
out
lea
push
in
lea
jmp
inc
lea
pop
test
or
sub
aas
push
or
and
pop
pop
push
or
les
jl
xchg
sbb
or
dec
repnz
int3
mov
(bad)
mov
and
sahf
pop
push
mov
push
mov
jne
sbb
and
add
or
push
mov
mov
xchg
mov
or
pop
aaa
leave
and
mov
or
push
add
adc
inc
cmp
add
add
adc
add
adc
jl
loopne
mov
jo
push
adc
cwde
adc
pusha
jnp
fdiv
xor
dec
leave
push
sbb
dec
pop
fwait
or
movs
sbb
inc
dec
adc
pop
in
popf
inc
mov
mov
add
test
mov
or
inc
inc
adc
out
loopne
inc
sub
inc
inc
push
add
sti
xlat
loopne
movs
cli
pop
mov
lods
fisub
scas
inc
lahf
or
sub
add
sbb
inc
or
push
or
das
hlt
mov
es
hlt
push
cmp
inc
jns
mov
push
push
clc
sahf
and
push
dec
add
mov
add
add
addr16
pop
lods
out
add
imul
xor
lods
and
imul
cld
sub
and
fmul
(bad)
add
inc
inc
add
bound
xor
ud1
outs
retf
fisub
test
fbstp
(bad)
xchg
mov
xchg
sbb
adc
push
cmp
test
in
sbb
mov
push
cmp
xchg
pop
pop
push
(bad)
fnstenv
sbb
mov
js
xor
test
or
inc
cld
neg
adc
or
rcr
dec
rcr
xor
sub
mov
fsubr
adc
and
mov
aam
pop
jnp
cmp
push
fstp
sbb
pop
push
mov
ja
push
jo
mov
mov
imul
or
mov
cdq
pop
fs
(bad)
stos
or
cli
cld
mov
mov
mov
test
cld
inc
mov
push
nop
cmp
mov
push
movs
cmp
xchg
mov
push
mov
xor
xor
enter
nop
not
ret
sar
sub
mov
shr
test
mov
cmc
movs
mov
mov
shr
jmp
mov
add
and
mov
inc
ror
xchg
fs
mov
adc
sbb
movs
sbb
add
inc
sub
mov
mov
xor
xor
xchg
add
mov
mov
neg
adc
daa
pop
dec
(bad)
lods
jne
sar
adc
test
mov
xchg
movs
xor
inc
movs
add
rol
dec
es
pop
mov
jo
fmul
or
sub
nop
mov
retf
and
sbb
and
mov
or
pop
mov
(bad)
enter
lea
mov
sbb
sbb
arpl
test
sbb
mov
idiv
mov
pop
push
or
shl
ror
enter
je
add
sbb
mov
add
aas
mov
xor
sbb
in
dec
mov
nop
lahf
dec
mov
mov
mov
sbb
mov
push
pushf
movs
inc
stc
in
lea
mov
jae
xchg
adc
test
mov
xchg
mov
add
shl
fld
cli
fld
(bad)
xlat
or
fdiv
sbb
(bad)
scas
sbb
rcr
pop
cmp
or
mov
and
sub
jbe
daa
and
clc
jl
(bad)
sti
sub
or
jmp
rcl
lea
ficom
pusha
push
or
test
mov
jno
in
add
test
jle
add
int
dec
lods
movq
fwait
lods
pavgb
mov
ret
sub
scas
ja
add
push
push
sbb
mov
lock
pop
arpl
xchg
fisub
fld
aaa
mov
fisub
or
lods
mov
sub
nop
mov
pop
cmp
popa
rcr
push
js
mov
sar
or
add
loope
repz
(bad)
sub
cmps
sbb
outs
sbb
jne
dec
in
pop
lea
in
sub
mov
(bad)
mov
lea
mov
jnp
or
loopne
lea
and
das
fwait
sbb
xor
test
leave
mov
lods
stos
adc
outs
mov
xchg
rol
or
and
pop
push
jbe
fsubr
push
xor
add
xor
or
jg
test
jg
(bad)
cmp
mov
mov
add
inc
arpl
push
and
fisttp
daa
pop
and
xchg
arpl
je
ins
add
daa
push
add
jbe
xlat
pop
inc
pop
dec
mov
outs
jbe
pop
add
stos
or
adc
jge
ins
push
push
add
pop
add
out
dec
or
jbe
into
je
or
xor
push
adc
outs
fbstp
add
sub
pushf
inc
push
add
test
or
fwait
jg
cmp
push
fwait
shr
call
cmp
outs
ja
loopne
(bad)
arpl
jae
cmp
inc
test
or
adc
pop
or
add
fiadd
sbb
ins
imul
sbb
mov
inc
dec
ss
xchg
push
in
sbb
ja
mov
adc
test
sub
mov
jle
ss
jne
mov
dec
xor
dec
addr16
bound
cmpxchg8b
and
int3
sti
or
push
push
adc
jle
push
or
pushf
out
test
push
push
sbb
dec
inc
sub
lods
mov
push
and
(bad)
lods
push
and
xchg
nop
lock
jo
pop
and
fwait
push
push
dec
ret
je
adc
ins
pushf
lock
fidiv
fld
sbb
fnstsw
sahf
lods
repz
nop
mov
mov
or
add
fimul
(bad)
and
in
sbb
mov
or
arpl
ret
paddusb
lea
adc
and
hlt
mov
mov
or
sub
daa
and
jo
lar
jl
dec
test
repz
and
lea
adc
push
ret
add
daa
push
jmp
jecxz
nop
(bad)
dec
shl
push
mov
or
dec
pop
lock
mov
pop
sub
xchg
aad
hlt
test
or
mov
push
xor
int
movs
mov
mov
add
or
or
das
push
bound
(bad)
and
sub
add
pop
and
adc
ret
(bad)
aas
add
sub
pop
mov
cmp
jne
push
mov
sbb
adc
stos
add
mov
rol
fisttp
inc
(bad)
pop
and
nop
lods
jle
dec
mov
xor
adc
imul
add
movs
xchg
ror
add
add
repnz
push
xchg
enter
or
push
iret
mov
and
or
retf
sbb
and
sub
push
or
sub
xor
or
cmp
repnz
out
inc
push
dec
dec
int
sahf
cmps
(bad)
push
push
or
pop
cld
adc
push
cwde
outs
xchg
mov
sub
adc
adc
xlat
fld
adc
jmp
adc
stc
nop
or
rol
addr16
push
jmp
inc
jle
fnstcw
dec
in
mov
test
clc
push
push
rol
push
sub
pop
fmul
repnz
mov
sbb
mov
loope
jmp
mov
adc
scas
lahf
adc
cmps
popf
cmc
(bad)
or
pop
and
mov
(bad)
push
add
(bad)
mov
aaa
adc
push
je
jecxz
adc
add
dec
mov
adc
jmp
nop
pop
add
add
jmp
and
sub
inc
out
mov
test
sub
test
loopne
or
shr
lods
test
pushf
inc
ror
fadd
das
rcr
mov
inc
and
mov
xchg
sbb
adc
loopne
add
icebp
push
popf
adc
mov
(bad)
jb
mov
test
jo
add
push
outs
adc
(bad)
fcom
scas
outs
dec
lods
dec
pop
inc
repz
xor
cmps
ret
in
ror
jg
add
imul
adc
inc
and
loope
add
push
push
int
sbb
lods
lea
sbb
lods
or
mov
xlat
js
rol
xchg
cmps
push
pusha
add
xor
push
inc
test
sub
in
xchg
add
fnsave
mov
loop
push
add
push
push
lods
dec
adc
test
and
shl
leave
xor
je
js
mov
push
jns
fidiv
loopne
loopne
test
dec
js
int3
xor
mov
inc
add
and
sar
inc
sub
int
sbb
rcr
in
push
fist
ins
xor
inc
int3
test
jecxz
or
inc
jnp
xchg
shl
out
in
add
push
or
add
(bad)
les
seto
or
sbb
shr
jge
push
in
cmp
in
cmp
push
scas
jge
pop
push
nop
adc
mov
and
enter
push
nop
add
jb
inc
lock
lods
jns
sbb
and
sbb
add
test
push
in
xor
jge
movs
in
cmp
fs
or
mov
adc
jmp
in
add
or
push
shl
inc
loopne
ret
pusha
(bad)
fistp
xchg
sbb
dec
push
jb
mov
retf
loopne
inc
push
or
push
stos
dec
jg
mov
inc
and
pop
inc
xor
(bad)
fld
ss
fistp
push
push
add
adc
push
cmp
pop
dec
aam
js
jg
cs
jg
bound
mov
(bad)
pop
neg
add
in
ret
addr16
add
dec
add
pop
and
add
ret
sub
scas
xchg
movs
ss
push
aaa
scas
mov
push
pop
test
loopne
call
push
inc
inc
arpl
mov
dec
dec
inc
cmp
bnd
xchg
ss
add
je
push
and
ret
ins
adc
imul
pop
dec
and
outs
xchg
imul
test
mov
sub
add
dec
push
outs
adc
sub
or
rol
mov
mov
(bad)
push
das
int3
push
dec
push
sbb
add
add
pop
jns
sub
sbb
sub
sub
mov
or
or
inc
clc
and
sub
push
jne
popa
pusha
push
and
add
or
and
lds
out
cmp
ror
sbb
dec
retf
sar
pop
test
pusha
pop
or
xchg
add
fstp
lock
ins
mov
movs
pop
xchg
or
adc
add
cmc
sub
mov
push
push
fmul
bound
loope
pop
jb
(bad)
adc
das
call
push
and
mov
jns
pop
sub
jmp
pop
mov
ja
sbb
push
pop
cmc
xchg
add
sub
sub
add
mov
cmp
scas
pop
mov
jbe
jge
jno
iret
push
gs
cmp
das
dec
aam
addr16
jo
push
xor
sbb
inc
pop
push
test
pop
and
cmp
add
repnz
sub
mov
enter
xchg
xor
xor
fbld
cwde
add
push
or
ins
mov
push
push
jecxz
sbb
jle
jp
enter
iret
je
pushf
xor
xor
in
mov
or
test
loop
dec
add
scas
push
rol
call
xor
in
mov
push
xor
mov
push
xchg
and
add
and
and
call
js
sub
das
jg
push
sbb
push
add
dec
or
pop
push
jp
xor
pop
adc
sti
cmp
jne
add
rol
jo
and
outs
add
ja
cmp
outs
jg
jne
bound
aas
test
imul
pop
push
stos
xor
mov
fld
add
das
ss
jmp
adc
xlat
aam
inc
xchg
adc
and
popa
retf
arpl
ja
adc
pop
push
dec
fst
repz
mov
in
pop
pop
add
jne
push
imul
sub
push
sar
mov
(bad)
push
jb
fimul
or
ss
pop
arpl
sbb
(bad)
lahf
add
and
(bad)
leave
aaa
adc
fs
add
sbb
popf
inc
xlat
and
sbb
inc
push
jp
lods
or
sub
mov
add
cmp
jns
push
arpl
adc
and
add
retf
inc
ins
lahf
xor
sub
dec
jbe
lods
dec
pop
popa
push
aaa
aas
pop
or
lods
es
pop
and
aaa
push
push
mov
stos
inc
and
arpl
lahf
add
sbb
push
int
or
ins
fild
cmp
add
mov
push
and
popf
das
ja
push
adc
xor
push
lock
dec
pop
jecxz
push
in
push
out
mov
es
adc
and
ds
fnstenv
push
pop
call
xchg
scas
push
dec
dec
jbe
pusha
repz
imul
fneni(8087
inc
xchg
jle
adc
js
fcomi
mov
fcomp
clc
push
mov
es
out
(bad)
push
clc
pushw
test
push
call
jle
rep
pop
xor
ja
repnz
icebp
push
and
(bad)
imul
(bad)
hlt
push
jo
outs
mov
fdiv
push
mov
ss
push
lock
clc
fisub
push
sbb
xchg
pop
mov
push
lods
push
sbb
ss
adc
fistp
and
adc
test
dec
add
fs
outs
cmp
dec
fld
fadd
sub
push
cli
test
data16
(bad)
aam
push
xor
xchg
and
push
mov
loope
add
push
popa
outs
loop
and
gs
pop
dec
xor
xchg
and
test
imul
push
xchg
or
je
pushf
mov
repnz
pop
fadd
xor
mov
outs
je
outs
ins
movs
and
mov
jne
outs
es
dec
adc
inc
test
and
jl
sti
mov
ins
addr16
push
jb
push
mov
adc
dec
imul
gs
mov
mov
ss
mov
jge
add
dec
cmp
mov
add
push
xor
adc
adc
imul
dec
les
adc
imul
xor
inc
mov
imul
ins
int3
sub
rcl
iret
inc
aaa
fadd
fsubr
adc
ret
or
ret
xor
adc
add
or
inc
outs
jl
add
sub
loope
jo
in
pop
xor
daa
push
loopne
nop
ins
div
xor
aaa
adc
cmp
push
arpl
and
daa
sub
repnz
inc
jne
sar
sub
xor
add
mov
sub
xor
mov
add
dec
lock
mov
in
dec
add
mov
ins
pop
add
mov
or
inc
out
cmp
inc
addr16
mov
and
cs
(bad)
mov
mov
hlt
ss
test
cmp
mov
dec
test
add
and
cmc
xor
sub
add
jle
pop
hlt
mov
test
add
cmp
add
(bad)
mov
mov
retf
ins
bound
jb
push
shl
aaa
ins
inc
scas
loopne
je
fcomp
mov
mov
mov
or
(bad)
popf
aad
mov
call
adc
in
ficom
and
add
popa
jmp
stc
aaa
clc
add
leave
imul
push
mov
and
add
pop
cmp
fwait
outs
imul
and
add
out
les
xor
mov
push
jbe
ins
push
push
dec
and
sbb
add
lods
and
and
add
mov
inc
dec
fisubr
sbb
mov
pop
adc
dec
adc
push
jbe
and
jo
pushf
adc
adc
add
sbb
imul
ss
pop
mov
stos
rcl
sbb
adc
inc
test
mov
inc
lock
sub
sbb
jb
out
xor
lods
mov
mov
push
mov
std
aas
xchg
gs
jo
add
fadd
jl
fcomp
fdivrp
jno
rcr
imul
cwde
bound
cmp
inc
lds
xchg
mov
inc
mov
jg
cmp
pop
rcl
mov
or
mov
das
pminub
pusha
pop
jno
dec
sub
mov
ror
push
inc
or
ret
mov
and
mov
add
test
adc
outs
push
outs
fisubr
imul
or
ds
iret
clc
adc
xchg
pop
jmp
sbb
arpl
lock
inc
fs
fnstenv
lods
adc
inc
nop
enter
and
adc
jmp
or
je
scas
cmp
or
mov
inc
daa
mov
mov
add
mov
push
mov
xor
mov
add
out
mov
ss
mov
push
sar
inc
add
pop
dec
cmps
jne
sbb
cmp
xor
pop
cmp
dec
add
add
adc
and
add
add
add
aas
dec
add
loopne
inc
cld
pop
je
xchg
dec
add
jnp
adc
mov
push
out
and
ins
push
sub
out
xchg
jp
or
or
and
jge
mov
je
inc
ret
push
mov
mov
loope
cwde
or
daa
pop
scas
sub
add
push
inc
js
leave
sub
sub
hlt
xchg
xchg
or
mov
sub
xor
rol
outs
sbb
pop
gs
gs
inc
fsubrp
mov
out
cli
outs
mov
pushf
push
mov
rcl
and
push
aaa
and
repz
dec
jmp
dec
enter
xchg
adc
push
xchg
lock
cmp
adc
inc
sbb
inc
add
or
add
and
ror
xchg
jae
dec
hlt
outs
add
push
pop
test
push
les
mov
dec
rcl
inc
xchg
add
fcmovnb
loopne
pop
fsub
rcl
loopne
add
push
movs
call
outs
xchg
fsub
lahf
fsub
or
adc
push
dec
cdq
inc
cmp
lahf
sub
jb
loopne
push
nop
in
dec
mov
(bad)
xchg
test
pop
mov
enter
xor
test
cmp
test
and
and
pand
cwde
mov
add
adc
loope
push
lahf
xor
cs
addr16
sbb
and
push
js
xchg
cs
add
nop
mov
fwait
loopne
and
ror
fiadd
push
add
fmul
add
(bad)
pop
mov
sub
push
mov
ja
cld
nop
pop
add
arpl
xor
sbb
add
inc
adc
push
push
fiadd
add
push
mov
xor
or
jge
xchg
mov
pop
scas
scas
aaa
xor
pop
push
sbb
inc
inc
ds
out
push
and
add
dec
aas
jbe
cdq
div
inc
ss
pop
pop
mov
sub
fiadd
fidivr
cmp
cmps
inc
jb
stc
push
add
dec
add
inc
sbb
add
cs
in
call
add
or
lock
dec
sub
mov
push
clc
jne
mov
jno
cdq
sub
inc
xchg
adc
aaa
add
fstp
popa
stos
inc
add
cmp
jo
lock
aas
and
xor
sub
cmps
outs
aas
jae
scas
shl
cs
dec
add
cmp
push
out
pop
xor
out
and
mov
dec
sub
ret
pop
add
clc
push
pop
add
out
inc
retf
xor
or
out
and
aas
mov
aaa
xor
call
push
adc
scas
cmps
add
shr
mov
or
cmp
dec
cwde
sub
mov
sub
push
or
aaa
scas
call
or
or
add
or
add
mov
clc
sbb
dec
neg
pop
or
push
dec
sahf
add
adc
push
or
lds
xor
fist
sub
add
fadd
dec
adc
adc
add
add
stos
mov
xchg
aaa
in
xchg
rcr
mov
(bad)
jle
mov
xchg
add
aas
and
mov
int
adc
push
out
loop
(bad)
out
mov
out
sub
sub
vmread
dec
in
int3
mov
mov
jge
ror
pop
adc
push
cld
in
jg
pusha
movs
xor
lock
ret
cmps
sub
pop
sub
cwde
movs
adc
add
enter
xchg
mov
push
and
out
scas
add
inc
in
sub
xor
shr
imul
dec
dec
sub
sub
rcl
shr
rcl
lods
mov
sub
inc
inc
add
in
push
add
retf
sub
lock
dec
bswap
or
push
int3
add
or
lods
pop
out
xchg
ret
jg
cmp
add
or
sub
test
inc
imul
mov
dec
mov
scas
add
lock
mov
fwait
jo
std
loop
call
and
add
fs
dec
outs
daa
dec
fs
in
dec
push
cdq
int3
push
cwde
mov
sub
fild
imul
not
cmc
call
mov
and
into
cmp
iret
add
ins
daa
jbe
pop
daa
mov
sbb
mov
ds
mov
rcl
inc
add
adc
rcl
out
sub
inc
test
push
nop
popf
and
mov
sbb
sbb
das
mov
pop
cld
js
jne
xchg
jo
loopne
mov
outs
mov
ins
adc
or
jle
push
sub
xchg
xchg
jns
fcomp
and
add
mov
cmp
mov
push
mov
mov
dec
push
dec
pusha
pop
inc
inc
push
mov
test
inc
out
mov
sbb
rcr
js
je
push
push
inc
fsub
loopne
add
xor
inc
inc
adc
inc
xor
dec
sub
je
jb
push
and
sub
dec
ror
push
lds
clc
imul
cmp
stc
shr
popa
shr
push
push
or
inc
sbb
push
ins
imul
pop
loope
and
push
enter
cwde
or
add
push
push
arpl
cmps
loop
scas
pusha
push
pop
mov
cwde
(bad)
shr
push
call
jle
push
inc
xchg
mul
ins
pusha
add
in
jo
shl
rcl
pop
pop
sbb
sbb
add
adc
or
and
mov
cs
push
adc
fstp
add
or
mov
add
add
mov
repnz
movs
xor
jp
jne
dec
in
push
lods
sub
or
pop
jg
fs
outs
cli
arpl
dec
adc
mov
retf
mov
cmps
jg
pop
inc
push
outs
sbb
pop
fwait
dec
jne
stc
cmp
daa
or
(bad)
pusha
(bad)
dec
lea
add
inc
ror
jb
add
test
daa
fiadd
push
test
sbb
inc
scas
inc
mov
rcr
repz
xor
and
xlat
gs
psllw
and
js
enter
in
add
adc
and
xor
inc
shr
sub
xchg
rol
aaa
dec
jo
or
cwde
add
or
add
pop
rcl
add
and
mov
movs
pop
fcom
(bad)
mov
lods
(bad)
mov
mov
push
sbb
inc
xor
fucomi
lock
xchg
aaa
jae
sbb
lahf
fwait
das
rcl
mov
mov
jge
outs
and
adc
stos
stos
lods
mov
fbld
popa
mov
xlat
xchg
fadd
loope
cmp
or
out
jmp
xchg
ss
stc
cmc
xor
test
xor
test
or
adc
lock
imul
xchg
shl
arpl
adc
dec
or
or
add
retf
test
dec
add
fidiv
stc
adc
mov
add
cmps
pop
mov
mov
sub
sub
or
xor
pop
mov
and
loope
sahf
mov
(bad)
and
xor
sbb
test
cmps
push
mov
push
movs
mov
sahf
(bad)
xor
xor
jl
and
movs
adc
pop
movs
push
mov
icebp
xchg
mov
adc
adc
and
push
push
pop
mov
outs
js
mov
inc
jne
sbb
sub
adc
mov
lock
shl
cmp
cmps
adc
cwde
ins
in
xchg
jns
sbb
push
enter
in
in
xor
and
sub
sub
xor
push
pop
scas
in
stos
mov
adc
sbb
js
sbb
jno
and
mov
lods
aas
js
or
(bad)
pop
repnz
adc
cmpxchg
pop
jns
jb
js
cli
xor
cmp
sbb
inc
sahf
pushf
pushf
mov
daa
and
clc
cmp
push
push
cmp
bound
dec
je
test
xor
std
add
adc
push
xor
fs
pop
test
adc
mov
data16
or
xchg
(bad)
xlat
dec
je
dec
xor
inc
mov
mov
jne
sbb
inc
rcl
jb
sub
retf
or
mov
xchg
jmp
leave
xchg
sbb
pop
inc
inc
xchg
punpcklbw
scas
and
add
add
add
sbb
xchg
jnp
mov
je
or
cld
sbb
movs
xchg
bound
push
or
ins
les
mov
rcl
adc
pop
inc
adc
or
xchg
les
pop
mov
je
mov
lahf
jle
ins
inc
and
cmps
das
push
mov
add
inc
adc
imul
sbb
cmps
and
pop
and
inc
sub
mov
add
inc
pop
add
pop
mov
call
js
in
or
xor
mov
pop
push
push
scas
push
leave
xor
inc
in
inc
fs
je
cli
adc
inc
adc
dec
push
dec
dec
xchg
fcomp
add
pop
popa
adc
push
fwait
test
add
pop
inc
cwde
ins
movs
rcr
loopne
arpl
add
aam
mov
dec
xor
arpl
pop
shl
pop
cmp
xlat
dec
clc
jg
cmp
gs
hlt
inc
nop
imul
pop
adc
and
aaa
or
stos
and
mov
jle
adc
in
arpl
dec
jmp
bound
div
inc
and
jo
lea
xor
mov
mov
cmp
jo
xchg
inc
jg
cwde
add
cdq
test
and
or
fdivr
ja
adc
mov
inc
sbb
addr16
cs
push
xchg
lock
imul
and
lea
js
loope
jmp
pop
movs
dec
mov
pusha
xchg
(bad)
imul
movs
mov
and
pop
cdq
jo
ins
fs
adc
inc
and
(bad)
test
jp
bound
dec
enter
jno
mov
ins
mov
or
in
jae
pop
and
mov
add
or
(bad)
out
ror
cmp
lds
or
icebp
dec
sbb
add
pop
lods
mov
jno
jns
shl
je
inc
pop
int3
and
mov
xchg
jmp
adc
xor
add
push
js
or
fist
xchg
or
or
call
cmp
ja
cmp
retf
lea
xor
inc
add
and
dec
mov
inc
jno
or
sub
retf
adc
pop
es
cmp
push
add
fwait
lea
iret
outs
ja
push
inc
sahf
pusha
nop
mov
mov
inc
enter
mov
xor
or
push
icebp
and
ins
jne
and
or
in
push
jmp
pusha
jg
sub
add
mov
cmp
outs
arpl
jmp
hlt
pop
mov
and
and
mov
cld
mov
cmp
fiadd
pusha
or
cmp
add
clc
mov
and
dec
aaa
add
in
icebp
mov
mov
aam
inc
adc
adc
dec
ror
jp
fdivr
mov
add
jbe
push
add
or
add
cmp
push
data16
pop
jo
jns
loopne
pusha
scas
sub
loopne
pop
dec
sub
push
cmp
mov
dec
sub
xchg
ds
adc
jne
cmps
sub
pop
and
loope
push
std
push
dec
inc
popf
mov
mov
mov
adc
jl
ret
and
mov
xchg
jb
mov
sub
pop
or
ss
test
jae
or
test
(bad)
jmp
push
dec
(bad)
or
mov
in
movs
gs
xchg
out
mov
or
inc
mov
and
push
fadd
inc
mov
xchg
push
pusha
rol
scas
and
aam
mov
int
cs
jno
and
pop
adc
stos
mov
add
outs
mov
shl
cmc
fstp
adc
pusha
call
adc
pop
jo
jg
adc
sub
je
sbb
sub
cmp
jb
xchg
adc
push
test
or
in
adc
imul
push
mov
in
xor
pop
xor
pop
fisttp
adc
jge
add
jns
mov
pop
popf
adc
add
pop
push
cmp
daa
mov
mov
inc
push
mov
add
test
push
jmp
inc
call
xchg
aaa
sbb
push
stos
repz
ins
cmp
popf
test
mov
add
fistp
add
fild
jmp
pop
pushf
fisubr
sti
mov
(bad)
mov
pop
xchg
or
mov
fcom
addr16
or
pop
mov
pop
fs
inc
sbb
sub
fisttp
ret
sbb
jl
mov
in
test
pop
lahf
mov
pushf
je
add
adc
gs
mov
movs
mov
or
outs
jo
nop
xchg
add
test
xchg
sti
cmp
or
push
std
or
inc
aas
sbb
jne
mov
add
or
or
call
scas
jnp
in
cmp
adc
mov
and
mov
jmp
jns
movs
mov
pusha
test
lock
xchg
scas
(bad)
mov
ja
js
mov
add
mov
or
xchg
shr
cmp
pop
lahf
and
push
dec
test
add
sbb
leave
mov
or
aam
ins
cmp
and
inc
rcr
adc
cld
call
icebp
dec
jbe
rol
and
ss
fsub
and
idiv
lea
test
jmp
in
jnp
ja
nop
push
addr16
data16
add
mov
sbb
xchg
and
rol
sar
add
push
aas
or
inc
jmp
and
push
test
jmp
ss
jns
jo
loopne
push
and
aaa
aaa
or
sub
inc
fiadd
add
pop
mul
imul
pop
jno
(bad)
sub
movs
add
inc
and
inc
jno
adc
push
mov
add
add
jg
xor
xchg
xchg
pop
cmp
nop
pop
push
cmps
or
dec
pop
xor
or
inc
or
xor
lods
loop
pop
adc
and
fimul
(bad)
sbb
add
or
cmp
xlat
push
xor
xor
cld
idiv
es
add
mov
cmp
cmp
inc
js
sti
sbb
cmp
test
sbb
pop
dec
mov
dec
add
iret
jl
push
mov
sub
pop
mov
add
(bad)
outs
mov
daa
aaa
or
or
shl
daa
xor
inc
rol
mov
test
sub
data16
arpl
imul
mov
dec
jo
xchg
add
jae
out
pop
(bad)
and
xor
mov
add
or
(bad)
imul
or
add
dec
hlt
pop
push
add
sbb
jb
aaa
bound
xchg
push
inc
pop
(bad)
shl
(bad)
lahf
ja
out
retf
add
push
pop
jae
jp
fistp
mov
xchg
and
jnp
inc
push
ds
add
cmp
and
jg
sub
push
pop
imul
(bad)
xor
cmp
push
and
or
add
push
mov
pop
dec
add
arpl
and
add
push
sbb
repz
pop
adc
pop
add
push
cmovae
idiv
clc
pop
add
cld
mov
aaa
loop
sbb
or
xor
lea
mov
out
jge
xchg
(bad)
sti
ins
pop
mov
jo
jno
mov
ins
call
stc
ins
push
jle
push
je
jo
cmps
loopne
jb
je
push
adc
loopne
js
sbb
aas
jl
loopne
xor
loopne
cmps
or
or
sti
cmp
mov
sar
add
test
jg
fwait
inc
std
xor
ins
xchg
mov
and
inc
ja
lock
test
sbb
inc
jg
add
test
add
mov
ret
les
test
pushf
or
loope
add
push
mov
aas
add
cmp
les
mov
je
rol
cs
pop
mov
sub
push
call
retf
push
mov
and
cs
sar
pop
icebp
push
and
or
mov
in
pop
cdq
or
enter
inc
jl
adc
dec
mov
pop
mov
and
les
xor
mov
xor
int
mov
add
js
fild
jge
mov
or
add
ror
clc
and
xchg
cmps
or
ins
hlt
js
add
mov
imul
lods
xor
cmp
mov
hlt
in
inc
rcl
int
cwde
mov
int3
pusha
sub
sbb
mov
cmp
fs
repz
sub
inc
or
xor
sub
xor
movs
repz
mov
and
add
sbb
ror
iret
sbb
xchg
clc
mov
rcr
lock
adc
int
je
pushf
lods
dec
dec
cmps
jmp
icebp
adc
mov
ffreep
clc
cmp
adc
lea
(bad)
jne
cmp
pushf
mov
xor
push
movs
lods
sbb
xchg
add
sub
xor
fcmovne
adc
nop
cmp
pop
(bad)
cmp
pusha
clc
push
call
inc
outs
push
inc
int3
xor
mov
mov
mov
mov
xor
or
je
mov
inc
inc
adc
push
add
adc
push
movs
pop
(bad)
cmp
adc
xchg
js
mov
into
push
mov
shl
mov
push
cwde
adc
imul
sti
xor
xchg
je
mov
and
dec
and
add
dec
bound
mov
xor
push
or
lods
push
cmp
loopne
xchg
xor
jae
cmp
mov
(bad)
std
or
add
add
push
and
or
xor
inc
lahf
fadd
fs
fistp
cwde
mov
inc
cmp
add
add
in
or
push
(bad)
rcr
movs
sbb
dec
pop
fs
test
(bad)
in
pop
and
pop
loope
xor
das
jne
out
push
dec
rol
or
xchg
jo
pop
stos
mov
or
mov
add
pop
sub
and
sbb
inc
pushf
dec
mov
sbb
loopne
add
sbb
sub
pop
call
inc
retf
jge
mov
xor
and
mov
pop
outs
aas
xlat
mov
adc
mov
pop
lahf
xor
mov
shr
mov
rol
stos
dec
pop
inc
jo
addr16
mov
jmp
jno
sub
mov
ss
ja
and
rol
add
test
inc
mov
add
fcmovb
adc
aaa
inc
xor
pop
dec
inc
fidivr
push
mov
inc
mov
lds
mov
and
inc
dec
arpl
pop
and
gs
rcl
dec
add
pop
adc
pop
jecxz
push
xchg
(bad)
or
jae
leave
dec
add
sbb
test
xchg
cli
mov
jg
js
adc
sub
mov
sbb
mov
and
xor
nop
mov
mov
stc
stos
ja
mov
and
adc
adc
nop
pop
xchg
fbstp
pop
push
fadd
call
bound
(bad)
and
inc
fsubr
adc
jb
mov
lea
xor
les
fsub
mov
xchg
adc
fwait
xchg
movs
or
mov
mov
push
lods
shr
in
mov
rcl
mov
lock
and
mov
sbb
addr16
and
fs
sub
jbe
push
adc
mov
icebp
dec
sub
popa
xor
sub
and
mov
mov
adc
pusha
mov
and
add
test
mov
xchg
mov
dec
push
cmp
ret
ret
cdq
add
inc
pushf
mov
cmp
in
xchg
xor
fiadd
xor
lds
add
push
out
push
push
sub
mov
bound
pop
pop
push
inc
push
adc
and
arpl
inc
daa
sub
nop
mov
pusha
mov
inc
mov
std
loopne
and
mov
xchg
jge
and
and
dec
push
jae
push
and
mov
shr
dec
dec
or
popf
mov
add
jmp
xor
and
jns
or
add
ja
adc
enter
adc
arpl
mov
mov
xor
les
add
jecxz
xor
mov
sbb
test
xchg
adc
xchg
mov
inc
pushf
mov
or
add
or
inc
or
cmc
push
adc
push
mov
cld
sbb
add
retf
mov
push
xor
adc
xor
add
push
cmp
mov
xchg
mov
jmp
movs
clc
aaa
lea
sbb
out
push
and
mov
mov
xor
sub
dec
sar
call
mov
xchg
xchg
call
adc
sahf
das
add
(bad)
das
mov
or
push
test
imul
dec
das
mov
and
add
inc
mov
test
test
push
imul
inc
jns
adc
mov
enter
add
mov
xor
(bad)
push
jbe
inc
jl
inc
scas
xor
clc
cmp
dec
adc
scas
je
popf
add
enter
mov
imul
adc
cmps
aaa
jns
adc
int3
test
(bad)
push
or
mov
add
xchg
addr16
xor
js
push
dec
dec
or
in
or
xchg
nop
jnp
xor
xchg
push
sbb
mov
push
xchg
push
sbb
sbb
dec
and
cs
add
loope
pusha
sub
mov
jecxz
jp
fstp
xchg
fisttp
(bad)
popa
mov
pusha
lds
clc
shl
mov
sbb
outs
sub
sbb
mov
mov
out
pop
sbb
sbb
mov
cmp
and
jl
sbb
rcr
jo
test
push
cmps
dec
lock
ss
shl
mov
jecxz
arpl
xor
push
xor
xor
mov
(bad)
call
fidivr
call
xor
jg
aam
add
mov
or
mov
and
inc
jnp
or
add
das
sub
ror
lahf
mov
xchg
add
pusha
rcl
cmps
inc
mov
xchg
push
lea
or
xor
inc
mov
imul
aam
test
mov
(bad)
mov
dec
in
in
addr16
inc
cs
adc
ret
adc
push
leave
xchg
or
ret
push
adc
or
adc
sbb
sub
(bad)
ja
fisttp
add
mov
pop
inc
add
movs
movs
pop
push
out
ds
adc
inc
mov
inc
and
inc
repnz
add
pusha
inc
mov
pop
test
and
cs
adc
dec
xor
loopne
sub
mov
xchg
cs
mov
aas
adc
xor
imul
imul
inc
int3
dec
retf
add
xchg
jbe
(bad)
outs
sub
sbb
daa
mov
movs
pop
sbb
or
fadd
test
fdiv
fsubr
sub
or
les
cmp
(bad)
jg
icebp
retf
hlt
xor
mov
jo
or
add
xor
push
mov
xor
aam
daa
mov
leave
cli
(bad)
mov
dec
lea
adc
xchg
shr
aas
inc
lock
dec
ins
sub
lock
xchg
call
cmc
in
push
mov
aad
loop
push
movs
sub
and
sub
bound
in
cwde
xchg
les
in
shl
leave
cmp
push
adc
in
call
xor
(bad)
int3
fstp
lea
jno
add
lds
daa
push
adc
lahf
or
call
pop
mov
dec
push
jns
mov
xor
test
jl
inc
cmp
jne
les
rol
repnz
call
cld
fist
pushf
push
add
andnps
inc
pushf
in
pushf
cmp
into
cwde
add
ret
add
fcomi
add
add
add
push
fst
xchg
push
push
pop
inc
loope
enter
push
add
addr16
add
popf
out
call
and
xor
(bad)
xor
mov
out
add
shl
fild
loope
popa
xchg
std
movs
jbe
xchg
(bad)
les
clc
jae
imul
push
inc
out
push
cwde
pop
mov
stos
or
sub
jne
pop
loopne
add
das
sbb
aas
dec
add
test
cmp
push
loopne
adc
cmp
popf
adc
fs
and
dec
sahf
push
push
jnp
push
mov
jno
adc
shl
test
ds
stos
jg
movaps
shl
and
fistp
and
lods
pop
lods
loopne
pushf
push
movs
pop
ret
inc
imul
dec
loopne
fadd
es
and
clc
sahf
in
aaa
mov
les
fwait
dec
add
lea
call
pop
add
xchg
clc
mov
jmp
rcr
shl
and
add
bound
xor
loopne
shl
cmp
mov
aam
loopne
rcr
push
and
mul
mov
jo
ret
add
add
and
mov
(bad)
and
mov
aam
fwait
add
mov
(bad)
push
enter
mov
mov
stos
pop
mov
adc
adc
or
das
add
cmp
cmp
pop
sub
mov
ret
inc
adc
mov
hlt
jecxz
and
cmps
cld
xlat
mov
sar
sub
or
jbe
cmc
inc
sub
mov
and
jbe
lods
arpl
cmp
adc
loop
inc
add
ins
push
lahf
test
sub
sti
pop
add
or
add
add
mov
mov
push
and
pop
arpl
mov
and
jg
mov
not
and
pop
dec
lods
bound
inc
mov
mov
xchg
and
addr16
or
push
xor
outs
pop
or
jecxz
sub
cs
sbb
adc
pop
add
aas
push
add
or
outs
out
inc
adc
xchg
lods
mov
fwait
arpl
gs
pop
mov
les
loopne
sub
xchg
add
pop
or
aas
shl
and
ret
mov
inc
fistp
mov
inc
daa
aaa
push
push
push
sbb
and
xor
jg
xchg
clc
push
mov
loopne
fs
add
and
mov
sbb
arpl
call
sub
lods
pop
cmp
and
xor
add
inc
pushf
xor
add
inc
fsubrp
retf
sub
outs
adc
ja
adc
cmp
dec
rol
jne
fild
add
xchg
outs
add
imul
jmp
jb
call
mov
test
push
int3
es
sbb
imul
xor
leave
mov
push
add
xchg
jg
mov
or
adc
fsubr
mov
lds
ret
and
movzx
push
les
iret
cs
inc
and
ins
jbe
js
adc
jmp
dec
push
leave
push
mov
and
jno
jmp
push
dec
addr16
popa
jl
dec
aas
ins
xchg
push
push
out
add
xchg
add
cdq
or
xchg
outs
test
(bad)
or
movs
mov
pop
mov
dec
lea
ds
dec
ror
movs
cmp
out
mov
add
ds
add
js
cmp
sbb
xchg
jmp
push
repz
push
lock
cmc
pop
neg
push
push
xchg
add
inc
adc
inc
push
xor
(bad)
cmp
push
sbb
aas
jecxz
mov
fbstp
xor
push
jle
dec
sbb
push
pop
push
scas
cmp
add
pop
sbb
retf
add
pusha
or
xchg
sub
aam
push
and
xor
and
inc
add
adc
or
xlat
pop
mov
xlat
pop
push
cmps
pop
sbb
mov
add
call
xor
je
dec
or
add
fmul
aaa
adc
dec
or
push
adc
(bad)
enter
or
enter
push
pop
add
jb
loop
ror
mov
movs
jmp
lahf
in
and
test
mov
mov
pop
cmps
out
mov
xchg
cmp
jmp
push
loopne
dec
xchg
sub
add
cld
sub
(bad)
jg
inc
add
add
adc
cmp
(bad)
(bad)
sbb
xor
ins
ret
inc
xor
push
add
dec
iret
sbb
mov
dec
dec
pusha
or
cmp
add
(bad)
mov
xchg
pusha
xchg
pop
popf
push
test
popf
xor
hlt
and
mov
cmps
cmp
add
ror
jnp
hlt
push
icebp
sub
test
inc
icebp
rcl
test
mov
sub
push
inc
or
or
leave
rep
or
and
fmul
xor
jmp
arpl
add
nop
or
pop
sbb
stos
adc
and
dec
xchg
cli
mov
fbld
or
push
xor
mov
pop
jg
jge
les
ss
mov
sbb
pop
das
clc
add
loopne
push
fs
xor
pop
js
inc
lods
pusha
addr16
xor
pusha
in
sub
mov
adc
daa
dec
mov
xor
lds
jmp
call
nop
aas
cli
mov
test
rcl
jbe
cmp
imul
ins
call
add
call
jle
push
xor
dec
adc
push
mov
push
adc
ret
mov
or
das
inc
lock
mov
inc
mov
jne
aam
enter
mov
and
jbe
xor
sub
das
dec
cmp
pop
ret
add
mov
clc
cmps
and
inc
cmp
add
or
cmp
add
add
mov
xor
loope
stos
sub
mov
into
or
xchg
adc
jo
push
pop
dec
dec
mov
jns
in
fbstp
jne
mov
data16
(bad)
(bad)
add
pop
jg
popa
out
adc
sti
jne
dec
dec
or
adc
mov
cmp
ja
and
xchg
mov
or
out
test
and
add
fwait
cmp
iret
add
test
mov
dec
adc
int3
push
sbb
jge
jns
or
inc
inc
lsl
pop
xlat
sub
push
fadd
aad
inc
xchg
in
xlat
inc
or
int3
cmp
push
loop
aam
add
mov
add
cmp
mov
mov
retf
jge
outs
mov
fstp
popf
and
pop
movs
mov
fsub
fldl2e
dec
xchg
test
sbb
inc
or
mov
sbb
clc
push
lock
mov
icebp
sub
xor
pusha
loop
and
dec
movs
sub
les
push
out
jo
xchg
outs
jecxz
add
push
mov
cmp
shl
int3
xchg
lock
push
ret
dec
arpl
movs
mov
mov
mov
scas
aad
test
aam
add
add
mov
pusha
add
mov
jmp
mov
mov
jl
lods
adc
mov
adc
add
pop
imul
(bad)
mov
call
outs
xor
xor
(bad)
push
push
xor
sub
sar
add
inc
mov
add
push
test
mov
add
jns
mov
in
sub
fld
mov
inc
mov
pop
ret
mov
adc
cmp
or
add
add
add
int3
int3
cmp
push
sub
jge
mov
jnp
or
cld
mov
and
or
add
mov
jecxz
sbb
mov
and
adc
pushf
add
out
loopne
sub
retf
fs
pushf
loop
or
daa
out
cmp
je
or
xchg
ret
dec
lods
pmuludq
loop
add
test
add
rol
mov
nop
dec
cmp
loopne
clc
mov
mov
mov
push
movs
shl
cwde
scas
xchg
add
or
cs
pushf
ins
pushf
das
cmp
ins
nop
nop
inc
jle
fwait
cs
xchg
mov
push
ins
lock
sahf
and
mov
jl
mov
shl
adc
and
sbb
and
inc
sub
icebp
add
test
push
dec
test
pop
adc
mov
inc
or
add
sbb
sbb
push
add
add
pop
mov
shl
push
sub
push
(bad)
jne
loopne
imul
mov
pop
mov
xchg
jl
adc
adc
(bad)
in
add
add
test
push
add
rol
mov
(bad)
jmp
loopne
jle
dec
adc
mov
adc
cmps
sti
cmp
movs
or
cld
or
add
loopne
loopne
push
push
add
shl
xor
fisttp
sbb
(bad)
or
adc
imul
add
push
add
add
imul
cdq
dec
jg
add
sbb
or
mov
add
aas
ins
add
das
inc
imul
inc
push
dec
(bad)
fs
inc
mov
daa
pop
pushf
shr
cmp
movq
xor
or
inc
arpl
imul
pop
sbb
dec
add
and
icebp
add
inc
pushf
adc
dec
add
lds
add
push
fidiv
scas
and
arpl
or
bound
icebp
ins
jg
and
clc
jno
jne
inc
lock
nop
xlat
xor
xlat
mov
or
push
and
sti
lahf
das
clc
sub
pop
lahf
or
pop
add
pushf
push
aas
add
inc
popa
and
mov
repz
repz
mov
or
push
movs
enter
ret
adc
int3
popf
add
test
mov
xchg
mov
mov
aad
mov
add
adc
add
movs
xchg
ins
and
inc
cmps
push
mov
mov
sbb
adc
mov
leave
and
cmp
sub
add
and
rol
xchg
into
mov
pop
pop
imul
inc
or
daa
or
dec
xchg
fild
mov
test
std
nop
lds
push
adc
adc
xlat
in
push
ins
outs
mov
or
mov
sub
jns
inc
addr16
test
gs
ficom
test
dec
add
pop
sbb
add
scas
or
mov
xor
test
adc
pop
dec
pop
mov
pop
pusha
fmul
aam
or
dec
cmp
loopne
inc
inc
addr16
fwait
add
push
movs
dec
or
inc
addr16
pop
sub
sbb
fwait
ss
push
push
das
mov
inc
cmovno
cmp
cmp
mov
test
xchg
shl
daa
sub
imul
mov
jbe
stos
jne
sbb
jmp
mov
or
and
add
mov
dec
add
arpl
ss
ds
or
or
sbb
imul
hlt
test
cdq
cli
test
add
inc
dec
std
bound
add
leave
rcl
cmps
enter
push
jnp
rol
lahf
jg
sahf
nop
mov
push
das
mov
pop
mov
pop
outs
ror
mov
push
jbe
call
fild
or
cmp
mov
push
test
sbb
pop
xchg
inc
or
add
aad
ds
pop
add
add
fsub
data16
pop
lock
mov
cld
inc
fiadd
cli
push
mov
mov
mov
fsub
or
(bad)
and
(bad)
call
or
sar
lods
pop
pop
cmp
aaa
mov
push
pop
loopne
xor
cdq
aam
push
enter
(bad)
jmp
and
add
pop
sbb
ret
clc
(bad)
xchg
and
rcr
pop
aas
pop
sbb
rcr
fwait
add
ja
sbb
add
add
xor
mov
add
pop
mov
push
mov
and
fs
push
shl
cmp
setnp
adc
push
xchg
aad
pop
mov
rol
sub
retf
and
push
ins
out
mov
cwde
pop
add
stos
or
dec
dec
std
mov
push
push
fld
mov
mov
enter
fiadd
push
aam
jb
sub
mov
loopne
push
add
mov
sub
pop
cmp
inc
inc
lods
mov
call
jle
add
xchg
cmp
lea
cmp
push
stos
sbb
adc
popf
push
pop
cmps
shl
inc
mov
icebp
sti
int3
js
pop
sbb
int3
je
test
mov
shl
push
inc
and
les
cdq
call
(bad)
popa
loope
fisubr
dec
rcr
mov
and
(bad)
inc
mov
jp
dec
and
sub
pop
pusha
xor
mov
ret
retf
retf
xor
lea
rol
xchg
jmp
popa
inc
div
out
shr
cs
ror
ret
(bad)
dec
scas
jmp
mov
jle
inc
cmp
add
push
xor
xor
div
or
sub
aaa
sbb
adc
add
cmp
mov
add
push
cmp
xor
xor
imul
xor
pop
xor
bound
popa
push
xor
(bad)
(bad)
pop
loope
and
xor
xor
aaa
add
xor
adc
out
add
jo
int3
jmp
inc
test
add
ja
cs
jo
pop
loopne
jnp
in
outs
sti
mov
jbe
je
pop
xor
das
mov
adc
cmovne
lahf
mov
ins
add
inc
into
dec
and
ret
das
mov
push
sti
int3
(bad)
fdivr
dec
mov
xchg
xor
data16
xlat
pushf
or
pop
sub
je
dec
fadd
push
and
addr16
add
sbb
add
les
dec
nop
adc
dec
(bad)
addr16
shr
in
mov
cli
or
pusha
add
pop
iret
add
adc
iret
jbe
cmp
std
and
push
or
inc
and
fsubr
mov
pop
fcomp
dec
and
mov
sub
retf
and
add
mov
inc
enter
xchg
sbb
int3
pop
int3
jmp
xchg
in
push
add
rol
out
fnstcw
push
add
xchg
xchg
cmp
jne
test
xchg
and
jbe
inc
leave
dec
mov
adc
loope
push
or
add
shl
out
add
rcr
lock
es
es
fdivr
stos
lods
mov
xor
test
data16
and
test
or
cmp
cwde
dec
test
mov
in
jnp
xchg
xchg
add
in
data16
cs
scas
test
retf
shl
shl
add
inc
pop
pop
add
outs
or
pushf
mov
jno
bound
cmp
neg
outs
xchg
mov
rol
pusha
nop
mov
sbb
popf
mov
fadd
mov
mov
inc
add
mov
test
pop
add
addr16
iret
jae
mov
fs
mov
mov
inc
loopne
arpl
mov
or
inc
cmp
jo
pop
inc
add
shl
stos
in
and
scas
jnp
in
pop
lea
ins
jnp
add
adc
mov
mov
cmp
dec
add
mov
jae
cmp
stos
fs
or
push
pop
cmp
cmp
lea
cmp
fistp
add
push
cmps
mov
sbb
mov
sbb
mov
rol
dec
call
mov
cdq
pop
(bad)
or
ja
dec
lods
lahf
push
das
add
mov
outs
das
ret
push
lock
or
das
add
xchg
mov
adc
fild
sub
mov
add
movs
les
add
mov
cmp
outs
push
(bad)
ins
jo
dec
arpl
sbb
ror
aad
xchg
les
popa
jl
dec
xchg
lock
mov
mov
or
popa
arpl
cmp
add
inc
pop
punpcklbw
and
mov
and
cs
add
adc
cmp
jecxz
pop
in
xor
rol
nop
mov
ror
dec
into
inc
rol
and
xchg
sbb
icebp
or
mov
ja
add
test
inc
loopne
mov
push
rol
popf
push
inc
retf
cmps
add
clc
xchg
or
cmp
pop
daa
or
sub
or
pop
mov
or
test
ret
call
lods
pop
add
das
or
mov
in
(bad)
shl
or
dec
lock
mov
xchg
fwait
add
aad
xor
add
adc
shr
cwde
(bad)
iret
sahf
mov
arpl
mov
adc
fbld
xchg
call
mov
inc
hlt
dec
es
jg
enter
loopne
sub
pop
mov
test
(bad)
or
addr16
loopne
loope
or
aaa
mov
push
and
mov
xchg
loope
mov
jnp
int
lea
imul
mov
mov
push
les
outs
pop
test
lods
pop
add
lods
int3
into
sbb
popa
mov
inc
loope
inc
or
shl
fisub
ja
aam
fisttp
add
js
outs
jmp
pop
jp
bound
xor
lds
xchg
retf
rcl
cmp
push
into
js
push
sbb
xor
shl
xlat
adc
call
and
and
adc
(bad)
push
cmps
jbe
ins
out
fidiv
jbe
mov
mov
push
clc
out
xchg
dec
es
push
inc
fisttp
mov
xchg
mov
mov
call
sbb
js
xlat
sub
imul
unpcklps
add
pop
sub
adc
xchg
push
push
or
and
jns
jmp
and
adc
or
popa
xchg
xchg
xchg
dec
out
or
test
cld
xchg
imul
cmp
mov
inc
loope
popa
inc
push
dec
mov
test
rol
ret
xchg
adc
inc
mov
inc
popa
jnp
movs
ror
xor
mov
mov
fdiv
xor
lea
mov
je
ret
mov
mov
daa
xchg
pusha
mov
adc
mov
loopne
(bad)
mov
push
retf
inc
cmp
lea
push
push
(bad)
int
mov
jo
stos
data16
ss
in
je
dec
xor
mov
ret
mov
int
int3
xor
jp
adc
into
loop
lds
ret
xchg
fs
cmp
in
push
cdq
pop
fs
test
and
mov
fisttp
inc
aas
pop
xchg
pop
cmp
and
push
add
fld
xchg
pushf
xchg
dec
mov
cs
or
ret
lea
add
or
ja
imul
dec
leave
inc
inc
inc
adc
and
inc
cmp
or
jg
push
jno
cmp
in
in
sbb
mov
cdq
jbe
xor
cdq
sub
mov
jb
test
push
mov
mov
sub
and
sbb
add
jl
fldcw
rol
jge
dec
xchg
retf
and
adc
adc
xchg
adc
lock
sbb
cmp
xchg
mov
or
or
inc
or
push
mov
xor
add
xchg
dec
push
add
or
inc
or
xor
push
in
ins
push
aam
mov
mov
and
mov
lock
hlt
or
or
mov
dec
mov
mov
add
xchg
out
(bad)
clc
mov
inc
cmp
outs
xchg
(bad)
fdivr
xor
in
cmp
clc
icebp
aam
pop
sbb
leave
mov
rol
ss
cs
pop
mov
test
enter
and
(bad)
(bad)
enter
xchg
enter
cmp
dec
rol
adc
pop
(bad)
sar
push
mov
push
xor
adc
jo
int3
pop
inc
jmp
lahf
clc
lea
cmp
pusha
inc
add
xlat
ins
jo
pop
inc
fmul
mov
lock
in
test
mov
ins
ss
out
dec
cs
dec
mov
in
add
and
xor
lods
(bad)
aam
add
movs
dec
inc
test
(bad)
popa
sbb
mov
fcom
lea
lsl
fist
pop
xchg
add
cdq
xchg
mov
or
mov
(bad)
xor
xchg
pushf
xchg
sbb
push
xchg
adc
jb
mov
sbb
jnp
test
rol
das
(bad)
test
loopne
pop
loopne
(bad)
out
mov
or
nop
shl
push
inc
or
xor
pop
lds
fld
call
add
adc
add
sbb
sbb
hlt
enter
push
in
jb
call
nop
inc
test
pop
sub
push
sbb
js
jl
push
popf
mov
test
jo
or
fwait
cmp
push
jo
addr16
or
sbb
shl
popa
mov
shl
add
inc
push
int3
icebp
aas
jle
aam
mov
inc
xchg
fild
cmp
xchg
into
mov
mov
bound
cmps
pop
push
add
jecxz
(bad)
cmps
pop
or
inc
mov
inc
nop
loop
xlat
add
in
pop
add
shr
add
xor
pop
cmp
adc
jbe
push
and
jb
aam
dec
sti
lahf
xchg
rol
sbb
sub
add
push
mov
ret
adc
aam
retf
out
push
add
and
push
(bad)
mov
and
add
inc
lahf
add
rol
mov
or
mov
push
add
pusha
sbb
pop
cmp
add
and
inc
movups
push
pop
rol
adc
sub
add
xchg
dec
sub
cmc
dec
jmp
aam
dec
rol
mov
mov
cmp
popa
xchg
jg
das
inc
sbb
add
dec
add
mov
pusha
ja
adc
sub
add
cmp
ret
push
inc
and
es
dec
je
cs
adc
aaa
sub
mov
je
imul
mov
outs
jg
xor
iret
lahf
outs
xor
popa
sub
or
fbld
xchg
mov
ret
outs
add
nop
xor
sub
and
dec
or
sbb
and
sub
lods
stos
mov
(bad)
adc
xchg
lods
mov
pop
or
push
test
and
idiv
pop
add
dec
and
sbb
inc
jae
bound
ret
inc
sub
aas
xlat
les
pop
ins
sbb
ja
jecxz
add
jecxz
lock
arpl
iretw
stos
loope
popa
jns
add
push
fadd
ja
adc
(bad)
push
imul
mov
jecxz
add
and
lea
xchg
ror
movs
xor
fbstp
imul
cmps
xchg
sub
and
mov
push
pop
aam
pop
popf
push
rol
sub
outs
add
(bad)
cwde
mov
adc
push
data16
addr16
fadd
or
pop
and
mov
adc
xchg
ror
cmp
jmp
mov
cdq
ins
(bad)
pusha
xor
outs
or
mov
fild
mov
push
and
push
jno
sub
loope
inc
push
add
clc
gs
inc
sub
or
arpl
inc
dec
aaa
add
out
mov
mov
or
addr16
mov
adc
stc
push
(bad)
mov
sub
mov
jp
pop
or
sahf
jmp
jnp
and
popa
mov
repz
fadd
add
mov
cld
lods
adc
adc
dec
stos
scas
lds
push
dec
add
mov
mov
adc
daa
movs
cmp
and
ror
mov
push
aam
or
adc
fist
push
arpl
pushf
push
es
test
pop
xchg
xchg
cwde
inc
add
sub
cwde
adc
sbb
mov
push
mov
jmp
add
enter
jns
mov
in
sti
in
sti
dec
lods
add
loopne
mov
int3
mov
mov
cmp
nop
jmp
cld
mov
push
arpl
out
mov
mov
rcr
push
pop
retf
add
dec
call
sbb
pop
lds
xchg
imul
mov
popa
dec
add
mov
sub
add
xor
adc
(bad)
or
or
lods
cs
inc
push
jne
and
inc
or
or
js
dec
pop
mov
inc
into
push
add
push
xchg
aam
gs
cmps
cmp
sbb
jmp
xor
cmc
and
out
inc
jp
pusha
push
mov
or
in
cmp
mov
sbb
(bad)
popa
mov
xchg
dec
pusha
adc
add
cmp
and
pop
mov
clc
push
pop
test
xor
hlt
(bad)
lock
dec
sub
add
xchg
push
rcl
push
jle
stos
xbegin
imul
(bad)
lods
ins
icebp
cwde
movs
aas
xor
ins
inc
fsubr
data16
mov
test
dec
xor
mov
call
xchg
dec
es
inc
dec
xchg
xchg
mov
dec
xchg
cmp
popa
xchg
dec
cmp
jmp
and
repz
xchg
je
fstp
xchg
pop
or
seto
cmp
mov
mov
int
push
push
xor
add
iret
(bad)
shr
sbb
mov
xchg
(bad)
pop
sti
xor
jmp
sti
add
leave
and
sub
add
shl
push
add
xlat
xchg
imul
shl
mov
adc
sbb
repnz
dec
add
std
iret
mov
cmp
and
add
adc
jb
hlt
enter
add
or
dec
or
xchg
xchg
add
xchg
pop
inc
xchg
add
add
sbb
stos
inc
sub
outs
or
inc
jmp
push
jne
dec
mov
rol
inc
jo
scas
cmp
fwait
add
jnp
sbb
jo
mov
adc
push
test
test
add
pop
js
dec
push
xlat
xchg
in
(bad)
cdq
in
(bad)
cmp
cmp
(bad)
call
inc
or
fs
and
add
neg
shr
fsub
lea
sbb
inc
(bad)
sub
and
bound
cmc
dec
add
or
shl
add
mov
(bad)
(bad)
and
imul
or
ds
push
add
dec
sbb
sub
mov
cmps
dec
mov
data16
add
pop
push
push
rol
mov
or
mov
xchg
add
xchg
sahf
adc
or
inc
xor
and
and
inc
add
and
scas
dec
lock
mov
mov
add
adc
pusha
dec
out
clc
call
stos
or
and
scas
arpl
fwait
mov
jmp
add
and
sbb
add
rol
push
mov
bound
in
pop
push
sub
and
xor
pusha
xor
cmp
pop
test
sub
lahf
cmp
cmps
rcr
(bad)
popa
add
sldt
neg
fmul
out
push
add
lahf
mov
or
jle
add
add
daa
and
movs
cwde
outs
mov
fisubr
bt
lods
adc
push
dec
sbb
and
fwait
add
test
dec
pop
or
and
mov
ja
adc
push
pop
add
sub
mov
xor
xchg
dec
inc
inc
inc
sahf
jne
cmp
dec
inc
mov
add
lea
cmps
mov
lds
cs
popa
pop
lahf
push
mov
gs
jg
cmps
sbb
mov
mov
addr16
inc
adc
xchg
mov
add
mov
lahf
aas
mov
xadd
aaa
jbe
pop
push
out
pop
add
or
repz
inc
sahf
inc
inc
pop
add
adc
and
leave
sub
imul
sub
dec
fwait
push
add
arpl
push
scas
mov
(bad)
mov
and
pusha
mov
(bad)
dec
lar
fsub
and
push
test
fstp
add
cwde
outs
nop
push
mov
push
push
rcl
jo
inc
add
mov
cs
fistp
inc
add
push
lock
push
ins
sti
xor
mov
sar
loopne
push
sub
cmp
test
push
add
add
test
pop
int
icebp
or
mov
push
mov
mov
data16
add
pop
mov
sbb
push
dec
sub
in
jae
popf
out
cmps
push
hlt
add
aaa
lds
jg
ds
xor
sti
dec
pushf
lods
xor
test
ds
mov
or
add
pop
pushf
js
sti
sbb
xchg
lods
push
or
mov
mov
cs
mov
leave
mov
dec
js
mov
push
int3
or
lods
out
cmps
mov
push
je
pop
push
test
sahf
out
js
xchg
cwde
movs
aas
mov
push
adc
pop
fsubr
ins
dec
iret
mov
fdivrp
push
jl
sbb
pushf
adc
nop
outs
add
inc
in
aaa
mov
mov
movs
call
ja
xor
inc
mov
jg
push
aaa
adc
out
mov
loop
jle
mov
xchg
push
or
outs
je
int
jns
outs
xchg
cs
push
movs
mov
retf
and
shr
mov
shl
xor
add
push
ss
hlt
cmp
(bad)
int3
push
cld
in
aas
ds
or
inc
ins
inc
icebp
sahf
daa
push
lahf
pop
xchg
ror
mov
aas
or
ficom
push
cwde
xchg
push
clc
or
das
fcomp
jo
push
push
push
add
jmp
xor
rcl
mov
and
imul
fnstcw
ror
call
and
xlat
jl
std
push
or
js
sahf
ror
fwait
out
push
fsubr
movs
jmp
adc
push
add
pop
dec
aaa
sub
fbld
ds
xor
(bad)
add
pop
add
aam
fadd
ds
fsubr
add
mov
xor
mov
scas
inc
das
inc
gs
aaa
sub
dec
ds
js
xor
out
ins
dec
scas
adc
sbb
test
mov
xor
addr16
retf
cmc
int3
mov
inc
mov
ffreep
jle
shr
out
pusha
aas
in
imul
mov
push
mov
dec
imul
retf
fld
mov
push
mov
ds
mov
mov
mov
bound
rcr
dec
arpl
inc
mov
lahf
fmul
push
mov
pop
shl
sti
ja
xor
add
je
gs
ret
fdivr
scas
push
pop
push
or
(bad)
rep
mov
cs
ins
sbb
pop
sub
and
pop
jo
add
xor
pop
call
cmps
clc
push
jo
cmps
push
int3
leave
addr16
push
sti
adc
push
pop
push
shl
push
sbb
ins
push
and
xchg
sar
and
sbb
pop
mov
fcmovu
popw
(bad)
inc
into
pop
push
aad
(bad)
xlat
fwait
int
mov
fiadd
adc
inc
in
add
push
aaa
aam
test
dec
in
popf
ins
ss
xchg
push
inc
popf
cld
sahf
mov
cmp
mov
push
cmp
xchg
mov
pop
mov
test
cmps
int
fldcw
sbb
cmps
fnstcw
mov
lods
xor
repz
scas
push
scas
scas
push
add
mov
rcr
sti
pop
mov
mov
mov
pop
mov
or
in
in
inc
lock
xchg
push
fadd
cdq
retf
test
es
mov
sar
sub
ja
push
call
ret
ins
pop
out
and
(bad)
leave
dec
int3
push
je
pop
shr
mov
mov
ror
scas
pushf
shr
nop
mov
fidivr
jo
jns
adc
push
mov
jns
out
sbb
xchg
push
cmp
retf
les
jo
idiv
push
mov
ror
mov
in
clc
push
adc
pop
sub
pop
clc
jns
out
mov
inc
out
ficomp
pop
push
clc
daa
adc
xchg
push
out
into
cmp
clc
out
push
fdiv
pusha
sbb
sbb
lock
add
push
test
outs
je
mov
cmp
push
push
mov
ror
push
or
das
sbb
push
adc
push
mov
inc
das
mov
mov
mov
fdiv
das
and
push
and
int3
and
popa
test
inc
pop
mov
mov
push
rcr
push
in
jecxz
pop
es
lahf
and
pop
xchg
mov
inc
daa
fist
rol
jge
rcr
push
adc
int
out
push
in
fwait
dec
pop
mov
mov
in
div
fwait
mov
es
aas
repnz
adc
outs
ret
mov
pop
rol
dec
not
dec
pop
mov
push
add
lea
xchg
sbb
pop
sub
das
inc
push
ja
iret
arpl
push
push
ins
movs
ss
add
xor
arpl
add
push
xchg
cld
ins
adc
push
ins
(bad)
mov
pop
daa
add
ins
add
sub
push
sub
dec
or
sbb
out
mov
adc
icebp
jns
ss
push
mov
dec
inc
jecxz
fnstenv
push
sbb
bound
cwde
push
mov
enter
push
hlt
(bad)
fistp
das
and
inc
push
pop
fimul
or
jo
fcmovbe
(bad)
movs
mov
in
(bad)
fistp
jo
das
dec
add
mov
jg
xchg
and
or
dec
add
aam
aas
aam
add
dec
fild
adc
loopne
mov
mov
xor
(bad)
shl
dec
pop
dec
daa
pop
add
adc
add
rol
push
hlt
dec
sar
int
or
push
mov
cmps
sub
jns
loopne
daa
ror
push
sub
adc
sahf
cwde
loopne
aam
xor
repz
xchg
fsubr
cmp
mov
dec
push
call
cmps
cmp
jnp
sub
(bad)
in
ret
les
(bad)
push
push
in
or
inc
mov
test
aas
add
adc
aam
pop
ins
enter
in
arpl
je
pop
dec
xor
pop
loopne
scas
popf
jge
nop
retf
pop
push
int3
push
xchg
push
mov
mov
int
cmp
add
pop
(bad)
stc
cmp
sti
mov
jns
scas
push
in
jp
retf
jo
mov
js
ja
out
cwde
fdivr
das
mov
push
mov
shr
push
pusha
jle
jg
pop
adc
push
add
add
rcr
and
push
test
test
test
cmps
fnstcw
xchg
inc
dec
nop
mov
mov
push
enter
pop
dec
push
call
add
mov
out
ins
lods
push
push
push
lock
pushf
popf
cmps
lahf
push
mov
inc
jbe
and
movs
mov
in
popf
pop
and
lods
pop
add
push
mov
push
and
ror
xchg
fisub
mov
shl
lock
push
es
xlat
fdivr
ins
int
fild
sbb
push
lock
in
imul
aam
call
cmp
mov
and
push
out
clc
push
fistp
push
fs
cs
mov
mov
icebp
mov
push
mov
outs
add
add
or
ror
dec
adc
mov
adc
push
push
pop
sub
shr
sub
(bad)
and
mov
mov
(bad)
pop
test
shl
push
in
sub
inc
aas
ins
push
mov
push
shr
int3
sub
mov
cmp
repz
enter
vmread
add
push
mov
xor
inc
daa
or
dec
pop
push
dec
inc
pop
or
dec
fiadd
mul
jo
mov
xchg
pop
pop
rcr
sbb
pop
and
inc
xchg
adc
(bad)
mov
mov
lds
pushf
inc
test
jge
add
mov
enter
test
movs
push
rol
les
push
push
mov
cmp
shr
cmp
inc
ins
cmp
(bad)
xor
pop
adc
push
ror
jg
add
add
fisub
push
dec
pop
out
bound
pushf
push
rol
push
push
adc
adc
les
mov
(bad)
test
sbb
ret
pop
and
inc
xchg
int
and
mov
add
xchg
es
sub
add
adc
sbb
out
inc
xchg
lock
lock
adc
aaa
hlt
pushf
mov
scas
ins
(bad)
js
push
mov
stos
push
sub
int3
mov
mov
adc
push
mov
ss
ss
sbb
push
mov
ret
mov
lds
pushf
int3
dec
mov
into
push
rcr
test
scas
rol
push
data16
test
into
xlat
push
sub
pusha
fistp
fnstsw
mov
jmp
xchg
jnp
out
scas
lock
es
fdivrp
add
push
mov
add
cld
add
xchg
push
and
mov
adc
fwait
adc
adc
jle
fnstenv
xor
mov
jbe
adc
and
ins
ds
test
pop
mov
sbb
sbb
fistp
and
and
and
data16
or
test
sub
nop
xor
add
mov
mov
adc
lods
rol
jmp
push
cmp
or
pop
aad
(bad)
pop
fcom
fiadd
xor
div
fdivr
adc
ds
call
inc
loop
mov
jbe
(bad)
out
push
push
(bad)
fsubp
sub
mov
dec
test
push
fadd
clc
std
jbe
fs
outs
push
dec
pop
fs
pop
ins
mov
xchg
pop
xchg
add
fwait
in
rcl
xchg
jl
cmp
hlt
data16
mov
ins
sub
ins
clc
ins
jo
jne
pop
xchg
jno
jae
jne
jl
nop
xor
jmp
fmul
cmps
xchg
clc
jg
add
inc
push
xor
sbb
cs
jg
cld
jae
pop
pop
dec
repz
adc
pop
add
mov
imul
and
pop
in
push
rcr
(bad)
push
int3
pop
pop
data16
fst
pop
add
in
mul
daa
lock
pop
out
push
pop
pop
add
push
push
mov
add
movs
push
outs
inc
push
jo
pusha
movhps
add
rol
add
test
hlt
lods
mov
data16
jo
into
mov
(bad)
ins
adc
and
enter
add
mov
cvttps2pi
lahf
pop
inc
mov
jle
adc
inc
dec
or
iret
fld
xor
xchg
movs
rol
ret
les
fldenv
in
pop
shr
jbe
int3
mov
call
pop
add
adc
and
aam
dec
jbe
cmp
pop
xor
jg
xchg
add
and
cmp
dec
and
xor
mov
mov
and
mov
(bad)
scas
out
mov
pushf
push
push
jecxz
shl
pop
shl
movs
push
sub
mov
out
cld
shl
dec
(bad)
jmp
dec
add
aaa
dec
clc
es
call
sti
jmp
test
dec
add
jl
add
dec
or
shl
dec
fisubr
xchg
push
loope
push
call
cs
sti
std
fistp
inc
add
inc
das
nop
test
mov
jg
and
daa
retf
cmps
sbb
dec
jbe
push
adc
repz
mov
push
(bad)
pop
mov
dec
les
ficom
ss
out
dec
jmp
or
push
clc
mov
jbe
ins
scas
loope
xor
repz
out
mul
mov
cld
xchg
std
scas
inc
adc
ss
lods
test
jo
fmul
inc
or
movhps
pusha
adc
cwde
adc
sub
adc
pop
adc
mov
pop
sbb
push
cmp
cmps
stc
scas
ror
sub
inc
sub
test
pop
push
push
clc
sub
push
frstor
mov
das
push
adc
push
dec
fcmovnu
out
aam
xor
cmp
test
ins
pop
lahf
(bad)
push
adc
push
movs
pop
aaa
mov
mov
in
outs
(bad)
jo
jb
idiv
outs
push
push
lock
jae
jae
mov
xchg
pop
xchg
mov
push
test
xchg
pop
xchg
pop
mov
lea
stos
push
xchg
xchg
cdq
lods
loopne
(bad)
lods
aas
and
and
rol
jnp
cmp
inc
je
pop
xor
mov
or
and
movs
adc
out
loopne
jnp
call
cwde
outs
fwait
jbe
dec
adc
add
fild
push
cmp
add
xchg
pop
pop
cmps
add
sbb
mov
pop
and
push
mov
pop
(bad)
int
pop
or
jne
add
push
sbb
pop
sahf
out
cmp
mov
sub
jl
mov
jmp
mov
mov
push
sub
mov
mov
mov
add
ds
mov
dec
push
push
hlt
jns
iret
fdiv
dec
jo
mov
ds
test
push
xor
and
(bad)
lock
jg
mov
ins
push
in
ss
push
sub
idiv
and
adc
push
push
mov
sbb
es
add
test
sub
mov
in
push
cwde
mov
std
cmp
inc
sub
hlt
xchg
nop
fisubr
xchg
dec
push
call
push
add
sub
iretw
addr16
inc
fs
mov
add
cld
push
fs
mov
push
aam
jnp
inc
aam
(bad)
(bad)
loopne
sbb
lods
in
aas
add
dec
ds
mov
adc
mov
aas
fdivr
push
inc
dec
dec
into
cmp
fadd
inc
aas
les
push
div
leave
daa
test
push
in
push
loopne
pop
jbe
pop
jnp
aam
ja
mov
iret
rol
push
rcr
inc
out
xchg
pop
popf
sbb
xchg
xchg
xchg
mov
push
xor
pop
mov
loopne
or
aas
mov
jl
daa
add
stos
push
sbb
cmps
mov
xchg
lods
cmp
sahf
mov
in
mov
or
xchg
inc
mov
mov
not
mov
mov
adc
jnp
mov
fdivr
and
lock
shl
lds
in
out
xchg
js
mov
retf
push
int3
mov
pop
int
jnp
repz
ins
into
add
movs
mov
mov
push
div
fwait
dec
mov
dec
aam
aad
jo
ss
call
scas
int3
cmc
fidivr
pop
ja
mov
lods
and
xchg
nop
cmp
out
fdiv
cmp
pop
xchg
cdq
lods
loope
sub
fimul
cmp
ins
or
jbe
push
je
out
imul
nop
sub
rol
sub
das
lods
loopne
mov
nop
xor
xor
sbb
jns
addr16
out
out
push
push
je
hlt
call
sbb
cs
loopne
cmps
mov
in
xchg
in
push
js
push
lock
xor
mov
sbb
pusha
(bad)
in
mov
mov
loopne
jl
loopne
mov
push
lea
mov
xor
cmps
je
js
nop
dec
xchg
dec
mov
idiv
xchg
push
les
jge
cdq
pop
ror
xor
mov
mov
icebp
popf
das
add
sahf
mov
cs
mov
lods
mov
xchg
mov
(bad)
mov
dec
mov
push
lock
and
fdiv
sar
in
ins
in
(bad)
out
fld
mov
jecxz
push
adc
data16
ja
mov
pop
push
xlat
inc
jo
pusha
sub
push
jle
add
ss
out
mov
movs
nop
cwde
aam
sti
les
push
fs
in
ins
scas
es
mov
rol
ret
ds
test
sub
add
pop
adc
stos
and
das
psubusb
xor
inc
je
enter
ror
mov
imul
jecxz
adc
inc
inc
xchg
add
sbb
cwde
(bad)
ss
add
cdq
iret
inc
pop
sub
sub
add
mov
test
dec
outs
pop
pop
mov
in
sub
jo
daa
daa
daa
mov
xor
ja
pop
mov
cmps
loope
push
cmp
xchg
xlat
cmp
mov
jg
inc
sub
ror
mov
pop
loopne
push
mov
aaa
xchg
add
sbb
inc
mov
inc
inc
or
push
aam
cmp
pop
pop
or
sbb
add
xor
movs
adc
push
fdiv
in
out
mov
fnstsw
fisub
fild
ins
loope
push
xchg
fcom
xor
push
sub
fldcw
cmp
push
adc
js
cwde
int
popf
xchg
sub
rol
or
inc
xor
mov
cmp
push
movs
xchg
pop
in
fld
sahf
adc
adc
mov
test
fs
js
pop
aam
and
jg
push
mov
in
ins
repz
add
lods
fdiv
aam
xadd
(bad)
in
push
pop
or
push
loopne
les
das
(bad)
in
enter
scas
bsf
shl
cmp
push
hlt
sbb
aaa
test
(bad)
pop
inc
and
add
mov
jo
xor
pop
addr16
push
mov
fld
ins
and
push
cwde
daa
push
push
sub
fwait
ins
sbb
daa
aam
mov
sub
push
dec
mov
dec
in
sub
das
lock
xor
xor
add
dec
jnp
xor
in
mov
ret
neg
jl
scas
aaa
push
adc
xlat
pushf
inc
xchg
ins
push
pop
inc
push
sub
cwde
popa
daa
mov
cmp
pop
inc
inc
inc
(bad)
popf
das
adc
push
mov
pop
xchg
mov
xchg
(bad)
int3
into
inc
in
pop
sub
aaa
xor
outs
in
in
add
inc
gs
aaa
xor
das
mov
mov
push
push
hlt
call
mov
lods
mov
sar
movs
push
cmps
push
test
mov
sbb
pusha
iret
xchg
fcmovnu
cmps
xlat
hlt
pop
adc
jo
aas
daa
sub
mov
movs
push
mov
stos
into
repz
outs
push
shr
div
pop
test
push
mov
daa
pop
xchg
mov
lahf
xchg
mov
stc
mov
shrd
push
enter
jge
cmps
dec
pushf
fsub
inc
mov
idiv
out
jae
xor
ds
add
cmps
push
fwait
sbb
aam
xchg
addr16
es
or
in
add
xchg
scas
xchg
pusha
cmps
dec
mov
adc
clc
ss
aas
mov
fincstp
mov
cs
sbb
aas
push
mov
cmps
pop
ficom
rcl
cli
fbld
inc
xor
or
fisttp
push
and
addr16
cld
cs
dec
cmp
data16
lock
sub
pop
push
std
pop
mov
pop
aam
xchg
pop
or
movaps
daa
daa
daa
dec
ins
mov
in
dec
outs
mov
pop
sbb
pop
inc
subps
push
dec
daa
cs
add
mov
jbe
test
aas
in
fcomp
cmps
jge
xor
push
dec
loopne
daa
lock
jbe
scas
popf
mov
push
cwde
push
mov
repz
push
mov
or
(bad)
lahf
push
test
xchg
mov
xlat
into
xchg
or
fs
add
les
mov
(bad)
(bad)
clc
scas
mov
xchg
push
ror
and
movs
pop
lock
fnstsw
or
push
and
adc
loopne
adc
mov
cwde
stos
xchg
pop
nop
push
sbb
ficom
xor
jo
lods
mov
lock
jns
xchg
dec
push
jo
out
add
mov
pop
xor
ja
push
js
nop
push
in
push
xlat
add
mov
ins
push
lods
push
rcl
das
mov
cli
es
adc
sbb
push
mov
push
and
ss
push
test
movs
push
cld
sbb
adc
add
push
adc
pop
add
push
cmps
adc
div
mov
test
rol
int
ret
fiadd
sub
inc
sub
ret
ret
out
push
and
out
mov
dec
push
fs
dec
es
nop
push
loopne
repz
sbb
xor
fmul
sahf
ja
fistp
push
int3
sub
xchg
fidiv
jge
xor
push
hlt
imul
out
push
hlt
inc
ds
push
pop
sahf
int3
jbe
cwde
iret
sub
js
cs
test
test
dec
test
add
in
xchg
aam
dec
push
inc
test
mov
out
sbb
cld
loope
push
loop
mov
int3
xor
push
jecxz
mov
clc
cmp
xchg
rol
lds
push
mov
out
mov
pop
mov
pop
std
mov
data16
call
push
dec
add
push
adc
or
or
or
xchg
mov
push
push
mov
add
(bad)
clc
push
sbb
ficom
inc
adc
pusha
cld
mov
push
pop
sahf
sbb
aam
push
ins
sbb
and
xchg
and
pavgb
nop
xor
stos
(bad)
and
push
pusha
test
and
fdecstp
int
enter
push
int3
sub
and
lahf
ins
loopne
mov
push
mov
aas
ja
(bad)
cmps
inc
push
push
into
cmp
pop
pop
fucomip
loop
int3
(bad)
test
(bad)
push
push
nop
(bad)
xor
push
push
push
xor
push
rcr
fsubrp
push
jl
ret
cmp
mov
popf
cmp
das
in
mov
pop
(bad)
shl
lds
pop
not
jle
int
rol
in
fcom
fcmovbe
pushf
fistp
shl
adc
retf
pop
fisttp
mov
into
inc
into
jbe
push
fsubr
xchg
mov
dec
scas
sub
pusha
popf
push
lahf
push
pop
mov
aas
dec
cs
aam
ds
mov
xchg
push
movs
push
sub
pop
dec
addr16
jge
fmul
in
scas
mov
push
je
lahf
aam
mov
cmps
ins
push
mov
pop
sahf
addr16
push
push
fldcw
(bad)
ins
push
adc
push
sub
adc
adc
mov
jne
pusha
xchg
hlt
ins
push
adc
pop
add
test
test
loopne
outs
mov
pop
icebp
push
ja
jmp
es
ja
scas
fisttp
hlt
in
push
js
ins
ds
push
les
test
or
shl
cs
push
jl
aas
pop
ins
ss
ret
add
push
push
sbb
fmul
adc
popf
fxch
push
aaa
adc
push
fcomp
push
cld
and
ss
ins
cmp
push
xchg
ss
test
dec
lock
mov
int
pop
pop
push
adc
movs
arpl
cs
ins
mov
push
and
ror
cmps
scas
mov
fld
rcr
mov
leave
out
inc
lock
dec
retf
scas
rcl
mov
pop
fidiv
fild
push
in
inc
aam
loopne
mov
(bad)
out
push
icebp
push
xlat
fisttp
es
hlt
push
pop
stc
aaa
fs
push
jo
test
xchg
pop
push
cld
or
das
or
(bad)
mov
xor
inc
and
inc
mov
push
(bad)
fdivr
inc
pusha
mov
(bad)
je
push
and
aas
mov
dec
and
xchg
ret
jae
mov
sub
push
aaa
cmp
inc
pop
aam
add
in
mov
rol
pusha
jg
add
aas
cmp
push
aam
push
cwde
scas
pop
add
fist
mov
push
dec
adc
sbb
nop
mov
rol
adc
pop
pushf
xchg
mov
adc
inc
mov
outs
and
xchg
bound
mov
add
test
cmovne
sub
push
inc
push
div
mov
in
repz
sbb
pop
cwde
int3
add
inc
repz
repz
jo
call
out
mov
and
push
nop
lahf
in
into
sar
push
cmp
in
mov
push
sbb
retf
gs
add
out
jmp
int
fisttp
cmp
push
dec
(bad)
sub
loopne
sbb
fcmovnu
ins
ss
loope
in
out
jmp
jnp
out
jbe
push
sub
push
mul
clc
push
xor
in
push
adc
dec
jmp
pop
add
push
push
comiss
int
mov
push
mov
add
ret
repz
push
movs
fmul
inc
xor
out
je
in
les
add
lds
call
and
mov
jns
add
push
pushf
rcl
popf
out
or
xchg
push
jl
out
push
xor
out
sub
sahf
push
mov
iret
mov
cmp
pushw
mov
ds
inc
push
lods
lock
int
jl
jns
int
clc
(bad)
into
jbe
or
lea
mov
popf
loope
outs
push
sbb
push
dec
dec
clc
push
lahf
mov
mov
loopne
dec
xchg
push
jo
or
jnp
ss
mov
or
mov
push
es
inc
push
pop
mov
inc
mov
push
pop
pop
mov
dec
pop
inc
fs
push
pop
out
push
jo
jbe
jge
out
test
out
cmp
sub
bound
test
sub
(bad)
push
mov
xor
(bad)
fcomp
ds
push
ins
data16
popa
in
mov
fs
out
int3
mov
popaw
addr16
(bad)
mov
or
imul
out
daa
mov
inc
scas
mov
shl
sub
dec
push
fs
stc
cmp
push
outs
les
ds
dec
mov
int
fwait
jg
and
pop
loope
jbe
cwde
mov
push
pushf
lea
les
push
push
xchg
xchg
jbe
scas
call
(bad)
push
mov
popf
add
cmp
add
mov
inc
popf
add
fimul
dec
push
xor
push
jo
fstp
push
xchg
mov
mov
pop
es
inc
pop
push
mov
xchg
add
rol
pusha
cmp
loope
aaa
adc
das
pop
fbstp
and
xchg
or
pop
sbb
jne
mov
jnp
inc
outs
ret
dec
out
das
inc
cwde
(bad)
fnstsw
aam
push
jo
cs
outs
ja
push
mov
mov
aas
push
dec
adc
sbb
sbb
push
dec
cmps
cmp
jae
or
dec
nop
inc
outs
ins
push
and
dec
ins
jo
dec
fs
(bad)
inc
ins
outs
lock
or
dec
or
adc
ins
push
inc
dec
test
js
push
and
add
adc
pop
add
jae
jecxz
sbb
gs
std
dec
gs
in
adc
push
popa
sbb
mov
or
stos
into
and
test
gs
arpl
lea
jecxz
test
xor
jecxz
arpl
or
bound
pop
or
adc
out
add
jb
adc
adc
fsubr
pop
adc
xchg
xor
inc
jo
or
loope
jne
ret
push
jge
cld
adc
outs
arpl
pop
ins
lea
psubusw
orps
imul
pop
xchg
bound
inc
mov
push
inc
inc
mov
sbb
lds
xor
js
inc
jae
mov
or
adc
inc
lock
jle
jb
cdq
push
mov
mov
dec
dec
mov
pop
jae
shl
push
sbb
push
mov
adc
sub
outs
ret
push
and
push
mov
mov
xor
jb
cmovge
xor
dec
dec
inc
pop
xor
and
mov
int
xchg
call
inc
push
xor
sbb
inc
xchg
int
bound
pop
pop
adc
or
rcr
sbb
xor
sbb
int
fcomp
mov
jb
ins
sbb
mov
ins
jmp
int
adc
push
(bad)
pop
add
jo
adc
arpl
xor
ror
and
or
add
popf
repnz
nop
ins
dec
fnsave
or
or
js
push
or
lods
xlat
gs
inc
cs
dec
and
lds
or
push
dec
mov
pop
push
pusha
lea
sub
jmp
sub
mov
outs
inc
or
je
push
sbb
mov
repnz
pop
dec
bound
shr
jl
inc
pop
or
and
and
push
jo
xor
sub
sbb
into
outs
jne
xor
sbb
inc
jae
imul
ins
addr16
sub
(bad)
movs
js
ins
adc
pop
popa
movlps
adc
cmp
inc
imul
test
or
mov
in
sbb
sbb
ror
pop
pop
rcl
pop
or
add
cmp
scas
es
je
jb
jbe
(bad)
aad
jge
push
add
ins
push
sub
int3
push
sbb
inc
inc
movs
ins
mov
bound
mov
inc
or
scas
xchg
fs
xor
scas
inc
jne
inc
adc
jge
data16
stos
pop
xchg
fist
add
xchg
int
scas
fimul
imul
out
int
inc
push
fistp
ret
jns
inc
inc
pop
adc
adc
sbb
adc
push
pushf
fidiv
loopne
xor
in
js
sqrtps
mov
pop
ja
cmp
(bad)
cmp
adc
ins
ins
push
adc
lahf
jae
ret
shl
add
call
adc
rol
adc
push
push
loopne
mov
daa
js
push
mov
push
dec
dec
ss
jo
jp
mov
pushf
inc
sbb
fadd
adc
sbb
adc
and
data16
stc
mov
mov
outs
call
and
push
out
jno
popf
ret
(bad)
xor
xor
int
sbb
dec
outs
inc
or
or
std
mov
das
inc
rcl
xchg
pop
sub
cmp
cmp
dec
pop
push
mov
cmp
pop
mov
push
mov
js
dec
repnz
loopne
daa
inc
or
sub
adc
(bad)
sub
sbb
cmp
lea
and
inc
adc
jb
sar
xor
xor
adc
push
ins
call
sbb
ins
jns
pop
ds
test
outs
inc
jb
push
push
or
push
outs
imul
or
sar
sbb
mov
lods
xor
or
sub
call
lahf
lods
or
push
push
adc
retf
pusha
ins
adc
jae
xlat
jg
ins
and
dec
dec
inc
ins
je
arpl
outs
in
add
repz
add
imul
imul
call
ins
inc
sbb
mov
pop
aaa
adc
mov
and
adc
or
xchg
sbb
pop
or
pop
xchg
jae
bound
ret
popa
sub
push
dec
pop
or
outs
mov
adc
dec
inc
inc
jb
mov
imul
fs
jbe
push
or
inc
pop
dec
dec
inc
sub
or
xchg
or
cmps
xchg
outs
push
add
mov
adc
iret
lds
or
adc
ret
test
jnp
mov
mov
jb
or
fiadd
mov
aaa
dec
jp
pop
or
inc
test
and
cmps
ret
pop
inc
test
js
mov
push
adc
ins
mov
daa
jo
mov
test
fimul
nop
cdq
cli
push
fwait
pop
sub
(bad)
call
jo
jbe
and
dec
inc
es
sbb
sub
pop
sbb
adc
out
retf
jne
jns
unpckhps
inc
nop
lock
xchg
pop
jo
ror
jns
jae
ret
or
mov
ins
sbb
or
add
sub
rcl
jae
in
call
xor
nop
in
mov
mov
sub
pop
adc
scas
fstp
add
mov
or
inc
mov
imul
movs
or
data16
xlat
adc
out
aas
in
xchg
sbb
out
mov
mov
cdq
add
mov
out
sub
neg
pusha
mov
ret
pushaw
lods
push
ins
jbe
jp
jae
sub
sub
call
adc
(bad)
sti
out
adc
mov
adc
aas
xchg
jg
dec
mov
cwde
pop
push
sar
call
mov
add
add
and
clc
mov
in
push
sbb
jmp
sbb
pop
sub
mov
out
adc
sub
in
mov
and
add
mul
lock
hlt
inc
les
push
add
fwait
mov
(bad)
fistp
cwde
jbe
push
ret
les
and
cmp
mov
and
movzx
fdivr
call
mov
test
mov
je
dec
jne
call
add
and
jmp
cmp
mov
adc
call
rol
jb
outs
arpl
imul
dec
je
jmp
inc
into
push
fwait
dec
in
jmp
and
xchg
shl
adc
xchg
mov
adc
and
inc
add
ins
adc
pusha
push
aas
jl
scas
push
lods
cld
jae
mov
adc
inc
xchg
xchg
push
pop
mov
inc
(bad)
jl
call
popa
add
mov
pusha
sbb
jo
sub
mov
adc
loop
mov
add
xor
mov
mov
push
shl
pop
iret
inc
jnp
mov
xor
mov
sti
cdq
add
fsub
mov
mov
fsubr
mov
push
mov
pop
and
add
xchg
sbb
xor
ins
sbb
sti
and
xor
addr16
clc
pop
sub
dec
mov
jl
imul
dec
sub
enter
or
popa
xor
and
adc
pop
xor
ss
mov
dec
pushf
mov
mov
adc
adc
(bad)
pop
mov
push
xor
nop
jo
rcl
addr16
iret
in
sbb
dec
dec
inc
stos
mov
hlt
mov
int
test
and
fisub
pop
movs
icebp
add
fisubr
inc
das
add
pop
arpl
fcom
push
rcl
add
xor
adc
sbb
push
sti
xor
mul
xchg
fsub
xor
loopne
leave
add
inc
cmps
pop
xchg
in
loopne
inc
sub
test
(bad)
rcr
push
aaa
cmp
mov
add
add
or
rcl
(bad)
pshufw
add
mov
push
sub
lahf
pop
xchg
bound
inc
add
outs
fdiv
or
sbb
movs
add
scas
jnp
pop
mov
adc
push
cmp
cmps
sbb
jge
fcomp
leave
clc
add
xchg
daa
outs
in
bswap
add
add
push
add
in
or
add
daa
dec
sahf
cmp
or
or
push
repnz
xchg
or
or
or
cmp
push
mov
and
and
in
xchg
daa
adc
adc
adc
sub
cs
xor
xor
leave
xchg
daa
dec
xor
sbb
sbb
jns
in
sbb
jp
in
push
adc
inc
ds
jl
sub
je
or
mov
imul
push
push
cmp
pusha
div
hlt
hlt
sbb
hlt
hlt
hlt
fs
inc
push
hlt
hlt
hlt
nop
inc
push
sbb
hlt
hlt
inc
push
sbb
hlt
push
sbb
hlt
hlt
hlt
sbb
hlt
hlt
hlt
fs
inc
push
hlt
hlt
hlt
nop
inc
push
sbb
hlt
hlt
inc
push
sbb
hlt
push
sbb
hlt
hlt
sub
sahf
cmp
repnz
das
inc
cmp
dec
mov
dec
pop
push
push
xor
inc
jb
mov
push
sub
addr16
lock
mov
pop
adc
push
das
adc
sub
(bad)
push
aas
or
push
adc
inc
add
xchg
dec
mov
add
jecxz
add
xchg
add
mov
ror
cvttps2pi
mov
cmp
cmp
test
jg
mov
add
adc
add
and
adc
mov
adc
sub
add
fsub
out
add
sub
sbb
pop
jl
mov
adc
xor
iret
mov
shl
xor
xor
inc
inc
fdivr
cwde
dec
stc
scas
pop
sbb
cld
xchg
cmp
pop
push
or
adc
mov
dec
or
ins
hlt
popa
fidivr
mov
jae
add
nop
cmp
in
push
push
(bad)
movs
frstor
mov
xor
test
nop
and
inc
xchg
xchg
adc
rcr
and
push
pop
pushf
mov
in
cdq
jbe
fstp
neg
je
mov
dec
enter
stc
and
cld
mov
(bad)
imul
(bad)
dec
ja
adc
in
neg
mov
inc
pop
test
jmp
je
jne
stos
mov
sub
mov
sub
xor
add
xor
and
xor
cmp
pop
cmp
xor
js
inc
cmp
lods
fisttp
iret
add
cmp
setae
inc
mov
pop
mov
js
mov
lods
fdiv
sbb
push
retf
dec
(bad)
cmps
or
nop
or
push
xchg
nop
xchg
cmp
cmps
and
pop
mov
mov
hlt
adc
fdivr
pop
mov
jbe
jg
aas
mov
add
(bad)
fist
jmp
fmul
call
jbe
test
lds
or
aas
pop
gs
add
dec
push
jns
mov
mov
dec
adc
sub
xchg
and
test
das
pop
outs
pop
lahf
and
mov
cs
mov
adc
mov
adc
mov
scas
(bad)
jle
sbb
adc
sbb
or
pop
sbb
aad
sub
or
add
into
xchg
push
inc
dec
add
xchg
test
scas
aas
add
xlat
js
jno
jecxz
and
xor
or
cmp
pop
ds
sub
das
ss
jecxz
mov
sub
mov
adc
or
pmaxsw
mov
cmp
jg
inc
xchg
inc
jo
xor
pop
jo
in
fdiv
mov
cwde
test
dec
add
shr
dec
add
imul
imul
sub
imul
sub
aam
push
ret
add
add
fiadd
out
ffreep
xchg
ins
add
push
nop
sbb
or
xor
dec
mov
or
or
rcr
adc
push
mov
pop
push
mov
das
push
sbb
push
xchg
iret
cli
mov
or
sub
pop
xchg
das
ror
(bad)
jnp
sub
push
test
pushf
test
pusha
fdiv
inc
ins
mov
xor
lahf
inc
dec
xor
inc
dec
jle
hlt
(bad)
dec
rcr
pop
popf
sahf
sbb
in
aam
imul
rcl
mov
shr
mov
inc
dec
ins
inc
sbb
xor
icebp
jo
in
das
mov
adc
shr
xor
js
jmp
nop
and
push
lock
rol
pop
shl
ja
fbstp
mov
addr16
xchg
in
shr
outs
inc
ficom
push
dec
sbb
xchg
dec
rol
mov
enter
xchg
movs
(bad)
sbb
dec
leave
fnstenv
xor
mov
out
xor
dec
push
push
adc
push
pusha
mov
cmps
xchg
pop
(bad)
push
loopne
inc
cmp
cdq
add
or
(bad)
adc
shr
out
fist
xchg
mov
pop
cmp
dec
pandn
push
push
push
jp
add
test
xchg
mov
dec
int3
xor
or
adc
adc
movs
in
sbb
push
pop
dec
xor
dec
add
sbb
jl
das
jbe
sti
loopne
mov
or
sbb
sub
and
sbb
mov
ds
cld
inc
and
dec
pop
loopne
repnz
xchg
imul
mov
adc
xor
or
jo
data16
(bad)
xor
mov
mov
mov
inc
lds
sub
cwde
mov
or
mov
inc
mov
dec
aaa
cli
(bad)
call
pop
pop
xchg
jbe
mov
dec
xchg
push
sub
or
and
adc
es
sbb
fwait
sbb
pop
(bad)
wrmsr
push
xor
push
xor
adc
or
sub
xor
fistp
mov
push
xor
push
adc
daa
inc
pop
sahf
imul
jbe
sub
cmovo
pop
mov
mov
dec
push
jne
(bad)
cdq
lods
fcom
call
or
in
inc
mov
jl
loopne
das
push
push
xchg
mov
mov
aam
push
leave
push
mov
jne
mov
aad
xor
inc
xor
cmp
scas
(bad)
mov
cmp
pop
mov
sbb
push
push
xor
add
bnd
adc
mov
shl
mov
and
inc
mov
popf
and
adc
dec
jl
mov
pop
fwait
dec
add
push
inc
pop
push
arpl
dec
add
or
mov
adc
(bad)
mov
xor
(bad)
clc
loope
into
mov
pop
imul
and
cmp
je
or
jecxz
add
fwait
mov
inc
mov
test
(bad)
mov
(bad)
int3
or
icebp
push
mov
int
xchg
sbb
aaa
mov
imul
and
inc
push
dec
mov
jp
mov
ja
inc
pop
inc
mov
jmp
dec
push
(bad)
push
jg
mov
adc
pop
push
je
pop
fcomp
movs
pop
adc
adc
pop
pop
mov
ret
sub
js
add
sbb
add
inc
jmp
scas
adc
fidiv
imul
push
push
les
sub
aam
(bad)
push
pop
sub
or
mov
or
xchg
inc
and
or
cmps
and
iret
in
inc
addr16
mov
frstor
sub
sub
xor
test
jl
push
daa
fsub
push
xor
xchg
es
mov
pop
cmp
pusha
scas
cmp
leave
and
test
inc
xor
inc
out
paddusb
sub
scas
push
sbb
neg
push
pushf
pop
sahf
retf
jae
mov
jb
repnz
daa
pusha
ins
jb
and
and
and
mov
sbb
cwde
adc
mov
int3
movs
mov
retf
shr
cmp
nop
inc
mov
mov
rol
mov
rcl
adc
xchg
out
fcomp
aas
in
aaa
push
add
scas
call
xlat
mov
pusha
mov
mov
push
push
pop
test
push
jmp
sub
fs
jb
push
push
mov
jo
lock
mov
data16
xor
push
idiv
retf
mov
or
adc
sbb
jge
adc
add
adc
adc
lahf
xchg
and
outs
sub
ins
mov
cwde
inc
sbb
ins
(bad)
fld
inc
adc
adc
xor
adc
add
adc
and
js
ds
adc
cmp
xchg
out
jo
pushf
jl
ins
in
mov
push
lock
inc
movs
mov
adc
mov
data16
pop
in
(bad)
cmp
add
inc
imul
nop
lock
mov
hlt
shr
or
adc
sub
mov
or
pop
xor
daa
sbb
pop
inc
dec
jno
add
pusha
sar
xor
das
ret
pop
jge
rcr
inc
mov
sub
xchg
push
mov
out
pop
loop
icebp
lea
test
outs
imul
pop
pop
xchg
cs
addr16
sub
or
mov
ss
fs
icebp
mov
arpl
dec
add
pop
pop
add
mov
add
push
test
push
xor
cmp
xor
div
add
neg
out
jo
jecxz
jle
or
das
dec
dec
out
jne
jp
or
inc
dec
xchg
rol
and
hlt
jge
ja
inc
lahf
sub
fist
jae
xor
rcl
add
xchg
jo
dec
mov
dec
pop
push
test
retf
into
jno
data16
hlt
inc
mov
xor
ins
mov
adc
cli
dec
mov
pusha
cli
jnp
inc
neg
loopne
mov
add
mov
or
out
daa
jb
movs
aam
cmp
mov
mov
dec
mov
imul
pop
retf
push
mov
int3
mov
mov
lahf
out
imul
add
test
test
inc
popa
fisttp
cmp
cmp
inc
test
shl
invd
addr16
les
inc
vpmacsdd
pop
jmp
mov
sti
sub
add
mov
dec
push
es
mov
pop
fwait
es
xlat
iret
bound
dec
add
add
aas
stos
mov
adc
inc
add
and
ds
pushf
in
arpl
enter
clc
mov
mov
rol
test
xor
nop
loopne
jno
add
addr16
das
xchg
ins
ja
rcr
mov
sbb
adc
(bad)
mov
out
jp
icebp
sub
xchg
aaa
leave
cs
iret
stc
ret
cmp
sbb
add
and
fs
and
mov
add
pop
cmp
or
add
cs
cmp
aad
hlt
xchg
retf
dec
dec
and
mov
xchg
lock
xchg
in
mov
inc
inc
fsubrp
cs
cmp
call
jl
dec
dec
in
xchg
inc
loopne
xchg
pushf
pushf
loopne
mov
daa
daa
fadd
in
fcomp
xchg
test
inc
aam
sbb
rcl
mov
fstp
dec
jmp
push
std
inc
xchg
(bad)
(bad)
(bad)
push
pop
fst
mov
mov
dec
pop
dec
mov
(bad)
xchg
add
popf
ret
icebp
dec
mov
adc
pop
enter
mov
xor
cli
pop
mov
pop
dec
cmp
(bad)
(bad)
cmp
sbb
pop
mov
ins
jns
je
popf
ins
sbb
dec
sbb
(bad)
inc
int3
sbb
and
lods
add
jg
fisubr
fcom
(bad)
(bad)
(bad)
dec
dec
ds
push
cmp
inc
mov
adc
stc
loop
jmp
(bad)
(bad)
call
inc
jb
fadd
(bad)
cmp
push
dec
lea
test
cdq
icebp
push
and
rcr
aam
mov
sbb
dec
je
movs
push
mov
jmp
pinsrw
push
pop
push
(bad)
jb
jb
pusha
jo
cmp
jns
rcr
sbb
shr
cmp
mov
dec
push
mov
add
fcmovnb
push
add
and
mov
mov
add
mov
mov
push
dec
push
and
repz
in
pop
inc
call
xor
jecxz
inc
call
jl
fild
fsub
sbb
add
outs
xor
adc
mov
dec
or
pop
cmp
push
jecxz
or
sub
mov
popf
add
enter
pop
pop
mov
mov
mov
pop
js
dec
loop
inc
lods
sub
inc
mov
sbb
cmp
pop
jmp
add
jmp
sar
inc
das
stos
sub
adc
add
xor
or
adc
inc
fisub
into
movs
cmp
jne
xchg
sub
repz
xchg
push
pushf
les
repz
sub
stc
mov
iret
cmp
add
out
aas
sbb
in
ins
and
mov
adc
cmp
mov
sub
pop
mov
pop
xchg
mov
mov
mov
cs
mov
or
cwde
mov
mov
mov
and
das
xchg
lock
cmp
leave
inc
and
inc
jb
pop
inc
pusha
pop
and
leave
and
loopne
add
dec
cs
mov
mov
and
sub
aas
shl
mov
add
sub
pop
lock
add
mov
jo
adc
aas
or
and
xchg
push
or
or
fistp
adc
inc
add
add
(bad)
call
retf
int3
enter
enter
fcomp
fxch
(bad)
fiadd
cmps
lock
loope
nop
jmp
in
loope
jge
jno
add
add
inc
mov
dec
adc
add
in
or
or
ret
mov
inc
ds
adc
mov
das
jg
enter
add
mov
scas
cld
in
call
xchg
sub
sub
mov
xor
leave
sbb
mov
iret
inc
cmp
fidivr
call
mov
bound
cld
in
lods
inc
inc
xchg
mov
xlat
fadd
outs
not
sar
xor
xchg
push
or
push
push
(bad)
(bad)
jmp
ret
inc
mov
push
pop
test
enter
mov
inc
cmp
and
(bad)
(bad)
push
daa
(bad)
retf
into
pop
inc
test
xchg
clc
js
aas
sbb
pop
(bad)
mov
addr16
(bad)
(bad)
(bad)
dec
repnz
bound
and
cld
gs
sahf
mov
sub
inc
aad
iret
dec
js
(bad)
jmp
inc
mov
stos
mov
cmp
or
mov
pop
out
sub
push
daa
cmp
inc
xor
cmp
call
mov
stc
popf
sti
jmp
stos
push
(bad)
(bad)
(bad)
inc
das
push
sbb
sar
repnz
test
nop
fild
daa
movs
lahf
nop
inc
pop
(bad)
(bad)
(bad)
jmp
(bad)
inc
pop
pushf
mov
pop
pushf
mov
fs
aam
imul
loope
jp
iret
inc
bound
std
pop
(bad)
ds
push
cmps
scas
mov
(bad)
(bad)
(bad)
call
or
add
cmp
xor
in
cmp
sahf
xchg
pop
cmps
lock
(bad)
(bad)
jmp
mov
popa
mov
fsub
addr16
repz
mov
sub
and
add
les
outs
bound
xor
jb
outs
jb
push
mov
dec
and
and
mov
out
add
and
xchg
xor
xor
inc
aaa
cli
add
inc
inc
cld
add
imul
sahf
push
or
out
or
xor
push
sub
imul
sahf
out
sahf
push
sbb
push
jp
pop
inc
push
(bad)
push
add
sahf
out
jp
push
adc
sbb
sub
cs
scas
push
test
out
out
push
mov
push
rcr
fnsave
or
fimul
out
push
cld
pop
mov
cmp
add
push
push
sbb
popf
jo
das
push
dec
pop
int3
pop
pop
push
neg
repnz
push
test
enter
int3
xchg
pop
push
mov
dec
pop
mov
push
mov
test
je
sub
shrd
fucomi
in
lods
outs
sbb
sbb
jg
cmp
xchg
jo
je
cmp
js
into
dec
outs
das
js
jg
js
sbb
sar
das
inc
js
js
cmps
cmp
xchg
js
jl
adc
dec
sbb
adc
fild
jl
cs
cmp
mov
inc
outs
jl
jl
push
sbb
jl
jl
add
test
jmp
sub
push
add
ss
(bad)
push
adc
or
or
stc
(bad)
pop
or
push
adc
add
push
sbb
sbb
pop
add
mov
pop
sti
in
test
sbb
adc
std
fcom
fild
adc
push
hlt
push
inc
stos
imul
mov
mov
(bad)
jge
ss
cmp
nop
mov
shr
ror
neg
or
pusha
and
rcr
mov
pop
push
bound
jbe
loope
adc
adc
outs
aaa
popa
xor
(bad)
dec
dec
dec
cs
dec
dec
dec
adc
adc
shl
or
add
push
adc
or
mov
ja
add
iret
push
mov
dec
mov
aad
xor
pop
idiv
adc
dec
add
push
xor
out
xor
ss
dec
jne
jge
xchg
xchg
dec
add
repz
fld
dec
bound
dec
xor
(bad)
into
xor
cmp
xor
jns
xor
xor
fdivp
jge
sbb
xor
add
out
aaa
cmp
arpl
out
xor
push
aaa
push
int3
and
imul
jmp
sti
shl
xchg
dec
add
push
dec
ss
cmp
lock
sti
xor
and
js
sti
mov
dec
add
push
cmp
cmp
xor
and
dec
test
xor
loopne
imul
cmp
dec
dec
inc
pop
push
inc
inc
inc
adc
repz
inc
inc
dec
sahf
out
fidiv
jle
xor
xor
out
inc
jno
xor
adc
jns
xor
xor
scas
out
ficom
xor
xor
or
xor
xor
out
fidivr
inc
inc
inc
inc
inc
repz
jle
xor
xor
cmp
sbb
jle
ss
outs
aaa
jle
jecxz
iret
repz
aaa
aaa
aaa
cmp
sbb
cmp
and
into
repz
iret
cmp
repz
cmp
push
js
jecxz
inc
stos
inc
cmp
inc
inc
jge
push
jl
xor
jae
(bad)
lock
inc
push
inc
das
jle
jp
and
xor
pop
dec
xor
jmp
sahf
xlat
mov
push
inc
inc
inc
pop
aas
push
cmp
xor
mul
ret
xchg
arpl
lahf
sahf
xlat
mov
inc
inc
adc
pop
xor
cmp
lock
inc
sar
fild
cmps
dec
out
sti
jae
add
inc
mov
js
jecxz
xor
inc
mov
mov
mov
jecxz
jmp
fwait
scas
push
jnp
jle
or
scas
mov
inc
cmp
inc
call
inc
imul
jmp
pop
iret
add
inc
add
xor
add
add
ins
push
adc
push
sub
fucomi
adc
movs
dec
enter
xchg
jo
(bad)
sub
iret
push
into
push
mov
repz
ror
fsub
call
lock
add
iret
repz
xchg
adc
and
xor
repz
inc
dec
push
pop
repz
repz
push
repz
mov
pop
push
loope
mov
cmp
dec
inc
cs
xor
pushf
push
dec
cmp
cmp
stc
daa
leave
xor
cmps
add
add
push
leave
add
mov
mov
pop
add
xlat
(bad)
jp
xchg
inc
cmp
add
add
ins
pop
jnp
add
add
add
pop
psubq
into
add
add
add
inc
cld
add
add
lock
inc
push
sbb
loopne
sahf
fistp
adc
adc
aad
add
je
(bad)
push
pop
or
add
div
add
add
add
fcmovbe
adc
add
mov
mov
push
push
das
push
pop
pop
pop
pop
(bad)
outs
fild
or
push
or
or
das
or
or
and
or
add
clc
mov
add
repz
jae
push
inc
pop
js
retf
clc
cmp
mov
in
add
repz
adc
cmp
je
out
cmp
test
fdivr
adc
loop
add
leave
add
ficom
(bad)
lock
add
xor
sbb
mov
mov
outs
or
inc
(bad)
jbe
sbb
(bad)
inc
outs
push
fsubr
jg
icebp
sub
cmp
lods
aas
pop
jmp
inc
inc
jmp
cwde
pop
inc
pop
(bad)
(bad)
inc
(bad)
retf
xchg
adc
push
cmp
dec
or
icebp
or
cld
mov
(bad)
(bad)
(bad)
(bad)
jmp
nop
fs
jecxz
cli
jl
aas
jno
inc
mov
pop
scas
scas
stos
movs
in
bound
dec
mov
rcl
add
cmp
jmp
sbb
mov
dec
jge
dec
pushf
(bad)
(bad)
(bad)
inc
mov
push
jp
inc
inc
xchg
imul
lds
cmp
ret
(bad)
dec
dec
adc
inc
inc
leave
push
vmread
mov
ins
les
in
adc
nop
in
aas
pop
mov
lds
sbb
fs
test
fmul
push
fdiv
mov
push
cmp
fdivr
push
pop
lods
popf
fadd
(bad)
push
xchg
push
and
nop
in
sub
repnz
push
dec
das
sahf
mov
daa
cmp
test
das
test
nop
fdiv
pop
in
cmp
dec
xchg
jnp
vdivps
jl
push
shr
fimul
jns
hlt
es
test
cld
das
pop
es
lahf
ja
iret
mov
pushf
xchg
xchg
mov
pop
mov
dec
adc
mov
jl
xchg
pop
or
pop
repnz
push
mov
push
jecxz
cmp
sub
lock
das
pushf
repz
enter
in
mov
es
in
sub
int3
push
and
daa
jbe
js
sahf
jg
call
and
out
rcr
(bad)
dec
push
pop
push
mov
push
not
mov
xor
and
cmp
jo
ins
push
test
sub
scas
popf
daa
test
ja
out
pop
out
outs
sub
mov
les
fsubr
jne
mov
add
dec
push
sub
xchg
inc
(bad)
nop
pop
xor
cdq
aas
in
aas
ja
xchg
add
dec
in
in
mov
jg
cmp
xchg
mov
imul
in
inc
pop
in
rcr
aas
add
fwait
add
out
outs
das
fld
mov
cmovl
iret
dec
cmp
cmp
pusha
jmp
pop
push
out
imul
sysret
add
add
je
dec
(bad)
es
or
push
sbb
mov
ins
mov
clc
push
or
pop
jns
out
in
pop
dec
ins
movs
ja
mov
je
inc
addr16
and
loopne
jbe
arpl
std
sbb
jns
out
cmp
push
stc
sahf
out
sahf
js
cwde
idiv
fdiv
cld
hlt
and
xor
repz
push
repnz
jns
out
icebp
jl
pushf
out
out
sahf
out
out
loopne
clc
int
xlat
mov
jmp
push
jmp
jl
mov
adc
call
data16
adc
add
jns
mov
pop
push
test
add
push
dec
sar
fdiv
push
hlt
jg
adc
aas
add
mov
jae
push
xor
push
ins
rcr
mov
addr16
push
cmps
retf
das
sti
push
shl
out
or
or
push
iret
repz
or
add
repz
imul
sub
dec
add
jo
jns
jnp
sbb
sbb
adc
push
or
repz
repz
add
push
sbb
fst
mov
push
cmp
cmp
pop
push
push
pushf
loopne
iret
repz
daa
cmp
ficomp
or
ucomiss
adc
jns
je
xchg
push
inc
jno
out
or
mov
paddsw
xlat
jmp
adc
scas
jmp
push
aam
pop
mov
(bad)
jg
inc
push
ds
mov
outs
mov
push
(bad)
in
test
iret
enter
call
dec
push
sbb
loop
mov
xor
sub
outs
push
xchg
sahf
pop
into
popa
iret
mov
int3
push
push
imul
push
and
sar
sahf
int3
cmp
add
mov
push
cmp
fmul
neg
mov
mov
jnp
mov
jno
test
clc
(bad)
mov
xchg
push
imul
daa
mov
add
das
imul
dec
mov
push
int3
xor
cld
adc
dec
jp
jmp
(bad)
into
push
mov
push
push
jae
dec
das
dec
lahf
fwait
sahf
pcmpgtb
into
mov
rol
xchg
inc
dec
fcmovnbe
ds
adc
in
push
(bad)
mov
jae
push
dec
add
aad
out
push
inc
lods
lock
aam
mov
push
test
jl
jmp
sbb
call
clc
add
cmps
push
cld
call
fcmove
push
push
push
cmp
das
and
lods
outs
jbe
sahf
lds
dec
push
mov
or
lahf
sahf
push
pop
pop
int
push
add
sahf
jle
fucomip
aas
pop
push
mov
adc
ja
out
(bad)
jne
mov
push
cmc
xor
jl
xchg
in
cmp
int
mov
out
mov
mov
inc
or
loopne
push
sar
inc
pop
or
jnp
rol
push
push
nop
out
nop
xchg
jmp
push
jns
addr16
or
mov
push
push
jae
lahf
loope
into
xchg
cdq
mov
paddsb
call
jp
add
lock
xlat
and
xor
xor
jp
and
dec
fdivr
hlt
add
int
jae
and
int
push
rcl
or
ror
into
push
(bad)
ds
jno
cmp
outs
mov
cld
push
out
push
call
mov
push
test
sbb
inc
lods
mov
ds
retf
jge
loope
sub
shl
push
mov
lods
fimul
add
out
std
inc
out
mov
loopne
fimul
and
movs
outs
pop
lds
call
(bad)
jo
je
stos
call
out
mov
cwde
sti
cwde
pop
push
out
out
scas
mov
push
xchg
jo
out
jg
aad
pop
push
jl
lahf
out
fidiv
outs
pushf
push
retf
rol
add
fisttp
push
out
dec
lock
dec
rcl
sbb
jle
out
sahf
push
(bad)
pusha
hlt
or
dec
push
loope
inc
dec
adc
pop
rcl
push
jb
mov
hlt
outs
push
jl
mov
outs
cmp
push
iret
rcl
push
mov
or
mov
dec
push
nop
xor
lock
unpcklps
jg
adc
mov
push
scas
push
mov
lods
push
pop
push
push
fdivr
sbb
push
inc
arpl
push
shl
mov
push
push
out
or
push
mov
jmp
call
out
nop
push
cmc
mov
mov
and
push
out
call
add
inc
add
or
add
je
add
dec
pushf
or
mov
sbb
push
pop
push
repnz
sar
ret
xlat
or
push
cmp
jae
push
xchg
mov
mov
in
mov
ja
repz
inc
push
mov
jns
int3
(bad)
fdivp
out
fwait
xchg
dec
icebp
inc
add
push
add
jno
jmp
and
fisubr
stos
or
or
fistp
add
jle
pop
pop
add
jg
or
add
add
adc
sbb
add
outs
mov
fwait
or
adc
push
jle
sar
cmp
fsubr
call
pop
sbb
and
outs
and
popa
fisttp
inc
inc
or
mov
adc
inc
pop
xor
mov
into
in
icebp
push
cld
or
or
out
sahf
sbb
xor
pop
aaa
or
int
into
dec
and
(bad)
and
(bad)
in
mov
xor
xor
jns
addr16
xor
xor
mov
add
sub
aaa
or
jns
fisub
add
and
jb
and
and
mov
adc
add
push
sbb
pop
add
push
or
push
pop
and
add
add
test
cmp
das
pop
lahf
mov
jnp
pop
mov
pop
adc
pop
adc
adc
(bad)
out
pusha
pop
sbb
or
adc
pop
push
lds
in
adc
cmps
fmul
out
or
push
or
fidivr
ins
or
ds
push
pop
push
sbb
sti
neg
scas
nop
cmps
pop
cmp
js
cmp
rol
adc
adc
out
jge
fisubr
sub
mov
or
push
dec
push
lock
std
sti
jo
dec
push
push
adc
adc
push
je
neg
jnp
xor
enter
fs
and
test
fnstsw
push
pop
test
inc
push
call
mov
push
cwde
xchg
push
push
jl
cmp
fcomp
jnp
sbb
push
sub
mov
mov
push
clc
jle
push
push
push
adc
mov
and
jb
xor
(bad)
dec
push
bound
neg
movs
push
add
add
jle
out
mov
push
sbb
xchg
inc
jp
out
mov
aam
adc
push
sub
mov
neg
jnp
lahf
mov
dec
push
hlt
jle
push
push
push
mov
xchg
xchg
(bad)
xor
jbe
ss
jnp
ds
dec
push
pushw
es
lods
push
jnp
mov
inc
push
in
jle
push
pop
push
push
push
out
mov
arpl
jle
ds
fdivr
sbb
outs
fdivp
fidivr
cs
mov
dec
push
cld
push
sbb
sub
push
push
adc
cmp
mov
xor
ret
push
and
mov
push
jo
push
inc
push
loop
jnp
mov
push
xchg
(bad)
jns
cmp
sar
push
sub
mov
pop
imul
dec
push
bnd
adc
or
push
xor
out
pop
jmp
and
test
loop
sub
inc
push
jmp
mov
jge
cmp
push
sub
push
mov
dec
push
cli
push
sbb
addr16
ret
push
idiv
lods
js
or
jmp
mov
add
or
call
emms
lds
jnp
push
or
out
mov
jmp
scas
or
icebp
pop
mov
dec
push
idiv
push
push
pop
out
mov
scas
push
aaa
ds
jmp
daa
mov
mov
fild
(bad)
ficom
outs
or
ja
pop
icebp
push
fdivrp
outs
push
das
push
mov
cmc
pop
pop
dec
push
(bad)
inc
pop
jb
pop
mov
jb
shl
icebp
leave
test
jmp
enter
pop
jb
pop
lds
and
jb
cmc
int
pop
enter
enter
popf
fnstsw
std
ret
mov
jecxz
jb
pop
jb
mov
test
retf
stos
enter
jmp
fist
leave
test
(bad)
and
jb
cmps
out
and
jb
xlat
mov
pop
and
test
scas
out
lahf
pop
enter
mov
gs
sahf
pop
push
out
mov
pop
inc
add
adc
adc
adc
ficomp
push
add
(bad)
sbb
and
add
add
push
inc
je
add
sbb
pop
push
popa
pusha
xor
cmps
imul
jg
xor
or
or
addr16
mov
lods
outs
mov
sub
cmp
push
add
push
add
adc
(bad)
cvtdq2ps
shr
jb
and
or
cld
add
imul
nop
add
adc
loopne
jmp
ins
gs
outs
bound
ins
imul
xor
pop
xor
mov
ss
add
push
imul
mov
ins
dec
inc
pusha
and
and
imul
in
outs
addr16
popa
outs
jns
or
fs
jo
xchg
inc
pusha
jns
bound
cmp
adc
fldcw
jg
or
call
sub
jae
inc
and
sub
add
jbe
dec
ins
jl
adc
jmp
dec
sub
inc
jnp
arpl
arpl
adc
popaw
(bad)
bound
imul
popa
cmp
sub
sub
popa
add
and
xchg
lea
or
adc
push
test
xor
test
and
mov
lods
mov
adc
leave
leave
lds
adc
adc
leave
leave
adc
push
dec
add
mov
push
or
push
arpl
sbb
mov
shr
xor
call
out
add
pop
pop
push
push
jecxz
ret
push
add
jns
out
sbb
sbb
sbb
popf
(bad)
out
inc
add
bound
add
fiadd
in
add
add
leave
leave
leave
leave
pop
or
or
or
add
not
adc
scas
loopne
dec
pop
or
or
or
(bad)
sbb
cmp
sub
ins
in
repz
repz
pop
fdivr
or
mov
iret
repz
and
(bad)
adc
iret
shl
mov
repnz
cmp
retf
iret
repz
repz
call
iret
repz
push
xchg
repz
repz
data16
iret
repz
xchg
push
(bad)
ss
cmp
repz
push
mov
repz
repz
outs
out
push
iret
repz
sahf
pop
fidivr
mov
cmp
int3
push
xor
shl
popa
iret
repz
loope
xchg
push
shl
fcmovbe
repz
jno
ja
mov
out
dec
leave
sub
out
sbb
jns
cmp
jns
out
inc
lds
sahf
out
adc
loopne
sahf
xor
sahf
out
fiadd
lea
sub
lods
ins
in
sbb
sahf
pop
fnstsw
mov
js
adc
push
xchg
add
push
repz
repz
rcl
xor
iret
repz
mov
jae
repz
repz
or
iret
repz
retf
retf
sub
iret
repz
stos
stos
imul
cmp
repz
sbb
iret
repz
fcmovnu
cmp
iret
repz
mov
sti
cmp
repz
pop
xchg
repz
mov
cmp
cmps
cmps
addr16
cmp
repz
pop
xchg
xchg
push
repz
repz
xlat
xlat
aaa
aaa
iret
repz
mov
ja
div
cmp
repz
jg
iret
repz
iret
iret
das
das
iret
repz
scas
scas
outs
outs
out
out
cmp
repz
pop
lahf
lahf
pop
repz
repz
(bad)
aas
aas
out
repz
mov
add
jns
xlat
jmp
xor
and
call
mov
out
sub
pop
cmp
jns
out
add
and
pop
out
sahf
adc
xor
test
jns
add
push
inc
ret
and
js
mov
add
call
add
pop
lods
lahf
add
inc
js
adc
sbb
push
push
cmp
inc
cmp
sbb
adc
mov
repz
xchg
push
sbb
push
pop
xor
add
cmp
jns
add
or
and
mov
fiadd
mov
adc
mov
icebp
add
and
jb
sbb
push
jb
pop
sbb
pusha
push
jb
fist
js
loop
or
xchg
adc
adc
or
adc
push
pop
sbb
mov
cs
sbb
pop
sbb
add
add
les
inc
shl
pop
adc
sbb
sub
xor
add
cmp
jo
push
and
jmp
mov
shl
push
xlat
or
sbb
frstor
add
mov
push
in
jnp
call
push
cvttps2pi
cld
add
add
pop
daa
adc
(bad)
fild
add
popa
push
out
mov
les
(bad)
hlt
push
xor
movs
arpl
mov
mov
push
movs
mov
aad
mov
rcl
mov
(bad)
(bad)
(bad)
jmp
mov
sbb
dec
jno
repz
test
ficomp
jmp
(bad)
(bad)
(bad)
(bad)
push
rol
shr
std
in
leave
mov
add
ins
push
arpl
(bad)
(bad)
(bad)
cmp
or
pop
adc
in
pusha
aad
jno
mov
inc
aam
dec
std
(bad)
(bad)
(bad)
inc
or
ins
cwde
mov
(bad)
leave
mov
lods
jecxz
fdiv
jne
fild
(bad)
(bad)
(bad)
dec
shr
cmp
ficom
push
xlat
enter
mov
and
mov
cdq
(bad)
(bad)
(bad)
call
mov
sub
mov
(bad)
and
or
adc
stos
(bad)
(bad)
(bad)
call
data16
inc
fdiv
jno
add
aad
mov
mov
movs
jmp
jmp
mov
call
xor
jl
test
xchg
sbb
push
inc
or
jmp
ins
fs
add
hlt
push
imul
fild
sbb
xor
dec
(bad)
xchg
push
ins
jnp
add
shl
adc
(bad)
inc
pmaddwd
fnstenv
adc
mov
mov
bound
ficom
gs
dec
pop
popa
mov
into
pop
cmp
mov
inc
movs
fisttp
xchg
fdivr
(bad)
(bad)
ffreep
(bad)
shl
jmp
outs
xor
mov
sar
add
in
jg
(bad)
inc
xor
or
cmp
add
daa
xchg
or
and
mov
push
mov
outs
and
aam
mov
push
stc
ficomp
leave
fldcw
and
xlat
(bad)
pop
(bad)
(bad)
(bad)
(bad)
cmp
mov
cmp
lods
ins
mov
in
mov
mov
add
(bad)
(bad)
(bad)
inc
jmp
fild
push
fdiv
or
test
fs
ds
or
or
jmp
popf
dec
xchg
daa
scas
jl
sahf
pop
jge
xchg
(bad)
shl
add
(bad)
(bad)
(bad)
(bad)
inc
push
imul
xor
sbb
push
imul
aam
loopne
ror
(bad)
(bad)
(bad)
dec
dec
frstor
fistp
mov
mov
aad
mov
call
xchg
shl
(bad)
(bad)
(bad)
call
fisttp
addr16
cmps
fld
mov
dec
ss
fisubr
or
scas
test
(bad)
(bad)
(bad)
jmp
add
ret
out
pusha
fist
addr16
mov
jns
imul
and
shr
(bad)
(bad)
(bad)
push
loop
push
xchg
ja
int3
add
mov
das
es
lds
or
sub
(bad)
(bad)
inc
mov
cmps
call
ret
shl
sbb
ret
es
pushf
mov
(bad)
dec
xchg
ins
add
ss
jmp
addr16
jb
push
or
adc
mov
loop
sub
or
mov
xchg
or
out
fdivr
fisttp
aam
rol
(bad)
(bad)
push
clc
mov
push
int
mov
mul
ja
outs
ja
mov
out
sar
(bad)
mov
dec
cmp
pop
or
adc
sahf
gs
clc
sar
imul
(bad)
(bad)
jg
push
js
or
push
add
mov
cmp
cmps
not
pusha
ror
imul
ja
ds
push
scas
fcomp
fldenv
fild
cmp
aaa
push
scas
mov
fidivr
mov
jmp
mov
repnz
retf
mov
cmps
(bad)
(bad)
(bad)
jmp
sar
sub
push
mov
jp
mov
dec
popa
les
sbb
xchg
fucomip
(bad)
jmp
outs
sub
mov
or
sbb
add
sub
sbb
bound
xor
push
sub
hlt
ja
xchg
inc
(bad)
(bad)
(bad)
dec
mov
enter
ror
fxtract
jecxz
dec
mov
dec
jle
mov
sub
cwde
(bad)
(bad)
(bad)
inc
adc
fst
jo
js
inc
out
popa
push
xlat
scas
cs
mov
xlat
mov
sbb
test
add
sbb
sub
test
sbb
ins
(bad)
fistp
inc
aam
push
pop
(bad)
(bad)
(bad)
dec
mov
adc
mov
popa
ja
mov
out
repz
gs
(bad)
(bad)
(bad)
in
fisubr
inc
inc
sub
imul
jo
scas
imul
out
pop
sub
sub
pop
or
stos
(bad)
(bad)
cmp
repz
fbstp
push
jo
add
hlt
div
sub
scas
ret
xchg
sbb
xor
pop
nop
sti
mov
test
jns
test
cmp
jns
cmc
(bad)
(bad)
push
dec
call
inc
cmp
ficomp
dec
jns
inc
jle
jmp
(bad)
sbb
(bad)
(bad)
(bad)
fist
mov
lea
fnstcw
mov
dec
hlt
mov
or
xchg
std
adc
or
int3
pop
dec
xor
inc
mov
outs
retf
push
pop
mov
sar
pop
mov
lea
push
cwde
xlat
ficom
test
loope
xchg
retf
(bad)
(bad)
jmp
les
jb
out
imul
push
inc
lahf
test
pop
adc
push
sbb
adc
and
call
cmp
inc
out
and
cmp
dec
mov
mov
sbb
int3
cmps
xor
mov
lods
out
sar
mov
adc
push
dec
leave
jmp
sti
push
jns
das
mov
and
je
or
jmp
adc
mov
dec
push
jo
gs
out
jle
(bad)
repz
mov
xchg
rcl
cmp
mov
mov
js
mov
test
cwde
cmp
test
mov
mov
(bad)
(bad)
dec
scas
adc
out
pop
push
ins
hlt
inc
int
fldcw
push
ret
adc
add
inc
jmp
(bad)
(bad)
inc
fadd
ss
push
out
mov
mov
movs
test
jno
mov
ja
fldenv
pop
push
dec
sub
or
sub
add
adc
(bad)
jmp
mov
rcl
xchg
push
(bad)
push
hlt
out
les
fdecstp
aaa
cld
or
scas
test
sbb
inc
xor
push
retf
call
push
outs
sbb
sub
loope
fisub
lds
push
call
dec
in
(bad)
(bad)
push
mov
movs
ret
addr16
test
mov
(bad)
lahf
fdivrp
cmp
repz
jnp
call
(bad)
jmp
cmp
mov
or
stos
mov
sbb
icebp
adc
sub
jae
xor
mov
mov
dec
cmc
shr
add
mov
arpl
lods
(bad)
loope
int3
mov
stc
(bad)
(bad)
call
adc
mov
jo
popf
mov
test
and
pop
ins
cmp
(bad)
(bad)
call
les
adc
sub
dec
add
sar
push
or
cmp
(bad)
(bad)
call
fcom
push
in
xor
cdq
bound
fcom
into
pop
dec
loope
push
jle
(bad)
(bad)
(bad)
call
sub
int3
bound
mov
xor
call
mov
pop
lods
ret
(bad)
(bad)
inc
xchg
dec
ins
das
mov
adc
test
push
and
sub
adc
jns
(bad)
(bad)
mov
(bad)
sbb
mov
mov
in
and
(bad)
(bad)
(bad)
out
out
mov
shl
es
xchg
aas
mov
adc
out
(bad)
(bad)
dec
sar
mov
gs
pop
jle
aaa
or
jbe
dec
div
lahf
adc
xor
aas
mov
and
push
push
add
test
pop
mov
(bad)
(bad)
push
mov
ret
mov
lea
push
adc
(bad)
cmp
(bad)
test
pop
cmp
or
stc
sbb
sub
mov
inc
(bad)
(bad)
(bad)
dec
in
push
ja
pop
sub
das
sbb
fild
sbb
repnz
(bad)
call
mov
xchg
dec
jae
adc
cmp
and
(bad)
adc
mov
pop
loopne
dec
cmp
(bad)
(bad)
(bad)
jmp
cmp
clc
or
cmp
inc
aas
or
cmp
push
add
outs
(bad)
(bad)
(bad)
(bad)
jge
aaa
ss
fidiv
test
xchg
xor
imul
fld
adc
nop
in
and
(bad)
jmp
fsub
leave
pop
sub
and
mov
(bad)
mov
repz
outs
sub
fidivr
sub
ds
mov
(bad)
call
sub
call
das
ror
jno
pop
cmp
(bad)
(bad)
call
and
push
jbe
icebp
pop
je
fwait
aad
js
mov
mov
jg
or
jmp
(bad)
iret
jl
je
jns
push
inc
js
mov
(bad)
jnp
cs
or
cli
cmp
nop
es
xchg
pop
in
ja
add
push
(bad)
cmp
imul
ins
arpl
sub
shr
aam
cmps
gs
fs
aad
(bad)
mov
imul
dec
pop
mov
outs
jns
(bad)
jmp
push
dec
retf
or
xchg
mov
dec
movs
fstp
inc
scas
lock
inc
test
(bad)
(bad)
inc
and
inc
inc
xor
inc
jae
cmovo
out
inc
sbb
push
xor
mov
call
(bad)
mov
mov
clc
push
mov
adc
push
aad
mov
pop
fist
pop
xchg
data16
(bad)
out
clc
pop
mov
movs
pop
lock
add
sub
outs
pop
ins
das
lods
pop
sbb
loope
jno
(bad)
(bad)
push
loopne
iret
mov
fldenv
cmp
imul
out
addr16
in
dec
es
mov
(bad)
(bad)
jmp
out
push
sahf
mov
in
in
das
call
mov
stos
jmp
pop
imul
(bad)
(bad)
inc
fcom
cld
sahf
ins
xchg
(bad)
test
adc
cli
sbb
sti
inc
les
(bad)
(bad)
call
jmp
ret
cmp
inc
icebp
xchg
inc
or
mov
xchg
(bad)
test
dec
pusha
pop
js
push
aaa
mov
fidivr
jecxz
fstp
mov
shl
cmc
fucom
dec
(bad)
(bad)
(bad)
push
(bad)
or
xlat
out
test
fsubr
aam
mov
aad
movs
(bad)
shl
into
mov
rcr
(bad)
(bad)
(bad)
jmp
adc
pop
lds
xchg
pushf
les
fcmovb
dec
inc
sbb
int3
push
push
ret
xchg
ret
mov
call
adc
test
dec
retf
lahf
lds
adc
leave
pop
cmc
(bad)
mov
xchg
sbb
ror
mov
xchg
ja
ins
nop
(bad)
(bad)
(bad)
jmp
inc
sub
pushf
cmps
xchg
stos
push
fs
repnz
clc
(bad)
mov
sahf
(bad)
(bad)
(bad)
call
jns
popf
and
mov
adc
xor
xor
dec
mov
(bad)
(bad)
call
or
(bad)
in
popf
or
dec
add
mov
(bad)
mov
push
pop
cmp
(bad)
jmp
mov
adc
fadd
arpl
pop
xchg
shl
test
(bad)
(bad)
(bad)
dec
add
stos
stc
outs
movs
stos
jl
jmp
dec
adc
scas
adc
lods
sbb
xor
jbe
jne
inc
aas
mov
les
clc
mov
stos
std
jl
popf
xchg
mov
mov
sbb
mov
(bad)
(bad)
(bad)
mov
int
mov
fcmovne
mov
mov
mov
cmovns
push
dec
adc
inc
not
xor
mov
ficomp
mov
(bad)
mov
addr16
stos
out
scas
mov
push
xchg
bound
pop
imul
xor
dec
or
loopne
outs
add
(bad)
dec
(bad)
(bad)
(bad)
(bad)
fsubr
xor
loopne
adc
lahf
push
sbb
xor
cli
jno
lods
inc
enter
lods
(bad)
(bad)
(bad)
jmp
jb
outs
into
int
jg
xchg
adc
mov
aas
sahf
rcr
xchg
call
(bad)
(bad)
dec
(bad)
mov
inc
jp
ds
xor
mov
cmp
rol
xchg
or
(bad)
(bad)
call
xchg
loop
pop
test
xchg
fstp
(bad)
iret
aas
sub
xchg
in
(bad)
(bad)
(bad)
jmp
in
inc
push
clc
sub
les
and
loop
jg
or
xchg
or
(bad)
jge
aad
shl
mov
scas
(bad)
(bad)
dec
mov
inc
std
mov
xchg
(bad)
hlt
adc
call
(bad)
(bad)
call
pop
aas
test
mov
sbb
mov
jbe
push
retf
pop
jg
test
push
shl
(bad)
(bad)
jmp
out
mov
adc
shl
cmp
das
retf
jnp
dec
ja
(bad)
(bad)
out
into
prefetchw
or
jae
mov
cmc
cwde
outs
inc
nop
call
cld
jle
data16
sbb
(bad)
(bad)
push
ficom
daa
mov
mov
out
mov
mov
mov
cmp
shr
hlt
(bad)
dec
add
cmp
inc
mov
das
xchg
in
pop
xchg
sub
mov
pop
clc
or
(bad)
(bad)
(bad)
fild
icebp
cmps
in
fist
inc
addr16
fwait
push
add
in
mov
(bad)
mov
xor
inc
arpl
adc
push
mov
aaa
pop
jmp
(bad)
jmp
scas
push
loope
inc
call
cwde
call
scas
push
out
aaa
push
clc
inc
add
dec
and
jmp
cdq
scas
xlat
loopne
retf
xor
mov
in
pop
shl
push
mov
(bad)
(bad)
mov
in
jmp
bound
inc
xchg
out
xor
or
sub
in
(bad)
(bad)
call
cmp
pop
cmp
outs
xor
or
xchg
movs
loope
mov
(bad)
inc
dec
dec
cmc
scas
repz
xor
mov
xchg
and
hlt
js
scas
dec
jp
(bad)
inc
rol
shl
pop
xchg
idiv
sub
sbb
repnz
and
(bad)
(bad)
out
(bad)
sbb
pusha
jle
cmc
mov
(bad)
out
mov
pop
push
mov
ret
mov
(bad)
call
sbb
mov
xor
mov
stc
(bad)
and
push
(bad)
(bad)
(bad)
(bad)
mov
rol
outs
mov
push
or
adc
jmp
into
movs
adc
(bad)
ud0
(bad)
dec
fst
xchg
test
lods
sub
sbb
and
xor
fcom
add
(bad)
scas
iret
jb
leave
jae
(bad)
(bad)
(bad)
jmp
icebp
movs
push
inc
xchg
sbb
test
pop
adc
out
dec
jbe
mov
into
lea
inc
fsubr
inc
clc
call
call
das
stc
xor
xchg
inc
fidiv
jmp
(bad)
stc
mov
mov
lock
(bad)
(bad)
call
pop
imul
ss
test
(bad)
cs
mov
call
(bad)
push
dec
cs
out
add
add
pop
std
(bad)
(bad)
(bad)
call
dec
cwde
ds
icebp
and
sub
aam
into
mov
iret
test
jg
pop
es
outs
mov
(bad)
(bad)
dec
retf
(bad)
sbb
loope
push
adc
cmp
adc
jg
(bad)
jmp
jle
cmp
pushf
in
adc
add
sbb
cmps
push
data16
(bad)
(bad)
inc
jno
ds
outs
sub
mov
add
xchg
out
mov
dec
or
sbb
rol
(bad)
(bad)
jmp
neg
jmp
pop
test
or
xchg
popa
mov
fdivrp
(bad)
jmp
ja
xor
cdq
or
pop
ins
les
jo
hlt
(bad)
xor
(bad)
(bad)
(bad)
dec
fisttp
movs
loopne
jmp
mov
mov
sub
jl
out
sub
xchg
hlt
(bad)
(bad)
call
mov
repnz
inc
ficomp
fcmovbe
jge
fucom
jmp
aam
push
(bad)
(bad)
call
test
adc
imul
mov
in
adc
pop
dec
arpl
ins
fsqrt
(bad)
(bad)
(bad)
(bad)
jmp
or
enter
pop
aad
inc
in
addr16
cmp
in
dec
add
inc
ror
(bad)
std
movs
or
cli
inc
mov
ins
fstp
stc
inc
xor
ins
jecxz
fistp
(bad)
or
iret
stos
sar
lods
push
mov
enter
mov
mov
mov
mov
(bad)
(bad)
inc
and
mov
movs
movaps
mov
or
or
mov
or
and
outs
jl
pop
push
dec
adc
popa
sbb
cmp
add
jno
cwde
shl
mov
jno
test
add
mov
xor
leave
les
(bad)
(bad)
(bad)
out
and
or
sbb
or
sub
out
pop
add
push
hlt
(bad)
(bad)
(bad)
call
popa
bound
bound
dec
ins
push
xchg
in
sbb
movs
jnp
or
shl
les
mov
(bad)
(bad)
mov
jmp
jmp
sbb
mov
jl
sti
aam
dec
mov
mov
test
into
mov
ja
mov
movs
inc
cmp
rol
ins
rcl
hlt
sti
inc
imul
cld
(bad)
(bad)
(bad)
jmp
pusha
mov
jae
add
pop
fisttp
jno
daa
add
call
adc
leave
or
xchg
mov
and
mov
aam
into
popa
in
pop
fdivrp
(bad)
(bad)
(bad)
dec
sub
leave
cwde
mov
cwde
and
xlat
test
pop
mov
pop
cs
xor
mov
jmp
call
sub
inc
cmp
(bad)
adc
cmp
or
xchg
cmp
ds
pop
test
(bad)
(bad)
(bad)
dec
iret
or
add
mov
setae
mov
push
idiv
(bad)
(bad)
jmp
pop
and
sbb
outs
imul
(bad)
aam
jbe
shr
loopne
fidivr
fisttp
stc
aaa
std
(bad)
(bad)
mov
out
stc
pop
mov
inc
pusha
mov
aad
(bad)
mov
push
fadd
(bad)
(bad)
jg
dec
repnz
sar
addr16
mov
fisttp
ss
fmul
aad
scas
or
dec
add
inc
add
fbld
ret
test
fist
outs
mov
inc
imul
sbb
outs
shl
int3
or
(bad)
(bad)
push
mov
add
mov
lds
or
sub
add
xlat
xchg
mov
mov
iret
xor
sahf
mov
scas
sbb
(bad)
(bad)
(bad)
jg
es
mov
or
ss
jb
test
add
xchg
mov
ret
(bad)
(bad)
mov
sub
xchg
ror
repnz
mov
fcmovnu
and
(bad)
(bad)
inc
aam
inc
push
fiadd
int
mov
ja
sbb
call
punpckhdq
push
cmp
adc
or
sahf
(bad)
clc
bound
(bad)
(bad)
(bad)
call
push
ins
iret
inc
mov
or
adc
ret
es
shl
test
dec
outs
ja
scas
shr
(bad)
pop
fadd
or
fdivr
lock
mov
iret
(bad)
(bad)
(bad)
(bad)
jg
mov
jmp
retf
mov
xchg
xor
mov
add
push
ficom
sbb
mov
jp
les
aad
jmp
outs
sub
or
mov
sub
call
std
mov
xor
bound
lods
lds
pop
cmps
xchg
(bad)
(bad)
inc
(bad)
enter
rol
mov
mov
hlt
fxch
lods
mov
or
scas
jle
sahf
sub
call
adc
fldenv
adc
jo
popa
out
inc
xchg
cs
xlat
push
aaa
mov
adc
cwde
mov
add
add
add
fld
ja
pop
jmp
aam
aas
(bad)
(bad)
(bad)
(bad)
call
sahf
xchg
test
mov
inc
and
call
shl
ret
fiadd
(bad)
in
lds
inc
inc
lahf
jmp
imul
jbe
std
imul
sub
or
or
adc
ins
fild
repz
pop
pop
mov
jo
jno
imul
sub
mul
inc
mov
sbb
jne
pop
mov
sti
push
test
jns
mov
cmp
jns
push
(bad)
call
dec
push
lds
jge
fisubr
cmp
jns
add
ret
xchg
push
(bad)
(bad)
(bad)
call
xchg
adc
mov
cmp
lds
or
aaa
push
cld
call
or
xor
cli
bound
pop
push
(bad)
(bad)
(bad)
jmp
lea
(bad)
xchg
xchg
push
xchg
(bad)
cwde
push
(bad)
int3
test
shl
cli
retf
xchg
jb
xlat
pop
(bad)
(bad)
(bad)
jmp
out
inc
push
mov
pop
dec
test
unpckhps
sbb
jo
cmp
std
imul
add
or
add
lahf
loop
cmps
int3
and
jmp
(bad)
mov
loope
mov
shr
lahf
adc
xchg
mov
leave
dec
and
rcl
jmp
inc
sub
gs
das
aas
jns
ss
mov
or
je
adc
xor
(bad)
(bad)
mov
jns
fidiv
jle
xor
out
(bad)
(bad)
std
ret
rcl
cmp
(bad)
(bad)
(bad)
cli
call
js
cmps
cmp
sbb
or
retf
mov
pop
(bad)
(bad)
(bad)
dec
hlt
ins
push
ins
fnstcw
int
ret
repz
adc
inc
and
shr
ja
adc
inc
sub
mov
mov
inc
mov
push
ja
cwde
pop
ins
(bad)
adc
ja
push
or
jle
daa
mov
fnstsw
xor
mov
(bad)
mov
(bad)
lds
(bad)
out
hlt
push
out
rcl
pop
mov
test
call
mov
test
retf
shl
lods
clc
pop
sbb
mov
sub
data16
loope
lds
gs
(bad)
call
mov
in
test
xchg
sub
in
scas
mov
(bad)
repz
cmp
(bad)
(bad)
dec
call
imul
or
stos
test
jg
sbb
mov
pop
adc
xor
(bad)
(bad)
inc
xor
dec
jo
mov
imul
jp
xor
pop
mov
retf
cli
xlat
dec
shl
out
stc
(bad)
dec
push
scas
xchg
adc
lea
or
mov
(bad)
add
pop
inc
sbb
ins
je
aas
les
push
push
test
cwde
inc
jle
test
ror
(bad)
dec
add
push
cmps
popf
stos
adc
add
cld
dec
xor
bound
into
jns
inc
(bad)
call
dec
loope
pop
push
cli
jle
jnp
sub
sub
xchg
mov
(bad)
(bad)
mov
fnop
pop
jle
in
inc
gs
dec
xchg
outs
jne
mov
call
or
(bad)
cmp
and
push
aas
gs
jns
(bad)
mov
sbb
mov
daa
repnz
mov
clc
jmp
lea
out
and
loope
or
mov
pop
icebp
(bad)
(bad)
jle
shl
imul
inc
cmp
ja
fsub
push
jle
hlt
out
push
add
aaa
test
mov
adc
xor
fwait
(bad)
out
in
ret
add
pop
lods
test
push
retf
ret
lea
(bad)
(bad)
inc
adc
psrlw
(bad)
or
push
out
loope
sbb
fs
xchg
push
or
mov
sbb
mov
inc
pop
mov
sbb
lods
(bad)
(bad)
(bad)
call
in
popa
fwait
sbb
mov
adc
cwde
call
mov
cmps
adc
xchg
adc
(bad)
(bad)
call
xor
push
mov
in
cmp
loopne
(bad)
sub
cmp
xchg
mov
or
mov
(bad)
(bad)
(bad)
(bad)
xchg
cmp
pop
pop
pop
aaa
pushf
jge
xor
sbb
test
push
(bad)
push
xchg
aad
xor
imul
adc
frstor
in
mov
cmps
daa
aam
(bad)
(bad)
jg
es
dec
dec
and
cdq
and
and
adc
sub
(bad)
(bad)
(bad)
jmp
sub
or
jno
hlt
sub
jbe
cs
enter
mov
shl
div
(bad)
(bad)
(bad)
call
jb
xor
jbe
dec
sub
jb
aad
inc
jle
fdivr
dec
mov
jge
jmp
(bad)
dec
push
jl
bound
jns
je
js
push
xchg
jp
mov
std
ins
mov
or
outs
cmp
fisub
nop
jmp
ja
pop
push
jecxz
add
cmp
arpl
popa
sub
push
cmps
xlat
aam
fs
(bad)
(bad)
mov
mov
dec
xlat
retf
and
mov
dec
(bad)
inc
or
arpl
dec
sbb
retf
dec
pop
mov
dec
cwde
frstor
inc
call
inc
dec
test
inc
int
inc
inc
addps
dec
out
inc
mov
push
push
addr16
jne
ds
mov
or
ror
adc
push
mov
(bad)
(bad)
jmp
cmp
pop
and
pop
in
xchg
xchg
pop
sub
add
inc
pop
pop
lods
das
ins
loope
ja
push
jno
loop
iret
out
jecxz
movs
movs
cmp
pop
out
fcos
(bad)
(bad)
mov
in
or
cmp
in
paddsb
hlt
popa
call
in
mov
(bad)
(bad)
call
jmp
ss
imul
rcl
(bad)
(bad)
xchg
ins
sahf
call
test
sti
fdivr
(bad)
(bad)
call
stc
sahf
les
pop
scas
jne
add
dec
bnd
lock
adc
or
cmc
retf
sub
(bad)
(bad)
jmp
test
fnstcw
pusha
fdivr
mov
fstp
jecxz
fidiv
mov
(bad)
(bad)
dec
fdiv
dec
in
imul
test
fdiv
shl
add
mov
push
shl
jo
shl
pop
lds
adc
pushf
xchg
daa
(bad)
fisubr
jle
sbb
ret
int3
ret
xchg
cmp
loop
(bad)
sti
rcl
mov
retf
dec
scas
test
pop
lahf
enter
or
icebp
int3
inc
jmp
int
ins
inc
iret
rcl
into
add
nop
ins
cld
ja
sub
xchg
(bad)
(bad)
(bad)
jmp
ds
xchg
fs
stos
xchg
and
repnz
loopne
jo
xbegin
pushf
cmp
(bad)
dec
jns
cwde
mov
and
add
dec
call
xor
pop
pop
mov
mov
sbb
mov
or
mov
dec
mov
sbb
int3
push
test
arpl
aad
or
test
(bad)
(bad)
(bad)
(bad)
mov
into
stos
movs
outs
stc
scas
jmp
jl
sub
dec
lods
outs
lods
adc
sbb
(bad)
(bad)
jmp
movs
jne
jbe
mov
inc
mov
cmp
mov
mov
jae
mov
(bad)
(bad)
(bad)
call
out
inc
cmps
mov
mov
fisttp
cmpxchg
mov
punpckldq
xlat
and
adc
dec
pop
mov
xchg
pushf
xor
loopne
mov
cwde
xor
(bad)
(bad)
(bad)
(bad)
mov
stos
or
mov
mov
out
(bad)
bound
xor
xlat
cmp
fwait
jl
jge
dec
mov
loopne
xlat
add
mov
(bad)
(bad)
(bad)
fcomp
loopne
ja
pop
arpl
push
push
sbb
call
adc
jno
jnp
enter
cmps
(bad)
jmp
inc
int
outs
es
lods
jg
sub
mov
xchg
rcr
dec
call
inc
mov
and
xor
pop
or
addr16
xchg
shr
in
(bad)
(bad)
call
imul
in
xchg
xchg
fnstsw
loopne
iret
(bad)
dec
pop
loop
(bad)
(bad)
(bad)
(bad)
aas
jmp
jecxz
in
fmul
lock
mov
pop
and
sub
sahf
push
jg
ret
dec
dec
outs
test
or
rcr
lahf
ror
(bad)
(bad)
(bad)
jmp
mov
lahf
xchg
sbb
daa
sub
mov
inc
and
(bad)
xchg
test
call
cmp
jmp
nop
mov
mov
iret
push
retf
mov
ret
pusha
test
jo
out
cmps
(bad)
call
mov
test
fistp
ret
imul
ret
ja
imul
pushf
mov
(bad)
popa
add
sub
mov
scas
xchg
cwde
cmc
cld
sar
nop
out
push
jle
fidiv
sbb
mov
inc
sub
ja
(bad)
dec
sbb
xlat
jg
sar
xchg
outs
pop
hlt
cmp
test
(bad)
(bad)
(bad)
jmp
aas
mov
xchg
pop
in
mov
pusha
push
or
pop
xor
dec
test
cmps
icebp
iret
mov
inc
cs
(bad)
call
jo
jno
dec
mov
(bad)
xor
inc
out
imul
pushf
rol
(bad)
(bad)
push
push
jb
pop
aaa
retf
pop
loope
scas
dec
push
inc
call
mov
aaa
out
push
add
mov
inc
daa
popf
and
pop
jle
js
mov
xlat
scas
xor
jg
dec
in
pop
mov
push
in
pop
inc
pop
mov
in
sbb
bound
and
inc
ss
out
sbb
jmp
sub
sahf
aam
push
stc
mov
(bad)
jmp
sar
dec
cmp
xor
or
cmp
inc
cld
sbb
dec
sub
scas
cmc
test
and
mov
(bad)
(bad)
jmp
mov
sbb
ror
sar
add
push
movs
not
cmp
(bad)
(bad)
call
icebp
repnz
imul
cmc
xlat
jle
out
ror
ret
push
(bad)
sbb
rol
cs
pop
lock
xor
rcl
and
stc
popa
call
das
sar
add
fsubr
or
sbb
into
sub
mov
xchg
(bad)
(bad)
(bad)
dec
(bad)
loope
xchg
adc
int
lods
mov
inc
and
jne
jp
adc
scas
(bad)
(bad)
(bad)
(bad)
dec
jae
fwait
push
movs
icebp
and
sbb
test
jbe
out
push
into
icebp
mov
inc
lea
(bad)
jmp
call
inc
xchg
push
xor
es
jmp
fdiv
inc
mov
mov
lock
bound
fwait
push
mov
xchg
xchg
cdq
xor
es
mov
(bad)
(bad)
(bad)
(bad)
cld
mov
adc
push
ja
ss
adc
out
mov
loopne
jbe
pop
idiv
(bad)
(bad)
call
dec
jmp
ds
ins
add
aam
popa
inc
(bad)
mov
stos
jle
test
cmp
es
(bad)
(bad)
call
jbe
mov
retf
pop
sbb
mov
repz
in
test
adc
ja
pop
movs
(bad)
push
add
cmp
cdq
in
or
(bad)
(bad)
inc
fidiv
sub
fisubr
sar
lock
out
mov
mov
push
(bad)
(bad)
(bad)
inc
ds
sti
outs
pop
sub
push
addr16
cmps
int3
mov
pop
je
into
jp
mov
push
icebp
repz
sti
sbb
push
sub
aaa
cmp
icebp
repz
pop
outs
jl
outs
gs
mov
dec
and
in
rcr
(bad)
into
imul
sbb
inc
out
iret
adc
bnd
dec
arpl
pop
cmp
ins
outs
test
mov
dec
popa
mov
jne
dec
jae
add
pop
stc
mov
sub
push
lock
cmc
add
mov
jg
cmc
out
lods
pop
and
aam
clc
fadd
clc
(bad)
stc
data16
cmc
and
jmp
add
mov
je
jns
jg
clc
inc
cwde
clc
(bad)
out
scas
repnz
out
mov
out
add
jb
loopne
inc
pxor
add
ds
mov
in
add
fidivr
pop
hlt
push
cmp
jae
and
push
lock
jo
cmp
jmp
push
sub
add
jg
in
pop
je
fidivr
mov
mov
sbb
in
nop
cmovl
setbe
mov
jge
jbe
jne
sub
int
pop
add
xor
js
push
pushf
bsf
ror
inc
outs
push
clc
sub
fcom
add
movs
sub
cmps
push
shr
pop
mov
cmps
xchg
push
hlt
into
jl
jmp
jp
test
xor
ja
add
push
inc
into
push
mov
and
push
mov
idiv
ret
iret
aas
push
mov
int
aas
mov
lods
loopne
jle
push
mov
push
out
call
out
dec
js
rol
or
ror
jp
movs
mov
in
lods
dec
ja
jbe
adc
push
jg
inc
push
shl
cs
pop
aam
push
mov
cld
les
push
push
fisub
mov
xchg
jp
imul
loope
add
int
jbe
jl
mov
push
outs
scas
push
data16
ss
(bad)
sbb
mov
into
mov
jle
push
mov
mov
push
imul
out
mov
(bad)
push
cwde
sbb
mov
popf
jge
shl
jg
psubd
mov
push
and
clc
cs
(bad)
scas
out
cs
push
loopne
xchg
push
lods
fadd
scas
loop
mov
out
in
push
fs
in
pop
pop
lds
jle
bound
dec
dec
lock
push
js
dec
ror
mov
cmp
loopne
outs
aas
sar
mov
jle
aas
inc
and
outs
push
inc
imul
jmp
sbb
dec
jbe
jo
pop
into
ror
push
pop
sahf
mov
xchg
pop
jnp
mov
push
scas
stc
pop
mov
nop
aam
mov
or
cmp
mov
xor
ins
push
inc
cwde
push
mov
rcl
push
(bad)
adc
lahf
fstp
loop
push
mov
imul
push
jle
out
sti
fiadd
adc
or
push
mov
add
add
ret
out
sub
fidiv
push
push
ret
es
add
mov
sahf
dec
imul
jle
(bad)
fiadd
cmp
jnp
outs
ins
push
ja
cdq
jle
fidiv
je
(bad)
push
rol
ins
jnp
popf
fimul
sub
dec
xlat
icebp
xor
cs
jo
outs
mov
mov
add
push
xchg
sbb
inc
imul
clc
push
dec
cmp
dec
dec
mov
adc
xor
xchg
push
(bad)
mov
add
adc
fild
add
inc
sbb
daa
xchg
es
lsl
or
pop
jp
ja
push
sbb
add
or
jl
lods
inc
inc
mov
inc
out
leave
fs
push
(bad)
pandn
add
jbe
fcom
or
cmp
dec
gs
das
sub
lahf
add
outs
icebp
push
(bad)
mov
add
cmp
add
xchg
pusha
pop
shr
out
inc
lahf
xchg
inc
ja
or
inc
pusha
ror
xchg
pop
adc
xor
add
mov
pop
pop
add
mov
push
sub
lods
jbe
and
and
outs
or
fstp
sbb
add
out
iret
jmp
or
mov
inc
pop
add
pop
hlt
mov
jae
rcl
mov
hlt
dec
cdq
or
lds
das
test
loop
xor
shr
or
icebp
aam
cmps
pop
rcl
push
cmp
in
cmps
cld
test
stos
push
pop
xor
pushf
add
sub
xchg
cmp
cmp
add
add
pop
sahf
xlat
pusha
xchg
lahf
sti
inc
std
cld
or
paddusw
bound
out
rol
aas
jl
inc
add
popf
xchg
add
jg
push
add
jns
idiv
push
lods
mov
out
sahf
out
aam
in
jae
call
dec
mov
push
cld
cmp
int3
loopne
adc
dec
mov
repz
dec
pop
js
mov
lds
ja
push
pop
loope
das
or
add
ret
xchg
xchg
add
out
adc
add
mov
dec
add
add
fisttp
out
fiadd
push
mov
push
lahf
out
aam
hlt
add
out
dec
push
push
and
pusha
jns
out
ins
or
(bad)
aam
lock
repz
sub
dec
pusha
js
cmp
repz
cmp
repz
pop
ins
adc
imul
div
adc
adc
adc
push
add
sbb
xchg
out
xlat
scas
mov
dec
add
or
rdseed
outs
add
push
test
add
and
inc
add
and
push
aas
(bad)
scas
sbb
cli
fcomp
add
add
retf
lea
pushf
inc
add
cdq
add
or
sbb
lea
aas
daa
iret
ins
mov
add
lock
add
push
sbb
push
jg
pushf
add
or
pop
sbb
adc
in
shl
and
add
xor
or
lods
movs
adc
into
(bad)
cmp
enter
add
xor
adc
cdq
or
jmp
add
add
pop
fsubr
adc
pop
add
das
xchg
repz
(bad)
mov
mov
iret
repz
std
(bad)
(bad)
out
or
push
add
xchg
add
out
std
push
mov
push
cmp
mov
add
push
icebp
mov
add
cld
lods
cmps
push
pop
pop
xlat
ret
push
push
add
push
in
xchg
sub
push
push
test
je
push
scas
cld
pusha
pop
xchg
push
out
mov
push
in
retf
push
add
push
fidiv
test
jb
test
enter
test
push
or
push
mov
repz
dec
jo
cwde
sub
mov
mov
push
add
push
adc
push
pop
dec
inc
mov
xor
add
call
movs
push
rol
and
repz
out
pushf
(bad)
in
sbb
iret
repz
xor
movs
fmul
repz
mov
jo
mov
out
ds
shr
or
ss
xchg
enter
repz
sub
mov
mov
sub
es
xor
adc
inc
jo
enter
lahf
clc
sub
pusha
xchg
shl
out
ds
mov
jns
or
cmp
sbb
es
lods
loopne
cmp
repz
dec
sub
ds
jl
lock
adc
shl
ret
in
lahf
out
xor
push
test
sbb
repz
ja
push
mov
lock
repz
pop
mov
hlt
sub
lahf
out
add
test
and
repz
out
push
mov
adc
push
out
ds
test
and
push
or
jl
mov
push
xor
sbb
mov
xor
push
dec
push
cmps
(bad)
push
pop
aaa
cld
add
dec
iret
std
jmp
inc
xchg
(bad)
pop
std
ud1
mov
pop
daa
adc
mov
psubq
add
add
lahf
add
adc
jecxz
mov
add
(bad)
faddp
push
mov
push
sbb
jb
jp
scas
invd
repz
mov
into
push
inc
pusha
iret
repz
jl
mov
call
ds
pop
push
dec
iret
repz
test
mov
inc
into
push
jo
cmps
stc
cmp
lods
shl
add
sbb
out
sahf
cmp
js
mov
cmp
repz
or
xor
and
push
out
pop
aas
mov
jns
ja
clc
sbb
mov
pop
je
mov
add
not
push
fdivr
xlat
pop
dec
push
ins
push
mov
mov
pop
in
push
push
fcom
sti
cmp
loopne
sahf
fld
sub
lahf
out
mov
adc
mov
jno
sbb
in
inc
inc
daa
and
into
add
pop
push
add
add
mov
ret
inc
add
jle
daa
js
call
hlt
or
pop
jns
out
jbe
xor
out
sahf
out
xchg
test
shr
push
or
sahf
(bad)
push
inc
icebp
jge
mov
retf
iret
adc
mov
and
mov
jbe
pop
sti
(bad)
dec
fidivr
xchg
mov
out
rcl
lock
jmp
mov
pop
rcl
cdq
jno
push
push
outs
(bad)
sbb
fs
xchg
cs
jb
xor
enter
pop
outs
imul
in
jecxz
ret
and
inc
movs
dec
jne
inc
test
pusha
ins
sbb
add
shr
repz
mov
cld
sub
out
call
sbb
out
enter
lahf
out
sahf
dec
push
push
cmp
jns
ja
push
inc
js
mov
repz
aam
cld
xor
je
iret
repz
shl
cmp
cmp
push
je
shr
repz
mov
test
(bad)
in
or
ds
push
add
cld
sbb
cmp
repz
push
pusha
test
repz
inc
sub
fidivr
out
enter
sahf
push
add
pusha
out
push
ds
xor
lahf
out
sahf
js
mov
out
sahf
ja
push
push
repz
lahf
call
pop
and
lock
inc
push
out
repz
ins
mov
out
cmp
repz
push
mov
repz
and
pushw
js
mov
sti
add
ss
dec
test
hlt
sub
push
jo
lahf
out
movs
int3
in
sbb
repz
repz
jo
mov
iret
cld
sbb
test
hlt
and
ss
push
cmp
int3
lock
jns
out
push
inc
ins
cwde
mov
test
nop
mov
cmp
jns
dec
ss
inc
fs
repz
test
hlt
or
jns
out
fiadd
and
call
push
jo
push
lahf
out
lods
fdivr
sbb
cmps
clc
cmp
repz
test
jns
mul
sub
sahf
out
push
pop
cwde
aam
and
out
ficom
xchg
mov
sbb
out
sahf
out
push
jo
shr
repz
push
push
jl
(bad)
repz
repz
hlt
adc
push
dec
jecxz
cmp
jo
shl
pop
sahf
out
fdivrp
push
cmp
test
cmp
lock
add
mov
cmp
iret
rep
enter
pop
out
sahf
mov
push
ins
nop
mov
jns
jns
in
pop
jbe
push
jo
sahf
ja
out
cld
sbb
out
dec
jl
lahf
out
lods
shl
adc
push
(bad)
sahf
je
aam
and
sahf
cmp
repz
enter
into
sti
and
popa
push
xchg
mov
ds
push
bound
js
push
lahf
out
mov
push
repz
repz
pop
mov
call
ins
xchg
mov
loopne
cmps
gs
pushf
sahf
ja
out
hlt
sbb
push
dec
pusha
push
lahf
out
nop
mov
repz
repz
dec
js
enter
repz
adc
push
fs
mov
sti
add
push
push
js
rcr
and
push
pusha
je
lahf
out
cwde
mov
repz
repz
pop
je
mov
jecxz
ins
pop
push
push
jl
iret
cmp
cld
and
mov
ins
xchg
repz
repz
loopne
outs
pushw
push
iret
repz
fs
mov
cmp
mov
jl
mov
lock
out
push
dec
pop
lahf
out
sahf
mov
jno
jns
ja
push
pop
js
mov
aam
or
push
inc
pop
out
sahf
out
pushf
mov
lock
repz
push
pop
sub
in
je
push
inc
pop
jns
out
je
mov
call
or
push
inc
pop
jl
sti
cmp
cwde
shr
jbe
push
cmp
cmp
repz
loopne
ja
push
inc
push
sahf
mov
js
cmp
repz
mov
jns
loop
clc
sbb
push
dec
je
jns
out
mov
lock
repz
into
push
inc
ins
mov
cmp
or
jnp
push
jge
out
sbb
jns
ds
inc
pop
sbb
cld
sbb
push
inc
repz
repz
iret
call
xor
sahf
out
sahf
push
in
iret
cmp
out
push
cmp
cmp
repz
sahf
div
dec
push
sahf
pushf
mov
jbe
iret
cmp
add
rcr
adc
inc
out
sahf
out
inc
pop
js
lods
iret
repz
lahf
fadd
and
cmp
jl
iret
repz
mov
jns
out
pushw
push
jo
movs
fidivr
out
loopne
or
into
push
dec
jns
out
pusha
mov
outs
lock
pop
push
inc
pop
jl
sar
aaa
xchg
push
je
iret
repz
(bad)
lock
cmp
push
mov
push
inc
mov
jns
adc
pushw
pop
jl
ds
repz
mov
push
push
js
lods
enter
pushf
call
push
jl
out
jo
mov
adc
es
push
jo
les
mov
mov
push
js
jns
iret
repz
es
pop
icebp
jns
out
mov
lock
iret
repz
ds
js
mov
iret
mov
and
loopne
xchg
(bad)
push
pop
je
jns
iret
repz
pop
push
jo
jl
out
mov
or
iret
dec
and
cmp
sub
cmps
push
jo
ja
ds
mov
xchg
push
lahf
out
sahf
jo
test
call
sahf
ja
push
pusha
test
sahf
enter
cwde
scas
push
pusha
ds
repz
test
in
or
scas
push
movs
or
out
sahf
jl
mov
lock
cmp
repz
push
push
je
(bad)
call
adc
es
jo
shl
ret
out
or
push
push
pusha
mov
hlt
adc
ss
dec
sti
cmp
repz
enter
sahf
cmp
repz
shl
repz
repz
and
mov
call
sbb
jbe
fs
shl
mov
repz
repz
mov
in
sahf
out
ds
jbe
jl
in
idiv
jge
movs
outs
push
nop
shl
cmps
out
fucom
jns
test
cmp
push
push
pushf
iret
repz
lahf
les
test
push
pop
mov
sahf
ja
cmp
sub
mov
lock
push
push
push
sti
cmp
repz
mov
cmp
repz
mov
jns
idiv
sbb
xchg
push
push
ret
out
xor
cmp
repz
add
mov
loope
mov
push
pushf
int3
adc
pushw
test
jl
out
je
call
out
repz
jl
enter
into
repz
repz
push
jo
mov
(bad)
aaa
mov
push
js
les
and
push
push
sub
in
sbb
repz
pop
js
mov
out
xchg
in
mov
push
push
jo
out
sahf
nop
mov
mov
scas
push
push
sahf
aaa
clc
or
pushf
mov
or
mov
adc
or
mov
add
(bad)
in
retf
sub
sbb
test
stos
and
add
inc
xchg
outs
add
popf
mov
add
add
movs
popf
test
outs
add
mov
add
xchg
add
mov
add
add
mov
mov
add
add
daa
add
xchg
xor
arpl
mov
and
inc
cmp
add
leave
leave
leave
cmp
in
leave
(bad)
enter
sbb
add
push
add
cmp
cdq
add
pop
pop
pop
xchg
pusha
popa
ret
push
fwait
pushf
bound
add
retw
fs
xchg
xchg
mov
add
add
jns
adc
push
adc
push
pop
add
mov
push
je
jne
in
nop
inc
ja
jns
in
in
jnp
jge
out
out
sar
loopne
loope
push
adc
inc
je
std
mov
and
in
push
push
fistp
add
push
jmp
dec
pop
pop
add
imul
add
push
add
adc
adc
adc
call
daa
pop
daa
sbb
sbb
and
daa
sub
daa
bound
and
dec
and
(bad)
push
dec
dec
and
dec
mov
adc
dec
popa
push
enter
and
jno
(bad)
loopne
clc
(bad)
dec
stos
fisubr
fisubr
fidiv
fisubr
add
cmp
idiv
and
mov
outs
adc
dec
adc
(bad)
sti
(bad)
fisub
jp
repz
and
(bad)
test
stc
mov
pop
sub
jp
je
mov
and
std
mov
push
inc
aam
push
mov
into
push
jg
(bad)
aas
loop
jecxz
in
in
out
out
call
mov
xchg
repz
test
dec
push
mov
test
clc
or
ss
xor
repz
repz
jo
cwde
lods
mov
aam
cld
add
out
sahf
or
cmp
jns
(bad)
fsubr
add
dec
outs
sbb
push
cs
aaa
add
lods
aas
jmp
daa
aam
call
cmp
dec
in
fcom
push
push
push
ins
test
mov
pop
enter
ret
idiv
push
or
pop
push
and
out
xor
push
fs
inc
jnp
js
pop
mov
pop
cmps
movs
es
pop
sbb
rol
pop
repz
icebp
cwde
ficomp
out
fsubp
or
ss
xor
fs
out
sahf
jl
lods
(bad)
fdiv
out
fidivr
loopne
push
cmp
outs
idiv
sbb
push
in
jo
jns
cld
fcomp
movups
(bad)
loope
xchg
jge
ins
inc
addps
ins
loope
psllq
fs
add
lods
les
in
cld
adc
dec
out
fcmovnb
nop
loop
inc
addps
ins
dec
sete
mov
push
nop
inc
loop
mov
cmp
ret
or
jecxz
sbb
pushf
mul
push
fisttp
pop
push
je
sahf
neg
dec
mov
mov
in
in
lods
ret
outs
clc
pop
or
dec
and
lahf
repz
in
xor
aas
dec
in
pop
push
jo
mov
pushf
in
lods
in
in
fiadd
jg
in
loopne
lock
or
scas
mov
daa
cmp
in
pusha
fsubrp
ins
xchg
outs
je
mov
fistp
repz
les
push
in
push
loope
aaa
add
push
inc
add
cmp
movmskps
outs
fs
js
scas
outs
adc
out
test
mov
enter
(bad)
pushf
loopne
sbb
out
and
pop
ja
adc
andps
aas
jnp
repz
cmp
mov
sahf
adc
dec
mov
fiadd
in
dec
repz
adc
sub
pusha
lahf
ja
repz
add
cs
pop
or
jp
or
daa
and
mov
movs
sahf
movs
dec
mov
push
rol
and
push
and
and
and
(bad)
mov
and
arpl
inc
and
and
(bad)
jmp
and
sub
and
aaa
and
cmp
and
jmp
ret
and
dec
and
push
and
pop
and
(bad)
(bad)
jmp
bound
push
and
ins
and
and
js
scas
and
or
jmp
xor
cmp
and
inc
and
in
and
and
pop
and
(bad)
jg
and
daa
sub
sub
aaa
cmp
cmp
inc
dec
dec
dec
dec
push
push
mov
push
pop
pop
js
push
js
popa
arpl
imul
jae
ja
jnp
add
inc
pusha
add
add
mov
xchg
add
fisubr
cmp
adc
sahf
sub
sub
ret
push
add
dec
or
cmp
xor
ds
cmp
xor
add
lock
push
not
add
and
adc
push
inc
sbb
cmps
pop
daa
adc
add
add
sbb
test
ins
fadd
jp
mov
add
push
ror
loopne
jbe
js
adc
test
jp
jl
dec
stos
or
add
add
add
and
add
add
add
mov
sub
sub
sub
call
xor
add
(bad)
push
xor
add
add
add
add
add
cmp
(bad)
(bad)
call
inc
add
inc
add
add
inc
add
dec
add
dec
add
(bad)
(bad)
(bad)
inc
dec
add
push
add
push
add
push
add
push
add
pop
add
pop
add
pop
add
(bad)
jg
add
add
popa
add
arpl
add
add
(bad)
call
add
add
imul
add
outs
add
jo
jno
jb
adc
(bad)
push
je
jne
jbe
ja
js
jns
jp
jnp
jl
jge
jle
add
xchg
and
fwait
sub
inc
call
fadd
cmp
push
pop
push
cmp
in
cmovno
daa
jl
(bad)
jmp
mov
mov
adc
push
push
mov
call
(bad)
jmp
and
into
mov
cmc
sub
xchg
inc
xor
fcomp
inc
mov
(bad)
(bad)
(bad)
mov
adc
std
mov
cmps
and
mov
bound
inc
rcl
(bad)
(bad)
call
stos
(bad)
mov
pop
adc
(bad)
push
adc
add
sti
shl
out
loope
(bad)
pop
aaa
ret
xchg
aad
in
adc
inc
add
mov
outs
mov
lea
cli
inc
popa
(bad)
(bad)
(bad)
call
std
inc
jmp
pusha
dec
mov
mov
cli
daa
mov
(bad)
(bad)
(bad)
out
aam
sbb
aam
in
(bad)
clc
jl
pop
gs
lods
les
hlt
xchg
jmp
inc
cmps
and
(bad)
(bad)
call
ret
pop
pop
gs
int3
or
jge
out
call
pop
test
loopne
sub
adc
push
(bad)
(bad)
inc
mov
cmp
xor
rcl
sub
or
mov
hlt
jo
jg
inc
push
and
and
in
cld
jle
sahf
(bad)
out
xchg
inc
popa
add
adc
mov
(bad)
(bad)
call
(bad)
jmp
mov
adc
aas
fstp
(bad)
ins
scas
jae
pop
sub
add
arpl
cmps
outs
sub
mov
jge
ja
push
add
xchg
mov
pop
and
inc
rcr
fistp
add
and
fcomp
aas
inc
pop
xchg
mov
outs
dec
or
pop
add
das
in
jns
add
add
or
in
and
pop
add
pop
sar
sub
add
sub
xor
jae
popf
dec
pusha
sbb
add
inc
bound
mov
sbb
aas
xchg
in
adc
dec
add
pop
pusha
stos
adc
out
mov
inc
push
je
rcr
sub
jns
adc
cmp
mov
inc
ins
xor
comiss
bound
add
test
sbb
pop
in
sldt
ss
inc
push
test
add
cmp
inc
add
mov
inc
or
ins
shr
pop
ja
enter
adc
repz
dec
add
loopne
ds
mov
aaa
xor
pop
iret
repz
stc
icebp
loope
sahf
outs
ins
cmp
mov
(bad)
cld
jle
out
clc
lock
cmp
(bad)
inc
inc
xor
or
cmp
add
xor
bswap
aas
inc
push
jl
inc
mov
(bad)
dec
mov
shr
sbb
and
adc
das
out
pop
fbld
call
pop
mov
outs
lahf
pop
or
cmp
add
xor
or
cmp
pop
(bad)
aaa
test
inc
mov
mov
jnp
inc
mov
sub
sbb
and
adc
sub
sbb
daa
out
xlat
test
(bad)
(bad)
(bad)
call
push
stos
imul
add
xor
push
into
inc
shl
or
inc
(bad)
(bad)
(bad)
push
jle
inc
mov
lea
jge
loop
shr
out
push
fisub
loope
shr
(bad)
(bad)
(bad)
(bad)
call
pop
mov
ins
popf
pop
or
cmp
push
(bad)
test
cmp
add
dec
(bad)
(bad)
(bad)
(bad)
mov
jbe
dec
mov
jne
jmp
sub
sbb
and
push
and
call
push
test
gs
push
daa
neg
outs
inc
pop
lahf
push
inc
dec
push
dec
xor
and
jae
push
std
mov
sbb
sbb
push
bound
mov
inc
sub
neg
data16
push
and
mov
mov
or
ss
and
sbb
or
data16
push
push
sbb
cmps
mov
stos
data16
push
ss
xor
dec
mov
idiv
call
idiv
retf
xchg
scas
out
aas
stos
adc
shl
aas
aas
cmp
(bad)
jmp
jmp
jnp
push
loope
pop
stos
jb
push
test
imul
push
or
repz
or
nop
adc
or
out
and
repz
and
jns
and
adc
sahf
out
ja
push
push
adc
sahf
out
xor
cmp
sub
push
addr16
push
push
repz
repz
iret
repz
xor
es
daa
cs
repz
cmp
ss
push
and
aas
adc
xchg
or
pop
xor
cs
push
dec
cmp
aaa
add
mov
das
or
jo
pop
push
pop
push
pop
mov
push
push
push
xchg
aaa
and
ja
push
ins
addr16
cmps
and
jns
adc
push
push
mov
pop
out
das
dec
scas
outs
jns
ficomp
dec
dec
(bad)
pop
loopne
bnd
out
arpl
mov
das
daa
pop
adc
push
push
xlat
out
inc
aas
sbb
add
arpl
add
test
pop
and
test
pop
mov
mov
add
add
add
(bad)
jmp
jge
lods
adc
push
adc
pop
and
xor
loop
idiv
inc
mov
adc
xor
xor
sbb
sbb
sub
clc
and
dec
mov
push
push
push
push
push
pop
pop
pop
arpl
jae
(bad)
(bad)
(bad)
push
ja
jns
add
xchg
xchg
xchg
xchg
xchg
xchg
cwde
cdq
call
test
stos
(bad)
(bad)
(bad)
push
mov
mov
(bad)
enter
rcl
aad
xlat
fcomp
(bad)
loop
in
add
(bad)
jmp
out
jmp
hlt
cmc
div
clc
stc
cli
add
ror
test
gs
lahf
adc
pop
and
push
pop
popa
jno
and
adc
pop
xor
inc
push
push
lock
loope
rol
and
push
xor
and
test
movs
rol
sar
scas
sar
push
add
sbb
out
js
out
pusha
js
sti
dec
add
xor
lahf
ss
mov
call
jbe
push
xchg
push
cmp
push
add
data16
mov
inc
shr
repz
gs
pusha
jl
pushf
cmps
stc
cmp
mov
cld
sbb
pusha
out
sahf
pusha
sub
xor
pushw
and
pop
repz
repz
mov
in
iret
push
push
inc
pop
repz
repz
mov
cmp
adc
push
iret
mov
or
push
cmp
iret
repz
mov
cmp
adc
inc
js
(bad)
cmp
(bad)
in
aaa
imul
push
adc
cmp
repz
fs
mov
call
les
fucomip
cmp
add
pop
sub
sbb
push
je
cbw
push
lods
iret
cmp
call
lock
push
push
inc
sbb
shr
daa
jns
adc
pusha
out
rol
mov
dec
xor
outs
cmp
jmp
fucomi
inc
neg
aas
ins
std
call
jmp
(bad)
out
(bad)
clc
pop
in
push
(bad)
jmp
call
jle
es
call
push
in
push
in
nop
icebp
cmp
scas
lock
jle
mov
call
pand
mov
test
fucomi
or
imul
std
push
push
cld
pop
mov
cwde
pop
cmp
mov
xchg
les
or
mov
dec
pop
and
pop
inc
ja
pop
jb
rcl
add
clc
dec
mov
inc
inc
inc
inc
push
xor
sbb
dec
dec
dec
dec
std
adc
inc
dec
mov
dec
inc
add
or
sbb
push
dec
inc
dec
add
jo
dec
shr
in
jo
jne
fucomi
or
outs
jne
or
xchg
bound
adc
arpl
hlt
sub
imul
cmc
adc
or
arpl
je
mov
add
jb
imul
fld
js
add
outs
jmp
bound
mov
add
cmp
push
adc
and
int
sub
jo
outs
shr
outs
ins
push
xor
clc
inc
neg
out
data16
outs
idiv
and
and
and
jb
call
aas
fld
adc
popa
or
pop
retf
arpl
push
inc
sbb
lea
mov
or
cld
data16
push
int
arpl
push
jb
mov
and
push
ret
outs
mul
add
fs
gs
adc
pop
jne
sbb
bound
ins
jo
jns
dec
xchg
test
imul
leave
cmp
js
arpl
ficomp
or
aas
and
xor
fidiv
dec
push
dec
pop
and
xor
sub
outs
jb
outs
add
fadd
in
ja
jne
xchg
rcl
ret
mov
repnz
and
sub
push
rol
sbb
mov
or
cbw
test
or
ret
and
dec
dec
xchg
or
lock
test
sub
arpl
and
add
sbb
js
add
shl
xor
loop
sbb
and
mov
pop
inc
push
jae
sub
fldenvw
sub
sbb
cmp
leave
cs
ret
stos
or
jbe
data16
cmp
cmp
push
data16
jb
pop
push
fsubr
push
sub
rol
loop
ja
js
jae
jb
or
sbb
out
sub
or
inc
call
cmp
cmp
(bad)
mov
ja
cwde
lea
dec
xor
lahf
mov
sti
pop
sub
data16
jne
jl
fistp
clc
inc
xchg
jns
sub
mov
aaa
add
pop
in
adc
and
jno
lds
outs
jae
js
test
inc
adc
mov
mov
call
shl
mov
scas
sub
pop
js
add
and
and
xor
xor
sub
mov
adc
rol
outs
gs
in
pop
int3
repz
push
ins
dec
push
mov
xchg
pop
out
inc
adc
(bad)
xor
outs
xor
and
jne
adc
xor
push
fst
cdq
adc
sbb
sbb
jns
js
jmp
outs
out
pusha
mov
jecxz
nop
xchg
retf
pop
jmp
dec
mov
jae
pop
das
ret
mov
sub
test
sbb
fs
pop
pop
test
shr
ss
outs
mov
lds
addr16
leave
sub
je
sti
push
test
shr
jb
shr
mov
xor
xor
or
jl
movs
adc
xor
add
add
ins
mov
addr16
lds
outs
dec
gs
movs
popa
ins
icebp
or
cmp
aaa
aaa
mov
je
fisttp
push
sub
jns
popa
sub
add
xchg
push
test
xchg
call
add
adc
or
lds
fdivr
inc
dec
dec
inc
inc
sbb
cmp
outs
fld
popa
and
imul
sbb
lahf
dec
push
dec
add
rcl
pop
addr16
sbb
mov
addr16
sub
and
in
retf
and
add
mov
ins
pop
pop
add
adc
or
into
xchg
inc
mov
jp
outs
nop
sub
xor
inc
sub
in
push
inc
or
adc
outs
xor
pop
iret
push
dec
fwait
cmp
pop
jge
adc
test
push
cmps
dec
popa
xor
jo
loope
movs
add
push
in
(bad)
jns
add
or
(bad)
and
add
std
pop
aad
add
inc
add
sub
rol
pop
jge
(bad)
je
push
push
dec
sti
in
fnstsw
dec
pop
or
inc
push
push
pop
sbb
pop
test
dec
dec
inc
dec
jl
xchg
sti
jmp
ins
add
aas
jnp
cs
sub
pop
and
lods
xchg
cld
inc
mov
and
push
ja
test
aam
jmp
ltr
add
les
add
mov
add
xchg
pop
enter
(bad)
imul
add
or
(bad)
adc
cmp
into
add
and
imul
mov
lock
inc
sbb
add
call
or
imul
add
jmp
loope
or
or
add
push
push
or
lahf
arpl
or
or
cmc
mov
dec
les
or
add
pop
sar
adc
fist
add
push
out
or
lahf
not
add
pop
cmp
cld
in
fldcw
or
sbb
sbb
or
add
scas
loopne
sbb
sub
xor
push
lods
adc
and
ret
cld
jle
fst
add
and
pop
and
iret
scas
fisub
and
imul
je
xlat
jo
imul
ja
push
jp
add
add
jo
rol
mov
or
xchg
jne
push
push
jo
mul
popf
cmp
mov
out
xlat
jo
shl
add
xlat
es
daa
add
or
int
push
ror
push
shl
sub
adc
or
loop
in
or
add
push
pop
pop
xlat
dec
loopne
add
(bad)
xor
bound
bound
adc
in
or
add
adc
ss
loop
imul
or
and
or
imul
das
or
cs
add
or
mov
dec
add
dec
push
scas
loope
sbb
add
ret
fisubr
or
push
or
loop
stc
cdq
sub
xor
xchg
add
lahf
mov
xor
stc
stc
stc
stc
or
add
add
loop
stc
cmp
ror
cmp
adc
fcmove
sbb
and
scas
mov
add
mov
mov
add
add
add
mov
jae
add
sbb
jle
lds
add
add
test
add
xchg
jle
and
outs
push
inc
jb
bound
push
inc
jb
or
and
shl
adc
push
push
outs
jo
ins
outs
outs
adc
neg
addr16
jne
imul
add
bound
jb
cmp
ja
mov
inc
data16
popa
ins
or
sar
adc
add
jnp
fadd
add
test
adc
or
mov
jb
cmp
gs
jbe
popa
mov
in
mov
lahf
je
inc
gs
ins
xor
imul
fisubr
jne
mov
sub
mov
imul
dec
pop
push
cs
in
outs
sbb
bound
fst
pop
ja
imul
sbb
mov
popa
add
fwait
sti
push
je
imul
dec
imul
jae
aam
jp
int
fld
aam
add
outs
push
out
or
out
int
jo
or
ins
bound
mov
pop
pop
inc
adc
dec
les
lods
ror
dec
cs
jns
fs
add
mov
dec
nop
cmp
outs
outs
mov
xor
xor
cmps
mov
mov
dec
ins
sub
pop
pop
push
and
jne
dec
imul
mov
or
xlat
dec
cli
cs
ds
imul
je
arpl
push
inc
nop
dec
mov
or
sub
ins
push
arpl
lahf
ins
push
gs
and
sub
outs
push
push
nop
scas
push
gs
prefetch
or
push
add
popa
add
or
imul
mov
push
(bad)
popa
fiadd
clc
push
ins
add
add
aas
sub
push
jns
ss
push
mov
dec
les
pop
add
in
outs
punpckldq
popa
add
icebp
push
stos
gs
cld
cmps
out
or
push
mov
and
imul
int
sub
push
and
scas
push
cmp
outs
pop
jo
jo
outs
(bad)
rol
or
dec
dec
pop
push
adc
pop
inc
dec
dec
adc
jb
pop
or
das
adc
jbe
sbb
aas
adc
mov
(bad)
out
push
adc
jns
add
into
sahf
pushf
cmp
pop
cmp
push
sbb
mov
ror
into
int
jb
jb
retf
iret
outs
mov
in
popa
pop
ror
shr
mov
dec
dec
adc
fcmovu
mov
test
fild
lahf
cmp
add
pop
pop
je
or
leave
in
xor
xchg
xchg
fucomi
sub
jg
pop
sub
inc
mov
nop
cmp
mov
xor
xor
xor
sub
jbe
(bad)
std
movntps
sub
out
dec
dec
outs
mov
pop
mov
dec
ficom
push
out
bndstx
xchg
sub
adc
cdq
adc
xchg
xchg
pop
mov
pop
es
inc
out
outs
mov
dec
add
and
scas
push
xchg
xchg
xchg
xchg
fneni(8087
loope
(bad)
jge
xchg
ror
pop
ret
in
in
add
retf
shl
ror
or
stos
mov
das
fwait
sub
les
mov
iret
lock
fsub
or
lahf
or
outs
pop
pop
(bad)
or
or
or
or
aaa
ss
or
gs
cmpps
or
add
pop
add
add
add
ret
call
lahf
sbb
pop
sbb
mov
unpckhps
sbb
cmp
sbb
or
jnp
imul
xor
add
xchg
fld
pop
jg
pop
aaa
outs
inc
outs
mov
outs
aas
das
aas
scas
aas
jb
mov
push
aas
push
or
pop
xchg
fld
or
test
mov
daa
mov
iret
adc
dec
dec
outs
daa
adc
adc
adc
fsubr
scas
sub
sub
popf
pushf
sub
fbstp
sbb
xor
aas
xor
sub
outs
ss
ss
ss
sbb
cmp
cmp
and
and
or
and
lahf
and
in
jbe
pop
das
das
das
pop
jno
mov
cmp
cmp
mov
dec
and
fucomi
in
and
cmp
out
cmp
add
cmp
cmp
psubusb
enter
es
pop
outs
mov
pop
jg
es
es
adc
inc
sbb
adc
(bad)
das
pop
pop
(bad)
(bad)
sbb
inc
dec
dec
adc
cmp
sub
pushf
sbb
adc
jb
mov
sbb
jb
jb
push
xor
pop
and
pop
add
or
dec
outs
das
mov
pop
prefetchw
daa
daa
daa
inc
and
frstor
daa
daa
or
loope
mov
jmp
outs
and
and
pop
daa
(bad)
jbe
shl
pop
jg
dec
outs
mov
in
add
dec
cmp
fisttp
pop
cmp
in
in
dec
pop
dec
dec
dec
outs
mov
in
inc
pop
inc
aas
inc
pop
inc
pop
dec
xchg
dec
dec
sysret
push
jge
mov
dec
or
comiss
add
jo
mov
inc
loop
mov
or
dec
sahf
rcr
dec
push
push
and
or
mov
mov
idiv
inc
jg
(bad)
pushf
seto
cmp
add
inc
outs
nop
or
or
int3
cmp
mov
mov
jne
jmp
out
fstp
(bad)
pop
lahf
test
sbb
out
or
loope
outs
adc
adc
ins
xchg
imul
(bad)
nop
sbb
outs
dec
cdq
jge
aad
psubusb
in
add
loopne
pop
loope
or
mov
pop
outs
or
adc
pop
mov
outs
cmp
mov
sbb
das
sbb
jb
add
jg
(bad)
(bad)
das
cmp
push
aas
mov
jmp
in
jbe
aas
or
mov
in
lods
outs
xor
xor
or
outs
aas
inc
outs
dec
aas
dec
das
dec
outs
fsubr
inc
sysret
daa
mov
in
dec
dec
das
dec
dec
pushf
pushf
fsubr
dec
aas
inc
inc
inc
fild
inc
inc
add
enter
sbb
jg
mov
pop
adc
fnstsw
inc
movaps
pop
mov
in
jbe
jg
pop
cmp
sub
sub
or
outs
pop
push
scas
(bad)
cs
sub
or
or
inc
pswapd
fstp
push
push
jo
mov
push
aas
ds
xchg
pop
(bad)
aas
outs
adc
add
sbb
dec
add
sub
pop
in
imul
pop
or
add
dec
push
mov
mov
add
mov
add
or
aas
add
add
push
add
mov
xor
adc
mov
add
adc
push
adc
sti
push
pop
push
adc
pop
mov
dec
sahf
push
pop
mov
pop
push
arpl
push
pop
sbb
mov
sbb
or
add
nop
daa
hlt
mov
es
or
sub
push
add
fucomi
fcom
pop
sub
sub
mov
xadd
movs
in
add
and
dec
arpl
push
fwait
cli
lahf
pop
inc
xor
icebp
scas
add
and
push
add
test
outs
mul
in
inc
out
inc
repnz
pop
mov
push
inc
xchg
inc
or
ins
ins
mov
jle
inc
sbb
je
ret
pop
xchg
pop
dec
pop
retf
ins
add
dec
adc
push
rol
mov
mov
arpl
add
daa
inc
jb
or
ins
test
das
fs
dec
push
add
jae
push
push
les
push
mov
and
push
push
xorps
add
add
jp
sar
pop
and
mov
les
push
pop
add
stos
or
lods
jbe
call
es
mov
test
lahf
pop
adc
daa
sub
pop
pop
es
pop
jne
and
jnp
and
ja
pop
xchg
pop
xchg
jns
push
imul
jg
mov
mov
pop
add
pop
jb
push
push
push
add
lahf
add
add
mov
add
adc
or
add
push
mov
mov
jnp
add
ins
inc
jg
add
pop
adc
pop
mov
lea
or
pop
nop
push
push
pop
jae
setno
push
sbb
shr
or
push
mov
mov
xchg
aas
add
xor
add
inc
xchg
pop
xchg
add
push
outs
xchg
add
mov
xchg
mov
cwde
add
cmp
push
jg
mov
add
cdq
add
dec
mov
pushf
popf
add
in
sahf
lahf
add
leave
iret
adc
or
into
ins
jmp
add
mov
mov
fcom
cmp
stos
add
movs
add
inc
pop
cmps
add
push
ins
or
fadd
push
lsl
(bad)
mov
push
jmp
out
cmps
add
add
adc
test
mov
mov
jnp
xlat
lods
ss
stos
imul
in
lods
cmps
lods
add
mov
popa
aaa
pop
scas
add
and
jmp
xchg
add
xchg
sbb
daa
pop
scas
outs
mov
xor
sahf
popa
mov
push
mov
adc
add
push
cmp
push
and
mov
and
add
mov
push
add
mov
push
add
mov
mov
sub
das
es
jp
push
add
adc
lsl
sti
faddp
push
push
mov
push
mov
mov
add
add
sub
movzx
rol
pop
cmps
jnp
add
add
idiv
add
pop
push
fcomp
aam
push
das
daa
addr16
mov
ss
cmp
btc
push
mov
mov
add
cs
faddp
imul
push
ret
add
inc
mov
lsl
and
pop
ss
push
les
ret
or
mov
pop
jg
ret
push
lds
push
in
scas
push
mov
mov
or
add
(bad)
ficom
ins
add
mov
sti
xlat
out
push
enter
enter
sub
add
pop
retf
jae
add
push
retf
add
mov
pop
in
(bad)
in
add
int
push
lsl
push
sub
(bad)
outs
daa
in
out
add
push
pop
push
das
jne
add
into
mov
push
mov
arpl
aad
sbb
or
add
add
int3
push
dec
mov
xchg
mov
adc
rol
mov
add
mov
pop
lds
add
mov
sub
sub
add
add
rol
pushf
(bad)
add
std
dec
fist
fist
dec
pop
sbb
cmp
push
jnp
add
or
push
or
mov
sbb
add
aad
push
rol
faddp
add
dec
cs
fild
loopne
loopne
cs
loop
jecxz
mov
in
loopne
loop
in
out
jl
out
out
fist
fistp
daa
pop
push
loop
push
loope
jnp
or
xchg
add
loopne
push
dec
or
push
das
nop
and
jmp
popa
imul
in
or
pop
jmp
add
adc
and
repz
nop
and
pop
pop
add
mov
jnp
aas
sub
xor
add
invd
mov
add
sub
lock
inc
push
xor
and
nop
and
scas
sbb
adc
or
mov
test
int
adc
add
add
cmc
add
pop
ins
add
jb
and
enter
mov
sti
cli
add
add
add
jg
add
in
inc
add
push
movs
test
cmps
fimul
xchg
add
add
add
add
jg
add
les
adc
(bad)
fsubr
add
jg
add
or
add
sbb
or
or
add
inc
add
or
cmps
jbe
dec
in
sgdtd
mov
loop
movs
aas
adc
adc
or
mov
adc
adc
adc
cmp
pop
adc
icebp
push
mov
inc
adc
push
dec
add
sbb
rcr
add
sbb
sub
ins
pop
mov
inc
imul
adc
add
push
scas
sbb
in
adc
pop
add
push
xchg
mov
aam
int3
and
add
xchg
shl
inc
enter
inc
ja
xchg
add
daa
add
shl
add
inc
add
add
add
sub
sub
add
adc
pop
pop
aas
sub
add
dec
sub
sub
sub
xchg
inc
mov
call
fnsave
das
pop
das
mov
xor
add
push
(bad)
xor
add
pop
fadd
jmp
add
adc
dec
scas
dec
scas
cmp
sbb
pushf
cmp
add
cmp
push
add
(bad)
in
popa
and
cmps
adc
test
mov
arpl
pop
add
xor
add
rol
inc
push
pop
inc
rcl
mov
add
bound
xor
mov
mov
pop
xchg
cs
pop
mov
push
outs
add
dec
add
or
jg
add
outs
dec
push
mov
pop
or
ja
cmp
add
outs
call
jg
add
arpl
jno
push
add
pusha
pop
mov
outs
mov
jmp
push
mov
ret
dec
ss
dec
(bad)
iret
mov
add
lldt
pop
ins
pusha
mov
lar
push
add
shr
popa
fld
adc
fmul
mov
jae
push
add
add
xor
xlat
scas
in
cmp
adc
mov
fnsave
fisttp
add
add
xor
adc
or
aas
test
add
inc
pop
adc
out
imul
cmp
or
add
(bad)
dec
push
daa
imul
dec
fnstsw
jg
sbb
outs
push
jbe
(bad)
aaa
push
add
fistp
bound
adc
jae
add
xchg
cmp
add
in
add
popa
adc
aas
xchg
adc
xlat
sbb
or
ins
mov
scas
xchg
sbb
add
add
inc
push
test
push
push
add
iret
sub
inc
stos
jg
pusha
adc
adc
sub
(bad)
adc
sub
xchg
bound
add
(bad)
fcom
and
or
adc
push
and
and
mov
jmp
scas
mov
push
and
adc
add
push
fistp
push
sub
sbb
(bad)
cmps
push
pop
add
inc
nop
push
inc
out
mov
sub
test
and
inc
xor
add
mov
int3
sbb
mov
mov
and
add
add
mov
push
xchg
adc
mov
std
add
push
add
shl
les
xchg
ja
mov
test
add
jno
add
jae
rcl
(bad)
add
inc
sti
jne
xchg
or
out
test
pop
lods
add
mov
add
add
inc
add
adc
(bad)
cmps
lods
dec
add
or
sbb
add
inc
pop
push
mov
add
add
add
imul
aad
add
test
ror
test
cmp
and
stos
les
ss
jecxz
jbe
jmp
add
jmp
cmp
(bad)
mov
pop
xlat
add
jns
push
push
sub
add
jp
and
pop
and
add
retf
pop
jge
add
fcmovnu
xor
aam
inc
push
push
or
push
daa
aas
ins
inc
mov
sbb
dec
adc
or
add
cmps
inc
mov
add
jg
jne
sub
add
fadd
pop
jg
add
push
sub
mov
mov
fimul
inc
movs
aas
add
push
inc
or
sbb
push
push
or
sbb
mov
cmps
mov
add
and
test
xchg
mov
push
xchg
das
jmp
sbb
and
sbb
pop
not
push
add
sub
iret
and
inc
mov
shl
inc
stos
xor
xor
xor
ja
inc
or
in
mov
pop
mov
push
add
mov
mov
mov
cmp
mov
adc
lea
mov
adc
add
nop
push
dec
cmp
mov
ret
inc
xchg
arpl
mov
or
in
in
cdq
call
jnp
push
mov
xor
sub
jae
lahf
mov
push
lahf
mov
test
ins
xchg
das
mov
mov
ret
add
push
and
add
cmps
push
lea
fwait
test
ror
or
daa
mov
loopne
add
dec
ins
inc
inc
das
pop
push
add
or
add
jmp
dec
add
push
add
push
push
jl
repz
mov
and
pop
xor
mov
sbb
sbb
bound
scas
(bad)
inc
imul
add
test
pop
push
add
addr16
call
add
adc
lock
push
pop
adc
stos
test
mov
inc
and
das
or
ja
add
iret
mov
add
add
and
add
cmps
mov
dec
mov
add
add
cmp
imul
push
sub
push
add
add
add
add
inc
les
pop
mov
jmp
in
test
test
ins
adc
sub
adc
inc
mov
xor
add
inc
test
or
stos
add
mov
lods
add
and
add
scas
add
scas
and
add
pop
dec
and
add
add
das
add
sbb
add
fdiv
or
cmp
cmp
inc
add
and
push
xchg
add
dec
sbb
bound
jnp
add
cmps
jg
inc
add
add
xchg
fst
or
shr
add
mov
add
sbb
add
add
push
jmp
push
aam
les
add
jbe
inc
add
adc
dec
adc
fisub
dec
adc
call
add
repz
pop
pop
add
add
cmp
stos
mov
sub
inc
lahf
add
aam
sbb
add
xor
test
stos
daa
jecxz
adc
test
and
push
pop
iret
push
add
inc
adc
ja
cmp
sbb
push
aas
adc
iret
push
add
and
stos
add
add
inc
mov
and
add
scas
and
je
add
lahf
push
mov
pop
inc
mov
adc
push
inc
lods
mov
push
(bad)
mov
fmul
pusha
xlat
add
adc
test
repz
sub
add
jnp
push
add
push
jmp
push
les
add
inc
test
inc
and
add
and
sub
icebp
push
push
call
clc
mov
sbb
and
xor
call
cs
xor
adc
xor
add
mov
(bad)
cmp
inc
inc
leave
dec
aas
dec
mov
dec
adc
dec
push
push
push
jecxz
inc
pop
mov
dec
lds
pop
add
mov
pusha
popa
bound
movs
cmp
adc
imul
pushf
ins
ins
outs
pop
sar
sub
jno
jae
jnp
repnz
jle
add
test
test
ins
add
adc
add
inc
mov
adc
push
ins
inc
cmp
xchg
xchg
aas
pop
test
adc
or
push
pop
cdq
or
inc
push
xchg
push
lock
pop
and
inc
add
add
or
popf
add
test
cs
popf
call
xchg
inc
std
fsubr
mov
inc
popa
in
push
das
mov
bound
mov
cmp
mov
icebp
xchg
lock
(bad)
retf
call
fwait
pushf
popf
sahf
lahf
mov
inc
pop
stos
lods
lods
scas
scas
mov
add
mov
rol
mov
int3
int
iret
rcl
inc
adc
scas
mov
out
out
lock
sbb
ret
sti
cld
std
(bad)
(bad)
(bad)
cmp
popa
push
xor
add
test
add
ds
fimul
add
jle
adc
add
inc
mov
ror
jnp
add
push
push
or
push
clc
add
jg
xchg
add
stos
loope
and
add
add
jnp
push
xor
sbb
jge
pop
leave
ja
add
push
dec
mov
ficom
aas
add
jns
dec
add
add
push
and
inc
sahf
out
sahf
push
fs
xchg
movs
xor
(bad)
aam
mov
imul
aas
cwde
xor
mov
mov
mov
dec
mov
jl
add
sub
cmp
repz
cwde
mov
cmps
stc
sub
push
jo
mov
inc
and
cmp
adc
js
add
ja
inc
js
fadd
pop
ss
push
ins
xchg
inc
push
pusha
test
cs
inc
cmps
ret
loopne
cmp
push
clc
data16
mov
mov
add
pop
and
push
rcr
in
push
mov
nop
shr
add
dec
sub
xor
push
ins
xchg
je
retw
les
add
push
ret
push
je
outs
js
dec
aam
mov
push
push
xchg
push
add
mul
test
addr16
inc
push
push
add
xchg
xor
sbb
lock
sahf
loope
or
mov
cs
pop
adc
inc
jnp
pushf
imul
adc
push
aas
push
jmp
sbb
pusha
fdivr
mov
sbb
cwde
xchg
mov
daa
or
add
enter
fdivp
fidivr
or
and
mov
adc
and
push
add
add
sub
stc
out
push
add
ins
dec
and
pop
pop
ror
sar
cmps
adc
cwde
(bad)
rcl
outs
js
push
sbb
ficomp
jbe
movd
sbb
idiv
in
and
push
int
push
xchg
call
jle
sub
pushf
ss
pop
popa
cmps
mov
loopne
add
nop
push
or
cwde
add
out
fnstcw
push
push
mov
mov
and
and
shl
jo
push
pop
xchg
cmp
inc
jmpw
not
pop
(bad)
data16
dec
mov
lock
(bad)
sub
or
(bad)
div
jo
sahf
inc
push
xchg
xchg
ds
pop
or
sbb
fsub
jl
add
jno
pop
xchg
sub
adc
shl
gs
xor
push
lock
mov
jle
or
adc
div
rol
xor
les
into
or
pop
jl
sbb
jo
fsubr
mov
sbb
pop
out
sbb
neg
mov
fbstp
pop
mov
sahf
enter
into
sub
faddp
cmp
in
cmp
nop
into
mov
lock
mov
mov
(bad)
mov
or
rcr
sub
push
sbb
ss
jecxz
mov
jbe
jbe
push
fs
dec
add
dec
neg
and
push
pushf
jnp
push
cmp
or
mov
mov
loopne
sub
jge
loopne
test
(bad)
shr
cmp
jnp
ret
das
clts
lock
call
cs
sahf
push
xor
mov
in
aaa
push
xor
lock
push
or
fsubrp
cmps
je
clc
into
out
cmp
pusha
push
pop
outs
add
inc
push
inc
pop
out
ror
jmp
test
test
(bad)
lock
sahf
fidiv
mov
ja
push
es
inc
xchg
jo
mov
lock
dec
push
pusha
fdivrp
push
rol
test
lods
or
xchg
loopne
loopne
out
out
lods
push
and
dec
js
iret
jmp
dec
dec
jle
shl
mov
xor
test
div
imul
sahf
jle
ficom
pxor
cmp
loopne
pop
or
and
movs
ja
fidivr
enter
add
inc
push
js
pop
jl
aad
adc
push
mul
sbb
or
add
inc
aas
cmps
adc
sar
adc
dec
xchg
inc
in
jae
push
js
push
cs
push
mov
es
(bad)
pop
cs
inc
lock
push
push
mov
lock
inc
jle
(bad)
jo
xchg
std
sub
js
loopne
push
in
imul
sbb
jnp
sbb
push
(bad)
dec
push
add
fidivr
into
mov
or
mov
mov
outs
adc
cmp
add
pop
fisub
outs
and
enter
mov
fnstsw
push
and
cld
cmps
(bad)
xchg
push
mov
mov
mov
push
push
pop
mov
mov
adc
sbb
fcom
mov
dec
aaa
lds
sahf
(bad)
cmp
aaa
(bad)
cmp
outs
sbb
cmps
mov
mov
xor
ret
jnp
mov
gs
and
inc
push
pop
mov
mov
mov
xchg
push
add
push
sbb
cmps
mov
cmps
lock
cmp
enter
xlat
push
sbb
or
ins
or
enter
movs
mov
jo
(bad)
es
dec
hlt
ss
push
in
mov
inc
inc
(bad)
cwde
dec
nop
inc
pop
scas
shl
jecxz
jmp
inc
fsubr
loopne
loope
lock
inc
mov
push
mov
lock
xchg
sub
mov
jbe
sbb
mov
jle
enter
loopne
dec
jbe
xchg
fidivr
js
dec
(bad)
push
lods
push
cmp
lock
xor
push
push
js
push
out
es
lods
push
push
sbb
enter
add
mov
dec
or
data16
cmp
test
out
push
faddp
mov
data16
neg
and
jle
mov
into
push
divps
out
mov
aam
(bad)
into
mov
stos
neg
loopne
call
pop
mov
pop
movs
push
adc
call
cmp
hlt
push
cmp
mov
shr
xchg
sub
js
(bad)
pop
inc
push
push
mov
mov
mov
(bad)
jnp
xor
mov
or
push
adc
or
xchg
imul
jbe
cmp
(bad)
int3
xchg
cmp
fild
push
mov
cmp
xor
xchg
push
mov
push
pop
mov
push
dec
scas
fadd
sub
(bad)
cmp
mov
aaa
out
rcl
jnp
cmp
cmps
cwde
push
jo
(bad)
push
inc
sahf
add
rcr
mov
inc
(bad)
xchg
out
loopne
lock
xor
lock
inc
adc
loopne
or
out
xchg
ror
mov
sbb
aam
hlt
dec
add
cmp
mov
enter
fs
mov
dec
adc
sbb
and
dec
add
dec
jno
rol
dec
push
scas
sub
dec
add
pop
fs
pusha
outs
mov
and
mov
mov
jl
mov
(bad)
push
jle
push
cld
ss
js
mov
mov
into
test
jnp
inc
push
cmp
into
call
mov
push
mov
xchg
push
(bad)
mov
lock
pop
sbb
aas
push
js
(bad)
adc
aam
pop
push
push
(bad)
xchg
fcomp
js
fld
int3
pop
pop
mov
sti
cs
inc
xchg
add
sbb
ret
lds
dec
mov
sub
cwde
es
jnp
push
les
scas
mov
dec
data16
mov
sbb
cmp
mov
mov
iret
push
call
jbe
push
(bad)
or
lock
sbb
adc
neg
sub
add
loopne
mov
pop
sbb
ss
nop
push
sar
xchg
pusha
lock
out
sub
mov
sahf
cld
fcom
je
pop
loopne
jge
mov
push
jbe
add
adc
cmp
xor
pop
pushf
out
fidivr
lock
jnp
and
clc
scas
push
mov
js
mov
push
cwde
cmp
pop
mov
shl
call
js
push
test
call
outs
js
ret
outs
jl
push
push
push
cmp
sbb
jmp
loopne
js
out
push
fs
cld
out
test
jns
inc
shl
ja
push
fidivr
pop
and
and
dec
pop
fdivr
cmp
div
pop
pop
sbb
push
scas
or
js
rcr
lock
xchg
mov
sbb
loope
cmps
outs
enter
adc
into
nop
xchg
xchg
sbb
lods
pop
add
cmp
(bad)
sbb
cs
sbb
mov
ret
es
pusha
inc
outs
jl
cmp
cmp
push
push
mov
lahf
mov
push
int3
ds
sub
xor
sub
jbe
push
sahf
popa
lea
xchg
and
imul
or
mov
js
mov
push
pusha
sbb
sub
pop
xchg
dec
jle
shl
jg
ins
neg
clc
jp
mov
ss
clc
add
mov
rol
mov
out
push
cwde
fimul
loope
fadd
shl
rol
data16
cmp
add
push
clc
iret
mov
rol
adc
shl
loopne
pushaw
mov
xor
je
xchg
js
push
pusha
ss
fs
push
pop
sahf
addr16
push
loopne
cmps
push
cwde
in
xchg
push
push
ins
out
push
cwde
mov
outs
test
es
js
pop
(bad)
adc
push
inc
push
jle
div
ret
xchg
outs
push
sbb
pop
out
loop
clc
into
push
fdivr
pop
fdivr
fidivr
xor
(bad)
mov
xor
mov
push
call
sbb
cmp
test
outs
enter
cmp
out
cld
xchg
sbb
fiadd
outs
outs
jbe
push
inc
adc
sbb
xchg
push
push
xor
jnp
add
dec
pop
out
sub
mov
addr16
add
mov
inc
fdivr
pop
pusha
rol
sahf
loope
hlt
les
into
push
scas
dec
fcomp
out
loopne
cmp
inc
push
pusha
outs
ja
pusha
cmc
sub
xchg
push
(bad)
pop
mov
into
fsub
cs
sar
out
push
sbb
push
es
jle
push
hlt
push
neg
cmp
js
inc
xchg
mov
sub
js
out
test
push
test
dec
div
ja
push
cmp
shl
and
inc
mov
cmps
cmp
scas
es
or
nop
jle
outs
add
sbb
xchg
dec
inc
out
js
add
(bad)
out
mov
cmp
pop
mov
not
out
jecxz
inc
xchg
pop
push
dec
cs
jnp
add
push
aam
mov
push
xor
push
fistp
sub
ds
mov
and
mov
iret
loope
inc
ja
mov
xchg
pop
add
push
(bad)
cmps
mov
dec
jle
cs
pushf
sbb
cmp
cmp
test
sbb
sub
mul
out
das
test
stos
cmp
cmc
jo
cmps
push
adc
imul
shr
pop
data16
sbb
jle
jbe
push
push
into
inc
xor
loope
clc
aas
inc
pusha
cmc
aad
adc
inc
push
push
push
and
xchg
stos
and
push
push
push
adc
dec
inc
push
xchg
push
and
xchg
push
and
push
dec
push
adc
push
inc
push
xchg
test
xchg
push
push
push
push
dec
test
stos
stos
and
or
push
xchg
test
xchg
push
push
and
stos
stos
and
or
adc
dec
inc
push
push
push
and
xchg
stos
and
push
push
push
adc
dec
inc
push
xchg
push
and
xchg
push
and
push
dec
push
adc
push
inc
push
xchg
test
xchg
push
push
push
push
dec
test
stos
stos
and
or
push
xchg
test
xchg
push
push
and
mov
stc
outs
add
dec
fs
push
bound
sbb
arpl
nop
cmp
pop
sbb
mov
shr
fidivr
ss
push
fs
mov
pop
jnp
mov
js
xor
int3
aas
mov
jo
mov
fdivr
mov
je
mov
ss
mov
data16
ss
mov
pop
ss
mov
out
jl
lock
sar
js
scas
popf
div
adc
aas
xor
push
xor
push
fdivr
jnp
and
test
cld
push
or
jns
in
test
add
add
push
int3
sub
lock
into
push
in
inc
and
jle
push
push
mov
out
inc
cs
and
out
in
iret
mov
out
je
jo
into
mov
push
push
sub
cmps
stc
cmp
cld
mov
pop
rol
repz
adc
mov
sar
aam
addr16
(bad)
call
pop
das
mov
scas
(bad)
push
lock
or
mov
mov
push
daa
mov
fdivr
out
lock
add
sbb
inc
cmp
jnp
add
je
mov
repz
aas
cli
push
adc
pop
inc
add
ss
aas
push
jo
imul
gs
xor
cs
ins
(bad)
(bad)
out
pop
inc
gs
outs
imul
arpl
jae
jb
outs
data16
sti
cmps
std
div
outs
ds
jae
jo
pop
push
push
push
push
outs
push
bound
je
push
pop
dec
dec
outs
push
imul
xor
inc
jne
xor
inc
je
push
jne
gs
cmp
daa
push
ins
outs
inc
sub
gs
das
and
jns
jg
dec
add
outs
imul
(bad)
cdq
pop
lock
ja
xor
and
gs
popa
ins
mov
inc
dec
inc
mov
adc
sti
int
scas
cmovbe
pop
gs
jb
dec
and
gs
jmp
or
fs
arpl
gs
fneni(8087
(bad)
fst
inc
pushf
dec
jb
inc
imul
push
outs
fs
idiv
push
sbb
inc
gs
popa
adc
jo
push
cs
mov
rcl
outs
sub
xor
sub
je
daa
inc
jb
ja
sbb
cs
push
gs
inc
js
retf
in
cmp
dec
push
cli
dec
jo
outs
push
je
jne
add
push
xchg
pusha
mov
cmp
test
and
je
sub
shl
daa
scas
dec
retf
adc
inc
fucomi
dec
dec
push
dec
inc
push
dec
cs
dec
dec
mov
ins
jo
ins
mov
outs
rcl
xor
xchg
xor
jp
inc
jb
add
je
push
sbb
out
popa
gs
or
dec
push
ja
rcl
ror
jae
ins
xor
add
mov
or
(bad)
outs
xor
or
push
xchg
test
jo
add
fsubr
adc
sub
add
and
xchg
std
jg
add
add
add
dec
add
push
push
push
sbb
inc
add
dec
add
inc
add
verw
std
(bad)
mov
push
add
inc
add
adc
out
pop
jle
push
add
dec
push
push
pop
inc
push
out
mov
or
inc
cs
inc
out
neg
sub
xor
push
(bad)
or
neg
mov
pop
and
pop
add
stos
cmp
shl
dec
(bad)
inc
adc
cld
add
add
cmp
pusha
add
pop
lock
jo
fstp
in
add
(bad)
pop
add
sahf
iret
repz
jle
rol
jl
js
pusha
jbe
sub
lock
pop
test
cld
push
jl
and
pushf
jl
cmp
adc
dec
pop
sahf
out
into
aas
das
add
add
xadd
add
sbb
xor
sbb
add
test
or
pop
push
push
mov
rol
shr
fldcw
mov
test
jg
pop
and
add
add
sbb
clc
cmp
data16
out
and
fldcw
rol
loopne
ret
into
repz
pop
cld
sub
das
lock
pop
xchg
out
cmp
lock
xor
js
pop
std
cmp
mov
push
mov
and
inc
lock
lock
ds
xor
add
push
add
fidivr
jno
push
or
cmp
sti
loopne
retf
add
push
cmp
popf
dec
adc
add
orps
std
push
clc
pop
or
dec
lock
fcmovb
pop
pop
es
into
pop
ins
jbe
sbb
loopne
outs
clc
(bad)
mov
fimul
addr16
pusha
pop
add
pop
add
int
mov
xlat
pop
sbb
ficomp
add
inc
nop
stos
aas
xchg
cmp
pop
ss
test
pop
pop
in
les
out
sbb
cmp
nop
sub
in
les
aas
add
add
pop
in
pop
cld
pop
cmp
fadd
add
mov
push
std
add
jo
cmps
inc
push
aaa
das
iret
jnp
xor
std
or
push
adc
cmp
sub
inc
mov
pop
pop
inc
in
inc
add
xor
sbb
push
push
sbb
aad
sub
cmc
test
ret
rol
lock
adc
dec
sbb
cmp
sbb
pusha
(bad)
fwait
or
test
push
shl
test
add
xlat
xchg
fld
inc
add
pop
add
mov
je
pop
and
pop
mov
inc
nop
int
push
sbb
sub
lock
das
pop
adc
xor
pop
cld
mov
xor
aas
push
push
sahf
xchg
xlat
add
push
rol
add
popf
test
(bad)
jg
push
mov
aaa
add
stos
xchg
stos
and
push
push
push
adc
dec
inc
push
xchg
push
and
xchg
push
and
push
dec
push
adc
push
inc
push
xchg
test
xchg
push
push
push
push
dec
test
stos
stos
and
or
push
xchg
test
xchg
push
push
and
stos
stos
and
or
adc
dec
inc
push
push
push
and
xchg
stos
and
push
push
push
adc
dec
inc
push
xchg
push
and
nop
push
cli
pop
push
add
outs
add
pop
fstp
add
gs
push
push
out
jb
and
jbe
and
ins
mov
ins
sbb
outs
push
popa
push
imul
inc
and
and
jnp
in
fbld
cs
add
dec
ja
push
ins
fistp
into
jns
cmp
sbb
idiv
adc
jo
je
outs
adc
mov
imul
pop
and
shl
or
addr16
push
mov
jl
add
push
push
xor
pand
mov
arpl
fidiv
arpl
outs
scas
ins
add
mov
inc
inc
jae
inc
push
lock
add
or
loopne
fisubr
jae
jnp
xor
inc
outs
pop
fisttp
mul
add
cmp
jae
arpl
jne
clc
push
data16
xor
inc
add
xchg
(bad)
jecxz
jno
imul
jb
imul
mov
mov
aaa
sbb
mov
fiadd
or
imul
mov
push
mov
punpckhwd
add
iret
rcr
push
and
fiadd
dec
sub
jne
psubsb
fld
and
sbb
add
scas
addr16
in
int3
mov
popa
adc
add
add
rep
push
outs
sbb
jo
pop
mov
dec
stos
bound
add
mov
fldcw
add
pop
bound
idiv
ja
imul
push
popa
add
out
call
imul
or
adc
push
out
inc
add
imul
pop
sti
cs
imul
and
ja
push
and
mov
arpl
push
add
or
mov
aaa
imul
cli
mov
arpl
adc
mov
icebp
add
in
xor
imul
gs
sub
and
or
push
adc
aaa
sbb
or
je
outs
inc
popa
(bad)
cmp
mov
add
push
imul
sti
outs
adc
aaa
data16
mov
add
inc
or
or
dec
fwait
pop
imul
test
stos
cmp
sbb
sti
xor
loop
inc
jo
pop
fild
pop
addr16
jb
or
inc
(bad)
pop
push
ret
fsub
pop
and
sbb
mov
add
shr
sub
jecxz
fidiv
sbb
and
inc
inc
sbb
imul
sbb
dec
add
daa
inc
or
or
ja
mov
dec
cmps
fild
inc
arpl
ficom
outs
imul
lds
ins
add
xchg
call
ins
add
mov
add
ret
fwait
or
jb
sub
inc
sbb
ja
enter
imul
in
call
add
mov
inc
imul
or
ret
mov
pop
out
mov
cmps
popa
mov
mov
jae
pop
mov
jnp
or
xchg
add
scas
test
aas
data16
ins
add
add
sahf
add
push
mov
outs
repnz
inc
fwait
out
add
push
fcomp
pop
dec
inc
push
ss
stos
mov
push
inc
arpl
add
and
repz
sti
sbb
or
scas
push
jg
jb
shr
mov
mov
add
xor
imul
or
(bad)
arpl
outs
mov
push
rol
addr16
arpl
dec
call
dec
daa
scas
sub
and
(bad)
dec
push
inc
cmps
out
rcl
or
add
add
xor
mov
outs
dec
adc
mov
push
push
mov
popf
(bad)
mov
(bad)
pop
jmp
mov
scas
sbb
add
add
outs
sbb
xchg
daa
retf
mov
fdivr
xor
jno
push
mov
je
(bad)
push
mov
jb
es
inc
add
push
retf
pop
mov
or
popa
stos
lahf
retfw
retf
nop
adc
mov
inc
jae
lahf
jbe
or
pop
ret
aaa
sti
pop
mov
pop
bound
jns
or
mov
add
xor
mov
adc
ret
pop
and
push
jle
dec
or
add
mov
js
add
je
push
inc
call
or
add
push
sbb
call
jb
jbe
or
xchg
mov
add
adc
xchg
or
and
add
arpl
aad
pop
shl
jmp
les
lock
add
or
pusha
xchg
xor
ret
ret
and
test
sbb
xlat
mov
jo
inc
scas
ss
bound
scas
push
out
mov
push
pop
clc
and
mov
add
push
pusha
jmp
lahf
jmp
add
dec
xlat
sbb
and
add
inc
outs
pop
or
add
lahf
inc
jo
cmp
pop
fild
push
shr
add
cs
xchg
stos
dec
sahf
add
or
adc
jmp
inc
and
imul
sub
inc
nop
xchg
and
add
mov
movs
pusha
inc
pop
and
aam
jns
sub
mov
cmp
je
add
xor
or
jb
lds
rol
call
or
inc
push
shl
push
test
add
gs
push
sbb
ret
fs
test
adc
pop
jg
mov
adc
fs
cld
mov
jne
ins
sbb
xor
mov
(bad)
and
pop
fs
xor
add
cmp
jns
pop
je
sub
inc
jg
and
pusha
push
jmp
xlat
sub
sbb
fist
sbb
mov
pop
ret
push
loope
add
popa
(bad)
bound
xchg
or
pusha
pop
add
div
and
js
lods
loopne
stos
mov
in
pop
test
inc
pop
mov
pop
cmp
test
push
push
iret
int3
add
cmp
add
jo
push
jno
aas
dec
mov
fwait
mov
or
jmp
aas
mov
fwait
inc
or
or
out
pop
outs
add
iret
or
xor
push
aaa
xlat
add
or
js
ja
iret
push
push
add
push
imul
loopne
xchg
add
arpl
push
das
xchg
xchg
jae
pop
pusha
movs
push
pop
or
call
inc
imul
add
xor
sub
aam
mov
jnp
mov
ret
mov
inc
popa
add
pop
add
add
sbb
push
and
inc
fwait
inc
imul
or
inc
xchg
call
adc
and
pop
mov
dec
and
add
push
push
imul
xor
xor
int3
push
aaa
add
xchg
mov
imul
mov
and
inc
repz
je
pop
call
xlat
add
dec
adc
xchg
imul
and
fs
stos
aaa
and
clc
add
jmp
inc
arpl
js
jl
repz
ins
add
movs
lea
(bad)
jae
xchg
adc
ins
push
iret
pop
out
mov
pushf
shr
je
jecxz
sub
sbb
jae
jmp
shl
jb
fild
ret
ret
test
sahf
xchg
bound
outs
ret
inc
push
sub
pop
addr16
add
aam
test
mul
jne
xor
pop
aaa
jae
mov
mov
or
ins
inc
push
mov
das
pop
sub
adc
lods
add
arpl
popa
dec
shl
(bad)
push
fwait
pusha
enter
daa
(bad)
xor
cmp
and
nop
push
xchg
push
out
add
les
jns
clc
add
ins
xchg
inc
retf
adc
and
push
mov
outs
add
prefetch
(bad)
add
xchg
ror
add
jecxz
jnp
lods
cmp
push
arpl
rcr
add
jne
outs
add
aaa
xor
bound
(bad)
ins
repz
lahf
add
out
fwait
imul
daa
add
jb
ins
out
outs
add
add
jae
add
ins
adc
lahf
addr16
xchg
add
test
arpl
add
mov
jne
fistp
outs
fistp
and
jmp
mov
loop
xor
fisttp
or
jnp
add
nop
pusha
add
mul
scas
adc
mov
inc
add
push
scas
or
xchg
mov
sbb
push
fwait
jge
xor
push
imul
js
repz
jb
adc
or
mov
or
stos
and
sbb
or
retf
jb
inc
sub
mov
mov
dec
mov
add
fisttp
popa
add
jae
(bad)
movs
xor
ror
add
pop
and
imul
fbld
sbb
(bad)
lods
adc
aas
lahf
and
bound
jnp
rol
push
dec
add
xor
pop
push
syscall
cs
xor
xor
push
jecxz
lock
je
outs
push
outs
sub
nop
pusha
adc
out
outs
sub
aaa
jecxz
fwait
dec
or
or
push
xor
pusha
mov
shr
cmp
test
jmp
stos
push
shr
outs
ret
or
lods
or
cmps
and
ins
dec
adc
jo
xor
repz
push
and
add
data16
lods
and
add
mov
arpl
(bad)
loop
mov
and
sahf
dec
add
dec
add
outs
add
mov
sub
xor
and
push
sub
xor
(bad)
or
mov
dec
(bad)
aaa
imul
or
inc
mov
or
inc
mov
jae
inc
scas
mov
clc
imul
dec
mov
loop
addr16
jb
mul
jo
or
jg
clc
test
arpl
gs
adc
jae
push
xlat
mov
jo
sub
jecxz
or
and
push
arpl
add
sub
rcr
in
xchg
ins
mov
mov
or
movs
pop
inc
xchg
cmp
or
dec
cmp
fwait
bound
adc
add
add
sbb
xor
lahf
mov
xor
or
adc
jl
dec
imul
movs
add
ffreep
lsl
or
ret
daa
or
pop
mov
lock
aad
(bad)
outs
fwait
js
push
adc
aam
outs
push
dec
sbb
pop
arpl
cmp
cli
jbe
add
or
jo
nop
add
jmp
ins
addr16
cmp
and
pop
or
idiv
push
dec
add
dec
push
push
add
pop
add
ror
mov
fwait
or
pop
test
push
mov
fwait
test
retf
mov
or
adc
popa
rol
outs
add
stos
mov
gs
mov
les
popa
repz
int3
sbb
or
daa
rol
inc
pop
jg
inc
rcr
fs
mov
pop
xchg
sti
add
add
mov
jg
sub
movs
stos
aaa
popf
scas
push
mov
inc
and
dec
lea
imul
push
int3
inc
aaa
rol
call
sbb
test
inc
inc
test
stos
pop
arpl
sub
(bad)
(bad)
jmp
inc
inc
mov
push
pusha
ror
inc
pop
and
add
call
adc
ja
inc
mov
mov
pop
jg
sbb
mov
pop
sub
pop
and
xor
bound
push
cmp
ins
aas
pop
movs
add
dec
mov
sub
(bad)
das
jae
mov
add
sbb
sbb
add
xchg
(bad)
ror
mov
adc
jecxz
arpl
aas
push
push
inc
rcr
xlat
add
and
fist
pop
sti
daa
add
adc
ins
sbb
imul
aam
imul
add
sbb
xor
mov
sub
xor
cmovo
(bad)
jp
sbb
iret
add
inc
mov
aaa
cmps
xchg
mov
push
mov
mov
jnp
and
jecxz
inc
and
iret
int3
gs
xlat
sub
or
daa
fwait
outs
mov
push
aaa
push
xchg
ds
popa
add
xor
dec
xchg
popa
mov
mov
scas
xor
pop
xchg
arpl
and
das
aaa
outs
add
icebp
(bad)
sbb
push
jbe
outs
outs
dec
add
pop
inc
cmp
pop
inc
mov
nop
sti
xchg
mov
xlat
repz
rol
sbb
pshufw
scas
aaa
outs
popa
xchg
adc
loop
add
adc
lods
outs
cmp
cmp
mov
imul
loop
ret
fbld
test
adc
rcl
jae
mov
dec
add
mov
pop
ret
push
mov
scas
stos
call
jno
iret
mov
add
outs
mov
sbb
add
sub
jo
push
or
pop
dec
cmp
mov
daa
dec
add
out
outs
add
adc
xor
loop
fwait
mov
sub
xchg
popa
imul
ss
add
jo
stos
mov
dec
add
inc
inc
dec
adc
pop
clc
inc
inc
mul
adc
ret
movs
ja
adc
cs
add
jae
mov
out
loopne
sar
sub
push
adc
es
push
mov
or
or
cmp
mov
imul
rol
add
add
(bad)
rcl
loopne
inc
inc
inc
add
cmp
popa
xor
add
push
pop
popa
loopne
jno
cmp
stos
mov
inc
mov
jnp
(bad)
mov
xor
out
aam
xchg
cmp
or
jo
test
or
add
push
adc
scas
mov
xor
xchg
ins
push
mov
mov
cmps
fild
adc
iret
ins
lahf
and
sbb
fbld
xchg
dec
inc
daa
adc
fild
ins
pop
nop
loop
add
shr
add
xor
outs
xor
loope
bound
and
movs
fmul
fcmovnb
inc
jp
xor
and
xor
xor
data16
mov
pop
(bad)
mov
add
cwde
xchg
adc
xchg
fmul
pop
adc
add
adc
test
inc
xlat
arpl
daa
shl
popa
xor
pop
jecxz
inc
push
push
add
cmp
rcl
push
add
fs
push
or
cwde
xchg
ret
outs
shl
inc
(bad)
out
pop
xor
mov
outs
(bad)
cs
xchg
jbe
test
sbb
dec
cmp
sbb
(bad)
or
add
push
sub
add
dec
and
or
adc
pop
sub
or
xchg
je
adc
arpl
sbb
xchg
arpl
outs
bound
adc
test
mov
(bad)
sbb
mov
and
mov
pop
ss
popa
add
lods
inc
sub
sub
stos
jae
inc
lods
add
lahf
inc
dec
jne
mov
test
pop
jp
xor
test
mov
add
add
rcl
pop
ret
inc
sub
movs
arpl
mov
int
movs
and
fdiv
aaa
sub
outs
push
sub
dec
movs
pop
mov
mov
stos
sti
push
(bad)
lods
xchg
movs
fbld
push
inc
sub
xchg
add
aas
retf
scas
test
fnstsw
pop
lahf
iret
xchg
ret
pop
adc
data16
pop
push
xchg
cmp
jmp
add
pop
or
outs
lea
sbb
jnp
mov
movs
mov
xor
sub
inc
dec
mov
stos
mov
add
adc
daa
pop
adc
pusha
xchg
pop
cmp
push
sub
fld
(bad)
add
pusha
xor
(bad)
shr
test
jecxz
shl
arpl
add
mov
add
or
add
pop
add
sub
cmp
dec
iret
or
cmp
mov
in
sub
adc
lods
scas
(bad)
je
adc
(bad)
push
bound
dec
xchg
inc
inc
sub
add
test
xchg
sldt
cmp
iret
cmovbe
rcl
sbb
dec
ds
add
mov
jecxz
out
pop
xchg
loop
mov
aaa
jo
or
or
adc
sub
or
add
repz
addr16
pushf
xchg
sub
inc
sti
ja
je
arpl
je
ret
mov
sbb
lds
gs
ins
add
sbb
into
pop
adc
adc
(bad)
pop
test
push
sub
xchg
inc
add
mov
sti
push
mov
out
imul
into
xor
arpl
add
xor
loopne
addr16
mov
mov
mov
add
adc
add
mov
adc
mov
mov
into
inc
outs
daa
aaa
push
dec
outs
addr16
addr16
rcr
jmp
test
push
aaa
pop
jae
or
je
inc
dec
pop
daa
sub
(bad)
dec
or
scas
lahf
push
lea
sbb
sbb
outs
xor
(bad)
enterw
mov
xor
push
out
inc
adc
loopne
ret
push
test
inc
cmps
or
adc
or
mov
js
shl
sbb
xor
into
not
sbb
aas
or
retf
add
inc
daa
mov
clc
pop
jbe
retf
addr16
mov
sbb
adc
push
add
add
(bad)
jne
pop
inc
push
cs
cmp
pop
sub
mov
dec
push
push
xor
pop
push
mov
add
test
dec
punpckhwd
pusha
and
sti
adc
popa
xchg
adc
add
sar
wbinvd
shr
scas
bts
pop
inc
push
xor
adc
add
jecxz
add
jo
test
xchg
xor
imul
pusha
push
test
and
rol
rol
sbb
cdq
ror
or
aaa
jl
das
adc
dec
adc
cmp
adc
cs
mov
push
add
outs
aas
aaa
es
jbe
push
ret
push
mov
imul
or
or
shl
ror
or
sub
dec
sbb
mov
or
pop
clc
and
sbb
neg
mov
out
push
gs
add
pop
mov
xchg
shl
inc
shr
or
and
add
add
inc
push
and
and
sub
pop
daa
jb
outs
add
cmp
adc
sbb
mov
(bad)
or
sbb
outs
iret
mov
mov
cmps
jae
sub
stos
xlat
lock
popa
mov
and
rol
mov
shl
outs
fwait
(bad)
adc
retf
mov
xor
push
scas
sbb
inc
sbb
pop
dec
jmp
add
bound
adc
push
and
ds
cmp
ins
cmps
outs
mov
shr
sbb
lock
pop
push
add
push
(bad)
pop
bswap
pop
jae
or
mov
inc
aaa
inc
pop
inc
and
xor
push
add
and
add
addr16
ret
or
xlat
ins
add
add
mov
popf
cmp
(bad)
adc
add
push
inc
jae
sbb
cmps
outs
xor
test
bndldx
dec
sbb
pusha
mov
inc
sub
add
adc
xor
add
xor
fs
and
pop
bound
movs
(bad)
jle
outs
add
retf
jae
mov
sbb
or
cmp
mov
push
sahf
(bad)
adc
and
sbb
or
mov
lahf
jae
das
mov
imul
add
push
sbb
inc
xchg
ins
add
push
or
and
fisttp
mov
lods
or
and
scas
fwait
and
inc
ja
pop
inc
xchg
mov
jae
inc
out
arpl
pop
arpl
test
dec
pushf
push
sub
pop
jecxz
test
sub
stos
add
cdq
push
loope
inc
and
jae
sbb
or
test
push
add
xchg
xor
nop
sbb
je
pusha
mov
ret
imul
bound
mov
or
cs
xor
adc
add
movs
bound
sub
or
inc
aas
imul
nop
or
(bad)
aas
mov
jae
mov
(bad)
mov
das
xor
push
xor
sub
or
xor
rol
retf
push
inc
lea
inc
xor
and
xlat
shr
(bad)
or
inc
add
shr
and
push
xchg
and
pop
mov
xchg
or
jb
or
add
add
(bad)
sahf
sbb
add
inc
adc
pop
mov
daa
das
or
cmps
ds
pop
daa
icebp
inc
adc
add
jo
adc
xlat
and
mov
mul
ror
(bad)
jae
add
popa
push
retf
cmps
and
push
dec
xor
add
das
sub
add
add
enter
ss
out
inc
arpl
adc
rol
pop
ja
cwde
adc
add
call
sbb
push
add
mov
mov
and
in
inc
push
imul
pop
jb
out
add
sub
pop
inc
sbb
je
ja
arpl
cmps
or
lock
or
je
pop
push
fwait
and
adc
arpl
sub
xchg
sub
xchg
sbb
sbb
push
adc
push
fst
jecxz
mov
mov
push
adc
jbe
add
adc
or
pop
cmp
loopne
sbb
aaa
das
fwait
scas
stos
cmc
jnp
imul
pop
adc
push
add
dec
cmps
aas
outs
sbb
add
imul
pop
push
adc
push
dec
adc
add
stos
mov
sbb
mov
mov
stos
imul
xchg
ret
add
pusha
adc
test
and
sbb
outs
add
push
adc
jno
ret
xchg
rol
(bad)
bound
jo
test
inc
bound
ret
popa
adc
ss
sbb
sbb
pop
arpl
push
or
inc
lea
push
inc
imul
jae
pop
xlat
aad
arpl
cs
pop
push
or
xor
sub
pop
add
jb
and
(bad)
fwait
daa
push
mov
ins
(bad)
sbb
ins
add
jns
inc
sub
push
retf
arpl
or
jecxz
fmul
push
(bad)
rol
jb
push
call
addr16
inc
imul
out
arpl
jns
sbb
jecxz
lods
dec
mov
adc
fs
inc
or
sub
push
ror
(bad)
(bad)
shl
push
pop
pop
xor
pusha
mov
mov
jae
push
sbb
dec
mov
sbb
jmp
dec
ret
dec
add
adc
xlat
or
cs
add
mov
mov
sbb
jo
outs
add
lds
add
mov
inc
arpl
add
add
push
add
push
mov
mov
mov
mov
jo
xchg
loopne
or
sub
scas
arpl
mov
aas
push
outs
push
arpl
xchg
inc
pop
dec
jmp
and
outs
retf
xor
out
(bad)
sub
jnp
inc
data16
mov
xchg
xchg
shl
xchg
pop
out
ret
pop
pusha
fwait
or
jbe
ret
imul
inc
add
dec
and
stos
adc
daa
fimul
rcl
push
arpl
arpl
sbb
mov
mov
repz
add
push
sbb
adc
mov
mov
mov
gs
pusha
xor
jg
movs
inc
pop
jno
out
pop
jno
add
(bad)
mov
js
ins
ret
adc
pushf
shl
(bad)
ds
je
mov
push
outs
sub
or
jae
mov
ja
bound
xchg
ja
or
push
imul
dec
xor
jnp
xor
fdivr
jb
imul
add
push
pop
sub
sub
add
pop
sbb
push
add
add
adc
imul
add
popa
mov
or
in
mov
and
and
add
mov
fadd
add
outs
pop
add
mov
aaa
jnp
adc
or
inc
adc
dec
adc
jae
push
add
pop
add
cmp
stos
dec
pop
test
dec
retf
(bad)
xor
or
xor
fwait
sbb
push
popa
mov
push
fild
cs
add
mov
imul
adc
aam
inc
pop
fwait
jne
xchg
dec
pop
xchg
stos
pusha
adc
imul
mov
inc
arpl
popa
add
dec
push
inc
inc
mov
clc
psllq
jp
mov
cmps
mov
mov
fwait
sbb
push
jnp
or
daa
xor
ret
sbb
pusha
xor
inc
stos
test
mov
xlat
xor
addr16
mov
inc
pop
loopne
aaa
imul
rol
pop
jno
push
add
dec
push
inc
push
pop
sbb
dec
push
bound
cmp
add
push
gs
sub
arpl
cmps
xor
cmp
fisttp
dec
push
inc
sub
push
and
jg
dec
and
repz
or
jae
add
cmps
mov
scas
dec
inc
stos
pop
xchg
mov
xor
fwait
mov
add
inc
inc
bound
pusha
movs
jecxz
mov
cmps
or
push
xor
sub
xchg
or
rcr
xor
mov
sti
das
mov
push
iret
dec
ret
sbb
sti
es
pop
dec
mov
rcr
push
dec
fisttp
ret
adc
push
sbb
dec
aas
mov
pusha
xchg
pop
push
mov
inc
imul
sub
lahf
and
and
jg
cmp
add
dec
addr16
mov
xchg
mov
cmp
adc
push
daa
not
imul
inc
(bad)
mov
jnp
imul
add
stos
test
mov
push
pop
daa
out
add
adc
inc
push
add
pop
ja
sub
adc
repz
call
push
adc
jne
mov
mov
scas
fbstp
inc
add
and
and
inc
inc
and
(bad)
mov
jae
xchg
out
ret
pushf
jb
sub
(bad)
(bad)
stos
es
sub
aas
or
test
fimul
rdpmc
daa
imul
cmp
add
xchg
add
(bad)
lods
push
sbb
aaa
pusha
dec
shr
fwait
jo
xchg
lds
push
jae
imul
add
add
xchg
stos
or
and
rol
jecxz
arpl
adc
and
sub
and
clc
add
jnp
push
(bad)
dec
ret
adc
xor
fcmovne
xor
jae
push
nop
inc
pop
jnp
jnp
jae
mov
and
popa
aaa
adc
inc
jmp
imul
adc
or
clts
dec
lods
scas
dec
inc
jae
add
pusha
shl
add
add
ja
add
jne
and
fwait
or
add
fnstsw
ins
push
adc
push
sub
aaa
sbb
(bad)
cmc
xchg
push
push
mov
or
iret
and
push
adc
adc
test
rep
lock
pop
sub
adc
sbb
shr
cmp
xchg
or
and
ins
movs
dec
shl
xchg
add
push
and
or
inc
xorps
ret
xor
pop
push
push
jae
push
ins
aaa
sub
ror
push
cmp
fcmovbe
jnp
aaa
pop
jg
xchg
aad
add
sbb
pop
jae
daa
arpl
dec
pusha
push
mov
fbld
ja
xchg
es
push
(bad)
push
add
aam
jo
out
jnp
jge
xor
and
inc
and
jmp
push
fmul
dec
pop
lea
out
xor
xor
pop
inc
add
loop
jmp
or
adc
mov
and
loopne
cdq
sbb
mov
push
cmps
inc
jl
mov
js
movs
mov
daa
movs
mov
test
sub
das
add
retf
dec
mov
inc
push
retf
push
pop
pop
mov
push
sub
or
shl
push
out
add
js
ins
sbb
retf
rol
cmc
pop
inc
dec
pop
jae
sbb
xchg
inc
cmp
pop
push
jae
adc
jecxz
enter
push
xor
lds
push
(bad)
fmul
(bad)
and
mov
arpl
add
loope
fild
jb
dec
and
pop
outs
xor
adc
sbb
push
mov
sub
pop
lahf
pop
in
sbb
fs
fwait
add
imul
jle
sub
ret
pop
push
sbb
adc
pusha
stos
pop
dec
arpl
fs
data16
adc
add
(bad)
sub
inc
jo
xchg
mov
aaa
sbb
mov
xchg
scas
or
cmps
popa
jae
inc
shl
out
add
bound
sub
dec
xchg
xor
retf
or
add
dec
pushf
jmp
sbb
cmc
es
add
sbb
ret
addr16
push
inc
or
add
push
mov
push
add
addr16
jo
call
add
outs
add
test
jae
add
fld
mov
push
add
add
ja
test
jp
scas
add
scas
cmp
sbb
into
jb
sub
(bad)
ja
pop
stos
ins
push
inc
add
adc
pushf
xlat
pop
pop
imul
(bad)
retf
add
scas
mov
push
loopne
mov
ss
adc
add
pushf
sbb
push
iret
pop
add
mov
pop
add
inc
or
xchg
xchg
daa
sub
popa
pop
or
sub
js
lea
imul
push
lldt
mov
add
ffree
loop
jecxz
pop
mov
dec
mov
retf
ja
scas
and
inc
(bad)
les
adc
pop
adc
and
retf
pop
sar
imul
ret
add
jo
or
lods
adc
ins
add
fld
and
aas
mov
sti
movs
inc
lock
and
daa
das
sub
push
fcom
xor
inc
xor
test
test
aaa
lods
mov
ror
add
xor
add
in
mov
data16
(bad)
test
mov
or
jg
pop
mov
push
and
push
imul
pop
lahf
data16
test
pop
jecxz
mov
fs
or
mul
sub
adc
xlat
push
xchg
dec
push
lock
popa
add
lahf
add
or
inc
push
test
das
jae
push
push
add
pop
push
je
sub
sbb
test
imul
inc
sub
push
xor
mov
push
push
dec
rcl
adc
inc
and
lea
sub
pop
or
sbb
jnp
pop
test
dec
add
cmps
pop
gs
xor
nop
sub
add
mov
mov
ret
mov
test
pop
sub
push
(bad)
scas
push
(bad)
dec
sub
pop
inc
fld
jnp
cmps
pop
mov
and
inc
mov
aas
mov
ss
out
and
push
aaa
push
movs
fidiv
movd
xlat
sbb
les
ss
push
add
sub
pop
xor
out
sub
or
scas
push
pop
fs
pop
scas
dec
or
xor
dec
out
and
imul
nop
push
add
xlat
bound
loopne
ret
inc
pop
inc
pop
sti
fwait
sbb
push
add
pop
inc
add
lods
add
xchg
or
xor
inc
pop
arpl
(bad)
popa
lods
add
add
scas
adc
lds
iret
fild
push
daa
adc
ins
popa
adc
fmul
jmp
test
inc
stos
and
mov
sbb
xchg
sbb
dec
xchg
jo
and
mov
add
adc
pop
adc
outs
push
adc
cmps
nop
call
pop
or
cmc
sbb
push
daa
push
sub
retf
and
push
and
xchg
inc
inc
and
xchg
fistp
push
adc
push
dec
dec
cmp
xor
sbb
movs
lock
sub
and
jae
mov
xchg
jo
pop
push
pop
add
push
dec
push
test
cs
sub
or
inc
cmp
push
mov
daa
push
xor
add
cmp
inc
fist
add
add
shl
add
(bad)
add
jecxz
out
push
jmp
sub
xchg
ror
scas
cmp
xchg
cmp
or
add
mov
adc
mov
push
xor
cmp
or
pop
sbb
fadd
push
ja
push
rcr
pop
or
aas
add
xor
pop
inc
lock
add
xor
push
add
pop
xor
inc
jb
dec
push
jae
push
adc
sub
addr16
xlat
sbb
jbe
push
adc
lahf
mov
(bad)
xlat
push
rdtsc
mov
add
add
add
mov
ret
xor
push
ret
outs
add
adc
in
scas
and
dec
es
sbb
daa
push
aad
mov
sbb
outs
push
mov
lods
cdq
pop
jg
and
and
mov
pop
push
fmul
adc
imul
call
outs
sbb
xchg
or
jo
fidiv
or
pop
add
loope
mov
and
add
adc
aas
adc
push
adc
cmps
and
adc
sbb
aaa
aas
xlat
pop
sub
add
ret
pop
rol
sbb
aaa
fist
aas
adc
push
sbb
lahf
inc
add
jmp
mov
cmp
movaps
pop
jecxz
sub
daa
les
and
mov
xchg
inc
dec
shl
pop
push
adc
mov
cmp
adc
mul
adc
pop
ret
js
pop
test
inc
sbb
mov
jmp
arpl
popa
and
bound
sub
add
fdivr
push
imul
add
push
shl
daa
jb
inc
add
or
arpl
(bad)
sbb
and
and
xlat
pop
shr
lods
mov
jae
jecxz
jae
lods
dec
pop
iret
jnp
push
adc
push
mov
cmp
add
imul
xlat
inc
mov
or
jbe
ja
call
sti
and
aaa
add
or
dec
mov
xchg
mov
ret
lock
daa
xor
aam
sub
cmp
addr16
aaa
cmps
daa
push
mov
dec
mov
(bad)
and
xor
inc
add
and
adc
rol
test
add
js
jae
dec
or
mov
mov
push
ins
add
ret
cmps
add
xchg
add
ror
ret
pop
call
or
mov
cmp
popa
inc
adc
fcomi
pop
add
dec
inc
sub
stos
lods
add
mov
outs
add
dec
es
test
push
test
add
add
outs
sub
imul
add
fwait
cwde
mov
or
ud0
adc
add
pop
jo
addr16
and
test
adc
pusha
(bad)
ret
jg
adc
xor
stos
xchg
or
adc
dec
dec
(bad)
mov
add
loope
aam
out
adc
jbe
inc
mov
xchg
or
mov
mov
xchg
mov
push
add
mov
adc
xor
mov
cmp
push
and
jae
sbb
push
adc
mov
mov
and
pusha
xor
arpl
push
inc
dec
addr16
dec
mov
add
jmp
fwait
cmp
sub
cmp
les
pop
adc
push
mov
imul
fwait
ins
int
dec
jnp
add
pop
mov
add
das
dec
rcl
pop
pop
and
push
mov
push
add
push
add
add
add
outs
or
mov
(bad)
jnp
add
xor
rcl
je
xchg
pop
(bad)
jae
cli
jbe
and
retf
daa
add
(bad)
out
repz
call
popa
sub
xchg
push
pop
push
sahf
sbb
mov
in
sbb
add
push
add
and
icebp
and
mov
sbb
(bad)
popa
jmp
adc
xor
adc
pop
add
lds
stos
add
xor
push
or
shl
fbld
sub
adc
inc
repz
adc
daa
push
ins
test
adc
loopne
mov
xlat
cs
adc
in
dec
adc
or
push
mov
shr
addr16
add
hlt
data16
mov
pop
xchg
mov
add
add
pop
and
pop
dec
xchg
adc
daa
or
sbb
lods
jae
inc
imul
rol
dec
int
inc
and
push
and
add
adc
mov
aaa
sbb
push
mov
xchg
jae
and
inc
adc
push
sbb
adc
adc
pop
or
rol
sbb
jnp
(bad)
fs
aam
popa
xchg
out
mov
and
add
xchg
dec
pop
mov
add
dec
pop
and
or
adc
push
sbb
ja
cmp
xor
adc
pop
xchg
lods
clc
pop
add
pop
cmp
add
jbe
and
rol
and
xchg
add
pop
jnp
imul
add
adc
pop
je
xor
jnp
add
daa
idiv
add
retf
mov
xchg
dec
pop
mov
bound
pusha
mov
and
pop
call
(bad)
aas
lsl
or
add
jmp
fild
mov
pop
mov
jb
mov
jecxz
add
lds
mov
movs
jecxz
movs
or
fist
sub
scas
inc
mov
jecxz
adc
xor
or
jmp
pop
sub
movs
push
sub
lods
not
pop
sbb
inc
xlat
mov
ret
jae
gs
pop
mov
out
rcr
les
jecxz
packsswb
imul
adc
xor
sbb
(bad)
adc
or
mul
outs
inc
add
pop
mov
mov
adc
and
push
arpl
ret
and
cs
aaa
aam
and
mov
adc
test
or
stos
pop
mov
lock
mov
add
and
aas
iret
pop
adc
jbe
jne
push
(bad)
imul
fcom
sub
push
push
je
mov
jae
cmp
push
mov
xlat
(bad)
mov
ret
loopne
jbe
mov
in
sbb
sti
loopne
ret
(bad)
dec
add
sub
and
and
jmp
out
(bad)
adc
cdq
xchg
and
jg
aaa
push
das
sub
lods
push
lds
pop
sub
or
cmp
xor
arpl
lods
cmp
add
sub
lahf
inc
xor
mov
push
jo
scas
sub
dec
les
dec
jmp
mov
movs
inc
jmp
add
arpl
add
movs
popa
sti
ja
mov
cs
xchg
imul
mov
pop
add
adc
push
and
movs
sar
addr16
inc
aaa
xor
addr16
xchg
sbb
and
xchg
push
inc
pop
and
add
popf
and
mov
add
pop
inc
aaa
stos
jne
mov
mov
adc
bound
test
and
sub
imul
outs
jo
sbb
jecxz
or
test
adc
or
jnp
and
mov
retf
lahf
add
daa
push
fistp
pop
xchg
adc
pop
pop
data16
push
mov
sbb
inc
ret
out
xor
(bad)
add
add
mov
or
outs
mov
inc
and
sbb
push
xadd
fwait
mov
daa
inc
add
dec
adc
ror
add
jmp
mov
add
pop
mov
dec
add
sahf
xchg
adc
pop
cmps
fst
add
sub
cmp
or
or
imul
(bad)
int3
outs
pop
das
mov
pop
ja
sbb
jg
mov
xor
and
jp
and
push
adc
or
rol
xor
push
adc
mov
(bad)
jg
xor
cmp
aaa
mov
pop
push
jbe
fwait
cmp
jmp
outs
ja
ins
outs
outs
sar
popa
fs
push
push
arpl
popa
jae
adc
xlat
movs
jg
inc
outs
outs
jae
lods
add
outs
imul
mov
imul
idiv
mov
pop
adc
dec
ins
addr16
imul
jnp
push
push
jnp
push
push
dec
mov
push
std
test
aas
inc
imul
dec
gs
jo
jg
mov
je
loopne
push
imul
fs
std
leave
adc
push
dec
push
jns
stos
sbb
bnd
fistp
jb
fstp
mov
pusha
mov
test
sbb
cmps
adc
and
imul
and
cli
inc
inc
js
sti
popa
mov
xor
jb
arpl
sbb
ret
fisttp
inc
push
(bad)
adc
sbb
xchg
inc
ins
lods
sub
gs
xchg
dec
mov
mov
dec
inc
xor
xchg
data16
ins
adc
and
cmp
jmp
fisttp
shl
pop
add
scas
inc
push
ja
(bad)
lock
dec
movs
jae
push
push
and
inc
dec
fisubr
push
outs
outs
inc
(bad)
ret
ins
add
inc
and
je
cmp
push
ins
ins
and
ins
(bad)
mov
pop
push
js
mov
lahf
outs
arpl
push
fsub
ss
sti
into
outs
outs
adc
arpl
push
in
push
push
jo
jl
jae
sub
lods
ret
ins
ins
xchg
sbb
dec
jo
jo
jmp
sbb
sbb
xor
mov
out
dec
sqrtps
lds
xor
push
pop
sbb
es
bound
mov
daa
mov
mov
pop
sbb
cmps
jb
sub
imul
(bad)
jecxz
dec
push
add
pushf
sbb
fwait
or
or
push
mov
cmp
outs
dec
cld
ss
dec
xor
inc
repnz
sbb
gs
ss
int3
sub
pop
inc
sbb
or
xor
xor
or
cmp
and
mov
fs
loope
xchg
adc
sbb
mov
outs
iret
stos
jge
call
arpl
movs
sbb
imul
sub
sbb
mov
and
mov
and
ja
lods
scas
and
mov
es
adc
mov
jno
bound
push
xchg
xor
popa
cmps
dec
in
shl
sbb
xchg
pop
ret
das
push
jb
fs
jne
jns
imul
jo
jo
jbe
and
add
test
ins
pop
dec
mov
mov
xor
or
and
(bad)
sbb
popf
lods
or
test
inc
div
(bad)
inc
push
add
dec
jnp
inc
push
cmp
sar
fsubr
ins
lahf
pop
mov
ja
push
xor
sbb
pop
inc
aaa
lods
mov
inc
push
cld
popf
in
adc
ret
mov
jp
jne
inc
ins
outs
bound
add
adc
ins
push
inc
dec
sbb
ss
add
adc
movs
jbe
arpl
add
cmp
les
pusha
rcr
inc
int3
gs
pop
pop
xor
mov
fbstp
test
push
push
push
mov
(bad)
(bad)
(bad)
sbb
jns
popa
arpl
sub
sbb
jo
adc
lea
inc
mov
ret
mov
icebp
retf
pop
inc
push
inc
loope
gs
ss
jne
enter
lods
mov
shr
push
popa
inc
jmp
push
mov
sbb
mov
dec
xor
cmp
lds
out
push
push
(bad)
fidivr
out
out
adc
adc
clc
stos
(bad)
pop
outs
sbb
mov
push
inc
inc
sbb
(bad)
xchg
push
out
ins
xchg
stos
lds
or
xor
jb
or
outs
bound
push
mov
mov
jecxz
mov
lods
inc
sbb
daa
call
xor
ins
aas
mov
xchg
dec
push
inc
fs
inc
push
imul
fs
jne
bound
adc
push
jo
call
xlat
mov
mov
dec
sbb
inc
inc
test
dec
fs
lea
push
pop
out
xor
jo
mov
add
cdq
mov
mov
adc
sahf
push
loope
cmp
je
jae
sbb
mul
div
loopne
ds
push
push
push
dec
jecxz
pusha
xchg
neg
dec
shr
mov
xor
dec
or
jb
inc
imul
gs
dec
fs
push
aas
loopne
je
adc
popa
lea
test
imul
sbb
lea
push
lods
push
adc
js
int3
mov
test
sub
xor
and
stos
out
jb
mov
fwait
add
test
das
push
jno
xor
dec
(bad)
and
movs
dec
(bad)
pusha
sbb
fist
inc
arpl
mov
push
mov
in
mov
sbb
(bad)
add
test
adc
outs
in
xor
and
inc
imul
adc
repnz
stos
adc
daa
xor
lds
mov
sbb
retf
xor
push
dec
dec
sbb
adc
and
push
pop
inc
cmp
repnz
mov
push
lds
out
popa
dec
popa
pop
test
shr
addr16
stos
xor
aas
push
jne
scas
jo
stos
sub
xor
inc
pop
adc
inc
xchg
mov
daa
sbb
pop
pop
ins
fsubr
mov
inc
and
pop
test
pop
adc
inc
mov
shl
pusha
push
push
mov
hlt
ret
pop
aas
adc
test
sbb
inc
lock
ins
cld
xor
adc
xchg
and
and
loop
pop
add
jo
dec
dec
movs
sbb
fwait
push
cli
sbb
movs
sbb
pop
popa
add
pop
addr16
jo
add
(bad)
push
gs
sbb
mov
outs
je
adc
sub
popa
jp
mov
fidivr
imul
sbb
fadd
pushf
lds
mov
sbb
aam
inc
sbb
add
jns
dec
push
pop
lds
dec
outs
outs
or
xchg
add
jae
sub
add
mov
ins
adc
pop
loop
pop
and
inc
push
das
lods
sub
dec
push
dec
dec
lods
adc
cmp
or
or
xor
or
fld
xor
xor
(bad)
shl
sti
js
push
push
push
(bad)
pusha
stos
inc
pushf
and
dec
loop
sbb
add
cs
and
add
xor
mov
push
addr16
add
and
dec
sub
pusha
sub
imul
sub
lods
xor
jo
jbe
ja
inc
outs
je
mov
jne
xor
mov
xor
movs
or
mov
pop
mov
gs
add
push
popa
bound
loope
add
addr16
lods
add
adc
mov
sbb
jmp
and
ins
bound
cmp
mov
inc
call
add
imul
je
cmp
adc
sub
rcl
jmp
ret
pop
inc
es
js
jno
arpl
addr16
inc
test
push
ds
xor
push
jmp
stos
mov
sbb
jle
inc
sbb
dec
jb
or
dec
outs
sbb
int3
rcl
push
jmp
pop
in
add
ret
psubb
fwait
clts
or
mov
ss
loope
or
stos
in
imul
bnd
jne
add
jo
shl
push
nop
mov
xchg
inc
push
push
or
adc
sub
xor
add
in
sbb
mov
addr16
call
xor
out
das
push
popa
gs
or
sbb
adc
add
and
ret
adc
add
dec
mov
arpl
push
push
mov
das
and
sub
sub
sub
cmp
lea
cmp
in
mov
ins
mov
loopne
das
xor
xor
sub
fisub
ss
and
outs
fbstp
cli
push
ss
and
adc
dec
imul
add
dec
shl
pop
push
imul
cmp
dec
sbb
fbstp
ins
gs
xor
xchg
xor
xor
and
xchg
dec
cs
adc
adc
repz
add
sub
push
add
xchg
dec
xchg
pop
fbld
jae
adc
loopne
mov
(bad)
jo
adc
add
data16
adc
push
outs
jo
add
icebp
add
add
xlat
or
xor
pop
or
pop
add
pusha
xor
arpl
mov
sbb
xor
jp
dec
lahf
pop
or
push
push
jg
inc
jne
mov
adc
pop
add
add
add
adc
add
add
push
or
dec
sbb
pop
pop
mov
add
clc
cmps
or
je
inc
popa
mov
adc
and
push
push
fnsave
loop
adc
popa
or
sub
(bad)
retf
xor
or
out
adc
inc
cs
pop
in
push
push
enter
xchg
inc
dec
xchg
dec
inc
push
push
inc
push
or
pop
test
cmp
pop
push
mov
daa
ins
xor
add
or
dec
shr
pop
push
cli
and
mov
or
ja
shr
pop
push
jo
mov
arpl
repnz
or
sbb
or
lods
fcomp
pop
daa
ins
lahf
loop
sub
xlat
sbb
outs
das
pop
or
out
xor
or
sahf
(bad)
outs
pop
rcl
mov
sub
inc
ja
add
dec
daa
adc
fwait
xor
arpl
or
jecxz
lods
mov
push
push
xor
or
in
mov
adc
xor
push
pop
test
push
aas
xchg
or
or
adc
push
dec
inc
or
and
push
push
pop
js
sti
mov
add
xchg
jmp
je
pop
je
outs
cmps
cmps
or
add
bound
sti
and
cmp
gs
mov
push
dec
pop
cmp
ins
cs
inc
mov
pop
mov
stos
cmp
js
cmp
and
adc
and
dec
adc
sbb
xor
retf
dec
jp
push
jp
arpl
adc
(bad)
jp
arpl
and
and
cmp
pushw
and
sbb
cmp
in
fst
xchg
imul
jmp
mov
jbe
sub
mov
cmp
aam
push
(bad)
pop
aad
xor
xor
sub
cmp
and
mov
fiadd
cmp
inc
xlat
sbb
jbe
jo
das
das
ja
cs
cs
addr16
mov
sti
data16
sub
pusha
js
aam
or
and
push
mov
mov
cmps
je
and
pop
dec
dec
mov
push
ja
jmp
repnz
ins
ins
push
pop
xor
pop
mov
iret
cwde
jae
das
jae
or
push
sbb
mov
imul
mov
dec
inc
outs
xor
sbb
(bad)
scas
inc
cmp
aaa
inc
xor
aaa
xor
aaa
jp
mov
cmp
cmp
inc
inc
push
inc
xor
aaa
inc
xor
sysenter
inc
inc
xor
cmp
ss
xor
xor
sbb
inc
inc
cmp
xor
inc
inc
xor
mov
imul
cmp
cdq
xchg
push
jb
jae
jo
inc
add
arpl
pop
sub
push
or
cmp
inc
(bad)
jmp
cmp
cmp
cmp
ss
cmps
ss
xor
popaw
adc
xor
outs
adc
aaa
xor
and
jno
jecxz
sub
das
arpl
inc
popa
and
dec
dec
xchg
cmps
and
movs
(bad)
push
mov
(bad)
jmp
pop
pusha
push
in
(bad)
out
mov
nop
(bad)
(bad)
(bad)
call
or
add
xor
cdq
push
adc
push
jo
push
jmp
or
push
fld
mov
(bad)
(bad)
(bad)
call
pop
mov
imul
jmp
push
adc
push
data16
xor
sbb
dec
cs
mov
(bad)
(bad)
(bad)
(bad)
sti
out
imul
(bad)
cmp
fisub
mov
pop
sar
(bad)
jmp
pop
imul
ins
imul
sbb
outs
fadd
cmp
jns
rcr
push
not
(bad)
in
jae
stos
push
cmps
fst
push
int
cwde
xor
mov
rol
jb
(bad)
(bad)
(bad)
dec
fst
es
cmp
xor
cmps
push
cwde
std
jbe
sbb
dec
push
xor
cmp
xchg
jmp
and
mov
add
mov
es
sbb
cwde
retf
mov
sub
(bad)
(bad)
(bad)
inc
push
in
hlt
sbb
(bad)
stc
xor
cmp
rcr
xor
clc
push
mov
cmp
outs
(bad)
(bad)
jmp
or
lock
out
adc
and
and
ret
outs
sbb
(bad)
(bad)
jmp
mov
dec
mov
aam
imul
stc
mov
dec
mov
inc
imul
(bad)
inc
mov
and
jo
repz
mov
bound
dec
aam
repz
(bad)
(bad)
jmp
mov
lahf
dec
pop
push
lods
les
add
(bad)
cmps
adc
pop
(bad)
(bad)
(bad)
call
pop
retf
or
fst
leave
or
popa
ins
cli
test
inc
mov
(bad)
(bad)
jmp
mov
mov
popa
(bad)
cdq
lahf
push
pop
scas
add
out
jo
(bad)
(bad)
jmp
xlat
jp
cmc
dec
mov
sbb
sbb
xchg
push
ret
in
cdq
nop
(bad)
(bad)
push
push
sbb
jmp
retf
and
lods
daa
mov
jg
(bad)
mov
sbb
mov
mov
add
jl
mov
das
fwait
les
xchg
push
outs
jnp
(bad)
fist
xor
mov
repnz
pop
lahf
ss
or
in
sub
adc
jmp
inc
xor
cli
test
cmp
(bad)
xor
cmps
xor
pop
cmp
(bad)
(bad)
mov
add
fnstenv
xchg
mov
push
sahf
jp
push
stos
xchg
aam
inc
pop
(bad)
(bad)
(bad)
call
and
xchg
dec
xchg
loope
mov
fcom
mov
addr16
dec
inc
ror
(bad)
dec
pop
mov
jmp
jbe
pop
fs
dec
ret
jmp
and
sahf
enter
adc
test
jnp
xchg
mov
(bad)
int3
lods
mov
call
cld
ins
pop
mov
in
mov
push
push
mov
fsubr
jno
and
cli
(bad)
inc
dec
int
pop
ret
xchg
jmp
and
mov
inc
and
test
test
call
adc
jo
mov
stc
lods
dec
push
ficom
push
push
jl
cmp
xchg
aas
adc
push
push
imul
xchg
xchg
add
ja
hlt
shr
enter
inc
sub
(bad)
(bad)
(bad)
jmp
ins
mov
test
jmp
jecxz
cs
xchg
xor
in
lds
(bad)
call
mov
and
dec
test
rcr
cmp
rcl
jbe
(bad)
(bad)
push
gs
xor
out
retf
sahf
push
cli
loop
fsubr
mov
add
xchg
addr16
adc
cwde
movs
adc
mov
rcr
(bad)
push
sar
stc
push
jmp
sahf
sub
and
in
jb
(bad)
call
test
inc
push
sbb
mov
sbb
mov
adc
or
mov
sub
inc
inc
ins
loop
pushf
test
test
loop
aaa
cmp
(bad)
(bad)
(bad)
dec
mov
and
or
ins
bound
mov
mov
push
fmul
lods
mov
adc
inc
loope
test
sub
mov
lods
daa
addr16
push
xchg
lock
(bad)
call
inc
pop
loop
in
daa
rcl
int3
adc
xor
push
mov
fldcw
(bad)
(bad)
fucomip
and
sbb
pop
clc
mov
and
ror
mov
xchg
dec
(bad)
nop
dec
jmp
pop
or
dec
push
(bad)
(bad)
(bad)
fild
outs
aaa
xor
sub
inc
push
bound
(bad)
(bad)
call
bnd
fistp
test
mov
aaa
or
and
stos
int
(bad)
(bad)
(bad)
inc
std
dec
out
xchg
movs
outs
xchg
xor
shl
shl
cmp
outs
jno
adc
(bad)
(bad)
(bad)
fsub
cmp
jge
cdq
ja
jbe
jl
push
xor
inc
jg
int3
fisub
pushf
pop
(bad)
adc
mov
test
and
sub
mov
inc
xchg
(bad)
in
push
ins
jg
test
adc
scas
cli
jmp
inc
aam
stc
add
cs
ja
es
ficom
jecxz
in
cmp
add
cmovb
mov
jbe
cwde
push
ret
jo
(bad)
test
cld
jmp
push
and
addr16
inc
shl
cmps
or
push
jo
xchg
jae
and
xchg
sub
(bad)
call
scas
hlt
ror
inc
adc
jge
retf
stc
in
sub
cmp
inc
add
movs
jnp
out
test
(bad)
(bad)
dec
in
or
lods
(bad)
push
or
int
push
in
mov
and
push
add
mov
add
in
jl
or
inc
ins
ds
out
pop
adc
cs
bound
pop
mov
sar
cld
cwde
test
hlt
arpl
jnp
mov
clc
(bad)
cmp
hlt
lahf
xor
mov
dec
sub
(bad)
(bad)
(bad)
fild
push
fwait
imul
sub
data16
push
and
pop
sbb
mov
adc
test
jno
xor
mov
mov
cmp
inc
mov
rol
ds
(bad)
call
fisub
out
mov
and
sbb
cmp
gs
ja
sub
stos
(bad)
(bad)
call
cmp
xchg
mov
test
sub
push
js
and
ret
mov
push
int3
xchg
or
lods
jo
cmp
xchg
mov
ret
and
dec
(bad)
in
mov
shr
sub
sbb
inc
call
ja
ja
jg
and
cmp
inc
imul
xor
dec
imul
call
push
shl
and
pushf
retf
mov
mov
sub
fild
sbb
sbb
(bad)
(bad)
jmp
mov
js
data16
mov
das
scas
or
pop
inc
pushf
sub
add
aad
push
(bad)
(bad)
(bad)
call
(bad)
into
ja
(bad)
and
push
mov
test
push
stc
popf
inc
push
and
dec
push
xchg
mov
sub
gs
pop
cdq
out
icebp
jmp
(bad)
mov
dec
popa
inc
cmp
dec
or
xor
pushfw
adc
cmc
jnp
repnz
(bad)
sub
sub
retf
ror
lahf
int3
push
sub
shl
cmc
(bad)
call
mov
inc
mov
sub
lods
sbb
out
pop
into
cmp
lods
and
(bad)
(bad)
inc
sbb
mov
sti
lods
jb
popa
icebp
mov
jb
loopne
das
xchg
loope
push
dec
and
push
adc
mul
mov
cmps
and
ret
(bad)
(bad)
mov
fadd
and
and
nop
mov
cmp
(bad)
(bad)
(bad)
jg
mov
or
gs
lahf
or
cli
repnz
call
btc
(bad)
call
enter
xchg
jbe
or
sbb
in
lock
inc
mov
(bad)
(bad)
(bad)
push
or
dec
ret
mov
(bad)
xor
pop
popa
sub
or
pop
push
push
jge
(bad)
(bad)
(bad)
jmp
rcr
lds
jo
add
or
movs
xor
jno
push
or
hlt
(bad)
jmp
nop
sbb
in
cmp
jne
div
or
bound
(bad)
jle
and
shr
call
lods
sub
jg
sbb
call
(bad)
(bad)
(bad)
jmp
test
inc
clc
test
push
mov
inc
fdivr
push
pop
xchg
mov
int3
loope
fcomip
(bad)
(bad)
cmp
or
imul
stc
and
jae
dec
movs
shl
inc
retf
cli
(bad)
call
cdq
aam
pushf
jge
mov
mov
sbb
sub
cli
(bad)
inc
fadd
popf
mov
pop
adc
cmps
dec
aad
aaa
inc
cmc
test
cmps
enter
sub
push
ins
aaa
ror
adc
inc
adc
in
or
std
(bad)
push
fimul
out
aaa
dec
push
jnp
xchg
jb
mov
ror
fwait
inc
pop
lock
lock
or
ss
jle
mov
enter
(bad)
jmp
ja
ins
cmps
call
push
div
fistp
inc
cwde
mov
(bad)
call
mov
test
sub
lods
pop
imul
loope
lods
pusha
mov
test
(bad)
(bad)
(bad)
dec
ror
test
iret
pop
les
addr16
pop
xor
push
mov
(bad)
mov
retf
xchg
cmp
adc
and
jmp
inc
add
inc
(bad)
cmp
(bad)
cmp
gs
mov
mov
adc
fdivr
or
(bad)
jmp
mul
jns
inc
inc
mov
inc
out
stc
xchg
outs
mov
add
(bad)
jg
call
aas
mov
icebp
jo
loop
inc
sbb
mov
push
popa
je
dec
clc
outs
cli
call
mov
sub
and
push
sub
and
pop
mov
mov
daa
cmc
aad
sub
imul
(bad)
call
xor
ins
cmps
ss
pushf
cmp
lods
push
xchg
sub
push
out
dec
fs
pop
std
shl
js
mov
mov
push
lahf
in
in
pop
inc
push
ds
(bad)
(bad)
jmp
and
sub
pop
inc
repnz
or
test
xor
push
and
sub
(bad)
sar
(bad)
(bad)
jmp
mov
fisttp
rcr
movs
fmul
aas
in
pop
push
imul
dec
iret
push
jno
jecxz
mov
sub
jns
gs
or
pop
pop
in
in
(bad)
(bad)
jmp
sub
call
pop
mov
nop
inc
or
jmp
(bad)
(bad)
(bad)
(bad)
mov
sub
push
inc
push
aaa
fst
jle
fwait
sub
scas
arpl
xchg
leave
(bad)
(bad)
(bad)
call
ins
jae
mov
sbb
icebp
fistp
xchg
movs
retf
data16
(bad)
ins
xchg
xchg
ret
adc
mov
push
(bad)
or
pop
push
test
cmps
adc
int3
inc
dec
call
jg
xor
inc
mov
inc
jns
adc
sub
and
in
popf
in
shr
jg
lock
mov
cmp
cmp
push
(bad)
call
in
imul
pop
hlt
in
xor
dec
adc
and
push
les
mov
scas
dec
(bad)
(bad)
dec
push
pop
cmps
data16
mov
sti
push
mov
push
mov
sbb
cmc
cmps
adc
fsub
xchg
or
cdq
mov
hlt
rcl
jb
or
jmp
adc
push
ins
xchg
sub
mov
mov
dec
adc
push
popa
mov
not
dec
adc
bound
mov
mov
in
sbb
pusha
in
(bad)
push
or
loop
inc
sar
dec
int3
mov
daa
lds
(bad)
cld
aad
mov
mov
jp
(bad)
(bad)
jmp
pop
pop
pop
retf
and
or
icebp
bound
mov
add
cmps
cmp
jecxz
(bad)
(bad)
mov
leave
mov
sbb
adc
sub
cli
jecxz
mov
loopne
add
mov
cld
(bad)
call
int3
jae
or
aaa
push
sub
retf
xor
sub
xchg
cmps
dec
sub
and
fcomip
(bad)
call
fnsave
push
add
arpl
jge
in
shr
inc
or
call
pusha
push
sbb
in
dec
sbb
scas
test
ins
sub
inc
add
sbb
or
or
xchg
aam
or
or
shl
jns
call
dec
shl
jns
pop
retf
mov
add
cli
(bad)
(bad)
push
mov
cmps
pop
pop
push
test
int
in
loop
or
adc
push
(bad)
fs
(bad)
(bad)
jecxz
aam
dec
in
push
adc
pop
dec
cwde
dec
xchg
mov
push
ret
(bad)
mov
add
popf
xchg
push
int3
out
cmp
(bad)
push
fcomp
sub
or
xchg
arpl
add
js
mov
(bad)
sub
pop
rcl
mov
adc
(bad)
inc
test
jae
xchg
mov
xor
pusha
cmp
cmps
icebp
stos
or
inc
mov
in
mov
(bad)
cmp
into
xor
(bad)
repz
(bad)
jg
mov
jg
xor
adc
movs
sbb
mov
clc
sbb
sub
sbb
loopne
(bad)
(bad)
(bad)
push
xchg
pop
stos
loopne
add
shl
jns
test
push
shl
mov
xchg
data16
(bad)
jmp
cmp
jno
xchg
enter
push
pop
dec
enter
mov
push
xchg
inc
cmp
xor
(bad)
(bad)
call
js
dec
mov
cmp
push
add
inc
fnsave
cdq
dec
pop
xor
test
pop
jne
(bad)
(bad)
mov
xor
mov
arpl
popa
jbe
or
ins
jnp
lea
and
adc
inc
push
(bad)
jmp
inc
xor
mov
adc
mov
push
adc
mov
mov
add
(bad)
(bad)
(bad)
cld
cli
test
jb
mov
inc
xlat
jnp
(bad)
(bad)
jb
in
jnp
inc
inc
movs
adc
(bad)
(bad)
(bad)
dec
dec
push
or
das
and
(bad)
dec
push
xor
add
push
icebp
ret
fdivp
ret
test
mov
fucomp
jne
aaa
cld
inc
sub
or
cmp
in
stos
cmp
add
in
and
mov
ret
sub
mov
in
mov
mov
push
dec
clc
(bad)
(bad)
dec
nop
pop
dec
aad
fdiv
ins
push
jns
out
es
outs
mov
leave
add
aaa
loopne
lods
ds
and
ss
dec
push
stos
outs
(bad)
(bad)
(bad)
jmp
mov
add
cmp
out
loope
jo
push
pop
cmp
mov
(bad)
call
inc
cmps
or
xchg
nop
ret
and
mov
push
fstp
js
xchg
xor
inc
test
mov
jae
cwde
loopne
ret
push
mov
std
mov
pop
icebp
mov
mov
xor
cli
aaa
test
mov
aad
out
sahf
mov
(bad)
push
loope
ds
test
loope
data16
(bad)
call
call
les
scas
inc
push
mov
mov
popf
aas
std
sar
(bad)
(bad)
jg
inc
sub
cmps
xor
xor
or
inc
shr
xor
cmp
sahf
jne
daa
adc
sti
in
cdq
or
std
and
shl
ins
xchg
shl
lock
inc
cdq
daa
ss
(bad)
imul
inc
mov
je
in
ficom
xchg
lea
adc
pop
pop
push
int
(bad)
inc
mov
js
pop
jo
inc
inc
sub
pop
xchg
inc
fsubr
rep
add
(bad)
(bad)
call
mov
sbb
xor
outs
jmp
jle
(bad)
into
push
mov
jmp
xchg
mov
lods
ss
push
push
loop
xchg
sub
mov
xor
(bad)
(bad)
(bad)
cmp
sub
and
(bad)
lds
shl
sbb
inc
sbb
pushf
movs
ret
(bad)
call
or
cmps
and
jb
mov
or
(bad)
(bad)
(bad)
jg
cmp
into
fwait
push
into
xor
jo
add
pop
push
push
inc
pop
or
xor
(bad)
jmp
pushf
push
imul
cs
rcr
sub
fisttp
jecxz
lea
mov
cwde
inc
push
(bad)
(bad)
(bad)
jl
inc
(bad)
out
cmps
popf
(bad)
int
xchg
test
ss
stos
out
and
inc
(bad)
(bad)
jg
inc
push
pop
popf
push
sub
ja
cmp
xchg
cmps
sbb
push
and
(bad)
(bad)
call
ret
and
test
adc
and
sub
shl
(bad)
call
outs
gs
dec
out
mov
and
ss
or
fsubrp
ja
sbb
movs
lahf
fwait
(bad)
call
sub
fcomp
xor
fadd
inc
adc
aam
cmp
pop
inc
into
adc
pop
mov
or
out
lea
arpl
jmp
leave
sub
in
add
pushf
jecxz
push
mov
cld
and
add
xor
ret
ds
and
idiv
(bad)
cli
sub
retf
xchg
test
aaa
lods
popf
xchg
xchg
out
push
sbb
push
in
mov
sub
mov
xchg
hlt
inc
dec
pop
mov
push
(bad)
clc
shl
fisubr
xchg
icebp
sub
or
int
(bad)
(bad)
call
mov
ds
ja
fstp
enter
sti
inc
or
sub
(bad)
(bad)
fcomip
mov
arpl
scas
lods
retf
add
mov
hlt
or
xor
ins
jle
call
call
xchg
and
jg
push
(bad)
(bad)
inc
pop
xor
shl
cmp
pop
mov
lods
lock
mov
(bad)
(bad)
(bad)
dec
push
add
xchg
xchg
pop
bound
inc
xor
mov
xchg
fstp
dec
(bad)
(bad)
(bad)
inc
sbb
stc
mov
sub
rol
aaa
mov
and
xchg
es
fmul
(bad)
(bad)
(bad)
push
loopne
inc
cmp
mov
aaa
and
and
inc
adc
mov
rcr
pusha
cmp
(bad)
(bad)
(bad)
call
rol
adc
add
jb
inc
or
sub
sub
and
(bad)
(bad)
(bad)
mov
push
aad
and
adc
mov
mov
daa
mov
inc
cmp
jo
jmp
icebp
push
or
rcl
shl
ret
inc
push
(bad)
(bad)
(bad)
mov
ret
mov
shr
mov
popa
xchg
mov
cmps
xor
lahf
pushf
cdq
xchg
xor
dec
push
mov
sub
pop
and
pop
and
mov
sub
cmp
(bad)
(bad)
jmp
lods
outs
pop
hlt
mov
sub
ss
xor
call
pop
and
aad
leave
jmp
(bad)
(bad)
push
xchg
shr
push
push
sbb
int
cmp
xchg
push
stos
ror
add
cdq
adc
sub
pushf
out
push
inc
pop
daa
add
(bad)
(bad)
(bad)
xor
push
adc
lds
jne
adc
ret
mov
jne
(bad)
(bad)
fcomip
stos
out
pop
and
mov
cmovns
adc
push
jnp
call
sub
(bad)
(bad)
(bad)
dec
adc
stos
pop
push
outs
xchg
iretw
lock
jl
xchg
aam
add
or
pop
sub
lock
(bad)
out
push
cs
pop
mov
out
inc
loopne
add
pop
sar
(bad)
(bad)
dec
xchg
mov
loopne
addr16
mov
daa
xlat
and
jb
(bad)
(bad)
(bad)
out
mov
ins
push
cmp
and
or
sub
dec
aad
cmc
dec
out
dec
lock
inc
mov
push
adc
int
or
nop
clc
mov
mov
cmps
(bad)
(bad)
(bad)
dec
mov
out
inc
iret
lahf
lods
fiadd
inc
inc
xor
mov
or
loope
addr16
out
je
add
push
or
and
jle
lods
ret
out
sbb
xor
and
inc
add
or
dec
(bad)
push
and
cli
sub
imul
mov
sbb
add
sbb
sub
stos
xchg
in
fmul
sbb
imul
retf
and
adc
sub
imul
lods
shl
test
lods
pop
lahf
(bad)
mov
pop
cmc
(bad)
(bad)
jmp
fwait
aaa
lahf
in
in
in
jl
pop
inc
adc
xor
mov
(bad)
(bad)
cmp
in
or
mov
or
aas
xchg
sar
repnz
pop
in
pop
and
(bad)
(bad)
(bad)
inc
cmp
mov
and
das
and
adc
es
outs
stc
mov
add
mov
(bad)
jmp
enter
mov
icebp
and
add
out
pop
(bad)
div
fst
(bad)
(bad)
(bad)
jmp
stos
ret
jge
(bad)
adc
or
stc
int3
jo
ja
sbb
shr
in
ja
in
push
and
mov
and
call
out
ins
repz
clc
(bad)
(bad)
(bad)
fisttp
daa
inc
repnz
inc
or
add
adc
popf
mov
xor
push
(bad)
out
cli
das
loopne
sbb
jmp
test
lds
inc
shr
aaa
lock
inc
and
neg
xor
inc
popa
aad
jbe
dec
scas
(bad)
out
cdq
sahf
push
(bad)
loopne
call
dec
and
or
dec
sbb
push
push
dec
lea
lock
jnp
(bad)
dec
cmp
push
inc
in
xchg
retf
out
jg
sar
cmp
sbb
call
mov
pop
mov
adc
inc
or
xor
sub
(bad)
jl
(bad)
(bad)
push
mov
cld
jo
lods
adc
xor
mov
fisub
(bad)
(bad)
(bad)
push
add
adc
and
jmp
es
dec
mov
(bad)
(bad)
call
call
xchg
arpl
lahf
or
cmp
jmp
fsub
xor
dec
dec
cmp
push
rep
arpl
jle
adc
inc
cld
cdq
cmps
adc
lock
jmp
push
xchg
icebp
and
pop
push
add
sbb
jbe
loope
sbb
bound
dec
into
mov
repnz
cmp
pop
mov
mov
xchg
mov
inc
inc
js
nop
out
push
pop
add
jge
scas
clc
push
mov
fild
add
(bad)
and
xchg
sbb
clc
out
(bad)
cmp
call
mov
mov
mov
stos
rcr
aad
aad
xchg
(bad)
(bad)
(bad)
jmp
xlat
cmp
stos
cmc
push
fisubr
xor
shl
arpl
sahf
xchg
ins
call
mov
mov
ins
push
dec
pushf
jno
xchg
dec
jl
mov
dec
inc
or
or
ret
call
push
and
(bad)
(bad)
(bad)
dec
sbb
add
cmp
pop
lds
cmp
in
enter
sub
lahf
xchg
pop
test
lock
dec
or
jb
test
jl
mov
fs
jbe
(bad)
(bad)
call
cdq
std
jle
or
cmps
cmp
cmp
sub
sbb
pop
test
(bad)
(bad)
call
test
outs
jmp
sbb
ret
sub
adc
xchg
mov
(bad)
aam
sub
xchg
scas
(bad)
(bad)
push
mov
inc
and
dec
dec
(bad)
pop
or
push
push
mov
loope
add
mov
inc
jne
fs
sbb
nop
ja
mov
mov
(bad)
(bad)
inc
xor
push
aas
mov
mov
pushf
jle
fisubr
in
popf
adc
xor
dec
(bad)
cli
xchg
(bad)
cmp
fcmovnu
je
aas
sub
sbb
and
or
(bad)
jmp
in
pop
fld
pushf
call
outs
loop
jb
jae
jb
or
(bad)
inc
push
lahf
or
cmp
inc
lock
push
push
aaa
adc
imul
scas
push
add
dec
push
dec
aas
repnz
cld
jge
ret
imul
jae
jmp
data16
fnstsw
pop
mov
test
mov
out
adc
imul
sbb
es
mov
fadd
xor
jl
mov
(bad)
(bad)
inc
and
and
jno
xchg
ins
mov
lock
xor
clc
jmp
and
mov
icebp
pushf
xchg
or
dec
or
mov
in
push
ret
mov
out
(bad)
call
test
(bad)
das
xlat
mov
cmp
aam
lock
xchg
(bad)
(bad)
inc
scas
cmp
mov
imul
cwde
(bad)
(bad)
je
test
mov
add
and
jmp
add
pop
movs
stc
ret
cdq
lds
dec
and
lods
ins
repnz
scas
test
dec
push
outs
and
dec
pop
adc
mov
lahf
sbb
mov
sti
loope
adc
sti
inc
(bad)
test
or
lds
add
(bad)
call
sbb
add
popf
inc
mov
int
dec
test
jo
loopne
cmp
add
cmp
mov
mov
inc
mov
je
(bad)
(bad)
call
ins
popa
clc
xor
fwait
jnp
jl
ds
and
adc
cmp
(bad)
push
cld
jg
and
or
cwde
jp
call
shl
jle
jge
(bad)
(bad)
(bad)
call
jl
(bad)
imul
mov
xchg
fisttp
mov
or
pusha
sbb
sub
and
(bad)
(bad)
dec
popa
pop
and
or
jno
or
lods
dec
jb
pusha
sbb
sub
mov
(bad)
dec
inc
jns
gs
sub
popf
mov
(bad)
xlat
cmp
sar
(bad)
(bad)
ds
mov
mov
push
loopne
ror
into
popa
imul
mov
or
inc
mov
call
dec
sub
adc
pop
inc
int3
mov
and
push
fld
cmp
xchg
push
cwde
int
inc
pop
hlt
cmc
shr
mov
imul
push
dec
fsubr
pop
lock
(bad)
(bad)
(bad)
dec
retf
jo
mov
xor
inc
xor
lods
mov
mov
imul
out
mov
jl
sti
xchg
cmp
fnsave
dec
out
adc
cdq
sub
inc
aaa
imul
dec
inc
pop
ret
in
sub
mov
out
jg
mov
push
mov
xchg
rcl
popa
fiadd
add
xchg
cwde
das
ss
sbb
scas
clc
jmp
arpl
cmps
in
imul
xchg
ss
push
sti
(bad)
aad
pop
inc
movs
and
jmp
pop
push
(bad)
ins
dec
adc
ds
ins
dec
test
inc
add
bound
and
and
mov
repnz
hlt
mov
stc
jp
sub
movs
add
(bad)
(bad)
jmp
mov
xchg
push
sub
frstor
inc
test
xor
fxam
test
sub
jg
(bad)
call
cmp
adc
stos
cld
sub
dec
mov
cmc
ds
push
pop
mov
(bad)
jmp
aaa
jge
lods
lods
jb
jno
push
popa
bound
cmps
push
hlt
sbb
(bad)
call
(bad)
mov
outs
(bad)
and
and
fsub
xor
mov
cwde
inc
push
nop
pop
mov
(bad)
(bad)
(bad)
push
retf
sbb
jmp
nop
sbb
or
xchg
pop
stos
mov
pop
dec
int
cmc
(bad)
call
ins
xchg
cmp
outs
gs
mov
mov
(bad)
(bad)
jmp
jmp
fnstsw
jmp
sar
pushf
dec
data16
test
int3
pushf
jne
cmp
xchg
(bad)
mov
inc
mov
(bad)
cdq
mov
cmp
push
int3
popf
adc
mov
push
out
(bad)
push
(bad)
out
xchg
movs
lahf
dec
mov
je
out
push
leave
pusha
(bad)
dec
test
(bad)
(bad)
(bad)
(bad)
call
xchg
or
ret
cmp
mov
cmp
xchg
jecxz
nop
xchg
addr16
out
xchg
(bad)
(bad)
jmp
xor
mov
clc
adc
fs
sub
popa
les
pop
xor
call
ins
loope
cs
push
pushf
sbb
sub
inc
push
test
enter
pop
jo
lahf
cs
cmc
scas
clc
(bad)
in
lea
dec
cs
cmp
mov
pmuludq
lock
sub
add
or
jecxz
inc
sti
int3
push
aad
sar
(bad)
fstp
mov
outs
pop
add
mov
cmps
cmp
pop
(bad)
call
inc
pop
mov
jb
and
xor
or
cmp
mov
dec
fnstcw
jne
(bad)
(bad)
(bad)
cmp
lods
aam
loop
push
mov
dec
(bad)
shr
jo
add
push
sbb
(bad)
(bad)
jg
xor
and
ins
xchg
add
xchg
sahf
pcmpgtb
cmp
dec
mov
or
(bad)
(bad)
call
inc
xchg
mov
aad
retf
out
pop
xchg
ja
mov
fwait
cs
stos
push
jle
sbb
(bad)
jg
inc
les
loope
scas
push
fidivr
inc
jp
outs
lahf
and
xlat
jmp
cmp
shl
sub
xchg
shr
sbb
or
sbb
js
rol
outs
call
call
movs
int
in
adc
jae
sahf
fcomp
sbb
mov
movs
leave
lahf
push
(bad)
(bad)
(bad)
jmp
(bad)
fnstcw
fistp
and
je
sub
cmp
(bad)
(bad)
(bad)
(bad)
jns
add
jecxz
aas
sahf
shl
mov
pop
mov
mov
xor
sub
push
push
into
fldenv
(bad)
push
data16
sub
inc
push
jmp
outs
dec
add
hlt
adc
add
pop
jp
popa
pop
ja
(bad)
(bad)
inc
sub
push
xor
push
dec
mov
mov
sub
mov
lods
xchg
push
not
pop
adc
jne
inc
adc
dec
push
xor
lahf
inc
bound
adc
(bad)
(bad)
call
cdq
fwait
sub
inc
inc
dec
pop
rcl
adc
xchg
push
mov
mov
(bad)
fisub
adc
add
jecxz
dec
sbb
repz
push
xchg
js
jno
cmps
jb
mov
and
shl
inc
mov
(bad)
(bad)
(bad)
dec
adc
sbb
test
(bad)
dec
clc
and
loop
ins
pushf
mov
xor
fdivr
scas
clc
dec
das
mov
pop
hlt
push
data16
cmp
cmps
imul
stc
jge
(bad)
(bad)
inc
repz
jp
iret
outs
mov
and
int3
inc
les
or
call
push
iret
or
pop
push
jmp
and
sub
jle
ret
inc
stos
or
imul
dec
call
jmp
fmulp
xor
popa
int3
lock
pushf
test
and
jb
(bad)
(bad)
(bad)
dec
push
adc
mov
mov
sbb
ins
mov
(bad)
cmp
mov
jg
scas
cli
(bad)
push
sub
mov
xchg
fbld
cli
das
stos
fwait
addr16
push
enter
(bad)
(bad)
inc
or
xchg
push
rol
movs
adc
(bad)
clc
aam
xlat
rol
jmp
or
(bad)
jmp
addr16
scas
or
mov
test
shl
mov
mov
cld
cwde
sbb
lods
(bad)
(bad)
(bad)
jmp
or
into
and
push
retf
inc
sahf
test
fcomp
(bad)
(bad)
(bad)
call
or
inc
push
add
xor
xor
mov
dec
fcmovb
mov
push
lea
mov
push
enter
mov
cld
xor
cmp
outs
dec
inc
and
(bad)
mov
in
fs
cmp
mov
out
xchg
adc
pop
mov
(bad)
(bad)
jmp
loopne
imul
cwde
in
push
and
lea
adc
pop
xchg
pop
in
(bad)
fsubr
ja
jecxz
inc
pop
mov
sbb
and
(bad)
(bad)
inc
jb
xchg
inc
cld
sub
and
sbb
loopne
out
lods
and
jl
rcl
push
adc
(bad)
(bad)
inc
mov
push
inc
xor
dec
push
xchg
xor
and
(bad)
or
ds
mov
loop
je
cmps
neg
(bad)
lock
hlt
or
cmp
mov
(bad)
std
outs
xchg
dec
sub
es
addr16
push
addr16
push
push
push
sub
fsub
inc
xor
xchg
mov
mov
jmp
popf
ret
or
pop
cmp
and
and
idiv
(bad)
(bad)
call
pushf
in
mov
leave
push
cmp
pop
pop
dec
inc
ret
mov
mov
xor
xchg
(bad)
(bad)
(bad)
call
mov
pop
out
in
or
in
loopne
js
fdivp
adc
xchg
mov
push
stc
push
jno
(bad)
(bad)
(bad)
(bad)
xchg
jno
mov
cmp
retf
or
sti
add
jl
call
push
(bad)
pop
inc
jno
(bad)
fcomip
jmp
push
mov
lods
nop
and
fwait
xor
mov
sub
inc
xor
pushf
cdq
sbb
mov
call
mov
mov
(bad)
(bad)
out
xchg
xor
std
mov
mov
inc
adc
jmp
xor
mov
fistp
repz
les
sub
sbb
(bad)
call
stos
fsubr
daa
jl
fnstcw
push
jne
(bad)
into
mov
ret
mov
jmp
(bad)
or
jo
mov
push
fucom
inc
repnz
sub
push
stos
fcom
(bad)
(bad)
push
mov
mov
push
ins
pop
pop
push
or
shl
fbstp
push
push
jo
push
xor
js
cdq
mov
sbb
(bad)
push
mov
rcr
lods
mov
pop
mov
pop
push
cli
inc
stos
mov
(bad)
(bad)
jmp
jge
cmp
gs
adc
test
jo
fdivr
fld
out
mov
call
(bad)
jmp
and
or
out
ins
out
add
(bad)
adc
(bad)
(bad)
inc
sbb
jp
xor
sahf
in
mov
lock
nop
cld
add
into
fdivr
mov
xchg
adc
sbb
sub
sbb
adc
(bad)
(bad)
(bad)
cmp
xchg
fldenv
xor
fs
stc
loopne
jg
scas
push
mov
stos
(bad)
inc
loope
out
adc
xlat
cmp
sub
mov
and
lahf
add
mov
nop
add
sub
aam
fisttp
in
mov
or
xor
lods
or
ja
test
ja
(bad)
(bad)
jmp
shl
(bad)
mov
fimul
out
xchg
jg
(bad)
out
xor
adc
cwde
icebp
sar
outs
and
inc
mov
add
ss
and
xor
pushf
ficom
and
jmp
aam
fdiv
cmps
out
inc
fdiv
sbb
cli
clc
jg
dec
dec
add
call
jb
jns
jns
(bad)
push
(bad)
(bad)
jmp
push
xor
nop
adc
in
loope
dec
test
outs
test
mov
jg
(bad)
cmp
mov
aaa
push
ja
pushf
pushf
push
iret
push
pop
daa
call
(bad)
inc
popa
adc
or
mov
cmp
push
nop
test
mov
cmp
dec
lock
push
dec
test
mov
icebp
scas
cli
call
clc
adc
add
mov
fild
fbstp
xchg
inc
stos
or
inc
inc
and
idiv
pop
mov
mov
out
mov
scas
pop
mov
fsub
xor
cs
jo
cmps
pop
into
and
push
dec
inc
and
pop
adc
(bad)
jg
mov
sbb
jne
cmps
sti
in
adc
shr
push
fiadd
adc
lea
push
in
inc
mov
adc
scas
mov
mov
(bad)
mov
inc
sub
arpl
add
xchg
push
inc
inc
sub
sahf
mov
xor
push
lods
mov
in
mov
(bad)
sti
pop
stos
jmp
in
sbb
aad
pop
jns
adc
cwde
loop
jecxz
add
mov
adc
sub
sar
sub
jge
add
shl
add
dec
mov
mov
pusha
ror
and
push
ja
mov
js
mov
stos
and
mov
(bad)
stos
stos
(bad)
daa
and
add
and
shl
je
mov
in
xchg
adc
mov
add
xchg
push
push
push
fwait
call
outs
mov
(bad)
(bad)
fcomip
rcr
mov
aaa
ret
xchg
jns
stos
dec
ret
xchg
popa
clc
(bad)
(bad)
fistp
adc
scas
test
stos
sub
mov
(bad)
(bad)
inc
inc
jae
adc
adc
jg
mov
shl
sub
mov
xlat
mov
dec
lea
sbb
jmp
adc
aaa
je
enter
lock
(bad)
sbb
mov
dec
push
call
jecxz
fidivr
and
mov
xchg
(bad)
mov
add
adc
imul
sar
cwde
xchg
cli
xchg
xchg
pop
or
(bad)
hlt
mov
(bad)
(bad)
call
push
aad
xor
movs
rcl
inc
sti
loope
pop
add
aaa
mov
add
add
mov
loopne
xchg
jo
push
repz
movd
(bad)
add
jno
pop
sbb
(bad)
(bad)
call
cwde
mov
or
ss
ror
xlat
or
pusha
call
into
adc
dec
imul
xor
(bad)
(bad)
dec
adc
dec
or
test
dec
cmp
mov
and
cli
hlt
jmp
nop
nop
loopne
push
sbb
adc
sub
mov
(bad)
fistp
loop
push
push
pop
in
xor
dec
dec
dec
sbb
cli
cwde
xchg
ret
(bad)
int
(bad)
(bad)
(bad)
(bad)
cmp
jp
inc
in
call
xchg
out
std
gs
(bad)
loopne
adc
jb
push
push
fbstp
mov
ds
pop
cmp
mov
hlt
xchg
jbe
push
push
outs
test
(bad)
(bad)
mov
mov
sbb
or
cmp
sbb
xchg
(bad)
(bad)
jmp
test
xor
in
xchg
xchg
fs
ins
add
idiv
idiv
(bad)
hlt
xor
(bad)
(bad)
push
movs
addr16
pushf
lahf
pushf
ja
movs
adc
mov
aad
(bad)
lods
test
int3
cli
(bad)
(bad)
(bad)
jmp
stc
cmps
sahf
jge
call
div
cmps
(bad)
in
aam
jmp
retf
xor
mov
xchg
cvtps2pi
(bad)
jmp
div
retf
lea
bndldx
fdivr
retf
cmp
outs
pop
data16
xor
cmp
call
inc
and
pop
and
rol
add
jmp
xlat
loope
jbe
pop
mov
cwde
cwde
js
call
jns
int3
sub
jecxz
mov
adc
pop
(bad)
in
or
ds
fsub
mov
(bad)
(bad)
(bad)
push
sbb
rcr
out
(bad)
sub
daa
pop
fst
inc
stc
mov
dec
pop
cs
mov
outs
fldcw
rcr
(bad)
(bad)
(bad)
call
pop
jl
sub
jg
cwde
loopne
gs
out
fcomp
fcomp
pop
pop
push
inc
push
cmps
xchg
add
js
pop
cmp
pop
add
mov
push
push
leave
add
push
mov
cmp
mov
mov
jb
cmp
cdq
mov
mov
pusha
push
push
(bad)
(bad)
(bad)
jmp
mov
daa
out
cmp
fbstp
push
adc
loopne
(bad)
in
movs
into
mov
push
cli
sub
rcl
push
test
cmp
(bad)
dec
pop
test
out
scas
cld
loop
arpl
lods
pop
stos
stc
push
mov
(bad)
dec
cmp
push
inc
or
sbb
icebp
fistp
push
sbb
mov
cli
(bad)
inc
or
into
xor
ret
popa
sar
(bad)
(bad)
jg
shl
push
adc
cld
cld
aas
mov
jbe
ficom
ror
jmp
pop
push
in
(bad)
(bad)
(bad)
dec
sti
sti
mov
stos
add
push
pusha
js
scas
xchg
mov
dec
out
pop
ja
(bad)
inc
push
sub
lods
imul
pusha
inc
popa
pop
jnp
aas
mov
add
(bad)
push
jmp
sti
(bad)
sti
inc
xchg
add
addr16
rcl
jns
popf
(bad)
(bad)
(bad)
fild
scas
and
cdq
jg
(bad)
and
or
fisttp
cmps
push
aaa
ss
(bad)
(bad)
jg
inc
sub
or
retf
int
test
stc
mov
push
push
push
pop
ds
(bad)
(bad)
(bad)
inc
call
(bad)
aam
push
inc
mov
test
mov
out
aam
cmps
xor
(bad)
(bad)
(bad)
(bad)
jle
push
int
or
aas
or
addr16
lods
scas
imul
pop
mov
mov
clc
(bad)
inc
ret
fild
mov
xchg
xor
adc
ds
aas
outs
leave
(bad)
(bad)
(bad)
call
out
loopne
jl
xchg
xor
nop
(bad)
call
daa
adc
fstp
loop
cmp
aam
icebp
outs
call
fwait
call
cmp
jmp
jo
add
mov
push
inc
cmp
(bad)
les
(bad)
(bad)
jns
pop
fistp
mov
dec
inc
int
xchg
stc
dec
retf
sub
in
repz
(bad)
sbb
mov
std
fs
jg
sbb
cmp
rcr
push
cmp
push
xchg
or
pop
dec
mul
mov
pop
test
push
push
mov
adc
rdseed
dec
mov
aad
push
pop
jo
movs
sub
retf
pop
data16
(bad)
jg
jle
adc
mov
inc
sbb
repz
std
(bad)
sub
mov
iret
clc
jmp
(bad)
jmp
dec
dec
push
ins
inc
inc
pop
dec
arpl
scas
cmp
mov
bound
(bad)
fiadd
imul
dec
jle
shl
jle
std
(bad)
mov
clc
into
in
bound
nop
in
imul
sub
sub
(bad)
aas
inc
add
jg
sub
sbb
ret
(bad)
mov
adc
mov
xchg
and
sbb
std
(bad)
jg
xor
xor
cmp
mov
ds
jl
push
adc
idiv
or
jge
fldenv
jno
pop
sbb
call
(bad)
push
in
and
mov
fstp
add
(bad)
mov
inc
sbb
(bad)
jmp
in
je
add
jp
in
repz
push
aam
xchg
cli
call
inc
mov
ss
pop
ret
fcmovu
imul
jg
mov
mov
outs
push
(bad)
(bad)
out
cli
(bad)
sbb
sahf
jle
mov
rcl
jmp
sbb
sbb
mov
dec
cmp
(bad)
(bad)
cmp
and
inc
loop
or
inc
jae
in
push
pop
(bad)
nop
pop
mov
jp
cmp
xor
ret
test
inc
push
fsubr
sbb
div
les
ja
dec
push
fimul
ror
mov
imul
popf
lock
cmovns
pop
lahf
ja
jo
scas
or
(bad)
(bad)
aas
mov
cmp
popf
aaa
fidiv
aam
cmps
xor
loop
loopne
pop
sar
(bad)
(bad)
(bad)
push
call
mov
into
sbb
test
jg
into
int
xchg
xor
sub
(bad)
(bad)
(bad)
(bad)
call
jg
sub
cli
cmps
or
xor
movs
dec
cmp
or
(bad)
inc
dec
jae
mov
ja
jg
add
adc
dec
lock
call
nop
lea
mov
test
cld
(bad)
(bad)
push
and
inc
mov
lock
imul
shl
push
mov
jge
push
inc
and
mov
mov
leave
pop
icebp
jg
mov
sbb
(bad)
mov
pop
pop
push
and
xlat
pop
jle
sub
(bad)
(bad)
jmp
mov
push
xchg
in
xor
inc
outs
jno
cli
aas
xchg
das
cli
xor
test
inc
scas
cmps
mov
adc
xchg
clc
leave
jg
test
mov
fsubrp
ret
iret
adc
(bad)
(bad)
(bad)
push
stos
mov
ss
fcomp
fcmovnu
rcl
pop
dec
outs
fwait
mov
dec
dec
xchg
cld
call
(bad)
sbb
ss
xchg
or
inc
and
dec
mov
ficomp
(bad)
(bad)
jg
mov
xor
cwde
clc
jecxz
(bad)
aad
(bad)
sahf
xor
xchg
dec
daa
test
retf
scas
ds
cld
mov
mov
push
popa
cdq
xlat
std
repnz
idiv
cld
push
mov
mov
sar
push
pop
ins
jne
ss
sbb
(bad)
jg
jmp
fist
icebp
push
lea
sub
leave
mov
jmp
cmps
popf
xor
mov
mov
fdivr
fucom
and
xlat
aaa
in
adc
mov
cld
and
push
fst
sub
test
(bad)
call
mov
pusha
(bad)
loope
arpl
in
or
pop
mov
xchg
or
adc
sbb
mov
jg
mov
stos
mov
inc
lahf
jg
jl
mov
push
das
stc
adc
pop
ja
jg
sbb
jmp
out
mov
fsub
(bad)
(bad)
out
mov
je
shr
iret
mov
jne
movs
icebp
lods
(bad)
(bad)
(bad)
push
dec
and
mov
(bad)
jge
dec
adc
sub
push
es
jnp
dec
add
push
sahf
dec
sbb
dec
push
jge
neg
fs
pop
movs
movs
aam
jmp
push
push
in
loop
push
adc
push
mov
loopne
sub
cmp
(bad)
mov
or
fisubr
fadd
cmp
retf
sub
(bad)
call
mov
sahf
inc
sbb
cdq
adc
outs
cmps
iret
push
mov
scas
adc
(bad)
(bad)
jmp
rcl
std
in
jno
mov
and
inc
addr16
aaa
mov
jg
mov
fld
ins
adc
xor
push
(bad)
(bad)
jmp
jl
sti
outs
mov
pop
pop
add
jno
cmc
xor
xchg
(bad)
call
ror
jl
les
stc
pop
jnp
out
jle
das
scas
and
jmp
sbb
jo
lahf
jl
jo
sti
imul
push
cli
(bad)
and
(bad)
jmp
cmp
imul
mov
xchg
test
xor
dec
xchg
push
bound
call
jg
mov
idiv
pop
rep
mov
aas
mov
push
icebp
xchg
jmp
fs
pop
std
stos
add
sbb
mov
lock
icebp
mov
jmp
push
push
hlt
sbb
mov
retf
stc
(bad)
(bad)
jmp
and
sbb
cmp
sub
push
fisttp
push
shr
out
xchg
clc
(bad)
(bad)
mov
pop
mov
neg
pop
jo
sbb
arpl
mov
cld
jmp
dec
and
mov
dec
jbe
imul
adc
cld
mov
iret
push
and
loope
push
std
jmp
or
mov
jns
add
xchg
push
cli
in
in
enter
mov
push
inc
jg
(bad)
fadd
inc
out
stc
sbb
nop
(bad)
(bad)
mov
dec
mov
xchg
popf
pop
mov
stc
imul
fisttp
aaa
xor
loopne
cs
(bad)
(bad)
call
test
inc
pop
xlat
jle
imul
aad
or
popf
cmp
fadd
mov
sti
les
pop
xor
pop
jg
lods
dec
stc
mov
xor
dec
popf
jo
js
adc
(bad)
(bad)
jmp
xor
lods
and
test
shr
pop
jmp
push
dec
jae
push
icebp
dec
push
(bad)
loopne
outs
cli
pop
out
lock
out
mov
jl
fxch
jl
call
call
shl
(bad)
fbstp
xchg
xchg
bound
call
cld
pop
out
jg
inc
arpl
iret
ins
pop
mov
js
mov
add
push
ja
cmp
jbe
and
jmp
pop
unpckhps
dec
cmps
add
loop
inc
ins
pop
cmps
cli
test
(bad)
(bad)
(bad)
call
into
or
push
push
fdivr
push
dec
sbb
inc
dec
sub
mov
sub
stc
int
(bad)
(bad)
call
push
cmps
cmps
movs
out
out
mov
inc
(bad)
pushf
je
call
(bad)
(bad)
sbb
push
outs
pop
(bad)
(bad)
(bad)
push
cs
imul
rol
clc
jno
popf
ret
push
test
icebp
or
pop
popf
pusha
inc
in
jmp
fdivr
mov
sbb
inc
pop
push
scas
xchg
sub
(bad)
(bad)
push
fadd
pop
or
out
pop
mov
retf
jecxz
mov
cli
(bad)
jg
gs
inc
sar
jnp
(bad)
into
pop
jecxz
sahf
inc
cwde
(bad)
mov
mov
(bad)
(bad)
jmp
xor
add
mov
fdivr
iret
or
xchg
daa
xor
sbb
cwde
mov
mov
jecxz
std
jmp
gs
(bad)
(bad)
cmp
jbe
push
cmps
fs
lock
jmp
push
cmp
clc
push
shr
ins
dec
push
xchg
and
ror
jg
push
call
push
js
inc
in
(bad)
(bad)
retf
xor
jb
pop
clc
(bad)
(bad)
dec
mov
cdq
ins
xchg
and
mov
sub
out
mov
(bad)
je
mov
loopne
pop
sbb
sbb
xor
pop
vshufps
mov
(bad)
mov
pusha
in
cmps
mov
lods
rcl
push
(bad)
loopne
loope
sar
xor
dec
sbb
mov
sbb
nop
clc
add
push
pop
pop
jne
lds
add
js
in
(bad)
(bad)
(bad)
aas
mov
sub
mov
leave
pop
jnp
daa
(bad)
out
stc
(bad)
rcr
(bad)
xchg
out
fcom
aam
sub
jnp
push
in
popf
jp
push
in
(bad)
push
test
aam
addr16
push
xor
stos
dec
scas
outs
fcmovbe
mov
retf
mov
jg
fnsave
dec
lods
pop
jge
or
jmp
lods
dec
fidivr
in
inc
xchg
pop
push
jp
fmul
(bad)
shl
outs
rol
iret
pop
or
add
popa
adc
xchg
jl
pop
mov
push
or
aaa
mov
sti
fistp
icebp
push
clc
push
(bad)
mov
imul
add
aad
retf
(bad)
cld
js
ins
in
aam
dec
ds
movs
mov
pop
cmc
iret
pop
es
(bad)
(bad)
out
cli
and
sub
gs
call
clc
cwde
mov
ret
(bad)
(bad)
(bad)
jmp
rcr
pop
repnz
fisttp
movs
xor
imul
sbb
out
leave
mov
fst
mov
and
hlt
iret
push
xchg
inc
movs
pop
mov
xchg
das
mov
lahf
dec
dec
sbb
(bad)
(bad)
(bad)
jns
pop
inc
stc
repnz
mov
sbb
sti
leave
iret
push
sub
mov
mov
ror
push
cld
(bad)
(bad)
mov
mov
or
ja
mov
mov
(bad)
(bad)
(bad)
push
mov
push
hlt
pop
jbe
or
jmp
push
xor
gs
or
mov
lock
push
pop
sbb
(bad)
clc
mov
mov
push
(bad)
aas
pop
inc
sti
xor
aaa
cld
cdq
mov
push
jl
sar
movs
mov
(bad)
fadd
(bad)
fisttp
mov
out
cli
jb
ret
call
outs
pop
mov
jbe
pop
cli
mov
(bad)
push
out
sbb
push
jge
fsubrp
ror
iret
iret
int
jno
cmps
xchg
(bad)
sbb
jmp
(bad)
(bad)
loop
jmp
fidiv
sub
loopne
scas
add
aam
jb
mov
pop
icebp
(bad)
jns
inc
in
sub
cld
cmps
imul
addr16
mov
(bad)
(bad)
out
mov
xchg
cwde
aad
(bad)
movntq
stc
call
sub
(bad)
mov
(bad)
inc
ja
add
mov
xor
push
jmp
pusha
mov
test
fistp
hlt
ret
adc
cmp
lock
xor
outs
daa
(bad)
(bad)
push
and
pushf
out
fucomp
or
jno
repz
daa
(bad)
(bad)
(bad)
jg
cli
cwde
jbe
push
push
lods
pop
repz
out
add
and
xor
lods
(bad)
(bad)
jg
push
dec
sahf
scas
mov
out
xchg
aaa
mov
lea
jmp
(bad)
(bad)
jmp
pop
ja
nop
mov
sub
test
xor
mov
xor
jnp
xchg
stc
inc
adc
xor
xchg
(bad)
mov
xor
pop
ds
xlat
scas
mov
mov
push
imul
inc
xchg
call
fmulp
xchg
cmps
dec
scas
jg
mov
sti
jmp
fisub
ins
leave
(bad)
cld
(bad)
mov
add
aaa
in
out
cmp
jo
pop
test
push
adc
or
not
call
sbb
or
adc
inc
xlat
xchg
sub
lods
cld
jg
mov
fcom
(bad)
jg
inc
and
rcr
pop
cwde
xchg
xchg
in
mov
mov
jns
cs
mov
mov
ins
dec
dec
jbe
shl
daa
mov
adc
shr
mov
(bad)
jmp
mov
jle
or
lods
loope
loope
inc
(bad)
sbb
(bad)
inc
jp
nop
fcompp
jge
mov
(bad)
(bad)
push
pop
mov
jg
(bad)
in
jmp
add
jp
inc
xchg
lahf
fnsave
in
mov
int3
call
mov
leave
std
push
mov
icebp
push
pop
jns
(bad)
pop
dec
cmp
test
(bad)
(bad)
jmp
sbb
fdivp
call
aaa
idiv
inc
iret
dec
scas
jmp
or
(bad)
jg
push
jno
pushf
jl
cdq
loope
daa
adc
dec
push
sub
adc
(bad)
(bad)
dec
adc
push
in
mov
mov
outs
int3
cwde
and
(bad)
call
imul
pop
adc
int3
aas
xor
mov
adc
inc
pop
cmp
jmp
movs
movs
test
push
mov
paddusb
test
shr
add
test
stos
cli
sti
repz
das
cli
(bad)
(bad)
out
fnstcw
mov
ja
jge
cmp
out
cmp
mov
std
jmp
fs
fild
(bad)
sti
shr
fcomi
out
scas
push
sbb
push
(bad)
(bad)
call
fnsave
in
clc
jae
jge
mov
test
push
les
(bad)
push
xchg
jno
xlat
ficomp
or
lahf
aad
lea
call
or
(bad)
(bad)
fst
sti
fstp
dec
fnstenv
hlt
cwde
loope
jl
sbb
(bad)
(bad)
(bad)
mov
adc
retf
jmp
or
inc
xchg
(bad)
es
jmp
mov
test
or
in
jle
jmp
mov
jp
in
jecxz
loop
sub
fs
add
dec
scas
jbe
pop
stc
mov
mov
ins
pop
sahf
push
shl
aaa
push
les
mov
in
cmp
stos
test
push
sbb
ss
lea
jbe
jmp
ja
mov
push
jl
xlat
xchg
add
test
test
dec
call
push
sub
test
and
test
mov
add
mov
shl
(bad)
dec
psrlw
mov
mov
repnz
and
push
mov
adc
neg
xor
mov
pop
cmp
push
mov
stos
(bad)
(bad)
push
jge
mov
dec
imul
jbe
lahf
fbstp
adc
xchg
xor
stos
cmps
mov
pop
xchg
push
mov
push
int
int
mov
push
sti
pop
cmp
in
mov
aaa
std
sbb
push
cdq
xchg
icebp
(bad)
mov
xchg
or
add
loopne
cmps
call
or
(bad)
icebp
jl
xor
adc
rcr
aas
std
jg
cmp
mov
and
jg
or
dec
inc
add
(bad)
mov
rol
dec
inc
inc
loop
iret
std
ins
repz
sub
mov
jmp
xchg
test
cmp
call
push
(bad)
(bad)
(bad)
call
in
sar
jno
leave
div
sbb
repnz
dec
xor
pop
or
mov
addr16
repnz
fisttp
push
aaa
sub
outs
jg
mov
inc
or
adc
push
mov
mov
push
mov
dec
cmp
into
add
outs
out
mov
pop
mov
dec
or
mov
(bad)
(bad)
call
shr
jle
retf
inc
pop
adc
scas
cwde
jns
jne
repnz
adc
in
fidivr
dec
(bad)
jmp
push
imul
fstp
fistp
xchg
rcr
fnstsw
jmp
sar
mov
inc
mov
cmp
in
jae
pop
jl
inc
jno
test
(bad)
fbld
mov
inc
pushf
ds
test
cmp
(bad)
mov
inc
xchg
inc
fs
ret
jmp
inc
ret
je
adc
jg
(bad)
(bad)
(bad)
lahf
fstp
jp
or
movs
mov
mov
push
add
add
pusha
ret
into
nop
mov
dec
leave
repnz
rol
sub
fist
lods
fcmovu
pop
mov
lods
int3
hlt
in
xor
push
xchg
push
aam
and
inc
jge
ja
(bad)
call
mul
xor
movs
out
fstp
add
xchg
push
cmp
les
jmp
(bad)
std
jmp
retf
cli
fisttp
or
aam
xchg
test
push
shl
mov
leave
daa
xor
jbe
scas
cli
(bad)
call
fucom
dec
sub
xchg
sahf
cmp
(bad)
push
cmp
mov
inc
fisub
call
(bad)
call
outs
jg
xchg
xchg
xor
outs
sbb
sahf
fdivr
inc
(bad)
jmp
outs
iret
dec
dec
call
dec
pop
pop
pop
fisub
inc
mov
mov
cli
pop
fwait
rcl
pusha
call
dec
fwait
stos
shl
pop
shl
push
ret
sub
mov
cli
jg
pop
push
or
jo
mov
mov
adc
cli
inc
test
jnp
mov
(bad)
adc
bound
jg
ja
cmp
daa
mov
enter
jb
out
add
(bad)
(bad)
(bad)
in
mov
out
pop
mov
out
popf
(bad)
call
xchg
scas
mov
out
dec
das
in
popf
mov
iret
rcl
(bad)
hlt
pop
jg
mov
rcl
outs
sbb
jl
sbb
adc
mov
(bad)
adc
(bad)
int
mov
das
out
xor
addr16
leave
add
add
stc
(bad)
jmp
cmc
out
jnp
aas
pusha
repnz
pop
inc
out
mov
pop
jns
push
out
(bad)
jmp
out
adc
jge
mov
(bad)
loopne
inc
dec
ins
pusha
inc
jno
call
jns
out
imul
adc
add
jns
pop
(bad)
lock
adc
inc
call
pop
mov
adc
jmp
(bad)
jmp
in
(bad)
sbb
mov
enter
jp
retf
cwde
xor
push
(bad)
(bad)
inc
push
das
pop
mov
test
scas
neg
test
and
and
out
add
sbb
xor
call
sub
gs
push
(bad)
clc
ret
push
lea
jno
ja
(bad)
scas
pop
push
push
and
(bad)
(bad)
(bad)
jmp
sbb
sub
or
xor
test
enter
mov
fmulp
mov
pop
jno
add
xor
pop
cld
(bad)
cmp
xor
loop
(bad)
out
pop
or
jae
scas
dec
loop
push
retf
adc
fadd
test
ja
sbb
xchg
scas
add
sbb
es
sub
lahf
push
add
(bad)
push
sub
cmp
enter
push
jl
mov
cmp
adc
hlt
mov
adc
pop
icebp
(bad)
fbstp
cmp
call
or
mov
mov
mov
scas
inc
mov
adc
les
adc
clc
push
cmps
dec
jmp
xor
fwait
retf
(bad)
pop
popf
or
pop
in
jg
das
xor
out
and
addr16
mov
add
or
add
mov
(bad)
mov
je
je
xchg
jge
fcom
jle
pop
mov
mov
movs
xchg
js
mov
sbb
loopne
mov
(bad)
lods
pusha
vmovapd
daa
inc
popa
retf
jmp
dec
cmps
xlat
mov
jne
fsub
mov
xchg
pop
fisub
retf
jo
(bad)
inc
xor
mov
push
mov
inc
dec
dec
retf
pop
std
in
adc
add
xchg
fnstcw
int3
(bad)
push
cs
outs
sbb
jmp
mov
inc
adc
lea
fs
inc
dec
sub
adc
test
jg
in
cmp
inc
fisttp
push
test
add
fnstcw
inc
loop
push
lahf
mov
sub
jmp
adc
pop
push
je
xlat
xor
xor
ficom
jp
movs
inc
movs
imul
ss
and
jno
cmp
icebp
pop
imul
cmp
je
les
jp
mov
push
xlat
mov
inc
pop
sbb
mov
cld
shl
or
jg
imul
or
push
jg
jg
xchg
js
aam
sti
inc
je
cld
lods
imul
(bad)
dec
pop
xchg
dec
add
das
(bad)
xchg
idiv
das
xchg
jne
push
and
(bad)
mov
pop
push
popa
sti
mov
mov
(bad)
jp
ins
cwde
pop
add
push
(bad)
mov
mov
sub
push
test
or
mov
jmp
gs
in
mov
push
pusha
les
test
inc
nop
mov
mov
cmp
and
ss
outs
add
std
adc
fiadd
lods
int
fs
pop
mov
inc
fidivr
sub
or
das
fdiv
jne
sbb
add
adc
pop
add
ficomp
pop
test
repz
in
mov
aad
sub
out
shl
cmp
xor
xchg
retf
sbb
test
nop
std
xchg
xchg
sbb
mov
pushf
sahf
outs
je
or
lea
cld
movs
das
sbb
(bad)
(bad)
inc
fadd
sub
sub
inc
push
push
sub
push
mov
pop
cld
xchg
cmp
sub
push
mov
adc
loopne
(bad)
(bad)
in
jo
xor
mov
out
jb
push
add
sub
mov
xchg
ror
mov
clc
push
push
sub
icebp
aaa
cld
ja
dec
ret
and
push
mov
sti
sar
mov
pop
pop
retf
lea
mov
push
movs
add
or
cmc
mov
mov
inc
pushf
fnstsw
xor
pop
cwde
push
xor
loope
xchg
je
xchg
dec
rcr
and
or
loope
cmps
or
call
xor
push
sbb
pop
dec
cmp
or
sub
or
xchg
mov
inc
pop
icebp
fwait
jle
aad
mov
ja
push
jb
stos
pop
sar
ror
int
es
jmp
clc
leave
mov
lock
lea
or
ds
mov
hlt
sub
stos
cmp
call
les
arpl
(bad)
jg
(bad)
mov
rcl
aaa
fstp
mov
ror
jge
bound
out
and
cmp
(bad)
mov
adc
pop
rol
sbb
jg
loopne
push
xor
mov
hlt
inc
les
push
test
push
ins
fcom
ret
test
and
cli
push
loopne
mov
mov
xchg
dec
cli
add
pop
sub
jge
xor
xor
call
xchg
clc
dec
jb
pop
sahf
dec
stos
cmc
mov
xchg
xchg
aaa
add
test
call
or
cld
mov
sbb
(bad)
(bad)
call
outs
fwait
rcr
imul
dec
ss
xor
loopne
add
inc
mov
push
pop
stc
mov
nop
push
das
push
pop
add
test
test
loope
and
(bad)
repz
fwait
call
rcr
mov
hlt
call
ja
or
ret
xchg
mov
fstp
call
sub
(bad)
xor
inc
add
aad
mov
loop
xchg
inc
push
and
dec
mov
outs
mov
rol
(bad)
(bad)
mov
retf
mov
mov
pop
xor
xor
xchg
pop
mov
sub
(bad)
push
sub
mov
cli
dec
fldcw
(bad)
pop
dec
push
or
mov
dec
push
(bad)
dec
(bad)
(bad)
call
jle
lods
pop
vshufpd
daa
dec
mov
dec
call
jmp
hlt
imul
mov
adc
xor
shl
xor
in
sub
inc
rol
sub
xor
push
(bad)
(bad)
call
std
into
cmp
jmp
out
ror
cmp
mov
push
pop
xor
sbb
add
pop
push
pop
cmp
sahf
(bad)
adc
cmp
int3
mov
sar
out
adc
add
ret
enter
paddsb
or
jne
test
sti
(bad)
add
cld
jp
clc
sbb
mov
mov
push
(bad)
(bad)
(bad)
fucomip
jmp
pop
(bad)
sub
div
stos
scas
or
(bad)
cld
(bad)
fbstp
hlt
(bad)
push
js
test
push
lds
cld
jae
(bad)
adc
sbb
clc
stos
cmps
sub
xor
test
scas
lock
inc
das
test
inc
daa
mov
xor
dec
(bad)
push
out
pop
cmp
mov
das
cli
mov
cs
jae
or
or
in
xchg
test
(bad)
call
int
out
mov
pop
das
sub
lods
stos
scas
retf
mov
dec
sub
sub
(bad)
push
call
sbb
push
cmps
cmp
ret
mov
xchg
adc
cmps
sub
(bad)
(bad)
(bad)
(bad)
fbstp
(bad)
fstp
out
mov
mov
out
jnp
fbstp
sti
aaa
mov
or
stc
fild
adc
cmp
outs
inc
adc
mov
pop
icebp
out
mov
and
push
(bad)
lods
jecxz
pop
cs
(bad)
(bad)
cld
hlt
int3
loopne
dec
adc
or
jb
xor
clc
lock
push
pandn
jl
inc
ret
(bad)
cmp
repnz
aam
(bad)
(bad)
fbstp
mov
push
pop
clc
retf
mov
(bad)
dec
cmps
inc
push
push
les
mov
packuswb
fidiv
jge
(bad)
(bad)
jmp
pop
cmp
pop
jge
sub
cli
xchg
and
ret
or
sar
mov
aaa
(bad)
in
(bad)
jmp
das
and
jp
mov
pop
jp
repz
mov
pop
into
iret
out
pop
jmp
pop
add
and
or
mov
das
ret
mov
mov
int3
fisub
(bad)
inc
xor
js
retf
adc
mov
out
leave
push
cld
mov
adc
cmp
mul
ret
loop
pop
xor
jl
ret
jmp
mov
call
pop
pop
xor
inc
xchg
inc
xor
rcl
sar
(bad)
std
sbb
popf
cmp
push
mov
aaa
sub
aaa
pop
movups
sar
add
ins
xchg
jno
xchg
icebp
loope
fcomip
push
jg
into
inc
icebp
in
sahf
movs
adc
(bad)
jecxz
(bad)
lahf
je
mov
push
(bad)
push
xchg
fistp
mov
call
call
pop
mov
dec
push
sub
sbb
push
xlat
fld
mov
xor
mov
fisttp
inc
push
mov
clc
add
in
adc
dec
jae
cmps
pop
std
call
into
sti
ret
ror
test
jne
cmc
in
clc
std
(bad)
(bad)
call
int3
outs
fnsave
lods
scas
or
sub
sbb
fmul
scas
call
call
push
(bad)
mov
jp
pop
lods
ficomp
mov
sar
imul
jecxz
xlat
(bad)
(bad)
jmp
mov
int3
mov
leave
inc
std
inc
xlat
push
ret
hlt
mov
(bad)
jno
cmp
loopne
jo
(bad)
clc
inc
push
push
xchg
jmp
add
xor
shl
mov
dec
call
loopne
mov
inc
sahf
rcl
ja
stos
mov
(bad)
call
cmp
xor
mov
mov
movs
mov
inc
(bad)
mov
inc
push
push
and
imul
stos
das
fwait
jne
mov
pop
(bad)
pop
cmp
sub
pop
gs
and
scas
int3
xchg
adc
mov
scas
loopne
cmp
sbb
sbb
pop
cmp
or
inc
mov
sbb
push
xchg
jp
(bad)
and
stos
icebp
or
(bad)
out
push
xchg
fisub
sbb
(bad)
mov
outs
jo
jge
inc
mov
cli
popf
or
ret
(bad)
(bad)
jmp
pop
and
les
jle
push
aaa
inc
dec
mov
out
out
jle
push
scas
idiv
mov
pop
pop
sbb
(bad)
(bad)
fild
jne
dec
jno
in
push
(bad)
(bad)
neg
outs
jae
test
pop
clc
(bad)
jmp
mov
(bad)
cwde
cmp
lock
retf
(bad)
aad
add
mov
out
pop
enter
out
mov
aad
pop
mov
adc
call
aaa
cdq
sub
mov
clc
xor
jns
jmp
hlt
(bad)
mov
aad
push
pop
inc
xor
add
inc
mov
push
out
fisub
arpl
aaa
fisttp
addr16
aas
(bad)
push
xchg
pusha
(bad)
or
xchg
rol
mov
jmp
es
or
and
xor
push
inc
mov
stos
(bad)
fsub
or
mov
hlt
(bad)
(bad)
(bad)
jmp
scas
ins
push
fisub
ja
dec
fstp
ss
and
mov
sbb
(bad)
(bad)
call
mov
je
cld
sub
(bad)
(bad)
sbb
inc
mov
mov
inc
dec
hlt
inc
or
(bad)
fcomip
test
sub
cs
and
mov
or
or
sbb
pop
aaa
icebp
mov
pushf
xlat
hlt
dec
inc
xor
push
jns
rol
clc
in
mov
xchg
pop
test
add
cmp
adc
add
(bad)
(bad)
jmp
enter
loope
ret
or
scas
cmp
out
xchg
outs
(bad)
jmp
leave
aam
scas
shl
jl
pop
loopne
call
pop
test
cmp
cmp
cmp
clc
(bad)
mov
cdq
(bad)
cmp
and
push
sbb
sbb
xchg
or
(bad)
pop
pop
popf
jo
not
(bad)
fld
(bad)
cmp
ret
ror
cmp
xchg
xchg
adc
ins
mov
int
clc
or
push
pop
imul
fadd
sbb
addr16
das
clc
(bad)
inc
push
call
dec
call
call
(bad)
lock
and
test
xchg
das
data16
add
(bad)
(bad)
jmp
pop
repz
xchg
and
mov
and
xor
(bad)
call
fwait
pusha
inc
lahf
addr16
pop
or
in
loope
cli
js
pop
mov
outs
pushf
clc
rcl
jmp
sbb
add
xor
mov
adc
call
dec
pop
pop
je
dec
enter
cmp
adc
mov
jle
test
mov
(bad)
jg
enter
pop
ficom
fcmove
push
mov
je
cmc
fistp
push
imul
lods
fdivr
mov
pushf
stc
movs
retf
xchg
pop
mov
lea
and
or
stos
(bad)
(bad)
jge
xchg
gs
dec
dec
clc
push
mov
push
push
cs
mov
push
jg
hlt
out
sub
jg
lods
rcl
add
cld
test
sbb
pop
dec
dec
test
fcomip
in
xor
lds
shr
scas
mov
(bad)
(bad)
call
sti
ret
jge
fsubr
adc
neg
dec
test
repz
cld
or
icebp
cwde
adc
add
inc
add
dec
(bad)
cmc
xor
arpl
sub
sub
mov
pop
sub
jp
jo
jmp
clc
and
pop
xor
sti
in
jae
jl
and
mov
fwait
ds
inc
fcomip
xor
sbb
fdivp
mov
mov
pop
push
dec
mov
(bad)
call
cld
(bad)
(bad)
call
pop
mov
fidivr
add
jns
fimul
push
(bad)
(bad)
(bad)
(bad)
sti
xchg
mov
push
(bad)
mov
sbb
xchg
xchg
pop
mov
iret
aad
(bad)
jo
xor
(bad)
loopne
inc
bound
shl
mov
jbe
inc
pop
jmp
fsqrt
dec
ficom
add
ret
jle
pop
(bad)
xor
dec
pop
std
jmp
mov
inc
add
ret
adc
push
sar
push
inc
adc
mov
mov
fdivr
sahf
jp
pop
pop
push
or
(bad)
(bad)
inc
mov
cmps
ror
and
and
inc
mov
(bad)
out
outs
fwait
(bad)
(bad)
jg
shl
into
mov
out
and
sbb
sbb
mov
cmp
push
dec
sahf
cmp
push
and
mov
call
daa
or
mov
mov
mov
stos
fst
jle
add
das
out
shl
jmp
and
(bad)
mov
stos
popf
lods
(bad)
mov
push
call
(bad)
fistp
aaa
sub
pop
mov
sbb
mov
add
sub
cmps
sub
inc
xchg
jne
adc
mov
cs
jp
inc
test
cmp
sub
push
fisub
enter
mov
jno
call
aas
mov
mov
popa
adc
jl
aas
into
push
mov
test
mov
loopne
push
test
mov
mov
mov
sahf
jge
test
or
fisttp
dec
pop
xor
or
aam
aas
test
dec
imul
mov
or
sbb
fdivr
scas
loop
out
adc
jo
adc
push
(bad)
(bad)
aas
xchg
mov
inc
cmp
add
sub
fdivr
cmps
cmp
sub
push
jle
add
pop
mov
(bad)
(bad)
jns
outs
pop
mov
mov
push
mov
add
and
sbb
jmp
inc
or
inc
pop
hlt
pop
and
stos
sahf
jmp
or
and
inc
cld
stos
inc
movs
mov
outs
mov
cli
xor
jg
lock
in
(bad)
jo
into
sub
pop
dec
jmp
cli
pop
add
add
int3
repz
cmp
stc
sbb
test
sbb
mov
inc
or
aam
mov
lahf
inc
sub
outs
sbb
mov
test
jns
fwait
pusha
xchg
int
ins
sar
imul
push
xchg
push
inc
push
mov
xor
(bad)
dec
adc
jno
push
imul
ds
lods
mov
or
std
scas
lods
push
inc
cmp
and
add
hlt
lock
xchg
imul
adc
mov
mov
pop
pop
xchg
mov
test
push
(bad)
push
ds
xor
call
div
jmp
push
scas
fmul
gs
ror
push
jbe
xlat
sbb
(bad)
repnz
ss
test
mov
aaa
test
arpl
inc
stos
fscale
jmp
xor
add
jle
mov
xchg
imul
mov
pushf
mov
dec
test
push
sub
mov
push
sbb
and
(bad)
push
push
mov
or
jmp
mov
mov
add
dec
out
cmp
dec
ret
std
push
ja
fstp
leave
scas
pop
mov
mov
pop
pop
cmp
pop
add
fldenv
mov
imul
adc
mov
push
push
mov
addr16
loope
(bad)
aaa
pop
loopne
dec
mov
fild
or
xor
mov
add
push
cmp
(bad)
call
nop
dec
pop
cwde
lds
rol
xlat
bound
inc
adc
mov
dec
fidivr
inc
pop
cmps
dec
push
mov
push
cli
fld
push
add
jmp
mov
sti
inc
or
cmps
sub
pop
dec
inc
inc
pop
push
(bad)
push
inc
push
mov
mov
int3
fistp
adc
inc
cmp
and
mov
das
icebp
or
mov
(bad)
call
shr
dec
and
and
mov
inc
dec
or
add
pop
push
add
inc
mov
in
push
clc
jg
jle
fsubrp
xchg
or
ins
pop
push
(bad)
(bad)
mov
mov
mov
or
stos
(bad)
bnd
ss
mov
(bad)
mov
test
addr16
pushf
shl
pop
ins
test
out
sar
(bad)
jg
pop
push
jle
push
gs
loope
xchg
lea
mov
dec
int3
int3
enter
outs
cli
(bad)
jge
or
outs
push
repz
(bad)
imul
(bad)
call
nop
adc
aaa
nop
pop
adc
pop
(bad)
mov
pusha
add
add
pop
mov
test
inc
sti
inc
jg
bnd
push
mov
fnstcw
xchg
sbb
(bad)
(bad)
jg
jg
scas
push
(bad)
in
xchg
pushf
es
lock
mov
inc
jno
jns
ret
in
int
call
adc
test
dec
mov
sub
mov
cld
imul
aaa
cld
dec
lods
nop
into
int3
(bad)
and
fs
jbe
lods
cmp
mov
(bad)
adc
jecxz
(bad)
mov
xchg
imul
mov
ror
scas
cld
test
iret
in
xchg
cwde
(bad)
aam
mov
jb
jne
(bad)
(bad)
inc
(bad)
mov
mov
(bad)
ja
adc
call
jge
imul
mov
(bad)
(bad)
jg
pop
out
repnz
xlat
lods
hlt
aam
test
cmps
scas
out
jo
in
sahf
mov
fld
movs
fcmovbe
fadd
popa
std
repnz
inc
xchg
cmp
mov
lahf
mov
inc
cmp
daa
jle
in
out
push
and
lds
cmp
push
mov
push
test
mov
sar
loopne
push
aad
pop
adc
push
(bad)
imul
fisubr
call
(bad)
out
add
(bad)
(bad)
jmp
mov
cmp
mov
mov
je
movs
std
xchg
mov
fistp
pop
pop
pop
jmp
(bad)
(bad)
cmp
aam
sahf
idiv
xchg
imul
call
cld
jmp
add
test
aas
or
rcl
fwait
loopne
cmp
xchg
stc
lods
xor
mov
iret
push
pop
sub
mov
jo
stos
cs
push
(bad)
xchg
(bad)
(bad)
(bad)
call
in
and
or
dec
jg
retf
fnstenv
cmp
xchg
sub
sti
or
repnz
sbb
adc
pop
mov
mov
adc
add
jnp
gs
xor
cld
(bad)
jg
shl
out
mov
dec
push
inc
test
inc
inc
pop
clc
mov
xchg
les
push
pop
mov
test
ja
(bad)
dec
sar
dec
mov
cld
repz
call
(bad)
int
mov
ss
sar
retf
adc
iret
push
add
or
xlat
push
jns
retf
out
std
pop
rol
push
mov
call
or
jmp
mov
mov
call
dec
adc
retf
call
(bad)
(bad)
dec
cdq
call
xor
pop
mov
mov
pop
mov
or
lea
dec
(bad)
jmp
rol
push
sbb
push
mov
mov
xchg
xor
fdivr
inc
(bad)
out
or
or
imul
mov
add
xchg
pop
(bad)
(bad)
(bad)
(bad)
cmp
adc
xor
out
sub
sahf
xchg
mov
in
imul
(bad)
aas
push
pop
adc
fst
ins
push
pop
pop
lods
xlat
popf
in
pushf
(bad)
(bad)
(bad)
(bad)
jmp
pushf
test
mov
mov
jne
test
imul
jnp
ret
or
pop
jle
xor
cmc
fist
test
pop
push
imul
lock
clc
fnstenv
loope
cmps
or
cmps
push
pop
or
in
and
(bad)
jmp
daa
call
jmp
jle
xor
cmp
repz
arpl
xchg
das
jmp
(bad)
(bad)
inc
call
cmps
ror
mov
lock
das
pop
ins
call
imul
mov
jg
push
dec
cmp
iret
adc
cmp
clc
xor
and
shl
(bad)
call
xchg
cmps
cmps
and
sahf
mov
sub
ss
(bad)
fidiv
fld
mov
jne
mov
popf
jp
fs
add
sti
out
mov
cld
lods
add
test
sahf
add
sub
mov
fcmovb
icebp
ret
xchg
(bad)
(bad)
jmp
ds
push
movs
sub
push
pop
xchg
adc
aaa
mov
das
sar
in
mov
cdq
cmp
mov
leave
mov
(bad)
pop
cmp
scas
fs
sub
std
int
imul
lock
in
lahf
into
neg
xor
div
ins
mov
inc
loop
xchg
loopne
mov
rcr
enter
fs
(bad)
jmp
scas
push
scas
ins
and
sbb
cli
dec
or
adc
sahf
fbstp
in
xor
ss
pusha
and
int3
pop
cli
lds
(bad)
(bad)
cld
push
fcomp
mov
xlat
sahf
cmc
(bad)
in
call
rcl
or
and
(bad)
ins
fdiv
jge
(bad)
(bad)
(bad)
push
jmp
pop
rcl
call
inc
mov
cmp
cmp
mov
mov
jg
das
pop
je
stc
(bad)
cmp
mov
mov
cmp
hlt
in
pop
cmp
aaa
ja
popa
pop
dec
out
inc
(bad)
mul
aas
inc
loope
pop
jmp
xor
lods
xor
mov
into
(bad)
jmp
clc
cmp
inc
mov
xor
jmp
xchg
ins
movs
pop
push
mov
sub
mov
(bad)
jg
mov
cmp
pop
stos
retf
and
mov
aad
add
retf
in
mov
das
clc
mov
inc
inc
jecxz
inc
pandn
aas
cmp
push
fmul
or
shr
call
rcr
imul
stos
cmp
daa
(bad)
(bad)
call
dec
jbe
ins
hlt
jmp
es
sbb
dec
ds
mov
push
arpl
jne
xor
mov
pop
data16
sbb
call
pop
sbb
mov
inc
packssdw
ja
(bad)
(bad)
jmp
xchg
sub
ret
mov
stos
or
fsub
add
call
(bad)
mov
mov
repz
outs
ss
out
fdiv
frstor
cmc
test
cmps
jmp
adc
inc
pop
(bad)
(bad)
(bad)
fiadd
cmp
jmp
out
(bad)
fistp
sbb
push
fdivr
ja
imul
fld
push
push
gs
(bad)
jmp
int3
jmp
mov
and
pop
loopne
sbb
(bad)
push
xlat
aam
(bad)
(bad)
(bad)
jmp
jge
cli
loopne
(bad)
repnz
xchg
cmc
popa
xlat
mov
clc
mov
push
(bad)
cli
jl
ud1
fld
out
xchg
jmp
push
push
push
lods
lods
or
call
sbb
xchg
push
fdiv
dec
rol
stos
add
ror
(bad)
xchg
jmp
xchg
stos
mov
fld
mov
fwait
in
test
stos
stos
in
in
ins
pop
movs
(bad)
mov
stc
mov
(bad)
fwait
mov
shr
jmp
sbb
cmc
sbb
sahf
nop
cli
push
sti
in
xchg
shr
mov
inc
mov
test
outs
cli
sub
pop
jmp
mov
sub
out
lahf
rol
mov
in
data16
and
jg
pop
dec
aad
cmps
pop
shr
sub
xor
mov
dec
shl
push
xor
retf
push
(bad)
inc
movs
icebp
cmp
jge
adc
ss
dec
push
(bad)
(bad)
fcomip
test
ds
cmp
mov
repnz
jg
inc
xchg
inc
bound
test
(bad)
stos
inc
push
push
inc
mov
dec
jg
cwde
stos
movs
movs
in
add
(bad)
(bad)
call
mov
dec
pop
dec
popa
xchg
add
mov
xchg
push
dec
or
cmp
std
(bad)
mov
retf
cmp
das
mov
(bad)
shr
arpl
dec
stos
scas
jg
(bad)
jmp
hlt
xor
les
lods
sub
mov
mov
and
inc
nop
jp
lahf
fisub
lods
lock
mov
push
es
(bad)
ins
or
bound
push
(bad)
(bad)
(bad)
dec
mov
arpl
cmp
call
adc
xor
ja
rcr
into
imul
hlt
inc
xchg
push
std
jnp
sbb
cmps
mov
xor
cmp
scas
stos
test
(bad)
(bad)
push
mov
xlat
jp
jmp
xchg
add
cmc
mov
jbe
es
(bad)
(bad)
push
cmp
addr16
or
pusha
mov
int3
jg
lods
xchg
outs
addr16
loop
ret
cmc
inc
xchg
mov
ins
pop
icebp
pop
lods
(bad)
pop
ror
fdiv
div
xchg
(bad)
cmp
sbb
sahf
push
pop
pushf
mov
(bad)
into
clc
inc
jg
(bad)
xor
push
adc
test
enter
outs
or
into
clc
imul
xor
push
adc
sbb
scas
(bad)
out
std
loop
(bad)
lock
(bad)
(bad)
(bad)
dec
jp
fdiv
cmp
mov
stos
push
cmp
jne
dec
inc
sar
pop
push
fst
scas
fcomip
mov
push
(bad)
in
jmp
int
jecxz
push
push
aad
gs
(bad)
jmp
cmps
imul
cmps
push
sar
inc
fild
xor
(bad)
jg
(bad)
in
fmul
xchg
push
loopne
inc
sub
or
jg
loop
aam
mov
pop
icebp
xlat
inc
cwde
adc
inc
ret
call
mov
call
dec
repnz
and
test
dec
inc
jo
(bad)
jg
pop
push
xor
dec
fcomp
sbb
sub
stos
sahf
push
jmp
fld
sbb
mov
ins
ret
ret
and
add
mov
(bad)
inc
int
push
fidivr
dec
jecxz
or
cmp
in
shl
in
iret
cmp
out
nop
imul
sbb
lods
shl
into
retf
das
in
add
test
cmp
mov
lods
int3
mov
retf
lods
stos
scas
rcl
xor
scas
das
mov
hlt
repnz
fild
pop
cmps
movs
cdq
inc
test
(bad)
(bad)
dec
lock
adc
fisub
xchg
movs
gs
outs
loope
popa
cmc
add
sti
lods
mov
and
jle
and
jle
fcos
(bad)
jg
dec
stc
xlat
aas
mov
mov
test
and
cmp
push
repz
cli
das
cli
imul
scas
mov
jp
data16
iret
cmp
rcl
cli
push
call
(bad)
fld
std
jne
jecxz
(bad)
mov
shl
std
push
mov
sub
pop
adc
xchg
jmp
cmps
adc
(bad)
aaa
cld
sub
ins
stos
outs
push
(bad)
bound
pop
cmp
(bad)
in
(bad)
mov
xchg
and
repnz
xor
call
add
pop
cmp
pop
jp
test
ss
mov
mov
dec
dec
dec
rol
sub
sbb
(bad)
nop
dec
rcl
cmp
aam
(bad)
push
rcl
(bad)
push
push
in
cdq
in
ss
sbb
xor
add
movs
xchg
cmp
test
(bad)
dec
(bad)
push
in
cmp
imul
cmp
mov
inc
dec
sbb
hlt
(bad)
sbb
jp
icebp
jmp
(bad)
push
(bad)
stos
shl
jmp
mov
loopne
mov
mov
retf
push
stos
and
mov
add
jbe
jge
xchg
push
(bad)
(bad)
dec
call
iret
dec
dec
cli
xlat
mov
ja
dec
adc
gs
sar
and
or
(bad)
pushw
retf
xor
push
(bad)
(bad)
fild
or
outs
iret
mov
push
xor
out
in
xor
fdivr
fsub
popf
rcl
fsubr
js
sbb
jl
xlat
repz
movs
jg
inc
scas
cli
jmp
daa
mov
fcmovu
adc
(bad)
fist
fnsave
jne
pop
or
sbb
test
rcr
jo
add
cli
inc
sar
xor
scas
out
pop
jecxz
mov
shl
jmp
cmp
aaa
jl
int
loopne
dec
add
adc
push
xlat
push
push
xchg
out
(bad)
loopne
(bad)
fdiv
dec
jmp
jle
fidivr
lds
call
mov
jne
cmp
(bad)
out
(bad)
dec
mov
test
and
pop
jne
in
in
sbb
stos
(bad)
jmp
(bad)
push
jmp
ret
mov
sar
icebp
(bad)
fbld
mov
push
pop
adc
repnz
fwait
ja
or
inc
or
gs
jne
cmp
cmp
call
out
pop
shr
sub
inc
in
aam
push
js
(bad)
(bad)
mov
cli
cmc
aad
sbb
fisub
inc
pop
stos
shl
sbb
sbb
jbe
movs
and
inc
push
add
cs
inc
(bad)
push
sbb
push
arpl
lea
int
aam
call
push
push
inc
data16
lods
sub
push
fstp
sbb
call
(bad)
fiadd
inc
push
bound
sbb
mov
cmps
jmp
xor
cmp
(bad)
(bad)
dec
and
inc
or
(bad)
xchg
fnstsw
mov
inc
push
int3
aaa
dec
mov
mov
(bad)
(bad)
(bad)
(bad)
in
leave
pusha
push
outs
repz
jns
push
cld
xor
push
xor
ror
(bad)
cmp
outs
(bad)
dec
add
lock
adc
enter
mov
fdiv
mov
sbb
pop
jae
cmps
dec
cmp
out
push
clc
cmc
xchg
inc
jg
(bad)
jmp
mov
pusha
jp
test
xor
(bad)
(bad)
(bad)
jmp
(bad)
out
mov
pop
(bad)
icebp
(bad)
movs
outs
mov
dec
xlat
call
push
into
ds
inc
cmovns
(bad)
rcr
fnstsw
(bad)
mov
sub
ins
lds
test
ja
adc
push
pushf
xchg
mov
icebp
inc
sbb
iret
push
add
push
or
cmp
rol
mov
(bad)
mov
outs
dec
not
add
xor
xor
dec
imul
shl
pop
mov
sar
mov
cmp
fidiv
push
adc
fdivr
out
cmps
pop
mov
out
(bad)
sbb
jg
add
(bad)
call
out
sbb
xor
in
xlat
inc
cmp
daa
push
cmc
mov
inc
(bad)
(bad)
jmp
outs
mov
(bad)
sahf
movs
in
sbb
je
cwde
rcr
fbstp
(bad)
dec
dec
jge
test
mov
jns
jmp
pop
out
or
das
mov
sbb
sub
add
xor
fdivr
lock
mov
movs
movs
pop
imul
push
scas
mov
hlt
popf
cmp
retf
sbb
inc
daa
xor
sar
mov
mov
mov
dec
and
pop
mov
inc
(bad)
(bad)
mov
stos
sub
or
ss
rol
les
fsubrp
jmp
ss
stos
(bad)
inc
out
jno
or
push
fwait
lds
jns
inc
xchg
inc
out
fsub
(bad)
(bad)
fbld
inc
lahf
test
or
(bad)
scas
push
jle
ja
pushf
jg
jno
lods
cdq
(bad)
or
imul
jle
(bad)
mov
jl
ret
sbb
loop
mov
jnp
iret
scas
xor
push
popf
sbb
popa
loop
jecxz
iret
mov
dec
ds
xchg
rol
fistp
(bad)
mov
or
outs
mov
jmp
test
mov
movs
imul
mov
sub
cmps
(bad)
stc
pushf
lea
mov
jnp
jo
add
cld
pop
lods
test
sub
hlt
sub
cmps
clc
xchg
lods
(bad)
jmp
adc
inc
sub
std
adc
mov
cli
lea
sub
(bad)
repnz
mov
cld
jae
push
push
ret
xchg
ret
xchg
clc
outs
gs
jmp
mov
mov
push
movs
movs
push
femms
jmp
in
sub
js
jae
or
dec
push
or
aaa
adc
pusha
sbb
bound
(bad)
push
push
jle
and
pop
call
test
inc
nop
arpl
pushf
fistp
pop
icebp
(bad)
push
cmp
out
pop
cli
(bad)
mov
movs
jbe
loopne
push
jne
imul
add
add
lahf
sub
jmp
(bad)
(bad)
call
jns
xlat
aas
mov
xchg
xchg
aaa
xor
jg
or
sahf
fs
jg
(bad)
call
aam
mov
bnd
(bad)
ret
addr16
(bad)
(bad)
(bad)
jmp
(bad)
lea
adc
push
dec
jo
mov
fld
mov
sbb
out
and
pop
pop
lods
fdivr
push
and
call
pop
ins
mov
gs
lock
fcomp
push
pop
push
xor
jle
push
pop
icebp
jg
dec
sub
mov
fcmovu
adc
dec
stos
fdivrp
dec
ins
push
fidivr
and
pop
sbb
js
sar
call
xlat
test
scas
cmp
repnz
retf
stos
scas
jp
popf
pop
add
cld
mov
ds
call
fdiv
int3
retf
das
dec
dec
dec
mov
fwait
lock
(bad)
mov
outs
mov
das
jmp
dec
fidiv
push
jg
(bad)
xchg
ja
(bad)
cmps
out
imul
(bad)
push
std
call
iret
out
std
in
cmp
idiv
ja
jle
fld
or
jmp
xchg
ins
out
or
ret
aam
aas
mov
shl
mov
sbb
or
mov
and
das
pop
pop
adc
jmp
shl
jmp
cmp
aaa
ins
sub
jo
iret
retf
aas
sbb
xlat
mov
call
pushf
(bad)
in
sbb
(bad)
push
sbb
mov
nop
(bad)
(bad)
(bad)
jmp
cli
fmul
or
aad
test
sar
and
pop
jno
out
jo
(bad)
(bad)
(bad)
dec
movs
push
sub
das
scas
(bad)
setg
adc
jae
dec
jmp
xchg
scas
sub
dec
fstp
pop
(bad)
xor
lock
push
loop
and
dec
xorps
std
jecxz
sar
fist
iret
adc
aad
outs
cmp
test
aas
arpl
lock
test
das
cmps
mov
rcl
arpl
xor
aam
dec
push
test
(bad)
(bad)
(bad)
jmp
xchg
in
sbb
xor
shl
test
dec
fcomp
pop
cdq
push
rcl
(bad)
call
ret
cmp
jns
xor
not
push
cs
sbb
push
scas
(bad)
test
xchg
dec
arpl
jo
clc
(bad)
mov
xlat
dec
mov
lods
fst
inc
cmp
sbb
fmul
test
ds
jb
(bad)
(bad)
(bad)
jg
and
jle
xchg
loope
mov
mov
inc
sahf
inc
call
sub
pop
(bad)
call
mov
pop
push
add
xor
sbb
dec
and
mov
mov
cmp
daa
sub
cmp
adc
cwde
ret
jmp
test
mov
mov
add
bound
mul
fstp
push
push
sti
shr
jg
sbb
xlat
mov
(bad)
mov
(bad)
dec
imul
pop
lods
iret
inc
sbb
clc
ret
fsub
sbb
fisubr
push
pop
mov
out
xchg
call
sub
and
pop
(bad)
mov
mov
sahf
inc
clc
outs
dec
pop
adc
sbb
cmp
loop
cmp
jle
arpl
outs
into
mov
jae
shl
or
inc
ret
sahf
ret
xchg
out
(bad)
(bad)
(bad)
push
inc
jne
std
dec
jb
ficom
and
jnp
into
dec
mov
sub
outs
dec
mov
push
arpl
inc
stos
cmovbe
retf
vmaxsd
repnz
push
bound
sbb
cwde
xchg
cwde
inc
cwde
or
push
pop
(bad)
out
push
sub
punpckldq
fiadd
imul
ja
add
jmp
xor
sbb
js
xor
fdivrp
(bad)
(bad)
(bad)
mov
push
repnz
mov
jbe
cmp
jnp
adc
loopne
call
cmps
cli
push
mov
pop
imul
push
hlt
out
(bad)
inc
fcmovnbe
xor
faddp
sub
pushf
fsub
les
pop
add
push
adc
xor
mov
fimul
into
sub
cs
push
(bad)
mov
sbb
lahf
push
das
ins
or
cli
mov
push
pop
mov
cmc
(bad)
(bad)
fcomp
push
cmp
outs
push
cmp
mov
in
fild
addr16
imul
jmp
xchg
out
bswap
in
arpl
retf
loop
(bad)
push
mov
lock
punpcklwd
add
sbb
adc
xor
cmps
icebp
push
jg
mov
mov
ja
in
movs
pop
push
xor
jnp
(bad)
(bad)
(bad)
dec
xor
xchg
test
(bad)
mov
jge
jnp
sti
cmp
pop
(bad)
(bad)
call
ret
sbb
in
fstp
or
fsave
dec
inc
movs
(bad)
(bad)
(bad)
jl
div
stos
mov
dec
test
jbe
mov
add
outs
shr
ret
jg
hlt
das
push
lods
scas
clc
jmp
neg
add
scas
stos
cmp
aas
std
(bad)
(bad)
(bad)
push
jmp
pop
fsub
or
push
int
inc
scas
jns
das
(bad)
aas
and
dec
dec
xor
(bad)
inc
mov
xchg
pop
and
adc
pop
mov
mov
xchg
sub
mov
test
loopne
(bad)
(bad)
jmp
(bad)
scas
out
push
dec
jmp
sub
sti
in
mov
outs
(bad)
(bad)
call
nop
fistp
neg
jmp
js
xchg
and
push
adc
popa
ss
out
and
ds
jmp
add
out
js
jg
repz
xchg
mov
aad
sbb
call
int
(bad)
aas
xlat
pop
cmp
mov
ins
clc
je
inc
outs
fucomip
fisubr
mov
mov
ins
lods
stos
pop
sub
push
inc
and
mov
loop
jg
dec
mov
(bad)
mov
adc
sub
xor
hlt
(bad)
(bad)
(bad)
(bad)
call
popa
retf
clc
add
nop
push
and
sbb
push
call
mov
call
mov
mov
cdq
out
pop
mov
leave
dec
ins
(bad)
(bad)
(bad)
inc
sbb
js
push
sub
cdq
data16
rcr
xchg
mov
inc
add
mov
test
ds
jne
or
(bad)
in
cli
add
movs
cmps
cmps
dec
cmp
push
mov
xor
mov
fistp
dec
dec
test
mov
mov
jmp
sti
outs
bound
xchg
jmp
add
shr
cwde
mov
pop
and
add
aaa
cld
mov
jns
push
jne
(bad)
xor
and
mov
(bad)
out
inc
add
adc
xchg
dec
sub
adc
ret
pop
sub
inc
sub
inc
jmp
cmp
pop
add
cld
fild
adc
or
inc
dec
(bad)
inc
repz
pop
and
cdq
or
xlat
or
adc
shr
stos
(bad)
push
xor
addr16
mov
ret
(bad)
push
mov
jle
sbb
es
loopne
xor
in
(bad)
dec
sub
call
pop
aas
mov
sbb
or
cli
(bad)
(bad)
push
cmc
pop
test
mov
pop
arpl
dec
lea
test
shl
xor
cmp
cli
(bad)
jmp
xor
jl
jmp
add
addr16
jns
dec
rcr
fwait
stos
(bad)
outs
push
pop
and
fcomp
mov
(bad)
sar
aam
fmul
call
(bad)
pop
call
adc
dec
sub
xchg
sub
dec
es
mov
jle
dec
sub
call
add
test
call
push
and
jae
cld
add
push
addr16
sbb
les
sbb
rcl
mul
push
or
(bad)
mov
(bad)
cmps
ret
or
jne
pop
dec
repz
dec
rcl
lahf
loop
(bad)
(bad)
jnp
jns
dec
mov
pop
rcl
cli
mov
dec
(bad)
push
xchg
imul
jbe
in
scas
jb
rol
xchg
imul
mov
jg
ficom
and
pop
test
pop
jns
mov
adc
clc
dec
xchg
jmp
xchg
call
stos
cmps
push
dec
ja
dec
(bad)
(bad)
(bad)
call
mov
out
pop
or
rcl
mov
push
scas
pop
or
loop
dec
and
xor
push
jnp
es
cmp
inc
adc
push
pop
(bad)
push
add
dec
clc
int3
cdq
popa
sbb
and
scas
mov
push
iret
jo
daa
pop
pushf
cmps
mov
mov
jg
mov
mov
add
mov
popa
rol
(bad)
cmp
pop
jp
push
leave
repz
ret
rol
adc
push
inc
fbstp
mov
pop
jae
call
dec
outs
inc
sahf
jo
lods
ins
sub
(bad)
out
pop
aam
push
(bad)
cmp
push
(bad)
test
mov
jmp
mov
xchg
test
loopne
jb
xchg
push
adc
dec
inc
or
loop
cmp
aam
push
jne
pop
cmps
mov
mov
adc
dec
test
jecxz
mov
imul
ja
sahf
xchg
ja
mov
ins
loopne
out
shr
sub
(bad)
fcmovnu
stos
mov
es
or
stos
ud0
and
or
leave
popa
push
int
test
dec
adc
pushf
pop
cs
push
aam
and
mov
fild
out
gs
adc
int3
add
inc
inc
hlt
aas
std
pop
lock
mov
scas
dec
xchg
fstp
mov
xor
call
shl
xor
xchg
pushf
mov
repnz
dec
and
aad
(bad)
push
dec
dec
loop
push
xor
or
cmps
push
inc
(bad)
(bad)
shl
and
jmp
push
or
inc
push
dec
mov
mov
cli
outs
(bad)
jmp
xchg
mov
aam
jle
adc
(bad)
call
in
scas
cmp
out
push
es
cmp
out
add
rcr
ds
xchg
pop
sbb
add
jle
push
loope
ss
mov
jmp
cs
jg
mov
jmp
dec
adc
(bad)
adc
aas
jge
xor
jbe
and
das
sub
add
enter
lock
xor
mov
mov
and
inc
out
stos
mov
jmp
cmc
xchg
adc
jg
in
shl
pushf
outs
jne
mov
mov
pop
or
jmp
fnsave
jmp
int3
repz
fwait
data16
cmp
push
cmps
xchg
ror
push
adc
int3
popa
(bad)
in
pop
loopne
xchg
xchg
add
and
jge
popf
addr16
les
loop
fwait
mov
and
int3
into
xor
jo
inc
or
in
xor
mov
sbb
xchg
lods
adc
call
or
adc
xchg
pop
daa
adc
jmp
stos
idiv
jae
mov
cli
loopne
inc
xor
add
sar
cmps
(bad)
fnstenv
loopne
cld
ret
in
(bad)
xor
push
jne
movs
movs
jmp
aas
sbb
aad
cmp
enter
jmp
(bad)
xor
test
cmp
ret
dec
push
xor
das
test
push
add
pop
cmps
or
sbb
sbb
(bad)
scas
clc
push
aam
jns
(bad)
lods
xlat
cwde
test
cmps
mov
imul
adc
jg
fst
lock
cli
jmp
aad
xchg
addr16
jle
daa
add
mov
push
xor
outs
js
pop
es
aad
lds
ss
mov
aaa
mov
sub
(bad)
(bad)
aas
cmp
sbb
jo
das
adc
movs
repz
and
lods
retf
pop
cwde
mov
mov
fisttp
in
mov
std
mov
push
sahf
adc
pusha
cwde
inc
jno
inc
pop
cmps
(bad)
mov
push
cmp
aam
sub
jns
sub
jle
out
push
push
popf
loopne
cmp
push
jmp
leave
inc
add
fcom
adc
(bad)
loop
sar
(bad)
(bad)
jg
sub
aam
shl
mov
out
test
out
xlat
ret
inc
mov
clc
adc
mov
in
stos
ret
aad
mov
dec
loope
cmp
push
call
out
xor
cmp
xor
xor
not
rol
in
and
pop
or
call
in
pop
mov
xor
mov
add
(bad)
(bad)
call
mov
aam
neg
mov
jl
fwait
fwait
das
mov
(bad)
hlt
cmps
add
(bad)
push
cld
repnz
jl
in
adc
(bad)
lock
cmp
test
shr
and
test
es
out
push
pop
(bad)
call
fstp
daa
dec
jle
std
call
fwait
lods
out
jmp
out
add
rcl
(bad)
(bad)
call
add
test
ds
stc
in
sub
addr16
or
mov
sbb
jle
jmp
jmp
in
fs
pop
test
xor
out
(bad)
push
fcmovnu
fidivr
mov
xchg
iret
cwde
fucompp
jmp
loop
pop
push
push
int3
out
(bad)
(bad)
push
dec
xchg
sub
es
aas
clc
loope
outs
sti
repnz
addr16
(bad)
mov
idiv
retf
jg
add
(bad)
in
cli
jnp
sahf
(bad)
ins
adc
cdq
call
and
(bad)
(bad)
mov
repz
jb
mov
stos
call
jge
out
cmc
imul
in
xchg
push
sbb
(bad)
push
gs
fdivp
loop
int3
lahf
xor
addr16
cli
popa
sub
fcos
call
fnstsw
add
cli
stos
stos
sub
xor
jge
loopne
xchg
jge
jmp
jae
sti
pop
test
and
es
xor
loopne
cli
scas
adc
mov
imul
pop
popa
inc
nop
add
in
in
(bad)
jb
cld
stc
cmps
fsubp
ja
fistp
mov
movs
inc
outs
(bad)
(bad)
push
neg
loopne
or
jns
mov
(bad)
ficomp
repnz
jmp
pop
scas
mov
jl
fdivrp
sti
lahf
(bad)
and
cs
(bad)
call
mov
pop
bound
test
jnp
adc
jle
pop
aaa
je
test
mov
fimul
(bad)
(bad)
(bad)
push
lea
push
pop
rcr
aam
push
(bad)
sahf
jp
sub
mov
xchg
pop
push
pop
xchg
mov
and
ret
les
dec
sub
mov
push
enter
js
sub
mov
cmp
iret
(bad)
xchg
lods
mov
(bad)
call
ja
inc
or
mov
retf
in
pop
mov
(bad)
cmp
pop
aaa
scas
pop
fcomp
push
mov
call
xlat
jmp
mov
cld
fidiv
mov
mov
out
sar
cli
mov
je
or
imul
ja
addr16
(bad)
dec
fdiv
mov
(bad)
mov
icebp
jl
rcr
sar
jg
iret
push
xchg
lahf
push
test
(bad)
(bad)
call
pop
sub
clc
xchg
dec
cmp
lahf
jp
out
neg
jp
add
jg
jg
dec
pushf
out
jg
fistp
sub
mov
mov
mov
jge
(bad)
(bad)
(bad)
call
pop
retf
jno
aas
jg
sbb
cli
cmps
jg
jl
mov
add
jb
jmp
xor
xor
ret
(bad)
jmp
pusha
push
mov
stc
fdiv
cmps
imul
(bad)
(bad)
jmp
cdq
cld
hlt
jnp
add
push
loopne
gs
das
cmp
into
sbb
mov
(bad)
out
mov
mov
jno
repz
addr16
lds
add
retf
lahf
mov
cld
not
fs
std
pop
pop
mov
ja
(bad)
(bad)
jle
mov
push
pop
sahf
leave
test
xor
cmp
cwde
adc
outs
icebp
(bad)
adc
xor
push
outs
jle
fstenv
jecxz
mov
jns
mov
lahf
std
call
xchg
mov
mov
hlt
hlt
pop
jp
imul
pop
(bad)
jmp
int3
jl
sbb
and
pop
sbb
(bad)
(bad)
push
repz
(bad)
outs
mov
cmp
xchg
mov
xor
mov
and
(bad)
test
jg
mov
mov
ds
push
stos
jg
gs
jbe
je
scas
test
icebp
cdq
iret
(bad)
(bad)
(bad)
fisttp
pop
shl
mov
ret
cli
push
das
xchg
inc
add
fs
xlat
add
scas
gs
cli
in
adc
mov
in
scas
mov
enter
push
sub
mov
xchg
out
inc
(bad)
ja
icebp
jno
rcl
shl
punpckhdq
cmp
(bad)
jnp
je
fdiv
push
clc
retf
ror
cld
(bad)
mov
fbstp
mov
scas
fdivrp
and
(bad)
sti
shr
sti
popf
scas
add
cwde
ss
lahf
(bad)
cmp
call
mov
data16
fcomip
stos
(bad)
cwde
mov
jg
mov
test
pop
sbb
jecxz
fidivr
hlt
out
dec
rol
mov
ds
mov
jl
adc
mov
out
adc
scas
mov
cmc
jo
jmp
aaa
ror
pop
jl
test
adc
shl
ret
outs
mov
es
mov
outs
out
inc
or
push
call
imul
mov
sbb
lds
cmp
fidiv
icebp
add
sar
sahf
pop
sbb
pop
fdivr
movs
jp
cld
add
js
(bad)
(bad)
inc
ins
sti
outs
jg
pop
(bad)
sahf
cmp
dec
aaa
jle
inc
pop
in
push
cld
adc
mov
cmc
mov
stos
pop
aas
(bad)
clc
or
fdiv
xchg
jg
mov
pop
fsubr
xchg
push
adc
(bad)
pushf
cmp
adc
push
in
cwde
inc
jne
ss
out
and
test
xor
adc
jmp
mov
and
push
mov
mov
lds
loope
jae
dec
jecxz
popf
mov
cmc
loop
sub
out
jp
fstp
(bad)
(bad)
(bad)
dec
iret
jg
inc
fnsave
outs
js
sub
(bad)
xor
les
js
movs
(bad)
(bad)
dec
pop
cmp
fstp
push
repz
stc
(bad)
(bad)
fnstsw
jg
jmp
ss
jne
and
les
icebp
arpl
jecxz
xor
add
in
and
dec
inc
adc
cmps
ds
shl
push
clc
dec
(bad)
mov
js
call
call
outs
clc
mov
inc
sbb
jo
mov
rol
enter
or
adc
adc
lahf
(bad)
in
outs
jge
fisttp
ja
loopne
lahf
fdivr
(bad)
test
xlat
lods
pop
std
popf
pop
addr16
(bad)
jo
leave
pop
jg
(bad)
inc
add
daa
jnp
sub
test
out
(bad)
in
xchg
push
add
aaa
or
clc
ret
jb
ja
pop
pop
inc
or
(bad)
fadd
ja
xor
hlt
cmps
dec
sub
pusha
call
push
int
xchg
pop
loop
into
stos
stc
jmp
mov
sbb
mov
jmp
(bad)
cmc
ins
outs
test
sar
fild
sbb
cdq
add
leave
(bad)
(bad)
inc
sub
or
mov
retf
mov
(bad)
sti
mov
dec
ret
push
rol
test
lahf
stc
aam
(bad)
mov
(bad)
pop
clc
jbe
ss
add
jb
es
xor
fld
jmp
sbb
mov
fmul
xchg
push
stc
fisttp
call
in
retf
ss
pop
mov
pushf
and
cmp
out
mov
adc
adc
jmp
push
and
dec
mov
inc
sti
ret
jne
pop
adc
xor
aad
jg
shl
scas
xchg
and
and
mov
mov
xchg
int3
xchg
ror
pop
mov
int3
add
and
add
js
xchg
inc
inc
enter
ret
push
jg
inc
sbb
gs
sub
sub
arpl
push
jmp
dec
pusha
mov
jp
mov
gs
jmp
sub
aam
sbb
loope
mov
or
sbb
mov
add
stos
push
jo
jo
sbb
cmovo
push
stos
std
fdivp
dec
movs
cmp
paddb
push
lods
add
sbb
cs
call
mov
adc
out
cmp
jns
imul
push
mov
sbb
push
sub
cld
mov
call
sar
inc
(bad)
(bad)
sbb
fmul
pop
int3
xor
test
sub
push
movs
add
test
push
in
(bad)
lea
inc
fadd
cld
pop
cld
sbb
xchg
jge
pop
push
outs
mov
jo
cmp
mov
dec
aam
push
jge
(bad)
arpl
addr16
push
int
and
pop
mul
and
pushw
mov
(bad)
dec
sbb
or
xchg
cmp
jmp
dec
cmp
(bad)
cli
ss
retf
out
shl
push
(bad)
jg
call
popa
pusha
inc
xor
imul
into
xor
jecxz
dec
test
loope
(bad)
sbb
cld
sti
dec
inc
add
rol
push
cmc
inc
mov
out
jle
cdq
cmc
icebp
jg
(bad)
mov
retf
aas
fsubr
jne
cmp
mov
push
cmp
sbb
ss
(bad)
jmp
in
les
in
scas
push
xor
cmp
xchg
test
repz
daa
nop
nop
int
imul
inc
rcl
pop
add
adc
cs
sub
ja
jmp
sbb
xor
outs
dec
cmps
shl
jmp
mov
imul
mov
cmps
pop
and
dec
loope
cli
retf
outs
test
cmc
(bad)
mov
cmps
call
xchg
xchg
test
mov
enter
scas
push
lahf
cmc
fbstp
out
sti
jle
mov
xor
les
icebp
mov
inc
mov
mov
leave
sar
push
jmp
adc
inc
(bad)
fistp
ins
mov
jne
adc
or
(bad)
(bad)
call
inc
and
movs
add
pop
pop
jp
pop
jnp
out
sti
pop
mov
mov
sbb
xchg
pop
mov
fst
clc
(bad)
push
xchg
retf
mov
or
ret
sub
shl
mov
addr16
dec
mov
mov
mov
(bad)
pop
out
xor
clc
leave
cmp
ret
pop
(bad)
mov
pop
pusha
hlt
dec
jp
mov
or
sub
adc
push
lods
fistp
xchg
fs
jg
movs
loop
cmps
sahf
sbb
sbb
cmc
sub
jmp
push
pop
mov
xor
xor
stos
sub
jne
pop
cld
cmc
add
dec
cmp
call
(bad)
jmp
inc
lahf
jl
or
rcl
ficomp
add
mov
(bad)
dec
xor
adc
mov
stos
pop
bound
shl
inc
pushf
dec
pushf
mov
(bad)
dec
push
jnp
icebp
bound
mov
sbb
jg
imul
mov
call
out
xor
(bad)
(bad)
push
pop
jbe
xchg
sar
ins
jbe
or
jns
pop
rol
rol
into
mov
fcomi
repnz
sbb
adc
pop
outs
pop
sub
dec
hlt
xlat
call
bound
loopne
call
pop
test
adc
push
mov
(bad)
fidiv
push
mov
sub
aam
push
shl
sub
je
jg
test
aam
(bad)
(bad)
push
dec
cmc
shl
iret
cwde
data16
mov
cmp
aad
cmp
fdivr
(bad)
(bad)
jmp
pop
gs
cmps
arpl
jnp
mov
or
mov
(bad)
(bad)
push
cmp
push
pop
sbb
xchg
(bad)
ss
scas
xor
sub
mov
push
xor
push
sub
fimul
dec
or
jmp
adc
cmc
ins
mov
addr16
out
cli
jmp
sbb
adc
pushf
or
and
stos
scas
dec
xor
outs
(bad)
(bad)
call
ds
xlat
cmc
sub
pop
mov
mov
rcl
fnsave
sti
adc
(bad)
(bad)
(bad)
fdivr
mov
dec
jae
mov
jp
loope
xchg
cs
mov
leave
push
clc
and
or
(bad)
(bad)
(bad)
jnp
cmp
sub
mov
out
std
scas
(bad)
fdivr
lock
(bad)
push
lea
(bad)
(bad)
(bad)
dec
aam
outs
jp
sti
cmc
cli
aaa
(bad)
fidiv
(bad)
dec
fld
fdivr
les
bound
clc
test
push
scas
(bad)
xor
das
loopne
inc
or
mov
stos
sub
jnp
ret
lahf
mov
imul
(bad)
fwait
(bad)
(bad)
(bad)
push
sbb
mov
ins
ins
ins
pop
mov
cld
dec
adc
or
call
das
out
arpl
enter
sbb
jp
pop
dec
jnp
fcomip
outs
add
daa
(bad)
ds
popf
and
jno
es
push
inc
push
in
lock
fbld
(bad)
sub
pop
adc
pop
pop
mov
pop
inc
jmp
push
loopne
and
pop
test
mov
add
push
std
push
jmp
sub
push
jp
(bad)
sar
daa
imul
clc
sahf
cmps
jmp
bound
fwait
jge
fisttp
jge
sahf
(bad)
aad
xor
hlt
sub
sub
jecxz
mov
(bad)
lods
sbb
out
add
(bad)
lds
mov
loopne
inc
jle
pusha
add
ror
dec
or
jb
imul
mov
iret
retf
sub
cdq
mov
mov
mov
jmp
popf
push
clc
leave
jae
cmp
xchg
cmp
inc
dec
and
dec
setae
loopne
fisttp
jl
xchg
mov
sar
ret
lds
mov
popf
mov
mov
mov
xchg
push
sub
pop
cmp
or
cmp
dec
sub
ss
call
dec
lea
nop
push
sub
and
retf
dec
mov
xchg
jg
fild
cmp
out
jbe
je
fs
mov
aas
inc
mov
fiadd
xor
add
(bad)
dec
cmp
inc
fs
sahf
xchg
mov
push
or
(bad)
call
in
mov
cmps
lods
sub
lahf
jg
adc
push
sub
fs
cmp
mov
lods
in
xchg
retf
pop
jae
inc
xlat
mov
lahf
xchg
add
outs
clc
pop
scas
jns
sbb
jo
adc
xor
push
mov
retf
in
cmc
outs
mov
out
leave
add
fnstenv
arpl
(bad)
jmp
jmp
aam
push
sub
jp
stos
pop
fstp
ror
pop
jle
fild
fcos
jg
mov
aam
cmp
scas
mov
mov
xchg
mov
(bad)
call
aaa
loope
inc
ds
mov
mov
imul
(bad)
(bad)
call
ins
adc
and
je
xor
jne
mov
mov
xchg
pop
dec
dec
xchg
or
push
gs
jge
(bad)
or
test
or
(bad)
das
leave
(bad)
(bad)
(bad)
(bad)
aas
cmp
clc
lock
and
xchg
cmp
push
ficomp
adc
dec
(bad)
(bad)
(bad)
dec
int
je
loop
jno
cmp
and
dec
sub
adc
sti
jmp
inc
cmp
xor
(bad)
xor
rol
test
sbb
das
push
clc
(bad)
inc
dec
clc
xchg
popa
jl
mov
call
fs
xlat
jne
repz
(bad)
(bad)
jmp
int
(bad)
xchg
cmps
jmp
pop
pop
je
push
bound
addr16
nop
or
loope
call
arpl
add
(bad)
push
fcomip
dec
ret
push
(bad)
fisubr
(bad)
(bad)
(bad)
(bad)
call
pop
outs
mov
ds
push
mov
pop
iret
ret
pop
fcomi
pop
fild
xor
hlt
jmp
pop
mov
inc
inc
cmp
cmp
jmp
or
push
(bad)
(bad)
jg
xchg
mov
fldenv
repnz
sub
or
idiv
or
jmp
push
mov
cmps
jbe
into
not
jge
(bad)
mov
das
mov
sub
pop
fidiv
adc
lock
js
retf
lods
(bad)
(bad)
(bad)
jmp
das
jns
out
mov
pop
iret
and
std
add
jns
xchg
adc
shl
sub
xor
cmp
cli
sub
mov
(bad)
jg
add
cdq
lock
push
jmp
faddp
shl
sub
clc
(bad)
call
lods
jmp
sub
into
mov
mov
or
fidivr
pop
lea
(bad)
daa
sbb
outs
das
jmp
cdq
mov
imul
(bad)
inc
hlt
stos
xor
inc
xor
sbb
sub
movs
mov
cmp
ds
clc
(bad)
push
inc
popf
jle
std
sbb
jmp
fwait
(bad)
call
push
repnz
dec
jecxz
mov
push
test
lock
ror
dec
jne
addr16
add
aad
sub
jmp
mov
into
push
mov
and
call
out
jbe
in
call
ret
push
push
(bad)
(bad)
(bad)
jmp
test
aam
iret
jno
mov
cmp
test
sub
pop
mov
or
xchg
hlt
push
(bad)
(bad)
(bad)
call
call
out
icebp
repnz
sub
jo
lahf
jne
or
out
inc
hlt
dec
stos
clc
sub
push
dec
xlat
xchg
mov
jbe
jmp
pop
jmp
out
sbb
sbb
std
(bad)
jmp
outs
or
push
cli
cli
pop
cmovg
sub
mov
(bad)
(bad)
(bad)
out
xor
cdq
sti
push
jle
scas
das
xlat
sar
adc
cwde
fdivr
dec
cs
xor
(bad)
out
cld
add
test
popf
jb
fst
shl
jae
(bad)
dec
lods
dec
(bad)
cmp
add
int3
repz
shl
inc
xor
(bad)
push
xlat
mov
fild
adc
call
dec
into
add
loopne
cmp
(bad)
(bad)
(bad)
push
dec
ret
xor
fnstcw
cmp
jg
fadd
imul
aas
imul
mov
rcl
dec
nop
add
or
sahf
xor
int
leave
mov
std
mov
(bad)
(bad)
call
add
or
xchg
stos
sbb
aaa
dec
test
mov
sahf
loope
jo
(bad)
(bad)
(bad)
(bad)
call
sub
stos
push
mov
push
enter
stc
jbe
leave
out
jbe
add
(bad)
(bad)
dec
cdq
cmp
adc
lods
xor
ja
push
fsub
jo
push
loopne
xchg
movs
rcl
push
(bad)
fcomip
inc
mov
mov
fbstp
lods
pop
and
or
fistp
mov
repnz
(bad)
(bad)
push
jnp
inc
arpl
pminub
and
fs
stos
ret
cmp
(bad)
fild
jl
es
(bad)
(bad)
(bad)
call
ret
jp
cmps
in
inc
sbb
pop
dec
or
popf
jne
hlt
fs
jp
push
xor
cmp
dec
(bad)
(bad)
inc
jl
les
fidiv
fisub
addr16
inc
call
(bad)
mov
inc
sub
push
mov
mov
hlt
or
or
das
dec
inc
fs
push
in
test
shl
cdq
sub
fstp
mov
xchg
mov
repz
and
xchg
xchg
mov
mov
adc
cwde
dec
popf
dec
mov
pusha
push
(bad)
call
enter
dec
or
cmp
loop
inc
repnz
loope
push
mov
ins
(bad)
aas
jo
mov
(bad)
dec
adc
push
xchg
push
test
shl
rcr
sbb
cli
(bad)
(bad)
jmp
mov
add
dec
add
push
sbb
or
popf
lock
outs
adc
cmps
push
std
xor
(bad)
fistp
push
push
nop
xchg
inc
add
xor
jns
rcr
cmps
retf
(bad)
(bad)
call
arpl
sub
fcom
pusha
mov
pushf
and
xor
(bad)
(bad)
dec
js
mov
sub
lea
sbb
fsubr
xchg
mov
xor
xor
push
into
sub
(bad)
mov
repz
pop
adc
ins
dec
sbb
inc
inc
dec
and
lods
pop
in
(bad)
(bad)
inc
jbe
xchg
push
clc
test
cmp
push
and
mov
mov
mov
pop
xor
(bad)
(bad)
jmp
dec
repz
jl
je
stos
sbb
mov
cmp
cld
mov
mov
arpl
aaa
cld
pop
jmp
push
adc
jecxz
aas
ss
(bad)
(bad)
cmp
add
jae
fcmovbe
pop
dec
pop
mov
es
add
mov
adc
(bad)
(bad)
(bad)
(bad)
jmp
pop
xor
data16
lds
and
pop
xchg
and
adc
(bad)
(bad)
dec
add
fcomp
add
nop
iret
bsf
jp
xor
jge
push
xlat
rcl
clc
(bad)
jmp
adc
retf
pop
cwde
nop
ret
sti
jne
das
add
fdiv
push
push
int
jo
inc
dec
shr
sub
inc
pop
sub
mov
lea
push
add
xor
pop
sub
push
push
outs
mov
std
std
inc
dec
or
adc
jbe
aas
cmp
fisttp
cmp
cwde
mov
push
dec
mov
sub
into
mov
hlt
inc
mul
push
ss
dec
and
(bad)
(bad)
(bad)
inc
daa
pop
jnp
add
(bad)
xchg
sti
arpl
pop
(bad)
in
pop
mov
mov
in
(bad)
(bad)
inc
aaa
test
add
push
aaa
mov
inc
imul
les
sar
lods
int
or
xor
cwde
arpl
loope
cmp
(bad)
push
pop
inc
ins
sub
push
xchg
call
(bad)
test
pop
nop
cs
test
fimul
jmp
inc
add
test
inc
(bad)
(bad)
mov
push
mov
push
clc
push
and
leave
ins
jbe
push
sub
pop
cmps
das
mov
lock
jecxz
mov
scas
jb
adc
pop
ret
add
or
mov
or
icebp
mov
xor
dec
jecxz
adc
cwde
pop
test
cmps
arpl
frstor
push
adc
xchg
pop
popa
call
(bad)
jle
mov
iret
push
out
pushf
pop
jbe
popa
push
test
or
xchg
pop
je
(bad)
jmp
xor
nop
sub
dec
inc
mov
pop
cs
int3
cmp
lea
shl
in
and
mov
sti
mov
sbb
or
jne
arpl
and
and
(bad)
(bad)
(bad)
call
push
outs
xor
dec
aam
pop
aaa
outs
mov
xor
stos
dec
fidiv
sub
mov
cmp
out
fld
dec
adc
or
dec
and
call
cmp
sbb
xor
push
std
inc
int
fidivr
pop
jo
in
out
push
sub
ret
ret
gs
jo
clc
scas
cmp
dec
push
pop
mov
aad
repz
dec
out
jmp
dec
les
mov
shl
bound
ret
sub
xor
or
inc
jl
and
and
push
xor
inc
shl
scas
out
(bad)
jmp
xchg
sub
shr
pop
sub
sbb
xchg
inc
inc
mov
ja
mov
(bad)
(bad)
call
movs
sub
test
fnstenv
loopne
addr16
mov
(bad)
(bad)
(bad)
jmp
inc
sub
cmc
mov
(bad)
xchg
(bad)
adc
and
jmp
push
or
cdq
jp
and
sbb
fst
ss
xor
cmp
xor
mov
pusha
sub
(bad)
(bad)
(bad)
call
retf
ss
cs
lahf
ins
mov
sub
stos
sahf
jmp
dec
(bad)
jg
push
ror
pop
cmps
psubsb
outs
out
div
das
nop
pop
xor
clc
sub
cmp
sahf
sub
sbb
or
xor
es
(bad)
(bad)
jmp
in
aaa
test
call
inc
pop
outs
out
stos
mov
xor
(bad)
(bad)
jg
out
pop
enter
std
inc
mov
mov
push
not
dec
mov
(bad)
jmp
ins
mov
jge
add
add
pusha
jecxz
arpl
mov
push
cmp
(bad)
(bad)
call
in
jae
xchg
mov
jl
jl
jl
inc
jg
xor
pushf
sbb
pop
jb
inc
xlat
jmp
jl
cmp
or
mov
(bad)
(bad)
jmp
mov
nop
inc
loop
aas
mov
mov
dec
inc
pop
sbb
fmul
add
cmp
rcr
(bad)
inc
jp
xor
nop
xchg
pop
mov
xor
mov
(bad)
mov
sbb
lods
cmp
(bad)
sub
cmp
(bad)
inc
inc
push
sahf
push
movs
push
jmp
xchg
inc
push
rcl
jecxz
(bad)
(bad)
jmp
sbb
shr
mov
mov
cld
cmp
stos
xor
(bad)
mov
dec
push
out
inc
sbb
fsub
xor
aam
adc
(bad)
(bad)
(bad)
jmp
adc
sbb
fcomp
sbb
cmp
mov
test
daa
dec
mov
(bad)
(bad)
(bad)
push
dec
adc
mov
imul
ret
and
and
ds
stos
jl
push
stc
sub
das
push
adc
add
pusha
inc
jg
sub
sbb
aaa
cld
call
adc
adc
sub
je
add
mov
iret
push
adc
mov
and
(bad)
(bad)
push
dec
dec
or
fadd
dec
xor
push
aaa
add
test
pop
mov
imul
mul
pop
and
imul
rcr
clc
(bad)
(bad)
(bad)
out
icebp
fwait
daa
sahf
pop
mov
out
(bad)
mov
mov
inc
sbb
mov
fs
and
call
cwde
jb
mov
mov
pop
iret
aaa
je
add
retf
(bad)
ds
(bad)
(bad)
(bad)
fdiv
xchg
jge
cld
mov
into
imul
fild
cmp
(bad)
(bad)
clc
sahf
pop
cs
shl
cmps
sbb
mov
pop
cmp
(bad)
aad
jne
adc
(bad)
(bad)
push
das
int3
jl
adc
and
sub
mov
mov
(bad)
jmp
icebp
ja
sub
cmp
test
jge
mov
aad
call
inc
(bad)
(bad)
(bad)
jmp
int3
sti
js
fidiv
retf
fwait
fwait
xor
mov
jmp
sbb
jmp
add
xchg
push
inc
xor
repz
out
les
adc
(bad)
call
stos
scas
inc
call
bound
pusha
(bad)
(bad)
out
cli
dec
push
mov
int3
inc
sbb
push
add
(bad)
inc
mov
xor
lock
jno
test
push
cld
or
(bad)
push
mov
inc
xor
mov
inc
ret
adc
rcl
inc
sub
jmp
pop
pop
scas
sbb
aam
mov
or
das
lahf
xor
in
(bad)
(bad)
(bad)
(bad)
cmp
or
imul
push
xor
adc
push
adc
repnz
out
mov
(bad)
(bad)
jmp
cmp
test
nop
gs
popf
mov
dec
jle
(bad)
cmp
(bad)
jg
push
adc
cmps
push
fiadd
xor
push
in
shl
add
jg
pop
clc
or
sbb
mov
or
mov
(bad)
jae
push
push
(bad)
(bad)
(bad)
mov
and
push
lahf
xor
stos
cli
ret
cmp
and
push
cs
(bad)
(bad)
(bad)
call
or
mov
arpl
stos
lea
shl
xchg
mov
mov
scas
cli
stos
jmp
imul
je
and
jmp
adc
lock
mov
mov
xchg
icebp
sar
jg
jg
in
in
lds
mov
idiv
fdivr
jge
daa
shr
je
mov
dec
clc
mov
sbb
pop
dec
retf
mov
ret
mov
mov
(bad)
(bad)
call
push
stos
adc
test
cdq
xchg
dec
push
inc
inc
mov
(bad)
(bad)
inc
sbb
ins
ror
in
bound
out
int
rol
(bad)
(bad)
dec
pxor
out
sbb
and
pop
sbb
mov
push
sub
(bad)
(bad)
inc
hlt
mov
add
mov
jne
mov
mov
cmp
dec
cmps
adc
add
hlt
(bad)
call
mov
mov
int3
and
shl
cld
mov
xor
(bad)
(bad)
jmp
cmp
popf
mov
lods
cwde
jecxz
add
loope
sub
dec
bound
call
push
jmp
xor
xchg
loope
call
fcom
out
imul
(bad)
(bad)
dec
gs
enter
je
pop
cmps
addr16
push
add
cmp
es
fiadd
jmp
movs
jo
push
psllw
shl
mov
add
and
mov
dec
into
nop
jg
or
sub
(bad)
(bad)
push
or
shr
jge
push
rcl
add
call
xor
adc
cli
adc
rol
rcr
inc
cmp
xor
mov
inc
jl
jne
xor
mov
xor
ror
mov
xchg
sar
push
cdq
or
and
push
mov
xchg
push
call
jg
pop
fld
xchg
mov
cmps
push
rol
push
dec
or
sub
jl
sbb
jp
aam
shl
jae
pop
sbb
cmp
test
call
xor
fst
fimul
ffree
mov
ds
(bad)
(bad)
jmp
mov
pop
push
daa
hlt
je
jmp
push
cmps
sbb
cmp
mov
xor
add
pop
enter
pop
es
(bad)
call
jae
inc
je
xor
retf
or
test
(bad)
(bad)
jg
fs
enter
xor
repnz
sub
jl
lods
lods
push
(bad)
(bad)
(bad)
(bad)
inc
and
inc
xor
sub
test
push
or
add
adc
enter
cmp
inc
push
mov
push
test
mov
scas
jo
and
std
(bad)
(bad)
call
add
ins
push
and
add
pop
or
test
(bad)
(bad)
call
mov
loop
imul
sub
not
icebp
sub
mov
mov
xor
mov
cmp
mov
mov
jg
xlat
stos
pop
mov
out
mov
add
xlat
test
mov
adc
in
(bad)
(bad)
or
(bad)
(bad)
push
xor
adc
jg
cdq
and
ror
in
jle
loopne
fwait
pop
xor
popa
(bad)
mov
pop
ja
and
mov
push
jmp
fmul
adc
push
dec
inc
cli
scas
mov
(bad)
jg
(bad)
ficom
xchg
lds
das
pushf
sbb
jo
sub
lds
cs
(bad)
jg
call
(bad)
clc
mov
adc
adc
(bad)
cld
idiv
(bad)
(bad)
call
jbe
scas
pop
js
inc
inc
scas
cmp
fisttp
jbe
arpl
(bad)
sar
cld
ja
sub
sub
iret
and
cwde
sti
mov
cmps
cmps
ja
sub
xor
push
push
add
or
cdq
inc
pop
inc
stos
(bad)
(bad)
jg
aas
mov
inc
stos
je
adc
into
push
lea
mov
(bad)
(bad)
push
bound
push
or
jbe
repz
mov
jo
pop
mov
add
test
test
dec
cmc
cmp
imul
loope
xor
sahf
jno
and
in
aad
les
mov
mov
enter
sti
cmp
stos
cmps
xor
and
adc
sub
jl
nop
sbb
lds
test
(bad)
(bad)
(bad)
inc
mov
push
xchg
or
(bad)
sbb
les
cmp
jg
(bad)
call
adc
xchg
xor
add
xchg
jmp
and
shl
inc
pop
xor
cmp
lahf
dec
jmp
popf
(bad)
jbe
in
xlat
adc
push
je
(bad)
(bad)
call
cli
sbb
sbb
mov
inc
add
xchg
neg
push
xchg
adc
das
clc
dec
dec
lea
jmp
adc
imul
sbb
fiadd
(bad)
call
and
es
jp
call
pop
std
loope
xlat
hlt
mov
(bad)
(bad)
inc
pop
mov
sub
mov
ja
xchg
jne
add
push
push
retf
(bad)
call
test
clc
call
xchg
in
xchg
dec
icebp
cdq
cmp
test
das
push
(bad)
call
getsec
jge
mov
retf
xchg
mov
sahf
jp
mov
imul
outs
out
cwde
arpl
sar
xchg
or
pop
sub
stc
adc
sbb
cld
xchg
sub
and
sbb
cmp
not
push
pop
mov
shl
out
mov
ins
cmp
mov
and
sbb
(bad)
(bad)
(bad)
dec
add
cli
ret
and
pop
js
neg
(bad)
pop
mov
arpl
repnz
(bad)
cmc
ja
cmp
call
std
daa
jb
lds
pop
push
inc
mov
sbb
pminsw
outs
adc
mov
xor
arpl
inc
call
fst
mov
pusha
push
pop
fcmovnu
test
call
aaa
sub
mov
rol
pop
inc
pusha
and
inc
fs
jbe
mov
(bad)
(bad)
mov
xchg
mov
fwait
xor
push
xchg
mov
stc
dec
test
inc
sub
(bad)
(bad)
(bad)
call
test
mov
test
mov
xchg
movs
js
popa
call
scas
(bad)
call
sub
xchg
(bad)
out
or
add
or
(bad)
(bad)
(bad)
dec
jae
enter
nop
fdiv
ds
pop
stos
jl
adc
add
sti
(bad)
(bad)
(bad)
(bad)
inc
cmps
mov
and
(bad)
adc
sub
inc
cmp
pop
es
(bad)
jmp
stos
ss
mov
add
push
cs
scas
in
adc
inc
mov
and
aam
shr
xchg
push
(bad)
in
(bad)
(bad)
jle
xor
add
sub
cmp
mov
popf
sub
jmp
(bad)
(bad)
jmp
ins
adc
push
icebp
inc
add
mov
jne
add
jo
dec
daa
mov
cmp
icebp
(bad)
call
mov
xor
push
in
movs
push
sbb
jne
push
inc
mov
stos
addr16
pop
mov
mov
retf
sbb
vpmaddwd
xor
icebp
stc
jmp
(bad)
jle
fisttp
retf
jg
outs
adc
push
cmp
pop
or
cdq
mov
inc
mov
test
mov
and
loope
int3
xchg
ud0
(bad)
jmp
add
xor
mov
mov
xchg
and
inc
test
std
push
std
dec
inc
mov
in
push
and
and
mov
adc
(bad)
call
ret
sub
add
pop
cmp
xchg
add
js
test
inc
sub
(bad)
(bad)
call
dec
and
xchg
mov
push
sbb
cmp
ret
xor
cmp
(bad)
(bad)
call
mov
and
jno
cwde
mov
stc
xchg
sub
fcmovu
cmp
fcomi
(bad)
std
sahf
push
sub
(bad)
fbld
jp
pop
inc
fild
popf
dec
cmp
loope
xchg
pusha
and
jns
aaa
dec
clc
lea
xchg
mov
sbb
jmp
add
inc
repz
sbb
mov
mov
pop
ja
jg
add
sbb
cs
fidiv
cmp
pop
sub
xlat
(bad)
push
les
cli
(bad)
out
mov
ror
add
(bad)
mov
test
or
or
aas
cs
aam
bound
jae
dec
stos
xor
test
cs
mov
lods
inc
push
enter
push
mov
push
jecxz
in
jns
imul
aas
mov
(bad)
(bad)
dec
pop
xchg
dec
les
js
fnstsw
idiv
retf
ins
mov
loope
mov
out
sahf
sbb
push
stc
in
jnp
ficomp
mov
sti
push
(bad)
mov
jb
and
int
mov
and
out
jmp
(bad)
dec
fmulp
jmp
lea
pop
xlat
jno
mov
(bad)
(bad)
(bad)
mov
lods
icebp
jmp
mov
add
mov
sub
cmp
stc
and
pop
adc
(bad)
(bad)
push
pop
xchg
or
adc
mov
ins
lods
fwait
mov
sub
(bad)
(bad)
dec
add
lahf
pop
adc
inc
dec
cmps
sbb
mov
add
fld
repz
mov
mov
(bad)
(bad)
call
stc
mov
xchg
mov
test
push
fs
lahf
dec
jmp
scas
and
sub
adc
add
cmp
popa
sar
xchg
mov
cli
(bad)
mov
mov
xchg
cmp
mov
in
xor
call
(bad)
(bad)
(bad)
jmp
pushf
mov
xor
mov
pop
dec
pop
sbb
leave
pop
mov
fdivr
outs
(bad)
dec
test
js
mov
xchg
sub
mov
pop
rcr
pushf
xchg
sbb
jbe
outs
clc
call
mov
pop
dec
in
test
push
ins
push
pop
dec
call
mov
mov
jb
inc
add
lods
push
in
in
adc
ficom
sub
jnp
fcmovnu
(bad)
(bad)
mov
ja
mov
sti
rol
(bad)
into
retf
retf
push
(bad)
push
inc
frstor
fst
inc
(bad)
jno
(bad)
pop
loop
mov
dec
rol
ins
inc
test
cdq
mov
jnp
jns
push
sub
lock
dec
lds
push
(bad)
mov
pop
mov
retf
fidiv
pop
test
cmp
jnp
enter
call
cld
xchg
push
sbb
stc
scas
xchg
div
fbld
sub
dec
pop
icebp
cmp
sbb
jmp
pop
add
(bad)
(bad)
(bad)
inc
xchg
xchg
ror
add
dec
xlat
bound
sub
jae
aad
pop
jp
inc
push
pop
mov
dec
call
fld
jbe
jg
pop
sbb
xchg
cmp
fsubr
xchg
mov
(bad)
push
jmp
das
test
jl
sub
dec
int
push
shl
ins
dec
js
mov
and
inc
cld
das
mov
imul
aad
mov
mov
(bad)
(bad)
(bad)
jp
fst
adc
ds
js
(bad)
xor
xchg
add
ret
jmp
fs
(bad)
(bad)
mov
ret
sub
aam
add
mov
inc
lahf
jo
inc
push
ret
(bad)
(bad)
call
push
inc
or
lea
inc
pop
and
or
xor
fs
pop
lock
jmp
sub
mov
add
dec
(bad)
dec
pusha
mov
inc
(bad)
test
push
std
jmp
enter
jecxz
push
and
movs
adc
repz
daa
xor
mov
(bad)
(bad)
stc
loop
adc
cs
add
or
mov
nop
or
pop
pop
mov
cmp
jg
fdivp
lahf
pop
mov
xchg
pop
les
addr16
sar
(bad)
pop
sub
jnp
jnp
sbb
mov
sbb
(bad)
(bad)
(bad)
(bad)
jg
inc
int3
xor
cmp
push
mov
outs
lods
test
stos
and
jl
lods
mov
xchg
(bad)
(bad)
push
or
jecxz
js
shl
inc
je
call
push
pop
(bad)
(bad)
(bad)
jg
xor
push
mov
xchg
test
xchg
sbb
adc
imul
(bad)
(bad)
(bad)
inc
push
aaa
bound
mov
mov
xchg
sub
das
sbb
jb
pop
push
push
test
(bad)
(bad)
(bad)
(bad)
cmp
or
and
test
hlt
add
test
sbb
aad
(bad)
mov
ds
(bad)
(bad)
(bad)
mov
clc
call
pop
daa
push
xor
rcr
(bad)
and
add
scas
ins
lods
dec
(bad)
(bad)
(bad)
call
leave
add
dec
cdq
dec
pop
mov
lods
stos
inc
sahf
mov
cdq
sub
jl
dec
aaa
repnz
out
add
pusha
fimul
push
jo
shr
cmp
scas
xor
adc
idiv
sahf
jle
out
dec
outs
dec
es
jno
retf
ss
and
or
jmp
jae
out
fisub
pop
mov
push
(bad)
pop
(bad)
(bad)
(bad)
jmp
cwde
(bad)
dec
mov
push
fnstcw
jmp
jo
and
push
lock
(bad)
(bad)
fsubr
xor
cmp
cld
shr
jge
xchg
scas
test
pop
cmp
jecxz
dec
mov
mov
pop
mov
(bad)
jnp
cli
xchg
call
cmp
sti
fidivr
repnz
repz
cld
leave
std
mov
sbb
pop
(bad)
(bad)
jmp
jg
aam
and
pop
icebp
loop
loop
dec
push
push
and
(bad)
movs
jb
(bad)
(bad)
(bad)
jmp
out
les
sahf
lock
es
mov
loop
mov
and
push
inc
and
jo
inc
data16
inc
pop
cmp
push
clts
dec
adc
and
sub
pop
clc
jmp
mov
and
sub
arpl
rep
std
(bad)
call
addr16
push
sub
dec
mov
(bad)
sti
rcl
(bad)
(bad)
call
xor
cmp
rcl
inc
nop
push
cmp
adc
in
mov
mov
pop
shl
sbb
dec
(bad)
jmp
inc
in
xor
pop
push
xchg
push
pop
test
ficomp
or
adc
add
(bad)
(bad)
call
and
es
outs
push
push
or
dec
mov
ret
fsub
push
push
mov
mov
adc
add
mov
int3
push
xlat
cmc
sar
mov
jae
lock
(bad)
(bad)
(bad)
push
sub
add
push
ret
push
add
pop
cmps
and
add
icebp
jns
shl
sub
lahf
xor
(bad)
(bad)
jmp
push
outs
movs
dec
lea
out
inc
mov
pushf
adc
pop
push
fwait
cli
test
cld
sub
jmp
in
mov
dec
out
jge
sar
sbb
xor
ret
scas
inc
jae
(bad)
(bad)
jmp
mov
xor
test
das
shl
xlat
pop
(bad)
jmp
(bad)
(bad)
(bad)
(bad)
inc
retf
fstp
cdq
xchg
pop
rol
gs
pop
rcl
shl
fdivr
movs
gs
cmps
pop
mov
jb
(bad)
(bad)
(bad)
inc
(bad)
cmp
std
test
xor
xchg
mov
ins
imul
push
jecxz
outs
pop
mov
add
adc
push
xchg
stc
fdivr
(bad)
(bad)
jmp
xchg
dec
cmps
arpl
mov
dec
inc
test
cwde
mov
cmp
jb
sar
(bad)
(bad)
push
cld
xor
fidiv
jo
outs
(bad)
inc
lahf
fdivp
ret
repz
mov
dec
rcr
cdq
xor
cmp
xchg
cli
inc
ret
test
mov
xor
(bad)
jg
and
xor
cmp
adc
dec
pop
imul
call
or
or
in
xchg
or
jg
in
adc
icebp
dec
test
push
jb
inc
(bad)
(bad)
(bad)
jmp
xchg
sub
outs
dec
mov
push
push
dec
cmp
nop
imul
shl
(bad)
(bad)
inc
add
pusha
cmp
pop
je
sub
and
test
xor
lods
cmp
sub
jg
mov
(bad)
mov
sub
nop
add
dec
sbb
pusha
push
jbe
jmp
adc
ja
jmp
loopne
icebp
imul
jecxz
shr
stos
xchg
push
pusha
mov
retf
(bad)
(bad)
call
mov
sbb
pushf
pop
arpl
inc
fs
inc
add
sbb
cld
(bad)
mov
ss
push
in
mov
inc
les
push
sub
retf
(bad)
(bad)
call
or
mov
fist
jge
les
ficom
in
jo
cmp
mov
(bad)
jmp
jns
mov
push
mov
sar
push
adc
into
xor
push
clc
loop
jg
push
xor
and
xchg
dec
pushf
xchg
nop
mov
push
adc
push
and
or
hlt
je
lahf
ret
cmc
dec
mov
sbb
jg
(bad)
out
pusha
gs
adc
int
or
into
sub
lock
call
lea
push
xchg
mov
jb
xchg
mov
adc
bound
add
cmc
(bad)
(bad)
(bad)
jmp
push
mov
xor
mov
pop
or
imul
mov
xor
leave
(bad)
(bad)
mov
dec
dec
shr
push
fadd
sub
xor
mov
and
xchg
lods
pop
cs
call
mov
popf
clc
sub
inc
cmps
pop
xchg
nop
mov
(bad)
(bad)
call
mov
lds
loope
jae
pop
stc
mov
repnz
and
jle
mov
mov
mov
sub
hlt
ja
adc
xchg
add
xor
out
ins
add
(bad)
call
test
cwde
fidiv
jnp
int3
mov
(bad)
ja
cmp
into
fsub
xor
mov
icebp
xchg
pop
aad
(bad)
pop
sub
cld
(bad)
call
inc
mov
inc
jge
sbb
dec
cmps
cmps
in
adc
(bad)
(bad)
(bad)
(bad)
clc
fisub
and
mov
shl
push
fcomip
cld
jg
lock
mov
mov
dec
lahf
fistp
scas
push
adc
(bad)
(bad)
(bad)
(bad)
cmp
hlt
fdiv
sbb
lods
pop
mov
leave
(bad)
std
push
mov
rcl
inc
into
jae
cmp
or
(bad)
das
loop
and
not
cs
and
(bad)
(bad)
inc
ret
mov
rol
int3
sbb
pop
retf
jl
pop
inc
mov
inc
ret
rcl
jg
(bad)
call
or
retf
push
adc
xchg
repz
clc
(bad)
inc
jns
cs
test
les
repz
retf
enter
xchg
out
mov
mov
mov
popa
rcl
dec
sbb
test
jne
(bad)
(bad)
jmp
mov
iret
xor
sbb
sar
lahf
add
pop
lds
jp
mov
jmp
je
add
(bad)
(bad)
jg
pop
and
mov
imul
inc
aam
sar
test
mov
(bad)
dec
sahf
imul
or
iret
in
lods
aaa
mov
mov
bound
fcos
(bad)
(bad)
jmp
dec
cmp
bound
jecxz
cld
xor
sbb
jmp
lea
imul
(bad)
cmp
nop
shl
ret
mov
stos
push
push
or
cmp
xchg
les
fld
call
loopne
int
int
mov
jp
and
dec
lock
jl
ss
test
push
cld
mov
jns
(bad)
jg
retf
movs
cmc
mov
scas
fidivr
sti
in
pop
cmp
push
pop
pop
neg
ret
dec
xchg
mov
(bad)
(bad)
push
jo
popa
lds
outs
pop
and
pusha
xchg
mov
mov
jg
(bad)
inc
jge
ffree
mov
outs
imul
pop
pop
inc
retf
sbb
(bad)
(bad)
(bad)
call
xchg
mov
xchg
push
sub
pop
jb
sbb
mov
mov
ret
sti
(bad)
(bad)
(bad)
(bad)
mov
push
jo
push
repz
lahf
fucom
sub
xor
(bad)
(bad)
fld
ins
ins
mov
push
cmp
test
test
fst
dec
jno
inc
xor
(bad)
call
(bad)
jg
fadd
ins
sar
mov
pop
rol
fcmove
and
mov
call
push
fidiv
test
test
push
je
mov
test
push
daa
mov
stc
pop
mov
sub
loopne
pop
xor
adc
bound
gs
mov
fisttp
fs
cli
(bad)
(bad)
mov
mov
inc
xchg
das
(bad)
jmp
xchg
in
sti
out
dec
adc
xchg
adc
dec
(bad)
(bad)
(bad)
jmp
mov
sub
jo
add
add
mov
sbb
or
(bad)
push
cmc
gs
mov
dec
test
(bad)
in
mov
cmps
pusha
adc
iret
jbe
in
push
jg
loope
test
sub
jg
xchg
xor
or
ja
mov
jle
lahf
dec
ror
push
test
dec
clc
(bad)
(bad)
mov
call
xchg
pop
mov
cmp
(bad)
call
call
aaa
mov
mov
repnz
sbb
xchg
xor
mov
xchg
imul
xor
jbe
test
aas
dec
(bad)
inc
jnp
inc
inc
std
mov
cmc
xchg
int
lds
sar
(bad)
(bad)
push
in
outs
adc
or
imul
int3
sub
xchg
and
call
rol
popa
dec
stos
(bad)
(bad)
jg
jl
rcl
and
mov
clc
repnz
and
call
cld
dec
push
jp
test
jns
and
or
sub
cli
(bad)
(bad)
(bad)
jmp
mov
mov
cmp
test
dec
mov
aas
mov
arpl
sub
(bad)
call
cmps
and
or
mov
mov
leave
int3
pusha
xchg
out
out
imul
and
adc
(bad)
ds
xlat
mov
out
mov
add
mov
xor
ror
jecxz
sbb
xchg
out
imul
inc
xor
mov
adc
das
xchg
dec
stos
ret
ins
lahf
jmp
mov
add
pop
pop
and
aaa
pop
xchg
in
push
cmp
jle
(bad)
push
sahf
sub
sub
dec
or
dec
(bad)
vmaxsd
push
sbb
and
xchg
push
sbb
xor
pop
mov
(bad)
mov
cwde
test
xchg
and
push
cmp
and
mov
(bad)
(bad)
(bad)
push
enter
cli
int3
dec
sbb
fsub
pop
call
test
cmp
clc
(bad)
(bad)
call
imul
aas
pushf
das
xchg
lods
pop
out
mov
cmp
mov
in
retf
or
(bad)
push
dec
push
jmp
retf
or
inc
popf
adc
adc
xchg
add
hlt
pop
fistp
or
aaa
gs
out
and
sub
(bad)
adc
mov
test
(bad)
mov
(bad)
(bad)
(bad)
push
mov
daa
fild
loope
lds
xchg
call
gs
add
jmp
retf
mov
push
sub
push
call
push
xor
mov
rol
add
mov
xor
xchg
rcr
sbb
icebp
xchg
leave
pcmpeqb
pop
or
call
call
xor
mov
cli
cmp
dec
sbb
(bad)
(bad)
(bad)
(bad)
mov
xor
xchg
sbb
test
fidiv
xchg
lds
popa
adc
inc
mov
ss
(bad)
(bad)
call
clc
sbb
or
dec
rol
xlat
adc
push
ins
push
pop
inc
push
push
xchg
(bad)
(bad)
(bad)
fistp
leave
repnz
std
adc
push
xchg
fsubrp
sub
sub
push
mov
ret
cmp
std
test
dec
inc
shl
sbb
push
adc
and
outs
int3
sub
(bad)
clc
ja
dec
movs
test
ret
or
or
add
and
(bad)
(bad)
jmp
push
pop
call
mov
scas
das
std
sti
pop
cs
hlt
cmps
pop
jl
std
(bad)
outs
mul
icebp
dec
in
dec
pop
xlat
outs
fcmovbe
aam
test
(bad)
(bad)
jg
into
push
pushf
push
ss
add
pop
or
adc
adc
fwait
jno
mov
jg
(bad)
in
iret
mov
or
jns
sbb
fld
push
or
xchg
dec
cmps
xchg
pop
push
std
jmp
xor
fistp
jmp
cdq
lock
(bad)
dec
vunpcklpd
stc
cld
loopne
pusha
dec
fstp
mov
in
jb
ins
dec
loope
stos
data16
(bad)
(bad)
dec
pop
mov
xchg
push
in
out
sbb
test
jbe
rcl
mov
idiv
call
std
xor
nop
popa
fisttp
cmp
ror
(bad)
jmp
push
xchg
leave
mov
cld
arpl
movs
xchg
fidiv
inc
(bad)
(bad)
(bad)
out
pop
test
mov
movs
(bad)
rcr
out
push
outs
bound
fidiv
mov
push
cld
out
mov
mov
sbb
in
jns
jae
fisttp
lods
das
inc
inc
(bad)
(bad)
inc
mov
ret
cs
xchg
pop
loop
popa
pop
ror
(bad)
test
(bad)
(bad)
(bad)
call
nop
jo
shl
add
je
and
call
jo
pusha
aam
push
daa
ss
mov
cmp
and
fcmovnb
add
inc
ins
sub
(bad)
(bad)
mov
mov
cmovnp
popa
mov
dec
jnp
je
sar
inc
push
add
dec
stc
(bad)
(bad)
(bad)
call
adc
xor
mov
mov
xlat
cmp
mov
cdq
xor
icebp
(bad)
jge
ins
cmps
inc
daa
sbb
popf
sub
sbb
(bad)
jno
cmp
(bad)
jmp
cld
dec
inc
jns
or
adc
and
or
loope
jmp
xchg
cmp
cli
(bad)
call
ret
adc
es
or
or
outs
test
sub
cmps
cmps
adc
mov
(bad)
push
stos
xor
aaa
bound
and
lods
repnz
jmp
xlat
jne
pop
sub
xchg
add
add
mov
(bad)
(bad)
jg
adc
dec
adc
clc
rcr
jle
cld
jl
push
push
inc
fs
cwde
xchg
(bad)
(bad)
(bad)
jmp
fs
mov
add
fst
ins
adc
out
or
bound
mov
sar
jmp
enter
pop
pop
or
mov
jbe
mov
pop
xor
(bad)
(bad)
jg
sbb
dec
pushf
pop
inc
xor
sbb
jecxz
pop
push
jp
pop
loope
shl
(bad)
inc
pop
adc
add
lahf
lahf
es
cmc
scas
ret
je
retw
jno
sar
(bad)
(bad)
fisttp
pusha
into
imul
repz
test
mov
jmp
cwde
pop
enter
xor
and
xor
daa
shl
mov
(bad)
pusha
xor
cwde
(bad)
jmp
clc
popa
call
cld
mov
repz
popa
les
lods
imul
jnp
je
fidiv
inc
inc
mov
jmp
cwde
daa
adc
repnz
(bad)
jmp
stos
or
(bad)
rcl
(bad)
mov
sub
xor
push
leave
push
sub
xor
mov
fdivr
add
pop
adc
daa
push
sbb
pop
jne
and
clc
push
cs
ins
imul
(bad)
(bad)
jmp
ins
cmp
ss
pop
ja
rcl
xchg
(bad)
std
pop
(bad)
pop
mov
inc
dec
(bad)
(bad)
(bad)
inc
or
cmp
sub
fbld
scas
dec
out
dec
adc
mov
enter
(bad)
jmp
cmp
add
push
popa
in
int3
imul
adc
mov
(bad)
(bad)
(bad)
inc
jno
in
pop
mov
mov
nop
stos
pop
repnz
adc
(bad)
fistp
ss
outs
ins
test
test
dec
hlt
cmp
aam
inc
pushf
mov
sbb
(bad)
(bad)
dec
push
or
adc
mov
sub
dec
inc
push
(bad)
jg
pop
jl
add
jbe
nop
nop
sti
sbb
cwde
mov
(bad)
jg
(bad)
jp
jo
inc
cmps
jmp
or
loop
jmp
fwait
ins
sar
lock
push
ret
int3
pop
cwde
mov
or
(bad)
(bad)
(bad)
dec
sar
mov
(bad)
ins
iret
movs
fisttp
sub
test
ret
test
mov
nop
mov
pop
push
movs
and
nop
(bad)
mov
out
clc
(bad)
push
mov
(bad)
ds
adc
inc
cs
lea
xchg
pop
out
(bad)
(bad)
(bad)
dec
mov
adc
jmp
mov
xlat
pop
xlat
cmps
jmp
pop
enter
inc
aaa
dec
add
daa
pop
fisub
push
dec
dec
fdivp
retf
fbstp
call
outs
add
std
aas
fdivrp
rol
bound
(bad)
(bad)
call
cs
mov
xchg
pop
jno
mov
xor
mov
lock
jmp
mov
arpl
mov
hlt
enter
aam
(bad)
out
jecxz
(bad)
call
jne
and
inc
test
repz
dec
push
mov
nop
js
aaa
in
fnstenv
bound
leave
ror
inc
push
cmp
sar
sub
sti
rol
mov
or
std
(bad)
(bad)
mov
in
sub
(bad)
sbb
stc
fld
push
or
lds
sub
(bad)
(bad)
mov
xor
and
out
(bad)
daa
xchg
dec
ret
iret
inc
inc
inc
xor
fisub
cmp
push
xor
sbb
stc
lods
leave
mov
adc
and
or
dec
and
retf
test
(bad)
(bad)
(bad)
call
mov
pop
cli
test
(bad)
popa
loop
loope
sahf
jecxz
stos
inc
stos
movs
pop
sub
in
stos
hlt
(bad)
jmp
fld
mov
inc
and
lods
iret
inc
aaa
stos
lahf
mov
jmp
das
out
mov
and
bound
sub
push
inc
ss
in
test
pushf
sub
(bad)
(bad)
jmp
stos
aaa
adc
mov
mov
sbb
add
or
cli
(bad)
dec
cdq
nop
mov
(bad)
imul
mov
(bad)
icebp
dec
adc
sub
bound
sbb
dec
inc
inc
adc
cs
out
out
(bad)
(bad)
(bad)
inc
retf
enter
and
mov
push
add
arpl
dec
push
inc
(bad)
dec
jb
inc
cs
rcl
stc
loop
pop
jnp
fimul
ds
(bad)
(bad)
call
mov
mov
in
adc
scas
dec
xor
retf
cmp
cmp
xchg
and
inc
stos
ret
sub
push
adc
(bad)
(bad)
(bad)
dec
mov
pop
and
stos
leave
sub
ss
inc
cli
test
nop
jb
jmp
and
jo
push
int3
fdivr
and
ja
(bad)
(bad)
dec
(bad)
das
jl
stc
xchg
inc
lods
(bad)
xor
xchg
sub
scas
push
jne
sub
xchg
xor
mov
popf
xchg
sub
or
(bad)
or
push
and
jmp
mov
movs
mov
sub
dec
pop
pop
jbe
xchg
mov
outs
jl
sub
rcl
jb
push
movs
or
cs
cwde
(bad)
(bad)
(bad)
mov
(bad)
pop
sbb
adc
xor
mov
fmul
ins
mov
cmps
je
in
icebp
(bad)
(bad)
dec
jbe
adc
imul
in
pop
mov
or
add
sbb
(bad)
(bad)
jg
adc
xor
mov
inc
icebp
mov
cmp
jae
(bad)
(bad)
(bad)
push
in
xchg
jp
test
mov
fs
add
inc
adc
aad
ins
(bad)
mov
aaa
mov
pop
ss
mov
mov
(bad)
(bad)
(bad)
out
lods
push
pop
xlat
lea
fisttp
push
pop
(bad)
sbb
in
jb
sub
cmp
cli
test
mov
mov
movs
out
(bad)
(bad)
(bad)
fbld
mov
jg
mov
sbb
in
sbb
and
jae
iret
(bad)
(bad)
jg
jnp
jo
jne
pop
call
add
sbb
and
xor
or
sar
repz
(bad)
repz
(bad)
mov
pop
cmps
scas
loop
sbb
inc
adc
adc
cmp
mov
and
mov
(bad)
(bad)
(bad)
jmp
fxch
xor
jno
dec
inc
test
adc
xchg
pop
loop
or
icebp
hlt
cmps
inc
xor
lahf
fidiv
dec
sti
and
add
adc
or
inc
pusha
sub
xor
and
cld
push
stos
aad
mov
(bad)
(bad)
(bad)
js
and
add
ja
xor
movs
(bad)
fiadd
psrlq
inc
icebp
fwait
pusha
jle
and
mov
rcr
jno
jb
call
retf
(bad)
(bad)
(bad)
jmp
push
push
les
pop
in
cli
aaa
or
and
scas
iret
mov
sbb
push
pop
(bad)
(bad)
call
loopne
adc
xchg
repnz
cmp
sbb
bound
pop
push
mov
enter
(bad)
(bad)
(bad)
call
adc
nop
hlt
daa
bound
inc
cmps
mov
mov
(bad)
or
ret
inc
adc
aaa
std
(bad)
jle
mov
shl
inc
push
int
xor
add
and
(bad)
dec
idiv
jg
icebp
iret
jmp
int
stc
(bad)
std
lds
loop
or
fcmovbe
lods
xchg
fnstsw
call
ja
loope
push
pop
jne
fidiv
jp
popa
dec
loopne
test
pusha
cmp
mov
(bad)
(bad)
in
or
fdivr
xchg
imul
jnp
push
add
xchg
dec
cmps
dec
and
das
adc
(bad)
inc
push
fld
push
mov
mov
mov
add
mov
lods
(bad)
frstpm(287
inc
ss
mov
(bad)
in
fdiv
ins
bound
das
cmps
imul
or
mov
(bad)
push
or
cmp
cmp
mov
call
js
jbe
pushf
es
aam
iret
(bad)
fstp
mov
mov
fwait
(bad)
(bad)
(bad)
call
fcom
adc
and
out
xchg
sbb
out
js
mov
mov
movs
add
push
(bad)
inc
inc
mov
mov
xchg
xchg
adc
push
mov
push
cmps
in
mov
or
xlat
push
ins
aaa
sbb
xchg
mov
aaa
jo
std
ffree
sti
pop
fwait
jecxz
(bad)
push
push
enter
dec
mov
test
dec
cmps
xchg
inc
push
sbb
mov
mov
imul
pop
out
dec
daa
(bad)
(bad)
(bad)
jmp
jb
ret
mov
mov
movs
jo
pushf
mov
xchg
sbb
push
pop
hlt
in
cmp
mov
(bad)
(bad)
push
xchg
mov
in
fsub
add
adc
shr
test
popa
and
and
and
dec
cs
rol
inc
adc
and
fdivr
in
pop
lods
(bad)
lock
(bad)
(bad)
dec
lock
(bad)
hlt
pop
dec
push
call
xchg
push
xor
inc
or
cmp
into
inc
push
stos
sbb
cli
sbb
xchg
push
and
lock
mov
retf
cmps
(bad)
cmp
add
ror
or
push
xchg
mul
imul
mov
fidiv
mov
scas
adc
adc
ds
xchg
inc
inc
and
cli
push
dec
push
mov
mov
cmp
xor
jne
(bad)
test
les
dec
pop
cmp
mov
sahf
dec
sbb
int
dec
pushf
dec
aaa
inc
rol
sub
push
(bad)
push
dec
je
xchg
ret
sub
out
aam
xlat
rcl
sbb
loopne
call
loope
retf
aam
cmp
push
in
(bad)
aad
or
scas
clc
call
or
je
scas
push
jnp
mov
xor
inc
xchg
or
out
mov
lds
fild
out
xor
js
cmp
popf
mov
mov
(bad)
cwd
mov
(bad)
(bad)
mov
jmp
sbb
xchg
lods
leave
cli
ins
int3
jmp
(bad)
(bad)
(bad)
call
aam
xor
mov
fstp
xor
mov
daa
sbb
mov
popa
(bad)
out
add
aas
inc
cld
push
xor
retf
test
push
xchg
mov
xchg
jnp
push
ss
mov
loop
sub
std
dec
in
test
sub
imul
(bad)
(bad)
mov
jmp
mov
push
ret
shl
jmp
inc
jnp
sbb
int
mov
pop
mov
into
call
(bad)
scas
xchg
js
jo
out
pop
cmp
fist
into
fdiv
inc
pop
(bad)
cmc
loopne
dec
(bad)
arpl
test
inc
sub
test
or
(bad)
push
push
pop
push
jo
or
loopne
cld
add
dec
push
fnstenv
adc
pop
(bad)
(bad)
(bad)
dec
jae
cmp
adc
mov
and
dec
xchg
push
pop
inc
sub
(bad)
outs
cli
dec
mov
ret
xor
and
rcr
scas
in
(bad)
(bad)
(bad)
jg
aam
inc
in
ficomp
pop
test
mov
mov
test
xlat
stc
mov
(bad)
dec
int
mov
icebp
adc
pop
sub
call
jb
mov
add
ror
adc
imul
lods
xor
call
or
push
jns
inc
adc
nop
push
js
xor
sub
in
nop
js
(bad)
call
dec
js
dec
and
jae
mov
mov
push
in
(bad)
(bad)
jmp
sar
nop
nop
push
xchg
cmp
movs
dec
(bad)
ins
xor
jp
mov
popa
test
inc
xchg
adc
shr
xchg
push
std
mov
jle
mov
imul
call
(bad)
call
jmp
or
rol
mov
push
and
and
jge
jns
pop
into
movs
scas
add
(bad)
call
cmp
cmp
dec
cmc
cmp
pop
cs
push
or
mov
call
ins
pop
mov
in
mov
xor
pushf
mov
jge
mov
std
(bad)
mov
ins
clc
(bad)
jg
cmp
cs
push
or
in
loop
mov
(bad)
mov
xchg
mov
cmps
push
dec
xor
mov
iret
or
sar
jmp
clc
(bad)
or
xchg
les
adc
and
popf
neg
and
jae
(bad)
(bad)
jmp
shl
lods
mov
(bad)
pop
sub
push
retf
std
sub
pushf
in
cmp
jmp
xor
sbb
xchg
cmp
sub
inc
pop
cli
loope
fist
jmp
repz
mov
cmp
aas
xor
sub
dec
(bad)
(bad)
(bad)
jmp
clc
sahf
jmp
mov
sub
mov
test
adc
xchg
xchg
test
inc
(bad)
jg
jmp
push
outs
push
movs
and
mov
jns
or
int
cmp
dec
push
mov
into
icebp
sahf
mov
fwait
enter
(bad)
jg
(bad)
mov
test
jle
inc
bound
cli
leave
arpl
dec
sub
push
fnstenv
loopne
sub
into
jnp
cld
jns
adc
(bad)
(bad)
jmp
test
sti
aad
pop
movs
aam
pushf
mov
jo
push
inc
int
movs
(bad)
(bad)
jmp
imul
push
(bad)
movs
mov
mov
mov
mov
(bad)
jmp
test
mov
out
lea
dec
into
xor
dec
push
imul
inc
sub
xchg
jbe
pop
adc
sbb
scas
sahf
int
xchg
inc
(bad)
(bad)
mov
test
inc
xchg
or
xchg
xchg
lock
jmp
jmp
movs
and
call
mov
cld
aad
fdivr
hlt
and
pop
loopne
pusha
add
mov
cmp
ins
mov
repz
inc
mov
jmp
es
call
hlt
das
shr
call
xor
pop
(bad)
(bad)
(bad)
push
leave
jbe
iret
xchg
xor
lahf
test
hlt
add
out
pop
lods
mov
(bad)
or
(bad)
push
stos
add
ins
sbb
cmp
push
pop
js
push
stc
and
ja
outs
sahf
adc
cli
inc
mov
cld
jmp
sbb
(bad)
cld
mov
ficom
call
stos
mov
fdivp
xchg
pop
test
xchg
pop
sub
cmc
push
clc
inc
xor
ret
setge
(bad)
call
mov
(bad)
xchg
jmp
push
inc
mov
sbb
test
and
sar
pop
std
(bad)
cmp
fwait
pop
dec
pusha
ds
or
cdq
or
or
ins
call
pop
(bad)
call
fwait
sbb
xor
xor
(bad)
(bad)
(bad)
jmp
mov
xchg
in
repz
das
pop
xor
adc
fld
retf
(bad)
(bad)
call
lea
je
dec
(bad)
pop
aaa
outs
pop
or
jg
out
or
cmps
popf
adc
(bad)
cmc
fwait
xor
xchg
pop
ds
ret
pop
mov
adc
sbb
push
(bad)
mov
sar
out
pop
cmc
call
jae
in
mov
lock
(bad)
(bad)
push
and
in
adc
or
in
dec
mov
movs
test
lods
inc
movs
add
mov
(bad)
mov
mov
std
pushf
into
push
loopne
(bad)
aas
fcmovnu
fidiv
(bad)
int3
(bad)
(bad)
(bad)
call
retf
push
cmps
push
leave
push
outs
pop
std
enter
repnz
mov
call
icebp
std
jmp
hlt
rcl
scas
retf
pusha
(bad)
dec
stos
imul
pop
neg
in
bound
xor
xchg
(bad)
(bad)
(bad)
(bad)
cli
retf
pop
clc
jmp
push
sbb
shr
or
adc
mov
dec
mov
je
(bad)
(bad)
(bad)
call
cmps
dec
sahf
lods
mov
das
sbb
ja
int3
dec
and
imul
sbb
(bad)
(bad)
call
test
stos
call
loop
mov
outs
test
cmps
pop
mov
xchg
inc
cmp
(bad)
jmp
push
cmc
je
popa
and
inc
xchg
into
lds
into
cmp
adc
jg
call
dec
push
jecxz
arpl
jmp
dec
int3
repz
jle
movs
push
fld
hlt
jmp
sub
mov
test
cmp
movs
out
sahf
ret
xor
xor
es
sar
cld
pop
fs
or
xchg
or
push
lock
adc
and
(bad)
(bad)
(bad)
jmp
leave
dec
imul
push
and
inc
pop
mov
repz
fdivr
jg
call
cmps
mov
cmps
mov
enter
add
jnp
outs
xchg
push
(bad)
(bad)
(bad)
jmp
enter
push
jmp
mov
cli
fidiv
hlt
les
neg
call
sbb
inc
jae
mov
mov
les
ret
pop
pop
dec
test
cmp
(bad)
dec
cmc
push
lods
sahf
xchg
jae
mov
xlat
dec
mov
int
jecxz
cmp
jbe
mov
push
sub
fdiv
idiv
shr
pop
mov
lods
fs
in
retf
sbb
outs
or
dec
shl
xchg
test
inc
inc
cmp
sub
push
sar
adc
pop
xchg
push
fs
push
aam
cmp
mov
jg
xchg
retf
adc
gs
lahf
(bad)
(bad)
(bad)
(bad)
jns
cmps
ja
call
fiadd
pop
jp
xchg
(bad)
cmps
xchg
(bad)
push
loop
push
push
(bad)
(bad)
(bad)
inc
xor
xchg
fstp
mov
inc
scas
pusha
jnp
fwait
push
sbb
lds
push
retf
rcr
xchg
in
cmps
xchg
xchg
mov
test
pcmpeqb
mov
test
or
lock
jge
ins
mov
cwde
fstp
sahf
rol
xlat
cmc
mov
test
push
xor
xchg
add
mov
mov
aam
jb
pop
loopne
dec
cmp
(bad)
out
pop
push
xchg
mov
outs
sbb
stos
mov
fmul
adc
cmps
or
pop
cmps
(bad)
jmp
scas
inc
xchg
adc
push
cmps
xor
retf
mov
in
xchg
inc
adc
adc
pop
std
sub
mov
xor
mov
cmp
xchg
ds
mov
jns
sbb
(bad)
(bad)
(bad)
(bad)
mov
cli
inc
fild
pop
sub
push
inc
loopne
push
test
push
mov
(bad)
fisttp
jo
xchg
xchg
jp
inc
inc
mov
push
inc
dec
test
mov
jl
ret
xor
jmp
or
pop
stos
or
popa
pop
dec
sub
xor
push
dec
xlat
pop
jge
test
call
fs
not
xor
cmp
jns
adc
retf
mov
and
outs
push
jno
(bad)
in
xor
cmp
pushf
cmp
jmp
in
cwde
int
mul
test
mov
jmp
inc
aas
leave
inc
inc
mov
inc
fnstenv
push
fs
stos
test
call
retf
xor
adc
dec
jp
repnz
pusha
out
sbb
dec
test
sub
(bad)
(bad)
(bad)
jg
lea
jb
xor
inc
clc
test
ret
jns
ret
inc
or
push
(bad)
(bad)
(bad)
push
push
sub
adc
inc
jp
cmp
inc
sbb
or
mov
mov
inc
ins
adc
push
push
mov
(bad)
(bad)
inc
movs
enter
jl
dec
mov
imul
fisttp
(bad)
outs
das
xchg
(bad)
jge
jmp
xchg
out
clc
call
rcl
jo
aaa
adc
sti
iret
xchg
push
add
jne
cmp
(bad)
(bad)
dec
lahf
rcr
cmp
push
(bad)
ds
not
(bad)
lahf
mov
sub
pop
fiadd
lea
mov
add
stos
xchg
sbb
js
fs
adc
pop
and
lock
push
xor
movs
sbb
or
jbe
repnz
sbb
loope
cmp
jg
(bad)
dec
lods
out
jmp
popf
adc
stos
mov
inc
adc
or
(bad)
mov
xchg
mov
sub
jmp
(bad)
(bad)
(bad)
dec
cmp
cli
dec
rcr
fldcw
jle
fcmovnb
sahf
jl
jmp
loop
fnstsw
rol
pop
jnp
scas
mov
xor
sub
cmovne
cli
push
jae
(bad)
(bad)
(bad)
dec
test
add
inc
adc
fild
push
or
xchg
imul
push
jns
mov
outs
pop
lock
call
call
push
stos
cmp
adc
dec
or
mov
lods
or
jl
std
(bad)
(bad)
(bad)
push
ja
or
sub
fld
gs
inc
push
mov
das
jge
(bad)
(bad)
(bad)
call
dec
cli
and
add
je
dec
and
cmps
inc
test
pop
popf
(bad)
(bad)
(bad)
jmp
xchg
ret
sub
test
ins
movs
or
dec
inc
loope
dec
sbb
and
pop
(bad)
(bad)
(bad)
inc
and
xchg
push
xor
add
mov
push
sbb
push
mov
jge
leave
(bad)
mov
xor
movs
adc
mov
mov
and
shl
push
call
call
imul
cmp
loopne
mov
jmp
inc
mov
idiv
add
push
nop
jbe
pop
sub
jno
(bad)
in
(bad)
jmp
dec
sub
pusha
sahf
daa
rcr
ficom
lea
push
(bad)
push
mov
mov
das
jno
xor
loop
inc
ja
adc
stc
loopne
nop
cmp
and
push
stos
jg
cmc
pusha
daa
jp
ins
out
jge
sub
mov
jnp
pop
xchg
daa
cmp
aas
pushf
retf
push
push
adc
daa
sti
fwait
fwait
rol
(bad)
(bad)
(bad)
cli
mov
repnz
dec
out
js
sub
aaa
jecxz
mov
mov
jo
cmp
jo
(bad)
jg
jle
fdiv
push
sti
mov
rcr
pop
adc
aam
iret
mov
(bad)
(bad)
and
and
les
loope
popa
or
ja
push
hlt
shl
mov
xchg
(bad)
inc
fst
(bad)
sub
inc
or
fwait
xchg
fcmovbe
rcr
jb
arpl
cli
pop
js
js
scas
xchg
dec
add
(bad)
jmp
arpl
inc
sbb
scas
fwait
sub
rcr
add
mov
pop
shr
inc
jp
mov
leave
sub
(bad)
inc
int
dec
pop
sbb
inc
push
retf
das
outs
test
jae
pop
xchg
call
std
jmp
lock
dec
push
sbb
fdiv
addr16
mov
(bad)
push
adc
mov
jnp
add
pop
mov
adc
mov
test
xchg
(bad)
(bad)
call
int
jnp
mov
movs
inc
sti
cdq
jb
enter
shl
pusha
into
cmp
scas
push
ficom
mov
test
sub
or
fld
retf
daa
icebp
stos
jo
push
les
sar
cld
inc
call
in
add
(bad)
(bad)
(bad)
push
dec
call
inc
sub
xchg
nop
ret
xchg
xchg
(bad)
inc
cmp
pop
movs
dec
ja
adc
(bad)
(bad)
(bad)
inc
div
lds
gs
jecxz
mov
add
push
mov
fcomp
sub
mov
dec
jecxz
xor
sub
stos
pushf
loop
ss
dec
loope
sbb
lahf
(bad)
(bad)
(bad)
call
ins
jp
data16
add
mov
mov
std
int3
or
xor
imul
aaa
pop
push
das
pop
ja
aam
or
cmp
fdivrp
int3
sub
data16
lock
mov
cld
(bad)
call
inc
(bad)
sbb
aam
mov
cmp
adc
daa
pop
icebp
call
pusha
or
dec
xor
neg
outs
adc
bound
mov
hlt
arpl
(bad)
(bad)
dec
dec
loope
pop
das
push
ret
mov
imul
mov
push
rol
jmp
bound
xor
cmp
mov
inc
imul
push
lock
(bad)
mov
inc
(bad)
(bad)
(bad)
(bad)
jle
ss
sub
addr16
or
sar
and
adc
push
and
daa
push
xor
push
push
and
jne
(bad)
push
pop
cmps
mov
mov
jge
push
idiv
call
(bad)
(bad)
ficom
mov
fs
inc
cmp
pop
cmps
adc
add
stos
scas
test
push
sub
xchg
xchg
stos
cmps
dec
or
fucomip
mov
mov
repnz
out
adc
cmps
gs
es
pop
jle
mov
cmp
(bad)
(bad)
in
mov
popa
cli
add
mov
cwde
cdq
clc
int
imul
dec
dec
push
dec
adc
sbb
out
das
out
in
cli
int
iret
movs
xchg
fs
cdq
fs
ja
dec
es
dec
xor
mov
jmp
shl
add
rcr
xchg
out
pop
mov
(bad)
(bad)
(bad)
jmp
jae
ins
cmp
movs
push
in
sub
mov
xchg
lds
xor
jle
sbb
icebp
mov
pop
mov
pop
jae
stos
call
mov
std
jae
pop
(bad)
std
call
or
enter
dec
inc
pop
retf
(bad)
xchg
outs
jge
(bad)
(bad)
call
mov
sub
mov
cmps
mov
(bad)
(bad)
(bad)
push
popa
pop
fcomp
addr16
mov
movs
sub
sbb
dec
out
mov
sub
mov
inc
and
dec
inc
cmps
inc
stos
iret
fcomp
pop
cdq
out
not
jno
push
inc
ins
fiadd
(bad)
(bad)
call
mov
and
mov
mov
(bad)
(bad)
push
dec
shl
(bad)
and
xchg
xor
push
fstp
(bad)
(bad)
mov
cmps
jg
dec
add
test
test
mov
jmp
jno
in
(bad)
(bad)
jg
or
adc
push
test
cmp
(bad)
cwde
ins
or
push
aad
(bad)
jg
loopne
push
aam
fisub
jnp
sbb
lods
add
sar
(bad)
push
cwde
push
ins
mov
add
push
mov
adc
add
lods
push
push
xchg
mov
(bad)
call
jp
and
cmp
outs
sbb
and
bound
out
fisub
test
inc
inc
repz
adc
mov
out
(bad)
clc
adc
add
ja
cdq
add
(bad)
call
pop
mov
jmp
push
call
dec
pushf
adc
inc
dec
gs
pop
cmc
(bad)
jmp
popf
stos
adc
enter
outs
(bad)
das
push
mov
fld
xchg
sub
(bad)
(bad)
mov
outs
dec
les
aaa
pop
sub
loop
fucomip
fnstsw
jl
(bad)
(bad)
(bad)
call
dec
addr16
mov
fsub
imul
cmp
in
fidivr
(bad)
(bad)
dec
and
mov
pop
sbb
sub
jb
or
xchg
push
call
(bad)
(bad)
(bad)
(bad)
cld
lock
scas
pop
dec
xor
gs
jp
push
cmp
lds
in
jg
(bad)
call
jmp
or
mov
push
pop
mov
dec
and
(bad)
(bad)
jmp
retf
ss
aaa
lods
pop
nop
xchg
xor
das
adc
sub
(bad)
fldl2t
ins
dec
(bad)
(bad)
(bad)
inc
sub
xor
enter
mov
movs
mov
outs
sbb
cli
mov
jnp
std
jns
push
and
(bad)
(bad)
(bad)
call
dec
xchg
dec
push
xor
ror
inc
lock
ss
jbe
sub
mov
sub
push
xchg
inc
div
mov
mov
pusha
mov
clc
fcomip
dec
mov
fldenv
test
inc
ds
and
call
or
fld
fist
ud0
call
iret
rcl
into
dec
ret
inc
xchg
repz
xor
xor
lds
(bad)
(bad)
(bad)
dec
dec
ja
jns
iret
mov
cmp
jmp
ss
and
clc
(bad)
(bad)
inc
xchg
loopne
call
mov
pop
xchg
fucomi
xor
(bad)
call
shr
mov
xchg
shl
push
in
sbb
(bad)
(bad)
call
or
mov
in
test
sbb
push
adc
xchg
lea
pop
mov
(bad)
jg
lds
mov
dec
movs
xor
adc
push
mov
sbb
inc
push
mov
fdiv
(bad)
dec
movs
popf
cmp
outs
stc
(bad)
fdivr
and
into
jmp
in
mov
(bad)
(bad)
(bad)
jmp
xor
push
sbb
xchg
mov
retf
dec
push
jb
sub
mov
cmp
push
jmp
dec
(bad)
inc
pop
mov
push
ins
(bad)
xchg
sbb
push
mov
(bad)
(bad)
dec
xchg
dec
dec
and
adc
add
xor
pop
mov
fdivrp
ficomp
xor
dec
or
(bad)
jmp
and
sub
cli
sub
popf
out
sti
into
jge
xor
fdivrp
(bad)
(bad)
(bad)
cli
push
out
jle
call
push
mov
pop
jmp
inc
xor
(bad)
sbb
data16
mov
mov
outs
outs
mov
(bad)
(bad)
jmp
jne
ret
outs
cld
(bad)
mov
and
adc
xlat
sahf
movs
fist
or
(bad)
fistp
and
jb
xor
xor
cmovne
xchg
cli
mov
dec
and
imul
fild
or
call
xchg
mov
jb
cmp
sbb
out
stc
cld
jo
int3
sar
push
mov
outs
xor
out
out
mov
fsubr
xchg
int3
(bad)
(bad)
(bad)
jg
rol
fistp
push
dec
movs
sbb
or
dec
and
jl
(bad)
(bad)
jmp
inc
push
pop
lods
(bad)
xlat
pushf
and
rcl
std
repnz
je
sub
daa
xor
loope
pop
loopne
outs
(bad)
inc
in
popa
lods
in
push
cmp
mov
scas
sbb
mov
call
jns
or
fistp
es
rcl
shl
(bad)
inc
fadd
(bad)
rcl
aad
movs
and
outs
pushf
xchg
std
(bad)
(bad)
call
icebp
repz
mov
data16
(bad)
sub
mov
sub
loope
loopne
push
or
popf
icebp
mov
(bad)
(bad)
call
push
in
xchg
js
sbb
inc
repz
shl
aad
push
int3
mov
(bad)
jg
sbb
dec
mov
lods
push
data16
divps
jl
in
pop
xlat
pop
outs
mov
jmp
(bad)
arpl
mov
mov
shr
inc
mov
or
mov
push
movs
stc
test
jae
mov
and
or
mov
pop
and
push
das
push
ret
pushf
mov
(bad)
cmp
inc
xor
popa
fiadd
pop
lds
xor
push
or
mov
cld
add
adc
sub
or
push
xor
(bad)
call
add
mov
cdq
retf
enter
es
inc
loopne
mov
(bad)
(bad)
(bad)
mov
lods
loop
xchg
cld
leave
stos
cmps
ins
xor
scas
imul
loopne
rcr
sub
push
data16
sub
mov
or
int3
adc
lods
outs
mov
mov
nop
mov
sbb
and
and
popa
sbb
or
stos
mov
mov
pop
(bad)
(bad)
call
mov
dec
shl
add
pop
mov
fwait
mov
mov
xchg
sub
bound
(bad)
(bad)
(bad)
(bad)
fsub
movs
mov
mov
adc
dec
jle
js
inc
(bad)
pop
jmp
jecxz
add
jmp
int
pop
imul
shl
pop
loope
mov
in
cs
dec
(bad)
dec
xor
inc
js
popf
xor
repz
or
(bad)
clc
(bad)
loop
(bad)
(bad)
in
adc
cmp
jb
scas
or
jmp
stc
loope
imul
fnsave
(bad)
(bad)
(bad)
(bad)
aas
clc
rcr
dec
pop
cwde
xor
xlat
jbe
add
adc
popf
xchg
(bad)
call
jge
cli
jmp
mov
pop
pop
mov
push
sbb
popa
sar
add
call
mov
mov
ins
cli
popf
out
mov
call
(bad)
jmp
mov
cmps
in
pop
or
xchg
in
out
sar
xor
pop
cli
sbb
loopne
addr16
mov
loop
cld
stc
push
cmps
jnp
movhps
(bad)
jmp
retf
adc
pop
pop
ins
push
cmp
or
into
sbb
push
fdivr
jb
scas
cld
call
loopne
dec
mov
mov
scas
mov
mov
sub
lods
adc
shl
xchg
bound
mov
ins
(bad)
(bad)
(bad)
dec
xchg
prefetch
ret
xchg
sub
nop
or
dec
hlt
data16
jb
mov
test
test
call
inc
daa
inc
sbb
arpl
mov
push
and
mov
(bad)
(bad)
jle
cmp
icebp
in
addr16
mov
xchg
(bad)
iret
cmp
shr
sbb
(bad)
call
xchg
add
cmps
repnz
sub
adc
mov
xchg
sbb
repnz
(bad)
(bad)
jmp
dec
dec
or
jns
and
aas
mov
addr16
fstp
je
ret
(bad)
(bad)
(bad)
call
test
push
mov
out
xor
cmp
jl
ret
stos
dec
test
fisttp
(bad)
(bad)
inc
mov
xchg
adc
cmp
ret
imul
(bad)
(bad)
jmp
mov
xor
hlt
xor
in
mov
mov
cmp
pop
cmp
loopne
jg
cmp
ss
rcl
mov
iret
fsubp
aad
inc
lock
div
ds
(bad)
(bad)
out
enter
push
fld
call
inc
mov
push
jno
sub
(bad)
(bad)
(bad)
fcom
xor
shr
or
popf
aaa
inc
pop
lahf
xchg
aam
hlt
push
cs
call
mov
pop
xor
les
adc
mov
mov
sub
cmp
(bad)
push
mov
and
dec
inc
mov
xchg
jge
sub
retf
jecxz
imul
pop
fsub
adc
mov
in
cwde
dec
add
and
jle
jmp
(bad)
cdq
lock
sub
bound
data16
mov
sub
popf
push
test
loopne
hlt
pushf
or
or
push
(bad)
aad
dec
std
and
in
dec
daa
mov
xor
test
inc
call
dec
mov
adc
fcmovnb
dec
sub
xlat
mov
mov
(bad)
fcomip
cmp
scas
out
or
cmp
sar
jns
(bad)
(bad)
or
(bad)
inc
repz
ret
xor
jp
shl
rcl
mov
jnp
aas
inc
jmp
call
daa
mov
or
push
popa
sbb
stc
sar
test
cli
(bad)
in
(bad)
call
leave
rcl
imul
ficom
xchg
loopne
dec
or
jns
dec
sub
xchg
jno
adc
mov
and
rol
cmps
jns
or
add
and
clc
(bad)
xor
and
(bad)
xchg
push
inc
sbb
call
inc
ins
add
fucomip
test
enter
mov
adc
xchg
mov
(bad)
(bad)
call
loope
sub
xor
js
mov
inc
xchg
dec
(bad)
(bad)
(bad)
(bad)
cmp
inc
ja
push
les
adc
sub
mov
push
sub
in
stos
jb
push
jmp
ror
xor
dec
and
sub
retf
and
pop
adc
mov
(bad)
(bad)
(bad)
jmp
aam
lahf
test
xor
fwait
pusha
cmp
inc
xchg
call
sub
das
cli
or
outs
and
cmps
imul
cmp
or
fcomip
jmp
inc
add
bound
inc
sub
mov
cwde
inc
cmc
ret
test
test
push
or
fucomi
jns
dec
stos
fistp
int3
lea
push
sub
add
or
cmp
movs
or
dec
jl
adc
cmp
jb
jecxz
(bad)
(bad)
(bad)
jmp
or
push
pop
dec
adc
sbb
xor
push
loopne
xchg
sub
jae
loopne
cmp
(bad)
jmp
pop
mov
ror
sbb
jge
xchg
and
js
adc
mov
(bad)
jmp
pop
dec
or
push
cs
lea
popf
popf
imul
jge
idiv
hlt
(bad)
push
mov
loopne
sti
ficom
add
in
test
or
jge
sbb
in
ret
mov
mov
rcr
inc
xor
push
lods
inc
and
rol
(bad)
cmp
(bad)
(bad)
(bad)
call
and
push
mov
shr
mov
mov
call
je
rol
jle
mov
mov
lods
jo
jmp
mov
retf
(bad)
(bad)
(bad)
jmp
das
int
pop
aaa
ds
mov
(bad)
jmp
fwait
pop
push
inc
aad
pop
(bad)
(bad)
(bad)
mov
sysenter
fwait
lods
xchg
pop
call
cmps
fnstenv
push
scas
mov
(bad)
call
popf
and
movs
cld
mov
xor
sbb
push
fldenv
(bad)
(bad)
mov
and
xchg
mov
jne
pop
stos
sbb
fstp
fisttp
clc
(bad)
(bad)
(bad)
mov
cmp
dec
dec
xor
shl
push
scas
fcmovbe
push
mov
or
xchg
(bad)
(bad)
out
stos
xor
stos
dec
fsubr
mov
jbe
add
sbb
in
and
or
jns
push
pop
and
and
dec
inc
inc
nop
pop
xchg
inc
inc
sbb
cdq
std
(bad)
(bad)
push
(bad)
out
mov
ds
inc
push
cmp
xlat
xchg
push
vunpckhps
(bad)
(bad)
mov
xor
fst
push
push
xchg
into
in
or
and
stos
and
or
xor
fs
inc
mov
push
mov
call
call
mov
js
mov
mov
sub
(bad)
jmp
dec
jmp
adc
test
pop
adc
xor
pop
dec
jecxz
stos
or
mov
inc
scas
sub
mov
lock
pop
mov
fbld
xchg
lods
add
(bad)
(bad)
(bad)
mov
(bad)
pop
xor
cmp
test
adc
daa
mov
aad
push
out
std
(bad)
dec
fcomp
xor
je
out
adc
mov
loopne
mov
jmp
jl
in
push
pop
daa
push
lds
mov
cmp
retf
jns
call
loopne
movs
outs
stos
xchg
push
mov
in
push
push
add
out
sub
repnz
(bad)
(bad)
jmp
inc
push
jb
push
lods
lock
or
xor
pop
adc
adc
out
add
(bad)
(bad)
inc
adc
ret
cmp
push
nop
jb
mov
ins
loopne
aas
mov
out
std
fdiv
sbb
jnp
das
cli
inc
mov
ret
jne
jae
data16
mov
call
call
inc
jle
xchg
jmp
lahf
sbb
cmp
xchg
jp
cld
stos
pop
jb
call
push
popf
mov
jmp
mov
das
clc
int3
rcr
jmp
sub
call
adc
jne
std
xchg
cli
(bad)
push
add
sub
xchg
or
fdivr
mov
fidivr
scas
(bad)
iret
pxor
jno
push
in
mov
std
loop
push
(bad)
repz
sbb
add
pop
or
rol
push
push
test
mov
ds
dec
xor
mov
and
cs
test
jge
int
cmps
iret
pop
(bad)
(bad)
cmc
pop
cmps
(bad)
fiadd
inc
aaa
xchg
dec
arpl
(bad)
(bad)
(bad)
jmp
push
int3
jmp
call
inc
lock
into
add
cmp
aaa
fst
(bad)
mov
scas
repnz
nop
fidiv
outs
(bad)
jmp
(bad)
(bad)
jg
ds
add
enter
push
mov
and
movs
shr
stos
out
jnp
(bad)
(bad)
(bad)
call
sub
enter
in
sub
pusha
sbb
inc
inc
sbb
test
(bad)
(bad)
push
or
lods
push
lahf
outs
sbb
pop
add
shl
fs
adc
sbb
add
dec
dec
mov
jmp
dec
pop
ret
movs
loope
pop
lods
xor
(bad)
fisttp
pop
dec
add
push
xor
icebp
(bad)
fistp
call
retf
lods
mov
xchg
mov
mov
(bad)
(bad)
(bad)
dec
jbe
mov
or
mov
pop
and
cmp
sub
adc
mov
jo
inc
mov
data16
adc
mov
(bad)
(bad)
dec
and
lods
dec
push
ror
or
and
cld
fcomp
sub
fistp
(bad)
call
dec
stos
mov
inc
dec
mov
push
aam
movs
jbe
out
(bad)
xor
(bad)
(bad)
(bad)
dec
push
dec
push
cmc
scas
sbb
jp
ret
arpl
ret
cmps
imul
call
xor
mov
pop
cli
aam
popf
rcl
jns
aam
sbb
(bad)
(bad)
jmp
adc
jne
lods
(bad)
test
pop
jbe
fcmovb
cld
cld
ins
mov
xor
(bad)
inc
cld
push
sub
repnz
mov
sub
(bad)
repz
loopne
movs
stos
ins
or
call
pop
mov
sbb
cmp
test
gs
pop
loopne
mov
or
leave
xor
fwait
push
aas
xor
in
and
mov
mov
(bad)
jmp
test
into
pop
mov
xchg
test
jge
loope
stos
jb
scas
ror
std
(bad)
(bad)
call
popf
push
jae
mov
sbb
cmps
shl
iret
ror
idiv
shr
add
loope
jg
dec
retf
pop
pop
push
mov
aam
neg
ins
pop
(bad)
(bad)
jmp
mov
into
xchg
sub
cmps
push
lods
push
push
fadd
pop
daa
dec
xchg
shl
(bad)
(bad)
(bad)
mov
in
pop
and
cmps
inc
push
sbb
packssdw
popf
aas
stos
xchg
ins
push
clc
(bad)
(bad)
(bad)
mov
(bad)
xor
cmp
pop
inc
ret
cmp
gs
in
(bad)
jmp
push
mov
mov
dec
popf
xor
dec
repz
pop
cdq
scas
pop
(bad)
(bad)
jg
arpl
(bad)
mov
inc
dec
std
test
and
js
js
pop
shl
xor
(bad)
(bad)
(bad)
jmp
inc
hlt
push
faddp
and
cmp
and
push
(bad)
or
add
mov
add
pop
cmc
(bad)
stc
arpl
push
loopne
adc
fs
movs
xor
loop
dec
sbb
test
(bad)
call
xchg
and
jl
xchg
lahf
mov
pop
das
popf
mov
sub
and
or
je
inc
in
in
mov
xchg
fild
(bad)
inc
jg
add
int3
clc
addr16
call
push
jmp
mov
mov
call
xlat
scas
movs
nop
aam
into
(bad)
call
jno
cmp
push
mov
(bad)
(bad)
(bad)
jg
ins
or
repz
retf
movs
call
(bad)
lahf
stos
push
sub
aad
xchg
hlt
outs
sub
aas
in
outs
pop
dec
push
loope
test
les
ror
(bad)
inc
sbb
shr
mov
pop
and
and
loop
sub
rcr
(bad)
(bad)
(bad)
(bad)
in
pushf
fisttp
psrad
fnstcw
std
(bad)
jo
ror
xor
mov
(bad)
(bad)
(bad)
(bad)
jmp
inc
sub
jmp
in
push
pop
jae
movs
fucomp
hlt
push
stos
in
(bad)
(bad)
(bad)
jg
out
pop
fnstsw
(bad)
leave
mov
cmp
test
(bad)
call
dec
sbb
mov
pop
jle
lock
cs
(bad)
cmc
(bad)
(bad)
(bad)
call
out
ss
(bad)
ss
mov
mov
loope
rcl
ins
pop
pop
popa
and
pop
mov
inc
mov
push
aam
fs
enter
sub
and
imul
mov
icebp
(bad)
out
jmp
cmc
movs
gs
jg
pop
fidiv
ja
int
xor
shr
pop
clc
or
lock
or
pop
jo
push
repz
push
loopne
dec
lods
ret
bound
(bad)
(bad)
out
cmps
sbb
push
sbb
mov
xchg
xor
test
imul
jmp
or
mov
gs
adc
push
in
lods
js
or
jg
imul
(bad)
inc
sbb
cdq
jmp
lds
ds
dec
jno
enter
cmps
xor
adc
rep
(bad)
(bad)
(bad)
jmp
ror
and
sbb
adc
xor
sbb
and
mov
(bad)
(bad)
jmp
dec
leave
xor
mov
sub
adc
add
les
pop
fcom
(bad)
jmp
inc
aaa
push
or
cmps
xchg
std
inc
mov
call
cmps
inc
adc
sub
into
adc
call
adc
lea
popa
push
or
mov
fild
jg
ds
fisub
mov
dec
scas
push
jmp
jmp
mov
push
push
(bad)
call
mov
ret
jmp
xchg
fsubr
es
or
adc
dec
mov
(bad)
(bad)
call
dec
cmp
sub
iret
cmp
mov
dec
and
(bad)
call
sbb
mov
pop
int3
out
or
jno
ds
or
movs
fptan
(bad)
(bad)
(bad)
(bad)
dec
sbb
sti
out
lods
or
fld
imul
xlat
call
call
xchg
mov
pop
xor
retf
mov
xchg
(bad)
sti
dec
(bad)
(bad)
push
cmp
xchg
fild
add
push
stos
dec
cmp
arpl
(bad)
(bad)
dec
push
jae
xchg
ror
push
test
add
pop
inc
jnp
das
xchg
cmp
call
into
jb
pushf
pop
call
pop
mov
pop
sub
call
mov
inc
stos
sub
aam
scas
adc
dec
dec
mov
je
test
jne
in
repnz
out
(bad)
(bad)
(bad)
jmp
fs
in
iret
mov
rol
out
dec
adc
cmp
fiadd
and
stos
sbb
call
div
adc
mov
loop
mov
dec
pusha
sbb
sub
jle
imul
(bad)
(bad)
(bad)
(bad)
mov
popa
mov
mov
cmps
call
retf
mov
dec
fistp
repnz
jb
push
(bad)
mov
xor
adc
dec
sti
xchg
inc
dec
and
sub
(bad)
(bad)
inc
leave
pop
sbb
fcom
loopne
pop
add
out
add
jmp
pop
cwde
cmp
add
sbb
loopne
dec
hlt
ss
or
mov
enter
mov
dec
pusha
sub
(bad)
(bad)
mov
ret
jmp
fadd
ret
sbb
dec
xchg
daa
cmp
(bad)
dec
mov
popa
mov
in
ret
jb
sti
test
sub
std
(bad)
(bad)
jmp
lods
retf
aas
fisttp
repz
idiv
jmp
lock
lock
push
scas
mov
cli
cmp
call
pop
sub
or
test
loope
ins
ss
add
adc
pop
mov
in
xor
push
add
xchg
push
xchg
lods
cmp
adc
pop
sbb
pop
outs
jmp
popf
in
pushf
(bad)
clc
push
or
mov
inc
jle
(bad)
(bad)
dec
adc
lods
scas
dec
daa
jae
outs
xor
imul
add
(bad)
(bad)
jmp
adc
jnp
mov
clc
mov
mov
or
call
bound
call
mov
push
add
mov
call
mov
mov
lock
mov
jo
aam
add
sbb
stos
and
dec
sbb
adc
mov
mov
cmp
popa
mov
push
pop
jp
adc
loope
aas
mov
or
out
jns
jl
mov
je
inc
jecxz
fs
(bad)
(bad)
(bad)
call
mov
mov
xchg
xor
xchg
into
xchg
cmp
fcomi
ja
mov
outs
(bad)
(bad)
(bad)
(bad)
std
lea
jle
push
jb
sbb
mov
(bad)
add
adc
(bad)
push
ror
or
mov
adc
(bad)
pop
test
push
adc
(bad)
cmp
(bad)
(bad)
(bad)
jg
jmp
scas
in
fidiv
jmp
inc
adc
xchg
fdiv
xor
or
jmp
push
or
arpl
xchg
inc
cmp
mov
call
push
(bad)
cmc
div
mov
(bad)
add
(bad)
(bad)
(bad)
dec
(bad)
ret
test
inc
mov
dec
add
inc
jo
inc
push
pop
push
(bad)
(bad)
(bad)
inc
int3
loopne
and
gs
sub
mov
and
shl
and
or
inc
push
bnd
(bad)
(bad)
jmp
and
xchg
lods
repnz
cs
push
hlt
mov
in
test
adc
(bad)
(bad)
jmp
sbb
(bad)
dec
mov
mov
out
mov
push
sbb
adc
(bad)
call
inc
lds
shr
mov
or
je
dec
adc
mov
adc
clc
(bad)
(bad)
dec
mov
push
into
inc
in
mov
xor
js
sbb
xlat
es
ja
cwde
push
dec
(bad)
jmp
dec
inc
adc
lods
les
sbb
(bad)
(bad)
jmp
mov
jo
mov
add
inc
and
stos
sbb
dec
jecxz
push
sbb
(bad)
(bad)
mov
mov
repz
arpl
loop
or
sub
or
(bad)
(bad)
dec
(bad)
cmps
inc
and
out
mov
imul
push
pop
or
loopne
xchg
mov
mov
jno
(bad)
(bad)
jmp
(bad)
inc
leave
sar
out
pop
out
push
ins
jnp
sbb
mov
pop
jg
mov
data16
cmp
mov
(bad)
lock
inc
mov
sbb
sbb
push
lods
shl
(bad)
inc
jg
dec
rol
sar
nop
lds
ss
xchg
bound
add
call
ret
adc
mov
sub
out
cmps
aad
fwait
pop
stos
push
stos
ret
mov
inc
js
(bad)
(bad)
call
fstp
clc
push
gs
mov
out
pop
cmp
(bad)
(bad)
call
bound
fidiv
jbe
mov
daa
inc
cmp
push
pop
imul
mov
pushf
pop
bound
push
out
retf
mov
and
push
jp
add
mov
in
(bad)
(bad)
jg
cs
fs
and
add
or
rcl
adc
dec
xor
cli
add
js
(bad)
cmp
loop
fadd
rcl
mov
pop
push
add
pop
pop
mov
add
shr
mov
adc
xchg
movs
(bad)
(bad)
(bad)
call
pop
loope
sub
ja
ret
js
out
and
cdq
push
(bad)
aad
dec
lds
(bad)
inc
fwait
mov
sub
xchg
xchg
nop
adc
mov
mov
xchg
fs
cmps
add
(bad)
(bad)
(bad)
jmp
das
cmp
inc
into
add
cwde
outs
inc
push
retf
adc
add
xchg
leave
std
retf
jae
test
(bad)
jg
pop
push
xor
xchg
ds
sub
and
adc
jmp
(bad)
(bad)
push
adc
sub
out
pushf
cmp
jbe
hlt
mov
jle
cmp
jg
dec
stc
dec
movs
adc
jge
in
mov
mov
xchg
cmp
fimul
xchg
sbb
push
inc
(bad)
or
xchg
lds
out
(bad)
(bad)
(bad)
inc
movs
inc
or
adc
mov
inc
(bad)
xlat
lahf
das
loopne
and
add
jmp
cmp
xchg
mov
mov
mov
(bad)
jmp
jns
rcl
ds
call
inc
aam
in
adc
add
sbb
mov
(bad)
(bad)
inc
or
cli
dec
adc
dec
pop
xchg
in
jmp
add
popa
(bad)
aad
mov
dec
in
add
xor
mov
stos
(bad)
dec
xchg
pop
fs
mov
(bad)
repnz
loop
icebp
pop
das
or
mov
dec
jg
(bad)
(bad)
(bad)
jmp
xchg
adc
cwde
popa
jne
push
(bad)
add
ja
pop
adc
mov
popa
(bad)
(bad)
(bad)
inc
in
lea
pop
lods
into
fnsave
xor
cmp
loop
cmp
std
les
mov
mov
mov
mov
(bad)
(bad)
call
imul
sar
push
sbb
in
cmp
mov
dec
add
(bad)
fbld
stos
and
sub
fwait
xor
(bad)
(bad)
call
sbb
mov
arpl
push
bnd
add
call
mov
ss
xor
out
jg
sbb
retf
xchg
xor
pop
jbe
pop
lock
outs
leave
out
jbe
jl
ins
mov
ret
inc
test
(bad)
(bad)
push
and
test
xchg
pop
adc
jmp
inc
sbb
test
xchg
inc
(bad)
mov
(bad)
sub
loop
sub
adc
sbb
sub
mov
pop
(bad)
mov
daa
(bad)
(bad)
(bad)
jmp
inc
xchg
data16
push
mov
xchg
mov
pop
xchg
std
xlat
imul
shl
jmp
call
outs
retf
mov
outs
test
push
and
movs
push
(bad)
(bad)
inc
cmc
es
xor
xchg
iret
mov
sub
mov
inc
enter
ret
ds
(bad)
(bad)
jg
js
lds
and
mov
and
mov
add
mov
cmp
mov
dec
cld
xor
shl
dec
jl
leave
rcr
and
xchg
mov
adc
inc
movs
call
cmps
ret
xor
dec
cdq
xor
adc
and
adc
cmp
pop
rcr
dec
cmc
iret
in
xlat
jb
xor
movs
jle
out
sub
sti
leave
cmp
(bad)
inc
(bad)
stos
cmp
push
stc
je
les
push
mov
ret
(bad)
fistp
cmp
je
dec
rol
pop
add
and
pop
dec
idiv
jle
jmp
mov
out
mov
(bad)
(bad)
(bad)
cli
xor
dec
dec
iret
sub
pop
xor
jp
inc
lods
(bad)
loope
cmps
pop
and
out
mov
jmp
adc
xchg
push
int
pop
iret
loopne
pop
mov
(bad)
(bad)
dec
xor
xchg
xchg
jo
pop
jl
xor
or
lds
adc
shr
mov
(bad)
mov
je
aad
or
jne
mov
sbb
ret
adc
(bad)
(bad)
(bad)
cmp
jns
sub
fnstcw
(bad)
aas
idiv
std
outs
popf
pop
mov
(bad)
jg
xor
pop
scas
test
loop
mov
pop
xlat
shl
dec
(bad)
(bad)
jg
aam
ret
add
dec
xlat
cmc
add
cvtps2pi
push
sbb
bnd
imul
aad
out
mov
cld
(bad)
mov
repnz
or
jg
adc
xchg
dec
imul
inc
dec
scas
push
(bad)
(bad)
call
mov
mov
or
ret
sub
jle
(bad)
in
(bad)
repz
(bad)
(bad)
(bad)
jmp
or
adc
nop
inc
push
jl
xchg
mov
iret
sbb
mov
aaa
cld
(bad)
dec
gs
and
xchg
gs
jae
jo
sub
es
add
(bad)
(bad)
call
xchg
adc
add
or
shr
xor
pop
and
mov
mov
or
mov
or
sub
stc
jl
dec
repnz
inc
or
push
inc
xchg
mov
add
inc
retf
aas
or
(bad)
call
in
call
pop
jle
in
dec
jno
stc
cdq
stos
fdivr
cmp
sub
mov
nop
cmps
test
mov
pop
stos
and
mov
jne
stc
pusha
mov
sbb
(bad)
adc
push
in
aas
inc
cld
and
out
mov
mov
pop
cmc
inc
and
das
test
stos
pop
movs
das
xlat
retf
ret
cmp
pop
loopne
sar
stos
mov
out
cmp
in
pop
mov
ret
hlt
(bad)
(bad)
(bad)
cmp
(bad)
test
mov
rcl
or
cs
popf
mov
(bad)
fist
bnd
dec
add
dec
fstp
mov
inc
inc
and
(bad)
dec
enter
jmp
mov
pop
das
fs
and
dec
lds
dec
fs
enter
(bad)
dec
bound
adc
sbb
adc
sar
hlt
aas
call
(bad)
(bad)
(bad)
cld
ficom
(bad)
jmp
mov
test
pop
cmp
imul
push
retf
and
(bad)
push
lods
sti
sbb
sar
(bad)
std
mov
jmp
sub
dec
cmp
pop
pop
ds
(bad)
(bad)
(bad)
out
push
inc
add
lock
pushf
cmp
cmp
(bad)
(bad)
mov
pusha
mov
jbe
push
clc
mov
ja
imul
or
clc
sbb
rol
movs
xchg
hlt
sub
(bad)
jg
(bad)
ds
mov
popf
jge
push
pop
and
pusha
inc
call
pop
pusha
cmp
dec
in
ret
sbb
pusha
fldln2
mov
adc
call
dec
inc
sub
retf
(bad)
jo
mov
mov
and
test
add
call
scas
popf
sub
mov
sub
iret
pop
sub
out
xor
or
ja
call
mov
push
or
dec
xchg
add
adc
jmp
pop
lds
and
add
enter
not
std
inc
xchg
adc
(bad)
(bad)
dec
inc
fnsave
jns
mov
retf
call
cmp
mov
or
lods
aaa
jmp
add
test
jp
pop
lock
sub
adc
xchg
mov
les
jg
adc
inc
movs
pop
aam
jns
clc
aas
fs
mov
(bad)
(bad)
(bad)
call
imul
push
stos
dec
bound
mov
leave
loop
dec
push
xor
mov
sbb
(bad)
(bad)
call
mov
(bad)
cmp
sbb
xchg
mov
(bad)
(bad)
mov
call
lods
int3
loope
(bad)
nop
rcr
pop
lock
leave
fist
xchg
dec
ins
inc
fs
cmp
cmp
add
sbb
call
out
pop
pop
inc
cmp
(bad)
ds
call
jmp
data16
call
cld
fs
(bad)
sub
and
and
mov
adc
int
push
cmp
adc
mov
adc
es
mov
dec
inc
xchg
mov
mov
add
(bad)
push
in
jne
scas
pop
cmp
ins
jbe
int
lahf
aam
arpl
jge
mov
jae
push
xor
(bad)
(bad)
(bad)
jmp
in
sti
popa
mov
into
ins
mov
cli
popf
aaa
iret
cs
mov
dec
(bad)
or
fnsave
(bad)
cmp
scas
sub
xchg
pop
(bad)
push
dec
pop
pop
pop
test
lahf
js
(bad)
je
lods
scas
imul
(bad)
pop
cld
mov
cmp
dec
pushf
mov
mov
push
push
dec
jbe
(bad)
(bad)
(bad)
call
jbe
jecxz
test
mov
rol
imul
ds
pop
into
cmp
retf
ins
mov
or
and
lahf
mov
out
push
jno
sub
pop
adc
add
(bad)
(bad)
dec
or
dec
popa
ret
test
push
xchg
mov
sahf
inc
xchg
cmp
jle
add
(bad)
(bad)
mov
addr16
sub
in
das
sub
mov
dec
and
add
xor
xchg
sbb
(bad)
jmp
cmp
inc
sbb
ret
rcl
pop
mov
sti
xchg
(bad)
inc
mov
les
inc
pop
xor
sbb
push
icebp
push
(bad)
(bad)
(bad)
jmp
int3
jae
test
or
mov
sti
nop
repz
sub
fld
fdivrp
(bad)
(bad)
jmp
dec
aas
stc
ret
aaa
cmp
sub
les
jle
sbb
fild
fwait
pop
imul
(bad)
ds
pop
add
jecxz
sub
pop
stos
sbb
clc
inc
and
sub
sub
jp
sub
jo
mov
dec
test
mov
dec
cmp
sub
adc
cmp
bound
loope
or
lock
out
clc
in
add
push
xchg
pop
test
es
dec
mov
(bad)
(bad)
jg
test
xor
xchg
ret
into
mov
dec
mov
rcl
push
fs
cli
stos
(bad)
(bad)
(bad)
call
or
jno
xchg
push
and
in
out
cmps
cmc
imul
jle
inc
and
sub
dec
dec
and
je
(bad)
push
xchg
lods
scas
inc
push
test
dec
rcl
dec
sbb
mov
call
push
loopne
push
sub
and
imul
fdiv
jae
sahf
stos
(bad)
(bad)
jmp
and
lods
jecxz
xchg
sub
js
call
dec
adc
(bad)
(bad)
(bad)
jmp
push
jae
aaa
test
jmp
shl
out
dec
xchg
adc
adc
rcl
(bad)
call
jle
jle
shl
or
mov
push
push
(bad)
(bad)
(bad)
(bad)
sti
sub
xchg
push
nop
and
lods
dec
adc
cwde
cmps
inc
mov
adc
or
js
movs
(bad)
(bad)
(bad)
dec
dec
dec
js
and
test
lock
pop
sahf
std
cli
imul
dec
or
sub
jmp
(bad)
(bad)
call
xor
das
inc
scas
adc
and
inc
pop
sub
adc
int3
mov
mov
loopne
adc
test
add
je
cdq
imul
push
dec
std
inc
or
hlt
pop
popa
mov
pushf
adc
scas
(bad)
(bad)
(bad)
jmp
das
in
pop
and
(bad)
adc
mov
ret
push
mov
push
(bad)
pusha
lea
push
gs
and
sub
(bad)
out
cmp
or
mov
xchg
loopne
sar
enter
sbb
sbb
(bad)
(bad)
(bad)
(bad)
call
pop
inc
ret
ss
dec
test
iret
adc
cwde
xchg
jno
or
mov
add
push
xor
xchg
mov
int
shl
xor
pop
(bad)
or
jb
mov
(bad)
(bad)
(bad)
jl
jns
xchg
sti
sub
(bad)
or
mov
mov
sbb
or
mov
adc
pop
adc
repnz
(bad)
(bad)
call
sbb
and
push
inc
inc
cmp
mov
cmp
sti
push
fdiv
enter
and
dec
mov
cmc
mov
fisubr
repz
or
(bad)
jnp
adc
xor
rcl
sub
jo
pushf
cmps
(bad)
(bad)
call
or
test
shl
pusha
bound
mov
inc
(bad)
jmp
pop
ss
mov
xchg
cmps
shl
das
dec
arpl
sbb
popf
cmp
inc
arpl
pusha
fs
mov
addr16
xchg
fadd
cmps
pop
add
push
xchg
push
xlat
(bad)
jne
jae
cmps
shr
sbb
call
stos
movs
popa
lods
cdq
mov
sbb
adc
sbb
jmp
adc
es
mov
and
test
fwait
mov
adc
loope
xchg
xchg
imul
rcl
push
pop
jne
(bad)
call
jb
sub
(bad)
xlat
scas
sbb
out
std
addr16
scas
mov
lock
(bad)
jmp
push
dec
fnsave
pop
scas
mov
cmp
sbb
test
loop
(bad)
(bad)
fist
aad
(bad)
fmulp
inc
cs
pop
hlt
or
fwait
push
add
push
lods
xchg
int3
and
(bad)
call
js
arpl
fild
push
mov
clc
adc
and
jmp
popa
mov
ret
sete
loop
jnp
sub
retf
sar
jle
repnz
or
cmps
(bad)
(bad)
(bad)
jmp
loop
sbb
mov
call
in
xor
cs
xchg
adc
xchg
iret
imul
inc
pusha
or
cmc
and
push
mov
add
cwde
rcr
jmp
push
inc
pop
pop
jmp
xor
daa
jnp
pop
jecxz
inc
into
or
cmps
push
push
(bad)
adc
adc
dec
dec
dec
add
adc
pop
adc
jmp
(bad)
retf
hlt
scas
adc
scas
sub
dec
sub
(bad)
(bad)
sti
dec
sub
movs
cmp
mov
or
cdq
add
cmps
les
arpl
aaa
cmp
sbb
ja
sub
push
(bad)
inc
or
repz
out
lock
cmc
push
add
jg
jge
ret
clc
push
pop
sub
fdiv
pop
mov
aas
jp
(bad)
movs
xlat
in
repnz
push
sbb
adc
in
movs
jmp
aam
jmp
(bad)
inc
mov
cmp
dec
ins
mov
xchg
fptan
pop
imul
(bad)
call
jo
and
cli
mov
adc
addr16
das
push
stc
sub
dec
test
nop
clc
(bad)
(bad)
call
add
dec
movs
out
cmps
test
cmps
xor
xor
ret
sub
frstor
outs
dec
dec
cli
retf
cmp
retf
lahf
mov
(bad)
(bad)
(bad)
call
mov
xchg
xor
jl
sti
cmp
mov
jb
xchg
fldenv
push
adc
mov
or
add
neg
nop
and
punpckldq
jns
popf
cmps
(bad)
dec
sub
cli
mov
(bad)
jmp
push
popf
and
push
jb
retf
mov
int
bound
dec
sar
movs
stos
fidiv
stos
push
stos
cmp
xor
cmc
(bad)
(bad)
jmp
dec
shl
mov
stc
imul
fstp
add
push
pop
xlat
pusha
daa
das
(bad)
clc
mov
cdq
pop
push
outs
stos
jecxz
jo
(bad)
fwait
xchg
(bad)
(bad)
call
cmp
scas
lea
fldenv
ss
popf
int
daa
(bad)
(bad)
(bad)
cmp
inc
in
cdq
loopne
push
std
jmp
jo
ins
popa
dec
inc
repnz
adc
xchg
fs
mov
or
jo
aas
(bad)
dec
mov
loope
and
int3
pop
test
stc
mov
lods
ret
(bad)
(bad)
call
out
pop
cdq
test
ds
jmp
lock
mov
stc
cmps
imul
(bad)
jge
push
xor
ds
rcr
xor
sub
or
xchg
adc
mov
dec
add
xor
(bad)
jo
lahf
mov
mov
inc
or
pop
add
mov
pop
xchg
ja
xchg
lock
enter
jnp
(bad)
(bad)
push
sahf
inc
jb
inc
jmp
inc
jo
inc
dec
push
mov
mov
in
jle
jecxz
xchg
scas
dec
(bad)
(bad)
(bad)
jmp
push
or
inc
mov
sbb
jl
mov
pop
popa
aas
and
or
push
addr16
inc
adc
std
call
in
sub
mov
(bad)
pusha
test
clc
adc
popa
adc
dec
cmp
inc
adc
bound
ret
push
hlt
pop
cmc
adc
cmps
scas
ss
pop
push
gs
mov
xor
icebp
(bad)
fbstp
xchg
cmp
and
and
(bad)
push
sub
test
es
shl
or
mov
(bad)
(bad)
(bad)
push
mov
xchg
call
and
sbb
test
sub
fadd
(bad)
(bad)
jmp
mov
pushf
push
add
push
and
dec
or
pop
stc
and
pop
mul
mov
rcr
cmps
mov
loope
cmp
fimul
ja
push
scas
jmp
fdiv
cli
mov
jmp
out
ja
aad
jge
popa
call
imul
enter
mov
(bad)
(bad)
call
pop
dec
dec
ja
jne
lods
rcl
push
adc
scas
jmp
gs
sub
(bad)
(bad)
(bad)
dec
adc
push
push
cdq
movs
jl
pushf
test
inc
ror
adc
jl
add
ret
(bad)
(bad)
(bad)
(bad)
jp
or
adc
jmp
clc
out
cs
dec
push
(bad)
ins
repz
lods
ret
cmps
cs
(bad)
jg
(bad)
cdq
jb
cli
mov
xor
aaa
sub
bnd
dec
dec
das
add
(bad)
(bad)
call
repz
test
jns
cmp
outs
sbb
mov
adc
(bad)
fcmovne
sbb
cmc
mov
cmps
pop
push
mov
mov
fsub
or
(bad)
ins
(bad)
(bad)
(bad)
push
xor
jp
sbb
ret
and
push
ret
arpl
(bad)
push
jns
(bad)
jne
(bad)
(bad)
cmp
pop
push
iret
pop
pop
cmp
cmp
and
in
outs
scas
xchg
push
cmp
jmp
cmp
repz
push
ror
xor
leave
sar
push
pop
retf
shl
inc
and
adc
jmp
scas
pop
mov
and
push
sbb
dec
movs
mov
mov
cmp
(bad)
(bad)
jmp
sub
out
xchg
xor
dec
lods
dec
test
popa
mov
(bad)
(bad)
(bad)
jmp
xor
and
dec
xor
or
hlt
inc
mov
nop
mov
and
add
mov
jnp
or
mov
lahf
jle
out
or
or
out
xabort
movs
aaa
mov
aaa
mov
jg
jg
outs
in
leave
adc
aas
scas
(bad)
inc
mov
sbb
(bad)
(bad)
(bad)
jge
mov
popa
push
xchg
out
add
lock
pop
xor
in
ret
ds
mov
adc
(bad)
(bad)
rcl
nop
popa
repnz
inc
cmp
(bad)
jmp
fcom
daa
jle
jne
mov
rcl
push
pop
int3
test
dec
pop
cs
jne
(bad)
(bad)
and
jp
(bad)
int
popa
jb
pop
mov
pop
adc
or
and
or
inc
loopne
jmp
xor
adc
and
mov
call
and
jmp
dec
sahf
outs
jns
or
xchg
dec
dec
(bad)
(bad)
(bad)
(bad)
inc
lods
aas
mov
dec
sub
jae
add
cmp
xchg
test
adc
(bad)
(bad)
jmp
inc
ds
das
movs
inc
inc
ror
test
leave
dec
sbb
cdq
addr16
dec
inc
adc
lock
das
call
xor
jmp
or
mov
(bad)
(bad)
(bad)
dec
ret
xor
pop
push
sub
loope
xchg
les
cmps
into
pop
out
je
ja
fdivrp
(bad)
(bad)
call
pushf
xchg
pop
cmp
adc
lahf
mov
pop
mov
hlt
fdiv
lods
jmp
retf
sub
pop
(bad)
(bad)
(bad)
dec
fwait
dec
movs
dec
push
jg
push
jne
push
rcl
test
mov
int3
(bad)
(bad)
(bad)
dec
jecxz
es
and
jle
jns
push
loope
mov
pop
aas
mov
outs
repnz
(bad)
(bad)
jmp
popa
xchg
test
jnp
xchg
add
repnz
fdiv
jns
fisubr
pushf
in
jmp
adc
nop
stc
xchg
aas
imul
ss
cld
iret
fild
bound
fldenv
sahf
imul
xchg
(bad)
(bad)
(bad)
push
dec
mov
xor
scas
xor
or
test
lea
(bad)
or
push
(bad)
(bad)
dec
xchg
popa
in
pop
mov
xor
mov
dec
xor
inc
sub
add
xchg
push
xchg
mov
inc
in
inc
sub
popa
jle
and
add
repz
jmp
call
mov
add
neg
jmp
adc
push
bound
ins
icebp
stc
arpl
in
xor
(bad)
(bad)
mov
dec
mov
stos
push
mov
xor
lea
icebp
push
pop
jecxz
in
stc
push
dec
(bad)
(bad)
(bad)
call
icebp
mov
sbb
shl
xlat
push
jbe
sar
mov
and
xchg
sub
(bad)
(bad)
inc
jg
push
retf
or
sub
aad
lock
sbb
inc
adc
test
xchg
(bad)
(bad)
jmp
and
movs
daa
mov
inc
inc
std
dec
mov
and
jmp
cmps
data16
push
std
inc
(bad)
dec
lds
inc
movs
retf
pop
(bad)
jg
(bad)
fucomip
cmp
pop
mov
nop
(bad)
(bad)
jg
add
inc
mov
push
and
in
cmp
jmp
adc
pop
or
mov
inc
pop
imul
stc
bound
enter
(bad)
(bad)
jmp
sub
mov
mov
mov
cmp
pop
jnp
ds
(bad)
(bad)
jmp
outs
movs
cmps
ret
and
mov
test
xlat
pop
test
retf
pop
lods
jg
(bad)
call
push
or
and
test
cmp
test
fcom
cli
call
mov
pop
fisub
pushf
dec
in
add
or
out
cmp
mov
call
push
jne
add
aad
lea
jmp
cmp
push
mov
das
clc
jmp
out
test
xor
inc
jo
pop
jmp
and
jecxz
inc
fst
call
popf
pop
call
(bad)
mov
mov
test
mov
pop
aas
push
xor
je
jo
or
(bad)
jmp
mov
out
lea
inc
retf
mov
lods
dec
xchg
adc
jmp
sbb
outs
shl
xchg
sub
push
inc
dec
adc
imul
xor
(bad)
(bad)
push
(bad)
pop
push
xor
popf
mov
jb
les
daa
(bad)
(bad)
mov
or
sbb
adc
push
or
shr
test
cmp
xor
hlt
mov
xor
aas
cmp
(bad)
call
cmp
ss
or
add
push
nop
inc
xor
or
sub
add
cmp
fadd
std
(bad)
(bad)
call
cmps
sub
cmc
inc
sahf
cmp
cdq
adc
cmp
in
xchg
inc
fs
and
pop
and
(bad)
inc
push
in
mov
lock
bound
fs
into
cmps
and
xchg
or
cli
popf
ret
das
in
inc
(bad)
add
xchg
inc
(bad)
pxor
or
dec
lock
jle
adc
movs
adc
mov
pcmpgtb
sar
(bad)
(bad)
(bad)
sti
std
in
mov
add
mov
and
fwait
pop
cmp
(bad)
mov
clc
repz
mov
fwait
sub
xor
push
stos
xchg
stc
mov
(bad)
inc
mov
jp
jno
loop
cmp
mov
or
cmps
cld
adc
mov
pop
iret
lahf
cmp
call
outs
out
mov
jg
inc
inc
mov
pop
push
movs
inc
sub
mov
test
pop
loopne
add
push
mov
xchg
inc
push
xor
movs
adc
cmp
(bad)
jmp
mov
add
jb
jae
inc
mov
sub
out
adc
(bad)
(bad)
(bad)
call
mov
iret
mov
mov
nop
pop
in
and
aas
jmp
into
repnz
sahf
dec
dec
es
(bad)
(bad)
call
sbb
xor
xlat
push
and
test
mov
inc
dec
(bad)
dec
pop
lods
call
and
jne
loope
or
cmp
add
pusha
dec
(bad)
(bad)
(bad)
jmp
xor
add
iret
movq
mov
push
lods
call
or
dec
mov
(bad)
jmp
xor
loop
sub
test
cmp
retf
hlt
xor
imul
(bad)
jle
ffreep
sub
mov
sub
enter
(bad)
(bad)
(bad)
(bad)
mov
jmp
cli
mov
sbb
in
rol
inc
cmps
push
jmp
jmp
cmps
mov
cmp
shr
dec
outs
fistp
mov
mov
xor
into
pop
pushf
mov
dec
fs
xor
call
hlt
push
movs
push
add
sub
dec
rcr
(bad)
jmp
add
fbstp
push
inc
xchg
daa
lods
mov
test
popf
call
jmp
mov
loope
jle
lods
and
lods
xchg
xor
mov
inc
je
loopne
cdq
call
inc
adc
and
mov
xchg
aaa
cmp
lock
call
out
ret
ret
lea
adc
inc
pop
imul
ins
mov
xchg
test
gs
daa
jns
sub
sub
pop
call
xchg
and
fs
retf
dec
dec
es
inc
dec
movs
scas
fs
retf
popa
xor
pop
xchg
imul
jbe
(bad)
(bad)
(bad)
jmp
ins
mov
cld
mov
adc
and
pop
jne
aas
hlt
sar
(bad)
dec
xor
arpl
mov
cmps
cmp
scas
shr
lock
sub
loop
loopne
(bad)
or
data16
(bad)
(bad)
inc
and
loop
push
xchg
mov
sahf
sub
or
and
call
cmc
add
les
les
sbb
sbb
or
(bad)
(bad)
dec
push
adc
push
adc
adc
xchg
pop
or
xchg
jae
pop
in
retf
cmp
and
(bad)
(bad)
jmp
pop
dec
mov
cwde
movs
dec
lods
xchg
or
imul
xchg
(bad)
sub
sub
cmp
and
or
bound
push
push
or
ret
ret
xor
xchg
(bad)
(bad)
fcomip
ret
inc
lock
xchg
inc
mov
adc
cmp
pop
adc
ja
adc
pop
inc
and
stos
add
fwait
push
ja
cwde
call
pop
ja
ret
je
mov
xor
lock
(bad)
(bad)
jmp
pop
sbb
shl
xor
mov
ins
fwait
jno
hlt
mov
(bad)
inc
sahf
sub
(bad)
in
test
neg
sub
dec
or
ds
mov
(bad)
dec
mov
add
sbb
add
aam
sbb
mov
xor
sub
(bad)
or
int
jbe
or
xchg
dec
js
xchg
test
stos
xor
clc
cmp
jecxz
xor
ror
jno
jle
push
fsub
in
(bad)
(bad)
(bad)
fldenv
jge
cmp
sub
jns
test
sub
out
fstp
(bad)
(bad)
inc
xor
push
cmp
icebp
mov
jae
or
push
pop
push
inc
loopne
or
(bad)
(bad)
jle
sbb
pop
pop
mov
or
add
and
sbb
(bad)
(bad)
fldcw
aad
jmp
in
fiadd
iret
div
mov
cmp
xchg
mov
shl
sub
cs
dec
mov
stc
test
cld
aaa
stos
and
mov
jmp
movs
scas
enter
pusha
or
pop
xchg
and
cmps
push
outs
push
cmp
data16
sbb
(bad)
(bad)
dec
daa
call
adc
sti
xchg
sbb
(bad)
sub
pusha
mov
mov
sub
ror
sub
adc
pop
pop
mov
les
pusha
and
(bad)
(bad)
leave
xchg
std
mov
out
jle
cmps
mov
popa
sahf
or
pop
xchg
hlt
or
mov
and
inc
jecxz
mov
sar
sbb
add
ror
or
cmp
adc
dec
lods
(bad)
(bad)
call
xchg
jle
jecxz
jne
cli
fisttp
push
mov
cmp
out
sub
test
push
(bad)
in
fdivp
in
pop
add
(bad)
dec
lock
jg
out
lahf
aaa
or
stc
out
cmp
in
je
dec
sti
mov
jnp
push
lods
ret
in
(bad)
push
loop
pop
jp
mov
daa
sahf
cli
push
loopne
iret
jge
das
scas
mov
push
inc
(bad)
jge
sti
fbld
xchg
fnsave
jmp
(bad)
shl
(bad)
cli
xchg
(bad)
xlat
dec
fdivr
rol
(bad)
(bad)
call
test
pop
fild
shl
cmp
icebp
ja
jmp
inc
repnz
repnz
les
(bad)
(bad)
cld
xchg
push
sbb
lahf
aad
loopne
enter
sub
mov
sahf
test
cwde
cmp
mov
aam
xchg
add
add
(bad)
(bad)
call
sbb
or
adc
pop
push
push
mov
imul
sub
or
cmps
in
cld
adc
call
mov
mov
mov
sbb
shr
mov
mov
and
add
push
lods
sub
addr16
mov
jle
into
sub
(bad)
(bad)
(bad)
cmp
jmp
ret
and
jae
xchg
cmps
adc
adc
sbb
jmp
jg
ja
(bad)
sar
sbb
fsubr
xchg
movs
jmp
xor
inc
sbb
ss
stc
dec
pop
hlt
(bad)
(bad)
mov
inc
push
add
cmp
dec
das
gs
(bad)
(bad)
mov
fidivr
push
pop
and
jns
call
jo
(bad)
push
shl
inc
movs
in
hlt
cmp
pop
js
loopne
arpl
iret
mov
leave
sub
inc
cld
call
xor
rcl
push
mov
pop
sti
ret
push
lock
sti
push
cmp
dec
push
mov
jbe
fcomi
loope
dec
pushf
mov
add
push
clc
jae
ror
jg
loope
push
inc
call
xor
or
adc
(bad)
(bad)
push
inc
inc
sub
sub
add
ret
cmps
mov
mov
das
in
jg
ror
jmp
jmp
icebp
mov
xor
add
popf
mov
cmps
int3
iret
adc
inc
lods
fcom
push
or
retf
xchg
rcl
outs
jle
out
popf
ins
(bad)
jmp
fs
adc
iret
push
add
or
rcl
ins
stc
test
(bad)
stos
add
sbb
movs
mov
scas
adc
mov
(bad)
(bad)
(bad)
push
push
add
icebp
push
xor
pop
xchg
mov
popa
xchg
pop
test
cmp
mov
loope
cli
push
jl
xchg
sub
xchg
sub
adc
popa
mov
cdq
shl
(bad)
dec
inc
jnp
call
ja
xor
retf
xor
enter
inc
add
jmp
fisttp
inc
sbb
inc
add
sbb
out
pop
call
or
lods
(bad)
(bad)
(bad)
call
inc
imul
push
xor
je
sub
sub
adc
loopne
or
(bad)
(bad)
inc
nop
push
call
inc
push
mov
inc
pop
xchg
and
int3
test
sub
cli
(bad)
call
jecxz
lods
cmp
out
js
push
stos
dec
mov
mov
jmp
mov
aad
sar
call
mov
dec
ins
clc
sbb
aad
jmp
push
mov
bt
dec
pop
mov
(bad)
(bad)
call
dec
fchs
dec
movs
cld
add
jge
fmul
dec
(bad)
jo
aad
imul
arpl
outs
cli
shr
(bad)
jne
nop
outs
sub
push
or
(bad)
shr
jae
ja
inc
sub
mov
jle
cmp
xchg
(bad)
fs
retf
adc
pop
pop
xchg
(bad)
mov
sbb
sub
pop
aaa
jl
cli
xlat
mov
(bad)
mov
popa
shr
dec
out
adc
sbb
test
and
inc
or
test
(bad)
(bad)
(bad)
(bad)
stc
inc
ins
int
jge
adc
xor
ins
jmp
pop
repnz
sbb
jmp
icebp
daa
dec
xor
call
dec
test
call
jno
add
push
mov
sub
xchg
(bad)
(bad)
(bad)
jmp
xchg
push
cld
cmc
or
adc
fcomp
xchg
lods
fistp
(bad)
(bad)
call
(bad)
jmp
or
xor
jbe
stc
popa
xchg
push
or
cmps
dec
sub
test
xor
pop
test
cld
(bad)
(bad)
(bad)
(bad)
out
popf
xchg
fst
lods
adc
jle
shl
call
imul
lock
dec
cmp
(bad)
(bad)
dec
sbb
push
int
adc
push
ds
push
repz
inc
cs
inc
jecxz
pop
mov
shl
(bad)
(bad)
(bad)
call
cmp
add
xchg
xchg
rcl
push
iret
cwde
dec
iret
jb
call
and
sub
mov
(bad)
dec
and
popa
retf
jge
daa
mov
mov
or
cmps
and
push
cwde
loope
jmp
in
mov
in
retf
and
or
mov
or
(bad)
(bad)
(bad)
(bad)
push
scas
sbb
movs
pop
inc
cmp
(bad)
not
hlt
add
in
aad
or
lds
(bad)
(bad)
(bad)
call
mov
dec
in
add
mov
repz
(bad)
nop
retf
stc
cmp
inc
aaa
(bad)
(bad)
(bad)
push
pop
jbe
das
mov
cmp
pop
sbb
outs
pop
sbb
jmp
adc
loope
cld
sub
iret
outs
jge
jmp
mov
mov
dec
add
sar
out
and
sti
rcr
(bad)
cli
xlat
scas
mov
mov
pop
(bad)
push
jle
js
je
mov
sbb
pop
pop
cmp
or
scas
pop
mov
ja
outs
call
add
mov
aad
sbb
je
lock
add
(bad)
(bad)
(bad)
clc
ret
icebp
xor
sub
outs
fidiv
addr16
lahf
call
pop
cmp
or
mov
call
add
mov
inc
xchg
(bad)
sub
xor
adc
call
(bad)
(bad)
jmp
xchg
lods
push
xor
arpl
add
pop
push
dec
dec
popf
adc
repnz
std
add
jle
xchg
aam
out
lds
sbb
push
dec
int
mov
cmps
dec
and
(bad)
(bad)
(bad)
inc
adc
sti
imul
ins
mov
jne
adc
sbb
sbb
sbb
push
sbb
xchg
dec
mov
mov
inc
test
pop
and
pop
imul
mov
movs
in
iret
das
mul
fwait
mov
mov
lock
sub
cmp
ins
dec
ret
into
sbb
(bad)
dec
pop
jne
mov
fwait
pop
in
mov
mov
sbb
cmps
dec
cs
push
jmp
add
pop
ret
mov
ss
jns
divps
cmp
scas
jle
(bad)
(bad)
mov
inc
or
sbb
in
jecxz
inc
addr16
pop
fnstenv
es
ret
xor
push
loopne
ror
inc
pop
addr16
push
lods
mov
adc
out
stc
shr
pop
cmp
fwait
push
mov
mov
or
sbb
stos
mov
(bad)
(bad)
clc
jmp
sbb
mov
retf
addr16
test
leave
cmp
cmp
(bad)
mov
popa
leave
lock
adc
xchg
call
adc
adc
(bad)
sti
shl
jmp
mov
sar
lea
popa
cld
jnp
(bad)
imul
and
sbb
(bad)
(bad)
(bad)
(bad)
mov
cmps
bound
sbb
xchg
dec
in
ret
rol
sbb
fcomp
push
test
mov
sub
xor
or
clc
sbb
mov
pop
add
mov
(bad)
pushf
pusha
jae
push
daa
movs
inc
add
call
leave
(bad)
call
in
cli
or
xchg
mov
and
(bad)
push
sub
xchg
dec
pop
xor
mov
cld
fs
dec
popf
sbb
mov
pop
jae
mov
ret
ss
cmp
js
push
cli
push
lods
inc
mov
sub
popa
add
pop
mov
and
data16
push
data16
add
ret
adc
xchg
mov
sub
push
cmp
test
adc
shl
cs
mov
pop
mov
(bad)
cmc
mov
mov
mov
movs
mov
mov
(bad)
(bad)
(bad)
fbld
ret
sbb
adc
dec
jmp
dec
xchg
sbb
and
into
js
aad
sar
(bad)
(bad)
dec
ds
js
dec
inc
sub
add
daa
xor
add
mov
enter
cmp
xchg
das
ret
inc
cmp
movs
cmp
mul
bound
jo
(bad)
dec
rol
popa
xchg
cmps
movs
mov
(bad)
pop
out
or
(bad)
jmp
rol
hlt
xlat
enter
stos
xchg
(bad)
jmp
xchg
mov
loop
sti
out
or
dec
ror
imul
std
(bad)
(bad)
(bad)
push
mov
pop
mov
outs
scas
xor
jbe
cld
in
scas
add
sub
xchg
loope
push
(bad)
(bad)
(bad)
call
inc
adc
mov
arpl
shr
push
cmp
add
(bad)
repnz
jg
dec
mov
(bad)
(bad)
aaa
mov
cmp
hlt
(bad)
call
cmp
xchg
fs
mov
es
cmp
sub
(bad)
(bad)
(bad)
jmp
enter
push
mov
jnp
movs
jmp
stc
add
repnz
pop
sub
call
or
sbb
jno
in
cmc
push
mov
into
into
std
call
xchg
setg
(bad)
(bad)
dec
in
or
(bad)
mov
mov
pop
test
shr
addr16
push
std
xchg
sbb
cmp
ins
or
rcl
cmp
push
push
sahf
adc
stos
popa
sbb
lods
dec
(bad)
(bad)
(bad)
jmp
in
jo
in
mov
fdiv
loop
and
xor
iret
(bad)
(bad)
(bad)
(bad)
jg
mov
scas
xchg
cmp
ret
dec
sbb
pop
test
ins
shl
inc
mov
(bad)
jg
push
and
adc
mov
push
(bad)
int3
mov
jns
addr16
push
inc
dec
pop
add
sar
(bad)
(bad)
call
call
nop
stos
sbb
cld
loop
movs
or
rcl
cmp
push
push
dec
mov
add
pop
je
(bad)
(bad)
in
xor
jno
and
leave
lds
dec
mov
aad
xchg
cmp
push
dec
lock
(bad)
(bad)
(bad)
dec
and
dec
(bad)
adc
mov
inc
sbb
test
pop
jl
push
sub
movs
add
push
outs
xor
push
cmps
not
arpl
sbb
(bad)
call
pop
into
sti
fld
scas
sti
(bad)
icebp
ror
pop
cmc
inc
ds
fsubr
sub
mov
inc
xor
cwde
push
mov
push
daa
dec
sahf
cmp
dec
mov
cmp
pop
add
mov
jge
mov
and
inc
ret
test
out
fdivr
add
in
(bad)
(bad)
jg
mov
fcomi
pop
mov
pop
scas
push
push
pop
fdivr
ret
mov
ins
jns
leave
stos
icebp
(bad)
inc
jmp
outs
add
movs
dec
lock
jmp
mov
xlat
dec
(bad)
(bad)
(bad)
call
aas
push
aas
popa
pop
test
mov
jo
jnp
in
push
add
lock
int3
adc
(bad)
ds
adc
xchg
pop
sub
add
ins
sub
add
fwait
nop
inc
pop
(bad)
(bad)
(bad)
(bad)
cmp
cld
inc
add
rcl
mov
cdq
or
lahf
sbb
cld
ret
inc
mov
add
aaa
and
fs
out
(bad)
(bad)
push
or
push
xchg
ins
xchg
xchg
adc
jno
loop
push
fsubr
xchg
sbb
ins
(bad)
pop
cmc
jmp
(bad)
jmp
push
mov
fisttp
dec
cs
lahf
mov
ja
cmp
iret
pop
pop
cmp
fsubr
mov
js
aad
push
or
jmp
jp
dec
adc
es
adc
and
ss
retf
fdivr
mov
ja
jns
aas
cli
cdq
aad
sbb
xor
adc
cmp
fst
(bad)
(bad)
(bad)
call
sub
shl
sub
pusha
inc
test
or
out
adc
xor
sti
(bad)
(bad)
push
adc
xchg
jnp
mov
idiv
jg
mov
jne
jno
cli
xor
mov
sbb
mov
lahf
mov
std
or
mov
sti
push
mov
add
mov
repz
dec
(bad)
in
pop
xlat
cmp
xchg
mov
pop
sbb
mov
(bad)
(bad)
call
push
dec
cmp
sub
and
xchg
jbe
mov
(bad)
das
retf
xor
mov
sbb
(bad)
inc
pop
push
or
aas
or
ins
movs
clc
jp
add
push
inc
test
push
repz
fisttp
jl
shr
push
and
fcomp
cdq
cwde
inc
adc
inc
sub
cld
(bad)
call
repz
popa
pop
stos
push
loope
pop
iret
ja
dec
mov
jo
(bad)
call
push
push
pop
jle
inc
pop
sub
xchg
push
push
stos
dec
pop
adc
or
std
and
(bad)
(bad)
(bad)
(bad)
mov
adc
repnz
pop
cmps
and
or
sub
dec
dec
pusha
and
xchg
(bad)
(bad)
(bad)
push
push
loopne
xlat
lods
inc
fldcw
push
cdq
cli
inc
movs
dec
push
adc
arpl
(bad)
(bad)
(bad)
dec
xor
add
or
cmp
hlt
jp
in
jmp
mov
sub
and
xchg
test
cdq
call
mov
jbe
popf
call
movs
stos
mov
stos
(bad)
(bad)
(bad)
jmp
rcl
dec
jecxz
xchg
dec
mov
cmp
popf
push
or
mov
(bad)
(bad)
out
clc
sbb
sub
mov
add
inc
stc
or
test
pop
das
and
(bad)
(bad)
dec
rcr
add
pushf
inc
pop
jmp
mov
sub
dec
ds
cmp
loopne
test
push
out
fcomip
inc
adc
enter
sbb
fs
xor
ins
icebp
fld
mov
(bad)
call
int3
jae
lods
adc
cli
xchg
dec
aaa
push
mov
sub
outs
adc
jg
jb
xchg
sub
mov
es
or
and
push
mov
mov
call
mov
push
(bad)
enter
dec
dec
loope
mov
push
fsub
jl
icebp
lods
pop
cld
in
pop
cmp
mov
pop
(bad)
(bad)
mov
push
or
inc
(bad)
mov
call
xchg
scas
into
js
jg
dec
clc
(bad)
cld
movs
test
out
and
imul
jmp
mov
das
mov
dec
(bad)
or
cs
dec
push
xlat
(bad)
inc
ins
jne
call
or
imul
sub
mov
cmps
pop
mov
cmps
jecxz
mov
call
pop
cmps
pop
push
(bad)
jge
and
ret
(bad)
(bad)
(bad)
push
jns
xor
pop
xor
jp
out
div
in
xor
add
xlat
mov
(bad)
xlat
scas
pop
cld
jmp
or
jb
jo
dec
xchg
adc
pop
cs
dec
xor
mov
xchg
out
mov
xchg
mov
jg
movs
outs
cdq
imul
pop
push
mov
(bad)
mov
xchg
jmp
dec
push
in
cmp
scas
sahf
ss
retf
shl
mov
sub
mov
int
add
pop
fstp
(bad)
pop
mov
aaa
sar
or
adc
fnsave
cld
ror
xor
add
test
push
push
inc
mov
adc
(bad)
jmp
xor
add
leave
int3
and
ja
cmp
test
call
xor
fistp
test
mov
retf
test
icebp
das
(bad)
out
cli
mov
test
stos
bound
les
leave
cmp
push
adc
daa
add
xor
jb
test
test
push
sub
mov
pop
add
mov
call
(bad)
sbb
outs
nop
sub
push
loop
dec
pop
pop
shl
and
icebp
mov
loope
scas
jne
mov
inc
aas
jae
pop
or
les
or
mov
fadd
lahf
pop
(bad)
in
sbb
ds
(bad)
call
scas
aaa
lods
lock
(bad)
push
sbb
push
sbb
loope
sar
pop
mov
js
sbb
(bad)
cmp
fimul
std
jbe
retf
das
das
cs
pop
jg
dec
(bad)
(bad)
(bad)
jg
rol
movs
gs
or
in
cmp
or
sbb
or
and
int3
addr16
(bad)
stos
aas
clc
inc
icebp
push
lock
cmp
adc
push
xchg
mov
and
adc
call
(bad)
dec
out
fist
sbb
test
jmp
inc
(bad)
adc
(bad)
(bad)
(bad)
(bad)
ficom
and
xchg
adc
mul
psrld
mov
and
(bad)
(bad)
(bad)
(bad)
jp
and
pop
enter
cs
sub
or
inc
in
push
movs
fadd
and
inc
pextrw
cmp
(bad)
(bad)
call
adc
mov
test
pop
adc
push
ret
fdiv
sbb
jg
(bad)
mov
mov
in
clc
icebp
std
addr16
shl
fdivr
inc
cld
mov
jne
rcl
seta
mov
inc
(bad)
(bad)
(bad)
(bad)
in
mov
out
pop
inc
ret
xchg
or
cmps
push
das
mov
xchg
pop
mov
xor
lahf
(bad)
(bad)
(bad)
call
adc
test
imul
cs
in
stc
sar
stos
add
adc
inc
or
(bad)
call
ins
stc
and
xchg
xor
push
icebp
rcl
shl
xor
xchg
and
lods
push
inc
inc
jmp
mov
xor
pop
daa
push
loope
jmp
retf
push
or
sar
out
loopne
in
int3
sbb
std
(bad)
sub
dec
lahf
mov
mov
or
adc
outs
lods
push
outs
ja
adc
call
shl
fimul
or
or
xchg
cmp
jae
scas
jecxz
sub
cli
in
fdiv
cld
and
fs
mov
scas
dec
xor
(bad)
(bad)
mov
push
sbb
push
jmp
ret
jae
or
das
mov
aaa
jmp
dec
test
(bad)
dec
mov
test
(bad)
(bad)
call
mov
jb
in
stc
jmp
ss
or
loope
(bad)
bnd
loopne
dec
stos
xchg
push
dec
jo
jb
inc
and
cwde
aam
jp
sub
std
(bad)
jmp
and
push
mov
dec
movs
xlat
ins
pop
inc
xchg
movs
push
lahf
fcmovbe
imul
push
stos
cmp
sbb
mov
cmp
fist
(bad)
jns
les
push
jle
inc
(bad)
and
popa
call
(bad)
xchg
cdq
cwde
(bad)
mov
(bad)
cmp
test
bound
out
xor
(bad)
cld
(bad)
mov
cmp
adc
sub
add
push
cmc
sbb
pop
cmp
sbb
sar
(bad)
fild
mov
cmps
and
mov
test
or
fist
outs
sar
(bad)
jmp
cmps
adc
jmp
and
xor
sub
mov
mov
xchg
mov
idiv
xor
push
sub
sub
inc
je
sub
loopne
xchg
lock
(bad)
(bad)
(bad)
push
mov
sub
mov
inc
mov
sub
pusha
int
pop
aaa
push
adc
sbb
nop
arpl
addr16
(bad)
(bad)
jmp
cmc
inc
mov
mov
adc
or
xor
js
shl
adc
(bad)
jmp
dec
pop
mov
fwait
mov
jecxz
push
jp
ins
daa
and
and
inc
fwait
mov
(bad)
mov
int3
xchg
dec
xlat
or
pop
ja
out
or
adc
in
pop
mov
(bad)
(bad)
(bad)
fcmovb
ret
leave
jnp
cld
std
lahf
jp
js
enter
jmp
xchg
pop
inc
push
mov
adc
ja
inc
shl
lds
sub
loopne
stos
jle
fistp
(bad)
push
mov
mov
repnz
jmp
sub
(bad)
out
adc
dec
sub
or
mov
xchg
fisttp
xor
(bad)
(bad)
(bad)
call
mov
shl
and
scas
pop
in
(bad)
rcl
add
scas
xor
mov
call
dec
mov
jmp
jge
or
popf
call
test
inc
inc
mov
cmp
fucomi
push
mov
(bad)
(bad)
inc
sub
sub
retf
(bad)
ja
sbb
mov
movs
add
dec
dec
(bad)
jg
(bad)
das
outs
fwait
sbb
sub
retf
xor
pop
ds
test
sub
(bad)
jmp
jbe
lds
mov
sub
xor
xor
fmul
sub
(bad)
(bad)
(bad)
mov
jecxz
mov
cmp
jnp
fdivr
push
je
push
mov
sbb
xor
(bad)
push
fwait
mov
jmp
mov
(bad)
mov
nop
arpl
popa
aad
xchg
sbb
cmc
jp
inc
test
(bad)
(bad)
jmp
leave
or
inc
sub
movs
mov
jae
test
adc
test
(bad)
(bad)
(bad)
jmp
pop
pop
xchg
inc
shl
or
fwait
and
jns
cs
js
lock
inc
shr
mov
pop
dec
sub
(bad)
(bad)
(bad)
cmp
mov
(bad)
mov
cmp
inc
sbb
retf
mov
retf
cmc
pop
mov
(bad)
(bad)
jmp
add
jne
xor
lock
pop
jnp
xchg
dec
xchg
sti
dec
mov
mov
cmps
push
std
nop
sbb
ds
in
(bad)
ja
sbb
lea
mov
shl
cwde
out
nop
nop
mov
(bad)
or
(bad)
adc
call
push
mov
xor
fwait
into
(bad)
imul
in
push
pop
popf
popf
mov
imul
mov
inc
push
sbb
jmp
retf
push
arpl
pushf
cmp
lock
add
es
jbe
leave
xor
jg
(bad)
jmp
add
mov
imul
mov
and
(bad)
(bad)
inc
idiv
in
aas
fs
cmp
hlt
leave
xchg
lock
fild
sti
fisubr
shl
outs
popa
mov
xor
out
jae
fwait
lods
aas
xchg
loop
pop
clc
push
add
cmp
and
jmp
sbb
ds
push
call
push
xor
(bad)
jmp
gs
mov
jno
mov
push
cli
push
jns
pop
in
mov
int3
pop
fdivr
push
jmp
shr
adc
or
jecxz
xor
into
adc
cmp
scas
ror
add
call
ins
mov
cmps
scas
fisttp
arpl
dec
rcr
jecxz
(bad)
mov
cwde
push
loopne
mov
int
inc
scas
stos
mul
(bad)
(bad)
(bad)
(bad)
jle
pop
jae
pop
ss
das
jne
std
mov
adc
imul
inc
sbb
out
jb
(bad)
(bad)
(bad)
(bad)
mov
or
movntps
scas
or
lock
mov
xor
inc
clc
movq
mov
cmps
outs
push
inc
lock
mov
mov
test
(bad)
(bad)
dec
xlat
inc
test
and
push
(bad)
retf
mov
out
popa
adc
scas
inc
std
pop
std
hlt
jp
lods
cmp
adc
gs
sub
(bad)
call
push
push
outs
pop
aaa
push
sti
cdq
sahf
pop
jl
(bad)
pop
pop
(bad)
pushf
sbb
sbb
(bad)
push
cmp
lods
dec
jo
outs
call
dec
mov
repz
stos
cmp
xor
popa
add
popf
retf
push
mov
push
mov
mov
(bad)
(bad)
(bad)
call
jge
cmp
movs
xor
push
xchg
enter
dec
xchg
dec
out
ds
dec
xchg
xchg
gs
js
(bad)
(bad)
(bad)
call
cmp
out
jnp
sub
gs
push
inc
mov
sti
cli
mov
(bad)
faddp
inc
fstp
push
pop
nop
lock
bound
sub
mov
(bad)
(bad)
jg
cmp
arpl
push
jl
fucomp
aad
stos
in
jbe
popf
fs
aad
or
fs
cli
push
es
mov
adc
enter
xor
jmp
fs
dec
cmp
(bad)
(bad)
push
pop
mov
xchg
push
ja
int3
mov
mov
adc
xchg
inc
dec
xchg
(bad)
sub
pop
and
pop
ror
test
leave
add
adc
lods
or
psrlw
dec
aam
and
int
scas
inc
sub
ins
inc
mov
mov
(bad)
mov
xor
loopne
pushf
stos
test
and
inc
push
jne
push
clc
mov
enter
xchg
icebp
add
add
lds
dec
and
push
ret
add
jmp
shl
mov
pop
jo
pop
mov
or
dec
sub
pop
movs
(bad)
(bad)
(bad)
in
mov
xor
pop
cmp
mov
inc
test
jbe
xor
movs
addr16
(bad)
(bad)
inc
loop
or
rol
int
lds
out
repz
push
out
mov
addr16
fsubr
xchg
(bad)
(bad)
(bad)
(bad)
mov
cli
adc
(bad)
movs
jbe
or
repnz
adc
xchg
cli
jmp
das
dec
dec
mov
in
es
sti
stc
mov
inc
dec
nop
push
xor
gs
jmp
jmp
xchg
adc
inc
sub
bound
sar
xchg
push
adc
aas
dec
js
pusha
sub
(bad)
cli
(bad)
(bad)
(bad)
cmp
sti
mov
sahf
jmp
ins
cmps
call
cmps
loop
adc
(bad)
inc
rol
jl
sti
pop
fdivr
xlat
ins
fbstp
sbb
sub
sbb
lock
(bad)
scas
retf
leave
test
lds
mov
(bad)
push
push
push
loop
enter
or
popf
mov
dec
or
mov
or
mov
(bad)
(bad)
(bad)
jp
mov
inc
push
int3
and
jg
(bad)
pop
lahf
sbb
or
test
rep
leave
mov
lock
dec
movs
fadd
inc
push
jo
mov
retf
addr16
call
mov
jmp
out
inc
pop
aas
in
dec
cli
imul
int3
ja
push
xor
sub
(bad)
jmp
mov
mov
lods
aad
dec
iret
mov
addr16
cmp
fs
cwde
xchg
push
jmp
or
dec
fwait
clc
rcl
xchg
mov
ret
lock
scas
jmp
or
sbb
sahf
mov
data16
ja
aaa
arpl
inc
xchg
(bad)
clc
(bad)
jmp
mov
and
gs
cdq
and
jbe
or
add
(bad)
(bad)
jmp
pop
loopne
icebp
sar
ret
mov
push
clc
or
and
sbb
mov
inc
cmps
nop
mov
rol
xchg
ja
add
push
adc
mov
jb
(bad)
(bad)
call
or
xchg
mov
or
popf
adc
fs
xchg
dec
or
clc
(bad)
push
sub
repnz
mov
shl
xchg
xor
cmps
xor
test
popf
ficomp
fbld
jg
sub
xchg
inc
cdq
aaa
mov
test
(bad)
(bad)
fcomip
mov
lahf
out
pop
pop
push
inc
movlps
sub
ret
fild
push
js
jae
add
gs
sbb
or
cmp
js
in
dec
cmp
arpl
test
cmp
mov
call
clc
jmp
daa
aas
test
xor
les
sub
sub
mov
push
cmps
cmps
sbb
loope
(bad)
mov
inc
mov
(bad)
(bad)
jmp
icebp
popa
bound
pop
fistp
xchg
xor
sbb
adc
xor
or
loopne
xchg
xor
or
js
mov
jmp
hlt
out
add
std
sbb
add
jnp
adc
jmp
sar
mov
sbb
jns
dec
mov
in
iret
or
cmp
ss
push
or
test
mov
test
xchg
inc
xchg
cmp
(bad)
call
cmp
xor
pop
xlat
jne
in
(bad)
or
pop
shr
jp
sbb
sub
jnp
inc
std
(bad)
(bad)
clc
mov
cmc
adc
movs
mov
fcos
(bad)
dec
cld
ins
jae
in
mov
test
pop
ins
sti
push
leave
inc
shl
rol
add
or
stos
xchg
mov
push
ror
and
push
(bad)
(bad)
jmp
mov
ret
mov
scas
cld
(bad)
xchg
stos
and
or
test
(bad)
(bad)
(bad)
(bad)
cmp
mov
lods
jmp
(bad)
rcl
inc
or
or
mov
leave
inc
sar
leave
icebp
adc
out
(bad)
out
stos
cmp
fdivr
cmp
int
pusha
std
(bad)
(bad)
call
inc
cmps
iret
pop
and
imul
int3
scas
lahf
in
call
(bad)
call
mov
mov
dec
pop
jno
and
jg
sbb
loop
(bad)
(bad)
(bad)
ds
test
jl
mov
xchg
or
and
inc
or
mov
(bad)
dec
jno
in
stos
mov
ds
cmc
out
pop
cmp
ficomp
pop
stos
fst
mov
push
or
inc
mov
pop
sub
(bad)
(bad)
(bad)
mov
rol
iret
repz
aas
jo
(bad)
pop
leave
mov
cmp
fwait
inc
sbb
jb
(bad)
(bad)
(bad)
inc
sbb
pop
push
and
repnz
xchg
or
pushf
push
push
fidiv
xchg
lahf
add
push
shl
jmp
jo
push
sub
adc
jle
test
push
mov
pusha
xchg
pop
push
mov
pop
adc
int3
idiv
adc
inc
inc
or
(bad)
(bad)
call
ja
push
test
pop
push
adc
sbb
cmp
mov
adc
sbb
xor
js
js
sbb
pop
not
mov
or
pushf
inc
daa
dec
js
ins
je
(bad)
pusha
xor
(bad)
push
cli
aas
and
sbb
retf
cmc
mov
xor
(bad)
jmp
pop
sbb
movs
xor
or
push
repz
into
rol
dec
bound
movs
jmp
xchg
rcr
sub
sbb
mov
xor
add
adc
mov
jnp
sbb
cld
into
shl
(bad)
(bad)
(bad)
call
imul
mov
adc
in
outs
push
cmp
mov
jmp
xor
mov
dec
inc
jmp
ret
mov
movs
or
jmp
fstp
lods
out
fnstenv
rol
and
popa
jmp
fsubr
hlt
cld
inc
cld
aaa
mov
shl
cmps
xor
pop
hlt
(bad)
fld
loope
mov
xchg
xchg
fidiv
aam
je
aam
sub
fdiv
clc
je
dec
dec
inc
(bad)
(bad)
(bad)
call
push
iret
adc
ins
or
ret
or
xchg
inc
sbb
push
pop
pop
jbe
pop
loop
gs
inc
aaa
mov
jge
ret
movs
aam
add
and
out
(bad)
sbb
sub
fwait
mov
pop
mov
sar
cmp
sub
or
cmps
gs
(bad)
(bad)
push
fistp
pop
pop
mov
push
retf
xchg
das
sub
dec
mov
sbb
mov
(bad)
push
or
mov
xchg
stos
xchg
pop
mov
(bad)
(bad)
jmp
or
outs
sbb
in
aas
xlat
or
popf
fwait
push
cmp
repz
leave
rcl
repz
shr
inc
(bad)
(bad)
(bad)
push
daa
mov
ret
(bad)
fdiv
test
into
ins
ficomp
cli
mov
loopne
outs
mov
jmp
xchg
retf
out
in
sar
fstp
pop
call
add
inc
jae
(bad)
(bad)
jmp
mov
je
in
addr16
sub
adc
fcomp
mov
push
dec
scas
add
(bad)
(bad)
call
xchg
sbb
mov
mov
mov
sub
in
push
jae
je
addr16
(bad)
(bad)
jmp
imul
push
bound
sub
inc
aas
into
sub
mov
loope
(bad)
(bad)
jmp
enter
cdq
(bad)
fwait
nop
leave
test
cmp
js
(bad)
loope
int3
test
inc
(bad)
mov
sub
mov
mov
js
push
dec
xchg
lods
(bad)
aas
out
cli
or
stc
enter
add
jb
sti
push
std
(bad)
cld
mov
(bad)
repnz
outs
lods
xchg
mov
fld
push
sbb
mov
(bad)
(bad)
(bad)
call
jmp
jl
inc
add
fcomp
inc
shr
das
mov
jle
pop
jg
jmp
sbb
call
and
sbb
repnz
jno
xchg
jecxz
mov
(bad)
jg
int3
jmp
loop
jle
cmc
xlat
ret
int3
sub
push
push
add
inc
pop
arpl
(bad)
loop
iret
mov
cld
(bad)
cmp
fisttp
mov
fst
in
jbe
xor
jg
call
sti
push
in
lahf
mov
fiadd
ins
mov
icebp
pop
mov
xchg
or
push
cmp
rcr
or
cld
mov
push
addr16
xlat
inc
dec
and
xchg
mov
mov
(bad)
(bad)
push
push
aam
inc
fild
popf
arpl
bound
test
jo
sbb
lock
(bad)
(bad)
call
xchg
lods
mov
stos
shr
pop
mov
sub
les
adc
cs
data16
jmp
test
pop
or
cwde
ret
enter
imul
(bad)
(bad)
(bad)
push
mov
pop
cmp
xor
enter
push
or
inc
stos
mov
add
(bad)
(bad)
jmp
xor
push
push
daa
push
inc
dec
ud2
das
sub
int
jbe
test
cmp
jmp
lods
jns
cmp
loopne
inc
xor
push
mov
mov
int
lds
clc
mov
sbb
adc
dec
loope
push
stos
mov
add
(bad)
mov
push
(bad)
(bad)
jg
cmp
push
aaa
in
shl
dec
scas
jecxz
(bad)
mov
(bad)
jg
(bad)
jns
mov
mov
out
stc
xlat
cmp
jl
loope
loope
(bad)
(bad)
push
sbb
fcomp
xor
adc
sub
jmp
push
pushf
shl
outs
xor
fcom
test
jmp
sahf
or
(bad)
(bad)
mov
repnz
out
push
cmp
mov
sub
mov
sub
adc
scas
loopne
xchg
xor
imul
pop
mov
pop
lods
xor
xor
aas
clc
(bad)
(bad)
push
pusha
dec
pop
mov
adc
(bad)
in
cmp
gs
and
add
dec
and
ss
std
jmp
call
xor
mov
in
mov
sbb
scas
mov
shl
mov
nop
jmp
add
idiv
mov
stc
add
movs
mov
repnz
inc
dec
icebp
add
jg
mov
imul
adc
outs
dec
dec
in
aas
sub
cmp
inc
adc
frstor
mov
stos
mov
icebp
inc
inc
popa
into
adc
ror
adc
pop
mov
movs
scas
fnop
into
ins
pop
dec
inc
push
or
clc
das
mov
push
imul
lods
jnp
(bad)
(bad)
(bad)
push
nop
mov
pop
or
xchg
mov
inc
iret
adc
sbb
add
test
test
(bad)
(bad)
mov
mov
sub
jo
hlt
add
shl
(bad)
(bad)
(bad)
jmp
ror
sbb
in
xor
push
mov
or
push
xchg
dec
in
inc
or
push
clc
xor
adc
into
pop
test
rcl
cld
sub
push
dec
pop
inc
mov
cmc
(bad)
(bad)
inc
mov
sbb
outs
test
daa
pop
ins
pop
add
adc
adc
inc
fdivrp
(bad)
out
add
int3
stos
or
or
jge
sbb
and
(bad)
push
cld
iret
leave
push
imul
sbb
xchg
fst
stos
sbb
jle
push
sbb
push
shr
pop
(bad)
(bad)
(bad)
call
(bad)
xor
cmp
mov
ja
cmp
push
mov
push
mov
int
mov
cli
out
mov
mul
xchg
pushw
fstp
mov
in
xor
mov
sbb
movs
jle
or
(bad)
(bad)
call
mov
mov
push
jmp
inc
inc
xchg
pop
in
aam
cmps
aaa
sub
iret
(bad)
(bad)
(bad)
jmp
sbb
mov
(bad)
mov
pop
pop
sahf
lahf
push
je
push
aad
movs
adc
(bad)
jmp
pop
pop
xchg
popa
push
inc
and
cmps
mov
int
mov
cmps
adc
fstp
jae
std
retf
xchg
push
push
shl
lods
test
movs
into
scas
int
xchg
into
int
mov
icebp
shl
je
or
or
outs
jg
(bad)
(bad)
in
jns
cdq
pop
mov
(bad)
enter
cs
enter
pop
mov
add
(bad)
push
inc
mov
ins
std
lock
xlat
data16
cli
xchg
push
cmps
aaa
xlat
dec
(bad)
(bad)
(bad)
(bad)
mov
sub
imul
cwde
jbe
jo
movs
test
jne
push
push
push
or
dec
sbb
out
(bad)
(bad)
(bad)
inc
sub
fsubr
adc
loope
jo
jge
dec
or
mov
bound
(bad)
(bad)
call
push
mov
and
mov
push
mov
dec
fldcw
pop
add
(bad)
(bad)
jmp
push
cmp
cmps
call
sub
pop
adc
dec
mov
and
adc
(bad)
(bad)
(bad)
push
xor
mov
retf
cmp
les
cmp
nop
retf
scas
sub
and
fs
cmp
add
mov
mov
ret
push
or
scas
clc
(bad)
mov
jge
jns
aas
cld
loopne
push
div
mul
(bad)
icebp
pop
jle
add
push
cmp
cmp
(bad)
push
cmps
(bad)
mov
push
ja
test
xor
inc
pushf
bswap
int3
xchg
jns
(bad)
(bad)
call
mov
test
stc
(bad)
(bad)
out
xchg
pushf
cdq
fwait
popf
mov
add
xor
mov
push
loopne
neg
sti
ins
(bad)
popa
lahf
sahf
cmp
dec
jnp
out
pop
mov
and
mov
(bad)
(bad)
(bad)
dec
repz
xor
std
xchg
ror
dec
aaa
xchg
aas
cmc
je
push
mov
(bad)
(bad)
(bad)
jmp
leave
jo
xchg
push
fcomi
pop
adc
push
pop
lods
and
xor
sbb
dec
cs
dec
into
mov
mov
adc
xor
cmp
mov
(bad)
fcomip
nop
pop
mov
xor
xchg
pop
ins
mov
les
aam
(bad)
(bad)
(bad)
jmp
sub
and
stos
ins
int
xor
dec
js
rcl
jmp
pop
cmp
(bad)
inc
dec
ret
cld
ror
in
sub
in
xchg
push
add
ins
mov
jmp
call
mov
clc
lahf
pushf
outs
jp
jb
(bad)
(bad)
call
sub
mov
or
push
(bad)
lea
out
popa
in
mov
xlat
lods
sahf
jmp
(bad)
(bad)
mov
cmp
in
jbe
jnp
mov
sbb
(bad)
dec
jle
nop
push
push
or
push
cld
pop
mov
pushf
fnstcw
loope
adc
push
(bad)
fbstp
dec
and
retf
sahf
lock
(bad)
fsincos
fcmovnu
imul
(bad)
(bad)
(bad)
dec
mov
jmp
or
push
sub
mov
(bad)
(bad)
cli
jne
cdq
out
xlat
out
outs
mov
and
imul
aas
jno
hlt
sub
jne
in
pop
dec
jp
cmp
dec
or
cld
mul
arpl
sbb
jg
(bad)
call
movq
cmp
mov
jecxz
sbb
stos
add
jmp
xchg
cdq
lds
(bad)
mov
cmp
(bad)
sub
mov
cdq
pop
in
push
ret
pop
jmp
(bad)
call
fistp
lods
ret
daa
sahf
(bad)
sti
sub
sbb
std
(bad)
(bad)
(bad)
mov
fs
mov
add
lahf
cdq
call
retf
xchg
mov
jg
mov
dec
fisttp
ret
clc
add
jge
jne
cmc
xchg
and
popf
push
cmc
movs
in
test
mov
inc
aam
mov
push
push
es
jo
xchg
xchg
popf
cmp
repz
neg
shl
cmp
fldcw
js
jns
jbe
stc
and
xlat
pop
std
(bad)
call
sbb
aaa
mov
lds
test
inc
in
push
cmp
fcomip
jmp
dec
push
xchg
stos
inc
test
push
dec
xchg
fisub
cmps
inc
and
out
(bad)
(bad)
inc
jp
adc
repnz
popf
rol
ficomp
xchg
add
and
or
sub
loopne
xchg
and
or
dec
sahf
mov
int
std
sbb
pusha
adc
(bad)
call
cmp
add
push
inc
cs
and
cmp
lds
xchg
and
mov
xchg
jo
ret
jmp
cld
fild
shl
test
add
js
mov
xor
sub
and
(bad)
(bad)
mov
dec
jb
ins
out
adc
xchg
xlat
lea
mov
pusha
dec
cs
enter
mov
scas
fsubr
pop
and
sbb
stos
jbe
mov
inc
hlt
cwde
in
mov
js
add
(bad)
jmp
adc
adc
pop
pusha
pop
pusha
add
fld
inc
mov
push
sbb
mov
jecxz
or
retf
movs
es
add
push
sub
mov
jmp
cmp
inc
arpl
rcl
sub
cmp
(bad)
jg
dec
and
gs
push
gs
stos
sub
(bad)
(bad)
mov
xchg
cmp
pop
not
ss
cli
scas
jge
xor
xchg
das
sub
(bad)
in
push
xor
push
jl
sahf
inc
sbb
mov
imul
and
fstp
mul
lods
je
cmp
into
retf
jg
pop
hlt
pop
inc
sbb
and
mov
add
pop
lock
mov
in
push
adc
(bad)
xor
xchg
push
lock
shl
mov
outs
inc
and
fcomip
test
repz
je
pop
jnp
inc
loop
nop
pop
jmp
scas
lods
scas
cs
pop
out
adc
in
sar
(bad)
call
retf
or
lods
cmc
std
inc
xor
imul
push
sbb
(bad)
(bad)
(bad)
(bad)
mov
push
cmp
into
fmul
outs
outs
jo
mov
in
(bad)
or
push
out
clc
out
daa
pcmpeqb
mov
jne
fcom
(bad)
sub
(bad)
(bad)
dec
mov
stos
mov
xchg
pop
add
pop
sahf
xor
retf
in
addr16
test
mov
cmc
in
pushf
fisub
mov
add
jg
or
repnz
mov
and
cmc
fsub
or
(bad)
in
sub
call
jb
call
je
xor
cld
aaa
mov
cmp
push
jmp
adc
dec
cmp
lock
sub
add
(bad)
pop
inc
sbb
loopne
or
mov
(bad)
(bad)
(bad)
jmp
cdq
jl
dec
mov
dec
push
out
cmp
push
and
sub
and
(bad)
jmp
jecxz
xlat
mov
les
cmp
sub
cmp
popf
inc
and
jne
jmp
push
leave
inc
ins
bound
sahf
sub
add
call
jmp
mov
pop
xor
fild
std
inc
cmps
jecxz
ins
clc
mov
add
(bad)
(bad)
(bad)
push
(bad)
mov
adc
scas
(bad)
jno
arpl
or
scas
mov
or
or
cli
stc
arpl
jg
xor
jmp
outs
fcmove
movs
test
call
xor
sub
dec
daa
cmps
and
push
leave
sti
bound
js
mov
punpckhbw
(bad)
(bad)
(bad)
clc
jecxz
jb
sub
cdq
and
mov
jbe
sbb
dec
cmps
call
jmp
imul
stos
inc
mov
(bad)
push
or
(bad)
add
(bad)
mov
dec
lock
movs
fiadd
or
sub
dec
in
push
stos
imul
xlat
add
sub
sbb
push
push
dec
xor
inc
sub
add
adc
lds
sub
mov
outs
cmp
clc
fidivr
and
mov
mov
ret
ror
dec
or
dec
stos
sar
dec
sub
popa
in
xchg
outs
sbb
add
(bad)
call
shl
loope
int
xlat
(bad)
cmps
sub
in
lahf
call
xchg
jl
(bad)
(bad)
(bad)
jmp
aas
jle
shl
mov
jecxz
sub
push
push
mov
cmp
mov
mov
jp
mov
hlt
fwait
sbb
sti
(bad)
(bad)
mov
into
fldcw
fbstp
mov
shl
jae
push
mov
arpl
repnz
(bad)
(bad)
jmp
ins
fwait
dec
retf
imul
dec
lea
repz
or
retf
ss
test
lahf
(bad)
(bad)
(bad)
(bad)
dec
xor
push
loopne
in
push
shl
mov
retf
iret
mov
mov
sar
jle
ficomp
ret
inc
inc
addr16
xor
(bad)
(bad)
mov
add
gs
(bad)
jmp
(bad)
(bad)
out
lods
loope
(bad)
call
pop
or
js
cwde
pop
mov
add
mov
(bad)
mov
mov
push
shr
add
adc
(bad)
jmp
je
test
mov
pop
xchg
dec
(bad)
adc
faddp
inc
pop
sbb
leave
fs
adc
lods
xchg
push
adc
mov
rcr
push
out
jp
leave
sar
jns
xor
sbb
and
mov
(bad)
mov
add
stos
hlt
ins
and
mov
mov
dec
rcl
and
mov
sbb
adc
test
dec
pop
out
mov
fcomi
shl
and
out
(bad)
(bad)
call
xchg
add
mov
mov
inc
pop
add
scas
cmp
jno
imul
int
xchg
(bad)
(bad)
(bad)
dec
jae
mov
and
and
mov
retf
pushf
lods
and
test
outs
jp
mov
pop
jmp
(bad)
(bad)
dec
or
ins
test
pop
daa
sbb
and
sub
enter
dec
sub
cmp
mov
sbb
call
and
enter
pushf
ret
fsub
test
fist
dec
or
sbb
(bad)
(bad)
(bad)
(bad)
ds
je
and
out
inc
ret
retf
dec
sbb
push
push
add
and
movs
xor
iret
cmp
jmp
cmps
xor
rcl
pop
mov
fwait
sbb
mov
(bad)
(bad)
mov
imul
sub
adc
pushf
outs
mov
dec
in
(bad)
(bad)
(bad)
(bad)
cmp
mov
sub
cs
aas
mov
xchg
adc
div
cmps
and
(bad)
jg
icebp
test
adc
sub
mov
outs
(bad)
(bad)
inc
sub
in
push
jp
pusha
rcl
shl
add
rcl
dec
dec
ffree
(bad)
mov
xor
ins
inc
xlat
pop
jb
cmp
pop
fpatan
(bad)
call
fadd
int
repz
or
pop
jg
ds
and
dec
cwde
(bad)
(bad)
(bad)
push
std
aad
add
int3
xor
in
fs
lock
push
ret
sbb
xchg
mov
ret
(bad)
(bad)
in
(bad)
push
mov
out
jb
retf
inc
mov
js
in
adc
mov
jmp
sub
sbb
retf
retf
inc
rol
xor
dec
adc
(bad)
(bad)
(bad)
out
aam
pop
xor
test
test
mov
mov
(bad)
mov
push
mov
out
pop
out
push
mov
jp
loope
(bad)
fisttp
push
ret
ss
or
aam
iret
add
pusha
loope
sub
in
call
xchg
add
inc
add
cld
add
sub
clc
call
xor
gs
mov
out
mov
xlat
jne
mov
clc
sub
call
jecxz
push
gs
xchg
sbb
out
pop
test
xchg
popa
test
sub
(bad)
jmp
push
xchg
pop
stos
retf
cmp
addr16
popa
sbb
lods
sub
clc
movs
leave
outs
fs
xchg
lea
or
stos
dec
pop
frstor
cs
push
jge
(bad)
(bad)
call
inc
jnp
fisttp
pop
cmp
inc
cmp
cmp
imul
add
nop
sar
adc
hlt
jle
add
mov
add
dec
(bad)
(bad)
(bad)
dec
pusha
dec
sahf
fnstcw
mov
pop
xor
cmps
das
(bad)
out
mov
sub
sbb
sahf
add
inc
and
stos
push
pop
ss
adc
fmul
xor
lods
movs
jp
push
push
xchg
xchg
xchg
loop
(bad)
(bad)
(bad)
mov
dec
or
dec
jns
dec
cli
xor
mov
cmp
ins
(bad)
(bad)
(bad)
(bad)
mov
xor
push
iret
add
sub
repz
in
test
mov
inc
mov
sbb
inc
add
jge
mov
or
out
push
into
sbb
push
js
adc
(bad)
(bad)
call
xor
shl
cmp
pop
fbld
cmp
enter
mov
pop
pop
mov
movs
xchg
enter
mov
push
stos
pop
jns
fwait
sbb
dec
jae
mov
ja
ret
(bad)
(bad)
(bad)
jmp
in
jmp
daa
push
or
push
sbb
mov
push
jnp
movs
cdq
out
add
jne
mov
or
xor
sbb
sbb
dec
jmp
enter
ret
mov
hlt
sbb
pop
add
jnp
jle
mov
aas
ja
(bad)
and
out
(bad)
fild
jo
fnsave
inc
push
pushf
sbb
pop
js
call
call
clc
aaa
pop
(bad)
fcom
push
push
dec
adc
hlt
(bad)
(bad)
(bad)
push
movs
sti
out
nop
in
dec
pop
xor
ret
add
mov
mov
mov
cdq
dec
(bad)
(bad)
(bad)
ds
mul
lock
jmp
sub
mov
push
mov
mov
les
add
xor
inc
das
ds
(bad)
cmp
sti
pop
jp
retf
mov
in
in
mov
dec
and
(bad)
mov
mov
or
clc
lock
xor
adc
xchg
mov
adc
sbb
test
mov
push
pop
out
jl
icebp
jmp
lea
sbb
sbb
int3
leave
(bad)
(bad)
(bad)
call
fistp
mov
bound
adc
jo
xchg
push
xchg
jb
(bad)
(bad)
call
test
cmps
mov
xchg
int3
pushf
add
sub
mov
inc
mov
cmps
sbb
(bad)
(bad)
call
pop
jmp
adc
add
xchg
cdq
jns
fstp
sahf
xchg
pop
add
pop
(bad)
(bad)
(bad)
dec
adc
or
dec
adc
sub
retf
ja
sahf
jmp
cld
and
push
cmps
mov
jae
aaa
push
adc
shr
mov
mov
jmp
jmp
scas
ins
cmps
cdq
cmp
imul
(bad)
inc
cmps
test
fiadd
in
or
mov
call
cmp
(bad)
inc
not
push
xor
daa
mov
and
add
es
(bad)
(bad)
inc
test
es
cmp
sbb
xor
ins
push
cmp
mov
add
(bad)
(bad)
jmp
(bad)
mov
cmc
out
enter
cmp
dec
rcl
int
sub
mov
jmp
in
icebp
xor
out
(bad)
shl
out
les
cmps
shl
(bad)
(bad)
inc
fidiv
jbe
repz
sbb
stos
(bad)
or
in
test
add
cmp
(bad)
(bad)
dec
hlt
xlat
inc
sub
imul
aam
inc
out
mov
mov
xor
call
in
xchg
xchg
cwde
xor
inc
pop
xchg
mov
jp
in
sub
cmp
xchg
mov
fwait
(bad)
(bad)
(bad)
inc
pop
push
xchg
aam
rcl
xor
ss
mov
xlat
shr
outs
add
jecxz
sar
stos
jns
xor
outs
xchg
xchg
pop
pop
ds
enter
(bad)
fild
pop
ret
jmp
jecxz
es
push
adc
cwde
(bad)
(bad)
(bad)
dec
cdq
xchg
sub
jne
out
fstp
jbe
aam
(bad)
bnd
out
fnstcw
sbb
popa
ja
pop
out
das
lods
hlt
ds
or
sar
cs
fild
in
test
mov
dec
out
push
push
ret
inc
pop
xchg
mov
xchg
stc
lahf
(bad)
sbb
push
lock
ret
xor
repnz
je
sub
(bad)
(bad)
jmp
cmp
fistp
mov
ds
int3
ror
inc
jecxz
mov
movs
aad
add
jp
aad
movs
push
mov
popa
and
dec
inc
push
push
fdivrp
mov
cmp
adc
sub
dec
jno
inc
or
sbb
xor
lods
sbb
lods
push
icebp
loope
push
stos
(bad)
(bad)
(bad)
push
xor
pop
(bad)
jbe
out
mov
cmp
adc
add
and
push
test
dec
(bad)
(bad)
(bad)
inc
sub
mov
(bad)
or
repz
or
and
int3
shl
aam
push
xchg
pop
(bad)
(bad)
(bad)
push
mov
cdq
push
stos
xor
adc
rsm
mov
adc
xlat
cli
jmp
jmp
add
sbb
or
mov
jg
test
(bad)
(bad)
(bad)
jg
cmp
(bad)
in
mov
stos
repnz
cmp
sbb
scas
in
pop
sbb
in
(bad)
jmp
fild
add
or
mov
pop
out
mov
mov
aad
hlt
movs
dec
aas
or
adc
adc
xor
imul
out
gs
gs
enter
or
setno
lods
cdq
jb
(bad)
cwde
(bad)
(bad)
(bad)
jmp
les
and
adc
cmps
jb
or
lock
loop
and
je
test
(bad)
(bad)
push
je
and
call
sbb
js
mov
push
sbb
pusha
xchg
(bad)
(bad)
(bad)
dec
out
call
in
and
test
cmc
fcom
(bad)
dec
dec
(bad)
(bad)
(bad)
jmp
mov
dec
adc
or
(bad)
int
xchg
pop
popf
inc
lock
ins
or
add
int
movs
adc
xor
aad
dec
mov
lock
xor
pop
test
clc
call
push
add
push
les
aas
test
aas
xor
std
xchg
movs
sub
mov
mov
not
mov
jae
loop
adc
(bad)
(bad)
jmp
inc
mov
push
mov
cdq
add
mov
jmp
frstor
ret
call
jne
mov
add
in
mov
movq
std
into
xchg
(bad)
call
jmp
cwde
add
sub
and
mov
and
out
adc
(bad)
(bad)
(bad)
call
mov
ja
outs
imul
ins
outs
mov
xor
push
repz
(bad)
(bad)
(bad)
inc
addr16
pop
xchg
repnz
xchg
xchg
dec
shl
sbb
(bad)
(bad)
jmp
aam
mov
adc
or
ins
push
add
or
or
shl
mov
data16
arpl
(bad)
(bad)
jg
out
clc
fld
sub
mov
sbb
xor
nop
jle
ret
es
bound
pop
(bad)
(bad)
(bad)
dec
enter
mov
(bad)
imul
scas
mov
aas
push
cmc
stos
jmp
(bad)
inc
jns
in
sub
xor
data16
cmp
(bad)
(bad)
(bad)
jmp
xchg
pop
jae
inc
sbb
mov
cmp
push
fld
jl
adc
inc
lock
sub
cmp
xor
mov
xchg
adc
mov
(bad)
call
mov
rcl
adc
mov
fwait
fs
(bad)
cmp
hlt
jne
(bad)
(bad)
(bad)
call
sub
js
jae
cmp
les
ficomp
cmp
cld
dec
cld
push
shr
fcomp
dec
inc
mov
adc
and
leave
push
pop
add
(bad)
je
mov
in
(bad)
jg
inc
call
and
xor
inc
ret
xchg
and
mov
cmp
(bad)
(bad)
call
inc
imul
sub
sub
add
inc
aaa
retf
aad
out
call
clc
loope
adc
dec
fs
ret
xchg
daa
loope
cdq
push
push
dec
jmp
clc
inc
nop
pop
push
lea
push
cmps
push
jae
(bad)
scas
mov
pop
cld
stc
bound
loopne
(bad)
(bad)
inc
test
push
jmp
test
sar
fisubr
push
adc
jno
xchg
inc
mov
ja
(bad)
dec
cld
rcr
add
or
cmps
mov
(bad)
dec
dec
xor
add
sub
jmp
push
mov
cs
scas
addr16
fdivr
leave
mov
pop
out
test
int3
inc
pop
pop
sbb
scas
(bad)
inc
cld
xchg
mov
ror
les
xchg
adc
mov
gs
cmp
sbb
fild
cmps
xchg
sbb
call
add
xor
cmps
fistp
pop
fcom
push
cli
cmp
aam
inc
xlat
mov
cmps
cmps
ins
cmp
ins
daa
inc
mov
mov
mov
ja
outs
mov
adc
call
(bad)
jne
dec
sbb
(bad)
(bad)
(bad)
dec
sbb
mov
mov
fwait
out
jnp
out
leave
xchg
sbb
stc
loope
mov
add
(bad)
cmp
push
out
pushf
ins
mov
jge
(bad)
(bad)
inc
jbe
lea
pop
cs
pop
ror
cmp
(bad)
(bad)
inc
sub
aaa
xor
dec
cdq
shl
add
outs
aaa
cmp
scas
sub
in
mov
jg
pusha
sub
push
dec
jmp
in
adc
inc
stos
je
fdivr
or
stos
or
in
inc
inc
std
(bad)
(bad)
inc
push
pop
ss
push
pop
test
mov
ins
cmp
push
push
push
push
jp
mov
cmps
xor
(bad)
push
adc
mov
aas
lock
fimul
sub
js
loopne
ret
inc
inc
inc
jne
add
pusha
xor
mov
pushf
cwde
sbb
mov
adc
mov
dec
and
gs
aam
mov
sub
xchg
adc
movs
dec
call
nop
push
push
mov
sbb
js
rcl
mov
idiv
(bad)
(bad)
cmp
jmp
arpl
stos
jle
leave
loop
daa
sub
leave
or
call
popa
inc
and
mov
jecxz
dec
enter
add
(bad)
inc
xchg
(bad)
stc
dec
lahf
or
and
(bad)
gs
(bad)
call
push
mov
pop
adc
push
sbb
xor
(bad)
push
test
call
add
scas
mov
leave
jmp
dec
mov
scas
dec
repnz
and
outs
cli
push
ror
adc
cmp
in
leave
mov
push
(bad)
mov
in
xor
icebp
retf
ret
das
jecxz
fistp
dec
iret
repz
(bad)
mov
dec
out
mov
mov
xchg
mov
adc
inc
in
jbe
mov
(bad)
(bad)
(bad)
inc
ins
adc
mov
lock
sub
adc
mov
sub
int
push
sbb
push
xor
call
test
fld
(bad)
in
mov
(bad)
pop
loop
(bad)
dec
mov
inc
pop
in
jmp
sbb
rcr
rcl
mov
add
(bad)
mov
imul
iret
jae
cmps
(bad)
and
push
(bad)
jmp
std
mov
fld
retf
cmp
add
imul
lods
aas
ss
fidivr
test
loope
mov
sahf
mov
(bad)
dec
push
(bad)
or
ins
pop
sbb
xor
or
out
ret
out
jno
dec
(bad)
call
cmp
dec
aam
sub
pop
imul
scas
not
fidivr
(bad)
(bad)
out
scas
ins
inc
ret
xchg
dec
mov
scas
xchg
pop
xchg
xchg
stos
mov
movs
dec
mov
jmp
in
in
push
popa
pop
lods
jl
ret
jo
dec
(bad)
mov
mov
or
lock
imul
popf
icebp
and
ret
cmc
(bad)
(bad)
jg
dec
sar
push
mov
cli
lods
sub
sbb
inc
mov
hlt
jmp
pushf
jmp
nop
mov
out
push
sbb
inc
dec
pop
xchg
cmp
(bad)
(bad)
dec
xchg
dec
fldcw
fwait
xchg
test
nop
mov
pop
sbb
(bad)
(bad)
(bad)
jg
add
shl
add
or
xor
adc
mov
jno
call
loopne
push
(bad)
shl
push
imul
nop
pop
(bad)
(bad)
jmp
and
xor
and
retf
pop
cli
mov
sub
(bad)
call
hlt
add
cs
cwde
dec
call
xor
and
je
je
(bad)
(bad)
(bad)
inc
movs
xor
xchg
pop
pop
test
pop
pop
shr
cdq
fadd
adc
sbb
popf
inc
inc
rcl
mov
pop
pop
cmps
(bad)
mov
test
clc
cs
add
dec
cmp
inc
or
shl
xor
(bad)
(bad)
(bad)
jmp
fsubr
ret
jo
jo
aas
addr16
adc
dec
loope
mov
sahf
ret
(bad)
(bad)
(bad)
jmp
cs
rol
shl
stc
add
push
cmp
je
ret
(bad)
(bad)
test
(bad)
(bad)
(bad)
inc
xchg
ins
cmp
ja
xchg
cmps
jl
xlat
xchg
xor
push
add
stos
mov
sar
(bad)
(bad)
dec
mov
lahf
xchg
ds
stos
pop
les
fidiv
cld
jg
jae
fs
push
pop
call
jecxz
mov
out
movs
mov
pop
jmp
int
(bad)
fcomip
dec
jmp
mov
jp
fld
test
test
jge
or
jmp
call
shl
mov
xor
sti
and
(bad)
(bad)
inc
pop
and
inc
dec
pop
cld
dec
push
cwde
hlt
add
xchg
xor
(bad)
retf
sub
mov
cmps
inc
in
(bad)
ins
ss
mov
std
aam
xor
scas
out
shl
ret
pushf
push
addr16
push
cmp
sbb
push
mov
push
dec
(bad)
xlat
(bad)
(bad)
sub
push
mov
push
imul
xchg
in
fidivr
xchg
cmp
cld
jb
jle
ja
dec
jg
hlt
push
call
cmps
outs
mov
pop
pmaddwd
(bad)
(bad)
push
daa
(bad)
mov
jmp
lods
jmp
arpl
mov
in
fidivr
stc
cmps
repz
pop
sub
outs
les
add
clc
stos
push
fiadd
mov
stos
adc
xchg
xor
movs
and
test
(bad)
push
pop
adc
es
and
inc
push
inc
add
dec
cmp
or
mov
fs
mov
push
mov
mov
lods
pop
xchg
mov
pop
add
pusha
je
fsub
int3
and
xor
repz
sbb
xchg
fnsave
iret
mov
cmp
and
call
outs
mov
dec
jl
(bad)
(bad)
(bad)
jmp
int3
mov
out
movs
push
xor
shr
mov
sar
jae
xchg
into
push
repnz
cmp
inc
inc
adc
push
dec
or
cmp
lock
sub
repnz
(bad)
(bad)
(bad)
push
inc
ret
sbb
dec
or
jne
test
sub
jmp
das
inc
xor
(bad)
(bad)
call
add
lock
jb
or
adc
(bad)
(bad)
mov
data16
mov
or
stc
jae
push
inc
inc
aad
aad
mov
(bad)
(bad)
(bad)
call
push
jp
dec
rol
mov
push
in
iret
inc
je
or
push
test
jmp
mov
(bad)
lods
adc
ret
and
sub
jmp
sbb
mov
push
cmc
imul
sub
ss
and
(bad)
(bad)
push
out
pop
jns
stc
cmps
out
(bad)
cli
adc
clc
mov
ss
sar
inc
jnp
test
aam
mov
adc
jne
jmp
dec
jle
mov
inc
sub
fsubr
test
leave
adc
addr16
loope
repnz
aaa
pop
(bad)
mov
pop
aad
test
jmp
fwait
or
dec
lea
mul
jne
mov
ja
jne
fisttp
mov
jle
xor
test
(bad)
call
jmp
xor
cmp
push
shl
aas
fdiv
loop
sub
aaa
or
arpl
hlt
xchg
mov
mov
cmp
jecxz
jmp
xor
(bad)
call
jp
push
leave
inc
sbb
xor
dec
inc
outs
push
stc
cmp
aam
mov
add
(bad)
(bad)
(bad)
jmp
xor
imul
rol
in
(bad)
mov
xchg
adc
sub
(bad)
(bad)
(bad)
dec
aam
mov
(bad)
and
push
sub
mov
sahf
sub
ins
jl
pop
lock
mov
jle
cmp
mov
lea
(bad)
call
push
mov
xchg
(bad)
dec
sbb
pop
and
jp
scas
aaa
rol
push
jbe
mov
test
stos
(bad)
(bad)
(bad)
jns
xchg
icebp
pusha
xchg
mov
inc
inc
rcr
mov
(bad)
dec
xor
clc
mov
mov
shl
sub
cwde
xchg
pop
out
pop
idiv
(bad)
inc
(bad)
mov
sub
adc
or
jge
add
sti
sbb
adc
scas
je
enter
movs
(bad)
jmp
into
xor
and
cmps
sub
mov
lds
xor
push
or
outs
popf
ss
push
retf
iret
jae
stos
xor
cmp
(bad)
inc
mov
fmul
push
inc
push
mov
xor
dec
and
loope
inc
daa
inc
(bad)
(bad)
(bad)
jmp
dec
or
sbb
and
or
pop
cmps
ss
fidivr
cmp
(bad)
(bad)
(bad)
jmp
ror
pop
cwde
push
or
cwde
push
popa
xchg
mov
retf
div
add
out
cli
(bad)
push
inc
xchg
lea
call
add
movs
mov
ins
popf
add
(bad)
(bad)
dec
xchg
leave
pushf
pop
jns
or
popa
dec
daa
jge
mov
dec
mov
dec
idiv
or
(bad)
(bad)
call
push
cmp
stos
inc
sbb
jecxz
and
pop
rsqrtps
mov
gs
adc
push
retf
cmp
jecxz
dec
and
retf
pop
cmp
mov
inc
out
mov
mov
cmc
shl
cmp
aad
ret
ror
jnp
int3
mul
dec
xor
mov
jle
in
sahf
(bad)
into
and
data16
loopne
das
in
cwde
add
inc
(bad)
(bad)
push
sub
sub
xchg
loope
das
add
pop
iret
popa
push
xchg
mov
xchg
xchg
or
mov
fwait
ins
jno
or
cmps
fld
push
outs
cmp
cli
sub
sbb
sub
scas
shl
je
mov
sub
imul
daa
icebp
jo
lock
aaa
mov
dec
imul
dec
add
std
fsub
mov
pop
xchg
xlat
or
pop
sub
inc
(bad)
(bad)
push
push
push
lea
xchg
mov
mov
inc
sub
hlt
mov
(bad)
scas
(bad)
dec
push
jecxz
ret
out
lods
in
or
leave
mov
add
or
jmp
ss
(bad)
(bad)
sbb
loopne
sbb
xchg
popf
mov
push
(bad)
(bad)
(bad)
call
popa
jle
xchg
push
aam
leave
popf
ja
mov
or
push
movs
push
retf
test
js
call
xchg
stc
cld
push
(bad)
(bad)
(bad)
inc
dec
je
push
or
es
adc
xchg
or
outs
ds
jmp
test
lods
not
(bad)
(bad)
call
push
loope
mov
jmp
jb
add
xor
mov
(bad)
(bad)
jmp
mov
in
das
lods
je
cli
add
sbb
dec
lahf
mov
ins
(bad)
lock
(bad)
mov
into
pop
mov
push
sbb
pop
jno
jge
jle
sar
jmp
pop
push
dec
add
push
xchg
cmp
or
(bad)
(bad)
jmp
pop
and
jp
mov
jno
lahf
sub
rcl
stos
push
ins
mov
and
icebp
ins
(bad)
(bad)
(bad)
call
leave
xchg
cmp
and
jns
cmc
cmps
mov
push
das
pop
popf
repnz
mov
test
adc
loope
stos
cmp
ret
sbb
std
repnz
(bad)
js
mov
push
les
(bad)
(bad)
(bad)
aas
(bad)
shr
call
das
cmc
mov
xchg
mov
je
test
and
sub
(bad)
(bad)
(bad)
push
out
xor
inc
fs
add
dec
pop
xchg
loope
xchg
out
push
fild
icebp
jb
aad
push
push
mov
(bad)
jmp
xor
scas
test
mov
fldcw
js
mov
mov
jg
cmc
jns
add
call
dec
ficomp
in
(bad)
dec
leave
out
mov
js
xchg
ja
cli
in
out
ds
pop
cmp
sub
mov
push
pop
cmps
idiv
jnp
rcr
and
(bad)
inc
into
add
cmp
push
or
outs
cld
dec
pop
addr16
dec
enter
jle
xor
jb
movs
frstor
ret
call
int
inc
es
popa
or
(bad)
dec
mov
(bad)
scas
xchg
lods
mov
pop
cli
call
jne
cli
(bad)
in
popf
clc
ins
cmp
cmp
xchg
mov
sub
sub
dec
outs
int
sub
iret
pop
iret
inc
cmp
jmp
sbb
pop
imul
mov
and
sbb
cmp
(bad)
call
fstp
mov
enter
fidiv
fiadd
(bad)
(bad)
(bad)
(bad)
call
pop
mov
out
and
sbb
or
or
xchg
pop
js
jo
enter
sub
dec
lock
in
jl
mov
imul
nop
out
test
dec
and
(bad)
(bad)
(bad)
(bad)
jle
test
xchg
loop
adc
jbe
aas
adc
mov
(bad)
(bad)
jmp
stc
sbb
jae
aas
or
mov
cmp
mov
pop
xlat
or
jmp
push
push
les
xchg
dec
mov
(bad)
call
cwde
repnz
sbb
aas
scas
enter
out
ret
sub
sub
push
loope
gs
xchg
aaa
or
inc
(bad)
mov
clc
aam
stc
scas
dec
xor
sbb
(bad)
(bad)
(bad)
dec
mov
pop
add
push
cmp
push
lock
xchg
aad
out
push
jno
xor
(bad)
push
loopne
shr
cmp
(bad)
mov
sub
add
das
sbb
cmps
mov
jbe
mov
jno
loop
cmp
inc
adc
mov
popa
(bad)
(bad)
(bad)
(bad)
cli
in
loope
xchg
jecxz
loopne
js
dec
xchg
adc
xchg
ins
push
(bad)
ret
sub
iret
aaa
js
into
mov
add
into
or
jecxz
rcr
gs
aad
adc
(bad)
(bad)
jmp
and
sar
and
inc
push
push
cli
int3
js
sbb
rcl
push
fisub
jbe
imul
sbb
add
jmp
pusha
outs
mov
(bad)
(bad)
call
add
sbb
fisttp
jb
mov
rcr
xchg
in
and
mov
cli
(bad)
(bad)
cmp
test
test
xchg
lods
sar
push
mov
nop
shl
(bad)
and
ficomp
push
stos
ss
push
test
mov
sub
jge
ror
iret
stos
ins
xor
(bad)
mov
mov
es
sbb
outs
neg
(bad)
push
xor
jge
outs
push
inc
(bad)
mov
imul
fisttp
(bad)
(bad)
push
jo
outs
ret
fs
mov
ret
rol
fs
pushf
in
mov
pop
pop
(bad)
(bad)
call
int
cmovnp
loope
ss
addr16
sbb
sbb
lea
adc
inc
scas
scas
test
(bad)
dec
add
and
inc
dec
pop
nop
jno
(bad)
(bad)
jmp
xor
xchg
jp
fidivr
xchg
or
in
scas
lods
xchg
inc
sub
mov
sahf
popa
and
(bad)
(bad)
inc
adc
jno
mov
test
int3
ror
sub
or
sub
and
jnp
icebp
mov
(bad)
(bad)
jg
inc
enter
loope
fidivr
sub
mov
jmp
jbe
(bad)
(bad)
(bad)
push
cmp
sar
test
pusha
pushf
fnop
sbb
sbb
imul
jmp
and
(bad)
call
mov
jle
mov
std
loope
aaa
pushf
popf
jmp
mov
aas
popf
clc
repz
scas
mov
sahf
inc
jnp
or
xor
leave
mov
and
mov
pop
adc
test
enter
je
(bad)
(bad)
jmp
inc
mov
sub
mov
movs
test
inc
mov
je
fadd
dec
call
outs
sub
jge
lahf
jp
fild
xor
fbld
adc
ja
cmp
mov
pop
data16
fnstenv
test
test
pushf
test
and
or
call
and
mov
push
hlt
(bad)
inc
out
adc
sbb
and
jne
push
popf
pop
test
ins
inc
scas
push
loope
dec
scas
js
xchg
arpl
inc
(bad)
(bad)
(bad)
jmp
popf
test
gs
jnp
fld
sub
fisubr
mov
data16
out
adc
or
clc
fwait
jbe
das
call
je
cmp
(bad)
(bad)
(bad)
call
push
popf
add
into
ins
outs
clc
jbe
add
push
test
(bad)
dec
repnz
and
scas
(bad)
(bad)
(bad)
call
push
mov
jg
mov
jmp
add
xchg
dec
ss
pusha
mov
(bad)
(bad)
(bad)
jmp
ror
pop
xor
xchg
and
fmul
push
test
cwde
push
retf
movs
(bad)
(bad)
jmp
pop
lds
pop
inc
test
popf
push
dec
mov
add
jbe
icebp
pop
mov
arpl
(bad)
call
(bad)
(bad)
jmp
pushf
fucomip
cs
int
mov
pop
pop
mov
daa
(bad)
sub
in
add
imul
test
leave
or
ror
adc
test
and
(bad)
(bad)
call
daa
enter
out
aam
mov
mov
fisttp
scas
mov
clc
mov
jo
stos
sahf
and
jecxz
repz
cli
add
iret
add
(bad)
(bad)
(bad)
mov
ins
push
nop
inc
loopne
ret
leave
les
data16
inc
es
(bad)
(bad)
jmp
clc
xlat
movs
not
push
push
sbb
jns
lods
pop
sbb
hlt
in
imul
scas
mov
mov
cmp
out
or
mov
or
(bad)
(bad)
jg
push
fwait
dec
mov
sub
gs
xchg
leave
xchg
add
ss
iret
out
fadd
(bad)
mov
into
mov
pop
aam
push
add
pop
ss
and
(bad)
jg
xchg
lods
dec
out
loop
xor
loope
or
or
cmps
mov
retf
ja
push
adc
jle
mov
cli
std
and
jmp
sub
mov
(bad)
mov
xchg
sub
and
sbb
mov
pop
popa
sbb
push
cmp
into
xchg
adc
add
jecxz
inc
mov
das
(bad)
(bad)
inc
fcomp
xlat
popa
in
std
out
cmp
scas
jnp
pop
ins
dec
xchg
std
(bad)
cmp
rol
dec
xchg
loope
mov
jae
push
loop
jne
push
icebp
fdivrp
mov
dec
sahf
out
movs
popa
into
jge
rcr
sub
inc
retf
jns
jmp
add
adc
push
and
aad
dec
add
(bad)
(bad)
(bad)
(bad)
fdiv
fimul
test
add
pop
xchg
dec
nop
stc
sub
mov
fild
jmp
push
leave
mov
(bad)
(bad)
fcomip
out
stc
(bad)
sub
test
adc
pop
mov
pop
enter
or
(bad)
call
jbe
add
adc
cmp
outs
(bad)
cmps
outs
pushf
push
cwde
in
push
jle
xlat
dec
xor
jno
cmp
loop
pushf
and
nop
stos
in
mov
div
dec
pop
sub
push
(bad)
sub
mov
pop
or
es
push
add
out
pusha
push
gs
pop
jno
(bad)
(bad)
call
or
mov
pop
stc
jo
xlat
xlat
jne
sbb
das
gs
cli
(bad)
xchg
clc
(bad)
(bad)
push
push
mov
cmc
pop
in
xor
sbb
(bad)
pop
xor
pop
or
arpl
(bad)
inc
xchg
imul
lods
fucom
int3
mov
aaa
enter
dec
mov
clc
mov
fdivp
or
xchg
inc
cmp
xor
(bad)
fistp
int3
retf
jle
or
popa
icebp
call
jns
xchg
sbb
stos
mov
or
(bad)
(bad)
(bad)
inc
call
mov
lock
arpl
inc
inc
mov
jl
lds
popf
cmp
inc
xchg
in
jmp
mov
or
imul
xor
xor
add
lods
dec
(bad)
test
pop
repnz
mov
or
enter
scas
dec
jnp
mov
inc
shl
sahf
fwait
inc
jns
xchg
stos
and
shl
into
sub
jmp
pop
pop
mov
inc
inc
xchg
sbb
fisubr
mov
jae
cli
(bad)
out
clc
std
mov
enter
xor
gs
cdq
loopne
xor
aaa
outs
(bad)
(bad)
jmp
sbb
fst
and
mov
pop
out
push
cmp
cmp
sub
cmp
inc
fild
lahf
cld
push
jg
sahf
aam
rcl
(bad)
cmp
jno
adc
test
xchg
ds
call
cld
mov
(bad)
and
and
push
fstp
fwait
pop
aad
cwde
repnz
(bad)
(bad)
(bad)
call
push
addr16
push
xchg
adc
(bad)
aam
and
cmp
adc
cld
fdiv
jnp
push
popf
pop
pop
add
and
in
push
test
xchg
(bad)
(bad)
test
shr
sub
imul
pusha
fdiv
ss
mov
test
lods
xchg
sbb
bound
pop
fs
sbb
jno
jmp
iret
push
dec
sbb
sub
jmp
test
gs
into
movs
std
sub
bound
scas
cmc
xchg
loope
nop
call
and
mov
in
pop
add
test
xlat
xchg
mov
and
in
sbb
lock
repnz
inc
retf
sub
or
xchg
addr16
xor
jmp
pop
adc
xor
mov
imul
sub
push
xor
xchg
add
leave
sub
sbb
mov
jb
repnz
loop
in
(bad)
fst
adc
stos
pop
push
cmc
jl
add
(bad)
(bad)
(bad)
(bad)
ds
sub
scas
add
cmps
push
dec
xchg
push
repnz
sub
xor
dec
test
rcl
mov
mov
or
mov
lahf
(bad)
(bad)
(bad)
(bad)
sti
(bad)
sahf
iret
jg
test
idiv
fwait
daa
lods
sar
mov
inc
or
stos
(bad)
(bad)
push
jp
imul
mov
mov
dec
lea
xor
(bad)
jne
enter
fmul
loop
jmp
jmp
mov
arpl
push
sbb
ret
(bad)
icebp
in
pop
cld
das
dec
daa
arpl
cld
shl
push
xor
test
jmp
sub
ret
and
(bad)
es
adc
xor
jg
fcomip
in
mov
int
mov
call
mov
(bad)
(bad)
call
js
mov
pushf
scas
jmp
jbe
shl
lahf
jmp
push
inc
sub
imul
or
cmps
loopne
cs
jo
int
das
inc
cmps
sar
out
jae
jne
lea
jp
fstp
loope
fidiv
jp
retf
push
enter
inc
outs
test
push
push
iret
hlt
mov
pop
xchg
add
stos
test
shr
mov
lock
lods
and
add
sar
sti
push
mov
pop
aas
push
mov
or
push
sub
or
idiv
dec
mov
push
(bad)
aam
dec
cli
ins
mov
jp
repz
xchg
les
inc
cli
int3
sbb
out
dec
daa
call
adc
clc
pop
scas
mov
dec
adc
mov
(bad)
(bad)
(bad)
inc
test
arpl
and
mov
sub
sti
or
fdivp
(bad)
push
push
inc
retf
xor
fild
or
xor
fcomp
jb
mov
call
test
mov
sbb
sbb
rcr
jne
xchg
pop
sub
(bad)
(bad)
call
cmp
cli
stos
test
fiadd
aas
and
sar
mov
(bad)
(bad)
(bad)
call
ret
inc
cwde
or
or
adc
sbb
and
sub
shr
sub
inc
dec
inc
loopne
scas
arpl
xor
test
popa
mov
imul
and
xor
mov
retf
shr
leave
pop
and
inc
inc
dec
add
mov
into
jecxz
(bad)
(bad)
jmp
pop
in
rol
push
retf
test
inc
movs
xor
(bad)
fsub
stos
or
xchg
mov
mov
mov
xlat
lock
jle
pop
xor
dec
rcr
and
jg
(bad)
call
data16
les
sub
adc
cmc
call
jl
mov
mov
retf
imul
rcr
or
and
outs
push
pop
lahf
(bad)
(bad)
(bad)
(bad)
js
mov
daa
push
xlat
cli
adc
jg
outs
cmp
leave
addr16
sub
retf
imul
call
std
test
add
rol
and
popa
fwait
sbb
mov
je
(bad)
(bad)
inc
and
cmp
or
mov
add
imul
aaa
loope
jmp
in
xor
popf
out
push
outs
pushf
imul
es
xlat
neg
add
out
push
pop
mov
lock
mov
and
cs
jae
test
cmp
(bad)
sar
cmp
in
xchg
sbb
pop
pop
pop
ins
mov
(bad)
(bad)
(bad)
in
dec
into
(bad)
cmp
in
fcomi
aas
call
pop
bndldx
pop
mov
imul
call
ret
xor
ret
hlt
ror
fldcw
xchg
mov
sub
cmps
popa
iret
lods
and
(bad)
(bad)
cld
out
pop
aas
dec
jecxz
push
popf
dec
std
cli
mov
in
jbe
icebp
adc
(bad)
(bad)
(bad)
call
mov
mov
mov
or
push
repz
scas
inc
or
xchg
test
(bad)
inc
in
xchg
push
jne
popa
mov
dec
repz
mov
(bad)
(bad)
push
jmp
dec
jbe
cmp
imul
pop
mov
(bad)
push
lods
pushaw
dec
aas
sbb
adc
dec
adc
lods
dec
sbb
clc
sahf
sbb
adc
in
repnz
adc
and
mov
mov
jno
mov
xor
enter
sbb
out
mov
aam
lock
lods
add
enter
dec
pushf
movs
push
jp
adc
push
fcom
push
sub
das
pop
inc
mov
inc
dec
dec
jo
pop
daa
scas
jge
nop
(bad)
xchg
xchg
sahf
(bad)
(bad)
(bad)
(bad)
cld
dec
dec
cld
into
push
inc
inc
fiadd
ret
mov
aaa
mov
xor
dec
jle
mov
xor
jg
rcr
arpl
out
repz
xor
(bad)
(bad)
mov
push
adc
sub
iret
lds
es
adc
push
pop
or
(bad)
call
ins
inc
xchg
push
call
xor
into
push
jne
pop
popa
xchg
test
stos
dec
mov
cdq
push
(bad)
(bad)
call
jmp
mov
xchg
popf
or
mov
and
(bad)
jmp
inc
daa
xchg
test
mov
out
pop
in
scas
inc
jbe
sar
mov
(bad)
(bad)
push
ins
adc
sub
sub
xor
nop
lea
or
(bad)
fcomip
(bad)
xor
sbb
arpl
inc
hlt
loope
call
cmp
(bad)
(bad)
jg
test
movs
lds
push
test
pop
mov
push
jg
dec
push
jmp
call
(bad)
out
je
movs
mov
icebp
pusha
cmp
pop
lahf
cli
pop
mov
enter
(bad)
(bad)
(bad)
jo
mov
mov
or
xor
inc
mov
or
(bad)
(bad)
inc
scas
fstp
and
xchg
scas
add
mov
inc
fnsave
push
js
push
jbe
jmp
sub
sbb
jns
ins
(bad)
(bad)
(bad)
call
imul
mov
test
lods
mov
movs
test
setnp
xor
mov
(bad)
aam
cmp
cld
xchg
scas
cmc
push
mov
test
fwait
aaa
dec
(bad)
mov
mov
jecxz
cmps
inc
pop
aad
pop
adc
jmp
stos
jno
jae
fmul
mov
fnstenv
xlat
push
push
js
out
mov
(bad)
fild
clc
mov
clc
push
jecxz
dec
sahf
ret
mov
sbb
or
(bad)
mov
popa
mov
adc
dec
out
and
cmp
es
push
sbb
or
pop
xchg
fisub
mov
push
hlt
push
mov
mov
fstp
jae
and
test
fidivr
push
mov
in
inc
inc
(bad)
(bad)
(bad)
push
test
ja
sbb
mov
sahf
movs
push
sub
retf
or
dec
mov
sub
(bad)
(bad)
dec
loop
xchg
in
out
ins
fnsave
ins
mov
fild
sub
(bad)
jmp
test
lea
cwde
or
and
out
adc
adc
cmp
pop
das
or
add
push
add
mov
cmp
sbb
xchg
push
lods
push
rcl
(bad)
(bad)
(bad)
jg
inc
jo
add
add
adc
xchg
cmps
dec
sub
lea
xor
pop
push
add
mov
popa
int
shl
dec
ds
and
cld
(bad)
(bad)
(bad)
mov
push
lock
xchg
lods
stos
xor
call
push
mov
outs
int
(bad)
(bad)
(bad)
jp
or
enter
int
stc
(bad)
inc
ficomp
pop
and
(bad)
(bad)
mov
loope
sbb
cmp
hlt
pop
out
dec
(bad)
push
or
cld
stos
out
fnstcw
mov
out
add
pop
xchg
lds
dec
loopne
movs
fld1
mov
(bad)
(bad)
(bad)
(bad)
(bad)
std
lahf
fdiv
int
dec
test
push
sbb
pop
xor
jns
(bad)
or
imul
mov
es
and
pop
mov
call
inc
sub
imul
xlat
nop
loopne
sysret
(bad)
lock
inc
cmp
test
(bad)
(bad)
call
gs
and
sbb
pusha
lea
outs
fdivr
cmp
fsubp
or
push
(bad)
dec
xlat
(bad)
(bad)
(bad)
push
ins
mov
mov
adc
mov
or
ins
scas
bound
or
idiv
in
(bad)
(bad)
(bad)
(bad)
fsubp
jb
dec
xchg
fisub
cld
loope
push
pushf
pop
mov
jbe
pop
sti
iret
(bad)
out
add
sar
inc
xor
sbb
out
arpl
pop
jle
cmps
leave
jmp
(bad)
fnstsw
sbb
mov
xchg
repz
iret
sahf
jmp
pop
adc
loopne
out
stc
aam
cld
fdiv
jnp
mov
repz
loop
jl
sbb
xchg
jo
mov
cdq
jecxz
inc
(bad)
(bad)
(bad)
(bad)
jmp
inc
push
cmp
(bad)
into
je
cmp
add
loope
adc
inc
sbb
loope
(bad)
(bad)
jmp
sub
xchg
and
xlat
fstp
sti
aas
cmp
out
call
xlat
int3
rol
adc
outs
movs
add
call
pop
call
outs
jge
(bad)
(bad)
dec
fwait
das
in
jbe
iret
push
(bad)
pop
pop
adc
sub
adc
leave
aas
in
sub
inc
(bad)
(bad)
(bad)
push
(bad)
stos
fcomp
mov
shr
pop
cmp
fs
inc
ds
add
push
mov
(bad)
(bad)
dec
inc
sub
pusha
mov
scas
adc
adc
sbb
jge
or
(bad)
(bad)
dec
push
scas
je
daa
jne
daa
repz
repnz
repz
test
shr
clc
cmps
push
add
pop
les
fdivp
in
(bad)
(bad)
jmp
xchg
inc
cli
cs
sbb
add
or
gs
(bad)
(bad)
(bad)
dec
js
push
movs
mov
or
add
and
xor
and
inc
test
(bad)
(bad)
push
fs
inc
push
lods
mov
loope
adc
mov
aaa
in
mov
call
mov
push
movs
movs
jmp
add
(bad)
aam
(bad)
(bad)
(bad)
(bad)
aas
or
cmp
add
mov
lock
add
xor
stc
(bad)
(bad)
(bad)
dec
push
push
mov
push
inc
add
and
mov
inc
lock
jmp
dec
jg
adc
(bad)
(bad)
push
jle
outs
imul
sub
jge
test
xor
mov
jl
ja
add
es
xlat
cli
std
(bad)
(bad)
dec
dec
retf
mov
mov
jmp
and
lahf
sahf
sbb
inc
xchg
pop
add
sbb
mov
or
outs
shl
(bad)
(bad)
(bad)
mov
outs
or
sub
icebp
loopne
jnp
and
call
sahf
add
out
add
out
sub
arpl
call
cld
(bad)
(bad)
or
cs
into
sbb
out
not
and
adc
pop
add
cmp
mov
mov
and
xor
or
(bad)
dec
fldcw
mov
xchg
inc
mov
test
inc
shl
lods
outs
push
add
(bad)
in
(bad)
scas
scas
adc
out
cs
mov
(bad)
jg
imul
push
stos
mov
pusha
loop
mov
and
inc
nop
xlat
call
in
mov
mov
pop
xchg
xor
push
mov
inc
ret
dec
(bad)
(bad)
(bad)
jg
sbb
add
pop
push
stc
pop
xor
fs
idiv
push
xchg
mov
(bad)
(bad)
push
mov
mov
dec
out
pop
push
or
xchg
xor
loope
mov
(bad)
dec
test
dec
pop
jmp
xor
mov
enter
push
push
shl
leave
fimul
jl
nop
and
xor
push
dec
and
xor
sbb
and
imul
(bad)
dec
cmp
movs
mov
mov
pop
fcomp
cwde
(bad)
jp
sub
mov
push
add
lods
inc
add
add
xlat
fwait
(bad)
(bad)
jmp
scas
mov
push
jb
mov
sub
(bad)
push
shr
or
call
out
leave
movs
out
fcom
out
mov
jno
pop
pop
dec
cmc
sbb
mov
in
jge
(bad)
(bad)
dec
pop
in
and
sub
repnz
inc
dec
ja
cmp
mov
push
and
jle
(bad)
(bad)
dec
mov
dec
clc
bound
add
shl
mov
out
adc
mov
push
lods
nop
bound
into
jmp
call
(bad)
out
xor
cmp
xchg
fucom
ins
xor
addr16
or
ret
fcom
(bad)
sar
(bad)
(bad)
(bad)
faddp
loop
lds
xor
mov
inc
jl
ds
(bad)
(bad)
(bad)
(bad)
js
out
cmp
mov
in
jno
inc
xor
adc
test
ss
bound
mov
jl
dec
loop
adc
pop
pop
inc
outs
fadd
outs
push
mov
jo
sub
push
scas
xchg
xor
xor
je
xchg
in
addr16
mov
sub
push
or
jb
ret
(bad)
dec
mov
sbb
aam
add
jmp
cmp
arpl
push
jo
out
(bad)
(bad)
(bad)
jmp
push
cmps
dec
push
pop
sbb
sbb
pop
pop
jmp
jge
cmp
sbb
fidivr
cmp
pop
mov
(bad)
repnz
jecxz
jb
out
lods
pop
fnsave
(bad)
cmc
(bad)
dec
xor
push
mov
sub
mov
jmp
call
jmp
outs
nop
movs
mov
jecxz
shl
repnz
(bad)
mov
jmp
xchg
mov
push
ja
clc
(bad)
js
sub
aam
daa
inc
clc
daa
(bad)
(bad)
(bad)
jmp
loop
enter
pop
dec
push
cli
dec
mov
mov
push
(bad)
pcmpgtb
test
loopne
inc
dec
(bad)
jg
jmp
sub
(bad)
mov
xchg
sub
sub
stc
into
fistp
inc
lock
(bad)
jmp
sahf
ja
mov
clc
loop
neg
mov
add
(bad)
mov
inc
or
rcl
fcom
call
lea
(bad)
(bad)
(bad)
(bad)
inc
aas
sti
leave
sbb
add
sub
cmp
xchg
lds
dec
sbb
test
loop
push
nop
clc
pop
mov
sub
mov
(bad)
(bad)
(bad)
call
daa
retf
adc
cld
(bad)
icebp
lds
push
jns
cmp
sbb
retf
add
(bad)
(bad)
jmp
jp
(bad)
push
clc
cld
aas
add
mov
mov
or
stc
out
popa
xor
jle
iret
(bad)
lock
(bad)
(bad)
inc
push
fucomi
add
(bad)
loop
jg
js
stos
xor
sbb
xchg
push
imul
(bad)
mov
dec
sub
je
stc
xor
jae
je
xor
scas
fild
rol
push
inc
dec
cli
imul
test
(bad)
cmp
pmuludq
add
loope
gs
add
dec
in
int3
cwde
or
icebp
xor
dec
fadd
adc
dec
adc
call
jns
(bad)
stc
mov
(bad)
(bad)
(bad)
inc
pop
(bad)
fimul
fidiv
xlat
pop
scas
mov
fwait
xor
push
(bad)
(bad)
(bad)
inc
les
das
dec
cmp
scas
fcom
hlt
xchg
cmp
dec
es
jns
call
loop
(bad)
inc
mov
sub
enter
mov
jmp
popa
cli
fild
stos
hlt
xchg
idiv
ret
out
in
loopne
jmp
sbb
add
scas
loopne
inc
pop
test
data16
sti
xor
pop
inc
mov
(bad)
jno
lds
mov
inc
fldenv
jbe
outs
cli
(bad)
inc
xor
pop
pop
inc
mov
fild
ins
add
(bad)
(bad)
jg
les
repz
cdq
mov
icebp
sub
xchg
and
mov
xor
fild
inc
adc
mov
dec
ret
inc
and
push
std
pop
jp
cmp
push
mov
icebp
mov
aad
and
aaa
cld
mov
mov
xchg
sbb
(bad)
(bad)
(bad)
jmp
fld
imul
mov
jg
iret
push
(bad)
(bad)
out
and
pop
xlat
ror
out
xchg
fisttp
inc
in
or
sar
xchg
aad
pop
js
aaa
add
int3
(bad)
(bad)
(bad)
call
in
stos
retf
scas
sub
or
sbb
add
mov
jae
std
cmc
jne
(bad)
(bad)
call
sahf
jae
adc
or
cmc
push
adc
js
push
aam
repz
jns
dec
xor
(bad)
(bad)
call
xchg
sub
fdiv
mov
jmp
fmul
and
int
sub
(bad)
(bad)
(bad)
dec
(bad)
sub
inc
test
sub
sahf
push
push
dec
sbb
pop
enter
fbld
scas
test
call
ss
or
stos
add
adc
jno
jno
add
(bad)
(bad)
(bad)
dec
xchg
pop
cmp
push
mov
dec
dec
movs
pushf
(bad)
mov
imul
inc
repnz
sub
test
sbb
mov
dec
enter
pusha
loopne
(bad)
(bad)
push
fwait
test
dec
add
pop
inc
or
mov
mov
dec
clc
jmp
mov
jl
xchg
das
sbb
jbe
adc
ins
cs
(bad)
(bad)
(bad)
jmp
scas
inc
nop
lods
xchg
cmps
xchg
jmp
push
leave
and
stos
mov
daa
or
xor
dec
push
adc
movs
ret
pop
and
shl
inc
sar
push
xchg
cli
(bad)
(bad)
call
inc
sub
mov
enter
cmps
sbb
or
ret
iret
das
xor
(bad)
(bad)
fldln2
dec
sbb
popf
jnp
xchg
and
(bad)
(bad)
call
std
xchg
cmp
add
xchg
push
fs
adc
(bad)
(bad)
(bad)
jmp
xchg
sbb
inc
loope
arpl
ror
sar
mov
lock
inc
mov
(bad)
(bad)
(bad)
(bad)
jmp
push
or
cmps
adc
aas
popf
adc
and
stos
sub
call
popf
mov
inc
push
jbe
arpl
mov
cmp
aam
(bad)
(bad)
push
and
lock
sub
or
ds
std
jge
out
pop
cmc
jmp
sti
mov
or
cmps
loop
cmp
jg
sbb
out
(bad)
(bad)
jmp
out
call
fistp
(bad)
(bad)
daa
lahf
jnp
repz
popf
xlat
pop
jb
and
lock
(bad)
(bad)
(bad)
jge
ins
xchg
(bad)
test
adc
xchg
xchg
sti
out
clc
in
(bad)
call
sbb
jbe
add
push
push
cmp
es
movs
call
add
(bad)
push
sub
lods
sub
les
scas
jb
pop
jp
xor
outs
cli
(bad)
fld
jbe
scas
adc
lods
push
in
cmps
add
sbb
mov
cmc
push
jg
rol
std
iret
pop
push
addr16
(bad)
(bad)
jle
mov
fwait
aad
mov
mov
(bad)
(bad)
call
jae
xchg
cli
adc
out
xor
or
xchg
ds
sbb
mov
push
cmps
ja
cmc
leave
ret
pop
cmp
or
adc
loop
pop
jo
out
jecxz
dec
push
(bad)
mov
test
mov
push
inc
dec
aad
mov
test
es
jl
retf
mov
(bad)
(bad)
(bad)
jmp
jno
cmc
inc
sar
sbb
mov
cmp
xor
mov
fidivr
(bad)
(bad)
(bad)
jmp
cli
out
daa
mov
shr
fld
iret
jg
fistp
mov
outs
cmps
adc
(bad)
(bad)
jmp
pop
ret
ja
sub
popa
mov
jbe
jp
leave
pop
test
inc
retf
pushf
dec
mov
(bad)
(bad)
(bad)
call
and
xchg
jmp
cmp
inc
sub
(bad)
das
cwde
cmps
cmp
xor
test
scas
mov
inc
push
or
(bad)
pop
sbb
add
cmp
push
aad
div
ds
mov
(bad)
jmp
out
add
(bad)
ins
mov
(bad)
jmp
sbb
sbb
pop
pop
sahf
xor
jg
lock
cmp
js
into
fbstp
imul
adc
dec
push
mov
(bad)
(bad)
(bad)
jnp
lahf
sbb
repz
xchg
mov
mov
pop
out
sahf
or
and
or
icebp
dec
cli
enter
and
stc
repz
xor
jmp
mov
xor
push
imul
cld
pop
ds
lock
jle
push
pop
cwde
sub
ins
xchg
inc
cmc
push
movs
xor
es
and
pop
(bad)
(bad)
(bad)
jmp
mov
mov
and
jb
and
inc
sub
aas
mov
scas
xchg
pop
clc
(bad)
and
shr
(bad)
jmp
sub
mov
int
xchg
xchg
push
push
fwait
loopne
xchg
push
mov
or
jno
add
(bad)
dec
into
cmp
cs
cmp
in
jo
into
int3
mov
mov
jmp
mov
loop
(bad)
(bad)
jmp
dec
or
loop
push
outs
push
jl
aam
stos
imul
cli
aaa
fwait
mov
rcr
cdq
test
faddp
(bad)
(bad)
(bad)
jmp
xor
repnz
inc
xchg
lods
in
or
push
mov
jns
xor
cmp
loopne
(bad)
call
hlt
add
cld
cli
inc
inc
pop
mov
xchg
mov
sahf
or
mov
pop
add
cmp
dec
lahf
jl
lock
jb
jp
sbb
dec
cmp
add
xchg
push
repnz
(bad)
(bad)
jmp
cmc
into
mul
cmp
mov
sub
cmp
js
inc
push
adc
(bad)
out
cli
inc
mov
pushf
movs
xchg
xchg
add
mov
fdiv
xor
push
dec
and
ins
push
pop
bound
add
(bad)
or
mov
or
(bad)
(bad)
jmp
test
leave
imul
call
or
pop
sbb
pusha
and
(bad)
(bad)
(bad)
jmp
aas
or
aaa
fisttp
xchg
ja
push
lock
shl
popf
xor
inc
or
aam
(bad)
(bad)
(bad)
jmp
push
sbb
or
(bad)
jp
(bad)
(bad)
xor
ds
and
(bad)
(bad)
(bad)
(bad)
aas
xchg
inc
test
mov
cmp
cmc
xor
arpl
jne
push
inc
or
(bad)
dec
adc
cmp
test
sub
pop
and
adc
(bad)
(bad)
(bad)
call
in
mov
into
xchg
push
je
pop
mov
xchg
adc
loop
pop
mov
jno
std
(bad)
call
in
movs
mov
jo
jmp
cmps
out
jge
push
or
ja
call
das
pushf
stc
das
jl
sti
fistp
shl
in
add
(bad)
(bad)
call
inc
add
fidiv
(bad)
push
(bad)
fmul
adc
mov
mov
push
cmp
(bad)
push
dec
ins
stos
loope
mov
sahf
jecxz
jl
retf
retf
xor
xor
fs
inc
mov
add
pop
mov
out
out
int
into
pop
arpl
jns
lea
mov
call
add
jge
dec
call
(bad)
(bad)
dec
sbb
dec
loop
mov
es
jns
mov
imul
cmp
(bad)
push
or
push
push
push
cmp
aas
mov
jns
xchg
rcl
lea
mov
aaa
pop
ja
inc
aas
jo
xchg
iret
in
call
sahf
repz
cmp
xor
loop
mov
mov
xor
inc
fmul
cmp
xchg
fistp
ss
cmps
iret
jo
jne
sub
and
adc
(bad)
(bad)
jmp
and
(bad)
xchg
mov
push
xchg
dec
lods
push
lods
adc
mov
mov
inc
adc
or
jl
mov
push
adc
lock
out
jae
call
cli
fadd
pop
imul
(bad)
in
pop
pop
pop
pop
test
mov
push
call
fs
shr
(bad)
(bad)
(bad)
inc
push
xchg
les
mov
mov
inc
xor
lahf
std
loopne
fdivrp
mov
ret
shl
push
add
sub
cli
mov
push
jl
loope
jg
mov
aaa
mov
(bad)
(bad)
call
adc
ret
push
sub
test
test
inc
shl
mov
js
push
(bad)
(bad)
(bad)
jmp
cli
ret
lock
aaa
scas
add
mov
call
and
loopne
and
stos
(bad)
dec
sbb
repnz
dec
mov
into
and
(bad)
sti
inc
mov
clc
push
inc
inc
neg
aaa
cmc
fisttp
shl
addr16
stos
(bad)
(bad)
(bad)
inc
mov
xchg
lea
pop
fldenv
ds
pop
xchg
scas
jo
mov
stc
push
jle
(bad)
(bad)
call
ret
sub
pop
push
adc
adc
push
scas
mov
retf
lds
(bad)
inc
sbb
pop
test
rcl
outs
inc
cwde
push
and
icebp
xchg
arpl
inc
idiv
cdq
mov
das
cmp
cmp
mov
int3
mov
cdq
es
(bad)
(bad)
(bad)
jmp
cdq
add
mov
jne
xor
mov
sbb
xor
cmp
jmp
mov
sbb
dec
lods
jp
xor
jae
(bad)
lock
arpl
out
addr16
(bad)
inc
and
mov
dec
pop
mov
popa
aam
or
inc
xchg
lock
ror
fisttp
(bad)
jne
(bad)
jg
jg
sbb
add
js
cs
jmp
jge
lods
call
sti
mov
sub
retf
stos
(bad)
dec
mov
daa
mov
pop
mov
(bad)
(bad)
push
adc
lock
test
test
clc
enter
out
fsubr
cli
pop
scas
mov
(bad)
push
cwde
adc
pop
shr
cld
and
jge
mov
inc
or
je
sub
cmps
(bad)
(bad)
(bad)
jmp
mov
mul
push
ficom
dec
xor
mov
outs
sahf
jmp
mov
popf
and
inc
xor
jbe
repnz
int3
dec
stos
xor
adc
mov
sub
jmp
call
rol
rol
sub
pop
in
lahf
(bad)
aam
lahf
pusha
and
sbb
(bad)
jmp
mov
fidiv
dec
fs
aam
cmps
and
fsub
jo
(bad)
(bad)
dec
dec
adc
cmp
jle
scas
fwait
into
xor
ins
loopne
mov
int
xchg
jge
outs
(bad)
(bad)
inc
inc
mov
stos
add
scas
or
fs
sbb
in
rol
jb
(bad)
(bad)
dec
ror
jbe
jecxz
cs
or
pop
or
sub
dec
and
clc
call
test
je
shr
dec
jmp
add
aaa
jo
data16
fcomip
scas
jle
ins
jmp
ret
cmp
aas
out
cmp
js
outs
pop
scas
call
mov
test
xor
aam
mov
or
(bad)
(bad)
(bad)
dec
sbb
inc
retf
mov
int3
das
cmovbe
fdiv
xor
xchg
push
inc
les
(bad)
(bad)
(bad)
dec
ss
rep
lock
mov
xchg
mov
inc
rol
je
inc
fwait
mov
xor
dec
and
pop
outs
and
sub
cmc
or
aam
or
shl
add
adc
and
jnp
jo
outs
aas
push
cld
(bad)
jl
fisttp
or
js
(bad)
push
mov
inc
cli
(bad)
push
in
inc
push
(bad)
cdq
sbb
test
cs
mov
(bad)
(bad)
(bad)
(bad)
call
std
jnp
cwde
out
ret
and
lds
cmp
sbb
push
jl
adc
in
call
dec
push
(bad)
xchg
xchg
das
mov
retf
aam
sti
inc
xor
sbb
lock
nop
aad
in
sar
push
mov
and
outs
loope
imul
aad
mov
(bad)
(bad)
cmp
test
mov
repz
mov
retf
push
xchg
movs
aas
jbe
cmp
(bad)
(bad)
(bad)
(bad)
jmp
in
push
loopne
jle
push
mov
retf
pusha
call
pop
fs
movs
sub
cmp
jg
push
mov
hlt
or
movs
loope
loop
ror
sbb
mov
jp
(bad)
(bad)
jg
stos
add
icebp
int3
ja
jno
int3
popa
ret
add
pop
jle
(bad)
(bad)
push
inc
out
pop
pop
in
int
imul
cmp
mov
mov
cld
mov
mov
lods
popa
outs
xor
jmp
into
mov
iret
ss
stc
inc
fdiv
(bad)
call
cmp
cmps
cmp
sub
add
(bad)
(bad)
(bad)
out
inc
mov
pop
jp
dec
mov
sub
and
push
stos
and
mov
inc
inc
int3
mov
retf
push
mov
adc
lods
adc
in
cmp
cld
clc
xchg
jnp
jge
inc
jg
aas
dec
sahf
std
rcl
push
xor
(bad)
(bad)
call
jo
in
in
push
mov
mov
xor
and
ret
xor
(bad)
(bad)
jmp
shr
dec
adc
or
ins
outs
sub
add
das
sar
sbb
cmp
push
and
into
inc
and
imul
aad
retf
int3
push
pop
dec
mov
cwde
push
cld
xor
inc
xchg
cmp
sar
or
xor
xchg
(bad)
jmp
dec
(bad)
(bad)
call
loope
mov
mov
sub
aas
mov
dec
jmp
xor
push
mov
mov
outs
mov
pop
stos
and
and
jle
test
jmp
das
int
stos
push
mov
inc
aad
call
mov
mov
(bad)
and
stos
pop
stos
cli
cs
dec
adc
mov
push
or
ror
push
scas
cmp
div
fcom
scas
jle
dec
adc
add
push
out
out
aas
jecxz
(bad)
(bad)
cli
int3
mov
mov
loopne
dec
inc
ds
fld
retf
adc
xchg
shl
(bad)
and
or
stos
in
inc
repnz
pushf
mov
shr
inc
add
dec
xor
xlat
xor
pop
jno
mov
xchg
add
adc
add
mov
iret
fnstenv
adc
xor
cwde
push
call
mov
(bad)
(bad)
(bad)
call
pop
mov
test
nop
fadd
mov
mov
adc
mov
mov
pop
cld
mov
shl
mov
cmp
add
xor
or
call
push
clc
jecxz
dec
iret
and
and
and
jmp
stos
and
fld
lock
cmps
bound
popa
cs
and
ds
mov
pop
cmp
jo
push
jnp
mov
jp
(bad)
cdq
or
(bad)
jmp
and
mov
sbb
ret
das
mov
stos
mov
ret
pop
pop
pop
(bad)
(bad)
(bad)
(bad)
sti
xchg
aas
sti
or
lahf
mov
dec
ins
lods
enter
mov
imul
movs
push
add
imul
mov
jns
(bad)
(bad)
(bad)
mov
fsubrp
xor
ja
mov
out
mov
dec
sub
adc
(bad)
dec
bound
pop
jle
push
or
adc
jno
add
addr16
jns
(bad)
(bad)
jmp
push
inc
push
icebp
mov
icebp
call
movnti
ins
inc
pushf
rol
push
mov
adc
mov
in
xchg
jecxz
jl
in
push
xchg
loope
inc
cmp
test
mov
xchg
push
add
loop
dec
cmps
sub
and
adc
pop
cmp
add
push
push
fwait
loopne
(bad)
call
add
mov
mov
or
adc
movs
or
adc
dec
(bad)
mov
cmp
call
(bad)
(bad)
call
sahf
fbld
aaa
or
clc
(bad)
and
sbb
and
(bad)
(bad)
(bad)
(bad)
jge
push
loop
mov
mov
pop
aad
mov
mov
aam
sub
add
pop
dec
inc
or
push
leave
and
js
cmc
mov
int
push
mov
outs
dec
or
push
mov
dec
cmovl
jne
jne
hlt
test
(bad)
call
lods
cmc
xchg
neg
mov
mov
aaa
ins
test
lahf
jge
jmp
push
(bad)
(bad)
(bad)
(bad)
js
lds
mov
dec
repnz
out
mov
push
mov
test
ins
fist
(bad)
(bad)
(bad)
(bad)
mov
ret
and
xchg
xchg
mov
je
fs
mov
call
mov
pusha
push
mov
pusha
(bad)
(bad)
(bad)
dec
xor
dec
cmp
fwait
cmp
loope
clc
push
pusha
jmp
int3
xor
cmp
cmps
cs
in
sar
(bad)
dec
dec
loope
movs
mov
xor
into
arpl
mov
ret
adc
pop
xchg
ja
cmp
or
popa
(bad)
(bad)
(bad)
inc
mov
jl
int3
aad
jle
adc
pusha
push
jnp
outs
xchg
sub
mov
pop
cmp
sub
push
sub
lea
dec
iret
jo
cmp
popa
jg
mov
and
pop
or
call
sbb
mov
call
(bad)
cmps
inc
std
adc
hlt
fidiv
sbb
mov
loopne
sbb
adc
ja
frstor
sbb
sbb
dec
(bad)
pop
sbb
aaa
cld
(bad)
(bad)
fcomp
std
ret
out
or
mov
and
jg
pop
ins
std
dec
xor
jmp
push
ret
adc
call
dec
es
(bad)
(bad)
dec
inc
or
shl
arpl
and
sub
adc
mov
sub
(bad)
(bad)
dec
addr16
ins
fnsave
jecxz
std
out
iret
out
aas
loopne
jbe
sbb
in
sbb
mov
mov
pop
jb
jae
add
cmp
das
jecxz
scas
clc
int3
(bad)
(bad)
(bad)
(bad)
cli
add
leave
rcr
js
shr
cld
xchg
ja
jb
scas
aas
inc
and
out
adc
ins
jge
(bad)
(bad)
call
(bad)
sbb
inc
and
les
sub
dec
adc
cmp
and
(bad)
in
call
xor
push
push
add
lock
xchg
mov
std
popa
hlt
(bad)
jne
lea
movs
lods
hlt
xchg
fcomip
(bad)
(bad)
mov
xchg
loope
inc
or
fxch
jecxz
out
pop
mov
jle
mov
(bad)
jg
loop
lahf
pushf
mov
xchg
mov
je
adc
loopne
call
fs
stos
fwait
inc
inc
dec
xchg
int
test
jmp
daa
add
(bad)
(bad)
jmp
and
adc
adc
and
mul
mov
or
push
and
(bad)
pop
mov
or
inc
mov
(bad)
(bad)
(bad)
inc
stc
push
push
pushf
stos
dec
or
leave
mov
push
jl
aaa
mov
ins
pop
aas
cli
enter
cmc
in
(bad)
(bad)
dec
div
stos
jno
mov
dec
jecxz
sub
bound
ficom
lock
ret
add
call
xor
lea
jg
adc
lods
je
or
or
ror
(bad)
(bad)
push
rol
and
data16
push
xlat
out
xchg
enter
or
pop
mov
aas
jnp
cli
sbb
xchg
(bad)
(bad)
(bad)
out
mov
xor
add
push
mov
iret
and
or
(bad)
(bad)
(bad)
call
lods
scas
cmc
sbb
xchg
movs
(bad)
into
test
sub
sbb
dec
jo
popf
jbe
bound
rcr
in
jl
sbb
jne
cmp
sar
jno
or
retf
and
(bad)
inc
ins
mov
inc
lods
mov
mov
arpl
jmp
push
fs
(bad)
(bad)
mov
fdivr
es
call
cmps
xchg
(bad)
(bad)
(bad)
mov
mov
lods
xor
ds
aam
out
outs
fdiv
mov
out
ins
push
lock
or
fwait
loopne
hlt
mov
outs
jb
jnp
push
mov
std
(bad)
fcomip
out
movs
and
mov
cmc
cmp
cmp
push
lock
sub
add
push
(bad)
(bad)
(bad)
inc
popa
pop
ret
loope
repz
and
rcr
scas
mov
push
mov
sub
adc
not
or
stos
stos
push
sti
push
popa
inc
add
es
dec
mov
fild
es
repz
pop
or
out
cmps
iret
jb
(bad)
(bad)
inc
pop
push
inc
mov
or
aad
test
fsubr
jo
or
outs
pop
test
adc
and
retf
pop
mov
xchg
std
push
ror
xchg
scas
fwait
and
dec
std
(bad)
dec
adc
outs
js
mov
imul
(bad)
(bad)
call
and
fsub
pop
test
dec
scas
js
adc
sbb
jecxz
cmp
cmp
push
mov
push
xchg
(bad)
call
cld
sub
xchg
push
leave
cmp
add
mov
cmp
(bad)
call
lods
and
lahf
or
and
call
sbb
ret
xor
xchg
add
(bad)
(bad)
mov
dec
cmps
or
es
fwait
adc
out
jno
inc
cmp
fsub
or
js
push
xchg
aaa
test
xchg
fmul
out
aaa
or
outs
cli
(bad)
adc
ins
cmp
icebp
push
pop
(bad)
(bad)
(bad)
mov
lock
(bad)
mov
clc
and
cli
js
out
cli
cld
dec
inc
mov
(bad)
xlat
lahf
std
sub
mov
sbb
out
fcomip
aam
jge
pop
or
test
jns
mov
in
call
mov
ds
loope
push
ds
or
mov
mov
xor
xor
ret
push
xchg
sub
arpl
mov
jl
jmp
hlt
and
mov
sub
push
mov
push
(bad)
(bad)
(bad)
dec
lods
loope
scas
lods
ret
cmp
xor
and
xor
pop
iret
cmp
pop
dec
and
gs
popf
jg
in
fmul
adc
jb
call
jmp
inc
mov
test
scas
(bad)
and
or
nop
(bad)
out
clc
dec
and
popa
ja
popa
and
cdq
jmp
and
mov
jno
pop
nop
mov
lods
xlat
out
out
rcl
pop
out
(bad)
jmp
jmp
mov
stc
xor
jl
aad
js
ins
in
(bad)
(bad)
call
jmp
push
pop
cmp
ins
popa
sar
(bad)
jle
mov
adc
(bad)
(bad)
(bad)
call
mov
(bad)
sub
adc
test
mov
retf
(bad)
call
cld
pop
pop
(bad)
sub
hlt
sub
daa
xor
inc
and
repnz
int3
or
mov
dec
or
loope
mov
iret
call
dec
mov
mov
cmp
enter
(bad)
jl
dec
stos
icebp
pminsw
in
push
pop
outs
(bad)
mov
push
scas
aas
pop
jmp
out
xor
(bad)
(bad)
(bad)
call
repnz
loope
mov
push
pop
jo
les
or
add
jmp
sar
mov
xor
cmps
mov
and
test
and
lods
mov
js
mov
(bad)
(bad)
(bad)
inc
stos
push
xchg
loop
mov
jle
lods
(bad)
or
add
cmc
push
(bad)
cli
adc
dec
retf
call
sti
dec
jo
(bad)
shl
and
call
mov
mov
mov
mov
dec
pop
push
jmp
nop
xchg
xor
sub
mov
in
icebp
push
cdq
hlt
in
mov
push
mov
mov
push
movs
pop
sbb
(bad)
(bad)
(bad)
push
sbb
popa
cld
mov
test
pop
or
(bad)
mov
inc
sub
gs
sar
(bad)
(bad)
jmp
(bad)
fdivr
mov
fnstcw
push
mov
cmp
jmp
jle
(bad)
(bad)
call
icebp
clc
push
out
out
or
movs
xor
fisub
mov
clc
shl
clc
adc
or
push
les
add
pop
xor
sbb
cld
(bad)
call
outs
rcr
es
(bad)
jae
nop
(bad)
mov
scas
adc
repz
push
adc
mov
sub
scas
jno
inc
push
mov
cmp
mov
ror
cmp
or
cmps
(bad)
(bad)
(bad)
inc
leave
xchg
jnp
cmp
dec
ss
pushf
xor
sub
xchg
jb
ds
adc
pop
loopne
add
cmp
sub
jo
inc
push
mov
xor
(bad)
(bad)
(bad)
dec
add
sbb
in
pop
jns
out
sub
lods
dec
or
dec
inc
add
push
sub
(bad)
jmp
popf
retf
mov
aad
mov
jo
cmp
cmc
movs
cmp
in
and
or
aam
inc
in
mov
(bad)
cmp
repnz
mov
inc
sbb
lock
sub
mov
(bad)
cmp
in
test
or
mov
inc
lods
push
mov
ficom
(bad)
dec
fldenv
sub
jmp
xchg
sub
sbb
retf
pushf
icebp
mov
inc
aaa
rcl
(bad)
(bad)
inc
test
in
imul
popf
sar
push
dec
mov
repnz
jo
inc
sbb
add
push
fs
fbstp
cmovge
and
(bad)
(bad)
dec
and
pop
sub
ins
ins
fadd
add
jo
fwait
xor
xor
jne
mov
(bad)
(bad)
cmps
out
nop
ins
and
add
cwde
ins
out
push
lock
and
add
sbb
imul
(bad)
(bad)
jmp
dec
ss
xchg
cli
or
xchg
(bad)
jmp
dec
sbb
adc
mov
(bad)
(bad)
(bad)
push
or
cld
xchg
push
shl
or
enter
cmp
js
rcr
jb
std
mov
fld
out
xchg
jno
sbb
jo
leave
mov
bound
mov
sub
mov
aad
push
inc
xchg
xor
sbb
aad
(bad)
(bad)
push
stos
stc
cmc
lock
push
mov
push
cmps
cmp
cli
mov
in
xchg
mov
cmp
jmp
xchg
movs
sbb
mov
retf
sbb
aas
hlt
sbb
add
push
lods
jnp
pop
mov
sbb
cmps
movs
mov
(bad)
jmp
sub
addr16
add
(bad)
(bad)
(bad)
(bad)
jmp
push
jnp
test
iret
loope
mov
jne
and
cmp
and
xor
call
fadd
fwait
push
mov
ret
loope
imul
cs
(bad)
(bad)
(bad)
call
retf
jmp
adc
mov
test
cwde
scas
jecxz
push
loopne
(bad)
(bad)
(bad)
call
scas
imul
movs
shl
xor
push
popa
pop
mov
or
mov
js
inc
cdq
push
shl
loope
repnz
mov
(bad)
(bad)
(bad)
ds
lock
mov
retf
ret
call
fst
sbb
outs
outs
popf
jmp
mov
lahf
mov
(bad)
(bad)
(bad)
dec
int
ret
or
xchg
sub
in
cli
or
push
outs
adc
pop
push
xchg
and
shr
sar
enter
loop
dec
gs
mov
neg
push
nop
aad
jmp
mov
ret
call
sub
push
xchg
pop
test
and
jg
movs
jo
xchg
add
or
jns
sbb
push
scas
cwde
(bad)
(bad)
fcomip
test
test
push
xchg
pop
in
push
and
mov
lock
popa
(bad)
dec
dec
inc
fistp
and
sbb
sub
inc
dec
jmp
lods
fwait
out
push
mov
cld
cmps
pusha
ds
mov
jmp
sub
out
ret
call
mov
pop
push
fimul
pop
cld
call
jns
or
add
add
stc
in
cmp
push
(bad)
push
cmps
push
sub
mov
mov
sub
leave
fcomp
xchg
jp
(bad)
(bad)
(bad)
jmp
lock
or
xchg
fcomp
imul
xchg
loope
icebp
in
test
ficomp
pop
pop
add
jbe
mov
mov
std
(bad)
(bad)
(bad)
(bad)
jns
mov
dec
jae
mov
fwait
scas
loop
out
enter
mov
push
sub
(bad)
(bad)
jl
test
dec
xchg
mov
(bad)
and
rcl
repz
xlat
cmc
jmp
not
rol
pop
pop
sar
cmp
sub
daa
pop
xchg
sti
sub
adc
add
dec
fisub
xor
icebp
idiv
clc
hlt
pop
mov
(bad)
(bad)
jg
test
sbb
js
xor
dec
add
cmps
cs
push
(bad)
dec
imul
inc
pop
gs
push
lods
push
pop
add
shl
popa
lock
pop
lods
hlt
mov
lea
(bad)
es
sbb
jle
jge
fcomip
xchg
adc
ja
nop
inc
sub
(bad)
(bad)
(bad)
cmp
dec
inc
imul
out
jg
in
cmps
or
aad
or
mov
pop
push
movs
shl
adc
cmp
fld
ins
clc
dec
add
xchg
add
xchg
js
and
dec
(bad)
(bad)
push
dec
inc
sbb
out
inc
pop
in
test
and
mov
scas
je
dec
or
lock
out
lods
and
movs
in
cmps
js
popf
mov
(bad)
jmp
dec
mov
pop
mov
fistp
push
ret
xchg
mov
sbb
cmps
(bad)
pusha
fucomp
mov
mov
sbb
or
repnz
stos
test
xchg
sar
xchg
aam
out
(bad)
mov
(bad)
call
jle
pop
push
icebp
sbb
push
add
sar
mov
(bad)
jmp
pushf
arpl
rol
and
dec
cwde
xor
pusha
sbb
push
loope
repz
ret
(bad)
(bad)
(bad)
jmp
mov
mov
cmp
mov
ins
lods
repnz
pop
repz
jge
sbb
(bad)
(bad)
(bad)
fdivr
popa
mov
and
(bad)
cmp
mov
pop
inc
jecxz
pop
pop
test
das
rcl
out
mov
test
mov
retf
push
dec
cli
shl
add
out
sub
xor
push
xchg
cwde
or
test
test
into
mov
(bad)
out
push
jmp
adc
mov
int3
mov
jae
adc
push
popa
jne
mov
je
(bad)
(bad)
dec
mov
and
sub
clc
pop
and
add
enter
dec
lahf
call
retf
call
loope
js
push
call
(bad)
call
sub
lea
jbe
pop
adc
into
xor
loopne
xchg
mov
jo
(bad)
(bad)
(bad)
jmp
outs
dec
xor
push
icebp
and
into
pop
loopne
pop
cld
and
push
mov
sub
xlat
xchg
mov
in
add
xchg
mov
iret
push
or
fbld
(bad)
inc
adc
xchg
and
adc
push
test
daa
dec
sbb
(bad)
sti
aaa
test
(bad)
(bad)
fidivr
fld
ds
mov
fild
mov
test
mov
mov
cld
out
dec
sbb
push
push
clc
jno
mov
mov
cmp
(bad)
(bad)
(bad)
inc
sub
fstp
in
cmps
push
push
push
retf
xor
sbb
(bad)
add
call
jmp
or
imul
dec
adc
and
lods
enter
pop
in
call
jmp
jl
inc
cwde
pop
shl
test
shl
mov
mov
push
push
cmp
mov
xchg
gs
(bad)
(bad)
(bad)
jnp
sub
xor
mul
out
push
cs
call
std
sahf
sbb
fcom
(bad)
call
movs
xchg
sbb
cmps
dec
adc
xchg
icebp
(bad)
lahf
jl
mov
call
mov
inc
sar
(bad)
iret
cmp
repnz
fnstcw
(bad)
js
mov
cld
cmp
sbb
sbb
jbe
outs
mov
in
cmp
adc
xchg
sub
sar
pop
mov
sub
rol
(bad)
xchg
fdivr
(bad)
call
cli
lock
sti
in
lock
retf
mov
scas
mov
pop
daa
mov
and
jb
xchg
mov
fdiv
in
movs
push
jmp
dec
sbb
retf
mov
aas
jnp
add
jne
or
xchg
ret
dec
push
jnp
icebp
jg
call
dec
pop
mov
sub
sub
xchg
sbb
dec
jo
or
xor
out
push
mov
shl
bound
pop
fisttp
xor
mov
daa
popa
popa
pop
xchg
sub
leave
xchg
hlt
mov
fwait
dec
ds
mov
mov
jmp
stos
xchg
or
(bad)
in
sti
out
cmp
(bad)
(bad)
out
(bad)
mov
add
mov
sub
fs
cmps
mov
add
xlat
mov
imul
sub
fstp
das
jg
inc
push
mov
leavew
call
(bad)
(bad)
(bad)
fbld
retf
cmp
xor
imul
xor
xor
outs
mov
call
fadd
into
in
data16
nop
push
mov
stos
inc
mul
xchg
int3
cmp
arpl
mov
test
(bad)
(bad)
call
repnz
cmp
adc
repnz
mov
jle
bound
jecxz
mov
mov
aas
stos
(bad)
(bad)
call
ja
sub
scas
mov
sub
scas
add
mov
sbb
(bad)
dec
dec
lock
cmps
push
cs
(bad)
stc
stos
outs
cs
clc
jecxz
sbb
add
call
mov
rcl
mov
mov
out
sbb
ds
cmps
mov
mov
push
mov
(bad)
jmp
fwait
cdq
xchg
iret
out
inc
inc
or
in
xchg
xchg
add
cmp
fild
mov
hlt
enter
add
pusha
mov
shr
(bad)
(bad)
(bad)
dec
pop
jle
dec
lock
imul
fwait
mov
xor
shl
mov
or
stos
in
lods
jb
cwde
mov
and
pop
mov
cli
notrack
mov
push
jl
shr
(bad)
(bad)
in
dec
mov
xchg
(bad)
fidiv
pop
pop
sbb
cmps
into
sbb
call
(bad)
jmp
aaa
jl
pop
enter
push
xor
mov
(bad)
mov
(bad)
(bad)
jmp
mov
fistp
jne
ins
or
dec
mov
rol
jmp
jmp
push
jg
bound
popa
sbb
jns
sub
fild
(bad)
ret
sub
adc
(bad)
(bad)
(bad)
dec
or
(bad)
xchg
inc
or
js
pop
inc
mov
call
cld
jnp
vmovntps
btc
test
or
pop
(bad)
(bad)
call
call
out
xor
lahf
mov
scas
pop
stos
out
fdiv
push
cli
aam
(bad)
inc
ret
jne
pop
jbe
adc
dec
sub
mov
add
xchg
(bad)
mov
ins
gs
imul
sar
jno
cmp
mov
ucomiss
(bad)
(bad)
(bad)
cmp
pop
(bad)
rol
bound
retf
or
dec
rcl
(bad)
jmp
dec
test
neg
and
add
imul
add
dec
mov
enter
push
or
(bad)
(bad)
(bad)
push
push
add
and
leave
and
sub
push
cmp
(bad)
(bad)
(bad)
call
push
dec
push
cmp
dec
pop
dec
pop
loop
fnstsw
or
mov
(bad)
or
jg
(bad)
jmp
pushf
sub
test
xor
dec
or
leave
(bad)
(bad)
(bad)
jmp
mov
(bad)
(bad)
les
ins
ins
mov
add
into
rcl
(bad)
(bad)
push
add
mov
xchg
loope
loop
mov
or
pushf
add
mov
jge
mov
int3
jne
iret
mov
aam
out
xor
imul
(bad)
(bad)
(bad)
out
enter
pop
into
cli
daa
sbb
nop
dec
das
lods
je
or
push
push
cmp
mov
fiadd
(bad)
(bad)
(bad)
call
xor
jle
loop
leave
cmp
add
mov
out
retf
mov
push
xor
cmp
sub
push
and
xchg
and
clc
popf
push
jmp
mov
cmc
dec
icebp
cld
das
dec
jmp
mov
cdq
lahf
(bad)
out
xor
or
movs
pop
pop
mov
or
pop
popa
jmp
pusha
out
cdq
imul
shr
into
out
outs
aas
dec
cmp
enter
mov
dec
mov
mov
clc
and
cli
sbb
dec
int
mov
mov
inc
jo
frstor
jmp
data16
(bad)
(bad)
(bad)
inc
adc
push
dec
out
ror
cmps
mov
push
popa
inc
fwait
test
push
iret
xchg
mov
call
movs
pushf
js
movs
mov
jmp
leave
test
push
mov
(bad)
(bad)
jmp
inc
mov
dec
xchg
sbb
fcmovnb
pop
(bad)
out
jge
mov
dec
xchg
clc
jmp
push
ret
fsubr
cmps
out
xor
jae
push
mov
mov
popa
ret
ret
mov
fsubp
add
nop
(bad)
(bad)
push
xor
or
xor
mov
fsubr
stc
aaa
pop
pop
(bad)
call
cmp
std
xor
daa
(bad)
jl
iret
loope
(bad)
xchg
sub
or
(bad)
call
ins
call
int3
sahf
pop
mov
jl
outs
jecxz
push
and
or
fld
(bad)
clc
lahf
jl
(bad)
(bad)
(bad)
(bad)
out
sbb
sahf
imul
dec
sti
and
es
sub
xor
adc
mov
ret
out
jl
mov
sub
fld
or
or
mov
(bad)
(bad)
(bad)
(bad)
jmp
dec
sbb
and
or
adc
ss
mov
cs
in
fdiv
pop
(bad)
(bad)
push
inc
lahf
push
loop
jb
xor
xor
or
daa
in
xchg
mov
add
loop
(bad)
(bad)
jmp
cmc
jp
in
jbe
in
lods
int3
mov
gs
lock
ins
cld
loope
mov
sbb
(bad)
(bad)
jmp
mov
or
rcl
adc
test
jns
clc
pop
push
sub
enter
call
xchg
jecxz
out
inc
ret
enter
lock
and
inc
cs
(bad)
(bad)
(bad)
jle
mov
jnp
sbb
ret
iret
cld
mov
fild
mov
xor
cmp
dec
xchg
aas
scas
adc
sbb
imul
pop
iret
test
(bad)
mov
outs
adc
jo
mov
and
push
push
sub
pop
dec
mov
(bad)
jmp
sub
adc
dec
push
ror
push
adc
push
cwde
jmp
adc
jnp
out
inc
fldcw
inc
xchg
in
cli
inc
cwde
mov
test
push
retf
ret
scas
cmp
push
in
inc
mov
sbb
cld
test
fnstenv
lock
jl
arpl
int3
sar
xchg
jnp
(bad)
jg
in
retf
ss
(bad)
(bad)
call
adc
cmps
data16
dec
pop
test
js
mov
(bad)
sbb
test
xor
(bad)
(bad)
(bad)
(bad)
cmp
sub
shr
xchg
retf
aad
call
or
mov
pop
(bad)
(bad)
(bad)
jle
(bad)
imul
pop
jmp
jno
out
add
cs
sub
push
xchg
psubd
test
or
shl
aaa
or
or
arpl
and
mov
jae
(bad)
(bad)
jmp
out
inc
into
cmp
xchg
add
adc
jne
cmp
in
xchg
retf
out
mov
das
pop
icebp
(bad)
loop
bound
or
cmp
or
add
sbb
jno
push
cmp
add
into
push
(bad)
(bad)
(bad)
jmp
fidivr
and
dec
call
test
ficom
add
push
push
sub
(bad)
(bad)
push
or
pop
push
mov
xor
mov
jb
icebp
hlt
mov
push
sti
fidiv
dec
xchg
aaa
cld
(bad)
jmp
aaa
mov
dec
enter
icebp
cmp
shr
icebp
fdivp
and
jmp
sub
pop
nop
or
mov
leave
sbb
in
stos
in
push
retf
sbb
jno
sbb
push
sbb
shr
add
fdivrp
push
lods
nop
call
lock
mov
add
mov
and
(bad)
(bad)
(bad)
inc
test
bnd
popf
dec
rcr
ret
out
ss
retf
(bad)
(bad)
call
add
inc
sbb
hlt
les
pop
stos
mov
mov
(bad)
(bad)
(bad)
mov
dec
adc
xchg
fldenv
clc
cmp
mov
mov
inc
sub
(bad)
(bad)
(bad)
sti
xchg
jnp
or
push
dec
adc
sbb
mov
ret
stos
cmp
out
jo
(bad)
(bad)
(bad)
call
inc
add
inc
jg
jne
popa
mov
add
in
out
pusha
adc
popf
add
pop
add
adc
sbb
jns
call
xchg
ffreep
in
pop
and
mov
jl
or
(bad)
aad
inc
dec
fadd
(bad)
call
mov
in
xchg
push
loop
jg
adc
test
xor
push
or
push
outs
xor
xor
retf
sub
(bad)
stc
rol
xor
pop
push
scas
pop
push
ins
lahf
clc
ret
(bad)
jle
sbb
ss
or
movs
imul
and
mov
(bad)
(bad)
call
(bad)
out
std
(bad)
out
idiv
sub
pusha
xor
loop
repnz
inc
test
outs
repnz
scas
cli
jmp
aam
inc
daa
xchg
mov
push
mov
(bad)
rol
add
mov
outs
sar
add
lds
test
dec
loope
ret
dec
lods
xor
pusha
mov
fabs
cwde
sbb
nop
mov
mov
and
mov
stos
test
(bad)
(bad)
(bad)
call
jbe
add
in
cmp
shr
pop
enter
pop
loopne
or
xchg
cmps
adc
out
xor
repnz
cs
std
inc
movs
push
scas
cli
fisttp
retf
xchg
dec
stos
popf
push
lahf
and
add
ins
mov
stc
stc
test
fsubr
rcr
pop
cmp
(bad)
jg
fs
in
cmp
cld
ins
fwait
cmp
pop
jbe
cmp
sub
xchg
dec
call
jmp
push
push
jmp
aad
dec
(bad)
clc
sub
call
pop
and
rcr
lods
jns
in
call
mov
(bad)
(bad)
call
test
cmp
add
movs
cmp
movs
push
mov
jno
inc
std
sub
popf
inc
clc
mov
or
(bad)
(bad)
(bad)
jmp
sahf
push
sub
mov
push
xor
dec
das
popa
inc
stos
or
out
mov
lds
cmp
mul
pop
std
aam
mov
fwait
sbb
and
ins
call
sbb
dec
xor
xor
(bad)
(bad)
call
sub
pop
dec
int
icebp
popf
aam
call
idiv
pop
out
fidiv
cmps
and
sbb
outs
jge
or
mov
inc
jne
sbb
inc
pop
push
sbb
pop
push
lock
cmps
push
push
mov
loope
xor
retf
push
outs
loopne
jle
cmp
scas
adc
(bad)
(bad)
jmp
ror
jecxz
inc
and
inc
inc
jno
xchg
jmp
xor
fisttp
inc
fcomip
(bad)
inc
div
inc
xor
into
lock
or
nop
xchg
inc
ret
xchg
fild
jp
dec
push
(bad)
(bad)
(bad)
jmp
pushf
popa
push
and
dec
xchg
rol
push
pop
inc
push
ror
sub
adc
call
inc
mul
xchg
xor
push
aas
cmp
outs
and
movs
ror
addr16
test
mov
dec
inc
and
(bad)
(bad)
js
add
rol
push
add
arpl
or
xchg
mov
lods
fisubr
jmp
mov
add
cdq
mov
sbb
sbb
push
int
cli
sub
outs
pop
lds
cwde
adc
call
dec
addr16
and
pop
xchg
xlat
and
out
fwait
push
cld
(bad)
mov
sub
scas
es
repz
sahf
ret
test
dec
mov
jmp
iret
std
les
ret
fidiv
int
(bad)
(bad)
push
cdq
es
lods
dec
cmp
sbb
sbb
adc
loopne
enter
(bad)
inc
pop
imul
pop
out
jbe
nop
data16
ds
les
add
out
push
xchg
xor
call
cwde
leave
mov
push
js
(bad)
mov
icebp
jmp
add
fwait
ss
shr
call
add
loopne
or
xor
sub
and
pop
clc
scas
jl
xor
mov
ret
sbb
(bad)
(bad)
(bad)
fidivr
push
int
mov
test
aaa
in
push
arpl
pop
adc
(bad)
mov
sbb
jle
ja
mov
retf
mov
scas
mov
pop
mov
(bad)
and
sbb
pop
mov
popa
cdq
mov
and
arpl
sbb
(bad)
dec
aam
dec
pop
add
test
xchg
pop
mov
imul
jns
sahf
adc
addr16
retf
pop
inc
out
pop
aad
aas
xor
ds
imul
pop
shl
pusha
mov
mov
fwait
(bad)
adc
push
popa
sbb
sub
dec
shr
call
(bad)
xlat
(bad)
(bad)
(bad)
jp
test
data16
add
xchg
and
das
xor
cwde
xchg
(bad)
(bad)
jg
mov
or
or
nop
cld
arpl
xor
mov
pusha
or
sub
or
or
rcr
xor
inc
inc
inc
fiadd
cmp
and
(bad)
jg
mov
test
adc
xchg
leave
dec
mov
lods
push
test
fisubr
mov
jae
scas
(bad)
and
push
adc
gs
popa
(bad)
jmp
jmp
stos
mov
or
cmp
and
jo
adc
movs
(bad)
(bad)
(bad)
(bad)
call
sti
fmul
into
inc
jb
retf
mov
push
mov
or
jmp
dec
(bad)
(bad)
(bad)
dec
xchg
adc
ret
and
cmovnp
and
dec
das
call
out
(bad)
(bad)
out
cli
(bad)
add
repnz
call
mov
(bad)
(bad)
jmp
pop
int
outs
fnstcw
fisttp
stos
scas
ds
mov
stc
jnp
imul
iret
ds
or
dec
(bad)
jmp
(bad)
mov
pop
sbb
push
add
cld
sbb
(bad)
(bad)
call
test
fwait
cli
cmps
mov
repnz
call
idiv
jp
or
scas
xor
lea
pop
repnz
ret
imul
imul
or
cwde
and
jnp
pop
pop
(bad)
xchg
aas
inc
shl
es
pop
pop
test
jl
cld
dec
sbb
xchg
pop
jne
(bad)
(bad)
(bad)
(bad)
aas
and
in
test
cmp
cmp
jb
(bad)
shl
or
xlat
jmp
dec
imul
ds
xor
aad
jmp
imul
(bad)
jmp
(bad)
cdq
daa
lahf
fucomp
cli
(bad)
in
fs
dec
out
fnsave
iret
dec
mov
jg
xchg
mov
ret
mov
pop
xor
(bad)
out
cmp
(bad)
(bad)
(bad)
jmp
loopne
fidivr
inc
(bad)
(bad)
push
pop
lods
stc
push
leave
les
xlat
in
scas
jae
pop
repnz
jg
jmp
in
xor
xchg
aam
dec
(bad)
dec
fcmovbe
nop
push
sub
call
inc
push
or
test
push
adc
or
inc
cdq
and
fsubr
xchg
aas
scas
sub
push
ds
gs
aad
std
jmp
daa
sahf
stos
push
std
leave
(bad)
sbb
(bad)
(bad)
inc
mov
mov
mov
scas
gs
fisub
sbb
or
inc
add
inc
pop
sbb
out
jnp
in
mov
in
sub
(bad)
(bad)
(bad)
fbld
add
fmul
daa
xchg
jle
mov
and
adc
or
jns
jb
push
lahf
(bad)
(bad)
(bad)
dec
xchg
adc
xor
stos
lea
mov
(bad)
loopne
clc
bound
test
mov
push
cmp
adc
leave
imul
aaa
lods
adc
gs
loopne
outs
cmps
mov
sbb
jg
(bad)
not
mov
xchg
mov
je
(bad)
in
xor
jle
rol
sbb
jp
jnp
mov
or
addr16
mov
cmp
or
call
das
inc
lfs
ror
mov
outs
push
pop
jnp
popf
movs
mov
test
(bad)
(bad)
(bad)
inc
aad
add
stos
xchg
push
sub
jmp
mov
ret
mov
mov
push
or
cmps
dec
test
(bad)
pop
int
das
push
inc
cmps
pop
call
jmp
mov
(bad)
jg
retf
xchg
(bad)
dec
and
aam
test
loop
(bad)
call
ja
sub
cmps
call
int3
stos
gs
xchg
(bad)
(bad)
(bad)
mov
mov
int3
bound
loope
sbb
inc
fcomp
or
add
cmp
jne
(bad)
(bad)
(bad)
inc
inc
cli
jno
gs
mov
jge
sbb
call
(bad)
out
cmc
xor
ds
mov
or
retf
lea
sub
bound
(bad)
jno
jns
ss
sub
(bad)
jmp
ds
push
popa
sbb
mov
aaa
and
(bad)
(bad)
(bad)
dec
ds
push
xor
add
mov
call
ins
das
daa
fadd
push
and
(bad)
inc
aam
les
xchg
imul
push
loope
mov
inc
xor
(bad)
call
push
out
cmp
mov
or
jnp
dec
sbb
push
push
push
cs
inc
(bad)
(bad)
inc
pop
ret
adc
test
or
push
sbb
xor
xlat
faddp
inc
(bad)
(bad)
(bad)
call
push
loope
fucomi
cs
or
push
or
adc
rcr
mov
popa
sbb
(bad)
(bad)
(bad)
jmp
sbb
test
aad
adc
adc
call
popa
scas
je
push
xchg
mov
(bad)
jmp
repnz
mov
sbb
stos
cwde
push
xchg
stos
retf
clc
jmp
pop
xlat
shl
mov
cmp
daa
push
(bad)
(bad)
(bad)
mov
test
cmps
sub
add
stos
je
test
(bad)
jmp
pusha
loopne
sub
mov
retf
rcl
mov
test
(bad)
dec
(bad)
xchg
and
adc
cmp
adc
push
sub
jmp
(bad)
(bad)
inc
dec
sbb
push
xchg
adc
inc
push
push
int3
mov
(bad)
mov
ret
adc
and
enter
fild
inc
aad
jg
(bad)
jmp
mov
xor
mov
cmps
call
test
pushf
in
cmp
pop
(bad)
(bad)
(bad)
jmp
mov
pop
or
loopne
sbb
sub
sub
out
cmp
fdiv
push
(bad)
(bad)
(bad)
call
mov
push
shr
adc
fwait
sbb
adc
add
adc
xor
mov
nop
scas
adc
or
repnz
sub
mov
add
sbb
(bad)
jg
mov
aaa
mov
mov
ret
and
mov
idiv
jg
(bad)
pop
js
mov
pop
pop
mov
call
leave
or
cmc
inc
ins
es
mov
(bad)
(bad)
(bad)
cmp
jg
outs
lahf
jl
xlat
jb
pop
std
mov
lock
push
idiv
(bad)
(bad)
inc
inc
into
(bad)
sub
add
xchg
jae
mov
(bad)
cmp
(bad)
into
repnz
test
xor
sub
test
pop
adc
jo
sbb
pop
inc
and
popa
ror
or
dec
or
or
sbb
mov
clc
(bad)
call
push
pop
fidiv
cmc
push
(bad)
(bad)
(bad)
sub
pop
add
(bad)
inc
fisttp
and
adc
mov
shr
and
inc
and
adc
imul
neg
cmp
loopne
pop
fistp
addr16
mov
js
fbld
xor
xchg
xlat
jp
jae
into
(bad)
cmp
out
and
int
push
sbb
add
dec
dec
not
add
scas
ret
aas
cld
and
inc
ror
mov
fadd
sub
rol
dec
xchg
cmp
mov
ret
jmp
pusha
and
inc
jno
aam
xchg
inc
mov
pop
into
or
call
and
(bad)
mov
and
sub
mov
push
cmp
xchg
leave
add
and
(bad)
(bad)
jmp
jmp
movq
enter
jae
daa
es
jnp
and
mov
inc
iret
and
inc
call
(bad)
(bad)
mov
mov
or
movs
xchg
sub
in
(bad)
call
call
jae
jb
in
xchg
jle
dec
jb
inc
(bad)
mov
mov
(bad)
cmp
jle
cmp
hlt
or
leave
pop
nop
mov
(bad)
call
out
add
cmps
push
and
and
into
push
or
in
and
addr16
push
shr
aaa
(bad)
(bad)
jg
popf
jp
mov
adc
xor
pop
pop
mov
add
loope
imul
js
(bad)
(bad)
push
xor
pop
jnp
sbb
inc
xor
mov
std
stos
scas
jg
jecxz
cmp
std
cmp
mov
jmp
mov
jns
mov
ss
int
test
pop
icebp
cli
fadd
(bad)
(bad)
mov
(bad)
pop
jg
dec
loope
jp
outs
ins
addr16
push
pop
repz
(bad)
(bad)
(bad)
jmp
or
and
mov
sbb
cli
cwde
jecxz
adc
imul
push
pop
das
cli
(bad)
jmp
cmp
adc
enter
mov
mov
les
in
lock
call
call
xchg
jmp
jno
ret
out
pop
out
lahf
rcl
xchg
gs
push
stos
dec
mov
(bad)
fdivr
mov
xor
fist
xchg
std
call
fmulp
xchg
outs
mov
mov
jle
ret
lahf
jg
fcomip
(bad)
fcomip
push
adc
xchg
xchg
mov
scas
jnp
xchg
dec
nop
pop
popf
and
ret
imul
xlat
lods
(bad)
(bad)
(bad)
call
mov
push
mov
mov
ret
mov
adc
aad
xor
push
movs
shl
or
lods
mov
xchg
pop
add
(bad)
sub
out
mov
dec
inc
movs
fisttp
push
not
inc
(bad)
ins
(bad)
(bad)
(bad)
dec
call
cmps
(bad)
cdq
jmp
xchg
jecxz
mov
data16
rol
sbb
jmp
fcomip
(bad)
fild
inc
or
mov
(bad)
(bad)
jg
pop
xchg
inc
dec
mov
xor
es
xchg
fwait
inc
adc
cmp
mov
(bad)
(bad)
jmp
and
call
rol
mov
pop
sbb
jbe
inc
xor
jne
dec
stos
adc
mov
(bad)
call
mov
sub
jmp
cmp
mov
mov
rcl
loope
out
shl
sbb
xor
xchg
pop
pop
pop
sti
ret
push
popa
sub
or
sbb
sbb
sub
cmp
and
ds
(bad)
(bad)
push
xor
dec
(bad)
mov
cdq
xchg
dec
xchg
(bad)
call
aam
in
add
bnd
add
retf
xor
and
retf
mov
jmp
stos
xchg
scas
sub
xchg
shl
push
mov
pop
fcomip
add
dec
mov
xor
mov
cmp
adc
(bad)
cmp
aam
push
jo
dec
adc
mov
fnstenv
mov
push
xchg
push
jmp
cmc
dec
sub
adc
jecxz
mov
sbb
jmp
mov
sub
pop
sub
add
movs
out
fisubr
(bad)
mov
adc
add
sbb
rol
xor
retf
push
(bad)
(bad)
(bad)
(bad)
cld
push
(bad)
sbb
mov
pop
in
mov
sbb
das
xor
dec
jb
push
pop
xor
push
cmp
sub
(bad)
(bad)
call
and
adc
push
leave
jge
mov
sub
popa
mov
mov
je
sar
cld
(bad)
(bad)
push
inc
lea
mov
xor
adc
rcr
jmp
shl
call
push
cwde
bnd
mul
pop
push
push
mov
call
and
add
(bad)
inc
xlat
dec
mov
xchg
push
test
aaa
shl
dec
jecxz
jp
(bad)
(bad)
dec
or
dec
push
retf
jb
push
fnsave
xchg
xor
clc
into
out
mov
lods
es
call
lea
jno
mov
(bad)
push
test
lock
mov
repz
cmp
cwde
push
add
dec
ss
sub
xchg
scas
mov
xchg
loopne
mov
rcr
pop
adc
mov
sub
ret
pop
(bad)
mov
xchg
and
or
ret
jge
cmp
loopne
add
pop
sbb
clc
call
loopne
xor
inc
int
out
xchg
cli
push
xor
aad
mov
jmp
call
fistp
mov
ds
inc
call
rcl
inc
mov
rcr
jo
inc
inc
dec
sub
xchg
xor
xor
(bad)
(bad)
(bad)
jmp
sub
ja
jno
icebp
icebp
xchg
rcr
adc
pop
(bad)
(bad)
inc
(bad)
xor
pop
jg
mov
inc
xor
fs
push
mov
add
add
xlat
test
mov
data16
out
pop
aas
clc
inc
push
mov
fistp
sub
outs
or
and
fld
inc
(bad)
(bad)
inc
sbb
popa
jne
mov
and
mov
(bad)
repnz
mov
(bad)
(bad)
inc
add
sbb
popa
jecxz
call
adc
addr16
sub
dec
mov
dec
sub
pop
(bad)
(bad)
fucomi
iret
mov
mov
(bad)
fbstp
rep
xchg
or
retf
movs
push
sbb
push
jmp
jge
scas
cmp
in
cmp
loope
push
or
arpl
sub
mov
add
ret
dec
(bad)
pop
aad
dec
pusha
pop
stos
push
outs
cwde
imul
movs
arpl
push
jg
fdiv
xor
xchg
xor
scas
not
daa
aam
push
stos
push
retf
push
in
(bad)
(bad)
jmp
scas
mov
sbb
dec
push
cs
in
aad
test
jp
(bad)
(bad)
(bad)
jg
aaa
sahf
imul
jl
(bad)
jnp
leave
in
std
push
push
xchg
out
loopne
xor
xor
clc
or
push
cmp
sahf
cmc
fdivr
mov
rol
or
gs
popf
xchg
mov
pop
mov
clc
jns
mov
and
and
scas
cmps
(bad)
(bad)
(bad)
push
jl
dec
pop
inc
jno
scas
call
sbb
or
(bad)
(bad)
call
sub
jns
or
adc
xor
dec
movs
arpl
jmp
fs
or
mov
hlt
pop
(bad)
mov
in
pop
jp
lods
js
or
loope
(bad)
inc
lds
mov
xor
(bad)
pop
movs
into
push
xchg
ret
aam
cmp
cmc
test
in
xor
(bad)
(bad)
mov
stc
pushf
lahf
jp
jno
stos
(bad)
(bad)
aas
cmc
les
jg
icebp
stos
add
pop
lods
mov
(bad)
inc
movs
adc
int
sub
lock
int3
mov
test
push
cwde
out
inc
or
sub
(bad)
(bad)
jmp
dec
xor
cmp
ret
and
xchg
push
jne
jmp
jle
adc
cmp
jnp
fcomip
mov
dec
add
mov
mov
loop
(bad)
aas
js
shl
inc
sahf
movs
push
fwait
inc
inc
xchg
cmps
push
mov
pop
cmps
fild
dec
sbb
sub
pop
bound
add
push
push
stos
dec
or
sbb
(bad)
(bad)
jmp
jnp
mov
jp
adc
xlat
cmps
cmps
daa
loopne
xchg
xchg
call
pop
dec
std
sub
inc
mov
rcr
push
adc
loope
ret
pop
fs
int
int3
ss
aam
arpl
fild
loop
or
mov
xor
idiv
(bad)
(bad)
call
sbb
cmp
jl
out
sbb
cmp
dec
sub
mov
push
xchg
fldcw
into
into
mov
push
sub
fstp
mov
call
shl
bound
xor
pop
xchg
js
xchg
repz
inc
int3
cmp
(bad)
(bad)
jmp
pusha
aas
jecxz
sub
push
mov
pop
into
clc
mov
stc
shl
movs
sub
(bad)
(bad)
(bad)
call
inc
icebp
adc
sub
add
aaa
xlat
shl
xchg
ja
cmp
mov
add
(bad)
jg
push
jl
pop
dec
(bad)
mov
call
adc
stos
lds
jp
(bad)
(bad)
inc
clc
outs
clc
lock
ret
xchg
jmp
pop
add
jb
xchg
jmp
(bad)
jmp
dec
pop
cmp
mov
cwde
push
xchg
nop
out
cmp
inc
jp
fcomip
jmp
push
movs
pop
sbb
pop
aam
inc
jecxz
stos
xchg
inc
xor
jae
xchg
mov
and
lahf
mov
jmp
mov
mov
fwait
jb
xor
(bad)
mov
mov
aam
dec
stos
fdiv
icebp
adc
xchg
shl
jecxz
push
(bad)
(bad)
(bad)
jmp
push
fucomip
inc
pop
jge
loopne
cmp
rcl
inc
(bad)
and
(bad)
idiv
(bad)
(bad)
call
add
les
retf
push
dec
sub
(bad)
nop
dec
imul
push
and
add
(bad)
call
jge
movs
adc
aaa
fnstsw
xchg
enter
jmp
xchg
dec
out
shl
mov
(bad)
(bad)
jmp
cmp
and
imul
int
mov
jb
mov
call
and
push
ret
jns
imul
ja
mov
fcomp
mov
test
(bad)
jmp
mov
adc
test
jbe
movs
sub
int
xor
xchg
daa
das
xchg
in
(bad)
(bad)
jmp
sbb
xor
xchg
mov
(bad)
jmp
lahf
icebp
in
and
xlat
(bad)
(bad)
cmp
mov
ret
dec
or
movs
out
sbb
push
es
cwde
pop
(bad)
(bad)
(bad)
(bad)
cmp
jbe
retf
add
leave
xchg
rol
(bad)
mov
data16
loopne
out
stc
cmps
ja
mov
mov
cmp
inc
sbb
fmulp
xor
cmps
(bad)
dec
push
mov
inc
or
stc
inc
mov
les
cmp
(bad)
call
push
loopne
data16
jbe
cmp
inc
scas
mov
xor
rol
jnp
call
jmp
call
inc
stos
imul
mov
in
mov
ret
adc
or
cmp
sti
jle
push
inc
movs
and
call
xlat
ret
mov
xchg
psrlq
(bad)
xor
pop
std
pop
fldenv
adc
xchg
and
bound
mov
pop
hlt
inc
jbe
mov
add
icebp
xor
enter
repz
fild
push
stos
nop
jg
mov
loopne
lea
scas
ds
adc
fisubr
(bad)
(bad)
(bad)
jmp
jmp
dec
repz
ja
push
test
ja
mov
retf
mov
ret
push
adc
fimul
mov
call
shl
push
ret
fnsave
and
(bad)
(bad)
(bad)
(bad)
jmp
arpl
push
fcmovne
popa
pop
sub
jl
sbb
retf
daa
adc
stos
(bad)
(bad)
(bad)
jmp
dec
sub
xor
in
cdq
ror
(bad)
fcmovnu
loopne
mov
(bad)
(bad)
(bad)
(bad)
jnp
xchg
leave
sub
and
add
mov
in
adc
jae
sti
sti
sahf
inc
sbb
lods
cmp
aaa
dec
fidivr
fistp
push
mov
adc
out
push
mov
dec
test
jo
cld
sbb
jmp
popf
cmp
addr16
dec
movs
jmp
jp
xor
(bad)
jmp
mov
sbb
mov
xchg
imul
out
inc
cld
sub
rcl
jbe
add
and
loope
call
stos
push
sub
xchg
pop
adc
jmp
push
sub
and
fidivr
dec
sbb
in
dec
mov
push
mov
or
(bad)
mov
mov
dec
out
push
into
retf
mov
adc
cmp
(bad)
jg
cli
aas
cld
std
push
(bad)
cld
mov
push
int3
mov
jnp
and
(bad)
(bad)
jg
fdivr
xchg
aaa
xor
xlat
movs
test
adc
pop
and
scas
fwait
push
test
popa
push
(bad)
(bad)
(bad)
(bad)
(bad)
push
mov
mov
jmp
push
fstp
sub
jb
xchg
or
adc
sbb
(bad)
(bad)
jmp
push
and
es
sub
ins
mov
fcom
jmp
and
(bad)
(bad)
(bad)
inc
dec
pop
(bad)
std
sub
ret
jmp
or
or
add
or
imul
mov
aas
rol
dec
jno
mov
mov
mov
cld
inc
xor
test
ja
(bad)
inc
mov
neg
inc
add
(bad)
(bad)
dec
aaa
stos
call
aad
adc
adc
std
adc
inc
sub
(bad)
(bad)
(bad)
(bad)
jmp
mov
adc
(bad)
mov
cmps
or
lds
add
(bad)
(bad)
call
jne
(bad)
fsub
push
add
pop
sbb
cmp
jp
add
cmp
(bad)
(bad)
mov
ret
inc
test
rcr
jmp
call
icebp
mov
mov
in
aaa
int3
cmp
dec
jae
or
or
fdivr
(bad)
(bad)
dec
xor
sub
jns
dec
sbb
les
pop
cmp
xor
(bad)
call
xchg
(bad)
test
mov
(bad)
fld
add
or
xchg
call
gs
mov
(bad)
(bad)
jmp
in
fs
add
sbb
cld
mov
push
adc
sbb
pop
int3
scas
sub
(bad)
(bad)
(bad)
call
mov
cmp
neg
dec
aam
out
push
mov
rcl
leave
hlt
imul
clc
(bad)
call
adc
cmp
adc
sub
aad
test
scas
outs
pop
(bad)
(bad)
(bad)
jmp
retf
xchg
in
bound
and
test
jge
sub
cmp
xor
outs
movs
mov
(bad)
(bad)
call
inc
loope
sbb
nop
or
and
mov
test
xchg
xchg
xchg
(bad)
(bad)
sar
(bad)
nop
(bad)
(bad)
(bad)
(bad)
clc
push
daa
es
mov
cmps
loop
repz
pop
inc
dec
bound
push
jecxz
ja
notrack
loopne
mov
adc
cmps
adc
in
xchg
aaa
test
xchg
cld
adc
xor
ret
mov
(bad)
lahf
push
retf
pop
xchg
fst
addr16
shl
jmp
cmps
ror
cmp
dec
daa
test
xchg
mov
add
mov
ja
cmp
add
dec
sub
fwait
jbe
test
stos
xor
adc
dec
and
outs
mov
in
jmp
cmp
or
inc
das
iret
push
aaa
push
into
add
je
mov
(bad)
(bad)
inc
mov
push
cli
xchg
outs
sub
shr
xlat
dec
jge
aad
push
neg
inc
mov
das
clc
jmp
(bad)
(bad)
and
movs
pop
fadd
iret
fisub
pop
es
nop
(bad)
(bad)
call
out
(bad)
movs
addr16
mov
pop
add
ins
fidiv
pop
mov
push
(bad)
cmp
call
out
das
fimul
clc
lods
sub
xor
inc
pop
sbb
(bad)
jmp
(bad)
sub
stos
int
mov
cmp
sbb
mov
mov
das
pusha
fidivr
stc
inc
push
mov
push
inc
xchg
xchg
stc
clc
js
(bad)
jg
push
mov
not
scas
loop
int
pop
push
call
jl
int3
in
add
call
dec
fmul
push
mov
(bad)
sahf
(bad)
repz
xchg
jp
(bad)
(bad)
(bad)
jg
hlt
inc
and
push
ins
hlt
dec
int
or
ret
lock
stc
push
sub
inc
inc
(bad)
mov
dec
(bad)
dec
mov
adc
into
enter
and
inc
jp
jo
xchg
inc
cld
push
or
test
adc
and
lock
aam
sbb
(bad)
jg
retf
jns
mov
sub
add
ret
loope
xor
(bad)
(bad)
(bad)
call
arpl
sbb
mov
cld
pop
inc
sbb
mov
sub
test
mov
out
(bad)
mov
adc
sub
mov
jo
test
mov
call
loopne
addr16
mov
mov
or
xlat
adc
(bad)
inc
or
popf
lods
cld
and
inc
pop
mov
das
mov
bnd
mov
std
(bad)
dec
dec
sbb
bound
xchg
sbb
jmp
jle
xlat
jge
push
mov
fcomi
sbb
jo
mov
inc
add
loopne
(bad)
(bad)
call
xor
fcmovnb
das
mov
neg
jle
add
fisttp
pop
test
(bad)
(bad)
fistp
loopne
push
popa
mov
mov
mov
mov
pop
bound
repz
mov
fxch
sbb
lock
aas
push
cmc
lods
inc
mov
cmps
xlat
fs
push
retf
scas
(bad)
(bad)
(bad)
call
xchg
popa
mov
pop
push
mov
cmp
ret
test
inc
jb
dec
pop
or
lods
mov
jg
jg
add
sbb
mov
pop
inc
in
add
(bad)
push
std
call
mov
sub
enter
inc
movs
add
sbb
movd
pop
icebp
aaa
mov
jbe
shr
push
push
dec
std
mov
cmps
dec
or
(bad)
call
test
xor
popa
adc
xor
fld
xor
and
call
popa
les
je
xchg
icebp
shr
pop
fisub
(bad)
mov
push
std
into
pop
jge
pop
adc
mov
cmp
retf
fwait
mov
out
dec
(bad)
jp
dec
xchg
pop
or
jmp
xchg
ret
xchg
push
dec
cmp
push
mov
outs
jmp
dec
(bad)
iret
repnz
out
clc
push
fsubr
pop
mov
push
out
mov
int3
cs
loope
(bad)
(bad)
mov
cmps
mov
and
push
xlat
scas
fidiv
jns
pop
or
paddb
(bad)
inc
mov
fwait
std
add
jo
and
ret
push
cmp
dec
pop
scas
(bad)
(bad)
(bad)
call
shl
data16
push
test
cmc
add
dec
hlt
dec
outs
cdq
fmul
dec
std
cmp
out
stos
clc
faddp
pop
(bad)
(bad)
(bad)
jg
add
add
jle
lahf
jns
data16
jle
dec
push
iret
or
ja
mov
jl
or
(bad)
jmp
clc
sbb
push
jo
lods
out
inc
out
push
lods
mov
xor
(bad)
(bad)
(bad)
call
pop
sbb
iret
rcr
sub
mov
(bad)
ins
test
and
imul
mov
ror
sbb
popa
jno
cmp
popa
inc
or
lahf
call
loopne
and
test
cmps
gs
out
pop
addr16
test
test
shl
pop
xor
scas
in
(bad)
(bad)
(bad)
dec
leave
ds
das
mov
leave
jmp
popf
push
jmp
out
xchg
jl
dec
add
jns
jnp
pushaw
sub
div
(bad)
(bad)
mov
enter
ss
and
sahf
and
push
rcr
loop
(bad)
(bad)
(bad)
(bad)
mov
sub
jg
jns
or
sbb
imul
xor
inc
push
dec
xchg
or
(bad)
(bad)
jmp
push
xchg
mov
leave
and
je
ret
ja
(bad)
(bad)
fild
sbb
in
push
loopne
xchg
data16
pushf
dec
or
jmp
shr
mov
fdivr
enter
popf
mov
mov
into
jae
push
(bad)
pop
ins
cmp
shl
push
xlat
cmp
xchg
retf
xchg
xchg
rcr
xor
gs
jp
push
leave
aaa
push
or
fs
jl
iret
adc
(bad)
aas
xchg
cmps
das
test
leave
les
dec
lahf
shl
fmul
xchg
or
xchg
mov
pusha
jmp
xchg
minps
movnti
int
push
lea
xchg
push
mov
(bad)
(bad)
dec
sbb
retf
jecxz
je
(bad)
arpl
lahf
sub
jbe
(bad)
or
jbe
(bad)
jg
dec
cmp
je
xor
pop
mov
retf
mov
dec
stos
pop
outs
fwait
stos
fidiv
(bad)
(bad)
call
hlt
hlt
xor
cmp
pop
adc
dec
pushf
int3
and
(bad)
(bad)
(bad)
call
xchg
aaa
lods
data16
pop
outs
inc
jns
in
push
fnstsw
call
es
aas
leave
xchg
hlt
sahf
lds
jne
rcr
sub
dec
xor
adc
into
xchg
cs
cmpxchg
(bad)
(bad)
jmp
push
fnstsw
cmps
loope
add
movs
fsin
jle
adc
fs
cmp
out
mov
ins
iret
adc
mov
lahf
js
test
mov
xor
(bad)
mov
xor
inc
or
pusha
add
ins
(bad)
jecxz
(bad)
fwait
jecxz
mov
cmc
call
(bad)
call
adc
xchg
and
jle
mov
mov
call
fwait
lock
and
(bad)
(bad)
push
dec
adc
out
es
hlt
fdiv
dec
dec
(bad)
out
push
and
push
fdiv
mov
inc
test
sbb
inc
adc
(bad)
adc
cmps
(bad)
jg
popf
das
sbb
mov
div
jno
jbe
push
mov
adc
push
test
or
call
and
fdivr
(bad)
call
and
cli
push
test
dec
fcom
jns
lock
and
dec
jns
cdq
sbb
(bad)
(bad)
(bad)
dec
daa
xchg
mov
enter
popf
cmp
(bad)
inc
ins
call
shl
jmp
(bad)
add
mov
xchg
or
xchg
dec
push
inc
enter
sbb
(bad)
inc
cmp
scas
ins
adc
adc
ins
cmp
repz
pop
jb
(bad)
(bad)
(bad)
cmp
loope
ret
ss
pop
sbb
cmp
dec
cmp
mov
pop
or
test
clc
sub
xchg
jecxz
and
mov
or
(bad)
call
test
sub
push
mov
sahf
dec
outs
cli
fnstenv
popf
cmp
cmp
(bad)
(bad)
frstpm(287
or
fimul
mov
int3
mov
(bad)
mov
push
cmp
cli
mov
jmp
daa
jg
stos
adc
hlt
shl
sub
pop
push
idiv
jmp
(bad)
stc
xchg
out
dec
lods
push
mov
iret
fisttp
jl
xlat
in
jle
retf
pop
mov
(bad)
(bad)
cmp
xor
jns
xor
pop
cdq
add
ret
pop
or
ins
fbstp
add
jnp
jg
jmp
mov
push
(bad)
jge
clc
pop
pop
or
(bad)
inc
sbb
out
cmc
cmp
cld
sar
call
sbb
xor
sahf
xor
(bad)
(bad)
dec
or
int
add
add
mov
push
ret
cld
cmp
xchg
ror
(bad)
(bad)
(bad)
jp
repz
test
loope
retf
adc
test
jno
les
retf
outs
adc
pop
jmp
outs
test
loop
aaa
or
jnp
bound
jecxz
les
loop
stos
jae
shl
std
hlt
jge
das
(bad)
(bad)
(bad)
(bad)
fdiv
bnd
inc
add
xchg
sub
mov
lods
mov
sub
push
pop
jnp
jmp
cmp
dec
(bad)
jmp
(bad)
retf
dec
lock
ret
movs
std
push
in
inc
test
inc
mov
mov
es
and
je
bound
scas
pop
stc
jmp
(bad)
inc
retf
sbb
inc
xor
dec
repz
push
push
xchg
sbb
sbb
mov
cli
(bad)
(bad)
leave
jnp
sub
dec
mov
repnz
push
btr
icebp
not
lock
add
jns
pop
push
mov
or
xor
(bad)
(bad)
(bad)
call
int
out
mov
addr16
addr16
pop
imul
pop
pop
jmp
mov
push
xor
pop
dec
push
mov
repnz
inc
mov
mov
fdivr
cmc
orps
ret
pop
adc
(bad)
(bad)
jmp
push
lock
call
adc
pusha
cmp
stc
mov
(bad)
(bad)
(bad)
(bad)
cmp
mov
fucomip
jbe
ins
popa
adc
add
or
adc
(bad)
pushf
and
(bad)
(bad)
(bad)
(bad)
jmp
inc
push
jp
mov
mov
loope
jbe
test
jecxz
ds
jp
jecxz
(bad)
jmp
mov
inc
popf
mov
call
aam
cmp
jno
mov
popf
pop
jg
(bad)
mov
pop
push
movs
rcl
jae
pop
add
mov
mov
call
ins
scas
jo
mov
popa
add
cmp
push
pop
pop
ins
sub
(bad)
(bad)
jg
dec
js
jbe
dec
in
adc
inc
scas
test
xor
push
and
cdq
xor
and
(bad)
dec
xchg
inc
sub
stos
cs
popa
clc
sub
lock
test
loop
mov
sub
imul
loopne
dec
pop
push
jle
test
jp
cmp
xor
(bad)
call
mov
dec
add
and
movs
mov
adc
fwait
test
(bad)
dec
mov
mov
hlt
(bad)
enter
mul
jecxz
jo
repz
(bad)
(bad)
(bad)
jmp
(bad)
jmp
ret
mov
inc
push
leave
fs
dec
pop
das
icebp
inc
popf
push
pop
and
imul
(bad)
(bad)
call
or
push
jmp
cwde
push
xchg
jge
push
popa
inc
mov
push
(bad)
push
and
jmp
inc
imul
leave
add
xchg
(bad)
jmp
mov
dec
mov
inc
add
test
cmp
imul
(bad)
jmp
dec
leave
or
jg
(bad)
popa
(bad)
(bad)
(bad)
ffreep
xchg
test
fsubrp
add
mov
pop
jl
mov
add
into
and
call
ror
je
sub
jge
retf
into
lods
repnz
(bad)
in
in
mov
mov
(bad)
(bad)
(bad)
inc
mov
xchg
stos
adc
and
popa
inc
jns
or
popa
test
iret
aaa
dec
push
pop
aaa
cdq
cli
inc
sbb
add
mov
jle
(bad)
(bad)
(bad)
(bad)
mov
dec
xor
retf
cmps
sbb
addr16
cmp
cmp
fidiv
cdq
or
shl
(bad)
(bad)
dec
push
pusha
mov
inc
mov
dec
dec
repnz
dec
lds
mov
loopne
push
mov
cwde
(bad)
mov
mov
jns
rcr
fs
loopne
hlt
aam
(bad)
mov
(bad)
(bad)
in
(bad)
(bad)
mov
addr16
xor
pop
aas
fmul
xchg
into
aad
ins
retf
stos
jnp
(bad)
(bad)
call
jne
pop
dec
and
test
mov
pop
jae
cmp
ds
jbe
repz
shr
push
int3
movs
xchg
gs
not
sbb
cwde
sub
loop
sub
ror
or
call
std
scas
out
ret
xchg
sbb
adc
cmp
xor
dec
rcr
cmp
(bad)
sbb
(bad)
(bad)
fcomip
sbb
sub
test
repnz
mov
ins
jne
(bad)
mov
mov
inc
(bad)
mov
dec
pushf
scas
jne
lahf
clc
shr
int
or
mov
xchg
(bad)
jmp
add
push
pop
xchg
in
inc
inc
sub
pop
and
ficomp
mov
inc
or
add
and
test
(bad)
call
cwde
adc
fs
inc
sahf
les
inc
sub
or
es
jbe
jno
jge
sar
enter
hlt
clc
mov
mov
gs
mov
xor
cmp
imul
or
fcmovne
leave
cmp
nop
test
not
mov
or
or
int
mov
(bad)
(bad)
mov
popa
adc
push
in
pusha
cmp
call
popf
jl
xchg
sub
cld
sub
mov
mov
add
pop
xor
ja
leave
inc
(bad)
(bad)
(bad)
jmp
xchg
mov
or
adc
xor
not
pop
push
or
xchg
mov
jmp
pop
sub
lock
dec
stc
fmul
imul
fwait
pop
lock
popa
pop
jmp
cmps
adc
mov
iret
sbb
(bad)
jmp
stos
std
es
xchg
hlt
push
lahf
mov
(bad)
ds
lds
mov
fcomip
mov
add
outs
sub
adc
fdivp
xchg
jmp
push
or
out
(bad)
sub
dec
loope
call
sub
std
out
data16
jbe
mov
cmc
jg
cld
lods
xchg
out
in
adc
pop
icebp
cmp
std
(bad)
fbld
mov
rcl
cs
sbb
popa
(bad)
(bad)
mov
adc
test
xchg
fst
popa
popa
movhlps
or
(bad)
push
or
rcl
jno
jne
mov
fsubr
je
outs
daa
inc
(bad)
(bad)
(bad)
inc
push
ret
xchg
and
inc
push
hlt
inc
jb
add
fbstp
mov
scas
(bad)
(bad)
jmp
out
rcl
rcl
adc
mov
iret
cmp
push
(bad)
aas
lock
(bad)
(bad)
(bad)
push
sub
pop
shl
xor
inc
mov
ins
or
loop
inc
mov
(bad)
(bad)
call
ret
mov
nop
xchg
inc
stos
aam
jae
stc
mov
loopne
out
fist
jp
or
scas
(bad)
call
lds
push
xchg
or
pushw
bound
dec
daa
fdiv
outs
cli
(bad)
inc
sbb
inc
inc
sub
xchg
shl
mov
out
sub
hlt
push
retf
retf
fdivr
daa
push
mov
and
mov
icebp
push
or
pop
stos
xchg
jmp
enter
(bad)
in
(bad)
sub
fidivr
jnp
cmp
clc
loopne
jl
sub
fisubr
push
pop
sbb
adc
movs
cmp
or
sbb
push
into
nop
mov
sbb
push
loop
push
cmps
(bad)
(bad)
(bad)
jmp
and
jecxz
lahf
sbb
mov
and
xor
jno
sub
(bad)
(bad)
jmp
pop
sar
cs
movs
enter
gs
mov
fucomip
or
dec
and
out
dec
add
jmp
adc
aas
dec
sub
(bad)
sahf
push
inc
pop
out
nop
push
(bad)
(bad)
(bad)
fidiv
arpl
and
cli
xor
or
(bad)
jg
adc
jmp
aaa
push
xchg
cs
jne
jge
(bad)
(bad)
jmp
adc
xchg
adc
hlt
add
xchg
dec
adc
lods
stc
mov
mov
push
scas
mov
neg
jecxz
dec
(bad)
jbe
out
sbb
hlt
jg
aam
mov
xlat
call
imul
xchg
pop
(bad)
(bad)
(bad)
jmp
mov
sbb
dec
pop
mov
add
mov
test
jbe
xchg
addr16
fs
(bad)
(bad)
jmp
ds
cmp
or
cmp
xchg
imul
shl
pop
popa
adc
aaa
cld
push
mov
(bad)
fidiv
inc
lahf
cli
shr
lds
sbb
cli
and
(bad)
(bad)
(bad)
(bad)
mov
nop
push
addr16
call
movs
jmp
ins
pop
push
rcr
hlt
icebp
les
ja
dec
inc
es
(bad)
in
jle
add
mov
cdq
(bad)
(bad)
push
loop
or
retf
lods
loope
cwde
pushf
adc
push
inc
xchg
inc
push
imul
pop
mov
mov
stos
jmp
push
mov
jmp
cli
(bad)
mov
inc
inc
add
mov
jge
nop
cdq
dec
sbb
(bad)
sbb
mov
sbb
mov
cmp
(bad)
(bad)
(bad)
call
pop
fiadd
shrd
pop
mov
iret
sub
cwde
adc
hlt
and
and
push
enter
mov
dec
out
aaa
jl
xlat
in
jo
or
push
cmp
(bad)
bound
sub
sbb
rcr
pop
mov
inc
and
fnstenv
movs
out
push
int
xor
jp
(bad)
(bad)
(bad)
call
loope
push
mov
sbb
sub
scas
out
pop
ret
jp
fwait
sub
jnp
pop
outs
and
stos
jnp
repnz
xor
fs
xor
jmp
xchg
ret
movs
inc
out
(bad)
(bad)
(bad)
(bad)
clc
in
in
jbe
xor
and
jno
dec
mov
fstp
push
jmp
imul
mov
fcom
in
push
cld
push
int
lea
jecxz
jo
sub
int
gs
push
retf
mov
(bad)
(bad)
(bad)
jmp
dec
pop
mov
xchg
daa
daa
jmp
xor
and
mov
(bad)
jbe
clc
mov
call
lods
outs
stos
mov
mov
stos
addr16
pop
mov
lea
sub
stos
aam
(bad)
(bad)
call
cmp
sbb
jg
xchg
pop
stos
push
jmp
adc
xor
test
mov
jo
cmc
scas
clc
or
arpl
xor
xchg
call
loopne
cmps
lahf
cld
call
ins
nop
nop
(bad)
jns
mov
pop
inc
data16
add
adc
xchg
mov
vmwrite
or
enter
pusha
pop
adc
mov
jmp
inc
xor
push
ret
mov
test
daa
inc
mov
ins
adc
xchg
adc
lock
pop
sub
push
lds
sub
pushf
(bad)
sar
out
pushf
in
aaa
jmp
lahf
jge
(bad)
(bad)
(bad)
call
sbb
mov
mov
sahf
sub
adc
sti
ds
in
jle
sub
inc
push
pop
(bad)
(bad)
(bad)
(bad)
aas
or
fisttp
adc
sbb
and
fistp
ins
xor
arpl
jo
in
jnp
inc
adc
mov
add
xchg
mov
or
xchg
xchg
movs
mov
jbe
nop
(bad)
(bad)
(bad)
dec
ret
pop
imul
ins
xor
fwait
push
xchg
sub
(bad)
nop
jmp
mov
(bad)
and
(bad)
jg
cmc
cmp
jbe
sbb
adc
dec
fwait
mov
cmc
mov
mov
jg
mov
faddp
sbb
xor
hlt
idiv
jbe
call
cli
out
cmp
or
lahf
loopne
and
jg
(bad)
(bad)
(bad)
cmp
mov
push
movs
adc
fdivrp
out
push
dec
enter
add
das
xchg
sahf
sub
in
(bad)
(bad)
dec
addr16
mov
fwait
lock
cmc
mov
movs
fs
sub
int3
out
fnstenv
(bad)
call
je
(bad)
in
lods
xchg
repz
xchg
cwde
mov
pop
loopne
push
call
inc
jnp
leave
out
imul
cmps
push
cmps
imul
cmps
mov
jmp
cli
inc
adc
test
push
adc
cmp
in
test
mov
push
cmps
cmp
sahf
test
cmp
rol
test
ins
test
xor
(bad)
(bad)
jmp
dec
mov
stos
std
mov
cld
test
mov
(bad)
mov
pop
outs
mov
add
sti
dec
cmp
fdiv
xchg
out
mov
ror
(bad)
(bad)
call
(bad)
pop
xlat
push
cmps
rcl
jle
inc
loopne
or
aas
cld
leave
(bad)
jmp
out
repz
pop
retf
test
cld
stos
or
or
pop
mov
jg
inc
dec
adc
push
fwait
cwde
retf
(bad)
lea
push
in
and
cmc
push
mov
into
ret
xor
sbb
cmp
(bad)
mov
into
ret
sti
pop
scas
cmp
aad
pop
or
(bad)
loopne
call
mov
cli
out
jp
cmp
pop
inc
inc
mov
(bad)
(bad)
(bad)
inc
test
and
or
dec
jmp
pop
es
rol
sbb
rcl
call
or
not
ds
(bad)
(bad)
(bad)
jmp
rcl
add
mov
stos
imul
lea
adc
add
or
(bad)
(bad)
jmp
mov
sbb
(bad)
ja
lock
inc
and
aaa
outs
(bad)
(bad)
(bad)
(bad)
mov
int
xlat
cmp
lea
adc
and
lods
jbe
shl
lds
in
out
cmp
lea
fwait
cmps
push
push
pop
das
out
cmp
lods
push
inc
mov
and
loope
fld
imul
pop
(bad)
lock
enter
(bad)
(bad)
(bad)
jge
sub
and
xor
xor
xlat
cmc
cmp
fs
pop
mov
bound
(bad)
call
cmp
sub
or
push
bound
fldenv
or
mul
in
(bad)
mov
std
mov
neg
rcr
push
(bad)
cmps
inc
lock
(bad)
jmp
xor
mov
pop
and
mov
fwait
in
(bad)
adc
mov
and
in
jnp
xor
push
push
push
es
sub
les
cmps
js
and
inc
or
dec
add
frstor
div
shr
adc
test
add
push
addr16
das
adc
(bad)
mov
xlat
adc
pop
jg
adc
loopne
sar
(bad)
(bad)
jmp
fsub
and
add
js
or
and
rol
sahf
pushaw
out
add
lds
dec
subps
fadd
sub
pop
inc
sub
xchg
call
shrd
mov
mov
shl
movs
xchg
es
mov
xlat
(bad)
(bad)
(bad)
(bad)
ss
mov
cs
push
in
test
inc
sbb
xor
cmp
jg
adc
mov
repz
retf
je
sbb
add
cwde
jne
loope
mov
(bad)
jmp
fnstenv
xchg
int
outs
pop
jmp
popa
outs
sbb
push
(bad)
(bad)
jg
pop
aaa
mov
cdq
ret
lods
jge
ins
iret
xor
cmp
or
sub
(bad)
push
fs
xchg
jne
sub
aaa
sbb
hlt
mov
mov
(bad)
mov
in
(bad)
inc
xor
or
pop
jmp
adc
jne
iret
ss
stos
xor
(bad)
push
fidivr
pusha
repz
cwde
inc
xchg
pop
mov
iret
ins
lods
cwde
jbe
or
mov
mov
bound
arpl
pop
inc
js
mov
fcomp
xor
pop
mov
es
clc
(bad)
dec
stc
jae
mov
(bad)
mov
daa
sbb
xchg
or
adc
sbb
mov
cmp
jecxz
into
jl
fimul
sub
lods
(bad)
stos
mov
push
mov
xchg
(bad)
jmp
js
mov
retf
push
mov
ficomp
test
fdivr
pop
std
(bad)
jns
inc
dec
or
or
les
mov
jle
shl
adc
pop
(bad)
(bad)
inc
add
inc
inc
cmps
push
sbb
fidivr
repz
scas
and
(bad)
(bad)
jmp
in
enter
and
ins
ins
loopne
xchg
lahf
and
stos
xchg
push
bound
(bad)
mov
cmp
mov
inc
mov
mov
pop
mov
cmp
cmp
jmp
lahf
in
push
(bad)
(bad)
(bad)
jmp
(bad)
xor
fimul
data16
(bad)
cmp
ins
mov
add
outs
push
inc
mov
jb
and
outs
popf
fwait
adc
(bad)
(bad)
(bad)
(bad)
jmp
(bad)
retf
jmp
rcl
inc
xlat
sub
pop
and
loope
cmps
call
call
mov
stos
loop
leave
dec
mov
lock
(bad)
in
inc
xchg
js
sub
mov
imul
out
clc
pop
add
ins
mov
stos
popf
bound
xchg
popa
std
xchg
test
std
daa
jge
lods
loope
push
push
mov
mov
sub
(bad)
popf
call
cld
xchg
pop
mov
mov
(bad)
cld
mov
ds
(bad)
or
jp
stos
add
sbb
inc
pop
sbb
push
jmp
adc
scas
jg
sub
push
cli
in
stos
jle
push
sbb
cmp
xor
xor
sar
cmp
dec
ins
fdivr
mov
mov
les
mov
xor
mov
jmp
jge
jmp
pop
xor
pop
inc
jnp
hlt
adc
pusha
sti
aam
pop
(bad)
rcl
in
xor
in
xchg
std
xchg
(bad)
jg
inc
and
adc
movs
rcl
push
mov
or
data16
dec
inc
stos
nop
movs
aaa
pop
jp
push
ins
mul
(bad)
sub
mov
outs
mov
out
jmp
(bad)
clc
(bad)
mov
(bad)
(bad)
out
cli
sar
ss
mov
lea
out
ins
repnz
aam
xor
in
push
(bad)
(bad)
(bad)
call
and
aad
repnz
out
(bad)
shr
sub
shl
push
sahf
pop
call
iret
dec
dec
das
clc
or
clc
inc
ret
mov
(bad)
(bad)
inc
es
ins
imul
test
fild
das
mov
and
(bad)
(bad)
jmp
psrad
jp
push
(bad)
in
cmp
cdq
sub
hlt
push
in
mov
loopne
cmp
loop
les
sbb
inc
lds
imul
loope
sub
xchg
or
(bad)
pop
data16
sbb
(bad)
(bad)
(bad)
(bad)
jp
inc
mov
hlt
sub
and
pop
lods
pop
jne
jge
jns
mov
call
pop
test
nop
fdivrp
mov
push
xchg
add
sub
(bad)
(bad)
(bad)
call
scas
mov
mov
stos
rcr
jle
cmps
stos
cmp
dec
dec
or
(bad)
dec
dec
add
les
jbe
xor
(bad)
(bad)
sti
test
adc
inc
fnstsw
aam
test
fnstcw
pop
cmps
pop
or
(bad)
inc
add
outs
lock
outs
mov
mov
and
cld
push
cld
xchg
xchg
cwde
mov
add
loopne
xchg
rcr
(bad)
(bad)
(bad)
inc
lods
xchg
push
jnp
sbb
adc
sbb
je
idiv
sub
mov
call
sti
mov
xor
or
cmp
pop
std
(bad)
mov
outs
xchg
hlt
pop
lahf
mov
mov
mov
jp
pop
mov
push
push
adc
xor
xchg
and
out
push
leave
or
cmp
sub
dec
repz
outs
ror
mov
add
inc
sbb
sbb
(bad)
(bad)
inc
or
and
cli
push
cwde
test
and
xor
jae
in
and
push
xor
add
dec
lds
inc
fs
out
cdq
cwde
pop
or
cmp
call
test
jae
cdq
xchg
mov
dec
push
xor
sbb
cmp
xor
(bad)
(bad)
(bad)
jle
rcl
pop
adc
dec
sbb
popa
sbb
jmp
(bad)
(bad)
(bad)
(bad)
cmp
imul
or
xchg
sbb
cwde
repnz
dec
and
inc
mov
mov
sahf
push
xor
daa
ret
mov
inc
xchg
loopne
dec
jmp
(bad)
jmp
sbb
xlat
sahf
push
std
mov
jns
mov
cmps
mov
jg
lea
pop
call
xchg
call
xchg
(bad)
(bad)
(bad)
jmp
iret
shl
xchg
xchg
cld
and
ds
je
xchg
arpl
or
xchg
push
mov
jmp
call
pop
mov
xor
fist
outs
cwde
cmp
mov
push
(bad)
out
mov
(bad)
mov
sub
outs
fs
add
(bad)
shl
xor
or
jg
add
ret
sbb
lods
imul
(bad)
(bad)
(bad)
push
pop
iret
adc
test
stos
push
ss
xor
jne
std
iret
loopne
int
pushf
fdiv
test
sahf
dec
or
mov
xchg
aaa
sbb
mov
mov
jo
or
cwde
xchg
fimul
push
lock
jmp
mov
in
and
out
cmp
xchg
jmp
inc
jle
pop
xchg
in
jle
inc
jbe
mov
enter
loopne
fild
jmp
rol
xor
mov
in
xchg
(bad)
hlt
pop
(bad)
(bad)
(bad)
dec
das
in
or
les
aam
push
enter
stos
test
and
popf
mov
mov
pop
and
shr
push
or
cld
xchg
sub
jne
mov
mov
xchg
mov
adc
mov
out
pop
(bad)
(bad)
(bad)
jmp
mov
shr
ret
pusha
test
sub
dec
dec
xor
jl
imul
icebp
jno
out
(bad)
jmp
or
pop
jmp
add
popf
call
inc
dec
movs
sbb
fsubr
mul
(bad)
call
ins
call
or
cmp
mov
nop
stc
shl
inc
xchg
or
jo
jno
adc
pop
push
iret
inc
dec
mov
xchg
cli
or
outs
or
cli
(bad)
(bad)
(bad)
fiadd
mov
movs
add
or
dec
mov
(bad)
daa
ja
(bad)
(bad)
(bad)
mov
add
shl
outs
cmps
mov
imul
dec
(bad)
(bad)
push
adc
inc
pop
(bad)
in
xor
or
aaa
jmp
pop
mov
mov
mov
mov
mov
ins
push
jecxz
scas
iret
xor
data16
jle
dec
js
xor
pop
lahf
jle
into
xchg
dec
mov
repnz
(bad)
(bad)
jmp
hlt
fdiv
iret
fmul
push
imul
or
int3
outs
ds
xchg
sar
and
loope
inc
xchg
pop
icebp
sub
loope
dec
ret
jl
dec
dec
xchg
rol
imul
pop
les
(bad)
(bad)
dec
test
push
sub
sub
xor
xchg
int3
mov
(bad)
scas
add
fs
inc
(bad)
out
clc
xlat
lahf
fnsave
ret
pop
mov
mov
mov
dec
jl
bound
mov
sub
push
xchg
push
inc
sbb
pop
mov
push
retf
push
cmp
mov
inc
mov
aad
fs
adc
push
hlt
leave
and
scas
push
fadd
lock
jg
ret
das
push
fstp
call
mov
xchg
push
jmp
rcr
xor
push
sub
adc
xor
cdq
scas
mov
mov
cmp
sbb
mov
push
jmp
ror
mov
xor
outs
(bad)
(bad)
(bad)
jmp
out
mov
xchg
mov
sbb
fwait
mov
les
sar
dec
xchg
ja
adc
(bad)
jmp
fsubr
xor
cmp
sti
mov
mov
sub
not
jmp
out
mov
popf
clc
or
adc
add
(bad)
jg
and
sbb
add
push
mov
sub
jg
jmp
cwde
sbb
or
sbb
xlat
out
ss
sub
jle
les
popa
and
shl
mov
data16
xchg
xchg
xchg
sar
(bad)
(bad)
dec
add
dec
xchg
push
dec
push
ror
xchg
jge
or
mov
adc
in
imul
push
adc
add
mov
lds
mov
or
movs
sahf
sbb
(bad)
(bad)
(bad)
mov
aad
jg
sahf
pop
mov
cmp
jbe
jbe
xchg
jmp
mov
clc
add
stc
(bad)
(bad)
(bad)
call
in
mov
mov
dec
nop
add
xor
loope
jecxz
(bad)
jmp
clc
aam
mov
fldenv
sbb
dec
and
xor
int3
adc
and
outs
mov
push
mov
test
pop
cld
xchg
or
std
add
retf
cmp
and
(bad)
(bad)
push
mov
sbb
mov
sub
add
(bad)
(bad)
jg
mov
xchg
inc
ficom
(bad)
pusha
cmp
outs
pop
call
mov
(bad)
(bad)
(bad)
push
or
pushf
xchg
jmp
sub
arpl
or
jae
xor
dec
mov
push
sbb
sub
movs
inc
jns
jbe
adc
mov
fstp
(bad)
(bad)
(bad)
dec
dec
nop
mov
dec
push
shl
es
push
in
enter
jae
stos
jecxz
(bad)
jmp
lea
dec
in
pop
test
mov
mov
fst
repnz
xchg
in
nop
cmps
inc
sub
xor
bound
lock
in
aaa
int3
xor
aaa
cld
jmp
mov
nop
push
cdq
jle
dec
rcr
leave
repz
and
sub
ret
mov
mov
gs
or
les
rol
ins
scas
ret
je
loope
(bad)
inc
popa
test
inc
call
adc
sub
outs
add
mov
push
push
cdq
aaa
in
cwde
movs
pop
or
push
dec
aaa
std
mov
jge
shl
xor
(bad)
(bad)
pop
jbe
call
into
js
stos
mov
lea
popa
sbb
ins
cwde
or
mov
(bad)
(bad)
jmp
cwde
or
stc
mov
mov
in
data16
adc
call
mov
jg
test
sbb
gs
aad
inc
pusha
mov
xchg
sub
and
out
inc
jmp
aad
jae
retf
aaa
xor
cmp
adc
cmp
mov
ret
xor
mov
(bad)
loopne
xchg
push
sbb
jle
pop
aad
mov
idiv
pop
mov
xor
(bad)
push
jmp
or
lahf
adc
(bad)
(bad)
mov
dec
sbb
mov
xchg
loope
inc
xor
mov
(bad)
call
jno
call
fisttp
daa
es
shr
ret
mul
or
push
cld
aaa
push
jne
mov
jecxz
aaa
inc
out
add
xor
fs
add
jmp
movs
(bad)
jmp
dec
inc
sub
dec
sub
dec
add
and
(bad)
call
aam
push
ins
add
mov
and
ss
(bad)
and
xor
call
jno
cmp
ret
mov
jge
icebp
out
data16
scas
(bad)
(bad)
(bad)
(bad)
mov
fidivr
xlat
pop
or
push
xchg
mov
jl
shl
loope
outs
jp
(bad)
mov
movs
sahf
dec
jmp
setle
dec
mov
xchg
mov
jns
mov
pop
pop
test
(bad)
(bad)
(bad)
dec
cmps
pop
cld
fisttp
ins
fsub
mov
sbb
mov
mov
sub
shl
sbb
(bad)
(bad)
push
inc
mov
test
enter
push
push
mov
cmp
fnsave
(bad)
(bad)
(bad)
dec
out
iret
cmp
inc
and
mov
gs
test
movs
sbb
cs
and
aaa
cld
(bad)
dec
inc
dec
push
lahf
dec
adc
xchg
iret
sub
stos
nop
dec
test
xor
bound
mov
sub
sbb
pushf
loopne
aam
jecxz
fdivr
mov
mov
inc
push
(bad)
call
mov
scas
repnz
in
fstp
jmp
or
mov
(bad)
jmp
dec
dec
push
or
ffreep
jb
int
(bad)
or
mov
cmp
(bad)
mov
mov
call
clc
lahf
movs
pop
jecxz
bound
inc
push
pop
fidivr
push
jmp
inc
pop
pusha
imul
das
mov
mov
mov
push
sbb
(bad)
(bad)
in
shl
ror
mov
enter
adc
sub
retf
add
out
icebp
addr16
cs
cld
call
xchg
loopne
cmp
movs
iret
adc
dec
outs
cdq
(bad)
call
(bad)
(bad)
push
xor
ins
sub
mov
fidiv
(bad)
inc
sahf
cmp
fcom
xor
out
jbe
jae
(bad)
(bad)
(bad)
mov
sub
fidivr
neg
cmc
cmps
out
mov
std
pop
or
and
daa
xlat
gs
(bad)
(bad)
push
xor
ins
rol
lahf
sar
push
loop
int3
xor
idiv
jmp
(bad)
(bad)
call
xlat
jbe
pop
pop
retf
jb
mov
sbb
adc
jno
leave
push
dec
xor
jmp
xor
xor
xchg
xchg
sbb
loope
and
fdivr
(bad)
(bad)
mov
mov
stos
pop
mov
pop
test
sahf
xor
sub
sbb
clc
test
(bad)
call
out
rol
inc
jb
xchg
push
rol
inc
jno
imul
push
xor
int
mov
popf
in
xor
icebp
pop
push
inc
jnp
call
xor
leave
jmp
(bad)
cld
bnd
pop
in
xor
es
sbb
xchg
sbb
adc
mov
nop
clc
cmp
push
and
jl
es
jmp
icebp
out
cmp
push
pop
pop
mov
dec
ret
push
adc
aaa
adc
rcr
hlt
fadd
ins
cmp
jmp
fadd
(bad)
jmp
mov
enter
sub
jmp
fild
cld
fwait
mov
mov
sbb
(bad)
(bad)
call
pop
xchg
cmp
jmp
xor
in
ror
(bad)
(bad)
(bad)
(bad)
clc
movs
jmp
dec
xchg
inc
mov
mov
call
cmp
xchg
cmp
pop
(bad)
ret
cwde
(bad)
(bad)
(bad)
std
leave
cdq
pop
retf
add
xchg
adc
in
or
or
outs
in
xor
push
pop
daa
add
xchg
(bad)
repz
jmp
jle
fldenv
jg
cmp
je
mov
or
lods
and
push
es
in
xchg
movs
cli
mov
out
cmps
jg
cmps
mov
fdivr
aas
ds
cwde
enter
stos
mov
gs
iret
sub
push
test
bound
xor
cmp
xor
das
add
jnp
call
test
(bad)
(bad)
jmp
aad
inc
sbb
mov
popf
loopne
pop
jp
push
in
or
loope
hlt
and
jmp
or
sbb
in
xor
inc
xchg
push
not
call
mov
inc
push
cld
dec
fnstcw
dec
jns
test
sub
dec
sbb
psubusw
les
lods
lods
inc
mov
adc
dec
mov
(bad)
mov
out
mov
adc
dec
jb
int3
retf
dec
push
mov
imul
(bad)
(bad)
call
inc
xchg
pushf
xchg
in
out
or
pop
jg
or
mov
push
mov
pushf
lock
mov
jmp
lds
stos
mov
inc
neg
pop
out
jnp
rcr
jg
pop
icebp
stc
and
ds
(bad)
cmps
fcomip
xchg
mov
js
push
out
mov
std
lock
xor
ret
add
aas
rcl
xor
fdivr
jae
push
(bad)
call
ss
ins
popf
movs
jae
dec
sub
mov
(bad)
fcomip
jmp
daa
and
lods
lock
imul
or
xor
dec
out
lods
cwde
and
mov
jnp
jb
fwait
in
sahf
cmp
adc
(bad)
(bad)
call
dec
in
pusha
das
dec
or
scas
call
bound
imul
push
data16
and
(bad)
(bad)
dec
jno
outs
mov
les
jno
pop
sbb
ror
mov
aad
fsubr
(bad)
jg
push
add
push
pop
pop
sbb
xor
inc
loope
pop
cmp
sbb
or
pop
pop
lds
sub
fucomi
inc
push
xor
dec
adc
inc
inc
adc
ss
xchg
mov
in
pop
in
sbb
ja
jecxz
aas
jo
call
push
push
lahf
sti
pop
or
sbb
js
arpl
stos
xchg
fcomip
dec
lock
adc
mov
mov
cmp
mov
push
aas
addr16
aam
into
mov
out
ficomp
mov
adc
jne
fiadd
jno
aas
or
mov
(bad)
jmp
movs
out
aas
jmp
in
jae
ins
push
pop
mov
repz
mov
cli
addr16
div
es
(bad)
mov
xor
fisubr
mov
push
sar
retf
xchg
mov
mov
xchg
ret
mov
sahf
pop
(bad)
mov
dec
cs
outs
f2xm1
dec
loopne
test
rol
ds
push
push
cmp
xchg
fisub
or
lock
lods
movs
call
addr16
dec
(bad)
cmp
neg
xor
ja
jne
push
sbb
stos
push
xchg
sub
ret
add
xor
leave
(bad)
shl
mov
scas
cmp
gs
dec
(bad)
pop
adc
in
push
(bad)
(bad)
inc
mov
and
mov
imul
sahf
lods
mov
(bad)
mov
out
jp
pushf
shl
dec
inc
adc
mov
(bad)
call
inc
pushf
mov
lods
pop
scas
push
imul
xchg
out
out
push
lods
in
xchg
mov
dec
mov
ins
out
add
outs
ins
scas
mov
ficom
inc
inc
dec
dec
sbb
xchg
ror
jmp
and
imul
test
cld
pop
jle
pop
(bad)
ds
mov
(bad)
mov
push
stc
hlt
dec
jle
into
stos
sub
dec
arpl
out
test
sbb
call
mov
pop
outs
pushf
mov
lods
loopne
pop
pcmpeqw
or
enter
mov
ror
aas
add
push
cld
mov
jmp
push
cli
(bad)
fdivp
ret
mov
mov
mov
jne
mov
(bad)
(bad)
mov
xchg
jecxz
push
push
xchg
push
cmp
or
(bad)
(bad)
call
loope
iret
out
(bad)
cmp
jmp
sub
dec
adc
xchg
adc
packssdw
arpl
jmp
ret
call
in
add
dec
cmp
or
loop
imul
or
cld
lds
(bad)
(bad)
mov
jno
dec
xor
xor
and
pop
push
pop
cs
punpckldq
sbb
inc
sbb
cld
xchg
and
push
or
jnp
mov
mov
(bad)
(bad)
(bad)
fiadd
ins
or
sbb
dec
push
stos
fisub
inc
jmp
pop
sbb
mov
test
adc
inc
ins
jns
pop
test
data16
fdivr
les
(bad)
push
pop
sbb
inc
imul
sub
std
inc
pop
adc
jge
data16
inc
mov
(bad)
(bad)
(bad)
jmp
mov
cdq
sub
mov
gs
test
sbb
jne
scas
fnsave
outs
(bad)
(bad)
(bad)
(bad)
mov
adc
int3
in
(bad)
mov
fisttp
popa
adc
cmp
push
jmp
iret
ror
fdivr
mov
inc
(bad)
inc
ja
lock
stos
xor
mov
dec
ins
jmp
pop
lea
jmp
lock
inc
test
inc
mov
inc
adc
lds
lods
pop
dec
pop
mov
retf
(bad)
sub
mov
std
call
scas
stos
jmp
(bad)
(bad)
inc
cmc
ja
xchg
movs
adc
pop
mov
xchg
push
or
adc
aas
cmp
xchg
cmova
mov
sub
mov
aas
mov
loope
hlt
xlat
jl
push
cld
pop
fistp
cmp
adc
inc
(bad)
(bad)
call
cmp
inc
out
mov
ds
xchg
arpl
adc
mov
call
cmp
(bad)
push
or
ret
dec
dec
(bad)
in
sbb
ja
into
add
push
pop
int
xor
push
or
xor
(bad)
(bad)
call
std
(bad)
xor
ret
cs
jp
leave
(bad)
lods
sub
xor
jbe
call
(bad)
jmp
pusha
xor
push
jb
scas
xchg
rol
adc
leave
cmp
sti
or
enter
test
inc
jmp
in
add
(bad)
jmp
cmovb
fwait
pop
dec
and
pusha
jmp
pushf
imul
inc
adc
call
push
dec
inc
mov
movs
test
enter
js
jmp
call
jp
imul
fcmovnb
dec
dec
cld
mov
ins
push
clc
jmp
xor
(bad)
jg
rcl
pop
in
jge
pop
(bad)
in
in
div
xchg
mov
rcl
scas
add
aaa
retf
sub
ss
enter
sbb
sub
into
adc
(bad)
mov
and
ja
or
adc
xlat
aaa
(bad)
(bad)
(bad)
(bad)
(bad)
fmul
mov
mov
inc
add
add
xor
ret
fbstp
cmp
ror
stos
add
jl
inc
xor
(bad)
imul
shr
out
gs
jp
js
mov
hlt
xor
das
lods
clc
push
call
(bad)
(bad)
push
retw
ret
mov
inc
lahf
cmp
mul
clc
push
adc
(bad)
jne
jno
mov
loop
dec
mov
(bad)
(bad)
call
mov
dec
(bad)
into
pusha
std
leave
shl
aam
push
xor
xor
mov
lock
(bad)
(bad)
call
lds
pop
cmps
(bad)
test
inc
pop
aaa
push
mov
icebp
jp
push
xor
ret
enter
(bad)
(bad)
inc
inc
sbb
loop
sar
xlat
ins
retf
inc
push
scas
aad
outs
cmp
iret
(bad)
(bad)
(bad)
(bad)
jmp
ret
mov
add
out
bound
in
shl
out
inc
lods
push
ja
xchg
xchg
aad
cld
cld
(bad)
(bad)
jmp
out
test
(bad)
push
das
push
cmp
stos
lods
into
and
(bad)
(bad)
inc
jmp
mov
pop
add
icebp
lock
pop
pop
scas
xlat
pop
mov
cld
pop
pop
clc
cmp
or
cmp
out
fwait
mov
call
sti
int3
or
(bad)
(bad)
call
jmp
jle
jmp
pusha
jno
jmp
fnstsw
popa
aad
sub
pavgb
(bad)
(bad)
jmp
iret
cmp
in
jbe
push
pushf
jp
add
loop
push
cli
jmp
fsubr
das
sar
mov
mov
sub
fsub
or
nop
mov
or
test
test
hlt
(bad)
jg
push
ins
out
mov
in
aad
push
jns
out
lds
(bad)
(bad)
fistp
gs
inc
adc
inc
dec
xlat
fidiv
gs
push
push
push
in
push
fistp
loop
push
fsub
call
loop
paddusw
pop
jmp
dec
loope
lock
retf
or
div
or
jb
addr16
std
(bad)
(bad)
(bad)
mov
in
movs
pop
ds
sub
std
fbstp
jmp
xor
popa
loope
outs
cmp
mov
fnstsw
and
mov
(bad)
dec
inc
jns
nop
pop
les
mov
ror
enter
sahf
stc
repnz
sti
jmp
shr
push
call
cmps
mov
call
dec
std
nop
xchg
add
fld
sbb
push
call
inc
jp
(bad)
(bad)
(bad)
inc
sub
jecxz
jmp
mov
loopne
ja
stc
(bad)
cld
(bad)
xor
hlt
(bad)
(bad)
(bad)
fisttp
xchg
mov
sub
fst
movs
mov
mov
in
pop
cs
and
mov
sub
outs
sbb
adc
(bad)
inc
aas
(bad)
in
mov
jo
adc
mov
jmp
cs
bound
or
push
(bad)
mov
xchg
pop
xor
xor
add
lds
jae
jne
xchg
inc
mov
enter
push
xchg
mov
enter
jp
and
mov
(bad)
(bad)
inc
icebp
push
fdiv
or
or
jno
mov
xor
sub
sbb
inc
xchg
pop
xlat
sub
pushf
test
jg
test
or
cdq
out
jnp
cli
das
sub
jb
or
test
call
cmpxchg8b
cmps
sbb
inc
jp
lock
cmp
int3
add
xor
(bad)
(bad)
(bad)
inc
loop
cmps
dec
mov
leave
(bad)
into
or
mov
jnp
in
pushf
dec
neg
jno
fcomp
(bad)
(bad)
call
push
icebp
fstp
mov
loopne
fwait
out
loopne
adc
pop
and
jl
xlat
inc
call
mov
and
mov
xchg
pop
lds
and
lea
dec
push
jmp
fs
retf
lahf
push
(bad)
(bad)
call
mov
es
daa
adc
add
fwait
xchg
xor
add
cs
dec
cld
push
bound
adc
mov
(bad)
(bad)
inc
add
inc
inc
and
dec
and
push
or
sbb
cmc
nop
or
add
add
fs
cwde
cmps
add
test
les
xchg
xchg
das
push
dec
stc
add
(bad)
jmp
pusha
sub
push
add
push
fwait
ins
sbb
mov
movs
dec
pushf
adc
(bad)
(bad)
call
cdq
mov
and
xchg
out
sub
fsub
nop
test
jmp
cli
pop
pop
jl
pop
lahf
scas
adc
nop
adc
or
add
popa
inc
cmp
(bad)
(bad)
(bad)
jmp
icebp
xchg
mov
je
btc
mov
pop
dec
mov
mov
cmc
dec
ins
or
xor
adc
inc
(bad)
(bad)
(bad)
call
xchg
inc
or
xchg
add
js
enter
adc
adc
sbb
fcomip
call
fstp
(bad)
cmp
xchg
and
xchg
xchg
xchg
frstor
(bad)
push
xchg
xchg
jmp
mov
mov
out
mov
(bad)
jg
jl
(bad)
(bad)
mov
mov
nop
je
sti
test
out
cli
push
stc
cmps
sub
or
lods
adc
fstp
dec
pop
and
call
(bad)
(bad)
call
and
je
imul
inc
mul
or
sub
sub
push
adc
jmp
pop
xor
cmps
cmp
dec
add
or
fiadd
repz
ds
(bad)
(bad)
push
fstp
(bad)
xchg
(bad)
jmp
dec
das
fidivr
xor
adc
mov
(bad)
(bad)
inc
and
lea
cs
xor
add
push
int
sub
xor
(bad)
lds
aas
mul
out
int
fild
or
ins
stos
loope
cmp
es
push
lock
call
(bad)
(bad)
jg
dec
je
ins
cwde
ret
pop
iret
or
aaa
mov
enter
jecxz
lock
mov
(bad)
(bad)
push
lods
and
jno
sub
movs
or
mov
ret
mov
mov
push
test
push
fsubr
(bad)
inc
nop
jg
mov
push
mov
(bad)
(bad)
(bad)
call
inc
lods
adc
aas
sti
fdiv
fld
test
push
mov
(bad)
(bad)
(bad)
(bad)
mov
das
scas
ds
shr
stc
in
pop
cmp
cwde
popf
test
iret
add
add
adc
fistp
and
cli
mov
daa
pop
inc
clc
mov
sub
mov
(bad)
(bad)
jmp
(bad)
jmp
dec
mov
jnp
xchg
mov
xor
(bad)
(bad)
mov
imul
or
mov
cmp
loopne
mov
jp
sbb
jg
stc
mov
jp
and
(bad)
lds
xchg
mov
or
pushf
mov
or
lock
cmp
lock
add
(bad)
stos
std
(bad)
dec
out
shl
xor
push
sbb
movs
pop
icebp
push
lea
pop
dec
and
push
xchg
xor
(bad)
inc
mov
sbb
out
adc
dec
cmps
sbb
sbb
adc
mov
lock
clc
arpl
shl
mov
pop
stc
xlat
lods
fxch
mov
sub
call
mov
and
inc
shl
sbb
pushf
sar
(bad)
out
sbb
aad
aas
cli
sbb
aaa
mov
mov
mov
clc
out
mov
leave
and
dec
dec
adc
or
mov
gs
nop
xchg
cmp
mov
not
(bad)
mul
push
dec
mov
mov
(bad)
(bad)
jmp
cmps
sub
ret
unpckhps
pop
cmp
adc
mov
cdq
jg
(bad)
jmp
push
test
xchg
call
repz
xor
(bad)
(bad)
(bad)
jmp
mov
popf
fidivr
aam
retf
scas
leave
ins
test
cmps
push
(bad)
jmp
sub
shrd
xchg
and
shl
(bad)
int3
xchg
mov
test
(bad)
(bad)
(bad)
sti
sahf
imul
push
icebp
and
or
inc
add
push
xor
(bad)
xor
fcomip
jmp
das
int3
ret
xchg
xchg
jo
fs
sbb
sub
mov
fdivrp
das
cli
(bad)
jp
aad
scas
mov
fmul
adc
xchg
xor
pushf
and
mov
call
sbb
rol
push
sbb
out
dec
repz
and
xor
(bad)
inc
pop
cmp
push
xchg
dec
mov
movs
and
les
(bad)
(bad)
(bad)
inc
or
dec
xchg
stos
(bad)
cli
adc
adc
ss
xchg
int
movs
dec
inc
xchg
arpl
fwait
and
jg
add
pusha
outs
jbe
aad
es
or
fisubr
inc
add
sbb
and
neg
jae
adc
loopne
in
int
push
jecxz
lds
jl
test
mov
popa
ror
lods
mov
(bad)
jg
fdiv
faddp
jno
arpl
and
aas
pushf
add
ins
push
test
out
lock
adc
call
push
jg
ins
inc
std
xor
mov
jl
(bad)
(bad)
jmp
stos
inc
mov
mov
movs
and
retf
out
loop
sub
or
dec
rcl
in
popf
test
sub
sbb
in
fiadd
gs
ret
lea
push
adc
add
cmps
mov
fs
(bad)
(bad)
push
test
call
pop
push
fwait
add
jle
jne
xor
cdq
(bad)
mov
(bad)
(bad)
jmp
cmp
or
or
pushf
lahf
in
sti
xor
test
pop
cmps
data16
or
and
inc
xchg
mov
or
or
in
(bad)
(bad)
jg
mov
mov
adc
sidtd
inc
sbb
sahf
xor
ss
mov
pop
mov
scas
xor
mov
aas
push
jmp
(bad)
and
(bad)
loope
or
cmp
(bad)
(bad)
(bad)
dec
pop
mov
sub
pushf
lds
jb
sub
add
sbb
adc
(bad)
jmp
cmp
cmp
cli
sbb
rol
and
mov
fs
ret
push
ret
call
in
sub
(bad)
idiv
repz
(bad)
fcomip
(bad)
fistp
xchg
movs
push
imul
add
pusha
mov
(bad)
mov
(bad)
(bad)
(bad)
dec
aas
rcr
out
outs
sbb
mov
fucomi
mov
push
dec
add
loop
jbe
fadd
pop
std
mov
movs
call
mov
push
and
test
lock
je
jnp
in
mov
idiv
mov
stos
mov
(bad)
(bad)
dec
cs
outs
cmp
jne
mov
jo
popf
jmp
jg
jmp
mov
sbb
mov
pop
dec
dec
lock
mov
jns
retf
push
pop
pop
shl
jno
jb
dec
or
fidivr
fistp
lock
pop
repz
xor
rcr
mov
sub
or
or
add
sbb
(bad)
fisttp
scas
out
loopne
icebp
lock
cmp
(bad)
inc
jae
daa
test
das
dec
aaa
push
(bad)
push
addr16
bnd
mov
xor
mov
ins
inc
mov
xor
nop
and
add
push
les
hlt
mov
(bad)
in
out
es
mov
out
cmps
std
aaa
in
sahf
pop
pop
fucomp
(bad)
(bad)
(bad)
fisttp
call
push
sbb
and
add
(bad)
(bad)
(bad)
inc
pusha
pop
add
adc
outs
jb
xchg
dec
adc
mov
inc
dec
nop
repnz
lds
(bad)
push
adc
imul
in
movs
sbb
(bad)
(bad)
(bad)
fidivr
aas
jp
and
inc
mov
jmp
cli
jp
out
xor
ja
push
std
add
les
mov
fild
dec
cmp
fimul
or
push
mov
xchg
mov
xor
pusha
(bad)
sbb
(bad)
(bad)
(bad)
(bad)
jg
mov
fmul
rol
sub
cwde
fisttp
mov
(bad)
mov
imul
lods
push
int
outs
mov
daa
aas
std
add
bound
and
dec
loop
fimul
pop
xlat
lahf
sub
clc
pusha
mov
push
std
(bad)
(bad)
jns
test
push
push
mov
xchg
pop
jo
imul
pop
ds
mov
cli
outs
mov
popf
test
sbb
stos
and
or
sbb
mov
push
ret
(bad)
(bad)
push
xor
push
pop
push
or
rol
imul
cwde
push
loope
jecxz
imul
mov
pop
mov
imul
ins
dec
call
(bad)
dec
jge
(bad)
ins
jns
stc
push
mov
ret
adc
not
sahf
push
not
call
pop
dec
shl
inc
sub
mov
inc
jns
add
dec
sbb
pop
dec
xor
fcomp
xor
adc
fld
push
fcomp
inc
fwait
pushf
(bad)
(bad)
(bad)
jmp
sbb
xor
enter
cwde
pop
pop
mov
cmp
jg
xor
(bad)
fcomip
(bad)
dec
inc
jg
push
ret
(bad)
fidivr
arpl
stos
fidiv
(bad)
(bad)
dec
pop
shl
retf
sbb
nop
pop
mov
or
inc
pop
enter
sti
jno
jmp
imul
ret
mov
(bad)
(bad)
call
cmp
scas
loope
lods
mov
or
mov
cmp
(bad)
mov
sub
out
sbb
(bad)
jg
(bad)
(bad)
jmp
sub
ret
dec
into
pop
and
inc
inc
mov
pop
add
dec
rcl
inc
pop
mov
or
retf
mov
gs
jmp
loopne
cmps
cwde
push
sar
dec
out
in
cmps
jmp
std
scas
jge
jnp
mov
or
jo
push
dec
inc
dec
push
gs
dec
or
jl
(bad)
jmp
loopne
loop
loope
add
xchg
movs
inc
jp
and
aad
or
and
es
add
inc
popa
dec
jne
ret
cs
(bad)
inc
test
dec
inc
in
jno
lods
out
and
movs
and
cs
clc
(bad)
dec
popf
pop
push
mov
adc
js
call
fcos
(bad)
(bad)
jmp
in
inc
scas
aas
sbb
inc
or
push
xchg
lea
push
test
mov
dec
add
pop
(bad)
(bad)
(bad)
call
sti
fwait
pop
mov
mov
test
jns
hlt
rol
rcl
xchg
pop
(bad)
(bad)
(bad)
mov
int3
iret
ds
cmp
cdq
ja
push
imul
aaa
cmp
(bad)
call
mov
mov
jnp
pushf
dec
mov
cmp
and
inc
(bad)
addr16
xchg
sub
dec
xchg
cmp
lods
lods
push
adc
mov
sub
sub
adc
repnz
ins
popf
mov
call
dec
repnz
aam
inc
popf
jp
mov
xchg
and
mov
test
inc
sbb
(bad)
pop
outs
je
(bad)
(bad)
call
mov
ds
mov
xchg
dec
push
int3
outs
xchg
xor
push
push
xchg
(bad)
(bad)
(bad)
jmp
push
enter
retf
ins
mov
ret
inc
nop
add
mov
or
add
add
and
fs
(bad)
(bad)
call
xchg
in
ret
movs
test
jnp
cmps
add
lea
je
mov
xchg
push
dec
movs
(bad)
(bad)
(bad)
jmp
mov
mov
movs
test
pop
push
xchg
test
and
jg
or
fcomip
inc
cmp
mov
push
cmp
loopne
jns
push
lods
dec
pop
arpl
(bad)
(bad)
call
push
xchg
cmps
sub
push
shl
imul
mov
leave
xchg
adc
movs
popa
jp
ret
mov
mov
push
sbb
jb
cmps
push
mov
(bad)
call
lods
cmc
enter
xor
shr
pop
push
sbb
into
fnsave
jecxz
mov
dec
pop
icebp
(bad)
out
clc
(bad)
jge
(bad)
xor
loop
sahf
cli
(bad)
jl
test
push
xchg
in
movs
leave
dec
(bad)
(bad)
(bad)
jmp
xchg
jnp
fstp
dec
cmps
push
test
cld
pop
arpl
jae
xor
mov
jg
call
add
inc
shl
mov
imul
and
(bad)
inc
pushf
mov
sahf
test
imul
push
loopne
scas
add
jecxz
(bad)
(bad)
(bad)
push
fdiv
push
enter
cmp
mov
sub
not
popf
xchg
ret
jo
and
inc
aad
push
les
arpl
mov
pushf
faddp
(bad)
call
cld
fst
pop
sahf
cmp
xchg
lea
xor
jo
xor
mov
pop
loopne
pop
pop
sbb
mov
(bad)
popa
dec
mov
and
mov
mov
scas
xor
inc
popa
dec
scas
cmp
jno
(bad)
(bad)
(bad)
jmp
sar
sub
cwde
lock
mov
mov
push
pop
jae
(bad)
(bad)
(bad)
(bad)
inc
leave
iret
jg
mov
aas
xor
cmp
in
lds
(bad)
shl
xlat
mov
(bad)
(bad)
call
pusha
ja
xor
push
cmp
push
outs
sahf
dec
test
jl
cli
out
dec
aad
(bad)
(bad)
(bad)
mov
mov
adc
jb
mov
(bad)
(bad)
(bad)
cmp
sub
ror
mov
push
xor
out
neg
jge
in
mov
jecxz
into
mov
dec
js
cmp
mov
rcr
ret
jg
(bad)
inc
popf
cmps
call
jecxz
pusha
adc
clc
shl
loopne
mov
int3
adc
dec
push
lea
xchg
ja
pop
es
movs
inc
pop
xchg
in
test
scas
call
mov
dec
xchg
sub
pop
mov
(bad)
(bad)
push
test
stos
popa
jge
mov
jle
cmp
gs
dec
xchg
inc
aam
dec
push
jmp
sbb
lock
(bad)
call
(bad)
add
add
(bad)
(bad)
cs
jecxz
(bad)
fwait
sar
aad
movs
push
ins
sti
out
jmp
mov
aaa
adc
mov
(bad)
clc
sub
push
push
mov
push
fidiv
dec
mov
inc
xchg
lds
(bad)
jmp
inc
outs
adc
and
(bad)
fild
mov
jle
fisttp
cmovg
(bad)
(bad)
(bad)
(bad)
clc
jmp
(bad)
push
push
mov
sub
xchg
or
(bad)
dec
push
xor
imul
(bad)
(bad)
fadd
or
adc
fmul
fs
inc
xchg
aad
in
pushf
popa
cmp
aad
push
add
mov
stos
mov
xor
pop
mov
jmp
retf
movs
add
mov
call
retf
pop
pop
dec
test
inc
mov
cmp
pop
inc
mov
les
(bad)
(bad)
(bad)
(bad)
jmp
out
in
in
ss
dec
mov
mov
xchg
inc
xchg
aaa
xor
add
push
dec
dec
jmp
cmps
ror
xor
(bad)
(bad)
push
call
inc
cmp
loop
std
clc
fwait
dec
pop
cmps
xor
and
push
sub
cmp
and
lock
jnp
repnz
inc
ret
pop
(bad)
(bad)
(bad)
(bad)
jg
ret
pop
xor
jno
adc
mov
fdiv
sub
outs
imul
add
jae
(bad)
(bad)
jmp
dec
shr
dec
dec
dec
pop
or
rol
mov
push
push
cld
(bad)
(bad)
inc
push
div
les
adc
xchg
xor
fadd
std
(bad)
mov
inc
movs
arpl
stc
jbe
(bad)
mov
not
jnp
cmp
xor
jo
(bad)
cmc
ret
jmp
call
fcom
pushf
sub
sbb
loope
mov
out
lea
xor
add
nop
call
cmp
(bad)
(bad)
(bad)
jg
push
repz
aam
test
sub
or
js
cmp
lea
sbb
(bad)
(bad)
(bad)
call
push
sbb
cmps
dec
jmp
lds
jmp
(bad)
(bad)
call
(bad)
jge
inc
pop
sbb
pop
pop
sbb
sbb
aad
add
inc
jmp
or
cli
dec
test
add
(bad)
jb
adc
jle
addr16
mov
(bad)
(bad)
jmp
and
pusha
sbb
mov
xor
or
dec
sub
(bad)
(bad)
(bad)
jmp
aaa
(bad)
mov
movs
xor
xlat
dec
mov
sbb
(bad)
call
clc
pushf
cmps
int3
jmp
push
sub
inc
mov
add
cmp
dec
sbb
push
test
ds
rol
jb
data16
mov
repnz
jle
cmp
jg
ins
daa
sar
add
bound
cmp
jmp
and
inc
test
(bad)
(bad)
call
pop
inc
dec
push
sub
inc
rcr
test
or
dec
mov
jo
sub
stc
lods
loop
call
jmp
nop
lds
pop
mov
fisttp
ret
(bad)
(bad)
fistp
retf
bound
mov
aas
push
sub
jl
out
and
aas
jbe
mov
clc
cmp
adc
cld
(bad)
jno
or
pop
das
dec
xor
outs
stc
les
mov
in
and
dec
jae
scas
in
and
test
mov
add
or
retf
(bad)
(bad)
call
dec
mov
movs
out
jp
(bad)
cmp
and
aaa
std
xor
(bad)
jg
inc
or
loopne
fcmovnu
hlt
push
jmp
mov
xor
xchg
test
or
movs
lea
outs
jmp
aad
jle
shl
iret
pop
ror
push
adc
push
jmp
shl
inc
xchg
pop
ret
sahf
out
into
je
jb
(bad)
(bad)
(bad)
call
sub
jns
out
cmps
xlat
std
arpl
xlat
xor
jge
mov
fcomi
inc
ret
pusha
(bad)
push
push
cli
jne
data16
sub
cli
adc
(bad)
call
jb
mov
es
inc
stos
cmp
mov
pop
mov
xor
pop
pop
mov
call
or
pop
sbb
add
pop
add
outs
ins
nop
fdiv
and
(bad)
(bad)
(bad)
jmp
mov
out
imul
(bad)
hlt
jecxz
mov
pop
pop
dec
mov
dec
pop
mov
dec
push
push
pop
mov
or
jae
es
stos
sbb
scas
movs
jl
lock
(bad)
mov
pop
and
scas
fsubr
cli
mov
cld
xor
xchg
(bad)
(bad)
(bad)
mov
in
stc
pop
dec
popf
imul
or
push
xor
add
int3
jl
das
clc
(bad)
cmp
lahf
xchg
test
sub
xor
mov
lods
mov
cmp
mov
ins
adc
mov
xor
sbb
pop
xchg
mov
cmp
aad
jl
sbb
enter
and
cs
mov
lds
(bad)
mov
clc
dec
loope
movs
mov
jg
fadd
jg
add
(bad)
call
ins
pop
sahf
and
movs
imul
cld
jno
inc
adc
repnz
call
hlt
push
enter
add
and
(bad)
push
push
add
pop
test
cld
pop
mov
pop
gs
shl
jnp
call
add
mov
xor
inc
in
call
push
shl
adc
dec
mov
or
push
sub
xchg
push
ja
cmps
sub
sub
push
sbb
(bad)
iret
pushf
jmp
mov
push
mov
jb
(bad)
(bad)
(bad)
jmp
mov
mov
aad
mov
push
lock
inc
xchg
sub
popa
sbb
pop
fcmovb
pop
and
imul
push
push
icebp
(bad)
jg
add
into
mov
data16
xchg
ret
ficom
(bad)
(bad)
jmp
(bad)
test
push
in
int
adc
out
sahf
mov
adc
sahf
add
jne
inc
enter
fwait
stos
add
pop
pop
call
pop
jmp
and
mov
mov
pop
inc
call
or
data16
retf
enter
xchg
mov
(bad)
(bad)
(bad)
fcomip
iret
jno
scas
cli
lahf
dec
xchg
(bad)
sbb
xor
mov
add
pop
enter
mov
fnstsw
mov
lock
ret
jp
mov
dec
in
(bad)
(bad)
(bad)
jmp
std
aam
pop
ret
and
and
xchg
mov
cmps
mov
aam
loopne
and
icebp
add
or
dec
outs
clc
(bad)
mov
leave
loope
imul
or
test
stc
test
pop
push
shl
leave
push
cld
jmp
push
jmp
stos
adc
ja
sbb
mov
xor
cmp
mov
fidivr
retf
cdq
jae
sbb
aad
sub
stc
mov
pop
out
pop
add
(bad)
inc
sahf
popf
cdq
or
or
cmps
daa
lahf
ds
stos
pop
fbstp
mov
add
add
mov
jp
ret
pop
pcmpeqw
cmp
ja
push
xor
add
imul
push
xchg
fidiv
jb
push
mov
call
push
fs
or
dec
in
adc
dec
push
(bad)
setle
retf
(bad)
(bad)
jmp
adc
xlat
pop
repnz
pushf
les
jecxz
test
test
jp
or
inc
in
je
inc
stos
call
dec
xchg
and
movs
test
fcom
xchg
imul
(bad)
(bad)
dec
out
fdiv
ret
mov
adc
pushf
out
popa
or
pushf
rcr
mov
mov
pop
pusha
mov
xchg
push
inc
jmp
pop
sub
or
lock
xchg
js
in
inc
(bad)
sub
pop
sub
scas
(bad)
(bad)
(bad)
jmp
sub
ror
and
imul
xchg
rcl
mov
cli
jle
clc
(bad)
jmp
dec
push
xchg
mov
ror
jmp
pop
add
cmps
inc
out
(bad)
(bad)
(bad)
(bad)
sti
jno
data16
test
sub
cmp
or
imul
adc
add
cmp
and
xchg
jns
pop
(bad)
(bad)
(bad)
fild
cwde
rcl
mov
mov
mov
test
sub
pop
lock
neg
loopne
(bad)
leave
lea
popf
aas
mov
in
dec
xchg
pusha
(bad)
(bad)
(bad)
push
mov
lods
mov
lods
jmp
stc
xchg
movs
mov
push
mov
jecxz
rcl
mov
mov
mov
adc
addr16
(bad)
(bad)
(bad)
jmp
sub
xor
retf
xchg
adc
mov
jb
mov
push
je
jmp
add
xor
jns
pop
bound
cs
mov
movs
(bad)
lods
xchg
in
mov
or
(bad)
(bad)
call
xchg
push
pop
adc
sbb
mov
jbe
pop
shr
jbe
sub
fwait
(bad)
(bad)
(bad)
jmp
jmp
imul
out
fidivr
cli
std
xor
stos
(bad)
(bad)
jg
aad
xor
jl
imul
xor
add
test
(bad)
(bad)
dec
fcomp
bound
mov
ins
cmps
test
adc
xchg
retf
rcl
(bad)
(bad)
(bad)
call
xor
aaa
out
mov
mov
fistp
add
mov
sbb
and
jae
sbb
push
adc
cmps
inc
mov
fisttp
mov
sub
(bad)
(bad)
(bad)
inc
test
lahf
xor
and
rcl
mov
and
sbb
loop
adc
cwde
sub
add
jmp
shl
ror
int3
aaa
jmp
pop
sub
mov
mov
dec
mov
mov
(bad)
mov
imul
jo
(bad)
aam
mov
add
ins
pop
push
xchg
cld
jp
cmp
ins
pop
sub
mov
(bad)
(bad)
call
aad
xor
xor
mov
dec
sbb
push
jle
(bad)
mov
(bad)
(bad)
cmp
daa
stos
push
fwait
dec
or
push
inc
inc
movs
bound
pop
es
sar
sti
push
(bad)
sbb
loope
std
(bad)
jmp
mov
cmp
inc
test
jle
cld
xor
jg
retf
(bad)
fild
xchg
leave
ja
bound
outs
mov
retf
cmp
std
(bad)
stc
in
xchg
(bad)
sub
ret
mov
xor
mov
adc
(bad)
call
in
retf
aas
icebp
iret
inc
retf
pop
movs
jle
outs
loope
sbb
loopne
mov
inc
sub
adc
add
(bad)
jmp
push
pop
cld
pop
repz
ins
not
movs
add
push
clc
(bad)
(bad)
call
or
pop
push
mov
mov
jae
hlt
and
cmp
movs
xor
scas
js
xlat
xor
pop
fiadd
test
pop
dec
dec
sbb
pop
cmp
ja
(bad)
(bad)
(bad)
push
push
retf
dec
pop
lods
mov
dec
dec
in
mov
ret
or
out
cmps
xchg
xchg
in
(bad)
jmp
adc
nop
mov
lods
jge
mov
(bad)
(bad)
(bad)
jmp
int
cmp
icebp
test
push
sbb
cwde
in
inc
call
mov
jb
es
add
(bad)
call
sahf
sub
xchg
mov
je
mov
push
sahf
test
das
mov
lock
jnp
mov
push
aaa
lock
mov
dec
adc
fsubr
mov
xor
aas
repz
or
dec
je
movs
and
nop
or
jmp
mov
xor
push
or
aam
mov
xor
xchg
in
dec
rcl
mov
in
shl
push
xchg
mov
(bad)
cmp
push
sbb
pop
dec
mov
inc
and
fbstp
mov
add
jno
inc
add
daa
test
adc
int3
daa
cmp
inc
jp
add
in
cli
(bad)
aaa
inc
js
fcom
iret
ds
cld
leave
xchg
aad
aas
or
lahf
inc
push
(bad)
call
cmp
jno
in
push
add
imul
pop
mov
xchg
jmp
retf
push
cmp
dec
mov
add
add
(bad)
inc
push
movs
push
or
adc
fcomip
fucomip
dec
push
(bad)
xchg
cs
icebp
icebp
push
jle
jb
daa
fdivrp
add
cmps
lea
or
(bad)
dec
jb
jp
xchg
das
(bad)
push
mov
inc
jo
dec
adc
or
push
test
fdiv
shl
(bad)
inc
adc
inc
xor
push
nop
push
adc
adc
cld
xchg
pop
(bad)
(bad)
(bad)
jmp
and
es
or
loop
imul
outs
push
fstp
mov
inc
icebp
dec
stos
sti
xor
mov
test
(bad)
push
fidiv
imul
xlat
inc
jmp
out
add
test
xchg
je
es
or
push
mov
call
out
ins
mov
(bad)
pop
xor
inc
mov
and
push
aas
or
loope
add
dec
call
arpl
mov
(bad)
(bad)
jg
push
jo
push
sub
adc
xchg
scas
outs
movs
fdivr
sbb
ins
mov
(bad)
(bad)
inc
shr
test
mov
mov
je
outs
leave
mov
je
mov
js
and
sbb
adc
out
fnstcw
jmp
jmp
inc
js
iret
xchg
mov
inc
test
bound
or
sub
(bad)
(bad)
mov
hlt
imul
imul
pushf
repz
das
lods
lods
pop
cmp
int3
or
cdq
push
shl
(bad)
(bad)
(bad)
(bad)
in
test
mov
or
(bad)
xchg
mov
xchg
mov
jne
jl
push
fwait
out
dec
shl
(bad)
push
cld
add
jae
sub
(bad)
test
or
push
push
pop
mov
add
shl
inc
ds
xor
jb
fwait
out
inc
(bad)
(bad)
push
pop
fdivr
neg
lock
out
adc
dec
pop
cmps
sbb
dec
xor
std
inc
mov
popf
cmp
fwait
(bad)
out
mov
leave
cmps
out
fdivr
stos
(bad)
push
fcom
pop
sbb
mov
inc
sbb
adc
mov
xadd
(bad)
in
xchg
fldenv
push
ins
rcl
popa
xchg
xchg
in
sbb
push
mov
push
sbb
retf
mov
ins
or
out
fcmovu
and
jmp
push
sbb
sub
pop
adc
test
call
enter
pushf
fsubp
jg
cmp
(bad)
(bad)
(bad)
out
mov
mov
mov
xchg
cmp
sub
sub
or
(bad)
inc
out
movsx
sub
sub
cdq
les
push
dec
push
stos
cmp
push
mov
(bad)
(bad)
dec
shl
push
cmp
out
pushf
or
adc
enter
cli
jle
mov
sahf
jmp
cmp
sub
ret
outs
clc
(bad)
jmp
mov
pop
push
push
cmp
cmps
pop
xor
popf
jbe
add
cmp
out
jo
(bad)
(bad)
(bad)
call
jmp
push
enter
mov
dec
push
pusha
das
(bad)
aaa
and
(bad)
(bad)
jmp
cmp
mov
in
mov
and
shl
or
mov
gs
jne
jmp
mov
clc
push
lock
push
fcom
pop
sub
(bad)
fcomip
pop
sti
loopne
mov
(bad)
in
sbb
das
mov
add
rcl
loopne
(bad)
dec
fbld
das
jmp
cmp
dec
movs
loop
add
(bad)
pop
repz
jbe
scas
add
aam
jmp
(bad)
fild
push
mov
stos
sub
pusha
ror
(bad)
mov
in
sbb
popa
(bad)
mov
jae
popf
pop
pop
mov
mov
(bad)
(bad)
call
rcr
fist
and
test
dec
test
arpl
stos
push
aam
movs
(bad)
stos
and
(bad)
call
xchg
sub
mov
sbb
dec
jp
jbe
push
jne
dec
or
std
jmp
mov
fst
mov
push
and
mov
jecxz
popf
cmp
lock
aaa
aas
xlat
pop
(bad)
push
aas
js
(bad)
dec
fmul
lsl
push
push
shl
ins
push
(bad)
jmp
jns
jp
fs
icebp
test
push
dec
sbb
loopne
call
or
cmp
je
(bad)
call
pop
out
mov
push
or
and
mov
movs
aam
mov
jo
xchg
fcomip
call
fucomip
movs
adc
dec
or
sub
fisttp
jmp
pop
jae
pop
jo
cmps
jmp
xchg
and
mov
mov
inc
in
mov
retf
push
mov
sbb
sahf
dec
xor
cmp
mov
add
mov
(bad)
(bad)
call
sbb
int3
test
add
dec
mov
mov
idiv
xchg
sub
(bad)
out
retf
(bad)
(bad)
mov
ss
xchg
push
mov
and
lods
not
adc
sub
mov
(bad)
(bad)
call
mov
or
enter
popf
jge
mov
adc
cs
jnp
aam
shr
loope
repnz
ret
sub
(bad)
(bad)
dec
push
add
xor
movs
sub
scas
js
loope
sub
mov
lods
(bad)
(bad)
inc
mov
icebp
stos
xchg
mov
add
call
(bad)
(bad)
jmp
cmc
lods
mov
jecxz
push
lods
call
sbb
add
pop
pushf
(bad)
(bad)
mov
push
popa
(bad)
mov
popa
movs
scas
dec
push
or
jns
pop
xor
pop
(bad)
(bad)
(bad)
jmp
dec
inc
dec
aam
cdq
ins
aad
jge
outs
fcmovnb
xor
xor
or
popa
or
(bad)
(bad)
(bad)
mov
out
inc
and
retf
jbe
fmul
jnp
mov
inc
bound
popa
(bad)
(bad)
(bad)
inc
aad
sub
outs
arpl
dec
mov
loope
jae
cdq
adc
movhps
sub
(bad)
(bad)
call
stc
pop
inc
pushf
sbb
mov
(bad)
mov
jnp
imul
inc
sbb
xchg
mov
into
ss
add
or
inc
xchg
data16
(bad)
(bad)
(bad)
dec
pop
cmp
fild
add
jae
jmp
sub
xchg
in
js
xchg
(bad)
(bad)
(bad)
(bad)
fstp
add
rol
push
in
rcr
jmp
fsubrp
sbb
and
dec
mov
inc
mov
cmp
xlat
in
call
fmul
cmc
test
xchg
pop
outs
fcom
sub
and
dec
(bad)
ins
add
jle
push
fisubr
push
clc
(bad)
(bad)
inc
sub
retf
fnsave
jae
xchg
or
mov
js
fdivr
mov
scas
cld
scas
cmp
aam
or
clc
push
call
cli
mov
js
stc
fmulp
dec
jb
mov
push
jmp
ror
mov
cmp
mov
mov
sub
arpl
mov
sti
(bad)
call
xor
pop
add
ins
add
adc
jns
not
(bad)
(bad)
jg
imul
xchg
mov
jne
stos
shr
pop
inc
xchg
mov
ja
ss
or
mov
pop
sbb
test
clc
(bad)
jg
(bad)
push
repz
ins
aaa
in
fnstenv
int
jnp
xchg
scas
mov
call
jb
and
add
add
cmp
iret
int
lods
pop
mov
(bad)
(bad)
(bad)
inc
test
scas
inc
push
repnz
test
pop
je
or
add
cmps
inc
js
or
mov
mov
fwait
(bad)
mov
icebp
mov
xchg
inc
loopne
fcom
scas
(bad)
(bad)
(bad)
(bad)
cmp
clc
(bad)
jp
adc
sub
push
and
or
(bad)
(bad)
(bad)
jmp
mov
cmps
aam
cmp
and
in
out
xor
push
push
add
(bad)
(bad)
inc
dec
push
in
in
popf
mov
push
test
xchg
mov
inc
mov
popf
call
outs
fadd
cmp
xchg
movs
mov
mov
jmp
pop
(bad)
leave
pop
lock
(bad)
jl
cli
scas
pop
pop
mov
test
lock
cmps
cmps
pop
nop
push
lods
outs
(bad)
imul
ins
mov
pop
adc
ja
(bad)
fcomip
or
fstp
imul
xchg
sahf
bnd
push
xor
(bad)
(bad)
push
adc
dec
jno
hlt
mov
xor
push
(bad)
(bad)
jg
out
sar
sub
xchg
pusha
mul
retf
sbb
fbstp
inc
cld
out
mov
cdq
scas
shl
dec
out
ret
jmp
pusha
clc
inc
push
into
out
fs
repnz
push
adc
ds
out
cs
inc
pop
cmp
push
clc
adc
mov
repz
jae
(bad)
inc
or
push
cmp
mov
mov
mov
test
cwde
lock
ss
sbb
inc
jno
out
pop
sahf
(bad)
adc
call
rcr
nop
(bad)
outs
xchg
imul
fisttp
test
inc
inc
sub
inc
(bad)
(bad)
call
mov
push
xor
retf
test
mov
mov
data16
xchg
movs
pop
inc
push
cs
ins
iret
dec
popa
mov
xchg
sbb
xor
and
lock
and
push
jmp
xchg
lds
shr
jl
adc
inc
cmps
test
adc
loop
mov
mov
sub
aas
loope
lock
fadd
loopne
or
xlat
xchg
lahf
test
es
sub
jo
cmp
fnstcw
sti
call
out
outs
xor
inc
cmp
xor
mov
rol
mov
lock
(bad)
jg
dec
cmp
or
inc
jmp
outs
mov
add
xchg
test
adc
pop
cmps
popa
cmps
xchg
movs
mov
(bad)
call
lds
daa
jmp
jg
adc
arpl
cli
aad
cvtps2pi
das
adc
out
cwde
std
xchg
fldlg2
push
adc
ret
jbe
cmp
xchg
push
rcr
sbb
push
or
xor
into
jmp
(bad)
push
enter
pop
addr16
sub
adc
movs
out
jno
push
mov
call
cmp
push
pop
movs
xchg
or
(bad)
(bad)
(bad)
dec
dec
push
push
xlat
pusha
mov
sub
or
stos
mov
fcom
inc
lahf
inc
jle
call
jns
sbb
imul
(bad)
(bad)
(bad)
dec
push
and
mov
hlt
jge
pop
call
rcr
scas
fucomi
out
and
cmp
sbb
xchg
mov
cs
add
in
fs
and
or
sub
test
mov
add
nop
mov
xlat
(bad)
and
(bad)
call
in
xchg
(bad)
add
adc
dec
sahf
lods
ret
idiv
je
add
les
or
fwait
cmp
xor
ret
ficomp
jae
mov
add
sbb
add
mov
rcr
inc
mov
adc
adc
(bad)
(bad)
(bad)
jge
ja
ins
js
ss
jmp
inc
mov
mov
(bad)
(bad)
mov
stos
daa
test
jecxz
pop
daa
test
mov
push
push
aaa
or
pop
and
(bad)
call
fiadd
stos
fs
(bad)
call
xlat
ss
icebp
cli
jge
fld
ds
fdivr
mov
dec
hlt
lahf
jl
mov
(bad)
call
sbb
cs
inc
gs
sti
inc
sub
(bad)
(bad)
dec
ins
sahf
icebp
xchg
sbb
jmp
in
push
(bad)
pop
repz
sbb
jge
aad
jmp
jmp
fidivr
fcmovnu
(bad)
push
std
jbe
(bad)
(bad)
mov
push
sahf
rcpps
pop
imul
jecxz
dec
mov
fwait
push
loopne
push
out
(bad)
(bad)
jmp
pop
inc
add
and
adc
(bad)
xlat
jb
pop
pop
jb
mov
sub
jnp
hlt
int3
(bad)
inc
cld
jmp
fisttp
aad
mov
loop
mov
jmp
call
retf
rol
outs
add
push
mov
jbe
cmp
out
push
(bad)
(bad)
(bad)
push
sub
pop
jno
test
push
les
push
fcomp
push
push
movs
dec
adc
xor
ja
(bad)
dec
cwde
sub
push
and
adc
mov
or
call
inc
xchg
mov
dec
(bad)
in
fdivrp
jle
imul
add
(bad)
jmp
and
mov
scas
jns
je
sub
cmp
rol
mov
call
dec
mov
jp
sbb
mov
mov
lds
fild
push
scas
dec
retf
sbb
xlat
std
imul
jmp
fidiv
lock
(bad)
mov
rol
lods
pushf
mov
(bad)
call
adc
cmp
out
xchg
adc
mov
hlt
std
cdq
into
aam
jmp
(bad)
call
fnsave
std
rcl
push
aas
add
cli
neg
lahf
cdq
cdq
adc
pop
jmp
clc
(bad)
push
pop
jne
mov
aad
scas
out
test
movs
or
mov
(bad)
(bad)
push
aam
dec
dec
xor
sti
sbb
(bad)
dec
cmp
pop
sub
push
push
scas
leave
iret
pushf
pop
sti
fdivr
(bad)
(bad)
call
pop
fld1
fnstsw
dec
call
add
sahf
push
sub
jl
xchg
sbb
out
cmp
neg
dec
out
mov
(bad)
jg
not
dec
jecxz
mov
xchg
xchg
xchg
push
retf
cmp
or
jg
jo
leave
push
fbld
xchg
mov
push
push
mov
in
push
xlat
fwait
scas
sub
add
cwde
ins
sbb
sbb
cmp
shr
out
push
ret
mov
les
mov
jle
add
(bad)
(bad)
cld
fnstenv
jbe
aaa
pop
sub
cmp
cmp
(bad)
(bad)
jmp
lea
leave
xchg
in
out
ffree
and
or
xor
(bad)
(bad)
dec
imul
mov
bound
push
push
stc
cdq
pop
aaa
in
sub
or
(bad)
call
sub
mov
repz
dec
test
sbb
pop
call
pop
dec
or
jmp
fcomp
mov
neg
push
out
xlat
mov
or
into
dec
or
push
push
jb
rcr
out
sahf
arpl
movs
mov
pop
push
imul
add
icebp
xor
xor
(bad)
loopne
xchg
(bad)
dec
sub
jp
leave
mov
push
jmp
jge
shl
(bad)
(bad)
(bad)
jmp
jle
ret
push
xor
pop
loope
push
scas
retf
pushf
mov
mov
xchg
gs
pop
sbb
loop
jg
ret
out
fwait
popf
inc
call
fcmovnu
add
les
int3
mov
sbb
icebp
and
cmp
(bad)
push
mov
vcmpss
cmps
sar
(bad)
(bad)
jmp
lods
(bad)
shl
pop
mov
inc
aas
(bad)
add
mov
fcmovbe
and
mov
jo
ds
push
jns
arpl
push
int
stos
push
aas
jae
ss
dec
(bad)
(bad)
call
mov
pop
test
(bad)
adc
sbb
outs
xchg
sahf
cmp
(bad)
call
or
and
mov
in
aad
mov
leave
and
aaa
or
(bad)
(bad)
inc
xchg
mov
test
lock
push
enter
in
or
ds
push
jmp
jle
sbb
sub
cmp
cmp
(bad)
(bad)
(bad)
dec
pop
xchg
pop
xor
or
add
dec
cmp
(bad)
or
add
or
or
inc
adc
(bad)
(bad)
call
push
lea
inc
syscall
sub
popf
adc
ins
cmp
cmps
and
adc
dec
add
call
icebp
mov
inc
sub
shr
rcl
and
mov
xor
push
div
scas
inc
mov
xchg
cli
(bad)
sub
(bad)
mov
and
mov
dec
push
ret
lock
out
(bad)
rcr
popa
out
mov
sub
and
mov
(bad)
(bad)
call
mov
xor
mov
push
xor
adc
(bad)
data16
dec
dec
punpckhdq
xchg
pop
push
adc
sub
in
movs
repnz
sub
retf
xor
sub
pop
pop
fdiv
fidivr
(bad)
(bad)
(bad)
inc
(bad)
test
(bad)
xlat
push
les
loop
sbb
adc
test
(bad)
(bad)
(bad)
cmp
jl
pop
mov
aaa
cs
cmp
imul
into
cmp
add
mov
loopne
ja
pop
lods
(bad)
mov
loop
adc
jmp
lods
or
fadd
(bad)
adc
sbb
cmp
pop
fild
xor
(bad)
(bad)
push
repz
or
dec
fsubr
test
inc
test
pop
repnz
adc
jle
pop
call
inc
(bad)
pop
iret
pop
in
call
dec
daa
dec
mov
(bad)
(bad)
mov
icebp
int3
call
jecxz
xlat
ins
imul
(bad)
pop
xchg
mov
aaa
out
fwait
inc
idiv
cmp
call
cmp
push
ret
enter
mov
retf
in
ins
adc
call
(bad)
(bad)
inc
inc
jns
xor
leave
cmp
and
jb
adc
sbb
and
inc
or
jle
test
jbe
rcl
in
outs
cli
(bad)
pop
(bad)
inc
fwait
test
dec
imul
jnp
in
test
push
pop
inc
mov
call
xor
push
test
add
push
pusha
or
jecxz
push
loope
lds
rcl
or
adc
(bad)
call
or
xchg
jp
aam
sub
sub
sbb
lods
add
loope
(bad)
imul
dec
out
sub
mov
and
and
or
inc
push
imul
and
fild
xchg
(bad)
jo
imul
outs
hlt
sti
mov
jmp
(bad)
int
ja
xlat
push
mov
jne
stos
fsubr
xchg
cmp
(bad)
(bad)
inc
inc
and
retf
sbb
adc
push
xor
add
pop
pop
(bad)
(bad)
(bad)
(bad)
cmp
repnz
pop
pop
into
loop
jecxz
iret
scas
scas
ins
push
inc
and
mov
in
test
pop
call
outs
mov
mov
inc
hlt
shr
(bad)
test
fidivr
outs
add
mov
sti
movs
xor
in
movs
(bad)
inc
push
sub
lahf
out
jbe
cmp
mov
(bad)
fdiv
add
lock
push
lods
mov
jo
mov
(bad)
(bad)
(bad)
push
into
rcl
jb
inc
jnp
inc
popa
sbb
lock
outs
xchg
or
(bad)
rcr
adc
mov
mov
xor
jg
jg
jne
sub
add
jns
push
(bad)
adc
mov
fisttp
ret
jmp
mov
add
shr
xchg
and
mov
jmp
mov
pop
jp
test
add
pushf
jbe
add
xor
clc
(bad)
dec
ins
daa
mov
into
inc
dec
ror
arpl
cdq
call
aaa
mov
in
les
movs
inc
out
xchg
sbb
test
dec
fld
(bad)
call
xor
push
and
or
jo
mov
or
mov
add
inc
sbb
jbe
cmp
cmp
xor
test
into
xchg
sub
les
(bad)
aas
sbb
sbb
dec
and
sub
push
arpl
adc
mov
pop
dec
jae
(bad)
(bad)
call
inc
cmp
jp
sti
lock
mov
inc
adc
jne
in
inc
ror
inc
arpl
int
scas
xchg
dec
and
dec
jno
jp
sub
adc
in
(bad)
jmp
jmp
dec
scas
in
or
pop
imul
add
retf
mov
and
(bad)
(bad)
sub
and
test
lods
dec
test
jbe
jae
dec
xor
aam
jmp
mov
arpl
mov
xlat
cld
stos
outs
rcr
mov
add
xor
(bad)
(bad)
(bad)
jmp
es
mov
dec
pop
jecxz
or
mov
inc
and
jns
and
(bad)
call
or
xchg
loop
cli
mov
add
(bad)
call
xchg
xchg
lock
loopne
cdq
popf
lahf
sahf
pop
jmp
(bad)
mov
jo
retf
mov
imul
sbb
push
push
std
xchg
pop
inc
sbb
(bad)
push
dec
xchg
add
pusha
sub
mov
lock
ret
mov
(bad)
inc
sbb
push
imul
mov
pop
cmp
pop
call
lods
and
lea
nop
bound
icebp
and
add
not
mov
and
adc
(bad)
jmp
fsubr
inc
dec
cmp
sub
adc
in
mov
or
(bad)
mov
ss
lods
sbb
in
xor
pop
jbe
jp
xchg
movs
fbstp
mov
(bad)
jg
push
xchg
(bad)
and
sub
and
push
cmp
je
xor
jg
clc
stos
(bad)
in
sti
push
(bad)
pop
std
out
lahf
(bad)
hlt
jae
fbstp
adc
call
(bad)
(bad)
dec
mov
out
mov
mov
sbb
retf
je
sahf
lds
push
pop
xchg
add
call
xchg
jns
les
jno
cmps
fdivr
in
in
cdq
imul
push
or
dec
xchg
adc
jl
clc
pop
push
mov
cmps
gs
sub
(bad)
(bad)
(bad)
push
mov
outs
cdq
xchg
adc
std
cmp
fisubr
dec
jbe
arpl
movs
inc
clc
loope
out
(bad)
xchg
ds
mov
add
mov
sbb
push
push
jns
dec
adc
rol
adc
sbb
out
pop
scas
push
imul
ret
ficomp
arpl
cmps
fnsave
(bad)
jle
adc
retf
jl
scas
cli
dec
cmp
fnsave
popf
(bad)
lock
popa
sbb
jg
(bad)
push
xor
int
scas
cmp
les
lock
adc
mov
retf
das
rcr
add
jb
sub
imul
setb
sahf
jnp
(bad)
(bad)
push
div
xchg
adc
add
out
add
movs
faddp
je
lea
mov
scas
inc
icebp
and
add
sbb
(bad)
call
test
xchg
dec
outs
pop
cmc
(bad)
push
pop
push
retf
xor
fs
fcomip
(bad)
jns
inc
xor
int3
mov
push
dec
pushf
adc
or
inc
and
add
sub
xchg
fadd
or
push
ror
rcl
cmp
jle
shr
dec
(bad)
jmp
cmps
addr16
adc
inc
pop
mov
out
or
mov
and
dec
pop
cmp
dec
cmp
fdiv
cmp
(bad)
(bad)
jmp
adc
dec
repz
mov
out
neg
test
pusha
push
sbb
push
add
and
iret
pushf
pop
pop
fucomi
ret
(bad)
rcr
sahf
aaa
std
jmp
out
stos
push
dec
shr
adc
icebp
shr
sbb
(bad)
(bad)
inc
shl
jnp
push
jbe
pop
daa
rol
pop
(bad)
rcl
ret
retf
jnp
mov
(bad)
(bad)
(bad)
sti
fcmovne
int3
rcr
nop
das
inc
fisttp
adc
gs
xor
push
jl
sar
fild
fdivp
inc
sti
sub
out
add
call
inc
dec
aas
jne
cwde
xor
sbb
mov
pop
out
stos
loop
(bad)
jg
xchg
mov
fcom
dec
aas
jbe
xchg
outs
sahf
dec
mov
xchg
cmp
gs
(bad)
fild
cmps
jmp
inc
and
push
into
std
test
push
or
call
jnp
inc
adc
add
outs
test
jo
(bad)
xchg
push
xchg
out
call
push
int3
lock
xor
push
push
in
and
mov
jg
lock
stos
mov
fild
cwde
bnd
adc
jne
fwait
in
mov
cmp
mov
repnz
sbb
call
xor
adc
je
jg
adc
push
dec
and
(bad)
(bad)
(bad)
(bad)
out
sar
sub
(bad)
fwait
mov
mov
jp
outs
sub
push
xchg
jo
ds
mov
(bad)
(bad)
call
pop
aas
bound
pusha
iret
sub
sbb
les
mov
pop
adc
loope
fcos
(bad)
(bad)
(bad)
jmp
mov
fstp
arpl
fs
loop
mov
daa
js
jmp
sub
call
dec
call
adc
repnz
dec
dec
test
lahf
test
mov
sub
int3
push
or
(bad)
(bad)
call
rol
inc
stos
jmp
sub
dec
leave
pop
push
or
cdq
push
std
jmp
dec
sti
rcl
pushf
test
and
leave
js
fwait
xchg
cld
dec
pop
cmp
popa
or
pop
scas
rcl
(bad)
call
jb
out
mov
(bad)
(bad)
(bad)
call
scas
retf
cmp
aam
jp
jne
int3
xor
adc
inc
cmp
sub
add
xor
(bad)
(bad)
(bad)
inc
test
ds
ret
adc
sub
stos
dec
and
ins
jae
lahf
sbb
pop
cld
cmps
stos
sbb
pop
shl
push
cwde
add
push
(bad)
(bad)
jmp
sbb
push
sbb
add
dec
and
xchg
push
rol
cwde
mov
(bad)
(bad)
jmp
mov
fs
pop
jne
xchg
sub
sbb
dec
into
xchg
mov
add
fdivr
(bad)
mov
test
push
push
cmc
nop
icebp
xchg
inc
sub
pop
inc
(bad)
(bad)
(bad)
(bad)
mov
leave
lods
sbb
sti
push
push
lods
movs
mov
adc
aas
repnz
dec
adc
call
(bad)
rcl
inc
ja
inc
xor
lods
pop
pop
xchg
xchg
cmps
out
mov
push
(bad)
(bad)
(bad)
jmp
mov
cmp
inc
movs
repz
inc
sub
jb
sbb
jmp
add
jbe
(bad)
(bad)
push
mov
out
or
cwde
mov
test
in
idiv
dec
jl
xlat
lea
pop
jle
mov
(bad)
jmp
(bad)
(bad)
jmp
pushf
mov
adc
cmp
or
retf
xor
jmp
call
out
pop
call
out
mov
(bad)
cli
out
pushf
jne
cld
fild
add
xor
call
jmp
outs
in
xor
inc
jge
sbb
repz
dec
sub
(bad)
(bad)
push
xor
jno
cmc
bound
shr
test
ss
cwde
inc
shl
sub
inc
xlat
push
(bad)
push
test
jmp
xlat
cmp
call
(bad)
jp
not
sub
adc
imul
push
mov
xor
mov
xor
push
aas
cli
jge
out
jne
inc
add
shl
(bad)
(bad)
cmp
dec
pop
jg
outs
pop
test
sub
sub
and
retf
sub
ins
fwait
push
add
(bad)
mov
addr16
add
clc
push
imul
mov
jmp
js
sbb
fdivp
pop
(bad)
jae
and
adc
push
(bad)
dec
jb
xchg
push
jo
mov
cwde
dec
loopne
sbb
cmps
loop
imul
push
out
jmp
cwde
cmp
cmc
test
xchg
cld
movs
addr16
(bad)
sub
inc
ficomp
jl
xor
int
repz
je
ins
sar
(bad)
(bad)
jmp
inc
fst
add
imul
jns
sbb
sbb
xlat
push
jmp
mov
(bad)
(bad)
dec
cld
push
pop
jo
sub
adc
mov
adc
pop
(bad)
(bad)
sahf
in
fist
cld
mov
push
loopne
jbe
lock
(bad)
push
out
lock
mov
icebp
lea
je
pop
fmul
or
cli
push
call
lock
or
(bad)
jp
dec
lahf
pop
dec
adc
ror
and
shl
add
loopne
movs
cmp
inc
sbb
or
push
pop
mov
stos
rol
aaa
sub
dec
sub
(bad)
icebp
pop
lock
out
xor
jl
outs
into
ja
mov
cmp
(bad)
call
sbb
dec
mov
sbb
xor
clc
pop
push
in
pushf
and
pushf
lods
push
jo
add
ror
scas
sub
inc
mov
(bad)
cmp
or
pop
iret
inc
fnsave
loop
aam
iret
pushf
xchg
ret
test
(bad)
(bad)
(bad)
inc
scas
shl
das
fcomp
sub
or
inc
push
inc
or
in
sahf
sub
cld
(bad)
(bad)
cmp
sub
inc
sub
adc
sub
(bad)
aaa
sbb
(bad)
(bad)
jg
cmp
sar
(bad)
fsub
mov
leave
mov
clc
(bad)
inc
pop
leave
mov
mov
or
dec
sub
cli
xchg
jg
mov
push
loope
cdq
and
mov
xchg
lea
movs
xor
sbb
fistp
(bad)
(bad)
inc
ror
push
lods
xor
fiadd
aaa
in
sbb
(bad)
fbld
or
call
or
aaa
inc
clc
inc
lods
mov
xchg
(bad)
jmp
ds
adc
jp
test
pop
mov
xor
dec
mov
push
dec
icebp
enter
(bad)
mov
sbb
ds
push
push
jo
scas
gs
test
or
in
mov
(bad)
(bad)
jmp
pop
jmp
loop
mov
sbb
pop
or
pop
pop
popa
jl
(bad)
repz
(bad)
(bad)
call
lods
pop
jbe
fidiv
arpl
and
ds
xchg
or
data16
inc
sub
stos
jae
mov
ins
dec
cli
pop
repz
fld
mov
(bad)
(bad)
(bad)
(bad)
fsubr
(bad)
mov
fs
push
sub
loop
arpl
test
push
fbld
(bad)
(bad)
(bad)
push
xchg
pop
into
inc
stos
add
(bad)
scas
xchg
movs
adc
push
shl
aaa
jecxz
fwait
cli
jl
icebp
rcr
pop
xchg
int
test
test
ja
lock
pop
mov
lds
dec
movs
imul
or
(bad)
mov
pop
mov
inc
pop
std
inc
mov
jb
dec
and
loope
(bad)
mov
mov
jmp
xchg
fs
xchg
and
shl
adc
xchg
aam
add
xchg
(bad)
(bad)
inc
and
and
ss
adc
test
cmps
ror
fadd
dec
pop
adc
dec
push
and
xchg
mov
popf
lods
or
es
jmp
test
pop
repz
sub
jbe
mov
cmp
(bad)
(bad)
push
jns
mov
fucomi
test
xchg
inc
retf
mov
loopne
lahf
inc
mov
inc
pop
sbb
ret
in
adc
pushf
dec
adc
dec
pop
mov
(bad)
(bad)
(bad)
jmp
fnsave
sbb
xor
rol
iret
cmp
pop
and
mov
jg
cld
sti
add
clc
ret
dec
push
jecxz
movs
mov
mov
(bad)
aam
push
loopne
pop
call
pop
inc
mov
int
jb
xchg
xor
es
push
sbb
(bad)
call
mov
xor
inc
dec
mov
ins
sar
clc
jnp
cmps
add
jmp
mov
call
sahf
mov
jb
lods
mov
add
fisubr
lods
push
jmp
(bad)
out
cli
call
inc
sub
in
cmps
fistp
and
push
repnz
dec
nop
lock
(bad)
and
movs
pop
data16
nop
out
mov
push
push
sbb
push
fs
mov
sub
xchg
(bad)
movs
xor
add
mov
dec
mov
ins
call
and
pop
paddw
mov
(bad)
cmp
(bad)
(bad)
mov
loop
mov
push
shl
push
cdq
push
ja
mov
shl
sbb
cmp
fisttp
(bad)
pop
sbb
js
pop
scas
aad
and
pusha
dec
xor
(bad)
(bad)
(bad)
(bad)
jmp
out
push
movs
sub
inc
dec
retf
bound
les
cmp
(bad)
call
and
dec
and
(bad)
sbb
inc
dec
mov
rcl
jmp
(bad)
call
sub
cs
fwait
test
cmps
or
and
mov
mov
cmc
jmp
aad
enter
dec
jmp
push
push
push
bound
cmp
(bad)
push
(bad)
out
mov
mov
std
addr16
jp
xor
push
xor
push
pop
sahf
mov
add
fsubr
test
scas
xchg
test
(bad)
(bad)
mov
add
jbe
jne
fidiv
mov
lock
xor
mov
(bad)
(bad)
jg
rol
shl
and
xor
dec
or
cwde
pop
push
jno
loop
(bad)
jmp
rcl
inc
mov
sbb
mov
push
pop
dec
mov
(bad)
mov
mov
cmp
push
xchg
(bad)
addr16
call
loopne
(bad)
fmul
push
xor
jae
das
clc
call
(bad)
pop
fdivr
inc
add
test
cmps
pop
xor
(bad)
dec
mov
and
nop
mov
(bad)
(bad)
(bad)
inc
xchg
gs
mov
hlt
mov
into
cmp
push
sub
sar
mov
xor
push
add
dec
loope
dec
lahf
stc
(bad)
sub
push
cld
mov
(bad)
aam
inc
mov
(bad)
cmp
mov
dec
add
(bad)
(bad)
call
mov
mov
inc
shl
and
rol
push
jbe
jns
and
out
(bad)
push
fsubr
jg
int
mov
mov
push
mov
add
hlt
sub
loop
cmp
mov
jae
stos
push
push
mov
call
call
imul
jmp
(bad)
(bad)
fistp
out
pop
jle
leave
movs
test
or
adc
xor
pop
xchg
cmps
xchg
xchg
mov
arpl
dec
scas
clc
(bad)
(bad)
jmp
test
mov
mov
jl
(bad)
ins
nop
dec
add
lods
xor
mov
cld
cmps
outs
mov
loopne
test
mov
(bad)
jmp
push
loop
xchg
jge
xchg
xchg
inc
ret
iret
jg
and
fdivr
(bad)
xchg
pop
rcr
imul
xor
and
mov
(bad)
call
repz
leave
jae
xor
sub
push
retf
sub
push
and
dec
ret
in
(bad)
(bad)
(bad)
mov
push
jnp
push
add
jmp
nop
ror
mov
(bad)
(bad)
fisttp
pop
and
mov
fsubrp
cmovbe
pop
or
pop
lods
loopne
cmp
cld
(bad)
call
push
pop
adc
mov
pop
or
cmps
stos
test
push
sar
and
adc
fidivr
(bad)
jg
xchg
retf
sub
adc
addr16
push
cdq
push
add
xor
(bad)
cmp
(bad)
(bad)
jmp
push
mov
or
cli
and
mov
dec
outs
mov
dec
adc
aam
outs
push
bsf
cs
fild
fdivrp
(bad)
(bad)
call
daa
cmp
xor
inc
and
scas
dec
sub
rcl
mov
mov
dec
jmp
(bad)
(bad)
jmp
test
out
or
int
std
mov
lock
loope
adc
popa
adc
rol
xchg
(bad)
inc
xor
inc
inc
sbb
push
ins
xor
(bad)
fwait
cmp
imul
mov
add
ins
out
mov
daa
mov
pop
dec
sub
add
(bad)
(bad)
call
push
jae
retf
test
mov
arpl
jmp
inc
out
inc
cli
push
arpl
gs
rcl
lea
pop
loopne
pop
and
sbb
leave
test
and
xchg
aad
cli
out
pop
cld
push
mov
in
xchg
(bad)
adc
enter
mov
jge
(bad)
fcomip
call
rcl
bound
movs
push
sub
mov
fild
imul
ret
xchg
mov
push
sub
loope
imul
xlat
sub
fidivr
sbb
dec
std
mov
je
cmp
cli
(bad)
(bad)
jmp
cmp
les
fcomp
(bad)
lss
push
jae
pop
ss
pop
ja
push
inc
cmp
mov
rcl
cdq
cli
dec
jmp
or
idiv
je
repnz
int
xor
enter
(bad)
call
jbe
add
dec
outs
call
popf
call
mov
pop
mov
(bad)
dec
mov
sub
pop
ja
pop
push
int
jno
aaa
fldenv
adc
call
(bad)
dec
stos
jle
leave
mov
jns
(bad)
and
xor
ja
inc
jmp
std
(bad)
mov
xchg
pop
sub
adc
and
aas
mov
mov
(bad)
jg
(bad)
cs
push
jae
sbb
imul
cwde
xor
test
(bad)
(bad)
(bad)
cmp
ret
mov
outs
sti
repnz
shl
pusha
stos
int3
inc
inc
or
scas
imul
shl
cmp
cmp
retf
lock
movs
hlt
dec
mov
mov
enter
outs
shl
push
xchg
ror
scas
mov
fwait
and
dec
dec
inc
sub
(bad)
(bad)
(bad)
cmp
mov
das
movs
xlat
retf
dec
int3
pop
fmul
jl
cmc
cmps
xchg
mov
mov
dec
inc
mov
mov
xchg
push
(bad)
(bad)
call
or
call
emms
js
mov
dec
sbb
mov
lea
push
xchg
xchg
aas
or
mov
aad
scas
outs
ins
cmps
jns
mov
in
stos
(bad)
(bad)
mov
shr
pop
mov
cmp
(bad)
(bad)
mov
xor
aas
dec
imul
aam
or
sub
(bad)
(bad)
push
push
lock
clc
sbb
push
inc
jp
mov
sub
lods
retf
inc
cli
cmp
adc
(bad)
fldenv
mov
cli
sar
imul
(bad)
fcomip
jg
call
and
mov
sti
push
fstp
push
mov
(bad)
call
adc
mov
ja
push
mov
mov
adc
xor
mov
add
mov
(bad)
mov
les
mov
jmp
addr16
and
(bad)
call
and
push
test
std
fdiv
lahf
cmp
push
push
ss
rol
mov
or
and
out
imul
inc
sub
cdq
(bad)
(bad)
(bad)
(bad)
jle
sbb
ss
call
int
jae
xchg
pop
(bad)
add
pop
and
mov
(bad)
(bad)
(bad)
jmp
adc
dec
pop
(bad)
mov
fist
cmps
and
dec
pop
jg
(bad)
(bad)
adc
pop
push
add
(bad)
(bad)
fadd
or
leave
ins
pop
mov
mov
int
and
pop
(bad)
lock
sub
shr
jae
xchg
(bad)
(bad)
(bad)
jmp
retf
cmps
push
cli
add
mov
mov
sbb
int
xchg
call
(bad)
call
or
bnd
cmps
ins
push
aad
test
imul
xchg
(bad)
(bad)
(bad)
dec
aam
jmp
icebp
cmp
stc
(bad)
inc
fstp
loope
int
pop
pop
test
push
sbb
movs
loop
ds
out
shr
mov
in
je
inc
nop
add
jg
call
sub
push
xchg
pop
or
fisttp
or
aad
push
imul
jg
jmp
mov
mov
mov
xlat
iret
(bad)
cli
inc
cmp
popf
jbe
(bad)
(bad)
call
mov
jp
pop
adc
cmp
jae
repz
fwait
mov
int
in
push
lahf
jge
f2xm1
(bad)
(bad)
jmp
dec
ss
addr16
in
iret
popf
in
cmc
xchg
mov
rcl
push
(bad)
jns
jl
test
mov
cdq
cdq
jmp
loop
adc
movs
fwait
fwait
inc
add
jb
adc
cmc
inc
(bad)
(bad)
(bad)
call
jnp
xor
xchg
ins
mov
pop
(bad)
and
jl
jno
adc
jo
jecxz
dec
jge
and
mov
cmp
(bad)
sub
cs
xchg
arpl
ss
jg
popf
ins
int3
cmp
push
test
push
sub
mov
jg
movs
test
in
and
ret
or
scas
out
cli
dec
xchg
arpl
dec
adc
lock
cs
(bad)
(bad)
call
fidivr
mov
movs
rol
cmps
push
pop
(bad)
jle
cmps
(bad)
int3
jae
xchg
adc
call
cmp
rol
or
mov
stos
xchg
xchg
adc
call
xor
ror
(bad)
loopne
mov
mov
jmp
(bad)
(bad)
jmp
and
pop
jo
add
dec
mov
ret
rol
adc
and
inc
call
popa
push
clc
cwde
call
es
jae
cdq
fisub
(bad)
(bad)
call
sbb
adc
aam
int
aas
loop
int3
popf
iret
cmp
mov
sbb
loopne
push
push
sub
fwait
adc
arpl
(bad)
popa
fsubr
fwait
call
retf
mov
xor
sbb
das
mov
ins
cmp
movs
xchg
jecxz
stos
inc
(bad)
(bad)
(bad)
inc
inc
arpl
xor
jecxz
cld
mov
jo
push
in
cmp
push
cmp
(bad)
dec
arpl
jb
jnp
fs
push
std
aaa
int
add
outs
lahf
pop
lods
mov
xchg
(bad)
(bad)
(bad)
inc
(bad)
retf
pushf
test
loop
test
mov
xchg
sbb
mov
ja
lea
jmp
rcr
push
add
setae
mov
je
dec
retf
push
sar
pushf
outs
cmp
iret
test
push
out
mov
retf
pusha
dec
(bad)
push
mov
mov
and
cmps
imul
jmp
stc
hlt
call
lea
add
es
dec
dec
push
fadd
add
and
and
(bad)
(bad)
cmp
dec
enter
mov
jns
mov
out
and
jmp
xchg
in
or
jno
jg
leave
pop
out
cmp
add
int3
fdiv
or
mov
jnp
and
fcomp
icebp
rcr
mov
mov
mov
inc
aaa
push
jbe
add
or
movs
push
add
(bad)
jmp
push
sub
sbb
xor
fmul
jl
sbb
add
mov
imul
pop
and
ins
cmp
inc
and
outs
mov
nop
cli
xchg
jae
push
loope
dec
dec
cmps
(bad)
jo
(bad)
(bad)
inc
dec
pusha
add
mov
inc
cli
loope
pop
xor
mov
or
dec
ins
popf
arpl
mov
xchg
mov
ret
das
push
mov
lea
ret
push
add
add
scas
clc
dec
call
in
imul
mov
ins
sub
jns
or
sub
sahf
xlat
ins
xor
scas
(bad)
(bad)
inc
cs
sbb
push
cmp
xchg
fs
cdq
popa
daa
xchg
int3
and
call
mov
jno
movs
sub
dec
add
xchg
and
aas
imul
ret
push
add
ret
adc
sub
stos
div
aaa
bound
fadd
xchg
push
adc
retf
sbb
sbb
cld
mov
dec
or
rol
jg
xor
mov
les
cli
vmaxsd
mov
and
inc
mov
or
sbb
pop
inc
and
xor
mov
call
ja
lahf
outs
jp
adc
push
stos
les
push
xor
mov
push
das
and
inc
push
rcl
xor
push
pushf
mov
(bad)
(bad)
jmp
cmp
jle
in
xchg
mov
jle
mov
sbb
mov
into
push
and
ret
sub
mov
mov
sub
sti
dec
xchg
pop
jno
pushf
inc
jge
js
mov
scas
pushf
(bad)
(bad)
(bad)
jmp
cwde
push
(bad)
and
ins
and
sub
in
lods
f2xm1
cmps
fcmove
test
rol
pop
in
daa
sbb
fild
leave
pop
nop
push
ja
stos
mov
fcomip
(bad)
dec
aas
(bad)
in
test
sub
sti
js
arpl
fnstsw
cmp
popf
out
pop
(bad)
(bad)
(bad)
push
dec
scas
mov
ins
cdq
call
jmp
xchg
loope
cdq
out
jl
xchg
(bad)
(bad)
loopne
pop
(bad)
(bad)
dec
rcl
add
adc
repnz
and
adc
retf
jmp
dec
xor
lds
add
data16
pushf
ja
mov
js
mov
(bad)
pop
and
adc
mov
xor
jmp
pusha
dec
jle
and
push
(bad)
push
cmp
pusha
in
and
es
retf
sbb
ja
std
push
cmp
jp
sub
out
mov
stc
das
shr
out
mov
int
jge
hlt
xchg
(bad)
(bad)
(bad)
call
std
les
jp
test
or
sub
mov
fdivr
int3
mov
(bad)
(bad)
(bad)
(bad)
aas
repz
loopne
and
iret
mov
xor
loope
mov
jae
mov
mov
idiv
jmp
fucomi
test
cld
in
out
add
idiv
(bad)
out
cli
shr
add
dec
mov
xchg
aaa
std
aam
xchg
jle
in
test
(bad)
in
push
repnz
aad
mov
idiv
pop
sar
sbb
add
clc
ja
xchg
or
ret
jno
(bad)
(bad)
(bad)
inc
or
imul
xchg
pop
adc
pop
leave
test
and
(bad)
call
xlat
les
and
push
pop
push
ins
stos
mov
test
aam
and
xchg
add
mov
lods
rcr
int
pop
xchg
sub
mov
(bad)
xchg
xor
cld
movs
pop
mov
int
(bad)
mov
(bad)
(bad)
(bad)
inc
xor
inc
mov
lea
push
sub
or
js
cmps
cmp
rcl
outs
sub
pop
cld
pop
sub
xor
fild
aad
and
add
jmp
mov
xchg
mov
mov
dec
pusha
and
push
sbb
and
mov
(bad)
(bad)
dec
push
sub
push
pop
dec
pop
leave
call
and
add
sbb
(bad)
(bad)
inc
sbb
push
fstp
cmp
or
outs
hlt
cld
(bad)
(bad)
(bad)
push
ficomp
gs
hlt
and
rcl
jecxz
or
inc
xchg
hlt
jg
cmps
inc
sbb
sub
test
sub
pusha
adc
jbe
(bad)
(bad)
xor
out
mov
aam
add
pop
push
inc
jne
push
xor
retf
xchg
mov
or
jmp
sub
ins
imul
sbb
jae
clc
xchg
lahf
cmp
clc
jg
lea
and
ret
pop
ja
push
sbb
outs
inc
(bad)
jmp
xchg
xchg
xchg
shl
out
adc
(bad)
bnd
xor
jg
push
(bad)
pop
je
jecxz
outs
(bad)
(bad)
mov
mov
outs
(bad)
push
stos
xor
ret
ret
adc
xchg
cmps
imul
jmp
pop
daa
mov
imul
xor
movs
(bad)
mov
jb
sbb
mov
mov
daa
jmp
clc
scas
test
movs
clc
sar
(bad)
in
jmp
call
jmp
scas
sub
repnz
mov
(bad)
jmp
ss
in
sub
and
sub
fst
(bad)
(bad)
(bad)
call
pusha
cmp
lods
(bad)
fdivrp
mov
mov
mov
mov
frstor
sahf
mov
call
test
sbb
pop
mov
push
loope
out
fdiv
stos
xchg
(bad)
(bad)
(bad)
call
(bad)
xor
mov
cmps
sub
leave
push
push
push
pusha
out
dec
dec
int
mov
sar
jmp
movsx
sbb
xchg
and
or
push
and
push
adc
ds
mov
jnp
adc
(bad)
(bad)
call
ds
inc
inc
call
sub
adc
lods
in
push
(bad)
dec
sbb
rol
adc
xor
pop
jmp
add
push
inc
sbb
iret
pop
or
jmp
ins
xchg
loop
inc
adc
xchg
lods
sub
shl
sbb
(bad)
(bad)
(bad)
dec
mov
pop
adc
dec
test
out
fwait
int
pop
repz
jo
jecxz
mov
outs
jne
(bad)
aam
cld
ret
jo
jae
push
or
xor
xchg
mov
mov
test
(bad)
inc
add
clc
inc
sub
mov
adc
xchg
pusha
movs
shl
gs
push
push
call
outs
xor
or
js
and
jg
movs
(bad)
movs
fldcw
retf
pop
push
std
aaa
mov
addr16
jns
jle
pop
ret
jmp
(bad)
js
into
in
outs
inc
mov
(bad)
jg
xchg
aaa
ds
imul
jne
cmp
or
pop
fldenv
inc
push
jns
je
in
xor
(bad)
(bad)
jmp
sbb
cwde
out
das
mov
sar
retf
mov
aas
jp
jecxz
cdq
push
xlat
(bad)
(bad)
jmp
idiv
rep
fwait
and
jle
inc
cmp
push
xchg
(bad)
mov
ret
popf
cmp
outs
cmps
pop
sbb
call
lock
mov
inc
inc
add
(bad)
jmp
jle
loope
xchg
jns
inc
push
les
or
data16
into
inc
in
cmp
jmp
ret
in
mov
add
sbb
xchg
loop
cmps
dec
(bad)
mov
test
pop
retf
mov
shl
xchg
dec
fwait
test
add
and
or
arpl
pop
push
fidivr
std
(bad)
(bad)
iret
ins
(bad)
mov
lock
cmps
jg
hlt
leave
test
(bad)
call
daa
loope
push
xchg
pop
ss
pop
(bad)
daa
fcom
iret
xchg
pop
ror
out
(bad)
sub
(bad)
(bad)
inc
neg
stc
call
dec
mov
sub
inc
jno
jg
pop
ins
fcom
jo
and
inc
ja
inc
mov
test
cmp
adc
mov
je
add
and
push
clc
int
jp
mov
jecxz
loopne
lahf
cmp
xchg
lods
jg
add
inc
lahf
jecxz
ds
retf
dec
adc
jmp
mov
lds
shr
and
(bad)
(bad)
(bad)
(bad)
fstp
sbb
mov
(bad)
jmp
movs
cmp
mov
repz
test
(bad)
(bad)
(bad)
call
inc
mov
add
cli
cmp
cmp
mov
pop
inc
int3
in
mov
neg
jmp
and
sbb
dec
and
outs
or
mov
jne
(bad)
(bad)
(bad)
(bad)
(bad)
cmp
or
sub
shr
cmp
pusha
sbb
loopne
dec
mov
(bad)
(bad)
jmp
sub
pop
mov
xor
push
inc
xchg
push
push
push
ja
push
push
cwde
clc
push
push
clc
sar
das
clc
pop
mov
pop
out
or
inc
inc
in
test
xchg
sbb
mul
or
call
pop
std
stos
pop
inc
adc
cwde
cmps
in
xlat
xchg
(bad)
(bad)
call
movs
push
mov
and
or
cmp
dec
jge
aam
shl
fs
(bad)
(bad)
(bad)
inc
sbb
aad
popa
mov
scas
popa
xchg
aad
addr16
ss
dec
ins
cwde
inc
sbb
inc
xor
xchg
mov
rcr
inc
push
mov
std
push
add
dec
cwde
fcmovbe
test
mov
jg
(bad)
call
test
fld
sbb
cmp
cs
stos
ds
xchg
call
cli
jmp
cld
jmp
popa
push
scas
cmp
in
fidiv
pop
and
or
jecxz
(bad)
(bad)
(bad)
dec
sbb
or
pop
sub
(bad)
or
add
pusha
mov
mov
xchg
and
call
loop
sbb
out
jl
xchg
call
push
in
(bad)
push
mov
and
xor
push
sbb
aaa
in
call
(bad)
(bad)
(bad)
call
fdivr
cli
fst
fnstsw
ret
nop
cmps
std
int3
aas
mov
std
cmc
iret
push
popa
fisubr
(bad)
jmp
pop
pop
fnstsw
repnz
jp
mov
ins
cmp
sub
(bad)
(bad)
(bad)
inc
xor
(bad)
nop
aaa
or
aam
sbb
push
iret
adc
or
jmp
leave
ins
xor
(bad)
(bad)
(bad)
inc
push
aas
sbb
popa
xor
repnz
cld
and
jae
mov
mov
scas
mov
scas
add
xchg
repnz
jne
pop
movs
nop
mov
(bad)
call
cld
stc
rol
push
cmps
dec
push
and
mov
fwait
cmp
(bad)
call
fsub
xchg
pop
lahf
sbb
fwait
ret
xchg
xor
lock
hlt
or
outs
js
push
xor
jmp
fistp
add
cmp
(bad)
call
fcmove
pop
cmps
retf
nop
or
retf
cmp
aaa
aaa
push
ret
inc
mov
(bad)
(bad)
(bad)
jmp
push
mov
xor
pusha
xchg
mov
shl
xchg
jne
in
sub
mov
aas
mov
cmc
(bad)
call
sub
pop
jge
mov
inc
std
pop
push
pushf
sub
(bad)
(bad)
fbld
pop
retf
repnz
rol
mov
mov
push
(bad)
(bad)
(bad)
(bad)
jp
sbb
sub
rcr
mov
jp
ins
push
mov
pop
xchg
into
scas
scas
ret
in
fild
push
cli
loope
adc
push
adc
ins
and
ins
push
(bad)
(bad)
jmp
xchg
xchg
xor
push
xchg
fwait
mov
cmc
add
add
(bad)
(bad)
jg
mov
pop
xor
or
mov
das
push
jnp
int
test
in
inc
int
aad
(bad)
(bad)
(bad)
push
jno
jecxz
dec
jge
stc
in
mov
and
mov
leave
or
(bad)
(bad)
(bad)
dec
mov
xchg
xchg
rcl
adc
pop
or
cdq
and
cmps
adc
push
fdivp
(bad)
cmp
mov
fsubr
pop
mov
pop
std
aas
idiv
(bad)
(bad)
(bad)
jg
push
loope
mov
push
imul
in
jle
mov
dec
jnp
add
fsubr
out
and
aas
fcmovnu
std
(bad)
(bad)
jmp
arpl
xchg
adc
add
adc
arpl
aad
jmp
inc
bound
ror
push
jl
fucom
std
imul
outs
(bad)
jae
addr16
scas
pop
cmp
leave
push
test
call
bnd
mov
rol
xchg
lds
and
mov
ins
shl
out
cmc
xlat
out
cli
(bad)
call
fidiv
sti
in
(bad)
in
mov
dec
mov
pop
test
repnz
repz
mov
push
jg
(bad)
pop
in
out
mov
iret
mov
sbb
call
pop
push
(bad)
cmps
pop
and
rcr
mov
add
jnp
loopne
stc
jmp
rol
add
adc
jmp
or
and
pop
cmps
jmp
scas
fnstsw
xor
sbb
(bad)
(bad)
(bad)
cmp
in
icebp
ret
aas
dec
mov
pop
xchg
leave
push
sub
rol
xchg
mov
retf
(bad)
call
test
pushf
adc
lea
jmp
jo
out
pop
cwde
mov
(bad)
(bad)
push
sub
(bad)
cld
adc
je
adc
push
sub
mov
in
cmp
ss
sub
jg
(bad)
push
gs
and
test
push
inc
pusha
ja
div
cdq
xchg
scas
push
jge
in
cmp
dec
mov
jl
cwde
add
mov
sar
jmp
(bad)
call
je
and
iret
sbb
repz
jne
stc
test
mov
jmp
xor
cmp
ins
push
add
inc
jb
aaa
mov
mov
mov
or
(bad)
mov
dec
popf
adc
sub
(bad)
inc
xlat
pop
fcom
jmp
mov
stc
vpsubsw
(bad)
mov
xor
xchg
ins
mov
jae
shl
sbb
add
(bad)
(bad)
(bad)
cmp
nop
jns
cmp
out
loopne
mov
or
dec
mov
stc
pop
cmps
(bad)
call
stos
inc
lods
popa
ss
mov
add
or
(bad)
(bad)
(bad)
cmp
imul
mov
fdiv
cs
adc
repnz
loopne
jmp
xlat
mov
dec
mov
mov
mov
adc
(bad)
call
cmp
mov
mov
fild
or
inc
sub
add
je
cli
or
loopne
movs
adc
es
(bad)
daa
mov
cmp
mov
xchg
(bad)
call
js
cmp
pop
push
xchg
mov
xchg
pop
sub
lock
inc
call
and
sub
pusha
pop
dec
out
sahf
inc
je
sub
push
push
sbb
out
das
inc
fst
(bad)
call
jge
imul
mov
int
hlt
fdiv
mov
pop
and
enter
ficomp
push
mov
fsub
std
js
out
(bad)
(bad)
(bad)
mov
pop
pop
int3
sbb
cmp
mov
pushf
mov
mov
push
outs
loopne
jecxz
(bad)
push
and
sahf
mov
dec
test
xchg
test
cmp
mov
or
adc
inc
inc
aad
mov
inc
movs
jmp
shl
or
jno
fdecstp
cdq
fidiv
inc
pop
les
mov
push
cld
aam
fucomip
in
outs
(bad)
(bad)
(bad)
(bad)
cmp
call
idiv
xchg
xlat
dec
fwait
retf
push
(bad)
loope
mov
clc
retf
cmps
aaa
mov
xchg
push
jle
mov
dec
test
adc
(bad)
call
xchg
cmp
mov
data16
out
xor
in
bound
dec
mov
cmps
(bad)
(bad)
call
aad
xchg
adc
adc
shl
prefetcht1
mov
pop
ret
push
ds
inc
dec
sbb
cmp
mov
cli
push
sbb
pop
pop
or
es
shl
inc
aas
pop
out
(bad)
outs
mov
push
int3
je
lods
mov
ror
push
sbb
add
int
fistp
enter
push
(bad)
jmp
fst
cmp
xlat
fidivr
rol
(bad)
jg
add
scas
cmc
mov
jnp
stc
repz
xchg
mov
out
sbb
loop
or
cmp
popf
mov
cmps
pusha
push
mov
retf
sahf
in
and
sub
(bad)
(bad)
inc
push
setbe
stc
cmp
mov
pop
outs
sbb
shl
pop
enter
push
add
(bad)
(bad)
call
push
test
nop
sub
das
sub
aad
fld
jmp
fs
sub
(bad)
cs
jns
jmp
test
add
stos
or
mov
rcr
ss
(bad)
mov
js
int3
or
int3
mov
jle
dec
(bad)
in
(bad)
jmp
mov
iret
jne
outs
outs
mov
push
adc
mov
stos
outs
xchg
(bad)
(bad)
(bad)
jmp
add
(bad)
mov
jne
push
es
mov
mov
sbb
sar
(bad)
jmp
pusha
mov
jns
scas
fild
retf
or
xor
cdq
sub
push
and
jle
mov
dec
push
call
sbb
cmp
dec
(bad)
mov
stos
fidivr
push
aas
(bad)
adc
push
retf
inc
sub
xchg
jbe
out
pop
push
ins
or
(bad)
mov
movs
into
loope
dec
fsubp
jge
hlt
imul
lahf
(bad)
je
scas
loopne
mov
dec
jl
mov
mov
ss
daa
add
jmp
push
dec
push
(bad)
out
or
add
jbe
(bad)
out
fcomp
(bad)
(bad)
(bad)
jg
cmp
addr16
mov
or
jle
aam
and
adc
mov
mov
test
(bad)
(bad)
call
std
mov
in
cmp
fistp
mov
dec
jmp
push
jp
sbb
sub
mov
fnsave
int3
jmp
iret
fdivr
inc
fistp
cmp
data16
pop
inc
arpl
dec
adc
in
mov
jl
and
(bad)
xchg
imul
je
popa
sbb
xor
sti
and
cmp
dec
sbb
(bad)
(bad)
inc
dec
jl
popa
push
shl
(bad)
fdivr
push
push
imul
xchg
fsub
mov
xor
out
test
int3
mov
xor
lods
aad
mov
ins
mov
mov
pop
test
jg
sub
inc
add
(bad)
push
add
daa
pop
jo
movs
test
mov
and
or
test
mov
mov
pop
addr16
iret
lahf
(bad)
call
adc
mov
jl
(bad)
(bad)
call
scas
or
scas
push
push
push
inc
push
push
dec
or
aad
mov
pop
cwde
pop
cmc
xchg
lock
jae
mov
jp
sbb
arpl
scas
cli
cmps
sbb
in
sbb
adc
dec
inc
cmp
cs
int
loopne
dec
adc
aam
mov
adc
push
and
or
shr
xchg
mov
pop
jp
shr
and
mov
out
lahf
jns
fucomi
sar
xchg
inc
loopne
pop
jae
clc
pop
sbb
mov
fsubr
das
clc
(bad)
jmp
xor
ins
(bad)
sub
arpl
cmp
rol
inc
mov
(bad)
(bad)
(bad)
jmp
sbb
lods
xor
adc
xor
adc
inc
dec
dec
dec
or
mov
jge
call
(bad)
sbb
shl
test
mov
and
test
pop
cmc
jmpw
add
fwait
ret
mov
fmul
sub
call
(bad)
lock
pop
fs
sbb
js
std
movhps
mov
sar
dec
movs
outs
mov
push
addr16
push
retf
sbb
(bad)
(bad)
call
mov
xchg
sbb
movs
int3
inc
sub
pop
pop
and
imul
cmp
lds
fs
test
dec
jb
stc
es
in
(bad)
(bad)
(bad)
push
test
pop
sbb
push
stos
xor
cmp
clc
dec
in
mov
es
call
rol
rcr
and
jo
mov
sar
(bad)
fisubr
pop
shl
into
or
nop
nop
pop
retf
adc
(bad)
push
sbb
psrad
ins
push
retf
and
loop
(bad)
adc
call
mov
xor
cdq
push
test
jecxz
lock
push
pusha
sub
sbb
enter
(bad)
(bad)
(bad)
dec
stos
movs
ss
and
mov
add
push
dec
jb
loope
sahf
imul
mov
retf
mov
pop
jmp
jbe
cmp
dec
loopne
out
dec
xlat
aas
repz
scas
dec
aaa
in
xlat
dec
mov
jns
jmp
dec
and
in
mov
(bad)
(bad)
sub
jb
in
xor
icebp
gs
and
mov
fimul
adc
pop
(bad)
call
hlt
lods
test
jno
fsubr
call
mov
bound
(bad)
call
sbb
out
icebp
mov
jbe
cmp
loop
mov
sbb
les
(bad)
(bad)
push
jns
outs
dec
jns
aaa
aaa
ret
xchg
mov
pop
js
pop
sbb
or
ins
adc
shl
jecxz
(bad)
jmp
sub
sbb
jge
fdivr
cdq
push
pushf
test
inc
movs
xor
(bad)
(bad)
mov
jne
sub
cmps
push
push
(bad)
pop
mov
aaa
xor
dec
inc
dec
push
adc
cli
(bad)
leave
pop
into
hlt
jbe
dec
lods
outs
mov
sbb
(bad)
mov
jmp
gs
cmp
push
add
scas
add
sbb
int3
xor
and
pusha
add
dec
add
push
in
mov
pop
inc
rcr
mov
popa
sbb
jg
into
repz
(bad)
out
cli
jmp
retf
push
movs
inc
and
add
or
mov
inc
in
test
mov
(bad)
(bad)
(bad)
inc
add
inc
xchg
dec
and
inc
sub
cmps
bound
(bad)
(bad)
(bad)
call
jb
int3
retf
outs
jge
pop
test
pop
mov
mov
cmp
dec
pop
jmp
jmp
data16
xor
cmp
(bad)
push
mov
xchg
cmova
jbe
rcl
or
pop
(bad)
(bad)
(bad)
mov
int3
jo
push
in
push
jl
(bad)
pop
mov
pop
scas
rcr
mov
(bad)
(bad)
(bad)
(bad)
fnstsw
imul
fdiv
inc
mov
mov
add
jle
or
sahf
mov
pushf
inc
add
arpl
popa
jae
push
dec
(bad)
shl
jb
cs
pop
ins
pop
pop
clc
loope
push
data16
outs
clc
(bad)
lods
ror
mov
add
cld
shr
jmp
push
std
sar
cmp
in
pop
xchg
in
dec
movs
jecxz
icebp
cmp
fcomip
inc
dec
lods
(bad)
jns
into
push
fnstcw
inc
add
dec
gs
sub
cld
in
(bad)
(bad)
fistp
fwait
pop
inc
dec
jo
pop
mov
sub
xor
jecxz
add
(bad)
inc
mov
ret
sub
push
stos
repz
arpl
(bad)
sahf
fcos
outs
clc
dec
dec
cmp
add
(bad)
clc
push
retf
fidivr
or
dec
pushf
cmp
repz
je
adc
stos
push
mov
xchg
(bad)
fild
aad
(bad)
(bad)
(bad)
jmp
fdiv
mov
(bad)
pop
sub
sbb
nop
fisttp
(bad)
jmp
add
pushf
clc
mov
add
pop
pop
cmps
nop
push
scas
jbe
or
and
push
xor
sbb
stc
(bad)
mov
cld
stos
test
lahf
stos
xor
xlat
fimul
rcr
jae
(bad)
shl
clc
(bad)
(bad)
(bad)
sti
pop
std
jle
sbb
mov
mov
push
outs
mov
pop
pop
jae
rcr
loopne
rcr
and
sub
push
cmp
test
(bad)
sbb
outs
mov
xchg
mov
and
sahf
xchg
mov
ja
aaa
std
(bad)
(bad)
jnp
cmps
in
jg
jmp
cli
fcmovnu
js
pop
inc
xchg
cmps
mov
xchg
(bad)
(bad)
jmp
popf
cmp
sub
fimul
stos
cmp
in
nop
jge
movs
xchg
inc
lods
sbb
fwait
sbb
jge
lahf
ds
in
inc
sub
stos
fadd
lods
shl
jg
fist
(bad)
(bad)
call
fnsave
push
cmps
aaa
das
pop
mov
jo
mov
mov
jecxz
cmp
ins
je
cmp
paddsb
(bad)
(bad)
(bad)
in
cmc
xchg
clc
inc
sbb
push
add
sahf
out
jmp
out
aaa
es
(bad)
dec
stos
fnstenv
imul
jmp
call
(bad)
(bad)
jg
sar
int3
out
inc
jnp
xor
and
inc
lods
clc
and
in
sub
pop
mov
xor
xchg
clc
(bad)
jmp
stos
test
jmp
loopne
pop
inc
pop
lds
(bad)
(bad)
dec
rcl
test
and
push
adc
inc
stos
(bad)
(bad)
(bad)
dec
mov
outs
dec
(bad)
dec
lahf
or
ret
sbb
das
jg
xor
or
rcl
pop
and
mov
loopne
and
sub
retf
test
or
mov
push
xchg
ins
add
ror
dec
leave
ins
inc
add
sub
sti
pop
movs
cld
(bad)
(bad)
(bad)
jmp
imul
mov
push
and
gs
adc
xchg
and
iret
movs
daa
mov
les
adc
fidivr
dec
in
add
leave
aad
push
jnp
(bad)
jmp
adc
cmp
cmps
or
cmp
jns
add
loop
(bad)
(bad)
jmp
sub
out
pushf
dec
loopne
cmps
pop
aas
mov
mov
and
loopne
(bad)
(bad)
fcomip
cmp
or
adc
and
mov
and
cmps
sub
push
jl
cmc
add
test
(bad)
jg
inc
popa
cmp
or
cmps
jns
clc
and
mov
lea
(bad)
(bad)
(bad)
cmp
jmp
add
and
jecxz
pop
test
xchg
xchg
outs
mov
xor
test
cld
cmp
jle
sub
jg
movs
call
scas
ins
fdivr
stos
test
iret
popf
jmp
(bad)
call
mov
push
sahf
jmp
xchg
loop
jecxz
mov
es
(bad)
(bad)
jmp
fist
adc
and
or
out
jle
or
fnstenv
scas
adc
jg
movs
push
jp
pop
dec
mov
xor
(bad)
(bad)
(bad)
inc
or
je
mov
mov
out
shl
xchg
psrld
jmp
aaa
in
call
xlat
fistp
cmps
dec
(bad)
(bad)
call
ret
jg
fmul
inc
dec
ret
jge
jbe
ud1
jae
jle
xor
ret
lods
push
lock
(bad)
call
jp
movs
xchg
add
call
sti
out
into
mov
mov
dec
dec
jmp
dec
ds
jle
imul
cwde
ins
jp
xor
call
ret
push
aaa
ins
mov
hlt
pushf
inc
push
dec
xchg
scas
out
jle
cmps
lock
stc
out
es
xchg
test
mov
jge
inc
sar
push
pop
or
test
int3
aaa
push
inc
push
test
fcomip
jno
mov
in
adc
sbb
lods
jmp
mov
inc
shl
or
aam
mov
out
jge
inc
jecxz
inc
jne
popf
pop
stc
ficom
mov
bound
or
inc
adc
into
dec
(bad)
(bad)
(bad)
dec
xchg
pop
out
pop
js
jge
fmulp
pusha
push
add
cmp
xchg
push
(bad)
test
mov
or
jno
(bad)
(bad)
(bad)
(bad)
jg
mov
dec
mov
pop
mov
fdiv
xchg
jne
(bad)
gs
mov
lea
stos
(bad)
fild
loop
pop
nop
add
scas
(bad)
idiv
(bad)
fbld
adc
cmp
cs
neg
repnz
sti
xchg
in
cli
(bad)
call
clc
mov
or
mov
(bad)
(bad)
xchg
jbe
jle
pop
mov
dec
and
sbb
fidiv
(bad)
test
int
add
add
(bad)
(bad)
inc
loope
test
or
inc
lds
(bad)
dec
pop
mov
add
and
popa
(bad)
(bad)
(bad)
push
rol
inc
pushf
rcr
in
call
mov
popa
mov
push
lods
mov
(bad)
mov
stos
xor
lods
dec
jl
pop
clc
aaa
std
(bad)
(bad)
xchg
xor
push
fild
gs
aam
fmul
sub
mov
sub
dec
push
jb
xchg
or
sbb
(bad)
(bad)
inc
icebp
cmc
pop
mov
es
push
psubw
mov
(bad)
jg
ins
jb
popf
sbb
loope
jbe
mov
push
push
jmp
pop
add
jp
add
test
jbe
(bad)
(bad)
(bad)
call
dec
popf
mov
movs
in
push
xchg
inc
mov
mov
jbe
clc
jl
adc
inc
outs
adc
push
(bad)
out
stos
clc
and
in
hlt
es
imul
sub
or
out
mov
mov
in
jmp
repnz
and
cmp
add
xchg
test
jmp
sub
mov
lods
addr16
lods
ins
fistp
std
(bad)
(bad)
(bad)
jmp
xor
add
adc
in
or
call
imul
(bad)
fadd
push
dec
(bad)
icebp
inc
add
pop
pop
pop
aad
inc
xor
xor
icebp
(bad)
push
pop
aaa
push
pop
push
adc
retf
xor
data16
ret
(bad)
(bad)
(bad)
jmp
test
(bad)
dec
dec
sbb
aas
std
lds
sbb
in
data16
arpl
ja
retf
push
stos
jnp
stos
mov
sub
nop
pop
jne
test
fs
out
cmps
add
movs
mov
ins
data16
(bad)
(bad)
dec
retw
addr16
lahf
clc
aad
sahf
jge
pushf
mov
cmc
jle
inc
push
test
(bad)
jmp
ret
les
sub
fdiv
test
xchg
hlt
mov
scas
sahf
pushf
push
jmp
shl
inc
xchg
sub
fadd
mov
jb
(bad)
(bad)
mov
dec
xor
sub
mov
mov
mov
mov
push
(bad)
jg
mov
dec
or
ss
(bad)
jg
ds
inc
mov
repz
jnp
shr
mov
iret
jmp
lock
in
or
fadd
cmp
jmp
mov
xchg
adc
loope
popa
mov
sahf
inc
mov
je
mov
(bad)
dec
aas
jae
mov
or
sbb
cmp
cdq
jecxz
and
cdq
cwde
test
(bad)
inc
inc
femms
or
xor
jmp
mov
daa
es
push
dec
adc
mov
jle
clc
(bad)
(bad)
jge
test
xor
lock
xchg
imul
and
push
mov
popa
add
mov
push
and
(bad)
(bad)
push
inc
mov
call
or
(bad)
add
retf
cmps
cs
cwde
(bad)
(bad)
(bad)
(bad)
cmp
pop
cmp
xor
xchg
ror
inc
adc
mov
dec
push
dec
dec
dec
jnp
(bad)
(bad)
(bad)
push
inc
jecxz
mov
add
in
or
jb
push
xchg
mov
cwde
jmp
clc
(bad)
(bad)
dec
bound
shl
ss
push
in
das
add
or
jns
push
(bad)
push
add
lods
sbb
cmp
cdq
xchg
dec
push
test
popa
adc
movs
movs
adc
outs
dec
pop
dec
cld
dec
lods
sahf
sbb
in
sar
(bad)
call
dec
ins
dec
mov
ins
cmps
adc
dec
adc
retf
or
retf
xchg
movs
(bad)
(bad)
(bad)
jmp
test
inc
fstp
fstp
mov
sub
repz
out
test
iret
mov
sub
dec
int
cmps
out
(bad)
std
jg
pop
pop
in
addr16
(bad)
mov
pop
into
ins
sti
addr16
cmp
cdq
xor
mov
jmp
push
dec
les
into
retf
sbb
js
xor
lds
mov
mov
imul
inc
sub
fisttp
jg
lea
inc
xlat
xchg
idiv
jmp
mov
(bad)
(bad)
jmp
scas
dec
adc
or
or
push
adc
cmp
sbb
mov
push
out
ror
pop
and
mov
(bad)
(bad)
jmp
in
xchg
sbb
repz
xchg
out
into
mov
enter
xchg
jo
sbb
icebp
jmp
jnp
jmp
sbb
(bad)
popf
lock
ret
in
ret
cmp
dec
or
shl
hlt
ins
arpl
adc
jb
outs
imul
xchg
push
in
movs
cmp
das
mov
mov
shl
push
jmp
push
mov
lock
lods
jge
add
idiv
or
jmp
inc
jmp
or
fiadd
xchg
and
dec
clc
(bad)
(bad)
(bad)
push
sbb
lea
stos
mov
fiadd
test
mov
int3
popa
cli
adc
(bad)
(bad)
call
movs
or
sub
adc
sahf
jmp
cmp
hlt
mov
and
pop
das
cmp
call
cmp
mov
jnp
(bad)
sbb
pop
stos
lods
or
adc
cmp
outs
outs
(bad)
(bad)
call
jl
neg
sbb
ins
loope
jbe
fstp
push
push
cli
push
push
nop
clc
(bad)
(bad)
(bad)
inc
inc
in
fxch
mov
and
fistp
imul
mov
ins
xor
test
(bad)
(bad)
(bad)
inc
ja
stc
test
repz
bound
pop
ss
jo
xchg
imul
in
push
aaa
mov
push
mov
pushf
sub
out
es
sbb
xor
mov
lahf
mov
stos
dec
dec
dec
push
sar
adc
sub
out
movs
add
push
and
(bad)
jmp
add
fucomi
mov
icebp
jp
xlat
aad
mov
inc
push
inc
jp
sub
ja
stos
cs
(bad)
in
loop
jle
mov
(bad)
(bad)
(bad)
jle
mov
inc
ins
xchg
mov
adc
pop
push
call
xchg
fstp
(bad)
mov
lock
inc
jns
mov
xchg
iret
(bad)
(bad)
(bad)
(bad)
mov
dec
inc
pop
and
gs
dec
data16
cmovbe
mov
(bad)
(bad)
jmp
mov
inc
sbb
xchg
or
push
sbb
int3
dec
aaa
lahf
pop
les
jb
mov
pusha
int3
or
in
or
sbb
popf
jno
cmp
ja
aas
mov
mov
mov
xchg
push
add
ret
push
push
mov
ret
or
(bad)
(bad)
(bad)
cmp
mov
inc
fucomi
jp
retf
in
popa
mov
or
test
xchg
mov
fsubr
out
fdivr
icebp
test
jbe
(bad)
imul
loop
sub
das
xchg
sahf
jl
cmp
test
lock
call
xchg
cmp
mov
(bad)
ds
(bad)
cmp
std
(bad)
(bad)
dec
sahf
pop
cmc
or
int3
cwde
add
jl
(bad)
outs
xor
sti
adc
call
loopne
sbb
test
loopne
mov
or
out
mov
(bad)
out
sbb
scas
jmp
das
(bad)
fdivr
jnp
std
pop
mov
pop
scas
and
xchg
loope
daa
sub
mov
retf
test
clc
(bad)
jg
jge
js
les
jo
aad
jnp
mov
jmp
mov
mov
fld
imul
(bad)
loopne
xchg
or
enter
clc
neg
mov
dec
xchg
jl
jne
js
mov
jmp
or
repz
cli
mov
cmp
push
xor
test
jmp
ins
in
xor
leave
nop
mov
add
call
push
ja
ins
mov
dec
sbb
(bad)
fidivr
shl
fmulp
push
or
cmp
(bad)
call
mov
lahf
adc
sbb
or
xor
inc
dec
xor
(bad)
(bad)
out
clc
dec
xchg
ins
cmp
mov
shl
sub
and
call
(bad)
dec
jmp
in
lea
mov
fcmovu
xor
add
xchg
add
inc
push
or
push
add
(bad)
push
mov
les
jl
mov
clc
or
movs
jge
pop
pop
jmp
(bad)
(bad)
(bad)
push
dec
push
inc
or
xchg
push
out
adc
(bad)
xor
dec
ret
jg
ret
or
(bad)
jmp
inc
scas
pop
mov
push
(bad)
add
add
inc
repnz
and
dec
sbb
out
mov
ror
mov
sub
or
mov
push
mov
retf
lods
(bad)
call
push
(bad)
fdivr
or
add
mov
mov
jg
(bad)
push
xchg
add
ret
xor
pusha
jle
fcmovbe
ror
push
or
sbb
push
add
pushf
data16
lds
sub
jns
popa
ins
and
nop
xor
outs
pop
test
popa
iret
cmc
shl
lock
test
loopne
fmul
(bad)
add
int3
int
inc
adc
push
adc
ins
loopne
mov
xor
jno
(bad)
(bad)
inc
xchg
dec
mov
xlat
inc
pop
sub
dec
(bad)
xlat
fld
fistp
addr16
xor
fisubr
aas
idiv
(bad)
(bad)
jmp
xor
daa
out
sub
mov
sub
arpl
lods
xlat
dec
jmp
mov
push
push
pop
fdiv
mov
sbb
dec
aas
xchg
add
mov
(bad)
jmp
inc
push
fwait
xchg
xor
mov
cmp
xor
dec
xchg
sub
inc
sbb
shl
cmp
jecxz
(bad)
(bad)
(bad)
jmp
xchg
sub
or
test
xchg
add
aam
or
or
mov
std
jg
(bad)
cmp
push
add
pushf
call
fwait
mov
pop
and
push
inc
out
push
call
push
xor
ret
push
pop
mov
les
loop
shl
ins
scas
je
hlt
jge
sub
enter
jns
cmp
loopne
fidiv
sahf
sub
xlat
xchg
bound
pop
out
inc
stos
ret
cmp
cwde
push
sbb
jmp
cld
mov
mov
mov
popa
cmp
jmp
test
ss
ret
jecxz
mov
hlt
jmp
sub
mov
pop
mov
out
mov
loop
nop
jl
fistp
mov
and
pop
adc
mov
outs
pop
push
jge
add
(bad)
(bad)
(bad)
push
or
ret
cld
sbb
int3
push
jl
mov
inc
pusha
jg
push
pop
sbb
adc
(bad)
push
mov
push
or
sub
out
mov
mov
jg
or
inc
cmps
adc
xor
(bad)
jg
push
out
lods
fld
pshufw
xor
inc
test
stc
scas
ins
ror
shl
or
and
inc
or
call
xor
(bad)
(bad)
(bad)
call
push
(bad)
mov
js
or
fidiv
pop
pop
fwait
dec
add
imul
xor
mov
jmp
cmps
cmps
shl
sub
loopne
ja
sahf
push
scas
dec
mov
or
pop
cld
jmp
pop
sub
and
xchg
cmp
inc
cvttps2pi
adc
(bad)
(bad)
jmp
mov
es
sub
lahf
imul
xchg
dec
mov
stos
or
cmp
push
stos
xchg
pop
(bad)
cmc
pop
gs
jmp
ds
std
(bad)
(bad)
dec
push
push
out
test
xchg
mov
mov
mov
(bad)
jg
(bad)
repz
or
sub
mov
lds
mov
(bad)
dec
shl
test
inc
(bad)
(bad)
(bad)
call
dec
sub
int3
movs
mov
push
add
retf
ja
in
cmp
(bad)
fcomip
jmp
jg
lea
popa
lea
inc
stos
push
xor
(bad)
xor
cmps
mov
push
nop
and
xor
(bad)
adc
jp
sbb
dec
lahf
mov
sub
(bad)
(bad)
dec
mov
pop
sbb
xor
nop
xchg
stos
push
mov
into
mov
cs
cmps
in
mov
cwde
pop
jmp
(bad)
sbb
adc
jmp
sub
mov
push
sar
and
sub
mov
push
inc
or
(bad)
(bad)
(bad)
ds
sbb
es
jecxz
pop
jbe
std
fld
das
cmps
out
stc
pop
ja
out
dec
fstp
jns
(bad)
jg
or
lock
out
jl
int3
addr16
rcr
(bad)
(bad)
inc
shl
mov
cmp
jbe
mov
xchg
clc
dec
aas
sti
sbb
inc
cmps
scas
inc
add
inc
sub
clc
call
and
aad
test
add
lock
das
es
test
iret
jno
movs
fs
push
cwde
nop
movs
in
push
inc
lock
(bad)
(bad)
stc
mov
sbb
xchg
adc
(bad)
inc
aas
jne
shl
ret
xchg
dec
pop
push
sti
dec
mov
cld
inc
cmp
push
pop
(bad)
push
sbb
mov
test
fdivrp
out
out
sub
in
shl
add
cmp
cmp
in
xchg
push
enter
mov
repz
int
nop
or
push
mov
sub
push
sbb
(bad)
popa
(bad)
push
call
icebp
pop
out
ret
and
(bad)
call
fmul
cmp
cmp
xchg
mov
jnp
imul
idiv
call
cmp
dec
cmp
ins
bound
fdivrp
(bad)
in
jmp
or
mov
fs
ss
push
loop
sar
pop
jmp
xchg
adc
sbb
fs
into
and
arpl
shr
sub
mov
(bad)
(bad)
(bad)
call
cmc
out
sub
dec
mov
stos
retf
jecxz
bound
outs
inc
ins
mov
add
or
in
cmp
aaa
(bad)
mov
pop
jg
and
loop
shl
test
(bad)
(bad)
jg
xchg
sahf
and
pushf
loope
add
jmp
adc
push
(bad)
(bad)
(bad)
call
sbb
inc
or
mov
inc
out
adc
and
leave
and
(bad)
mov
ficom
sub
sbb
push
xor
outs
(bad)
nop
add
(bad)
(bad)
(bad)
ficom
cld
test
mov
inc
jns
and
push
scas
inc
pop
outs
das
repnz
dec
aaa
inc
jmp
sbb
imul
pop
jle
xchg
push
(bad)
(bad)
(bad)
inc
dec
mov
or
leave
test
std
and
jne
cmp
and
mov
lock
es
mov
dec
fcom
in
bound
add
sub
out
pushw
xchg
fxch
es
sbb
hlt
mov
or
push
inc
pop
cmpxchg
rcl
mov
xchg
lahf
ins
stos
xor
push
xchg
clc
or
stos
imul
in
jg
ins
idiv
stc
enter
dec
daa
scas
jg
sbb
movsx
cmp
imul
jmp
outs
pop
cmc
(bad)
cmp
icebp
daa
nop
mov
cmc
aam
mov
clc
(bad)
dec
fsub
ret
hlt
je
jbe
cwde
xor
sub
inc
and
(bad)
(bad)
(bad)
call
and
or
cwde
movs
sub
aaa
push
lahf
movs
inc
stc
cmp
push
fld
frstor
ret
into
stos
inc
push
inc
and
xchg
adc
push
sbb
mov
je
adc
outs
fld
in
mov
mov
test
mov
ins
cmps
inc
pop
push
sbb
jg
add
xchg
push
pop
xlat
enter
rcl
(bad)
dec
or
in
push
adc
adc
push
mov
jecxz
arpl
mov
iret
clc
shl
inc
shr
push
xchg
mov
inc
leave
imul
add
jmp
cmps
add
iret
test
sbb
popf
or
jmp
loop
jecxz
lock
mov
nop
add
sbb
xchg
and
push
push
(bad)
bound
add
loope
fld
ja
inc
movs
push
(bad)
(bad)
dec
mov
xchg
lds
sbb
mov
add
call
jg
(bad)
call
xor
mov
or
pop
mov
inc
mov
(bad)
mov
pop
add
mov
jp
pusha
std
(bad)
inc
xchg
jae
sbb
adc
(bad)
pop
sbb
jp
(bad)
(bad)
dec
in
(bad)
test
rcr
popa
xchg
push
retf
idiv
xor
(bad)
push
sub
fcmovnu
cmps
aad
std
inc
adc
popa
dec
in
or
push
(bad)
push
mov
add
(bad)
call
pop
nop
xor
repnz
pop
mov
add
retf
fidiv
ret
push
lds
sub
xchg
inc
shl
push
mov
pop
outs
popa
fisubr
aad
hlt
sbb
mov
adc
pop
xor
push
imul
in
inc
jae
dec
and
movs
jle
dec
popa
lods
and
(bad)
(bad)
inc
dec
xchg
jmp
jne
jg
fucomip
cmc
xchg
jns
(bad)
jno
imul
lock
call
test
dec
jne
scas
mov
dec
sahf
mov
pushf
jp
std
(bad)
jmp
rcl
jl
xchg
mov
fld
ins
pop
scas
shl
mov
daa
aam
dec
xlat
test
daa
or
inc
mov
icebp
nop
retf
adc
xchg
pop
dec
mov
sub
es
pop
jge
mov
or
xor
sbb
xchg
adc
adc
or
movs
cmp
(bad)
jmp
inc
xor
pop
test
cs
addr16
(bad)
(bad)
out
ins
xor
pop
mov
das
xchg
pop
xchg
outs
jne
mov
inc
mov
lahf
sbb
gs
(bad)
call
out
jle
xchg
dec
xor
test
gs
lods
frstor
(bad)
(bad)
mov
jo
jns
jnp
mov
xor
cmp
movs
aam
in
jmp
jb
mov
pop
test
sub
push
mov
adc
mov
inc
jno
loop
jg
inc
pop
mov
jo
out
jecxz
xchg
and
jge
retf
iret
dec
into
jmp
test
pusha
sbb
cmp
pop
jg
(bad)
(bad)
push
mov
xlat
shl
pop
call
push
test
js
adc
add
mov
cli
je
mov
inc
cmp
les
ins
pop
int
add
out
adc
sbb
daa
adc
jecxz
(bad)
jg
or
(bad)
mov
in
and
mov
packssdw
imul
cmp
push
stos
inc
push
adc
xchg
(bad)
(bad)
(bad)
(bad)
mov
inc
nop
arpl
dec
xchg
ins
imul
xchg
mov
xchg
lea
mov
rcl
sub
(bad)
(bad)
(bad)
jmp
test
adc
scas
rcr
ins
jmp
fs
push
mov
push
stos
in
scas
and
xchg
xchg
and
cwde
jne
adc
imul
(bad)
pop
test
cli
sbb
loop
stc
outs
push
mov
(bad)
push
les
popf
loope
cmps
mov
dec
dec
pop
xlat
imul
sbb
xchg
sbb
pop
push
or
test
ficom
dec
xchg
je
movs
mov
or
add
aas
or
push
or
and
xchg
and
rcr
and
and
pop
out
call
(bad)
mov
inc
adc
cdq
sub
jne
mov
imul
pushf
and
mov
or
nop
xchg
rol
test
das
test
aaa
aam
imul
dec
dec
sbb
mov
js
jle
adc
les
cmps
sbb
(bad)
fbld
repnz
push
test
imul
pop
push
cld
retf
int3
sbb
(bad)
(bad)
(bad)
call
jne
sub
enter
adc
pop
mov
imul
jne
pop
movs
adc
les
push
ret
pushf
or
xor
mov
adc
inc
sbb
(bad)
(bad)
(bad)
call
ret
mov
test
movs
shr
xchg
sbb
(bad)
jmp
mov
inc
cmovnp
ss
mov
sub
pop
pop
aas
pop
fild
aam
loop
call
push
popa
mov
fbstp
mov
sub
sub
je
cli
sbb
(bad)
(bad)
inc
xor
jae
push
jb
dec
adc
or
or
call
mov
jb
jne
inc
pop
mov
sbb
xor
outs
and
call
push
inc
push
cli
(bad)
inc
jl
adc
xchg
adc
jmp
in
lock
(bad)
(bad)
call
popf
pop
sti
mov
dec
cmc
enter
cmp
and
(bad)
fistp
xchg
call
jmp
(bad)
cld
scas
(bad)
lahf
pop
jp
xor
pop
leave
out
mov
mov
cmps
arpl
popa
out
ins
push
jo
xor
(bad)
(bad)
(bad)
aas
dec
or
inc
and
inc
cmp
aad
mov
xchg
cmp
stos
js
pop
and
addr16
pusha
xchg
mov
(bad)
jmp
dec
lods
mov
stos
and
mov
xor
or
pop
push
(bad)
dec
xchg
mov
lahf
cmps
out
ficomp
dec
mov
dec
(bad)
call
dec
lds
mov
cmp
iret
mov
mov
daa
out
xchg
ret
inc
cs
out
cmp
fdiv
and
(bad)
(bad)
(bad)
jmp
jns
lahf
int3
bnd
push
test
fild
int3
xchg
cmp
mov
(bad)
icebp
sbb
(bad)
(bad)
(bad)
(bad)
jmp
inc
pop
and
adc
in
jge
jmp
sub
shr
xchg
(bad)
(bad)
(bad)
dec
mov
xchg
adc
js
test
dec
xor
(bad)
(bad)
(bad)
dec
or
fwait
es
retf
dec
xlat
mov
fst
outs
ret
pusha
or
pop
movs
ror
(bad)
(bad)
(bad)
push
fs
sbb
stos
and
xor
push
adc
dec
daa
mov
inc
(bad)
sbb
push
cmp
ret
(bad)
(bad)
(bad)
inc
(bad)
pop
inc
adc
push
xchg
xchg
sub
xor
jecxz
ss
dec
xchg
sub
cdq
jp
xor
fimul
ror
jle
sahf
dec
js
jmp
inc
adc
or
or
inc
or
sub
imul
(bad)
(bad)
out
push
adc
dec
mov
test
mov
loope
fistp
stos
adc
xor
cmp
aaa
adc
int
add
jo
sbb
pop
inc
popa
xor
ins
fbstp
jg
adc
fsub
or
and
jmp
call
loope
mov
aaa
retf
xor
adc
cmps
(bad)
or
arpl
(bad)
(bad)
mov
xchg
in
xchg
stos
jb
push
shl
sbb
cli
push
or
jg
(bad)
std
cli
add
jg
ss
push
push
repnz
jp
in
push
out
xchg
icebp
xor
jae
jmp
mov
neg
outs
pop
mov
lock
(bad)
(bad)
dec
pop
pop
and
jno
ret
gs
pop
or
dec
mov
or
mov
push
add
cdq
push
or
int3
mov
pop
out
sahf
js
shl
outs
xchg
mov
movs
popf
call
xchg
jmp
dec
mov
outs
or
or
daa
push
sub
cs
shl
mov
xchg
(bad)
(bad)
(bad)
mov
jno
xchg
push
out
and
out
arpl
xchg
dec
push
mov
dec
xchg
mov
cdq
inc
push
pop
into
xchg
push
add
and
fistp
add
mov
dec
mov
enter
xor
movs
(bad)
adc
pop
inc
repz
stos
push
pushf
jp
or
(bad)
(bad)
jmp
jecxz
mov
(bad)
std
movs
pop
out
outs
jg
xor
ja
lds
cwde
div
ja
xor
ins
inc
in
call
inc
push
test
repz
cld
(bad)
mov
add
(bad)
xchg
(bad)
cld
pop
xchg
inc
dec
imul
add
adc
inc
sub
cmp
scas
sbb
jb
dec
mov
adc
call
push
fidiv
cmp
out
cli
mov
outs
out
pop
mov
enter
nop
push
mov
mov
scas
movs
push
mov
(bad)
call
add
repz
jmp
mov
jnp
iret
cmp
aam
movs
in
cmp
dec
push
(bad)
(bad)
(bad)
push
in
pushf
sbb
movs
fcmovnb
add
fst
adc
js
fsubp
aaa
cmp
mov
adc
movs
jbe
int
sub
mov
into
sti
xchg
(bad)
jmp
(bad)
call
in
fstp
xor
sbb
add
and
or
(bad)
(bad)
dec
sahf
shr
push
or
mov
sub
sbb
push
xor
jg
dec
mov
and
cmp
lds
adc
mov
mov
ins
and
call
jge
and
popa
sbb
add
repz
daa
mov
enter
pop
popa
lds
dec
xor
inc
inc
xor
adc
sub
loopne
in
jp
(bad)
(bad)
jg
cmp
out
xchg
sbb
mov
lods
fs
test
push
mov
lods
sbb
dec
gs
sbb
mov
dec
and
adc
or
push
mov
jb
dec
pop
add
test
sbb
sub
mov
inc
mov
(bad)
(bad)
call
shl
pusha
sbb
pop
inc
jl
push
mov
push
lods
xor
ror
ret
add
inc
mov
inc
pop
push
or
xchg
or
inc
sub
shl
inc
or
call
sti
inc
ror
fldcw
dec
jae
inc
xor
(bad)
push
adc
cmp
sbb
mov
cmps
(bad)
(bad)
(bad)
call
inc
jp
mov
xor
pop
bound
nop
cmp
lock
cwde
loopne
push
(bad)
(bad)
(bad)
(bad)
fild
inc
adc
cwde
jge
clc
jmp
jnp
jmp
and
add
cld
(bad)
call
pop
adc
sub
cmp
inc
out
mov
(bad)
jg
repnz
cmp
jbe
cmp
ja
movs
jle
je
call
jmp
fsub
pop
retf
test
cli
retf
cmps
adc
sub
jecxz
fcom
cmps
fwait
ins
sub
mov
dec
xchg
ficomp
jmp
pop
jl
leave
shr
inc
sbb
movs
hlt
call
(bad)
call
out
and
pop
mov
lods
mov
fiadd
mov
(bad)
(bad)
(bad)
call
and
dec
pop
daa
mov
pop
sbb
inc
pop
pop
cld
mov
lds
mov
call
aam
sahf
movs
xchg
retf
inc
mov
mov
test
inc
jbe
mov
(bad)
(bad)
out
mov
mov
imul
call
das
cmp
mov
mov
scas
or
loope
inc
mov
cmp
sbb
pushf
out
mov
into
fnsave
into
cmp
sahf
adc
push
call
jno
push
fnsave
cmp
mov
(bad)
inc
sub
sbb
mov
das
call
in
dec
imul
(bad)
cld
out
or
and
jmp
pop
jno
stos
movs
push
jecxz
xor
(bad)
(bad)
push
test
mov
add
sar
push
push
jo
mov
(bad)
(bad)
call
or
inc
mov
cmp
jp
sub
sub
cmps
(bad)
adc
inc
push
jo
rol
jno
in
mov
mov
mov
xchg
or
inc
dec
add
arpl
add
movs
mov
cdq
in
je
sub
ror
xchg
repz
(bad)
(bad)
(bad)
call
xlat
jp
adc
mov
and
shl
sbb
xchg
xchg
and
pop
dec
mov
(bad)
aad
and
icebp
adc
xchg
add
shl
or
shr
push
cs
ds
(bad)
(bad)
dec
dec
xchg
in
call
cmps
add
dec
cmp
push
sub
rcr
push
stos
xor
sti
xchg
hlt
and
dec
ret
inc
jl
inc
push
clc
sbb
and
inc
es
loopne
(bad)
shl
inc
add
xchg
test
loopne
push
imul
out
(bad)
out
xchg
dec
cs
jns
test
pop
sar
jne
outs
cs
mov
dec
into
ret
(bad)
sub
mov
lods
cli
ss
adc
pop
mov
inc
ret
movs
(bad)
call
in
cmp
xlat
sub
xchg
mov
adc
inc
push
dec
loop
jmp
or
xchg
(bad)
(bad)
(bad)
fild
lds
adc
dec
xchg
xor
ds
jno
xchg
dec
fsub
div
scas
cli
(bad)
dec
xor
enter
repz
adc
mov
pop
jno
cmc
shl
(bad)
jmp
sub
call
cmp
pop
mov
push
es
inc
mov
jmp
into
push
mov
(bad)
call
test
fs
mov
dec
inc
stc
jae
pop
cmp
pop
and
push
lods
pop
fcom
fadd
(bad)
call
xchg
mov
loopne
mov
dec
lock
scas
leave
mov
stc
in
dec
jg
add
rcr
fcomp
std
cmc
mov
neg
pushf
and
outs
sbb
pop
sar
(bad)
jmp
jge
mov
fstp
xor
sbb
fisubr
push
mov
(bad)
sub
outs
outs
xor
and
mov
mov
xchg
out
mov
xchg
out
and
dec
dec
loope
inc
scas
push
push
loope
sub
loope
imul
mov
(bad)
mov
pop
or
das
xor
shr
push
outs
es
push
sbb
call
mov
aam
cs
push
xchg
(bad)
rcl
pop
inc
clc
(bad)
ficom
push
sbb
jb
mov
ret
dec
(bad)
(bad)
(bad)
inc
adc
add
int3
test
lock
sub
retf
add
test
mov
xor
(bad)
jmp
xlat
xchg
imul
adc
mov
mov
sbb
test
lods
aad
addr16
ret
adc
and
jmp
or
bound
rcl
jp
xor
lock
call
sbb
inc
pop
mov
mov
sbb
imul
das
pushf
pusha
or
clc
(bad)
inc
lods
sbb
jb
cmp
sbb
mov
scas
clc
scas
ja
sbb
movs
fs
mov
and
mov
(bad)
dec
shr
mov
lods
and
mov
jp
sbb
test
and
push
xor
(bad)
call
in
cmp
dec
cmp
movs
xchg
rol
or
lods
mov
(bad)
(bad)
dec
js
push
aad
repnz
retf
push
daa
rcl
mov
mov
call
test
loope
lahf
sbb
retf
sub
ins
cmp
push
pop
clc
mov
cmp
(bad)
jmp
pop
call
push
mov
mov
dec
cmp
(bad)
dec
push
push
xor
mov
loopne
out
outs
mov
or
jnp
arpl
sbb
xor
fisttp
jb
adc
xchg
popa
pop
push
mov
(bad)
mov
lods
das
hlt
cmp
retf
adc
out
lahf
(bad)
scas
cli
imul
test
sbb
movs
cld
(bad)
(bad)
inc
mov
enter
mov
mov
aaa
mov
fstp
(bad)
call
fmul
mov
and
popa
and
stos
push
push
cmp
fistp
mov
jae
popf
jl
rol
sub
mov
jne
pop
sub
add
jle
out
mov
mov
cmp
(bad)
(bad)
(bad)
and
sar
push
mov
mov
mov
sub
jmp
ins
cdq
(bad)
pop
call
mov
jle
idiv
dec
gs
outs
jnp
(bad)
(bad)
mov
(bad)
call
push
(bad)
(bad)
push
add
pop
xchg
std
lods
or
icebp
mov
(bad)
xor
stos
jmp
mov
lods
fadd
jbe
sti
(bad)
(bad)
cmp
mov
clc
sahf
push
int3
push
mov
stos
adc
xchg
xchg
lds
or
(bad)
(bad)
(bad)
jmp
out
popf
mul
jo
cmp
pop
jge
call
cmp
nop
xchg
(bad)
(bad)
(bad)
call
or
ss
pop
mov
test
jl
jb
mov
xor
scas
fst
xor
fnsave
lds
push
jp
inc
cld
jmp
pushf
gs
in
popa
fld
movs
add
cs
jmp
jle
inc
lea
call
ins
loop
shl
sbb
pushf
or
imul
imul
(bad)
jmp
inc
push
sub
popa
xchg
xor
shl
out
jae
test
test
adc
pop
aam
inc
movs
dec
clc
jp
push
test
jmp
(bad)
call
sbb
frstor
scas
lods
lds
jmp
popa
fistp
pop
inc
outs
cmp
jbe
mov
sar
mov
call
add
mov
mov
cmp
sti
scas
mov
jmp
bound
(bad)
(bad)
jg
dec
push
inc
cmps
mov
adc
add
cmp
(bad)
(bad)
(bad)
call
ucomiss
test
ret
ja
dec
push
add
cmps
(bad)
mov
jb
xor
(bad)
(bad)
(bad)
in
or
xor
rcl
and
xchg
fdivr
ss
jno
add
inc
inc
imul
push
xor
leave
push
dec
mov
dec
dec
and
scas
inc
pop
pop
stos
adc
add
add
js
aas
repz
das
(bad)
(bad)
call
dec
or
fxam
jg
jne
cmc
fdivp
jge
pushf
in
cmc
jl
mov
(bad)
dec
sahf
jnp
int3
add
out
jp
daa
addr16
push
in
mov
jmp
sar
(bad)
je
push
add
enter
inc
mov
inc
icebp
xchg
stos
dec
rcr
lock
push
pop
inc
lods
jg
std
lods
xor
jo
jmp
xchg
xor
imul
inc
test
sub
xchg
dec
xchg
sub
(bad)
int3
mov
mov
sbb
push
pusha
push
bswap
jg
(bad)
(bad)
mov
retf
push
(bad)
icebp
loope
mov
fs
xchg
popa
cmp
dec
xchg
es
(bad)
(bad)
(bad)
cmp
es
arpl
xor
inc
icebp
and
cmps
fwait
div
leave
adc
xor
in
stc
aaa
jg
test
ins
outs
pop
xor
pop
in
xchg
xchg
scas
mov
push
(bad)
(bad)
(bad)
jmp
jb
repnz
dec
push
push
push
(bad)
stos
xor
not
inc
cld
mov
movs
jle
adc
shl
pop
mov
push
stos
addr16
push
arpl
pop
(bad)
in
cmps
lahf
mov
mov
ret
mov
vphaddbd
sub
mul
outs
(bad)
mov
xchg
arpl
jns
push
add
(bad)
(bad)
jmp
fs
xor
add
ins
aam
mov
and
or
scas
and
ret
(bad)
pushf
movs
call
xor
xor
jmp
dec
sbb
scas
dec
pop
rcr
push
das
push
(bad)
(bad)
(bad)
call
fucomi
or
mov
jae
retf
retf
enter
mov
cmp
clc
in
repz
es
and
and
ds
sbb
stos
dec
mov
sub
mov
add
test
cmps
fldcw
(bad)
fcomip
mov
fisubr
dec
sub
outs
xchg
or
sub
inc
stos
loope
or
(bad)
(bad)
dec
shl
push
test
in
mov
mov
rcr
out
dec
mov
cmp
ret
inc
fild
dec
and
push
ret
(bad)
pop
pop
nop
daa
ror
and
xchg
adc
rcl
jo
lods
(bad)
(bad)
(bad)
jmp
jmp
imul
push
xchg
add
fwait
jae
add
pop
sbb
push
add
inc
push
jmp
adc
arpl
dec
xchg
fcomp
sbb
jne
xor
sub
(bad)
push
add
mov
dec
xchg
ds
ror
cmp
jp
gs
adc
jmp
inc
hlt
pop
scas
xor
xor
sub
mov
leave
call
and
inc
std
(bad)
(bad)
jmp
jmp
jb
(bad)
xor
enter
scas
or
lods
aad
sub
mov
push
mov
pusha
loop
mov
inc
cmc
or
sub
retf
pop
and
add
(bad)
(bad)
(bad)
inc
frstor
repz
push
sub
repnz
fs
push
jmp
push
(bad)
in
jmp
ins
je
jno
and
je
push
sbb
push
inc
adc
cmp
(bad)
(bad)
(bad)
call
xchg
loopne
push
jmp
xor
shl
and
jnp
xor
aas
sub
loopne
pop
jg
(bad)
call
add
adc
(bad)
adc
aas
movs
sbb
lods
push
ins
push
(bad)
mov
(bad)
(bad)
call
sbb
cdq
push
mov
xor
lea
pop
inc
jecxz
xchg
data16
mov
ins
(bad)
(bad)
mov
fsub
xor
jmp
xor
adc
pop
cwde
dec
outs
(bad)
(bad)
(bad)
fistp
std
fmul
retf
fistp
cmp
and
ins
sub
(bad)
(bad)
(bad)
(bad)
cmp
mov
test
cld
lds
out
mov
xchg
into
lods
sub
mov
les
ja
(bad)
(bad)
dec
mov
inc
gs
or
and
lea
stos
mov
xchg
cmp
cmp
or
or
xor
or
jnp
sub
push
cmp
mov
enter
sbb
cmps
shr
add
call
int
loope
(bad)
inc
inc
or
mov
in
je
fnstcw
out
fisttp
sub
pop
retf
mov
leave
clc
and
addr16
(bad)
(bad)
inc
je
or
sysret
or
aam
scas
call
add
mov
mov
call
das
lods
inc
dec
jmp
push
movs
imul
mov
(bad)
pop
sub
nop
inc
xor
(bad)
mov
sub
test
fldenv
aaa
pop
jmp
push
lock
jmp
iret
push
(bad)
call
add
loopne
sub
xor
xchg
retf
xor
xchg
mov
inc
(bad)
(bad)
cmp
mov
sub
jmp
jmp
and
stc
enter
xor
add
call
js
push
lahf
cmp
int3
loope
cmp
(bad)
xchg
mov
pop
add
dec
mov
call
adc
push
ja
(bad)
(bad)
push
iret
and
pop
imul
adc
sbb
popf
or
push
mov
mov
pop
adc
jmp
mov
mov
jnp
cmp
popa
mov
jmp
mov
scas
ret
repnz
shr
call
mov
mov
sbb
jg
add
popa
xchg
outs
imul
icebp
push
(bad)
(bad)
(bad)
(bad)
jnp
iret
fdiv
cmc
test
mov
mov
fwait
push
pop
sub
or
xor
ret
std
push
mov
mov
pop
and
or
cli
push
retf
pop
adc
inc
arpl
imul
loopne
inc
mov
push
movs
pop
pop
mov
mov
pop
sub
repz
repz
jle
test
cs
push
push
jg
inc
std
out
shl
loopne
popf
fild
pop
push
lahf
jg
jle
shr
adc
jmp
sbb
push
cmp
(bad)
mov
push
dec
(bad)
data16
xchg
mov
sbb
jg
jmp
mov
shl
fcmovnbe
jp
(bad)
sub
mov
sub
stos
pop
test
push
mov
mov
dec
pop
test
pop
cmp
push
dec
(bad)
xor
cmp
out
pop
imul
xor
or
(bad)
(bad)
(bad)
push
bound
imul
arpl
xor
inc
cmp
lea
fdivr
jmp
test
cmps
mov
and
or
xor
mov
and
test
mov
jns
xchg
nop
sub
popa
push
inc
leave
and
loope
inc
loopne
inc
dec
es
std
clc
add
call
dec
sbb
mov
or
repnz
mov
(bad)
(bad)
jmp
les
in
mov
mov
lds
inc
data16
popa
xchg
push
push
and
dec
or
cld
(bad)
call
lea
adc
adc
pop
fninit
or
sub
(bad)
mov
fdiv
sub
inc
cmp
or
stc
or
fisub
push
dec
addr16
mov
inc
movs
xchg
push
cmp
out
fistp
dec
xchg
loope
test
pusha
and
push
jmp
js
(bad)
mov
scas
dec
push
cmp
pop
dec
(bad)
(bad)
(bad)
(bad)
out
int3
ret
jmp
imul
or
(bad)
add
call
test
sub
js
sbb
pop
sub
push
test
mov
popf
push
stos
loope
fcomp
or
jmp
xor
lds
loope
mov
jmp
mov
lea
fwait
cdq
sahf
call
ds
xchg
loopne
inc
pushf
adc
sahf
scas
inc
cwde
push
(bad)
jmp
rcr
aam
imul
push
mov
shr
jmp
xchg
pop
in
out
lds
cdq
and
ins
dec
or
adc
dec
sub
gs
aaa
adc
inc
mov
(bad)
(bad)
call
push
test
sub
add
add
gs
jmp
(bad)
jmp
cwde
pop
mov
push
in
pop
clc
(bad)
sbb
rol
xchg
test
sbb
call
sub
xor
cmp
inc
xor
cmps
dec
js
push
daa
(bad)
(bad)
(bad)
inc
or
sub
cs
mov
loopne
enter
or
mov
dec
inc
and
clc
cmps
dec
cld
scas
cli
call
outs
sar
sub
or
push
mov
cmp
mov
fdivr
sbb
enter
(bad)
(bad)
inc
sub
pop
popf
and
and
push
cmps
inc
xchg
inc
fdiv
mov
into
dec
rol
dec
mov
jp
add
iret
sub
(bad)
call
ret
ret
pop
or
cmps
gs
test
dec
shl
hlt
dec
push
adc
sub
jmp
inc
stos
test
xor
mov
cmc
and
ss
(bad)
(bad)
call
and
aas
dec
(bad)
test
dec
ret
iret
ss
jl
sub
or
mov
gs
sbb
dec
js
loopne
(bad)
(bad)
inc
das
push
dec
jmp
popf
adc
out
mov
lahf
cmp
(bad)
out
jp
scas
out
mov
mov
jmp
ins
push
or
(bad)
jmp
fs
fidivr
aad
call
shl
xor
dec
dec
iret
lahf
jmp
ret
nop
add
call
dec
push
gs
sub
repnz
cld
fidiv
cmp
(bad)
(bad)
dec
ins
sbb
xchg
add
and
jecxz
dec
sub
add
push
mov
add
and
repnz
shl
pop
clc
jo
and
sub
dec
inc
sbb
mov
cld
cmps
(bad)
(bad)
jmp
cs
test
out
xor
fld
push
hlt
jno
lods
xor
cmp
mov
iret
mov
adc
aaa
call
xchg
out
lock
dec
arpl
pop
add
add
fcomip
(bad)
jmp
fwait
pop
xchg
and
jne
stos
rol
in
or
leave
mov
int3
dec
adc
jmp
ja
dec
rcl
dec
test
test
or
(bad)
sub
addr16
(bad)
(bad)
push
add
cld
popa
adc
mov
mov
mov
pop
inc
clc
xor
into
cdq
dec
push
test
(bad)
inc
int
mov
dec
and
lock
pop
jg
sbb
jp
dec
cs
sub
inc
xchg
movs
mov
xlat
mov
mov
inc
adc
mov
test
inc
loop
pop
dec
mov
cli
(bad)
push
(bad)
jno
(bad)
jl
inc
rcl
sbb
(bad)
push
pop
out
cmc
or
push
push
dec
shl
popf
shr
(bad)
jmp
pop
test
scas
das
jg
(bad)
push
lods
inc
ret
idiv
das
xor
loope
sahf
jb
dec
xor
push
pop
jg
(bad)
jmp
retf
repnz
jo
cmp
jbe
lods
popf
cmp
jecxz
sub
call
mov
lods
cs
out
daa
fadd
sub
add
(bad)
(bad)
(bad)
fist
bound
neg
mov
push
or
xchg
aas
add
add
or
and
inc
lea
(bad)
ret
add
sub
jo
test
sbb
jns
(bad)
call
adc
cwde
mov
jg
into
inc
mov
cld
cmp
add
cmps
mov
scas
aad
mov
xlat
ja
and
or
cdq
dec
jle
mov
fs
jle
jle
push
xchg
test
pusha
mov
add
(bad)
(bad)
(bad)
dec
mov
cmp
stos
xchg
or
ss
xchg
out
push
push
pushf
in
clc
pop
paddusw
xchg
test
and
(bad)
(bad)
(bad)
jmp
enter
xchg
stos
ret
lods
test
push
scas
mov
cmp
dec
lea
lds
retf
push
sub
cwde
or
pop
add
or
jmp
dec
xchg
ret
movs
in
sbb
call
fnstenv
jnp
xor
jmp
pop
(bad)
(bad)
(bad)
push
mov
sbb
lods
push
xchg
xchg
jne
xchg
popa
sbb
inc
shl
(bad)
fnstcw
lds
out
ds
movs
cmps
neg
sub
push
push
mov
push
pop
ja
pop
(bad)
(bad)
(bad)
out
loope
data16
or
xchg
es
repnz
push
sar
pop
hlt
call
fcomp
cmc
stc
and
cmp
mov
mov
adc
push
clc
aaa
mov
push
fistp
xor
push
test
loopne
adc
jg
inc
(bad)
(bad)
sbb
jmp
inc
cmp
mov
mov
jmp
push
add
cmp
sahf
jmp
and
push
cs
or
add
and
sub
div
loopne
(bad)
dec
xchg
pop
loopne
vminsd
xor
xchg
aam
adc
(bad)
dec
gs
mov
adc
xor
cmp
ja
(bad)
cmps
pop
mov
(bad)
(bad)
jmp
sub
(bad)
mov
mov
cli
adc
mov
sbb
dec
shl
mov
(bad)
mov
test
jbe
dec
sbb
inc
mov
mov
aam
(bad)
(bad)
jmp
adc
rcr
jbe
test
sub
retf
movs
sub
pop
(bad)
(bad)
(bad)
call
sub
popf
sub
(bad)
mov
cmps
les
fst
test
push
jmp
inc
cmp
sbb
imul
xor
add
adc
inc
into
jmp
jg
xor
mov
(bad)
mov
xchg
neg
aam
cmp
dec
shl
push
push
cld
jg
push
nop
jnp
mov
(bad)
(bad)
(bad)
(bad)
cmp
lods
sub
push
cmp
mov
test
inc
inc
loope
pop
sub
adc
adc
(bad)
(bad)
inc
pop
rol
cdq
mov
push
loop
enter
dec
or
in
fwait
cmp
jo
(bad)
(bad)
(bad)
call
pop
mov
or
dec
repnz
fisub
xor
test
jge
xor
(bad)
(bad)
push
inc
adc
mov
xchg
sub
test
retf
mov
cmps
adc
cli
pusha
sub
(bad)
(bad)
inc
mov
xlat
retf
add
adc
gs
inc
pushf
cmc
push
and
test
popf
push
(bad)
ror
repz
cmp
(bad)
test
js
jg
push
or
cmp
adc
xor
scas
add
imul
in
add
push
cs
ins
iret
xor
iret
xchg
jmp
inc
push
out
fistp
dec
(bad)
inc
jge
dec
xor
mov
push
fmulp
push
(bad)
mov
loopne
push
out
leave
xchg
sbb
dec
dec
pop
mov
vunpcklps
sub
popf
call
mov
dec
xor
xchg
jmp
jmp
scas
clc
sub
jnp
ins
push
mov
pusha
or
ins
sub
loopne
call
mov
mov
cwde
lock
add
jb
sub
cmp
(bad)
out
call
cwde
in
js
cli
cdq
pop
jnp
push
add
dec
cwde
call
(bad)
out
xchg
cmps
xchg
test
sbb
sti
(bad)
(bad)
(bad)
fbstp
mov
pop
sub
aam
mov
rol
add
adc
in
mov
imul
shl
mov
add
call
jmp
sub
xchg
out
jg
sub
jecxz
cmp
(bad)
(bad)
call
pop
lods
inc
popa
dec
call
ror
pop
sar
clc
popa
(bad)
(bad)
(bad)
push
mov
popf
loopne
cmp
push
jl
mov
pop
aaa
loope
loopne
nop
sti
fwait
lock
and
jb
pop
es
mov
scas
(bad)
mov
rcl
rol
inc
mov
or
mov
(bad)
(bad)
fild
sub
adc
adc
test
mov
pop
div
add
mov
and
stc
mov
mov
mov
or
mov
mov
shr
(bad)
(bad)
(bad)
push
push
inc
xor
xchg
lods
mov
clc
cmp
push
mov
sbb
mov
jmp
hlt
mov
push
pop
pop
idiv
mov
in
sbb
inc
jg
mov
mov
test
stos
mov
and
pop
dec
stos
in
(bad)
push
ret
aam
leave
or
and
aad
leave
and
mov
sub
and
jns
mov
jno
inc
mov
das
dec
or
adc
jp
mov
clc
cmps
clc
outs
push
mov
sub
out
xor
mov
dec
js
pop
xchg
ins
std
in
xchg
mov
ret
retf
mov
pop
into
adc
jmp
in
dec
jmp
scas
lock
jb
in
hlt
adc
(bad)
call
das
jg
jle
ins
popa
lds
push
(bad)
cmp
sti
sub
(bad)
call
dec
push
dec
pop
mov
loop
mov
mov
pop
sbb
jecxz
iret
add
(bad)
sbb
jp
outs
ret
pushf
dec
emms
adc
xchg
dec
inc
add
mov
out
cmp
das
sbb
(bad)
(bad)
(bad)
call
xor
pop
cmp
retf
fcom
or
adc
xchg
xor
ret
mov
mov
push
mov
adc
ins
dec
retf
mov
fdivr
add
icebp
inc
imul
addr16
imul
(bad)
(bad)
jg
out
xchg
jecxz
mov
mov
inc
xchg
out
mov
inc
mov
sub
in
pop
cmp
xchg
pop
(bad)
sahf
call
jg
lock
ja
(bad)
push
fidiv
jmp
aas
aas
mov
pop
mov
call
(bad)
int3
adc
adc
out
mov
jno
cld
int3
mov
or
retf
fidiv
jl
aas
(bad)
stc
inc
(bad)
(bad)
(bad)
(bad)
(bad)
fiadd
or
xor
fst
aad
push
xor
hlt
lods
enter
cmp
dec
sub
pusha
std
(bad)
cmp
jle
cmps
scas
lods
or
or
(bad)
(bad)
jg
jno
loopne
pop
(bad)
cdq
and
enter
push
sub
call
lock
and
push
push
ret
jbe
mov
cmp
retf
xchg
push
mov
(bad)
jle
sbb
ja
add
and
inc
in
inc
cmp
test
push
push
into
jno
dec
pop
(bad)
(bad)
(bad)
(bad)
out
(bad)
and
jmp
lods
add
lahf
jge
push
loopne
into
push
cmps
(bad)
(bad)
(bad)
jmp
aam
sub
(bad)
pop
js
int3
cld
push
or
arpl
and
loope
or
and
(bad)
(bad)
inc
sub
aam
(bad)
xlat
pop
mul
xchg
mov
fwait
dec
outs
add
add
pushf
mov
std
inc
mov
add
fisub
bound
ror
(bad)
(bad)
call
add
or
mov
jecxz
popa
dec
ds
call
(bad)
call
out
and
icebp
in
adc
lods
push
(bad)
and
fist
pop
retf
push
fs
(bad)
(bad)
(bad)
jmp
mov
mov
and
in
ins
retf
scas
ja
fsub
add
and
xchg
cmc
add
(bad)
(bad)
push
mov
or
stos
test
jno
fwait
mov
dec
push
or
(bad)
(bad)
jmp
push
stos
mov
adc
xchg
movs
dec
test
sahf
or
add
mov
rcl
(bad)
out
cli
call
or
shl
and
mov
nop
sub
push
push
inc
adc
(bad)
(bad)
(bad)
(bad)
cmp
push
imul
sub
or
dec
es
jmp
mov
je
add
xlat
(bad)
(bad)
(bad)
call
mov
je
dec
mov
jmp
adc
(bad)
mov
loopne
icebp
or
sbb
xchg
(bad)
mov
idiv
mov
xchg
inc
js
leave
ret
cmovae
out
mov
(bad)
(bad)
in
rol
bound
scas
jl
or
mov
les
outs
(bad)
(bad)
inc
inc
test
ins
adc
pop
dec
adc
cmps
mov
pop
test
and
out
push
(bad)
(bad)
jmp
cwde
push
ins
pop
cmp
ss
(bad)
xchg
stos
jne
dec
add
add
pusha
jg
clc
dec
jnp
test
(bad)
mov
out
pushf
pop
pop
pop
jle
loopne
(bad)
push
cmp
inc
ss
xor
xchg
inc
inc
and
data16
or
shr
and
xchg
cmp
sub
push
call
daa
sbb
xchg
sbb
jmp
rol
add
cvtdq2ps
or
push
mov
sub
xor
sbb
push
pushf
xchg
(bad)
(bad)
(bad)
inc
mov
push
and
push
stos
jmp
jmp
adc
add
push
mov
add
inc
ds
sbb
xor
dec
mov
in
popf
jmp
or
mov
aam
(bad)
imul
mov
dec
xchg
icebp
push
retw
fidivr
and
pop
loopne
sub
ficomp
adc
sar
(bad)
out
xchg
mov
pusha
ins
adc
idiv
in
mov
loopne
(bad)
call
inc
pop
cmp
pop
add
mov
arpl
dec
sbb
es
(bad)
dec
ins
out
shl
ins
sbb
jo
pop
dec
pop
xor
cmp
ret
inc
adc
mov
(bad)
(bad)
jmp
mov
adc
pop
sbb
xchg
(bad)
xchg
ins
mov
dec
imul
into
sbb
loop
dec
or
test
mov
mov
(bad)
jmp
dec
cwde
call
jmp
dec
adc
clc
hlt
jmp
cwde
(bad)
sbb
cmp
outs
push
gs
fldenv
cmps
push
xlat
mov
push
push
dec
jl
(bad)
outs
sbb
sbb
fidivr
hlt
cld
(bad)
(bad)
jmp
(bad)
sub
imul
inc
mov
dec
cmps
dec
add
fstp
jmp
call
sub
fsubr
lods
push
sub
call
jnp
(bad)
(bad)
(bad)
(bad)
mov
ret
pop
scas
cmp
inc
outs
ss
getsec
xor
inc
or
inc
sbb
imul
(bad)
mov
sar
push
xor
sub
sub
jno
popa
mov
cmp
sti
pop
add
xchg
push
test
sub
mov
add
and
or
jecxz
(bad)
(bad)
(bad)
jno
sti
fisubr
mov
or
pop
or
jo
xor
fcomip
mov
mov
pop
sbb
jge
loope
les
cs
(bad)
jg
fist
pop
pop
push
jg
mov
(bad)
fistp
and
out
mov
jbe
inc
jbe
aam
aad
inc
aaa
adc
cmps
test
(bad)
(bad)
inc
cmp
push
test
cmps
ds
cld
jmp
jl
fwait
outs
stc
cmps
xchg
pop
push
dec
imul
(bad)
(bad)
(bad)
dec
stos
imul
xchg
push
icebp
call
(bad)
repnz
jmp
cld
fs
rcl
dec
(bad)
call
push
mov
es
jmp
push
ror
xor
dec
test
mov
xchg
add
fs
cmp
pusha
cmc
ja
add
pop
cmps
pop
or
mov
mov
lock
sub
push
push
jge
mov
aad
xor
idiv
retf
or
mov
les
stc
int
std
jo
mov
leave
xor
aad
or
add
jmp
stos
ja
mov
cmp
sbb
outs
mov
sbb
movs
jg
(bad)
jmp
xchg
mov
xlat
mov
stos
in
jmp
mov
stos
cmps
scas
fidiv
int3
(bad)
stc
ja
cmp
scas
(bad)
jmp
mov
mov
or
fwait
add
mov
cwde
push
loopne
jmp
and
and
cli
call
(bad)
jmp
(bad)
aam
cmp
adc
push
enter
dec
jno
and
xchg
jno
(bad)
call
sahf
dec
dec
pop
xor
inc
or
jecxz
mov
and
pop
and
mov
aas
xor
adc
ret
shr
cwde
and
imul
push
mov
pop
mov
and
imul
pushf
imul
pusha
xchg
mov
or
or
xchg
(bad)
push
std
push
sub
adc
out
lahf
sbb
je
adc
popf
pop
xchg
xchg
inc
dec
loope
(bad)
(bad)
inc
out
inc
pop
cmp
test
jmp
inc
or
mov
and
and
xchg
mov
cld
(bad)
(bad)
inc
push
out
xchg
repnz
popa
in
or
and
xor
rcl
inc
shl
lea
call
add
cmp
sahf
jp
sahf
mov
add
dec
stc
push
cdq
retf
repnz
push
and
(bad)
jne
out
ja
(bad)
(bad)
call
movs
rol
mov
push
jl
js
or
loopne
fs
cmp
push
or
aam
inc
xchg
js
and
or
scas
shr
cli
push
cmp
mov
push
shl
pop
aaa
lods
lea
fild
dec
dec
push
clc
mov
inc
repz
dec
and
inc
push
pop
not
icebp
or
push
(bad)
fild
push
push
stos
push
mov
pop
test
and
(bad)
inc
mov
pop
xchg
mov
les
mov
test
add
or
or
sub
jae
aam
xchg
lahf
(bad)
sbb
jae
fld
fs
push
cmp
cs
mov
(bad)
inc
in
pop
sub
dec
stc
jb
data16
adc
xchg
jne
or
jbe
test
adc
(bad)
out
jmp
movs
inc
add
dec
lods
sbb
cld
push
pushf
ins
or
imul
(bad)
(bad)
call
mov
nop
dec
push
scas
test
loope
pusha
in
test
xlat
fdiv
jne
ficomp
jg
mul
cdq
sbb
jne
loopne
stc
outs
cmp
push
sbb
(bad)
(bad)
dec
and
out
pop
mov
inc
loop
dec
fs
and
push
adc
enter
call
int3
or
push
sbb
movs
test
adc
and
pop
and
ret
mov
call
xchg
clc
movs
adc
push
rcl
aam
mov
lods
ret
(bad)
call
je
ins
jmp
inc
xchg
jae
in
aas
cwde
pop
loopne
sub
(bad)
(bad)
dec
pop
(bad)
cli
sub
test
ret
lock
inc
adc
int3
jno
retf
mov
outs
(bad)
(bad)
(bad)
(bad)
jmp
xor
je
add
cmp
sub
stos
fnstenv
enter
retf
cmps
ret
(bad)
(bad)
out
cld
xchg
jp
xor
inc
test
lods
xchg
jmp
popa
test
sbb
pop
dec
jmp
pop
fiadd
mov
sbb
out
ds
inc
mov
mov
mov
mov
(bad)
lds
es
pcmpeqw
nop
xchg
inc
inc
adc
mov
call
scas
cdq
mov
(bad)
dec
cdq
ds
inc
imul
xchg
daa
pop
adc
rcl
jns
xor
(bad)
popa
data16
jg
shl
ret
xor
jge
fwait
inc
retf
push
shl
(bad)
call
fisubr
(bad)
xor
sub
shl
add
in
push
and
cld
(bad)
call
outs
dec
ja
lods
ja
popa
popa
lods
(bad)
test
sbb
test
adc
xor
(bad)
(bad)
(bad)
call
jp
jnp
pop
sub
(bad)
out
sbb
cmp
inc
std
pusha
add
(bad)
jg
cmps
(bad)
mov
inc
and
mov
jne
jmp
fwait
scas
ja
fisttp
mov
retf
(bad)
push
test
sbb
sub
retf
pusha
and
ret
lds
add
out
(bad)
(bad)
call
mov
repnz
fsubr
and
call
inc
push
int3
dec
ret
xor
stc
lahf
jnp
add
pop
addr16
lahf
lods
shl
sub
(bad)
inc
outs
cli
adc
in
mov
stos
add
mov
loope
mov
jnp
cmp
ins
pop
push
or
(bad)
loopne
cli
push
mov
test
mov
icebp
imul
push
(bad)
push
ss
inc
or
enter
jl
cld
or
jnp
test
and
dec
cli
(bad)
mov
dec
inc
aaa
add
out
sub
(bad)
(bad)
(bad)
dec
jbe
nop
sti
pop
pop
fnop
aad
cmps
sbb
in
xchg
test
movs
nop
inc
sbb
iret
dec
int
fbstp
es
(bad)
(bad)
jmp
mov
push
cmp
movs
scas
mov
in
fnstcw
mov
aad
aas
mov
jecxz
(bad)
(bad)
(bad)
dec
std
clc
(bad)
retf
cmps
div
pop
mov
or
mov
and
retf
adc
fwait
imul
and
inc
gs
ss
mov
mov
pushf
out
jecxz
arpl
clc
cs
aam
idiv
in
das
lods
loop
(bad)
mov
mov
hlt
ret
mov
mov
shl
mov
(bad)
jmp
int3
cmp
je
bsf
inc
iret
aas
jae
pop
(bad)
(bad)
(bad)
call
add
push
loope
mov
int
(bad)
cld
dec
xchg
call
dec
lock
xchg
sbb
xor
sbb
lahf
call
jne
(bad)
jmp
pop
push
aas
mul
call
jecxz
mov
jmp
test
jbe
(bad)
popf
addr16
jl
lds
jnp
aam
rcr
js
ja
jo
enter
dec
or
xor
adc
or
test
inc
or
jae
and
inc
lock
sbb
test
add
aaa
xor
call
(bad)
call
mov
inc
pusha
push
jp
in
ja
jmp
mov
lahf
inc
test
popf
cld
(bad)
(bad)
call
push
and
stc
or
add
iret
fsub
inc
inc
std
(bad)
(bad)
push
loopne
sub
mov
mov
xor
dec
pop
mov
ror
std
jae
cmps
pop
inc
jb
aad
sub
inc
pop
xchg
push
inc
adc
sub
(bad)
jmp
adc
jno
pop
out
lock
xchg
lods
inc
add
mov
dec
mov
mov
push
sar
pop
out
cs
push
jne
pop
(bad)
(bad)
(bad)
out
mov
clc
jnp
inc
and
pop
stos
mov
test
push
inc
mov
(bad)
(bad)
(bad)
jmp
and
fld
sub
shl
or
jae
dec
jb
mov
in
inc
sar
ror
out
sbb
aas
jmp
adc
out
outs
clc
(bad)
(bad)
aas
sub
cmp
imul
popa
imul
test
(bad)
dec
sbb
jo
stos
dec
push
adc
retf
adc
or
xor
mov
inc
pop
div
in
out
cs
neg
push
cmc
mov
xor
jno
je
(bad)
(bad)
dec
jb
jne
mov
mov
ja
lds
pop
add
cdq
push
dec
add
(bad)
(bad)
(bad)
fcmovb
nop
mov
fst
inc
enter
inc
push
int
sbb
cmps
das
cmp
(bad)
(bad)
inc
dec
lods
pop
and
sahf
out
pop
adc
in
mov
jle
popf
out
mov
shl
shr
daa
ins
fstp
xor
imul
xchg
clc
(bad)
(bad)
(bad)
push
out
push
mov
out
sahf
push
sahf
cmp
not
inc
ja
mov
mov
(bad)
jmp
fsubr
mov
mov
mov
inc
or
(bad)
(bad)
dec
sub
or
cmp
fcomip
jae
mov
stc
pop
test
pop
cmp
(bad)
(bad)
(bad)
inc
dec
gs
popa
dec
mov
sub
(bad)
(bad)
ins
cmp
xor
mov
and
add
dec
pop
mov
cld
loope
js
lods
pop
xor
sbb
dec
cmp
call
nop
imul
or
adc
push
aad
cdq
adc
(bad)
cmp
pop
mov
ins
lods
aaa
cmp
push
(bad)
inc
jp
movs
mov
xor
shl
rcr
cmp
or
jmp
sbb
dec
imul
xchg
iret
or
mov
int3
ja
fsubrp
lock
call
mov
jmp
dec
lea
adc
jne
(bad)
(bad)
fild
and
sbb
xor
or
jb
pop
(bad)
(bad)
(bad)
call
popa
inc
push
xchg
nop
and
cmp
test
outs
and
or
mov
jge
(bad)
call
sbb
push
dec
sub
js
ror
xchg
pop
movs
call
(bad)
mov
cwde
out
mov
aaa
dec
ja
mov
cwde
cmps
in
jle
sbb
aad
call
loopne
xor
add
inc
push
ins
adc
mov
bound
call
std
(bad)
jnp
xchg
fstp
sub
mov
into
pop
stos
or
jmp
cmp
push
outs
cmc
(bad)
fcomp
bound
aaa
sbb
out
(bad)
(bad)
(bad)
cmp
push
call
enter
cmp
push
(bad)
call
jl
in
or
cmp
and
dec
push
mov
adc
jmp
cmp
push
in
sub
retf
inc
and
imul
and
ror
push
adc
ror
dec
jmp
fidiv
mov
outs
adc
mov
adc
sbb
fs
jp
mov
inc
xor
mov
pop
add
mov
mov
(bad)
(bad)
cli
mov
xchg
mov
push
cmp
(bad)
out
pop
icebp
rcl
mov
icebp
cld
dec
repnz
pop
call
loop
loop
xor
ret
(bad)
(bad)
(bad)
jmp
push
sub
es
adc
int3
out
mov
icebp
aas
test
jmp
mov
(bad)
(bad)
mov
inc
push
or
jo
jmp
mov
hlt
iret
retf
(bad)
dec
dec
dec
dec
test
movs
pop
xor
jmp
loopne
jb
jmp
call
sbb
sub
test
mov
call
push
fsubr
dec
fild
(bad)
call
sub
sub
rol
ror
dec
(bad)
(bad)
jmp
lock
loope
(bad)
out
imul
iret
ds
push
add
jl
adc
mov
outs
(bad)
(bad)
(bad)
(bad)
in
call
leave
jecxz
fidivr
jmp
or
adc
fadd
(bad)
(bad)
(bad)
(bad)
cmp
setge
(bad)
idiv
jbe
aad
(bad)
in
jecxz
lods
pop
cmps
mov
aam
(bad)
(bad)
fcomip
add
cmp
mov
add
rcr
test
aam
ja
sub
int3
jg
sub
(bad)
(bad)
(bad)
jmp
inc
pop
imul
sub
outs
dec
test
jb
lods
push
cdq
sub
(bad)
jmp
sbb
push
mov
scas
clc
out
xor
(bad)
(bad)
jg
jmp
idiv
ret
sbb
or
push
or
retf
sub
fcomp
ss
add
ss
add
mul
inc
adc
sub
mov
inc
add
(bad)
jecxz
push
mov
repz
cld
dec
dec
out
and
out
mov
mov
mov
mov
adc
std
(bad)
(bad)
call
cmp
pop
adc
or
(bad)
push
leave
mov
jae
sti
sub
(bad)
mov
push
and
shl
add
sub
and
inc
(bad)
call
imul
pop
push
jnp
leave
xchg
retf
fsubr
into
jmp
sar
retf
pop
fs
adc
add
sbb
xor
clc
inc
mov
xor
push
mov
gs
jmp
shr
or
(bad)
(bad)
jmp
cld
shl
test
aaa
mov
push
mov
add
xor
or
dec
call
xor
mov
stc
mov
pushf
and
cmps
je
nop
pop
(bad)
addr16
call
loope
jne
pop
adc
lock
cwde
test
push
(bad)
fisttp
hlt
push
inc
call
fisttp
mov
das
cli
inc
shr
ss
mov
imul
jns
xor
fsub
addr16
in
sub
push
push
or
das
ret
arpl
sub
out
lods
jae
xchg
jne
mov
daa
jmp
sbb
not
and
(bad)
call
loopne
lea
sbb
inc
nop
sub
push
cmp
(bad)
(bad)
mov
adc
and
push
or
add
in
ins
ja
mov
bound
and
test
jg
xor
jmp
xchg
call
ins
xchg
fild
call
cld
bound
dec
jecxz
mov
mov
lahf
pop
jle
imul
xchg
(bad)
jmp
add
inc
jg
into
mov
test
cmc
test
(bad)
ins
push
pop
mov
sti
shl
loopne
jp
push
retf
jbe
pop
test
cmp
add
jmp
dec
inc
daa
sub
cdq
and
jmp
sub
and
ror
push
in
mov
loop
lock
call
shl
sub
push
cmp
clc
sbb
push
cli
sbb
call
xchg
int3
or
jge
and
or
test
idiv
mov
das
sub
(bad)
out
pop
jmp
(bad)
repz
setg
test
inc
mov
fld
scas
xchg
inc
leave
and
and
out
xor
in
xlat
idiv
das
sar
push
lods
xchg
ins
jp
sbb
movs
shrd
xor
sbb
(bad)
(bad)
in
pop
out
pop
jae
jo
arpl
or
movs
xor
dec
xchg
sub
pop
test
dec
int
jl
divps
cli
cld
ja
fstp
ud2
(bad)
(bad)
jmp
shr
or
(bad)
sbb
add
push
dec
cli
mov
jns
data16
or
or
adc
ja
(bad)
(bad)
(bad)
(bad)
in
mov
movnti
mov
xchg
sbb
(bad)
mov
cmp
gs
inc
jae
test
jmp
pop
xor
inc
pop
es
sbb
cmc
xor
pop
jbe
cmc
js
pop
push
or
xchg
(bad)
(bad)
push
or
push
ret
cmp
mov
cvtpi2ps
(bad)
(bad)
mov
sti
retf
pop
fcom
xor
xlat
jne
(bad)
out
jo
(bad)
pop
test
xchg
push
shl
(bad)
push
addr16
mov
sub
push
sbb
repz
or
mov
xchg
aad
(bad)
call
out
imul
lock
fnsave
sbb
cwde
sub
popa
mov
(bad)
call
mov
dec
push
mov
loop
pusha
cmp
sbb
add
(bad)
(bad)
inc
ret
or
ret
jns
xor
cmps
in
mov
iret
leave
(bad)
aad
mov
jmp
jmp
(bad)
mov
sub
(bad)
(bad)
mov
xor
jl
xchg
push
pop
mov
loope
scas
icebp
imul
(bad)
iret
popf
jae
(bad)
(bad)
call
out
xchg
out
push
cmc
sub
call
or
or
cmp
cmc
(bad)
(bad)
in
cmps
lahf
call
icebp
arpl
shl
imul
das
jge
jg
call
int
cli
icebp
stos
mov
out
(bad)
adc
movs
in
repz
and
jg
mov
(bad)
sti
xor
rcl
adc
jg
call
ror
test
sub
(bad)
jmp
fnstenv
ror
repz
rol
xor
jbe
push
(bad)
(bad)
(bad)
jmp
add
xor
mov
adc
xchg
mov
movs
aas
shl
(bad)
rol
add
dec
lods
or
aad
repz
pop
mov
(bad)
jmp
sub
xor
cmp
ror
fidiv
lods
cmp
shl
mov
movs
ins
jmp
mov
mov
jmp
retf
adc
mov
mov
xchg
pop
hlt
call
mov
sub
popa
mov
xlat
hlt
ins
xchg
jne
cmp
fcomi
cdq
mov
pushf
cmp
scas
fidiv
adc
(bad)
(bad)
call
int3
leave
xchg
icebp
mov
mov
pop
sub
inc
xor
inc
pusha
out
adc
and
cmp
les
out
fcomi
pop
mov
out
(bad)
repnz
(bad)
(bad)
inc
sahf
cmp
inc
pop
xor
mov
xchg
imul
(bad)
sti
fwait
mov
push
lods
lahf
sbb
cmp
(bad)
out
clc
push
inc
jns
and
push
sub
dec
outs
add
xor
xchg
push
push
gs
(bad)
ficomp
les
add
(bad)
(bad)
(bad)
jmp
stc
adc
push
mov
es
js
mov
shl
ret
movs
jno
and
jmp
mov
add
and
(bad)
(bad)
(bad)
push
xor
push
fcomp
mov
pusha
imul
jnp
ins
cmp
shr
cwde
icebp
mov
xchg
(bad)
(bad)
inc
push
mov
dec
jmp
inc
mov
fidiv
out
(bad)
cmp
or
inc
js
mov
mov
jbe
mov
les
and
(bad)
call
and
mov
or
lods
xor
(bad)
fs
sub
pop
inc
sub
push
push
mov
mov
sbb
or
sbb
dec
sbb
sbb
out
nop
or
cmp
loop
sub
mov
aaa
or
(bad)
(bad)
jmp
inc
std
call
xchg
jo
jmp
sbb
mov
(bad)
jmp
(bad)
cmps
sub
xchg
inc
popa
xor
push
out
add
pop
and
(bad)
(bad)
call
cwde
mov
(bad)
dec
and
xchg
add
test
pop
xor
sbb
nop
sbb
or
push
sub
mov
rol
xchg
imul
cmps
pusha
movs
dec
popa
push
mov
cld
ds
dec
inc
jg
movs
call
jmp
sbb
pop
inc
jo
repnz
adc
sbb
sub
xor
(bad)
(bad)
(bad)
fist
mov
fsub
xchg
into
sahf
push
or
pusha
into
add
scas
or
(bad)
(bad)
jmp
jno
call
fadd
jp
adc
retf
leave
in
xchg
popa
mov
inc
fist
or
push
xchg
push
pop
push
xor
jmp
enter
(bad)
(bad)
(bad)
dec
mov
mov
ins
nop
mov
cmp
mov
pop
aad
dec
inc
scas
jnp
inc
aad
(bad)
ficomp
fnsave
mov
call
xlat
cmps
mov
(bad)
push
adc
jne
mov
dec
mov
or
pop
mov
push
jmp
push
aas
pop
imul
imul
call
cmp
addr16
outs
clc
(bad)
push
lods
sub
leave
mov
sub
add
sbb
or
(bad)
mov
xchg
pop
sub
add
sbb
gs
sub
mov
dec
(bad)
push
adc
das
nop
or
int3
aam
adc
das
stos
movs
adc
xchg
hlt
(bad)
call
pushf
dec
or
icebp
sub
cs
add
or
dec
aas
hlt
cmp
mov
jb
(bad)
mov
js
sbb
(bad)
fistp
stc
fimul
das
sahf
movs
mov
setge
rol
pop
ja
sar
add
fcomp
pop
mov
shl
sub
aaa
or
in
aaa
or
loope
sbb
(bad)
(bad)
(bad)
dec
retf
push
jmp
(bad)
and
mov
ret
xor
sbb
cmovne
and
fadd
mov
loop
pop
pop
sbb
ja
xor
rcr
jge
(bad)
(bad)
(bad)
call
shr
(bad)
cmps
or
in
add
ret
rol
xor
(bad)
(bad)
push
sub
cmp
jl
mov
mov
cli
mov
jne
push
(bad)
(bad)
(bad)
call
adc
lods
clc
popa
idiv
repnz
stc
loop
enter
test
daa
push
pop
(bad)
fld
(bad)
call
mov
push
sub
jl
jne
(bad)
dec
ret
inc
push
scas
test
lock
jg
(bad)
push
mov
(bad)
sbb
mov
sbb
call
mov
imul
xor
call
movs
cmp
loopne
inc
xor
cmp
dec
mov
xacquire
fdivr
(bad)
(bad)
push
sub
mov
cmp
cmp
xor
inc
xchg
clc
push
repnz
push
jmp
cld
and
js
sub
push
std
adc
xlat
or
pop
sbb
cmp
adc
cmps
shl
(bad)
(bad)
jmp
jmp
push
and
dec
xchg
mov
mov
shl
(bad)
(bad)
(bad)
jmp
inc
cmc
popf
addr16
xor
fcomip
fcomip
fninit
aaa
(bad)
(bad)
ficom
xchg
(bad)
cld
repnz
inc
stc
mov
xchg
or
xchg
outs
fnstsw
enter
pop
jmp
sub
mov
mov
sbb
jle
repz
pushf
or
jmp
(bad)
sbb
and
int
(bad)
(bad)
jg
inc
or
cld
or
push
dec
mov
or
adc
add
hlt
push
sub
loopne
jns
xchg
lds
imul
(bad)
adc
fsubp
xchg
cmps
icebp
pop
cli
mov
inc
(bad)
(bad)
jmp
fdecstp
cmps
(bad)
int3
adc
or
push
mov
or
push
inc
xchg
xchg
(bad)
(bad)
(bad)
inc
je
jge
lds
cmp
or
loopne
pusha
arpl
xor
jnp
(bad)
(bad)
test
jmp
lock
std
and
mov
rcl
inc
mov
or
pop
sbb
(bad)
mov
push
sbb
mov
add
pop
arpl
(bad)
jo
int
add
call
xchg
les
mov
outs
cmps
std
and
mov
fdiv
xor
clc
sub
mov
or
in
out
pop
pop
jecxz
fdivp
and
mov
popa
call
call
jno
and
cmp
mov
outs
aad
cmp
(bad)
(bad)
jmp
jmp
add
das
or
pop
cmp
xchg
sbb
sbb
(bad)
dec
mov
cmps
mov
sbb
pop
les
gs
bound
dec
jno
imul
(bad)
push
xor
inc
loop
push
mov
movs
pop
loop
mov
js
ret
lods
push
and
bound
scas
(bad)
(bad)
(bad)
call
nop
xchg
fdiv
sub
mov
pop
pop
xchg
sub
(bad)
shl
loop
(bad)
jg
push
cmp
loope
cmp
mov
idiv
mov
scas
hlt
test
add
inc
push
cmps
xchg
push
push
(bad)
call
mov
aad
(bad)
call
pop
(bad)
cli
rol
(bad)
cld
(bad)
(bad)
jmp
fcomp
xlat
loope
(bad)
loop
jae
aam
(bad)
mov
xchg
shl
inc
xor
not
pop
cmp
xor
ret
cmp
js
sbb
call
ret
jno
mov
in
std
add
test
push
sub
int
sbb
jnp
(bad)
(bad)
push
xor
lock
add
loope
mov
jbe
adc
aam
add
(bad)
jmp
inc
and
cmp
adc
push
les
jne
or
pop
fimul
push
xor
cmp
mov
test
push
test
add
nop
retf
test
cmp
and
test
sub
(bad)
(bad)
jmp
pop
movs
dec
sar
xchg
lods
out
xchg
inc
or
mov
rol
sub
sub
(bad)
call
mov
aaa
je
dec
sbb
sahf
aad
mov
and
adc
ret
popa
pop
jo
inc
adc
in
lea
sbb
pop
sbb
ins
add
or
pop
nop
sub
xchg
scas
movs
mov
mov
jp
and
and
jmp
(bad)
out
mov
push
hlt
inc
les
push
sar
dec
sub
es
les
js
mov
jns
imul
(bad)
(bad)
call
(bad)
movs
lods
push
repnz
jne
sub
adc
xor
test
movs
pop
push
shr
aas
cld
mov
pop
jg
jg
out
icebp
fisubr
(bad)
cmps
mov
pop
cmc
call
mov
in
lods
inc
jecxz
fmul
(bad)
aaa
push
push
cdq
sub
mov
jmp
pop
mov
xor
xchg
dec
scas
jp
mov
push
nop
lahf
ret
xlat
xchg
pop
popa
cmc
(bad)
mov
push
adc
add
(bad)
(bad)
(bad)
(bad)
js
push
mov
pop
sub
mov
push
stos
lock
mov
jge
sub
in
out
cli
jmp
push
cld
adc
out
or
sbb
(bad)
(bad)
(bad)
(bad)
mov
cwde
cmp
mov
call
aaa
push
fdivr
sub
pop
sub
iret
inc
test
jae
je
out
fdiv
cld
out
pop
dec
mov
(bad)
or
(bad)
jmp
ins
sub
scas
retf
add
cmp
pop
mov
sets
sbb
call
repz
mov
(bad)
xor
xlat
idiv
in
(bad)
(bad)
call
add
jecxz
xadd
jae
ret
push
cmp
xchg
and
add
cs
sbb
ret
xchg
xchg
sub
into
out
mov
jmp
xchg
ins
rol
hlt
inc
sub
jnp
jne
cmc
test
lock
jno
(bad)
(bad)
(bad)
call
stos
in
jecxz
call
cdq
xor
jl
sbb
jns
fdiv
inc
stos
pop
sbb
inc
imul
sbb
jmp
push
fdivr
iret
retf
mov
sub
mov
pop
lods
and
test
aaa
inc
jmp
pop
pop
lds
and
xchg
lock
or
or
lods
loopne
pop
lea
jg
lgs
(bad)
lods
push
pop
jo
lock
dec
iret
fstp
mov
sahf
shr
push
pop
clc
call
fldz
fs
mov
data16
(bad)
(bad)
(bad)
mov
jno
test
scas
fistp
cmp
push
leave
repz
pop
cmp
push
ffreep
xor
inc
xor
jo
push
dec
(bad)
jg
idiv
in
pop
add
ret
jns
ror
xchg
lods
js
jg
or
cmp
call
(bad)
dec
inc
adc
lock
in
and
push
push
push
in
aad
jle
adc
jg
sar
jl
fdivr
xor
inc
(bad)
(bad)
inc
mov
cmp
lahf
jge
inc
add
jb
and
sbb
cli
mov
mov
sbb
dec
ror
jmp
popa
or
jmp
popa
jle
sti
mov
xchg
jno
adc
mov
jg
adc
js
sbb
sub
xor
lds
(bad)
dec
mov
push
push
cmps
mov
pop
jp
xlat
lahf
cmp
sbb
(bad)
(bad)
push
xchg
dec
loope
addr16
fwait
xor
dec
pop
repz
add
loope
and
adc
fcos
(bad)
(bad)
(bad)
mov
jno
imul
adc
xchg
cmp
adc
retf
push
(bad)
(bad)
(bad)
cmp
xor
cmp
add
leave
pop
js
out
mov
fidiv
xchg
mov
scas
shr
test
fsub
xor
rol
sahf
xchg
or
add
ins
push
std
std
out
mov
xchg
aas
clc
outs
or
mov
mov
popf
pop
pop
pop
sbb
fwait
(bad)
(bad)
jmp
out
pop
cmps
(bad)
fdiv
or
sbb
call
push
pop
(bad)
sbb
add
add
jmp
mov
sbb
mov
xor
(bad)
(bad)
call
shl
pop
cdq
pop
jns
sbb
cmp
or
loopne
adc
jae
(bad)
(bad)
inc
sub
in
leave
icebp
sbb
xor
and
js
sti
jl
fbld
cld
dec
mov
outs
and
or
cdq
shr
cmp
push
push
or
and
push
sbb
mov
sbb
and
test
xchg
(bad)
call
cmp
in
shl
push
mov
ins
pop
fsubr
and
daa
dec
cmp
outs
mov
dec
adc
add
xor
inc
cmp
dec
and
(bad)
dec
pop
arpl
or
or
in
movs
icebp
xlat
pop
(bad)
(bad)
jmp
jge
ror
xchg
rol
pop
xchg
int
aam
cmps
lahf
in
push
(bad)
(bad)
(bad)
jmp
test
lahf
addr16
xchg
ret
movs
xchg
pop
and
pop
repnz
and
or
mov
aad
sub
(bad)
jmp
cmp
dec
mov
test
push
mov
pop
hlt
mov
outs
loopne
xchg
pop
mov
dec
push
fsubr
inc
xor
(bad)
(bad)
fcomip
(bad)
jl
push
sbb
pop
cmps
test
xchg
and
leave
and
(bad)
jmp
push
push
cmp
sbb
ficom
jne
fiadd
scas
dec
sbb
cmp
push
sub
(bad)
push
outs
mov
ds
lds
adc
je
repz
inc
pop
arpl
(bad)
(bad)
call
shl
test
mov
jle
repnz
int3
add
jb
fild
xor
mov
push
test
lock
(bad)
(bad)
mov
jno
jmp
leave
push
test
and
lea
sbb
(bad)
fnstcw
push
dec
mov
je
cli
xlat
shl
dec
out
jmp
ja
sub
cmp
xchg
shl
(bad)
(bad)
inc
push
add
ret
xor
outs
add
test
add
(bad)
(bad)
dec
test
sbb
enter
call
fistp
inc
cmp
cmp
(bad)
(bad)
(bad)
push
data16
into
jg
mov
xchg
mov
out
repz
adc
sbb
xchg
(bad)
(bad)
(bad)
call
les
sub
sbb
in
jo
outs
loope
mov
gs
xchg
(bad)
sar
(bad)
inc
and
in
stos
loop
std
mov
mov
push
mov
or
(bad)
call
nop
mov
jno
pop
dec
xchg
push
sbb
popa
call
idiv
fbstp
imul
addr16
mov
fwait
mov
xchg
xchg
dec
and
dec
push
nop
data16
leave
jmp
cli
mov
repz
das
test
pop
ins
mov
inc
inc
dec
stos
iret
sbb
cmp
dec
mov
(bad)
(bad)
out
mov
mov
sti
xchg
pop
outs
das
adc
mov
call
enter
mov
fcom
cmp
mov
add
js
jmp
out
sub
int3
adc
cli
inc
lods
mov
subps
not
lock
cmc
xchg
imul
push
jle
icebp
mov
call
or
(bad)
lds
mov
mov
push
aaa
(bad)
dec
xchg
stc
stc
inc
xchg
mov
or
pop
aaa
(bad)
(bad)
(bad)
dec
cwde
outs
push
ret
jae
jmp
cmp
jb
enterw
mov
push
mov
dec
add
dec
std
mov
mov
in
sub
(bad)
(bad)
jmp
rol
mov
mov
std
rcl
stos
jmp
(bad)
dec
in
push
adc
(bad)
(bad)
inc
sub
fcmovu
pusha
nop
add
xchg
or
mov
mov
(bad)
rol
mov
ins
and
cmp
adc
js
xchg
ins
add
call
or
mov
fsub
ja
xor
pop
and
call
and
dec
mov
fsub
(bad)
(bad)
cmp
cli
mov
pop
aas
cmp
pop
mov
(bad)
(bad)
(bad)
jg
cmps
pop
arpl
cmp
loop
nop
or
rol
pop
or
inc
fsubr
inc
repz
ret
jmp
sbb
or
(bad)
jg
sahf
test
add
pop
cli
mov
jne
fs
into
mov
inc
xchg
mov
into
mov
mov
(bad)
(bad)
(bad)
jg
(bad)
data16
or
xor
jo
pop
cmp
adc
stos
cmps
fsubr
push
and
xor
loopne
or
inc
push
xchg
dec
sti
inc
movntps
xchg
cmp
xor
pusha
retf
addr16
imul
(bad)
dec
inc
jmp
push
ror
test
or
pop
jl
xlat
push
mov
aas
xor
(bad)
(bad)
(bad)
jmp
sti
fiadd
mov
jle
add
xchg
push
or
maxps
jle
stos
(bad)
(bad)
(bad)
mov
outs
jmp
mov
pop
loope
sbb
lahf
cmp
mov
std
(bad)
inc
xlat
xchg
xchg
dec
rcl
cmc
dec
lahf
call
icebp
mov
sbb
cld
fadd
ror
in
add
(bad)
(bad)
(bad)
jle
arpl
movs
sub
mov
xchg
in
cdq
fistp
or
(bad)
nop
clc
(bad)
mov
test
and
loope
jb
xchg
mov
(bad)
mov
ds
inc
loop
xchg
movs
push
cmp
outs
fsub
rcl
xchg
(bad)
jmp
adc
push
sub
idiv
sub
(bad)
(bad)
(bad)
aas
(bad)
imul
sbb
pop
iret
dec
fidivr
hlt
int
outs
jnp
das
jns
and
loope
mov
mov
in
mov
mov
aas
push
mov
xor
ret
call
cmc
out
pop
mov
mov
(bad)
(bad)
(bad)
inc
fwait
pop
retf
js
test
adc
pop
out
jl
or
repz
into
mov
or
(bad)
(bad)
inc
sar
imul
rol
lods
cmp
ja
push
imul
(bad)
(bad)
(bad)
call
rol
pusha
popa
jno
push
je
mov
idiv
sub
fsub
push
sub
(bad)
(bad)
call
mov
fmul
cdq
push
sub
adc
pop
mov
push
pop
stc
rcr
adc
call
(bad)
call
adc
pop
and
mov
push
pop
loope
push
sub
sub
nop
jle
cmps
call
call
ins
mov
test
scas
mov
sbb
test
or
sub
test
(bad)
cmp
lods
movs
pop
adc
add
mov
adc
add
setae
ret
in
jnp
test
lahf
sti
ja
(bad)
cmp
ins
push
retf
mov
in
js
popa
dec
mov
mov
mov
jg
ror
mov
out
jp
push
sbb
(bad)
jmp
enter
push
stos
cdq
test
inc
jmp
mov
(bad)
(bad)
mov
inc
mov
movs
stc
and
adc
into
fcom
add
adc
pop
sub
(bad)
(bad)
inc
shr
lea
adc
push
push
push
jp
and
iret
enter
adc
cmps
adc
inc
nop
imul
push
inc
xlat
int3
dec
xchg
cmp
fcomip
jg
pop
jl
arpl
mov
sahf
inc
shl
mov
jl
(bad)
(bad)
(bad)
jmp
and
retf
add
lods
push
out
adc
dec
pusha
out
push
dec
clc
fwait
or
sub
nop
(bad)
jg
call
xor
out
fs
fs
dec
sar
xor
sub
dec
sar
inc
aad
lock
(bad)
(bad)
and
inc
xchg
dec
ins
jp
dec
cld
jg
sub
and
ja
xchg
mov
jg
lods
pop
xchg
fwait
pop
shl
and
(bad)
jmp
xor
dec
(bad)
fild
shr
jns
(bad)
repz
mov
scas
clc
enter
jmp
mov
cs
clc
inc
jb
jns
outs
(bad)
(bad)
(bad)
push
in
lea
add
dec
test
inc
cs
mov
xor
outs
xchg
mov
pop
ins
cld
call
(bad)
inc
stos
adc
push
test
sbb
pop
cmps
pop
repnz
(bad)
(bad)
(bad)
fisttp
adc
pop
movs
ins
and
mov
pop
mov
div
(bad)
(bad)
in
bound
mov
(bad)
push
sar
mov
pushf
jmp
loope
push
sub
out
aaa
out
mov
call
in
mov
cmps
dec
xor
dec
mov
popa
add
mov
shr
(bad)
(bad)
inc
xor
push
mov
test
mov
cs
inc
xor
xor
sub
inc
xchg
mov
in
loopne
mov
rol
gs
xchg
cmp
(bad)
(bad)
push
(bad)
sub
mov
pop
cmp
fistp
out
mov
fsin
aaa
pop
jl
call
das
fidivr
jne
cmps
fcomi
mov
cli
cli
sbb
fwait
neg
jl
ss
call
jb
(bad)
repnz
sub
leave
mov
iret
cmp
push
mov
mov
stos
gs
(bad)
call
and
leave
jecxz
xchg
stos
cmp
push
fsubr
or
(bad)
(bad)
(bad)
call
sbb
mov
loope
push
xchg
or
or
xchg
or
sbb
mov
std
lods
(bad)
(bad)
jmp
mov
(bad)
clc
(bad)
inc
sub
cmp
xor
xor
cmp
sbb
outs
xor
(bad)
(bad)
mov
sbb
push
pop
add
cmp
jmp
(bad)
(bad)
dec
std
xor
ds
xor
fwait
test
mov
add
(bad)
(bad)
(bad)
push
or
rcr
popa
out
enter
fwait
ret
cmp
inc
and
jne
aam
inc
jmp
pop
sbb
(bad)
push
mov
adc
stos
push
and
cmovae
(bad)
(bad)
mov
retf
xchg
out
pop
fdivr
loopne
scas
gs
fisub
in
push
rcr
mov
mov
pop
aaa
sub
mov
fdiv
dec
mov
adc
icebp
mov
adc
lahf
(bad)
(bad)
(bad)
call
ja
mov
outs
xor
push
xchg
imul
lods
sbb
call
(bad)
xor
mov
jb
retf
sbb
pop
xchg
and
arpl
(bad)
(bad)
(bad)
mov
mov
adc
push
mov
fmul
mov
push
jecxz
adc
(bad)
(bad)
inc
mov
dec
push
into
jmp
enter
shl
mov
gs
and
movs
(bad)
out
pop
loop
test
xchg
daa
leave
sahf
xor
scas
(bad)
jecxz
mov
lock
call
pop
vpextrw
lds
pop
popf
jg
inc
ret
mov
(bad)
dec
mov
or
enter
mov
ret
pop
jmp
int3
mov
data16
dec
(bad)
mov
into
inc
or
sub
mov
in
and
mov
int3
(bad)
(bad)
(bad)
dec
iret
sub
dec
push
mov
adc
cmp
and
jne
add
pop
scas
(bad)
(bad)
(bad)
jmp
arpl
icebp
jno
pop
jl
outs
jmp
mov
dec
xchg
or
xlat
fld
jmp
xchg
sbb
repnz
call
jge
rol
push
(bad)
(bad)
(bad)
mov
ss
outs
popf
jge
das
lds
xchg
stos
sbb
in
or
cdq
(bad)
(bad)
(bad)
(bad)
cmp
les
xor
int
fidivr
xchg
push
ret
fistp
cmp
pop
retf
mov
jo
xchg
out
aas
std
arpl
inc
push
(bad)
(bad)
(bad)
call
js
cmps
out
inc
fcomp
stos
loopne
xchg
pop
fstp
scas
mov
sub
(bad)
inc
pop
mov
fisttp
test
ins
pop
pop
(bad)
inc
jno
adc
(bad)
jmp
into
inc
add
icebp
xchg
loopne
adc
retf
mov
cmp
(bad)
jg
daa
xor
ds
mov
or
mov
or
repz
dec
sbb
and
(bad)
(bad)
call
pop
in
inc
dec
ror
mov
jno
sub
pusha
jmp
lahf
sub
(bad)
(bad)
(bad)
mov
sub
inc
jmp
mov
popa
shl
adc
push
daa
(bad)
(bad)
(bad)
jmp
pop
sti
mov
imul
mov
scas
or
(bad)
(bad)
(bad)
call
jnp
fidivr
mov
jle
jmp
and
fadd
pop
cdq
lock
(bad)
jg
jle
adc
ins
sbb
dec
and
mov
add
pusha
dec
gs
cdq
repz
xchg
call
(bad)
(bad)
push
inc
inc
pop
in
jns
jae
lahf
ins
gs
cmp
jo
xchg
xchg
call
(bad)
call
(bad)
(bad)
cmp
dec
add
test
(bad)
pop
and
sbb
ds
int
pop
xor
push
aad
cmp
cld
jmp
jle
jo
mov
les
dec
inc
pop
bswap
jo
(bad)
jmp
and
test
push
std
add
jecxz
mov
pushf
mov
lea
(bad)
inc
shl
xchg
loop
popf
push
adc
cmp
lods
mov
cmp
push
(bad)
(bad)
(bad)
inc
shl
push
mov
or
cmp
sub
adc
and
dec
push
(bad)
fcomip
call
int3
rcr
pop
sub
pop
mov
lock
push
(bad)
(bad)
ffree
lock
mov
arpl
bound
add
or
rcl
push
(bad)
(bad)
jmp
shr
test
loopne
sub
jns
sbb
adc
xor
(bad)
(bad)
inc
icebp
and
loopne
xchg
sbb
test
sub
xchg
mov
sbb
pop
inc
(bad)
(bad)
(bad)
(bad)
ficom
inc
xchg
inc
stos
and
in
or
cli
pop
fst
xchg
pusha
lea
movs
mov
(bad)
fdivr
mov
ja
sub
mov
jp
push
ret
shr
push
ss
(bad)
(bad)
(bad)
jmp
inc
arpl
dec
cmps
jp
popf
inc
jns
mov
mov
sbb
mov
xor
jmp
sbb
(bad)
stc
sbb
push
pop
and
jg
jno
push
(bad)
(bad)
(bad)
mov
fdecstp
(bad)
jg
sahf
dec
fwait
fwait
jae
jp
jge
clc
fld
mov
push
or
outs
mov
pop
clc
cdq
aaa
(bad)
(bad)
(bad)
call
imul
int
mul
pop
jne
xchg
aas
sti
in
dec
popf
pop
fidivr
rcl
cmc
test
(bad)
jnp
cld
ret
sbb
push
or
cmp
in
sbb
push
mov
aad
dec
sar
dec
xchg
or
mov
or
das
sbb
xchg
xchg
mov
add
ins
bnd
mov
pop
(bad)
(bad)
(bad)
jmp
ret
int
mov
enter
pop
clc
mov
push
sbb
sbb
test
jmp
cld
or
(bad)
shl
and
loop
dec
pop
xor
(bad)
(bad)
inc
lock
setae
(bad)
and
sub
sbb
xor
cmc
leave
inc
mov
sbb
idiv
(bad)
(bad)
mov
mov
mov
and
sar
pop
outs
(bad)
(bad)
(bad)
push
pop
jbe
pop
scas
(bad)
push
sahf
(bad)
push
ins
in
pop
mov
hlt
dec
xchg
adc
cmp
ror
push
or
push
pop
dec
dec
and
pusha
push
push
jmp
pop
xchg
(bad)
cmc
pop
ret
jbe
or
mov
mov
repz
pop
cld
or
xchg
pop
fistp
jno
or
dec
(bad)
call
out
and
add
popa
and
inc
xor
sub
ret
imul
add
push
jns
xchg
cdq
mov
mov
aam
je
(bad)
(bad)
(bad)
call
and
pop
pop
xchg
or
or
setno
stos
aad
pop
std
aas
push
pop
cmp
add
inc
std
push
jg
mov
cs
jl
repz
pop
mov
scas
les
mov
(bad)
xor
or
dec
shr
jbe
jae
(bad)
mov
xchg
xchg
or
xlat
xor
popf
xor
loop
adc
(bad)
(bad)
(bad)
jnp
inc
mov
xlat
dec
lock
mov
xchg
sbb
push
pusha
out
adc
or
pop
popa
fld
mov
(bad)
(bad)
(bad)
(bad)
mov
lahf
js
lock
add
movs
stos
enter
leave
sub
retf
inc
loopne
push
outs
xchg
dec
fmul
inc
mov
(bad)
(bad)
dec
cmp
in
mov
int3
in
or
fadd
pop
push
mov
cmp
dec
js
push
stc
sar
call
mov
mov
inc
jnp
jae
sub
adc
out
inc
sub
push
cmps
bound
lea
fist
jb
(bad)
jg
out
pop
fbstp
cmp
jl
das
pushf
cwde
(bad)
and
push
(bad)
(bad)
(bad)
call
cld
mov
jnp
aam
jge
xchg
push
xchg
jp
inc
push
loope
jmp
push
js
dec
les
jl
ret
lea
xchg
cli
or
xchg
push
lahf
ds
cwde
mov
(bad)
(bad)
dec
popa
call
sbb
shl
out
sbb
or
adc
mov
(bad)
(bad)
(bad)
inc
stos
dec
xchg
shr
loope
lods
or
int
pop
loop
mov
retf
ss
pop
jns
sub
cld
(bad)
(bad)
(bad)
call
cmp
sub
icebp
xchg
out
(bad)
pop
mov
shr
mov
je
retf
sub
pop
jecxz
add
test
hlt
lods
call
inc
call
jmp
js
dec
sahf
pop
gs
ret
fld
(bad)
jmp
rcl
loop
into
push
out
cmpps
sbb
mov
repz
adc
dec
lea
adc
mov
stos
arpl
into
mov
cmps
mov
xor
adc
push
aam
mov
lock
(bad)
call
test
dec
mov
mov
movs
mov
stos
jnp
ret
jmp
pop
jb
mov
xor
adc
cs
(bad)
(bad)
(bad)
jmp
lock
jp
dec
(bad)
sub
mov
mov
test
dec
xchg
mov
(bad)
(bad)
push
adc
call
shl
sbb
ja
xor
add
repz
or
xchg
(bad)
sub
inc
aaa
add
and
(bad)
(bad)
(bad)
jg
pusha
mov
mov
lods
adc
push
sub
gs
sub
es
loop
les
(bad)
(bad)
jmp
adc
(bad)
addr16
fnstcw
daa
sub
aaa
add
shl
ins
add
(bad)
inc
mov
xchg
push
push
ret
dec
cmps
mov
cld
in
sar
lea
add
xchg
test
cli
(bad)
push
test
dec
xchg
cmp
sar
jns
mov
inc
and
cmps
push
aaa
mov
fsub
mov
nop
dec
pop
mov
xor
(bad)
(bad)
cmp
in
pop
or
and
sbb
and
les
add
(bad)
(bad)
jmp
pop
push
inc
aas
dec
scas
lahf
mov
jae
jle
enter
jle
stos
scas
rcr
daa
xchg
cmp
cli
(bad)
jmp
mov
sar
or
xor
sub
ror
addr16
xor
outs
mov
xor
add
mov
cli
pop
aas
test
mov
inc
and
jg
adc
sub
gs
xchg
push
xor
mov
das
mov
(bad)
dec
pusha
stos
and
mov
push
loop
cmps
xlat
and
jge
pop
adc
inc
repnz
shl
out
test
shr
adc
jp
cmp
sub
lock
jns
out
clc
stc
sti
mov
jno
sbb
jg
stc
repz
cli
push
(bad)
(bad)
arpl
repz
call
call
pop
call
or
dec
dec
into
popf
pop
cmp
std
(bad)
push
into
and
ror
xchg
or
mov
mov
mov
dec
jmp
(bad)
(bad)
jg
test
jge
nop
cmp
dec
cmps
mov
(bad)
call
mov
jge
stc
xchg
stos
sbb
jle
adc
pop
popa
stos
mov
mov
out
sbb
mov
ja
call
inc
call
inc
mov
adc
ror
jmp
sbb
ret
(bad)
(bad)
(bad)
jmp
imul
push
jo
vpcmov
cmp
popa
xchg
pop
xchg
loopne
(bad)
or
outs
(bad)
(bad)
(bad)
push
pop
mov
cld
ret
aad
inc
or
stos
and
push
(bad)
push
mov
mov
imul
push
inc
mov
xchg
dec
lock
ss
fdivr
lods
xor
ret
mov
dec
mov
cmps
scas
jnp
std
(bad)
jmp
mov
les
bound
xchg
sti
jge
inc
adc
call
repz
movs
dec
mov
xor
mov
or
(bad)
(bad)
inc
and
sbb
or
cs
outs
mov
or
fdiv
dec
cwde
mov
dec
mov
(bad)
fist
push
adc
mov
adc
inc
loope
call
fsubr
or
mov
loopne
jg
inc
imul
mov
push
imul
sbb
inc
(bad)
dec
push
outs
adc
dec
push
movs
pop
mov
out
leave
inc
jg
(bad)
(bad)
(bad)
call
jp
jns
sti
mov
mov
jmp
stos
jg
jge
(bad)
stc
jecxz
(bad)
loopne
(bad)
(bad)
(bad)
jnp
pop
jle
dec
(bad)
retf
jmp
pop
jl
loope
mov
fisubr
push
das
pop
(bad)
call
clc
mov
cdq
jbe
ret
or
test
fidivr
pop
jmp
jecxz
ss
clc
popf
xchg
pushf
pop
adc
jg
inc
bound
sub
scas
dec
sub
nop
pop
fwait
sub
fstp
in
es
(bad)
(bad)
jmp
xor
sub
xchg
mov
mov
fidiv
jne
push
inc
out
out
sbb
and
lock
jnp
stos
shl
add
push
(bad)
(bad)
(bad)
fist
(bad)
fwait
ins
jge
add
popa
ffreep
cwde
int
mov
ret
push
(bad)
(bad)
call
jp
movs
popf
or
ror
(bad)
xor
cmp
xchg
ret
sti
outs
(bad)
(bad)
call
mov
mov
inc
cli
jne
out
adc
and
mov
aaa
adc
(bad)
mov
mov
out
fnop
mov
das
sar
loop
mov
pop
sbb
addr16
push
iret
cld
mov
ss
gs
in
jmp
aam
das
call
lods
xchg
(bad)
push
fwait
ror
(bad)
and
xchg
out
out
mul
jne
imul
(bad)
(bad)
call
icebp
fadd
dec
cmp
je
into
mov
xor
out
dec
and
movs
in
out
inc
push
jg
inc
ins
retf
clc
cmp
mov
imul
xor
(bad)
repnz
(bad)
(bad)
push
test
jo
popf
adc
xchg
popa
call
push
push
out
mov
sub
daa
(bad)
pop
mov
dec
(bad)
(bad)
(bad)
call
sub
mov
cdq
pop
(bad)
xchg
mov
ret
cmps
inc
cmp
push
stos
push
pop
jecxz
jmp
inc
sub
jns
jb
leave
sahf
pop
outs
fiadd
test
call
inc
bound
stos
sub
shl
das
fwait
ds
pusha
je
jg
xchg
es
(bad)
call
out
pop
pop
in
ds
adc
pop
mov
push
(bad)
(bad)
call
inc
or
pop
jmp
xchg
adc
push
(bad)
(bad)
(bad)
call
fsubr
(bad)
jo
xchg
bound
fmul
dec
push
cmp
jns
mov
jbe
retf
in
mov
push
inc
pop
cwde
shr
adc
mov
movs
retf
and
jb
arpl
mov
cld
leave
mov
or
call
or
lock
cmps
cwde
xchg
sbb
jnp
dec
push
mov
call
lea
add
adc
dec
cmp
enter
xor
xor
dec
call
mov
movs
adc
dec
push
dec
push
aad
inc
add
mov
(bad)
inc
sbb
or
retf
mov
inc
adc
cmp
inc
xchg
xchg
mov
(bad)
inc
pop
xor
inc
xor
or
lea
lds
ins
sub
mov
rcr
popf
push
or
pop
xor
sub
outs
(bad)
push
stos
(bad)
(bad)
call
sbb
adc
sub
pushf
push
sub
push
es
test
(bad)
(bad)
jmp
aas
or
mov
aam
add
add
mov
inc
adc
aas
push
mov
cmp
mov
cmp
push
pop
sti
cld
stos
mov
mov
cmp
retf
aad
inc
jmp
or
dec
lods
lock
dec
mov
jmp
out
ja
(bad)
(bad)
jp
imul
comiss
sar
jbe
mov
mov
dec
dec
(bad)
inc
pushf
jbe
mov
js
push
jbe
out
(bad)
(bad)
mov
call
pusha
sub
push
mov
(bad)
adc
push
pop
(bad)
mov
push
ret
int3
or
rol
fisttp
xor
(bad)
(bad)
cwde
push
dec
rcr
ret
sub
cwde
xchg
sub
pop
rcr
sbb
push
mov
rcl
fld
xchg
xor
gs
cmp
(bad)
fld
out
jecxz
(bad)
(bad)
call
sub
mov
repz
jge
stc
rcr
in
je
loope
shl
scas
aas
jb
imul
xchg
in
outs
mov
dec
pop
sti
mov
jno
mov
jae
and
push
cmps
inc
cmp
cmps
jmp
repz
xor
out
inc
mov
mul
pop
sbb
sbb
(bad)
frstor
push
pop
mov
inc
sbb
loope
shl
adc
pop
xchg
jne
mov
aaa
add
clc
pop
add
repnz
retf
(bad)
(bad)
jmp
inc
dec
xor
sub
xor
call
adc
jne
lods
pop
cdq
(bad)
(bad)
(bad)
call
mov
xchg
xor
mov
and
or
jae
xlat
sub
popf
(bad)
sar
mov
pop
jne
cs
xor
jne
ret
movs
pop
dec
in
xor
or
push
xchg
out
(bad)
(bad)
(bad)
(bad)
call
scas
aaa
or
loopne
push
add
jle
xor
shr
into
repnz
mov
mov
enter
mov
xchg
push
mov
pusha
test
push
add
inc
inc
or
(bad)
jmp
add
test
(bad)
jmp
aaa
jmp
out
adc
xchg
sub
ss
call
ja
(bad)
(bad)
dec
(bad)
clc
pop
stos
inc
fs
push
push
or
popa
in
ret
xchg
aas
rol
fst
in
jmp
stc
or
or
int
cmc
or
jp
xchg
and
cmp
mov
pop
sub
test
je
sbb
mov
jmp
and
loopne
pop
xchg
mov
jg
mov
mov
adc
sti
jecxz
mov
icebp
mov
or
mov
loop
pop
or
sbb
mov
bound
(bad)
dec
sub
xor
push
cld
jmp
jl
mov
push
jmp
cmp
jae
mov
clc
mov
inc
(bad)
aas
in
fbld
sub
shl
les
(bad)
call
push
mov
mov
repnz
dec
gs
add
in
mov
push
and
(bad)
inc
stos
mov
outs
mov
mov
mov
rol
sbb
(bad)
(bad)
push
leave
push
inc
inc
daa
mov
sbb
mov
ins
outs
push
scas
jmp
ret
and
movs
jmp
(bad)
(bad)
jmp
fistp
fldenv
dec
mov
fistp
rcl
xchg
(bad)
(bad)
dec
sbb
(bad)
out
sahf
cmp
cld
jmp
mov
call
lods
cmp
imul
jp
popa
clc
(bad)
jg
add
popa
imul
leave
jb
add
ret
(bad)
push
and
mov
jl
test
fdiv
jnp
add
inc
inc
pop
pop
out
loope
sar
(bad)
(bad)
call
div
push
popa
dec
sbb
les
icebp
fidiv
inc
(bad)
sbb
pushf
ins
sub
jmp
movs
mov
cdq
push
jno
push
icebp
lds
call
popf
test
pop
mov
mov
jns
sbb
repnz
stos
inc
mov
push
push
xchg
inc
sub
loope
push
test
sbb
fsubr
xchg
or
mov
pusha
ja
adc
cmps
jge
sbb
sbb
cmp
cmps
test
scas
push
aas
push
sbb
push
pushf
sar
add
scas
sbb
sbb
in
fucomp
jnp
mov
lea
add
inc
gs
das
clc
(bad)
dec
cs
jo
adc
push
pop
and
retf
add
pop
out
push
nop
mov
xchg
xchg
out
outs
clc
(bad)
jmp
sub
sbb
nop
dec
push
jle
out
icebp
push
repnz
pop
cmp
(bad)
(bad)
inc
je
mov
scas
sahf
sar
hlt
cdq
push
popf
sub
mov
(bad)
mov
loope
mov
pop
out
std
mov
mov
fwait
mov
jge
cs
ror
inc
add
xchg
inc
sar
sbb
sbb
fdiv
in
ret
(bad)
jg
push
fs
pop
sub
int
loop
nop
adc
mov
cli
adc
adc
xor
push
ret
inc
test
mov
loopne
cmp
mov
and
inc
js
popa
xchg
(bad)
(bad)
(bad)
inc
add
(bad)
and
mov
or
lea
dec
cmps
and
add
pop
cmp
(bad)
in
aad
mov
or
(bad)
(bad)
(bad)
jmp
and
xchg
adc
enter
push
mov
xchg
inc
xchg
push
loope
retf
mov
xor
push
js
jne
mov
ror
or
je
arpl
ror
xchg
push
adc
std
push
ds
xchg
in
out
inc
dec
pop
add
(bad)
call
adc
pop
mov
pop
mov
icebp
inc
retf
push
das
adc
nop
push
push
sub
mov
das
ds
cmp
ret
(bad)
inc
and
mov
sahf
or
daa
lods
pop
aaa
adc
std
fdivrp
(bad)
(bad)
dec
mov
test
je
fimul
lock
popf
or
and
sub
inc
inc
and
rcl
ret
xor
addr16
mov
(bad)
or
(bad)
dec
mov
push
adc
cmp
pop
adc
inc
ficom
adc
or
loope
adc
(bad)
inc
es
cmps
imul
inc
sub
imul
fbstp
(bad)
call
cwde
xchg
aaa
fdivr
loopne
cdq
aas
stc
retf
scas
sub
or
aas
(bad)
cld
(bad)
(bad)
(bad)
out
cmp
mov
jne
jnp
aam
loopne
xor
stc
scas
jl
mov
cmps
push
fistp
jecxz
push
cmp
int
mov
(bad)
(bad)
dec
iret
lahf
pop
jl
xchg
cmps
aam
sahf
cdq
push
cwde
xchg
xchg
adc
scas
stos
mov
idiv
dec
and
push
mov
jg
out
ds
dec
inc
popa
pop
sar
adc
jno
scas
adc
scas
jecxz
mov
jmp
sar
fwait
jle
cmps
push
cdq
lods
(bad)
in
dec
call
int3
cmp
push
aam
mov
aad
and
mov
cmp
fs
(bad)
xchg
mov
inc
(bad)
(bad)
(bad)
call
inc
movs
jp
and
push
loopne
sbb
push
shr
and
cmp
push
(bad)
sbb
mov
and
inc
repnz
lods
cmp
(bad)
dec
mov
push
jmp
dec
cmp
adc
and
mov
xor
not
stc
jb
stos
pop
imul
pop
mov
(bad)
(bad)
push
push
dec
mov
scas
out
jns
cs
in
inc
add
adc
push
js
inc
loop
pop
xlat
clc
call
rcr
call
rcr
shl
shl
test
or
imul
in
pop
sbb
sbb
call
pop
inc
ret
jno
dec
cld
mov
jp
les
lahf
jb
xchg
call
loop
push
arpl
(bad)
imul
xor
and
adc
dec
sub
add
lahf
adc
popf
cmps
or
loop
sub
arpl
add
add
fisubr
inc
call
hlt
dec
push
mov
call
pop
dec
(bad)
pop
cmc
jg
adc
arpl
test
pop
sub
mov
cmp
sbb
lock
icebp
xchg
sti
out
xor
retf
pop
stos
jle
stos
pop
inc
push
sbb
stos
(bad)
(bad)
(bad)
jg
stos
jne
push
aad
popf
mov
cwde
leave
inc
or
scas
mov
mov
icebp
retf
cwde
mov
(bad)
mov
movs
fcomip
loop
xor
sbb
aaa
das
mov
jmp
imul
adc
data16
cmps
out
clc
test
loopne
sub
jns
jmp
(bad)
sti
nop
aam
mov
fst
mov
xchg
add
retf
sub
xchg
cld
test
jmp
(bad)
(bad)
cmp
and
addr16
shl
push
push
dec
push
outs
sar
inc
mov
sub
mov
call
shl
imul
mov
cwde
lahf
lahf
sbb
(bad)
(bad)
jmp
mov
(bad)
sbb
aad
pop
cmp
jmp
daa
out
xor
jne
test
das
clc
(bad)
inc
(bad)
mov
dec
inc
xlat
dec
cs
repnz
sbb
dec
aaa
mov
push
sbb
(bad)
(bad)
(bad)
inc
ds
mov
in
dec
out
or
in
pop
into
shl
mov
mov
mov
(bad)
jg
int
mov
mov
outs
leave
xor
sub
cmp
call
(bad)
jmp
pop
jo
aad
and
xor
rcr
(bad)
push
dec
and
cwde
sar
mov
das
pop
push
mov
jmp
jg
push
jge
icebp
sub
shl
mov
mov
retf
or
xor
scas
mov
or
dec
cpuid
cmp
adc
(bad)
(bad)
(bad)
jge
fdiv
mov
popa
adc
frstor
sub
leave
pop
add
hlt
(bad)
(bad)
call
sbb
push
cmps
push
jno
clc
jle
jne
in
lods
mov
fwait
movs
jmp
das
test
(bad)
call
retf
cmp
pop
cdq
or
and
mov
clc
dec
add
cmp
cli
iret
or
sub
xlat
mov
in
test
jno
imul
push
push
aad
sub
inc
jbe
cdq
out
mov
dec
inc
(bad)
pop
sub
push
(bad)
jmp
sub
out
sub
enter
push
or
pop
inc
test
inc
js
inc
bound
and
lock
ret
adc
call
jne
aad
push
loopne
add
jne
(bad)
(bad)
jmp
push
push
and
lea
dec
pop
cli
add
or
movs
push
mov
fild
shr
dec
jne
dec
das
lds
adc
iret
and
inc
mov
mov
and
loopne
sub
xchg
jb
xchg
outs
ror
loope
jbe
add
(bad)
push
int3
retf
sub
or
sub
ss
fs
retfw
add
(bad)
(bad)
jmp
popa
mov
inc
pop
pushf
add
or
loop
fistp
(bad)
pop
sbb
(bad)
mov
int
aam
sub
cmp
mov
into
add
jne
test
(bad)
(bad)
(bad)
call
dec
enter
mov
imul
hlt
or
pop
jmp
outs
mov
xchg
pop
(bad)
out
xor
cld
mov
stos
mov
(bad)
dec
outs
(bad)
dec
jnp
fst
addr16
gs
push
jnp
shl
dec
or
jmp
dec
shl
hlt
or
retf
lock
retf
jg
pop
jmp
mov
inc
scas
push
call
cmp
(bad)
(bad)
mov
mov
dec
in
inc
jecxz
sbb
push
xchg
rcl
imul
in
cli
das
loop
mov
test
sti
and
inc
cs
mov
mov
dec
call
pop
std
fdivp
lock
dec
clc
push
test
dec
jmp
mov
cdq
(bad)
(bad)
(bad)
(bad)
(bad)
out
pop
or
fistp
popf
out
mov
cmps
xchg
pop
sar
push
test
jg
test
lock
push
sub
mov
mov
(bad)
(bad)
(bad)
(bad)
aas
clc
lods
(bad)
pop
js
mov
lods
pop
data16
sbb
cli
stc
out
inc
xlat
mov
sbb
loopne
cmp
aaa
sbb
or
dec
sbb
test
xor
test
adc
(bad)
fld
mov
push
jge
pop
or
inc
ret
and
fnstsw
xor
pop
cmp
aad
xchg
(bad)
std
fist
cmp
sub
dec
(bad)
(bad)
call
dec
mov
push
stos
imul
ror
inc
ficom
(bad)
das
or
(bad)
dec
cmp
aad
shl
xor
cmp
ret
leave
fldcw
(bad)
(bad)
call
xchg
cmp
push
mov
sbb
push
sti
leave
mov
cli
sahf
aaa
shr
jl
(bad)
(bad)
stos
(bad)
call
xor
test
inc
adc
inc
push
sbb
in
data16
daa
cmp
(bad)
call
inc
shl
push
sbb
xchg
cli
mov
cmp
pop
sub
or
sub
push
cli
shl
add
icebp
add
push
loop
mov
inc
mov
ret
jno
jne
mov
mov
(bad)
(bad)
(bad)
push
es
out
and
dec
shl
inc
rcr
push
popa
pop
xlat
pop
addr16
jnp
out
lea
cmp
(bad)
(bad)
(bad)
fstp
ja
clc
bound
mov
mov
scas
leave
inc
loop
xchg
mov
add
dec
xor
pop
js
shl
je
dec
cmp
mov
cmp
adc
(bad)
(bad)
(bad)
call
and
inc
and
js
xchg
dec
inc
es
sub
dec
rcl
inc
repz
stc
push
mov
xor
(bad)
(bad)
inc
mov
xchg
pop
clc
lds
es
aas
shl
fld
xchg
call
xlat
movs
aad
std
xchg
scas
jge
(bad)
push
dec
fbld
mov
xchg
(bad)
aas
nop
adc
mov
stc
retf
and
mov
inc
sar
shl
dec
std
pop
jg
inc
ret
mov
fs
lea
and
mov
(bad)
(bad)
(bad)
call
les
and
jecxz
sar
adc
stc
and
and
repnz
(bad)
(bad)
cmp
(bad)
add
pop
pop
test
xchg
in
adc
cmp
test
or
(bad)
(bad)
call
and
not
mov
(bad)
ficom
cld
pop
dec
movs
(bad)
movs
pop
(bad)
(bad)
(bad)
jmp
repz
xor
ja
fnsave
pop
pop
rol
dec
fcom
repnz
ins
push
and
jmp
and
or
and
jmp
push
rol
pop
pusha
inc
push
and
xor
(bad)
(bad)
jns
test
das
push
(bad)
fldcw
dec
xor
mov
mov
(bad)
(bad)
push
imul
scas
fnstcw
add
and
in
cmc
mov
ds
ret
movs
(bad)
(bad)
fcomip
sti
imul
loop
push
shl
loope
mov
call
inc
cli
out
inc
(bad)
(bad)
jmp
mov
dec
rcr
lds
test
mov
fsub
mov
adc
repnz
call
ror
mov
xor
cmp
push
test
xor
xchg
xchg
add
mov
cmc
out
pushf
dec
scas
inc
fcom
bound
es
out
push
call
dec
pop
retf
jge
fcom
jle
xor
movs
jmp
(bad)
cmp
push
and
scas
fwait
jmp
imul
jp
(bad)
(bad)
(bad)
dec
push
retf
xor
test
test
pop
and
dec
xchg
mov
fs
gs
add
push
aam
(bad)
aad
mov
(bad)
fucom
sahf
fwait
jbe
(bad)
sti
cld
icebp
arpl
iret
pop
xchg
and
jmp
fstp
add
scas
je
loopne
std
inc
repnz
and
cwde
dec
push
pushf
mov
fcom
push
jno
adc
inc
(bad)
(bad)
mov
sub
add
push
lds
test
stos
push
add
jmp
push
adc
test
push
push
dec
pop
push
sub
xchg
stc
inc
add
or
xchg
(bad)
inc
push
jns
mov
lock
sbb
(bad)
(bad)
push
adc
repnz
xchg
test
sbb
pusha
fst
gs
int
xor
fisttp
hlt
inc
or
inc
inc
sbb
cwde
push
sub
xchg
push
loop
push
xchg
imul
call
arpl
mov
lahf
add
pusha
(bad)
mov
fsub
outs
sar
mov
or
fdiv
mov
push
cld
(bad)
(bad)
call
mov
jne
pusha
push
dec
test
and
or
or
sbb
push
ins
mov
sti
or
push
in
or
lods
call
pop
in
push
jg
cmp
xchg
mov
xor
or
pop
cmc
inc
jo
loopne
pop
rcl
retf
jno
orps
or
test
loope
dec
mov
and
mov
adc
sbb
pop
cli
fbld
loope
mov
aas
cli
fcomp
inc
pop
lock
jnp
xor
leave
sbb
imul
ud2
pop
mov
mov
(bad)
dec
xchg
mov
lahf
inc
rol
mov
add
mov
cmps
in
int
test
(bad)
xchg
add
mov
adc
mov
daa
cmps
bound
mul
cmp
inc
and
add
sar
(bad)
inc
pushf
arpl
add
retf
sub
std
adc
cmp
jae
les
mov
sub
cmp
(bad)
(bad)
jmp
fistp
xchg
pop
stos
int
ret
scas
repnz
ds
hlt
(bad)
(bad)
push
xchg
mov
in
mov
cmp
(bad)
cld
std
aaa
dec
lahf
push
mov
repz
(bad)
sub
pop
out
add
call
cli
icebp
ret
dec
sahf
jmp
test
aas
jge
mov
rol
iret
sub
or
fbstp
sub
rcr
out
std
pop
sti
fnstsw
mov
(bad)
(bad)
(bad)
fcom
mov
icebp
loop
lahf
pop
xlat
je
in
dec
xor
aas
(bad)
(bad)
(bad)
inc
js
cmp
fdiv
aam
out
aam
stos
imul
mov
aas
mov
(bad)
mov
stc
xchg
push
sbb
sub
add
adc
pushf
xchg
mov
sbb
es
push
jo
dec
rcr
sub
jp
mov
cmp
push
pop
sar
or
cmp
mov
(bad)
(bad)
(bad)
jmp
sub
call
(bad)
loope
jae
loope
repz
or
in
xor
dec
inc
push
scas
cmp
ss
retf
bnd
sub
cs
in
jecxz
daa
popf
add
sub
call
dec
ror
rol
jp
adc
mov
es
(bad)
jmp
sub
pop
psubusw
xor
jbe
jno
and
and
jne
push
std
(bad)
in
or
ret
cmp
clc
mov
jno
pop
xchg
(bad)
(bad)
fild
pusha
stos
(bad)
sub
repz
scas
addr16
push
sbb
inc
add
fdiv
lods
add
jmp
pop
sbb
(bad)
pop
or
(bad)
jg
ss
loop
xchg
pop
sahf
pop
inc
xlat
sbb
gs
mov
pop
movs
and
xchg
call
test
lock
daa
xlat
xchg
push
test
ficom
lahf
(bad)
jg
sbb
add
lock
xor
ret
mov
out
pop
cmc
(bad)
dec
inc
mov
mov
imul
sbb
scas
stc
into
pop
xor
push
jno
pop
repnz
dec
lock
push
push
pop
cmps
aaa
push
jne
push
cmp
sbb
jp
jmp
(bad)
(bad)
cld
in
cmp
ficom
aas
and
push
fadd
sbb
add
mov
(bad)
(bad)
inc
add
add
into
gs
mov
pushf
cdq
fistp
loope
ret
fwait
inc
loopne
pop
adc
xchg
movs
(bad)
(bad)
(bad)
(bad)
cmp
or
sub
fsubr
mov
das
call
push
aas
leave
ins
pop
lods
pop
mov
(bad)
dec
pop
mov
ds
pop
push
shr
push
or
es
add
shl
cmp
(bad)
(bad)
jmp
into
jmp
in
fdivr
adc
push
cmp
pop
(bad)
(bad)
call
mov
mov
std
cdq
inc
iret
iret
popa
mov
pop
mov
dec
jo
fstp
cmp
cli
inc
or
mov
(bad)
jmp
dec
(bad)
jmp
sbb
jp
ins
iret
jb
imul
mov
sti
call
pop
xor
loope
ins
sub
mov
ds
inc
jo
(bad)
inc
(bad)
(bad)
(bad)
push
call
outs
inc
es
mov
repnz
adc
jmp
jmp
xor
mov
xor
jb
and
sar
inc
enter
jbe
inc
xchg
test
and
lods
fsub
test
sbb
pop
(bad)
push
or
loopne
xchg
imul
jg
mov
xchg
cli
push
xchg
(bad)
push
test
(bad)
jmp
fidiv
(bad)
(bad)
mov
pusha
call
adc
and
into
inc
fadd
xor
in
sbb
dec
in
mov
(bad)
mov
cmp
clc
iret
movs
mov
test
std
pop
and
nop
aam
sbb
xor
cmp
aaa
call
loop
dec
and
movs
or
xchg
add
or
mov
(bad)
(bad)
jmp
or
mov
dec
xor
test
cmp
mov
mov
(bad)
push
dec
repz
ds
mov
movs
inc
popa
cmp
mov
push
mov
shr
xchg
sub
orps
(bad)
(bad)
jmp
pop
bound
popa
or
imul
daa
shl
sub
dec
pop
mov
(bad)
(bad)
in
call
dec
repnz
push
dec
mov
add
sbb
leave
jo
inc
xor
fsub
ret
jp
out
sbb
jne
inc
adc
sbb
dec
mov
fiadd
dec
gs
mov
call
adc
(bad)
dec
xchg
sar
mov
push
inc
rol
inc
pop
pop
and
aam
xor
nop
test
arpl
jmp
and
jecxz
dec
mov
loop
dec
stos
push
jno
call
hlt
pop
ficom
mov
push
and
xchg
sbb
lea
cwde
cmp
sbb
cmp
(bad)
(bad)
(bad)
dec
rcl
(bad)
lahf
fwait
out
int
aaa
sub
xchg
xor
mov
xchg
sub
pop
imul
mov
ds
in
repnz
sub
mov
adc
sbb
ins
dec
and
dec
inc
inc
ficom
nop
or
push
in
or
dec
int
push
sub
cwde
cmp
call
inc
sub
xor
add
das
int
dec
dec
cmp
mov
and
loopne
icebp
pop
(bad)
inc
hlt
icebp
scas
(bad)
fst
jle
(bad)
(bad)
jmp
add
movs
dec
int3
cmp
outs
cmp
or
clc
xchg
jl
cld
fdivr
fdivp
out
ja
shr
push
adc
pop
lahf
stc
(bad)
std
ss
push
(bad)
pop
jnp
jne
(bad)
(bad)
call
push
sti
fld
pushf
jmp
aaa
(bad)
mov
(bad)
sbb
or
ret
ja
jno
call
aas
or
in
mov
dec
ret
(bad)
(bad)
(bad)
out
mov
dec
dec
xor
cdq
aad
add
sub
push
aaa
retf
mov
dec
cli
pop
(bad)
(bad)
(bad)
(bad)
out
int3
(bad)
jmp
cwde
outs
mov
inc
fisttp
cmp
or
(bad)
(bad)
cmc
pop
ds
(bad)
jg
mov
mov
sub
xchg
push
(bad)
mov
xchg
test
inc
dec
hlt
mov
push
push
push
or
and
add
fisttp
mov
(bad)
(bad)
jmp
fistp
jne
pusha
mov
pop
jno
aam
loope
and
test
fsub
arpl
jl
jmp
adc
retf
std
jle
cdq
adc
out
ret
pop
sbb
jb
nop
ret
std
sahf
imul
call
adc
(bad)
push
cdq
es
sub
add
enter
jmp
mov
cmp
xor
mov
fcmovnbe
leave
xchg
popa
mov
xchg
inc
out
ficomp
mov
dec
inc
es
shl
pop
shl
adc
(bad)
(bad)
(bad)
mov
lock
fmul
xchg
inc
rol
cmp
mov
inc
test
jb
(bad)
(bad)
(bad)
dec
(bad)
jmp
out
sub
and
sub
or
leave
cwde
mov
(bad)
xor
adc
pop
and
sub
adc
xchg
push
loope
mov
dec
mov
call
loope
sub
data16
fld
and
ficom
call
inc
mov
(bad)
and
inc
ret
test
cmp
sbb
push
fistp
inc
mov
lock
repnz
jle
cli
dec
sbb
jns
fimul
call
rcr
jno
(bad)
sub
push
add
cmp
loop
fsubr
push
std
fwait
mov
pop
out
or
lds
ret
and
mov
out
sub
shr
jp
(bad)
icebp
push
mov
inc
movs
sbb
push
ds
sub
rcl
(bad)
(bad)
dec
cmps
xor
sub
push
xchg
fistp
pop
mul
inc
push
inc
(bad)
mov
inc
mov
movs
(bad)
(bad)
call
mov
fidiv
in
pushf
pop
sbb
sbb
ins
mov
jp
scas
mov
je
fwait
sbb
(bad)
jmp
sbb
out
out
aaa
ins
push
sub
aas
inc
mov
pop
xchg
call
xchg
xlat
pop
sbb
jae
std
cli
mov
jbe
cmc
sbb
lods
fadd
adc
das
add
inc
int
test
cli
(bad)
jg
add
mov
sbb
imul
mov
xchg
jge
(bad)
mov
in
rol
push
pushf
into
and
(bad)
push
cwde
ss
jmp
cld
(bad)
call
xchg
adc
int
dec
pushf
pop
es
inc
adc
mov
es
cwde
pop
enter
xchg
cmp
or
(bad)
inc
enter
sub
fdivr
dec
clc
rcl
loope
pop
cld
dec
pusha
or
hlt
jne
pop
sub
xchg
das
mov
(bad)
jmp
int3
cs
retf
push
jg
adc
and
ins
fild
xor
jmp
loopne
(bad)
call
jl
cmp
(bad)
(bad)
(bad)
(bad)
jmp
call
stc
pop
int
rcr
adc
pop
add
retf
scas
idiv
(bad)
call
push
dec
sub
daa
jp
loope
call
into
fld
jmp
(bad)
mov
hlt
sub
mov
arpl
mov
dec
pop
adc
(bad)
(bad)
(bad)
call
xchg
or
loopne
jl
retf
mov
xchg
push
les
cmps
pop
in
(bad)
aad
ret
sbb
(bad)
mov
jb
(bad)
div
lods
xor
dec
shl
mov
(bad)
sar
jg
dec
pop
pusha
and
jl
inc
aad
pop
ret
push
inc
sub
stos
cld
(bad)
call
test
mov
sbb
retf
cmp
push
add
sbb
or
leave
or
or
inc
cmp
inc
inc
sub
call
or
add
popa
cld
inc
aaa
(bad)
call
push
test
add
inc
sbb
adc
adc
(bad)
(bad)
(bad)
jns
popf
clc
pop
dec
ret
rcr
cmps
scas
fiadd
push
popa
dec
lods
cwde
mov
mov
fisttp
dec
(bad)
jmp
jb
lods
inc
inc
stos
stc
and
push
inc
test
retf
add
cmp
(bad)
(bad)
(bad)
cmp
sub
inc
add
add
or
push
scas
clc
jmp
mov
add
lds
loope
mov
mov
inc
(bad)
jmp
cli
mov
repnz
sub
aam
jmp
dec
cmps
add
data16
jmp
shr
fstp
mov
movs
inc
mov
xor
outs
or
lods
jl
and
push
lds
add
cli
mov
mov
not
push
adc
push
and
mov
cwde
push
adc
jo
ret
jmp
xchg
pop
arpl
shl
mov
pfmul
sub
sbb
push
(bad)
push
or
xchg
and
fld
lods
lock
rcr
dec
or
outs
xchg
hlt
jmp
adc
jp
into
das
(bad)
fcmove
mov
cli
(bad)
jg
jmp
ds
jle
les
out
fidivr
sti
fadd
push
out
jmp
lahf
push
sti
add
pop
cmc
not
fdivr
out
jnp
xor
aad
(bad)
fild
in
mov
fidivr
out
sti
fistp
hlt
in
xchg
outs
fld
(bad)
pusha
imul
(bad)
aas
jge
arpl
out
fdivr
pop
mov
sub
jmp
shr
jb
dec
sbb
std
outs
daa
(bad)
pusha
cmp
push
inc
xor
push
idiv
sbb
mov
or
(bad)
(bad)
(bad)
jmp
or
cdq
stos
xlat
shl
je
dec
jecxz
outs
mov
std
inc
pusha
jle
adc
(bad)
outs
(bad)
imul
push
(bad)
(bad)
jg
leave
out
cmp
cmps
(bad)
mov
in
xchg
outs
stos
imul
cmp
(bad)
(bad)
fldcw
mov
push
stc
ret
mov
xor
aad
add
mov
add
and
push
loopne
inc
sbb
stos
outs
jmp
adc
dec
ret
push
cld
fwait
sti
lahf
jmp
inc
push
in
xchg
pop
push
rol
int
jmp
call
data16
cwde
mov
fistp
(bad)
cld
or
(bad)
push
mov
inc
mov
add
mov
adc
call
sbb
jno
mov
inc
imul
xchg
lock
imul
xor
lock
int
lock
(bad)
ins
mov
std
xor
inc
imul
mov
data16
fistp
mov
mov
inc
js
mov
add
lock
call
mov
sti
add
fidivr
cmp
arpl
sbb
dec
cmp
scas
or
dec
fidivr
popa
pop
xor
mov
lods
jp
lea
(bad)
(bad)
(bad)
call
cmp
cmps
pop
adc
jb
push
xor
mov
sbb
inc
push
nop
inc
in
sbb
loope
std
cld
jmp
gs
dec
lock
mov
push
ss
push
shl
in
pop
clc
enter
sbb
into
enter
inc
ds
jle
cmp
lods
icebp
xchg
lods
loop
push
std
(bad)
(bad)
aas
ins
jmp
call
or
mov
bound
push
mov
pop
push
mov
xchg
sub
dec
push
dec
add
mov
rol
cld
(bad)
push
iret
sbb
test
xchg
pushf
jae
xor
outs
adc
(bad)
jmp
adc
mov
stos
nop
out
pop
(bad)
fdiv
(bad)
(bad)
(bad)
call
dec
xchg
inc
and
mov
daa
fisttp
adc
sar
daa
idiv
fcomip
xor
test
mov
sub
(bad)
mov
outs
(bad)
(bad)
(bad)
(bad)
mov
test
or
jne
xor
out
cmps
jns
adc
mov
retf
mov
std
(bad)
(bad)
(bad)
(bad)
fistp
pop
push
je
loop
jmp
cs
repnz
sbb
shr
mov
std
mov
mov
jbe
imul
shl
cmp
fwait
cdq
std
jg
lods
ins
js
repnz
je
movs
sub
push
lea
call
(bad)
sti
jmp
(bad)
out
sbb
(bad)
(bad)
jg
mov
jle
sub
inc
xchg
call
popf
(bad)
cmp
clc
idiv
sbb
cmc
fnstcw
or
jecxz
lahf
push
ss
mov
push
fcom
lods
pop
sbb
xchg
movs
test
mov
and
(bad)
(bad)
(bad)
jmp
retf
cli
sub
mov
cmp
ins
mov
idiv
push
(bad)
dec
dec
cmp
or
jbe
movs
add
test
push
sub
push
mov
xchg
mov
(bad)
jmp
fidivr
xchg
sub
ret
xor
dec
std
xor
pusha
shl
jo
bnd
mov
fcmovb
inc
inc
sbb
adc
popa
cmps
pop
cld
call
daa
retf
mov
dec
lock
mov
lock
and
jmp
sub
mov
mov
or
rcr
fs
sub
mov
push
repnz
mov
dec
push
inc
mov
inc
adc
rcr
scas
inc
inc
ret
sbb
add
mov
mov
(bad)
(bad)
jg
xor
sub
shl
mov
push
mov
dec
scas
push
les
mov
pop
or
xchg
cld
xchg
pop
sbb
(bad)
scas
mov
xchg
(bad)
(bad)
jmp
pushf
in
sub
pop
(bad)
or
or
add
dec
call
mov
cdq
sbb
ss
cwde
clc
push
fs
xlat
dec
test
jmp
ror
je
loope
xor
or
pop
cmp
add
in
dec
cld
adc
mov
adc
mov
mov
jmp
dec
xor
mov
or
inc
pop
sbb
arpl
(bad)
(bad)
call
pop
sub
adc
test
fidivr
cmp
loope
sub
sahf
and
scas
out
push
xor
xchg
cmp
cmps
dec
adc
pushf
jo
cwde
xchg
push
mov
and
jg
pop
rcl
inc
test
cmp
jbe
fisub
sub
sub
call
daa
add
or
mov
cmp
push
xchg
(bad)
(bad)
(bad)
call
or
jb
icebp
xor
fs
mov
(bad)
mov
add
ret
sub
(bad)
(bad)
jmp
inc
or
inc
stos
push
add
push
and
push
iret
(bad)
mov
lods
and
(bad)
(bad)
mov
sbb
adc
dec
push
repz
out
cs
(bad)
xor
fild
inc
push
arpl
out
push
inc
jg
xor
push
call
mov
scas
imul
push
cld
out
mov
scas
fstp
(bad)
(bad)
out
mov
out
(bad)
scas
pop
jl
aas
(bad)
test
neg
mov
in
(bad)
(bad)
(bad)
dec
iret
sahf
pop
fdivr
dec
push
addr16
in
(bad)
shl
sub
icebp
sub
add
shl
pop
loop
mov
(bad)
push
aam
mov
punpckhdq
mov
call
mov
sar
jno
(bad)
jmp
js
sub
jae
jno
mov
(bad)
iret
data16
fs
(bad)
jmp
mov
loopne
ds
jo
out
xor
(bad)
(bad)
mov
and
adc
or
dec
xor
pop
(bad)
sbb
dec
call
out
sbb
or
out
cmp
pop
icebp
(bad)
jmp
les
mov
push
adc
les
jl
sbb
aad
(bad)
(bad)
(bad)
dec
jbe
sahf
push
std
sub
ffreep
rol
mov
mov
stos
push
push
push
sbb
xchg
push
jmp
fld
in
xor
mov
aaa
push
jp
cwde
pop
dec
sbb
mov
sbb
(bad)
mov
(bad)
lock
push
push
and
jge
bound
and
push
mov
test
lods
mov
sbb
retf
sbb
int3
hlt
ja
out
lods
and
movs
cli
xor
pop
xchg
sbb
shr
mov
xlat
dec
inc
aam
mov
jno
pop
lea
pop
in
jbe
(bad)
(bad)
(bad)
mov
ret
aaa
cmp
aam
xchg
mov
ds
popa
lods
jmp
inc
jmp
(bad)
(bad)
fnsave
movs
aas
hlt
pop
or
inc
bound
pop
and
sbb
(bad)
(bad)
inc
xchg
xor
rol
mov
fbld
or
add
and
int3
es
mov
(bad)
(bad)
(bad)
(bad)
js
add
dec
push
cwde
popw
pop
add
in
pop
dec
mov
pop
jne
dec
mov
jl
jecxz
das
(bad)
(bad)
(bad)
call
mov
or
sbb
sub
leave
ror
cmp
movs
pop
das
sbb
pop
inc
jmp
scas
push
sbb
call
in
mov
in
(bad)
(bad)
call
mov
jmp
shr
loope
(bad)
gs
xchg
or
enter
and
xor
xor
pop
push
pushf
cmp
mov
or
pop
adc
mov
push
mov
(bad)
push
std
bound
mov
dec
imul
das
push
cmps
icebp
loope
sbb
clc
(bad)
mov
xchg
jae
psraw
imul
jecxz
cdq
rol
jg
xchg
addr16
dec
inc
sub
inc
fwait
or
das
jnp
xor
(bad)
(bad)
(bad)
(bad)
mov
mov
imul
out
in
push
inc
fstp
cli
push
jge
repnz
scas
mov
mov
jae
fst
(bad)
call
lock
sub
jle
stos
cmc
ret
fmul
popa
jmp
pop
out
clc
dec
xor
cmp
jns
mov
mov
iret
(bad)
(bad)
(bad)
call
fbstp
mov
scas
jmp
jne
retf
(bad)
test
ja
or
mov
(bad)
call
(bad)
push
dec
test
pop
or
dec
(bad)
dec
sbb
xor
sub
pop
mov
sbb
imul
push
mov
aas
repnz
add
imul
(bad)
(bad)
(bad)
cmp
dec
inc
movs
aad
movs
nop
adc
iret
push
sub
xor
dec
and
stc
and
pop
shr
aas
lock
mov
dec
shl
hlt
push
xor
jp
mov
push
test
gs
scas
or
adc
ret
mov
push
es
(bad)
(bad)
(bad)
mov
out
loope
sti
pmaddwd
push
sbb
cli
pop
xor
dec
add
das
(bad)
and
dec
(bad)
(bad)
(bad)
call
or
sub
adc
cs
sub
and
cmc
inc
xchg
jl
aaa
(bad)
sub
mov
mov
mov
cdq
mov
mov
push
js
xor
sbb
nop
inc
push
ret
(bad)
(bad)
(bad)
call
mov
jl
mov
outs
lods
xor
inc
sbb
sub
ins
dec
arpl
ret
popa
int
pusha
call
shr
pop
mov
xchg
dec
pop
push
(bad)
fild
(bad)
(bad)
call
mov
or
add
jno
or
pop
shl
sbb
test
(bad)
(bad)
call
or
cmp
push
cmp
cwde
into
pusha
sub
cs
mov
push
scas
rol
cdq
mov
(bad)
fcomip
call
sbb
pop
inc
lds
mov
mov
push
(bad)
call
mov
clc
lea
dec
mov
jp
mov
cmp
pop
hlt
(bad)
(bad)
retf
and
fcom
rol
sahf
popa
sbb
(bad)
jg
sbb
pop
jmp
mov
xchg
or
pop
inc
cmp
adc
rcl
scas
mov
and
(bad)
(bad)
(bad)
call
cdq
and
enter
xchg
rcl
sub
cmp
jge
mov
es
aad
retf
(bad)
(bad)
(bad)
jmp
mov
shl
mov
mov
push
pop
and
xor
popa
dec
out
mov
(bad)
jg
pop
inc
call
ins
xchg
retf
cmp
xlat
push
sbb
test
inc
inc
xor
cld
ins
xchg
fnstenv
stos
push
cmp
mov
inc
movs
sub
lods
ins
fwait
pop
sbb
jecxz
hlt
mov
fisttp
xchg
pop
jg
daa
pop
not
(bad)
cli
jcxz
(bad)
pop
(bad)
in
xor
(bad)
dec
mov
push
cmps
outs
sbb
movs
test
out
fcomip
(bad)
dec
(bad)
in
xor
fisubr
out
pop
mov
daa
jnp
iret
popf
ins
jmp
(bad)
fst
aaa
ins
pushf
jbe
(bad)
mov
sbb
jmp
xor
(bad)
(bad)
(bad)
push
push
daa
dec
dec
dec
ss
cmps
out
sti
mov
scas
pop
aas
jmp
in
repz
lahf
cmp
jmp
call
mov
sbb
adc
(bad)
in
or
xchg
call
test
pop
setle
or
call
mov
(bad)
(bad)
push
cmp
frstor
stc
rol
aas
dec
jge
and
pushf
into
sbb
loopne
pop
xor
(bad)
(bad)
call
push
pop
inc
sbb
sbb
adc
into
sub
add
pop
push
inc
mov
call
mov
jecxz
add
push
sti
or
(bad)
jp
popf
add
call
add
jne
in
loop
fnsave
std
test
or
loopne
(bad)
push
xchg
mov
xchg
es
mov
repnz
stos
cmp
(bad)
das
mov
fadd
add
push
stos
push
sbb
(bad)
(bad)
(bad)
dec
push
jge
fld1
lea
mov
mov
dec
xlat
cmc
adc
or
dec
ss
dec
adc
psrld
cmp
cmp
mov
xchg
lods
es
arpl
add
(bad)
(bad)
(bad)
jmp
les
rsqrtps
mov
fidiv
or
adc
fild
call
lea
lock
sbb
mov
aaa
sbb
jns
test
xor
sub
int
or
dec
hlt
inc
sbb
imul
xchg
scas
shr
(bad)
(bad)
(bad)
push
jno
sbb
mov
xor
leave
jb
fisub
fwait
and
sbb
dec
cli
aam
aas
(bad)
(bad)
(bad)
(bad)
mov
paddw
lds
pop
mov
std
xchg
cmp
pop
rol
(bad)
push
cmp
inc
mov
dec
mov
(bad)
or
ret
push
xchg
mov
(bad)
sub
mov
pop
into
cmp
add
push
call
fwait
dec
add
ss
cmp
mov
adc
gs
jae
cmp
cmp
ins
pop
call
push
lahf
js
fdivr
(bad)
jmp
mov
ss
int
xchg
js
pop
nop
cli
xchg
jp
xor
(bad)
or
xchg
sub
(bad)
mov
(bad)
test
mov
sbb
mov
jle
stos
(bad)
(bad)
jmp
push
outs
fnstsw
movs
mov
into
jae
xchg
(bad)
sbb
(bad)
mov
mov
xor
sub
pop
imul
pop
xchg
push
xlat
(bad)
(bad)
jmp
test
mov
stc
inc
fnstcw
aad
cmp
cmps
(bad)
out
arpl
pop
(bad)
(bad)
(bad)
jmp
out
and
inc
push
js
(bad)
pop
push
out
out
dec
fidiv
push
adc
dec
ss
cmp
mov
jne
(bad)
(bad)
(bad)
out
jne
imul
adc
dec
ja
es
mov
sar
fsubr
imul
inc
ja
xchg
shr
(bad)
(bad)
(bad)
dec
ja
pop
aas
jo
and
sub
or
push
outs
ss
dec
push
call
sub
test
jmp
lds
pop
inc
jecxz
scas
sub
jmp
mov
arpl
xchg
retf
cdq
cli
call
in
or
cmps
adc
test
mov
fmul
push
sub
dec
sahf
add
mov
sub
xor
rcr
lock
loopne
fdivr
xor
(bad)
(bad)
dec
jg
jmp
sbb
jmp
pop
adc
inc
xchg
(bad)
cmps
pushf
mov
mov
movs
jge
scas
push
add
and
ins
aaa
(bad)
(bad)
(bad)
mov
cmp
leave
mov
into
rcl
loopne
or
push
cmp
fbstp
cli
(bad)
(bad)
jmp
cmp
push
daa
out
dec
xchg
mov
or
nop
repz
sub
rol
(bad)
jmp
nop
xor
sub
arpl
push
in
jbe
and
pusha
mov
add
push
xchg
and
je
inc
pop
test
fsubr
(bad)
(bad)
cs
(bad)
call
mov
daa
mov
mov
lds
add
inc
xor
add
push
xchg
dec
icebp
retf
or
push
mov
ret
loope
(bad)
(bad)
(bad)
dec
jmp
je
xchg
sbb
ret
fild
mov
les
repz
cmp
cld
(bad)
dec
push
sbb
lds
xchg
imul
inc
hlt
je
xor
std
(bad)
(bad)
jmp
adc
push
mov
scas
scas
add
push
or
pop
sub
push
icebp
adc
(bad)
call
fsubp
dec
test
dec
jno
cmp
mov
pop
mov
or
mov
cmps
xchg
(bad)
(bad)
(bad)
call
push
cmp
mov
push
outs
xor
ret
inc
dec
inc
ins
jae
sub
std
popa
add
mov
(bad)
mov
add
retf
aam
(bad)
(bad)
(bad)
(bad)
clc
adc
pop
imul
dec
nop
adc
jecxz
mov
cmc
cmps
(bad)
retf
cmp
scas
dec
fdiv
stos
aas
je
mov
xor
mov
jecxz
push
(bad)
(bad)
(bad)
inc
fisubr
adc
loopne
add
shl
mov
lea
and
(bad)
(bad)
dec
xor
pop
fsubr
fmul
rol
ficom
inc
cmp
mov
pop
inc
jmp
arpl
(bad)
(bad)
(bad)
inc
(bad)
and
scas
sub
sub
jo
icebp
mov
call
shr
out
fcom
cld
xchg
bsf
cli
fwait
dec
pop
cli
iret
jg
sbb
std
jne
outs
jne
(bad)
(bad)
(bad)
(bad)
jnp
sbb
lods
(bad)
xor
lock
(bad)
cld
mov
test
mov
scas
(bad)
fistp
xchg
push
addr16
inc
lock
stos
push
aas
ffreep
jp
data16
jle
jno
idiv
jmp
dec
sbb
lds
pop
fwait
call
outs
ficomp
retf
aam
in
sbb
mov
retf
in
xchg
or
dec
lods
pusha
int3
leave
cld
inc
jmp
cdq
push
inc
(bad)
dec
ror
jae
je
cmps
mov
outs
sbb
mov
jb
movs
std
call
data16
cwde
xchg
ret
nop
sub
mov
add
adc
(bad)
(bad)
push
or
ins
fs
xchg
pop
xchg
jp
push
adc
dec
xchg
ds
cmps
retf
mov
(bad)
dec
jecxz
push
mov
ds
sbb
jl
jmp
inc
cld
call
xchg
fdivr
mov
movs
fistp
jmp
das
add
cmp
lock
add
js
(bad)
mov
rcr
(bad)
inc
cs
sbb
es
sub
sar
push
mov
mov
and
sub
inc
pop
jge
stc
cli
xchg
mov
imul
or
(bad)
push
mov
call
sbb
or
xchg
cli
add
(bad)
(bad)
(bad)
call
push
sbb
xor
arpl
mov
adc
and
(bad)
jmp
imul
rol
jno
jno
mov
les
gs
enter
(bad)
mov
ror
cdq
and
inc
das
add
test
xor
ret
add
out
adc
outs
mov
jle
aad
leave
lds
jo
hlt
(bad)
xor
(bad)
call
xchg
js
mov
mov
loopne
scas
push
adc
clc
out
test
cld
or
(bad)
adc
jmp
mul
inc
(bad)
(bad)
jmp
in
ret
pop
cmp
sub
repz
and
outs
jle
cld
(bad)
(bad)
(bad)
dec
test
xchg
inc
test
jl
arpl
popf
popf
cmp
out
movs
lods
outs
push
or
(bad)
call
sub
xor
(bad)
imul
xchg
push
sub
inc
and
cmc
(bad)
(bad)
jmp
xor
jne
mov
mov
push
dec
add
adc
fdiv
mov
(bad)
call
pop
jle
sti
ret
mov
pop
sub
es
xchg
or
(bad)
mov
mov
sti
jo
mov
cs
push
mov
repz
pop
jg
shl
inc
dec
jg
(bad)
mov
data16
pusha
addr16
xchg
mov
mov
mov
mov
fisubr
fdiv
out
adc
pop
lock
cmp
aad
js
repz
dec
sub
out
fdiv
cmp
mov
jb
or
mov
hlt
jge
enterw
inc
push
ins
into
leave
dec
mov
jae
lods
and
addr16
std
sbb
call
and
nop
sbb
mov
or
inc
iret
and
lods
mov
(bad)
movs
xchg
shl
test
ins
dec
in
sub
cli
popf
mov
(bad)
(bad)
mov
mov
mov
or
mov
cmp
les
add
cwde
fist
call
lods
aad
dec
pop
and
outs
(bad)
call
xor
sub
mov
push
jmp
xor
sbb
inc
add
pop
cmp
in
mov
cmp
cmp
fdiv
cwde
(bad)
mov
(bad)
pusha
or
adc
jno
je
cdq
cmp
dec
mov
fisub
(bad)
(bad)
(bad)
jmp
retf
push
xor
sub
xchg
pushf
(bad)
push
movs
retf
cli
mov
mov
sub
push
xchg
xchg
dec
add
and
lods
add
jmp
and
and
cmp
or
pop
pop
fprem
call
lds
daa
imul
fdiv
cli
mov
push
cmp
test
push
push
push
and
sub
mov
icebp
cmps
xor
ret
sbb
inc
push
test
test
xchg
rcl
or
bound
cmp
jmp
rcl
ror
xor
and
xor
push
lds
(bad)
(bad)
(bad)
(bad)
js
add
stos
gs
movs
icebp
dec
sub
bswap
sbb
xor
push
call
cld
(bad)
fist
ret
jo
sub
jg
mov
leave
dec
adc
sub
mov
test
call
xor
ret
(bad)
jmp
inc
add
and
jecxz
xor
into
pop
xchg
and
jmp
dec
inc
jmp
cli
fwait
push
xchg
fs
stc
add
sahf
mov
movs
dec
inc
(bad)
js
(bad)
(bad)
(bad)
call
mov
in
and
das
int3
call
fiadd
adc
mov
leave
mov
(bad)
dec
(bad)
cmps
call
stos
mov
(bad)
sbb
mov
and
(bad)
call
xor
xchg
dec
mov
adc
push
(bad)
jecxz
pop
mov
and
pop
and
and
or
fs
mov
push
in
inc
cmps
push
popa
jne
movs
movs
fadd
dec
or
cmp
cdq
sbb
mov
(bad)
dec
jbe
stc
jg
mov
(bad)
inc
lea
pop
dec
ins
fistp
(bad)
cdq
add
push
sbb
cmp
(bad)
jmp
idiv
mov
aaa
mov
dec
or
mov
(bad)
(bad)
jmp
xor
pop
cmp
cmp
inc
imul
outs
jg
in
cmc
cmp
call
iret
ja
mov
ret
push
sbb
push
std
sahf
aaa
sbb
test
cmp
scas
(bad)
sub
(bad)
loope
and
in
(bad)
sti
fs
dec
jo
inc
(bad)
(bad)
(bad)
mov
and
dec
mov
call
call
xchg
(bad)
(bad)
(bad)
out
retf
push
loopne
jae
and
call
jmp
adc
std
mov
int
(bad)
jg
cmp
fdiv
or
or
rcl
xor
stc
sbb
lahf
popf
pop
out
add
scas
fwait
push
mov
out
iret
xor
cmps
(bad)
(bad)
mov
mov
fadd
mul
fwait
dec
fs
mov
pusha
enter
(bad)
(bad)
call
mov
dec
xor
mov
jmp
ja
mov
out
into
xor
push
(bad)
loopne
(bad)
(bad)
(bad)
call
in
mov
imul
add
mov
sub
push
and
imul
je
clc
(bad)
fild
adc
inc
mov
imul
fistp
sti
pop
cwde
call
and
imul
(bad)
(bad)
mov
test
(bad)
ret
xchg
test
push
mov
xor
dec
dec
or
cmps
test
imul
adc
pop
dec
(bad)
call
loopne
cli
cdq
inc
mov
xchg
cmps
inc
lods
mov
xchg
or
mov
(bad)
(bad)
fiadd
sub
push
movs
or
mov
mov
std
push
dec
pop
xchg
jbe
dec
mov
sahf
jae
jb
loopne
test
(bad)
adc
js
nop
sub
cmp
and
inc
clc
shl
js
adc
mov
int3
mov
cmp
pop
push
inc
adc
jb
push
add
clc
xor
lods
mov
imul
mov
mov
arpl
cmp
leave
pop
adc
or
sbb
fdivr
pusha
add
(bad)
call
sub
cmps
mov
cmps
int3
leave
inc
jo
mov
rol
(bad)
call
sbb
mov
(bad)
sbb
(bad)
aam
dec
mov
fsubp
aas
dec
inc
dec
jns
or
add
mov
mov
shl
jle
(bad)
(bad)
(bad)
(bad)
fdiv
repz
add
js
mov
cmp
(bad)
pop
loop
pop
rcl
call
dec
retf
cmp
or
sub
xlat
fwait
scas
jno
in
in
into
xlat
cvtps2pi
add
cmp
out
popf
mov
aaa
pop
iret
xchg
popf
movs
push
sbb
call
jg
out
cmp
fadd
(bad)
(bad)
(bad)
stc
shl
xor
or
icebp
test
mov
(bad)
mov
call
aas
pop
aaa
in
fld
jne
sar
(bad)
jmp
sub
loop
xchg
jb
stc
xchg
test
jmp
call
call
adc
cmp
xchg
mov
ror
jle
(bad)
(bad)
cmp
das
jb
sub
call
rol
scas
loopne
adc
call
cwde
inc
test
shl
mov
imul
push
xchg
shr
mov
sub
icebp
mov
sti
scas
in
or
sbb
imul
inc
push
test
aaa
cmp
jp
push
call
xor
mov
ja
scas
add
jmp
bound
push
cdq
adc
mov
push
inc
dec
inc
adc
nop
das
clc
(bad)
call
inc
jns
shl
adc
pushf
or
shl
adc
out
aaa
dec
dec
test
(bad)
out
mov
(bad)
mov
add
xchg
and
test
cli
cdq
movs
popf
lahf
cwde
fidiv
mov
push
std
mov
in
sbb
mov
sub
xchg
(bad)
(bad)
jmp
rdtsc
shr
retf
outs
mov
push
sub
sub
jl
jns
(bad)
(bad)
call
out
xchg
mov
push
dec
aam
int3
xchg
(bad)
cmp
push
enter
jnp
push
dec
mov
(bad)
(bad)
(bad)
dec
in
cmp
test
add
push
and
sbb
cmp
(bad)
(bad)
(bad)
(bad)
cld
inc
cdq
mov
sbb
xchg
add
sar
push
sbb
cmps
add
(bad)
(bad)
(bad)
inc
fistp
mov
inc
or
or
jo
gs
adc
(bad)
fst
dec
call
ds
repz
in
iret
mov
cld
cwde
and
sbb
xchg
movs
mov
inc
push
jl
cli
or
(bad)
dec
or
shl
and
(bad)
ins
sub
cmp
(bad)
(bad)
(bad)
jmp
sbb
outs
retf
rcl
jns
mov
jp
inc
cld
sub
sar
mov
xor
add
lock
jmp
sbb
inc
inc
scas
mov
sub
les
dec
xchg
inc
popa
sahf
mov
xchg
lds
pop
dec
xchg
xchg
je
loop
add
loopne
mov
or
inc
(bad)
(bad)
(bad)
dec
(bad)
out
adc
or
test
retf
mov
jecxz
mov
loopne
jmp
jmp
cmc
cs
repnz
push
aas
cli
lock
mov
mov
call
or
call
cmp
mov
dec
cmp
jns
xchg
mov
fistp
jmp
call
mov
in
mov
cwde
or
fld
inc
sub
aas
std
scas
clc
packsswb
popa
xchg
cmp
out
daa
loopne
(bad)
fiadd
(bad)
(bad)
inc
mov
scas
sar
test
ss
jmp
stc
jns
jge
jo
(bad)
(bad)
(bad)
jmp
scas
jmp
aam
div
fs
mov
stc
xchg
(bad)
out
push
pop
stc
in
(bad)
xor
bound
mov
mov
movs
clc
or
sbb
(bad)
(bad)
(bad)
out
fsub
dec
ins
xchg
(bad)
push
jae
dec
fst
push
mov
or
mov
das
dec
inc
clc
(bad)
jg
or
and
xchg
pop
aas
add
sar
(bad)
(bad)
in
(bad)
jno
dec
fsubr
test
push
clc
fadd
iret
mov
ret
mov
(bad)
jo
fist
dec
(bad)
dec
(bad)
jmp
and
retf
into
sub
adc
push
push
dec
scas
push
(bad)
out
jo
nop
je
pop
stos
data16
cmp
mov
xchg
(bad)
jmp
jo
mov
add
mul
and
repz
dec
test
mov
rcl
sub
data16
adc
push
push
(bad)
(bad)
jp
and
outs
stos
fnsave
mov
sbb
neg
retf
inc
je
xchg
mov
ss
cmp
mov
adc
add
fild
shl
mov
int3
cmc
mov
fist
call
popf
dec
or
and
add
push
xor
or
cld
out
jle
cmps
jge
shl
push
std
or
movs
loopne
(bad)
jae
(bad)
mov
call
push
je
(bad)
call
js
shr
mov
push
push
push
or
outs
jecxz
retf
lock
and
test
(bad)
(bad)
(bad)
mov
cmp
dec
loopne
rol
dec
fnstenv
retf
push
inc
and
fs
push
mov
or
mov
push
sbb
sbb
fs
inc
(bad)
nop
sbb
jnp
add
in
(bad)
call
xor
ja
mov
lods
hlt
cld
(bad)
mov
and
mov
das
jle
cdq
cs
xor
sub
mov
xchg
(bad)
(bad)
(bad)
jg
mov
pusha
inc
rol
jmp
loopne
cwde
mov
xor
pop
fisttp
fdiv
call
scas
dec
sub
sub
rcr
sar
(bad)
(bad)
out
cwde
je
cmp
mov
ret
push
(bad)
(bad)
(bad)
mov
clc
push
cwde
and
fnstsw
std
call
sbb
sub
cmp
mov
(bad)
(bad)
call
xchg
ror
jecxz
mov
outs
(bad)
jo
aas
mov
mov
lock
(bad)
(bad)
fnstsw
imul
cld
mov
pop
jp
sbb
cmp
or
dec
(bad)
jle
dec
adc
cmp
(bad)
(bad)
dec
cmp
(bad)
sbb
sbb
loope
and
sbb
retf
or
sar
rcl
cmp
cmc
out
(bad)
(bad)
call
int3
shl
xchg
lds
int
fsubp
fmul
cdq
bound
mov
pop
pop
(bad)
(bad)
jmp
and
mov
dec
dec
rcr
jbe
cmp
sub
add
(bad)
(bad)
call
fdiv
mov
outs
out
aas
loopne
xchg
jecxz
dec
iret
push
fmul
loope
dec
lock
push
test
xchg
sub
mov
lods
shl
ror
(bad)
call
or
aas
push
aas
jns
leave
mov
pop
xchg
and
aaa
cld
jmp
scas
dec
xor
ja
inc
and
cdq
fnsave
es
and
(bad)
(bad)
call
xchg
in
and
push
std
retf
int3
test
cmp
mov
test
push
xchg
sbb
pop
loopne
gs
adc
push
sti
dec
adc
sahf
mov
sbb
in
sub
mov
(bad)
dec
mov
retf
cmps
inc
cmp
dec
and
push
icebp
cmp
ror
mov
lods
push
(bad)
clc
and
sahf
fwait
inc
jbe
in
add
adc
push
xchg
xchg
mov
or
dec
lds
jmp
pop
push
int3
cld
fmul
dec
xlat
push
out
push
ret
retf
adc
dec
add
ds
test
add
mov
repz
aad
(bad)
(bad)
dec
cmp
xor
into
xchg
outs
add
sbb
add
sbb
(bad)
mov
call
clc
daa
loop
push
aas
inc
push
add
mov
push
ins
inc
adc
retf
fst
push
aas
lock
mov
std
out
and
dec
cmps
mov
(bad)
(bad)
inc
cmp
leave
inc
adc
pop
std
inc
ret
sbb
ret
leave
cmp
test
(bad)
(bad)
(bad)
inc
mov
lods
xchg
or
sub
out
not
adc
cmp
mov
aad
inc
dec
(bad)
(bad)
(bad)
jmp
xchg
sub
or
inc
mov
fsub
in
add
aam
mov
dec
bound
ud0
(bad)
(bad)
(bad)
xor
out
sub
mov
(bad)
and
jg
hlt
popa
hlt
push
pop
sub
adc
outs
jp
and
in
push
mov
dec
inc
sbb
and
int3
adc
mov
push
add
test
add
icebp
dec
add
cld
xchg
mov
jmp
pop
(bad)
(bad)
(bad)
push
repz
aaa
dec
xor
js
mov
iret
dec
mov
cmpxchg
mov
test
pop
(bad)
scas
jmp
pop
out
mov
shr
xlat
cmp
std
call
xor
xchg
and
in
shl
or
xchg
imul
repz
in
jg
stc
vpaddd
sbb
mov
fisubr
adc
out
(bad)
pop
cmp
or
mov
fwait
or
test
xchg
xchg
inc
pop
jnp
dec
xchg
cmp
ror
(bad)
dec
scas
pop
xlat
cld
les
(bad)
pusha
jne
in
(bad)
clc
fild
rcr
clc
mov
add
adc
call
and
sbb
push
xlat
and
je
repnz
xchg
(bad)
(bad)
(bad)
(bad)
jmp
jae
sbb
(bad)
iret
jns
sbb
je
fiadd
out
mov
cs
rcl
aam
(bad)
stos
(bad)
inc
push
adc
cmp
jmp
and
call
jge
int3
loop
mov
inc
int
xchg
dec
out
retf
lods
jne
cmp
movs
(bad)
push
movs
dec
and
and
adc
mov
aaa
mov
test
xor
(bad)
inc
jle
out
lea
jno
inc
inc
fbld
cmp
adc
mov
xor
icebp
mov
mov
sbb
xchg
imul
mov
sbb
fwait
xor
(bad)
cmp
push
inc
mov
xchg
add
fmul
(bad)
call
mov
dec
aas
mov
paddsw
jne
xchg
cmp
adc
jmp
mov
xor
jbe
mov
xor
loopne
dec
nop
push
fnop
push
pop
cmp
(bad)
cmp
xchg
scas
xlat
in
call
mov
mov
ror
jno
pop
mov
push
pusha
push
push
ret
dec
and
and
mov
cmps
add
loopne
stc
pusha
in
(bad)
(bad)
(bad)
(bad)
(bad)
call
retf
pop
push
add
mov
ds
sub
mov
(bad)
lds
mov
pop
add
loop
add
pop
or
scas
cs
push
(bad)
cmp
test
cwde
cwde
or
lock
pop
or
(bad)
jg
jmp
(bad)
jmp
sub
xchg
xor
out
sub
or
(bad)
(bad)
cmp
cmp
xor
jge
cmps
aad
xor
sub
cmp
jb
rcr
jmp
stos
mov
push
fs
in
jmp
or
sub
inc
(bad)
(bad)
(bad)
jmp
cld
cwde
stc
sub
sub
inc
data16
mov
jb
into
fidivr
xchg
in
xchg
adc
push
mov
add
sbb
pop
and
inc
xor
mov
repnz
pop
xor
dec
cwde
es
(bad)
(bad)
call
jne
jbe
(bad)
sbb
mov
sub
push
repnz
sub
push
mov
add
(bad)
(bad)
call
lock
ds
pop
jle
(bad)
pop
mov
cmp
repz
(bad)
(bad)
(bad)
jmp
xchg
out
push
sbb
sbb
xchg
add
inc
imul
scas
sub
and
(bad)
(bad)
jmp
mov
mov
pop
fisub
xchg
pop
mov
imul
or
sbb
or
inc
imul
jae
aas
pushf
shl
into
adc
ficomp
pop
xor
push
cmps
(bad)
(bad)
(bad)
dec
cmp
(bad)
(bad)
(bad)
out
dec
xlat
push
xchg
jg
mov
scas
ins
mov
out
fbstp
out
jg
sub
mov
outs
push
pop
pop
in
mov
test
xchg
lock
push
cmc
push
mov
pop
jmp
xor
ja
jmp
xor
clc
(bad)
dec
xchg
clc
sbb
adc
push
neg
jecxz
mov
inc
(bad)
jmp
jge
sub
add
fwait
(bad)
call
inc
loopne
adc
repz
mov
aam
lea
xchg
arpl
adc
hlt
call
adc
test
pop
add
sbb
xchg
jmp
fdivr
and
imul
sar
dec
jno
pop
popa
mov
aam
xchg
in
sub
inc
test
sti
dec
das
pop
cmc
inc
sub
xchg
mov
(bad)
mov
test
xchg
jmp
in
daa
scas
dec
or
add
add
(bad)
dec
adc
inc
es
test
adc
sub
int
pop
add
push
dec
push
icebp
outs
inc
(bad)
(bad)
(bad)
jmp
inc
xor
and
jmp
lods
frstor
ss
scas
test
std
mov
xchg
dec
fdivr
mov
adc
es
cs
fs
sub
(bad)
call
xor
cwde
test
cmp
clc
mov
jns
movs
push
mov
(bad)
(bad)
jmp
js
test
push
jns
sbb
add
push
and
push
sub
(bad)
(bad)
call
aaa
pusha
(bad)
adc
sbb
mov
and
scas
imul
pop
jne
scas
clc
call
cli
movs
jge
dec
cwde
movs
inc
lods
xchg
mov
xor
inc
inc
pop
jge
fmul
xchg
xchg
mov
push
xchg
or
jmp
adc
mov
and
fs
push
(bad)
jmp
sub
fbld
jge
or
add
(bad)
(bad)
(bad)
fld
mov
cmc
sti
arpl
int3
pop
inc
pop
or
cmp
xor
and
pop
fbld
push
push
aad
jae
inc
test
pmullw
jg
(bad)
mov
icebp
nop
add
sti
mov
jbe
add
xchg
call
stos
push
loope
push
hlt
adc
dec
loop
push
sti
inc
ror
push
(bad)
fist
(bad)
(bad)
(bad)
jmp
xor
icebp
inc
and
mov
mov
dec
or
mov
push
push
mov
push
lds
pop
dec
and
xor
add
in
test
(bad)
(bad)
(bad)
(bad)
jge
lea
aaa
adc
stos
or
xchg
and
mov
ds
add
aad
jp
(bad)
(bad)
(bad)
jmp
ja
mov
fistp
inc
outs
mov
mov
aas
push
outs
sbb
int
cmp
(bad)
(bad)
call
movs
(bad)
xchg
xchg
ja
xor
mov
pop
shl
mov
call
dec
(bad)
call
mov
adc
lahf
movsx
fwait
xor
inc
ja
dec
out
(bad)
(bad)
call
and
mov
cmps
xor
sbb
cld
push
sbb
in
xchg
adc
cmp
and
(bad)
(bad)
(bad)
mov
lea
mov
jl
in
test
and
ja
call
lods
xchg
jl
add
inc
and
or
lds
ins
aam
inc
and
adc
sbb
sbb
mov
xchg
cmc
(bad)
pop
ja
outs
aam
call
(bad)
jbe
aaa
xchg
jmp
es
xchg
sbb
(bad)
call
mov
mov
test
cmp
clc
xor
fst
cld
(bad)
call
pop
lods
out
mov
fwait
int
push
push
test
(bad)
jmp
push
in
mov
mov
sub
dec
and
cmp
jl
mov
mov
adc
dec
rol
sahf
xor
dec
xchg
mov
call
jmp
dec
xlat
pop
push
sub
inc
xor
mov
jecxz
dec
xor
inc
push
cmp
mov
add
call
aam
jmp
ror
or
cmp
into
rcl
sbb
(bad)
(bad)
(bad)
dec
test
popf
or
bound
out
and
push
sti
fs
pop
mov
(bad)
jmp
push
dec
call
in
stos
or
xchg
inc
sbb
mov
int3
inc
cmp
sbb
xor
ret
retf
jno
shl
in
push
imul
mov
(bad)
jmp
mov
loope
xchg
fwait
cmp
int
in
iret
dec
inc
ret
es
aam
fcomp
popf
popf
mov
cmp
outs
push
push
add
mov
dec
das
outs
add
scas
push
shl
repz
dec
and
rcl
popf
arpl
(bad)
(bad)
(bad)
(bad)
jmp
int
lods
dec
cld
push
test
retf
jp
or
cmp
and
or
(bad)
call
out
icebp
mov
xlat
repnz
retf
inc
retf
(bad)
(bad)
call
mov
jl
fdivr
xchg
push
fxch
pop
adc
mov
fdivrp
(bad)
(bad)
jmp
cwde
xchg
mov
int
out
test
mov
add
inc
or
xchg
pop
(bad)
lock
dec
aam
or
pusha
sbb
dec
dec
lea
jle
mov
lds
adc
push
mov
mov
mov
mov
das
shr
shl
inc
std
lock
xchg
popa
inc
cmps
pusha
pop
pop
cmp
mov
ins
cmp
pop
fidiv
out
ins
mov
mov
push
(bad)
(bad)
(bad)
dec
cli
out
cld
cli
call
mov
into
movs
cmp
mov
shl
int3
sbb
lds
(bad)
jg
mov
jo
mov
and
push
push
cmps
mov
sbb
(bad)
(bad)
(bad)
jmp
repnz
ds
cwde
or
mov
and
pusha
ret
fdivrp
xchg
and
push
jg
and
inc
stc
xor
and
and
xor
cmps
int3
pop
out
xchg
hlt
pop
cli
in
jle
jecxz
mov
adc
jg
fsubrp
call
in
pop
cmp
jecxz
xor
jmp
addr16
test
jmp
les
retf
push
addr16
ror
or
(bad)
(bad)
out
out
cmp
(bad)
(bad)
(bad)
(bad)
jmp
sti
and
or
in
outs
mov
inc
or
inc
pop
add
daa
sbb
jmp
(bad)
(bad)
jmp
sub
movs
ret
push
adc
rcr
rcl
xchg
in
mov
mov
add
push
add
lahf
fisub
or
xchg
or
(bad)
(bad)
push
ret
cmps
aaa
xor
xor
out
jle
cmp
xchg
das
pop
in
fdivr
mov
(bad)
(bad)
call
pop
mov
adc
sub
in
sar
adc
stos
push
sub
(bad)
jmp
std
loope
int
aaa
xor
adc
loopne
mov
test
(bad)
jmp
rcl
pusha
das
push
pop
inc
mov
in
adc
or
movs
and
cmp
(bad)
(bad)
(bad)
cmps
push
and
pop
cmp
aaa
icebp
les
push
call
inc
xlat
xor
es
pop
and
aad
fst
repz
das
rcl
popa
or
add
repz
inc
jo
jne
push
rol
push
pop
add
mov
mov
psubsb
adc
xlat
mov
sub
movs
iret
add
ss
clc
(bad)
test
or
sbb
jbe
sar
sbb
lods
ins
adc
xor
in
push
push
mov
jmp
out
mov
test
mov
push
adc
dec
clc
pop
inc
mov
(bad)
push
fwait
jbe
fdivr
in
cmp
cmps
mov
or
and
retf
test
loop
xor
sub
(bad)
jmp
mov
add
mov
and
jno
std
stos
jp
mov
add
inc
and
stos
lods
jnp
push
push
sub
jae
pushf
cmps
pop
adc
xchg
sub
or
(bad)
(bad)
(bad)
mov
imul
sbb
hlt
lods
cmc
xor
dec
sbb
iret
pop
pop
test
imul
or
sbb
(bad)
jmp
imul
and
push
jno
(bad)
(bad)
(bad)
(bad)
jmp
mov
mov
xlat
std
std
sti
mov
fcmovnu
cmp
sbb
mov
pop
std
jmp
movs
push
mov
out
ret
aam
mov
das
scas
(bad)
(bad)
and
(bad)
inc
pop
mov
stc
xchg
(bad)
(bad)
cmps
arpl
nop
test
mov
(bad)
inc
daa
lea
add
retf
and
sbb
sub
xchg
jo
fld
pusha
inc
xchg
sub
(bad)
(bad)
call
ret
sbb
pop
das
mov
push
cmps
or
retf
pop
test
mov
jecxz
xlat
loope
sub
xlat
(bad)
jmp
scas
and
pop
aam
(bad)
add
neg
add
clc
jmp
in
pushf
fwait
repz
lock
sbb
loopne
add
inc
mov
mov
pop
xchg
fbld
(bad)
(bad)
push
inc
fnsave
inc
mov
hlt
scas
jns
pop
xchg
(bad)
(bad)
(bad)
push
(bad)
push
inc
dec
enter
int
add
pusha
loop
mov
mov
stos
inc
push
add
push
jg
xchg
push
pop
jo
jo
or
sbb
and
push
lods
hlt
jp
call
cdq
leave
push
push
inc
sbb
push
adc
mov
(bad)
call
pop
retf
sub
repnz
dec
aaa
hlt
add
sub
push
or
clc
mov
aaa
mov
dec
fidivr
lock
cwde
jmp
lods
sbb
cmp
(bad)
(bad)
push
mov
cmps
shr
sbb
movs
mov
les
push
or
lods
ins
mov
sbb
jg
shl
scas
sub
xor
(bad)
sbb
(bad)
out
repnz
xlat
fdiv
mov
lock
(bad)
mov
outs
xchg
sub
jo
push
dec
xchg
loope
movs
sub
data16
sub
psubsw
je
pop
inc
push
aas
inc
out
in
pushf
jl
push
dec
xlat
mov
(bad)
cld
stos
and
jns
(bad)
fsubr
sbb
(bad)
repz
lahf
retf
sub
mov
mov
data16
div
cmp
xor
push
push
mov
cmps
dec
sbb
cmovo
pop
(bad)
(bad)
(bad)
(bad)
inc
scas
xor
mov
mov
test
jl
outs
or
dec
ins
adc
ror
xchg
and
jb
dec
and
add
and
add
pop
push
dec
scas
nop
in
(bad)
(bad)
(bad)
(bad)
jmp
in
sub
inc
loopne
mov
out
sbb
add
sbb
(bad)
(bad)
inc
scas
sbb
cdq
imul
lds
out
in
popf
inc
jo
clc
movs
jmp
jae
iret
jne
xchg
mov
dec
mov
out
sub
mov
je
retf
xchg
mov
and
dec
mov
sub
push
sbb
adc
xchg
outs
adc
aam
pop
mov
and
mov
cmc
das
(bad)
fistp
ficomp
inc
sub
stc
mov
std
sub
add
fs
push
push
push
sub
cdq
rol
mov
js
popa
out
cmp
inc
shl
in
(bad)
(bad)
push
jno
dec
js
in
push
push
dec
shl
or
pop
daa
jmp
push
loop
push
je
inc
push
dec
mov
pop
fidivr
or
stos
jb
cld
(bad)
dec
jmp
mov
ins
pop
jmp
icebp
cs
and
test
inc
daa
or
(bad)
(bad)
call
mov
cli
sub
xchg
dec
or
pop
scas
(bad)
push
xchg
mov
das
clc
sbb
cs
retf
push
aam
jno
mov
sub
xchg
ja
pop
xor
(bad)
aas
and
xor
fist
fwait
cwde
mov
retf
lods
dec
push
in
pop
jns
push
or
(bad)
call
inc
adc
dec
or
in
bnd
rol
pushf
ret
lock
les
xor
jmp
or
popf
inc
cmp
leave
fcom
mov
mov
icebp
jo
test
retf
mov
xlat
inc
or
repz
test
pop
pop
xchg
cmovo
(bad)
(bad)
jmp
test
or
sbb
add
(bad)
xor
je
loop
add
jo
aam
or
or
call
dec
dec
repnz
cmp
popf
mov
push
inc
cwde
shl
rcr
push
out
and
dec
ret
call
daa
and
push
or
js
and
cmp
or
(bad)
call
adc
aad
loopne
inc
jp
and
or
or
mov
add
out
jg
mov
nop
lahf
and
inc
ret
rcr
push
ins
add
(bad)
(bad)
fistp
push
jne
aam
inc
mov
push
sti
popa
bound
push
cmp
mov
out
(bad)
(bad)
call
cli
int3
adc
mov
(bad)
(bad)
pop
dec
out
(bad)
jmp
mov
scas
(bad)
(bad)
(bad)
jmp
test
xor
jbe
sub
or
jmp
cwde
mov
add
inc
int3
jbe
add
push
add
pop
dec
jl
call
xchg
pop
dec
cli
sbb
sbb
loop
xchg
mov
imul
(bad)
(bad)
push
scas
mov
jmp
out
ds
sbb
repz
pushf
fbstp
pop
fwait
imul
sbb
cmovno
lds
data16
cmc
icebp
jmp
mov
es
xchg
ret
jno
lock
stos
add
adc
jg
and
jo
cmp
jmp
loop
jmp
(bad)
push
xor
mov
add
add
in
in
sub
(bad)
call
test
jl
dec
mov
in
pop
shr
mov
fdiv
mov
arpl
(bad)
(bad)
aas
hlt
adc
jns
sub
xor
jge
stos
pop
xor
add
lods
fldcw
mov
xchg
sub
and
(bad)
inc
push
stos
scas
ja
jle
and
adc
into
pushf
mov
scas
outs
enter
test
out
mov
outs
aam
xlat
inc
test
(bad)
jg
mov
xchg
outs
sbb
ins
mov
cmp
outs
jne
lea
mov
(bad)
call
or
adc
add
jno
idiv
lods
sar
(bad)
(bad)
xor
mov
or
ret
or
shr
push
pop
jecxz
loop
das
(bad)
mov
loope
(bad)
dec
mov
jb
test
xchg
lea
rol
push
fwait
mov
int
(bad)
(bad)
mov
jge
xor
data16
ret
adc
adc
(bad)
(bad)
(bad)
jmp
pop
push
sbb
mov
cmp
gs
adc
mov
test
(bad)
(bad)
(bad)
call
ss
mov
pop
popa
mov
mov
movs
pop
repnz
inc
fisttp
scas
stos
cmp
call
push
lock
and
push
clc
mov
shl
xchg
nop
mov
lods
(bad)
(bad)
call
sar
push
cmp
clc
pop
aas
mov
leave
in
add
fdiv
dec
(bad)
mov
bound
pop
add
inc
mov
mov
outs
aam
push
jae
mov
pop
jmp
or
cmc
(bad)
call
and
push
fcomp
scas
ret
pop
daa
ds
adc
pop
cmp
dec
cmp
mov
(bad)
std
cmp
in
push
cs
loopne
pusha
sbb
(bad)
(bad)
(bad)
call
pop
out
cwde
sub
or
icebp
enter
dec
xor
mov
test
and
(bad)
ret
dec
dec
in
sub
mov
scas
push
fwait
test
fcos
jmp
lock
and
mov
out
sar
mov
xchg
mov
(bad)
fbld
mov
xchg
je
in
bound
aam
test
(bad)
jns
xchg
ret
arpl
and
ret
pop
or
mov
movs
dec
pop
call
lock
in
xor
jmp
daa
push
push
xchg
mov
mov
cmps
push
adc
mov
iret
out
mov
loope
mov
sbb
(bad)
call
test
pop
sbb
lock
cmp
(bad)
(bad)
jmp
cmc
(bad)
mov
pop
add
and
jl
push
inc
inc
pop
push
out
imul
(bad)
call
jle
push
adc
add
test
loop
fcom
sbb
xor
movs
aaa
std
pop
std
mov
jl
(bad)
hlt
sbb
mov
sti
xor
xchg
mov
aam
inc
fisubr
sti
sub
mov
jmp
(bad)
fxch
push
(bad)
(bad)
(bad)
call
movs
and
pop
and
shr
xchg
gs
mov
jmp
dec
inc
push
jb
adc
add
push
cmps
add
mov
and
pop
cmp
movs
(bad)
(bad)
(bad)
jg
data16
adc
xchg
push
pushf
mov
add
sbb
inc
ficomp
cld
xchg
or
retf
jle
test
(bad)
jg
ss
js
lods
hlt
xor
out
ret
imul
push
stos
(bad)
(bad)
(bad)
push
je
xor
fisttp
shl
pop
jp
je
stc
adc
xchg
adc
cld
(bad)
jmp
push
test
mov
dec
adc
adc
jae
fcomp
xor
(bad)
jg
add
adc
dec
inc
popf
rcl
movs
(bad)
jg
cmp
or
and
jb
xchg
push
in
cs
mov
mov
(bad)
(bad)
dec
and
mov
or
sahf
dec
pop
push
mov
mov
mov
and
(bad)
(bad)
(bad)
mov
and
add
call
inc
outs
jns
sub
retf
xlat
sub
(bad)
(bad)
(bad)
jmp
mov
cmp
aas
adc
push
sub
mov
(bad)
nop
dec
lods
jb
xchg
pop
inc
mov
mov
mov
cmp
(bad)
adc
adc
movs
xor
mov
mov
packuswb
lds
pop
sti
shl
(bad)
fcomip
fnsave
sti
int
mov
jo
mov
mov
cmps
mov
call
in
dec
(bad)
(bad)
(bad)
inc
mov
adc
add
aad
push
jg
pop
std
inc
movs
js
jmp
mov
xchg
add
push
adc
(bad)
repz
sub
mov
stos
inc
pop
mov
xchg
lods
lods
push
cdq
cmp
(bad)
inc
sub
lahf
sub
shl
push
mov
sub
stos
mov
and
scas
mov
inc
mov
stos
push
and
popa
pop
mov
stc
out
pop
jns
iret
(bad)
fmul
rol
cdq
(bad)
dec
adc
data16
jp
push
pusha
xchg
repnz
ins
lods
push
cmps
add
and
loope
jmp
repnz
icebp
inc
lahf
mov
jmp
mov
std
sbb
sub
fbstp
xlat
xor
jmp
push
sub
jae
push
sar
sbb
sub
mov
and
lahf
stc
ret
(bad)
push
xchg
mov
mov
(bad)
jg
std
(bad)
sbb
arpl
mov
xchg
push
inc
or
or
repnz
xor
mov
pop
adc
adc
sahf
out
fimul
popf
aas
(bad)
(bad)
call
inc
ds
nop
stos
dec
jbe
into
(bad)
pop
xchg
add
dec
adc
jmp
adc
dec
shl
pop
adc
cmp
or
mov
imul
ret
adc
lea
jnp
push
push
call
push
imul
jmp
or
out
jmp
mov
rcl
mov
push
out
aam
inc
pop
push
and
push
clc
movs
out
or
cmp
or
aad
call
(bad)
(bad)
inc
sub
xor
jbe
push
cmps
mov
inc
sbb
adc
(bad)
mov
cwde
jae
jo
push
aaa
(bad)
xchg
clc
cli
jl
or
in
imul
jmp
(bad)
fcom
outs
(bad)
mov
xchg
scas
and
ficomp
es
push
mov
loopne
leave
out
pop
adc
and
(bad)
(bad)
(bad)
fucomi
(bad)
xchg
or
inc
cdq
push
adc
aaa
clc
add
cmp
loope
mov
push
inc
clc
(bad)
mov
pop
or
jmp
or
(bad)
call
ss
mov
js
mov
xor
aas
(bad)
icebp
dec
call
push
out
jg
sbb
frstor
int
xor
cmp
pop
shr
mov
or
add
jle
jp
jnp
(bad)
(bad)
(bad)
push
rcl
and
lds
xor
cmps
cmp
xchg
adc
pusha
pop
mov
sbb
fwait
(bad)
aaa
dec
mov
and
lods
aam
push
mov
icebp
outs
clc
jg
xchg
xor
xchg
ins
inc
adc
add
bound
aaa
cld
(bad)
fucomip
int3
aam
jmp
(bad)
cld
push
ins
mov
mov
cmps
hlt
jmp
mov
out
jle
xor
pushf
(bad)
(bad)
(bad)
call
test
repz
sbb
(bad)
push
inc
sub
and
mov
or
(bad)
(bad)
call
or
and
js
shr
mov
xor
adc
mov
out
out
outs
aaa
in
fdivrp
js
mov
hlt
(bad)
cmp
xor
jl
(bad)
(bad)
(bad)
inc
sahf
daa
xchg
xchg
jp
leave
scas
out
pop
retw
mov
mov
aas
dec
and
pop
imul
repnz
(bad)
jmp
mov
mov
mov
dec
xchg
lods
xchg
push
adc
fwait
add
xlat
push
cdq
test
ss
or
div
mov
(bad)
(bad)
inc
xor
xor
push
sbb
mov
pop
fs
hlt
mov
cmp
(bad)
(bad)
jmp
push
jl
or
cmc
stc
jb
pop
sub
xor
mov
cmp
(bad)
dec
aaa
out
mov
jecxz
std
(bad)
(bad)
call
mov
enter
fidivr
das
adc
mov
pop
lods
add
mov
push
(bad)
pop
xor
ror
xor
or
daa
(bad)
(bad)
(bad)
(bad)
jmp
sbb
test
enter
out
cmp
ret
sbb
movs
dec
cld
(bad)
(bad)
inc
loopne
mov
fld
stos
xor
dec
dec
mov
lods
pop
shl
call
in
(bad)
cmp
sub
arpl
and
add
fdiv
pop
inc
and
inc
daa
(bad)
(bad)
(bad)
fbstp
xchg
push
jns
and
fstp
inc
call
shr
xchg
clc
(bad)
(bad)
(bad)
jmp
mov
inc
cmp
mov
sbb
push
sub
inc
adc
sbb
outs
sub
dec
das
shr
lea
fnstcw
mov
(bad)
movs
cs
je
mov
cmps
pop
ja
xlat
mov
pop
mov
loopne
cmp
push
scas
dec
imul
inc
int
dec
popf
inc
cmp
cmp
test
ja
mov
cmp
(bad)
(bad)
(bad)
jg
adc
xchg
fwait
mov
cmp
and
(bad)
push
pop
cli
and
aas
or
xchg
icebp
std
sub
cwde
(bad)
jmp
or
mov
or
xchg
mov
sub
cs
cld
clc
aaa
sbb
(bad)
adc
fcomip
stos
ins
(bad)
jmp
add
jg
xchg
jg
jg
leave
adc
pop
retf
test
cld
inc
ficomp
int3
ret
popa
xchg
jo
push
inc
sub
loop
(bad)
(bad)
inc
nop
jl
jno
(bad)
xor
enter
std
rcr
fwait
pop
jg
stos
fsubr
jp
dec
xchg
inc
dec
int3
inc
(bad)
(bad)
(bad)
call
inc
add
or
test
add
test
push
push
cwde
out
stc
retf
cld
(bad)
(bad)
jmp
mov
stos
scas
mov
mov
xchg
sub
sbb
sub
(bad)
(bad)
add
add
mov
xchg
stos
jnp
icebp
shr
out
cmp
ror
sahf
jp
push
test
arpl
cmp
ja
and
fcomip
(bad)
inc
push
loop
shl
loop
dec
sub
movs
sahf
popf
jmp
icebp
(bad)
call
loopne
mov
jp
(bad)
mov
pop
int3
mov
jbe
and
inc
(bad)
(bad)
(bad)
(bad)
jg
ret
xor
dec
pop
or
call
mov
push
pop
pop
in
idiv
jecxz
mov
xor
out
leave
das
outs
adc
push
cli
push
stos
nop
stos
mov
sub
ins
ret
(bad)
inc
xchg
test
push
nop
sti
stos
jecxz
nop
hlt
inc
pop
and
ins
cdq
sub
push
test
and
in
mov
fld
cmp
and
test
das
pop
add
test
sub
inc
das
pop
cmp
pop
(bad)
loopne
nop
stc
jnp
sbb
outs
clc
(bad)
jmp
xor
pop
std
and
fst
mov
lods
dec
or
or
adc
xchg
mov
imul
std
and
jp
xor
jg
test
pop
xor
frstor
jo
sar
(bad)
call
or
or
sbb
icebp
sub
rol
ret
nop
movs
jg
cld
mov
frstor
imul
mov
es
in
lods
scas
ret
xor
or
sub
push
jae
(bad)
pop
inc
sbb
inc
and
adc
pop
outs
aaa
repnz
(bad)
jg
dec
and
add
or
sbb
push
in
xchg
aaa
call
clc
outs
xchg
mov
push
or
or
jmp
loope
xchg
(bad)
(bad)
jmp
loope
mov
imul
enter
jno
cmp
and
mov
sub
rcr
jmp
pushf
fwait
retf
push
loop
call
mov
cmp
ret
in
je
pop
repnz
popf
stos
stos
(bad)
(bad)
(bad)
call
imul
fdivp
jle
aad
and
sub
mov
(bad)
(bad)
mov
call
adc
jl
sub
(bad)
rcl
sbb
add
call
pop
sub
inc
dec
int
cli
mov
sbb
(bad)
call
and
sbb
sbb
xor
outs
in
rcl
and
lods
in
xchg
cmp
daa
(bad)
(bad)
(bad)
xchg
and
sar
and
pop
fidivr
addr16
lock
movs
mov
and
jg
dec
jg
inc
xchg
mov
pop
inc
scas
lea
or
push
fs
cdq
xor
lock
(bad)
(bad)
push
sbb
jae
into
and
add
dec
rcl
mov
fisttp
shl
sub
stos
(bad)
inc
or
adc
sub
xchg
in
jge
mov
add
pusha
ins
outs
scas
test
(bad)
mov
(bad)
(bad)
call
in
pop
jmp
dec
xchg
cmps
lea
adc
mov
jb
xchg
sub
(bad)
(bad)
dec
and
aas
dec
sar
adc
push
cmp
xor
inc
adc
(bad)
adc
(bad)
jmp
inc
loopne
stos
or
aaa
shr
sub
sub
pop
xchg
inc
icebp
(bad)
(bad)
call
and
repz
and
inc
push
ins
mov
inc
jge
(bad)
(bad)
call
xrstors
sbb
shl
inc
cmp
test
hlt
(bad)
(bad)
push
push
fild
or
mov
cdq
pop
out
mov
jmp
(bad)
(bad)
call
outs
repz
push
adc
js
dec
push
data16
add
jns
pop
adc
aam
mov
xlat
call
cmps
mov
xchg
loopne
sub
push
clc
(bad)
(bad)
dec
test
or
stos
mov
jmp
or
lods
int
(bad)
(bad)
out
cmp
shl
dec
push
test
pop
nop
mov
repnz
fadd
call
call
sub
sub
and
ret
bound
pop
sbb
jmp
(bad)
jp
and
xchg
xor
rcl
mov
xchg
retf
xor
push
out
push
(bad)
shl
dec
leave
je
sbb
sub
mov
add
addr16
mov
dec
cmp
xchg
test
aam
mov
push
push
push
mov
dec
shl
mov
scas
sbb
xchg
dec
ret
jno
cmovbe
jno
(bad)
(bad)
jmp
in
popa
scas
out
mov
stc
lods
jb
adc
jmp
adc
cdq
add
fnstcw
jmp
ror
(bad)
push
ret
jecxz
push
sub
mov
mov
and
xchg
inc
fidiv
push
(bad)
(bad)
(bad)
inc
fimul
sahf
rcr
int
mov
addr16
mov
sub
dec
lock
icebp
mov
jae
es
add
mov
mov
(bad)
(bad)
(bad)
dec
sbb
aam
loope
loopne
xchg
or
add
or
cmp
repnz
jno
(bad)
dec
fld
jo
add
hlt
pop
pop
dec
push
js
inc
lock
sbb
adc
sub
fst
addr16
fdiv
(bad)
lock
enter
call
loope
jmp
into
aas
cmc
retf
and
mov
retf
cmp
pop
loopne
jmp
push
outs
js
xchg
(bad)
sub
out
add
push
add
pop
xor
(bad)
(bad)
(bad)
fld
fistp
mov
(bad)
pop
jle
mov
in
out
fnstenv
nop
sar
push
je
(bad)
(bad)
mov
mov
popf
pop
test
mov
cwde
inc
ret
scas
(bad)
sahf
jle
(bad)
(bad)
(bad)
jmp
mov
push
(bad)
cmp
daa
inc
retf
int
and
les
pop
inc
(bad)
(bad)
(bad)
call
cld
push
xchg
adc
cmp
aas
int
and
fimul
push
adc
and
(bad)
(bad)
(bad)
dec
dec
dec
add
inc
cmp
push
sbb
ins
shl
call
and
jg
mov
cmps
inc
ret
loopne
leave
xor
or
movs
rcr
inc
xor
adc
jnp
mov
shr
jl
cld
cmp
pop
pop
push
jmp
sub
mov
xchg
push
cli
cmp
ja
loope
(bad)
(bad)
fstp
inc
shl
pushf
cmp
or
inc
push
call
movs
loopne
ret
add
mov
call
mov
sbb
call
fs
sbb
dec
push
xor
ret
mov
jae
mov
ins
(bad)
(bad)
(bad)
call
jge
inc
xor
test
sub
sbb
aaa
dec
and
lods
inc
frstor
cwde
out
(bad)
out
cli
call
retf
mov
sub
and
(bad)
jns
adc
xor
pusha
adc
fsub
repnz
call
mov
mov
shl
jmp
jmp
xchg
xchg
aaa
add
pop
mov
add
lock
fisub
les
sbb
dec
pop
mov
xchg
cld
jg
sbb
paddb
pop
(bad)
enter
je
std
(bad)
(bad)
(bad)
jmp
add
push
adc
xor
jbe
sbb
cmps
fisub
dec
sub
add
mov
call
cs
cmp
xchg
xchg
jne
lahf
scas
cmp
push
xchg
cwde
mov
std
push
(bad)
jmp
js
ins
sti
mov
mov
dec
jne
and
or
fidivr
jmp
out
jo
cmp
pop
mov
add
sahf
stos
pop
adc
cmp
sar
ja
jg
or
clc
mov
add
and
mov
mov
leave
std
push
cld
(bad)
call
or
xor
and
fdivr
(bad)
popa
lock
mov
jno
fcmovu
or
xchg
mov
xchg
inc
xchg
jnp
in
pop
cli
sub
dec
cmc
inc
add
into
sti
idiv
call
test
cmp
xchg
into
cmc
xchg
cmp
mov
inc
inc
lds
mov
and
outs
(bad)
(bad)
(bad)
jmp
jb
call
push
shl
mov
add
mov
sbb
cmc
(bad)
(bad)
inc
bound
pop
les
fsubr
jb
js
leave
xchg
(bad)
jmp
fldenv
cld
call
aam
fisub
cmps
test
jg
arpl
ja
adc
rol
pop
push
dec
ret
mov
jne
cmp
in
jb
fwait
mov
xchg
rol
test
and
enter
sub
mov
inc
(bad)
(bad)
(bad)
mov
out
push
pop
jmp
mov
sub
rcl
pop
movs
ror
dec
popf
(bad)
(bad)
(bad)
(bad)
fdivr
lods
jle
lds
mov
dec
add
mov
push
(bad)
or
inc
mov
or
inc
test
les
stos
in
or
push
test
pop
cmp
js
push
ret
outs
das
enter
inc
mov
loop
cs
(bad)
inc
mov
and
scas
pop
jo
adc
hlt
xchg
push
and
adc
ret
sub
xchg
pop
add
(bad)
(bad)
(bad)
push
gs
push
call
mov
mov
sbb
xchg
or
xchg
jge
popa
ds
pop
popa
mov
sub
dec
dec
aaa
sbb
mov
aaa
(bad)
(bad)
(bad)
mov
shr
mov
mov
or
cmp
into
aad
nop
jbe
(bad)
(bad)
jmp
movs
inc
or
lea
adc
adc
xor
call
dec
call
add
mov
sbb
jge
mov
fsub
dec
adc
dec
(bad)
(bad)
(bad)
inc
inc
ficom
pop
add
and
movs
cdq
lahf
push
add
mov
popa
icebp
out
out
pop
bound
loop
mov
movs
aam
movs
inc
mov
or
stos
(bad)
call
ins
loop
mov
dec
xchg
jmp
pusha
xlat
xor
mov
fmul
(bad)
fnstenv
sahf
addr16
pop
pop
or
pop
adc
lods
js
mov
pop
push
std
pop
lock
mov
cmps
sub
test
push
cmps
mov
sbb
mov
or
inc
or
das
xchg
push
inc
shl
fisubr
sub
pop
sub
mov
jmp
ret
add
ds
imul
(bad)
(bad)
(bad)
call
mov
lea
icebp
and
xchg
push
xchg
scas
scas
mov
dec
out
fdivr
repz
jmp
call
into
push
mov
cmc
enter
pop
mov
bound
fnsave
aam
push
push
mov
popa
push
arpl
loop
xchg
les
fistp
mov
add
or
call
xor
and
inc
cmp
retf
repz
xchg
out
fsubr
ja
mov
xor
xchg
xchg
sbb
popa
test
adc
sti
loopne
ins
(bad)
(bad)
mov
lahf
ins
(bad)
pop
shl
jo
imul
mov
imul
fimul
cmp
push
scas
sub
repnz
mov
(bad)
cwde
arpl
pushf
cmp
(bad)
inc
and
jecxz
mov
enter
pop
inc
ficomp
inc
xchg
out
stos
in
(bad)
jmp
xchg
xchg
xchg
jp
xchg
xor
ins
je
(bad)
(bad)
inc
ret
jle
out
cmps
fldenv
fdiv
pop
jbe
jno
gs
mov
lock
jne
ss
jb
pop
pop
loope
fnstenv
inc
ins
jo
(bad)
(bad)
(bad)
jmp
loop
js
add
sbb
inc
xchg
fadd
ror
xor
xchg
sahf
(bad)
inc
pop
lock
pop
ret
or
inc
pop
mov
mov
rcr
sar
call
lea
jl
dec
dec
jo
xlat
pop
das
dec
ror
cli
(bad)
mov
nop
lock
pop
iret
mov
fucomip
in
xor
scas
(bad)
lock
sbb
not
jne
mov
outs
inc
fwait
arpl
dec
call
xchg
into
aam
xchg
fs
xchg
mov
outs
ret
inc
test
inc
cli
and
aad
pop
(bad)
(bad)
(bad)
call
inc
mov
mov
inc
push
test
loop
scas
dec
lea
sub
std
push
(bad)
jmp
pop
fld
mov
cli
jecxz
jl
idiv
and
cs
and
neg
add
jnp
pop
das
xor
xlat
add
(bad)
(bad)
call
sub
sub
(bad)
fcomp
add
xchg
pop
loopne
push
push
(bad)
(bad)
(bad)
jmp
mov
inc
(bad)
mov
push
inc
mov
ror
jmp
push
xchg
int3
aam
pop
xchg
dec
xchg
dec
data16
fs
mov
call
pusha
loop
mov
sbb
outs
mov
imul
stc
(bad)
test
cmp
jg
mov
push
in
cli
xor
pop
(bad)
mov
leave
ror
loop
test
cwde
ds
(bad)
(bad)
jmp
push
loope
daa
loop
dec
and
dec
jno
push
movs
mov
in
fdivr
mov
sbb
(bad)
push
cmp
push
bnd
add
sub
dec
repz
cwde
(bad)
call
sbb
xor
adc
std
xor
add
(bad)
(bad)
(bad)
inc
mov
shl
ss
inc
inc
sahf
iret
inc
out
mov
jb
lahf
lahf
mov
push
xor
das
mov
push
aam
sub
or
xor
push
(bad)
dec
lea
pop
scas
aaa
aas
outs
xchg
jg
and
test
inc
cmc
jno
jns
aaa
cld
(bad)
mov
fdiv
mov
jmp
dec
xchg
dec
js
xchg
add
int3
dec
xor
or
xchg
push
xor
push
(bad)
(bad)
(bad)
push
sub
fs
test
pushf
rcl
xor
in
adc
inc
loopne
(bad)
(bad)
(bad)
(bad)
fxch
je
adc
xchg
cmp
xor
repz
mov
call
daa
sahf
jp
xor
xchg
jmp
push
adc
or
jmp
cmp
mov
std
sbb
retf
shl
push
int3
dec
mov
sub
(bad)
(bad)
dec
in
lods
pushf
retf
and
lock
mov
pop
arpl
xor
add
dec
xchg
mov
fs
(bad)
(bad)
inc
inc
jmp
sti
dec
cs
fsub
xchg
je
into
xor
(bad)
jg
mov
gs
push
fs
shl
cmps
(bad)
(bad)
(bad)
call
in
mov
xchg
shr
sub
sub
(bad)
and
addr16
sub
push
loope
cmp
push
icebp
(bad)
call
adc
cmc
test
mov
dec
(bad)
cmp
ficomp
(bad)
(bad)
(bad)
dec
movs
adc
inc
mov
jne
popa
popf
dec
push
push
shr
lods
pop
xor
call
cld
xchg
or
pause
dec
xchg
xor
xchg
push
jmp
hlt
inc
(bad)
(bad)
(bad)
out
fadd
mov
xchg
data16
nop
gs
add
jp
out
(bad)
(bad)
(bad)
dec
or
add
fs
and
or
sub
cs
pop
(bad)
xlat
or
ss
cli
arpl
scas
adc
pop
mov
cmps
aaa
mov
dec
call
sahf
ret
(bad)
jmp
mov
test
lods
loop
xchg
xchg
leave
cmp
(bad)
dec
xchg
ins
cmps
data16
jo
(bad)
push
xor
jmp
dec
mov
push
cmps
mov
(bad)
dec
adc
sbb
loopne
shl
dec
pushf
jmp
(bad)
(bad)
(bad)
jmp
sub
repnz
fsubr
sub
push
loope
rol
js
(bad)
(bad)
jmp
stos
or
test
jbe
fidiv
fiadd
push
mov
fnsave
cmc
outs
ja
mov
mov
push
mov
(bad)
sub
pop
rcl
(bad)
xchg
pop
mov
jp
shl
loope
mov
mov
push
sub
jne
retf
(bad)
pop
fnstsw
ja
xchg
pop
scas
inc
mov
int
(bad)
jmp
pusha
ins
cld
ficomp
jl
pop
xor
push
out
mov
popf
cmps
mov
(bad)
dec
jmp
hlt
std
(bad)
(bad)
jmp
pop
retf
xor
adc
loopne
add
into
inc
imul
mov
pop
daa
jns
mov
and
add
outs
and
pop
xor
idiv
push
sbb
lods
loopne
outs
push
dec
dec
mov
add
je
nop
xlat
and
imul
xor
rcr
pop
push
jo
mov
nop
inc
scas
ja
mov
ja
int
mov
fcomip
jmp
inc
daa
arpl
and
push
das
sbb
mov
or
dec
mov
sbb
jnp
fcomip
(bad)
mov
dec
push
push
xchg
xor
mov
(bad)
and
(bad)
(bad)
(bad)
(bad)
push
push
pop
sbb
fstp
xor
lods
push
cli
mov
call
dec
xchg
(bad)
(bad)
(bad)
call
add
mov
lock
sbb
xor
push
mov
enter
add
adc
push
cwde
ins
ss
retf
mov
add
sbb
cmp
scas
adc
mov
ss
pop
es
jae
outs
mov
fbstp
test
mov
fisubr
mov
sbb
inc
inc
out
cmc
pop
sbb
(bad)
fs
adc
loopne
mov
mov
and
lea
cmps
(bad)
(bad)
(bad)
call
ins
stos
add
mov
push
in
shr
mov
sbb
(bad)
(bad)
(bad)
dec
call
scas
daa
mov
inc
xchg
mov
shl
xchg
xchg
mov
push
in
or
dec
mov
cli
pop
(bad)
xor
jmp
cli
mov
js
cdq
xlat
(bad)
or
(bad)
or
mov
lock
(bad)
push
ins
add
inc
push
loopne
pushf
dec
data16
in
add
add
movs
xchg
dec
pushf
jmp
push
pop
xchg
cli
mov
ret
pop
xchg
add
mov
sub
dec
inc
mov
sub
add
pushf
jmp
imul
push
jo
mov
jmp
ds
cmp
inc
mov
das
jne
ss
mov
(bad)
(bad)
(bad)
(bad)
std
mov
pop
lods
sti
push
(bad)
mov
or
aad
lods
popa
sbb
inc
jmp
ja
outs
mov
adc
jno
inc
out
jl
(bad)
(bad)
(bad)
call
xlat
inc
jo
stos
fst
push
pop
ds
movs
mov
movs
(bad)
fcmovnbe
jno
(bad)
mov
jmp
inc
or
popa
xchg
(bad)
xchg
lahf
pop
jo
retf
(bad)
mov
mov
ja
push
xchg
in
mov
(bad)
out
clc
call
add
lahf
xchg
fisttp
xchg
cwde
mov
ins
push
out
(bad)
inc
xchg
push
pusha
pop
movs
shl
rol
xchg
hlt
imul
pop
push
jb
xchg
and
sbb
cwde
inc
push
xor
mov
xor
push
sar
(bad)
dec
sub
inc
jmp
sub
mov
xchg
mov
and
xchg
stos
sbb
add
movs
mov
sbb
ret
pop
loopne
out
add
mov
jnp
jmp
or
sub
xor
es
(bad)
(bad)
jmp
pop
xchg
out
movs
and
add
rcl
adc
loopne
js
xor
fwait
or
mov
inc
adc
(bad)
(bad)
(bad)
dec
(bad)
and
add
dec
or
sbb
mov
leave
cld
jmp
stos
repnz
xchg
mov
retf
clc
xchg
adc
xor
adc
out
jmp
push
push
inc
add
mov
into
sub
sub
(bad)
(bad)
cmp
xor
mov
out
stc
push
cmp
jle
into
call
test
(bad)
(bad)
push
adc
or
js
aam
xchg
retf
mov
jge
jmp
push
nop
add
outs
push
hlt
pop
push
inc
pop
cmp
fimul
jmp
les
adc
push
retf
iret
xchg
shr
and
out
stc
(bad)
(bad)
(bad)
inc
imul
mov
push
jno
inc
xor
gs
push
mov
clc
add
enter
lods
xor
repz
(bad)
mov
fwait
cmp
jg
jb
(bad)
in
push
jmp
cmp
jmp
sbb
push
push
inc
ret
fisttp
mov
push
ja
xchg
pop
imul
(bad)
fst
sub
jle
and
add
and
xlat
aam
int
iret
mov
in
inc
mov
(bad)
(bad)
inc
paddusw
scas
lods
dec
in
adc
xchg
sub
mov
xchg
push
movs
inc
call
and
les
cmp
add
pop
add
(bad)
(bad)
call
push
mov
mov
fist
mov
xor
(bad)
and
jno
clc
(bad)
(bad)
jmp
add
int3
pop
mov
inc
jbe
ins
shl
aaa
call
(bad)
(bad)
inc
mov
xor
iret
cld
aad
aad
jg
shr
dec
ret
mov
pop
iret
pushf
repnz
loopne
or
imul
fs
ret
cmp
cld
lahf
mov
scas
mov
out
push
cmps
jmp
jnp
aas
sbb
popa
nop
pop
(bad)
mov
and
scas
pop
xor
scas
pop
outs
out
cwde
stos
mov
(bad)
(bad)
fnstcw
mov
repnz
push
sub
add
int
or
(bad)
(bad)
call
mov
mov
stos
aad
ja
sbb
es
xchg
xchg
add
inc
adc
ret
sub
cmp
and
ins
fsub
sub
test
mov
aam
dec
cmovbe
fucom
fs
fst
xchg
mov
test
std
sbb
push
clc
(bad)
jg
push
(bad)
(bad)
pop
sbb
loopne
sbb
out
xor
cmp
dec
push
fcom
fimul
and
imul
sbb
cmc
sub
jmp
dec
in
pop
pop
daa
mov
aad
test
dec
mov
fistp
jge
call
cwde
jbe
cli
pop
xlat
hlt
scas
aas
sub
call
inc
rol
call
mov
sbb
push
ror
je
xor
sbb
cmc
in
jnp
cmp
add
push
js
popa
sub
(bad)
(bad)
(bad)
jg
jle
mov
xor
mov
stos
xor
sbb
loop
mov
rcl
and
adc
(bad)
(bad)
jmp
dec
stc
jecxz
div
jae
popf
out
push
aad
jo
inc
ins
inc
and
ja
inc
and
and
popw
pop
stos
mov
scas
fcomi
repnz
lock
jmp
push
add
sahf
lds
push
shl
cmps
mov
fnclex
(bad)
mov
repnz
retf
in
call
cmp
enter
into
pop
loop
push
add
sbb
cmc
scas
jge
retf
push
jmp
(bad)
(bad)
(bad)
mov
das
inc
pop
and
add
push
(bad)
cmc
rcr
dec
jl
push
shl
(bad)
jmp
push
(bad)
(bad)
(bad)
jmp
push
dec
cmp
imul
sub
ins
jecxz
test
mov
sbb
(bad)
(bad)
(bad)
jmp
mov
pop
pusha
outs
jo
adc
cmps
dec
daa
es
push
arpl
lods
loop
popa
inc
aad
push
add
stos
and
test
test
out
fidivr
hlt
aaa
add
jmp
adc
cli
sub
mov
fcom
loopne
jmp
push
out
(bad)
icebp
push
dec
loop
sub
or
int
(bad)
(bad)
dec
push
or
mov
mov
je
addr16
sub
push
in
push
inc
mov
aaa
bound
outs
add
hlt
cld
mov
(bad)
call
imul
outs
pop
or
ins
sbb
adc
(bad)
(bad)
jg
push
pop
es
jne
(bad)
movntq
out
fwait
sbb
inc
out
movs
mov
push
jmp
and
inc
jae
mov
or
sbb
push
sbb
scas
imul
inc
or
push
(bad)
(bad)
(bad)
jmp
aam
aaa
xchg
in
dec
inc
sub
or
in
stos
pop
or
outs
cli
(bad)
call
sub
sbb
dec
sub
js
sub
jo
js
lds
dec
arpl
scas
cmp
(bad)
sub
adc
jmp
jne
cmps
(bad)
call
neg
cdq
adc
rol
mov
sbb
pop
icebp
(bad)
jmp
ret
mov
pop
out
mov
shl
outs
mov
jl
jns
sbb
hlt
(bad)
call
mov
test
cmp
push
dec
ins
mov
push
(bad)
(bad)
call
out
inc
push
xchg
xchg
imul
test
jnp
xchg
xchg
and
fdiv
mov
les
push
xor
mov
sub
(bad)
(bad)
push
test
cmp
(bad)
neg
pop
xchg
sub
cmp
scas
retf
adc
sti
(bad)
call
xchg
push
add
jb
pushf
dec
push
mov
push
sub
push
push
sub
xor
mov
add
pop
mov
ins
cmps
stos
clc
add
mov
mov
xchg
fsub
(bad)
push
fadd
sub
jne
shr
cmp
(bad)
dec
push
retf
adc
cld
xchg
cmp
fmul
add
(bad)
(bad)
call
push
xor
sub
xchg
out
mov
aam
jmp
in
and
lock
jmp
into
nop
mov
dec
mov
inc
push
xor
mov
lods
jp
in
and
dec
inc
in
and
dec
jecxz
popf
imul
xor
mov
test
jae
or
adc
jae
movs
ret
jmp
clc
pop
sbb
clc
ins
fs
mov
call
dec
mov
pop
scas
scas
(bad)
cdq
or
push
dec
scas
or
(bad)
(bad)
(bad)
inc
and
movs
xor
add
cmp
test
rcl
cs
(bad)
(bad)
(bad)
js
mov
dec
jne
pop
xor
mov
ss
pop
dec
jl
push
nop
push
mov
push
xor
add
lock
push
or
outs
ja
mov
dec
push
mov
call
push
cdq
sahf
cmps
sbb
(bad)
push
popf
(bad)
jl
and
(bad)
out
ins
xor
cmc
cli
(bad)
(bad)
dec
leave
cmc
jecxz
inc
jne
in
leave
repz
imul
aas
(bad)
(bad)
pop
mov
jbe
out
jle
call
xlat
lods
cmp
scas
data16
add
nop
nop
aaa
(bad)
(bad)
out
clc
daa
push
(bad)
push
fist
fisubr
imul
sub
cmp
add
popf
xor
mov
or
lock
(bad)
dec
rcr
inc
cmps
(bad)
xor
jnp
cmps
aad
movs
pop
cmc
sub
fbld
mov
(bad)
(bad)
out
mov
scas
scas
shl
jmp
cvtps2pd
enter
(bad)
push
cwde
cli
ins
shl
(bad)
jne
cmc
(bad)
fdivr
add
pop
jmp
mov
(bad)
call
mov
ss
or
jle
mov
lahf
jg
clc
xor
and
(bad)
in
jmp
int3
pop
xchg
arpl
and
sub
mov
sbb
push
push
push
sahf
shr
jmp
xchg
pop
inc
call
mov
inc
pop
ss
mov
fs
outs
ror
imul
lock
inc
repz
inc
pusha
mov
lods
sbb
test
out
pop
stos
sbb
(bad)
ror
(bad)
movs
retf
cmp
pop
pusha
lock
shr
lock
jmp
es
call
fmul
adc
fs
jmp
aas
shr
scas
mov
(bad)
inc
or
xchg
and
inc
inc
enter
xor
shl
inc
xchg
lock
mov
loopne
movs
push
jl
pop
xchg
shl
push
movs
mov
lea
adc
add
or
sar
push
push
mov
scas
in
(bad)
mov
mov
shl
add
aas
cli
stos
xlat
pop
pop
std
aaa
inc
hlt
fist
jno
xlat
(bad)
retf
imul
cmc
adc
mov
jnp
push
enter
mov
push
xchg
jmp
lahf
cld
jg
pushf
fnstenv
(bad)
(bad)
out
aaa
xor
(bad)
(bad)
(bad)
dec
pop
call
sbb
in
pop
in
shl
push
lods
mov
fwait
(bad)
pop
iret
adc
or
test
xchg
cmp
push
test
sub
(bad)
(bad)
fistp
pop
cmp
mov
mov
adc
push
sub
cdq
jno
in
sub
and
loope
jmp
and
sub
jecxz
or
mov
(bad)
jg
pop
sub
sbb
mov
es
mov
sub
jae
imul
xchg
(bad)
(bad)
call
repnz
ror
mov
pop
adc
push
mov
adc
scas
inc
mov
ret
fwait
jnp
jno
shl
fdiv
mov
in
(bad)
aaa
push
call
xlat
cld
pusha
pushf
les
ins
scas
mov
mov
cmp
retf
mov
call
mov
adc
cdq
retf
jne
loope
mov
test
push
pop
icebp
adc
ret
inc
push
js
pop
dec
mov
mov
ret
pop
jmp
fwait
aam
(bad)
(bad)
jmp
enter
dec
js
mov
and
xchg
fsub
popa
mov
sub
(bad)
fst
jmp
inc
push
inc
cmp
sahf
inc
popa
add
(bad)
(bad)
inc
scas
sbb
jns
jle
add
xchg
mov
test
push
or
(bad)
jmp
xor
pop
in
dec
jb
test
rcl
out
repz
int
cmp
jle
inc
into
xchg
and
call
dec
xchg
(bad)
fild
out
ret
call
mov
dec
fs
stos
or
add
dec
test
inc
cs
push
mov
add
mov
sub
imul
or
loop
or
push
fs
call
std
xor
popa
and
sub
(bad)
(bad)
(bad)
cmp
dec
cmp
ins
inc
xchg
xchg
xlat
pop
push
(bad)
fnstcw
fidivr
(bad)
call
fmul
push
adc
dec
test
push
push
xchg
das
ds
lock
and
(bad)
(bad)
(bad)
inc
sub
push
cs
dec
aam
enter
pop
rcl
adc
cmp
and
shl
pushf
imul
(bad)
inc
repnz
push
push
cdq
push
out
movs
dec
mov
cmp
je
test
mov
rcr
bound
sbb
stos
or
mov
icebp
or
inc
push
movs
sbb
(bad)
(bad)
(bad)
(bad)
jmp
sbb
mov
cld
dec
loopne
push
ret
jb
xor
fisub
int3
adc
jmp
mov
dec
xchg
and
icebp
xchg
js
fs
fidiv
(bad)
cld
(bad)
call
xor
(bad)
(bad)
inc
jp
inc
aaa
sub
pushf
mov
xor
ror
pushf
add
mov
fsubrp
jmp
inc
clc
inc
sti
add
rcl
das
push
call
xchg
push
mov
lods
cmps
dec
je
push
scas
push
xor
dec
in
aad
jmp
bound
push
xchg
dec
and
pop
and
(bad)
jmp
dec
lock
ss
test
push
sbb
shl
jmp
jecxz
lea
push
ret
xor
mov
cmp
scas
sbb
clc
call
pushf
xchg
mov
pushf
nop
xor
mov
(bad)
mov
xchg
mov
sub
(bad)
sbb
fstp
(bad)
call
xlat
mov
(bad)
(bad)
or
jbe
fcompp
(bad)
sub
repnz
(bad)
iret
popf
out
sahf
(bad)
(bad)
(bad)
(bad)
cmp
jmp
cmp
jge
dec
iret
(bad)
jmp
fstp
mov
cmp
js
inc
xchg
mov
pop
cmp
lahf
std
aad
ss
dec
ds
icebp
dec
mov
fild
dec
xor
mov
nop
mov
cli
jg
jg
(bad)
sbb
(bad)
arpl
bound
and
out
clc
sub
(bad)
dec
or
or
xchg
xchg
jne
jne
mov
(bad)
call
adc
inc
hlt
es
add
xchg
pop
cmp
retf
(bad)
(bad)
(bad)
push
mov
cmp
mov
add
rol
mov
inc
jbe
shr
add
dec
cdq
pusha
xchg
(bad)
dec
shl
and
sub
push
add
cmps
push
ret
jmp
std
shl
call
out
mov
out
ret
jmp
loope
popa
cmp
repnz
push
jecxz
fisttp
sbb
cmp
jmp
jge
les
mov
push
xchg
add
jge
(bad)
(bad)
(bad)
jmp
jno
push
xchg
xor
in
aaa
push
push
sbb
je
xlat
pusha
and
cdq
push
or
(bad)
(bad)
dec
imul
or
inc
or
push
jno
jno
cmp
add
test
call
test
xchg
pop
mov
cmp
jae
sti
arpl
pop
stos
test
push
dec
test
add
pop
rcr
dec
adc
frstpm(287
daa
lods
fistp
ret
stos
add
pop
(bad)
(bad)
(bad)
(bad)
(bad)
outs
scas
adc
shr
sysenter
pop
or
jnp
int
movs
mov
inc
(bad)
rol
in
das
push
(bad)
(bad)
jmp
xchg
sbb
neg
mov
xchg
int3
mov
pop
push
loope
(bad)
call
fsubr
cmp
movs
hlt
add
cmp
lahf
aas
jl
ror
(bad)
(bad)
(bad)
call
das
leave
mov
lds
into
lock
arpl
pusha
xlat
dec
or
sbb
xor
(bad)
(bad)
push
daa
enter
inc
xlat
imul
cmp
shl
xchg
or
rcl
(bad)
(bad)
(bad)
jmp
lods
pop
aas
jle
lds
push
push
imul
or
mov
in
dec
popf
xor
rcl
mov
mov
(bad)
(bad)
(bad)
ficomp
nop
fidiv
scas
cmp
cs
inc
fidiv
test
loope
inc
(bad)
pop
(bad)
jnp
xor
xchg
fwait
pop
(bad)
xor
(bad)
(bad)
mov
mov
xchg
push
sub
and
scas
and
cmps
out
push
cmp
clc
dec
mov
(bad)
(bad)
push
inc
mov
retf
retf
cmp
and
fwait
adc
lock
jmp
add
test
test
pop
test
push
xor
pusha
outs
lds
dec
mov
daa
ficomp
dec
fist
scas
jmp
jne
(bad)
(bad)
int3
stc
aad
pop
lds
stos
les
push
add
jg
(bad)
jg
call
inc
movs
(bad)
cmp
add
nop
mov
mov
dec
(bad)
(bad)
(bad)
(bad)
mov
mov
bound
dec
test
pop
lock
aaa
fisttp
popa
imul
lea
in
cmps
sahf
jnp
pop
(bad)
jmp
cmp
mov
loopne
sub
call
jmp
or
pop
stos
mov
push
js
xor
xchg
(bad)
retf
mov
enter
mov
add
dec
and
rol
stos
(bad)
call
call
cmc
adc
add
push
loopne
inc
(bad)
(bad)
(bad)
call
jnp
dec
ins
dec
or
pop
daa
cmps
push
mov
(bad)
leave
call
mov
push
fs
int3
cmp
ins
mov
js
icebp
mov
dec
mov
xchg
pop
aam
mov
lods
and
cld
(bad)
inc
aas
test
sub
add
add
push
leave
adc
sbb
jmp
push
sbb
test
shr
inc
xchg
int3
xor
stos
mov
add
and
inc
push
sub
push
add
(bad)
dec
leave
rcl
xor
cdq
add
mov
mov
and
dec
test
(bad)
(bad)
call
inc
shl
enter
inc
scas
xchg
push
mov
xchg
xchg
and
movs
or
jmp
inc
sub
dec
lods
adc
test
push
or
jae
or
mov
push
xchg
sar
enter
arpl
xchg
mov
inc
outs
dec
mov
inc
sbb
adc
(bad)
cmp
or
sub
pop
mov
mov
repnz
cdq
adc
cli
xchg
lea
push
std
jmp
pop
cmc
jo
cli
adc
mov
inc
inc
inc
pop
sub
jp
push
in
int
cwde
jle
pop
pop
jmp
ret
dec
mov
jae
clc
lods
idiv
cmp
mov
jle
fdivr
jmp
sbb
stos
xor
in
leave
adc
iret
lods
jne
cli
push
adc
mov
(bad)
(bad)
fnstcw
fisub
movs
xor
std
arpl
cmp
stc
jg
iret
pop
sar
aaa
pusha
into
out
fyl2x
fdivp
mov
and
add
(bad)
(bad)
(bad)
lahf
das
jle
fwait
xchg
pop
fwait
push
out
out
jp
outs
sub
mov
(bad)
push
jb
jmp
adc
sub
xlat
les
cli
iret
lahf
fbld
std
imul
cmp
ins
or
push
movs
pop
and
sub
mov
arpl
pop
and
dec
pop
push
sbb
xor
push
mov
into
int
pop
(bad)
jmp
nop
ror
xchg
or
mov
cmc
test
mov
imul
cmc
inc
stos
or
push
cmp
push
sub
bswap
scas
mov
adc
pop
hlt
jl
xchg
sub
popa
cmp
lods
fs
pminsw
xlat
jmp
outs
jnp
sbb
add
data16
(bad)
(bad)
jns
xlat
out
rol
push
(bad)
lock
(bad)
popa
ss
pop
sbb
(bad)
mov
mov
das
(bad)
cli
xor
in
mov
stos
mov
outs
(bad)
call
shl
adc
ss
push
and
ss
outs
shr
jmp
or
mov
xlat
mov
ss
sub
(bad)
(bad)
call
pop
popa
cdq
es
(bad)
mov
xor
jecxz
push
iret
sub
pop
push
pop
popa
mov
lea
mov
jmp
adc
lock
jne
lods
jmp
pushf
fisubr
push
arpl
loopne
test
out
lahf
jge
adc
mov
mov
fcmovu
fdivr
pop
or
stos
mov
fadd
and
loope
cs
jmp
mov
inc
loop
ret
js
sbb
jge
call
xor
fcomip
ret
fild
fstp
scas
in
jbe
das
add
cmc
add
shl
mov
mov
dec
scas
xchg
sub
mov
cmp
dec
es
mov
pop
mov
ret
(bad)
push
xchg
dec
fs
daa
dec
das
inc
popa
xor
cmp
scas
xchg
vmovaps
(bad)
call
bound
push
stos
inc
push
int3
aaa
pop
call
pushf
fsub
outs
out
(bad)
(bad)
mov
repnz
mov
cwde
aam
aam
mov
push
pop
xlat
mov
mov
jg
sahf
cmp
mov
test
(bad)
sub
mov
retf
(bad)
dec
mov
mov
mov
imul
push
pushf
cmp
(bad)
mov
pop
lods
hlt
(bad)
mov
movaps
stos
xor
inc
fdiv
punpckhwd
push
loope
sub
push
mov
inc
xchg
jns
add
sub
shl
js
xchg
js
popf
jns
(bad)
(bad)
call
stos
rol
cmp
add
jo
sub
fisttp
and
cld
in
(bad)
(bad)
(bad)
dec
ds
mov
adc
pushf
stos
leave
sbb
inc
ins
add
ret
ficom
push
sub
rol
ins
pushf
push
mov
sbb
sub
sbb
dec
cli
call
mov
out
sub
and
push
ins
(bad)
(bad)
jmp
stos
mov
inc
pop
je
push
test
add
cvtps2pd
movs
push
cmp
inc
cmp
push
mov
in
push
adc
and
repz
stos
pop
cld
mov
cmp
out
out
call
retf
push
pop
sub
ret
(bad)
(bad)
inc
pusha
cs
fimul
imul
inc
hlt
jnp
add
or
pop
jmp
jle
xlat
dec
dec
rol
pop
mov
pop
(bad)
(bad)
inc
pop
pop
and
cmp
test
and
fs
imul
fild
(bad)
std
or
xchg
mov
jns
idiv
dec
dec
idiv
(bad)
call
xchg
aas
or
jmp
cli
adc
popa
push
sbb
sub
cld
(bad)
push
and
stos
push
lea
rcl
(bad)
fbld
mov
das
ror
in
sub
push
cmc
bound
out
movs
mov
outs
cli
test
sbb
dec
adc
inc
shl
into
pop
dec
xor
push
lods
inc
stos
stos
in
mov
into
xor
xlat
mov
add
or
(bad)
jg
xor
popa
mov
mov
cli
sub
pop
add
(bad)
(bad)
add
test
push
fld
pop
xor
jmp
add
pop
cwde
push
xchg
push
lods
fwait
movs
sub
pop
cld
dec
jne
retf
add
repnz
cwde
jo
cdq
push
imul
xchg
add
mov
mov
push
xchg
adc
cmp
loopne
and
mov
test
cdq
dec
std
enter
icebp
jb
int3
test
test
(bad)
(bad)
call
inc
cwde
mov
xchg
call
jo
mov
ret
stos
jmp
(bad)
push
pop
or
mov
(bad)
jle
std
mov
icebp
sbb
sti
mov
pop
inc
pop
test
push
mov
sbb
addr16
test
or
call
lea
sahf
pop
mul
fldz
pop
add
loope
clc
jecxz
mov
cmps
xor
out
mov
fdivp
mov
(bad)
(bad)
call
sbb
cdq
test
pop
sti
out
xchg
mov
and
in
mov
mov
jg
out
(bad)
(bad)
(bad)
(bad)
aas
lahf
in
cmps
in
rcl
inc
add
add
xchg
and
mov
cmp
out
jg
mov
hlt
(bad)
(bad)
push
and
push
inc
imul
xchg
aaa
daa
mov
or
sbb
mov
push
call
loopne
and
loopne
fpatan
xor
fdivr
test
ss
add
ja
sub
dec
add
test
fidiv
xchg
push
scas
jnp
imul
daa
sub
dec
inc
or
mov
xchg
add
(bad)
jmp
pop
(bad)
and
xchg
test
push
test
idiv
std
push
pushf
int3
ss
nop
imul
call
jbe
ins
xor
sti
push
jl
(bad)
(bad)
call
fs
xchg
gs
push
mov
or
xlat
xor
jge
pop
(bad)
(bad)
push
lods
imul
mov
push
add
cmp
inc
clc
cs
in
xchg
dec
daa
ins
ffree
add
(bad)
jl
out
cmp
xlat
mov
cmp
je
jo
(bad)
loopne
loope
jae
test
cli
(bad)
(bad)
(bad)
jns
(bad)
mov
sbb
ins
lds
xchg
out
inc
adc
movs
add
or
cs
xor
xchg
shr
pop
ja
das
sar
push
adc
gs
add
jns
dec
call
call
(bad)
call
dec
lock
fcom
ret
lock
loope
sbb
ret
dec
jge
mov
add
(bad)
(bad)
or
scas
daa
data16
je
mov
out
sahf
data16
pop
repz
cs
jnp
pop
mov
(bad)
in
xor
xor
jb
ins
sti
push
fdiv
fcom
xchg
pop
js
jle
push
rcr
out
lock
(bad)
(bad)
jle
pop
adc
or
cmp
ror
scas
loopne
jl
cmps
(bad)
xor
mov
xor
push
inc
add
(bad)
mov
dec
dec
xchg
mov
rcr
div
(bad)
pop
mov
loopne
cmp
ja
push
sbb
jecxz
mov
out
in
dec
xchg
das
leave
repnz
test
push
dec
dec
in
sub
mov
add
xchg
retf
jecxz
or
dec
or
push
and
sar
jno
lods
aas
sbb
leave
inc
and
test
sub
push
ja
sub
lock
mov
rol
mov
fbstp
xor
dec
cmp
cmp
int3
cmc
rcr
xchg
js
sbb
iret
ss
test
or
nop
mov
pop
push
stos
(bad)
ror
sbb
sbb
xor
(bad)
(bad)
mov
sbb
sbb
xor
pop
ss
shl
dec
pop
xchg
sub
cmc
(bad)
inc
adc
(bad)
imul
adc
in
xchg
adc
and
(bad)
(bad)
jmp
xchg
dec
jg
jb
cmc
loopne
popf
sti
jbe
inc
pop
cmc
in
mov
inc
mov
jp
in
add
(bad)
(bad)
(bad)
dec
imul
cwde
dec
mov
enter
repz
loope
dec
je
test
add
and
inc
dec
sub
jmp
iret
loopne
and
fistp
scas
xchg
mov
(bad)
(bad)
(bad)
(bad)
jnp
test
test
ret
xor
repz
pushf
xchg
stos
aas
xor
les
or
call
add
and
inc
mov
mov
and
add
js
movs
ja
mov
fild
adc
xchg
leave
cwde
data16
xchg
adc
push
movs
jo
or
(bad)
(bad)
(bad)
jg
mov
mov
(bad)
sti
test
jge
jle
(bad)
(bad)
jmp
or
(bad)
push
mov
lods
xchg
xor
inc
xor
xor
lock
in
stos
xchg
retf
das
scas
bound
vpsubusw
xchg
add
(bad)
call
kaddw
xor
cmc
and
push
in
inc
shl
push
dec
(bad)
(bad)
call
dec
nop
and
fcomp
sub
stos
repz
mov
cs
(bad)
(bad)
(bad)
call
push
lds
adc
cmovae
dec
push
(bad)
dec
js
bound
call
aam
ins
sub
movs
add
add
imul
or
(bad)
(bad)
fisttp
xchg
sbb
jg
sub
or
push
aas
pushf
(bad)
jno
das
repz
adc
push
std
ja
cmp
or
or
xor
push
xchg
jg
arpl
ret
aam
test
sub
dec
mov
pop
setb
xor
(bad)
(bad)
jmp
mov
je
mov
xchg
push
xor
(bad)
dec
popa
add
xor
or
jae
(bad)
(bad)
(bad)
inc
push
loope
xchg
add
in
dec
in
jo
sar
sub
jnp
cmp
addr16
jg
test
and
mov
xlat
rcr
bound
push
jno
push
push
retf
and
xor
js
in
dec
pop
cmp
aad
cdq
minps
add
pop
dec
cmp
repnz
aam
lds
pop
cmp
lods
minps
lock
fdivr
lods
sbb
mov
inc
popa
je
popf
aaa
cs
imul
out
inc
iret
inc
iret
test
xor
call
(bad)
cmp
stc
push
pop
sti
fadd
loope
add
(bad)
jmp
fld
(bad)
and
dec
dec
call
aaa
dec
test
stos
mov
mov
loope
imul
and
(bad)
dec
push
pop
dec
je
xchg
pop
xor
popa
or
adc
add
or
jg
(bad)
pop
mov
pop
shl
pop
mov
add
aam
(bad)
data16
cmp
popa
enter
xlat
add
mov
sahf
mov
cmc
jbe
push
in
call
inc
out
inc
sar
(bad)
mov
(bad)
outs
xchg
and
call
push
sbb
fdiv
cmps
(bad)
(bad)
mov
cli
cmp
jo
cmps
jmp
pushw
cdq
cld
dec
mov
(bad)
jmp
dec
scas
mov
lods
mov
sbb
sbb
push
scas
iret
mov
xor
jecxz
jge
daa
leave
add
call
mov
jns
sbb
(bad)
fcmove
jo
or
js
pushw
dec
ret
mov
jo
xor
stos
jae
(bad)
inc
neg
dec
inc
push
pop
pop
mov
(bad)
pop
in
test
(bad)
push
out
aam
add
aad
push
pushf
shl
jno
(bad)
(bad)
push
fst
add
ror
add
(bad)
mov
stos
add
or
ror
(bad)
(bad)
(bad)
push
mov
sbb
sbb
sbb
clc
mov
adc
int
xor
ja
pop
mov
ss
gs
jp
pop
sar
fisttp
mov
xchg
js
dec
cld
and
jg
inc
mov
stc
or
cmp
jnp
pop
ins
sub
jae
repnz
pop
je
repnz
jmp
jg
sbb
lahf
sti
mov
jns
mov
xchg
cmps
dec
sti
ret
and
lock
jmp
imul
cmp
inc
mov
and
jnp
enter
test
popf
nop
aas
lock
mov
(bad)
(bad)
(bad)
(bad)
add
stos
adc
sbb
push
inc
imul
int
push
ss
cmp
(bad)
(bad)
call
push
sub
mov
inc
pop
cmp
das
lods
cmc
pusha
xlat
call
(bad)
(bad)
jmp
fldenv
jmp
cmc
loop
dec
sbb
xor
and
inc
(bad)
push
out
jne
test
(bad)
call
mov
or
inc
pop
or
dec
or
mov
dec
sub
inc
mov
sub
sub
test
pusha
icebp
jae
imul
push
mov
call
cmps
cmp
add
or
jb
inc
cmps
iret
(bad)
(bad)
(bad)
dec
jle
rcr
ja
aad
popf
pop
lods
push
add
push
lahf
in
sbb
es
test
sbb
ret
imul
cmp
int3
mov
scas
jne
ins
and
inc
xchg
mov
sub
in
jmp
cdq
or
scas
loop
mov
cmp
sbb
imul
inc
xchg
(bad)
fisttp
or
pop
cmps
scas
sub
add
push
adc
les
sub
call
inc
sub
mov
clc
(bad)
(bad)
fbstp
or
cmp
pop
dec
ds
sbb
xchg
dec
dec
jns
lea
dec
mov
(bad)
fistp
mov
push
dec
or
adc
or
dec
test
adc
pop
push
mov
test
imul
fwait
das
inc
in
enter
addr16
xor
(bad)
dec
push
inc
retf
inc
rcl
dec
dec
add
pop
xchg
sbb
(bad)
loop
push
adc
push
in
(bad)
(bad)
push
sub
(bad)
sbb
cdq
pop
sub
adc
pusha
repz
cmp
jmp
mov
cmc
test
ss
stc
lock
and
(bad)
mov
je
mov
adc
cdq
xor
es
xchg
jmp
arpl
push
mov
(bad)
call
rcr
push
inc
adc
xchg
retf
mov
js
outs
nop
jb
jg
add
and
scas
(bad)
aam
adc
mov
(bad)
(bad)
(bad)
(bad)
mov
iret
scas
jnp
or
bound
mov
call
or
or
adc
sahf
fistp
lea
movs
inc
pop
xor
mov
pop
and
jg
imul
fs
(bad)
jmp
dec
adc
lods
test
add
test
jns
xchg
(bad)
inc
inc
mov
pop
pop
mov
stos
test
(bad)
call
pop
arpl
pop
jns
cdq
mov
or
call
out
adc
mov
and
mov
cmp
jno
(bad)
(bad)
(bad)
push
pop
dec
mov
out
inc
adc
retf
mov
cdq
and
dec
sbb
ficomp
loope
(bad)
(bad)
jmp
call
ds
daa
adc
aam
lods
pusha
mov
test
sbb
test
sub
push
dec
ret
(bad)
push
cli
and
jns
ins
cmps
(bad)
call
xor
fnstenv
shl
cmp
shl
das
xor
inc
int
mov
dec
jae
xor
dec
scas
cmp
(bad)
(bad)
push
lods
pop
mov
pop
imul
retf
pop
jg
out
or
cs
pop
mov
in
outs
fcomp
je
pop
cmp
adc
adc
cmp
(bad)
js
jnp
std
repnz
(bad)
(bad)
mov
int
out
mov
out
stos
cs
add
pop
sub
imul
xor
je
push
xchg
and
sub
xchg
adc
add
cmp
call
and
std
add
mov
dec
or
aad
out
xor
pop
je
inc
call
call
xor
outs
fwait
imul
scas
inc
(bad)
(bad)
inc
shl
fldenv
inc
mov
mov
scas
pushf
cmp
cmp
xor
cmps
outs
(bad)
(bad)
(bad)
inc
adc
pop
jo
xor
mov
jp
cmovb
xchg
cmp
mov
add
jp
jmp
add
xchg
les
adc
inc
clc
mov
adc
leave
dec
or
sbb
mov
clc
adc
mov
rcl
push
cmp
mov
clc
(bad)
inc
int
ins
mov
adc
mov
mov
dec
rol
fbstp
aaa
push
in
xor
inc
retf
stos
shr
fild
shl
sbb
jns
mov
iret
jbe
add
mov
xor
loopne
popa
adc
add
(bad)
sbb
(bad)
(bad)
call
lods
push
and
jae
jmp
loope
fsubr
push
out
adc
sbb
(bad)
(bad)
push
das
ds
movd
stc
mov
mov
ret
jne
mov
out
(bad)
(bad)
jg
xor
xchg
jne
or
push
cs
jmp
ds
(bad)
(bad)
push
cdq
imul
fdivr
shl
(bad)
pop
adc
in
pop
xor
lahf
arpl
scas
mov
xor
pop
push
sar
clc
stc
mov
loop
jle
ret
(bad)
fbstp
mov
lds
(bad)
pop
or
pop
stos
sar
xlat
loope
cmp
jg
mov
(bad)
push
cmp
clc
sub
test
dec
in
aaa
ds
test
xchg
(bad)
jmp
(bad)
(bad)
jae
or
dec
push
push
mov
ror
add
xchg
ror
fcomip
(bad)
call
add
cmp
jb
inc
sbb
xor
(bad)
push
mov
pop
mov
dec
mov
in
xchg
movups
push
sub
pop
add
lahf
xchg
cdq
test
imul
push
cwde
movs
stos
sub
retf
mov
push
out
cli
push
ins
push
je
push
mov
iretw
and
stc
movs
xchg
addr16
(bad)
jmp
stos
lods
sub
retf
jne
jne
scas
out
movs
gs
movs
stc
cmps
bound
sub
and
cli
mov
sar
mov
pop
push
shl
mov
sbb
fsubr
leave
out
mov
mov
out
mov
cmp
cmc
mov
add
dec
or
push
xor
inc
and
ds
and
mov
push
inc
jmp
push
sahf
imul
sub
repz
adc
fdivr
call
cmp
or
test
inc
ss
cdq
sti
(bad)
(bad)
push
dec
mov
jae
int3
(bad)
dec
repnz
mov
cmp
fidivr
bswap
icebp
call
cmps
mov
(bad)
jmp
call
jmp
call
mov
pop
jmp
push
std
jecxz
dec
(bad)
push
cmp
jae
xor
or
aas
push
mov
(bad)
(bad)
(bad)
fdiv
loope
das
(bad)
aas
jns
gs
push
aam
mov
pusha
leave
inc
iret
mov
(bad)
fild
push
push
js
nop
inc
xor
(bad)
(bad)
call
or
mov
dec
(bad)
mov
xor
(bad)
dec
xchg
push
sub
push
xchg
test
iret
pop
test
loop
push
(bad)
fcom
jmp
adc
ret
aam
fwait
dec
jp
test
call
loope
ret
aad
mov
mov
sub
aam
inc
sahf
mov
gs
or
inc
ins
xchg
std
(bad)
call
or
or
adc
stos
xchg
adc
push
loopne
push
gs
(bad)
(bad)
(bad)
jmp
mov
mov
xchg
lods
sub
or
xchg
pop
add
mov
jp
cli
out
cli
inc
sub
and
mov
in
and
jb
(bad)
(bad)
(bad)
out
push
mov
xor
mov
adc
adc
mov
xchg
xchg
sbb
test
add
xchg
out
dec
or
or
mov
daa
xchg
dec
xchg
test
cld
(bad)
clc
outs
ret
clc
not
(bad)
(bad)
push
push
xor
and
push
(bad)
and
stos
dec
test
mov
aad
(bad)
push
retf
dec
mov
dec
and
mov
leave
pop
inc
aam
inc
adc
(bad)
call
cmps
adc
cmps
fwait
popa
shl
add
mov
sub
cs
les
cmp
lock
(bad)
jmp
(bad)
aad
adc
cmp
mov
(bad)
int3
pop
outs
fdiv
sbb
sti
push
jl
fistp
jbe
loopne
jmp
nop
add
lahf
sti
jbe
mul
push
jae
jne
pop
ins
mov
push
stos
stc
stc
into
stc
out
loopne
cmps
pop
jns
lds
pop
mov
arpl
(bad)
(bad)
aas
jae
in
ret
cmps
sbb
ror
pushf
inc
std
loope
pop
jne
(bad)
(bad)
fild
xlat
mov
pop
pslld
pop
mov
enter
hlt
aas
dec
jg
fld
call
aam
lds
cmp
(bad)
(bad)
std
in
lahf
cli
push
mov
mov
xor
mov
and
ins
add
cdq
clc
sub
(bad)
jmp
and
xchg
sbb
xchg
(bad)
(bad)
(bad)
mov
scas
mov
nop
rcr
int3
xchg
inc
adc
pop
cwde
imul
or
(bad)
jg
call
sti
cmp
add
rep
clc
jb
xor
iret
cmps
aaa
inc
pop
fild
mov
inc
ret
or
jo
jle
retf
(bad)
(bad)
(bad)
jmp
jle
inc
xchg
xor
fwait
pop
int
sub
cmps
xchg
add
nop
shl
sbb
sbb
xchg
(bad)
(bad)
(bad)
jmp
sub
pop
or
sub
(bad)
jno
pop
jbe
lds
icebp
ins
jnp
xlat
out
(bad)
push
xor
mov
push
cmp
push
iret
enter
mov
ins
shl
push
and
(bad)
(bad)
(bad)
jmp
cld
loope
stos
add
pop
getsec
push
inc
mov
popf
push
adc
jbe
nop
inc
in
dec
stos
xor
lods
mov
cmp
(bad)
(bad)
call
pop
jo
inc
jg
lods
add
iret
mov
xchg
lods
sub
pusha
mov
(bad)
(bad)
jmp
out
and
out
pushf
data16
jns
pop
mov
or
jae
jne
dec
jle
mov
cmps
jg
ret
xchg
leave
and
imul
jbe
out
jmp
cmc
jne
js
scas
ins
lock
outs
loopne
sub
jp
push
or
mov
or
repz
mov
(bad)
inc
inc
inc
scas
fild
idiv
shl
neg
(bad)
adc
pop
jle
imul
mov
jmp
or
xchg
sbb
js
pop
(bad)
(bad)
call
mov
cmp
jl
ja
sub
sbb
int
mov
test
jecxz
add
pushf
or
mov
add
ficomp
fst
cmp
movs
loop
mov
not
clc
adc
push
bound
push
test
push
sbb
stos
imul
mov
mov
pushf
jb
js
sub
lods
dec
sar
push
xor
cdq
dec
xchg
adc
adc
jne
adc
addr16
hlt
(bad)
(bad)
(bad)
mov
mov
pop
aaa
in
mov
sub
pop
out
cmps
adc
xlat
xchg
sub
pop
push
pop
jl
int
add
xchg
mov
(bad)
call
adc
sub
adc
xchg
int
xchg
jne
xlat
repz
push
mov
(bad)
call
push
bound
lahf
jnp
and
sub
xchg
or
lock
(bad)
(bad)
(bad)
dec
xlat
enter
inc
inc
test
arpl
mov
mov
pop
retf
inc
arpl
lock
sub
cli
shl
jecxz
(bad)
dec
mov
es
xchg
lods
retf
(bad)
mov
les
hlt
jmp
mov
pop
cmps
out
push
les
inc
aas
or
out
shl
into
shr
jnp
(bad)
jg
inc
adc
clc
mov
xchg
push
mov
mov
gs
inc
sub
jmp
jmp
cmp
mov
jbe
sbb
jmp
clc
cdq
xchg
shl
xor
dec
mov
pop
and
test
cdq
iret
mov
adc
push
jne
fld
test
imul
ret
push
addr16
hlt
call
adc
jg
call
dec
sub
and
test
jnp
mov
retf
mov
or
(bad)
jmp
dec
sub
(bad)
ficomp
xlat
xchg
sub
push
test
in
pop
mov
(bad)
jmp
out
dec
mov
add
dec
mov
pop
xchg
adc
call
(bad)
jg
or
data16
jbe
mov
pop
aam
out
aaa
rol
dec
rol
xchg
push
jo
stos
dec
add
or
xchg
pop
ret
jecxz
and
and
bound
push
adc
and
adc
sbb
(bad)
call
cld
and
call
je
cmps
pushf
push
inc
xchg
mov
call
std
jmp
stos
jnp
or
rcr
call
lock
(bad)
(bad)
push
sbb
sbb
mov
or
clc
mov
mov
xlat
jecxz
mov
in
jecxz
(bad)
mov
pop
push
jns
mov
add
enter
pop
fucom
dec
xor
ins
ja
hlt
test
dec
push
inc
or
es
mov
retf
(bad)
sub
shr
adc
scas
xchg
cdq
dec
test
into
mov
inc
push
retf
aaa
adc
mov
(bad)
sar
pop
loopne
(bad)
jmp
(bad)
neg
cmp
inc
(bad)
cmp
xchg
shl
movs
cmp
fisttp
inc
stos
jb
rol
call
and
add
(bad)
pop
mov
std
outs
cli
scas
clc
cmp
loopne
in
jae
dec
scas
or
lea
aas
idiv
(bad)
(bad)
inc
push
pop
test
aam
mov
jnp
fstp
jle
jns
imul
(bad)
call
(bad)
iret
push
inc
nop
or
push
inc
pop
leave
scas
jge
xor
int3
popf
neg
div
jle
dec
cmps
sub
adc
(bad)
ins
stos
das
clc
in
(bad)
enter
cdq
cs
(bad)
(bad)
push
push
dec
push
sti
leave
outs
jle
mov
sbb
repnz
js
scas
arpl
or
inc
(bad)
call
fild
xor
out
and
xor
dec
mov
das
clc
(bad)
(bad)
jmp
(bad)
nop
push
das
cs
mov
and
inc
jo
inc
imul
mov
rol
(bad)
dec
dec
sahf
lds
or
push
add
dec
push
dec
or
mov
mov
icebp
ret
js
ret
jb
ffreep
pop
cmp
in
push
dec
add
fadd
inc
add
dec
inc
mov
jge
lods
pop
or
dec
clc
(bad)
dec
je
sbb
jle
fiadd
pop
fisttp
fldenv
add
or
sbb
jo
jmp
add
hlt
mov
push
sbb
push
loope
and
adc
or
push
arpl
or
dec
cmps
rol
pop
(bad)
mov
jne
inc
mov
out
call
(bad)
inc
retf
nop
loopne
push
scas
mov
popf
loopne
(bad)
call
mov
sub
adc
stos
shl
dec
cwde
(bad)
jmp
push
push
add
dec
push
inc
mov
and
mov
or
cld
jmp
push
outs
outs
mov
mov
inc
shr
icebp
retf
das
cli
pop
cld
cmps
mov
jmp
dec
jo
ror
fmul
mov
push
sub
adc
cld
cli
push
ror
cmc
cs
add
icebp
shl
loope
xchg
or
hlt
xchg
(bad)
(bad)
inc
lock
movs
lock
ret
lahf
ja
data16
(bad)
mov
call
push
cmc
adc
jg
hlt
pop
(bad)
mov
push
ins
push
fidivr
and
neg
inc
cmp
lea
push
inc
jno
xchg
out
jo
xchg
(bad)
(bad)
call
fisubr
xchg
mov
gs
jge
(bad)
cld
mov
pop
ret
or
add
inc
cld
mov
mov
dec
ffreep
les
dec
sub
dec
popf
sbb
call
(bad)
(bad)
(bad)
dec
dec
hlt
stc
mov
mov
out
bound
iret
cmp
repnz
mov
outs
fucomip
cld
cmp
not
mov
gs
pop
inc
ret
(bad)
jbe
mov
cmp
out
or
xchg
(bad)
(bad)
(bad)
jg
mov
mov
or
(bad)
pop
pop
push
das
addr16
cmp
mov
add
loope
pop
div
sub
xor
add
(bad)
cld
and
mov
repnz
in
hlt
fidivr
jge
push
sbb
xchg
in
mov
in
sbb
mov
outs
(bad)
dec
lock
fwait
outs
mov
in
xor
xor
loop
xchg
and
movs
add
push
cmps
push
cs
lahf
lods
(bad)
retf
dec
adc
ins
pop
fistp
ins
aas
jle
dec
(bad)
push
xchg
ja
scas
jne
pop
add
fisttp
pop
jmp
mov
mov
imul
push
mov
gs
adc
mov
mov
mov
mov
out
adc
imul
aaa
adc
(bad)
xchg
pop
cld
jg
(bad)
push
push
sbb
sbb
pusha
stos
push
mov
mov
pop
retf
xchg
mov
push
(bad)
(bad)
(bad)
push
fiadd
movs
adc
or
jns
inc
xchg
pop
and
adc
adc
push
in
dec
add
movs
aaa
or
fdiv
retf
in
pop
(bad)
xor
mov
pop
div
sub
cld
dec
in
mov
(bad)
(bad)
push
into
outs
into
cmp
jp
fmul
xchg
daa
and
std
sti
xchg
ret
(bad)
(bad)
call
in
dec
xor
lods
add
inc
adc
repnz
xor
inc
ss
jne
inc
(bad)
(bad)
(bad)
call
out
mov
push
push
js
(bad)
mov
test
and
shl
cld
(bad)
fidivr
scas
ret
(bad)
(bad)
inc
xor
push
cmps
ror
push
pop
jmp
pop
sub
and
jmp
imul
mov
mov
cmp
rol
fs
stc
imul
mov
jg
dec
and
adc
add
or
add
and
add
mov
das
dec
nop
mov
inc
(bad)
popa
xor
add
mov
bound
lahf
push
jge
ret
push
arpl
loop
in
int3
xor
shr
ret
shl
mov
test
xor
xor
sbb
push
sahf
shl
jmp
ror
xor
jmp
mov
mov
fild
(bad)
jg
xchg
addr16
pop
mov
loopne
repnz
xor
ret
in
mov
cmc
or
mov
ins
mov
(bad)
jl
pop
xchg
jg
ret
mov
jle
push
add
or
jge
popa
loop
cmps
(bad)
clc
or
jne
fisub
stos
dec
lea
mov
shl
push
mov
pop
mov
(bad)
icebp
(bad)
fidiv
(bad)
int
or
lods
xchg
add
scas
ins
cld
adc
push
and
xchg
push
inc
jl
call
pop
push
jb
jo
push
or
rol
and
adc
push
pop
pop
popa
add
inc
pusha
popf
(bad)
mov
xor
lock
adc
inc
inc
adc
jmp
int
add
mov
fcomip
int3
inc
es
mov
adc
out
sti
(bad)
inc
pop
test
and
push
xchg
dec
push
stos
cmp
ret
lods
xchg
jnp
enter
add
pop
add
pop
sub
and
xor
jmp
stos
and
enter
hlt
pop
mov
mov
test
ror
xor
imul
jae
and
loopne
movs
push
cmp
lahf
(bad)
(bad)
(bad)
jmp
jb
mov
pop
das
cmp
adc
movs
(bad)
out
test
mov
idiv
iret
movs
shr
sti
add
push
repnz
and
lock
(bad)
inc
outs
in
sub
xchg
jle
cld
addr16
mov
cmp
fs
aad
jno
ins
ja
out
pop
hlt
pop
jne
inc
xor
ins
add
outs
cwde
sbb
adc
jl
(bad)
jmp
aas
iret
jl
aas
test
outs
push
and
fcomp
jmp
into
jbe
or
push
inc
inc
mov
dec
sub
nop
cmp
and
shl
inc
xor
jl
add
mov
add
xlat
out
sbb
cld
(bad)
(bad)
push
(bad)
(bad)
stc
(bad)
jmp
out
pop
sub
scas
(bad)
aas
sahf
jbe
jmp
add
inc
xchg
out
pop
xor
(bad)
(bad)
dec
push
stos
cmp
dec
jmp
retf
xchg
sub
add
in
cmp
or
call
mov
jnp
and
rol
push
mov
cmp
nop
or
add
mov
mov
sub
ficomp
sahf
pop
aam
aad
lahf
aaa
ja
add
mov
loop
dec
mov
mov
cwde
(bad)
dec
(bad)
call
(bad)
sub
fisubr
bound
ret
test
leave
mov
add
jmp
fistp
push
jns
(bad)
call
mov
sahf
sub
sub
add
pop
(bad)
lea
(bad)
in
sar
cwde
icebp
retf
ins
cmp
lds
ror
or
push
pop
jg
pop
jg
retf
xchg
out
sbb
mov
stc
xchg
sbb
mov
outs
sbb
jmp
cld
out
jmp
repz
iret
cmp
in
hlt
xor
inc
jecxz
(bad)
mov
add
stc
mov
mov
(bad)
mov
xor
add
jo
jl
cmps
adc
xchg
xor
adc
jg
out
(bad)
jmp
jl
add
pop
movs
ja
cld
sar
xor
adc
pop
icebp
(bad)
(bad)
jmp
pop
outs
mov
leave
arpl
clc
(bad)
pushf
pop
mov
(bad)
(bad)
test
in
call
rcl
sbb
repz
imul
cmps
sbb
loope
xchg
jae
rcr
aaa
in
pop
push
mov
adc
push
add
test
mov
cs
jns
icebp
std
cs
repnz
inc
fs
test
push
or
call
xchg
test
pop
jnp
jne
or
iret
ds
(bad)
(bad)
call
scas
fucomi
out
call
aaa
add
leave
in
les
hlt
repnz
cs
(bad)
(bad)
(bad)
inc
(bad)
call
mov
cmp
mov
repz
mov
iret
pop
mov
arpl
das
in
clc
inc
dec
sub
jp
jmp
cmp
ror
shl
dec
movs
cmp
fstp
pop
dec
(bad)
jmp
clc
push
mov
ret
and
pop
sub
clc
(bad)
jmp
clc
sti
ret
(bad)
loope
scas
sbb
adc
jg
jns
fstp
pop
jg
jmp
cmp
pop
mov
lods
mov
jnp
dec
sbb
mov
add
push
inc
add
jmp
inc
and
inc
mov
(bad)
(bad)
(bad)
call
imul
mov
je
xor
rcl
mov
or
push
push
add
sbb
or
mov
(bad)
(bad)
jmp
xchg
ret
cmc
call
dec
outs
imul
fstp
pusha
cld
fs
scas
and
lods
lea
cs
leave
(bad)
pop
cs
adc
push
add
loop
jmp
mov
xor
shl
xchg
std
adc
loopne
(bad)
jg
lods
and
mov
mov
xchg
test
pop
std
(bad)
fmul
or
xor
pop
loopne
inc
cli
cmp
mov
cld
xor
sbb
call
xchg
fdivr
sbb
cmps
mov
(bad)
jmp
jl
or
push
xchg
push
je
inc
adc
and
jl
jle
mov
jge
xchg
(bad)
aaa
(bad)
lahf
mov
push
sub
inc
xor
mov
imul
add
sbb
stc
cmp
(bad)
mov
xor
push
lock
pop
pop
cdq
cmps
or
je
rcl
jle
push
cdq
int
lea
jmp
arpl
mov
fiadd
inc
mov
(bad)
push
leave
stos
mov
sbb
lods
cmp
cli
cdq
data16
test
xor
out
cmc
icebp
xor
mov
xor
cld
xchg
(bad)
jge
test
mov
xlat
sbb
aaa
mov
cli
lea
mov
outs
in
fdivp
cmc
adc
dec
pop
test
or
mov
cld
(bad)
mov
push
xor
scas
stc
fsub
dec
or
add
ret
neg
cmp
popa
(bad)
in
(bad)
(bad)
cld
clc
(bad)
mov
les
clc
push
dec
dec
iret
sub
cmp
jns
call
push
nop
add
mov
jge
int
aad
iret
mov
mov
(bad)
cmp
dec
adc
dec
push
push
pop
cli
mov
scas
ret
and
sar
jg
push
popa
out
cdq
pusha
fnsave
mov
daa
adc
pop
jge
enter
outs
cli
aaa
jge
std
into
cmp
and
cmc
(bad)
repz
jg
jmp
in
dec
(bad)
jle
loope
repz
fnsave
lds
fbstp
or
(bad)
(bad)
mov
int
xchg
pop
jb
cdq
add
rol
jmp
adc
cld
push
mov
jmp
sbb
fstp
pop
dec
(bad)
(bad)
jmp
push
sti
(bad)
xlat
test
out
xchg
xchg
call
xrelease
scas
(bad)
cmp
add
sbb
repz
ins
mov
pop
lock
std
add
mov
xchg
jmp
cmps
dec
jge
and
jmp
out
xor
lock
repnz
mov
mov
mov
mov
push
bnd
ficomp
and
repnz
or
(bad)
fild
sbb
sti
idiv
movs
add
stos
mov
neg
cld
(bad)
cmp
daa
xor
(bad)
ja
mov
inc
and
out
cmps
(bad)
call
add
icebp
js
in
and
push
inc
stos
add
shr
push
cmc
pop
mov
nop
jbe
fnstsw
jecxz
test
add
sub
sbb
clc
(bad)
jmp
movs
mov
jb
mov
mov
repz
cmps
xchg
or
idiv
(bad)
(bad)
push
(bad)
mov
iret
lea
sbb
addr16
into
popf
pushf
imul
xor
(bad)
out
aas
add
aam
in
sub
fidivr
out
jge
je
cdq
or
outs
jmp
xchg
and
mov
test
adc
add
push
out
sti
leave
dec
popa
loope
jle
or
ret
add
mov
and
xchg
into
and
(bad)
jg
mov
out
nop
pushf
sbb
mov
(bad)
call
or
pop
enter
fptan
xlat
fistp
mov
cmps
repz
xor
jg
adc
or
and
sbb
and
(bad)
(bad)
xbegin
or
or
popf
lods
dec
sub
pop
jne
mov
nop
jmp
dec
jle
retf
das
pop
sub
lock
pop
push
inc
mov
(bad)
call
loopne
js
or
mov
dec
leave
mov
dec
jmp
dec
jg
inc
sub
xchg
aad
aaa
cwde
push
sub
es
adc
enter
sub
or
inc
outs
jg
sbb
and
xchg
xchg
fdiv
in
pop
xchg
push
pop
jne
or
(bad)
jmp
daa
lahf
mov
xor
mov
cmp
cli
(bad)
fisttp
fwait
enter
icebp
(bad)
(bad)
mov
add
ret
sub
loope
popa
ss
mov
test
stc
xchg
(bad)
pop
mov
add
(bad)
aas
mov
cmp
mov
cmp
and
jne
in
fidiv
test
idiv
jmp
not
scas
sbb
push
cmp
jmp
(bad)
push
xor
dec
inc
inc
sbb
retf
inc
ret
loop
(bad)
in
fistp
or
mov
add
add
(bad)
aas
cld
adc
or
or
hlt
dec
inc
(bad)
fcomip
fild
xlat
ror
jmp
jno
mov
adc
fdivr
(bad)
mov
int3
inc
(bad)
std
jecxz
dec
push
jno
and
inc
dec
push
and
adc
fist
hlt
(bad)
(bad)
inc
sbb
push
add
sbb
inc
sbb
icebp
call
loopne
jmp
push
dec
mov
jb
push
(bad)
sahf
jae
ror
dec
jle
jmp
(bad)
out
pmaxsw
aas
les
fdivp
push
lahf
mov
jno
xchg
out
out
lds
lock
xor
jecxz
pusha
sbb
mov
pushf
hlt
out
inc
pop
mov
lods
lods
or
push
xchg
sbb
xlat
call
jmp
or
rdtsc
(bad)
dec
dec
dec
(bad)
(bad)
jmp
(bad)
aas
xor
cmp
ret
or
stc
inc
rol
xchg
test
sbb
and
(bad)
mov
fisub
and
test
push
push
and
dec
mov
and
jl
xor
adc
or
and
sbb
pop
pop
(bad)
call
jb
fldenv
scas
mov
(bad)
repnz
mov
jmp
xchg
add
or
loope
dec
mov
adc
stc
fdivr
xchg
inc
xchg
push
(bad)
(bad)
in
xor
mov
pop
int3
mov
aaa
dec
movs
aam
fadd
fdivr
inc
cmp
xchg
xchg
xlat
adc
stos
push
and
mov
(bad)
std
retf
pop
adc
or
push
(bad)
jmp
cld
lock
ds
addr16
test
jge
shr
jmp
mov
adc
add
icebp
retf
xchg
sub
fcomp
ja
sar
(bad)
(bad)
call
shl
repz
cld
mov
jg
add
or
sub
ret
xchg
mov
push
jnp
jp
sub
mov
das
and
test
sub
jmp
xor
push
mov
(bad)
je
mov
add
(bad)
scas
cmps
lahf
dec
jl
jle
push
ins
cmp
and
cmp
cdq
jl
mov
int3
jns
(bad)
jmp
loop
loop
retf
xchg
ret
jb
push
pop
push
inc
lods
or
aam
and
pop
(bad)
fild
mov
cmp
jmp
leave
jne
mov
jb
sub
das
rcl
sub
and
repz
xor
ret
jecxz
(bad)
dec
cmp
ins
xor
je
shl
xor
stos
fcmovne
inc
mov
call
cmp
addr16
(bad)
js
dec
(bad)
sbb
hlt
or
aaa
shl
mov
jg
test
mov
mov
and
push
clc
jmp
mov
dec
sbb
mov
cmp
retf
dec
push
push
cmp
(bad)
out
inc
(bad)
push
int
rcl
mov
or
hlt
outs
jl
xchg
pop
inc
(bad)
(bad)
call
loopne
push
mov
or
dec
inc
shl
out
xlat
push
clc
call
inc
ds
loopne
or
jge
inc
and
push
(bad)
mov
add
mov
out
cli
cwde
shl
push
xor
(bad)
(bad)
jmp
pop
inc
test
mov
dec
xor
cmps
ret
dec
out
mov
std
out
ja
imul
pusha
into
cld
test
nop
jmp
mov
inc
inc
scas
les
inc
adc
out
imul
fidivr
(bad)
std
neg
pop
repz
mov
imul
pop
dec
(bad)
jg
dec
inc
into
leave
or
xor
arpl
push
shl
mov
cmp
(bad)
(bad)
jmp
scas
in
push
mov
iret
pop
jge
in
sbb
mov
sub
jmp
mov
cmc
iret
or
add
in
adc
xor
pop
push
inc
inc
inc
and
test
int
jl
and
mov
(bad)
jmp
inc
cmps
test
push
lea
leave
(bad)
pop
sar
outs
lock
test
sub
or
adc
(bad)
(bad)
(bad)
cmp
popa
mov
add
dec
(bad)
repz
imul
out
sahf
cmps
inc
xor
push
cld
mov
cmps
push
stos
imul
inc
push
aad
sbb
inc
pop
(bad)
jg
call
xchg
out
mov
fcom
sub
outs
(bad)
adc
pop
rcl
inc
ss
(bad)
(bad)
(bad)
(bad)
jge
(bad)
stos
mov
scas
mov
(bad)
stos
leave
cmps
std
in
xor
sbb
int3
sub
cmps
adc
xchg
fs
ds
xor
les
pop
call
aas
sbb
or
mov
(bad)
push
mov
movs
inc
push
(bad)
fnstcw
push
ss
xor
js
cmps
add
loopne
loope
(bad)
(bad)
jmp
sbb
(bad)
pop
movlps
rol
in
dec
mov
add
ror
cmp
add
sbb
xchg
call
lahf
jns
sbb
cmp
popf
call
(bad)
jmp
sti
push
adc
jmp
into
call
add
dec
inc
cmp
shr
push
std
jg
dec
add
in
fisub
xor
outs
scas
mov
(bad)
push
sbb
inc
sub
sbb
and
add
call
icebp
jg
inc
daa
jo
enter
aas
(bad)
sub
adc
lock
sub
add
push
mov
jle
dec
pop
(bad)
(bad)
(bad)
cmp
sub
into
(bad)
jbe
mov
push
mov
xor
call
mov
fnsave
fwait
popf
inc
lods
fidivr
(bad)
inc
dec
nop
jno
sub
les
xchg
cmp
inc
xchg
push
(bad)
add
mov
not
jbe
jg
mov
mov
pusha
sti
sbb
jge
lea
jl
pop
push
rol
(bad)
sti
mov
inc
sar
(bad)
(bad)
in
jmp
pop
int
inc
sbb
mov
loopne
and
sahf
push
xchg
std
das
inc
sti
(bad)
fcom
(bad)
mov
ins
loop
push
xor
(bad)
(bad)
jmp
push
dec
dec
leave
hlt
sbb
stos
stos
mov
(bad)
(bad)
(bad)
(bad)
call
xchg
in
inc
mov
es
xchg
dec
ret
mov
gs
jmp
inc
jle
cmc
aaa
shl
out
ret
jno
inc
push
and
or
(bad)
(bad)
fcomip
lahf
lahf
dec
mov
enter
out
dec
ud0
ret
mov
(bad)
mov
pop
and
jle
loopne
(bad)
sub
inc
cmp
or
(bad)
(bad)
push
lock
pusha
pop
xchg
in
(bad)
lock
dec
(bad)
in
mov
mov
sbb
add
retf
push
(bad)
mov
mov
xor
sbb
hlt
scas
mov
sti
pop
repnz
mov
dec
shr
test
lahf
retf
cmp
and
push
dec
pop
sar
(bad)
call
push
push
pop
dec
stos
jp
adc
mov
dec
mov
mov
imul
push
mov
(bad)
int3
push
sbb
mov
into
push
jmp
jns
push
daa
and
stc
imul
push
jge
sub
or
xor
cli
(bad)
push
es
stc
add
adc
mov
sbb
outs
enter
(bad)
dec
cmp
rol
inc
inc
and
lds
sbb
daa
gs
and
or
out
outs
cli
(bad)
(bad)
std
jmp
xor
std
or
sbb
push
repnz
je
dec
das
shl
jmp
test
enter
rol
(bad)
stc
(bad)
cmp
pop
jns
mov
inc
pop
or
xchg
adc
movs
test
iret
mov
ret
xchg
dec
mov
inc
stos
sbb
(bad)
mov
xchg
es
mov
add
push
cmp
cmp
cmp
int
daa
mov
(bad)
(bad)
jmp
fwait
aaa
lods
out
push
sub
jecxz
hlt
pop
mov
sub
and
xor
jl
pusha
es
dec
lock
dec
ins
aam
jmp
les
icebp
xchg
pop
dec
xor
(bad)
push
add
mov
cwde
iret
jecxz
and
mov
add
cld
call
jmp
cdq
pop
and
jp
sbb
pushf
stc
sbb
adc
mov
call
test
cld
xchg
mov
dec
int
cmps
mov
(bad)
jle
test
or
push
aas
es
mov
xchg
sahf
daa
into
pop
mov
cmp
push
inc
push
cmp
xor
enter
and
push
(bad)
jmp
xor
cld
shl
or
or
xchg
or
xchg
lods
or
ret
mov
jmp
push
and
sbb
mov
sti
cli
jp
xchg
stos
(bad)
fidivr
ss
call
push
push
pop
sbb
push
fs
fnstenv
out
dec
xchg
(bad)
idiv
jmp
jo
mov
scas
xchg
xor
xor
xchg
enter
mov
loopne
pop
icebp
cmp
std
pop
fist
psadbw
dec
scas
movs
repz
ret
lods
mov
xor
mov
cmp
cmp
clc
pusha
cmp
outs
out
pop
inc
out
inc
divps
mov
arpl
cld
xor
push
mov
rcl
repnz
mov
xchg
xor
sbb
jmp
sub
scas
mov
repz
sub
hlt
mov
sbb
inc
sub
inc
and
pop
nop
ins
test
stos
and
pop
dec
adc
jno
mov
dec
call
push
push
pop
inc
das
or
xor
mov
fdiv
mov
cld
(bad)
dec
jb
xlat
fstp
pop
pop
das
mov
shl
xor
(bad)
jg
jb
xchg
cs
das
loopne
mov
aad
pop
pop
js
movs
pop
xor
sbb
jg
stos
iret
sahf
arpl
mov
je
into
jne
pop
xchg
rol
mov
and
xor
ss
and
pop
pop
cmc
rol
(bad)
call
dec
adc
movs
mov
cmp
jecxz
addr16
std
fs
(bad)
mov
xor
(bad)
lock
jmp
out
mov
jmp
(bad)
dec
js
jmp
ror
xor
movs
mov
push
add
add
std
xchg
inc
aas
stc
aam
jo
bound
sar
leave
mov
sub
xchg
dec
mov
sub
dec
(bad)
lods
push
mov
inc
fucom
leave
das
icebp
pusha
sub
arpl
mov
jmp
ss
(bad)
add
xchg
(bad)
call
push
mov
adc
outs
mov
ins
cmp
ja
cli
outs
inc
mov
hlt
div
mov
fnstcw
pop
sub
pop
ror
or
std
sti
not
dec
cwde
cmp
inc
(bad)
(bad)
cmp
movs
(bad)
mov
mov
lahf
popa
inc
xor
(bad)
mov
dec
add
icebp
mov
xor
mov
loopne
or
(bad)
std
sub
mov
imul
jo
(bad)
or
call
cld
das
fadd
jecxz
ins
cmp
stc
jle
mov
sub
pop
fs
cmp
and
mov
xor
pop
mov
mov
mov
sahf
dec
cmps
repz
iret
pop
je
jmp
mov
xchg
xchg
xchg
jp
and
(bad)
push
and
jo
in
cmc
jp
call
scas
adc
into
xchg
ret
xchg
lea
clc
(bad)
(bad)
fild
inc
pop
imul
pushf
dec
scas
loope
dec
jecxz
rcl
jbe
fistp
xchg
or
jno
dec
cmp
or
mov
push
xor
outs
fisubr
popf
sti
(bad)
int3
fimul
xchg
push
or
mov
add
push
data16
sbb
aam
ror
cmp
es
(bad)
dec
int
add
mov
cmp
sbb
cwde
movs
in
(bad)
dec
popf
or
pop
in
sub
jmp
sub
and
pop
aas
sbb
sbb
jo
or
fcmovbe
cld
loope
int
(bad)
push
adc
jg
mov
or
scas
imul
aaa
pop
iret
push
jge
scas
aam
sar
enter
cdq
adc
nop
mov
inc
sbb
cmp
sub
lock
pop
test
repz
mov
adc
mov
inc
xchg
add
sub
lds
cmp
sar
aas
fnstenv
mov
add
lods
ins
outs
outs
ja
(bad)
inc
push
xchg
sbb
call
xor
sbb
(bad)
aad
addr16
xchg
jbe
inc
pop
lock
cmc
inc
fwait
xor
jmp
cli
(bad)
mov
add
out
rol
xor
aad
jg
add
or
mov
jg
(bad)
call
ret
aad
sbb
add
test
(bad)
sbb
(bad)
fcmovnbe
fld
inc
movs
mov
stos
fistp
pop
pusha
jmp
or
pusha
mov
pushf
push
(bad)
(bad)
dec
pop
jb
add
add
sub
cmp
out
aaa
(bad)
ss
inc
loopne
loopne
retf
sbb
les
retf
clc
pop
cmc
mov
dec
into
and
nop
mov
(bad)
ret
(bad)
inc
(bad)
(bad)
sahf
xchg
mov
lds
aam
ss
jg
mov
addr16
pop
pop
push
pop
push
push
mov
cmp
adc
and
dec
sbb
jmp
jg
inc
mov
out
and
xchg
xchg
pop
aas
push
stos
stos
mov
adc
jo
(bad)
push
jl
jo
push
(bad)
cmp
ret
je
jo
stos
(bad)
(bad)
call
int3
jmp
inc
add
cmp
pop
push
imul
mov
cmps
ret
xchg
or
rol
lods
mov
fdiv
in
xlat
lods
pop
in
sub
hlt
(bad)
push
adc
sbb
fild
xchg
shl
rcr
xlat
pop
or
or
mov
icebp
cli
dec
das
retf
and
(bad)
jge
fwait
mov
out
icebp
lea
pop
or
or
cdq
dec
idiv
jmp
sbb
dec
cs
fs
cmp
jns
jmp
stc
inc
pushf
xchg
dec
xchg
cmp
jl
and
cdq
daa
pop
cdq
js
add
cmc
mov
sahf
xor
xchg
and
jg
jbe
add
ss
push
push
push
das
cmp
cmp
xor
(bad)
(bad)
(bad)
call
jo
stc
sti
out
scas
add
into
mov
(bad)
jae
frstor
ret
mov
(bad)
jg
dec
cmps
jae
fdivr
xchg
xchg
or
mov
sub
imul
adc
pop
sar
jecxz
sbb
js
out
cmp
hlt
leave
inc
cmp
pusha
mov
cwde
push
aaa
jl
lock
mov
pop
nop
sbb
fs
call
clc
push
dec
push
xlat
push
clc
fistp
ss
mov
icebp
fcomp
rcl
jmp
sti
repz
jp
ret
dec
mov
cmp
clc
popf
cmc
sbb
pop
cmp
clc
(bad)
dec
jmp
fnsave
es
int3
mul
cmp
jnp
pop
sti
fsubrp
mov
xchg
add
jmp
jle
fcos
jae
aaa
repz
sbb
cmp
cmps
call
jmp
aaa
sbb
dec
nop
pop
add
cld
adc
xlat
and
sar
(bad)
push
mov
lahf
xor
fucomi
fdiv
mov
adc
stc
loop
cmps
(bad)
(bad)
dec
push
sbb
int
push
(bad)
lock
sar
push
ss
mov
mov
arpl
sar
add
bound
and
mov
enter
outs
sbb
popa
out
enter
add
dec
inc
adc
(bad)
inc
and
loopne
mov
xchg
xchg
jg
rol
inc
add
in
cmp
aas
fdivr
(bad)
cmp
cmp
push
cmp
mov
clc
(bad)
mov
(bad)
mov
hlt
rcl
dec
push
xchg
xchg
xchg
imul
dec
enter
jbe
not
cmps
not
daa
ret
xchg
fs
jo
cdq
das
or
pop
test
std
movs
push
iret
mov
mov
ins
fidivr
(bad)
(bad)
(bad)
inc
aad
cli
jl
push
mov
nop
jg
sti
adc
in
clc
inc
cld
(bad)
mov
and
xor
(bad)
adc
add
(bad)
xchg
frstpm(287
pop
mov
in
outs
mov
lahf
cmps
gs
mov
sbb
mov
mov
fwait
jg
(bad)
fbstp
imul
cdq
ds
pop
dec
es
call
shl
cld
(bad)
call
or
mov
mov
imul
(bad)
js
icebp
(bad)
(bad)
mov
retf
icebp
xor
int3
inc
jo
inc
int3
retf
mov
lock
(bad)
sub
movs
vminps
cdq
ins
mov
or
(bad)
cmp
jmp
call
aam
movs
mul
jmp
mov
gs
pop
xor
jae
mov
test
dec
mov
add
jmp
mov
mov
pop
pop
ins
jne
push
sar
add
mov
cwde
lea
add
scas
fsubr
out
xor
sbb
ja
imul
out
jno
xchg
mov
pop
adc
mov
sub
retf
loop
rcr
fucom
and
in
idiv
das
and
dec
pushf
push
cmp
(bad)
inc
imul
mov
add
ds
inc
push
sbb
(bad)
call
test
xor
nop
in
and
push
pop
shr
(bad)
jmp
or
neg
or
in
mov
xor
adc
mov
add
add
enter
scas
xchg
cwde
xor
sub
(bad)
fcomip
pop
adc
add
mov
xor
lods
ja
sub
dec
clc
(bad)
(bad)
dec
sub
mov
sbb
cmp
add
ds
sbb
mov
call
inc
xor
push
xor
loope
ss
cmp
aad
call
lea
and
sub
mov
test
jp
in
inc
ins
fisttp
not
pop
rcl
push
adc
dec
jp
dec
dec
into
pop
mov
les
jge
movs
add
div
gs
push
nop
mov
movs
inc
icebp
lahf
push
cmc
jmp
aaa
std
ja
and
and
shl
cmp
out
fmul
cmps
mov
sbb
pop
jg
ja
jb
xlat
push
lods
pop
add
lea
sbb
and
dec
out
outs
mov
inc
fs
sar
ror
jle
popf
cld
sbb
(bad)
cmp
mov
inc
in
loop
adc
xlat
fisttp
pop
addr16
cdq
or
sub
jge
adc
shr
aas
arpl
sbb
fild
cmp
(bad)
(bad)
cmp
pop
jo
(bad)
cld
sub
inc
push
xchg
adc
pop
(bad)
out
cdq
cmp
and
sbb
(bad)
(bad)
call
jge
les
sbb
mov
and
cli
cli
das
pop
jbe
xor
sti
fwait
call
call
dec
xchg
push
ret
mov
aad
stos
mov
jns
cdq
mov
call
and
fs
and
(bad)
mov
ja
xor
shl
jo
popf
cmp
push
sub
mov
pop
fwait
out
cli
lahf
ss
cmp
cmp
ins
cdq
mov
daa
sti
add
dec
dec
jp
dec
add
mov
call
out
enter
leave
repnz
repz
shl
and
xor
and
jecxz
mov
sub
das
pop
jne
or
scas
scas
pop
mov
neg
js
stos
(bad)
(bad)
(bad)
mov
stos
jns
and
sub
fs
(bad)
ret
adc
movs
sbb
dec
out
pop
cmp
(bad)
clc
mov
jmp
mov
xor
pop
add
in
iret
nop
imul
in
push
scas
mov
(bad)
jmp
add
mov
adc
lods
and
or
(bad)
(bad)
call
and
fwait
and
add
pop
std
iret
sti
xor
add
push
xchg
popf
inc
pop
dec
push
dec
and
inc
sbb
cwde
lods
data16
inc
(bad)
sar
cmp
cmps
sbb
xchg
nop
arpl
and
mov
jmp
fidiv
adc
sbb
mov
(bad)
(bad)
push
mov
or
dec
xor
push
(bad)
sbb
sub
inc
and
cld
add
fistp
dec
pop
repnz
push
add
call
pop
and
jmp
rcr
test
test
stc
aaa
fisub
sti
call
mov
inc
add
mov
xchg
add
xchg
lds
cmp
stos
(bad)
jg
sbb
dec
sti
pop
mov
test
outs
daa
xlat
movs
push
xchg
cs
fist
add
repz
pop
js
nop
push
imul
loope
iretw
mov
jmp
xor
stc
nop
mov
fwait
outs
lea
xor
and
jb
dec
loope
pop
jg
(bad)
inc
xor
sub
mov
scas
dec
and
ret
into
pushf
ss
mov
loopne
xor
cwde
inc
mov
or
inc
sbb
shl
inc
(bad)
call
inc
loop
das
sbb
jns
mov
or
outs
xchg
push
cmp
clc
inc
adc
fst
jns
nop
js
push
mov
test
(bad)
pushf
and
add
out
das
jg
adc
dec
and
call
and
jo
and
mov
sub
push
ss
xchg
(bad)
jmp
cmp
adc
jbe
add
(bad)
pop
int
pop
sahf
ins
mov
xor
dec
movs
int
sahf
jno
(bad)
(bad)
call
add
mov
jae
cli
mov
pop
je
(bad)
int
push
or
pop
or
push
gs
pusha
(bad)
push
mov
es
or
sub
mov
sbb
jae
(bad)
btr
stos
sub
test
scas
push
cmc
adc
ss
int
data16
cmps
(bad)
fwait
cmps
aad
add
jge
cmps
lea
dec
cmc
icebp
fisub
loop
and
pop
(bad)
mov
fisttp
push
(bad)
iret
jns
add
scas
mov
stos
pop
test
push
ds
or
jmp
pop
fwait
test
mov
lea
inc
jne
inc
loop
stc
hlt
sar
cmp
arpl
or
inc
dec
movs
mov
pop
(bad)
inc
jmp
popf
movs
xor
outs
jecxz
add
scas
cmc
or
xchg
xor
(bad)
cmp
xchg
(bad)
lea
xor
xchg
fcomi
std
dec
xchg
(bad)
(bad)
(bad)
fidivr
mov
ins
inc
imul
sub
stos
push
xor
ret
aad
push
sub
mov
add
sbb
cmp
mov
mov
loopne
pushf
mov
lock
ja
outs
inc
sub
cmc
sahf
or
xchg
mov
aad
aaa
sub
ja
test
xor
jno
(bad)
(bad)
mov
ret
mov
test
dec
stos
push
xchg
(bad)
and
mov
aaa
fiadd
sub
imul
push
xlat
aam
(bad)
push
(bad)
(bad)
(bad)
(bad)
std
ds
addr16
(bad)
mov
sub
sub
push
xor
daa
sbb
jb
std
jmp
(bad)
lea
and
mov
cld
and
cs
(bad)
call
fcomp
cmp
cmps
xchg
ficom
push
add
(bad)
jmp
sbb
fnstenv
add
stc
(bad)
ja
inc
cmp
nop
(bad)
push
or
cwde
enter
sub
and
or
jle
fsub
adc
(bad)
cld
(bad)
dec
cmp
aam
and
rep
mov
hlt
lds
xor
mov
ret
sub
cmp
xor
mov
call
xor
mov
sbb
sbb
arpl
imul
out
je
add
(bad)
(bad)
lock
inc
add
sar
clc
(bad)
aas
and
nop
dec
ss
(bad)
(bad)
jg
push
in
int3
retf
dec
mov
inc
jmp
rcl
(bad)
je
inc
aam
pop
out
xor
inc
sub
hlt
(bad)
stos
psrlw
imul
cli
pop
add
xchg
retf
xchg
jo
fbstp
mov
fist
sbb
sub
jg
mov
stos
lock
(bad)
(bad)
(bad)
dec
push
int
adc
call
loope
das
pop
or
xor
add
popa
pop
jecxz
mov
int3
adc
sub
js
int3
sahf
add
das
push
dec
loop
dec
fdiv
xchg
push
mov
(bad)
(bad)
(bad)
aas
xchg
int
lods
retf
push
sub
adc
jg
aad
popf
fdiv
pop
add
cli
add
call
dec
scas
jp
shr
mov
jmp
pop
scas
jb
mov
adc
inc
rcr
enter
dec
(bad)
(bad)
push
fimul
in
lea
or
iret
mov
adc
push
sti
pop
pop
pop
xchg
icebp
fld
xchg
add
iret
stos
xor
pop
loopne
jmp
jl
xor
pushf
(bad)
call
cwde
ror
cmp
outs
(bad)
sar
cmp
fstp
jg
out
add
pop
lock
dec
ss
jo
xchg
push
daa
push
xchg
imul
(bad)
call
fs
mov
xor
push
and
mov
(bad)
(bad)
(bad)
(bad)
mov
or
loop
and
sbb
ret
fs
push
mov
cmp
push
imul
js
test
add
movs
cli
loop
xchg
cdq
mov
(bad)
call
ins
dec
mov
fdiv
jl
rol
xor
mov
js
(bad)
call
je
and
and
fcomip
loope
std
xchg
xchg
lock
pop
jmp
loop
dec
sub
xchg
pushf
hlt
dec
add
push
fbstp
or
leave
clc
jmp
mov
inc
sub
imul
imul
rcr
adc
mov
xor
mov
imul
es
jmp
(bad)
call
nop
pop
ror
pop
outs
add
cmp
lock
add
pop
loopne
mov
mov
sub
nop
loope
xchg
hlt
cmps
ror
xor
enter
jle
call
xchg
fstp
and
aad
outs
sti
fs
xchg
(bad)
push
pop
push
mov
into
test
mov
ss
(bad)
call
pushf
mov
jmp
cmps
in
or
push
shl
fild
xor
push
loop
shl
aam
iret
and
dec
lock
cmp
or
add
inc
movs
or
movs
sub
(bad)
(bad)
(bad)
jmp
add
hlt
and
js
xor
add
arpl
arpl
inc
rol
add
push
(bad)
mov
push
sub
test
xor
les
(bad)
(bad)
(bad)
call
cs
sbb
mov
add
(bad)
test
test
in
push
sub
add
xor
loop
retf
lods
loop
call
repnz
fcom
(bad)
mov
mov
push
movs
sahf
mov
xor
cld
sbb
add
mov
cmc
cs
push
aaa
leave
aam
data16
in
(bad)
fild
pop
or
ins
js
add
in
(bad)
(bad)
jg
ss
mov
jecxz
(bad)
or
mov
cmp
imul
push
inc
mov
xor
pop
mov
lea
push
add
aas
hlt
(bad)
call
es
cwde
ds
dec
jmp
ret
cmp
or
clc
(bad)
(bad)
inc
pop
push
pop
enter
xlat
lods
push
out
sub
mov
inc
inc
rol
ins
pop
icebp
add
js
or
add
outs
pop
hlt
inc
mov
arpl
les
inc
xor
cmp
(bad)
call
and
cmps
jle
pop
addr16
imul
add
mov
test
sub
mov
add
call
add
or
sti
daa
lock
aas
inc
and
pop
cmp
sub
in
jo
(bad)
(bad)
jg
xchg
jb
xchg
or
sbb
enter
and
push
dec
stos
jmp
test
std
ror
pop
adc
jg
std
in
sub
mov
idiv
or
dec
xor
fnstenv
(bad)
(bad)
cmp
mov
nop
fcomp
inc
ss
sahf
adc
(bad)
clc
sub
call
xor
mov
fs
scas
stos
scas
inc
adc
cmp
(bad)
(bad)
jle
jg
lods
mov
repnz
dec
mov
dec
adc
(bad)
(bad)
fisttp
mov
pusha
pop
movs
fild
aam
hlt
xor
ror
xchg
and
add
in
cld
pop
lahf
shl
add
(bad)
push
jmp
ret
or
enter
mov
xor
cmc
pusha
(bad)
xchg
mov
and
mov
mov
sub
cdq
clc
jmp
rcl
adc
leave
leave
shr
push
stos
mov
mov
fcomip
jecxz
xor
and
mov
pop
leave
sub
aam
movs
or
movs
inc
xor
dec
dec
jecxz
pop
push
lahf
rcr
ins
cli
sub
(bad)
(bad)
out
mov
cdq
adc
dec
lods
xlat
push
cmp
rcl
popa
adc
inc
daa
imul
jb
mov
jecxz
dec
add
mov
and
mov
sub
inc
sub
and
mov
and
icebp
adc
sahf
mov
mov
xor
dec
out
clc
jle
retf
jne
test
push
arpl
jmp
mov
clc
sub
push
mov
cli
add
mov
cld
push
sbb
lds
jne
sbb
mov
in
cdq
xor
inc
adc
xchg
aad
stc
scas
add
loop
adc
lods
sub
fcomp
leave
sub
dec
cmp
call
cmp
test
daa
pop
repz
xor
dec
adc
(bad)
ja
outs
pusha
push
pop
or
add
out
repz
push
mov
in
lock
enter
into
ja
adc
enter
fistp
outs
xchg
(bad)
dec
call
clc
push
sub
mov
sbb
inc
mov
inc
movs
cmps
mov
or
sahf
jnp
(bad)
int
cmp
sbb
xlat
pop
or
imul
sahf
das
jb
dec
cmp
hlt
ret
not
fs
nop
arpl
lock
(bad)
jg
rcl
inc
arpl
add
les
js
cmp
fsub
sub
stos
ret
mov
(bad)
push
dec
add
cmp
ficomp
cld
or
test
outs
cli
out
in
cli
inc
xchg
inc
xor
int3
xor
jb
fwait
out
cmps
je
gs
(bad)
(bad)
(bad)
mov
imul
sbb
jo
adc
aad
iret
test
fadd
mov
fwait
jg
and
ret
cs
dec
xchg
mov
pop
movs
inc
(bad)
jle
movs
sub
jnp
xor
adc
mov
fdivp
jg
dec
xor
aad
leave
mov
and
mov
or
cld
hlt
adc
cli
(bad)
mov
inc
pop
lahf
ret
jmp
call
ins
mov
pop
sbb
mov
pop
inc
push
fnstsw
(bad)
jmp
xchg
out
test
adc
add
pop
test
inc
(bad)
test
loopne
fadd
fwait
movs
dec
in
xchg
push
cmp
(bad)
(bad)
fbld
lods
cmp
xchg
in
pop
aas
in
out
jmp
popf
pop
fbstp
push
jnp
fcmovnu
mov
call
add
jmp
jo
inc
ja
push
inc
gs
mov
dec
add
jns
jg
pop
cmc
popa
inc
inc
or
and
mov
test
xor
cld
dec
push
and
(bad)
jl
icebp
mov
or
mov
dec
push
fsubr
push
into
mov
fdivr
(bad)
fild
cld
mov
mov
adc
or
pop
jl
jmp
and
int3
ret
idiv
call
pop
repz
xchg
aam
xchg
add
cmp
cmps
(bad)
(bad)
inc
stos
xor
fs
sbb
mov
push
fwait
dec
push
xor
jle
test
or
and
imul
repnz
mov
les
mov
jmp
into
cmp
add
aam
outs
int
pop
cld
(bad)
push
out
mov
ins
outs
mov
mov
mov
icebp
pop
add
mov
es
xchg
pop
scas
xlat
cld
scas
push
adc
push
inc
mov
fisttp
pop
push
push
or
dec
xor
adc
pushf
push
pop
movs
adc
bound
retf
neg
jb
push
test
add
(bad)
(bad)
(bad)
jg
cli
daa
xor
jecxz
jnp
push
push
test
jl
mov
loopne
lea
rcl
mov
fnstcw
jae
neg
call
inc
dec
dec
mov
scas
call
pop
lock
pop
mov
repnz
lods
dec
dec
ret
mov
dec
or
cmp
sahf
mov
fcom
fdiv
fidiv
int
add
aaa
or
loopne
call
jo
sub
(bad)
shl
in
mov
add
push
loop
in
loopne
(bad)
call
jecxz
(bad)
xor
test
add
dec
jmp
mov
(bad)
icebp
(bad)
getsec
sub
push
add
out
cli
push
mov
or
call
mov
pop
or
in
or
rol
mov
loope
sub
(bad)
push
cmp
or
shr
leave
jl
mov
dec
or
icebp
(bad)
(bad)
aas
mov
sub
mov
aam
xchg
mov
xchg
push
dec
test
fbld
push
ret
xchg
out
xor
and
cmp
fwait
jecxz
adc
cmp
and
adc
dec
sar
(bad)
(bad)
mov
push
or
mov
loope
xchg
push
ins
ds
sbb
shr
cdq
jl
imul
jbe
leave
mov
in
mov
fcmovu
dec
inc
pop
jp
imul
and
ret
fadd
push
dec
mov
(bad)
retf
cmp
sbb
(bad)
jmp
outs
mov
fld
and
mov
adc
call
loopne
mov
ds
arpl
clc
das
fdivrp
xchg
fidivr
pop
sub
xor
dec
scas
(bad)
(bad)
cmp
sub
push
out
scas
outs
and
xor
dec
and
add
sbb
mov
aad
(bad)
(bad)
inc
dec
sbb
lahf
je
das
pop
xchg
push
fstp
pop
daa
push
mov
sub
adc
mov
xor
sbb
in
push
mov
sub
mov
pop
cmp
add
jns
movs
jns
add
int
xor
jns
sub
pop
(bad)
call
pushf
cmp
jmp
jo
add
sahf
or
sbb
xchg
nop
push
or
pop
cmc
in
test
adc
mov
retf
xchg
call
jmp
cdq
sbb
mov
xlat
int
mov
cmps
outs
cmp
int3
sub
pop
(bad)
jg
adc
add
add
loope
clc
add
jne
int3
cmp
fsubr
pop
je
adc
data16
cmp
or
mov
jae
setle
or
and
sub
or
fist
cmps
mov
push
es
add
push
xor
test
sti
popa
mov
xchg
lods
sub
xchg
jecxz
loopne
xor
popa
add
stos
mov
cmovl
dec
add
es
inc
movs
or
scas
mov
(bad)
jmp
xor
sbb
jle
ror
dec
mov
sub
dec
mul
clc
outs
(bad)
idiv
(bad)
jg
cld
hlt
mov
mov
cmp
repnz
jp
add
dec
inc
mov
add
(bad)
pop
movs
call
sbb
xchg
inc
inc
cmp
and
adc
xchg
ins
and
fiadd
dec
loope
cld
call
push
dec
and
repnz
imul
mov
add
scas
cmp
push
jmp
outs
aaa
add
push
push
cld
sahf
movs
nop
sub
mov
jecxz
movs
enter
dec
mov
shr
lea
jbe
aaa
dec
or
and
jns
std
jg
nop
adc
lods
push
out
cli
stos
mov
mov
out
out
aad
fnstcw
mov
fdivrp
repz
or
cwde
pop
jmp
std
cmps
dec
into
push
popa
inc
imul
clc
cmp
mov
scas
push
popf
or
jg
rcl
adc
xor
xlat
into
ret
sahf
cmp
jmp
lea
(bad)
mov
mov
mov
add
pop
pop
ins
jne
or
mov
inc
dec
sub
push
mov
jg
dec
cwde
pop
xor
mov
(bad)
cdq
into
mov
mov
mov
pushf
es
pop
cmp
loop
xor
shl
sar
lods
retf
mov
jl
add
or
push
pop
popf
out
sub
pop
xlat
fdiv
call
adc
or
sub
xchg
pusha
lods
pushf
pop
imul
dec
push
or
aas
lds
dec
mov
daa
mov
mov
xchg
or
(bad)
pop
hlt
and
mov
mov
jae
add
cs
(bad)
(bad)
inc
xor
jecxz
xor
pop
and
loope
dec
retf
call
jecxz
call
leave
pop
js
test
punpckhwd
ret
pop
mov
jp
(bad)
jmp
daa
sbb
xor
jae
push
call
mov
test
pop
mov
add
out
jl
sar
les
sub
sbb
(bad)
jmp
sbb
sbb
enter
iret
mov
sbb
xor
cwde
test
lock
(bad)
jmp
ret
or
in
and
jbe
sahf
mov
and
enter
push
dec
xchg
rcl
push
jg
inc
dec
cld
pop
pop
adc
nop
xor
sbb
(bad)
cmps
lahf
jg
and
xchg
cdq
sbb
(bad)
jg
push
xchg
pop
jno
mov
pushf
rol
or
xchg
push
nop
mov
leave
ret
(bad)
jmp
xor
cdq
mov
cmp
dec
xor
enter
daa
(bad)
(bad)
cmp
xchg
push
aam
(bad)
mov
icebp
jge
pop
(bad)
jg
sbb
movs
adc
adc
scas
mov
pop
jo
mov
sub
dec
mov
pop
or
aas
sbb
inc
inc
repz
mov
pop
inc
(bad)
hlt
jmp
jmp
ins
ss
sbb
add
(bad)
call
push
sub
call
ins
jb
rcl
shr
call
inc
or
loopne
test
aad
int3
jno
cmps
xchg
fbld
dec
aas
mov
pusha
mov
enter
(bad)
(bad)
dec
xchg
inc
xor
push
xchg
popf
and
mov
cmp
arpl
mov
fs
ss
(bad)
(bad)
inc
cmps
inc
imul
pop
jno
or
inc
push
or
jge
cmps
sub
sub
(bad)
(bad)
(bad)
fist
ret
fdivr
(bad)
ret
xchg
add
lock
sbb
inc
(bad)
(bad)
(bad)
in
fiadd
mov
add
inc
adc
rcl
jb
repnz
(bad)
dec
dec
pop
dec
movs
adc
outs
mov
call
dec
loope
add
pop
hlt
(bad)
(bad)
jnp
aad
stos
stos
push
jne
pop
pop
sub
pop
aad
adc
idiv
inc
jg
addr16
(bad)
dec
inc
mov
pop
div
pop
pop
jecxz
(bad)
arpl
jl
mov
ins
push
adc
popf
shl
xchg
int
pop
mov
push
push
in
(bad)
call
mov
test
lock
mov
xchg
jg
sub
(bad)
jl
outs
scas
je
int3
sbb
push
push
(bad)
(bad)
(bad)
dec
lods
cwde
push
pop
cmp
xchg
mov
(bad)
pxor
mov
jecxz
(bad)
(bad)
call
fwait
jbe
ins
pop
jne
push
(bad)
fistp
rcl
xchg
movs
lock
(bad)
int
popf
push
add
push
pop
add
mov
retf
adc
xor
(bad)
mov
stos
jl
int3
test
add
push
dec
mov
icebp
(bad)
(bad)
fstp
add
test
out
stos
push
push
xchg
mov
hlt
lock
ds
(bad)
not
cmp
ret
sahf
aaa
push
push
add
jl
out
xchg
pusha
enter
(bad)
(bad)
dec
fiadd
ins
inc
xchg
outs
es
call
or
(bad)
(bad)
call
and
repnz
enter
iret
xchg
sbb
and
adc
adc
fsubr
xchg
mov
cmp
sbb
jle
mov
out
outs
cmp
cmps
retf
repnz
outs
jmp
mov
ret
leave
stos
mov
mov
outs
sbb
call
hlt
pop
(bad)
(bad)
sub
mov
test
cld
cmp
test
adc
mov
hlt
push
jnp
pop
test
ret
mov
idiv
(bad)
(bad)
push
ins
lahf
mov
jecxz
mov
in
xchg
mov
mov
xchg
(bad)
jns
(bad)
push
fwait
neg
outs
out
push
aas
jnp
jns
je
mov
loopne
xlat
inc
(bad)
(bad)
(bad)
call
loop
stc
or
and
stc
mov
mov
and
sbb
or
dec
adc
xchg
or
rcl
fsubr
movs
(bad)
cmp
std
in
cwde
xor
add
movs
inc
ins
xor
xchg
pusha
mov
(bad)
fistp
outs
mov
push
inc
mov
(bad)
mov
jmp
cdq
cmc
call
mov
or
imul
cdq
inc
(bad)
inc
hlt
call
out
xor
call
bndstx
mov
call
xor
(bad)
push
mov
xor
xchg
(bad)
push
cmp
je
jg
icebp
mov
cwde
hlt
add
add
repnz
mov
stos
(bad)
dec
dec
inc
jno
dec
nop
fs
mov
fidiv
jne
sbb
shl
xchg
shl
push
lods
and
sbb
daa
xor
mov
jmp
(bad)
fisttp
jns
call
push
shl
jo
mov
ins
jmp
sbb
push
sar
(bad)
call
and
pop
inc
sub
and
or
ficomp
enter
lods
shl
(bad)
inc
dec
pop
cmps
add
push
mov
int3
inc
cmp
push
cld
dec
sbb
mov
push
cld
adc
adc
or
js
or
lods
xor
cs
cmp
adc
aad
test
mov
jmp
push
pop
lods
mov
xor
sbb
test
mov
test
inc
pop
(bad)
(bad)
(bad)
jmp
pop
jmp
inc
and
mov
pop
dec
nop
cwde
mov
cmp
sahf
sbb
imul
arpl
scas
test
push
xor
dec
or
movs
ret
dec
inc
adc
pop
(bad)
(bad)
(bad)
call
or
adc
inc
jns
pop
cli
(bad)
add
call
dec
lods
mov
(bad)
(bad)
inc
mov
call
int
rcr
xchg
cld
imul
jne
(bad)
call
sub
dec
sub
sbb
cmp
clc
xchg
jo
retf
pop
pop
js
pop
call
sub
push
pop
push
icebp
shl
stos
mov
fimul
hlt
push
psubq
push
push
cmp
ficom
adc
sbb
das
sub
(bad)
(bad)
(bad)
ftst
jb
hlt
cli
in
call
dec
fcmovne
lods
popf
ins
and
sub
inc
fsub
ret
and
(bad)
(bad)
jmp
jns
ds
fdivr
mov
mov
mov
bnd
mov
adc
jmp
(bad)
(bad)
(bad)
out
fdivp
mov
mov
push
or
out
inc
xor
into
inc
fbld
ficom
push
sub
mov
adc
ja
jmp
xor
dec
sub
xchg
mov
jmp
xchg
dec
in
mov
xchg
fs
jg
cdq
push
mov
movs
xlat
retf
aaa
ja
std
mov
sub
cmps
iret
mov
cmp
call
cmp
aas
(bad)
xlat
fxch
mov
(bad)
jmp
adc
fwait
fwait
mov
mov
add
push
adc
popa
xor
mov
inc
movs
adc
inc
fwait
rol
sbb
jmp
jb
jmp
inc
pop
fist
popa
call
inc
adc
(bad)
(bad)
(bad)
inc
dec
push
enter
addr16
dec
repz
jl
xchg
mov
fadd
jbe
push
cmps
mov
jmp
ins
mov
stos
(bad)
shl
mov
or
and
cdq
push
(bad)
(bad)
(bad)
in
sbb
add
rcl
adc
xchg
gs
mov
idiv
inc
cmp
fwait
xchg
dec
mov
fstp
sti
lock
retf
jecxz
mov
icebp
push
inc
std
(bad)
sub
mov
pop
dec
mov
jg
out
clc
loop
and
dec
div
jl
loop
pop
std
inc
and
and
(bad)
retf
(bad)
jmp
or
adc
movs
sub
popf
add
xchg
dec
pop
fs
mov
xchg
int
mov
push
jne
fwait
sar
pop
in
dec
movs
add
(bad)
fadd
dec
loop
shl
mov
mov
(bad)
(bad)
dec
mov
or
movs
pusha
add
mov
pop
jo
movs
je
pusha
(bad)
(bad)
(bad)
fbld
mov
pop
pop
mov
adc
icebp
ror
inc
sbb
pop
cmc
inc
in
add
xor
and
call
shl
(bad)
jmp
jo
outs
bound
int3
cmp
fs
inc
aam
inc
pop
cmps
mov
std
xchg
arpl
call
inc
mov
mov
sub
sub
push
jle
cwde
jne
inc
and
ret
repnz
adc
mov
cld
call
sub
addr16
je
cs
sbb
or
ficom
dec
out
mov
call
mov
scas
stc
inc
call
xor
ret
xchg
adc
push
(bad)
jmp
push
and
xchg
mov
add
adc
out
and
gs
shl
sbb
add
dec
int
mov
(bad)
mov
sub
call
mov
cdq
mov
int3
fmul
cwde
scas
mov
(bad)
(bad)
(bad)
inc
and
cmc
cmp
adc
sub
inc
bound
sub
and
(bad)
(bad)
(bad)
jmp
xchg
add
loopne
retf
cld
ins
mov
pop
and
push
push
call
out
and
inc
push
pop
rol
mov
inc
xor
sub
(bad)
inc
xor
mov
out
xchg
mov
inc
ficomp
repnz
cli
(bad)
(bad)
call
inc
inc
aad
or
add
sbb
rcl
cli
outs
aaa
int
hlt
(bad)
push
rcl
addr16
sbb
adc
ss
pop
(bad)
mov
retf
dec
mov
xor
jno
mov
aaa
mov
push
test
jmp
(bad)
(bad)
dec
xor
xchg
ficom
outs
jmp
icebp
arpl
jnp
mov
(bad)
(bad)
(bad)
jmp
pop
pop
(bad)
push
pop
fidivr
cs
adc
mov
sub
div
imul
dec
(bad)
or
jne
jns
movs
shl
pop
cmp
(bad)
out
mov
mov
(bad)
call
jbe
into
cmc
fsub
pop
push
mov
mov
xchg
jg
pop
inc
and
mov
loop
lds
xchg
inc
adc
(bad)
(bad)
dec
(bad)
rcr
sub
inc
add
popf
xchg
lea
inc
inc
es
push
mov
pusha
dec
push
push
retf
in
jmp
cmp
(bad)
(bad)
(bad)
inc
in
jbe
mov
bound
jg
dec
cmp
fs
sbb
xor
clc
adc
adc
mov
mov
pop
aas
ficomp
cmps
(bad)
push
mov
aas
je
(bad)
inc
sbb
dec
xor
add
(bad)
(bad)
(bad)
jp
dec
jmp
enter
jno
mov
mov
sbb
ins
push
nop
cmps
adc
in
dec
and
(bad)
jmp
shl
lock
push
dec
xor
inc
in
sahf
adc
(bad)
call
xchg
lods
stc
aad
cmps
clc
jge
shr
jbe
jno
in
sub
(bad)
(bad)
dec
and
or
inc
in
bound
mov
or
(bad)
(bad)
fbld
and
in
jp
add
stos
dec
mov
and
enter
jge
(bad)
(bad)
call
xchg
dec
dec
stos
sub
dec
sbb
mov
pop
jle
lods
icebp
jne
mov
(bad)
(bad)
(bad)
(bad)
jmp
mov
mov
out
lods
sub
push
test
and
jbe
test
sbb
cmc
(bad)
jmp
push
in
pop
dec
repnz
das
mov
scas
xchg
mov
outs
mov
jmp
call
in
push
push
fisubr
(bad)
fcomip
retf
sbb
es
imul
in
gs
push
or
enter
(bad)
(bad)
call
inc
and
rcl
out
test
stos
sub
push
mov
(bad)
(bad)
mov
push
pop
in
jp
ret
jge
ja
test
sub
pop
test
cwde
je
inc
cmp
adc
mov
xor
mov
int3
retf
or
xor
sub
in
pop
dec
pop
xchg
add
or
dec
cmp
shr
sbb
jmp
xchg
sahf
add
xchg
push
test
jo
mov
aaa
mov
jecxz
mov
movs
loopne
xor
loope
dec
dec
sar
xchg
push
jns
and
mov
and
fsubr
xlat
jmp
mov
push
jo
add
xor
mov
cwde
popa
int3
call
jge
div
dec
mov
mov
and
push
jmp
(bad)
(bad)
call
jbe
cmp
fisubr
or
and
fist
aam
lods
inc
or
mov
(bad)
(bad)
fisttp
and
cdq
arpl
mov
pop
rcl
adc
sub
scas
popf
and
shr
sbb
fst
ins
pop
mov
aaa
sbb
add
push
and
shl
mov
sti
lahf
push
dec
push
cdq
inc
push
mov
aas
test
test
aaa
xchg
test
and
fldenv
fcomp
mov
mov
or
(bad)
(bad)
jmp
mov
adc
loope
add
test
mov
cmps
(bad)
dec
lds
retf
sbb
jmp
rcl
ror
js
jl
(bad)
(bad)
(bad)
dec
int
data16
xchg
loope
sahf
gs
imul
mov
mov
icebp
call
push
retf
in
inc
stos
je
outs
aas
adc
out
xchg
jg
jmp
neg
imul
pop
fs
lds
jmp
cmps
(bad)
sbb
div
pop
ins
ror
test
inc
iret
xchg
jmp
in
loope
mov
test
mov
mov
div
xchg
aam
int3
(bad)
(bad)
(bad)
(bad)
call
pop
mov
fnstsw
test
ins
pop
leave
hlt
(bad)
leave
das
out
fsubrp
sbb
mov
push
addr16
sbb
xchg
stos
ss
fcmovbe
fbld
stc
ins
cld
(bad)
(bad)
push
fsin
mov
mov
jnp
cmp
sbb
mov
sub
scas
clc
aaa
sbb
sbb
in
xchg
sub
cwde
push
push
sbb
pop
sub
int3
jns
inc
push
fwait
pop
push
inc
fsubp
sub
jmp
inc
popf
lods
or
(bad)
(bad)
fisub
xchg
out
int
lahf
ss
jecxz
mov
in
outs
push
clc
and
ss
or
push
test
(bad)
call
rcr
mov
scas
imul
xchg
mov
mov
push
(bad)
jmp
or
pop
add
adc
jmp
loopne
shl
and
or
enter
mov
pop
fimul
aad
inc
pushf
sbb
push
dec
pop
shl
adc
(bad)
(bad)
inc
pop
clc
fldenv
dec
cmps
ss
dec
mov
jo
cwde
call
mov
pushf
(bad)
(bad)
(bad)
push
fucom
or
pop
cmp
fmul
scas
cmp
xchg
div
mov
sbb
(bad)
out
mov
outs
(bad)
(bad)
(bad)
inc
(bad)
push
pop
pop
pop
push
xor
mov
mov
shr
fstp
push
mov
stos
aam
(bad)
jecxz
test
(bad)
push
xor
and
mov
and
push
es
add
sub
and
push
jge
sbb
stc
mov
popa
pop
into
data16
int3
(bad)
(bad)
mov
aaa
dec
xor
cmp
push
xor
imul
call
push
daa
hlt
cdq
inc
arpl
mov
fcmovu
cmp
aam
outs
(bad)
jg
xor
std
adc
xor
xchg
aas
mov
stos
shr
mov
(bad)
inc
dec
fwait
and
push
sub
pop
mov
jns
(bad)
call
ret
jmp
xor
mov
pop
jmp
adc
mov
mov
jecxz
lahf
dec
shl
pop
dec
das
in
adc
dec
pusha
jp
fistp
adc
std
(bad)
jg
mov
fsub
ins
mov
inc
inc
cmp
push
cs
mov
sbb
(bad)
inc
rol
push
rcl
or
jl
cmp
clc
push
xor
mov
or
jl
jbe
call
jmp
jmp
push
jmp
inc
push
mov
or
iret
push
mov
xlat
sbb
lock
lds
push
mov
and
test
jge
sbb
movs
adc
push
xchg
jns
jmp
mov
sahf
dec
retf
mov
xchg
aam
or
in
adc
test
shr
(bad)
(bad)
mov
call
cwde
jmp
ins
jg
xlat
push
mov
mov
fisubr
movs
pop
js
mov
xchg
sbb
fnstenv
jmp
(bad)
jmp
pop
rcl
cmp
jbe
stos
mov
mov
xchg
outs
clc
(bad)
call
cmp
and
cmp
push
paddusw
fstp
cli
(bad)
(bad)
fisttp
test
retf
xchg
adc
mov
xchg
mov
(bad)
(bad)
jmp
pop
out
pop
mov
push
pop
pop
and
cmp
xlat
xor
lea
sbb
in
xchg
cli
dec
sub
jmp
cli
cli
imul
mov
scas
cmp
xor
lds
int
lock
sub
neg
jbe
(bad)
call
in
out
out
ins
aas
fidiv
mov
out
fldcw
sar
(bad)
dec
fstp
in
lahf
pop
jo
enter
lds
adc
dec
out
(bad)
(bad)
(bad)
push
push
arpl
mov
clc
push
jbe
xchg
cmp
dec
sbb
inc
jns
sbb
push
ins
jns
shr
(bad)
add
adc
fs
sbb
(bad)
push
or
std
ds
inc
movs
into
addr16
inc
inc
aas
mov
mov
(bad)
push
sub
(bad)
in
adc
(bad)
jp
jb
iret
into
mov
xchg
adc
out
lods
adc
pmaxsw
sti
inc
and
mov
cld
sbb
jmp
cmp
(bad)
inc
add
jno
add
adc
mov
xchg
jne
mov
dec
rcl
mov
adc
adc
inc
pop
sub
pop
mov
dec
iret
inc
dec
sbb
inc
aad
icebp
jle
shr
cmp
enter
dec
sbb
jmp
(bad)
(bad)
(bad)
push
daa
xchg
cdq
in
nop
cmps
push
and
push
nop
call
sahf
dec
ins
cs
call
push
repz
popf
fistp
xchg
pop
pop
mov
movs
add
aam
scas
pushf
cmp
test
(bad)
fcom
push
pop
adc
retf
sub
fiadd
inc
mov
call
mov
and
cli
and
nop
ror
dec
repz
mov
xor
jmp
jmp
push
js
adc
dec
call
(bad)
(bad)
(bad)
(bad)
jnp
push
gs
iret
xor
int
inc
cmps
es
jb
into
fiadd
test
nop
and
lea
lock
sahf
mov
and
jmp
push
and
jb
fsubr
mov
outs
and
ins
pop
mov
mov
out
or
cmps
jecxz
or
mov
mov
xchg
outs
test
dec
ret
or
jmp
adc
push
cmp
xor
mov
(bad)
(bad)
(bad)
(bad)
jg
inc
dec
and
ret
xor
or
inc
xor
sub
aas
int
adc
and
mov
mov
stos
mov
dec
(bad)
js
(bad)
(bad)
inc
repz
les
pop
mov
push
mov
adc
sbb
xor
push
sub
dec
push
jmp
pop
xor
imul
test
jmp
xchg
mov
call
dec
imul
je
les
adc
or
sub
addr16
xchg
shr
movs
enter
lods
std
fcomip
call
cdq
xchg
arpl
xor
mov
push
mov
aaa
cmps
and
adc
inc
dec
rcr
jbe
dec
jl
adc
(bad)
inc
push
ins
or
sbb
lock
retf
fcom
push
push
fsub
add
mov
mov
cli
pop
popa
jbe
mov
add
cmp
retf
push
adc
cmp
or
sar
call
loop
bound
pusha
shl
pushf
mov
repnz
fsub
cwde
mov
(bad)
mov
clc
push
pusha
cmps
cmc
pushf
mov
or
test
movs
stos
mov
sbb
jmp
xor
(bad)
mov
test
jge
(bad)
(bad)
(bad)
(bad)
in
mov
sar
jecxz
jae
mov
fisttp
aam
clc
pop
arpl
mov
mov
push
jo
push
mov
imul
cmps
test
sbb
or
(bad)
popf
jge
(bad)
(bad)
jmp
pop
es
push
pop
out
jmp
(bad)
xlat
out
cmp
fld
mov
jo
pop
add
test
(bad)
mov
outs
in
in
popf
sub
sub
sub
xchg
lods
in
cmp
pop
cmc
cli
out
cli
push
push
sahf
jnp
jg
retf
push
pop
cmp
dec
push
cmp
(bad)
(bad)
(bad)
out
xchg
popf
inc
call
mov
adc
out
in
shr
and
mov
dec
cli
rcl
xchg
xchg
js
outs
pop
outs
dec
in
fiadd
scas
sahf
dec
shl
(bad)
(bad)
(bad)
mov
jbe
fs
sub
loop
into
lock
cmps
or
mov
cli
das
xor
inc
out
in
pop
mov
mov
ds
je
outs
clc
(bad)
jmp
pop
popf
shr
pop
cmp
data16
and
cwde
jmp
ja
retf
inc
mov
xchg
stos
sub
stos
das
dec
popa
adc
popf
push
call
out
inc
add
call
scas
jns
popa
shl
inc
outs
add
sub
ins
fs
out
and
(bad)
leave
inc
repz
sub
xchg
pop
lods
lods
je
mov
adc
stos
(bad)
(bad)
call
and
xchg
sub
mov
push
cld
fldenv
dec
mov
repnz
fwait
ds
rcl
jo
ins
dec
(bad)
mov
jne
inc
(bad)
(bad)
jmp
mov
jge
jne
inc
lds
test
push
mov
shl
cmc
call
std
push
inc
sti
es
stos
sbb
adc
lea
int3
(bad)
(bad)
mov
jno
sbb
adc
sbb
movs
loop
jae
mov
(bad)
(bad)
(bad)
call
cmp
and
or
xor
movs
cmp
stc
push
ficomp
cmps
retf
pushf
push
(bad)
(bad)
(bad)
(bad)
jnp
inc
xlat
xchg
dec
(bad)
cs
xor
inc
xor
aas
test
aas
inc
dec
inc
jae
out
push
out
ins
pop
cwde
cmps
pop
jmp
push
jne
sub
bound
xor
push
sub
(bad)
in
mov
jno
mov
or
outs
ss
cmp
add
aad
dec
mov
rcr
push
imul
fisttp
scas
push
jg
or
jae
mov
and
call
or
mov
arpl
(bad)
jmp
mov
movs
inc
xor
push
scas
loop
(bad)
xchg
inc
cld
enter
aad
xchg
inc
mov
push
sahf
cmp
int3
(bad)
aad
push
jmp
add
rol
jp
call
shl
(bad)
xor
(bad)
(bad)
(bad)
mov
xor
xchg
ror
push
and
call
push
cld
(bad)
in
and
pop
ret
loopne
loopne
movs
inc
ds
jbe
adc
(bad)
(bad)
(bad)
call
and
cmp
sbb
push
retf
fstp
or
enter
add
into
pop
sbb
cld
xor
xor
mov
fadd
push
cli
aaa
inc
in
stos
cmps
mov
adc
jg
loope
rcr
out
mov
jne
or
cmps
and
add
(bad)
mov
mov
ja
js
push
int3
pusha
arpl
retf
clc
jg
inc
and
rcr
inc
push
sbb
adc
fsub
das
inc
xor
outs
aam
shr
fisttp
pop
ud0
(bad)
call
jo
sar
inc
dec
std
jmp
sbb
dec
or
(bad)
(bad)
out
clc
cs
jmp
xchg
push
add
jl
loope
push
scas
ja
stos
ins
mov
dec
or
jne
repz
stos
jb
dec
jae
adc
inc
xchg
jmp
mov
movs
mov
jg
(bad)
call
sahf
mov
sbb
or
push
push
je
mov
out
cli
(bad)
inc
arpl
out
mov
popa
xchg
and
mov
pop
cmp
sar
int
test
std
jg
retf
sbb
ja
(bad)
fwait
mov
fndisi(8087
push
xor
in
(bad)
jmp
test
jge
push
mov
dec
das
cli
jg
inc
xchg
fst
(bad)
cmp
jnp
mov
mov
loope
xchg
scas
iret
xlat
ret
sbb
pop
push
outs
cwde
or
(bad)
xchg
sub
jbe
mov
xchg
sti
ret
push
push
push
cmp
and
inc
inc
mov
(bad)
dec
aam
cli
into
jmp
inc
jmp
mov
jle
scas
cmp
(bad)
(bad)
(bad)
fstp
xor
push
sub
cmp
push
add
cmp
cli
push
repz
(bad)
(bad)
(bad)
jmp
mov
sub
push
repz
or
sti
les
pop
jne
dec
test
mul
add
(bad)
(bad)
(bad)
jmp
and
cwde
jns
in
jb
xchg
and
inc
sahf
adc
add
ins
imul
(bad)
inc
sub
outs
test
or
push
ret
fisub
or
les
out
fstp
sahf
ficomp
(bad)
push
shr
push
js
jmp
inc
push
xchg
sahf
ss
adc
repz
or
nop
(bad)
repz
loope
inc
outs
or
jmp
stos
mov
popaw
mov
(bad)
(bad)
(bad)
jmp
bound
sub
daa
retf
xchg
add
cwde
sbb
mov
pop
pushf
scas
loope
jp
inc
mov
or
push
popa
add
cld
iret
sub
push
push
outs
es
(bad)
jmp
or
cmp
pop
xchg
out
xchg
add
lock
call
cmc
mov
jne
mov
icebp
fs
scas
hlt
(bad)
(bad)
dec
scas
jge
fstp
aas
lods
sub
stos
and
sbb
mov
push
(bad)
(bad)
inc
cmovne
outs
(bad)
lods
adc
mov
scas
jb
int
mov
mov
nop
(bad)
into
(bad)
(bad)
push
div
out
pop
aam
cmp
stos
out
xchg
inc
or
jmp
push
in
(bad)
(bad)
(bad)
jmp
je
xor
jnp
ror
cmp
push
cmp
jmp
pushf
loop
int
test
sub
dec
add
xchg
adc
test
jae
inc
xor
test
(bad)
push
mov
jne
test
xchg
inc
mov
push
imul
stos
rcl
xchg
or
dec
xchg
lea
out
cli
cmp
cmp
fcmovb
add
mov
cmp
cmps
mov
retf
cmps
fcmovu
mov
jno
sbb
adc
bound
(bad)
adc
mov
(bad)
(bad)
call
inc
xchg
in
data16
mov
fild
dec
add
rcr
add
mov
pop
pop
sub
call
add
inc
sub
mov
xchg
dec
push
jp
and
gs
jge
(bad)
(bad)
jmp
push
xlat
and
or
add
mov
(bad)
(bad)
(bad)
call
sar
sbb
aaa
add
fbstp
mov
add
xor
add
(bad)
inc
mov
add
(bad)
sub
ins
(bad)
(bad)
(bad)
jmp
push
adc
cwde
add
test
cmp
adc
les
dec
(bad)
(bad)
(bad)
jmp
jge
cmp
mov
cmp
bound
dec
das
loop
aaa
pop
imul
mov
mov
sti
out
arpl
enter
jne
sbb
or
mov
xchg
(bad)
(bad)
inc
clc
mov
jl
int
pushf
jae
pop
mov
push
adc
mov
lahf
jnp
mov
mov
aad
and
sbb
pop
inc
cbw
(bad)
pop
(bad)
inc
inc
ret
sub
mov
cli
lds
jl
repz
cld
jnp
repnz
psubusb
xchg
imul
mov
shr
inc
cmp
xchg
(bad)
or
(bad)
dec
push
inc
dec
xchg
sbb
ja
mov
mov
jo
pop
loopne
push
dec
movs
or
or
cmp
fadd
stos
mov
xchg
add
and
jl
imul
(bad)
(bad)
jmp
sahf
xor
jne
cmp
sbb
mov
lahf
in
imul
cmps
mov
or
out
pusha
and
cmps
test
pop
(bad)
mov
nop
rcr
and
sbb
or
test
int3
fcmove
mov
push
inc
fwait
sub
cdq
pop
add
mov
(bad)
(bad)
push
ins
sbb
shr
jmp
test
cmp
dec
int3
loopne
xor
int
xor
cmps
jbe
sub
jo
mov
pusha
jecxz
retf
cmps
add
(bad)
inc
pop
xor
mov
out
test
clc
stc
mov
jno
fistp
call
int3
cmp
gs
test
jl
mov
popa
fcos
(bad)
(bad)
jmp
ficom
mov
and
mov
pusha
push
adc
pop
or
fadd
loopne
xchg
test
(bad)
dec
call
cs
pop
arpl
call
pop
and
(bad)
(bad)
(bad)
jg
push
push
push
rcr
mov
inc
call
add
rcl
jg
(bad)
call
push
retf
addr16
or
sbb
and
jmp
(bad)
(bad)
fsubr
jo
dec
jb
(bad)
mov
mov
hlt
xchg
mov
push
fbstp
ret
(bad)
fcomip
mov
xchg
adc
aaa
stos
push
in
popf
jl
dec
cdq
pop
in
fcom
nop
sub
jns
inc
cld
mov
(bad)
shl
dec
cmp
movs
jb
(bad)
xchg
push
movs
dec
test
dec
test
and
stc
add
pop
xchg
jne
xchg
add
inc
sub
jge
push
dec
xchg
test
(bad)
push
arpl
cmc
(bad)
jmp
cmps
push
leave
imul
or
dec
sub
mov
xchg
movs
xchg
pop
imul
clc
sbb
and
adc
outs
loope
pop
(bad)
call
(bad)
in
mov
lods
fwait
(bad)
scas
iret
dec
sar
inc
call
outs
cli
dec
leave
cmp
cmps
or
shl
xchg
push
push
jbe
data16
dec
inc
outs
pushf
data16
add
sub
or
pushf
xchg
cmp
cmp
jbe
fdivr
(bad)
(bad)
jmp
adc
cmp
es
cld
les
and
ins
std
lods
pop
cmp
(bad)
mov
adc
jbe
adc
xchg
adc
call
pop
adc
aam
mov
in
aas
sar
(bad)
jmp
lock
dec
bound
add
jmp
cli
enter
(bad)
(bad)
jmp
mov
test
inc
mov
push
sub
popa
xor
pminsw
shl
pop
call
popa
rcl
fs
fwait
add
cld
rcl
(bad)
jmp
mov
or
add
push
mov
cmp
adc
into
aam
cwde
or
dec
xor
jo
mov
jae
fidiv
mov
test
movs
sub
cli
fisubr
adc
xchg
xchg
(bad)
(bad)
(bad)
inc
sti
inc
ss
cmc
idiv
mov
(bad)
jp
shr
setge
retf
mov
(bad)
(bad)
dec
mov
inc
mov
jp
retf
jg
out
in
sbb
clc
mov
(bad)
(bad)
jmp
mov
and
push
cmc
xchg
or
cmp
test
adc
mov
(bad)
cmp
push
inc
mov
ret
(bad)
(bad)
cmp
adc
xor
loope
sub
add
call
mov
cmp
push
cmp
mov
mov
fadd
mov
pop
pop
loope
push
in
scas
xchg
es
dec
dec
(bad)
jg
sahf
pop
lahf
scas
xlat
jmp
sub
mov
(bad)
aaa
cld
push
retf
dec
fnstsw
in
imul
shl
cmc
push
std
in
inc
mov
call
sub
les
aad
cmp
and
jns
out
pop
and
test
xor
fdiv
fcomip
(bad)
call
sub
aad
mov
cmc
jno
in
cmp
jmp
js
int
leave
mov
(bad)
(bad)
(bad)
call
enter
mov
adc
sbb
xor
call
add
mov
(bad)
(bad)
inc
and
mov
mov
lea
inc
mov
and
mov
(bad)
jmp
outs
js
jne
cdq
mov
push
fist
hlt
sti
test
jp
(bad)
and
xor
adc
inc
mov
jb
call
cwde
or
pop
jae
and
add
mov
jg
iret
mov
(bad)
jmp
popf
pop
pop
in
sub
push
ret
ja
scas
sub
xor
mov
scas
jmp
(bad)
call
popf
xchg
xor
call
nop
jne
or
adc
nop
push
dec
push
repz
(bad)
(bad)
(bad)
inc
test
mov
push
mov
push
gs
pop
inc
imul
test
push
sub
(bad)
jmp
jno
or
sbb
adc
push
daa
sbb
cs
aam
adc
jbe
aad
jae
dec
inc
jnp
jle
(bad)
(bad)
(bad)
cmp
idiv
inc
aam
fild
ffreep
fiadd
sti
pop
pop
cli
pusha
ja
fld
(bad)
(bad)
(bad)
jmp
sub
adc
popa
nop
mov
adc
inc
std
jg
stos
stos
sub
(bad)
(bad)
dec
pop
in
repz
cli
inc
dec
in
out
lock
dec
(bad)
retf
ror
in
adc
sbb
mov
push
add
xor
mov
rcl
and
jnp
dec
jae
imul
inc
sub
xor
(bad)
(bad)
(bad)
inc
pop
add
pop
mov
push
mov
adc
jecxz
push
pop
(bad)
mov
pop
loopne
test
shl
cmp
pop
mov
push
add
xchg
or
popa
and
sbb
mov
or
test
xor
or
xchg
sar
(bad)
xor
cld
mov
xchg
sub
fs
add
fdivr
mov
(bad)
(bad)
(bad)
jmp
shr
jne
pushf
or
mov
and
sub
sub
mov
retf
mov
push
mov
xchg
cli
aaa
adc
jg
inc
jbe
jmp
stos
loop
push
lds
shl
imul
call
and
call
(bad)
add
inc
cmps
mov
and
int3
aad
(bad)
(bad)
(bad)
jmp
mov
retf
inc
nop
xchg
xor
push
aam
dec
mov
pop
add
out
jecxz
inc
fild
jmp
add
pushf
adc
cmp
push
xor
fprem
xlat
into
mov
cmps
cdq
xor
lock
loop
sub
gs
aaa
inc
shl
adc
cmp
xor
adc
(bad)
(bad)
jmp
mov
mov
add
push
and
call
lock
(bad)
jmp
push
int
f2xm1
ja
xor
push
fwait
loopne
push
dec
movs
mov
or
(bad)
mov
jno
and
in
(bad)
or
inc
add
push
xor
mov
das
icebp
enter
(bad)
(bad)
(bad)
(bad)
fsubp
div
and
iret
fidiv
fbld
test
(bad)
(bad)
(bad)
call
call
mov
inc
imul
jae
ins
jbe
movs
sbb
(bad)
mov
(bad)
je
adc
jecxz
sub
(bad)
fbstp
inc
jge
icebp
dec
pushf
mov
sti
cli
(bad)
dec
jmp
repnz
das
int3
cmp
(bad)
inc
push
cmp
scas
gs
xor
lods
fimul
sub
pop
cmc
(bad)
call
jns
mov
fst
out
(bad)
stos
push
adc
sub
cwde
mov
push
mov
jo
adc
pop
and
mov
or
push
cmp
xchg
aad
(bad)
(bad)
dec
sub
and
mov
fwait
ds
sub
fdiv
daa
cmc
out
fdiv
mov
(bad)
call
sahf
iret
sub
arpl
aad
movs
jmp
fistp
(bad)
(bad)
(bad)
mov
cmp
inc
inc
lods
dec
aaa
mov
cmp
enter
repnz
(bad)
sbb
(bad)
(bad)
push
push
push
in
pop
jp
and
shl
aam
mov
push
inc
loope
push
add
bound
(bad)
call
cs
mov
push
push
add
jbe
lods
lods
in
scas
pop
push
inc
push
adc
mov
out
or
inc
stos
outs
leave
(bad)
jg
jmp
pop
ret
jl
nop
mov
(bad)
xchg
and
lock
aas
cli
cmova
(bad)
(bad)
push
pushf
icebp
jne
aas
ins
popf
ficom
xchg
xchg
imul
fcomp
or
lock
cmp
adc
and
cwde
cmc
xchg
out
push
aas
scas
(bad)
(bad)
dec
cli
sbb
out
mov
les
out
rol
(bad)
aam
clc
(bad)
(bad)
push
inc
xlat
je
je
add
or
mov
sbb
ds
out
stos
out
mov
cld
call
gs
(bad)
(bad)
jmp
cmc
add
(bad)
cmp
adc
xor
jnp
movs
cdq
std
pop
lahf
ret
popa
out
idiv
ret
pop
(bad)
(bad)
(bad)
call
or
dec
fmul
lea
cmp
cmc
fsub
xchg
push
push
or
pop
push
test
cld
(bad)
(bad)
jmp
sbb
xchg
fstp
pop
lods
cs
xor
addr16
sbb
scas
test
push
xlat
(bad)
call
mov
lds
loope
mov
and
ins
sub
dec
(bad)
(bad)
(bad)
jg
dec
inc
push
test
jmp
mul
hlt
dec
and
or
sub
(bad)
call
sbb
and
fisttp
test
push
xor
inc
retf
dec
lea
(bad)
push
int3
inc
add
sbb
fbld
aam
sub
je
mov
xor
jb
xchg
push
(bad)
jg
(bad)
arpl
adc
in
push
addr16
pop
pop
outs
das
test
popf
into
add
loop
mov
mov
add
call
cmp
or
je
iret
enter
cmp
push
pop
ret
jg
mov
std
mov
dec
js
stos
stc
dec
adc
dec
or
cmp
add
push
dec
jle
sub
in
lods
dec
fdiv
jp
cwde
or
scas
outs
mov
js
xor
mov
jmp
test
dec
jno
mov
fild
mov
(bad)
(bad)
(bad)
jg
jge
dec
xchg
xchg
jb
mov
out
(bad)
jae
jne
fild
jns
movs
test
outs
dec
or
test
test
out
daa
jg
add
add
sar
inc
(bad)
(bad)
adc
rol
xor
push
(bad)
jle
(bad)
and
mov
pop
bound
mov
mov
call
pop
xor
(bad)
inc
or
jbe
cmps
lahf
xchg
pop
xchg
push
pushf
jle
(bad)
adc
imul
mov
sahf
push
or
add
push
push
adc
data16
sbb
add
dec
pop
push
imul
jnp
jne
out
clc
(bad)
mov
or
pop
cmp
in
adc
lods
jmp
in
and
pop
jle
(bad)
(bad)
inc
rcl
jno
imul
cmp
out
xchg
jmp
out
std
aad
es
test
sub
pop
mov
iret
adc
scas
loopne
out
inc
adc
inc
inc
cmp
movs
daa
test
push
sub
lock
repnz
jmp
in
jecxz
mov
sbb
or
fwait
ins
mov
cli
lock
(bad)
mov
call
movs
iret
mov
push
jns
ins
xchg
bnd
cli
mov
mov
in
in
mov
dec
mov
jg
jge
jmp
xchg
movs
push
cdq
xchg
jno
cmps
mov
mov
fwait
(bad)
(bad)
(bad)
call
mov
test
add
cs
jp
out
jnp
fwait
(bad)
jl
(bad)
(bad)
out
out
ds
dec
int
push
mov
in
inc
fwait
ret
or
(bad)
out
fisttp
(bad)
inc
xchg
sub
arpl
in
mov
add
cmps
sub
(bad)
push
add
xor
movs
int3
and
(bad)
stos
push
(bad)
aam
js
loopne
push
cmp
(bad)
(bad)
(bad)
jmp
xor
in
jmp
neg
cmc
ror
test
inc
pop
ud0
push
in
mov
ds
cmp
imul
jae
aad
mov
push
and
dec
jle
or
jecxz
xchg
sbb
cmp
xlat
jg
dec
inc
cld
jmp
rcl
mov
mov
mov
out
lods
(bad)
(bad)
(bad)
(bad)
call
(bad)
aad
movs
mov
xchg
ja
jns
shr
scas
sub
test
mov
add
call
add
popf
rol
test
mov
inc
or
jo
jbe
and
push
(bad)
inc
xchg
adc
ja
jnp
push
mov
je
es
cmps
sbb
adc
(bad)
call
mov
mov
add
mov
add
out
repz
frstor
(bad)
(bad)
(bad)
call
sar
stos
dec
in
cmp
outs
outs
xchg
inc
loope
bound
mov
mov
pop
mov
inc
cld
push
push
sbb
push
imul
mov
jl
das
aam
pop
push
(bad)
fcmovu
in
mov
and
aad
xor
jmp
mov
pusha
fucomip
mov
lods
xor
mov
cmp
jne
dec
fadd
xor
inc
(bad)
(bad)
(bad)
push
cli
int3
cmps
dec
sub
pop
xchg
fnsave
rcr
xchg
xchg
loop
(bad)
(bad)
(bad)
(bad)
fmul
ficomp
pop
(bad)
cmc
fist
mov
sti
loopne
jp
xor
push
mov
mov
mov
push
ins
xchg
mov
inc
push
and
jno
adc
fs
sbb
and
xchg
xor
sti
fucomp
enter
shl
call
stc
fxch
ins
push
push
clc
sbb
push
and
push
jg
sti
xchg
jmp
(bad)
(bad)
(bad)
fbstp
call
xor
int3
jge
xor
scas
retf
pop
jg
pop
fldenv
mov
sbb
call
aas
jnp
add
push
sahf
or
out
mov
(bad)
(bad)
mov
ins
dec
xchg
jo
pop
push
sbb
ins
arpl
and
out
fiadd
(bad)
push
bound
jno
nop
inc
inc
and
(bad)
dec
or
adc
mov
or
out
pop
lods
push
in
push
fld
cmps
int
jg
cmp
scas
sub
(bad)
(bad)
jmp
stos
jnp
cmp
repz
mov
and
(bad)
push
pusha
or
test
iret
int
(bad)
push
xor
or
pop
call
mov
fwait
pop
mov
pop
push
xchg
bound
iret
push
sar
scas
mov
xchg
pop
sub
outs
neg
call
dec
add
and
dec
sub
cwde
fsubr
push
clc
mov
enter
or
pop
sar
sbb
cmp
in
shl
idiv
mov
call
pop
jae
jo
pop
mov
adc
stos
adc
(bad)
(bad)
call
cwde
cs
or
jb
test
fsubr
fwait
leave
sub
adc
(bad)
test
xchg
xchg
test
(bad)
(bad)
(bad)
call
xchg
ss
pusha
in
push
ds
or
xlat
mov
jl
cli
or
mov
dec
xor
(bad)
(bad)
jmp
(bad)
mul
jl
and
inc
(bad)
iret
cmp
pushf
mov
in
or
aaa
test
stos
and
jns
(bad)
(bad)
mov
sbb
jp
loopne
add
cmp
push
daa
outs
daa
add
pop
cmp
(bad)
(bad)
inc
push
js
cmp
add
mov
inc
or
xchg
add
or
inc
popa
mov
pop
add
(bad)
call
and
pop
sbb
sbb
push
fs
stos
or
shl
iret
pop
jb
pop
mov
pop
(bad)
(bad)
(bad)
jmp
push
jae
sti
mov
pop
xor
inc
pop
inc
lods
int
test
ror
aaa
std
(bad)
mov
and
adc
mov
jo
(bad)
jg
mov
sub
sti
mov
cmp
mov
xor
mov
(bad)
(bad)
(bad)
mov
push
in
fistp
ret
std
sbb
call
jecxz
pushf
cmps
inc
inc
xchg
movs
push
and
test
stos
push
repnz
xchg
ja
(bad)
(bad)
(bad)
inc
xchg
jno
inc
or
(bad)
jb
mov
sub
imul
(bad)
(bad)
(bad)
fsub
xchg
cmps
enter
adc
cwde
mov
inc
sub
xchg
xor
mov
sbb
(bad)
(bad)
(bad)
clc
cmc
mov
gs
jns
inc
pop
mov
xchg
sub
pusha
jl
sbb
pop
push
daa
dec
test
dec
loop
icebp
out
call
test
(bad)
fisub
pmulhuw
repz
mov
cmp
mov
sub
lods
mov
aad
push
fimul
das
adc
(bad)
dec
gs
xchg
test
pop
test
int
(bad)
out
xchg
hlt
push
push
test
adc
(bad)
inc
test
mov
(bad)
(bad)
jmp
aaa
lods
(bad)
retf
adc
push
mov
js
fnstsw
repnz
mov
inc
adc
test
je
test
pop
jmp
cdq
ficomp
cld
mov
mov
dec
push
(bad)
push
(bad)
mov
cmps
dec
mov
(bad)
cmp
jge
cmp
mov
test
adc
(bad)
inc
test
les
jl
mov
jb
or
test
inc
dec
xchg
pop
(bad)
mov
cld
inc
xchg
jnp
(bad)
push
mov
fcom
add
(bad)
push
jge
jl
les
mov
mov
dec
or
ret
iret
mov
pop
frstor
pop
cs
jno
inc
mov
outs
(bad)
inc
repz
pop
push
and
cmp
shl
jmp
(bad)
jmp
push
adc
push
sbb
shr
je
cdq
lds
push
jbe
clc
(bad)
(bad)
inc
xor
loopne
inc
dec
(bad)
fs
push
cmp
or
sub
test
(bad)
inc
sbb
jne
ret
hlt
sbb
in
xor
cld
pop
daa
xor
(bad)
(bad)
(bad)
call
sbb
out
aam
jmp
xchg
dec
and
js
out
pusha
jbe
gs
lods
mov
(bad)
(bad)
(bad)
jle
jae
or
cmp
lock
iret
push
js
in
out
xchg
add
sub
out
add
out
mov
pop
mov
das
out
fiadd
push
jge
sbb
sbb
test
mov
xor
sbb
outs
xor
sbb
sti
stos
out
jl
(bad)
cmp
pop
enter
(bad)
dec
jns
mov
in
cld
lock
ds
test
cdq
xchg
fild
sar
(bad)
(bad)
(bad)
push
mov
jae
hlt
inc
jo
popa
repz
or
push
jne
sahf
je
(bad)
(bad)
(bad)
(bad)
cmp
inc
mov
rcl
in
push
push
jle
and
sub
mov
aam
cmp
sar
(bad)
(bad)
jmp
push
daa
or
jmp
jl
jle
cmp
jge
jge
xor
ret
test
stos
mov
(bad)
(bad)
jmp
inc
ret
fcmovnu
addr16
or
dec
pop
push
mov
iret
add
pop
rcr
jno
iret
xchg
xlat
adc
and
inc
push
xlat
mov
ss
xchg
ss
dec
or
lahf
(bad)
(bad)
fcomip
sub
dec
cmps
pop
add
and
inc
dec
data16
je
out
mov
ror
sbb
fnstenv
test
cld
inc
fs
addr16
mov
mov
add
jmp
les
outs
pushf
cs
dec
mov
sub
xor
xor
jecxz
ret
addr16
or
(bad)
mov
inc
mov
adc
fnstsw
mov
adc
sub
adc
call
mov
inc
push
dec
sub
stos
inc
or
jl
or
or
adc
jg
add
imul
xchg
ret
mov
push
and
cli
mov
pop
push
shl
jl
ds
fadd
aaa
push
test
popf
mov
jg
out
lahf
fwait
mov
outs
dec
inc
dec
and
aaa
in
xor
cdq
jmp
cwde
jns
mov
cs
(bad)
(bad)
push
push
repz
add
mov
or
sbb
push
add
(bad)
out
push
test
jecxz
add
ret
xor
or
(bad)
call
pop
pusha
push
cmp
sub
rol
inc
and
nop
and
mov
and
push
xor
and
xlat
das
cli
(bad)
push
leave
pop
inc
in
cdq
mov
xor
dec
icebp
xchg
inc
jnp
dec
xchg
gs
shl
clc
(bad)
(bad)
call
fnsave
loopne
inc
pop
mov
xchg
or
movs
jmp
xor
(bad)
sub
xchg
jo
jae
jp
scas
jmp
jmp
int3
sbb
retf
test
inc
iret
fs
(bad)
(bad)
dec
add
sahf
ss
add
mov
out
enter
inc
xor
dec
xchg
add
(bad)
(bad)
(bad)
inc
cld
adc
sbb
and
cmp
inc
jno
dec
sbb
dec
jno
(bad)
dec
mov
shl
(bad)
call
shr
outs
inc
aad
stos
ret
div
(bad)
shl
jne
mov
mov
test
push
lods
inc
mov
pop
cmps
stos
shl
xchg
push
in
out
sbb
call
cs
push
out
adc
add
push
(bad)
(bad)
(bad)
(bad)
jmp
mov
fistp
xchg
aad
mov
mov
(bad)
div
push
outs
pop
stc
scas
fwait
pop
inc
sub
(bad)
(bad)
push
addr16
cmp
mov
(bad)
std
(bad)
(bad)
mov
stc
jecxz
pop
mov
inc
jmp
adc
jns
adc
test
stc
inc
and
and
sbb
rol
dec
pusha
sub
mov
pop
retf
mov
pop
in
(bad)
mov
clc
imul
aas
sbb
sbb
loopne
jecxz
outs
or
lods
and
pop
jo
dec
pop
arpl
iret
popf
sub
jmp
dec
clc
mov
ins
(bad)
(bad)
(bad)
dec
stos
push
push
fdiv
inc
mov
push
push
push
xor
leave
pushw
xor
test
stos
add
inc
cmps
mov
call
inc
mov
ror
fisttp
mov
pop
stos
cmp
mov
push
jmp
out
adc
pop
cmp
mov
sbb
xchg
add
mov
loop
jl
push
std
inc
pop
xchg
div
sti
out
pop
and
and
jne
mul
mov
pop
mov
(bad)
(bad)
jmp
jae
or
(bad)
fxch
sub
sbb
sbb
(bad)
xchg
mov
xor
xor
clc
lods
inc
or
out
xor
add
add
cmc
push
push
xchg
pop
cli
scas
push
sub
or
(bad)
(bad)
(bad)
jg
sar
push
sub
and
fidiv
cmp
lds
jmp
cmp
arpl
loope
push
stos
call
icebp
icebp
jno
mov
add
and
pop
mov
std
out
pop
and
jnp
test
mov
sbb
mov
out
jge
push
dec
sub
adc
test
inc
scas
xchg
idiv
xor
or
sub
imul
cmps
mov
int3
or
mov
sbb
hlt
sbb
mov
(bad)
inc
or
pop
loopne
cmp
stos
mov
ja
clc
pop
push
add
sub
punpckhbw
add
or
jno
fldcw
and
dec
(bad)
(bad)
(bad)
call
or
fcomp
and
mov
add
(bad)
fadd
je
imul
pusha
mov
ret
push
push
mov
frstor
ja
sbb
push
xlat
xchg
ret
pop
xchg
xchg
stos
jns
sbb
push
or
sbb
(bad)
and
or
push
adc
scas
xor
arpl
sar
(bad)
(bad)
jmp
mov
mov
dec
adc
and
add
cwde
dec
aam
dec
push
cwde
cmp
or
(bad)
dec
or
xor
fwait
sbb
adc
leave
xlat
push
fs
in
push
(bad)
(bad)
(bad)
jmp
popa
add
lea
dec
add
ror
(bad)
cli
xchg
cmps
sub
mov
inc
nop
scas
(bad)
(bad)
(bad)
jmp
sbb
mov
pushf
cmp
out
xor
hlt
pusha
ins
dec
sub
pop
ins
std
(bad)
(bad)
cmp
call
shl
sbb
popa
or
xor
lea
mov
(bad)
jmp
jb
fwait
mov
hlt
mov
fnstcw
fldenv
sbb
adc
pop
aad
add
(bad)
(bad)
call
ds
movs
mov
add
xor
ret
pushf
mov
inc
fisttp
lods
or
sub
sbb
jp
(bad)
(bad)
call
cmp
nop
icebp
cld
test
inc
mov
pop
sbb
cwde
test
add
call
pop
add
sbb
jle
pop
and
xchg
(bad)
(bad)
(bad)
mov
fsub
(bad)
push
mov
call
or
push
push
adc
pop
jae
(bad)
(bad)
push
xor
jg
cmp
cwde
out
push
pop
out
mov
add
or
or
fcomip
(bad)
inc
bound
cmp
push
(bad)
mov
xor
fnstenv
scas
push
ins
bound
or
(bad)
(bad)
jmp
push
pop
ficomp
sub
pop
jg
sar
ins
xor
mov
ret
dec
add
(bad)
(bad)
call
test
ret
mov
in
test
mov
lds
in
xlat
shl
xor
(bad)
and
es
mov
(bad)
mov
aam
je
jp
sub
inc
inc
sbb
pop
sub
mov
inc
jecxz
pop
mov
test
loop
and
jle
cmp
fs
mov
mov
or
mov
sbb
mov
addr16
jmp
xchg
lock
ret
imul
dec
std
in
push
cmp
aas
cli
rcr
mov
(bad)
(bad)
(bad)
dec
inc
neg
push
out
sbb
pop
(bad)
cmp
js
xchg
mov
sbb
(bad)
(bad)
(bad)
(bad)
mov
and
fsubr
jl
inc
mov
fistp
lods
iret
cmp
add
(bad)
(bad)
inc
stos
adc
or
mov
xor
cmp
and
cmp
sub
lock
arpl
xchg
nop
ins
push
retf
mov
push
add
hlt
(bad)
jg
push
dec
xchg
lods
call
pusha
cmps
fdiv
pushf
mov
dec
jmp
stos
(bad)
(bad)
(bad)
call
sbb
mov
loop
fwait
test
xchg
sbb
jnp
inc
pop
fstp
fnop
test
(bad)
(bad)
(bad)
dec
(bad)
jbe
dec
lea
fsqrt
and
packuswb
jae
int
(bad)
fcomip
jmp
pop
outs
xchg
sub
inc
inc
ss
push
adc
sbb
mov
(bad)
(bad)
(bad)
(bad)
dec
cmps
xchg
in
fstp
aad
mov
mov
mov
mov
aad
inc
ja
cli
mov
adc
pop
xor
sub
xchg
mov
(bad)
jmp
popf
lahf
clc
les
pushf
mov
pushf
jnp
popa
pop
pop
xchg
test
sbb
pop
(bad)
(bad)
(bad)
mov
int
inc
sbb
in
into
das
out
std
cmp
inc
mov
repz
gs
cdq
(bad)
pop
jns
push
push
or
nop
(bad)
(bad)
(bad)
dec
dec
(bad)
(bad)
cmp
xchg
stos
xlat
mov
(bad)
sbb
jns
mov
popa
shl
mov
(bad)
(bad)
inc
pop
xor
sbb
leave
rcl
sub
fbstp
into
xchg
inc
xchg
out
cmp
(bad)
call
add
das
int3
retf
push
xor
out
mov
(bad)
(bad)
call
fadd
lahf
std
(bad)
fdivr
pop
cmp
(bad)
push
cld
(bad)
(bad)
(bad)
clc
ret
xor
jbe
lds
pop
mov
sbb
into
into
movs
lahf
(bad)
xor
in
lds
(bad)
mov
test
sahf
fld
sub
retf
mov
aam
aas
int
mov
sbb
call
xor
xchg
xchg
les
inc
bound
mov
out
icebp
(bad)
(bad)
(bad)
inc
mov
not
jo
cmp
cmps
xchg
and
mov
sahf
or
xor
clc
(bad)
jmp
in
lods
in
mov
js
cmp
inc
or
cmps
mov
and
mov
mov
xchg
adc
mov
loopne
iret
or
jg
(bad)
(bad)
dec
dec
jl
mov
dec
adc
addr16
int3
pcmpgtb
mov
sub
ds
(bad)
hlt
(bad)
(bad)
inc
lahf
stc
out
mov
pandn
sahf
daa
sbb
xor
call
(bad)
(bad)
(bad)
push
pop
adc
mov
jecxz
sbb
addr16
add
push
std
(bad)
call
or
pushf
ror
sub
push
and
push
test
(bad)
jmp
lea
push
mov
shr
repz
pop
inc
push
popf
cmp
adc
call
pop
cld
cmp
js
loop
test
out
and
xor
clc
(bad)
(bad)
loop
add
ret
mov
cmps
cs
lock
retf
movs
pop
and
(bad)
inc
jae
mov
or
retf
bound
inc
sub
and
push
mov
int
ror
push
dec
sub
xchg
push
dec
js
shl
inc
push
and
jp
int
(bad)
jg
jno
adc
cmps
out
loope
push
test
in
loope
jmp
test
dec
mov
(bad)
(bad)
jmp
int
jae
iret
ds
aaa
test
scas
cwde
dec
mov
cmc
or
mov
(bad)
jmp
(bad)
adc
div
mov
push
stos
mov
repz
or
dec
inc
adc
push
jbe
outs
mov
imul
jbe
jb
sub
and
and
inc
mov
mov
jbe
sbb
out
pop
mov
inc
xchg
fisub
(bad)
(bad)
call
jns
sti
std
and
jle
sbb
inc
cmp
mov
xor
rol
fiadd
push
cld
inc
mov
das
mov
fidivr
mov
mov
and
pop
dec
ret
pushf
or
pop
cmp
jmp
(bad)
ss
sbb
icebp
mov
sbb
xor
ret
ins
jecxz
and
inc
push
add
cmps
out
xchg
or
inc
pop
mov
jb
mov
push
sbb
in
in
cmp
out
outs
clc
enter
mov
(bad)
push
ss
sbb
mov
xchg
neg
sbb
scas
(bad)
push
rcr
jecxz
(bad)
(bad)
(bad)
jmp
xor
rcl
pop
shl
mov
data16
daa
pop
and
xor
add
jle
mov
jmp
pop
inc
jl
pop
sbb
pop
iret
iret
pusha
adc
and
xchg
mov
mov
cwde
mov
(bad)
dec
and
adc
daa
add
xchg
cmp
inc
dec
mov
(bad)
push
adc
jge
and
not
cmp
xor
sbb
(bad)
(bad)
push
and
retf
sbb
inc
aam
daa
mov
pop
mov
or
jo
adc
shl
neg
(bad)
(bad)
(bad)
call
lds
imul
adc
sbb
out
je
lods
dec
sub
call
in
(bad)
(bad)
(bad)
dec
out
pop
scas
ss
jno
mov
sub
adc
popa
sub
add
das
call
cmps
call
adc
ins
dec
and
mov
jmp
dec
aam
adc
mov
ret
enter
or
xor
xchg
cmp
sahf
(bad)
(bad)
(bad)
(bad)
(bad)
imul
bound
in
icebp
fistp
xor
bound
loopne
pop
cwde
cmp
mov
jg
add
xchg
cs
fimul
rol
ret
xor
call
rcl
sub
push
daa
call
jle
retf
pop
ret
in
fisub
push
fisttp
call
call
jae
sahf
pop
inc
sbb
inc
das
sar
mov
lods
(bad)
(bad)
(bad)
jg
(bad)
cmps
(bad)
pop
fs
jp
pusha
loopne
pop
ja
test
loope
aam
scas
jmp
push
in
push
(bad)
mov
mov
push
fbld
cmp
inc
cmovp
int
call
or
lds
or
jl
imul
fcomp
or
mov
pushf
sub
mov
inc
pop
xchg
aam
daa
push
add
(bad)
(bad)
push
test
push
dec
je
lahf
cmps
cdq
pop
push
ret
mov
repnz
repnz
in
sub
fcomip
ja
mov
dec
cs
sub
xor
mov
loop
scas
dec
pop
push
sub
add
sar
jmp
mov
lahf
movs
fdivr
(bad)
(bad)
jmp
imul
inc
movs
push
jg
fwait
scas
out
icebp
dec
(bad)
mov
add
mov
(bad)
mov
pslld
ins
push
mov
out
jmp
repnz
dec
mov
mov
(bad)
nop
out
(bad)
neg
out
add
mov
(bad)
call
cmp
cld
adc
icebp
adc
gs
adc
jo
out
(bad)
(bad)
push
std
mov
mov
add
les
xchg
in
xchg
jle
add
stos
(bad)
mov
mov
or
dec
loopne
pop
push
xchg
ret
cdq
outs
into
or
(bad)
jmp
mov
mov
out
sbb
dec
outs
aad
shl
ins
dec
jle
pusha
(bad)
(bad)
(bad)
inc
mov
jbe
ret
adc
push
mov
xchg
ins
(bad)
call
push
mov
out
sar
(bad)
jmp
inc
sub
xor
mov
fsubr
adc
(bad)
mov
icebp
cwde
rcr
adc
test
cmps
push
shl
imul
jb
push
ins
call
out
dec
inc
lahf
fdivr
cwde
jecxz
xor
xor
mov
dec
xor
daa
jmp
es
mov
sbb
xchg
hlt
out
add
cmp
mov
mov
pushf
enter
cmps
stos
(bad)
jmp
mov
or
popa
(bad)
int
(bad)
aaa
outs
fdivr
(bad)
cld
call
adc
sub
xor
movs
loopne
movs
inc
xlat
jbe
loop
dec
dec
fs
mov
pusha
mov
nop
adc
add
fwait
(bad)
ja
pop
sub
cli
jae
jmp
(bad)
loopne
(bad)
adc
in
pop
or
(bad)
push
enter
mov
cmps
pop
cld
jl
(bad)
(bad)
fbstp
jp
les
xor
es
mov
mov
fisttp
pop
or
ss
inc
xchg
ins
xlat
aam
inc
mov
(bad)
(bad)
fistp
push
mov
pop
push
(bad)
xchg
jne
(bad)
mov
sbb
xor
out
es
out
ds
jmp
push
cmp
lds
out
div
imul
mov
ret
movs
sti
jbe
cli
sar
fnstsw
enter
bound
add
and
call
add
fnsetpm(287
sub
mov
(bad)
jmp
fisub
mov
in
jb
cmc
das
inc
in
xchg
add
stos
push
adc
call
les
cmp
popa
sub
mov
imul
push
hlt
or
mov
adc
and
mov
mov
std
(bad)
jg
cmps
cdq
arpl
sahf
retf
push
rcl
pop
(bad)
push
stos
(bad)
mov
dec
fidiv
push
jno
pop
js
push
fs
les
pusha
mov
cli
push
xlat
movs
inc
repnz
xor
(bad)
(bad)
(bad)
call
xchg
sub
and
nop
cs
add
mov
adc
dec
sbb
scas
push
add
mov
(bad)
call
add
push
xlat
mov
fadd
sbb
rcl
mov
hlt
add
push
sbb
fidiv
sahf
xchg
cmps
xor
ret
ret
(bad)
(bad)
jg
cmp
jb
out
mov
jae
js
gs
sahf
and
add
jo
mov
(bad)
pop
retw
(bad)
push
mov
int3
cmp
add
stc
sar
jge
ins
fdivr
push
push
mov
mov
jle
inc
sub
(bad)
jmp
mov
xchg
adc
retf
and
repz
pop
stc
int
inc
call
fbld
and
int3
mov
(bad)
(bad)
(bad)
(bad)
mov
jns
jmp
push
outs
ins
int3
(bad)
in
adc
cld
loope
scas
jg
imul
call
sbb
pop
cmp
loope
pop
jne
sbb
fnstenv
clc
lock
(bad)
push
dec
pop
or
shl
mov
imul
in
in
fild
jne
inc
(bad)
(bad)
(bad)
(bad)
cmp
pusha
sar
pop
(bad)
std
sub
iret
scas
mov
or
jg
(bad)
(bad)
mov
(bad)
push
or
fldenv
ss
outs
ss
sub
add
pop
or
pop
and
pusha
xchg
pop
fstp
or
adc
cmp
inc
sbb
dec
cmp
and
gs
icebp
les
adc
sub
leave
dec
inc
pop
jg
push
xor
jle
pop
push
xchg
iret
xchg
push
push
sti
mov
push
sar
das
sbb
or
mov
gs
adc
fbld
adc
mov
add
mov
and
adc
and
sar
addr16
jge
not
jl
adc
pop
add
jle
je
push
mov
pop
fld
(bad)
and
lock
and
pop
inc
lea
das
clc
(bad)
call
xor
push
cmc
xchg
dec
xchg
sahf
stc
cli
addr16
or
sbb
jbe
popa
pop
std
movs
push
sub
lds
loopne
push
out
enter
into
scas
in
rcl
call
or
(bad)
(bad)
inc
movs
movs
mov
pop
ficomp
xchg
jae
jno
sbb
mov
ret
(bad)
punpckldq
sar
(bad)
(bad)
call
imul
cmp
ins
mov
movs
push
int3
imul
mov
mov
out
cli
(bad)
(bad)
call
jnp
out
jge
and
jae
pop
pop
ja
xchg
jnp
pop
call
(bad)
(bad)
jmp
push
add
lock
and
ins
test
or
add
cli
(bad)
(bad)
inc
add
sbb
stc
call
movs
mov
fdivr
das
rcl
adc
sub
jne
lods
fstp
inc
cmps
(bad)
(bad)
inc
pop
out
sbb
(bad)
sub
test
shl
stc
lds
cmp
sbb
cmp
push
and
mov
stos
jo
push
out
ret
(bad)
(bad)
(bad)
(bad)
jmp
mov
adc
xor
push
movs
mov
outs
mov
fs
push
nop
shr
call
in
call
(bad)
call
fistp
in
or
dec
shr
stc
in
cmp
push
es
(bad)
(bad)
(bad)
jg
jmp
aam
gs
cmp
jmp
pop
mov
fwait
test
(bad)
(bad)
js
mov
cwde
jl
je
or
jecxz
sbb
into
out
mov
out
jmp
(bad)
mov
(bad)
(bad)
dec
xchg
lods
sar
push
fcom
xchg
sub
mov
pop
inc
xor
out
xor
nop
out
cli
(bad)
jg
mov
out
jge
ja
retf
jo
or
pop
shr
std
pop
cmp
(bad)
call
cld
lds
inc
mov
adc
and
fsubr
add
adc
xor
aam
and
test
(bad)
or
(bad)
(bad)
(bad)
jg
dec
cwde
jg
das
or
or
push
enter
jp
cmps
lds
ret
pop
jmp
outs
push
lock
push
adc
inc
add
jp
pusha
movs
push
mov
sub
in
(bad)
mov
and
mov
dec
inc
xchg
pop
mov
pop
(bad)
(bad)
(bad)
(bad)
cmp
rcr
pop
xchg
nop
push
dec
addr16
push
js
jae
shl
lock
jp
inc
add
ja
push
adc
stos
jo
cld
(bad)
(bad)
push
xor
mov
cmp
xor
dec
dec
call
popf
dec
push
(bad)
(bad)
(bad)
mov
daa
data16
into
sub
pushf
xor
lahf
gs
adc
les
imul
sbb
xchg
inc
xor
push
popa
push
jo
popa
imul
dec
add
dec
movs
inc
push
cwde
aas
xchg
pop
mov
or
aaa
loopne
aaa
(bad)
mov
loope
cmp
(bad)
(bad)
(bad)
inc
shl
lods
pop
outs
push
stos
mov
(bad)
fwait
outs
sbb
sbb
sbb
pop
push
stos
(bad)
(bad)
jg
fcomp
pusha
sbb
cmp
or
ss
das
(bad)
jg
(bad)
jmp
sar
pushf
mov
mov
rcr
(bad)
jo
dec
hlt
inc
aaa
cld
xchg
out
mov
pop
xor
pusha
mov
jo
mov
pusha
add
(bad)
(bad)
call
repz
hlt
es
mov
pop
(bad)
xor
in
outs
shl
fstp
(bad)
jg
(bad)
jl
jmp
cmps
pusha
cli
push
xchg
jecxz
xchg
out
xchg
pop
add
pop
and
mov
out
aad
xchg
(bad)
mov
sub
iret
js
(bad)
(bad)
(bad)
jmp
scas
test
sub
mov
pop
pop
sbb
ins
(bad)
lahf
shl
icebp
cmp
pop
loopne
adc
out
lock
gs
cmps
fwait
ds
or
inc
(bad)
mov
push
sbb
jae
fadd
sbb
repz
ds
out
or
dec
pop
test
inc
(bad)
test
pop
push
dec
loopne
(bad)
(bad)
(bad)
call
out
sub
sbb
dec
and
pop
sub
jne
cmps
inc
dec
retf
daa
dec
jl
inc
aad
add
cmp
cmps
dec
or
(bad)
jmp
push
js
mov
xchg
out
cmp
sti
push
adc
pop
adc
(bad)
(bad)
(bad)
call
mov
cmp
ret
inc
push
mov
inc
jo
mov
or
cld
mov
xchg
jle
enter
add
xchg
xor
dec
dec
data16
cld
jge
adc
fiadd
out
xchg
or
mov
xchg
or
cmp
test
dec
pop
out
das
mov
out
out
into
arpl
push
push
mov
jnp
push
stos
jno
mov
xchg
cmps
sub
mov
pop
mov
ror
ret
cmp
(bad)
jmp
daa
aaa
pop
fcomp
lds
lods
mov
jecxz
or
or
rol
mov
mov
cmp
call
int3
or
neg
mov
push
xor
xchg
mov
cmp
(bad)
(bad)
dec
(bad)
xor
scas
scas
iret
(bad)
call
inc
in
jp
dec
leave
movs
popa
mov
push
mov
test
xchg
scas
push
sub
push
dec
into
adc
adc
or
push
stos
addr16
(bad)
inc
leave
cmc
xlat
pop
out
(bad)
jmp
push
neg
dec
push
(bad)
dec
mov
adc
fcom
arpl
lahf
ss
cmps
imul
dec
stos
pop
inc
or
xor
int3
jmp
add
repnz
(bad)
(bad)
(bad)
(bad)
fild
jmp
cmp
mov
cmp
in
push
imul
sar
(bad)
(bad)
(bad)
mov
idiv
jmp
xlat
mov
adc
adc
adc
jp
rol
(bad)
(bad)
jmp
adc
mov
cli
stos
(bad)
int3
in
mov
out
inc
mov
fldcw
push
cwde
je
add
pop
xchg
or
ins
xor
das
rcr
sbb
or
js
and
mov
mov
inc
adc
(bad)
(bad)
inc
stos
ficom
lods
or
in
js
fidivr
sbb
(bad)
jg
inc
movs
mov
sbb
aad
bound
pop
cmp
xchg
mov
std
jns
xchg
push
sbb
mov
cmp
push
lods
push
popf
jne
(bad)
(bad)
(bad)
dec
in
aas
jno
mov
in
fcomp
sbb
pop
mov
or
clc
(bad)
(bad)
dec
inc
cmp
idiv
and
and
hlt
(bad)
sbb
int3
imul
push
and
and
(bad)
(bad)
jmp
div
jmp
add
adc
fmul
and
and
into
xor
pop
clc
je
mov
gs
and
retf
(bad)
mov
xchg
xor
mov
mov
cmps
adc
and
leave
mov
(bad)
(bad)
(bad)
(bad)
inc
push
jmp
outs
rcl
jmp
movs
mov
xor
push
or
jp
cwde
cmp
div
push
cmp
xor
test
(bad)
sbb
sub
mov
pop
loopne
and
cmp
cdq
ss
or
iret
and
bound
mov
(bad)
(bad)
inc
in
stos
into
mov
jns
test
dec
push
fimul
mov
dec
push
push
cmp
int3
lea
test
iret
in
mov
(bad)
inc
jo
xchg
test
add
loop
cmp
(bad)
cdq
push
pop
rcl
mov
(bad)
push
hlt
mov
pop
add
and
push
mov
sub
mov
jg
dec
push
jnp
push
cmp
(bad)
mov
inc
xlat
call
sub
jns
add
dec
dec
mov
shr
(bad)
(bad)
push
jecxz
iret
clc
jmp
xor
shl
scas
shl
mov
fwait
cwde
out
xchg
push
std
(bad)
(bad)
cmp
imul
pop
aas
fdiv
fisttp
add
repnz
loope
aas
das
clc
call
je
lds
neg
xor
mov
das
out
in
adc
(bad)
jmp
pop
mov
clc
ret
jmp
mov
mov
jecxz
ja
je
dec
outs
mov
ss
mov
shl
leave
iret
jle
paddb
pop
(bad)
(bad)
(bad)
call
fs
into
idiv
push
dec
inc
lahf
das
movs
dec
push
mov
into
pushf
and
jmp
call
sar
pop
sbb
pop
xlat
jge
xchg
mov
scas
(bad)
(bad)
jg
enter
xchg
out
mov
or
mov
xchg
mov
(bad)
(bad)
(bad)
call
cmps
int
add
rol
dec
sub
push
lahf
pop
sbb
(bad)
fnstcw
daa
adc
cmp
(bad)
call
icebp
or
add
scas
lds
pop
xor
mov
repz
add
xor
push
loopne
mov
cmovno
in
test
js
sbb
(bad)
dec
cmp
outs
mov
adc
cmps
push
test
cmps
push
xchg
jae
ret
pop
int3
(bad)
mov
pop
aam
dec
fadd
add
scas
mov
and
(bad)
(bad)
inc
icebp
stc
(bad)
add
adc
inc
mov
(bad)
lds
and
or
and
nop
ret
lock
push
and
(bad)
(bad)
cld
mov
dec
push
mov
mov
loopne
lahf
(bad)
jecxz
mov
ss
inc
dec
arpl
inc
fwait
push
fst
add
mov
jmp
fcomip
jl
mov
xchg
dec
lods
xchg
jno
imul
(bad)
mov
stos
xchg
cmp
ins
sub
dec
jnp
mov
mov
push
out
fidivr
push
fwait
ins
push
mov
aad
sub
rcr
cmp
cmp
mov
ret
pop
ss
movs
push
in
in
(bad)
(bad)
jmp
xchg
mov
mov
outs
clc
xchg
jne
rcl
jns
call
mov
cmp
inc
(bad)
(bad)
das
(bad)
pop
xor
pusha
shl
and
pop
mov
(bad)
(bad)
call
sbb
dec
movs
lahf
fnstcw
aaa
dec
fdivp
stos
imul
out
ds
add
shl
(bad)
(bad)
(bad)
jmp
xchg
cmp
daa
ja
sbb
popf
cmp
gs
lea
jmp
dec
jbe
cmp
sub
cs
pop
fsubr
inc
mov
mov
cli
pop
loopne
jb
and
push
push
push
scas
pop
sub
icebp
icebp
(bad)
(bad)
jmp
push
daa
call
rol
ins
and
cs
mov
ins
shl
rcr
int3
cs
push
std
jg
cmp
cmp
je
repnz
fbld
dec
jb
jns
push
addr16
pop
pop
sbb
lahf
(bad)
jg
fimul
and
xchg
rcl
imul
push
cdq
sub
clc
(bad)
jmp
call
lods
ins
dec
and
dec
jmp
mov
mov
lahf
into
xchg
scas
pop
rcl
in
pop
xlat
mov
(bad)
(bad)
(bad)
cli
stos
das
dec
and
scas
dec
jmp
xor
stos
xor
test
(bad)
(bad)
(bad)
call
bound
cwde
fwait
pop
and
(bad)
in
test
mov
inc
clc
iret
inc
fst
(bad)
(bad)
inc
dec
(bad)
bound
cmps
les
adc
mov
mov
add
mov
push
add
dec
inc
add
(bad)
call
cmp
cmp
loope
add
(bad)
pusha
and
mov
(bad)
mov
inc
adc
daa
pop
push
stos
xchg
mov
dec
sub
adc
inc
sahf
lock
push
mov
outs
clc
and
push
mov
retf
and
push
arpl
xchg
sub
test
dec
xchg
nop
aam
push
aaa
xor
mov
inc
ins
lods
lea
and
jmp
fidiv
push
mov
ss
sbb
cli
sbb
jae
test
neg
shl
mov
inc
dec
(bad)
(bad)
inc
bound
sbb
mov
cmp
into
js
ins
inc
test
xlat
ds
add
inc
adc
mov
iret
shl
call
dec
add
inc
mov
add
sub
cli
fstp
iret
jmp
clc
lods
add
enter
enter
(bad)
jmp
mov
jle
sbb
cmp
jg
mov
loop
add
push
xchg
and
(bad)
inc
mov
ss
fsin
aam
scas
movs
(bad)
bound
cli
aam
dec
test
retf
call
or
cmp
lds
jge
icebp
aad
or
cmp
(bad)
(bad)
dec
gs
xor
dec
movs
shl
div
mov
fwait
push
push
stos
sbb
xlat
mov
call
add
div
aad
ja
jne
lods
(bad)
add
mov
stc
fcomp
xor
aas
std
scas
(bad)
(bad)
jg
pop
pop
sbb
test
out
fdivr
retf
cmp
loopne
(bad)
(bad)
out
movs
pop
push
or
stos
xor
jns
xchg
stc
cld
leave
rol
pop
push
stos
out
mov
js
and
cwde
push
iret
gs
pop
ins
(bad)
lock
call
lods
jb
ret
pusha
call
jns
pusha
push
test
cmp
jl
xor
sub
and
adc
icebp
(bad)
(bad)
push
mov
or
iret
and
xor
shl
pop
xor
aas
add
adc
(bad)
jmp
add
loop
ds
je
inc
inc
cmp
adc
fcomp
pop
iret
aaa
jle
(bad)
mov
(bad)
call
push
and
inc
dec
(bad)
jge
inc
loopne
inc
or
xor
gs
inc
pop
icebp
call
push
inc
mov
pop
leave
cmp
jge
stc
mov
mov
(bad)
(bad)
call
xchg
out
inc
jmp
xchg
inc
xchg
hlt
adc
(bad)
and
(bad)
(bad)
jmp
enter
sti
aam
lods
fwait
sub
mov
xor
(bad)
(bad)
(bad)
inc
mov
jmp
and
xchg
mov
jbe
and
pop
xchg
int3
pop
out
(bad)
(bad)
push
pusha
cmps
sbb
mov
pop
mov
dec
xchg
retf
mov
and
call
mov
(bad)
call
add
retf
dec
mov
mov
sbb
cdq
retf
(bad)
jmp
clc
dec
xor
std
call
outs
mov
in
jne
repnz
mov
(bad)
(bad)
push
lods
mov
sahf
in
pop
jmp
jmp
sub
inc
adc
pusha
cdq
jmp
push
mov
fnstenv
lahf
ds
adc
(bad)
call
jg
call
dec
pop
ss
imul
xchg
pop
mov
jne
pop
push
inc
add
fcomi
push
mov
div
daa
sti
or
mov
sbb
jne
push
push
and
mov
les
fadd
(bad)
(bad)
mov
jg
push
or
stc
pop
test
rol
imul
or
push
std
(bad)
jmp
jle
lods
lock
loope
sbb
dec
dec
(bad)
xchg
or
(bad)
xchg
pop
scas
(bad)
(bad)
(bad)
call
and
in
xchg
out
add
sub
(bad)
retf
and
inc
(bad)
in
cmp
xor
(bad)
call
xor
cmp
sbb
out
shl
cwde
push
fidivr
(bad)
(bad)
(bad)
(bad)
in
bound
mov
sub
jno
es
push
sub
stos
mov
outs
dec
mov
bound
int
in
add
(bad)
das
lahf
pop
inc
mov
xchg
or
les
loope
(bad)
(bad)
(bad)
dec
shl
in
aas
xchg
mov
cmps
mov
push
ror
ret
(bad)
jmp
pop
push
repz
or
mov
dec
je
xchg
test
(bad)
jmp
repnz
in
dec
test
pop
adc
adc
cs
xchg
fsub
mov
add
inc
pusha
add
lds
stos
add
out
pop
and
jg
(bad)
(bad)
mov
add
mov
movs
mov
dec
icebp
pop
movs
(bad)
jmp
dec
in
das
push
(bad)
pushf
push
xchg
or
nop
es
xchg
cmp
sub
fiadd
sub
or
cmp
clc
in
cmp
cmp
pop
scas
cmp
(bad)
mov
mov
mov
(bad)
stos
cld
xchg
add
mov
pop
push
cwde
cld
pop
icebp
(bad)
(bad)
jmp
jbe
stos
jo
popf
adc
sub
or
sbb
jo
mov
shl
sar
(bad)
(bad)
jmp
dec
push
ret
push
add
cwde
xor
ret
rcl
mov
sub
(bad)
call
lock
jnp
das
arpl
pop
ret
fwait
subps
(bad)
(bad)
(bad)
call
repz
or
jb
jns
mov
adc
mov
adc
bound
js
(bad)
fsubr
xor
push
push
ficom
es
aaa
push
sar
shl
cs
xor
leave
ror
repnz
mov
(bad)
xchg
adc
adc
add
cwde
cwde
into
mov
ins
fwait
(bad)
das
jmp
mov
out
cwde
ins
repz
sti
sbb
or
and
rol
pop
push
mov
mov
xor
dec
int3
dec
dec
mov
mul
jg
(bad)
(bad)
(bad)
jle
aad
scas
call
imul
call
inc
adc
pop
mov
fldlg2
(bad)
(bad)
jg
sbb
test
and
ja
into
call
push
adc
test
mov
(bad)
sub
pop
jmp
scas
mov
push
and
cs
push
xchg
cwde
mov
retf
sar
(bad)
call
xor
jb
mov
cmp
adc
jecxz
nop
scas
rol
pusha
(bad)
(bad)
push
mov
scas
add
xchg
iret
xchg
inc
pop
scas
xchg
vmovss
ret
adc
add
(bad)
jmp
popf
sub
pusha
out
adc
adc
pushf
sbb
mov
or
(bad)
cli
jp
mov
or
mov
sbb
loopne
push
ds
dec
std
and
scas
and
inc
fldcw
mov
lock
push
dec
jp
movs
stos
push
test
sbb
jg
(bad)
inc
mov
sub
icebp
repz
push
or
(bad)
(bad)
jmp
(bad)
xchg
nop
jbe
xor
or
das
loopne
popf
push
mul
xchg
or
fcomp
add
jnp
loope
mov
xchg
xchg
pop
dec
arpl
sbb
fs
sahf
jmp
push
cmp
(bad)
(bad)
push
inc
pop
scas
mov
ds
scas
loopne
xchg
sub
retf
(bad)
or
sub
(bad)
(bad)
call
push
dec
or
inc
push
int3
jno
cmps
(bad)
sahf
push
call
pop
cmps
push
push
and
dec
sub
inc
in
and
dec
ja
mov
pushf
fs
jmp
mov
(bad)
(bad)
dec
scas
mov
inc
jnp
jo
cdq
xor
mov
test
iret
mov
(bad)
inc
rcr
cwde
imul
xchg
inc
(bad)
daa
repnz
rol
vpand
ror
inc
pop
mov
push
pop
mov
adc
out
(bad)
(bad)
(bad)
jg
and
in
mov
ffree
movs
xor
jns
xchg
hlt
call
adc
xor
lock
fdiv
inc
les
jg
(bad)
(bad)
(bad)
out
push
dec
mov
dec
fs
shl
and
imul
dec
jl
or
or
push
xor
dec
loopne
(bad)
(bad)
push
cdq
out
mov
pop
jecxz
jae
pop
aas
pop
jns
push
sbb
mov
loopne
inc
stc
push
jg
cli
(bad)
(bad)
mov
mov
inc
inc
sbb
pop
sbb
loopne
aaa
xor
cmp
imul
scas
aaa
mov
popa
shl
jnp
or
mov
jo
(bad)
(bad)
(bad)
(bad)
jp
in
fldenv
(bad)
in
mov
(bad)
mov
movs
loopne
pop
out
cli
retf
(bad)
(bad)
fnstenv
xchg
fnsave
iret
push
jb
mov
ins
pop
mov
xlat
sub
pop
mov
movs
jmp
sub
sbb
stos
jo
adc
(bad)
sub
pop
inc
sub
sbb
(bad)
call
jl
inc
push
mov
dec
mov
mov
cmp
in
(bad)
(bad)
call
inc
rcr
outs
cmp
jl
dec
inc
lods
bnd
call
xor
xchg
lods
(bad)
(bad)
call
jp
aad
mov
sahf
out
push
sub
js
xlat
cmps
or
pop
scas
(bad)
jg
call
leave
mov
or
pushf
pusha
sbb
mov
mov
es
(bad)
(bad)
call
shr
pop
pop
push
mov
addr16
ror
mov
add
add
(bad)
(bad)
jmp
xor
jae
cmps
test
hlt
pop
pop
inc
hlt
mov
sbb
(bad)
(bad)
inc
inc
push
mov
cmp
inc
mov
sub
sti
into
or
adc
jmp
sub
inc
add
mov
hlt
clc
ficomp
ret
inc
cld
dec
jae
dec
int3
pushf
sahf
xor
adc
add
das
lock
mov
jmp
shl
xor
cdq
gs
iret
jle
popf
ror
ins
test
cmp
mov
aaa
(bad)
mov
cld
jp
xchg
(bad)
call
ins
gs
lea
(bad)
mov
mov
scas
push
(bad)
cmp
scas
and
(bad)
inc
daa
out
dec
sbb
aam
ja
nop
sbb
pop
fcomp
sub
outs
sub
je
xor
(bad)
call
push
fdivr
mov
jg
dec
(bad)
(bad)
dec
push
cmp
fmul
div
pop
mov
jp
pop
jg
(bad)
jmp
sbb
stc
clc
(bad)
std
popf
out
jge
sbb
jmp
pop
sub
ss
(bad)
(bad)
jl
out
mov
push
and
das
adc
sahf
lods
jmp
repz
(bad)
(bad)
jmp
in
xor
and
mov
push
dec
push
xchg
and
ss
inc
xor
cld
(bad)
dec
adc
and
and
dec
fdiv
inc
ret
mov
(bad)
fsub
or
jl
dec
cmps
cwde
(bad)
sbb
dec
mul
(bad)
pop
addr16
jne
cmc
aad
mov
(bad)
(bad)
jmp
cmp
inc
loopne
mov
mov
imul
xor
cwde
add
(bad)
jmp
int3
add
clc
lock
jno
inc
mov
add
dec
cmps
(bad)
in
xchg
(bad)
(bad)
(bad)
call
mov
rol
sub
inc
dec
nop
pop
add
and
dec
or
xor
(bad)
(bad)
(bad)
out
pop
movs
pusha
popa
mul
inc
sbb
outs
leave
pop
fstp
lds
or
cmc
sar
(bad)
call
(bad)
mov
pushf
push
pop
ins
pop
jno
pop
pop
cmp
(bad)
(bad)
(bad)
jmp
loope
sbb
mov
cld
out
sub
fcomp
imul
out
(bad)
(bad)
(bad)
out
jmp
pop
cmc
repnz
adc
inc
mov
cmp
shl
adc
jge
(bad)
call
cdq
ret
cmp
ins
xor
dec
int
rcl
jg
jae
hlt
xor
jmp
shl
sbb
enter
or
pop
jnp
(bad)
(bad)
jmp
push
xor
push
bound
and
adc
mov
ds
and
repnz
adc
push
test
cmps
js
and
outs
jmp
xor
adc
mov
mov
repz
arpl
call
inc
loopne
(bad)
mov
fistp
push
lods
or
(bad)
mov
js
push
mov
data16
(bad)
mov
lods
add
les
and
adc
call
(bad)
cld
xor
std
lock
push
je
(bad)
shl
(bad)
(bad)
mov
jecxz
mov
je
cmc
adc
pushf
inc
mov
loopne
lods
sub
inc
std
test
(bad)
fdiv
(bad)
push
xchg
sbb
in
and
mov
xchg
adc
js
dec
lds
(bad)
jg
jmp
call
xchg
hlt
jns
fisubr
cld
out
xlat
sar
out
mov
sar
dec
pop
xchg
scas
pop
fstp
aam
sti
jmp
cli
enter
imul
add
xchg
pop
out
cmp
or
cwde
into
add
push
std
rol
inc
(bad)
inc
dec
mov
jno
mov
clc
and
push
sub
or
sar
pop
mov
cli
mov
sbb
test
test
and
jno
je
dec
mov
xor
push
jecxz
(bad)
(bad)
cmp
loopne
sub
adc
out
mov
test
push
or
or
push
and
xchg
or
dec
stos
pop
cs
mov
(bad)
(bad)
fninit
mov
mov
stos
enter
lods
push
mov
(bad)
enter
in
call
jge
mov
xchg
pop
dec
bound
xor
daa
(bad)
or
inc
fcomi
push
lods
(bad)
jmp
imul
repnz
call
adc
cmp
nop
(bad)
(bad)
(bad)
(bad)
fst
sub
jo
sti
push
inc
test
mov
adc
push
aam
push
add
mov
dec
dec
pop
adc
lock
cmp
(bad)
(bad)
inc
cmp
shl
pop
pop
js
mov
adc
fwait
jae
jl
add
push
cmps
xor
data16
jae
push
test
out
mov
cmp
mov
cmp
popf
adc
xchg
sbb
add
mov
jg
(bad)
mov
cld
xchg
hlt
test
dec
add
(bad)
(bad)
dec
dec
idiv
inc
mov
sub
clc
pop
cld
lds
(bad)
(bad)
jg
(bad)
inc
(bad)
std
fisttp
mov
fs
scas
mov
jg
push
sbb
inc
outs
ins
dec
jmp
push
loopne
jae
push
mov
push
jg
jle
(bad)
(bad)
push
std
(bad)
mov
loope
lahf
dec
aaa
mov
gs
outs
(bad)
(bad)
mov
dec
cli
ins
out
(bad)
std
scas
jle
sbb
(bad)
and
retf
push
push
fdivr
(bad)
(bad)
(bad)
in
mov
stos
neg
test
enter
pop
sub
mov
inc
(bad)
int
cmp
cmps
(bad)
(bad)
(bad)
jmp
inc
ds
add
adc
shl
pop
sub
mov
jecxz
pop
and
in
aad
daa
shr
(bad)
(bad)
call
fdiv
xor
adc
fnsave
cmc
inc
sahf
sub
ret
mov
shl
cmp
ret
cmp
std
or
iret
pop
loope
adc
(bad)
jg
out
sbb
pop
xlat
in
out
popa
or
jp
inc
test
sbb
or
(bad)
(bad)
(bad)
jns
inc
sbb
jae
inc
hlt
into
ror
stos
lahf
loop
clc
inc
js
add
dec
repnz
sub
push
cwde
fdiv
mov
dec
enter
call
adc
mov
dec
xchg
int3
(bad)
fsubp
jp
mov
mov
push
pop
adc
int3
fiadd
inc
movs
popf
inc
xor
sub
or
lods
test
or
repnz
jno
push
push
and
mov
cmps
and
out
jmp
ja
dec
movs
pop
cmp
jg
retf
call
mov
sti
in
and
add
out
outs
jge
dec
pusha
loopne
inc
sti
sahf
cld
xchg
pop
int3
inc
mov
jno
mov
push
jmp
into
sub
xor
imul
push
xor
(bad)
(bad)
(bad)
call
or
xchg
iret
or
xchg
pop
mov
stc
icebp
test
mov
xor
retf
adc
push
ins
popa
or
(bad)
out
clc
(bad)
pop
mov
cmp
mov
outs
ins
sbb
jb
imul
imul
lds
jmp
push
sub
enter
dec
cmps
inc
cld
inc
xor
pop
loop
daa
mov
(bad)
adc
loope
pop
jp
shl
(bad)
(bad)
(bad)
push
jecxz
(bad)
xchg
stos
and
mov
mov
aad
in
out
pop
jb
js
adc
sbb
(bad)
jmp
inc
xor
jge
mov
scas
push
mov
add
xchg
push
xor
(bad)
fiadd
lds
push
(bad)
inc
cld
nop
add
inc
jl
pushf
imul
xchg
popf
adc
or
jo
(bad)
(bad)
(bad)
(bad)
mov
out
mov
scas
mov
mov
jnp
test
pop
out
sub
(bad)
(bad)
push
aas
mov
pop
(bad)
jle
mov
inc
movs
mov
lods
pop
call
scas
(bad)
push
data16
and
loopne
es
push
pop
mov
adc
or
mov
add
scas
aaa
pop
or
mov
mov
sub
pushf
dec
inc
bound
cmp
mov
ss
(bad)
(bad)
(bad)
jns
fistp
pop
clc
cmp
fdiv
test
xor
(bad)
mov
outs
dec
lods
call
sbb
xchg
pop
test
cmps
in
(bad)
(bad)
(bad)
call
jmp
pop
and
outs
sbb
sub
loope
push
adc
and
aaa
jge
inc
xchg
inc
ret
cmc
(bad)
js
fist
push
cwde
pop
jns
loope
(bad)
call
pop
sub
into
xchg
mov
and
add
jecxz
or
add
or
(bad)
fisttp
in
and
jo
inc
cld
rcl
add
retf
sub
mov
(bad)
(bad)
jmp
std
inc
mov
mov
sahf
or
mov
dec
js
leave
test
push
push
ret
adc
(bad)
out
in
iret
fsub
inc
dec
push
jne
xchg
adc
pop
push
pop
mov
aad
(bad)
(bad)
(bad)
push
sar
mov
push
adc
xor
cmp
jnp
shl
outs
push
or
movs
(bad)
(bad)
(bad)
dec
cmp
pop
inc
xchg
jmp
jp
mov
adc
xor
push
dec
mov
push
or
adc
das
nop
jb
mov
sahf
xor
mov
cld
(bad)
push
not
data16
test
addr16
jb
mov
mov
xor
pop
push
out
pop
inc
sub
mov
ja
pop
sbb
inc
lods
cmc
or
stos
add
das
or
test
lock
(bad)
mov
mov
dec
aaa
ss
mov
mov
jns
dec
jecxz
stc
in
add
(bad)
in
xchg
out
xor
cmp
retf
sbb
dec
mov
(bad)
repz
(bad)
mov
ins
push
mov
jl
out
mov
(bad)
dec
ins
xor
mov
add
sbb
mov
(bad)
dec
dec
and
call
loop
pushf
fist
repnz
(bad)
dec
mov
jge
imul
(bad)
mov
out
add
sub
inc
(bad)
mov
jmp
cmp
inc
xor
xor
xchg
cmps
dec
xor
or
inc
mov
imul
(bad)
(bad)
call
sub
mov
mov
push
mov
sub
and
out
(bad)
(bad)
call
pop
fld
push
dec
rcr
stos
mov
pusha
mov
cmp
add
or
xchg
popa
add
inc
test
mov
push
leave
mov
or
cli
pop
jb
sbb
(bad)
dec
cs
(bad)
(bad)
(bad)
(bad)
(bad)
in
repnz
mov
mov
add
adc
cmp
rol
cmp
add
mov
add
sbb
jmp
lock
jb
mov
xchg
pop
fmul
or
inc
adc
xor
or
(bad)
(bad)
jmp
cwde
inc
and
fld
mov
jo
adc
stos
clc
test
popf
mov
adc
retf
fild
(bad)
pop
ins
xor
test
pop
mov
(bad)
dec
jecxz
pop
cmove
sahf
push
jp
les
icebp
add
pop
ja
(bad)
(bad)
(bad)
std
retf
pop
arpl
rcr
adc
push
mov
push
pmaddwd
mov
xchg
cmc
(bad)
(bad)
jg
call
test
ret
mov
xchg
leave
(bad)
jne
sti
or
test
(bad)
inc
out
jmp
enter
lods
jmp
sbb
test
fisttp
dec
dec
jno
(bad)
(bad)
push
push
sub
retf
outs
mov
out
sbb
lods
fwait
ret
sahf
adc
adc
(bad)
mov
ror
dec
cmc
dec
mov
stos
mov
cli
call
movs
icebp
cld
push
mov
out
pop
xchg
pusha
int3
push
jno
fidivr
mov
push
cmps
mov
fwait
and
cmp
dec
js
imul
mov
(bad)
(bad)
push
mov
mov
jmp
scas
cmps
mov
sbb
jg
mov
jo
aaa
cld
(bad)
dec
jns
pushf
jne
(bad)
adc
pop
and
or
(bad)
jmp
(bad)
xor
aaa
dec
(bad)
aam
pop
mov
inc
(bad)
sbb
push
dec
repz
mov
test
call
hlt
cdq
pop
gs
xchg
cmps
sub
cmp
or
mov
ins
jmp
(bad)
(bad)
(bad)
jmp
mov
mov
and
and
push
popf
jns
rcr
jmp
and
mov
hlt
mov
mov
ret
mov
call
(bad)
xor
call
(bad)
jmp
movs
loope
cmp
or
sar
mov
(bad)
fcomp
sbb
fld
sbb
add
scas
mov
sub
scas
dec
pop
or
push
(bad)
jmp
inc
pop
leave
push
xchg
push
or
jns
clc
enter
cmp
dec
xor
ins
jnp
scas
and
xor
or
scas
sub
pop
mov
(bad)
jmp
retf
and
adc
call
loop
add
jo
mov
xor
jmp
cli
(bad)
dec
nop
ds
call
les
cwde
dec
inc
xor
cwde
scas
jbe
(bad)
(bad)
(bad)
call
je
dec
es
scas
xor
cmp
hlt
pop
mov
and
enter
or
imul
hlt
je
fcomp
push
sbb
cmp
push
(bad)
(bad)
(bad)
call
stos
jae
xchg
sub
xor
ror
pop
inc
imul
shl
push
and
jmp
cs
hlt
je
mov
rcr
sbb
nop
inc
mov
mov
adc
rcl
jg
aad
and
nop
or
test
push
inc
cld
rcpps
xchg
add
add
mov
stos
iret
xor
hlt
pop
mov
jmp
out
sub
js
shl
mov
lods
xor
(bad)
jg
imul
aaa
add
sti
popf
inc
push
fisub
jg
inc
je
repnz
pop
jo
mov
add
les
pop
and
or
xor
stc
add
xchg
outs
fcomp
outs
mov
(bad)
jmp
fldcw
dec
inc
xor
arpl
scas
xlat
mov
arpl
xchg
mov
(bad)
(bad)
jmp
dec
pop
das
stos
sub
push
add
xchg
mov
xchg
test
cmp
mov
inc
ror
ret
jo
push
fwait
ins
add
adc
jae
cmp
(bad)
jmp
jg
adc
push
push
push
or
scas
and
outs
imul
clc
outs
(bad)
(bad)
(bad)
inc
xor
push
gs
sbb
cwde
ror
and
inc
(bad)
retf
clc
(bad)
(bad)
(bad)
(bad)
inc
sub
ret
adc
mov
out
xor
repz
jl
sbb
or
push
mov
push
adc
hlt
or
or
and
mov
(bad)
dec
scas
cmp
data16
leave
fisttp
fld
adc
cwde
xor
(bad)
call
inc
inc
mov
leave
pop
rol
sub
ss
mov
ret
daa
fsub
sub
ret
push
inc
inc
adc
jmp
movs
xor
les
pop
xchg
outs
sti
retf
add
loope
(bad)
jmp
(bad)
lock
loopne
sbb
fidiv
out
mov
(bad)
jmp
jno
or
adc
inc
in
test
cs
or
mov
add
test
xor
aas
ins
dec
mov
(bad)
(bad)
dec
in
lock
mov
repz
(bad)
xchg
dec
out
(bad)
adc
xchg
mov
lahf
lahf
mov
xchg
repnz
inc
aam
adc
(bad)
(bad)
call
jne
mov
mov
jo
sub
arpl
sub
cmp
je
mov
and
(bad)
(bad)
call
dec
dec
or
push
movs
cmps
jg
imul
pop
xlat
lods
sub
aam
fdiv
jecxz
push
int
push
dec
push
jmp
mov
pop
sub
pop
(bad)
(bad)
(bad)
call
or
movs
pop
scas
enter
fstp
mov
push
retf
or
xor
je
aaa
rol
adc
sbb
into
and
test
dec
std
(bad)
(bad)
(bad)
call
inc
inc
sub
adc
jb
xor
push
inc
loope
xchg
mov
add
loopne
(bad)
std
sar
lods
das
pop
aaa
ss
jnp
cdq
arpl
push
cld
(bad)
call
and
push
inc
rcr
jb
mov
ror
cmp
sbb
jmp
push
retf
ins
mov
jo
sahf
in
out
mov
stos
push
mov
clc
(bad)
(bad)
cmp
inc
movs
push
xchg
pop
movs
fadd
mov
mov
adc
lds
scas
cli
pop
ds
cld
xchg
repz
fisttp
out
cmps
dec
pop
sbb
je
xchg
mov
xchg
(bad)
(bad)
(bad)
call
rcr
and
cmps
nop
jae
xchg
daa
jnp
repz
jp
xor
push
(bad)
(bad)
(bad)
jmp
imul
leave
ret
pop
sar
jne
lods
mov
adc
js
jl
jp
in
xchg
jmp
mov
or
je
cs
mov
arpl
cmp
ror
pop
cmp
jg
(bad)
push
and
add
jb
push
cmps
inc
mov
(bad)
jmp
jp
mov
and
sbb
inc
lahf
loope
fidiv
xor
pushf
mov
(bad)
(bad)
(bad)
inc
jg
jmp
outs
icebp
inc
mov
dec
gs
stc
loope
xchg
mov
or
fistp
jmp
and
gs
sub
fwait
mov
add
rcr
sbb
das
or
pop
cmp
sub
add
mov
call
dec
fs
cmp
lods
push
scas
cli
scas
or
cmp
mov
dec
mov
(bad)
(bad)
dec
nop
dec
cmp
js
aas
or
popa
inc
test
frstor
es
bound
inc
mov
(bad)
call
test
sub
and
cmps
adc
fld
(bad)
(bad)
call
sub
push
jmp
inc
jmp
xchg
mov
cli
xor
(bad)
jg
adc
adc
cmp
and
test
mov
pop
pop
mov
xor
(bad)
mov
mov
mov
cmp
mov
pop
mov
(bad)
inc
lahf
popa
push
jmp
sar
mov
pop
out
sub
fwait
or
mov
(bad)
sbb
dec
aas
loope
rcl
adc
(bad)
(bad)
jg
icebp
outs
push
xor
sbb
sar
sbb
fcmovnu
bound
ror
das
(bad)
call
xchg
fisttp
setbe
pusha
adc
(bad)
jmp
inc
mov
scas
pop
lods
(bad)
cld
fimul
mov
leave
push
daa
mov
test
push
cdq
push
fs
in
pop
js
(bad)
(bad)
jmp
pushf
pop
push
mov
sbb
push
inc
dec
js
icebp
cmp
sti
in
fbld
lods
cmps
xor
ins
push
cwde
dec
xchg
outs
idiv
(bad)
(bad)
call
repz
loope
imul
test
mov
gs
or
and
std
(bad)
(bad)
(bad)
mov
inc
jae
pop
dec
fld
pop
out
loope
cmps
inc
mov
outs
cwde
cmp
push
loopne
or
mov
stos
cmp
xlat
call
xchg
add
shr
retf
inc
mov
(bad)
(bad)
(bad)
inc
test
and
cmp
xchg
xchg
add
or
(bad)
icebp
push
and
mov
imul
sbb
inc
xor
inc
(bad)
add
mov
adc
movs
or
adc
cmp
(bad)
(bad)
mov
push
in
xchg
dec
dec
test
mov
pop
or
inc
(bad)
cli
mov
(bad)
ds
push
xchg
xchg
pop
fs
mov
(bad)
(bad)
(bad)
call
pop
bnd
dec
outs
adc
lods
lea
mov
push
mov
add
adc
(bad)
(bad)
push
loope
nop
lahf
(bad)
sub
cmp
inc
pusha
inc
jg
cmps
cwde
add
mov
xor
sahf
in
dec
or
mov
popf
inc
add
pop
enter
repnz
mov
jecxz
das
jge
(bad)
(bad)
jg
inc
xchg
pop
outs
lea
mov
xor
xchg
xchg
rcr
retf
(bad)
(bad)
out
jp
inc
in
jle
movs
cmp
mov
mov
out
cs
pop
and
mov
daa
jae
lock
cwde
outs
je
cmc
(bad)
(bad)
jmp
mov
dec
cmp
adc
gs
cmp
clc
(bad)
call
pusha
bound
sbb
push
sbb
xchg
adc
(bad)
(bad)
call
mov
mov
fs
push
pop
sbb
xor
mov
jb
pop
add
mov
inc
imul
pop
adc
addr16
dec
sbb
jg
movs
push
cmps
xchg
mov
xor
push
loope
in
cmp
in
sub
mov
scas
and
rcr
jnp
out
mov
and
and
(bad)
out
add
(bad)
out
cli
mov
loopne
arpl
inc
inc
xor
test
call
mov
jns
pop
icebp
scas
aam
mov
mov
fwait
push
jmp
pop
(bad)
(bad)
cmp
mov
adc
in
inc
pop
adc
adc
cmps
cmps
sbb
xor
(bad)
(bad)
push
dec
push
das
mov
sub
inc
pop
xor
mov
inc
and
push
mov
cmp
jo
enter
mov
jbe
cmps
retf
push
dec
fs
or
ja
cli
and
(bad)
xor
adc
mov
(bad)
inc
inc
paddsw
mov
loopne
or
mov
les
sbb
repnz
mov
(bad)
sub
(bad)
dec
cs
ret
loop
add
mov
and
sbb
call
or
cli
xchg
(bad)
jle
test
and
fadd
add
and
(bad)
(bad)
(bad)
jmp
or
adc
mov
mov
mov
lods
pop
lods
jmp
leave
int3
arpl
call
and
add
add
push
jge
jge
dec
aas
rcr
sbb
(bad)
(bad)
(bad)
cmp
jb
dec
fistp
and
sub
and
mov
add
shr
cmp
jne
lods
xchg
and
or
cwde
(bad)
push
std
fbstp
add
pop
push
mov
jmp
add
(bad)
jg
stos
scas
sub
dec
imul
jno
and
fwait
pop
out
mov
pop
sub
inc
(bad)
(bad)
(bad)
(bad)
fisttp
lahf
cmp
stos
adc
jp
imul
xor
retf
mov
(bad)
(bad)
call
push
add
sub
mov
or
or
pop
and
loope
out
popf
sahf
jle
movs
scas
data16
in
loope
lea
data16
call
sti
ss
rcl
sar
mov
pop
jnp
mov
mov
daa
push
cmp
cmp
out
push
sub
mov
(bad)
stc
pop
ret
or
(bad)
(bad)
jmp
popa
inc
mov
mov
push
cmp
mov
mov
mov
pop
jle
retf
jns
jl
fs
(bad)
jmp
leave
jmp
push
repz
cld
leave
jmp
pop
mov
cli
jae
hlt
popa
add
(bad)
aas
aas
(bad)
mov
cmp
(bad)
out
test
(bad)
(bad)
(bad)
fistp
cmc
neg
std
dec
out
add
in
js
iret
enter
add
outs
push
in
jmp
mov
add
jbe
cwde
repz
jg
pop
and
jb
mov
fidiv
fisttp
(bad)
mov
int
(bad)
(bad)
call
push
mov
adc
xchg
sbb
fnstcw
outs
clc
(bad)
out
push
div
punpcklbw
xor
jbe
std
xor
sub
jmp
mov
sbb
int3
mov
adc
rcl
add
(bad)
(bad)
call
push
jecxz
inc
adc
lock
adc
and
and
sar
call
lds
(bad)
adc
cmp
adc
int3
fmul
push
mov
fadd
jbe
push
rol
(bad)
(bad)
call
call
sbb
rol
add
sbb
sbb
fwait
mov
sbb
add
add
das
cli
inc
(bad)
rol
out
xchg
leave
jb
cld
inc
or
add
adc
hlt
lahf
pop
dec
lds
scas
(bad)
(bad)
jmp
push
adc
lods
mov
push
xor
or
(bad)
(bad)
jmp
pop
cdq
and
imul
cmp
int3
cmp
fiadd
xor
int
lock
loope
or
and
clc
mov
call
shl
movs
and
push
jecxz
stos
mov
jns
(bad)
(bad)
push
cdq
xchg
sbb
ins
retf
cs
int3
bound
xchg
push
test
jbe
mov
pop
loopne
addr16
ins
pop
adc
scas
int3
lods
in
out
je
repnz
cmp
movs
(bad)
jg
add
sbb
sub
jns
mov
(bad)
(bad)
(bad)
jmp
dec
mov
(bad)
movs
sub
rcr
je
adc
xor
lods
pop
xchg
sbb
scas
mov
push
test
cmp
js
mov
xchg
rol
jle
enter
push
xchg
and
sub
retf
or
arpl
cmps
or
and
add
(bad)
dec
stos
mov
dec
fidiv
sbb
jecxz
jns
lea
(bad)
push
or
mov
in
daa
or
push
ret
mov
push
fdivrp
jmp
icebp
mov
(bad)
call
loopne
(bad)
mov
fst
pop
(bad)
sbb
mov
mov
aad
and
dec
sbb
pop
mov
enter
jp
mov
scas
jp
and
test
call
popf
ins
mov
dec
sbb
rol
dec
hlt
retf
outs
xchg
lock
jne
and
call
pusha
in
sub
mov
and
mov
out
sbb
gs
jmp
out
pop
push
jns
adc
mov
stos
push
(bad)
and
(bad)
call
bound
fs
ins
cli
es
adc
mov
shl
(bad)
(bad)
(bad)
(bad)
call
jmp
cs
mov
scas
cmp
cmp
shrd
fnstcw
push
inc
xlat
retf
movs
les
addr16
movs
pop
fsubr
jl
mov
pop
mov
(bad)
push
(bad)
out
xor
sub
dec
jbe
sahf
scas
retf
bnd
(bad)
mov
cmovne
xchg
stos
cmp
xchg
cmp
xchg
jl
loop
(bad)
(bad)
(bad)
push
jae
dec
aam
(bad)
hlt
jl
sbb
xor
rcl
in
ror
fcomip
mov
frstor
inc
bound
loop
lock
mov
mov
(bad)
jmp
mov
loope
div
mov
ins
dec
enter
jg
xchg
repz
push
js
ins
mov
xchg
mov
ins
vmovdqa
(bad)
call
inc
test
cmp
push
test
hlt
call
faddp
jge
mov
push
hlt
adc
in
cmp
push
jg
(bad)
(bad)
jmp
cmp
mov
fs
js
or
jmp
fbld
dec
inc
loope
ja
jl
and
dec
sbb
push
or
and
xchg
sbb
sahf
mov
pop
add
xor
(bad)
cmps
add
or
loop
ror
lods
iret
adc
xor
push
jg
lock
inc
and
iret
(bad)
xor
(bad)
lods
inc
add
out
out
aas
(bad)
dec
mov
xchg
xchg
xchg
mov
(bad)
jmp
sbb
pop
inc
neg
(bad)
outs
enter
pop
mov
sbb
(bad)
mov
xor
inc
adc
(bad)
(bad)
push
adc
and
es
fist
mov
nop
in
and
out
cmp
cmp
(bad)
(bad)
jg
(bad)
fstp
push
or
adc
add
lahf
dec
xchg
and
add
adc
pusha
sbb
(bad)
cs
das
sar
mov
jae
aam
in
(bad)
(bad)
(bad)
jmp
dec
sbb
gs
add
cmp
fwait
pop
xor
bound
dec
jl
mov
call
js
ds
push
pop
call
or
dec
dec
fdivrp
(bad)
(bad)
dec
retf
push
shr
inc
and
inc
sub
data16
xor
rcl
push
sbb
inc
les
into
jns
sahf
iret
mov
inc
std
inc
jp
jno
add
arpl
dec
sbb
sbb
mov
jmp
jecxz
in
sub
popf
pop
mov
aas
in
hlt
inc
(bad)
(bad)
(bad)
jmp
add
mov
test
inc
test
stos
(bad)
cmp
daa
loopne
call
dec
outs
jnp
inc
retf
(bad)
(bad)
(bad)
daa
jbe
out
xchg
dec
repz
pop
out
mov
aas
ds
sub
pop
sub
push
shl
stos
jecxz
xor
loopne
mov
loop
mov
rcl
jbe
cmc
xlat
and
jmp
mov
and
push
popa
add
add
retf
daa
(bad)
loop
pop
shl
(bad)
(bad)
dec
adc
dec
inc
push
mov
pop
stos
enter
ret
and
lea
dec
in
mov
ja
aaa
lods
out
push
scas
adc
(bad)
mov
mov
inc
or
cmp
(bad)
(bad)
inc
dec
mov
sti
sub
xor
sar
loopne
xchg
sti
pop
repnz
std
call
mov
jp
push
(bad)
push
xor
mov
or
pop
(bad)
(bad)
(bad)
jmp
aas
js
(bad)
mov
pop
mov
push
mov
iret
into
inc
mov
add
cli
dec
add
push
mov
in
xchg
gs
outs
pusha
mov
(bad)
(bad)
call
repz
push
and
int3
xchg
fdivr
xlat
iret
jp
dec
inc
xchg
imul
daa
int3
dec
mov
call
loopne
mov
dec
hlt
mov
mov
fldlg2
xor
dec
test
retf
gs
push
mov
push
adc
jmp
inc
call
(bad)
(bad)
(bad)
call
scas
xchg
aad
ja
and
and
js
sbb
inc
dec
dec
test
cmps
aad
sub
(bad)
jmp
cwde
and
fiadd
jbe
rcr
outs
lahf
mov
push
inc
loopne
xor
mov
xchg
jae
movs
ret
mov
dec
(bad)
jg
outs
inc
sbb
loopne
movs
and
inc
loopne
sti
cmc
push
push
push
ror
mov
lds
xchg
stos
(bad)
(bad)
(bad)
push
mov
(bad)
js
cmps
push
mov
ins
mov
push
repnz
pop
dec
in
mov
jle
xor
(bad)
(bad)
(bad)
inc
add
push
bound
cmps
loopne
icebp
(bad)
mov
imul
rcl
add
das
mov
push
arpl
or
in
out
shr
outs
imul
cmp
dec
cmp
fwait
jbe
nop
popa
bound
push
in
inc
inc
adc
jne
push
call
jmp
stos
ins
mov
adc
jl
fs
nop
in
(bad)
mov
sub
js
(bad)
(bad)
inc
adc
jp
inc
jl
outs
std
hlt
push
xchg
jbe
or
mov
or
pop
mov
cmp
cld
xor
cdq
pop
mov
(bad)
(bad)
call
xchg
inc
add
addr16
mov
(bad)
jnp
sbb
or
ret
out
cdq
repnz
adc
(bad)
call
push
pop
add
jo
aam
dec
mov
int3
cmps
cmp
(bad)
jmp
dec
cmp
cdq
jb
dec
mov
or
call
dec
pop
xchg
jns
mov
jns
xchg
inc
shl
loopne
call
mov
or
not
std
xlat
idiv
jae
loopne
call
and
ds
out
fidivr
fdivrp
(bad)
(bad)
call
repnz
mov
sub
sbb
xchg
int3
out
(bad)
(bad)
daa
(bad)
(bad)
(bad)
call
cmps
dec
add
adc
cmp
test
or
cs
(bad)
(bad)
(bad)
cmp
out
fwait
lods
repz
or
xor
nop
aas
lds
mov
cld
rol
mov
xor
in
mov
out
and
inc
xor
pop
imul
inc
add
dec
loop
and
mov
sbb
ret
jnp
and
mov
or
(bad)
inc
xchg
add
adc
or
and
add
add
fdiv
pop
lock
(bad)
jmp
sbb
pop
dec
je
mov
mov
jne
les
(bad)
call
cmps
rcr
cmp
popa
xchg
push
rcr
mov
jo
or
or
repz
push
idiv
(bad)
inc
add
mov
fst
inc
sahf
psraw
sub
(bad)
dec
popf
sub
dec
or
push
mov
cdq
push
adc
shr
cmp
(bad)
push
popf
adc
push
and
add
dec
cwde
or
jno
cmp
jg
int3
pop
ins
add
push
mov
idiv
push
ss
stos
je
or
std
(bad)
dec
dec
pushf
xor
fidivr
add
call
add
(bad)
call
xchg
arpl
and
mov
aad
pushf
cld
ins
das
mov
scas
(bad)
(bad)
(bad)
jmp
je
mov
push
mov
fmul
shr
inc
push
xor
push
xor
xchg
(bad)
(bad)
inc
and
mov
inc
sbb
rcl
aam
stos
or
add
imul
sub
retf
lods
cs
inc
add
xchg
(bad)
(bad)
jmp
ds
repz
mov
in
cmp
movs
push
lods
pop
adc
adc
lods
jb
pushf
pop
imul
push
dec
jl
xlat
fisttp
loopne
imul
xchg
sub
nop
pop
push
fild
jmp
cmp
ror
int3
and
xor
(bad)
inc
and
sahf
cmps
(bad)
pop
push
ins
mov
data16
call
xlat
dec
cmps
fcmovnbe
lods
cmps
div
enter
push
in
jno
(bad)
outs
aaa
std
not
cwde
jge
fisubr
sar
jp
nop
int
scas
pop
jae
sub
xor
pop
outs
fs
test
icebp
or
sti
je
push
and
and
ins
inc
out
pop
pop
loopne
call
jns
jne
adc
adc
push
ss
push
jle
aas
or
sub
and
(bad)
jmp
sub
pusha
mov
add
shl
jg
mov
(bad)
jmp
jmp
popa
cmps
sub
pop
fidivr
push
loope
out
adc
jmp
jne
(bad)
(bad)
jmp
push
or
enter
fsub
inc
or
adc
cmp
mov
ret
cmps
daa
(bad)
jmp
xor
bound
ins
dec
pop
mov
inc
xchg
sbb
call
imul
dec
shl
sub
(bad)
xor
loope
adc
pop
mov
push
jb
call
(bad)
dec
mov
cmpxchg8b
dec
jle
mov
xchg
std
and
(bad)
(bad)
(bad)
inc
push
add
fiadd
sub
push
push
sbb
int
ret
call
sub
jo
(bad)
(bad)
(bad)
(bad)
cmp
in
xchg
retf
xor
fs
lds
mov
mov
daa
push
cli
cwde
(bad)
(bad)
call
and
pop
adc
(bad)
(bad)
(bad)
mov
shl
mov
add
in
stos
bound
es
lock
dec
in
mov
(bad)
(bad)
inc
leave
and
xchg
dec
xchg
mov
es
cmp
jmp
add
add
(bad)
inc
je
aam
test
and
sbb
dec
ss
inc
fdivr
jl
xchg
jmp
dec
addr16
retf
outs
cwde
mov
cdq
popf
std
(bad)
(bad)
jmp
cmp
adc
fdivr
sbb
retf
ret
int3
pop
cmp
adc
adc
repnz
ds
out
pushf
jg
call
add
lods
xor
mov
ins
outs
es
(bad)
mov
(bad)
aaa
outs
out
or
sbb
mov
xlat
loope
cmps
out
jl
pop
out
es
dec
mov
or
dec
push
xor
ds
js
(bad)
(bad)
jmp
inc
into
clc
mov
in
xchg
xor
xor
or
(bad)
(bad)
mov
pushf
movntps
adc
cmps
pop
add
jnp
xchg
and
lods
sub
adc
sub
dec
popf
js
dec
add
jmp
add
mov
out
or
std
es
adc
mov
(bad)
(bad)
(bad)
dec
jl
jb
pop
scas
xor
sbb
cmp
inc
dec
rol
repnz
or
call
clc
or
out
push
out
popf
addr16
xchg
add
leave
out
(bad)
(bad)
(bad)
jmp
dec
and
xor
dec
loop
out
jle
xor
mov
sub
xchg
sbb
fcomp
mov
inc
(bad)
movs
test
lea
sub
(bad)
(bad)
(bad)
mov
es
push
sub
ja
inc
arpl
add
je
mov
and
out
xor
mov
data16
sub
xchg
push
icebp
mov
adc
lock
xchg
jp
and
mov
inc
push
mov
push
(bad)
(bad)
(bad)
dec
call
adc
sub
xchg
push
lock
cmp
lods
cmp
inc
xchg
jg
hlt
inc
push
sar
lahf
std
mov
mov
cmc
stc
lods
mov
hlt
pushf
cmp
jbe
int
rol
out
xor
test
cmp
cld
and
js
dec
(bad)
push
mov
adc
xlat
cli
fcomip
jmp
jmp
sub
jae
(bad)
xchg
(bad)
mov
fs
imul
mov
movs
dec
sub
push
sub
dec
mov
and
jns
pop
sub
or
jl
loopne
jp
or
xchg
xor
(bad)
(bad)
(bad)
dec
sub
scas
(bad)
jle
(bad)
idiv
add
aad
scas
mov
(bad)
(bad)
dec
dec
inc
xchg
mov
pop
icebp
and
pop
std
addr16
outs
jg
jmp
bnd
scas
call
(bad)
(bad)
mov
sub
jb
mov
mov
cs
inc
mov
(bad)
(bad)
push
adc
xchg
inc
mov
push
ror
xchg
mov
and
cli
(bad)
dec
mov
push
retf
mov
dec
into
xchg
outs
out
push
cld
(bad)
aas
or
sub
retf
cmp
pushf
sahf
and
es
add
(bad)
add
and
push
mov
mov
(bad)
ficomp
sar
pop
shl
aaa
fadd
jnp
and
fucomi
fistp
call
jne
inc
(bad)
and
sub
mov
cmps
sar
jge
clc
cli
stos
into
mov
dec
iret
hlt
dec
inc
jbe
xor
mov
and
sahf
push
mov
cmc
jle
pop
cmp
lock
(bad)
(bad)
(bad)
mov
cmps
and
cmp
push
cmps
es
outs
cdq
mov
fnstsw
fdivr
push
in
push
xchg
repz
aam
sbb
push
shr
fdivr
sbb
(bad)
(bad)
call
call
and
sbb
xor
xor
lods
aam
inc
in
lea
clc
loop
test
and
(bad)
mov
repz
movs
lea
xchg
(bad)
(bad)
(bad)
push
inc
pusha
(bad)
push
call
sub
pusha
dec
push
push
sbb
push
ffreep
jecxz
(bad)
push
std
sub
stc
push
daa
pop
(bad)
push
in
les
dec
(bad)
call
pushf
ins
stos
repz
pop
sub
test
xchg
fst
pop
(bad)
push
adc
jmp
inc
sub
gs
aam
push
xchg
xchg
jmp
push
adc
mov
pop
cmps
jge
stos
repnz
sahf
cmp
push
or
pushf
fcos
(bad)
(bad)
dec
fs
jmp
cld
xlat
out
fdiv
xor
adc
aas
xor
fisttp
call
push
daa
(bad)
(bad)
jmp
cli
adc
push
out
mov
mov
imul
xor
add
out
dec
jmp
adc
aam
call
mov
sbb
mov
imul
fst
mov
(bad)
(bad)
inc
ret
and
loopne
add
inc
sbb
fwait
mov
sahf
or
ret
mov
adc
(bad)
(bad)
call
repz
aad
in
and
aad
and
fabs
(bad)
call
popf
lahf
lods
jns
mov
push
std
add
xchg
push
jnp
dec
shr
jbe
(bad)
(bad)
(bad)
(bad)
jns
shl
inc
out
fnstsw
push
aas
dec
mov
pop
cmp
lea
dec
jl
adc
sub
inc
fld
ss
push
retf
sub
(bad)
(bad)
jg
jnp
mov
cmp
test
jnp
out
jmp
or
cmp
and
pop
(bad)
sub
push
ins
(bad)
mov
mov
mov
xlat
movs
pop
xchg
xor
or
aas
(bad)
(bad)
(bad)
(bad)
cld
out
test
adc
aad
push
or
fist
iret
pop
xlat
or
(bad)
(bad)
dec
inc
sub
fstp
xor
xchg
push
pusha
mov
cmps
xor
pop
add
stos
cwde
ja
add
xor
mov
(bad)
(bad)
inc
jle
adc
cmp
add
jmp
dec
pop
adc
inc
cwde
cwde
jmp
jmp
inc
and
loop
cwde
push
call
mov
sbb
(bad)
out
xor
add
sub
push
(bad)
ss
(bad)
(bad)
push
push
outs
adc
fst
push
cdq
scas
mov
push
les
jg
(bad)
inc
sbb
(bad)
fucom
sbb
and
add
lods
push
or
(bad)
(bad)
(bad)
jmp
mov
inc
inc
dec
adc
xor
(bad)
mov
cmc
arpl
dec
retf
(bad)
(bad)
call
mov
ins
sub
lahf
push
les
mov
enter
fwait
and
cmp
(bad)
mov
push
call
mov
add
(bad)
push
sbb
mov
(bad)
fcomip
jmp
es
mov
ret
icebp
push
pop
(bad)
or
or
xor
retf
(bad)
call
dec
sub
leave
loopne
xor
(bad)
loop
arpl
cmp
outs
stos
inc
call
jl
cld
(bad)
jmp
add
xor
push
xchg
xchg
mov
ss
mov
(bad)
jg
xchg
js
xchg
add
push
faddp
repz
(bad)
(bad)
(bad)
dec
jne
mov
mov
push
test
add
pop
adc
sbb
push
mov
jns
mov
lds
stc
pop
xchg
imul
sbb
sahf
lods
repz
enter
push
mov
lods
(bad)
(bad)
rcr
sbb
leave
in
(bad)
mov
pop
leave
mov
and
(bad)
jg
mov
mov
inc
das
repnz
sub
adc
pusha
scas
and
jecxz
jmp
cwde
jno
push
push
(bad)
jl
inc
push
sub
fmul
add
push
paddq
(bad)
in
push
xor
sbb
cmp
cmc
clc
stos
sub
arpl
sub
leave
mov
(bad)
(bad)
(bad)
fs
cdq
jmp
adc
aaa
pop
scas
iret
push
es
xchg
(bad)
jmp
call
imul
add
call
push
sbb
arpl
push
dec
or
das
xchg
sbb
jmp
mov
jbe
(bad)
push
cld
popf
sub
sub
xchg
adc
(bad)
call
push
push
test
aas
or
sbb
or
adc
xchg
sbb
mov
loopne
mov
xchg
adc
test
sbb
ror
or
(bad)
fild
pushf
scas
mov
dec
mov
test
and
outs
mov
loopne
les
push
es
pusha
cmp
(bad)
push
or
push
rcl
test
push
push
shl
pop
pop
add
sub
scas
gs
jp
mov
in
add
cmovle
lods
aam
mov
je
and
pop
sub
loope
mov
cld
push
cwde
aas
ds
adc
xor
(bad)
call
imul
mov
aad
lds
je
xor
test
(bad)
(bad)
call
test
or
call
add
enter
dec
dec
adc
cli
dec
movs
push
pop
cmps
mov
xchg
(bad)
(bad)
(bad)
dec
pop
pop
cmp
lds
push
inc
cs
or
inc
push
sbb
fwait
or
dec
mov
(bad)
(bad)
(bad)
jmp
aam
test
mov
add
repz
push
cmp
arpl
mov
lods
push
(bad)
dec
and
das
xchg
into
sar
push
xchg
adc
cmp
jne
adc
mov
ds
out
repnz
dec
push
sbb
push
loope
ins
loopne
(bad)
jmp
aad
mov
ss
dec
retf
dec
gs
js
or
out
loope
mov
(bad)
(bad)
call
out
jge
std
sar
popa
icebp
sahf
jnp
jg
imul
cmp
sahf
comiss
(bad)
(bad)
jge
call
in
in
pop
push
gs
push
and
rcr
hlt
(bad)
jmp
sub
or
stc
(bad)
mov
dec
mov
pop
call
pop
cmp
in
mov
jmp
mov
cmps
xchg
outs
hlt
int3
pop
mov
(bad)
jmp
jbe
mov
lds
mov
std
repz
add
sbb
dec
push
ins
pop
push
cdq
dec
repnz
mov
mov
xchg
cmp
call
fimul
jg
jg
dec
push
retf
xchg
retf
dec
dec
or
scas
clc
mov
(bad)
(bad)
(bad)
jmp
shl
or
push
add
mov
xor
fs
mov
call
inc
xor
sub
mov
adc
cwde
test
dec
inc
(bad)
cdq
sub
pop
add
(bad)
(bad)
(bad)
push
leave
cmps
xchg
cmps
in
jmp
iret
and
jmp
and
mov
and
inc
add
cs
das
clc
(bad)
fimul
sbb
or
adc
call
push
adc
ret
test
mov
cwde
xor
and
mov
push
mov
push
lods
aaa
gs
sub
and
pop
and
nop
xlat
nop
xor
cwde
je
add
fist
sbb
or
retf
sub
(bad)
(bad)
call
inc
les
cmp
push
loop
add
and
dec
aam
xchg
(bad)
mov
(bad)
adc
loop
mov
xchg
and
mov
add
aad
ret
arpl
scas
fistp
lods
enter
nop
(bad)
(bad)
(bad)
jg
jo
pusha
xchg
ins
(bad)
push
mov
jge
jle
in
pop
sbb
(bad)
out
int
ja
gs
neg
int3
dec
(bad)
(bad)
(bad)
push
retf
xchg
and
xchg
adc
mov
mov
xchg
mov
dec
ret
add
(bad)
(bad)
(bad)
inc
mov
inc
lds
loopne
loopne
add
call
add
xchg
cmp
loopne
jmp
or
test
mov
and
pusha
sahf
(bad)
(bad)
jmp
cmp
and
jl
adc
dec
inc
aam
mov
cwde
cmp
cmps
or
test
loopne
loope
mov
mov
in
(bad)
sbb
cmc
xlat
fldenv
(bad)
(bad)
(bad)
jmp
js
out
cmp
int3
jmp
out
cmp
out
lods
xor
jp
scas
popf
aas
jno
in
(bad)
(bad)
(bad)
call
data16
sub
push
inc
or
push
cmp
lods
dec
mov
push
fld
hlt
mov
je
frstor
mov
xchg
clc
mov
sti
pusha
out
mov
cmp
(bad)
pop
add
jbe
call
aam
dec
popf
cmp
fdivr
(bad)
(bad)
dec
cmp
pop
inc
daa
es
jb
push
test
ins
sti
(bad)
aas
fcomip
in
pop
jle
jle
in
imul
jg
mov
cmp
inc
mov
std
xlat
popf
cmp
(bad)
jmp
(bad)
pop
out
aam
lods
inc
clc
pop
in
int
sbb
jbe
sti
(bad)
fbld
pop
sub
cmp
push
rcl
mov
fwait
push
adc
jge
scas
in
jbe
adc
daa
movs
test
mov
(bad)
push
sahf
push
outs
dec
jg
xor
fs
and
jp
les
addr16
adc
cdq
jmp
(bad)
dec
mov
jno
jmp
movs
or
mov
stos
mov
into
sub
xor
das
cli
repz
fdiv
(bad)
fmul
movs
pop
(bad)
push
out
mov
(bad)
and
jo
mov
repnz
or
out
add
out
fdiv
inc
and
sahf
cmp
lds
and
dec
adc
push
add
(bad)
(bad)
push
pop
lahf
push
push
iret
lods
mov
adc
xor
(bad)
xor
popa
in
hlt
cmc
push
(bad)
(bad)
(bad)
push
in
in
jae
sbb
stos
sub
ret
add
push
ins
add
xor
inc
pop
ss
adc
push
js
(bad)
(bad)
(bad)
inc
bound
shl
adc
nop
or
popf
fbstp
mov
outs
dec
pop
(bad)
(bad)
(bad)
jmp
pop
push
mov
out
test
mov
ret
sub
adc
sub
xchg
or
push
pop
mov
push
mov
xchg
out
inc
je
fs
xchg
test
mov
(bad)
in
push
mov
pop
and
lea
dec
popa
scas
je
jg
ss
shl
mov
sahf
popf
repnz
mov
add
pop
(bad)
aas
mov
scas
out
cli
(bad)
(bad)
jg
mov
push
data16
and
mov
inc
(bad)
pop
lock
(bad)
jg
nop
popf
push
pop
inc
mov
mov
mov
fxch
(bad)
pop
jle
(bad)
jg
loope
(bad)
in
in
jb
push
jns
sbb
dec
inc
sub
rol
stos
xchg
and
(bad)
call
jnp
push
leave
test
adc
ins
sub
(bad)
inc
dec
adc
repz
push
push
out
xor
sbb
cli
(bad)
push
jg
outs
xor
(bad)
xor
scas
pop
(bad)
sub
(bad)
(bad)
jmp
sub
push
int
xchg
sti
cmps
xor
xor
int
fstp
jo
in
sbb
cld
xchg
(bad)
fcomip
push
jo
pop
ficomp
add
inc
enter
nop
test
retf
in
(bad)
(bad)
(bad)
call
jmp
and
iret
mov
mov
stos
cld
imul
sbb
clc
adc
xchg
(bad)
out
cli
call
dec
int
mov
cmps
hlt
jb
aaa
loopne
dec
jb
add
or
pop
or
(bad)
jmp
push
les
xor
xchg
call
mov
add
push
jb
lea
adc
mov
xchg
(bad)
mov
mov
mov
dec
out
(bad)
(bad)
(bad)
push
xchg
imul
mov
lea
xchg
mov
or
arpl
sub
loop
and
mov
sub
(bad)
jmp
adc
xchg
add
and
in
test
push
dec
loopne
dec
add
mov
add
ja
leave
in
dec
xor
or
mov
xor
cmp
and
push
mov
out
xchg
(bad)
(bad)
(bad)
cmp
pop
loope
inc
addr16
mov
push
retf
mov
jae
ins
jnp
(bad)
(bad)
(bad)
call
xor
cmp
jns
push
stos
sti
int
sbb
loopne
sbb
outs
jno
mov
sub
out
fcmovnbe
fcmovbe
sbb
push
mov
add
call
inc
dec
bound
mov
aam
dec
dec
hlt
or
jne
jecxz
shr
ins
add
cmps
imul
mov
outs
inc
int3
(bad)
cmp
scas
add
lahf
iret
xor
or
xchg
cmp
add
or
pop
cmc
inc
inc
je
mov
dec
adc
imul
jae
xchg
jns
cmc
sti
scas
fistp
lods
xlat
mov
dec
mov
cmp
mov
(bad)
(bad)
(bad)
jg
(bad)
pop
cld
movzx
pop
xor
push
adc
jno
push
xor
out
xor
inc
dec
ret
loop
cmp
fst
adc
mov
sub
or
push
and
mov
fmul
mov
mov
sbb
imul
ret
sar
(bad)
lods
aaa
xlat
sti
mov
pop
mov
jns
sub
and
ja
(bad)
(bad)
(bad)
jl
cld
call
fcom
add
ret
jmp
jecxz
popa
fbstp
cmp
mov
(bad)
(bad)
(bad)
clc
mov
jno
in
fmul
dec
push
inc
add
pop
cmc
mov
(bad)
mov
ins
mov
in
cmp
dec
sub
or
outs
out
mov
jg
jle
or
add
gs
push
xor
cwde
jle
icebp
xor
rcl
js
dec
push
push
stos
sub
(bad)
(bad)
inc
mov
xchg
add
pop
(bad)
xor
retf
cmc
xchg
loop
mov
in
(bad)
(bad)
(bad)
inc
fstp
fisub
ror
fdiv
(bad)
pop
adc
mov
and
out
(bad)
mov
(bad)
jmp
cs
jge
push
scas
fnstcw
stc
pop
retf
xor
ins
in
cmps
(bad)
(bad)
(bad)
dec
into
mov
rcl
mov
pop
prefetcht2
imul
sbb
sbb
das
clc
(bad)
cmp
enter
xlat
push
adc
or
push
mov
stos
(bad)
(bad)
(bad)
call
cmp
cs
or
lods
push
mov
add
call
xchg
(bad)
fcomip
push
dec
addr16
mov
push
mov
dec
xor
(bad)
(bad)
call
inc
dec
mov
cmps
ficom
jmp
dec
maxps
or
mov
loopne
xchg
inc
adc
mov
jg
test
or
(bad)
jns
fst
orps
aas
pushf
mov
pop
popf
sbb
xchg
scas
sar
mov
fcom
jbe
(bad)
fcomip
inc
pop
xchg
js
sub
fld
retf
mov
jb
cli
(bad)
call
sahf
push
or
adc
mov
sub
jecxz
inc
add
pop
(bad)
sar
push
cld
call
mov
cld
xor
popf
xchg
outs
mov
clc
(bad)
aas
je
in
loopne
cmp
mov
sbb
xchg
mov
clc
cmp
(bad)
(bad)
jmp
sbb
test
mov
jae
sahf
sbb
or
pop
mov
iret
mov
(bad)
(bad)
jmp
pop
aas
gs
js
test
adc
icebp
or
push
ja
jbe
mov
(bad)
dec
test
fdiv
xchg
or
xor
iret
xchg
cmp
jecxz
add
imul
(bad)
call
jne
push
sub
fidivr
xchg
and
jns
jmp
pop
xchg
and
(bad)
jg
call
jp
dec
jp
dec
inc
xor
sbb
rcl
or
test
fdivr
adc
fist
xchg
pusha
popf
dec
cmp
dec
xchg
(bad)
(bad)
(bad)
dec
xchg
into
test
repz
rol
les
add
sbb
or
into
arpl
pop
call
nop
jp
loopne
fcomp
push
(bad)
(bad)
call
dec
bound
mov
nop
sahf
mov
cmp
gs
adc
ror
sar
(bad)
(bad)
(bad)
cmp
jmp
push
sbb
or
mov
sub
movs
fs
punpckhwd
(bad)
(bad)
jmp
sub
ins
add
cmp
push
jmp
xchg
mov
(bad)
dec
and
movs
pushf
add
jo
movs
test
dec
xchg
icebp
and
mov
pop
std
(bad)
(bad)
inc
xchg
adc
shr
xlat
aas
hlt
jnp
hlt
test
ret
dec
xchg
mov
and
scas
push
and
call
(bad)
(bad)
cmp
xchg
jp
fdivrp
cld
popf
push
in
mov
cmp
std
push
fisubr
and
mov
mov
(bad)
(bad)
(bad)
(bad)
mov
mov
sub
outs
sbb
and
int3
pop
dec
mov
jne
add
mov
cmp
mov
ins
daa
sub
jae
add
scas
(bad)
(bad)
(bad)
jmp
ins
cdq
and
cmc
inc
shl
gs
push
dec
(bad)
lds
xor
dec
aaa
sbb
jno
(bad)
(bad)
inc
mov
jmp
cmp
adc
ret
push
cmps
stos
aaa
push
mov
jmp
into
call
jmp
std
(bad)
sbb
mov
out
push
hlt
out
rcl
fs
xor
jae
sbb
(bad)
push
ret
xchg
push
popf
aaa
push
xchg
sub
loop
out
adc
xchg
jo
jno
jmp
cli
call
add
xchg
fcomp
cmc
jmp
push
sar
cmp
push
sub
ss
mov
xchg
mov
cmc
push
lods
aam
(bad)
cmps
jmp
jmp
lods
push
xor
gs
or
shr
hlt
int3
cld
push
std
jmp
rcr
in
and
mov
ror
cld
inc
int
int3
idiv
pop
hlt
(bad)
call
les
mov
out
push
jbe
dec
popa
stos
cmp
int
(bad)
push
add
inc
ds
push
sub
movs
adc
aad
(bad)
xchg
xor
retf
imul
mov
nop
ds
xchg
mov
cmp
(bad)
(bad)
dec
adc
ja
jae
xor
dec
adc
cmps
pop
lds
inc
repz
(bad)
(bad)
dec
mov
popa
jmp
bnd
stos
pop
fidiv
clc
ins
mov
cld
jnp
mov
(bad)
jmp
xlat
les
(bad)
mov
dec
adc
bound
push
adc
pop
jnp
sbb
repnz
jae
pushw
ins
push
mov
scas
sub
adc
les
jg
push
out
mov
jecxz
ss
(bad)
(bad)
jmp
pop
ins
ret
adc
dec
cmp
jae
mov
repz
or
sbb
(bad)
(bad)
call
xchg
stos
lods
pop
ins
lods
pusha
push
scas
mov
mov
xor
arpl
xor
fcomip
idiv
dec
dec
iret
sti
sub
xchg
retf
out
and
jg
and
mov
and
mov
mov
ja
sahf
sbb
xlat
in
movs
imul
xor
xor
pop
enter
fs
add
cmp
or
mov
push
dec
cmps
dec
movs
retf
inc
pop
(bad)
(bad)
(bad)
call
push
pushf
bound
mov
(bad)
(bad)
pop
push
jae
inc
pop
push
inc
adc
jbe
(bad)
(bad)
(bad)
dec
inc
bnd
scas
repz
inc
mov
xchg
jge
mov
(bad)
mov
icebp
pop
fidiv
daa
lods
inc
pop
sbb
fistp
(bad)
repnz
sbb
(bad)
jg
mov
int3
int3
jmp
jmp
rcl
frstor
add
shl
adc
(bad)
(bad)
call
call
sbb
(bad)
mov
adc
neg
gs
(bad)
jmp
jo
(bad)
sub
and
js
inc
push
in
push
dec
pop
xchg
mov
(bad)
inc
rcr
and
lea
xchg
push
ins
cmps
mov
outs
les
or
xchg
imul
sbb
sub
add
(bad)
dec
sbb
movs
ss
xor
sti
inc
add
mov
xchg
dec
lock
mov
dec
xchg
inc
cmps
repnz
sub
inc
call
push
enter
(bad)
mov
pop
sbb
fwait
xchg
test
and
arpl
sbb
sahf
jg
(bad)
(bad)
fcmove
test
or
pusha
icebp
pop
jmp
cmps
cmps
scas
xchg
mov
push
call
sbb
xchg
xchg
cmps
adc
mov
test
dec
call
dec
(bad)
call
or
or
sbb
add
adc
out
out
inc
push
(bad)
sub
sub
inc
into
inc
jb
or
lds
repnz
pop
sub
and
mov
mov
call
pop
jg
jmp
cdq
pop
cs
pushf
sub
repz
(bad)
(bad)
(bad)
stc
mov
push
pop
mov
addr16
iret
mov
scas
mov
addr16
jns
stos
mov
push
(bad)
(bad)
(bad)
cmp
mov
(bad)
fnstsw
int3
mov
and
inc
jl
cmp
call
mov
sub
jmp
add
pop
(bad)
(bad)
(bad)
call
inc
mov
pop
xor
adc
jle
call
mov
xor
int3
or
pop
hlt
inc
mov
outs
push
mov
and
es
(bad)
inc
or
xor
das
push
mov
sbb
movs
ficomp
(bad)
(bad)
(bad)
push
retf
enter
inc
es
cld
lock
cs
call
(bad)
(bad)
mov
mov
pop
sub
cdq
push
inc
aam
in
fldcw
adc
cmp
jno
sar
(bad)
inc
jl
movs
push
mov
xchg
fidiv
sub
pop
cmp
(bad)
(bad)
call
aas
je
pop
hlt
jecxz
push
jns
xor
inc
sar
mov
retf
(bad)
es
cmp
(bad)
call
call
push
fdiv
xor
(bad)
les
adc
push
mov
sub
cli
push
push
and
cmc
(bad)
call
xlat
in
mov
rol
call
(bad)
jg
and
mov
xchg
mov
xor
ret
fwait
das
pop
ficomp
cmps
pop
jle
(bad)
(bad)
call
shl
jae
push
out
les
mov
mov
loope
in
repz
jp
(bad)
call
xor
lods
repz
rcl
and
mov
pop
xor
loop
cld
(bad)
(bad)
jmp
sbb
fnstcw
test
pushf
adc
pop
inc
repnz
mov
mov
inc
ret
inc
fstp
retf
cmp
mul
imul
pop
arpl
dec
or
sti
mov
sub
sub
cwde
mov
xlat
add
jnp
xor
and
inc
inc
out
mov
adc
xor
ins
pushf
mov
pop
out
mov
ror
push
dec
(bad)
mov
cmps
jmp
(bad)
ror
push
outs
mov
pop
lock
cli
pop
xchg
mov
jg
in
sbb
xlat
push
(bad)
mov
sbb
cdq
ins
and
jmp
out
xchg
loopne
(bad)
xlat
inc
xchg
adc
adc
add
mov
fisttp
dec
xchg
inc
inc
popf
or
fadd
rcl
xor
xchg
movs
(bad)
(bad)
(bad)
call
jmp
add
imul
xor
arpl
xchg
xchg
(bad)
(bad)
(bad)
push
lods
in
sub
idiv
add
add
mov
jmp
inc
ss
(bad)
(bad)
(bad)
in
fcmovnu
sti
pop
stc
out
jns
scas
inc
dec
pop
arpl
jbe
or
xor
(bad)
xchg
cld
loope
lods
ret
scas
clc
xor
sub
pop
cmc
call
xor
pop
dec
xchg
ret
ja
jecxz
push
fcomip
mov
sbb
(bad)
(bad)
(bad)
jge
int
pop
pushf
mov
out
outs
(bad)
data16
ss
je
fyl2x
cdq
iret
mov
(bad)
(bad)
dec
clc
pop
jnp
mov
scas
daa
jle
xchg
fstp
sbb
sub
(bad)
(bad)
addr16
push
mov
mov
aas
ins
sub
push
cmp
xlat
(bad)
(bad)
inc
not
adc
rcl
mov
pop
mov
inc
add
sar
int3
clc
mov
ins
nop
sub
hlt
dec
aad
and
pusha
(bad)
(bad)
call
ror
dec
test
retf
jbe
movs
mov
in
xchg
lods
popa
movs
rol
cmp
sbb
inc
xchg
jp
add
add
xchg
test
call
add
or
jge
inc
xchg
and
jmp
jge
sbb
imul
dec
jg
out
call
jmp
dec
rcl
and
repz
popa
add
fcomi
xchg
jb
lds
movs
adc
pop
cmp
(bad)
gs
pushf
xor
cmp
or
sbb
(bad)
(bad)
jmp
xchg
ret
and
adc
xor
adc
and
mov
(bad)
(bad)
jmp
xchg
mov
dec
popf
jmp
(bad)
loopne
jl
std
loopne
(bad)
(bad)
jg
movs
dec
mov
shl
dec
cmp
icebp
arpl
push
pop
add
call
(bad)
(bad)
call
leave
in
inc
ret
repz
jne
pop
mov
call
cmc
fwait
outs
fidivr
fcom
jmp
aaa
dec
mov
sub
rol
or
mov
mov
cli
xor
jmp
inc
inc
push
add
mov
nop
test
sub
dec
and
push
dec
movs
push
dec
add
bound
(bad)
call
sbb
cmp
enter
arpl
nop
adc
mov
mov
(bad)
(bad)
call
outs
pop
outs
pop
pushf
scas
call
retf
leave
jmp
mov
cmp
push
mov
xchg
das
xchg
push
retf
fwait
inc
xchg
jnp
ins
mov
mov
dec
xor
iret
in
call
add
in
mov
mov
mov
(bad)
lea
jae
pop
adc
cdq
xor
dec
sahf
inc
inc
(bad)
(bad)
jg
cmp
fs
fs
xlat
test
pop
push
and
push
(bad)
(bad)
(bad)
jmp
imul
and
mov
lds
ins
fnsave
mov
cmp
(bad)
jg
mov
test
cmp
jno
xor
loopne
imul
call
sahf
add
ret
(bad)
(bad)
(bad)
jmp
or
push
xchg
aas
data16
nop
cmps
inc
enter
xor
ds
shl
ins
inc
cmps
push
and
add
call
movs
jae
jecxz
lds
daa
pop
mov
mov
lods
add
(bad)
(bad)
call
aas
cmp
push
jb
xlat
mov
(bad)
mov
dec
sub
(bad)
(bad)
call
loop
enter
repz
lahf
jnp
push
shl
shl
push
aad
jmp
mov
ds
mov
sar
outs
pop
jge
fisubr
lea
jmp
adc
popa
and
loope
cmp
hlt
push
push
or
das
sar
out
loope
jnp
sub
xor
and
mov
sbb
rol
int3
data16
sub
fcmovnbe
ja
lahf
stos
cdq
mov
push
mov
aad
shl
add
aad
(bad)
mov
push
xor
rcr
mov
and
mov
not
int
sub
(bad)
(bad)
jg
fs
jmp
(bad)
enter
xchg
call
cmp
dec
push
(bad)
(bad)
dec
adc
cdq
sub
mov
mov
and
mov
pop
mov
jae
push
pusha
or
jb
mov
sahf
or
test
addr16
jo
(bad)
mov
popf
fidiv
jmp
imul
dec
mov
scas
dec
mov
(bad)
(bad)
call
ret
and
hlt
and
jmp
pushf
jmp
sbb
xchg
cmps
mov
cmp
add
stos
stos
and
iret
mov
xchg
mov
cli
and
push
out
mov
(bad)
push
jmp
dec
(bad)
jnp
ja
fcmovnu
mov
call
mov
pop
(bad)
clc
jmp
ins
and
jecxz
fs
jb
ds
dec
or
rol
(bad)
lods
jge
iret
imul
mov
and
or
(bad)
stc
pop
(bad)
popa
icebp
or
clc
test
and
jmp
pop
sub
(bad)
(bad)
jmp
into
and
pushf
retf
xchg
jae
push
ins
cmps
ins
test
fisubr
push
push
mov
pusha
jmp
xlat
dec
xor
adc
(bad)
(bad)
(bad)
inc
movs
push
pop
daa
icebp
cmp
mov
dec
xchg
push
icebp
xchg
and
(bad)
inc
adc
jg
gs
shl
adc
push
stos
call
and
outs
dec
clc
add
loopne
(bad)
(bad)
(bad)
push
mov
daa
ss
jp
jmp
sub
mov
ficomp
rsqrtps
movs
push
aad
(bad)
(bad)
jmp
cmps
retf
pop
int
test
xor
and
adc
cmp
scas
fimul
nop
lahf
or
add
into
cmp
stos
je
les
cmp
push
and
push
cmps
loop
or
in
pop
mov
retf
add
push
mov
xchg
leave
dec
push
push
jecxz
iret
ud0
inc
sub
addr16
adc
ret
fs
(bad)
mov
pop
or
(bad)
jmp
fdiv
es
xor
out
out
fnsave
cld
push
fsubr
(bad)
(bad)
jg
sub
and
and
mov
shl
push
mov
iret
mov
xchg
popa
inc
push
cmp
adc
retf
enter
jmp
push
in
stos
rcl
shl
push
ins
add
xchg
es
adc
(bad)
push
popa
xor
cmp
cmp
stos
push
sub
shl
jmp
adc
scas
or
shl
adc
push
lods
or
vmread
(bad)
push
mov
std
ret
fdivp
fnstenv
adc
or
mov
rcr
mov
int3
inc
loop
mov
dec
add
leave
aaa
jnp
(bad)
(bad)
(bad)
jmp
jnp
push
fnstenv
mov
loop
call
fistp
push
jmp
mov
loop
xchg
fcomp
sub
hlt
bswap
int
int
rcl
imul
xchg
pop
shl
cmp
or
xchg
repz
leave
jne
mov
sbb
mov
push
in
repz
xor
inc
and
pop
lods
cmp
rcr
xchg
test
cwde
fwait
aaa
in
jg
(bad)
call
dec
daa
dec
loopne
pop
sbb
pop
lods
mov
or
push
fdiv
and
add
setns
not
ror
les
cld
clc
addr16
xchg
shl
cmp
outs
pop
or
mov
sbb
add
imul
xlat
scas
xchg
and
icebp
or
jns
add
dec
or
(bad)
(bad)
(bad)
jmp
inc
dec
pushf
jnp
shl
push
mul
adc
mov
cmps
aam
je
mov
cli
call
push
adc
pop
inc
je
mov
ins
mov
(bad)
(bad)
out
mov
dec
loope
cmps
jno
mov
mov
nop
dec
xor
push
sti
(bad)
(bad)
(bad)
mov
dec
lahf
adc
sub
sbb
inc
(bad)
cld
sbb
fiadd
rcl
out
push
std
dec
jp
mov
sbb
add
sbb
and
clc
jmp
rcl
pop
mov
xchg
push
pusha
movs
cmp
(bad)
sti
out
fcom
inc
jg
(bad)
(bad)
(bad)
call
icebp
inc
(bad)
lods
clc
icebp
or
fld
cli
int
pop
mov
mov
pop
sub
sti
sti
(bad)
(bad)
(bad)
dec
pop
call
(bad)
push
push
cmp
mov
pop
or
(bad)
jge
movs
xchg
mov
sar
(bad)
(bad)
call
gs
push
dec
push
stos
or
movs
xchg
or
dec
pop
ret
cmp
lds
inc
cmp
sbb
arpl
sbb
dec
scas
fldln2
clc
outs
adc
stos
mov
cli
(bad)
(bad)
mov
cld
aad
adc
retf
inc
push
retf
clc
call
aad
mov
gs
pusha
cmps
shl
repz
mov
clc
ins
std
xor
aam
jg
pop
mov
(bad)
es
mov
out
fidivr
inc
inc
sbb
sti
fsubrp
daa
std
inc
std
(bad)
xor
addr16
mov
div
outs
adc
test
sbb
ficomp
mov
(bad)
push
jmp
shr
(bad)
xor
jb
or
sub
jo
mov
mov
call
loopne
rcr
push
xor
sub
adc
xchg
push
adc
jmp
mov
arpl
repnz
inc
mov
(bad)
(bad)
jmp
rcl
or
sbb
jb
call
mov
and
mov
dec
das
rol
inc
add
dec
mov
out
(bad)
(bad)
jmp
dec
ja
add
sub
xor
test
push
push
loop
ja
jmp
scas
out
sub
js
cmps
test
scas
lea
mov
or
add
hlt
or
loop
movs
(bad)
(bad)
(bad)
dec
push
ja
cmp
out
push
mov
inc
adc
mov
pop
and
(bad)
call
dec
or
xlat
xor
xor
inc
pop
and
(bad)
out
cli
ja
adc
test
jp
inc
inc
ins
sbb
test
shl
jmp
push
ror
mov
mov
(bad)
(bad)
(bad)
call
mov
daa
dec
clc
and
sbb
iret
push
add
add
mov
hlt
xor
mov
(bad)
(bad)
(bad)
dec
jne
pop
out
loopne
and
or
shld
sbb
mov
or
icebp
sub
xchg
inc
aaa
(bad)
(bad)
(bad)
inc
xchg
or
mov
nop
mov
or
dec
mov
adc
mov
loop
mov
mov
dec
push
sub
(bad)
push
ror
repz
push
jo
pop
mov
lock
(bad)
inc
int
jns
push
mov
xchg
(bad)
fwait
adc
and
jbe
(bad)
(bad)
(bad)
(bad)
jecxz
jmp
mov
ss
pop
cmp
push
(bad)
std
xchg
(bad)
int
xor
mov
mov
xor
pop
ficom
scas
xor
xchg
cld
cmp
inc
push
pop
cmp
dec
rol
pop
loop
stos
push
(bad)
fcomip
(bad)
jmp
mov
test
popf
in
sbb
dec
sahf
xor
(bad)
fcomip
and
or
dec
xor
push
aad
mul
pushf
inc
adc
in
or
mov
(bad)
mov
clc
fwait
pusha
out
cmc
or
inc
push
nop
mov
and
(bad)
jmp
xchg
pop
test
pop
(bad)
lods
in
and
inc
pop
(bad)
(bad)
(bad)
inc
adc
fdiv
mov
add
push
movs
fiadd
push
push
daa
ds
lock
(bad)
(bad)
add
ret
retf
sub
rol
es
or
adc
fwait
(bad)
(bad)
(bad)
fucomip
rcl
inc
dec
xchg
mov
or
sar
in
stos
adc
cli
lods
rcr
cld
inc
iret
push
(bad)
mov
dec
cld
adc
pop
pop
outs
adc
sub
mov
dec
push
(bad)
(bad)
(bad)
push
sub
jp
(bad)
mov
pop
sbb
fsubr
fisub
ins
retf
pusha
mov
(bad)
(bad)
(bad)
jmp
add
xor
enter
mov
popa
int
fstp
stos
mov
mov
pop
arpl
mov
adc
(bad)
(bad)
push
cmp
jnp
fimul
pop
or
test
retfw
mov
enter
mov
push
jp
pop
scas
sub
hlt
sar
dec
popf
sbb
inc
dec
sub
inc
jge
js
mov
(bad)
call
pop
cmps
retf
test
push
ins
push
je
mov
mov
(bad)
fistp
pop
sahf
icebp
loop
xchg
add
adc
inc
mov
arpl
gs
(bad)
jmp
sbb
sbb
dec
ins
dec
mov
dec
or
sbb
dec
clc
call
js
inc
inc
ret
scas
retf
(bad)
ja
adc
ret
push
popf
movs
cmp
stos
(bad)
(bad)
(bad)
mov
mov
push
retf
or
inc
xor
xchg
sub
xchg
fsub
call
aad
pop
mov
lods
retf
dec
sub
xchg
or
cmp
sbb
add
retf
ret
adc
(bad)
inc
sbb
(bad)
cmp
test
sub
icebp
(bad)
stc
push
mov
mov
(bad)
jmp
and
xor
push
xchg
ins
pop
push
je
fdivp
out
cs
cld
fstp
(bad)
into
dec
icebp
call
clc
ret
call
cmp
cmp
fldenv
lock
iret
imul
mov
xor
(bad)
(bad)
(bad)
mov
outs
jecxz
xchg
clc
rcl
xchg
sahf
push
and
(bad)
push
jg
push
not
pop
(bad)
jg
mov
out
mov
popf
rcl
repnz
icebp
push
shl
adc
in
dec
js
movs
(bad)
(bad)
push
adc
idiv
dec
repz
aam
mov
inc
add
push
outs
xor
push
push
sub
cmp
add
dec
adc
xchg
push
and
enter
(bad)
(bad)
(bad)
jmp
dec
retf
or
and
push
ret
cmp
sub
inc
mov
sub
mov
test
call
and
push
adc
xchg
pop
icebp
sbb
inc
(bad)
adc
jecxz
push
xchg
(bad)
aad
push
scas
call
or
lods
adc
or
xor
xchg
or
(bad)
mov
push
jns
repnz
cmovg
or
mov
jge
sbb
mov
xchg
and
cli
aaa
cld
dec
push
jnp
mov
pop
inc
lods
ins
sbb
mov
sti
pop
xchg
push
(bad)
repz
(bad)
jmp
(bad)
out
fsub
(bad)
not
xor
or
out
inc
xlat
jno
adc
mov
(bad)
(bad)
cld
mov
dec
outs
mov
xor
(bad)
xchg
sbb
xchg
sub
adc
(bad)
(bad)
(bad)
inc
jl
es
fs
retf
or
adc
call
xchg
add
jmp
das
call
add
push
cs
xchg
jb
call
push
mov
mov
cwde
sbb
sbb
cwde
fstp
jno
push
add
ins
test
sub
pop
sbb
(bad)
(bad)
fucomip
bound
dec
cmps
pop
repz
outs
push
or
outs
cmp
xor
sbb
(bad)
(bad)
inc
push
jmp
test
mov
xchg
iret
hlt
cmp
test
sub
add
fadd
mov
(bad)
xor
(bad)
imul
pop
pop
lods
pusha
mov
in
mov
and
movs
pop
scas
dec
ins
or
xchg
push
jb
inc
inc
pop
mov
cwde
(bad)
(bad)
(bad)
(bad)
jmp
cmps
sbb
fs
scas
inc
or
push
test
pop
inc
xlat
test
gs
jo
cmps
sub
(bad)
(bad)
(bad)
cli
inc
xor
xor
push
mov
loope
jno
out
mov
and
push
and
outs
(bad)
(bad)
push
jl
enter
int
stc
or
jge
adc
shl
cdq
ja
out
dec
(bad)
push
sbb
(bad)
loop
imul
gs
test
daa
lods
lods
add
scas
add
(bad)
in
shr
inc
pushf
push
fmul
imul
(bad)
(bad)
(bad)
mov
call
jno
and
add
xchg
xchg
icebp
inc
xor
dec
ret
lods
xor
bound
adc
mov
mov
mov
iret
fbstp
repz
dec
out
xor
cdq
out
xchg
or
mov
adc
pop
and
aaa
loop
mov
(bad)
inc
clc
aas
iret
mov
adc
add
jp
outs
out
ret
xlat
xchg
inc
js
and
inc
(bad)
(bad)
(bad)
(bad)
fsub
data16
add
repz
push
mov
call
aad
fstp
push
ffree
xor
(bad)
(bad)
(bad)
call
pusha
add
lock
push
ins
sub
daa
out
pop
push
or
pop
into
push
(bad)
(bad)
jmp
jge
popf
cmp
dec
or
sbb
daa
out
dec
outs
(bad)
xor
adc
(bad)
dec
dec
sub
xor
leave
xlat
push
cli
movs
mov
adc
scas
stos
icebp
(bad)
jmp
jb
jecxz
add
push
enter
push
cdq
dec
push
(bad)
jl
sub
stos
ret
or
sub
pop
and
(bad)
jmp
ja
(bad)
cmc
push
sbb
aam
dec
jp
bnd
leave
xchg
mov
scas
pop
pop
rol
das
lods
sub
lods
cld
in
into
jae
inc
cmp
imul
aaa
aaa
stos
xor
(bad)
(bad)
dec
and
call
call
daa
or
sti
(bad)
(bad)
(bad)
jmp
sahf
xlat
mov
cli
(bad)
(bad)
js
div
idiv
fidiv
aaa
pop
or
inc
(bad)
outs
les
fcomp
(bad)
(bad)
(bad)
inc
push
(bad)
xchg
mov
jle
(bad)
das
push
outs
sub
pop
ds
call
jmp
push
inc
fmul
out
lds
cmp
cmc
jbe
and
xor
adc
(bad)
(bad)
(bad)
dec
enter
jge
jle
push
lods
add
jns
mov
jp
aam
xor
sar
mov
gs
(bad)
(bad)
(bad)
cmp
test
pop
jbe
sbb
aas
out
sti
movs
and
adc
ins
xchg
or
(bad)
inc
mov
cmps
ins
dec
xchg
rcl
test
mov
cmc
(bad)
mov
adc
aad
mov
jp
cmp
std
test
dec
stos
hlt
pop
fwait
mov
ss
cmp
int
jmp
(bad)
fistp
cwde
enter
js
lods
inc
rol
repz
inc
sub
icebp
(bad)
(bad)
dec
stc
dec
sub
xor
add
jp
add
test
pop
int3
adc
xor
(bad)
(bad)
(bad)
fild
dec
aam
mov
xor
inc
repz
lods
add
movs
lods
push
adc
loopne
mov
(bad)
(bad)
dec
sub
lods
stos
retf
xchg
(bad)
lods
leave
les
adc
rcl
popa
mov
jmp
ja
(bad)
(bad)
jmp
fmul
add
int3
jns
mov
mov
push
sbb
dec
jb
jo
fwait
mov
mov
(bad)
pop
fild
cld
pop
fucom
push
jg
outs
(bad)
mov
xor
loopne
pop
das
(bad)
jmp
rep
inc
bound
pop
jmp
adc
or
bound
mov
sub
mov
cmp
pop
dec
sub
in
sbb
(bad)
inc
jle
mov
(bad)
mov
(bad)
mov
call
sbb
mov
loop
(bad)
(bad)
(bad)
mov
push
(bad)
pop
xor
ss
dec
sbb
cmps
mov
mov
sar
call
jmp
or
mov
pop
xor
adc
pushf
fdiv
outs
sub
ins
cmp
bnd
and
aas
jno
or
mov
lds
or
mov
(bad)
(bad)
call
jns
(bad)
cli
jmp
cmp
push
cmp
les
(bad)
(bad)
push
inc
or
int3
mov
pop
cmp
jge
test
mov
aaa
mov
jl
aas
repnz
inc
test
cld
test
sub
les
ins
fs
mov
in
inc
into
pop
scas
cmp
(bad)
dec
jle
pop
stos
inc
xor
(bad)
or
shl
pop
movs
pop
call
cmp
(bad)
(bad)
jp
mov
mov
sbb
(bad)
rol
xor
icebp
mov
call
cmp
mov
inc
mov
lods
xchg
xor
rol
call
popf
stos
push
sub
xchg
(bad)
cmp
mov
fdivrp
mov
mov
sub
(bad)
(bad)
(bad)
jmp
outs
mov
test
std
mov
not
xchg
mov
or
lock
dec
mov
xchg
(bad)
(bad)
(bad)
push
pop
je
stc
push
retf
aaa
lahf
sti
out
(bad)
setle
ret
adc
and
(bad)
(bad)
(bad)
inc
jbe
clc
and
cmps
jmp
dec
ret
lods
aam
mov
sbb
(bad)
(bad)
jmp
xor
lods
daa
es
repnz
shr
sub
cmp
inc
jl
pop
jnp
mov
jb
cmp
xor
cmp
pop
inc
loop
fbstp
test
repnz
mov
push
rcr
fsub
retf
adc
push
cmp
add
icebp
inc
xchg
inc
inc
cmp
push
xchg
xor
(bad)
mov
push
pop
jmp
jmp
jae
sahf
mov
and
(bad)
push
(bad)
leave
hlt
or
pusha
xor
div
hlt
cmp
ja
sub
sub
test
inc
int3
rol
push
(bad)
dec
jle
xor
and
xor
clc
jmp
xchg
jmp
sbb
cmp
cmps
mov
hlt
out
dec
mov
(bad)
dec
cs
mov
mov
repnz
iret
mov
stos
popa
in
stos
push
sbb
pop
mov
ds
mov
and
mov
lods
lods
sub
push
(bad)
cmc
(bad)
(bad)
call
(bad)
adc
add
scas
fcom
push
jecxz
call
shl
mov
add
out
add
dec
jae
or
int3
call
imul
shl
adc
jmp
pushf
pop
sti
iret
(bad)
fstp
fdivr
xchg
(bad)
mov
fdiv
hlt
xchg
mov
jne
(bad)
(bad)
inc
sbb
lods
(bad)
in
fistp
sti
aas
inc
fcmovnu
pop
cmc
mov
cmp
jns
(bad)
(bad)
jg
loop
fadd
inc
pop
inc
int3
into
rcr
outs
mov
(bad)
(bad)
jmp
jae
push
jnp
jno
(bad)
mov
addr16
movs
mov
test
push
aaa
loopne
xor
push
rcl
or
cmp
mov
and
and
push
push
fbstp
(bad)
(bad)
(bad)
push
mov
fldcw
dec
cwde
and
cmps
adc
and
xchg
push
push
cwde
imul
pushf
push
dec
(bad)
(bad)
(bad)
jmp
ret
jae
mov
loop
in
pushf
push
mov
mov
in
fs
test
popa
imul
call
aam
push
hlt
sub
sub
retf
and
rcr
(bad)
(bad)
call
lods
sbb
jo
and
and
pop
push
mov
aam
movs
and
les
inc
cdq
popf
push
int3
add
ret
pop
adc
sub
jne
pop
repnz
imul
pop
fcom
adc
cdq
push
cmp
pop
stos
xor
jmp
and
push
lahf
mov
jmp
dec
fcos
(bad)
(bad)
call
sbb
retf
cld
ins
imul
cmp
jnp
mov
ret
test
cli
jmp
(bad)
cs
and
jge
dec
sbb
add
ret
cmc
push
dec
or
aam
push
inc
outs
jge
or
data16
(bad)
(bad)
fcomip
ror
retf
or
repz
rep
mov
out
dec
test
and
icebp
(bad)
jmp
mov
fidiv
je
retf
jne
jno
or
sub
push
mov
out
clc
(bad)
jmp
push
cmp
jno
push
outs
aad
retf
call
dec
mov
adc
(bad)
jmp
cmps
dec
mov
push
inc
cmp
dec
(bad)
mov
jb
cdq
int3
adc
sahf
(bad)
dec
les
movs
and
jne
test
xor
ja
ss
sbb
fcomp
mov
ret
mov
push
jmp
mov
inc
mov
out
inc
or
popf
clc
retf
or
cwde
mov
pop
icebp
call
add
into
xchg
mov
xor
aas
adc
stos
or
sub
fdiv
mov
sar
(bad)
(bad)
dec
arpl
mov
and
sbb
sbb
push
and
push
push
and
outs
clc
(bad)
call
and
pop
add
and
fst
inc
dec
push
inc
mov
mov
dec
inc
clc
push
inc
mov
ret
fidiv
mov
mov
push
imul
jmp
jns
mov
xchg
stos
add
mov
scas
mov
inc
pop
jg
pop
mov
sub
xchg
push
(bad)
jg
jmp
loop
dec
xchg
in
pop
shr
(bad)
pop
pop
sti
dec
outs
jl
sub
out
cli
call
or
sub
push
dec
rcl
les
cmps
xchg
fs
cmps
pop
xchg
mov
dec
clc
and
dec
cld
nop
mov
(bad)
mov
(bad)
(bad)
(bad)
push
idiv
push
or
jmp
xor
outs
(bad)
jne
pop
loope
sbb
clc
mov
and
jno
mov
dec
pop
ret
sbb
gs
(bad)
mov
and
xlat
or
call
outs
(bad)
fdivr
push
retf
pop
out
jg
out
sub
sbb
(bad)
jmp
mov
push
xchg
mov
je
popa
std
xchg
std
or
(bad)
(bad)
dec
daa
xor
sub
cmp
ja
popa
cmc
sbb
xchg
clc
inc
dec
xchg
mov
loop
sub
sbb
int3
add
scas
push
fisub
ret
(bad)
(bad)
call
adc
int
jg
ja
call
out
pop
xchg
push
into
jmp
xchg
mov
stos
loop
rol
test
inc
hlt
leave
cdq
out
(bad)
(bad)
(bad)
jmp
xchg
fadd
inc
xchg
mov
mov
sbb
mov
retf
mov
ror
push
inc
fucomip
clc
rcl
sbb
jg
icebp
push
dec
inc
jmp
cmp
fild
xor
fs
jmp
call
sub
scas
call
outs
xchg
pop
clc
(bad)
mov
sbb
mov
inc
or
outs
clc
push
push
test
mov
ficom
sub
mov
std
(bad)
dec
stos
or
mov
jo
hlt
push
mov
dec
jnp
add
jmp
fnstcw
xchg
pushf
loope
(bad)
dec
xor
leave
imul
inc
std
fidivr
mov
outs
outs
fistp
xchg
(bad)
(bad)
(bad)
mov
cwde
call
shr
repz
popa
and
push
daa
xor
pop
hlt
scas
cli
ss
inc
out
loopne
mov
mov
jp
pop
retf
fdiv
(bad)
call
jnp
fst
jmp
jne
or
pop
lahf
push
fcomip
inc
in
ins
ins
cmc
scas
xchg
dec
mov
loop
mov
cs
(bad)
stc
cld
(bad)
(bad)
(bad)
jmp
cmc
pop
and
xchg
leave
sbb
xor
jb
jp
and
xchg
sub
outs
pop
test
outs
test
leave
inc
mov
getsec
inc
ror
es
push
sbb
dec
inc
gs
inc
mov
call
xchg
(bad)
(bad)
dec
stos
mov
enter
mov
inc
jb
pop
mov
mov
(bad)
jmp
sbb
(bad)
pusha
rcr
add
cli
dec
xchg
fsub
jnp
push
adc
call
stos
add
ins
push
in
sub
mov
in
inc
jl
fs
mov
xchg
mov
jg
dec
mov
mov
dec
mov
sbb
mov
pop
push
mov
(bad)
(bad)
jmp
dec
les
nop
scas
pushf
push
es
add
xchg
sub
or
xchg
test
dec
sub
xor
push
jnp
inc
movs
fild
dec
scas
push
xor
(bad)
inc
sub
test
xlat
xchg
inc
add
(bad)
outs
add
(bad)
xor
cdq
cmp
mov
(bad)
pop
lea
popa
jle
mov
or
not
das
jge
imul
adc
(bad)
(bad)
out
push
jmp
cwde
scas
push
stos
xchg
dec
cdq
push
jae
inc
jno
mov
cmp
(bad)
(bad)
cld
add
imul
(bad)
fnsave
xchg
push
scas
div
sbb
mov
lea
fist
and
pop
xor
call
pop
call
lea
fldenv
sub
cmps
xor
(bad)
(bad)
mov
call
gs
sar
test
retf
mov
push
or
and
or
(bad)
(bad)
(bad)
call
arpl
test
cs
mov
hlt
das
push
pop
cld
in
mov
dec
sub
push
jnp
(bad)
inc
cld
(bad)
lods
les
pop
sub
int
bound
dec
retf
enter
(bad)
(bad)
jmp
mov
fldcw
sahf
cdq
and
lods
call
(bad)
dec
jmp
test
dec
xor
in
xor
inc
icebp
test
push
mov
adc
pop
and
outs
popa
or
mov
out
sbb
or
pop
mov
add
test
(bad)
(bad)
push
jle
xor
nop
pop
xchg
mov
int
addr16
cli
cmp
add
adc
jmp
test
push
lea
rcl
inc
mov
or
(bad)
jg
inc
clc
jecxz
not
in
pop
inc
mov
sahf
push
adc
and
xchg
and
mov
repnz
sub
push
stos
ds
cmp
jmp
and
pop
inc
movs
inc
addr16
(bad)
dec
xchg
iret
int3
cs
cwde
data16
stos
dec
js
cmp
(bad)
push
lea
or
mov
pop
or
inc
lock
aad
jb
mov
mov
dec
(bad)
(bad)
mov
lods
fbstp
(bad)
sbb
ret
addr16
repnz
pop
retf
adc
sub
enter
inc
xchg
dec
enter
gs
fdiv
adc
(bad)
cld
retf
out
(bad)
(bad)
dec
inc
mov
leave
adc
jbe
out
or
push
push
dec
pop
pusha
cmc
xchg
xor
ror
mov
mov
cmps
(bad)
xor
pop
push
adc
sbb
fistp
mov
aad
cmp
xchg
repz
pop
cli
jmp
jo
dec
(bad)
(bad)
(bad)
push
into
sub
stos
aas
rcr
push
enter
ret
(bad)
xchg
mov
in
pop
push
or
shr
(bad)
inc
fld
in
daa
rcl
inc
fst
sub
outs
mov
lock
sar
dec
push
lahf
cmps
mov
retf
dec
mov
mov
pop
adc
not
sar
push
inc
(bad)
mov
(bad)
jmp
inc
sub
or
scas
cmp
rcl
out
pop
mov
fcmovu
cs
(bad)
jmp
imul
cmp
xchg
jle
aad
push
xchg
(bad)
(bad)
dec
cs
hlt
xchg
push
scas
fidiv
adc
pushf
cmp
ins
push
xor
or
jecxz
cmps
dec
sahf
js
(bad)
in
push
mov
(bad)
cmp
or
retf
ss
clc
leave
jmp
dec
ficomp
cdq
mov
jecxz
(bad)
(bad)
out
rol
(bad)
mov
aad
pop
test
daa
(bad)
jbe
jbe
jmp
(bad)
ins
add
(bad)
sti
jg
sub
xor
jb
or
jmp
in
les
mov
xlat
dec
pop
sbb
jg
jb
out
pop
or
(bad)
(bad)
call
adc
je
(bad)
inc
sub
ja
dec
sub
aas
mov
call
and
cs
mov
sub
sbb
(bad)
mov
inc
and
inc
scas
test
mov
test
test
(bad)
call
xchg
and
dec
sbb
add
adc
mov
(bad)
imul
adc
repz
adc
loope
pop
push
(bad)
(bad)
(bad)
dec
sahf
pop
dec
int3
loope
test
fld
jg
loop
mov
pusha
xor
jg
sub
dec
pop
(bad)
(bad)
(bad)
push
pop
arpl
test
or
ror
shr
imul
cwde
shr
(bad)
(bad)
dec
or
dec
js
push
dec
sbb
adc
add
cmp
sbb
add
push
fiadd
mov
nop
dec
mov
(bad)
cmp
and
xchg
pop
sbb
mov
ror
push
xchg
test
out
jg
jmp
dec
lea
mov
jle
dec
mov
mov
cli
loope
mov
ins
mov
(bad)
(bad)
call
pop
mov
clc
xor
mov
mov
and
ror
(bad)
push
jp
mov
inc
or
pop
(bad)
pop
cld
mov
stos
aad
(bad)
jg
mov
dec
dec
push
dec
sub
neg
xor
or
(bad)
(bad)
(bad)
call
addr16
jl
cdq
iret
(bad)
lahf
mov
inc
mov
ret
and
push
enter
mov
adc
inc
loop
mov
call
loopne
jmp
inc
adc
leave
enter
(bad)
jmp
mov
(bad)
hlt
push
xlat
pop
sub
xor
(bad)
fstp
repz
mov
jo
(bad)
(bad)
(bad)
jmp
stc
mov
fstp
cmp
test
out
sbb
cmc
inc
icebp
sbb
(bad)
(bad)
jmp
call
data16
push
aas
arpl
mov
xor
(bad)
cmp
add
jno
repnz
fcomip
mov
mov
into
dec
xchg
sbb
cmps
leave
call
(bad)
fst
adc
xor
mov
(bad)
retf
xor
jno
push
add
imul
(bad)
call
add
adc
fs
je
inc
inc
rcr
in
mov
retf
lds
(bad)
(bad)
(bad)
jmp
jg
push
and
cli
and
data16
rol
push
data16
dec
movs
add
push
sbb
mov
pop
jno
(bad)
mov
mov
jl
mov
push
sub
ja
pushf
and
push
push
sub
repnz
cmps
or
test
jno
mov
pop
scas
js
push
sub
retf
mov
(bad)
(bad)
jmp
ret
nop
mov
push
cli
mov
(bad)
ins
push
mov
mov
xchg
data16
movs
mov
je
pop
and
rol
push
rcr
cmp
mov
or
inc
cld
pusha
mov
mov
test
mov
xchg
xchg
adc
mov
(bad)
cli
(bad)
fcomip
dec
in
jp
aam
ror
push
aam
jp
inc
addr16
in
rol
(bad)
(bad)
(bad)
call
popf
neg
out
push
mov
dec
xor
mov
inc
push
sbb
dec
mov
scas
(bad)
cmp
dec
xchg
adc
lods
sub
retf
fadd
cmp
(bad)
(bad)
(bad)
dec
inc
xlat
sar
mov
or
ins
sbb
ins
pop
xchg
sub
ins
arpl
mov
clc
(bad)
(bad)
(bad)
(bad)
jle
xor
imul
or
mov
cdq
mov
(bad)
(bad)
(bad)
dec
jb
in
fadd
stc
mov
xchg
cmp
out
cli
push
and
aas
pop
icebp
(bad)
(bad)
(bad)
inc
mov
jne
xor
loop
sub
jl
jo
lods
add
lods
or
ds
or
dec
sub
adc
fidivr
and
std
(bad)
(bad)
inc
shl
or
push
or
aaa
xchg
cmp
loopne
ret
xchg
(bad)
xchg
shl
jg
mov
jne
mov
ja
push
cld
jge
jge
mov
std
add
loopne
jg
mov
test
fldcw
fwait
push
fldenv
(bad)
(bad)
(bad)
jns
add
cmps
imul
dec
add
shl
mov
(bad)
inc
add
leave
jmp
and
xor
inc
jnp
xchg
mov
push
(bad)
(bad)
(bad)
jmp
mov
dec
hlt
or
mov
mov
mov
xchg
cmp
xchg
xchg
mov
(bad)
dec
xor
mov
loop
ret
(bad)
push
mov
nop
mov
xor
(bad)
(bad)
call
mov
sbb
pop
and
shl
sub
call
pop
movs
shl
(bad)
jg
call
or
pushf
lahf
jae
(bad)
sahf
dec
ss
shl
aas
(bad)
(bad)
(bad)
jmp
dec
inc
loop
call
mov
jno
movs
sub
movs
loope
fdiv
add
(bad)
(bad)
call
sub
arpl
dec
xchg
pusha
jne
stos
repnz
pop
pop
xor
adc
sub
sub
sar
mov
mov
cmc
pop
clc
out
(bad)
(bad)
jg
xcrypt-cfb
cmps
daa
jge
jnp
(bad)
out
ins
(bad)
hlt
sbb
int3
push
std
(bad)
xchg
out
fstp
(bad)
(bad)
dec
ss
ins
(bad)
jno
xlat
push
movs
mov
mov
mov
cmp
(bad)
(bad)
inc
rcl
sahf
popa
xchg
mov
dec
fst
or
pusha
daa
push
sbb
sahf
out
mov
push
pop
inc
(bad)
(bad)
(bad)
call
mov
(bad)
outs
dec
xlat
adc
jns
sbb
push
je
inc
lock
es
pushf
inc
push
push
or
inc
sbb
xor
push
test
(bad)
call
cmc
mov
adc
scas
xlat
hlt
pop
(bad)
lods
jae
repz
xchg
pop
mov
(bad)
pop
sti
repnz
push
pop
hlt
shr
pop
movs
es
mov
mov
(bad)
(bad)
(bad)
(bad)
jns
jmp
push
out
ins
cmp
or
call
(bad)
push
shr
in
dec
dec
xlat
fwait
and
(bad)
(bad)
jmp
(bad)
pop
ja
out
cmps
cmp
addr16
loope
mov
loopne
cmp
cmp
(bad)
push
aad
(bad)
fnstcw
daa
aas
ins
in
mov
fistp
jmp
ja
cmp
pop
add
call
cmps
xchg
leave
cmc
sbb
cmp
loop
jmp
sbb
cmp
pop
and
adc
repz
mov
sbb
sub
pop
adc
aaa
inc
(bad)
lock
fnsave
or
add
ss
out
pop
(bad)
in
and
ds
(bad)
jg
sub
sbb
popa
sub
sub
es
jg
mov
adc
dec
xlat
(bad)
adc
dec
push
es
adc
inc
push
(bad)
(bad)
(bad)
inc
out
(bad)
stos
mov
pop
push
sbb
imul
xlat
xchg
lahf
hlt
add
int
lea
div
(bad)
(bad)
(bad)
(bad)
jge
loopne
mov
xchg
inc
test
ins
loope
mov
mov
xor
xchg
fidiv
call
jo
(bad)
shl
fidivr
(bad)
out
mov
(bad)
dec
sbb
rol
call
daa
xchg
cld
sub
lea
mov
mov
adc
int
add
push
ret
adc
sub
add
jo
xor
jmp
mov
(bad)
(bad)
(bad)
inc
cld
mov
repz
imul
xor
(bad)
xor
xor
stc
stc
test
lods
sbb
cwde
xchg
(bad)
(bad)
(bad)
sti
jnp
pushf
test
out
(bad)
bnd
or
in
adc
cmp
loopne
call
mov
dec
aaa
dec
scas
sub
mov
movs
push
xchg
sub
(bad)
(bad)
(bad)
rcl
loop
dec
jo
fdiv
gs
jl
arpl
mov
not
jmp
or
sahf
mov
mov
(bad)
out
xchg
loopne
jmp
(bad)
add
cs
(bad)
fcomip
cmc
or
sub
fs
fxch
retf
add
in
mov
mov
out
mov
xchg
xchg
dec
shr
jae
xor
push
cmps
pop
jmp
jle
sahf
mov
cmp
or
pop
(bad)
mov
sub
les
shl
ins
xchg
nop
ins
out
mov
xor
ret
jmp
(bad)
(bad)
call
jmp
pop
lahf
xlat
fs
das
sub
add
mov
jb
shr
(bad)
(bad)
(bad)
(bad)
jle
stos
int3
or
pop
xor
mov
push
and
mov
out
(bad)
(bad)
(bad)
push
adc
test
iret
mov
push
pop
jmp
mov
loope
jg
test
movs
jle
leave
inc
sbb
cmp
jne
jmp
inc
fs
xchg
shl
xor
dec
mov
mov
lock
call
lea
push
push
push
sub
inc
imul
dec
xchg
(bad)
fcmovnu
lock
sub
dec
dec
dec
jmp
sbb
push
add
popa
dec
fadd
movs
cmp
dec
(bad)
(bad)
(bad)
push
fstp
jb
rcl
inc
or
adc
pusha
in
ror
mov
(bad)
(bad)
dec
lock
test
cmp
cmp
inc
ret
mov
push
enter
mov
(bad)
fcomip
hlt
ret
or
iret
sub
daa
add
jns
int3
jns
(bad)
mov
mov
(bad)
(bad)
(bad)
inc
push
and
xchg
inc
sbb
dec
sub
or
mov
cwde
les
or
add
(bad)
jg
lock
pop
jle
dec
retf
(bad)
out
lea
out
call
das
jb
push
inc
sub
sub
push
xchg
psubd
push
dec
shl
(bad)
(bad)
(bad)
jmp
dec
js
into
pop
rol
popf
sar
test
xlat
imul
jae
cmp
data16
(bad)
(bad)
jmp
inc
push
outs
mov
pop
fwait
jmp
jg
cmps
mov
inc
mov
pop
lahf
call
(bad)
(bad)
jmp
(bad)
movs
push
test
ja
retf
push
adc
ja
scas
outs
dec
shl
pop
scas
(bad)
mov
cdq
jae
cmps
add
(bad)
fnstsw
cmc
aaa
(bad)
mov
inc
shr
push
stc
shl
mov
jmp
xor
add
gs
fcomp
leave
push
dec
mov
aaa
jecxz
inc
mov
(bad)
jg
or
cld
clc
imul
lods
fidiv
jo
inc
push
inc
push
(bad)
aad
or
(bad)
(bad)
mov
pop
popf
sar
inc
inc
fimul
mov
test
ret
push
fistp
push
test
rcl
add
push
pop
not
into
int
dec
popf
cdq
mov
stc
push
mov
push
loopne
lock
(bad)
lahf
iret
pop
int3
fdivr
(bad)
(bad)
(bad)
call
sub
rcr
mov
ds
xor
call
mov
xchg
stc
inc
xchg
iret
mov
(bad)
(bad)
(bad)
(bad)
jle
dec
jle
push
xlat
xchg
cli
sub
shr
cwde
ds
in
mov
bswap
test
(bad)
(bad)
push
push
cmp
in
inc
(bad)
jmp
pop
icebp
mov
icebp
jecxz
mov
push
cmps
mov
sbb
mov
retf
xor
push
mov
inc
fdivr
scas
fimul
scas
fistp
call
jl
retf
idiv
jno
int3
jl
and
leave
and
push
push
daa
jno
push
and
sub
nop
lock
dec
adc
stos
pop
loopne
mov
adc
(bad)
push
dec
pop
jne
js
es
in
out
jae
fst
sbb
in
or
jmp
lods
mov
dec
jbe
imul
in
pop
push
ss
idiv
(bad)
mov
or
aas
push
loope
mov
int3
xor
jl
fdivr
in
cmp
(bad)
dec
pop
lods
cmp
out
lahf
or
mov
lods
iret
add
jmp
movs
push
pop
jmp
xchg
ins
push
push
dec
dec
pop
sub
mov
dec
stos
or
pop
mov
ss
jecxz
sar
jmp
cmp
lods
rcr
or
iret
mov
push
(bad)
(bad)
jmp
and
or
out
sbb
hlt
pop
call
mov
jns
(bad)
ficomp
rep
clc
(bad)
mov
cmp
or
out
cli
jecxz
push
jne
jo
inc
(bad)
out
cli
mov
dec
out
push
out
fidiv
push
jo
retf
(bad)
js
or
xlat
dec
ins
fst
xchg
mov
cmp
dec
add
fldcw
outs
mov
retf
in
sbb
(bad)
(bad)
(bad)
push
call
push
(bad)
adc
cmps
iret
mov
xor
loop
aam
add
addr16
call
add
mov
or
and
cld
sbb
call
loopne
jg
xor
sub
fisubr
add
and
and
inc
bound
mov
mov
stc
push
inc
jmp
fiadd
pushf
(bad)
rol
mov
bound
dec
jb
cmp
js
(bad)
rcl
in
mov
(bad)
(bad)
inc
push
popf
inc
mov
mov
mov
pop
ret
test
mov
jmp
shl
mov
sub
xchg
lods
or
or
push
sub
(bad)
call
out
cli
fmulp
hlt
adc
(bad)
pop
clc
xchg
push
pop
inc
sahf
shl
mov
sbb
(bad)
(bad)
mov
movs
icebp
and
mov
push
pop
les
gs
stos
push
fs
jl
dec
call
jle
add
mov
mov
(bad)
(bad)
(bad)
(bad)
(bad)
std
out
dec
nop
js
mov
in
enter
aas
in
fbstp
mov
sahf
or
push
in
fadd
data16
add
adc
cdq
shl
mov
sahf
nop
data16
(bad)
(bad)
(bad)
jmp
adc
sahf
xchg
xchg
retf
ror
stos
int
stos
pop
sti
xlat
mov
xor
jl
push
jmp
xor
add
mov
pop
std
dec
sub
jae
icebp
jnp
jbe
ret
xchg
(bad)
(bad)
jmp
in
cmp
adc
lds
fisttp
outs
jns
or
fild
pusha
mov
cmps
sub
sbb
xor
adc
add
inc
jmp
push
ja
std
out
test
mov
(bad)
dec
cmc
cmc
pop
cmp
jns
fmul
outs
mov
in
out
(bad)
(bad)
(bad)
dec
xor
jp
outs
push
out
retf
pop
sbb
hlt
add
rol
(bad)
pop
or
outs
xor
push
push
inc
hlt
sbb
mov
out
(bad)
or
lock
(bad)
(bad)
call
scas
mov
xrelease
sub
xor
and
xor
mov
mov
les
(bad)
(bad)
(bad)
jmp
sub
push
xlat
xor
loope
stos
call
ins
rol
popa
jmp
push
mov
call
and
frstor
fcomp
(bad)
mov
cmp
retf
(bad)
mov
scas
(bad)
(bad)
mov
outs
dec
jg
arpl
xchg
cmp
stos
sub
adc
lods
bound
mov
rol
cwde
mov
test
clc
sub
cmp
jmp
xor
push
xor
cmp
cmp
xor
cmp
cs
jl
mov
mov
push
or
inc
dec
retf
pop
cmp
out
push
dec
adc
pushf
or
jmp
mov
(bad)
(bad)
(bad)
call
sti
enter
jg
xor
xor
(bad)
pusha
nop
into
add
(bad)
(bad)
(bad)
push
mov
cmp
xchg
mov
inc
test
mov
xor
rcr
out
aam
mov
sar
(bad)
(bad)
call
or
sub
fisttp
xchg
cs
loopne
nop
das
in
xor
retf
mov
or
rcl
(bad)
pop
jae
mov
movs
pushf
or
add
pop
or
sahf
sar
sahf
fcom
mov
(bad)
(bad)
jmp
dec
or
xlat
enter
dec
aad
jno
pop
out
mov
leave
and
outs
in
jecxz
in
in
adc
movs
mov
xor
call
(bad)
mov
dec
pop
daa
cmp
dec
push
test
or
cld
(bad)
mov
sbb
gs
mov
ss
mov
jge
rol
cmps
mov
call
shr
push
retf
adc
lock
or
xor
mov
jno
out
xchg
add
fidivr
(bad)
pop
mov
inc
xor
sub
xchg
pop
(bad)
bound
clc
jge
rol
repnz
mov
xchg
mov
(bad)
(bad)
dec
jl
cmp
dec
ds
call
sbb
idiv
fucomi
jo
idiv
(bad)
iret
mov
adc
jg
nop
movs
fldcw
cmp
cmps
sub
mov
(bad)
call
fcomp
sub
push
or
cdq
pop
pop
mov
inc
popf
loope
inc
add
add
jne
enter
jae
pop
xor
test
and
xlat
(bad)
jmp
and
not
cmp
jbe
xor
lock
lahf
cwde
hlt
(bad)
(bad)
push
enter
pop
(bad)
test
dec
or
daa
adc
int
test
pop
call
retf
xlat
push
add
adc
jno
sub
pop
adc
(bad)
(bad)
push
test
rol
mov
inc
dec
inc
and
xchg
push
outs
mov
lods
ja
or
sub
lahf
loopne
xchg
addr16
xchg
inc
outs
cmp
adc
jg
dec
jb
push
shl
dec
imul
or
rcr
icebp
mul
popf
adc
jmp
into
cmps
xlat
(bad)
(bad)
(bad)
call
call
cmp
scas
stos
mov
in
cmps
adc
inc
adc
push
cmp
push
push
outs
jmp
ret
pop
sbb
xor
jg
pop
scas
sbb
call
repz
cmp
mov
rcl
(bad)
(bad)
dec
mov
lods
mov
jg
aad
mov
mov
aam
and
jg
jmp
push
cmp
arpl
push
fcmovbe
jb
je
and
ins
fld
icebp
(bad)
dec
lds
mov
sub
popa
lods
jmp
outs
(bad)
cli
repnz
push
stos
mov
jl
imul
(bad)
(bad)
mov
mov
mov
mov
or
rol
repz
adc
sahf
sti
test
(bad)
inc
aad
cmp
enter
sbb
das
jns
sub
xchg
mov
fcom
push
inc
push
add
push
(bad)
xchg
sbb
push
test
mov
cli
aas
hlt
nop
cmp
xor
sahf
bound
(bad)
(bad)
(bad)
inc
sub
mov
outs
push
(bad)
sbb
lds
mov
or
pop
lahf
pop
in
popf
and
(bad)
call
mov
push
imul
add
outs
popa
and
mov
jmp
sbb
dec
sbb
jmp
sti
fld
(bad)
dec
xchg
clc
pop
in
iret
xchg
test
xor
mov
movs
sub
jmp
add
call
and
in
jecxz
cmps
jle
adc
pop
lods
mov
mov
sar
jg
pop
js
cmp
push
cld
cdq
stc
(bad)
test
gs
pusha
jo
arpl
(bad)
jmp
ds
ja
mov
enter
ret
push
es
push
sar
jmp
mov
add
and
push
fld
xor
loopne
xchg
or
ror
mov
stos
dec
dec
sbb
out
(bad)
(bad)
jmp
mov
mov
stc
das
cmp
mov
enter
jmp
and
or
pusha
add
fwait
rcl
mov
adc
(bad)
(bad)
(bad)
push
into
out
shl
sbb
enter
in
int3
push
push
cmp
movs
aad
repz
jmp
mov
lods
icebp
add
into
inc
(bad)
in
aaa
fdiv
add
arpl
adc
sbb
cwde
int
(bad)
in
jl
xlat
mov
or
push
push
sbb
in
mov
not
test
rcr
test
add
lock
sbb
sbb
xor
je
shl
xchg
ins
mov
or
xchg
loop
in
mov
cmp
sub
jmp
adc
hlt
scas
lahf
pop
cmp
or
loop
nop
test
(bad)
(bad)
(bad)
push
div
or
mov
frstor
daa
out
stc
aas
xchg
(bad)
(bad)
fcomip
fwait
pop
jns
sbb
je
fisub
sbb
sbb
(bad)
(bad)
jg
push
xlat
push
(bad)
les
push
cmp
add
lods
idiv
loopne
das
mov
push
test
mov
cmp
gs
(bad)
(bad)
jmp
adc
push
mov
adc
popa
aad
cmp
inc
inc
sbb
enter
call
loopne
movs
dec
dec
dec
sahf
outs
jne
push
cmc
shl
or
sbb
pop
mov
push
sub
add
jle
rol
fidiv
int
arpl
pop
cld
fdivr
mov
add
(bad)
call
or
stos
jmp
call
jg
retf
popa
sbb
dec
mov
jb
(bad)
jg
lods
gs
rcl
into
movs
(bad)
sbb
cld
sub
mov
pop
ret
(bad)
mov
jl
push
mov
data16
and
mov
into
test
test
(bad)
(bad)
jg
xchg
cli
nop
push
mov
pmulhw
inc
int3
shr
push
int3
ds
mov
test
lds
mov
not
dec
movs
(bad)
(bad)
(bad)
mov
mov
mov
scas
nop
xlat
gs
pop
pop
ss
stc
hlt
jmp
mov
rcl
sbb
jae
hlt
push
(bad)
out
adc
jmp
sub
inc
dec
mov
(bad)
call
retf
and
and
fmul
or
adc
shr
add
je
fs
and
jo
es
cmp
dec
dec
addr16
(bad)
(bad)
jmp
gs
push
das
sub
xchg
aam
das
mov
leave
clc
xchg
sbb
xor
jmp
mov
test
imul
adc
jmp
sti
mov
sbb
jle
fiadd
dec
call
(bad)
dec
push
in
pop
push
movs
add
xchg
mov
leave
adc
sub
nop
fadd
call
in
call
in
inc
fstp
jmp
(bad)
leave
sbb
clc
fstp
ins
push
fcos
(bad)
(bad)
jmp
pop
push
mov
aaa
dec
lahf
sahf
ret
jbe
test
ficom
xchg
fidiv
lea
push
in
mov
dec
inc
out
sbb
daa
sub
mov
out
enter
shl
pop
jb
mov
loop
sbb
cmps
sub
mov
(bad)
(bad)
(bad)
(bad)
lahf
mov
fidiv
cmp
mov
mov
js
loope
mov
adc
jnp
addr16
loope
imul
sbb
rol
stos
call
(bad)
mov
aaa
fbstp
test
xchg
add
in
movs
(bad)
(bad)
(bad)
(bad)
jp
mov
pop
dec
push
dec
cmp
adc
pushf
sar
mov
mov
jae
inc
jle
call
cld
and
out
or
mov
lock
or
mov
mov
call
jb
icebp
fisubr
mov
jno
loop
add
push
in
loopne
(bad)
(bad)
call
(bad)
dec
call
jl
call
(bad)
push
sar
cmp
call
jno
dec
mov
dec
xor
loop
xchg
push
rcr
std
xchg
mov
cmp
sbb
fst
(bad)
dec
hlt
push
popf
lahf
jnp
fstp
addr16
fbstp
add
adc
sbb
lahf
cdq
mov
mov
imul
pushaw
test
arpl
pop
loopne
inc
sti
(bad)
dec
gs
inc
and
jmp
xchg
pop
inc
(bad)
(bad)
(bad)
call
call
iret
pushf
inc
dec
inc
dec
mov
push
sub
nop
lock
and
(bad)
call
adc
sbb
mov
rol
sar
(bad)
(bad)
ds
mov
neg
lods
ror
jo
jg
cmp
ror
mov
arpl
jmp
mov
inc
xor
js
nop
ret
pop
sbb
push
clc
inc
mov
xchg
jb
ret
(bad)
xor
inc
push
test
ins
or
jp
bound
pop
pop
lahf
pop
in
out
(bad)
(bad)
jmp
test
popa
mov
xchg
movs
pop
cmp
out
iret
pop
mov
(bad)
fild
mov
xor
stc
ins
es
pop
dec
call
push
int3
leave
mov
loop
push
sbb
or
js
jecxz
dec
jge
jle
lods
pusha
inc
add
(bad)
(bad)
inc
sub
repz
aam
pop
jge
leave
mov
enter
cmp
jmp
je
rol
sbb
mov
es
imul
push
hlt
jmp
push
stc
outs
mov
stos
sub
sub
xchg
sub
fimul
sub
(bad)
(bad)
jmp
cmp
scas
mov
mov
adc
inc
js
and
jns
pop
mov
fstp
fist
adc
mov
js
sbb
sar
(bad)
inc
arpl
arpl
fadd
xchg
adc
add
add
dec
mov
and
jmp
rcr
in
out
ins
into
mov
push
mov
jbe
out
div
ins
and
es
scas
(bad)
(bad)
(bad)
fild
test
push
cmc
add
test
imul
stos
fbstp
sub
icebp
inc
sti
mov
cmp
cmps
mov
mov
(bad)
(bad)
push
sbb
xchg
rcl
jge
dec
push
pusha
jecxz
push
(bad)
cmp
inc
adc
out
adc
pop
cli
mov
(bad)
(bad)
inc
or
sti
push
sbb
jp
jo
xchg
mov
shl
int3
lahf
mov
arpl
cmp
call
jp
push
mov
mov
scas
stc
push
outs
sahf
fnstenv
test
mov
(bad)
pop
sub
ficomp
popf
call
cmc
cs
mov
mov
leave
or
(bad)
inc
xor
sbb
xchg
mov
iret
shl
scas
adc
add
inc
inc
push
mov
hlt
scas
(bad)
sub
leave
outs
fs
mov
inc
jmp
or
(bad)
call
cs
in
aaa
push
push
add
dec
(bad)
clc
mov
push
aas
xchg
xor
out
and
sbb
(bad)
(bad)
(bad)
jns
leave
lds
xor
call
sub
xchg
icebp
jl
sub
xchg
mov
das
sar
push
pop
mov
adc
adc
cli
leave
test
sub
sub
(bad)
(bad)
inc
mov
mov
mov
lea
ss
push
ja
rcl
(bad)
(bad)
jmp
rcr
mov
dec
jo
bound
fst
xchg
imul
jno
dec
or
fwait
inc
push
sub
mov
jg
into
sbb
scas
mov
bound
fldcw
cld
jg
sub
stos
call
sub
inc
retf
and
mov
push
cmp
mov
(bad)
dec
add
(bad)
jns
(bad)
(bad)
(bad)
inc
ror
push
jge
and
cli
mov
cwde
xchg
fcomp
xchg
out
setge
jg
sahf
sar
retf
(bad)
(bad)
(bad)
call
outs
xor
add
mov
jo
iret
div
inc
retf
ret
mov
mov
inc
movs
ret
adc
push
mov
and
inc
mov
cmps
lds
inc
and
ret
clc
or
(bad)
mov
shl
sbb
lock
out
inc
pusha
(bad)
cmp
mov
pusha
mov
ret
retf
or
adc
inc
inc
cli
xchg
push
(bad)
call
jnp
out
fild
movs
cmp
test
lahf
neg
mov
push
push
and
int3
xor
add
pop
movs
or
adc
push
pop
push
std
push
imul
add
pop
inc
add
jle
imul
mov
(bad)
mov
leave
icebp
(bad)
(bad)
(bad)
(bad)
sti
mov
int3
xchg
adc
jmp
aam
aaa
pop
cli
or
lods
pop
or
dec
shr
int3
and
imul
movs
inc
xor
(bad)
(bad)
dec
inc
sub
push
xor
or
lods
jmp
push
push
sub
(bad)
dec
call
jmp
and
sub
in
retf
lods
sbb
hlt
(bad)
(bad)
(bad)
out
test
mov
imul
cmp
mov
scas
cmp
mov
loope
pop
sti
(bad)
je
nop
jle
loop
call
jg
jl
loop
(bad)
(bad)
(bad)
inc
and
push
xchg
cmp
mov
mov
cwde
aas
gs
retf
jae
movs
into
mov
inc
xchg
loop
jge
xchg
out
ins
js
inc
fwait
das
mov
mov
cmps
xchg
sbb
jmp
push
dec
inc
add
pop
pop
jo
(bad)
(bad)
mov
cmps
xchg
inc
mov
ja
rcl
ins
(bad)
push
std
dec
and
cmps
loopne
mov
adc
jne
xor
sub
(bad)
dec
adc
push
movs
push
sar
sub
and
enter
pop
mov
pop
and
fld
fcmovnu
cmps
jmp
pop
(bad)
(bad)
(bad)
call
pop
pop
lods
mov
lods
push
out
pop
mov
inc
mov
ins
jno
mov
out
adc
(bad)
(bad)
(bad)
inc
mov
stos
std
inc
and
in
lods
inc
mov
ins
retf
fadd
test
inc
cld
dec
mov
mov
jnp
mov
inc
dec
scas
cld
(bad)
(bad)
call
xor
cwde
push
mov
mov
push
add
add
inc
or
cmp
nop
int
lock
lock
add
mov
push
jg
(bad)
inc
pop
cmp
pop
push
loop
adc
inc
xor
aaa
cmp
mov
les
inc
adc
in
clc
sub
mov
mov
and
push
iret
push
(bad)
xor
daa
fdivp
dec
dec
jge
sar
(bad)
pop
sub
pushf
mov
mov
(bad)
cmp
mov
iret
lds
adc
push
ret
into
fnstcw
jle
cs
dec
movs
shr
jmp
(bad)
mov
xchg
add
sahf
xor
call
sti
mov
lea
sbb
mov
hlt
movs
mov
neg
fnstenv
retf
jg
and
pop
dec
mov
inc
xor
(bad)
daa
xor
push
sub
pusha
and
adc
or
mov
push
cdq
sbb
adc
(bad)
(bad)
(bad)
call
mov
add
aas
jl
add
or
sbb
adc
imul
(bad)
inc
push
das
push
mov
dec
jg
fiadd
ins
arpl
test
shr
and
(bad)
(bad)
(bad)
(bad)
mov
in
and
and
aam
cmp
mov
lods
das
push
sbb
cmp
(bad)
fmul
ds
xchg
arpl
fs
mov
pop
inc
(bad)
stos
mov
mov
adc
inc
pushf
cmp
inc
fs
jmp
test
dec
fiadd
hlt
and
retf
(bad)
(bad)
(bad)
cmp
movs
loopne
dec
mov
adc
and
out
stos
jl
inc
xlat
xchg
adc
call
cmp
push
aad
mov
(bad)
(bad)
(bad)
call
or
push
or
xchg
aad
or
mov
mov
dec
(bad)
(bad)
(bad)
call
call
enter
bound
jmp
dec
or
jge
cmp
add
add
loopne
or
call
pop
xchg
enter
pop
sub
mov
jnp
fcomi
test
sub
sar
(bad)
(bad)
jmp
push
mov
in
(bad)
adc
fcom
add
adc
cmp
(bad)
push
fimul
sub
leave
sub
out
jge
ror
mov
pop
pusha
add
aam
ins
pop
pusha
adc
push
push
xchg
(bad)
jmp
adc
xchg
mov
ja
in
fisttp
push
test
dec
retf
pop
cli
(bad)
(bad)
(bad)
(bad)
mov
fcom
adc
ret
or
mov
test
fisub
cmp
(bad)
mov
lock
stos
call
fidiv
mov
mov
call
iret
int
out
cli
in
dec
fistp
xor
sbb
dec
shl
dec
retf
xor
jle
or
jle
es
cmp
mov
les
fst
fistp
cmovb
loope
outs
clc
inc
jnp
jne
inc
and
mov
pop
inc
xchg
movs
sub
lea
dec
dec
sahf
(bad)
(bad)
(bad)
call
xchg
or
add
das
pop
fst
mov
and
adc
(bad)
mov
sbb
adc
fmul
add
ins
cld
aad
xchg
repnz
retf
retf
jg
(bad)
(bad)
cmp
hlt
outs
jmp
jg
shr
or
mov
(bad)
dec
call
add
in
cwde
stc
mov
xchg
inc
out
sbb
push
sub
outs
ret
or
in
sahf
push
pop
sbb
js
in
ins
(bad)
jg
call
out
and
pop
cmp
jge
ds
(bad)
mov
(bad)
(bad)
cmp
adc
adc
es
sub
lds
(bad)
(bad)
(bad)
call
into
push
hlt
sub
dec
push
add
mov
out
dec
hlt
mov
repz
inc
xchg
jl
sub
loopne
cmp
jecxz
int3
cs
sar
gs
inc
lds
cmc
scas
das
add
xchg
stc
jecxz
pop
icebp
jmp
mov
pop
les
mov
bound
cmp
cli
(bad)
mov
repz
mov
xlat
jb
pop
imul
pop
jmp
jnp
mov
cmps
int3
out
movs
xchg
repnz
mov
dec
push
add
movs
fstp
ins
test
sbb
into
jnp
push
ss
push
(bad)
(bad)
mov
cli
adc
(bad)
pushf
push
jns
mov
loop
inc
shr
mov
outs
dec
or
stos
xlat
mov
(bad)
xor
mov
sbb
std
(bad)
fild
or
xlat
rol
push
sbb
std
mov
xchg
pop
repz
(bad)
(bad)
(bad)
call
bound
or
add
mov
leave
out
jo
pop
pop
pop
sbb
inc
jecxz
retf
sar
pop
out
dec
addr16
jge
cmp
(bad)
inc
ins
dec
retf
call
or
mov
cli
xchg
imul
push
jle
out
nop
cmc
(bad)
clc
lock
push
in
imul
in
dec
mov
cld
fld
add
outs
data16
out
sub
out
dec
push
or
push
jnp
daa
fbld
into
pop
jnp
cmp
dec
sub
jmp
repnz
adc
nop
je
fist
jo
sub
mov
lds
jmp
jge
mov
xchg
inc
add
cmp
mov
mov
push
(bad)
or
cmc
(bad)
call
xchg
pop
mov
or
xor
fst
push
xor
sbb
inc
inc
mov
xchg
gs
jmp
inc
mov
outs
push
loop
test
and
retf
repnz
push
jne
bound
pop
mov
(bad)
(bad)
call
mov
not
xchg
rcl
and
pop
or
xchg
ds
dec
cmp
xchg
jmp
call
shl
add
mov
push
jbe
xor
mov
cs
sub
lods
(bad)
push
call
inc
push
dec
inc
xchg
gs
pop
iret
retf
jns
xor
mov
ja
(bad)
inc
dec
sbb
dec
mov
push
pusha
and
repnz
ss
sbb
dec
mov
stc
cld
daa
push
cdq
add
dec
loopne
mov
out
inc
mov
sub
add
jg
(bad)
jmp
lds
sbb
add
lods
dec
inc
add
and
sub
adc
call
nop
adc
add
lock
pop
inc
add
push
sbb
stos
neg
(bad)
stc
pop
idiv
(bad)
(bad)
(bad)
(bad)
jecxz
imul
xchg
movs
or
dec
xlat
std
adc
push
mov
mov
shl
(bad)
(bad)
(bad)
sti
xchg
cli
pusha
cmp
adc
dec
stc
dec
outs
jl
dec
pop
repnz
aad
jne
inc
mov
pop
sbb
lea
xor
inc
mov
and
arpl
and
dec
in
mov
repnz
jg
sbb
jnp
test
sti
jnp
scas
sar
cmc
js
stc
movs
push
mov
lds
sbb
mov
movs
stc
adc
push
push
retf
mov
cmp
sub
(bad)
(bad)
jmp
xor
push
popf
add
jo
adc
aas
and
lods
stc
or
inc
movs
ret
and
xchg
or
(bad)
(bad)
(bad)
jmp
push
pop
sbb
call
push
(bad)
or
dec
and
rcl
adc
mov
(bad)
call
dec
adc
push
(bad)
sub
pop
hlt
ret
movs
dec
mov
jns
imul
cmp
(bad)
(bad)
(bad)
(bad)
jle
imul
add
sbb
lods
sub
xchg
and
leave
out
mov
shl
push
add
(bad)
dec
inc
push
push
mov
(bad)
hlt
nop
retf
shr
adc
bound
(bad)
(bad)
call
fild
lock
rcr
fcom
xchg
inc
dec
repnz
mov
(bad)
mov
(bad)
(bad)
(bad)
jl
jns
add
and
pop
adc
mov
xchg
adc
push
scas
pushf
cld
inc
(bad)
call
dec
cmp
mov
inc
pop
dec
jb
mov
shl
call
test
sbb
sbb
xchg
cs
sbb
cmovge
scas
rcr
call
pop
mov
xor
pop
xchg
xchg
and
mov
adc
hlt
fimul
(bad)
loope
(bad)
(bad)
(bad)
(bad)
mov
cs
dec
in
xor
mov
jbe
fdivr
jl
push
mov
(bad)
(bad)
(bad)
jmp
cld
bound
xlat
outs
leave
or
call
mov
lods
xor
(bad)
(bad)
call
ds
ja
and
ins
dec
pushf
xchg
mov
sahf
sub
cdq
imul
mov
mov
in
inc
(bad)
(bad)
(bad)
jmp
xchg
ss
je
inc
add
sub
aam
inc
add
loopne
(bad)
sbb
mov
(bad)
(bad)
(bad)
jmp
ins
mov
lods
mov
rcl
std
rol
mov
iret
icebp
sbb
imul
aad
(bad)
(bad)
dec
(bad)
rol
xchg
mov
push
(bad)
mov
mov
hlt
stos
push
push
or
adc
xor
sub
movs
mov
(bad)
repnz
add
mov
(bad)
(bad)
(bad)
dec
lods
mov
repz
adc
lock
je
shr
ror
cmps
cmps
mov
test
pop
pop
pop
(bad)
call
stos
outs
xchg
push
pop
jg
fcmovnbe
or
popa
test
mov
xor
push
mov
lods
aas
enter
cmc
(bad)
mov
sub
sbb
lock
jbe
cmp
out
jl
fist
xchg
or
dec
loope
aas
popf
bound
cmp
(bad)
jp
add
mov
out
xchg
or
das
sbb
js
mov
es
(bad)
or
cwde
jmp
jns
pop
xlat
mov
jne
(bad)
(bad)
out
fsub
test
jmp
and
lods
push
pop
ss
(bad)
pop
add
hlt
mov
fidiv
push
xchg
cmp
js
cmp
sub
hlt
dec
dec
das
nop
cmp
fst
inc
nop
into
mov
(bad)
inc
daa
pop
sub
dec
mov
cli
xor
add
adc
adc
or
dec
sbb
add
ja
and
push
out
adc
and
sahf
pop
and
sbb
adc
sub
stos
pusha
sub
push
(bad)
(bad)
call
inc
push
cmp
cmp
cmc
bound
and
sub
and
out
mov
(bad)
call
and
rcr
xor
popa
mov
xchg
cmp
test
push
es
aam
(bad)
jg
sbb
bound
mov
adc
sub
adc
clc
jg
add
inc
es
add
test
mov
jp
test
xor
out
fldenv
pop
pop
mov
gs
pop
jle
push
adc
add
call
hlt
cmp
inc
cmp
push
call
lock
mov
stos
cmp
push
ret
adc
inc
mov
mov
push
pop
xor
aad
(bad)
cli
inc
shl
push
and
add
xchg
test
sbb
(bad)
(bad)
(bad)
mov
outs
cdq
pop
adc
mov
shl
adc
mov
jns
xchg
hlt
add
mov
imul
sar
dec
mov
int
pop
(bad)
(bad)
(bad)
(bad)
sti
call
mov
ror
pushf
xchg
pop
pop
adc
push
add
(bad)
dec
stos
xchg
sbb
xchg
sbb
push
mov
fdivr
in
mov
scas
inc
out
mov
jnp
(bad)
(bad)
(bad)
call
sbb
jg
jo
adc
and
add
sub
int3
ret
add
clc
call
clc
test
popa
or
aas
adc
or
nop
sbb
(bad)
fild
cdq
inc
adc
ffreep
(bad)
adc
repz
je
jg
(bad)
call
aas
push
dec
sub
lea
scas
dec
vpsubsb
add
(bad)
(bad)
(bad)
push
call
(bad)
mul
mov
fnsave
(bad)
es
jle
iret
dec
ins
sub
in
(bad)
(bad)
(bad)
jmp
aas
xchg
mov
mov
cs
push
sub
xchg
iret
mov
movs
les
push
fld
jl
xchg
into
(bad)
(bad)
(bad)
call
movs
bound
mov
dec
xor
mov
inc
xchg
in
sub
fwait
(bad)
(bad)
jg
dec
fs
aaa
retf
loop
shl
xchg
lods
clc
and
dec
pop
mov
ins
mov
ror
sbb
and
cs
(bad)
(bad)
(bad)
inc
pop
sub
movs
das
cmp
es
sbb
or
push
(bad)
lahf
adc
lods
dec
adc
cmps
mov
ret
and
dec
fcomp
inc
xchg
adc
mov
in
add
rol
(bad)
jg
push
or
stc
loop
mov
shl
pop
leave
xchg
mov
cmp
xor
mov
or
jle
xchg
iret
fcmovu
inc
sub
pop
pop
std
(bad)
jmp
in
jns
ins
out
push
and
and
and
test
mov
xchg
mov
call
int3
push
stc
or
xchg
jl
push
push
cmp
stos
gs
pop
loopne
fs
ds
jle
xchg
mov
dec
pop
je
and
call
or
shr
mov
fld
pop
outs
pop
(bad)
(bad)
(bad)
jmp
pushf
retf
push
mov
stos
push
lock
push
daa
scas
cli
mov
aam
inc
inc
dec
push
dec
(bad)
(bad)
jg
ins
push
rcr
inc
dec
test
xor
fs
push
(bad)
(bad)
(bad)
jmp
clc
adc
imul
add
scas
ins
and
mov
in
jg
dec
or
into
clc
sbb
iret
jnp
or
cld
aad
out
call
(bad)
(bad)
in
ds
neg
add
(bad)
cmp
ficom
push
push
push
xchg
mov
icebp
pop
aad
(bad)
stc
jb
das
add
pop
jns
in
ds
aam
(bad)
(bad)
clc
retf
in
div
fistp
pop
fild
and
(bad)
mov
jl
jns
jne
imul
inc
fbld
inc
les
push
pop
(bad)
jecxz
nop
adc
jo
(bad)
shl
pop
(bad)
mov
jge
sbb
in
pop
ins
mov
lock
push
jmp
int3
daa
int
push
in
(bad)
(bad)
call
es
jmp
xlat
leave
and
push
or
cmp
mov
mov
push
and
mov
ror
sub
xchg
push
jns
cmps
adc
lods
adc
fs
mov
inc
inc
inc
push
xor
and
frstor
add
ffreep
xchg
pop
mov
mov
bound
push
pop
xor
fild
fist
lock
(bad)
push
adc
ins
adc
add
bound
fs
scas
and
mov
jmp
jmp
adc
(bad)
(bad)
mov
mov
in
mov
js
jmp
cmp
add
mov
and
adc
adc
push
push
sub
iret
movs
xor
jg
push
sbb
push
sub
add
ret
js
sub
xor
push
sbb
push
in
mov
loopne
movs
test
mov
add
pusha
cli
movs
pop
sbb
dec
ds
std
icebp
stos
fwait
hlt
test
(bad)
call
ret
jnp
or
jno
or
mov
push
stos
xchg
data16
push
std
(bad)
jmp
addr16
repz
neg
iret
(bad)
(bad)
call
(bad)
(bad)
inc
or
cmp
adc
leave
mov
inc
inc
mov
mov
sub
call
loop
and
inc
rcr
aad
pop
imul
xchg
mov
in
xchg
into
cdq
push
inc
mov
xchg
or
cdq
jmp
(bad)
push
(bad)
call
ja
dec
fsqrt
jno
push
scas
stc
or
mov
lock
arpl
adc
shl
add
(bad)
dec
test
lahf
or
mov
(bad)
(bad)
jmp
sti
mov
add
rep
in
cmp
xchg
pop
jnp
jo
fdivrp
(bad)
nop
mov
jmp
mov
out
call
cmp
fwait
arpl
ficomp
inc
enter
mov
fcom
sub
cwde
and
add
push
mov
sub
or
push
dec
imul
push
inc
push
sub
sbb
in
loope
xchg
pop
xchg
mov
dec
add
rol
or
loop
aas
out
scas
sbb
fisubr
mov
rcr
imul
mov
cmp
mov
adc
clc
call
jmp
or
ror
daa
(bad)
retf
les
sbb
stos
fwait
rcl
pop
or
jmp
inc
pop
pushf
and
test
clc
lds
out
jmp
(bad)
(bad)
(bad)
fisttp
dec
repz
lock
push
hlt
or
inc
aad
push
js
cli
(bad)
jmp
sub
je
les
dec
aam
ret
cmp
xchg
dec
test
(bad)
(bad)
call
push
add
inc
cwde
ins
push
pop
cmp
mov
or
and
lods
jmp
call
pop
jmp
cmp
jo
retf
push
scas
popf
stc
(bad)
inc
jae
mov
dec
add
mul
mov
inc
call
loopne
(bad)
push
jge
fdivr
sbb
(bad)
call
mov
retf
bnd
fidivr
das
mov
dec
iret
mul
(bad)
(bad)
push
ins
ins
popf
sub
mov
mov
xor
or
(bad)
(bad)
inc
add
xchg
xor
stc
repnz
inc
mov
popa
es
inc
stos
mov
xchg
mov
(bad)
fcomp
jne
pop
retf
jb
lds
jmp
push
arpl
(bad)
(bad)
(bad)
ficomp
adc
xchg
inc
aad
leave
or
mov
push
das
pop
and
xor
add
mov
js
popf
js
loopne
inc
mov
loopne
or
and
fisttp
cmp
scas
jnp
push
dec
jns
mov
shl
push
std
test
pop
mov
rcr
push
xor
ja
adc
mov
jne
retf
(bad)
call
push
push
cs
mov
ffree
fild
sub
outs
cmp
jno
lahf
cld
out
jns
and
pop
cld
and
mov
dec
push
mov
dec
add
outs
fst
cs
mov
xchg
push
sar
cdq
mov
sti
adc
fidiv
adc
(bad)
(bad)
fisttp
mov
mov
cmp
pop
push
xlat
cmp
fsub
out
(bad)
sub
(bad)
(bad)
dec
jnp
sti
push
jle
and
or
(bad)
push
add
arpl
xlat
(bad)
jmp
(bad)
jmp
sar
jg
(bad)
pop
xlat
test
cdq
xchg
(bad)
call
push
cmp
cmps
aaa
popf
scas
sti
jb
add
sbb
(bad)
(bad)
(bad)
jmp
adc
stc
std
mov
sbb
mov
mov
and
(bad)
push
mov
push
mov
push
push
jne
push
mov
add
inc
sub
retf
or
shl
vmovsd
pop
in
and
stos
xchg
mov
cmp
fld
mov
(bad)
(bad)
call
retf
inc
push
sbb
pop
mov
and
lods
and
sub
(bad)
(bad)
(bad)
(bad)
push
add
inc
test
sub
nop
inc
inc
mov
or
sbb
xor
test
movs
mov
sbb
pusha
push
arpl
fmul
(bad)
add
inc
(bad)
dec
nop
and
jecxz
and
mov
or
sub
adc
cmp
mov
popa
sbb
into
xchg
add
jb
call
cld
jmp
adc
(bad)
loope
loop
ds
push
add
shl
(bad)
jmp
test
sbb
xchg
ret
(bad)
jmp
cld
(bad)
in
outs
(bad)
sahf
dec
cmps
xchg
cmps
enter
and
shr
or
out
jle
dec
(bad)
fcomip
push
bound
or
shl
dec
mov
das
push
or
mov
(bad)
(bad)
jmp
sti
fdivp
outs
mov
ret
lock
imul
dec
jge
jle
jmp
test
imul
out
stos
cmc
addr16
(bad)
(bad)
(bad)
jle
movs
lods
in
xchg
ret
popa
ins
inc
inc
gs
sub
pusha
popa
ss
xchg
jle
cmps
imul
push
push
arpl
dec
and
push
push
xchg
cmp
pop
add
(bad)
in
mov
cli
dec
(bad)
(bad)
jg
jl
aam
xchg
pop
mov
cdq
mov
push
mov
idiv
shl
popf
mov
(bad)
(bad)
call
sbb
and
in
mov
sub
pop
mov
hlt
xor
(bad)
(bad)
(bad)
(bad)
mov
adc
push
pop
cdq
adc
push
mov
movmskps
dec
cdq
mov
push
(bad)
sub
mov
(bad)
(bad)
jmp
xor
outs
ficomp
or
sbb
xor
je
pop
mov
(bad)
(bad)
dec
in
shr
shl
or
pop
jle
jns
popf
inc
aad
xchg
mov
in
das
dec
out
xor
fiadd
cld
dec
(bad)
or
test
pop
(bad)
(bad)
(bad)
call
push
pop
add
enter
xor
and
and
push
cmps
(bad)
dec
std
(bad)
dec
popa
mov
imul
and
pop
popa
push
ret
clc
dec
mov
and
push
jb
sbb
sbb
(bad)
(bad)
(bad)
in
adc
adc
sub
push
test
xchg
xchg
mov
(bad)
(bad)
(bad)
call
ds
inc
inc
cmps
cmp
inc
(bad)
sbb
sub
in
xor
fwait
or
je
add
(bad)
(bad)
(bad)
dec
sbb
hlt
enter
pop
xchg
adc
div
in
push
(bad)
inc
mov
xchg
dec
(bad)
pop
jb
repz
mov
push
(bad)
(bad)
jg
inc
push
and
xor
pop
call
mov
out
ror
jo
das
or
fcomip
push
xchg
inc
or
dec
adc
and
sahf
mov
std
bound
pop
jo
retf
(bad)
(bad)
(bad)
call
les
xor
mov
dec
mov
mov
xchg
mov
dec
fimul
dec
jg
lea
cmp
popf
jmp
je
jecxz
(bad)
(bad)
dec
lods
pop
adc
adc
push
cmp
mov
int3
push
mov
cld
scas
outs
call
cwde
adc
dec
mov
sub
rcr
push
call
lds
(bad)
inc
xchg
loope
movs
pushf
inc
mov
ins
dec
cmps
aad
int3
xchg
je
retf
(bad)
out
mov
neg
(bad)
(bad)
sar
(bad)
(bad)
(bad)
(bad)
push
pusha
data16
cli
mov
cmp
and
clc
cmc
push
jecxz
out
mov
cmp
lahf
cwde
xor
ror
or
jp
cli
scas
in
mov
cmc
(bad)
(bad)
scas
mov
jle
push
aaa
pop
ret
sysexit
mov
jle
and
mov
xchg
jmp
les
cs
mov
mov
sbb
inc
fsubp
cmc
(bad)
(bad)
(bad)
(bad)
sti
sbb
cmp
lock
icebp
mov
call
test
fucom
lods
inc
cmp
add
(bad)
(bad)
dec
sahf
movs
mov
test
push
fisttp
jg
fld
jg
push
repz
and
call
lds
xor
mov
test
sub
push
push
jge
sub
adc
add
(bad)
(bad)
mov
clc
adc
inc
lock
add
test
fcomip
cmps
dec
push
cdq
cmp
enter
adc
fild
into
push
in
(bad)
dec
call
jmp
mov
iret
jmp
push
test
mov
(bad)
(bad)
dec
push
ins
or
pop
ret
sbb
xchg
and
push
leave
outs
clc
(bad)
mov
repnz
mov
movs
test
push
adc
fsub
dec
lods
fwait
jns
mov
pop
or
aam
gs
ret
dec
inc
add
mov
(bad)
inc
dec
push
and
pop
jns
fbld
and
jns
sub
aam
dec
addr16
cmp
dec
jbe
mul
(bad)
mov
(bad)
(bad)
(bad)
fistp
push
cmp
cmps
adc
adc
cmp
mov
jae
pop
inc
jmp
ins
fstp
bound
add
mov
inc
out
push
(bad)
push
adc
and
dec
call
sbb
or
jnp
xlat
(bad)
(bad)
(bad)
(bad)
jns
retf
or
and
inc
cli
out
mov
out
out
mov
cli
xchg
or
jmp
add
loop
test
and
adc
loop
dec
test
test
test
or
adc
ret
push
aaa
adc
adc
ds
retf
pop
sti
fdivr
std
sti
mov
cmc
or
fs
into
clc
xor
pop
cmp
sbb
push
push
sub
movs
push
adc
and
ret
(bad)
(bad)
(bad)
jmp
in
test
and
or
fyl2xp1
in
outs
cld
addr16
js
cmp
sub
(bad)
(bad)
dec
mov
ds
outs
out
push
jbe
mov
jmp
ret
and
pop
jp
scas
fadd
aam
fadd
dec
fcmovnb
(bad)
(bad)
(bad)
fld
jle
mov
xchg
dec
mov
jbe
inc
cmps
xchg
dec
fistp
(bad)
jmp
outs
sub
mov
add
jmp
jmp
sbb
jl
adc
inc
push
lea
mov
sar
(bad)
fistp
add
mov
daa
xchg
les
inc
dec
int
(bad)
(bad)
call
mov
jp
sub
dec
sbb
stos
sbb
stc
aam
mov
test
jle
(bad)
(bad)
(bad)
out
push
ins
cwde
in
xchg
mov
fs
rol
loopne
xchg
imul
mov
xchg
shr
push
cld
(bad)
jmp
movs
(bad)
dec
in
xchg
das
sbb
dec
adc
in
or
fs
ud0
cld
(bad)
cmp
rol
adc
out
leave
fst
shr
test
(bad)
(bad)
(bad)
(bad)
cmp
mov
addr16
push
sti
mov
dec
or
adc
outs
xchg
push
cld
mov
scas
retf
repz
imul
clc
jmp
mov
xchg
shr
dec
xor
scas
das
out
out
clc
das
mov
cdq
ret
cmps
sub
sub
cld
nop
(bad)
(bad)
inc
mov
sbb
dec
xchg
mov
enter
mov
cmp
jae
cmp
scas
(bad)
jmp
xchg
nop
xchg
ret
ins
mov
jns
mov
clc
loope
(bad)
jmp
push
mov
rcr
loope
jne
mov
(bad)
(bad)
(bad)
mov
(bad)
jecxz
dec
xchg
cmp
jmp
add
sbb
mov
sbb
scas
and
add
mov
(bad)
das
(bad)
jo
rol
(bad)
mov
cmp
inc
push
nop
pop
ret
out
jae
jbe
ja
mov
clc
pop
loopne
cmp
jp
sar
frstor
cld
(bad)
(bad)
jmp
shr
mov
mov
int3
fidiv
jg
icebp
xchg
mov
lahf
stc
cld
(bad)
(bad)
dec
lds
cmp
ret
fmul
cwde
and
sbb
stc
leave
movs
adc
sbb
sar
sub
js
jne
popf
ds
stos
(bad)
inc
stc
cld
shl
stos
out
call
push
add
out
rol
xlat
pop
retf
jnp
(bad)
(bad)
dec
jle
xor
out
mov
sti
cmp
fwait
outs
lock
popf
push
push
cld
inc
or
dec
inc
(bad)
call
jmp
out
mov
fwait
cwde
dec
retf
dec
nop
daa
test
(bad)
ja
jbe
(bad)
(bad)
call
nop
aaa
and
test
jne
lahf
pop
lahf
and
aaa
jno
push
and
or
lahf
ret
dec
jne
cmps
cmp
jo
lahf
pop
jecxz
mov
xor
mov
pop
push
dec
sub
scas
push
push
mov
gs
push
or
ja
jg
inc
cmps
je
lods
jge
leave
pop
lods
es
cmp
ds
(bad)
(bad)
(bad)
call
scas
mov
and
out
addr16
dec
call
jle
ds
mov
lea
xor
dec
pop
movs
movs
and
pop
iret
add
(bad)
push
movs
xchg
cmp
or
clc
inc
icebp
call
push
sub
jbe
sub
push
jb
bound
loop
push
jg
(bad)
call
(bad)
ror
lods
nop
and
or
jae
fiadd
jle
xor
sub
push
call
(bad)
(bad)
(bad)
inc
push
int
push
mov
mov
call
dec
dec
push
xchg
daa
mov
(bad)
(bad)
(bad)
(bad)
jns
push
cmps
cmp
or
pop
pop
cmp
adc
pusha
call
aad
mov
mov
fcomip
jmp
cmp
mov
ins
cmp
inc
mov
xchg
push
mov
sub
pop
push
cli
sub
ds
call
xor
xor
repnz
(bad)
mov
out
and
rol
jb
shr
call
fwait
outs
(bad)
jmp
xchg
dec
data16
in
sbb
jmp
scas
inc
pop
adc
jle
xor
in
mov
jae
fisubr
push
out
(bad)
(bad)
(bad)
(bad)
stc
sub
sbb
pop
or
sub
add
ins
dec
jmp
daa
lods
(bad)
inc
ret
(bad)
inc
cld
jae
adc
popa
lods
dec
fimul
dec
movs
xchg
loop
dec
retf
(bad)
(bad)
call
call
icebp
lahf
call
xor
das
jns
cs
and
stc
mov
addr16
retf
(bad)
(bad)
(bad)
dec
jbe
push
sub
cmp
adc
push
and
shl
arpl
add
adc
(bad)
inc
dec
mov
mov
sbb
cld
(bad)
(bad)
mov
lock
or
add
add
jbe
test
mov
push
or
push
bound
and
sti
nop
sbb
and
inc
and
nop
fstp
(bad)
(bad)
jmp
jb
ror
dec
inc
test
sub
(bad)
pushf
bound
inc
ds
inc
js
cmp
(bad)
inc
push
mov
imul
out
mov
(bad)
(bad)
call
add
je
icebp
jns
sbb
cs
in
aas
cmp
mov
dec
and
add
(bad)
(bad)
(bad)
jp
pop
pop
cdq
(bad)
std
jge
sbb
add
xor
stc
addr16
mov
arpl
jmp
(bad)
(bad)
jmp
adc
sub
sbb
movs
lods
movs
ins
scas
xchg
mov
mov
(bad)
(bad)
dec
push
add
out
mov
aaa
mov
adc
xchg
sub
jmp
inc
adc
mov
xchg
mov
xchg
xor
retf
repz
sbb
movs
inc
pop
push
dec
jnp
movs
(bad)
(bad)
(bad)
inc
sbb
xor
and
fucomp
add
xor
jo
(bad)
(bad)
inc
jl
sub
mov
fsubrp
stc
or
popf
sbb
rol
fidivr
in
test
cld
add
(bad)
jmp
cli
pop
pop
inc
or
push
outs
movs
pop
outs
fnsave
add
dec
(bad)
popa
push
std
(bad)
(bad)
(bad)
call
jno
inc
xor
outs
sub
and
adc
mov
mov
(bad)
push
mov
jg
sub
jnp
xchg
icebp
mov
dec
sbb
or
or
inc
cld
push
xor
dec
dec
push
mov
bound
xor
or
sbb
cmc
pop
ret
or
rcl
out
xchg
ret
data16
mov
das
cli
(bad)
jg
rol
popf
enter
mov
jge
sbb
clc
jg
mov
sbb
movs
jbe
and
and
call
call
xor
mov
mov
in
mov
js
scas
jl
clc
(bad)
cmp
push
(bad)
(bad)
(bad)
(bad)
(bad)
cmp
sar
jmp
and
push
sbb
add
jp
(bad)
mov
repnz
loope
mov
push
shl
add
mov
push
loop
jle
fimul
adc
ret
mov
(bad)
jg
enter
aas
nop
cmps
add
add
and
mov
xchg
dec
add
inc
adc
repz
(bad)
jmp
add
mov
add
inc
push
popf
mov
sbb
inc
sbb
retf
lahf
sti
shl
inc
push
xor
cld
(bad)
jmp
inc
mov
pop
mov
or
push
and
(bad)
(bad)
call
jge
inc
pop
inc
mov
inc
or
fldcw
test
sub
fs
xlat
out
and
push
jmp
mov
lock
push
repz
sub
lds
dec
sti
mov
or
rol
bound
inc
adc
(bad)
jmp
hlt
ja
lds
add
out
mov
sbb
mov
inc
aas
dec
pop
xor
(bad)
enter
fistp
repnz
jle
stos
(bad)
call
addr16
js
xor
inc
add
add
in
test
pop
sbb
int
inc
pusha
sbb
xor
pop
jg
mov
(bad)
(bad)
fnstcw
(bad)
stos
test
adc
and
or
sub
jmp
mov
mov
pop
sub
and
xor
movs
ror
sbb
ret
xor
adc
or
mov
movs
scas
mov
mov
xor
mov
adc
enter
in
and
pop
not
xchg
leave
dec
cmp
stos
inc
dec
fdiv
xchg
mov
sub
sub
ret
sar
(bad)
(bad)
(bad)
mov
test
aad
sub
sti
in
inc
cmps
mov
dec
cmp
popf
call
push
pop
pop
fild
pop
or
leave
add
cld
(bad)
jmp
scas
cld
int
out
jge
adc
mov
retf
dec
out
retf
out
ffree
(bad)
(bad)
jg
cs
cmps
xchg
(bad)
cld
mov
or
in
adc
add
adc
sti
(bad)
dec
add
shl
xlat
retf
mov
scas
ret
push
jge
inc
sub
test
mov
(bad)
sahf
daa
cmp
xor
call
je
dec
fist
dec
test
push
cli
mov
pop
cmp
(bad)
jmp
mov
cli
test
rdtsc
inc
jno
inc
inc
jns
or
(bad)
mov
(bad)
(bad)
call
mov
jmp
mov
ins
nop
mov
fmul
push
test
(bad)
(bad)
jmp
fadd
xor
das
ins
in
ins
fwait
icebp
icebp
div
iret
sbb
add
(bad)
(bad)
(bad)
inc
icebp
shl
arpl
cmp
push
jmp
(bad)
(bad)
jmp
dec
inc
or
jmp
push
push
sub
sahf
scas
test
ret
inc
cmps
pop
mov
xcrypt-ecb
sar
push
retf
(bad)
sbb
xor
xchg
cdq
ss
(bad)
call
or
add
into
pop
ror
jnp
cmc
div
jl
enter
(bad)
mov
pop
or
jne
lea
cli
or
push
or
jnp
(bad)
dec
lock
sub
retf
or
cmp
inc
(bad)
(bad)
(bad)
call
cmp
stc
xchg
cs
inc
push
rcl
inc
sub
mov
push
or
push
(bad)
(bad)
(bad)
push
push
inc
rol
push
and
ret
dec
dec
addr16
mov
xor
xor
stos
mov
dec
lea
inc
xchg
dec
sbb
mov
js
pop
cmps
(bad)
adc
imul
xlat
mov
xor
ins
test
mov
push
mov
ret
in
call
mov
(bad)
or
pop
or
sar
jmp
arpl
aaa
pushf
loop
xchg
popf
lock
iret
mov
push
bnd
xor
pop
jge
mov
test
sub
aas
xor
sti
(bad)
(bad)
dec
adc
rol
sbb
lods
popf
cmp
fdivrp
inc
sbb
cld
(bad)
(bad)
jg
pop
in
push
cmc
ja
cmps
cmc
movs
das
sbb
nop
(bad)
jp
popa
sti
mov
dec
aam
shr
jo
lea
(bad)
outs
xor
(bad)
(bad)
(bad)
jmp
movs
jno
and
push
pextrw
xor
pop
push
loopne
xchg
pop
(bad)
test
loopne
mov
call
scas
loopne
repz
mov
or
cmps
(bad)
jmp
xchg
xchg
push
jne
jl
inc
mov
(bad)
retf
(bad)
(bad)
out
cli
out
ss
fs
sbb
stos
repnz
dec
mov
into
xchg
std
jg
dec
scas
sbb
movs
adc
sub
xor
pop
stos
push
out
(bad)
(bad)
(bad)
mov
popf
mov
sub
add
ror
xor
xlat
mov
mov
jg
adc
pushf
pop
sbb
push
(bad)
(bad)
mov
fimul
pop
inc
stos
push
shl
inc
loop
push
nop
(bad)
(bad)
(bad)
mov
scas
pusha
add
push
inc
xor
push
test
mov
mov
xor
sub
push
shl
sti
mov
or
call
xchg
pop
xchg
sahf
(bad)
push
ja
jnp
test
jmp
fcmovnbe
lahf
mov
les
arpl
jmp
dec
sbb
(bad)
(bad)
call
cdq
cwde
scas
add
stc
out
pop
sub
fcomp
sar
fild
clc
sub
(bad)
(bad)
(bad)
inc
sub
sub
adc
ret
rol
mov
(bad)
fnsave
loopne
mov
js
xchg
(bad)
(bad)
(bad)
call
in
dec
sti
inc
add
jnp
cmc
mov
sbb
mov
lock
aaa
std
push
adc
jge
aad
pop
xchg
pop
push
shl
fld
or
sahf
mov
std
add
out
clc
jmp
xor
adc
inc
push
sar
(bad)
(bad)
(bad)
mov
gs
sub
and
pop
rcr
ret
or
inc
test
xor
(bad)
(bad)
(bad)
inc
pop
add
pop
cli
bound
fcom
std
mov
out
(bad)
mov
popf
pop
call
jmp
add
movs
xor
cwde
pop
sub
(bad)
stc
and
add
pop
in
shl
fnstcw
jns
(bad)
mov
and
(bad)
(bad)
push
addr16
out
addr16
adc
gs
fcomip
retf
hlt
inc
(bad)
cmp
jg
push
(bad)
(bad)
dec
pop
nop
pop
sahf
or
and
leave
or
fnstenv
push
dec
sub
push
sub
and
push
data16
jg
dec
mov
xor
rcr
out
or
inc
inc
out
xchg
inc
push
sbb
mov
mov
xor
(bad)
stos
push
and
inc
je
fcmovnbe
xchg
aas
scas
mov
(bad)
(bad)
(bad)
jmp
rcl
pop
stos
push
mov
or
mov
stc
adc
aam
lock
jge
mov
(bad)
pop
mov
jae
xchg
adc
(bad)
dec
or
add
pop
pop
in
jmp
popf
or
or
jo
(bad)
call
push
add
int3
test
cmps
pop
in
push
xchg
or
mov
in
push
mov
jns
and
(bad)
(bad)
(bad)
std
ss
push
mov
test
and
push
xchg
xor
mov
(bad)
(bad)
push
mov
dec
js
xor
jmp
and
xchg
dec
popa
sar
cmp
frstor
xchg
cdq
add
(bad)
(bad)
mov
mov
repnz
cmp
push
and
or
mov
pushf
es
paddb
(bad)
(bad)
jmp
pop
xchg
jae
rcl
sahf
pushf
pop
call
(bad)
jg
and
xor
das
lods
aaa
movs
mov
jo
mov
and
(bad)
cdq
imul
sbb
pop
or
pop
scas
or
or
pop
mov
add
(bad)
(bad)
dec
adc
mov
push
(bad)
jo
adc
aad
scas
cmps
add
bound
cli
imul
(bad)
(bad)
(bad)
call
push
inc
enter
cmc
sar
add
xor
push
inc
add
mov
cli
js
(bad)
(bad)
call
jno
xor
pop
pop
mov
push
movs
(bad)
fcomip
test
jge
(bad)
(bad)
cmp
movs
outs
in
adc
aas
and
mov
mov
movs
into
jl
pop
add
mov
cli
fld
out
fisttp
in
repz
(bad)
(bad)
(bad)
cmp
daa
xchg
retf
in
(bad)
sub
ds
xlat
loopne
xlat
icebp
pop
xchg
lock
in
(bad)
mov
sub
or
mov
lods
sbb
dec
je
and
pop
cld
push
fbstp
pop
pop
cmp
aam
pop
mov
loope
inc
jmp
ret
mov
sub
dec
neg
add
shl
call
xor
mov
sbb
sahf
xor
icebp
dec
(bad)
(bad)
(bad)
call
mov
xchg
test
push
dec
pusha
ret
test
mov
pop
dec
outs
push
int3
xchg
(bad)
(bad)
(bad)
call
loopne
xchg
movs
and
loope
mov
sub
and
cdq
xchg
xchg
adc
je
sub
(bad)
call
aam
xor
xchg
imul
and
das
mov
mov
jbe
sub
add
xchg
jne
pop
or
cmp
push
lar
leave
xchg
cmps
and
push
enter
pop
sbb
ror
(bad)
(bad)
(bad)
(bad)
inc
xor
mov
(bad)
and
mov
add
(bad)
pop
mov
and
jbe
sub
(bad)
(bad)
(bad)
jmp
repnz
push
pop
test
jns
add
push
push
inc
pop
movs
xchg
mov
mov
(bad)
aas
call
out
mov
push
sub
inc
(bad)
adc
sub
mov
in
out
dec
ja
mov
inc
cli
(bad)
jmp
clc
mov
(bad)
dec
dec
pop
icebp
(bad)
call
and
or
mov
dec
sub
retf
adc
adc
add
cs
enter
ret
int
and
loop
(bad)
jg
push
add
mov
test
and
lods
add
into
sti
push
dec
(bad)
(bad)
fild
push
cmp
popa
and
xchg
or
cdq
jo
push
clc
push
ja
leave
rcr
cdq
ret
std
ja
(bad)
(bad)
(bad)
jmp
add
xor
ficom
adc
xor
repz
jg
aas
pop
hlt
test
(bad)
fcomip
idiv
int3
gs
dec
les
xlat
push
and
imul
dec
(bad)
pop
pop
lock
jmp
sub
adc
sbb
cld
sar
(bad)
dec
lahf
jno
mov
stos
in
pop
lea
cmps
mov
pusha
jg
imul
dec
dec
mov
(bad)
(bad)
js
sub
and
dec
lock
dec
into
fcmovnbe
shl
cmc
cs
mov
sti
jle
sahf
xchg
ins
add
enter
pop
cdq
xor
out
lock
(bad)
(bad)
(bad)
dec
jne
in
push
xor
popf
imul
xor
pushf
sahf
cmp
xor
mov
sub
and
(bad)
(bad)
inc
mov
and
or
jmp
rcl
pop
icebp
aam
jbe
hlt
(bad)
(bad)
(bad)
(bad)
fucomip
cmp
test
daa
js
and
sub
popa
cmps
pusha
sbb
test
repnz
and
sub
xor
test
sub
or
outs
(bad)
jmp
mov
(bad)
(bad)
(bad)
(bad)
std
sub
lock
jmp
sub
jle
pusha
pop
pop
dec
lahf
mov
xchg
sub
lods
dec
(bad)
(bad)
(bad)
jmp
push
sub
cmp
or
and
adc
inc
mov
iret
adc
pop
(bad)
(bad)
(bad)
(bad)
fidivr
add
push
mov
mov
xor
cmc
mov
or
sbb
jmp
(bad)
(bad)
jg
adc
iret
xchg
adc
mov
push
ret
jno
test
nop
and
xor
(bad)
(bad)
(bad)
jmp
mov
pop
icebp
test
or
inc
data16
lea
jmp
pop
xchg
ficomp
(bad)
push
call
mov
inc
xor
push
push
pop
sub
enter
mov
ja
jmp
dec
push
mov
add
add
js
cwde
sub
and
(bad)
(bad)
(bad)
jmp
inc
jns
dec
lea
f2xm1
jnp
or
ins
or
and
and
pop
jecxz
scas
mov
(bad)
(bad)
(bad)
call
popa
adc
stos
pop
lds
sbb
inc
(bad)
arpl
sub
mov
in
jecxz
(bad)
(bad)
push
adc
inc
test
adc
xchg
or
adc
sti
and
jcxz
xchg
inc
jecxz
xor
pop
clc
out
xor
push
mov
cmp
mov
inc
jns
jmp
or
fstp
mov
std
loopne
xchg
jae
add
into
imul
addr16
or
xor
fdivrp
(bad)
(bad)
jg
jno
mov
cdq
iret
adc
mov
or
out
(bad)
icebp
loope
scas
mov
(bad)
(bad)
(bad)
jmp
inc
pop
fbstp
jo
sbb
push
mov
push
inc
fdivp
push
pop
cs
lock
(bad)
(bad)
inc
imul
(bad)
lods
ins
xor
loop
scas
cmps
sbb
jecxz
gs
(bad)
mov
or
in
push
mov
test
jge
jmp
(bad)
(bad)
dec
push
cmp
dec
add
sub
(bad)
adc
xor
push
nop
addr16
push
je
dec
(bad)
(bad)
push
jmp
sub
bound
sub
(bad)
jo
push
or
ret
cmp
or
push
int
test
(bad)
mov
in
sbb
mov
add
fs
jmp
sar
inc
adc
and
lea
mov
stos
mov
xor
mov
(bad)
jmp
fs
add
mov
stos
cmc
xchg
xor
mov
fwait
std
out
(bad)
jg
mov
adc
mov
clc
stc
loop
dec
sub
sub
mov
xchg
ret
cs
(bad)
jg
cmp
call
sbb
out
repz
outs
iret
jne
jne
(bad)
(bad)
(bad)
cmp
add
add
fidivr
lds
js
out
dec
retf
stos
js
outs
fcos
(bad)
(bad)
call
adc
mov
lods
add
in
bound
aas
cld
lds
xchg
cmps
(bad)
(bad)
(bad)
inc
test
jns
mov
dec
test
inc
push
call
pusha
gs
fwait
(bad)
(bad)
(bad)
push
sahf
scas
jg
shr
or
or
pop
imul
jmp
adc
repnz
outs
mov
xchg
jge
outs
imul
mov
or
push
in
and
pop
push
jmp
push
movs
pop
xor
and
dec
sub
sar
cmp
xchg
xchg
aas
imul
mov
lock
cmp
xchg
imul
add
(bad)
mov
call
dec
jg
mov
pop
xchg
sbb
leave
(bad)
outs
mov
cs
imul
mov
(bad)
loope
xchg
add
and
sahf
mov
rol
mov
(bad)
(bad)
(bad)
call
pop
sbb
out
aas
jmp
outs
in
enter
outs
mov
ficomp
imul
(bad)
call
xchg
pop
pop
sahf
lods
clc
inc
sbb
lds
inc
call
es
push
fsubr
dec
xor
pop
shl
jmp
push
shl
dec
call
adc
or
cs
ins
sbb
test
jge
mov
dec
dec
loopne
sar
inc
sbb
arpl
mov
push
jg
(bad)
mov
push
dec
iret
das
mov
xchg
ja
xchg
sbb
ret
dec
push
call
in
push
hlt
mov
pop
sbb
in
sub
push
mov
fdivr
(bad)
jmp
cmp
xchg
bound
nop
inc
imul
lods
daa
gs
mov
inc
sub
mov
fs
pop
cmps
iret
push
(bad)
cmp
jae
adc
lock
dec
jae
cdq
or
or
test
test
push
lock
call
fimul
rol
pusha
dec
adc
aaa
cld
into
icebp
repnz
fnstsw
sahf
(bad)
(bad)
(bad)
jmp
adc
mov
cs
mov
or
jmp
mov
mov
cmc
dec
dec
(bad)
arpl
call
leave
mov
in
mov
cmp
aam
push
push
mov
inc
jle
sub
das
xchg
add
jmp
or
(bad)
or
inc
ins
mov
test
sar
push
or
ins
call
push
std
outs
ins
ss
(bad)
(bad)
call
sub
add
mov
out
lods
mov
(bad)
jg
push
xadd
add
pop
inc
jle
retf
ret
cld
push
lods
jne
push
push
sbb
js
lock
ja
inc
pop
lods
mov
cdq
pop
jo
push
rcr
dec
das
addr16
in
lahf
loopne
ret
call
fcmovu
mov
ja
jbe
mov
mov
dec
or
(bad)
loope
cmp
cmc
test
lods
mov
iret
out
sbb
mov
or
sbb
cld
out
jnp
stos
ret
call
loopne
inc
push
xchg
mov
mov
mov
(bad)
repnz
aaa
int
sti
mov
movs
fistp
add
mov
adc
neg
xor
push
call
inc
pop
scas
push
iret
and
add
jmp
jae
(bad)
inc
jmp
and
push
fs
jns
or
jmp
sub
shl
mov
mov
pop
inc
out
mov
inc
mov
cmp
pop
pop
inc
add
and
leave
mov
sbb
mov
mov
jmp
test
sub
inc
jno
xor
sbb
mov
(bad)
(bad)
inc
jmp
imul
mov
mov
add
jmp
xor
stos
sar
(bad)
(bad)
dec
and
adc
aad
xor
push
gs
(bad)
inc
push
sbb
adc
gs
jmp
jmp
push
adc
jecxz
(bad)
sahf
mov
mov
pusha
xor
mul
(bad)
(bad)
(bad)
jmp
dec
pusha
pushf
xor
repz
fistp
dec
mov
cdq
outs
or
pop
sti
jmp
(bad)
(bad)
(bad)
aas
out
pop
out
in
in
popa
inc
jns
outs
cmp
cmp
lods
cdq
test
mov
setp
dec
les
mov
and
mov
stc
sub
(bad)
inc
fst
out
imul
fwait
pop
dec
cmp
xchg
adc
pop
cmp
jb
mov
push
movs
mov
pop
std
nop
rcl
pushf
push
jg
(bad)
(bad)
jg
and
sub
push
les
scas
or
loope
push
enter
jecxz
fidiv
fdivrp
out
aas
cmc
test
push
scas
ja
mov
inc
(bad)
fild
mov
pop
jb
inc
jns
rcl
xor
rol
dec
(bad)
(bad)
(bad)
jmp
xor
push
stc
mov
lahf
add
in
test
cmp
cmp
dec
lds
add
imul
cmp
(bad)
js
push
shr
loope
sbb
shl
dec
or
inc
ret
aam
jle
sub
dec
(bad)
(bad)
fild
push
push
and
test
and
(bad)
mov
xchg
sbb
nop
imul
or
cdq
scas
fxch
jge
lock
fisttp
push
or
dec
cmp
mov
or
(bad)
(bad)
(bad)
mov
mov
mov
fidivr
fcmovb
hlt
push
mov
and
(bad)
(bad)
inc
or
or
xchg
retf
jl
popa
sbb
fisttp
xor
xchg
in
sub
and
push
(bad)
(bad)
(bad)
push
xchg
test
sub
xor
mov
mov
retf
dec
mov
outs
sbb
jbe
outs
repnz
(bad)
(bad)
jmp
shl
in
push
scas
and
jl
les
test
scas
scas
mov
or
(bad)
mov
mov
adc
imul
adc
es
inc
ret
shl
sub
cmps
add
(bad)
(bad)
(bad)
jmp
lods
into
cli
shl
adc
movs
lods
dec
cmp
mov
ret
cmp
retf
fwait
fwait
(bad)
out
clc
cwde
sbb
mov
rcl
dec
xchg
(bad)
(bad)
(bad)
call
rcl
(bad)
sub
sub
out
leave
movs
mov
fstp
ja
ss
cdq
(bad)
mov
pop
jp
test
push
(bad)
fisttp
push
test
(bad)
hlt
jl
sub
push
cmp
dec
lods
(bad)
pop
std
pop
or
(bad)
pop
lock
cwde
aad
(bad)
(bad)
mov
repz
or
xlat
test
movs
push
in
mov
jbe
data16
jno
mov
and
jmp
nop
test
inc
and
dec
sbb
mov
repnz
scas
lods
int3
add
daa
mov
xlat
loop
scas
in
(bad)
(bad)
call
inc
push
rcr
inc
ret
lea
popa
lods
dec
sbb
mov
mov
or
mov
inc
(bad)
(bad)
mov
xor
imul
adc
push
jmp
ret
neg
pop
add
jb
retf
pop
add
fsub
sahf
(bad)
xchg
xchg
jg
sub
sub
cld
in
xor
inc
mov
daa
mov
push
jne
pop
test
add
(bad)
(bad)
fsubr
in
call
jge
scas
mov
mov
jg
cmc
jg
cmp
xor
aad
sub
and
mov
in
mov
xchg
sbb
jg
(bad)
jl
cmp
aas
dec
fcmovb
clc
hlt
or
sub
dec
stc
adc
mov
dec
(bad)
call
and
cmp
add
in
pop
push
out
push
inc
ret
inc
dec
or
test
(bad)
(bad)
(bad)
call
add
add
or
push
mov
es
enter
outs
sub
(bad)
mov
(bad)
(bad)
call
inc
inc
cdq
mov
sbb
or
cmps
adc
sbb
push
movs
sbb
jmp
inc
test
pop
sub
mov
push
sub
pop
xor
mov
xchg
and
bound
jnp
bound
test
adc
mov
push
addr16
or
(bad)
jmp
je
les
push
pop
fst
pop
sub
shr
jge
shr
adc
ret
sar
fwait
or
pop
clc
cmp
(bad)
(bad)
(bad)
jmp
shl
repnz
push
in
jmp
shr
scas
fidivr
mov
jmp
gs
jmp
(bad)
jle
push
repnz
gs
fdivr
mov
mov
mov
push
test
or
or
pop
xlat
cmc
push
cmps
clc
push
inc
ret
xor
xchg
call
clc
sbb
xor
dec
std
adc
fwait
dec
mov
xor
cdq
fadd
sbb
fisttp
(bad)
mov
das
jnp
mov
sti
adc
mov
lods
out
jae
shl
and
push
dec
mov
(bad)
(bad)
jmp
out
iret
cld
retf
xchg
mov
imul
mov
xor
dec
inc
pop
hlt
cmp
mov
retf
test
sub
add
pop
call
aas
fisttp
jmp
(bad)
(bad)
(bad)
call
ret
loopne
stc
bound
scas
jl
push
xor
fidiv
movd
inc
ss
inc
je
ja
cmp
xor
push
dec
and
jnp
sub
push
test
(bad)
mov
mov
loope
inc
inc
neg
stc
sbb
nop
aaa
stos
iret
(bad)
dec
lock
cmp
or
xchg
xchg
add
pop
and
xor
(bad)
(bad)
inc
rsm
adc
and
xor
addr16
(bad)
adc
test
(bad)
fst
(bad)
(bad)
fst
xchg
push
nop
jbe
(bad)
sub
test
and
push
(bad)
(bad)
(bad)
mov
gs
dec
push
sbb
pop
jmp
inc
lds
(bad)
(bad)
mov
fneni(8087
(bad)
(bad)
mov
call
in
dec
xor
es
js
jmp
add
adc
jne
lds
and
fisttp
rcr
js
mov
pop
and
mov
test
inc
gs
mov
push
cld
jmp
jmp
test
adc
xor
jnp
adc
sbb
(bad)
aas
call
xchg
(bad)
ja
les
mov
sbb
scas
pop
fst
in
dec
sub
pop
xchg
xchg
add
(bad)
scas
or
dec
clc
(bad)
(bad)
(bad)
in
push
es
cmps
and
pop
pop
ins
pop
inc
pop
ficom
push
hlt
jge
mov
mov
in
or
aam
into
push
retf
mov
hlt
(bad)
call
or
inc
lock
ret
mov
jbe
jmp
into
mov
call
mov
and
cmc
inc
call
dec
sbb
mov
add
or
loop
fdivr
pop
mov
add
mov
xlat
xchg
aaa
add
inc
icebp
mov
jmp
pop
fcmovnb
mov
aas
loope
or
aas
xchg
inc
ret
sub
mov
and
ror
loopne
es
pushf
(bad)
cmp
or
out
sub
pop
into
and
loope
mov
lods
dec
inc
in
into
inc
pop
lea
out
cmc
(bad)
(bad)
jg
push
retf
in
mov
call
xlat
pop
cvtps2pi
inc
nop
(bad)
(bad)
(bad)
fisttp
jl
xor
jmp
sbb
cmp
cli
xchg
jg
or
shl
xor
mov
imul
add
aad
(bad)
(bad)
call
mov
mov
gs
or
(bad)
(bad)
jg
rcl
pop
cmc
dec
add
jl
dec
movs
push
cli
mov
mov
push
pop
dec
sub
jle
mov
add
(bad)
inc
or
adc
movs
sub
mov
jmp
mov
or
mov
push
mov
das
add
inc
pushf
sub
das
in
cmp
mov
xchg
xor
rol
xor
push
or
xchg
xchg
and
les
(bad)
(bad)
(bad)
fsub
pop
dec
xor
mov
dec
dec
cwde
bound
aam
rcl
xlat
gs
aam
test
inc
test
dec
in
in
sbb
out
cli
outs
push
test
(bad)
inc
and
push
adc
sub
xchg
push
(bad)
mov
pop
sub
test
gs
sbb
sub
or
(bad)
(bad)
(bad)
jmp
scas
pop
pop
pop
lea
cdq
adc
div
frstor
js
push
stc
lods
mov
lock
(bad)
(bad)
dec
sub
sahf
dec
pop
dec
inc
push
(bad)
xor
mov
or
fidiv
add
loop
ja
gs
(bad)
jmp
sti
fdiv
imul
popf
test
cmp
mov
cmc
sbb
movs
fwait
test
stos
(bad)
dec
jg
or
or
je
and
push
(bad)
(bad)
jg
jmp
in
pop
daa
sub
rol
sbb
jl
mov
inc
add
xchg
retf
and
push
jne
(bad)
xchg
cmp
jg
cmp
call
(bad)
fistp
rcr
call
movs
and
call
adc
hlt
pop
push
out
fadd
dec
dec
and
xlat
mov
(bad)
call
lock
xlat
test
jb
pop
cmp
cmc
scas
pop
push
sbb
sbb
pop
xchg
fld
fistp
es
adc
sub
dec
mov
cld
(bad)
cmp
(bad)
out
sbb
dec
mov
mov
mov
rcl
cdq
fsubr
(bad)
or
repz
inc
mov
es
cdq
(bad)
push
xchg
(bad)
loope
lgdtd
or
iret
and
loope
fsub
clc
(bad)
(bad)
jmp
cdq
sbb
xor
scas
popa
sbb
in
pop
cmovg
fisttp
or
add
xor
mov
cmp
(bad)
aas
add
sahf
jo
retf
dec
mov
cmp
jns
ror
add
push
mov
cmp
jg
daa
stos
arpl
test
cmp
fcomp
cmp
ret
lock
jbe
sub
jp
mov
jmp
add
addr16
addr16
test
jnp
js
mov
pop
pusha
loop
jmp
push
int3
pop
call
(bad)
push
adc
xor
sti
xor
mov
cwde
xor
and
add
cwde
adc
(bad)
(bad)
(bad)
call
stos
sbb
push
sub
test
test
jp
fimul
sbb
mov
(bad)
call
(bad)
sti
and
sbb
dec
dec
aam
nop
dec
cmc
push
(bad)
(bad)
(bad)
cmp
(bad)
cmp
lds
xchg
pop
mov
mov
ud0
(bad)
dec
cmps
mov
test
cdq
gs
fisub
jns
sbb
aas
mov
loop
fwait
push
out
or
in
push
xor
jbe
or
enter
in
cmp
fisubr
enter
fst
les
(bad)
(bad)
(bad)
jmp
adc
or
and
aad
and
shr
jge
std
(bad)
mov
out
ss
push
(bad)
(bad)
jg
xchg
adc
enter
add
bound
push
fisubr
cli
push
cld
fdiv
inc
imul
sti
(bad)
sbb
mov
jmp
add
pusha
cli
addr16
xchg
ins
push
cmp
xor
add
retf
add
jmp
dec
jae
das
cs
mov
inc
cmp
(bad)
jg
nop
clc
sub
rcl
push
ds
xor
aam
dec
in
dec
call
inc
dec
mov
or
jmp
fs
dec
sub
(bad)
jmp
jg
push
and
arpl
cmps
repz
and
cmps
test
push
mov
pop
mov
pop
adc
test
das
mov
jns
in
retf
mov
(bad)
jmp
je
xor
push
mov
es
adc
push
adc
mov
sbb
(bad)
mov
and
push
add
and
cmp
lock
and
pop
adc
repz
(bad)
(bad)
jns
mov
mov
xchg
mov
fimul
inc
and
jecxz
fcom
xchg
jo
pop
or
scas
and
jmp
imul
push
daa
pusha
les
xchg
repnz
or
push
fwait
push
add
inc
rcl
and
pop
movs
cli
fcomip
stos
inc
mov
retf
dec
ret
stos
or
loop
(bad)
jmp
cmp
fsub
mov
scas
rcr
popf
jmp
xor
nop
push
mov
jg
cld
push
xchg
jns
or
fmul
push
js
idiv
(bad)
jg
and
pop
push
test
test
mov
bound
push
sbb
icebp
xchg
cld
(bad)
(bad)
mov
iret
call
xchg
xor
arpl
mov
std
push
icebp
inc
pushf
push
xchg
xor
mov
or
ins
push
sbb
(bad)
(bad)
(bad)
(bad)
jmp
test
jge
push
lock
or
out
aas
and
repnz
(bad)
(bad)
call
mov
inc
jp
cdq
fdiv
cs
and
inc
mov
jl
mov
retf
clc
imul
jbe
call
(bad)
inc
inc
ds
pop
mov
repnz
xor
aas
ficom
stc
inc
fstp
pop
out
fwait
icebp
mov
outs
cli
(bad)
(bad)
(bad)
cld
loop
mov
fbstp
daa
jnp
pushf
add
aas
ja
iret
out
outs
cli
pop
dec
sbb
sub
call
clc
dec
jmp
or
outs
js
inc
out
movs
xchg
fs
pop
sbb
gs
dec
cmp
(bad)
(bad)
call
jp
hlt
inc
popa
and
rol
into
ja
ds
call
jg
dec
into
push
test
jmp
and
scas
cmp
(bad)
(bad)
(bad)
push
sub
imul
call
shr
in
int3
aam
imul
or
xchg
(bad)
sub
mov
int3
outs
pop
lods
add
scas
(bad)
(bad)
(bad)
call
pop
popf
test
ret
jmp
bound
js
ret
data16
xor
or
cld
cli
jmp
push
scas
jbe
or
(bad)
jmp
push
cdq
xchg
daa
inc
add
addr16
xchg
push
sub
repz
test
add
dec
sti
ud0
sub
jmp
or
mov
out
xchg
js
(bad)
(bad)
(bad)
dec
retf
inc
(bad)
push
hlt
jne
pop
enter
adc
daa
pop
push
test
rcr
inc
or
adc
rcl
xchg
data16
scas
sbb
adc
in
iret
(bad)
mov
(bad)
(bad)
(bad)
(bad)
(bad)
fisub
xchg
sar
dec
pop
repnz
fwait
sbb
dec
dec
int3
push
out
outs
mov
and
jmp
fwait
push
es
xchg
xchg
(bad)
(bad)
inc
cmp
imul
mov
jns
xchg
inc
aam
rcl
ret
and
in
push
dec
addr16
(bad)
(bad)
call
jmp
pop
lahf
retf
jle
test
add
js
mov
xchg
les
add
add
setbe
fcmovnb
or
outs
outs
call
push
xor
retf
aas
pop
fcmovb
aas
sbb
jmp
push
xchg
(bad)
mov
gs
gs
xchg
ins
xchg
outs
add
sbb
push
xor
int
ret
arpl
(bad)
(bad)
jmp
jle
imul
push
test
push
pushf
add
add
aaa
cld
rcl
pop
xor
sbb
lea
xor
mov
retf
test
sub
dec
iret
push
push
lea
cmc
xchg
jb
(bad)
push
pop
call
sub
sti
js
imul
xchg
sub
(bad)
sub
(bad)
(bad)
(bad)
call
das
push
mov
rol
das
data16
jb
cmp
cmp
stos
hlt
neg
icebp
(bad)
inc
ror
mov
lods
imul
test
jb
cwde
dec
inc
inc
cmp
lea
jne
dec
mov
xor
lea
es
mov
jl
mov
and
mov
sub
cdq
(bad)
(bad)
(bad)
inc
and
loope
add
mov
mov
and
test
(bad)
(bad)
call
inc
xor
xor
shl
pop
add
es
les
nop
aad
push
(bad)
(bad)
(bad)
push
jmp
push
push
test
stos
jmp
movs
and
mov
scas
(bad)
jmp
shl
adc
ins
data16
lds
adc
jb
or
xor
data16
add
adc
test
mov
inc
add
cmps
push
nop
outs
fst
mov
shr
add
mov
add
ret
fidiv
loope
inc
(bad)
call
(bad)
push
(bad)
(bad)
(bad)
out
xor
mov
div
call
out
loopne
adc
ret
dec
icebp
inc
movs
jno
push
in
inc
jle
in
add
xor
(bad)
(bad)
push
sar
inc
(bad)
das
lods
loopne
pushf
jmp
dec
add
sub
jnp
stc
mov
call
cmps
fstp
or
pop
or
mov
hlt
movs
iret
out
imul
mov
inc
xor
int
mov
xlat
inc
scas
scas
std
not
fwait
push
mov
out
(bad)
inc
cmps
push
imul
jne
repnz
lods
scas
push
clc
or
(bad)
rcr
jae
cmp
(bad)
(bad)
out
cld
jb
mov
retf
and
sub
xor
outs
lock
fdiv
mov
repz
xor
mov
fdiv
movs
bnd
call
adc
loopne
and
std
shl
inc
cmp
nop
pop
or
sahf
out
sub
add
and
lds
aam
add
std
(bad)
jg
pop
or
adc
and
dec
jle
push
sub
push
push
cmp
cld
(bad)
js
aam
jl
push
inc
sub
outs
mov
pop
outs
(bad)
jmp
pop
adc
call
xchg
adc
stos
clc
(bad)
(bad)
push
nop
pop
adc
cmp
stos
and
clc
out
popf
dec
dec
jnp
xchg
ja
out
adc
movs
mov
loop
enter
dec
cmp
or
shl
cld
inc
into
and
inc
cmps
jle
adc
adc
inc
(bad)
shl
dec
imul
mov
pushf
or
cli
dec
mov
(bad)
jmp
or
(bad)
xchg
fisttp
xor
cmp
lea
(bad)
hlt
mov
(bad)
jns
cmp
mov
retf
mov
mov
mov
dec
inc
dec
fistp
xor
mov
dec
(bad)
jno
(bad)
call
mov
fcmovnu
ss
or
pop
pop
mov
mov
call
mov
dec
cmp
and
call
aam
pop
sub
jmp
jnp
jb
test
lahf
jmp
xchg
movs
adc
cld
icebp
jg
or
push
retf
xor
mov
js
lock
outs
xor
mov
int3
or
adc
jb
sbb
out
cli
repnz
cmp
(bad)
mov
cmps
push
push
push
fld
push
and
and
xchg
loop
stos
sbb
adc
jo
mov
test
les
xlat
xchg
dec
pop
sti
int3
loopne
std
dec
jnp
or
rol
push
and
xchg
clc
mov
xchg
jb
xchg
pop
aam
push
inc
movs
test
fst
fistp
jnp
push
pop
test
adc
outs
xchg
cmp
(bad)
(bad)
(bad)
call
push
cld
aas
pop
ss
push
(bad)
cwde
jp
jno
test
push
(bad)
ror
sar
add
mov
ins
push
add
push
inc
into
lea
(bad)
(bad)
(bad)
mov
mov
and
or
out
mov
pop
mov
xor
(bad)
(bad)
call
add
jmp
sahf
and
jo
inc
mov
adc
adc
push
adc
and
push
imul
es
popa
xchg
xchg
(bad)
aad
(bad)
(bad)
inc
xor
pop
adc
retf
pop
push
sub
popa
cmps
data16
popa
push
jns
call
mov
sbb
loope
sub
fisubr
sbb
repnz
xor
nop
mov
adc
adc
cmp
daa
dec
sub
add
xchg
dec
lock
(bad)
(bad)
call
add
mov
arpl
add
jge
cmp
mov
imul
push
popa
dec
(bad)
(bad)
(bad)
call
jns
test
or
ds
fldenv
std
xchg
mov
sub
xchg
stc
mov
dec
fidiv
adc
(bad)
(bad)
(bad)
push
sti
in
xchg
pop
mov
xchg
(bad)
xchg
cdq
adc
(bad)
enter
ins
or
ret
sbb
(bad)
(bad)
inc
sti
cmps
js
jbe
mov
mov
or
ins
leave
mov
push
ret
push
mov
loopne
or
(bad)
(bad)
dec
popa
scas
xchg
pop
(bad)
lods
xchg
push
jnp
mov
push
mov
xchg
adc
mov
aam
jmp
pop
xlat
or
aaa
mov
(bad)
sti
es
(bad)
(bad)
call
or
push
xor
hlt
xchg
neg
in
(bad)
jo
rol
xlat
sub
enter
(bad)
(bad)
inc
movs
sbb
out
mov
in
mov
pop
je
outs
pop
imul
jb
(bad)
out
cli
mov
sti
pop
mov
ret
fidivr
jbe
cwde
cmp
call
pop
(bad)
aad
jle
aad
shl
and
test
and
retf
xchg
push
call
cwde
popf
iret
movs
adc
cli
leave
push
retf
add
cld
fdivr
(bad)
fsubr
add
(bad)
jmp
add
iret
mov
inc
daa
xchg
shr
es
or
fdiv
ins
in
leave
cs
jno
lds
fcomp
mul
adc
aam
imul
add
pop
lea
mov
cmp
cmps
adc
jle
data16
rcr
mov
(bad)
fstp
mov
mov
clc
mov
pop
mov
fstp
bound
(bad)
(bad)
dec
sbb
adc
xchg
mov
je
lods
nop
pop
bswap
inc
inc
or
test
scas
sub
jnp
mov
xor
dec
lods
std
add
add
je
popf
mov
pop
test
(bad)
push
(bad)
(bad)
(bad)
(bad)
sti
mov
ret
sub
xor
shl
jmp
cwde
dec
or
(bad)
(bad)
inc
dec
jle
sub
xchg
dec
add
in
sub
pop
leave
scas
add
in
xchg
xchg
adc
aad
sbb
(bad)
(bad)
fcmovu
cdq
cmp
mov
lea
movs
mov
(bad)
pop
(bad)
jmp
lods
mov
mov
cld
inc
push
xchg
mov
mov
jecxz
(bad)
(bad)
(bad)
fidiv
and
retf
loop
mov
xchg
in
dec
xor
inc
test
out
in
enter
(bad)
(bad)
call
push
les
shr
ret
retf
bswap
xchg
push
xchg
scas
dec
add
sub
or
add
mov
or
or
(bad)
out
sub
adc
push
add
test
xchg
mov
push
and
inc
adc
retf
and
mov
pop
jae
(bad)
(bad)
(bad)
jmp
(bad)
push
pop
(bad)
(bad)
pop
pushf
adc
mov
mov
jno
jecxz
push
mov
cld
loopne
enter
arpl
(bad)
jae
xchg
ins
dec
jg
sbb
add
pop
or
jl
push
lock
daa
pop
in
frstor
push
test
sub
(bad)
(bad)
jmp
jg
lock
push
(bad)
hlt
xor
inc
and
mov
mov
jl
(bad)
call
jp
mov
or
arpl
xchg
loopne
push
(bad)
(bad)
push
std
jl
in
inc
mov
pop
dec
xchg
imul
cs
or
dec
jg
retf
je
cdq
and
pusha
fs
and
jmp
(bad)
(bad)
(bad)
mov
movs
jecxz
push
shr
cwde
mul
jmp
clc
dec
cs
sub
(bad)
(bad)
inc
mov
jns
scas
pop
sbb
inc
cmp
mov
pushf
dec
loope
xchg
adc
popa
push
imul
push
inc
fisttp
push
sub
mov
pusha
mov
rcl
inc
loop
add
call
in
inc
or
push
xor
(bad)
cmp
(bad)
jmp
xchg
mov
test
pop
(bad)
cmp
add
leave
sub
push
(bad)
(bad)
(bad)
jmp
add
and
pop
add
rcr
jge
addr16
mov
mov
ja
jne
xchg
dec
and
(bad)
(bad)
jmp
es
out
lock
push
ss
fmul
adc
int
aas
jb
xor
fidivr
pop
dec
jns
add
pop
jbe
test
test
inc
or
cwde
mov
xchg
cli
(bad)
(bad)
(bad)
(bad)
clc
fidiv
out
push
loopne
lea
popa
push
and
fld
xchg
cmp
jmp
jmp
icebp
jg
hlt
xchg
adc
mov
pop
mov
pop
sbb
(bad)
(bad)
mov
inc
mov
(bad)
js
in
jmp
xor
(bad)
(bad)
(bad)
add
dec
(bad)
sbb
xchg
xchg
cmp
add
addr16
rcl
test
(bad)
jg
stc
mov
clc
pop
ja
fstp
fcom
add
push
stos
jle
adc
jmp
in
mov
retf
jbe
xchg
cld
push
sub
(bad)
(bad)
call
mov
dec
mov
mov
mov
sbb
(bad)
dec
or
xchg
adc
mov
ror
es
fwait
enter
les
pop
and
xchg
jge
fdivr
(bad)
(bad)
jmp
cmps
dec
cld
sar
test
aam
iret
pop
xchg
test
pop
aas
inc
mov
and
jmp
push
xlat
movd
in
jg
dec
fcmovnbe
daa
out
pop
ja
xchg
(bad)
(bad)
(bad)
(bad)
jp
fisubr
aas
mov
cwde
pushf
xor
je
mov
mov
inc
jb
jecxz
mov
test
xchg
cmps
movs
dec
retf
mov
inc
leave
mov
cli
lds
mov
adc
sub
(bad)
(bad)
push
lods
pop
sub
in
mov
jno
mov
xor
cli
mov
inc
pushf
gs
jge
out
leave
aaa
cmps
mov
cli
dec
ret
or
mov
gs
ins
mov
call
add
iret
out
jns
mov
(bad)
out
sbb
sbb
cld
and
sub
cmp
dec
out
stc
in
cmps
pop
std
stos
into
mov
add
adc
pop
xor
ds
call
idiv
ds
inc
repnz
(bad)
(bad)
(bad)
(bad)
ds
jp
pushf
sub
(bad)
int3
fadd
or
clc
push
movs
aam
call
sbb
push
(bad)
jmp
mov
jle
lea
mov
pop
pop
stos
je
enter
(bad)
and
std
es
or
test
pop
adc
(bad)
push
stc
mov
rcr
cmp
repz
(bad)
xchg
jmp
pop
sahf
add
jno
cmp
fadd
add
jecxz
jecxz
sbb
(bad)
(bad)
(bad)
cmp
ror
fdivr
cs
adc
test
dec
imul
and
mov
cmp
push
xchg
xor
add
or
adc
push
xchg
cmp
(bad)
jmp
data16
rcl
dec
or
iret
pop
pop
inc
addr16
repz
ins
cmp
pop
into
mov
jp
(bad)
(bad)
jmp
mov
adc
nop
jl
xchg
call
or
(bad)
out
mov
or
sbb
sub
add
push
(bad)
ret
(bad)
(bad)
(bad)
(bad)
call
popa
adc
pop
icebp
mov
sbb
ficom
xor
scas
cmp
ins
es
das
(bad)
(bad)
(bad)
(bad)
jl
rol
adc
mov
and
and
rcl
xchg
xchg
cs
call
mov
iret
repz
mov
dec
xchg
(bad)
(bad)
(bad)
jg
adc
mov
pop
add
movs
adc
stos
jbe
out
xchg
repz
rcl
(bad)
inc
out
xchg
cmps
cld
and
sbb
xor
xchg
jl
(bad)
(bad)
(bad)
jmp
pushf
shl
jne
inc
xchg
xchg
inc
xchg
cld
dec
push
cmp
mov
dec
test
(bad)
(bad)
inc
xor
clc
in
push
jno
or
adc
cdq
or
xchg
outs
mov
push
sti
jo
(bad)
(bad)
(bad)
push
or
aaa
mov
push
jmp
xor
scas
inc
push
mov
in
push
add
mov
mov
(bad)
jmp
test
cmp
pop
cmp
pop
xlat
cmc
pop
mov
add
out
in
push
xor
push
mov
icebp
lds
jmp
sbb
xchg
add
rcl
add
loop
pop
nop
xor
mov
fwait
int
(bad)
(bad)
(bad)
fist
ss
aas
fdivp
aad
out
jg
inc
clc
sub
or
cmp
cdq
mov
(bad)
(bad)
jmp
mov
icebp
cmps
mov
scas
mov
sub
pusha
mov
sbb
jae
or
add
(bad)
call
jle
jmp
sub
shl
jmp
jge
nop
shl
xor
inc
xor
jmp
push
xor
(bad)
mov
xor
aad
test
cmc
xor
jp
jmp
adc
sub
out
sub
outs
(bad)
stc
dec
pop
ss
rcr
cmc
jg
pusha
(bad)
iret
dec
mov
jbe
lahf
in
(bad)
or
popf
les
xchg
fwait
adc
sub
in
mov
enter
mov
pop
xor
aas
xor
test
or
mov
or
dec
inc
or
cwde
pop
shr
xor
push
mov
das
push
jnp
(bad)
(bad)
dec
jno
int3
mul
call
cld
lea
dec
and
and
scas
(bad)
(bad)
(bad)
fcomip
sub
outs
mov
fidivr
in
push
add
xchg
clc
(bad)
inc
inc
jmp
dec
dec
(bad)
aas
idiv
xchg
lock
pop
adc
dec
jmp
cmp
push
inc
jmp
inc
js
sahf
fldcw
daa
xor
mov
inc
test
sti
das
test
mov
(bad)
(bad)
push
mov
sar
dec
aad
pop
pop
pusha
mov
imul
popa
xchg
mov
sbb
rol
nop
jecxz
jae
clc
pop
add
adc
daa
ret
mov
call
mov
ds
and
sbb
push
in
and
mov
pop
es
jns
(bad)
(bad)
dec
sbb
out
xlat
lods
rcr
sub
sbb
icebp
xchg
jb
xor
pop
pusha
outs
(bad)
(bad)
call
push
mov
(bad)
push
aad
sbb
out
test
pop
enter
jmp
xor
ins
sbb
imul
add
inc
adc
push
jmp
or
imul
(bad)
call
and
sbb
jae
rol
adc
out
cmp
sbb
cdq
xor
xchg
mov
in
and
rcr
stc
jbe
ror
jmp
not
mov
mov
jno
jle
and
ins
sar
test
fnstenv
mov
pop
pop
inc
(bad)
(bad)
(bad)
inc
jns
jge
and
in
and
iret
mov
jl
and
lds
(bad)
fistp
popa
mov
sub
mov
pop
pop
xor
inc
xchg
mov
sbb
es
add
pop
add
(bad)
push
mov
aas
inc
(bad)
stc
mov
call
dec
ins
adc
cmp
pop
jmp
adc
dec
in
push
push
aam
(bad)
jmp
xchg
add
into
xor
adc
inc
mov
(bad)
jmp
xchg
daa
jbe
arpl
xlat
es
jmp
cmp
pop
dec
jbe
jnp
(bad)
(bad)
inc
adc
inc
cld
and
and
and
mov
inc
mov
gs
fidiv
fild
std
int
push
sub
mov
or
adc
mov
sub
push
adc
in
test
(bad)
jmp
fs
sbb
cs
ja
xor
mov
or
(bad)
(bad)
dec
leave
sub
ror
cdq
jb
movs
and
popf
frstor
movs
fistp
jmp
(bad)
jmp
je
push
loope
push
or
adc
dec
pop
pop
(bad)
bound
jae
inc
inc
fidivr
adc
(bad)
(bad)
call
add
pop
inc
scas
fstp
ret
push
outs
outs
ret
dec
or
cld
(bad)
(bad)
jmp
dec
sub
fs
and
jb
in
xor
pusha
dec
xor
sar
add
add
dec
aas
repnz
fs
or
pusha
std
out
mov
(bad)
inc
rol
or
mov
lea
adc
adc
bound
or
test
jg
push
(bad)
(bad)
fidiv
loop
add
je
imul
lods
js
mov
sbb
in
xor
cmp
aad
add
sbb
ins
xchg
or
mov
(bad)
and
xlat
pop
je
sub
dec
stc
repz
mov
std
fistp
sub
(bad)
call
ret
or
adc
or
popa
sub
xchg
jb
xchg
retf
dec
dec
sbb
loopne
sbb
mov
mov
ins
stos
in
mov
ds
aam
sub
mov
(bad)
and
daa
and
into
xchg
mov
cmp
mov
sbb
inc
out
mov
popw
add
jne
pop
out
jns
dec
mov
mov
jg
xor
out
jae
(bad)
retf
popf
mov
fst
pop
cmp
repz
add
ss
(bad)
(bad)
inc
and
sub
mov
cdq
jmp
inc
pop
leave
push
test
sti
(bad)
(bad)
inc
mov
aas
cmp
fwait
rol
in
adc
(bad)
out
cmps
xor
in
mov
push
(bad)
cmps
mov
rcl
pop
cmp
mov
xchg
xor
dec
and
adc
int
movs
adc
(bad)
(bad)
(bad)
push
js
jb
dec
in
stos
out
jecxz
xchg
in
add
lds
push
outs
test
pop
cmc
ins
mov
sub
push
neg
mov
mov
sub
lea
(bad)
(bad)
(bad)
outs
or
jne
fcom
fdiv
push
lea
(bad)
es
xchg
sub
(bad)
(bad)
jmp
inc
fistp
or
push
xor
jmp
mov
(bad)
je
mov
jge
stc
shl
xor
imul
jp
lock
mov
mov
iret
push
xchg
(bad)
(bad)
(bad)
dec
mov
popa
retf
pop
leave
push
mov
push
mov
xor
push
jo
add
(bad)
dec
in
outs
jge
lea
test
jp
sti
(bad)
jg
add
sub
cdq
loope
xor
mov
loope
in
jbe
(bad)
(bad)
(bad)
jg
hlt
or
or
loope
das
add
push
xchg
or
add
mov
add
mov
jmp
jns
xor
mov
dec
xor
and
imul
xchg
xor
jl
ror
(bad)
jmp
sbb
sub
push
push
dec
inc
mov
adc
inc
add
push
ficom
icebp
retf
ficomp
(bad)
(bad)
(bad)
out
push
and
mov
popf
test
bound
lahf
xor
adc
lea
(bad)
push
jecxz
mov
mov
add
shl
cdq
pop
xor
mov
sbb
jmp
rcl
mov
daa
stc
adc
(bad)
imul
jmp
aad
inc
xor
or
shl
fldenv
add
popa
aaa
loope
cdq
adc
clc
(bad)
(bad)
cmp
cmp
pop
test
add
retf
(bad)
push
std
das
sub
push
and
sub
add
dec
push
jg
(bad)
call
cs
test
or
cmp
ret
xor
jb
sub
inc
mov
call
stos
pop
mov
sbb
call
and
in
pop
les
imul
daa
cmp
in
retf
pop
mov
(bad)
(bad)
jmp
pop
inc
add
cmp
stos
xchg
int
cmps
lds
pop
mov
clc
popa
adc
outs
add
test
(bad)
(bad)
(bad)
call
(bad)
mov
fnstsw
and
sub
mov
or
mov
(bad)
(bad)
sti
retf
mov
cmp
shr
add
xchg
sbb
and
sub
jo
pusha
bound
out
ss
sub
jg
and
aaa
mov
add
push
popa
jcxz
das
pop
mov
and
(bad)
push
sub
adc
pop
fcomip
aam
clc
div
mov
inc
scas
das
clc
dec
ins
scas
out
ins
popa
mov
add
sub
push
lods
dec
clc
(bad)
dec
jle
sub
aas
jp
dec
pop
cld
hlt
jo
mov
xchg
stos
ds
(bad)
mov
clc
mov
pop
not
cwde
jnp
retf
dec
mov
(bad)
(bad)
jmp
sub
cmc
pop
push
out
mov
sub
mov
outs
mov
hlt
(bad)
(bad)
(bad)
dec
imul
pop
xchg
shl
cmps
xchg
push
dec
xchg
xor
mov
inc
add
call
fistp
test
(bad)
jmp
(bad)
loopne
push
push
jmp
dec
sub
das
sub
xchg
les
sbb
pop
neg
stc
loopne
(bad)
xchg
pop
or
in
(bad)
(bad)
inc
jmp
out
jp
xchg
dec
pop
jge
into
stos
mov
les
das
lahf
xor
mov
fcos
(bad)
(bad)
(bad)
cmp
lock
lods
ja
sar
xlat
push
sti
xor
xchg
fld
xchg
add
outs
fdiv
call
fwait
xor
cmps
and
and
push
add
jae
bound
loope
adc
xor
lahf
pushf
retf
arpl
push
pusha
fild
mov
fs
(bad)
dec
test
cmp
or
rcr
pop
pushf
ins
push
adc
jmp
movs
add
cmps
mov
test
inc
(bad)
(bad)
(bad)
call
in
sbb
dec
xor
and
mov
es
fnstcw
add
clc
out
ret
(bad)
in
jge
push
movs
(bad)
mov
add
arpl
les
pusha
loope
push
stos
push
sub
mov
(bad)
out
clc
(bad)
mov
sbb
and
add
xchg
sub
lods
xor
and
sbb
and
push
or
cmp
mov
dec
clc
movlps
in
mov
mov
push
(bad)
(bad)
(bad)
(bad)
stc
ficomp
xchg
push
jno
mov
dec
jg
adc
cmp
addr16
mov
jne
loopne
mov
jl
out
out
dec
add
into
test
add
or
sbb
mov
add
mov
cmp
mov
push
pop
sahf
xlat
inc
inc
sbb
sub
push
das
arpl
cmps
mov
pop
jb
pusha
rcr
js
inc
movs
(bad)
call
call
shl
loope
sbb
ret
clc
(bad)
call
cmps
dec
scas
mov
xchg
sti
push
popf
stos
mov
fmul
stos
(bad)
(bad)
push
fs
push
dec
lods
ins
xor
mov
mov
jno
add
leave
push
ret
dec
(bad)
(bad)
(bad)
inc
xchg
int
pop
inc
test
dec
lds
cmp
repz
inc
xchg
ror
xchg
xbegin
xor
(bad)
push
and
clc
xor
add
std
in
push
ds
pop
dec
and
fiadd
add
add
pusha
inc
jo
add
dec
inc
pop
js
pop
(bad)
sub
clc
mov
in
mov
xor
daa
push
call
sub
add
pop
mov
mov
push
fst
es
add
fisttp
les
push
and
add
jmp
add
test
loopne
sahf
test
dec
pushf
xor
push
push
cdq
pop
mov
shr
icebp
pop
adc
dec
clc
push
adc
and
aaa
call
jmp
stos
out
rcl
clc
inc
pop
pop
mov
push
xchg
xlat
in
(bad)
(bad)
(bad)
dec
daa
pop
in
hlt
sbb
sub
iret
ret
add
cmp
call
dec
push
dec
repz
mov
xor
xchg
and
inc
adc
fldcw
mov
mov
pusha
push
and
mov
push
neg
lds
jmp
add
sbb
sbb
iret
xlat
pop
jns
push
mov
rcr
clc
sar
jecxz
pop
jle
fucomp
repnz
daa
cs
adc
xor
pop
(bad)
jmp
repnz
mov
daa
dec
jns
xchg
mov
in
(bad)
(bad)
(bad)
call
gs
push
jle
imul
sub
push
push
gs
or
stc
(bad)
(bad)
jmp
aas
sbb
inc
out
jle
(bad)
mov
jge
enter
push
ja
aad
cmp
popf
jb
cmp
cmp
fild
(bad)
out
outs
mov
daa
outs
sub
or
push
stos
mov
lock
sub
sub
and
add
(bad)
sub
call
jg
(bad)
call
fsubr
arpl
lods
outs
mov
(bad)
cmp
aas
dec
inc
sti
push
(bad)
(bad)
(bad)
(bad)
push
icebp
fstp
inc
sbb
and
sub
push
outs
xchg
mov
data16
jg
(bad)
xor
adc
cld
clc
mov
loopne
add
inc
dec
cmp
xchg
jecxz
xchg
mov
and
icebp
lock
cmc
jne
(bad)
(bad)
call
cwde
dec
adc
push
sub
jg
in
repnz
jge
cmps
shl
lods
sub
pop
push
(bad)
jno
(bad)
(bad)
(bad)
jmp
outs
sbb
jg
(bad)
mov
sbb
imul
nop
sub
or
(bad)
(bad)
mov
jbe
mov
mov
inc
dec
push
rcl
mov
lds
jmp
ficomp
cmp
cs
adc
push
mov
aad
(bad)
call
push
push
fnsave
add
aad
or
hlt
push
sar
jmp
mov
int
or
push
sub
iret
in
pop
dec
shl
outs
loope
(bad)
jg
add
and
push
in
repz
dec
popf
shl
rcr
jmp
(bad)
(bad)
mov
aaa
arpl
mov
je
in
sbb
push
mov
gs
(bad)
(bad)
(bad)
push
(bad)
(bad)
mov
pushf
mov
cmp
xchg
jns
mov
cmp
sub
or
(bad)
jg
call
xchg
fst
in
pusha
fimul
xor
cmp
add
and
mov
lods
cmp
or
xchg
aaa
mov
and
dec
jle
xchg
nop
dec
pop
sbb
pop
inc
out
pop
call
aad
call
jmp
dec
(bad)
pop
add
push
xchg
push
xchg
dec
outs
mov
les
into
cdq
push
jae
inc
retf
scas
mov
call
jae
push
popa
pop
mov
cmp
pop
std
(bad)
(bad)
dec
(bad)
fstp
xor
outs
out
pop
icebp
addr16
arpl
lds
(bad)
dec
xchg
call
repnz
add
(bad)
(bad)
(bad)
dec
inc
inc
rcl
push
dec
push
and
loopne
push
ja
pop
mov
into
push
mov
(bad)
push
jl
ret
xlat
pop
cmp
dec
adc
adc
ror
(bad)
fs
inc
pop
adc
or
inc
clc
call
dec
mov
push
dec
xchg
dec
jecxz
sbb
push
(bad)
outs
xor
popa
and
icebp
(bad)
ins
adc
jb
retf
(bad)
or
(bad)
and
(bad)
(bad)
jmp
sub
inc
xchg
call
dec
and
jae
pop
scas
push
fsub
dec
sbb
fs
(bad)
(bad)
(bad)
(bad)
push
inc
xchg
mov
sub
imul
pop
xchg
add
mov
outs
sbb
inc
ja
inc
mov
arpl
es
leave
adc
les
mov
and
popaw
ins
(bad)
(bad)
jmp
add
mov
mov
outs
sub
(bad)
(bad)
stc
loop
inc
adc
xchg
mov
je
adc
sub
xor
outs
adc
call
sub
gs
rol
inc
fwait
fs
mov
sub
jmp
mov
sbb
aam
test
add
pop
addr16
sbb
outs
ds
dec
jo
xchg
addr16
(bad)
(bad)
call
push
xor
push
add
or
test
sub
add
mov
lea
adc
or
push
clc
xor
push
mov
shl
test
adc
stos
xor
loop
mov
stos
das
adc
push
enter
(bad)
or
add
cmp
loope
or
(bad)
mov
xor
pushf
xor
repz
(bad)
call
xchg
bound
outs
mov
or
and
jg
out
inc
(bad)
(bad)
call
fld
stos
out
movs
adc
sar
stos
sub
retf
imul
(bad)
(bad)
(bad)
jg
ud2
inc
out
enter
fdivrp
scas
stos
cs
sub
mov
jl
cs
and
(bad)
jmp
fld
pop
das
dec
ret
mov
jo
sbb
in
dec
cmp
neg
cmc
idiv
jl
imul
call
addr16
inc
pop
fwait
(bad)
(bad)
(bad)
mov
fisub
mov
les
out
fimul
push
jns
xor
jmp
and
jns
enter
add
or
(bad)
(bad)
fist
mov
mov
jmp
rcl
popf
fadd
mov
mov
jo
push
dec
(bad)
hlt
std
pop
pop
in
mov
xchg
(bad)
dec
iret
jmp
int
(bad)
mov
pop
adc
xchg
test
and
adc
enter
inc
xor
(bad)
(bad)
(bad)
(bad)
jg
in
sub
pop
push
and
leave
or
or
add
(bad)
rcl
(bad)
(bad)
(bad)
jmp
adc
pop
mov
(bad)
into
xchg
sbb
dec
test
or
push
push
pop
or
(bad)
(bad)
(bad)
(bad)
js
mov
cdq
scas
mov
adc
mov
push
ins
sbb
jg
(bad)
std
leave
xchg
jp
mov
pushf
adc
div
(bad)
(bad)
call
dec
repnz
loope
test
(bad)
sub
enter
sbb
and
int3
or
std
dec
mov
xlat
xchg
sub
push
lahf
cwde
int
add
rcr
(bad)
(bad)
jmp
gs
fistp
frstor
xlat
(bad)
test
inc
(bad)
(bad)
(bad)
dec
jb
into
sbb
sbb
jp
pop
sahf
ins
mov
inc
xor
int
cmps
(bad)
push
push
lods
mov
xchg
or
xchg
mov
pusha
(bad)
jg
hlt
cmp
inc
and
inc
dec
pop
repz
pop
push
loope
add
sub
call
in
(bad)
xor
xor
clc
cmps
(bad)
fimul
dec
fidivr
add
push
outs
mov
adc
xchg
mov
popa
or
out
sbb
xchg
retf
add
cmps
mov
or
adc
stos
inc
push
or
(bad)
fcomip
or
test
dec
xchg
ja
out
sub
int
add
and
cmp
cmc
dec
out
dec
cmp
movs
repz
and
(bad)
(bad)
(bad)
call
lods
or
pop
jle
lds
bnd
sbb
mov
ret
jmp
int
inc
cld
out
pushf
inc
call
mov
or
jo
xchg
jns
es
pop
ficomp
cli
push
idiv
iret
jo
pop
push
(bad)
(bad)
inc
jmp
loop
inc
and
mov
mov
iret
jbe
idiv
(bad)
ffree
div
jb
arpl
leave
bound
mov
add
cli
(bad)
inc
mov
aaa
sbb
jp
repz
cmp
(bad)
(bad)
(bad)
out
loopne
dec
stc
rcl
aam
les
ret
inc
jle
das
inc
jle
sub
out
and
int3
xchg
mov
mov
add
or
sub
inc
mov
cdq
sub
xchg
push
movs
(bad)
(bad)
(bad)
push
add
or
stos
cwde
jnp
push
retf
ins
mov
pop
push
(bad)
in
aam
(bad)
mov
jmp
repnz
call
ss
cmp
inc
adc
or
inc
clc
sub
pop
loopne
popa
and
call
pop
bound
enter
mov
call
pmaddwd
(bad)
jmp
out
arpl
push
popa
fstp
xor
ins
xor
(bad)
dec
mov
mov
add
fcom
inc
jo
sbb
sbb
adc
or
xor
call
xor
(bad)
fisttp
movs
push
retf
push
inc
hlt
and
cmp
mov
pop
push
clc
jmp
retf
jl
sbb
(bad)
adc
loopne
or
inc
(bad)
(bad)
xchg
inc
mov
mov
dec
xor
(bad)
call
cld
pop
cmp
nop
mov
fdivr
dec
push
scas
rcl
aas
xor
stc
outs
add
or
mov
inc
sub
fisub
cmps
cdq
cmp
(bad)
(bad)
mov
dec
mov
retf
dec
ficomp
xor
leave
mov
(bad)
(bad)
jmp
adc
and
dec
dec
mov
ins
(bad)
xor
jns
pop
inc
aas
(bad)
(bad)
(bad)
dec
push
aas
mov
(bad)
sbb
inc
push
sbb
gs
mov
aaa
cld
push
push
ds
das
scas
mov
inc
and
out
clc
jg
and
jns
pop
xlat
lds
stos
scas
iret
jl
scas
stos
loop
(bad)
aas
push
adc
jmp
out
out
js
mov
xchg
dec
(bad)
fmulp
in
mov
adc
retf
or
movs
xor
jp
sar
(bad)
(bad)
dec
pop
dec
inc
push
shl
neg
fistp
inc
cmc
out
jbe
rcl
stos
pop
icebp
jmp
(bad)
(bad)
mov
inc
cmp
cwde
jg
jnp
std
(bad)
fwait
jg
(bad)
sti
outs
(bad)
std
mov
addr16
shr
(bad)
call
imul
mov
adc
(bad)
cmp
les
out
(bad)
(bad)
(bad)
(bad)
in
inc
sbb
or
add
lods
scas
jg
pusha
jo
push
dec
dec
dec
iret
in
sbb
(bad)
fisubr
(bad)
push
mov
xchg
push
or
xchg
lods
cli
pop
cs
ins
int3
mov
cmp
(bad)
mov
cmp
out
push
mov
jo
adc
inc
mov
fs
pop
sub
sbb
lahf
(bad)
imul
cwde
jne
add
(bad)
(bad)
inc
ss
fsubr
add
or
add
or
mov
test
mov
int3
sbb
ds
(bad)
(bad)
dec
fstp
je
test
or
das
mov
pop
aaa
out
sar
or
cmc
mov
jns
adc
add
cmp
sbb
(bad)
(bad)
(bad)
mov
sub
ret
xor
dec
inc
add
cmps
fcomp
jmp
jmp
or
call
sbb
sub
xchg
or
sbb
(bad)
mov
mov
mov
mov
cmp
in
repz
jge
add
sbb
or
or
fdivr
rol
push
cmps
mov
sub
jmp
scas
ss
outs
sub
cli
sub
mov
daa
cmp
push
mov
sbb
dec
mov
std
in
sti
out
push
mov
jecxz
xchg
mov
push
ret
xor
repnz
call
jmp
shl
sti
(bad)
fisttp
pushf
call
push
(bad)
(bad)
(bad)
call
nop
and
inc
pop
jmp
inc
push
pusha
xchg
loopne
sbb
nop
inc
xchg
gs
out
lahf
out
(bad)
(bad)
(bad)
inc
push
xor
dec
mov
jne
mov
push
xor
sub
loop
(bad)
push
pop
enter
push
nop
and
into
or
pushf
popa
out
push
mov
mov
jmp
ins
push
mov
jae
ja
in
sahf
mov
lea
jmp
mov
pop
pusha
add
out
(bad)
retf
xor
adc
cli
jne
(bad)
(bad)
(bad)
inc
sar
std
loopne
mov
cmp
pop
jle
inc
or
xchg
jecxz
sub
xchg
jmp
outs
mov
sub
(bad)
xchg
pop
sahf
fnsave
mov
shr
xchg
mov
(bad)
(bad)
jmp
(bad)
imul
aad
add
cmp
and
jle
xor
daa
fwait
and
push
adc
(bad)
(bad)
(bad)
cmp
mov
mov
pop
sbb
test
call
inc
inc
shl
add
inc
(bad)
mov
cli
mov
xor
lods
shl
or
lods
stos
cs
sbb
jmp
adc
es
mov
or
add
mov
dec
stos
mov
cld
ja
cmp
xor
loopne
cmp
mov
xchg
sbb
fldcw
outs
call
(bad)
enter
mov
(bad)
inc
mov
jb
out
push
dec
add
cmp
push
fidivr
add
(bad)
(bad)
mov
pop
push
out
test
push
jb
and
(bad)
mov
cli
mov
mov
(bad)
(bad)
call
call
inc
lock
popa
test
dec
fndisi(8087
lahf
or
xchg
adc
js
push
adc
pushf
inc
loope
mul
icebp
pop
loop
xchg
clc
add
cmp
ins
fcomp
stc
push
and
inc
pop
adc
and
xchg
cmc
mov
adc
fadd
dec
icebp
inc
cs
cwde
mov
(bad)
(bad)
call
xchg
cmp
mov
xchg
pop
mov
scas
lods
test
sub
push
out
daa
or
(bad)
(bad)
jmp
pop
push
xor
(bad)
loopne
add
mov
add
inc
jge
ror
retf
add
cmp
ja
mov
fnstenv
dec
ret
(bad)
clc
aad
cmp
push
call
les
test
mov
scas
push
inc
inc
inc
cmc
or
(bad)
(bad)
in
mov
pop
cld
and
mov
push
xor
aaa
cmp
in
push
(bad)
push
or
add
fs
pop
(bad)
(bad)
fwait
das
out
addr16
(bad)
mov
jbe
js
cmp
jg
jmp
ja
or
stos
outs
(bad)
(bad)
jmp
(bad)
xlat
xchg
adc
(bad)
cmp
mov
in
sbb
mov
cmc
(bad)
(bad)
jg
outs
aas
stc
mov
(bad)
cli
scas
push
xor
jnp
cmp
ins
inc
call
fsub
add
fs
imul
ror
and
xor
sbb
jg
(bad)
jmp
mov
fdiv
mov
push
push
lea
(bad)
(bad)
(bad)
push
ins
jae
cli
loopne
mov
rcl
pop
xor
jns
or
xchg
cld
das
cli
xlat
dec
add
pop
inc
dec
push
(bad)
(bad)
jg
mov
xor
jp
fnstenv
jne
push
lods
in
pop
lahf
jae
fisub
pusha
sbb
(bad)
(bad)
(bad)
fcmovbe
pop
cmp
and
repz
jnp
(bad)
aas
jbe
sub
nop
repnz
add
push
ret
enter
lock
neg
cmp
dec
cli
mov
jmp
pop
jns
inc
nop
sub
or
(bad)
fwait
aaa
hlt
cmp
mov
and
push
fs
mov
js
xchg
sbb
jb
mov
sub
pop
ins
mov
jns
test
jg
inc
sub
adc
call
mov
sbb
rol
sub
fwait
cmc
out
lods
jo
inc
pusha
fistp
push
mov
ret
(bad)
push
fmul
jp
scas
sbb
(bad)
jecxz
pop
mov
adc
mov
sub
mov
fs
or
push
(bad)
(bad)
(bad)
inc
imul
pop
rol
jo
fidivr
jle
pop
(bad)
cmc
dec
ror
dec
jbe
scas
(bad)
(bad)
cmp
dec
dec
iret
imul
xchg
mov
ss
jle
fistp
mov
(bad)
(bad)
jmp
mov
fs
sub
test
and
stos
push
ror
pop
adc
cld
(bad)
mov
push
jne
nop
mov
mov
pop
daa
pop
movs
(bad)
(bad)
(bad)
push
bound
add
idiv
dec
(bad)
aad
cmps
nop
test
ret
sti
mov
lock
(bad)
jmp
jns
sub
push
call
jle
mov
jp
adc
or
cmc
scas
sub
imul
fidivr
nop
clc
xor
jno
xlat
(bad)
mov
sti
repz
call
(bad)
jp
repnz
mov
jae
bound
add
xlat
(bad)
(bad)
(bad)
mov
mov
aas
into
mov
dec
addr16
jg
(bad)
mov
push
push
xor
jo
add
std
(bad)
int3
ds
xchg
test
sbb
dec
cmp
pop
push
daa
js
sub
std
(bad)
fist
fmul
mov
adc
add
je
sub
add
enter
cmp
(bad)
jmp
test
dec
repz
pusha
push
push
imul
xchg
and
xchg
movs
and
rcl
push
sub
call
xchg
je
pop
add
mov
sub
or
(bad)
(bad)
(bad)
dec
fs
cs
add
cli
cmps
enter
adc
fs
add
(bad)
nop
dec
call
call
pop
ja
repnz
ins
sub
sahf
pop
adc
pop
push
mov
push
std
mov
and
or
outs
cld
jns
push
mov
in
mov
in
mov
pop
xor
adc
jbe
(bad)
cld
inc
inc
add
fstp
adc
mov
adc
out
test
pop
div
cmc
(bad)
push
add
rol
xor
jge
scas
sbb
jp
push
aas
xor
(bad)
jg
jb
sub
sub
mov
and
mov
mov
call
adc
adc
jmp
cmps
xor
ins
pusha
add
and
add
(bad)
dec
adc
sub
dec
rcl
jmp
aas
das
rcl
into
add
in
mov
or
and
dec
mov
inc
inc
ds
cmp
pop
push
mov
cmp
sbb
adc
mov
mov
mov
adc
adc
lods
hlt
pop
(bad)
jmp
shl
cli
in
pushf
scas
in
fwait
cmps
add
mov
fistp
and
pusha
cli
mov
push
out
pushf
clc
mov
(bad)
call
mov
retf
pop
push
sbb
mov
into
gs
pop
add
loope
mov
outs
inc
aaa
popa
movs
pop
mov
daa
push
fisubr
jl
scas
(bad)
fiadd
std
pop
mov
nop
fild
mov
nop
das
jmp
adc
mov
and
xchg
inc
xor
xchg
jnp
inc
and
or
(bad)
std
jge
dec
mov
sub
loopne
ss
mov
xor
test
xchg
jle
inc
jg
test
call
call
xor
in
scas
(bad)
fsub
fild
(bad)
lock
cli
add
in
pop
jg
cmps
xlat
pop
(bad)
(bad)
(bad)
fist
sti
sahf
mov
dec
jl
mov
add
mov
mov
stos
and
(bad)
(bad)
(bad)
mov
jp
xor
sbb
inc
jge
xor
imul
cdq
shl
sti
rcl
pop
lods
les
into
dec
(bad)
not
xor
shl
int
mov
jno
mov
push
scas
(bad)
or
jmp
in
das
rol
stc
mov
(bad)
(bad)
(bad)
inc
lahf
cmp
in
fld
iret
jne
jo
add
movs
(bad)
ret
xchg
inc
push
dec
mov
(bad)
(bad)
(bad)
call
data16
ins
arpl
jne
ins
xchg
mov
enter
jmp
aaa
jae
retf
rcl
(bad)
(bad)
(bad)
out
mov
jp
dec
jle
inc
mov
mov
scas
cmps
aad
or
xor
(bad)
jmp
xchg
(bad)
sti
daa
in
sti
and
mov
mov
cmp
push
imul
(bad)
(bad)
jg
mov
xchg
in
cwde
call
and
arpl
dec
(bad)
pop
loope
add
(bad)
jg
retf
xor
sub
fist
aas
xor
dec
mov
scas
dec
scas
push
mov
dec
pop
or
(bad)
jmp
adc
fistp
out
outs
push
xor
fist
(bad)
and
xor
(bad)
fild
xor
cld
sbb
push
out
icebp
lea
fnstenv
mov
push
ficomp
mov
(bad)
movs
fldcw
cmp
test
rol
push
jmp
stos
(bad)
xchg
sub
inc
jne
sub
fisub
dec
mov
and
or
push
sub
jae
adc
jmp
sbb
mov
rcl
cmp
(bad)
(bad)
(bad)
inc
push
push
inc
mov
push
and
inc
push
sub
dec
mov
retf
or
ret
push
ds
(bad)
(bad)
(bad)
call
movs
(bad)
xor
or
rcl
int
fist
push
(bad)
(bad)
push
retf
add
or
jo
sbb
lds
sub
sub
cli
(bad)
mov
pop
inc
loopne
sbb
mov
mov
das
cli
mov
call
jnp
jle
mov
jmp
push
cs
jb
imul
(bad)
fcmovnu
adc
cmp
or
dec
ds
push
addr16
mov
pop
cmp
xchg
movs
xor
pop
add
cld
mov
cmp
pop
add
mov
push
jae
scas
cli
imul
sbb
enter
jecxz
ror
icebp
sub
mov
in
or
ss
jmp
sub
or
or
dec
lock
mov
cli
dec
ins
mov
(bad)
(bad)
out
jbe
jmp
sub
sbb
sub
data16
mov
(bad)
(bad)
(bad)
in
xchg
jge
jo
and
mov
(bad)
jge
jo
pop
add
dec
(bad)
out
clc
mov
std
in
ret
jnp
jae
jmp
dec
call
(bad)
pop
and
mov
movs
ins
inc
mov
fdivr
jmp
fldenv
rcl
sub
mov
fdivr
stos
or
mov
(bad)
(bad)
jmp
pushf
out
in
inc
nop
push
shl
mov
pushf
shl
and
in
rcr
and
(bad)
(bad)
(bad)
(bad)
jle
push
aaa
adc
outs
int3
mov
sub
add
es
fld
xchg
mov
int3
(bad)
(bad)
(bad)
push
in
xchg
in
(bad)
xchg
daa
xchg
inc
pop
mov
adc
lea
fs
cmp
push
(bad)
call
mov
test
mov
lock
push
mov
cmps
mov
cmp
(bad)
(bad)
mov
inc
mov
mov
pop
repz
adc
mov
adc
retf
add
add
aaa
(bad)
sbb
sbb
(bad)
(bad)
mov
bound
jbe
repnz
es
dec
jecxz
pop
sub
cs
xlat
xor
retf
mov
(bad)
(bad)
(bad)
fmul
sbb
js
ss
add
int3
sbb
and
inc
dec
(bad)
(bad)
(bad)
ds
mov
jg
fucom
call
dec
fs
cld
ret
adc
stos
sar
(bad)
dec
in
mov
out
pop
mov
iret
mov
popa
pop
dec
add
shl
(bad)
inc
mov
stc
in
sub
sbb
add
xor
xchg
fiadd
lea
out
jnp
pop
sub
call
jmp
jbe
movq
push
xor
movd
sbb
push
sbb
fmul
xor
clc
shl
(bad)
jge
sub
push
mov
js
outs
cmp
mov
(bad)
mov
scas
mov
xchg
fwait
sbb
and
in
pusha
dec
xor
imul
and
(bad)
(bad)
jmp
fadd
xchg
push
push
fsubr
call
mov
cmp
in
fbstp
lea
gs
jmp
mov
(bad)
out
leave
jo
(bad)
sub
enter
into
cld
dec
aaa
xchg
aam
pusha
faddp
cmp
(bad)
enter
pushf
call
pop
sti
(bad)
dec
push
sahf
cmps
cmps
fwait
dec
cmp
cmp
into
cmp
cli
clc
mov
and
xchg
push
jl
(bad)
(bad)
call
push
neg
(bad)
shl
inc
sti
dec
cmp
repz
es
mov
bound
jmp
in
rcr
jno
mov
out
lods
inc
es
pusha
jge
sub
arpl
mov
daa
cmp
dec
je
daa
mov
push
xchg
xor
add
inc
jns
push
(bad)
(bad)
(bad)
push
adc
sbb
and
sub
sbb
outs
test
retf
cmp
xor
push
rcl
xchg
stos
jne
cdq
sahf
jmp
addr16
cmc
push
mov
jg
(bad)
(bad)
mov
pop
mov
daa
cmps
pushf
out
out
lahf
mov
push
scas
jmp
int3
jbe
(bad)
(bad)
call
mov
js
and
(bad)
iret
mov
lock
mov
jecxz
pop
in
call
imul
(bad)
push
dec
lods
sub
xchg
push
retf
cmp
xor
sub
icebp
pusha
xor
mov
add
idiv
sub
or
sbb
inc
push
mov
sahf
stos
(bad)
jg
pop
push
pusha
pop
xor
pop
or
icebp
js
push
add
add
rcr
adc
dec
in
add
jmp
ins
lock
and
(bad)
pop
(bad)
push
shl
mov
xchg
mov
daa
hlt
sub
pop
mov
stos
cmc
ja
xor
jns
mov
pop
int3
dec
mov
sub
pop
ret
loope
div
add
shl
jb
inc
in
mov
not
out
add
dec
pop
vpmovmskb
ins
iret
push
shl
mov
(bad)
(bad)
(bad)
jmp
in
sbb
(bad)
(bad)
shl
arpl
(bad)
clc
scas
cmp
outs
lods
push
stos
cdq
ins
mul
inc
js
call
dec
mov
dec
or
sub
pop
popa
xor
(bad)
call
sbb
retf
mov
push
popf
cmp
push
sub
cmc
lods
fld
mov
push
sub
in
inc
(bad)
(bad)
(bad)
jmp
rcr
mov
cmp
stos
inc
or
in
xchg
push
inc
jb
movs
aaa
add
scas
mov
jle
mov
hlt
and
and
add
push
ret
dec
loop
cwde
ret
push
mov
jge
sub
sbb
daa
xchg
(bad)
mov
iret
shr
or
test
(bad)
out
cli
call
call
(bad)
test
push
shl
or
idiv
std
fcomip
jge
add
add
cdq
test
into
data16
int3
push
loope
(bad)
jg
jle
jb
adc
or
ds
adc
(bad)
jmp
retf
cmp
mov
(bad)
mov
fnsave
icebp
and
ja
scas
(bad)
mov
sub
sahf
sbb
arpl
(bad)
(bad)
(bad)
call
repz
sub
adc
shr
jecxz
add
add
cmc
test
sbb
mov
mov
call
mov
fs
fs
pop
mov
idiv
mov
dec
(bad)
ror
js
pushf
sbb
inc
adc
sub
call
stc
sbb
push
sub
mov
mov
and
adc
cli
call
and
fadd
aam
pop
andnps
loopne
cmc
jle
mov
in
sbb
jbe
fstp
(bad)
ja
and
call
dec
lock
out
(bad)
addr16
or
rol
ret
dec
pop
sub
stc
pushf
leave
cmp
jmp
sub
fst
loopne
scas
shl
jmp
lods
jns
pushf
call
fcom
(bad)
jg
xor
imul
mov
mov
out
(bad)
jle
outs
adc
stc
(bad)
(bad)
(bad)
cli
(bad)
ja
fidivr
xchg
aad
test
push
stos
mov
test
clc
or
shl
(bad)
(bad)
(bad)
push
cmp
mov
lahf
jle
xchg
fnstsw
std
sub
add
jo
mov
mov
(bad)
(bad)
call
pop
lds
inc
mov
pop
add
push
dec
jmp
call
and
or
(bad)
jne
(bad)
inc
jmp
mov
jecxz
mov
(bad)
mov
cmp
sub
pushf
adc
test
mov
ret
pop
std
stc
xchg
cld
(bad)
(bad)
push
sti
btr
or
sbb
les
and
fs
dec
int3
mov
and
into
imul
sti
out
dec
push
xchg
ret
stos
cs
mov
cmps
or
dec
nop
pop
push
sar
inc
mov
fidivr
jg
pop
stos
ins
adc
jnp
les
cmp
mov
dec
jbe
cmp
sub
and
cmp
(bad)
inc
inc
retf
sub
cmps
dec
outs
clc
adc
test
loopne
and
xchg
aas
out
adc
xchg
mov
lea
clc
(bad)
call
inc
add
loope
mov
into
sbb
inc
enter
shl
push
lock
jmp
sahf
lods
adc
ins
jbe
ss
pop
mov
(bad)
(bad)
dec
sub
cdq
jae
mov
fs
leave
jne
bound
fcomip
(bad)
call
cdq
ret
repz
fdivrp
jp
push
in
nop
ins
test
mov
test
push
xor
mov
nop
mov
clc
loope
pop
jno
(bad)
mov
mov
adc
dec
enter
(bad)
mov
mov
mov
cmp
pushf
retf
icebp
(bad)
(bad)
(bad)
jp
mov
ss
xor
js
jae
mov
xchg
enter
and
push
mov
ret
pop
arpl
mov
stos
mov
pop
add
(bad)
call
xchg
mov
adc
xchg
scas
xchg
(bad)
(bad)
jg
sbb
jg
xchg
into
mov
idiv
imul
rol
retf
fistp
out
movs
jae
mov
dec
ja
push
lea
dec
lods
nop
sbb
and
sti
outs
jp
das
cmp
mov
mov
inc
cs
dec
pop
cmps
jae
adc
shr
jmp
mov
gs
call
clc
push
in
mov
cmp
ds
aam
sub
inc
add
ja
xor
call
lods
inc
push
bound
and
repnz
xor
fisttp
lock
call
ret
fstp
add
sbb
pop
loope
(bad)
(bad)
jmp
cdq
call
daa
stos
jno
int3
sub
pop
sub
adc
or
(bad)
(bad)
(bad)
(bad)
in
jge
mov
mov
dec
ror
das
sub
mov
and
xchg
ss
adc
adc
(bad)
(bad)
(bad)
jmp
inc
pusha
add
ins
push
addr16
or
sub
int3
or
adc
jge
(bad)
(bad)
push
imul
mov
outs
repnz
lds
cvtps2pi
mov
mov
jmp
push
and
adc
popa
inc
inc
call
mov
inc
(bad)
(bad)
(bad)
mov
outs
dec
mov
add
ss
(bad)
popf
das
pop
jp
xor
clc
callw
(bad)
(bad)
(bad)
call
or
push
add
push
xor
pop
ins
inc
pop
mov
fs
mov
sub
sub
adc
jmp
int
cwde
cli
pop
in
in
out
dec
add
shr
jno
dec
out
(bad)
(bad)
(bad)
inc
rcr
dec
mov
mov
test
push
xchg
ds
aam
xor
(bad)
(bad)
jnp
xchg
les
or
jnp
enter
jo
dec
dec
ins
loopne
inc
add
dec
add
dec
call
inc
ss
mov
int3
call
sub
int
pop
cwde
or
mov
call
push
adc
or
dec
xchg
jmp
cmp
pop
inc
cmps
shl
cmp
imul
ret
dec
cmps
jbe
cmp
push
xchg
int
(bad)
loope
ins
mov
cld
jmp
inc
add
or
mov
les
(bad)
(bad)
jmp
inc
sub
mov
in
xor
adc
aad
dec
repz
loop
mov
(bad)
cmps
iret
dec
pop
call
(bad)
inc
arpl
mov
inc
imul
add
add
(bad)
out
dec
pop
xchg
mov
sub
cld
(bad)
dec
sahf
cmp
scas
dec
outs
inc
(bad)
loopne
xchg
std
fwait
mov
sbb
pop
loop
mov
inc
test
test
add
(bad)
(bad)
(bad)
dec
ror
jbe
xchg
sbb
add
push
imul
(bad)
icebp
(bad)
(bad)
(bad)
inc
ss
sbb
jns
mov
and
jbe
inc
xchg
arpl
in
push
add
loope
push
ja
repnz
into
rol
dec
in
jecxz
clc
inc
gs
jmp
outs
mov
or
adc
call
ins
pop
test
cwde
mov
imul
test
mov
std
xchg
cs
mov
add
(bad)
jmp
and
jge
es
push
xor
or
adc
sbb
adc
test
ficomp
inc
inc
test
add
sbb
xlat
repz
das
cli
aaa
std
inc
and
lods
js
sbb
cld
mov
fstp
xchg
into
mov
not
ja
cmc
cmp
call
push
out
fidiv
fimul
push
fild
aaa
adc
pop
sbb
in
xchg
cmc
sti
add
and
mov
std
out
mov
das
fcom
(bad)
call
jl
mov
pusha
pop
push
addr16
cmp
cmp
(bad)
outs
sbb
(bad)
(bad)
(bad)
inc
repnz
sti
out
pop
sub
jge
jbe
inc
push
mov
sbb
cmp
pop
sub
mov
adc
call
xchg
push
sahf
call
outs
and
js
cld
or
stos
(bad)
jmp
and
fwait
mov
and
add
mov
jae
fwait
sub
das
sar
or
or
mov
(bad)
(bad)
(bad)
fistp
shl
jmp
add
movs
and
addr16
gs
mov
mov
(bad)
(bad)
jg
jb
mov
addr16
mov
push
js
jmp
xchg
cdq
cmp
rol
mov
xor
adc
inc
pushf
sub
idiv
dec
pop
cld
and
(bad)
fadd
into
fisub
ja
jmp
push
stos
aad
pop
jl
adc
(bad)
xchg
retf
inc
push
aas
(bad)
(bad)
out
mov
add
mov
xchg
and
jg
xlat
mov
or
push
add
(bad)
jmp
and
rol
push
add
push
mov
cmp
cmp
je
adc
mov
(bad)
(bad)
(bad)
call
mov
loop
cmc
je
lds
iret
jl
je
inc
sub
sub
ss
je
(bad)
(bad)
(bad)
inc
imul
addr16
mul
push
int
js
pop
test
add
(bad)
(bad)
(bad)
call
enter
out
stc
shl
xor
aad
test
lahf
scas
rol
inc
adc
(bad)
(bad)
(bad)
dec
and
push
sub
sub
jg
in
sub
xchg
clc
das
es
and
jns
pushf
sub
and
loopne
inc
mov
sbb
cmp
cmp
(bad)
(bad)
dec
or
into
mov
jge
icebp
(bad)
in
mov
std
imul
cli
mov
repz
test
inc
adc
adc
xchg
xor
test
sub
aaa
fwait
pop
mov
pushf
push
test
xchg
ja
inc
int3
mov
mov
or
std
call
cmp
and
cmp
(bad)
(bad)
mov
cwde
push
test
(bad)
neg
jmp
test
sub
cmp
or
xchg
gs
pop
mov
rcr
and
outs
retf
mov
(bad)
adc
push
pushf
cmp
sub
or
cmps
push
dec
lock
cld
sar
jmp
sbb
add
stc
scas
hlt
mov
inc
sbb
(bad)
call
inc
xor
sbb
jae
in
fidiv
(bad)
(bad)
jmp
push
jnp
inc
js
and
pusha
pop
xchg
push
push
call
pop
lsl
mov
(bad)
mov
cmps
clc
sahf
out
mov
outs
arpl
inc
retf
mov
(bad)
(bad)
inc
ss
rcr
dec
pop
pop
cdq
sub
inc
dec
sbb
stos
pop
push
ss
addr16
in
lds
adc
mov
inc
jge
add
push
test
lods
inc
add
(bad)
(bad)
(bad)
inc
jne
cs
jmp
(bad)
(bad)
(bad)
jecxz
xchg
retf
(bad)
call
das
sar
or
in
dec
stos
(bad)
push
repnz
mov
inc
hlt
rol
int
mov
jge
inc
jo
add
cld
mov
push
nop
movs
xor
lds
dec
(bad)
cmp
jmp
cmp
jae
test
jle
and
repnz
stos
pushf
inc
xor
jmp
aas
mov
push
sbb
ror
mov
(bad)
xor
push
nop
into
imul
sbb
cmp
push
push
(bad)
(bad)
push
shl
dec
dec
sub
jmp
adc
dec
je
retf
sbb
mov
cmp
dec
(bad)
mov
push
addr16
inc
call
fbstp
lea
(bad)
(bad)
out
xchg
xchg
mov
repz
xchg
jle
mov
inc
or
lock
jne
pusha
call
(bad)
dec
push
and
cdq
dec
xchg
dec
push
xchg
(bad)
mov
rcr
(bad)
inc
pop
xchg
xchg
movs
shl
dec
ins
pop
add
in
jo
jp
xchg
mov
aaa
out
cmp
aad
lock
sbb
aas
(bad)
(bad)
(bad)
(bad)
fisttp
jl
inc
jno
xchg
cmp
push
pop
inc
movs
std
jecxz
sbb
retf
jge
scas
(bad)
(bad)
jge
mov
in
in
iret
mov
rcl
inc
call
icebp
leave
inc
cld
(bad)
(bad)
sub
jmp
lods
push
retf
xchg
sbb
(bad)
(bad)
jmp
jb
mov
cmps
test
lahf
mov
shl
out
sbb
in
icebp
sbb
jb
fwait
cmps
xchg
shl
ret
add
xchg
sub
ds
(bad)
(bad)
jmp
mov
icebp
push
dec
dec
arpl
aaa
and
and
mov
test
inc
addr16
pop
adc
jmp
jecxz
or
pushf
cmps
adc
push
test
mov
sti
or
in
daa
mov
ret
(bad)
out
inc
clc
jmp
jle
dec
scas
mov
hlt
pop
sahf
mov
pushf
xchg
shl
mov
popf
adc
outs
adc
cmc
pop
fbstp
sbb
(bad)
call
sar
fdiv
mov
push
jl
jge
pop
lods
into
int
mov
(bad)
jg
or
mov
inc
repz
ds
mov
repnz
mov
ins
lahf
scas
push
sbb
cdq
gs
inc
add
cmps
cmp
pop
movs
push
jg
jmp
sub
rcl
fadd
into
adc
adc
ret
fisttp
gs
cli
sti
add
outs
sub
movs
test
jmp
(bad)
(bad)
mov
adc
pop
jmp
xchg
mov
imul
(bad)
(bad)
call
shl
push
daa
loopne
cmp
sbb
fs
ins
loope
scas
and
int
lds
(bad)
jmp
xchg
pop
adc
loop
test
clc
lods
xchg
jb
aaa
mov
mov
jmp
pop
rcl
mov
xor
call
adc
xchg
add
(bad)
(bad)
(bad)
dec
xor
mov
retf
xchg
push
stos
sar
lock
add
sahf
movs
(bad)
(bad)
(bad)
call
pusha
mov
pop
and
das
fistp
not
cmp
push
(bad)
(bad)
(bad)
jmp
pop
jg
jbe
jge
data16
ss
xchg
les
jmp
cwde
pop
mov
push
(bad)
(bad)
(bad)
(bad)
clc
sbb
sysexit
mov
pop
cli
mov
sbb
dec
push
ds
ja
adc
(bad)
(bad)
jmp
ret
nop
dec
ss
cld
adc
jb
cmp
push
lahf
imul
pop
clc
ds
jb
xchg
fidivr
(bad)
call
lods
jb
or
es
ss
movs
adc
add
adc
add
cld
cli
xor
(bad)
jmp
pop
adc
mov
xor
cld
repz
(bad)
(bad)
(bad)
(bad)
mov
mov
or
xchg
cli
dec
mov
shl
out
dec
add
dec
(bad)
(bad)
(bad)
(bad)
jmp
lea
dec
add
sbb
sub
mov
ret
aam
sub
push
and
andps
and
(bad)
(bad)
(bad)
jmp
push
dec
mov
(bad)
cmp
and
cmp
mov
push
cdq
imul
jae
(bad)
(bad)
jmp
mov
scas
js
sbb
xor
int3
sub
in
push
push
xlat
aam
jmp
push
outs
cmp
or
xchg
repnz
aaa
inc
mov
push
mov
inc
retf
sbb
pusha
push
imul
stos
mov
hlt
and
call
or
leave
pop
(bad)
fisttp
je
jp
mov
(bad)
out
es
jmp
inc
inc
dec
bound
jecxz
das
jmp
es
gs
stos
push
addr16
xor
ss
repnz
je
ja
test
xchg
lods
jmp
out
mov
lods
ret
(bad)
idiv
in
in
xchg
xlat
mov
cmp
xor
xor
jg
(bad)
call
(bad)
jbe
shr
pop
jbe
bound
and
push
mov
(bad)
jmp
icebp
aam
movs
int3
sti
call
rcr
inc
xchg
adc
dec
sub
add
cmps
(bad)
(bad)
jmp
push
xor
mov
(bad)
icebp
jl
dec
mov
shl
clc
call
xor
gs
mov
jle
test
(bad)
(bad)
inc
fidiv
and
pop
or
fdiv
sbb
add
scas
dec
leave
adc
mov
outs
ds
into
test
loopne
js
add
push
pop
fidiv
jmp
mov
sub
(bad)
(bad)
mov
and
adc
adc
mov
repnz
movs
(bad)
mov
lock
mul
jle
sub
push
out
mov
cmp
cdq
mov
jnp
(bad)
addr16
(bad)
(bad)
dec
call
div
adc
mov
xor
jbe
xor
cli
dec
mov
neg
int3
sub
inc
cld
aaa
into
push
imul
inc
jmp
mov
inc
xor
loopne
call
ja
pop
in
lahf
sbb
sbb
mov
stos
movs
pop
(bad)
(bad)
call
push
push
daa
jmp
xor
mov
hlt
call
xchg
shl
inc
cmc
cmp
mov
adc
(bad)
jmp
inc
stos
sbb
outs
test
and
push
outs
popa
xor
outs
mov
pop
lods
adc
aas
mov
test
out
adc
cmp
jmp
adc
pushf
or
or
call
push
lahf
and
popa
adc
cmp
mov
or
(bad)
mov
cmp
(bad)
mov
pop
shr
push
je
jmp
push
test
fldlg2
sub
int
std
popa
loopne
std
loop
adc
adc
mov
(bad)
jmp
inc
ret
test
ret
sub
mov
inc
add
out
inc
and
les
xchg
push
mov
out
retf
pop
cmps
mov
push
dec
stc
adc
cli
ret
popf
pop
pop
loop
pop
popf
cmp
(bad)
(bad)
call
inc
add
xchg
out
neg
add
mov
pop
inc
inc
(bad)
out
clc
jg
cmp
mov
adc
cmp
push
xor
adc
loope
(bad)
call
test
pop
das
and
push
mov
xor
jnp
rcl
cdq
cmp
or
outs
cmp
mov
mov
jns
enter
leave
clc
(bad)
(bad)
cmp
jo
dec
and
stos
mov
and
jmp
pop
shl
mov
test
cmps
js
ret
in
and
(bad)
push
arpl
fs
add
or
adc
pop
xor
pop
sub
add
out
ret
outs
fbld
sti
(bad)
xchg
pop
(bad)
push
cld
cs
(bad)
arpl
mov
mov
es
pushf
shr
push
cmp
jge
(bad)
fs
or
fdivp
clc
sahf
(bad)
fisttp
jmp
cs
out
xchg
dec
mov
dec
cs
imul
xchg
in
xor
adc
mov
xor
cmp
and
sahf
imul
dec
(bad)
hlt
rcr
pop
xor
adc
xor
clc
xchg
mov
inc
and
(bad)
jmp
popa
movs
cmps
cdq
xchg
or
lahf
and
enter
enter
sub
mov
and
sbb
(bad)
mov
or
in
clc
jle
inc
xchg
(bad)
(bad)
(bad)
(bad)
jp
fdivr
adc
pop
cmp
mov
popa
mov
imul
cmps
addr16
push
cld
pop
fucomp
mov
mov
xchg
dec
ins
inc
bound
imul
(bad)
(bad)
(bad)
fdivp
and
or
xor
mov
dec
sbb
mov
jns
and
(bad)
(bad)
(bad)
mov
mov
push
jno
getsec
into
adc
add
iret
cld
jmp
(bad)
jmp
pop
retf
xchg
(bad)
(bad)
(bad)
jmp
pop
pop
in
add
sub
mov
pop
rol
inc
dec
xchg
jno
push
add
leave
dec
scas
jge
inc
sbb
loope
(bad)
jl
inc
movntq
int
stos
(bad)
call
das
jle
jne
pop
outs
inc
push
not
loopne
xlat
lea
mov
int
add
icebp
(bad)
(bad)
(bad)
(bad)
jmp
pop
in
enter
sub
int
dec
mov
sub
or
and
mov
pop
add
rcl
dec
mov
mov
cld
inc
push
adc
rcr
push
hlt
int3
dec
fucomi
call
cmps
stos
lock
repnz
add
(bad)
(bad)
inc
mov
rol
dec
(bad)
nop
dec
and
pop
xchg
movs
aaa
pop
push
jne
pop
or
mov
xor
pusha
push
(bad)
xchg
sar
push
pop
ss
jbe
pop
in
add
adc
sub
mov
aas
(bad)
mov
imul
sub
fld
lods
sub
(bad)
(bad)
dec
or
adc
jb
sbb
mov
sbb
jl
nop
push
ja
(bad)
(bad)
inc
mov
push
mov
hlt
mov
jno
aas
pop
out
adc
inc
test
lods
add
add
inc
fidiv
(bad)
in
dec
push
aaa
and
cmp
fwait
pop
dec
push
fs
mov
lock
(bad)
inc
mov
push
sub
arpl
add
add
jecxz
add
mov
repz
cmp
add
imul
(bad)
(bad)
jg
mov
sahf
loopne
lods
sar
dec
lods
ret
cld
enter
mov
(bad)
inc
pop
and
enter
mov
push
(bad)
clc
adc
jge
inc
cmp
and
cmps
inc
add
adc
out
inc
xchg
sbb
add
(bad)
clc
and
cmc
int3
pop
mov
adc
dec
pop
clc
(bad)
call
das
jmp
push
mov
adc
mov
stos
xchg
test
aas
int
xor
cmp
adc
add
and
sub
loopne
lock
outs
pushf
std
loopne
lock
shl
jg
bound
clc
out
xchg
cdq
mov
div
iret
iret
stc
mov
scas
jmp
call
test
scas
cmps
dec
pop
shl
push
adc
into
mov
jmp
add
ds
and
shl
nop
rcr
cld
xor
jns
add
iret
xchg
mov
rcl
add
jmp
cmp
push
mov
mov
in
xchg
mov
sbb
and
dec
pusha
nop
(bad)
jg
nop
repnz
or
and
(bad)
(bad)
call
xchg
cmps
leave
sub
xchg
xor
sbb
cld
ret
loope
adc
test
nop
xor
inc
push
jg
(bad)
(bad)
inc
sahf
mov
sub
stc
loope
(bad)
pop
add
into
nop
dec
fnstenv
cwde
or
(bad)
call
int3
mov
mov
stc
cmp
mov
sbb
jg
(bad)
jmp
sbb
repnz
(bad)
daa
repz
popf
pop
sub
(bad)
sub
pop
push
(bad)
jmp
mov
outs
into
outs
fisttp
push
pop
out
movs
popf
cmp
adc
sub
cmp
mov
mov
cmps
inc
xor
add
add
jo
adc
and
(bad)
(bad)
push
and
(bad)
or
pop
ins
lea
fcom
xchg
mov
(bad)
(bad)
(bad)
dec
cdq
add
in
adc
rol
xchg
mov
shl
and
add
mov
adc
ret
dec
out
sub
xchg
adc
add
mov
enter
jo
js
or
(bad)
(bad)
out
xor
pop
(bad)
nop
sub
mov
dec
daa
add
mov
enter
mov
xchg
je
cmps
jno
test
inc
ret
inc
(bad)
(bad)
jmp
inc
xchg
adc
inc
pop
aaa
pop
mov
sbb
pop
je
(bad)
(bad)
call
lds
call
mov
mul
outs
retf
fwait
popf
ins
popa
ins
cs
je
mov
sub
clc
(bad)
(bad)
(bad)
push
jae
cs
mov
sbb
jno
or
sub
add
pusha
shl
call
pop
cmps
xchg
std
(bad)
lar
psubusb
add
hlt
les
jg
jmp
xchg
sti
lea
xor
push
in
sub
jmp
call
jmp
jge
lock
jne
sbb
xor
(bad)
(bad)
jg
push
(bad)
xor
imul
mov
push
cmp
mov
add
cli
shr
sar
jmp
mov
and
cmp
(bad)
call
adc
jp
popa
inc
add
gs
(bad)
mov
mov
mov
cmp
ins
(bad)
(bad)
(bad)
(bad)
cmp
mov
pop
imul
fs
adc
inc
ret
out
js
pop
cmp
push
jne
pushf
outs
lahf
hlt
jmp
mov
leave
std
sub
das
dec
and
sbb
(bad)
aas
cmp
jmp
outs
iret
les
or
(bad)
xlat
jbe
dec
in
and
mov
(bad)
call
mov
jne
js
ret
ror
sub
pushf
add
(bad)
jg
in
sbb
retf
or
sub
sbb
adc
and
push
clc
movs
or
mov
mov
pop
push
jge
pop
add
imul
out
sub
shl
cmp
pop
fistp
std
jg
dec
ja
push
mov
push
sbb
ret
cmp
adc
call
xchg
push
cld
and
push
sbb
cmp
aas
xchg
push
jmp
(bad)
mov
inc
jbe
xor
mov
fcomp
add
mov
sar
rol
jle
das
xor
daa
stos
sub
push
cmp
xchg
je
bound
sub
stos
xchg
jb
xor
popa
fistp
xchg
push
adc
cld
(bad)
(bad)
jle
mov
push
lock
xchg
xor
mov
fistp
adc
dec
out
adc
shl
mov
add
jb
cli
inc
mov
mov
pop
test
jae
jmp
adc
cdq
aam
xchg
fidiv
loop
aas
or
cld
xchg
push
mov
das
jl
pop
jmp
(bad)
fistp
aas
cmp
jno
in
adc
loope
std
sti
stos
mov
mov
fild
jp
(bad)
sti
xlat
dec
or
pop
mov
mov
idiv
(bad)
(bad)
mov
call
cmp
jns
add
rol
sahf
icebp
or
ds
mov
into
sbb
stos
cmp
add
mov
mov
pop
mov
mov
sbb
int
call
fwait
(bad)
(bad)
inc
xchg
repnz
mov
sub
sub
loope
inc
or
cmp
(bad)
(bad)
jmp
and
inc
add
pop
add
loopne
pop
adc
and
adc
and
add
call
add
add
sub
rol
(bad)
(bad)
(bad)
mov
ins
push
pop
mov
sbb
pusha
or
repz
pusha
mov
mov
out
cmp
repz
out
push
cld
(bad)
call
sub
movs
repnz
je
fcmovb
lea
mov
(bad)
lods
movs
icebp
ffreep
pop
pop
loop
leave
xchg
repnz
inc
sbb
(bad)
(bad)
call
rcl
jmp
xor
(bad)
lahf
stc
(bad)
and
mov
arpl
gs
(bad)
(bad)
call
ror
test
add
mov
inc
std
jns
cmc
ss
push
xor
scas
dec
mov
in
inc
jle
pop
mov
js
sub
nop
pop
xor
jmp
sbb
movs
test
adc
lock
and
jg
(bad)
fnstcw
pop
xor
les
mov
dec
dec
and
mov
rol
(bad)
(bad)
(bad)
inc
add
dec
xchg
loope
pop
dec
dec
push
bound
cli
mov
jge
cld
mov
cmovae
jae
(bad)
(bad)
jmp
push
push
xchg
addr16
jge
mov
outs
in
mov
cmp
inc
pop
cmps
js
test
add
mov
cs
std
mov
mov
push
and
cmp
adc
cli
mov
(bad)
mov
imul
add
jle
push
(bad)
cmp
jns
aas
call
cmps
sub
mov
int
pop
aad
jg
dec
xor
inc
leave
mov
test
mov
cmp
jmp
lea
(bad)
in
stos
pop
aam
std
cli
imul
pusha
retf
scas
fcomp
lods
sbb
xchg
retf
retf
inc
inc
add
xchg
imul
test
(bad)
(bad)
push
bound
mov
stc
leave
add
fst
xchg
nop
xchg
jns
cmp
mov
in
inc
(bad)
(bad)
call
or
push
loop
xchg
out
addr16
scas
jecxz
nop
jp
jl
pop
or
bound
push
xchg
inc
jbe
or
repnz
push
clc
add
loope
pop
jp
dec
push
adc
(bad)
(bad)
(bad)
dec
xchg
inc
jnp
call
push
sahf
inc
adc
fyl2x
push
out
cmp
pop
call
dec
(bad)
lods
inc
in
in
inc
std
mov
(bad)
jg
jmp
(bad)
mov
push
(bad)
fwait
les
(bad)
sub
scas
enter
lock
rol
xchg
sbb
cwde
data16
push
daa
or
dec
xchg
(bad)
fisttp
repnz
out
jbe
dec
popf
xchg
cmps
test
(bad)
(bad)
(bad)
mov
cmp
jae
mov
fsubr
and
xchg
not
std
dec
call
aam
daa
test
shr
and
(bad)
push
out
test
add
sahf
test
in
cmp
mov
bound
jg
pop
fisub
or
shr
xchg
cmc
add
or
aaa
add
pop
in
nop
mov
jmp
stc
mov
pop
outs
jmp
mov
nop
(bad)
(bad)
(bad)
call
fdiv
push
inc
call
push
cmc
add
ins
jl
(bad)
call
(bad)
xor
je
popa
inc
fadd
sbb
cmp
ror
push
inc
mov
mov
or
call
fisub
fcos
imul
pop
fld
ror
pop
sub
mov
mov
test
(bad)
(bad)
cmp
mov
lods
and
mov
mov
dec
loop
ror
jo
sahf
jp
mov
out
pop
sahf
mov
(bad)
(bad)
(bad)
jg
push
retf
dec
xor
cs
not
jo
add
add
add
(bad)
(bad)
(bad)
call
sub
xchg
mov
mov
movs
and
and
test
add
push
sar
(bad)
jmp
xchg
add
push
fs
sub
ins
pop
and
and
fbstp
jb
sti
lds
xchg
pop
ins
mov
(bad)
(bad)
(bad)
push
add
aad
imul
pop
out
call
rol
xor
call
dec
dec
or
mov
sub
mov
mov
cmc
cmp
adc
lods
sub
inc
(bad)
fnsave
(bad)
pusha
sub
data16
xchg
in
mov
jle
or
inc
js
jg
jl
arpl
or
(bad)
jg
sbb
inc
xor
fimul
pop
dec
nop
adc
xchg
cmp
lock
(bad)
push
add
(bad)
les
(bad)
inc
xchg
and
movs
pop
adc
jecxz
test
fcomip
(bad)
fucomip
sub
mov
aad
test
pop
push
sub
into
inc
lahf
std
ret
xor
adc
test
dec
dec
xlat
clc
pop
push
add
inc
or
sahf
cmp
sub
sub
(bad)
call
popf
cmp
push
and
inc
mov
add
mul
mov
push
(bad)
(bad)
jmp
push
mov
loope
cmp
add
inc
xor
pusha
scas
enter
sub
ins
bound
xchg
xor
add
(bad)
mov
movs
imul
(bad)
(bad)
jmp
add
mov
jb
imul
lds
pop
mov
(bad)
(bad)
jmp
cmp
add
adc
sub
fcom
push
push
ins
mov
(bad)
call
mov
leave
(bad)
jg
(bad)
bound
push
pop
mov
in
dec
subps
mov
(bad)
dec
inc
int
hlt
ret
cmp
mov
in
jge
pop
call
(bad)
jg
pop
fsubrp
daa
ja
int
fdiv
pop
dec
xor
rcl
mov
movs
pop
mov
push
xchg
shl
inc
out
std
shl
data16
dec
sbb
(bad)
sbb
xor
das
cli
dec
sub
inc
popa
xlat
xor
inc
push
inc
in
mov
or
xor
fs
(bad)
stos
pusha
jmp
cmp
pop
lods
or
push
push
inc
cmp
or
mov
(bad)
jg
repnz
mov
ret
test
dec
repnz
jp
mov
and
inc
dec
add
and
push
ror
jb
push
cs
push
cld
fisubr
mov
(bad)
(bad)
push
cdq
xlat
push
loope
lea
neg
jne
stc
hlt
push
mov
stos
add
lds
mov
lods
inc
sub
(bad)
(bad)
dec
xor
mov
xor
push
test
nop
push
push
mov
fimul
and
(bad)
jl
in
push
lea
or
add
pop
jns
push
(bad)
inc
mov
std
cli
and
mov
(bad)
in
stc
test
inc
in
cwde
jne
push
xor
mov
call
(bad)
mov
mov
jl
pop
dec
popf
and
xchg
sahf
pushf
sub
mov
xor
(bad)
(bad)
inc
jb
mov
and
scas
aam
lock
jl
xchg
addr16
(bad)
and
jnp
icebp
popf
adc
dec
mov
inc
mov
jmp
shr
test
push
enter
fs
fidivr
out
ficom
pop
or
push
test
call
jmp
lock
push
rcl
xchg
mov
push
cmp
adc
sar
(bad)
(bad)
call
mov
cld
or
test
sti
(bad)
call
push
daa
push
mov
cmp
sbb
popa
(bad)
(bad)
(bad)
push
cld
add
mov
and
mov
pop
push
or
pushf
mov
push
xchg
mov
idiv
pop
jg
dec
into
jl
jnp
out
test
jg
cdq
das
adc
(bad)
jmp
ficomp
pop
lods
stos
call
retf
xchg
stos
mov
mov
jo
mov
sub
mov
push
retf
fisub
outs
cli
inc
or
mov
test
fdiv
or
inc
mov
in
sub
or
inc
mov
pop
xchg
xchg
loop
inc
adc
aam
or
and
movs
sub
sti
or
adc
(bad)
(bad)
(bad)
jnp
cwde
pop
test
retf
inc
xor
jb
cmp
jl
add
pop
dec
sub
outs
sar
or
inc
(bad)
(bad)
in
or
pop
mov
mov
pop
test
mov
mov
jmp
dec
das
jb
in
es
pop
outs
push
mov
stc
leave
and
lock
sub
lahf
fwait
jg
(bad)
(bad)
jmp
mov
jge
adc
popa
popa
rcl
add
inc
aad
lock
dec
leave
dec
and
(bad)
jmp
mov
jo
mov
adc
pushf
dec
dec
mov
addr16
call
loopne
leave
xchg
mov
fst
cld
adc
or
xor
call
enter
xor
adc
cmp
pop
(bad)
jmp
cs
pop
push
std
mov
and
cwde
and
push
inc
xchg
imul
sub
or
sbb
push
push
inc
mov
push
lods
pop
dec
inc
pop
jp
mov
adc
cwde
scas
(bad)
or
mov
das
mov
cwde
jae
div
pusha
pop
add
mov
sub
sbb
mov
js
rcr
cwde
aam
pop
adc
pop
hlt
push
cmp
popa
push
mov
sbb
loope
call
sub
sub
stos
jp
(bad)
(bad)
call
inc
es
leave
adc
jmp
test
les
pop
pop
(bad)
jmp
(bad)
jg
ja
(bad)
iret
mov
and
add
cmc
stc
es
(bad)
(bad)
push
push
in
dec
movs
sub
xchg
sbb
call
push
aaa
mov
mov
enter
push
inc
cwde
scas
xchg
sti
sub
lock
(bad)
ror
fdivr
inc
(bad)
(bad)
(bad)
push
mov
shr
fnstsw
jbe
lock
mov
mov
je
jmp
(bad)
push
aaa
or
push
dec
dec
int
mov
jns
jno
dec
arpl
add
jg
(bad)
call
in
sub
push
xchg
push
inc
xchg
xor
mov
loope
cmps
inc
ret
mov
mov
jecxz
sub
pushf
push
mov
(bad)
(bad)
mov
lods
nop
push
test
cmp
cmc
xchg
mov
std
xor
lock
cmc
mov
dec
pop
mov
fs
clc
push
push
and
cmp
js
mov
mov
dec
test
fdivr
(bad)
jmp
mov
retf
push
inc
popa
add
and
mov
dec
xchg
xchg
mov
mov
dec
mov
int
repz
jmp
add
push
sub
fnsave
out
push
fmul
lea
or
cmp
(bad)
(bad)
(bad)
(bad)
fild
xor
add
mov
mov
xchg
std
daa
jmp
(bad)
push
ja
fdivr
sbb
mov
test
std
nop
js
pushf
aaa
aad
cmp
cmp
addr16
(bad)
(bad)
dec
call
enter
ss
push
sbb
add
xchg
mov
jmp
imul
cld
hlt
jle
imul
jmp
loopne
mov
ret
xchg
jbe
neg
test
inc
outs
cmp
mov
aaa
xor
xor
(bad)
(bad)
inc
fild
fwait
xchg
fwait
cmp
sbb
inc
in
cs
push
in
cli
(bad)
(bad)
(bad)
mov
std
and
cmp
pop
test
pop
out
scas
retf
jae
js
push
sbb
nop
ins
jg
retf
(bad)
jg
pop
or
and
or
add
(bad)
(bad)
jmp
or
popf
das
fcomp
cmps
mov
xchg
inc
sub
sti
sbb
loopne
mov
(bad)
mov
mov
ror
cmp
sahf
inc
push
stos
aad
aad
add
dec
(bad)
(bad)
(bad)
dec
repnz
xor
mov
enter
add
test
sub
lods
fmul
jne
mov
push
add
or
inc
mov
pop
into
push
mov
(bad)
(bad)
call
and
sub
ins
xor
mov
mov
ffree
ficom
pop
inc
(bad)
(bad)
call
dec
rcr
or
pop
ja
sti
cmps
mov
fucomip
jnp
adc
adc
ret
sar
hlt
dec
jmp
add
and
das
fidiv
shl
call
fiadd
stos
popa
sbb
xchg
jne
fs
(bad)
dec
bound
fdiv
pop
ins
mov
push
and
and
add
call
pusha
xchg
ss
cmp
mov
and
xor
(bad)
out
adc
call
clc
addr16
std
mov
add
(bad)
jmp
fadd
sub
push
mov
dec
js
retf
(bad)
cmp
imul
hlt
push
shr
adc
sbb
scas
inc
xchg
(bad)
jmp
cmp
add
mov
mov
popa
or
sub
and
sbb
pop
sub
mov
cdq
sub
loope
dec
sti
mov
jnp
cmc
scas
jl
movs
out
ins
(bad)
fcomip
call
rol
popa
xchg
add
cmp
and
movs
add
push
sub
inc
(bad)
(bad)
jg
and
lahf
inc
jae
gs
or
les
(bad)
fnstcw
sub
jg
(bad)
cmp
and
mov
push
ficom
xchg
(bad)
(bad)
dec
(bad)
jo
sar
ins
xchg
push
xor
js
cmp
loopne
arpl
push
(bad)
(bad)
jmp
nop
xor
mov
sbb
ins
mov
jbe
dec
lods
outs
mov
push
xchg
dec
movs
pop
idiv
(bad)
jmp
sub
jg
out
xchg
pop
push
sub
out
push
push
mov
mov
enter
(bad)
(bad)
mov
(bad)
push
cwde
push
cmps
mov
ret
loopne
xor
xchg
aaa
adc
call
dec
xor
sti
loope
stc
iret
mov
cmc
or
jmp
retf
cwde
jo
jp
mov
pop
and
add
mov
paddusw
and
jmp
out
(bad)
aam
xchg
(bad)
fistp
push
cmp
icebp
jae
or
(bad)
call
mov
adc
test
das
xor
imul
jl
rcr
(bad)
(bad)
call
leave
shl
test
push
xor
dec
jns
ret
or
stc
inc
jp
push
(bad)
dec
in
push
or
pop
aas
repnz
les
xchg
std
sahf
mov
sbb
les
push
mov
(bad)
(bad)
(bad)
(bad)
mov
cdq
mov
jmp
dec
(bad)
lods
ins
loopne
sbb
pop
ins
jns
sub
sbb
push
(bad)
(bad)
(bad)
in
mov
and
xchg
mov
mov
and
push
and
std
push
cmp
cmp
inc
shl
inc
ss
(bad)
(bad)
(bad)
jg
and
fwait
daa
fwait
je
dec
inc
dec
out
xor
push
mov
and
mov
sbb
pop
cwde
inc
(bad)
(bad)
mov
je
mov
mov
aad
adc
rol
(bad)
(bad)
jmp
cmc
ret
inc
stos
dec
push
popf
mov
imul
lahf
jbe
xor
dec
lods
sub
lea
clc
adc
adc
push
int3
and
sub
(bad)
mov
hlt
and
inc
in
or
popa
pusha
leave
mov
adc
(bad)
jmp
or
or
pop
daa
xchg
xor
adc
addr16
(bad)
(bad)
dec
outs
cdq
dec
push
xchg
pop
push
xor
vpcmpgtd
pop
loop
cld
jmp
and
cmp
(bad)
push
and
scas
je
fdivr
(bad)
ja
mov
mov
in
cld
(bad)
call
mov
(bad)
pop
jge
sbb
jle
aas
aaa
in
dec
fdivr
inc
xor
shl
sub
gs
or
(bad)
push
(bad)
(bad)
jg
add
fs
mov
loop
div
xor
fmulp
jns
mov
jmp
jbe
ss
jbe
mov
sub
js
pop
and
dec
sub
jbe
mov
adc
xor
cdq
imul
(bad)
icebp
ficom
mov
cmp
add
push
pop
jecxz
(bad)
jmp
add
jmp
sbb
jne
sbb
cdq
jne
or
xchg
data16
mov
mov
nop
retf
add
sub
sub
icebp
or
fild
call
adc
ror
xor
sbb
dec
inc
fstp
out
xchg
out
into
cmp
xchg
jnp
jle
rcr
test
(bad)
(bad)
jmp
dec
pop
(bad)
stos
pop
sub
push
pop
pop
mov
stc
xor
pop
ficomp
jb
ja
mov
mov
loopne
arpl
lea
lahf
fcomp
or
jg
inc
mov
(bad)
jmp
add
fwait
out
(bad)
(bad)
call
mov
adc
or
and
adc
xor
inc
pop
cwde
sub
inc
(bad)
(bad)
(bad)
call
add
xor
nop
jns
xchg
je
inc
shl
mov
(bad)
unpckhps
and
add
(bad)
(bad)
jmp
jno
imul
dec
cdq
jg
xchg
fadd
stos
test
loopne
data16
sub
out
stc
std
mov
(bad)
(bad)
(bad)
call
adc
sti
sbb
popf
shl
loop
fs
inc
lods
jmp
(bad)
call
out
popf
dec
das
cmp
push
cdq
cld
add
inc
pusha
inc
sbb
xor
movs
outs
(bad)
(bad)
(bad)
mov
mov
js
xor
shr
push
pop
push
and
mov
(bad)
jg
in
xchg
jecxz
stos
(bad)
mov
mov
xor
cmp
xchg
adc
loope
mov
xor
push
xchg
out
cld
sahf
(bad)
(bad)
call
sti
push
push
xchg
mov
cmp
inc
jno
fwait
popf
inc
in
or
add
dec
xchg
jl
sbb
or
clc
jmp
fcomp
lods
es
pop
lock
repnz
sbb
dec
sub
test
jmp
or
xchg
pushf
add
push
mov
(bad)
(bad)
(bad)
push
push
daa
out
cmp
push
sub
(bad)
jecxz
jp
shr
hlt
jns
push
arpl
push
dec
dec
mov
call
cmps
int
mov
std
rol
aad
add
mov
cli
(bad)
(bad)
jmp
add
inc
push
rcr
aaa
nop
and
clc
ss
jmp
cmps
pop
jp
shl
sbb
push
push
jo
cs
(bad)
dec
push
cs
jne
(bad)
adc
dec
fneni(8087
(bad)
stos
fwait
outs
xchg
hlt
test
inc
fisubr
(bad)
(bad)
dec
cmps
lods
jmpw
in
ins
js
pop
mov
pop
mov
stos
(bad)
dec
mov
cmc
jg
ins
std
int3
mov
imul
arpl
mov
dec
dec
gs
imul
sbb
jnp
xchg
test
inc
ins
or
sub
(bad)
call
aaa
or
call
dec
mov
out
out
xor
fisttp
sar
(bad)
mov
pop
xlat
mov
inc
lea
and
(bad)
fimul
cmp
sbb
xchg
pop
mov
fwait
mov
icebp
arpl
sub
(bad)
(bad)
(bad)
(bad)
inc
adc
cs
mov
mov
pop
add
push
mov
leave
les
lods
push
pusha
sbb
push
adc
pop
(bad)
(bad)
inc
xor
movs
pop
cmp
into
sub
push
add
retf
cmp
add
(bad)
ds
inc
xchg
cdq
jno
shl
test
sbb
(bad)
lods
push
push
repnz
clc
mov
les
ja
shl
popa
add
(bad)
(bad)
(bad)
mov
imul
in
mov
mov
pop
idiv
xor
mov
(bad)
(bad)
(bad)
(bad)
push
cmp
jbe
mov
inc
scas
mov
(bad)
xor
dec
and
mov
xchg
shr
mov
fbstp
pop
jns
xchg
cmp
les
and
rcl
jo
loopne
(bad)
(bad)
(bad)
cmp
xor
aas
cdq
sahf
lods
in
xchg
and
das
jne
scas
add
push
sbb
lea
xor
dec
loopne
xchg
into
imul
call
dec
outs
sar
push
das
ins
jecxz
ss
fcom
pop
repnz
(bad)
(bad)
(bad)
aas
and
(bad)
call
dec
xor
cld
daa
add
popa
pop
aaa
adc
jle
push
sar
dec
aam
repnz
lods
shl
fild
les
mov
lods
pop
sub
es
std
mov
stos
je
mov
adc
lods
or
xchg
sbb
es
inc
dec
aas
inc
cdq
pop
push
fs
dec
and
and
xchg
shl
daa
push
pop
(bad)
mov
jmp
stc
lock
jno
test
dec
inc
xchg
push
mov
out
adc
or
aaa
cld
xchg
ror
repz
call
xor
cmps
fisub
popf
pop
gs
xchg
mov
xchg
push
(bad)
jns
and
out
mov
mov
pop
jne
xlat
pop
imul
cmp
fcom
popa
(bad)
(bad)
(bad)
push
mov
pushf
loope
stc
mov
in
sbb
cmp
or
add
xor
(bad)
call
push
mov
mov
xor
or
into
iret
jmp
xor
(bad)
(bad)
dec
jb
push
jns
adc
cmp
in
add
mov
jmp
shl
loopne
adc
dec
sbb
push
push
mov
inc
stc
push
sti
or
(bad)
(bad)
(bad)
call
or
dec
popf
rcr
xor
enter
or
(bad)
lock
(bad)
dec
scas
lock
(bad)
adc
or
out
xchg
inc
outs
mov
adc
mov
mov
(bad)
(bad)
push
or
in
or
xchg
inc
jmp
adc
pop
sub
jl
(bad)
mov
(bad)
(bad)
(bad)
ds
lods
cdq
mov
je
sub
or
mov
out
jle
call
(bad)
(bad)
dec
cmp
clc
lock
mov
fdiv
cmp
pop
mov
lock
(bad)
inc
add
lahf
cmp
cmp
xchg
(bad)
sar
movs
jb
and
jns
jecxz
sar
(bad)
dec
pusha
sub
loopne
rcr
mov
mov
fsub
(bad)
push
xchg
mov
jmp
outs
xchg
fidivr
inc
push
cld
jmp
test
scas
jne
dec
cmp
popf
xchg
cmps
ja
cmps
xlat
dec
cmp
data16
cld
cld
(bad)
(bad)
(bad)
out
icebp
loop
cdq
cdq
iret
sub
sub
and
jae
mov
adc
fnstenv
bound
call
dec
cmp
mov
cwde
lds
sbb
xor
(bad)
(bad)
(bad)
fdiv
loope
adc
push
jge
aam
mov
cmp
mov
sar
(bad)
loop
mov
jnp
je
mov
(bad)
sbb
lods
xor
lahf
sub
or
inc
ss
addr16
push
mov
aad
retf
cmps
ins
fdiv
hlt
(bad)
(bad)
jmp
sbb
(bad)
push
pop
outs
jns
inc
mov
jp
sub
(bad)
jmp
ret
ds
int
sub
adc
pushf
inc
cmp
push
in
(bad)
(bad)
jmp
lea
fadd
mov
jbe
popa
daa
push
ret
jl
test
iret
push
sub
gs
jno
(bad)
(bad)
(bad)
call
clc
jle
adc
mov
cmp
xor
mov
jp
adc
(bad)
mov
xor
(bad)
cli
ins
inc
jg
leavew
(bad)
push
sbb
push
dec
shl
retf
loopne
inc
aaa
push
sbb
cmp
add
xchg
adc
mov
call
fstp
sbb
xchg
test
enter
xchg
mov
dec
push
dec
adc
(bad)
(bad)
(bad)
jmp
mov
int3
mov
mov
mov
test
inc
stc
inc
movs
scas
and
push
stc
outs
clc
mov
(bad)
(bad)
mov
push
pusha
mov
mov
les
scas
and
xchg
aaa
in
ficom
ins
jns
sbb
push
std
cs
sbb
dec
mov
aad
push
dec
and
js
push
jnp
(bad)
(bad)
push
or
gs
ins
push
test
jmp
or
cwde
enter
mov
mov
push
rcl
sahf
dec
jns
pop
and
sub
push
mov
pop
sar
call
ds
popa
(bad)
add
outs
outs
jp
fst
(bad)
(bad)
mov
sbb
mov
adc
and
(bad)
jmp
mov
clc
nop
rcl
xor
or
inc
cmp
cmp
in
(bad)
(bad)
jmp
mov
jbe
test
(bad)
or
mov
dec
inc
cmc
sbb
ret
(bad)
(bad)
(bad)
dec
nop
push
dec
sub
or
xchg
or
icebp
jb
push
int3
cmps
in
xor
jmp
(bad)
(bad)
jmp
fwait
rol
sbb
mov
pop
add
adc
jmp
push
(bad)
jmp
pop
aaa
add
add
icebp
mov
xchg
loopne
jmp
xor
mov
fwait
aam
cmp
pop
xchg
int3
push
test
push
movs
xor
xchg
inc
(bad)
(bad)
(bad)
call
stos
imul
and
lahf
pop
repnz
js
sbb
pushf
addr16
out
xor
(bad)
(bad)
call
fidivr
shl
cmp
mov
adc
add
iret
icebp
mov
or
mov
out
adc
(bad)
(bad)
jmp
repz
jmp
es
sbb
ss
xchg
lahf
or
and
or
xchg
jno
xor
fisub
(bad)
(bad)
(bad)
push
mov
push
push
test
mov
test
xor
imul
jno
pop
(bad)
(bad)
(bad)
call
sub
mov
aaa
push
fiadd
push
rcl
or
imul
(bad)
fcomip
(bad)
clc
shl
mov
adc
loopne
xor
xor
(bad)
xchg
dec
cmp
jno
cmp
(bad)
dec
cmp
push
sar
data16
fisubr
loop
scas
gs
js
(bad)
(bad)
inc
cwde
ror
jns
jmp
push
pop
xlat
rcl
cmp
fcom
in
inc
cli
(bad)
(bad)
call
or
inc
mov
cmp
lock
movs
mov
pop
pop
outs
lds
mov
ins
(bad)
(bad)
(bad)
out
inc
outs
jmp
jmp
jne
ret
jbe
mov
mov
mov
pushf
(bad)
(bad)
(bad)
(bad)
ds
jl
mov
mov
dec
jecxz
movs
aad
jae
cmp
sub
add
lock
(bad)
jmp
push
arpl
cmp
xor
cmps
mov
and
(bad)
(bad)
dec
push
dec
and
pop
cwde
mov
and
sub
(bad)
pop
cmps
test
(bad)
call
xchg
dec
inc
std
and
out
jl
xchg
lahf
and
mov
mov
and
rol
in
leave
xchg
iret
and
(bad)
(bad)
call
xchg
in
mov
les
and
cwde
inc
mov
pop
mov
(bad)
(bad)
out
cli
enter
cmp
mov
lock
push
mov
mov
xchg
retf
arpl
(bad)
jmp
stos
jo
xlat
mov
(bad)
mov
loop
out
hlt
nop
dec
pushf
nop
sub
(bad)
(bad)
(bad)
inc
jmp
repnz
xor
sub
sar
or
push
inc
inc
retf
add
(bad)
(bad)
(bad)
(bad)
jp
xchg
loope
imul
mov
fisttp
out
cmp
and
cld
push
and
cmps
adc
mov
(bad)
(bad)
(bad)
jg
repnz
and
loop
push
rcl
dec
movs
call
cmps
dec
mov
jmp
sub
mov
xor
rol
sbb
sbb
and
xchg
or
sub
and
xchg
push
dec
jmp
les
sbb
sub
(bad)
(bad)
fild
sbb
into
jne
sub
jne
xor
pop
jp
outs
imul
loope
xchg
push
push
adc
std
shl
stc
fiadd
jns
sub
fcomip
inc
pop
cmc
in
xchg
in
(bad)
sub
jo
daa
in
cdq
dec
adc
aad
jmp
scas
sbb
dec
push
jbe
pop
mov
or
out
cmc
(bad)
call
mov
mov
mov
shr
push
jmp
sub
rol
add
xor
(bad)
(bad)
out
push
or
mov
and
jge
aas
sbb
sub
movs
shl
and
(bad)
(bad)
(bad)
jmp
aas
fadd
(bad)
mov
xchg
shl
bound
jle
shl
jmp
xlat
call
jmp
mov
int3
(bad)
and
retf
push
cmp
out
mov
(bad)
(bad)
(bad)
call
popf
dec
add
or
xlat
sbb
sub
mov
mov
mov
(bad)
dec
push
je
pushf
stos
xor
mov
jmp
(bad)
(bad)
dec
aas
xchg
test
cmp
mov
mov
mov
jns
jmp
bswap
sbb
into
xchg
sti
out
aas
imul
or
pushf
ja
iret
scas
cli
(bad)
inc
cmps
fdivr
sar
popa
je
sub
mov
push
call
ins
cli
sub
mov
mov
push
es
add
(bad)
(bad)
(bad)
call
pusha
aad
sub
cmp
sbb
and
dec
(bad)
or
pop
cmp
mov
or
(bad)
cmp
mov
out
int
ins
sbb
sbb
inc
lds
arpl
pop
(bad)
(bad)
(bad)
jmp
push
sbb
mov
jbe
mov
call
lods
sbb
fadd
aam
fcos
(bad)
(bad)
push
jnp
xor
xor
inc
arpl
fwait
xchg
pop
pop
ror
aad
mov
(bad)
pop
addr16
clc
(bad)
push
icebp
and
cs
xchg
shl
sbb
pop
or
mov
hlt
hlt
xchg
jo
lea
popf
inc
add
push
xlat
dec
add
xor
sub
dec
adc
(bad)
(bad)
jmp
dec
pop
xchg
mov
cmp
mov
jmp
add
cs
mov
ja
loopne
iret
mov
inc
imul
and
jb
dec
addr16
scas
int3
sub
push
mov
cmc
jo
lods
fucomp
jmp
in
sub
push
mov
ins
mov
clc
(bad)
(bad)
jmp
call
out
mov
scas
jmp
xchg
scas
pop
adc
jmp
out
retf
push
or
or
jecxz
jae
ficomp
mov
inc
cmp
call
mov
jbe
int
lahf
inc
shl
mov
shl
cmp
dec
or
dec
and
inc
pop
inc
lods
(bad)
cmp
jmp
pop
dec
stos
cmp
mov
js
cmp
mov
sub
icebp
jg
add
into
(bad)
dec
xor
mov
cmp
pop
adc
mov
(bad)
inc
(bad)
sub
(bad)
jmp
out
jne
mov
repz
mov
jmp
(bad)
(bad)
mov
mov
cmps
xchg
cmps
push
xchg
ds
je
adc
(bad)
(bad)
(bad)
jmp
imul
xchg
or
nop
pop
add
sbb
mov
push
or
pop
and
rcl
pop
call
sbb
mov
imul
fnstcw
xor
scas
cli
adc
ficom
fldenv
push
xor
dec
dec
mov
stc
ins
loope
aam
pop
in
pop
or
xchg
loop
loop
mov
es
(bad)
(bad)
jmp
sub
sbb
aam
hlt
in
int3
cld
cmp
add
lods
aad
(bad)
(bad)
jmp
dec
cwde
push
push
add
pop
xor
dec
sub
int3
loop
popa
test
in
(bad)
clc
(bad)
(bad)
push
xchg
popf
jne
ins
sbb
enter
push
mov
es
call
enter
dec
inc
movs
mov
jno
imul
(bad)
fnsave
aaa
scas
pop
pusha
hlt
repnz
outs
inc
fnstcw
call
retf
sub
outs
fldcw
add
dec
jecxz
pop
sub
push
movs
lods
jb
pushf
retf
xchg
data16
adc
inc
sar
call
movs
inc
inc
into
inc
in
pop
pop
inc
dec
push
or
or
mov
sbb
clc
jp
xchg
test
loopne
or
push
(bad)
mov
shl
xchg
xchg
adc
call
cs
clc
(bad)
(bad)
jmp
movs
mov
repz
cli
sahf
pop
cmp
fcom
dec
ins
enter
pop
xor
outs
(bad)
out
adc
enter
and
dec
ficomp
stos
push
into
(bad)
(bad)
(bad)
dec
scas
jle
mov
push
fnstcw
test
pop
mov
and
fistp
(bad)
(bad)
inc
mov
xchg
repnz
jmp
lods
xor
fisubr
sub
jmp
lods
arpl
lds
jg
pop
movs
mov
sbb
in
mov
or
push
fsubr
ret
test
pop
test
int3
pop
not
sbb
(bad)
jmp
add
enter
dec
test
jb
dec
sub
aaa
cld
call
je
mov
fs
add
push
push
mov
sar
inc
outs
add
(bad)
(bad)
(bad)
fist
pop
cmp
sti
sub
dec
movs
jl
mov
push
ficomp
sub
(bad)
(bad)
(bad)
push
ret
mov
add
cmp
cmp
cmp
mov
mov
es
es
sbb
ss
cmc
fbld
jns
int3
(bad)
xor
ret
es
jp
cmps
(bad)
(bad)
call
cmps
cli
lods
(bad)
pop
pop
jmp
ins
xlat
add
test
fmul
cmp
(bad)
(bad)
call
jmp
dec
mov
push
adc
imul
shr
(bad)
or
add
push
rcl
mov
adc
and
in
push
(bad)
(bad)
(bad)
jmp
pop
lea
jne
jno
jle
jecxz
jp
mov
push
push
dec
inc
retf
xor
aas
jbe
mov
movs
imul
mov
call
gs
div
test
jecxz
leave
call
inc
nop
jmp
or
xchg
sub
(bad)
inc
xor
popa
shl
jno
scas
(bad)
std
and
loop
loop
sub
xor
jne
pop
(bad)
(bad)
(bad)
jmp
pop
xchg
inc
pop
jnp
cmc
cmps
xchg
xchg
mov
sbb
xchg
scas
das
sahf
jp
jno
adc
inc
adc
add
dec
add
sub
dec
inc
imul
(bad)
(bad)
fistp
or
aad
lahf
push
cmps
fisub
cmps
pop
mov
inc
mov
std
dec
movs
and
scas
xchg
pop
pop
cld
push
mov
jmp
cmps
pop
pop
add
lock
mov
and
adc
(bad)
mov
mov
and
les
xor
mov
mov
imul
loope
adc
adc
test
int
xchg
jno
cmp
cmps
adc
data16
jmp
rcl
call
sbb
mov
dec
cli
sub
adc
(bad)
mov
dec
imul
inc
std
pop
mov
inc
(bad)
arpl
inc
sbb
pop
das
cli
rol
add
mov
ds
and
(bad)
call
push
push
inc
test
enter
gs
fidivr
pop
add
(bad)
(bad)
(bad)
call
sub
retf
xchg
ror
jecxz
stc
adc
xchg
push
mov
and
push
cld
pop
in
icebp
sar
out
pop
jmp
mov
daa
sbb
cmp
mov
push
ds
imul
scas
mov
inc
xchg
sbb
lods
adc
mov
xor
not
dec
xor
pushf
push
cmps
sar
mov
jae
fs
scas
xlat
jnp
(bad)
cld
iret
mov
cli
mov
iret
(bad)
jl
mov
cmp
mov
stc
imul
push
push
js
stos
popf
mov
(bad)
call
test
in
in
mov
jge
scas
jl
out
dec
pop
fidivr
(bad)
call
(bad)
jg
push
ds
and
cmp
mov
pop
jl
mov
jno
push
mov
inc
loop
and
dec
sbb
pop
adc
frstor
ja
daa
cs
add
pop
add
call
ret
inc
in
and
inc
inc
not
cmp
es
frstor
cmp
pusha
sub
iret
lock
aaa
movs
inc
sbb
jmp
add
(bad)
jmp
or
in
mov
loope
xor
cmps
and
lods
push
or
mov
xor
push
repz
(bad)
jg
repnz
loope
xchg
mov
out
stc
out
cmp
mov
adc
add
int
adc
jae
(bad)
(bad)
mov
inc
mov
mov
sub
stos
adc
push
or
push
aas
(bad)
(bad)
fcomip
cld
test
div
mov
pop
out
mov
lock
mov
(bad)
jmp
mov
and
mov
add
int
sub
inc
adc
cmp
sub
cmps
dec
cs
mov
pusha
(bad)
lock
fucomp
sbb
hlt
aad
pop
(bad)
(bad)
(bad)
(bad)
jmp
gs
push
xlat
adc
pop
ins
js
(bad)
fcmove
icebp
(bad)
rcl
pop
inc
push
or
and
(bad)
(bad)
(bad)
(bad)
aas
mov
ss
jecxz
adc
jns
(bad)
mov
leave
cwde
inc
bound
pop
push
(bad)
push
inc
push
loopne
into
rcl
mov
fwait
mov
pop
mov
add
retf
add
sub
push
push
test
jbe
inc
retf
jno
(bad)
(bad)
inc
stc
xor
rol
arpl
mov
sub
or
mov
repz
(bad)
call
(bad)
bound
lea
jge
addr16
inc
xchg
(bad)
test
and
jb
pop
jmp
clc
outs
(bad)
(bad)
pop
int3
sar
sbb
fadd
xor
mov
cs
mov
popa
cmp
or
test
(bad)
(bad)
jmp
pop
pop
imul
push
test
push
sti
pop
inc
(bad)
mov
mov
loopne
test
dec
jae
mov
out
je
and
pop
les
or
outs
inc
sahf
xlat
test
(bad)
jmp
mov
pop
xchg
outs
or
add
scas
dec
hlt
mov
and
shr
loope
pop
sti
je
fsubr
mov
adc
call
push
dec
hlt
xor
add
xchg
mov
out
mov
(bad)
xchg
jbe
mov
test
fidivr
(bad)
cli
clc
rol
call
jecxz
adc
ss
inc
fsub
jmp
pop
jae
test
push
sub
jno
xchg
movs
xor
loop
(bad)
(bad)
(bad)
inc
sbb
fld
shr
das
mov
sbb
test
mov
or
push
xchg
xchg
jnp
dec
add
push
dec
mov
pusha
das
add
je
rol
jmp
cmp
cmp
push
jno
loop
scas
dec
cmp
sub
imul
outs
inc
mov
push
call
jg
mov
sbb
jmp
popf
push
or
add
cmp
sar
jo
xchg
push
inc
add
and
(bad)
(bad)
(bad)
call
and
xor
mov
test
jp
jbe
mov
mov
call
push
mov
xchg
cmc
xor
jmp
adc
mov
push
(bad)
les
out
mov
(bad)
cmp
mov
pushf
add
(bad)
jg
call
mov
pusha
mov
inc
rcr
pushf
mov
retf
cmp
test
mov
mov
lods
bound
jg
stos
sub
adc
mov
es
scas
mov
sub
aaa
mov
cmp
ret
mov
int3
cmp
(bad)
(bad)
mov
push
fld
popa
stc
push
aaa
ins
mov
mov
scas
adc
scas
inc
mov
shr
(bad)
jge
mov
(bad)
(bad)
mov
(bad)
loopne
les
xlat
or
dec
pop
sub
cld
fisubr
and
popa
hlt
or
mov
mov
pop
mov
pop
jnp
stos
jp
cld
loop
ss
jge
arpl
pusha
mov
sbb
(bad)
(bad)
jmp
into
std
test
ja
daa
(bad)
ins
mov
shl
neg
jmp
xor
imul
shl
add
pop
sahf
push
mov
jmp
push
mov
sbb
sbb
cmp
dec
bound
popa
xor
sub
call
shl
(bad)
call
mov
xchg
imul
push
push
jecxz
mov
ret
xor
lods
(bad)
(bad)
(bad)
jmp
or
and
cmp
pop
test
stc
add
pop
or
and
xor
(bad)
jmp
(bad)
shr
jge
jg
pop
pusha
lods
nop
cmps
mov
jne
popf
das
fdivrp
xchg
mov
call
call
neg
mov
cmp
divps
call
push
mov
repnz
dec
pop
nop
push
mov
icebp
ret
adc
cmp
(bad)
(bad)
dec
call
jb
sbb
push
pop
inc
push
mov
jecxz
mov
jb
(bad)
(bad)
(bad)
fidivr
xor
scas
(bad)
fiadd
xor
push
retf
xor
sti
mov
or
(bad)
fcomip
imul
dec
or
fdiv
ds
mov
shl
mov
inc
push
jge
or
stc
inc
in
mov
push
clc
pop
(bad)
jg
push
(bad)
xor
xor
xchg
dec
test
test
call
cld
jmp
jg
daa
out
fisub
popf
push
gs
xor
(bad)
(bad)
(bad)
call
fwait
ror
add
and
add
push
push
cld
xchg
mov
(bad)
call
call
sbb
xor
mov
adc
(bad)
test
scas
fnsave
dec
push
mov
sbb
outs
push
sub
mov
pushf
dec
mov
int
mov
push
fisttp
cmp
(bad)
(bad)
push
mov
cmp
cmc
and
and
sub
add
(bad)
mov
sbb
cwde
pushf
sub
stos
imul
bound
pop
pop
pop
pop
mov
shl
ins
mov
dec
and
aaa
sub
adc
(bad)
(bad)
(bad)
cmp
dec
xchg
jb
gs
pop
pushf
cmps
pusha
daa
(bad)
retf
xchg
and
out
out
lods
inc
loopne
mov
pop
hlt
fstp
icebp
(bad)
(bad)
call
mov
sub
push
jo
adc
das
not
(bad)
mov
ror
(bad)
(bad)
(bad)
push
xor
bound
cwde
push
ss
outs
jbe
shl
dec
and
mov
cs
adc
dec
push
clc
(bad)
add
(bad)
(bad)
sbb
or
or
sub
sbb
dec
mov
sub
repz
(bad)
mov
adc
jae
push
das
iret
adc
mov
movs
(bad)
jmp
pop
push
cli
ds
out
(bad)
jae
inc
cmp
add
push
fisub
cli
add
inc
(bad)
(bad)
(bad)
jmp
sar
add
arpl
xchg
out
mov
(bad)
xchg
add
jns
xchg
lock
(bad)
inc
xlat
jb
into
mov
movs
shl
out
add
mov
jl
xchg
(bad)
(bad)
jg
bound
hlt
cmp
pop
add
sbb
push
adc
(bad)
(bad)
(bad)
call
xchg
adc
sub
ja
push
add
clc
mov
pop
in
out
aad
jne
jns
(bad)
(bad)
(bad)
jmp
stos
je
fs
adc
add
dec
icebp
push
stc
push
ret
scas
cs
sbb
dec
add
cmovne
jno
xor
test
(bad)
inc
mov
push
or
cmps
fs
adc
add
mov
jmp
xor
push
and
aas
clc
(bad)
cmp
js
aaa
mov
mov
(bad)
fcomip
inc
mov
inc
mov
fadd
and
iret
mov
mov
and
mov
inc
cs
add
pop
jg
jp
iretw
push
and
js
jmp
sar
jle
push
fsubr
cs
aas
sti
xor
cmp
fdivp
cmps
push
call
aad
fcomip
cs
js
mov
(bad)
(bad)
out
fistp
idiv
mov
iret
(bad)
in
mov
retf
pop
lods
icebp
icebp
fs
popa
div
jecxz
lds
mov
test
mov
cmp
div
scas
out
cwde
dec
imul
les
(bad)
mov
adc
sbb
outs
add
dec
fdiv
les
add
call
jle
test
cmp
popa
test
(bad)
cmp
call
mov
jmp
xor
and
fcmovbe
sbb
jno
aaa
mov
xchg
(bad)
(bad)
call
rcr
adc
ror
mov
fcomi
daa
dec
stos
mov
xchg
xchg
mov
(bad)
(bad)
(bad)
jmp
dec
mov
nop
mov
or
(bad)
dec
gs
xor
cmp
add
(bad)
(bad)
call
leave
xlat
lods
sbb
xlat
xchg
jns
cdq
xor
mov
rol
(bad)
(bad)
(bad)
(bad)
js
imul
icebp
pusha
xchg
sbb
add
xchg
ins
mov
jmp
dec
stos
cmc
adc
into
lods
jl
xchg
daa
mov
push
out
fnstsw
scas
mov
movs
push
adc
pusha
sbb
or
out
clc
mov
inc
dec
cmp
push
add
punpcklbw
pop
mov
adc
dec
(bad)
(bad)
(bad)
inc
retf
test
movs
bound
sbb
mov
mov
cli
or
das
xor
(bad)
(bad)
push
add
cmc
push
test
fmul
fstp
hlt
adc
xor
dec
dec
or
loop
and
push
mov
inc
cmp
cdq
add
xor
dec
xchg
mov
shl
int3
xchg
and
sti
pop
adc
es
dec
mov
or
sub
fld
jmp
(bad)
(bad)
(bad)
push
pop
mov
repnz
pusha
mov
(bad)
mov
and
clc
test
clc
popa
sbb
pop
cmp
push
mov
rol
sahf
sub
retf
icebp
dec
jb
dec
adc
fidiv
push
int3
xchg
std
fs
mov
lods
jg
or
pop
jge
movs
call
xchg
sub
(bad)
(bad)
(bad)
inc
repnz
or
loop
test
mov
cmp
jp
and
and
xor
(bad)
(bad)
(bad)
(bad)
fdiv
xlat
xor
sbb
(bad)
in
pop
fwait
sbb
aaa
cmp
aas
pusha
and
data16
iret
(bad)
(bad)
mov
cld
push
mov
loop
icebp
shl
push
(bad)
stos
xchg
(bad)
(bad)
inc
adc
or
jne
imul
ret
ret
out
sar
pusha
(bad)
cld
mov
dec
jmp
(bad)
inc
in
cdq
inc
in
fld
js
(bad)
(bad)
(bad)
(bad)
cmp
push
or
cmp
cmp
mov
cli
push
sbb
call
aaa
or
(bad)
(bad)
call
mov
adc
cmc
das
ror
mov
dec
jge
xchg
mov
jno
jno
mov
xor
mov
enter
cmp
inc
test
push
mov
add
push
xchg
pop
call
call
mov
or
lahf
addr16
mov
adc
push
(bad)
(bad)
(bad)
js
inc
nop
div
adc
sub
cmp
push
out
pop
shl
dec
dec
pop
test
mov
dec
retf
sbb
push
add
and
sub
pop
pop
add
cmp
mov
test
push
xchg
(bad)
jmp
push
mov
push
mov
mov
inc
cmp
or
sbb
(bad)
(bad)
dec
dec
cdq
inc
out
xor
sar
cdq
gs
test
es
in
stos
jmp
scas
jg
add
scas
popf
pop
push
dec
in
test
or
and
inc
mov
movs
(bad)
mov
cmps
sbb
mov
mov
push
jp
(bad)
pop
push
sub
push
push
nop
fisubr
(bad)
(bad)
mov
and
popf
inc
cli
test
inc
fistp
xchg
inc
jne
neg
inc
pop
aas
mov
dec
jbe
and
dec
data16
or
jmp
xchg
in
(bad)
sub
fmul
mov
lds
jl
out
jl
ja
cmp
outs
(bad)
jmp
(bad)
scas
rcr
icebp
idiv
scas
jmp
push
and
jbe
sahf
int
into
mov
sub
aad
mov
or
(bad)
mov
jge
jmp
or
in
imul
(bad)
call
jle
repz
(bad)
mov
scas
call
mov
(bad)
rcl
mov
retf
mov
(bad)
(bad)
inc
mov
ret
jg
das
aaa
mov
push
mov
loopne
xchg
call
cmc
jmp
cs
pop
leave
fstp
mov
outs
outs
sub
(bad)
(bad)
(bad)
out
cli
repz
out
mov
mov
in
(bad)
stc
leave
cs
sub
mov
das
adc
(bad)
(bad)
(bad)
jmp
jecxz
sti
(bad)
pop
dec
bound
sbb
pop
sub
inc
or
jae
movs
pop
jnp
out
cli
(bad)
(bad)
jmp
mov
xor
leave
adc
cdq
push
icebp
or
push
sbb
(bad)
jmp
enter
popa
dec
pop
sbb
add
not
stc
(bad)
retf
rcr
(bad)
(bad)
(bad)
jmp
aad
cmp
pushf
cmp
cs
mov
jnp
data16
cli
outs
mov
cmps
das
lods
jle
cmps
adc
into
ins
xor
sbb
dec
xor
xchg
mov
add
div
cmc
(bad)
push
push
mov
lahf
cwde
loop
mov
(bad)
(bad)
(bad)
jg
dec
imul
lods
das
popf
scas
(bad)
or
xchg
mov
inc
sub
pop
ins
fdivr
jg
(bad)
call
push
pop
dec
sbb
xchg
ins
push
mov
in
jmp
outs
inc
inc
shl
lock
pop
cmps
cmp
or
cs
cs
cmp
gs
add
jp
(bad)
(bad)
(bad)
movs
xchg
(bad)
push
jmp
daa
loopne
dec
sti
mov
inc
mov
jnp
mov
fild
cmp
or
aam
jae
ret
test
and
clc
(bad)
dec
jae
test
sub
xor
or
(bad)
(bad)
mov
movs
pop
pop
mov
adc
pop
jno
sbb
xchg
add
call
icebp
jb
pop
dec
adc
or
rcl
jle
pop
adc
lds
sbb
jmp
les
sub
arpl
xchg
mov
(bad)
in
push
add
sub
jge
lds
xlat
(bad)
(bad)
jmp
cmp
jb
fldenv
(bad)
sbb
fwait
xchg
out
cs
ins
xor
jg
mul
aam
imul
jo
test
add
push
(bad)
sbb
xor
jg
retf
sub
sub
imul
mov
je
(bad)
(bad)
(bad)
jmp
hlt
mov
fdiv
ret
jecxz
push
clc
cmp
stos
inc
dec
push
jp
sub
cmp
aam
stos
jne
(bad)
(bad)
inc
jb
and
push
mov
dec
sub
pusha
dec
sub
icebp
fwait
popf
neg
call
push
or
ins
pop
repnz
mov
jns
not
jecxz
mov
cmps
loop
jne
jle
push
jl
pop
xor
mov
or
ret
dec
jo
in
call
(bad)
jae
aad
(bad)
mov
aas
cld
or
pop
(bad)
frstor
jl
pop
daa
(bad)
(bad)
dec
and
lock
pop
into
add
mov
ret
and
(bad)
jmp
out
add
lea
inc
out
ret
les
dec
sub
push
(bad)
(bad)
(bad)
dec
dec
call
loopne
inc
pop
pop
add
jecxz
and
or
(bad)
(bad)
push
ins
jns
scas
sub
addr16
lods
retf
mov
lods
xchg
movs
mov
inc
mov
lea
es
je
dec
mov
(bad)
push
mov
mov
or
push
cmp
mov
cli
call
add
push
int
jecxz
(bad)
xchg
inc
pop
sub
movs
adc
(bad)
fild
fidivr
mov
mov
or
xchg
push
addr16
inc
or
mov
inc
xchg
jne
dec
push
jmp
ret
jmp
(bad)
fbld
push
add
popa
gs
clc
inc
mov
cld
pop
add
(bad)
push
das
sti
ret
mov
(bad)
lods
ja
cmc
jmp
clc
or
out
push
xor
mov
(bad)
xchg
fist
sub
aam
ja
sub
mov
pushf
ss
jg
sbb
dec
pop
fild
(bad)
cmp
scas
xchg
cmp
fstp
cmp
fstp
pusha
(bad)
(bad)
fsubrp
cdq
retf
scas
push
popf
pusha
in
out
lahf
jl
mov
fwait
fs
mov
mov
lock
repnz
ja
push
or
(bad)
(bad)
(bad)
push
push
jns
mov
sub
xor
pop
sub
mov
fstp
(bad)
(bad)
call
mov
call
add
es
add
dec
loope
pop
xor
call
fnstcw
jmp
das
sub
jnp
and
popa
cmp
(bad)
(bad)
(bad)
push
xor
mov
mov
cs
stos
nop
shl
inc
cli
or
loop
les
inc
xor
(bad)
(bad)
jg
pop
rcl
fst
addr16
dec
inc
add
into
jb
jmp
cmc
inc
lock
xor
bound
in
test
pmaddwd
mov
(bad)
(bad)
jmp
les
stos
aad
ret
push
lods
jg
jg
pop
sbb
je
scas
push
ja
nop
arpl
pop
or
mov
aad
popf
outs
cld
int
daa
or
jmp
push
jne
(bad)
xor
nop
out
rol
es
pop
pop
dec
popf
jo
dec
add
leave
aam
rcr
loop
dec
(bad)
xor
mov
push
(bad)
jmp
push
iret
scas
lea
adc
ss
aam
push
rol
(bad)
(bad)
push
(bad)
clc
les
jge
jae
xchg
iret
dec
or
or
scas
xor
xor
das
(bad)
(bad)
(bad)
jmp
test
push
mov
daa
pop
xchg
arpl
fs
sar
pop
or
(bad)
(bad)
push
pop
dec
ret
cwde
stc
pop
in
jno
xchg
xchg
pop
inc
sbb
ror
ret
mov
lods
jmp
cli
loopne
adc
adc
(bad)
push
aas
xchg
pop
or
scas
inc
xchg
ja
aam
test
stos
aam
rol
add
call
mov
outs
xchg
xchg
push
les
push
mov
jg
rcr
jmp
popa
fidiv
adc
adc
or
nop
(bad)
call
loopne
dec
jns
add
and
cmp
mov
icebp
repnz
jle
sbb
idiv
jp
adc
inc
cmp
hlt
and
repz
jle
xor
(bad)
(bad)
(bad)
(bad)
(bad)
rol
clc
std
idiv
jg
std
cmp
pusha
sub
sub
(bad)
fild
mov
and
or
mov
mov
(bad)
call
outs
(bad)
repnz
push
cmp
mov
push
ror
add
call
jmp
mov
inc
adc
out
cmp
pop
(bad)
(bad)
(bad)
jmp
outs
mov
scas
fimul
pop
cmp
push
outs
lods
ficom
jmp
jge
rcr
sti
aas
push
retf
(bad)
(bad)
(bad)
jmp
imul
call
int3
inc
push
cs
push
push
shl
fidivr
cmc
js
mov
mov
inc
xor
xor
fcom
cmps
ror
and
inc
mov
push
das
mov
test
js
(bad)
(bad)
(bad)
(bad)
in
dec
(bad)
pop
jae
or
pop
push
std
xor
retf
xchg
aaa
out
xchg
repnz
xchg
xchg
pop
lock
adc
clc
sahf
push
mov
mov
inc
fst
jmp
inc
(bad)
(bad)
dec
inc
dec
sub
mov
nop
int
jae
adc
add
sbb
inc
in
add
out
clc
inc
add
and
mov
(bad)
adc
nop
mov
inc
add
fcomip
call
adc
add
mov
nop
pop
or
test
sub
rcl
inc
mov
js
or
pop
lock
hlt
pop
add
jp
xor
(bad)
fimul
cmp
jne
enter
repz
inc
add
pop
aad
cdq
dec
xor
mov
std
pop
ret
jmp
and
js
aad
arpl
xchg
sbb
bound
jmp
mov
leave
in
test
adc
sbb
and
xchg
icebp
pop
pop
retf
inc
jns
jmp
loope
sub
mov
out
mov
(bad)
(bad)
inc
arpl
sub
shl
cs
test
jmp
jmp
cmp
fcmovnb
push
lahf
in
inc
cmp
sbb
jl
lea
sti
int3
ret
sbb
sbb
sub
jl
mov
sub
clc
retf
arpl
pop
inc
pop
(bad)
(bad)
(bad)
(bad)
mov
lahf
cmp
mov
stc
daa
dec
pop
jne
sub
mov
jmp
add
or
jg
fmulp
mov
lahf
push
(bad)
fbld
dec
loopne
xor
xchg
inc
adc
fadd
and
(bad)
not
dec
ret
xor
hlt
cli
xlat
xchg
(bad)
(bad)
mov
jmp
mov
ds
bswap
mov
retf
retf
ds
imul
(bad)
jg
mov
push
lods
fwait
push
int3
stc
dec
aas
out
es
(bad)
(bad)
jg
mov
mov
cmp
push
sub
mov
adc
jl
cmp
inc
add
jmp
repnz
inc
cdq
test
(bad)
call
xchg
fbstp
inc
adc
call
and
clc
(bad)
mov
inc
ins
dec
push
std
cmps
dec
inc
das
cmp
dec
cs
push
add
xor
mov
mov
int3
sbb
(bad)
inc
jbe
inc
cli
sub
out
cmp
or
fiadd
fdiv
jmp
sub
xchg
not
or
(bad)
inc
aad
ds
repz
sahf
or
jae
inc
push
sub
push
aad
sub
sub
sbb
and
mov
pop
cmp
jecxz
fistp
mov
dec
mov
ins
aas
xor
loopne
(bad)
jne
push
addr16
fwait
dec
inc
pushf
aad
add
push
std
icebp
and
dec
inc
adc
mov
aas
movs
push
and
clc
sbb
(bad)
fsubr
rcl
inc
iret
add
add
lea
dec
(bad)
(bad)
(bad)
dec
addr16
lock
mov
inc
push
fwait
gs
mov
mov
outs
mov
(bad)
(bad)
mov
lods
xchg
(bad)
sub
and
mov
or
or
xchg
mov
(bad)
call
clc
push
or
test
aam
aam
mov
xchg
arpl
gs
imul
jmp
dec
sub
neg
mul
xchg
cwde
retf
addr16
jo
retf
jg
xchg
xor
jl
adc
ins
mov
(bad)
call
cmps
jno
mov
inc
cmp
adc
shl
pushw
push
jl
test
sbb
xor
xor
(bad)
jg
and
push
push
pop
add
ret
shr
jle
call
jmp
dec
sub
sub
mov
shl
push
adc
lock
adc
lods
inc
arpl
aad
lods
xchg
leave
add
add
leave
mov
push
(bad)
mov
mov
cdq
jae
push
dec
cmp
xor
pop
sub
cli
pop
inc
in
(bad)
(bad)
call
cmps
add
mov
or
add
mov
xor
(bad)
(bad)
(bad)
push
xor
(bad)
dec
lahf
aas
pop
(bad)
mov
adc
adc
jecxz
inc
and
cmps
out
clc
outs
mov
ret
shr
ins
or
(bad)
call
add
dec
movs
push
mov
je
pop
fild
fnsave
sub
inc
cld
dec
in
mov
jns
push
retf
mov
push
xchg
or
loop
(bad)
(bad)
call
lock
outs
arpl
mov
jae
leave
aam
scas
bound
xor
(bad)
(bad)
jmp
mov
rol
pop
int3
add
sti
sub
push
cs
pop
and
(bad)
push
or
imul
nop
mov
sahf
retf
inc
shl
add
inc
pop
push
mov
pop
or
xor
inc
cmps
pop
xchg
pop
ins
cs
(bad)
(bad)
call
or
mov
sar
cdq
add
imul
nop/reserved
jmp
btc
into
mov
test
or
jb
inc
popf
(bad)
(bad)
mov
push
xor
jmp
rcl
aam
inc
mov
sub
push
adc
adc
int
test
dec
xor
sub
fstp
(bad)
dec
add
cmps
enter
jg
push
push
in
outs
(bad)
xchg
popf
xlat
(bad)
mov
cmp
cmc
pop
rcr
fwait
jbe
cld
stos
das
scas
repnz
sbb
mov
push
sahf
xchg
outs
mov
sub
call
int
pop
test
in
pop
std
xchg
clc
sar
inc
push
enter
iret
(bad)
in
outs
mov
(bad)
(bad)
jmp
mov
jp
ja
ins
jnp
cld
or
fimul
dec
popf
mov
std
(bad)
(bad)
(bad)
(bad)
out
jns
mov
jle
outs
cld
hlt
push
push
aaa
stos
(bad)
mov
jg
sti
jg
fistp
call
xor
inc
mov
inc
popa
push
sbb
sbb
mov
pop
pop
cmps
lahf
lock
(bad)
call
adc
mov
stc
jmp
gs
test
or
(bad)
(bad)
out
mov
test
push
repz
add
xchg
call
and
and
int
scas
cmp
mov
adc
inc
int3
ds
cmp
sbb
movs
jmp
pop
and
dec
sub
daa
sbb
sbb
aad
nop
inc
xor
stos
sub
ds
xchg
test
cmp
jbe
mov
(bad)
(bad)
(bad)
jmp
inc
mov
or
inc
sahf
out
adc
push
and
sub
pop
(bad)
jmp
cmps
cmp
(bad)
dec
scas
or
cli
mov
mov
icebp
push
repz
cmps
(bad)
(bad)
(bad)
mov
jp
dec
icebp
ret
xor
mov
lods
movs
aad
(bad)
dec
pop
mov
clc
jmp
test
mov
jecxz
lods
xor
daa
add
mov
or
stc
sahf
sbb
(bad)
(bad)
(bad)
dec
mov
or
out
add
ret
sub
jns
cmp
outs
inc
fldenv
mov
jge
inc
aaa
xchg
push
call
cwde
inc
rcl
jns
adc
clc
test
or
mov
mov
(bad)
call
mov
imul
dec
pushf
add
movs
sub
push
xchg
and
test
jo
xchg
inc
inc
mov
(bad)
(bad)
call
test
sub
test
mov
pushf
xchg
mov
hlt
hlt
dec
sub
(bad)
(bad)
call
cmps
in
cmps
pop
test
(bad)
mov
es
sub
icebp
or
shl
dec
add
inc
add
loope
pop
push
mov
mov
adc
and
jg
(bad)
(bad)
call
mov
push
xlat
mov
and
jmp
xchg
js
inc
jle
fstp
(bad)
mov
mov
add
outs
sbb
fcom
mov
xchg
(bad)
(bad)
(bad)
fst
lahf
(bad)
aam
sahf
call
xchg
movs
shl
cld
rcl
rcl
(bad)
jp
jmp
mov
ror
les
pusha
cwde
mov
fs
(bad)
(bad)
jmp
fsubr
test
(bad)
pushf
js
bound
jbe
jns
mov
in
or
cmp
push
mov
(bad)
dec
or
mov
js
pop
or
hlt
call
outs
sbb
mov
mov
cmp
xchg
lods
jmp
mov
data16
xchg
sti
(bad)
jg
test
xlat
sti
dec
xlat
call
fsubr
jmp
mov
mov
cmp
mov
sub
mov
int3
add
push
adc
pop
jns
mov
push
adc
sub
out
call
dec
ficom
mov
cmp
adc
and
and
jle
adc
loop
imul
jmp
dec
in
xor
mov
push
stos
cmps
jne
add
call
inc
xlat
les
inc
mov
sub
adc
inc
pop
pop
and
mov
cwde
(bad)
(bad)
(bad)
jmp
in
lds
retf
jb
fst
add
retf
xor
xchg
and
repz
xor
in
cld
(bad)
call
mov
xor
mov
dec
in
mov
adc
cmp
push
adc
inc
adc
jmp
icebp
mov
in
loope
das
fdiv
mul
cmc
ss
(bad)
adc
mov
(bad)
(bad)
(bad)
(bad)
push
setbe
lds
rcl
mov
iret
mov
sub
into
cmp
inc
lock
dec
aaa
stc
(bad)
push
pop
outs
mov
ffreep
ja
sub
dec
popf
xchg
icebp
(bad)
jmp
int
mov
rol
in
ja
cmp
sahf
stc
xchg
pop
jmp
pop
sbb
cmp
mov
popf
jo
(bad)
(bad)
fisttp
xchg
and
sbb
imul
add
dec
jg
mul
aaa
pop
adc
and
xchg
sti
jle
(bad)
mov
icebp
sbb
pop
(bad)
outs
xor
cmp
xlat
jg
mov
nop
push
outs
mov
or
xchg
add
pop
cmc
inc
and
xor
int
xor
(bad)
call
inc
xor
xlat
inc
jno
cmc
or
das
repz
push
(bad)
(bad)
(bad)
mov
fs
outs
loopne
sub
sbb
pushf
int
mov
or
and
call
sub
bound
xor
pop
mov
pusha
push
push
sub
sbb
and
(bad)
mov
sub
xchg
fcmovnbe
inc
sub
jge
add
retf
(bad)
(bad)
(bad)
inc
dec
ficom
cmps
xchg
mov
sahf
stos
pop
cmps
or
out
stc
mov
mov
(bad)
(bad)
(bad)
jmp
fucomp
jbe
mov
add
lock
mov
push
push
and
push
call
(bad)
mov
imul
adc
test
or
cmc
icebp
mov
(bad)
(bad)
dec
sbb
xor
jae
inc
and
pop
js
mov
xchg
sbb
mov
jmp
mov
jmp
adc
out
out
ins
stc
ret
adc
mov
test
sbb
call
dec
or
mov
fldenv
add
xchg
sbb
rol
sub
lock
inc
push
sbb
out
aas
jo
push
mov
in
and
mov
and
push
inc
mov
sub
jg
call
(bad)
sub
xchg
sbb
and
movs
repnz
jl
(bad)
(bad)
jg
and
scas
jle
fadd
sbb
iret
or
sbb
adc
(bad)
(bad)
(bad)
push
xchg
(bad)
add
jle
adc
inc
xor
add
sbb
mov
test
inc
sbb
xchg
mov
outs
je
and
and
xor
mov
ins
pop
scas
arpl
lock
cli
push
pop
sub
mov
add
inc
xchg
mul
fist
xor
ret
popa
add
and
sbb
jge
jecxz
into
test
pop
in
pusha
imul
mov
pop
sub
pop
pop
hlt
xchg
cmp
test
jp
arpl
(bad)
inc
scas
clc
rcl
fistp
jmp
mov
scas
scas
test
(bad)
fcomip
dec
test
push
and
mov
out
cmp
xor
clc
dec
ds
xor
out
add
(bad)
(bad)
call
xchg
mov
add
(bad)
(bad)
pop
je
xchg
aad
push
iret
push
sahf
pop
movs
hlt
sbb
lods
add
lea
enter
test
addr16
fist
test
ds
(bad)
dec
lock
nop
pop
fsin
or
mov
jbe
ret
or
xor
mov
dec
jp
xchg
adc
mov
(bad)
(bad)
(bad)
jge
pop
dec
pop
cmp
cmp
and
cmp
and
stc
add
(bad)
cmps
int3
sar
(bad)
(bad)
call
shl
pop
add
and
sub
in
and
xor
add
bound
pusha
test
(bad)
(bad)
(bad)
cmp
mov
jo
imul
xchg
xor
scas
and
mov
inc
stos
cmp
les
enter
pop
jo
push
test
pop
jno
push
jg
icebp
rcl
jne
(bad)
(bad)
inc
adc
je
mov
pop
sbb
mov
xlat
leave
scas
in
sub
(bad)
(bad)
(bad)
call
data16
jnp
mov
xor
retf
ja
(bad)
fcomip
aam
xlat
mov
scas
clc
(bad)
call
jmp
xchg
fwait
mov
mov
inc
or
repnz
loopne
fidiv
dec
(bad)
(bad)
(bad)
push
cwde
cli
add
loop
lahf
mov
test
and
mov
push
popf
aas
ja
cli
(bad)
jg
aaa
shl
mov
retf
ds
mov
out
and
(bad)
mov
retf
push
(bad)
mov
call
(bad)
(bad)
(bad)
es
loopne
mov
js
jle
jge
jmp
pop
push
hlt
cmps
call
(bad)
jg
sbb
in
mov
fistp
(bad)
jmp
popf
xor
outs
sbb
out
jnp
lods
fisubr
cld
(bad)
(bad)
dec
cmps
mov
ficomp
mov
fdiv
sbb
lods
push
ss
mov
(bad)
call
(bad)
outs
push
in
pop
push
fnstsw
xchg
pop
test
in
cmp
loop
pop
adc
std
call
mov
inc
xchg
sub
and
adc
and
dec
arpl
jg
aaa
fsubr
adc
inc
loope
pop
daa
loop
or
mov
call
test
add
icebp
jge
pop
or
sub
repz
xchg
(bad)
(bad)
(bad)
(bad)
jl
adc
outs
xchg
or
pop
cmc
and
sbb
push
sub
fcomip
mov
mov
ds
shl
nop
mov
cli
mov
push
push
sub
outs
gs
scas
add
cmc
cmps
pop
(bad)
hlt
adc
(bad)
(bad)
(bad)
(bad)
fistp
pushf
fstp
push
movs
aaa
mov
fdiv
lea
(bad)
sti
mov
pop
sbb
ins
pop
sbb
(bad)
(bad)
(bad)
dec
shl
jecxz
push
cmp
(bad)
ss
sub
cmp
mov
fistp
add
std
push
addr16
fidiv
loopne
out
ror
fs
(bad)
(bad)
(bad)
push
retf
add
nop
push
fnsave
imul
test
jno
(bad)
(bad)
dec
sbb
popa
inc
inc
ins
inc
mov
loop
ror
rcl
ror
icebp
sub
or
dec
mov
inc
pop
sub
mov
sahf
cmp
ret
and
xor
lods
pop
dec
outs
inc
mov
push
xchg
xor
inc
es
jmp
pop
je
mov
dec
vmaxps
inc
sar
(bad)
(bad)
(bad)
cmp
sbb
sbb
add
or
cmp
sub
dec
imul
and
dec
int3
xchg
or
xchg
dec
pop
sub
inc
enter
sbb
inc
sub
inc
add
sbb
(bad)
(bad)
cmp
ret
xor
mov
(bad)
mov
or
inc
jmp
fldl2t
(bad)
imul
fcomp
test
les
aam
ret
(bad)
cwde
es
arpl
push
ja
rol
cs
adc
mov
push
shr
cmps
push
jmp
push
mov
enter
aaa
and
add
cmp
test
mov
cmp
fcomi
lds
xchg
iret
iret
int
pop
es
mov
sub
clc
call
stos
and
scas
xchg
neg
xchg
push
push
(bad)
(bad)
(bad)
mov
cwde
cmps
jle
outs
movs
out
cmps
push
je
int
les
out
cmps
rcr
mov
(bad)
(bad)
push
xchg
jbe
push
cli
mov
enter
push
sti
xor
xor
lahf
push
cmp
jne
(bad)
(bad)
(bad)
jmp
icebp
sub
icebp
xchg
inc
push
sbb
jae
dec
stc
popa
xchg
lea
aad
mov
test
mov
(bad)
dec
ror
in
jne
or
sbb
and
arpl
xchg
dec
sar
(bad)
call
add
fimul
sahf
add
leave
push
add
mov
outs
clc
(bad)
call
sar
cs
xor
pop
ds
or
mov
xor
jmp
and
sbb
test
cdq
hlt
or
pop
test
push
rcl
and
sbb
nop
fdiv
jb
fisttp
cmp
push
or
adc
popa
(bad)
(bad)
(bad)
jmp
xchg
cdq
mov
mov
sahf
out
pop
loop
cmp
push
and
jbe
sub
scas
sbb
push
mov
pop
lea
mov
jbe
(bad)
sti
cdq
(bad)
(bad)
(bad)
out
sahf
into
push
mov
loop
scas
mov
jle
popa
jge
fcomip
fistp
inc
sub
daa
lock
sub
xchg
inc
xor
icebp
xchg
stos
(bad)
and
scas
dec
iret
jnp
clc
fdivr
icebp
mov
hlt
js
dec
sti
dec
pop
pop
jl
mov
data16
jg
dec
jb
mov
mov
aaa
aaa
sti
mov
jmp
scas
aam
adc
data16
push
xor
mov
sbb
mov
pop
cwde
push
aaa
(bad)
xchg
add
(bad)
jmp
push
lea
into
(bad)
hlt
dec
outs
push
loope
mov
cmp
jecxz
pop
add
mov
in
sub
push
pop
sub
cmp
dec
std
enter
aas
jo
(bad)
(bad)
jmp
or
push
shr
ds
xor
clc
shl
jmp
les
pop
or
data16
jg
mov
fcomp
or
sub
jae
lds
outs
sbb
or
dec
ret
(bad)
(bad)
mov
cwde
mov
mov
mov
adc
iret
je
xchg
jb
ud0
lock
mov
mov
adc
jno
add
sbb
jne
retf
imul
xchg
(bad)
(bad)
(bad)
call
sti
icebp
push
lods
js
scas
(bad)
mov
and
dec
inc
dec
loope
sub
retf
inc
mov
(bad)
(bad)
push
xchg
mov
shl
inc
adc
xor
dec
rcl
mov
adc
test
dec
sub
xor
fsub
movs
dec
add
jmp
data16
xchg
int
lahf
pop
adc
dec
dec
push
xchg
into
pop
push
test
rcl
push
jbe
cmc
scas
sbb
push
or
(bad)
(bad)
(bad)
fisttp
into
inc
idiv
arpl
je
inc
inc
pop
test
add
enter
xchg
dec
aas
push
scas
jb
imul
inc
or
movd
adc
cld
jmp
(bad)
dec
sbb
add
mov
mov
movs
cwde
adc
xor
xor
das
jo
dec
adc
(bad)
(bad)
(bad)
call
cli
inc
inc
or
cs
repnz
outs
add
xchg
pop
mov
inc
imul
xchg
dec
(bad)
and
inc
pop
add
scas
and
and
outs
mov
test
push
xor
push
jns
aad
(bad)
(bad)
(bad)
call
sar
xchg
cmp
sbb
push
and
mov
xchg
xor
sub
test
and
daa
dec
mov
xchg
dec
adc
and
dec
shl
sub
jmp
dec
pop
dec
in
push
mov
jno
clc
xchg
or
mov
gs
push
es
inc
daa
jmp
inc
pop
setp
sub
push
lds
or
mov
sub
xor
mov
cmp
mov
call
mov
jne
ret
jmp
mov
jge
push
int
arpl
(bad)
inc
icebp
cmc
push
movs
fsub
popf
and
in
repz
fbld
cld
jmp
loop
add
jmp
cmp
clc
enter
adc
fld
sbb
fnsave
(bad)
(bad)
mov
sub
pop
movs
push
retf
(bad)
ficom
nop
arpl
sbb
xchg
ss
(bad)
(bad)
(bad)
dec
cs
xchg
xchg
shr
mov
scas
cmp
xchg
push
ins
popa
sub
(bad)
mov
add
test
ror
add
mov
xchg
xchg
or
mov
stos
adc
and
nop
cmp
imul
lea
(bad)
mov
and
pop
xor
xchg
add
mov
call
cmp
(bad)
(bad)
(bad)
fdivrp
clc
repnz
or
push
mov
fwait
lds
test
sub
xchg
data16
scas
and
outs
mov
dec
ins
pop
daa
sbb
(bad)
jg
sti
or
sbb
pop
fdivr
call
pop
in
(bad)
mov
add
mov
ss
mov
shl
mov
retf
(bad)
fsubr
lea
push
sar
je
push
mov
aam
mov
sti
mov
add
fsubr
retf
pop
dec
sub
push
sub
or
test
inc
xor
jl
xchg
mov
cli
mov
out
outs
jo
adc
movs
loop
lahf
call
pop
ja
rcr
das
aaa
inc
or
retf
adc
(bad)
(bad)
(bad)
(bad)
ficomp
cmp
push
daa
xchg
or
dec
and
push
cmp
push
(bad)
inc
outs
or
mov
dec
int3
std
inc
imul
jb
sub
pop
repz
sub
addr16
sub
pop
sub
fisub
push
leave
push
and
fisub
mov
add
hlt
add
scas
push
call
sbb
sbb
push
stos
fild
call
stos
js
ja
scas
adc
icebp
test
cwde
sahf
pop
sti
sar
pop
pop
inc
vmovntdq
or
mov
aam
stos
jmp
out
(bad)
nop
fcomip
(bad)
call
xor
das
loopne
in
bound
or
pop
or
jb
mov
adc
(bad)
(bad)
inc
or
xchg
lds
repz
sub
test
mov
mov
jne
jmp
add
ret
pop
push
push
push
lock
jne
ror
xor
inc
test
xor
cs
mov
xchg
ja
sub
fs
aam
xchg
mov
aaa
mov
(bad)
std
pop
push
push
(bad)
jg
(bad)
cmp
sub
ficomp
sub
add
sub
aad
lock
(bad)
(bad)
(bad)
inc
inc
call
add
adc
fldenv
shr
mov
(bad)
in
aad
ss
repnz
mov
loop
mov
jnp
or
jg
xor
sub
sub
inc
cs
jae
jg
dec
add
ins
aam
add
call
les
je
popf
sub
pop
sub
sub
cmp
dec
mov
mov
cmp
jbe
push
ret
inc
int
shr
inc
inc
call
ror
(bad)
jg
push
push
pop
sub
add
xor
pusha
inc
and
jmp
adc
or
xor
xor
push
and
pop
scas
es
inc
lods
(bad)
(bad)
(bad)
jmp
lds
pop
fidiv
nop
outs
int3
dec
or
xchg
(bad)
xor
fstp
mov
cmps
mov
xchg
pop
jno
lods
aad
dec
jge
test
out
or
sahf
mov
dec
ret
les
mov
out
dec
mov
push
cli
mov
loop
dec
out
dec
push
(bad)
(bad)
dec
iret
sub
test
sub
sub
jle
push
jp
aad
or
(bad)
(bad)
(bad)
fst
cmps
or
out
not
or
jge
cli
mov
mov
loopne
mov
cmp
add
mov
vunpckhps
hlt
scas
loop
fisub
inc
adc
xchg
mov
push
in
push
jns
test
sub
add
ins
adc
movs
or
arpl
xchg
daa
mov
daa
jecxz
fld
jl
xchg
xchg
pushf
loop
mov
add
sti
and
jge
or
(bad)
jmp
(bad)
lods
dec
movs
sahf
xchg
mov
sbb
cdq
jb
push
(bad)
(bad)
jmp
fiadd
cwde
mov
mov
xchg
sar
inc
adc
fidivr
out
xchg
in
xor
(bad)
cmp
mov
push
and
clc
(bad)
(bad)
jmp
loop
adc
mov
pop
fdiv
xor
sbb
mov
data16
data16
(bad)
(bad)
mov
mov
push
fisttp
sub
xlat
mov
fisub
(bad)
mov
sbb
stos
pop
lea
scas
mov
mov
pop
out
mov
outs
inc
int3
(bad)
jmp
fisubr
(bad)
mov
push
sbb
lea
xchg
fdivp
sahf
fs
fcomip
mov
or
lds
xchg
push
mov
add
(bad)
call
jbe
int
or
mov
fmul
fidiv
bound
(bad)
cs
cmp
mov
in
mov
(bad)
mov
(bad)
out
jl
fwait
pop
not
xchg
pop
cmc
fwait
pop
sti
xchg
je
pop
rcr
mov
jne
scas
and
(bad)
call
jl
adc
mov
ret
jge
(bad)
dec
or
movs
aam
pop
sar
jnp
ins
sbb
push
cmps
mov
xchg
jge
dec
jne
cs
call
pop
jp
call
inc
or
leave
imul
(bad)
cli
(bad)
call
xor
maskmovq
test
inc
repnz
fnstenv
cs
cld
hlt
(bad)
jmp
xchg
add
sbb
cmps
aam
ror
dec
in
call
xor
shr
jns
repz
cmp
sub
aaa
cli
call
fndisi(8087
pusha
lods
cmp
(bad)
and
in
jp
pop
cld
test
add
lock
jmp
clc
lock
pop
call
aaa
std
(bad)
fsub
pushf
sahf
pop
movs
xchg
mov
retf
ins
test
pop
xchg
out
add
lock
ins
xor
das
nop
jbe
xor
mov
push
dec
mov
mov
(bad)
js
cs
pop
dec
int
push
out
mov
mov
xchg
stos
movs
mov
test
add
aaa
pop
cli
dec
in
mov
sub
sub
push
dec
add
sti
(bad)
(bad)
mov
out
mov
or
mov
dec
popf
xchg
jbe
adc
jp
cmp
jno
dec
inc
in
clc
(bad)
(bad)
(bad)
(bad)
cmp
xchg
sub
stc
test
out
call
adc
cmp
sbb
sub
dec
sub
mov
(bad)
jmp
mov
inc
jg
mov
jmp
jno
xrelease
in
push
mov
jle
fdivr
(bad)
(bad)
(bad)
jp
(bad)
mov
hlt
add
lea
pop
sbb
add
into
add
mov
sbb
(bad)
(bad)
(bad)
dec
hlt
daa
nop
loop
pusha
shl
sti
push
pop
call
repz
ins
not
iret
push
sbb
(bad)
jmp
aam
mov
sti
sahf
test
test
xchg
push
dec
add
inc
sbb
(bad)
(bad)
(bad)
(bad)
jmp
mov
aad
icebp
rcr
dec
mov
pop
icebp
call
call
popf
or
ins
fstp
mov
dec
adc
push
cs
out
sti
clc
push
vandps
call
(bad)
(bad)
jmp
retf
(bad)
loopne
push
mov
ret
inc
jecxz
mov
mov
pop
retf
cs
shl
(bad)
(bad)
jmp
inc
mov
xrelease
jge
jle
clc
mov
sub
shl
push
jg
jo
mov
and
and
pop
loopne
xor
push
leave
stos
nop
stc
je
mov
and
sub
fldenv
add
mov
dec
ror
push
leave
mov
adc
ret
xchg
mov
shl
dec
ss
sub
mov
and
cmp
rol
xchg
xchg
xchg
push
mov
dec
mov
or
sub
icebp
(bad)
(bad)
call
or
cs
cmp
fstp
icebp
push
push
push
dec
loope
(bad)
(bad)
add
push
shl
jmp
dec
mov
fcomp
jmp
mov
(bad)
inc
dec
push
mov
(bad)
mov
pop
xchg
sbb
pushf
lahf
jns
ficomp
(bad)
(bad)
inc
in
sub
in
mov
popa
jge
xor
call
sbb
xor
xor
xor
out
mov
out
xchg
mov
mov
dec
dec
mov
add
push
dec
clc
(bad)
(bad)
cmp
cld
or
sub
sub
cmp
stos
(bad)
stc
aas
cld
(bad)
push
sahf
clc
lahf
pop
pop
push
adc
rcr
mov
pop
add
jl
mov
fldenv
es
fbld
jmp
(bad)
call
cmp
dec
loop
(bad)
mov
jae
sub
mov
cdq
push
addr16
clc
in
(bad)
(bad)
jg
aad
sbb
cmp
outs
(bad)
cdq
int3
cmp
hlt
jecxz
pop
iret
int
mov
fcomp
(bad)
(bad)
call
je
mov
into
mov
(bad)
leave
ds
out
shl
(bad)
(bad)
(bad)
dec
cmc
cwde
mov
jb
cmp
pop
call
es
xor
dec
lock
and
inc
adc
in
shl
cmp
cmp
test
clc
fbstp
or
add
pop
sub
test
adc
fs
add
cmp
(bad)
inc
mov
xor
sahf
sbb
jg
ret
pop
xchg
not
or
ficom
das
xor
jmp
jmp
lds
aad
fld
push
lods
sbb
retf
iret
ds
(bad)
(bad)
jmp
push
std
mov
cmp
sub
fstp
adc
sub
inc
inc
push
movs
dec
stos
sub
xchg
hlt
call
hlt
(bad)
popa
add
sbb
dec
movs
or
mov
mov
xor
inc
ins
or
fst
mov
(bad)
(bad)
dec
cmp
jg
stos
je
in
movs
dec
je
in
das
call
mov
in
sub
or
cmp
(bad)
(bad)
(bad)
(bad)
cmp
and
push
call
cwde
or
and
mov
adc
movs
xor
dec
and
mov
dec
hlt
repz
xor
push
pop
and
pop
xchg
push
aas
dec
out
dec
jle
(bad)
sub
fdivrp
and
cmc
push
in
xlat
xchg
nop
dec
test
movs
xchg
xchg
xor
jne
(bad)
(bad)
(bad)
jmp
jnp
retf
add
add
pop
adc
fwait
xend
or
sbb
in
xchg
loope
add
daa
pop
jl
or
push
inc
xor
cmp
jg
(bad)
inc
ret
or
ret
cmp
jae
inc
call
(bad)
dec
xchg
or
lods
xchg
(bad)
test
ret
icebp
(bad)
sub
mov
(bad)
cmp
fst
or
mov
mov
bound
cmp
(bad)
(bad)
(bad)
out
jbe
sbb
sub
pop
mov
mov
iret
sub
dec
or
(bad)
(bad)
jmp
push
test
and
call
and
inc
fsubr
push
mov
(bad)
fistp
(bad)
out
xor
mov
jp
push
mov
pop
sar
adc
ins
fsubr
pop
lods
mov
push
jae
add
(bad)
(bad)
mov
bound
push
dec
add
jne
lock
xchg
or
std
adc
xchg
ins
fisubr
stos
mov
repnz
(bad)
sbb
(bad)
jmp
xlat
add
sahf
push
or
pop
xchg
inc
test
leave
xchg
and
dec
lds
mov
adc
nop
(bad)
(bad)
(bad)
jmp
push
call
sbb
dec
adc
push
dec
jnp
(bad)
(bad)
jmp
push
and
xchg
cs
sbb
popf
add
lock
(bad)
out
jg
call
xchg
and
shl
or
sar
or
nop
adc
adc
dec
xor
(bad)
(bad)
(bad)
jg
jp
xchg
push
dec
fs
dec
cmp
ja
add
dec
xlat
pop
cld
clc
lea
sbb
scas
les
scas
mov
(bad)
fcomip
shl
add
or
jnp
shl
and
fdiv
ja
out
mov
inc
adc
in
lds
repz
lds
ins
shl
clc
out
mov
(bad)
call
popa
mov
(bad)
xchg
sti
aas
repz
pop
stc
aaa
pop
(bad)
mov
mov
ss
sub
(bad)
cli
(bad)
out
out
add
dec
fiadd
lahf
cmp
enter
mov
test
ds
mov
test
sbb
fisttp
(bad)
jmp
jle
xchg
out
(bad)
cld
pop
mul
mov
daa
adc
scas
fdivr
xchg
std
or
pop
mov
and
jae
pop
or
jmp
mov
jg
cdq
data16
push
fnsave
mov
bound
(bad)
(bad)
(bad)
call
jg
cmps
cmp
fadd
ret
or
xor
xor
popa
gs
pusha
mov
pop
sub
xchg
xchg
mov
pop
mov
push
sub
add
and
ins
or
add
xchg
add
(bad)
(bad)
nop
add
xlat
popa
(bad)
je
or
push
jmp
das
cs
or
mov
push
push
(bad)
(bad)
(bad)
jmp
shl
ror
mov
lds
sti
cmps
es
inc
aas
and
jmp
into
int3
cdq
fnstenv
icebp
mov
mov
cmps
cmp
sbb
jmp
out
idiv
dec
out
clc
or
xchg
add
std
push
out
sbb
(bad)
(bad)
(bad)
(bad)
mov
int
enter
mov
add
test
ins
or
addr16
mov
push
dec
cli
outs
movs
outs
pusha
cdq
movs
fwait
data16
push
clc
(bad)
out
ds
pop
data16
pop
fdiv
push
mov
and
xchg
ss
mov
mov
sub
dec
sbb
out
or
jg
xor
pop
pop
test
(bad)
jmp
jns
addr16
push
adc
sar
pop
sub
jle
stos
cmc
push
mov
(bad)
call
xchg
mov
cmp
sub
cmp
push
pop
sbb
fldl2t
cmp
cmps
(bad)
(bad)
(bad)
jmp
(bad)
(bad)
xchg
fstp
xchg
mov
adc
in
fstp
dec
sbb
add
sub
(bad)
jg
jmp
arpl
sbb
pop
sub
mov
out
pusha
fcmovb
jmp
(bad)
(bad)
(bad)
(bad)
cmp
push
jp
dec
jle
add
xor
(bad)
sbb
inc
add
add
xchg
test
fstp
xor
fist
in
inc
sbb
(bad)
ficom
push
jmp
(bad)
(bad)
cmp
mov
cmps
hlt
out
test
mov
fistp
pop
bound
cmp
mov
sahf
(bad)
(bad)
(bad)
jmp
cmps
xchg
pop
cmp
mov
daa
(bad)
lea
push
stos
not
sbb
jecxz
push
jmp
or
sub
xor
mov
call
inc
loopne
dec
mov
(bad)
(bad)
call
imul
push
pop
lods
test
aam
test
(bad)
(bad)
inc
push
movs
loope
aad
cmp
frstpm(287
data16
pop
adc
cdq
fcomp
xor
dec
test
daa
mov
mov
mov
(bad)
pop
adc
jo
xchg
jns
(bad)
xchg
inc
adc
les
(bad)
(bad)
jmp
mov
(bad)
sbb
push
sub
data16
add
bound
adc
mov
pop
(bad)
(bad)
(bad)
dec
sbb
lods
or
scas
imul
pop
and
inc
retf
adc
dec
add
pop
inc
inc
loopne
and
pop
dec
stos
adc
sbb
retf
(bad)
(bad)
jmp
and
int3
xor
xor
adc
sbb
iret
fidivr
dec
(bad)
(bad)
(bad)
push
cmc
mov
cmp
mov
push
ss
push
dec
sbb
shl
(bad)
(bad)
(bad)
jmp
mov
pop
mov
mov
test
add
cmp
pop
push
loopne
pop
fcom
inc
fst
in
mov
aad
aam
xor
cmp
std
out
jl
jbe
stos
(bad)
(bad)
(bad)
jmp
jne
jl
out
(bad)
std
mov
(bad)
mov
sbb
or
clc
jnp
(bad)
(bad)
(bad)
mov
or
aas
call
test
(bad)
sub
sbb
(bad)
fist
pop
adc
mov
aaa
in
push
or
mov
and
mov
clc
(bad)
dec
jmp
xor
jl
sti
idiv
push
test
(bad)
call
xchg
or
in
jbe
push
pop
jl
xlat
xchg
lods
repz
cs
mov
hlt
and
xchg
data16
test
add
mov
mov
xor
fistp
in
retf
repz
sar
cmc
or
inc
inc
out
js
jnp
jbe
aaa
jg
(bad)
(bad)
jmp
lods
(bad)
jl
into
xchg
or
loop
fmul
cld
cld
das
js
(bad)
xlat
(bad)
cmc
rcl
add
(bad)
(bad)
(bad)
jg
cmc
and
std
push
lahf
retf
in
add
popf
clc
dec
xlat
mov
jne
xchg
add
enter
(bad)
dec
or
ret
add
push
push
dec
adc
adc
fld
dec
in
test
push
das
call
pop
fstp
dec
jge
inc
call
push
or
jmp
mov
push
xchg
pop
push
mov
movs
dec
cmp
(bad)
push
and
dec
sar
jg
mov
or
or
push
pop
out
ret
sbb
imul
arpl
pusha
shl
pop
mov
sub
inc
mov
adc
jb
xor
mov
jmp
mov
dec
(bad)
lea
dec
dec
or
jb
repz
js
or
mov
(bad)
(bad)
(bad)
(bad)
mov
aas
mov
mov
mov
lock
mov
fucom
jne
and
dec
(bad)
(bad)
(bad)
(bad)
cmp
repz
adc
mov
xchg
retf
dec
sahf
sti
call
movs
js
(bad)
(bad)
mov
ss
movs
in
pop
xlat
aad
cmp
lods
das
scas
scas
push
sbb
sar
xchg
cli
(bad)
jg
(bad)
mov
int3
or
pop
mov
repnz
jecxz
jge
test
(bad)
inc
iret
adc
call
or
push
push
push
add
inc
mov
mov
call
mov
dec
inc
retf
or
int3
mov
or
push
and
mov
mov
scas
xchg
je
retf
mov
(bad)
(bad)
(bad)
call
dec
fwait
add
pop
push
call
lods
push
sub
and
jp
out
(bad)
(bad)
call
es
out
rcl
cmc
mov
sub
mov
in
mov
mov
push
dec
add
xchg
bound
femms
dec
cmp
jecxz
or
je
popa
(bad)
inc
mov
rcr
fwait
lds
and
xchg
push
dec
dec
ja
daa
stos
sub
mov
pop
cmp
xor
leave
call
(bad)
(bad)
(bad)
call
push
test
mov
icebp
push
mov
jmp
mov
cmp
pop
dec
jmp
or
sub
adc
inc
stos
in
std
(bad)
jg
xchg
inc
cs
xor
mov
pusha
pop
or
(bad)
outs
adc
ss
mov
das
sar
ret
sti
test
daa
push
or
retf
mov
add
loop
(bad)
(bad)
(bad)
mov
bound
inc
push
aaa
or
in
or
gs
and
mov
(bad)
mov
sub
jmp
(bad)
push
test
and
and
and
mov
sbb
mov
push
add
add
inc
daa
dec
shl
shr
and
fsub
retf
mov
(bad)
dec
and
add
sbb
rcl
xchg
iret
es
(bad)
call
call
jmp
add
mov
inc
xor
std
lods
lods
fcomp
and
(bad)
push
cld
or
sub
or
push
pop
jle
jg
call
jmp
ss
adc
xchg
dec
adc
jl
push
test
sti
(bad)
(bad)
(bad)
dec
push
xor
cmp
test
xchg
cmp
inc
ja
jge
push
dec
in
pusha
daa
mov
mov
imul
add
jp
pop
dec
jae
mov
cli
sbb
std
cmp
mov
call
shl
push
mov
lds
nop
jle
aas
jle
jmp
clc
pop
or
std
das
and
outs
outs
sti
inc
ret
mov
(bad)
fadd
ds
and
scas
lods
dec
mov
pop
dec
cmp
ret
addr16
repz
pop
call
jmp
loop
outs
jge
mov
std
out
(bad)
pop
maxps
push
push
shl
fimul
or
(bad)
(bad)
(bad)
inc
mov
inc
mov
mov
xchg
movs
hlt
repz
jmp
lock
pop
inc
test
scas
fcomip
mov
xor
jo
inc
adc
adc
fidiv
shl
xor
jbe
(bad)
(bad)
call
shl
inc
cmc
sbb
and
push
dec
out
xor
jne
retf
jb
xlat
xchg
ss
(bad)
(bad)
push
inc
addr16
das
outs
pop
or
mov
loop
lahf
xchg
cmp
adc
call
cmp
fcom
std
shl
dec
and
div
aaa
pop
out
cli
jmp
js
inc
xor
aas
lods
dec
cmps
(bad)
xor
mov
(bad)
(bad)
fstp
fwait
sbb
xchg
fldcw
dec
sahf
call
sahf
and
ins
pop
(bad)
(bad)
push
in
rcl
jmp
out
mov
test
jecxz
popa
mov
(bad)
(bad)
call
xor
cld
inc
cs
add
loop
ret
adc
hlt
test
cwde
pop
(bad)
dec
loop
sub
cdq
xor
cs
pop
cli
(bad)
(bad)
jmp
jns
mov
fnsave
inc
es
jb
push
dec
and
mov
mov
dec
(bad)
nop
pop
lahf
xchg
call
cmp
push
repz
arpl
sub
xlat
push
dec
xor
mov
scas
lods
jns
xchg
xchg
in
and
dec
movs
hlt
(bad)
call
jmp
sar
adc
push
frstor
(bad)
(bad)
jmp
js
mov
fdivrp
push
enter
jns
adc
or
cmp
xchg
sar
(bad)
(bad)
call
retf
mov
inc
aaa
mov
jns
shl
fmul
pop
ficomp
pop
pop
jae
loop
(bad)
(bad)
(bad)
std
inc
push
mov
aad
inc
push
mov
sub
ds
or
ins
jno
xor
(bad)
(bad)
jg
cld
test
cli
fcmovu
jp
nop
into
pmulhuw
push
xor
ror
sbb
ret
(bad)
enter
pop
stos
xchg
dec
(bad)
ins
jmp
outs
push
ret
or
sbb
fwait
pop
fsub
lahf
pop
call
jmp
cli
pop
imul
nop
jl
mov
scas
fld
xchg
dec
addr16
dec
les
movs
(bad)
repnz
cmp
mov
add
jg
stos
in
retf
xchg
bound
shl
inc
mov
gs
aad
(bad)
and
xor
outs
fcmovu
jnp
sub
or
add
shl
outs
aam
cs
loopne
cmp
movs
das
ds
ja
(bad)
(bad)
(bad)
call
icebp
pop
mov
jg
or
sub
push
push
mov
(bad)
(bad)
(bad)
push
mov
out
popa
mov
inc
aad
sub
dec
dec
and
sub
pop
dec
movs
(bad)
(bad)
(bad)
jns
mov
mov
cmp
mov
mov
nop
test
mov
cmp
(bad)
jmp
mov
sbb
pusha
push
adc
(bad)
adc
es
push
pop
or
mov
rcl
ins
loopne
call
cmps
mov
and
test
repnz
jg
stos
inc
push
pop
cmc
push
movs
push
sar
mov
xor
stos
aaa
or
and
(bad)
cmps
scas
fisub
fnstenv
loopne
pusha
add
push
inc
scas
add
jle
ja
loope
retf
mov
addr16
sar
and
call
scas
(bad)
(bad)
(bad)
cmp
adc
aaa
lea
mov
mov
(bad)
fdivrp
inc
push
rol
aaa
mov
arpl
jmp
mov
mov
xchg
fdivp
lea
mov
cmp
jle
mov
fimul
mov
shr
nop
icebp
fild
inc
sub
sbb
sbb
and
jg
inc
sbb
and
mov
out
fdivp
std
add
cmp
(bad)
inc
scas
or
jae
cmp
out
dec
add
int3
(bad)
sub
sbb
or
aaa
je
push
call
call
test
fisub
scas
lods
in
scas
mov
dec
repnz
pop
(bad)
(bad)
(bad)
jg
fistp
sbb
jae
pushf
rcl
inc
lods
sub
sahf
pushf
dec
sub
or
std
(bad)
cmp
test
push
lods
aaa
xlat
push
bound
sbb
cli
inc
fcomip
(bad)
inc
inc
mov
and
out
jp
sbb
mov
cmp
lock
retf
and
scas
ds
sub
js
(bad)
(bad)
(bad)
jmp
shr
jecxz
inc
jle
dec
cmp
bound
gs
mov
push
push
pop
sar
(bad)
(bad)
call
add
cld
cmp
into
xor
inc
out
jnp
cmp
cli
mov
push
loop
push
cmps
repnz
std
mov
ret
leave
leave
push
inc
xor
loopne
xlat
and
push
scas
outs
cmp
xor
loopne
mov
rcl
js
dec
and
or
scas
fcom
(bad)
(bad)
(bad)
mov
add
add
mov
lock
or
add
xchg
xchg
mov
or
mov
clc
xor
call
(bad)
(bad)
push
lahf
daa
popa
pop
mov
int
inc
add
mov
xor
inc
dec
mov
(bad)
(bad)
dec
test
mov
cmp
mov
pop
mov
lods
enter
std
dec
aas
cmp
leave
imul
sub
push
stc
mov
and
pop
(bad)
out
xchg
stos
pop
mov
aaa
cld
(bad)
fcomip
mov
jp
push
ss
ss
mov
xor
push
xchg
and
(bad)
mov
push
sub
mov
xchg
adc
je
clc
movs
dec
test
dec
mov
mov
or
pop
(bad)
(bad)
(bad)
dec
setbe
pusha
jbe
sbb
push
sub
ficom
sub
cmps
out
jp
pop
jno
(bad)
(bad)
call
enter
adc
mov
push
mov
mov
aad
cs
mov
sbb
add
mov
adc
(bad)
push
pop
adc
xchg
jmp
rcl
outs
mov
mov
xchg
xchg
or
push
xlat
(bad)
(bad)
dec
inc
push
mov
loopne
xchg
mov
xchg
xor
or
inc
dec
xchg
(bad)
inc
(bad)
(bad)
(bad)
dec
xchg
outs
sub
mov
fldenv
(bad)
into
sbb
sub
xchg
lds
pop
pop
sar
jmp
pop
aad
ret
fwait
pop
inc
fst
(bad)
stc
lock
int
and
adc
sbb
add
add
das
mov
pusha
xchg
sub
push
mov
iret
sub
adc
pop
stos
add
mov
or
test
mov
ss
xor
ficomp
cmps
push
les
xchg
pop
or
or
ror
mov
and
mov
je
movs
ja
dec
adc
data16
mov
(bad)
(bad)
(bad)
jp
fmul
clc
jmp
rcr
hlt
mov
out
push
cmp
push
xchg
or
or
(bad)
(bad)
inc
sbb
push
adc
imul
popa
into
mov
mov
adc
mov
clc
ins
xchg
mov
sahf
add
adc
es
stc
jecxz
mov
(bad)
call
fdiv
xchg
std
lods
xchg
clc
(bad)
repnz
cmp
add
dec
ret
push
out
mov
mov
fscale
pop
ret
(bad)
fdivrp
(bad)
jmp
xlat
or
adc
jmp
fs
div
dec
xchg
fmul
call
cs
cli
(bad)
push
cmp
or
add
push
sub
xor
jg
out
out
cmp
and
mov
or
ret
out
(bad)
out
(bad)
(bad)
call
mov
or
cs
int
loop
jns
mov
repnz
ds
jge
in
outs
mov
cmc
gs
mov
sbb
in
ins
mov
out
addr16
or
dec
mov
xchg
add
imul
inc
les
push
and
xchg
xor
aad
ss
pop
call
mov
sar
loop
xor
pusha
adc
repnz
(bad)
(bad)
inc
jbe
and
mov
pop
or
adc
enter
lods
xor
(bad)
repz
cmp
(bad)
dec
(bad)
out
imul
imul
push
in
sbb
pop
in
or
(bad)
(bad)
push
imul
test
out
push
sbb
inc
and
(bad)
push
jle
out
fst
(bad)
push
cmc
fimul
fidivr
and
cs
mov
add
add
pop
pop
std
mov
fsubr
add
daa
fmul
xchg
and
fs
sahf
mov
(bad)
(bad)
(bad)
call
pop
cmc
push
pusha
loope
mov
test
jg
movs
xor
push
fidiv
(bad)
(bad)
jmp
pop
jnp
test
mov
ins
push
dec
push
aad
or
sbb
repz
sbb
adc
clc
aas
xchg
dec
cwde
dec
cmp
sbb
mov
(bad)
(bad)
cmp
nop
push
mov
dec
les
mov
jae
imul
in
inc
shl
(bad)
(bad)
in
mov
cmc
jns
jbe
push
inc
inc
enter
addr16
pop
bound
cdq
shl
pop
cmc
(bad)
std
ror
xchg
stc
mov
mov
dec
dec
mov
gs
ficomp
(bad)
(bad)
inc
cmc
xchg
test
xchg
adc
test
dec
das
xlat
test
lock
push
xchg
sub
cli
(bad)
jg
daa
and
cmps
push
sub
int
push
inc
adc
les
inc
add
je
(bad)
int
inc
(bad)
mov
mov
test
push
cs
cmps
and
jmp
int
pop
cs
push
repnz
mov
rcl
push
aaa
or
std
call
sbb
jo
fwait
jbe
inc
sbb
xchg
add
and
(bad)
(bad)
jmp
dec
out
inc
sbb
xchg
rol
and
mov
sub
shr
cs
(bad)
(bad)
call
std
jmp
mov
aaa
sbb
out
xlat
push
sbb
dec
xlat
sbb
(bad)
(bad)
dec
mov
cmc
cli
(bad)
movs
lds
and
cmp
ds
sub
mov
inc
leave
popf
arpl
test
(bad)
(bad)
(bad)
clc
test
inc
ret
and
pop
or
or
jecxz
or
push
push
inc
xchg
inc
inc
scas
xchg
fldcw
inc
add
jno
and
lock
(bad)
(bad)
jge
jne
sub
fs
cmps
leave
movs
push
sbb
int
aaa
pop
cmp
mov
call
mov
and
pop
mov
cmp
cmp
imul
daa
mov
adc
jb
inc
call
loopne
clc
popf
inc
and
jmp
cwde
je
inc
movs
sbb
adc
adc
mov
inc
cmp
(bad)
(bad)
jmp
push
les
enter
dec
rol
dec
inc
inc
xor
xor
dec
sahf
mov
add
mov
inc
pop
inc
add
adc
pusha
imul
test
adc
outs
jle
sub
jle
(bad)
(bad)
inc
in
mov
pop
mov
push
mov
arpl
push
add
pop
or
jb
dec
and
(bad)
(bad)
inc
pop
ret
mov
js
inc
dec
push
cmp
jecxz
(bad)
mov
mov
push
mov
(bad)
(bad)
(bad)
cmp
mov
mov
jmp
sub
sub
add
fisttp
sar
add
jecxz
outs
lds
jo
outs
jbe
movs
jo
add
out
mov
pop
popa
daa
xchg
(bad)
(bad)
in
pop
push
test
clc
inc
adc
fsubr
adc
shl
and
push
mov
sti
out
mov
push
mov
ins
ja
clc
outs
lahf
(bad)
call
mov
lods
(bad)
(bad)
fadd
aas
repz
inc
sti
jl
lock
(bad)
inc
fist
hlt
mov
inc
sti
scas
(bad)
clc
jg
cli
mov
cmc
mov
(bad)
cmp
dec
jmp
jg
mov
mov
out
and
int3
push
into
mov
or
(bad)
pushf
pop
jmp
test
jnp
scas
mov
lods
scas
ins
lods
inc
mov
in
add
sbb
sub
rcl
mov
inc
inc
dec
cwde
dec
or
sub
sbb
xchg
mov
(bad)
(bad)
(bad)
jmp
pop
test
dec
mov
dec
xor
pop
and
in
fisub
push
imul
inc
or
and
or
lods
fidiv
jp
scas
mov
or
(bad)
push
nop
and
retf
ficomp
aas
add
xor
push
(bad)
(bad)
(bad)
call
lods
sbb
loop
xlat
ins
aam
aad
mov
imul
scas
scas
push
int3
xchg
outs
clc
(bad)
push
pop
aaa
push
push
sub
(bad)
mov
mov
inc
and
mov
(bad)
(bad)
(bad)
inc
fdivr
stos
adc
js
inc
inc
pop
xchg
dec
mov
cli
sub
fsubp
mov
mov
loopne
stos
fld
and
adc
in
xchg
test
and
pop
xor
mov
out
fcomi
lock
add
loope
test
arpl
(bad)
(bad)
out
add
fidivr
inc
sub
push
push
dec
fldlg2
jo
inc
lahf
ja
cmp
push
xchg
push
mov
inc
and
outs
dec
cmps
xchg
mov
dec
inc
push
dec
gs
lods
mov
xor
and
(bad)
(bad)
(bad)
call
ss
pop
adc
push
or
imul
add
dec
call
test
push
add
ins
test
mov
jbe
add
jae
jae
dec
adc
stos
sbb
inc
(bad)
mov
pop
sub
mov
(bad)
dec
push
shl
aas
lods
cmp
mov
jmp
icebp
mov
repz
or
and
popf
jnp
jns
push
mov
(bad)
dec
call
ss
pop
push
movs
xor
mov
(bad)
pop
dec
xlat
lods
mov
inc
jmp
iret
push
neg
(bad)
clc
(bad)
xchg
pop
aas
xchg
xchg
out
mov
ret
jb
sub
stos
push
in
push
cdq
cmp
(bad)
(bad)
(bad)
call
push
data16
mov
stos
popf
aaa
jno
test
imul
test
loopne
dec
ins
bound
fdivr
jmp
shl
add
nop
jmp
mov
xor
imul
(bad)
(bad)
jmp
push
adc
sbb
cmp
push
cwde
call
jl
lods
fcmovbe
in
out
stos
(bad)
(bad)
(bad)
cli
fstp
repz
shr
sbb
sub
cmp
(bad)
jmp
leave
in
mov
pop
jmp
ret
mov
inc
(bad)
(bad)
(bad)
jmp
and
push
mov
popf
ret
adc
retf
xor
push
fiadd
adc
(bad)
call
loopne
add
mov
daa
rol
pop
pop
(bad)
fs
(bad)
(bad)
(bad)
jmp
iret
cmp
pop
bound
cmps
or
movs
sub
and
fistp
dec
jo
(bad)
jmp
rol
aam
call
mov
xchg
jl
mov
inc
lahf
shl
enter
ja
or
add
cmp
mov
and
je
test
mov
into
pop
mov
clc
inc
cmp
xchg
and
sbb
in
outs
outs
mov
inc
hlt
pop
and
stos
push
adc
mov
fsubr
mov
inc
inc
xchg
js
ja
mov
(bad)
test
or
(bad)
mov
scas
adc
jne
xchg
xor
mov
loope
pop
cmc
jmp
add
out
sti
inc
imul
fs
inc
lea
lock
aas
dec
ds
mov
stos
or
pop
fistp
(bad)
(bad)
fild
jae
repz
out
int
cwde
push
ret
add
loope
mov
xlat
(bad)
(bad)
call
stos
sahf
ret
out
push
leave
and
lds
jecxz
push
dec
push
mov
clc
call
outs
(bad)
jg
fisttp
jp
dec
movs
popa
adc
scas
mov
adc
xor
sbb
push
fcom
dec
push
daa
rcr
mov
ret
fisttp
ins
repz
mov
xor
push
push
int3
(bad)
(bad)
(bad)
jg
aad
ret
je
mov
or
ins
mov
cmp
cdq
sti
outs
pop
jle
aad
dec
inc
cmc
(bad)
mov
jmp
pop
aas
add
push
int3
jecxz
iret
inc
(bad)
(bad)
cmp
aam
jle
les
pop
mov
and
inc
xchg
xchg
(bad)
(bad)
mov
aad
es
pop
inc
adc
iret
dec
add
inc
pop
popf
sahf
shr
add
cs
(bad)
retf
sti
test
sbb
adc
shl
dec
call
ins
(bad)
cmp
(bad)
call
lea
add
repnz
sbb
mov
adc
inc
rcl
sbb
push
icebp
jecxz
push
cmps
test
push
sub
test
jno
mov
or
fcmovbe
xor
ja
(bad)
jmp
dec
sahf
out
dec
adc
xchg
cmp
mov
xlat
pop
stos
jo
movs
(bad)
(bad)
(bad)
call
cmp
popa
inc
push
enter
xchg
jmp
inc
dec
retf
scas
xchg
dec
jmp
(bad)
(bad)
(bad)
jmp
rcl
(bad)
jno
jbe
cmp
inc
popf
ds
(bad)
mov
sub
ret
call
sub
repz
pop
mov
xchg
aam
(bad)
(bad)
fstp
inc
push
sbb
imul
push
nop
sub
xor
adc
(bad)
(bad)
inc
xchg
daa
(bad)
loope
in
shl
ret
cmps
cmps
pushw
repnz
cli
neg
mov
(bad)
call
into
js
rol
cmc
cli
mov
dec
jns
cmp
stos
add
imul
cmp
sub
mov
(bad)
out
cli
mov
xor
ss
call
je
inc
les
(bad)
(bad)
(bad)
push
retf
ror
ins
stos
loop
es
repz
jne
ins
inc
push
mov
call
clc
(bad)
(bad)
inc
xchg
push
stc
inc
ins
jl
sub
pop
xor
es
stos
adc
std
(bad)
sbb
call
rol
push
and
add
sub
stos
inc
cmp
pop
inc
int3
sub
scas
imul
push
(bad)
(bad)
(bad)
fidiv
in
xchg
sub
mov
and
push
pop
and
push
(bad)
(bad)
(bad)
dec
xchg
shr
xchg
rcr
popf
pop
mov
shl
add
add
push
and
xor
mov
adc
inc
pushf
xchg
rol
adc
push
fs
dec
int3
dec
sahf
pop
cmc
(bad)
(bad)
jmp
jle
int3
jbe
add
fsub
adc
push
mov
jge
fucomip
out
and
in
stos
push
fnsave
fidivr
sbb
sub
outs
fistp
(bad)
(bad)
(bad)
(bad)
or
rcl
out
jecxz
repz
loope
lods
ja
sbb
xchg
call
jecxz
jns
call
jbe
loopne
fwait
pop
fidivr
(bad)
call
add
retf
push
push
pop
stos
and
sti
pop
fdivr
jg
dec
lock
jnp
jb
sti
fld
aam
cs
inc
cdq
cmp
(bad)
(bad)
cmp
inc
shr
jae
push
out
and
rol
rol
inc
xchg
inc
addr16
add
ins
adc
call
retf
xchg
mov
mov
in
xchg
inc
add
(bad)
(bad)
dec
je
adc
push
bound
pop
enter
popa
mov
(bad)
(bad)
(bad)
call
inc
and
cmp
sbb
pop
xchg
int
mov
jns
fiadd
jmp
xchg
imul
in
ror
dec
(bad)
jmp
mov
push
(bad)
xchg
xchg
xor
dec
lea
sbb
dec
iret
sub
(bad)
dec
ins
lods
fsubr
gs
push
and
xchg
jne
add
not
sbb
(bad)
mov
(bad)
repnz
outs
mov
cli
stc
outs
iret
jnp
sub
adc
jecxz
js
popa
mov
imul
jno
repnz
pusha
inc
inc
ss
cld
mov
clc
and
sub
jge
mov
lea
add
jmp
mov
inc
jns
push
or
push
popf
dec
stos
(bad)
in
adc
mov
pop
lock
(bad)
(bad)
call
dec
out
add
hlt
jo
(bad)
fsub
dec
push
push
data16
invd
call
sub
stos
push
xor
and
ins
popa
cs
xchg
pop
adc
(bad)
call
scas
pop
cs
add
mov
shl
pop
mov
lea
(bad)
jmp
arpl
xchg
jae
add
sub
jmp
dec
fs
pop
ja
add
outs
mov
aad
mov
jl
add
mov
rcl
and
or
mov
jmp
dec
and
aad
shr
test
(bad)
(bad)
(bad)
mov
pop
popa
leave
popa
and
pop
xor
and
mov
push
das
sub
xor
ss
and
dec
push
mov
(bad)
(bad)
call
dec
pusha
jecxz
xchg
mov
adc
mov
shr
loopne
mov
ja
pop
icebp
(bad)
jmp
push
inc
leave
pop
xor
xchg
pushf
pop
outs
fdiv
repz
pop
xchg
arpl
(bad)
cmp
stos
and
(bad)
call
imul
lds
leave
pop
sbb
pop
icebp
call
repz
retf
lods
cdq
js
stos
lock
mov
int3
inc
xchg
daa
out
in
cmps
mov
(bad)
inc
and
sbb
dec
cs
pop
push
push
cmp
adc
pop
fist
xor
sbb
pop
iret
jl
cmp
(bad)
in
mov
test
clc
jp
into
jae
push
test
jnp
shl
ins
add
inc
or
stos
jmp
rcl
pop
call
aaa
std
call
fist
retf
mov
(bad)
sahf
(bad)
inc
das
push
lds
rcr
mov
loopne
dec
ret
xchg
adc
adc
and
(bad)
jmp
aam
mov
retf
dec
or
and
cmp
and
outs
mov
xor
(bad)
(bad)
push
sub
mov
call
(bad)
pop
nop
test
xor
in
xor
(bad)
(bad)
(bad)
(bad)
out
sub
icebp
mov
jmp
outs
jmp
sbb
mov
xor
(bad)
push
mov
leave
jl
sub
inc
popa
test
xor
(bad)
(bad)
(bad)
jnp
xlat
pop
shl
aaa
in
in
mov
movs
call
jmp
outs
jmp
jne
mov
cmps
sub
jnp
mov
(bad)
mov
push
pop
(bad)
sar
push
out
sbb
xlat
mov
sti
fcmovbe
loop
std
hlt
jmp
jl
mov
imul
pop
ja
fwait
(bad)
(bad)
jmp
ja
stc
jae
fstp
movs
pop
(bad)
jns
ss
fstp
(bad)
(bad)
dec
mov
fimul
scas
jo
ins
test
sbb
repz
xchg
(bad)
(bad)
fist
hlt
mov
fwait
mov
jecxz
icebp
data16
xor
fcmovu
pushf
mov
(bad)
div
stos
mov
out
jo
pop
adc
stos
test
or
jne
push
(bad)
(bad)
(bad)
dec
add
and
push
test
pop
adc
jecxz
jbe
inc
lock
sbb
(bad)
std
dec
mov
(bad)
(bad)
shl
cmp
(bad)
mov
jmp
(bad)
int
pop
push
outs
ds
pop
mov
into
or
(bad)
jmp
cmp
sti
mov
mov
call
popa
mov
sbb
(bad)
fistp
adc
jmp
mov
imul
daa
jno
xor
pop
pop
jno
cmp
adc
(bad)
(bad)
jmp
push
jnp
jmp
int
imul
xlat
sub
and
jp
add
add
and
cld
(bad)
jmp
dec
sar
mov
ja
(bad)
jecxz
mov
pop
repnz
imul
inc
mov
fsubr
mov
aaa
push
or
(bad)
(bad)
call
inc
ret
jp
push
mov
ret
jno
mov
ret
or
xchg
(bad)
jg
hlt
cld
test
je
aam
pop
test
cmp
and
(bad)
push
aas
fsub
dec
mov
cmp
mov
pop
loop
push
push
xor
add
(bad)
sbb
stos
xor
or
jmp
fs
test
mov
mov
push
or
mov
bound
add
jmp
adc
add
mov
add
(bad)
push
mov
xchg
out
mov
dec
fldenv
inc
add
lods
push
imul
sub
push
aam
(bad)
(bad)
(bad)
inc
test
lahf
popf
pop
scas
xchg
add
enter
dec
xor
pop
pop
mov
or
push
inc
(bad)
aas
mov
jp
loope
stos
in
test
test
and
aam
lea
(bad)
(bad)
call
add
ss
ret
test
push
pop
adc
jge
loope
ret
xchg
adc
(bad)
call
jmp
add
jmp
or
mov
(bad)
dec
mov
ja
imul
and
inc
mov
(bad)
(bad)
(bad)
call
mov
mov
sbb
movs
mov
jmp
push
sti
loope
(bad)
or
jmp
call
test
pop
enter
mov
(bad)
jg
or
ret
lods
adc
sub
(bad)
(bad)
push
shr
test
dec
call
adc
adc
xor
mov
cmp
outs
pop
sbb
int3
sub
xor
inc
imul
out
(bad)
mov
mov
(bad)
jmp
fcomp
(bad)
and
cmp
sub
je
inc
inc
adc
pop
cs
cmp
clc
(bad)
(bad)
call
cld
retf
inc
test
fdivr
sbb
mov
imul
es
adc
pop
inc
dec
push
retf
ficom
pusha
retf
(bad)
(bad)
(bad)
inc
mov
xchg
dec
dec
cmps
add
dec
add
push
sbb
jl
ror
es
push
lds
call
nop
push
jp
loope
adc
mov
lea
out
(bad)
(bad)
jmp
sbb
lea
cmp
call
pop
enter
adc
adc
jmp
(bad)
cli
bound
in
jle
in
pop
outs
mov
mov
mov
out
js
mov
out
jmp
stos
mov
adc
push
cs
ins
jl
push
fwait
jnp
add
push
jp
(bad)
jg
fadd
neg
jnp
mov
and
(bad)
(bad)
aad
jns
jg
cmps
jecxz
xchg
mov
pop
test
push
clc
pusha
(bad)
(bad)
(bad)
inc
aad
cld
jmp
pop
xchg
mov
xchg
xchg
mov
(bad)
out
out
dec
push
(bad)
jmp
push
outs
mov
popf
mul
jg
jb
test
shr
cld
scas
movq
aad
js
test
cmp
jg
xchg
lahf
mov
jge
lahf
mov
sbb
mov
and
or
ret
(bad)
lea
jecxz
pop
(bad)
loopne
call
cmp
pusha
ds
mov
mov
lock
fcom
mov
popa
mov
dec
and
cmp
or
push
(bad)
cmp
mov
adc
pushf
pop
shl
mov
add
repz
dec
fidiv
xor
sbb
push
inc
push
inc
inc
and
in
stos
ds
nop
push
cld
(bad)
dec
sub
popf
jb
pop
lods
mov
push
mov
and
cmc
add
pop
mov
inc
pand
jno
xchg
scas
int3
outs
cmp
(bad)
fsubr
imul
mov
icebp
(bad)
inc
test
xor
test
daa
sbb
ins
sti
dec
cld
(bad)
jmp
adc
cs
ficomp
ins
call
dec
out
(bad)
(bad)
(bad)
(bad)
mov
pop
xor
cdq
xchg
ds
inc
loop
pop
mov
and
clc
addr16
scas
jmp
(bad)
(bad)
jg
adc
cmp
add
retf
mov
fld
pop
retf
cmp
and
(bad)
(bad)
(bad)
dec
das
stc
xor
pusha
inc
ja
test
and
cwde
call
clc
std
ds
ret
std
(bad)
inc
xor
sub
and
jmp
call
pop
cmp
inc
pop
enter
ja
mov
pop
jp
mov
out
push
add
xor
outs
mov
nop
in
mov
sbb
repz
mov
mov
jecxz
adc
test
add
or
dec
imul
pop
lods
fld
cmps
les
pusha
push
cld
mov
dec
or
in
mov
xchg
xchg
test
in
pop
mov
sub
adc
lock
(bad)
push
call
aad
test
push
adc
int
mov
dec
pop
jge
aam
mov
jbe
aam
(bad)
(bad)
call
mov
(bad)
pop
lods
mov
mov
push
mov
mov
mul
mov
(bad)
(bad)
(bad)
push
fwait
adc
inc
test
iret
pop
push
pop
daa
(bad)
leave
jne
add
(bad)
pop
(bad)
(bad)
(bad)
(bad)
jnp
inc
jmp
sub
leave
xchg
push
dec
push
mov
es
xchg
mov
xor
mov
xor
ins
sbb
test
dec
mov
mov
pop
js
jmp
(bad)
(bad)
(bad)
cmp
adc
inc
or
call
add
leave
ins
fcmovbe
push
jns
aad
sbb
inc
(bad)
call
shl
cwde
into
mov
cwde
dec
inc
and
mov
adc
or
inc
mov
div
push
adc
xchg
stos
add
mov
add
add
cmps
les
add
(bad)
(bad)
dec
cld
mov
push
xor
or
inc
sbb
sbb
push
test
(bad)
(bad)
(bad)
jmp
loop
ja
inc
inc
popf
push
jmp
shl
xchg
sbb
(bad)
jmp
inc
jo
mov
repnz
loope
jge
ret
das
sbb
stos
mov
(bad)
dec
popf
add
leave
or
mov
int3
push
loopne
push
jmp
adc
adc
lds
(bad)
inc
mov
hlt
bound
bswap
mul
add
cmc
fcomip
xchg
test
mov
addr16
fistp
test
or
das
std
(bad)
(bad)
inc
mov
out
test
div
sbb
shr
nop
cmp
mov
pop
(bad)
fcomip
pop
lock
or
pop
out
pusha
xor
inc
mov
adc
imul
xor
jnp
add
repnz
idiv
dec
inc
repnz
(bad)
mov
pop
sbb
mov
pop
call
ret
mov
in
ret
in
jmp
(bad)
(bad)
(bad)
jge
dec
fbstp
pop
mov
mov
shl
in
sbb
(bad)
rcl
xor
(bad)
out
inc
fsubp
clc
pop
pop
(bad)
mov
mov
add
sbb
(bad)
(bad)
fidivr
outs
cld
out
jg
iret
pop
xchg
into
out
rcr
dec
or
(bad)
in
arpl
repz
xchg
scas
add
(bad)
(bad)
call
push
mov
test
mov
adc
add
pushf
pusha
push
and
mov
fadd
(bad)
ds
xor
push
leave
pop
ret
sbb
push
aas
test
and
sahf
retf
jmp
scas
xlat
mov
or
test
(bad)
(bad)
(bad)
ds
pop
cmp
inc
adc
bound
div
mov
pop
jl
in
(bad)
(bad)
jg
mov
or
fcom
xchg
xor
les
mov
(bad)
(bad)
mov
dec
fwait
(bad)
push
mov
mov
inc
or
(bad)
(bad)
mov
adc
xchg
aas
inc
sub
mov
pusha
scas
fwait
lahf
repz
(bad)
(bad)
(bad)
jmp
es
cs
mov
push
pop
out
leave
stos
mov
xor
mov
das
mov
(bad)
(bad)
(bad)
inc
add
mov
nop
nop
call
cmp
dec
add
into
cmp
(bad)
(bad)
inc
xchg
sbb
adc
sub
stos
sub
or
xchg
fs
adc
xor
fidiv
mov
cli
cmps
jle
ins
jnp
sbb
mov
inc
cmc
push
pop
nop
dec
into
mul
cmc
(bad)
(bad)
(bad)
jp
test
jbe
xor
pop
mov
es
mov
ins
dec
test
sbb
stos
add
nop
adc
in
adc
mov
(bad)
(bad)
mov
inc
sub
jo
into
movs
sub
pusha
dec
js
xor
jge
stos
(bad)
(bad)
dec
adc
sub
lods
test
xor
in
dec
and
or
mov
mov
hlt
add
or
sbb
(bad)
(bad)
call
sub
cdq
jae
inc
jge
cli
jecxz
mov
iret
pushf
cmp
pop
fist
add
stos
add
(bad)
jg
xor
mov
pop
stos
mov
lock
xchg
retf
fisttp
dec
dec
push
mov
jo
stc
fisubr
push
fldcw
inc
stos
ss
add
mov
add
push
cdq
mov
aaa
inc
(bad)
(bad)
(bad)
jmp
rol
inc
sub
sub
sub
fwait
repnz
push
xchg
into
add
add
jg
movs
int3
adc
rol
mov
and
pop
mov
clc
fcomip
jg
mov
inc
(bad)
mov
scas
or
jp
(bad)
(bad)
jmp
ret
std
ret
xlat
shl
fisub
inc
loop
cdq
cmp
ins
fwait
(bad)
(bad)
(bad)
(bad)
cmp
out
neg
mov
movs
in
xor
cld
jmp
push
sbb
(bad)
(bad)
push
into
mov
rcl
jo
xchg
adc
pop
loope
inc
xor
add
push
mov
cpuid
(bad)
(bad)
(bad)
mov
mov
addps
xor
xor
push
inc
and
sahf
mov
pop
in
(bad)
sub
cmps
pop
icebp
or
xchg
xchg
mov
xchg
xor
adc
addr16
lods
mov
xchg
movs
push
les
daa
push
iret
lods
or
adc
or
mov
dec
and
dec
fcom
inc
pushf
sbb
fidivr
shl
cli
fs
(bad)
(bad)
inc
fcmovb
pushw
dec
or
js
jnp
bndldx
pusha
sub
shl
(bad)
jmp
cli
bound
mov
sbb
mov
and
(bad)
popf
fistp
mov
pop
add
or
fcom
dec
mov
lea
(bad)
inc
mov
xor
cdq
ret
into
mov
scas
mov
pop
adc
push
std
inc
dec
and
dec
mov
xor
ins
fistp
jae
fild
mov
clc
ret
repnz
ins
int3
push
call
mov
mov
lods
ds
xchg
ds
dec
fcomip
(bad)
jg
(bad)
retf
add
inc
push
push
cs
fisubr
add
inc
pop
ret
sbb
bound
xor
inc
icebp
aaa
jle
jge
cld
push
cld
outs
jmp
adc
icebp
into
cmp
cli
mov
loope
fist
pop
std
jmp
ss
shl
fxch
add
(bad)
(bad)
(bad)
mov
in
adc
and
mov
cmp
shl
cdq
jl
sub
call
jmp
add
dec
popa
add
jmp
dec
nop
inc
mov
mov
mov
(bad)
(bad)
(bad)
jmp
add
mov
jl
retf
sub
push
xchg
rol
dec
popf
pop
mov
mov
inc
call
(bad)
(bad)
cmp
shl
add
inc
and
scas
jp
loopne
mul
test
std
fadd
outs
xor
clc
(bad)
(bad)
jmp
jmp
and
or
inc
sbb
arpl
mov
test
(bad)
(bad)
jmp
pop
retf
xor
cli
adc
int3
xchg
and
cmp
icebp
fcomip
fist
into
mov
sub
daa
outs
cmp
cmp
cli
(bad)
(bad)
(bad)
(bad)
stos
mov
inc
les
cmp
sub
enter
sbb
inc
(bad)
(bad)
(bad)
call
leave
adc
(bad)
pop
popa
fcom
add
inc
dec
lock
xor
push
(bad)
(bad)
(bad)
jmp
or
out
outs
cli
cmp
fild
or
add
sbb
and
das
jno
adc
lods
or
(bad)
call
sub
xchg
adc
jno
movs
nop
aas
xlat
ins
mov
dec
cli
push
push
sets
(bad)
(bad)
(bad)
jmp
push
pop
adc
repnz
sub
mov
or
mov
dec
xchg
push
pop
xor
(bad)
(bad)
(bad)
jmp
lock
inc
nop
and
mov
inc
push
jb
adc
(bad)
(bad)
(bad)
dec
sbb
push
inc
inc
lds
sbb
sub
push
xchg
push
outs
out
repz
imul
out
popf
aad
or
mov
cmp
add
jecxz
jmp
clc
lea
popf
jle
cld
pop
mov
mov
cwde
clc
sti
mov
sub
outs
(bad)
jmp
fdiv
mov
loop
mov
(bad)
in
(bad)
(bad)
mov
inc
sbb
mov
pop
add
push
push
xchg
stos
and
call
xor
test
cmp
and
jae
jg
(bad)
in
xor
and
and
je
shr
xor
sub
(bad)
call
loop
popa
shl
lods
cmp
fyl2x
(bad)
(bad)
(bad)
(bad)
jmp
call
cmp
push
jb
cs
aam
lahf
pop
stos
cmp
call
(bad)
(bad)
mov
xchg
jmp
xor
pop
scas
call
out
mov
scas
cmp
sub
sub
in
cmp
add
out
lock
fdiv
(bad)
jbe
(bad)
(bad)
(bad)
(bad)
mov
sub
sbb
dec
dec
mov
or
cld
jb
popa
cs
xor
mov
push
add
mov
cmp
xchg
inc
jno
ds
mov
adc
cmp
sub
and
sbb
(bad)
(bad)
inc
std
mov
jmp
or
test
loope
adc
mov
inc
lods
sub
ret
jne
sub
push
cmp
sub
mov
dec
add
and
stos
dec
call
push
cld
(bad)
fisubr
adc
inc
(bad)
jmp
mov
xor
dec
cmp
jmp
retf
add
cmp
call
out
fcomp
sbb
(bad)
bound
je
mov
pop
inc
(bad)
pop
div
(bad)
(bad)
(bad)
push
cmp
hlt
add
cli
inc
push
jo
and
add
cmp
popa
adc
jo
adc
or
(bad)
call
loop
ins
repz
aaa
ja
mov
gs
mov
cmp
pop
into
cmps
pop
in
mov
cmp
es
mov
call
icebp
pop
sub
scas
lahf
cmp
pop
add
pop
pop
call
push
les
cmp
push
arpl
fstp
rcl
(bad)
cmp
fdiv
jmp
iret
jnp
xchg
daa
arpl
xlat
push
fs
fnsave
mov
std
cmps
jle
test
call
mov
fucomp
(bad)
scas
mov
icebp
ja
out
lahf
(bad)
cmp
(bad)
(bad)
call
out
shl
dec
xchg
je
fsave
push
cmp
iret
popa
idiv
add
arpl
jle
ret
jne
sbb
(bad)
(bad)
dec
retf
mov
icebp
pop
sar
lods
inc
or
sbb
(bad)
push
xor
push
and
add
addr16
and
mov
add
or
mov
jo
mov
int3
cmp
test
jmp
stc
mov
mov
inc
enter
pop
push
(bad)
stos
mov
std
jg
les
jbe
and
popaw
ror
nop
add
(bad)
inc
icebp
test
jge
mov
push
mov
add
cmp
cld
call
arpl
call
push
push
xor
aam
inc
fxch
pop
pop
imul
(bad)
es
cmp
(bad)
inc
mov
jmp
aaa
inc
sub
rol
inc
sbb
movs
movs
out
add
(bad)
(bad)
jge
adc
and
ret
or
pop
fisubr
xor
and
cdq
add
jo
add
fwait
clc
sti
jae
not
les
push
outs
pop
loop
(bad)
push
int3
pop
sbb
xor
cmp
nop
mov
jp
xchg
arpl
and
lods
xlat
or
(bad)
(bad)
mov
pop
enter
(bad)
je
xor
add
mov
call
loopne
retf
pop
or
xchg
mov
and
cli
call
out
rcl
jns
pusha
dec
retf
in
mov
call
push
mov
stos
not
sub
push
outs
jmp
mov
or
jb
(bad)
(bad)
dec
call
xor
pusha
sbb
xchg
xchg
xchg
iret
or
mov
sbb
dec
scas
cmp
in
jmp
js
inc
push
push
xchg
push
adc
(bad)
(bad)
mov
push
mov
(bad)
(bad)
(bad)
mov
mov
stos
call
cmp
jp
addr16
mov
push
aad
(bad)
jmp
mov
retf
jnp
sub
cmp
jmp
call
xor
jno
add
inc
cld
mov
mov
push
sar
(bad)
inc
push
outs
dec
adc
popa
stc
mov
retf
sub
cli
(bad)
call
sub
mov
xchg
push
pop
xor
fs
(bad)
out
(bad)
call
sar
pop
aaa
xchg
dec
dec
pop
lds
pop
cmp
pop
hlt
push
jmp
out
out
mov
loope
lds
ja
or
sahf
cmp
and
sub
mov
aas
(bad)
sbb
mul
xchg
outs
pop
out
push
fld
jg
mov
jb
adc
or
inc
mov
mov
mov
fs
adc
xchg
xchg
push
jmp
iret
loop
popfw
mov
add
or
test
loop
jmp
lock
mov
inc
mov
test
inc
or
je
inc
clc
mov
(bad)
fild
xchg
sbb
xchg
add
ss
movs
xchg
popf
(bad)
(bad)
(bad)
call
lock
push
stc
xlat
mov
sbb
mov
dec
xchg
cmps
ror
out
add
hlt
fistp
pusha
test
cmc
xchg
(bad)
(bad)
call
ja
jns
call
(bad)
cmc
call
in
mov
jge
and
sub
mov
or
fcmovnu
(bad)
fld
xchg
mov
(bad)
fisubr
inc
mov
pop
hlt
cmp
ja
retf
cmps
pandn
fdiv
sbb
sbb
lock
push
ret
ret
aaa
cmps
rol
les
loopne
add
dec
xchg
fs
repnz
ja
sbb
mov
ds
jg
int
hlt
cmp
pusha
and
inc
or
icebp
(bad)
mov
(bad)
inc
test
jmp
mov
sub
jns
jne
retf
(bad)
(bad)
(bad)
js
jmp
xor
test
rcl
mov
xor
aaa
dec
dec
cmp
push
lock
mov
xchg
push
data16
sub
mov
mov
push
xor
repz
out
cmp
shl
or
hlt
mov
shr
push
fsub
ja
in
or
(bad)
mov
mov
aad
and
dec
retf
inc
(bad)
(bad)
(bad)
call
inc
jg
push
pusha
repz
or
iret
sahf
test
lods
adc
push
pop
or
cmps
mov
pop
inc
jo
not
xchg
mov
scas
mul
jb
or
jmp
mov
mov
mov
jns
sub
enter
lods
push
lods
xchg
hlt
mov
ds
adc
sahf
and
cli
jl
sar
pop
dec
lock
mov
pop
rcr
js
jbe
xor
cmp
mov
call
rcr
jae
mov
jns
repz
popa
dec
ror
cmps
rol
(bad)
jmp
xor
clc
loop
test
test
jb
ss
add
std
call
jl
or
jnp
mov
xor
(bad)
(bad)
(bad)
jmp
movs
cld
js
imul
sub
push
add
lea
xor
sahf
cdq
inc
(bad)
(bad)
(bad)
(bad)
jmp
or
mov
dec
fs
nop
xor
sahf
aad
ins
push
add
int3
and
adc
test
(bad)
push
xor
and
sub
sub
and
sbb
ins
jmp
scas
aad
sbb
cmps
sbb
dec
scas
lods
rol
into
pop
push
pushf
sahf
pop
(bad)
stos
(bad)
mov
fadd
inc
xor
or
(bad)
sub
add
aaa
cmps
jns
dec
aas
jae
js
arpl
xor
sbb
dec
stos
aad
fnsave
cvtdq2ps
in
iret
jg
mov
xchg
out
(bad)
idiv
cmp
std
les
addr16
aas
(bad)
hlt
jecxz
adc
fdivr
jmp
pop
jns
call
popf
mov
xor
mov
jp
fadd
call
loop
call
xor
jns
ss
sub
loop
arpl
ficom
or
cmps
imul
aad
leave
fwait
repz
je
daa
inc
adc
xchg
cs
(bad)
(bad)
push
inc
shr
setle
out
jno
push
dec
sbb
aad
push
pushf
scas
cli
(bad)
dec
dec
mov
mov
ja
xlat
retf
sub
jbe
ins
outs
out
mov
(bad)
(bad)
jmp
inc
loopne
xor
mov
sub
inc
popa
cld
sbb
sub
inc
mov
fisttp
xchg
enter
adc
les
(bad)
(bad)
(bad)
push
push
fsub
lods
dec
cmp
inc
jmp
cwde
push
pop
add
add
pusha
sub
(bad)
(bad)
call
into
retf
loop
mov
test
adc
push
mov
out
movs
sbb
push
xchg
and
(bad)
(bad)
(bad)
mov
mov
rcr
aam
dec
rol
aas
and
ud0
ja
cmps
push
adc
mov
outs
shl
xchg
shl
js
int
leave
(bad)
inc
jns
out
pop
retf
aad
out
lods
(bad)
(bad)
(bad)
inc
sub
mov
fstp
pop
sbb
test
out
ja
pop
call
(bad)
jmp
ds
aaa
mov
mov
(bad)
sar
pop
popa
or
push
push
push
call
and
mov
mov
call
add
movs
dec
inc
cmp
adc
cld
push
push
push
imul
sbb
push
fnsave
ds
(bad)
out
xchg
adc
paddsb
push
cmp
sbb
ror
jmp
pop
fadd
sar
(bad)
jg
jl
and
cs
aad
in
cmp
xor
(bad)
cmp
lods
test
loope
(bad)
cmp
cmp
xchg
fcmovu
pop
pop
add
push
cmp
sub
(bad)
(bad)
(bad)
(bad)
(bad)
fcmove
movs
push
shl
pop
push
jmp
dec
pop
in
lea
and
(bad)
pop
cmp
(bad)
dec
add
mov
inc
adc
iret
push
out
jp
adc
icebp
popa
shl
jg
jbe
hlt
dec
cmps
dec
(bad)
push
stos
dec
enter
daa
pop
add
or
test
pusha
mov
dec
and
js
or
ficomp
lock
movs
pusha
mov
push
mov
add
lds
(bad)
(bad)
mov
arpl
mov
jb
push
mov
and
cld
ds
xchg
arpl
jno
cld
(bad)
(bad)
dec
add
in
imul
add
movs
in
(bad)
sub
inc
ret
push
rcr
mov
xchg
stos
data16
cmp
in
inc
ror
sub
(bad)
(bad)
(bad)
std
cmp
cmp
sub
(bad)
cmps
mov
(bad)
imul
pop
lods
add
jle
imul
outs
and
inc
jnp
fwait
mov
pop
cmp
cld
(bad)
(bad)
call
sbb
mov
push
and
sbb
and
and
mov
sub
cmps
and
(bad)
dec
mov
dec
push
xor
xchg
jo
jg
(bad)
dec
nop
ins
addr16
pop
iret
pusha
js
popf
js
addr16
sub
mov
adc
add
(bad)
push
mov
push
mov
ss
sub
sub
lods
js
(bad)
mov
mov
push
lock
int
jl
fcmove
push
(bad)
jne
add
inc
mov
jmp
sbb
cli
sar
(bad)
mov
xchg
arpl
in
rol
sub
retf
pop
sub
bound
cmp
dec
repnz
cmp
inc
cmps
dec
lea
or
(bad)
jmp
rcl
adc
fidivr
push
mov
sbb
call
fmul
dec
ror
adc
push
aad
inc
cmp
push
jno
inc
pop
or
cmp
mov
xchg
pop
pop
movs
cmp
push
dec
or
sbb
adc
je
outs
xchg
cmc
xchg
xor
inc
(bad)
cmovns
lds
adc
jmp
adc
std
lds
mov
pop
push
stos
stos
inc
sbb
inc
call
dec
cmp
add
clc
test
inc
call
add
add
leave
in
add
arpl
or
aad
xchg
retf
mov
hlt
(bad)
adc
pop
sub
jmp
jmp
add
sub
jmp
stc
mov
jnp
inc
adc
add
and
clc
data16
test
dec
and
add
test
bound
jecxz
ret
mov
adc
or
pop
outs
int
mov
js
sub
sti
stos
adc
pop
sbb
dec
dec
xchg
aam
in
cmp
les
sar
je
mov
sbb
inc
xchg
and
mov
punpckhbw
jns
fwait
pop
push
mov
or
jmp
not
jne
cli
or
mov
add
fcomip
call
push
mov
sub
mov
retf
pushf
aad
xor
ds
fsubr
call
loopne
jne
push
loopne
enter
lds
imul
(bad)
fild
fiadd
popa
repnz
xchg
inc
xchg
sub
pop
call
xchg
cmps
lahf
fisubr
popa
bound
add
mov
and
and
mov
inc
(bad)
(bad)
jg
les
inc
or
push
lods
pop
cwde
lods
mov
cs
inc
or
adc
(bad)
(bad)
jmp
push
jp
push
fcmovu
(bad)
or
in
adc
scas
out
loopne
clc
mov
xchg
xor
pop
inc
add
add
jno
cmp
les
push
sbb
pop
ins
sbb
(bad)
movs
add
retf
data16
inc
jge
jmp
lock
cli
push
cmp
(bad)
imul
(bad)
(bad)
(bad)
call
je
mov
dec
add
sahf
inc
leave
and
inc
(bad)
es
(bad)
(bad)
jmp
(bad)
jge
das
stos
adc
xchg
sbb
push
adc
mov
xor
push
les
pop
add
scas
sub
lods
or
and
dec
(bad)
cld
gs
fmul
std
into
(bad)
movntq
(bad)
call
or
hlt
inc
lods
jl
cmc
(bad)
rol
jae
(bad)
push
iret
pop
mov
or
push
mov
adc
add
shl
clc
shl
inc
dec
and
cli
fdivr
xlat
out
fadd
rcl
lock
ins
in
cmp
push
push
jnp
in
(bad)
(bad)
(bad)
call
outs
cmp
lods
cwde
pop
call
pop
mov
sbb
xor
push
sbb
popf
pop
stos
push
mov
sub
dec
jmp
and
movs
inc
inc
out
and
outs
std
(bad)
(bad)
push
(bad)
add
fldcw
test
out
push
add
push
push
dec
(bad)
(bad)
call
jnp
inc
fmul
fs
adc
xlat
adc
xlat
ret
xchg
xor
repnz
or
mov
(bad)
(bad)
(bad)
inc
mov
retf
and
movs
dec
dec
adc
mov
sbb
sbb
(bad)
(bad)
(bad)
jmp
adc
in
int3
cmp
sub
xchg
cli
or
mov
lahf
sbb
push
sti
(bad)
(bad)
(bad)
mov
mov
pop
jle
cli
xchg
push
dec
dec
stos
fsubr
test
inc
movs
loop
(bad)
(bad)
jg
xchg
jmp
pop
cmp
or
sub
mov
dec
pop
pop
push
movs
cwde
into
push
mov
push
das
mov
jmp
jg
leave
pop
scas
cmp
cmp
in
mov
fdivr
(bad)
(bad)
call
popf
aaa
adc
jne
fimul
push
in
imul
xchg
mov
mov
std
(bad)
(bad)
jmp
dec
mov
xlat
push
xlat
mov
pop
rol
push
scas
shl
mov
xchg
push
out
ins
adc
add
pop
adc
push
push
dec
add
or
jae
jne
jge
jmp
popa
inc
mov
call
push
sub
jle
fwait
mov
shl
or
mov
adc
add
clc
pop
add
add
mov
out
add
sub
add
(bad)
(bad)
(bad)
dec
fadd
xchg
(bad)
test
xchg
adc
xor
mov
inc
mov
xor
dec
rcr
add
inc
sbb
jno
add
(bad)
dec
or
sbb
adc
adc
(bad)
out
adc
call
adc
inc
loope
mov
jl
lods
xor
sub
lahf
stc
jl
(bad)
(bad)
(bad)
jmp
in
pop
cmc
xchg
mov
pusha
aas
lahf
sbb
std
(bad)
ins
fidivr
dec
pop
popa
repz
sub
sub
jnp
ins
mov
(bad)
(bad)
inc
(bad)
lock
out
jp
push
lock
mov
push
sti
jle
sbb
cmp
adc
(bad)
out
and
pop
inc
(bad)
cmp
xchg
retf
xchg
and
scas
cli
clc
into
into
out
jp
in
xor
mov
ret
(bad)
out
xchg
cmc
cli
test
xchg
dec
add
sub
xchg
cmps
cmps
jg
icebp
fild
or
lea
mov
add
mov
(bad)
(bad)
(bad)
call
mov
pusha
jg
jmp
lea
sbb
jl
adc
loopne
dec
es
sti
(bad)
enter
xor
sar
pop
repnz
pop
rol
mov
scas
xor
mov
aaa
cld
(bad)
jg
repz
cmp
mov
nop
stos
pop
or
call
push
fadd
enter
fnstcw
(bad)
(bad)
cmp
cli
(bad)
mov
dec
ins
cdq
into
jp
out
or
icebp
(bad)
call
cld
(bad)
jp
rol
int3
pusha
int
add
lds
pushf
mov
xor
push
mov
jmp
pop
jo
jbe
mov
popa
lock
pop
cmp
pop
aas
pop
(bad)
(bad)
(bad)
(bad)
mov
loopne
jae
or
xor
mov
test
outs
push
cmp
xor
outs
and
call
mov
xchg
leave
loope
je
clc
out
mov
cli
pop
mov
push
and
mov
sbb
jmp
inc
(bad)
push
cmp
sbb
pop
inc
ds
dec
cmp
mov
mov
(bad)
(bad)
(bad)
(bad)
stc
or
cmc
enter
cmp
adc
ins
sub
dec
imul
pop
outs
push
(bad)
jmp
les
jmp
shr
dec
(bad)
call
xlat
rsqrtps
(bad)
mov
mov
adc
adc
(bad)
(bad)
(bad)
call
mov
ds
mov
lds
fisttp
gs
push
mov
les
fs
(bad)
(bad)
dec
sub
fadd
inc
pop
push
or
mov
inc
xchg
(bad)
cmp
int
mov
or
pop
lock
mov
xor
jecxz
scas
aas
sbb
xchg
xor
(bad)
(bad)
inc
aaa
mov
mov
xor
pop
pop
test
mov
or
jmp
cs
xor
(bad)
mov
push
jl
mov
jmp
retf
std
stos
das
jl
shr
inc
test
mov
xor
dec
adc
jmp
xchg
pop
jmp
xchg
scas
cmp
sub
adc
das
mov
(bad)
call
jbe
mov
jl
mov
je
(bad)
(bad)
push
addr16
bound
popa
fwait
add
xchg
dec
fstp
pop
push
repnz
jmp
adc
or
sub
mov
sbb
fdiv
pusha
xlat
push
fs
ja
mov
(bad)
push
sbb
jb
jl
jle
loopne
lahf
rcl
or
cmp
(bad)
(bad)
jmp
fmul
ret
adc
sbb
jbe
push
loope
jg
or
rol
dec
dec
in
push
std
retf
push
les
xor
(bad)
dec
sub
cmps
sub
(bad)
cmp
mov
or
cmp
aam
or
jns
sti
int
sbb
pushf
and
(bad)
(bad)
call
nop
pminub
call
enter
adc
push
xchg
dec
cmc
(bad)
and
adc
loopne
fidiv
std
(bad)
jmp
or
les
iret
ss
sahf
mov
fcomp
pop
cli
movs
xchg
out
out
jmp
bound
bswap
pop
fld
sbb
fsub
xor
xor
cmp
xchg
(bad)
(bad)
jmp
or
sub
mov
fimul
push
aam
rcr
(bad)
(bad)
(bad)
inc
and
cli
fcmovnu
cmc
sahf
sub
jmp
mov
jnp
xchg
fmul
xor
xchg
(bad)
pop
(bad)
jmp
pop
mov
jno
mov
js
jge
jmp
adc
daa
or
fwait
outs
cs
loop
popf
es
es
adc
xchg
scas
jg
jmp
cmps
cs
(bad)
(bad)
jle
dec
cmc
retf
pop
fidiv
push
cli
(bad)
(bad)
push
fdivr
loopne
cmc
shl
idiv
loopne
das
std
shl
movq
(bad)
(bad)
(bad)
out
adc
cmp
xlat
pop
sbb
add
sub
dec
mov
(bad)
call
push
lods
movs
dec
jl
fmul
fnstsw
jmp
div
imul
mov
(bad)
(bad)
(bad)
jmp
sub
clc
addr16
add
jae
xchg
mov
mov
(bad)
(bad)
(bad)
call
sti
test
mov
jbe
scas
repnz
sti
adc
sub
and
jmp
and
sbb
dec
mov
in
sti
(bad)
(bad)
jmp
ins
xchg
sub
xchg
add
cmp
int3
push
add
pop
or
xor
retf
cs
cmp
jo
inc
dec
js
data16
icebp
aad
std
cli
adc
(bad)
inc
add
(bad)
out
mov
sbb
test
jmp
sub
(bad)
dec
sub
dec
test
movs
mov
push
shl
fs
(bad)
(bad)
jmp
adc
xor
or
lds
clc
pusha
cmp
push
ret
pop
lods
arpl
mov
mov
jecxz
shr
jns
mov
push
test
jmp
(bad)
cmp
adc
cs
push
xchg
fs
rol
mov
test
mov
rol
jecxz
outs
sub
xor
call
cli
ja
sbb
and
cdq
call
sbb
pop
mov
inc
jbe
(bad)
(bad)
fstp
lods
lods
mov
push
cs
daa
lahf
mov
dec
jno
sar
leave
call
push
cmovo
lods
mov
stc
stos
xchg
stos
scas
xchg
(bad)
sahf
pop
ins
xor
loopne
add
(bad)
mov
sbb
(bad)
(bad)
(bad)
jmp
imul
test
(bad)
sub
add
xchg
mov
icebp
(bad)
jmp
and
xor
or
adc
dec
sbb
mov
jge
sbb
retf
(bad)
inc
push
cdq
ret
cmp
xchg
inc
pop
or
rcr
mov
sub
or
sbb
sbb
mov
xchg
push
push
push
dec
pop
xchg
lock
es
push
mov
mov
jmp
int3
push
test
mov
sub
repnz
nop
pop
jne
jecxz
mov
jmp
dec
jle
aas
repnz
rcl
push
push
imul
xor
retf
cwde
ficomp
inc
(bad)
(bad)
(bad)
inc
xor
imul
stos
popa
(bad)
sub
popf
cmp
jae
and
mov
dec
push
(bad)
(bad)
(bad)
jmp
lock
xchg
and
sbb
adc
jnp
mov
mov
aas
fdivr
(bad)
(bad)
(bad)
mov
aad
shr
xor
lds
or
mov
xchg
and
mov
fcomip
xchg
(bad)
in
jmp
ds
popa
loop
psllw
adc
mov
sub
or
inc
adc
inc
inc
pop
sub
jno
or
test
cwde
push
and
call
cmp
dec
fild
std
iret
inc
xchg
adc
mov
inc
imul
(bad)
(bad)
push
inc
mov
inc
mov
add
ss
rol
addr16
sub
sar
jg
ins
cwde
in
push
xlat
jo
out
enter
rcl
ins
add
xlat
pop
out
fcomip
aam
cwde
jo
inc
icebp
mov
ficomp
add
mov
pop
add
pusha
imul
pop
popa
or
(bad)
stos
sub
ret
mov
adc
jp
pop
loopne
jg
hlt
stos
xchg
fadd
mov
cmp
add
mov
vandps
push
jp
or
cmp
add
cld
mov
aam
test
mov
ror
into
sahf
adc
std
dec
loopne
les
(bad)
cmp
pop
test
cmps
fwait
sub
inc
sbb
adc
movs
in
xor
imul
inc
pop
fistp
xor
mov
mov
jg
jge
xor
jg
mov
inc
(bad)
cld
in
idiv
and
xchg
pusha
enter
hlt
les
cmp
inc
(bad)
(bad)
(bad)
dec
adc
mov
not
jbe
lds
and
scas
add
loopne
popa
add
dec
mov
lea
aad
xchg
stos
(bad)
call
xor
push
test
mov
in
cld
mov
pusha
retf
adc
(bad)
xchg
jne
(bad)
(bad)
(bad)
push
test
fistp
pop
cmps
cmp
or
sbb
lea
clc
adc
push
pop
or
sti
enter
(bad)
jmp
clc
stc
sub
and
pop
add
sub
dec
xor
sti
pop
jno
test
(bad)
jmp
rcl
jno
dec
xchg
add
hlt
fidiv
pop
pusha
jg
rol
push
mov
inc
jae
xor
(bad)
(bad)
jmp
pop
and
popf
dec
xor
and
nop
inc
pusha
sete
mov
das
mov
inc
(bad)
mov
sub
(bad)
call
stos
dec
adc
ins
test
mov
push
movhps
jl
mov
cmp
cld
(bad)
dec
and
retf
leave
(bad)
retf
dec
mov
mov
scas
and
inc
cmps
in
sub
call
sbb
mov
lods
or
add
(bad)
dec
sbb
add
aad
sbb
cmp
or
sbb
inc
stos
aam
xlat
lds
push
mov
push
xchg
mov
imul
cmp
or
(bad)
test
mov
fcmovb
stos
dec
inc
jno
jp
push
dec
shr
fld
adc
movs
repnz
xor
call
mov
(bad)
pop
mov
pop
xchg
jb
xor
cwde
aad
push
mov
push
jmp
scas
retf
and
pop
sbb
mov
jmp
(bad)
(bad)
(bad)
push
enter
mov
mov
push
cmp
pop
mov
cmp
jnp
jp
and
jmp
imul
mov
imul
imul
push
(bad)
cmc
sahf
lea
loopne
mov
daa
adc
movs
mov
sti
add
(bad)
xlat
mov
lea
sub
push
icebp
push
jmp
fldcw
jg
push
and
sbb
mov
call
std
call
aaa
mov
shr
sbb
sub
cdq
push
xchg
sti
adc
lock
sbb
(bad)
pusha
xchg
or
(bad)
(bad)
dec
enter
pop
add
sbb
xor
jmp
je
loopne
ins
out
rol
sahf
mov
and
out
rol
adc
push
xor
fidivr
xchg
xor
fcmovnu
sbb
sbb
inc
mov
loope
in
div
push
mov
call
es
xor
mov
add
lock
daa
inc
and
adc
pop
push
rol
add
push
daa
and
or
mov
clc
(bad)
ss
add
out
aam
jmp
imul
and
test
push
jnp
pop
mov
daa
(bad)
(bad)
jmp
xchg
xchg
aam
clc
div
jnp
jge
ds
cmps
dec
je
mov
sub
fiadd
xor
or
into
setnp
mov
adc
push
cmp
adc
inc
jne
fimul
lock
cmp
or
retf
lea
outs
and
gs
neg
mov
inc
jg
mov
sub
adc
aas
push
out
cs
jnp
add
cmp
(bad)
jg
sbb
mov
(bad)
inc
inc
loop
js
mov
inc
imul
fisub
ret
inc
call
inc
and
push
hlt
arpl
add
ret
and
call
add
je
sub
lahf
call
jle
xchg
repnz
sar
sar
jp
or
retf
and
mov
xor
xor
in
mov
inc
imul
aad
rcl
and
or
mov
inc
ja
pop
xchg
inc
(bad)
(bad)
(bad)
call
sbb
mov
jo
xor
or
cmp
(bad)
(bad)
(bad)
jle
cwde
cli
push
pop
loopne
mov
cdq
and
lods
jb
xor
cmp
cmp
sbb
movs
or
sub
hlt
std
(bad)
xchg
in
dec
fadd
sbb
dec
in
inc
std
(bad)
(bad)
call
ins
popa
push
lahf
ss
shld
das
fbstp
xchg
in
sub
sub
jno
mov
jmp
or
mov
mov
(bad)
push
lods
pop
jge
push
jle
mov
retf
mov
sti
pop
enter
scas
stos
cwde
stos
aas
xor
add
sub
jb
cmp
(bad)
ffreep
inc
repz
(bad)
sub
fisttp
xor
xchg
scas
xchg
or
mov
pop
jbe
popa
pop
lods
jmp
cs
push
rcr
lea
add
pop
rcr
scas
scas
xor
jmp
push
mov
dec
leave
xor
movs
inc
sub
es
sbb
sbb
and
and
push
repz
fwait
lea
out
adc
dec
mov
and
fxch
jnp
jg
inc
test
cmp
in
push
jmp
sub
adc
jnp
repnz
clc
ja
aam
js
cdq
stos
scas
sbb
mov
jmp
sub
xor
aad
jmp
sub
cli
push
push
and
(bad)
(bad)
inc
xor
pusha
push
sub
jg
xlat
mov
xlat
push
push
pop
pushf
push
pop
je
xchg
cdq
mov
jo
cmc
daa
dec
scas
(bad)
(bad)
(bad)
call
push
fdivr
jbe
mov
inc
std
ret
lods
sub
mov
(bad)
adc
mov
cmp
xor
(bad)
nop
sub
push
push
inc
outs
sub
ds
daa
mov
jmp
std
or
lahf
jg
jnp
or
and
rol
and
adc
in
jmp
xor
dec
scas
loopne
push
and
sbb
(bad)
(bad)
(bad)
inc
fild
hlt
sub
add
inc
in
mov
xchg
pushf
je
mov
mov
cld
aam
(bad)
cmp
imul
dec
dec
je
add
dec
inc
add
sar
or
cmp
adc
mov
inc
inc
clc
(bad)
daa
cmp
adc
ret
pusha
xor
out
and
lock
(bad)
jmp
xchg
add
loopne
sbb
pusha
rcl
dec
mov
xor
push
or
or
jno
int
mov
push
(bad)
imul
(bad)
ficom
leave
aam
enter
push
xchg
leave
cdq
cmps
out
push
mov
ss
ror
das
add
pop
test
das
add
call
arpl
fistp
idiv
sar
push
out
jl
mov
mov
mov
adc
rcl
(bad)
call
scas
adc
mov
fcomip
enter
push
xchg
aad
(bad)
call
inc
arpl
stos
ret
hlt
inc
(bad)
outs
nop
mov
call
aam
fild
test
mov
fld
les
fdivrp
(bad)
(bad)
dec
sub
popa
or
ret
jl
mov
jnp
inc
mov
or
lods
pop
sub
(bad)
(bad)
(bad)
fstp
xchg
push
mov
loop
gs
xor
fistp
gs
(bad)
(bad)
(bad)
(bad)
fisttp
mov
mov
inc
sbb
fs
inc
mov
sub
shl
test
xor
mov
jecxz
add
cmp
int3
dec
mov
inc
ins
pop
xor
add
sub
test
adc
mov
mov
(bad)
(bad)
in
addr16
call
adc
add
xchg
fcom
addr16
fwait
mov
js
call
push
mov
or
gs
mov
jmp
jno
popa
adc
add
fwait
hlt
mov
mov
cmp
fcomp
cli
(bad)
(bad)
jmp
or
cmps
arpl
pop
or
mov
es
push
(bad)
push
xchg
mov
(bad)
push
fist
adc
inc
neg
std
pusha
ins
jge
add
fs
(bad)
(bad)
(bad)
inc
repz
sub
adc
cmps
test
push
jne
mov
xchg
xlat
sub
stos
pop
(bad)
lea
sub
(bad)
(bad)
(bad)
inc
mov
jbe
dec
movs
into
push
sbb
push
(bad)
add
push
mov
xchg
(bad)
(bad)
(bad)
(bad)
mov
outs
fnstenv
out
mov
jae
xchg
addr16
cmc
gs
xor
adc
and
or
and
fistp
mov
imul
inc
jbe
(bad)
(bad)
(bad)
cmp
mov
cmps
aad
sbb
xchg
mov
dec
adc
js
jb
adc
icebp
mov
(bad)
inc
sbb
retf
and
dec
push
and
mov
pop
mov
shl
sub
(bad)
call
jmp
xor
xor
mov
ret
call
arpl
(bad)
(bad)
jmp
and
mov
mov
fst
inc
addr16
dec
inc
addr16
lahf
aas
cwde
gs
(bad)
lahf
jns
dec
stos
call
call
leave
(bad)
dec
hlt
(bad)
daa
out
dec
jbe
retf
push
sub
cli
mov
(bad)
das
into
mov
arpl
mov
cmp
cmp
ret
xor
movs
ret
loopne
in
(bad)
out
pop
in
outs
cs
(bad)
(bad)
(bad)
mov
fucom
add
cmp
and
movs
aaa
(bad)
mov
test
loope
outs
push
jmp
cmp
cmp
xchg
ins
icebp
jno
xchg
call
bound
(bad)
(bad)
jmp
and
inc
push
nop
xor
cmps
mov
scas
or
mov
out
mov
jg
push
daa
xchg
std
push
out
xor
jg
sub
loope
add
int3
xor
(bad)
(bad)
(bad)
jmp
add
xor
dec
xor
fisub
lahf
ret
sub
add
ins
icebp
dec
inc
mov
push
pop
inc
adc
inc
or
ds
cmps
mov
jae
jmp
(bad)
dec
ret
and
adc
test
adc
mov
ret
jae
dec
fbstp
out
out
je
xchg
jecxz
jg
xlat
fidiv
inc
(bad)
(bad)
(bad)
(bad)
jmp
shl
jle
push
je
or
mov
mov
mov
aas
jp
clc
inc
mov
je
mov
sbb
std
in
xor
addr16
mov
jp
mov
imul
bound
(bad)
shl
cmp
jle
(bad)
(bad)
dec
xor
lods
jb
inc
mov
mov
js
dec
push
sub
push
cld
push
call
mov
cli
out
xor
inc
adc
or
sbb
adc
or
in
and
in
(bad)
(bad)
(bad)
mov
out
(bad)
in
(bad)
ins
out
rep
mov
data16
int
add
mov
dec
call
je
add
inc
xchg
or
jmp
fcomip
(bad)
(bad)
(bad)
call
cmp
cmp
in
jae
lea
jmp
or
jb
repnz
(bad)
cmp
fmul
dec
ret
xor
(bad)
mov
xchg
rcl
scas
shl
or
das
(bad)
cs
or
data16
(bad)
(bad)
call
(bad)
cmp
jno
add
pop
shl
fdiv
or
jmp
sti
lock
(bad)
(bad)
call
aas
cmp
shl
stc
xor
mov
(bad)
mov
ins
fdiv
pop
add
(bad)
call
ins
ins
int3
popf
jg
xchg
xor
fidiv
sub
(bad)
dec
xchg
jnp
lods
mov
mov
ins
jg
cmp
fadd
out
mov
loopne
popa
xor
mov
jmp
retf
add
dec
out
ds
call
loopne
es
mov
sub
cld
ror
inc
iret
(bad)
(bad)
(bad)
call
mov
fwait
push
pop
sub
add
int3
ret
(bad)
mov
repz
mov
cmp
(bad)
mov
mov
outs
aas
jle
imul
xor
in
fidivr
push
scas
js
mov
mov
ins
ins
stos
mov
jne
(bad)
(bad)
(bad)
(bad)
xor
pop
mov
pusha
sar
mov
mov
aam
outs
sbb
cmps
pop
jmp
jmp
xor
pop
mov
test
(bad)
push
cmp
pop
fcompp
fidiv
(bad)
call
loopne
cmps
cmps
cs
ins
mov
imul
pop
scas
mov
push
retf
push
(bad)
dec
sahf
daa
push
les
(bad)
(bad)
aad
(bad)
pop
clc
in
push
sahf
ja
jne
add
leave
cmps
xchg
mov
arpl
scas
mov
xchg
loop
pop
popa
fs
int3
(bad)
pop
scas
(bad)
jbe
(bad)
(bad)
inc
jo
and
xlat
aaa
movs
mov
xlat
enter
fldenv
sub
xor
dec
sbb
jmp
cmp
mov
fwait
aas
and
stos
push
pop
fsubr
jle
(bad)
push
test
mov
or
adc
or
lods
push
fcmovne
in
cmp
inc
cmp
xchg
dec
dec
imul
shr
iret
call
call
mov
pop
ins
ds
mov
addr16
jecxz
fbstp
hlt
(bad)
(bad)
(bad)
std
repnz
pop
sub
lods
lods
inc
dec
pushf
into
cmp
rcl
adc
sbb
lea
mov
dec
pop
mov
jmp
jmp
(bad)
or
dec
cmp
cmp
call
das
std
into
(bad)
xchg
(bad)
fcom
push
push
fild
ja
mov
mov
pop
pusha
sar
jg
retf
xor
mov
retf
xchg
test
jge
or
adc
mov
inc
scas
xor
fwait
adc
add
(bad)
xor
jg
test
in
cli
cwde
sbb
out
sub
adc
fdiv
(bad)
call
cld
add
repnz
or
shl
jae
pusha
fisttp
retf
clc
test
(bad)
lock
imul
dec
xor
test
ds
push
jnp
or
and
call
enter
fbstp
(bad)
(bad)
jmp
inc
xchg
(bad)
xchg
mov
out
or
mov
jns
lods
(bad)
(bad)
(bad)
call
call
or
cmp
cli
mov
inc
jecxz
mov
or
(bad)
(bad)
jmp
push
xchg
and
in
mov
and
push
xchg
xor
popf
or
clc
and
in
xchg
mov
(bad)
jmp
pop
daa
and
out
lock
mov
push
fiadd
rol
sbb
mov
loope
push
cs
sub
cmp
jmp
xchg
ja
stos
dec
and
adc
into
ret
cdq
xchg
arpl
push
pop
popf
cmps
(bad)
(bad)
jmp
cld
mov
cmp
es
hlt
cmp
aas
in
(bad)
arpl
push
in
mov
loopne
mov
(bad)
(bad)
jl
test
popf
pop
mov
hlt
jae
imul
jg
dec
pop
mov
inc
(bad)
call
add
lock
jle
sub
adc
xchg
sbb
mov
call
lock
or
stos
jno
ret
popa
cmp
pop
cli
(bad)
(bad)
jmp
adc
lock
lods
xor
mov
xchg
jo
inc
xchg
jns
(bad)
(bad)
(bad)
out
mov
loopne
cmp
lods
sub
jne
mov
push
xchg
(bad)
mov
(bad)
(bad)
(bad)
sti
cmp
cmp
mov
call
fucomp
data16
cwde
xor
stos
xchg
shr
(bad)
call
and
xlat
lods
and
loop
cmp
jmp
jg
(bad)
je
add
inc
in
dec
dec
call
imul
dec
mov
jae
ins
mov
aam
movs
and
sbb
(bad)
(bad)
(bad)
jle
jle
mov
sbb
ja
mov
dec
mov
fdivr
mov
ret
mov
(bad)
jmp
leave
xchg
ret
fld
jb
pop
mov
(bad)
(bad)
(bad)
inc
xchg
aaa
pop
jle
pop
cs
lods
test
fwait
fwait
repnz
jl
ficomp
jno
pop
sar
(bad)
(bad)
push
xor
jmp
inc
ja
shl
add
xor
aad
ins
jmp
call
int3
retf
ins
jge
jb
cs
call
(bad)
inc
js
shr
frndint
cmps
lea
enter
scas
daa
dec
retf
in
(bad)
(bad)
inc
xchg
push
sbb
pop
(bad)
inc
push
dec
addr16
test
sub
into
lahf
aas
push
and
(bad)
(bad)
(bad)
mov
shl
call
mov
jo
pop
jecxz
out
mov
pop
daa
cmp
(bad)
inc
sbb
js
mov
add
stc
ficomp
add
dec
enter
push
push
test
(bad)
jmp
fnsave
sub
sub
cmc
movs
call
(bad)
(bad)
call
ret
cs
cmc
dec
(bad)
cwde
imul
lods
jb
jge
repz
jg
jmp
push
sahf
enter
fnstsw
cmp
push
pop
std
(bad)
dec
pop
pop
mov
(bad)
jle
pushf
nop
cmp
sbb
cmc
nop
pop
jbe
call
(bad)
(bad)
aad
mov
daa
retf
mov
test
xor
(bad)
dec
fwait
dec
cld
ins
in
cmps
jns
xchg
inc
and
add
inc
sub
enter
mov
(bad)
out
clc
(bad)
jle
push
push
bound
aaa
add
mov
add
nop
ror
(bad)
pop
cld
(bad)
jmp
lea
aas
xchg
test
push
or
neg
adc
xlat
(bad)
(bad)
push
fiadd
ret
lods
out
mov
push
mov
popf
add
mov
add
(bad)
(bad)
(bad)
jg
pop
int3
sbb
dec
test
push
in
add
ds
frstpm(287
scas
inc
stos
out
std
cmps
push
aaa
ins
loop
dec
sar
mov
lds
xor
(bad)
(bad)
fisttp
jp
and
into
(bad)
bound
and
adc
popf
cdq
(bad)
dec
push
dec
es
adc
xchg
movs
call
jb
lds
xchg
and
mov
push
(bad)
adc
inc
loope
adc
xchg
inc
xchg
les
jle
sbb
mov
ds
fdiv
(bad)
scas
cli
adc
add
adc
push
push
dec
lea
xor
hlt
push
push
jmp
ret
movs
xchg
push
stos
jecxz
in
ja
fadd
xchg
fisttp
repz
pop
rcr
aad
mov
mov
pop
loopne
in
movs
aas
(bad)
(bad)
(bad)
push
lock
xor
pushf
add
sub
lods
pusha
ss
lock
or
cmp
mov
inc
mov
hlt
or
loopne
push
cmp
adc
(bad)
push
sbb
loope
jge
sar
in
in
sbb
push
(bad)
(bad)
jmp
or
pop
xor
call
xchg
sti
mov
(bad)
(bad)
jg
into
add
movs
push
enter
push
mov
scas
movs
pop
ins
or
xor
and
fisttp
in
mov
fcom
aam
(bad)
(bad)
(bad)
inc
push
test
les
mov
popf
pushf
xor
cmps
ja
dec
mov
(bad)
inc
adc
int
jbe
nop
shr
jmp
cwde
les
mov
and
push
(bad)
jmp
mov
loope
jae
xchg
mov
mov
or
pop
cmc
(bad)
(bad)
jmp
pop
fwait
xor
xchg
(bad)
ins
dec
cmps
shl
jb
inc
adc
imul
fldenv
mov
xlat
and
pop
cmp
movs
scas
and
ins
mov
push
call
dec
out
sbb
(bad)
aam
mul
and
inc
(bad)
xor
inc
and
sub
fisubr
add
jg
stos
pop
sub
aam
xor
aaa
outs
xor
xor
push
sub
adc
dec
inc
rol
mov
outs
pop
dec
repnz
call
nop
popf
xchg
int
jns
mov
bound
sbb
js
cld
jg
enter
pop
push
ror
or
ja
cdq
dec
adc
xor
(bad)
jmp
pushf
je
mov
push
fbld
lods
out
mov
xchg
push
mov
pop
cmp
(bad)
(bad)
jmp
loope
rcr
dec
xor
push
jp
xlat
aam
fdiv
push
mov
in
dec
aad
ss
pop
lock
jmp
rcr
out
push
mov
lods
(bad)
(bad)
(bad)
dec
call
ins
popf
xchg
fstp
sbb
dec
shrd
hlt
enter
(bad)
(bad)
(bad)
jmp
jmp
enter
daa
push
test
(bad)
(bad)
out
adc
ret
mov
cwde
mov
cmp
out
cli
dec
mov
fist
sar
sahf
in
clc
mov
test
call
loopne
test
dec
mov
ins
aas
test
dec
hlt
sbb
sbb
pusha
jo
(bad)
call
loopne
xor
shl
aaa
enter
out
mov
int3
aad
(bad)
call
and
mov
mov
loope
cmp
sbb
in
(bad)
(bad)
(bad)
jg
pop
sbb
ret
inc
daa
es
cmc
loop
dec
cdq
jae
pop
sbb
clc
add
and
jp
jg
(bad)
(bad)
js
and
repz
jb
push
inc
int3
(bad)
inc
mov
sbb
push
jmp
add
sub
sub
jmp
pop
ins
mov
call
loopne
mov
nop
scas
cmp
test
rol
sub
adc
(bad)
(bad)
(bad)
(bad)
das
clc
mov
push
mov
add
test
add
ret
and
jmp
and
and
enter
push
adc
das
pop
push
and
(bad)
(bad)
jg
sub
xlat
pop
fist
pop
stos
push
push
push
sub
push
or
push
jmp
inc
shl
movs
push
fwait
movs
mov
xor
jnp
enter
(bad)
out
cmp
mov
adc
jo
push
imul
jmp
ja
dec
mov
shl
cmp
inc
(bad)
cwde
(bad)
(bad)
(bad)
(bad)
push
das
mov
int
push
ja
jge
pop
push
cld
out
ja
clc
mov
and
sahf
shl
jg
lods
addr16
outs
jbe
sub
cwde
out
(bad)
sti
xchg
pop
sar
push
or
movs
xor
cli
xchg
retfw
scas
(bad)
(bad)
(bad)
push
dec
cmp
clc
push
jns
jmp
push
ror
and
es
cmp
mov
mov
fstp
psubusb
addr16
push
sub
cmps
outs
jo
call
jg
mov
jle
xor
mov
sar
inc
aam
jmp
or
jle
xor
shl
mov
(bad)
(bad)
(bad)
call
mov
retf
out
sub
sti
cs
fidivr
dec
push
(bad)
mov
jnp
mov
add
sbb
sbb
es
mov
popa
addr16
idiv
addr16
jg
pushf
clc
int3
scas
sahf
mov
addr16
xchg
jbe
cmps
stc
lods
mov
icebp
mov
sahf
cmp
iret
dec
pop
sbb
cdq
outs
sub
mov
(bad)
jmp
dec
loopne
repz
cwde
rcl
dec
scas
sbb
jbe
xor
xchg
mov
call
ins
clc
frstor
dec
xor
cmp
leave
inc
fisubr
retf
shl
pop
cmc
(bad)
mov
(bad)
call
xchg
loop
fs
je
(bad)
(bad)
jmp
xchg
stos
retf
fs
ins
xlat
(bad)
in
cmp
or
or
dec
neg
imul
aaa
inc
jg
outs
shl
and
jg
xor
in
and
pop
int
(bad)
(bad)
fimul
data16
and
popf
sahf
stos
mov
xchg
xor
(bad)
(bad)
mov
(bad)
enter
or
and
iret
jns
cwde
imul
(bad)
(bad)
(bad)
fild
xor
loope
pop
jbe
adc
jge
lods
sbb
jmp
mov
ins
pop
ficomp
jmp
fidiv
lahf
pop
(bad)
test
adc
(bad)
(bad)
fmul
data16
data16
cmp
lahf
lods
scas
leave
int3
call
(bad)
(bad)
mov
ja
mov
mov
fwait
mov
(bad)
fdiv
repz
mov
jno
stc
mov
call
xchg
pop
loop
mov
loop
stc
mov
(bad)
(bad)
(bad)
push
fld
dec
les
clc
loope
cmp
rcr
inc
(bad)
cs
xchg
(bad)
(bad)
(bad)
call
pop
mov
cmp
out
sbb
jo
sub
xchg
lahf
dec
xor
ror
adc
and
(bad)
mov
jbe
loop
xchg
xor
jnp
mov
xor
xor
(bad)
(bad)
(bad)
inc
mov
hlt
js
loope
push
stc
dec
sbb
call
push
lahf
div
iret
ja
(bad)
(bad)
inc
(bad)
stc
fisubr
jg
mov
iret
pop
retf
sub
push
rol
jmp
or
or
fchs
(bad)
adc
not
cli
sbb
(bad)
mov
(bad)
(bad)
(bad)
dec
int
xchg
pop
fucom
call
mov
dec
jno
push
mov
adc
xchg
lods
pushf
push
cmp
test
(bad)
push
jae
push
xor
pusha
or
xor
jno
xor
push
clc
das
add
lods
jmp
pop
pop
mov
sub
mov
add
xchg
popf
mov
call
add
test
push
pop
lods
addr16
and
ss
(bad)
(bad)
push
cmp
jnp
fidivr
loopne
dec
inc
test
and
push
fwait
cmp
(bad)
(bad)
(bad)
(bad)
mov
add
push
imul
leave
dec
sbb
add
pop
and
mov
les
rol
addr16
in
cmc
pop
pop
or
data16
jo
(bad)
(bad)
call
mov
out
dec
mov
mov
out
xor
sbb
repnz
sub
inc
call
ret
out
jle
cmc
mov
sti
fbld
dec
xchg
dec
mov
jbe
xchg
mov
add
icebp
jmp
rcr
data16
fadd
out
cmp
fldcw
adc
std
(bad)
(bad)
ds
out
lahf
mov
test
jae
mov
jo
push
shr
(bad)
(bad)
(bad)
push
(bad)
inc
jmp
xchg
sbb
lods
stc
cli
imul
hlt
test
lahf
push
fwait
dec
daa
call
xchg
movs
lods
cmp
shl
dec
arpl
mov
mov
sbb
mov
xor
clc
outs
jbe
fldcw
out
outs
out
(bad)
push
(bad)
xchg
mov
(bad)
(bad)
(bad)
fistp
ins
or
or
ins
pop
ins
(bad)
cmp
cdq
mov
and
leave
mov
xor
mov
mov
lea
(bad)
(bad)
jmp
inc
cs
jo
cmp
lds
sbb
and
int
repnz
jecxz
(bad)
(bad)
jmp
int3
aaa
mov
aam
imul
jge
js
popf
dec
test
sub
fcmovnbe
(bad)
dec
shr
adc
aam
ins
arpl
inc
retf
pushf
scas
sar
(bad)
jg
cmp
dec
jg
enter
mov
inc
sub
xlat
mul
std
(bad)
(bad)
(bad)
cmp
mov
xchg
(bad)
retf
jae
mov
sbb
popf
enter
call
sub
imul
icebp
push
dec
dec
and
clc
jmp
jns
ret
cmp
(bad)
mov
mov
mov
scas
sub
outs
cs
imul
loopne
(bad)
(bad)
(bad)
jg
lahf
sar
or
dec
in
xor
(bad)
inc
outs
mov
dec
out
gs
adc
sbb
sub
enter
mov
(bad)
aam
xor
(bad)
fcomip
call
xor
in
jecxz
cmc
(bad)
mov
or
retf
neg
jl
retf
mov
inc
sub
in
mov
xchg
pop
push
or
(bad)
loop
sbb
add
mov
(bad)
(bad)
(bad)
call
inc
xor
push
jo
aam
mov
fnsave
pop
pop
pop
ss
cmc
ja
imul
lods
(bad)
(bad)
(bad)
dec
push
sub
dec
lock
adc
outs
outs
out
int
(bad)
push
daa
into
mov
pop
fwait
lea
sbb
cmp
movs
test
xor
push
pop
fisub
push
into
or
(bad)
(bad)
(bad)
jmp
xlat
cld
or
out
cmp
dec
jno
mov
cmps
xchg
sub
test
(bad)
(bad)
jl
lds
adc
xchg
jle
dec
retf
push
push
xchg
xor
pop
test
dec
jmp
or
scas
shl
out
mov
loop
(bad)
(bad)
jg
xor
inc
add
cmps
(bad)
push
cmp
es
sbb
div
call
sbb
mov
sub
(bad)
cld
or
xor
(bad)
cs
sbb
fcmovb
idiv
scas
jns
push
mov
outs
inc
push
scas
loope
pop
pop
xor
std
jl
mov
test
push
adc
pop
mov
(bad)
jg
pop
out
cmp
sti
mov
jecxz
inc
aas
and
or
dec
cmps
out
sahf
ins
into
ja
in
xchg
fld
or
sbb
(bad)
(bad)
(bad)
call
ins
pop
sahf
add
in
rol
out
push
nop
fs
jle
hlt
cli
pop
fdiv
jne
xor
xchg
(bad)
(bad)
(bad)
inc
pop
adc
lods
adc
fsubr
aaa
dec
outs
es
push
ds
(bad)
out
sbb
bound
call
ror
dec
cld
cli
pop
adc
sbb
call
pop
pop
jno
out
sub
cmp
bound
mov
cmp
into
leave
mov
jp
jmp
stc
mov
and
scas
lods
dec
out
push
jnp
(bad)
(bad)
(bad)
inc
inc
retf
xor
and
in
ret
push
inc
ret
in
(bad)
add
cmp
(bad)
(bad)
jg
dec
lea
ja
jle
lods
rcl
sub
push
push
inc
out
dec
cmp
(bad)
(bad)
call
xor
js
stc
int
pop
ret
dec
mov
imul
fisub
inc
jnp
test
cmps
(bad)
(bad)
jmp
or
pushf
(bad)
cwde
mov
pop
xlat
in
in
jnp
ins
dec
aas
ret
lods
xchg
retf
add
push
adc
xor
mov
loop
mov
sbb
jmp
cmp
xor
gs
dec
and
push
idiv
(bad)
(bad)
(bad)
js
fs
push
jg
sbb
xor
inc
dec
jmp
inc
jb
pop
stos
(bad)
jmp
sub
adc
push
(bad)
clc
retf
cmps
mov
das
cmp
mov
loopne
aaa
std
(bad)
xlat
gs
ret
cwde
int
mov
jno
sbb
add
(bad)
(bad)
mov
dec
xchg
adc
sti
mov
fdiv
cmp
test
cdq
fist
xchg
inc
(bad)
pop
cmp
(bad)
jne
repz
iret
popf
xor
fwait
lods
ret
hlt
mov
dec
cli
(bad)
(bad)
jmp
xchg
mov
mov
ja
in
dec
mov
mov
(bad)
aad
fild
call
out
sub
out
aad
fistp
and
sbb
or
(bad)
(bad)
jmp
cwde
jns
and
cmp
dec
ins
cs
lea
add
aad
clc
(bad)
(bad)
inc
std
or
jnp
pop
stos
(bad)
dec
test
stos
(bad)
ja
lahf
push
inc
(bad)
inc
cld
jnp
xor
sbb
cdq
pop
faddp
(bad)
inc
sbb
jne
xor
fld
ds
jg
jge
push
dec
push
mov
sub
add
or
ja
jns
mov
(bad)
jg
enter
ins
pop
cmps
ret
push
or
es
ret
fisttp
aam
call
cld
mov
xor
xchg
loope
jp
or
dec
lock
mov
push
sub
sbb
aas
fimul
aaa
push
push
xchg
xchg
retf
aaa
mov
jmp
jmp
test
xchg
jmp
sbb
dec
ret
(bad)
lods
sub
push
adc
xor
(bad)
call
and
les
mov
les
out
push
les
hlt
mov
cmp
cld
pop
add
(bad)
inc
or
mov
lods
or
inc
xchg
movs
mov
xchg
xchg
(bad)
inc
cld
add
adc
push
cmp
add
sbb
pop
jg
out
(bad)
(bad)
jmp
jg
repnz
imul
mov
retf
cmp
(bad)
ja
std
(bad)
(bad)
fnstenv
push
jbe
int3
dec
ja
jmp
jmp
push
mov
cmp
(bad)
jbe
in
rcl
push
ins
fdiv
adc
cmp
inc
(bad)
inc
mov
cmps
aaa
jno
mov
push
dec
in
hlt
mov
jmp
push
jmp
icebp
fstp
pop
mov
jae
or
sub
mov
test
pop
mov
rcl
ins
mov
cmp
adc
(bad)
(bad)
(bad)
(bad)
(bad)
jnp
ins
mov
push
int
lods
jmp
jmp
(bad)
stc
loope
dec
leave
test
(bad)
(bad)
(bad)
dec
mov
jmp
sub
cmps
mov
retf
outs
adc
mov
stos
(bad)
(bad)
(bad)
call
dec
push
dec
bound
jo
cmp
and
ja
imul
dec
and
pop
aaa
mov
lea
jmp
call
xor
push
sub
push
or
xchg
sub
int3
lahf
xor
push
inc
(bad)
(bad)
fbld
cmp
pusha
or
sti
lods
cwde
enter
(bad)
(bad)
inc
rcr
imul
jl
(bad)
daa
sar
retf
jb
sub
retf
loope
sub
mov
push
sub
jmp
xor
dec
es
mov
ins
(bad)
jmp
ins
and
cmps
push
pop
inc
repz
stc
xchg
inc
clc
xor
push
nop
adc
jmp
cmp
les
mov
test
push
scas
retf
in
sub
mov
pop
inc
clc
scas
mov
jb
out
dec
sbb
push
cli
call
loopne
mov
xor
cdq
cmp
inc
dec
ja
mov
dec
jnp
ss
in
dec
push
pop
sbb
sub
fistp
mov
(bad)
(bad)
(bad)
(bad)
in
inc
fstp
in
popf
cmp
ja
hlt
out
xor
sar
pop
data16
sbb
mov
(bad)
push
mov
std
stos
sar
jb
jmp
out
test
pop
(bad)
pop
das
daa
sbb
repnz
call
sbb
fdiv
dec
add
pop
cmp
dec
push
sub
or
jl
inc
(bad)
jl
test
ins
sbb
stos
ret
sbb
xchg
in
jecxz
loopne
dec
pop
data16
out
and
sbb
popf
sub
dec
rol
adc
lods
sar
(bad)
(bad)
cmp
out
dec
call
ror
pop
pusha
dec
sar
aas
(bad)
inc
adc
(bad)
jmp
(bad)
mov
cmp
ror
(bad)
fld
repnz
int3
(bad)
loop
jo
(bad)
(bad)
call
stc
mov
es
fisttp
rcl
mov
(bad)
jg
or
fidivr
xor
and
sbb
inc
ja
sbb
xchg
pop
add
mov
outs
clc
in
out
adc
push
xchg
ins
fcom
jns
gs
jg
scas
cli
stc
jae
arpl
sbb
push
push
in
je
add
std
and
sar
(bad)
(bad)
jmp
rol
fimul
ds
ficom
inc
ins
jnp
sti
adc
xor
dec
sbb
add
push
jmp
or
push
mov
movs
push
fcomip
inc
pusha
scas
bound
(bad)
mov
sbb
or
aad
cli
mov
push
sahf
sbb
push
inc
arpl
mov
sbb
or
sub
rcl
(bad)
jg
jmp
add
mov
aam
mov
push
xchg
adc
(bad)
call
out
loop
mov
or
dec
or
adc
mov
add
fcom
push
popa
push
inc
xor
dec
(bad)
mov
cs
mov
pusha
adc
fadd
pop
add
adc
pop
scas
sub
test
fistp
jmp
test
jle
hlt
cmp
sti
ds
xchg
sbb
fs
mov
lock
and
nop
and
lahf
mov
cld
mov
jle
or
sub
pop
add
or
mov
(bad)
call
adc
jnp
std
pop
iret
inc
mov
sbb
pop
mov
sbb
movs
xchg
add
outs
es
inc
cdq
mov
retf
or
pop
adc
mov
std
bound
sbb
call
sub
xor
(bad)
dec
sbb
or
mov
jbe
(bad)
jg
cld
nop
mov
xchg
inc
test
in
or
jl
pop
mov
mov
adc
sub
mov
mul
adc
or
mov
dec
rol
(bad)
mov
and
push
aas
xchg
mov
and
sbb
adc
sub
mov
out
inc
xchg
mov
leave
sub
cmp
repnz
mov
aaa
cld
(bad)
dec
loope
push
xchg
or
push
inc
test
rcl
xchg
add
and
out
iret
scas
adc
push
or
sbb
or
push
xor
dec
repnz
mov
inc
jle
sbb
xlat
mov
fadd
xor
or
push
cmp
add
jb
dec
fmul
mov
push
loope
pusha
call
pop
add
and
(bad)
mov
aas
popa
pop
ds
xchg
push
popa
arpl
mov
cli
xchg
and
(bad)
jg
cli
jae
jl
mov
push
outs
mov
inc
rcl
add
(bad)
fcom
outs
fcmovbe
push
daa
jns
loopne
inc
popa
inc
adc
nop
inc
sbb
mov
(bad)
call
mul
add
loope
sbb
test
(bad)
dec
xchg
fidiv
aaa
mov
dec
call
jmp
mov
icebp
jg
xchg
pop
or
sub
jmp
cs
iret
sahf
sub
(bad)
(bad)
call
inc
stos
pop
ja
addr16
call
test
nop
fidiv
inc
push
(bad)
(bad)
(bad)
jmp
inc
nop
or
sub
repnz
(bad)
mov
lea
xchg
mov
jmp
mov
add
ds
xchg
inc
push
adc
push
(bad)
call
mov
ds
ds
sub
add
aam
(bad)
fsubr
(bad)
(bad)
mov
push
adc
or
out
add
fimul
(bad)
(bad)
(bad)
push
mov
inc
sbb
dec
cmp
in
inc
out
mov
sbb
cld
scas
mov
mov
repz
mov
xchg
loopne
sub
dec
mov
push
cmps
fdiv
lods
sti
call
jo
pop
or
fwait
outs
or
mov
add
popa
jmp
push
mov
push
nop
add
pop
lock
mov
loope
sub
cmp
adc
fidivr
loope
sar
(bad)
call
push
test
mov
jne
and
sub
adc
fcomp
rol
nop
inc
pusha
adc
sub
push
dec
imul
mov
push
outs
scas
(bad)
(bad)
cmc
stos
jecxz
dec
adc
cmps
arpl
(bad)
in
pop
fnstsw
add
cmp
sti
cmp
mov
push
sub
mov
je
adc
imul
pop
and
stos
sub
and
sub
pop
arpl
mov
jb
aaa
std
inc
jmp
into
repnz
jge
gs
cld
pop
or
retf
ficom
add
call
std
minps
or
push
rcl
mov
test
mov
dec
jl
xor
lds
cli
or
fwait
(bad)
(bad)
(bad)
jmp
xor
sbb
rcl
or
inc
adc
or
pushf
cwde
and
xor
and
(bad)
(bad)
(bad)
inc
das
sub
jne
test
shl
test
ins
sbb
and
push
pop
sbb
rcr
inc
push
jmp
retf
or
retf
jecxz
aam
or
(bad)
loopne
(bad)
(bad)
push
loopne
add
imul
or
sub
inc
imul
inc
mov
push
ss
mov
mov
mov
std
sub
cmp
les
adc
or
pop
mov
call
call
stos
pop
stos
loop
ss
fwait
add
jmp
jecxz
loop
jle
cs
mov
dec
mov
enter
xchg
pop
outs
inc
mov
idiv
push
(bad)
(bad)
call
pop
and
popf
mov
(bad)
ja
cmp
in
pusha
xor
stos
(bad)
cmp
aaa
adc
(bad)
(bad)
dec
xor
mov
xor
movs
stos
imul
lea
cmp
mov
mov
cmc
(bad)
call
mov
jg
cmp
fsubr
outs
mov
es
adc
cmp
jmp
mov
daa
jle
or
add
nop
push
inc
cwde
xor
dec
mov
and
add
ret
mov
push
js
retf
pusha
iret
fwait
aaa
add
jmp
test
push
fidivr
cmps
data16
fdiv
fcomp
push
inc
jno
adc
and
mov
jg
(bad)
aad
mov
(bad)
(bad)
cmp
(bad)
dec
sbb
push
ja
sub
daa
sbb
jecxz
jmp
xchg
test
(bad)
imul
sbb
xchg
or
and
jmp
cwde
xor
sbb
ret
or
mov
inc
dec
push
add
call
xchg
jbe
(bad)
(bad)
jmp
jae
aas
sbb
pop
jo
sbb
xchg
or
cmp
stos
and
mov
inc
xor
test
adc
stos
mov
out
inc
mov
adc
jmp
dec
sub
(bad)
xchg
mov
mov
push
add
push
enter
mov
ss
ror
add
clc
and
jo
ss
(bad)
call
cli
xor
mov
mov
add
test
test
aas
fcmove
or
(bad)
(bad)
inc
imul
mov
mov
mov
jle
hlt
shl
push
aaa
mov
cmp
loopne
(bad)
(bad)
jmp
inc
cmps
out
(bad)
jmp
sti
in
ret
scas
lock
pop
in
mov
lahf
mov
pop
fdivrp
jmp
pop
pop
mov
popf
jno
imul
cli
push
add
jo
(bad)
push
outs
jecxz
dec
xor
pop
ins
xchg
mov
sbb
(bad)
in
add
hlt
out
jl
call
cmp
enter
(bad)
pop
fdiv
fdiv
cld
out
jg
mov
scas
mov
pop
adc
jo
mov
dec
sbb
aam
rcl
adc
int3
cdq
xor
stc
in
cmp
mov
push
jp
movs
fs
fidiv
jne
xchg
cmp
into
popf
mov
jmp
ins
das
push
inc
rol
add
int
push
clc
(bad)
jns
hlt
sbb
stos
arpl
(bad)
(bad)
(bad)
inc
xchg
xchg
daa
cli
ja
cmp
cmp
movs
xchg
push
inc
push
loope
inc
pop
(bad)
(bad)
call
pusha
scas
mov
mov
and
xchg
pop
(bad)
(bad)
(bad)
call
rol
jg
jne
mov
pop
repz
add
xor
aaa
aas
movs
sti
aaa
clc
test
ins
mov
or
scas
clc
adc
je
add
mov
(bad)
(bad)
(bad)
clc
dec
les
mov
shr
call
push
dec
push
ss
(bad)
(bad)
call
push
push
or
add
in
or
test
sbb
jno
gs
(bad)
mov
pop
dec
loopne
mov
lods
xchg
xchg
mov
jmp
dec
dec
jg
xlat
les
pop
push
ins
cmp
fsub
(bad)
(bad)
push
push
loopne
dec
push
lods
cmp
mov
push
fcom
clc
(bad)
(bad)
(bad)
out
sub
sbb
and
jo
test
in
jmp
cli
jns
leave
cmps
(bad)
cli
sub
(bad)
jmp
mov
mov
xor
retf
jge
mov
(bad)
(bad)
push
ret
xchg
mov
das
mov
icebp
mov
dec
mov
mov
ret
push
xchg
sbb
mov
(bad)
and
ffreep
push
(bad)
(bad)
mov
(bad)
in
jg
sub
push
hlt
into
lahf
jge
fnstenv
inc
inc
fdiv
push
mov
(bad)
(bad)
(bad)
push
das
(bad)
cld
mov
push
fcmovnbe
adc
push
cmps
pushf
dec
pop
lahf
out
sahf
sahf
aad
(bad)
add
aaa
std
dec
scas
jle
pop
fsub
int3
pop
cmp
enter
sub
dec
inc
cmps
(bad)
clc
and
fsub
ds
cwde
aaa
ja
call
jmp
jle
add
psubb
mov
jmp
rol
(bad)
dec
push
jae
sub
xchg
sbb
jg
mov
out
adc
lods
in
(bad)
pop
xchg
pop
jns
gs
cmc
jne
pop
(bad)
jmp
ds
(bad)
in
shr
sti
fsubr
dec
inc
push
test
(bad)
arpl
pusha
(bad)
sbb
(bad)
(bad)
(bad)
inc
push
js
or
fst
pop
sbb
sub
fmul
jno
jbe
stos
dec
and
mov
(bad)
(bad)
(bad)
jmp
popa
jmp
mov
mov
movs
mov
shl
mov
pop
cmp
or
push
xchg
xor
add
push
jb
push
(bad)
push
push
or
rol
(bad)
(bad)
pusha
call
jecxz
push
dec
call
lock
mov
(bad)
mov
add
adc
push
pusha
adc
(bad)
jmp
and
leave
jge
adc
inc
dec
lock
neg
and
jmp
add
out
lahf
clc
lds
fdivp
call
jmp
icebp
push
into
xlat
(bad)
adc
hlt
pop
outs
mov
(bad)
mov
mov
jmp
add
jno
xchg
cld
cdq
out
shl
fnsave
imul
cmc
ret
sbb
jecxz
mov
ja
lahf
loop
inc
mov
in
jge
cdq
sub
iret
repz
(bad)
push
xchg
cli
in
fiadd
aaa
add
cli
inc
aas
std
(bad)
(bad)
(bad)
call
jo
sete
loop
xchg
mov
xchg
pop
dec
jg
dec
pop
cmp
inc
mov
pop
stc
adc
push
je
mov
xchg
push
nop
(bad)
(bad)
(bad)
call
cdq
mov
popf
inc
ins
jo
inc
hlt
popa
inc
test
xchg
dec
sub
push
push
scas
mov
daa
addr16
addr16
(bad)
(bad)
jmp
rcl
inc
inc
test
es
loopne
nop
call
aas
push
add
lock
jecxz
call
dec
or
leave
xlat
cmp
outs
fiadd
test
das
stc
pop
(bad)
(bad)
call
push
or
ret
popa
aas
jl
pop
sbb
sbb
leave
into
cdq
sbb
or
(bad)
(bad)
cmp
sub
mov
fnstsw
mov
aas
xchg
inc
or
jg
(bad)
jnp
sar
out
adc
inc
push
(bad)
(bad)
mov
jnp
add
cld
ja
pop
jge
jle
call
ror
pop
cwde
retf
jg
(bad)
call
lock
ins
dec
jle
cmp
cmp
aaa
add
ja
fdiv
cmp
ds
adc
icebp
mov
(bad)
xchg
hlt
xchg
xor
mov
pop
aas
mov
mov
lahf
das
mov
xor
mov
adc
outs
cmp
xchg
je
mov
pop
xchg
and
dec
jnp
and
daa
(bad)
(bad)
(bad)
dec
loope
add
xchg
pop
jnp
lods
hlt
pop
jecxz
addr16
push
cmp
cmp
or
mov
ds
(bad)
push
out
lods
js
mov
loope
loopne
clc
ja
loop
aas
iret
push
lea
retf
(bad)
ins
pop
(bad)
(bad)
(bad)
mov
push
into
cmp
mov
pusha
mov
xchg
dec
outs
and
in
jnp
js
adc
push
out
sbb
cld
out
rol
cmp
pushf
(bad)
(bad)
jmp
inc
fstp
pusha
cmp
out
int
adc
dec
mov
ins
dec
xlat
fistp
imul
(bad)
(bad)
call
sbb
add
cld
xor
inc
sub
or
shr
and
xor
inc
mov
stos
cli
int3
add
xchg
xchg
rol
clc
mov
out
adc
and
loopne
(bad)
(bad)
(bad)
jmp
sub
aad
gs
sbb
ins
sbb
mov
cmp
movs
pop
xor
cdq
cmps
(bad)
(bad)
push
or
and
std
loope
pop
add
ins
sti
push
retf
jmp
push
jg
xor
fisub
or
scas
pop
ja
dec
addr16
(bad)
out
mov
out
jmp
popf
cmps
scas
cmps
movs
mov
jo
(bad)
cmp
pop
xchg
push
push
ror
pause
movs
repz
(bad)
(bad)
(bad)
jmp
push
mov
(bad)
mov
and
cmp
jb
jle
loop
sub
jg
ud0
adc
inc
or
rcl
lock
retf
pop
jle
in
cmps
ror
dec
inc
aad
call
jl
push
dec
dec
xchg
lods
dec
into
xchg
lods
ret
mov
mov
fcomip
(bad)
jg
fidivr
mov
mov
aas
jmp
es
cdq
es
es
call
or
mov
dec
xchg
fs
dec
not
loop
or
mov
int
(bad)
out
fiadd
and
ja
cmc
and
fnsave
mov
sub
icebp
fbstp
ins
cwde
xchg
sbb
lock
sub
mov
pop
mov
pushf
fst
sbb
jmp
or
fisubr
leave
int3
fiadd
(bad)
cmp
xchg
pop
jno
(bad)
jg
(bad)
repnz
inc
push
leave
dec
jp
sbb
jns
xchg
pop
cmp
stc
jle
scas
sbb
mov
mov
mov
clc
(bad)
cmp
(bad)
fild
sub
push
and
aas
fnstenv
lods
fs
cmp
out
or
sahf
sub
icebp
aas
ds
push
scas
jl
cld
adc
into
mov
mov
push
mov
mov
push
mov
je
sub
loope
repz
in
out
mov
mov
(bad)
sahf
sahf
push
xor
pop
sub
inc
lds
push
push
fcomp
lock
or
(bad)
(bad)
(bad)
out
in
(bad)
aas
into
dec
std
jmp
push
xor
(bad)
(bad)
(bad)
fbstp
loop
mov
xor
mov
xor
inc
jg
sub
dec
mov
fistp
mov
mov
mov
imul
mov
hlt
adc
push
cwde
mov
jecxz
call
loopne
adc
cmp
aam
clc
ror
and
(bad)
(bad)
(bad)
dec
paddw
psubusb
out
imul
idiv
(bad)
in
(bad)
call
in
adc
mov
repnz
xchg
call
sbb
dec
or
(bad)
pop
lock
mov
cmp
stos
mov
xchg
ins
lds
push
or
je
test
test
xchg
aas
ins
pop
and
adc
push
inc
lahf
mov
into
mov
mov
pop
sub
cdq
inc
and
add
inc
mov
mov
scas
jo
push
sbb
std
inc
or
mov
jnp
and
enter
pop
push
push
push
dec
das
adc
push
push
das
inc
pop
pop
div
jmp
jg
dec
cmp
dec
push
rcl
dec
cmp
(bad)
push
cld
movs
mov
and
mov
mov
or
dec
and
dec
mov
gs
cld
into
ins
mov
(bad)
call
or
enter
or
mov
mov
(bad)
jg
pop
cmp
and
cmps
es
xor
xchg
dec
mov
aad
lods
jmp
(bad)
(bad)
(bad)
push
(bad)
stc
outs
mov
jl
(bad)
mov
test
jl
push
jp
jmp
mov
adc
xor
dec
out
xor
lods
dec
mov
adc
add
call
xchg
fld
arpl
std
pop
call
sti
in
(bad)
(bad)
fistp
idiv
push
add
mov
jle
addr16
(bad)
addr16
mov
(bad)
call
retf
ret
rcpps
loopne
cdq
stc
loopne
ucomiss
mov
cmp
(bad)
mov
scas
dec
mov
mov
fst
lock
add
hlt
ja
jl
dec
cmps
jl
adc
mov
call
mov
cs
dec
test
sub
dec
out
(bad)
sti
sahf
mov
out
inc
ja
call
idiv
pop
xor
into
fdiv
push
pop
adc
ret
jmp
inc
pop
push
addr16
add
dec
repnz
stos
fcom
fbstp
mov
sub
into
mov
nop
fst
cmp
cli
pop
mov
sbb
push
ret
test
or
and
lock
or
or
(bad)
(bad)
(bad)
push
ret
dec
sbb
add
mov
aaa
js
dec
cli
loop
add
(bad)
(bad)
(bad)
ffreep
cmp
add
and
push
sbb
sbb
sub
add
(bad)
(bad)
(bad)
inc
daa
adc
xor
fcomp
push
pop
and
jbe
dec
jle
and
(bad)
(bad)
(bad)
inc
nop
mov
fnstenv
loope
add
shl
or
dec
pop
push
fiadd
mov
(bad)
call
aad
das
inc
or
pusha
std
(bad)
push
loop
fcom
mov
mov
xchg
daa
sahf
sub
jg
ja
loopne
inc
inc
test
fcmovu
test
dec
ud0
(bad)
jmp
add
pop
push
fs
mov
or
cmp
cdq
(bad)
cdq
out
dec
jnp
pop
(bad)
push
loop
cmps
hlt
stos
fild
icebp
xor
test
and
xor
out
mov
mov
iret
xchg
mov
xchg
mov
cmc
xchg
(bad)
cmp
adc
sub
jno
mov
mov
mov
sbb
mov
sbb
test
add
fistp
cld
stc
push
loop
daa
mov
imul
or
(bad)
(bad)
jno
cmp
outs
fbstp
lods
cmp
nop
inc
ret
aas
jle
fwait
sub
(bad)
(bad)
(bad)
cmp
imul
and
jno
push
call
xor
mov
aas
jg
(bad)
(bad)
(bad)
fidivr
sar
scas
adc
in
xchg
sub
inc
add
adc
(bad)
(bad)
call
inc
pop
sahf
les
jg
jmp
xchg
out
add
adc
(bad)
(bad)
(bad)
mov
mov
inc
push
mov
xor
inc
mov
call
xchg
outs
fwait
mov
cdq
or
imul
iret
ror
iret
and
les
push
pop
add
mov
and
xor
scas
(bad)
(bad)
(bad)
(bad)
dec
and
inc
dec
xor
sub
or
repnz
outs
inc
cmp
mov
or
jo
push
mov
(bad)
(bad)
call
movs
stos
pop
lea
imul
into
dec
cmp
dec
test
xchg
xor
push
std
dec
sbb
jno
fimul
push
add
pop
xchg
xchg
ffree
pop
inc
loop
call
lahf
ror
sub
mov
scas
and
dec
ins
ins
stos
push
mov
outs
std
(bad)
(bad)
(bad)
mov
mov
mov
fnstsw
sbb
outs
ss
shl
pop
or
mov
xor
cmp
push
xor
and
adc
aas
leave
mov
pop
mov
fs
xchg
adc
add
js
(bad)
mov
mov
sub
sub
das
sar
add
int
pop
push
cmps
xchg
mov
in
mov
bswap
(bad)
jne
jno
push
ins
imul
xchg
stos
jmp
cli
dec
test
xchg
pop
daa
add
(bad)
(bad)
call
cmps
sbb
(bad)
pusha
cmc
push
and
adc
cld
enter
dec
outs
outs
adc
sbb
(bad)
(bad)
inc
out
pop
into
jbe
gs
push
xor
imul
mov
(bad)
(bad)
(bad)
(bad)
jl
pop
cmp
add
xchg
rcr
mov
je
dec
neg
ret
(bad)
cmp
mov
aad
or
jbe
gs
das
push
mov
ret
movs
or
jmp
rcl
enter
and
mov
mov
cmp
cs
movs
mov
and
sbb
add
sub
mov
inc
mov
sbb
retf
cmps
mov
mov
fisub
test
push
or
inc
daa
fsub
in
sub
(bad)
(bad)
(bad)
jg
fdivrp
mov
addr16
daa
lahf
inc
jae
mov
mov
cmp
lock
xor
cmp
cmp
xor
inc
rcl
push
xor
mov
(bad)
scas
stos
xchg
aaa
fwait
mov
cld
int3
mov
or
push
(bad)
(bad)
call
data16
push
adc
xchg
sti
out
inc
push
es
mov
idiv
(bad)
(bad)
call
mov
pop
mov
xchg
lahf
add
jo
dec
daa
jge
or
loope
jecxz
mov
call
mov
push
pop
mov
mov
outs
cmps
(bad)
jle
pop
mov
(bad)
adc
hlt
(bad)
(bad)
fnstcw
xchg
and
in
pop
cmp
inc
ja
inc
and
add
cmp
dec
jg
popf
sub
cmp
pop
stos
jbe
or
pop
dec
inc
jecxz
sti
ds
jg
(bad)
inc
dec
xchg
pop
pop
inc
test
pushw
mov
rol
pop
cmp
pop
mov
sbb
push
xlat
lock
daa
(bad)
out
pop
aas
(bad)
jns
std
(bad)
jmp
cmp
push
and
fcomp
stc
in
pop
pop
inc
pop
call
sbb
sahf
adc
sar
inc
test
inc
clc
add
movs
and
stc
sahf
xlat
(bad)
pop
cmc
call
retf
scas
cld
fstp
xor
cmp
je
repnz
pop
popa
xchg
or
cmp
pusha
popa
mov
and
dec
pop
adc
clc
push
xchg
xor
pusha
push
shl
ins
mov
(bad)
(bad)
js
push
test
inc
pop
inc
push
and
mov
xchg
repnz
rol
adc
xchg
inc
sub
std
(bad)
(bad)
mov
jo
loopne
mov
push
int
dec
pop
ins
fistp
add
rcl
jmp
dec
push
scas
mov
adc
bound
clc
(bad)
jl
mov
jmp
mov
cmp
and
(bad)
aam
or
jo
inc
sar
retf
retf
(bad)
(bad)
call
icebp
ja
std
fiadd
jg
xor
hlt
sti
stc
add
shl
add
push
stc
cmp
push
mov
ja
cs
sbb
jnp
xor
pusha
cli
dec
fidivr
fcmovnu
adc
push
call
repz
jb
ds
loopne
mov
scas
jmp
jns
sbb
push
cmp
cmp
mov
fcmovnu
ss
ss
pop
lock
inc
fs
inc
ds
(bad)
fild
stos
in
mov
sbb
(bad)
cld
(bad)
in
js
push
loop
addr16
jb
sub
inc
(bad)
jno
cld
(bad)
mov
jp
mov
sbb
in
lahf
mov
(bad)
call
inc
jmp
cs
int
fnstcw
and
mov
mov
je
je
jmp
xor
cli
out
nop
push
dec
add
test
mov
(bad)
call
jnp
pop
jp
mov
ins
in
in
dec
push
movs
pop
xchg
cld
(bad)
fcomip
xchg
adc
mov
daa
(bad)
jmp
dec
adc
inc
push
inc
inc
(bad)
(bad)
call
push
movs
jmp
ficom
adc
jns
or
add
fsub
add
add
cli
inc
mov
into
shr
rcl
imul
(bad)
(bad)
jg
fwait
mov
mov
loop
movs
bound
or
sbb
push
add
clc
repz
pop
(bad)
(bad)
(bad)
dec
dec
les
jnp
fwait
popf
inc
or
push
add
lock
lock
bound
pop
aad
ja
dec
sar
or
jecxz
add
jne
call
inc
xchg
pop
aaa
push
pop
icebp
stos
(bad)
cmp
adc
cmps
enter
ficom
sub
out
push
fyl2xp1
cmp
in
loop
cmc
push
nop
pop
inc
jno
push
push
jno
call
daa
and
jmp
data16
xor
mov
cdq
cli
xor
push
jp
stos
stos
dec
and
sub
nop
scas
sub
(bad)
(bad)
(bad)
dec
mov
ret
mov
mov
adc
(bad)
inc
push
jnp
jnp
mov
je
xor
out
push
jnp
ds
adc
repnz
sub
repnz
(bad)
(bad)
(bad)
call
gs
into
lea
ins
jmp
addr16
mov
cmp
rol
jno
add
das
mov
call
adc
and
outs
pusha
jmp
loopne
scas
retf
fcmovbe
ret
xchg
jo
sub
(bad)
mov
in
xor
mov
les
cs
and
imul
clc
xchg
outs
jmp
xchg
(bad)
(bad)
call
ret
add
cmp
or
call
stos
stos
sbb
shl
mov
xor
loop
mov
and
xchg
nop
xchg
xor
sub
sub
and
mov
push
mov
das
cmc
push
in
jnp
inc
into
in
fldcw
loop
(bad)
daa
cmp
aad
ds
mov
push
cs
inc
add
dec
mov
enter
jmp
loop
popa
sub
cmc
sub
aad
rcl
mov
sti
or
stc
popf
sar
adc
cmp
jmp
mov
xor
xchg
mov
fwait
or
push
aam
rcl
stos
in
rcl
jne
pushf
aaa
add
xor
or
xchg
inc
jno
jo
push
pop
inc
mov
sbb
or
and
cld
out
fisttp
dec
add
xchg
icebp
fsincos
out
mov
(bad)
fisttp
in
fcmovu
std
out
ja
sti
dec
daa
jg
cmps
iret
cli
aam
xlat
pop
pop
test
inc
mov
xchg
js
sub
lock
fist
std
add
and
int3
js
inc
adc
push
add
aam
(bad)
jmp
cli
adc
adc
out
inc
dec
aad
clc
push
jns
mov
out
daa
pushf
sub
(bad)
pop
pop
jmp
and
imul
jge
popa
inc
add
or
mov
sub
(bad)
(bad)
mov
jo
movs
or
fwait
push
mov
push
mov
jle
pop
rol
sar
mov
cmp
test
cs
in
pop
push
imul
call
mov
mov
out
in
jp
stos
dec
cld
xor
call
or
std
stc
or
repz
mov
aam
cs
rol
xchg
icebp
inc
sbb
cwde
fisub
push
(bad)
push
sub
jmp
stos
(bad)
(bad)
mov
cld
lods
mov
adc
clc
adc
rcl
cdq
(bad)
fcomip
jmp
rcl
sub
jl
and
test
mov
and
adc
(bad)
inc
xor
push
popf
ret
sbb
loopne
je
and
mov
hlt
out
fs
das
add
call
cmp
jge
or
and
or
(bad)
(bad)
jg
xchg
mov
push
leave
stos
lea
adc
pop
mov
int3
push
ins
lods
movs
or
les
jnp
(bad)
inc
cli
(bad)
ficomp
sbb
inc
adc
or
(bad)
(bad)
inc
mov
and
popf
and
sar
inc
ins
xor
loop
add
inc
sbb
das
add
mov
ja
mov
pop
mov
jge
xor
cmp
sub
add
(bad)
(bad)
(bad)
mov
sbb
lods
cmp
dec
mov
fucom
or
fs
fist
loop
ret
or
add
lock
(bad)
in
mov
inc
das
sbb
out
add
lock
mov
add
(bad)
clc
sti
out
xlat
(bad)
push
push
in
xor
test
loope
jge
cmps
dec
out
add
cmp
or
out
xor
inc
jp
jl
(bad)
inc
cld
xlat
fld
(bad)
aad
xor
mov
pop
mov
cmp
(bad)
jmp
sbb
or
or
cmp
test
mov
jmp
jmp
ret
push
pop
clc
push
rol
arpl
ret
inc
sbb
push
sbb
pusha
call
clc
xchg
fild
adc
adc
out
gs
movs
xchg
xor
xor
fiadd
inc
aad
pop
pop
sub
sub
mov
cs
icebp
(bad)
ficomp
push
inc
or
xor
out
jge
gs
mov
(bad)
(bad)
inc
sbb
xchg
fistp
and
loope
nop
mov
and
jmp
or
inc
and
enter
imul
cmp
jbe
fist
or
sti
cmps
push
loop
inc
inc
mov
ror
nop
int
scas
cli
jmp
inc
into
retf
mov
test
clc
xor
sbb
(bad)
jg
std
shl
mov
mov
rcl
pop
pop
mov
push
add
std
(bad)
(bad)
inc
push
imul
sub
inc
pop
fcmovbe
sar
out
out
pushf
jne
dec
jnp
cmp
(bad)
push
jl
clc
mov
cdq
dec
jp
cmp
pop
jge
add
cmps
stos
(bad)
(bad)
jmp
imul
out
mov
fwait
(bad)
xor
xchg
add
fmul
inc
inc
jle
mov
sbb
out
test
sbb
es
stc
push
ffree
sub
loope
lock
push
jecxz
test
sub
cli
outs
clc
cmps
push
data16
repnz
adc
adc
sub
push
fiadd
adc
push
arpl
mov
adc
xor
ret
loop
dec
(bad)
sub
fild
(bad)
out
mov
jne
dec
pop
lock
loop
fnsave
aad
xlat
cwde
iret
jmp
aad
jg
rcr
(bad)
pop
jp
jo
lock
fisttp
add
jle
xchg
sbb
call
cld
xchg
jmp
mov
std
test
adc
pusha
dec
imul
jmp
xlat
xlat
aad
dec
mov
iret
(bad)
(bad)
mov
ds
(bad)
call
add
mov
sbb
ins
fdiv
call
fild
hlt
scas
add
(bad)
(bad)
jg
repz
je
popa
push
rcl
and
rcr
rcr
adc
(bad)
(bad)
dec
inc
ret
les
sub
retf
retf
xchg
or
mov
jmp
inc
or
inc
(bad)
(bad)
(bad)
out
pop
push
or
pop
mov
jo
and
add
and
inc
mov
(bad)
mov
adc
test
push
in
into
xchg
arpl
int
jl
mov
mov
xchg
(bad)
push
push
sbb
cli
pop
push
jge
dec
call
push
inc
test
(bad)
fdiv
xchg
cld
xchg
and
lock
(bad)
(bad)
ficomp
ss
dec
das
fidiv
cdq
jle
movs
xchg
xchg
cs
aam
cld
or
out
sbb
push
xchg
and
rol
(bad)
jg
adc
stos
dec
aas
jge
jae
add
inc
ret
pop
dec
push
sub
cld
fsub
int
lea
dec
cmps
aaa
push
mov
call
jmp
outs
dec
or
(bad)
out
cmc
pushf
sbb
mov
xor
xchg
jmp
popa
dec
and
sub
iret
pop
pop
inc
sahf
sbb
fwait
inc
imul
inc
std
mov
sti
int3
jne
add
mov
lods
loopne
arpl
inc
xchg
add
jl
mov
rcr
js
and
jo
adc
sub
(bad)
pop
dec
add
xchg
test
add
(bad)
call
cmp
add
dec
lahf
out
add
jbe
lahf
popa
out
(bad)
inc
mov
out
jns
out
dec
sar
and
aaa
aam
xchg
xchg
std
(bad)
(bad)
(bad)
jmp
mov
dec
std
or
cmp
cmp
mov
rcr
cmp
adc
aad
stos
inc
adc
scas
cs
inc
xchg
dec
addr16
jbe
cmps
mov
je
jle
and
ins
xor
(bad)
cmps
call
mov
sbb
jmp
push
xor
cmc
hlt
idiv
and
mov
push
adc
inc
bound
push
test
mov
lahf
dec
(bad)
scas
lods
leave
xchg
jg
and
add
cmp
stc
xchg
lods
(bad)
fild
iret
iret
sbb
sbb
(bad)
and
push
mov
inc
add
je
sub
loop
cli
(bad)
call
jmp
call
call
lahf
fnstsw
inc
(bad)
leave
clc
(bad)
jg
arpl
fimul
xor
push
rol
int3
mov
or
inc
jo
inc
clc
inc
in
add
dec
xchg
jecxz
fimul
outs
(bad)
jmp
pushf
test
sub
mov
std
loopne
scas
mov
inc
fadd
ins
ss
fadd
pop
dec
fild
or
lods
pushf
rcr
push
loope
add
sub
(bad)
(bad)
inc
or
lock
push
jmp
lahf
bound
das
push
mov
(bad)
jmp
push
fdivrp
or
in
in
sbb
mov
neg
movs
adc
jecxz
loopne
iret
xchg
out
cmp
cmps
xchg
stc
xchg
xchg
xor
xchg
(bad)
mov
out
and
xchg
ror
mov
scas
lahf
cli
jbe
cmp
add
retf
imul
add
push
mov
jg
add
inc
xor
pop
xor
fmul
mov
(bad)
(bad)
dec
dec
out
xchg
pop
jb
cdq
rcl
in
jmp
aaa
das
cmp
mov
lahf
(bad)
cld
cmp
(bad)
(bad)
push
add
cmps
mov
(bad)
std
popf
out
ror
fcmovne
ret
lahf
je
daa
(bad)
cmc
out
nop
imul
leave
mov
jg
mov
rcl
(bad)
(bad)
out
dec
jb
std
sti
adc
mov
mov
out
mov
(bad)
mov
fiadd
dec
cmp
pop
jle
add
jecxz
add
ja
adc
call
out
(bad)
sti
aad
enter
(bad)
cld
jecxz
pop
dec
repz
sti
xchg
outs
mov
stos
jg
mov
adc
(bad)
jmp
fimul
jbe
cmp
mov
std
jno
arpl
sbb
gs
scas
sahf
ficom
pop
jle
(bad)
(bad)
(bad)
call
add
jg
(bad)
dec
movs
clc
loopne
aas
lods
pop
fbstp
mov
inc
pop
sub
inc
sar
inc
cli
dec
fwait
pop
pop
mov
cmp
clc
jecxz
xchg
pop
fimul
popa
mov
pop
cmc
cdq
xor
add
(bad)
push
cli
jb
out
pushf
inc
fiadd
(bad)
inc
dec
dec
adc
jnp
outs
mov
add
(bad)
push
push
cmp
loopne
repz
jmp
xchg
and
mov
ins
retf
jmp
mov
imul
stos
test
bound
push
clc
pushf
sub
adc
mov
scas
arpl
(bad)
jmp
and
sbb
xor
movs
cmp
mov
adc
outs
sbb
inc
jmp
mov
ret
xor
jo
mov
push
or
int
dec
xlat
pop
jo
jne
addr16
mov
fs
(bad)
(bad)
call
rep
xchg
std
fimul
sti
cld
int
nop
jle
inc
outs
(bad)
out
add
std
(bad)
jmp
jg
and
pop
xor
fdiv
jae
lahf
aaa
push
mov
int3
aad
in
push
mov
jg
push
js
ja
xchg
sahf
add
inc
daa
jb
je
imul
retf
enterw
jmp
rcr
mov
pop
fisttp
pop
out
cmp
shr
or
(bad)
(bad)
(bad)
jmp
pop
cld
nop
cdq
adc
into
stc
cmc
mov
rcr
jmp
jle
add
mov
loope
repz
push
pushf
jne
(bad)
jmp
or
int
mov
(bad)
cmp
and
dec
pop
push
mov
dec
scas
and
adc
mov
push
pop
js
ins
les
sbb
dec
nop
or
cmps
aaa
aaa
pop
jno
shl
loop
je
and
nop
xchg
test
fsubrp
sbb
and
(bad)
or
(bad)
(bad)
(bad)
(bad)
cmp
in
jae
xchg
test
icebp
loop
scas
xchg
mov
mov
or
mov
add
(bad)
(bad)
ds
push
repnz
xchg
sbb
invd
stc
mov
and
(bad)
jmp
retf
mov
loopne
xor
mov
test
(bad)
(bad)
call
popf
dec
sub
xor
movs
jb
and
imul
jp
push
loopne
cmp
imul
icebp
(bad)
mov
jle
push
dec
or
push
mov
push
and
mov
outs
cmps
icebp
jmp
pusha
push
bswap
mov
jle
cmp
add
stos
ror
cdq
fidiv
xor
retf
in
hlt
push
cmp
imul
sbb
xchg
imul
jp
ins
daa
fs
jg
js
jmp
cmp
lds
push
call
lods
(bad)
(bad)
lods
inc
jle
or
push
adc
fld
xchg
mov
xchg
into
cmps
cli
cmps
ja
test
pop
sbb
les
push
dec
(bad)
call
jg
int3
jge
fistp
pushf
out
scas
lock
or
rcr
adc
sub
adc
adc
push
pusha
(bad)
call
mov
sub
cmp
(bad)
in
aas
cmp
mov
enter
mov
sahf
jl
stc
std
out
icebp
mov
mov
shl
scas
jl
add
les
scas
push
jmp
mov
sahf
(bad)
jle
jae
in
pop
mov
leave
les
cmc
scas
(bad)
shl
jmp
ror
dec
ror
retf
scas
mov
push
or
push
iret
sbb
sbb
mov
jecxz
jmp
out
je
mov
add
pushf
push
sub
dec
js
xchg
jg
in
cmp
jmp
es
shr
retf
push
ins
daa
les
pop
or
pop
push
(bad)
(bad)
call
push
or
movs
imul
ror
sbb
add
lds
cmc
dec
jmp
inc
ret
push
out
loopne
retf
cdq
add
push
push
adc
fild
sub
inc
cld
outs
dec
sub
out
(bad)
call
or
movs
movs
jne
fwait
aas
stc
cld
stos
imul
sbb
loopne
jae
into
pop
rcr
(bad)
call
push
cmps
push
(bad)
pop
jb
jge
fdivrp
pusha
std
inc
imul
fnsave
inc
(bad)
call
(bad)
jle
mov
dec
dec
aaa
iret
shl
arpl
ror
inc
lahf
outs
jl
pop
xor
xor
sub
and
mov
fdivp
(bad)
jg
(bad)
aas
std
int3
fcomp
xchg
movs
ss
out
clc
(bad)
cmc
mov
ins
mov
xchg
scas
xchg
es
aad
inc
inc
jp
arpl
lods
xor
mov
(bad)
jmp
repz
mov
inc
xor
les
inc
inc
gs
bound
(bad)
(bad)
call
je
add
out
mov
inc
retf
xor
fwait
mov
ds
mov
and
jno
or
push
add
int
or
mov
enter
jno
cld
rcl
dec
rcl
and
dec
mov
sbb
dec
(bad)
(bad)
(bad)
inc
clc
call
push
scas
popa
out
push
and
cdq
or
(bad)
adc
jl
jne
mov
dec
aas
push
mov
sbb
sbb
jns
push
sar
(bad)
(bad)
dec
scas
out
mov
ja
imul
pop
gs
cmp
mov
push
daa
dec
rol
and
jb
ins
imul
jp
push
retf
out
xor
push
cmp
sti
pop
mov
icebp
mov
aaa
jp
mov
xchg
into
fcomp
xor
jmp
jmp
mov
cmp
in
sahf
scas
xlat
mov
dec
sar
and
stos
lahf
jge
leave
jmp
add
int3
sar
(bad)
jg
cmps
xchg
jge
add
add
xchg
call
(bad)
(bad)
dec
jle
es
(bad)
das
clc
adc
bound
popa
lds
aam
sub
(bad)
(bad)
(bad)
jmp
xor
popf
mov
test
mov
sub
lock
test
pop
call
pop
(bad)
add
push
push
and
out
or
(bad)
push
or
and
and
(bad)
push
clc
test
(bad)
mov
(bad)
(bad)
(bad)
cmp
add
jl
movs
push
leave
cmp
add
pusha
int3
lods
sub
sbb
out
add
push
sub
fidiv
push
xchg
cli
pop
inc
jo
daa
mov
lds
mov
call
pop
fcmovu
in
imul
jnp
(bad)
(bad)
(bad)
jnp
sub
jl
and
mov
sahf
pop
mov
imul
push
sbb
xlat
mov
mov
fnstsw
retf
sbb
(bad)
(bad)
(bad)
dec
xor
cs
mov
int
(bad)
inc
cli
retf
les
lods
xchg
imul
addr16
dec
(bad)
(bad)
fcomip
movs
or
jg
pop
dec
xchg
cmp
xchg
stc
mov
aas
das
clc
mov
gs
(bad)
pop
test
jae
out
pop
std
(bad)
(bad)
jmp
cmp
mov
sbb
(bad)
(bad)
(bad)
call
cmp
lea
xchg
lahf
sub
and
rcl
fistp
jg
sub
push
cld
test
pop
(bad)
cmp
sbb
js
sub
loop
add
js
inc
xchg
push
mov
outs
(bad)
jmp
cli
int
stc
sub
xchg
inc
or
add
lahf
jne
push
dec
mov
push
sub
(bad)
(bad)
call
push
inc
fcom
sbb
or
xor
or
aam
and
inc
cwde
adc
es
add
aas
add
inc
mov
imul
xchg
sub
(bad)
(bad)
(bad)
dec
movs
push
lock
mov
test
push
sub
cmps
mov
lahf
fcomp
(bad)
(bad)
jmp
int
adc
sbb
cs
loope
movs
sbb
cs
xchg
xor
icebp
outs
(bad)
push
rcr
fcom
sbb
xchg
(bad)
(bad)
fisttp
je
leave
call
lds
jmp
shr
push
jl
xor
inc
rol
stos
sub
not
dec
xor
xchg
mov
add
adc
adc
(bad)
jmp
lods
and
push
sbb
and
pop
mov
adc
mov
jmp
and
and
mov
aam
and
into
es
adc
adc
scas
or
retf
dec
sub
xchg
inc
push
(bad)
push
dec
mov
sub
fdivr
mov
mov
sub
pop
sub
cli
(bad)
or
ja
(bad)
test
pop
lods
fbld
mov
sbb
jbe
ins
ds
adc
aas
or
fdiv
popa
xlat
jb
xchg
stc
fidivr
popa
mov
cmc
inc
adc
mov
mov
fdivr
pop
mov
int3
inc
jno
sub
dec
out
pop
or
dec
adc
mov
(bad)
dec
test
and
add
sbb
ror
test
cdq
dec
inc
or
cmps
cld
pop
std
fbstp
or
test
push
or
(bad)
in
push
call
out
pop
mov
int
lock
dec
jge
add
mov
xor
mov
inc
cmp
xlat
jl
sbb
or
(bad)
call
jge
out
inc
mov
ret
xchg
add
ja
(bad)
mov
cmp
addr16
dec
add
rol
movq
dec
push
sbb
xor
sar
jmp
dec
mov
pusha
add
jmp
xor
repz
and
xor
jno
hlt
aaa
pushf
sbb
and
push
lods
ds
das
mov
pop
aaa
jg
(bad)
in
shl
mov
adc
clc
mov
push
aam
cli
dec
out
rol
call
dec
dec
mov
pop
or
add
(bad)
jmp
cmp
mov
mov
ins
mov
movs
add
push
les
jmp
push
cmp
jns
adc
push
push
xchg
ret
xchg
adc
pop
or
adc
and
or
jnp
scas
pop
hlt
sar
inc
or
fld
test
dec
cdq
and
fsub
(bad)
(bad)
mov
xor
lods
movs
dec
rcl
sbb
pop
adc
add
mov
fistp
inc
jbe
fist
ja
mov
sahf
and
mov
jo
test
add
fisub
loopne
int3
ins
and
adc
lds
(bad)
dec
cmp
xchg
cs
add
push
adc
add
and
xor
pop
inc
cld
call
xchg
pop
push
(bad)
(bad)
jmp
xchg
xor
mov
add
xchg
mov
imul
fdiv
mov
mov
cld
(bad)
(bad)
push
enter
inc
aaa
mov
iret
mov
lahf
add
sub
ja
test
fwait
add
mov
jg
adc
or
xor
sbb
mov
and
push
ins
ret
add
sbb
add
pop
cli
aam
fwait
xor
add
and
ins
and
mov
outs
bnd
clc
hlt
or
pop
aaa
mov
xor
lds
jmp
test
hlt
mov
sbb
(bad)
adc
adc
jo
pop
inc
add
stos
aaa
hlt
adc
jno
mov
sub
push
pop
push
pop
stc
sub
cdq
sbb
mov
pusha
mov
or
push
nop
add
jno
xchg
jo
jno
stos
and
inc
push
mov
(bad)
xchg
xor
or
in
xchg
ror
adc
mov
ins
jmp
fsub
loop
lock
shr
inc
dec
inc
lea
inc
jle
lock
pusha
out
fidiv
add
sti
jecxz
dec
js
mov
and
sub
test
xor
(bad)
dec
jmp
lds
and
inc
add
aaa
cld
push
sbb
movs
(bad)
mov
mov
cwde
and
das
pop
xor
ret
ret
(bad)
inc
or
or
test
adc
jno
push
inc
(bad)
cmps
scas
jg
mov
test
(bad)
jmp
in
inc
std
scas
sar
mov
test
and
adc
test
dec
xchg
and
xor
(bad)
ja
or
add
jecxz
aam
pop
pop
cmp
pop
adc
lock
(bad)
jg
nop
dec
sbb
mov
cmp
inc
mov
call
mov
bound
add
js
loop
inc
mov
call
pop
lock
sbb
push
add
mov
xor
sbb
adc
dec
or
(bad)
(bad)
jmp
jge
(bad)
js
or
bndldx
nop
call
xchg
psadbw
mov
sbb
or
adc
or
dec
scas
(bad)
xchg
sar
inc
dec
sbb
mov
out
xchg
push
rcl
(bad)
mov
dec
arpl
lahf
jbe
gs
mov
mov
inc
stos
add
clc
rcr
js
popf
imul
inc
mov
call
jb
or
dec
or
inc
es
shl
mov
sbb
call
adc
das
aas
push
mov
mov
call
(bad)
pop
movs
fistp
stos
ficomp
sub
aam
and
jmp
or
lock
jo
push
nop
lods
(bad)
(bad)
(bad)
call
mov
cwde
nop
push
in
ret
jns
mov
and
add
(bad)
fbstp
mov
push
rcl
leave
dec
(bad)
les
js
cs
imul
stos
or
fdiv
dec
xchg
sub
lds
push
push
(bad)
inc
mov
dec
mov
pop
push
pop
xchg
pop
mov
jmp
clc
stc
pop
inc
ins
int
jmp
mov
add
sbb
pop
es
test
sbb
(bad)
adc
xor
xor
jmp
jg
aaa
fldenv
outs
xchg
mov
mov
gs
lahf
jp
push
in
or
push
mov
push
into
scas
inc
lock
call
mov
arpl
or
sbb
rol
fistp
add
mov
(bad)
adc
jmp
les
hlt
xor
lods
scas
lods
test
(bad)
jg
jne
sbb
inc
test
inc
xchg
pop
add
inc
mov
sub
mov
and
pop
hlt
(bad)
jg
test
loopne
pop
ret
test
stos
lods
xchg
dec
pusha
sub
inc
pusha
adc
cmp
inc
ret
popa
or
(bad)
inc
push
std
dec
and
xchg
or
jmp
stos
and
sub
addr16
push
or
call
into
and
sub
inc
daa
xor
inc
ret
leave
and
xchg
daa
cmp
aas
in
cmp
loope
mov
pop
mov
test
and
loopne
xchg
dec
lock
sub
sbb
sahf
xor
(bad)
(bad)
jg
ret
nop
outs
add
push
(bad)
adc
mov
aad
cs
call
scas
lea
inc
xor
or
xchg
aam
dec
add
das
cmp
inc
or
icebp
jb
mov
popf
cmp
idiv
or
cmp
sub
and
ss
mov
sbb
mov
cmp
(bad)
pop
std
push
pop
or
and
adc
push
push
cdq
mov
cld
lds
out
stos
jne
imul
(bad)
(bad)
inc
bound
add
adc
dec
pop
inc
mov
cwde
inc
pushf
mov
inc
jl
push
pop
xor
push
(bad)
loopne
js
or
in
push
ret
add
cs
aas
lock
or
inc
xor
shl
sbb
jo
xor
(bad)
jmp
adc
cmc
xchg
call
xor
test
rol
shl
push
in
mov
jbe
aam
push
jge
(bad)
jg
int
push
call
jmp
icebp
pop
cmp
loope
and
adc
mov
inc
jns
adc
movs
push
inc
nop
test
xor
xor
jl
push
xor
adc
outs
cmp
clc
sbb
or
sti
adc
add
jmp
bound
fldcw
dec
xchg
adc
(bad)
(bad)
mov
and
movs
xor
sub
dec
xchg
call
mov
inc
call
lods
imul
mov
jp
neg
inc
or
cwde
jo
clc
outs
fs
nop
mov
push
jecxz
push
pop
adc
out
mov
clc
loop
xor
leave
mov
(bad)
(bad)
(bad)
jmp
and
xchg
data16
mov
cmps
or
pusha
mov
add
jnp
mov
daa
in
adc
dec
xor
and
test
sbb
in
call
mov
inc
stos
in
mov
mov
nop
loop
aam
or
in
ror
mov
cdq
mov
or
popa
fmul
sub
mov
jecxz
bound
test
or
lods
nop
aaa
add
cdq
std
rcr
fcomip
dec
and
add
pop
sub
ins
inc
dec
popf
inc
adc
(bad)
not
leave
sahf
push
inc
and
add
sbb
mov
push
mov
sbb
pop
dec
clc
sbb
lock
loope
int3
movs
mov
inc
sbb
ja
fucomp
test
cs
jmp
push
pusha
add
fadd
or
cwde
or
xchg
(bad)
push
or
adc
pop
add
jmp
adc
inc
adc
clc
scas
push
rol
push
test
add
mov
sbb
and
les
and
(bad)
jg
inc
push
loopne
adc
test
and
mov
mov
inc
mov
ror
cli
cli
mov
std
sub
(bad)
(bad)
push
sub
sbb
clc
adc
(bad)
push
push
jl
test
rcl
xor
(bad)
dec
xor
stos
cld
repz
fs
inc
or
sub
les
fimul
jl
scas
(bad)
push
cmp
stos
push
add
or
cwde
xchg
sub
or
popa
daa
loop
add
jl
adc
scas
dec
shl
add
cmps
push
add
in
(bad)
aaa
loopne
std
mov
sub
rol
push
sub
das
clc
pushf
jp
ins
mov
call
lods
inc
jbe
mov
(bad)
jmp
and
cld
mov
jbe
xlat
ret
daa
popf
jae
inc
push
test
outs
clc
call
xor
loop
imul
mov
or
add
sbb
fnstcw
jecxz
out
shl
outs
sar
cwde
or
mov
lods
out
aas
pop
shl
inc
pop
(bad)
call
test
xor
rol
les
mov
inc
in
xchg
ror
pop
into
lds
(bad)
jg
cdq
(bad)
xchg
mov
fs
inc
daa
jge
bound
out
add
and
or
xchg
sub
mov
mov
dec
aaa
in
add
jo
cdq
and
adc
test
add
outs
xchg
es
mov
mov
sar
out
clc
call
sahf
xor
fiadd
sbb
lock
inc
push
xchg
pop
je
push
enter
(bad)
sti
add
add
ror
in
mov
sub
push
outs
(bad)
(bad)
jg
or
cmp
popa
adc
dec
mov
aam
es
stos
cmp
loope
in
into
inc
pop
inc
(bad)
or
les
scas
mov
sbb
sub
call
mov
mov
ror
lods
cmp
out
push
fldcw
lock
clc
(bad)
cmp
dec
and
and
and
jle
add
push
adc
cld
popf
or
pop
stos
inc
test
mov
mov
inc
mov
sbb
daa
lds
jg
add
hlt
popa
inc
sbb
pusha
adc
jmp
jl
fidivr
out
ret
push
dec
js
sbb
loopne
mov
add
ds
add
sbb
mov
(bad)
dec
and
test
and
mov
aam
not
adc
inc
(bad)
(bad)
call
rol
cmp
add
pushf
sbb
mov
mov
mov
adc
ret
test
add
in
rcr
mov
inc
ror
add
in
loopne
std
(bad)
fistp
or
fwait
stos
aad
push
in
outs
push
push
sbb
dec
jg
enter
adc
dec
in
bound
or
inc
mov
fistp
push
gs
repnz
(bad)
das
(bad)
stos
js
add
sub
jne
inc
jmp
jecxz
je
(bad)
scas
adc
in
jg
fdivr
repnz
out
pop
test
fbld
das
pop
xor
daa
sbb
xchg
xor
xor
test
pop
push
fadd
nop
gs
enterw
(bad)
das
sbb
(bad)
dec
retf
mov
pop
pop
cmp
add
mov
mov
and
lea
or
rol
mov
dec
loopne
push
add
adc
nop
add
out
add
xor
push
xchg
or
mov
fdivr
popa
sbb
adc
mov
mov
pop
test
and
or
cld
(bad)
dec
gs
sbb
test
add
retf
xor
(bad)
push
out
mov
xchg
in
pop
leave
lods
es
push
push
(bad)
(bad)
mov
xor
push
pusha
nop
cmp
dec
pop
mov
push
push
test
jb
pop
mov
mov
rol
rol
(bad)
fcomip
inc
adc
cld
ror
into
mov
(bad)
xchg
pop
(bad)
(bad)
fild
aas
aam
ret
ret
cdq
push
adc
add
push
ss
or
outs
std
inc
pusha
xchg
fstp
or
mov
adc
adc
mov
pop
inc
test
outs
xchg
add
push
popa
push
clc
call
lea
jl
add
ret
and
fabs
call
out
mov
pop
(bad)
out
(bad)
push
xchg
mov
sar
ret
push
pop
out
mov
aas
mov
mov
rcr
mov
movs
sub
sbb
add
js
inc
inc
into
mov
inc
add
dec
or
cmp
or
mov
mov
loope
nop
sub
pusha
or
enter
mov
retf
out
mov
test
rol
dec
out
cwde
aad
push
inc
mov
or
cld
in
call
test
jnp
jecxz
sbb
gs
mov
cmp
pop
aaa
std
mov
fdiv
xchg
mov
lds
inc
in
aam
pushf
dec
add
sbb
mov
dec
stos
mov
call
ret
pop
test
int3
sqrtps
xor
rep
lea
lock
jg
(bad)
jmp
and
popf
sar
adc
mov
add
dec
lods
cli
outs
loope
and
xor
pusha
fcomi
add
(bad)
fild
int3
(bad)
out
push
cmp
cmps
ret
mov
adc
xor
out
test
mov
adc
push
ja
call
or
dec
into
test
fwait
nop
mov
cld
sub
and
and
hlt
adc
xchg
or
mov
aam
shld
xchg
xor
cld
sub
stos
repnz
call
cld
cmp
or
jp
cmps
sub
inc
pusha
dec
gs
jmp
scas
and
lock
pusha
stos
push
dec
out
add
xchg
adc
pop
aad
add
push
mov
test
mov
jo
or
sbb
sbb
clc
jg
and
mov
ret
loopne
xchg
(bad)
inc
add
add
dec
jb
loopne
test
or
arpl
dec
inc
add
adc
ins
aam
mov
test
push
and
les
fisubr
or
daa
inc
mov
cmp
mov
mov
(bad)
jmp
cli
xchg
cmps
repz
mov
(bad)
bswap
inc
fsub
mov
pop
or
adc
and
inc
sbb
sbb
inc
add
cmp
add
hlt
xor
jg
mov
or
ins
pop
clc
add
(bad)
jg
jmp
mov
jg
mov
inc
mov
sub
add
jmp
in
sbb
xchg
mov
(bad)
jg
pop
push
mov
lds
inc
jne
add
outs
inc
mov
test
mov
adc
js
(bad)
jmp
repz
fstp
or
in
iret
and
sbb
mov
dec
add
std
cs
inc
ins
jg
(bad)
(bad)
out
ret
sar
dec
xchg
ins
enter
push
mov
test
lds
pop
nop
or
mov
jb
or
dec
sub
and
test
mov
fild
sbb
nop
dec
sbb
pop
push
ret
mov
aas
inc
adc
sub
pop
jl
mov
shr
jmp
aaa
lods
cli
dec
xor
mov
push
sub
jle
mov
(bad)
(bad)
out
push
mov
test
neg
pop
jbe
fidiv
add
gs
scas
es
push
dec
repz
scas
stos
stos
iret
in
dec
(bad)
pop
fs
(bad)
out
clc
dec
push
movs
jb
in
leave
int
ror
cmps
jmp
fwait
and
call
stos
scas
fwait
cmp
cmp
cmc
idiv
add
push
mov
and
sti
jle
enter
mov
xor
leave
and
sti
mov
ja
jbe
fisub
jge
dec
clc
pop
sbb
xchg
test
push
sar
(bad)
sbb
xor
xchg
retf
aaa
xchg
sub
(bad)
lods
and
xor
sar
(bad)
(bad)
dec
mov
into
stos
xor
popf
dec
pop
in
xor
xchg
or
dec
popa
sub
(bad)
(bad)
and
daa
push
sub
adc
dec
or
jmp
test
push
xchg
pop
sbb
(bad)
mov
dec
movs
stos
mov
dec
and
addr16
test
dec
push
pop
and
dec
dec
and
stos
sub
popa
mov
dec
(bad)
(bad)
jg
dec
dec
sbb
ins
loop
jae
stc
aas
(bad)
clc
mov
fsubr
xchg
jmp
(bad)
mov
inc
push
dec
pop
in
ret
in
jecxz
popa
in
enter
fld
je
push
dec
(bad)
stos
(bad)
(bad)
(bad)
jmp
cmp
lock
sahf
popf
enter
inc
sub
ror
sbb
(bad)
mov
into
(bad)
(bad)
(bad)
(bad)
in
out
cmp
fwait
lods
xchg
dec
div
cs
ss
xchg
in
and
sbb
push
jmp
hlt
inc
jmp
cmp
mov
jo
loopne
(bad)
dec
fist
add
and
bound
mov
cld
imul
push
(bad)
(bad)
(bad)
mov
shr
or
movs
ins
jb
mov
cld
mov
or
enter
adc
dec
fidivr
pusha
add
dec
sub
jo
dec
mov
pop
cmp
and
jge
sub
icebp
pop
mov
jmp
push
enter
ret
sahf
daa
pushf
(bad)
push
mov
inc
gs
dec
xchg
test
push
call
pop
cmp
xchg
fbstp
ret
lods
bound
loope
xor
xor
addr16
(bad)
(bad)
(bad)
(bad)
jns
cmp
push
test
fistp
sub
out
lods
into
cmp
(bad)
(bad)
(bad)
(bad)
jmp
in
mov
sahf
jb
mov
out
(bad)
cmp
dec
es
popa
mov
sub
out
adc
(bad)
inc
cmp
outs
pusha
aas
push
cmp
addr16
and
sti
loopne
sahf
push
adc
jmp
and
sub
int3
pusha
inc
in
pop
dec
int3
cli
add
sbb
jge
mov
sahf
cmp
push
pop
jp
call
sbb
in
outs
out
cli
icebp
outs
pop
pop
fistp
xchg
stos
mov
psubusw
loopne
push
and
(bad)
(bad)
(bad)
dec
(bad)
jl
out
jns
out
ins
sbb
sbb
movs
jmp
xor
xchg
cmp
sar
(bad)
jmp
pushf
dec
std
jb
idiv
xchg
and
es
cmp
shl
mov
out
sub
call
ins
test
cs
sbb
(bad)
call
in
imul
stos
cmp
(bad)
mov
popf
not
into
mov
jle
jg
call
mov
rcr
lods
jne
jge
repz
in
enter
retf
cwde
rcr
bound
fs
fldenv
loop
add
popf
pop
inc
popa
pop
push
int
leave
sar
(bad)
call
mov
pusha
mov
leave
or
mov
add
daa
sbb
ss
fstp
cli
int3
cli
jecxz
(bad)
inc
xchg
ret
lahf
dec
cmps
xchg
mov
push
xchg
leave
in
(bad)
rol
(bad)
(bad)
mov
sti
test
(bad)
jo
jnp
xor
and
in
into
inc
mov
fwait
cmp
(bad)
(bad)
(bad)
call
xchg
dec
sbb
and
push
test
fs
xchg
xchg
sub
test
sahf
and
pop
cmp
jg
(bad)
call
arpl
in
popa
movs
in
jns
rcr
pop
pop
xor
push
fnstenv
push
(bad)
(bad)
jg
repnz
push
out
scas
dec
sbb
shr
ss
pop
cmp
xchg
int3
popa
inc
add
fcmovnbe
sub
repz
mov
sub
(bad)
(bad)
call
xchg
mov
sub
pop
repz
lahf
sbb
dec
repnz
sti
popf
call
cli
(bad)
(bad)
mov
jmp
mov
call
mov
clc
fdiv
(bad)
(bad)
(bad)
(bad)
jns
js
pop
addr16
mov
jnp
shr
ins
xlat
cmp
sub
jg
pop
outs
jmp
push
cmp
out
call
dec
out
fcom
mov
cmps
mov
(bad)
(bad)
jmp
inc
cmp
int
ins
mov
not
xchg
inc
adc
jnp
jnp
ins
ja
(bad)
sbb
imul
mov
or
scas
jns
(bad)
call
mov
aam
enter
fcomp
test
ins
sub
out
sub
dec
adc
stc
inc
iret
sbb
cmc
leave
retf
and
stc
sub
mov
ja
(bad)
(bad)
dec
inc
dec
mov
fist
inc
call
movs
ror
into
adc
mov
(bad)
(bad)
push
mov
(bad)
cmp
adc
(bad)
cmp
nop
xor
retf
add
ds
fsubr
clc
(bad)
(bad)
(bad)
call
xchg
outs
inc
fs
pop
test
mov
and
dec
call
or
shl
std
jecxz
mov
xor
sub
dec
ins
or
call
mov
xor
sbb
shl
sub
imul
pop
fidivr
(bad)
in
fcomp
outs
xchg
dec
dec
data16
scas
(bad)
(bad)
jg
in
ret
test
cmp
fiadd
sbb
or
pop
mov
neg
(bad)
dec
mov
lea
xchg
call
push
fwait
fwait
movs
jb
ins
and
push
dec
iret
shl
retf
add
outs
push
retf
inc
mov
xor
cmp
stos
mov
jp
mov
outs
sahf
xchg
dec
cmps
ins
ins
cmp
(bad)
in
add
jmp
push
push
es
daa
mov
ins
sti
clc
(bad)
dec
stos
(bad)
push
inc
push
lods
lods
shl
test
hlt
das
movs
cmp
jge
movs
push
or
and
aaa
xor
(bad)
(bad)
jg
movs
je
call
ins
(bad)
aad
inc
or
(bad)
out
and
jmp
ret
enter
arpl
push
mov
dec
jmp
dec
test
adc
mov
sbb
push
mov
daa
enter
clc
(bad)
(bad)
jmp
retf
mov
mov
mov
mov
adc
std
(bad)
(bad)
jmp
dec
cmps
dec
retf
xor
adc
(bad)
es
mov
stos
lahf
dec
mov
push
xchg
dec
and
fldcw
sub
jge
fs
jg
lods
xor
(bad)
inc
int3
jb
dec
fistp
pop
les
pusha
push
ds
(bad)
(bad)
(bad)
(bad)
fstp
int
(bad)
fmul
or
pop
aas
sub
mov
jbe
imul
jne
setle
adc
xlat
(bad)
jmp
mov
mov
mov
call
jmp
cmp
xchg
sbb
out
or
(bad)
(bad)
fnstenv
and
fcmovnu
rol
jb
jae
xor
sbb
pop
clc
mov
xchg
adc
sbb
xchg
sub
add
push
lock
repz
sub
dec
loopne
(bad)
call
lods
in
lods
out
sbb
adc
mov
or
xor
mov
(bad)
fcomip
dec
pop
clc
mov
jle
sub
adc
and
idiv
xchg
ja
sub
adc
test
inc
stos
mov
outs
lock
ds
sbb
fild
clc
(bad)
(bad)
inc
pop
out
pop
or
in
idiv
out
dec
mov
xor
cmp
xor
(bad)
(bad)
call
mov
mov
adc
daa
jo
adc
cli
pop
into
sbb
(bad)
call
cli
mov
xchg
dec
pop
xor
and
pop
fld
sub
sub
(bad)
in
cs
es
cmp
jbe
or
pop
xchg
push
and
loopne
jle
inc
fdiv
jae
outs
cli
jmp
mov
retf
push
out
xchg
cld
ret
adc
push
cmp
cmp
scas
jmp
fild
loope
and
leave
ins
xchg
cmp
jmp
inc
jmp
mov
aam
add
test
(bad)
out
cmp
cmc
outs
sahf
fist
neg
sub
ja
mov
mov
push
addr16
cmp
(bad)
(bad)
in
mov
mov
jle
mov
sti
mov
push
je
pusha
add
cdq
aaa
jg
inc
mov
push
jg
fwait
stc
fs
call
fist
dec
popf
mov
icebp
mov
jle
fiadd
mov
jg
(bad)
push
retf
sub
mov
jmp
repz
jl
clc
(bad)
push
(bad)
mov
fcomp
pop
cs
mov
outs
pop
mov
pusha
xchg
cli
inc
(bad)
(bad)
(bad)
inc
aas
jge
loope
inc
jae
test
int
aaa
lods
fstp
fst
repnz
cmc
mov
imul
mov
out
es
cmp
push
fistp
loopne
xor
setp
jge
mov
(bad)
(bad)
(bad)
jg
inc
fisubr
scas
fisubr
aaa
and
fnstcw
and
in
sub
icebp
lods
repnz
scas
fcomip
(bad)
(bad)
fstp
jbe
fs
cdq
imul
(bad)
jbe
pop
(bad)
(bad)
(bad)
call
retw
test
pop
test
mov
js
sar
scas
fstp
std
out
xchg
(bad)
jmp
(bad)
xor
fstp
test
sbb
adc
xchg
sbb
(bad)
(bad)
(bad)
sti
lahf
mov
dec
ret
jge
jae
in
pop
xlat
in
and
(bad)
mov
push
lods
pop
jb
div
xor
xchg
and
ror
test
jg
icebp
call
sbb
jb
adc
aad
adc
(bad)
call
mov
dec
push
push
sbb
fld
jle
neg
fcomip
mov
sub
add
clc
stos
out
ja
jl
div
mov
pop
test
gs
idiv
(bad)
fcmovnbe
cmps
push
cmp
push
fcomp
mov
call
fsubrp
(bad)
(bad)
(bad)
call
fdivp
jo
cmps
arpl
mov
sub
clc
add
jnp
mov
mov
pusha
add
call
push
jle
popf
loop
or
std
mov
xchg
inc
fdiv
and
(bad)
(bad)
inc
out
shl
push
repz
test
xor
pusha
mov
std
lea
hlt
jo
nop
(bad)
(bad)
(bad)
push
(bad)
lock
cdq
loope
(bad)
xlat
mov
fadd
jns
jmp
sub
inc
mov
(bad)
(bad)
(bad)
call
mov
loop
sbb
mov
sub
cmp
out
rol
aaa
jmp
xchg
mov
repz
jb
(bad)
jmp
call
or
sub
and
stos
jp
add
jmp
sbb
outs
fsubr
add
or
xchg
stos
add
daa
lock
cwde
or
(bad)
call
jle
call
dec
and
add
push
add
jmp
mov
les
dec
cs
scas
mov
test
dec
(bad)
jg
call
ret
jmp
pop
cs
mov
mov
mov
sbb
jo
sbb
xchg
ins
arpl
and
push
jmp
imul
pop
cmp
out
fcom
mov
je
mov
iret
xchg
inc
or
in
bound
mov
xchg
fs
movs
test
sub
nop
jb
js
jo
clc
dec
loop
int3
cdq
jl
xor
push
sbb
(bad)
mov
popf
ja
sti
add
cmp
adc
popf
retf
push
mov
(bad)
(bad)
(bad)
jmp
jmp
inc
repz
popf
cdq
iret
in
imul
sahf
jbe
sub
lock
out
xchg
mov
clc
(bad)
dec
rol
mov
outs
out
jmp
sahf
hlt
(bad)
(bad)
call
fldlg2
shr
mov
je
adc
je
push
std
(bad)
(bad)
(bad)
fsubr
out
ficom
mov
jbe
popf
jno
fcom
sub
clc
inc
adc
in
(bad)
(bad)
push
adc
out
test
sub
ror
out
fs
les
dec
mov
(bad)
(bad)
(bad)
dec
fdiv
test
sbb
ror
retf
push
add
xor
sub
(bad)
(bad)
inc
xchg
fidiv
cmp
les
dec
das
call
push
arpl
mov
fadd
int3
cmps
cmp
call
mov
movs
xchg
cmp
imul
jb
dec
test
outs
(bad)
in
pop
loopne
jmp
sbb
jl
mov
test
clc
or
or
jp
mov
and
lahf
imul
jbe
aaa
jmp
dec
push
popa
aam
aad
aaa
xor
lea
call
mov
outs
data16
jmp
out
push
in
cmc
and
cld
sbb
iret
dec
mov
repnz
js
(bad)
(bad)
jmp
enter
pop
mov
in
imul
inc
inc
sbb
push
sub
mov
sbb
loope
(bad)
std
(bad)
cmp
(bad)
shl
push
out
test
dec
ja
sahf
jmp
ffree
ss
loopne
imul
add
das
jmp
(bad)
(bad)
(bad)
(bad)
out
sbb
sti
shl
fdivr
xor
fild
dec
push
test
push
jmp
xchg
mov
mov
jmp
call
mov
(bad)
(bad)
(bad)
(bad)
clc
cs
nop
and
mov
xor
xor
adc
test
dec
push
and
outs
mov
pop
cwde
test
nop
test
cld
cmp
(bad)
(bad)
dec
repz
xlat
stc
scas
inc
pop
ret
cmp
jb
dec
add
add
mov
lods
add
mov
dec
and
cld
xor
sbb
mov
(bad)
dec
bound
popa
pop
or
scas
xchg
cmp
loopne
(bad)
leave
sub
(bad)
(bad)
stc
jbe
xor
imul
adc
jno
dec
mov
lds
cmp
or
push
xor
sub
arpl
lock
loop
xor
in
mov
sub
js
hlt
fidivr
push
std
scas
push
repnz
mov
cdq
xor
ret
(bad)
call
jmp
les
(bad)
adc
faddp
dec
test
add
(bad)
(bad)
call
jle
xchg
push
xor
loopne
out
(bad)
aad
scas
pop
pop
imul
clc
loop
movs
aas
(bad)
call
dec
pusha
dec
rcl
push
pop
mov
push
ins
cmp
or
scas
clc
(bad)
(bad)
in
outs
mov
dec
js
jb
test
sub
mov
mov
xchg
lahf
mov
je
idiv
(bad)
pop
mov
lods
xchg
sbb
(bad)
(bad)
call
sti
cld
pop
mov
loopne
fnsave
ds
(bad)
adc
ficom
out
pxor
(bad)
(bad)
inc
push
retf
daa
mov
imul
scas
inc
sahf
cmp
xor
sbb
jne
jle
ins
icebp
xchg
jnp
in
cmp
mov
clc
shr
cli
ficomp
jns
jle
das
cmp
cli
(bad)
jmp
mov
pop
cmp
pop
ja
outs
js
push
shl
push
fdivr
stc
popa
push
dec
pcmpgtd
mov
pushf
pushf
cmps
loopne
jle
ret
scas
xor
xor
sbb
mov
dec
xchg
repnz
dec
pusha
popa
ret
imul
lahf
and
cmps
loope
jp
and
div
jae
xor
mov
(bad)
(bad)
inc
stos
fldz
shl
push
je
adc
mov
icebp
pushf
cs
sbb
cmp
cs
(bad)
fcomip
bnd
mov
gs
and
mov
jle
pop
nop
add
mov
mov
std
call
mov
sbb
dec
cmp
or
add
dec
add
(bad)
call
xchg
lods
add
inc
aam
mov
jns
ins
retf
les
xchg
inc
inc
mov
adc
dec
jmp
inc
hlt
repnz
outs
jle
test
adc
sbb
nop
(bad)
(bad)
(bad)
dec
adc
jbe
ds
test
into
mov
mov
pop
or
and
jmp
clc
(bad)
(bad)
test
mov
add
rol
or
(bad)
scas
ret
sar
add
popf
xor
repz
mov
(bad)
(bad)
mov
or
or
mov
pop
and
dec
(bad)
(bad)
(bad)
jmp
inc
jcxz
mov
cdq
jne
adc
or
push
adc
icebp
push
jns
adc
jo
add
push
sub
mov
dec
sbb
pop
fs
js
mov
push
mov
dec
popa
or
call
and
cmp
xor
mov
xchg
jl
mov
mov
fild
shl
cli
sar
sahf
pop
stc
fdivr
mov
mov
sbb
into
lock
xchg
push
dec
mov
(bad)
(bad)
std
add
pop
js
xchg
and
adc
push
cld
es
mov
dec
test
dec
ficomp
jnp
cmp
mov
(bad)
call
inc
or
add
or
nop
in
in
ins
aad
jge
ret
data16
(bad)
(bad)
mov
cmp
outs
test
mov
(bad)
ins
cmp
fucomp
inc
mov
ja
mov
test
fistp
ins
sub
(bad)
(bad)
(bad)
inc
jmp
js
mov
pushf
cmp
mov
mov
fistp
int
or
daa
(bad)
jmp
jp
dec
nop
or
xchg
and
(bad)
mov
imul
mov
adc
aad
inc
jae
nop
test
cmp
div
test
cmps
xor
cmp
xor
push
xchg
dec
push
push
icebp
cmp
scas
fidivr
pop
push
or
dec
enter
cmp
or
jmp
fdivr
imul
ds
pop
das
fbstp
mov
push
push
icebp
(bad)
(bad)
inc
inc
inc
jno
leave
loope
xchg
inc
shl
mov
jmp
repz
dec
mov
in
cmp
cdq
mov
jle
inc
mov
call
mov
ror
and
(bad)
(bad)
(bad)
call
inc
scas
out
loopne
lock
jnp
fldenv
mov
pop
push
mov
aas
shl
sub
fcom
inc
adc
xor
push
pop
push
lahf
jo
push
cmp
daa
jmp
mov
sub
(bad)
(bad)
(bad)
call
sub
inc
ficomp
push
sbb
jno
jecxz
loopne
adc
mov
in
stc
or
sub
push
inc
(bad)
(bad)
call
enter
cmp
mov
or
xchg
mov
mov
push
and
ja
(bad)
mov
push
loop
or
ins
fld
inc
adc
push
mov
xchg
pop
mov
in
inc
dec
mov
cmp
shr
cmp
aad
push
jmp
xchg
or
jecxz
mov
cs
(bad)
pop
xchg
and
or
sub
mov
add
aaa
cld
stos
jne
push
ret
movs
or
jp
push
mov
icebp
pop
xor
xlat
imul
arpl
cmp
cmp
pop
inc
jle
mov
(bad)
(bad)
push
mov
xchg
mov
out
push
pop
pop
test
hlt
xchg
(bad)
arpl
sti
jp
je
(bad)
(bad)
jmp
mov
jns
sbb
leave
bound
dec
arpl
enter
daa
pop
outs
mov
cmp
push
mov
jg
and
adc
push
std
shl
push
rol
pusha
cwde
mov
dec
cwde
sbb
cdq
push
inc
(bad)
(bad)
(bad)
jmp
in
jno
sub
aad
jge
inc
sahf
xchg
sbb
mov
adc
or
and
(bad)
(bad)
jmp
mov
adc
lock
dec
pop
enter
jl
ror
add
mov
jmp
fwait
pusha
add
sahf
pusha
fsubr
xchg
mov
inc
xchg
int3
sbb
jnp
stc
dec
jmp
xchg
add
pop
in
pop
pop
add
dec
hlt
cmps
pop
mov
xchg
(bad)
push
scas
neg
sti
mov
dec
inc
add
retf
sar
add
jge
jns
xor
scas
pop
cmp
stos
mov
dec
mov
(bad)
(bad)
(bad)
jg
retf
mov
outs
fidivr
aaa
cmp
in
mov
popf
inc
shr
xchg
mov
mov
int3
lods
cmp
jns
(bad)
(bad)
(bad)
jmp
cmps
mov
retf
xchg
out
int
push
push
gs
fld
into
xchg
and
(bad)
in
out
(bad)
stc
add
jnp
test
fidiv
jge
movs
shr
pop
cmp
and
mov
pop
pop
ret
mov
pop
push
scas
cmp
(bad)
push
sahf
mov
push
push
retf
adc
(bad)
cmovge
jbe
mov
dec
cld
(bad)
call
mov
mov
xor
push
mov
mov
(bad)
(bad)
call
and
iret
cmp
fmul
das
or
dec
retf
call
xchg
pop
xchg
inc
daa
sbb
mov
imul
fucomi
mov
mov
mov
shl
push
fwait
xchg
retf
jno
and
jne
jbe
retf
or
jmp
int
add
sub
mov
test
mov
inc
or
ja
aaa
fwait
mov
xchg
fnop
xchg
or
push
clc
xchg
sub
mov
push
cld
aaa
inc
adc
cmp
fnstenv
nop
cmp
adc
cmp
(bad)
(bad)
jmp
mov
aam
adc
in
inc
out
add
push
pop
(bad)
bound
push
or
push
sub
(bad)
(bad)
jmp
loope
xchg
xlat
aam
cmps
out
lds
test
outs
cmp
inc
jp
lock
(bad)
(bad)
jg
sahf
ds
add
das
adc
stc
mov
inc
jb
clc
mov
jl
ret
or
xor
inc
mov
in
sub
xchg
pusha
leave
jae
int
cmp
add
ret
(bad)
(bad)
jmp
dec
dec
es
add
call
xor
sar
(bad)
(bad)
jg
sub
dec
xchg
lock
inc
and
inc
sub
jno
add
add
push
inc
sub
fiadd
int3
int
das
mov
cwde
and
push
sub
inc
fbld
aas
mov
adc
inc
(bad)
(bad)
(bad)
call
push
inc
or
or
fstp
retf
loopne
adc
sub
dec
jp
jbe
and
std
add
out
in
add
inc
(bad)
shl
sbb
mov
ds
mov
sar
out
cdq
cmp
leave
dec
push
data16
(bad)
(bad)
jmp
je
xchg
cmp
dec
test
pop
sub
dec
xor
cli
push
ins
adc
movs
mov
call
cmps
push
mov
sbb
es
xchg
and
les
inc
js
sti
aam
xchg
ror
add
cdq
cmps
dec
cli
ins
test
sbb
add
sub
sti
(bad)
(bad)
(bad)
(bad)
fimul
in
inc
sbb
jmp
hlt
xchg
std
inc
inc
pop
pop
dec
add
cmps
out
inc
inc
sub
ins
add
movs
jmp
fistp
in
sub
push
cmp
pop
ins
cli
sbb
pop
and
popa
enter
(bad)
(bad)
(bad)
call
pop
pop
pop
pop
outs
mov
(bad)
fld
mov
je
mov
imul
adc
push
(bad)
jmp
iret
les
push
push
or
add
jno
push
pusha
sub
and
cmp
lock
mov
sbb
(bad)
out
lds
push
pop
xlat
(bad)
cs
les
mov
jne
xchg
js
stos
mov
(bad)
mov
enter
mov
(bad)
hlt
jns
(bad)
mov
rcl
(bad)
mov
pop
jno
scas
sub
sub
cmp
and
(bad)
push
sub
cmp
dec
mov
dec
or
push
clc
inc
call
leave
sbb
pmaddwd
xchg
(bad)
(bad)
mov
es
xor
xor
ret
inc
xor
mov
test
push
dec
imul
test
sub
lods
(bad)
dec
movs
dec
xchg
ins
jecxz
(bad)
jne
sbb
sbb
jbe
mov
or
nop
cli
add
sub
adc
pop
das
mov
les
ins
pop
mov
xchg
pushf
xor
(bad)
call
mov
mov
mov
and
pop
pushf
movs
test
lds
scas
bndstx
adc
popa
xchg
adc
xchg
call
(bad)
call
pop
ror
xlat
or
stc
clc
lods
neg
ja
pop
repnz
adc
stos
sbb
jg
add
xor
cmp
mov
or
test
lods
into
int
and
mov
jg
mov
dec
clc
adc
test
push
cs
xchg
pop
push
sbb
push
and
mov
mov
cmp
psllw
lds
dec
sub
inc
dec
and
dec
xor
in
popf
add
jmp
cmp
js
inc
dec
js
xchg
add
push
xor
dec
dec
xchg
adc
cmps
test
gs
popw
and
call
fldcw
in
cmps
xor
mov
xor
jg
xor
stos
mov
push
mov
repz
iret
inc
xor
shl
add
imul
(bad)
call
and
mov
cmp
xchg
dec
and
adc
call
lock
(bad)
inc
jno
inc
add
repz
add
xor
jb
mov
scas
xor
cmc
sbb
mov
(bad)
out
in
mov
mov
or
and
hlt
mov
ins
add
pop
(bad)
jmp
mov
gs
test
inc
mov
xchg
lods
dec
ss
mov
sbb
scas
or
mov
(bad)
jmp
ds
adc
js
ss
call
std
mov
and
rcl
cmc
jmp
mov
loopne
jge
scas
(bad)
jmp
je
out
xchg
and
mov
pushf
iret
scas
sbb
dec
test
sub
shl
cmc
jge
mov
imul
add
sar
call
js
adc
push
push
mov
mov
aad
(bad)
(bad)
(bad)
call
retf
push
loop
jle
call
movs
mov
pop
push
and
ror
fs
(bad)
(bad)
push
xor
shl
out
mov
sar
sbb
int
scas
pop
mov
jb
jns
mov
movs
(bad)
(bad)
(bad)
call
in
call
out
mov
push
jno
int
jmp
sub
mov
mov
mov
loopne
adc
daa
data16
inc
gs
ins
gs
aam
sti
clc
inc
(bad)
jmp
nop
shl
or
adc
sbb
jno
mov
(bad)
(bad)
(bad)
call
lods
pop
mov
(bad)
push
test
cmp
loopne
shl
daa
inc
mov
js
setl
test
add
idiv
sub
ins
sbb
push
outs
fwait
add
dec
mov
int
and
cmp
pop
ss
push
sub
cmp
pop
loopne
(bad)
js
retf
and
sub
pushf
add
cld
sbb
(bad)
(bad)
push
aam
mov
mov
test
dec
fcom
xor
ret
pcmpgtb
adc
pop
sub
sbb
pop
test
mov
jg
or
cmps
(bad)
push
hlt
jb
push
add
dec
lods
fidiv
push
lock
jmp
push
fld
jno
ds
imul
leave
jae
(bad)
jmp
cs
aas
aad
bound
adc
xor
lock
call
sub
inc
rcr
xor
(bad)
jmp
push
inc
jbe
stos
(bad)
mov
call
inc
and
(bad)
rol
shr
mov
(bad)
(bad)
(bad)
jge
pop
test
push
cmps
ss
shl
and
icebp
nop
sbb
daa
pop
(bad)
(bad)
call
mov
std
sub
or
dec
mov
cli
sub
inc
sub
movs
js
jmp
cli
mov
dec
scas
sub
test
stos
xchg
sub
(bad)
js
movs
jmp
adc
outs
je
pop
inc
(bad)
(bad)
popf
xchg
cmp
push
test
(bad)
dec
jno
sbb
shl
add
push
stc
xor
imul
imul
es
lods
and
mov
mov
dec
ret
add
(bad)
fiadd
adc
mov
ret
(bad)
(bad)
jg
aas
jnp
cmp
mov
sti
ds
xchg
add
push
sbb
call
xchg
pop
shl
fdivr
cdq
jl
xchg
mov
int3
lock
mov
lods
pop
pop
jge
inc
call
mov
jmp
cmp
in
(bad)
cmp
mov
xchg
js
pop
or
shl
rol
or
and
call
add
js
idiv
dec
mov
std
jmp
mov
push
adc
ins
call
pop
(bad)
(bad)
(bad)
inc
shl
inc
pop
jnp
lds
iret
sahf
mov
mov
ja
mov
inc
mov
dec
(bad)
mov
cli
jnp
pushf
dec
dec
xor
hlt
and
ror
push
push
cmp
(bad)
dec
pop
jbe
dec
enter
xchg
sbb
adc
gs
les
(bad)
or
sub
call
push
dec
sti
enter
mov
adc
add
push
sub
(bad)
mov
adc
pusha
inc
movs
cli
add
popf
mov
mov
jb
pop
in
sbb
test
fs
mov
call
dec
out
popa
add
mov
ret
sbb
pop
(bad)
(bad)
jg
pop
xor
lahf
dec
icebp
pop
(bad)
push
in
push
stos
or
jp
(bad)
(bad)
(bad)
call
and
ret
inc
mov
aad
cmp
inc
xor
add
mov
pop
cmp
imul
xchg
in
fxch
pop
lahf
fwait
xchg
int
pushf
pop
cmp
(bad)
(bad)
dec
or
out
les
out
cmp
push
jl
in
xchg
push
mov
jmp
dec
mov
lods
push
mov
retf
(bad)
repnz
(bad)
mov
pop
adc
push
inc
xchg
aam
pop
clc
ds
clc
(bad)
call
push
stos
push
(bad)
push
iret
sub
and
xor
outs
bound
sub
repnz
(bad)
(bad)
jmp
dec
adc
and
dec
sub
push
daa
mov
ret
add
rol
cmp
(bad)
call
push
xchg
add
out
adc
xchg
bound
xlat
adc
ror
add
inc
(bad)
shl
dec
xchg
(bad)
(bad)
(bad)
jmp
or
leave
or
gs
xor
sahf
and
rol
cdq
(bad)
(bad)
(bad)
jmp
icebp
outs
pop
iret
xchg
lahf
sbb
mov
icebp
rcr
sub
lods
cs
lea
out
sbb
(bad)
(bad)
cmp
push
jg
(bad)
cmp
xor
mov
test
js
dec
inc
outs
add
(bad)
js
or
sbb
lock
stos
cmc
mov
adc
pop
mov
(bad)
jg
sub
(bad)
sub
jno
arpl
lock
enter
loop
frstor
std
jmp
dec
stc
push
iret
push
inc
rcl
mov
or
iret
and
iret
aaa
sbb
ja
mov
bound
pop
adc
add
(bad)
and
cmp
test
sub
dec
loopne
(bad)
(bad)
(bad)
push
sar
fs
icebp
dec
sub
inc
cwde
sub
inc
jae
xchg
push
mov
(bad)
push
fcom
iret
jbe
mov
enter
or
out
sar
xchg
jecxz
sti
loopne
sub
fcom
xchg
push
sbb
ds
test
shl
xchg
jge
dec
fld
in
fstp
cmp
(bad)
(bad)
(bad)
(bad)
jnp
shl
out
inc
cmp
jecxz
out
mov
cdq
fwait
(bad)
ja
or
test
(bad)
(bad)
(bad)
jns
fcomp
adc
je
xor
jns
pop
das
sub
int3
jae
xor
ins
pop
jmp
fst
(bad)
xor
push
fstp
dec
data16
sti
jmp
mov
xchg
inc
movs
inc
ret
ja
fwait
enter
test
sub
loopne
(bad)
mov
imul
cmc
pop
iret
push
cdq
sub
call
sbb
and
sub
push
aaa
pop
pop
imul
test
cwde
xchg
lock
ss
jo
movs
jbe
push
jmp
ret
pushf
push
sbb
mov
je
mov
xchg
mov
push
and
sar
lods
add
cmp
inc
add
cmp
xor
dec
int
(bad)
scas
fwait
(bad)
(bad)
(bad)
call
mov
jo
(bad)
daa
add
in
xor
js
in
or
(bad)
retf
rcr
(bad)
inc
ret
sbb
add
push
add
mov
mov
dec
mov
call
(bad)
icebp
and
add
cmp
test
stos
enter
jmp
pushf
ds
retf
add
ins
xor
stos
jecxz
cmps
sbb
adc
ss
or
add
and
cdq
bound
inc
push
push
jmp
call
(bad)
(bad)
xchg
in
xchg
xor
icebp
mov
test
(bad)
(bad)
dec
les
lea
sbb
jns
loope
push
jl
(bad)
cdq
les
test
nop
sub
push
std
dec
push
mov
cli
mov
push
mov
stos
(bad)
push
adc
daa
xor
and
cmp
or
shl
cmp
jne
xor
adc
(bad)
(bad)
(bad)
inc
add
mov
mov
es
jp
imul
ins
jb
outs
jne
sbb
popa
add
ret
cmp
test
(bad)
inc
mov
add
idiv
jae
dec
push
js
rol
call
lahf
pop
mov
adc
mov
xor
sti
mov
jp
sahf
inc
clc
(bad)
jg
dec
xor
sub
pop
mov
mov
xor
jmp
dec
imul
lods
stos
daa
mov
sbb
jmp
movs
mov
out
cli
mov
out
cmp
mov
sub
data16
fwait
test
inc
mov
rol
or
ins
mov
cs
mov
(bad)
(bad)
inc
xchg
dec
sar
pop
jb
mov
mov
int
aad
adc
inc
lea
add
mov
js
movs
jne
(bad)
(bad)
(bad)
mov
lds
call
jle
dec
add
inc
int
jbe
lock
mov
(bad)
(bad)
dec
enter
std
and
ds
xchg
pop
inc
fidiv
data16
jnp
push
stos
push
xchg
xchg
jge
shl
fimul
sbb
jae
mul
(bad)
out
mov
int3
jne
and
jne
pop
jl
add
mov
sbb
repnz
mov
jmp
dec
jbe
push
lea
fucomp
adc
(bad)
dec
cmp
mov
push
sub
or
ds
test
and
(bad)
(bad)
(bad)
dec
xchg
les
mov
push
lods
and
or
jl
xor
jge
xchg
pop
dec
mov
iret
not
dec
fsub
xor
push
(bad)
push
(bad)
xchg
enter
(bad)
out
shr
pop
adc
push
test
or
sbb
nop
icebp
aad
imul
loop
stc
xor
cli
dec
daa
and
lock
fcmovnb
and
mov
ja
in
sbb
loopne
push
xor
(bad)
(bad)
in
lea
and
bound
adc
out
ja
and
jg
std
call
mov
call
mov
cmps
iret
jo
and
push
or
sub
pop
in
inc
pusha
xor
mov
and
push
js
retf
pop
inc
xchg
jmp
or
xchg
push
call
xchg
enter
pop
(bad)
(bad)
jmp
je
fimul
popa
(bad)
sbb
jne
loop
pop
xor
in
push
push
out
and
(bad)
(bad)
inc
mov
bound
loope
mov
add
ret
in
ficomp
(bad)
or
sbb
and
inc
retf
jmp
test
js
dec
adc
ins
outs
neg
in
loope
imul
cld
jmp
add
and
push
clc
pop
sti
pop
(bad)
(bad)
(bad)
(bad)
mov
imul
daa
sbb
dec
mov
enter
add
xchg
rol
inc
outs
clc
sbb
repnz
shr
or
inc
cmp
push
inc
retf
into
adc
push
xor
shl
pop
mov
pop
sbb
push
dec
jl
cmp
das
dec
adc
js
rcr
scas
test
ins
adc
push
cld
and
and
shl
push
test
cmovo
and
inc
inc
imul
loope
int3
cwde
cmps
mov
sahf
push
sbb
fwait
cld
push
cld
fcomip
int
fisub
(bad)
xor
mov
mov
xchg
(bad)
dec
inc
hlt
outs
nop
aad
sub
or
rcl
cld
hlt
cmp
(bad)
(bad)
aas
cld
dec
cmps
or
jp
repz
mov
jne
mov
mov
addr16
(bad)
(bad)
dec
fistp
mov
mov
adc
push
xchg
movs
xchg
xchg
idiv
(bad)
(bad)
push
setns
out
idiv
jns
lahf
pop
mov
in
pop
cmp
xlat
scas
sar
scas
fstp
sar
jecxz
cmp
notrack
fdivp
loopne
pop
cld
repnz
push
mov
push
scas
ds
pop
xchg
sub
dec
fdiv
fcom
cdq
movs
jmp
sub
mov
jb
pop
ss
jb
pop
push
pop
mov
(bad)
jmp
xchg
lods
jp
cmps
pop
fistp
cdq
mov
mov
cdq
scas
jne
(bad)
cmp
(bad)
mov
lea
adc
mov
nop
stc
in
sub
(bad)
(bad)
(bad)
call
cmp
push
sub
push
pushf
js
cmps
mov
imul
movs
sub
int3
(bad)
(bad)
(bad)
jmp
sahf
out
xchg
lea
or
fistp
ret
mov
out
mov
mov
out
inc
test
cli
sbb
loopne
(bad)
jmp
jecxz
lahf
retf
dec
jl
add
xchg
xchg
fadd
ret
mov
jnp
pop
inc
rol
mov
inc
inc
add
and
nop
xchg
inc
das
or
clc
(bad)
jmp
cli
mov
ins
mov
dec
adc
xchg
xlat
jae
sar
(bad)
out
(bad)
jle
pop
scas
push
aaa
int3
call
jno
add
xchg
push
add
xchg
lahf
stc
(bad)
cmp
(bad)
call
xchg
fs
inc
sub
into
and
daa
cmps
test
mov
fsub
(bad)
(bad)
stc
sub
cmc
push
ins
xor
mov
sub
pop
stos
aas
dec
cmps
test
lds
or
inc
add
xchg
xchg
arpl
addr16
rcr
cmps
mov
xchg
pop
jae
repnz
mov
sub
xchg
sar
inc
mov
sbb
retf
mov
(bad)
(bad)
jmp
xlat
popf
mov
inc
retf
add
sub
and
inc
sub
inc
(bad)
jmp
cmp
ret
push
scas
or
fs
adc
fsincos
(bad)
(bad)
call
and
push
add
aam
imul
sbb
aad
shr
dec
xor
je
lock
jg
inc
fwait
mov
out
das
cmp
cmc
out
fild
push
ins
jp
(bad)
jmp
cmp
cmp
add
mov
(bad)
cmp
in
inc
push
(bad)
cli
xchg
inc
or
stc
clc
outs
std
pop
repz
cmp
sar
adc
mov
les
xor
in
xchg
div
(bad)
push
cdq
(bad)
xor
mov
(bad)
int
rcr
cs
mov
pop
mov
add
mov
xchg
mov
mov
daa
or
(bad)
(bad)
push
adc
pop
pop
pop
popf
cmp
mov
dec
push
push
sub
hlt
xchg
push
sbb
pop
popa
inc
add
(bad)
(bad)
cmp
repz
cmp
movs
and
mov
nop
shl
jmp
mov
loopne
inc
test
pop
das
shr
push
xchg
mov
call
int
shl
or
scas
jmp
xchg
arpl
inc
cmp
dec
imul
adc
mov
(bad)
dec
or
ins
cmp
icebp
mov
inc
mov
loope
add
pop
mov
sub
(bad)
(bad)
sti
mov
daa
out
push
cmp
stos
in
adc
lods
lods
outs
xor
ins
sar
add
lahf
std
(bad)
(bad)
jmp
push
aas
inc
mov
adc
dec
xchg
and
mov
xchg
sub
and
mov
loopne
fcmovbe
mov
or
add
shl
adc
(bad)
call
adc
jno
adc
adc
xchg
adc
jl
retf
(bad)
mov
pop
dec
cmp
or
shr
adc
and
adc
ss
cld
(bad)
(bad)
jmp
cmp
dec
mov
jae
push
add
jno
sub
cmp
(bad)
std
(bad)
(bad)
push
pusha
sbb
xor
cwde
add
repz
dec
adc
pop
fldcw
(bad)
(bad)
call
or
dec
iret
pop
mov
pop
push
sbb
jns
cdq
mov
leave
std
dec
stos
xor
(bad)
cmp
sbb
mov
pusha
mov
jmp
inc
(bad)
clc
bnd
cld
stc
imul
jno
loopne
shl
(bad)
(bad)
inc
inc
scas
ins
fistp
dec
out
test
stos
jb
gs
imul
nop
dec
xor
pop
push
(bad)
(bad)
(bad)
jmp
pop
cmp
lods
loope
and
(bad)
mul
mov
xchg
jmp
jecxz
arpl
mov
(bad)
xlat
jg
into
jecxz
loopne
in
jb
cmps
xchg
mov
daa
es
(bad)
call
xchg
and
mov
imul
(bad)
(bad)
push
test
daa
arpl
bound
(bad)
je
sbb
repz
sub
daa
popf
sbb
clc
mov
ins
dec
dec
or
ret
stos
das
mov
pop
adc
(bad)
mov
jecxz
lahf
xor
add
push
cmp
sub
push
test
and
or
cmp
jae
dec
mov
sti
push
xchg
xor
adc
(bad)
(bad)
(bad)
jmp
ret
inc
sub
or
fcmove
icebp
loop
(bad)
mov
in
retf
stos
push
sub
sahf
mov
inc
stc
cdq
daa
iret
push
in
das
(bad)
out
lahf
jg
mov
adc
into
jbe
sbb
scas
call
mov
out
inc
aaa
push
retf
mov
test
add
test
add
adc
fdivr
jp
stc
(bad)
(bad)
(bad)
push
pop
pop
(bad)
and
mov
ss
dec
data16
pop
xor
icebp
mov
jecxz
jecxz
in
movs
test
sub
jmp
or
enter
aaa
out
pop
outs
mov
xor
mov
clc
jl
out
aas
mov
pusha
mov
mov
imul
push
push
(bad)
inc
repnz
cmp
mov
std
lock
mov
mov
loopne
sti
(bad)
mov
(bad)
(bad)
(bad)
jmp
fdivr
ret
xlat
stos
ins
outs
and
xchg
push
in
(bad)
scas
push
cmp
cmp
lods
mov
lds
(bad)
(bad)
(bad)
(bad)
inc
popf
clc
icebp
test
push
push
xor
jns
(bad)
arpl
cmp
or
jmp
jae
loop
mov
xor
or
in
jbe
int3
lods
stos
(bad)
(bad)
push
popf
stos
xor
cmp
mov
je
and
dec
cmp
or
(bad)
(bad)
call
ret
cmp
mov
and
or
repz
bound
inc
push
xor
sbb
(bad)
(bad)
(bad)
jmp
xor
cld
and
xor
dec
push
nop
mov
addr16
rcl
ret
mov
inc
sub
test
nop
repnz
scas
xlat
jb
(bad)
pop
and
(bad)
(bad)
call
inc
ins
sahf
bswap
jecxz
adc
push
xchg
jg
mov
fcomp
repnz
aas
cs
mov
(bad)
(bad)
(bad)
(bad)
dec
stos
aam
adc
and
dec
pop
test
and
mov
and
cld
(bad)
(bad)
dec
add
and
inc
(bad)
test
cmp
adc
outs
(bad)
jmp
jo
call
call
mov
adc
jecxz
fs
adc
(bad)
(bad)
dec
add
adc
and
mov
add
mov
iret
out
add
(bad)
mov
ret
mov
call
inc
ret
dec
clc
push
and
ficom
(bad)
into
js
push
sub
mov
inc
xor
dec
or
mov
dec
push
mov
les
push
stc
adc
xor
lds
xchg
ror
call
adc
mov
mov
pop
cmp
pop
xchg
add
(bad)
cmp
(bad)
call
and
xchg
mov
push
push
jmp
test
lea
push
jne
push
lahf
(bad)
(bad)
(bad)
(bad)
call
shl
scas
sbb
mov
aam
out
(bad)
lock
jo
or
pop
mov
gs
mov
dec
pop
std
xchg
(bad)
mov
pop
add
xor
mov
pop
pop
pop
ds
mov
dec
and
(bad)
(bad)
(bad)
inc
cmp
rol
mov
aam
mov
imul
out
fnstenv
adc
call
and
stos
mov
fcmovu
sbb
mov
fbstp
das
and
xlat
add
xchg
pushf
adc
(bad)
mov
push
fisttp
mov
scas
mov
retf
sub
jns
inc
clc
(bad)
jmp
or
dec
and
push
mov
(bad)
(bad)
mov
dec
jl
or
pop
add
adc
mov
xchg
arpl
(bad)
(bad)
dec
dec
push
mov
repnz
mov
out
paddd
cmp
retf
(bad)
dec
scas
pop
popf
pop
scas
out
stc
bound
fidiv
inc
rcr
cmp
and
mov
(bad)
(bad)
call
push
aaa
mov
mov
popa
pop
scas
daa
adc
mov
add
mov
test
imul
inc
and
adc
(bad)
(bad)
mov
ins
lock
outs
adc
mov
fsub
sbb
stc
(bad)
jmp
xor
mov
fsubp
sbb
es
js
dec
cmp
jg
call
and
int
push
mov
test
mov
(bad)
jmp
imul
pop
(bad)
into
jne
add
(bad)
sar
push
out
mov
mov
add
call
(bad)
cli
repnz
jmp
adc
pushf
xlat
stc
mov
cmc
inc
loopne
test
mov
mov
cmp
(bad)
call
(bad)
(bad)
call
hlt
sub
cmp
xchg
cmp
es
dec
call
sahf
push
jl
jl
call
dec
pop
push
xor
jno
lods
sahf
(bad)
jmp
xor
sbb
in
mov
xchg
inc
mov
jne
ja
jne
(bad)
(bad)
(bad)
dec
shr
call
fs
lods
repnz
inc
popa
jb
stos
mov
in
jg
ss
add
hlt
dec
out
loopne
and
cmp
push
dec
jo
call
(bad)
(bad)
push
in
retf
cmp
and
lahf
sti
fs
rcr
and
xor
mov
xchg
and
stos
dec
inc
jl
scas
pshufw
loope
dec
popa
cmp
loopne
mov
xor
push
jecxz
jmp
dec
lahf
sbb
jb
push
icebp
repnz
aas
clc
in
push
mov
(bad)
(bad)
jmp
dec
cli
rcr
std
icebp
cmp
out
cld
mov
fbstp
lahf
jns
jns
dec
(bad)
(bad)
dec
and
inc
stos
imul
jae
jg
fnstenv
push
lock
push
xchg
mov
mov
enter
(bad)
(bad)
(bad)
dec
jg
stc
test
or
mov
stc
dec
mov
xchg
mov
idiv
jecxz
rcl
mov
addr16
pop
cmp
loop
(bad)
push
jle
neg
rol
jae
mov
(bad)
(bad)
(bad)
push
loop
fsubr
sti
mul
loop
outs
mov
mov
sub
std
call
xor
add
imul
mov
fst
fidivr
fmul
(bad)
(bad)
(bad)
(bad)
mov
clc
sar
sub
(bad)
mov
mov
fwait
mov
pop
fdiv
popf
(bad)
(bad)
(bad)
(bad)
aas
fnsave
sar
enter
pop
dec
movs
sub
push
xor
adc
add
loop
(bad)
(bad)
jmp
pop
les
or
icebp
mov
mov
outs
add
das
movs
scas
pop
stos
ins
iret
out
test
push
pop
enter
jmp
cmp
dec
stos
push
(bad)
(bad)
inc
inc
xlat
pop
xor
into
lods
xor
fisubr
or
int3
shl
inc
loop
mov
(bad)
push
ror
(bad)
jle
js
adc
inc
sbb
push
adc
mov
mov
mov
(bad)
(bad)
jmp
leave
mov
add
les
xchg
shl
push
dec
jp
ret
shl
dec
push
jle
add
add
cmp
fdivr
(bad)
inc
mov
jecxz
add
sbb
inc
pop
(bad)
(bad)
(bad)
jmp
cmp
imul
fwait
adc
inc
xchg
test
lock
mov
bound
(bad)
aad
js
pop
add
push
(bad)
(bad)
dec
hlt
or
ror
cmc
push
lods
fsubrp
je
call
enter
(bad)
clc
enter
jmp
sbb
int3
and
and
mov
dec
inc
clc
mov
mov
or
or
lahf
and
outs
dec
pop
push
xlat
test
mov
jno
pop
(bad)
(bad)
fstp
outs
xchg
aam
les
or
mov
sub
add
adc
je
clc
rol
lahf
mov
(bad)
leave
fidivr
fisub
(bad)
test
xchg
out
mov
je
fcomp
movs
push
cmc
mov
adc
ror
pop
inc
cli
and
(bad)
(bad)
out
sub
jnp
lods
out
xor
outs
mov
sti
leave
pop
add
adc
jmp
add
popa
scas
fnstenv
cdq
xchg
pop
jecxz
xor
jmp
jp
in
aaa
xor
test
mov
pop
sbb
stc
cli
outs
or
stc
jl
push
in
add
xchg
mov
jmp
int3
add
xchg
sub
outs
lods
push
xchg
push
push
mov
dec
sbb
fwait
(bad)
call
loop
shrd
shl
icebp
xor
sub
ja
idiv
(bad)
dec
enter
mov
xor
dec
mov
mov
fcomip
and
cs
(bad)
call
mov
leave
sbb
mov
mov
mov
inc
push
addr16
(bad)
dec
pop
and
pop
js
inc
or
add
mov
call
pop
and
mov
jmp
int3
imul
std
sbb
icebp
mov
dec
sbb
add
xor
add
cvtdq2ps
jo
dec
xchg
pop
jle
mov
mov
mov
(bad)
(bad)
(bad)
fucomip
add
jbe
adc
sti
sub
inc
add
xchg
arpl
push
mov
(bad)
(bad)
(bad)
(bad)
call
pop
pop
xchg
and
jecxz
inc
jecxz
and
ss
mov
inc
and
mov
mov
mov
cld
sahf
or
fs
(bad)
(bad)
(bad)
jmp
xchg
xchg
cmc
fcom
push
push
ja
xchg
bound
popa
(bad)
icebp
leave
mov
sbb
call
cld
lea
inc
bound
ror
push
test
push
outs
inc
pop
push
jge
pop
sub
sbb
mov
mov
jl
cmp
xlat
push
cmp
dec
lea
scas
mov
sub
adc
add
jmp
xchg
add
scas
nop
iret
sbb
adc
fsubrp
sbb
xor
cmp
add
push
adc
xchg
or
and
cld
(bad)
call
movs
aad
or
pusha
dec
ja
fdiv
jae
dec
sar
(bad)
(bad)
push
pop
shr
or
or
push
fisub
xchg
mov
ror
pop
and
loopne
das
mov
inc
shr
mov
or
dec
retf
les
mov
fcos
(bad)
(bad)
(bad)
js
stos
stos
push
popf
jmp
xchg
push
pop
jnp
test
lods
inc
adc
add
inc
add
push
in
cld
outs
(bad)
(bad)
jmp
neg
mov
mov
lahf
push
ja
int
ret
es
(bad)
jg
imul
push
bound
jae
(bad)
fbstp
mov
jecxz
inc
adc
das
outs
jno
cli
jmp
inc
or
jg
push
(bad)
(bad)
(bad)
inc
mov
outs
pop
sbb
jbe
(bad)
repnz
out
(bad)
jno
dec
(bad)
out
sbb
jg
mov
int3
jae
in
cmc
xchg
cmp
test
lock
dec
fbstp
(bad)
(bad)
(bad)
(bad)
ds
test
ret
sar
js
repnz
stos
mov
in
pop
cmp
fwait
mov
mov
ficom
in
fstp
mov
in
(bad)
(bad)
call
icebp
inc
outs
mov
xor
mov
jecxz
mov
test
xor
(bad)
push
cmp
jmp
mov
sub
aam
loopne
in
mov
out
cmc
das
lahf
cmp
jns
inc
push
dec
jl
scas
sub
add
jp
fwait
das
push
jmp
xchg
jns
leave
ret
inc
scas
pop
jp
js
ret
mov
jns
push
(bad)
(bad)
push
jne
push
mov
dec
xchg
push
sub
cmp
pop
pop
(bad)
call
or
adc
clc
pusha
scas
xlat
pop
push
adc
or
cmps
out
lods
(bad)
(bad)
jmp
call
or
test
shl
idiv
(bad)
(bad)
call
xor
gs
ret
adc
imul
pushf
and
sub
pop
icebp
push
cld
cmp
call
mov
add
nop
and
jne
(bad)
(bad)
(bad)
cmp
push
sub
inc
fld
inc
dec
sbb
or
fld
shl
idiv
mov
out
xor
pop
adc
push
mov
cs
jae
ror
or
loope
inc
mov
inc
fimul
data16
scas
inc
xchg
shl
imul
aad
push
ins
dec
push
bound
bound
hlt
imul
push
sub
(bad)
(bad)
inc
mov
shr
or
inc
and
lds
mov
adc
outs
(bad)
(bad)
call
std
inc
movs
mov
lds
outs
xchg
fnstenv
dec
push
les
adc
jg
test
adc
(bad)
mov
adc
loopne
adc
sahf
xlat
xor
sub
sbb
push
cwde
sahf
cmp
pusha
or
add
(bad)
inc
popa
dec
push
or
sub
xchg
retw
enter
pop
jae
fidiv
das
mov
pop
add
ds
lock
sub
mov
mov
cmp
call
mov
sbb
push
sar
retf
adc
dec
call
not
sbb
inc
call
(bad)
inc
dec
stc
and
enter
and
push
jnp
jle
mov
lods
(bad)
cmc
and
or
fild
mov
mov
mov
add
and
aaa
ins
rcr
out
retf
jle
dec
popa
jmp
add
in
in
pop
icebp
(bad)
dec
cmp
xor
test
out
mov
mov
pop
mov
mov
stos
xor
sbb
fisubr
js
ror
mov
fs
out
adc
movs
inc
ret
cmp
fisttp
sub
fnop
adc
mov
pop
cmps
out
inc
movs
jmp
(bad)
je
add
inc
test
adc
leave
adc
cwde
sub
jo
lock
(bad)
jmp
cdq
out
aam
nop
or
pop
(bad)
icebp
pop
pop
(bad)
(bad)
and
jg
popf
sub
mov
scas
popf
dec
adc
push
ins
push
mov
sar
(bad)
jmp
jns
sti
pop
push
mov
sub
enter
jne
fild
inc
xor
mov
jns
cmc
jecxz
stos
add
sub
ins
(bad)
call
stos
dec
add
and
mov
call
lea
ds
dec
push
jl
mov
call
and
mov
nop
mov
(bad)
jmp
add
xor
nop
scas
or
ins
rcl
cmp
cmp
(bad)
(bad)
(bad)
mov
repz
push
or
pop
xchg
mov
jne
out
inc
retf
sbb
(bad)
inc
outs
sbb
jge
out
repnz
clc
jp
xor
stc
iret
fdiv
lods
mov
xchg
imul
cmp
mov
xor
iret
add
jecxz
sub
das
scas
das
scas
push
inc
lods
jmp
jmp
imul
clc
inc
dec
(bad)
push
jnp
and
dec
sub
jo
into
jmp
push
aad
push
dec
test
call
lods
inc
(bad)
cmp
clc
and
dec
xor
movs
cmp
(bad)
(bad)
call
stos
test
mov
mov
sub
pop
sbb
lahf
pop
cmp
cmp
xor
sbb
(bad)
(bad)
jmp
cmp
out
add
and
dec
iret
repz
push
jbe
xchg
movs
mov
mov
shr
mov
(bad)
jmp
mov
addr16
ret
adc
stc
jbe
mov
push
push
push
adc
adc
jecxz
(bad)
(bad)
mov
std
mov
dec
stos
aad
dec
push
push
enter
xor
inc
jg
in
jg
test
sub
jg
in
mov
dec
cmp
stos
(bad)
(bad)
ss
test
xor
jo
mov
std
bound
(bad)
(bad)
(bad)
jmp
push
mov
and
pop
(bad)
fistp
add
cs
or
call
stc
popf
jg
cmp
add
dec
jg
out
pop
push
mov
lds
cld
cmp
cwde
or
call
jg
icebp
add
out
or
jmp
pop
inc
jno
cmps
imul
sub
jmp
cli
dec
ret
mov
fistp
stc
leave
fwait
and
xchg
comiss
(bad)
(bad)
push
mov
out
mov
xchg
data16
sub
dec
inc
pop
mov
push
fwait
popf
(bad)
(bad)
(bad)
(bad)
jl
ficom
pop
mov
imul
and
(bad)
shl
xchg
dec
ror
(bad)
jg
outs
stc
jmp
iret
pop
(bad)
mov
in
add
(bad)
neg
leave
cli
call
les
push
mov
pop
add
xchg
(bad)
js
out
shl
pop
pop
lods
pop
cmp
push
xor
cmp
adc
mov
(bad)
(bad)
push
push
adc
xchg
and
retf
xor
ud0
push
pop
mov
(bad)
(bad)
(bad)
(bad)
cli
mov
pop
jle
ins
iret
push
lods
in
(bad)
das
inc
xchg
add
mov
inc
loope
or
(bad)
(bad)
(bad)
dec
inc
dec
jb
repnz
cs
imul
or
xor
cmp
mov
in
(bad)
(bad)
dec
cs
push
(bad)
xchg
addr16
add
mov
inc
mov
(bad)
(bad)
inc
push
xor
dec
das
xchg
retf
and
sbb
pop
xchg
ds
mov
adc
ja
hlt
aam
iret
adc
or
or
es
push
add
add
ret
call
sar
and
iret
rcr
sar
(bad)
(bad)
(bad)
jmp
and
inc
jmp
jl
or
mov
push
xchg
jbe
cmp
(bad)
(bad)
dec
sbb
outs
movs
mov
fmul
jecxz
cmp
imul
outs
mov
(bad)
aas
(bad)
(bad)
(bad)
jmp
in
jbe
dec
xchg
rcl
sbb
dec
iret
test
imul
enter
adc
mov
inc
dec
adc
daa
sbb
neg
(bad)
(bad)
call
daa
mov
mov
sub
scas
adc
adc
sbb
xor
pop
jne
loop
(bad)
(bad)
inc
dec
mov
out
rcl
and
pop
iret
xor
and
sbb
jmp
mov
call
sti
jg
data16
mov
xchg
mov
mov
outs
pushf
sub
mov
repnz
gs
mov
(bad)
(bad)
(bad)
call
mov
dec
jp
pop
test
mul
sub
in
outs
add
(bad)
(bad)
(bad)
jmp
xor
or
mov
mov
push
adc
aad
mov
jno
jns
fist
xchg
ret
test
out
inc
pop
(bad)
std
cmps
je
sahf
pop
std
or
mov
(bad)
mov
mov
adc
xchg
clc
(bad)
push
xor
bound
dec
aad
push
pop
inc
fcomip
call
(bad)
(bad)
(bad)
dec
sbb
add
loop
hlt
pushf
call
push
push
(bad)
dec
(bad)
xchg
pop
retf
and
push
or
not
jmp
cli
jae
sbb
ins
call
add
sub
jecxz
adc
xchg
inc
pop
dec
(bad)
(bad)
(bad)
inc
and
movs
jbe
aam
pop
mov
mov
or
mov
cmp
add
inc
sar
cli
mov
jle
stos
push
mov
jg
add
(bad)
les
clc
pop
les
(bad)
(bad)
jmp
adc
xor
das
xchg
sbb
mov
add
stos
scas
adc
dec
sbb
sub
(bad)
in
(bad)
int
scas
sbb
cdq
mov
push
jbe
in
call
call
dec
test
jmp
mov
adc
lea
lock
sub
inc
sti
inc
mov
(bad)
or
clc
mov
inc
cld
sub
arpl
dec
je
add
mov
pop
lahf
cmp
pop
daa
out
adc
(bad)
cld
and
(bad)
(bad)
jmp
xchg
aad
jg
call
(bad)
je
inc
mul
push
test
and
nop
jecxz
push
inc
iret
mov
repnz
pop
jno
inc
cmp
cmp
inc
sub
rcr
fcomp
push
add
push
sub
push
pop
pop
cmc
jmp
inc
mov
jmp
push
lahf
call
inc
xchg
imul
(bad)
mov
sub
lock
jbe
fbstp
mov
fcom
pushf
lahf
sbb
(bad)
call
rcl
cli
imul
push
mov
mov
cli
outs
mov
push
fs
xchg
les
push
sub
stc
aam
inc
enter
mov
cdq
sub
add
pop
and
xchg
jmp
sbb
lock
cmps
popa
jbe
inc
push
gs
jns
(bad)
(bad)
jmp
gs
or
cmp
int
mov
pusha
jne
mov
das
dec
loopne
pusha
pop
out
fsub
scas
mov
push
clc
cmps
ror
(bad)
inc
mov
jge
test
dec
jo
dec
inc
mov
inc
hlt
and
inc
(bad)
jmp
xchg
enter
sub
dec
mov
js
jo
(bad)
jmp
pop
pop
fiadd
loope
cld
mov
out
das
leave
(bad)
mov
jle
cmp
jg
stos
scas
mov
mov
repnz
inc
imul
inc
cwde
cli
inc
daa
or
xchg
pushw
scas
sbb
(bad)
push
imul
fst
lods
popa
call
imul
(bad)
(bad)
mov
and
inc
call
or
fbld
out
lock
stos
popf
(bad)
(bad)
in
cmp
mov
sub
mov
fist
lock
pushf
xchg
pop
xor
call
rol
dec
loop
(bad)
lock
(bad)
or
xor
mov
jb
and
cdq
out
sub
mov
sar
fs
and
loope
pop
xchg
scas
sbb
jmp
xchg
icebp
(bad)
jmp
call
cli
lods
jecxz
cmp
push
lds
(bad)
repz
(bad)
(bad)
inc
xor
cs
ret
cvtpi2ps
(bad)
xchg
and
push
das
xchg
je
push
retf
(bad)
(bad)
(bad)
(bad)
jl
imul
out
aam
call
(bad)
repz
enter
xchg
mov
test
das
clc
(bad)
dec
iret
nop
sub
sub
dec
adc
or
mov
cld
cmp
(bad)
push
xchg
dec
and
and
adc
pop
ss
xchg
xchg
add
movups
sbb
(bad)
mov
and
stos
xchg
dec
out
add
retf
(bad)
(bad)
inc
or
(bad)
mov
cmp
xor
cmps
sbb
out
or
hlt
or
mov
js
pop
dec
cmps
(bad)
cmp
xor
sub
sar
neg
jnp
inc
adc
or
scas
shr
call
(bad)
push
adc
mov
loopne
repz
xchg
out
(bad)
jg
mov
push
mov
clts
and
and
movs
imul
call
imul
das
and
push
int
and
mov
(bad)
dec
pop
xor
dec
pop
and
mov
mov
mov
push
jno
dec
ds
fimul
dec
adc
adc
iret
scas
je
(bad)
lahf
std
fs
(bad)
(bad)
(bad)
jmp
xchg
adc
hlt
xor
push
mov
jmp
aam
sub
dec
pop
in
or
loopne
push
cmps
mov
bnd
rcl
mov
loop
call
ins
pop
mov
cmp
out
mov
cmps
int
std
push
nop
outs
or
ins
and
rcl
mov
shl
fwait
push
ins
test
(bad)
(bad)
(bad)
jmp
xor
dec
jmp
pop
and
(bad)
(bad)
in
(bad)
aad
mov
cmp
cmps
aas
repnz
js
pop
shl
(bad)
(bad)
(bad)
dec
scas
jmp
aad
cmc
lds
jmp
cmp
fnstenv
adc
fwait
(bad)
jg
dec
ror
adc
cmp
sub
dec
(bad)
jmp
cmp
iret
adc
jbe
sbb
pop
sahf
xor
stos
xor
jb
aad
mov
(bad)
jg
mov
loopne
or
mov
enter
sub
dec
stc
xor
retf
xor
mov
xchg
(bad)
fcomip
sub
ret
mov
or
imul
ins
mov
ror
hlt
xchg
dec
push
jo
(bad)
(bad)
(bad)
mov
mov
mov
add
xor
js
sbb
xchg
mov
add
dec
sub
(bad)
(bad)
dec
sub
loope
inc
into
cmc
inc
cld
retf
push
and
add
lock
stos
pop
cmp
cmp
jp
lods
pop
xor
push
jb
xchg
cmps
stos
inc
cmp
mov
mov
(bad)
(bad)
jg
mov
push
push
or
inc
fistp
nop
sbb
out
adc
jb
aas
cmp
(bad)
(bad)
push
lea
pusha
loope
fdiv
and
into
add
inc
inc
mov
inc
pushf
stos
jmp
(bad)
(bad)
push
pop
jle
popf
adc
cmp
sbb
mov
jmp
sub
fcomp
pop
jg
(bad)
dec
scas
mov
mov
xchg
pop
sub
jge
inc
aas
call
cli
bound
cmp
and
push
fld
dec
jmp
mov
fdiv
(bad)
cmp
pushf
adc
xchg
fs
xor
(bad)
je
fcos
push
dec
sub
jl
in
lock
call
sar
(bad)
call
aaa
imul
xchg
hlt
xor
push
cmp
push
popa
sub
and
adc
and
ret
add
hlt
in
sbb
stos
rcr
ror
mov
(bad)
(bad)
(bad)
jmp
test
fldcw
cmps
xchg
retf
out
test
xor
ins
xlat
aam
cld
nop
mov
(bad)
push
repnz
(bad)
push
aad
pop
jb
mov
adc
test
call
push
push
fcomip
(bad)
inc
xacquire
jnp
icebp
hlt
inc
mov
sbb
mov
(bad)
aas
in
aaa
enter
cld
int
mov
aas
out
sti
div
cld
push
hlt
shr
add
xchg
mov
cwde
fld
neg
out
std
(bad)
jmp
adc
adc
test
mov
push
adc
das
fdiv
xchg
and
sub
clc
aas
enter
repnz
push
mov
dec
push
jae
lock
dec
pop
(bad)
ja
inc
aaa
out
jg
outs
jecxz
push
dec
(bad)
retf
sub
mov
push
rep
mov
movs
mov
out
mov
into
xlat
in
stc
mov
push
or
(bad)
cdq
into
addr16
dec
out
sub
inc
outs
test
inc
xor
dec
(bad)
pop
lock
mov
stc
(bad)
jg
jmp
cdq
sahf
pop
call
jmp
aad
(bad)
jmp
shl
jno
mov
leave
push
dec
(bad)
and
pop
pop
pop
mov
sbb
cmp
scas
aam
xor
xor
leave
adc
(bad)
pop
pop
pop
pusha
push
mov
cmp
es
(bad)
(bad)
fist
jb
add
jmp
in
pop
out
mov
and
rcl
(bad)
clc
mov
or
retf
push
inc
clc
push
lock
adc
sub
or
mov
add
lock
mul
xchg
pusha
jne
xor
push
icebp
scas
add
les
(bad)
(bad)
jmp
out
int
mov
inc
cmp
jns
cmp
ja
sub
pop
test
sub
jmp
inc
test
add
sar
gs
dec
adc
mov
xchg
(bad)
fcomip
call
xchg
not
mov
cld
push
bound
add
rcl
(bad)
(bad)
call
sti
and
and
inc
pop
add
test
or
mov
dec
xor
(bad)
(bad)
call
xchg
and
sbb
imul
movs
test
pop
mov
(bad)
jmp
xor
fimul
sbb
jmp
(bad)
(bad)
fimul
xor
pop
loope
(bad)
jg
pop
les
and
adc
jb
mov
stos
aaa
fwait
(bad)
(bad)
(bad)
mov
popa
and
retf
jbe
xchg
mov
sub
push
adc
push
xor
dec
loope
das
mov
nop
adc
sbb
hlt
mov
imul
adc
and
adc
mov
add
ins
dec
xor
inc
aam
into
stos
jo
call
pop
sbb
movaps
daa
jno
fidiv
sbb
in
adc
rcr
les
adc
bound
mov
js
push
out
clc
jg
int
pusha
push
mov
ja
retf
icebp
leave
mov
dec
ss
(bad)
(bad)
jmp
dec
mov
ret
pop
xchg
out
xor
cmps
xchg
push
xchg
inc
sbb
dec
mov
mov
cmp
jbe
inc
rol
or
(bad)
jmp
inc
(bad)
mov
sbb
das
aaa
xlat
call
pop
mov
(bad)
mov
add
mov
mov
lock
dec
ins
sar
ficom
mov
ffreep
jb
mov
(bad)
(bad)
(bad)
(bad)
call
dec
mov
aaa
fiadd
xchg
das
xchg
dec
mov
retf
(bad)
popa
inc
jge
jne
out
ins
jmp
mov
pushf
push
inc
ret
lea
dec
mov
(bad)
(bad)
inc
mov
nop
push
inc
lds
test
sub
pop
mov
(bad)
out
push
std
mov
test
add
and
or
std
inc
mov
mov
je
clc
add
popf
xchg
fldcw
jg
jmp
dec
pop
push
mov
cs
in
mov
je
inc
xor
(bad)
clc
mov
fwait
invd
mov
and
push
gs
sahf
dec
sub
or
push
push
xchg
lock
or
jecxz
fsubr
pusha
lock
pop
cmp
push
(bad)
adc
in
cmp
aam
adc
dec
mov
scas
aam
cmps
push
push
into
sub
sub
cmp
loopne
jmp
and
clc
je
shl
jle
adc
(bad)
push
call
and
mov
mov
xchg
test
sub
inc
xor
fsubr
(bad)
(bad)
(bad)
push
imul
enter
xor
mov
rcr
dec
iret
sahf
ds
xor
pop
int
sbb
mov
ror
push
imul
es
and
cmc
popa
and
inc
mov
call
mov
inc
adc
stc
pop
cli
fdivr
imul
fisttp
(bad)
call
shl
pop
loop
inc
scas
ins
ins
lods
lods
lods
cs
(bad)
call
mov
cmc
ret
in
loope
or
(bad)
cmp
jmp
jge
xor
clc
test
cmp
repnz
mov
outs
cmp
popa
add
xchg
xor
push
and
(bad)
mov
shl
push
lods
pop
(bad)
(bad)
aas
pop
js
shl
and
sbb
xchg
icebp
cs
enter
cmp
jbe
aam
gs
dec
icebp
(bad)
(bad)
clc
sub
or
mov
inc
and
jno
out
inc
(bad)
(bad)
jmp
inc
mov
jmp
dec
fnsave
mov
xchg
ins
js
sbb
and
adc
scas
(bad)
popa
rcr
jmp
loope
les
jp
(bad)
(bad)
call
stos
pushf
cmp
shl
jmp
(bad)
daa
frstor
adc
(bad)
inc
ja
in
xchg
lock
(bad)
stc
xchg
(bad)
mov
inc
ins
(bad)
mov
call
xchg
xchg
push
loopne
dec
fnstcw
add
pushf
data16
adc
inc
arpl
out
lahf
mov
adc
icebp
lss
das
xor
test
gs
(bad)
inc
sbb
sti
aaa
fistp
xchg
lea
pop
ins
cld
stc
push
xor
or
dec
or
out
cli
xlat
fwait
sbb
jecxz
sub
icebp
push
lds
sbb
js
jle
mov
loope
(bad)
(bad)
push
ja
cmp
mov
imul
loopne
(bad)
div
add
mov
push
adc
jg
mov
popa
test
xlat
push
(bad)
sar
inc
(bad)
call
push
call
int
icebp
jo
(bad)
ins
in
xlat
sbb
(bad)
(bad)
call
in
mov
(bad)
into
sub
inc
dec
push
fisub
sbb
sub
(bad)
(bad)
mov
repnz
push
xor
sti
xchg
jmp
std
push
bndldx
or
out
(bad)
(bad)
call
cmp
movs
outs
cmp
lods
jmp
sub
or
jmp
push
sub
(bad)
(bad)
fistp
dec
xor
mov
imul
out
adc
xchg
in
push
cmp
pop
or
mov
xor
(bad)
je
(bad)
(bad)
call
push
int3
sub
(bad)
mov
mov
stos
mov
inc
mov
call
inc
xlat
(bad)
(bad)
(bad)
call
ror
inc
ins
(bad)
ins
pop
stc
movs
test
inc
adc
mov
js
sar
into
js
(bad)
(bad)
call
push
(bad)
repz
in
rcr
inc
and
mov
jmp
and
inc
jb
mov
jg
push
or
adc
call
mov
mov
vmovups
(bad)
push
repnz
mov
js
int
xlat
scas
jno
sub
scas
(bad)
dec
push
inc
ins
sub
test
inc
test
push
lods
aaa
or
call
(bad)
mov
sub
popa
outs
ret
jns
repz
or
movs
pop
jns
es
inc
loop
mov
cld
aaa
ret
cmp
xchg
iret
call
(bad)
jmp
sub
arpl
dec
mov
aas
mov
xor
movs
(bad)
(bad)
(bad)
jmp
sti
adc
bound
inc
int3
push
mov
movs
rol
std
and
sub
sbb
(bad)
(bad)
push
dec
mov
or
xor
dec
ret
cmp
cwde
(bad)
jg
call
(bad)
in
push
lds
or
iret
outs
and
(bad)
mov
retf
fldenv
push
or
mov
xor
adc
and
mov
cld
jmp
lock
push
cmp
pop
inc
imul
adc
or
fbld
into
jnp
ss
(bad)
inc
or
fist
xlat
sbb
pop
push
lds
pop
(bad)
(bad)
push
pop
je
cs
bound
jo
xchg
mov
shl
push
cmp
sbb
cwde
sub
(bad)
(bad)
(bad)
dec
lods
fidivr
xchg
push
into
int3
das
sbb
or
ffree
and
bound
xchg
sub
std
mov
fs
icebp
xbegin
push
jl
ins
pop
push
imul
loop
(bad)
(bad)
jg
shr
xchg
xchg
and
push
adc
dec
push
adc
jmp
hlt
sbb
ss
cld
jmp
and
or
or
mov
mov
inc
out
or
xor
outs
jns
mov
xchg
sbb
mov
lea
fs
movs
lea
lock
es
jnp
fucomp
jns
clc
add
ss
xchg
xchg
(bad)
(bad)
jmp
push
dec
pusha
sbb
add
imul
das
loop
shl
out
call
pop
or
popf
(bad)
jg
test
adc
aam
jb
jns
mov
(bad)
(bad)
(bad)
call
sub
sub
cmp
push
pusha
ins
loopne
jmp
clc
push
icebp
aaa
mov
movs
in
jg
(bad)
jmp
sbb
cmp
dec
cmp
(bad)
mov
bound
es
and
cmp
outs
mov
mov
cs
or
xchg
mov
stos
push
jae
out
xor
jecxz
add
sub
push
cmc
ror
push
outs
(bad)
(bad)
(bad)
inc
pop
lds
fidiv
ret
sahf
push
call
pop
hlt
test
cdq
imul
fdivrp
(bad)
(bad)
push
addps
mov
and
cmps
mov
mov
mov
mov
add
lds
dec
aaa
(bad)
icebp
mov
dec
lods
lahf
ss
mov
adc
cmp
pop
out
pushf
leave
ins
sbb
icebp
ror
or
lock
add
lock
daa
inc
or
movs
xor
(bad)
jmp
rcr
mov
pop
std
retf
mov
cmovp
dec
mov
(bad)
call
cs
movs
sub
jl
test
dec
mov
push
je
(bad)
(bad)
(bad)
mov
cmp
imul
jo
push
out
fiadd
xchg
sbb
xchg
mov
cmp
fsubr
sti
dec
loopne
mov
mov
clc
jns
xchg
fbstp
push
mov
xor
add
mov
(bad)
dec
loop
scas
jge
mov
(bad)
pop
pop
push
adc
ret
sbb
inc
movs
jno
(bad)
fild
cld
arpl
cmp
mov
pop
cli
stc
inc
hlt
popf
push
outs
mov
(bad)
push
sti
mov
xor
mov
jno
inc
retf
dec
push
jl
cmp
out
xchg
inc
xchg
adc
inc
sbb
adc
xor
mov
call
add
sub
mov
fstp
loopne
ret
pop
idiv
call
cmp
mov
push
mov
std
ret
mov
(bad)
(bad)
(bad)
(bad)
cld
iret
fdivr
jbe
movs
mul
neg
(bad)
das
mov
fistp
jmp
sar
test
lods
xlat
(bad)
shl
pop
rol
dec
cmp
(bad)
jmp
mov
imul
mov
repz
idiv
(bad)
(bad)
call
sbb
dec
dec
mov
popf
lods
sbb
rcr
mov
rcr
push
(bad)
mov
ja
push
(bad)
call
es
(bad)
jle
lock
repz
or
retf
movs
fisubr
hlt
mov
(bad)
inc
jge
in
mov
sti
in
outs
jp
gs
data16
mov
jmp
cwde
call
int3
aas
jne
sbb
rcl
jns
xchg
cmp
or
arpl
outs
cmp
(bad)
(bad)
call
dec
jmp
scas
call
fsubr
mov
jae
je
hlt
mov
(bad)
out
pop
aas
cli
(bad)
(bad)
(bad)
mov
jae
pop
cli
inc
mov
add
sbb
stos
fcom
cdq
push
sub
les
jl
inc
call
ins
jns
(bad)
(bad)
jmp
jmp
mov
jbe
shl
ret
mov
xlat
xor
pop
gs
mov
mov
dec
mov
push
jo
(bad)
call
cmc
mov
and
jge
jmp
mov
xor
shl
mov
jmp
push
xchg
add
cmp
adc
test
xchg
and
xchg
push
add
inc
cmps
(bad)
or
xor
int3
pop
push
sub
(bad)
(bad)
(bad)
push
mov
outs
adc
push
mov
cmp
add
repz
xchg
pop
out
add
mov
mov
push
aam
xor
dec
stos
push
xchg
push
mov
fisub
jae
mov
ja
add
daa
mov
jecxz
dec
imul
jp
jns
jmp
(bad)
(bad)
dec
daa
push
mov
xor
xchg
stc
sbb
or
adc
sub
mov
mov
(bad)
(bad)
dec
pushf
adc
adc
daa
std
dec
je
and
sbb
ins
(bad)
and
(bad)
(bad)
sbb
lahf
sub
xor
cmp
mov
and
enter
(bad)
(bad)
(bad)
mov
inc
and
mov
in
push
xor
sub
cmp
rol
add
adc
movs
ins
xor
and
data16
(bad)
shr
add
dec
dec
dec
pop
hlt
pusha
xchg
(bad)
call
clc
sti
neg
dec
mov
add
ss
mov
mov
pop
loopne
clc
jnp
fistp
push
mov
dec
fbld
(bad)
(bad)
(bad)
jmp
sar
xor
imul
rcl
shr
inc
sar
sti
sub
jg
js
mov
or
movs
fsubrp
rol
sti
stos
sub
out
out
adc
sbb
jmp
add
mov
pop
cld
mov
cmc
and
vandnps
ins
or
pop
mov
ja
mov
xchg
(bad)
call
stos
mov
mov
jg
mov
gs
xchg
sub
data16
out
sbb
push
clc
call
jmp
adc
inc
aam
jge
or
loop
(bad)
(bad)
jmp
ficom
stos
mov
lea
sbb
sti
popa
mov
add
xchg
sar
mov
cmp
stos
push
fbstp
jno
out
xchg
mov
add
jno
xchg
sub
call
and
mov
outs
mov
and
push
cmps
shr
xlat
sbb
jmp
push
fisttp
das
in
aaa
jo
(bad)
out
jg
jp
mov
cli
add
cmp
stos
sub
mov
or
pop
add
add
pop
loope
(bad)
(bad)
(bad)
inc
ja
cs
and
adc
ror
pushf
mov
inc
cmp
call
(bad)
(bad)
jge
shl
popa
push
jmp
shl
pusha
mov
lods
lods
scas
add
call
or
sbb
(bad)
leave
mov
rcl
dec
adc
das
cmp
dec
stos
sbb
pushf
dec
sar
adc
and
pop
mov
cmp
stos
(bad)
cmp
sbb
lds
sti
sbb
pop
sbb
lods
inc
outs
call
and
adc
inc
dec
pop
shl
and
fs
fisttp
(bad)
(bad)
dec
jg
mov
mov
and
add
fmul
xchg
movs
lea
add
popf
jbe
jne
mov
dec
(bad)
call
push
push
(bad)
jbe
xlat
push
ficom
sbb
dec
cmp
(bad)
(bad)
mov
mov
nop
mov
loopne
ss
sbb
adc
sti
sbb
call
xchg
movs
mov
mov
fst
jp
int
mov
call
ds
out
sub
inc
mov
push
call
xchg
(bad)
(bad)
dec
mov
inc
call
gs
xchg
inc
fisub
aas
inc
fsubr
pop
cmp
mov
(bad)
cmp
loopne
in
fadd
retf
cmps
sbb
nop
retf
call
jmp
mov
pop
jmp
or
cmp
inc
aam
shr
and
(bad)
(bad)
jmp
add
jle
(bad)
scas
cmp
push
pop
xchg
mov
fwait
sub
sub
loop
or
shr
int3
aad
xchg
in
adc
mov
push
jl
sub
mov
pushf
retf
jl
lea
inc
arpl
add
or
(bad)
(bad)
cmp
std
sti
scas
ficom
jb
inc
pop
ror
push
xchg
imul
cmp
xor
xor
cmp
and
imul
fistp
dec
add
(bad)
(bad)
(bad)
fld
fdivr
jns
mov
repz
and
sub
add
jb
test
test
call
push
je
mov
leave
jnp
cdq
dec
jge
or
jae
inc
js
and
bound
adc
pop
inc
and
cmps
jge
inc
cli
add
dec
sbb
mov
(bad)
call
out
sti
out
mov
xor
cld
cdq
stc
imul
std
js
fmulp
(bad)
scas
fidivr
lds
les
int3
push
lea
xchg
push
mov
call
jg
test
sahf
scas
mov
nop
jmp
push
leave
cmps
pop
mov
(bad)
(bad)
fcomip
out
sar
mov
xor
iret
jo
ror
cmp
outs
test
loope
stos
(bad)
(bad)
(bad)
jmp
mov
in
(bad)
dec
int
dec
adc
std
pop
js
out
mov
dec
xchg
cmp
jl
xlat
idiv
(bad)
call
retf
imul
(bad)
imul
ds
mov
sub
pop
cmp
mov
dec
daa
adc
cwde
xchg
leave
mov
shl
xlat
xsha1
cmps
or
(bad)
pop
xor
pop
icebp
in
pop
std
lock
out
mov
loopne
inc
(bad)
sti
test
jg
(bad)
in
sub
(bad)
jg
xor
jbe
(bad)
(bad)
(bad)
jg
cmp
and
xchg
cmp
xor
ret
xchg
inc
bswap
in
mov
nop
pop
push
(bad)
fdivp
inc
mov
call
pushf
mov
in
cmc
xchg
mov
rcl
inc
(bad)
(bad)
(bad)
call
clc
mov
cwde
rcr
xor
stos
and
add
inc
sahf
jno
mov
and
xchg
popa
cli
cmc
inc
inc
call
pop
movs
dec
push
xor
add
(bad)
(bad)
fistp
movups
and
pusha
dec
lds
test
push
out
fmul
ins
daa
xor
shl
dec
ds
call
cmc
clc
imul
repnz
cmp
scas
adc
cs
icebp
and
enter
or
cld
sub
xor
(bad)
(bad)
(bad)
jg
movs
or
cmps
adc
aas
xlat
test
pop
popa
shl
pop
(bad)
lds
inc
and
sub
loop
dec
(bad)
aas
and
sub
add
shl
popa
cdq
and
ins
fstp
(bad)
(bad)
(bad)
call
lods
retf
or
push
inc
pop
es
push
xchg
adc
and
out
sbb
outs
xchg
cmc
pop
add
(bad)
dec
test
int
je
mov
mov
cwde
inc
movs
mov
mov
(bad)
jo
mov
dec
jl
or
xchg
(bad)
and
pop
les
cwde
out
inc
add
ficom
sub
add
jg
inc
and
jmp
xchg
and
add
pop
push
cmp
ror
cs
out
mov
xchg
rcl
sbb
(bad)
dec
movs
int3
ja
(bad)
jo
fs
js
pop
mov
push
jp
xchg
loopne
call
call
sbb
pop
movs
out
push
pop
aad
es
and
std
push
push
std
neg
add
xor
xchg
xor
sbb
in
xchg
pop
movs
or
sub
sar
pop
das
mov
pop
pop
cs
imul
jne
(bad)
(bad)
(bad)
push
jl
mov
pop
cmps
cmp
cmp
jae
into
jb
or
imul
push
stos
pushf
cmp
(bad)
call
(bad)
mov
mov
sub
inc
hlt
and
push
pop
xchg
shr
das
inc
test
cmp
(bad)
(bad)
(bad)
clc
sub
push
retf
jns
stos
xchg
dec
retf
jb
push
push
jb
mov
pop
call
jmp
mov
mov
sub
pusha
loope
fbstp
push
ja
adc
fadd
(bad)
jmp
jnp
jbe
jp
cmp
call
jmp
(bad)
call
shl
mov
lods
jp
shr
push
sbb
adc
inc
ret
ret
jle
in
fnsave
(bad)
jns
xchg
push
popa
enter
jae
mov
icebp
mov
fcom
leave
loopne
xchg
inc
mov
(bad)
sahf
and
icebp
dec
jg
inc
add
push
and
sahf
adc
or
sar
pop
les
or
jmp
jae
(bad)
jmp
push
mov
jbe
out
adc
xor
inc
inc
in
push
ret
mov
xchg
popa
repz
mov
add
cmps
sub
pop
and
and
add
into
add
xor
push
adc
hlt
fmul
shl
jns
and
sub
int3
lods
popf
iret
push
mov
pop
test
push
(bad)
fsub
hlt
xor
xchg
sbb
mov
nop
and
mov
sahf
out
push
add
cmp
mov
sbb
(bad)
(bad)
jl
lock
int
cli
hlt
not
(bad)
ds
mov
(bad)
mov
add
imul
sbb
inc
lods
pop
stos
dec
nop
aas
or
jmp
call
mov
popf
cmc
dec
aam
or
cmp
pop
sbb
inc
out
cmc
(bad)
(bad)
jmp
scas
aam
cmp
call
xchg
add
mov
(bad)
pop
shr
adc
push
(bad)
call
sbb
imul
cmp
jmp
mov
pusha
xchg
mov
(bad)
(bad)
jmp
lds
and
cs
sti
gs
push
xor
retf
loop
retf
imul
(bad)
(bad)
clc
and
xor
cmp
inc
sbb
mov
dec
mov
fcom
loopne
inc
mov
leave
adc
popf
dec
int3
xchg
ins
(bad)
jmp
inc
retf
lods
push
xchg
inc
pop
cs
(bad)
out
aad
les
aas
js
stc
cmp
inc
jmp
mov
xchg
xor
ret
inc
call
and
(bad)
call
cmc
int3
jmp
push
gs
dec
shl
cmp
ja
push
inc
add
js
pop
cli
dec
lahf
retf
out
call
pop
ret
gs
fild
mov
pusha
clc
js
xor
in
(bad)
ja
cli
push
push
and
sbb
movs
(bad)
jmp
push
sar
add
out
(bad)
call
add
sub
(bad)
(bad)
dec
test
(bad)
in
fsubr
enter
mov
mov
(bad)
int3
gs
sar
mov
je
push
aam
daa
mov
stc
adc
loop
scas
push
test
mov
push
sbb
retf
xor
call
(bad)
sti
and
addr16
or
xor
push
sbb
test
or
(bad)
inc
jno
mov
in
lock
cmp
add
js
fcomip
mov
call
movs
mov
pop
mov
inc
les
mov
in
sbb
push
js
fistp
sub
sbb
stc
je
repnz
aad
cdq
cmps
dec
aad
jo
cli
mov
test
cld
jp
dec
mov
outs
dec
rol
sahf
test
lods
or
mov
mov
lock
call
bound
or
jo
pushf
stos
dec
xchg
aam
std
enter
aad
lock
xlat
out
inc
pop
shl
arpl
xlat
xor
ins
hlt
pop
iret
arpl
aas
mov
cmp
mov
idiv
jae
mov
add
(bad)
(bad)
(bad)
jle
psubb
jae
jg
aad
out
jae
adc
lds
sahf
aas
test
(bad)
jg
stc
les
jmp
xchg
jle
(bad)
inc
inc
add
aad
adc
lock
inc
inc
(bad)
(bad)
dec
cmps
mov
(bad)
or
loopne
jmp
sub
push
mov
push
sub
cli
jno
push
add
mov
(bad)
lahf
jl
stos
fistp
outs
mov
call
cmps
mov
daa
adc
call
and
sbb
mov
xchg
xchg
and
sar
adc
ret
imul
mov
jecxz
push
dec
stos
(bad)
xchg
ins
xlat
outs
push
jmp
aam
xor
fcom
pop
push
adc
cmp
rcl
fisttp
xor
or
(bad)
(bad)
out
cli
xchg
adc
fisttp
scas
or
sub
dec
(bad)
call
aas
push
push
cmps
xchg
shl
ss
mov
sbb
jne
shl
(bad)
(bad)
(bad)
(bad)
push
jge
mov
lahf
daa
mov
dec
cmc
lahf
sub
push
cmp
shl
jmp
add
je
sbb
dec
pop
pop
test
and
packsswb
in
je
(bad)
(bad)
(bad)
jmp
movs
movs
sbb
sbb
clc
mov
scas
sbb
and
adc
add
rol
jle
jecxz
call
(bad)
(bad)
jg
ss
add
push
scas
mov
mov
pop
daa
add
rcl
(bad)
jmp
mov
fisubr
ins
pop
xchg
dec
add
pop
adc
pop
xchg
gs
dec
xchg
aad
inc
xchg
push
pop
dec
and
jno
inc
jno
dec
rcr
jo
fwait
dec
push
or
lods
in
test
push
xor
clc
pop
cmc
or
push
adc
and
sar
outs
mov
jl
jmp
xchg
popf
nop
mov
pop
(bad)
call
lds
xchg
(bad)
jno
(bad)
jg
inc
test
aaa
mov
sub
rcr
jnp
add
(bad)
mov
(bad)
popf
mov
mov
int3
test
jmp
jmp
or
push
inc
inc
jmp
rol
pop
jne
(bad)
inc
loopne
movs
mov
data16
popa
jmp
scas
sub
and
ja
ja
shl
lods
add
push
out
js
mov
loopne
ss
lds
xor
call
mov
repnz
mov
lock
jl
lahf
sub
fs
out
mov
jp
pushf
fnstenv
nop
pop
and
daa
mov
(bad)
push
xor
jl
xor
imul
jnp
pop
sub
or
mov
mov
(bad)
stos
stos
data16
xor
int
retf
push
xchg
inc
sbb
(bad)
(bad)
(bad)
fcom
jle
je
cmp
outs
fwait
sbb
cmp
in
ss
or
push
adc
fwait
dec
(bad)
(bad)
dec
mov
pop
push
push
xchg
xchg
xor
int3
addr16
imul
(bad)
jb
and
mov
jae
lock
push
sbb
pusha
mov
jecxz
(bad)
call
and
js
xchg
adc
fcomp
adc
jmp
add
or
stos
nop
je
jo
or
(bad)
(bad)
(bad)
(bad)
mov
push
inc
push
inc
or
sbb
enter
(bad)
mov
std
pop
fbstp
(bad)
jg
call
or
sahf
pop
mov
rcl
fidivr
dec
jb
xlat
ret
fcomip
add
out
mov
inc
call
add
call
jns
(bad)
imul
xchg
(bad)
fidiv
jns
fsub
lock
inc
(bad)
mov
retf
xchg
repz
jae
in
idiv
push
fnsave
and
(bad)
(bad)
(bad)
cld
std
fbstp
gs
fistp
push
jge
aam
jnp
mov
pop
mov
and
push
xlat
mov
(bad)
dec
test
repnz
(bad)
lock
imul
shl
iret
(bad)
(bad)
mov
or
xchg
lods
aaa
xlat
inc
mov
jbe
xchg
sbb
mov
xor
ror
rcr
push
fisttp
movs
or
push
test
(bad)
loopne
sub
jmp
ds
out
fldln2
xchg
in
push
ret
dec
sub
add
push
rcr
or
and
or
stos
push
lods
sbb
(bad)
(bad)
(bad)
fisttp
mov
xchg
cmp
cmp
or
call
and
(bad)
mov
test
dec
push
(bad)
adc
mov
inc
jns
dec
fs
(bad)
(bad)
jmp
dec
pop
lock
lahf
test
sbb
retf
or
gs
push
sub
shl
sub
ja
(bad)
jmp
mov
cmps
fwait
xchg
mov
mov
inc
add
lock
je
sub
(bad)
(bad)
call
daa
loopne
push
xchg
pushf
mov
inc
inc
push
sahf
dec
fs
inc
inc
pop
add
mov
mov
mov
push
cmp
sub
(bad)
popf
cmp
xchg
out
xchg
xor
mov
(bad)
call
inc
push
jle
mov
mov
bswap
into
hlt
in
jns
push
jp
sbb
push
adc
(bad)
(bad)
jmp
sub
jns
hlt
cld
aam
push
ins
dec
mov
lea
jecxz
pushf
rcr
lock
loopne
mov
pop
inc
adc
jnp
inc
cli
(bad)
dec
sub
stos
jmp
add
add
jnp
fs
pop
fisttp
rol
cs
pop
jns
jp
dec
mov
jecxz
mov
dec
sub
push
shl
mov
jle
push
popf
jge
xchg
inc
scas
fistp
fisubr
(bad)
cld
jnp
dec
mov
xor
or
pop
mov
sub
dec
(bad)
(bad)
cli
stc
xchg
iret
cmp
cmp
mov
xchg
gs
xor
loopne
xchg
dec
(bad)
jmp
pop
sub
jg
mov
sahf
mov
jbe
mov
add
(bad)
cmp
mov
dec
dec
dec
movs
aam
cmp
(bad)
dec
sahf
fdivr
neg
add
int3
dec
test
(bad)
jmp
inc
pop
cdq
dec
les
mov
mov
inc
add
xchg
out
inc
dec
xchg
cmp
inc
dec
jg
dec
jae
mov
jmp
test
pop
cmp
push
cmp
add
xor
retf
push
xchg
push
(bad)
retf
clc
(bad)
call
stos
mov
mov
inc
push
push
ror
fs
mov
lds
inc
push
or
shl
in
les
pop
(bad)
(bad)
(bad)
out
fimul
mov
lahf
into
and
jmp
je
and
dec
and
and
outs
call
(bad)
dec
sar
mov
imul
mov
(bad)
(bad)
out
cmp
ss
add
jmp
xchg
xchg
lods
in
sti
iret
daa
es
mov
popf
adc
test
ret
iret
or
idiv
idiv
je
jl
cli
rcl
dec
fisubr
lock
mov
xchg
push
(bad)
(bad)
jmp
jmp
jne
push
hlt
jbe
jae
jmp
aaa
mov
jb
(bad)
addr16
in
retf
out
pop
mov
(bad)
jmp
mov
add
pop
es
leave
shl
cmps
int3
sar
push
and
(bad)
jg
or
enter
xchg
in
mov
jbe
add
clc
pop
std
jmp
dec
aaa
sbb
js
xchg
pop
(bad)
call
fxch
mov
add
cmp
cld
sbb
enter
cwde
fdiv
push
sub
xor
mov
sub
(bad)
(bad)
jmp
or
call
popa
popf
call
cdq
push
stc
movs
clc
(bad)
(bad)
mov
inc
inc
mov
ffree
int3
mov
push
mov
(bad)
push
or
push
jbe
sub
mov
sbb
(bad)
push
cmp
(bad)
(bad)
call
dec
imul
cmp
loop
lahf
dec
repnz
pop
dec
cmp
adc
(bad)
aaa
std
jmp
loope
dec
push
xor
adc
cmp
add
mov
scas
xchg
sbb
call
adc
or
cmps
adc
outs
dec
mov
outs
stc
sbb
adc
jg
(bad)
(bad)
call
imul
cwde
fld
jno
(bad)
push
das
jns
jns
(bad)
(bad)
(bad)
mov
stc
icebp
mov
jo
mov
and
cmp
push
call
and
mov
shr
nop
lock
lock
test
ror
mov
xor
push
mov
pop
sbb
or
sahf
xchg
imul
cdq
je
ss
pop
sahf
(bad)
(bad)
(bad)
mov
adc
jmp
adc
pop
or
loopne
adc
mov
(bad)
(bad)
(bad)
push
mov
std
dec
mov
mov
mov
iret
retf
sbb
mov
jmp
aad
and
mov
jle
data16
sbb
jns
int
(bad)
(bad)
call
icebp
outs
cld
fiadd
xor
sbb
jnp
and
lahf
(bad)
xor
and
das
call
pop
cmp
dec
mov
jno
cli
and
scas
ja
pop
jb
(bad)
jmp
mov
cmp
cld
and
xchg
call
mov
push
xor
and
(bad)
(bad)
(bad)
(bad)
(bad)
cmp
add
outs
(bad)
fidiv
cmp
pop
add
or
mov
add
xchg
(bad)
(bad)
(bad)
in
in
pop
cmp
imul
inc
daa
shr
je
popf
xchg
inc
sbb
xchg
inc
mov
jmp
jne
fdivr
movs
(bad)
xchg
in
ss
sub
pop
push
pop
loopne
test
and
cmp
add
pop
(bad)
test
jmp
inc
inc
or
(bad)
mov
jl
pop
nop
xlat
icebp
les
add
aas
push
dec
mov
inc
dec
icebp
pushf
(bad)
aam
mov
pusha
out
cmps
(bad)
sub
sbb
mov
(bad)
fcmovnbe
stos
add
repz
ins
pop
adc
pop
test
sub
(bad)
(bad)
jmp
or
sub
adc
(bad)
mov
fdivr
(bad)
push
repz
bound
(bad)
and
enter
repz
lea
fwait
and
push
(bad)
rcr
add
or
adc
sub
xchg
push
sbb
dec
dec
cwde
retf
and
xchg
imul
(bad)
in
test
cmp
retf
or
lods
push
jmp
dec
push
mov
xchg
cmps
addr16
test
mov
cmp
inc
outs
(bad)
(bad)
(bad)
call
mov
xchg
mov
push
or
add
sub
inc
push
dec
xlat
and
(bad)
(bad)
inc
in
pop
or
in
enter
je
in
pop
outs
les
fistp
scas
adc
jecxz
scas
push
jns
clc
(bad)
call
mov
sbb
cwde
stos
(bad)
clc
bound
jns
dec
out
sbb
(bad)
pop
(bad)
cld
call
cmp
dec
out
sbb
jmp
scas
pop
xchg
add
aaa
data16
mov
mov
dec
adc
mov
sbb
xlat
mov
sbb
jnp
loopne
fcomi
call
mov
jmp
outs
mov
add
pusha
inc
xor
push
sbb
(bad)
jg
dec
xor
(bad)
stc
jne
sub
sbb
ss
(bad)
(bad)
mov
push
mov
fnsave
popf
outs
rol
pop
mov
(bad)
(bad)
dec
mov
nop
sub
adc
cmps
(bad)
sub
out
out
ds
test
adc
lock
call
and
and
jl
stos
neg
cmp
popf
ja
or
xchg
(bad)
dec
into
pushf
jmp
jbe
les
ds
pop
retf
jb
in
mov
outs
cli
fwait
cli
cld
push
mov
mov
inc
cld
ins
sbb
cmp
icebp
add
pop
mov
xor
cdq
aam
push
stos
int3
inc
repz
cdq
hlt
(bad)
jne
push
add
dec
ret
(bad)
dec
scas
(bad)
ins
ins
mov
(bad)
pop
and
je
test
loopne
inc
loope
test
xor
push
sub
aam
jg
dec
pop
jnp
sbb
mov
cmp
cmp
(bad)
jmp
jle
fist
sahf
mov
js
sbb
push
mov
icebp
sub
jmp
(bad)
push
or
pusha
shl
outs
mov
stc
out
(bad)
(bad)
jmp
mov
pop
cli
into
std
not
js
xor
pop
xlat
xlat
rcl
push
(bad)
(bad)
jg
je
nop
sti
retf
hlt
inc
sbb
cli
jnp
pop
jg
leave
rol
int
(bad)
(bad)
call
mov
mov
xchg
push
adc
movs
adc
and
sub
scas
imul
sar
jle
cmp
cmp
xchg
pop
rol
inc
push
adc
dec
mov
cmc
idiv
(bad)
dec
sbb
sbb
pop
aam
outs
xor
lock
and
jmp
xchg
add
xor
scas
cmp
imul
jg
das
addr16
xchg
jb
sub
jmp
shr
xchg
xlat
cmc
and
dec
push
push
cld
(bad)
jo
jg
test
push
icebp
ret
mov
mov
push
std
dec
mov
das
xchg
out
dec
test
popf
dec
stc
cli
and
fcomip
jmp
jl
das
pop
cmp
xchg
sahf
ror
std
xlat
out
pop
xchg
xchg
aaa
fiadd
jmp
stos
ds
in
aas
cmp
stos
ss
pop
std
out
adc
(bad)
(bad)
mov
mov
adc
push
push
sub
cmp
mov
(bad)
(bad)
jmp
iret
(bad)
lahf
sbb
lock
scas
repnz
ret
xchg
and
jl
pop
cmps
mov
(bad)
call
out
enter
dec
cmp
cmc
xchg
cwde
loop
jge
jge
jbe
mov
outs
push
and
lahf
aas
pop
xchg
icebp
jmp
mov
(bad)
call
pop
les
sub
sub
push
ja
pop
xor
(bad)
jmp
ret
fimul
xchg
retf
cmp
retf
or
je
jl
mov
lock
ins
and
mov
xchg
lds
pop
sahf
xor
(bad)
(bad)
call
popa
popa
jo
or
lea
pop
scas
xchg
int3
ja
push
xor
movs
cmp
mov
call
cmp
test
and
mov
mov
dec
fmul
mov
(bad)
(bad)
ins
push
rcl
cmps
sbb
xchg
mov
call
xlat
test
push
out
ss
mov
cmp
sbb
call
fisttp
jmp
jns
clc
adc
and
leave
inc
cmps
sbb
(bad)
fistp
and
adc
sub
call
inc
retf
xchg
adc
int
into
in
xor
(bad)
jmp
sbb
inc
lods
dec
xchg
jmp
add
sbb
mov
out
into
aad
inc
lds
and
mov
pop
inc
sar
retf
xchg
jo
into
int3
aad
scas
(bad)
(bad)
(bad)
inc
dec
jle
xchg
add
pop
pop
jecxz
pop
(bad)
sahf
fild
repz
je
xchg
dec
sub
and
mov
cmps
cmps
pop
test
movs
pop
jae
push
rcl
in
and
or
mov
push
inc
iret
mov
imul
es
pusha
call
xchg
clc
and
(bad)
call
ret
retf
add
inc
push
push
pop
ins
call
jmp
ja
ins
adc
into
aaa
std
(bad)
(bad)
cli
mov
mov
cmp
pop
(bad)
sub
retf
dec
call
clc
sahf
push
aaa
adc
lock
lock
or
or
mov
mov
sti
(bad)
jg
mov
hlt
inc
repz
dec
loope
mov
repnz
push
or
out
(bad)
(bad)
(bad)
(bad)
mov
dec
ror
call
(bad)
lahf
repz
call
jmp
sbb
iret
je
cld
mov
clc
inc
inc
dec
mov
bound
mov
add
cmc
shl
into
lahf
aaa
xor
inc
jmp
ss
je
enter
xchg
xor
dec
imul
jecxz
cli
(bad)
cmp
or
nop
out
sbb
je
and
and
sahf
call
pop
sub
and
xchg
into
mov
inc
fidivr
adc
pop
inc
clc
(bad)
call
lods
inc
dec
push
cmp
and
xchg
add
xchg
jo
dec
adc
(bad)
out
(bad)
inc
clc
test
scas
dec
dec
dec
xlat
push
iret
mov
sahf
jmp
add
mov
and
outs
fbstp
pop
(bad)
mov
or
mov
pop
pop
icebp
(bad)
fild
cmp
cs
sub
loope
xor
sbb
adc
sub
jno
mov
(bad)
(bad)
jmp
mov
out
pop
or
mov
ret
movs
shl
pop
mov
jmp
mov
add
push
call
xor
test
jbe
dec
sub
(bad)
(bad)
(bad)
fist
jns
and
or
dec
fistp
mov
leave
mov
xlat
(bad)
(bad)
(bad)
mov
sbb
pop
jno
and
js
ror
test
dec
and
(bad)
(bad)
(bad)
push
pushf
and
sub
pop
and
adc
pop
and
dec
xor
rcl
(bad)
(bad)
(bad)
call
adc
mov
mov
lds
push
pop
xor
mov
inc
mov
cmp
cwde
dec
in
outs
add
in
push
pusha
test
mov
(bad)
(bad)
call
inc
aam
imul
scas
push
sub
mov
test
rcl
dec
pop
xchg
and
push
or
sbb
sbb
out
mov
ja
dec
(bad)
(bad)
call
retf
rcl
popa
jmp
cmc
push
and
sti
xlat
fistp
mov
(bad)
jmp
cmp
adc
push
enter
xchg
xchg
jp
push
mov
js
je
call
pusha
nop
dec
dec
inc
push
cwde
push
aad
mov
pushf
mov
push
ret
push
pop
add
fild
jo
push
addr16
outs
sbb
(bad)
fist
jp
(bad)
sti
enter
test
jmp
cli
sub
inc
into
or
jge
mov
jl
sub
cmc
das
mov
call
loopne
icebp
mov
pop
std
les
mov
(bad)
(bad)
dec
mov
push
out
pop
fnstsw
fsubr
push
or
loopne
test
inc
jle
mov
and
(bad)
fdiv
sbb
enter
or
jecxz
ins
xor
inc
lods
mov
pop
xor
mov
inc
(bad)
(bad)
(bad)
inc
push
mov
ins
(bad)
loopne
je
imul
jp
bnd
inc
outs
mov
retf
jne
(bad)
sbb
(bad)
push
and
pop
mov
xchg
in
jns
(bad)
jge
adc
add
aas
jbe
clc
leave
shl
(bad)
inc
arpl
mov
popf
aas
pop
jns
pusha
jg
ror
mov
(bad)
(bad)
jmp
dec
add
out
xor
repz
aad
ins
sar
(bad)
push
xor
in
sbb
or
adc
(bad)
loope
sbb
pop
cmp
mov
cs
inc
cld
mov
mov
inc
lahf
push
push
(bad)
jp
pop
sar
mov
cmp
inc
lea
(bad)
stos
(bad)
ins
and
push
sub
pusha
cli
xchg
retf
inc
sub
jle
mov
jmp
push
lahf
fcompp
mov
push
call
test
ficomp
inc
push
cmps
mov
stos
xor
fs
addr16
fnstcw
dec
xor
(bad)
ja
cld
xchg
jge
ret
dec
ret
out
in
dec
mov
sti
jne
xor
(bad)
(bad)
jg
call
sub
cwde
addr16
popf
xchg
push
addr16
retf
clc
out
loope
dec
xchg
jg
(bad)
(bad)
(bad)
dec
hlt
xchg
sub
leave
mov
xchg
int3
mov
cmps
mov
stc
jae
xchg
and
call
arpl
sub
pop
repnz
aaa
jo
xor
mov
push
cmps
push
(bad)
(bad)
inc
cmp
fs
repnz
sbb
addr16
ds
or
test
mov
jnp
call
jmp
add
inc
mov
in
xchg
in
ror
int
ss
add
(bad)
(bad)
call
adc
pop
fstp
push
call
aam
(bad)
sahf
in
lods
jns
js
clc
(bad)
jmp
int3
push
sub
add
and
xor
or
outs
mov
dec
aam
popa
enter
adc
out
cmp
(bad)
(bad)
(bad)
(bad)
jmp
push
repz
xchg
leave
mov
push
push
cmp
mov
(bad)
(bad)
(bad)
(bad)
mov
(bad)
je
push
add
mov
mov
add
add
jne
aas
(bad)
(bad)
inc
jge
add
fcmovb
or
mov
jle
loop
leave
shl
jg
mov
mov
sub
sub
test
les
mov
jb
sub
popf
adc
imul
inc
cmps
adc
(bad)
jno
cmps
in
pop
mov
(bad)
cmps
addr16
(bad)
(bad)
fild
mov
lock
add
sub
jno
shr
adc
(bad)
inc
cld
js
leave
pmuludq
sub
add
xor
add
cmp
mov
loope
sub
mov
in
(bad)
(bad)
push
pop
bound
daa
out
(bad)
outs
mov
xchg
(bad)
pop
in
pushf
xor
mov
push
call
mov
mov
lods
repz
adc
aad
mov
sti
(bad)
(bad)
mov
pop
mov
rcl
les
gs
push
mov
idiv
(bad)
(bad)
(bad)
mov
dec
dec
lahf
mov
inc
imul
dec
popf
adc
push
or
xor
adc
mov
pushf
test
xchg
mov
(bad)
jmp
cld
push
mov
clc
pop
aam
or
mov
or
not
dec
popa
xor
pop
(bad)
(bad)
(bad)
(bad)
fisubr
pushf
aas
adc
xchg
or
int3
fst
fisttp
dec
cmp
movs
mov
mov
inc
push
sbb
pop
mov
jg
sbb
aam
or
mov
(bad)
push
push
out
mov
cmps
add
jnp
jo
stos
xchg
fdivr
(bad)
(bad)
jg
cdq
nop
and
push
pop
sahf
pop
and
sahf
cmp
xchg
iret
(bad)
(bad)
(bad)
call
(bad)
test
inc
repz
mov
das
retf
jecxz
pop
mov
cdq
dec
push
adc
jp
shr
shl
xchg
xor
sub
(bad)
push
imul
pop
and
xchg
xchg
into
jo
mov
mov
jmp
jmp
(bad)
push
and
add
sbb
xchg
sbb
scas
in
pop
jo
ins
cs
sar
or
ins
fbld
fistp
in
movs
push
mov
(bad)
(bad)
(bad)
call
xchg
and
imul
jo
xchg
out
pop
loopne
lahf
cmc
pop
iret
xor
lock
push
jmp
jo
test
outs
loopne
cmp
(bad)
(bad)
dec
pop
or
mov
xchg
out
scas
xchg
clc
or
addr16
mov
shl
and
jg
(bad)
ficomp
xor
adc
mov
push
cs
and
add
and
or
(bad)
inc
cld
xor
or
or
inc
xor
jo
add
mov
dec
pop
int3
xchg
add
(bad)
(bad)
mov
iret
cmc
mov
sub
add
add
(bad)
(bad)
mov
pop
xchg
sub
movs
fldcw
pop
xor
sahf
xchg
in
loope
jb
fdiv
inc
xlat
jne
test
mov
js
pushf
repz
cmp
pop
adc
aaa
cld
xchg
add
movs
push
and
loope
push
loopne
adc
pop
xchg
jge
fwait
(bad)
sbb
test
sub
add
and
jmp
xor
dec
js
ss
jl
icebp
mov
ss
(bad)
(bad)
out
and
inc
add
ret
xchg
mov
jl
mov
xchg
adc
shr
push
retf
xlat
jo
sub
xchg
mov
adc
mov
push
add
(bad)
call
shl
outs
fisub
add
(bad)
(bad)
call
(bad)
lock
imul
mov
jp
jl
cmps
(bad)
icebp
aas
sti
call
jp
jmp
mov
(bad)
ret
sti
in
in
cmps
das
cmp
aaa
mov
cmp
mov
mov
push
pop
cmp
mov
clc
(bad)
neg
call
mov
(bad)
(bad)
(bad)
aas
aaa
mov
inc
xchg
add
jmp
scas
aaa
(bad)
call
jl
jmp
add
fwait
arpl
xchg
cmp
std
int3
push
mov
(bad)
(bad)
(bad)
dec
and
jle
loop
sbb
out
(bad)
imul
mov
sar
(bad)
call
dec
xor
rcl
pusha
cmps
push
mov
jle
sub
cmp
pop
test
lds
pop
(bad)
jg
or
adc
js
add
pop
call
xor
(bad)
jg
je
sbb
call
xchg
and
add
out
push
mov
pop
call
jecxz
lahf
(bad)
fild
jle
mov
pop
data16
cmps
shr
div
xor
or
or
(bad)
mov
test
cmp
lods
aaa
(bad)
(bad)
jmp
xchg
je
fbstp
jg
push
mov
jl
inc
outs
ret
xor
(bad)
jg
pop
mov
scas
inc
add
in
js
sbb
xchg
pop
addr16
neg
mov
loopne
mov
lock
lods
xchg
sbb
dec
ret
sub
cwde
add
(bad)
jmp
inc
mov
pop
jb
mov
xor
mov
adc
mov
dec
push
outs
pop
daa
dec
call
xor
adc
ds
jno
ret
scas
clc
dec
xor
fimul
pushf
movs
cmp
jg
dec
enter
clc
cmc
cmps
or
sbb
fidiv
out
xchg
(bad)
mov
(bad)
jnp
in
jmp
into
outs
call
xor
xor
sar
cmps
adc
test
mov
stos
lahf
ins
ss
(bad)
(bad)
inc
int
mov
inc
and
dec
push
sub
xchg
fnstenv
sub
gs
std
(bad)
call
push
inc
sub
mov
jno
mov
out
or
(bad)
(bad)
(bad)
inc
out
cmps
imul
out
out
sbb
dec
or
sub
test
add
sbb
ficomp
adc
and
lods
movs
popf
lahf
xor
js
(bad)
(bad)
jmp
xor
test
cli
xchg
in
call
inc
push
mov
dec
call
and
sbb
or
xlat
sub
mov
(bad)
call
mov
jecxz
mov
or
push
pop
adc
and
mov
ds
(bad)
(bad)
fild
icebp
fcomp
and
rcl
fist
mov
sbb
lods
mov
push
pushf
(bad)
(bad)
(bad)
dec
out
and
aas
test
ds
inc
sbb
xor
mov
sbb
and
sbb
(bad)
(bad)
jmp
js
cwde
leave
adc
push
or
xor
pop
add
pop
js
popf
dec
gs
mov
(bad)
call
jmp
dec
stos
mov
lods
and
inc
dec
mov
dec
xchg
push
or
xchg
das
xchg
icebp
sahf
retf
mov
mov
mov
(bad)
dec
xor
out
inc
sub
pop
and
xor
dec
adc
push
inc
movs
mov
fwait
(bad)
pop
mov
jg
xor
rol
push
es
xchg
pop
jmp
mov
push
int3
adc
mov
cmp
pusha
fidivr
or
add
push
sahf
inc
out
jns
add
add
out
adc
mov
dec
inc
pop
adc
xchg
fdivr
push
push
push
cld
cli
(bad)
(bad)
(bad)
inc
es
mov
loope
call
nop
pop
mov
xor
hlt
pop
outs
jmp
in
adc
push
pop
jp
sahf
leave
shl
mov
and
imul
(bad)
(bad)
(bad)
jg
cli
aam
xor
bound
not
xor
pop
jg
add
es
js
nop
adc
xor
pop
add
(bad)
call
ins
adc
sub
pop
dec
pcmpeqd
repnz
sbb
int3
dec
(bad)
(bad)
jg
ret
xor
sbb
push
or
or
jmp
ins
jmp
and
daa
mov
mov
dec
pop
sar
iret
retf
test
pop
xchg
call
in
(bad)
(bad)
mov
pusha
js
push
push
pop
addr16
jg
retf
lods
pop
and
mov
imul
(bad)
jmp
jo
pop
shl
mov
ror
inc
adc
xchg
inc
mov
jb
iret
jb
adc
push
outs
xchg
aad
lock
or
cmc
nop
movs
sar
(bad)
jmp
pop
dec
es
in
bound
mov
or
sub
push
push
xlat
(bad)
(bad)
cmp
(bad)
push
fild
add
sub
ret
and
outs
call
cmc
(bad)
jmp
not
dec
dec
add
and
mov
icebp
aaa
lods
test
jge
dec
mov
int3
inc
dec
scas
cmp
out
les
loop
fsub
or
cmps
out
ds
inc
clc
fs
dec
dec
xor
mov
or
mov
pop
or
(bad)
(bad)
(bad)
jmp
xor
cmp
mov
fistp
sar
xchg
inc
clc
loopne
ror
cmps
(bad)
cmps
mov
mov
(bad)
(bad)
mov
pushf
and
xor
repnz
inc
adc
inc
in
adc
(bad)
(bad)
(bad)
fsubr
or
out
popa
jle
mov
scas
mov
in
fdivrp
(bad)
(bad)
retf
jbe
(bad)
(bad)
call
push
lods
push
sbb
imul
dec
mov
outs
mov
mov
mov
push
mov
mov
sbb
(bad)
(bad)
call
pop
or
xchg
pop
mov
(bad)
lahf
sub
jmp
mov
xchg
out
add
dec
pop
neg
mov
(bad)
cmp
jp
xchg
xchg
cmp
(bad)
(bad)
jmp
mov
or
xor
iret
outs
std
(bad)
aas
clc
daa
xchg
push
add
(bad)
(bad)
(bad)
dec
retf
leave
movs
cmp
pop
popa
sub
push
or
std
ss
cmc
xor
scas
mov
repz
pop
mov
call
cld
jmp
cmps
fiadd
or
iret
std
cmc
cmps
mov
pop
adc
and
icebp
dec
jno
add
ins
fidiv
ss
shr
mov
add
push
sub
call
std
jmp
sahf
jne
daa
int3
(bad)
stos
loope
adc
or
dec
xchg
les
ret
mov
iret
jmp
(bad)
fild
jmp
mov
jmp
nop
out
pop
pop
jne
(bad)
(bad)
call
in
jge
xor
iret
test
mov
lock
lea
xchg
hlt
xchg
mov
or
and
das
and
or
pusha
cmp
call
ins
mov
or
imul
jg
ja
jmp
cmp
push
mov
test
mov
inc
(bad)
(bad)
(bad)
call
mov
ja
shl
imul
mov
imul
std
leave
mov
call
sub
push
pop
mov
sub
dec
fild
cmc
or
jns
adc
fcomip
jmp
mov
sbb
or
pusha
dec
cmp
rcl
addr16
cdq
sahf
in
stos
adc
and
cmp
cmps
not
and
xchg
mov
mov
jl
jb
mov
lods
xor
shl
(bad)
(bad)
dec
lock
push
sbb
cmp
and
inc
sbb
cmp
inc
cmp
mov
ret
lahf
cmp
(bad)
(bad)
push
fdivr
cmp
jp
mov
rol
mov
push
cwde
mov
cmps
cmps
jmp
movs
xchg
add
mov
(bad)
call
inc
dec
inc
add
or
or
fwait
test
sub
pop
inc
sub
stos
or
mov
ret
shl
mov
xchg
dec
xchg
adc
inc
dec
adc
call
inc
cmp
(bad)
sbb
or
sub
pop
dec
dec
sub
shl
imul
inc
cmp
mov
jmp
and
jo
dec
add
pop
pop
cmp
sahf
les
pop
inc
inc
fadd
ret
push
cld
mov
cld
cmp
dec
adc
xchg
add
sbb
rol
(bad)
xor
(bad)
(bad)
jmp
push
inc
mov
adc
inc
xchg
adc
retf
push
icebp
inc
pop
add
or
cmp
adc
push
dec
(bad)
(bad)
(bad)
push
sbb
(bad)
xor
mov
fwait
jecxz
dec
xchg
(bad)
sbb
xchg
fld
call
jmp
jnp
adc
daa
pop
cdq
loopne
fst
scas
mov
stos
cmp
movs
hlt
enter
(bad)
(bad)
clc
add
out
xchg
addr16
jbe
xchg
or
out
sub
cli
jnp
and
xor
rcl
repnz
in
adc
(bad)
(bad)
call
inc
les
adc
pop
mov
fwait
xor
cwde
fwait
out
push
mov
out
rcr
hlt
(bad)
(bad)
jmp
fiadd
pop
xlat
sahf
add
js
ds
mov
cmps
arpl
pushf
loopne
add
popf
sub
dec
popa
fstp
loop
mov
leave
sbb
aas
and
std
call
sub
mov
popf
sbb
fldcw
mov
inc
sub
retf
(bad)
(bad)
(bad)
inc
or
or
out
or
or
das
js
(bad)
(bad)
call
stc
push
mov
scas
out
test
xor
mov
inc
inc
ret
adc
mov
cmps
retf
push
in
out
mov
dec
movlps
adc
stos
or
jg
ja
(bad)
(bad)
(bad)
dec
es
or
xchg
movs
adc
and
inc
aaa
sbb
das
lock
(bad)
(bad)
inc
or
aas
cmp
push
mov
mov
sbb
mov
sub
xchg
pop
icebp
(bad)
call
inc
xchg
or
xor
inc
push
and
xchg
sub
push
pushf
les
(bad)
(bad)
call
xor
movs
jp
mov
pop
xor
ret
push
sub
dec
xor
(bad)
(bad)
(bad)
jmp
popf
push
cwde
jg
test
(bad)
jmp
das
pop
mov
push
push
(bad)
mov
dec
or
je
inc
pop
add
movs
stos
imul
fnsave
(bad)
(bad)
(bad)
inc
fcmovnb
ret
jne
and
add
es
(bad)
pop
imul
jg
jge
mov
das
fs
push
ret
adc
movs
dec
mov
push
xchg
outs
mov
pop
jg
add
(bad)
inc
fs
xlat
or
je
ret
cmc
sbb
jp
push
iret
or
test
sbb
sub
test
or
out
popa
adc
call
(bad)
in
adc
mov
pop
adc
and
jmp
pushf
sub
loop
pop
outs
aaa
inc
clc
daa
jl
xor
sbb
(bad)
(bad)
(bad)
cmp
mov
shrd
mov
cmpxchg
xchg
push
in
scas
jb
cmc
neg
(bad)
(bad)
call
mov
in
cmp
inc
sub
xchg
mov
adc
push
(bad)
inc
pop
(bad)
in
sbb
pushf
lods
test
(bad)
(bad)
cmp
ss
fwait
add
mov
inc
xchg
fld
scas
jecxz
xchg
imul
sbb
mov
adc
(bad)
(bad)
call
shr
sbb
aam
jbe
frstor
jns
div
xlat
push
mov
hlt
lock
ja
(bad)
push
adc
aaa
outs
iret
ja
dec
iret
mov
pop
dec
movs
adc
dec
mov
(bad)
inc
cmp
or
inc
rcl
xchg
dec
lods
mov
pop
dec
cmc
push
fsub
(bad)
idiv
std
test
lock
cld
call
lock
sti
out
idiv
cmp
lock
lahf
clc
(bad)
jl
mov
ins
sbb
(bad)
out
adc
mov
mov
adc
daa
adc
cld
(bad)
out
sbb
push
push
fs
xchg
fstp
jmp
push
mov
in
fnstcw
iret
push
dec
push
dec
xor
clc
pop
arpl
(bad)
mov
and
mov
daa
fwait
jbe
jo
or
jns
mov
push
(bad)
(bad)
(bad)
call
jmp
test
inc
lea
mov
xor
cmp
jo
xor
mov
inc
or
xchg
retf
retf
fcmovne
addr16
ja
ja
sar
(bad)
push
stos
mov
jmp
push
inc
cmps
jnp
jmp
into
call
imul
pop
push
cmp
stos
jle
dec
bound
dec
pop
test
dec
out
std
push
push
cmp
mov
bound
dec
stc
shr
sub
call
jbe
(bad)
sub
cld
dec
popa
popf
cmp
mov
pop
push
jmp
ins
(bad)
call
rcr
mov
fcmovnu
pop
inc
rcl
enter
in
lahf
lahf
sbb
fst
jno
add
ret
push
in
xchg
adc
inc
pop
sbb
out
mov
ret
xchg
cmp
or
retf
adc
xchg
(bad)
(bad)
(bad)
jmp
daa
cmc
inc
xchg
xchg
test
sub
adc
mov
jae
push
dec
add
pusha
xor
(bad)
(bad)
cmp
mov
shl
in
sbb
mov
lahf
test
loopne
xchg
scas
pushf
add
push
std
inc
loope
mov
jbe
mov
aad
ss
shl
(bad)
(bad)
(bad)
jmp
loopne
adc
lods
mov
mov
js
adc
mov
rcr
cdq
fstp
pop
push
(bad)
(bad)
(bad)
call
push
add
ins
ja
nop
xchg
add
push
ret
cmp
test
inc
aam
and
loopne
(bad)
jmp
jno
retf
sbb
sub
or
or
(bad)
(bad)
mov
adc
ret
cmp
pop
adc
lods
cld
loopne
enter
push
jb
push
sbb
xlat
sub
clc
mov
sub
icebp
in
(bad)
fcomip
jg
test
ffreep
push
and
mov
call
pop
outs
iret
rcr
adc
(bad)
(bad)
jmp
dec
lds
inc
cmp
xor
rcl
ret
xor
out
(bad)
iret
(bad)
(bad)
(bad)
call
xor
ret
xor
ret
cmp
mov
pop
inc
aaa
rol
dec
mov
(bad)
(bad)
(bad)
call
inc
xor
enter
inc
dec
rol
cld
xchg
lock
pop
ret
aas
das
es
add
sub
lock
xor
(bad)
jg
mov
cmp
movs
xchg
dec
dec
add
nop
adc
mov
and
(bad)
(bad)
call
inc
pop
cli
retf
pop
mov
lods
or
mov
adc
jb
jmp
(bad)
(bad)
(bad)
jmp
or
adc
pop
add
mov
dec
fdiv
clc
mov
lea
push
(bad)
(bad)
dec
push
mov
or
pop
add
xlat
ret
pop
mov
mov
sar
jecxz
in
sub
stos
lods
(bad)
sbb
sti
je
into
inc
push
das
push
xor
pop
out
cmp
fdivr
call
xchg
cld
je
cvtps2pd
or
lock
(bad)
call
push
ret
das
inc
push
push
popa
or
les
call
cmp
(bad)
pop
mov
mov
fwait
pop
push
sbb
outs
call
fs
(bad)
call
adc
pop
push
adc
das
mov
sbb
ins
jmp
imul
test
(bad)
(bad)
(bad)
(bad)
aas
rcl
fdiv
ror
iret
inc
adc
ror
xchg
cmps
outs
cdq
xchg
mov
push
pop
(bad)
(bad)
(bad)
call
bnd
outs
aaa
push
ret
(bad)
ror
jae
nop
loope
cs
jns
pop
pop
jmp
(bad)
dec
and
jmp
or
inc
hlt
adc
(bad)
mov
sub
es
push
dec
leave
cmp
xchg
cmc
out
cmp
xor
cmps
lea
cwde
sbb
and
and
add
jg
sahf
ret
icebp
and
(bad)
(bad)
(bad)
mov
jmp
or
push
lock
inc
ret
fdivr
loopne
popf
dec
loop
sbb
out
and
(bad)
call
shr
sbb
push
popf
movs
cmp
ss
adc
(bad)
(bad)
jmp
xchg
xchg
push
or
lods
jmp
ret
xchg
(bad)
daa
mov
ds
inc
adc
sbb
mov
pop
add
imul
sub
pop
retf
inc
(bad)
(bad)
(bad)
call
sar
lea
sub
add
sub
xor
cmp
mov
sub
aad
sbb
mov
ss
or
inc
(bad)
lock
cli
jle
push
push
inc
dec
mov
xor
inc
adc
ins
pop
and
cmps
mov
mov
das
mov
adc
gs
neg
retf
xchg
repnz
(bad)
pop
test
lock
adc
mov
push
sub
push
data16
(bad)
(bad)
(bad)
call
sub
into
xchg
lahf
mov
mov
lea
ficomp
lock
mov
jae
dec
(bad)
inc
(bad)
pop
pop
aaa
mov
stos
xor
daa
lahf
cli
shl
arpl
movs
fwait
out
mov
mov
int
std
ds
mov
jbe
sub
loop
scas
mov
pop
js
mov
mov
(bad)
xchg
push
or
sbb
mov
test
loope
aaa
call
push
dec
xor
out
jl
(bad)
(bad)
(bad)
out
mov
sub
imul
jbe
in
out
mov
cli
mov
add
dec
xchg
pop
(bad)
pop
mov
ins
mov
mov
movs
(bad)
fidiv
and
push
dec
xchg
dec
xor
mov
pushf
cmp
scas
pop
lock
(bad)
aas
cmc
in
daa
dec
lock
inc
push
push
or
sub
or
ucomiss
jmp
ret
aad
xchg
jl
(bad)
mov
(bad)
pusha
shr
(bad)
dec
lea
pop
mov
(bad)
call
aas
mov
rol
xchg
les
push
sub
not
aaa
pop
and
mov
(bad)
jle
sbb
out
mov
jmp
in
pop
fnstcw
dec
or
loop
(bad)
push
in
ret
iret
lahf
cmp
sub
mov
iret
dec
push
(bad)
xchg
jmp
mov
(bad)
(bad)
mov
mov
sub
iret
daa
into
ds
js
test
(bad)
(bad)
mov
std
mov
mov
int3
sbb
dec
pop
push
jnp
sbb
xchg
jae
pop
shr
pop
add
jmp
sti
xlat
adc
je
rol
(bad)
jg
repnz
push
cmps
data16
xchg
inc
jp
mov
dec
sub
ds
imul
mov
jo
in
jl
cs
dec
out
pop
xor
(bad)
(bad)
(bad)
(bad)
dec
push
cmp
adc
mov
sbb
retf
xchg
lods
int3
mul
push
(bad)
call
scas
pop
fdivr
or
xchg
out
pop
mov
cdq
into
cmp
outs
xchg
sbb
jne
fadd
adc
jo
das
and
push
mov
mov
cbw
xor
(bad)
(bad)
jg
inc
cmps
in
push
rol
push
mov
adc
push
adc
lods
in
(bad)
mov
push
shl
adc
out
les
or
jmp
pop
std
mov
or
dec
lock
xor
xchg
(bad)
aaa
sar
jg
push
mov
or
sahf
aas
cwde
push
adc
add
sub
jmp
mov
or
dec
mov
dec
bound
fwait
aas
cld
aam
jmp
pop
adc
cmp
gs
inc
test
clc
(bad)
(bad)
jmp
inc
enter
or
and
mov
and
push
imul
mov
adc
pop
mov
movs
or
push
out
add
data16
(bad)
(bad)
call
cdq
(bad)
inc
ret
mov
bound
sbb
xchg
adc
call
test
shr
in
cwde
and
inc
xchg
add
mov
mov
mov
adc
ror
(bad)
ret
and
loop
(bad)
(bad)
jmp
das
jo
mov
xchg
dec
cmps
adc
cld
popf
push
fs
mov
sbb
call
or
add
fisttp
adc
cs
es
xchg
dec
sub
sub
or
ret
or
dec
ror
jb
fbld
add
mov
xchg
pop
or
(bad)
(bad)
jmp
sbb
jmp
repz
imul
scas
mov
(bad)
(bad)
(bad)
(bad)
push
pop
data16
mov
popa
add
xor
gs
(bad)
call
xor
pusha
mov
cld
add
nop
icebp
and
push
mov
in
(bad)
xchg
lods
sahf
cwde
mov
aam
dec
pop
into
mov
(bad)
movs
add
nop
into
sar
test
(bad)
mov
push
mov
ja
push
ficomp
cmp
cdq
je
fnstcw
dec
jb
movs
push
stos
mov
xchg
and
(bad)
dec
loopne
ss
mov
data16
jb
sbb
mov
or
xor
jns
outs
inc
(bad)
outs
and
jnp
mov
call
loope
jmp
mov
push
out
icebp
movs
adc
fldcw
mov
(bad)
call
cli
jo
cmp
jns
cld
psrad
dec
out
xchg
addr16
cmp
and
jb
(bad)
(bad)
(bad)
inc
pop
cdq
add
dec
retf
jno
and
xor
adc
or
mov
sbb
mov
(bad)
fcmovnbe
push
xor
les
and
push
test
sub
adc
or
and
jmp
shl
sub
add
mov
(bad)
(bad)
call
push
nop
mov
repnz
inc
jle
jmp
mov
(bad)
(bad)
jmp
adc
adc
jl
sbb
sub
lods
xor
outs
cdq
mov
clc
ds
push
sub
les
xor
(bad)
inc
ret
or
ins
shl
fbld
stos
xchg
mov
leave
and
das
xlat
dec
(bad)
mov
cli
and
cli
and
xchg
cmp
hlt
mov
(bad)
lock
cmp
or
int
dec
inc
(bad)
(bad)
(bad)
jmp
rcr
call
in
lods
repnz
cmp
and
dec
sub
std
scas
(bad)
mov
bnd
fnsave
pop
cmp
test
not
push
or
ds
call
jae
aam
ins
and
push
ins
sub
(bad)
(bad)
call
rol
out
mov
pushf
std
(bad)
(bad)
jge
rcl
(bad)
call
shr
inc
test
push
call
sbb
fbstp
cmp
fnsave
addr16
push
mov
pop
lock
(bad)
fs
outs
jmp
pop
mov
jmp
iret
mov
(bad)
call
cmp
idiv
repz
iret
jge
sti
neg
ins
xchg
in
popf
jnp
push
inc
ja
hlt
sar
add
xor
lea
push
jp
mov
sti
jne
mov
(bad)
push
mov
ror
aas
jo
aad
ficom
fist
jb
lods
pop
jp
cmp
cmc
(bad)
leave
inc
push
mov
idiv
pop
sti
(bad)
(bad)
(bad)
jmp
adc
gs
xor
js
lods
fwait
(bad)
outs
mov
xchg
out
or
mov
nop
sbb
enter
(bad)
(bad)
call
mov
into
sahf
sub
cs
sub
mov
jns
icebp
jbe
das
mov
je
fnstenv
dec
xlat
shl
or
mov
sbb
sbb
or
(bad)
jmp
push
sahf
push
xchg
inc
(bad)
add
or
pop
mov
nop
popa
inc
lahf
adc
inc
mov
xchg
pop
ds
div
fcos
das
mov
arpl
or
pop
std
(bad)
(bad)
out
fwait
jbe
add
ss
(bad)
mov
xor
mov
jns
push
jae
test
fldenv
push
call
imul
jo
dec
(bad)
(bad)
(bad)
mov
jae
cmps
icebp
shr
cdq
neg
popa
in
push
mov
in
mul
loop
jmp
push
inc
dec
out
fdiv
(bad)
push
retf
mov
adc
push
jne
cmp
cmp
shl
add
rcl
int
call
imul
(bad)
cmp
jmp
xor
jne
xchg
imul
ror
(bad)
(bad)
jmp
gs
je
fldenv
arpl
nop
mov
out
in
xchg
inc
push
(bad)
call
adc
add
xchg
fwait
ja
ja
sub
sub
fs
imul
ds
cmp
ins
aas
adc
(bad)
call
mov
dec
int
in
inc
adc
xchg
xchg
adc
sbb
mov
(bad)
(bad)
jmp
mov
mov
jmp
xor
gs
sub
pop
jo
cmps
jns
(bad)
(bad)
(bad)
dec
jmp
aas
mov
push
daa
or
enter
test
shl
and
sar
(bad)
push
jp
add
imul
test
mov
xchg
ret
jb
(bad)
call
js
adc
and
jg
jno
add
xchg
xor
(bad)
(bad)
fist
push
cmp
xchg
(bad)
repz
outs
repnz
or
sbb
popa
fst
ins
pop
pop
mov
or
inc
cld
sub
rol
(bad)
cmps
mov
mov
(bad)
(bad)
push
movs
mov
test
xor
inc
fadd
sbb
lahf
jb
push
cld
(bad)
(bad)
jmp
arpl
mov
and
shl
es
pop
mov
std
call
and
adc
les
xchg
shr
inc
and
add
mov
stc
inc
(bad)
and
xor
call
cmp
and
and
(bad)
mov
leave
sbb
icebp
(bad)
(bad)
inc
inc
jae
outs
mov
ret
push
sub
jbe
push
jmp
pop
or
jmp
or
das
or
das
xor
imul
pop
inc
pop
dec
mov
xchg
cs
xor
(bad)
inc
movs
idiv
mov
aas
push
data16
sub
xor
jns
xchg
(bad)
mov
out
mov
cvttps2pi
xchg
add
push
pop
jp
and
or
outs
mov
pop
add
rcr
cld
(bad)
(bad)
fdivr
push
mov
add
adc
xor
mov
(bad)
(bad)
call
les
mov
arpl
cld
iret
repnz
outs
xchg
mov
mov
dec
inc
js
pushf
dec
inc
sub
or
mov
call
leave
sub
sahf
call
and
cmp
imul
movaps
sub
pop
jge
mov
jo
ss
movs
or
stos
or
jl
push
(bad)
cmp
(bad)
(bad)
jg
aad
stos
push
xlat
(bad)
mov
dec
(bad)
adc
inc
pop
int3
(bad)
xor
and
(bad)
(bad)
push
dec
lahf
add
rol
vsqrtss
inc
add
pop
(bad)
mov
ja
add
jmp
and
fstp
fidiv
mov
add
dec
adc
(bad)
mov
inc
fwait
xchg
dec
sub
syscall
sahf
cmp
adc
ret
(bad)
jg
xor
lea
add
pop
loopne
adc
mov
fbstp
mov
xor
mov
(bad)
(bad)
inc
inc
xchg
and
or
inc
pop
arpl
pushf
dec
ins
xlat
and
ret
cmp
pop
lock
sub
test
pop
inc
lods
xor
mov
xchg
push
inc
pusha
cmp
popa
popa
mov
or
(bad)
pop
lea
sub
mov
adc
(bad)
(bad)
(bad)
jg
imul
cwde
sahf
mov
popf
mov
dec
cs
dec
lods
sar
(bad)
inc
test
imul
xchg
add
(bad)
jns
mov
add
(bad)
(bad)
jg
pop
movs
test
fidivr
or
(bad)
ficomp
sbb
cdq
sahf
add
idiv
cs
pushf
pop
pop
sbb
dec
adc
pop
jb
(bad)
(bad)
(bad)
jg
jp
cwde
outs
dec
arpl
pushf
sub
mov
out
out
lods
mov
push
addr16
into
in
fcomip
(bad)
call
or
mov
and
ror
jns
and
ror
mov
jbe
je
ja
mov
sub
pop
cmp
and
sub
fild
test
das
jg
pop
icebp
jg
add
lock
xbegin
(bad)
fnsave
(bad)
call
(bad)
stc
pop
pop
xchg
inc
mov
dec
jge
das
fdivr
retfw
int
shl
rol
(bad)
dec
std
std
aas
cmp
dec
stos
cld
ret
nop
sbb
(bad)
and
mov
mov
(bad)
dec
mov
dec
or
gs
jle
int
xchg
jge
sti
aas
mov
pop
out
popf
mov
in
dec
mov
xor
xchg
jge
out
shr
or
jge
pop
xor
cwde
js
arpl
(bad)
(bad)
(bad)
dec
nop
test
inc
pushf
or
aam
adc
neg
mov
gs
adc
mov
sub
push
(bad)
(bad)
(bad)
dec
cmp
arpl
and
lea
inc
fbld
cmp
(bad)
test
dec
ins
jmp
test
cmp
(bad)
fild
and
inc
inc
or
in
pop
sbb
test
xchg
and
mov
cmp
inc
pop
sti
aad
scas
xchg
in
dec
cmc
push
mov
mov
aas
xchg
(bad)
out
(bad)
(bad)
mov
pop
push
data16
inc
std
pop
inc
mov
stos
aaa
shrd
iret
dec
xlat
adc
(bad)
(bad)
push
das
pushf
js
test
jne
cmps
aas
and
rcr
xchg
cmps
sbb
jmp
(bad)
(bad)
jmp
inc
je
(bad)
jmp
xor
aas
jl
and
cdq
mov
push
aas
cmp
and
mov
bnd
leave
sbb
(bad)
and
xchg
xchg
in
lods
mov
dec
(bad)
pushf
xor
ss
dec
stos
mov
pop
jmp
cld
fsubr
dec
shl
(bad)
jmp
stos
out
fistp
xchg
mov
test
cmp
or
loope
into
cdq
inc
es
jl
enter
add
mov
mov
xor
lds
repnz
inc
lahf
sub
sbb
(bad)
(bad)
(bad)
mov
push
jnp
ret
popf
dec
push
aaa
mov
not
pushf
sbb
mov
adc
xor
stos
mov
stos
push
aam
push
and
inc
inc
int
dec
sub
add
dec
xor
inc
addr16
(bad)
mov
in
pop
push
jno
movs
add
popa
mov
ret
scas
(bad)
(bad)
inc
mov
pop
inc
mov
addr16
sub
adc
mov
(bad)
adc
mov
enter
dec
sub
lock
pop
(bad)
call
mov
sbb
adc
push
push
sbb
xlat
pusha
cmp
in
(bad)
call
lods
sub
dec
jns
mov
jns
clc
ret
mov
call
xchg
test
inc
sub
sbb
pop
repnz
mov
xor
repnz
or
mov
clc
sub
sbb
in
lock
xor
pop
pusha
cmp
mov
out
in
adc
or
les
out
pop
inc
retf
outs
sbb
pop
xor
xchg
addr16
(bad)
(bad)
(bad)
inc
push
sti
arpl
dec
shl
xchg
ds
and
sub
adc
push
xchg
adc
and
sar
add
out
popa
dec
mov
push
cmps
pusha
push
stos
(bad)
fcomip
dec
mov
mov
or
retf
xchg
cmc
and
mov
bound
fucomi
(bad)
(bad)
out
mov
or
mov
and
and
jb
(bad)
(bad)
(bad)
(bad)
jmp
sbb
jae
sbb
fs
fdivr
icebp
das
shl
(bad)
dec
pop
adc
or
mov
cwde
jns
add
cmp
bound
cld
call
mov
aad
ja
out
movs
cld
loopne
sub
sbb
sbb
scas
clc
(bad)
inc
mov
xor
mov
fidivr
jecxz
pop
inc
cmp
popa
ficomp
or
or
movs
iret
sti
shl
stos
movs
js
popf
fucomip
ins
cld
add
shr
call
dec
(bad)
mov
gs
idiv
(bad)
(bad)
cmp
cmp
test
mov
test
mov
movs
and
(bad)
cmp
test
sbb
add
mov
psubb
inc
mov
call
ins
cmps
ins
push
data16
in
add
addr16
or
inc
push
xchg
mov
(bad)
(bad)
(bad)
inc
ret
sbb
test
cmp
or
jmp
aam
pusha
(bad)
call
sbb
ja
or
cmp
sub
inc
gs
js
imul
mov
(bad)
(bad)
(bad)
std
nop
leave
jmp
xchg
stos
add
retf
mov
fcom
jo
mov
scas
(bad)
(bad)
(bad)
jmp
pushf
add
enter
mov
mov
dec
mov
mov
stos
adc
push
(bad)
(bad)
(bad)
call
out
clc
dec
push
lock
xchg
es
add
fimul
push
jmp
cld
pop
jnp
inc
jno
xchg
xchg
fwait
xchg
jecxz
mov
jnp
add
push
jmp
pop
xchg
sub
xor
push
retf
cmp
or
push
push
and
sbb
fnstsw
mov
scas
popf
cwde
(bad)
(bad)
(bad)
(bad)
mov
pop
and
jns
mov
cmp
dec
mov
inc
lods
fs
push
loopne
(bad)
fmul
sbb
adc
pop
movs
jp
repnz
push
enter
mov
imul
adc
xchg
enter
rol
mov
push
jbe
bound
and
jne
in
les
into
adc
jbe
fs
cmp
mov
(bad)
jmp
mov
mov
cmc
pop
pop
dec
data16
fisttp
cmps
(bad)
(bad)
cs
xchg
mov
(bad)
(bad)
jmp
repz
mov
je
mov
xchg
mov
lahf
jl
xchg
imul
dec
inc
mov
aaa
lahf
and
add
jmp
pop
rcr
inc
cwde
pushf
cmp
int3
(bad)
cmps
push
jl
(bad)
(bad)
(bad)
(bad)
mov
mov
push
xor
jmp
mov
je
lock
mov
mov
(bad)
(bad)
call
xor
call
scas
jnp
in
mov
(bad)
iret
xor
repnz
iret
sub
or
add
and
xlat
out
aas
repz
xor
mul
bound
(bad)
(bad)
jmp
mov
lock
adc
mov
fcom
push
push
sahf
shl
outs
mov
(bad)
(bad)
fisub
adc
push
call
and
jg
arpl
inc
xchg
inc
movs
imul
lock
imul
test
repz
js
neg
jmp
push
xchg
imul
push
(bad)
adc
call
xchg
dec
cmp
mov
jle
imul
xchg
mov
push
(bad)
jg
movs
and
add
sub
cli
ja
push
adc
push
dec
fs
fsub
je
and
daa
ret
clc
pop
xchg
mov
jmp
aas
das
clc
(bad)
call
das
and
jo
imul
fimul
jmp
inc
shr
(bad)
clc
xor
in
gs
dec
in
into
push
pop
sahf
(bad)
or
std
movs
ja
outs
xchg
shl
nop
sbb
dec
pop
in
(bad)
mov
out
gs
and
mov
xchg
nop
fs
js
mov
jle
outs
(bad)
inc
mov
ds
repnz
cmp
lock
sub
mov
mov
icebp
jp
lods
ds
aas
pop
aam
in
and
jmp
(bad)
dec
call
test
loope
sbb
cld
ja
pop
adc
das
cli
(bad)
jmp
cmp
test
(bad)
int3
jmp
int
adc
xchg
fisttp
inc
xor
inc
jae
mov
xor
xchg
call
out
cmc
test
mov
xor
movs
mov
int
aad
add
fimul
int
neg
outs
(bad)
(bad)
(bad)
jg
dec
inc
sub
pushf
imul
adc
lds
mov
repz
fldcw
mov
and
(bad)
call
jmp
push
daa
mov
js
cmps
jmp
ja
(bad)
cdq
xchg
pop
adc
dec
fisubr
lods
mov
(bad)
(bad)
(bad)
dec
push
bound
mov
popa
pop
ins
movups
push
bound
fadd
mov
(bad)
(bad)
(bad)
jmp
xlat
inc
and
retf
out
inc
loopne
inc
inc
sahf
xchg
pop
cs
(bad)
cmc
xchg
adc
pop
out
inc
(bad)
(bad)
(bad)
call
push
popf
(bad)
cdq
jbe
or
push
push
push
lods
dec
mov
adc
xor
clc
(bad)
dec
shl
iret
xchg
sub
push
and
cdq
aas
push
inc
pop
mov
sub
(bad)
rol
(bad)
(bad)
pop
or
popf
cmp
cmp
dec
(bad)
jno
add
xchg
xchg
cmc
adc
int3
ret
inc
(bad)
(bad)
(bad)
jmp
shl
mov
inc
mov
mov
dec
int3
stos
loopne
fcomp
add
xor
gs
inc
xchg
xchg
adc
daa
mov
jo
jo
pop
loop
dec
repz
(bad)
(bad)
inc
or
adc
(bad)
retf
mov
dec
or
mov
xlat
xchg
fbstp
mov
lock
add
mov
or
jp
movs
fimul
xchg
ins
(bad)
jbe
mov
or
jmp
packsswb
mov
in
jb
push
inc
dec
pop
jl
lds
xor
sbb
add
and
loopne
xchg
aaa
mov
sub
(bad)
push
data16
movs
or
xor
push
out
aam
int3
stc
and
scas
clc
(bad)
jg
push
mov
sbb
call
ficom
mov
(bad)
repz
(bad)
(bad)
(bad)
(bad)
stc
mov
jbe
jle
jb
stos
jno
data16
pusha
add
retf
jnp
(bad)
(bad)
(bad)
mov
(bad)
call
out
pop
mov
lds
mov
cmp
call
(bad)
call
ins
call
fstp
xlat
rcr
in
pop
mov
scas
push
retf
jmp
jmp
fs
(bad)
div
inc
xchg
jl
sub
pop
(bad)
(bad)
(bad)
push
or
sbb
pusha
jmp
cs
push
dec
sub
inc
mov
mov
(bad)
lock
jp
sbb
mov
retf
(bad)
cli
(bad)
(bad)
jmp
dec
or
xchg
jmp
mov
sub
sahf
addr16
outs
dec
jmp
mov
data16
and
fwait
add
sub
xchg
out
jmp
(bad)
call
mov
pop
pusha
add
pop
mov
and
mov
js
lea
inc
jno
(bad)
(bad)
call
pop
inc
mov
inc
adc
cmc
je
repz
pop
mov
fwait
jo
jge
(bad)
mov
dec
mov
mov
sbb
lahf
ss
scas
test
daa
add
sbb
inc
jmp
xchg
cmc
pop
(bad)
(bad)
(bad)
dec
dec
and
ret
pop
or
cmp
enter
and
(bad)
(bad)
call
iret
gs
inc
cmps
es
das
movs
stos
ins
aas
jo
inc
sub
add
or
or
inc
lods
xor
jp
push
xchg
inc
(bad)
jbe
push
sbb
stos
pop
pusha
arpl
cmp
sar
(bad)
jmp
jle
fwait
out
mov
test
mov
test
mov
sbb
pop
mov
jg
iret
popf
sahf
sahf
sbb
dec
enter
sub
jle
sub
clc
jmp
test
sbb
jno
adc
and
int
xlat
jg
(bad)
adc
idiv
(bad)
jmp
sbb
jne
cdq
movs
pop
jb
push
movs
jmp
sub
cmps
sub
(bad)
(bad)
mov
nop
scas
inc
mov
push
xlat
iret
shr
pop
test
xchg
or
std
int
(bad)
shr
clc
fldenv
fistp
inc
sbb
inc
inc
jae
(bad)
and
test
jbe
(bad)
(bad)
jmp
in
(bad)
jecxz
call
jp
es
retf
mov
push
mov
call
(bad)
(bad)
(bad)
sti
in
cli
mov
mov
jnp
stos
push
cmc
outs
pop
mov
cmp
hlt
push
lods
fidiv
jmp
sbb
sar
fwait
pop
jns
into
in
js
jmp
(bad)
and
fistp
fld
cli
aaa
outs
pop
mov
(bad)
(bad)
(bad)
inc
inc
lock
arpl
arpl
hlt
in
jmp
stos
xor
dec
cmp
fadd
(bad)
(bad)
(bad)
push
mov
aad
mov
dec
neg
mov
mov
repz
(bad)
mov
sar
shr
sbb
sub
xchg
sbb
(bad)
mov
rep
mov
and
dec
sahf
repnz
(bad)
call
mov
push
(bad)
xor
fiadd
jl
sti
ret
mov
(bad)
(bad)
call
inc
fimul
bound
jmp
dec
mov
idiv
xchg
rcl
pop
leave
xchg
rol
call
jmp
xor
nop
rep
cmp
jge
jl
rcl
mov
shl
stc
leave
aas
popf
pushf
cmp
call
outs
pop
adc
out
sar
call
xor
ins
rcl
(bad)
call
and
and
inc
mov
call
xchg
dec
stos
and
outs
sar
int3
pop
push
and
fcomp
js
xchg
stc
jns
icebp
inc
push
(bad)
inc
mov
jle
je
inc
mov
pop
xlat
jae
stos
mov
adc
(bad)
(bad)
call
push
fs
add
jo
mov
push
ja
mov
pop
(bad)
repnz
sar
dec
mov
pop
shr
xchg
and
fst
jno
iret
adc
imul
push
xor
(bad)
(bad)
(bad)
call
sahf
aaa
pop
fistp
mov
les
lods
out
push
sahf
ret
xor
addr16
pushf
imul
inc
loopne
push
idiv
(bad)
in
repnz
cli
mov
cdq
(bad)
(bad)
(bad)
call
push
dec
or
leave
inc
xchg
pop
xchg
sbb
xchg
and
cmp
or
(bad)
push
or
in
dec
mov
lea
jne
adc
sbb
push
(bad)
(bad)
(bad)
call
ja
mov
fcmove
and
dec
mov
shr
xchg
inc
pop
pop
mov
cmp
fcomip
call
mov
cmc
stos
imul
cmp
clc
lea
ss
jnp
jg
inc
shr
retf
std
and
scas
inc
or
mov
push
mov
sbb
inc
jmp
dec
imul
(bad)
out
fidivr
push
stos
data16
add
movs
adc
ret
sub
mov
jne
(bad)
(bad)
inc
outs
loop
push
dec
frstor
(bad)
and
adc
ret
test
cmp
jae
imul
je
mov
cmp
loope
mov
xor
clc
enter
jno
in
(bad)
(bad)
(bad)
jmp
fs
dec
and
(bad)
cmp
outs
dec
sub
fld
mov
xchg
add
mov
(bad)
(bad)
(bad)
in
pop
mov
and
jns
jne
pop
mov
test
mov
cmps
sub
add
out
pop
(bad)
(bad)
dec
je
push
jb
xchg
sahf
dec
mov
lock
xchg
shl
das
sar
in
sbb
in
xchg
ins
mov
jno
out
inc
ds
adc
imul
push
nop
fs
xchg
push
aaa
pop
movs
cli
push
(bad)
pop
push
call
(bad)
(bad)
(bad)
push
mov
pop
loopne
push
mov
cmps
sub
fsubr
addr16
and
lods
pop
(bad)
mov
(bad)
(bad)
jmp
aas
mov
push
cmp
or
push
dec
xor
(bad)
jl
adc
cmp
push
mov
pop
bound
add
cs
je
push
and
push
add
inc
jmp
mov
inc
imul
add
in
or
jo
and
cli
repz
lods
pop
adc
je
cmp
stos
mov
inc
adc
cmp
aam
pop
ja
mov
mov
iret
add
int3
(bad)
jmp
xchg
imul
and
cmp
pop
hlt
push
cs
push
xchg
xor
jmp
inc
addr16
fcmovne
gs
js
lock
fimul
das
call
cmp
mov
push
(bad)
(bad)
mov
and
cmc
jmp
leave
(bad)
(bad)
call
and
mov
sbb
leave
dec
or
aaa
sub
dec
or
dec
sar
(bad)
lods
inc
enter
add
cwde
push
add
in
ds
(bad)
(bad)
jmp
inc
repz
mov
xor
xor
aad
pop
mov
addr16
inc
adc
test
mov
inc
popa
ds
xlat
repnz
fild
popa
call
mov
fs
mov
dec
fs
sbb
in
add
push
hlt
and
pop
std
dec
lock
nop
sbb
inc
sub
daa
xchg
or
xchg
sbb
add
std
mov
cmp
push
popa
fist
jp
shl
cmp
mov
(bad)
ins
xchg
mov
repz
(bad)
(bad)
(bad)
(bad)
sti
and
shl
lock
sbb
mov
shr
jecxz
pop
lds
ins
scas
add
jmp
stos
jmp
dec
les
loop
(bad)
(bad)
(bad)
jmp
fs
mov
and
push
les
jns
outs
fdiv
(bad)
inc
xchg
adc
jne
ret
inc
sti
mov
or
xchg
inc
arpl
jmp
mov
mov
mov
aaa
(bad)
jg
push
xor
cmp
and
add
mov
sbb
ja
pop
dec
adc
aam
imul
pop
rcl
xchg
inc
test
push
icebp
(bad)
(bad)
(bad)
cld
imul
sbb
or
ins
cmp
or
dec
mov
mov
mov
xor
retf
dec
xchg
lods
sbb
cmp
(bad)
(bad)
call
adc
fnsave
lds
(bad)
das
mov
pop
imul
push
in
int3
jge
les
sbb
(bad)
call
div
jecxz
repz
xor
gs
or
stc
mov
jp
aad
in
(bad)
xlat
mov
(bad)
(bad)
jmp
mov
xor
adc
retf
out
das
ds
push
cmc
fwait
les
mov
stos
xchg
(bad)
push
stos
cmp
(bad)
add
fnstcw
(bad)
cmps
mov
popf
dec
in
mov
(bad)
cmp
add
test
mov
sbb
rol
or
ret
pop
pop
ret
add
cmp
jmp
cld
inc
fnstsw
jg
aam
aas
hlt
out
scas
fld
cdq
xor
mov
(bad)
call
xchg
ds
outs
test
int
sahf
adc
inc
or
sbb
or
fmul
mul
(bad)
mov
sti
sahf
sub
cmp
ins
pop
out
and
aam
cli
mov
dec
in
cdq
xchg
pop
sar
and
mov
data16
(bad)
(bad)
jmp
mov
mov
mov
repz
div
jg
adc
xchg
and
jmp
push
das
inc
inc
into
scas
pop
mov
in
xchg
xchg
mov
lods
int
cmps
(bad)
(bad)
(bad)
jg
jg
xchg
push
mov
sbb
test
imul
mov
sbb
std
jmp
xor
jg
(bad)
fnstsw
push
out
repz
mov
mov
inc
xchg
hlt
loope
ja
(bad)
(bad)
(bad)
push
mov
das
xchg
daa
lods
leave
pop
mul
pop
cmp
fadd
leave
push
sub
cmps
(bad)
(bad)
(bad)
inc
jae
outs
in
std
cli
xchg
jmp
mov
pusha
add
dec
pop
dec
mov
jnp
(bad)
jmp
clc
push
xor
(bad)
jg
mov
aas
stc
fs
out
(bad)
stc
imul
(bad)
lods
jge
ja
jmp
leave
inc
(bad)
leave
or
mov
sbb
retf
in
dec
adc
mov
fcomp
dec
mov
cmc
xchg
sub
cmp
int3
pop
mov
je
(bad)
inc
dec
and
pop
scas
push
sbb
dec
aaa
das
mov
rcl
or
ret
dec
into
or
enter
mov
push
push
mov
fs
popf
pushf
cs
sbb
repnz
std
pop
int
pusha
std
out
inc
pop
sub
shl
xchg
loop
jecxz
leave
push
ret
in
cwde
pop
dec
jge
jb
pop
scas
icebp
sub
(bad)
(bad)
jmp
or
jp
cmp
aas
and
iret
jo
out
cmps
(bad)
and
enter
sbb
jmp
(bad)
bound
push
hlt
add
popa
mov
dec
push
lods
mov
shr
sahf
dec
icebp
dec
and
je
jo
or
push
adc
(bad)
dec
(bad)
inc
sub
cmp
add
jmp
push
(bad)
(bad)
inc
sub
jno
inc
jbe
ret
or
mov
xchg
mov
popa
jns
push
daa
out
js
cdq
mov
mov
add
or
mov
scas
add
cli
mov
out
shl
lahf
sbb
je
cmps
test
fwait
aaa
push
sbb
lods
cli
and
icebp
inc
mov
dec
inc
int
in
(bad)
dec
mov
movs
or
fdiv
ins
jmp
popa
loopne
and
or
push
aas
dec
push
xor
mov
jl
ficom
sub
push
sbb
xchg
adc
push
jecxz
mov
(bad)
sbb
or
clc
(bad)
(bad)
jmp
pop
aas
jmp
push
add
inc
mov
in
daa
xchg
dec
(bad)
(bad)
jmp
clc
inc
xchg
and
xchg
adc
or
stos
inc
ja
xor
(bad)
(bad)
jmp
outs
(bad)
shl
call
and
loope
je
jp
push
jbe
add
pop
movs
and
(bad)
(bad)
mov
pushf
inc
sub
ret
mov
call
pop
adc
scas
cli
test
lock
xchg
mov
int3
bound
xchg
rcl
mov
jmp
(bad)
call
xchg
cs
ret
retf
or
cmps
repz
cmp
inc
push
dec
rcl
jbe
(bad)
out
xchg
xor
ret
adc
in
pop
pop
jo
test
jb
mov
(bad)
push
dec
popf
mov
in
push
repz
arpl
inc
sub
xchg
je
jp
(bad)
jmp
jl
popa
imul
and
mov
mov
aad
call
mov
dec
push
jnp
pop
cmp
sar
scas
cli
jmp
push
cwde
dec
or
mov
call
mov
push
(bad)
dec
dec
mov
mov
xor
cdq
add
in
pop
pop
ds
int3
and
movs
(bad)
(bad)
(bad)
(bad)
dec
sub
push
test
dec
jl
add
je
retf
pminsw
lds
mov
pop
cmp
mov
xchg
retf
jbe
aam
ffreep
and
jmp
test
int
mov
call
ds
pop
test
xchg
das
pop
push
repz
leave
pop
and
mov
(bad)
int
push
xchg
stos
(bad)
call
movs
inc
pusha
js
mov
imul
cmp
add
sbb
or
adc
fild
out
mov
aam
(bad)
(bad)
(bad)
call
mov
push
inc
test
arpl
enter
or
jmp
xchg
mov
sar
(bad)
(bad)
jmp
or
loop
dec
inc
sbb
sbb
push
xor
fdivr
and
dec
xor
adc
fstp
dec
inc
sar
les
pushf
xor
cmp
sub
in
fs
loope
mov
rcl
mov
cdq
dec
or
adc
dec
inc
mov
jne
in
xor
les
pop
sub
ja
inc
or
xlat
sbb
jge
call
outs
mov
jae
xor
inc
sub
mov
sbb
call
cmp
xor
sbb
fistp
sbb
cmp
pop
cmp
mov
jge
out
push
pop
stos
jmp
(bad)
(bad)
fild
es
loopne
inc
sahf
jg
dec
adc
mov
jmp
mov
dec
clc
(bad)
(bad)
call
aaa
out
cmps
fdiv
and
jbe
or
mov
or
adc
(bad)
jmp
stos
xor
lods
sti
mov
jns
out
push
push
(bad)
(bad)
jb
scas
aad
(bad)
push
cdq
icebp
test
jb
mov
cmp
mov
(bad)
(bad)
out
add
out
ficomp
adc
pop
loop
and
cmp
rcr
mov
(bad)
(bad)
(bad)
(bad)
jnp
xor
out
sti
lds
mov
inc
cmp
xchg
ja
xor
fdivr
(bad)
mov
and
mov
add
add
xchg
in
jne
(bad)
(bad)
dec
pop
mov
push
adc
imul
mov
cmps
xor
ret
inc
popf
cmp
jg
(bad)
jg
lods
jmp
inc
outs
mov
sub
imul
dec
mov
das
movs
xlat
sub
cmp
test
jle
add
sbb
ins
fistp
clc
(bad)
stc
mov
stc
(bad)
jecxz
pop
sub
loopne
adc
ss
(bad)
jmp
ins
mov
push
jne
fdivr
jge
ins
pop
scas
ret
or
js
cmp
pop
test
mov
aaa
(bad)
loope
dec
jmp
sub
or
(bad)
push
scas
into
and
nop
ficomp
cdq
pushf
cwde
retf
xlat
pop
dec
test
cmp
ret
(bad)
scas
pop
mov
jbe
(bad)
(bad)
call
pop
pop
fnstcw
ins
scas
retf
mov
mov
jl
out
je
repz
retf
cmp
jns
(bad)
(bad)
call
add
sbb
clc
or
(bad)
adc
ror
nop
leave
xor
repnz
(bad)
push
(bad)
(bad)
(bad)
push
mov
call
ror
or
mov
dec
es
cmp
outs
test
push
je
jp
mov
mov
cmp
in
loopne
sahf
push
clc
(bad)
(bad)
(bad)
call
ja
rol
pop
fstp
xor
mov
data16
mov
call
popf
pop
xchg
adc
xlat
xchg
mov
fisubr
aam
push
mov
mov
jg
fcmovnbe
jmp
jmp
daa
mov
mov
(bad)
(bad)
jg
push
test
icebp
ins
push
cmp
adc
cmp
add
cld
call
cmps
cmp
jp
jbe
(bad)
out
or
pop
push
dec
push
sub
out
pop
(bad)
jg
add
and
pop
jnp
test
(bad)
mov
push
adc
retf
in
es
adc
imul
call
mov
jae
in
mov
div
cmps
mov
jnp
popa
push
idiv
das
push
std
sbb
aam
inc
xlat
fcom
rol
lods
inc
or
pushf
out
and
and
sbb
cmc
mov
jg
adc
mov
mov
cmp
mov
je
fwait
sub
(bad)
(bad)
(bad)
(bad)
jge
div
std
retf
push
in
fcomp
pusha
hlt
(bad)
shl
mov
lods
int3
hlt
les
ret
mov
cmps
dec
out
mov
call
shl
mov
(bad)
out
call
(bad)
call
cli
(bad)
cmps
push
pop
and
add
xor
scas
adc
nop
enter
(bad)
(bad)
jg
fldcw
(bad)
cmovne
fs
imul
sbb
das
pop
inc
(bad)
sub
sub
pushf
les
push
xor
mov
dec
adc
push
cld
mov
je
cdq
call
add
and
cwde
test
mov
adc
dec
jno
add
scas
pop
pop
daa
inc
jnp
movs
jp
fisub
push
popf
pop
loop
dec
bound
pop
rol
inc
xchg
dec
mov
cmps
call
(bad)
addr16
das
sub
test
lds
(bad)
jmp
mov
cld
sar
out
(bad)
or
push
xor
lock
in
(bad)
in
jmp
sub
sub
dec
dec
xchg
retf
(bad)
jno
mov
call
adc
sub
addr16
loopne
shl
nop
nop
sub
push
call
(bad)
dec
shl
(bad)
fidivr
cmp
(bad)
cmps
fldcw
push
xor
(bad)
push
mov
or
(bad)
cli
int
xor
cmp
mov
push
shl
sub
pop
cmc
and
pop
dec
lods
dec
jmp
iret
(bad)
outs
out
shl
mov
lods
jbe
lods
(bad)
mov
sub
add
jecxz
push
and
add
xchg
cld
xchg
nop
rcr
(bad)
inc
or
je
call
fadd
fst
lods
mov
mov
jmp
(bad)
dec
into
mov
movs
cwde
repnz
and
into
dec
mov
sti
std
ds
ds
(bad)
(bad)
(bad)
(bad)
fst
scas
push
add
jnp
sar
loop
scas
retf
call
outs
cmps
pop
lahf
jl
add
(bad)
(bad)
jmp
cld
repz
jne
out
ins
or
test
xlat
add
sbb
xor
fcomip
add
inc
jo
jae
mov
pop
dec
outs
mov
es
push
add
cmp
jno
xor
pop
mov
aas
out
ins
iret
out
ja
data16
(bad)
(bad)
mov
add
les
out
ficomp
call
enter
cmc
in
add
(bad)
fs
test
sti
aas
push
jae
or
pop
(bad)
(bad)
(bad)
push
rdpmc
das
loopne
aaa
cmp
pop
jp
sub
retf
xor
pop
(bad)
(bad)
(bad)
inc
push
mov
movs
pop
ss
stos
jp
push
mov
push
rol
inc
inc
dec
loop
mov
dec
push
retf
sbb
push
ret
or
or
push
nop
push
add
and
js
(bad)
dec
lds
push
icebp
lock
pop
sub
adc
sar
pop
ud0
inc
add
push
xor
mov
mov
and
or
(bad)
(bad)
call
in
push
mov
inc
call
test
scas
xchg
add
mov
bound
mov
pop
fisttp
pop
(bad)
(bad)
dec
jmp
jmp
or
stos
stos
push
pop
(bad)
rcl
jnp
(bad)
(bad)
inc
sub
mov
dec
pop
add
imul
push
sahf
shl
sub
(bad)
jg
stos
cmp
iret
data16
xchg
push
mov
dec
test
sbb
aas
or
repz
call
imul
hlt
(bad)
(bad)
dec
add
sbb
and
jb
xor
sbb
cli
pop
mov
(bad)
(bad)
call
cli
xor
inc
push
and
jne
mov
fsubr
sbb
nop
and
push
cmp
mov
mov
icebp
mov
and
jp
(bad)
fild
xchg
dec
lods
lahf
test
and
xor
ds
cmc
cmp
mov
xlat
sub
jb
addr16
mov
scas
leave
dec
add
or
inc
pop
mov
push
cmc
leave
xchg
pusha
shl
mov
pusha
ret
gs
out
cli
outs
test
push
dec
rol
and
xchg
inc
(bad)
(bad)
(bad)
call
xchg
inc
push
mov
into
xchg
push
push
pop
or
and
loope
dec
shl
call
mov
enter
and
scas
jmp
(bad)
into
loope
jmp
cmp
addr16
adc
(bad)
(bad)
cs
sub
out
call
call
fidiv
inc
loop
arpl
add
mov
pop
xor
push
retf
cli
jmp
in
and
sbb
ins
in
inc
mov
jmp
(bad)
(bad)
(bad)
(bad)
(bad)
adc
dec
sub
mov
fsubr
cmp
fcmovbe
cmps
inc
pop
cli
(bad)
jge
jne
cmp
imul
or
(bad)
(bad)
jg
stc
pop
cmp
inc
js
mov
aad
inc
imul
mov
jne
(bad)
(bad)
in
call
mov
aad
ror
push
scas
inc
loope
push
jmp
jp
jl
add
dec
and
jb
mov
pop
fstp
(bad)
mov
fdivr
sbb
add
enterw
jmp
push
mov
xlat
adc
(bad)
(bad)
(bad)
call
pop
mov
xchg
lods
add
push
fs
(bad)
repz
add
imul
push
cld
fnsave
jb
sbb
fs
or
sub
cmps
push
sbb
(bad)
(bad)
(bad)
fstp
movs
sti
(bad)
cmp
cld
stos
pop
cmp
ins
push
lock
shld
or
push
fsub
das
pop
ficomp
push
outs
mov
clc
pop
fcomp
jmp
mov
push
fidiv
rcl
call
(bad)
call
aas
popf
or
pop
es
sbb
les
push
sbb
push
mov
xor
pop
(bad)
(bad)
(bad)
dec
inc
add
mov
pop
lock
xlat
mov
jmp
icebp
ret
outs
xor
(bad)
(bad)
jmp
xchg
scas
fist
movs
rcl
mov
movq
in
pop
push
pop
cmp
jo
(bad)
dec
lea
neg
je
test
mov
stos
std
(bad)
(bad)
mov
sbb
leave
movs
out
jmp
call
(bad)
shl
adc
jle
ja
lahf
adc
pushf
cmp
mov
(bad)
(bad)
(bad)
(bad)
mov
adc
leave
sbb
mov
repz
icebp
add
mov
push
push
scas
pop
fnstcw
outs
xchg
sahf
jl
cwde
sub
mov
mov
mov
(bad)
(bad)
(bad)
push
sti
outs
pop
jg
cli
adc
mov
cmp
mov
inc
sti
push
mov
adc
aad
add
adc
jo
jo
loop
popf
outs
(bad)
(bad)
(bad)
jmp
adc
rol
imul
xchg
adc
xlat
sub
xor
lds
(bad)
jg
call
xor
and
mov
rcl
lahf
outs
(bad)
(bad)
(bad)
jmp
cs
mov
cdq
stos
popa
mov
and
prefetchw
mov
lock
(bad)
(bad)
call
jne
pop
and
jae
repnz
scas
out
mov
cs
jno
repz
jbe
retf
mov
div
mov
xchg
inc
jno
sbb
push
(bad)
call
cmp
adc
push
inc
xor
adc
(bad)
(bad)
dec
push
cmps
mov
imul
xchg
push
mov
xchg
icebp
xchg
outs
inc
mov
call
dec
cmp
push
adc
fld
jns
leave
sbb
(bad)
(bad)
jmp
mov
fild
xor
inc
or
imul
mov
call
call
enter
add
rcl
adc
push
xchg
and
sub
clc
(bad)
jg
std
mov
push
mov
jl
xchg
mov
push
cld
sub
jg
pop
dec
push
test
dec
cmp
ret
cmp
(bad)
clc
(bad)
scas
mov
movs
and
add
xor
sub
out
jle
es
je
mov
pop
push
lds
outs
and
(bad)
inc
leave
out
push
mov
or
pop
or
pop
ret
(bad)
(bad)
(bad)
out
and
inc
(bad)
fcomp
inc
mov
mov
and
push
sub
push
fistp
xchg
movs
mov
scas
mov
add
je
div
sub
je
inc
adc
jl
sbb
xlat
inc
inc
sbb
(bad)
jmp
hlt
and
rcl
(bad)
mov
(bad)
call
aaa
bound
and
inc
adc
sbb
cs
mov
jns
mov
jmp
div
jge
xchg
arpl
push
aam
xchg
or
pop
push
add
imul
mov
(bad)
dec
lods
popa
or
mov
stos
push
je
mov
inc
adc
stos
dec
ins
adc
mov
mov
mov
sub
(bad)
(bad)
dec
push
lods
adc
mov
sbb
jno
addr16
adc
push
(bad)
(bad)
jns
xchg
adc
dec
cmp
jge
mov
daa
mov
js
inc
mov
bound
or
jbe
out
jl
add
(bad)
stc
push
fs
xchg
mov
lods
mov
jmp
xchg
mov
outs
push
addr16
push
shl
into
icebp
ss
(bad)
(bad)
inc
push
adc
add
mov
push
mov
inc
sub
je
test
jg
lds
and
jae
fnstenv
sub
fnstenv
fucomip
or
(bad)
jmp
sub
loope
and
adc
test
retf
push
jge
(bad)
call
inc
hlt
sub
cmps
or
mov
aas
(bad)
rcl
ins
std
push
cld
cld
ret
aas
stc
loope
push
pop
adc
rcl
fdivrp
mov
ret
mov
adc
sti
mov
les
xor
sub
rcl
int3
rcr
fs
fcmovbe
mov
or
sar
(bad)
(bad)
call
jne
dec
movs
repz
ins
cs
retf
sbb
lea
popa
cmp
mov
dec
dec
loopne
add
mov
popf
mov
sbb
mov
loope
dec
dec
shl
mov
(bad)
(bad)
jl
ins
ret
test
sbb
or
aas
mov
in
pusha
push
xor
les
push
je
add
(bad)
jmp
push
pop
mov
add
adc
loopne
xor
test
cmp
mov
and
push
js
and
ds
add
pop
js
jmp
cmp
(bad)
call
sub
retf
inc
movs
cmp
repz
or
mov
mov
push
jne
imul
cmp
jmp
cmps
fcmovbe
stos
cmp
adc
adc
mov
fstp
mov
jmp
dec
(bad)
mov
xchg
add
mov
mov
call
or
xor
add
add
inc
(bad)
(bad)
(bad)
(bad)
jle
push
jo
sub
out
(bad)
nop
lds
dec
adc
xor
or
jmp
shr
pop
dec
dec
call
or
out
call
shl
dec
pop
adc
bound
out
js
shl
push
std
dec
ss
xor
mov
add
inc
pop
call
push
fst
rcl
lock
(bad)
jmp
fistp
push
retf
inc
mov
push
and
ret
mov
pop
mov
arpl
fild
cli
jl
cmc
rol
jns
mov
(bad)
cmp
push
xor
xchg
cmps
pop
es
xchg
adc
sbb
xchg
jg
outs
aas
(bad)
mov
jecxz
les
data16
int3
movs
pop
or
fdiv
das
adc
mov
ins
sub
(bad)
(bad)
jmp
push
leave
fs
shr
repz
jns
push
iret
test
pop
jbe
rcl
push
in
out
out
call
inc
std
out
add
(bad)
icebp
mov
addr16
das
scas
and
call
lea
imul
pushf
push
mov
scas
in
push
(bad)
out
(bad)
mov
imul
sbb
pop
jae
dec
mov
push
aaa
sbb
xor
jge
imul
popf
ja
add
xor
push
(bad)
jmp
lods
(bad)
jge
xchg
cmp
mov
xchg
das
pop
mov
push
adc
(bad)
(bad)
fcmovnu
fnstcw
ins
out
jg
loope
cmc
test
add
int
pop
(bad)
fisttp
add
add
call
inc
jge
push
sub
sbb
scas
dec
mov
adc
and
call
pushf
and
lods
es
lock
mov
scas
(bad)
(bad)
(bad)
(bad)
mov
add
sbb
push
or
shl
neg
data16
push
push
cs
jmp
jae
in
pop
cli
div
neg
(bad)
(bad)
(bad)
mov
std
in
jmp
out
popa
cld
lar
in
(bad)
pop
mov
mov
push
adc
add
(bad)
call
iret
pop
outs
xlat
sub
mov
fs
mov
test
sbb
mov
out
scas
add
xchg
(bad)
(bad)
(bad)
jg
jp
pop
popf
loopne
sub
push
fsqrt
adc
pop
leave
(bad)
ret
mov
(bad)
(bad)
mov
jo
stos
loopne
xchg
fmul
(bad)
or
jno
mov
jo
fmul
(bad)
(bad)
call
aaa
daa
dec
mov
imul
sahf
sbb
mov
jmp
(bad)
(bad)
(bad)
dec
mov
dec
xor
aad
bound
clc
pushf
mov
jo
push
fdiv
cld
lahf
pop
fisub
cmps
cmc
jmp
sbb
cmps
loope
xor
dec
mov
(bad)
(bad)
(bad)
jmp
xor
jnp
ins
leave
xchg
xchg
das
mov
les
cdq
xor
xor
cmps
cdq
push
push
dec
cmp
xchg
in
sub
clc
call
sub
add
mov
dec
mov
mov
mov
pop
call
or
icebp
pop
xor
lods
(bad)
xor
sub
mov
inc
cs
mov
lds
and
nop
test
popaw
mov
dec
mov
mov
xchg
outs
or
(bad)
(bad)
call
pop
cmp
popa
jecxz
in
retf
sbb
cmp
test
inc
push
push
xor
fwait
es
sbb
or
mov
mov
(bad)
(bad)
(bad)
jmp
push
pusha
add
or
add
(bad)
sti
xchg
(bad)
ja
pop
xor
or
(bad)
call
hlt
jns
outs
dec
sahf
shr
mov
or
adc
out
(bad)
(bad)
fild
lock
stos
push
xchg
addr16
fistp
dec
sbb
ds
(bad)
(bad)
call
mov
loopne
mov
addr16
pop
jae
(bad)
pop
mov
dec
or
dec
ja
(bad)
(bad)
dec
jl
retf
sub
push
(bad)
jne
inc
(bad)
jmp
mov
cmp
test
(bad)
(bad)
call
sbb
xchg
pop
fisubr
je
xchg
jne
sub
shl
dec
cmps
(bad)
aad
(bad)
(bad)
inc
sbb
push
jae
dec
and
pop
xchg
div
add
sub
stos
xabort
mov
loopne
pop
mov
enter
loope
xchg
gs
adc
sahf
dec
mov
retf
sbb
hlt
jmp
popf
xor
cmp
lock
les
or
or
(bad)
(bad)
(bad)
inc
movs
fidiv
ds
mov
and
out
test
stos
sahf
push
mov
shr
pop
push
inc
lods
add
popf
pop
shl
in
pop
hlt
rol
(bad)
xor
int3
dec
push
dec
mov
dec
sub
shl
out
inc
neg
fbstp
(bad)
(bad)
dec
sub
and
cld
adc
mov
and
cld
mov
lods
bound
(bad)
(bad)
(bad)
push
lock
and
or
mov
mov
outs
and
or
adc
mov
pop
pop
les
inc
(bad)
(bad)
inc
out
xchg
aaa
iret
sbb
movs
(bad)
or
popf
inc
add
lock
gs
(bad)
push
pop
xchg
call
jp
or
adc
and
mov
mov
lea
adc
xor
push
adc
aaa
push
lea
add
cmp
in
pop
test
or
pop
sub
imul
xchg
(bad)
in
scas
mov
in
fnsave
(bad)
(bad)
(bad)
push
mov
ror
pop
sub
jne
jmp
sahf
retf
leave
push
test
jno
cli
js
scas
cli
(bad)
jmp
pop
xchg
mov
das
ins
jle
bound
push
mov
mov
test
push
pop
cli
mov
fxch
dec
cmp
ss
add
call
(bad)
(bad)
inc
adc
ins
or
or
in
stc
jl
fwait
add
pop
inc
mov
out
clc
mov
ror
push
add
jp
fisubr
mov
and
mov
push
and
inc
add
mov
iret
hlt
mov
pop
ret
push
nop
mov
add
fcos
scas
cli
inc
jl
shl
loope
inc
pop
jno
retf
push
xchg
mov
ss
adc
(bad)
(bad)
(bad)
(bad)
js
icebp
add
lods
adc
push
xlat
ret
mov
test
inc
jbe
sub
mov
mov
pop
jnp
cmc
inc
xor
shl
mov
into
adc
cli
(bad)
(bad)
inc
mov
sub
xor
push
cmp
lock
imul
sbb
das
aaa
(bad)
call
in
pushf
add
mov
pop
lods
in
fcomi
cmps
(bad)
rcr
sub
jmp
and
sbb
test
test
mov
not
lods
and
in
test
add
push
xor
xor
sub
or
mul
sub
sti
out
aad
(bad)
(bad)
(bad)
(bad)
cli
cmp
jmp
cld
cdq
cmp
ret
inc
and
xchg
out
(bad)
std
pop
mov
fstp
xchg
test
std
jmp
dec
loop
push
cld
(bad)
push
lahf
mov
add
mov
push
xchg
in
adc
arpl
(bad)
(bad)
(bad)
call
test
ja
pusha
and
clc
fnsave
aad
adc
mov
es
call
sbb
lods
ds
int
in
lahf
(bad)
(bad)
(bad)
(bad)
cmp
out
cwde
dec
mov
pop
adc
jmp
xchg
ss
xchg
mov
xor
pop
jo
inc
std
push
mov
xchg
dec
sub
push
call
cld
inc
imul
xor
push
imul
test
ds
(bad)
(bad)
(bad)
(bad)
out
popf
mov
repz
or
iret
lea
mov
sub
cs
pop
out
sbb
(bad)
xchg
inc
(bad)
fbstp
cmp
mov
ja
stc
push
(bad)
(bad)
(bad)
inc
std
into
pop
outs
mov
or
mov
sub
call
loope
or
jno
movs
fwait
(bad)
(bad)
jnp
cmp
loope
cmp
mov
cmp
and
jg
or
retf
(bad)
mov
icebp
push
adc
out
mov
mov
mov
leave
shr
call
idiv
cmp
or
(bad)
bound
sub
mov
inc
adc
jg
dec
out
(bad)
inc
xchg
repnz
xchg
inc
popf
jecxz
sub
sbb
sbb
(bad)
(bad)
dec
rol
in
dec
repz
nop
mov
mov
loopne
and
xchg
test
out
adc
icebp
(bad)
jg
dec
dec
outs
fistp
fcom
ret
jecxz
aaa
pop
jns
adc
fwait
je
sti
(bad)
inc
inc
mov
xchg
jo
mov
or
xchg
push
mov
cmc
lahf
idiv
(bad)
(bad)
jle
call
mov
cmp
cmp
jns
shl
xlat
mov
(bad)
(bad)
jmp
dec
cmp
inc
arpl
cmps
sbb
sub
sub
jp
sti
mov
jmp
inc
lahf
mov
xchg
add
scas
sbb
pop
lods
xchg
fdiv
(bad)
dec
and
adc
dec
sub
sub
pop
fbstp
mov
or
jns
(bad)
mov
paddusb
(bad)
jg
jl
lock
push
xor
and
fwait
add
mov
clc
push
dec
shr
call
jl
test
sahf
(bad)
(bad)
jg
pop
xor
add
and
stc
dec
loope
pop
sub
je
push
(bad)
(bad)
(bad)
call
or
jmp
sbb
(bad)
and
into
in
and
dec
mov
jmp
int3
aaa
ss
add
adc
adc
stc
jb
xchg
cmps
sbb
pop
outs
cmp
out
(bad)
(bad)
(bad)
(bad)
jnp
sub
inc
or
sbb
sub
push
iret
mov
mov
mov
dec
pusha
jle
mov
pop
cs
push
addr16
xchg
int
jbe
add
sub
mov
inc
push
xor
xlat
mov
or
push
ss
(bad)
(bad)
call
in
mov
mov
add
xor
cdq
inc
gs
cwde
push
lods
lods
mov
cmps
fs
mov
or
bound
(bad)
jmp
loop
into
mov
inc
dec
mov
aaa
add
mov
push
inc
inc
or
inc
std
(bad)
(bad)
call
push
jb
sbb
or
inc
sbb
dec
ja
sti
jg
xchg
(bad)
dec
into
pop
mov
ret
mov
leave
push
add
xchg
dec
in
push
xchg
mov
dec
cmp
(bad)
retf
xchg
push
sub
clc
cmp
jno
mov
ror
ds
call
cdq
or
js
and
out
das
aam
pusha
cmp
push
jne
ffree
js
(bad)
(bad)
(bad)
dec
js
movs
push
out
inc
or
test
mov
xchg
and
enter
fisub
(bad)
fcomip
inc
pop
add
test
sti
sbb
int3
fcomp
push
test
inc
stos
(bad)
(bad)
push
std
or
iret
in
ret
push
xchg
sbb
jecxz
mov
jb
sahf
xchg
adc
push
add
rcr
pop
add
dec
add
pop
and
push
es
pop
dec
cli
(bad)
(bad)
jmp
je
div
add
fbstp
mov
adc
inc
nop
xchg
add
(bad)
(bad)
out
ins
adc
scas
fdivr
lahf
jmp
or
xchg
pop
inc
mov
fucomip
and
sub
pop
out
jp
call
push
adc
xchg
imul
stos
ss
xchg
adc
cwde
or
cs
(bad)
pop
push
sti
jne
pop
dec
sub
add
fadd
sbb
mov
mov
sbb
jae
(bad)
mov
sar
push
out
jle
push
inc
push
out
jl
je
cmp
fld
iret
jns
jmp
mov
xor
jae
jge
pop
lods
jne
out
add
or
adc
call
pop
pop
mov
or
add
popf
adc
or
sbb
adc
rcl
pop
push
sbb
fcos
(bad)
(bad)
dec
and
cmp
sbb
and
xor
and
test
xchg
or
mov
add
inc
stos
jnp
sbb
sbb
jo
adc
(bad)
(bad)
mov
arpl
call
lock
push
mov
sbb
lds
lock
retf
xchg
pop
pop
imul
data16
(bad)
jg
mov
(bad)
fs
xlat
hlt
ins
mov
sub
mov
mov
movs
mov
push
xchg
ins
push
xor
arpl
lods
aam
(bad)
sbb
jne
sti
push
and
dec
mov
into
xor
add
push
sub
pop
hlt
(bad)
dec
and
or
outs
push
repz
sbb
repz
push
(bad)
(bad)
(bad)
dec
jmp
mov
inc
ds
sar
mov
aad
(bad)
adc
sbb
(bad)
jmp
push
pop
or
ret
ret
sbb
jmp
pop
add
or
mov
stos
lods
mov
mov
div
ret
sbb
xchg
jbe
arpl
sbb
(bad)
(bad)
(bad)
call
movs
ja
jg
cmps
ins
jg
(bad)
das
lea
dec
clc
sbb
mov
(bad)
(bad)
(bad)
jmp
lds
inc
call
mov
or
ret
mov
push
xchg
push
addr16
in
fdivr
add
(bad)
call
dec
inc
les
cmp
add
mov
(bad)
loopne
pop
mov
(bad)
loope
hlt
jns
fwait
(bad)
call
lock
pop
dec
movs
adc
push
gs
pushf
outs
fidiv
movs
fstp
(bad)
jg
sub
jnp
test
ja
and
or
pop
jg
rcl
xchg
(bad)
cmp
repnz
mov
and
jbe
cmp
push
add
adc
cli
call
dec
test
sub
stos
das
pop
mov
stc
xchg
sub
jecxz
or
mov
and
mov
xchg
out
cli
xlat
aas
(bad)
repnz
arpl
icebp
push
lock
imul
add
(bad)
call
sbb
adc
mov
xchg
or
out
push
mov
dec
dec
xchg
push
pop
jle
jmp
imul
scas
push
sti
push
add
pushf
out
popa
or
adc
(bad)
push
je
adc
jno
dec
add
rcr
inc
xor
(bad)
(bad)
call
in
cmc
push
inc
sbb
cmps
shl
fcos
mov
mov
(bad)
fs
mov
loope
(bad)
(bad)
(bad)
(bad)
(bad)
sti
mov
pop
mov
xor
(bad)
xlat
mov
sbb
mov
(bad)
call
cmps
in
movs
or
jae
cwde
push
(bad)
movs
push
and
les
cld
(bad)
out
xor
cmp
add
cli
add
(bad)
inc
push
add
push
or
cld
out
mov
jb
int
pop
(bad)
repz
sbb
mov
das
mov
clc
mov
or
dec
lea
das
add
retf
test
aaa
or
scas
clc
cmc
or
outs
(bad)
fimul
cs
(bad)
jmp
mov
shl
ret
or
adc
(bad)
(bad)
call
jecxz
jne
call
std
inc
(bad)
push
fnstcw
hlt
mov
cs
jmp
jecxz
jmp
jb
fistp
(bad)
mov
out
lahf
sti
enter
in
(bad)
mov
inc
mov
pop
fbstp
shr
pop
arpl
rcr
shr
jmp
aas
out
mov
icebp
out
inc
fscale
sti
sub
(bad)
(bad)
jmp
jmp
mov
les
dec
dec
jno
sub
(bad)
(bad)
jecxz
mov
fisttp
jmp
pop
out
or
shl
jae
push
mul
add
adc
pop
fwait
inc
aam
lds
inc
mov
xchg
fstp
(bad)
(bad)
(bad)
in
push
stos
mov
mov
xor
pop
pop
pop
sar
adc
es
arpl
inc
cmp
jmp
icebp
ret
jnp
bound
(bad)
sbb
cld
inc
cli
shl
jmp
(bad)
(bad)
push
and
mov
ret
mov
add
ficomp
fdivrp
pop
cmp
adc
xchg
mov
daa
jb
dec
mov
or
fs
and
(bad)
fsqrt
pop
lea
mov
jns
xchg
div
out
jne
les
sub
je
push
(bad)
dec
mov
(bad)
(bad)
push
dec
push
out
ror
inc
dec
pop
dec
out
xor
fisubr
je
mov
daa
push
dec
mov
jmp
mov
(bad)
cmps
add
mov
cmp
cs
out
mov
ins
leave
(bad)
(bad)
(bad)
call
add
jmp
adc
inc
xchg
pop
push
add
or
lods
mov
(bad)
call
xor
adc
scas
push
xchg
mov
test
xchg
aad
push
adc
push
dec
(bad)
(bad)
(bad)
dec
or
and
sbb
inc
add
jp
or
lods
sbb
sar
(bad)
push
(bad)
lods
push
pop
rol
sbb
adc
xor
add
in
(bad)
call
jne
imul
cwde
out
je
inc
ficomp
loopne
dec
sbb
stos
sti
lahf
cmp
(bad)
(bad)
(bad)
(bad)
jmp
push
test
mov
push
stos
mov
cld
sbb
int3
jae
sub
(bad)
inc
stc
xor
sar
or
fcom
nop
cmp
(bad)
(bad)
dec
push
jmp
scas
nop
or
mov
xor
aas
dec
inc
cmp
mov
je
(bad)
(bad)
(bad)
(bad)
cli
sbb
or
cmp
xor
or
pop
adc
sti
imul
cmp
mov
shl
mov
and
lahf
push
push
in
cmc
sbb
or
sub
imul
adc
test
mov
add
dec
mov
push
sub
mov
add
adc
pop
sub
and
cld
iret
call
(bad)
fbstp
daa
call
pop
inc
sbb
mov
or
adc
(bad)
(bad)
jmp
mov
xchg
push
retf
adc
xor
pop
xor
cmps
pop
dec
jge
push
xchg
mov
(bad)
(bad)
(bad)
cmp
enter
sbb
icebp
punpckldq
mov
cld
xor
jno
mov
call
sti
mov
les
cbw
inc
outs
pop
mov
int3
jp
jns
lock
push
std
(bad)
mov
fwait
inc
push
cld
repz
cli
fcomp
cmp
(bad)
call
repnz
pop
xchg
test
xchg
mov
inc
cmp
jge
mul
mov
in
(bad)
(bad)
(bad)
fst
out
xor
xor
rcl
mov
stc
jecxz
es
adc
ret
sub
in
adc
mov
call
imul
mov
mov
retf
xchg
or
pop
adc
call
mov
mov
xor
ror
inc
push
and
test
ret
jne
(bad)
(bad)
call
sub
jae
jl
push
shl
xor
and
sbb
xlat
fwait
call
test
(bad)
(bad)
dec
neg
shl
test
nop
sub
mov
adc
adc
adc
call
loope
(bad)
loopne
loopne
test
mov
ins
mov
add
movs
loop
and
mov
aaa
xor
loope
popf
int
retf
in
or
inc
imul
jns
dec
mov
mov
mov
clc
cmp
dec
and
(bad)
(bad)
(bad)
jmp
(bad)
js
sub
add
sbb
jo
pop
sub
cmp
aaa
std
call
xlat
(bad)
mov
xchg
cmp
and
(bad)
inc
(bad)
cwde
dec
push
movs
fisttp
dec
push
mov
ds
add
(bad)
(bad)
(bad)
jmp
xchg
xchg
pop
inc
nop
cmps
and
sub
mov
pop
loopne
inc
mov
mov
repz
neg
mov
(bad)
(bad)
(bad)
inc
(bad)
stos
lods
fwait
add
pop
mov
loopne
push
mov
paddusw
and
cmp
loop
mov
push
nop
dec
(bad)
fld
push
lods
enter
sub
gs
xchg
dec
retf
movs
sub
inc
xor
mov
pop
lock
mov
(bad)
xchg
mov
pop
mov
test
fldcw
push
mov
mov
iret
dec
pop
inc
hlt
xchg
adc
or
xlat
pop
mov
dec
pop
jae
fcomip
(bad)
call
mov
fldcw
movs
mov
xor
mov
mov
arpl
mov
(bad)
(bad)
push
out
mov
xchg
retf
dec
xor
movs
and
dec
cmp
mov
(bad)
(bad)
push
mov
jg
into
fist
ja
loop
or
dec
pmaxub
mov
sbb
pop
das
push
cmp
(bad)
test
sar
in
inc
fbstp
call
mov
inc
push
add
adc
cmps
lea
inc
push
jg
fcmovnbe
(bad)
(bad)
out
pop
stos
add
fwait
lea
jno
jmp
jmp
dec
add
jl
nop
out
adc
jmp
test
(bad)
(bad)
cmp
ret
adc
pushf
aas
sti
aaa
aas
or
call
out
in
or
xor
nop
loopne
push
and
fwait
jmp
sahf
and
ja
int3
mov
lods
mov
push
pop
ds
sbb
int
sahf
sbb
jl
iret
sbb
dec
dec
dec
(bad)
(bad)
(bad)
call
mov
out
das
push
retf
lds
mov
add
inc
add
push
(bad)
call
sar
daa
movs
rcl
repz
test
mov
ins
fdivr
lock
nop
fbld
sbb
xchg
or
mov
(bad)
push
fsub
sbb
push
push
mov
mov
mov
or
mov
mov
mov
js
mov
clc
(bad)
(bad)
(bad)
jmp
ret
xchg
xor
nop
and
cld
bnd
out
sti
hlt
addr16
enter
(bad)
(bad)
jns
xchg
add
push
mov
xchg
(bad)
jl
nop
inc
pop
sub
gs
(bad)
jg
aad
inc
loopne
xchg
push
clc
jge
jnp
fild
cld
call
mov
and
adc
(bad)
(bad)
inc
adc
mov
arpl
jmp
bound
ja
(bad)
(bad)
mov
xchg
dec
cmp
fs
xchg
mov
out
call
test
xchg
xor
mov
xchg
lock
aaa
dec
loope
dec
fld
sub
push
rcr
jmp
or
dec
mov
(bad)
call
ins
mov
cmp
push
or
mov
ds
les
into
movs
push
mov
dec
test
(bad)
jmp
sbb
adc
int3
leave
jb
and
inc
adc
or
jmp
jo
sbb
dec
sahf
adc
or
test
dec
push
dec
or
fistp
xchg
cmc
out
loopne
add
dec
pop
push
jnp
xchg
and
outs
cmp
push
mov
cmps
imul
inc
sub
and
push
les
xchg
push
jae
leave
mov
dec
cwde
jbe
scas
dec
movs
repnz
imul
shl
jg
xchg
add
inc
xor
loop
call
xchg
inc
ja
add
outs
(bad)
or
xor
jo
sub
jno
xchg
sbb
call
pop
xchg
repz
shl
dec
lods
movs
sbb
jne
(bad)
(bad)
call
cmps
adc
adc
and
adc
movs
dec
movs
sub
add
dec
jbe
lds
push
(bad)
(bad)
(bad)
call
data16
dec
shr
int
cmp
xor
je
mov
and
(bad)
(bad)
(bad)
call
call
neg
fcom
or
mov
imul
mov
dec
sbb
imul
popf
mov
cmp
dec
adc
es
imul
leave
dec
fdivrp
pop
(bad)
push
cmp
shl
mov
and
hlt
call
ret
xor
std
inc
outs
inc
int3
retf
jl
xor
push
dec
fsubr
test
dec
loopne
lock
lods
imul
popa
and
ins
(bad)
dec
fcom
pop
shl
inc
push
jle
test
aas
call
hlt
(bad)
call
pop
add
pop
les
enter
and
gs
xor
xor
mov
(bad)
(bad)
inc
retf
or
and
lods
push
mov
adc
jb
(bad)
call
or
and
xchg
push
push
aad
mov
push
clc
jb
push
add
(bad)
(bad)
dec
(bad)
cmc
inc
fwait
test
inc
dec
or
inc
jns
mov
stc
xor
pop
cmps
pop
lock
aam
adc
scas
cmps
int3
test
jge
or
cmc
cmc
ins
(bad)
(bad)
(bad)
(bad)
cmp
(bad)
fucomi
stos
xor
push
nop
mov
movs
mul
sbb
rol
push
add
push
js
(bad)
(bad)
push
out
cli
rcr
cmps
outs
mov
and
sar
mov
jae
das
test
call
std
gs
popa
xchg
xchg
jl
fdivr
(bad)
(bad)
(bad)
push
xchg
popa
shl
or
cmp
(bad)
push
mov
cld
into
xchg
cmp
jbe
dec
adc
idiv
out
mov
mov
ss
pop
arpl
sbb
cmp
push
ds
mov
ret
inc
mov
mov
retf
fbld
jb
push
xor
shr
(bad)
and
cmp
test
sub
cld
(bad)
call
sbb
dec
pusha
push
and
sahf
loope
add
repnz
(bad)
(bad)
dec
je
test
xchg
adc
or
aaa
push
add
es
cmps
jbe
mov
(bad)
(bad)
push
leave
mov
sbb
ds
imul
das
mov
in
in
sar
(bad)
dec
sbb
mov
addr16
sbb
fstp
imul
fnsave
fs
fsub
push
shl
ror
ret
mov
in
js
iret
mov
ret
and
pop
jb
dec
lock
push
and
movs
or
test
pop
imul
pop
icebp
inc
int
mov
sbb
outs
add
push
arpl
pop
jmp
cmp
(bad)
(bad)
inc
pop
and
sub
mov
movs
jno
cmp
ret
push
jp
js
push
call
push
push
rol
sbb
pop
loope
mov
(bad)
call
stos
sub
cdq
adc
mov
stc
push
push
and
bound
(bad)
(bad)
call
jmp
stc
adc
out
cmp
push
dec
ds
ror
add
sbb
test
test
push
popa
aad
cmp
jecxz
sbb
mov
je
jne
fstp
xor
mov
sbb
mov
je
adc
mov
loop
push
ja
test
cdq
add
dec
leave
out
sbb
loop
leave
call
jmp
fisub
lods
push
xchg
push
shl
cmp
jmp
lock
add
xchg
cli
sub
jmp
dec
push
cmp
xlat
lock
(bad)
inc
pop
add
inc
xor
mov
pop
js
test
sub
(bad)
(bad)
jmp
xor
ret
xlat
lods
jmp
push
push
mov
or
cwde
jmp
mov
pop
call
pop
mov
lds
sub
and
or
pop
mov
push
xchg
jmp
inc
add
je
sbb
(bad)
(bad)
jmp
out
sti
jmp
jmp
push
lahf
sub
dec
push
sub
(bad)
fiadd
jmp
in
pop
fcos
(bad)
(bad)
fbstp
dec
pop
js
cmc
(bad)
fs
and
jge
add
scas
pop
jmp
xchg
(bad)
(bad)
(bad)
dec
xchg
jmp
push
xchg
aad
xor
ret
outs
lahf
jl
xchg
pop
outs
inc
cmc
pop
out
dec
test
(bad)
(bad)
(bad)
call
neg
(bad)
in
sbb
push
and
dec
mov
sbb
xchg
or
push
jmp
push
sub
imul
out
ins
sub
sti
mov
mov
jp
cmp
pop
inc
jae
cld
retf
sbb
(bad)
(bad)
jg
xor
sbb
out
mov
push
and
in
ins
cmp
sbb
pop
push
mov
daa
inc
arpl
push
jl
dec
pop
test
pusha
aad
add
push
scas
xor
and
(bad)
jl
imul
mov
(bad)
(bad)
(bad)
call
js
loope
je
xor
sub
and
imul
mov
mov
adc
test
sbb
nop
ror
cdq
xchg
and
mov
push
(bad)
(bad)
mov
add
call
mov
add
out
mov
(bad)
mov
mov
add
pusha
pop
adc
out
jb
sub
(bad)
(bad)
(bad)
jmp
fucomi
add
mul
aam
and
retf
ins
adc
push
mov
push
push
pushf
aad
mov
fidiv
out
mov
(bad)
dec
(bad)
ins
pop
(bad)
sub
pop
mov
retf
or
neg
mov
icebp
dec
lock
jb
jo
cld
les
mov
leave
jecxz
mov
lods
mov
rol
into
aam
push
inc
aas
xchg
(bad)
(bad)
(bad)
call
adc
inc
cmp
pop
xchg
mov
cmps
xchg
cmc
jne
xchg
mov
push
jle
jnp
arpl
(bad)
(bad)
(bad)
jmp
xchg
add
jnp
jle
enter
sub
adc
xor
aad
cmp
mov
imul
(bad)
(bad)
(bad)
jmp
inc
rcr
push
das
jne
inc
inc
dec
mov
xchg
pop
mov
push
and
stc
(bad)
(bad)
fcomip
xor
and
dec
mov
(bad)
and
movs
pop
gs
aas
cdq
push
xor
(bad)
(bad)
dec
jmp
scas
add
sub
xchg
cmp
mov
sbb
sub
add
movs
stos
sar
(bad)
(bad)
(bad)
call
mov
mov
nop
iret
mov
scas
fwait
mov
mov
dec
jmp
lock
pop
(bad)
call
aad
int3
mov
inc
pop
xchg
fwait
mov
aaa
pop
shl
(bad)
(bad)
arpl
inc
retf
mov
xor
pop
sub
cmc
loope
lods
push
sbb
out
sbb
inc
test
jg
inc
mov
xchg
and
mov
fwait
les
es
es
jmp
mov
xchg
call
push
ror
std
(bad)
(bad)
jmp
and
popa
test
push
xchg
and
mov
cmp
add
inc
gs
push
add
test
dec
adc
retf
adc
dec
jb
cmps
jmp
push
or
pop
xchg
cmc
and
dec
add
call
push
hlt
in
popf
jl
add
xor
test
adc
ss
(bad)
cmp
enter
lds
repz
stos
fmul
or
xchg
xor
mov
call
jmp
or
mov
jl
push
mov
jb
inc
push
mov
cmp
inc
stc
sbb
(bad)
(bad)
push
shl
aaa
sbb
mov
mov
or
jbe
jne
adc
(bad)
push
std
dec
xchg
jbe
daa
fwait
push
mov
and
jl
fcomp
sbb
cmp
ja
lods
stos
es
(bad)
(bad)
(bad)
push
add
jmp
hlt
jl
adc
cdq
push
loope
pop
cmp
enter
xor
cld
loop
jle
daa
mov
xchg
das
retf
retf
jp
sahf
das
sar
repz
lods
ja
mov
mov
push
lods
or
ja
shl
or
mov
clc
jae
cwde
js
xchg
fnstcw
(bad)
(bad)
(bad)
call
push
xor
test
in
jmp
das
lock
(bad)
int3
jge
mov
enter
inc
ret
movs
adc
push
pop
sbb
sahf
jmp
loopne
dec
fidiv
jge
cmps
test
push
add
(bad)
dec
cmps
mov
jl
je
vmovdqu
mov
adc
scas
and
add
(bad)
(bad)
push
jae
mov
dec
push
adc
xor
adc
push
jno
push
ror
(bad)
pop
loop
cmp
retf
into
int
lods
call
add
icebp
lods
push
jg
mov
mov
(bad)
dec
or
inc
sbb
and
popa
aam
and
mov
xchg
lea
(bad)
push
mov
retf
cmc
sbb
mov
sub
inc
ja
dec
pop
outs
scas
ins
bound
adc
jmp
call
fcomp
test
pop
sub
mov
ja
(bad)
(bad)
std
and
pop
cmp
cld
ret
dec
lea
or
cmp
pop
jmp
sbb
inc
icebp
xor
(bad)
(bad)
dec
mov
adc
shl
mov
out
pusha
pop
push
xchg
mov
std
(bad)
call
push
xor
stos
inc
mov
out
sbb
xor
call
call
adc
retf
cmp
sbb
inc
mov
shr
loop
cmps
retf
(bad)
(bad)
(bad)
jmp
cmp
cdq
sub
(bad)
xlat
test
xchg
xor
(bad)
loopne
jp
adc
(bad)
(bad)
(bad)
dec
mov
fnstsw
loope
(bad)
out
rep
mov
addr16
add
xor
lock
push
je
pop
fsub
ret
add
fmul
cld
cli
jne
push
jmp
(bad)
and
ret
xor
idiv
int
inc
add
and
xor
std
(bad)
mov
mov
inc
cmp
retf
mov
(bad)
adc
mov
fstp
cld
(bad)
mov
and
cmps
(bad)
sbb
mov
fidiv
repnz
call
popf
int
cmp
imul
das
mov
jne
repz
scas
scas
std
retf
jecxz
sub
xchg
xchg
stos
repnz
pop
mov
dec
fisubr
sar
loopne
mov
push
out
sbb
rol
or
dec
in
jle
retf
cmps
jg
clc
add
and
fidivr
jge
add
add
ds
mov
lea
or
outs
add
(bad)
(bad)
(bad)
jmp
and
repnz
(bad)
cmps
xchg
(bad)
and
adc
mov
xor
stc
mov
hlt
(bad)
(bad)
(bad)
jmp
cmp
or
dec
adc
xor
daa
cmp
clc
jge
mov
scas
cmp
xchg
int3
repnz
push
lods
mov
(bad)
(bad)
(bad)
(bad)
cmp
jecxz
cmovl
scas
(bad)
(bad)
(bad)
push
aaa
pop
(bad)
jo
push
jge
mov
adc
adc
(bad)
(bad)
call
outs
fidivr
mov
fcmovne
ja
mov
test
(bad)
mov
cmp
inc
mov
(bad)
dec
cmc
pop
js
mov
sahf
cmps
es
test
push
mov
pop
mov
(bad)
mov
push
cmp
in
addr16
dec
jl
xchg
mov
fcmovnu
mov
(bad)
xor
jo
push
enter
call
fsub
inc
add
ja
sahf
cli
cli
xchg
add
pop
cld
mov
(bad)
(bad)
push
imul
mov
jne
push
shl
sbb
mov
mov
(bad)
(bad)
inc
enter
push
mov
das
cmp
fisubr
nop
cs
outs
test
nop
iret
adc
sub
ror
cmp
ds
cmps
(bad)
(bad)
(bad)
dec
inc
adc
ss
and
adc
in
aas
mov
imul
arpl
xchg
int
stc
retf
add
aas
daa
adc
loope
or
(bad)
dec
xchg
sub
add
xchg
dec
stc
push
cmp
test
mov
mov
js
sub
mov
and
hlt
(bad)
call
adc
jmp
mov
and
loop
pop
push
inc
dec
jecxz
cs
(bad)
(bad)
(bad)
fbld
and
xor
jmp
mov
pop
jg
arpl
into
fld
(bad)
jle
sti
test
push
div
cmp
mov
mov
or
pop
add
out
sahf
(bad)
adc
loopne
mov
loope
push
xor
out
inc
mov
xchg
lods
pop
mov
(bad)
call
(bad)
hlt
int3
scas
arpl
addr16
dec
fwait
adc
xchg
push
test
(bad)
(bad)
(bad)
dec
jne
and
xor
(bad)
rcl
adc
cwde
into
xor
xor
(bad)
dec
cmp
lods
sbb
xchg
sub
stc
sar
fs
and
push
shr
bound
retf
ret
loop
xchg
ins
mov
dec
and
cmps
adc
call
mov
adc
in
jns
sub
data16
(bad)
jmp
dec
push
loopne
pop
mov
mov
dec
(bad)
bound
push
cmp
(bad)
dec
sub
outs
rcr
shl
das
enter
add
add
inc
lods
mov
jmp
mov
jno
out
jo
sub
mov
dec
stos
fisub
(bad)
cmp
jmp
or
push
(bad)
call
inc
sbb
shl
or
fs
xchg
add
mov
xor
outs
xor
mov
pop
cmp
mul
or
popf
add
add
cmp
or
sbb
retf
xor
(bad)
call
stc
fisttp
neg
mov
sub
scas
fmul
rol
adc
or
mov
cmp
sbb
sbb
imul
call
ret
xor
inc
dec
inc
(bad)
movs
adc
inc
and
xchg
je
(bad)
(bad)
(bad)
inc
mov
movs
sbb
outs
fs
(bad)
cli
add
cmp
sbb
(bad)
dec
shl
enter
loope
daa
popa
mov
mov
fcmovb
jmp
enter
mov
or
or
mov
xor
sahf
add
adc
lock
(bad)
(bad)
(bad)
call
test
xor
cmps
mov
pop
push
mov
daa
mov
mov
adc
(bad)
call
mov
cld
and
pop
xchg
cmps
mov
mov
loope
clc
(bad)
dec
or
add
and
xor
ss
(bad)
(bad)
push
push
ss
je
adc
jle
mov
loop
mov
scas
rol
sar
mov
rcl
add
xlat
mov
fcomp
(bad)
cs
(bad)
(bad)
(bad)
jmp
xor
mov
pop
arpl
jae
je
push
aas
push
imul
cwde
dec
cmp
(bad)
(bad)
(bad)
push
popf
add
retf
jp
(bad)
call
out
add
icebp
test
cmp
sbb
sub
push
sub
daa
call
push
cmp
mov
dec
(bad)
xor
mov
(bad)
jmp
lds
int
jne
jne
and
pop
mov
in
push
popa
adc
mov
(bad)
cli
or
or
imul
fs
(bad)
(bad)
inc
repz
(bad)
push
(bad)
push
add
sub
push
aam
lock
mov
mov
sbb
(bad)
(bad)
call
or
retf
jnp
xchg
sub
lock
es
pop
xchg
push
add
(bad)
fidiv
aad
mov
push
push
adc
ins
mov
adc
dec
repz
scas
mov
inc
cld
dec
aam
jae
leave
lds
int3
or
movs
(bad)
(bad)
(bad)
push
mov
and
dec
xchg
mov
xchg
pop
fst
rol
retf
nop
inc
jmp
es
jle
aad
sahf
ficom
fsubr
adc
lock
dec
xchg
pushf
push
jmp
inc
fadd
imul
(bad)
(bad)
jnp
sbb
(bad)
jp
sbb
push
cmps
in
rcr
adc
sbb
mov
frstor
jno
sub
leave
imul
idiv
inc
shl
or
mov
icebp
pop
and
dec
adc
leave
in
stc
dec
xchg
aad
pop
or
adc
(bad)
(bad)
(bad)
push
jnp
push
fmul
bound
xchg
sub
xchg
sbb
inc
sahf
mov
nop
or
xchg
ins
(bad)
(bad)
(bad)
(bad)
call
arpl
mov
mov
cli
iret
not
xor
jge
gs
add
(bad)
(bad)
dec
add
mov
hlt
cmps
out
mov
int
rcl
test
pop
rcr
leave
sbb
fidivr
imul
adc
cmp
cdq
pop
ja
push
mov
test
call
(bad)
inc
jns
int
enter
xchg
and
cld
into
rcr
int
fdivrp
(bad)
(bad)
call
fistp
fadd
cmp
and
jle
(bad)
cmp
cld
or
fcomip
add
out
push
inc
xor
in
ds
mov
(bad)
jmp
or
add
and
xchg
jle
(bad)
dec
cmp
or
cld
loope
leave
bound
xchg
(bad)
(bad)
(bad)
push
movs
dec
ss
cmp
or
aam
xchg
jne
neg
shl
bound
stos
stos
jo
(bad)
(bad)
(bad)
call
pop
push
ror
jge
fistp
in
iret
mov
mov
mov
mov
call
adc
ja
adc
mov
or
retf
dec
lock
dec
leave
fs
je
dec
push
jle
arpl
in
stc
jl
(bad)
(bad)
jg
and
adc
popa
fsub
ret
jmp
std
add
neg
rcl
or
bound
xchg
pop
mov
mov
xchg
xchg
ja
imul
cwde
push
(bad)
jmp
js
imul
push
je
pop
cmp
sbb
ins
js
fist
(bad)
fucomip
(bad)
repz
mov
in
or
addr16
iret
fcomp
cld
call
sub
je
cmc
(bad)
(bad)
dec
sub
xchg
(bad)
movs
push
test
lods
cmps
enter
outs
pop
xchg
(bad)
(bad)
fisttp
dec
xchg
shr
es
or
scas
arpl
call
sbb
in
jb
sub
sar
add
sar
es
aam
sbb
movs
cmp
(bad)
(bad)
(bad)
jns
xchg
retf
fdiv
pop
jle
cmps
rep
xlat
fdiv
mov
and
rcr
cmp
cmp
jp
jmp
mov
lods
cmova
add
cmps
jne
fs
mov
clc
jns
out
mov
mov
xchg
mov
ret
inc
idiv
js
repz
cmp
pop
daa
lods
jmp
imul
outs
or
push
mov
sub
dec
and
(bad)
(bad)
jmp
(bad)
stc
icebp
cmp
gs
jg
pop
lock
cmp
call
je
arpl
int
mov
jnp
in
int
pop
xchg
fisttp
(bad)
(bad)
push
mov
aad
push
add
(bad)
imul
xchg
xchg
fdivp
repnz
cmp
cmp
(bad)
popf
and
retf
je
(bad)
jg
lock
sub
push
(bad)
loopne
sbb
mov
pop
aad
pop
(bad)
(bad)
(bad)
(bad)
clc
test
pop
push
(bad)
jp
xor
(bad)
cli
dec
and
sbb
loope
push
not
out
mov
dec
push
das
popf
xchg
push
cmp
mov
sub
mov
adc
xchg
test
xchg
sub
cld
mov
inc
cmp
push
mov
cmp
sub
push
pop
mov
(bad)
cmps
mov
sub
(bad)
(bad)
jmp
mov
ds
inc
mov
pushf
mov
(bad)
call
mov
push
xchg
xor
dec
xor
fld
push
clc
dec
dec
add
xor
inc
mov
add
mov
inc
xchg
mov
xor
ret
xchg
sub
sbb
mov
jo
and
(bad)
(bad)
xor
sub
test
jl
push
test
cwde
adc
push
mov
(bad)
(bad)
(bad)
(bad)
fcmovne
or
out
xchg
mov
inc
cmp
je
xchg
xor
rcr
lahf
jecxz
jmp
shl
add
push
xchg
scas
retf
sbb
dec
loopne
(bad)
jmp
(bad)
jnp
and
and
and
pop
(bad)
mov
adc
mov
(bad)
(bad)
call
sbb
inc
or
adc
sbb
bound
jl
cmc
and
dec
inc
and
rol
mov
pop
cld
movs
push
mov
cmps
push
or
(bad)
push
add
add
add
sbb
mov
add
jo
add
inc
lock
fistp
xchg
or
push
and
mov
and
mov
mov
xchg
ja
sub
push
and
xchg
dec
inc
adc
icebp
shl
add
nop
sbb
adc
dec
pusha
xor
cmp
cmps
adc
ret
(bad)
or
inc
fadd
mov
and
aam
pop
xor
stos
mov
push
xor
add
adc
dec
(bad)
jae
push
stos
popf
adc
sbb
mov
int
sbb
xchg
cs
stc
outs
sub
mov
(bad)
(bad)
(bad)
call
test
cmp
test
lds
enter
mov
xchg
mov
sub
lods
mov
push
push
(bad)
pop
in
sub
mov
clc
xchg
mov
mov
mov
pusha
loopne
mov
push
jecxz
(bad)
fcmovne
push
push
mov
push
or
cli
(bad)
call
jno
test
mov
cmp
mov
leave
leave
sub
inc
sar
jns
inc
cmp
movs
or
(bad)
jmp
shl
push
mov
out
sub
dec
inc
scas
push
mov
and
jmp
clc
call
pop
mov
push
xchg
dec
mov
retf
stos
es
mov
dec
fist
jge
leave
movs
dec
xchg
pop
sub
in
sbb
into
call
xor
inc
mov
(bad)
jle
imul
ss
rol
(bad)
dec
aam
xor
cmp
rol
outs
fdiv
xor
(bad)
mov
fidiv
jo
jo
lods
and
test
mov
mov
adc
add
nop
pop
jne
(bad)
cmp
leave
cld
inc
mov
dec
fs
int3
out
jmp
inc
mov
scas
fidiv
out
jns
jb
out
cli
(bad)
jg
cmp
call
and
xchg
hlt
pop
inc
add
add
jecxz
push
push
ret
adc
jp
shl
jno
inc
xchg
inc
push
out
pop
sbb
(bad)
fbstp
scas
add
rol
sub
test
pop
sbb
adc
mov
sbb
sub
inc
ss
mov
mov
sub
(bad)
(bad)
(bad)
(bad)
jmp
popa
pusha
pop
dec
loop
retf
sbb
add
sub
mov
add
or
shl
add
das
fistp
idiv
dec
pop
push
cmc
mov
jl
mov
mov
mov
sbb
jl
movs
(bad)
aaa
mov
dec
call
jmp
cmp
jne
call
adc
bound
fidiv
inc
repnz
xchg
sub
mov
add
stos
(bad)
icebp
shl
adc
adc
icebp
push
push
lahf
mov
das
push
ficomp
pop
pushf
pop
pusha
mov
jmp
dec
pop
sti
push
ja
jno
add
ja
movs
jne
popf
out
sbb
jo
cmp
mov
fiadd
dec
cmp
aaa
sbb
sub
aaa
mov
test
pop
jno
push
dec
jmp
scas
sti
rcr
and
ror
inc
call
movs
xor
fcom
mov
mov
add
(bad)
enter
dec
call
sar
lahf
mov
test
jg
pop
cmc
call
repz
(bad)
ins
pop
xchg
(bad)
mov
(bad)
(bad)
(bad)
inc
(bad)
jl
repz
repz
xchg
push
scas
in
mov
out
frstor
jmp
pushf
add
jg
pop
mov
je
dec
xchg
movs
mov
dec
pop
xlat
ja
fcom
xlat
pop
cmp
push
or
push
sbb
repnz
(bad)
mov
pop
fst
(bad)
(bad)
(bad)
call
in
add
cmp
loope
sar
gs
adc
adc
jle
xchg
retf
stos
mov
sar
(bad)
retf
loop
outs
lods
maxps
call
push
inc
mov
aaa
adc
movs
jnp
sbb
mov
arpl
inc
scas
jb
dec
jnp
sar
push
popa
push
mov
push
bound
xor
xor
or
dec
scas
sub
mov
stos
mov
or
ins
fs
cvtpi2ps
pop
mov
popa
scas
test
arpl
mov
gs
movs
push
int
sub
leave
and
aaa
(bad)
out
(bad)
(bad)
(bad)
dec
mov
sub
mov
push
pop
dec
cmps
jb
test
xchg
shr
xlat
xlat
pop
cmp
mov
adc
pop
arpl
xchg
mov
push
(bad)
(bad)
(bad)
jmp
and
rcr
(bad)
daa
xlat
fcomip
in
pop
jle
repz
jnp
mov
mov
pop
cmp
add
out
fcom
mov
ror
jb
stos
mov
inc
push
aas
jb
xchg
pop
mov
into
push
ds
lock
adc
hlt
xchg
iret
loop
(bad)
(bad)
jg
fadd
in
pop
shr
(bad)
mov
jo
je
(bad)
ror
imul
pop
loopne
xchg
mov
and
add
ret
inc
(bad)
(bad)
(bad)
jmp
pushf
aaa
dec
adc
pusha
push
pop
cmps
sub
xchg
scas
push
dec
xchg
data16
imul
clc
(bad)
(bad)
(bad)
inc
inc
fyl2x
mov
xchg
retf
aam
imul
(bad)
fsubp
sub
fistp
(bad)
(bad)
call
sar
push
stos
cs
jne
dec
inc
aad
dec
dec
inc
dec
loopne
mov
fisub
scas
in
sti
mov
(bad)
in
(bad)
(bad)
mov
outs
pop
scas
mov
inc
sahf
jle
pushf
pushf
js
pop
jae
dec
inc
das
sub
popa
test
(bad)
(bad)
dec
in
sahf
rcr
test
retf
xor
xor
and
mov
(bad)
(bad)
inc
(bad)
mov
sti
mov
gs
shl
cmp
mov
iret
aam
or
dec
sbb
pop
or
jmp
fnstcw
xchg
sub
call
adc
jcxz
(bad)
(bad)
(bad)
jmp
cmp
sahf
mov
push
sub
dec
push
xor
dec
mov
xlat
xor
or
pop
add
loopne
xchg
dec
and
mov
cmp
push
sub
mov
mov
and
jae
mov
aaa
inc
sbb
jmp
nop
sub
ins
repnz
pop
xor
std
cwde
pop
in
cmp
mov
dec
sbb
loope
iret
ins
xchg
in
cmp
jl
xchg
sar
aaa
(bad)
call
outs
xchg
inc
lds
and
cld
cli
rcl
jbe
ds
xor
(bad)
(bad)
(bad)
inc
shl
pop
inc
loop
test
sbb
stos
mov
mov
gs
(bad)
(bad)
push
icebp
je
inc
xchg
mov
loopne
call
test
ret
cmp
add
mov
add
lods
mov
push
ins
mov
ins
add
add
not
xor
(bad)
inc
shl
or
inc
ins
test
and
xchg
dec
xchg
lock
sbb
cmovs
dec
(bad)
(bad)
(bad)
inc
cmps
xchg
lea
imul
push
les
ficom
add
mov
(bad)
dec
cmp
rol
sysexit
mov
addr16
rcr
test
xchg
hlt
pop
ret
data16
nop
rcr
push
jmp
es
ja
dec
xor
mov
inc
out
cmp
das
sar
(bad)
clc
cli
pop
push
cld
mov
test
lods
push
je
jmp
xor
or
cmp
popa
pop
daa
lds
add
jae
add
adc
aam
call
sub
imul
xor
jg
mov
push
es
push
outs
pop
nop
ja
(bad)
sub
jbe
cmp
mov
mov
push
inc
mov
mov
(bad)
(bad)
in
jp
js
imul
or
push
daa
push
loop
bound
or
enter
inc
add
retf
mov
or
(bad)
(bad)
(bad)
jmp
js
dec
xor
daa
out
and
xlat
jb
xchg
rol
sbb
xchg
xchg
and
and
adc
test
push
push
and
mov
addr16
out
jp
mov
test
test
push
xor
pusha
inc
lds
xor
(bad)
(bad)
call
jae
arpl
(bad)
mov
pop
sub
loop
or
and
add
jbe
pop
xchg
in
imul
push
repz
xchg
into
not
(bad)
xchg
jae
(bad)
(bad)
(bad)
stc
add
dec
pop
or
je
adc
idiv
daa
mov
retf
retf
adc
xor
mov
jmp
sar
xchg
xchg
gs
test
jle
scas
iret
(bad)
mov
les
add
push
mov
rol
xchg
sti
pop
sbb
jmp
jnp
retf
cmp
xor
mov
inc
xchg
mov
adc
adc
mov
pop
movs
jg
lods
stos
mov
or
pop
arpl
(bad)
(bad)
jmp
jecxz
xor
nop
push
sahf
push
xchg
scas
lods
jmp
xchg
push
jg
xor
(bad)
(bad)
(bad)
jmp
adc
xchg
hlt
ror
and
lea
cmp
or
dec
pop
or
(bad)
(bad)
(bad)
inc
fisttp
mov
jmp
mov
sbb
(bad)
dec
(bad)
dec
sub
jmp
psadbw
adc
std
(bad)
(bad)
(bad)
mov
or
dec
sub
stos
call
jg
dec
pop
imul
aaa
cld
push
mov
push
sbb
mov
loop
inc
test
xchg
and
cmp
cld
jmp
jb
lods
imul
fs
inc
dec
mov
fistp
fwait
sbb
pop
fnsave
pop
push
adc
js
push
test
aad
pop
push
xchg
jb
pop
lock
retf
call
and
pop
mov
mov
and
pop
jp
(bad)
(bad)
(bad)
inc
aaa
lds
cmc
jne
and
xchg
jmp
xchg
sub
fucomp
push
push
lods
rcr
xor
jmp
ins
sub
sti
xchg
scas
jmp
(bad)
(bad)
(bad)
jmp
lods
pop
retf
inc
pop
or
push
pop
fdivp
retf
xchg
cmp
xor
push
retf
xchg
lock
sub
sahf
fcomp
jmp
mov
repz
daa
pop
inc
mov
lds
loopne
(bad)
lods
mov
cli
stc
std
pop
sub
mov
sbb
(bad)
(bad)
inc
cmps
inc
lea
fcomip
repnz
push
mov
or
(bad)
(bad)
(bad)
dec
adc
cmc
imul
inc
push
fdiv
pop
lds
enter
nop
dec
dec
dec
dec
dec
(bad)
jg
test
cmc
jmp
push
jmp
(bad)
push
in
jmp
or
fstp
dec
adc
jg
(bad)
push
push
xchg
adc
stos
mov
cmps
aaa
lods
sub
sub
dec
sbb
fwait
int3
scas
(bad)
(bad)
jmp
sub
pusha
in
mov
repz
ud0
mov
call
add
hlt
fsubr
inc
shl
pop
lock
stos
pushf
(bad)
sub
jne
mov
cli
(bad)
(bad)
call
mov
mov
es
shr
sbb
sub
or
das
clc
mov
(bad)
cld
mov
xlat
cmps
es
jmp
mov
push
pop
fcmovu
pop
or
jne
dec
ss
stos
push
or
sub
je
mov
repnz
(bad)
(bad)
jmp
rol
stos
xchg
and
mov
jmp
or
mov
xchg
loopne
xor
mov
(bad)
inc
rol
jae
mov
sbb
jnp
sub
lahf
in
loop
in
das
adc
jmp
pop
shl
icebp
fcmovnbe
mov
aam
(bad)
jg
call
inc
inc
or
adc
inc
test
xor
ficom
(bad)
(bad)
(bad)
ds
in
push
mov
cwde
movs
fdivr
pop
int
ja
ret
popf
jmp
retf
xor
inc
fidiv
retf
jp
lock
pop
or
mov
or
daa
adc
push
addr16
mov
lahf
jle
stc
loopne
adc
pop
sub
call
fnstsw
push
jge
xchg
pop
shr
(bad)
(bad)
call
pusha
push
mov
and
stos
cmps
mov
adc
sbb
test
sbb
push
sbb
cmp
retf
dec
mov
sub
call
push
and
(bad)
(bad)
(bad)
jmp
bound
sub
or
inc
sub
or
pushf
imul
(bad)
(bad)
dec
shl
fcomp
(bad)
shl
xchg
lds
dec
ja
loopne
pop
arpl
movs
(bad)
(bad)
(bad)
(bad)
cmp
pop
mov
gs
lods
(bad)
sbb
cmp
mov
inc
pop
fist
pop
imul
cmp
or
push
push
fwait
ror
out
and
(bad)
mov
pop
ror
add
sbb
adc
mov
(bad)
(bad)
(bad)
jmp
pop
test
cmp
xchg
and
adc
cli
jae
sbb
or
retf
sbb
(bad)
(bad)
dec
pop
cs
rcr
adc
inc
xor
xchg
scas
mov
or
jae
loope
dec
or
(bad)
call
or
sbb
cmp
cs
jp
push
sub
xor
in
add
xchg
mov
(bad)
(bad)
jmp
lock
or
mov
ficomp
cmp
(bad)
in
cmps
pop
sbb
push
(bad)
(bad)
mov
dec
cmc
in
mov
xchg
inc
jmp
test
pop
cmp
cmp
(bad)
(bad)
(bad)
(bad)
inc
cmp
stos
push
in
popa
inc
sbb
js
mov
daa
daa
jge
push
arpl
test
xchg
clc
inc
add
test
jmp
xchg
or
mov
or
(bad)
(bad)
call
push
xor
push
popa
or
push
test
and
enter
clc
jp
sub
inc
pop
inc
push
push
(bad)
(bad)
(bad)
call
mov
and
adc
push
sub
jbe
jecxz
in
call
push
rol
(bad)
(bad)
(bad)
dec
jb
mov
fadd
adc
mov
jp
je
idiv
cwde
mov
(bad)
(bad)
(bad)
(bad)
call
mov
pop
sub
cmp
adc
or
retf
loopne
add
(bad)
(bad)
(bad)
inc
shl
stos
pop
inc
and
push
lods
and
retf
xchg
sahf
pop
shl
cmp
es
push
xchg
(bad)
(bad)
inc
shl
data16
jae
push
addr16
sub
cld
retf
add
addr16
ins
cmp
jbe
mov
(bad)
call
jae
pop
sbb
ror
sub
cs
out
neg
mov
xor
or
xor
and
cli
imul
stc
fs
mov
pop
jl
out
mov
rcr
hlt
push
outs
cmps
cmp
jg
and
(bad)
(bad)
call
fidivr
fimul
dec
push
test
sub
adc
inc
or
(bad)
call
repz
in
out
inc
add
dec
xor
test
lods
nop
cs
mov
jb
xor
leave
sub
movs
add
inc
adc
adc
xchg
enter
dec
or
jp
and
and
(bad)
(bad)
jmp
ds
sub
inc
mov
cmp
push
cmp
ins
fadd
mov
popf
mov
(bad)
(bad)
(bad)
jmp
push
stos
inc
mov
cmp
push
in
jg
mov
mov
cmps
inc
and
dec
(bad)
(bad)
(bad)
dec
fcom
inc
inc
ror
dec
dec
in
jmp
mov
or
setne
jns
ret
(bad)
push
outs
test
mov
push
nop
pop
jmp
ror
push
pop
inc
test
(bad)
(bad)
(bad)
jmp
jle
jno
and
cmp
cmp
xor
mov
ret
mov
(bad)
(bad)
call
call
add
or
icebp
mov
div
sbb
xor
jg
adc
hlt
(bad)
(bad)
call
xor
xor
adc
sar
xchg
jnp
push
add
jg
movs
fbld
sbb
int3
adc
push
pop
movs
cmp
(bad)
sub
sub
loop
jge
stos
pop
cld
(bad)
out
mov
fimul
aaa
fcom
xor
pop
pop
fnsave
in
mov
stos
mov
push
imul
push
fist
(bad)
mov
adc
out
ret
jb
aas
add
jl
test
(bad)
call
scas
shl
call
(bad)
jmp
pop
test
scas
clc
int3
add
out
adc
lock
test
jge
(bad)
sbb
(bad)
(bad)
pop
nop
jnp
(bad)
(bad)
push
inc
jae
imul
arpl
xchg
mov
out
retf
(bad)
shr
(bad)
jmp
fwait
jb
movs
pop
mov
mov
ins
neg
mov
add
or
or
or
adc
or
scas
or
and
inc
mov
(bad)
cli
addr16
stc
(bad)
(bad)
(bad)
call
and
inc
xchg
and
cmp
xor
mov
lahf
add
and
(bad)
(bad)
dec
repz
mov
sub
clc
cmp
jge
scas
xlat
lahf
jg
fsubr
mov
loope
loope
mov
(bad)
mov
mov
dec
out
(bad)
(bad)
loop
or
ins
int3
mov
sub
data16
(bad)
call
push
dec
addr16
add
cmp
mov
(bad)
mov
adc
inc
pop
inc
bound
ret
shl
(bad)
(bad)
fild
dec
cs
xchg
gs
push
or
jmp
dec
jnp
int
retf
xchg
test
loope
mov
push
in
(bad)
(bad)
(bad)
jmp
ret
dec
mov
nop
or
dec
imul
jno
and
ret
mov
(bad)
(bad)
inc
mov
xor
push
dec
inc
sbb
scas
cli
cld
ud1
jle
shr
mov
(bad)
(bad)
jmp
cmp
nop
cmps
enter
pop
inc
add
movs
popa
ds
xor
and
loopne
cld
mov
jp
push
sbb
cmp
sbb
cmps
or
call
cs
pop
ja
call
push
sub
mov
(bad)
(bad)
(bad)
jmp
push
adc
sub
push
retf
sub
fwait
push
mov
imul
cwde
pushf
pushf
add
add
mov
(bad)
fild
add
sub
sub
or
scas
test
xchg
in
inc
arpl
mov
out
movs
fisttp
jg
stos
gs
dec
sub
jl
xor
pop
aas
inc
loop
loope
push
loopne
outs
or
rcr
jge
xor
inc
ja
sub
aam
push
push
or
(bad)
call
mov
sbb
dec
fnsave
ins
xchg
mov
rol
xchg
clc
(bad)
(bad)
(bad)
(bad)
jge
jg
xor
mov
pop
cmp
pop
aam
ss
cmp
lds
call
adc
mov
sahf
push
sub
mov
fisubr
inc
in
(bad)
inc
xchg
mov
jne
out
bound
jl
out
jo
popf
and
in
and
pop
test
dec
sub
fnstcw
jmp
scas
lods
retf
mov
push
xor
add
lods
imul
and
rcr
dec
adc
(bad)
test
vcvttss2si
xor
push
mov
cmp
(bad)
dec
adc
cmps
jbe
mov
inc
pusha
aam
in
pop
push
dec
adc
adc
mov
not
adc
dec
rcl
jb
add
mov
(bad)
(bad)
(bad)
cmp
mov
popa
int
push
adc
pusha
fadd
or
mov
push
cld
pop
push
jns
retf
(bad)
call
dec
fs
cmc
cmc
icebp
cmp
pop
ret
test
lahf
lahf
sbb
fwait
add
mov
nop
adc
add
shl
icebp
je
push
les
(bad)
(bad)
dec
repz
lds
rol
retf
xchg
cmp
push
test
add
sub
cmp
(bad)
(bad)
jmp
scas
ins
pop
cmp
fst
mov
and
pop
jo
jl
jae
jmp
add
jmp
ins
xchg
xor
call
sbb
(bad)
xor
scas
sub
fdiv
mov
ins
das
push
clc
popf
dec
out
adc
and
mov
(bad)
(bad)
dec
sbb
pusha
cli
xchg
xor
pop
scas
cmp
mov
inc
ret
(bad)
(bad)
jge
push
or
jmp
jecxz
or
ins
into
test
cmp
stc
xchg
mov
fcomp
out
push
lock
mov
test
xchg
jg
lock
jo
jne
aam
add
sbb
cs
push
add
dec
std
add
dec
scas
xchg
imul
xor
les
or
popa
test
dec
xchg
xor
(bad)
jmp
dec
mov
out
or
adc
xor
xlat
inc
push
sub
mov
push
shl
(bad)
(bad)
(bad)
call
xchg
jge
les
jb
pop
or
dec
push
jnp
stos
icebp
bound
cmp
inc
(bad)
(bad)
(bad)
inc
sub
push
inc
push
stos
push
push
in
xchg
test
cmp
je
jge
push
sbb
jl
jb
mov
(bad)
jmp
ret
sbb
mov
push
mov
push
xchg
test
fucomip
xchg
mov
clc
ret
repnz
mov
pop
fist
ret
or
push
iret
arpl
int3
xchg
push
pop
call
adc
cli
pop
mov
inc
fidivr
enter
ret
cdq
xor
pop
lods
add
pop
retf
out
ffree
push
dec
(bad)
(bad)
(bad)
inc
jb
mov
loope
frstor
xchg
fwait
(bad)
std
enter
inc
dec
or
push
add
(bad)
(bad)
dec
sbb
cs
pop
push
mov
int3
jmp
xor
xchg
xchg
mov
jl
dec
push
dec
sahf
idiv
neg
xor
pop
push
aam
out
(bad)
(bad)
dec
jp
sbb
mov
sub
sbb
mov
out
push
xchg
fcmove
cmp
imul
popa
pop
out
jns
(bad)
jmp
test
dec
(bad)
sbb
inc
push
push
out
popa
mov
dec
(bad)
(bad)
(bad)
inc
or
fwait
and
pop
pop
mov
leave
cmc
mov
(bad)
ins
(bad)
(bad)
(bad)
inc
shl
int3
pop
mov
mov
aaa
and
inc
sbb
movs
mov
mov
add
addr16
(bad)
(bad)
push
adc
mov
mov
popa
(bad)
movs
sub
push
shr
push
sub
xchg
push
push
push
(bad)
out
sbb
jo
pop
repnz
sar
mov
jo
cmc
shl
mov
fist
mov
pop
cwde
(bad)
(bad)
(bad)
call
inc
pushf
add
push
mov
inc
mov
xchg
imul
cdq
mov
lods
or
(bad)
cmps
jmp
adc
sbb
cmp
es
mov
call
push
mov
loop
out
retf
and
enter
popa
(bad)
(bad)
(bad)
jmp
dec
inc
jge
sbb
ss
popf
sub
js
lds
xchg
xchg
gs
(bad)
(bad)
jmp
lods
pop
xor
cmc
in
mov
inc
adc
and
and
retf
mov
inc
push
xor
adc
(bad)
(bad)
(bad)
(bad)
cmp
mov
mov
add
and
push
nop
xchg
bound
inc
(bad)
sbb
pop
xor
(bad)
(bad)
push
into
xor
in
jmp
pop
clc
retf
aas
stc
ror
sub
dec
push
lahf
call
cmps
ret
adc
pushf
mov
and
push
(bad)
lock
and
fs
jo
scas
or
(bad)
(bad)
jmp
cmp
or
repnz
jge
fsubr
mov
or
lahf
fdivr
fwait
add
retf
wbinvd
call
shl
dec
sbb
nop
ss
int3
jl
enter
scas
xor
icebp
imul
std
jmp
fadd
push
stos
mov
adc
rcl
push
add
jns
movs
pop
dec
sbb
adc
rcl
mov
idiv
pushf
sbb
mov
sub
dec
clc
jns
daa
outs
dec
add
(bad)
(bad)
in
xlat
scas
inc
cmp
mov
repnz
jo
dec
idiv
push
jl
enter
sar
adc
loop
addr16
std
(bad)
(bad)
xor
dec
mov
(bad)
in
inc
imul
aam
dec
adc
dec
xchg
mov
(bad)
(bad)
mov
dec
and
xchg
or
sub
dec
sahf
pushf
sbb
int3
leave
(bad)
stos
push
test
icebp
sub
adc
cmp
inc
mov
cs
fistp
call
test
xchg
push
sub
cmps
and
adc
adc
mov
call
and
cwde
int3
pop
xchg
(bad)
jl
cmp
bound
es
(bad)
dec
bnd
stc
ret
sub
not
loopne
ror
jg
adc
dec
adc
in
(bad)
cmc
hlt
hlt
mov
(bad)
(bad)
mov
mov
fimul
outs
sahf
push
mov
mov
outs
call
leave
(bad)
jg
call
aaa
push
adc
push
nop
fistp
call
sti
lahf
adc
jp
retf
pop
(bad)
fbld
mov
sbb
call
std
(bad)
mov
and
sbb
js
mov
fs
(bad)
aad
dec
pop
retf
fwait
dec
push
adc
xor
pop
lea
(bad)
jmp
stos
jmp
adc
rcl
jecxz
test
adc
(bad)
es
push
add
(bad)
(bad)
(bad)
call
or
pop
xchg
in
inc
xchg
jns
add
or
scas
lods
stos
cmp
(bad)
(bad)
call
imul
inc
div
mov
jbe
cld
sub
int
enter
jge
(bad)
(bad)
call
adc
(bad)
xlat
jbe
jae
fbld
movsx
xor
dec
outs
out
jmp
sbb
pop
cmp
cld
mov
sub
push
(bad)
(bad)
(bad)
dec
jae
inc
dec
in
out
push
mov
mov
dec
(bad)
cli
(bad)
in
fs
adc
jmp
movs
inc
es
jecxz
sub
lods
enter
leave
xchg
icebp
cli
(bad)
(bad)
(bad)
push
push
sub
aaa
cmc
and
adc
or
push
(bad)
ja
cmp
(bad)
jmp
hlt
clc
cmp
jbe
ret
sub
(bad)
(bad)
jmp
jbe
push
cs
(bad)
rol
ds
mov
cmp
adc
fnsave
pop
dec
loop
dec
movs
pop
xor
add
das
int3
in
(bad)
(bad)
(bad)
fbstp
(bad)
in
out
fninit
mov
outs
shr
xor
push
pop
leave
push
js
inc
loopne
sbb
pop
std
(bad)
push
add
imul
push
mov
cmp
imul
std
xor
push
cmps
int
pop
or
in
pushf
cwde
das
aam
adc
(bad)
call
mov
sub
nop
pop
sbb
fnstcw
mov
xlat
movs
ins
push
inc
(bad)
(bad)
(bad)
(bad)
jg
mov
sbb
mov
push
xchg
(bad)
fild
xor
jp
mov
ins
push
sbb
js
inc
mov
outs
movs
push
test
jne
std
(bad)
call
cmc
test
lods
cwd
xor
rol
cwde
pop
pop
ja
cmp
adc
or
(bad)
(bad)
mov
sub
xchg
push
push
sbb
pop
ja
sub
cmp
dec
ret
push
(bad)
(bad)
(bad)
(bad)
(bad)
xchg
mov
cmp
push
loopne
mov
inc
sbb
dec
mov
dec
xchg
aad
sahf
fcomip
les
jnp
mov
ficom
dec
mov
push
sti
(bad)
push
and
add
dec
and
mov
xor
or
(bad)
stos
push
mov
xchg
mov
sahf
jl
sbb
lock
(bad)
call
lahf
dec
lods
push
(bad)
push
pop
lods
cmps
je
mov
and
and
(bad)
(bad)
(bad)
push
jl
inc
and
push
es
mov
fadd
cs
test
int3
mov
(bad)
(bad)
dec
ret
cs
fild
pop
outs
adc
dec
pop
je
push
cmps
inc
ror
icebp
scas
(bad)
(bad)
(bad)
dec
jmp
add
mov
test
and
pop
cmp
pop
push
sbb
call
mov
push
out
sub
ret
scas
pop
sbb
jecxz
shl
mov
cmp
fdiv
es
xor
inc
xor
ror
out
inc
xor
cs
pusha
(bad)
(bad)
dec
or
push
xrelease
add
test
sbb
das
sahf
or
(bad)
(bad)
push
in
out
inc
aaa
push
push
ss
xchg
or
lea
clc
(bad)
push
mov
jb
imul
or
or
sahf
loopne
jmp
xor
rcr
cmovo
dec
lods
(bad)
call
or
imul
push
in
mov
cmp
push
adc
push
(bad)
inc
inc
sbb
jne
add
sub
xor
adc
(bad)
call
jmp
cmp
fild
add
cmp
mov
les
push
jmp
mov
sub
fsubr
outs
imul
loop
in
mov
mov
push
test
and
ds
or
imul
ret
aad
call
scas
xlat
stos
mov
jnp
mov
mov
(bad)
(bad)
(bad)
jnp
inc
push
clc
std
xchg
xchg
push
imul
mov
push
dec
movs
mov
mov
mov
scas
mov
fcmovbe
fidiv
add
fneni(8087
jge
push
(bad)
mov
pop
add
pop
pop
xchg
loope
or
inc
scas
xor
(bad)
call
or
xchg
push
enter
cmp
les
cmps
dec
push
xor
xor
(bad)
call
arpl
fisub
xchg
popf
mov
push
movs
mov
js
(bad)
(bad)
(bad)
dec
sub
sar
inc
aaa
jmp
and
in
push
sahf
hlt
and
xchg
pop
int
sbb
in
cli
(bad)
out
clc
adc
dec
mov
inc
pushf
adc
dec
(bad)
retf
add
call
outs
mov
and
outs
mov
lea
dec
adc
sub
jg
(bad)
call
rol
pop
ret
cdq
jmp
mov
lahf
mov
push
sahf
add
mov
inc
xor
mov
call
adc
nop
sub
sub
dec
jecxz
push
(bad)
into
idiv
ja
stos
cmp
nop
out
(bad)
(bad)
(bad)
js
dec
jecxz
sbb
mov
test
sbb
cli
add
rol
lea
mov
mov
(bad)
(bad)
dec
jg
ficomp
jecxz
xchg
inc
adc
mov
dec
or
sbb
push
movs
push
add
(bad)
jge
je
test
shl
cdq
dec
fmul
(bad)
(bad)
(bad)
jmp
repz
hlt
jecxz
jnp
arpl
outs
in
(bad)
jge
repz
aaa
sbb
jmp
shl
cli
(bad)
fadd
cwde
inc
mov
sub
stos
(bad)
call
push
or
adc
dec
mov
test
mov
jmp
pop
pusha
retf
ins
xor
jo
push
sbb
mov
(bad)
(bad)
(bad)
cmp
(bad)
adc
add
aam
add
mov
xor
mul
sub
ins
jmp
in
(bad)
(bad)
mov
sbb
cmps
jmp
jo
mov
js
(bad)
(bad)
mov
xchg
aas
push
(bad)
hlt
xchg
fidivr
mov
pop
sub
sub
(bad)
(bad)
inc
test
test
bound
in
ds
(bad)
je
mov
mov
(bad)
out
jno
sbb
inc
daa
xchg
je
(bad)
pop
mov
popf
stos
pop
imul
loope
loop
das
popa
jmp
mov
rcr
(bad)
cmp
mov
mov
mov
loop
mov
out
adc
push
call
jo
test
cs
add
aaa
fdiv
mov
sti
pop
xor
(bad)
(bad)
(bad)
call
add
jns
sbb
pop
push
inc
inc
dec
pop
mov
or
or
bound
sahf
sub
or
sub
inc
clc
jmp
test
call
xchg
lock
(bad)
jmp
adc
dec
movs
js
clc
ror
call
push
mov
(bad)
(bad)
dec
and
pop
scas
outs
fist
in
mov
aad
cmp
sub
(bad)
(bad)
(bad)
push
hlt
rol
(bad)
not
scas
fnstenv
ds
clc
jmp
mov
aas
jmp
or
ss
push
ins
sub
cmps
sbb
and
call
outs
dec
ret
loopne
jbe
and
out
(bad)
(bad)
(bad)
(bad)
cmp
dec
rcr
push
das
jge
scas
sbb
int3
fs
xchg
outs
adc
pop
fldenv
cmp
mov
sbb
pop
data16
div
xchg
pop
fistp
fiadd
pop
call
(bad)
jmp
pop
push
in
dec
int
sbb
pop
lahf
mov
jle
daa
sbb
mov
xor
or
call
test
daa
aas
pop
xor
inc
mov
or
(bad)
(bad)
dec
pusha
pop
cwde
xchg
sbb
cmc
std
sbb
in
jb
and
sub
retf
inc
(bad)
cmp
sub
inc
ret
push
push
adc
xchg
mov
(bad)
shl
mov
sbb
sub
hlt
add
sub
mov
(bad)
(bad)
(bad)
dec
pushf
cs
ficom
sub
retf
inc
leave
jo
inc
xchg
ins
into
(bad)
mov
mov
dec
inc
(bad)
jmp
(bad)
stc
and
inc
add
push
cmp
aas
shl
xchg
sub
(bad)
(bad)
(bad)
call
sbb
jns
push
mov
cs
pop
xor
mov
and
inc
cmp
mov
xchg
rol
or
push
and
mov
push
lods
aad
fwait
(bad)
jmp
mov
pop
sbb
sbb
cmp
pusha
aam
(bad)
(bad)
(bad)
jg
retf
mov
adc
mov
inc
add
lahf
cmp
idiv
(bad)
(bad)
call
stos
pop
cmps
imul
jb
sub
outs
xlat
xchg
(bad)
push
xor
das
push
cld
sub
(bad)
dec
mov
call
push
aas
and
inc
(bad)
(bad)
dec
scas
repnz
sbb
jb
adc
pop
mov
and
sub
aaa
jl
call
push
bnd
in
add
pushf
call
pop
clc
xchg
addr16
push
adc
cmps
push
mov
ret
(bad)
(bad)
call
or
add
jnp
call
jnp
xchg
mov
loopne
sysexit
cld
(bad)
jg
js
xor
jns
aam
loope
pop
and
mov
sahf
jecxz
(bad)
inc
movs
add
adc
add
add
mov
sub
lods
test
outs
inc
js
mul
inc
dec
or
inc
xchg
sbb
clc
(bad)
call
ss
neg
xor
loopne
enter
dec
sub
sub
inc
es
lds
cmp
mov
das
(bad)
sub
in
jmp
or
lock
rol
clc
mov
or
xor
(bad)
push
shr
imul
push
xchg
ret
(bad)
jns
mov
(bad)
(bad)
mov
lods
sbb
jbe
add
cmp
cmp
(bad)
mov
(bad)
(bad)
inc
outs
pushf
jecxz
lods
sbb
xor
(bad)
mov
push
ins
inc
ins
rcl
pop
cmp
cwde
cmp
(bad)
jg
lods
push
mov
pop
xor
and
xor
mov
adc
mov
arpl
xchg
(bad)
inc
bound
add
cmp
and
mov
call
mov
dec
mov
mov
or
pop
scas
xchg
adc
push
cmp
jmp
scas
cli
jmp
and
mul
and
mov
fst
pop
xchg
push
inc
lods
stos
xchg
sar
or
call
mov
cmp
ins
int
xchg
or
sub
push
jne
repz
(bad)
(bad)
push
mov
cmp
fcmovbe
or
mov
or
rol
fadd
ins
lods
(bad)
dec
inc
mov
or
test
mov
out
mov
push
or
loopne
mov
inc
sar
(bad)
(bad)
js
add
in
jmp
imul
sbb
cmp
mov
mov
int
inc
sbb
push
dec
gs
fldenv
or
(bad)
inc
inc
ret
neg
not
add
fnsave
data16
dec
dec
ja
mov
pop
popa
jmp
inc
movs
pop
movs
pop
mov
or
xchg
cmp
(bad)
jl
das
test
inc
inc
sbb
and
xor
or
sti
jg
pop
repnz
imul
bound
(bad)
clc
push
test
xchg
retf
inc
jge
pop
jg
add
adc
mov
xchg
loope
(bad)
push
test
mov
mov
mov
push
push
xor
ss
pop
in
(bad)
(bad)
(bad)
mov
into
out
cmps
sahf
cmp
das
mov
addr16
clc
jne
fmul
repnz
pop
(bad)
call
repnz
popf
das
dec
aaa
pop
xlat
sti
(bad)
jl
and
jno
pop
xchg
inc
and
inc
and
push
fs
xchg
test
in
jbe
call
inc
inc
out
fucomp
retf
movs
loopne
sar
(bad)
(bad)
call
jmp
mov
rcl
adc
std
aaa
jle
in
pop
loop
push
in
pop
jno
fld
(bad)
(bad)
jmp
jbe
cli
jecxz
in
fdivr
mov
pop
aad
sbb
xlat
inc
movs
pop
mov
dec
sar
shr
rol
(bad)
xchg
hlt
in
test
push
mov
and
push
scas
loop
lods
adc
jp
jge
or
(bad)
ds
jecxz
(bad)
jmp
cmc
scas
adc
cld
(bad)
imul
clc
out
sub
test
arpl
lods
dec
ficom
(bad)
dec
push
adc
popf
push
ror
lahf
imul
repnz
clc
xchg
sub
mov
js
(bad)
push
sahf
cdq
pop
sub
adc
(bad)
cli
mov
lds
ins
jle
(bad)
retf
pop
sbb
mov
(bad)
(bad)
push
mov
fcmovnbe
dec
jnp
or
outs
xchg
or
add
dec
dec
cmp
out
dec
mov
(bad)
aad
nop
pop
cld
loopne
pop
pop
adc
(bad)
(bad)
inc
inc
mov
(bad)
or
or
ret
pusha
sub
popf
lock
push
cs
jmp
xchg
or
sbb
les
dec
add
add
int
loop
loope
dec
jmp
push
adc
mov
lds
retf
mov
(bad)
jmp
push
(bad)
push
stos
push
mov
dec
shl
inc
mov
fiadd
jmp
and
stc
(bad)
loope
jmp
std
pop
data16
adc
(bad)
(bad)
jmp
rol
fist
xchg
or
ins
cmp
aas
cmp
jne
pushf
scas
test
lods
sar
retf
jnp
idiv
ffreep
jle
inc
test
inc
enter
movs
cmp
pop
mov
sub
xor
jnp
dec
clc
fxch
pop
(bad)
(bad)
(bad)
(bad)
jl
xchg
add
mov
outs
retf
scas
xchg
mov
icebp
mov
push
cmp
in
mov
jne
test
(bad)
(bad)
jl
cmps
inc
dec
stos
(bad)
jmp
sahf
cmp
cmp
imul
jg
mov
push
int
mov
imul
mov
jl
cmp
and
push
scas
pop
int3
push
dec
xchg
shl
stos
sub
clc
sahf
or
jmp
mov
into
retf
jbe
imul
(bad)
jmp
adc
push
(bad)
pop
inc
or
rcl
int3
ss
(bad)
out
or
xor
(bad)
(bad)
push
cmp
cmp
into
dec
lea
icebp
push
push
xchg
imul
out
jp
jns
sub
nop
adc
aad
xchg
fwait
xor
add
push
es
sub
cmp
xor
outs
bound
mov
(bad)
call
jmp
sbb
xor
imul
mov
cmps
into
(bad)
(bad)
(bad)
dec
out
int
sub
xor
xor
test
mov
nop
loope
push
and
xor
popa
enter
mov
jmp
mov
and
jmp
aas
shl
test
xchg
rcr
pop
imul
xor
adc
in
dec
mov
stos
or
adc
and
inc
adc
(bad)
jmp
into
inc
inc
ja
addr16
mov
dec
clc
pop
ja
inc
adc
xchg
(bad)
(bad)
push
mov
mov
sbb
arpl
jle
pop
out
(bad)
jmp
inc
adc
fild
cmps
lea
call
fmul
dec
int3
pop
and
sbb
sar
inc
adc
(bad)
(bad)
jmp
aaa
push
dec
push
mov
ret
icebp
dec
jo
loopne
inc
inc
jno
addr16
dec
lock
(bad)
in
inc
jmp
and
sbb
clc
addr16
call
fwait
pop
(bad)
call
shl
xor
outs
pop
xchg
pop
and
inc
or
or
push
pop
sub
fcom
psrad
or
inc
ret
mov
mov
or
or
mov
sbb
add
in
add
mov
push
jo
imul
mov
or
ins
loopne
call
fsubr
test
mov
push
cmp
pop
dec
cmc
(bad)
call
jl
add
test
repz
mov
cmp
(bad)
fbld
daa
leave
rcr
sbb
mov
xlat
xchg
ror
mov
xchg
mov
out
mov
inc
jecxz
bound
(bad)
fstp
sahf
outs
pop
push
xchg
jo
add
cdq
ss
(bad)
mov
mov
jmp
inc
loopne
jmp
aam
out
jg
pop
pop
jmp
(bad)
(bad)
inc
ins
lods
loop
and
xor
aas
shl
inc
pop
mov
lock
jo
lahf
retf
(bad)
(bad)
(bad)
call
push
loopne
sbb
fiadd
jb
iret
jle
jmp
mov
pop
loopne
xchg
pop
jp
das
push
mov
js
(bad)
call
loope
repz
and
shr
jne
cmp
push
mov
call
and
mov
and
loop
sub
xor
sub
stos
stos
dec
call
shl
jo
and
popa
gs
stos
(bad)
ss
adc
sbb
push
dec
mov
pop
mov
and
(bad)
(bad)
call
push
or
scas
xor
imul
pusha
sbb
sub
cmp
mov
jnp
aam
jmp
xchg
(bad)
dec
ror
or
push
mov
add
(bad)
(bad)
call
data16
(bad)
mov
cmp
out
jo
sbb
(bad)
(bad)
(bad)
jg
fsub
xchg
dec
(bad)
mov
sbb
stc
add
xchg
inc
loop
test
cmps
inc
push
fadd
clc
(bad)
(bad)
mov
mov
mov
xor
cmps
(bad)
(bad)
jmp
popa
shl
mov
mov
add
stos
(bad)
(bad)
(bad)
dec
mov
cdq
adc
leave
add
pop
enter
and
jo
xchg
lock
jmp
jmp
push
mov
nop
cmp
or
(bad)
(bad)
inc
dec
inc
repz
sub
push
jmp
sahf
movsx
inc
cmp
fcomip
jbe
aad
mov
lock
call
xor
adc
mov
add
inc
cs
mov
(bad)
jmp
push
aad
mov
cmp
push
pop
cdq
(bad)
aam
pop
in
xchg
xchg
dec
adc
(bad)
(bad)
(bad)
push
sub
sub
mov
jg
mov
lock
pop
test
js
out
out
jnp
(bad)
(bad)
(bad)
push
xchg
xor
lods
(bad)
mov
xor
sub
(bad)
push
movs
push
sub
lods
outs
add
call
pop
aaa
dec
(bad)
iret
inc
lock
cmp
into
mov
lock
pop
jg
lock
das
mov
(bad)
(bad)
inc
jo
test
inc
pop
jge
shl
pop
sub
xchg
inc
and
(bad)
call
add
jmp
out
inc
xlat
mov
xor
in
(bad)
jbe
jmp
mov
xor
sbb
sbb
sar
(bad)
out
clc
push
ja
pop
stos
xor
mov
jecxz
rcr
ss
cdq
jl
outs
int3
mov
(bad)
call
lds
sbb
or
es
push
cdq
jp
bound
fdiv
pop
imul
dec
retf
and
(bad)
push
xor
inc
jbe
xor
mov
cmp
cmp
aaa
pop
add
sub
cmp
xchg
addr16
std
(bad)
dec
call
pop
cmp
dec
test
repnz
cmp
jne
gs
(bad)
(bad)
(bad)
push
packssdw
xor
xor
mov
(bad)
js
inc
aas
cli
icebp
pop
std
(bad)
(bad)
inc
adc
adc
or
fsub
fsub
clc
cmp
int3
xchg
fs
add
into
lods
push
jnp
add
jg
dec
mov
leave
add
push
xchg
inc
daa
adc
cmp
clc
icebp
inc
(bad)
mov
stos
fwait
jecxz
pop
push
or
mov
mov
and
and
(bad)
dec
sahf
cdq
cdq
xor
mov
stmxcsr
push
mov
and
lock
out
pop
call
jl
lahf
iret
add
lods
(bad)
popa
push
cld
mov
(bad)
fcomip
push
cmp
cld
ficomp
pop
mov
ss
jmp
push
sbb
inc
add
mov
pop
cld
inc
arpl
nop
sub
xchg
(bad)
arpl
loope
outs
pop
mov
pop
mov
jno
xchg
(bad)
xor
cli
cs
(bad)
dec
or
scas
and
push
ret
fisttp
leave
mov
aas
aas
pop
mov
jb
inc
mov
jae
lds
fstp
adc
mov
pop
and
inc
imul
inc
stos
cs
(bad)
dec
(bad)
int3
jmp
(bad)
aas
shr
mul
xor
adc
pop
sti
arpl
(bad)
jg
dec
out
lahf
sub
adc
xchg
cld
loop
in
sbb
iret
mov
pop
(bad)
(bad)
fcomip
fnstsw
pop
fidiv
mov
jmp
fild
xchg
xchg
ret
cmps
sbb
(bad)
jmp
cmps
fs
push
aad
icebp
aam
jmp
jb
mov
mov
dec
jg
cmp
push
movs
adc
mov
(bad)
inc
and
shl
cmp
dec
jae
outs
xchg
fs
mov
sub
rcr
(bad)
jmp
clc
sbb
popa
xchg
movs
dec
int
fs
jmp
imul
jle
(bad)
idiv
add
mov
mov
loop
pop
outs
fadd
test
(bad)
inc
popf
mov
cdq
pushf
aas
cmp
popf
scas
push
xor
adc
daa
nop
fstp
push
mov
add
call
push
push
in
pusha
xor
retf
and
mov
xchg
repz
aad
aad
inc
xchg
or
xor
div
mov
add
xor
(bad)
(bad)
(bad)
dec
or
jns
inc
enter
mov
dec
inc
push
or
lock
dec
(bad)
jmp
add
repnz
pop
adc
jl
(bad)
(bad)
(bad)
jmp
dec
add
or
mov
cmp
in
fdivr
lea
push
or
data16
pop
cmp
aaa
or
mov
or
push
add
sub
pop
shl
cmp
(bad)
and
test
mov
xchg
shl
ins
jmp
(bad)
(bad)
push
mov
(bad)
cmp
das
sbb
dec
or
mov
mov
idiv
(bad)
(bad)
dec
dec
scas
hlt
push
inc
xor
mov
shl
data16
and
add
daa
(bad)
jmp
leave
call
daa
mov
dec
pop
jg
mov
dec
dec
clc
aam
jo
lock
push
iret
inc
add
xchg
fld
xchg
(bad)
(bad)
(bad)
mov
xor
xchg
jbe
bound
call
xchg
mov
cmp
arpl
out
scas
mov
retf
bound
icebp
jge
dec
loop
inc
mov
loopne
jmp
js
jg
mov
xchg
sub
mov
mov
sub
or
dec
(bad)
push
into
pushf
xor
cld
push
repz
mov
xchg
mov
loope
(bad)
jmp
xor
outs
mov
mov
cmp
fisttp
sub
(bad)
(bad)
(bad)
js
lods
loope
(bad)
mov
mov
arpl
push
xchg
add
aas
shl
rol
mov
sbb
hlt
fs
cli
mov
push
(bad)
(bad)
jmp
mov
cmps
inc
and
xor
inc
jo
xor
xchg
retf
lea
push
ret
sub
dec
xor
ins
cdq
pop
mov
enter
sub
and
sub
repnz
call
shl
dec
inc
pop
rol
mov
dec
pop
pop
pop
sub
dec
add
in
jmp
sbb
fsub
fwait
dec
jne
je
and
enter
mov
(bad)
mov
retf
add
cmc
mov
cmp
cmp
(bad)
(bad)
mov
sbb
push
xchg
push
ja
rcl
out
push
icebp
test
cli
jmp
dec
fdiv
sub
dec
cwde
and
call
(bad)
(bad)
call
or
aas
mov
bndstx
call
(bad)
(bad)
call
js
mov
or
popa
fisttp
inc
pop
pop
pop
inc
ds
cmps
je
stos
(bad)
(bad)
(bad)
jmp
sahf
test
call
xchg
neg
mul
or
xchg
sub
mov
ret
inc
les
ds
add
mov
pop
dec
(bad)
neg
(bad)
(bad)
(bad)
(bad)
cld
adc
loop
ss
cmps
cdq
rol
adc
pop
retf
or
push
popf
or
push
xor
add
(bad)
jmp
inc
add
into
jnp
cli
mov
pop
idiv
mul
aas
jae
push
in
jg
sbb
int
pop
xchg
addr16
sbb
inc
add
(bad)
(bad)
(bad)
(bad)
out
dec
stos
dec
shl
mov
adc
push
dec
in
daa
mov
jnp
push
mov
jbe
test
mov
scas
xor
(bad)
(bad)
(bad)
fstp
jg
pop
test
ja
iret
jg
in
jnp
shl
(bad)
dec
ss
inc
mov
jge
clc
(bad)
(bad)
push
xchg
gs
mov
xor
nop
push
xchg
imul
je
pop
adc
mov
fnstenv
out
jg
mov
dec
and
rcr
xchg
loopne
scas
(bad)
(bad)
(bad)
call
(bad)
cmp
mov
mov
cmp
icebp
icebp
xchg
stos
xor
adc
std
je
dec
or
jg
lock
iret
pop
retf
xchg
pop
je
ret
inc
inc
and
inc
test
in
jnp
scas
retf
in
ja
(bad)
jmp
jp
scas
sub
neg
jle
inc
jecxz
(bad)
neg
(bad)
push
cld
(bad)
inc
mov
(bad)
aam
ins
mov
sub
push
push
xchg
cmps
paddsw
test
inc
sbb
jbe
call
jg
std
mov
mov
sub
xor
and
xchg
dec
out
out
lock
jmp
inc
adc
and
jge
repz
mov
test
pop
xchg
cdq
cmps
fsubr
cs
adc
cli
inc
ss
inc
and
mov
aam
mov
(bad)
out
dec
fiadd
cs
jns
cmps
scas
mov
push
jo
jnp
sub
mov
dec
pushf
mov
xor
call
ds
dec
sub
sbb
pop
mov
cmp
adc
cld
(bad)
inc
jnp
xor
mov
add
pop
jnp
xchg
sbb
(bad)
(bad)
(bad)
jge
aam
jl
aas
mov
in
in
and
fs
or
repz
test
add
mov
sar
jmp
ror
mov
fcomp
repz
ds
retf
std
cmp
sub
enter
outs
lea
js
in
test
dec
xor
call
sahf
stos
dec
inc
jle
cmc
pop
(bad)
(bad)
dec
rcr
les
push
ret
aam
daa
mov
loopne
sub
sub
addr16
(bad)
inc
repnz
jmp
and
pop
mov
cld
test
jp
rcl
stos
and
into
data16
sub
loope
out
dec
out
(bad)
jmp
(bad)
xor
xor
aam
loop
xchg
sti
cmps
mov
or
mov
xchg
add
lods
push
neg
shl
xchg
or
stos
push
xor
pop
pusha
mov
in
or
cmp
mov
call
cmp
aad
cmp
pop
push
pop
sbb
scas
fwait
mov
(bad)
(bad)
mov
inc
cmp
xchg
push
pop
cmp
test
aaa
call
push
lock
mov
mov
ss
dec
retf
(bad)
(bad)
(bad)
push
out
aad
mov
push
jmp
loope
stos
cmovg
mov
gs
(bad)
xor
shl
inc
push
or
or
push
jne
(bad)
(bad)
call
sbb
call
(bad)
fs
mov
mov
cmps
add
dec
test
fs
or
inc
pop
add
jns
in
sbb
ja
(bad)
jmp
inc
xchg
cmp
bound
or
lock
jae
mov
mov
inc
mov
and
(bad)
mov
fs
das
dec
pushf
sahf
cdq
sub
(bad)
in
dec
xchg
inc
xor
add
or
jae
xchg
adc
mov
sti
xchg
add
jmp
mov
(bad)
shr
enter
test
retf
push
or
xchg
(bad)
(bad)
fcomip
xchg
sbb
stc
inc
and
stos
shl
add
mov
(bad)
(bad)
jmp
movs
mov
cld
call
push
mov
xlat
pop
mov
fsubr
xchg
push
add
push
in
add
cmc
inc
push
ret
adc
jns
mov
sbb
dec
ficom
popf
fwait
(bad)
ret
sub
aas
jl
push
pop
ins
jo
stos
scas
push
inc
inc
cmps
or
pop
loope
cmps
cmp
mov
aas
cmp
out
xchg
inc
cmps
push
scas
cmp
sbb
ss
or
clc
inc
stos
mov
adc
std
sub
(bad)
int3
inc
cmps
(bad)
cmp
outs
into
(bad)
jmp
rcl
push
pushf
sbb
retf
add
mov
mov
add
(bad)
push
cmp
push
aaa
inc
and
mov
mov
add
jle
lahf
mov
movs
cmp
dec
pop
test
scas
jo
(bad)
(bad)
dec
xor
sub
inc
adc
lock
leave
or
inc
adc
dec
sbb
cli
(bad)
(bad)
dec
in
mov
rcl
scas
imul
pop
sub
outs
hlt
stos
js
sti
mov
int3
out
or
fild
xchg
push
xor
fbld
(bad)
(bad)
(bad)
jmp
xchg
(bad)
addr16
lock
sbb
rcl
loop
repnz
jle
es
or
in
idiv
jmp
mov
fdivp
cmp
adc
ror
lods
ror
out
sahf
mov
cmps
(bad)
(bad)
call
std
or
clc
fldcw
or
loope
mov
mov
pop
add
add
(bad)
(bad)
mov
or
rcl
mov
mov
pop
loope
xor
test
sbb
fsub
sbb
jmp
and
jbe
add
mov
mov
jg
mov
jne
adc
push
xchg
sub
inc
adc
(bad)
(bad)
jmp
adc
dec
and
jb
and
jmp
mov
adc
(bad)
(bad)
push
mov
out
out
or
and
loope
dec
xor
test
lock
and
or
inc
inc
das
xchg
dec
es
cld
jne
gs
call
cmp
add
mov
jae
sub
cs
jmp
and
lahf
aam
jns
ret
(bad)
cmp
jle
cmps
int
jns
push
ins
inc
loop
push
mov
cmp
jmp
loope
retf
jno
es
push
jnp
shl
out
push
pop
cmp
loop
(bad)
out
jmp
or
cmps
xlat
cmp
cmp
pusha
mov
adc
cld
mov
(bad)
mov
mov
sbb
mov
dec
push
jmp
xor
xlat
mov
clc
add
inc
jmp
and
bnd
movs
mov
test
retf
mov
sbb
pop
lock
inc
mov
jo
sbb
inc
sub
or
aam
pop
mov
mov
mov
xchg
gs
mov
lds
lock
mov
(bad)
out
pop
cld
inc
cmp
(bad)
jg
(bad)
(bad)
repnz
jg
cmp
sub
out
imul
sub
add
jmp
push
test
pop
xchg
mov
(bad)
adc
sbb
jno
loop
inc
fucomi
fst
(bad)
(bad)
call
ins
jmp
jl
mov
pop
aas
lock
loope
inc
lods
es
add
enter
(bad)
call
mov
imul
adc
sahf
dec
inc
ror
jge
adc
(bad)
jmp
mov
xor
xor
and
push
imul
int
jmp
ins
(bad)
(bad)
jmp
inc
xchg
addr16
test
jecxz
cld
sti
mov
push
popa
push
push
or
dec
mov
shl
sbb
div
out
jnp
dec
iret
fcmovbe
std
(bad)
(bad)
fbld
push
shl
cmp
mov
inc
xchg
sti
push
pop
(bad)
push
std
std
neg
(bad)
out
(bad)
and
xchg
test
mov
mov
fcomi
mov
add
mov
cmp
(bad)
out
mov
data16
mov
dec
push
xor
inc
mov
(bad)
inc
mov
rep
xchg
inc
outs
(bad)
add
mov
or
out
(bad)
xchg
das
jge
ror
cli
(bad)
(bad)
(bad)
push
sub
pop
les
(bad)
cmp
retf
jbe
sahf
add
test
(bad)
(bad)
(bad)
jmp
jmp
sbb
adc
in
cmp
(bad)
pusha
cwde
cmp
or
arpl
sti
pop
out
movs
icebp
inc
xchg
or
cld
inc
push
jg
mov
mov
ror
xor
jns
jl
lea
(bad)
(bad)
(bad)
jmp
popa
aaa
push
ror
push
popf
mov
jecxz
repz
adc
jo
inc
pusha
or
(bad)
(bad)
dec
and
stos
call
dec
xchg
and
icebp
lock
push
sub
mov
sbb
call
push
or
inc
push
aaa
xor
ss
xchg
or
lahf
test
mov
outs
(bad)
mov
adc
jge
imul
icebp
jmp
outs
adc
add
(bad)
(bad)
(bad)
jmp
xor
sbb
in
les
fadd
jnp
cmp
pop
and
in
(bad)
mov
iret
(bad)
(bad)
(bad)
push
test
fsub
out
retf
pop
or
das
jp
cld
in
cmp
cmp
sub
jne
inc
xchg
inc
push
fsub
je
xor
ret
and
sbb
(bad)
(bad)
dec
mov
lahf
cli
call
fwait
stos
sub
pop
pop
fsubr
or
xlat
push
dec
fwait
rol
pop
mov
xchg
xor
test
(bad)
(bad)
jg
sbb
sahf
int
(bad)
(bad)
fnstenv
and
jns
retf
idiv
jg
lds
and
(bad)
(bad)
jnp
lea
add
xlat
call
inc
call
fld
fs
jp
in
sbb
leave
(bad)
jbe
(bad)
(bad)
(bad)
dec
push
fstp
bound
retf
idiv
stos
xchg
movs
bsf
test
sub
(bad)
(bad)
jmp
hlt
sahf
and
mov
(bad)
mov
outs
outs
mov
mov
(bad)
(bad)
(bad)
push
xor
or
dec
imul
repnz
inc
push
in
ret
(bad)
mov
(bad)
(bad)
js
mov
fld
movs
adc
aas
cmp
es
pop
and
sbb
je
int3
xlat
jne
cmp
in
xor
ss
ds
(bad)
(bad)
dec
inc
ret
mov
rcl
pop
cs
or
push
gs
stos
imul
fs
jno
(bad)
(bad)
jmp
aaa
test
arpl
pusha
push
jne
pop
call
pop
push
dec
adc
xor
jmp
sahf
adc
and
test
retf
rcr
mov
ror
out
jae
(bad)
(bad)
inc
mov
loope
or
fild
inc
icebp
cmp
in
aas
jp
mov
in
mov
push
(bad)
movs
das
test
dec
xchg
ret
(bad)
pop
or
mov
sahf
jle
mov
push
jbe
fsub
pop
adc
outs
(bad)
cmps
rcr
les
jl
cmp
mov
jbe
push
outs
dec
sbb
push
push
(bad)
ins
mov
aam
cmps
imul
jne
xchg
(bad)
call
xlat
xor
inc
je
xor
aaa
pusha
sub
cmp
cdq
add
push
sub
mov
xchg
push
jge
outs
ja
mov
jmp
ret
xchg
and
push
inc
es
jmp
aam
mov
mov
xchg
xchg
mov
jl
das
push
sub
std
jns
sbb
push
(bad)
(bad)
jmp
pushf
cmps
sbb
cld
int
in
imul
pop
cmp
clc
mov
iret
jb
sahf
or
mov
loope
cmps
dec
add
adc
mov
(bad)
(bad)
call
jo
add
push
inc
fs
push
pop
shl
mov
or
mov
push
mov
jnp
sbb
sti
cbw
cmp
jne
jnp
fmul
pop
mov
(bad)
(bad)
(bad)
jmp
and
jge
mov
inc
cmc
xor
jge
outs
push
jmp
add
sub
lock
pop
test
in
iret
rcr
adc
scas
lea
loopne
(bad)
call
fsub
out
jecxz
xor
sub
jb
xlat
xlat
jp
pop
and
idiv
(bad)
pop
(bad)
jo
push
ret
mov
imul
push
sbb
(bad)
(bad)
jmp
cs
into
xor
cmp
stos
pushf
jg
iret
mov
or
fidiv
add
add
aas
hlt
(bad)
(bad)
sub
fistp
adc
(bad)
(bad)
jg
pop
out
sub
add
mov
pop
sub
add
inc
adc
loopne
ins
dec
xor
call
push
mov
movs
cmp
(bad)
cwde
out
stos
sar
fwait
(bad)
(bad)
(bad)
fisttp
or
xchg
shr
js
leave
or
in
shr
adc
(bad)
push
mov
popa
push
out
xor
jl
mov
fwait
int
and
mov
cld
into
(bad)
movs
outs
pusha
adc
push
pushf
sub
outs
(bad)
inc
pusha
and
imul
mov
ss
fs
xchg
stos
(bad)
mov
mov
gs
test
push
pop
inc
pop
lock
outs
xchg
pop
pop
imul
mov
(bad)
(bad)
(bad)
mov
ja
out
cmps
or
inc
call
inc
cld
stos
stos
mov
icebp
mov
es
(bad)
(bad)
call
cld
cmp
mov
ret
dec
ret
test
xor
jns
push
scas
popa
cmp
les
mov
(bad)
jmp
es
pop
cwde
sbb
or
ret
push
mov
(bad)
(bad)
push
mov
push
lea
sub
inc
test
cmps
enter
and
lock
jo
push
and
dec
jg
test
in
fcomp
enter
and
inc
add
stos
cld
out
xchg
add
push
add
jo
(bad)
(bad)
(bad)
dec
sbb
pop
add
pop
and
mov
push
cmps
(bad)
pop
jb
rcl
std
pop
loopne
loopne
xor
mov
cwde
jecxz
mov
(bad)
cmp
(bad)
lock
cdq
ins
(bad)
call
dec
xor
(bad)
(bad)
jmp
daa
ds
das
inc
ins
scas
mov
jle
dec
(bad)
mov
sub
(bad)
(bad)
(bad)
call
and
fdivrp
bnd
add
mov
and
add
fwait
cwd
mov
(bad)
call
sahf
cmp
scas
fistp
adc
jl
stos
rcr
xor
pop
outs
loope
rol
call
mov
jl
mov
fwait
mov
test
push
cs
popa
stos
cmc
adc
jl
(bad)
dec
fidiv
push
shl
xor
inc
out
leave
fiadd
(bad)
(bad)
push
cmp
mov
clc
xor
popa
fcom
inc
mov
dec
jmp
(bad)
jmp
imul
fadd
fucom
shr
xchg
loope
clc
ret
mov
xchg
(bad)
call
hlt
movs
nop
inc
outs
mov
loop
hlt
lock
dec
adc
aas
clc
(bad)
pop
(bad)
leave
aaa
sbb
(bad)
out
rol
and
shr
js
into
fwait
out
push
sub
daa
ficom
into
outs
std
xlat
(bad)
(bad)
jmp
not
jmp
fnstsw
call
mov
je
pop
adc
mov
int3
(bad)
(bad)
call
sub
popf
cmp
pop
cmp
fidivr
xchg
jl
dec
(bad)
(bad)
(bad)
jmp
mov
mov
xor
sahf
imul
int
out
rol
mov
push
push
sbb
rol
mov
xlat
push
mov
outs
cli
sub
iret
jl
cmp
aam
xchg
lock
jo
arpl
cli
xlat
lods
stos
push
imul
std
jmp
test
(bad)
or
sub
dec
cmp
inc
pop
mov
pop
push
pop
pushf
mov
fstp
call
retf
aam
xor
pop
(bad)
(bad)
(bad)
call
adc
push
stos
xchg
adc
xchg
in
mov
mov
mov
xor
xchg
sbb
sti
(bad)
jmp
adc
sub
out
jg
jle
aaa
call
sub
jnp
pop
aas
pop
or
addr16
in
in
int3
hlt
pop
js
scas
sub
cmp
(bad)
mov
sbb
and
gs
cs
cld
dec
cmp
(bad)
(bad)
inc
mov
jno
movs
jns
and
push
and
xchg
sti
lahf
cmps
push
sub
dec
push
dec
ds
mov
dec
and
mov
and
imul
xchg
sub
je
js
outs
mov
aad
clc
pop
movs
ds
jmp
scas
lods
push
stos
arpl
jp
(bad)
call
out
dec
cmp
dec
jb
dec
inc
unpcklps
sub
(bad)
(bad)
jmp
jle
test
fnsave
les
push
pop
pop
sub
in
div
push
out
out
mov
(bad)
(bad)
jmp
inc
mov
aad
out
jmp
push
outs
mov
jmp
push
(bad)
dec
lahf
das
test
lds
xor
lds
sub
into
xchg
sti
mov
fnstsw
push
xor
test
pop
dec
push
daa
adc
mov
test
sbb
arpl
and
loopne
fdivr
(bad)
(bad)
jg
adc
cdq
add
and
addr16
xor
mov
xchg
ja
lods
push
add
pop
or
cli
push
in
inc
fs
mov
loope
sbb
(bad)
(bad)
out
mul
jg
inc
cmp
jle
or
sub
leave
mov
dec
(bad)
(bad)
dec
inc
js
lds
inc
inc
xchg
les
push
add
outs
js
ds
scas
jmp
(bad)
call
retf
jecxz
mov
push
xor
and
xor
push
movs
dec
test
mov
(bad)
push
cmp
leave
movs
adc
sub
mov
shl
mov
xchg
adc
jmp
aad
jns
clc
aad
and
mov
dec
and
test
repnz
lahf
fsubr
es
ins
jmp
outs
sbb
lds
cwde
pop
ret
sub
rol
cmps
lahf
fistp
bound
dec
adc
mov
xchg
push
movs
cs
push
dec
xor
xor
(bad)
jmp
and
cs
push
dec
mov
push
adc
mov
das
pop
mov
cmps
out
inc
pop
std
(bad)
jg
jbe
out
sbb
or
ja
sub
jae
push
scas
mov
(bad)
(bad)
inc
mov
or
ror
mov
test
mov
(bad)
(bad)
(bad)
fbld
cmp
imul
xor
addr16
test
xor
test
out
sbb
(bad)
sub
mov
add
mov
mov
jmp
lea
push
inc
dec
daa
and
mov
inc
cmp
(bad)
(bad)
(bad)
mov
cmp
aad
cli
dec
xor
clc
repnz
fistp
pop
push
addr16
(bad)
(bad)
inc
call
mov
mov
jge
sahf
in
imul
ja
(bad)
inc
add
(bad)
mov
out
jge
mov
loope
(bad)
aas
bound
imul
(bad)
dec
lods
mov
stc
ret
xor
fdivr
pop
js
test
out
(bad)
cmp
add
pop
inc
or
(bad)
call
ins
cmc
inc
xlat
test
pop
mov
loop
mov
stos
mov
jmp
out
xchg
pop
sub
dec
scas
mov
xor
mov
push
mov
cmp
mov
(bad)
movs
mov
add
(bad)
pop
(bad)
(bad)
(bad)
mov
mov
ror
imul
jb
inc
sar
mov
sub
push
or
mov
xor
xlat
jmp
les
inc
stos
pop
sub
push
movs
pop
aam
test
fild
mov
shl
cld
push
pop
mov
mov
loope
or
or
pop
or
xor
je
stos
sbb
scas
cmps
nop
fs
adc
shl
dec
movs
add
in
(bad)
(bad)
(bad)
jg
outs
fsin
scas
movd
test
mov
jg
(bad)
repnz
(bad)
call
lds
xchg
stos
mov
out
imul
loope
and
dec
mov
int
cmp
(bad)
call
jle
idiv
lahf
jg
mov
inc
sub
(bad)
sbb
(bad)
(bad)
fisttp
(bad)
ja
dec
aad
mov
test
pop
pop
test
ret
(bad)
jmp
mov
test
xor
cmp
(bad)
(bad)
(bad)
jg
jnp
rol
xor
lock
out
add
lods
scas
fld
push
adc
sbb
add
(bad)
(bad)
dec
mov
loop
in
inc
popa
mov
mov
ds
xor
iret
mov
lahf
lock
mov
icebp
dec
push
shr
call
add
cli
(bad)
push
or
push
ins
jmp
(bad)
(bad)
outs
and
(bad)
mov
mov
sbb
and
lods
pop
(bad)
test
(bad)
std
pop
dec
aas
sbb
div
push
cmp
nop
adc
into
pop
xlat
inc
(bad)
outs
out
push
(bad)
rol
loopne
je
(bad)
(bad)
(bad)
jmp
push
mov
pop
push
test
adc
rol
in
lea
fwait
push
(bad)
fbstp
mov
fsubr
cmp
pop
mov
sbb
or
arpl
(bad)
push
push
jecxz
sub
popf
mov
cmp
jo
in
jbe
loopne
call
jne
xor
popa
inc
adc
ins
scas
add
and
call
add
imul
test
les
sbb
jg
dec
jg
retf
sbb
sub
imul
ret
sbb
xchg
scas
mov
mov
(bad)
mov
loopne
pop
mov
shl
mov
lods
dec
rcl
push
shl
push
(bad)
ss
fucomi
in
mov
fstp
sahf
out
dec
fisub
push
adc
jmp
outs
jge
or
(bad)
jg
jg
fcom
out
mov
cmps
ja
dec
repnz
out
lds
xchg
pop
icebp
(bad)
call
ds
cs
mov
ins
test
jecxz
inc
push
movs
jp
not
(bad)
(bad)
dec
pop
xchg
sbb
inc
sbb
and
mov
and
pop
call
(bad)
(bad)
(bad)
(bad)
clc
clc
loope
movs
xchg
div
retf
cmp
test
inc
xchg
dec
and
(bad)
(bad)
push
test
xchg
test
(bad)
push
sbb
inc
in
push
adc
out
fcomip
(bad)
call
(bad)
adc
mov
mov
jns
call
cmp
(bad)
call
(bad)
ficomp
inc
data16
sub
mov
mov
push
or
push
(bad)
(bad)
(bad)
push
sub
aad
jo
int
push
lods
scas
jle
push
sbb
mov
(bad)
(bad)
(bad)
call
push
add
or
js
mov
xchg
push
cwde
rcr
ds
lock
call
adc
adc
or
mov
adc
jg
call
pop
jle
loopne
sbb
mov
mov
xor
enter
dec
(bad)
dec
(bad)
push
jo
push
inc
adc
mov
(bad)
aas
hlt
retf
test
mov
(bad)
mov
mov
and
inc
sub
call
(bad)
dec
repz
shl
mov
adc
js
adc
(bad)
mov
lock
push
jbe
outs
mov
test
(bad)
(bad)
(bad)
(bad)
jl
cmps
pushf
ins
cmp
xchg
lods
jns
sub
xor
test
(bad)
(bad)
(bad)
(bad)
out
dec
add
mov
js
enter
dec
or
cld
aam
mov
inc
push
cmp
push
xchg
stos
mov
pop
movs
dec
aad
jl
and
adc
or
pop
clc
xchg
call
add
mov
test
call
cld
js
adc
in
sti
xchg
cmp
div
sub
clc
call
xor
pop
dec
js
adc
mov
sar
(bad)
(bad)
(bad)
cmp
shr
scas
aad
rol
ficom
mov
cmps
stos
call
sub
(bad)
jmp
inc
movs
outs
out
int
hlt
jecxz
data16
jns
fs
pop
les
pop
or
(bad)
call
sbb
inc
imul
pop
sub
inc
nop
repz
fadd
dec
idiv
dec
loop
and
ds
outs
aas
movs
hlt
in
jmp
(bad)
(bad)
(bad)
jnp
xchg
bsr
sbb
xchg
xor
xlat
out
(bad)
xchg
dec
xchg
stos
jo
xchg
nop
(bad)
(bad)
(bad)
(bad)
cmp
das
push
out
movs
lods
sbb
cmp
pop
jbe
jb
hlt
hlt
jl
ss
dec
les
clc
call
and
cmp
mov
scas
mov
xchg
aam
jmp
(bad)
outs
ficomp
cmp
push
ins
call
popf
pop
mov
fcomip
push
sub
jmp
cmps
loope
aad
add
inc
cmp
push
add
aad
call
pushf
dec
dec
int
adc
neg
(bad)
mov
xchg
jle
cmp
push
int3
in
cmps
mov
sbb
pusha
mov
imul
loope
(bad)
(bad)
(bad)
(bad)
js
inc
cmp
xchg
(bad)
xchg
popa
sti
mov
imul
mov
inc
sti
fiadd
cmp
jmp
sbb
add
and
or
dec
jns
(bad)
jg
adc
scas
dec
mov
inc
inc
jo
xor
and
jbe
leave
jg
adc
add
xchg
imul
mov
xchg
cmovae
movs
test
xchg
ret
jle
or
enter
repnz
(bad)
(bad)
dec
xor
mov
jo
push
sahf
dec
pushf
call
js
jne
mov
jb
test
ret
and
pop
cdq
inc
pop
imul
inc
pushf
and
aad
jmp
call
bound
pop
mov
(bad)
call
outs
rcl
push
cmp
push
lods
sub
pop
jecxz
movs
in
pop
movs
cs
jmp
jp
lock
(bad)
sbb
int
stos
mov
ja
fbld
(bad)
(bad)
jmp
div
add
pop
xor
pushf
xor
xor
and
iret
sti
shr
shr
cmp
popa
test
pop
repz
cli
imul
or
outs
ins
xchg
arpl
std
mov
sub
jmp
jmp
push
inc
rol
pop
mov
push
retf
xor
push
(bad)
mov
(bad)
(bad)
jg
jmp
test
clc
enter
sub
(bad)
loopne
or
scas
clc
mov
pop
jo
cmc
pop
jne
jno
push
jne
and
add
and
(bad)
(bad)
inc
mov
xor
repnz
rol
pop
mov
jmp
push
xchg
xor
(bad)
(bad)
inc
mov
sbb
or
inc
cmps
inc
and
popa
or
pop
inc
sbb
retf
inc
test
loope
mov
jg
cdq
(bad)
jg
(bad)
fcmovnbe
sti
inc
and
mov
and
fcom
jmp
pop
mov
ret
pop
add
push
popf
sbb
add
call
clc
xchg
test
popa
cmp
ins
xchg
or
adc
xchg
nop
nop
scas
clc
mov
shr
jb
and
mov
pop
pop
jg
(bad)
fbstp
dec
inc
dec
push
gs
shl
cdq
cmp
mov
sbb
(bad)
(bad)
inc
or
cwde
xor
ret
fidiv
push
jg
push
add
inc
(bad)
mov
gs
in
mov
in
je
xchg
mov
bound
mov
or
mov
ins
(bad)
(bad)
(bad)
(bad)
mov
cmps
xchg
cmps
pop
cmp
fist
sub
shr
popf
sub
dec
add
in
jmp
sbb
les
ins
push
movs
popa
bound
cmp
xchg
paddusb
ret
jo
(bad)
(bad)
(bad)
jmp
inc
jl
mov
xchg
pop
sub
cld
ret
sti
sub
lods
and
popa
sar
(bad)
fcomip
jb
sbb
mov
add
pop
cmp
(bad)
retf
mov
es
jmp
mov
aam
int3
mov
xor
push
xchg
inc
inc
add
dec
dec
out
push
shr
mov
push
ja
mov
push
fisttp
xchg
cmp
rcl
shl
shl
(bad)
(bad)
mov
(bad)
pop
(bad)
loopne
push
shl
enter
adc
inc
pop
jle
pop
dec
xor
adc
push
cmp
(bad)
(bad)
(bad)
dec
cs
ins
xor
ins
push
xor
fcomp
mov
cmp
inc
arpl
sbb
push
lods
fnstcw
push
and
jmp
cs
daa
or
add
ret
xor
push
(bad)
jmp
mov
fcompp
fcmovu
lods
outs
jmp
clc
(bad)
fdiv
cmp
cmp
repz
call
adc
fdivr
in
ja
std
(bad)
(bad)
jmp
xor
shr
cwde
lahf
dec
movs
push
lock
in
jge
(bad)
outs
(bad)
dec
sub
in
jns
std
stos
(bad)
mov
in
arpl
push
mov
int3
(bad)
(bad)
dec
push
iret
les
xchg
das
push
dec
cli
mov
jne
jp
es
jae
and
jmp
mov
imul
mov
sbb
(bad)
mov
sub
xor
shl
shl
xchg
push
cld
push
sub
test
shl
fucomip
lods
xchg
loope
sub
xchg
sbb
fist
(bad)
cli
fwait
cmp
inc
lds
xor
call
pop
mov
xchg
mov
call
mov
in
jl
mov
mov
pop
jmp
in
test
sub
add
in
fwait
mov
hlt
inc
jl
out
mov
nop
push
pop
(bad)
(bad)
(bad)
call
bound
jecxz
dec
cwde
pop
lods
push
push
add
lods
xor
bound
or
(bad)
in
xchg
mov
mov
cmp
(bad)
jg
sahf
sub
retf
jne
imul
data16
fs
sub
xor
xor
push
int3
gs
and
loopne
cld
mov
sbb
sub
(bad)
add
call
and
jb
retf
fst
mov
inc
(bad)
(bad)
(bad)
(bad)
call
test
test
ret
sar
stc
mov
xlat
mov
mov
cmp
dec
lock
(bad)
cmp
out
mov
pop
cmp
dec
gs
pop
jge
outs
ja
cld
fsubr
test
in
sbb
cmp
mov
cli
inc
cmp
sbb
imul
gs
inc
mov
(bad)
call
add
or
mov
xchg
in
popf
mov
and
call
cmovge
lea
pusha
pop
mov
arpl
cmps
and
xchg
sub
jnp
(bad)
(bad)
(bad)
stc
mov
cmp
push
jecxz
pop
and
mov
xor
mov
jmp
jae
stos
daa
add
sbb
movs
push
inc
xor
and
push
(bad)
mov
push
int3
jl
mov
push
push
clc
les
stos
movs
cwde
ss
adc
popa
or
pop
hlt
push
pop
(bad)
sbb
les
or
(bad)
idiv
fdiv
cmp
inc
xlat
jmp
inc
sqrtps
lea
xchg
mov
xor
repnz
das
in
aas
and
sbb
shr
pop
movs
mov
enter
jg
(bad)
xchg
leave
test
pop
ins
movs
scas
imul
sbb
hlt
fadd
mov
push
sbb
(bad)
outs
in
in
cmp
push
pop
in
retf
mov
stos
jle
call
test
dec
loopne
outs
mov
xlat
lahf
sbb
(bad)
std
enter
bound
pop
or
sbb
jne
ss
mov
ret
push
repz
ss
mov
(bad)
push
xchg
pop
(bad)
daa
jecxz
dec
cmp
ins
add
stc
mov
push
scas
mov
icebp
cdq
inc
cli
(bad)
jmp
js
xchg
es
xchg
lods
sub
fidivr
and
push
sub
(bad)
(bad)
mov
test
mov
aad
sub
js
iret
inc
int
mov
mov
ja
call
ficomp
and
xor
fmul
dec
int3
shl
outs
clc
scas
xor
adc
add
imul
xchg
(bad)
(bad)
dec
in
test
push
and
and
push
add
pusha
dec
or
mov
pop
clc
(bad)
(bad)
(bad)
inc
jb
(bad)
push
inc
mov
and
inc
dec
sub
inc
js
add
stos
(bad)
(bad)
test
mov
jp
jno
(bad)
(bad)
sbb
int
dec
inc
loopne
in
cmp
(bad)
(bad)
call
cmp
or
std
mov
inc
inc
add
add
mov
push
push
mov
(bad)
jns
cmp
cmc
mov
scas
(bad)
(bad)
inc
sahf
fs
imul
ds
stos
call
push
out
sahf
ror
adc
jmp
mov
cmp
lods
loope
(bad)
mov
lea
into
jns
mov
out
bound
retf
adc
adc
(bad)
inc
add
sbb
push
retf
add
push
std
xchg
outs
xchg
punpckhbw
aad
fstp
pushf
cmps
sub
(bad)
call
in
sub
mov
mov
add
xchg
and
xchg
pop
push
(bad)
fcomip
dec
jb
mov
(bad)
cmp
push
mov
xchg
cs
(bad)
(bad)
call
lock
sbb
xchg
add
sub
aas
or
loopne
(bad)
call
bound
mov
push
or
lock
fbstp
ins
(bad)
(bad)
call
dec
push
push
loopne
ds
clc
inc
into
scas
fistp
js
mov
(bad)
fwait
add
not
sti
cmps
outs
(bad)
push
jns
xchg
(bad)
jg
call
inc
mov
pop
jge
and
cmova
jmp
shl
call
pusha
rol
je
push
dec
(bad)
and
ret
mov
add
(bad)
jmp
arpl
lahf
push
push
(bad)
(bad)
adc
test
jle
sub
push
ins
pop
sub
(bad)
mov
cmps
or
jp
inc
adc
xchg
push
and
and
pop
test
cmp
shl
xor
jl
jbe
fild
call
jne
loopne
adc
cli
ins
outs
(bad)
(bad)
(bad)
(bad)
jnp
pop
ud0
sti
aas
mov
xchg
mov
push
mov
pop
fwait
lock
mov
jle
(bad)
into
(bad)
mov
call
mov
sti
aad
mov
call
(bad)
jmp
mov
call
cmp
mov
fiadd
mov
mov
xor
cmp
(bad)
call
inc
inc
fisub
shr
cmps
into
xor
fisttp
push
ror
pop
std
(bad)
call
cmp
es
stos
xor
scas
das
retf
inc
sub
mov
mov
test
mov
xchg
out
aaa
mov
sub
adc
fs
dec
sub
(bad)
(bad)
call
mov
and
shl
cwde
std
inc
(bad)
retf
test
inc
jge
stc
jb
sub
movs
dec
shr
(bad)
(bad)
(bad)
push
mov
xlat
lods
jb
jmpw
xchg
pop
movs
cdq
and
push
jecxz
icebp
gs
(bad)
(bad)
call
sub
jmp
mov
repz
inc
rcr
push
or
aaa
inc
(bad)
(bad)
(bad)
call
stos
test
inc
mov
popf
rol
retf
xchg
xchg
in
sbb
ins
or
rcl
push
mov
bound
push
daa
leave
aaa
cmps
ins
nop
sbb
cmps
fstp
inc
daa
pop
sbb
mov
or
pop
jnp
(bad)
cmp
mov
xchg
scas
cmp
jmp
or
(bad)
inc
dec
adc
pop
mov
test
mov
pop
or
aaa
sbb
jp
cdq
or
call
and
jmp
jmp
push
xchg
ret
cli
xchg
pop
mov
pop
xchg
imul
sti
xchg
sub
and
and
pop
shl
sbb
(bad)
(bad)
jmp
dec
xchg
sub
je
call
imul
into
jp
test
sahf
and
(bad)
jg
leave
xor
imul
cli
(bad)
out
je
data16
xor
push
(bad)
(bad)
(bad)
jmp
jmp
in
or
adc
adc
xor
mov
(bad)
jmp
(bad)
jle
sti
hlt
dec
xchg
je
push
jb
in
sbb
repnz
aad
test
pop
fist
lea
jnp
add
mov
pop
call
(bad)
jmp
(bad)
push
mov
ja
movs
inc
loope
jnp
sti
fistp
(bad)
(bad)
jg
dec
dec
and
ror
and
cmp
sbb
bound
add
data16
pop
les
jae
adc
(bad)
(bad)
(bad)
(bad)
dec
xor
mov
xchg
xchg
sahf
sbb
inc
sbb
ret
aaa
movs
ret
cmps
and
cmp
jl
out
mov
out
(bad)
call
jns
(bad)
(bad)
(bad)
fbstp
mov
mov
out
pop
push
stos
cmps
inc
jecxz
mov
jg
cld
add
jb
je
jp
lock
mov
in
xor
fistp
jmp
movs
call
cli
shr
in
fcom
push
rcr
or
inc
test
push
dec
mov
mov
pop
pop
ss
mov
cmp
push
aad
mov
push
cs
(bad)
call
ss
jbe
stc
stos
data16
(bad)
neg
scas
retf
mov
sar
addr16
cmp
sub
lods
test
xor
repnz
mov
push
push
dec
jo
adc
push
xor
inc
into
mov
fisttp
daa
ret
mov
(bad)
(bad)
call
push
(bad)
std
daa
cmps
test
or
jo
inc
and
pusha
mov
push
std
(bad)
call
push
pop
mov
xchg
fs
cmp
clc
and
(bad)
(bad)
call
push
and
add
jg
dec
cmp
mov
aaa
std
retf
mov
cmp
(bad)
jg
std
mov
lock
pop
cld
retf
push
stos
aad
and
aam
add
mov
xor
cmp
jge
addr16
pusha
cdq
cdq
stc
bound
(bad)
jg
push
test
adc
ja
add
cli
icebp
xchg
daa
inc
inc
loope
add
or
(bad)
mov
or
mov
and
push
outs
(bad)
(bad)
jmp
pop
rcr
aaa
sub
popa
inc
inc
and
(bad)
jge
inc
aam
(bad)
(bad)
ficom
sub
push
jmp
xchg
hlt
mov
fs
fimul
cwde
push
clc
(bad)
call
or
lea
push
imul
sahf
gs
popf
call
das
bound
cmp
mov
mov
add
pop
mov
mov
xor
(bad)
push
xor
push
push
loopne
shl
dec
cmc
sbb
sbb
add
lahf
mov
stos
das
hlt
(bad)
(bad)
jmp
in
pop
gs
adc
push
repnz
outs
and
push
adc
call
push
inc
int
outs
inc
mov
sbb
mov
fwait
jmp
lds
scas
jp
xchg
xchg
fs
adc
sbb
cmp
push
xchg
pop
pop
cmp
mov
ret
push
push
xchg
popa
and
mov
call
pop
in
lock
jmp
mov
and
mov
ds
in
lods
adc
dec
pushf
add
add
push
ror
inc
sbb
inc
retf
iret
iret
cdq
lods
sahf
and
dec
adc
cmp
xchg
out
idiv
pop
ret
cmp
or
lods
popa
or
xor
add
mov
(bad)
in
sub
jnp
or
mov
jl
dec
ret
pop
(bad)
pop
out
sub
das
(bad)
pop
inc
ret
pop
frstpm(287
fdivr
jmp
movs
movs
and
dec
test
int3
shr
(bad)
(bad)
(bad)
inc
mov
mov
xchg
adc
xchg
mov
mov
jmp
push
xor
xchg
mov
in
iret
mov
sub
in
(bad)
fbld
ss
test
mov
dec
shl
adc
(bad)
(bad)
(bad)
jp
push
fadd
cmp
and
push
sbb
inc
inc
pop
mov
shr
out
mov
(bad)
(bad)
call
jno
pop
test
hlt
pop
and
pop
pop
add
push
cwde
push
shl
outs
mov
(bad)
(bad)
(bad)
(bad)
mov
outs
adc
and
inc
mov
ins
xchg
cli
cmc
addr16
inc
jl
mov
dec
add
cmc
repz
and
sub
xor
(bad)
(bad)
(bad)
mov
pop
push
xchg
fs
int
cmps
jno
les
pop
mov
push
lds
scas
push
jb
aam
pop
(bad)
jmp
cli
mov
data16
je
lds
jmp
and
loopne
(bad)
jmp
loop
push
inc
push
outs
movs
scas
leave
push
push
mov
xor
pop
push
arpl
fbstp
or
adc
lods
pop
inc
or
mov
mov
(bad)
inc
pop
jl
xchg
lahf
pop
retf
jb
(bad)
pushf
rcl
push
xor
xchg
jle
adc
idiv
cmp
push
adc
lds
inc
fisub
call
scas
pop
fs
xor
in
call
mov
xchg
ret
ror
push
xchg
and
pop
fbstp
jne
retf
inc
add
stc
sbb
out
dec
fcomp
add
inc
and
out
mov
aas
jnp
add
jmp
xchg
imul
and
xor
in
dec
lock
xor
and
pop
inc
push
inc
inc
and
push
std
or
scas
scas
mov
pop
sub
adc
pop
loopne
mov
ins
dec
rcl
neg
scas
shr
es
(bad)
(bad)
dec
inc
jl
jnp
sbb
jno
imul
jg
xor
dec
clc
xor
fcomp
adc
add
adc
or
pop
rol
gs
loope
out
movs
popf
cmp
(bad)
dec
push
and
mov
dec
es
in
jno
or
push
stos
outs
(bad)
or
sbb
mov
add
add
popa
jo
outs
sbb
sti
xchg
jae
fmul
add
push
cdq
fnstcw
repz
in
loope
pop
loopne
dec
mov
dec
std
stc
cmp
push
ret
cli
(bad)
(bad)
dec
pop
jge
les
(bad)
inc
fisub
or
aas
jbe
fsub
loopne
push
(bad)
(bad)
jmp
mov
pop
cli
mov
addr16
and
jb
leave
cmp
adc
(bad)
(bad)
mov
or
in
xchg
dec
and
adc
fs
popa
cmp
(bad)
(bad)
jmp
fldenv
in
out
pop
xchg
mov
or
pop
mov
je
push
arpl
(bad)
sub
jmp
pop
sbb
popa
push
mov
ror
pop
push
pop
add
push
popa
mov
movs
mov
pop
rcr
adc
aas
or
dec
mov
pop
fisub
les
or
jmp
add
pop
sbb
pop
cdq
sub
jge
adc
pop
imul
dec
out
movs
lods
fs
pop
(bad)
call
xchg
or
pop
test
daa
mov
int
ss
push
or
call
repnz
je
mov
and
std
test
jo
xlat
add
int3
add
(bad)
(bad)
ds
ds
mov
icebp
or
cmp
(bad)
ja
inc
adc
(bad)
jl
xchg
retf
mov
retf
jg
xchg
out
cwde
repz
jg
inc
lods
push
mov
cmps
neg
jg
mov
test
(bad)
outs
lods
or
aad
(bad)
mov
test
jmp
jl
mov
jg
in
pop
mov
jmp
adc
mov
daa
inc
loope
adc
jge
ins
adc
cmps
repnz
fnstcw
(bad)
(bad)
inc
fs
mov
or
push
adc
(bad)
aam
lods
sbb
ret
sub
(bad)
(bad)
call
hlt
dec
and
ret
lds
test
or
sub
xabort
(bad)
or
and
mov
sbb
jno
fisubr
mov
dec
push
xor
jmp
out
and
call
(bad)
out
clc
jo
xchg
xchg
sub
loopne
sbb
adc
dec
jns
pop
and
js
adc
push
mov
mov
call
daa
push
adc
mov
push
js
add
(bad)
(bad)
(bad)
inc
add
push
mov
adc
add
push
addr16
stos
cmc
inc
lods
cmps
sbb
push
and
fsub
out
sbb
sbb
(bad)
(bad)
(bad)
call
ds
jns
fs
outs
mov
imul
ss
int
cmp
shl
and
jmp
out
(bad)
test
hlt
lea
jns
nop
sub
ror
div
aas
in
mov
cdq
aas
jle
cmp
popf
cdq
cmp
hlt
sub
psrld
ins
mov
add
das
jne
push
hlt
aad
jne
mov
sub
inc
add
push
and
xchg
xor
rcr
in
out
pop
jg
repz
xchg
dec
adc
jle
jg
inc
cwde
fisttp
pushf
iret
jns
sti
repz
div
mov
push
sub
(bad)
(bad)
jmp
jp
jbe
xchg
dec
sub
fstp
xor
add
inc
mov
dec
enter
bound
or
(bad)
jg
jbe
test
sahf
mov
pop
jb
js
ins
sub
inc
fucomi
add
sahf
(bad)
(bad)
(bad)
call
pop
mov
or
cmp
test
popa
sbb
test
mov
lock
popa
dec
push
stos
(bad)
push
inc
jb
scas
cmps
mov
sbb
scas
sub
adc
fsub
mov
dec
or
inc
or
inc
add
xor
hlt
xchg
push
mov
test
popa
daa
sub
pusha
ins
or
or
xor
pop
inc
loop
inc
sub
or
das
dec
adc
pop
es
or
pop
lock
in
xlat
pop
xchg
mov
xchg
xchg
cmp
sahf
mov
sbb
and
xor
add
jmp
arpl
xor
test
add
les
inc
lds
ins
std
push
cmp
sbb
movs
jecxz
jl
ret
dec
and
(bad)
(bad)
push
outs
mov
mov
(bad)
mov
fs
cmps
mov
mov
dec
cs
jmp
sbb
sub
sbb
sbb
xor
sbb
std
cwde
jne
mov
jle
inc
loope
add
pop
aam
arpl
cs
cmps
xchg
aaa
lea
xor
cmp
into
inc
mov
(bad)
sbb
cmc
(bad)
call
xchg
push
daa
mov
mov
sbb
inc
es
call
mov
jge
inc
jnp
cmp
mov
and
loope
pop
or
es
jnp
push
sub
adc
(bad)
(bad)
mov
mov
je
outs
ficom
loope
push
mov
sbb
call
shl
jl
cmc
in
cmp
or
xor
(bad)
(bad)
jmp
mov
call
sub
pop
jmp
repnz
add
(bad)
(bad)
(bad)
std
xchg
mov
ins
inc
push
ss
pop
mov
mov
daa
iret
test
dec
or
push
dec
retf
ret
test
adc
add
push
jl
jns
mov
xor
movs
add
(bad)
(bad)
inc
sbb
clc
jge
fdiv
shl
xchg
dec
and
xchg
push
pop
hlt
(bad)
jmp
out
or
ds
popf
cmps
cdq
std
sti
not
or
bound
(bad)
(bad)
(bad)
(bad)
call
dec
cmp
shl
fist
gs
add
es
add
clc
or
xor
stc
loopne
jecxz
(bad)
jmp
jbe
dec
jmp
mov
jle
sbb
sahf
lods
in
(bad)
(bad)
(bad)
(bad)
jp
in
cmc
sub
ins
(bad)
cmp
mov
mov
or
sbb
mov
add
xchg
xor
cmps
out
stos
sub
sub
mov
xor
mov
retf
jecxz
jecxz
mov
jo
std
ret
dec
xor
xchg
mov
(bad)
(bad)
call
ss
cmp
shl
cmp
repz
mov
mov
pop
enter
(bad)
jmp
push
lahf
rcl
cld
pop
fistp
imul
xor
jge
fcom
dec
dec
sar
hlt
jmp
sub
pop
test
mov
mov
fild
call
adc
jmp
or
mov
(bad)
(bad)
jmp
mov
outs
mov
and
aas
or
add
dec
jbe
pusha
mov
and
(bad)
(bad)
push
fisub
aas
fiadd
sub
jmp
call
ret
pop
(bad)
(bad)
(bad)
dec
(bad)
retf
movs
jmp
fild
mov
arpl
nop
inc
syscall
out
aas
movs
inc
inc
adc
(bad)
(bad)
(bad)
jp
shr
ret
mov
arpl
or
inc
jecxz
rcr
in
lods
repnz
mov
call
mov
call
adc
inc
cdq
dec
sub
mov
dec
mov
js
cmc
mov
out
push
mov
cmp
dec
ins
xor
(bad)
mov
into
cmps
push
cmp
lods
je
jge
enter
call
inc
dec
movs
xor
lea
mov
int3
fistp
stc
inc
(bad)
(bad)
(bad)
jmp
jmp
adc
ret
cmp
jge
stos
mov
shl
icebp
icebp
loop
out
jle
stc
out
fs
(bad)
(bad)
(bad)
(bad)
(bad)
fnstsw
lahf
call
push
cs
arpl
add
inc
push
jge
lods
push
fdiv
or
(bad)
gs
push
aaa
or
js
(bad)
(bad)
(bad)
jmp
test
xchg
inc
add
sub
jge
jle
in
add
sub
ror
sbb
push
xor
pop
mov
fwait
arpl
(bad)
(bad)
jmp
fsub
js
ja
xlat
aam
xchg
repnz
rcr
push
adc
add
loop
jg
xchg
adc
push
xor
mov
bound
(bad)
fidivr
cwde
push
jg
(bad)
fisttp
icebp
lea
retf
leave
push
es
cmovl
arpl
mov
(bad)
(bad)
(bad)
fdiv
popa
cli
pop
ficomp
scas
loope
sbb
loop
pop
aas
icebp
fucomi
mov
imul
(bad)
(bad)
(bad)
fdivr
lahf
jns
iret
enter
mov
xchg
loopne
pop
test
mov
(bad)
jecxz
push
sbb
inc
jae
pop
aam
sub
in
ja
mov
test
aam
pop
jae
push
xchg
div
pusha
(bad)
(bad)
(bad)
jmp
ret
(bad)
call
pop
pushf
pop
ficomp
fdivr
push
hlt
cwde
sar
(bad)
jmp
aam
add
out
sahf
fld
shr
cdq
retf
mov
mov
in
(bad)
call
pop
mov
mov
in
or
inc
sbb
ins
push
sar
fisttp
je
(bad)
dec
lods
icebp
cmps
xchg
xchg
sub
mov
push
push
pop
lods
test
cmps
push
sub
(bad)
jmp
pop
cs
sbb
jmp
fdiv
pop
push
aam
inc
mov
mov
pop
mov
jl
xchg
std
pop
call
mov
cmps
in
test
retf
test
ss
(bad)
(bad)
fisttp
out
fidivr
jo
call
dec
jnp
xor
ins
stos
stc
retf
(bad)
dec
loope
arpl
pushf
and
mov
sbb
leave
lods
out
fwait
xor
dec
mov
shl
shl
adc
stc
or
(bad)
pop
adc
(bad)
jg
xchg
push
lock
add
mov
xchg
sub
das
aam
mov
mov
sbb
mov
popf
mov
push
repnz
mov
iret
dec
fwait
repz
xchg
sbb
mov
inc
sub
ins
pop
std
(bad)
(bad)
(bad)
mov
stos
jmp
pushf
shl
jnp
(bad)
(bad)
push
mov
into
in
fwait
adc
mov
call
add
sub
sub
dec
clc
(bad)
(bad)
inc
arpl
sub
pop
push
push
movs
jo
pop
adc
call
inc
dec
pusha
inc
mov
sub
and
cdq
mov
adc
call
sbb
mov
les
test
adc
and
aam
dec
sbb
clc
(bad)
jg
jg
das
jmp
mov
fnstenv
inc
push
adc
rol
inc
(bad)
(bad)
call
es
mov
sub
jae
retf
dec
cs
push
popa
mov
(bad)
(bad)
(bad)
inc
or
pusha
dec
data16
leave
cdq
ss
adc
(bad)
or
(bad)
dec
jns
in
outs
jb
repnz
jnp
aas
sub
or
inc
sub
fmul
and
ret
retf
mov
push
(bad)
jbe
sbb
sbb
sbb
cmp
(bad)
(bad)
jmp
outs
xchg
fld
or
mov
adc
stc
imul
dec
dec
xchg
hlt
ret
call
aad
(bad)
pushf
dec
and
jne
icebp
cld
sbb
rol
(bad)
(bad)
jmp
push
rol
into
jo
jmp
cmps
aas
cmp
jnp
push
stc
loopne
(bad)
(bad)
jmp
push
in
cmp
cmc
push
inc
and
pop
aam
sub
je
jmp
lods
loope
mov
test
les
mov
push
cli
jbe
adc
stos
pushf
rol
clc
xchg
(bad)
(bad)
(bad)
push
pop
pop
sbb
dec
iret
jbe
add
(bad)
out
jbe
in
pop
dec
and
push
cmp
xor
and
(bad)
(bad)
call
cs
pop
aaa
push
mov
aad
pop
jne
or
or
pop
icebp
dec
cmps
jle
daa
adc
xor
mov
mov
(bad)
call
or
pop
scas
aam
ret
and
lock
nop
xchg
xor
sbb
rcr
jmp
adc
(bad)
xchg
ins
jbe
cli
push
fcompp
and
jbe
and
add
push
cmp
out
mov
(bad)
jmp
xor
loope
and
push
add
and
push
test
lea
sub
outs
jle
pop
dec
dec
imul
lahf
mov
jns
add
call
es
jnp
not
cmp
stc
out
fs
lods
fwait
cmp
pop
and
jmp
add
popf
cmp
xlat
inc
add
lods
sbb
jnp
and
and
mov
adc
push
aam
mov
xor
ret
cdq
stc
popa
push
or
dec
or
or
(bad)
(bad)
(bad)
call
cwde
jecxz
sub
add
jg
or
out
das
cmp
les
sub
mov
push
cmp
ret
test
stos
(bad)
(bad)
(bad)
jg
das
fnsave
icebp
dec
sub
fdiv
shr
sti
inc
xchg
sub
push
test
xor
add
inc
push
dec
outs
add
loop
mov
test
dec
test
(bad)
cmp
xor
std
cmp
dec
sbb
cld
int3
dec
xor
and
(bad)
fdivrp
jb
pop
mov
sbb
and
(bad)
(bad)
inc
iret
mov
les
enter
xor
push
pushf
jmp
jp
call
adc
(bad)
(bad)
(bad)
cmp
pop
sub
in
mov
push
stos
adc
inc
pusha
outs
or
sub
sub
nop
repnz
(bad)
(bad)
(bad)
inc
aad
mov
inc
jo
mov
xor
or
jge
fdiv
mov
cmps
and
pop
(bad)
(bad)
(bad)
call
cdq
jbe
or
mov
adc
sub
rcl
push
cmps
cmp
xor
xchg
inc
fidivr
test
mov
ss
mov
inc
fst
les
and
(bad)
call
lock
(bad)
xor
push
or
bound
push
invd
test
inc
sbb
push
pop
icebp
fsubr
push
and
je
call
ret
xor
pop
inc
jle
out
leave
cmps
cs
(bad)
(bad)
jmp
sbb
push
jge
xchg
mov
mov
pop
cmp
push
(bad)
lods
cmp
outs
adc
jmp
fild
retf
cs
ds
(bad)
lock
(bad)
(bad)
(bad)
push
(bad)
ja
inc
in
add
in
or
stc
lds
push
dec
inc
iret
jg
rcr
stc
fmul
xchg
scas
mov
inc
lods
out
pop
xchg
dec
movs
loopne
(bad)
cmp
xor
(bad)
inc
pop
push
cs
push
hlt
sub
leave
and
xor
(bad)
(bad)
call
icebp
pop
jne
pop
mov
jo
push
pusha
and
cmp
jb
xor
mov
inc
mov
sub
ret
test
arpl
rol
jb
mov
das
cld
mov
(bad)
jmp
cmp
cs
push
mov
fcom
dec
mov
or
dec
(bad)
(bad)
cmp
push
adc
pop
in
out
fs
sbb
push
inc
mov
sbb
(bad)
jl
xchg
cli
mov
imul
aaa
xchg
mov
repnz
(bad)
(bad)
call
dec
sub
cdq
cmps
push
fstp
cmp
push
aam
(bad)
mov
adc
jp
xlat
retf
inc
jecxz
jae
cmp
(bad)
(bad)
inc
test
mov
in
sbb
bound
test
dec
inc
repz
pop
mov
(bad)
(bad)
(bad)
(bad)
fdivr
cmp
or
mov
mov
ins
push
mov
pop
fdiv
(bad)
xchg
adc
ret
dec
out
int
out
retf
cmc
paddw
add
jg
mov
sub
or
push
sub
sbb
pop
mov
(bad)
dec
out
scas
cmps
and
dec
inc
pop
fnstcw
or
(bad)
(bad)
call
sbb
push
inc
ror
sub
out
(bad)
outs
stos
push
push
arpl
dec
ds
sub
jo
xchg
xchg
add
(bad)
(bad)
(bad)
push
adc
cdq
and
fnsave
cmps
ins
pushf
or
js
(bad)
bound
mov
add
(bad)
dec
push
jne
cdq
add
mov
pop
mov
dec
cld
(bad)
mov
xlat
ins
xlat
pushf
mov
mov
call
push
cdq
dec
cmps
gs
lahf
fstp
push
and
rcr
xchg
retf
mov
cmp
(bad)
mov
faddp
lock
ret
das
in
sbb
pop
movs
mov
jmp
inc
ss
into
(bad)
mov
cdq
fs
add
jne
lock
inc
dec
nop
and
ror
(bad)
inc
test
sbb
dec
popa
scas
adc
mov
loopne
cmps
out
(bad)
(bad)
(bad)
jg
mov
jl
repnz
xchg
js
out
shr
aam
leave
fwait
outs
jp
mov
cld
dec
and
push
cmp
or
mov
outs
(bad)
(bad)
(bad)
mov
xchg
out
aam
rcl
out
sbb
int3
out
addr16
in
shl
(bad)
(bad)
cmp
dec
fnstenv
mov
ror
test
stos
iret
fcom
aas
pop
scas
sub
fldenv
cmps
xchg
(bad)
mov
jl
adc
adc
xchg
inc
jecxz
pop
jg
(bad)
inc
dec
add
and
mov
fcom
sbb
push
adc
cmps
pop
pop
push
cmps
xor
(bad)
(bad)
call
dec
daa
xor
and
sub
add
sbb
(bad)
push
inc
pop
push
cmp
aad
and
and
jmp
adc
mov
lock
nop
sar
js
xchg
data16
mov
sbb
cld
xchg
test
(bad)
inc
mov
adc
int3
sub
pop
add
xchg
ror
scas
mov
call
push
iret
xchg
arpl
fmul
cmp
in
inc
pop
adc
test
add
ins
in
ds
push
jo
fwait
ss
fdivr
or
pushf
sub
xchg
add
mov
dec
inc
xor
push
dec
aad
mov
rol
or
mov
mov
pop
xchg
inc
ins
test
std
outs
xchg
mov
stc
in
fs
dec
push
loope
pop
mov
add
dec
jo
das
jmp
popa
retf
mov
xor
fstp
ret
add
icebp
enter
movs
add
cld
dec
loopne
outs
mov
push
dec
jecxz
and
or
dec
inc
or
push
mov
jmp
arpl
cmp
xlat
adc
jmp
mov
dec
add
cmp
jp
or
pop
jge
xor
fistp
and
clc
inc
or
test
clc
cmc
(bad)
(bad)
dec
jb
and
mov
mov
into
mov
mov
sub
mov
inc
les
mov
daa
inc
shl
daa
(bad)
(bad)
(bad)
dec
cmp
es
pop
xchg
adc
jb
call
lock
popf
ins
outs
jl
std
jg
test
dec
mov
ror
or
jmp
retf
and
jecxz
inc
push
fmul
loop
inc
clc
sbb
dec
out
(bad)
hlt
xor
adc
jp
(bad)
mov
adc
xor
pop
cmp
cmps
(bad)
in
fcomip
(bad)
pop
jl
xchg
or
(bad)
(bad)
(bad)
dec
je
std
and
pop
jns
or
cmp
iret
ret
or
push
inc
fwait
mov
outs
(bad)
jmp
and
xor
sbb
jl
cli
cmps
adc
jecxz
ret
(bad)
(bad)
jmp
sahf
lds
mov
or
add
add
and
dec
inc
sub
scas
(bad)
(bad)
(bad)
inc
sti
inc
shr
mov
lods
and
inc
mov
(bad)
xchg
outs
fadd
sbb
arpl
(bad)
push
xchg
test
sub
in
rol
add
jge
xchg
(bad)
(bad)
push
(bad)
pop
shl
add
inc
(bad)
jbe
mov
mov
jae
pop
fidivr
jns
add
(bad)
(bad)
jmp
ds
repnz
mov
xchg
pop
or
enter
ds
jne
pop
jnp
int
lock
lods
inc
or
and
jmp
mov
mov
jg
fs
dec
and
data16
mov
mov
dec
pop
test
mov
in
daa
jns
in
jmp
fld
bound
add
adc
xchg
bound
push
stos
(bad)
stos
xor
aad
outs
cli
es
push
pop
adc
push
add
nop
dec
(bad)
(bad)
(bad)
call
arpl
jle
pop
xchg
inc
sbb
dec
sbb
imul
(bad)
(bad)
jns
call
and
dec
push
sub
jae
or
mov
mov
(bad)
(bad)
(bad)
(bad)
jnp
fs
inc
or
pop
sbb
mov
int
shl
dec
mov
cmps
inc
stos
js
jge
pop
call
inc
mov
test
out
ins
sub
ror
xor
cli
out
sbb
scas
dec
test
mov
test
(bad)
(bad)
jmp
stos
pop
shl
cmp
shufps
dec
int3
sub
icebp
stos
std
sti
lahf
mov
push
call
jl
xchg
fist
mov
in
cmps
(bad)
(bad)
push
jle
ja
mov
cmc
or
neg
movs
xchg
xchg
pop
jl
pop
(bad)
(bad)
(bad)
(bad)
fild
lds
loop
ja
xchg
loop
(bad)
aas
mov
std
std
mov
jg
lods
popf
bound
or
je
test
cmp
fcmovb
ret
jg
push
add
dec
popa
add
sub
push
stos
int
add
rcr
nop
aam
test
js
mov
inc
adc
xor
sub
scas
cli
mov
in
fistp
add
scas
inc
jmp
es
(bad)
(bad)
push
push
push
pop
jae
jge
pop
jge
test
sbb
rcr
out
retf
(bad)
call
xor
push
shr
clc
cmp
pop
inc
fisttp
mov
jnp
das
(bad)
inc
arpl
mov
mov
(bad)
jmp
leave
inc
sub
je
(bad)
fdiv
(bad)
xchg
(bad)
ins
mov
mov
sub
(bad)
cld
fsubr
jno
ret
pushf
sbb
sti
mov
out
ja
add
lods
jae
(bad)
(bad)
call
shr
lods
stc
cmp
add
lods
pop
jl
inc
cdq
adc
pop
(bad)
stc
shl
adc
mov
scas
adc
outs
das
clc
pop
pusha
pop
je
fnsave
ficom
js
ja
(bad)
(bad)
(bad)
jmp
pop
mov
retf
pop
loope
xchg
(bad)
es
js
out
outs
fldenv
jp
sbb
pop
nop
mov
push
dec
pop
fdivr
mov
sti
mov
retf
iret
cwde
aaa
pop
aaa
ror
(bad)
(bad)
jg
(bad)
test
mov
loop
mov
push
mov
sub
pop
mov
(bad)
jmp
sub
(bad)
sbb
push
jne
push
push
jmp
xor
sbb
es
mov
(bad)
mov
jmp
out
test
mov
mov
cld
retf
dec
cmp
add
jmp
in
cmp
sub
ins
call
lock
(bad)
(bad)
fild
popf
(bad)
mov
dec
sub
cmps
jle
cmps
loopne
(bad)
jg
call
cmp
bound
jecxz
(bad)
xchg
push
add
enter
das
test
pop
mov
call
scas
sbb
mov
push
cmp
sbb
sbb
test
cmp
push
push
(bad)
(bad)
(bad)
dec
xchg
out
cdq
xchg
pop
ss
pop
in
sub
sub
nop
push
mov
mov
stc
into
push
fwait
and
das
jge
(bad)
(bad)
jmp
push
mov
xchg
out
sbb
add
dec
clc
cld
sahf
into
pop
push
sub
push
cmps
int3
xchg
popf
jnp
(bad)
dec
jo
mov
in
int
outs
fcomi
loope
mov
xchg
gs
xchg
(bad)
(bad)
(bad)
inc
inc
sahf
jg
aad
add
mov
mov
adc
cmc
data16
fwait
push
loopne
pop
inc
ror
and
jmp
pusha
sbb
lds
xor
(bad)
(bad)
(bad)
push
jo
ret
xchg
loopne
pop
stc
iret
jns
int3
cmp
in
loop
popf
cmps
and
or
add
xor
sbb
shl
call
ret
pop
loopne
sub
xchg
(bad)
(bad)
(bad)
dec
mov
imul
push
xor
and
add
or
loope
and
(bad)
(bad)
call
dec
adc
adc
nop
push
add
mov
daa
int
and
loopne
lods
or
pop
(bad)
(bad)
jmp
xor
pushf
mov
test
out
call
cs
adc
(bad)
(bad)
call
mov
pop
mov
cmp
movs
jmp
sub
mov
(bad)
push
jo
xor
(bad)
pop
pop
jle
jg
or
dec
test
loop
inc
rcl
test
push
jle
ficomp
adc
sbb
cmp
sub
(bad)
dec
add
cmps
and
movs
cmp
inc
push
add
outs
test
neg
pusha
push
jecxz
in
jg
and
mov
sbb
mov
dec
in
cmp
push
xor
push
(bad)
call
inc
ja
jns
test
jae
adc
clc
fcmovnb
add
cs
inc
sbb
inc
push
sub
clc
faddp
sub
mov
sbb
cmp
xlat
(bad)
push
std
push
rcr
push
inc
js
std
test
mov
push
(bad)
dec
sbb
jle
push
mov
inc
mov
and
jg
call
mov
dec
mov
cwde
dec
lock
pushf
sub
mov
jmp
jmp
int
pop
dec
dec
mov
xor
mov
push
sub
(bad)
jg
ror
daa
mov
pop
int
inc
xor
mov
daa
gs
aam
add
or
js
xchg
(bad)
dec
(bad)
dec
jle
xor
loope
(bad)
retf
mov
mov
icebp
out
or
and
and
por
and
xchg
jae
es
dec
fs
(bad)
(bad)
(bad)
cli
sbb
inc
sbb
mov
and
xchg
xor
data16
push
movs
mov
jmp
test
inc
pop
paddsw
adc
xchg
scas
xlat
sub
(bad)
fbld
mov
xchg
(bad)
or
dec
cld
mov
xchg
(bad)
(bad)
jmp
rol
xor
fdivr
(bad)
call
sbb
(bad)
loopne
(bad)
(bad)
(bad)
jns
sub
mov
and
fs
push
(bad)
iret
push
adc
frstor
rol
mov
push
(bad)
push
mov
leave
bound
scas
sar
icebp
sub
int
out
inc
adc
push
in
repz
jg
mov
enter
xor
test
jecxz
(bad)
(bad)
call
jmp
fwait
cmps
cdq
int3
(bad)
fcom
aas
idiv
jle
pop
or
pop
mov
xchg
dec
ds
out
push
fmul
(bad)
call
push
fisub
sbb
inc
jmp
cmp
and
(bad)
(bad)
call
adc
jmp
and
mov
cmp
add
push
pop
ret
push
mov
scas
test
mov
sub
xchg
and
mov
mov
jg
jecxz
es
push
xor
test
sbb
xchg
adc
inc
push
mov
xchg
nop
pop
jns
sub
push
lods
push
movs
stos
adc
push
jno
mov
or
es
dec
lds
pop
scas
(bad)
(bad)
(bad)
call
jmp
stos
inc
cmp
retf
jmp
arpl
and
repz
or
(bad)
(bad)
jmp
das
mov
ficomp
push
out
jp
push
ret
fbld
test
push
adc
stos
dec
loopne
fidiv
jp
mov
(bad)
(bad)
(bad)
call
cmp
fwait
inc
add
push
inc
push
mov
pop
push
nop
call
xchg
add
fwait
jne
test
enter
scas
mov
xor
push
idiv
mov
push
jmp
fcomip
jle
ror
mov
mov
cmp
mov
(bad)
mov
ds
mov
xlat
movsx
cld
out
lods
cmp
out
xor
mov
mov
repz
ja
in
jmp
imul
adc
call
jmp
test
pop
xor
int3
mov
xor
pop
(bad)
sbb
and
pop
icebp
cmps
idiv
out
jg
jo
mov
(bad)
(bad)
jmp
mov
pop
sub
jnp
test
xchg
dec
ins
call
inc
mov
pusha
push
ret
sahf
(bad)
mov
enter
fs
cs
inc
mov
out
bound
dec
jo
adc
pop
hlt
dec
aaa
out
(bad)
mov
int
jb
imul
stos
imul
add
ja
addr16
cmp
(bad)
jmp
fdivrp
pop
lock
movs
mov
mov
push
push
sub
lea
stos
add
inc
sar
scas
clc
(bad)
imul
lods
daa
dec
add
(bad)
in
les
js
and
adc
int
sti
rcr
(bad)
mov
xor
xlat
test
jp
xchg
pop
sbb
xchg
pop
xchg
call
arpl
dec
and
pop
les
es
outs
xor
fst
dec
into
jmp
mov
clc
call
retf
mov
or
iret
jmp
(bad)
(bad)
call
adc
repz
push
mov
in
cmps
pop
movs
in
outs
mov
push
(bad)
(bad)
(bad)
jmp
add
sti
neg
ficomp
jle
dec
xor
cli
xchg
iret
stc
rol
mov
cmc
aas
movzx
cs
push
lods
sub
imul
std
and
(bad)
(bad)
(bad)
dec
pop
mov
push
jnp
jno
movs
iret
call
std
stc
adc
mov
xchg
cli
outs
cli
(bad)
(bad)
mov
scas
pop
fcomp
sub
shl
(bad)
pushf
popa
loop
(bad)
inc
jae
mov
pop
neg
xchg
(bad)
(bad)
mov
mov
cmp
inc
xor
(bad)
(bad)
mov
fcompp
pushf
push
push
gs
je
lds
mov
out
shl
ffreep
pop
shl
loop
push
das
jmp
(bad)
(bad)
cmp
cmp
shl
jg
fmul
outs
pop
mov
loope
or
(bad)
in
cmps
pop
sbb
test
mov
test
(bad)
(bad)
popa
fidiv
push
into
jmp
adc
ss
jle
test
and
pop
cmp
(bad)
(bad)
push
mov
inc
aaa
ins
jns
jmp
push
xchg
cli
repnz
fucomp
sub
pushf
xchg
add
mov
jmp
mov
bound
and
test
or
add
lods
mov
aaa
std
mov
push
loope
xor
ret
cmps
ror
clc
jno
mov
cmp
jge
(bad)
(bad)
jmp
rcl
out
cmp
xlat
outs
pop
jnp
mov
jp
(bad)
(bad)
(bad)
inc
push
dec
sub
das
call
scas
jns
je
inc
inc
xchg
retf
jns
xchg
xchg
stos
mov
(bad)
cmps
xchg
nop
xor
in
sbb
std
jecxz
sahf
jae
xchg
pop
or
adc
cli
call
xchg
mov
js
jl
shl
push
push
add
mov
rcr
popa
outs
mov
and
inc
add
push
push
cmps
or
inc
mov
aam
das
mov
mov
jno
pop
aaa
or
rcl
adc
(bad)
mov
jne
push
mov
scas
scas
loope
dec
mov
pop
fcom
push
adc
push
mov
and
push
test
xchg
(bad)
(bad)
(bad)
inc
sbb
xor
es
enter
mov
xlat
mov
xchg
push
ss
jg
inc
xor
add
outs
outs
jmp
(bad)
pop
dec
mov
push
fdiv
loope
retf
mov
fnstcw
(bad)
xchg
bound
cwde
sub
(bad)
(bad)
(bad)
(bad)
jmp
loopne
or
in
or
ins
jno
in
mov
pop
shl
retf
aad
cmp
mov
sbb
sub
imul
scas
cmp
adc
dec
stos
xor
(bad)
xor
adc
pusha
ins
and
leave
add
cmps
inc
pop
ss
(bad)
fcomip
xchg
xchg
rep
je
jo
mov
aaa
sahf
mov
inc
mov
mov
inc
loope
aam
or
in
dec
or
jl
jmp
mov
cmp
icebp
xor
push
lods
inc
cmp
aas
(bad)
std
repnz
pusha
or
jg
lods
pop
xor
add
mov
(bad)
jmp
and
sbb
mov
sub
into
ret
scas
cli
inc
fnstcw
jg
cld
push
add
push
ja
pop
ins
cmps
punpckhbw
mov
(bad)
call
sub
dec
inc
mov
arpl
and
rcr
push
stos
jecxz
mov
stos
jp
jo
cmps
push
inc
out
daa
sub
ss
push
test
pusha
(bad)
cmp
ds
lods
shl
add
fwait
or
das
sar
adc
fs
and
sti
test
and
(bad)
(bad)
(bad)
push
push
leave
pop
pushf
repz
scas
sub
mov
sbb
xchg
adc
mov
(bad)
(bad)
call
xchg
imul
fstp
cmp
mov
ja
out
adc
test
xchg
pop
and
or
and
(bad)
out
add
js
and
call
jmp
loope
scas
adc
jg
mov
dec
gs
retf
js
cwde
mov
lods
adc
mov
test
fcomp
fisttp
xchg
out
(bad)
(bad)
jmp
int
les
ret
xor
leave
ret
sbb
clc
lds
dec
pushf
out
pop
pushf
or
jmp
mov
push
xchg
adc
ret
jmp
fdivr
(bad)
(bad)
inc
push
jle
xchg
into
mov
adc
movs
nop
mov
xchg
xchg
jmp
mov
lods
lea
call
inc
movs
adc
mov
std
mov
push
ror
(bad)
jmp
sbb
adc
mul
(bad)
adc
movs
les
retf
and
xor
jg
push
movs
sbb
push
mov
sub
mov
outs
inc
cmp
iret
or
cli
xchg
mov
(bad)
(bad)
jg
imul
stos
mov
sub
daa
adc
cwde
sub
clc
pop
lea
(bad)
(bad)
(bad)
jmp
mov
mov
(bad)
hlt
fisttp
out
xchg
out
dec
(bad)
shr
cs
adc
les
(bad)
(bad)
dec
add
pop
and
inc
mov
call
(bad)
jmp
call
push
add
aad
cmp
push
xor
and
repnz
sub
es
inc
pop
jo
and
mov
repnz
xor
mov
test
cmps
test
xchg
mov
inc
int3
add
mov
in
std
xlat
dec
push
jns
mov
(bad)
xchg
fcomi
outs
nop
aam
jb
push
(bad)
push
xchg
in
mov
add
(bad)
(bad)
jg
in
cmc
xor
jg
mov
jg
push
sar
jle
xor
jno
mov
std
rcr
dec
cmc
lods
or
pop
dec
jne
mov
ins
retf
adc
aas
cmp
push
cmc
call
lods
sub
stos
jl
es
xor
loopne
dec
inc
popf
sar
(bad)
(bad)
fist
out
jecxz
cmc
scas
dec
mov
mov
outs
or
sahf
out
stc
into
mov
pop
jecxz
out
out
fwait
aas
out
sub
cmps
or
pop
out
mov
fidiv
pop
imul
cmps
cmp
(bad)
(bad)
jmp
dec
test
(bad)
aad
jne
test
cmp
mov
xchg
lock
sub
(bad)
cld
xchg
les
xor
call
in
or
adc
adc
xor
push
rcr
jne
jnp
cld
and
jmp
shl
repnz
bsf
scas
sub
call
stos
mov
std
idiv
retf
pop
(bad)
(bad)
(bad)
call
out
cmps
inc
stos
(bad)
ds
pop
mov
into
jle
mov
pop
cmc
jbe
out
out
mov
mov
in
xchg
inc
mov
aas
loope
xchg
ins
mov
inc
(bad)
push
data16
sbb
pop
jnp
sti
jg
fldz
mov
jle
lahf
aas
jne
xor
sbb
aam
(bad)
(bad)
mov
or
stos
stc
hlt
retf
mov
xchg
and
cmc
sub
xchg
int3
(bad)
(bad)
(bad)
(bad)
out
mov
sbb
jge
mov
into
dec
outs
sbb
cmp
(bad)
adc
ja
xchg
pop
into
xchg
popa
xlat
or
shl
(bad)
(bad)
(bad)
call
hlt
(bad)
pop
int
jbe
cmp
fisubr
pop
int3
test
ins
mov
jmp
std
mov
mov
fistp
pop
jmp
into
cdq
dec
cli
sub
ins
jl
(bad)
call
mov
xchg
pop
sub
add
cmp
sar
sahf
int3
(bad)
(bad)
(bad)
push
xchg
pop
jo
inc
loopne
jle
xor
dec
xchg
pop
daa
sti
mov
(bad)
(bad)
push
cmp
shr
jnp
je
push
jne
sub
movs
in
or
lahf
fnstcw
cs
xlat
fcmovu
(bad)
(bad)
(bad)
call
push
fdivr
push
xor
retf
or
test
rol
mov
inc
loop
sub
call
adc
in
jmp
or
fwait
aam
(bad)
inc
push
je
mov
pop
data16
cmp
push
pop
mov
scas
or
cld
scas
mov
push
scas
jecxz
mov
pop
cmp
push
icebp
jmp
xchg
dec
xor
push
icebp
push
(bad)
call
jg
dec
dec
xor
jb
pop
ficom
(bad)
inc
fld
mov
inc
sbb
cmp
rcl
(bad)
(bad)
(bad)
jmp
les
push
test
inc
mov
je
ror
imul
mov
mov
(bad)
(bad)
cmp
imul
shr
adc
gs
jmp
jb
rol
(bad)
(bad)
jg
adc
mov
push
lds
inc
sbb
out
mov
test
sub
jg
test
test
sub
pop
loop
push
push
(bad)
(bad)
dec
lods
sub
mov
adc
cmp
int3
movs
dec
iret
pop
mov
je
(bad)
(bad)
(bad)
in
bound
dec
hlt
inc
push
jns
sbb
or
mov
(bad)
int
dec
and
(bad)
(bad)
push
cmps
push
inc
mov
mov
sub
cmps
fdiv
mov
std
dec
or
push
push
dec
and
jne
adc
jg
cmc
outs
adc
push
pop
imul
(bad)
femms
push
(bad)
(bad)
jg
call
and
jae
fisub
mov
imul
fisubr
aad
popa
nop
(bad)
je
mov
les
inc
or
push
movs
sbb
push
dec
add
push
test
call
fs
imul
jo
adc
ins
imul
fcom
loopne
sub
rol
daa
dec
xor
cmp
cmp
cmc
in
cmps
in
test
xchg
and
fnstenv
push
and
add
stos
or
xchg
xchg
enter
retf
pop
xor
inc
cmp
cmc
(bad)
fild
mov
xchg
mov
adc
mov
xchg
(bad)
jmp
rcr
retf
out
cdq
mov
sbb
push
popa
stc
sar
aad
movs
hlt
pop
je
lds
arpl
int3
(bad)
(bad)
(bad)
(bad)
(bad)
jmp
cmp
cmps
and
inc
xchg
repz
jmp
pushf
je
jnp
mov
loope
daa
cmp
(bad)
call
adc
jo
sbb
sbb
adc
and
xor
iret
mov
(bad)
jg
mov
and
pushf
ds
or
cmps
jnp
ret
mov
ss
fwait
(bad)
(bad)
(bad)
jmp
dec
sbb
data16
sub
add
xchg
lods
sub
jbe
sub
mov
mov
js
(bad)
(bad)
(bad)
push
lock
push
inc
mov
push
aad
stos
pop
mov
dec
mov
sbb
inc
add
sub
jns
lods
cmps
xchg
retf
mov
in
hlt
mov
inc
sub
int
fcomp
mov
pop
cmovs
mov
aaa
stos
push
inc
mov
(bad)
(bad)
mov
pop
outs
test
call
dec
stos
pop
adc
and
pop
sub
dec
dec
sbb
dec
xor
and
inc
ret
ja
jg
xor
cmps
out
in
cmp
call
call
xor
mov
xlat
aaa
ins
retf
mov
(bad)
(bad)
cmp
sbb
and
and
pop
cmp
mov
mov
hlt
fs
sub
ss
xor
adc
push
enter
add
(bad)
adc
or
jae
scas
sub
sub
mul
gs
add
imul
xchg
mov
pop
(bad)
mov
xchg
arpl
cs
ror
nop
or
inc
and
cld
(bad)
mov
addr16
mov
ja
pop
jbe
fcomp
pop
(bad)
(bad)
push
jb
mov
ja
mov
lock
(bad)
retf
push
push
popa
enter
inc
push
(bad)
(bad)
(bad)
mov
pop
mov
retf
push
cld
inc
fimul
popa
data16
or
(bad)
mov
jecxz
mov
ficomp
jg
push
push
push
or
retf
pop
ins
inc
les
aam
(bad)
cs
retf
fldcw
icebp
mov
nop
dec
inc
call
(bad)
mov
test
movs
pop
into
xor
sbb
xor
add
dec
inc
(bad)
(bad)
dec
push
and
adc
xor
add
(bad)
jmp
inc
and
shl
daa
xchg
pushf
mov
jmp
(bad)
push
or
lods
sub
in
sub
sbb
sti
(bad)
inc
(bad)
xchg
sub
sbb
out
cwde
add
lds
mov
(bad)
push
nop
sub
popf
cmp
push
mov
pop
add
mov
fstp
jae
into
push
inc
xchg
inc
push
dec
add
jmp
xchg
cs
inc
xchg
dec
sub
or
(bad)
in
pop
sahf
mov
adc
add
js
enter
xchg
imul
out
jmp
pop
cli
fild
cld
jmp
cld
(bad)
ds
xor
out
mov
(bad)
(bad)
push
ror
inc
shl
mov
pop
cs
and
xchg
loope
cld
mov
xbegin
inc
(bad)
repnz
cdq
stos
fbstp
pop
das
pop
cmc
popf
das
jge
xor
or
jmp
lahf
psubusw
fnstsw
test
mov
or
push
sbb
ret
xchg
sub
icebp
loope
dec
outs
push
(bad)
(bad)
out
mov
pop
jg
and
jo
aaa
ins
fimul
xchg
dec
es
icebp
stc
repz
dec
shl
(bad)
(bad)
(bad)
inc
adc
add
cmp
lock
iret
inc
pusha
mov
in
in
pop
mov
cld
in
aas
mov
mov
fcomp
mov
or
mov
cld
sar
pop
lock
(bad)
(bad)
frstor
pop
mov
into
mov
in
fiadd
fldpi
push
sti
pushf
mov
inc
jnp
neg
fstp
imul
(bad)
mov
cli
(bad)
call
pop
jae
xchg
imul
add
mov
(bad)
call
retf
imul
mov
retf
in
ss
mov
icebp
imul
fisttp
jge
(bad)
(bad)
(bad)
inc
sub
mov
xor
mov
std
cdq
out
sar
jg
jecxz
and
jmp
xchg
cmp
inc
mov
pop
aam
sahf
xchg
mov
cmc
rcl
(bad)
(bad)
jmp
sahf
xchg
and
xchg
push
xchg
jno
or
sub
mov
(bad)
jmp
dec
inc
mov
lea
pop
repz
leave
loop
call
fist
(bad)
(bad)
(bad)
(bad)
mov
xlat
rol
out
cmp
fdivr
add
pusha
sub
stc
and
iret
popa
(bad)
(bad)
(bad)
fcmovnbe
mov
jmp
adc
mov
sub
cmp
arpl
jp
(bad)
(bad)
call
in
rcr
scas
icebp
retf
sub
mov
cdq
inc
or
fadd
dec
cmps
jg
sub
jmp
adc
sub
sub
(bad)
mov
add
call
pop
call
fsubr
das
adc
mov
nop
dec
call
(bad)
(bad)
jmp
iret
daa
xchg
cdq
aam
add
cdq
scas
xchg
push
mov
jecxz
stos
(bad)
std
xchg
cli
ret
jp
(bad)
(bad)
(bad)
cli
out
dec
int
xchg
cs
shr
mov
stc
movs
jge
mov
mov
jmp
test
stos
pop
scas
pop
fsubr
ret
(bad)
(bad)
(bad)
push
shl
movs
or
mov
lods
cwde
rol
rol
inc
mov
(bad)
inc
push
jbe
mov
push
or
dec
(bad)
cmp
out
cdq
push
jl
push
lock
(bad)
dec
lds
sbb
adc
test
mov
pop
fwait
and
jne
pop
fsub
lea
push
or
adc
bound
enter
stc
retf
call
pusha
dec
hlt
in
mov
push
mov
mov
and
sar
scas
cli
call
enter
(bad)
enter
sbb
mov
mov
retf
loope
xchg
leave
or
out
jp
int
mov
enter
dec
cmp
(bad)
jmp
aaa
sub
mov
movs
xchg
add
xchg
add
jno
fst
cdq
imul
(bad)
repnz
(bad)
(bad)
(bad)
(bad)
mov
inc
in
test
loopne
jge
bound
inc
add
adc
sub
dec
add
(bad)
(bad)
jmp
mov
imul
jmp
enter
shl
push
inc
xlat
dec
imul
ret
(bad)
frndint
push
lock
ret
adc
adc
mov
js
jo
(bad)
in
(bad)
dec
push
push
dec
mov
or
test
jne
or
and
adc
test
(bad)
(bad)
call
cli
out
mov
mov
jno
push
jp
mov
inc
(bad)
daa
dec
jecxz
fdivr
(bad)
(bad)
fild
add
inc
mov
mov
fdiv
cmp
stos
(bad)
(bad)
jg
adc
jns
pop
test
sar
movs
mov
or
adc
and
ja
call
mov
or
mov
inc
rcl
div
ror
addr16
clc
(bad)
push
ror
jnp
(bad)
mov
sti
mov
adc
aaa
(bad)
(bad)
inc
loope
sbb
or
je
inc
dec
mov
mov
les
(bad)
jg
clc
mov
xor
mov
pop
lock
outs
dec
mov
add
stc
cmc
hlt
inc
daa
aam
jno
into
(bad)
hlt
shl
mov
lahf
or
add
cli
or
loopne
pop
adc
rcl
idiv
pop
loop
lahf
lock
call
push
mov
mov
idiv
jb
cmps
test
test
mov
movs
movs
test
or
retf
mov
das
mov
jge
(bad)
(bad)
jmp
or
adc
push
je
xor
nop
rol
je
jmp
adc
dec
add
or
rol
mov
retf
loopne
and
sub
loopne
sbb
dec
jecxz
push
es
inc
aas
jne
sbb
and
dec
bound
xor
jl
enter
(bad)
(bad)
(bad)
jmp
jno
inc
mov
movs
mov
xchg
sub
xchg
mov
(bad)
(bad)
call
push
sar
mov
xor
pop
adc
shl
(bad)
mov
jae
fcom
(bad)
sti
ss
into
mov
push
in
stc
mov
(bad)
jmp
daa
and
mov
mov
mov
inc
add
mov
ret
pop
add
or
bound
inc
push
movs
std
push
xor
add
push
pop
pop
dec
test
pop
and
ss
fst
push
(bad)
jo
rcr
push
cmc
mov
in
dec
fwait
inc
clc
das
sar
jmp
and
and
loope
(bad)
leave
imul
scas
mov
scas
pushf
push
xchg
iret
test
add
lods
cmp
pop
jae
sub
(bad)
(bad)
(bad)
jmp
push
and
fmul
xor
mov
jl
repnz
mov
scas
scas
iret
adc
(bad)
(bad)
(bad)
call
aad
pusha
xchg
clc
nop
mov
cwde
and
call
sbb
mov
pop
inc
(bad)
(bad)
(bad)
(bad)
mov
jle
mov
jg
out
(bad)
out
sbb
call
mov
(bad)
call
inc
lds
sbb
mov
xor
mov
pop
movs
out
xor
mov
(bad)
(bad)
(bad)
push
and
sbb
fldenv
ror
or
xor
ins
sbb
dec
clc
aaa
cld
adc
(bad)
(bad)
(bad)
jmp
loope
cmp
mov
pop
jns
cmps
push
push
jne
xor
call
div
cmp
ret
out
jmp
fwait
dec
loopne
xor
test
sahf
(bad)
mov
arpl
loope
push
aam
out
into
lods
fild
cmp
outs
inc
pop
fcomi
cmp
sbb
adc
(bad)
(bad)
inc
adc
cmp
pop
push
push
test
pop
adc
shl
add
(bad)
(bad)
mov
pop
pop
cmp
mov
aaa
fdivr
push
sbb
cmc
lahf
mov
das
sbb
jg
std
pop
inc
push
loopne
outs
jl
fwait
call
or
mov
jp
call
shl
adc
jecxz
int3
pop
push
inc
mov
fwait
jp
push
(bad)
call
xor
out
mov
retf
mov
xchg
out
mov
(bad)
call
iret
cmp
or
pop
cmp
movs
sbb
adc
aad
call
inc
push
pop
fnstsw
in
inc
pusha
std
mov
jg
mov
sub
pop
cmc
sub
pop
cmps
mov
xor
enter
jmp
adc
popa
jmp
xor
jne
jns
add
add
add
add
mov
xor
dec
aaa
fwait
adc
aas
(bad)
cmps
push
std
shl
outs
sbb
jmp
call
jmp
mov
in
(bad)
jmp
ss
sub
jg
in
fistp
cld
sti
fld
inc
ret
lods
fbstp
jns
std
aad
(bad)
push
add
adc
out
(bad)
(bad)
jg
ror
and
xchg
fild
fidiv
(bad)
clc
cdq
iret
addr16
cmp
adc
mov
fidivr
cmp
xchg
ret
scas
mov
retf
pop
or
imul
retf
cdq
xchg
(bad)
(bad)
(bad)
inc
push
xchg
ror
jle
sub
into
and
cld
mov
xor
out
(bad)
(bad)
push
sbb
stos
jmp
dec
test
add
xchg
xchg
jne
mov
(bad)
push
sbb
jae
or
xchg
imul
out
dec
cld
int
xlat
ins
jp
iret
pop
call
loopne
jmp
mov
push
add
cmp
mov
(bad)
(bad)
dec
int3
lea
pop
(bad)
jbe
inc
stos
ss
(bad)
cmp
out
inc
pop
mov
dec
adc
(bad)
(bad)
(bad)
(bad)
mov
ds
dec
mov
mov
sub
sub
mov
std
xchg
xor
cdq
ret
stos
push
lods
pop
ss
call
jb
jmp
out
ror
sub
(bad)
sbb
pop
push
(bad)
jg
jl
xchg
arpl
and
mov
jnp
push
mov
dec
out
pop
mov
mov
sub
xor
mov
sub
lods
jge
(bad)
(bad)
(bad)
dec
repnz
outs
pop
mov
test
push
je
out
dec
(bad)
mov
call
out
in
ret
push
aam
pop
dec
loopne
add
push
neg
cmp
std
xor
push
ror
dec
pusha
iret
(bad)
inc
push
pop
sub
xor
cmps
dec
aas
test
cs
add
sbb
push
sub
sub
lahf
(bad)
jns
sub
and
inc
cmps
ds
jne
(bad)
pop
mov
(bad)
(bad)
fbld
mov
mov
dec
clc
repz
mov
cwde
sbb
xchg
(bad)
jg
jmp
in
outs
iret
in
adc
inc
lds
bound
test
rol
in
mov
cld
(bad)
(bad)
mov
pop
or
xor
ja
call
adc
sbb
jmp
inc
inc
aad
push
mov
dec
sbb
or
dec
jl
push
(bad)
(bad)
(bad)
call
sbb
pushf
and
xchg
and
mov
mov
ins
cmp
xchg
das
cli
(bad)
(bad)
mov
add
add
sbb
pmullw
sbb
adc
xor
dec
sub
mov
push
dec
and
dec
mov
(bad)
gs
(bad)
call
dec
ret
cmp
mov
jbe
adc
data16
pop
inc
pop
xchg
and
xchg
ja
pushf
fs
inc
jp
pop
fucom
jg
mov
and
push
pop
xor
(bad)
fidivr
lock
dec
mov
pop
loopne
ins
mov
out
mov
ret
(bad)
(bad)
inc
pop
cs
mov
enter
lea
lods
pop
loopne
adc
in
test
mov
mov
retf
adc
jge
sbb
xlat
call
fstp
xor
cmp
std
test
pushf
fcmovnbe
cs
test
xchg
in
mov
or
(bad)
leave
loope
adc
(bad)
call
inc
rcl
sar
ja
js
sbb
jo
fidiv
(bad)
inc
sbb
idiv
(bad)
(bad)
inc
icebp
pop
add
dec
enter
jmp
loope
(bad)
call
cmp
or
dec
je
mov
cli
mov
dec
sbb
call
cmp
dec
idiv
popf
mov
ret
shl
and
mov
(bad)
(bad)
dec
cmp
cwde
cmc
mov
jne
dec
xor
call
(bad)
rcr
(bad)
jg
add
cld
push
mov
xchg
pop
xor
push
movs
movs
push
adc
out
lock
fcom
push
scas
push
ins
shl
(bad)
call
lea
mov
dec
retf
stc
cmps
hlt
mov
mov
test
add
xchg
mov
ret
cmp
fldz
outs
inc
fdiv
pop
jne
inc
outs
jns
enter
(bad)
call
call
test
ret
xor
and
adc
push
mov
and
std
das
jle
sub
sbb
push
cmp
inc
dec
(bad)
(bad)
(bad)
jmp
inc
xchg
mov
add
or
popa
add
hlt
jge
inc
je
popf
shl
sti
lods
(bad)
push
inc
push
xor
xchg
push
pusha
test
aam
or
fadd
cld
(bad)
(bad)
dec
adc
addr16
cmp
inc
add
imul
push
xor
or
shl
(bad)
push
sbb
jmp
(bad)
add
xchg
xchg
dec
adc
(bad)
pop
retf
push
pop
jns
push
mov
cmp
(bad)
(bad)
jmp
mov
sub
mov
sub
push
sub
cmp
inc
mov
(bad)
(bad)
dec
ja
out
repz
mov
dec
sub
mov
push
icebp
ret
sbb
(bad)
mov
loop
add
xchg
or
adc
xor
cld
and
inc
ret
aam
cmc
std
call
loopne
pop
jl
lods
adc
std
in
and
and
lea
das
dec
(bad)
(bad)
call
sub
dec
or
jle
mov
push
dec
jae
push
adc
push
xchg
fist
inc
fild
outs
dec
retf
ror
cwde
xchg
retf
cmp
lods
loopne
cmp
cmps
xor
cmps
out
pushf
inc
lods
or
dec
mov
movd
jmp
or
mov
xchg
push
into
lods
mov
(bad)
(bad)
push
sbb
call
add
xchg
add
cmp
(bad)
inc
mov
jecxz
xor
enter
in
add
inc
(bad)
(bad)
(bad)
call
xor
es
jmp
pop
daa
push
sahf
ja
loopne
(bad)
sub
and
push
(bad)
(bad)
(bad)
jl
icebp
call
push
and
jecxz
push
out
jbe
xchg
cwde
clc
mov
les
(bad)
scas
lock
jl
stc
std
neg
movs
test
or
(bad)
jmp
call
sbb
in
sbb
ds
jle
cmp
lds
(bad)
jge
fistp
pop
dec
inc
(bad)
(bad)
out
xor
mov
mov
xor
imul
pop
and
add
cmps
push
pop
shr
popa
adc
inc
or
or
mov
lock
test
dec
daa
xlat
xor
ret
inc
add
sbb
or
and
stos
or
(bad)
jmp
rcr
pop
dec
daa
jecxz
and
repz
(bad)
dec
adc
dec
mov
add
lods
stos
call
pop
int3
xor
jmp
mov
sti
ja
movs
cmp
ret
aaa
or
dec
(bad)
(bad)
cli
or
fbstp
dec
mov
call
pop
sahf
js
cmc
cld
add
and
push
out
fiadd
stc
xchg
fld
iret
jg
in
cmps
scas
jne
mov
cmc
mov
add
pandn
(bad)
call
xor
fstp
(bad)
(bad)
(bad)
fist
adc
sbb
in
popf
cmps
inc
xchg
mov
sub
inc
int
test
ret
dec
mov
push
push
mov
push
mov
vxorps
addr16
mov
(bad)
jg
inc
inc
in
sbb
adc
xor
jne
jmp
fsub
movs
les
cdq
(bad)
(bad)
(bad)
fnstsw
cmp
cmp
sub
popf
push
fidivr
data16
(bad)
aam
mov
(bad)
(bad)
(bad)
jmp
inc
aad
xchg
outs
pop
out
xchg
(bad)
jne
scas
mov
jp
jo
lahf
mov
scas
sbb
(bad)
call
std
rol
mov
cmp
and
push
lock
(bad)
sub
jmp
xor
stos
mov
fstp
(bad)
(bad)
jmp
sub
(bad)
les
jnp
or
mov
popf
push
dec
or
jecxz
add
dec
dec
mov
in
out
pop
inc
mov
jmp
out
mov
cld
sar
pop
cld
leave
inc
jle
call
mov
cmp
(bad)
call
and
sub
mov
hlt
push
out
js
test
test
sahf
xchg
aas
leave
adc
push
(bad)
std
call
mov
add
adc
mov
fwait
xor
xor
or
cmp
jecxz
retf
bound
push
add
addr16
jae
iret
mov
mov
jmp
mov
jp
mov
inc
aad
cmp
push
dec
(bad)
fild
mov
mov
(bad)
call
dec
adc
inc
adc
mov
pop
xor
add
jmp
xchg
and
push
sub
jb
mov
rol
sub
(bad)
test
adc
pop
ins
jl
sub
aaa
ror
pop
mov
call
call
(bad)
(bad)
(bad)
dec
or
xchg
outs
adc
fwait
or
jp
xor
push
imul
dec
add
pop
loopne
jmp
nop
push
xchg
sahf
jns
and
shl
mov
add
ret
inc
or
movs
push
into
adc
xor
adc
jecxz
cs
fst
and
sub
(bad)
stc
dec
jmp
imul
mov
sbb
pop
push
(bad)
(bad)
(bad)
call
and
mov
aad
stos
mov
popf
pop
or
bound
pop
test
loope
(bad)
jmp
jmp
imul
mov
jmp
sti
fidiv
(bad)
(bad)
(bad)
mov
or
pop
retf
push
enter
push
mov
jecxz
mov
mov
lock
mov
retf
imul
(bad)
inc
xchg
mov
mov
push
push
push
adc
and
cmp
outs
sub
call
test
mov
aad
cli
adc
(bad)
js
cmp
(bad)
sahf
fnsave
mov
hlt
mov
jp
pop
inc
mov
mov
mov
cmp
xor
jnp
(bad)
popa
out
xchg
(bad)
(bad)
inc
inc
repnz
mov
jne
xor
cmp
stos
and
cmp
ja
(bad)
jmp
(bad)
clc
mov
or
mov
or
daa
loope
(bad)
push
ins
inc
mov
sbb
push
xlat
add
add
and
icebp
adc
mov
or
mov
fcom
aam
(bad)
(bad)
push
mov
bound
pop
inc
add
add
les
push
xlat
push
movs
push
mov
lock
(bad)
test
jp
dec
retf
xor
dec
sub
(bad)
jg
add
aad
and
sbb
and
mov
int
fstp
icebp
cmp
add
push
(bad)
pop
inc
pop
mov
sub
in
js
mov
dec
call
dec
les
outs
inc
mov
push
mov
shl
xor
(bad)
dec
inc
and
jb
pop
repnz
aas
jbe
add
jmp
ins
cdq
push
fs
mov
dec
xor
sbb
and
and
inc
popa
cwde
jmp
pop
call
dec
call
outs
xchg
push
xchg
aaa
nop
and
ja
sbb
jg
add
(bad)
call
mov
fs
test
fimul
add
in
jbe
lock
jg
stos
adc
xchg
neg
push
lahf
sbb
in
(bad)
(bad)
(bad)
jg
in
retf
pusha
mov
les
pusha
addr16
shl
sub
mov
jne
push
push
jne
(bad)
(bad)
call
push
push
imul
mov
xchg
mov
push
xor
jp
add
add
and
dec
sub
dec
dec
jmp
sbb
(bad)
(bad)
push
hlt
cmp
lea
jecxz
(bad)
cli
pop
mov
(bad)
fwait
push
aas
daa
cmps
mov
dec
inc
jg
fdivp
mov
or
cmp
inc
mov
xor
dec
js
call
(bad)
push
cmp
mov
ins
xor
xchg
and
cmps
bound
(bad)
(bad)
jg
retf
cmp
xchg
les
adc
cs
sub
sbb
(bad)
(bad)
(bad)
dec
mov
and
lea
(bad)
addr16
in
aaa
fwait
ja
ss
mov
iret
imul
call
dec
sbb
xor
xchg
dec
xchg
inc
adc
data16
(bad)
mov
xor
sahf
cmp
inc
ret
pop
mov
push
mov
adc
(bad)
(bad)
call
cmp
cmp
ret
out
cld
lock
mov
(bad)
(bad)
fisttp
push
fnstsw
in
int
mov
jmp
jnp
dec
lahf
std
hlt
daa
aas
shl
push
mov
repz
cmp
fwait
or
loopne
(bad)
(bad)
fdiv
pop
ja
cld
xchg
fcompp
fstp
jmp
fisttp
loop
pop
pushf
add
adc
(bad)
mov
push
sahf
xchg
(bad)
(bad)
(bad)
dec
xchg
or
add
cmp
pushw
adc
sar
dec
adc
xlat
jmp
dec
lock
ds
and
pop
dec
xor
dec
mov
ins
push
sub
nop
(bad)
rcr
xchg
aam
lock
imul
test
pop
std
or
adc
imul
ins
mov
imul
mov
or
jmp
push
lods
stc
jmp
cmc
sub
(bad)
(bad)
jmp
(bad)
ficom
dec
jb
cmovnp
jmp
add
pop
hlt
call
(bad)
pop
jg
in
scas
sahf
sbb
ret
lahf
push
cdq
fild
cwde
cs
fnstsw
icebp
and
(bad)
(bad)
(bad)
cmp
push
sub
ins
jmp
inc
mov
push
sub
inc
mov
scas
clc
outs
(bad)
pop
push
call
js
rcr
lods
out
mov
in
mov
(bad)
fcom
test
hlt
mov
cs
inc
in
imul
ret
inc
jge
add
fsubr
scas
jmp
cwde
xchg
adc
jl
pop
(bad)
(bad)
(bad)
jmp
push
adc
movs
cmp
push
mov
or
mov
ficom
rol
(bad)
(bad)
call
(bad)
scas
add
enter
dec
daa
(bad)
jp
daa
sub
das
clc
(bad)
jg
inc
pop
cmps
scas
cmps
ins
(bad)
js
das
pusha
std
jl
mov
div
jmp
jmp
(bad)
xchg
into
outs
(bad)
cmps
sub
pop
mov
stc
rol
pop
sub
pushf
jl
repz
push
(bad)
sti
inc
stos
sub
lods
(bad)
(bad)
(bad)
call
jno
cld
cmps
stos
aas
cli
ret
mov
cmc
in
(bad)
fistp
ret
mov
mov
(bad)
(bad)
jl
pop
outs
pop
jae
test
call
dec
pop
in
pop
jne
push
imul
adc
ja
sar
pop
mov
and
iret
ins
iret
cmps
in
inc
(bad)
(bad)
push
stos
xchg
dec
retf
mov
push
out
jle
xchg
add
adc
sti
jmp
les
and
lds
jmp
mov
add
xchg
mov
push
dec
addr16
jg
in
sub
mov
cs
das
fistp
loope
push
jae
stc
ds
push
xchg
ror
mov
(bad)
inc
xchg
push
cmps
arpl
mov
sbb
enter
lock
call
jmp
cld
pushf
mov
add
pslld
pushf
(bad)
out
cwde
mov
or
pop
push
sbb
mov
test
jl
pop
pop
cmp
cmc
inc
dec
sub
pop
lock
jg
aas
ret
push
fwait
add
gs
pop
fnstsw
xor
push
mov
mov
(bad)
(bad)
jmp
or
ret
call
dec
es
ja
gs
sbb
cmp
sar
jmp
cmp
dec
stos
and
cmp
fwait
mov
jo
enter
fwait
push
sub
pushf
add
test
adc
xchg
mov
call
jbe
mov
outs
and
or
xor
scas
sbb
(bad)
(bad)
(bad)
dec
xor
ret
(bad)
loope
inc
xlat
pusha
test
test
mov
jmp
cmp
jge
inc
pop
das
sar
pop
add
ins
xchg
dec
jo
push
xchg
pop
mov
popa
xor
outs
fldenv
dec
aaa
and
pop
mov
(bad)
dec
es
push
push
fs
pusha
jl
ds
pop
out
loopne
cs
mov
add
dec
(bad)
jmp
call
add
shl
cmp
cmp
xchg
int
push
push
arpl
pushf
xor
inc
sbb
add
(bad)
inc
leave
add
inc
popf
sub
jo
fisttp
movs
das
scas
cmps
ss
test
ja
mov
mov
outs
cmp
jmp
pop
xchg
mov
or
inc
arpl
repz
js
or
and
add
adc
mov
mov
call
xchg
push
xchg
and
sbb
pop
xchg
dec
inc
lods
imul
jmp
xchg
(bad)
dec
dec
mov
inc
aaa
or
add
sbb
pop
sub
pop
cld
push
imul
mov
dec
sar
(bad)
cmp
inc
xor
shl
pop
mov
(bad)
jle
out
push
cld
(bad)
push
jg
pop
push
dec
pop
mov
aaa
les
cmps
mov
(bad)
mov
push
test
cdq
jmp
fwait
push
jge
leave
sti
jg
(bad)
(bad)
(bad)
dec
or
mov
mov
pop
add
scas
sub
sub
sahf
xlat
sub
xchg
mov
(bad)
inc
jecxz
in
cmc
add
mov
and
test
(bad)
iret
fcom
mov
shl
cs
call
mov
call
bound
xchg
lods
shl
loope
ds
inc
fwait
lods
xor
pop
dec
mov
xor
and
inc
mov
xchg
imul
sbb
fisttp
jae
ret
fs
popa
sub
lea
popf
mov
cld
mov
mov
cmp
test
push
jne
std
das
cmp
push
(bad)
(bad)
(bad)
call
scas
mov
xor
xor
inc
test
dec
and
xor
inc
jle
mov
hlt
mov
add
je
in
repz
cmp
inc
stc
pop
aas
repz
loope
outs
es
push
(bad)
jmp
aas
mov
jnp
ins
cmp
mov
(bad)
(bad)
mov
mov
mov
jno
cmps
sub
cmovge
xor
xlat
mov
push
fcom
(bad)
mov
sbb
ret
inc
enter
and
jns
adc
(bad)
cmp
nop
cmp
xor
mov
(bad)
ficomp
and
aam
imul
adc
mov
pop
sub
(bad)
(bad)
jg
jnp
xor
test
adc
xor
icebp
mov
jo
fnstsw
test
inc
nop
sub
xchg
mov
pushf
das
sar
or
or
lds
sub
aam
add
adc
(bad)
(bad)
(bad)
call
sbb
xchg
aam
pop
inc
add
fisubr
mov
sbb
inc
in
(bad)
(bad)
push
dec
retf
inc
push
dec
enter
fdivr
out
push
pop
call
inc
sub
lea
adc
ret
sub
stc
cmp
ja
add
popa
ret
inc
rcl
test
(bad)
pop
hlt
int3
das
adc
cli
xor
in
mov
push
(bad)
mov
rcl
add
cmp
stc
inc
js
or
leave
retf
scas
mov
push
movs
(bad)
and
sbb
or
jle
or
(bad)
inc
mov
popa
iret
and
cmp
pop
fist
jecxz
jmp
pop
sub
jae
or
jmp
ins
inc
ds
cmp
mov
movs
daa
call
add
mov
lods
mov
test
add
scas
fs
xchg
int
fisubr
(bad)
(bad)
(bad)
(bad)
aad
and
mov
call
push
ja
lahf
cmp
xchg
js
mov
(bad)
(bad)
call
pop
leave
fs
jns
and
xor
jns
add
(bad)
sti
loop
sbb
inc
gs
loope
dec
push
mov
in
push
repz
push
out
ss
fidivr
jg
or
out
sbb
adc
test
push
(bad)
(bad)
(bad)
inc
push
sbb
into
mov
popa
adc
xchg
cmps
jle
aam
retf
shr
pop
xor
mov
mov
sub
sbb
xor
and
(bad)
(bad)
(bad)
out
mov
fdivr
into
or
sbb
jne
fs
pop
dec
adc
mov
or
(bad)
(bad)
(bad)
inc
pop
xor
mov
aad
sub
in
out
fcomi
mov
mov
div
in
mov
ret
inc
jae
sahf
fs
(bad)
mov
aaa
fsqrt
shl
xor
call
sbb
(bad)
push
es
and
(bad)
pop
ss
out
scas
pop
aam
dec
test
mov
aad
shl
pop
pop
loop
je
arpl
iret
jb
ss
mov
call
xchg
adc
and
inc
adc
cs
sub
jno
push
push
in
adc
inc
xor
xor
xchg
adc
mov
mov
sub
jmp
call
mov
push
adc
mov
jno
sub
xlat
loopne
mov
cmp
inc
(bad)
(bad)
xchg
ror
sub
sbb
push
jb
inc
mov
(bad)
(bad)
push
int
xchg
add
push
pop
sbb
inc
cli
rol
push
add
movs
adc
sbb
pop
xchg
mov
ud0
mov
aaa
or
add
or
push
or
xchg
(bad)
fcomip
push
and
jbe
rol
adc
push
js
add
jecxz
xor
push
add
fwait
hlt
(bad)
(bad)
inc
retf
test
popa
push
inc
push
inc
shl
movs
sub
push
clc
push
in
out
mov
mov
jg
jnp
test
sahf
mov
mul
lods
test
adc
pop
push
xor
mov
push
sub
and
out
or
dec
xchg
inc
enter
and
(bad)
(bad)
(bad)
(bad)
call
mov
test
arpl
mov
fcom
add
ds
push
mov
stos
(bad)
(bad)
(bad)
call
xchg
aaa
add
in
mov
out
call
movs
add
cld
stos
(bad)
inc
add
mov
inc
nop
retf
movs
mov
imul
(bad)
out
adc
pop
mov
cmp
ins
(bad)
mov
and
clc
inc
cmp
cmps
mov
and
(bad)
call
lock
pop
xor
or
lock
shl
mov
add
jmp
rcr
(bad)
clc
js
adc
jle
repz
loopne
and
enter
rol
sbb
jo
cmp
jg
add
loopne
stos
sbb
sbb
movs
in
(bad)
jle
ret
mov
xchg
mov
mov
cmps
retf
es
mov
cmps
dec
mov
(bad)
(bad)
jmp
xor
loopne
cmp
push
or
push
movs
dec
push
adc
scas
push
or
call
and
pushf
lock
inc
dec
xor
sahf
push
push
rol
cli
push
cld
sub
xchg
xor
repnz
jecxz
sti
clc
fild
sub
(bad)
(bad)
(bad)
call
leave
push
and
ins
outs
pop
ja
add
imul
xor
jle
(bad)
popf
(bad)
(bad)
(bad)
(bad)
jmp
dec
push
cmp
cmp
mov
jne
cmp
inc
cdq
sub
sbb
adc
bswap
(bad)
(bad)
jmp
push
adc
cmps
xchg
fbstp
mov
or
outs
sbb
cmps
cs
push
fild
jmp
cmp
push
pusha
add
xor
sbb
call
mov
cs
adc
scas
push
xchg
movs
sbb
mov
add
jmp
pop
push
bound
adc
retf
jo
mov
cmp
arpl
mov
sar
pusha
and
mov
mov
add
pop
push
inc
call
into
movs
xchg
dec
inc
adc
push
test
xchg
psubusb
dec
gs
xchg
cwde
adc
jmp
push
pop
mov
xor
cli
add
mov
jl
jle
adc
movq
and
cmp
nop
adc
push
lea
jge
sub
(bad)
(bad)
jg
nop
fst
or
in
js
cwde
mov
retf
or
into
jae
repnz
(bad)
jmp
ja
(bad)
jg
jbe
sub
ja
xchg
cmc
jge
cdq
aaa
ja
inc
mov
in
cli
cs
xchg
ins
inc
clc
arpl
inc
stos
xor
scas
inc
rcl
(bad)
out
rcl
xor
xchg
add
xchg
sbb
or
(bad)
cmp
cld
in
cmp
push
imul
(bad)
jecxz
outs
imul
push
popf
fistp
push
cmps
inc
(bad)
xchg
push
mov
xchg
mov
sbb
test
cmc
aas
(bad)
xchg
(bad)
(bad)
jmp
popa
mov
jae
xlat
jecxz
retf
pusha
mov
loop
mov
cdq
sar
push
ss
test
lods
mov
pop
inc
jb
dec
add
f2xm1
and
shl
bnd
mov
enter
jo
sar
push
adc
inc
cs
jecxz
(bad)
fsub
pusha
inc
cli
sti
ja
je
cli
nop
mov
pop
fcmovu
add
jns
and
or
(bad)
(bad)
push
leave
and
or
ficomp
push
cld
dec
adc
clc
(bad)
repnz
ja
cli
(bad)
(bad)
jecxz
into
shl
pop
in
mov
imul
cmp
std
int
(bad)
lea
mov
jnp
dec
in
stos
shr
std
xlat
xchg
sub
push
jg
in
dec
dec
das
push
(bad)
dec
(bad)
(bad)
retf
pop
xchg
and
dec
xor
in
sub
mov
stos
outs
xchg
in
sub
dec
repnz
pop
call
jle
nop
clc
dec
int3
and
data16
imul
inc
aad
mov
fdivr
(bad)
inc
pop
neg
jge
mov
fidiv
and
fwait
xchg
and
xor
outs
mov
ins
out
pop
jmp
rcl
cld
(bad)
out
lahf
jl
jmp
lds
dec
retf
mov
mov
aaa
movs
(bad)
dec
test
aam
push
ins
dec
(bad)
xor
les
jg
pop
push
push
lock
repz
test
pop
sub
imul
inc
pusha
jnp
push
(bad)
(bad)
mov
cmc
mov
aas
mov
inc
xlat
jmp
pop
daa
adc
(bad)
(bad)
(bad)
(bad)
(bad)
sti
sahf
pop
pushf
lods
mov
ins
pop
lock
stos
mov
xor
mov
jp
(bad)
(bad)
(bad)
jmp
mov
fiadd
sub
out
div
mov
xor
in
push
(bad)
dec
sti
adc
into
xor
jne
and
(bad)
out
mov
out
loope
and
cs
push
inc
pop
fnstenv
xor
out
(bad)
(bad)
(bad)
call
in
mov
sub
adc
xchg
sub
mov
lea
icebp
popf
mov
(bad)
dec
mov
mov
sti
pop
jne
xor
pop
outs
inc
daa
movs
mov
mov
lea
pop
jmp
push
xchg
iret
jg
adc
and
stc
push
sbb
cwde
nop
mov
(bad)
sti
push
rcr
mov
in
pop
test
cmc
stos
pop
scas
sbb
and
fs
(bad)
(bad)
call
pusha
sahf
and
xchg
sbb
fs
adc
or
mul
stos
adc
clc
(bad)
jmp
xchg
dec
dec
mov
mov
mov
xchg
outs
ret
jmp
mov
and
xor
push
loope
xchg
(bad)
mov
cmp
pop
sbb
mov
jmp
dec
adc
push
push
xor
jmp
sbb
mov
mov
jg
mov
mov
mov
clc
imul
ret
and
mov
and
(bad)
push
push
and
dec
xchg
sbb
pop
cmp
mov
xchg
xlat
sahf
mov
xchg
dec
sar
add
ffreep
arpl
js
dec
add
jno
test
xlat
pop
lock
scas
mov
and
(bad)
jmp
jmp
fld
or
inc
sub
and
xlat
push
inc
push
sub
clc
loope
adc
(bad)
push
xchg
clc
sub
xor
rcl
mov
pop
mov
push
mov
dec
sub
jmp
jecxz
stc
fidivr
jge
ficomp
cmp
push
fnsetpm(287
sar
and
loope
dec
add
cvtps2pi
inc
pop
sub
mov
sbb
jo
call
pushf
sbb
jmp
test
or
loope
jnp
cmc
in
mov
dec
pushf
sbb
jo
imul
mov
and
ret
jmp
jmp
sbb
aaa
les
mov
push
in
mov
mov
adc
aad
(bad)
(bad)
jmp
adc
push
mov
and
fwait
inc
lods
cmps
test
loop
call
(bad)
(bad)
(bad)
jnp
add
leave
push
popf
pop
cmp
pushf
sahf
pushf
jbe
jae
aad
or
add
add
(bad)
(bad)
(bad)
push
fidiv
mov
ss
iret
pusha
or
or
and
ficomp
cmp
dec
int3
dec
in
cdq
into
mov
sub
stos
(bad)
push
(bad)
imul
sahf
jmp
out
out
jg
ror
or
and
(bad)
(bad)
(bad)
(bad)
fdivr
and
cmps
push
and
dec
mov
into
pop
lods
mov
mov
cmp
sub
mov
stos
cmp
cmps
shl
jg
fsubr
jmp
pop
mov
mov
mov
mov
mov
(bad)
inc
pop
sbb
add
repz
sbb
mov
(bad)
sti
rol
sar
and
ret
popf
xchg
push
(bad)
push
xchg
test
inc
add
adc
xchg
(bad)
(bad)
(bad)
fcomip
jmp
dec
ret
pop
aad
js
add
rcl
cmc
jb
fwait
(bad)
aaa
cld
or
inc
xor
jo
rol
enter
push
and
(bad)
(bad)
fild
pop
call
movs
and
and
xor
xor
jo
lods
scas
mov
nop
or
or
scas
mov
rcr
xchg
jle
aaa
cld
fbld
test
loope
cmps
cmps
stos
mov
add
adc
(bad)
(bad)
call
call
loop
fwait
mov
int
sbb
int3
adc
aad
loop
push
cwde
dec
xchg
out
(bad)
jg
(bad)
inc
sar
popf
into
es
nop
js
sahf
push
fcmovnu
mov
cmp
dec
jno
push
pop
(bad)
(bad)
call
das
gs
popf
jmp
inc
test
push
jb
stos
mov
fdivr
movs
aas
ret
add
bnd
test
and
pop
mov
jg
mov
ins
cs
xchg
test
jo
sar
pop
pop
jl
push
fwait
jo
or
adc
mov
nop
mov
sbb
test
push
push
int
cmp
out
loopne
pop
adc
add
call
sar
repz
fwait
cmp
lods
sub
bound
(bad)
mov
(bad)
(bad)
jmp
stc
and
clc
stos
jl
icebp
ds
das
aas
fnsave
mov
or
je
(bad)
(bad)
call
mov
aas
add
pop
mov
dec
mov
or
pop
pop
aam
sbb
retf
cli
xor
jecxz
jl
xchg
cdq
add
dec
sbb
add
cs
sbb
loopne
inc
mov
das
cmps
or
push
pusha
inc
test
jmp
lock
arpl
push
repz
dec
shrd
adc
loop
sbb
pop
(bad)
dec
push
stos
shl
mov
cmc
lock
cmps
ins
dec
hlt
jmp
jo
pop
rol
cmp
add
rol
(bad)
(bad)
dec
loopne
pusha
adc
inc
retf
imul
(bad)
ror
push
movs
and
ret
sub
inc
inc
add
leave
xor
or
loope
loopne
dec
cmp
dec
or
jmp
and
js
cmc
aaa
adc
js
sbb
outs
addr16
(bad)
(bad)
out
loop
popf
das
pop
enter
dec
inc
test
fidivr
mov
dec
into
and
(bad)
jmp
push
push
aad
loop
or
jns
call
xlat
cmc
rcr
shl
dec
in
push
dec
shl
dec
xlat
sbb
mov
(bad)
inc
loop
fisub
dec
fnstsw
mov
pop
and
jecxz
xchg
ss
(bad)
xchg
mov
pop
out
in
cmp
jbe
and
mov
(bad)
(bad)
(bad)
(bad)
mov
cmps
sbb
adc
pop
pop
xor
xor
cmps
mov
xor
outs
cli
(bad)
jmp
add
pop
cmp
cs
push
cmovge
ret
addr16
(bad)
(bad)
dec
hlt
fs
jl
addr16
xor
iret
sbb
inc
cmp
adc
mov
xchg
lods
cmp
(bad)
jmp
jb
mov
int3
repz
pushf
jb
mov
les
dec
mov
(bad)
(bad)
call
shr
jns
stc
pop
mov
cld
mov
cmp
shl
aad
jecxz
push
loope
sub
push
sbb
and
(bad)
pop
jbe
stos
lea
add
std
les
jno
mov
push
cmp
cmc
div
(bad)
(bad)
jmp
mov
jmp
shl
jmp
dec
xchg
sbb
adc
out
pop
add
(bad)
(bad)
cmp
das
ss
pop
pop
push
ins
mov
xchg
in
push
std
sub
and
dec
popa
sbb
call
jle
and
(bad)
jmp
add
xlat
mov
push
retf
xor
jp
push
enter
nop
lds
sbb
jmp
out
shl
cld
(bad)
(bad)
jg
xchg
scas
lahf
fisub
jns
sbb
dec
and
push
arpl
xchg
inc
sub
cs
pop
sub
ret
call
and
mov
addr16
stos
sub
fstp
adc
or
mov
leave
test
push
sar
test
cmps
clc
push
(bad)
(bad)
(bad)
call
stos
imul
psrlw
mov
loop
je
and
pop
adc
add
inc
clc
(bad)
(bad)
jmp
lds
mov
shl
dec
adc
mov
cmp
pop
lock
(bad)
xchg
inc
adc
sbb
sbb
push
popf
pop
fwait
sbb
add
jmp
div
or
and
add
(bad)
(bad)
cmp
xchg
jo
push
pop
ret
dec
cdq
or
push
xor
mov
das
adc
jne
and
cmp
call
pop
jae
mov
loope
cwde
in
fidiv
daa
mov
pusha
mov
ja
clc
mov
pop
dec
cmp
sub
jmp
(bad)
ins
push
add
cmps
xchg
inc
mov
repz
(bad)
(bad)
jmp
inc
dec
in
rol
(bad)
rcl
mov
test
mov
push
add
jae
cmp
aam
jmp
mov
adc
aas
xor
jb
inc
(bad)
(bad)
(bad)
mov
mul
mov
ret
mov
push
mov
lods
call
punpckhbw
pop
push
clc
dec
aam
cmp
jo
mov
sub
(bad)
push
push
cmp
xchg
inc
loopne
pushf
sub
inc
pushf
sbb
cmp
sahf
adc
jo
dec
(bad)
jmp
push
pop
cdq
clc
ja
aam
xchg
rol
or
ret
shl
(bad)
push
jns
mov
idiv
jo
popf
xor
xchg
icebp
pop
test
jb
dec
mov
rol
mov
push
push
sbb
clc
outs
call
sbb
aas
dec
aaa
(bad)
loopne
test
push
mov
sub
cmps
xchg
fstp
add
(bad)
jmp
mov
jne
sub
sub
clc
push
or
jb
shl
inc
mov
mov
jmp
adc
lahf
sti
call
and
inc
and
add
push
(bad)
(bad)
call
aad
repnz
or
mov
jnp
cli
in
out
jge
retf
neg
sbb
outs
jl
ja
adc
dec
push
dec
retfw
mov
xor
movs
(bad)
or
scas
repz
aam
addr16
cli
(bad)
(bad)
jmp
cli
daa
les
mov
movs
add
inc
jge
jecxz
adc
(bad)
(bad)
dec
cli
dec
test
sbb
mov
pop
cmp
or
shl
adc
(bad)
(bad)
(bad)
jmp
pop
push
mov
or
or
xchg
xor
cwde
mov
das
lea
(bad)
dec
pop
cld
test
sub
or
sub
inc
jecxz
(bad)
(bad)
jmp
arpl
jl
into
int3
int3
dec
scas
push
cwde
fdiv
dec
xchg
out
outs
test
test
pop
dec
push
cmp
loop
cmp
and
jg
adc
repnz
loopne
rcr
dec
cwde
inc
(bad)
(bad)
jmp
popf
xchg
jo
xor
enter
(bad)
xchg
inc
out
mov
enter
mov
idiv
dec
sub
mov
inc
aaa
xor
mov
adc
jl
(bad)
jg
mov
xor
push
mov
dec
adc
shr
(bad)
(bad)
loope
fldenv
je
or
into
mov
into
mov
xchg
idiv
js
(bad)
(bad)
(bad)
push
adc
mov
xchg
dec
jge
cmp
repz
jl
(bad)
(bad)
(bad)
jmp
repnz
pop
sub
dec
adc
mov
je
jmp
fistp
mov
push
movs
call
les
int3
and
imul
sbb
adc
icebp
(bad)
jmp
stos
lds
push
sub
leave
or
pop
test
lock
imul
mov
dec
cwde
and
(bad)
xor
xor
(bad)
out
and
(bad)
pop
mov
xchg
shr
inc
and
jmp
sbb
xchg
call
in
or
(bad)
and
sbb
in
leave
mov
test
inc
cmp
cmp
aaa
cmp
loope
or
pushw
push
mov
leave
mov
push
xchg
(bad)
(bad)
dec
neg
outs
adc
mov
xor
retf
xchg
lods
push
pop
jne
xor
(bad)
dec
cli
xchg
cdq
fldcw
adc
ins
test
iret
rcl
ins
mov
(bad)
(bad)
jmp
push
xchg
add
push
pop
je
fcom
and
xchg
js
data16
mov
sbb
mov
aaa
(bad)
(bad)
(bad)
jmp
xor
jge
shr
inc
mov
cmps
cmps
test
nop
fidivr
icebp
sahf
mov
adc
dec
pop
jle
rcr
outs
jg
inc
mov
call
ret
push
mov
mov
sub
fdiv
inc
or
ins
add
data16
mov
pop
out
into
fwait
lods
out
mov
fs
or
xchg
mov
(bad)
(bad)
stc
mov
cli
les
cli
cmc
shl
mov
sub
sub
cmp
jne
(bad)
(bad)
dec
xchg
adc
movs
addr16
xchg
mov
push
fnstcw
(bad)
(bad)
(bad)
call
mov
adc
adc
jmp
pop
sti
jmp
pop
scas
pop
fnsave
cmp
fbstp
xchg
test
mov
push
lods
jne
cli
test
test
js
int3
pop
(bad)
(bad)
(bad)
(bad)
mov
xchg
stos
sbb
jnp
pop
jl
and
mov
xchg
xor
cmp
jmp
loop
test
dec
rcl
xchg
fwait
das
xlat
push
mov
mov
mov
jne
test
into
lock
add
xor
cmps
push
mov
(bad)
dec
out
mov
cmp
push
movs
outs
fiadd
cmps
mov
retf
lods
pop
(bad)
jecxz
fimul
out
cmp
jle
sub
and
das
idiv
mov
jge
rol
add
(bad)
jnp
icebp
ficom
xchg
adc
(bad)
xchg
push
fdiv
hlt
je
add
and
(bad)
(bad)
(bad)
jl
mov
or
pop
pop
fisub
push
mov
add
iret
hlt
jl
push
ja
(bad)
jmp
jg
clc
sar
je
mov
test
in
(bad)
(bad)
iret
out
sti
xchg
cwde
(bad)
(bad)
(bad)
jg
push
inc
ret
addr16
cmc
mov
mov
ja
in
into
mov
push
rcr
jle
(bad)
mov
cwde
scas
cs
out
bound
xor
js
add
inc
cld
inc
loop
(bad)
xchg
sbb
nop
pop
(bad)
shr
fisub
mov
(bad)
push
daa
and
sub
mov
stc
and
sub
jle
push
xor
mov
adc
aaa
dec
sub
and
push
or
(bad)
(bad)
(bad)
inc
inc
push
or
mov
adc
mov
test
addr16
sub
shl
pushf
xchg
dec
cmp
lahf
out
hlt
pop
les
mov
xor
mov
add
(bad)
add
cwde
pop
adc
mov
retf
int
lea
jp
loop
mov
mov
cmp
(bad)
fimul
adc
add
add
jp
xchg
aas
sbb
(bad)
(bad)
(bad)
jmp
push
les
out
pop
mov
xor
inc
mov
scas
mov
and
rcr
cmc
jg
inc
jmp
push
mov
in
sbb
cmp
iret
jno
mov
das
add
jo
stc
adc
xor
mov
adc
mov
fs
sbb
(bad)
push
je
retf
fnstsw
test
and
ret
dec
mov
loope
or
pop
into
ret
(bad)
(bad)
call
out
test
cmp
pop
ret
sbb
sbb
add
push
or
les
adc
mov
cmp
lock
lods
pop
xchg
inc
adc
nop
xchg
int3
add
jg
sbb
push
mov
icebp
out
mov
inc
push
xor
mov
cmp
xor
cld
(bad)
(bad)
jmp
js
and
outs
(bad)
mov
icebp
lea
jns
fimul
imul
aaa
dec
clc
push
shl
xchg
in
pop
mov
mov
add
jmp
call
adc
(bad)
bound
cmp
in
mov
jmp
push
xchg
jmp
mov
pushf
jmp
(bad)
(bad)
mov
jecxz
jmp
add
mov
stos
mov
jle
(bad)
(bad)
inc
xchg
and
or
push
mov
mov
xchg
data16
aas
jbe
mul
adc
add
(bad)
(bad)
(bad)
mov
mov
sbb
dec
and
adc
repz
(bad)
in
mov
inc
xchg
dec
outs
mov
xchg
mov
inc
sub
rcr
(bad)
jmp
pop
cld
add
std
aas
out
jnp
loop
sar
xchg
pop
in
mov
imul
jo
and
jmp
in
ret
push
and
loope
jp
cwde
mov
inc
dec
(bad)
(bad)
(bad)
dec
popa
mov
pop
dec
sub
xchg
cmp
shl
aaa
dec
mov
fidiv
or
push
sub
movs
adc
pop
or
or
(bad)
(bad)
(bad)
call
scas
xor
mov
leave
aad
(bad)
arpl
ds
mov
or
call
pop
iret
fs
mov
add
fist
sub
(bad)
(bad)
(bad)
call
rol
mov
repz
mov
ins
pop
(bad)
(bad)
out
stc
push
jmp
(bad)
(bad)
(bad)
jg
push
jp
ret
out
jg
imul
ins
stos
push
clc
dec
pop
sub
inc
xchg
call
(bad)
pop
mov
iret
push
mov
call
ja
in
jne
std
hlt
sar
es
mov
clc
pop
xchg
push
std
xchg
dec
stos
(bad)
in
out
bt
test
inc
jmp
dec
cmp
or
adc
xchg
arpl
imul
call
nop
xchg
push
push
pop
xor
imul
outs
and
jmp
push
jbe
jecxz
mov
fs
push
cmp
push
add
and
inc
iret
pop
in
es
cld
mov
adc
inc
cld
(bad)
push
imul
or
lock
dec
pop
pop
out
shl
sub
je
and
and
shr
cdq
jo
(bad)
(bad)
(bad)
jmp
(bad)
fild
or
or
je
and
gs
test
pop
cld
and
add
leave
sub
aas
push
mov
(bad)
ss
mov
add
mov
icebp
sti
sar
int3
popa
sub
(bad)
(bad)
out
xor
xor
scas
jg
jmp
xor
je
push
fst
in
das
sbb
addr16
repz
(bad)
(bad)
fnstsw
loope
adc
xlat
inc
pop
repz
sahf
cs
fimul
(bad)
(bad)
dec
lods
mov
out
(bad)
es
xchg
push
cli
loope
push
push
rol
stc
fldcw
scas
mov
jmp
loopne
pop
pop
jl
aas
push
push
neg
(bad)
(bad)
(bad)
aas
cmc
test
inc
test
(bad)
mov
adc
push
xor
sub
(bad)
(bad)
(bad)
dec
in
imul
call
adc
mov
lods
lods
and
(bad)
(bad)
(bad)
jmp
in
jmp
mov
mov
int
sub
(bad)
and
pop
xor
scas
sbb
pop
icebp
push
or
mov
dec
jo
shl
adc
call
(bad)
dec
test
mov
outs
pop
inc
mov
mov
(bad)
(bad)
(bad)
push
and
loopne
mov
sahf
js
les
sub
dec
mov
aaa
es
dec
(bad)
(bad)
(bad)
call
sbb
out
mov
call
sub
(bad)
out
mov
mov
aad
or
(bad)
(bad)
dec
inc
cmp
xor
popf
push
adc
jae
movs
adc
push
pop
aad
sbb
(bad)
push
aad
sub
and
jmp
mov
cs
iret
jmp
retf
movs
sti
sti
push
retf
push
xchg
and
(bad)
(bad)
call
pop
loop
std
jae
sub
mov
xor
jmp
sub
push
mov
std
in
in
mov
inc
and
stc
pushf
cdq
das
add
push
aaa
fcom
mov
stos
xor
jo
(bad)
clc
outs
xor
mov
(bad)
mov
out
daa
div
retf
cwde
adc
test
(bad)
arpl
out
xor
and
or
sbb
(bad)
(bad)
(bad)
dec
push
cwde
iret
scas
push
sbb
pop
ds
xlat
pmulhw
inc
fxch
movs
jmp
mov
xor
stos
fcmovbe
mov
inc
add
out
xlat
(bad)
lock
(bad)
dec
shl
and
dec
stc
xor
pop
xchg
mov
xchg
retf
mov
stc
mov
xchg
dec
pop
jno
stos
inc
adc
pop
mov
push
sub
xor
(bad)
(bad)
jmp
daa
out
jmp
mov
sub
mov
fwait
dec
adc
add
jnp
add
daa
data16
push
push
fiadd
mov
jb
rol
mov
adc
cmc
sub
int3
aam
(bad)
inc
and
sbb
push
gs
push
(bad)
jno
mov
pop
rol
xchg
(bad)
jmp
or
imul
mov
mov
or
(bad)
(bad)
jmp
in
xchg
push
ret
mov
and
jmp
sub
mov
ds
inc
xor
mov
mov
and
mov
and
(bad)
mov
mov
inc
add
xor
cwde
into
adc
in
in
jo
(bad)
(bad)
jmp
mov
mov
scas
rcl
xchg
or
dec
adc
addr16
punpckhwd
in
(bad)
(bad)
(bad)
(bad)
mov
pusha
and
nop
add
inc
pop
push
inc
xor
xor
mov
scas
(bad)
(bad)
(bad)
call
xor
in
add
or
add
cmps
mov
xlat
jno
lahf
rcr
dec
xchg
cli
mov
les
(bad)
jg
xchg
lods
push
dec
xchg
adc
add
mov
adc
jno
in
(bad)
dec
stos
cmp
mov
adc
fdiv
mov
(bad)
jg
add
mov
push
sbb
jo
dec
lahf
js
test
cmp
xor
inc
inc
shr
and
mov
(bad)
das
(bad)
call
call
popf
cmp
scas
repz
movs
pop
(bad)
(bad)
(bad)
call
xchg
or
xor
push
outs
sub
dec
stc
call
scas
ss
or
(bad)
cmp
in
jecxz
push
clc
xchg
jno
adc
fcom
(bad)
jg
push
jl
and
aas
xlat
jbe
add
jo
(bad)
sar
jmp
jmp
daa
adc
xor
fidiv
jmp
adc
clc
in
cli
push
fcomp
xor
inc
ror
jo
adc
pop
cmp
add
push
xchg
cwde
and
inc
sub
std
idiv
jle
dec
cmps
rcr
out
jge
fwait
pop
repnz
sbb
rol
das
loopne
push
mov
(bad)
(bad)
jmp
push
leave
imul
add
lock
sub
test
retf
loopne
xchg
xor
sub
jmp
add
(bad)
dec
adc
pop
aaa
test
dec
lods
fild
and
shl
nop
adc
sub
loopne
(bad)
(bad)
jg
ficomp
adc
(bad)
sar
adc
inc
adc
iret
xchg
fsubr
xor
fild
cwde
(bad)
(bad)
(bad)
call
mov
nop
add
jae
mov
inc
xor
dec
mov
addr16
aad
mov
pop
int
lock
mov
sti
jbe
jg
(bad)
call
mov
mov
or
mov
sahf
movs
inc
aad
in
jo
push
js
cmps
loope
int3
push
jbe
es
repz
or
pushf
and
mov
sbb
and
ret
jns
mov
mov
mov
sbb
jmp
xchg
idiv
(bad)
jg
test
scas
add
or
aas
shr
clc
mov
jmp
or
sub
push
arpl
sub
push
jbe
push
mov
ficomp
ja
and
fcomip
call
pop
shr
sbb
aam
adc
int3
(bad)
(bad)
(bad)
inc
jne
ret
pusha
mov
in
xchg
mov
jg
addr16
(bad)
dec
in
pop
in
dec
enter
dec
cmps
xchg
push
jnp
and
xor
cmp
mov
and
inc
mov
adc
inc
xchg
mov
stos
sub
push
push
popf
fdiv
movs
lock
ja
out
add
xor
neg
div
mov
xor
mov
inc
add
jg
sbb
xor
or
ds
jmp
dec
jne
lds
mov
pminub
push
jl
jo
lds
stos
mul
cld
cmc
mov
inc
lahf
xlat
aam
shl
lea
add
mov
jp
nop
and
add
nop
sub
adc
or
cmp
jmp
and
(bad)
push
mov
xor
(bad)
(bad)
(bad)
jmp
aad
cwde
stos
sub
(bad)
popf
push
xchg
or
retf
cdq
(bad)
bound
movs
(bad)
(bad)
inc
fdiv
mov
lods
pop
mov
cmc
aam
mov
inc
(bad)
(bad)
jg
and
xlat
mov
je
cmp
mov
hlt
inc
xchg
dec
pop
sub
(bad)
(bad)
dec
iret
push
shl
sbb
dec
push
cmps
sahf
cs
in
int
and
cmp
or
push
adc
icebp
(bad)
call
jl
vandpd
lock
out
push
xor
fwait
(bad)
(bad)
(bad)
push
outs
inc
gs
ins
sub
fs
hlt
lds
dec
stos
aas
jl
jmp
pusha
xchg
lods
in
(bad)
cmp
mov
ja
cmp
mov
adc
fld
sar
in
(bad)
(bad)
aas
nop
xor
push
fld
pop
mov
pop
cmp
mov
jl
mov
in
push
xchg
shl
arpl
pop
cs
mov
cmp
jp
fcmovne
xchg
(bad)
(bad)
(bad)
call
push
iret
(bad)
mov
fadd
imul
fidiv
pusha
or
sbb
and
pop
dec
cld
jmp
adc
xchg
pusha
ret
fs
mov
cdq
sub
rcl
outs
sbb
jne
(bad)
(bad)
call
ins
inc
xchg
lods
add
xchg
inc
popa
jns
mov
in
retf
xchg
fnstenv
idiv
push
add
in
jp
xor
loope
cmps
ja
fsub
mov
fistp
add
jmp
push
retfw
mov
mov
in
fdivr
aaa
ds
mov
ret
fdivr
adc
xchg
or
xchg
(bad)
push
rcr
jno
mov
leave
push
pop
pop
mov
jg
push
cmps
cmp
mov
push
xchg
lods
imul
test
in
fidiv
rcl
ins
mov
and
fdivr
call
push
icebp
inc
ret
enter
push
add
mov
psrad
add
push
(bad)
mov
fincstp
xchg
outs
nop
fdivr
(bad)
mov
cld
pop
cmc
or
adc
js
lahf
add
cs
mov
(bad)
(bad)
push
push
xlat
xor
popa
shr
leave
or
jmp
scas
dec
adc
pop
pushf
xor
xchg
imul
imul
ja
out
movs
jmp
(bad)
(bad)
jmp
mov
mov
pop
sbb
sahf
jae
pushf
push
shl
scas
movs
call
or
fs
add
jmp
test
mov
sub
jne
fist
jg
push
adc
lds
adc
es
stos
daa
push
out
mov
mov
adc
or
mov
jl
adc
pop
sub
jo
ja
outs
push
ins
mov
div
mov
(bad)
jg
push
ins
std
inc
jo
(bad)
sbb
mov
lahf
int
dec
test
sbb
(bad)
dec
xor
adc
jb
(bad)
lock
pop
mov
loopne
les
sbb
(bad)
(bad)
dec
iret
jb
pop
sbb
movs
mov
pop
ds
inc
loopne
imul
xor
or
adc
cs
sub
mov
cmp
cwde
movs
fwait
inc
lock
xor
sbb
or
cmp
icebp
jmp
dec
es
dec
test
adc
or
add
push
fisttp
(bad)
(bad)
push
dec
dec
rcl
scas
cmps
jnp
(bad)
sub
xchg
cmp
add
jmp
cmp
xchg
ret
sbb
inc
xchg
mov
dec
dec
mov
push
sub
loope
aas
cmp
aas
mov
xchg
in
mov
and
xchg
ret
push
mov
inc
sub
std
inc
inc
mov
sahf
rcr
stc
mov
leave
ror
(bad)
sar
xor
ja
or
mov
xor
gs
or
mov
push
ret
jae
sub
(bad)
(bad)
call
cwde
sub
add
imul
cmp
push
pop
loopne
gs
sub
push
(bad)
repz
cli
adc
lods
mov
stc
mov
nop
pop
jecxz
sub
mov
and
ds
sbb
jmp
icebp
scas
(bad)
fbstp
movs
lahf
ds
ret
das
mov
int
jns
sub
(bad)
(bad)
(bad)
mov
(bad)
daa
or
arpl
xor
aam
mov
(bad)
scas
aas
inc
xchg
jecxz
xor
or
ins
add
loopne
inc
xchg
adc
clc
pop
mov
and
fsubr
(bad)
(bad)
inc
mov
mov
stos
sbb
ror
mov
fcmovnb
rcr
add
add
(bad)
jmp
icebp
enter
xchg
push
cmp
dec
lahf
mov
test
or
dec
scas
inc
in
shl
imul
adc
xchg
mov
ss
fdiv
pop
std
jg
xor
jmp
sub
jp
mov
sub
ret
push
(bad)
(bad)
(bad)
(bad)
mov
or
(bad)
shl
int3
adc
add
pushf
or
cmp
cld
add
popa
(bad)
dec
add
jmp
ss
sub
std
sub
or
(bad)
(bad)
lahf
dec
xchg
pop
jae
test
cli
cmp
clc
cmps
mov
(bad)
mov
push
das
xor
jns
dec
pop
nop
scas
data16
and
dec
add
(bad)
(bad)
(bad)
call
push
popf
ficom
sar
ror
sub
inc
nop
inc
test
(bad)
mov
mov
mov
xlat
shl
(bad)
(bad)
jmp
dec
cmp
fcomp
sti
shl
mov
pcmpeqd
xchg
push
and
and
call
mov
xchg
js
or
xchg
popa
clc
xor
shl
retf
push
mov
addr16
dec
pop
mov
sti
(bad)
(bad)
(bad)
jmp
sub
and
ret
inc
mov
inc
push
cli
ja
mov
xchg
cld
(bad)
mov
cli
adc
lock
test
fstp
dec
arpl
inc
into
pop
xchg
les
mov
add
(bad)
(bad)
(bad)
call
or
mov
inc
enter
(bad)
scas
(bad)
mov
in
mov
arpl
aam
stos
(bad)
(bad)
(bad)
(bad)
call
test
push
adc
inc
sbb
mov
inc
push
cmp
call
sbb
test
(bad)
jmp
mov
sbb
in
mov
loop
das
mov
or
lea
out
sub
cmp
repz
aas
pop
daa
jmp
(bad)
(bad)
fild
lock
retf
push
sahf
shr
cmp
int3
push
dec
cmp
(bad)
(bad)
call
dec
mov
push
xor
adc
pusha
pop
pop
mov
xor
call
push
les
leave
sbb
lods
jmp
mov
dec
(bad)
push
mov
loopne
mov
mov
(bad)
(bad)
(bad)
inc
or
pop
outs
mov
pushf
cmp
xchg
fnstcw
ss
push
xchg
lods
sub
ret
lods
fcmovb
mov
push
rcr
dec
pop
inc
mov
push
jne
jecxz
repnz
aaa
pop
mov
mov
push
retf
(bad)
dec
push
xor
retf
cli
xchg
(bad)
(bad)
(bad)
call
in
int3
bound
push
mov
(bad)
mov
add
mov
pop
bound
clc
(bad)
(bad)
call
aam
inc
mov
sub
lods
push
jne
std
mov
mov
inc
and
mov
int3
pop
out
imul
pmulhw
aas
jnp
adc
in
jmp
pop
loop
test
in
call
test
data16
ret
xchg
xchg
icebp
jmp
(bad)
(bad)
inc
stc
(bad)
loop
lods
cmp
and
pop
ja
and
inc
loop
or
call
cmp
push
aaa
sbb
(bad)
call
enter
faddp
inc
cmps
xor
test
ficom
dec
stos
int3
xor
pop
push
sbb
call
adc
mov
imul
and
dec
(bad)
(bad)
(bad)
inc
es
or
dec
int
call
rcl
test
shr
mov
or
pop
imul
lock
lock
pop
and
rcl
(bad)
(bad)
call
dec
pop
cmps
pop
scas
xor
mov
das
mov
adc
shl
and
(bad)
mov
lahf
add
inc
retf
repnz
xchg
call
or
and
(bad)
call
outs
mov
gs
adc
lods
arpl
call
popa
cld
inc
bound
or
xor
shr
cli
(bad)
(bad)
cmp
sub
adc
xor
xchg
or
ins
adc
push
and
data16
hlt
ret
mov
inc
adc
loope
xor
push
in
inc
mov
fistp
(bad)
call
jge
call
pop
out
cmp
mov
stos
(bad)
(bad)
fild
sti
aam
adc
and
adc
dec
add
cmps
push
cmp
jo
mov
and
add
adc
inc
push
loopne
or
mov
leave
mov
mov
(bad)
push
fdivr
push
push
mov
nop
xor
das
int3
iret
fst
outs
in
push
aaa
hlt
aad
and
fbstp
js
push
xchg
mov
(bad)
clc
and
cli
call
ins
std
jle
out
push
mov
ins
dec
nop
sub
inc
(bad)
(bad)
jmp
push
outs
(bad)
adc
push
loop
pop
ret
jae
mov
jo
mov
jp
lds
mov
(bad)
sbb
pop
stos
sub
loopne
pushf
pop
sbb
mov
ror
sbb
ror
outs
mov
icebp
cmp
lahf
test
leave
cmp
and
(bad)
(bad)
(bad)
jmp
mov
(bad)
xchg
add
ins
mov
sub
movs
stos
jne
int
xchg
inc
cmp
mov
and
lods
add
(bad)
(bad)
push
push
inc
call
fidiv
jmp
pusha
mov
ret
(bad)
push
je
icebp
mov
das
jmp
out
mov
lods
push
sti
mov
outs
rol
(bad)
(bad)
fcomip
sbb
adc
add
ins
push
adc
loope
dec
sar
frstor
in
(bad)
(bad)
(bad)
call
ss
int3
cmps
outs
sub
arpl
jo
jle
jae
push
repz
aaa
je
repnz
sub
add
mov
(bad)
(bad)
(bad)
jmp
xor
es
fdiv
push
cmps
and
push
jnp
(bad)
inc
add
shr
std
sahf
es
cmp
cmps
sbb
sub
jb
hlt
pop
cmc
arpl
mov
jmp
outs
cmp
jg
test
lods
cmp
cmp
pop
(bad)
fist
add
push
pop
stos
cld
out
inc
ins
cli
stc
push
clc
(bad)
(bad)
(bad)
(bad)
in
sub
outs
cmp
or
icebp
cli
xor
sub
aaa
repz
loope
jo
jl
xor
in
call
aad
hlt
lock
jle
push
pop
outs
or
push
pop
add
(bad)
(bad)
mov
sbb
into
mov
hlt
sub
or
stos
jne
fcomp
mov
dec
shl
out
std
sar
adc
push
pop
xchg
ds
fcmovnu
jmp
outs
leave
(bad)
(bad)
(bad)
push
rol
jne
mov
test
aam
adc
ret
rcl
fcos
(bad)
(bad)
jmp
out
pop
mov
dec
mov
sub
xor
push
push
mov
and
test
loopne
stos
xor
popa
mov
call
(bad)
(bad)
(bad)
(bad)
(bad)
clc
dec
gs
ret
jle
xor
aas
cmp
mov
mov
imul
jle
cs
jmp
xchg
cmp
retf
into
dec
add
inc
clc
movs
xchg
dec
je
push
inc
sbb
inc
push
inc
pop
and
ins
and
into
mov
aam
xchg
and
cmp
sbb
push
sub
jb
mov
(bad)
(bad)
jmp
dec
push
cmp
adc
mov
scas
test
hlt
scas
sub
jb
loopne
mov
xlat
imul
(bad)
call
lock
mov
sbb
cmp
lea
inc
call
sub
gs
shl
je
(bad)
call
inc
idiv
xchg
repnz
mov
in
cmp
(bad)
inc
imul
jle
int3
mov
push
(bad)
cld
ins
shl
data16
inc
pop
xor
jnp
push
add
fs
out
sbb
(bad)
jmp
ins
jne
ins
in
gs
out
mov
pop
jnp
(bad)
(bad)
(bad)
cmp
push
out
mov
fcom
pop
fidiv
outs
out
sbb
es
call
dec
mov
xchg
test
test
xchg
aaa
mov
cli
fimul
xchg
(bad)
(bad)
call
and
xlat
adc
or
mov
ret
(bad)
sbb
jle
outs
xchg
test
inc
cld
jmp
popa
mov
xor
mov
stc
std
out
push
xor
push
jle
(bad)
(bad)
(bad)
mov
out
sbb
xchg
in
je
cmp
int
or
es
(bad)
(bad)
jmp
mov
cdq
mov
push
push
and
xchg
int3
out
adc
test
cmp
pop
lods
push
dec
(bad)
scas
(bad)
(bad)
(bad)
(bad)
ficomp
mov
xchg
fld
sahf
cwde
add
mov
iret
push
scas
pop
aaa
sbb
or
call
jge
fstp
sti
mov
fnstenv
lea
pop
mov
(bad)
sub
sbb
mov
mov
not
sub
test
push
ud0
(bad)
fadd
addr16
cwde
out
loop
sbb
push
inc
stc
aam
mov
sti
push
inc
sbb
(bad)
(bad)
push
push
mov
push
jmp
inc
cmp
xchg
mov
xchg
mov
cmps
(bad)
inc
jge
inc
bound
mov
lods
pop
in
xor
inc
(bad)
aaa
mov
jmp
les
or
lock
xchg
rcr
stc
mov
outs
push
cs
call
push
jmp
dec
outs
nop
mov
and
imul
pop
iret
das
out
pop
sub
jmp
xchg
mov
mov
cdq
(bad)
inc
bt
or
sahf
mov
popa
xchg
jle
shl
(bad)
out
movs
mov
xchg
mov
setae
or
add
sub
mov
daa
cli
lods
pmaxub
xor
push
dec
jnp
outs
das
mov
idiv
(bad)
fimul
sub
fisubr
retf
loopne
mov
xor
sbb
(bad)
mov
and
movs
ins
(bad)
(bad)
(bad)
jmp
sbb
dec
inc
mov
pop
xor
std
xor
outs
push
pop
(bad)
out
push
sbb
sar
(bad)
(bad)
call
inc
lods
cs
xor
inc
xchg
mov
fdivr
dec
punpckldq
ret
(bad)
(bad)
(bad)
(bad)
jmp
into
inc
ja
adc
lds
fstp
mov
sti
iret
sub
(bad)
sti
(bad)
(bad)
inc
jbe
ds
mov
pop
sti
aam
or
stc
add
inc
cmp
shr
cmp
mov
pop
mov
test
mov
sahf
inc
stc
movs
scas
sub
jns
aad
and
(bad)
(bad)
(bad)
cmp
ret
dec
push
sbb
test
and
popa
push
dec
out
gs
sti
lds
dec
mov
dec
inc
(bad)
mov
add
cmp
rol
test
(bad)
(bad)
inc
xchg
or
mov
sbb
or
fdivr
clc
inc
out
jo
dec
inc
add
imul
xchg
xchg
std
(bad)
(bad)
mov
hlt
adc
repz
mov
jg
icebp
cs
ret
xchg
adc
lods
xor
aas
jae
jmp
pop
sbb
mov
jl
and
sbb
sub
sub
popa
add
addr16
mov
ins
sub
push
(bad)
(bad)
(bad)
call
repz
dec
fbstp
cli
lds
jle
arpl
jp
mov
push
and
add
(bad)
(bad)
clc
mov
pop
in
cmp
adc
inc
dec
jecxz
xor
push
mov
call
pop
sub
test
popa
arpl
push
and
adc
add
(bad)
clc
fnstcw
push
inc
adc
(bad)
sub
(bad)
jmp
mov
fcmovnb
and
push
jae
loope
inc
adc
pusha
adc
sbb
mov
pop
add
jle
cwde
xchg
pop
sbb
(bad)
(bad)
push
xlat
pop
adc
mov
and
sub
ror
add
dec
add
das
and
(bad)
cli
leave
das
jl
iret
ins
retf
adc
loopne
test
pop
inc
std
call
lods
jl
sahf
xchg
xlat
mov
mov
(bad)
jmp
sub
push
dec
mov
fmul
test
mov
inc
fimul
jae
dec
aad
loope
add
movs
add
dec
inc
test
aad
je
fisubr
pop
icebp
scas
(bad)
push
cli
in
into
add
and
iret
rcl
add
jg
pop
add
push
stos
movs
bound
mov
into
stos
(bad)
jg
test
add
or
mov
jp
test
mov
dec
inc
adc
sar
inc
cmp
and
ss
add
adc
retf
mov
xor
(bad)
js
jne
dec
pop
fmul
sti
pop
sub
int
test
sbb
test
data16
out
stc
in
mov
dec
pop
mov
pop
mov
enter
imul
or
sub
xchg
sbb
repz
test
mov
js
(bad)
(bad)
jmp
xor
pop
and
loop
or
sub
loopne
xchg
jecxz
push
daa
mov
pop
or
cmp
(bad)
(bad)
call
cmp
ins
pop
movs
jo
outs
cmp
mov
jo
inc
inc
adc
cmp
xchg
cmp
mov
scas
aaa
std
(bad)
(bad)
stc
pop
in
loope
(bad)
cld
daa
iret
push
int3
lds
or
jb
rcl
adc
(bad)
(bad)
(bad)
dec
dec
mov
imul
mov
rol
dec
hlt
adc
sbb
fs
(bad)
(bad)
push
pop
das
into
push
xor
movs
sbb
push
mov
sub
pop
pop
nop
scas
xchg
ror
or
jmp
sti
dec
xchg
inc
js
adc
adc
(bad)
rol
and
lods
add
aam
fsubr
sub
or
(bad)
(bad)
pop
cmp
xchg
aas
pusha
(bad)
(bad)
jg
call
jae
pop
or
rcr
mov
adc
ins
cmp
(bad)
(bad)
call
test
inc
jno
xor
and
cs
pop
repnz
xchg
or
inc
into
fnstenv
je
(bad)
(bad)
(bad)
call
sbb
xchg
and
stos
into
inc
ss
adc
and
cmp
sbb
lods
rcl
cli
push
sbb
daa
das
pop
fstp
xchg
(bad)
jg
xor
aas
idiv
loopne
sub
adc
scas
sbb
mov
jb
push
mov
dec
ja
and
(bad)
(bad)
cld
dec
pop
jmp
xchg
cmp
jl
mov
jae
mov
xchg
hlt
bound
in
mov
(bad)
(bad)
jmp
dec
push
inc
icebp
mov
jae
xor
cwde
pushf
cmps
aam
leave
jo
pop
mov
pop
xor
sar
pop
push
xchg
scas
fiadd
mov
dec
lds
in
push
retf
and
mov
movs
(bad)
(bad)
(bad)
mov
xlat
and
fwait
aam
int
mov
jmp
jg
push
jbe
(bad)
iret
in
cmc
sti
std
add
sub
hlt
xchg
and
in
push
xor
push
stc
mov
retf
mov
cmp
cdq
mov
jmp
(bad)
inc
int
jae
jo
(bad)
(bad)
jg
iret
dec
dec
das
repnz
mov
mov
iret
out
shl
push
xor
inc
sbb
ret
scas
pop
pop
das
push
in
xor
sbb
mov
dec
inc
ja
loopne
(bad)
jge
movs
push
repnz
dec
push
in
or
mov
jne
sbb
jmp
add
fwait
xchg
fs
pop
inc
xor
add
fdivr
add
cmp
call
mov
and
push
stos
cmp
(bad)
hlt
cmc
ror
mov
jmp
cwde
loopne
(bad)
push
lahf
mov
jnp
jno
xor
push
popa
inc
pop
mov
push
xchg
or
in
sti
inc
pop
or
sub
adc
or
hlt
sar
ret
jmp
cs
or
in
add
ror
or
test
push
add
push
pushf
adc
retf
shr
sub
jmp
push
gs
(bad)
call
loopne
xchg
push
add
cmp
int3
cmps
hlt
adc
(bad)
mov
dec
mov
(bad)
(bad)
(bad)
call
push
test
mov
mov
std
ins
das
and
push
ret
sub
jmp
and
repz
pop
mov
sbb
fsubp
mov
pop
cmp
lods
(bad)
lock
push
jp
das
fnstenv
jmp
out
and
in
into
pop
bnd
shl
and
mov
shr
jns
pop
aam
and
(bad)
(bad)
push
popa
mov
mov
jne
out
test
adc
or
add
dec
(bad)
(bad)
(bad)
push
ins
loopne
icebp
sub
(bad)
fimul
mov
das
movs
mov
lahf
jg
imul
push
mov
leave
or
pop
cmc
jg
mov
out
ret
sahf
pop
bound
popf
sub
mov
mov
cmp
mov
in
arpl
ror
dec
cmps
jno
scas
pop
ret
xchg
jmp
jmp
movs
mov
ficom
jbe
std
(bad)
inc
push
cwde
cdq
pop
sub
dec
daa
fwait
adc
es
test
aaa
inc
enter
cmp
icebp
inc
fiadd
cwde
clc
pop
rcl
(bad)
call
int3
xchg
les
cwde
xchg
gs
push
(bad)
cmp
jo
add
shl
mov
in
push
rcl
stos
adc
sub
adc
xchg
mov
jg
hlt
sub
test
xor
mov
out
sbb
shr
or
dec
mov
mov
pop
lock
pop
(bad)
and
ds
cli
push
jl
mov
pop
scas
popa
lahf
pop
outs
mov
xchg
and
pop
mov
add
inc
push
cdq
mov
jbe
(bad)
(bad)
(bad)
push
enter
repnz
mov
retf
inc
cmp
sbb
sub
(bad)
(bad)
push
inc
iret
dec
sahf
rol
mov
sub
push
mov
(bad)
cwde
pusha
pop
(bad)
(bad)
cmp
clc
jb
xchg
mov
pushf
push
adc
and
pop
or
popa
idiv
(bad)
inc
leave
push
les
xchg
aas
pop
aam
xor
dec
and
cdq
push
mov
pop
cli
mov
(bad)
inc
cld
xchg
(bad)
sub
lock
test
stos
stos
popa
std
call
or
(bad)
sti
jne
fisttp
fisttp
ret
arpl
arpl
ret
push
dec
adc
cs
push
shl
sbb
(bad)
(bad)
dec
pop
out
daa
mov
fcom
shr
jecxz
add
pusha
dec
pusha
aaa
scas
cdq
inc
mov
xchg
shl
sbb
cli
mov
call
sub
das
mov
push
jl
or
jge
push
lea
call
(bad)
jmp
out
arpl
push
(bad)
dec
mov
div
sub
iret
cmps
jecxz
movs
pushw
xchg
xchg
push
(bad)
mov
lahf
push
or
cwde
fstp
loope
and
ins
test
stos
mov
push
in
mov
(bad)
popa
test
(bad)
jg
mov
adc
jno
mov
adc
xchg
es
loop
clc
(bad)
jmp
inc
or
xchg
loope
xchg
sbb
ja
(bad)
jg
mov
movs
(bad)
adc
into
pop
lock
(bad)
(bad)
cmps
cld
into
add
(bad)
(bad)
mov
retf
sbb
dec
xchg
popf
or
add
mov
into
dec
ret
xor
call
ss
lock
inc
and
mov
loopne
ds
lea
sbb
add
xor
mov
outs
add
clc
mov
inc
lahf
jl
imul
(bad)
out
mov
mov
push
jp
dec
lahf
lods
push
popa
out
ret
imul
repnz
sti
xor
out
stos
adc
clc
std
(bad)
rcr
mov
in
fistp
(bad)
jmp
mov
mov
add
xchg
sbb
inc
retf
cli
arpl
mov
lods
jmp
push
cmovle
xchg
dec
test
sub
std
div
jno
xor
sub
pop
jns
lds
stos
push
pxor
jmp
fisubr
push
lods
cmps
out
(bad)
(bad)
(bad)
call
and
jmp
lea
push
mov
mov
je
mov
inc
(bad)
mov
mov
jne
shl
sar
stos
fwait
imul
out
hlt
inc
std
pop
js
mov
push
sub
mov
cs
(bad)
jmp
cmps
mov
das
jae
fwait
mov
out
xchg
dec
test
mov
inc
jecxz
test
cmps
test
ss
cmps
cli
inc
sub
or
(bad)
(bad)
(bad)
jmp
imul
ds
in
fsub
dec
addr16
xchg
(bad)
xchg
cdq
ret
repnz
call
(bad)
(bad)
(bad)
call
mov
aam
arpl
xlat
test
aam
cmp
sbb
or
jmp
ficomp
dec
mov
das
jp
retf
cmp
xor
int3
clc
cld
shl
mov
(bad)
(bad)
call
fidivr
sbb
retf
or
dec
out
inc
mov
test
dec
adc
in
sub
xchg
pop
and
xchg
cmc
xchg
or
stos
pop
pusha
cwde
xchg
dec
inc
in
test
dec
xor
adc
push
stos
aaa
cdq
fwait
dec
dec
pop
pushf
out
in
es
leave
clc
or
lahf
mov
clc
pop
sub
xchg
xor
jb
stos
in
je
sbb
inc
(bad)
cmp
dec
jne
pusha
shl
or
jp
(bad)
(bad)
(bad)
cmp
sub
bound
pop
js
push
pop
lods
mov
dec
pop
dec
cmp
movs
not
inc
ret
(bad)
dec
dec
retf
add
push
das
enter
mov
jmp
inc
call
(bad)
fbld
scas
xor
dec
dec
shr
and
add
jmp
cmp
(bad)
mov
mov
pop
sbb
inc
jns
mov
icebp
fwait
(bad)
call
inc
jb
push
sub
push
scas
push
inc
or
shr
mov
push
dec
adc
loope
fild
fld
(bad)
dec
sbb
inc
lahf
cli
ror
add
xor
push
sbb
mov
and
mov
sbb
in
inc
call
(bad)
mov
and
out
xor
fcomip
(bad)
push
and
cmc
dec
mov
mov
xchg
dec
pop
aaa
mov
(bad)
(bad)
call
add
in
or
scas
dec
mov
aas
stc
mov
cmp
rol
push
jb
ds
push
loopne
iret
repz
es
and
fldenv
jecxz
jg
rcr
xchg
dec
mov
(bad)
inc
sbb
rol
push
das
mov
adc
push
cmp
and
(bad)
jmp
into
shl
sub
xchg
mov
dec
jge
sbb
test
sti
(bad)
cmp
mov
movs
cmp
mov
punpcklwd
pop
lock
mov
cdq
adc
(bad)
(bad)
fcomip
sbb
or
xchg
xor
out
xor
add
pusha
(bad)
call
push
shl
aas
adc
add
push
scas
fnstenv
hlt
jp
mov
xor
jo
cld
xchg
movs
nop
adc
cmp
jb
or
add
pop
mov
(bad)
dec
adc
dec
inc
adc
mov
add
or
sahf
cmp
lods
(bad)
(bad)
(bad)
jmp
pop
enter
daa
test
ins
mov
ja
(bad)
cli
or
popa
push
les
push
aaa
add
lahf
xchg
adc
and
fisttp
inc
push
mov
jge
pop
lea
scas
stc
aad
push
mov
adc
(bad)
mov
sbb
lahf
std
(bad)
jmp
test
scas
inc
shr
(bad)
(bad)
push
popa
idiv
psrlw
sub
sar
dec
fild
ss
ret
pop
cld
xchg
pop
cmp
in
(bad)
ins
inc
push
and
or
test
and
xor
and
ss
add
xor
dec
mov
pop
cmps
pop
fld
sbb
add
fst
xchg
sbb
mov
mov
pop
call
stos
(bad)
idiv
sub
fistp
cld
out
jae
rcl
cmps
(bad)
(bad)
(bad)
inc
mov
retf
outs
cmps
aas
xor
clc
mov
es
add
cdq
dec
mov
pusha
(bad)
(bad)
(bad)
(bad)
(bad)
call
out
adc
cmp
add
sub
clc
inc
outs
add
movd
retf
pop
jmp
outs
pop
jg
mov
sbb
dec
scas
mov
nop
(bad)
mov
jae
xlat
cmp
push
push
ret
adc
adc
repz
loope
dec
ret
mov
inc
mov
mov
cmps
enter
fidiv
jb
jmp
(bad)
xor
sbb
add
xor
sbb
sbb
loopne
inc
xlat
ins
retf
xor
aam
or
fidiv
mov
push
pop
mov
jge
daa
and
popa
out
push
test
add
mov
or
push
push
sbb
jmp
add
sub
movs
retf
or
dec
bound
cmp
cli
(bad)
fild
call
inc
ret
jg
jbe
add
sar
int
mov
stos
pop
into
repnz
pop
(bad)
(bad)
jg
push
scas
push
sub
daa
mov
pop
mov
mov
(bad)
(bad)
(bad)
jmp
imul
sahf
cdq
fsub
jle
daa
aaa
xchg
or
test
addr16
sub
(bad)
(bad)
inc
and
jo
xchg
inc
dec
repz
gs
shl
xchg
in
jne
movs
pop
mov
(bad)
and
ins
std
dec
lea
shl
sahf
fdiv
(bad)
(bad)
mov
(bad)
loopne
loope
sahf
mov
inc
sub
jp
clc
(bad)
stc
fsubr
mov
push
stos
stos
push
push
lahf
sub
dec
pop
pop
inc
jnp
pop
xor
(bad)
(bad)
inc
adc
aas
push
add
stos
or
scas
add
clc
sahf
leave
add
test
push
dec
(bad)
jns
add
or
(bad)
mov
push
jbe
movs
push
adc
shr
push
(bad)
jmp
test
jp
sub
jmp
pushw
sub
rol
lods
pop
xchg
sub
das
mov
mov
imul
push
xchg
cmc
push
dec
in
aaa
ins
pop
ss
cmp
pop
pop
cmp
mov
hlt
call
mov
scas
jmp
push
sti
dec
fwait
repnz
pop
(bad)
(bad)
(bad)
(bad)
cmp
push
inc
mov
sub
call
dec
dec
into
out
sar
(bad)
(bad)
push
(bad)
shl
or
cdq
in
test
test
pop
push
dec
push
and
xorps
inc
ret
and
and
das
cli
dec
xor
mov
sbb
popf
cmps
jbe
fdivr
aaa
inc
jge
loope
das
jl
repz
fwait
sbb
jecxz
fbstp
and
jg
jmp
add
mov
cmp
inc
jecxz
pop
mov
jo
sub
(bad)
jg
mov
jbe
xchg
add
dec
push
aad
inc
(bad)
hlt
inc
mov
push
lock
loopne
mov
test
cmc
(bad)
jle
adc
(bad)
fldenv
(bad)
(bad)
(bad)
call
add
scas
cdq
cmps
inc
add
pop
and
in
das
out
sbb
stos
or
lods
inc
leave
sub
xor
nop
shr
inc
dec
dec
xchg
pusha
xchg
push
scas
test
lock
add
(bad)
gs
or
xor
int
sbb
or
inc
aas
lock
int
(bad)
jmp
mov
and
sub
(bad)
(bad)
aas
mov
jae
cbw
mov
cmp
pop
sub
ret
fst
pop
xchg
das
pop
add
mov
mov
jmp
popa
and
sar
pop
(bad)
out
test
xchg
adc
pop
call
std
sub
ror
scas
inc
pop
inc
pop
ja
repz
jmp
sbb
in
xchg
rcl
cld
adc
clc
(bad)
call
sar
stos
cs
dec
inc
sub
(bad)
std
clc
stos
ja
aad
mov
push
stos
mov
je
adc
inc
inc
out
loop
sti
(bad)
jmp
add
pop
add
adc
ja
cld
cmp
jb
sar
jmp
xchg
mov
xor
pop
loope
push
sbb
push
jns
ds
sbb
sysenter
pushf
outs
out
jbe
cmp
mov
in
mov
(bad)
pop
inc
test
fldcw
and
add
std
xor
pop
pushf
ins
cs
pop
pop
xchg
(bad)
(bad)
(bad)
(bad)
mov
mov
loop
mov
inc
adc
push
add
inc
pusha
and
mov
(bad)
shr
sbb
fucomip
nop
cwde
scas
or
out
push
ins
pcmpeqd
call
adc
retf
stc
call
pushf
xchg
inc
daa
lods
(bad)
push
xchg
icebp
or
or
adc
das
push
sub
(bad)
(bad)
jg
std
push
sbb
jnp
into
aaa
mov
xchg
dec
xchg
xchg
inc
sahf
add
test
movs
mov
add
inc
inc
les
loopne
out
fisub
retf
int3
cli
jg
jg
retf
aad
and
xlat
add
inc
sub
fisttp
mov
pop
imul
jmp
mov
xchg
mov
mov
adc
(bad)
(bad)
dec
inc
xchg
jmp
xchg
sub
mov
inc
mov
sub
outs
clc
inc
xor
and
xchg
xchg
in
cmp
mov
pop
mov
outs
add
sti
(bad)
ja
jbe
inc
in
dec
inc
sar
(bad)
(bad)
jmp
cdq
sbb
mov
in
movs
div
aaa
popa
mov
push
inc
mov
or
jmp
mov
push
inc
and
sub
and
or
and
dec
or
mov
out
(bad)
cld
sti
mov
cld
inc
mov
js
mov
in
pop
int
(bad)
fbld
iret
push
fs
push
xor
ja
bound
(bad)
(bad)
call
call
pop
lods
ss
cmp
sbb
das
popaw
adc
div
add
iret
(bad)
(bad)
jmp
sbb
loopne
xor
pop
sahf
and
scas
fimul
aad
sbb
(bad)
(bad)
call
imul
mov
out
mov
pop
push
push
adc
dec
addr16
int3
pop
shr
or
(bad)
push
in
inc
sbb
out
xor
cmps
pop
call
rcl
xchg
outs
add
sub
push
sbb
jmp
js
adc
mov
sub
mov
iret
repz
cmc
cs
jmp
jbe
sub
cmp
inc
pop
mov
push
daa
jmp
jle
in
fs
mov
(bad)
int
fisttp
jmp
pop
int
xor
out
cmps
sub
add
scas
and
call
sbb
not
(bad)
(bad)
push
mul
(bad)
in
je
cli
dec
std
iret
out
mov
rol
sub
call
movs
cmp
sbb
xchg
rol
and
xlat
mov
mov
out
je
cmps
ins
sbb
imul
das
(bad)
(bad)
(bad)
(bad)
(bad)
mov
fnsave
jecxz
out
movs
stos
sahf
sub
addr16
mov
mov
stos
push
adc
(bad)
(bad)
call
leave
js
leave
mov
or
sahf
mov
inc
jne
jmp
(bad)
(bad)
push
xor
es
lock
stos
or
pop
add
cmps
mov
(bad)
(bad)
mov
scas
test
jo
test
sub
out
ins
and
xor
lods
fidivr
aam
(bad)
mov
hlt
pop
pushf
leave
xchg
scas
fidiv
rcr
popa
jge
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
out
sahf
into
iret
push
xor
aaa
clc
imul
dec
mov
xor
jp
cmc
or
cdq
or
jmp
cli
les
inc
mov
jge
cmps
(bad)
dec
into
inc
ins
leave
jbe
inc
ret
movs
pop
mov
movs
lods
push
call
sbb
aam
mov
aaa
and
sti
rcr
(bad)
(bad)
(bad)
dec
pop
xchg
fs
and
or
pop
fnsave
xchg
lods
inc
bound
scas
call
mov
(bad)
jmp
push
lea
mov
cmp
xchg
(bad)
stc
rol
jmp
or
mov
mov
addr16
rcr
jg
ja
hlt
cmc
outs
sub
mov
inc
pop
add
cdq
rcl
cmps
jecxz
popa
ins
xchg
jno
inc
cmp
sub
and
xor
inc
retf
jmp
lock
fcom
push
inc
inc
inc
arpl
(bad)
mov
call
or
or
stos
test
sub
(bad)
or
jle
xor
test
or
(bad)
dec
outs
xchg
inc
inc
mov
dec
lods
add
nop
and
sbb
cli
inc
cmps
popa
push
push
pop
pop
test
push
ret
stc
and
sbb
lock
push
and
shl
(bad)
mov
sar
mov
hlt
sbb
rol
add
ret
push
ja
mov
outs
jnp
sub
das
mov
stos
jmp
ret
lock
push
fucomi
out
ins
cs
fiadd
cmps
mov
adc
(bad)
pop
mov
stos
xchg
ret
jge
leave
stc
test
and
mul
xchg
inc
dec
fidiv
mov
inc
adc
arpl
fadd
adc
loopne
dec
ret
inc
shr
push
fistp
cs
sub
rol
(bad)
mov
rol
call
lods
dec
xor
ret
enter
(bad)
(bad)
fcomip
in
dec
pop
shl
fdiv
xchg
mov
pushf
sub
(bad)
jg
movs
xchg
cmp
(bad)
jl
mov
push
loop
inc
cmc
leave
ja
push
dec
mov
sahf
cmp
jo
fiadd
mov
sbb
cmp
mov
out
js
xchg
add
jo
jae
test
out
xor
ficom
(bad)
mov
repnz
mov
xchg
dec
add
and
pop
repz
inc
int
or
xor
xor
mov
in
mov
into
jno
das
dec
jl
sub
xchg
inc
xor
repnz
std
(bad)
jg
adc
popa
mov
push
(bad)
orps
adc
pop
mov
call
xor
addr16
(bad)
movs
cmp
sub
ins
(bad)
(bad)
(bad)
(bad)
push
or
stos
retf
scas
jnp
xor
and
push
nop
sub
xor
push
nop
mov
(bad)
jmp
cmp
aas
test
in
popf
jb
ins
jae
add
dec
stc
in
(bad)
jmp
pop
fistp
lods
push
sbb
mov
mov
sub
push
jae
or
ja
push
cmp
mov
loopne
loope
nop
pop
pop
add
(bad)
inc
(bad)
(bad)
inc
in
mov
mov
sub
adc
mov
mov
cld
outs
mov
sub
sbb
enter
mov
clc
(bad)
jg
adc
sub
mov
mov
fs
leave
(bad)
mov
adc
stos
out
rcr
fidiv
pop
pop
push
ja
(bad)
(bad)
popf
mov
mov
push
mov
push
mov
inc
rcl
jl
mov
(bad)
(bad)
(bad)
push
jl
mov
mov
inc
stos
adc
movs
int
sbb
add
leave
push
or
fcomip
call
or
test
mov
add
rol
sub
call
pop
push
ja
mov
xchg
fdiv
or
(bad)
adc
clc
jmp
int3
jg
jg
test
addr16
and
cli
out
lock
xor
packsswb
lods
shl
enter
das
pop
fstp
(bad)
push
pop
pop
mov
test
dec
and
mov
dec
cmc
push
or
test
lock
(bad)
(bad)
inc
adc
cmp
daa
mov
dec
cmps
loop
and
xor
mov
(bad)
(bad)
(bad)
inc
push
stos
add
pop
cmp
or
fs
sub
(bad)
cmp
fsub
test
(bad)
(bad)
push
push
inc
add
xor
and
(bad)
repnz
push
inc
jmp
pusha
call
iret
xchg
cmps
imul
(bad)
(bad)
(bad)
jmp
js
push
rol
jmp
addr16
enter
xlat
mov
pop
sbb
outs
leave
pcmpeqd
xor
fidiv
das
push
cmp
aam
out
cmp
pop
cmc
mov
test
iret
(bad)
pop
and
in
(bad)
cli
out
icebp
mov
push
popa
int
sub
sar
scas
lods
pop
cmp
sti
loopne
mov
lds
(bad)
(bad)
(bad)
(bad)
mov
xchg
sbb
pop
(bad)
jp
mov
jae
and
mov
sbb
ja
(bad)
jg
or
rol
test
stos
cli
(bad)
(bad)
(bad)
(bad)
jle
jnp
rol
fnstsw
imul
lds
or
bound
(bad)
adc
mov
loopne
fbld
cld
xchg
jle
ret
mov
push
sbb
(bad)
call
cmc
fiadd
xchg
mov
sub
shr
and
retf
jnp
(bad)
(bad)
jmp
inc
fidiv
add
sub
xor
pusha
pop
or
test
add
(bad)
(bad)
cmp
xor
push
(bad)
pop
or
xchg
dec
scas
cmp
xchg
shl
mov
or
mov
dec
lahf
mov
ret
pop
out
in
pop
push
push
xchg
jb
and
ja
int3
fidivr
(bad)
mov
call
push
push
sbb
push
mov
mov
fcomp
mov
jnp
popf
out
out
dec
js
popf
sub
add
jmp
lock
inc
cmp
ror
jle
(bad)
jg
inc
jg
mov
push
loope
pop
fdiv
pop
and
das
stos
inc
inc
mov
test
xor
pop
push
or
stc
mov
(bad)
(bad)
(bad)
(bad)
fcomp
jmp
adc
xor
cwde
cmps
adc
or
push
jne
into
inc
pop
adc
je
cdq
arpl
mov
call
jns
pop
outs
inc
xchg
push
and
bnd
hlt
add
sbb
call
push
xor
and
(bad)
(bad)
fstp
inc
adc
add
ins
push
lahf
loop
repnz
inc
mov
jno
dec
mov
std
(bad)
(bad)
jmp
adc
push
nop
aaa
xchg
xor
shr
lahf
cmp
test
or
aaa
std
mov
popf
and
imul
mov
cmp
adc
xchg
fbld
jmp
mov
add
add
inc
add
xor
mov
aad
and
xor
mov
pop
pop
cmp
enter
(bad)
(bad)
jmp
pop
call
mov
test
adc
xor
in
hlt
add
xchg
jae
in
jne
(bad)
(bad)
call
xchg
inc
in
cdq
jl
inc
cli
xchg
jp
arpl
test
clc
(bad)
mov
mov
mov
xor
mov
call
inc
mov
jo
xchg
xchg
push
fadd
sbb
mov
sub
jmp
pop
sub
das
fdiv
out
dec
jecxz
dec
in
add
out
(bad)
push
inc
pop
add
enter
loopne
dec
mov
or
pop
add
or
cmp
mov
clc
daa
jns
lods
mov
(bad)
adc
adc
loop
mov
jbe
es
jmp
cmp
fild
and
movs
addr16
loopne
add
push
fst
je
into
add
lods
mov
js
popf
scas
repnz
fisubr
stos
cmp
push
push
(bad)
jmp
or
adc
ss
int3
xchg
dec
xor
xor
rcl
adc
fld
(bad)
call
inc
push
call
pushf
adc
xchg
mov
push
dec
sbb
cmp
xor
xor
and
(bad)
jmp
mov
repnz
(bad)
sar
or
adc
xchg
cmp
xor
(bad)
inc
jns
push
lods
ins
cmp
loop
and
mov
outs
das
test
jo
push
in
pop
lods
jbe
and
inc
(bad)
mov
imul
jns
pusha
and
sbb
push
add
loopne
stos
outs
xor
jg
imul
dec
push
popa
cmp
(bad)
(bad)
(bad)
jmp
cwde
sahf
add
movs
pop
cs
cmc
push
pop
jp
push
test
nop
jnp
xor
cmc
push
shl
retf
adc
mov
sbb
jl
jmp
neg
dec
push
sub
repnz
and
jmp
jnp
repnz
xchg
inc
adc
pop
mov
sub
(bad)
(bad)
jmp
pop
mov
and
es
popf
popf
dec
out
dec
mov
stos
pop
jg
mov
shl
repz
pop
mov
jle
out
pop
(bad)
(bad)
(bad)
call
in
mov
icebp
xchg
cmp
(bad)
loopne
mov
bound
fist
sub
jl
daa
rcl
pop
mov
(bad)
(bad)
(bad)
call
test
clc
sub
pop
and
enter
sbb
or
and
jbe
ins
sti
push
xchg
in
(bad)
(bad)
(bad)
mov
mov
scas
jp
inc
lahf
sbb
adc
aad
fcmovb
in
jmp
push
cld
out
clc
pop
add
repz
shr
push
gs
and
aam
call
inc
stos
pop
(bad)
jmp
and
test
call
mov
push
das
jg
mov
mov
(bad)
(bad)
ds
scas
stos
add
mov
out
xor
imul
fidivr
sti
(bad)
and
adc
adc
add
dec
(bad)
(bad)
(bad)
inc
or
aam
cmp
sbb
ins
mov
out
enter
sub
inc
push
mov
(bad)
and
jmp
sbb
xchg
cdq
mov
push
or
sti
(bad)
jg
push
sbb
sbb
cmp
push
test
push
(bad)
(bad)
(bad)
jg
js
jns
loopne
sbb
bound
and
sti
out
sti
ins
add
push
xchg
(bad)
call
adc
mov
or
sbb
inc
sub
sub
idiv
(bad)
jmp
mov
pop
sub
pop
jecxz
mov
jmp
fs
xchg
loopne
mov
xchg
add
(bad)
(bad)
(bad)
mov
mov
mov
or
rol
jmp
daa
mov
call
loopne
cmp
and
pop
cmp
fs
popf
xor
mov
dec
shr
adc
or
or
es
test
dec
xchg
push
call
ror
cmp
lahf
mov
call
jo
pusha
(bad)
fs
sub
jmp
xor
adc
cmc
fs
call
push
xchg
ds
ficom
push
scas
fwait
inc
xlat
out
and
xchg
rol
(bad)
dec
clc
jo
jne
or
in
adc
xchg
and
test
pop
push
lds
je
daa
dec
lock
cmp
and
daa
jae
sbb
sub
fcomip
(bad)
jmp
sbb
push
xchg
repnz
mov
or
xor
mov
push
mov
push
or
call
sbb
cmp
push
es
(bad)
push
adc
mov
push
sar
ds
sub
xchg
jmp
jno
(bad)
(bad)
dec
push
push
cmc
(bad)
xchg
nop
or
iret
push
xchg
jmp
ss
ja
pop
fwait
leave
push
sub
inc
ins
mov
or
cdq
mov
jmp
cmp
lahf
retf
xchg
pop
(bad)
or
(bad)
(bad)
(bad)
dec
sbb
mov
xchg
sbb
outs
mov
in
dec
xchg
lods
mov
push
gs
mov
jmp
call
repnz
sub
dec
xchg
cli
in
fidivr
es
dec
mov
lea
fcmovu
enter
iret
xchg
pop
push
ins
fidiv
pop
lock
jle
xchg
jl
push
adc
mov
xchg
mov
inc
test
cmp
jne
pop
cld
push
(bad)
(bad)
jmp
xlat
jg
ja
pusha
repnz
pop
pop
fnstcw
xor
mov
sub
xor
jge
push
xchg
(bad)
(bad)
(bad)
jmp
repz
sar
jnp
jg
hlt
jmp
jmp
loopne
(bad)
call
sar
jne
xchg
mov
ins
xor
cmp
inc
jb
add
adc
xor
scas
xor
retf
xchg
adc
sbb
xor
enter
(bad)
inc
lods
popa
pop
pusha
cdq
adc
pop
push
shr
pop
xchg
test
jo
dec
fwait
pop
xchg
jg
mov
inc
fimul
jo
pusha
mov
(bad)
(bad)
(bad)
mov
pushf
sub
shr
addr16
outs
ror
pop
xor
in
js
jmp
clc
jmp
xor
and
or
(bad)
mov
scas
(bad)
(bad)
(bad)
call
cmc
inc
pop
add
cmps
movs
sbb
push
dec
int
sar
and
dec
and
movs
mov
mov
stos
stos
dec
cmc
cmc
and
movs
cli
cld
bound
cs
retf
shl
add
(bad)
(bad)
inc
sbb
in
push
dec
dec
push
or
push
cmp
ja
arpl
(bad)
(bad)
mov
(bad)
ror
ror
rol
addr16
(bad)
(bad)
dec
test
test
js
push
cmp
bound
lods
call
xchg
or
ret
test
gs
jmp
shl
sar
push
repz
cmp
or
adc
popf
push
neg
or
(bad)
(bad)
call
adc
cs
xor
mov
mov
pop
loope
ds
adc
jno
lock
inc
repnz
(bad)
(bad)
call
xchg
push
inc
sbb
sbb
cmp
or
cmp
loope
mov
pusha
mov
(bad)
(bad)
jmp
pop
js
dec
loope
adc
jp
cld
cdq
lahf
fwait
cli
jg
jno
mov
rcl
out
js
pop
cmc
jp
add
jb
fistp
inc
aad
pop
or
inc
and
mov
push
cs
jb
xchg
inc
inc
(bad)
mov
out
push
lods
rcl
(bad)
aad
aam
xchg
test
push
or
dec
xor
(bad)
(bad)
(bad)
dec
add
add
ret
cld
inc
sbb
push
icebp
add
mov
adc
dec
jmp
cli
jmp
(bad)
iret
ja
ret
aas
shr
fsubr
popa
lahf
push
je
xor
pop
pushf
cs
(bad)
(bad)
call
adc
and
pop
inc
nop
movs
inc
xor
out
add
jg
dec
cmps
fld
and
inc
mov
or
das
ficom
mov
inc
adc
jp
sub
mov
push
inc
aad
mov
inc
add
sub
adc
jp
(bad)
mov
int3
xchg
jb
push
dec
nop
test
mov
dec
or
std
xchg
push
ror
or
mov
loope
pop
movs
bound
test
cmp
nop
cmp
xor
and
or
push
adc
shr
fidiv
push
(bad)
(bad)
jg
test
sbb
sub
leave
daa
mov
xchg
(bad)
mov
rcl
lock
and
mov
(bad)
(bad)
jg
jp
fisttp
xor
add
cmp
out
arpl
cmps
xor
push
jmp
push
mov
es
jae
arpl
pop
repz
push
inc
xor
and
inc
push
lods
mov
mov
arpl
inc
adc
mov
out
mov
aad
(bad)
(bad)
(bad)
(bad)
clc
stc
mov
cmp
inc
ds
stc
push
mov
xchg
in
xor
xchg
adc
mov
cmc
daa
mov
fdiv
pop
scas
xchg
sub
ffree
into
int3
mov
or
(bad)
(bad)
inc
icebp
cld
cld
les
loopne
call
xchg
in
cmp
sub
js
push
xchg
(bad)
(bad)
call
fcom
pop
push
and
inc
(bad)
enter
out
inc
mov
xchg
ror
jecxz
(bad)
call
stos
int
les
push
out
push
and
nop
clc
sar
lock
imul
mov
sub
push
lods
rcr
mov
mov
cmp
mov
out
out
xchg
(bad)
(bad)
inc
adc
cmps
shr
inc
mov
inc
add
mov
repnz
call
mov
or
clc
out
out
fidiv
inc
sbb
lahf
aas
sti
lds
inc
loop
retf
arpl
mov
adc
(bad)
(bad)
(bad)
jg
ror
add
sbb
aas
jge
(bad)
inc
adc
xchg
or
sub
push
inc
test
cmp
add
mov
shl
test
std
xlat
push
cmps
test
cld
pop
out
sbb
js
sahf
mov
(bad)
(bad)
(bad)
fsub
and
scas
cmp
lahf
jecxz
sahf
xor
jae
(bad)
js
lock
(bad)
out
call
std
loopne
mov
into
pop
xlat
stos
scas
test
leave
or
push
popf
hlt
mov
out
jnp
push
fld
cmp
jecxz
push
(bad)
mov
in
imul
call
ret
fadd
(bad)
(bad)
push
sbb
loope
cmp
or
inc
push
push
cmp
(bad)
jmp
and
aaa
bound
(bad)
(bad)
(bad)
push
and
jb
sub
fiadd
xchg
jmp
es
sti
aam
jno
cmps
(bad)
dec
push
pop
pop
mov
cmps
cmp
popf
fdiv
clc
call
mov
iret
rol
cmps
push
ins
es
outs
outs
fdivr
(bad)
(bad)
(bad)
cmp
retf
fisub
xchg
or
retf
mov
repnz
jl
ficom
or
jmp
(bad)
pop
jg
sub
sub
push
sti
addr16
cmc
shl
jmp
xchg
lock
imul
add
jecxz
dec
scas
inc
(bad)
fbstp
mov
jg
add
dec
and
fstp
(bad)
jae
jg
inc
rcl
fistp
mov
out
adc
aad
mov
jmp
xor
xor
cwde
and
add
inc
lds
jmp
push
add
rol
mov
cmp
stc
xchg
scas
(bad)
(bad)
(bad)
call
jae
in
scas
xlat
out
dec
fs
cmc
mov
xchg
jecxz
mov
neg
int3
xor
lods
dec
cmp
xlat
sti
in
xchg
fistp
and
loop
jae
mov
push
das
clc
push
in
sub
(bad)
xchg
(bad)
in
out
mov
mov
(bad)
(bad)
mov
mov
outs
scas
and
sahf
ins
dec
outs
mov
(bad)
call
push
sub
pop
fcomp
std
int3
cli
xchg
mov
je
retf
mov
jl
call
push
xchg
jp
pop
aad
mov
and
repnz
(bad)
(bad)
mov
(bad)
(bad)
in
mov
cli
scas
pop
arpl
cld
stc
ret
mov
fild
(bad)
fnstsw
xchg
adc
scas
sbb
test
addr16
gs
jg
ret
fnstsw
add
ins
sbb
or
ror
lods
lock
(bad)
call
xchg
jmp
mov
ja
push
jl
and
add
dec
push
jmp
sbb
cmps
sub
xor
data16
(bad)
mov
add
push
call
std
add
or
push
movs
leave
into
(bad)
(bad)
(bad)
(bad)
jmp
call
(bad)
or
push
(bad)
icebp
cmp
lock
(bad)
(bad)
(bad)
push
dec
mov
push
je
and
stc
push
test
push
add
call
dec
sbb
ror
test
sbb
sub
sbb
jno
sbb
adc
loope
data16
mov
push
push
clc
rcr
rcr
mov
jmp
cmp
pop
int3
pop
mov
daa
fwait
shr
and
(bad)
(bad)
(bad)
(bad)
mov
jo
(bad)
push
sbb
pop
lods
pusha
ins
dec
sbb
or
sar
sbb
or
xor
(bad)
(bad)
js
mov
(bad)
cmps
cmps
stos
jne
push
shl
out
sub
es
(bad)
mov
or
int
dec
mov
mov
jg
lods
jge
xlat
push
sti
add
sub
push
xchg
add
or
mov
push
fadd
or
(bad)
(bad)
(bad)
mov
and
popa
neg
loopne
mov
cmp
jge
jg
inc
stos
inc
ja
dec
hlt
mov
inc
push
jb
fwait
push
xchg
jne
xor
dec
cld
les
test
mov
aad
pusha
sub
mov
inc
mov
ficom
jb
lods
data16
push
xchg
jno
out
mov
dec
dec
add
jecxz
cld
movq
call
inc
mov
adc
adc
dec
out
cmp
retf
xor
or
pushf
(bad)
(bad)
(bad)
call
xor
cmp
xlat
pushf
jno
mov
add
xchg
sub
enter
shl
icebp
(bad)
(bad)
jge
inc
repnz
rcl
sbb
push
xchg
icebp
dec
int3
or
sub
push
(bad)
out
aaa
addr16
adc
dec
pop
(bad)
mov
outs
es
fild
mov
mov
push
aam
cmp
inc
push
xchg
xor
push
pop
push
inc
sub
jo
mov
or
outs
inc
repz
mov
sub
(bad)
(bad)
fild
jl
cmp
push
mov
adc
push
mov
pop
adc
xor
in
adc
push
xchg
sub
sub
xor
aaa
nop
dec
lds
not
dec
scas
jb
movsx
ss
clc
(bad)
(bad)
(bad)
jmp
push
pop
sbb
jo
imul
cdq
call
call
or
(bad)
(bad)
call
and
fsubr
push
dec
and
dec
inc
cwde
push
stos
pusha
inc
adc
ret
jl
jp
sbb
mov
neg
lock
push
into
or
(bad)
(bad)
call
xlat
neg
mov
(bad)
sub
dec
rcl
inc
js
push
mov
sar
mov
fild
push
add
mov
sub
aaa
(bad)
fbld
adc
(bad)
ja
cmps
cmp
fdivr
out
add
arpl
or
lds
ins
and
adc
loope
fdivr
test
retf
push
(bad)
(bad)
(bad)
jmp
fldcw
ret
adc
scas
xor
xor
cmp
add
push
push
or
(bad)
(bad)
(bad)
inc
jbe
mov
cmp
pushf
jae
add
scas
in
fidiv
and
mov
(bad)
(bad)
dec
lds
dec
inc
and
mov
dec
in
jns
fisttp
mov
(bad)
call
fld
pop
mov
mov
ret
or
dec
outs
addr16
add
ror
movs
push
add
jae
and
pop
mov
lock
and
ins
fidiv
fnstenv
sbb
cmc
cli
or
in
mov
inc
fbstp
call
sub
ins
mov
in
push
outs
xor
hlt
jmp
fdiv
jae
jne
sbb
sar
das
retf
pop
rcl
cwde
or
inc
pusha
adc
inc
call
call
dec
mov
retf
adc
mov
dec
mov
pop
jne
dec
arpl
pop
cld
call
mov
test
push
jg
inc
hlt
call
call
mov
cs
pusha
push
jmp
or
std
pop
ja
ins
mov
out
jl
or
arpl
mov
arpl
(bad)
jg
bound
(bad)
mov
pop
js
sub
cld
stc
das
cvtdq2ps
leave
mov
ins
(bad)
(bad)
(bad)
call
pusha
sbb
pop
mov
cdq
sub
adc
ret
mov
xor
push
cli
xchg
gs
xchg
lods
out
inc
clc
(bad)
aas
stos
das
push
xor
pop
fxch
(bad)
cli
lods
(bad)
(bad)
(bad)
push
xor
xchg
dec
jmp
sbb
loop
dec
ja
(bad)
(bad)
jmp
inc
sahf
xlat
xchg
cmp
pop
and
fcomip
mov
xor
pop
cmp
add
sbb
inc
(bad)
(bad)
dec
push
cmp
fcomp
adc
data16
xor
(bad)
push
dec
test
loop
popf
mov
lahf
icebp
sub
(bad)
(bad)
(bad)
fnstsw
jp
cmps
ret
xor
mov
fwait
dec
inc
sbb
cmp
jg
mov
cs
out
sbb
push
mov
sub
ins
aad
push
cli
repnz
(bad)
(bad)
(bad)
out
in
jmp
jns
call
sbb
or
aas
iret
or
ret
mov
call
pop
fld
data16
imul
jl
pop
mov
jno
lods
out
fidivr
xor
and
cmp
enter
arpl
shl
xor
mov
sbb
mov
xchg
retf
sahf
(bad)
(bad)
(bad)
(bad)
mov
mov
pop
stos
jb
xchg
mov
jle
(bad)
jg
out
out
sti
aaa
pushf
mov
test
cmps
aaa
aas
ss
aad
call
inc
out
aam
mov
cmp
pushf
hlt
scas
inc
jmp
xchg
(bad)
(bad)
(bad)
(bad)
mov
pusha
xchg
and
add
dec
jb
mov
bound
fild
(bad)
(bad)
(bad)
jmp
bound
or
dec
pushf
cwde
and
jnp
adc
cmps
dec
cs
rol
inc
jge
sbb
pop
and
daa
sbb
xchg
les
xchg
inc
inc
mov
xor
sub
(bad)
call
mov
adc
inc
and
pop
pop
es
loopne
fimul
fld
(bad)
call
adc
pop
xor
push
or
lods
outs
call
jg
js
std
pop
(bad)
or
stc
les
push
inc
xor
mov
jo
cs
das
cli
inc
push
cmc
xchg
popa
loope
clc
aad
retf
add
shl
(bad)
(bad)
push
adc
loope
out
pop
add
mov
mov
(bad)
dec
or
and
(bad)
(bad)
(bad)
call
sbb
call
jo
hlt
fsub
or
add
inc
rcl
mov
in
aas
jnp
add
inc
jo
add
and
pop
cmp
(bad)
inc
adc
sbb
scas
add
je
retf
add
lods
int3
mov
call
ss
mov
add
jg
jmp
xchg
inc
jne
mov
jecxz
mov
in
xchg
add
pop
mov
add
ret
icebp
jo
xchg
cmpxchg
lods
pop
cmps
inc
mov
(bad)
call
add
adc
and
sbb
arpl
loope
add
mov
pop
jbe
or
(bad)
jg
add
nop
add
sbb
into
in
ins
dec
sub
out
fcom
aam
inc
cld
or
mov
loope
call
fiadd
cmp
push
push
xchg
jno
fwait
pop
or
mov
fs
(bad)
mov
pop
xor
dec
and
push
sbb
jp
ret
sub
mov
(bad)
inc
ss
stos
mov
xchg
inc
xchg
sub
dec
(bad)
call
cli
repz
push
sahf
jle
shl
sti
test
cmp
add
jmp
xchg
dec
xor
out
scas
xchg
addr16
pop
in
mov
loop
push
xor
sub
movs
repnz
and
push
pop
inc
ss
data16
dec
aaa
fwait
(bad)
(bad)
jmp
sbb
movs
imul
sub
(bad)
mov
test
stos
(bad)
(bad)
(bad)
call
in
jo
retf
clc
mov
imul
mov
and
(bad)
(bad)
call
inc
mov
lods
int
dec
int
xchg
cmp
out
cmp
(bad)
mov
inc
xor
leave
pop
push
(bad)
dec
test
mov
push
(bad)
scas
icebp
xchg
pop
mov
inc
xchg
cmc
mov
add
aam
icebp
add
(bad)
mov
mul
add
daa
inc
hlt
inc
xor
loope
call
into
and
push
sub
mov
(bad)
jg
sbb
mov
cmp
sbb
dec
mov
stc
push
push
xor
(bad)
xchg
pop
ss
cld
(bad)
jg
or
dec
les
add
sbb
nop
(bad)
rcl
je
cmps
lds
and
(bad)
fs
push
cld
(bad)
out
push
xchg
outs
inc
ds
or
jp
scas
push
cmp
dec
sti
scas
xlat
in
(bad)
call
xchg
test
jnp
ins
xchg
adc
and
add
test
or
fcomip
jg
fnstsw
inc
stos
fmul
pop
idiv
mov
(bad)
cld
cli
das
clc
dec
test
mov
mov
pop
jnp
sbb
outs
ret
lock
cmp
push
pop
mov
mov
dec
add
(bad)
dec
sub
aaa
mov
xchg
jne
jle
aas
pop
fcom
cmp
xor
hlt
mov
rcl
dec
sub
sub
(bad)
ss
fidivr
(bad)
(bad)
jmp
ins
shl
cli
xchg
movs
loop
jmp
push
into
leave
mov
aaa
push
adc
(bad)
dec
cmp
mov
add
lods
call
jne
or
jns
out
push
(bad)
(bad)
(bad)
inc
lahf
fdivr
pop
xchg
cli
dec
jns
je
sbb
push
fnstcw
push
fadd
cmps
push
(bad)
dec
les
add
xor
push
movs
jle
loopne
push
xor
in
addr16
fs
jno
ins
sbb
js
(bad)
(bad)
(bad)
push
popf
imul
call
fwait
mov
dec
dec
stos
gs
ficomp
ja
push
shl
icebp
(bad)
in
mov
or
pop
add
addr16
cs
cmp
add
iret
clc
pop
cld
(bad)
jle
mov
imul
ins
jnp
jmp
mov
test
outs
fmul
pop
add
xchg
push
shr
mov
and
push
xor
loop
pop
test
(bad)
call
pop
and
iret
(bad)
(bad)
push
sub
outs
dec
cmps
pop
jne
pusha
pop
mov
dec
fmul
dec
fcomip
(bad)
jmp
les
dec
ja
push
mov
stc
jmp
mov
retf
(bad)
call
and
mov
in
aad
push
rcr
mov
pop
call
jmp
add
js
mov
xchg
dec
loopne
int3
cmp
(bad)
and
pop
fst
(bad)
(bad)
(bad)
cmp
push
sbb
imul
inc
test
or
sbb
jmp
inc
push
cld
push
jle
(bad)
(bad)
(bad)
jmp
out
mov
jb
push
sub
push
(bad)
pop
mov
dec
jg
out
out
xchg
jg
and
in
xchg
aad
sub
mov
gs
(bad)
(bad)
(bad)
(bad)
dec
int
mov
sub
jl
icebp
mov
fisub
(bad)
cmps
jmp
sbb
(bad)
(bad)
jmp
pusha
xor
sbb
aaa
mov
xchg
repnz
fwait
xchg
(bad)
in
dec
or
(bad)
adc
adc
pop
jp
je
(bad)
(bad)
(bad)
call
mov
adc
sti
mov
push
mov
lahf
out
clc
(bad)
(bad)
out
int
jbe
cli
jmp
or
ja
dec
div
mov
fild
iret
mov
push
adc
iret
mov
sub
(bad)
cmp
jae
mov
dec
adc
jecxz
mov
push
aad
pop
xchg
xor
cmc
mov
adc
imul
pop
xlat
test
(bad)
(bad)
(bad)
inc
es
call
lock
pop
and
mov
ret
cmp
or
cld
pop
jecxz
cwde
and
inc
fmul
and
mov
das
mov
and
push
inc
movs
ins
cmp
or
inc
inc
jmp
and
mov
loop
or
ins
imul
jmp
and
xor
ds
loop
jo
mov
mov
xchg
push
push
dec
sbb
or
fild
xchg
add
popa
bound
lea
jg
add
pusha
mov
xor
test
(bad)
fsub
dec
lock
sbb
dec
or
cmp
xchg
inc
push
push
cmp
xor
and
(bad)
call
and
sub
adc
dec
sub
(bad)
(bad)
call
or
pop
sbb
inc
mul
(bad)
xor
movs
ret
loopne
(bad)
(bad)
(bad)
jmp
inc
sbb
ss
in
mov
mul
int3
(bad)
xchg
(bad)
pop
mov
mov
push
mov
ss
push
jmp
dec
(bad)
(bad)
call
outs
das
fistp
lods
cmp
or
inc
push
xor
xor
(bad)
(bad)
(bad)
(bad)
push
dec
add
lods
pop
adc
push
sub
aas
clc
push
jmp
lods
imul
cs
push
xchg
popa
arpl
ds
in
arpl
movs
(bad)
(bad)
out
push
mov
ja
(bad)
sar
(bad)
mov
xchg
inc
sub
das
sar
mov
sbb
fsubr
xchg
(bad)
(bad)
mov
in
jae
add
(bad)
(bad)
(bad)
jmp
xchg
push
mov
push
sub
add
xor
lds
cmp
(bad)
(bad)
(bad)
out
enter
aam
adc
fsub
test
imul
xchg
fs
push
jo
(bad)
(bad)
jmp
jecxz
sub
fwait
inc
sahf
imul
add
outs
(bad)
xor
add
inc
movs
inc
xor
sbb
int
(bad)
jmp
cmp
ret
mov
clc
pop
gs
test
mov
and
cmps
(bad)
(bad)
mov
inc
in
dec
pop
and
mov
push
fcom
inc
clc
xchg
imul
xor
pop
push
xor
call
jmp
(bad)
mov
clc
ins
call
test
pop
scas
mov
call
lahf
mov
fs
in
pop
inc
ja
inc
jb
xchg
and
mov
mov
add
aas
jl
pop
add
cs
mov
out
pop
lock
pop
scas
mov
pop
dec
push
cli
and
mov
push
daa
(bad)
(bad)
(bad)
call
fadd
or
int3
inc
sub
and
mov
xchg
mov
fcom
(bad)
(bad)
mov
outs
shr
pop
ret
mov
(bad)
int
push
dec
push
mov
and
clc
stos
int3
sahf
sti
shl
(bad)
(bad)
(bad)
call
inc
or
loopne
and
mov
push
dec
mov
imul
loop
clc
dec
and
adc
adc
cmp
xor
sahf
push
(bad)
clc
and
jbe
mov
mov
(bad)
call
push
mov
push
push
std
aam
push
fdiv
mov
jmp
mov
(bad)
call
ficomp
mov
in
lods
mov
mov
je
(bad)
(bad)
(bad)
jmp
popa
js
mov
movs
sbb
in
int3
shl
adc
cmp
test
sub
scas
dec
mov
xlat
aam
and
adc
push
(bad)
push
inc
mov
mov
inc
fs
adc
fyl2xp1
add
ret
dec
icebp
dec
stc
lock
jecxz
add
std
add
and
dec
scas
lods
sub
add
ins
jb
(bad)
arpl
pop
fst
mov
jge
xchg
popf
cwde
sbb
inc
leave
mov
(bad)
push
mov
aad
mov
outs
fdivr
fsub
push
(bad)
(bad)
(bad)
out
mov
pop
sahf
push
retf
inc
je
cmps
jecxz
sahf
and
dec
je
fwait
push
scas
call
mov
mov
xchg
mov
push
mov
push
jne
mov
loopne
aaa
outs
fdivrp
(bad)
call
ret
pop
outs
(bad)
fnstcw
cmc
stos
pop
jmp
out
xor
js
shl
(bad)
(bad)
inc
dec
test
fs
fdiv
jl
jae
sbb
mov
push
(bad)
(bad)
(bad)
mov
inc
xor
jle
ret
int3
push
inc
sub
sub
mov
or
dec
cdq
sbb
(bad)
jmp
test
outs
jg
popa
iret
jno
std
fst
sbb
mov
(bad)
jg
(bad)
cmp
xor
les
clc
lods
or
push
das
std
fbld
(bad)
(bad)
(bad)
dec
in
cmp
mov
or
jo
xor
es
outs
fnstsw
sar
(bad)
aas
cmc
xor
jb
jae
cmp
jae
mov
scas
cmp
std
mov
aas
cmp
aad
jg
ret
fwait
mov
loope
sub
xchg
fldenv
(bad)
(bad)
(bad)
fucomp
dec
ret
and
and
ret
add
mov
int
or
data16
in
sub
(bad)
(bad)
inc
dec
xor
int
dec
popf
xchg
imul
jle
pop
aas
stos
aas
push
xlat
push
int
xor
in
add
sar
jne
loopne
ror
mov
iret
or
cmp
les
loop
aam
imul
jmp
mov
pop
fdivr
leave
push
mov
mov
fnstsw
aaa
cmp
mov
mov
mov
push
mov
data16
jae
pop
es
imul
leave
retf
repz
cld
(bad)
dec
pop
stos
stos
add
or
movs
stos
(bad)
or
fdivr
inc
pop
sbb
push
add
dec
retf
movs
mov
inc
(bad)
mov
jo
inc
in
cs
cmp
jg
jg
dec
pop
sbb
sub
fwait
dec
adc
push
stos
scas
cmp
add
sbb
mov
sub
jl
movs
pop
shl
scas
sbb
(bad)
jmp
rcl
sahf
push
loopne
aaa
dec
and
or
inc
and
cmp
pop
rcr
push
test
sar
sub
mov
scas
dec
dec
push
sub
push
cmp
mov
xchg
stc
sahf
pop
test
repz
fcomip
cld
sbb
inc
fcom
push
movs
mov
ins
lahf
jb
stos
xor
mov
mov
dec
mov
jg
ret
(bad)
call
hlt
loop
mov
and
sub
ror
jmp
jae
fadd
jg
xlat
adc
or
(bad)
(bad)
fild
push
pusha
sbb
repnz
les
fnsave
jb
pop
dec
xor
xor
js
inc
(bad)
and
daa
les
cli
ret
jmp
in
jg
dec
inc
pop
ins
fwait
rcr
dec
enter
jb
push
pop
cmc
(bad)
(bad)
clc
or
mov
inc
xor
fimul
(bad)
loopne
nop
push
sahf
xrelease
fimul
(bad)
call
imul
rol
addr16
add
mov
scas
cmp
lahf
sbb
dec
adc
adc
or
test
adc
and
je
add
add
cmp
pcmpgtw
xor
ss
hlt
or
jnp
(bad)
cmp
sbb
add
fcom
scas
(bad)
stos
popa
adc
test
arpl
(bad)
and
es
adc
add
(bad)
(bad)
push
inc
adc
call
fisttp
in
scas
vmwrite
jns
add
or
push
(bad)
(bad)
(bad)
(bad)
sti
add
pop
xor
fucom
in
jnp
cwde
movs
div
cmp
mov
iret
cmp
cmp
add
xchg
ret
add
pop
fdivrp
(bad)
jmp
stos
mov
mov
xor
inc
add
test
ins
fidivr
(bad)
inc
pop
fimul
pop
ds
loope
mov
gs
mov
inc
rol
sbb
iret
mov
mov
repz
(bad)
(bad)
jmp
pop
jnp
std
(bad)
aam
mov
ds
jmp
mov
mov
jmp
jmp
jmp
mov
lock
fs
cmps
lahf
imul
outs
(bad)
(bad)
call
retf
gs
(bad)
setg
lock
aaa
nop
ins
(bad)
js
lahf
ds
mov
push
sbb
clc
pop
or
cmc
dec
jp
addr16
fnstcw
jo
mov
sar
je
mov
fild
fist
cld
std
repz
jg
shl
cmp
mov
sbb
(bad)
call
mov
call
out
fmul
repnz
ror
xchg
xchg
shl
add
push
pop
lock
inc
dec
stos
loop
push
(bad)
mov
(bad)
xor
adc
push
inc
xchg
and
xor
dec
shl
mov
rol
test
sbb
lods
push
(bad)
mov
les
inc
and
dec
mov
(bad)
call
(bad)
pop
call
mov
mov
push
xchg
push
cdq
xchg
dec
cmp
add
scas
cli
(bad)
dec
or
or
iret
arpl
mov
outs
add
(bad)
(bad)
(bad)
(bad)
adc
mov
xchg
pop
test
repz
(bad)
(bad)
(bad)
jmp
loopne
xor
mov
out
dec
in
xchg
pop
inc
dec
stos
stc
enter
dec
xor
(bad)
call
out
fnsave
cmp
dec
dec
add
js
cdq
adc
jg
data16
push
call
pop
and
and
arpl
adc
test
add
dec
in
in
sub
pop
pop
push
sbb
cwde
into
pop
mov
aas
cmp
(bad)
(bad)
jmp
pusha
xchg
dec
sub
jmp
cld
sub
pusha
cmp
sub
fild
pop
repz
ja
sahf
popf
pushf
sub
or
push
rcl
adc
and
mov
nop
nop
push
inc
adc
(bad)
jmp
mov
adc
sbb
inc
test
adc
mov
pop
sub
and
push
cld
addr16
aad
std
lods
(bad)
sbb
cmp
clc
xchg
jmp
inc
mov
dec
and
mov
dec
cld
lds
mov
adc
cmp
or
pop
mov
(bad)
(bad)
push
sbb
push
test
adc
mov
cld
push
mov
jo
test
or
movq
(bad)
(bad)
jmp
sbb
repz
ja
out
xchg
adc
in
addr16
test
xor
inc
hlt
call
xor
movs
int
mov
cmps
rcl
pushf
stos
adc
pop
pop
jo
xchg
mov
aam
xchg
adc
in
dec
sbb
jecxz
inc
cmc
(bad)
call
pop
and
xchg
movs
dec
test
sub
jg
das
add
popa
test
das
retf
add
jg
mov
out
push
mov
add
xchg
sbb
mov
jp
push
jmp
jae
xor
jnp
cs
not
rcl
jmp
aad
ds
push
imul
(bad)
(bad)
(bad)
sti
jmp
fsubr
out
sbb
push
mov
dec
inc
xchg
inc
or
(bad)
inc
and
scas
leave
mov
pop
pop
(bad)
fwait
lea
fwait
xor
jns
dec
retf
nop
(bad)
(bad)
(bad)
inc
in
push
push
inc
pop
es
maxps
(bad)
mov
push
test
lods
push
dec
xchg
xchg
pop
adc
(bad)
jmp
fld
mov
inc
(bad)
(bad)
(bad)
mov
in
sar
mov
jge
arpl
mov
(bad)
add
(bad)
(bad)
mov
clc
sti
xchg
je
adc
xor
sbb
call
inc
ins
(bad)
(bad)
(bad)
push
loopne
jle
jnp
(bad)
aas
mov
pop
xchg
test
fstp
dec
jmp
fidivr
adc
mov
leave
aad
mov
pop
mov
rcr
cmps
fwait
rcr
adc
mov
(bad)
(bad)
jg
push
shl
fwait
pop
and
scas
fist
shr
dec
(bad)
jmp
xor
inc
or
movlhps
xor
sub
ss
call
pop
ficomp
std
xchg
sbb
aaa
dec
inc
sub
fidiv
div
cmp
dec
push
sar
push
xor
hlt
mov
xlat
out
movs
sub
cld
cmp
jns
repz
mov
mov
and
mov
cmps
sub
cli
(bad)
inc
bound
adc
jmp
test
sti
jns
push
adc
push
cdq
and
or
cwde
xchg
retf
mov
push
and
inc
fs
xor
xchg
bound
cmp
push
push
cmc
cmp
dec
in
sar
(bad)
(bad)
dec
mov
xor
push
clc
lea
cmps
sahf
fidiv
cli
loop
icebp
les
stos
jnp
fistp
das
sar
xchg
mov
stos
sar
in
xchg
xor
pop
sbb
cmps
pop
cli
int3
jecxz
xlat
imul
fdiv
jmp
lds
(bad)
retf
sbb
jno
xor
(bad)
jmp
jmpw
cmp
fst
repz
pop
push
in
aad
data16
mov
inc
add
test
jbe
dec
sub
sub
(bad)
(bad)
jmp
add
loop
add
es
out
scas
clc
shr
scas
adc
mov
pop
push
lods
(bad)
(bad)
(bad)
call
or
xchg
or
jmp
inc
cmc
jl
sub
xor
or
cmp
sahf
imul
in
push
daa
xchg
xlat
mov
movs
enter
sbb
pop
(bad)
(bad)
(bad)
push
add
or
sub
mov
inc
shl
mov
mov
scas
lock
sub
xchg
sbb
sbb
xchg
and
inc
(bad)
dec
nop
sbb
aaa
xor
or
inc
pop
lea
adc
leave
or
outs
das
and
cmp
outs
dec
loopne
push
or
and
dec
pop
icebp
or
fwait
call
add
jb
jmp
movs
outs
and
sbb
jecxz
add
in
or
jle
push
(bad)
(bad)
(bad)
jmp
out
mov
adc
icebp
add
xchg
pop
push
jmp
cli
dec
out
movs
icebp
dec
cmp
xchg
rol
call
jno
push
mov
ror
enter
and
add
push
sub
pop
fild
jmp
rcr
frstor
xchg
iret
(bad)
mov
cmp
sub
retf
mov
test
mov
xchg
sysexit
add
pusha
add
cmc
in
mov
(bad)
idiv
out
sbb
stos
aad
jp
jne
mov
(bad)
(bad)
inc
mov
jno
scas
rcr
lock
iret
sub
popa
(bad)
(bad)
jmp
cld
icebp
out
inc
inc
jbe
push
mov
lods
(bad)
xlat
mov
ret
dec
and
(bad)
pop
xor
mov
sub
idiv
aaa
sar
jns
in
(bad)
idiv
ret
pop
ss
cmp
hlt
shl
jb
lds
repnz
and
aam
jl
retf
(bad)
call
cmps
or
mov
fistp
mov
fbstp
xlat
inc
int3
and
clc
jmp
scas
pop
mov
(bad)
inc
inc
inc
adc
adc
cld
dec
cmp
shl
cdq
xor
dec
jg
xchg
sahf
inc
test
shl
cmc
into
ja
(bad)
(bad)
call
cmp
xchg
ins
dec
ds
mov
jg
shl
icebp
dec
(bad)
jg
call
dec
rol
div
out
add
jl
lds
(bad)
push
and
adc
mov
into
repnz
add
(bad)
(bad)
jg
adc
sbb
inc
jno
pop
das
and
sub
mov
jo
shl
(bad)
(bad)
inc
aaa
pop
mov
bound
scas
mov
imul
lods
jmp
mov
(bad)
fisttp
sub
jnp
jns
mov
push
and
dec
outs
push
(bad)
(bad)
(bad)
dec
hlt
fcom
sbb
fs
daa
adc
js
add
jns
xchg
test
(bad)
(bad)
jmp
icebp
paddusb
popf
aas
mov
fst
adc
aaa
jmp
ins
enter
sub
adc
pushaw
daa
jo
sbb
fdivr
add
clc
mov
jmp
ins
cld
jl
bound
inc
je
xor
pop
shl
jbe
mov
call
pop
dec
xchg
lahf
shl
add
shl
xchg
cmp
sar
add
and
fild
inc
push
dec
push
adc
cmp
or
adc
push
div
sbb
push
mov
or
mov
(bad)
(bad)
cmp
int
mov
push
fwait
ss
sub
in
dec
dec
mov
call
(bad)
(bad)
jmp
xchg
fstp
outs
and
jne
cmp
inc
repz
popa
push
jmp
ja
aas
xor
or
push
std
scas
push
std
fidivr
sti
daa
mov
pop
dec
ja
mov
mov
pop
(bad)
(bad)
(bad)
(bad)
dec
cmp
shl
xchg
cmp
fisub
mov
xor
and
(bad)
(bad)
(bad)
push
int3
lods
xchg
and
leave
retf
lock
cmc
push
les
push
cmp
jmp
cmc
push
stos
jo
out
mov
xchg
repnz
idiv
aas
(bad)
(bad)
jg
jb
push
icebp
xchg
sbb
inc
sub
xor
push
pop
adc
add
adc
mov
outs
stc
fidivr
scas
jg
mov
rcl
aad
(bad)
lock
adc
add
(bad)
mov
xor
pop
push
inc
push
in
sar
pop
cli
cmps
imul
sub
shr
mov
or
adc
out
(bad)
jmp
bound
mov
addr16
cmp
sbb
fistp
(bad)
call
cld
imul
push
std
sar
repnz
xchg
ss
iret
(bad)
(bad)
(bad)
(bad)
mov
jnp
push
adc
sub
mov
call
mov
xchg
aas
cmp
cmp
jmp
cmc
jp
sahf
pop
shl
(bad)
xchg
mov
pop
inc
lahf
gs
jg
mov
loopne
pop
stc
into
mov
(bad)
inc
sub
in
cmp
sar
std
mov
add
xor
icebp
jo
je
cmp
mov
fs
add
jecxz
push
and
dec
dec
sub
repz
(bad)
(bad)
(bad)
push
sbb
mov
sahf
sbb
jae
fist
aad
cli
in
fcmovne
inc
addr16
cmp
(bad)
mov
push
push
dec
test
xor
data16
lds
push
sbb
bound
ret
add
or
sahf
addr16
inc
xchg
cmp
sub
mov
mov
sbb
cmp
stos
xchg
xchg
(bad)
jmp
nop
fnsave
sbb
sub
shl
shl
add
and
inc
(bad)
hlt
scas
pop
xor
cli
call
stc
mov
(bad)
(bad)
(bad)
mov
mov
pop
daa
mov
sbb
sbb
sbb
inc
mov
bound
outs
(bad)
(bad)
(bad)
(bad)
cli
ficom
movsx
xor
dec
xchg
jmp
adc
jp
pop
data16
mov
call
mov
inc
jmp
and
outs
mov
sub
movs
cmps
xlat
jmp
and
(bad)
(bad)
(bad)
(bad)
mov
cmps
retf
mov
inc
repnz
test
shl
ret
cmp
pop
shl
jle
(bad)
(bad)
(bad)
jmp
mov
fild
push
fs
js
pop
or
mov
(bad)
(bad)
push
push
or
mov
repnz
out
push
fwait
(bad)
mov
int3
dec
dec
push
jne
repnz
mov
(bad)
(bad)
mov
mov
jne
mov
push
xchg
mov
xchg
in
add
scas
pop
mov
fsub
adc
pop
scas
imul
popf
jp
mov
sahf
mov
(bad)
jmp
jmp
push
mov
xchg
add
mov
pop
in
jns
and
in
or
call
sbb
outs
out
outs
fwait
sahf
enter
push
jg
xchg
jle
in
(bad)
imul
(bad)
iret
push
pop
daa
cwde
cli
add
push
sbb
push
cwde
(bad)
(bad)
(bad)
mov
in
or
jo
push
adc
int3
cmp
inc
ss
dec
mov
loop
or
xchg
(bad)
(bad)
dec
pusha
add
scas
jmp
cs
mov
shl
fs
(bad)
jmp
aad
xor
(bad)
pop
pushf
neg
dec
lea
sub
add
(bad)
(bad)
mov
inc
adc
sbb
jb
cli
xor
adc
jno
cs
ds
and
(bad)
(bad)
(bad)
in
add
cmp
push
stos
dec
mov
adc
and
mov
out
mov
sbb
push
(bad)
(bad)
(bad)
jg
mov
test
dec
dec
adc
shr
cmps
sbb
xchg
test
nop
les
cld
movs
sub
jmp
adc
dec
dec
push
movs
and
mov
mov
adc
jle
or
(bad)
(bad)
(bad)
(bad)
cmp
mov
pusha
ret
ins
aad
push
ror
arpl
add
movlps
bound
test
push
test
clc
inc
adc
pop
and
jae
pusha
aam
fiadd
inc
aas
jl
mov
call
push
popf
or
int3
test
data16
push
push
push
jg
cmp
(bad)
dec
sub
and
out
and
std
jo
div
idiv
mov
in
jns
dec
push
jecxz
ins
xchg
test
xor
das
jg
inc
pop
pop
hlt
(bad)
(bad)
jmp
call
(bad)
mov
loope
(bad)
das
add
out
pop
mov
fdivrp
out
btr
test
aas
nop
jge
std
push
inc
test
mov
scas
cmp
outs
sub
(bad)
fild
movs
xor
and
js
cmp
xor
dec
iret
idiv
in
inc
loopne
mov
pop
mov
clc
jg
mov
imul
dec
mov
cli
mov
(bad)
mov
aad
sbb
jg
pop
test
pop
push
cmc
test
jbe
pop
(bad)
pop
cld
(bad)
jg
cmp
pushf
and
cmp
les
jl
sbb
jne
pushf
cmp
push
mov
mov
jb
rcl
xor
xchg
(bad)
(bad)
(bad)
call
pusha
fwait
mov
add
xchg
add
movs
cmp
pop
add
cmp
push
pop
xor
(bad)
jmp
(bad)
lock
in
cmp
mov
jmp
push
push
mov
(bad)
dec
retf
test
inc
or
push
pop
popf
icebp
inc
(bad)
mov
fbstp
jmp
ins
(bad)
enter
and
mov
mov
cdq
jl
jmp
dec
call
repnz
mov
mov
ror
stc
mov
lock
jo
jmp
push
push
je
cwde
cld
(bad)
mov
xor
call
ret
sub
aas
mov
xchg
dec
aam
pusha
out
xor
gs
(bad)
fldenv
xchg
mov
pop
(bad)
or
loopne
aad
xlat
(bad)
(bad)
call
outs
or
cld
add
mov
push
mov
js
(bad)
(bad)
(bad)
call
adc
(bad)
push
loopne
sub
shl
cdq
xchg
sub
leave
inc
adc
push
in
mov
mov
push
fwait
ja
(bad)
call
fisttp
sbb
mov
push
scas
inc
jb
aam
fistp
test
lea
push
mov
aaa
jmp
mov
aad
std
hlt
push
xchg
push
mov
lahf
pop
ja
mov
(bad)
(bad)
call
pop
mul
cmp
jb
loope
mov
jp
xchg
in
popa
call
sbb
ss
cmps
stos
bound
adc
mov
cli
push
dec
adc
or
add
jns
fdivr
mov
jg
pop
push
jg
xchg
jge
cli
aas
(bad)
push
jmp
fmul
adc
mov
icebp
pop
xchg
ret
xor
cmps
(bad)
(bad)
(bad)
dec
inc
adc
arpl
mov
stos
pop
shl
retf
icebp
mov
ins
jp
(bad)
fild
data16
ins
cdq
dec
mov
cdq
or
nop
(bad)
sub
cld
(bad)
(bad)
jmp
es
push
ins
push
mov
fistp
ret
loop
(bad)
(bad)
(bad)
call
aad
sub
add
xchg
loop
xlat
fld
mov
mov
call
jb
add
pusha
cdq
mov
repz
out
inc
pop
mov
pop
mov
(bad)
(bad)
fild
and
mov
js
xor
mov
jecxz
sub
imul
(bad)
push
dec
jmp
cmc
lea
hlt
dec
jge
push
repz
mov
dec
clc
pop
loop
jge
push
pop
cwde
popf
dec
cmp
mov
test
les
fidiv
cwde
xchg
fidiv
call
dec
push
fcomip
rcr
add
test
(bad)
sub
(bad)
(bad)
jmp
jo
idiv
hlt
push
mov
jle
lods
pop
xchg
cmps
dec
jb
(bad)
(bad)
(bad)
push
add
ins
cld
lock
iret
xchg
jnp
sbb
push
and
or
sbb
(bad)
call
bound
lods
ins
mov
push
jno
or
sbb
(bad)
mov
push
push
sbb
cs
push
iret
popf
aad
pop
ficomp
(bad)
(bad)
cmp
std
mov
imul
adc
rcr
sbb
and
int3
shl
(bad)
cmp
aam
dec
xor
or
ret
push
not
(bad)
(bad)
dec
cmps
retf
cmc
shl
sbb
out
adc
dec
mov
xchg
out
mov
dec
clc
clc
dec
xchg
retf
inc
rol
push
in
jp
mov
(bad)
(bad)
(bad)
call
cmps
pop
mov
out
sbb
fwait
jb
sub
pop
mov
imul
jmp
(bad)
dec
pusha
mov
cli
fnclex
jo
xchg
arpl
cmp
xchg
and
call
movs
arpl
mov
lods
jecxz
test
mov
(bad)
(bad)
(bad)
jmp
ins
dec
lds
adc
mov
(bad)
icebp
push
cmp
(bad)
push
jecxz
xor
in
push
jbe
adc
nop
and
or
inc
out
adc
xor
(bad)
(bad)
(bad)
dec
mov
cdq
and
mov
fld
out
jge
cld
out
mov
mov
cli
mov
loopne
or
jne
sbb
inc
inc
inc
push
int
fcomp
hlt
inc
inc
bnd
or
(bad)
call
xchg
imul
out
out
mov
stos
fstp
pop
mov
test
aad
jmp
push
aad
daa
stos
retf
jnp
adc
out
call
jp
jnp
jmp
not
jb
xchg
and
jmp
add
jecxz
das
imul
sar
(bad)
mov
imul
inc
jns
sub
enter
daa
jp
hlt
inc
inc
outs
jo
(bad)
fild
mov
pop
cmp
cmps
mov
push
(bad)
dec
fst
jne
(bad)
inc
sbb
repnz
dec
add
add
int
repnz
jecxz
xor
jmp
mov
(bad)
(bad)
(bad)
call
popa
pop
retf
outs
lock
and
and
push
lea
in
adc
leave
and
dec
xor
push
(bad)
call
arpl
cmp
nop
(bad)
nop
add
outs
stos
dec
dec
loop
clc
adc
cwde
sub
mov
dec
dec
repz
push
in
inc
int3
dec
push
mov
sub
jae
inc
cld
jmp
mov
daa
cmps
cmps
mov
xchg
cwde
jmp
movs
icebp
add
mov
call
data16
or
(bad)
mov
and
pop
mov
(bad)
(bad)
(bad)
inc
ins
or
cmc
and
push
loop
fdiv
cmps
or
or
lock
mov
sub
sub
mov
lea
cmc
mov
lods
mov
mov
inc
xor
dec
es
push
pop
aam
jg
int
mov
pop
jo
(bad)
enter
dec
pop
xlat
test
inc
call
cmp
fnstsw
mov
pop
outs
pusha
data16
loope
adc
mov
sbb
cmp
push
(bad)
(bad)
jg
and
xchg
xor
mov
push
aam
sbb
xchg
adc
cmp
mov
inc
mov
test
inc
and
movsx
or
dec
ret
push
lea
add
lock
xchg
mov
jl
aas
fst
idiv
sbb
stc
pushf
hlt
test
add
or
js
lahf
stc
cld
icebp
jg
call
fdivp
mov
leave
xchg
xor
mul
jmp
jne
ja
es
call
ins
cmp
cmp
add
mov
aaa
int
inc
(bad)
fist
cmp
loopne
dec
sbb
(bad)
repz
push
mov
inc
sbb
(bad)
dec
inc
dec
push
pop
dec
xchg
hlt
adc
test
add
push
or
mov
push
ins
(bad)
(bad)
(bad)
(bad)
inc
inc
lock
jge
ret
pop
movs
cld
inc
je
or
xchg
sub
cmp
add
(bad)
jmp
mov
push
in
out
dec
addr16
or
ficom
jmp
jmp
pop
shl
movs
pushf
and
jns
imul
add
jmp
(bad)
cld
test
dec
loopne
fsubr
jmp
(bad)
inc
rcl
push
or
mov
sbb
retf
and
mov
push
and
loope
jmp
jmp
xchg
ret
out
mov
and
loopne
ret
mov
cmp
(bad)
(bad)
(bad)
dec
cmp
leave
adc
xor
mov
stos
sbb
pop
inc
xchg
fwait
nop
fild
dec
sbb
xchg
adc
jmp
shl
xchg
and
mov
sbb
pop
and
aas
daa
nop
rcl
call
inc
out
jecxz
loope
cmp
and
movs
test
pop
sbb
fisubr
cld
inc
fmul
add
test
cld
pop
icebp
sbb
inc
jg
fcmovnbe
enter
sub
enter
cmc
xor
(bad)
fbld
mov
cmp
mov
jmp
stc
loopne
das
push
(bad)
(bad)
(bad)
push
push
xor
hlt
or
xor
faddp
adc
cmp
inc
mov
and
or
(bad)
push
xor
add
xchg
mov
enter
inc
stos
cli
outs
mov
idiv
jmp
test
dec
xchg
jmp
stc
test
stos
sub
inc
stos
(bad)
xlat
sahf
dec
(bad)
jg
lock
mov
inc
mov
in
mov
(bad)
(bad)
call
adc
loope
fsub
or
jne
ja
mov
fistp
cmp
lds
cld
add
cmp
data16
(bad)
(bad)
mov
call
aad
mov
lea
inc
nop
fdiv
sub
in
(bad)
jmp
mov
(bad)
cmps
ins
mov
adc
cmps
(bad)
dec
mov
(bad)
(bad)
dec
cmps
loopne
mov
(bad)
cwde
cwde
sbb
sbb
bound
aam
mov
(bad)
(bad)
jmp
shl
lods
mov
jns
xchg
cmp
stos
sbb
push
xchg
addr16
xchg
push
rcr
(bad)
jnp
mov
dec
mov
push
test
push
sub
jb
das
xchg
in
test
jne
sub
call
mov
fidiv
in
pop
ja
push
mov
jbe
mov
jmp
lar
mov
cmp
sbb
sahf
cs
jb
fisttp
or
cmp
mov
sbb
rcl
mov
clc
(bad)
push
push
js
cmps
in
jle
add
movs
ss
adc
add
push
inc
inc
mov
sub
mov
(bad)
(bad)
jle
shr
dec
sar
mov
sub
fld
pop
jp
aas
sub
stc
ficomp
and
std
cli
lods
imul
jbe
mov
pop
cs
in
mov
movs
xchg
cmp
fdiv
(bad)
(bad)
jmp
sbb
push
paddsb
and
test
sub
(bad)
(bad)
inc
mov
or
push
mov
mov
jp
mov
cmp
cs
mov
arpl
hlt
out
or
xchg
jecxz
push
mov
into
pop
mov
(bad)
(bad)
(bad)
inc
mov
push
pop
aas
xor
ret
daa
and
inc
shl
lahf
cmc
(bad)
(bad)
call
jle
push
jne
outs
mov
fstp
sub
mul
jmp
fild
jmp
(bad)
int3
add
push
mov
mov
(bad)
dec
sub
ror
xchg
xor
push
call
aad
cs
push
dec
jmp
enter
push
fwait
add
lock
stos
jecxz
loop
sub
(bad)
(bad)
(bad)
jle
xchg
outs
mov
jg
lock
mov
push
outs
retf
es
pop
rcr
sahf
xchg
cmp
push
inc
fistp
(bad)
(bad)
push
mov
xor
push
adc
ror
addr16
mov
add
cld
pop
ds
jle
push
xchg
ret
(bad)
(bad)
inc
or
inc
mov
mov
pop
aaa
je
xchg
xchg
and
dec
sub
xor
(bad)
(bad)
call
cmp
test
add
adc
jb
xchg
fmul
into
or
jo
adc
jmp
add
sbb
cld
lock
hlt
mov
je
(bad)
(bad)
(bad)
sub
mov
dec
repnz
pop
jno
and
int
xchg
out
mov
inc
add
mov
cmps
rcr
adc
rol
inc
rcl
popa
ret
sub
ror
inc
sbb
daa
mov
icebp
mov
jge
mov
arpl
push
(bad)
push
cmc
out
adc
dec
nop
loope
cmp
dec
(bad)
(bad)
(bad)
jmp
adc
adc
clc
int
(bad)
je
jl
ret
(bad)
and
sub
repz
lods
std
dec
(bad)
inc
(bad)
arpl
and
ret
add
inc
mov
pop
stos
cmp
push
push
and
movs
arpl
push
into
adc
stos
push
in
(bad)
(bad)
(bad)
(bad)
clc
cmp
adc
pop
test
stos
mov
inc
(bad)
cmp
aas
add
mov
cs
inc
cmp
xchg
aad
sbb
xor
shl
add
dec
(bad)
(bad)
call
es
sub
mov
or
lds
xor
add
xchg
jbe
clc
(bad)
(bad)
call
jbe
adc
out
js
stos
push
in
mov
ret
add
popa
clc
(bad)
(bad)
out
int3
(bad)
fsubrp
pop
push
jnp
out
fidivr
out
push
jp
in
jle
sbb
pop
fdivr
(bad)
jmp
pop
or
mov
add
test
add
sub
(bad)
call
lahf
add
jmp
sbb
and
frstor
and
xchg
mov
pop
jb
in
mov
sbb
test
add
icebp
js
fcomp
ss
imul
jae
mov
fcomp
adc
push
(bad)
mov
loop
(bad)
jg
pushf
je
pop
mul
lahf
cld
xchg
push
inc
pushf
jge
cdq
mov
(bad)
(bad)
(bad)
(bad)
jl
fmul
xor
in
pop
fs
pop
add
fsub
in
inc
sbb
icebp
mov
push
inc
or
rcr
repz
cmp
sub
call
inc
in
push
inc
sbb
xchg
arpl
or
push
or
mov
jp
aaa
sbb
(bad)
(bad)
dec
out
mov
adc
jmp
mov
(bad)
jg
(bad)
dec
mov
outs
xor
movs
xchg
mov
push
mov
pop
das
push
mov
xchg
into
mov
rcl
sub
sahf
push
stos
(bad)
(bad)
inc
mov
xor
pop
and
ins
stc
sub
aam
push
inc
add
ret
call
jmp
jecxz
(bad)
mov
or
add
adc
cmp
adc
adc
or
inc
push
inc
adc
mov
pop
adc
jge
in
das
sbb
stos
push
push
into
movs
fsubr
pop
cwde
sub
(bad)
inc
jno
xchg
jo
daa
add
add
lea
lahf
out
mov
pusha
(bad)
jns
or
aaa
sub
mov
sbb
or
(bad)
(bad)
(bad)
call
or
dec
cmp
inc
adc
icebp
les
(bad)
jg
je
hlt
sahf
neg
sub
cmp
idiv
pop
daa
jbe
mov
cmps
(bad)
(bad)
(bad)
jmp
jmp
test
inc
jl
xor
int
int
cwde
cmp
xchg
call
int3
loope
xchg
sub
add
lock
test
stos
cdq
ss
(bad)
(bad)
jmp
jb
jecxz
popf
jl
stc
outs
cld
les
mov
ror
push
call
(bad)
outs
std
(bad)
(bad)
(bad)
call
and
shl
xchg
test
in
aad
ins
xor
je
(bad)
(bad)
(bad)
jmp
sbb
pop
push
loop
cmp
inc
mov
cmp
sbb
(bad)
call
inc
movs
or
pop
(bad)
jg
cmc
mov
add
(bad)
(bad)
(bad)
call
dec
fsubrp
movs
xor
es
lods
jnp
mov
fist
in
aas
dec
fadd
push
mov
dec
(bad)
ins
push
mov
mov
repz
xor
dec
pop
call
(bad)
(bad)
mov
rcl
xor
jae
fnstsw
das
ins
fistp
(bad)
jg
pop
mov
not
xchg
adc
push
das
mov
(bad)
jg
ins
jbe
js
mov
inc
mov
inc
aas
(bad)
(bad)
(bad)
(bad)
jl
jnp
cmps
enter
mov
or
mov
fild
loope
mov
inc
addr16
jae
(bad)
(bad)
call
out
push
lea
adc
stos
xchg
jmp
sub
jmp
inc
ss
mov
fdivr
(bad)
mov
sub
pop
push
sbb
mov
test
retf
ds
dec
mov
(bad)
call
xor
ror
xchg
mov
cmp
sub
call
xchg
inc
stos
(bad)
imul
inc
aas
jg
mov
inc
test
(bad)
(bad)
call
inc
inc
mov
dec
stos
fidiv
cmc
mov
adc
pop
sbb
pop
pop
rcl
test
adc
sbb
inc
mov
data16
out
(bad)
(bad)
inc
das
mov
xchg
aas
fistp
mov
clc
mov
(bad)
jg
or
cmp
dec
xchg
repz
dec
mov
xor
mov
mov
push
xchg
dec
inc
lea
sub
sub
outs
fsubr
xchg
stos
push
xchg
mov
(bad)
cmp
dec
ins
ja
test
fcom
inc
ins
or
daa
add
mov
jg
or
es
jecxz
bound
xchg
mov
(bad)
jmp
gs
shr
jp
or
mov
jmp
aam
ret
(bad)
dec
inc
inc
push
or
cmp
hlt
jno
call
xchg
(bad)
call
jb
outs
dec
test
pop
cmp
retf
cli
cli
sbb
inc
jb
int3
push
dec
or
inc
out
sbb
xchg
inc
mov
loope
daa
std
out
mov
call
ja
(bad)
(bad)
push
push
push
rol
dec
xor
or
ja
pop
ficomp
cmp
movs
mov
sbb
xor
(bad)
out
and
imul
jge
arpl
mov
cmp
(bad)
jmp
ret
rol
das
enter
cmps
popf
adc
sbb
jb
adc
arpl
(bad)
mov
xchg
jg
(bad)
(bad)
fsubrp
loopne
adc
inc
aam
in
aaa
dec
cmc
cmc
lds
fldcw
ss
adc
fdiv
(bad)
mov
and
dec
daa
aam
push
scas
in
jp
mov
movs
xchg
push
sub
cld
or
jecxz
push
mov
data16
(bad)
(bad)
jmp
mov
push
xchg
jne
fst
adc
rcl
jbe
fisttp
shl
fsub
jmp
lahf
cmp
movs
sub
pushf
loopne
or
repz
push
ins
sub
lock
cmp
sub
xor
mov
test
fcomip
call
fimul
gs
(bad)
dec
jnp
std
and
xchg
adc
sti
sub
rcr
adc
(bad)
dec
mov
push
aaa
pusha
mov
inc
pop
or
(bad)
(bad)
dec
mov
cmp
add
fs
test
inc
xor
out
enter
or
mov
cli
les
lds
outs
(bad)
(bad)
push
adc
sub
dec
pushf
cmp
push
dec
xchg
shr
icebp
mov
lock
call
inc
scas
(bad)
rcr
lock
out
adc
add
sbb
(bad)
(bad)
jmp
into
stos
inc
cmp
push
outs
int
repnz
cmp
dec
loopne
arpl
dec
jl
lea
adc
pop
scas
push
mov
aaa
inc
adc
jg
and
xchg
arpl
dec
cwde
jo
cmp
xchg
and
out
mov
mov
retf
pop
(bad)
or
in
add
mov
(bad)
jmp
lods
lahf
test
rol
jb
ja
mov
or
fsubr
add
(bad)
inc
leave
mov
out
xchg
mov
cs
cmp
(bad)
add
dec
cmps
imul
push
js
push
ja
pop
rol
sti
retf
lahf
inc
jl
or
and
dec
and
sbb
dec
xchg
cmp
or
xchg
(bad)
(bad)
(bad)
mov
inc
cwde
xor
call
mov
mov
mov
into
std
(bad)
jg
imul
clc
stc
cwde
std
enter
add
stos
push
and
mov
dec
(bad)
(bad)
(bad)
mov
popa
push
fldenv
std
mov
in
inc
jmp
mov
clc
adc
xor
xor
(bad)
(bad)
call
adc
retf
jecxz
pop
loop
inc
mov
imul
fcmovnu
xchg
shr
add
inc
push
mov
aam
adc
push
cld
pop
and
arpl
xchg
mov
add
int3
sub
push
sub
call
or
mov
xlat
imul
mov
stos
movs
(bad)
(bad)
out
loopne
mov
cdq
lea
call
imul
scas
out
(bad)
(bad)
(bad)
fist
jbe
push
ror
pop
mov
sbb
push
mov
jg
xchg
repz
scas
and
es
pop
loop
popa
leave
xor
or
push
std
jmp
mov
sahf
jg
(bad)
(bad)
push
sub
rcl
addr16
arpl
mov
jmp
adc
(bad)
leave
xchg
and
mov
sub
sbb
ins
(bad)
aam
fwait
scas
mov
dec
and
lods
jb
(bad)
(bad)
inc
pop
pop
scas
(bad)
cmp
cwde
inc
fld
imul
es
push
adc
inc
add
sbb
cmp
mov
out
mov
xchg
add
inc
neg
dec
mov
loop
inc
pop
popf
jg
ins
xchg
mov
retf
sub
(bad)
sub
fdivr
cmp
jmp
mov
test
pop
push
xor
cdq
js
(bad)
lods
jp
mov
push
dec
add
mov
push
xor
sub
sub
xlat
sbb
(bad)
(bad)
(bad)
(bad)
jmp
push
pop
adc
mov
mov
js
jnp
jle
sti
scas
mov
fs
adc
or
add
adc
repz
(bad)
(bad)
jg
xor
push
xor
cdq
jmp
pusha
mov
mov
(bad)
(bad)
(bad)
call
jae
pusha
push
scas
or
outs
sbb
addr16
xor
sub
lods
pop
add
sbb
xchg
sub
xor
retf
jns
cmp
push
adc
push
int3
and
loop
pop
cld
lods
jmp
pop
sub
movs
cdq
mov
jp
(bad)
(bad)
jmp
ret
jno
jg
in
aas
jae
dec
arpl
mov
mov
or
mov
xchg
aam
imul
jne
mov
pop
xchg
aaa
(bad)
out
clc
inc
ins
xchg
addr16
sub
lock
ss
(bad)
fld
cmc
fst
sbb
stos
or
lods
lock
and
in
loopne
xor
icebp
(bad)
(bad)
(bad)
cmp
jno
xlat
je
jmp
pop
push
call
outs
(bad)
xchg
push
adc
jmp
iret
or
loope
mov
mov
call
aad
mov
jmp
xlat
push
jno
jmp
shl
shl
mov
test
imul
jmp
(bad)
(bad)
(bad)
jmp
jo
retf
mov
mov
ret
ja
mov
push
fld
in
inc
cdq
dec
inc
dec
jecxz
(bad)
nop
add
(bad)
(bad)
dec
push
call
fstp
das
cmp
adc
lock
rol
cmp
(bad)
call
ss
xchg
das
pop
(bad)
xchg
dec
xchg
aad
retf
ficom
stos
(bad)
jmp
dec
lds
pushf
and
push
xor
arpl
mov
ficomp
mov
gs
xor
icebp
(bad)
jmp
bound
sub
jb
lea
and
inc
dec
ret
cmps
sbb
js
cmp
dec
lock
cmc
data16
and
out
adc
dec
rol
mov
test
fwait
dec
(bad)
(bad)
(bad)
dec
aaa
xchg
dec
fdiv
xchg
sbb
add
daa
in
sbb
mov
test
(bad)
(bad)
inc
or
dec
int
and
mov
and
mov
gs
cdq
dec
cmc
out
(bad)
mov
loopne
jne
sbb
gs
jmp
imul
(bad)
(bad)
jmp
test
test
mov
psllw
clc
enter
(bad)
fisttp
pop
push
jne
mov
pusha
sub
ror
jp
(bad)
call
rcr
ror
and
xor
aas
out
movs
in
mov
fdiv
xchg
or
pop
cmp
jnp
push
sbb
sub
push
int
(bad)
(bad)
(bad)
dec
add
mov
jle
cmp
ror
adc
jecxz
jne
mov
(bad)
(bad)
(bad)
jmp
jbe
inc
jnp
test
into
inc
jbe
sub
cmp
popf
lods
movs
loopne
adc
mov
add
sbb
mov
aaa
adc
push
pop
hlt
(bad)
(bad)
jmp
mov
adc
mov
add
mov
fs
(bad)
push
push
repz
dec
cmp
shl
mov
mov
cld
fcomip
cdq
pop
mov
adc
test
and
sbb
(bad)
jg
mov
pop
inc
and
movs
pop
scas
mov
xchg
cmp
or
inc
jecxz
sub
push
movs
leave
pop
xlat
inc
or
add
push
adc
loop
and
dec
repz
or
xor
and
sbb
(bad)
(bad)
push
retf
cmp
mov
lea
outs
inc
aad
sub
xor
cwde
out
mov
dec
(bad)
(bad)
(bad)
push
cdq
call
adc
dec
adc
cmp
push
ss
dec
or
jae
push
mov
(bad)
(bad)
(bad)
call
sub
xchg
xor
pop
cmp
or
inc
daa
es
stos
(bad)
(bad)
(bad)
fdivr
or
pushf
loopne
xor
and
js
ins
push
int
mov
mov
(bad)
(bad)
inc
adc
sub
aad
js
jmp
mov
inc
imul
add
(bad)
jmp
or
mov
pop
dec
dec
adc
mov
dec
into
mov
rcl
retf
call
loopne
xchg
add
(bad)
xchg
mov
sbb
(bad)
dec
push
bound
out
xchg
sbb
(bad)
call
add
mov
in
out
and
push
pop
xchg
add
in
jg
ss
xlat
dec
inc
dec
test
xlat
std
cmp
movzx
jb
adc
push
aaa
mov
mov
aaa
ret
(bad)
call
loopne
push
add
and
mov
fisubr
mov
inc
das
cli
inc
in
mov
in
outs
sahf
sbb
lock
xchg
(bad)
idiv
sub
adc
add
mov
mov
pop
sahf
(bad)
mov
sub
mov
cmp
sbb
or
dec
add
jl
pop
nop
mov
jg
repnz
add
mov
ss
push
xor
cli
cmp
ret
pop
or
(bad)
jg
aaa
dec
rol
dec
xchg
inc
inc
and
gs
stc
cmps
lock
mov
inc
xor
xor
pop
shl
(bad)
cmps
pop
dec
rcl
xchg
cmp
or
add
push
jno
mov
out
jbe
(bad)
(bad)
(bad)
call
sbb
xchg
jne
mov
inc
loopne
sbb
bswap
cwde
sub
in
popf
popf
cmp
(bad)
std
sbb
cmp
sbb
jmp
push
sbb
(bad)
call
inc
add
out
(bad)
fnstcw
and
sti
test
out
jl
(bad)
(bad)
(bad)
push
adc
push
cmp
push
call
cld
jmp
or
out
ins
cmps
push
xor
sbb
(bad)
sub
cmp
mov
(bad)
(bad)
inc
movd
mov
in
xchg
mov
mov
ror
mov
adc
call
arpl
jo
xor
mov
lock
lock
push
shl
sub
and
(bad)
(bad)
dec
ins
or
sbb
dec
bound
addr16
and
clc
xchg
pop
and
xchg
cmp
xlat
scas
cli
inc
scas
push
enter
add
sahf
dec
mov
lahf
retf
push
cmp
(bad)
jg
and
cmp
aad
dec
outs
js
(bad)
jg
lods
mov
jbe
xor
pop
rcr
or
(bad)
(bad)
call
lahf
movs
stos
fcom
daa
mov
xchg
retf
mov
cmp
inc
cwde
fcomp
cmp
mov
inc
cli
push
mov
hlt
out
rol
adc
sbb
fnstsw
sar
std
ja
(bad)
cdq
inc
dec
xchg
inc
repnz
std
in
ds
pop
or
(bad)
jmp
nop
movs
movs
mov
sbb
add
(bad)
(bad)
(bad)
push
adc
dec
xchg
mov
inc
mov
fisubr
jmp
jg
scas
mov
jg
lock
jg
pop
ja
into
mov
mov
(bad)
(bad)
(bad)
mov
jl
jo
jo
and
cdq
mov
mov
cld
jl
bound
(bad)
(bad)
(bad)
call
leave
sub
call
inc
ja
push
loop
repnz
lods
mov
movs
test
and
fwait
test
xor
dec
jmp
push
mov
enter
(bad)
(bad)
(bad)
dec
sbb
(bad)
jmp
inc
xor
test
mov
inc
jne
(bad)
(bad)
(bad)
(bad)
jge
test
loopne
adc
xor
repz
push
mov
iret
gs
jmp
mov
mov
jmp
dec
daa
mov
xchg
test
inc
adc
hlt
inc
mov
data16
repnz
loop
sub
jmp
jmp
pop
mov
in
jae
jbe
xchg
retf
(bad)
call
and
repz
pop
rcl
xchg
ins
cmp
arpl
clc
out
mov
rcr
call
pusha
sti
shr
sbb
mov
and
popf
mov
add
cmp
xlat
ret
(bad)
jg
test
pushf
das
(bad)
imul
jmp
jmp
(bad)
dec
mov
call
inc
test
jno
jge
xchg
pop
push
ins
mov
rol
push
cmps
retf
data16
fcomip
or
add
and
cmp
fucomp
leave
repz
mov
sub
adc
int
sub
adc
mov
stos
pusha
les
pushf
(bad)
je
xlat
and
inc
or
neg
call
dec
inc
ja
je
lock
and
ror
cmp
imul
xor
push
adc
adc
in
xor
mov
shl
icebp
or
(bad)
(bad)
inc
aas
jnp
jg
(bad)
jae
sub
std
dec
loope
and
mov
dec
fidivr
pop
test
push
lods
movs
jge
or
dec
popa
mov
(bad)
inc
sti
lock
adc
mov
lds
(bad)
pop
cmps
std
fstp
loopne
movs
pop
mov
dec
push
call
les
cs
push
push
inc
in
fdivrp
(bad)
(bad)
call
jecxz
stos
jp
icebp
imul
sar
(bad)
aad
jns
js
stos
push
ja
xchg
mov
pop
std
adc
xor
(bad)
jo
fs
mov
sub
dec
mov
adc
stos
or
pop
or
xor
push
lods
ins
dec
push
(bad)
cmp
push
cld
jg
sbb
imul
cmp
(bad)
repnz
mov
fimul
dec
xchg
loope
inc
sub
ret
and
mov
aad
push
mov
(bad)
dec
pushf
adc
xor
mov
xchg
mov
add
sar
out
ss
dec
fwait
mov
jne
lea
(bad)
mov
(bad)
(bad)
dec
push
mov
outs
jno
aad
mov
jae
and
and
mov
dec
clc
inc
adc
push
js
mov
dec
sub
(bad)
(bad)
(bad)
dec
pushf
jge
cwde
inc
xchg
jecxz
mov
ret
cmc
les
and
aas
loop
movs
xchg
out
js
dec
rol
in
mov
xor
jl
xor
push
mov
xor
sub
nop
test
dec
jae
cmp
test
ret
mov
movs
not
or
sbb
(bad)
(bad)
fnstcw
popf
iret
outs
fnstenv
cmp
and
daa
cmp
bound
out
xchg
sub
mov
sti
jmp
pop
cdq
shl
test
jb
(bad)
dec
adc
retf
add
es
and
(bad)
(bad)
(bad)
jl
jmp
shl
and
loopne
mov
or
pop
xor
xchg
add
loope
dec
and
add
(bad)
mov
mov
mov
(bad)
(bad)
jmp
test
mov
lock
loopne
fs
push
mov
(bad)
(bad)
fnsave
mov
sbb
or
lods
inc
mov
pop
jae
(bad)
(bad)
(bad)
inc
imul
xor
dec
scas
outs
sti
inc
sbb
jnp
push
test
fdivr
fbld
inc
(bad)
jnp
loop
push
and
loope
aaa
jp
sbb
inc
mov
push
call
inc
imul
or
outs
mov
xchg
(bad)
(bad)
(bad)
jg
imul
xchg
daa
cmc
sbb
or
(bad)
scas
cmp
cmps
aas
mov
jecxz
jg
stos
xor
loope
hlt
jge
sub
(bad)
into
xor
(bad)
(bad)
inc
push
xlat
lods
and
enter
lds
das
cld
call
jg
daa
sbb
or
call
int
pop
ja
or
dec
retf
cmp
aas
(bad)
aas
add
pushf
mov
xor
mov
(bad)
(bad)
mov
mov
shl
mov
sbb
repz
cmps
sbb
js
adc
fbld
jmp
sub
lea
add
inc
dec
push
pop
iret
push
jo
add
xor
in
gs
ficom
rcl
cmp
mov
pop
loope
cs
(bad)
(bad)
call
push
mov
stos
movs
jb
pop
sub
mov
(bad)
(bad)
(bad)
dec
into
and
xchg
jmp
mov
div
push
mov
xor
inc
lods
(bad)
or
call
inc
push
lea
lods
sub
(bad)
cmp
aad
cmp
test
dec
aaa
jmp
(bad)
(bad)
(bad)
jns
test
jmp
lock
daa
pop
jl
aaa
jne
push
add
jmp
sub
(bad)
(bad)
push
and
les
enter
int3
xor
sbb
lock
rcr
ror
(bad)
inc
into
inc
mov
cmp
outs
shl
cld
dec
retf
jne
sbb
test
push
cld
(bad)
rcr
jmp
jo
int3
clc
xchg
jns
mov
adc
xor
test
xchg
cmps
mov
es
lods
mov
mov
into
xchg
adc
push
daa
repz
add
xchg
dec
jmp
jmp
jp
pop
in
mov
jnp
test
scas
call
test
pop
mov
xor
pop
inc
jmp
sbb
out
clc
into
or
adc
mov
sbb
sbb
and
xor
pushf
ret
pop
add
pop
and
ds
sub
jb
leave
jl
or
arpl
mov
dec
xlat
(bad)
push
push
je
mov
iret
xchg
dec
(bad)
(bad)
(bad)
(bad)
jmp
cld
sub
fwait
mov
cmp
push
push
inc
sub
ja
retf
shl
add
(bad)
cmp
in
dec
rol
and
(bad)
mov
cdq
adc
stos
xor
idiv
std
mov
in
jno
mov
leave
xor
(bad)
jp
jbe
mov
ds
adc
scas
nop
ret
pushf
and
jmp
sbb
icebp
mov
ficomp
and
(bad)
(bad)
sbb
shl
mov
(bad)
(bad)
test
ret
or
inc
aam
push
pop
jg
popa
pop
jle
mov
cdq
test
(bad)
call
dec
dec
sbb
ror
dec
push
adc
xchg
les
jmp
(bad)
xor
push
js
mov
repz
dec
div
sti
jns
pop
aam
stos
sbb
cli
mov
int
daa
sbb
les
mov
mov
hlt
leave
daa
sahf
fistp
movs
jp
frstor
ret
jno
call
and
(bad)
(bad)
jge
mov
cmp
cmp
jne
xchg
push
and
jns
inc
mov
push
lods
and
xor
sub
push
sbb
ja
cld
add
shl
mov
shl
jg
test
mov
pop
dec
rol
inc
dec
mov
push
pop
(bad)
mov
mov
lods
and
test
pop
cmp
je
jmp
iret
sbb
scas
js
jle
sti
enter
push
sbb
(bad)
loop
inc
adc
fisub
fs
aaa
popf
nop
(bad)
(bad)
mov
(bad)
(bad)
xchg
jg
mov
add
xor
in
push
xchg
jg
push
call
inc
imul
daa
lock
idiv
iret
add
xchg
add
inc
mov
pop
pop
loope
sub
cmp
xchg
enter
(bad)
call
xlat
sbb
ror
add
fbstp
dec
loopne
cdq
out
xlat
aas
jae
or
adc
push
test
or
arpl
shr
add
jecxz
(bad)
call
(bad)
jbe
adc
scas
push
sbb
mov
xchg
(bad)
or
xor
js
push
cs
stc
(bad)
(bad)
(bad)
push
inc
in
mov
lahf
out
or
(bad)
jmp
sar
shl
js
xchg
jne
(bad)
in
call
adc
sub
push
mov
ds
or
sub
jae
mov
mov
jmp
cmps
cmp
(bad)
test
and
ss
test
push
call
sar
lds
xor
mov
mov
(bad)
(bad)
(bad)
jmp
shl
dec
inc
test
test
fimul
cmp
fisttp
mov
mov
icebp
mov
push
fwait
(bad)
(bad)
icebp
dec
push
inc
xchg
fsub
or
cmp
push
sar
(bad)
(bad)
jmp
pop
cmps
scas
fucomi
test
jno
add
add
jno
mov
ds
or
sahf
dec
mov
dec
scas
in
push
push
ja
adc
scas
scas
push
movs
mov
test
stc
mov
(bad)
(bad)
(bad)
jle
pop
aas
ja
popf
in
xchg
pop
push
jbe
out
arpl
push
xchg
xor
or
(bad)
(bad)
out
clc
imul
push
adc
pop
enter
(bad)
(bad)
(bad)
call
add
data16
mov
stc
sbb
jge
mov
and
or
fisttp
call
jmp
xchg
rol
push
push
loope
(bad)
mov
daa
or
inc
sub
or
sub
dec
add
sub
jo
push
push
push
cmc
cmc
sar
loopne
fcomi
mov
sub
xlat
add
lock
(bad)
(bad)
(bad)
fbld
scas
mov
push
add
sahf
mov
or
ret
stc
inc
push
sub
sub
test
cmp
add
call
imul
bound
xchg
inc
push
or
je
(bad)
inc
(bad)
(bad)
(bad)
call
lock
test
xor
push
add
or
push
adc
mov
mov
inc
fcmovne
adc
aas
mov
push
test
repz
(bad)
jmp
hlt
xlat
push
fidiv
add
mov
add
fwait
lea
repnz
inc
jo
jnp
adc
shl
in
mov
fwait
call
push
(bad)
jl
(bad)
(bad)
jle
cmp
adc
sbb
cmp
add
leave
add
call
das
(bad)
(bad)
call
inc
inc
inc
pop
sar
push
mov
push
adc
and
ja
(bad)
(bad)
push
dec
inc
or
cmp
mov
scas
and
mov
rcl
dec
sar
(bad)
(bad)
inc
pop
pusha
xchg
xchg
sub
dec
xchg
mov
sbb
push
retf
xor
cld
aad
ret
mov
xor
fnsave
jno
ror
(bad)
(bad)
jmp
cmp
mov
cmp
xchg
pop
call
add
nop
shl
sub
(bad)
(bad)
(bad)
(bad)
cmp
mov
in
sbb
cdq
into
inc
xchg
cmp
mov
sub
test
clc
xchg
shl
fsubr
mov
sbb
mov
dec
inc
je
mov
xlat
dec
movs
(bad)
xor
and
sbb
inc
sbb
cli
pop
cmp
mov
loope
ins
(bad)
sbb
ret
xor
push
(bad)
mov
add
outs
jecxz
adc
cmp
les
xchg
cmp
out
dec
jle
(bad)
add
call
cld
or
push
dec
dec
jmp
mov
imul
mov
jecxz
(bad)
(bad)
inc
scas
push
test
cmp
push
xcrypt-ofb
cmps
stos
lods
pop
jnp
loop
fmul
(bad)
int
mov
lods
push
mov
pop
pop
test
(bad)
test
push
leave
bound
cwde
shl
sub
dec
and
leave
int3
dec
gs
int3
mov
(bad)
mov
imul
mov
mov
fnstcw
les
(bad)
(bad)
(bad)
jmp
jg
int
mov
push
out
sbb
sbb
adc
xchg
je
std
call
ficomp
jne
stos
push
xor
sbb
or
(bad)
(bad)
(bad)
mov
xor
hlt
cmp
jno
sub
and
test
loopne
and
and
or
cmp
mov
inc
hlt
xchg
mov
(bad)
inc
xchg
std
call
sbb
fistp
pop
pop
pop
mov
aad
loopne
cmp
sbb
mov
sbb
jb
or
(bad)
jmp
mov
mov
mov
(bad)
or
movs
and
jle
and
(bad)
jmp
repnz
fdecstp
push
or
fistp
icebp
pop
inc
(bad)
(bad)
(bad)
(bad)
(bad)
fcmovbe
movs
popf
dec
mov
mov
push
lea
jmp
jmp
test
(bad)
push
das
pop
xor
enter
arpl
jle
xchg
xor
jbe
imul
rcr
xchg
adc
outs
cmps
aaa
xchg
das
xchg
hlt
(bad)
jmp
dec
aam
addr16
jno
ss
clc
pop
mov
out
and
mov
daa
sbb
test
fwait
mov
(bad)
jmp
jg
mov
into
xchg
pop
mov
icebp
adc
rcl
sahf
ins
xor
lods
and
fstp
pop
loopne
stos
xchg
fs
(bad)
dec
or
mov
fnstenv
mov
(bad)
(bad)
dec
mov
outs
mov
(bad)
cld
add
inc
test
dec
inc
cmp
jp
dec
jmp
(bad)
outs
stos
gs
lahf
mov
add
scas
mov
and
dec
ss
rol
adc
stos
adc
adc
(bad)
(bad)
(bad)
mov
mov
or
aam
aas
fwait
pusha
xor
retf
inc
aad
(bad)
addr16
bound
(bad)
(bad)
push
add
mov
(bad)
lock
or
dec
cmp
xlat
push
and
sub
cmps
cmp
pop
rcl
sbb
call
retf
cmp
mov
movs
(bad)
repnz
ret
in
js
adc
add
sub
and
js
icebp
sti
cli
xor
xchg
lea
inc
jns
rcl
or
inc
jnp
loop
add
loopne
mov
hlt
xor
popf
dec
lods
(bad)
(bad)
inc
dec
xchg
bound
les
xchg
dec
fs
stc
sar
(bad)
(bad)
(bad)
call
mov
mov
push
add
dec
test
xchg
loopne
mov
retf
or
(bad)
(bad)
inc
add
mov
lock
daa
mov
pop
xor
mov
popa
std
mov
push
jge
(bad)
(bad)
(bad)
fcmovnb
out
jle
and
mov
ds
cmc
cmps
xchg
or
pop
sar
(bad)
fdivr
jo
retf
(bad)
(bad)
jmp
js
mov
pop
jne
inc
inc
je
push
xor
cmp
dec
out
outs
clc
(bad)
mov
and
xchg
fmul
cmp
jnp
mov
aas
jno
mov
inc
pusha
pop
sar
add
sbb
or
idiv
fnstcw
cld
(bad)
jge
pushf
jae
and
or
stc
out
ret
add
iret
out
sti
pop
imul
sub
or
fidiv
sub
push
mov
aam
push
js
inc
push
ret
ss
mov
push
aaa
push
push
(bad)
jmp
ins
out
jle
test
inc
mov
and
push
xchg
fwait
cmp
jmp
sbb
iret
aad
mov
(bad)
(bad)
test
or
or
aas
nop
inc
mov
pop
cmp
push
retf
mul
das
(bad)
(bad)
(bad)
(bad)
mov
lock
xchg
in
pop
mov
ret
mov
cmc
fidivr
ds
mov
(bad)
jmp
(bad)
or
and
jbe
mov
scas
stos
or
cmc
pop
ret
mov
jno
jne
pop
pusha
outs
(bad)
(bad)
(bad)
call
mov
sub
aas
mov
dec
dec
(bad)
jns
xchg
mov
arpl
(bad)
(bad)
call
rcr
and
sar
cmps
lds
push
hlt
bound
pop
call
pusha
aam
inc
cld
outs
in
movs
ficom
mov
adc
jb
js
jno
nop
mov
loope
mov
push
cs
fcom
mov
lock
mov
jmp
(bad)
(bad)
call
out
and
das
add
mov
sbb
pop
stos
fisubr
nop
rcl
je
push
adc
(bad)
mov
and
sub
adc
mov
ret
dec
xchg
clc
sub
dec
mov
mov
dec
call
(bad)
(bad)
push
mov
push
inc
hlt
sub
into
sbb
jo
imul
int3
mov
xor
mov
add
sbb
outs
clc
jmp
mov
sar
cmp
or
in
push
(bad)
(bad)
(bad)
call
mov
test
mov
inc
add
xchg
pop
ret
sbb
mov
aam
aam
das
(bad)
fldcw
dec
dec
movs
sub
adc
dec
adc
into
hlt
(bad)
jg
or
push
jg
pop
jle
pop
in
cmps
push
loop
sti
jg
lock
ins
into
cmp
mov
(bad)
jg
stos
push
sbb
sub
mov
inc
ds
inc
sub
jg
(bad)
push
sbb
sahf
pusha
mov
in
scas
inc
inc
imul
(bad)
(bad)
(bad)
fnsave
add
or
cli
pop
mov
call
xchg
fiadd
lahf
sahf
cmp
and
mov
cmp
mov
cmps
dec
xchg
mov
(bad)
(bad)
call
mov
xchg
inc
push
shr
dec
push
ds
stos
sbb
jecxz
(bad)
call
push
xchg
pop
pop
and
mov
cmc
and
jl
fist
pop
loopne
mov
jmp
ins
mov
sub
sbb
mov
jno
ret
stos
(bad)
(bad)
(bad)
dec
enter
inc
add
adc
push
and
leave
ds
(bad)
(bad)
(bad)
(bad)
push
mov
xor
adc
cmp
inc
inc
add
jae
fs
cmp
push
(bad)
(bad)
(bad)
push
fbld
adc
and
fs
and
push
outs
inc
mov
push
add
mov
(bad)
(bad)
call
mov
and
inc
retf
shl
mov
add
repz
and
push
inc
pop
push
scas
push
imul
call
and
leave
mov
or
call
mov
inc
pop
dec
pop
aas
fdivr
xchg
(bad)
jmp
mov
xor
mov
fcom
jg
mov
inc
inc
fwait
sub
(bad)
jmp
sub
xchg
outs
add
or
lahf
(bad)
jecxz
mov
mov
cmp
adc
pop
cmps
popa
pop
jne
neg
ds
or
cmp
pop
inc
dec
fisubr
pop
clc
xchg
imul
and
mov
pop
inc
add
lods
xor
(bad)
mov
cld
cdq
out
cmp
push
adc
mov
imul
and
jl
mov
hlt
mov
gs
push
push
pop
add
adc
outs
out
push
mov
sub
fisubr
cmp
dec
xor
gs
loope
stc
(bad)
jmp
std
jmp
pushf
test
adc
xor
in
mov
sar
ja
xchg
js
sub
sbb
(bad)
(bad)
(bad)
out
ficomp
xchg
push
ret
sbb
iret
or
stos
dec
jns
ds
jp
mov
lods
sti
(bad)
call
mov
inc
inc
iret
dec
iret
retf
mov
lods
pop
mov
aad
(bad)
jmp
mov
retf
iret
cmps
adc
push
pop
sahf
or
jl
cwde
sahf
stos
ret
call
push
jns
jae
mov
ins
push
and
cmp
cli
xchg
(bad)
jmp
cmp
cmp
(bad)
jmp
cli
out
pop
clc
in
(bad)
(bad)
mov
jmp
imul
mov
hlt
(bad)
mul
mov
jno
xchg
lock
or
mov
ss
(bad)
(bad)
(bad)
(bad)
out
test
push
mov
aad
jge
scas
jge
nop
sbb
js
push
cmps
pop
fcomi
in
xchg
sbb
call
sub
popa
jb
sub
mov
pop
jl
push
dec
dec
pop
cmc
dec
xchg
js
stos
lea
sbb
in
mov
inc
mov
pop
(bad)
dec
(bad)
stc
inc
test
repnz
mov
retw
jecxz
pop
push
mov
outs
jns
jmp
clc
dec
jmp
out
and
dec
(bad)
(bad)
mov
or
callw
inc
(bad)
(bad)
(bad)
jmp
mov
daa
xor
inc
shl
mov
in
fisttp
mov
mov
pop
adc
jmp
or
icebp
inc
add
mov
mov
or
mov
mov
inc
cmp
add
mov
mov
(bad)
(bad)
(bad)
fist
xor
push
das
into
pusha
outs
push
iret
and
aaa
mov
ins
cs
(bad)
jmp
repnz
(bad)
div
in
test
test
mov
sub
xor
test
dec
mov
clc
(bad)
(bad)
inc
jbe
cmp
push
neg
dec
mov
jge
inc
out
push
xchg
mov
fdivr
push
cmp
add
or
sbb
(bad)
jmp
cmp
fst
jb
retf
aas
jle
sub
(bad)
(bad)
(bad)
call
bnd
or
xchg
xchg
popf
(bad)
neg
nop
xor
ds
out
mov
and
repz
(bad)
jg
jp
repz
fidivr
jne
cmps
xor
push
(bad)
sbb
(bad)
(bad)
(bad)
inc
sub
jmp
and
pop
sub
or
xor
inc
loopne
ret
test
retf
das
cli
imul
push
adc
mov
mov
inc
int
pop
jle
sar
sub
push
jb
mov
ins
repz
cli
ja
mov
cmp
jg
inc
mov
repnz
clc
fs
fmul
sbb
jmp
in
movs
fdiv
xchg
push
shl
shl
cmp
push
daa
xchg
fcomp
test
sub
adc
mov
inc
cmps
push
in
or
mov
stos
xchg
xchg
cld
daa
mov
dec
xchg
and
mov
or
(bad)
(bad)
jmp
mov
mov
xchg
js
add
or
and
push
cwde
dec
movs
xlat
push
push
(bad)
call
(bad)
in
aas
jp
pop
outs
or
pop
iret
fldcw
push
stc
les
ja
cmp
dec
cmp
jo
sub
cmp
xchg
jmp
fidivr
push
mov
pop
ins
stos
call
jl
and
int3
dec
(bad)
(bad)
push
inc
or
inc
fadd
ret
xor
and
call
cmp
lea
mov
sub
push
loopne
add
xchg
add
push
(bad)
mov
and
or
pop
(bad)
(bad)
inc
xor
loop
je
(bad)
frstor
sti
in
(bad)
loopne
pop
xchg
aaa
inc
sti
jmp
adc
or
xlat
mov
ret
mov
adc
(bad)
(bad)
call
sub
bound
adc
cmp
mov
je
das
mov
in
pop
mov
bound
ds
call
adc
fmul
pmuludq
fstp
mov
inc
call
pop
rcl
mov
adc
hlt
push
sbb
je
adc
(bad)
jmp
retf
inc
cmp
sbb
in
mov
xchg
nop
sbb
iret
push
add
adc
std
jmp
sbb
add
mov
ja
xchg
push
aad
mov
cmc
shl
(bad)
(bad)
(bad)
(bad)
clc
shl
and
or
ss
sub
sub
dec
pop
adc
xor
inc
jns
dec
xlat
cmc
xchg
cs
(bad)
(bad)
dec
mov
imul
mov
xor
dec
push
mov
enter
fistp
(bad)
call
retf
mov
adc
adc
sub
sub
adc
sbb
lods
int
mov
lods
mov
call
(bad)
(bad)
jmp
rcl
inc
nop
ror
mov
xor
aam
data16
(bad)
(bad)
jmp
dec
push
inc
dec
push
inc
xlat
cpuid
inc
xchg
and
xchg
xor
dec
ss
add
ret
sti
cld
(bad)
(bad)
call
push
xor
push
inc
inc
push
xor
ror
int3
add
sbb
mov
xchg
inc
shr
pop
fdiv
jno
push
dec
add
xchg
retf
jae
movs
xor
into
repnz
jne
sub
xor
stos
push
jmp
repnz
dec
mov
cmps
push
ins
(bad)
inc
inc
cs
cld
neg
std
sbb
sbb
push
icebp
mov
sub
(bad)
(bad)
push
push
mov
leave
or
cmps
test
sbb
in
mov
sbb
rcr
idiv
int
push
mov
addr16
dec
add
or
(bad)
popf
ja
loopne
push
out
call
xchg
add
mov
cli
dec
lahf
cmp
outs
sti
mov
stos
dec
xchg
ins
mov
(bad)
(bad)
inc
jae
add
stos
fcom
fbstp
lods
inc
pop
iret
add
jo
xchg
and
cmp
in
(bad)
push
cld
jns
outs
cld
mov
je
xchg
in
leave
imul
(bad)
(bad)
dec
jle
out
clc
not
pop
mov
lods
loopne
je
jge
call
out
(bad)
(bad)
push
sbb
movs
jle
jb
iret
nop
shl
mov
(bad)
sti
pop
mov
cs
jmp
in
pop
dec
mov
sbb
sti
stc
loopne
(bad)
(bad)
jmp
or
ins
dec
movq
neg
xchg
dec
fldpi
pop
fwait
xchg
push
push
dec
sub
out
faddp
push
(bad)
(bad)
fnstsw
push
in
scas
loope
shl
(bad)
call
std
(bad)
cmp
scas
paddw
and
je
sar
cmp
pop
push
das
pop
xor
lods
ret
in
push
sti
mov
and
mov
mov
mov
lods
dec
and
jg
std
loope
pop
mov
fdivr
lea
scas
(bad)
mov
loope
sub
das
jp
jne
adc
(bad)
mov
jne
xchg
push
fistp
hlt
rcr
cmps
add
rcr
add
cli
sti
and
push
mov
sub
pop
cmp
xchg
call
cdq
ins
jmp
mov
into
aas
(bad)
jne
(bad)
call
retf
xlat
pusha
ret
xor
jg
pop
adc
jmp
lea
jmp
adc
sbb
cmps
fwait
xchg
pop
push
cmp
jbe
scas
out
in
outs
loop
pop
fsubr
jnp
mov
inc
rol
aaa
aam
mov
inc
cmps
into
mov
cmp
loope
sahf
scas
pop
lock
fsub
mov
(bad)
xor
fcomp
(bad)
(bad)
dec
inc
xchg
dec
aad
and
mov
mov
arpl
add
das
mov
lock
ret
or
(bad)
(bad)
call
push
scas
inc
and
pop
sahf
enter
jne
mov
in
xchg
test
cs
sub
outs
(bad)
(bad)
(bad)
(bad)
call
bnd
cmp
jae
and
lds
mov
push
xor
call
(bad)
test
loopne
adc
std
inc
inc
and
imul
push
dec
adc
sbb
add
inc
sub
pop
test
sbb
inc
dec
pop
mov
fs
pop
out
aas
jge
sti
mov
int
(bad)
(bad)
jmp
xchg
add
jle
bound
les
mov
cmp
out
add
pop
ds
jl
loop
(bad)
out
cld
and
out
cwde
std
retf
aaa
pop
mov
pop
and
mov
in
fcomp
push
dec
push
sbb
mov
dec
outs
sbb
push
cmp
sub
push
pop
(bad)
sbb
xor
jmp
repnz
mov
xchg
ficomp
(bad)
and
cmp
ins
ins
mov
fs
mov
cmp
pop
sbb
(bad)
call
test
mov
cmp
in
bound
inc
add
adc
(bad)
mov
movq
das
dec
out
and
out
popf
aaa
int3
sbb
ins
stos
adc
rcl
stos
(bad)
jmp
ins
shr
or
(bad)
(bad)
jmp
mov
jmp
fwait
dec
mov
cmp
cmp
lea
push
mov
add
stos
(bad)
inc
push
pop
leave
fwait
push
mov
push
mov
and
push
lahf
daa
sahf
xchg
(bad)
(bad)
(bad)
(bad)
call
push
push
sub
jne
adc
inc
inc
ins
push
add
xor
fild
cmp
jbe
and
push
and
in
(bad)
(bad)
inc
test
push
sub
xchg
cmp
add
xchg
cmps
dec
repnz
dec
dec
xor
mov
inc
xor
sub
push
xchg
or
jnp
xchg
dec
inc
shl
shr
ret
(bad)
(bad)
(bad)
dec
jo
test
mov
dec
xchg
adc
mov
push
or
rcl
xor
jecxz
(bad)
(bad)
jp
es
xor
jne
mov
or
add
inc
sti
pop
hlt
mov
pop
(bad)
fsubr
es
push
push
test
sbb
mov
stos
inc
jge
jo
or
xchg
jle
(bad)
and
dec
cmps
js
xor
popf
loop
das
mov
jl
pop
cmp
(bad)
(bad)
jmp
mov
jae
mov
fild
mov
cmp
stos
retf
stos
or
call
rol
mov
push
sub
sub
add
and
adc
jle
imul
xor
test
or
push
cld
cmp
inc
sbb
data16
cwde
loope
popf
loope
ror
and
call
inc
clc
add
test
push
je
adc
xlat
mov
(bad)
inc
sub
imul
mov
mov
sub
sbb
(bad)
call
iret
adc
cmp
xchg
movs
test
xchg
xlat
mov
sbb
dec
mov
stc
or
mov
cmp
outs
in
mov
(bad)
(bad)
jmp
sbb
dec
in
hlt
int
xor
retf
aaa
sbb
add
(bad)
jmp
jle
cmp
push
push
push
xchg
cmp
scas
xor
cmps
mov
(bad)
xor
shl
and
push
idiv
(bad)
call
lock
jo
arpl
hlt
sbb
icebp
js
inc
movs
adc
es
(bad)
call
sub
ror
xor
scas
and
(bad)
cmp
jo
add
inc
and
pop
jne
push
daa
test
je
push
add
(bad)
dec
push
mov
inc
xchg
ficom
jecxz
mov
mov
or
xchg
in
pop
xchg
mov
dec
push
xchg
(bad)
jl
add
push
and
push
stos
cwde
cmps
ficom
(bad)
(bad)
(bad)
mov
shr
test
sub
and
fidiv
jmp
jmp
pusha
ficom
mov
xchg
lock
push
dec
mov
loopne
add
out
sub
pushf
push
sti
pop
mov
add
sti
das
jo
xchg
adc
aaa
ss
lea
in
in
retf
cmps
enter
fxch
adc
mov
aaa
push
dec
cwde
inc
and
nop
xor
sub
cs
movs
(bad)
call
ins
retf
icebp
movs
fs
mov
loop
movs
dec
and
pop
pop
sub
jmp
jb
xchg
test
lock
shl
ret
retf
cmp
retf
jmp
push
imul
ss
sub
dec
and
fdivr
or
mov
sub
iret
out
pop
call
dec
loopne
mov
rcl
(bad)
(bad)
(bad)
(bad)
fcom
sub
je
cli
es
or
scas
xor
sub
dec
xchg
cmp
sar
(bad)
jmp
cmp
call
js
mov
cmc
ret
(bad)
(bad)
call
jecxz
sti
aas
jbe
fcmovnu
jae
adc
test
mov
gs
jmp
pop
mov
mov
mov
test
ud0
add
and
(bad)
(bad)
imul
push
mov
(bad)
lods
fistp
call
xchg
out
jnp
icebp
idiv
das
push
mov
ss
jmp
sar
adc
sbb
jp
movs
sar
jae
(bad)
(bad)
call
(bad)
mov
clc
mov
in
shl
push
pop
sbb
jmp
mov
idiv
stos
jmp
pop
mov
pop
rcr
test
inc
repnz
popf
xlat
not
(bad)
jnp
stc
add
std
sub
fnstsw
mov
pop
sbb
cli
sub
mov
xlat
pop
sub
repz
jg
cmp
(bad)
fdivr
frstor
jmp
sbb
xor
cmps
pop
jbe
mov
cld
(bad)
(bad)
jmp
scas
mov
push
fcomp
cld
lods
test
mov
(bad)
dec
mov
hlt
in
jmp
in
sub
pop
push
lea
jp
call
es
push
jmp
popaw
mov
leave
sar
sbb
sar
in
dec
cli
cli
pop
in
pop
ja
xchg
mov
movs
inc
pusha
inc
pop
adc
pop
mov
push
in
jle
(bad)
(bad)
jmp
push
xor
xchg
xchg
push
add
mov
xlat
daa
lea
(bad)
inc
add
(bad)
(bad)
(bad)
cmp
cmp
cmp
push
inc
cmps
jmp
lahf
cwde
add
mov
xchg
(bad)
jmp
mov
in
loope
sbb
jmp
and
loope
(bad)
jecxz
(bad)
push
loop
xchg
mov
or
xchg
dec
das
push
sub
bound
ror
dec
out
pop
xor
(bad)
jmp
test
xor
rcl
clc
xchg
xchg
xor
loop
out
add
pop
mov
adc
jbe
daa
mov
cs
in
ud0
(bad)
(bad)
cld
repz
(bad)
lods
out
mov
push
mov
push
pop
mov
pop
cmc
mov
movs
cmp
mov
jb
pusha
mov
xor
mov
push
push
ins
and
xor
je
push
(bad)
test
push
test
inc
nop
pop
xlat
lahf
(bad)
(bad)
(bad)
inc
add
daa
push
ds
xor
sub
icebp
stc
std
cmp
xlat
(bad)
dec
pusha
ret
inc
mov
shl
mov
fnsave
xchg
push
aaa
mov
adc
popa
adc
dec
push
and
xsaves
and
(bad)
adc
(bad)
(bad)
(bad)
hlt
push
xchg
jmp
jne
out
jns
jo
and
add
(bad)
(bad)
call
and
repnz
outs
xor
sub
cmp
nop
mov
(bad)
jmp
xchg
int3
add
add
xchg
imul
xor
add
cmps
shl
ficomp
adc
sub
push
loopne
ret
test
and
(bad)
fist
iret
or
jl
sbb
repz
les
mov
clc
dec
sub
(bad)
(bad)
inc
pop
leave
or
sub
in
sahf
popa
pop
or
add
cwde
inc
fwait
sub
or
xchg
(bad)
(bad)
jmp
push
popa
imul
push
mov
cdq
inc
push
sbb
scas
xchg
add
in
js
adc
or
xor
mov
adc
xor
(bad)
(bad)
push
sbb
scas
mov
cld
cmp
pop
test
or
mov
(bad)
(bad)
(bad)
mov
dec
and
push
jle
sbb
sub
arpl
pop
cmp
call
cmp
cmps
lock
fidiv
mov
sbb
jbe
and
inc
dec
mov
pop
dec
sub
sbb
icebp
clc
in
cmp
mov
adc
sar
sub
imul
jg
in
xchg
or
stos
sbb
and
ss
or
xor
push
(bad)
(bad)
(bad)
dec
or
or
jno
(bad)
repnz
dec
inc
sahf
mov
adc
jl
or
sar
(bad)
(bad)
inc
and
jb
ss
or
cmp
movs
dec
push
mov
mov
pop
cmp
popf
jmp
(bad)
(bad)
mov
inc
push
and
sub
dec
into
dec
lea
in
add
push
repnz
(bad)
(bad)
push
and
cmps
push
fdivr
das
sub
inc
add
inc
pop
push
adc
push
shl
sar
call
mov
mov
bound
(bad)
ins
xchg
mov
xor
(bad)
mov
xor
pop
int
and
xchg
in
mov
retf
cmp
mov
mov
add
scas
jmp
stos
xor
mov
(bad)
call
sti
and
sub
call
pop
cmp
cmp
hlt
popf
inc
shl
sbb
sub
push
or
xchg
test
aaa
in
ret
dec
pusha
mov
cwde
and
lods
sbb
adc
jmp
sub
fs
dec
dec
loopne
(bad)
call
rcr
sbb
xchg
or
pop
pushaw
test
mov
jecxz
jbe
jns
(bad)
jmp
mov
xor
push
dec
pop
pop
popf
pushf
lods
pushf
leave
mov
(bad)
(bad)
(bad)
push
rol
mov
xor
cmp
mov
push
adc
in
enter
xor
(bad)
(bad)
jmp
mov
xlat
outs
mov
mov
mov
inc
adc
bound
or
stos
mov
ret
and
(bad)
(bad)
jmp
push
(bad)
shr
pop
push
mov
pop
jne
inc
test
js
or
dec
and
inc
xchg
sub
(bad)
(bad)
(bad)
jmp
data16
rcl
lods
dec
xchg
(bad)
shl
call
mov
jne
sbb
call
mov
cld
mov
dec
out
mov
cld
ds
(bad)
(bad)
(bad)
(bad)
cmp
mov
aad
cs
adc
jb
dec
or
mov
pop
sahf
gs
cli
(bad)
(bad)
jmp
sub
add
xchg
inc
sub
rcl
adc
inc
sub
(bad)
(bad)
(bad)
(bad)
out
call
jl
mov
iret
xchg
or
fnsave
jmp
jb
outs
xchg
push
mov
adc
sub
inc
add
(bad)
jg
jae
jl
mov
mov
push
in
inc
cli
aam
test
push
outs
test
xlat
in
(bad)
jge
xlat
cwde
fidivr
mov
(bad)
(bad)
dec
in
inc
mov
sahf
mov
cs
push
ins
call
jno
(bad)
(bad)
(bad)
inc
jae
pop
out
leave
in
popf
scas
dec
dec
xor
mov
jl
(bad)
jle
jl
add
ss
shr
mov
stos
push
(bad)
(bad)
(bad)
cmp
xchg
imul
dec
in
repz
and
dec
pop
cld
(bad)
(bad)
dec
mov
jne
repz
pop
imul
repz
push
jle
sahf
pop
fdivp
xchg
repz
dec
loop
or
and
lea
mov
loopne
into
sbb
gs
jle
pusha
cld
jmp
mov
adc
loop
dec
sbb
(bad)
idiv
sbb
out
and
lock
jg
call
jns
xchg
mov
and
mov
scas
jmp
std
pushf
lock
scas
cli
(bad)
call
rol
jnp
outs
cmp
cs
fst
rcr
movs
lea
cmp
push
jecxz
ret
xchg
pop
std
retf
(bad)
dec
or
jle
daa
and
arpl
jg
and
pop
jg
or
aas
mov
(bad)
(bad)
jmp
mov
adc
in
sahf
jbe
cwde
sbb
or
adc
popf
(bad)
(bad)
(bad)
dec
imul
dec
cmps
jns
push
sub
jbe
inc
add
jg
push
ret
daa
arpl
or
sub
dec
inc
jbe
ret
mov
aaa
push
add
jmp
jmp
mov
dec
js
jecxz
sti
js
xchg
sbb
(bad)
(bad)
dec
sbb
xor
enter
xor
(bad)
into
scas
pushf
pop
imul
(bad)
(bad)
(bad)
(bad)
jns
ja
pop
xchg
sbb
push
sbb
aam
jmp
mov
xchg
lds
ss
cmp
lods
or
adc
inc
out
lea
xchg
cli
dec
out
xchg
jl
jmp
clc
pop
je
outs
jnp
add
or
mov
dec
dec
(bad)
pop
ret
pop
retf
pop
pop
xor
loop
sbb
mov
(bad)
dec
jle
int3
push
sbb
sbb
xor
sbb
push
shr
out
sub
ja
sub
mov
pop
xor
xor
call
in
cmps
xlat
xchg
xchg
fs
rcl
jns
dec
adc
push
aam
aad
(bad)
(bad)
(bad)
push
aaa
add
xor
dec
or
or
test
and
mov
inc
(bad)
push
cwde
movs
and
lods
scas
cld
jecxz
imul
(bad)
(bad)
dec
adc
test
xchg
(bad)
inc
dec
or
addr16
pop
pop
mov
(bad)
(bad)
call
(bad)
lds
mov
ds
cmps
arpl
data16
sub
das
cmps
lds
adc
into
mov
cld
(bad)
jmp
jns
adc
fs
std
sub
mov
inc
fist
ret
nop
adc
(bad)
(bad)
(bad)
jmp
loopne
and
inc
or
jnp
adc
pusha
sub
mov
jno
mov
dec
add
cmp
mov
(bad)
(bad)
dec
mov
cmp
sar
and
movs
je
movs
test
(bad)
(bad)
(bad)
inc
or
pop
adc
adc
mov
dec
xchg
inc
dec
add
adc
(bad)
(bad)
call
das
or
popa
loopne
mov
(bad)
pop
push
fwait
mov
adc
add
es
clc
ds
(bad)
(bad)
(bad)
inc
jno
cmp
cdq
popa
mov
sub
sbb
call
pop
into
pop
mov
(bad)
call
dec
mov
mov
iret
push
popa
test
dec
add
loopne
xchg
xor
(bad)
push
js
mov
das
mov
xchg
inc
mov
das
sub
pop
addr16
(bad)
(bad)
jg
dec
cmps
xor
movs
int
(bad)
in
mov
daa
call
repnz
or
mov
cmp
loope
in
sub
lock
dec
or
mov
les
push
jbe
(bad)
(bad)
(bad)
jmp
xor
pop
mov
lea
or
xor
bound
and
add
xchg
(bad)
(bad)
(bad)
(bad)
mov
fst
adc
mov
or
mov
jne
ja
shl
test
mov
push
sbb
ret
pop
daa
mov
xchg
sbb
lock
jmp
inc
test
iret
inc
cdq
in
inc
cwde
mov
enter
jmp
(bad)
fcomip
shr
out
sub
pop
and
je
add
dec
cmp
(bad)
(bad)
dec
out
cmp
in
xor
adc
popa
mov
add
enter
(bad)
(bad)
mov
cwde
cmc
cmps
add
jmp
pop
test
inc
xor
or
(bad)
(bad)
jmp
pushf
push
clc
push
xchg
mov
push
in
add
int
sub
and
loope
xor
xchg
push
cld
jmp
mov
cwde
adc
push
dec
(bad)
(bad)
dec
test
mov
or
xor
add
stos
(bad)
(bad)
(bad)
inc
mov
and
ins
and
mov
fs
out
xchg
push
cld
dec
xor
into
jo
mov
iret
in
add
outs
outs
ja
iret
repz
call
dec
lods
mov
add
and
ins
test
(bad)
call
loopne
pop
shl
aaa
retf
pusha
cdq
sub
addr16
call
das
cli
pop
cld
aad
inc
pop
cli
imul
pop
retf
inc
push
je
loope
cmps
(bad)
(bad)
(bad)
jmp
cmp
push
fwait
and
cmp
leave
adc
or
adc
(bad)
call
cmc
out
or
xchg
ins
dec
jecxz
fbstp
xchg
mov
shr
pop
xor
cld
adc
mov
ja
(bad)
(bad)
mov
sbb
aam
bound
cmp
pusha
cmp
pop
push
outs
in
mov
(bad)
(bad)
(bad)
jmp
add
mov
mov
call
jg
mov
fistp
into
jge
(bad)
(bad)
inc
addr16
dec
dec
mov
ds
jne
sar
pop
pusha
icebp
xchg
mov
(bad)
(bad)
(bad)
jg
add
inc
adc
inc
push
popf
cmp
jge
shl
jb
and
cdq
cmp
(bad)
call
sub
jecxz
cmps
aam
pop
dec
fs
div
xor
sbb
adc
sub
mov
xchg
and
lods
push
jmp
data16
outs
cmp
in
neg
(bad)
jg
push
sti
lahf
mov
xlat
(bad)
(bad)
(bad)
mov
push
icebp
pop
mov
fwait
aad
jg
jbe
dec
cmc
pop
xor
(bad)
(bad)
(bad)
(bad)
jno
movs
stos
lods
mov
mov
mov
mov
jmp
dec
mov
push
add
rcr
out
stos
or
(bad)
(bad)
(bad)
call
shr
inc
xor
ins
adc
mov
enter
or
fldcw
push
lds
or
sub
sbb
lock
ss
call
(bad)
pop
(bad)
shl
fistp
jno
sbb
jl
(bad)
(bad)
(bad)
jl
ja
ds
outs
std
push
xor
lahf
mov
aaa
sti
pop
mov
jmp
dec
neg
cdq
test
shl
mov
in
div
mov
outs
(bad)
hlt
inc
popf
adc
jmp
rcr
mov
in
push
rol
(bad)
push
jmp
fisub
fisubr
push
test
out
mov
imul
lods
mov
cmp
cld
mov
mov
fnstenvw
rol
mov
cld
aam
fdiv
dec
jecxz
xchg
cmp
mov
push
inc
(bad)
jle
add
outs
mov
push
add
jno
arpl
pop
mov
(bad)
(bad)
(bad)
dec
sahf
dec
es
xlat
pop
stc
cmp
cmp
mul
jge
ficomp
mov
(bad)
(bad)
(bad)
(bad)
call
push
repnz
lahf
mov
clc
xchg
add
adc
mov
jb
(bad)
jmp
push
pusha
shl
sahf
dec
leave
fstp
ins
mov
stos
jne
(bad)
jmp
(bad)
(bad)
jmp
jl
ja
adc
jp
mov
jnp
pop
mov
retf
je
pop
hlt
mov
cmc
dec
(bad)
(bad)
(bad)
call
pop
mov
in
adc
call
adc
test
fwait
adc
(bad)
call
shl
cmp
or
jns
dec
ja
(bad)
or
jg
pusha
and
dec
inc
pop
xor
jno
mov
jmp
cwde
sub
jne
fiadd
mov
push
gs
or
xchg
call
ins
pop
iret
sbb
jb
xor
loopne
mov
test
stos
or
mov
mov
fimul
mov
jge
push
mov
(bad)
(bad)
(bad)
push
xchg
test
xchg
clc
sub
js
fld
mov
mov
clc
fsubr
pop
adc
pop
(bad)
xor
sub
and
dec
ja
(bad)
mov
mov
xchg
(bad)
popf
mov
stos
in
imul
jb
(bad)
(bad)
call
fcmovnu
adc
sbb
sub
sub
dec
pop
in
lds
push
stos
adc
in
ins
cwde
(bad)
fwait
(bad)
and
das
arpl
pop
cmp
(bad)
mov
loop
or
jmp
adc
in
xchg
fnstenv
xchg
cmp
movsx
(bad)
dec
repz
stc
push
sbb
shl
stos
test
loope
sbb
adc
mov
sbb
xchg
cmp
mov
mov
daa
sub
repnz
test
rcl
or
mov
lock
sub
mov
(bad)
shr
rcr
dec
aam
mov
mov
jo
cwde
mov
nop
jle
mov
inc
or
loop
mov
dec
in
sub
mov
mov
fisttp
push
xchg
ret
(bad)
(bad)
(bad)
inc
cmp
js
scas
dec
mov
lea
push
and
(bad)
jmp
xor
repnz
sub
(bad)
(bad)
(bad)
call
ret
jb
lock
pop
cmp
xor
dec
mov
test
mov
inc
jae
or
(bad)
(bad)
(bad)
dec
das
push
cmps
push
adc
sbb
jb
pop
daa
cld
arpl
cmp
push
dec
dec
fwait
pop
(bad)
mov
in
jo
xchg
cmp
or
out
push
sub
sahf
hlt
pop
and
dec
imul
(bad)
(bad)
jnp
inc
xlat
loopne
iret
jno
movs
imul
retf
or
mov
in
retf
and
(bad)
(bad)
(bad)
dec
les
cli
dec
pusha
mov
aas
icebp
add
or
nop
cmps
pop
dec
mov
inc
adc
xor
stos
inc
mov
nop
add
popa
adc
(bad)
(bad)
call
ror
iret
mov
(bad)
mov
adc
(bad)
(bad)
(bad)
call
push
leave
repz
sub
retf
xchg
or
adc
and
jle
fisubr
jo
pop
sahf
mov
mov
xlat
push
jns
or
repz
in
ss
hlt
(bad)
mov
ret
inc
adc
out
cmps
mov
mov
std
call
out
lea
mov
xor
gs
(bad)
call
loopne
mov
add
scas
and
adc
test
(bad)
(bad)
mov
inc
inc
data16
loopne
mov
or
cmp
fdiv
dec
xchg
leave
adc
je
and
(bad)
(bad)
(bad)
inc
adc
push
jle
mov
test
retf
xchg
push
mov
mov
cmp
inc
fimul
and
push
and
cmp
outs
outs
sbb
or
ins
and
and
test
les
jbe
pop
(bad)
lods
out
adc
fiadd
or
jg
add
fs
ins
mov
pusha
bound
push
and
cli
mov
push
out
mov
(bad)
(bad)
call
inc
lods
add
xchg
movs
lock
(bad)
jmp
mov
lea
sbb
mov
ror
inc
push
scas
mov
dec
and
sbb
pop
call
(bad)
(bad)
(bad)
jle
mov
int
stc
out
dec
cmp
gs
lods
mov
dec
pushf
mov
test
cld
(bad)
call
movs
push
mov
adc
xchg
sbb
cmp
mov
jmp
sbb
rep
jae
mov
xor
push
retf
cli
aaa
or
mov
sar
or
mov
out
xchg
add
xor
add
das
nop
mov
lock
repnz
mov
mov
(bad)
and
(bad)
(bad)
jmp
or
fistp
xchg
cmc
cmps
mov
movs
fistp
sub
add
mov
push
std
add
test
(bad)
sti
into
dec
sub
stc
test
call
cmps
push
test
xor
les
mov
(bad)
dec
pushf
js
daa
adc
dec
jl
mov
lds
mov
jmp
dec
std
js
ret
in
scas
sbb
or
jb
xlat
mov
dec
pop
mov
cmp
jl
mov
stc
out
les
jmp
mov
mov
mov
call
jg
(bad)
(bad)
push
in
ins
pop
mov
jmp
add
mov
dec
lock
test
and
bnd
dec
lock
xchg
pop
mov
(bad)
(bad)
std
into
dec
pop
(bad)
sub
fdivrp
sahf
(bad)
loop
pop
test
iret
jg
loope
jmp
mov
dec
(bad)
test
dec
jg
xor
mov
imul
enter
test
mov
mov
mov
lods
pop
in
cmp
inc
(bad)
(bad)
push
xchg
sbb
or
add
xchg
jnp
cdq
scas
call
adc
xchg
lods
scas
(bad)
(bad)
(bad)
inc
fdivr
pop
pop
js
lock
rol
aad
sbb
push
mov
fstp
xlat
pop
adc
push
(bad)
(bad)
cmp
xor
jnp
xor
jge
inc
or
xor
sbb
(bad)
(bad)
dec
into
pop
call
cmc
lock
out
fwait
jne
fs
cmps
sbb
(bad)
sub
(bad)
(bad)
jmp
or
push
retf
leave
cmps
popf
xor
sar
ror
adc
inc
jmp
(bad)
(bad)
(bad)
cmp
jae
add
inc
xor
push
js
arpl
gs
ds
inc
pop
xor
jmp
dec
adc
xchg
cmps
arpl
push
sbb
movs
sahf
bound
(bad)
jg
(bad)
aam
shl
jne
cmc
mov
ss
aas
aaa
xor
push
inc
sub
adc
test
mul
mov
pop
mov
es
inc
sub
lock
dec
dec
loope
(bad)
fcomp
outs
cmp
jp
aaa
fnsave
ficomp
jg
(bad)
jg
mov
push
mov
jmp
xrelease
int
sbb
call
xor
outs
std
loope
dec
outs
inc
scas
sbb
daa
xor
scas
sub
adc
cmp
loop
imul
out
cli
div
test
sub
aaa
inc
inc
pop
adc
(bad)
mov
jg
and
jge
mov
fwait
jle
push
movs
add
call
lods
mov
stos
rcl
lods
aad
lds
iret
inc
inc
cmp
or
fcomp
pop
push
push
dec
enter
dec
inc
push
mov
stos
push
pop
lods
sbb
add
dec
sbb
jl
sar
scas
jle
dec
fcom
add
cmp
inc
stos
(bad)
(bad)
int3
ret
xchg
jbe
cmp
adc
icebp
dec
mov
and
(bad)
(bad)
dec
nop
sub
or
aas
inc
jno
xchg
out
sbb
fwait
or
fst
fisubr
scas
(bad)
xor
fild
(bad)
(bad)
(bad)
mov
jmp
fs
adc
xor
jno
pusha
adc
aas
and
adc
leave
mov
arpl
int3
lea
mov
push
nop
add
test
popf
mov
stos
sub
mov
fcomi
jge
lea
outs
adc
dec
pop
mov
and
mov
mov
sbb
dec
sahf
out
inc
dec
shl
es
aam
mov
fdiv
fwait
push
add
push
inc
in
push
add
jbe
inc
jo
(bad)
(bad)
push
pusha
cmp
pop
sar
dec
in
retf
jne
(bad)
cmps
or
loope
push
mov
adc
or
xor
sar
mov
mov
jge
adc
add
push
mov
adc
ins
add
and
pusha
dec
rcr
das
cli
test
pusha
jnp
fcomp
call
dec
mov
stos
jnp
(bad)
(bad)
call
mov
sub
sahf
nop
push
jo
fisttp
mov
push
mul
inc
int
into
push
sar
mov
add
push
(bad)
jle
xor
outs
xchg
push
jb
scas
inc
das
addr16
shl
push
mov
bound
adc
sbb
xchg
ss
(bad)
jg
or
sub
cs
xor
sbb
mov
ins
pop
pop
cmp
dec
push
clc
pop
and
cwde
inc
adc
aam
idiv
adc
mov
jmp
jae
push
(bad)
(bad)
(bad)
jae
cmp
int3
rol
xchg
xchg
push
mov
adc
stos
or
gs
jp
ret
push
xchg
sar
cli
(bad)
dec
jmp
pusha
jns
or
xchg
and
mov
das
or
cmps
jmp
aaa
adc
xchg
ins
repz
push
inc
xor
push
cmp
lahf
fstp
cmp
pop
mov
ds
rcl
retf
mov
jo
add
(bad)
call
fwait
mov
or
mov
inc
push
sub
dec
sbb
repnz
jae
stos
inc
cld
dec
in
pop
es
in
or
fadd
retf
hlt
inc
shl
(bad)
jmp
cmps
xchg
adc
call
jl
add
shl
loope
sub
pop
hlt
dec
xchg
in
jo
(bad)
(bad)
mov
adc
int3
call
pop
sub
sti
enter
(bad)
(bad)
dec
adc
dec
inc
scas
adc
push
(bad)
or
mov
or
sti
(bad)
mov
push
(bad)
std
inc
lea
loopne
xchg
xor
mov
gs
pop
sub
(bad)
inc
ins
push
dec
and
xchg
call
pop
xchg
add
loop
mov
std
scas
(bad)
(bad)
js
es
(bad)
jle
sub
mov
test
mov
inc
shl
(bad)
push
ins
push
inc
and
push
xchg
js
mov
cmp
pop
mov
cmps
(bad)
jmp
dec
fcom
ds
sbb
outs
or
adc
dec
call
fadd
mov
mov
cmp
pop
jle
je
(bad)
out
dec
(bad)
(bad)
(bad)
call
mov
or
fdiv
ror
mov
push
xor
idiv
(bad)
or
(bad)
(bad)
inc
mov
pop
pop
cwde
xchg
cmp
in
dec
mov
xor
lahf
jle
scas
out
not
cmp
(bad)
fistp
out
sub
fimul
mov
and
jg
movs
retf
iret
add
fdiv
mov
rol
das
xchg
sub
test
adc
std
lds
clc
(bad)
jmp
inc
bound
dec
xor
push
stos
cmp
pusha
cmp
shl
scas
jmp
(bad)
jns
(bad)
lds
rcl
in
(bad)
stos
out
xor
mov
and
out
jg
mov
mov
or
out
fsubp
fdivr
icebp
inc
mov
xor
mov
jecxz
jp
out
aaa
fdivp
das
(bad)
fstp
cld
out
lahf
(bad)
in
cmc
(bad)
(bad)
mov
xchg
repz
lock
push
jno
lea
pop
adc
xor
mov
dec
cmp
(bad)
fistp
xchg
mov
adc
push
test
loop
sbb
xchg
inc
fistp
push
push
jle
(bad)
jg
into
pop
popf
pop
dec
out
jge
iret
fbstp
xor
xchg
xchg
xchg
outs
jg
jmp
scas
sbb
xor
and
cs
imul
fsincos
setg
inc
cld
std
mov
pop
(bad)
xor
xchg
sbb
mov
push
pop
push
rcr
retf
cmps
(bad)
(bad)
(bad)
call
(bad)
outs
pop
or
lahf
sahf
mov
mov
mov
push
js
jecxz
(bad)
(bad)
(bad)
(bad)
loopne
pop
mov
ror
loope
cmp
jnp
outs
ja
pop
(bad)
cmps
mov
sbb
jmp
(bad)
(bad)
jmp
(bad)
in
jns
div
out
fistp
mov
add
xor
pop
(bad)
jg
or
fnsave
ret
cmp
inc
icebp
fdivr
inc
test
ins
pop
mov
mov
sub
pop
test
(bad)
(bad)
dec
jae
enter
ror
bound
sti
shr
jecxz
mov
push
in
(bad)
(bad)
(bad)
call
dec
or
arpl
cmp
and
sbb
aam
movs
mov
xor
(bad)
jl
cld
(bad)
(bad)
dec
imul
dec
sahf
in
imul
jmp
call
(bad)
into
aaa
(bad)
inc
xor
and
xor
adc
xchg
sub
mov
mov
inc
add
xchg
clc
adc
js
mov
or
(bad)
ins
and
test
cmp
jnp
(bad)
cmps
sti
test
clc
call
ret
xor
(bad)
scas
hlt
jo
popf
idiv
push
dec
push
loope
je
cmc
test
push
stos
imul
(bad)
(bad)
(bad)
dec
or
out
xchg
sub
test
sbb
and
mov
mov
jg
dec
gs
les
cmp
push
imul
(bad)
(bad)
jmp
lds
push
ret
not
sub
push
mov
dec
push
inc
adc
(bad)
jg
jl
jnp
outs
cmp
aam
sub
not
arpl
in
pop
jge
and
repz
(bad)
(bad)
(bad)
inc
dec
outs
push
ins
xchg
adc
nop
inc
inc
out
pushf
les
test
jmp
je
loopne
xor
std
(bad)
(bad)
jmp
mov
inc
sub
mov
mov
stc
jb
inc
jl
mov
inc
mov
test
call
inc
sub
fs
and
jno
dec
push
mov
les
push
shl
fcomp
das
mov
popf
mov
mov
push
cmp
ja
dec
inc
and
cmp
into
fidiv
(bad)
(bad)
jnp
xchg
out
sub
add
xchg
sbb
jge
(bad)
push
sbb
jg
(bad)
inc
and
enter
rcr
cs
scas
sub
cmp
xchg
(bad)
(bad)
(bad)
jmp
enter
inc
xor
jnp
pop
sbb
mov
ss
adc
inc
(bad)
(bad)
(bad)
call
mov
and
pop
loopne
loope
push
add
or
rcr
or
mov
rcl
test
and
inc
push
popa
jge
pop
iret
jg
mov
enter
push
call
inc
mov
or
push
push
mov
xor
(bad)
cmp
push
cmps
adc
mov
and
call
ret
daa
add
retf
aas
cld
enter
jbe
mov
xor
dec
or
mov
or
ror
jae
retf
jmp
js
in
mov
push
and
sbb
(bad)
jmp
mov
jo
jnp
jnp
leave
ja
loop
shr
mov
adc
push
ins
jo
(bad)
(bad)
(bad)
jmp
jns
adc
xchg
repz
mov
bound
mov
aaa
mov
and
xor
or
data16
(bad)
(bad)
dec
sbb
xchg
and
inc
call
push
add
cmp
repz
(bad)
(bad)
jg
push
mov
inc
outs
std
mov
cmc
ret
std
cmp
fcomip
(bad)
(bad)
(bad)
dec
xchg
repz
int
pop
stos
cmp
mov
popf
retf
xlat
outs
call
fiadd
add
jmp
push
and
cmp
movs
xor
out
pop
sbb
(bad)
dec
add
xor
cmp
push
mov
in
(bad)
(bad)
(bad)
jmp
in
lock
fld
mov
jmp
inc
inc
adc
or
jno
inc
cld
inc
mov
pushf
(bad)
or
hlt
(bad)
(bad)
stc
adc
bound
push
xchg
or
out
ins
sub
inc
enter
inc
dec
enter
int
push
xchg
or
fdivr
test
std
adc
sahf
or
fcomp
cmp
(bad)
call
daa
xor
mov
xchg
sub
jmp
xchg
xchg
pop
xchg
dec
enter
(bad)
(bad)
dec
sub
lods
xchg
mov
ret
sahf
push
cmc
aam
cdq
imul
clc
mov
(bad)
inc
ds
sbb
xchg
mov
jnp
push
imul
dec
jg
(bad)
dec
and
sub
dec
push
cdq
and
popa
repnz
pop
(bad)
(bad)
(bad)
call
xchg
sbb
mov
clc
dec
data16
ins
jns
je
sbb
xchg
dec
call
ins
cmps
lods
add
aas
nop
sbb
mov
mul
dec
data16
or
fcomip
jge
scas
jno
das
sub
into
mov
(bad)
(bad)
(bad)
dec
and
xchg
and
ret
or
out
test
mov
lock
call
push
test
sbb
(bad)
jmp
jo
scas
mov
sub
and
xor
(bad)
(bad)
mov
arpl
gs
addr16
iret
std
fcmovne
mov
cmp
lea
xor
(bad)
(bad)
(bad)
jg
inc
std
dec
cdq
les
je
lock
pop
adc
daa
xchg
test
ins
leave
push
cld
jmp
cmps
stos
push
ins
adc
in
(bad)
dec
les
dec
push
iret
adc
nop
mov
dec
add
add
retf
(bad)
std
ins
fwait
mov
(bad)
jmp
rol
sahf
aam
jmp
aam
ja
cld
dec
outs
in
fbstp
push
fadd
jbe
(bad)
(bad)
(bad)
inc
imul
jl
loop
out
sbb
xchg
mov
jmp
jnp
fcomp
(bad)
(bad)
(bad)
call
mov
(bad)
cmp
(bad)
fnstenv
cmp
inc
fistp
ret
cmps
aad
or
in
das
(bad)
push
dec
jo
inc
(bad)
jmp
fs
outs
push
stos
cwde
rol
add
pusha
jne
rol
(bad)
cmp
frstor
int3
cmps
mov
fistp
outs
mov
sub
loopne
fstp
loop
mov
adc
(bad)
(bad)
(bad)
out
lock
mov
popa
mov
div
mov
jle
call
(bad)
(bad)
js
sahf
cmp
aaa
mov
inc
cmps
push
ss
sub
lock
mov
pop
(bad)
push
sbb
cmps
in
(bad)
(bad)
(bad)
fistp
mov
jae
push
(bad)
fxam
rcr
jno
jge
out
bound
stos
fwait
lahf
xor
aam
arpl
(bad)
(bad)
jmp
fcom
and
add
test
icebp
cmp
(bad)
mov
sti
(bad)
(bad)
(bad)
jmp
pop
shr
sub
shl
or
mov
retf
mov
pop
sti
(bad)
(bad)
jmp
sub
fs
sbb
sbb
adc
push
xor
lahf
xchg
and
(bad)
(bad)
jg
and
push
xor
cli
xor
repnz
inc
lods
(bad)
mov
sub
add
sbb
nop
je
inc
test
(bad)
(bad)
(bad)
jle
jecxz
shl
mov
lds
rcl
sbb
scas
pop
fild
(bad)
(bad)
push
xchg
in
push
sub
mov
sub
leave
test
hlt
jl
(bad)
(bad)
dec
xor
mov
das
stos
and
or
dec
stos
fild
mov
pushf
mov
(bad)
dec
icebp
and
mov
sbb
jne
movs
mov
cmp
jle
int3
or
call
shr
scas
hlt
jne
jp
mul
push
adc
(bad)
(bad)
mov
add
push
adc
push
jmp
mov
es
or
div
cmps
loope
sbb
(bad)
retf
sbb
std
cmp
(bad)
(bad)
jmp
cwde
sbb
cmps
gs
push
mov
aad
push
adc
data16
mov
jae
sbb
adc
cld
cld
rcl
icebp
stc
call
stos
test
mov
jmp
push
rol
mov
mov
dec
sub
dec
aaa
and
xchg
inc
cmp
inc
dec
xchg
sahf
jnp
(bad)
popf
aaa
das
sar
ret
add
mov
retf
jno
dec
cmps
sahf
or
dec
sar
(bad)
(bad)
jmp
inc
stos
lods
ss
cmps
sub
jnp
fild
pop
mov
xchg
xchg
sbb
int
pop
test
(bad)
jmp
cld
sbb
mov
sub
inc
xchg
push
xor
xlat
daa
fisttp
or
xchg
fiadd
lea
or
adc
adc
daa
fs
sbb
dec
jg
mov
(bad)
(bad)
jg
jecxz
xor
xchg
push
sti
xor
mov
pusha
mov
rol
(bad)
push
sbb
mov
lods
rol
jmp
outs
push
inc
adc
in
and
xlat
sub
test
ins
cs
(bad)
inc
sbb
addr16
mov
jmp
ds
xchg
cmp
out
(bad)
adc
fdivr
cmps
fnstsw
add
jle
mov
xchg
sub
xchg
(bad)
jmp
ins
and
dec
and
mov
aaa
test
clc
fbld
inc
outs
xchg
dec
push
inc
(bad)
test
jmp
dec
mov
sbb
jbe
sbb
jns
(bad)
dec
mov
mov
mov
xor
fcom
cmc
mov
(bad)
retf
call
dec
and
mov
(bad)
pop
ficomp
stc
sub
retf
fdivr
scas
jb
sub
pop
or
dec
out
out
mov
fs
retf
stos
inc
sbb
aad
jae
mov
(bad)
(bad)
(bad)
call
mov
xchg
fist
mov
fwait
pop
pop
inc
mov
xor
ds
pop
test
ud0
(bad)
jmp
enter
xor
cmp
mov
pop
xchg
dec
cmps
add
cmp
iret
(bad)
fcomip
(bad)
cmp
sub
push
jne
or
fdivr
xor
mov
pop
call
fwait
add
mov
add
mov
aam
push
and
inc
(bad)
call
cmp
add
jmp
lahf
sbb
lahf
shl
(bad)
(bad)
jmp
inc
frstor
fisttp
ror
jae
pop
imul
imul
mov
cmp
test
ja
imul
mov
mov
cmps
movs
and
inc
outs
mov
(bad)
retf
pop
fcom
xchg
mov
test
sbb
call
mov
mov
or
xor
add
or
test
adc
and
(bad)
(bad)
(bad)
(bad)
cmp
mov
sbb
shl
movs
add
daa
or
aam
and
sub
call
inc
fwait
sub
inc
or
xor
inc
test
retf
mov
mov
(bad)
(bad)
(bad)
in
cmp
pop
adc
xor
xchg
adc
lahf
leave
mov
int
out
ins
ret
or
mov
xor
push
stos
gs
sub
test
pop
xor
mov
push
ror
sbb
inc
xor
sti
mov
xchg
add
enter
popa
cdq
xchg
inc
fdivr
jmp
cdq
arpl
ret
push
sti
mov
mov
hlt
xchg
pop
loop
loopne
fdiv
fwait
push
icebp
(bad)
dec
cdq
aam
mov
movs
push
shl
jp
pushf
mov
bound
dec
mov
lds
xor
jbe
inc
dec
cmp
cmp
sub
into
popa
mov
(bad)
(bad)
call
cmp
and
xchg
sub
mov
xchg
xchg
cdq
add
and
es
ins
(bad)
jmp
mov
push
mov
loope
and
or
adc
(bad)
(bad)
mov
adc
inc
mov
and
xchg
sbb
test
dec
sbb
adc
xchg
fwait
imul
ss
or
cmp
es
cmp
(bad)
(bad)
inc
add
retf
int
sbb
push
cmp
add
test
push
fdiv
pop
sahf
pop
mov
out
js
mov
mov
inc
xchg
dec
gs
in
pop
sub
push
xlat
movs
ds
call
xchg
popf
xchg
push
fld
inc
in
(bad)
cli
arpl
ja
clc
addr16
jmp
out
mov
jge
(bad)
jmp
loop
fdiv
sub
cwde
loop
das
out
iret
leave
mov
ret
(bad)
(bad)
call
dec
xchg
call
out
jns
xchg
adc
nop
ror
imul
loope
dec
sbb
das
adc
test
mov
push
aaa
jg
(bad)
(bad)
jge
push
scas
shl
pop
idiv
jne
icebp
mov
push
retf
dec
mov
mov
mov
pop
cs
jge
out
mov
imul
(bad)
xchg
dec
(bad)
call
xor
pop
mov
rcl
and
inc
out
sti
inc
cmp
(bad)
push
aam
jae
data16
jl
iret
dec
ror
movs
lea
(bad)
or
loopne
aad
scas
in
push
push
xlat
push
pushf
push
scas
dec
(bad)
(bad)
(bad)
(bad)
inc
adc
in
sti
dec
outs
cmp
popf
sbb
push
(bad)
mov
cdq
dec
stos
jl
(bad)
xchg
stos
(bad)
(bad)
(bad)
jmp
adc
jecxz
xchg
retf
cmps
cmp
jno
fild
retf
cmp
mov
(bad)
(bad)
push
push
nop
adc
and
push
ins
loop
pushf
loopne
sub
xor
add
adc
(bad)
jmp
inc
jno
hlt
movs
cwde
div
mov
mov
pop
jmp
adc
push
inc
cmps
sbb
(bad)
(bad)
(bad)
dec
pop
mov
or
in
jl
mov
mov
daa
icebp
mov
inc
cmps
jecxz
(bad)
dec
outs
cmp
xchg
int
push
add
imul
sub
(bad)
jmp
xor
fimul
fdiv
imul
cld
(bad)
call
inc
inc
mov
sbb
popf
push
xchg
mov
cmp
mov
in
pushf
scas
shr
(bad)
js
(bad)
jl
cwde
ret
sbb
arpl
xor
iret
adc
or
(bad)
call
and
les
sub
push
lods
pop
inc
fisttp
xor
lahf
mov
xor
retf
jb
loop
add
jo
jmp
call
cmps
cmps
push
mov
xor
pop
inc
jne
dec
mov
ret
cmps
jmp
scas
(bad)
(bad)
(bad)
dec
mov
mov
inc
test
(bad)
xchg
nop
test
shl
pop
loopne
mov
push
mov
sbb
(bad)
(bad)
push
mov
fdiv
bswap
imul
cwde
dec
pop
rcr
adc
movs
push
inc
inc
push
mov
(bad)
(bad)
fbstp
pop
lds
and
or
sbb
xchg
jo
or
sbb
(bad)
mov
xchg
shl
aaa
pop
jnp
cmc
cmp
mov
pop
ret
add
xor
stos
les
dec
add
retf
sbb
ins
nop
pop
ss
call
std
mov
ins
push
pop
inc
cmc
xchg
scas
inc
rol
(bad)
(bad)
(bad)
fisttp
stos
leave
test
ds
dec
ror
jecxz
jo
std
add
ja
xor
ss
cmp
jb
fwait
(bad)
(bad)
(bad)
mov
lods
popa
xchg
and
inc
nop
inc
seta
lock
add
dec
add
dec
rcr
inc
or
test
(bad)
(bad)
mov
sahf
test
or
retf
mov
(bad)
push
ins
mov
(bad)
fild
mov
adc
mov
push
adc
popa
pop
adc
test
push
enter
jbe
or
push
adc
adc
popa
adc
(bad)
(bad)
(bad)
(bad)
inc
jmp
mov
mov
or
(bad)
fild
xchg
inc
mov
pop
popf
mul
sub
mov
jg
je
(bad)
(bad)
(bad)
(bad)
mov
in
mov
mov
adc
jmp
pushf
push
mov
cmc
mov
outs
add
cmp
movs
sti
cmp
(bad)
sti
xchg
pop
add
push
mov
in
(bad)
call
loopne
add
fnstenv
push
fcomip
outs
jp
xchg
adc
dec
ja
jbe
nop
jp
mov
rcl
(bad)
(bad)
in
and
(bad)
and
or
dec
test
shr
jbe
in
pop
jl
jbe
fwait
mov
icebp
(bad)
(bad)
dec
sub
xlat
fnstsw
test
xchg
xchg
(bad)
jmp
(bad)
push
shl
and
pushf
add
mov
push
jb
pop
sbb
add
pop
lahf
push
inc
test
jae
inc
jae
clc
test
out
mov
(bad)
inc
pop
call
jnp
lahf
cmp
bound
mov
ja
sub
pop
jle
jmp
sub
push
(bad)
dec
ins
push
inc
inc
mov
pop
add
neg
pop
or
adc
call
out
jp
icebp
loopne
js
xchg
outs
test
mov
or
adc
cmp
rol
add
test
xchg
adc
push
and
xor
iret
ror
push
push
leave
cmp
fdivr
jmp
mov
into
or
and
popf
fldl2e
test
sbb
(bad)
push
imul
call
retf
jmp
pop
mov
lock
in
fmul
cmp
xchg
mov
pushf
sahf
scas
dec
cmc
jg
add
data16
cmp
or
cld
(bad)
(bad)
(bad)
ret
or
pop
nop
daa
adc
pop
mov
ror
push
pop
jmp
inc
push
pusha
leave
mov
(bad)
sbb
call
(bad)
fnstsw
add
retf
nop
faddp
movs
jo
scas
(bad)
mov
add
push
fidiv
aam
shr
mov
and
gs
and
ret
es
rcr
stos
cwde
inc
mov
and
(bad)
jmp
inc
dec
lea
in
stc
mov
std
cmp
and
arpl
(bad)
(bad)
(bad)
dec
mov
push
aam
inc
inc
mov
push
dec
sub
loop
and
adc
(bad)
inc
jg
or
(bad)
mov
fisttp
jnp
dec
xchg
pop
(bad)
(bad)
dec
jno
mov
imul
ins
xlat
movs
add
loopne
mov
(bad)
(bad)
(bad)
push
rcl
test
add
inc
or
call
pop
mov
daa
jg
(bad)
(bad)
fdivr
or
cmc
ret
pop
mov
mov
inc
into
pop
out
and
repnz
mov
popf
mul
test
push
xchg
out
mov
dec
sbb
ficom
(bad)
call
movs
dec
std
into
mov
imul
fdivp
add
aas
icebp
mov
(bad)
(bad)
(bad)
jmp
adc
mov
pop
xchg
xlat
div
push
fisub
movs
dec
(bad)
jmp
ficomp
dec
mov
cli
lds
iret
aaa
test
pop
loopne
add
shr
ret
jmp
cmp
stos
mov
outs
push
out
mov
cmc
outs
ds
(bad)
xor
push
outs
mov
xchg
mov
imul
(bad)
jmp
je
jge
ret
(bad)
jne
ja
scas
cmc
std
jnp
dec
dec
cs
mov
leave
je
int3
xor
inc
ret
in
jne
sti
out
push
jecxz
aad
enter
les
ret
mov
mov
jne
mov
mov
adc
jb
out
(bad)
call
sahf
cdq
mov
jg
movs
xchg
push
fstp
push
jnp
mov
mov
mov
addr16
sbb
cmp
(bad)
(bad)
push
cmp
stos
lock
jbe
pop
or
lock
call
fbld
(bad)
(bad)
(bad)
call
mov
xchg
sbb
repnz
mov
xor
adc
add
pop
das
adc
jmp
inc
pop
bound
cdq
iret
nop
ds
jae
fcomip
(bad)
call
cmps
push
test
jp
pop
pop
xor
mov
mov
cmp
xchg
jmp
xor
rcl
retf
test
pop
push
aaa
bound
jmp
sti
gs
sbb
(bad)
(bad)
(bad)
call
xor
loope
add
and
jns
test
dec
mov
stos
popa
mov
(bad)
jg
push
xchg
loope
pop
mov
xchg
cmps
mov
int3
test
and
cs
xor
hlt
fs
ss
and
stc
into
std
dec
cmp
xchg
xlat
in
jmp
pop
(bad)
(bad)
(bad)
inc
pusha
sbb
push
in
and
fist
mov
mov
or
(bad)
(bad)
mov
pop
push
gs
mov
ins
mov
sbb
sub
dec
mov
push
cli
sar
(bad)
cmps
retf
movs
mov
sub
mov
jl
test
inc
inc
repz
xor
inc
into
sbb
cs
dec
add
(bad)
repz
inc
and
cmps
mov
xchg
push
cld
rol
stc
(bad)
jg
dec
mov
xlat
push
nop
(bad)
(bad)
(bad)
jmp
int3
xchg
dec
ror
mov
jo
pop
mov
aad
mov
jl
inc
aaa
fisub
dec
int3
and
xchg
movs
xor
xchg
dec
and
xor
jne
mov
jmp
(bad)
and
inc
and
(bad)
(bad)
call
jp
pop
mov
dec
xchg
inc
add
cmp
subps
or
push
call
test
(bad)
ins
mov
jp
nop
dec
dec
add
jmp
or
std
test
cmps
mov
mov
sahf
int
hlt
and
(bad)
(bad)
(bad)
inc
dec
sbb
fisubr
inc
xchg
in
fdivr
jb
sub
jmp
(bad)
(bad)
(bad)
jmp
mov
adc
loope
sbb
inc
xor
mov
int3
adc
cmc
mov
sahf
aas
ins
int3
and
sub
inc
sahf
in
sub
imul
push
inc
sar
movs
xchg
and
inc
fld
in
dec
pop
push
adc
mov
shl
(bad)
pop
xchg
xor
cmp
push
call
pop
push
xchg
pop
xor
or
pop
mov
adc
lds
rcl
and
icebp
rcr
dec
pop
push
lock
(bad)
jg
inc
js
cmp
jp
cmp
inc
or
xchg
stos
and
jmp
inc
xchg
push
dec
xchg
mov
inc
and
or
stc
movs
loope
push
sub
lock
push
mov
aad
mov
mov
call
add
push
xchg
xlat
push
adc
or
inc
jmp
add
sbb
add
pop
mov
add
xor
or
ss
inc
cmp
(bad)
mov
inc
ds
or
xor
jae
add
ds
or
pusha
mov
cmp
xor
lods
(bad)
(bad)
(bad)
jmp
mov
je
shl
xchg
lods
fstp
cmps
in
push
imul
mov
dec
movs
push
xor
in
fmul
hlt
(bad)
jbe
jmp
or
and
mov
inc
mov
sub
xchg
(bad)
(bad)
(bad)
jmp
or
int
loope
mov
and
cmp
movs
push
xchg
and
loopne
aam
stc
jp
inc
(bad)
push
popf
fidiv
das
ja
xchg
icebp
jge
mov
dec
adc
es
mov
rcr
popa
retf
xlat
sbb
jg
sbb
pop
test
mov
inc
push
jo
fstp
fild
mov
xor
pop
(bad)
(bad)
(bad)
mov
cmps
imul
jmp
mov
and
mov
or
(bad)
inc
ins
pushf
jle
div
mov
pop
mov
ret
ret
int3
loope
adc
dec
push
rcl
lods
(bad)
(bad)
(bad)
inc
out
or
(bad)
fild
cmc
movs
pop
add
cs
fwait
sub
retf
retf
jmp
jg
(bad)
(bad)
(bad)
call
nop
gs
fdivr
fdivr
push
and
sbb
into
inc
stos
push
lods
ss
ret
push
(bad)
(bad)
(bad)
dec
push
adc
dec
push
mul
ins
pop
imul
and
loop
xor
ins
fwait
lods
aam
lods
aad
(bad)
(bad)
push
and
sbb
push
push
shr
add
xchg
js
mov
pushf
scas
xchg
(bad)
call
aas
mov
xchg
loopne
mov
and
adc
and
and
mov
(bad)
fbld
pop
gs
mov
mov
(bad)
(bad)
jmp
push
pop
(bad)
mov
push
jno
ds
mov
addr16
faddp
and
add
dec
push
nop
fwait
(bad)
(bad)
(bad)
js
test
cmp
pop
cmp
sbb
dec
mov
(bad)
call
(bad)
push
in
cmp
into
push
push
imul
xchg
ins
(bad)
in
(bad)
(bad)
mov
cld
cld
icebp
ret
or
add
and
push
adc
mov
out
cs
add
cmp
dec
inc
ss
mov
stos
fnstenv
or
sub
push
cmp
call
mov
ins
pop
jns
adc
(bad)
call
cmp
mov
add
mov
mov
mov
in
fist
(bad)
jmp
push
cmps
sti
mov
mov
pop
repz
cmp
jle
(bad)
out
arpl
(bad)
(bad)
call
pop
ss
jbe
clc
icebp
iret
jbe
aad
jge
test
aaa
inc
mov
adc
adc
(bad)
jmp
pop
out
(bad)
clc
mov
test
icebp
fldenv
mov
push
mov
mov
or
test
dec
cmp
mov
outs
fdiv
mov
(bad)
jg
loopne
sar
std
int
ins
cmp
mov
mov
mov
(bad)
fist
or
cs
mov
mov
jmp
and
pop
mov
mov
clc
push
daa
movs
or
idiv
call
cli
je
push
pop
iret
or
add
mov
(bad)
xchg
(bad)
jmp
or
sub
pushf
cmp
paddsw
inc
mov
dec
outs
jns
(bad)
(bad)
(bad)
call
push
cmp
jmp
aaa
mov
dec
aas
dec
lods
adc
lea
pop
or
scas
mov
call
pop
jg
mov
mov
fdiv
or
ror
mov
(bad)
jmp
push
and
inc
inc
or
test
aam
jl
(bad)
jg
mov
push
pushf
and
or
adc
inc
xor
call
push
inc
xchg
sub
imul
into
test
ret
xchg
sbb
ret
push
(bad)
mov
fwait
and
scas
push
mov
mov
iret
cs
dec
arpl
(bad)
(bad)
push
loopne
dec
xor
push
adc
mov
dec
and
dec
dec
xor
(bad)
jg
(bad)
in
cmp
or
dec
and
cmp
pop
(bad)
sbb
mov
js
call
pop
int3
movs
xchg
xchg
add
ss
dec
cmove
outs
aas
lock
(bad)
(bad)
mov
movs
jp
bound
cmp
out
xor
mov
ret
pop
or
mov
mov
(bad)
(bad)
(bad)
dec
bswap
add
inc
scas
lods
das
cmps
mov
adc
sbb
shl
jmp
xchg
cmp
add
cs
fs
out
cli
adc
sbb
(bad)
(bad)
jg
mov
and
jno
ins
cdq
push
int
dec
daa
ds
mov
dec
movs
pop
adc
mov
sar
jmp
mov
outs
cmp
cmp
cmc
sub
jne
sub
jo
(bad)
dec
mov
aad
mov
std
pop
icebp
inc
sbb
loope
inc
out
mov
dec
leave
popf
gs
pusha
addr16
(bad)
push
and
xchg
clc
clc
not
dec
loopne
mov
out
aad
es
(bad)
(bad)
(bad)
(bad)
mov
sar
aam
cmp
daa
fbstp
xor
inc
shl
mov
and
or
and
add
xor
fdiv
test
xchg
push
xchg
test
(bad)
call
mov
xchg
outs
cmp
test
and
fiadd
pop
scas
(bad)
(bad)
(bad)
push
push
repnz
dec
(bad)
and
sbb
adc
inc
aaa
nop
nop
xor
sbb
stc
fadd
(bad)
(bad)
(bad)
inc
cwde
sub
mov
sar
(bad)
lock
xchg
inc
test
cmp
or
(bad)
call
jmp
mov
stos
aaa
out
xor
dec
mov
lds
adc
cld
daa
ficom
sub
inc
mov
jmp
push
xchg
pop
add
es
ins
push
push
popa
and
push
loop
push
pop
and
in
(bad)
(bad)
fistp
xchg
js
adc
or
mov
cmp
pop
imul
clc
call
cmp
push
call
jl
aad
sar
jmp
jb
movs
test
mov
jb
cmp
out
cli
(bad)
inc
test
mov
vandps
cmp
adc
stos
jbe
jp
jmp
das
shl
or
mov
mov
ds
mov
(bad)
(bad)
(bad)
push
cmps
fnsave
aam
push
and
adc
js
das
inc
mov
fsub
mov
clc
(bad)
jmp
mov
and
ds
mov
mov
sbb
mov
(bad)
pop
test
(bad)
(bad)
(bad)
(bad)
jns
xor
push
imul
in
inc
cmp
adc
dec
mov
or
cwde
cdq
cdq
(bad)
(bad)
(bad)
(bad)
jg
lock
out
rcl
lea
mov
inc
jecxz
outs
jl
cs
or
cmp
rol
fiadd
or
push
(bad)
jmp
dec
(bad)
xchg
imul
out
out
daa
mov
adc
(bad)
push
fcomp
iret
mov
sbb
cs
loopne
clc
mov
out
fnstsw
dec
mov
mov
call
jb
enter
sbb
lods
aad
cmps
popa
sbb
pusha
pop
push
sbb
mov
sbb
xor
jp
iret
shr
adc
mov
shl
sbb
sub
(bad)
call
invd
aad
add
and
adc
xor
je
add
inc
out
(bad)
(bad)
(bad)
mov
xchg
jle
jnp
cmp
mov
dec
dec
call
leave
(bad)
dec
icebp
xlat
jg
leave
xor
fidivr
push
jns
(bad)
(bad)
(bad)
inc
repz
ficom
aad
or
ins
hlt
cmc
(bad)
(bad)
int3
test
enter
mov
jmp
dec
or
push
and
mov
push
in
add
(bad)
(bad)
jmp
movs
dec
xor
sbb
stos
movs
inc
fst
stos
les
ins
push
(bad)
(bad)
inc
mov
bound
jb
hlt
mov
inc
arpl
jp
imul
or
pop
cmp
push
add
xor
addr16
xchg
(bad)
dec
cmp
push
cs
pop
je
xchg
mov
push
sub
xlat
pop
idiv
(bad)
call
push
pop
adc
inc
cmp
retf
mov
daa
pop
in
mov
push
(bad)
(bad)
(bad)
dec
cmp
in
mov
retf
das
fild
sbb
movs
push
sub
xchg
pop
cs
out
ins
mov
movs
cmp
sub
mov
pusha
sbb
sbb
out
mov
jmp
clc
inc
(bad)
(bad)
(bad)
(bad)
fistp
neg
jle
test
outs
lods
out
cdq
sbb
fisub
mov
mov
inc
cs
pop
cmp
mov
call
jle
xchg
ins
adc
sub
loopne
push
push
stos
or
mov
push
ins
pop
in
loopne
popf
pop
(bad)
in
aas
cmc
test
pop
cmc
sbb
addr16
repz
lds
ins
(bad)
(bad)
(bad)
call
je
mov
mov
mov
sbb
mov
call
push
lea
(bad)
dec
div
mov
stos
in
sub
(bad)
cld
xchg
pop
sub
(bad)
(bad)
jmp
dec
add
in
sahf
arpl
jmp
pop
xlat
cmp
cmp
sar
js
mov
(bad)
mov
push
jns
(bad)
test
stos
pop
(bad)
retf
ds
mov
sub
push
imul
arpl
(bad)
out
popf
ja
enter
xor
(bad)
(bad)
call
fwait
mov
mov
(bad)
(bad)
fnsave
xor
addr16
call
in
(bad)
mov
nop
or
mov
loope
inc
fdiv
in
mov
(bad)
(bad)
(bad)
(bad)
fcom
out
mov
mov
imul
inc
pop
push
retf
inc
pop
cmc
(bad)
fstp
or
in
test
enter
adc
sub
(bad)
(bad)
call
add
add
push
mov
push
dec
pusha
push
add
cmp
jg
xchg
dec
popf
in
xchg
fwait
inc
mov
stc
std
jle
jp
aaa
push
(bad)
(bad)
(bad)
push
dec
jno
retf
aaa
pop
fsubr
ficomp
call
and
jmp
test
jmp
xchg
dec
test
push
pop
aam
mov
out
(bad)
call
shl
cmp
push
cmp
ss
xchg
not
mov
(bad)
call
inc
std
mov
cmp
in
ror
mov
or
fwait
enter
adc
mov
adc
jmp
pop
xor
push
pop
xchg
mov
xchg
(bad)
pop
(bad)
(bad)
push
popf
xlat
xchg
loopne
mov
pop
and
adc
rol
(bad)
(bad)
jmp
fs
mov
in
jp
data16
out
jp
(bad)
ins
stc
pop
(bad)
(bad)
(bad)
jmp
cmp
cmp
enter
ins
add
mov
mov
out
scas
pop
das
(bad)
(bad)
(bad)
inc
mov
push
aaa
add
nop
ja
icebp
add
aad
push
das
mov
jae
icebp
test
(bad)
call
aam
icebp
add
jmp
pop
mov
stos
sbb
adc
mov
mov
jg
pushf
xlat
and
mov
(bad)
repnz
pop
out
or
(bad)
(bad)
dec
arpl
dec
test
adc
(bad)
mov
imul
mov
cli
push
daa
pop
push
pop
std
(bad)
(bad)
(bad)
(bad)
jmp
dec
cld
in
ret
fisub
iret
das
das
inc
lods
or
(bad)
sbb
jns
adc
icebp
nop
and
or
(bad)
(bad)
jmp
add
and
aam
pop
aaa
dec
jge
sub
mov
(bad)
(bad)
call
adc
mov
xor
movs
cmp
mov
nop
mov
or
adc
jmp
dec
rol
outs
dec
sbb
add
mov
(bad)
fild
mov
cmp
sar
(bad)
dec
clc
and
loope
push
mov
test
mov
xlat
loope
mov
mov
(bad)
call
inc
neg
(bad)
or
mov
mov
mov
mov
call
inc
push
adc
xchg
dec
cmp
inc
cmps
imul
pop
(bad)
(bad)
(bad)
inc
cmps
inc
and
test
cdq
shl
loop
xor
lods
cmps
push
shr
xor
dec
adc
(bad)
(bad)
(bad)
cmp
pcmpeqd
fst
fs
adc
jecxz
shl
jg
in
scas
js
jmp
xchg
jmp
push
mov
shr
add
mov
or
dec
(bad)
(bad)
(bad)
(bad)
jmp
out
icebp
int
cmp
pop
pop
rep
idiv
jnp
ret
in
push
outs
mov
lock
in
sub
jno
ret
(bad)
(bad)
stc
mov
mov
xchg
xchg
shr
int
jecxz
sbb
dec
(bad)
sbb
jns
repnz
sbb
jmp
repnz
adc
or
aad
stos
call
inc
into
or
out
outs
push
ds
mov
ja
mov
xchg
icebp
jg
fisttp
int3
mov
dec
cmps
or
imul
and
(bad)
(bad)
push
jmp
adc
jecxz
outs
ds
cmp
fdiv
adc
jmp
lods
jg
inc
sub
outs
fdivr
(bad)
jg
mov
jns
(bad)
aad
cmp
les
push
xor
lea
inc
(bad)
(bad)
(bad)
jmp
(bad)
xor
fidiv
repz
dec
lahf
enter
mov
ins
aam
aaa
dec
int
mov
adc
nop
push
mov
push
scas
mov
xchg
inc
fistp
(bad)
(bad)
(bad)
(bad)
jnp
in
paddusb
mov
dec
int3
xor
jne
pop
cmp
ror
in
jb
ins
retf
push
(bad)
jg
call
sbb
mov
add
into
ja
pop
sub
mov
sahf
pop
xchg
into
mov
pusha
mov
loopne
(bad)
(bad)
jnp
ret
mov
sar
dec
cli
xchg
test
jmp
cmc
mov
mov
mov
add
(bad)
(bad)
inc
adc
sub
jl
enter
test
stos
cld
iret
mov
(bad)
(bad)
(bad)
mov
dec
mov
push
xchg
pop
lods
call
xor
sbb
bound
cs
(bad)
mov
call
lods
int3
push
out
jp
adc
cdq
arpl
(bad)
(bad)
dec
adc
xor
sbb
in
sub
xlat
arpl
fsub
mov
(bad)
dec
inc
adc
dec
fild
out
daa
sahf
xor
adc
xor
jecxz
dec
imul
(bad)
cdq
mov
retf
ret
push
jmp
ja
cdq
sbb
jl
fistp
cmp
and
mov
and
cli
or
dec
movs
mov
inc
clc
pop
(bad)
xor
loopne
retf
cs
inc
sti
fstp
(bad)
clc
adc
adc
jo
jmp
dec
das
inc
cmps
icebp
into
popf
mov
dec
adc
inc
cmc
jp
popa
popa
jle
shl
lock
mov
neg
push
xchg
sub
outs
mov
ds
add
(bad)
lds
(bad)
call
pop
iret
push
popa
push
out
jmp
sub
hlt
call
fdiv
push
nop
adc
jne
sbb
mov
mov
cdq
outs
jg
sub
sub
(bad)
push
aad
mov
jnp
xchg
in
mov
xchg
jg
xlat
imul
fisubr
(bad)
dec
xchg
adc
scas
pop
out
cdq
sbb
xchg
(bad)
ins
inc
xchg
out
ret
jb
int
data16
(bad)
in
(bad)
(bad)
(bad)
jmp
mov
push
cmc
cld
sar
mov
push
(bad)
daa
imul
xchg
mov
adc
pop
(bad)
jmp
jl
(bad)
(bad)
(bad)
loopne
mov
sub
mov
jp
(bad)
(bad)
(bad)
call
xchg
(bad)
clc
pop
cmp
leave
ins
push
sub
jae
jecxz
(bad)
or
(bad)
(bad)
(bad)
(bad)
fisttp
imul
xor
jae
aam
out
lahf
adc
mov
je
bound
sub
(bad)
(bad)
(bad)
fcom
xlat
scas
mov
gs
xor
popa
add
test
adc
jbe
shl
inc
dec
in
stos
(bad)
(bad)
inc
fild
sbb
pushf
pop
(bad)
pop
and
mov
jo
dec
ds
(bad)
fcomip
inc
ja
in
pop
mov
cdq
mov
cmp
outs
bound
call
fsub
in
jl
sbb
retf
push
push
cmp
rcr
xchg
sar
test
inc
push
mov
adc
push
mov
xchg
nop
inc
push
xor
jae
cmp
sbb
retf
xor
mov
(bad)
(bad)
dec
inc
ins
sbb
fld
fbstp
and
sti
enter
in
daa
daa
xchg
sub
loop
lea
inc
inc
(bad)
(bad)
(bad)
dec
mov
idiv
push
(bad)
pop
lods
mov
xchg
fadd
mov
pushf
lods
sbb
(bad)
call
aas
in
(bad)
mov
push
outs
(bad)
mov
mov
xor
dec
dec
(bad)
call
inc
das
xchg
dec
cmp
ret
(bad)
(bad)
(bad)
(bad)
call
xchg
daa
addr16
and
add
addr16
sbb
les
dec
xor
inc
or
pop
inc
and
mov
xchg
outs
adc
(bad)
aas
jecxz
xchg
mov
or
sbb
push
mov
add
or
fisubr
(bad)
(bad)
inc
mov
pop
je
pop
inc
sbb
inc
mov
nop
fdivr
xacquire
mov
das
rcr
or
mov
rcl
push
(bad)
call
cld
or
stos
xchg
sti
fdivp
and
mov
cmp
inc
mov
test
ins
jl
mov
pop
pop
fisub
add
and
mov
loopne
fld
out
mov
std
std
out
jl
push
rcl
inc
es
call
inc
repnz
cmovb
icebp
sbb
nop
push
(bad)
retf
and
arpl
xchg
scas
add
scas
les
lock
stos
jmp
sbb
(bad)
(bad)
inc
popf
ret
fwait
push
lods
pop
fs
mov
ficomp
movs
cmps
or
cmp
std
mov
inc
dec
sub
mov
push
call
xor
push
mov
xchg
sbb
(bad)
call
sbb
mov
in
and
(bad)
gs
test
dec
xor
mov
push
aad
or
sub
out
(bad)
(bad)
jg
(bad)
pop
fnstsw
jo
nop
in
push
or
jnp
movs
xor
(bad)
(bad)
(bad)
(bad)
jmp
mov
mov
fs
call
shl
in
dec
and
or
xor
mov
aaa
inc
paddb
cmps
(bad)
call
fst
xchg
rol
es
add
pop
add
push
mov
call
test
loope
out
jno
clc
mov
sub
xchg
int
fs
call
mov
(bad)
(bad)
call
pop
or
dec
or
sti
iret
jge
xlat
xchg
dec
xchg
imul
ins
(bad)
add
add
rol
adc
mov
xchg
sbb
jg
mov
retf
or
and
cmps
stos
inc
adc
(bad)
(bad)
push
cwde
jle
call
js
xchg
mov
cmp
add
stos
ficom
cld
(bad)
out
mov
cmps
fs
ins
aaa
jmp
dec
mov
in
xlat
rep
xor
dec
cmp
int3
cdq
jmp
fidiv
in
fbstp
call
retf
mov
pop
(bad)
mov
mov
(bad)
(bad)
(bad)
fnstsw
fst
xchg
jecxz
scas
in
mov
out
and
xor
xor
mov
ins
retf
idiv
inc
(bad)
inc
outs
ins
je
(bad)
mov
repz
sahf
outs
aaa
imul
fstp
pop
imul
(bad)
call
cmps
out
icebp
int
jmp
retf
fcomp
lahf
fwait
sbb
fbstp
jg
push
jle
push
xor
shl
lea
js
pushf
loopne
test
(bad)
jg
or
push
mov
test
sbb
leave
aad
lahf
inc
mov
pusha
xor
add
(bad)
inc
dec
or
and
loope
adc
inc
stos
xchg
idiv
scas
mov
dec
mov
jle
test
mov
lock
fild
das
push
lahf
add
adc
and
jl
out
pop
cwde
xor
inc
xchg
shl
je
enter
push
mov
outs
ret
(bad)
(bad)
(bad)
inc
outs
cmp
nop
in
xlat
dec
add
scas
dec
cli
fcom
mov
ret
adc
(bad)
dec
pop
(bad)
das
ss
in
stos
jmp
retf
enter
push
enter
(bad)
mov
movs
test
popf
(bad)
mov
adc
call
cld
(bad)
(bad)
call
push
pop
mov
or
stos
aaa
pop
data16
push
jge
std
add
add
and
cdq
mov
dec
xor
adc
subps
shl
mov
iret
mov
(bad)
(bad)
(bad)
call
es
std
cmp
retf
dec
stc
xor
push
dec
fst
mov
jnp
sbb
(bad)
(bad)
out
cli
jmp
or
cmp
enter
jb
mov
aas
sub
lds
(bad)
(bad)
(bad)
(bad)
out
scas
clc
ds
add
mov
pop
xchg
xchg
and
push
add
(bad)
(bad)
(bad)
call
cmp
jno
mov
in
adc
xor
cmp
sar
push
(bad)
inc
cmps
(bad)
out
das
ds
jae
fidiv
inc
aaa
xchg
xor
(bad)
(bad)
(bad)
(bad)
fsubr
test
mov
ins
or
pop
mov
clc
out
pop
(bad)
in
mov
(bad)
(bad)
(bad)
dec
(bad)
out
in
rcr
aam
ret
sub
jg
xchg
sbb
mov
mov
xchg
fistp
int3
hlt
cdq
sub
call
adc
imul
(bad)
jmp
out
jb
xor
inc
cmp
nop
imul
lea
outs
xchg
mul
daa
mov
add
ds
dec
sbb
(bad)
(bad)
(bad)
push
test
inc
int3
ficom
sub
push
jo
inc
mov
not
aas
or
mov
adc
(bad)
jno
stc
xchg
sub
push
jp
stc
fdiv
pop
cli
int
push
call
pushf
and
nop
pop
sti
pushf
mov
in
or
mov
xchg
adc
je
(bad)
(bad)
jg
pop
out
addr16
test
daa
nop
ds
(bad)
pop
imul
xlat
mov
mov
in
jg
mov
and
push
cld
pop
add
push
mov
les
pop
push
stc
xchg
adc
xchg
inc
cmp
movs
dec
stos
fadd
inc
(bad)
inc
les
push
sar
(bad)
(bad)
jmp
push
and
cmc
dec
cmp
pop
inc
fisttp
xor
mov
add
cmps
mov
sub
(bad)
(bad)
(bad)
cmp
adc
aam
lds
(bad)
sub
xor
ror
imul
call
xchg
aaa
mov
inc
dec
pop
jbe
(bad)
(bad)
(bad)
mov
mov
js
in
repz
in
in
pop
outs
je
xchg
xor
call
(bad)
(bad)
(bad)
(bad)
cmp
jns
xchg
movs
mov
lods
push
xor
mov
jg
pop
ffree
fcomip
in
jmp
or
sub
and
jmp
mul
ds
(bad)
(bad)
push
fldenv
pop
jno
stos
adc
push
xor
ret
shl
into
cmc
jno
xlat
adc
mov
fmul
inc
and
mov
xor
repnz
cdq
jmp
sbb
call
jmp
repz
pop
sbb
push
mov
xchg
aaa
and
add
sbb
or
(bad)
call
pusha
xchg
je
and
sub
pop
rcl
push
xchg
or
(bad)
(bad)
push
test
xlat
psubusw
push
push
jge
or
push
fsub
(bad)
(bad)
(bad)
call
fiadd
je
mov
dec
jp
xor
fdivr
xor
inc
and
imul
out
inc
sti
pop
xor
outs
mov
les
gs
add
push
loopne
mov
mov
xor
xor
add
xchg
mov
push
inc
add
mov
in
or
mov
jne
inc
jg
leave
cmp
aas
or
ror
mov
push
push
(bad)
(bad)
(bad)
push
and
fdiv
inc
inc
cmp
adc
lock
cmp
adc
xor
(bad)
jmp
loope
ins
adc
push
dec
cld
mov
ds
xchg
xlat
popf
adc
adc
(bad)
call
(bad)
enter
cdq
mov
and
fcmove
retf
clc
test
fnstenv
sar
gs
jno
add
adc
(bad)
(bad)
jmp
and
je
js
loopne
scas
and
bound
mul
mov
ja
(bad)
jmp
ds
jb
pop
rol
cmp
sbb
aas
cli
inc
mov
(bad)
out
xchg
gs
jns
int
adc
repz
cmp
(bad)
(bad)
call
adc
(bad)
dec
xor
pusha
gs
movs
in
lock
ja
mov
pop
pop
out
mov
ret
pop
(bad)
call
inc
add
push
xchg
imul
fdiv
(bad)
(bad)
(bad)
call
push
adc
jmp
xor
dec
pushf
mov
arpl
aas
call
and
or
std
aaa
add
add
test
inc
(bad)
(bad)
push
fs
icebp
inc
rol
or
les
add
std
cmps
cmp
mov
aad
fnstenv
sti
(bad)
jg
int3
test
mov
jns
aaa
xor
call
les
(bad)
(bad)
(bad)
fnstsw
cdq
cdq
pop
dec
out
hlt
and
rcl
sub
fnsave
in
(bad)
(bad)
(bad)
push
mov
add
jmp
aam
push
add
pop
dec
aas
lock
loop
test
(bad)
(bad)
(bad)
jmp
cs
out
mov
ins
jae
js
xor
loop
mov
mov
dec
nop
pop
push
(bad)
or
mov
(bad)
mov
mov
stos
cdq
leave
not
cmc
add
cmp
sbb
xor
sar
mov
inc
sahf
jmp
out
or
pop
arpl
xchg
or
clc
(bad)
(bad)
(bad)
jle
adc
or
cli
pop
adc
mov
test
pusha
sbb
(bad)
(bad)
out
ss
mov
push
and
call
dec
add
test
or
(bad)
call
jp
jp
icebp
push
xchg
pop
clc
aad
mov
(bad)
mov
mov
scas
or
fdivr
arpl
xor
xchg
xchg
and
mov
push
bnd
neg
push
int3
cmps
cli
test
ror
mov
inc
cmps
mov
(bad)
push
pop
xchg
jo
mov
shl
nop
pop
js
imul
aas
stos
sub
or
inc
clc
test
inc
addr16
loopne
cmps
leave
xchg
inc
inc
add
(bad)
(bad)
(bad)
(bad)
cmp
pushf
outs
leave
call
hlt
cmc
test
jno
xchg
sbb
call
push
mov
rcl
mul
(bad)
(bad)
call
jp
adc
mov
inc
or
cmp
std
push
push
jno
and
(bad)
(bad)
call
test
mov
shl
or
xchg
mov
pop
(bad)
in
jmp
or
lock
pusha
add
(bad)
(bad)
in
jbe
pop
inc
test
call
mov
push
sbb
jmp
pop
add
adc
(bad)
mov
mov
(bad)
(bad)
(bad)
ds
pushf
test
jns
cmp
cmp
nop
sub
sub
test
pop
pop
pop
dec
jecxz
(bad)
ds
inc
mov
cdq
push
out
ret
jl
(bad)
jl
out
(bad)
mov
pop
mov
aas
std
cld
jg
lods
test
dec
push
fisttp
fistp
ins
sub
dec
sbb
xchg
pop
call
jnp
fisttp
ins
fwait
in
outs
jle
jmp
idiv
out
repz
push
sbb
test
ret
fistp
xor
nop
lock
(bad)
cmp
in
(bad)
push
int3
pop
arpl
ja
(bad)
(bad)
inc
cmps
sub
lock
pop
dec
dec
push
mov
push
fdivr
aaa
jg
idiv
mov
(bad)
jg
jnp
out
das
pop
mov
(bad)
sti
xlat
sbb
xchg
sub
in
mov
repnz
(bad)
(bad)
inc
push
in
sub
push
mov
fcom
sbb
dec
mov
and
push
cmps
std
outs
push
mov
mov
push
mov
fsubr
loope
scas
xor
mov
sbb
add
mov
xchg
xchg
jns
cmp
xchg
out
xchg
js
(bad)
call
mov
adc
mov
out
mov
js
nop
push
push
stc
add
not
fisttp
mov
sbb
mov
cmp
mov
adc
(bad)
(bad)
jmp
xor
les
stos
sahf
and
adc
cs
jb
xchg
mov
movs
(bad)
(bad)
push
pop
ins
push
shl
xchg
pop
dec
inc
daa
dec
push
push
sub
adc
push
mov
ins
aas
je
test
(bad)
(bad)
call
xor
sbb
in
rcl
jb
xchg
mov
mov
cmc
in
dec
outs
sar
sar
dec
(bad)
push
push
iret
aam
dec
xlat
or
sub
sub
call
jmp
xor
mov
jmp
pop
adc
sahf
push
(bad)
(bad)
(bad)
(bad)
cmp
adc
fmul
mov
xchg
mov
and
cli
lods
fdivp
push
inc
aam
popa
mov
(bad)
(bad)
(bad)
dec
and
clc
pushf
pop
mov
pushf
imul
bnd
mov
or
das
cli
dec
and
rcl
cmps
(bad)
xchg
adc
jecxz
ret
clc
(bad)
(bad)
push
test
push
sub
shl
dec
push
or
jle
(bad)
call
sbb
fidivr
and
push
stos
(bad)
push
and
(bad)
(bad)
(bad)
inc
jnp
sti
enter
lahf
add
mov
out
ins
mov
(bad)
(bad)
(bad)
push
mov
mov
out
mov
mov
xchg
jnp
adc
and
mov
nop
inc
popf
and
jmp
or
inc
cmc
fadd
(bad)
(bad)
(bad)
inc
mov
cmp
push
or
adc
cmp
push
mov
jmp
pop
inc
bound
push
test
jecxz
cmp
addr16
push
xchg
or
(bad)
jmp
(bad)
mov
int3
in
xor
test
pusha
mov
cmp
xchg
and
inc
lock
xchg
add
cli
call
ds
in
adc
xchg
stos
stos
sub
jae
sub
mov
adc
dec
add
and
jmp
xor
(bad)
dec
test
dec
push
push
je
jecxz
mov
pop
clc
(bad)
(bad)
dec
lods
out
cmp
pop
mov
xchg
and
and
retf
cmp
(bad)
(bad)
dec
fisubr
jl
or
jo
xchg
mov
mov
jp
mov
or
(bad)
(bad)
(bad)
cld
add
xchg
mov
or
push
js
xchg
push
(bad)
(bad)
jg
retf
aad
or
lock
jae
(bad)
or
scas
sbb
jnp
mov
out
push
mov
jmp
cdq
out
repz
sbb
push
retf
(bad)
dec
ins
adc
inc
inc
mov
mov
test
sbb
loop
stos
add
aam
lock
jmp
scas
inc
rol
add
push
mov
mov
add
scas
clc
out
and
fsubp
mov
fnsave
in
out
add
es
es
(bad)
call
jmp
cmc
repnz
jnp
(bad)
mov
mov
retf
rcr
ret
lods
sti
jge
(bad)
jmp
fnsave
nop
cmc
scas
mov
int
repz
xchg
(bad)
(bad)
(bad)
jmp
ja
fbstp
xlat
fwait
pop
pop
ds
hlt
(bad)
dec
pop
jns
loop
push
dec
(bad)
jae
jne
or
push
sbb
aas
aas
cmp
ins
mov
sbb
loop
xchg
icebp
dec
in
(bad)
(bad)
(bad)
push
push
pop
cmp
test
mov
push
jecxz
jmp
scas
sbb
cmp
add
(bad)
call
jle
push
sub
jae
and
and
and
(bad)
pop
test
cmp
inc
je
push
std
(bad)
jg
popa
xor
jbe
(bad)
call
fcomp
mov
std
(bad)
dec
ins
mov
sub
popf
mov
pop
int3
push
movs
(bad)
(bad)
fistp
add
or
jp
and
or
inc
movs
pop
xchg
shl
or
pop
sub
loopne
fstp
icebp
ret
mov
cmps
sub
outs
(bad)
(bad)
jl
rol
pop
push
hlt
cmp
pop
jmp
idiv
jge
loopne
cdq
pop
inc
(bad)
mov
je
loope
mov
into
mov
xor
mov
clc
jmp
push
out
aad
hlt
inc
xchg
fs
retf
(bad)
data16
stos
inc
dec
gs
into
mov
push
dec
inc
push
xchg
je
(bad)
jg
repnz
jl
cmp
and
dec
inc
pop
or
cld
inc
cmp
mov
ret
sub
(bad)
inc
cld
out
popf
repz
pop
sbb
shr
push
dec
xor
test
dec
sti
(bad)
(bad)
(bad)
inc
stc
mov
in
std
retf
push
xor
inc
xor
sbb
and
or
sub
jge
aam
lods
not
fs
mov
scas
ds
jg
pop
ins
mov
mov
dec
retf
xlat
(bad)
(bad)
jg
test
aam
jmp
xlat
cmc
adc
fsub
dec
xchg
(bad)
(bad)
(bad)
clc
add
retf
ins
inc
cmp
loope
jg
test
mov
and
inc
inc
in
adc
push
clc
scas
jnp
(bad)
call
int
cmps
jmp
repz
sahf
jb
xchg
xchg
mov
xchg
std
int
mov
hlt
pop
lahf
cmp
sub
(bad)
(bad)
push
xchg
inc
ss
daa
sbb
loope
call
repz
ds
lea
mov
(bad)
jmp
xchg
sub
add
popa
(bad)
cmp
cmp
call
mov
or
bound
int3
sub
mov
hlt
or
pop
mov
out
jl
out
clc
xchg
dec
(bad)
loope
(bad)
(bad)
(bad)
(bad)
rcl
and
mov
out
rol
pop
(bad)
imul
and
xor
loope
stos
ds
pusha
mov
sbb
cmp
out
std
xor
dec
mov
call
aas
mov
retf
mov
out
sub
(bad)
mov
inc
nop
jmp
stos
push
mov
test
sbb
inc
inc
mov
scas
xchg
adc
cmp
test
jl
unpckhps
inc
pop
dec
ss
fldenv
out
lock
scas
cld
lds
dec
test
sbb
jmp
cli
inc
mov
adc
lahf
and
int
cmp
pop
push
sbb
jg
fimul
pushf
sub
mov
pushf
int3
aaa
ffree
nop
mov
jbe
sub
push
les
jb
jmp
movs
clc
lock
(bad)
(bad)
inc
mov
mov
cmp
stos
rcr
jecxz
loope
retf
fmul
and
int3
or
test
jne
mov
rcr
icebp
add
popa
push
sbb
call
or
call
ret
imul
enter
add
push
inc
cmc
(bad)
(bad)
jmp
dec
retf
call
(bad)
sub
adc
movs
push
sub
cmp
sub
ja
(bad)
(bad)
(bad)
jg
adc
dec
pop
mov
and
mov
push
cmp
ja
daa
ss
je
mov
icebp
(bad)
(bad)
push
ja
cmp
(bad)
jp
cmc
es
in
or
inc
popa
push
fisttp
js
(bad)
aad
jo
jmp
sbb
ret
or
inc
fcom
out
repz
cmc
jo
pushf
sbb
mov
and
(bad)
jmp
sub
ffreep
push
into
pop
stc
sbb
mov
adc
xor
sbb
(bad)
jmp
in
es
imul
fwait
sbb
test
jecxz
movs
pusha
sub
out
sar
aaa
cld
call
mov
jmp
jne
jns
cmps
sbb
mov
(bad)
mov
jmp
pop
adc
dec
cmp
cmp
enter
fiadd
push
seto
shl
(bad)
(bad)
(bad)
ds
ret
js
or
add
mul
stc
jle
fsubr
cmp
(bad)
(bad)
(bad)
call
mov
and
push
push
xor
jae
push
dec
lock
ficom
pusha
imul
dec
inc
inc
push
(bad)
(bad)
mov
mov
es
xchg
sub
int3
fsub
lea
(bad)
(bad)
dec
push
mov
clc
or
push
xchg
ins
test
or
idiv
(bad)
(bad)
dec
xchg
and
push
xchg
aad
adc
mov
pop
outs
sbb
jmp
in
jb
or
cmps
inc
mov
xor
ins
and
(bad)
(bad)
(bad)
(bad)
jge
pextrw
push
push
xor
or
add
or
ficomp
lods
or
popa
lahf
stc
xchg
aas
mov
sar
(bad)
(bad)
inc
jno
mov
cmp
mov
mov
mov
aad
pop
xchg
or
out
sar
fild
jo
cmp
sbb
xlat
dec
jle
push
test
fnstcw
xor
fbstp
mov
jb
and
add
sub
jg
(bad)
call
push
dec
jp
jb
sub
cli
add
cmp
in
leave
dec
sbb
mov
jns
pop
or
adc
and
loop
imul
mov
(bad)
jmp
jo
mov
push
(bad)
sahf
shr
les
call
(bad)
(bad)
(bad)
mov
int
popf
adc
aaa
xor
in
jbe
(bad)
(bad)
popf
mov
mov
outs
mov
cld
shl
fistp
int
inc
aad
or
adc
dec
sahf
call
jge
ror
fs
std
(bad)
jg
sub
mov
fwait
mov
(bad)
neg
cmps
fcos
(bad)
(bad)
inc
cmp
daa
add
pusha
jo
ins
je
jl
mov
call
xchg
nop
mov
pop
mov
push
call
mov
adc
loop
xor
lds
inc
dec
add
add
in
icebp
pop
cli
push
call
inc
(bad)
(bad)
(bad)
push
iret
or
sub
and
jno
jl
jno
das
ss
sub
cmp
(bad)
(bad)
(bad)
dec
clc
test
loop
adc
data16
and
loopne
add
lahf
(bad)
outs
fistp
or
(bad)
call
scas
out
stc
icebp
lahf
(bad)
test
adc
xchg
out
pop
sbb
sti
push
(bad)
sub
cmps
(bad)
dec
push
adc
mov
call
jo
pop
ret
out
ror
(bad)
inc
or
mov
adc
sahf
sbb
xlat
aas
movs
fistp
dec
jbe
mov
(bad)
(bad)
(bad)
mov
popf
jge
cmps
push
push
mov
std
push
jae
cmp
push
test
imul
push
std
push
gs
in
sub
mov
sub
hlt
xor
jno
(bad)
aam
std
(bad)
(bad)
(bad)
dec
pop
mov
inc
xchg
les
daa
dec
loope
mov
in
push
or
mov
enter
mov
push
jl
jmp
out
dec
mov
(bad)
(bad)
(bad)
mov
(bad)
in
dec
in
inc
adc
ds
pusha
xor
push
(bad)
jno
fbstp
jne
or
push
inc
enter
jno
or
sar
(bad)
or
int3
push
sbb
sub
and
(bad)
(bad)
dec
fs
test
loopne
fsub
mov
(bad)
sbb
idiv
jg
in
pop
stc
ror
pop
(bad)
call
dec
(bad)
pop
cli
mov
dec
mov
lods
sbb
lods
fyl2xp1
into
mov
(bad)
(bad)
call
faddp
push
fistp
idiv
neg
sbb
inc
data16
(bad)
call
in
xor
retf
popf
push
xchg
pushf
push
cwde
shl
std
les
jg
(bad)
(bad)
xchg
jg
mov
in
das
dec
(bad)
mov
mov
aam
mov
(bad)
dec
sub
jl
int3
pop
jl
sub
inc
and
dec
jmp
xchg
add
and
rol
push
inc
push
sub
aad
jnp
or
sub
das
jnp
out
mov
idiv
loop
cld
loop
pop
dec
int
(bad)
(bad)
(bad)
(bad)
jmp
dec
cld
(bad)
fdiv
lahf
cmp
in
sub
pop
push
pop
push
out
out
mov
(bad)
(bad)
(bad)
call
ja
mov
sti
mov
test
popa
and
inc
dec
pop
call
cmc
rcr
(bad)
jmp
dec
dec
jmp
enter
ds
inc
movs
inc
(bad)
sbb
pop
loopne
adc
cld
(bad)
mov
pop
jbe
and
pop
(bad)
xchg
stos
xchg
mov
cmp
sub
loopne
mov
(bad)
(bad)
jmp
ret
jno
sub
fst
and
lahf
inc
aas
pusha
into
(bad)
cmp
cdq
pop
xlat
xchg
call
sub
clc
jmp
xor
cmp
add
outs
push
fist
test
stc
clc
inc
add
cld
and
pop
retf
pop
sar
hlt
mov
sub
arpl
fidiv
mov
lahf
mov
call
add
shl
vcvtsd2si
push
sub
lahf
and
dec
loop
bound
adc
nop
adc
cmp
ss
popf
fwait
aas
mov
(bad)
(bad)
(bad)
addr16
shl
adc
xchg
mov
out
stos
or
mov
(bad)
jg
sbb
lds
ret
sbb
je
xchg
cwde
daa
mov
(bad)
(bad)
(bad)
jmp
or
and
jmp
(bad)
sbb
pop
mov
in
loope
add
sub
push
mov
add
rol
cmp
lods
jb
pop
and
fwait
xchg
inc
in
push
jbe
cmp
mov
adc
sti
jmp
and
(bad)
(bad)
push
fxch
xor
nop
dec
(bad)
js
inc
imul
std
(bad)
jbe
popf
mov
push
xor
jg
and
inc
add
cmp
or
aaa
loope
or
loopne
cli
fdivr
xchg
push
cdq
jns
and
(bad)
inc
loope
xor
les
dec
repz
mov
and
add
sub
(bad)
inc
add
ror
nop
nop
xchg
test
inc
adc
xchg
and
test
ret
pop
add
imul
arpl
add
call
jmp
int
jno
js
pop
cmc
cs
xchg
and
adc
and
outs
cwde
sub
add
(bad)
(bad)
inc
lods
or
mov
or
sbb
sub
pop
(bad)
dec
iret
pushf
popf
popf
outs
mov
nop
or
(bad)
(bad)
jg
ins
adc
ins
push
adc
sbb
ins
pop
and
je
dec
movs
cmp
shl
call
jmp
push
adc
loopne
jg
(bad)
cld
pop
or
pop
fs
xor
push
inc
ret
sbb
push
imul
cli
pop
(bad)
ja
call
mov
mov
imul
xor
out
(bad)
dec
pop
inc
(bad)
aas
jb
sub
nop
ins
ror
add
or
inc
shl
xlat
(bad)
(bad)
(bad)
inc
or
mov
xchg
pusha
dec
pop
nop
and
mov
mov
mov
xchg
adc
(bad)
(bad)
mov
lea
call
adc
out
mov
sti
mov
call
in
mov
hlt
mov
sti
stc
das
das
pop
pop
xor
(bad)
(bad)
cmp
js
xchg
and
(bad)
(bad)
inc
idiv
hlt
call
pop
pop
lods
sub
outs
push
and
nop
aad
mov
mov
or
stc
push
(bad)
popa
jg
xchg
inc
fbstp
xchg
xchg
xor
(bad)
(bad)
dec
pop
cmp
mov
(bad)
call
cmp
lock
fldenv
repnz
je
push
in
cli
dec
dec
push
lds
scas
ins
clc
call
std
jnp
fsub
cmp
pop
sahf
xchg
rcl
push
dec
imul
push
(bad)
in
sbb
fmul
mov
jns
adc
xchg
(bad)
(bad)
(bad)
jg
xchg
in
pop
inc
in
push
xchg
dec
and
xor
or
jmp
in
dec
sahf
test
(bad)
jmp
lods
retf
xor
popf
retw
push
arpl
movs
dec
shl
(bad)
inc
sub
dec
adc
sbb
mov
sbb
scas
stos
jne
dec
mov
neg
mov
jle
lock
dec
push
mov
nop
retf
or
sbb
mov
inc
or
ss
sub
(bad)
(bad)
jg
inc
data16
mov
hlt
ins
hlt
push
adc
mov
and
jg
test
aaa
(bad)
enter
call
fldcw
and
fmul
cdq
enter
nop
hlt
out
jg
ror
add
leave
cld
sub
(bad)
(bad)
(bad)
call
sub
fwait
xchg
dec
cli
push
xchg
rcl
popf
jne
jo
jae
lds
mov
(bad)
(bad)
(bad)
jmp
xchg
cmps
sbb
cmp
scas
pop
xchg
leave
jb
mov
sub
sbb
fidivr
fld
dec
aas
jnp
mov
call
clc
loope
push
imul
cmps
dec
or
outs
mov
cmp
outs
fstp
cmp
mov
pop
cmp
push
mov
adc
sahf
dec
or
(bad)
jmp
mov
int
jle
out
cli
xchg
(bad)
jmp
in
inc
mov
daa
scas
fnstenv
das
in
fild
add
(bad)
fmul
fistp
xchg
cmp
push
cli
push
clc
lea
dec
mov
push
pop
push
inc
lock
pop
ins
(bad)
movs
jl
xlat
into
mov
inc
scas
push
adc
(bad)
aas
sti
repz
ins
test
repnz
test
stos
sub
fwait
pop
call
iret
mov
(bad)
push
cmp
jp
jmp
xchg
icebp
test
push
mov
jecxz
std
lods
iret
ds
retf
mov
into
(bad)
dec
fsubp
(bad)
in
xchg
adc
ins
and
loope
xchg
inc
sub
test
mov
and
ret
jb
mov
push
inc
outs
mov
fld
repnz
(bad)
in
dec
inc
fistp
out
jnp
xlat
sub
xor
int
xchg
rcl
(bad)
mov
popf
mov
pop
push
lea
or
(bad)
dec
adc
mov
fidivr
(bad)
call
scas
(bad)
out
jno
pop
push
cmp
out
shr
fwait
into
rcl
fadd
mov
and
idiv
fbld
in
mov
icebp
jo
jo
mov
or
jmp
xchg
adc
(bad)
(bad)
dec
ja
sub
sub
mov
(bad)
xlat
inc
ins
adc
in
mov
repz
pop
(bad)
(bad)
jmp
xchg
mov
or
sbb
pop
sbb
(bad)
pop
or
mov
(bad)
push
out
mov
pop
(bad)
cmp
pop
out
inc
call
ss
push
xchg
jge
pop
(bad)
(bad)
(bad)
jmp
dec
cmp
jbe
sub
je
push
pop
les
pop
in
shr
sub
and
(bad)
(bad)
jmp
adc
sub
sub
mov
push
nop
movs
loope
cs
push
cmp
or
dec
shl
dec
adc
mov
dec
pop
jb
sbb
(bad)
(bad)
call
adc
mov
sbb
push
dec
inc
jl
cmps
dec
popw
ret
retf
xlat
int
mov
inc
(bad)
(bad)
(bad)
jmp
jle
push
mov
dec
jp
mov
mov
call
and
bound
aaa
std
or
adc
fidiv
adc
xlat
imul
xchg
push
mov
fcomip
jmp
fnop
inc
test
jp
imul
dec
repnz
and
lock
adc
(bad)
call
xor
add
xchg
rcr
loopne
adc
outs
inc
sub
bound
cmp
mov
xor
add
xor
call
shl
ins
sub
push
imul
pop
aaa
std
(bad)
call
pop
inc
cmps
popa
xchg
inc
adc
sahf
adc
mov
or
clc
popf
add
pop
jno
add
or
aaa
std
jmp
lods
or
xchg
popa
test
jne
and
aaa
(bad)
(bad)
(bad)
call
sub
jne
xchg
and
int3
je
or
gs
neg
adc
mov
loopne
or
cld
push
push
fs
and
dec
pop
push
jo
popa
outs
sbb
adc
in
adc
inc
jle
dec
add
(bad)
fisubr
xchg
sub
inc
mov
addr16
retf
std
(bad)
(bad)
fbld
mov
jbe
pop
pop
push
(bad)
sbb
mov
stos
or
(bad)
jmp
jb
sub
fadd
add
push
xor
js
loopne
ja
sar
xchg
add
rol
out
cmp
jg
fcom
cmp
add
pop
fptan
xchg
out
jge
add
fwait
inc
xor
sub
and
mov
(bad)
push
mov
mov
add
xor
adc
call
inc
adc
pop
mov
inc
mov
jno
(bad)
(bad)
inc
add
les
xchg
lds
dec
call
setno
jnp
mov
out
mov
xor
ins
cmp
mov
(bad)
push
(bad)
mov
arpl
push
xchg
aad
outs
fdivr
outs
xor
push
push
mov
loope
mov
pop
mov
add
push
mov
inc
sbb
sbb
outs
cli
call
dec
stos
scas
imul
pop
sub
xchg
sub
and
or
cmp
loopne
stos
(bad)
(bad)
(bad)
call
xor
mov
jmp
inc
jg
je
xchg
xchg
(bad)
add
cmp
(bad)
(bad)
mov
jge
out
mov
ins
mov
fsubr
or
xor
xchg
inc
jnp
pop
div
inc
pop
enter
mov
or
(bad)
(bad)
(bad)
jg
pop
push
push
(bad)
arpl
gs
ror
loop
fdiv
push
(bad)
int3
jo
(bad)
test
(bad)
(bad)
(bad)
mov
imul
call
ret
pop
sub
adc
call
movs
das
ds
adc
sub
mov
mov
pop
cmp
jbe
pop
hlt
(bad)
mov
and
(bad)
bnd
out
aaa
jl
jne
sub
fdivr
(bad)
(bad)
jg
mov
and
in
lods
jecxz
mov
lods
fld
shl
(bad)
(bad)
call
nop
mov
inc
test
mov
das
(bad)
retf
dec
pop
cmp
dec
(bad)
jmp
xchg
inc
call
xchg
sti
mov
popa
mov
cld
sahf
push
addr16
xor
push
mov
cli
call
nop
sub
adc
je
fisubr
cli
mov
jg
pop
mov
shl
xchg
ret
and
cs
pop
add
jmp
xchg
repz
jbe
ins
popf
jno
loope
mov
xor
ja
std
jg
or
imul
ret
inc
mov
test
add
mov
cmp
(bad)
(bad)
mov
push
ret
inc
inc
xchg
(bad)
jmp
cmp
sub
(bad)
(bad)
fbld
mov
repz
out
rcl
mov
sbb
jmp
mov
jnp
jne
(bad)
mov
repz
clc
repnz
mov
xchg
retf
cli
pop
push
aas
repnz
(bad)
(bad)
fcom
mov
push
aam
jo
jno
xchg
pop
mov
pop
fcomip
(bad)
mov
jle
xchg
jle
(bad)
fidivr
xor
test
and
lahf
jge
enter
imul
lods
int
dec
call
mov
jg
jl
fistp
aaa
push
or
sub
stos
(bad)
(bad)
dec
imul
jmp
push
retf
pop
mov
xchg
cwde
sub
ins
call
std
push
and
push
cmp
out
jge
xlat
in
cli
jg
call
(bad)
ds
mov
pop
addr16
or
push
sbb
movs
or
add
hlt
aaa
cld
(bad)
call
ss
mov
push
adc
push
and
xchg
sub
(bad)
das
clc
mov
rcr
je
in
push
cmp
(bad)
dec
mov
(bad)
fnstcw
stos
out
imul
cmp
(bad)
push
mov
out
sbb
ds
cmp
pusha
dec
xchg
aad
push
inc
shr
pop
jbe
outs
scas
adc
(bad)
(bad)
inc
and
pop
inc
scas
mov
and
pop
adc
mov
mov
mov
push
and
and
mov
xchg
inc
inc
lea
cli
add
call
mov
arpl
pop
aas
push
push
adc
fidiv
hlt
pop
sub
pop
mov
mov
in
add
and
mov
push
mov
and
push
mov
or
in
stos
retf
push
push
cld
and
dec
into
cs
pop
inc
pop
add
lock
inc
hlt
mov
nop
cmps
inc
movs
mov
xchg
repnz
push
test
scas
enter
or
xchg
jns
adc
lea
sub
(bad)
(bad)
(bad)
call
outs
pop
daa
in
js
push
daa
or
jmp
outs
adc
cmp
mov
jmp
(bad)
inc
repnz
sub
mov
inc
dec
jge
pop
jp
push
xchg
ins
daa
int
lock
dec
mov
sub
(bad)
jmp
inc
add
mov
xchg
hlt
jmp
sahf
inc
call
dec
dec
iret
inc
(bad)
loopne
das
cli
mov
mov
inc
lea
in
dec
pop
push
push
stos
out
push
(bad)
(bad)
jnp
loope
out
mov
mov
mov
test
and
ins
inc
add
lea
push
push
js
pusha
and
push
repz
adc
dec
(bad)
call
cmp
mov
and
sbb
adc
(bad)
(bad)
dec
jno
inc
ss
mov
push
cmp
ds
xchg
jecxz
jl
sar
dec
aam
push
dec
aad
xor
enter
mov
pusha
xchg
ror
dec
cli
jmp
test
cmps
in
mov
enter
(bad)
jmp
and
ins
movs
fadd
adc
test
or
pop
je
dec
test
mov
mov
add
inc
ds
js
arpl
scas
jo
jmp
or
pop
or
jae
je
adc
test
mov
xor
jno
and
jne
popw
out
mov
popa
jo
(bad)
out
cli
inc
loope
adc
pop
enter
cld
fnstenv
pop
rol
push
das
dec
mov
mov
or
adc
(bad)
ja
(bad)
mov
aaa
cli
ret
cs
aad
pop
es
iret
out
nop
sbb
add
pop
pop
(bad)
(bad)
mov
adc
pop
sar
(bad)
(bad)
cmp
inc
lods
fwait
xor
push
leave
sub
dec
(bad)
mov
enter
cs
fisub
(bad)
mov
das
in
pop
cmp
ret
or
nop
jo
jb
add
pop
rcl
retf
int
push
mov
aas
jno
int3
loopne
(bad)
(bad)
aas
jle
mov
cmp
push
fidiv
add
sub
loopne
lock
(bad)
inc
pusha
mov
xor
jae
jae
jmp
imul
pop
aas
xor
cmp
jmp
(bad)
lock
and
sbb
cmp
imul
mov
ja
(bad)
rsqrtps
ud0
fwait
inc
fs
loopne
dec
mov
xchg
aad
pop
pop
movs
out
sbb
(bad)
push
pusha
or
push
jo
push
scas
xchg
mov
mov
add
sbb
pop
test
pushf
xor
mov
push
and
and
sub
(bad)
(bad)
(bad)
(bad)
jl
dec
sub
out
aam
dec
and
sbb
and
xor
imul
(bad)
jmp
jp
loope
loope
sbb
sub
jl
mov
outs
xchg
mov
outs
(bad)
(bad)
(bad)
call
es
cwde
fdiv
xlat
mov
hlt
adc
cmps
lock
mov
bound
stos
dec
iret
pop
lock
(bad)
call
xchg
adc
aaa
fstp
leave
dec
fdivrp
lods
mov
aad
mov
leave
jg
(bad)
jmp
jmp
repnz
jecxz
dec
stc
ds
inc
shl
je
or
sub
add
fwait
jmp
(bad)
mov
mov
ins
adc
jge
inc
cmp
push
mov
push
int
ffreep
xchg
ins
mov
(bad)
(bad)
push
or
adc
fisttp
jae
das
xchg
out
cmps
mov
clc
mov
cmp
jle
leave
mov
pop
pop
imul
mov
daa
mov
push
(bad)
dec
sub
enter
stc
mov
dec
xchg
sbb
call
pop
sbb
(bad)
and
into
mov
(bad)
(bad)
inc
cld
shl
xchg
and
push
inc
pop
sti
or
jl
jg
jno
aas
icebp
adc
jg
out
inc
dec
ficomp
es
aas
movs
mov
pop
icebp
jo
mov
outs
(bad)
push
xlat
out
mov
cmc
adc
pop
std
push
mov
cmp
out
sub
imul
(bad)
in
fdiv
dec
cmp
add
adc
mov
xor
cdq
cmp
or
jb
jg
(bad)
mov
mov
sbb
dec
ds
cwde
mov
shl
pop
inc
loopne
repnz
(bad)
fcmove
int3
mov
les
(bad)
(bad)
(bad)
inc
std
aas
sti
xor
jmp
push
sbb
lea
cmps
pop
push
sub
xchg
out
lods
xchg
sbb
(bad)
mov
xchg
mov
retf
fnstsw
ror
out
in
(bad)
repnz
icebp
inc
out
mov
jle
call
sub
cld
xor
ins
mov
push
and
mov
call
es
nop
xor
rol
std
test
fsub
fadd
(bad)
clc
dec
dec
jg
xchg
sub
call
fsubr
sbb
(bad)
(bad)
(bad)
push
pop
add
add
mov
adc
pop
push
lahf
fwait
jne
das
mov
adc
(bad)
inc
aaa
imul
jmp
jle
xchg
les
ss
(bad)
call
ret
sub
cmp
and
pop
outs
mov
outs
call
dec
jp
shl
push
xor
fist
mov
push
dec
ror
sbb
mov
push
stc
adc
(bad)
mov
(bad)
add
jno
jne
push
xchg
push
stos
movs
icebp
mov
add
add
cwde
shr
add
sbb
(bad)
(bad)
(bad)
call
je
push
sbb
mov
fld
rol
data16
push
adc
mov
(bad)
(bad)
inc
xchg
hlt
dec
js
lods
arpl
xor
or
mov
std
(bad)
jg
in
mov
inc
adc
sbb
jno
xor
push
adc
les
jmp
call
xor
(bad)
loopne
mov
test
inc
fisttp
aam
xchg
add
mov
enter
inc
sub
mov
sbb
mov
inc
dec
loop
scas
ja
sar
jns
aaa
leave
cmp
inc
out
push
jmp
jmp
and
mov
xor
(bad)
call
in
cwde
jne
mov
sti
out
fisub
into
leave
(bad)
(bad)
(bad)
mov
adc
pop
sub
mov
int
loopne
mov
cmps
xchg
sbb
popf
inc
(bad)
dec
dec
or
xchg
(bad)
(bad)
(bad)
cmp
xchg
call
fs
cmp
mov
fwait
mov
mov
inc
(bad)
pop
xchg
sub
or
inc
ret
pop
add
cmp
or
sub
push
or
rol
jne
retf
jbe
sub
fs
mov
in
pusha
mov
jb
inc
aaa
and
jp
sbb
loop
shl
sbb
dec
(bad)
(bad)
(bad)
dec
mov
in
sbb
mov
push
popa
outs
push
jl
repnz
pushf
in
push
call
sub
jmp
clc
jmp
jo
add
pop
dec
bound
jp
xor
mov
or
mov
mov
inc
dec
lods
(bad)
jae
mov
repz
jg
(bad)
jmp
sbb
add
or
push
js
scas
push
push
adc
sti
out
lahf
sub
fild
push
push
push
outs
or
cld
lock
(bad)
(bad)
mov
xchg
xchg
arpl
imul
xchg
call
mov
mov
das
fcomip
(bad)
jmp
add
xchg
call
pop
ja
or
mov
(bad)
(bad)
(bad)
call
shr
lods
mov
cmp
fisttp
mov
mov
push
push
mov
or
scas
fsub
mov
or
pop
jge
(bad)
(bad)
(bad)
dec
ins
cmp
aas
imul
rcr
jl
aad
popw
dec
pop
fild
xor
pop
in
xchg
(bad)
dec
std
(bad)
(bad)
inc
pop
lahf
sbb
ficom
pop
cmps
add
cmp
lea
pop
stos
mov
scas
clc
ja
ret
pop
test
jbe
lock
xor
mov
retf
jne
data16
pop
xchg
movs
sub
cli
(bad)
push
rol
pop
sub
xor
sti
dec
pop
cld
out
or
repz
js
push
clc
(bad)
jg
(bad)
or
test
lds
mov
jmp
pop
mov
push
mov
xor
out
lea
fidiv
xchg
push
clc
dec
(bad)
(bad)
(bad)
call
xchg
call
(bad)
cmp
xchg
xchg
adc
push
cld
shl
add
add
dec
adc
pop
shl
in
scas
dec
jle
xor
dec
(bad)
(bad)
(bad)
(bad)
jmp
sub
mov
not
dec
or
and
fnstcw
dec
mov
popa
aam
mov
fidivr
pop
dec
push
or
inc
jp
aaa
mov
mov
add
arpl
or
jge
ss
shr
mov
(bad)
call
hlt
in
jge
pop
or
pop
pop
dec
das
xchg
enter
cmc
in
jl
call
jb
pop
lahf
jno
clc
pop
and
es
push
mov
sahf
add
push
jmp
(bad)
jecxz
hlt
idiv
lods
pushf
nop
dec
test
ins
int3
pop
fld
jns
jecxz
scas
mov
jmp
sahf
jae
xlat
shr
mov
jb
imul
cmps
cmp
push
out
mov
jmp
call
scas
lock
call
retf
icebp
mov
cmps
pop
mov
shl
test
cdq
repnz
mov
aas
ds
je
call
add
jbe
rcr
xchg
sub
mov
loop
ror
mov
push
daa
push
cmps
imul
push
call
je
addr16
jb
dec
gs
adc
xor
dec
mov
(bad)
inc
test
in
fidiv
cmp
int
or
(bad)
jmp
push
push
sbb
xor
sbb
or
jge
push
scas
lock
(bad)
jg
cdq
jle
jecxz
mov
pop
les
mov
stc
lea
daa
pop
mov
hlt
push
mov
sahf
ds
xlat
push
in
ins
int
mov
fs
mov
mov
inc
mov
jbe
loope
jle
cmp
(bad)
ds
mov
jle
xchg
daa
(bad)
ins
sbb
jle
mov
imul
add
nop
jge
cli
xchg
jge
loop
add
(bad)
call
and
xchg
sahf
lea
ss
mov
icebp
repnz
cli
(bad)
xor
mov
jmp
std
ja
inc
out
es
mov
jge
fstp
jo
jg
ja
and
rcl
adc
rcl
sbb
(bad)
(bad)
dec
mov
dec
ret
pop
(bad)
cmp
shl
fisttp
mov
gs
(bad)
xchg
cmp
push
and
(bad)
mov
shr
nop
shl
xor
leave
fcom
in
xor
xor
sub
pop
(bad)
inc
mov
mov
xor
pop
addr16
ds
(bad)
(bad)
(bad)
(bad)
cmp
repz
or
test
adc
je
clc
repz
(bad)
(bad)
(bad)
jns
or
cwde
add
ja
xchg
fisttp
sbb
or
and
push
stc
jno
xor
dec
clc
out
shl
into
out
(bad)
(bad)
(bad)
dec
ficom
(bad)
fimul
xchg
sbb
fcom
inc
or
(bad)
dec
cmc
inc
inc
add
adc
pop
xchg
enter
dec
or
(bad)
(bad)
(bad)
fdivr
xor
push
xchg
or
add
int
sub
ret
lods
jmp
jno
xor
and
icebp
dec
and
test
aad
mov
cmp
dec
(bad)
dec
push
in
addr16
pop
sar
in
mov
(bad)
(bad)
(bad)
jmp
clc
into
(bad)
pop
lahf
lock
retf
scas
pushf
cwde
popf
pop
mov
ret
adc
push
fsubr
scas
cmp
sub
mov
mov
and
mov
push
xor
or
sbb
mov
cmps
out
xchg
cwde
stc
(bad)
jg
mov
sub
shr
loop
sbb
jecxz
inc
clc
test
and
jbe
add
pop
xor
or
test
jmp
inc
enter
mov
mov
adc
(bad)
(bad)
jmp
movs
pushf
add
xor
mov
pop
outs
nop
push
sbb
or
mov
(bad)
dec
fs
mov
(bad)
daa
fwait
mov
push
push
sahf
jne
xor
or
imul
test
xor
fadd
fs
in
jle
mov
jbe
fnstenv
(bad)
call
(bad)
(bad)
jl
lds
lds
data16
or
(bad)
sahf
icebp
(bad)
cmp
sahf
ins
pop
and
pop
lods
stc
xchg
mov
xchg
outs
push
out
and
dec
inc
push
push
sar
loope
imul
mov
jmp
cmp
aas
mov
lds
(bad)
jmp
test
in
ja
(bad)
icebp
mov
in
mov
mov
sbb
add
out
out
pop
jmp
(bad)
call
xchg
pushf
add
js
retf
aas
jo
pop
mov
mov
out
cwde
(bad)
div
lock
mov
ins
jmp
pop
xchg
cmps
jge
xor
(bad)
(bad)
dec
ret
mov
sub
in
xchg
pop
lea
jb
stos
fstp
(bad)
(bad)
(bad)
jle
pop
iret
push
dec
(bad)
ja
sbb
jecxz
mov
imul
fldcw
(bad)
(bad)
(bad)
jmp
je
out
inc
jl
xor
test
pop
aaa
fbstp
sub
mov
(bad)
(bad)
jg
clc
mov
push
pop
pop
xor
jb
xchg
rcl
fbstp
cmp
cmp
mov
in
(bad)
enter
cmp
jo
aaa
jmp
jno
int3
fidiv
rcl
xchg
mov
sti
(bad)
(bad)
(bad)
mov
add
ret
dec
mov
and
add
mov
jns
push
jge
inc
movs
xor
nop
sbb
stos
(bad)
(bad)
(bad)
call
movs
add
push
cmp
or
(bad)
jmp
sub
ds
or
sar
and
add
or
mov
inc
dec
test
cmc
scas
aam
cmps
sub
outs
cdq
push
cmp
pop
cmp
out
(bad)
jmp
test
inc
outs
dec
ds
loopne
mov
fwait
jne
loope
mov
(bad)
gs
pop
gs
push
leave
stos
mov
(bad)
xlat
clc
sahf
dec
popa
add
(bad)
(bad)
cmp
mov
jo
xor
hlt
cli
sbb
and
sbb
scas
jae
add
loop
mov
mov
(bad)
jmp
pop
hlt
sbb
dec
leave
sbb
pop
sub
fidivr
jno
fldpi
pop
dec
rcr
(bad)
call
xchg
test
shl
adc
fwait
aam
aad
cwde
clc
dec
xchg
out
repz
inc
adc
xlat
mov
mov
jmp
cmc
mov
cdq
rcr
add
je
mov
fmul
out
jmp
jle
in
add
or
sbb
(bad)
(bad)
(bad)
dec
aad
mov
repz
inc
cld
push
add
sub
inc
out
and
fstp
inc
mov
cli
xor
clc
adc
(bad)
(bad)
inc
adc
hlt
cld
imul
sbb
xor
mov
xchg
inc
bound
test
(bad)
jmp
movs
mov
dec
xchg
retf
xchg
repz
jne
xchg
(bad)
(bad)
(bad)
dec
aaa
mov
sub
xor
vfmsubpd
or
call
int
(bad)
dec
(bad)
(bad)
jl
push
dec
jmp
ss
push
xchg
bound
and
xchg
(bad)
(bad)
(bad)
call
push
ss
pop
cli
mov
jp
jbe
or
adc
inc
int3
add
cwde
stos
push
cmp
stos
int3
out
(bad)
(bad)
(bad)
jmp
sidtd
xor
mov
adc
scas
lea
(bad)
(bad)
(bad)
inc
add
fnstcw
in
xor
cmp
mov
cmp
mov
ins
cmps
lds
or
sar
(bad)
(bad)
dec
cdq
retf
imul
push
lds
mov
or
adc
xchg
outs
(bad)
(bad)
mov
popf
or
ins
sub
mov
(bad)
and
dec
xor
inc
mov
inc
int3
jmp
leave
sub
mov
mov
lock
lock
xor
out
aam
mov
(bad)
pop
jno
or
movs
in
loope
addr16
(bad)
(bad)
jmp
mov
loope
mov
(bad)
movs
test
data16
xchg
dec
adc
(bad)
mov
mov
xchg
mov
out
xor
clc
add
jg
xlat
adc
or
and
mov
ja
sbb
jb
push
xchg
movs
or
icebp
(bad)
(bad)
jmp
shr
adc
bound
enter
inc
das
push
dec
xor
adc
popf
scas
arpl
pop
add
push
push
pop
xchg
and
adc
scas
pop
inc
add
xlat
and
xor
pop
jmp
dec
add
arpl
mov
mov
inc
pop
cmp
inc
in
cwde
scas
add
scas
nop
rol
lahf
addr16
mov
aam
clc
mov
and
in
xchg
(bad)
call
adc
add
xor
inc
dec
sbb
lods
les
xor
and
mov
mov
(bad)
mov
dec
cmp
or
ficomp
mov
push
adc
iret
std
in
adc
jmp
cmp
and
push
mov
cmp
pop
sbb
or
dec
fidiv
lock
inc
clc
push
imul
inc
inc
sub
push
add
fldenv
cmp
clc
(bad)
call
or
sbb
mov
ror
adc
dec
xchg
or
(bad)
in
rcr
cwde
jl
rol
loop
ds
(bad)
(bad)
jg
jmp
fnsave
mov
shr
nop
dec
push
push
pop
cmp
mov
pop
pop
mov
(bad)
and
xchg
mov
cmp
repnz
lods
fwait
aaa
(bad)
scas
pop
cmps
out
(bad)
mov
cli
mov
xchg
add
hlt
fld
mov
aaa
sbb
mov
in
add
and
or
mov
pop
clc
fld
neg
int3
cmp
mov
xor
sar
push
popa
mov
rcr
sahf
fldcw
lock
call
push
and
int3
imul
pop
scas
push
stos
adc
push
inc
mov
pusha
cmp
clc
jmp
mov
add
nop
outs
stc
add
xchg
sahf
dec
(bad)
jmp
rcr
popf
dec
mov
push
add
movs
or
push
lods
jae
and
gs
(bad)
jmp
movs
add
dec
jae
lods
jl
enter
dec
dec
ret
sbb
aam
or
movlps
sub
sub
dec
rcl
dec
mov
jmp
outs
or
mov
mov
xor
leave
push
out
jno
jne
jo
cmc
push
movs
clc
dec
pop
(bad)
jmp
mov
or
out
sub
and
inc
aaa
xchg
cmps
xchg
adc
sub
mov
call
jg
push
aas
or
adc
mov
jnp
jge
dec
jnp
daa
mov
mov
sti
into
fistp
and
into
xor
leave
(bad)
(bad)
(bad)
dec
lods
inc
push
xor
push
jmp
scas
data16
into
and
add
jmp
jmp
jmp
jb
(bad)
xchg
data16
js
sub
sti
and
in
imul
jp
(bad)
dec
cmp
jmp
inc
adc
shl
pop
xchg
nop
fwait
(bad)
(bad)
mov
cli
mov
pop
sub
lea
push
cs
std
imul
(bad)
(bad)
jmp
xchg
call
shr
jbe
jbe
push
dec
(bad)
ret
in
add
push
sub
call
mov
cld
vhsubps
xor
cli
and
push
(bad)
pop
push
sbb
aaa
rol
jb
loopne
idiv
add
xchg
add
imul
stos
or
iret
pop
cmp
mov
jo
mov
mov
retf
aad
pushf
pop
pop
sbb
sub
sub
pop
ins
fmul
mov
xchg
push
stc
xor
fs
inc
test
cwde
xor
pop
jmp
inc
loopne
stc
and
ins
test
cld
adc
(bad)
(bad)
dec
jl
dec
mov
adc
sbb
call
mov
xchg
xlat
adc
adc
xchg
(bad)
(bad)
(bad)
call
or
and
test
jbe
scas
push
lea
jae
mov
dec
lock
(bad)
(bad)
dec
bound
adc
pop
jne
cmps
push
test
dec
or
test
push
add
pop
(bad)
call
fst
ins
mov
inc
(bad)
jbe
xchg
add
sbb
call
dec
lock
inc
mov
or
pop
lock
mov
sub
jo
jl
daa
test
pop
inc
and
mov
aad
pop
adc
inc
sbb
call
or
rcr
add
push
inc
repnz
cmp
(bad)
mov
addr16
inc
mov
cld
and
sub
out
lods
sub
je
mov
das
pushf
lea
das
shl
(bad)
call
and
or
sbb
add
(bad)
(bad)
call
das
pop
and
retf
and
sbb
out
mov
and
popf
lds
pop
and
in
imul
cs
outs
fldcw
mov
xchg
xchg
rol
dec
rol
(bad)
push
jp
retf
leave
cmp
outs
out
push
dec
in
and
xchg
xor
jle
lods
pop
adc
pop
std
das
adc
pushf
retf
and
and
inc
je
call
ret
jmp
and
pop
and
jge
or
xor
push
inc
fs
loop
jmp
clc
or
mov
test
jmp
bound
pop
xor
sbb
push
subps
jae
push
jnp
cmps
add
xor
push
fld
loop
dec
cmps
xor
lods
pop
outs
cmp
mov
in
inc
push
pusha
pop
dec
shr
call
dec
pop
icebp
test
pop
dec
inc
xchg
xchg
xchg
push
push
fs
mov
xor
(bad)
(bad)
(bad)
push
xor
pop
mov
mov
xor
popf
in
mov
lods
data16
(bad)
jmp
cld
in
pop
pop
icebp
pusha
repnz
or
(bad)
(bad)
mov
clc
aaa
jle
xchg
retf
inc
mov
cmc
jo
test
or
jp
(bad)
(bad)
call
shl
stc
sahf
das
xlat
nop
shl
add
icebp
or
bound
(bad)
(bad)
cmp
adc
shl
and
sub
and
add
cmps
js
push
adc
push
or
mov
push
imul
loope
call
mov
dec
(bad)
jo
lods
mov
(bad)
xor
iret
sbb
(bad)
(bad)
mov
push
push
mul
std
mov
sbb
pop
jno
sti
les
jl
inc
push
add
call
ins
fidivr
movs
xor
nop
retf
data16
mov
outs
mov
ins
rol
fbstp
mov
out
adc
xchg
xchg
xchg
mov
test
or
add
jnp
les
jl
mov
mov
mov
ds
cmps
add
inc
in
and
dec
pop
sub
test
aaa
mov
lods
push
lahf
aaa
sbb
(bad)
(bad)
(bad)
call
int
or
(bad)
pop
in
popa
ret
mov
lea
and
xor
sbb
inc
dec
pop
adc
das
std
nop
test
in
add
fld
and
(bad)
(bad)
call
cwde
sbb
loopne
mov
mov
stc
inc
cs
retf
repz
(bad)
in
push
rol
clc
(bad)
call
and
adc
in
stc
(bad)
mov
(bad)
mov
rcl
mov
fcom
sbb
xchg
jnp
cmc
(bad)
data16
mov
(bad)
(bad)
fisubr
into
fs
les
cdq
push
pop
adc
mov
popa
aaa
jmp
(bad)
call
jmp
imul
or
or
jl
clc
nop
scas
ss
lock
mov
or
push
call
inc
jp
mov
rcr
fbstp
sub
(bad)
(bad)
(bad)
call
dec
addr16
xchg
es
xchg
fcom
mov
jmp
rcl
sbb
std
add
fwait
pushf
lahf
xor
and
sub
ficomp
cmp
cmp
(bad)
call
pop
mov
hlt
xchg
daa
mov
lods
(bad)
popa
js
(bad)
xor
jmp
clc
dec
pop
movs
shr
mov
mov
ds
in
gs
push
aad
mov
movs
pop
xchg
and
imul
shl
jmp
mov
sub
popa
enter
repnz
fnsave
add
jae
push
inc
sub
into
pop
aaa
in
ficom
pusha
int
iret
popf
cmp
sub
(bad)
call
cmc
(bad)
scas
popf
cmp
ds
adc
js
push
sahf
out
cmp
sbb
mov
sbb
pop
push
outs
mov
cmps
mov
pop
sti
outs
mov
(bad)
(bad)
call
fistp
sbb
addr16
xchg
jmp
ins
fnstsw
scas
inc
add
cld
add
out
pop
pop
and
gs
mov
int
cmp
fadd
aas
(bad)
(bad)
(bad)
jmp
push
es
movs
addr16
stos
(bad)
out
jno
mov
scas
retf
daa
cmps
xchg
or
(bad)
(bad)
dec
in
inc
sub
cmp
inc
cmp
add
mov
adc
and
clc
push
in
xor
addr16
jne
dec
(bad)
(bad)
(bad)
jg
mov
hlt
cwde
inc
test
daa
ret
stos
mov
push
pop
pop
ins
ins
movs
mov
sbb
cmps
(bad)
push
std
pop
sti
sub
bound
cmp
loopne
inc
and
fsub
adc
add
(bad)
(bad)
inc
retf
push
xor
or
xlat
dec
test
jge
sub
push
jg
inc
add
xchg
mov
cld
push
(bad)
(bad)
(bad)
(bad)
mov
dec
sub
lds
sbb
call
adc
push
call
ja
call
or
inc
test
adc
or
mov
sbb
push
popf
sbb
repnz
sbb
jmp
jbe
mov
daa
stc
mov
jae
int3
nop
leave
inc
into
(bad)
(bad)
(bad)
dec
mov
(bad)
sahf
sar
retf
fisttp
push
repnz
push
push
cld
jmp
(bad)
jmp
cmp
iret
jmp
aam
sub
sbb
fsub
(bad)
jmp
push
jno
pop
test
push
cmp
or
adc
aas
push
in
inc
xor
rcl
(bad)
(bad)
jne
xchg
inc
and
pop
mov
(bad)
(bad)
inc
cmc
shl
cdq
pop
adc
adc
imul
test
sbb
inc
xchg
adc
(bad)
(bad)
inc
bound
inc
nop
lods
test
inc
cs
arpl
mov
ret
(bad)
jmp
and
mov
sbb
bound
jmp
mov
jle
mov
inc
sbb
xchg
cmp
adc
add
(bad)
(bad)
dec
or
xchg
xor
std
inc
or
stos
or
arpl
push
lods
std
xchg
into
aas
mov
fs
add
(bad)
call
xchg
ss
imul
push
bound
call
jmp
jmp
xor
daa
(bad)
(bad)
call
dec
scas
js
jns
pop
stos
sbb
sahf
mov
ret
xchg
pop
sbb
out
cmps
fiadd
lods
add
loope
sti
xor
jge
rol
gs
cli
stos
push
or
sbb
clc
jnp
and
and
or
inc
mov
xchg
icebp
(bad)
(bad)
call
ficom
pushf
mov
mov
movs
repnz
aam
in
cmp
dec
(bad)
dec
sub
fistp
aad
mov
sti
pop
ja
xor
pop
jbe
(bad)
(bad)
(bad)
(bad)
fucomp
je
daa
(bad)
pop
mov
jmp
rol
and
cmps
cmps
stos
aad
(bad)
leave
mov
push
cmp
int
je
ins
push
jp
cmp
(bad)
(bad)
(bad)
out
sub
add
jne
xchg
adc
push
inc
xchg
int3
mov
adc
imul
loopne
mov
ins
cmp
dec
dec
aam
mov
ins
jle
push
adc
mov
(bad)
jmp
mov
and
sbb
loope
mov
ss
cmc
inc
dec
movs
fs
sub
sbb
jmp
dec
fsubr
ds
cmp
into
and
push
(bad)
(bad)
(bad)
jmp
pop
call
fcomp
add
fmul
push
add
scas
in
(bad)
fsub
jmp
mov
nop
clc
cdq
shl
cmp
fld
clc
push
inc
adc
inc
xchg
or
ret
(bad)
push
push
mov
sbb
les
popf
jge
inc
or
stos
jecxz
push
fwait
ss
call
dec
(bad)
(bad)
(bad)
call
mov
outs
dec
iret
in
pushf
cmp
xor
pop
fdivr
cmp
sbb
or
jb
outs
(bad)
call
add
in
std
pushf
jno
push
loope
xor
call
jo
int
idiv
outs
xor
std
xor
mov
cmp
sar
jbe
(bad)
(bad)
(bad)
jmp
cmps
inc
sar
cli
std
jnp
lods
sbb
push
xchg
xor
in
pop
push
(bad)
ja
pop
fisttp
nop
cmc
es
stos
repz
xchg
in
fisubr
jl
popa
jae
lods
dec
mov
dec
(bad)
mov
shr
(bad)
jmp
or
jle
inc
(bad)
hlt
mov
loopne
pop
or
out
add
outs
cmp
dec
clc
(bad)
(bad)
jmp
outs
fidiv
dec
fsubr
pop
or
loopne
mov
popa
test
mov
push
cli
dec
scas
call
mov
adc
(bad)
call
cwde
or
and
push
lods
push
div
lods
pushf
mov
call
inc
dec
jl
xor
pop
mov
(bad)
(bad)
(bad)
(bad)
jg
rol
ss
ins
movs
or
lock
fild
inc
cs
mov
or
lods
adc
ss
adc
add
jno
mov
pop
js
mov
xor
push
lock
inc
dec
push
stos
loopne
enter
gs
ss
pusha
js
sbb
(bad)
fild
cvtdq2ps
adc
cmp
aam
out
cld
push
icebp
(bad)
add
pop
mov
fld
inc
enter
push
push
and
xor
sbb
(bad)
(bad)
(bad)
push
adc
ret
mov
mov
mov
xchg
hlt
test
and
mov
shl
repnz
shl
(bad)
(bad)
inc
das
inc
mov
or
mov
inc
leave
mov
sbb
cmps
adc
mov
push
(bad)
(bad)
jmp
dec
mov
out
es
dec
inc
ror
and
inc
add
add
xor
mov
sbb
mov
mov
dec
mov
push
add
push
(bad)
(bad)
(bad)
inc
sbb
retf
mov
cmp
stos
movs
test
mov
mov
clc
leave
into
(bad)
repnz
loop
(bad)
call
cmc
mov
xor
aad
fsub
sub
sar
fiadd
pusha
dec
nop
push
and
inc
or
dec
or
aam
push
test
test
shl
(bad)
(bad)
inc
ins
fsub
inc
and
inc
imul
das
call
(bad)
pop
(bad)
pop
pop
push
push
(bad)
(bad)
fistp
xchg
xchg
or
or
pop
jmp
adc
pop
push
jmp
xchg
sbb
jp
lahf
(bad)
jo
mov
jp
daa
inc
jmp
ret
daa
push
dec
in
sbb
mov
mov
(bad)
(bad)
(bad)
jmp
jmp
aam
mov
pushf
not
es
lds
or
retf
add
push
lock
nop
(bad)
(bad)
(bad)
(bad)
mov
test
mov
loope
into
ret
or
pop
xchg
popa
or
movs
pusha
and
(bad)
(bad)
inc
mov
xor
std
and
int3
and
dec
sbb
xlat
psubusw
(bad)
mov
mov
and
rcl
or
(bad)
(bad)
(bad)
mov
in
sbb
or
jle
adc
inc
sub
sub
adc
or
dec
or
pop
and
test
jmp
dec
xchg
popa
xchg
cdq
je
(bad)
mov
mov
push
adc
mov
into
popf
or
cmps
mov
add
push
(bad)
(bad)
(bad)
jg
aam
fmul
mov
cmp
in
movs
bound
fldcw
cs
cs
jb
cli
sub
(bad)
dec
dec
(bad)
(bad)
(bad)
jmp
xchg
nop
jp
pop
bound
sbb
sbb
add
push
outs
icebp
ret
mov
mov
dec
jl
outs
stc
idiv
jecxz
jecxz
xrelease
adc
data16
cmps
inc
ret
jmp
(bad)
xchg
mov
test
xor
repz
retf
hlt
pop
push
push
aaa
fimul
jge
(bad)
(bad)
jmp
jmp
aad
fs
and
fst
jbe
mov
jmp
aam
in
add
fdivrp
add
js
fucomi
shr
fnsave
fimul
add
push
mov
jge
ret
aam
mov
(bad)
fistp
jmp
dec
das
cmp
(bad)
(bad)
push
or
fisub
fstp
movs
sub
jae
mov
sbb
pop
or
push
stos
out
push
push
add
mov
jmp
fnsave
xchg
out
aam
push
mov
clc
jmp
sub
push
mov
fs
mov
cld
jmp
mov
push
push
cdq
mov
iret
sbb
cmp
or
sbb
(bad)
(bad)
jmp
dec
in
or
sbb
dec
mov
jae
clc
add
or
ins
cmp
test
adc
jo
jge
loop
in
push
and
in
dec
sub
int
movs
fsub
(bad)
(bad)
jmp
mov
lea
or
fnstcw
ins
cmc
xchg
test
aaa
dec
sub
stos
fld
jmp
rol
pop
adc
ret
call
cmc
stos
mov
gs
mov
sub
adc
rcl
push
xchg
or
hlt
std
mov
mov
scas
push
xchg
push
push
shl
dec
shl
and
clc
(bad)
jg
(bad)
sbb
leave
push
mov
bound
mov
adc
fld
scas
mov
(bad)
(bad)
(bad)
(bad)
mov
cmps
repnz
int
repnz
fdiv
jp
jmp
cmps
in
lods
test
(bad)
(bad)
(bad)
jmp
shr
pusha
sbb
(bad)
shr
adc
(bad)
enter
sar
add
addr16
ret
adc
cmp
(bad)
(bad)
(bad)
(bad)
jnp
xor
inc
cmp
xor
or
sbb
push
push
rol
icebp
shl
jmp
inc
mov
pop
jo
aas
pop
xor
and
adc
mov
push
imul
inc
stc
in
xlat
repz
xchg
mov
sbb
(bad)
jmp
outs
ss
xor
shr
in
outs
push
(bad)
(bad)
call
loopne
cmp
aad
sbb
cs
mov
outs
mov
in
int
idiv
(bad)
(bad)
std
jb
mov
or
xor
aaa
sbb
add
pop
xor
ds
jg
lock
aaa
cmp
cmp
jnp
movs
pop
aam
into
(bad)
(bad)
(bad)
push
or
popf
and
adc
xor
adc
stc
mov
movs
pop
leave
push
mov
inc
sbb
mov
and
stos
rol
or
inc
aam
mov
adc
jmp
out
ret
pop
int
in
pop
adc
pop
(bad)
mov
dec
inc
retf
xor
adc
add
cli
rcr
xchg
rol
(bad)
inc
push
add
lahf
addr16
call
and
mov
mov
pop
loop
call
sar
(bad)
(bad)
(bad)
call
push
repz
mov
js
and
push
adc
imul
test
and
pop
pushf
popf
(bad)
(bad)
(bad)
dec
adc
xchg
shr
nop
fdiv
push
inc
xchg
stc
mov
mov
(bad)
(bad)
call
adc
les
loopne
xor
shr
xchg
dec
cs
xor
int
jae
enter
mov
mov
fwait
sbb
(bad)
sub
(bad)
repz
pop
pop
ins
mov
(bad)
jmp
adc
test
fimul
adc
aas
xchg
in
jle
retf
ret
mov
(bad)
(bad)
call
lods
sbb
xor
mov
js
fnsave
adc
(bad)
(bad)
call
dec
ja
mov
push
push
and
nop
ins
adc
jl
clc
and
sbb
(bad)
(bad)
(bad)
jmp
mov
ret
cli
push
or
ret
pop
push
inc
mov
mov
ss
(bad)
inc
arpl
rcr
xchg
xor
push
inc
sbb
enter
int
out
ins
jg
(bad)
(bad)
call
cmp
inc
imul
pusha
jne
popf
jg
retf
imul
cmp
push
aaa
cld
(bad)
inc
les
jp
cmp
cwde
and
inc
push
scas
add
(bad)
fcomip
(bad)
jmp
and
dec
inc
arpl
mov
dec
adc
inc
dec
xchg
adc
(bad)
(bad)
(bad)
jmp
cdq
jecxz
enter
inc
inc
ins
pop
fmul
inc
stos
gs
inc
lods
leave
mov
sbb
xchg
test
(bad)
(bad)
dec
xchg
mov
test
dec
out
std
xlat
aas
fbld
daa
mov
lods
sub
cmp
(bad)
jmp
mov
call
test
sahf
mov
shl
clc
(bad)
cmp
and
inc
cmp
cld
jmp
sbb
ss
sbb
(bad)
jne
push
(bad)
call
(bad)
fdiv
in
dec
jle
jecxz
sub
lock
or
inc
add
mov
arpl
inc
(bad)
(bad)
inc
dec
push
aad
fld
xchg
xchg
sbb
sub
scas
cmp
cmp
retf
dec
cmps
jg
mov
fild
jae
mov
mov
jmp
clc
lds
ds
adc
popf
cmp
outs
mov
and
jno
inc
fdiv
(bad)
jmp
test
fwait
outs
fisttp
xor
adc
jae
adc
int
mov
jp
shr
shr
add
dec
shr
addr16
mov
(bad)
mov
inc
cs
(bad)
xchg
mov
push
sbb
mov
(bad)
(bad)
(bad)
(bad)
jp
aas
mov
dec
aad
aas
loopne
xchg
cmp
dec
jmp
mov
fld
leave
xor
dec
sbb
(bad)
(bad)
call
nop
and
and
push
test
lahf
xor
es
je
int3
jg
test
(bad)
(bad)
in
and
rep
jb
enter
arpl
and
mov
xchg
test
jmp
sar
out
cmp
adc
mov
cs
jnp
int
adc
inc
aam
movs
(bad)
(bad)
push
shl
mov
imul
retf
jne
mov
out
xlat
xor
(bad)
(bad)
fisttp
jmp
inc
or
fwait
mov
mov
repz
inc
cmp
(bad)
(bad)
push
sbb
shl
or
jo
call
sbb
cmp
mul
jmp
(bad)
(bad)
jmp
pop
into
jns
test
inc
es
cmc
jo
test
test
lods
or
(bad)
(bad)
inc
mov
xchg
(bad)
lahf
clc
cmp
in
call
and
push
stos
jae
add
(bad)
(bad)
call
(bad)
xchg
sbb
mov
das
xor
dec
jbe
pop
cmps
aam
neg
scas
dec
cmc
fs
sbb
(bad)
(bad)
(bad)
(bad)
cmp
push
push
out
push
scas
ret
fistp
sub
out
adc
fdivr
clc
(bad)
(bad)
call
inc
jno
stos
or
gs
ja
inc
adc
out
std
mov
add
stc
imul
and
sbb
xchg
xor
push
cld
(bad)
(bad)
in
push
or
and
out
lock
pop
mov
xor
call
inc
neg
xchg
cs
sub
sub
pop
xchg
enter
repnz
jp
sbb
outs
mov
retf
mov
sbb
push
sbb
push
idiv
(bad)
(bad)
inc
mov
stos
into
inc
sub
cdq
sahf
pushf
xor
sbb
inc
add
enter
arpl
xlat
cmp
cli
jecxz
loope
mov
xchg
scas
mov
add
and
push
inc
inc
sbb
push
sbb
push
xchg
ret
pop
imul
dec
test
(bad)
call
ins
inc
fnstsw
test
scas
mov
std
scas
call
push
adc
pop
stos
stos
mov
cmps
mov
cli
outs
cmp
or
xchg
xchg
push
xor
es
xchg
(bad)
(bad)
dec
cmp
enter
popa
cmp
outs
out
pop
mov
daa
cmps
sub
int
(bad)
(bad)
(bad)
call
dec
and
inc
aam
dec
xchg
mov
add
add
es
lea
(bad)
push
std
jmp
retf
cmc
repz
adc
addr16
and
sub
scas
xchg
sbb
(bad)
(bad)
dec
es
call
inc
and
cmp
mov
jg
out
int
mov
cmp
cmp
or
xchg
cmps
or
inc
(bad)
(bad)
(bad)
call
sbb
cmp
mov
pushf
mov
arpl
push
sub
lods
(bad)
(bad)
jmp
or
ret
mov
leave
push
in
shl
adc
clc
cwde
mov
xor
(bad)
(bad)
jmp
adc
xor
add
aam
cmp
cwde
rol
xchg
sbb
(bad)
call
dec
pop
jne
rcr
xchg
xchg
sub
push
add
xchg
inc
cmps
and
(bad)
(bad)
(bad)
call
add
mov
(bad)
fst
sbb
mov
lea
lahf
stos
push
pop
jbe
je
mov
dec
and
mov
les
ror
movs
dec
ror
out
fistp
(bad)
(bad)
(bad)
dec
sbb
cwde
outs
aaa
mov
xchg
movs
stos
cli
aad
out
jle
push
xchg
push
or
(bad)
(bad)
inc
in
xor
dec
and
enter
or
hlt
and
dec
(bad)
inc
xlat
je
xchg
and
cs
sahf
bound
fcomi
or
adc
pop
fs
aaa
pop
and
js
pop
(bad)
stos
sub
add
add
jmp
pusha
mov
loopne
ds
aaa
std
mov
mov
in
test
mov
xchg
and
xchg
test
int
mov
jge
dec
cmps
mov
movs
add
sahf
dec
or
aad
pop
ss
push
push
popf
in
push
(bad)
(bad)
in
and
xchg
mov
mov
inc
stos
dec
push
pop
and
mov
adc
add
fadd
pop
sti
pop
fwait
(bad)
(bad)
call
and
push
and
out
js
cmp
rcl
cwde
push
popa
stos
cmp
inc
cmps
rol
cmp
cmps
push
stos
mov
fist
pop
(bad)
push
aaa
in
add
(bad)
push
(bad)
xchg
ja
js
mov
mov
jo
clc
ss
pop
lods
(bad)
(bad)
jg
inc
or
sbb
leave
jg
out
xchg
and
mov
xor
mov
pop
popa
jl
(bad)
(bad)
cli
jbe
jp
dec
(bad)
(bad)
(bad)
inc
lds
loope
or
icebp
ja
int3
mov
ffree
inc
sub
dec
and
stc
pop
jle
pop
sub
xchg
dec
sbb
sti
out
mov
xchg
push
dec
or
cdq
pop
scas
push
scas
inc
push
and
dec
add
js
push
shl
adc
mov
push
cld
call
adc
call
mov
mov
(bad)
ret
and
scas
repz
xchg
ins
pusha
outs
adc
sub
mov
test
xchg
pop
sub
jp
jno
xor
add
adc
xchg
shl
cmps
sahf
cmp
fadd
cmpps
retf
in
(bad)
(bad)
(bad)
jmp
xchg
mov
in
pop
mov
dec
mov
inc
xor
sub
xchg
jecxz
test
mov
ss
push
cmps
nop
in
sub
jbe
xchg
jmp
in
shl
add
(bad)
in
mov
sub
push
push
cli
cli
mov
and
inc
push
pop
out
xchg
xor
cli
inc
add
xor
outs
(bad)
es
inc
and
dec
add
mov
mov
inc
push
(bad)
(bad)
(bad)
mov
mov
cmovns
cmps
dec
sahf
adc
push
(bad)
cmp
inc
jmp
ins
adc
jge
sar
(bad)
jb
mul
retf
retf
cli
cmc
jmp
sahf
cmp
push
mov
(bad)
jg
sub
into
pop
shl
pushf
or
jns
jae
xchg
adc
(bad)
mov
inc
inc
stc
(bad)
imul
sub
dec
bound
jo
jns
push
mov
fbstp
dec
adc
das
push
jnp
out
xchg
push
cmp
xchg
pop
push
ss
(bad)
(bad)
(bad)
cmp
imul
arpl
lea
(bad)
xchg
shr
(bad)
(bad)
inc
in
mov
cdq
shl
mov
out
or
gs
ja
push
lock
(bad)
push
inc
jecxz
imul
in
in
callw
je
inc
aaa
rcl
call
mov
bound
jmp
fs
out
pop
(bad)
push
lahf
mov
outs
popf
mov
(bad)
(bad)
(bad)
call
dec
push
cld
xchg
les
lods
inc
jne
fdiv
popa
outs
ret
and
(bad)
iret
rcr
fdiv
dec
(bad)
inc
mov
repz
pcmpeqd
lods
ins
sub
daa
mov
scas
pop
rol
sub
jmp
cli
popf
test
mov
inc
add
fld
cmps
sahf
lods
fdiv
enter
shl
popf
push
or
jns
scas
xor
sub
dec
mov
xor
les
jle
inc
(bad)
fisttp
or
xor
push
xchg
jp
(bad)
(bad)
(bad)
(bad)
jmp
dec
jmp
and
or
inc
les
lock
jmp
shr
xor
sti
inc
sub
(bad)
(bad)
mov
push
or
jmp
inc
mov
xor
popa
inc
pop
sbb
(bad)
(bad)
(bad)
call
cmp
sbb
pop
jo
pop
shl
jl
call
shl
bound
loop
(bad)
fiadd
or
call
lahf
xchg
loopne
loope
xchg
(bad)
(bad)
(bad)
inc
iret
mov
rol
popa
test
adc
ins
and
jg
(bad)
push
ret
and
pop
loop
cmps
cli
sub
dec
sbb
(bad)
(bad)
(bad)
jmp
push
call
mov
add
pop
mov
dec
pop
psubsb
inc
push
mov
ins
mov
imul
outs
scas
jo
mov
les
add
scas
nop
sahf
imul
fistp
(bad)
(bad)
(bad)
jg
ss
arpl
cmp
jmp
pusha
dec
jns
(bad)
in
sbb
int3
jb
or
call
mov
test
push
add
sbb
or
data16
(bad)
(bad)
call
mov
add
sub
inc
cld
ja
inc
ror
cmp
push
jmp
mov
add
add
les
mov
hlt
and
icebp
enter
push
sub
mov
push
mov
mov
dec
clc
add
(bad)
(bad)
push
inc
mov
and
and
mov
mov
jecxz
inc
push
mov
or
mov
push
mov
dec
mov
sub
loope
je
push
adc
or
xor
(bad)
(bad)
call
push
sbb
adc
mov
add
call
pop
and
gs
xchg
in
mov
icebp
fs
gs
lock
jg
or
iret
or
imul
mov
stc
sbb
iret
add
(bad)
cmp
cld
add
jmp
hlt
(bad)
(bad)
(bad)
out
mov
call
outs
mov
icebp
cmp
mov
or
push
repnz
adc
fcomip
movs
push
inc
std
sahf
mov
sbb
sbb
int3
or
jmp
jp
fcomp
xchg
lahf
in
fcmove
and
push
stos
pop
repz
xor
pop
or
fnstcw
push
adc
lea
cli
and
mov
inc
daa
jmp
(bad)
dec
push
hlt
cmps
imul
xor
mov
add
jg
cmp
ret
aaa
rol
(bad)
(bad)
(bad)
(bad)
fsubr
inc
mov
or
and
jge
xchg
xchg
leave
gs
adc
pop
jbe
pop
sub
jg
(bad)
nop
or
arpl
movs
xchg
xchg
movs
push
and
cmps
loop
(bad)
jmp
sub
or
lea
ret
lea
mov
jbe
out
cdq
jl
(bad)
(bad)
mov
mov
add
aas
aaa
cmp
stos
and
std
mov
and
(bad)
(bad)
jg
jbe
inc
inc
jo
out
and
daa
jne
pop
fsubr
jmp
mov
rcr
(bad)
mov
std
xchg
sar
pmulhuw
in
leave
sbb
(bad)
(bad)
inc
or
in
inc
retf
int
mov
(bad)
(bad)
(bad)
mov
shr
xor
mov
xchg
ins
pop
xchg
xchg
adc
(bad)
dec
iret
push
retf
icebp
(bad)
cmp
inc
sbb
cmp
adc
add
jae
hlt
add
nop
add
pop
mov
out
cli
(bad)
jmp
stc
dec
xor
outs
pop
call
or
add
pop
mov
push
sub
inc
std
dec
jp
bound
ret
push
scas
sub
shl
push
(bad)
(bad)
(bad)
call
sti
sbb
pop
leave
xchg
movs
sub
sbb
aaa
in
outs
fs
nop
sbb
call
(bad)
mov
jbe
lock
jo
jns
mov
dec
sbb
cmp
push
jl
clc
mov
data16
cmp
(bad)
stc
in
pop
cmp
sub
rol
adc
jnp
jo
mov
(bad)
(bad)
jmp
push
imul
mov
mov
push
inc
ret
or
in
lock
dec
cld
(bad)
(bad)
dec
add
jne
in
push
ins
ftst
shl
fisub
pop
xor
call
int
push
jecxz
hlt
imul
mov
mov
sbb
(bad)
push
xor
imul
dec
test
push
sub
push
jmp
test
pop
enter
cli
loope
cmps
ret
jmp
call
mov
mov
ins
rcr
les
inc
sub
bound
dec
and
leave
inc
push
mov
pop
in
mov
xor
lock
inc
dec
push
sub
add
(bad)
(bad)
(bad)
out
mov
scas
mov
shl
ret
cld
sub
pop
aad
dec
dec
cli
mov
(bad)
(bad)
jmp
mov
icebp
fistp
adc
fimul
push
iret
cmp
addr16
pop
adc
or
cmp
mov
enter
mov
nop
rol
inc
or
scas
(bad)
(bad)
(bad)
jmp
lods
or
inc
push
shr
stos
cmp
cs
inc
pop
rcl
jo
test
pop
dec
xchg
ret
or
pop
shl
pop
fnstsw
popa
inc
clc
(bad)
(bad)
mov
scas
call
mov
pusha
xor
cdq
push
aam
and
test
ror
cmc
mov
(bad)
(bad)
mov
mov
dec
retf
test
xchg
or
leave
nop
fst
xchg
(bad)
fcomip
jmp
mov
and
push
pop
or
pop
and
(bad)
call
or
out
(bad)
stos
bound
ins
fimul
add
mul
(bad)
(bad)
dec
ret
push
mov
enter
xchg
mov
hlt
dec
arpl
or
sbb
push
dec
push
and
dec
lock
xchg
sub
inc
inc
ret
and
or
jmp
sar
pop
mov
cs
mov
hlt
cdq
fmul
xchg
(bad)
(bad)
dec
addr16
cmp
sub
stos
xor
push
pop
push
or
and
inc
cmps
inc
loope
dec
sub
js
add
push
test
push
cmps
jecxz
jecxz
outs
pop
xor
cmp
mov
cli
div
cmps
xchg
cld
in
dec
mov
inc
fcomi
inc
inc
xchg
inc
or
add
mov
gs
xchg
push
mov
pop
hlt
in
add
(bad)
lea
jl
clc
adc
and
push
stc
adc
mov
aaa
adc
push
pxor
jae
clc
xchg
cld
and
loopne
xlat
pop
cmp
cld
out
les
add
stos
pop
xchg
mov
adc
sbb
and
and
sahf
xchg
xchg
add
xchg
popa
call
push
outs
mov
mov
test
pusha
dec
outs
js
addr16
and
mov
inc
xor
xor
fchs
inc
in
sub
adc
pop
test
mov
mov
outs
int
retf
xchg
fcmovnbe
mov
and
jp
mov
push
mov
imul
lods
enter
imul
sub
ja
ret
leave
movs
mov
cmp
add
call
sahf
pop
(bad)
(bad)
dec
and
aam
stos
gs
lods
repnz
ss
call
jmp
jnp
pop
xchg
or
lahf
and
ins
sub
(bad)
(bad)
(bad)
ds
mov
xchg
sub
pop
cmp
rcl
sar
pop
cld
sub
les
pop
imul
imul
bound
hlt
fmul
sbb
lods
cmps
cmps
jmp
call
(bad)
iret
xor
mov
in
adc
(bad)
mov
adc
cld
adc
imul
and
lds
(bad)
(bad)
(bad)
call
xchg
fld
and
(bad)
loope
pop
push
ds
test
out
bound
(bad)
(bad)
jmp
add
nop
pop
stc
(bad)
adc
les
and
cmp
mov
ret
loopne
ds
ds
jmp
clc
cs
mov
sahf
mov
in
push
xchg
sbb
mov
mov
sbb
mov
es
mov
mov
mov
outs
inc
aas
pop
sbb
dec
push
dec
dec
mov
xlat
jae
jg
jmp
xor
popf
jbe
sbb
jmp
push
sbb
(bad)
(bad)
(bad)
mov
lods
rcl
push
lds
mov
jle
dec
mov
(bad)
(bad)
(bad)
jmp
test
aam
loopne
dec
fs
or
fwait
mov
mov
adc
aam
push
xor
adc
icebp
jae
dec
scas
and
in
loop
pop
xchg
sbb
loope
jmp
jae
jmp
sahf
dec
inc
icebp
pop
mov
repnz
out
adc
je
mov
(bad)
jmp
cli
icebp
or
(bad)
lock
jno
fbstp
addr16
pop
and
sbb
sub
lods
aas
cmps
into
sub
(bad)
out
jo
sar
cwde
iret
cmps
lds
push
adc
mov
push
(bad)
(bad)
cmp
jmp
loope
and
int
pushf
cmp
das
pop
stos
rcl
push
dec
(bad)
(bad)
(bad)
call
int3
inc
fs
push
sbb
(bad)
mov
adc
adc
pop
mov
(bad)
xchg
nop
cmp
call
inc
or
or
(bad)
fst
ins
sbb
jo
push
xor
aam
and
fs
call
or
add
ja
aaa
push
(bad)
(bad)
(bad)
call
fidiv
sahf
mov
inc
mov
(bad)
icebp
icebp
imul
pop
aaa
ss
lahf
sub
xor
mov
in
(bad)
mov
repnz
pusha
ins
xor
sbb
lea
dec
(bad)
(bad)
(bad)
dec
aam
call
pop
inc
jns
xchg
cmp
test
adc
(bad)
jmp
or
lock
cli
adc
jg
dec
imul
sub
mov
call
test
(bad)
into
test
in
pop
and
mov
in
add
loope
(bad)
call
inc
sbb
loopne
(bad)
xor
pop
sub
jbe
gs
pop
cmp
data16
fcmovb
bound
cdq
pusha
push
sbb
mov
xchg
inc
inc
dec
imul
adc
das
arpl
dec
pop
fist
jae
movs
(bad)
(bad)
(bad)
jmp
sbb
xlat
xor
mov
cs
stos
call
(bad)
inc
mov
adc
(bad)
(bad)
(bad)
call
enter
aam
cmps
fst
adc
imul
movs
jne
(bad)
push
sahf
adc
cld
(bad)
(bad)
cmp
jbe
ret
loope
jo
push
pop
jnp
sbb
lahf
sahf
repz
rcr
loop
cmp
fbstp
mov
or
push
add
pop
out
fistp
add
int
dec
sbb
aam
enter
stos
sub
cmc
popa
push
adc
(bad)
call
jecxz
aas
jge
rol
jmp
jg
cdq
cld
cmps
dec
and
jp
dec
out
push
inc
mov
(bad)
push
xlat
or
cwde
scas
movs
lds
fstp
movs
xor
cld
stos
(bad)
jmp
fimul
xlat
sbb
jno
push
mov
pop
aaa
add
(bad)
inc
int3
mov
inc
shl
lea
sahf
out
aas
xor
in
ins
pop
jo
call
ret
(bad)
jo
les
lods
pop
xor
xchg
jnp
push
sub
inc
outs
pop
mov
fldenv
(bad)
(bad)
(bad)
inc
adc
aaa
xor
xor
(bad)
push
inc
call
call
pop
ins
jmp
stos
xchg
jmp
xchg
adc
(bad)
call
pop
fs
xchg
test
fdivr
nop
hlt
xor
push
push
sub
mov
cmp
(bad)
call
and
clc
xlat
jne
test
mov
adc
dec
daa
pop
call
test
inc
jl
pop
jns
push
test
hlt
pop
out
in
mov
in
ins
add
pushf
sub
cmps
gs
int3
into
inc
mov
jmp
xor
cmp
sbb
pop
mov
jne
add
test
(bad)
jmp
(bad)
xor
adc
call
jbe
sbb
sbb
lds
cmc
sbb
pop
loopne
retf
inc
popf
pop
out
pop
shl
xchg
push
cs
jp
dec
out
mov
idiv
xchg
in
stos
or
push
fwait
imul
sbb
(bad)
(bad)
leave
cmp
inc
inc
pop
sbb
xor
dec
sbb
loope
mov
cmp
(bad)
dec
fist
adc
mov
ret
jns
sbb
ds
ror
aam
je
ja
movs
popf
in
jbe
sbb
mov
sub
(bad)
(bad)
jmp
out
inc
jl
ins
cmps
fs
xchg
and
pop
and
cmps
loope
mov
mov
(bad)
(bad)
dec
or
xor
(bad)
ins
push
dec
sub
push
vpunpckhqdq
in
mov
nop
push
add
(bad)
(bad)
(bad)
push
sahf
loopne
cmp
jmp
sbb
push
rol
xor
xchg
lods
ja
(bad)
dec
sbb
sub
sbb
ret
imul
retf
(bad)
shl
sahf
sub
dec
std
(bad)
(bad)
jmp
es
sbb
cs
jne
pop
loope
lods
mov
cmp
aaa
out
cld
jo
add
push
popa
(bad)
pop
ror
call
lock
xor
inc
mov
ss
dec
xchg
clc
cmc
jmp
cs
(bad)
(bad)
(bad)
jmp
jne
push
mov
xor
jge
outs
push
std
cmp
aam
inc
jo
call
dec
test
dec
sbb
cs
sub
push
xchg
pusha
mov
(bad)
jmp
(bad)
loop
add
sub
pusha
pop
std
dec
jo
push
shr
add
(bad)
(bad)
(bad)
jmp
push
les
outs
xchg
retf
outs
mov
arpl
iret
mov
fidivr
ud0
(bad)
dec
not
or
fst
xor
pop
div
fcmovb
mov
enter
(bad)
(bad)
(bad)
jmp
xor
adc
(bad)
rcl
imul
xor
(bad)
jg
inc
icebp
sti
ret
fdivr
sub
mov
mov
push
xor
call
sub
jo
fsubr
cmp
dec
push
lea
add
popa
dec
or
jle
cmp
test
pop
icebp
push
or
call
dec
aam
cmps
sub
data16
cwde
movs
retf
clc
(bad)
call
(bad)
or
xlat
xchg
in
cdq
test
sbb
cmp
inc
int3
mov
mov
fmul
fimul
leave
mov
icebp
inc
mov
neg
out
and
(bad)
(bad)
call
mov
dec
dec
add
loopne
or
mov
cmps
cmp
iret
adc
fwait
call
jmp
ins
fdivrp
mov
push
sbb
jmp
fild
(bad)
sub
sbb
mov
aad
push
mov
aas
(bad)
sub
es
fldcw
lods
rcr
pop
mov
ror
test
dec
cmp
fistp
jmp
dec
xlat
mov
or
mov
adc
sbb
neg
je
ja
(bad)
call
shl
dec
xchg
add
xor
pop
pop
mov
xchg
xchg
mov
outs
(bad)
(bad)
(bad)
call
push
(bad)
fld
(bad)
or
fidivr
adc
push
fistp
xor
mov
push
(bad)
dec
pushf
pushf
call
jne
xor
sub
fstp
cmc
(bad)
cld
ins
jbe
mov
sbb
(bad)
(bad)
(bad)
ffreep
mov
push
mov
loope
mov
xor
je
push
sbb
mov
pop
int3
inc
(bad)
(bad)
(bad)
inc
jno
in
addr16
in
jl
pop
xor
ficomp
aad
dec
shl
xor
fbld
(bad)
(bad)
(bad)
push
js
out
push
stos
test
lahf
sub
xchg
mov
push
cmp
sub
inc
push
and
mov
adc
lods
cmps
out
das
add
stos
and
pop
jno
and
mov
(bad)
(bad)
dec
push
gs
xor
(bad)
(bad)
cld
inc
imul
imul
mul
nop
(bad)
(bad)
(bad)
jmp
(bad)
test
inc
cs
lock
or
and
call
out
mov
fsub
loope
inc
movs
daa
and
les
push
phaddd
push
ja
ds
sub
or
fist
xlat
jmp
(bad)
jmp
cwde
xchg
jno
and
nop
adc
sahf
mov
push
adc
ret
sub
outs
pop
call
and
test
fcom
bnd
(bad)
push
and
and
rcr
mov
mov
mov
(bad)
jge
and
pop
inc
clc
(bad)
inc
popf
mov
loop
xchg
arpl
and
jl
and
clc
jg
in
jbe
(bad)
mov
adc
jno
xor
scas
and
cmp
xor
in
int3
ret
mov
mov
adc
dec
xor
or
(bad)
fisttp
ds
adc
aam
and
xchg
jae
inc
and
mov
push
inc
jg
or
(bad)
push
stos
aad
jmp
dec
aaa
and
ins
dec
mov
lods
cdq
and
ficomp
jmp
mul
jns
outs
mov
popa
cwde
mov
and
mov
or
lock
lahf
(bad)
out
clc
jmp
jg
mov
push
mov
in
retf
arpl
and
mov
nop
data16
call
fcmovnu
sar
call
data16
jne
rol
sbb
xor
inc
inc
xchg
pusha
enter
fadd
or
sub
fsubr
sar
cmp
adc
loopne
cwde
loope
adc
push
or
xor
outs
push
ins
dec
push
in
and
scas
cmp
and
shl
out
mov
inc
nop
sar
(bad)
(bad)
js
jle
sahf
adc
cmc
jbe
int3
imul
and
(bad)
(bad)
mov
inc
cli
rcr
xchg
ss
movups
and
rcr
mov
(bad)
inc
retf
add
sub
dec
mov
mov
fisttp
dec
xor
mov
call
add
dec
dec
sbb
fadd
jno
cmp
pop
(bad)
(bad)
cmp
in
js
mov
cmp
rcr
call
jbe
pusha
or
or
enter
mov
popa
jmp
fild
adc
fld
and
push
sbb
test
int3
cmps
sub
(bad)
(bad)
out
mov
shl
sbb
test
xchg
iret
enter
(bad)
(bad)
(bad)
jmp
ds
mov
adc
aad
into
xchg
in
out
rcl
pop
or
mov
pop
std
(bad)
call
pop
or
in
out
sub
ss
cmp
lods
out
fld
(bad)
cmp
dec
hlt
sub
call
lock
lahf
cmp
test
popf
test
mov
mov
mov
push
adc
sbb
jb
cdq
jmp
inc
mov
(bad)
call
or
ins
or
jae
push
dec
ins
fnsave
mov
(bad)
(bad)
jmp
movs
or
xlat
shl
jb
pop
sub
mov
es
push
push
or
add
dec
lds
mov
std
or
adc
fnstenv
(bad)
(bad)
(bad)
jg
das
sbb
je
jb
adc
fdivr
sbb
cmps
lea
sbb
mov
(bad)
dec
mov
pop
cmp
lock
push
cwde
pop
cmp
jmp
jo
fsubr
mov
jl
loope
(bad)
jmp
lods
fwait
push
inc
fwait
sahf
cmp
jne
sbb
in
lods
lods
aam
test
rcl
push
clc
xchg
or
(bad)
test
xchg
mov
jle
imul
jne
pop
sbb
sub
cmp
hlt
(bad)
pop
cld
(bad)
out
mov
cmp
loope
mov
call
jp
(bad)
call
xor
cmps
hlt
pop
fcmove
ror
sbb
(bad)
(bad)
inc
push
lea
(bad)
push
das
icebp
xchg
dec
adc
test
test
and
(bad)
(bad)
(bad)
jmp
mov
sub
lahf
sub
fidivr
fwait
fwait
cmp
(bad)
(bad)
(bad)
dec
int
inc
(bad)
arpl
pop
movs
pop
ret
lock
jp
push
pop
xlat
mov
(bad)
(bad)
inc
jns
pop
addr16
cmp
cmps
dec
or
mov
popa
push
jmp
mov
xor
neg
sub
out
rcl
fistp
xchg
xchg
data16
add
dec
int
out
iret
ja
sbb
out
sbb
pop
rol
sahf
out
push
cli
(bad)
mov
cmps
mov
inc
xchg
movs
or
movs
and
or
and
aaa
ins
or
push
pop
jns
pop
jns
ret
mov
les
sti
mov
dec
cmp
std
push
pop
mov
pop
fisub
inc
cmp
xor
or
pop
inc
ret
out
pop
pop
cmp
js
push
pushf
mov
dec
test
fmul
dec
inc
inc
dec
cmp
(bad)
iret
mov
nop
adc
in
cmp
xlat
les
xchg
mov
retf
test
movs
(bad)
leave
mov
push
pushf
das
pop
push
fdivrp
das
and
fsubr
mov
mov
shl
(bad)
(bad)
call
test
push
mov
or
xor
popf
or
rcr
fdivr
(bad)
(bad)
mov
loopne
aaa
mov
scas
pusha
and
jae
ret
inc
adc
js
cli
fidiv
jnp
(bad)
jmp
inc
and
mov
fld
adc
or
(bad)
(bad)
fucomip
inc
jge
imul
push
adc
add
cwde
mov
and
adc
(bad)
(bad)
jmp
data16
rcr
imul
bound
call
dec
(bad)
fcomip
scas
pusha
inc
push
pop
push
sub
mov
ret
movs
imul
adc
xchg
retf
pop
fldcw
outs
sbb
jne
mov
or
add
push
rol
icebp
int3
jmp
out
dec
push
xchg
lds
jmp
test
push
retf
jbe
xchg
sbb
cld
sbb
xchg
jns
xor
add
adc
xor
push
or
cmp
loope
mov
fcomp
cmp
jno
ja
sub
xor
adc
sub
(bad)
(bad)
call
aam
sub
jns
movs
aaa
xchg
dec
cmps
je
daa
imul
(bad)
(bad)
(bad)
(bad)
call
rol
pop
sbb
cld
add
mov
or
jle
cmp
jge
and
pop
in
sbb
pop
fst
ror
loope
xchg
fld
inc
lahf
fisub
mov
sub
test
(bad)
jo
mov
xchg
mov
jmp
and
adc
outs
xchg
and
pop
mov
scas
sub
cdq
(bad)
(bad)
(bad)
push
aas
push
in
(bad)
xchg
les
pop
mov
cli
and
mov
mov
add
pop
std
cmps
adc
add
cs
loopne
(bad)
jmp
arpl
xor
js
jge
stos
mov
cs
std
cmp
mov
dec
std
and
loopne
mov
rol
lock
movs
cmp
push
cmp
call
arpl
nop
fnstenv
loop
out
lods
xchg
add
mov
into
test
test
xchg
mov
cld
sub
popa
lock
cmp
mov
cmp
dec
mov
inc
aas
clc
(bad)
stos
adc
inc
rcr
add
dec
and
scas
xor
jmp
dec
das
mov
inc
add
pop
sub
dec
inc
std
fistp
add
(bad)
shl
call
xchg
jmp
out
imul
push
add
push
sar
loop
jno
mov
pop
jns
push
push
sub
mov
sub
mov
leave
clc
inc
mov
jmp
sbb
jecxz
mov
pop
test
xor
out
sti
(bad)
neg
inc
cmp
jbe
fcos
(bad)
(bad)
call
icebp
loope
xchg
adc
mov
sub
iret
cs
iret
mov
stos
jp
jg
pushf
or
or
(bad)
push
xchg
xor
cmc
xchg
lods
sub
or
gs
hlt
test
(bad)
(bad)
(bad)
call
push
dec
gs
inc
and
xlat
ins
mov
mov
inc
(bad)
(bad)
(bad)
inc
cmp
xor
xor
bound
jp
fwait
inc
fild
xor
ffreep
xchg
sub
pop
cmc
jmp
fs
ja
pop
inc
mov
adc
pop
dec
mov
js
call
(bad)
in
jmp
adc
aaa
cmp
xchg
dec
push
aas
sub
sbb
(bad)
(bad)
inc
push
aad
mov
jmp
movs
jmp
arpl
and
(bad)
ficom
mov
(bad)
(bad)
(bad)
jmp
push
or
dec
mov
sbb
scas
jnp
add
sbb
outs
cli
fnstsw
add
cwde
ret
(bad)
(bad)
(bad)
mov
and
push
(bad)
or
push
and
sbb
popa
dec
(bad)
(bad)
(bad)
inc
xchg
lahf
mov
adc
jno
dec
pop
push
js
jno
inc
and
and
or
mov
or
cmp
dec
cwde
je
lock
inc
shl
aam
mov
aas
or
(bad)
fild
push
adc
rcl
jecxz
imul
adc
pop
(bad)
push
jmp
xor
sbb
jo
inc
mov
xchg
test
sbb
dec
xchg
cmp
mov
xor
rcl
jmp
mov
sub
push
outs
loopne
ficom
push
(bad)
(bad)
(bad)
push
mov
fild
pop
mov
(bad)
push
mov
mov
xor
inc
imul
or
xor
mov
dec
(bad)
shl
inc
aad
stos
std
cmp
push
mov
pop
push
push
xlat
or
fcomip
push
push
dec
cmp
cmp
xor
pop
lods
pop
mov
pop
sub
(bad)
(bad)
(bad)
(bad)
cld
shr
in
leave
inc
aad
(bad)
dec
sahf
cwde
xchg
push
(bad)
dec
jo
ins
in
fidiv
je
stc
cmp
sar
dec
dec
(bad)
or
add
add
imul
pusha
cld
movs
in
pop
lock
dec
adc
jmp
cmc
mov
sub
mov
cli
int
(bad)
jns
enter
jmp
xchg
fisttp
inc
shl
add
push
xchg
(bad)
in
mov
(bad)
(bad)
dec
jns
add
aad
dec
pop
add
add
outs
inc
dec
or
adc
mul
in
daa
call
dec
(bad)
cmps
retf
inc
mov
push
adc
mov
mov
js
xchg
icebp
arpl
mov
(bad)
inc
or
and
and
in
test
imul
inc
int3
sbb
(bad)
(bad)
call
int3
xchg
jge
setp
ds
imul
mov
inc
jge
jl
aas
arpl
dec
loopne
sub
sbb
dec
movs
mov
fistp
loopne
and
lock
or
(bad)
(bad)
push
sbb
es
adc
cmc
push
add
test
imul
or
(bad)
(bad)
call
ja
leave
cmps
movs
call
adc
mov
in
xchg
add
xchg
rcl
sbb
es
cmp
sbb
lods
dec
lahf
mov
call
xchg
(bad)
jmp
add
mov
jecxz
sahf
mov
sahf
ficomp
aad
lock
aaa
cmp
add
add
push
ret
(bad)
jmp
xchg
fdiv
or
cmp
or
cmps
enter
xor
pop
xchg
stc
inc
add
mov
sar
jmp
xchg
and
(bad)
nop
push
push
mov
and
and
sub
(bad)
mov
sub
dec
or
daa
jns
ins
loopne
mov
cs
cmc
(bad)
fistp
nop
xchg
rcl
stos
mov
jo
out
or
adc
in
(bad)
dec
mov
jo
loop
push
adc
adc
mov
mov
cli
jmp
jo
fst
movs
dec
cmp
jmp
push
inc
mov
mov
sbb
outs
or
pop
mov
mov
fst
adc
(bad)
mov
push
int3
push
sub
adc
fcmovbe
push
repz
or
mov
xchg
mov
dec
push
test
(bad)
imul
adc
jg
sbb
mov
mov
adc
mov
ds
pop
jl
add
xor
lods
outs
pop
jge
jo
cld
mov
lds
push
inc
cmp
mov
div
mov
test
push
mov
ror
(bad)
mov
call
call
lods
xchg
retf
movs
jp
fldcw
push
push
repnz
xchg
sbb
(bad)
(bad)
dec
stos
and
sub
(bad)
rol
lods
ss
lock
and
jmp
mov
push
sub
dec
test
xchg
aam
leave
pop
mov
jbe
pop
neg
ja
daa
fwait
leave
or
or
(bad)
in
fisubr
dec
movs
xchg
clc
dec
hlt
ja
dec
xchg
shl
outs
dec
xlat
mov
fist
cli
adc
std
xor
call
sti
fwait
aad
fs
adc
mov
add
cmps
mov
test
xor
(bad)
call
jp
xchg
fs
clc
mov
int
or
pop
cmp
(bad)
cmc
mov
in
dec
sub
push
test
retf
icebp
in
inc
xchg
adc
xor
(bad)
(bad)
call
add
add
jb
rol
imul
push
mov
and
dec
sub
call
add
and
nop
pusha
enter
and
cmc
cmp
cmp
sahf
xor
(bad)
inc
lahf
pop
jmp
stos
xor
loop
clc
call
mov
das
jle
xchg
sub
mov
and
stos
cli
out
rcl
jne
pop
sub
ja
mov
jns
jno
fdivr
aad
sbb
and
out
mov
jg
sbb
mov
mov
fsub
retf
shl
je
(bad)
dec
sub
cmp
jmp
out
xchg
and
test
mov
rol
xlat
scas
arpl
cmp
mov
sbb
lods
mov
rcl
int
jecxz
cmp
and
out
push
dec
clc
(bad)
inc
pop
mov
adc
xor
fimul
pop
out
jge
(bad)
(bad)
jmp
dec
cmp
inc
add
and
(bad)
clc
mov
(bad)
fidivr
adc
addr16
sub
(bad)
(bad)
(bad)
jmp
ss
nop
pop
inc
ss
push
mov
popf
addr16
jl
test
icebp
dec
mov
mov
jg
mov
(bad)
inc
push
add
cmp
call
cmp
addr16
or
call
sti
idiv
sub
(bad)
adc
mov
loop
sub
jb
aam
xchg
(bad)
inc
es
aas
aas
pop
in
jmp
imul
xor
jmp
push
fidiv
(bad)
(bad)
dec
lahf
ds
(bad)
mov
cs
sbb
jl
fistp
fdivr
(bad)
mov
int
scas
sub
out
sub
test
ss
push
xchg
mov
cmp
int3
in
sti
sahf
mov
out
pop
(bad)
jns
mov
pop
jle
adc
loope
(bad)
fnsave
mov
cmp
hlt
call
push
mov
popa
dec
aaa
or
push
enter
dec
or
(bad)
(bad)
inc
or
push
inc
mov
pop
int
lods
mov
and
out
adc
es
or
pop
rcl
lds
inc
xor
scas
mov
and
cmc
push
nop
repnz
test
(bad)
or
mov
and
and
(bad)
call
mov
adc
and
aad
and
pop
clc
or
adc
dec
or
nop
dec
lods
ins
js
jmp
das
bound
push
pop
lods
or
dec
sbb
mov
(bad)
(bad)
jmp
lds
add
adc
xlat
cld
push
sub
cmp
fstp
ds
cs
lods
sub
(bad)
(bad)
push
es
mul
add
aad
fiadd
xor
int3
movs
test
mov
pop
(bad)
(bad)
jg
not
xor
adc
adc
sub
push
hlt
stos
(bad)
(bad)
(bad)
call
adc
cmp
dec
(bad)
movs
push
dec
dec
adc
hlt
sbb
jbe
jg
inc
mov
(bad)
dec
or
inc
jmp
mov
sbb
aam
add
ret
or
xlat
push
nop
in
mov
(bad)
push
sbb
cmp
(bad)
ins
mov
fwait
dec
xchg
scas
fcomp
xchg
xchg
call
mov
xlat
(bad)
movs
outs
add
rcr
gs
xor
(bad)
(bad)
dec
test
push
adc
or
in
sub
mov
cdq
sbb
sub
(bad)
(bad)
call
bound
sbb
or
pusha
test
rcr
or
or
and
addr16
movs
outs
(bad)
imul
sub
or
aam
bound
fadd
dec
retf
loope
inc
xchg
add
xor
inc
mov
test
fmul
and
popf
sub
(bad)
(bad)
call
stos
dec
nop
and
mov
cli
icebp
pop
mov
rol
and
add
jo
(bad)
(bad)
push
out
push
xor
inc
adc
jecxz
mov
or
xor
ins
call
(bad)
inc
mov
cld
aad
daa
pushf
xchg
shl
dec
xlat
fldcw
sahf
ja
xchg
loop
push
and
jle
addr16
arpl
sbb
jecxz
push
dec
add
pushf
sbb
les
mov
in
mov
out
mov
mov
(bad)
scas
mov
dec
ins
fldenv
dec
sahf
test
fwait
test
push
push
out
mov
xor
(bad)
(bad)
(bad)
jmp
je
shl
pop
or
aam
sbb
push
in
out
jae
sub
data16
xchg
rol
cmps
xor
jb
call
mov
(bad)
pop
call
loope
mov
mov
push
lahf
pushf
mov
pop
mov
loopne
(bad)
(bad)
push
jmp
sub
jmp
sti
pop
inc
sahf
cmp
loopne
cmps
fs
mov
xor
(bad)
(bad)
inc
imul
jmp
(bad)
std
ins
shl
mov
jg
movs
add
inc
gs
xor
xchg
sub
cld
das
clc
call
jo
push
cmp
leave
mov
add
cmp
jmp
dec
stos
imul
cmps
shr
adc
sbb
add
(bad)
(bad)
(bad)
(bad)
mov
jp
arpl
jbe
popf
jae
stos
push
scas
sub
and
cmc
pop
in
mov
(bad)
(bad)
(bad)
call
or
xchg
and
xlat
imul
or
cmp
(bad)
jmp
movs
fdiv
(bad)
in
cmc
fisubr
dec
loop
lds
xor
mov
stc
shr
and
loopne
mov
adc
or
(bad)
(bad)
(bad)
(bad)
call
and
sub
rol
ret
mov
ficom
scas
mov
(bad)
(bad)
(bad)
inc
sti
add
int
loopne
je
xchg
mov
dec
and
or
fimul
xor
idiv
call
mov
mov
sub
or
lock
mul
mov
sub
jmp
sbb
sahf
jmp
and
(bad)
scas
dec
fwait
sbb
xchg
dec
sub
mov
jl
in
mov
cdq
sub
lahf
cmp
(bad)
inc
xor
out
shl
call
mov
cmp
(bad)
mov
arpl
mov
je
inc
xor
inc
psubb
jmp
xor
(bad)
(bad)
scas
mov
gs
hlt
cmps
push
popf
out
jl
sti
jne
push
fdivp
xor
(bad)
(bad)
mov
test
bound
out
ret
inc
retf
ss
xchg
cmp
(bad)
cmps
es
push
xchg
jge
fs
loopne
popf
shl
(bad)
js
mov
call
mov
fimul
sbb
mov
scas
cmp
xor
mov
push
jns
jmp
enter
aaa
ds
jb
xor
(bad)
dec
jp
sub
call
es
rcr
xchg
dec
or
cmc
jge
add
(bad)
fild
inc
aam
cwde
and
dec
mov
aaa
lods
retf
pop
jp
or
mov
icebp
adc
std
adc
mov
jg
sahf
ret
sbb
xor
fbstp
jge
or
pop
jp
dec
xchg
jg
jbe
clc
add
sar
fdivr
cmp
adc
jbe
jae
lock
das
or
inc
dec
push
lods
fwait
sar
or
popa
add
cmp
test
loopne
(bad)
jmp
inc
movs
ja
sbb
ds
push
fcom
dec
xchg
add
cdq
adc
or
mov
adc
inc
bound
mov
(bad)
(bad)
(bad)
(bad)
(bad)
mov
cmp
and
adc
outs
pop
cmp
fwait
sbb
and
(bad)
(bad)
(bad)
fcmovnb
(bad)
ss
dec
sub
mov
in
(bad)
sbb
aaa
test
(bad)
(bad)
call
sbb
push
imul
ret
cmp
dec
jnp
adc
sub
and
push
gs
jp
add
call
mov
fs
(bad)
(bad)
mov
test
mov
cmps
inc
loopne
add
xchg
aaa
and
mov
xor
pop
sub
loope
mov
bnd
jne
test
loop
mov
test
(bad)
(bad)
(bad)
jmp
test
loopne
daa
aas
pushf
mov
cli
popa
ins
bound
ror
leave
and
fbstp
aas
adc
nop
jmp
adc
mov
(bad)
(bad)
jmp
cli
shl
xor
test
fwait
and
test
out
repz
or
dec
dec
xor
(bad)
(bad)
call
(bad)
popf
jo
fs
dec
xor
xchg
es
dec
hlt
push
shr
fwait
ins
mov
(bad)
(bad)
(bad)
(bad)
fsub
xchg
add
fist
imul
mov
adc
scas
sbb
mov
xor
dec
and
(bad)
(bad)
call
pop
bound
mov
or
and
sub
bound
jo
inc
mov
(bad)
(bad)
call
adc
sub
mov
xchg
inc
adc
xor
(bad)
call
retf
stc
mov
xor
mov
aam
xchg
test
cmp
(bad)
(bad)
call
add
xor
pop
pop
dec
(bad)
std
or
adc
cmps
xlat
adc
sub
sbb
movs
pop
fcomi
(bad)
(bad)
inc
clc
cwde
popa
mov
jmp
rol
out
data16
fst
mov
xchg
mov
pop
daa
clc
rcl
loope
or
jl
scas
lods
js
dec
repz
jg
jmp
mov
sbb
push
inc
inc
enter
mov
pop
xor
jmp
repnz
ret
in
push
aaa
xchg
repz
loop
aad
push
adc
dec
pop
cmp
(bad)
mov
scas
sbb
pop
pop
(bad)
mov
cmps
data16
cmps
out
int
(bad)
(bad)
(bad)
jmp
cmp
in
leave
sub
jne
bound
xchg
push
pop
cmps
push
stos
or
cld
(bad)
(bad)
(bad)
cld
pop
cmc
mov
sub
jl
xlat
mov
(bad)
inc
mov
or
adc
push
(bad)
add
pop
(bad)
mov
fdiv
pop
(bad)
call
retf
mov
shl
dec
jmp
adc
cmp
push
(bad)
(bad)
call
xchg
sbb
lods
sbb
fstp
sbb
sub
cmc
int3
into
adc
sbb
outs
cli
(bad)
push
fnstenv
push
mov
xor
jno
mov
(bad)
(bad)
call
enter
xchg
popa
movs
hlt
xor
cmp
js
mov
nop
repz
dec
sbb
pop
lahf
(bad)
jmp
test
into
pop
ret
pop
xor
lock
nop
call
dec
(bad)
(bad)
(bad)
push
fadd
in
pop
mov
mov
mov
aas
jo
int
fs
je
stos
mov
(bad)
mov
lods
sbb
add
dec
aad
aad
(bad)
jg
and
ret
(bad)
jmp
sbb
outs
push
jmp
pop
mov
outs
ins
call
mov
inc
in
out
sar
call
mov
and
(bad)
gs
xchg
push
jae
stos
cmp
adc
mov
inc
cs
fdivr
(bad)
(bad)
jg
adc
in
adc
cwde
shr
and
jecxz
and
mov
(bad)
(bad)
(bad)
jmp
arpl
ficom
popf
jmp
jmp
sub
es
retf
jmp
xchg
mov
imul
inc
push
loop
push
inc
or
call
cld
call
xchg
in
add
pop
ja
dec
xchg
mov
jmp
(bad)
(bad)
mov
idiv
leave
push
push
xlat
test
mov
xchg
xlat
sbb
sti
rcr
xchg
jl
test
jmp
adc
add
outs
jge
lahf
xor
push
xor
(bad)
call
sar
(bad)
jle
scas
mov
jnp
neg
scas
jle
jmp
lea
mov
ins
mov
xchg
and
push
out
jg
adc
jo
mov
push
add
adc
in
(bad)
(bad)
(bad)
dec
mov
retf
fdivrp
stc
cmc
jmp
ja
sbb
xchg
leave
adc
pop
stc
icebp
pop
(bad)
(bad)
(bad)
(bad)
dec
xchg
or
cmp
repz
mov
retf
push
gs
fstp
sar
(bad)
(bad)
jl
cli
in
aaa
subps
mov
in
in
mov
mov
aam
lds
cmp
ja
arpl
cmc
add
call
(bad)
call
bound
adc
aad
arpl
nop
jle
mov
jl
xor
mov
not
call
movs
cmp
add
out
scas
fisub
imul
jmp
mov
outs
mov
dec
adc
push
cmp
push
das
sbb
push
and
lahf
imul
bound
mov
mov
(bad)
(bad)
call
inc
cwde
int3
inc
popa
dec
adc
and
mov
cmp
movs
jge
mov
add
std
add
movs
popw
xchg
je
loop
(bad)
call
loopne
xor
sub
add
jmp
repz
nop
mov
sbb
mov
mov
jle
mov
rcl
dec
mov
js
jg
add
sti
and
jmp
ret
(bad)
pushf
je
scas
dec
and
sbb
fdiv
push
lods
sub
(bad)
call
pop
rcr
jae
mov
fnsave
aad
(bad)
mov
inc
nop
(bad)
jecxz
mov
xchg
xchg
or
dec
pusha
or
adc
stos
enter
(bad)
(bad)
call
mov
jecxz
and
cmps
push
adc
push
dec
adc
and
int
add
aas
push
leave
enter
imul
inc
clc
push
adc
mov
or
aad
loopne
fdivr
repnz
aas
pop
test
(bad)
fisttp
pop
retf
push
push
pop
add
lahf
iret
in
imul
call
mov
xchg
add
es
stos
aam
(bad)
(bad)
(bad)
jg
fwait
mov
enter
fwait
dec
mov
sub
in
daa
dec
mov
or
xchg
cdq
xchg
pop
(bad)
(bad)
(bad)
call
inc
pusha
jge
mov
adc
adc
or
push
xor
es
adc
shr
(bad)
(bad)
(bad)
(bad)
jmp
inc
mov
inc
dec
aam
addr16
sysexit
data16
leave
shl
push
xchg
out
(bad)
(bad)
(bad)
dec
dec
bound
shr
sub
xchg
mov
push
adc
cld
fs
jbe
out
popf
(bad)
(bad)
(bad)
call
push
and
sahf
mov
dec
lock
sbb
dec
mov
add
and
inc
rcr
out
clc
(bad)
inc
ret
push
pop
aas
add
cmp
add
clc
jns
test
hlt
sbb
or
ret
je
jg
pop
outs
jp
push
mov
ret
sub
jg
test
(bad)
(bad)
clc
rol
lods
add
test
dec
lock
into
data16
daa
test
fwait
stc
adc
scas
sub
pop
inc
jno
jmp
adc
mov
data16
(bad)
(bad)
(bad)
dec
cmp
push
sbb
sbb
jl
sbb
je
enter
fnstenv
stos
adc
(bad)
jmp
retfw
pushf
cmp
add
or
push
sub
push
inc
fwait
xchg
cmp
push
pop
cmp
js
mov
call
cmc
(bad)
hlt
loop
ins
mov
inc
cmp
mov
sbb
test
leave
lahf
(bad)
(bad)
jmp
call
xchg
aas
std
mov
jnp
arpl
enter
inc
stc
repz
(bad)
(bad)
dec
mov
pop
(bad)
not
push
enter
icebp
mov
fnstcw
mov
addr16
pop
sar
(bad)
fnstsw
cmp
inc
or
ss
in
ret
(bad)
push
xor
sub
push
push
mov
mov
mov
jg
jecxz
nop
sbb
mov
xchg
mov
push
sub
ja
outs
mov
nop
and
or
(bad)
(bad)
call
stos
jmp
lock
mov
or
xor
add
stos
(bad)
(bad)
(bad)
(bad)
fst
inc
adc
mov
(bad)
cmc
dec
cmps
sub
sbb
sbb
dec
sub
inc
push
shl
push
cmp
lods
push
mov
add
retf
lods
mov
dec
mov
pop
call
test
cwde
fnsave
cld
(bad)
(bad)
(bad)
in
mov
repnz
repnz
xchg
movs
mov
dec
sbb
jl
neg
or
fcomip
pop
loop
inc
in
xchg
ror
fmul
and
mov
(bad)
(bad)
(bad)
call
fadd
cmp
xor
xchg
add
mov
out
push
pop
jecxz
push
std
(bad)
inc
dec
jmp
and
ficom
retf
outs
andps
mov
(bad)
(bad)
call
stos
jae
pop
sbb
xchg
pushf
dec
add
ins
sub
push
and
rcl
cli
dec
cmc
xlat
sar
aaa
jnp
test
ins
mov
pop
(bad)
test
(bad)
idiv
inc
mov
xchg
(bad)
(bad)
(bad)
call
lods
jo
mov
stos
shl
test
pop
adc
sub
dec
nop
in
push
mov
loop
xchg
mov
das
fistp
jmp
jnp
jle
(bad)
ss
xchg
fdivrp
sub
cli
sti
inc
xor
add
(bad)
(bad)
(bad)
(bad)
out
hlt
int3
ret
in
shl
push
mov
mov
js
aas
xor
add
jecxz
xor
ins
pop
mov
mov
(bad)
fcomip
movs
xchg
cmp
mov
ror
mov
jecxz
pop
push
data16
mov
inc
and
mov
cmp
adc
imul
call
sbb
xchg
test
scas
in
imul
int
(bad)
hlt
loop
aaa
test
imul
jbe
xchg
in
(bad)
(bad)
(bad)
mov
leave
adc
inc
sbb
fstp
clc
out
mov
or
das
(bad)
jmp
shl
jg
pop
mov
mov
jbe
mov
mov
hlt
dec
aas
jp
call
sahf
mov
pop
sub
out
mov
xor
ins
push
cs
mov
inc
mov
outs
jo
dec
(bad)
mov
dec
add
(bad)
(bad)
call
inc
out
xor
rol
add
es
lock
(bad)
fadd
fcomip
(bad)
jmp
mov
cli
push
bnd
mov
inc
sub
and
outs
clc
pusha
adc
sti
mov
popa
inc
lock
(bad)
jmp
loop
mov
loop
(bad)
call
cdq
test
xor
pushf
mov
mov
cdq
pop
jmp
pop
inc
int3
dec
clc
fidivr
pop
outs
inc
in
dec
mov
(bad)
(bad)
push
or
mov
sub
imul
aad
xor
sub
pushf
sar
jmp
mov
mov
(bad)
mov
push
bound
cmp
mov
dec
adc
cmps
mov
push
dec
sub
cli
or
ror
ds
shr
jmp
outs
inc
add
(bad)
jg
push
or
iret
xor
lds
or
(bad)
(bad)
fist
add
js
(bad)
leave
retf
cmp
pushf
imul
inc
leave
or
(bad)
dec
je
inc
adc
xchg
outs
mov
or
call
xchg
add
(bad)
sbb
repz
cmp
xchg
(bad)
inc
les
leave
push
inc
(bad)
mov
loope
cmp
adc
retf
loope
ja
ds
add
mov
enter
add
retf
int3
sub
(bad)
mov
sbb
sbb
movs
out
xorps
xchg
test
shl
fmul
push
inc
or
mov
(bad)
(bad)
push
bound
inc
pop
add
daa
mov
push
sbb
aam
adc
in
fnsave
nop
je
and
(bad)
call
(bad)
aam
and
shl
(bad)
add
dec
nop
sbb
dec
aaa
inc
dec
ret
(bad)
(bad)
call
clc
push
xor
inc
sbb
push
xlat
sub
sub
das
call
(bad)
ins
pop
iret
ficom
(bad)
call
call
icebp
or
arpl
(bad)
mov
scas
inc
and
es
ret
icebp
fld
cmps
fwait
(bad)
adc
sub
inc
sub
mov
in
xchg
cmp
outs
clc
jmp
loop
push
jmp
loope
add
fst
cmc
jg
(bad)
in
mov
push
popf
ret
push
sahf
push
cmp
call
push
call
cdq
add
shl
sub
inc
push
mov
int
pop
adc
call
dec
push
add
bound
je
(bad)
mov
mov
mov
pop
pop
push
sub
movs
inc
push
gs
mov
cmp
fwait
int
jg
mov
mov
push
push
pop
pop
call
(bad)
(bad)
(bad)
dec
jae
bound
(bad)
cdq
arpl
je
(bad)
mov
lock
cmps
cmps
and
mov
dec
push
push
outs
jno
rol
sub
clc
(bad)
ds
cmp
call
jns
xlat
or
out
ins
(bad)
jmp
(bad)
(bad)
call
xor
aad
imul
in
(bad)
dec
test
cmp
dec
mov
(bad)
pushf
cmp
jno
dec
mov
jnp
std
repnz
or
(bad)
(bad)
push
out
sbb
mul
sbb
sbb
nop
scas
mov
(bad)
(bad)
(bad)
mov
bound
popa
inc
xor
sar
mov
sbb
enter
inc
rcr
and
mov
adc
inc
push
push
(bad)
xchg
pop
mov
and
dec
jmp
cmc
enterw
dec
(bad)
(bad)
mov
mov
or
mov
scas
mov
cli
lock
(bad)
jg
call
lds
out
xchg
fisubr
iret
mov
push
(bad)
jg
(bad)
dec
movq
cli
mov
mov
sub
sbb
addr16
(bad)
mov
rcl
ins
inc
cmp
fcmove
bnd
loop
out
sbb
add
fcos
(bad)
(bad)
jmp
test
js
sahf
std
xor
movs
in
lods
out
daa
sbb
pop
ins
and
aam
call
jmp
xor
sub
out
(bad)
(bad)
(bad)
(bad)
mov
hlt
pop
mov
adc
dec
and
mov
test
xchg
push
hlt
(bad)
(bad)
(bad)
inc
dec
and
fistp
xchg
or
push
add
dec
add
fs
imul
leave
sub
mov
les
enter
push
cli
das
xor
inc
scas
js
adc
or
lods
mov
(bad)
(bad)
(bad)
(bad)
(bad)
xor
cs
jb
mov
je
ret
lock
rol
(bad)
(bad)
fisttp
out
outs
jle
fndisi(8087
jno
repz
pop
repz
lahf
dec
jmp
mov
add
fnstenv
push
adc
mov
(bad)
call
cmp
xchg
inc
lea
movs
pop
dec
jle
(bad)
icebp
(bad)
mov
pop
mov
pop
mov
push
inc
jg
ja
mov
repz
(bad)
in
jmp
push
rep
jp
and
(bad)
mov
mov
(bad)
jle
repz
ins
fucom
sar
sbb
arpl
mov
fmulp
inc
lahf
clc
ret
pusha
cld
(bad)
jmp
xor
inc
ret
dec
xchg
adc
xor
lods
shl
mov
(bad)
(bad)
cmp
push
pop
rcr
aad
fwait
pop
cmp
sti
mov
cdq
(bad)
jl
out
stos
pop
dec
jecxz
jp
jle
cmps
daa
div
out
(bad)
push
(bad)
mov
mov
inc
rcl
retf
mov
ja
sbb
jnp
mov
(bad)
mov
out
fnstsw
sbb
sub
je
mov
push
(bad)
(bad)
(bad)
inc
adc
cmps
mov
cwde
cwde
jo
loope
xchg
pop
shr
push
adc
pushf
mov
(bad)
(bad)
jmp
inc
mov
mov
or
popa
adc
enter
mov
add
jecxz
(bad)
(bad)
inc
btc
popa
das
xchg
xor
leave
fs
es
or
adc
xchg
aad
sbb
(bad)
(bad)
(bad)
mov
clc
rcr
sbb
adc
daa
test
ja
scas
mov
fnstenv
add
add
mov
lods
push
inc
or
xchg
mov
mov
das
xor
sar
std
adc
jp
ret
push
bound
sbb
push
inc
call
push
sub
mov
in
sahf
cmp
mov
inc
ret
jne
std
(bad)
(bad)
(bad)
cld
add
xchg
fcomp
pusha
nop
or
or
adc
xchg
add
out
cli
ja
stos
sub
iret
dec
test
fidiv
arpl
scas
mov
(bad)
in
dec
stos
jle
sbb
mov
aas
mov
inc
test
cmp
and
es
and
cli
rcr
xchg
dec
jg
scas
push
or
fs
popf
ins
(bad)
(bad)
(bad)
inc
xor
ret
movs
and
sub
inc
and
je
(bad)
mov
lock
lea
cld
(bad)
dec
daa
xchg
push
add
(bad)
add
shl
sbb
inc
add
lahf
mov
inc
leave
lods
inc
loope
(bad)
mov
(bad)
jne
(bad)
(bad)
inc
dec
repnz
test
or
jg
mov
push
or
sahf
inc
xchg
xor
sbb
pop
and
call
dec
fild
int3
inc
les
add
data16
inc
fwait
cwde
nop
push
cdq
das
popw
sar
fdiv
lea
xchg
ins
data16
xchg
(bad)
(bad)
(bad)
push
jns
adc
adc
fxch
push
dec
dec
add
dec
cwde
imul
pop
stos
data16
outs
test
mov
hlt
ja
add
mov
aaa
add
clc
and
sahf
mov
sbb
mov
xchg
mov
cmp
fld
jge
(bad)
fwait
(bad)
ja
push
mov
mov
cmp
adc
cmc
dec
mov
cs
cmps
icebp
(bad)
(bad)
push
push
test
adc
dec
sub
xor
cmp
push
mov
(bad)
(bad)
jg
mov
mov
scas
dec
dec
iret
movs
push
cmp
shl
rcr
mov
enter
pushf
jl
inc
sub
(bad)
jmp
cmp
aam
dec
cmp
mov
in
inc
(bad)
jmp
ret
call
les
dec
out
dec
call
sub
scas
mov
scas
pop
push
sahf
pop
or
dec
aad
test
movs
out
inc
xchg
mov
xlat
cmp
push
add
call
cmp
push
jp
pop
jp
lock
mov
add
xlat
pop
mov
test
outs
push
mov
sub
mov
mov
mov
in
xchg
dec
call
push
push
push
hlt
add
ins
adc
dec
dec
movs
xor
mov
push
mov
repnz
(bad)
jmp
adc
sahf
dec
ror
call
dec
or
xchg
fnstenv
sbb
sbb
(bad)
(bad)
inc
dec
mov
loopne
cmp
cmp
jl
mov
mov
mov
and
test
add
nop
and
stos
cmc
loope
out
pop
pop
cmc
jecxz
mov
pop
(bad)
mov
test
sub
mov
mov
jmp
pushf
adc
xchg
pop
test
sar
(bad)
(bad)
(bad)
jge
cmps
retf
or
test
mov
dec
daa
cs
pop
std
sub
mov
jg
or
loop
in
cmc
mov
cli
mov
rcl
and
jo
cmp
ficom
sbb
enter
sahf
pop
inc
shr
cmp
(bad)
(bad)
(bad)
ds
dec
and
shl
mov
mov
es
scas
cmps
je
lock
pop
adc
add
js
adc
mov
mov
pop
and
adc
ret
(bad)
jg
fidivr
mov
repnz
jmp
push
das
ss
xchg
movs
push
test
movs
shr
jo
or
(bad)
(bad)
jmp
mov
stos
or
ror
cs
arpl
(bad)
(bad)
(bad)
mov
dec
hlt
jb
adc
test
cmp
imul
sti
(bad)
(bad)
(bad)
(bad)
(bad)
push
ja
jae
cmp
sti
daa
aas
icebp
push
jle
jecxz
mov
mov
cs
sbb
push
(bad)
dec
jo
aam
in
ins
cmp
(bad)
outs
jle
mov
ja
std
stc
popf
cmp
test
dec
cld
in
lahf
aas
repz
sub
call
sub
(bad)
(bad)
inc
ins
sbb
pop
fnstsw
ss
(bad)
mov
xchg
call
(bad)
(bad)
push
inc
in
jmp
dec
cld
loopne
(bad)
jbe
push
jmp
cwde
or
push
mov
int
fbstp
dec
sub
stc
rol
mov
cmp
cld
leave
bound
(bad)
jae
xchg
mov
xchg
aaa
pop
ja
sahf
popf
pop
push
jl
fisttp
cmc
mov
sti
rcl
out
pop
js
fisttp
(bad)
(bad)
(bad)
(bad)
cmp
out
fidiv
in
cmp
dec
and
pop
mov
in
mov
in
sbb
dec
inc
ss
xchg
add
imul
xchg
loopne
inc
cmp
adc
push
cmp
(bad)
aad
or
push
pop
outs
mov
xor
(bad)
(bad)
jmp
and
push
popf
adc
mov
pop
xor
div
pop
push
inc
(bad)
(bad)
(bad)
inc
and
fwait
push
and
rdmsr
call
pop
adc
add
sbb
(bad)
(bad)
jmp
test
dec
retf
mov
jns
ins
test
inc
push
xchg
ret
lods
mov
xchg
daa
xlat
(bad)
(bad)
(bad)
in
leave
jns
movs
or
xor
or
jb
pushf
pushf
sub
lds
mov
cmp
dec
fdivr
(bad)
(bad)
jg
cwde
push
clc
ins
call
sub
rol
and
adc
jl
adc
pop
cmp
pusha
jnp
mov
adc
mov
inc
lds
sbb
sbb
xchg
pop
pop
ds
add
jl
jne
push
mov
setg
(bad)
(bad)
(bad)
call
sub
cs
ret
fwait
sub
das
mov
inc
xchg
add
pop
adc
(bad)
(bad)
dec
jb
stos
adc
push
cmp
xor
xor
xchg
leave
movs
or
fwait
mov
test
iret
jmp
(bad)
jmp
(bad)
push
ret
test
add
add
inc
cmp
inc
clc
dec
xchg
ror
mov
cmp
scas
movs
in
pop
ret
(bad)
call
jmp
stos
mov
or
mov
xchg
cmp
stos
sub
mov
push
mov
sbb
xchg
cdq
fisttp
scas
ins
test
xor
adc
pop
push
hlt
stos
ja
cli
mov
mov
mov
mov
(bad)
mov
inc
test
xchg
pop
std
inc
and
inc
and
shl
inc
cmp
or
jg
(bad)
jg
shl
inc
je
or
inc
cmp
mov
test
pop
xor
(bad)
(bad)
push
fmul
cmp
jmp
pop
or
inc
push
dec
adc
std
and
dec
sub
mov
add
cwde
mov
jbe
mov
xor
sbb
js
pop
pusha
nop
pop
pop
mov
lock
mov
clc
aaa
add
dec
sti
add
add
ror
enter
add
je
jle
idiv
cmp
jg
mov
inc
(bad)
mov
das
mov
fadd
ins
lods
xor
push
push
inc
push
ror
(bad)
jmp
int
push
mov
xchg
xor
nop
xlat
lea
das
xchg
push
popa
xchg
and
mov
dec
pop
scas
call
ja
int3
ror
(bad)
mov
stc
inc
dec
outs
dec
movs
add
mov
xor
jl
test
addr16
xor
push
cmp
(bad)
out
les
sahf
mov
jns
lods
sbb
(bad)
fild
jmp
cmps
mov
xor
fldcw
mov
mov
sar
jg
cdq
xor
lock
scas
sbb
mov
arpl
(bad)
mov
sub
push
cli
jp
rcr
inc
xor
inc
pop
call
and
enter
adc
in
mov
clc
(bad)
inc
sub
and
fst
movs
outs
xchg
or
pop
hlt
inc
mov
push
push
loopne
dec
dec
movs
and
jno
(bad)
(bad)
mov
and
adc
jns
push
sub
and
dec
dec
gs
cmc
pop
inc
(bad)
(bad)
(bad)
inc
push
xchg
push
dec
shl
add
mov
sti
mov
clc
and
push
es
cmp
cmps
mov
mov
xchg
hlt
push
mov
pop
retf
lea
pop
jp
int
dec
in
(bad)
out
aas
fcomp
sub
or
mov
pop
xor
push
sti
jno
imul
mov
jmp
and
push
fs
xor
jmp
push
div
push
(bad)
add
and
or
pop
fistp
jae
movs
(bad)
(bad)
(bad)
(bad)
mov
adc
mov
je
adc
adc
mov
push
or
call
xor
mov
jmp
cmp
fisub
repnz
jmp
(bad)
rol
call
mov
and
inc
frstor
inc
(bad)
retf
adc
or
out
adc
push
sahf
inc
outs
mov
imul
pop
mov
(bad)
jmp
jl
gs
in
xor
fsubr
imul
das
(bad)
repnz
mov
(bad)
dec
nop
fstp
xchg
aaa
outs
sbb
jne
lods
pop
cmp
repz
fistp
in
(bad)
(bad)
mov
sbb
fdivr
fiadd
ficomp
mov
daa
lahf
xor
ds
(bad)
(bad)
push
mov
stc
sahf
jnp
sti
mov
(bad)
retf
outs
std
aam
jmp
mov
fidiv
jmp
sbb
sbb
sub
hlt
xchg
stos
sub
inc
leave
mov
std
in
sub
jg
mov
arpl
call
pop
inc
or
sbb
jg
xor
shr
scas
dec
iret
push
out
int
push
std
fdivrp
aam
aas
cmp
(bad)
jl
fcmovnb
xor
push
aad
pop
sub
xchg
stos
cmps
out
mov
jp
mov
sbb
push
(bad)
call
mov
mov
call
call
aad
repz
sub
(bad)
(bad)
(bad)
fcom
cmp
mov
(bad)
repnz
lods
pop
fwait
popf
das
(bad)
in
mov
xchg
cli
cmps
call
inc
push
lds
sahf
cmp
hlt
enter
mov
(bad)
(bad)
cmp
xchg
mov
xchg
mov
fcom
cld
shr
imul
(bad)
call
sahf
shl
push
loope
stos
les
xchg
loope
je
outs
ins
daa
les
jbe
(bad)
(bad)
(bad)
call
cmp
movs
jns
sub
push
push
les
shl
shr
(bad)
dec
lock
and
dec
or
movs
mov
pop
mov
sahf
pop
jns
clc
(bad)
dec
(bad)
xor
dec
add
sti
xchg
int3
cmp
js
fwait
out
clc
push
ret
or
stc
lods
inc
popf
push
adc
or
push
jmp
pop
mov
test
push
cmp
movs
and
(bad)
(bad)
inc
iret
addr16
or
je
pop
test
test
sub
cmp
dec
and
(bad)
(bad)
(bad)
(bad)
push
cmc
and
mov
lods
xor
mov
gs
enter
xchg
pop
ds
inc
inc
(bad)
(bad)
(bad)
dec
ftst
mov
xchg
loope
jns
dec
push
iret
sub
inc
cmp
inc
mov
sub
add
pop
inc
jne
out
leave
sar
jnp
xchg
data16
inc
retf
inc
mov
inc
rcl
sub
mov
cwde
(bad)
movs
mov
mov
test
jmp
sar
int
pop
jbe
pop
fidivr
(bad)
mov
xchg
nop
and
or
addr16
pusha
std
(bad)
dec
leave
push
cmovne
clc
and
mov
or
xchg
sbb
loopne
fbld
sub
sub
sar
fmul
fs
sub
(bad)
jmp
pusha
pushf
push
ret
adc
push
inc
xchg
mov
clc
aas
add
(bad)
inc
aas
xor
sar
and
dec
mov
aas
neg
adc
add
faddp
pushf
(bad)
out
cli
push
fmul
ins
push
test
hlt
gs
inc
cmp
cmp
inc
sub
nop
inc
inc
mov
jbe
(bad)
mov
and
(bad)
jmp
mov
inc
out
movs
mov
add
pop
pop
inc
adc
mov
jb
je
jo
add
push
cwde
adc
or
inc
mov
and
push
inc
ss
xchg
aaa
add
jg
out
jl
imul
and
lahf
test
stos
(bad)
addr16
leave
sub
mov
adc
ins
or
lock
sbb
cs
pop
fsubr
pop
mov
cld
(bad)
jmp
scas
sub
sub
jl
je
int3
adc
jb
sub
aaa
jp
pop
iret
add
push
add
pop
sbb
inc
xlat
aam
mov
rol
lock
gs
mov
(bad)
(bad)
dec
cli
push
jp
mov
imul
rol
lock
test
shl
loopne
or
jg
(bad)
(bad)
call
dec
fld
dec
retf
mul
out
and
js
(bad)
mov
pop
dec
pop
cli
cli
out
out
pop
std
dec
aad
mov
stos
dec
inc
aaa
and
xchg
loope
sbb
lea
out
mov
aad
dec
dec
dec
hlt
div
or
shl
push
fdiv
mov
push
jb
pop
scas
mov
jmp
ins
sti
sahf
js
pop
aas
repz
js
repz
pop
add
mul
xchg
jmp
or
shl
adc
lds
ja
in
dec
inc
sbb
xchg
push
xchg
sbb
push
retf
xor
les
cmps
test
jg
mov
jno
call
jno
add
out
fiadd
dec
push
sbb
bound
imul
iret
ja
push
or
cld
(bad)
jmp
aaa
mov
(bad)
push
out
scas
pop
jae
in
mov
(bad)
call
inc
ud0
inc
sti
cmp
loope
ss
pop
js
cmp
cld
data16
cs
sti
(bad)
(bad)
call
push
dec
xchg
xlat
pop
xchg
out
out
mov
cmp
and
shl
(bad)
mov
xor
outs
cld
sub
mov
mov
(bad)
jmp
je
and
ins
ja
mov
lods
mov
xchg
mov
inc
and
(bad)
(bad)
(bad)
dec
sbb
mov
xchg
les
xor
je
cmp
iret
push
sbb
sub
jg
dec
imul
dec
adc
jl
call
xlat
xchg
les
or
sbb
cld
(bad)
(bad)
jge
pusha
sbb
loope
xchg
les
mov
and
(bad)
cmp
lds
cmp
(bad)
sbb
xchg
(bad)
fistp
lock
(bad)
call
hlt
(bad)
jmp
jmp
jg
xor
loop
ss
jmp
lods
in
dec
pop
lahf
lods
loopne
jg
pop
mov
push
repz
fdivr
popf
push
cld
out
mov
mov
jp
mov
mov
(bad)
jg
mov
push
jb
das
(bad)
sti
inc
pop
jl
test
mov
mov
stc
hlt
aas
cld
mov
out
adc
jmp
out
bnd
mov
sti
push
vpunpckhdq
jecxz
add
cmp
push
lahf
aas
cmc
daa
outs
mov
inc
push
pop
mov
dec
(bad)
(bad)
(bad)
(bad)
fistp
(bad)
out
(bad)
loop
std
jmp
ss
fdiv
(bad)
in
(bad)
(bad)
(bad)
(bad)
(bad)
jmp
fidivr
lea
sar
inc
dec
pop
sbb
arpl
aam
mov
pop
stos
cmc
out
dec
add
push
push
pop
mov
inc
jg
call
aas
sbb
(bad)
jmp
fcomp
mov
xchg
out
fwait
(bad)
or
xor
mov
jmp
mov
in
mov
pushf
fcomip
(bad)
push
pop
imul
dec
sbb
call
inc
pop
scas
aam
pop
cld
fidivr
or
add
bound
push
pop
out
(bad)
ja
icebp
cmp
jmp
test
mov
iret
sub
aaa
push
popf
(bad)
in
(bad)
jmp
fs
push
mov
clc
push
pop
jle
lea
inc
jmp
(bad)
jmp
cmp
mov
test
aad
adc
cwde
mov
(bad)
fisttp
call
int3
mov
or
(bad)
call
cmc
xchg
add
sar
not
(bad)
fbld
mov
sub
pop
mov
push
addr16
(bad)
inc
jo
mov
add
or
(bad)
sahf
adc
shl
inc
inc
dec
sahf
(bad)
(bad)
(bad)
call
and
sbb
movs
dec
pushf
sub
xchg
into
sub
xchg
(bad)
(bad)
push
mov
leave
mov
lods
xchg
mov
xchg
mov
(bad)
push
(bad)
fsub
retf
cli
lock
jae
in
xor
xlat
(bad)
(bad)
(bad)
jmp
push
mov
xor
mov
jmp
dec
bound
ds
push
inc
adc
mov
retf
pop
jo
out
adc
jmp
retf
sub
xor
dec
inc
shr
or
std
shl
add
inc
xor
inc
rcl
adc
jne
mov
stc
mov
xchg
or
loope
xchg
jnp
push
js
sbb
jge
test
imul
pop
pop
add
(bad)
fbld
jb
push
mov
mov
pop
push
or
call
add
add
inc
jle
mov
iret
nop
pop
mov
fwait
ins
loopne
hlt
(bad)
cmp
jno
add
xchg
mov
adc
repz
dec
fs
repnz
clc
and
(bad)
enter
(bad)
push
cmp
popa
(bad)
mov
loopne
and
sbb
dec
fiadd
icebp
sub
add
mov
and
push
push
xchg
sub
fistp
stos
loope
dec
sub
and
mov
sbb
and
add
cmps
ficom
(bad)
push
ret
(bad)
retf
pushf
leave
jl
(bad)
(bad)
inc
out
ins
dec
and
rol
sub
xchg
adc
or
in
and
mov
(bad)
fisttp
arpl
sahf
mov
(bad)
mov
lahf
adc
lock
pop
mov
push
dec
mov
js
lock
outs
je
cmc
mov
outs
sbb
mov
lahf
(bad)
mov
ss
pop
out
mov
(bad)
(bad)
call
adc
jecxz
stos
fadd
jg
pop
stos
call
jno
(bad)
cmps
mov
dec
(bad)
fwait
retf
scas
mov
mul
push
fidivr
or
shr
sub
repnz
arpl
mov
imul
xchg
call
(bad)
inc
pop
or
and
cmp
xchg
xor
cmp
pop
cwde
cmp
inc
mov
es
xchg
add
into
pop
jge
aam
and
clc
call
jmp
lds
or
dec
sbb
(bad)
mov
ins
(bad)
pop
cmp
pushf
iret
gs
xlat
scas
pop
or
ins
add
cld
inc
xchg
xlat
mov
loop
add
lock
add
ds
adc
ret
ins
pop
sti
fcmovbe
lahf
cmp
push
inc
sbb
(bad)
(bad)
jmp
pop
and
inc
xchg
add
xor
mov
stos
adc
neg
outs
test
dec
rcr
cmp
mov
jb
pop
loop
out
or
test
test
lods
jb
jmp
inc
loop
retf
popa
jnp
or
lahf
(bad)
(bad)
(bad)
inc
adc
int
push
adc
ins
mov
inc
xlat
mov
pop
lahf
popf
das
add
pushf
jne
lods
mov
cli
jnp
xchg
push
fcom
sar
inc
fs
ins
mov
xchg
in
sbb
adc
mov
(bad)
cmp
push
mov
sub
(bad)
(bad)
dec
inc
lock
stos
je
inc
add
aaa
(bad)
shl
(bad)
cli
setge
(bad)
(bad)
mov
push
xchg
adc
aad
adc
out
lds
jne
das
mov
cmps
icebp
sub
loope
scas
ss
lock
jae
(bad)
(bad)
(bad)
(bad)
mov
dec
cmps
ss
push
mov
jns
inc
inc
sti
add
scas
xchg
sub
mov
js
push
std
dec
aam
retf
lods
pop
test
add
and
fld
jg
test
aas
mov
cmp
mov
popa
and
icebp
rcl
(bad)
inc
into
mov
mov
daa
mov
(bad)
(bad)
mov
js
xchg
push
in
pop
fwait
iret
leave
jecxz
cdq
mov
pop
cmp
sbb
sub
icebp
jmp
stos
push
stc
mov
jl
not
je
jmp
fdivp
or
dec
xchg
in
cdq
xchg
mov
inc
xchg
cdq
sub
mov
mov
push
mov
ret
xchg
and
das
inc
push
mov
call
imul
int3
mov
add
in
out
(bad)
idiv
(bad)
(bad)
jmp
push
(bad)
mov
(bad)
mov
loopne
fcmovbe
lods
(bad)
sti
movq
pop
adc
retf
retf
jg
(bad)
(bad)
(bad)
call
(bad)
aas
mov
aaa
das
outs
popf
fdivr
mov
jle
mov
jmp
(bad)
inc
mov
mov
addr16
pop
xchg
jb
sub
cmp
out
adc
(bad)
(bad)
call
jl
xor
push
lock
mov
xlat
loope
shl
jle
rcr
mov
outs
and
(bad)
ficomp
mov
mov
stos
mov
inc
clc
(bad)
jp
clc
call
jp
mov
mov
xor
sbb
sub
mov
(bad)
frstor
shl
in
iret
(bad)
je
pusha
add
iret
jg
mov
mov
adc
inc
jg
movs
jmp
dec
pop
inc
lds
(bad)
addr16
lahf
ret
inc
push
ss
(bad)
(bad)
(bad)
jmp
or
sub
inc
xor
mov
outs
sar
call
sub
push
leave
cwde
mov
push
rol
call
cmp
(bad)
(bad)
call
stos
xor
out
pop
loopne
add
or
add
dec
push
mov
sub
inc
shl
(bad)
pop
mov
push
and
sbb
sub
push
fsubr
push
or
ds
push
jmp
xor
add
ror
push
test
inc
out
aad
sbb
(bad)
(bad)
(bad)
mov
pop
cdq
sub
add
pushf
in
push
ds
outs
jbe
iret
mov
or
(bad)
dec
aas
and
inc
mov
inc
loopne
shl
enter
and
jp
pop
test
call
xchg
rol
(bad)
ffree
jmp
cmps
add
(bad)
mov
test
stos
out
(bad)
(bad)
jmp
xor
pop
aad
cli
ror
xchg
and
mov
repnz
(bad)
fldcw
loope
(bad)
jl
add
ja
cs
cmp
clc
pop
(bad)
out
mov
jmp
mov
jge
in
adc
(bad)
dec
je
(bad)
add
pushf
sub
nop
popf
xor
(bad)
mov
(bad)
(bad)
call
iret
add
and
inc
fadd
sub
fwait
popa
(bad)
xlat
leave
mov
cmp
dec
clc
or
shr
call
xor
ret
mov
repnz
(bad)
inc
inc
ficomp
pop
lea
div
add
and
shr
mov
fs
loope
push
sahf
mov
inc
fcom
add
repnz
std
sub
dec
inc
jecxz
lds
xchg
sbb
mov
bound
pop
in
(bad)
mov
data16
ds
ds
cmp
mov
call
cmps
retf
xor
mov
adc
das
xchg
mov
dec
sti
xchg
mov
clc
rcl
adc
mov
clc
hlt
rol
(bad)
call
xor
jg
out
hlt
xchg
sbb
pop
ja
stos
into
jge
pop
arpl
cmp
nop
and
(bad)
call
fdivrp
xchg
mov
shr
leave
pop
mov
addr16
inc
(bad)
mov
inc
jp
loopne
push
jle
mov
imul
aad
scas
stos
mov
dec
mov
jp
in
sbb
(bad)
(bad)
jmp
in
nop
lods
dec
dec
aam
in
cs
cli
sub
cmc
imul
loopne
cli
push
pop
cmps
cmps
cmps
sahf
cmp
mov
pop
iret
icebp
push
xchg
(bad)
(bad)
leave
mov
xchg
out
(bad)
(bad)
(bad)
jmp
or
dec
adc
outs
out
dec
ja
stos
add
xor
mov
mov
mov
fcomip
dec
xchg
dec
mov
inc
test
sub
xor
push
call
pop
sbb
adc
test
(bad)
jmp
js
cmp
loop
push
dec
aaa
mov
dec
jnp
sbb
fcom
ja
rol
(bad)
mov
xchg
jecxz
jecxz
out
out
cdq
xor
mov
sahf
mov
rol
mov
or
jmp
lds
into
push
fldcw
sub
mov
les
pop
add
mov
rol
(bad)
(bad)
(bad)
cmp
adc
and
shl
sahf
fs
arpl
js
into
pushf
sti
test
dec
fnstsw
stos
lods
(bad)
out
dec
cdq
imul
mov
add
call
test
aaa
(bad)
clc
(bad)
mov
mov
mov
mov
clc
ja
push
into
retf
pop
pop
pop
ss
sub
addr16
jbe
(bad)
(bad)
jmp
xchg
inc
daa
pop
fs
loop
dec
xchg
leave
push
mov
dec
shl
(bad)
jmp
retf
lock
clc
retf
ins
lods
lahf
sub
popf
push
xchg
outs
sub
or
jp
lods
fdivr
scas
clc
push
js
jae
jnp
sti
in
in
loopne
push
loopne
hlt
mov
ins
adc
(bad)
jmp
icebp
repz
mov
dec
jno
out
fidivr
cmc
aad
pop
das
mov
mov
(bad)
(bad)
(bad)
call
fcmovbe
sub
out
cs
es
movs
adc
test
push
stc
(bad)
mov
push
(bad)
push
push
inc
jge
aas
xor
pop
mov
xchg
cmp
dec
(bad)
(bad)
(bad)
dec
(bad)
in
gs
inc
aam
and
into
or
ret
out
aam
out
mov
arpl
pop
push
push
jmp
mov
movs
pop
sub
loopne
and
retf
out
dec
aad
ds
dec
(bad)
(bad)
(bad)
jmp
pop
or
fdiv
ss
outs
sub
outs
icebp
fldcw
push
(bad)
(bad)
(bad)
(bad)
stc
stos
fcmovnu
jo
push
pop
ds
jle
cwde
pop
pop
pop
mov
mov
fdivr
cmp
lods
fidivr
(bad)
dec
or
call
loopne
jb
push
mov
and
dec
das
mov
push
xlat
lahf
ja
(bad)
(bad)
mov
pop
sub
cs
into
xchg
push
push
xchg
cmp
xor
xchg
inc
jbe
mov
pop
jmp
jl
retf
sbb
cwde
xchg
iret
(bad)
call
cmp
aaa
aas
fistp
idiv
hlt
sbb
cmp
adc
sti
mov
rol
inc
lahf
fdivrp
stc
mov
(bad)
jmp
imul
out
jle
pop
mov
lock
xchg
sub
xlat
scas
cmp
mov
sub
mov
xchg
cld
jg
add
repz
lock
sub
std
leave
xchg
mov
cli
pop
outs
fidivr
(bad)
sbb
cld
ffree
mov
into
pop
pop
js
js
(bad)
jg
cs
addr16
push
push
(bad)
stos
iret
sahf
call
hlt
hlt
jmp
loope
xor
in
pop
shr
pusha
(bad)
push
jecxz
lods
jge
clc
jmp
aas
mov
jmp
jecxz
cmp
mov
(bad)
sub
repnz
inc
pop
push
mov
jno
(bad)
dec
jle
test
lds
lahf
fdivr
push
outs
mov
mov
stos
les
sti
fstp
cmp
sbb
fisub
ds
fcmovbe
sub
int
mov
jmp
mov
stc
jp
push
mov
(bad)
(bad)
(bad)
inc
and
mov
movs
xor
stos
or
and
in
(bad)
(bad)
call
scas
popf
mov
clc
cmp
xchg
mov
shl
pop
retf
mov
lds
push
mov
(bad)
jmp
lds
jg
sbb
sbb
out
int3
outs
mov
icebp
outs
mov
push
jmp
(bad)
fadd
pop
cwde
inc
lods
or
data16
xchg
cld
sar
(bad)
(bad)
call
hlt
pop
movd
(bad)
out
aad
ss
aas
mov
jg
jbe
lods
fnstsw
(bad)
lock
add
das
sahf
sti
mov
nop
jmp
in
(bad)
(bad)
(bad)
jmp
retf
iret
mov
jge
lock
cmp
outs
jg
hlt
cli
outs
pop
mov
aas
call
mov
jle
aam
xchg
jge
mov
ret
fwait
cmp
lock
or
push
sahf
add
mov
daa
lds
pop
cmc
pop
hlt
imul
push
retf
addr16
inc
pop
push
in
inc
loopne
das
ins
out
jmp
push
adc
adc
retf
cmp
ins
ins
cld
out
pop
pop
daa
lds
fnstcw
xchg
sbb
rcr
dec
pop
mov
div
(bad)
pop
mov
das
push
sbb
mov
cmp
jo
jo
pop
scas
clc
scas
clc
jo
(bad)
fcomip
jno
mov
das
std
cli
mov
pop
jl
shr
div
hlt
xchg
bound
sahf
push
movs
fwait
push
or
xor
inc
(bad)
cdq
pop
and
(bad)
jmp
in
xchg
movs
lahf
xor
dec
or
mov
gs
sbb
(bad)
(bad)
dec
int3
sbb
dec
scas
mov
cmp
fidiv
and
dec
mov
inc
xchg
das
dec
ds
adc
xchg
inc
adc
cmc
xchg
push
shr
shl
(bad)
(bad)
push
shl
mov
retf
idiv
jae
mov
movs
std
test
cmp
cli
or
ds
xchg
aaa
retf
push
dec
mov
fadd
call
jmp
inc
mov
pop
or
dec
and
jb
cmp
mul
xchg
repnz
jb
daa
sbb
dec
pop
int3
cld
inc
xchg
fimul
(bad)
(bad)
push
stos
mov
mov
sub
and
fdiv
in
jmp
out
ds
out
(bad)
(bad)
push
movs
jmp
int
aad
repnz
fld
xor
cli
push
sub
iret
pop
test
pop
jnp
rcr
sub
(bad)
(bad)
call
push
jo
pusha
inc
push
leavew
inc
push
icebp
idiv
pop
fcom
or
(bad)
(bad)
std
or
dec
push
mov
pop
or
shl
xchg
adc
or
cmps
(bad)
push
jmp
repz
mov
push
jp
pop
inc
inc
push
sbb
aaa
test
jmp
push
dec
xor
xchg
xlat
ficom
(bad)
push
pop
stc
(bad)
sti
inc
jbe
pop
popa
jg
js
rcl
dec
push
sub
or
adc
dec
aaa
push
jae
and
xor
(bad)
sar
(bad)
(bad)
jmp
mov
mov
push
jg
sahf
shl
xadd
outs
sbb
jg
mov
ja
dec
popf
xor
inc
and
ja
jmp
ret
push
xor
xlat
cmp
jae
mov
stos
dec
(bad)
and
aaa
enter
inc
xor
inc
inc
add
int
fild
jmp
sub
jmp
not
push
loope
dec
fcomp
mov
adc
(bad)
(bad)
dec
mov
jns
sub
out
inc
out
push
aam
jmp
add
mov
movs
push
shl
(bad)
dec
(bad)
jl
test
je
sbb
test
data16
shl
stos
int
(bad)
(bad)
(bad)
(bad)
clc
jmp
lods
jne
retf
in
fld
fnsave
jmp
xor
aas
cs
das
cli
(bad)
call
mov
mov
in
sub
ins
or
(bad)
(bad)
(bad)
cli
sub
or
enter
adc
rol
daa
leave
outs
rcr
add
clc
jmp
fisubr
xlat
in
fistp
jmp
fistp
pop
cmp
mov
sub
mov
cmp
stos
xchg
or
push
jge
cmp
popa
dec
fidiv
sbb
cmc
daa
jle
ret
cwde
(bad)
in
xchg
sbb
jg
shr
dec
dec
adc
ret
mov
shl
inc
test
das
xchg
lock
jb
adc
pop
call
(bad)
(bad)
push
fidivr
sub
(bad)
retf
ds
xor
scas
rol
push
or
push
cmps
rcr
xor
inc
pop
loopne
clc
leave
fmul
fldenv
ins
sar
ret
aam
inc
shl
(bad)
dec
or
jl
sahf
push
int
imul
dec
xor
(bad)
fld
add
adc
cmp
or
mov
and
hlt
inc
inc
(bad)
(bad)
(bad)
jmp
jbe
lea
lods
cmps
retf
loope
pop
cmps
xchg
pop
ror
inc
lds
sub
(bad)
dec
or
mov
mov
adc
mov
(bad)
(bad)
call
jmp
stos
rcr
xchg
into
push
jg
cs
das
hlt
push
pop
xlat
mov
cld
les
(bad)
jns
fs
mov
fstp
les
pusha
sub
fstp
(bad)
(bad)
(bad)
push
(bad)
cmp
push
inc
pop
push
adc
add
call
pop
and
dec
pop
lahf
pushf
shl
rcr
cwde
stos
stos
es
pop
test
push
out
xchg
cli
scas
push
mov
(bad)
(bad)
(bad)
jmp
sub
test
mov
xor
(bad)
stos
out
mov
inc
xor
enter
inc
(bad)
in
ss
adc
movs
dec
mov
or
pop
loop
or
mov
or
jnp
test
mov
jmp
jg
mov
jne
dec
sbb
rcr
scas
dec
mov
fcomip
pop
mov
aaa
xchg
push
mov
cmp
test
pop
inc
fbld
jmp
addr16
pop
in
sbb
ror
(bad)
jmp
fnstcw
(bad)
call
loop
hlt
stos
jg
push
jne
and
mov
es
(bad)
(bad)
(bad)
call
xchg
push
pop
out
cmc
nop
jbe
inc
imul
popf
push
gs
cmp
fwait
pop
(bad)
(bad)
(bad)
inc
loope
fidivr
fnstenv
dec
pop
(bad)
sar
fs
add
cmp
lahf
inc
jmp
call
outs
sub
lea
xchg
mov
loope
xor
push
xor
jbe
enter
pop
mov
movs
(bad)
rcl
pop
xor
pop
lods
(bad)
outs
clc
(bad)
call
jge
xchg
xchg
mov
push
das
mov
sbb
and
jmp
xchg
aad
sub
call
out
cs
je
mov
xchg
xchg
(bad)
and
cli
mov
xor
xor
inc
xlat
in
in
cmc
dec
std
push
outs
retf
nop
mov
jecxz
ret
dec
push
sub
xchg
sahf
pop
ret
repnz
xchg
fbld
gs
jp
(bad)
(bad)
jmp
in
push
nop
rcr
dec
jne
bnd
in
xor
dec
pop
dec
enter
pop
mov
or
arpl
movs
sbb
pushf
mov
mov
push
cmc
inc
jmp
dec
sub
outs
mov
pop
and
cmp
dec
pop
or
test
pop
cld
mov
sub
(bad)
(bad)
fisttp
cdq
pop
add
push
xchg
adc
shr
fist
inc
shl
lock
add
stos
dec
mov
aas
cmovb
std
or
jbe
add
push
jmp
push
fdivr
mov
test
push
jno
cmc
xor
aam
push
fst
aam
mov
mov
out
hlt
adc
repnz
jg
dec
outs
loopne
dec
lock
stos
dec
pusha
sbb
inc
imul
inc
data16
aad
fs
retf
(bad)
(bad)
inc
xchg
pusha
xor
out
aaa
mov
push
mov
(bad)
(bad)
call
lods
and
xor
or
lahf
adc
(bad)
jmp
(bad)
enter
cmc
mov
mov
scas
jge
retf
xor
call
inc
shr
xchg
push
inc
cli
cdq
mov
sbb
jg
jle
adc
inc
jo
in
or
pop
outs
xor
mov
scas
mov
jmp
es
mov
or
test
test
(bad)
adc
pop
jo
pop
cmps
inc
add
dec
jmp
pop
cmp
call
cmc
paddusb
cmp
jmp
adc
pop
xor
xchg
add
cwde
push
call
rcl
jle
mov
(bad)
(bad)
(bad)
push
lahf
into
ror
out
pop
ins
jp
inc
ret
call
inc
mov
iret
nop
pop
ins
adc
mov
and
(bad)
jb
rcl
cmps
dec
sbb
push
(bad)
in
pop
add
bound
sbb
pop
cmp
test
adc
push
mov
dec
mov
mov
(bad)
clc
iret
push
lahf
in
dec
mov
dec
jae
adc
cwde
popf
shl
cmp
std
popa
add
dec
sub
shl
out
cmps
fisub
push
sbb
and
mov
xor
xchg
mov
or
call
cmps
xor
jbe
fcmove
fs
repnz
scas
inc
xchg
xchg
pop
inc
test
jp
adc
(bad)
(bad)
jmp
mov
(bad)
repz
jmp
ds
jns
and
int3
daa
test
(bad)
(bad)
push
mov
mov
cli
xchg
mov
pop
aas
lock
outs
xchg
call
lods
inc
neg
bound
(bad)
mov
jmp
rcl
adc
popf
cs
into
xchg
(bad)
(bad)
(bad)
out
cmp
test
rol
xor
push
inc
sbb
adc
mov
(bad)
(bad)
dec
jl
arpl
xor
and
ja
push
icebp
xor
in
dec
mov
in
shl
outs
jmp
and
pop
or
fstp
mov
(bad)
jg
call
xchg
xor
dec
dec
loope
sar
push
mov
mov
jmp
sar
push
jmp
add
test
hlt
mov
mov
into
hlt
mov
sbb
dec
mov
test
ror
cmp
fadd
fisttp
jbe
add
mov
mov
aas
or
rol
loope
(bad)
(bad)
mov
inc
mov
add
push
or
pop
(bad)
fsub
pop
dec
js
jge
push
jne
in
(bad)
(bad)
(bad)
dec
scas
icebp
int3
pop
push
mov
fsub
(bad)
retf
leave
or
cdq
adc
mov
das
fdiv
(bad)
fdiv
call
pop
es
lea
lods
lea
fld
stc
test
inc
out
mov
push
cmc
xor
ins
dec
or
test
mov
xor
jecxz
mov
shl
sti
aad
imul
lods
cmps
(bad)
sar
pop
icebp
mov
jb
mov
(bad)
dec
sahf
jge
shl
mov
loopne
xor
(bad)
jmp
jg
pop
push
sub
int
fsub
cmp
(bad)
(bad)
dec
jno
xchg
call
cmc
into
mov
loope
xor
(bad)
(bad)
jmp
js
fidiv
xchg
adc
or
cwde
inc
imul
mov
bound
xor
(bad)
mov
rol
fst
inc
gs
or
imul
imul
repnz
out
clc
cmp
addr16
pop
sbb
je
rcl
sub
push
adc
ss
bound
sbb
cmp
(bad)
(bad)
cmp
nop
and
sub
add
mov
xchg
jge
mov
adc
and
(bad)
out
clc
cdq
enter
in
push
push
mov
inc
es
je
test
add
loopne
dec
xor
gs
pop
or
pop
inc
test
shl
outs
cli
call
dec
dec
outs
push
pushf
out
mov
mov
ror
gs
or
pop
cmp
inc
pop
pusha
adc
scas
dec
pop
iret
lds
mov
(bad)
push
or
(bad)
ror
fisubr
inc
pop
mov
jmp
mov
loope
push
inc
lods
pop
mov
dec
imul
(bad)
push
mov
(bad)
push
mov
and
xchg
(bad)
sub
sbb
mov
clc
(bad)
call
gs
pop
inc
fst
imul
(bad)
jmp
mul
xchg
cdq
adc
xor
push
xchg
popa
lahf
xchg
jbe
sbb
sub
(bad)
jg
mov
inc
adc
mov
hlt
cwde
stos
xor
(bad)
call
shr
lods
fst
push
dec
dec
(bad)
aam
xchg
test
push
push
lock
jg
aad
jmp
mov
mov
call
scas
int3
lock
or
xchg
mov
leave
or
cmp
repz
cmc
mov
movs
dec
xor
cmps
fcom
cmp
outs
xor
add
sbb
adc
clc
and
loopne
(bad)
call
aaa
fdiv
cmp
inc
xor
jp
test
lods
mov
jmp
mov
in
xor
sbb
mov
add
das
clc
(bad)
sub
int
jp
popa
stos
enter
push
dec
add
cmc
add
push
and
or
or
sub
pushf
sub
out
pop
pop
fsub
ret
call
xchg
cmp
add
sbb
sub
scas
pop
fisttp
add
cmp
or
sar
push
cld
lods
xor
jp
mov
sbb
in
xchg
in
inc
pop
pop
hlt
(bad)
jmp
ins
and
scas
xor
mov
not
add
and
and
pop
mov
(bad)
std
adc
jl
lods
or
enter
xchg
mov
bnd
(bad)
call
jb
jecxz
ins
fidivr
aam
mov
sub
pop
add
cmc
push
clc
lahf
shr
and
push
arpl
lds
mov
repz
cwde
add
mov
outs
jne
pop
adc
add
xor
mov
(bad)
call
push
imul
sbb
lahf
sub
mov
inc
test
cmp
mov
jmp
sbb
xor
aam
call
cmps
mov
jg
outs
sbb
sub
push
fsub
inc
inc
outs
cli
pop
mov
adc
pop
loopne
cmps
nop
cwde
fsubr
mov
pushf
(bad)
test
(bad)
jg
or
push
cmp
xchg
fiadd
imul
inc
push
call
xchg
js
mov
lods
data16
pop
div
fcomp
push
sbb
stos
or
into
mov
cmp
(bad)
jmp
pop
int
ret
or
icebp
test
retf
call
(bad)
pop
call
pop
icebp
mov
cmc
push
es
and
(bad)
(bad)
jmp
mov
mov
cmp
dec
add
cwde
pop
lods
cmp
sbb
xchg
add
push
out
or
jg
pop
mov
loopne
xchg
xchg
sub
fcmove
xor
es
leave
push
mov
inc
hlt
sub
inc
xchg
sbb
rol
fimul
inc
dec
jp
xchg
stc
jp
rcr
pop
inc
inc
shr
and
sub
out
cli
es
outs
cmps
push
(bad)
clc
xor
ja
jmp
push
out
daa
aaa
or
(bad)
fsub
(bad)
aad
shl
in
jl
push
js
sbb
or
or
cmp
cs
and
fcomp
pop
sti
imul
push
xlat
mov
repz
mov
xor
(bad)
(bad)
(bad)
jg
xor
jo
and
xchg
sbb
push
mov
push
add
call
and
stc
xor
icebp
cmp
inc
out
xchg
mov
inc
(bad)
dec
ret
sbb
jg
adc
jae
test
outs
test
out
push
sub
jmp
cmc
cwde
rol
nop
test
push
in
shl
neg
(bad)
(bad)
inc
jae
xor
cli
xlat
int
adc
cwde
cmps
adc
jge
(bad)
push
cld
(bad)
(bad)
mov
jae
popa
int
xchg
repnz
mov
das
fnstcw
out
(bad)
(bad)
(bad)
jl
inc
adc
add
ins
adc
mov
ins
dec
sbb
adc
cmp
xor
lods
das
clc
cmp
es
xor
and
dec
dec
push
mov
mov
rcl
imul
sbb
cwde
rcr
test
push
(bad)
(bad)
jg
push
sahf
aaa
test
cld
out
push
sub
dec
repnz
or
cmps
ins
add
sub
add
fucomip
mov
mov
cmp
shl
mov
pop
(bad)
ins
pop
loope
aaa
cwde
shl
or
mov
jne
sub
mov
jo
or
mov
jecxz
ins
or
mov
shl
(bad)
(bad)
(bad)
jmp
push
fs
xchg
sti
jg
add
out
jle
fsubr
fs
(bad)
(bad)
(bad)
dec
das
and
or
add
push
inc
add
lahf
fstp
push
pop
mov
sahf
in
dec
sub
add
cmp
inc
pop
or
push
adc
fadd
mov
xor
imul
(bad)
(bad)
jmp
push
pop
ja
fcmovu
das
mov
pop
movs
(bad)
or
adc
pop
add
arpl
pop
cmps
cs
repnz
loop
dec
inc
in
out
and
pop
sti
push
xor
rol
(bad)
(bad)
(bad)
mov
xchg
pop
add
sub
pop
mov
shl
(bad)
inc
pop
mov
mov
fscale
dec
mov
add
jge
and
fst
fist
jnp
xor
xchg
xor
ret
pushf
fsub
sub
fidiv
cwde
mov
mov
push
jmp
pop
mov
push
mov
or
push
cld
call
iret
aas
xor
add
jne
dec
mov
loope
(bad)
mov
dec
inc
gs
jae
adc
mov
hlt
addr16
sar
mov
lea
hlt
push
xchg
jecxz
mov
aam
or
pop
(bad)
jg
loopne
pusha
popa
fucompp
cmps
shl
aas
xchg
cmp
push
outs
xchg
xchg
(bad)
jg
mov
xchg
call
cmps
jno
adc
pusha
lods
test
(bad)
fdivrp
sbb
and
ror
into
xor
jg
fs
lock
or
cmp
push
push
xlat
mov
out
aam
add
mov
cwde
pop
jp
or
test
(bad)
mov
xchg
(bad)
(bad)
(bad)
push
aaa
jmp
fsub
ror
mov
mov
and
push
push
test
or
std
add
dec
and
sbb
adc
jmp
les
sbb
mov
in
xor
push
adc
pop
push
mov
dec
cmp
push
aaa
popf
xor
mov
in
xor
outs
mov
add
(bad)
(bad)
jmp
pop
add
pusha
mov
jnp
and
push
or
push
test
imul
dec
sbb
lahf
xchg
icebp
ret
cdq
cmps
(bad)
or
ins
sbb
mov
loopne
mov
test
add
retf
rcl
repnz
and
(bad)
call
cmp
or
imul
pop
cwde
enter
retf
(bad)
jg
stos
sahf
outs
pop
inc
ret
rcl
push
mov
mov
fbstp
dec
add
jbe
adc
or
xor
out
jns
fadd
cmp
or
cld
push
pop
adc
outs
xor
adc
sahf
inc
xchg
adc
mov
jg
jmp
or
out
jmp
xor
xchg
mov
call
push
xchg
add
sar
loop
mov
adc
or
(bad)
(bad)
(bad)
fbld
lock
sub
ds
inc
ds
cmp
inc
jb
xchg
ds
pop
ret
cli
sbb
stos
xor
scas
cli
mov
xchg
push
fmul
(bad)
mov
sub
leave
scas
sti
rcr
adc
popf
sbb
jb
sbb
lock
(bad)
cmp
inc
sar
leave
aaa
lods
div
mov
sti
shl
stos
cli
cmps
imul
popf
(bad)
(bad)
(bad)
fild
or
not
jp
hlt
and
mov
sti
mov
sbb
cmc
inc
cs
cmp
std
nop
pop
jb
popf
shl
(bad)
(bad)
dec
sti
sub
movs
sub
mov
xchg
loopne
leave
sbb
inc
pop
int
cmp
or
mov
jg
jmp
push
dec
adc
and
cmp
pop
push
data16
aaa
push
mov
jg
(bad)
cmp
loope
lods
xchg
push
or
outs
into
adc
mov
cli
arpl
and
add
sub
adc
test
cs
ss
leave
in
daa
add
aam
retf
pop
inc
cmps
ud0
call
or
xchg
add
push
jno
les
(bad)
(bad)
outs
mov
int3
and
in
fld
push
xor
je
sbb
push
and
sub
xor
sbb
movs
sbb
nop
ja
inc
imul
pop
fmul
pop
or
cli
div
or
push
inc
sub
pop
das
lock
mov
push
retf
es
popa
fs
or
loope
mov
mov
rol
lock
add
and
adc
jecxz
xchg
clc
enter
jns
dec
inc
dec
inc
scas
inc
pusha
cmp
imul
push
push
popa
outs
gs
(bad)
fild
pop
dec
data16
dec
cmp
ins
imul
dec
popa
dec
imul
add
add
add
(bad)
push
adc
xor
add
ret
lods
push
push
cs
or
pop
sbb
pop
mov
outs
je
outs
ins
and
ins
inc
adc
je
inc
xor
dec
jne
push
pop
push
bound
imul
push
popa
bound
and
or
jmp
shl
(bad)
xor
stos
push
imul
add
add
adc
arpl
ins
ins
cmp
push
aas
mov
add
mov
(bad)
and
arpl
pop
or
or
add
pop
xchg
pusha
imul
add
outs
xor
ds
ins
popa
adc
pop
xor
nop
or
sti
add
adc
jnp
or
xchg
sub
adc
popa
(bad)
mov
or
js
adc
fild
ins
mov
push
imul
je
jb
cs
popa
je
or
addr16
std
sti
aas
dec
mov
inc
or
or
push
clts
adc
push
or
or
mov
(bad)
mov
jl
jg
xor
jecxz
pushw
xchg
jmp
dec
(bad)
bound
les
mov
or
sub
xchg
dec
xor
lahf
mov
cli
(bad)
(bad)
call
mov
shl
dec
push
push
xor
add
test
pop
imul
jecxz
jle
inc
and
jo
cmp
test
add
push
xchg
xor
push
jo
add
ret
adc
or
add
xchg
ins
mov
xchg
sbb
inc
sub
mov
call
call
pop
fdivr
jmp
js
add
icebp
mov
test
les
(bad)
out
ins
loop
xor
or
aaa
cld
pop
scas
data16
sbb
xor
xor
arpl
adc
sub
xor
rcr
lahf
adc
cmp
add
je
pop
xchg
add
xor
xchg
cs
push
(bad)
jg
je
rsqrtps
push
dec
inc
dec
pop
inc
dec
inc
push
push
inc
push
or
mov
outs
pusha
pop
arpl
ins
popa
outs
daa
adc
mov
sbb
ins
gs
loopne
adc
inc
popa
imul
dec
and
data16
and
test
xchg
add
sbb
push
ret
jo
arpl
sbb
(bad)
xor
pop
jmp
xor
inc
test
inc
or
inc
imul
sbb
int3
adc
jg
std
pop
inc
popa
jo
imul
cwde
sar
shl
sbb
sar
mov
add
mov
dec
dec
cs
js
mov
shl
or
push
or
movs
loopne
add
stc
loop
cmp
popa
imul
(bad)
jnp
mov
or
push
or
cs
adc
or
lods
cwde
outs
push
outs
or
dec
or
inc
outs
fs
test
std
pop
mov
cmp
and
imul
sub
jl
(bad)
jb
adc
(bad)
jg
jne
adc
sar
sar
sar
add
and
test
or
mov
push
adc
xchg
or
jae
data16
sar
add
add
add
add
push
xor
sbb
or
popa
je
jns
test
lods
push
jl
sub
rcl
fs
pop
cmp
div
outs
cmps
jae
and
add
gs
dec
outs
cmp
shl
int3
ins
sub
sbb
fiadd
inc
ret
or
add
shl
fs
add
cmp
jmp
mov
ror
mov
ret
imul
arpl
and
fsubrp
cmp
mov
dec
shl
mov
popa
jns
sti
inc
or
inc
je
push
data16
or
or
je
ins
shl
mov
in
dec
rol
cmp
cmovnp
or
or
ret
push
xchg
pop
mov
push
prefetchw
sbb
dec
push
ins
cmp
xor
ss
call
sbb
inc
jne
outs
or
pusha
pop
jmp
pop
pop
jbe
push
xlat
sbb
jg
(bad)
movs
mov
pop
add
add
add
add
sbb
mov
pushf
cmp
dec
add
out
ins
sbb
adc
enter
push
popa
jbe
retf
cmc
mov
aad
and
add
xchg
add
jb
adc
add
test
fistp
fdiv
and
sub
cmp
(bad)
stos
outs
fnstenv
jns
test
pop
pop
inc
mov
jo
ja
mov
dec
imul
push
ins
outs
outs
and
repz
bound
push
inc
jo
popa
pop
inc
jbe
push
or
dec
mov
inc
arpl
push
fsubr
pop
adc
sub
imul
popa
inc
push
das
sti
inc
mov
es
js
daa
pop
adc
add
imul
push
fcomp
or
out
adc
sub
or
and
mov
push
dec
fs
dec
int3
add
imul
push
pop
or
or
popa
jp
fdiv
bound
outs
outs
adc
pop
xor
in
fsub
push
add
aaa
fsubr
je
adc
jno
add
js
push
mov
or
sahf
shl
mov
push
inc
cmp
lock
psubsb
push
adc
bound
popa
aaa
lods
(bad)
mov
ja
cs
ins
or
adc
add
push
les
dec
sbb
xor
push
lods
lods
shl
fs
je
jae
daa
ins
fbstp
inc
xor
push
inc
cwde
ins
push
sbb
jo
adc
jg
ret
dec
enter
jae
or
adc
push
jns
ins
dec
mov
mov
dec
pop
or
push
shl
or
sahf
sub
cmp
or
sbb
add
adc
sub
sbb
je
mov
lock
add
inc
popf
inc
inc
inc
inc
push
dec
push
es
rol
popa
mov
push
es
sub
ror
fcomp
or
popa
nop
popa
push
pop
xor
lods
mov
(bad)
data16
sbb
idiv
int3
dec
adc
adc
adc
pop
cmp
add
sub
iret
mov
movs
mov
sbb
xor
cs
mov
pop
aad
pop
test
pop
sub
push
mov
or
dec
ds
inc
ins
popa
les
mov
mov
xor
dec
add
les
dec
pop
add
push
shl
ror
add
or
adc
inc
xchg
scas
repz
mov
push
sti
adc
loop
push
rcr
mov
push
popa
aad
shl
test
xor
dec
nop
xchg
retf
fnstenv
push
inc
xor
dec
aaa
loop
rcl
ds
or
scas
sub
je
xor
or
hlt
addr16
push
add
push
int
repz
and
nop
jne
or
and
popa
xor
cwde
xlat
jae
dec
test
aas
and
or
imul
das
xor
ret
mov
push
pop
push
sub
jae
inc
enter
and
fdiv
retf
sub
mov
add
sbb
mov
adc
mov
pop
fidiv
or
push
add
add
rep
bswap
add
jne
(bad)
sbb
fistp
push
(bad)
icebp
cmp
outs
shl
cmp
sti
sahf
mov
rol
and
loop
mov
and
xor
(bad)
jbe
ror
mov
mov
or
xchg
push
add
sbb
mov
mov
or
test
or
push
add
push
mov
add
mov
and
inc
sbb
add
addr16
inc
sub
mov
adc
push
jle
push
(bad)
inc
and
pop
push
dec
bound
int
lods
outs
adc
repnz
sbb
add
add
add
pusha
add
sbb
sbb
dec
outs
outs
dec
jo
inc
pop
or
mov
adc
adc
sbb
out
push
fwait
aam
rcl
stc
mov
or
cmp
shr
cwde
sub
sub
out
jns
mov
add
adc
movs
sbb
sub
(bad)
push
inc
sub
mov
dec
not
and
sub
mov
mov
mov
leave
xchg
pop
and
into
mov
mov
and
imul
adc
fist
sub
push
stos
fldcw
mov
int
pop
mov
jbe
stos
int3
push
push
imul
stos
mov
mov
out
push
in
adc
in
mov
adc
sar
shl
rcl
lahf
jb
mov
pop
mov
adc
cmp
mov
sub
mov
inc
mov
imul
push
mov
xchg
add
xchg
and
out
mov
mov
mov
mov
clc
fimul
sbb
and
pop
mov
pop
xor
cmc
sbb
mov
repz
fldenv
fadd
int
out
mov
out
adc
jecxz
cmp
js
in
iret
and
test
push
test
ds
popf
xchg
mov
cmp
mov
xor
pop
ins
mov
pop
dec
dec
cdq
xchg
fdiv
push
sbb
(bad)
sti
add
xchg
mov
ror
xchg
add
xchg
xchg
out
enter
mov
cmp
add
xchg
and
test
mov
stc
test
cmp
xor
pop
or
sub
icebp
add
aas
xlat
mov
pop
mov
pop
push
sbb
into
and
xor
loopne
push
mov
addr16
pop
and
pop
fld
adc
in
add
xchg
cmp
inc
ret
retf
ret
xor
scas
adc
fs
fistp
jbe
out
mov
mov
push
add
fnstenv
dec
and
dec
pop
lea
inc
shl
addr16
and
das
add
sbb
mov
push
dec
and
add
popa
add
inc
xchg
ja
mov
mov
push
push
sub
out
fnstcw
add
pop
mov
push
and
sub
mov
mov
mov
jns
pop
or
xor
mov
mov
fwait
pop
sub
mov
inc
popa
(bad)
and
xlat
je
das
sub
push
mov
mov
fisttp
gs
jnp
mov
jns
xchg
and
cmp
das
fs
push
jb
inc
or
inc
lods
mov
cmp
xor
stos
jg
cmp
jns
fcomp
add
sub
add
in
and
mov
sar
in
mov
jmp
cs
inc
mov
cs
adc
inc
add
mov
xor
dec
popa
jns
imul
outs
jb
shl
mov
adc
and
adc
pop
and
fucomp
jmp
adc
mov
mov
push
mov
ror
test
mov
mov
inc
add
dec
ror
pop
test
adc
cmp
shl
add
das
in
adc
lods
push
loope
pop
inc
mov
rol
ret
mov
adc
or
add
xchg
sub
add
add
jl
and
sbb
ret
sbb
dec
add
icebp
sti
sub
xchg
mov
add
inc
lods
stos
xor
lods
mov
(bad)
jo
inc
scas
sti
mov
or
mov
push
xchg
jb
jbe
xor
pop
inc
repz
sub
sub
mov
nop
ror
pop
xor
mov
adc
xlat
push
add
test
cld
sub
stos
push
jae
ss
or
ja
inc
pop
aaa
daa
shl
adc
daa
jbe
mov
jo
inc
xor
mov
push
ror
sbb
or
mov
pop
adc
push
cmp
add
or
jmp
mov
shl
sbb
sub
neg
or
inc
add
aas
or
pop
push
pop
ror
and
in
mov
mov
pop
mov
push
aaa
or
sbb
jnp
popa
jp
aaa
mov
mov
xchg
frstor
cwde
and
mov
or
sub
data16
popa
jae
sub
es
js
jbe
sub
rol
and
ret
jecxz
lods
mov
add
sub
pushf
mov
ror
sbb
test
ror
mov
rol
test
mov
sbb
inc
push
loopne
call
mov
in
fisttp
dec
leave
pop
pop
ss
inc
adc
sbb
xor
add
cs
add
pop
sbb
mov
mov
sbb
and
jo
sub
sbb
aad
sub
or
pusha
stos
aad
pop
pop
mov
xchg
lock
movs
cmp
sub
ror
mov
scas
push
pop
mov
(bad)
sbb
sub
enter
lea
test
xchg
hlt
pop
mov
adc
jg
mov
test
mov
sar
in
push
and
mov
sub
arpl
adc
rcr
sar
cmp
jno
and
ror
xor
invd
xchg
push
ror
outs
mov
lea
push
ins
xchg
sbb
movs
fnstcw
adc
push
add
jp
test
mov
popa
and
and
call
ror
movs
inc
rol
aas
jb
shr
push
scas
out
or
inc
mov
stos
add
lea
adc
adc
retf
dec
ins
fld
lods
and
jmp
adc
fist
jnp
jp
mov
js
xchg
inc
int3
lods
aad
or
push
ja
mov
pop
pop
cli
sub
xchg
xchg
dec
inc
cli
push
sub
adc
std
shl
mov
mov
pop
and
test
inc
mov
sbb
adc
movs
add
pop
inc
fsubr
xor
inc
mov
stos
cdq
sub
mov
cmp
lds
rol
icebp
stos
adc
test
jne
pop
or
add
sti
mov
push
mov
sub
sbb
adc
adc
mov
int
jle
test
adc
call
pop
mov
rol
mov
xor
sub
sbb
pop
push
and
das
add
pop
loopne
add
jnp
pop
inc
sbb
xor
icebp
xchg
adc
sar
hlt
shl
aaa
in
cmp
rcl
xchg
inc
pop
adc
mov
push
sbb
outs
popf
adc
std
xor
mov
mov
mov
mov
mov
or
dec
sbb
sbb
ins
lahf
mov
mov
mov
mov
(bad)
test
xchg
imul
daa
inc
adc
lods
mov
jmp
xchg
sub
jb
pop
or
leave
xchg
popf
adc
and
xor
mov
test
mov
and
adc
jmp
xor
loop
or
mov
dec
add
cmp
out
pop
fisub
sar
cmp
jnp
and
mov
pop
mov
outs
rcl
movs
adc
add
and
or
and
arpl
cmp
pop
add
xor
enter
(bad)
sub
sub
shr
sub
sub
mov
xor
mov
push
sub
sub
dec
scas
sub
jnp
ror
push
in
shl
xlat
and
add
cmp
loop
xor
test
pop
mov
pop
mov
sub
mov
dec
add
sbb
dec
xor
pop
lock
jne
sar
mov
adc
push
sub
dec
loope
(bad)
xchg
cmps
add
cmp
mov
adc
inc
sbb
sub
fild
add
add
inc
hlt
inc
(bad)
sub
mov
and
and
daa
push
sub
scas
out
ds
js
push
mov
cmp
add
mov
mov
mov
das
mov
cmp
dec
sub
lock
(bad)
xlat
ret
or
xchg
call
mov
push
xor
jg
push
add
xchg
bound
dec
inc
call
fwait
and
ja
adc
pushf
fisubr
sub
push
mov
or
mov
sub
in
pusha
in
xor
push
push
mov
or
movs
dec
popa
test
ins
(bad)
popa
and
mov
sahf
adc
repz
cmp
test
shl
mov
or
pushf
add
rcr
inc
popa
add
pop
adc
mov
dec
xor
xor
sub
dec
cmp
and
daa
cmp
or
xor
adc
aad
nop
xchg
and
jl
mov
xchg
sub
sub
cs
and
sbb
inc
loop
test
sbb
lds
pop
xchg
sub
(bad)
xchg
push
pop
push
call
ins
and
mov
mov
ja
and
mov
ror
mov
sbb
ret
sbb
push
sar
test
xlat
jb
jg
mov
rcr
mov
lods
or
xor
adc
fistp
rol
sub
pop
add
push
popf
in
add
push
mov
adc
rol
add
in
dec
adc
mov
ret
mov
sub
xor
and
mov
add
push
xor
adc
cs
dec
enter
jb
xchg
sbb
mov
rcl
mov
pop
push
ret
sub
fcmovnbe
test
lahf
adc
inc
fisttp
mov
sar
xchg
push
sbb
dec
pop
xor
mov
mov
or
inc
xlat
and
cmps
jge
and
jo
sub
jmp
mov
jno
xchg
xor
mov
mov
enter
or
xor
adc
es
push
dec
cmp
inc
call
stos
jno
test
mov
pop
or
add
test
mov
mov
and
mov
cmp
(bad)
mov
adc
frstor
add
outs
lods
nop
push
xchg
xor
push
sub
jmp
or
mov
outs
sub
push
aaa
mov
sub
fcmovnbe
aaa
push
xor
out
aas
cwde
sbb
pop
inc
add
push
test
push
leave
push
sbb
sbb
fcompp
push
mov
push
xor
mov
and
nop
shl
inc
cmps
scas
and
mov
pop
adc
adc
mov
jns
cs
inc
push
or
call
mov
pop
mov
sub
and
mov
test
mov
push
xor
inc
xor
push
or
mov
push
pop
mov
and
sub
mov
and
pop
cs
stos
(bad)
mov
dec
mov
loope
loopne
mov
jecxz
sahf
lods
push
mov
add
call
add
add
sbb
adc
test
inc
adc
mov
add
dec
pop
mov
lods
adc
xor
inc
popa
adc
jo
pop
and
rcl
pop
or
add
mov
mov
mov
shr
pop
sbb
push
and
mov
xor
sti
repz
sub
sbb
sar
loope
js
pop
ja
adc
mov
das
mov
mov
pop
inc
or
fistp
add
hlt
add
xor
dec
aaa
xchg
movs
mov
jne
mov
frstor
push
xor
sub
or
popa
inc
pop
and
jnp
jae
test
jns
(bad)
and
jbe
cmp
test
add
aam
pop
test
mov
test
mov
shl
frstor
(bad)
or
imul
dec
int
mov
mov
push
xor
test
sub
cmp
add
add
adc
test
rol
cwde
push
jno
pop
xor
inc
pusha
(bad)
cmc
shl
icebp
fwait
mov
mov
add
mov
xor
mov
ror
adc
sub
mov
push
push
rol
imul
cmp
add
int
sbb
add
adc
push
clc
(bad)
sbb
test
nop
push
xor
xor
pop
fwait
xor
add
sbb
mov
pop
push
mov
pop
xor
outs
adc
xor
add
das
inc
push
cmp
pop
mov
or
bound
add
dec
fimul
sub
pop
xor
ins
and
adc
xor
add
scas
sar
leave
push
or
adc
jb
rol
adc
rol
or
fs
adc
sub
dec
test
push
(bad)
jno
mov
loope
ds
sar
cmc
sbb
and
mov
mov
sub
add
sar
sbb
test
aad
test
cs
fadd
or
sbb
mov
repz
pushf
sar
test
xor
jae
mov
xchg
add
shr
push
lds
jmp
fwait
push
push
and
(bad)
loope
jo
icebp
adc
fild
push
stos
inc
sbb
adc
retf
jbe
rol
mov
(bad)
mov
add
adc
ss
pushf
dec
sbb
mov
mov
jecxz
loop
inc
mov
mov
loopne
jns
push
add
push
pop
adc
ret
call
sub
adc
mov
sbb
hlt
jae
jmp
push
sbb
inc
ins
jl
test
rol
xchg
loopne
inc
pop
mov
xchg
sbb
jge
addr16
add
dec
sub
jo
and
sub
inc
aaa
aaa
ret
add
cld
shl
adc
cs
inc
aaa
xor
or
shl
xchg
sar
inc
in
mov
jae
cmp
adc
inc
test
pop
jns
sar
jecxz
or
js
and
jb
scas
nop
adc
retf
xor
dec
and
call
mov
adc
sbb
sbb
cmp
adc
mov
pop
adc
mov
pusha
mov
mov
rcl
shl
icebp
lds
popf
xor
mov
arpl
mov
inc
shl
mov
mov
cwde
or
iret
jne
mov
loop
xchg
sub
mov
push
cmp
push
xor
mov
sbb
xor
std
add
and
fisttp
fstp
test
in
add
pop
jo
mov
bound
add
ret
mov
enter
ss
inc
adc
add
xor
cmc
test
lock
adc
push
shl
push
pop
jne
test
dec
sbb
int
add
sbb
icebp
mov
and
bound
adc
sub
fisttp
ins
mov
shl
jmp
out
mov
or
mov
mov
adc
push
retf
inc
mov
pop
adc
add
inc
cwde
cmp
clc
xor
push
adc
sbb
les
movs
sar
jge
and
jo
push
pop
mov
dec
mov
sub
dec
adc
or
stc
loope
mov
push
mov
xor
bound
xor
xor
movs
or
ret
movs
pop
jge
test
add
imul
rol
and
loop
jno
enter
ror
adc
xor
add
popa
ss
mov
push
pop
popa
adc
jne
or
pop
add
cmc
add
mov
pusha
mov
or
or
push
dec
or
pop
cwde
xchg
stos
ret
lods
mov
pop
sbb
sbb
push
pop
aad
mov
xchg
call
pusha
add
arpl
or
mov
mov
cmps
mov
pushf
nop
loope
cmc
push
dec
push
mov
sub
and
mov
bextr
add
dec
mov
rol
add
inc
push
and
pop
daa
cs
sbb
fnstcw
and
nop
and
xor
mov
mov
add
cmp
mov
(bad)
fld
cmp
add
adc
push
adc
inc
in
mov
and
arpl
ret
adc
jae
push
and
add
test
bound
adc
inc
pop
ins
or
cld
xchg
pop
cmp
xor
adc
push
aas
or
xchg
mov
mov
cwde
sub
sub
in
ror
rol
mov
adc
dec
xchg
mov
sub
iret
daa
mov
imul
shr
ror
je
cmp
inc
jl
adc
jbe
xchg
sub
rol
mov
xchg
add
pop
jge
inc
mov
or
dec
inc
test
and
outs
popa
sub
(bad)
sbb
stc
mov
inc
mov
xchg
and
xor
or
(bad)
movs
push
xor
adc
sub
mov
jne
jb
mov
jns
sbb
mov
adc
stos
test
mov
add
cmp
sbb
popf
js
jo
inc
bound
xor
scas
sar
inc
shl
pop
adc
std
mov
(bad)
imul
or
mov
add
sahf
pop
cmp
mov
add
or
inc
retf
sub
aaa
mov
mov
sbb
mov
retf
mov
nop
mov
outs
xchg
sub
xor
xor
adc
lods
mov
xor
and
add
das
test
fiadd
sbb
add
sub
add
retf
mov
or
and
add
and
adc
push
aas
add
ror
dec
leave
sub
inc
cwde
movs
sbb
sub
jo
shl
test
outs
sbb
sub
shr
pop
pop
mov
popa
rcr
cdq
sub
add
jo
rol
xor
shl
add
(bad)
dec
dec
mov
sti
sub
push
cmp
or
rep
sub
pushf
idiv
call
mov
or
stos
cmp
xor
mov
sbb
pop
adc
push
xor
test
shr
sbb
(bad)
sub
xchg
scas
push
inc
add
adc
xor
adc
stos
dec
mov
jecxz
icebp
sub
test
inc
mov
and
jo
sar
add
hlt
mov
loop
shr
and
and
(bad)
jae
sbb
sbb
fnstsw
mov
icebp
xchg
cmp
loopne
mov
test
in
test
mov
xor
xor
pop
shl
in
lods
std
xlat
mov
xchg
leave
mov
sub
ror
mov
jne
push
or
sar
pop
mov
or
lods
or
rcl
add
push
mov
or
sub
push
add
sar
push
fst
test
xlat
out
inc
sub
mov
loop
test
cmp
pusha
adc
sbb
jb
ja
mov
loope
test
push
inc
imul
mov
call
mov
fstp
loope
cmp
cmp
and
or
mov
loope
dec
pop
rcl
retf
jmp
mov
movs
mov
dec
push
sar
and
xchg
je
inc
pop
pop
ret
push
test
and
mov
xchg
ror
aam
adc
push
xor
sub
lock
sub
retf
iret
adc
enter
adc
mov
inc
jmp
sbb
push
(bad)
movs
les
sbb
retf
add
mov
and
push
dec
sub
stos
movs
push
sub
ja
(bad)
dec
sbb
cs
xor
xor
in
or
mov
and
sbb
add
outs
pop
xlat
xchg
loopne
mov
inc
add
call
adc
fld
sbb
xor
mov
cld
in
mov
aam
mov
clc
add
dec
aad
or
add
arpl
mov
scas
mov
mov
aaa
mov
lea
enter
xchg
push
push
and
scas
xor
imul
test
xlat
retf
pusha
or
ret
and
outs
movs
add
lea
jo
xlat
sub
imul
jg
lea
inc
cmp
inc
adc
pusha
lods
imul
and
gs
cmps
scas
xor
pusha
xchg
cmp
mov
(bad)
xor
pop
mov
mov
test
or
and
popf
push
fcom
outs
leave
xchg
xchg
cmp
mov
push
call
jno
test
das
sub
xor
sub
dec
test
or
test
sbb
dec
ret
adc
inc
dec
xlat
jne
popa
movs
add
sbb
add
leave
sub
cwde
mov
outs
leave
pop
dec
inc
mov
xchg
jno
xor
das
(bad)
aas
xlat
inc
mov
mov
xchg
dec
pop
adc
add
cmp
add
push
rcl
or
cmp
adc
cmp
inc
add
arpl
rcr
mov
xor
mov
arpl
adc
push
xchg
adc
xchg
mov
and
add
shl
add
out
retf
scas
sub
push
mov
popa
push
or
sbb
adc
mov
push
add
aas
jmp
xchg
mov
addr16
inc
ret
in
and
rcl
cmps
lahf
aad
test
dec
adc
lea
ins
add
mov
xchg
push
and
enter
imul
push
mov
mov
xchg
adc
pushf
adc
mov
adc
mov
addr16
test
lods
inc
je
mov
mov
test
add
sub
jno
jg
test
stos
xchg
lods
sbb
in
mov
dec
rol
js
jbe
rol
lds
lods
mov
iret
fnsave
nop
and
mov
push
fld
fwait
mov
je
sbb
jne
xor
cmp
inc
or
lods
and
rol
mov
fild
jge
inc
xor
dec
clc
mov
ret
adc
sbb
fistp
mov
push
sub
ret
jo
aam
xor
push
adc
sbb
das
pop
sar
sub
add
rcl
add
push
popa
and
mov
icebp
jno
dec
dec
cmps
mov
inc
rcl
adc
sbb
mov
mov
cmp
dec
clc
ins
inc
mov
dec
and
test
pop
mov
dec
movs
fcomp
mov
and
add
bound
into
add
sub
xchg
iret
shl
das
adc
sbb
fnstenv
sub
mov
sub
jne
and
push
mov
inc
mov
xor
mov
sub
aaa
popf
call
aaa
adc
inc
and
inc
shl
sub
inc
test
inc
push
adc
mov
stos
adc
dec
inc
ins
mov
sahf
adc
jmp
dec
xchg
jl
call
jo
test
xlat
mov
shl
and
add
shr
es
ins
test
pushf
or
or
add
popf
fistp
ret
mov
stos
mov
add
or
add
scas
les
movs
pop
xor
ror
adc
imul
shr
lods
and
imul
fs
xchg
sbb
or
sbb
mov
cdq
mov
stc
cmp
push
cld
jecxz
stos
mov
lods
mov
fmul
(bad)
adc
outs
je
mov
fbld
mov
mov
div
xor
mov
or
out
jnp
add
cmps
cdq
lock
pop
mov
movs
aaa
lahf
jo
punpckhwd
xchg
nop
in
test
test
or
or
(bad)
rcl
jne
std
or
dec
movs
out
and
mov
mov
or
xor
shl
or
(bad)
mov
xchg
mov
inc
rol
push
xchg
mov
xlat
mov
inc
pop
pop
loopne
push
add
jno
movs
imul
jecxz
add
add
cmc
add
out
sbb
xchg
add
ret
inc
sbb
pop
pop
cmp
mov
push
adc
out
push
test
sbb
add
adc
loope
pop
xor
ins
adc
pop
cdq
inc
fimul
xor
push
push
test
mov
or
mov
add
sub
fadd
add
inc
sbb
stc
daa
es
shr
and
mov
rol
aas
and
push
inc
sub
std
adc
xor
push
movs
es
mov
ret
iret
lahf
sbb
sub
in
rol
adc
shl
dec
or
sbb
inc
jno
pusha
and
dec
arpl
imul
sub
jnp
pop
mov
mov
mov
add
int
ret
inc
xor
xor
movs
mov
rol
push
adc
mov
adc
push
mov
pop
ins
jl
arpl
and
push
aam
push
sub
mov
dec
xchg
arpl
push
and
call
mov
mov
adc
jb
mov
ret
xchg
pop
dec
mov
das
loope
sar
push
setae
add
push
and
add
sar
dec
dec
cmp
lock
hlt
std
cwde
mov
mov
shl
scas
xchg
or
adc
and
xor
add
xor
dec
mov
lds
pusha
mov
and
lahf
mov
push
sbb
call
outs
mov
js
out
aaa
xchg
ins
and
cmp
mov
jecxz
mov
or
sbb
fbstp
mov
mov
sub
loope
xor
add
mov
test
mov
rcr
movs
and
dec
fisub
push
jmp
or
imul
jne
mov
mov
add
aad
mov
and
xlat
ja
sbb
out
mov
add
cmp
push
ds
push
cmp
stos
and
mov
adc
movs
bound
pop
mov
mov
mov
lods
sar
or
cmps
cmp
sub
mov
inc
sbb
mov
adc
inc
mov
add
mov
cmps
and
xor
push
inc
sub
enter
stos
sub
add
push
or
sar
or
pop
xor
or
and
imul
loope
scas
push
and
inc
loopne
add
add
sub
add
enter
mov
rol
jae
add
ins
scas
adc
inc
in
jns
in
inc
mov
loopne
or
sbb
or
pop
loop
push
movs
call
test
cmp
movs
pop
mov
adc
sbb
mov
xor
cs
mov
or
jne
and
sar
adc
and
sub
push
arpl
call
icebp
xor
adc
ret
xor
(bad)
mov
test
adc
addr16
loopne
adc
cmp
popa
sar
add
jg
div
mov
xor
test
or
sbb
test
xor
stos
mov
mov
xor
fldenv
imul
rcr
sub
imul
and
xor
or
mov
inc
and
xchg
jno
adc
aaa
aad
sbb
adc
sbb
push
aad
mov
inc
pop
outs
add
add
and
add
(bad)
push
js
aad
adc
or
shl
fwait
push
dec
push
shl
mov
popa
or
mov
add
setne
std
ror
cmp
pop
mov
popf
pop
or
loope
mov
movs
push
inc
dec
(bad)
or
adc
sub
imul
and
aad
data16
test
xchg
mov
(bad)
push
jg
or
dec
test
add
shr
sub
inc
xor
enter
jnp
popa
jne
cmp
xchg
push
and
dec
pusha
xor
cwde
lea
(bad)
xor
dec
xor
sbb
pusha
add
add
sar
sbb
adc
ror
cmp
push
and
jnp
jmp
mov
shl
dec
mov
sbb
add
cmp
mov
adc
xor
int
rol
fisubr
cmp
or
inc
and
sbb
sti
outs
mov
shl
adc
cmp
xor
pop
mov
cmp
mov
adc
push
inc
xor
sti
add
jmp
or
or
pop
or
shr
movs
and
dec
rol
mov
mov
xor
sbb
ret
sbb
and
pop
(bad)
mov
(bad)
dec
cmp
pusha
lds
sub
sbb
xchg
adc
fild
cmp
dec
jl
test
mov
or
cwde
dec
mov
mov
sub
repz
pop
sbb
bound
stos
or
test
js
cmp
sar
mov
shl
and
adc
shl
sbb
push
cmp
and
inc
inc
or
loopne
xchg
adc
dec
sbb
or
inc
add
jl
or
inc
lods
inc
inc
fwait
inc
add
sbb
(bad)
sub
comiss
inc
mov
stos
jne
dec
sahf
jne
push
shl
xor
test
and
xchg
shl
test
shl
sbb
inc
dec
mov
sbb
xchg
and
adc
add
pop
inc
mov
mov
dec
or
movs
cmp
addr16
push
arpl
lods
mov
dec
imul
lock
sub
and
ja
daa
inc
sbb
mov
push
movs
shl
push
repz
or
xor
cmp
mov
imul
inc
sub
mov
lds
mov
add
adc
and
mov
pop
das
dec
push
ror
sbb
test
inc
ins
xchg
sbb
mov
loopne
mov
or
mov
sbb
push
es
inc
and
jge
xor
jge
mov
fadd
push
or
sub
adc
push
sub
sbb
sbb
pop
mov
jne
adc
xchg
add
daa
bound
jl
mov
pop
or
or
pushf
ins
scas
mov
es
xlat
add
outs
ins
xor
(bad)
and
xchg
jns
sub
and
or
dec
mov
push
dec
push
popa
imul
retf
test
and
pop
push
fnstcw
test
xchg
and
and
push
sub
lds
cs
loop
or
adc
rcl
pop
inc
jo
adc
pop
pop
call
imul
das
dec
adc
and
pop
inc
imul
pushf
pop
pop
mov
mov
pop
inc
lds
or
push
cmp
adc
loope
jmp
int
outs
loope
or
add
sub
sub
xor
ret
xor
inc
adc
jno
mov
jne
ret
mov
add
push
sti
add
xchg
sbb
ret
inc
outs
call
cmp
fwait
xor
jne
jne
cmp
add
ins
adc
jo
pop
push
aad
shr
jmp
or
push
rcl
sub
add
cmps
push
xor
cmp
adc
jne
loope
adc
adc
mov
loopne
push
rol
in
(bad)
mov
add
mov
inc
mov
inc
cmc
mov
or
imul
adc
(bad)
sbb
pusha
mov
retf
xchg
sbb
or
in
movs
popf
shl
sti
bound
fist
adc
jae
bound
and
cmp
cs
cdq
sti
and
and
cmp
mov
popa
add
shl
push
test
jbe
pop
int
mov
sbb
lea
push
xor
add
test
sub
test
adc
adc
lods
or
lea
add
mov
icebp
in
adc
adc
push
or
jb
sbb
mov
xchg
shl
imul
jnp
or
or
dec
or
pop
xor
mov
mov
push
xor
xchg
inc
inc
ss
add
xor
(bad)
mov
fs
and
stc
cmp
mov
movs
lock
sar
shr
int
or
sub
add
cdq
adc
lahf
cmc
mov
lods
mov
clc
xchg
sbb
cmp
add
out
cmp
cmp
cmps
adc
mov
add
xchg
cmp
mov
ret
pop
sbb
mov
push
outs
(bad)
enter
push
jb
or
leave
xor
popa
sub
add
rcl
sbb
adc
dec
inc
stos
cmp
(bad)
cs
mov
mov
fcmovne
inc
pop
(bad)
out
in
sahf
add
mov
shl
jo
mov
adc
add
add
ins
xor
add
sbb
xchg
push
inc
push
add
ror
mov
push
jo
push
inc
dec
or
cdq
iret
cmp
cmp
ror
mov
or
les
pop
adc
add
ss
dec
jns
test
add
cmps
sbb
imul
and
mov
cmps
add
sub
or
add
cmps
sbb
rcr
add
dec
add
push
add
aad
and
mov
jnp
and
add
push
add
and
stos
sub
or
mov
test
clc
or
add
push
xor
and
dec
add
dec
lods
loopne
ror
dec
test
inc
adc
or
popa
adc
cdq
or
dec
das
and
mov
lds
add
popf
ret
and
inc
dec
dec
cdq
sub
dec
add
push
or
xor
dec
or
or
jge
and
mov
in
adc
add
and
adc
and
adc
or
mov
cdq
imul
add
push
mov
dec
dec
inc
enter
dec
and
or
or
dec
and
and
and
cmp
or
adc
and
add
push
add
add
dec
cdq
push
cdq
or
adc
and
dec
dec
sbb
test
add
push
add
inc
add
mov
or
cdq
add
dec
or
cdq
nop
mov
inc
dec
sbb
outs
inc
jo
sbb
mov
dec
dec
push
inc
and
add
sbb
mov
and
pop
cdq
or
loop
add
add
add
sub
and
mov
mov
push
inc
cdq
dec
pushf
mov
add
das
sub
adc
inc
or
mov
or
add
dec
dec
xor
je
add
fild
pop
aam
dec
push
adc
or
dec
push
add
and
adc
and
push
add
or
adc
and
add
add
adc
test
push
cdq
add
dec
dec
adc
mov
pop
add
push
and
test
adc
or
mov
and
add
add
add
dec
xor
sbb
push
and
and
dec
push
adc
inc
and
add
shl
dec
push
sub
mov
inc
rol
add
push
and
or
add
in
add
push
and
sub
add
and
push
and
mov
daa
xadd
and
and
adc
dec
sub
sub
adc
or
push
shl
inc
dec
and
dec
push
add
cmps
add
or
dec
and
rol
push
or
push
inc
mov
retf
dec
dec
mov
retf
shl
inc
jo
imul
mov
sub
add
sub
movs
or
add
push
push
movs
dec
push
dec
jne
in
and
dec
xor
and
movs
add
fwait
daa
inc
mov
pop
dec
dec
pusha
xor
add
mov
push
sub
add
or
dec
push
and
push
adc
pop
pop
xor
and
mov
mov
jno
add
push
add
test
add
dec
pop
add
xchg
mov
and
and
push
mov
push
popf
cdq
stos
inc
add
dec
lahf
arpl
add
push
add
mov
inc
dec
ins
rol
add
test
and
dec
add
es
dec
adc
out
push
mov
add
dec
xor
test
or
dec
and
pop
xor
or
movs
repz
adc
xor
rcl
mov
dec
and
add
add
push
int
dec
mov
dec
mov
dec
sbb
mov
icebp
inc
mov
dec
nop
and
adc
or
inc
dec
adc
dec
add
add
and
push
(bad)
dec
add
adc
adc
pusha
inc
outs
jecxz
add
mov
mov
dec
inc
adc
aas
dec
add
cmovg
adc
push
inc
nop
mov
xor
or
or
popa
xlat
and
dec
push
nop
push
and
inc
and
xchg
inc
adc
dec
add
inc
sub
dec
push
or
nop
and
nop
push
cmp
or
sub
add
add
and
add
dec
add
mov
add
dec
jg
add
or
jge
or
mov
imul
push
add
mov
dec
dec
dec
adc
dec
dec
or
stos
dec
dec
sub
mov
adc
and
dec
dec
test
inc
nop
dec
dec
test
inc
mov
dec
test
inc
nop
dec
dec
push
mov
sbb
dec
dec
push
adc
pop
dec
dec
push
adc
or
sub
dec
and
sub
mov
sub
mov
sub
adc
dec
dec
sub
adc
dec
dec
sub
adc
dec
dec
sub
and
dec
sub
add
dec
sub
adc
sbb
dec
adc
dec
adc
add
mov
inc
add
xor
and
dec
dec
or
adc
dec
dec
add
and
ror
or
dec
or
mov
adc
dec
dec
pusha
add
or
inc
adc
add
dec
dec
add
dec
add
or
mov
and
adc
sbb
add
dec
add
dec
add
or
dec
pop
call
or
add
push
add
push
add
dec
and
and
dec
jno
dec
and
dec
movs
or
cmps
dec
inc
jo
mov
add
push
nop
mov
cmps
dec
push
shr
and
mov
dec
cmp
xor
outs
and
es
movs
and
add
and
sbb
dec
and
in
and
and
mov
and
mov
add
dec
and
push
gs
push
or
push
arpl
pop
and
and
inc
gs
inc
push
push
push
xor
inc
lock
xor
and
(bad)
mov
inc
inc
and
inc
dec
rcl
adc
xor
push
xor
add
dec
and
lock
and
dec
and
xor
adc
popf
ss
cmps
mov
inc
ss
adc
loop
data16
xor
xor
xlat
ja
and
and
push
xor
or
push
dec
rol
or
push
adc
ss
cld
sbb
test
arpl
and
push
outs
xor
dec
dec
into
add
mov
call
fs
push
dec
and
xor
in
xchg
push
and
(bad)
ss
sub
or
xor
hlt
out
add
sbb
pop
shl
es
fwait
sbb
xchg
es
xor
in
xor
arpl
and
sub
jno
push
call
add
pop
mov
or
inc
cmps
and
sahf
and
cmp
push
pop
dec
nop
bnd
inc
add
add
xor
add
or
inc
and
shl
sub
fbld
and
and
sbb
gs
add
add
xchg
or
jle
xor
xchg
cmp
or
pusha
push
and
cmps
adc
dec
add
dec
scas
leave
add
add
and
dec
ss
popf
dec
cmps
nop
pusha
add
xor
xchg
sbb
add
and
xor
push
and
ficom
and
push
adc
jb
rcl
add
in
add
xor
and
mov
add
push
arpl
add
dec
arpl
mov
outs
fs
add
dec
and
and
push
arpl
dec
in
mov
add
add
dec
and
or
and
dec
sbb
add
add
and
and
and
jb
add
inc
and
add
lds
aas
push
add
dec
lds
in
and
push
xor
push
dec
add
add
mov
fild
add
adc
in
stos
or
xor
dec
add
ins
sar
in
or
mov
pop
adc
push
and
dec
add
xor
add
push
inc
add
mov
sbb
das
dec
adc
sub
rcl
add
sub
inc
pop
rcr
add
call
aaa
loopne
je
push
mov
push
pop
add
push
cli
push
sbb
dec
ret
dec
loopne
add
sub
add
inc
inc
addr16
and
xchg
and
popa
jae
mov
shl
push
xchg
imul
imul
sbb
dec
dec
inc
stos
sbb
inc
push
dec
dec
dec
and
movs
lock
ret
aam
mov
xchg
pop
xor
inc
repz
push
add
sub
test
iret
jecxz
mov
aaa
jne
cwde
cs
xor
xor
ret
cmp
imul
push
adc
sbb
ins
sbb
fmul
xchg
sar
loopne
adc
dec
inc
add
jnp
(bad)
(bad)
call
cld
inc
cmp
inc
cmp
cmp
addr16
and
xor
sub
ins
out
in
jae
outs
push
dec
dec
inc
and
or
jne
into
int3
and
(bad)
fild
jg
std
add
add
push
sbb
push
or
adc
or
push
dec
or
adc
(bad)
adc
adc
sbb
push
push
sbb
and
and
(bad)
fild
sub
sbb
sub
and
add
mov
adc
sub
pop
sub
das
xchg
or
mul
in
stos
and
add
add
les
pop
enter
sub
leave
add
add
pop
pop
or
jnp
fucomip
mov
pop
push
add
add
add
ds
(bad)
(bad)
inc
add
add
push
adc
pop
and
xor
inc
mov
adc
xor
clc
in
bound
js
pop
sbb
sbb
xor
js
cmp
cmp
inc
dec
pop
push
push
push
push
push
pop
pop
pop
arpl
scas
push
pop
sub
push
and
ja
jns
add
dec
xchg
xchg
xchg
xchg
cwde
cdq
call
test
stos
mov
mov
mov
mov
(bad)
(bad)
(bad)
inc
(bad)
enter
rcl
aad
xlat
fcomp
(bad)
loop
in
out
call
repz
cmc
test
pusha
lock
stc
cli
scas
pushf
add
add
mov
into
inc
adc
or
lods
add
scas
adc
inc
adc
fdivr
pop
lods
push
adc
pop
popa
jno
and
adc
mov
add
and
push
lock
loope
icebp
dec
inc
jo
mov
mov
ror
adc
mov
pop
sub
dec
fiadd
or
js
add
add
(bad)
(bad)
push
stc
jg
sbb
imul
sbb
jle
push
pop
int3
fidivr
sub
(bad)
(bad)
call
retf
sub
pop
pushf
sub
cld
sub
inc
and
and
xchg
and
dec
mov
jo
xchg
enter
(bad)
(bad)
(bad)
call
sub
or
lods
dec
add
push
retf
sbb
dec
ficom
(bad)
(bad)
(bad)
push
scas
mov
dec
pop
imul
sbb
push
jae
repnz
sti
cld
nop
cld
mov
inc
aas
fcmovu
fcom
dec
cmps
js
inc
jg
jmp
push
and
push
movs
popa
movs
xchg
jb
imul
(bad)
(bad)
inc
jbe
fs
mov
mov
or
repnz
fdivr
jmp
dec
(bad)
(bad)
(bad)
call
ins
cs
cli
sub
ja
jbe
retf
mov
loope
sub
pop
jle
int3
adc
cmps
fwait
(bad)
(bad)
(bad)
(bad)
mov
mov
xchg
outs
retf
cmps
retf
jo
outs
dec
das
mov
push
out
cmp
mov
popf
cs
mov
test
mov
or
xchg
jns
repnz
shr
pop
(bad)
(bad)
(bad)
dec
jae
dec
je
inc
sub
xchg
cs
imul
lods
sbb
(bad)
jmp
push
fsub
sub
mul
in
mov
fs
dec
test
jp
sub
(bad)
(bad)
(bad)
in
int
mov
out
fild
(bad)
mov
lahf
dec
js
mov
sub
cmps
adc
out
(bad)
(bad)
(bad)
push
pop
dec
jne
cdq
loopne
or
and
pop
stos
mov
push
inc
arpl
out
clc
(bad)
inc
mov
dec
cmp
cmc
cmp
pop
fstp
popa
xchg
(bad)
(bad)
jg
xchg
or
pop
jb
shl
ja
stos
hlt
iret
xor
ds
adc
(bad)
(bad)
(bad)
jmp
ss
mov
mul
fcomp
push
ins
ins
cmps
pop
adc
dec
sub
nop
ficomp
pop
mov
aas
gs
into
gs
mov
in
and
out
sbb
pop
add
(bad)
inc
aas
js
xlat
push
jne
(bad)
fnsave
inc
ins
add
call
push
mov
shl
idiv
iret
inc
xor
je
fadd
mov
ins
outs
in
jp
icebp
mov
mov
dec
test
jp
sub
ins
call
add
(bad)
pop
fst
mov
pop
jmp
lock
pushf
rcr
push
or
lea
lahf
cmp
mov
or
(bad)
ds
xor
in
and
ins
mov
(bad)
(bad)
(bad)
call
xlat
out
ins
mov
mov
xor
stc
jp
loopne
sbb
retf
push
in
jg
push
iret
iret
movs
lds
sub
scas
call
pop
push
test
cmps
(bad)
(bad)
(bad)
jmp
push
mul
loope
cdq
scas
xchg
pop
adc
dec
push
std
inc
not
cmc
outs
inc
pop
or
aad
iret
outs
ins
sti
les
arpl
into
(bad)
(bad)
(bad)
dec
lods
push
outs
pop
push
xor
test
mov
mov
lock
(bad)
jg
(bad)
mov
mov
and
(bad)
add
fdivr
(bad)
(bad)
(bad)
jmp
data16
or
sahf
mov
icebp
add
xchg
sub
cdq
daa
test
(bad)
(bad)
(bad)
inc
outs
in
les
pop
aam
jl
outs
(bad)
out
je
sub
pop
imul
jl
cmps
mov
(bad)
call
ins
fisttp
aad
or
push
int
test
and
xor
fdiv
js
dec
lods
jnp
sub
xchg
mov
fdiv
aas
clc
inc
cmc
xchg
jecxz
cmp
inc
(bad)
jmp
shr
rcl
sbb
call
js
and
mov
or
(bad)
jmp
aad
cmp
out
mov
dec
ror
icebp
jmp
repnz
mov
xlat
add
inc
aam
outs
xchg
scas
ins
fidiv
scas
(bad)
(bad)
call
and
or
std
dec
imul
loope
arpl
push
test
add
std
inc
or
call
pop
repz
pop
dec
and
inc
vrcpss
(bad)
jg
pop
jae
inc
pop
sbb
xor
inc
pushf
movs
pop
hlt
(bad)
jg
pushf
cmp
cmp
cmp
test
or
shr
cmp
(bad)
push
xor
mov
push
je
iret
repz
cwde
mov
ins
in
loopne
cmp
mov
pop
mov
arpl
ds
idiv
xchg
js
(bad)
cmp
lods
xchg
scas
clc
pop
cmp
sbb
lods
js
add
push
jge
out
mov
push
dec
push
mov
fiadd
inc
jb
int3
imul
inc
mov
sahf
enter
xchg
leave
(bad)
aas
into
mov
xchg
pusha
lock
pop
mov
mov
mov
push
es
repz
push
(bad)
call
jmp
push
and
aad
outs
movs
cs
adc
mov
pop
fld
mov
lock
lods
push
add
lods
std
(bad)
call
sti
arpl
mov
into
add
mov
fnsave
scas
(bad)
mov
sub
ror
mov
in
leave
lahf
(bad)
xchg
sti
push
ret
(bad)
jge
(bad)
inc
ins
sub
aam
shl
aad
repnz
sbb
in
popfw
xor
mov
push
fdivr
out
inc
sbb
and
clc
outs
mul
(bad)
call
cmp
test
sub
test
push
pop
jl
mov
pushf
das
jnp
imul
add
cs
idiv
test
cmp
push
fsub
in
push
jnp
cmps
inc
shl
loopne
aaa
aas
pop
icebp
in
lahf
cdq
lods
sbb
test
xchg
jno
push
mov
fscale
cmp
aas
pop
push
lea
leave
cli
(bad)
lahf
dec
dec
stc
cmps
or
imul
popf
std
in
out
outs
mov
imul
imul
addr16
(bad)
fbstp
int3
sar
sub
fst
(bad)
(bad)
mov
pop
iret
add
sti
push
rcr
jg
in
mov
jg
jmp
mov
xchg
jg
loope
loop
(bad)
(bad)
jmp
test
inc
jmp
add
jns
push
out
pop
shl
(bad)
inc
loope
xor
call
mov
cmps
fild
cmp
ins
(bad)
(bad)
(bad)
(bad)
(bad)
frstor
ins
call
push
xlat
adc
bound
mov
xor
xchg
out
(bad)
(bad)
(bad)
push
dec
adc
jp
cli
push
inc
(bad)
scas
in
and
mov
out
cmp
ja
mov
xchg
fimul
mov
scas
shl
dec
retf
out
add
(bad)
push
fidivr
cdq
dec
das
jae
mov
dec
add
cmp
xchg
pop
leave
sbb
sti
(bad)
jb
(bad)
(bad)
(bad)
jmp
jnp
(bad)
sub
scas
ret
(bad)
stos
pop
in
in
dec
call
ins
mov
mov
pop
jo
test
(bad)
(bad)
in
(bad)
sti
mov
sub
pop
mov
pop
sar
xor
(bad)
call
cdq
test
mov
xchg
cs
vsubpd
mov
pop
and
(bad)
test
jae
pop
push
dec
adc
(bad)
(bad)
(bad)
push
push
adc
or
sbb
aaa
or
inc
out
ins
loope
xor
mov
pop
and
pop
cld
inc
repnz
rol
out
mov
jb
inc
fcmovu
fiadd
inc
outs
adc
int3
push
and
stos
pop
or
ror
adc
sbb
mov
pop
mov
cmp
push
loop
pushf
jecxz
(bad)
(bad)
(bad)
jmp
test
dec
mov
sbb
ja
mov
es
jns
imul
xchg
lahf
jp
std
outs
xor
nop
(bad)
in
pop
xchg
mov
jg
cmps
jmp
(bad)
(bad)
(bad)
(bad)
fsubr
pop
cmp
stos
arpl
rcl
inc
(bad)
pop
loope
jnp
mov
dec
div
mov
bound
clc
inc
aad
sbb
or
jge
jecxz
shl
push
pop
dec
movs
inc
iret
sbb
(bad)
cld
push
and
xor
or
call
jns
call
sub
sub
mov
test
(bad)
in
mov
int3
mov
test
aad
mov
dec
mov
out
pop
out
or
mov
addr16
in
cdq
xchg
imul
xor
(bad)
(bad)
(bad)
push
cmp
in
adc
(bad)
imul
xor
fimul
out
imul
cmp
icebp
lds
(bad)
(bad)
dec
jb
test
lods
push
mov
inc
pop
or
stos
fstp
inc
shl
in
outs
je
jno
jge
add
and
int3
in
std
outs
call
scas
mov
sbb
lods
mov
jmp
(bad)
call
loopne
push
dec
ins
adc
dec
and
add
cmp
push
test
xor
cli
sbb
(bad)
pop
xchg
and
(bad)
(bad)
jmp
loopne
ret
xor
(bad)
cs
jae
sub
adc
sub
dec
aad
(bad)
(bad)
jmp
adc
ror
push
imul
dec
sbb
pop
and
das
fidiv
(bad)
(bad)
(bad)
dec
loope
pop
mov
push
xchg
ds
push
mov
push
out
out
mov
fstp
mov
(bad)
sub
(bad)
(bad)
jg
cmp
jmp
mov
int
adc
pop
adc
ror
mov
mov
(bad)
(bad)
push
ja
dec
out
xchg
out
iret
mov
pop
sub
push
inc
gs
mov
pop
test
push
loopne
movs
dec
stos
fldcw
jg
jae
lods
dec
aad
call
add
jno
sub
or
int
(bad)
(bad)
(bad)
inc
and
push
mov
je
fiadd
std
jno
mov
ds
xchg
addr16
rcr
fcomip
sbb
xor
fs
push
movs
xlat
add
inc
(bad)
(bad)
inc
pusha
ja
imul
mov
xchg
es
popa
fldcw
xchg
(bad)
(bad)
jmp
mov
pop
ja
ins
ins
dec
ss
nop
inc
scas
pop
xor
sbb
jo
dec
icebp
adc
retf
aam
(bad)
(bad)
dec
test
jle
fwait
sub
ins
loopne
adc
jmp
into
dec
call
xchg
(bad)
(bad)
in
jmp
daa
or
or
into
push
cmps
je
in
adc
out
adc
nop
int
iret
dec
or
lds
push
imul
hlt
push
data16
sbb
dec
fbstp
push
pusha
fistp
dec
sub
repz
stos
mov
mov
xchg
push
aam
je
pop
(bad)
(bad)
(bad)
(bad)
fstp
lahf
or
cmps
inc
push
enter
xor
mov
loope
sbb
call
(bad)
fmul
xchg
or
sbb
adc
sub
(bad)
dec
mov
and
mov
fld
cwde
mov
stos
pop
mov
dec
inc
dec
push
aam
inc
les
sbb
and
sti
sbb
sbb
lods
or
inc
mov
cs
stc
xchg
inc
push
in
sub
push
mov
inc
arpl
nop
dec
inc
out
push
and
sbb
arpl
ret
jae
repz
movs
push
scas
cli
aaa
std
mov
jp
pop
dec
xchg
xchg
mov
ss
(bad)
(bad)
(bad)
jmp
sub
and
and
(bad)
cli
(bad)
push
bound
jno
outs
cli
jmp
mov
addr16
sbb
and
fbstp
(bad)
call
(bad)
jl
test
jnp
(bad)
jl
jg
in
hlt
jg
pop
fsubr
(bad)
(bad)
(bad)
sti
dec
int3
jle
std
add
ds
ins
or
jmp
mov
jg
idiv
push
jmp
jmp
jg
in
xor
xchg
in
shl
push
xor
outs
adc
jle
ficomp
fcmovnu
es
js
xor
push
mov
pop
into
and
(bad)
jmp
xor
pop
cwde
add
call
xor
leave
cli
std
jg
(bad)
(bad)
(bad)
(bad)
cmp
xchg
ds
cmc
hlt
jbe
mov
aad
xchg
cmp
mov
leave
mul
hlt
scas
inc
icebp
push
je
(bad)
call
(bad)
iret
adc
adc
leave
idiv
jg
jmp
loopne
push
push
sti
imul
lahf
jns
cld
cmp
cwde
jb
(bad)
cmp
(bad)
(bad)
ficomp
mov
std
loopne
mov
outs
xor
xor
mov
icebp
(bad)
(bad)
(bad)
inc
push
shl
aad
pop
sbb
push
xchg
sub
mov
inc
adc
das
cmp
clc
(bad)
call
lds
repz
inc
mov
xlat
add
out
pop
in
(bad)
(bad)
(bad)
push
sbb
test
(bad)
or
stos
and
lods
sbb
sub
mov
call
xlat
pop
mov
xchg
add
(bad)
(bad)
(bad)
inc
fiadd
mov
jae
int
adc
xchg
(bad)
lods
pop
xchg
ja
sbb
add
sbb
aaa
cld
jmp
dec
repz
adc
mov
mov
fs
(bad)
jg
dec
pop
lock
xchg
cli
pop
mov
and
enter
jp
jo
in
and
(bad)
mov
mov
in
sub
not
mov
jle
xor
push
sbb
call
add
in
mov
ror
stc
dec
inc
mov
jnp
(bad)
push
out
jbe
mov
call
cmp
add
xchg
int3
jg
out
dec
je
cmp
sbb
jl
js
in
pop
(bad)
call
push
jno
mov
mov
push
jae
int3
add
mov
sub
add
(bad)
jmp
xchg
xchg
sub
and
xchg
mov
call
cmps
inc
int3
cmc
loop
js
sbb
aad
add
rcl
(bad)
(bad)
jmp
dec
in
and
mov
mov
dec
lods
push
jns
inc
jae
mov
push
arpl
into
sbb
(bad)
(bad)
call
jecxz
sub
ins
xor
sub
stos
add
cmp
push
xor
inc
pop
mov
repnz
(bad)
(bad)
(bad)
out
mov
fild
mov
ror
fnsave
cmp
pop
push
adc
(bad)
(bad)
inc
dec
daa
pop
scas
pop
imul
dec
mov
push
loope
fcomp
xor
(bad)
push
sar
mov
xlat
ds
rcr
lods
les
movs
retf
ret
out
push
sti
movs
in
aaa
xor
lock
(bad)
push
ror
xor
(bad)
dec
sbb
(bad)
pop
xor
push
(bad)
in
cli
add
shl
jmp
dec
push
imul
pop
icebp
adc
int
inc
push
call
fwait
js
cmp
xlat
inc
cmps
pop
lds
mov
cli
mov
inc
xchg
jmp
mov
test
jo
or
mov
sub
mov
(bad)
(bad)
call
adc
push
mov
pop
inc
jmp
lahf
fwait
jo
xor
sbb
jp
in
(bad)
mov
shl
and
lahf
mov
inc
scas
adc
call
aam
fwait
stos
sub
rcr
outs
push
ror
shr
jns
out
cmps
sub
pop
push
rcl
(bad)
(bad)
(bad)
call
push
movs
jno
loope
sub
jne
imul
dec
(bad)
mov
stos
mov
inc
fsubr
test
mov
sbb
scas
sbb
daa
mov
push
fisubr
fild
lods
dec
mov
mov
sbb
or
sbb
outs
inc
cmp
ror
int
sub
call
cmp
push
(bad)
mov
jno
fs
scas
pop
xchg
xchg
sahf
data16
stos
mov
into
sub
xchg
pushf
fisttp
pop
iret
out
mov
popa
jg
xor
mov
pop
ins
(bad)
sar
(bad)
jmp
lds
shl
mov
mov
xchg
sbb
jge
inc
out
xchg
(bad)
(bad)
(bad)
jmp
pop
daa
arpl
push
or
xlat
add
ins
mov
adc
and
sub
(bad)
push
jmp
ja
or
stos
pushf
lahf
pop
jp
sar
pusha
xor
int3
(bad)
dec
je
pop
ins
test
jle
pop
das
push
and
jg
(bad)
jmp
lock
jmp
push
imul
(bad)
(bad)
(bad)
js
ss
and
inc
xchg
push
fld
mov
mov
mov
xlat
push
adc
mov
(bad)
(bad)
(bad)
(bad)
mov
dec
iret
sbb
push
xchg
cmp
mov
fstp
outs
jg
sbb
leave
cmp
(bad)
push
jo
leave
sbb
jge
mov
jbe
(bad)
fcom
loop
or
rcr
repnz
mov
movs
mov
cdq
icebp
pushf
pop
(bad)
(bad)
fild
sahf
jg
push
in
out
mov
add
push
hlt
hlt
jne
dec
test
(bad)
(bad)
call
test
mov
fs
ins
jno
shr
call
cld
mov
xor
mov
test
mov
or
jmp
mov
xchg
outs
cmp
xchg
fisttp
push
(bad)
mov
sub
arpl
cld
(bad)
(bad)
(bad)
or
scas
or
push
mov
ins
xchg
mov
mov
(bad)
xchg
mov
(bad)
jecxz
or
ds
outs
or
jmp
(bad)
(bad)
(bad)
(bad)
aas
xor
xchg
call
xor
xor
pop
cwde
jg
mov
push
or
adc
sub
icebp
cdq
aad
(bad)
in
(bad)
(bad)
(bad)
call
ret
aad
sbb
add
pop
and
or
adc
jmp
push
popa
js
jle
xchg
mov
fadd
inc
outs
repz
and
push
jmp
int
fcomip
call
fimul
enter
retf
imul
push
mov
retf
cmp
(bad)
(bad)
push
fcmovnb
and
adc
ins
mov
(bad)
daa
xor
mov
(bad)
(bad)
(bad)
pop
mov
pop
sub
mov
ss
ss
jno
dec
or
push
cmp
(bad)
dec
dec
mov
mov
in
in
mov
push
(bad)
sub
test
lock
push
shl
call
cmp
out
cli
push
imul
adc
lahf
inc
sar
adc
jmp
jge
xchg
or
(bad)
outs
mov
hlt
pusha
fidiv
(bad)
(bad)
(bad)
dec
int
into
pop
ja
data16
pushf
lock
cmp
push
bound
sti
fs
or
imul
out
mov
popa
mov
retf
das
mov
adc
jle
or
ficomp
jo
ret
sahf
cmp
jecxz
sbb
xchg
jnp
xchg
sub
lahf
push
out
in
cmps
adc
ret
dec
jb
enter
sub
in
ret
cmp
call
(bad)
scas
clc
xor
xor
test
or
je
nop
mov
push
(bad)
(bad)
(bad)
jg
dec
loop
ja
popa
mov
xor
dec
adc
xor
(bad)
xchg
adc
xchg
(bad)
(bad)
(bad)
inc
mov
imul
lock
in
adc
sbb
sti
jno
hlt
popf
bound
push
popa
add
mov
out
fdivr
cmp
push
jg
in
stc
and
sahf
clc
(bad)
(bad)
push
cmp
into
(bad)
aas
or
or
shl
jno
push
mov
xor
imul
(bad)
(bad)
jmp
xchg
adc
dec
or
imul
cmp
das
xchg
mov
(bad)
call
imul
or
ret
call
jmp
dec
mov
xchg
aam
call
fdivr
ins
adc
add
stos
scas
pop
ficom
inc
jb
pop
repnz
stos
xor
mov
lods
mov
adc
rcr
jbe
pop
jecxz
(bad)
mov
mov
xchg
je
(bad)
call
adc
fst
punpckhwd
ins
sti
sub
xchg
xchg
xor
shl
xor
sti
(bad)
mov
and
dec
jnp
outs
xor
je
(bad)
xchg
cs
popf
jmp
(bad)
(bad)
cmp
adc
xchg
and
ja
ror
xchg
xor
(bad)
(bad)
fbld
(bad)
sub
and
aad
fldl2t
ja
push
fbstp
(bad)
(bad)
dec
push
mov
push
jb
mov
push
and
dec
aas
jns
jns
stc
jo
ret
sub
mov
mov
ret
nop
mov
(bad)
push
inc
shl
mov
bound
scas
out
pop
out
fisttp
jmp
and
pushf
or
inc
pop
add
das
outs
sub
ds
ins
mov
iret
(bad)
mov
xchg
addr16
mov
pusha
aaa
add
(bad)
(bad)
jmp
sar
adc
mov
call
mov
ffree
mov
stc
sar
push
dec
call
push
jb
popf
inc
repz
rol
out
jmp
(bad)
(bad)
jns
lods
lds
jne
mov
adc
int
or
jo
xchg
(bad)
(bad)
(bad)
cmp
aaa
pop
fucomp
push
pop
push
jnp
jl
push
and
ds
cmc
push
call
(bad)
dec
sar
mov
js
out
(bad)
cli
scas
jle
enter
loope
push
(bad)
(bad)
mov
pop
test
test
push
aam
mov
in
mov
hlt
and
pop
push
mov
pop
xchg
adc
shl
lods
jp
cmp
jge
xchg
(bad)
jmp
sar
aad
xchg
retf
cmp
cdq
arpl
dec
or
dec
aas
retf
bound
dec
ret
adc
push
or
(bad)
(bad)
jmp
rcl
in
(bad)
lock
jl
jnp
mov
cdq
and
loopne
ret
icebp
(bad)
mov
call
adc
pop
outs
adc
sbb
enter
jb
mov
jae
jns
(bad)
(bad)
(bad)
inc
clc
inc
jb
pop
inc
call
aas
dec
(bad)
mov
adc
(bad)
out
into
jg
imul
clc
(bad)
(bad)
jmp
cmp
pop
add
arpl
dec
push
cmp
inc
or
idiv
stos
(bad)
scas
pop
pop
mov
aam
pop
adc
push
jmp
(bad)
fs
jbe
(bad)
jg
dec
jbe
cli
push
jmp
imul
stc
pop
daa
shr
and
(bad)
(bad)
(bad)
mov
mov
xchg
inc
call
mov
lods
fsubr
repnz
in
cld
and
push
dec
arpl
xor
add
and
push
push
popf
test
mov
jle
mov
jb
psraw
stc
mov
dec
arpl
lods
daa
inc
dec
jae
popf
outs
pop
sbb
fucomi
inc
inc
push
pop
jo
retf
(bad)
push
mov
out
xchg
fidiv
aaa
sbb
repz
jnp
push
jbe
sub
sub
aam
in
jmp
(bad)
fisttp
adc
sbb
sub
jle
jbe
xor
push
pop
neg
(bad)
(bad)
jmp
pop
sbb
fldenv
cli
push
push
outs
icebp
dec
sbb
and
loope
sub
(bad)
push
adc
retf
shr
push
xor
in
jno
(bad)
mov
imul
out
(bad)
jecxz
push
(bad)
nop
sub
frstpm(287
lock
xchg
or
hlt
(bad)
jg
cmps
mov
mov
add
mov
cli
jbe
(bad)
scas
dec
cdq
enter
push
(bad)
psubsw
and
ror
es
pop
sbb
mov
in
lods
push
call
cld
cmps
push
sbb
pop
xchg
out
mov
jb
inc
push
mov
in
fbstp
js
lods
add
(bad)
jmp
rcr
push
pusha
aad
jo
aam
gs
dec
(bad)
call
mov
dec
shr
test
cmp
sub
mov
xor
es
cmp
addr16
mov
adc
push
jb
mov
push
stc
inc
scas
jg
dec
imul
stc
dec
popa
mov
adc
stc
cmp
fisub
test
repz
scas
call
lahf
dec
dec
pusha
fmul
or
int3
jbe
cmp
std
(bad)
(bad)
jmp
inc
aad
mov
repz
push
jae
jge
mov
and
aam
mov
in
aaa
std
mov
mov
dec
adc
xor
push
inc
mov
or
fisub
adc
scas
iret
movs
imul
push
jb
pmaxub
test
(bad)
dec
std
mov
test
or
call
pop
sbb
(bad)
(bad)
call
push
jns
xlat
nop
add
out
dec
xchg
cmp
stos
(bad)
scas
xor
daa
xchg
fistp
pop
popf
jmp
mov
jb
test
std
xor
es
xchg
jg
(bad)
dec
cmp
loopne
shr
(bad)
fs
fdiv
in
out
mov
sub
jbe
(bad)
(bad)
(bad)
fidivr
outs
popf
(bad)
retf
xchg
cdq
repz
stc
jne
pop
adc
cmp
xchg
and
stc
xchg
daa
icebp
and
(bad)
(bad)
call
in
les
ss
pop
pushf
mov
ror
test
xchg
cmp
es
aaa
mov
cdq
jno
jnp
jp
sub
in
mov
enter
push
es
cmps
fsub
(bad)
popa
(bad)
icebp
sbb
(bad)
fcomip
fs
and
inc
ins
fisttp
push
push
xor
add
cld
scas
(bad)
dec
movs
xchg
mov
dec
outs
ins
pop
push
in
fdivr
(bad)
imul
call
cmp
mov
mov
in
pop
(bad)
and
dec
sub
cmp
mov
int3
mov
out
push
(bad)
(bad)
(bad)
(bad)
jg
arpl
arpl
mov
daa
test
sbb
xor
push
icebp
(bad)
(bad)
push
jmp
(bad)
in
outs
push
xchg
out
psubb
sub
jnp
ins
stos
(bad)
(bad)
jmp
mov
shr
jbe
cwde
(bad)
imul
jb
pop
cmps
sahf
(bad)
(bad)
(bad)
(bad)
in
lods
stos
(bad)
bound
adc
stos
int
sbb
addr16
sahf
(bad)
div
stos
ja
xor
push
loope
jae
mov
xor
jle
inc
ja
cdq
ret
add
pop
mov
inc
mov
cmp
lds
jbe
fsubr
dec
mov
push
xlat
pop
dec
xchg
mov
(bad)
(bad)
mov
mov
mov
fidiv
mov
mov
xlat
and
and
(bad)
(bad)
call
pop
mov
aad
imul
stc
xchg
push
push
arpl
sub
mov
clc
or
(bad)
push
jo
pop
and
mov
pop
jmp
jcxz
pop
sub
push
into
arpl
outs
inc
and
pop
push
or
(bad)
(bad)
mov
std
in
cmp
xchg
cmps
fbld
xchg
xchg
xchg
jnp
in
imul
shl
mov
sbb
xchg
iret
lods
imul
loopne
in
pusha
sub
(bad)
(bad)
jmp
mov
nop
pop
or
lods
fdivr
pop
cmp
mov
in
das
(bad)
(bad)
mov
push
(bad)
ds
ficom
cmp
(bad)
jge
and
(bad)
(bad)
call
js
and
push
lahf
movs
jo
jnp
repz
mov
jno
xlat
mov
clc
call
pop
mov
mov
inc
hlt
nop
adc
adc
call
push
ds
gs
jne
cmp
adc
mov
or
lds
rol
aad
add
jae
iret
or
sub
(bad)
(bad)
(bad)
dec
xor
fwait
push
ja
jmp
cmc
sub
test
mov
dec
add
mov
or
xor
cmp
scas
cmps
movs
push
mov
(bad)
(bad)
(bad)
(bad)
cmp
int
iret
shl
push
push
pop
push
push
out
popf
or
mov
mov
jmp
dec
lock
es
mov
adc
(bad)
or
push
sbb
lods
sub
(bad)
(bad)
(bad)
call
cmp
(bad)
fwait
icebp
lds
fdiv
enter
cmps
inc
(bad)
xor
bound
(bad)
(bad)
(bad)
call
mov
jae
xor
hlt
jmp
stos
popf
in
aam
jmp
lods
cld
pop
hlt
inc
test
mov
fcom
and
rcr
add
fwait
cs
mov
sub
pop
cs
jmp
(bad)
xor
or
cmps
xchg
cs
dec
adc
jb
mov
enter
mov
(bad)
in
xor
push
pop
sar
retf
push
inc
arpl
(bad)
(bad)
(bad)
jmp
cs
adc
xor
sar
cmp
and
xor
xchg
pop
hlt
pop
dec
add
mov
mov
(bad)
call
loopne
inc
cmps
xchg
xlat
das
sub
dec
adc
data16
xor
(bad)
(bad)
call
in
mov
mov
cmp
add
stos
je
(bad)
movs
inc
and
mov
cs
dec
imul
test
inc
lds
mov
jmp
dec
fs
push
dec
add
out
es
inc
sub
sbb
(bad)
(bad)
cmp
and
shl
jns
call
leave
push
in
xchg
pop
sbb
mov
(bad)
(bad)
(bad)
mov
push
pop
mov
int3
mov
sub
scas
inc
adc
adc
dec
lahf
jg
dec
mov
cmps
(bad)
(bad)
(bad)
call
sub
imul
cli
jnp
out
call
scas
(bad)
jecxz
lods
jne
(bad)
(bad)
(bad)
dec
fsub
sbb
push
cmp
je
jo
or
dec
popa
jbe
jl
cmp
push
cld
cmp
dec
sub
outs
(bad)
scas
mov
jne
cmp
inc
lds
int
shl
fucomi
(bad)
(bad)
dec
jecxz
clc
mov
mov
pop
pop
sub
mov
xchg
and
and
ja
mov
retf
enter
movs
push
mov
sti
sbb
outs
cmp
(bad)
call
std
xor
sbb
xor
sub
and
jns
pop
rol
pop
cmps
(bad)
(bad)
(bad)
(bad)
out
cdq
mov
lods
in
pushf
jae
fdivr
repnz
out
jmp
stc
test
adc
out
cli
(bad)
jp
xchg
sub
imul
jae
sbb
xchg
jb
xor
and
imul
clc
(bad)
jmp
(bad)
jge
mov
mov
mov
xor
clc
(bad)
push
imul
or
pop
shr
ins
les
inc
mov
enter
outs
jmp
call
jg
movs
setbe
fnsave
and
push
std
inc
fcomp
mov
cmp
lahf
mov
fist
jmp
push
addr16
and
repz
mov
js
xchg
dec
imul
(bad)
(bad)
(bad)
fist
mov
xor
into
sbb
mov
jecxz
mov
add
cld
xlat
sbb
mov
mov
and
(bad)
jg
pusha
cmp
mov
je
jg
scas
cwde
shl
jmp
rcl
aaa
sahf
loopne
ret
stos
xor
(bad)
add
ds
adc
(bad)
fbstp
pop
rcl
movs
push
jae
xor
dec
or
arpl
cmp
mov
int
xchg
xchg
repz
out
xor
inc
(bad)
mov
mov
push
fs
cdq
or
or
icebp
call
lock
vcvtdq2ps
or
cs
cmps
arpl
into
ficomp
test
push
and
(bad)
(bad)
(bad)
cmp
out
jnp
(bad)
test
jnp
es
or
rcr
pop
pop
sub
and
std
pop
hlt
sub
pop
fimul
jb
cdq
mov
pop
int3
fisttp
inc
ret
(bad)
push
mov
lods
mov
pop
and
cmp
scas
cmps
(bad)
(bad)
(bad)
jmp
ins
mov
test
int
cdq
adc
movs
fstp
xchg
jns
clc
dec
(bad)
jmp
(bad)
(bad)
stos
iret
and
in
(bad)
jle
add
repnz
jmp
mov
xchg
out
sub
sub
in
or
push
ins
adc
mov
sar
or
cmps
rcr
out
mov
jg
dec
test
scas
in
gs
ins
xor
xchg
and
(bad)
call
fnstsw
dec
sub
lea
aam
dec
not
(bad)
pop
add
mov
add
les
into
dec
retf
(bad)
popf
adc
pop
loopne
imul
sub
xlat
(bad)
(bad)
dec
les
je
data16
push
in
jno
sub
or
and
mov
sub
in
cmp
mov
into
out
lods
mov
cmp
(bad)
(bad)
(bad)
dec
lds
cmp
fsubr
pop
mov
sub
fidivr
out
pop
sar
(bad)
(bad)
(bad)
jnp
movs
data16
in
lea
retf
add
jp
mov
shr
or
call
loopne
stos
mov
pop
pop
ficom
pop
test
(bad)
(bad)
(bad)
push
stc
mov
sub
pop
icebp
dec
and
jg
dec
dec
lods
xchg
out
ins
dec
xor
enter
push
jg
stos
jbe
xor
shr
mov
out
and
jge
jmp
lock
ins
shl
xchg
fidiv
stc
push
adc
cmp
hlt
(bad)
(bad)
(bad)
(bad)
jmp
(bad)
les
and
movs
jne
fisubr
retf
cmp
mov
sub
(bad)
dec
sbb
dec
xchg
repnz
leave
shr
push
(bad)
mov
ret
push
(bad)
(bad)
(bad)
dec
pop
sub
shl
scas
push
dec
xchg
repz
outs
cmp
(bad)
(bad)
mov
js
(bad)
std
jae
(bad)
(bad)
(bad)
call
in
pusha
loop
pop
push
xchg
dec
in
add
inc
sbb
int
(bad)
fisttp
mov
(bad)
mov
cmp
call
movs
pop
jb
cmc
loopne
retf
sbb
sub
(bad)
aad
mov
jp
dec
cmp
push
movs
mov
loope
dec
pop
imul
(bad)
(bad)
jg
stos
dec
sti
mov
jno
retf
push
dec
leave
mov
mov
aad
or
xchg
xor
(bad)
push
dec
add
data16
sbb
ret
jae
test
movs
shl
repnz
(bad)
(bad)
(bad)
push
(bad)
push
push
jl
or
mov
(bad)
xchg
inc
mov
je
and
(bad)
push
imul
add
imul
or
adc
cmp
(bad)
mov
sub
std
push
ret
inc
(bad)
div
sar
rcr
mov
xchg
sahf
hlt
dec
rcl
cmp
js
out
mov
cdq
(bad)
(bad)
dec
cmp
xor
nop
xchg
sub
adc
repnz
das
adc
and
(bad)
(bad)
call
mov
mov
inc
push
bound
pop
mov
nop
pop
cdq
stos
jmp
pop
inc
outs
(bad)
(bad)
push
jecxz
push
xchg
cmp
lods
fisub
mov
ds
adc
and
(bad)
mov
add
(bad)
xchg
in
jae
test
lds
xor
push
adc
pusha
cld
stos
pop
mov
jne
sbb
adc
popf
(bad)
jge
(bad)
jmp
or
add
ins
and
pop
cmc
in
push
xchg
out
jnp
xchg
dec
inc
or
dec
xchg
inc
pop
pushf
fsub
push
sbb
aas
sbb
sub
js
dec
push
mov
mov
push
ins
stos
xchg
js
lock
pop
nop
fwait
mov
push
ja
and
lods
xchg
jecxz
jp
fsubr
fbstp
adc
(bad)
(bad)
inc
test
pusha
sub
ds
or
mov
xchg
sahf
inc
call
(bad)
(bad)
dec
(bad)
es
ins
pop
retf
push
ja
push
hlt
push
mov
fisub
push
or
repnz
jb
pop
std
stos
call
jecxz
jbe
pop
xor
jmp
sbb
jmp
mov
and
cmp
popa
pop
push
and
ins
add
jmp
push
std
mov
xor
aam
or
ds
sub
pop
cmp
inc
icebp
sub
add
dec
ret
sub
cld
(bad)
(bad)
(bad)
jl
sbb
mov
xchg
xchg
(bad)
sbb
shr
sbb
std
call
jo
std
pop
std
push
js
outs
lea
idiv
call
repnz
(bad)
(bad)
call
add
adc
jnp
rcl
dec
loope
adc
mov
xchg
jo
(bad)
push
mov
(bad)
(bad)
fadd
xchg
pop
cmp
push
cmps
retf
xor
imul
cmps
int3
out
sub
sbb
sar
inc
ss
jae
push
aas
dec
mov
cmp
mov
mov
(bad)
(bad)
(bad)
dec
pop
mov
sbb
pmaxsw
inc
retf
jge
dec
adc
(bad)
mov
sub
loopne
cmp
and
cli
aam
push
mov
pop
retf
bound
(bad)
jmp
push
pop
sub
xchg
rol
jmp
std
call
test
push
lea
mov
imul
inc
sbb
push
push
push
add
dec
call
out
test
fmul
pop
pop
test
sti
xchg
aam
test
(bad)
jb
mov
call
mov
push
inc
jle
cmp
push
retf
sub
(bad)
(bad)
jg
cdq
pop
pop
scas
inc
fiadd
sub
pop
repz
xchg
sub
mov
push
sub
sub
jg
mov
pop
int
aaa
mov
mov
lea
and
add
data16
fisub
adc
imul
pop
xchg
pop
lahf
sar
jg
neg
ins
std
loope
lds
add
xor
push
mov
xchg
aam
nop
and
ja
dec
add
sar
xor
in
jl
push
xor
mov
out
(bad)
(bad)
push
scas
test
add
inc
xchg
mov
and
xchg
in
(bad)
(bad)
jmp
xchg
add
imul
jge
push
push
mov
call
fdiv
lods
pop
xchg
(bad)
(bad)
(bad)
jmp
jecxz
jbe
and
adc
repnz
pop
adc
fmul
jl
sbb
push
add
fwait
inc
push
pop
mov
xchg
jp
jno
sbb
aam
cmps
jmp
int
enter
dec
scas
(bad)
outs
jmp
adc
imul
jo
ins
push
movs
or
rol
sub
and
(bad)
(bad)
(bad)
dec
rol
fdivr
jmp
dec
xor
mov
pop
jns
rcl
sub
lds
(bad)
(bad)
jmp
add
jns
pop
enter
rcl
mov
adc
sbb
mov
lahf
inc
popf
sub
retf
and
repnz
ja
mov
icebp
(bad)
(bad)
(bad)
inc
xor
(bad)
icebp
push
inc
jne
and
lea
jb
inc
jb
pop
ds
cld
(bad)
(bad)
jmp
mov
pop
jge
sbb
(bad)
mov
inc
pop
dec
fst
push
and
push
xor
ins
xchg
xchg
dec
in
(bad)
mov
mov
addr16
mov
push
inc
imul
jb
das
fimul
jg
or
ret
cmps
out
mov
xor
dec
mov
jbe
sub
ss
jmp
lods
std
fild
and
jnp
addr16
lods
push
cmps
out
sbb
(bad)
(bad)
(bad)
(bad)
call
ja
dec
sbb
pop
out
xchg
inc
dec
jle
push
call
(bad)
or
movs
hlt
aaa
add
in
fisttp
pop
and
xchg
rol
test
cli
push
pop
jg
arpl
sub
mov
sub
psubd
jp
lock
mov
in
clc
cli
mov
mov
xor
pop
js
mov
mov
xchg
push
mov
ins
sbb
call
lock
ud0
(bad)
call
imul
sti
repz
test
add
clc
cmps
outs
push
js
shr
(bad)
(bad)
dec
dec
int
out
add
ja
int
shl
rcr
xor
pop
mov
(bad)
(bad)
call
inc
add
mov
cli
jne
lahf
out
inc
mov
add
lods
(bad)
out
cmp
retf
jne
clc
or
xchg
jne
push
jo
jmp
sub
or
(bad)
jmp
(bad)
jmp
loop
or
push
dec
data16
bound
add
dec
xor
cmp
(bad)
call
cmc
loope
xor
jo
push
sbb
cs
mov
das
je
sub
(bad)
jg
add
jno
jle
in
sti
stos
mov
jnp
add
(bad)
inc
aad
lods
gs
bound
and
or
iret
out
(bad)
(bad)
inc
pop
icebp
cmc
scas
ds
pop
out
mov
xchg
in
scas
retf
cmp
mov
(bad)
call
inc
rol
fwait
mov
shr
add
outs
jb
mov
mov
ror
sbb
fcmovnb
mov
popf
cmp
xchg
pop
inc
jb
jmp
fs
xchg
adc
xor
jmp
(bad)
(bad)
push
ja
sub
into
inc
pusha
sahf
mov
mov
data16
push
push
fidivr
mov
(bad)
xlat
outs
xor
pop
std
sub
(bad)
jg
mov
retf
out
mov
addr16
xchg
fcom
ficomp
add
ficom
inc
scas
(bad)
cmc
out
in
pop
mov
js
movs
cwde
(bad)
(bad)
(bad)
(bad)
cmp
sahf
jecxz
sub
mov
push
add
push
ror
ja
call
sub
stos
sbb
stos
pop
fsub
sub
loope
push
sbb
jl
jl
pushf
or
xchg
cmp
(bad)
jmp
data16
cmp
mov
sti
lds
push
add
mov
pop
test
or
push
call
pop
(bad)
(bad)
(bad)
jmp
(bad)
lods
pop
mov
repz
cmp
cmc
cmps
fucomi
mov
es
(bad)
cmc
(bad)
std
std
aas
(bad)
jmp
pop
movs
adc
fiadd
push
mov
and
ins
cmps
mov
mov
jnp
mov
xchg
jmp
in
push
pop
ret
cmp
cmps
(bad)
call
cmp
jp
push
rol
je
jns
inc
in
ror
push
not
add
add
pop
loopne
jmp
aas
aas
or
fucom
and
sbb
mov
xor
and
addr16
idiv
movs
xchg
pop
repz
test
rol
jge
(bad)
(bad)
(bad)
cmp
cmps
not
outs
mov
push
add
cmps
ja
mov
sbb
mov
(bad)
(bad)
(bad)
mov
(bad)
stos
inc
es
mov
inc
adc
popf
leave
jmp
inc
(bad)
jg
div
jmp
add
test
in
ds
and
push
jg
out
(bad)
(bad)
(bad)
call
arpl
push
fscale
in
push
jmp
ja
adc
je
cmp
cld
push
test
push
sbb
out
aas
(bad)
(bad)
(bad)
call
in
cmps
inc
loop
xor
lea
jns
cli
aam
stc
dec
retf
xor
dec
(bad)
ins
sti
retf
cmp
data16
sub
add
aad
(bad)
(bad)
jmp
pop
jbe
lea
cli
leave
fnstsw
fcom
retf
mov
inc
iret
mov
in
xlat
aas
popf
(bad)
(bad)
(bad)
call
xor
fs
out
es
push
sahf
pop
fisubr
(bad)
lds
xchg
jns
jle
sub
jmp
aas
adc
(bad)
fld
sbb
ret
aaa
jae
mov
call
rcr
sub
call
js
outs
pop
outs
pushf
ror
push
fist
lock
xor
repz
(bad)
(bad)
mov
adc
jmp
mov
ins
shr
das
cmp
int
in
xor
sbb
das
mov
xchg
stos
scas
(bad)
je
je
cmp
fcomp
push
xor
fs
(bad)
lock
xchg
sti
mov
xor
push
cmc
movups
lods
mov
xchg
lock
call
push
bound
jl
mov
jns
fwait
xchg
sub
outs
xchg
adc
fs
jge
jmp
std
(bad)
out
sub
mov
sbb
inc
sub
inc
inc
mov
xlat
adc
(bad)
loope
and
inc
lock
std
sub
pop
(bad)
(bad)
(bad)
mov
adc
repz
add
sbb
call
imul
(bad)
(bad)
(bad)
(bad)
cmp
int3
lea
or
mov
pop
pop
and
sub
jne
xchg
retf
cmp
(bad)
(bad)
(bad)
inc
add
lahf
xor
dec
xor
sbb
jge
pop
and
dec
xchg
cmc
aas
jnp
test
adc
dec
sub
xor
jp
add
inc
push
cld
push
out
push
cmc
retf
and
add
push
int
inc
push
call
mov
xchg
mov
setnp
fs
outs
and
(bad)
pop
jp
push
out
imul
lahf
pop
aad
dec
das
dec
mov
add
add
add
scas
movs
pop
lock
sbb
popf
mov
(bad)
(bad)
(bad)
(bad)
ficom
not
mov
xchg
or
daa
adc
clc
scas
push
lock
mov
imul
(bad)
call
retf
and
push
jae
mov
xchg
cmp
mov
(bad)
(bad)
(bad)
(bad)
fidiv
js
dec
sub
int3
out
cmp
test
cli
and
ret
scas
test
ins
cmp
sub
dec
sub
push
sar
push
push
aam
out
pop
loope
pop
sub
les
je
mov
and
(bad)
(bad)
cmp
dec
lods
pop
cmp
gs
sbb
adc
sbb
xchg
in
out
ss
je
rcr
inc
and
cmp
mov
fbld
pmaxsw
jae
inc
loop
(bad)
(bad)
call
inc
jno
jae
retf
mov
mov
inc
sub
sub
sar
mov
xor
cmp
ror
stc
scas
pop
icebp
test
neg
neg
jbe
test
push
cs
inc
stc
enter
or
in
data16
(bad)
(bad)
inc
lods
adc
jl
push
mov
in
inc
sbb
rcr
imul
xchg
mov
(bad)
(bad)
jmp
pop
cwde
mov
(bad)
loope
(bad)
imul
xor
retf
xchg
aam
fld
cli
lods
retf
lahf
sahf
xor
cmps
xor
jno
dec
paddd
cmp
in
pop
ss
sub
in
adc
push
(bad)
sti
mov
mov
(bad)
(bad)
(bad)
call
addr16
pop
mov
popa
neg
(bad)
mov
out
loope
xchg
push
push
mov
daa
mov
rol
add
xor
gs
jb
cmp
mov
cmp
or
out
xchg
jge
stos
(bad)
(bad)
mov
xor
inc
push
std
sti
add
xor
das
in
pop
retf
mov
(bad)
(bad)
(bad)
dec
cmc
(bad)
pop
(bad)
(bad)
mov
mov
mov
cmp
int
push
jns
imul
xor
(bad)
(bad)
mov
mov
popa
mov
jns
inc
jp
or
sub
or
(bad)
(bad)
inc
inc
and
subps
push
mov
and
imul
sub
retf
sahf
aaa
or
cmps
lock
sub
cld
(bad)
push
or
adc
xor
ret
cdq
js
jp
movs
iret
pop
jns
(bad)
(bad)
call
into
sahf
arpl
mov
add
scas
call
test
cli
(bad)
das
rcr
(bad)
mov
outs
(bad)
sub
loope
movs
push
adc
cmp
(bad)
dec
pop
bound
pushf
aam
fimul
or
xor
test
add
(bad)
dec
and
in
stos
repz
out
sbb
jo
int
dec
fdivr
xor
(bad)
(bad)
fisttp
dec
push
icebp
add
mov
data16
popa
cdq
and
sar
dec
(bad)
jb
imul
idiv
int
or
enter
clc
dec
hlt
icebp
(bad)
push
scas
repz
mov
dec
enter
jmp
push
loop
mov
xchg
fimul
(bad)
(bad)
(bad)
dec
push
mov
pop
mov
cmp
xor
push
xchg
xor
fist
xlat
sahf
xchg
in
std
mov
add
inc
mov
xchg
mov
cdq
(bad)
cld
or
(bad)
(bad)
push
bound
imul
scas
aas
(bad)
ror
test
xor
cld
(bad)
jmp
ret
(bad)
ss
jbe
sub
lods
ffreep
inc
imul
xor
pop
lods
shl
jmp
mov
int
sub
pop
stos
out
arpl
(bad)
(bad)
call
ja
stos
mov
shl
outs
and
fst
mov
mov
test
scas
icebp
sub
jmp
aam
out
(bad)
cmc
jmp
hlt
loopne
(bad)
(bad)
jmp
lahf
jmp
movs
js
sub
push
jns
fwait
jg
sar
mov
jno
push
pop
retf
test
push
ret
retf
ja
cwde
out
push
je
add
call
push
inc
sbb
cdq
loop
xor
jl
(bad)
lds
(bad)
(bad)
jmp
addr16
retf
jae
lock
dec
pop
repnz
es
inc
adc
bound
ret
xchg
(bad)
jmp
push
mov
ficom
(bad)
(bad)
(bad)
jmp
out
sahf
repnz
pop
ja
mov
push
pop
push
mov
mov
movs
xchg
jp
das
enter
jmp
mov
pop
in
push
enterw
sti
pop
(bad)
(bad)
jmp
call
mov
xor
or
cmp
push
cmp
push
push
sbb
pushf
pop
xchg
shl
(bad)
(bad)
(bad)
call
sbb
add
push
enter
out
into
xor
int3
(bad)
js
popf
adc
xlat
push
mov
outs
clc
dec
adc
bnd
xor
xchg
test
and
and
ins
in
les
jmp
shr
imul
or
cs
inc
daa
scas
sub
je
clc
(bad)
call
rol
js
(bad)
out
push
imul
or
adc
call
jmp
add
call
xlat
mov
(bad)
(bad)
jmp
mov
fistp
cmp
xor
arpl
add
scas
clc
stos
lahf
xchg
adc
jg
cmp
pop
inc
test
lock
aaa
jg
(bad)
call
call
aam
dec
mov
dec
pop
iret
dec
mov
dec
jo
xchg
or
add
jo
es
mov
pop
sub
sub
fild
(bad)
(bad)
(bad)
dec
pop
clc
xchg
mov
outs
lods
xor
pop
mov
fmulp
fsub
xchg
lea
(bad)
(bad)
(bad)
jmp
mov
jp
xchg
xor
inc
cmp
and
in
(bad)
sbb
lods
xchg
bound
loopne
dec
mov
sub
jmp
loopne
repnz
into
(bad)
(bad)
(bad)
call
dec
jnp
inc
jnp
jle
sti
mov
outs
mov
mov
ds
aaa
or
jg
mov
mov
adc
jns
(bad)
(bad)
(bad)
(bad)
fst
inc
cmp
into
mov
or
pop
cmp
movs
iret
stos
mov
mov
test
(bad)
test
(bad)
jmp
retf
jno
jno
dec
stos
push
jmp
mov
lds
in
pop
fimul
sahf
pop
(bad)
(bad)
call
mov
push
(bad)
int
xchg
inc
fist
sub
mov
(bad)
(bad)
dec
inc
or
fimul
movs
cs
shr
xchg
sub
or
ds
(bad)
(bad)
push
fistp
pop
aam
fs
xchg
cli
outs
mul
pop
push
jmp
ins
mov
(bad)
(bad)
call
int3
fdecstp
and
pop
jmp
mov
add
inc
mov
push
cmp
jmp
ror
stos
xor
fcom
sub
pop
mov
jmp
add
fdivr
(bad)
(bad)
inc
mov
or
iret
jo
sub
(bad)
push
into
fucomip
sub
adc
sbb
(bad)
jmp
jmp
test
xchg
jp
sub
jmp
mov
jecxz
(bad)
(bad)
in
call
shl
fwait
ss
pop
out
xchg
popa
sbb
and
and
mov
cld
repz
mov
push
sbb
idiv
mov
cmp
in
xchg
leave
pop
nop
(bad)
(bad)
(bad)
jmp
sbb
rcr
and
and
je
imul
jnp
imul
jmp
sbb
and
xor
or
(bad)
jno
outs
jno
(bad)
stc
jmp
(bad)
(bad)
call
ins
sub
and
and
sahf
jp
xchg
sub
dec
jnp
dec
mul
fcomp
pop
dec
sti
and
dec
div
ss
and
mov
(bad)
mov
lds
ret
retf
xchg
adc
popa
sahf
sbb
stos
js
push
dec
ja
inc
popa
push
fwait
inc
rcl
in
fcomp
pop
ins
loop
leave
pop
jmp
xchg
add
lds
add
(bad)
(bad)
(bad)
jmp
jo
cs
cmp
xchg
nop
leave
adc
xchg
(bad)
cmps
xchg
pop
(bad)
xchg
and
je
mov
push
pop
cwde
(bad)
(bad)
(bad)
call
and
jbe
or
sub
fwait
pop
repnz
stc
out
mov
xchg
fs
pop
jns
out
in
jmp
jno
data16
jb
test
xor
cmps
and
dec
jno
jp
(bad)
fcom
ins
fs
inc
out
sub
dec
repnz
mov
pushf
sar
(bad)
(bad)
(bad)
jmp
cmc
mov
jae
sub
ror
es
dec
lock
inc
pop
cmp
(bad)
call
icebp
stc
icebp
outs
leave
sbb
call
cmps
mov
inc
push
fidiv
jp
fcmovu
(bad)
(bad)
(bad)
jmp
jge
in
jns
imul
call
mov
test
test
(bad)
dec
mov
fwait
test
or
out
jae
hlt
int
fstp
cwde
es
cmp
mov
shr
repnz
push
fdiv
(bad)
push
push
cmc
sbb
(bad)
out
enter
and
adc
inc
or
inc
stos
jnp
dec
jno
lods
ss
and
and
inc
std
fistp
push
push
sub
(bad)
(bad)
jmp
xchg
hlt
pop
sub
lods
std
mov
dec
(bad)
(bad)
(bad)
push
(bad)
lock
xchg
adc
outs
mov
fcomip
jmp
xor
xchg
or
dec
xor
inc
lock
mov
mov
sub
(bad)
(bad)
cmp
mov
jmp
ret
(bad)
fstp
aaa
and
(bad)
(bad)
jmp
imul
div
xchg
cmp
mov
or
cmps
movs
ja
mov
push
pop
test
push
(bad)
(bad)
jmp
pushf
out
call
lahf
cmc
mov
rcr
add
retf
jmp
retw
push
iret
sub
pop
pop
jbe
mov
and
(bad)
(bad)
(bad)
jmp
imul
mov
or
push
icebp
mov
sub
out
ret
rcr
pushf
(bad)
(bad)
(bad)
(bad)
inc
je
idiv
scas
arpl
js
pop
xchg
clc
sub
cmp
or
xchg
inc
aas
jmp
xchg
test
aaa
cmp
mov
mov
and
mov
aaa
add
sub
(bad)
(bad)
(bad)
mov
xchg
xlat
xor
ins
and
mov
out
(bad)
(bad)
jg
pop
ret
jmp
sub
add
push
add
push
sub
mov
call
(bad)
(bad)
(bad)
(bad)
cli
push
xchg
mov
xchg
or
retf
test
pop
mov
pop
cmp
(bad)
(bad)
(bad)
bound
fcmovnbe
mov
imul
icebp
out
pop
mov
adc
jmp
xor
arpl
movs
aam
into
ss
mov
(bad)
(bad)
cmp
cmps
out
adc
sbb
jns
in
add
pushf
cmp
(bad)
(bad)
mov
dec
enter
mov
jg
mov
(bad)
xchg
fisttp
(bad)
(bad)
(bad)
call
and
and
ret
xchg
sbb
lods
jns
(bad)
fst
addr16
pop
enter
(bad)
jmp
inc
loopne
xor
push
inc
lahf
xchg
jbe
push
mov
scas
adc
hlt
pop
fst
fisub
int3
(bad)
jmp
or
inc
arpl
push
int3
mov
mov
enter
push
sbb
jp
outs
push
and
pop
inc
call
loopne
(bad)
jmp
cmp
mov
clc
jb
xor
add
test
add
sbb
jbe
xlat
xor
aam
(bad)
jmp
iret
jecxz
add
ss
lods
in
add
inc
cld
mov
retf
fdivr
xchg
xchg
fadd
daa
(bad)
xchg
(bad)
(bad)
(bad)
call
shl
sub
call
lahf
loope
sbb
scas
xchg
xor
cmp
(bad)
(bad)
push
cmp
jbe
stos
pop
xchg
(bad)
push
repz
mov
or
inc
sar
jg
not
sub
lahf
dec
int
inc
inc
push
ins
mov
xchg
jmp
clc
mov
nop
mov
pop
fucomip
mov
push
inc
add
push
call
repz
inc
ffree
push
or
les
test
mov
(bad)
call
and
retf
mov
(bad)
(bad)
jmp
xor
cli
jno
rep
sbb
add
(bad)
repz
dec
jmp
push
xchg
(bad)
pop
mov
test
mov
movs
mov
add
(bad)
(bad)
call
sahf
arpl
div
or
dec
pop
xchg
mov
retf
sti
pop
push
(bad)
(bad)
(bad)
jmp
xlat
mov
push
inc
enter
(bad)
jns
xor
bnd
jae
adc
mov
test
popa
mov
icebp
hlt
lods
out
fdivr
es
sbb
or
(bad)
(bad)
(bad)
fisttp
test
mul
sub
pop
jns
shl
or
or
jp
sub
jg
call
into
imul
jl
xor
call
(bad)
fild
sub
sahf
ins
pop
mov
xlat
daa
jl
clc
(bad)
(bad)
(bad)
fnstcw
pop
mov
cdq
xor
xor
jg
pop
cmp
mov
(bad)
(bad)
mov
xlat
imul
popf
adc
xchg
fild
repz
(bad)
(bad)
(bad)
jmp
dec
sti
cdq
dec
test
iret
push
rol
sar
adc
sub
fwait
mov
sub
mov
scas
jge
outs
loope
ins
loope
(bad)
(bad)
(bad)
call
cmovle
mov
push
jmp
mov
sbb
fsubr
pop
mov
mov
aad
(bad)
fcomip
call
out
shl
xchg
aaa
les
dec
sbb
lds
(bad)
(bad)
(bad)
push
push
push
stc
aaa
arpl
dec
dec
and
(bad)
push
loope
jnp
ret
mov
mov
jmp
sar
(bad)
(bad)
call
and
jecxz
push
pop
xchg
mov
pushf
adc
lods
cmp
fcomi
xor
xchg
sbb
dec
sahf
push
outs
xor
(bad)
(bad)
jmp
push
in
xchg
scas
fsubp
je
dec
fnsave
cmps
outs
(bad)
xor
shr
shl
sub
jns
(bad)
(bad)
(bad)
cmp
dec
mov
mov
mov
xor
push
xchg
sbb
mov
sbb
(bad)
call
ins
push
popa
daa
sbb
cmp
sbb
jmp
js
shr
and
fs
(bad)
(bad)
out
in
pop
lds
div
add
jo
mov
cli
das
sar
idiv
js
loope
mov
sbb
pushf
gs
push
and
(bad)
(bad)
jmp
stos
adc
adc
or
mov
ins
push
out
mov
push
ret
jmp
lahf
push
(bad)
sbb
mov
out
int3
xchg
xor
pop
in
ret
ds
pop
push
mov
mov
adc
(bad)
sub
repnz
enter
(bad)
(bad)
(bad)
push
lods
adc
sub
cmps
iret
cmp
scas
fsubrp
std
in
loop
xor
inc
and
mov
(bad)
(bad)
call
ds
outs
adc
loop
or
fs
into
sar
iret
loope
je
pop
xchg
xchg
sahf
push
(bad)
(bad)
(bad)
call
lahf
push
mov
fidivr
movs
sub
cli
imul
icebp
adc
push
dec
ss
call
rol
(bad)
xchg
aaa
call
in
in
sub
ins
push
loop
mov
(bad)
(bad)
dec
aad
fs
dec
mov
mov
jmp
idiv
mov
cmp
mov
jo
adc
(bad)
call
xchg
xchg
addr16
call
repnz
ja
adc
bound
push
pop
sti
(bad)
(bad)
inc
aaa
jnp
ja
mov
jge
pop
xchg
out
dec
or
mov
(bad)
(bad)
fistp
adc
ficomp
mov
sbb
cmp
and
(bad)
jg
outs
pop
jmp
mov
mov
pushf
cmp
cmp
dec
dec
inc
add
(bad)
(bad)
(bad)
jmp
cwde
loop
pop
cmp
lahf
sub
xchg
je
sub
aas
mov
(bad)
(bad)
(bad)
jmp
(bad)
in
in
outs
sbb
lods
fstp
ret
jne
pop
ins
mov
(bad)
(bad)
push
js
and
cmp
mov
sbb
arpl
into
cld
add
adc
or
adc
(bad)
fisub
pop
aam
repnz
fiadd
mov
add
fwait
arpl
fmul
jns
aas
(bad)
(bad)
fild
aad
sub
in
in
mov
aad
shl
sbb
cmp
inc
mov
pop
(bad)
(bad)
(bad)
call
ficomp
fdiv
sahf
jb
pop
ret
mov
out
mov
mov
hlt
adc
sahf
jae
sar
shl
aaa
push
xor
push
mov
pop
inc
jecxz
(bad)
scas
inc
pop
lock
rol
dec
ret
and
pop
lods
(bad)
(bad)
push
adc
sbb
push
cmc
cmp
(bad)
cdq
in
clc
jle
movs
imul
(bad)
inc
fisttp
cmc
stos
sbb
hlt
jmp
dec
xor
shl
lods
push
cmp
(bad)
out
clc
(bad)
clc
(bad)
test
mov
mov
mov
sub
popf
xchg
(bad)
(bad)
(bad)
push
sbb
sbb
inc
mov
cmp
mov
mov
(bad)
(bad)
(bad)
(bad)
(bad)
cli
ror
jns
in
mov
jnp
in
les
push
rcr
mov
lahf
lods
jae
mov
(bad)
(bad)
jmp
xchg
mov
pop
mov
aas
cmp
xchg
jge
bound
jbe
pop
(bad)
(bad)
(bad)
jg
test
dec
in
xor
mov
cmp
and
mov
lock
xchg
stos
(bad)
(bad)
(bad)
call
jne
adc
xlat
scas
dec
repz
bound
int3
cdq
sbb
(bad)
mov
arpl
out
lods
in
(bad)
(bad)
(bad)
dec
add
sbb
push
div
(bad)
pop
pusha
adc
movs
inc
sub
cwde
js
cmp
fmul
std
(bad)
fcomip
stos
ja
adc
jae
mov
xor
leave
pop
or
push
clc
test
call
xchg
jge
data16
imul
imul
gs
gs
(bad)
call
pop
mov
call
ins
fadd
inc
inc
xchg
movs
(bad)
(bad)
(bad)
jmp
lods
int
(bad)
shl
bound
mov
mov
arpl
sbb
scas
aaa
push
call
and
xor
into
cli
cwde
jnp
xor
push
call
pop
call
aas
pop
or
mov
jmp
sub
cmp
(bad)
(bad)
jmp
aas
rep
std
popf
sar
call
cmp
push
(bad)
icebp
push
mov
into
aas
or
hlt
jnp
dec
rcl
es
ror
mov
xlat
cmp
sub
out
cli
jmp
out
xchg
adc
cmc
lods
adc
(bad)
ds
dec
ja
sub
inc
(bad)
(bad)
(bad)
call
add
inc
rol
fwait
retf
outs
stc
repz
scas
les
sbb
inc
mov
pop
cld
aas
pop
mov
ins
add
sar
fist
fcomip
jmp
lods
out
ret
cmp
push
inc
push
mov
inc
shr
sub
(bad)
(bad)
dec
retf
sbb
mov
cs
inc
cmp
pop
js
fidiv
pop
mov
mov
jg
or
cmps
arpl
and
jns
xchg
pop
neg
icebp
cmp
mov
(bad)
es
(bad)
cmc
cwde
(bad)
and
push
push
call
jmp
aas
pop
mov
fsub
push
jl
mov
(bad)
call
mov
adc
cmp
(bad)
mov
hlt
test
mov
cmp
dec
movs
pop
int3
shl
(bad)
push
cld
call
jp
cwde
mov
in
jno
mov
(bad)
adc
das
add
(bad)
(bad)
cmp
outs
stos
inc
cmp
cmp
or
jmp
or
push
popf
sub
ins
jbe
jno
fdiv
test
stos
into
mov
call
das
lods
lods
std
xor
daa
cdq
adc
pop
cmp
mov
xor
(bad)
pop
hlt
push
popf
push
xchg
cdq
out
pop
jl
mov
sbb
mov
mov
xbegin
rol
clc
inc
hlt
inc
fadd
mov
and
inc
add
(bad)
sar
(bad)
(bad)
cmp
push
fmul
add
adc
out
pop
push
pusha
retf
push
lods
dec
arpl
pop
xchg
and
xor
(bad)
(bad)
cmp
push
add
test
or
pop
pop
pop
pop
mov
inc
push
(bad)
(bad)
jmp
stc
push
imul
push
in
retf
ins
lods
(bad)
dec
fldenv
lds
clc
ds
daa
pushf
les
mov
pop
retf
repz
jge
or
jbe
(bad)
(bad)
(bad)
call
lds
fs
sbb
adc
mov
ret
push
xor
mov
call
call
inc
inc
ins
scas
mov
enter
add
sub
inc
adc
push
mov
scas
cli
(bad)
jmp
xchg
hlt
loop
push
imul
icebp
es
mov
sub
repz
mov
cmp
mov
test
outs
aaa
std
and
pop
cld
retf
stos
jmp
xor
call
mov
adc
xor
and
ins
sbb
or
ss
xlat
add
call
psubb
scas
daa
outs
mov
xchg
sub
or
mov
jl
addr16
jmp
test
iret
int3
jg
jecxz
rcr
cmc
outs
or
(bad)
out
mov
iret
xchg
cmps
pop
xor
cwde
aas
xor
mov
(bad)
(bad)
(bad)
(bad)
(bad)
daa
lock
sub
xchg
ficom
xor
out
retf
arpl
pop
mov
fs
and
(bad)
dec
movs
pop
shl
push
cmp
adc
jnp
lea
ins
out
into
cs
sub
jp
out
scas
or
mov
ja
xchg
popf
jno
(bad)
in
mov
mov
inc
repnz
outs
push
std
fsubr
jl
test
pop
je
sub
mov
inc
in
(bad)
(bad)
call
and
imul
mov
pop
cmp
cmp
shr
mov
add
push
inc
inc
(bad)
mov
jae
leave
(bad)
data16
sbb
out
xchg
sub
hlt
(bad)
jmp
xor
repz
push
jne
pop
jle
mov
lds
pop
mov
adc
push
push
mov
push
and
dec
rol
ret
(bad)
(bad)
mov
cmp
add
scas
dec
sahf
ret
add
push
add
loopne
outs
jg
sbb
sbb
and
lods
int
sti
ins
movs
scas
or
sbb
mov
mov
in
std
xor
test
dec
cmp
loopne
cmp
(bad)
(bad)
(bad)
(bad)
sti
bound
jg
loope
enter
(bad)
cmc
sbb
mov
ror
loopne
cmp
push
js
std
or
push
sbb
push
pop
pushf
add
icebp
cmps
inc
jge
(bad)
(bad)
push
cs
xchg
mov
jnp
cdq
test
pop
push
ret
ds
jno
xchg
xlat
ficomp
loope
out
cli
push
daa
push
mov
adc
out
int3
mov
ds
ins
jb
cdq
push
jge
(bad)
jmp
or
sbb
dec
ficom
mov
(bad)
pop
pushf
aad
rcl
outs
sub
mov
(bad)
(bad)
(bad)
call
sbb
nop
shl
cmp
sub
dec
call
je
or
movs
(bad)
jmp
rcl
mov
jo
jle
dec
data16
sub
mov
(bad)
(bad)
jmp
push
xor
adc
mov
mov
mov
(bad)
jmp
call
iret
sub
sub
cvtps2pd
aad
out
movs
scas
and
ss
(bad)
(bad)
dec
cmps
sub
jns
lahf
into
mov
push
pop
push
jae
rcl
pop
mov
(bad)
cmc
push
sub
int
ficom
mov
retf
out
push
(bad)
retf
or
fwait
jecxz
mov
jae
inc
mov
repz
cmc
scas
dec
rcr
clc
mov
adc
in
cld
out
mov
and
push
lods
mov
dec
xchg
add
rol
jno
inc
ins
aaa
mov
rol
jecxz
xchg
xor
mov
and
sbb
dec
out
dec
inc
enter
(bad)
mov
pushf
ret
mov
xchg
mov
mov
push
div
in
es
(bad)
jmp
dec
push
pop
sbb
cmps
push
jne
mov
mov
jo
push
retf
fs
(bad)
(bad)
(bad)
fstp
push
fwait
xchg
std
jmp
in
pop
mov
outs
in
(bad)
(bad)
(bad)
(bad)
mov
push
cmp
cmp
sub
sub
inc
xor
outs
or
mov
test
jmp
pusha
clc
push
xlat
pop
xchg
mov
xchg
jecxz
jb
div
jmp
out
dec
iret
dec
fldenv
retf
mov
pushf
jne
call
fsubr
adc
push
pop
les
dec
mov
pop
push
pop
test
shr
rcr
(bad)
pop
fs
pop
dec
xor
cmp
pop
in
ret
pop
sub
pop
cmc
mul
sub
int
aas
mov
or
enter
cmps
dec
push
mov
mov
jle
adc
fwait
sbb
lahf
test
xor
and
(bad)
(bad)
(bad)
fild
inc
movs
mov
sbb
mov
mov
mov
sbb
jmp
add
iret
push
jp
mov
(bad)
dec
scas
mov
arpl
mov
cld
ret
out
call
jae
sbb
pop
cld
call
addr16
movs
lds
add
pop
or
cmp
(bad)
(bad)
inc
enter
lods
fs
push
imul
pop
dec
shl
repz
pop
mov
(bad)
outs
adc
push
ss
daa
aam
mov
out
retf
not
adc
(bad)
(bad)
(bad)
push
sahf
pop
addr16
popf
cdq
call
jno
daa
mov
jne
xchg
imul
(bad)
(bad)
cmp
test
jns
mov
dec
scas
add
mov
sbb
aam
dec
sub
jno
(bad)
lods
outs
mov
(bad)
push
lahf
test
scas
pushf
jle
clc
aam
mov
lods
(bad)
inc
out
xchg
ja
test
shl
sbb
jmp
xchg
in
(bad)
(bad)
inc
in
mov
in
ja
fistp
in
xchg
push
outs
in
sbb
jmp
xor
aam
push
inc
les
xor
mov
dec
pop
mov
(bad)
out
mov
push
xchg
int
mov
push
xchg
daa
sahf
aaa
jl
cmps
mov
adc
mov
(bad)
(bad)
call
mov
cmps
mov
or
mov
stc
scas
cwde
loop
ret
push
pushf
sti
push
push
and
xchg
inc
jge
loope
lahf
sti
sub
dec
jg
int
jae
fisubr
es
(bad)
(bad)
(bad)
mov
cld
imul
ss
test
imul
(bad)
daa
pop
lods
jns
push
cld
(bad)
(bad)
sub
frstor
jp
stos
jo
xchg
stc
jno
sar
xlat
jae
adc
mov
pop
inc
mov
retf
imul
add
cmp
(bad)
(bad)
(bad)
dec
cmp
xchg
xchg
cmp
das
retf
push
mov
popf
pop
out
or
int3
mov
or
in
lods
aad
xor
push
outs
(bad)
sbb
(bad)
(bad)
(bad)
jmp
enter
shl
add
jmp
(bad)
data16
(bad)
cmp
dec
xor
and
gs
pop
sbb
pop
jae
mov
outs
data16
fisttp
fwait
pop
popa
adc
out
pop
push
sbb
jmp
pusha
mov
xor
pop
imul
cmp
(bad)
(bad)
(bad)
jmp
popf
xchg
and
ja
ins
int
lods
mov
and
scas
iret
icebp
jmp
xchg
pop
and
dec
jne
jmp
cli
fbstp
(bad)
cmp
in
call
xchg
ins
cmp
aas
not
push
pop
(bad)
(bad)
call
inc
jle
jns
stos
call
test
cmps
adc
(bad)
push
inc
xchg
add
dec
sub
inc
cmp
sub
inc
cmp
mov
jnp
xchg
cdq
lods
mov
(bad)
call
sti
fs
ins
loope
(bad)
mov
sub
dec
cmps
mov
call
(bad)
mov
repz
adc
in
cmps
xchg
call
fild
push
jl
stos
mov
or
scas
xchg
pop
mov
pop
(bad)
jg
and
mov
mov
mov
xor
inc
shr
imul
mov
add
pop
shl
ret
inc
out
xchg
(bad)
(bad)
call
and
mov
clc
shl
fdiv
jg
and
fidiv
push
(bad)
call
dec
(bad)
push
sub
js
sti
xlat
xor
inc
lods
jbe
push
mov
ret
dec
repz
(bad)
(bad)
(bad)
inc
push
xchg
ror
pop
movs
xchg
pushf
je
into
imul
shl
sti
in
xlat
jg
jbe
mov
sbb
jmp
shl
es
ja
aam
(bad)
(bad)
(bad)
mov
and
jecxz
mov
fstp
cmp
aas
lods
je
push
xchg
(bad)
enter
inc
sbb
aad
mov
fild
movs
mov
mov
lahf
mov
jae
sbb
cmp
sbb
push
ins
lea
jle
(bad)
pop
mov
aad
pop
jno
sbb
push
(bad)
jmp
cmp
aaa
jae
cmc
ror
(bad)
fxch
push
ficom
aas
out
xchg
iret
int3
aad
mov
jmp
(bad)
jno
and
mov
jmp
cs
(bad)
(bad)
(bad)
(bad)
(bad)
push
push
popf
ffree
retf
bound
jbe
pop
inc
(bad)
imul
ds
stos
sbb
xor
loope
aaa
or
shl
mov
shl
dec
in
stc
cdq
lods
xor
(bad)
(bad)
(bad)
jmp
fidivr
sub
pop
test
adc
out
push
and
fild
sar
(bad)
call
pop
mov
pusha
in
test
pop
lods
enter
das
sub
jg
jle
mov
outs
push
adc
ret
into
fistp
pop
(bad)
call
inc
cmp
outs
cwde
sub
popa
mov
es
out
inc
outs
pop
mov
dec
adc
sub
scas
fldcw
mov
aam
(bad)
(bad)
(bad)
jmp
xchg
retf
mov
int3
sbb
cdq
out
pop
xchg
int
scas
ds
cmp
dec
(bad)
(bad)
(bad)
(bad)
cmp
imul
mov
mov
and
aaa
sbb
sub
clc
imul
mov
inc
mov
or
neg
iret
pop
mov
cmp
push
out
cli
ficomp
jmp
xor
cmp
ins
xor
pushf
pop
xchg
out
xor
jns
jnp
repnz
(bad)
(bad)
(bad)
mov
aas
pop
xchg
cmps
mov
repnz
(bad)
shl
jae
jg
add
jg
mov
cwde
sti
cmps
pop
push
fidivr
adc
nop
lock
dec
clc
(bad)
mov
in
fld
dec
hlt
pop
push
inc
mov
inc
add
lods
dec
in
fst
lea
jo
imul
das
adc
call
imul
stc
pop
push
pop
push
push
lock
xor
(bad)
call
(bad)
push
or
lods
jg
icebp
lahf
clc
inc
mov
pop
cld
mov
in
loopne
stos
call
call
sub
add
mov
fisub
adc
pop
jo
(bad)
(bad)
jmp
adc
leave
jl
icebp
or
out
outs
out
mov
xor
popa
jb
mov
sub
mov
jmp
pop
push
xchg
and
dec
jp
(bad)
jg
imul
push
out
mov
clc
call
loope
pop
and
test
cwde
xchg
data16
(bad)
jmp
loop
das
(bad)
test
fimul
jnp
sub
inc
lahf
push
call
mov
pop
cmp
and
fisttp
and
sar
xor
jl
lds
(bad)
(bad)
dec
lods
sub
ins
sar
aas
xchg
not
inc
stc
das
sub
cmp
mov
(bad)
sti
jnp
cmp
jno
mov
retf
sub
fisttp
jae
aaa
cmp
je
lds
jmp
arpl
pop
popf
stos
retf
add
div
lods
ss
(bad)
(bad)
jg
cmp
into
push
hlt
xchg
jb
movs
mov
push
xchg
dec
mov
mov
cmp
aas
mov
(bad)
push
std
sub
in
popa
cmp
stos
sbb
out
sbb
pusha
loope
fs
fs
(bad)
(bad)
(bad)
cli
call
cdq
pop
mov
sub
into
mov
inc
aaa
push
mov
mov
mov
inc
cmc
out
adc
jns
aaa
std
(bad)
call
jmp
pop
icebp
mov
test
lods
jg
(bad)
call
push
mov
xchg
and
cli
(bad)
lock
(bad)
dec
cmp
outs
push
dec
xor
mov
aad
cmp
push
cld
(bad)
into
jnp
(bad)
call
imul
inc
jo
xchg
ret
mov
push
adc
xor
mov
push
or
cli
js
cmps
push
lds
(bad)
mov
(bad)
inc
je
jmp
(bad)
stos
sub
mov
inc
fbstp
(bad)
jmp
xor
pusha
dec
fmul
lahf
push
mov
xchg
add
sbb
clc
inc
test
dec
in
cs
jmp
int
mov
pop
cmc
(bad)
jmp
stc
cmp
xor
ja
or
test
loop
in
(bad)
(bad)
(bad)
inc
inc
ss
dec
pop
inc
sub
xor
fstp
out
mov
pop
jecxz
xchg
pop
push
(bad)
jmp
or
add
inc
pop
aad
jp
xchg
popf
mov
jne
(bad)
(bad)
jmp
push
adc
xchg
jno
addr16
movs
icebp
or
inc
push
aaa
repnz
cmp
(bad)
inc
add
adc
cmp
sub
dec
and
bound
dec
out
mov
xor
fst
pop
mov
push
cwde
outs
dec
sub
lock
stc
cwde
push
gs
mov
add
stos
mov
fucomi
dec
aas
shr
xchg
or
cmc
(bad)
call
div
jl
dec
icebp
push
jnp
fld
cld
in
jg
mov
dec
scas
cmp
(bad)
(bad)
push
jp
jmp
mov
hlt
push
scas
pop
inc
fs
cmp
out
jg
(bad)
inc
and
or
hlt
adc
lahf
imul
fs
scas
sub
adc
sti
or
call
sbb
and
popa
retf
dec
xchg
sahf
inc
xchg
out
or
(bad)
jg
ins
mov
fs
call
mov
push
je
sub
dec
loopne
(bad)
(bad)
push
rcr
mov
data16
cld
mov
sbb
(bad)
push
lds
pusha
jmp
sub
(bad)
(bad)
jmp
push
mov
test
sub
pop
inc
ins
xor
repz
or
outs
(bad)
(bad)
(bad)
jmp
cdq
and
inc
xor
fstp
sbb
fnstcw
(bad)
(bad)
push
leave
sub
mov
sti
sbb
xchg
out
lods
jl
test
retf
cmp
inc
repz
out
clc
inc
imul
mov
pop
cdq
imul
nop
add
jg
(bad)
jmp
dec
popa
add
adc
cmp
mov
dec
push
mov
es
das
clc
(bad)
dec
or
pop
dec
repz
and
popa
lods
lds
(bad)
(bad)
jp
jne
popa
sbb
xor
sub
jmp
fnsave
xchg
(bad)
jmp
mov
out
(bad)
(bad)
dec
fld
daa
adc
sub
and
pop
sub
(bad)
(bad)
push
push
bound
sbb
retf
pop
and
leave
xchg
int
repnz
arpl
neg
sar
(bad)
push
ins
jnp
xor
fisub
mov
ror
test
out
mov
arpl
mov
out
xchg
adc
idiv
dec
sbb
mov
mov
ret
rcr
mov
mov
jmp
in
cld
jne
pop
(bad)
push
dec
rol
cmp
aam
mov
xor
add
jecxz
movs
and
(bad)
(bad)
(bad)
fldenv
jmp
add
mov
int3
xlat
fwait
xchg
ins
jns
std
push
adc
call
(bad)
(bad)
dec
popa
pop
dec
jno
out
add
inc
lock
inc
push
sub
xor
dec
mov
and
lea
loope
jg
dec
(bad)
adc
pushf
test
pop
loopne
(bad)
(bad)
dec
stc
(bad)
jecxz
mov
pop
std
push
(bad)
(bad)
jbe
jmp
(bad)
mov
sub
mov
cmps
ror
inc
ja
lods
xor
sbb
inc
adc
(bad)
(bad)
(bad)
mov
jp
push
xchg
aad
pop
enter
mov
push
(bad)
jne
dec
data16
fcomi
(bad)
(bad)
(bad)
call
mov
xchg
sbb
inc
(bad)
outs
out
mov
das
xchg
sub
(bad)
(bad)
call
stos
sbb
aaa
test
fucom
mov
leave
data16
rcl
cmp
js
add
std
fistp
mov
jne
not
repz
mov
call
(bad)
sti
leave
ja
add
inc
push
xchg
inc
xor
setno
add
rcl
push
add
test
pop
sbb
popa
push
dec
push
in
mov
(bad)
call
xchg
lea
es
out
out
movs
lahf
scas
pop
into
into
in
sub
xchg
(bad)
(bad)
in
pop
xchg
cmp
fs
cwde
mov
test
push
call
(bad)
(bad)
(bad)
dec
daa
fld
jecxz
or
test
mov
mov
cdq
imul
clc
push
mov
xor
popf
lods
sbb
retf
sbb
imul
sub
ret
or
(bad)
out
cmp
movs
popa
(bad)
(bad)
(bad)
call
pop
inc
sbb
inc
pop
movs
push
imul
cmp
mov
loope
push
retf
and
int
das
xor
or
mov
push
outs
fisttp
fstp
mov
retf
mov
mov
pop
out
jg
(bad)
inc
dec
arpl
fidivr
xor
or
push
cmp
sbb
cmc
test
in
enter
sahf
xchg
scas
push
loope
idiv
jg
inc
inc
data16
int
jne
jp
mov
stos
xchg
dec
cwde
sahf
push
sub
push
push
rcr
popf
gs
(bad)
lock
pop
mov
mov
mov
jnp
dec
mov
call
xchg
jbe
out
scas
xchg
retf
out
and
or
(bad)
push
dec
mov
jle
jl
fmul
daa
sahf
sub
xor
jge
aad
cmps
xchg
outs
aaa
pusha
addr16
jge
shr
pop
int3
not
sbb
xchg
xbegin
lods
xlat
ins
cld
(bad)
(bad)
jmp
lods
adc
xchg
jmp
mov
(bad)
xchg
and
cmovl
(bad)
(bad)
call
push
inc
fist
in
inc
out
xchg
jp
pop
sub
jmp
retf
ret
adc
ss
in
imul
not
loop
rcl
movs
push
dec
sub
xor
in
sti
inc
retf
lods
push
mov
test
in
jnp
or
(bad)
(bad)
(bad)
(bad)
(bad)
movs
mov
xlat
dec
shl
xchg
pop
sbb
cs
jns
inc
js
add
mov
dec
lahf
in
jbe
inc
out
ja
push
cld
adc
dec
pop
jne
mov
mov
and
(bad)
push
ds
and
out
mov
outs
ja
(bad)
ficomp
adc
mov
mov
cmc
mov
sar
jb
pop
xor
sbb
sub
and
loop
(bad)
jmp
js
or
mov
mov
sbb
sub
xor
dec
push
sar
(bad)
jmp
sbb
imul
jne
jg
jbe
iret
clc
push
xchg
mov
cli
xor
mov
mov
es
loopne
pop
add
test
call
add
add
push
retf
imul
test
mov
fcomip
(bad)
fmul
jmp
(bad)
int
jp
aas
sahf
and
dec
xor
mov
(bad)
push
adc
jo
stc
dec
jne
push
inc
cwde
xlat
and
pop
mov
mov
adc
gs
or
outs
mov
mov
sbb
xor
cld
(bad)
push
pop
fs
retf
fcom
cmp
adc
xor
push
mov
das
sbb
mov
or
ins
cld
mov
int
lds
mov
(bad)
(bad)
fbld
mov
push
fwait
popf
fwait
enter
aaa
arpl
jo
out
sbb
mov
dec
pop
retf
xchg
outs
mov
cmp
xchg
xor
mov
ja
ficomp
or
call
div
movs
xchg
mov
inc
cmp
imul
adc
inc
lahf
pusha
clc
add
lahf
cwde
clc
jg
xchg
div
sar
mov
inc
add
mov
adc
(bad)
(bad)
fild
imul
std
mov
pop
dec
outs
sub
push
mov
xchg
repz
(bad)
jmp
xchg
mov
mov
jmp
js
je
loop
pushf
xor
or
lea
jg
inc
jl
add
jmp
mov
into
mov
dec
arpl
inc
pop
mov
cs
cmp
sahf
ret
jl
loope
dec
inc
mov
push
(bad)
mov
sti
push
int
call
pop
rcl
lahf
or
(bad)
(bad)
jmp
bound
cdq
jmp
mov
push
sti
pop
cwde
xchg
es
jbe
adc
push
jb
(bad)
(bad)
(bad)
push
xor
xchg
gs
or
adc
sar
in
in
mov
call
(bad)
(bad)
push
cld
and
imul
mov
xchg
aam
cmps
mov
aaa
and
adc
pop
cdq
mov
mov
iret
add
(bad)
stos
jmp
dec
mov
es
cmp
push
add
or
inc
jmp
and
mov
and
jno
add
push
and
fisubr
fbld
sbb
cmps
cmp
(bad)
call
or
rcr
int
mov
cmps
mov
shl
out
xor
or
aas
ss
(bad)
sbb
dec
fcmovnu
icebp
pushf
(bad)
call
jbe
xor
xchg
push
mov
and
fmul
daa
inc
xchg
shr
call
mov
aam
push
outs
fisubr
shl
dec
(bad)
(bad)
call
scas
mov
mov
jl
cmps
cmp
jmp
jle
sbb
outs
mov
and
sbb
add
mov
(bad)
(bad)
(bad)
push
cs
sub
xor
pop
ds
sbb
adc
loopne
sub
cmp
call
mov
inc
and
mov
pop
push
int3
bound
xor
les
in
int
das
clc
call
push
push
pop
test
jge
inc
mov
(bad)
call
sbb
pushf
ins
push
mov
rol
cld
sub
dec
sahf
cmp
jne
xchg
imul
and
stos
repnz
and
clc
jmp
push
(bad)
xchg
cdq
pushf
mov
pop
dec
jne
lods
(bad)
(bad)
(bad)
call
cli
sbb
neg
push
scas
dec
bound
xor
xchg
jl
test
mov
(bad)
repnz
(bad)
(bad)
jmp
pop
mov
jb
push
fwait
mov
or
test
sar
(bad)
(bad)
(bad)
mov
pop
ins
in
in
ss
jecxz
jp
dec
jnp
or
mov
(bad)
push
int
test
mov
cmp
push
movs
rcl
cmp
scas
std
mov
outs
mov
mov
aam
shr
add
out
imul
fimul
sbb
(bad)
cmp
jns
and
mov
out
cmp
inc
ss
sbb
dec
and
(bad)
(bad)
jmp
inc
nop
inc
shr
or
outs
retf
mov
dec
out
mov
icebp
mov
adc
dec
icebp
adc
fstp
mov
jno
fcmovne
movs
les
fidiv
mov
(bad)
(bad)
jmp
outs
pop
mov
inc
jp
cwde
sbb
cld
stos
sub
shl
ins
mov
jb
(bad)
(bad)
jmp
or
aas
out
call
jnp
pop
push
jae
mov
push
push
scas
imul
(bad)
inc
retf
pop
arpl
data16
mov
xchg
hlt
hlt
scas
cli
or
outs
inc
out
iret
jp
(bad)
(bad)
inc
aad
mov
ja
lds
cmp
call
push
push
add
pop
jp
jg
hlt
inc
arpl
mov
shr
je
xchg
mov
imul
mov
fst
je
movs
test
popa
in
(bad)
(bad)
call
push
mov
(bad)
cmps
jge
data16
pop
push
cmp
inc
fwait
inc
aaa
inc
mov
inc
retf
(bad)
(bad)
(bad)
(bad)
ds
hlt
lods
sub
scas
hlt
cmp
dec
xor
dec
icebp
pop
out
fs
(bad)
(bad)
jg
(bad)
int3
cmp
sbb
jg
xor
jb
xchg
jg
ds
mov
mov
adc
stos
inc
lock
aas
and
(bad)
(bad)
call
cmp
(bad)
cmp
lea
jg
loope
jge
or
stos
ja
pop
dec
mov
aaa
imul
je
fimul
mov
dec
cld
sbb
scas
movs
mov
(bad)
(bad)
(bad)
inc
test
hlt
jmp
dec
xor
and
sub
push
push
dec
cmc
xlat
ret
out
(bad)
cli
pop
lock
adc
pusha
sti
jg
push
mov
pusha
push
cmp
(bad)
push
dec
fdivr
fisttp
inc
lods
je
lods
jp
adc
rcl
or
(bad)
(bad)
jmp
aam
fiadd
inc
ss
(bad)
in
out
loop
(bad)
je
inc
and
retf
(bad)
mov
aas
data16
es
neg
pop
(bad)
mov
push
scas
push
lods
aad
jnp
pop
xchg
adc
ds
(bad)
(bad)
(bad)
(bad)
cmp
mov
int3
inc
lock
aas
push
pop
ss
push
jne
shr
push
sahf
pop
inc
loope
mov
loopne
push
nop
adc
jne
push
in
jle
mov
jecxz
jge
stos
pop
sar
(bad)
push
fmul
mov
pop
fdivr
or
xchg
pop
stos
push
or
(bad)
(bad)
jg
arpl
add
sbb
fisubr
(bad)
aam
int
fnsave
and
fs
cmc
out
hlt
(bad)
(bad)
(bad)
jge
jnp
mov
int3
stos
add
int
test
sahf
jg
cmps
addr16
mov
loopne
fistp
mov
lods
cmp
sbb
jnp
cmp
(bad)
stos
ins
popa
pop
inc
fadd
loope
mov
or
out
mov
add
mov
call
cmps
add
popf
stos
pop
sbb
ins
loopne
mov
pop
xchg
test
jae
mov
jg
jb
dec
ficomp
jns
(bad)
push
jl
push
movs
xor
(bad)
xchg
repnz
(bad)
mov
xchg
pushf
out
cmp
sub
sar
in
inc
iret
cmps
jo
cs
push
mov
in
(bad)
(bad)
(bad)
ds
aam
jecxz
and
ds
adc
inc
ins
sub
jecxz
mul
in
cli
adc
inc
dec
test
pop
scas
inc
push
nop
mov
dec
mov
aad
es
in
add
and
pop
and
dec
cwde
mov
sub
out
add
call
and
mov
loope
(bad)
inc
and
sub
jmp
dec
sbb
adc
retf
jb
aas
(bad)
(bad)
cmp
scas
into
or
es
mov
mov
or
mov
jo
hlt
popa
adc
es
int3
or
mov
es
push
loop
in
test
push
nop
dec
es
fnstsw
adc
ins
test
dec
xchg
inc
in
lds
cmp
dec
push
in
push
fistp
add
in
xchg
sub
mov
std
fcmovu
mov
and
sbb
jo
jmp
add
sbb
dec
sub
loop
enter
inc
jno
(bad)
xchg
jbe
je
jl
dec
sbb
dec
cwde
sub
not
fisubr
arpl
ja
ins
push
pushf
push
mov
xor
jmp
add
into
cmc
fadd
cli
mov
cmp
dec
aam
(bad)
(bad)
push
gs
and
xchg
pop
or
pop
cld
mov
adc
adc
lds
dec
les
(bad)
(bad)
(bad)
push
(bad)
scas
or
aam
sub
outs
(bad)
push
loope
mov
pop
into
mov
sbb
ins
or
das
int3
aas
ud0
(bad)
push
stos
push
adc
mov
scas
inc
sub
stos
inc
iret
add
in
push
(bad)
mov
fwait
leave
outs
xchg
sbb
(bad)
inc
xchg
lds
sub
jge
sub
inc
jmp
shr
xor
sbb
(bad)
dec
aas
ficomp
in
mov
xor
cmp
sti
shr
push
adc
fs
mov
dec
fwait
jbe
ja
in
inc
std
sub
xchg
xchg
push
in
xchg
and
(bad)
(bad)
(bad)
dec
js
or
mov
mov
fmulp
loopne
sub
clc
pop
add
lods
dec
iret
or
cli
(bad)
(bad)
call
lock
shl
fs
cld
jmp
mov
adc
in
ds
(bad)
jmp
pop
xor
stos
ds
add
xchg
adc
jno
lods
sti
lock
(bad)
jns
pop
xchg
pop
mov
pop
nop
ret
sti
test
cli
sbb
call
(bad)
fsubr
pop
dec
push
push
jmp
lds
(bad)
jmp
nop
cmp
sbb
daa
cmp
call
(bad)
(bad)
jmp
retf
js
mov
fwait
push
dec
stos
imul
sub
add
(bad)
push
dec
xor
fucomi
ja
push
repnz
mov
retf
retf
cmp
fdivr
(bad)
(bad)
inc
cmps
jp
out
jmp
mov
push
call
pop
ficomp
cmp
bnd
out
xchg
loopne
inc
cld
sahf
sub
and
cld
std
jae
(bad)
mov
add
aad
adc
scas
pop
call
push
lods
int
jmp
fcom
and
add
add
add
popf
sbb
(bad)
jmp
cmps
lea
in
adc
pop
inc
pop
mov
push
or
mul
rcr
lea
sub
loopne
adc
pop
pusha
sbb
iret
add
clc
mov
(bad)
jmp
out
cmp
inc
imul
pop
cmp
dec
and
lods
push
loop
data16
(bad)
jmp
sbb
retf
pop
ja
or
jmp
popf
mov
pop
adc
(bad)
mov
(bad)
out
or
aam
pop
gs
mov
or
(bad)
jg
out
mov
fimul
jnp
cmp
ins
das
call
(bad)
(bad)
dec
mov
stos
dec
inc
inc
xchg
gs
pop
imul
pop
jnp
scas
cmp
(bad)
jnp
(bad)
(bad)
(bad)
call
jnp
das
push
mov
xchg
mov
cmps
push
xlat
mov
fcmovb
xchg
jmp
in
js
(bad)
(bad)
(bad)
(bad)
jmp
test
mov
sub
dec
sub
xchg
cld
sti
xchg
inc
mov
stos
sbb
fbld
retf
adc
lods
push
call
mov
(bad)
(bad)
push
and
(bad)
lods
jb
inc
movs
out
sub
and
out
pop
cli
pop
sbb
lods
(bad)
(bad)
(bad)
dec
mov
mov
out
add
jb
jno
xchg
jo
daa
xchg
dec
jmp
xor
push
jmp
call
in
mov
retf
sbb
push
enter
hlt
out
fistp
cs
fwait
je
push
add
out
(bad)
(bad)
(bad)
mov
push
popf
sub
pop
mov
cwde
xor
xchg
ss
cs
push
fs
adc
cdq
test
sub
out
call
mov
(bad)
push
fisttp
les
es
and
add
imul
xlat
(bad)
(bad)
jmp
push
js
(bad)
rcl
adc
mov
sbb
cwde
inc
sub
push
rcr
out
aad
popa
push
neg
jo
(bad)
(bad)
(bad)
push
lods
out
jns
outs
dec
sbb
in
mov
addr16
cmp
pushf
mov
call
(bad)
(bad)
(bad)
inc
mov
cmps
popa
or
sub
adc
xor
nop
pop
enter
mov
(bad)
(bad)
call
cmp
inc
cmp
mov
adc
mov
and
adc
lea
push
push
ds
push
pop
or
(bad)
(bad)
jmp
xor
cmp
push
xchg
pop
loopne
mov
arpl
test
std
das
sar
pop
lods
push
mov
fst
cmc
xor
lods
and
fincstp
push
fdivr
(bad)
mov
inc
je
push
rol
imul
ror
outs
jmp
dec
inc
cmp
and
mov
jo
in
hlt
test
pop
lock
mov
mov
add
rol
lds
xor
(bad)
call
lods
mov
inc
pop
ins
mov
outs
jge
jbe
and
cmc
rcr
es
(bad)
(bad)
clc
xchg
pop
pop
imul
cmp
sar
xor
repnz
daa
jp
fwait
(bad)
jg
cs
inc
add
xor
mov
lea
xchg
pop
push
(bad)
(bad)
(bad)
dec
ror
adc
jno
gs
mov
mov
pop
es
sbb
push
aaa
jp
std
jmp
jbe
test
sahf
dec
dec
pop
out
mov
pop
push
dec
mov
xor
jmp
push
mov
sbb
mov
cdq
out
ds
sahf
sub
imul
fcomip
mov
call
enter
mov
loop
or
(bad)
pop
(bad)
loopne
into
sbb
adc
push
xchg
pop
or
cld
test
push
scas
loopne
xor
dec
bound
cmp
fs
inc
test
and
ss
mov
mov
jmp
xor
sar
inc
or
(bad)
jmp
rep
icebp
clc
push
hlt
arpl
cdq
aam
mov
cs
sar
(bad)
call
jae
je
int
loop
shl
and
push
pop
mov
pop
xor
clc
(bad)
(bad)
(bad)
(bad)
jg
cmp
mov
lods
(bad)
sub
jbe
in
dec
adc
int3
sbb
cmps
fdivrp
(bad)
(bad)
call
dec
popa
push
mov
jbe
jg
mov
retf
(bad)
jmp
mov
xchg
xlat
movs
inc
(bad)
(bad)
(bad)
jmp
fisttp
and
out
push
icebp
adc
cmps
fld
aaa
or
mov
out
inc
stos
or
imul
cmps
inc
mov
sbb
mov
cs
(bad)
jmp
sbb
ja
pop
(bad)
and
mov
jp
clc
xchg
(bad)
jmp
add
aas
in
sbb
stc
nop
jne
mov
setle
sar
dec
and
retf
jne
scas
dec
movs
push
sub
or
cli
push
pop
jl
jecxz
das
(bad)
cmc
pop
cmp
ret
inc
pop
pop
rdseed
push
(bad)
mov
cmp
popa
add
sub
(bad)
(bad)
jmp
call
outs
daa
jge
inc
aaa
adc
jnp
(bad)
cmps
pop
out
aas
fcmovnu
xchg
fwait
(bad)
mov
mov
xchg
sar
icebp
jg
sbb
in
push
mov
(bad)
(bad)
mov
pop
inc
cld
shr
imul
pop
(bad)
xchg
fwait
cmp
scas
xor
(bad)
es
mov
inc
lock
out
fld
pushf
sub
outs
sbb
clc
dec
pop
bound
fs
lds
dec
ret
aas
je
pop
adc
out
(bad)
(bad)
jmp
(bad)
fistp
iret
dec
(bad)
push
aam
cmps
cmp
cmp
jl
xchg
fsub
lea
mov
(bad)
call
(bad)
in
out
xor
inc
sbb
(bad)
mov
pusha
mov
(bad)
(bad)
jg
xchg
push
je
or
push
jg
mov
dec
push
lods
ds
xor
mov
loopne
inc
sti
out
xor
iret
movs
jae
mov
aad
inc
mov
adc
cli
jmp
mov
mov
stos
shl
dec
hlt
sar
push
pop
inc
(bad)
jg
dec
pop
(bad)
pop
retf
pop
inc
inc
sbb
cmps
fcmovnb
mov
sbb
sbb
hlt
imul
inc
cmp
es
add
mov
gs
retf
stos
mov
call
add
cmps
mov
imul
repnz
jae
test
clc
mov
lods
mov
sbb
imul
(bad)
inc
push
bound
das
pop
scas
jne
jne
sbb
mov
mov
and
mov
cs
(bad)
(bad)
call
pop
out
test
test
scas
push
adc
(bad)
(bad)
jb
loope
cmps
shr
add
sub
(bad)
(bad)
(bad)
push
push
push
sub
inc
es
mov
fldlg2
jns
lods
fwait
in
cmp
pop
push
imul
fwait
(bad)
lahf
aam
pop
fld
call
(bad)
dec
sahf
pop
pop
jg
lds
mov
(bad)
(bad)
(bad)
in
mov
or
sub
shl
mov
pop
icebp
in
aas
sub
(bad)
jg
loopne
add
jb
pop
aaa
outs
enter
jno
cmp
jns
jmp
jne
dec
outs
push
ins
stos
popa
dec
out
mov
dec
test
push
fild
popf
cmp
push
xor
push
or
jl
(bad)
jmp
add
das
ds
test
hlt
stos
mov
jns
or
jmp
arpl
cmp
fidivr
hlt
mov
inc
push
cmp
mov
xchg
or
pop
mov
jmp
cmp
pop
push
retf
aaa
mov
jecxz
cmp
mov
shr
ret
call
mov
fsub
add
out
rcr
sbb
cmps
mov
dec
popa
sub
xchg
addr16
add
jmp
in
xchg
(bad)
call
icebp
push
pop
sbb
pop
sbb
jecxz
(bad)
jp
in
int3
fadd
adc
std
dec
push
out
pop
inc
ins
xor
(bad)
call
mov
pop
xchg
enter
jmp
shr
push
aas
ret
(bad)
jmp
and
into
fist
or
(bad)
ins
or
(bad)
push
aad
data16
lock
push
adc
and
in
(bad)
dec
out
mov
xchg
cmp
(bad)
(bad)
jl
retf
adc
jnp
rcl
push
push
mov
(bad)
mov
push
int
dec
gs
dec
sbb
ds
mov
(bad)
(bad)
jmp
xchg
cdq
push
mov
in
pop
jbe
cmp
repz
jb
repnz
cmp
inc
loop
jmp
cli
inc
jno
es
enter
or
xor
scas
call
sbb
dec
repz
push
scas
pop
ja
push
(bad)
sbb
call
xor
sbb
mov
loopne
loopne
push
sbb
mov
(bad)
(bad)
jmp
sbb
js
mul
push
mov
jb
jo
imul
icebp
xchg
cwde
(bad)
push
dec
mov
push
mov
clc
jbe
aam
inc
mov
daa
jo
(bad)
(bad)
call
in
jle
sbb
xchg
mov
cli
xlat
jns
sbb
mov
(bad)
int
stc
(bad)
(bad)
(bad)
call
and
adc
jge
mov
fidivr
xor
dec
pop
xlat
xchg
push
arpl
das
cli
jmp
cs
aaa
inc
push
imul
mov
pop
(bad)
(bad)
(bad)
push
pop
movs
pop
mov
les
xor
fcom
mov
stc
mov
lahf
mov
ins
jmp
xchg
cmp
add
movs
neg
cwde
mov
mov
mov
(bad)
mov
imul
fstp
loope
push
mov
xlat
or
adc
jmp
mov
mov
jns
mov
xchg
mov
aam
rcr
outs
icebp
adc
sub
fisub
mov
mov
std
lods
enter
scas
or
in
in
ds
xchg
sbb
aas
xchg
jae
cdq
loop
cld
(bad)
dec
jae
mov
inc
xor
ss
aam
mov
adc
lods
mov
(bad)
dec
div
movs
pop
mov
dec
cmp
cmovae
mov
push
mov
inc
ins
add
add
movs
hlt
dec
adc
pushf
das
data16
scas
sbb
sahf
dec
push
cmps
(bad)
(bad)
(bad)
in
mov
pop
jbe
inc
packsswb
or
xor
fs
inc
ja
(bad)
out
clc
dec
sbb
jl
icebp
xchg
pop
jge
(bad)
pop
test
inc
sbb
dec
pop
out
mov
and
(bad)
(bad)
inc
xchg
daa
ds
loop
push
sti
pop
aam
xchg
inc
int3
int
(bad)
mov
pop
jmp
sbb
pop
add
mov
mov
xor
mov
es
and
mov
cdq
push
fsubp
or
jmp
out
jmp
loop
scas
or
sub
push
inc
mov
mov
(bad)
inc
(bad)
(bad)
sub
and
inc
imul
(bad)
(bad)
jg
jb
ret
repz
push
out
xchg
fucomi
pop
fdiv
xchg
fimul
adc
adc
jmp
std
popa
sbb
je
(bad)
jae
stos
xchg
mov
pop
mov
leave
fwait
test
inc
xchg
jmp
adc
dec
sub
pop
ds
sar
arpl
pop
mov
push
aas
cmp
push
call
(bad)
push
les
repnz
sub
ss
aad
aas
push
push
and
ja
(bad)
(bad)
(bad)
jmp
gs
stos
not
ja
fisubr
xchg
fnsave
les
jmp
push
mov
xor
popf
mov
and
nop
inc
call
ins
mov
(bad)
(bad)
mov
jp
rol
or
movs
(bad)
fist
jmp
xchg
xor
add
push
fsubr
add
push
retf
push
cmp
mov
(bad)
(bad)
(bad)
cmp
(bad)
popa
shl
jne
push
sbb
imul
sbb
mov
fdivr
and
ds
daa
inc
out
(bad)
(bad)
(bad)
jg
mov
mov
out
test
fsubr
leave
cmp
mov
fidiv
lock
in
(bad)
(bad)
(bad)
call
shr
xor
inc
push
and
ds
jle
jno
cmps
jmp
pop
stc
mov
(bad)
(bad)
fiadd
push
jmp
scas
stos
jmp
int3
sub
fistp
fsubr
mov
ret
xor
jb
(bad)
stos
push
jg
aam
ja
pushf
imul
fsub
dec
jmp
dec
and
mov
xor
scas
popf
jns
(bad)
(bad)
call
and
xor
inc
sub
sbb
imul
pop
imul
or
mov
sub
adc
mov
jbe
arpl
leave
loopne
fistp
mov
pop
(bad)
mov
call
outs
jecxz
aaa
push
(bad)
int3
je
in
loopne
lods
gs
out
mov
mov
xor
jmp
repnz
and
repz
pop
mov
jecxz
outs
jp
mov
(bad)
mov
in
xchg
stc
pop
cdq
and
arpl
call
push
xor
out
iret
out
jbe
(bad)
(bad)
jmp
cmp
int
pop
fsubr
sbb
fild
arpl
(bad)
(bad)
(bad)
fcomp
cwde
mov
or
call
mov
cmps
lods
pop
xchg
adc
mov
(bad)
(bad)
call
pop
add
dec
dec
fld
adc
pushf
add
sbb
add
lock
cmp
inc
add
arpl
adc
cmp
in
in
(bad)
in
ret
rcr
add
sbb
jle
lods
xor
inc
fadd
(bad)
push
mov
cwde
inc
cmp
jmp
clc
test
loopne
ss
mov
sbb
test
jg
mov
(bad)
(bad)
(bad)
(bad)
stc
lods
jmp
and
mov
and
pcmpgtw
lods
dec
gs
or
clc
pop
cmc
mov
sbb
popf
into
xor
ja
inc
xchg
pop
xor
pop
dec
jle
(bad)
(bad)
arpl
mov
or
loop
outs
sbb
mov
lds
(bad)
(bad)
fisttp
push
inc
mov
pop
mov
jmp
pop
push
pop
ffreep
sub
inc
rol
outs
sbb
sar
cmp
test
push
xchg
push
adc
stos
push
pop
movs
and
xlat
sbb
xlat
mov
and
mov
(bad)
mov
or
mov
shl
jne
(bad)
jne
pop
lock
jmp
xor
aam
stos
(bad)
jg
in
(bad)
dec
iret
fsubr
fs
(bad)
(bad)
(bad)
pop
scas
dec
les
mov
outs
sbb
(bad)
(bad)
(bad)
jmp
inc
(bad)
mov
jb
(bad)
in
adc
fnstsw
mov
pop
pop
mov
mov
(bad)
(bad)
push
or
stc
aas
adc
out
push
out
inc
mov
mov
into
out
pop
ja
add
add
jle
adc
add
sub
mov
or
lods
dec
cli
retf
sar
inc
call
lock
(bad)
mov
jecxz
or
push
mov
(bad)
(bad)
(bad)
jmp
mov
mov
into
and
out
js
cmp
scas
mov
(bad)
(bad)
push
icebp
add
pop
ins
movs
sbb
inc
jecxz
mov
sbb
push
rol
jae
xchg
mov
xchg
inc
or
sub
dec
mov
(bad)
(bad)
(bad)
out
xchg
xchg
fnsave
mov
mov
out
and
outs
(bad)
retf
jmp
pop
or
in
jmp
das
cli
and
hlt
movs
mov
sub
add
jne
(bad)
(bad)
fbstp
mov
fld
xor
mov
push
daa
(bad)
(bad)
(bad)
call
mov
cmp
retf
push
inc
sbb
shl
scas
dec
loop
mov
mov
mov
aam
mov
jae
mov
mov
inc
lods
pop
mov
sti
mov
sbb
shr
cmp
(bad)
(bad)
dec
dec
or
stos
repz
outs
movs
fidivr
stos
add
outs
out
popf
jle
sar
out
(bad)
fcomip
jmp
sbb
popf
aad
(bad)
mov
pop
pop
lea
lods
imul
data16
sbb
scas
mov
fstp
iret
ja
out
adc
sti
inc
mov
dec
or
or
jns
rcr
inc
test
(bad)
out
mov
xchg
clc
push
jmp
mov
(bad)
jg
adc
mov
sbb
jb
push
mov
mov
in
cmc
es
mov
pop
retf
test
addr16
sub
(bad)
(bad)
jmp
stos
imul
push
(bad)
adc
mov
push
add
call
push
fcmove
enter
add
retf
and
sub
xor
and
test
inc
scas
xor
fcomip
(bad)
fdivr
arpl
jecxz
sub
stc
into
ds
loop
xchg
mov
push
fwait
js
lods
pop
frstpm(287
xchg
fadd
jp
add
sti
mov
shr
ss
xchg
mov
adc
sub
(bad)
(bad)
inc
pop
(bad)
out
pushf
pushf
push
mov
pop
jnp
xchg
jge
or
test
into
adc
pop
push
(bad)
(bad)
jmp
xchg
outs
sub
jbe
mov
push
(bad)
dec
push
mov
mov
xlat
shl
sub
push
dec
int3
jge
cmp
add
xor
cmp
dec
pop
pop
outs
outs
mov
(bad)
(bad)
push
mov
dec
inc
mov
stos
lahf
mov
(bad)
clc
cdq
iret
das
not
cli
aad
fcos
(bad)
(bad)
call
dec
(bad)
fcmovnb
(bad)
xchg
pop
mov
sbb
ins
ja
fisub
imul
stos
xor
(bad)
(bad)
dec
and
popf
mov
inc
sti
pop
stc
jb
lods
(bad)
cmp
rol
(bad)
call
inc
(bad)
enter
rcl
test
push
mov
call
dec
vcomiss
pop
and
arpl
mov
jg
jmp
sub
sbb
or
xchg
cli
(bad)
cmp
adc
(bad)
test
cmp
pop
mov
sbb
xchg
and
outs
add
(bad)
dec
inc
in
cwde
mov
sbb
movs
xor
add
sub
push
dec
mov
es
(bad)
(bad)
jg
data16
test
lahf
popa
pop
dec
xchg
mov
cwde
call
xor
hlt
call
inc
jmp
jp
rcr
clc
mov
pusha
mov
jbe
mov
dec
lock
(bad)
jle
xchg
dec
jo
lods
mov
sub
lods
lods
ins
(bad)
(bad)
call
dec
cmps
push
(bad)
add
outs
sub
xchg
popf
in
mov
mov
dec
mov
pop
loopne
mov
out
xor
add
call
popf
cmp
(bad)
(bad)
mov
mov
repnz
sbb
sub
mov
mov
ss
sbb
call
inc
xchg
imul
adc
int3
add
xor
(bad)
dec
shl
fimul
push
mov
rcl
mov
bound
mov
add
ds
cmp
adc
xor
push
call
test
pop
and
stos
cmc
sbb
sar
jmp
out
push
in
inc
mov
stos
stos
or
jae
(bad)
call
push
mov
(bad)
jmp
mov
adc
mov
fld
ffreep
jmp
stos
sub
(bad)
(bad)
xchg
mov
pop
jnp
or
(bad)
(bad)
dec
aam
adc
or
repz
(bad)
ficom
sub
dec
sbb
mov
(bad)
(bad)
call
es
pop
push
push
repnz
sti
in
(bad)
aam
scas
jno
(bad)
ror
mov
call
mov
pop
mov
cmp
repz
ja
mov
dec
addr16
jno
mov
(bad)
(bad)
(bad)
(bad)
jge
jmp
(bad)
pop
adc
aaa
test
mov
ffree
cmp
pop
gs
(bad)
call
inc
and
lahf
(bad)
out
sub
add
mov
dec
or
dec
(bad)
ss
leave
mov
mov
fisttp
cli
pop
cld
inc
ret
cmp
test
enter
jo
cmp
call
push
xor
xor
mov
popw
and
(bad)
(bad)
dec
sbb
push
mov
icebp
sbb
test
jno
aad
cmp
jb
das
xchg
(bad)
out
cli
outs
call
pop
test
les
or
pop
sub
in
(bad)
(bad)
(bad)
dec
mov
in
ficomp
in
mov
in
loop
ins
test
repz
es
cmps
push
(bad)
inc
mov
and
lock
popf
mov
test
ret
into
pop
inc
ds
(bad)
mov
(bad)
(bad)
(bad)
cld
das
jo
xchg
jmp
add
or
push
int3
mov
mov
(bad)
(bad)
call
ja
out
arpl
push
xchg
inc
adc
lods
(bad)
mov
xor
scas
dec
mov
into
enter
cld
push
ins
iret
loope
ja
scas
ja
jmp
aas
mov
(bad)
(bad)
call
jg
xor
mov
pusha
(bad)
imul
pop
popf
(bad)
mov
sub
jo
into
jle
movs
and
ins
(bad)
fdiv
pop
jbe
cs
mov
sbb
add
movs
sub
imul
cmps
(bad)
(bad)
mov
int
xchg
pop
pop
jl
movs
mov
shl
push
inc
retf
xor
push
fist
lock
sub
stos
xlat
retf
pop
jne
(bad)
ins
ret
jns
test
dec
out
lds
into
xchg
(bad)
(bad)
mov
shl
mov
dec
mov
nop
std
ficomp
or
retf
jg
stos
xor
outs
jp
in
jbe
sti
mov
fstp
jmp
lods
cmc
(bad)
(bad)
jmp
inc
push
imul
sti
int3
push
push
jg
in
cs
retf
push
mov
dec
ins
(bad)
(bad)
(bad)
fcomip
rcl
cwde
movs
pop
adc
and
fs
pop
mov
mov
xor
mov
leave
rol
aad
imul
addr16
sub
mov
das
sar
xchg
or
in
mov
in
jno
push
cmc
rcr
imul
(bad)
call
lds
adc
sub
in
pop
movs
loop
aas
xor
stos
(bad)
(bad)
(bad)
(bad)
(bad)
call
or
(bad)
push
pushf
jns
xor
fadd
mov
push
jne
jg
adc
(bad)
(bad)
jmp
mov
call
mov
aas
(bad)
cmp
(bad)
xchg
fs
inc
sub
cld
adc
inc
and
mov
(bad)
into
dec
in
sar
call
xchg
mov
or
or
mov
jg
inc
cdq
pop
icebp
(bad)
mov
lds
adc
pop
fdiv
out
(bad)
pushf
push
sub
cmp
(bad)
jmp
dec
push
xchg
xchg
or
pop
cmp
add
lods
repnz
lock
dec
adc
(bad)
(bad)
push
sbb
(bad)
mov
call
frndint
stos
inc
out
xor
ss
sub
(bad)
inc
cld
fsubr
aas
dec
das
jno
call
arpl
jle
mov
lock
cdq
jge
fxch
les
mov
mov
addr16
mov
(bad)
js
int
shl
es
mov
adc
(bad)
call
jle
out
sub
cdq
pop
(bad)
adc
inc
(bad)
(bad)
out
nop
loop
cdq
pop
test
xor
(bad)
mov
(bad)
loopne
add
(bad)
inc
inc
jo
lods
and
inc
mov
mov
pop
mov
bnd
sbb
or
(bad)
out
clc
jno
xor
retf
jp
sub
enter
cmp
lahf
jmp
shl
jp
test
out
mov
adc
(bad)
call
or
loop
movs
pop
or
sbb
outs
fimul
dec
dec
ds
sbb
mov
xlat
ficom
iret
inc
out
xchg
mov
pop
inc
call
mov
(bad)
loop
mov
mov
(bad)
(bad)
(bad)
push
lods
cmp
ins
and
xchg
xlat
lods
imul
adc
cmp
sub
(bad)
(bad)
(bad)
jmp
call
cmp
pop
dec
xlat
mov
adc
pop
jno
enter
pop
(bad)
(bad)
(bad)
jmp
repnz
stc
fstp
dec
retf
fist
sti
xor
stc
mov
mov
push
call
call
jo
stc
fs
jecxz
push
(bad)
xor
repz
dec
dec
pop
inc
(bad)
mov
inc
dec
(bad)
(bad)
(bad)
call
inc
(bad)
pushf
aad
ja
pop
mov
mov
loop
in
jno
out
sbb
(bad)
mov
(bad)
mov
(bad)
lds
add
cli
(bad)
retf
xor
mov
or
clc
nop
not
fisubr
and
std
test
mov
les
mov
arpl
xlat
jns
sbb
bound
bound
xchg
jmp
xor
cs
test
cmps
int3
mul
mov
fisttp
out
adc
test
adc
mov
mov
in
mov
cmp
(bad)
adc
jecxz
dec
ins
call
in
sbb
bound
mov
test
fs
mov
fwait
mov
jecxz
mov
pop
(bad)
(bad)
(bad)
call
movs
(bad)
in
daa
repnz
and
into
xor
dec
call
mov
cmp
call
jne
xchg
std
sbb
mov
call
adc
add
pop
shl
fild
mov
mov
pop
test
push
and
iret
mov
fs
(bad)
(bad)
mov
cs
ins
std
loopne
xchg
movs
js
sub
nop
cmp
sti
test
inc
mov
pop
cmp
rcl
ins
sub
aad
cs
xchg
cs
and
(bad)
(bad)
push
jl
cmps
push
xor
retf
push
imul
fsub
not
es
xchg
(bad)
mov
mov
jge
les
jno
repnz
jg
lods
adc
(bad)
in
adc
(bad)
xor
ss
push
mov
adc
push
std
ror
adc
pop
nop
into
or
mov
clc
cmp
inc
pop
(bad)
xor
push
es
fcomp
sar
dec
or
sbb
(bad)
mov
cmps
and
(bad)
(bad)
mov
addr16
popa
cwde
xchg
and
inc
int3
imul
retf
mov
nop
out
neg
dec
mov
or
daa
imul
mov
push
xor
mov
js
out
pop
retf
popa
fdivr
dec
int
cs
jg
cmp
mov
popf
mov
loope
push
(bad)
(bad)
jmp
xor
xlat
fisttp
test
inc
(bad)
in
outs
std
xchg
xlat
jmp
mov
scas
mov
call
nop
ss
mov
jno
lock
or
aas
xor
xchg
dec
addr16
ins
push
dec
lods
bound
mov
mov
mov
cmp
(bad)
and
scas
inc
iret
or
xchg
jno
mov
enter
out
(bad)
mov
xchg
(bad)
(bad)
(bad)
call
cmp
sub
xchg
and
jmp
xchg
out
cmp
adc
xchg
add
(bad)
dec
xor
fstp
out
ror
aam
arpl
xor
sti
xchg
or
outs
cli
inc
inc
adc
sahf
jecxz
mov
sub
mov
imul
adc
in
(bad)
fisubr
cmp
mov
retf
gs
inc
xchg
mov
(bad)
push
push
xor
pop
js
lods
cmps
addr16
lods
sub
mov
fisubr
cdq
repnz
xchg
imul
adc
stos
or
in
stos
pop
xor
ret
pop
(bad)
(bad)
(bad)
call
popa
repz
xchg
jno
daa
mov
mov
inc
jne
daa
xchg
loopne
hlt
push
(bad)
xor
lods
pop
adc
and
push
xchg
jecxz
ja
pop
(bad)
jg
jg
adc
pop
stos
xor
cmp
cld
aam
mov
or
leave
(bad)
(bad)
out
clc
stc
cwde
aad
fld
cmps
icebp
push
and
sbb
push
daa
out
out
sub
(bad)
(bad)
call
mov
jae
popf
and
lods
rcl
arpl
mov
cld
(bad)
(bad)
jmp
jo
movs
dec
push
pop
inc
inc
push
mov
jl
leave
add
ds
xlat
dec
push
dec
sbb
sbb
(bad)
(bad)
cmp
ss
shl
mov
arpl
xchg
dec
div
jl
sbb
jg
(bad)
call
cs
or
push
mov
mov
cs
jmp
(bad)
(bad)
(bad)
call
push
mov
sets
jp
lods
loop
mov
jb
xor
inc
fwait
pop
cld
(bad)
call
jno
xchg
mov
jecxz
push
(bad)
pop
push
sbb
test
push
call
jmp
outs
push
rcl
not
cmp
(bad)
(bad)
(bad)
push
sbb
bound
int3
movs
mov
sbb
idiv
cmp
imul
addr16
mov
fisub
mov
movs
jno
cmp
pop
mov
clc
(bad)
(bad)
(bad)
jnp
xchg
push
pop
fldenv
scas
and
les
adc
out
mov
ja
jmp
sub
sub
cmp
cmp
push
addr16
inc
cmps
inc
int
stos
dec
add
xchg
lods
jnp
pusha
push
lods
ds
cmovae
fwait
or
add
in
pop
mov
lods
div
aaa
fisttp
int3
and
jmp
ds
aad
adc
fst
cmp
mov
(bad)
(bad)
jmp
mov
dec
pop
sti
fwait
xchg
adc
outs
xchg
mov
and
pop
lea
mov
xchg
sub
mov
(bad)
inc
mov
and
scas
imul
cmp
(bad)
mov
enter
and
stos
ret
(bad)
(bad)
(bad)
jmp
or
and
push
xchg
scas
xchg
fcomp
aam
imul
pop
xchg
mov
iret
mov
sub
push
(bad)
outs
push
xchg
jmp
arpl
(bad)
fcomip
inc
out
sahf
push
call
sbb
rol
mov
mov
(bad)
(bad)
jmp
xchg
xor
push
mov
mov
imul
cmp
repnz
push
inc
std
jge
xchg
(bad)
fcomip
(bad)
jge
loopne
sub
imul
(bad)
mov
mov
addr16
(bad)
(bad)
call
mov
iret
ins
sti
push
mov
and
mov
jmp
mov
out
pop
lahf
push
fisubr
lock
sar
data16
(bad)
cmp
pop
sub
fidiv
jbe
rcr
call
aas
je
(bad)
jmp
pushf
cmp
call
mov
push
pop
sbb
cwde
push
fist
cmc
hlt
cmps
mov
mov
mov
jbe
cld
inc
sar
dec
cmps
jno
ins
pop
push
(bad)
(bad)
(bad)
inc
fs
mov
cmps
mov
mov
lea
cmp
dec
cdq
xchg
pop
xor
popf
(bad)
fcomip
dec
out
jo
mov
push
jl
pop
sbb
mov
(bad)
sub
scas
cli
rep
cli
fidivr
sbb
in
ds
mov
or
ja
cmp
jmp
dec
and
jp
iret
add
dec
fwait
outs
dec
push
dec
popa
ins
fmul
and
das
xor
cmp
jmp
and
pop
lods
into
rol
into
rol
xchg
sub
cmc
(bad)
mov
in
push
cmp
aas
fwait
arpl
jl
sar
(bad)
jmp
loop
cli
pop
loope
enter
sbb
stos
inc
push
fld
mov
cmp
xor
scas
(bad)
fsubr
push
ficomp
rcr
scas
movs
fwait
pop
popf
jae
into
enter
jae
dec
bound
fld
(bad)
push
and
out
sbb
mov
fadd
in
arpl
inc
loop
shr
outs
daa
test
jmp
fucomp
icebp
(bad)
(bad)
jg
sar
add
xor
sbb
fild
aad
out
push
(bad)
cmp
mov
retf
pushf
mov
push
aas
inc
jp
(bad)
(bad)
jg
push
int
mov
imul
dec
cld
sub
dec
mov
pop
lea
imul
mov
push
xchg
cmps
stos
(bad)
adc
or
dec
dec
jg
jp
cmp
or
mov
add
jmp
jl
stc
fld
fidivr
pop
sbb
(bad)
(bad)
(bad)
call
jnp
je
ret
imul
les
popf
push
mov
mov
mov
(bad)
pop
mov
call
test
inc
in
push
into
xchg
cs
imul
cmc
iret
fadd
jg
(bad)
(bad)
(bad)
(bad)
clc
js
call
lahf
xor
mov
inc
outs
in
push
imul
push
push
es
add
jmp
cmp
jnp
rcr
repnz
mov
add
fwait
loopne
(bad)
(bad)
jg
shl
mov
pop
daa
repz
ror
mov
mov
sar
call
mov
fist
ins
inc
sbb
xlat
scas
sti
push
xchg
(bad)
(bad)
push
add
push
imul
inc
inc
pop
push
jno
mov
mov
cmp
inc
repnz
lods
inc
(bad)
inc
scas
jmp
fbld
leave
in
pop
sub
ins
xchg
cmps
dec
in
mov
in
in
dec
ja
(bad)
cdq
push
inc
(bad)
(bad)
dec
int
jns
adc
faddp
les
int
test
mov
mov
icebp
fcmovne
cmps
push
rcl
inc
pushf
add
(bad)
jmp
outs
xchg
dec
call
adc
and
add
pop
add
sbb
jg
inc
add
ret
imul
in
(bad)
fistp
es
call
or
scas
out
mov
aam
cmp
ficom
leave
push
dec
fdiv
(bad)
(bad)
(bad)
inc
imul
push
jp
jle
data16
das
sub
sbb
push
pop
mov
pop
cs
pop
push
pop
aam
or
jmp
ja
out
cli
call
sbb
call
retf
cmp
mov
pop
mov
ret
movs
ret
sbb
lahf
movs
push
icebp
mov
cmp
(bad)
int3
(bad)
in
xchg
jo
push
retf
sbb
div
in
addr16
pop
(bad)
call
inc
jne
inc
xchg
repz
retf
clc
lock
(bad)
(bad)
cld
ret
data16
aas
loope
call
inc
ins
add
stc
ds
mov
dec
ss
enter
push
mov
ins
retf
dec
mov
fld
sar
push
sti
inc
test
xor
push
loopne
ins
test
cs
mov
adc
retf
(bad)
inc
sub
gs
cs
or
jle
es
adc
pop
into
xchg
(bad)
(bad)
(bad)
push
xchg
mov
ss
movs
xor
out
movs
add
mov
mov
aad
(bad)
(bad)
(bad)
push
cmps
ss
ins
nop
ins
cli
push
xchg
aaa
push
sub
leave
or
ja
sub
mov
mov
mov
call
out
mov
(bad)
rcr
sbb
sti
in
hlt
and
push
aaa
and
fist
sbb
mov
sbb
mov
inc
cmp
push
call
mov
jg
xchg
sbb
or
cs
scas
sub
(bad)
call
mov
dec
test
test
cmp
ins
jb
cmp
in
inc
popa
xor
jb
stos
call
xor
lea
jg
mov
idiv
jge
lods
jbe
in
dec
push
jbe
or
movs
(bad)
(bad)
(bad)
dec
jmp
div
sbb
out
neg
jp
scas
push
ffreep
mov
and
mov
push
cld
dec
(bad)
jbe
fsubrp
mov
cli
jp
jl
xchg
sub
cld
sbb
(bad)
(bad)
(bad)
in
or
or
in
add
inc
pop
test
lock
pop
sbb
jg
in
pop
xor
out
(bad)
(bad)
(bad)
enter
stc
pop
out
sbb
aam
push
add
(bad)
(bad)
jmp
sti
call
mov
add
out
jecxz
mov
aaa
call
call
(bad)
(bad)
jmp
sti
sbb
pop
pop
pushf
popa
adc
push
jmp
in
dec
add
(bad)
dec
push
jl
pop
add
pop
(bad)
nop
int3
(bad)
push
pop
fidiv
(bad)
jmp
jp
xor
test
mov
in
test
adc
repz
cmc
push
cmps
(bad)
in
xor
or
(bad)
call
ja
fidiv
add
sbb
nop
cdq
dec
dec
repz
push
dec
jecxz
imul
inc
(bad)
repnz
jb
push
pop
inc
fcomi
(bad)
out
frstor
jg
sbb
shl
and
clc
(bad)
(bad)
xchg
and
mov
dec
cmp
sub
adc
ds
add
(bad)
in
xor
test
pop
push
lahf
xchg
rep
repnz
mov
fcomp
stos
(bad)
jg
call
icebp
add
add
movs
js
enter
jbe
fpatan
bound
(bad)
out
clc
inc
xor
xor
jmp
call
xchg
repz
jb
xor
(bad)
(bad)
jg
shr
mov
xchg
loopne
pusha
mov
out
test
cmps
inc
mov
(bad)
dec
cmc
out
in
pop
in
adc
out
cmp
stos
cmp
lds
push
and
jae
sub
(bad)
cli
movs
scas
out
push
dec
jp
add
outs
into
into
out
jne
mov
jg
popf
cdq
retf
cmp
fsubr
jg
pop
and
pop
cmp
(bad)
(bad)
jmp
pusha
jp
ins
push
push
jl
arpl
in
je
xchg
rol
add
les
and
dec
cmp
(bad)
call
test
jb
inc
out
ror
imul
jmp
(bad)
xor
scas
loope
ins
mov
cmp
jg
std
fild
out
and
and
jbe
fadd
sub
(bad)
mov
dec
ror
sar
iret
outs
sar
push
mov
push
ds
add
mov
jle
(bad)
(bad)
(bad)
aas
iret
jp
cmp
mov
sub
sti
gs
icebp
xchg
mov
fist
lock
clc
fdivrp
(bad)
jmp
mov
xor
cld
iret
sub
mov
mov
mov
call
or
test
outs
fisttp
repnz
push
(bad)
fidivr
ficomp
add
mov
loopne
(bad)
fidivr
pusha
mov
or
pusha
jecxz
lods
lods
dec
jmp
add
(bad)
(bad)
(bad)
(bad)
out
out
repz
or
xor
jge
into
pop
ror
imul
sbb
pop
std
clc
dec
push
mov
es
js
(bad)
ret
sahf
lock
inc
(bad)
call
ja
ins
xor
push
loope
and
stos
out
mov
inc
jmp
out
cmc
jl
(bad)
xchg
scas
inc
mov
(bad)
(bad)
dec
jmp
mov
or
int
aas
js
inc
cmc
sbb
dec
in
and
loopne
(bad)
(bad)
call
out
mov
sahf
sbb
sub
mov
out
xchg
fst
(bad)
(bad)
(bad)
call
retf
lock
leave
into
push
out
icebp
loop
imul
enter
mov
ins
daa
xchg
(bad)
(bad)
(bad)
inc
and
aaa
out
ja
pop
dec
imul
xchg
inc
les
mov
mov
test
(bad)
in
fisubr
mov
push
jp
(bad)
call
into
jns
push
arpl
cs
cs
sub
das
jl
stos
pop
mov
data16
xchg
aas
ins
mov
(bad)
(bad)
(bad)
push
lds
or
sub
mov
fsub
jo
call
push
xchg
jmp
cmp
xchg
inc
cdq
inc
test
lds
inc
dec
(bad)
(bad)
xchg
jne
mov
iret
xchg
fs
(bad)
(bad)
(bad)
dec
lods
jmp
or
mov
xor
cmp
mov
daa
push
lea
mov
sub
(bad)
(bad)
(bad)
call
scas
lds
sbb
cmp
mov
dec
sti
cdq
pop
cwde
imul
pop
(bad)
(bad)
std
push
in
mov
sbb
mov
inc
dec
mov
call
in
or
sub
xor
ret
movs
xchg
int
aaa
mov
(bad)
(bad)
call
fmul
and
sbb
lods
std
push
mov
arpl
(bad)
retf
push
outs
clc
(bad)
dec
std
shl
pop
mov
retf
mov
mov
mov
(bad)
(bad)
dec
retf
sbb
bound
xchg
fadd
fidivr
shl
push
call
and
mov
jmp
ss
inc
aad
xchg
dec
movs
stos
sbb
mov
out
je
ins
xor
add
cmc
push
out
xor
jae
cmp
je
popf
lods
not
out
and
fcmovnbe
lds
fwait
js
aam
push
cmc
sbb
mov
sbb
cld
sub
(bad)
jmp
and
xor
loop
xor
add
les
ja
or
push
fsubp
jno
shl
push
(bad)
call
and
retf
retf
imul
jb
scas
mov
shl
push
(bad)
push
inc
lds
pop
pop
fdiv
stc
mov
adc
xor
sti
mov
jg
icebp
call
inc
adc
mov
jg
dec
test
inc
sbb
ins
popa
inc
(bad)
jmp
rol
js
mov
and
lods
pop
data16
call
jp
lds
mov
xor
call
and
stos
jbe
enter
jecxz
xchg
lahf
popa
outs
pusha
mov
push
adc
push
std
mov
movs
aas
push
cdq
mov
(bad)
fdivr
stos
push
jmp
pop
and
imul
ftst
outs
jae
jge
dec
in
cld
add
mov
pop
adc
mov
out
push
cmp
sub
or
xchg
(bad)
inc
cld
jp
leave
hlt
lods
fist
jmp
popf
(bad)
std
cmps
stos
add
ret
lock
(bad)
(bad)
push
aad
inc
test
loope
or
cs
(bad)
stos
mov
aad
icebp
leave
stc
retf
jae
and
call
stos
jo
mov
mov
(bad)
(bad)
jmp
mov
(bad)
aad
ja
nop
and
mov
cmps
ret
or
repnz
dec
pop
jmp
test
movs
arpl
pop
push
loopne
dec
(bad)
push
iret
fwait
mov
jo
loope
sbb
sbb
adc
ins
add
(bad)
jmp
mov
imul
cs
arpl
jno
mov
and
fistp
(bad)
(bad)
(bad)
call
jl
jg
sbb
shr
push
pop
dec
mov
cwde
loopne
mov
xchg
xchg
ins
mov
(bad)
fstp
ret
clc
retf
mov
mov
iret
sub
mov
mov
mov
sub
(bad)
(bad)
(bad)
call
jle
xor
sub
fld
arpl
push
stos
pop
stos
test
iret
pop
ret
mov
(bad)
(bad)
cli
adc
in
(bad)
in
ins
enter
push
jo
fdivr
or
mov
(bad)
and
aaa
inc
ins
cld
(bad)
call
ret
(bad)
mov
sub
lock
xor
(bad)
(bad)
call
lods
jnp
mov
fiadd
mov
vmwrite
lds
and
or
mov
fcomip
jmp
mov
mov
pop
jb
js
pop
sahf
mov
test
(bad)
mov
sahf
push
inc
out
addr16
dec
cwde
in
hlt
stos
sar
(bad)
(bad)
dec
sub
mov
iret
and
in
(bad)
mov
fistp
(bad)
xlat
fild
mov
adc
push
movs
je
(bad)
(bad)
call
idiv
retf
inc
mov
xor
and
push
inc
(bad)
(bad)
mov
aas
push
fild
sub
add
das
ret
(bad)
(bad)
(bad)
call
(bad)
and
iret
jb
in
sbb
inc
pop
imul
push
aaa
jp
test
cmp
push
push
rol
mov
jns
mov
cli
(bad)
push
lods
stos
mov
jne
pop
fidivr
xchg
imul
(bad)
(bad)
(bad)
out
test
into
ror
imul
(bad)
idiv
sbb
out
xor
(bad)
rol
clc
jg
(bad)
mov
inc
int
and
sub
std
fs
jle
cmp
mov
mov
das
out
es
and
(bad)
(bad)
(bad)
call
pop
sub
call
mul
sbb
and
out
add
int
aaa
cld
(bad)
jnp
ret
leave
cdq
dec
pushf
pop
dec
in
and
and
cld
int
call
(bad)
jmp
sbb
mov
adc
lods
add
out
mov
movs
retf
mov
mov
mov
add
pop
rcl
ror
punpckhwd
in
mov
mov
cmp
outs
cli
(bad)
jmp
icebp
js
ins
adc
xlat
jecxz
adc
sbb
cmp
jle
(bad)
mov
pop
and
xchg
push
or
sti
add
mov
les
sub
popf
enter
(bad)
(bad)
jmp
or
mov
into
dec
outs
ret
push
shr
xor
call
mov
das
cli
push
out
xor
mov
mov
int
dec
nop
int3
ins
jmp
sti
pop
mov
jg
jg
push
imul
jo
popa
cmc
adc
jmp
inc
xchg
(bad)
jbe
out
(bad)
dec
lock
inc
inc
push
in
sbb
sbb
inc
imul
(bad)
(bad)
(bad)
call
(bad)
cvttps2pi
sti
movs
xor
into
mov
dec
fsubr
jo
ins
push
pop
pop
and
fstp
cmp
or
(bad)
js
sbb
mov
pop
imul
dec
int3
jnp
dec
imul
lock
jno
imul
leave
cmp
retf
push
sar
lock
mov
loopne
mov
push
into
shl
pop
add
xor
arpl
(bad)
(bad)
jmp
mov
stc
pop
in
stos
xor
and
cmp
es
in
out
inc
fcom
shr
call
ret
hlt
rol
jb
xchg
xchg
jmp
aad
imul
loop
(bad)
cmp
jno
mov
sub
mov
push
and
mov
xchg
jae
(bad)
(bad)
inc
sti
retf
cmp
cdq
sti
stc
ins
jmp
and
push
mov
or
dec
mov
aas
jne
pop
lock
and
mov
test
arpl
jmp
jo
dec
sub
push
into
scas
jo
mov
xchg
(bad)
mov
and
scas
movs
addr16
xchg
aas
add
imul
aas
lock
jno
xor
popf
xchg
adc
jg
(bad)
push
fist
cmps
jns
cmp
repz
mov
add
lahf
outs
dec
cmp
inc
into
fsubr
lods
(bad)
jg
(bad)
fisub
das
test
pushf
push
pop
inc
inc
mov
jmp
inc
shl
(bad)
(bad)
(bad)
cmp
lahf
leave
xchg
out
mov
xchg
sub
mov
jl
cli
or
das
out
(bad)
(bad)
(bad)
call
stos
xlat
dec
lds
int
xchg
inc
std
aas
or
pop
xchg
mov
mov
call
push
sub
popa
push
and
or
push
pop
push
in
jle
jg
icebp
call
sub
mov
cmp
hlt
(bad)
(bad)
(bad)
dec
jecxz
outs
test
fwait
jbe
es
scas
int
cmc
sub
retf
push
(bad)
(bad)
jg
dec
adc
mov
mov
add
movs
and
sub
dec
xchg
lock
mov
dec
push
pop
loopne
(bad)
jge
lods
add
dec
pop
aam
pop
sar
ficomp
stos
mov
jmp
cmp
mov
test
and
in
fidivr
(bad)
push
aaa
fs
jmp
push
sbb
stc
dec
xor
push
push
jae
(bad)
(bad)
(bad)
stc
push
xchg
(bad)
adc
rol
call
mov
aas
leave
lods
dec
dec
mov
(bad)
(bad)
jl
inc
add
mov
adc
fbld
ret
mov
je
jmp
push
xlat
xchg
push
inc
xor
(bad)
(bad)
(bad)
(bad)
cmp
jge
mov
inc
push
arpl
xchg
shr
adc
cmp
mov
(bad)
push
cld
xor
pop
or
outs
push
sub
xor
push
(bad)
jae
lods
jae
idiv
(bad)
jg
or
imul
es
cmp
mov
xor
nop
dec
(bad)
inc
ja
jae
mov
xor
jp
push
dec
cmp
pop
loopne
push
(bad)
jecxz
(bad)
push
call
add
lock
psubb
mov
cmp
mov
iret
xchg
(bad)
(bad)
mov
or
push
std
in
dec
pop
fwait
daa
sub
xlat
mov
repz
stos
lock
sahf
imul
push
ins
jae
pushf
fimul
xlat
jl
retf
das
mov
push
push
dec
aas
sbb
mov
dec
xchg
jae
repz
(bad)
(bad)
jmp
mov
cdq
stos
xchg
inc
ja
das
jns
cmp
push
push
fld1
mov
lahf
dec
aad
dec
mov
push
jle
loop
cs
push
inc
add
mov
scas
push
mov
fcmovb
adc
repz
inc
in
ds
mul
cmp
pop
pop
stos
ret
out
(bad)
int3
mov
(bad)
(bad)
(bad)
inc
pop
mov
and
mov
out
jg
(bad)
mov
sub
mov
test
jae
pop
aaa
mov
(bad)
(bad)
dec
add
leave
stos
jbe
mov
enter
(bad)
out
xchg
cdq
outs
mov
ret
das
push
imul
loope
inc
loopne
mov
jmp
test
pushf
lea
(bad)
(bad)
(bad)
push
jae
test
sub
pop
mov
test
push
mov
(bad)
cwde
sub
(bad)
(bad)
cld
test
sub
xor
pop
lods
fnstsw
in
sbb
(bad)
(bad)
call
add
jmp
inc
jge
repz
movs
jbe
push
push
sub
outs
(bad)
mov
in
(bad)
(bad)
test
out
xchg
pop
aad
sub
sbb
xchg
int
cmps
mov
inc
jne
mov
(bad)
in
xor
sbb
xchg
imul
sbb
cld
(bad)
lods
mov
dec
mov
xchg
(bad)
(bad)
dec
and
sbb
push
(bad)
dec
mov
or
(bad)
shl
sahf
(bad)
(bad)
(bad)
jmp
xor
mov
scas
mov
hlt
pop
shr
cdq
arpl
and
inc
ins
jp
mov
(bad)
mov
mov
in
(bad)
ffree
xchg
mov
jmp
inc
out
aas
lods
outs
pop
dec
or
jno
dec
pop
lea
dec
inc
pop
inc
fidivr
inc
lahf
rcl
mov
sub
xchg
imul
call
cld
or
cmp
and
and
jmp
pushf
adc
scas
mov
xor
mov
xchg
pop
out
lea
(bad)
jmp
and
adc
push
dec
sahf
pop
stc
inc
test
jnp
ret
pop
cmc
(bad)
(bad)
mov
jl
sar
mov
push
cwde
out
outs
mov
push
adc
das
fcmovbe
mov
stos
sub
hlt
push
pop
adc
push
mov
mov
sar
push
(bad)
(bad)
push
pusha
imul
inc
jae
(bad)
(bad)
movs
clc
aas
out
xchg
(bad)
mov
mov
fmul
push
lock
fcomip
dec
call
(bad)
(bad)
pop
inc
pushf
ja
add
out
mov
les
popa
and
fld
(bad)
cmp
imul
add
in
mov
xchg
jmp
push
retf
fsqrt
add
ja
add
addr16
ins
(bad)
jmp
(bad)
call
cmp
lods
stc
ret
mov
aad
ja
and
out
cs
lods
push
dec
leave
lea
aaa
push
sub
out
pop
outs
mov
int3
repz
cmp
xchg
mov
int
cmp
pop
mov
addr16
repnz
(bad)
(bad)
jns
push
imul
fadd
out
dec
inc
jge
jl
push
daa
xor
cmps
(bad)
(bad)
(bad)
jg
or
pop
pop
jmp
xor
cmp
stos
cs
xor
jp
int
(bad)
push
push
test
(bad)
pop
sub
aas
inc
lds
xor
pusha
inc
iret
fidiv
icebp
cmps
push
inc
aaa
or
xor
(bad)
(bad)
(bad)
push
stos
daa
retf
cld
xor
xchg
and
push
iret
jecxz
fdiv
enter
sub
lods
(bad)
push
data16
mov
sti
loope
cwde
adc
mov
call
jne
aaa
ins
jp
sbb
and
lods
dec
xchg
jle
cs
mov
pop
add
jno
(bad)
(bad)
dec
into
add
jg
push
or
aad
add
dec
je
pop
xchg
jmpw
cmp
fild
movs
inc
fs
mov
scas
movs
xor
cwde
les
into
pushf
xchg
or
(bad)
(bad)
out
ficomp
dec
outs
iret
and
(bad)
jmp
push
cmc
inc
mov
jp
xchg
xor
mov
fidiv
loope
mov
mov
(bad)
call
mov
lock
xchg
xor
sbb
jmp
(bad)
call
jmp
xor
nop
imul
pop
popf
push
loop
push
mov
xchg
out
in
add
push
rol
mov
movs
mov
retf
jb
movs
adc
push
sub
(bad)
mov
aam
in
and
sar
loopne
ret
adc
dec
pop
cmps
arpl
das
sar
push
sub
jecxz
sbb
imul
(bad)
mov
pushf
mov
lea
dec
xchg
mov
shl
sbb
(bad)
fs
pop
jbe
jp
scas
pop
enter
xor
jns
push
cs
sub
aad
das
clc
pop
inc
aaa
adc
inc
lea
in
sub
stc
mov
push
mov
(bad)
(bad)
(bad)
jg
leave
mov
shr
adc
sbb
xor
data16
cmp
lahf
sub
jb
add
mov
mov
sbb
(bad)
pop
mov
bound
test
rol
jae
lock
push
(bad)
int
ret
lods
jge
les
pusha
jae
jp
sbb
retf
cwde
je
(bad)
(bad)
(bad)
dec
sub
jb
pop
ins
or
dec
add
mov
in
adc
xor
sahf
mov
push
jnp
push
div
xchg
clc
push
jle
adc
outs
int3
push
mov
mov
enter
add
fnsave
movs
pop
mov
(bad)
(bad)
call
(bad)
into
mov
lds
cmp
scas
jmp
mov
loop
and
pop
push
je
fbstp
outs
pop
arpl
push
rcl
sub
xchg
(bad)
(bad)
(bad)
push
lods
sbb
xchg
push
cld
je
mov
cmp
sti
arpl
(bad)
stc
push
xchg
mov
xchg
jno
fistp
scas
arpl
inc
cmp
stos
add
lods
cmp
jmp
pop
in
xor
jg
mov
mov
push
cmp
idiv
(bad)
(bad)
mov
mov
hlt
cmps
fisubr
xchg
xor
mov
mov
aaa
adc
lahf
adc
(bad)
dec
mov
out
je
sbb
out
add
scas
cs
cmp
(bad)
call
jmp
popf
mov
hlt
cli
push
xchg
ins
lods
jbe
(bad)
out
lahf
cdq
push
sbb
inc
stos
loop
je
mov
retf
or
call
scas
push
cmp
or
push
cs
cmp
scas
movs
(bad)
(bad)
cli
mov
nop
les
xchg
inc
shl
(bad)
(bad)
call
cmp
retf
lahf
or
sbb
pop
xor
lods
and
dec
stos
sahf
adc
fld
cmps
enter
repz
rcr
cmc
(bad)
(bad)
(bad)
push
gs
mov
sbb
fld
xor
and
(bad)
movs
jg
(bad)
push
cmc
lods
mov
movs
sub
mov
aad
repz
sub
xchg
daa
push
pop
push
nop
cmp
mov
(bad)
(bad)
cmp
inc
mov
pop
fbstp
fdivp
test
mov
dec
jp
cmps
rcl
in
mov
ret
or
stc
lea
push
sbb
movs
add
sbb
and
sub
(bad)
lods
aaa
jo
sub
enter
add
nop
repnz
pusha
push
or
ds
stc
pop
mov
cli
mov
xchg
(bad)
jg
das
loop
out
lds
rol
je
lods
pop
push
adc
xor
out
adc
inc
cmps
push
push
dec
cwde
xor
adc
cmps
shl
sub
(bad)
(bad)
fld
add
imul
repz
imul
ja
sbb
dec
gs
mov
adc
inc
daa
stos
sbb
xor
imul
cmp
xchg
mov
cmp
xchg
das
add
enter
mov
xchg
jecxz
(bad)
jg
cmp
xor
mov
cmp
dec
mov
test
and
idiv
cmp
and
(bad)
jae
mov
jp
dec
cmp
das
je
(bad)
(bad)
jmp
mov
mov
pop
sub
pushf
cli
push
ret
cmp
xchg
and
jge
(bad)
(bad)
(bad)
cmp
sti
ds
and
pop
push
jnp
fstp
sub
sti
js
push
imul
mov
mov
retf
test
push
(bad)
stc
sub
jmp
(bad)
ins
retf
data16
std
shr
push
jg
movs
sahf
(bad)
(bad)
(bad)
inc
(bad)
fsubr
xchg
lahf
xor
xor
jno
mov
inc
test
mov
(bad)
(bad)
(bad)
jmp
repz
jno
aaa
movs
inc
imul
fxch
enter
imul
aad
sub
ret
cmps
add
jae
push
int3
mov
test
(bad)
mov
rcl
out
pop
pop
mov
js
adc
cmp
(bad)
(bad)
(bad)
(bad)
cmp
stos
out
call
adc
bsf
retf
xor
imul
iret
jl
out
inc
arpl
inc
fsub
sbb
jmp
rol
(bad)
inc
sar
dec
mov
fisttp
mov
xor
call
std
clc
out
and
mov
pop
sbb
stos
xor
outs
or
add
outs
sub
push
xor
ret
jg
lahf
mov
imul
fwait
add
mov
ins
inc
fld
imul
or
cs
ja
(bad)
(bad)
fild
js
and
xchg
sbb
stos
push
outs
scas
and
dec
cmp
popf
dec
retf
fwait
(bad)
(bad)
push
mov
call
popf
mov
jnp
hlt
scas
jbe
adc
jecxz
call
outs
fcom
int
icebp
push
into
sub
in
enter
jo
mov
mov
jg
cmp
ins
jno
(bad)
cmp
aam
or
(bad)
call
xchg
ins
cld
mov
mov
jno
movs
adc
fadd
or
mov
stos
imul
pop
mov
movs
mov
mov
xor
mov
mov
jg
cmp
xor
(bad)
xor
movs
movs
(bad)
(bad)
(bad)
push
(bad)
shl
lods
adc
(bad)
icebp
outs
xchg
mov
(bad)
mov
fcom
xor
adc
(bad)
stc
sbb
ins
jbe
mov
icebp
dec
xchg
pop
jg
jp
sub
retf
(bad)
(bad)
(bad)
inc
out
js
retf
(bad)
fsub
addr16
arpl
repnz
fwait
xor
mov
(bad)
dec
enter
repnz
stos
cmc
and
xlat
imul
or
xor
jmp
call
dec
ja
xchg
cmp
pop
pop
jb
aas
dec
jb
push
sti
mov
pop
rcr
xor
jo
gs
mov
loop
sub
or
shl
daa
sar
sub
(bad)
xchg
sti
sbb
repnz
dec
retf
sbb
in
sub
outs
push
repz
mov
adc
ret
push
inc
cli
sbb
xchg
sub
pop
pushf
jge
mov
pop
loop
(bad)
ficom
push
jo
outs
(bad)
movs
and
sbb
push
(bad)
(bad)
fbld
xor
xchg
or
or
arpl
xor
mov
ds
adc
jne
(bad)
(bad)
jmp
in
push
push
dec
popf
push
in
bswap
or
retf
imul
mov
movs
pop
nop
push
xchg
out
sti
jb
cmc
push
mul
(bad)
fild
push
pop
or
xchg
and
push
add
push
lods
push
cmps
gs
push
inc
xlat
or
inc
call
push
rol
outs
pop
arpl
cmp
jmp
(bad)
out
adc
pop
scas
lods
push
icebp
adc
mov
call
loope
dec
(bad)
out
sub
int
scas
gs
jne
cld
test
jno
pop
(bad)
call
cli
sbb
out
ret
pushfw
repnz
aad
cmp
add
and
push
adc
stc
scas
dec
mov
and
movs
(bad)
(bad)
(bad)
jmp
or
xchg
ja
(bad)
in
xchg
jnp
jbe
fcom
pop
das
xchg
test
or
inc
or
cmp
call
ds
sar
(bad)
ds
pop
fbstp
sti
mov
mov
add
in
jae
jbe
(bad)
jmp
pusha
jb
dec
pop
loop
aad
mov
cld
push
in
inc
adc
lock
mov
xor
pop
cmps
in
pop
sub
(bad)
inc
mov
nop
sub
or
stos
je
mov
leave
sbb
sti
(bad)
(bad)
out
cli
xor
xchg
into
fstp
mov
and
icebp
int
aam
jp
or
popf
mov
cmp
data16
pop
xchg
aas
fdiv
dec
push
test
push
sub
mov
(bad)
aad
xor
clc
pushf
sbb
xlat
and
cli
jg
(bad)
cmp
jae
jae
cmps
mov
and
jmp
scas
pop
jne
out
clc
mov
add
mov
or
in
(bad)
call
sar
dec
ss
(bad)
(bad)
pop
lea
sbb
lods
dec
xchg
add
mov
call
xchg
mov
xor
movs
test
test
adc
call
push
adc
mov
out
int
mov
retf
daa
jbe
dec
loop
loope
iret
imul
push
sbb
fidivr
paddusw
mov
jno
(bad)
xor
(bad)
stos
addr16
out
ds
adc
aad
push
fld
mov
cli
push
push
sub
mov
mov
jge
sar
push
mov
pushf
arpl
test
jge
fnsave
push
cwde
mov
arpl
jae
dec
aas
cs
(bad)
jg
xor
mov
enter
mov
mov
push
mov
dec
fs
push
loop
mov
or
push
shr
lock
mov
fdivrp
hlt
icebp
int3
cmps
(bad)
(bad)
(bad)
(bad)
dec
mov
or
enter
shr
pushf
xchg
adc
jmp
push
scas
jge
xchg
stos
jl
inc
add
sbb
jae
inc
push
(bad)
(bad)
(bad)
jmp
clc
mov
ret
and
dec
das
cwde
jmp
xor
jmp
fxch
cmps
ret
pop
pop
(bad)
fisttp
or
ins
outs
jp
pop
sub
enter
add
cmc
addr16
mov
popa
lahf
add
pop
icebp
pop
sub
adc
sahf
loopne
and
stos
call
jg
inc
inc
int
pop
out
pushf
mov
or
mov
push
cmp
lock
adc
mov
add
xlat
push
fld
fdiv
adc
sub
sti
xchg
scas
and
mov
jns
or
push
mov
mov
xlat
push
mov
in
mov
push
in
sar
push
adc
(bad)
cmp
add
add
scas
sub
cmp
add
popa
sbb
stos
call
inc
icebp
pop
fdivp
fist
(bad)
(bad)
(bad)
jmp
xchg
(bad)
imul
adc
arpl
out
mov
pop
loope
idiv
inc
sbb
fbstp
jo
rol
movs
jae
(bad)
(bad)
call
adc
mov
or
adc
and
fstp
(bad)
mov
loop
mov
mov
mov
xor
cmp
xor
test
aad
xchg
repz
scas
clc
(bad)
inc
or
cmc
fs
dec
pop
add
arpl
xchg
retf
lea
xchg
(bad)
(bad)
cmp
cmp
cmps
stos
mov
mov
push
loope
mov
xchg
in
pusha
test
pop
dec
pop
loopne
dec
jmp
jb
lea
in
(bad)
call
ror
xor
xor
retf
push
jmp
xchg
add
stc
(bad)
rol
es
out
(bad)
dec
inc
push
pop
inc
out
xor
iret
loope
(bad)
adc
in
sahf
add
(bad)
call
adc
inc
fs
lods
rcr
mov
and
fisttp
retf
jns
leave
pop
cld
adc
cmp
movs
mov
sbb
push
add
xchg
push
arpl
mov
jg
aad
rcr
adc
mov
retf
push
mov
sbb
out
xchg
pop
fnstsw
push
leave
cdq
jbe
stc
int
or
or
jl
mov
iret
cmps
stos
mov
lock
call
push
jp
sub
mov
jg
xor
rcr
into
(bad)
(bad)
call
jl
pop
loop
(bad)
in
pop
in
fimul
retf
ss
test
jne
mov
(bad)
(bad)
push
jge
clc
pop
push
dec
jae
jbe
repnz
xor
dec
push
retf
mov
lock
hlt
jg
xor
cld
dec
pop
ret
test
(bad)
les
jl
cmp
jne
lods
adc
(bad)
dec
(bad)
(bad)
jmp
cld
push
cmp
fnstsw
fucomp
xor
mov
inc
xor
mov
and
jmp
jle
(bad)
in
mov
div
xchg
jl
pop
sti
mov
(bad)
dec
inc
in
push
clc
adc
(bad)
clc
fld
push
sub
xor
mov
test
(bad)
push
and
out
push
mov
cs
call
std
ror
sti
(bad)
(bad)
(bad)
jmp
mov
cli
cmp
sub
stc
xchg
imul
je
dec
ins
bound
mov
(bad)
(bad)
(bad)
jmp
mov
loopne
cmc
xor
std
mov
aad
push
xchg
cs
cmps
inc
inc
mov
(bad)
(bad)
(bad)
(bad)
fistp
sahf
lea
and
inc
jne
imul
sar
loope
cld
fild
and
lock
call
push
sbb
mov
imul
mov
pop
jae
repz
push
cmp
(bad)
mov
and
inc
and
das
add
sub
xor
aaa
pusha
ret
pop
lock
stos
jecxz
pop
sub
sub
xchg
cmp
mov
dec
xchg
movs
aas
rcr
push
out
fiadd
cld
test
stos
and
lock
call
mov
and
std
push
mov
daa
out
das
(bad)
mov
stc
mov
(bad)
call
jb
mov
and
or
mov
ret
cmp
sbb
push
mov
push
fsubr
addr16
xchg
jns
rcr
dec
push
(bad)
(bad)
call
in
div
cld
mov
adc
aam
loop
stos
and
mov
(bad)
(bad)
jmp
ds
and
mov
inc
sub
sahf
push
lahf
cmp
repnz
(bad)
(bad)
(bad)
jmp
retf
call
dec
push
mov
dec
je
pop
sub
cmovg
mov
daa
(bad)
jg
cmc
or
jmp
cs
cmc
pop
repnz
mov
(bad)
out
pusha
xchg
lock
xor
int
mov
test
cwde
jns
cmp
mov
fstenv
xchg
fdiv
arpl
lods
cmps
mov
mov
jle
push
jmp
fnclex
(bad)
(bad)
dec
jno
pop
repnz
mul
push
loopne
jg
inc
rcr
adc
aas
push
mov
push
ja
inc
inc
cmp
aas
fst
adc
clc
dec
pop
sahf
jg
pushf
and
fild
lods
int3
les
mov
scas
cli
jmp
aaa
push
addr16
or
icebp
jecxz
std
in
(bad)
fs
adc
outs
pop
jmp
(bad)
dec
repnz
cmp
retf
repnz
imul
mov
inc
inc
or
std
(bad)
(bad)
dec
leave
and
mov
int
sti
fstp
test
pusha
test
adc
(bad)
call
ror
jp
aam
fdiv
lea
push
adc
sbb
pusha
dec
cld
add
(bad)
inc
or
fidiv
mov
cmp
test
mov
push
pop
(bad)
aam
or
arpl
mov
mov
inc
push
xchg
scas
ins
retf
dec
outs
sub
adc
xchg
add
int3
in
cmp
stos
(bad)
(bad)
(bad)
call
cmp
jle
test
cmp
test
stos
mov
into
aad
pop
xchg
inc
inc
sub
(bad)
call
inc
sbb
mov
pop
(bad)
pop
imul
test
mov
pop
(bad)
pop
and
add
test
adc
(bad)
(bad)
(bad)
out
ficom
pusha
sbb
jne
ret
push
imul
xchg
push
mov
call
cmp
int
repnz
mov
shl
stc
into
aas
test
cmps
pop
out
aaa
fwait
pcmpeqd
mov
xor
jecxz
push
fsub
bound
cmp
sbb
cmp
aaa
std
(bad)
jns
jecxz
adc
std
dec
push
test
into
inc
pop
call
(bad)
call
mov
mov
mov
aad
stc
ja
std
sahf
dec
gs
push
push
daa
out
loopne
in
retf
push
xchg
cmps
(bad)
call
sbb
sbb
dec
arpl
jns
dec
movs
xor
into
mov
cmp
(bad)
(bad)
jg
push
push
inc
jecxz
push
sub
pop
jp
xlat
cmp
xor
(bad)
cmp
cmc
xor
js
nop
sub
jp
push
inc
xchg
add
jo
addr16
(bad)
(bad)
inc
inc
ret
out
mov
mov
aam
push
in
iret
frstor
sti
ds
(bad)
(bad)
jg
mov
jo
call
call
out
cmp
jns
test
(bad)
(bad)
(bad)
call
(bad)
out
jle
mov
(bad)
cmp
lods
and
xchg
test
push
(bad)
(bad)
call
sbb
xchg
ins
in
hlt
test
iret
jmp
mov
mov
(bad)
dec
ror
jae
xchg
out
pop
mov
inc
cmc
mov
(bad)
in
test
xchg
or
dec
mov
mov
adc
push
dec
add
sti
adc
lods
pop
lea
data16
sti
inc
mov
(bad)
(bad)
lahf
jbe
rcr
inc
inc
fs
mov
aas
fwait
or
(bad)
mul
cmc
mov
or
jns
lahf
or
push
ins
pop
(bad)
shl
pop
(bad)
(bad)
(bad)
push
mov
cli
adc
retf
inc
xchg
aad
cmps
cmps
sbb
rcl
pop
call
push
out
jl
sbb
movs
jo
jmp
jmp
mov
push
ss
cdq
lahf
ins
dec
jl
jo
or
fwait
call
push
out
call
sbb
(bad)
jmp
and
enter
xchg
dec
popf
mov
jbe
adc
jmp
stos
adc
cmps
pop
xchg
scas
xor
mov
(bad)
and
fsub
push
pop
je
xchg
dec
(bad)
sub
mov
outs
adc
mov
sbb
cs
jg
(bad)
es
mov
cwde
aaa
mov
jge
pop
hlt
lods
jnp
imul
push
popf
movs
int
add
mov
pop
pop
mov
xor
js
jbe
mov
lods
inc
cmc
(bad)
call
not
clc
pop
dec
daa
add
shr
sar
push
sahf
sahf
mov
loope
push
jl
movs
mov
jle
mov
jecxz
aad
(bad)
(bad)
push
jns
gs
scas
repnz
popf
inc
out
int3
retf
cmp
mov
xor
mov
cmp
(bad)
call
shr
in
or
loope
inc
push
adc
pop
jns
test
stos
pop
mov
xlat
ja
pop
cmp
jns
jp
mov
pop
mov
inc
mov
int3
inc
scas
call
mov
add
jmp
int3
retf
sbb
push
aam
fisttp
loope
call
jg
test
out
sub
(bad)
(bad)
jmp
(bad)
mov
add
cmp
mov
out
push
es
jae
(bad)
movs
loop
ss
call
push
sub
rcr
hlt
fsub
test
sub
arpl
idiv
or
jmp
or
add
mov
aas
retf
test
dec
clc
mov
mov
dec
xor
pop
ret
(bad)
push
shl
cdq
out
or
cs
xor
dec
cmp
fisttp
cdq
js
retf
mov
dec
pop
ret
outs
mov
(bad)
mov
aaa
aas
jg
imul
(bad)
call
sub
and
fimul
into
pop
push
enter
nop
or
adc
xlat
mov
pop
mov
mov
fcmovnb
push
dec
mov
and
(bad)
adc
fbstp
mov
(bad)
jg
out
ffree
inc
add
movs
ins
inc
dec
mov
sub
add
mov
xor
pop
lea
sub
cld
jmp
std
fmul
repnz
not
addr16
(bad)
(bad)
(bad)
fist
dec
aad
sti
stos
push
retf
xlat
shl
(bad)
aad
jo
add
jle
sub
jle
aaa
ins
clc
push
sbb
push
pusha
inc
mov
mov
sbb
(bad)
dec
in
stos
(bad)
cwde
sbb
mov
outs
xor
cld
bound
xchg
adc
mov
pop
icebp
(bad)
pop
mov
mov
add
out
test
outs
(bad)
(bad)
(bad)
jmp
xor
fdivr
fucomi
push
mov
mov
scas
mov
mov
popa
or
add
cmp
loop
add
push
mov
movs
adc
aaa
mov
in
adc
lea
scas
and
pop
jne
jg
call
jmp
xchg
xor
jp
push
movs
mov
repnz
ret
mov
push
(bad)
(bad)
(bad)
dec
int
(bad)
and
xor
mov
push
(bad)
jmp
xor
sbb
std
int3
sahf
mov
lods
(bad)
mov
ins
leave
(bad)
(bad)
sub
ror
in
out
fisttp
and
(bad)
fisttp
nop
std
cwde
xchg
mov
repz
jmp
lods
sbb
pushf
test
(bad)
jmp
movs
test
sbb
sbb
outs
pop
loopne
repz
push
and
sar
out
xor
aas
xchg
stc
sti
mov
pop
push
ins
scas
pop
ins
xchg
jo
ins
or
ret
pop
xlat
mov
outs
cli
(bad)
(bad)
js
xor
sbb
pusha
aaa
jg
mov
mov
sahf
cmp
mov
jns
ss
in
pop
xor
adc
(bad)
jg
das
popw
cdq
jae
inc
jno
sbb
enter
jae
pop
dec
cwde
xchg
pop
(bad)
(bad)
(bad)
(bad)
stc
xor
pop
leave
xchg
shr
pushf
scas
(bad)
push
pop
fsubr
sub
retf
enter
pop
mov
(bad)
out
inc
cmp
jnp
in
cmp
sbb
icebp
shr
mov
(bad)
(bad)
(bad)
(bad)
jge
jmp
in
jnp
xchg
jo
sbb
cmp
pop
push
repnz
mov
jae
xor
(bad)
(bad)
dec
mov
mov
xor
xor
sbb
pop
sub
add
jp
xchg
(bad)
(bad)
dec
ror
mov
cmp
aaa
lock
cli
push
das
xchg
addr16
hlt
dec
jno
push
out
(bad)
(bad)
push
stc
inc
adc
stc
(bad)
popa
push
aas
mov
mov
or
rcr
ret
call
hlt
(bad)
(bad)
jmp
rcl
cdq
cmps
and
mov
ins
outs
or
ret
in
cmp
cli
push
movs
ss
(bad)
call
fyl2xp1
fwait
sub
xchg
imul
add
(bad)
(bad)
mov
in
(bad)
or
jg
push
mov
stos
fidivr
dec
and
sbb
inc
mov
cwde
push
(bad)
call
sbb
sbb
push
mov
sbb
mov
leave
and
call
popf
int3
iret
std
fidiv
inc
add
retf
xlat
cli
push
cmp
jl
push
xor
add
mov
mov
stos
push
orps
fwait
inc
test
arpl
(bad)
(bad)
(bad)
inc
pop
jo
in
gs
pushf
sbb
rol
cmp
cli
jbe
mov
jmp
mov
add
push
mov
push
ret
and
xor
ret
daa
movs
and
xlat
pop
call
cli
sbb
jne
(bad)
(bad)
call
and
pop
mov
mov
ds
push
jno
mov
or
call
loopne
adc
xor
lds
icebp
or
outs
add
test
xchg
mov
cld
sub
dec
or
sar
(bad)
mov
push
repz
inc
leave
fdiv
cmc
(bad)
div
in
inc
std
fistp
mov
jnp
les
sub
xor
fisubr
inc
ins
aam
dec
mov
inc
(bad)
mov
lock
jne
pop
sub
sub
aam
(bad)
fbstp
ss
les
cmp
or
and
push
or
cmc
(bad)
(bad)
jmp
ds
mov
pop
sbb
sbb
xlat
in
adc
jmp
pop
dec
mov
int
clc
jg
rol
addr16
pushf
jns
jg
mov
aad
push
dec
inc
or
gs
mov
clc
(bad)
(bad)
inc
adc
imul
mov
fistp
push
cmp
iret
push
dec
pusha
mov
icebp
scas
pop
pop
xchg
push
xchg
sti
pop
aad
xchg
push
imul
xlat
sbb
fild
loop
cmp
cmp
dec
or
push
pop
cmc
jae
pop
test
enter
mov
ds
(bad)
(bad)
(bad)
jmp
dec
out
mov
mov
push
cmp
pop
mov
mov
sub
loopne
call
pushf
addr16
adc
jmp
(bad)
mov
push
xor
or
dec
mov
cld
mov
dec
mov
iret
(bad)
xchg
jg
(bad)
fstp
(bad)
mov
les
xchg
(bad)
call
and
cmp
and
and
(bad)
lock
jmp
add
dec
cld
mov
fcom
mov
mov
mov
popa
pop
dec
(bad)
jmp
les
dec
gs
lahf
sbb
pop
add
sahf
push
imul
xor
push
mov
or
sahf
mov
sbb
lock
(bad)
jmp
cmps
sbb
(bad)
aam
xchg
mul
loope
fdivp
adc
push
inc
dec
stc
xchg
ret
jl
sub
jae
pop
cld
(bad)
(bad)
call
xchg
es
xor
sub
out
cmc
imul
popf
mov
scas
cld
(bad)
push
fdiv
inc
fstp
fs
mov
xchg
mov
clc
loopne
cld
mov
(bad)
(bad)
call
mov
pop
scas
push
loope
mov
mov
in
jbe
push
mov
(bad)
(bad)
(bad)
call
fnstsw
push
dec
ret
cmp
std
and
movs
aam
adc
fsubr
(bad)
(bad)
(bad)
cmp
mov
dec
sub
inc
mov
adc
frstor
call
mov
sbb
xor
cmps
shl
ror
arpl
jmp
pop
cmp
cli
mov
loope
jmp
inc
mov
push
pop
sbb
(bad)
mov
xor
sub
jno
pop
adc
lock
mov
hlt
stos
repnz
push
dec
jbe
inc
xchg
xchg
dec
sub
jmp
aam
ds
out
jmp
and
das
int
cmp
inc
xor
dec
mov
pop
retf
dec
lods
imul
jge
(bad)
(bad)
(bad)
(bad)
js
add
and
iret
lods
arpl
jl
cmp
out
clc
(bad)
mov
aam
adc
adc
(bad)
(bad)
push
or
fdivr
out
jmp
pushf
and
shr
(bad)
(bad)
call
idiv
adc
adc
(bad)
stos
pop
mov
repnz
out
sbb
jecxz
(bad)
(bad)
jmp
push
jle
ja
test
lea
add
push
add
add
push
or
cli
aad
adc
rcl
sub
(bad)
mov
aam
stos
mov
xchg
push
cmp
fwait
imul
dec
lock
aam
mov
dec
adc
outs
jp
mov
pop
mov
add
ds
mov
shl
test
out
lods
and
mov
(bad)
mov
in
mov
sub
xchg
fsubr
(bad)
jp
pop
mov
inc
mov
int
hlt
pop
mov
dec
xor
arpl
fs
fst
adc
js
pop
or
test
ror
scas
addr16
idiv
cmc
(bad)
(bad)
(bad)
jmp
(bad)
sti
lods
dec
neg
push
mov
into
stc
sets
fdiv
lods
dec
jecxz
(bad)
adc
mov
lds
nop
lock
js
or
call
mov
push
jp
pop
loop
jns
scas
cmps
outs
ds
mov
(bad)
jmp
mov
and
psraw
jae
push
stos
push
push
cmp
(bad)
call
fnstenv
cdq
xchg
ins
mov
cmps
(bad)
xchg
jle
inc
pop
xchg
push
clc
adc
pop
int3
(bad)
scas
clc
(bad)
(bad)
sti
fmul
fmul
out
and
in
cmp
inc
push
dec
(bad)
(bad)
call
in
not
nop
pop
loope
inc
xchg
outs
inc
lds
jmp
test
and
sbb
jbe
jl
push
stc
imul
stc
push
push
jecxz
mov
das
sar
push
fisubr
pop
dec
aam
mov
(bad)
(bad)
(bad)
push
les
ret
sbb
lahf
mov
fcom
xchg
mov
sti
icebp
jl
std
or
dec
inc
push
fsubr
xchg
mov
arpl
(bad)
mov
jecxz
(bad)
(bad)
stc
mov
lahf
test
retf
fist
sub
sbb
pop
ins
adc
arpl
(bad)
int3
aaa
retf
lea
stc
test
call
stos
jp
cmp
inc
retf
pushf
sub
mov
loop
lahf
inc
ficomp
scas
aas
js
(bad)
(bad)
inc
(bad)
ds
sbb
add
sti
retf
dec
xchg
cmp
sbb
jne
int3
test
dec
(bad)
shr
mov
push
jbe
mov
mov
cmps
fdiv
cmp
pop
push
int
test
aaa
(bad)
(bad)
(bad)
inc
idiv
out
movs
cmps
(bad)
je
rol
sahf
inc
cmovp
cs
pop
aam
fpatan
cmp
cli
(bad)
(bad)
dec
adc
retf
xchg
xchg
pop
loope
scas
in
loop
mov
inc
xchg
stc
mov
movs
sub
outs
inc
mov
pop
pop
or
cmps
xlat
xor
(bad)
(bad)
(bad)
mov
xor
into
cld
je
xchg
in
mov
dec
cmp
jbe
xor
clc
pop
test
sbb
loope
(bad)
push
loop
mov
push
cmc
mov
jmp
jnp
pop
repnz
sub
mov
(bad)
mov
rcl
call
icebp
out
jecxz
xchg
push
ins
ins
(bad)
lock
dec
cdq
int
and
sub
ds
fs
or
aam
and
cmp
int
jl
and
(bad)
(bad)
jmp
add
sbb
fidivr
ins
cli
rol
mov
stos
xlat
mov
imul
cmp
mov
mov
jg
(bad)
jmp
xchg
sar
(bad)
cli
stos
jne
pop
cwde
push
lods
sar
or
dec
fstp
fmul
pop
neg
mov
inc
in
push
out
js
mov
sub
push
test
push
(bad)
(bad)
(bad)
call
and
jge
and
pushf
std
sub
xor
pop
inc
sbb
(bad)
test
(bad)
(bad)
call
mov
xchg
fnstenv
aad
fdiv
jg
stos
dec
cmp
jmp
or
(bad)
(bad)
(bad)
inc
push
inc
cmp
jne
test
sub
ret
psrad
xchg
sbb
adc
addr16
loop
fstp
pop
fimul
int3
dec
loop
(bad)
jmp
mov
rcl
push
xchg
rol
or
and
jb
cli
jp
fwait
(bad)
(bad)
mov
hlt
add
(bad)
lock
xor
loope
and
(bad)
push
inc
out
pop
mov
jmp
dec
mov
test
(bad)
lods
mov
adc
inc
ret
mov
and
ud1
test
stos
(bad)
push
xor
sbb
int3
jmp
(bad)
push
sar
sbb
cmps
mov
addr16
test
ja
dec
pop
dec
jns
adc
push
cmp
sub
mov
je
xlat
jae
mov
cld
mov
fcomp
dec
adc
or
sti
push
fldz
scas
mov
fsub
sub
push
push
mov
mov
cs
neg
sub
sub
(bad)
jmp
pop
sbb
scas
out
movs
jnp
xor
les
mov
cld
sti
xlat
or
dec
mov
mov
daa
call
les
mov
bound
test
dec
loop
push
inc
push
mov
(bad)
loop
push
(bad)
(bad)
(bad)
push
jno
xor
inc
pop
outs
mov
cli
push
scas
das
int3
mov
and
clc
(bad)
clc
rcr
adc
xchg
les
cmp
jmp
jmp
push
sbb
sbb
hlt
pop
cld
push
push
and
sbb
mov
mov
dec
stc
xchg
xchg
cmp
frstor
fs
pop
stos
xor
mov
(bad)
mov
add
and
(bad)
(bad)
inc
loope
in
loopne
mov
or
cld
or
cmps
ins
data16
clc
inc
mov
jmp
cmp
mov
mov
loop
mov
and
nop
loopne
cli
push
ret
enter
(bad)
(bad)
ds
or
dec
int
stos
pusha
outs
or
fidivr
into
ffree
(bad)
lods
jae
ret
pop
(bad)
(bad)
(bad)
call
lods
outs
(bad)
xchg
fstp
sbb
out
push
xor
lea
push
loopne
stc
mov
(bad)
(bad)
push
mov
ret
push
mov
inc
cdq
test
pop
inc
xor
cmps
rcr
(bad)
push
aaa
scas
push
cmc
push
xchg
cmps
push
xchg
sbb
cwde
cmc
xchg
dec
(bad)
(bad)
call
mov
mov
in
mul
cmps
shl
arpl
jne
xchg
(bad)
(bad)
(bad)
push
aam
fidivr
add
fcmovu
out
push
idiv
lahf
sub
and
lock
gs
mov
movs
retf
lahf
and
mov
pushf
xor
mov
test
sahf
mov
(bad)
inc
inc
fisttp
into
fdivrp
(bad)
inc
enter
and
inc
mov
xchg
bnd
fisttp
imul
ds
repnz
sbb
adc
pop
loope
sahf
loope
stc
gs
jne
cmp
dec
outs
clc
(bad)
call
inc
inc
push
jp
call
inc
jp
out
mov
std
in
mov
retf
and
pop
cmp
rcr
mov
cmp
lods
ficom
add
call
xchg
dec
stos
cwde
cs
jp
stos
dec
xchg
adc
inc
or
in
adc
inc
jmp
xor
pop
xor
aas
dec
sti
fwait
sub
push
mov
xchg
repz
xchg
je
arpl
mov
mov
adc
clc
cld
jg
jge
(bad)
fisttp
fwait
ss
jl
into
shr
loop
(bad)
out
les
clc
push
loopne
in
xchg
inc
sub
sar
stos
jno
mov
std
(bad)
(bad)
(bad)
mov
mov
push
xchg
sub
xchg
pop
sar
sbb
lea
out
sti
rol
mov
(bad)
push
push
sahf
sub
sbb
adc
cs
jno
call
jle
aas
push
xlat
clc
jmp
std
jg
push
or
lods
and
sub
out
cli
push
in
jl
arpl
cdq
jbe
xor
xchg
pusha
ds
leave
sub
jle
mov
fs
mov
(bad)
(bad)
push
jne
sbb
nop
mov
jge
pop
fcomip
cmp
push
outs
stos
adc
inc
stc
jmp
(bad)
jmp
cdq
mov
out
add
jecxz
dec
ja
neg
mov
or
outs
mov
loop
retf
loopne
push
sub
jmp
stc
jp
fist
sar
sub
je
lods
(bad)
mov
push
jae
mov
and
xor
ja
pop
mov
ret
popa
push
push
mov
stos
(bad)
lock
dec
in
jbe
(bad)
fisttp
(bad)
push
neg
cli
(bad)
repz
(bad)
(bad)
mov
ret
jecxz
lods
cmp
push
in
mov
hlt
scas
mov
cmp
jmp
(bad)
xchg
sub
jmp
mov
jg
jge
xchg
mov
in
mov
out
xchg
adc
sbb
fwait
pop
cdq
and
and
in
fidivr
out
jg
loope
arpl
sub
cmps
bound
in
push
sub
jb
shl
loop
push
push
cmps
jle
(bad)
(bad)
call
popf
ror
and
fstp
or
div
mov
and
adc
inc
mov
bound
lock
rcl
lahf
inc
iret
jg
cli
push
stos
cli
xchg
dec
call
dec
mov
jp
mov
ja
push
jb
and
sbb
mov
cld
jmp
xlat
std
sub
movs
pop
or
cdq
call
mov
mov
ret
in
cmps
popf
dec
mov
jmp
push
das
sbb
mov
test
push
call
mov
dec
xlat
aam
cld
pop
das
test
in
iret
cwde
lods
mov
pop
nop
lods
in
das
(bad)
(bad)
call
pop
mov
and
outs
jno
jp
(bad)
and
pop
xor
xor
dec
call
sahf
or
sar
cs
xchg
(bad)
(bad)
(bad)
inc
push
dec
test
stos
mov
jbe
mov
xchg
push
fistp
xlat
fisttp
shr
dec
xor
int
push
inc
ret
xchg
es
mov
jmp
dec
call
or
aaa
cld
sub
dec
cs
aas
add
pop
stc
xchg
sub
push
(bad)
jp
jb
es
mov
cmp
fcomip
enter
scas
xchg
and
(bad)
(bad)
(bad)
fbstp
aam
mov
cld
jb
adc
jp
jp
fnstsw
jg
clc
(bad)
mov
das
(bad)
clc
push
lahf
or
leave
jmp
(bad)
cmp
mov
inc
das
shl
jle
xchg
dec
int3
adc
sahf
cmc
add
dec
lock
(bad)
call
push
inc
lock
loope
adc
loop
mov
jg
xor
adc
inc
ret
add
call
dec
outs
out
xchg
xor
inc
adc
or
cmp
loope
pusha
jbe
gs
(bad)
(bad)
(bad)
call
pop
pop
mov
lea
jnp
mov
scas
jno
sahf
mov
(bad)
jmp
jmp
fwait
mov
sub
jbe
mov
inc
mov
jmp
ss
xchg
pushf
jle
xchg
push
(bad)
fidiv
add
lock
xchg
sub
pop
xor
std
inc
push
rcl
adc
xor
clc
out
inc
call
adc
(bad)
mov
cmp
cli
push
(bad)
in
inc
xchg
cmc
jmp
inc
mov
pop
mov
and
cmp
nop
jl
lock
mov
(bad)
mov
mov
outs
clc
mov
cdq
repnz
xor
mov
lods
or
mov
stos
gs
aad
dec
loopne
jmp
push
outs
(bad)
out
push
lahf
ror
cs
cld
jge
sar
pushf
sti
mov
hlt
jnp
(bad)
(bad)
jmp
retf
outs
nop
popf
ret
std
(bad)
stos
xchg
dec
or
mov
scas
stos
lahf
loope
sbb
(bad)
mov
sar
and
lea
out
(bad)
shl
and
push
jl
loopne
ja
in
mov
jg
mov
retf
je
aad
lea
(bad)
call
dec
mov
cli
jg
int3
push
(bad)
call
jg
shr
call
cmps
xchg
aam
ja
cmc
enter
movs
aaa
xchg
adc
(bad)
(bad)
frstpm(287
inc
(bad)
dec
lahf
in
mov
in
in
inc
int3
popf
call
inc
xchg
shl
rol
dec
lahf
or
sub
push
dec
das
out
pop
adc
mov
cmp
ss
sub
jl
lock
arpl
mov
call
rcl
(bad)
(bad)
(bad)
fisttp
pop
push
test
fstp
nop
dec
push
fdiv
stos
repnz
mov
pop
pop
pop
inc
jl
test
aas
repz
ret
pop
ret
add
aas
cld
out
aas
jmp
nop
(bad)
mov
mov
jle
sbb
out
cli
or
aas
cmp
inc
mov
pusha
fstp
popf
int
push
pop
cdq
out
or
pop
(bad)
(bad)
inc
ja
mov
sbb
fcomi
dec
sub
cmp
stc
iret
cmp
mov
(bad)
fcomip
in
cmp
pop
mov
cmp
push
(bad)
xlat
pop
mov
sbb
(bad)
jmp
ins
aaa
sbb
xor
jb
lahf
xchg
(bad)
sbb
push
cmp
xor
scas
xlat
xor
out
scas
xchg
(bad)
(bad)
(bad)
call
dec
stos
jnp
and
popf
repz
nop
mov
or
iret
pop
xchg
push
lods
sbb
xchg
imul
(bad)
(bad)
dec
or
push
adc
xor
push
xor
push
in
mov
(bad)
(bad)
(bad)
push
dec
vmread
fwait
inc
sar
icebp
stos
lds
fwait
pop
nop
sub
dec
cmp
loope
inc
inc
scas
ret
cmps
adc
clc
outs
in
sahf
add
and
in
(bad)
(bad)
dec
and
sub
sbb
movs
adc
add
aam
call
jg
pop
cld
dec
aam
fst
dec
xchg
(bad)
inc
rcl
dec
inc
call
add
jg
(bad)
stc
dec
sar
jns
loope
mov
dec
iret
adc
loop
pop
xchg
(bad)
(bad)
(bad)
push
sub
adc
xor
or
push
pop
jnp
movs
push
mov
xor
(bad)
dec
mov
mov
sub
test
mov
fstp
xor
(bad)
(bad)
push
push
mov
cdq
xchg
outs
retf
fdiv
jbe
in
cmps
adc
fldenv
fstp
(bad)
(bad)
cmp
retf
imul
fwait
loop
sbb
xor
test
(bad)
call
xchg
test
lds
push
mov
ss
ins
jg
lods
jns
scas
data16
(bad)
(bad)
push
ror
xchg
inc
repnz
nop
pop
push
and
cmp
ss
lock
(bad)
jmp
cmp
test
xchg
xor
xchg
xchg
add
inc
ins
jmp
ret
or
lds
jg
(bad)
loopne
sti
or
jp
jmp
iret
icebp
data16
popa
lods
pop
lock
stos
outs
cs
xchg
test
call
jb
mov
jne
push
mov
xor
xchg
clc
popf
pop
ret
add
cli
adc
xchg
xchg
ret
cs
lock
dec
jne
ja
lods
mov
(bad)
(bad)
(bad)
call
rcl
cld
cmp
shr
in
hlt
lahf
or
repz
in
fst
push
cld
out
or
nop
cmp
outs
sbb
add
call
jecxz
rol
out
jecxz
fstp
mov
scas
add
xchg
imul
push
loop
cmp
(bad)
(bad)
inc
cmp
inc
mov
xlat
call
inc
jl
ja
or
(bad)
(bad)
(bad)
jle
in
stc
cmp
pop
jle
out
(bad)
sbb
mov
arpl
(bad)
(bad)
(bad)
push
mov
mov
mov
push
int3
ror
inc
sbb
ja
(bad)
hlt
retf
iret
pushw
pop
std
(bad)
inc
mov
xlat
(bad)
nop
mov
ret
loopne
pop
movs
aas
imul
(bad)
jmp
mov
and
jae
fs
lea
sar
pop
clc
jge
popa
mov
sbb
mov
call
cmp
int3
arpl
dec
and
into
das
dec
sbb
(bad)
(bad)
(bad)
in
xor
sahf
pop
js
inc
mov
je
push
popf
cmps
fcmovnu
jmp
neg
pop
push
adc
and
test
(bad)
(bad)
jmp
repnz
or
and
push
xchg
ins
test
stc
cld
xor
std
mov
(bad)
(bad)
out
mov
push
xchg
mov
pop
push
xchg
inc
push
adc
popf
es
push
jmp
call
test
fstp
adc
xchg
and
gs
icebp
sbb
scas
mov
sar
mov
(bad)
mov
jg
repz
frstor
ja
sbb
into
jl
cmps
js
les
(bad)
(bad)
mov
fucomi
push
cmp
mov
pop
leave
cmp
add
push
pop
xor
mov
(bad)
fsubr
dec
mov
push
jle
mov
ss
mov
ss
cmps
sbb
fdiv
loope
mov
loopne
jmp
pop
ins
adc
add
sbb
(bad)
call
inc
pop
dec
sub
or
add
ret
fcmove
xlat
cmc
pop
push
inc
imul
jmp
fld
not
cmp
and
or
pop
in
leave
bound
add
(bad)
jg
hlt
call
out
adc
test
jg
pop
(bad)
in
std
int3
and
sub
pop
jle
jg
jmp
adc
mov
cmp
outs
jp
xor
push
fist
ins
out
cmc
imul
jb
push
dec
sub
or
out
fist
cld
call
sub
data16
dec
push
js
add
xchg
hlt
jmp
jmp
iret
xchg
js
jg
add
jle
jae
push
call
and
aas
adc
(bad)
mov
ret
push
ja
outs
lods
(bad)
dec
jb
cdq
fmul
inc
xchg
xor
xor
push
or
dec
cmp
jmp
shl
jns
adc
jge
xlat
movs
push
sbb
(bad)
(bad)
inc
pop
ss
std
mov
cmp
test
mov
inc
pop
dec
shr
aaa
idiv
(bad)
dec
mov
sbb
jp
lods
jmp
popa
adc
arpl
jl
jnp
xchg
sub
xchg
test
leave
and
dec
mov
add
adc
(bad)
inc
push
pop
sub
or
or
xchg
aam
pop
enter
push
inc
(bad)
(bad)
(bad)
mov
mov
mov
jp
pop
and
jbe
retf
mov
stos
repz
adc
(bad)
jmp
mov
jg
or
inc
sbb
inc
(bad)
(bad)
inc
fisub
add
xchg
rcr
(bad)
scas
jne
jge
jmp
mov
jl
ss
xor
pop
mov
dec
push
mov
jmp
cld
or
mul
mov
cmp
stc
sub
xor
inc
ins
sbb
sub
movs
shl
adc
push
std
ja
push
xlat
inc
lods
in
and
cmp
sbb
push
rcr
(bad)
jg
test
hlt
out
cmps
xchg
or
stos
dec
div
or
(bad)
push
in
mov
and
cmp
cmp
mov
or
push
adc
pop
mov
(bad)
or
cmp
in
les
(bad)
push
sbb
lea
xor
mov
sub
fild
and
mov
(bad)
and
test
mov
push
dec
mov
(bad)
jg
lds
add
inc
in
mov
jl
loope
cs
scas
call
and
in
jmp
push
mov
mov
scas
movs
mov
jbe
fcmovu
out
push
shl
(bad)
xchg
and
jbe
clc
adc
sub
jb
jg
call
jne
jmp
gs
shr
cmp
enter
(bad)
(bad)
call
imul
sbb
xchg
leave
mov
lahf
xor
not
popa
jp
pushf
dec
mov
dec
fidivr
lds
(bad)
(bad)
(bad)
dec
xchg
mov
repz
jbe
ror
fiadd
mov
pop
lock
dec
push
outs
push
bound
mov
mov
cli
(bad)
(bad)
dec
lock
std
mov
outs
scas
out
fs
pop
or
lea
(bad)
call
in
sub
repnz
rcr
ret
imul
pop
inc
mov
inc
adc
push
sub
shr
inc
out
pop
ficom
jnp
xchg
sub
(bad)
pop
jb
ins
(bad)
aam
mov
ret
mov
adc
imul
mov
icebp
(bad)
(bad)
call
rcl
add
push
pusha
jnp
sqrtps
ds
scas
mov
(bad)
jg
fbstp
mov
in
push
dec
adc
sbb
or
imul
imul
(bad)
jg
call
and
pusha
add
dec
sub
push
fiadd
jmp
add
in
cmps
bound
push
pop
movzx
lods
xor
inc
xor
inc
sbb
enter
test
shr
mov
fcom
clc
aad
int
inc
shr
xor
ds
test
mov
sbb
call
inc
adc
adc
sub
sbb
call
(bad)
call
sub
xchg
(bad)
push
or
(bad)
shr
cmp
call
cmp
(bad)
sbb
stos
add
and
test
test
pop
in
pop
(bad)
fnstcw
ins
fsub
add
inc
xor
xor
daa
jb
push
xor
add
push
jb
push
add
push
push
push
jnp
pop
add
xchg
add
js
in
jg
sbb
sub
gs
ror
call
sbb
ins
outs
arpl
ins
mov
inc
or
outs
push
adc
test
div
outs
push
inc
pop
jb
or
mov
sbb
mov
inc
movs
cmc
pop
hlt
je
xor
je
and
mov
jnp
jnp
ret
dec
and
push
pop
or
popa
clc
jae
inc
or
mov
inc
push
lock
jns
sbb
pusha
inc
js
push
lods
fs
sbb
cmp
popa
ins
inc
push
mov
jb
popa
and
repz
dec
dec
or
sub
adc
inc
addr16
sub
and
xor
cmp
push
push
test
cwde
mov
sub
retf
scas
or
jae
outs
je
fcom
and
inc
push
daa
sbb
xadd
bound
jns
add
mov
sbb
and
out
jmp
inc
js
inc
fs
dec
outs
imul
push
push
and
push
pop
iret
push
fxch
ret
ins
fidivr
pop
mov
xor
pop
push
ret
fild
xchg
lds
mov
loop
inc
push
je
cmp
adc
imul
inc
push
adc
das
daa
enter
sbb
neg
cwde
inc
and
test
lods
jne
outs
inc
dec
es
or
lahf
mov
fs
aad
imul
xor
ret
push
push
push
push
sti
cmp
add
inc
jl
(bad)
mov
cmp
xchg
adc
push
imul
sahf
xor
cmp
in
fldcw
inc
dec
push
jns
sbb
lds
mov
dec
fstp
add
fstp
mov
sub
test
inc
gs
fiadd
and
mov
inc
popa
sbb
adc
loopne
and
mov
jo
mov
and
sub
and
fsub
pop
cdq
dec
bound
sub
push
jae
js
pop
xchg
push
jne
mov
loop
sbb
and
outs
push
jl
mov
add
xlat
add
out
mov
mov
rcl
jne
jg
imul
shl
inc
xchg
add
push
inc
test
sbb
rol
adc
mov
jne
pop
popa
dec
sub
jge
enter
clc
ficomp
jbe
mov
and
fst
retf
shl
jne
xchg
sub
push
push
xchg
mov
jle
retf
adc
mov
inc
cmp
imul
pop
imul
ret
push
and
and
or
loopne
add
jl
jnp
push
js
adc
sub
outs
outs
addr16
cmp
push
inc
shl
jo
sub
inc
jo
cmp
fbstp
mov
sub
inc
xor
inc
adc
pop
and
mov
jne
mov
and
jnp
pop
sbb
inc
es
cmps
push
mov
sbb
enter
fs
in
jbe
mov
sti
pusha
pop
popa
bound
push
dec
add
arpl
add
push
icebp
or
add
and
and
outs
gs
sub
xchg
rcr
sub
and
inc
js
mov
sbb
mov
dec
ss
mov
cdq
pusha
test
les
sub
xor
movs
aaa
mov
add
out
and
popa
jp
(bad)
mov
aad
mov
outs
rcr
ss
push
jmp
cwde
xchg
dec
xlat
push
pop
outs
jnp
adc
es
fld
jle
mov
aad
pop
or
sub
pop
or
(bad)
xor
pop
mov
jns
mov
popa
push
in
fisub
(bad)
mov
add
push
or
push
mov
mov
and
repnz
xchg
inc
pop
jae
push
sbb
aaa
adc
imul
adc
adc
xchg
push
jne
inc
arpl
and
fs
adc
sbb
lahf
mov
xchg
push
inc
mov
adc
sub
cmp
xor
imul
imul
xchg
pcmpgtw
sbb
(bad)
pusha
xor
mov
ds
and
addr16
inc
add
maxps
stos
sbb
jo
fst
xchg
sub
inc
dec
daa
adc
push
fcmovb
mov
push
jns
jp
dec
or
stos
in
nop
imul
and
inc
out
outs
pop
fdiv
and
sub
cmp
add
dec
outs
or
and
in
rcl
pop
sub
pop
add
sub
das
ror
and
push
rol
lds
ja
js
lea
mov
outs
xor
xchg
inc
fs
test
in
mov
xor
pusha
cmp
jns
lahf
pop
and
xchg
lahf
push
sahf
dec
ins
mov
inc
pop
fcom
dec
xlat
sahf
fwait
ror
lods
inc
dec
inc
mov
jae
inc
ins
jne
ret
(bad)
xor
dec
jb
inc
js
dec
or
shr
mov
inc
sbb
adc
fwait
push
dec
mov
sub
movs
dec
js
dec
pop
push
dec
push
xor
mov
sub
pop
fadd
mov
arpl
mov
enter
ins
or
push
push
(bad)
push
arpl
push
sbb
je
sbb
cmc
test
outs
jne
and
mov
adc
mov
mov
ins
adc
pop
sub
dec
inc
sbb
jns
sti
aad
std
adc
outs
adc
jp
push
outs
sbb
and
mov
adc
and
mov
out
(bad)
hlt
faddp
bound
and
ror
jo
jb
dec
jne
push
inc
inc
stos
cs
inc
dec
jbe
jae
das
mov
push
and
je
or
sub
xor
mov
xor
cmps
fist
scas
out
jge
imul
push
push
outs
inc
outs
std
add
je
cwde
gs
outs
gs
shl
dec
add
adc
cmp
in
ficom
xlat
sub
inc
jnp
arpl
and
push
test
sbb
in
cmps
xor
loop
dec
xor
add
and
sub
add
pop
jne
or
pop
and
int
(bad)
imul
xor
xor
ss
add
aam
jmp
jl
gs
shr
ror
adc
call
xor
ds
adc
push
push
or
pop
jo
into
and
cli
imul
lahf
push
outs
daa
out
sub
push
adc
leave
aaa
mov
ins
and
je
and
and
sub
popa
pop
mov
and
add
bound
rcl
daa
jnp
push
pop
jo
cwde
loop
or
inc
mov
lods
pop
pop
inc
jb
ror
ficom
or
add
adc
push
out
outs
jae
dec
jno
fldcw
inc
push
call
inc
ins
jo
imul
popa
mov
cwde
and
dec
popa
pop
jmp
sbb
popa
ds
adc
push
adc
arpl
push
rcl
cs
addr16
loopne
(bad)
pop
push
int3
(bad)
int3
test
xor
int
adc
mov
jge
or
nop
shr
fimul
jae
je
pop
mov
je
inc
add
test
and
push
outs
imul
and
mov
dec
jbe
dec
ins
fstp
popf
push
or
adc
sti
inc
dec
push
dec
inc
push
lock
adc
add
cmp
cwde
and
fisttp
cmp
inc
push
js
retf
popf
jno
rol
inc
push
jns
jnp
pop
or
sub
imul
dec
ins
mov
sar
sbb
inc
and
dec
jp
sbb
sub
jae
jbe
mov
dec
add
push
xor
mov
sti
sub
movs
and
pop
push
arpl
rcr
dec
popa
jb
inc
xchg
sbb
or
cmp
repz
xor
or
add
cs
mov
sbb
jnp
movs
and
sub
mov
push
fisttp
sbb
mov
arpl
jecxz
adc
fbstp
mov
outs
addr16
or
cmp
pop
(bad)
and
movs
imul
mov
hlt
mov
in
out
adc
adc
popf
or
aas
jae
adc
js
ins
and
fsubr
and
mul
or
imul
jo
fwait
mov
push
and
add
cld
in
stos
adc
pop
push
xor
sub
adc
shl
arpl
dec
push
and
adc
outs
arpl
pop
sub
test
or
popf
push
dec
cmp
or
adc
sub
lods
jo
out
xor
std
dec
xor
(bad)
and
outs
in
xor
or
add
jae
int
jae
push
outs
sbb
ja
inc
imul
or
mov
push
popa
imul
mov
pop
push
inc
sbb
mov
add
add
add
leave
adc
sbb
cmp
jb
in
mov
xchg
xchg
in
test
cmps
inc
jae
push
jmp
push
fs
and
aas
fs
jnp
xchg
add
int
jle
dec
mov
data16
or
imul
(bad)
fdivr
add
mov
mov
sbb
dec
adc
mov
cmp
imul
xchg
cdq
mov
or
popa
jns
jne
js
mov
sub
adc
mov
test
dec
mov
pop
dec
jae
in
adc
popa
mov
add
mov
fs
mov
daa
inc
ins
xchg
inc
sbb
jns
add
(bad)
add
outs
addr16
retf
push
and
xchg
lds
cwde
and
arpl
ins
jae
sbb
push
mov
mov
retf
adc
mov
fwait
sbb
fsubr
mov
pop
not
and
sbb
test
sbb
pop
xor
push
xchg
inc
js
and
jmp
cdq
jne
xchg
pusha
inc
sti
lahf
xor
jl
xor
push
adc
pop
pusha
mov
xor
pusha
pushf
sbb
mov
mov
hlt
sub
daa
xchg
ret
fmul
das
popa
stos
lods
xchg
in
sub
pusha
popf
xchg
inc
sbb
sbb
icebp
add
push
mov
imul
mov
push
inc
js
xlat
or
and
sti
inc
inc
and
jno
outs
je
xchg
inc
or
sbb
or
sbb
mov
ja
lods
pop
pop
stos
lock
imul
sub
(bad)
mov
jbe
pop
cmps
arpl
fnsave
fs
xor
test
dec
and
imul
sbb
fcmovnb
sbb
js
adc
jecxz
test
jnp
lahf
adc
sbb
and
and
mov
adc
mov
out
sbb
pop
mov
test
rcr
test
cmps
data16
xchg
mov
push
addr16
inc
icebp
and
jmp
test
mov
test
adc
imul
inc
pop
inc
or
mov
push
out
xor
(bad)
pop
pop
dec
loope
dec
outs
ja
fdivr
popa
ins
ins
scas
lods
xchg
jo
and
imul
inc
fs
jae
jmp
sbb
and
and
sub
push
inc
out
pop
test
xor
xchg
dec
in
jl
jmp
pop
sbb
and
sbb
das
loopne
out
adc
pusha
inc
sbb
(bad)
cs
xor
aaa
movs
add
add
xor
add
cmp
scas
fsubr
test
jae
adc
cli
inc
scas
push
mov
sub
sbb
mov
jmp
popa
add
jbe
pop
inc
int3
inc
fdiv
jae
push
and
pop
int
jg
lea
push
inc
push
dec
add
add
add
in
jmp
add
(bad)
or
add
add
daa
jl
push
adc
cmp
out
shr
or
add
push
(bad)
ret
cs
add
push
div
int
add
movups
and
ret
nop
loopne
cmp
nop
jb
or
leave
sub
cmps
mov
in
fsubr
cmp
adc
adc
aas
cs
stos
push
push
mov
adc
xor
cwde
(bad)
fidiv
and
sub
jnp
fcom
cmps
add
add
push
mov
adc
bound
pop
fs
pop
sub
sti
shr
xor
cmp
js
mov
push
sbb
pop
lahf
fs
(bad)
(bad)
add
fstp
test
dec
je
out
dec
or
xor
inc
scas
cmps
out
jb
mov
mov
fiadd
add
inc
dec
jae
aam
mov
jbe
call
xor
xor
movs
inc
adc
add
mov
add
add
add
inc
xchg
sub
fsubr
jbe
or
jmp
nop
nop
nop
nop
mov
inc
mov
inc
add
jne
mov
sub
adc
jb
mov
add
jne
mov
sub
adc
adc
add
jae
jne
mov
sub
adc
jb
dec
add
jne
mov
sub
adc
adc
jmp
add
jne
mov
sub
adc
adc
jmp
xor
sub
jb
shl
mov
inc
xor
je
sar
mov
jmp
add
jne
mov
sub
adc
jb
inc
add
jne
mov
sub
adc
jb
add
jne
mov
sub
adc
adc
add
jae
jne
mov
sub
adc
jae
add
cmp
adc
lea
cmp
jbe
mov
inc
mov
inc
dec
jne
jmp
mov
add
mov
add
sub
ja
add
jmp
pop
mov
mov
mov
inc
sub
cmp
ja
cmp
jne
mov
mov
shr
rol
xchg
sub
sub
add
mov
add
mov
loop
lea
mov
or
je
mov
lea
add
push
add
call
xchg
mov
inc
or
je
mov
push
dec
repnz
push
call
or
je
mov
add
jmp
call
mov
lea
mov
push
push
push
push
push
call
lea
and
and
pop
push
push
push
push
push
call
pop
popa
lea
push
cmp
jne
sub
jmp
push
outs
jnp
pushf
outs
jnp
xor
imul
