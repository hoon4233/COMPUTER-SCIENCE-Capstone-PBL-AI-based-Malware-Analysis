cli
add
mov
mov
neg
sbb
and
add
js
mov
test
je
mov
push
add
mov
mov
push
add
mov
mov
cmp
je
test
je
cmp
jb
push
push
push
add
add
call
pop
pop
mov
pop
pop
ret
int3
int3
int3
int3
int3
mov
push
mov
mov
shr
inc
movzx
push
push
add
call
test
je
or
jne
call
xor
mov
mov
cmp
je
call
mov
mov
inc
cmp
jl
add
call
mov
add
add
add
add
call
add
call
pop
pop
mov
pop
leave
ret
int3
int3
int3
int3
int3
mov
push
push
mov
xor
cmp
je
push
add
mov
call
mov
cmp
je
push
call
cmp
je
push
xor
cmp
jle
mov
lea
movs
adc
call
mov
mov
pusha
das
inc
add
jbe
call
pop
pop
pop
ret
int3
int3
int3
int3
int3
mov
push
mov
mov
xor
and
test
je
test
jne
add
add
add
call
cmp
jl
mov
test
je
test
jne
mov
push
call
mov
mov
push
lea
push
add
lea
call
mov
cmp
je
test
je
cmp
jb
add
push
push
add
add
call
add
mov
add
call
mov
mov
cmp
je
test
je
cmp
jb
add
push
push
add
add
call
cmp
jl
add
mov
add
call
mov
mov
cmp
je
test
je
cmp
and
add
mov
mov
test
je
mov
inc
imul
cmp
jb
push
push
lea
push
push
call
add
mov
call
add
mov
pop
pop
add
add
xchg
add
add
adc
mov
call
test
jl
mov
mov
mov
mov
push
lea
push
push
mov
add
mov
cmp
jl
mov
add
push
add
call
mov
cmp
jl
mov
mov
add
add
call
cmp
mov
jl
mov
push
lea
push
push
add
mov
cmp
jl
pop
adc
ror
add
mov
call
mov
cmp
jl
mov
add
mov
call
mov
push
add
mov
cmp
je
jl
mov
ret
int3
int3
int3
int3
int3
mov
push
mov
call
mov
mov
pop
ret
int3
int3
int3
int3
int3
mov
push
mov
call
mov
mov
pop
ret
int3
int3
int3
int3
int3
mov
push
mov
call
mov
mov
pop
ret
int3
int3
int3
int3
int3
mov
push
mov
call
mov
mov
pop
ret
int3
int3
int3
int3
int3
mov
push
mov
call
mov
mov
pop
ret
int3
int3
int3
int3
int3
mov
push
mov
call
mov
mov
pop
ret
int3
int3
int3
int3
int3
mov
push
mov
call
mov
mov
pop
ret
int3
int3
int3
int3
int3
mov
push
mov
call
mov
mov
pop
ret
int3
int3
int3
int3
int3
mov
push
mov
call
mov
mov
and
je
cmp
je
xor
jmp
xor
inc
mov
test
jne
test
je
push
call
test
jne
mov
pop
pop
pop
ret
int3
int3
int3
int3
int3
mov
push
mov
mov
push
push
add
call
test
je
mov
mov
call
jmp
call
inc
add
add
int3
int3
int3
int3
int3
mov
push
mov
push
push
mov
mov
mov
mov
xor
cmp
mov
jg
je
cmp
jg
je
sub
je
dec
je
dec
je
dec
jne
add
add
jmp
add
add
call
jmp
add
add
call
jmp
mov
cmp
je
push
call
jmp
call
mov
mov
jmp
add
add
jmp
sub
add
inc
pop
push
push
add
mov
add
call
test
jl
cmp
je
xor
inc
jmp
call
test
jl
test
je
add
jne
and
mov
test
jne
mov
lea
push
add
jmp
lea
push
call
test
jl
add
inc
or
je
push
call
pop
mov
pop
pop
ret
int3
int3
int3
int3
int3
mov
push
mov
push
mov
mov
push
mov
push
inc
push
add
add
add
test
jne
xor
jmp
mov
mov
push
inc
push
add
add
add
test
je
add
mov
add
mov
add
call
add
xor
inc
pop
pop
pop
ret
int3
int3
int3
int3
int3
mov
push
mov
push
push
add
mov
call
push
mov
call
pop
pop
ret
int3
int3
int3
int3
int3
mov
push
mov
push
push
add
mov
call
push
mov
call
add
add
int3
int3
int3
int3
int3
add
mov
cmp
jl
push
pop
cmp
jne
lea
mov
cmp
je
mov
push
add
add
push
call
mov
test
jge
push
push
add
lea
push
mov
mov
call
pop
add
call
mov
mov
pop
xor
pop
call
leave
ret
push
push
add
push
call
mov
cmp
jl
mov
call
mov
xor
cmp
jne
jmp
mov
add
dec
mov
add
mov
sti
add
mov
add
push
call
mov
call
add
call
mov
test
je
mov
push
add
cmp
je
cmp
mov
je
cmp
jae
test
jne
test
jne
jmp
cmp
jae
test
jne
mov
mov
mov
and
and
or
je
mov
mov
dec
add
jmp
mov
call
jmp
mov
call
jmp
add
call
add
add
add
jmp
mov
call
jmp
mov
inc
jmp
mov
dec
movzx
push
mov
call
jmp
mov
call
jmp
mov
call
jmp
lea
push
mov
call
test
jl
xor
cmp
jbe
cmp
je
push
lea
call
mov
push
call
inc
cmp
jb
add
lea
call
mov
push
call
jmp
xor
cmp
jbe
xchg
add
add
ret
dec
je
dec
je
dec
je
dec
je
dec
jne
mov
jmp
mov
jmp
mov
jmp
mov
jmp
mov
jmp
mov
movzx
movzx
movzx
shl
or
push
push
push
add
add
call
test
jne
mov
jmp
test
jne
mov
cmp
ja
mov
test
jne
xor
jmp
movzx
dec
js
cmp
jg
imul
add
mov
mov
mov
mov
mov
mov
mov
cmp
je
jb
inc
add
mov
push
mov
lea
push
call
mov
test
mov
je
mov
add
push
add
cmp
je
cmp
mov
je
cmp
jae
test
jne
test
je
jmp
cmp
jae
test
jne
mov
mov
and
and
or
je
mov
mov
mov
mov
and
and
cmp
jne
cmp
jne
push
push
jmp
cmp
je
cmp
mov
je
cmp
jae
test
jne
idiv
std
add
mov
test
je
add
mov
add
add
add
add
call
mov
test
jl
mov
jmp
push
call
jmp
mov
add
add
mov
test
jl
lea
push
call
mov
test
jl
mov
mov
mov
mov
call
test
je
call
test
je
xor
inc
jmp
xor
mov
xor
push
mov
mov
mov
mov
call
lea
push
push
add
add
inc
mov
add
mov
xor
cmp
sete
mov
lea
push
push
push
add
add
test
je
mov
lea
push
call
mov
lea
push
push
push
add
add
mov
call
push
push
push
add
add
mov
call
pop
pop
pop
leave
ret
int3
int3
int3
int3
int3
mov
push
mov
sub
push
push
mov
xor
cmp
je
cmp
je
push
mov
mov
push
mov
push
push
push
mov
and
call
mov
test
je
add
mov
add
add
add
add
call
mov
test
jl
mov
jmp
push
call
jmp
mov
pop
pop
mov
pop
pop
ret
int3
int3
int3
int3
int3
mov
push
mov
push
push
push
mov
and
call
mov
test
je
add
mov
add
add
add
add
call
mov
test
jl
mov
jmp
push
call
jmp
mov
pop
pop
mov
pop
pop
ret
int3
int3
int3
int3
int3
mov
push
mov
push
push
push
mov
and
call
mov
test
je
add
mov
add
add
push
add
lea
push
mov
mov
call
mov
test
jl
add
mov
sub
add
rcl
add
push
add
mov
add
mov
add
sub
mov
push
mov
add
push
add
lea
push
call
mov
test
jl
cmp
jne
mov
jmp
mov
mov
mov
sub
mov
mov
mov
sub
add
add
add
mov
xor
inc
add
mov
add
lea
add
mov
push
call
mov
test
jl
add
mov
add
sub
add
repnz
inc
add
push
add
mov
add
mov
pop
pop
mov
pop
pop
ret
int3
int3
int3
int3
int3
mov
push
mov
push
push
push
mov
and
call
mov
test
je
add
mov
add
call
mov
test
jl
mov
jmp
push
inc
test
je
push
mov
call
mov
push
lea
push
mov
call
test
je
cmp
jne
push
mov
call
cmp
jne
lea
push
push
mov
call
test
je
mov
cmp
jne
push
mov
call
jmp
cmp
jne
push
mov
call
push
mov
call
push
mov
call
push
mov
call
jmp
cmp
jne
push
mov
call
push
mov
call
jmp
cmp
jne
push
mov
call
push
mov
call
push
jmp
mov
cmp
je
push
add
mov
mov
cmp
je
push
add
mov
push
call
mov
pop
pop
pop
pop
cmp
je
test
je
cmp
jb
add
push
push
add
add
call
mov
leave
ret
int3
int3
int3
int3
int3
mov
push
mov
push
push
mov
mov
mov
cmp
je
test
je
cmp
jb
push
add
push
push
push
add
add
call
test
je
push
push
call
mov
test
je
push
push
push
mov
call
mov
test
jl
add
mov
add
call
test
jne
mov
push
mov
movzx
push
movzx
push
add
mov
push
call
cmp
je
mov
push
push
call
test
je
xor
mov
mov
call
mov
pop
pop
pop
pop
ret
int3
int3
int3
int3
int3
mov
push
mov
push
mov
mov
push
test
je
mov
jmp
lea
mov
mov
int3
int3
int3
mov
push
mov
push
mov
push
mov
cmp
jb
lea
push
call
test
jne
push
call
mov
lea
retf
aaa
inc
add
mov
add
mov
pop
pop
pop
ret
int3
int3
int3
int3
int3
mov
push
mov
mov
test
je
add
push
call
inc
add
adc
pop
pop
ret
int3
int3
int3
int3
int3
mov
push
mov
mov
push
call
pop
jmp
int3
int3
int3
int3
int3
push
mov
call
push
call
mov
mov
test
je
mov
and
mov
call
mov
call
int3
mov
push
mov
pop
jmp
int3
int3
int3
int3
int3
mov
push
mov
pop
jmp
int3
int3
int3
int3
int3
push
push
push
push
push
call
ret
int3
int3
int3
int3
int3
mov
push
mov
push
push
mov
push
xor
test
jne
call
mov
jmp
mov
add
test
jl
push
mov
mov
push
add
mov
mov
cmp
je
test
je
cmp
jb
add
push
push
add
add
call
add
cmp
jge
cmp
jl
xor
mov
mov
mov
mov
mov
mov
mov
cmp
je
cmp
jne
push
lea
call
lea
push
lea
call
cmp
je
cmp
jne
push
jmp
mov
xor
inc
mov
mov
mov
mov
xor
pop
pop
pop
ret
int3
int3
int3
int3
int3
mov
push
mov
push
mov
push
mov
push
mov
push
lea
push
push
push
push
add
call
test
je
xor
inc
jmp
mov
xor
cmp
je
cmp
jne
xor
inc
cmp
jne
movzx
cmp
je
cmp
je
cmp
jne
cmp
jne
test
je
mov
or
or
mov
mov
and
mov
mov
jmp
mov
cmp
jne
mov
jmp
cmp
jne
mov
js
add
push
add
add
call
and
cmp
mov
mov
pop
pop
ret
int3
int3
int3
int3
int3
mov
push
mov
add
add
push
call
push
call
pop
ret
int3
int3
int3
int3
int3
mov
push
mov
mov
push
add
mov
push
add
test
jl
mov
mov
lea
mov
mov
pop
pop
ret
int3
int3
int3
int3
int3
mov
push
mov
cmp
ja
mov
jb
cmp
ja
mov
mov
xor
jmp
mov
or
mov
pop
ret
int3
int3
int3
int3
int3
mov
push
mov
mov
call
sub
je
dec
jne
mov
push
jmp
push
lea
mov
call
mov
mov
mov
shr
not
and
push
mov
push
lea
push
mov
call
add
mov
call
push
mov
call
pop
pop
leave
ret
int3
int3
int3
int3
int3
mov
push
mov
push
push
push
mov
and
call
mov
test
je
add
mov
add
jne
add
add
add
add
call
mov
test
jl
mov
mov
call
mov
test
jl
mov
jmp
mov
mov
add
jmp
mov
mov
xor
lea
call
mov
call
ret
int3
int3
int3
int3
int3
push
mov
call
xor
call
test
jne
call
mov
jmp
pusha
push
add
mov
call
call
ret
int3
int3
int3
mov
mov
mov
ret
int3
int3
int3
int3
int3
mov
push
push
call
mov
test
je
mov
call
mov
pop
ret
int3
int3
int3
int3
int3
mov
push
mov
push
push
mov
mov
push
mov
test
je
test
je
mov
call
mov
pop
ret
int3
int3
int3
int3
int3
mov
push
push
call
add
test
je
mov
call
mov
pop
ret
int3
int3
int3
int3
int3
mov
push
push
call
mov
test
je
mov
call
mov
pop
ret
int3
int3
int3
int3
int3
mov
push
push
call
mov
test
je
mov
call
mov
pop
ret
int3
int3
int3
int3
int3
mov
push
push
call
mov
test
je
mov
call
mov
pop
ret
int3
int3
int3
int3
int3
mov
push
mov
call
mov
add
pop
ret
int3
int3
int3
int3
int3
mov
inc
or
gs
or
mov
xor
xor
inc
lea
stos
add
push
stos
mov
mov
mov
mov
int3
int3
int3
int3
mov
push
push
push
xor
call
mov
test
jne
mov
jmp
cmp
jne
push
push
call
mov
test
jl
mov
mov
pop
pop
ret
int3
int3
int3
int3
int3
mov
push
push
push
xor
call
mov
test
jne
mov
jmp
cmp
jne
call
mov
test
jl
mov
mov
pop
pop
ret
int3
int3
int3
int3
int3
push
call
mov
test
je
add
add
pop
ret
int3
int3
int3
int3
int3
mov
push
mov
mov
mov
test
je
cmp
je
test
jne
xor
inc
jmp
add
mov
pop
add
push
call
mov
mov
test
je
mov
and
mov
call
mov
call
ret
int3
int3
int3
int3
int3
push
mov
call
push
call
mov
mov
test
inc
add
ret
je
test
je
cmp
jb
add
push
push
add
add
call
mov
call
ret
int3
int3
int3
int3
int3
mov
push
mov
cmp
push
push
mov
je
mov
test
jne
mov
jmp
mov
call
test
je
add
mov
push
call
mov
mov
pop
pop
pop
ret
int3
int3
int3
int3
int3
mov
push
mov
push
and
push
lea
push
mov
call
add
add
int3
int3
int3
int3
int3
mov
push
mov
call
mov
test
je
push
call
pop
ret
int3
int3
int3
int3
int3
mov
push
mov
mov
add
and
push
call
pop
ret
int3
int3
int3
int3
int3
mov
push
mov
mov
add
and
push
call
pop
ret
int3
int3
int3
int3
int3
mov
push
mov
mov
add
and
push
call
pop
ret
int3
int3
int3
int3
int3
mov
push
mov
mov
add
and
push
call
pop
ret
int3
int3
int3
int3
int3
mov
push
mov
push
push
mov
and
push
call
mov
test
jne
mov
jmp
push
add
mov
add
call
mov
test
jge
add
lea
push
lea
call
add
call
xor
cmp
jl
lea
push
call
add
jge
push
call
mov
jmp
mov
xor
pop
pop
pop
pop
ret
int3
int3
int3
int3
int3
mov
push
mov
push
push
push
mov
and
push
call
sbb
push
push
mov
call
mov
push
push
add
or
mov
call
jmp
mov
mov
mov
cmp
je
cmp
je
cmp
je
call
mov
test
je
mov
test
je
cmp
je
push
push
push
call
mov
push
push
push
call
test
je
add
call
mov
and
je
push
add
call
cmp
je
mov
lea
push
call
test
je
add
or
cmp
je
test
je
cmp
jb
push
push
add
add
call
mov
cmp
je
test
je
cmp
jb
add
push
push
add
add
call
mov
pop
pop
pop
leave
ret
int3
int3
int3
int3
int3
mov
push
push
push
mov
mov
mov
cmp
je
test
je
cmp
jb
push
push
add
add
call
mov
cmp
je
mov
cmp
jae
test
jne
mov
mov
and
xor
or
je
mov
add
mov
add
mov
call
mov
call
mov
cmp
jne
mov
mov
mov
test
je
and
mov
mov
mov
mov
mov
mov
mov
mov
mov
dec
aam
dec
add
dec
ror
mov
mov
mov
call
cmp
jg
mov
cmp
mov
pop
es
add
add
cmp
jg
add
add
cmp
jle
mov
add
mov
sub
sub
push
add
lea
push
call
mov
mov
mov
mov
jns
inc
add
add
push
call
mov
test
je
jmp
shl
push
add
call
add
mov
test
je
add
mov
add
add
add
call
mov
test
jl
mov
jmp
push
mov
call
jmp
int
call
leave
ret
int3
int3
int3
int3
int3
mov
push
mov
mov
push
call
pop
jmp
int3
int3
int3
int3
int3
push
call
test
je
mov
ret
int3
int3
int3
int3
int3
mov
push
call
mov
test
jne
mov
pop
ret
push
mov
call
mov
push
test
jge
call
mov
jmp
push
call
push
mov
add
push
call
jmp
push
push
push
add
add
test
jne
mov
add
push
call
add
mov
pop
cmp
je
neg
mov
mov
mov
cmp
jne
and
mov
pop
pop
leave
ret
int3
int3
int3
int3
int3
mov
push
mov
push
add
mov
add
call
test
jge
mov
test
je
mov
test
je
add
add
push
mov
call
pop
pop
ret
int3
int3
int3
int3
int3
mov
push
mov
push
push
push
mov
push
mov
mov
xor
cmp
mov
jl
cmp
jle
cmp
pop
ret
int3
int3
int3
int3
int3
mov
push
mov
sub
push
push
xor
push
mov
cmp
je
lea
push
push
inc
loopne
loop
nop
ror
neg
or
push
call
pop
mov
jmp
mov
ret
xor
mov
push
pop
add
mov
jo
add
call
cmp
jge
mov
mov
test
je
push
add
and
mov
test
je
push
add
and
mov
mov
test
je
push
add
mov
and
mov
mov
test
je
push
add
mov
and
mov
push
call
add
or
call
mov
test
je
mov
push
add
and
add
call
mov
call
ret
int3
int3
int3
int3
int3
push
mov
call
mov
mov
mov
mov
cmp
je
test
je
cmp
jb
push
push
add
add
call
mov
push
push
push
lea
push
add
push
call
mov
test
jl
add
add
call
mov
mov
test
jne
mov
mov
pop
leave
ret
int3
int3
int3
int3
int3
mov
push
mov
mov
sub
cmp
lea
jne
push
push
push
push
call
test
jl
add
add
add
add
call
jmp
push
push
push
push
call
test
jl
add
add
add
call
mov
mov
neg
sbb
and
add
leave
ret
int3
int3
adc
jne
add
add
call
jmp
push
test
je
mov
push
push
add
mov
add
sub
add
sub
push
add
add
add
add
add
add
call
jmp
add
add
add
add
add
add
add
int3
int3
mov
push
push
call
mov
test
je
mov
call
mov
pop
ret
int3
int3
int3
int3
int3
mov
push
mov
push
push
push
mov
and
call
mov
test
je
add
mov
add
add
add
add
call
add
int3
int3
int3
int3
mov
push
mov
mov
test
je
push
call
and
pop
and
and
pop
ret
int3
int3
int3
int3
int3
mov
push
mov
mov
test
jl
cmp
jge
mov
lea
pop
ret
push
push
push
push
call
int3
int3
int3
int3
int3
int3
mov
push
mov
mov
test
jl
cmp
jge
mov
lea
pop
ret
push
push
push
push
call
int3
int3
int3
int3
int3
int3
mov
push
mov
lea
call
xor
mov
mov
mov
mov
pop
ret
int3
int3
int3
int3
int3
mov
push
mov
push
mov
push
xor
cmp
jne
mov
jmp
mov
jle
into
call
test
je
mov
jmp
push
call
test
jl
mov
mov
mov
and
dec
push
call
mov
and
mov
mov
test
jbe
push
add
mov
call
mov
cmp
je
add
mov
call
mov
mov
mov
add
and
cmp
jb
pop
mov
or
xor
pop
pop
pop
ret
int3
int3
int3
int3
int3
mov
push
push
mov
call
lea
push
push
push
call
mov
test
jl
lea
push
push
push
call
mov
test
jge
mov
call
mov
pop
pop
ret
int3
int3
int3
int3
int3
mov
push
mov
lea
push
push
call
test
jl
lea
push
push
push
inc
or
or
mov
mov
sub
add
dec
imul
push
lea
push
push
call
add
push
call
mov
test
je
movzx
xor
test
je
mov
mov
cmp
jge
cmp
je
cmp
je
push
jp
add
test
jne
call
mov
jmp
call
add
mov
add
test
jl
call
push
lea
call
add
add
or
mov
mov
ret
test
jne
or
mov
mov
ret
int3
int3
int3
int3
int3
mov
push
mov
call
mov
push
mov
add
and
pop
ret
int3
int3
int3
int3
int3
mov
push
mov
sub
push
push
xor
push
mov
call
push
lea
call
push
lea
call
mov
mov
test
jbe
push
call
mov
mov
call
cli
add
test
jmp
add
jne
mov
and
cmp
jne
cmp
je
test
je
mov
call
jmp
mov
call
push
add
mov
add
push
call
pop
pop
pop
pop
ret
int3
int3
int3
int3
int3
mov
push
mov
push
push
push
mov
and
call
mov
test
je
add
mov
add
add
add
add
call
mov
test
jl
mov
jmp
push
call
jmp
mov
pop
pop
mov
pop
pop
ret
int3
int3
int3
int3
int3
mov
push
mov
pop
jmp
int3
int3
int3
int3
int3
mov
push
mov
push
push
push
xor
call
test
jne
call
cmp
jb
add
push
push
push
add
add
add
mov
jmp
jne
call
test
je
mov
and
lea
push
add
mov
add
add
add
test
jne
mov
jmp
test
je
test
jne
mov
call
jmp
test
je
cmp
je
mov
test
je
mov
mov
add
test
je
mov
mov
add
add
je
cmp
movups
sbb
add
add
rol
jge
pop
jbe
mov
jmp
cmp
jbe
add
call
jmp
xor
pop
ret
int3
int3
int3
int3
int3
test
je
test
jne
or
mov
mov
or
adc
mov
xor
add
and
xor
test
je
mov
xor
stos
stos
mov
mov
mov
pop
pop
mov
pop
leave
ret
int3
int3
int3
int3
int3
mov
push
mov
push
push
push
push
push
lea
push
mov
mov
mov
and
push
call
mov
test
jl
mov
test
jne
and
cmp
jne
repnz
movzx
push
mov
mov
add
push
mov
call
cmp
je
mov
mov
add
mov
mov
add
cmp
je
mov
mov
add
mov
mov
add
pop
pop
pop
pop
ret
int3
int3
int3
int3
int3
mov
push
mov
push
push
push
mov
call
mov
cmp
jne
mov
and
cmp
jne
cmp
je
mov
test
jne
cmp
je
mov
push
mov
push
mov
mov
test
je
mov
and
mov
jbe
add
mov
call
mov
test
je
cmp
jne
mov
cmp
jne
mov
add
inc
or
adc
mov
sub
neg
sbb
inc
pop
ret
int3
int3
int3
int3
int3
mov
mov
and
cmp
je
mov
and
not
dec
and
xor
mov
test
jne
jmp
ret
int3
int3
int3
int3
int3
mov
push
mov
mov
test
je
push
call
and
pop
ret
int3
int3
int3
int3
int3
mov
push
mov
push
push
push
call
mov
mov
add
pop
ret
int3
int3
int3
int3
int3
mov
push
mov
push
push
add
mov
call
mov
test
jne
mov
jmp
push
push
push
mov
call
mov
mov
call
mov
pop
pop
pop
ret
int3
int3
int3
int3
int3
mov
push
mov
push
push
add
mov
call
sti
add
mov
push
call
add
push
call
lea
push
push
mov
mov
call
mov
test
jl
add
mov
mov
call
mov
push
call
test
jge
xor
push
push
lea
push
push
push
push
push
call
test
je
lea
push
lea
call
push
add
mov
add
push
call
lock
cmp
jne
lea
cmp
jne
mov
push
jmp
mov
dec
push
call
lea
push
mov
call
inc
add
add
je
mov
mov
cmp
jne
push
mov
call
jmp
mov
cmp
jne
push
jmp
mov
cmp
jne
push
mov
call
push
mov
call
push
mov
call
add
inc
jmp
mov
cmp
jne
push
mov
call
push
mov
call
push
jmp
mov
cmp
lea
stos
stos
stos
stos
push
pop
mov
mov
mov
mov
mov
fild
test
jge
fadd
fdiv
mov
lea
push
lea
push
push
push
fstp
popf
sub
adc
mov
add
add
aam
or
push
or
fadd
xchg
(bad)
mov
pop
xor
pop
call
leave
ret
push
push
add
pop
pop
mov
pop
pop
ret
int3
int3
int3
int3
int3
mov
push
mov
push
mov
push
mov
mov
test
je
add
push
call
pop
pop
test
jne
mov
mov
xor
mov
add
test
jl
mov
pop
pop
pop
ret
int3
int3
int3
int3
int3
mov
push
mov
push
cmp
push
mov
jne
mov
neg
sbb
and
jmp
mov
push
test
jne
xor
jmp
push
call
mov
mov
add
cmp
mov
jge
mov
jmp
push
push
push
call
mov
test
jne
mov
jmp
mov
test
je
lea
push
push
push
call
add
mov
add
push
add
(bad)
fcmovnb
inc
or
push
cmp
jne
add
add
call
mov
mov
mov
mov
mov
cmp
jne
mov
push
call
test
jl
mov
call
mov
mov
mov
cmp
jl
mov
mov
cmp
je
mov
pop
lock
mov
cmp
je
cmp
je
add
add
call
mov
cmp
je
cmp
je
add
add
call
cmp
je
add
lea
xor
div
jmp
mov
pop
ret
int3
int3
int3
int3
int3
mov
push
mov
sub
push
mov
push
mov
push
mov
test
jne
mov
push
call
mov
mov
add
scas
sti
add
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
lea
push
add
mov
push
push
add
push
push
call
add
cmp
jb
mov
mov
add
mov
mov
mov
add
push
pop
mov
mov
cmp
jbe
add
mov
mov
add
test
je
lea
push
add
add
push
push
push
call
add
mov
cmp
jb
add
jne
mov
add
test
je
dec
mov
jmp
xor
pop
pop
pop
ret
int3
int3
int3
int3
int3
mov
push
mov
cmp
je
push
mov
cmp
jae
push
mov
test
je
mov
test
je
mov
push
add
and
add
call
mov
call
ret
int3
int3
int3
int3
int3
push
mov
call
push
call
mov
mov
test
je
mov
and
mov
call
mov
call
ret
int3
int3
int3
int3
int3
push
mov
call
push
call
mov
mov
test
je
sbb
shl
pop
xor
rol
mov
sub
mov
add
lea
movs
movs
movs
push
movs
add
jmp
mov
pop
pop
pop
ret
int3
int3
int3
int3
int3
mov
push
mov
mov
mov
push
push
test
je
mov
test
je
test
jne
xor
inc
jmp
mov
sub
mov
add
lea
add
movs
add
movs
add
movs
push
movs
add
cli
add
pop
mov
call
mov
pop
ret
int3
int3
int3
int3
int3
mov
push
push
call
mov
test
je
mov
call
mov
pop
ret
int3
int3
int3
int3
int3
mov
push
push
call
mov
test
je
mov
call
mov
pop
ret
int3
int3
int3
int3
int3
mov
push
push
call
mov
test
je
mov
call
mov
pop
ret
int3
int3
int3
int3
int3
mov
push
push
call
mov
test
je
mov
call
mov
pop
ret
int3
int3
int3
int3
int3
mov
push
push
call
mov
test
je
mov
call
mov
pop
ret
int3
int3
int3
int3
int3
mov
push
push
call
mov
icebp
call
push
add
mov
call
pop
pop
ret
int3
int3
int3
int3
int3
mov
push
mov
push
push
mov
and
push
mov
call
mov
test
jl
add
mov
add
call
test
jne
mov
push
mov
movzx
push
movzx
push
add
mov
push
dec
or
dec
or
pop
pop
pop
pop
ret
int3
int3
int3
int3
int3
mov
push
mov
sub
lea
mov
xor
mov
mov
mov
cmp
jne
lea
push
push
add
add
add
call
jmp
mov
cdq
mov
mov
data16
add
add
fs
add
mov
ret
int3
int3
int3
int3
int3
mov
push
mov
call
mov
push
mov
add
and
pop
ret
int3
int3
int3
int3
int3
mov
push
mov
sub
push
push
xor
push
mov
call
push
lea
mov
mov
push
call
test
pop
mov
jne
mov
push
add
push
add
dec
or
or
add
outs
push
mov
test
je
xor
stos
stos
mov
mov
inc
cmp
jbe
lea
push
mov
call
mov
test
jl
mov
cmp
jbe
mov
imul
sub
push
mov
lea
lea
movs
movs
sub
dec
movs
jne
pop
add
mov
mov
imul
mov
mov
mov
mov
mov
mov
mov
pop
mov
pop
leave
ret
int3
int3
int3
int3
int3
mov
push
mov
push
mov
mov
test
je
push
call
test
je
push
call
pop
mov
pop
pop
ret
int3
int3
int3
int3
dec
or
add
std
add
iret
call
push
mov
call
push
add
lea
push
mov
call
mov
push
add
mov
mov
call
pop
test
je
push
add
call
jmp
xor
mov
pop
mov
pop
pop
ret
int3
int3
int3
int3
int3
mov
push
mov
mov
test
je
push
add
call
cmp
je
mov
mov
pop
add
pop
ret
int3
int3
int3
int3
int3
mov
push
mov
mov
mov
pop
ret
int3
int3
int3
int3
int3
mov
push
mov
sub
push
mov
test
jne
lea
push
add
call
test
jne
xor
jmp
mov
test
je
mov
mov
test
mov
je
lea
push
push
push
add
call
sete
mov
lea
push
push
push
add
add
test
je
mov
lea
push
call
mov
lea
push
push
push
add
add
mov
call
push
push
push
add
add
mov
call
pop
pop
pop
leave
ret
int3
int3
int3
int3
int3
mov
push
mov
sub
push
push
mov
xor
cmp
add
add
add
call
mov
test
jl
mov
mov
call
mov
test
jl
mov
jmp
mov
mov
add
jmp
mov
mov
xor
lea
call
pop
mov
pop
leave
ret
int3
int3
int3
int3
int3
mov
push
mov
push
push
mov
push
xor
test
jne
call
mov
jmp
mov
add
test
jl
push
call
push
lea
call
add
lea
add
pop
mov
mov
mov
lea
mov
neg
sbb
and
add
js
add
add
add
call
mov
add
test
jge
test
jl
mov
mov
jmp
push
call
add
call
pop
pop
mov
pop
leave
ret
int3
int3
int3
int3
int3
mov
push
mov
mov
sub
push
test
je
cmp
jne
mov
jmp
and
and
or
push
xor
lea
stos
stos
mov
mov
lea
push
xor
inc
lea
push
mov
mov
mov
push
add
mov
pop
test
jl
add
add
call
mov
lea
push
call
mov
pop
leave
ret
int3
int3
int3
int3
int3
mov
push
mov
add
push
call
push
and
call
mov
test
je
add
mov
add
add
add
add
call
mov
test
jl
mov
jmp
push
call
jmp
mov
pop
pop
mov
pop
pop
ret
int3
int3
int3
int3
int3
mov
push
mov
push
push
push
mov
and
call
mov
test
je
add
mov
add
call
mov
test
jl
mov
jmp
push
mov
call
jmp
mov
pop
pop
mov
pop
pop
ret
mov
add
add
push
call
pop
pop
pop
ret
int3
int3
int3
int3
int3
mov
push
mov
push
push
push
mov
and
call
mov
test
je
add
mov
add
add
add
add
call
mov
test
jl
mov
jmp
push
call
jmp
mov
pop
pop
mov
pop
pop
ret
int3
int3
int3
int3
int3
mov
push
mov
push
push
push
mov
and
call
mov
test
je
add
mov
add
add
call
mov
test
jl
mov
jmp
push
mov
call
jmp
mov
pop
pop
mov
pop
pop
ret
int3
int3
int3
int3
int3
mov
push
mov
pop
jmp
int3
int3
int3
int3
int3
mov
push
mov
push
push
push
xor
call
test
jne
call
call
mov
mov
xor
mov
cmp
je
cmp
je
cmp
jbe
cmp
je
add
jbe
cmp
je
dec
cmp
jbe
mov
mov
sub
js
inc
add
cmp
jb
jmp
and
mov
lea
xor
test
jbe
mov
sub
js
inc
add
cmp
jb
jmp
xor
lea
push
call
mov
test
je
xor
xor
xor
mov
div
add
xor
pop
call
leave
ret
int3
int3
int3
int3
int3
mov
push
mov
push
add
and
add
lea
push
call
test
jl
push
add
lea
push
call
test
jl
add
call
pop
test
je
mov
mov
mov
mov
jmp
xor
leave
ret
int3
int3
int3
int3
int3
push
mov
call
mov
mov
xor
cmp
je
mov
mov
cmp
jbe
cmp
jne
cmp
jae
mov
push
call
cmp
pop
pop
pop
leave
ret
int3
int3
int3
int3
int3
mov
push
mov
sub
push
mov
push
lea
push
add
mov
add
add
push
call
mov
test
je
cmp
je
lea
push
push
call
test
je
test
je
push
call
mov
test
je
mov
mov
sub
sub
push
push
push
call
mov
test
je
push
mov
push
add
add
mov
lea
push
add
mov
push
call
add
add
add
add
call
pop
add
call
jmp
lea
push
mov
neg
push
mov
imul
rol
add
call
add
add
mov
call
shl
xor
and
jmp
mov
mov
jmp
mov
call
mov
and
add
inc
add
mov
mov
jmp
sub
je
dec
je
dec
je
dec
je
sub
je
sub
jne
mov
or
je
test
je
cmp
jb
push
push
push
add
add
call
lea
push
call
cmp
je
add
call
mov
add
call
add
add
add
mov
push
push
add
or
mov
call
jmp
mov
mov
mov
cmp
je
cmp
je
cmp
je
call
mov
test
je
mov
test
je
cmp
je
push
push
push
call
mov
push
push
push
call
test
je
add
call
mov
and
je
push
add
call
cmp
je
add
jo
add
call
jmp
mov
mov
mov
push
mov
call
pop
mov
mov
mov
mov
mov
push
push
mov
mov
loopne
inc
add
call
mov
mov
cmp
je
test
je
cmp
jb
add
push
push
add
add
call
cmp
jl
mov
mov
mov
mov
lea
push
push
add
mov
push
add
mov
mov
cmp
je
test
je
cmp
jb
add
push
push
add
add
call
add
mov
test
jl
mov
mov
call
mov
test
jl
mov
jmp
mov
mov
add
jmp
mov
mov
xor
lea
call
pop
mov
pop
leave
ret
int3
int3
int3
int3
int3
mov
push
mov
push
push
mov
push
xor
test
jne
call
mov
jmp
mov
add
test
jl
push
call
push
lea
call
add
lea
add
add
push
add
add
push
call
test
jne
and
lea
push
add
add
add
add
add
call
mov
test
jl
mov
mov
call
mov
test
jl
add
add
retf
and
cmp
jne
cmp
jne
push
push
jmp
cmp
je
cmp
mov
je
cmp
jae
test
jne
test
jne
jmp
cmp
jae
test
jne
mov
mov
and
and
or
je
mov
mov
mov
mov
and
and
cmp
jne
cmp
jne
push
push
push
push
call
mov
or
add
add
pop
ret
int3
int3
int3
int3
int3
add
call
add
add
test
jne
lea
push
lea
push
push
push
mov
call
mov
mov
call
mov
pop
pop
pop
ret
int3
int3
int3
int3
int3
mov
push
mov
push
push
add
mov
call
mov
test
jne
mov
jmp
push
push
push
mov
call
mov
mov
call
mov
pop
pop
pop
ret
int3
int3
int3
int3
int3
mov
push
mov
push
push
push
push
push
add
mov
add
loope
and
cmp
jne
cmp
jne
push
push
push
push
call
add
lea
push
add
call
cmp
je
cmp
mov
je
cmp
jae
test
jne
test
jne
jmp
cmp
jae
test
jne
mov
mov
and
and
or
je
mov
mov
mov
mov
and
and
cmp
jne
cmp
jne
push
push
push
push
call
jmp
push
push
add
lea
add
push
add
call
js
add
push
pop
mov
mov
cmp
je
test
je
cmp
jb
push
push
add
add
call
xor
cmp
je
call
lea
mov
cmp
je
mov
push
add
mov
add
mov
or
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
clc
push
add
scas
adc
add
xor
pop
ret
int3
int3
int3
int3
int3
mov
push
mov
push
push
push
mov
mov
xor
lea
stos
stos
stos
lea
add
mov
push
call
mov
lea
push
call
mov
add
jmp
mov
cmp
je
mov
call
in
push
push
mov
push
mov
mov
xor
mov
div
mov
xor
mov
cmp
je
mov
and
mov
mov
mov
test
je
mov
cmp
jne
cmp
je
mov
mov
test
jne
xor
pop
pop
pop
pop
ret
inc
cmp
jb
xor
pop
mov
pop
pop
pop
ret
int3
int3
int3
int3
int3
mov
ret
int3
int3
int3
int3
int3
mov
push
mov
cmp
push
mov
add
mov
mov
sub
mov
lea
movs
movs
movs
push
movs
add
jmp
mov
push
add
jmp
mov
pop
pop
pop
pop
ret
int3
int3
int3
int3
int3
mov
push
mov
mov
mov
push
push
test
je
mov
test
je
cmp
jne
test
jne
xor
inc
jmp
add
mov
sub
mov
lea
movs
movs
movs
push
add
add
call
mov
cmp
jl
mov
call
mov
mov
cmp
je
test
je
cmp
jb
add
push
push
add
add
call
mov
cmp
je
test
je
cmp
jb
add
push
push
add
add
call
mov
call
ret
int3
int3
int3
int3
int3
mov
push
mov
push
push
push
push
mov
mov
mov
mov
cmp
je
test
je
cmp
jb
push
push
add
add
add
add
pop
ret
int3
int3
int3
int3
int3
mov
push
mov
add
cmp
je
add
jbe
cmp
je
jl
mov
cmp
jbe
xor
cmp
jbe
scas
daa
inc
add
add
sub
inc
add
add
(bad)
jne
add
dec
mov
add
jne
call
inc
cmp
jb
jmp
mov
mov
mov
cmp
je
test
je
cmp
jb
push
push
push
add
add
call
mov
cmp
mov
jl
add
lea
call
mov
push
lea
mov
call
mov
add
lea
mov
call
cmp
mov
mov
je
xor
jmp
mov
test
jne
mov
cmp
je
xor
jmp
mov
test
jne
mov
cmp
je
xor
jmp
mov
test
jne
mov
lea
push
add
adc
push
sub
or
jne
add
test
cli
add
(bad)
pop
leave
ret
int3
int3
int3
int3
int3
mov
push
mov
push
push
mov
push
xor
test
jne
call
mov
jmp
mov
add
test
jl
push
call
push
lea
call
add
lea
add
add
push
add
add
push
call
test
jne
and
lea
push
add
push
call
push
push
mov
call
jmp
inc
mov
xor
test
ja
mov
add
xor
xchg
add
add
adc
jmp
add
call
add
call
call
mov
cmp
je
test
je
cmp
jb
push
push
add
add
call
mov
call
ret
int3
int3
int3
int3
int3
push
mov
call
mov
mov
mov
mov
cmp
je
test
je
cmp
jb
push
push
push
add
add
call
mov
xor
cmp
jne
mov
mov
add
sub
push
mov
add
pop
pop
pop
pop
ret
int3
int3
int3
int3
int3
mov
push
mov
push
push
mov
push
mov
add
mov
mov
imul
mov
add
add
push
mov
add
pop
pop
pop
pop
ret
int3
int3
int3
int3
int3
mov
push
push
mov
mov
add
push
mov
add
pop
pop
ret
int3
int3
int3
int3
int3
mov
push
push
mov
mov
add
push
mov
add
pop
pop
ret
int3
int3
int3
int3
int3
lea
ret
int3
int3
int3
int3
int3
mov
push
mov
push
mov
call
test
je
push
call
pop
mov
pop
pop
ret
int3
int3
int3
add
push
push
call
add
push
lea
push
jmp
lea
push
push
lea
push
push
call
test
jl
cmp
je
push
add
call
mov
neg
sbb
and
add
jmp
push
add
mov
call
mov
pop
pop
xor
pop
call
leave
ret
int3
int3
int3
int3
int3
mov
push
mov
sub
and
push
push
push
lea
push
add
mov
call
test
jl
cmp
je
lea
push
push
add
add
add
push
add
call
test
jl
mov
mov
mov
mov
mov
add
or
int3
int3
int3
int3
int3
mov
push
mov
mov
mov
shl
lea
mov
mov
xor
pop
ret
int3
int3
int3
int3
int3
mov
push
mov
mov
movzx
and
shl
push
and
or
mov
xor
cmp
lea
stos
stos
stos
stos
pop
jbe
mov
sar
or
mov
cmp
jne
mov
mov
dec
cmp
jb
cmp
je
xor
and
mov
xor
lea
stos
stos
stos
lea
push
call
cmp
jne
mov
cmp
jle
test
jne
mov
cmp
jge
lea
push
lea
add
adc
mov
mov
mov
push
mov
mov
call
pop
pop
pop
leave
ret
int3
int3
int3
int3
int3
mov
push
mov
push
push
mov
mov
mov
cmp
je
test
je
cmp
jb
cmp
mov
jne
mov
push
add
add
push
push
call
mov
add
lea
mov
push
call
mov
push
call
mov
push
call
mov
push
call
mov
call
mov
or
lea
mov
call
mov
push
mov
call
call
ret
int3
int3
int3
int3
int3
mov
push
mov
sub
push
push
mov
mov
cmp
je
test
je
cmp
jb
add
push
push
add
add
call
add
mov
xor
call
test
jl
push
add
dec
clc
call
add
lea
add
add
push
add
add
push
call
add
jne
and
lea
je
mov
push
add
or
mov
call
call
ret
int3
int3
int3
int3
int3
mov
push
mov
push
push
push
mov
mov
mov
mov
cmp
je
test
je
cmp
jb
push
push
push
add
add
call
mov
test
jne
mov
cmp
je
test
je
cmp
jb
push
push
push
add
add
call
jmp
and
call
mov
mov
neg
sbb
and
add
mov
cmp
je
test
je
cmp
jb
push
push
push
push
add
add
call
mov
cmp
je
test
je
cmp
jb
add
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
add
int3
int3
int3
int3
push
mov
call
mov
mov
mov
cmp
je
test
je
cmp
jb
dec
cld
cmp
je
test
je
cmp
jb
push
push
push
add
add
call
jmp
push
add
lea
mov
call
add
mov
call
add
add
call
add
add
call
pop
mov
cmp
je
test
je
cmp
jb
add
push
push
add
add
call
mov
pop
pop
leave
ret
int3
int3
int3
int3
int3
xchg
add
sbb
and
add
js
and
mov
add
xor
lea
stos
stos
add
stos
call
lea
push
mov
call
cmp
jne
mov
sub
push
push
lea
push
call
mov
mov
mov
mov
mov
add
cmp
jge
push
pop
mov
add
mov
mov
cmp
je
test
je
cmp
jb
push
push
push
add
add
call
pop
mov
pop
pop
leave
ret
int3
int3
int3
int3
int3
mov
push
mov
sub
push
push
mov
xor
cmp
jbe
push
lea
add
adc
test
jne
mov
cmp
jne
cmp
ret
pop
pop
ret
int3
int3
int3
int3
int3
mov
push
mov
push
push
push
mov
and
call
mov
test
je
add
mov
add
add
call
mov
test
jl
mov
jmp
push
mov
call
jmp
mov
pop
pop
mov
pop
pop
ret
int3
int3
int3
int3
int3
mov
push
mov
push
push
push
mov
and
call
push
call
push
call
mov
mov
mov
mov
mov
mov
lea
push
lea
push
mov
call
cmp
mov
jl
cmp
je
mov
cmp
jne
mov
mov
outs
xor
pop
ror
jl
mov
push
call
test
jge
xor
push
push
lea
push
push
push
push
push
call
test
je
lea
push
lea
call
push
add
mov
add
push
call
mov
call
add
call
mov
test
je
mov
push
add
cmp
je
cmp
mov
je
cmp
jae
test
jne
test
jne
jmp
cmp
jae
test
add
mov
add
mov
add
add
mov
pop
mov
mov
mov
mov
pop
pop
ret
int3
int3
int3
int3
int3
push
mov
call
mov
sar
add
dec
adc
add
lea
mov
call
mov
mov
cmp
je
test
je
cmp
jb
push
push
push
add
add
call
mov
jne
call
jmp
lea
push
mov
neg
push
mov
neg
push
push
call
push
push
push
add
call
push
add
add
push
call
jmp
test
je
push
call
pop
pop
leave
ret
int3
int3
int3
int3
int3
movzx
shr
and
je
mov
jmp
mov
mov
test
jne
mov
push
add
mov
call
mov
push
mov
add
movzx
pop
ret
int3
int3
int3
int3
int3
mov
push
mov
sub
push
push
cmp
jb
push
push
push
add
add
call
mov
test
jl
push
pop
cmp
jne
mov
mov
cmp
je
test
je
cmp
jb
push
push
push
add
add
call
jmp
mov
lea
push
mov
call
test
jl
mov
test
je
add
mov
push
add
mov
mov
cmp
je
test
je
cmp
jb
add
push
adc
jo
call
add
mov
add
add
add
add
add
add
add
add
add
add
add
add
add
mov
or
test
je
mov
push
add
mov
call
ret
int3
int3
int3
int3
int3
push
mov
call
mov
and
mov
mov
mov
cmp
je
test
je
cmp
jb
push
push
add
add
call
mov
xor
mov
mov
or
adc
push
lea
push
add
add
call
lea
push
lea
push
mov
call
test
jl
push
call
mov
movzx
push
call
mov
cmp
je
push
push
push
push
push
add
call
mov
cmp
je
mov
push
push
push
call
mov
call
add
das
(bad)
add
jne
call
mov
lea
mov
call
mov
test
je
lea
push
mov
call
mov
test
je
mov
test
je
push
mov
call
mov
cmp
je
test
je
cmp
jb
push
push
push
add
add
call
mov
call
mov
cmp
je
test
je
cmp
jb
push
push
push
add
add
call
push
mov
call
push
call
pop
cmp
jne
int3
mov
push
mov
mov
test
jl
cmp
jge
mov
lea
pop
ret
push
push
push
push
call
int3
int3
int3
int3
int3
int3
mov
push
mov
mov
test
jl
cmp
jge
mov
lea
pop
ret
push
push
push
push
call
int3
int3
int3
int3
int3
int3
mov
push
mov
push
push
mov
je
test
je
cmp
jb
push
push
push
add
add
call
lea
push
mov
call
test
jl
mov
add
add
mov
call
add
mov
call
mov
test
jl
cmp
je
cmp
je
push
lea
call
add
lea
pop
push
inc
add
cmp
add
lea
push
lea
and
mov
add
push
add
mov
test
jl
mov
and
sub
shl
push
mov
push
add
push
call
mov
xor
add
and
xor
test
je
mov
xor
stos
stos
mov
mov
mov
pop
pop
mov
pop
leave
ret
int3
int3
int3
int3
int3
mov
push
mov
mov
add
and
push
call
pop
ret
int3
int3
int3
int3
int3
mov
push
mov
mov
add
mov
and
push
mov
call
pop
ret
int3
int3
int3
int3
int3
mov
push
mov
mov
add
and
push
call
pop
ret
rol
int3
int3
int3
int3
mov
push
mov
mov
cmp
push
mov
jge
mov
and
push
push
mov
call
mov
test
je
xor
mov
mov
pop
pop
ret
int3
int3
int3
int3
int3
add
call
ret
int3
int3
int3
int3
int3
mov
add
add
add
call
jmp
push
lea
call
push
lea
mov
call
cmp
je
lea
push
call
lea
mov
call
mov
mov
lea
push
push
push
add
test
jl
push
pop
cmp
jne
cmp
je
add
lea
call
mov
cmp
je
test
inc
add
adc
jne
call
test
je
mov
xor
mov
pop
pop
pop
ret
int3
int3
int3
int3
int3
mov
push
mov
mov
inc
add
add
int3
int3
int3
int3
int3
push
mov
inc
add
add
ret
int3
int3
int3
add
mov
sub
cdq
sub
mov
sar
jmp
cmp
jne
mov
sub
jmp
cmp
jne
mov
cmp
jne
mov
mov
mov
cmp
jae
test
je
mov
imul
xor
div
mov
mov
jmp
xor
mov
test
je
mov
imul
xor
div
mov
jmp
and
mov
add
add
mov
test
jge
push
add
pop
jns
xor
lea
cmp
jle
mov
sub
jns
xor
lock
je
mov
call
mov
pop
ret
int3
int3
int3
int3
int3
mov
push
mov
push
push
add
mov
add
xor
dec
push
push
call
or
mov
mov
and
and
cmp
jne
cmp
jne
push
push
push
push
mov
and
cmp
jae
push
mov
call
inc
add
call
test
jl
add
inc
test
jge
pop
pop
pop
pop
ret
int3
int3
int3
int3
int3
mov
push
mov
mov
test
je
push
call
and
pop
ret
int3
int3
int3
int3
int3
mov
push
mov
sub
push
push
push
mov
xor
lea
mov
cmp
jne
add
mov
call
int3
int3
int3
int3
mov
push
mov
push
mov
call
test
je
push
call
pop
mov
pop
pop
ret
int3
int3
int3
int3
int3
mov
push
mov
push
mov
call
add
mov
add
add
call
pop
pop
ret
int3
int3
int3
int3
int3
mov
push
mov
push
mov
call
add
mov
add
add
call
pop
pop
ret
int3
int3
int3
int3
int3
mov
push
mov
push
mov
call
add
mov
add
add
add
call
pop
pop
ret
int3
int3
int3
int3
int3
push
call
mov
ret
int3
int3
int3
int3
int3
mov
push
mov
push
call
mov
mov
cmp
je
test
je
cmp
jb
push
push
push
add
add
call
inc
add
add
pop
add
add
jne
mov
mov
cmp
je
test
je
cmp
jb
push
push
push
add
add
call
inc
add
int3
int3
int3
int3
int3
mov
push
mov
sub
push
mov
test
jne
and
push
push
lea
push
call
mov
mov
mov
push
cld
add
mov
mov
cmp
je
test
je
cmp
jb
push
push
push
add
add
call
mov
cmp
je
push
mov
call
mov
mov
cmp
je
test
je
cmp
jb
push
push
push
add
add
call
mov
cmp
add
push
add
add
call
lea
push
call
lea
call
add
inc
cmp
jb
test
jl
lea
push
call
add
mov
mov
mov
and
mov
shr
inc
add
sub
mov
add
lea
movs
movs
movs
push
movs
add
mov
mov
cmp
je
test
je
cmp
jb
push
push
push
add
add
call
lea
push
call
cmp
je
add
call
mov
add
call
add
call
mov
or
test
je
mov
push
add
mov
cmp
je
test
je
cmp
jb
push
push
push
add
add
add
call
mov
push
lea
push
or
inc
add
mov
ret
test
jne
inc
cmp
jb
pop
add
call
pop
pop
ret
int3
int3
int3
int3
int3
mov
push
mov
push
mov
call
test
je
push
call
pop
mov
pop
pop
ret
int3
int3
int3
int3
int3
mov
push
mov
sub
xor
lea
lea
push
mov
pop
mov
lea
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
cmp
jne
lea
push
push
add
add
add
call
jmp
mov
cdq
mov
stos
adc
movzx
mov
mov
mov
push
mov
pop
mov
lea
push
mov
add
mov
add
cmp
jge
jmp
lea
push
lea
call
add
call
jmp
lea
push
lea
call
mov
mov
cmp
je
mov
push
add
mov
cmp
jne
add
mov
cmp
jne
inc
add
add
mov
add
mov
test
jne
mov
mov
cmp
je
test
je
cmp
jb
push
mov
push
push
add
add
call
jmp
ins
jecxz
add
add
mov
inc
add
adc
test
jne
push
jmp
lea
push
mov
call
cmp
jne
push
jmp
push
ror
push
add
add
into
call
add
jl
mov
dec
cmp
sldt
add
lea
mov
call
mov
mov
lea
push
push
push
add
mov
mov
cmp
je
test
je
cmp
jb
add
push
add
in
push
push
add
mov
call
mov
test
jne
mov
jmp
push
push
push
mov
call
mov
mov
call
mov
pop
pop
pop
ret
int3
int3
int3
int3
int3
mov
push
mov
push
push
push
xor
push
push
push
add
mov
push
push
push
push
call
clc
mov
cmp
je
test
je
cmp
jb
push
push
push
add
add
call
mov
test
jl
push
push
push
mov
call
mov
mov
cmp
je
test
je
cmp
jb
push
push
push
add
add
call
mov
mov
test
je
push
call
mov
test
jl
mov
call
mov
mov
test
je
push
call
mov
cmp
je
test
int3
jmp
int3
int3
int3
int3
int3
int3
jmp
int3
int3
int3
int3
int3
int3
jmp
int3
int3
int3
int3
int3
int3
jmp
int3
int3
int3
int3
int3
int3
jmp
int3
int3
int3
int3
int3
int3
jmp
int3
int3
int3
int3
int3
int3
jmp
int3
int3
int3
int3
int3
int3
jmp
int3
int3
int3
int3
int3
int3
add
xor
inc
jmp
mov
add
mov
push
add
jmp
mov
pop
ret
int3
int3
int3
int3
int3
mov
push
mov
mov
mov
test
je
cmp
je
cmp
je
test
jne
xor
inc
jmp
mov
add
mov
push
add
jmp
mov
pop
ret
int3
int3
int3
int3
int3
mov
push
mov
mov
mov
test
je
cmp
je
cmp
je
test
jne
xor
inc
jmp
mov
add
mov
push
add
jmp
mov
pop
ret
int3
int3
int3
int3
int3
mov
push
mov
mov
cmp
je
mov
mov
lea
push
push
push
add
test
jl
mov
mov
push
add
add
fdivrp
add
int3
int3
int3
int3
int3
mov
push
mov
pop
jmp
imul
jge
add
cmp
jne
mov
mov
cmp
je
test
je
cmp
jb
push
push
push
add
add
call
mov
cmp
jl
mov
mov
and
mov
mov
mov
and
mov
mov
mov
test
je
mov
push
add
mov
mov
mov
test
je
mov
push
add
mov
mov
mov
test
je
mov
push
add
mov
mov
or
test
je
mov
push
add
mov
cmp
je
test
je
cmp
mov
mov
cmp
jne
mov
add
ret
push
call
pop
ret
int3
int3
int3
int3
int3
mov
push
mov
add
call
neg
sbb
neg
pop
dec
pop
ret
int3
int3
int3
int3
int3
int3
jmp
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
lea
sub
sbb
not
and
mov
and
cmp
jb
mov
pop
xchg
mov
mov
ret
sub
test
jmp
int3
int3
int3
int3
int3
mov
push
mov
mov
push
xor
cmp
jbe
push
xor
pop
div
cmp
jae
call
push
push
push
push
push
mov
call
add
xor
jmp
imul
push
add
call
pop
pop
pop
pop
ret
int3
int3
int3
int3
int3
jmp
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
lea
sub
and
add
sbb
or
pop
jmp
push
lea
fsub
add
(bad)
je
test
je
cmp
jb
push
push
add
add
call
lea
push
mov
call
mov
test
jl
lea
push
mov
call
push
mov
push
add
mov
add
push
call
mov
mov
mov
push
add
mov
cmp
je
test
je
cmp
jb
push
push
push
add
add
call
pop
pop
mov
pop
leave
ret
int3
int3
int3
int3
int3
push
mov
call
mov
neg
sbb
and
add
js
and
and
lea
push
push
add
call
mov
test
jl
xor
lea
add
call
mov
mov
push
add
mov
pop
cmp
je
test
je
cmp
jb
push
push
push
add
add
call
pop
mov
pop
leave
ret
int3
int3
int3
int3
int3
mov
push
mov
push
push
push
push
push
mov
mov
mov
cmp
je
test
je
cmp
jb
push
push
add
add
call
lea
push
mov
call
mov
add
test
je
push
pop
mov
xor
repz
jne
push
pop
lea
rep
lea
stos
stos
stos
stos
push
pop
mov
mov
mov
mov
mov
fild
test
jge
fadd
fdiv
mov
lea
push
lea
push
push
push
fstp
ret
xor
adc
mov
add
add
aam
or
push
or
fadd
add
add
lea
push
lea
push
push
add
mov
test
jnp
mov
inc
inc
test
jne
sub
sar
lea
jmp
push
pop
test
je
cmp
jne
mov
jmp
mov
jmp
mov
push
add
push
push
push
add
add
push
add
add
call
add
pop
pop
pop
pop
ret
int3
int3
int3
int3
int3
mov
push
mov
push
mov
push
xor
push
push
cmp
je
cmp
jne
mov
jmp
mov
lea
mov
inc
inc
cmp
jne
sub
sar
lea
mov
jmp
mov
cmp
je
cmp
jne
mov
jmp
mov
jmp
mov
mov
cmp
je
cmp
jne
push
jmp
mov
lea
mov
inc
inc
cmp
jne
sub
sar
lea
jmp
push
pop
test
je
cmp
jne
mov
jmp
pusha
or
cmp
je
test
je
cmp
jb
push
push
add
add
call
mov
xor
cmp
je
call
mov
cmp
je
test
je
cmp
jb
push
push
add
add
call
mov
call
mov
cmp
je
test
je
cmp
jb
push
push
add
add
call
cmp
jl
call
mov
cmp
je
movzx
mov
mov
mov
push
mov
pop
mov
lea
push
mov
add
mov
add
mov
mov
call
leave
ret
int3
int3
int3
int3
int3
mov
push
mov
mov
push
xor
cmp
je
shr
xor
div
mov
lea
mov
test
je
cmp
je
mov
cmp
je
mov
mov
test
jne
test
je
cmp
je
test
je
mov
mov
jmp
mov
mov
push
call
jmp
mov
pop
pop
ret
int3
int3
int3
int3
int3
push
call
test
je
mov
ret
int3
int3
int3
int3
int3
mov
push
push
push
push
call
je
test
je
cmp
jb
push
push
add
add
call
mov
xor
cmp
jl
mov
mov
mov
lea
push
add
push
add
mov
mov
cmp
je
test
je
cmp
jb
add
push
add
push
push
add
add
call
mov
test
jl
mov
lea
push
add
call
mov
mov
cmp
je
test
je
cmp
jb
cmp
mov
jne
mov
push
push
push
push
int3
int3
mov
push
mov
mov
push
mov
test
jne
call
mov
push
pop
cmp
sbb
neg
mov
xor
pop
pop
ret
int3
int3
int3
int3
int3
mov
push
mov
sub
push
push
mov
mov
push
mov
lea
push
xor
push
mov
mov
add
mov
cmp
jl
xor
inc
add
jbe
mov
cmp
je
mov
push
add
mov
mov
lea
push
add
push
add
mov
cmp
jl
mov
mov
lea
push
lea
push
push
add
mov
cmp
jl
fld
fadd
call
mov
mov
mov
cmp
jae
add
mov
cmp
jb
mov
mov
mov
mov
mov
cmp
je
mov
mov
pop
pop
pop
leave
ret
int3
int3
int3
int3
int3
mov
push
mov
mov
add
cld
call
add
push
push
call
mov
mov
mov
cmp
jne
call
cmp
jle
and
or
mov
mov
cmp
je
test
je
cmp
jb
push
push
push
add
add
call
test
jl
add
call
cmp
jne
xor
jmp
call
test
jle
and
or
mov
mov
push
call
(bad)
(bad)
call
mov
jno
int3
add
(bad)
push
jp
retf
mov
mov
mov
push
mov
sub
push
push
push
call
data16
add
add
scas
add
(bad)
mov
xlat
mov
(bad)
mov
jo
(bad)
dec
movs
add
mov
test
retf
add
mov
(bad)
(bad)
call
push
pop
add
sub
pop
pop
push
push
call
add
pusha
gs
(bad)
inc
lds
(bad)
(bad)
inc
(bad)
(bad)
dec
add
add
add
mov
add
mov
add
sub
pop
mov
push
push
call
mov
imul
mov
int
add
(bad)
jmp
sahf
add
add
aam
(bad)
inc
ins
mov
sar
(bad)
jmp
loope
sub
mov
push
push
call
mov
(bad)
jmp
(bad)
inc
mov
fidivr
mov
mov
mov
xchg
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
mov
fild
jmp
jecxz
push
push
push
push
call
add
dec
popa
jno
aam
xchg
mov
xchg
sahf
rol
mov
add
mov
add
sub
pop
push
push
push
push
call
add
int3
mov
(bad)
jmp
lea
add
jp
sub
push
add
mov
rol
lahf
add
mov
add
add
add
push
iret
xor
add
sub
pop
push
push
rol
shl
push
and
add
sub
add
ror
pop
dec
ror
shr
pop
call
push
push
call
add
(bad)
dec
addr16
test
scas
leave
lds
test
push
add
add
fld
mov
mov
int
mov
lods
fistp
or
not
add
sub
pop
push
push
sub
shl
push
sub
add
inc
sub
sub
lea
pop
shl
dec
not
pop
push
push
call
aad
arpl
mov
add
add
mov
add
add
(bad)
(bad)
inc
(bad)
(bad)
inc
add
xchg
(bad)
(bad)
dec
shl
jmp
(bad)
(bad)
jmp
leave
add
sub
pop
call
call
push
push
call
(bad)
(bad)
(bad)
jl
mov
jne
add
add
mov
(bad)
(bad)
push
(bad)
dec
xchg
stos
add
mov
add
mov
add
(bad)
push
stos
mov
nop
add
(bad)
inc
sar
(bad)
jmp
loopne
mov
push
push
call
add
fmul
aam
add
(bad)
push
mov
add
mov
inc
push
xchg
add
je
add
mov
add
add
add
sub
pop
mov
add
push
push
call
xchg
add
mov
mov
inc
lds
add
(bad)
(bad)
dec
arpl
fcomp
add
(bad)
(bad)
inc
(bad)
(bad)
call
mov
mov
data16
sar
(bad)
jmp
loope
add
push
push
call
add
add
mov
lds
mov
mov
add
jp
mov
mov
add
(bad)
inc
mov
imul
stos
sahf
mov
mov
or
not
add
sub
pop
add
push
push
call
add
add
mov
retf
add
add
(bad)
(bad)
(bad)
(bad)
(bad)
jmp
mov
add
inc
jmp
out
mov
mov
push
push
call
(bad)
(bad)
inc
mov
mov
(bad)
(bad)
inc
mov
add
(bad)
dec
call
test
fadd
mov
jns
(bad)
add
(bad)
inc
add
jmp
loope
push
push
push
call
jno
(bad)
(bad)
call
add
push
add
(bad)
jmp
(bad)
(bad)
dec
(bad)
(bad)
(bad)
(bad)
(bad)
dec
add
add
add
ja
mov
sub
add
sub
pop
call
push
push
call
mov
add
mov
add
mov
add
popa
ja
mov
(bad)
inc
add
fdiv
(bad)
(bad)
push
rol
jmp
loop
mov
push
push
call
fnsave
mov
mov
add
sahf
stos
xchg
rol
sahf
add
fidiv
mov
mov
jnp
popf
adc
push
pop
add
sub
pop
mov
sub
push
push
call
add
add
add
mov
add
(bad)
inc
xchg
je
(bad)
(bad)
call
shl
and
add
sub
pop
add
push
push
call
mov
jno
mov
add
add
jns
xchg
cdq
or
(bad)
jle
popa
jb
mov
add
pop
add
sub
pop
mov
push
push
push
call
call
iret
retf
add
jbe
mov
mov
cmps
add
sar
(bad)
jmp
loope
push
push
shr
xor
push
sub
add
add
not
sub
shl
shl
pop
lea
dec
sub
add
pop
push
push
call
int
add
(bad)
(bad)
(bad)
push
(bad)
(bad)
dec
fstp
add
(bad)
(bad)
inc
pop
add
inc
sar
(bad)
jmp
add
(bad)
(bad)
mov
add
sub
pop
push
push
sub
push
xor
add
shl
sub
lea
sub
ror
rol
pop
sub
sub
pop
push
push
call
sar
pushf
cmps
(bad)
(bad)
jmp
xchg
fstp
rol
add
mov
inc
add
add
inc
ret
(bad)
jmp
loop
push
push
sub
add
push
xor
add
rol
sub
shl
pop
shl
pop
push
push
call
aam
(bad)
call
add
add
mov
(bad)
(bad)
jmp
add
xbegin
out
push
push
push
call
mov
add
add
pusha
xchg
cdq
jb
mov
mov
popf
jl
add
mov
imul
call
add
(bad)
(bad)
mov
xchg
xor
add
sub
pop
call
push
push
call
add
mov
sahf
add
mov
mov
fdivrp
(bad)
(bad)
mov
xchg
mov
sahf
add
fs
add
sub
pop
add
push
push
call
imul
xor
mov
mov
mov
jbe
xchg
mov
mov
(bad)
(bad)
inc
add
mov
rcr
(bad)
(bad)
(bad)
(bad)
(bad)
inc
add
jmp
jecxz
mov
push
push
call
cmp
(bad)
mov
add
(bad)
(bad)
inc
add
mov
add
aam
fld
scas
add
mov
pusha
call
add
retf
(bad)
push
rol
jmp
loop
mov
push
push
call
rcl
(bad)
(bad)
jmp
(bad)
(bad)
dec
add
add
(bad)
(bad)
inc
(bad)
(bad)
inc
add
add
jb
add
xbegin
out
lea
push
push
call
scas
lods
cmps
add
(bad)
inc
cmps
cmps
add
jmp
(bad)
(bad)
dec
add
fmulp
xchg
cmps
mov
(bad)
jmp
inc
jmp
out
push
push
push
call
mov
(bad)
push
push
dec
add
add
imul
shr
add
add
add
sub
pop
push
push
push
call
mov
mov
data16
movs
jnp
(bad)
inc
add
retf
(bad)
inc
ins
rol
add
jl
add
cmps
add
add
mov
(bad)
inc
inc
add
pop
add
sub
pop
push
push
push
call
add
add
mov
dec
imul
mov
iret
js
int3
xchg
mov
add
mov
add
mov
and
add
sub
pop
call
push
push
call
jne
mov
(bad)
push
mov
(bad)
(bad)
inc
mov
enter
add
mov
(bad)
inc
add
(bad)
dec
out
add
add
jmp
out
push
push
push
call
mov
add
lods
test
dec
add
(bad)
(bad)
inc
mov
(bad)
(bad)
inc
add
jmp
out
push
push
push
push
call
xor
mov
mov
add
add
mov
(bad)
inc
mov
jle
mov
jmp
pop
add
sub
pop
call
push
push
call
add
mov
(bad)
(bad)
inc
add
arpl
(bad)
push
add
add
fadd
add
leave
add
cdq
(bad)
(bad)
jmp
retf
add
push
pop
add
sub
pop
push
push
shr
ror
dec
push
or
not
add
add
xor
shl
rol
sub
lea
add
pop
lea
pop
push
push
push
call
(bad)
int3
ret
add
(bad)
inc
mov
add
(bad)
(bad)
dec
int3
je
(bad)
jmp
add
ror
add
(bad)
inc
(bad)
rol
or
not
add
sub
pop
call
push
push
call
mov
jo
add
mov
jnp
(bad)
(bad)
(bad)
(bad)
inc
jp
aad
fimul
xchg
mov
jl
add
test
jnp
add
cmps
cmps
jge
lods
or
into
(bad)
(bad)
(bad)
push
(bad)
add
sub
pop
push
push
push
call
je
mov
cmps
cmps
add
stos
mov
mov
cwde
(bad)
(bad)
inc
add
(bad)
inc
nop
(bad)
(bad)
(bad)
(bad)
(bad)
dec
(bad)
(bad)
(bad)
mov
add
add
jmp
out
push
push
shr
push
xor
add
inc
sub
sub
ror
ror
shr
pop
xor
rol
inc
pop
push
push
call
add
jne
nop
retf
lods
add
add
test
add
add
(bad)
add
fwait
add
mov
cmps
xchg
ror
add
add
jmp
loopne
push
push
push
call
mov
js
add
add
mov
pushf
mov
(bad)
dec
add
xor
add
sub
pop
push
push
push
call
add
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
jnp
push
nop
test
mov
xchg
jmp
inc
mov
scas
fstp
add
mov
popf
and
add
sub
pop
call
push
push
call
add
test
(bad)
dec
add
(bad)
inc
(bad)
(bad)
inc
add
(bad)
(bad)
jmp
mov
test
mov
add
and
add
sub
pop
mov
push
push
call
jb
(bad)
call
add
jb
(bad)
(bad)
inc
jbe
jp
pusha
add
add
add
add
fild
jmp
jecxz
push
push
push
call
aam
(bad)
(bad)
push
fdivr
(bad)
jmp
mov
add
add
lods
movs
fs
enter
add
data16
add
(bad)
jmp
stos
mov
mov
or
inc
add
sub
pop
push
push
push
call
mov
mov
int3
add
ins
add
gs
rol
jo
movs
add
push
add
add
(bad)
(bad)
inc
fadd
jno
stos
leave
push
pop
add
sub
pop
mov
push
push
call
mov
les
add
add
cwde
add
mov
mov
mov
add
inc
add
jmp
loop
mov
sub
push
push
call
fisttp
(bad)
jmp
mov
(bad)
(bad)
inc
(bad)
(bad)
(bad)
fadd
pusha
add
add
mov
into
add
xchg
addr16
(bad)
inc
add
lds
add
sar
(bad)
jmp
loope
add
push
push
call
ins
add
int3
cwde
jo
pushf
add
push
add
mov
add
les
add
add
ret
fild
jmp
jecxz
push
mov
push
push
call
movs
mov
add
add
mov
test
cdq
add
add
test
(bad)
(bad)
inc
(bad)
(bad)
dec
sub
add
sub
pop
sub
add
push
push
call
shr
ror
mov
test
into
xchg
add
mov
add
add
mov
(bad)
(bad)
(bad)
mov
(bad)
jle
(bad)
(bad)
dec
add
add
sub
pop
pop
push
push
call
mov
test
(bad)
call
add
ret
fst
mov
mov
pusha
outs
mov
ret
clc
(bad)
(bad)
jmp
jecxz
mov
sub
push
push
call
add
(bad)
jmp
(bad)
test
test
fsubr
add
mov
stos
add
add
add
add
mov
fild
popa
xchg
nop
xchg
stos
je
xchg
retf
(bad)
inc
ret
(bad)
jmp
loop
push
push
push
call
int3
(bad)
(bad)
jmp
stos
jle
add
jmp
mov
mov
add
add
add
cwd
add
add
(bad)
inc
push
xlat
add
sub
pop
mov
push
push
call
test
mov
add
(bad)
(bad)
(bad)
fmul
jo
int
iret
add
(bad)
jmp
mov
inc
push
rol
jmp
loop
sub
sub
push
push
call
add
xchg
add
mov
scas
test
(bad)
(bad)
call
add
add
add
mov
add
add
add
sub
pop
pop
push
push
call
push
rol
add
add
gs
mov
add
add
add
add
add
(bad)
(bad)
(bad)
push
rol
jmp
loope
call
push
push
call
pusha
(bad)
(bad)
(bad)
mov
add
jns
add
(bad)
(bad)
(bad)
fcomp
(bad)
push
add
add
xchg
add
(bad)
(bad)
inc
popf
add
and
add
sub
pop
pop
push
push
call
(bad)
int
(bad)
inc
add
mov
add
test
(bad)
jmp
add
add
fild
mov
add
add
mov
(bad)
(bad)
inc
fwait
add
add
sub
pop
mov
push
push
call
mov
add
arpl
add
mov
lods
add
(bad)
cdq
ret
popa
mov
movs
add
add
add
add
fsubr
leave
add
sub
pop
mov
push
push
call
(bad)
(bad)
inc
(bad)
(bad)
inc
arpl
fiadd
(bad)
(bad)
call
inc
jp
add
add
(bad)
jmp
leave
mov
add
jmp
loope
sub
mov
push
push
call
fist
add
mov
(bad)
inc
test
add
leave
mov
add
add
push
pop
add
sub
pop
sub
mov
push
push
call
leave
mov
add
fadd
add
mov
xchg
add
(bad)
inc
add
(bad)
add
fs
movs
cmps
mov
(bad)
inc
push
pop
add
sub
pop
sub
add
push
push
call
add
rol
add
nop
add
fidivr
(bad)
(bad)
inc
or
jne
cmps
add
add
add
add
jmp
rol
jmp
loop
add
push
push
call
add
fs
scas
(bad)
(bad)
inc
stos
xchg
movs
add
mov
add
popf
mov
add
sub
pop
mov
push
push
call
add
mov
jge
shl
add
into
add
xchg
add
mov
(bad)
(bad)
push
add
add
add
fdiv
add
mov
add
xor
add
sub
pop
push
push
rol
add
push
push
pop
add
lea
sub
sub
xor
pop
not
sub
sub
pop
push
push
push
call
add
mov
xchg
(bad)
(bad)
(bad)
(bad)
(bad)
inc
add
mov
leave
add
sub
pop
call
push
push
push
call
add
add
(bad)
dec
nop
add
add
add
add
cwde
lods
into
add
rol
(bad)
mov
mov
add
add
add
jmp
loope
push
push
add
sub
push
or
not
add
dec
not
sub
add
sub
sub
add
pop
sub
sub
not
pop
push
push
call
add
lds
les
sub
ja
jp
(bad)
(bad)
dec
into
cmps
(bad)
(bad)
inc
shl
clc
(bad)
(bad)
jmp
loopne
push
push
push
call
mov
add
pusha
mov
scas
add
add
add
inc
fsub
jmp
(bad)
(bad)
(bad)
(bad)
inc
and
add
sub
pop
push
push
push
call
mov
add
fwait
movs
(bad)
(bad)
jmp
inc
xlat
add
add
(bad)
call
enter
inc
popf
add
(bad)
(bad)
(bad)
(bad)
inc
pushf
jle
mov
add
push
leave
add
sub
pop
call
mov
push
push
call
add
xchg
(bad)
(bad)
push
mov
jns
iret
sahf
xchg
add
mov
clc
(bad)
(bad)
jmp
loope
push
push
push
push
call
test
push
mov
mov
(bad)
push
add
mov
(bad)
inc
add
add
mov
mov
add
jnp
mov
push
rcr
inc
lods
popf
add
mov
add
add
jmp
loop
mov
push
push
call
cmps
(bad)
cmps
add
dec
add
add
add
jnp
cdq
mov
add
test
mov
stos
scas
(bad)
(bad)
(bad)
(bad)
(bad)
call
add
add
jmp
loope
mov
push
push
call
popa
add
bound
add
add
add
mov
mov
add
retf
add
rol
sub
pop
sub
push
push
call
js
lods
mov
add
fisub
add
jne
add
mov
jle
je
xchg
xchg
add
mov
rol
jmp
loop
add
push
push
call
imul
add
push
inc
add
jo
(bad)
push
add
jp
add
(bad)
(bad)
(bad)
inc
sar
(bad)
jmp
loopne
push
push
push
call
add
add
add
add
add
add
jnp
pushf
test
jns
add
jne
add
(bad)
inc
add
mov
into
or
not
add
sub
pop
mov
push
push
call
(bad)
(bad)
call
outs
add
add
add
mov
mov
(bad)
push
add
mov
(bad)
(bad)
inc
(bad)
(bad)
inc
add
sahf
add
and
add
sub
pop
sub
push
push
call
mov
mov
stos
mov
mov
test
imul
lds
sahf
jbe
(bad)
(bad)
dec
add
test
sub
pop
add
pop
push
push
call
mov
mov
jns
add
shl
(bad)
(bad)
jmp
add
cdq
enter
mov
scas
ret
(bad)
jmp
fild
jmp
jecxz
mov
push
push
call
imul
(bad)
dec
arpl
mov
inc
jge
xchg
add
add
jae
fild
jmp
jecxz
sub
push
push
call
xchg
add
(bad)
(bad)
inc
addr16
sbb
add
shl
mov
add
add
(bad)
dec
add
mov
and
add
sub
pop
call
push
push
call
(bad)
(bad)
jmp
(bad)
(bad)
push
movs
mov
fwait
add
ins
outs
call
mov
add
add
ror
retf
jbe
mov
into
(bad)
(bad)
(bad)
inc
xabort
(bad)
jmp
out
mov
push
push
call
add
call
add
jnp
cmp
dec
fwait
add
(bad)
inc
int
cmps
(bad)
mov
cmps
sub
add
sub
pop
sub
push
push
call
mov
retf
gs
jge
xchg
add
add
add
popa
add
jne
mov
mov
add
sub
pop
or
je
push
push
call
mov
push
inc
add
add
(bad)
call
add
stos
shr
xchg
add
(bad)
(bad)
jmp
mov
aam
add
add
mov
jp
cmps
js
retf
and
add
add
jmp
out
mov
push
push
call
add
add
sahf
xchg
add
fiadd
fwait
add
(bad)
(bad)
(bad)
(bad)
(bad)
jmp
fld
add
(bad)
call
xchg
add
xchg
(bad)
dec
add
push
fld
fisttp
(bad)
push
(bad)
add
sub
pop
sub
push
push
call
mov
add
(bad)
(bad)
push
xchg
mov
test
mov
add
(bad)
fiadd
add
fdiv
add
add
mov
add
xchg
mov
add
sub
pop
mov
push
push
call
call
(bad)
(bad)
jmp
mov
(bad)
(bad)
(bad)
inc
add
xchg
shl
mov
(bad)
(bad)
call
add
(bad)
(bad)
(bad)
inc
xbegin
out
sub
push
push
call
fadd
add
add
retf
(bad)
inc
(bad)
(bad)
jmp
add
add
fwait
add
add
scas
push
pop
add
sub
pop
mov
push
push
call
add
int
mov
add
ja
add
add
mov
add
mov
(bad)
(bad)
inc
enter
(bad)
(bad)
jmp
add
rol
sub
pop
sub
push
push
call
int
mov
(bad)
jmp
add
add
jbe
add
jns
mov
push
add
lds
add
add
stos
int3
add
les
(bad)
retf
add
push
pop
add
sub
pop
add
add
push
push
call
add
add
jnp
(bad)
into
fidivr
mov
movs
add
cwde
add
(bad)
(bad)
mov
imul
add
mov
add
(bad)
(bad)
inc
ret
clc
(bad)
(bad)
jmp
jecxz
push
push
push
call
mov
add
jb
add
mov
add
mov
(bad)
(bad)
inc
(bad)
(bad)
(bad)
(bad)
(bad)
dec
add
add
xchg
or
inc
add
sub
pop
mov
push
push
call
add
scas
mov
aam
(bad)
jmp
inc
add
add
add
pop
add
sub
pop
sub
add
push
push
call
(bad)
(bad)
inc
aam
mov
mov
(bad)
(bad)
inc
pusha
add
(bad)
jmp
fild
add
or
inc
add
sub
pop
pop
push
push
call
(bad)
(bad)
(bad)
(bad)
(bad)
dec
(bad)
(bad)
(bad)
fnstcw
add
mov
jbe
add
(bad)
(bad)
inc
ret
clc
(bad)
(bad)
jmp
jecxz
push
push
push
call
add
add
(bad)
dec
stos
mov
mov
(bad)
jmp
(bad)
(bad)
inc
add
popa
add
mov
inc
test
(bad)
(bad)
mov
add
add
rol
sub
pop
push
push
push
call
test
mov
(bad)
inc
add
add
add
or
inc
add
jle
add
(bad)
inc
jno
(bad)
(bad)
(bad)
(bad)
jmp
(bad)
inc
(bad)
(bad)
inc
mov
mov
retf
(bad)
(bad)
(bad)
push
rol
jmp
jecxz
push
push
push
call
xchg
add
add
popa
add
(bad)
(bad)
fsubr
add
je
lea
(bad)
inc
aad
mov
ror
lods
rol
add
or
inc
add
sub
pop
call
mov
push
push
call
xchg
add
add
rol
(bad)
call
add
(bad)
(bad)
jmp
add
inc
jmp
out
sub
push
push
call
bound
sub
add
add
nop
add
mov
add
je
jbe
(bad)
(bad)
inc
add
add
retf
add
cmps
add
add
(bad)
(bad)
dec
mov
or
not
add
sub
pop
or
je
push
push
call
add
mov
add
test
and
inc
mov
add
scas
(bad)
(bad)
inc
rol
(bad)
(bad)
jmp
and
add
sub
pop
mov
push
push
call
aad
fiadd
(bad)
(bad)
(bad)
fld
mov
mov
fld
jno
add
and
add
sub
pop
sub
push
push
call
add
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
inc
push
iret
xchg
add
outs
add
add
test
add
les
add
add
imul
add
inc
inc
xabort
(bad)
jmp
out
mov
add
push
push
call
je
pusha
jge
(bad)
(bad)
(bad)
mov
(bad)
inc
xchg
(bad)
les
je
fwait
popa
mov
jb
fwait
mov
add
(bad)
inc
data16
mov
inc
inc
sar
(bad)
jmp
loopne
add
push
push
call
jno
add
(bad)
(bad)
inc
lods
add
add
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
jle
(bad)
(bad)
(bad)
mov
je
mov
mov
add
data16
add
imul
(bad)
(bad)
jmp
jecxz
push
push
push
call
les
shl
(bad)
dec
add
mov
mov
add
add
jns
xchg
stos
retf
cmps
movs
rol
add
stos
lea
dec
xor
add
sub
pop
push
push
push
push
call
lds
jno
fwait
mov
add
jge
(bad)
call
add
(bad)
(bad)
inc
xchg
mov
jb
add
or
inc
add
sub
pop
call
push
push
call
lods
lods
je
add
add
ja
mov
fwait
mov
retf
mov
(bad)
cmps
mov
jns
add
(bad)
(bad)
(bad)
jp
ja
mov
mov
les
fwait
add
test
mov
xbegin
out
pop
push
push
call
fst
push
mov
jb
(bad)
inc
mov
(bad)
(bad)
jns
jb
mov
add
(bad)
(bad)
inc
int
stos
aam
or
inc
add
sub
pop
push
mov
push
push
call
(bad)
(bad)
dec
mov
xchg
jae
add
add
fiadd
(bad)
(bad)
(bad)
mov
mov
(bad)
inc
add
lods
(bad)
(bad)
(bad)
(bad)
(bad)
dec
add
add
add
(bad)
push
rol
jmp
loope
sub
push
push
push
call
fisttp
add
cdq
(bad)
xchg
add
mov
mov
(bad)
inc
add
lds
rol
sub
pop
push
push
push
call
add
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
inc
add
add
xchg
add
add
js
add
mov
add
test
(bad)
jmp
mov
mov
(bad)
(bad)
jmp
inc
jmp
out
call
push
push
call
(bad)
(bad)
dec
add
fiadd
xchg
add
mov
(bad)
(bad)
jmp
mov
add
(bad)
(bad)
inc
add
(bad)
inc
pusha
add
add
add
mov
je
enter
push
rol
jmp
loopne
push
push
sub
inc
sub
push
xor
add
add
add
shr
sub
not
rol
add
pop
inc
pop
pop
push
push
call
jnp
add
add
jno
fwait
mov
mov
add
mov
add
xchg
mov
mov
and
(bad)
jle
add
add
(bad)
inc
add
add
add
sub
pop
mov
mov
push
push
call
fstp
jp
(bad)
(bad)
(bad)
dec
rol
add
stos
add
add
add
mov
add
mov
add
imul
add
mov
xabort
(bad)
jmp
out
mov
push
push
push
call
pushf
jge
add
add
push
xchg
mov
(bad)
jmp
cmps
add
add
add
shr
(bad)
(bad)
inc
(bad)
dec
pop
add
sub
pop
ret
push
push
push
call
sar
cdq
lea
add
into
add
int3
add
ja
add
int
add
retf
lods
rol
mov
add
arpl
retf
test
lds
add
(bad)
(bad)
jmp
clc
(bad)
(bad)
jmp
loop
mov
push
push
call
stos
add
ja
(bad)
(bad)
push
add
lea
add
shl
mov
add
(bad)
(bad)
(bad)
push
(bad)
add
sub
pop
add
push
push
call
popa
xchg
add
xchg
mov
mov
add
rol
jo
mov
int3
add
mov
(bad)
inc
xchg
add
mov
ficom
sub
add
sub
pop
mov
xor
push
push
call
add
add
sar
mov
mov
bound
mov
pushf
mov
imul
stos
ja
add
mov
mov
dec
xor
add
sub
pop
leave
push
push
call
add
iret
add
(bad)
jge
mov
(bad)
(bad)
inc
lods
jl
mov
retf
mov
aad
mov
(bad)
inc
pusha
stos
lahf
add
add
add
add
sub
pop
ret
push
push
push
call
add
add
movs
jbe
add
add
(bad)
(bad)
call
add
add
add
pushw
(bad)
(bad)
fld
push
rol
jmp
loopne
mov
push
push
push
call
add
push
(bad)
(bad)
mov
xchg
aad
jl
cmp
push
xchg
iret
test
xchg
xor
add
sub
pop
push
push
push
call
jnp
(bad)
(bad)
jmp
add
mov
nop
cdq
nop
les
jmp
pushf
add
jno
call
mov
(bad)
(bad)
mov
imul
push
add
loopne
add
add
jmp
loopne
push
push
push
call
test
add
mov
mov
xchg
call
popa
xchg
aad
jo
pusha
mov
(bad)
(bad)
dec
mov
ja
xchg
retf
add
(bad)
(bad)
mov
js
mov
mov
add
test
and
add
sub
pop
push
push
push
call
(bad)
(bad)
(bad)
jge
xchg
fidiv
fwait
mov
(bad)
inc
jp
mov
add
(bad)
(bad)
inc
add
fstp
add
add
sub
pop
mov
mov
push
push
call
xlat
add
(bad)
(bad)
inc
add
mov
cdq
jp
add
add
add
(bad)
(bad)
mov
add
push
add
mov
rol
sub
pop
mov
cmp
push
push
call
jno
add
jge
mov
inc
mov
add
add
(bad)
inc
jae
jnp
(bad)
push
add
(bad)
jmp
inc
jmp
out
test
push
push
call
arpl
int
xchg
fs
(bad)
add
(bad)
(bad)
inc
add
cmps
add
addr16
(bad)
push
(bad)
(bad)
push
(bad)
dec
jne
fild
jmp
jecxz
dec
jne
push
push
call
rol
add
xchg
add
lods
arpl
pushf
add
(bad)
(bad)
dec
test
mov
imul
mov
into
mov
xlat
jb
xchg
cmps
imul
clc
(bad)
(bad)
jmp
loope
pop
push
sub
sub
dec
pop
pop
pop
push
push
call
mov
(bad)
inc
fadd
fwait
add
(bad)
dec
add
add
add
add
mov
pop
add
sub
pop
pop
push
push
call
mov
add
(bad)
jmp
add
(bad)
scas
add
add
(bad)
int3
add
push
pop
add
sub
pop
leave
push
ror
rol
rol
pop
ret
push
dec
xor
dec
lea
pop
push
push
sub
shr
pop
mov
cmp
jne
push
push
call
add
mov
add
ja
mov
add
(bad)
call
add
int
add
mov
mov
add
add
inc
xchg
push
push
pop
add
sub
pop
mov
push
push
call
jge
add
call
(bad)
(bad)
jmp
les
add
jno
test
movs
(bad)
(bad)
call
add
add
sub
add
sub
pop
jmp
mov
push
dec
pop
push
push
sub
pop
mov
push
push
call
(bad)
(bad)
dec
add
add
je
mov
lea
(bad)
(bad)
call
xchg
add
(bad)
(bad)
call
(bad)
(bad)
call
outs
(bad)
(bad)
call
sahf
popa
(bad)
(bad)
push
add
(bad)
(bad)
(bad)
(bad)
(bad)
jp
(bad)
inc
push
rol
jmp
loop
sub
push
sub
pop
mov
push
add
rol
dec
pop
xor
or
push
push
call
add
(bad)
inc
fmul
push
(bad)
jmp
add
imul
add
add
xchg
mov
add
add
sub
pop
inc
push
push
call
add
(bad)
mov
add
add
(bad)
(bad)
inc
add
and
add
(bad)
inc
add
add
mov
jle
xchg
xchg
add
add
rol
sub
pop
or
push
dec
add
shl
pop
dec
push
push
call
(bad)
int
(bad)
(bad)
inc
lods
add
(bad)
(bad)
jmp
add
mov
add
or
inc
add
sub
pop
sub
push
add
dec
add
pop
jmp
push
pop
sub
push
rol
shr
not
pop
push
push
push
call
je
add
(bad)
(bad)
call
mov
add
mov
add
test
(bad)
(bad)
inc
mov
add
mov
rol
add
sub
pop
pop
sub
push
push
call
add
(bad)
(bad)
dec
enter
add
movs
js
(bad)
add
(bad)
(bad)
jmp
add
int3
add
rol
jmp
loop
cmp
jne
push
dec
rol
pop
mov
push
shr
inc
shr
add
pop
lea
sub
push
shl
shl
xor
sub
pop
mov
push
push
call
add
cmps
shl
ins
mov
mov
add
mov
mov
mov
mov
add
(bad)
add
(bad)
(bad)
jmp
inc
jmp
out
shr
push
not
add
inc
pop
add
push
push
call
mov
jne
add
add
mov
enter
add
sar
mov
xchg
mov
mov
popa
add
sub
add
sub
pop
mov
xor
push
push
call
rol
movs
rol
outs
fld
int
(bad)
(bad)
jmp
mov
mov
inc
xbegin
out
sub
push
sub
xor
pop
cmp
jne
push
lea
add
pop
mov
push
add
dec
pop
pop
leave
push
sub
pop
ret
push
not
pop
push
mov
push
lea
pop
push
push
push
call
mov
add
add
xchg
add
xchg
(bad)
(bad)
dec
pushw
mov
sar
(bad)
jmp
loopne
push
push
push
shr
pop
push
push
not
add
shl
pop
mov
mov
push
not
add
sub
pop
mov
push
xor
inc
shl
pop
test
push
inc
shl
pop
sub
push
pop
add
push
ror
shl
pop
dec
jne
pop
push
push
call
fisttp
into
bound
iret
add
retf
int
cwde
test
lods
add
mov
add
add
(bad)
(bad)
dec
into
mov
add
add
(bad)
inc
mov
clc
(bad)
(bad)
jmp
out
pop
push
push
call
leave
mov
mov
mov
xchg
mov
(bad)
dec
add
add
(bad)
inc
rcl
mov
cmps
(bad)
(bad)
(bad)
call
add
(bad)
jl
retf
(bad)
(bad)
(bad)
inc
ret
clc
(bad)
(bad)
jmp
jecxz
pop
push
sub
inc
pop
pop
push
push
call
mov
(bad)
inc
imul
xchg
mov
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
jge
(bad)
(bad)
dec
xchg
(bad)
(bad)
(bad)
jmp
mov
xchg
add
add
jnp
add
cdq
mov
(bad)
call
(bad)
(bad)
jmp
add
or
inc
add
sub
pop
leave
push
xor
pop
ret
push
mov
add
push
push
push
mov
mov
cmp
je
cmp
je
cmp
je
dec
jne
pop
pop
pop
leave
ret
push
mov
add
push
push
push
push
push
push
mov
mov
lea
sub
test
add
mov
mov
add
dec
movsx
jmp
jmp
cmp
jne
pop
pop
pop
pop
pop
pop
leave
ret
push
push
shl
lea
add
pop
mov
push
push
call
add
add
add
add
mov
add
rol
lahf
mov
mov
fld
or
not
add
sub
pop
push
push
rol
not
add
pop
push
push
not
inc
pop
push
mov
push
add
pop
mov
mov
push
xor
pop
mov
mov
push
shl
shr
pop
inc
push
push
call
rol
add
mov
jae
(bad)
(bad)
(bad)
(bad)
inc
add
add
mov
fdivr
(bad)
inc
ins
and
fild
jmp
jecxz
inc
push
add
sub
pop
dec
push
push
call
add
mov
call
mov
add
add
xchg
xchg
(bad)
inc
mov
rol
add
movs
add
fst
imul
add
(bad)
(bad)
(bad)
inc
ret
(bad)
jmp
loop
cmp
jne
call
push
sub
inc
pop
add
jmp
push
sub
sub
pop
cmp
jne
call
push
push
call
(bad)
sahf
add
mov
sar
(bad)
jmp
xchg
add
add
add
(bad)
(bad)
inc
add
(bad)
dec
or
not
add
sub
pop
add
push
push
call
add
scas
xchg
ins
lahf
arpl
add
popf
shr
add
cwde
(bad)
(bad)
push
(bad)
(bad)
(bad)
(bad)
(bad)
dec
mov
(bad)
call
(bad)
(bad)
(bad)
inc
xabort
(bad)
jmp
out
jmp
cmp
jne
push
dec
rol
pop
call
push
push
call
scas
(bad)
(bad)
jmp
fadd
test
add
mov
scas
retf
mov
xlat
(bad)
(bad)
dec
mov
jns
test
inc
push
rol
jmp
loope
add
push
push
call
jl
add
jne
bound
popa
add
ret
xchg
mov
add
add
test
add
into
lea
add
(bad)
(bad)
mov
(bad)
dec
jle
leave
add
sub
pop
jmp
push
push
call
imul
(bad)
(bad)
(bad)
(bad)
inc
stos
xchg
mov
add
add
lahf
add
(bad)
dec
retf
jo
mov
ret
(bad)
(bad)
inc
jnp
xchg
add
jb
add
or
inc
add
sub
pop
cmp
jb
cmp
ja
push
push
call
(bad)
(bad)
inc
retf
jp
cmps
jge
(bad)
call
inc
cdq
add
add
add
add
(bad)
(bad)
push
(bad)
add
sub
pop
call
add
push
add
dec
xor
inc
pop
jmp
cmp
jb
push
push
call
jb
les
jge
(bad)
(bad)
dec
gs
(bad)
jmp
xchg
mov
(bad)
inc
(bad)
(bad)
call
sar
(bad)
jmp
loope
cmp
ja
call
push
lea
pop
add
push
push
call
pusha
(bad)
(bad)
jmp
mov
js
(bad)
(bad)
dec
(bad)
call
(bad)
(bad)
inc
mov
add
jo
cmps
aam
jnp
outs
test
add
(bad)
(bad)
inc
push
add
add
add
mov
(bad)
(bad)
(bad)
inc
sar
(bad)
jmp
loopne
jmp
cmp
je
push
push
call
into
add
retf
les
add
mov
ret
mov
lea
jge
enter
inc
sar
(bad)
jmp
loopne
cmp
jne
call
push
push
call
mov
add
(bad)
(bad)
call
add
mov
xchg
jno
mov
test
add
add
mov
push
leave
(bad)
(bad)
(bad)
inc
sar
(bad)
jmp
loope
add
push
push
call
push
(bad)
(bad)
call
add
aam
mov
les
add
add
and
(bad)
(bad)
dec
lds
add
mov
retf
(bad)
(bad)
(bad)
inc
pusha
mov
retf
(bad)
inc
ret
(bad)
jmp
loop
jmp
push
push
call
add
xchg
add
mov
add
(bad)
inc
ins
add
add
add
mov
mov
add
push
rol
jmp
jecxz
cmp
jne
push
xor
sub
pop
call
push
inc
pop
add
push
push
call
add
mov
add
(bad)
(bad)
call
xlat
aad
add
mov
(bad)
(bad)
inc
pushf
add
mov
mov
cdq
mov
sub
add
sub
pop
jmp
mov
push
push
call
leave
or
pusha
mov
add
add
inc
xchg
add
popf
add
scas
(bad)
(bad)
jmp
add
push
lods
xchg
mov
leave
add
sub
pop
mov
push
shl
sub
pop
inc
inc
push
shr
ror
add
pop
dec
jne
push
push
call
mov
mov
(bad)
(bad)
(bad)
jl
add
test
mov
(bad)
(bad)
inc
add
(bad)
push
jle
rol
ins
add
add
(bad)
(bad)
inc
cdq
or
not
add
sub
pop
pop
pop
push
add
pop
pop
push
push
call
add
mov
add
add
add
add
jne
(bad)
dec
xchg
retf
add
and
add
sub
pop
leave
ret
push
push
call
mov
rcr
mov
(bad)
(bad)
jmp
mov
nop
add
add
fild
jmp
jecxz
mov
push
push
call
add
add
add
scas
add
mov
fadd
mov
mov
(bad)
add
add
fadd
int
add
jno
jge
add
pusha
mov
mov
add
rol
jmp
loop
mov
push
push
call
mov
mov
(bad)
(bad)
inc
add
jne
cmps
add
(bad)
(bad)
mov
add
lods
xchg
stos
add
clc
(bad)
(bad)
jmp
loop
inc
push
push
call
gs
(bad)
jmp
jmp
rcr
retf
add
dec
sar
mov
sar
(bad)
jmp
loope
inc
dec
je
push
xor
lea
shr
ror
pop
ret
push
not
add
add
pop
add
push
sub
add
pop
jmp
push
push
call
mov
xchg
(bad)
(bad)
inc
add
add
add
js
(bad)
(bad)
dec
add
mov
mov
clc
(bad)
(bad)
jmp
loopne
push
push
push
call
mov
(bad)
inc
add
ins
mov
add
ret
mov
mov
add
add
pushf
add
(bad)
jmp
pop
add
sub
pop
mov
push
push
call
add
shl
les
mov
add
jnp
(bad)
(bad)
inc
add
add
shr
add
sub
pop
add
push
push
call
shl
add
enter
mov
xchg
(bad)
(bad)
call
mov
aad
add
add
add
add
gs
(bad)
(bad)
(bad)
(bad)
inc
xchg
and
add
sub
pop
push
push
rol
ror
ror
pop
push
mov
push
xor
pop
sub
add
push
pop
mov
push
push
call
retf
add
add
mov
add
add
(bad)
(bad)
(bad)
mov
int3
(bad)
(bad)
inc
jecxz
add
add
jmp
jecxz
lea
push
push
push
call
rcr
add
mov
push
jge
xchg
fdivrp
(bad)
call
mov
bound
(bad)
inc
xlat
add
sahf
add
add
add
mov
pushf
mov
push
push
(bad)
push
(bad)
add
sub
pop
call
mov
push
inc
not
pop
sub
add
push
push
call
mov
mov
add
add
retf
(bad)
jne
(bad)
(bad)
push
ret
retf
xlat
xchg
add
sahf
fadd
push
rol
jmp
loopne
mov
call
push
push
call
add
(bad)
jmp
xchg
call
movs
cmp
scas
add
xor
add
sub
pop
pop
pop
push
sub
pop
leave
push
sub
pop
ret
push
push
call
arpl
add
mov
(bad)
inc
(bad)
(bad)
inc
add
sar
inc
fwait
cmps
add
(bad)
(bad)
dec
nop
mov
clc
(bad)
(bad)
jmp
out
push
push
push
call
lods
nop
mov
(bad)
cmps
add
mov
(bad)
dec
xlat
add
popf
xchg
mov
ror
jne
(bad)
inc
add
rol
sub
pop
mov
push
push
call
add
popa
add
(bad)
(bad)
dec
add
(bad)
inc
xchg
(bad)
inc
mov
aam
add
scas
or
inc
add
sub
pop
add
push
push
add
pop
push
push
push
call
fs
mov
into
mov
movs
retf
mov
(bad)
(bad)
jmp
arpl
add
adc
pushf
push
mov
and
add
sub
pop
push
push
push
call
add
(bad)
(bad)
inc
add
add
pusha
mov
add
(bad)
inc
jno
ret
mov
jno
cwde
fadd
rol
add
inc
inc
sar
(bad)
jmp
loope
push
push
push
call
test
(bad)
(bad)
inc
add
add
cwde
add
mov
nop
xlat
add
add
mov
js
add
inc
sar
(bad)
jmp
loope
mov
push
pop
lea
sub
push
not
pop
mov
shr
push
push
call
enter
add
cdq
add
fcos
(bad)
inc
test
(bad)
(bad)
jmp
or
mov
sahf
jnp
gs
xchg
add
add
ror
imul
inc
add
sub
pop
add
push
push
call
add
(bad)
call
cmps
add
add
mov
add
(bad)
inc
add
jnp
mov
add
retf
sub
add
sub
pop
mov
mov
push
push
call
add
mov
add
add
xchg
add
mov
add
(bad)
(bad)
dec
mov
(bad)
inc
mov
mov
(bad)
mov
mov
(bad)
inc
mov
add
push
or
not
add
sub
pop
sub
jne
mov
push
push
call
mov
xchg
xchg
stos
stos
mov
(bad)
(bad)
dec
add
add
mov
add
add
fwait
add
add
push
rol
jmp
loope
mov
push
dec
sub
pop
jmp
push
push
call
add
(bad)
call
add
mov
rol
mov
add
xchg
mov
rol
jmp
loop
mov
push
push
call
mov
dec
xchg
test
inc
mov
add
xchg
test
(bad)
inc
rol
lds
js
test
rol
sub
pop
mov
push
sub
pop
sub
jne
push
push
call
add
add
mov
mov
cmps
add
mov
add
shl
add
(bad)
inc
(bad)
cmps
add
xor
add
sub
pop
mov
mov
push
push
call
(bad)
(bad)
call
fdivr
(bad)
(bad)
inc
lea
mov
inc
add
add
add
retf
mov
cwde
add
or
not
add
sub
pop
jmp
push
push
call
add
(bad)
inc
add
(bad)
(bad)
fld
je
(bad)
(bad)
jle
add
cwde
jb
add
add
arpl
lods
jae
into
add
mov
call
mov
add
(bad)
(bad)
(bad)
jl
push
leave
add
sub
pop
mov
mov
push
push
call
mov
mov
(bad)
(bad)
(bad)
(bad)
dec
add
(bad)
dec
add
je
add
add
sub
pop
cmp
jne
push
push
call
add
mov
xchg
lea
mov
fnstsw
movs
jl
fimul
jns
add
test
add
ret
add
mov
jo
cmp
or
not
add
sub
pop
mov
push
push
call
xchg
lods
jp
add
mov
(bad)
inc
mov
nop
stos
mov
scas
add
(bad)
dec
add
jae
iret
mov
add
mov
add
(bad)
push
rol
jmp
jecxz
cmp
je
push
lea
not
lea
pop
mov
push
xor
inc
sub
pop
mov
push
rol
shl
pop
jmp
mov
push
push
call
mov
iret
imul
mov
add
add
(bad)
(bad)
inc
jbe
add
add
add
push
rcr
retf
add
(bad)
(bad)
inc
push
rol
jmp
loopne
mov
push
sub
pop
cmp
jne
push
xor
pop
mov
mov
push
push
call
cmps
add
jns
jnp
(bad)
dec
add
mov
(bad)
inc
ja
iret
(bad)
(bad)
(bad)
push
xlat
add
sub
pop
jmp
push
shl
inc
pop
mov
push
shl
inc
pop
cmp
jne
push
lea
pop
mov
push
shr
lea
pop
mov
push
push
call
stos
(bad)
lods
test
add
add
(bad)
(bad)
inc
sahf
(bad)
fiadd
add
ins
mov
fimul
leave
mov
or
inc
add
sub
pop
jmp
push
inc
sub
pop
push
pop
push
push
call
(bad)
(bad)
call
xchg
add
lods
add
mov
je
add
gs
data16
xchg
fs
xor
add
sub
pop
mov
push
push
call
(bad)
(bad)
inc
add
(bad)
inc
test
add
(bad)
(bad)
dec
cdq
leave
add
jb
leave
(bad)
(bad)
(bad)
inc
sar
(bad)
jmp
loope
mov
push
xor
not
pop
mov
push
push
call
rcr
js
mov
imul
mov
(bad)
fsub
(bad)
xchg
(bad)
(bad)
call
fld
add
inc
sar
(bad)
jmp
loope
push
push
dec
lea
push
or
inc
add
not
sub
dec
xor
inc
pop
not
pop
push
shl
pop
push
push
sub
rol
pop
call
cmp
je
push
push
call
mov
(bad)
jmp
add
fs
add
add
mov
jle
add
xchg
sub
add
sub
pop
jmp
push
push
call
fiadd
mov
shl
mov
addr16
mov
mov
(bad)
push
mov
scas
(bad)
(bad)
(bad)
inc
mov
add
cmps
test
(bad)
jmp
mov
and
add
sub
pop
mov
push
add
pop
mov
push
push
call
mov
(bad)
dec
mov
add
xchg
stos
add
(bad)
jmp
rcr
lods
add
(bad)
jmp
(bad)
mov
leave
mov
mov
add
jbe
mov
jge
rol
jmp
loop
jmp
push
push
call
(bad)
(bad)
(bad)
(bad)
(bad)
dec
add
add
add
jns
add
(bad)
inc
add
add
mov
ficom
(bad)
(bad)
jge
mov
pusha
add
(bad)
dec
add
mov
(bad)
add
(bad)
(bad)
(bad)
inc
ret
clc
(bad)
(bad)
jmp
jecxz
xor
push
sub
pop
pop
push
xor
pop
pop
push
add
inc
pop
pop
push
push
call
add
fidivr
mov
(bad)
(bad)
(bad)
jge
xchg
xchg
(bad)
(bad)
jmp
imul
call
add
xor
add
sub
pop
pop
push
shr
add
pop
leave
ret
push
push
call
add
rcl
add
add
inc
add
lea
mov
(bad)
(bad)
jmp
mov
(bad)
call
imul
mov
add
mov
(bad)
inc
add
add
sub
add
sub
pop
push
push
push
call
cwde
xlat
mov
add
xchg
mov
(bad)
inc
add
mov
(bad)
inc
add
add
(bad)
(bad)
call
(bad)
jns
mov
add
mov
rol
sub
pop
mov
push
add
not
xor
add
pop
add
push
dec
ror
pop
cmp
jne
int3
push
sub
sub
shl
not
pop
push
push
sub
shl
push
or
inc
add
sub
sub
sub
sub
inc
sub
lea
pop
dec
sub
ror
sub
pop
push
push
call
data16
add
cmps
enter
shl
rcl
mov
push
iret
mov
add
dec
jns
rol
inc
add
sub
pop
push
call
push
dec
pop
push
push
push
call
add
shl
mov
mov
mov
add
mov
(bad)
call
add
add
mov
add
popf
(bad)
(bad)
call
(bad)
call
(bad)
mov
(bad)
(bad)
inc
inc
sar
(bad)
jmp
loopne
call
push
push
call
mov
addr16
(bad)
(bad)
call
fldenv
add
(bad)
inc
les
pusha
lds
add
and
add
sub
pop
jmp
push
add
ror
rol
pop
cmp
je
push
sub
rol
pop
cmp
jne
push
push
call
mov
add
add
mov
mov
add
jo
mov
add
add
xchg
les
add
add
shr
dec
mov
movs
add
add
fild
jmp
jecxz
push
push
sub
sub
add
pop
ret
jmp
push
pop
cmp
jne
push
push
call
(bad)
(bad)
dec
add
(bad)
(bad)
(bad)
jmp
xchg
mov
(bad)
(bad)
dec
(bad)
(bad)
inc
mov
arpl
jns
rol
and
ret
(bad)
jmp
loop
push
push
add
not
push
sub
add
ror
sub
ror
ror
shr
pop
shr
shr
lea
pop
push
sub
sub
pop
push
push
dec
pop
call
mov
push
push
call
add
add
(bad)
(bad)
call
mov
mov
mov
(bad)
(bad)
inc
ror
gs
and
add
sub
pop
push
push
shl
pop
push
push
push
push
call
add
add
add
jp
data16
(bad)
dec
test
add
ret
clc
(bad)
(bad)
jmp
jecxz
call
push
dec
pop
call
push
push
call
fmul
add
mov
xchg
sar
inc
sar
(bad)
(bad)
jge
ret
enter
mov
nop
xchg
mov
sub
add
sub
pop
push
push
push
or
inc
add
lea
sub
sub
rol
pop
not
pop
push
push
call
add
cdq
retf
add
add
fadd
fwait
add
mov
jl
add
push
(bad)
jle
xchg
mov
cwde
(bad)
(bad)
inc
add
mov
add
jne
rcl
nop
sub
add
sub
pop
push
push
rol
pop
call
push
push
call
(bad)
(bad)
dec
(bad)
mov
mov
pushf
mov
mov
add
add
add
add
add
inc
sahf
stos
xchg
ins
shr
test
sub
pop
mov
push
add
inc
not
lea
pop
push
push
push
push
call
(bad)
(bad)
(bad)
mov
push
sar
(bad)
dec
mov
(bad)
inc
retf
scas
imul
jmp
(bad)
(bad)
inc
(bad)
(bad)
inc
jge
add
add
mov
xor
add
sub
pop
push
push
push
call
add
(bad)
(bad)
inc
cmps
call
mov
(bad)
push
add
jne
(bad)
inc
mov
add
inc
jp
add
inc
add
mov
add
add
jmp
out
call
push
push
xor
lea
push
or
inc
add
inc
ror
sub
xor
ror
pop
inc
rol
rol
pop
push
lea
pop
push
call
push
inc
add
pop
mov
push
push
call
add
ins
fnstsw
add
mov
rol
add
mov
inc
aam
lods
add
mov
jle
(bad)
dec
ja
mov
test
mov
add
je
ret
ror
(bad)
push
xlat
add
sub
pop
push
push
rol
dec
pop
push
push
push
add
pop
call
push
push
call
add
mov
sahf
mov
push
add
pusha
mov
data16
add
(bad)
jmp
mov
add
inc
sar
(bad)
jmp
loope
push
push
add
push
or
not
add
not
sub
sub
not
ror
sub
pop
add
shr
rol
not
pop
push
inc
add
shl
pop
push
push
push
call
imul
add
arpl
mov
mov
iret
add
retf
(bad)
(bad)
dec
xabort
(bad)
jmp
out
call
push
push
call
add
add
add
test
(bad)
inc
xchg
mov
(bad)
jae
(bad)
(bad)
call
test
rol
add
add
xchg
(bad)
(bad)
call
sub
add
sub
pop
mov
push
push
call
mov
fmul
leave
add
mov
(bad)
(bad)
dec
add
add
add
cmp
push
jns
(bad)
(bad)
fld
add
scas
add
jno
loopne
add
add
jmp
loopne
push
push
push
call
xchg
fisttp
test
add
add
add
(bad)
dec
xchg
pushf
pusha
mov
enter
ja
mov
mov
sar
sub
add
sub
pop
push
push
push
push
call
scas
(bad)
(bad)
jmp
mov
scas
mov
add
mov
add
add
(bad)
xchg
mov
(bad)
(bad)
inc
sub
add
sub
pop
call
push
push
call
add
rol
jbe
pushf
jae
retf
add
je
(bad)
(bad)
inc
mov
add
(bad)
(bad)
inc
add
(bad)
inc
inc
sar
(bad)
jmp
loopne
leave
push
inc
pop
add
push
push
call
(bad)
(bad)
jmp
imul
leavew
add
jb
add
(bad)
dec
jbe
fnstcw
add
add
pushf
add
mov
jns
add
add
add
add
sub
pop
pop
push
push
call
add
ret
add
mov
mov
add
jno
add
add
(bad)
(bad)
dec
add
(bad)
(bad)
(bad)
(bad)
(bad)
dec
jns
fild
jmp
jecxz
pop
push
rol
sub
add
pop
pop
push
push
call
add
scas
(bad)
(bad)
(bad)
(bad)
(bad)
inc
ret
fisttp
add
(bad)
jmp
pop
add
sub
pop
pop
leave
push
push
call
add
mov
add
add
xor
add
xchg
add
xchg
and
add
sub
pop
add
push
add
pop
ret
push
push
call
call
add
rol
mov
rcr
(bad)
push
add
(bad)
(bad)
fadd
shr
mov
enter
add
sub
pop
jmp
cmp
jne
push
rol
ror
add
xor
pop
push
push
dec
shr
rol
push
push
pop
add
inc
sub
sub
sub
pop
ror
pop
push
push
call
jp
add
(bad)
jmp
arpl
jl
aad
bound
mov
(bad)
(bad)
inc
push
xor
add
sub
pop
push
call
push
dec
pop
push
push
push
call
lods
add
(bad)
(bad)
dec
scas
(bad)
(bad)
inc
(bad)
(bad)
(bad)
(bad)
(bad)
dec
add
(bad)
(bad)
jmp
mov
mov
bound
jge
mov
add
add
mov
add
add
test
sub
pop
call
jmp
push
push
call
add
(bad)
mov
lds
mov
scas
add
mov
(bad)
(bad)
jmp
mov
add
or
add
sub
pop
cmp
jne
push
add
dec
lea
pop
mov
push
push
shr
not
add
pop
push
push
add
shl
not
push
xor
add
lea
sub
add
lea
pop
shl
shl
pop
push
push
push
call
add
int3
mov
outs
jns
aam
(bad)
(bad)
dec
test
mov
add
add
sub
(bad)
inc
mov
(bad)
(bad)
inc
inc
ret
(bad)
jmp
loop
call
push
ror
shl
pop
mov
push
push
call
ja
mov
ret
(bad)
inc
add
mov
lahf
enter
(bad)
(bad)
(bad)
(bad)
call
(bad)
call
(bad)
(bad)
jmp
(bad)
jge
iret
(bad)
(bad)
(bad)
inc
xbegin
out
push
push
dec
dec
shr
shr
pop
push
push
not
pop
push
push
push
call
add
jge
outs
add
mov
xchg
shl
add
dec
add
add
jmp
loop
call
call
push
shr
pop
jmp
push
push
call
mov
add
add
add
js
imul
add
(bad)
retf
fmul
add
add
sub
pop
push
push
ror
lea
push
push
pop
add
sub
inc
sub
xor
sub
pop
dec
add
pop
push
push
push
call
add
(bad)
dec
add
les
(bad)
(bad)
(bad)
fsub
push
add
out
add
add
jmp
out
call
push
not
sub
sub
xor
pop
mov
push
push
push
call
jp
mov
(bad)
dec
fcmovu
mov
lea
into
mov
(bad)
(bad)
dec
aad
(bad)
(bad)
(bad)
mov
mov
cdq
xchg
test
cwde
mov
mov
mov
add
sub
pop
push
push
push
call
shr
fild
add
fiadd
dec
add
mov
int
add
add
add
jle
(bad)
jmp
pop
add
sub
pop
push
call
push
shl
shl
ror
pop
push
push
push
call
mov
add
add
(bad)
push
add
jnp
(bad)
(bad)
push
add
fisubr
(bad)
inc
jno
mov
(bad)
fcmovne
add
jns
add
pop
add
sub
pop
push
push
rol
pop
push
push
add
ror
not
lea
pop
call
push
shl
rol
pop
push
push
ror
xor
pop
push
push
push
call
les
sahf
(bad)
(bad)
dec
lods
test
retf
add
add
mov
jp
movs
(bad)
mov
(bad)
(bad)
call
add
data16
inc
push
rol
jmp
loope
push
push
sub
inc
pop
call
push
dec
add
pop
pop
push
push
call
add
mov
add
(bad)
jmp
pusha
jne
add
push
add
add
add
enter
leave
(bad)
(bad)
(bad)
inc
sar
(bad)
jmp
loope
dec
jne
push
inc
pop
push
push
not
inc
dec
not
push
or
not
add
sub
sub
dec
pop
ror
pop
push
push
inc
not
add
inc
pop
call
push
push
call
add
(bad)
jmp
jnp
mov
outs
mov
(bad)
fisub
(bad)
(bad)
(bad)
(bad)
(bad)
dec
mov
pop
add
sub
pop
push
push
push
call
xchg
jns
test
add
(bad)
(bad)
inc
lahf
mov
jbe
mov
rcl
add
xlat
add
add
(bad)
(bad)
(bad)
mov
add
(bad)
dec
iret
mov
call
retf
add
(bad)
inc
xabort
(bad)
jmp
out
call
push
xor
sub
xor
pop
(bad)
(bad)
jmp
push
lea
pop
call
push
sub
inc
pop
jmp
call
push
sub
shl
add
add
pop
push
push
shr
push
xor
add
shl
sub
shr
pop
lea
sub
shr
pop
push
push
push
call
mov
rcl
add
add
add
(bad)
(bad)
jmp
jne
(bad)
push
add
fnstsw
add
mov
or
inc
add
sub
pop
call
push
push
push
call
(bad)
(bad)
inc
movs
rol
xchg
call
add
fild
mov
les
(bad)
(bad)
call
add
jns
mov
fild
jmp
jecxz
call
push
push
call
scas
js
mov
mov
fadd
scas
add
mov
(bad)
(bad)
dec
or
jno
(bad)
jmp
add
add
mov
(bad)
jmp
(bad)
inc
mov
pushf
add
add
sub
pop
mov
push
push
call
(bad)
(bad)
jmp
mov
mov
mov
call
add
fwait
retf
add
(bad)
(bad)
call
add
movs
cmps
mov
rol
sub
pop
push
ret
push
push
call
(bad)
(bad)
call
add
add
add
fadd
(bad)
nop
add
add
mov
mov
fs
(bad)
dec
rcr
jns
add
rol
sub
pop
lea
push
push
add
push
xor
add
rol
add
add
sub
shr
pop
lea
pop
push
add
add
add
pop
push
push
ror
not
pop
call
push
push
call
mov
(bad)
(bad)
inc
mov
movs
add
jo
movs
add
xchg
add
mov
arpl
add
inc
sar
(bad)
jmp
loope
lea
push
push
xor
sub
dec
pop
push
push
ror
xor
pop
push
push
push
call
add
inc
(bad)
(bad)
inc
iret
fisub
add
mov
mov
add
jnp
test
xchg
add
sub
pop
push
push
ror
xor
add
sub
pop
push
push
dec
sub
rol
lea
push
or
inc
add
lea
sub
lea
rol
pop
sub
dec
xor
pop
push
push
push
call
add
mov
enter
fst
bound
add
jl
lods
xchg
add
into
stos
iret
xor
add
sub
pop
call
push
push
call
add
mov
imul
fimul
add
add
add
add
outs
add
add
cdq
scas
fwait
call
(bad)
inc
sar
(bad)
jmp
loopne
push
push
dec
ror
push
xor
add
sub
add
sub
pop
sub
pop
push
push
push
call
add
mov
mov
add
scas
mov
add
or
inc
xor
add
mov
add
add
xchg
sub
add
sub
pop
call
push
push
call
test
inc
mov
xchg
add
fdivr
add
add
pusha
add
(bad)
push
mov
mov
(bad)
(bad)
(bad)
(bad)
(bad)
inc
or
inc
add
sub
pop
push
push
rol
not
not
pop
call
push
push
shr
push
and
add
not
ror
lea
sub
shr
ror
pop
dec
lea
pop
push
inc
pop
push
push
push
call
add
add
add
(bad)
dec
(bad)
(bad)
push
movs
cmp
inc
ins
int3
add
inc
jmp
out
call
call
push
not
shr
shr
pop
jmp
push
push
sub
add
pop
mov
jmp
push
push
call
add
mov
mov
add
mov
movs
jbe
imul
ins
sahf
fisub
ror
retf
add
shl
xchg
cdq
mov
fadd
mov
test
(bad)
(bad)
(bad)
push
xlat
add
sub
pop
push
push
xor
lea
not
push
or
not
add
sub
add
not
pop
shr
sub
pop
push
sub
rol
inc
pop
push
call
push
not
ror
pop
push
call
push
not
add
add
pop
push
push
shl
shl
push
or
not
add
inc
dec
sub
sub
lea
shr
pop
sub
shr
add
pop
push
dec
shl
xor
xor
pop
push
push
shr
pop
call
push
push
push
call
add
add
aam
push
into
add
lahf
add
add
add
add
add
add
add
xor
add
sub
pop
call
leave
push
push
call
mov
lds
mov
mov
(bad)
(bad)
inc
add
add
add
cwde
add
add
add
mov
lods
mov
test
add
mov
inc
push
rol
jmp
jecxz
add
push
push
call
add
rol
mov
xchg
jns
mov
add
add
int
add
and
add
sub
pop
pop
push
lea
dec
pop
pop
push
xor
add
sub
pop
pop
push
shr
ror
pop
pop
push
rol
rol
lea
pop
leave
add
push
push
call
shr
mov
(bad)
(bad)
mov
retf
mov
add
add
add
add
add
inc
mov
add
add
add
sub
pop
ret
leave
push
shl
shr
pop
ret
push
add
pop
push
push
add
sub
sub
pop
mov
push
shr
dec
sub
pop
add
mov
push
sub
sub
inc
pop
mov
push
sub
lea
pop
mov
push
push
call
pusha
add
(bad)
dec
test
(bad)
(bad)
inc
add
mov
cmps
stos
iret
mov
mov
rol
jmp
loop
sub
push
push
call
sub
(bad)
(bad)
inc
add
add
(bad)
(bad)
(bad)
jns
int3
(bad)
(bad)
call
add
pushf
jne
add
mov
add
mov
jle
jecxz
add
add
jmp
jecxz
push
push
push
call
iret
int
add
jno
push
(bad)
(bad)
call
jno
add
pushf
(bad)
(bad)
(bad)
mov
jns
mov
add
mov
sub
add
sub
pop
push
push
pop
push
push
push
call
add
rcl
mov
mov
jo
pushf
stos
fst
(bad)
(bad)
inc
add
(bad)
add
cmp
mov
(bad)
jmp
pop
add
sub
pop
push
push
push
call
lods
(bad)
(bad)
jmp
leave
add
(bad)
jmp
add
mov
jne
mov
mov
add
add
add
add
lods
lahf
add
pop
add
sub
pop
dec
jne
push
sub
pop
mov
push
push
call
mov
mov
(bad)
(bad)
fsub
xchg
movs
add
mov
stos
add
jmp
mov
mov
mov
add
sub
add
sub
pop
shl
push
push
call
add
mov
add
lahf
test
ja
add
mov
stos
add
or
add
mov
lods
mov
add
push
add
add
(bad)
inc
(bad)
(bad)
dec
xbegin
out
add
push
push
call
lahf
jb
(bad)
(bad)
inc
jbe
(bad)
jmp
mov
test
add
mov
(bad)
dec
add
(bad)
(bad)
push
rol
jmp
jecxz
cmp
je
push
push
call
mov
sbb
add
add
(bad)
call
add
add
mov
sbb
int
jbe
leave
(bad)
(bad)
(bad)
push
rol
jmp
loope
call
mov
push
push
call
mov
xchg
rol
jmp
add
add
mov
add
add
add
sub
pop
add
dec
jne
push
push
call
add
sar
mov
je
add
iret
rol
aam
(bad)
inc
mov
fwait
add
mov
add
add
sub
pop
leave
push
push
call
mov
aam
add
(bad)
(bad)
jmp
mov
push
jo
popa
(bad)
(bad)
inc
sbb
jno
add
push
pop
add
sub
pop
ret
rep
push
ror
pop
ret
push
push
call
add
mov
imul
ins
jbe
fs
popf
mov
jmp
fild
fmul
(bad)
inc
mov
add
inc
jmp
out
push
push
add
not
add
pop
mov
push
push
call
add
xchg
(bad)
(bad)
dec
add
mov
mov
xchg
test
mov
test
(bad)
(bad)
(bad)
(bad)
inc
add
jnp
mov
(bad)
inc
inc
ret
clc
(bad)
(bad)
jmp
jecxz
push
push
push
call
test
mov
xchg
add
add
(bad)
(bad)
(bad)
fnstcw
jae
xchg
(bad)
mov
int3
scas
xchg
into
aam
add
inc
jmp
out
push
mov
push
push
call
lods
xchg
add
fwait
add
aam
add
jne
add
mov
mov
xchg
push
pop
add
sub
pop
mov
push
push
call
add
rol
retf
add
(bad)
(bad)
push
(bad)
(bad)
(bad)
(bad)
(bad)
push
add
fld
pushf
fdivr
(bad)
inc
add
push
pop
add
sub
pop
mov
push
push
call
(bad)
(bad)
inc
xchg
cmps
jp
add
fiadd
(bad)
popa
pop
jb
enter
add
(bad)
(bad)
(bad)
(bad)
inc
add
xor
add
sub
pop
mov
push
push
call
fwait
add
mov
add
(bad)
push
test
jp
(bad)
(bad)
inc
(bad)
(bad)
call
rol
push
xlat
add
sub
pop
mov
xor
push
not
not
ror
shr
pop
and
push
sub
pop
mov
inc
push
push
call
lods
mov
fwait
xchg
leave
add
add
rol
rol
movs
mov
mov
xlat
add
push
(bad)
inc
add
rol
jmp
loop
inc
push
not
pop
cmp
jbe
push
push
call
js
call
retf
(bad)
(bad)
inc
add
retf
cwde
xchg
data16
add
add
add
add
add
add
add
sub
pop
and
push
push
call
pusha
xchg
lods
(bad)
mov
(bad)
dec
add
add
fiadd
mov
mov
add
add
test
or
inc
add
sub
pop
cmp
jae
push
push
call
rcr
test
add
popa
add
add
(bad)
push
jb
mov
mov
stos
add
xlat
fdiv
mov
lods
add
pop
add
sub
pop
or
je
push
push
call
jns
mov
nop
movs
mov
ret
je
mov
fwait
add
mov
ja
fcomp
add
pushf
mov
add
sub
pop
add
sub
push
push
call
add
xchg
add
xchg
iret
jo
add
mov
mov
xchg
(bad)
(bad)
push
jmp
add
add
sub
pop
dec
push
dec
pop
cmp
jne
sub
push
lea
pop
mov
pop
push
xor
shl
rol
pop
pop
leave
push
push
call
add
mov
add
mov
add
scas
popf
(bad)
(bad)
inc
rol
add
mov
imul
aam
rol
cmps
stos
or
inc
add
sub
pop
ret
push
rol
sub
sub
shl
pop
push
push
pop
mov
push
push
call
mov
sahf
mov
ja
add
add
add
add
cmps
xchg
add
mov
add
sub
add
sub
pop
add
push
push
shl
add
pop
push
push
sub
inc
ror
rol
pop
push
push
push
call
(bad)
(bad)
inc
mov
(bad)
call
retf
add
add
add
(bad)
(bad)
jmp
pusha
mov
ins
(bad)
(bad)
inc
add
(bad)
inc
mov
fdiv
mov
mov
(bad)
jmp
pop
add
sub
pop
push
push
ror
rol
sub
pop
push
push
push
call
test
xchg
add
call
js
add
(bad)
(bad)
(bad)
(bad)
(bad)
jmp
stos
mov
add
xchg
add
(bad)
stos
add
add
sar
(bad)
jmp
loopne
mov
push
push
call
add
enter
rol
mov
lods
mov
mov
add
(bad)
inc
movs
add
(bad)
add
cmps
cmps
mov
(bad)
(bad)
inc
rol
add
sub
pop
lea
sub
push
not
rol
pop
mov
push
push
call
fadd
leave
test
call
retf
cmps
add
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
jmp
lds
jae
xchg
add
(bad)
inc
add
jmp
enter
push
rol
jmp
loopne
shr
push
push
call
movs
add
add
(bad)
dec
mov
(bad)
call
mov
mov
(bad)
(bad)
dec
mov
sahf
add
add
add
mov
movs
xchg
add
mov
mov
sahf
push
pop
add
sub
pop
add
push
rol
xor
pop
mov
push
inc
pop
add
push
shl
inc
lea
pop
mov
push
lea
xor
rol
pop
add
push
push
call
(bad)
(bad)
inc
add
jl
add
add
(bad)
jmp
lods
add
add
mov
add
shl
shl
add
sub
pop
xor
mov
push
push
call
mov
add
(bad)
inc
mov
jge
mov
add
(bad)
(bad)
jmp
add
xchg
add
into
ja
add
enter
test
jne
jae
mov
add
test
sub
pop
and
push
xor
add
pop
call
push
push
call
(bad)
(bad)
inc
stos
jns
add
(bad)
(bad)
inc
mov
mov
mov
mov
stos
(bad)
(bad)
jmp
stos
add
add
add
(bad)
ins
int
xchg
cwde
add
(bad)
(bad)
mov
or
inc
add
sub
pop
sub
cmp
je
push
push
call
jns
add
(bad)
(bad)
(bad)
jns
add
fadd
mov
(bad)
(bad)
(bad)
fstp
mov
rol
add
lods
(bad)
(bad)
call
rol
sub
pop
add
cmp
jne
push
push
call
stos
mov
mov
bound
stos
pushf
xchg
cwde
test
(bad)
(bad)
inc
xchg
mov
xchg
(bad)
(bad)
inc
(bad)
(bad)
inc
mov
cmps
jnp
(bad)
(bad)
jmp
add
add
sub
pop
xor
push
xor
inc
pop
pop
pop
push
push
call
mov
add
xchg
jbe
and
(bad)
(bad)
inc
mov
ins
add
fcmovb
(bad)
(bad)
call
jle
scas
mov
fimul
add
pop
add
sub
pop
pop
push
shr
pop
pop
pop
push
sub
pop
leave
push
push
call
add
add
add
add
add
mov
fld
xchg
add
add
push
jo
(bad)
inc
(bad)
(bad)
jmp
lods
mov
clc
(bad)
(bad)
jmp
out
ret
mov
push
push
call
xchg
lods
add
ror
add
add
cmp
(bad)
dec
add
add
(bad)
fadd
mov
xchg
(bad)
fdiv
test
loopne
add
add
jmp
loopne
add
push
push
call
xchg
(bad)
(bad)
(bad)
(bad)
dec
add
imul
add
add
imul
(bad)
dec
fwait
(bad)
(bad)
(bad)
fadd
mov
add
add
mov
mov
add
sub
pop
push
push
push
push
call
outs
jnp
mov
add
inc
scas
add
(bad)
inc
int
mov
clc
(bad)
(bad)
jmp
loop
pop
pop
push
shr
inc
pop
add
push
push
call
add
xchg
mov
(bad)
(bad)
fild
mov
(bad)
(bad)
inc
fld
mov
iret
jbe
lahf
add
mov
mov
jae
rol
jmp
loop
mov
push
sub
add
add
add
pop
push
call
push
push
call
arpl
add
imul
call
mov
jmp
mov
jne
add
(bad)
inc
add
add
jmp
loop
xor
pop
push
add
add
pop
pop
push
not
add
pop
pop
push
shr
shl
shr
pop
pop
push
ror
shr
inc
sub
pop
pop
leave
push
push
call
mov
(bad)
(bad)
mov
test
cmps
add
bound
(bad)
lahf
add
mov
add
pusha
add
add
add
xor
(bad)
(bad)
push
(bad)
(bad)
(bad)
push
rol
jmp
loope
ret
push
push
call
add
add
mov
rol
xchg
js
add
(bad)
(bad)
jmp
add
add
add
fld
add
add
add
sub
pop
push
push
push
call
add
add
fimul
add
cmps
mov
xchg
int3
add
mov
(bad)
(bad)
jge
add
mov
scas
add
(bad)
push
rol
jmp
loop
mov
push
push
call
mov
mov
(bad)
inc
mov
(bad)
(bad)
inc
(bad)
(bad)
inc
cdq
xchg
int3
add
add
(bad)
(bad)
(bad)
(bad)
inc
add
pop
add
sub
pop
add
push
add
inc
shr
pop
push
push
shr
shr
pop
push
push
push
lea
not
sub
sub
pop
push
push
push
call
add
mov
jnp
mov
add
jns
jnp
add
movs
js
add
mov
add
(bad)
dec
(bad)
ja
mov
jne
add
mov
(bad)
inc
add
(bad)
(bad)
inc
sar
(bad)
jmp
loopne
push
mov
push
pop
lea
push
shr
rol
rol
not
pop
sub
push
sub
not
sub
pop
mov
shr
push
inc
sub
pop
add
mov
push
sub
shr
pop
add
mov
push
pop
add
push
push
call
xchg
add
(bad)
fisttp
add
mov
mov
jbe
iret
add
lahf
add
(bad)
mov
shl
push
add
mov
add
add
(bad)
call
(bad)
push
rol
jmp
loopne
xor
push
push
call
add
add
mov
les
test
add
add
add
add
shr
popf
mov
(bad)
(bad)
(bad)
(bad)
inc
add
add
add
jmp
leave
add
sub
pop
mov
and
push
push
call
mov
mov
dec
mov
imul
(bad)
inc
rol
add
imul
aam
mov
(bad)
(bad)
call
add
stos
add
add
inc
add
jmp
loop
call
sub
push
push
call
mov
aad
mov
lea
mov
rol
(bad)
(bad)
dec
mov
add
(bad)
(bad)
inc
je
(bad)
(bad)
(bad)
(bad)
(bad)
jns
add
xchg
add
add
mov
add
xor
add
sub
pop
cmp
je
push
push
call
mov
(bad)
inc
mov
(bad)
call
add
mov
add
leave
add
aam
sar
mov
add
(bad)
mov
(bad)
(bad)
(bad)
push
rol
jmp
loopne
add
push
push
call
xchg
add
add
int
mov
add
mov
mov
(bad)
(bad)
jns
(bad)
(bad)
inc
add
add
ja
ror
ret
(bad)
jmp
loop
cmp
jne
push
shl
shr
inc
pop
xor
pop
push
rol
not
add
lea
pop
pop
push
push
call
mov
mov
(bad)
inc
add
(bad)
(bad)
inc
scas
xchg
add
fisubr
mov
add
add
popf
lods
int
add
mov
popa
scas
aad
mov
push
pop
add
sub
pop
pop
pop
push
push
call
jae
jl
shl
mov
scas
jb
(bad)
(bad)
(bad)
(bad)
inc
add
add
sbb
add
into
ret
inc
add
push
rol
jmp
jecxz
pop
push
xor
pop
leave
ret
push
dec
shr
sub
pop
mov
push
sub
pop
add
push
dec
ror
pop
mov
pop
push
push
call
(bad)
add
call
imul
call
fmulp
call
(bad)
jle
jge
call
enter
sub
add
sub
pop
pop
push
push
call
mov
xlat
mov
add
inc
add
mov
mov
add
(bad)
(bad)
(bad)
push
rol
jmp
loop
pop
pop
push
xor
sub
shl
pop
pop
push
shl
pop
leave
ret
push
shr
not
pop
push
mov
push
not
rol
pop
add
push
add
dec
lea
not
pop
push
push
add
pop
push
push
push
call
bound
(bad)
dec
add
aam
add
add
outs
jnp
jl
add
aam
add
add
imul
add
sub
pop
push
push
push
call
(bad)
(bad)
jmp
add
add
jno
mov
test
cmps
mov
mov
cmps
addr16
jns
fwait
scas
scas
mov
add
push
rol
jmp
loope
push
push
inc
shl
pop
mov
push
push
add
lea
pop
pop
push
pop
lea
push
push
call
ror
fwait
xlat
mov
add
mov
add
xchg
adc
mov
add
(bad)
(bad)
(bad)
inc
mov
add
mov
test
add
add
(bad)
(bad)
(bad)
(bad)
inc
add
add
jmp
jecxz
sub
push
push
call
fiadd
ins
add
mov
into
add
mov
jbe
nop
imul
call
rol
add
jmp
add
ret
(bad)
jmp
loop
mov
push
push
call
(bad)
(bad)
jmp
add
cmps
mov
add
add
add
xor
add
sub
pop
shr
push
push
call
popa
add
add
add
mov
mov
add
add
add
int
add
add
(bad)
(bad)
inc
int
and
add
sub
pop
add
push
add
pop
mov
add
push
push
call
mov
(bad)
jmp
test
add
(bad)
(bad)
dec
xchg
xchg
fcos
(bad)
dec
retf
add
jbe
retf
stos
les
(bad)
push
xchg
add
add
mov
xor
add
sub
pop
push
push
push
call
add
lods
mov
ret
fcomp
inc
ins
(bad)
(bad)
inc
jne
(bad)
(bad)
inc
mov
mov
mov
mov
sub
add
sub
pop
pop
mov
push
sub
shr
sub
pop
add
push
push
call
lods
add
(bad)
(bad)
(bad)
inc
add
add
add
fidivr
add
add
test
imul
add
(bad)
ror
mov
mov
add
add
inc
xbegin
out
xor
push
rol
lea
dec
pop
lea
push
shr
pop
mov
push
push
call
xchg
mov
(bad)
sahf
mov
(bad)
addr16
(bad)
inc
add
add
shr
add
(bad)
inc
add
add
add
ret
(bad)
jmp
loop
add
push
lea
add
add
pop
xor
call
push
inc
pop
sub
push
not
sub
shl
shl
pop
nop
nop
push
push
call
mov
inc
mov
lods
add
mov
mov
rcr
(bad)
jmp
mov
jle
mov
add
(bad)
imul
pop
add
sub
pop
cmp
je
push
xor
rol
pop
nop
push
ror
xor
add
sub
pop
nop
push
push
call
movs
mov
add
les
cmp
inc
movs
lods
mov
(bad)
(bad)
(bad)
jnp
sahf
mov
lea
or
not
add
sub
pop
inc
nop
push
add
pop
nop
cmp
jb
push
push
call
jae
movs
xchg
add
jns
shl
mov
(bad)
call
mov
jns
popf
(bad)
add
(bad)
(bad)
(bad)
jle
jne
pushf
or
not
add
sub
pop
xor
jmp
push
sub
sub
ror
pop
mov
add
push
push
call
mov
(bad)
stos
mov
lds
mov
int3
ja
mov
add
mov
(bad)
(bad)
(bad)
(bad)
jmp
sar
(bad)
jmp
loope
movzx
mov
push
push
call
add
mov
leave
leave
aad
add
rol
add
add
(bad)
push
add
add
ja
xchg
(bad)
mov
(bad)
(bad)
inc
add
(bad)
(bad)
push
rol
jmp
loope
add
push
push
call
(bad)
(bad)
inc
(bad)
mov
aad
mov
mov
(bad)
call
mov
bound
fadd
xor
add
sub
pop
mov
push
push
call
add
(bad)
pusha
(bad)
xchg
into
add
fistp
(bad)
(bad)
inc
jo
add
(bad)
inc
fwait
add
add
add
mov
add
(bad)
(bad)
inc
arpl
nop
add
(bad)
(bad)
(bad)
inc
ret
clc
(bad)
(bad)
jmp
jecxz
xor
push
sub
rol
ror
pop
xor
shl
push
xor
add
pop
xor
shl
push
dec
not
pop
xor
push
lea
xor
inc
not
pop
shl
push
push
call
rol
scas
jb
(bad)
(bad)
inc
(bad)
(bad)
(bad)
jns
mov
int3
add
(bad)
mov
add
add
xchg
scas
(bad)
(bad)
inc
add
add
xchg
scas
add
push
xlat
add
sub
pop
xor
mov
push
rol
pop
add
push
push
call
add
add
jle
add
test
mov
add
add
sub
pop
pop
push
push
call
xchg
lahf
movs
jnp
add
shl
je
imul
jno
xchg
imul
add
push
mov
mov
jo
stos
fild
mov
cmps
(bad)
(bad)
inc
xchg
jl
add
push
rol
jmp
jecxz
pop
push
dec
pop
pop
push
push
call
add
(bad)
inc
add
retf
lds
add
ins
fcomp
(bad)
(bad)
inc
jae
jl
add
mov
mov
scas
xchg
add
add
stos
xor
add
sub
pop
pop
push
push
call
add
add
jbe
mov
add
int3
retf
test
(bad)
(bad)
(bad)
mov
add
popa
mov
ret
mov
rol
rol
jmp
loop
leave
push
push
call
cdq
mov
add
(bad)
call
mov
scas
fidiv
add
jb
or
not
add
sub
pop
ret
push
shr
sub
pop
push
push
push
call
jo
add
addr16
test
add
(bad)
(bad)
(bad)
(bad)
(bad)
inc
(bad)
(bad)
push
mov
add
xchg
sub
add
(bad)
inc
(bad)
(bad)
(bad)
js
mov
xbegin
out
mov
push
push
call
outs
add
inc
add
jno
xchg
(bad)
(bad)
jmp
fldenv
fld
add
(bad)
dec
inc
push
(bad)
add
sub
pop
push
push
push
call
add
rcr
ja
mov
jb
(bad)
(bad)
(bad)
(bad)
(bad)
inc
push
(bad)
(bad)
push
add
xchg
sar
(bad)
call
add
sub
pop
push
push
push
call
add
jno
add
je
(bad)
(bad)
fadd
ins
xchg
(bad)
(bad)
inc
add
add
mov
(bad)
inc
mov
xchg
add
cwde
add
call
mov
mov
popa
add
add
movs
aad
jno
add
rol
jmp
loop
push
push
push
call
(bad)
(bad)
(bad)
dec
add
add
add
mov
add
add
(bad)
call
int
xchg
jns
scas
xchg
add
(bad)
push
rol
jmp
loope
push
push
push
call
leave
mov
(bad)
dec
add
addr16
add
add
add
sar
(bad)
jmp
loopne
mov
push
inc
ror
pop
mov
push
push
call
les
cwde
add
(bad)
(bad)
call
add
add
rol
fstp
cdq
cmp
mov
add
test
xor
add
sub
pop
mov
push
push
call
mov
ror
add
add
add
jle
add
add
add
(bad)
(bad)
(bad)
(bad)
call
mov
add
add
add
scas
add
(bad)
(bad)
inc
rol
ret
clc
(bad)
(bad)
jmp
jecxz
test
je
push
xor
pop
mov
push
push
call
fimul
(bad)
inc
test
(bad)
je
test
add
stos
jno
fdivrp
(bad)
(bad)
(bad)
(bad)
inc
ins
add
(bad)
dec
shl
lea
iret
(bad)
(bad)
call
mov
mov
add
(bad)
inc
push
pop
add
sub
pop
test
je
mov
push
push
call
(bad)
(bad)
dec
add
add
mov
data16
aam
rol
add
jl
stos
add
mov
mov
arpl
add
(bad)
inc
jge
mov
test
sub
pop
mov
mov
push
rol
sub
xor
pop
inc
cmp
je
push
rol
sub
lea
not
pop
test
je
push
push
call
mov
dec
test
lea
call
ja
add
add
mov
fnstsw
cmps
lahf
mov
(bad)
cmps
mov
add
int3
ins
add
dec
add
add
sub
pop
mov
push
push
call
mov
mov
mov
(bad)
inc
mov
mov
add
(bad)
jmp
(bad)
jmp
add
aad
add
clc
(bad)
(bad)
jmp
out
inc
push
shr
shr
add
pop
cmp
je
push
inc
add
inc
pop
test
jne
xor
push
push
call
ror
movs
xchg
stos
mov
je
fild
(bad)
jno
mov
lods
add
pusha
fisub
add
fxch
(bad)
(bad)
inc
add
fs
rol
sub
pop
pop
pop
push
shl
add
lea
pop
pop
push
push
call
mov
fiadd
mov
movs
mov
mov
test
push
(bad)
(bad)
jmp
add
shl
add
jne
add
inc
ret
clc
(bad)
(bad)
jmp
jecxz
pop
push
sub
add
xor
pop
leave
push
shl
add
not
pop
ret
push
push
call
ja
(bad)
inc
popa
aam
mov
(bad)
inc
mov
cmps
add
test
(bad)
push
mov
(bad)
dec
or
inc
add
sub
pop
mov
push
push
call
int3
mov
js
js
add
(bad)
inc
cmps
push
add
(bad)
(bad)
mov
mov
add
sar
(bad)
jmp
loope
inc
push
push
call
xchg
add
(bad)
jmp
(bad)
fstp
js
mov
int3
add
(bad)
dec
cmps
(bad)
(bad)
call
add
add
mov
add
add
sub
pop
cmp
jne
push
pop
lea
push
add
shl
inc
xor
pop
mov
push
push
call
scas
add
fld
jbe
(bad)
push
les
add
test
mov
movs
mov
mov
cmps
add
retf
rol
les
mov
call
add
(bad)
(bad)
inc
sar
(bad)
jmp
loope
test
je
push
add
add
sub
inc
pop
mov
push
push
call
(bad)
(bad)
inc
(bad)
(bad)
(bad)
fmul
shl
iret
add
xchg
add
(bad)
dec
add
popa
add
(bad)
dec
(bad)
jmp
inc
jmp
out
add
push
shr
add
add
rol
pop
cmp
jne
push
push
call
test
shl
nop
fsub
fdiv
add
(bad)
call
add
xchg
rcr
mov
enter
add
add
add
xchg
or
not
add
sub
pop
mov
push
push
call
mov
mov
add
add
cmp
mov
jnp
mov
addr16
cmp
add
add
add
sub
pop
test
je
push
push
call
add
mov
add
(bad)
(bad)
call
jp
mov
lods
add
(bad)
(bad)
inc
sahf
outs
(bad)
(bad)
(bad)
(bad)
(bad)
jmp
add
jae
add
clc
(bad)
(bad)
jmp
loope
mov
push
push
call
movs
(bad)
(bad)
inc
(bad)
scas
test
add
(bad)
(bad)
jmp
jae
cmps
enter
mov
add
(bad)
jmp
mov
add
or
not
add
sub
pop
add
cmp
je
push
shl
inc
sub
inc
pop
jmp
push
xor
sub
pop
xor
push
shr
shl
pop
pop
push
push
call
add
mov
lea
aad
pusha
fsubr
add
(bad)
(bad)
inc
movs
add
(bad)
inc
add
ins
inc
push
rol
jmp
loopne
pop
pop
push
push
call
add
add
cmps
(bad)
(bad)
push
cmps
(bad)
add
add
js
jno
add
mov
add
bound
add
leave
(bad)
(bad)
(bad)
push
rol
jmp
loope
pop
push
push
call
add
add
add
add
(bad)
(bad)
call
(bad)
jmp
call
mov
(bad)
(bad)
inc
add
xchg
mov
push
pop
add
sub
pop
leave
ret
push
push
call
jp
(bad)
(bad)
inc
add
xchg
add
(bad)
(bad)
(bad)
(bad)
call
cmps
add
(bad)
(bad)
inc
add
(bad)
les
add
mov
or
inc
add
sub
pop
lea
push
dec
pop
pop
push
push
call
add
mov
add
add
add
mov
add
popf
add
test
mov
add
mov
mov
add
jmp
out
pop
push
push
call
popa
jo
add
into
(bad)
(bad)
inc
popa
test
(bad)
(bad)
(bad)
push
xlat
(bad)
sar
(bad)
(bad)
(bad)
(bad)
inc
add
sar
(bad)
jmp
loopne
pop
push
push
call
xchg
add
(bad)
dec
mov
(bad)
(bad)
call
rol
fild
dec
movs
add
(bad)
(bad)
(bad)
inc
ret
clc
(bad)
(bad)
jmp
jecxz
pop
push
pop
leave
ret
push
push
call
ret
add
(bad)
call
(bad)
retf
mov
rol
add
nop
jno
add
add
arpl
cmps
xchg
add
leave
(bad)
(bad)
(bad)
push
rol
jmp
loope
mov
push
push
call
bound
add
sub
mov
ffree
add
xlat
add
add
(bad)
(bad)
push
sahf
mov
add
jle
add
jl
(bad)
jmp
fild
jmp
jecxz
pop
pop
push
push
call
into
outs
jns
add
add
scas
fisttp
mov
mov
(bad)
(bad)
call
(bad)
(bad)
inc
(bad)
(bad)
push
rol
jmp
loop
pop
push
push
call
(bad)
(bad)
call
xchg
jmp
(bad)
(bad)
inc
mov
arpl
mov
inc
jb
mov
mov
gs
add
sub
pop
pop
push
add
ror
pop
leave
ret
push
push
call
add
add
add
ja
(bad)
(bad)
(bad)
mov
mov
rcl
add
into
aam
(bad)
(bad)
inc
sbb
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
inc
add
jmp
loop
push
push
ror
sub
pop
mov
rol
push
push
call
jns
fisub
mov
add
add
data16
iret
add
jp
sbb
arpl
add
mov
add
add
enter
push
rol
jmp
loopne
xor
inc
push
inc
pop
cmp
jne
pop
push
add
add
inc
pop
ret
adc
adc
daa
adc
iret
daa
adc
daa
adc
shl
adc
pop
and
adc
xchg
and
lea
adc
int
adc
out
and
rcl
bound
adc
and
add
and
adc
and
adc
xchg
and
(bad)
xor
stos
add
add
mov
add
test
inc
or
add
add
cmps
xor
and
mov
add
fistp
mov
gs
dec
fisub
int3
fs
mov
add
add
lds
push
into
(bad)
sub
out
in
in
ins
bound
ficomp
add
add
and
add
add
add
jg
(bad)
cmc
jecxz
aas
lea
mov
xchg
int3
int3
int3
int3
push
mov
add
add
sldt
add
cdq
mov
add
or
add
add
add
add
add
sar
int
inc
pop
rol
add
add
add
add
call
pop
ins
fdivr
fstp
rol
add
add
sti
mov
push
sbb
mov
jle
out
into
sub
in
cdq
cmp
jp
push
mov
loopne
pop
mov
aam
and
enter
add
add
js
push
add
add
arpl
movs
je
pop
add
add
mov
add
add
mov
jns
stos
outs
pusha
cli
xor
fisubr
jmp
sub
push
add
inc
mov
daa
cmp
add
add
add
mov
adc
add
add
push
push
mov
cmp
add
add
and
pop
cmp
push
inc
lods
leave
mov
fs
pop
dec
push
std
test
add
add
xchg
sbb
nop
nop
nop
nop
lahf
(bad)
aaa
dec
into
add
add
add
imul
add
or
add
add
cdq
nop
nop
nop
nop
nop
f2xm1
hlt
cmp
imul
add
or
add
add
adc
inc
push
lods
js
mov
adc
add
add
add
add
add
add
add
pop
xchg
(bad)
loop
gs
jns
sub
retf
adc
add
add
xchg
add
out
stos
mov
leave
pusha
jle
je
je
lahf
xor
push
or
add
add
movs
push
jae
sub
and
add
add
push
jnp
mov
add
add
mov
xor
test
push
push
add
add
loope
mov
ja
das
fdiv
jle
cmp
add
add
and
add
add
xor
add
add
sbb
add
add
pop
lock
int3
int3
int3
int3
int3
jnp
ds
pop
out
div
shr
pop
(bad)
retf
daa
imul
add
add
dec
dec
and
add
nop
nop
nop
nop
scas
sbb
add
add
jecxz
lods
pop
xchg
outs
jb
xchg
add
add
or
add
add
xlat
adc
add
add
add
sbb
xor
add
add
js
lods
pop
jp
loop
add
add
mov
loopne
and
sub
adc
add
add
inc
pop
pop
push
xor
inc
pop
loope
enter
cmp
icebp
jmp
dec
jg
rcl
std
arpl
fwait
xchg
sahf
retf
jnp
gs
sbb
add
add
int3
int3
int3
int3
cmp
dec
not
jno
adc
add
add
and
retf
jno
lea
or
add
add
add
add
push
add
add
mov
dec
aad
inc
mov
int3
int3
int3
int3
int3
sti
pop
pop
xor
fcomp
sbb
aad
add
add
xchg
sub
jge
mov
cmp
xor
aad
add
add
sbb
mov
add
add
add
and
test
and
lods
add
add
movs
les
rcr
leave
iret
repz
xor
sbb
add
sub
pop
add
add
mov
stc
sub
add
pop
test
mov
mov
add
add
into
hlt
adc
add
add
iret
and
jae
add
inc
fmul
outs
mov
add
add
mov
add
push
and
add
add
dec
jmp
sbb
cli
ds
sub
fdivp
cmp
(bad)
pop
retf
add
add
add
add
sub
lds
stos
dec
mov
jae
mov
add
add
lahf
inc
xchg
pop
mov
xchg
push
jmp
add
js
pop
mov
movs
clc
call
add
add
adc
pop
jno
add
add
sti
push
mov
add
xlat
ds
pop
add
add
or
add
add
pop
call
mov
push
add
add
out
add
add
add
add
mov
in
add
add
lods
xchg
sub
out
inc
add
aam
(bad)
dec
jmp
popf
add
add
add
or
add
add
xchg
into
cdq
mov
mov
add
add
ds
mov
inc
es
mov
and
dec
fmul
outs
lods
push
add
add
push
imul
xchg
dec
test
scas
jp
jne
bound
jo
out
test
out
push
pop
pop
xchg
dec
(bad)
sbb
pop
add
add
add
add
add
and
cmps
outs
mov
add
add
outs
push
arpl
jle
js
add
out
iret
das
or
add
add
mov
and
stos
ret
mov
test
popa
sub
inc
in
or
add
add
add
add
add
add
add
(bad)
add
fdivr
dec
sldt
add
leave
sub
add
add
add
fld
xchg
mov
addr16
fwait
sar
out
dec
add
add
add
mov
xor
push
fucom
data16
aad
jg
add
add
lods
pop
retf
cld
(bad)
out
dec
inc
cmp
xchg
repz
call
fstp
mov
inc
stos
mov
popa
mov
mov
add
add
shr
add
add
and
dec
repz
add
sbb
jns
or
add
add
mov
test
pop
cdq
clc
sub
add
add
fld
sbb
sub
mov
add
leave
inc
loopne
xchg
add
add
pop
push
mov
pop
sbb
add
add
ja
std
test
add
add
in
mov
add
sbb
sbb
jo
add
add
add
addr16
add
add
adc
inc
sbb
dec
ja
mov
clc
fcomp
mov
add
add
add
fwait
stos
push
add
add
push
ja
(bad)
push
pop
jo
outs
xchg
sub
loope
pop
add
add
dec
and
imul
cmps
movs
mov
add
add
outs
ss
dec
popf
imul
scas
xor
int
mov
add
add
add
lock
cmp
ret
repnz
add
iret
pop
add
add
idiv
(bad)
cmp
lods
push
add
add
dec
in
add
add
fdivr
ret
cmp
cmps
lods
adc
add
add
mov
or
fnstenv
add
add
std
mov
mov
mov
dec
shr
and
nop
nop
nop
nop
inc
cmp
add
cld
fs
fiadd
pop
xchg
fwait
adc
pushf
daa
mov
fwait
mov
adc
add
add
inc
rol
add
test
pop
or
add
add
mov
cdq
mov
add
add
stos
lock
jmp
(bad)
dec
xchg
pop
js
xlat
sbb
ss
shl
test
stos
and
xchg
jnp
inc
sbb
mov
xor
shr
cmc
lahf
loope
adc
daa
cmps
leave
adc
add
add
and
popf
stos
xchg
push
pop
mov
jmp
inc
fist
mov
sub
pop
stos
fcomi
pop
jns
div
into
dec
xor
fld
add
mov
xor
add
add
jmp
jge
loope
(bad)
push
call
les
jb
add
add
(bad)
sldt
add
cmp
add
add
clc
sahf
out
xchg
lods
push
xchg
ret
sub
in
gs
sbb
add
inc
jmp
jb
cwde
bound
add
add
push
jbe
add
add
add
mov
add
adc
add
add
hlt
jmp
adc
add
add
add
add
push
clc
cmps
ja
mov
dec
bound
mov
add
add
add
rcl
push
fist
add
add
clc
cwde
push
push
xchg
add
add
xchg
int
add
add
add
mov
add
add
jl
mov
es
mov
mov
jl
add
add
test
sti
arpl
bound
popa
add
add
add
add
movs
jmp
xchg
bound
adc
add
add
inc
or
add
add
pop
cmps
cmps
or
add
add
xor
loope
mov
les
sbb
stc
pop
add
add
pop
sbb
mov
mov
mov
xor
sbb
aam
xchg
retf
jg
add
dec
jnp
ins
sldt
add
mov
dec
add
add
add
push
xor
sbb
add
add
pop
fs
(bad)
repz
add
add
mov
cmp
arpl
cld
ins
push
mov
add
add
ss
add
add
mov
(bad)
std
bound
mov
(bad)
(bad)
fbld
push
in
fnstcw
pop
push
mov
adc
add
add
xor
shl
cmp
add
add
mov
pushf
dec
cmp
dec
retf
pop
jbe
xor
xchg
jp
add
add
aam
jnp
sti
push
jmp
add
add
add
sbb
or
add
add
push
cmps
outs
(bad)
js
sub
aas
sbb
mov
enter
cmp
push
push
outs
or
add
add
gs
retf
imul
lock
lea
mov
ins
or
add
add
add
cmp
add
add
mov
stos
cmp
and
inc
sldt
add
pop
add
add
(bad)
jmp
sbb
add
add
into
jge
inc
call
pusha
test
out
out
int3
int3
int3
int3
int3
xchg
fsubr
cmps
enter
ins
fst
inc
add
icebp
pop
loope
push
sub
push
sbb
add
add
add
ror
iret
mov
repz
inc
inc
push
or
add
add
lods
push
sub
pushf
lods
jl
rcr
add
jmp
dec
add
add
add
je
mov
mov
repz
add
add
mov
nop
nop
nop
nop
nop
scas
sbb
shl
iret
pop
sub
pop
jo
outs
mov
int
and
or
xlat
sub
mov
loope
sbb
inc
adc
add
add
shr
pusha
mov
pop
xor
add
xchg
out
outs
add
add
add
add
js
imul
jmp
in
sldt
add
add
add
add
out
or
add
add
aam
in
dec
loop
test
(bad)
dec
jbe
ds
add
mov
push
jne
retf
(bad)
add
add
jg
js
rol
add
add
cdq
pop
pop
add
add
mov
(bad)
mov
dec
mov
inc
xchg
rol
xor
inc
stos
cmp
add
add
sub
jae
add
add
mov
(bad)
push
fisttp
add
add
ja
ret
fsubr
add
add
sbb
dec
sbb
or
add
add
pop
xchg
jecxz
movs
or
add
add
adc
add
add
popa
inc
dec
retf
mov
sahf
cmp
add
add
cmc
imul
push
add
add
popf
cmps
retf
dec
fucomp
(bad)
jp
nop
nop
nop
nop
xchg
scas
repz
loop
iret
add
ss
test
pop
pop
xchg
stos
jne
add
add
pop
add
add
loopne
cli
mov
jbe
in
mov
xor
jmp
mov
mov
outs
popa
add
add
add
add
add
rcr
imul
add
add
and
add
add
mov
and
add
add
add
adc
add
add
out
mov
mov
leave
mov
xchg
or
add
add
or
add
add
add
add
ins
mov
out
int
add
add
pop
adc
pop
push
int3
int3
int3
int3
int3
pusha
in
inc
inc
or
add
add
cdq
pop
and
add
add
mov
or
add
add
mov
loopne
pop
out
push
dec
mov
inc
cdq
mov
arpl
add
add
mov
je
add
add
or
add
add
add
add
repnz
lods
jns
push
loopne
in
fldcw
std
mov
add
xchg
jb
sbb
add
add
xchg
cmc
mov
ret
sti
pop
out
sbb
mov
sbb
inc
shr
int3
int3
int3
int3
je
add
add
outs
add
add
add
add
loopne
hlt
repnz
mov
sbb
push
mov
(bad)
inc
int3
int3
int3
int3
int3
or
mov
loopne
(bad)
fimul
add
add
xor
pop
add
add
pop
add
add
call
xchg
cmc
push
adc
add
add
outs
or
add
add
ja
add
add
dec
sbb
stc
rol
retf
mov
add
aas
mov
xchg
outs
(bad)
add
mov
das
pop
mov
pop
enter
(bad)
fistp
test
push
stos
adc
fsub
ficom
add
add
into
out
or
add
add
mov
add
and
push
add
add
add
scas
push
lds
cmp
fld
add
sar
add
add
add
mov
aad
fs
retf
jge
jno
inc
mov
adc
add
add
dec
add
add
add
imul
add
xor
pop
(bad)
dec
imul
mov
mov
stos
fs
sahf
push
dec
lahf
outs
cmps
and
je
jbe
xor
int
std
or
pop
and
dec
sub
jno
mov
repz
add
mov
or
add
add
sldt
add
in
mov
(bad)
xlat
popa
xchg
jmp
mov
mov
hlt
cmp
add
add
add
add
add
std
add
add
add
add
sbb
cmps
daa
push
cmps
inc
xor
inc
inc
mov
cli
xor
add
movs
fistp
mov
dec
jp
pop
out
jmp
dec
mov
ja
test
neg
sbb
hlt
ret
xor
cli
adc
add
add
test
add
sahf
ins
ror
int3
int3
int3
int3
mov
or
add
add
add
sub
out
(bad)
mov
rcr
icebp
movs
mov
addr16
sbb
mov
pusha
pop
add
add
pop
test
xchg
jo
jns
jnp
sbb
add
mov
nop
nop
nop
nop
nop
mov
add
add
xchg
sldt
add
test
ss
jle
add
add
add
stos
cmp
xchg
aas
add
add
add
repz
or
add
add
push
pop
push
pop
or
add
add
mov
loop
shl
add
add
sbb
add
daa
int
stos
cmp
das
call
mov
data16
add
add
sub
xor
add
sbb
add
add
inc
mov
leave
idiv
or
add
add
and
or
add
add
add
add
std
out
sub
push
aas
call
dec
in
iret
out
mov
mov
add
add
pop
add
add
mov
add
add
or
add
add
inc
mov
mov
inc
sbb
retf
leave
xor
movs
pushf
stos
mov
lahf
sub
sub
add
add
push
xor
and
cdq
add
add
nop
nop
nop
nop
nop
push
mov
les
popf
test
sbb
add
inc
test
mov
sub
and
addr16
push
cdq
dec
push
xchg
gs
push
sldt
add
mov
inc
out
fld
popf
mov
xor
push
push
add
rcr
pop
or
add
add
cmp
rcr
add
lea
mov
add
ficomp
mul
sti
pop
dec
and
push
dec
and
scas
adc
add
add
add
add
clc
addr16
fs
xor
add
add
in
sbb
sbb
add
add
add
add
mov
cs
add
add
mov
ror
add
add
adc
add
add
add
add
retf
push
rcr
pop
pop
popf
es
xchg
dec
iret
xchg
push
add
rcr
lea
push
add
add
sub
inc
retf
mov
stc
jle
in
adc
add
add
sldt
add
jl
rol
add
ret
xchg
sbb
test
inc
sar
cwde
jle
add
add
mov
imul
sub
pop
add
add
arpl
jb
sahf
stos
inc
pop
imul
mov
cmc
fmul
jbe
adc
imul
jmp
xchg
add
add
adc
mov
mov
sar
fs
jl
call
mov
push
(bad)
call
mov
ds
jb
aas
(bad)
(bad)
inc
ins
dec
out
push
sti
shl
sbb
dec
idiv
jmp
mov
xchg
das
xchg
mov
add
add
add
inc
pusha
jg
rep
push
mov
and
jb
clc
imul
xchg
push
les
add
add
arpl
test
and
sub
push
dec
(bad)
push
sbb
add
popa
push
fisubr
mov
add
add
add
fwait
jbe
mov
addr16
test
cmp
sub
add
add
mov
cmc
out
call
sub
sti
(bad)
loope
xor
jmp
jl
sub
sub
cs
mov
sub
jbe
sti
stos
sldt
add
pop
adc
or
add
add
and
jle
cmps
push
add
add
sbb
cdq
sbb
jbe
jb
mov
in
and
xor
add
dec
inc
cmps
outs
mov
icebp
cmc
xchg
mov
add
add
fnstcw
int
sub
xchg
shl
inc
arpl
add
add
pop
add
mov
dec
sub
add
add
push
ja
sbb
add
jns
fwait
into
fisttp
sbb
add
add
mov
add
(bad)
stc
cmp
cmps
std
imul
lahf
sbb
neg
jg
mov
add
mov
jmp
inc
xor
pop
stc
mov
xlat
adc
add
add
sub
inc
iret
push
jl
sti
push
cmps
or
add
add
xor
iret
rcl
mov
add
add
outs
mov
ins
inc
pop
xchg
add
add
add
leave
popf
and
sbb
or
add
add
mov
xchg
add
add
add
dec
aam
cs
adc
add
add
call
out
ins
add
add
es
ja
or
add
add
enter
push
outs
jge
dec
rol
jg
add
daa
dec
sub
mov
pop
push
call
sub
std
faddp
clc
das
cs
mov
shl
add
add
fdivr
cmp
add
inc
sldt
add
jbe
xchg
add
add
cmp
mov
(bad)
adc
add
add
das
push
jnp
ins
push
shr
cmp
pop
adc
add
add
cmps
ins
xchg
dec
nop
nop
nop
nop
nop
test
push
add
add
jecxz
imul
rcr
add
add
stc
test
js
out
adc
add
add
scas
fisttp
add
xchg
mov
jp
xor
pop
je
fistp
or
add
add
add
repz
jae
or
add
add
test
cmp
ret
dec
daa
adc
add
add
jp
retf
fst
bound
add
add
push
add
add
inc
pop
adc
add
add
add
dec
lods
popf
cmp
loope
dec
(bad)
scas
pop
fiadd
add
push
std
inc
xchg
mov
pop
and
jmp
aas
movs
and
pop
je
xchg
scas
ja
mov
ja
inc
mov
lock
into
inc
and
int3
mul
ins
mov
adc
add
add
mov
popf
adc
add
add
ja
push
imul
sub
add
add
push
inc
jmp
sub
adc
test
jno
outs
add
add
add
jp
xor
push
hlt
add
add
add
jno
stos
test
loopne
add
lods
jb
enter
add
mov
jge
xchg
ins
sbb
dec
push
sub
pop
int3
int3
int3
int3
int3
or
add
add
pop
pop
mov
add
add
push
retf
add
add
out
out
mov
sbb
dec
xor
jb
not
xchg
lea
inc
stc
lahf
xor
add
add
add
jae
retf
adc
add
add
loopne
or
add
add
mov
pop
cmp
jnp
add
xchg
ret
aam
ins
add
add
add
mov
mov
or
add
add
and
push
pop
fsubr
xor
add
add
sbb
mov
(bad)
add
add
add
loopne
pop
rcr
xlat
jle
lea
jmp
add
pop
dec
in
bound
rol
rcr
test
pop
je
pop
add
add
pop
and
add
push
lea
repz
sub
ret
call
pop
xor
ds
mov
pop
movs
mov
add
add
dec
dec
cmps
pop
pop
add
mov
add
add
adc
add
add
mov
push
xor
das
cli
adc
add
add
add
cdq
jmp
adc
add
add
push
fistp
or
add
add
das
or
push
and
into
out
mov
(bad)
and
adc
add
add
push
iret
popa
stos
nop
nop
nop
nop
nop
adc
add
add
mov
add
cmp
lock
add
add
hlt
jecxz
lods
xchg
mov
pop
adc
add
add
lds
(bad)
out
clc
leave
pop
cmp
add
add
cmp
add
out
adc
add
add
ret
ror
clc
add
add
lahf
jmp
mov
movs
pop
pop
fwait
pop
es
or
and
add
add
retf
(bad)
stc
cmp
and
add
bnd
add
add
pop
inc
xchg
fcom
add
jmp
sub
or
sub
add
add
add
lock
test
adc
cmp
loopne
xchg
sbb
sbb
or
add
add
add
add
in
and
es
call
fwait
icebp
test
cmps
dec
loope
cmp
pop
lds
inc
mov
ficomp
mov
ss
js
and
cld
push
push
and
add
add
mov
add
add
jp
mov
je
cmps
fistp
sbb
cmp
add
add
jae
xor
out
int3
int3
int3
int3
int3
xchg
mov
pusha
cmp
out
jns
in
cmc
dec
cmp
add
mov
add
add
add
add
or
add
add
sbb
sub
pop
idiv
fnclex
xchg
xor
in
stc
jmp
sub
xlat
add
add
add
xchg
(bad)
jp
inc
je
and
add
inc
out
jae
push
js
inc
sahf
dec
pushf
jno
in
scas
sbb
mov
cli
jmp
icebp
xchg
repz
mov
je
mov
adc
mov
mov
in
sub
sbb
aaa
mov
inc
adc
add
add
bound
cli
fwait
outs
fs
add
add
call
add
add
pop
mov
add
add
sub
cmp
int3
int3
int3
int3
int3
sti
cmp
hlt
repnz
mov
add
xchg
icebp
and
movs
cld
add
add
add
add
add
jno
push
add
add
ret
cmp
push
jne
aad
pop
sldt
add
aam
idiv
int3
int3
int3
int3
int3
into
iret
push
and
add
add
aaa
sub
inc
popf
push
or
lds
daa
mov
cmc
(bad)
stc
inc
xchg
inc
lock
cmps
test
in
mov
nop
nop
nop
nop
nop
das
sub
mov
data16
add
add
adc
add
add
push
dec
imul
lea
xor
in
mov
cmps
and
add
iret
movs
dec
mov
lods
pop
movs
jb
add
add
(bad)
cmps
adc
add
add
jecxz
add
add
fisttp
loope
xchg
fwait
dec
retf
lock
add
inc
call
movs
jg
and
imul
add
add
idiv
sub
inc
je
lahf
lock
js
jmp
xchg
cs
add
add
mov
sldt
add
fsubr
add
add
add
xchg
xor
dec
pop
cmc
jp
add
mov
cmp
aad
aam
pop
mov
outs
cmc
sub
add
add
push
add
add
out
and
dec
inc
lock
add
add
sub
mov
ins
pop
mov
mov
push
jmp
leave
in
fild
add
add
mov
dec
retf
mov
add
add
add
cwde
addr16
loopne
xchg
and
xor
add
mov
outs
cmp
add
add
pop
inc
hlt
cmps
ins
outs
fistp
cs
add
add
mov
sldt
add
mov
mov
fisub
add
add
aam
sbb
adc
add
add
and
dec
data16
mov
xor
movs
mov
push
jbe
fcomp
sub
mov
retf
and
cmp
inc
das
mov
ret
and
add
add
out
ins
cld
and
add
add
ret
div
ds
lods
mov
outs
or
add
add
sbb
das
jae
lods
push
xor
adc
and
adc
add
add
ins
cmps
imul
adc
add
add
jae
mov
adc
jge
jb
fst
add
add
jl
add
add
ss
cmp
lds
or
add
add
inc
sub
add
add
xchg
in
push
add
add
xor
add
ffree
add
add
add
xchg
inc
add
pop
add
add
cmp
cmp
enter
or
add
add
add
add
neg
and
pusha
push
and
add
cld
sub
shr
inc
jno
fwait
pop
lods
mov
add
scas
sti
mov
popa
jl
mov
mov
mov
add
sti
pop
outs
or
fmul
mov
and
rol
fdiv
add
add
loope
(bad)
push
mov
gs
push
push
add
add
mov
popa
add
add
add
lock
cs
adc
add
add
ins
pop
pushf
(bad)
xlat
sbb
cld
cld
call
into
movs
mov
call
test
push
shl
or
xchg
xchg
jl
add
add
sahf
pop
aam
movs
add
add
inc
retf
adc
add
add
xchg
mov
retf
xchg
test
movs
or
add
add
out
xchg
add
add
call
jne
repz
cmp
add
mov
mov
and
sbb
add
sbb
mov
call
pop
pop
mov
mov
xor
push
add
add
add
add
add
add
imul
sub
xchg
fcomp
fild
mov
xchg
mov
outs
aaa
rcl
(bad)
hlt
dec
jmp
div
imul
add
out
add
inc
(bad)
int3
int3
int3
int3
int3
and
aad
pop
add
add
jge
hlt
jecxz
add
sub
add
add
ins
scas
scas
out
out
push
add
add
xchg
jmp
add
or
add
add
and
hlt
shl
int
jmp
and
add
add
int3
int3
int3
int3
sub
clc
or
sbb
mov
add
push
mov
add
add
popa
mov
push
out
arpl
aam
sub
and
inc
stos
jo
mov
inc
imul
xchg
and
add
cwde
(bad)
dec
sldt
add
dec
sub
adc
add
add
div
add
add
add
jmp
mov
mov
adc
add
add
icebp
out
inc
repz
ins
mov
xchg
xor
mov
xchg
adc
lahf
jne
cdq
inc
or
add
add
into
les
jno
cdq
nop
nop
nop
nop
nop
je
or
cmp
pusha
ss
add
add
retf
jp
add
add
fs
lods
sldt
add
and
lods
les
cmp
add
add
pop
jo
ja
pop
jecxz
cmp
and
sbb
shr
jmp
lahf
mov
outs
mov
add
add
retf
or
cmp
imul
add
sbb
jne
xchg
rol
add
call
add
add
stc
sub
outs
mov
data16
mov
mov
outs
mov
cmp
int3
int3
int3
int3
int3
ja
lahf
movs
cmps
iret
pop
(bad)
hlt
sub
int3
int3
int3
int3
int3
inc
loop
outs
add
add
add
mov
addr16
fdivr
push
je
(bad)
leave
or
add
add
cmc
mov
dec
push
sub
cmp
sbb
push
adc
add
add
add
add
add
inc
mov
push
and
and
dec
mov
adc
add
add
jbe
jb
add
add
pop
inc
(bad)
jne
pop
cmc
adc
add
add
aam
xchg
inc
sub
addr16
inc
jmp
push
jmp
jecxz
push
mov
mov
lods
ficom
add
add
fiadd
add
rcl
and
add
add
cmp
adc
cwde
adc
inc
lods
mov
or
add
add
cmps
push
outs
aas
int
neg
mov
add
sub
add
add
int3
int3
int3
int3
int3
les
loop
into
ret
sub
loope
mov
out
xor
sub
mov
dec
xor
jmp
inc
movs
retf
mov
mov
push
sbb
or
add
add
xor
(bad)
lods
jno
hlt
add
add
add
add
jnp
push
xchg
scas
fld
mov
lock
scas
loope
add
add
or
add
add
xor
je
xchg
pop
sti
retf
out
fld
enter
nop
nop
nop
nop
nop
enter
jmp
add
add
ret
xchg
iret
and
add
add
cmp
ss
adc
push
add
jo
cmps
push
inc
sub
add
add
cmc
dec
sahf
fxam
stos
dec
repz
xlat
add
add
add
add
add
pop
jbe
mov
push
xchg
mov
push
jo
push
add
add
add
add
test
add
add
cli
pop
cwde
dec
add
add
add
aad
pop
sub
sahf
jb
pop
fisttp
jne
call
out
mov
repnz
sbb
adc
add
add
popf
and
mov
mov
sub
ss
int
mov
push
mov
lea
je
stc
and
push
test
add
mov
sub
add
add
icebp
aam
push
add
add
les
add
add
out
call
test
daa
ins
fimul
add
add
add
add
add
cmp
out
test
pop
pop
sub
adc
jp
add
push
std
fidiv
mov
push
mov
mov
xor
push
add
add
add
pushf
add
add
sar
lea
ins
fadd
add
add
mov
jo
cmps
test
mov
cmp
inc
aas
mov
pop
cmp
inc
pop
pop
or
add
add
fdivp
(bad)
in
call
add
add
and
aas
lods
xor
and
scas
mov
fist
out
mov
mov
add
add
loopne
add
add
clc
jb
cdq
or
add
add
xlat
mov
mov
loop
jno
xchg
fsub
xchg
jl
or
add
add
imul
cmps
pop
jge
cmc
mov
mov
int
(bad)
mov
pop
sub
or
push
mov
pop
mov
add
add
add
sbb
sub
jg
cld
add
xchg
add
mov
addr16
sub
or
add
add
scas
inc
pop
ret
xchg
fwait
sub
inc
push
xor
add
add
dec
loopne
mov
mov
xor
popf
inc
mov
jecxz
fnsave
add
add
add
test
sbb
add
add
and
or
cmp
add
(bad)
sub
ret
out
out
jmp
add
dec
not
add
add
(bad)
arpl
call
xchg
xor
add
js
push
pop
or
add
add
lock
call
cs
mov
xchg
ds
mov
add
add
add
ss
fcom
add
add
scas
sbb
jbe
jb
mov
and
add
add
sub
mov
add
add
(bad)
and
xchg
add
add
push
out
add
add
xchg
xchg
xor
test
jae
add
add
add
add
cmp
add
out
in
dec
or
add
add
add
add
ins
jnp
sbb
add
add
dec
push
pusha
add
jbe
dec
xor
mov
sub
add
add
ins
test
add
pop
add
add
imul
push
test
pop
cmc
mov
add
add
les
add
dec
inc
stc
inc
xchg
cmp
add
add
pop
pop
mov
outs
out
ret
mov
mov
into
adc
add
add
arpl
or
lock
add
add
add
pushw
pushf
push
dec
jo
add
add
ret
jl
xchg
mov
sbb
fsubr
js
dec
int
dec
sahf
inc
xchg
gs
push
sti
cmp
mov
pop
inc
dec
inc
dec
jns
lods
add
add
adc
add
add
or
add
add
call
add
inc
sub
scas
mov
mul
icebp
ja
add
add
add
(bad)
int3
int3
int3
int3
inc
pop
jne
out
add
repz
repnz
add
add
retf
add
add
push
sub
nop
nop
nop
nop
nop
jns
add
add
cdq
(bad)
jnp
out
fld
add
add
rol
mov
add
add
mov
add
add
pop
jl
les
add
add
mov
(bad)
ret
push
int
sar
ins
jns
jmp
test
jno
push
das
hlt
sbb
sub
add
add
aam
add
add
add
or
add
add
int3
int3
int3
int3
je
fs
push
dec
jge
inc
addr16
mov
mov
add
arpl
pop
fprem
sbb
add
add
(bad)
mov
jbe
xchg
add
add
adc
add
add
jo
push
neg
aas
addr16
lds
sub
out
xchg
mov
cmp
add
add
or
add
add
add
or
add
add
add
dec
xor
or
add
add
jecxz
or
add
add
aas
movs
cwde
cmp
lock
lods
call
sub
es
out
add
add
add
add
std
jo
cli
adc
jmp
loope
daa
mov
add
pop
pop
test
aam
fwait
rol
or
outs
sldt
add
pop
mov
fld
add
add
pop
add
add
adc
jno
fidivr
add
push
xlat
repz
mov
int3
int3
int3
int3
stc
ror
out
jne
mov
inc
lea
add
add
push
mov
pusha
dec
fwait
dec
add
add
add
and
add
stos
inc
cmps
test
jb
daa
clc
mov
push
cli
stos
out
sub
add
add
faddp
push
xchg
arpl
mov
add
ins
xchg
mov
add
add
dec
mov
xor
or
add
add
shl
imul
sub
push
sbb
cwde
sahf
fwait
push
mov
frstor
push
or
push
push
mov
int3
int3
int3
int3
add
shl
test
cdq
test
imul
inc
jno
and
add
add
arpl
add
add
jle
movs
push
shl
mov
add
add
jne
sldt
add
add
add
add
add
add
cmps
sub
loopne
mov
inc
hlt
(bad)
cli
jne
lds
mov
sbb
nop
nop
nop
nop
nop
pop
adc
add
add
push
add
test
imul
push
push
add
add
in
mov
add
add
(bad)
jmp
rol
(bad)
imul
push
jle
or
add
add
mov
cli
mov
sub
sub
scas
jae
or
inc
push
inc
or
add
add
mov
mov
add
aaa
call
ss
or
add
add
mov
jmp
popa
fsub
mov
lea
adc
add
add
call
push
lds
jl
mov
fcmovbe
ffreep
add
add
add
add
addr16
jge
add
add
dec
mov
xor
and
cmp
add
add
add
hlt
vsubss
jmp
xchg
dec
xchg
repz
icebp
sub
test
frstor
sar
pop
or
movs
pop
xor
cmp
dec
or
cwde
add
jnp
ins
fcmovnb
sub
xchg
add
add
jb
mov
add
add
cmp
pop
iret
jle
push
inc
cmp
mov
lds
add
popf
(bad)
mov
add
add
cmp
mov
jns
inc
mov
test
mov
std
aaa
pop
and
cmp
je
add
xchg
aaa
aad
sub
add
sldt
add
call
sub
add
or
add
add
mov
cld
inc
dec
jmp
mov
add
add
pushf
adc
add
add
cmps
xor
mov
(bad)
push
hlt
mov
ret
jmp
mov
push
add
add
xchg
mov
adc
add
add
mov
add
add
sti
les
inc
add
add
add
adc
add
add
cs
sldt
add
jl
inc
cmps
sbb
sbb
add
add
mov
dec
add
add
fimul
add
add
(bad)
call
sub
bound
adc
or
add
add
in
push
xlat
and
adc
add
add
push
add
add
rcl
adc
add
add
add
add
out
loopne
inc
in
sbb
add
ret
data16
add
add
mov
fwait
push
dec
sub
mov
add
fadd
nop
nop
nop
nop
nop
leave
cmp
jmp
sub
add
add
and
aam
pop
adc
add
add
out
jbe
push
or
add
add
outs
mov
xchg
sub
sub
add
add
nop
nop
nop
nop
nop
adc
add
add
imul
in
jmp
aad
mov
and
add
lods
div
scas
adc
scas
xchg
or
add
add
inc
lods
add
add
add
out
add
add
add
add
add
add
mov
pop
sub
movs
movs
inc
cmp
dec
adc
aam
pusha
outs
jnp
inc
xchg
cmp
push
ror
int3
int3
int3
int3
cmp
add
add
push
cmp
inc
jp
add
add
retf
(bad)
push
out
cmp
sub
call
movs
push
add
add
movs
sub
xchg
add
add
and
int3
int3
int3
int3
int3
sbb
stc
mov
sahf
pop
pop
lds
fisub
add
in
jnp
sbb
add
add
add
add
xor
repnz
pop
sbb
mov
fsubr
outs
test
pop
cmps
lahf
cmp
add
add
test
add
popf
retf
pop
mov
sar
xor
frstor
(bad)
mov
notrack
xchg
xor
sti
sldt
add
cmps
mov
push
rcl
add
add
add
jmp
or
int3
int3
int3
test
add
dec
jl
xchg
push
pop
out
and
call
inc
adc
add
add
push
fbld
jmp
add
add
out
nop
nop
nop
nop
nop
sar
add
add
fwait
mov
add
add
je
inc
and
xor
add
add
add
add
dec
je
outs
fs
add
add
jae
scas
pop
hlt
jnp
sbb
add
add
or
add
add
sub
arpl
sub
mov
or
add
add
xor
add
add
add
add
add
and
jl
push
test
pop
fs
leave
push
popf
or
add
add
add
add
add
call
mov
cmps
fs
sldt
add
fisttp
add
add
gs
gs
stc
fdiv
mov
repnz
cmp
add
scas
jle
and
cmp
cwde
mov
out
sahf
mov
mov
add
push
retf
loop
xchg
(bad)
fsub
add
xor
add
xchg
add
add
sbb
loope
outs
shl
xchg
fidiv
dec
or
std
mov
ret
popa
mov
fsubr
rol
inc
and
cmps
fidiv
lea
xchg
mov
mov
nop
nop
nop
nop
nop
int
mov
add
xchg
cdq
std
jp
push
outs
rol
add
add
and
test
add
sub
aam
aad
jge
add
add
pop
pop
pop
mov
ret
lahf
cmp
add
call
mov
dec
popa
add
add
add
add
add
and
imul
bound
add
add
add
add
in
lods
rcl
ss
sldt
add
jmp
ds
cmps
cmp
and
xchg
test
cs
aaa
jae
les
add
jmp
adc
add
add
je
jmp
fisub
dec
mov
retf
xchg
jg
jp
xor
add
add
(bad)
arpl
and
fld
cmps
push
or
add
add
ins
mov
xor
sahf
xchg
jl
add
add
adc
add
add
ror
xchg
inc
mov
dec
outs
xchg
inc
and
gs
outs
pop
push
sub
fisub
loop
das
lods
fmul
leave
xor
add
add
(bad)
out
movs
add
add
and
iret
xchg
cld
xor
loope
out
jge
push
in
pop
shl
add
add
jae
sbb
mov
add
add
add
add
cmps
ret
xchg
pop
arpl
mov
jmp
addr16
popf
add
xor
bound
add
add
push
gs
cli
scas
sub
mov
add
add
push
mov
mov
adc
add
add
(bad)
push
add
add
ja
dec
add
add
cmps
pop
pop
sbb
add
add
addr16
or
add
add
retf
cwde
mov
dec
mov
out
nop
nop
nop
nop
jmp
loop
add
add
inc
aas
pop
scas
movs
aaa
xchg
jg
adc
add
add
xor
mov
inc
mov
es
aam
sbb
dec
xchg
cmp
dec
lock
add
add
rcr
fistp
sbb
jno
dec
pop
xchg
push
arpl
nop
iret
sbb
mov
dec
bound
xchg
mov
jbe
and
or
add
add
add
add
add
pop
xor
pop
cmc
int3
int3
int3
int3
int3
mov
mov
jle
jns
pop
call
stos
add
add
and
cdq
cld
aam
pop
mov
sti
or
mov
xor
cs
pop
(bad)
cld
ret
or
add
add
add
add
sub
xchg
add
add
mov
push
and
pop
fmulp
loopne
nop
nop
nop
nop
nop
inc
fs
movs
sbb
push
add
add
push
test
xchg
push
movs
sar
inc
xor
nop
nop
nop
nop
xchg
jnp
push
xor
test
adc
cwde
dec
add
add
add
cmp
mov
and
test
dec
xchg
ret
add
add
add
or
add
add
imul
add
inc
xor
fcomp
pop
add
add
jecxz
retf
sbb
add
add
call
fs
das
test
xor
add
add
adc
add
add
jno
fwait
add
add
add
xchg
add
add
add
add
sub
adc
add
add
pop
jno
lahf
cmp
add
add
repz
and
(bad)
mov
rcl
add
add
or
add
add
xchg
pop
adc
add
add
sub
inc
sbb
(bad)
loopne
sahf
fdivr
add
inc
call
bound
add
add
cmp
add
add
dec
push
fidiv
test
add
add
sub
or
add
add
call
add
add
add
(bad)
inc
lods
mov
pop
cmc
sub
mov
add
add
add
add
in
in
sub
or
add
add
adc
add
add
add
add
jb
cmp
dec
test
add
push
out
pop
sub
jge
es
mov
xor
add
add
push
mov
add
add
and
cwde
inc
mov
test
pop
push
mov
mov
out
pop
add
add
std
dec
fstp
sub
add
stc
add
add
iret
mov
jns
push
add
add
call
adc
add
add
or
add
add
add
add
add
add
add
add
push
cmp
popf
push
adc
add
add
inc
add
add
mov
add
add
adc
add
add
fimul
int3
int3
int3
int3
movs
xor
sub
push
sahf
fwait
in
pop
fst
or
add
add
repz
cmps
adc
add
add
add
add
lahf
fdivr
sti
loope
fild
add
add
fs
pop
scas
sub
movs
mov
add
lods
lods
mov
call
add
add
push
dec
pop
inc
pop
js
add
add
mov
jp
inc
fwait
in
push
pop
pop
fwait
mov
dec
loope
aas
add
add
mov
fild
add
push
mov
xchg
jg
pop
repz
pop
imul
add
add
dec
sub
fninit
cli
dec
sbb
xor
dec
push
js
mov
sahf
inc
ja
lods
ins
fadd
out
sbb
sub
jmp
stc
dec
bound
cmc
fsub
pop
in
test
add
add
mov
add
nop
nop
nop
nop
nop
or
add
add
pop
cmps
lock
test
push
in
add
add
add
jno
imul
aad
int
add
add
dec
xchg
cmp
add
add
sbb
ret
jne
rcl
push
add
add
aam
jbe
pop
scas
pop
loope
xlat
ret
sub
clc
pop
xchg
push
xchg
xchg
imul
cli
push
add
add
imul
add
test
add
add
jb
push
stos
ficomp
leave
sbb
add
add
add
add
add
add
add
add
jmp
(bad)
and
test
add
jns
lds
add
add
sub
pushf
dec
mov
imul
sub
fsub
adc
add
add
xchg
mov
lahf
cwde
cmp
mov
stos
(bad)
addr16
aas
mov
fisubr
add
lock
loope
dec
iret
push
add
add
jp
inc
push
add
add
cdq
pop
dec
mov
fisub
add
mov
push
add
add
daa
jnp
out
dec
adc
call
pop
adc
add
add
pop
stc
cmps
adc
add
add
rol
add
add
retf
mov
pop
inc
imul
pushf
(bad)
jno
ret
sub
mov
add
add
add
in
js
dec
rol
enter
push
mov
sub
rcr
mov
(bad)
lea
(bad)
add
add
ret
and
add
add
jno
cmps
jmp
movs
add
add
jns
nop
nop
nop
nop
jno
add
add
add
push
cmc
cdq
adc
add
add
pop
ins
adc
add
add
enter
int3
int3
int3
int3
int3
mov
rcl
add
mov
rcl
xor
add
add
dec
cmp
imul
add
add
ret
mov
add
pusha
outs
loopne
in
nop
nop
nop
nop
nop
shl
sti
push
enter
and
inc
xchg
int
add
add
movs
pop
int3
int3
int3
int3
int3
jge
jns
or
add
add
add
add
in
xchg
and
js
mov
mov
test
cwde
aas
je
add
add
dec
adc
add
add
xchg
je
mov
add
add
std
mov
sbb
add
iret
popa
rcl
push
jbe
retf
xlat
sbb
add
or
add
add
adc
add
add
xchg
jbe
lods
inc
add
add
add
pop
jmp
sldt
add
push
data16
lock
add
clc
aam
add
add
jne
jl
ins
mov
mov
out
cli
xchg
popa
and
out
fwait
lock
movs
sbb
loopne
enter
add
add
add
add
(bad)
jmp
xchg
ret
jmp
fisubr
add
add
loop
add
add
sub
lods
pop
retf
add
add
pop
enter
mov
add
add
add
in
xor
add
add
sbb
int3
int3
int3
int3
jbe
lods
inc
ins
pop
add
add
xor
fiadd
add
add
in
loope
xor
add
add
(bad)
cwde
jl
(bad)
jle
leave
(bad)
das
jecxz
call
mov
dec
or
cmp
add
add
test
std
int
sbb
icebp
pop
das
inc
retf
sahf
das
mov
sti
cmp
add
add
icebp
loopne
hlt
jno
dec
and
push
jnp
add
add
jge
loop
pop
jmp
sahf
mov
or
push
iret
fwait
cmp
lds
add
sar
pop
shr
add
add
add
add
mov
push
add
add
push
xchg
xchg
add
add
mov
or
add
add
cmp
add
shl
add
jae
mov
push
inc
inc
movs
aad
ins
push
mov
mov
lds
mov
scas
in
add
add
add
jbe
and
add
add
add
mov
push
lahf
ins
mov
jmp
neg
push
aam
add
sti
sbb
push
add
add
mov
imul
retf
stc
ins
xlat
rcr
jle
xchg
mov
cld
and
sbb
retf
sbb
mov
and
dec
ds
jae
xchg
pop
pusha
xchg
das
jmp
nop
nop
fwait
hlt
push
(bad)
sahf
(bad)
jmp
sbb
mov
lods
cmp
add
sbb
sbb
sti
cmc
sub
ja
ror
push
sbb
stos
jmp
aas
mov
mov
push
pop
in
jnp
add
add
pop
dec
mov
or
add
add
sbb
les
popa
iret
mov
in
inc
or
add
add
add
imul
add
add
lock
retf
sbb
and
clc
cmp
lock
js
add
cmps
and
sub
or
add
add
and
push
mov
xor
int3
int3
int3
int3
int3
ret
xor
ja
mov
xchg
dec
inc
lods
push
xchg
leave
ficomp
add
add
clc
push
pop
mov
pop
jns
and
mov
jno
and
mov
call
add
mov
add
add
imul
add
add
add
xor
and
sahf
sahf
sbb
pusha
cmps
or
add
add
ds
mov
stos
test
test
test
add
inc
retf
jp
dec
pop
add
add
das
div
aaa
in
adc
add
add
add
add
add
inc
sub
ds
xor
mov
in
pusha
inc
repnz
scas
jg
out
push
call
xchg
outs
out
es
adc
add
add
std
mov
add
add
add
add
mov
pop
mov
pop
and
lds
add
sub
and
sbb
std
pop
sahf
loope
jmp
aam
out
call
add
add
add
xchg
scas
mov
jbe
pushf
popf
xchg
xchg
adc
ins
jmp
add
add
xor
pop
jbe
mov
or
add
add
add
add
add
mov
out
pop
mov
mov
ins
in
scas
add
add
add
ins
in
(bad)
loope
test
fdiv
cmps
cmp
add
add
adc
add
add
mov
mov
add
add
add
add
add
or
add
add
xchg
leave
out
inc
pop
adc
add
add
pop
scas
and
add
(bad)
mov
and
daa
sbb
cmc
fs
mov
mov
aas
mov
outs
or
loopne
inc
mov
and
lds
add
inc
fwait
dec
mov
dec
scas
adc
add
add
and
add
add
out
add
add
stos
push
imul
or
add
add
jno
fsub
call
pop
retf
mov
stos
add
add
jmp
sub
add
add
jmp
xchg
cmps
sahf
rol
dec
sbb
add
add
jle
fsub
es
add
add
add
add
or
add
add
add
icebp
or
add
add
add
add
cmp
enter
ret
xlat
xlat
out
pop
mov
jl
scas
ficomp
imul
or
dec
inc
ins
scas
sldt
add
push
or
add
add
into
add
add
mov
xchg
scas
dec
push
outs
mov
push
inc
stc
cmp
fmul
jmp
cmp
movs
lea
mov
or
add
add
in
in
fdivr
mov
pop
or
add
add
jno
outs
jg
int
add
add
add
add
add
shr
loope
add
add
call
sub
add
add
mov
jl
add
xor
je
adc
add
add
push
add
add
jl
sahf
cli
xchg
mov
int3
scas
cwde
push
in
repz
add
add
adc
add
add
add
mov
adc
add
add
cmp
stc
inc
test
mov
movs
aas
xchg
pop
jmp
sbb
add
add
add
add
add
or
add
add
rcl
push
arpl
cs
sub
add
add
add
xchg
dec
cmps
leave
dec
xchg
mov
pop
xchg
aam
mov
jmp
mov
adc
add
add
push
jb
lea
ret
ret
jo
xchg
push
ins
adc
add
add
sbb
push
lea
pop
pop
mov
iret
pusha
(bad)
mov
ja
pop
xlat
jmp
jp
adc
add
add
add
add
ror
lods
mov
ret
cs
leave
fimul
pop
add
add
mov
inc
sbb
(bad)
pusha
sahf
enter
cs
aaa
test
xchg
loopne
(bad)
pop
adc
add
add
lea
bound
pop
add
cmps
mov
rcl
loope
pop
mov
add
add
add
sbb
add
pusha
cdq
xchg
std
pop
retf
jno
or
add
add
mov
add
add
inc
call
add
add
add
add
add
repz
mov
sbb
ss
add
add
shl
jbe
pop
cmc
icebp
push
cwde
stos
push
add
add
mov
jg
enter
add
add
adc
mov
loop
shl
pop
bound
push
and
fbstp
pop
sub
xlat
dec
push
ret
bound
(bad)
add
add
jne
ins
push
(bad)
push
inc
add
add
add
ror
add
mov
mov
mov
xor
mov
mov
add
das
outs
pop
xor
dec
pop
xor
add
add
sar
or
add
add
xor
mov
adc
add
add
cmc
dec
aam
sub
add
lods
scas
jecxz
lahf
xor
xor
push
jg
pop
int3
int3
int3
int3
int3
adc
add
add
stc
cmp
dec
mov
clc
adc
add
add
or
add
add
xchg
cmc
mov
ins
(bad)
fidivr
cs
(bad)
adc
push
gs
adc
add
add
dec
mov
in
hlt
xor
xchg
cld
xchg
fidiv
pop
add
add
add
jp
fld
out
daa
rcr
fucomi
cmp
cdq
push
stos
mov
and
inc
cmp
add
daa
loop
lea
xchg
adc
add
add
lds
sbb
sbb
add
pop
cmps
add
add
add
loopne
adc
add
add
rcr
xor
lahf
lods
add
add
add
ins
add
add
add
xor
cli
call
or
add
add
pop
xchg
retf
fs
in
rcl
je
cwde
out
sldt
add
leave
sub
add
add
sub
xor
in
pop
add
add
lea
jmp
fimul
push
xor
cmp
cmp
cmps
add
add
add
add
retf
cmps
xlat
test
adc
add
add
rcl
add
add
add
add
mov
ins
mov
data16
xor
or
add
add
and
mov
aam
mov
add
add
mov
jp
inc
cdq
sub
add
add
aas
and
movs
fadd
add
add
push
les
add
sub
jl
xor
inc
push
xor
clc
push
add
pop
sub
add
add
dec
xchg
fisub
sub
add
add
add
add
add
add
add
adc
add
add
pop
or
add
add
add
add
adc
add
add
add
add
add
inc
cwde
retf
cmc
or
add
add
arpl
add
add
test
ret
ror
mov
xchg
ins
cmp
xchg
xchg
inc
mov
add
add
cli
retf
inc
aaa
pop
out
stos
xor
jo
mov
loope
cmp
or
add
add
mov
test
push
add
add
cwde
sub
rol
dec
into
stc
sub
cmp
neg
or
add
add
add
add
add
add
int3
int3
int3
int3
int3
sti
ins
daa
mov
stc
(bad)
std
jae
and
shl
and
mov
mov
push
outs
ds
mov
xchg
add
push
push
data16
mov
out
or
add
add
inc
xchg
idiv
fwait
xchg
sub
dec
(bad)
or
add
add
shr
aaa
mov
das
push
dec
dec
jl
(bad)
icebp
adc
add
add
xor
xor
sbb
add
add
xchg
jl
dec
adc
add
add
cs
xchg
jle
iret
or
add
add
std
adc
add
add
jmp
lds
add
mov
lods
or
add
add
add
add
mov
inc
and
cdq
fnsave
daa
dec
arpl
add
add
cli
outs
or
add
add
inc
mov
add
xchg
xor
fndisi(8087
sahf
repnz
cwde
icebp
das
mov
cld
fistp
pop
cmp
sub
sub
add
add
jmp
fdiv
mov
add
push
add
add
in
pop
test
bound
rol
add
sub
add
add
dec
xlat
cmp
int
aam
pushf
jg
mov
addr16
cmp
shl
or
add
add
fs
daa
mov
and
push
add
add
cmp
push
add
jae
rol
cmc
cld
add
jns
add
add
add
loopne
mov
fwait
cmps
sldt
add
xor
(bad)
adc
add
add
sbb
pop
mov
add
add
cs
jg
mov
add
test
aad
xchg
cld
mov
int
xchg
iret
cmp
pop
push
mov
enter
sub
leave
pushf
aaa
inc
push
stos
ret
xor
pop
int3
int3
int3
int3
pop
or
add
add
pop
add
add
rol
add
add
(bad)
or
add
add
fs
or
add
add
aam
neg
nop
nop
nop
nop
nop
clc
mov
int3
int3
int3
int3
int3
mov
add
fimul
lea
mov
bound
lods
sub
add
add
cmp
ds
jmp
cmps
ss
mov
add
add
jbe
add
add
rol
jl
mov
xor
lods
pop
adc
add
add
xchg
add
add
add
pop
int
push
add
add
aaa
int
adc
add
add
add
add
in
aad
inc
addr16
movs
mov
cmps
test
pop
imul
push
add
add
rcr
pusha
jae
retf
cwde
push
add
add
add
(bad)
xchg
or
add
add
add
jae
call
push
fist
add
add
add
add
int3
int3
int3
int3
int3
mov
jbe
push
add
add
mov
movs
cmp
imul
pop
xor
dec
loope
add
add
mov
add
add
dec
push
pop
push
xchg
out
adc
add
add
mov
add
jnp
lahf
xchg
(bad)
ja
outs
jl
jmp
jg
ficomp
add
add
jmp
jp
adc
add
add
adc
sub
and
push
xor
add
add
mov
add
ins
test
sahf
(bad)
jbe
add
add
xchg
mov
pop
(bad)
sub
pop
jo
xchg
leave
mov
aaa
fiadd
dec
adc
add
add
add
add
dec
mov
scas
adc
add
add
jne
int3
int3
int3
int3
int3
cmc
(bad)
push
pop
cmc
jb
push
pushf
dec
pop
mov
xchg
or
xor
push
add
add
add
scas
push
jmp
push
add
add
fidiv
loop
push
sub
add
add
push
rcr
and
sub
sbb
fs
dec
sbb
or
add
add
imul
add
add
add
add
jno
sbb
arpl
dec
fiadd
or
push
fstp
add
add
outs
or
add
add
adc
add
add
inc
sbb
push
add
add
jbe
sub
call
push
add
add
add
cmps
pop
stc
cwde
mov
add
add
inc
mov
add
add
pop
add
add
cmp
add
add
push
pop
inc
mov
fiadd
add
add
clc
add
add
add
push
add
add
mov
sldt
add
sbb
retf
lods
add
add
jns
int3
int3
int3
int3
int3
xchg
pop
xchg
das
mov
lock
xchg
jge
arpl
add
add
out
fimul
add
add
xchg
xlat
and
in
nop
nop
nop
nop
nop
mov
fcomp
dec
fsubr
add
or
add
add
sub
add
add
cmp
retf
nop
nop
nop
nop
std
jg
add
add
in
dec
loop
add
add
mov
mov
retf
pop
stc
sbb
jmp
dec
mov
xor
push
dec
sbb
or
add
add
enter
xor
pusha
imul
add
pop
jmp
(bad)
mov
sahf
push
add
add
addr16
jge
out
(bad)
fsubr
test
test
add
xchg
inc
outs
jne
je
add
add
cmps
out
rcl
jne
jae
add
into
sub
hlt
js
ja
add
(bad)
pop
mov
fsubr
cmp
add
add
ja
(bad)
jmp
add
loopne
pushf
pusha
jmp
int3
int3
int3
int3
add
add
add
or
add
add
add
add
inc
bound
sbb
jns
retf
xlat
cli
xchg
mov
bound
push
das
in
arpl
loope
outs
(bad)
mov
stos
add
add
add
loop
popf
(bad)
pop
sbb
pop
sub
or
and
repz
out
push
lahf
fcomp
pop
xchg
pop
add
add
or
add
add
sbb
mov
pushf
xchg
ss
mov
mov
jo
add
add
call
lahf
sub
imul
add
add
out
or
add
add
mov
add
add
add
or
add
add
mov
dec
jae
add
add
add
add
mov
add
add
jns
mov
or
add
add
dec
cmp
cmp
add
retf
mov
add
add
cmp
in
sub
repz
cmp
js
in
cmc
adc
add
add
mov
add
dec
ss
stc
movs
sub
add
add
cmps
inc
loope
dec
imul
cs
in
push
mov
add
mov
movs
leave
pop
dec
push
add
add
into
out
xchg
add
add
push
out
xor
rep
and
(bad)
and
cmc
sub
popf
and
mov
repnz
pop
push
adc
add
add
dec
nop
nop
nop
nop
nop
jnp
xor
add
sub
fldcw
add
fwait
adc
add
add
sub
or
add
add
add
add
js
pusha
lea
sti
pop
nop
nop
nop
nop
nop
cmp
std
jge
or
xchg
pushf
cmps
jle
dec
push
aam
add
add
or
leave
scas
retf
and
fadd
add
imul
outs
xlat
stos
sub
add
add
adc
add
add
add
(bad)
mov
xchg
les
add
add
add
add
test
mov
clc
rcl
sub
adc
pop
popa
inc
sub
sbb
int3
int3
int3
int3
popa
sti
sub
inc
addr16
ret
cli
or
mov
int3
int3
int3
int3
int3
gs
jg
xchg
xchg
add
add
mov
stos
call
test
jge
cmps
rol
add
adc
lds
test
add
add
pusha
cmp
das
push
xchg
cmp
inc
out
sub
add
add
enter
add
fsin
repnz
mov
pusha
sbb
add
add
sbb
cmps
push
jcxz
sbb
das
fcos
adc
add
add
add
adc
add
add
sbb
add
xchg
pop
stos
sub
or
jo
jp
add
add
scas
add
(bad)
rol
add
or
jg
push
xchg
adc
add
add
add
jnp
push
adc
add
add
add
add
jbe
jmp
cwde
adc
add
add
in
ins
stos
pop
sldt
add
arpl
int3
int3
int3
int3
push
add
add
into
loope
adc
add
add
leave
add
pop
adc
sbb
call
lahf
sti
out
hlt
sub
jae
xor
fnstcw
mov
mov
jbe
add
pop
add
add
cmp
push
enter
add
add
adc
add
add
ds
add
add
imul
je
cs
sbb
push
movs
mov
pop
nop
nop
nop
nop
nop
nop
nop
nop
nop
enter
mov
and
or
add
add
repnz
(bad)
sub
dec
cmp
add
mov
mov
push
mov
pop
add
add
add
mov
test
inc
adc
add
add
mov
cld
mov
add
add
hlt
(bad)
push
add
add
jmp
imul
add
xchg
add
add
dec
arpl
inc
mov
ja
xchg
xlat
xor
lods
or
add
add
inc
adc
add
add
add
or
jb
aam
add
add
in
(bad)
xor
sub
or
add
add
sub
add
popa
sub
xchg
add
add
add
add
add
add
int3
int3
int3
int3
int3
(bad)
mov
repz
add
add
bound
ret
xor
add
add
inc
push
push
out
and
rcl
push
jno
arpl
int3
int3
int3
int3
xchg
pop
leave
xchg
je
inc
lods
inc
mov
mov
adc
add
add
inc
mov
adc
ret
icebp
jge
push
pop
pop
or
add
add
into
add
add
add
or
add
add
cmp
add
add
ret
(bad)
jge
retf
dec
jle
dec
hlt
mov
add
add
mov
leave
movs
stos
(bad)
jmp
dec
and
sti
mov
mov
xor
cmp
mov
aam
dec
sub
sldt
add
pop
add
add
in
scas
jge
push
cmp
or
add
add
(bad)
mov
add
push
mov
mov
fadd
add
fistp
jb
sbb
mov
es
out
int
inc
clc
rcr
call
add
add
and
pushf
mov
inc
stos
cmps
inc
ja
jge
add
add
cs
jl
imul
add
add
lds
sbb
fsubr
xchg
add
add
dec
sbb
add
add
addr16
add
add
pop
mov
jnp
lock
aam
(bad)
test
add
test
int3
add
add
jmp
cmc
add
add
add
add
sbb
dec
shr
pop
add
add
adc
add
add
push
add
add
or
add
add
add
fchs
arpl
cs
adc
pop
sub
adc
in
push
lock
mov
pop
pop
push
cmp
add
add
xlat
imul
stc
into
push
inc
in
pop
lea
jecxz
add
lds
push
xchg
pop
lea
push
xchg
push
add
add
lock
jge
fsubr
add
add
add
and
ja
ret
loopne
popf
mov
les
imul
add
add
add
inc
scas
(bad)
stos
mov
imul
or
add
add
mov
retf
pushf
push
in
cli
mov
inc
jb
ins
(bad)
add
rcr
mov
add
add
ror
inc
mov
mov
add
out
loope
jl
xchg
add
add
jb
mov
mov
add
pop
sbb
add
add
stc
stos
inc
push
add
add
dec
and
fst
add
add
mov
retf
scas
mov
stos
xchg
mov
test
mov
jns
es
stos
aas
mov
rol
rol
add
sbb
add
pop
popa
(bad)
rcl
add
push
mov
scas
adc
add
add
addr16
jne
mov
add
add
jnp
push
jmp
repz
push
fwait
cmps
jae
pop
pop
repnz
add
add
add
add
and
(bad)
shl
out
xchg
push
add
add
or
add
add
add
add
add
add
or
add
add
retf
mov
lock
add
add
aad
ins
xchg
push
ins
pop
cld
mov
inc
and
in
push
(bad)
imul
in
push
jl
dec
add
add
call
add
outs
inc
repnz
clc
mov
lahf
push
mov
leave
xchg
add
out
repnz
or
add
add
sbb
mov
jbe
add
add
retf
cld
jnp
mov
(bad)
push
or
add
add
lods
push
jns
es
retf
in
sldt
add
mov
mov
dec
push
hlt
xor
inc
rcl
add
add
add
add
icebp
pop
mov
imul
add
add
add
mov
aas
ins
into
out
inc
out
jecxz
sbb
jo
mov
jnp
dec
mov
adc
add
add
inc
mov
fcom
add
add
and
pop
and
movs
jl
add
add
dec
out
push
outs
ins
repnz
daa
cmps
pop
pop
inc
push
call
nop
nop
nop
nop
fisub
fsubr
add
add
outs
add
add
add
jb
movs
es
xchg
out
test
pop
fiadd
test
sbb
int
mov
xchg
cmc
and
pop
add
add
inc
xchg
inc
adc
add
add
mov
aad
cmp
outs
sub
dec
outs
in
mov
ins
mov
add
add
add
xchg
dec
and
jb
aad
jle
jmp
clc
sub
ds
xchg
repz
ja
and
mov
nop
nop
nop
nop
nop
xchg
mov
das
push
push
add
add
inc
push
add
add
add
add
add
jmp
push
loop
(bad)
xchg
pop
loopne
shr
into
cli
fwait
aam
inc
sti
xor
add
add
les
cmp
add
add
add
push
adc
add
add
dec
cwde
(bad)
loopne
(bad)
and
add
mov
iret
mov
imul
outs
jge
mov
hlt
sbb
in
repnz
add
inc
test
mov
mov
imul
call
pop
mov
add
add
lds
xchg
add
add
add
mov
movs
jmp
add
add
add
adc
add
add
xchg
and
push
add
add
cs
jno
dec
les
add
add
stc
mov
daa
pop
mov
lahf
cmp
(bad)
frstor
inc
xchg
sbb
add
iret
cli
jge
rol
cli
xchg
mov
jmp
jp
in
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
shl
push
(bad)
int
mov
addr16
or
add
add
nop
nop
nop
nop
nop
xor
add
add
sbb
sbb
inc
cmp
mov
add
add
add
push
dec
add
add
ret
or
add
add
test
test
scas
mov
mov
cli
test
fwait
xor
(bad)
inc
icebp
loopne
cs
in
mov
add
(bad)
jbe
mov
std
das
js
loope
pushf
ret
movs
dec
xor
dec
pop
sbb
shr
scas
jns
mov
inc
add
add
add
inc
push
out
inc
fild
add
add
rol
add
fucomp
in
add
aam
nop
nop
nop
nop
cmp
add
mov
xchg
add
xchg
ins
cmps
retf
mov
out
or
add
add
adc
adc
add
add
jle
xchg
xor
sbb
add
add
pop
lock
add
add
jmp
jns
mov
out
pop
aam
add
add
jmp
repz
shl
clc
and
enter
int3
int3
int3
xor
repnz
(bad)
sbb
add
add
add
add
sti
and
jno
enter
add
add
add
push
gs
repnz
or
add
add
cmp
dec
sbb
ds
adc
cmps
or
pop
add
fstp
add
and
mov
pop
xor
lds
add
add
retf
xchg
push
cdq
out
inc
jmp
lds
ins
call
pop
out
cmc
push
test
push
add
add
div
xchg
sub
add
jecxz
out
outs
popf
jmp
jp
or
add
add
add
add
push
adc
fwait
enter
nop
nop
nop
nop
inc
fadd
pop
(bad)
xchg
sbb
(bad)
jmp
or
add
add
add
add
cmps
jne
out
(bad)
ins
push
enter
sub
int3
int3
int3
push
not
add
add
push
jns
out
call
add
add
pop
and
adc
add
add
or
add
add
inc
sar
adc
add
add
add
add
add
push
out
mov
fucomip
ret
in
mov
add
push
add
add
fsubr
sbb
mov
push
sub
cmp
lahf
jbe
add
mov
mov
add
add
add
inc
xchg
aam
fs
sub
add
pop
add
add
test
or
add
add
sar
mov
cmp
inc
inc
ds
add
add
int
jo
push
fnsave
pushf
xlat
aas
enter
add
add
cmp
dec
add
inc
push
jecxz
leave
sbb
push
test
call
add
add
add
aad
sub
push
and
jo
dec
lds
add
add
loope
or
add
add
inc
pop
and
cmp
add
add
sub
pop
xor
mov
jge
cmp
adc
add
add
lods
add
add
mov
nop
nop
nop
nop
mov
fld
add
add
jae
hlt
mov
outs
push
xor
int3
in
mov
pop
xchg
xchg
mov
adc
dec
rcr
repz
mov
xchg
add
add
add
push
in
xchg
ret
(bad)
ins
mov
xchg
pop
dec
inc
(bad)
in
mov
add
cmps
je
dec
leave
dec
inc
cmp
xor
add
daa
and
mov
sub
mov
test
popf
inc
jg
jmp
cmc
retf
add
add
pop
ret
mov
add
add
pop
and
stc
jge
adc
add
add
je
and
or
add
add
jae
std
loop
gs
mov
enter
add
add
xor
adc
add
add
cli
mov
retf
imul
pop
int3
int3
int3
int3
int3
cmp
sub
mov
test
arpl
push
jns
loope
pop
dec
outs
mov
popa
push
in
xchg
mov
mov
out
loopne
add
push
add
add
push
enter
adc
add
add
mov
std
sbb
scas
and
add
and
add
add
add
add
xchg
mov
pushf
pop
cmp
enter
neg
stc
add
add
add
add
adc
add
add
shl
add
add
sub
add
add
or
add
add
inc
ret
cmp
xchg
cmp
add
add
xchg
int3
int3
int3
int3
int3
xchg
ret
cmc
xlat
add
add
add
add
add
add
fidiv
fist
mov
inc
jecxz
nop
nop
nop
nop
popf
mov
push
inc
popf
xor
enter
sub
jecxz
mov
loope
add
add
aaa
sti
dec
js
adc
add
add
add
mov
push
add
add
and
add
mov
sub
add
add
xor
add
inc
cmp
push
xchg
push
add
add
mov
sub
or
add
add
fidiv
inc
xor
adc
add
add
add
add
add
in
mov
mov
jecxz
push
add
add
(bad)
and
jbe
xlat
mov
sti
test
mov
add
add
mov
add
add
add
pop
ss
frstor
ja
enter
je
lock
ret
xchg
pop
out
lods
xchg
mov
adc
in
adc
add
add
mov
(bad)
retf
mov
bound
jb
mov
sbb
sbb
inc
clc
data16
pushf
cmp
clc
mov
mov
push
ficom
movs
sbb
add
das
jnp
add
add
call
dec
sahf
fwait
push
add
push
mov
out
adc
xchg
add
add
add
test
int3
int3
or
add
add
mov
jecxz
sbb
mov
clc
rol
add
add
push
mov
dec
dec
cli
fs
push
adc
add
add
cmp
add
xchg
ins
dec
(bad)
sub
jae
int3
int3
int3
int3
int3
std
fiadd
add
add
jnp
mov
add
add
pop
and
dec
sbb
fiadd
add
add
lds
loopne
sbb
mov
cs
and
mov
mov
mov
pushf
jp
dec
cmp
pop
push
add
add
lock
mov
ret
cmp
test
outs
mov
push
mov
call
es
mov
add
call
xchg
push
aas
ss
(bad)
iret
mov
add
xor
ret
lds
jecxz
ds
cmc
test
repnz
xchg
and
gs
les
add
add
add
add
add
movs
add
add
mov
popa
dec
fst
and
add
add
dec
dec
iret
daa
icebp
mov
sub
ds
add
add
add
ins
sbb
cmp
add
add
add
adc
add
add
(bad)
bnd
imul
pop
push
dec
or
in
cmc
sar
mov
test
out
pop
pop
jbe
pop
imul
add
add
cdq
jmp
add
add
add
cmps
pop
arpl
jns
adc
add
add
add
add
sub
mov
jmp
add
add
or
add
add
in
test
jl
arpl
retf
fbstp
mov
add
(bad)
bound
pop
add
add
xchg
std
ins
test
movs
adc
int3
int3
int3
pop
ret
mov
cmp
aad
xchg
inc
jg
and
gs
pop
loop
mov
adc
add
add
add
std
sahf
mov
inc
inc
(bad)
add
add
icebp
add
add
add
add
add
out
mov
add
add
pop
add
add
jg
pop
push
cmp
aaa
jbe
mov
jecxz
(bad)
mov
cmp
xchg
sbb
xor
add
add
fist
ss
fwait
sldt
add
inc
int3
int3
int3
int3
int3
js
in
imul
pop
pop
mov
pop
jl
nop
nop
nop
nop
nop
lods
xchg
outs
inc
jmp
xor
arpl
int3
in
jns
add
add
sldt
add
dec
repnz
fimul
mov
dec
mov
lds
sub
jle
sti
loope
inc
xchg
daa
js
and
lahf
inc
rol
loopne
cwde
scas
dec
cs
add
add
add
add
ds
or
ja
jl
lea
outs
sub
out
cdq
(bad)
pushf
push
add
add
aad
mov
aad
shr
cmp
out
repnz
addr16
sub
lahf
push
sahf
sub
xor
xchg
arpl
mov
in
mov
and
cmp
(bad)
out
add
add
leave
or
add
add
adc
jmp
cmps
cmps
jae
aam
clc
arpl
add
add
or
add
add
mov
test
in
and
mov
add
add
ret
sbb
aad
(bad)
add
add
add
in
loopne
add
aas
cmp
out
les
mov
test
or
fimul
mov
push
mov
inc
leave
xlat
sub
pop
imul
jp
dec
pop
jle
ss
icebp
or
add
add
add
add
add
ds
mov
mov
cwde
pushf
jno
dec
inc
lock
add
add
add
add
add
dec
dec
out
cmps
push
jno
lods
sbb
lods
test
cmp
movs
cmp
bound
add
add
stos
pop
test
lock
leave
xor
inc
xor
(bad)
in
addr16
pop
jae
pop
(bad)
stos
push
daa
(bad)
int3
int3
int3
int3
jecxz
push
(bad)
jp
xchg
mul
mov
cmp
add
add
add
pushf
pushf
xchg
xchg
inc
shr
pop
in
mov
sahf
push
popa
and
enter
xchg
sub
add
add
(bad)
enter
add
add
add
add
sbb
add
out
add
add
popa
mov
call
fs
out
xor
add
add
xchg
sbb
shl
xor
add
into
das
mov
nop
nop
nop
nop
nop
mov
add
add
add
inc
cdq
sbb
stc
aaa
hlt
dec
adc
add
add
add
adc
and
aas
push
mov
xchg
sbb
test
ds
add
add
add
out
sub
add
and
add
add
loope
pop
cmp
push
or
add
add
add
je
add
add
call
inc
mov
xchg
lods
dec
xchg
data16
fcmove
(bad)
(bad)
mov
add
add
add
add
nop
nop
fistp
cdq
call
sub
out
push
add
add
jmp
xchg
fs
add
add
push
aaa
adc
add
add
stc
pop
rcr
test
add
cli
push
add
add
mov
add
add
jne
push
add
add
add
add
outs
mov
fnstcw
mov
inc
repz
rol
out
mov
out
ins
out
pop
jl
jmp
add
xchg
adc
mov
sub
push
add
add
icebp
sldt
add
mov
fdiv
fst
out
adc
cs
lds
add
add
fimul
add
add
add
add
ins
mov
mov
cwde
push
mov
dec
mov
xchg
xor
sahf
adc
add
add
sbb
add
add
or
add
add
mov
sub
add
ja
jmp
cmp
nop
nop
nop
nop
retf
imul
dec
enter
stc
fisttp
add
add
adc
add
add
outs
mov
mov
adc
add
add
cmp
add
add
pop
in
pop
add
add
int3
int3
int3
int3
int3
cld
adc
add
add
add
in
jmp
stc
xor
xor
cmp
popf
add
add
ds
add
add
add
cli
dec
ins
or
add
add
test
mov
or
mov
sahf
dec
mov
enter
add
add
add
clc
iret
inc
add
add
add
(bad)
rcr
test
mov
int3
int3
int3
int3
mov
add
inc
or
add
add
aas
jl
addr16
popa
push
gs
fistp
push
jle
jle
add
lods
call
add
add
add
dec
ret
aad
dec
jg
icebp
into
jno
ja
jbe
xor
dec
xor
cmp
int
std
xchg
imul
add
cmc
stos
arpl
retf
and
xchg
fcmovb
inc
mov
movs
mov
mov
and
add
int
xor
add
retf
add
add
sbb
pop
inc
daa
in
js
add
add
gs
stos
or
add
add
into
and
add
add
xchg
add
add
adc
add
add
add
add
xlat
aas
and
test
sbb
loopne
mov
add
add
add
add
add
cmp
mov
sbb
sub
mov
add
imul
jecxz
in
and
(bad)
mov
fdivr
popf
adc
add
add
aaa
push
sldt
add
jns
cmp
jge
mov
inc
fld
icebp
sar
add
add
add
add
add
add
add
xchg
add
add
add
add
cmp
add
add
push
int
and
cwde
push
xchg
cmp
icebp
or
add
add
xor
mov
stos
int3
int3
int3
int3
int3
mov
jmp
or
add
add
xor
jecxz
int3
int3
int3
int3
cmps
cwde
push
xor
pop
movs
dec
stos
movs
jg
inc
aad
jl
stc
nop
nop
nop
nop
nop
fld
push
outs
rcl
push
mov
jne
daa
fadd
in
xchg
and
dec
cmp
add
in
or
sub
jno
ja
dec
inc
xor
or
add
add
sbb
clc
xor
add
add
add
xchg
dec
dec
das
mov
push
add
add
inc
add
xchg
(bad)
lahf
mov
add
push
add
into
push
push
inc
icebp
mov
add
int3
int3
int3
int3
int3
jne
jb
jo
test
mov
cmps
ins
movs
pop
cmp
add
test
retf
mov
jnp
dec
dec
jne
add
add
add
mov
outs
repz
dec
sar
rol
add
xor
add
enter
add
add
movs
pop
js
push
add
push
add
add
and
add
hlt
add
add
jmp
xchg
add
add
add
stos
mov
and
and
add
add
xchg
into
std
cmp
and
cmps
popf
mov
mul
dec
and
mov
cmp
int3
int3
int3
int3
gs
mov
or
add
add
and
nop
nop
nop
or
add
add
sahf
inc
mov
xchg
fs
(bad)
push
rcr
xchg
call
inc
push
add
add
ins
ins
aaa
mov
movs
ret
pop
out
mov
mov
in
add
add
xchg
into
lahf
pushf
pop
sub
mov
mov
js
arpl
add
dec
shr
push
call
mov
cmc
shr
add
arpl
add
add
push
in
and
push
div
add
add
cmp
bound
in
loope
out
jg
add
add
sub
fsubrp
pop
jge
dec
pop
fs
mov
and
xchg
push
cmc
bound
inc
inc
arpl
add
add
mov
xor
and
lods
loope
pop
popa
std
pop
fst
add
add
sar
or
adc
add
add
aas
sbb
mov
cmp
xchg
or
add
add
das
int
xchg
(bad)
mov
xor
cmps
fwait
mov
mov
retf
and
xlat
sub
fnstcw
(bad)
mov
dec
cmp
int3
int3
cmp
jmp
scas
push
xchg
cmp
aas
or
add
add
cli
ss
or
add
add
outs
add
add
es
dec
sahf
mov
pop
out
mov
adc
add
push
jmp
ret
out
jbe
xor
jge
xchg
inc
cmp
(bad)
cmp
cdq
mov
vpshufd
retf
jnp
mov
pop
mov
add
add
mov
mov
add
add
daa
pushf
mov
sub
add
add
add
add
xor
icebp
inc
xor
lock
inc
dec
adc
add
add
sbb
push
add
add
movs
sbb
mov
ficomp
nop
nop
sbb
xor
add
add
rol
out
cdq
xchg
cdq
cmc
lea
sahf
out
sub
add
add
pusha
sbb
test
add
shr
pop
jne
fld
cmc
xor
pop
add
add
fmul
sar
(bad)
jnp
cld
xchg
mov
add
add
adc
das
jns
cmp
add
mov
int3
int3
int3
int3
arpl
add
add
mov
pop
xchg
fnstenv
shl
dec
push
(bad)
retf
aad
jge
sub
test
pop
add
add
sub
add
imul
add
sti
jnp
add
add
jo
lahf
mov
cmps
xor
add
add
stos
xor
cld
dec
shl
push
or
add
add
into
ins
call
or
add
add
(bad)
inc
mov
or
cmc
pop
repz
add
add
cmp
add
jno
mov
pop
jp
mov
add
add
add
dec
mov
jge
outs
adc
sldt
add
test
sub
jmp
das
mov
push
stos
out
fisubr
xor
sbb
push
mov
push
add
add
inc
and
push
or
add
add
scas
daa
mov
push
loopne
and
mov
jns
test
add
lods
push
sub
loope
add
add
iret
push
imul
ss
shr
(bad)
xchg
popf
or
pop
add
add
add
or
ror
dec
rol
add
scas
shl
stos
pop
or
add
add
add
add
cmp
in
sti
inc
fadd
sbb
inc
sub
call
add
add
pop
add
fisub
add
add
pop
add
add
gs
ror
test
imul
add
add
mov
(bad)
add
add
fisub
jmp
and
jmp
pop
mov
add
add
add
jae
in
add
add
rcr
push
add
add
add
add
add
or
add
add
cli
sub
add
add
add
inc
jl
je
add
push
hlt
xor
add
mov
cmc
mov
xchg
jle
sub
add
add
mov
and
test
fistp
out
popf
sbb
add
add
sub
stos
mov
hlt
sub
mov
cs
fistp
add
cmps
imul
add
add
and
add
add
cmp
loopne
add
push
pop
cs
sbb
or
leave
pop
mov
mov
pop
sbb
sub
icebp
test
ss
je
lods
inc
(bad)
(bad)
(bad)
xor
mov
add
add
repnz
fs
and
int
mov
pop
enter
lea
hlt
mov
scas
fisub
stos
pusha
xor
add
add
jecxz
jg
nop
nop
nop
nop
fistp
adc
add
add
pop
pop
cmps
loop
mov
and
out
mov
mov
inc
(bad)
lods
push
add
add
jg
rol
add
add
or
jno
inc
sub
add
add
pop
fmul
jmp
add
sub
fcomp
aad
sti
js
cmp
daa
call
mov
xchg
mov
rcr
add
sub
sub
add
add
das
retf
fwait
adc
add
add
inc
sub
add
add
sti
sbb
out
sbb
int3
int3
int3
int3
pop
push
push
and
imul
into
inc
adc
add
add
sbb
jno
cwde
sbb
fs
adc
add
dec
xor
daa
out
out
add
add
xchg
sldt
add
push
ins
leave
test
(bad)
movs
retf
out
xchg
jae
jge
and
retf
add
add
lea
or
add
add
ss
call
int3
int3
int3
int3
int3
stos
cld
arpl
or
and
test
push
add
add
push
jno
add
add
mov
arpl
add
add
lea
int
ret
sub
dec
cmp
and
add
add
add
mov
sbb
retf
in
lods
sahf
xor
or
add
add
add
add
ins
cmp
(bad)
sbb
mov
xor
cmp
xor
inc
fldenv
pop
add
add
mov
or
add
add
xor
add
imul
out
div
fimul
add
add
jae
sbb
sbb
mov
aad
push
cmp
push
push
addr16
mov
lea
int3
call
xor
add
(bad)
(bad)
add
add
sldt
add
pop
or
add
add
into
add
add
add
push
mov
aad
lds
pop
add
add
add
outs
mov
add
add
mov
xchg
mov
fmul
in
iret
sti
push
mov
cld
adc
add
add
add
add
in
pop
mov
mov
jne
add
add
mov
shl
xor
add
add
add
out
add
add
mov
lods
not
cmps
stc
jg
add
add
fadd
add
add
mov
xchg
test
or
add
add
pop
pop
data16
add
add
push
xchg
int
es
fsub
push
aaa
inc
cld
cmp
add
scas
push
lock
cmc
and
add
xchg
add
add
mov
and
jecxz
cmp
xchg
sub
pop
adc
add
add
add
add
add
add
add
cmp
nop
nop
sub
fidivr
mov
add
push
mov
jge
xor
and
add
add
push
mov
sldt
add
retf
pop
lds
cmp
loope
fucomp
mov
jl
(bad)
pop
sbb
add
add
add
jmp
adc
add
add
inc
jle
je
jle
and
push
call
push
add
add
cmp
sbb
jno
dec
push
popa
push
outs
in
mov
rcl
xchg
cdq
retf
stc
or
add
add
pop
cmp
stos
mov
mov
je
(bad)
mov
and
add
add
jnp
fistp
stc
sbb
mov
ret
ins
(bad)
(bad)
mov
inc
xchg
or
test
add
add
iret
pop
and
nop
nop
nop
fnstsw
dec
mov
ffree
and
aad
enter
add
add
add
add
inc
scas
or
add
add
add
add
add
pop
sub
std
mov
sub
add
add
shl
add
add
dec
fisubr
add
jle
xchg
add
add
es
push
add
add
sub
je
lods
xlat
and
gs
push
inc
push
vcvtss2si
and
sbb
inc
inc
xor
mov
xchg
mov
call
scas
ja
test
adc
add
add
scas
adc
add
add
add
xlat
aaa
adc
call
jg
out
xor
adc
mov
push
xlat
sub
cmps
pusha
and
(bad)
add
add
add
mov
mov
pop
add
lock
add
add
add
in
and
or
add
add
add
add
mov
add
add
dec
addr16
or
add
add
shl
cmps
lahf
cmps
stos
loope
sbb
add
mov
add
push
push
sub
add
add
add
add
add
inc
lock
imul
cmps
sbb
es
jae
mov
cmp
xor
add
add
add
adc
add
add
mov
gs
in
jmp
sub
rcr
popa
loope
mov
repnz
jae
rol
sahf
xor
or
add
add
ficomp
loop
cmps
add
add
ja
test
mov
add
arpl
add
add
add
add
add
add
and
sub
adc
add
add
cmp
es
test
add
add
add
push
into
push
add
jno
loopne
xor
rcl
inc
pop
shr
add
xlat
in
mov
push
push
xchg
pop
push
mov
cmp
add
add
scas
mov
add
add
dec
xchg
loopne
call
inc
scas
add
add
add
sbb
sar
push
mul
add
iret
mov
into
add
add
add
add
add
call
jno
mov
stos
cmp
fcomp
popa
jmp
pusha
pushf
dec
(bad)
sti
add
add
add
add
add
jae
cmps
pop
and
xchg
test
add
add
add
popf
xchg
mov
leave
jnp
outs
sldt
add
ins
cmps
inc
std
and
nop
nop
nop
nop
nop
aam
test
add
cwde
jg
add
add
bound
addr16
pop
fwait
xchg
add
add
add
or
add
add
rcr
in
scas
test
add
add
sbb
add
add
jno
retf
xchg
stos
mov
sbb
jmp
mov
nop
nop
nop
nop
pop
or
add
add
(bad)
adc
add
add
dec
sub
sub
lods
and
bound
xor
mov
mov
jmp
mov
xor
mov
xor
add
cmp
add
jge
test
sti
es
gs
mov
sbb
retf
add
add
add
add
and
mov
cli
test
xor
jno
mov
cmp
and
add
push
mov
jp
fst
mov
shr
xor
jno
ret
call
fcom
sub
add
add
push
jecxz
xlat
cmp
add
add
inc
push
ror
add
add
add
add
imul
add
add
mov
sldt
add
pop
inc
cmp
test
call
ins
sbb
and
loopne
mov
xchg
sbb
add
add
sub
pop
xlat
or
add
add
push
lds
dec
cs
add
add
add
enter
adc
adc
les
add
add
lds
dec
push
pop
xchg
xchg
imul
add
sbb
xchg
xchg
in
das
das
push
mov
sbb
add
add
and
push
cmp
(bad)
xor
add
add
add
arpl
cld
lahf
out
sub
in
mov
jmp
add
add
push
push
add
add
xor
jo
mov
pop
pop
lock
mov
(bad)
ficomp
add
inc
fs
sbb
pop
fnsave
sub
mov
cmp
add
add
add
add
add
out
in
cmp
jno
xchg
jg
push
ret
push
jge
shr
mov
xor
(bad)
fmul
add
add
mov
scas
pop
mov
lods
int3
int3
int3
int3
int3
je
adc
add
add
xchg
(bad)
xor
test
add
xchg
jmp
cli
addr16
in
jmp
aam
add
add
jae
xchg
scas
mov
add
jns
test
jns
lods
test
je
cmps
in
arpl
ror
sbb
xchg
pop
sbb
add
lahf
dec
jne
ss
adc
pop
inc
movs
dec
jne
call
add
add
mov
das
in
fld
mov
push
add
add
adc
add
add
jbe
and
nop
nop
movs
sub
jg
nop
add
add
add
call
imul
push
repnz
add
add
(bad)
jp
pop
sub
sub
fadd
add
cmp
cmp
(bad)
jae
stos
sub
inc
dec
push
and
call
jl
fcom
jg
(bad)
fbstp
scas
movs
cmp
mov
xchg
sub
cs
add
add
add
xor
add
add
les
jmp
retf
movs
push
xchg
retf
movs
sbb
nop
nop
nop
bound
add
add
jbe
mov
les
sub
fldcw
int3
int3
int3
int3
jmp
inc
xor
ror
and
fcmovb
mov
idiv
xchg
clc
sti
xor
sbb
add
add
outs
test
and
cmps
inc
push
or
add
add
popa
push
add
add
cmp
add
add
add
add
add
cs
aam
jnp
add
add
ins
or
add
add
std
cmp
loop
cmp
das
sbb
jo
sub
test
push
add
add
cmp
scas
lock
add
add
shr
add
add
inc
daa
or
add
add
xlat
add
add
add
mov
add
adc
add
add
or
add
add
inc
mov
mov
jecxz
add
add
and
mov
test
sbb
movs
xchg
or
stos
shl
lahf
push
stos
jbe
out
movs
add
add
jbe
jmp
in
push
add
add
mov
sbb
cs
mov
bound
add
add
aas
enter
add
add
add
add
push
add
add
push
add
add
in
ror
sbb
sbb
cmps
jle
sub
push
test
imul
xor
jns
mov
lea
add
add
jne
add
dec
fimul
add
add
pop
call
sbb
loop
add
add
fwait
out
call
retf
popa
mov
add
add
add
mov
repnz
add
add
adc
add
add
(bad)
add
add
cmp
mov
das
bound
add
xchg
add
add
mov
push
lea
add
mov
mov
sub
add
add
add
jne
jo
mov
mov
xor
dec
cmp
aas
cmp
pop
add
jl
push
jns
std
or
add
add
add
add
cmp
jne
sub
add
mov
ja
push
pop
add
add
and
mov
pushf
bnd
iret
and
add
imul
add
mov
mov
jne
js
js
xchg
(bad)
pop
(bad)
sbb
add
add
mov
xchg
xchg
pop
xchg
clc
outs
jne
loop
mov
add
add
pop
push
test
out
out
sub
push
out
ret
lahf
loope
push
shl
in
add
add
sldt
add
pushf
ret
dec
jbe
dec
cmp
stos
adc
add
add
test
add
dec
adc
add
add
movs
dec
pop
sub
test
jg
sub
outs
loopne
stc
push
dec
dec
rol
add
add
add
fs
ja
or
add
add
push
push
mov
test
(bad)
pop
loop
adc
add
add
lds
gs
loope
inc
add
lods
inc
lahf
scas
add
(bad)
loop
or
add
add
xchg
and
xor
pusha
sbb
add
add
mov
sub
pushf
fidivr
outs
mov
push
mov
add
dec
das
in
cmps
push
test
add
add
add
add
pop
add
add
xchg
add
add
add
sbb
add
add
sar
and
cmp
xchg
add
mov
mov
adc
add
add
cli
ins
aaa
and
out
mov
add
add
ret
neg
add
add
add
in
fidivr
lahf
popf
dec
test
xchg
pop
add
add
jb
add
add
(bad)
mov
add
add
xchg
jecxz
xor
add
add
add
add
cmp
inc
add
add
out
adc
add
add
add
add
adc
add
add
add
add
xor
pop
add
add
add
data16
mov
mov
mov
loopne
adc
add
add
mov
mov
sar
bound
add
add
mov
add
call
add
jl
fistp
in
fld
add
push
add
add
add
imul
and
add
add
je
jnp
fild
stos
call
jbe
(bad)
inc
add
pusha
adc
add
add
mov
sbb
or
add
add
mov
add
jl
pop
mov
jnp
sbb
cmc
push
repnz
pop
inc
mov
js
adc
add
add
(bad)
or
loop
cmp
cmp
mov
add
add
inc
ror
fldcw
jmp
cli
sub
add
add
add
xchg
add
add
adc
stos
fdivr
ss
leave
mov
push
xchg
in
or
sub
add
add
add
add
(bad)
cwde
(bad)
arpl
cld
out
add
add
add
fdivr
add
add
loope
inc
mov
jbe
add
add
daa
dec
fild
add
add
lds
mov
mov
cmp
jnp
mov
iret
pop
mov
mov
sub
iret
add
add
int3
int3
int3
loopne
add
add
ss
out
mov
cmp
add
imul
div
out
add
add
cmp
lock
jecxz
xlat
stc
xchg
pop
sub
inc
(bad)
ds
or
add
add
or
add
add
inc
push
dec
pop
mov
mov
cmp
add
add
fstp
mov
je
push
je
inc
(bad)
or
add
add
add
fild
add
add
cdq
dec
pop
xor
adc
add
add
sub
add
add
add
add
arpl
cmp
ret
and
add
pusha
push
mov
add
add
push
add
add
add
shr
jle
push
ins
or
add
add
ficom
add
add
int3
int3
int3
int3
jg
add
add
mov
add
add
jno
int3
int3
int3
int3
int3
cmp
pop
add
add
or
add
add
add
add
xlat
lds
add
add
add
or
test
sldt
add
mov
add
add
add
sahf
push
cli
fwait
sub
mov
and
add
dec
fadd
add
add
inc
jae
add
add
add
pusha
jbe
cmps
call
sbb
in
dec
xchg
les
add
mov
inc
clc
icebp
adc
add
add
fdivrp
cmps
mov
add
add
outs
dec
mov
(bad)
sbb
adc
xor
bound
fcomp
adc
add
add
add
add
and
pop
mov
push
repnz
add
add
add
add
or
add
add
and
inc
in
cld
imul
repz
push
test
sub
test
add
add
mov
arpl
adc
add
add
adc
add
add
push
fnsave
inc
xchg
push
call
add
add
add
fwait
lahf
and
sar
outs
sbb
push
push
aas
xor
xchg
in
cli
sbb
xchg
fist
or
sub
add
add
add
add
add
mov
xchg
popa
out
sar
mov
fwait
loopne
inc
in
mov
int
imul
sbb
add
into
xchg
cmp
add
add
je
mov
add
add
adc
add
add
xor
add
les
ds
xchg
pop
push
fs
test
and
inc
movs
pop
mov
ficom
cmps
stos
sbb
add
add
dec
repz
mov
adc
add
add
mov
cli
dec
push
pop
push
push
add
pop
imul
add
add
cmc
mov
pop
inc
lahf
retf
shl
or
add
add
adc
add
add
mov
(bad)
jae
mov
test
jmp
loop
add
add
push
pop
add
add
les
pop
pop
xor
add
and
mov
rcl
add
add
xchg
jle
jge
add
add
jb
or
add
add
add
add
pop
loope
add
add
scas
sub
xor
pop
neg
add
add
add
jmpw
add
fdivr
loop
xchg
into
dec
pop
popa
mov
lds
add
add
push
ret
jo
mov
jg
push
add
add
rol
es
jge
mov
add
add
mov
or
add
add
popa
mov
xlat
mov
mov
bound
pop
add
add
push
jg
pop
cld
push
adc
add
mov
sub
movs
push
add
add
into
mov
jno
xor
mov
mov
mov
je
icebp
rcl
add
add
add
cmc
cmp
and
jmp
jmp
jp
xor
push
lods
xlat
out
cmp
sti
es
push
pop
add
add
not
dec
sbb
jb
xor
and
pop
mov
add
add
add
add
and
xchg
or
add
add
je
add
add
add
add
aaa
fucomi
icebp
add
add
mov
ret
add
add
xchg
adc
add
add
pop
jle
jmp
add
add
jnp
or
add
add
fld
jg
rcl
mov
add
add
inc
sbb
in
pop
inc
ins
or
rol
add
nop
nop
nop
cmp
in
std
fs
stos
mov
xor
add
cld
test
imul
push
push
aam
movs
in
ins
add
add
add
nop
jg
lock
and
test
inc
jnp
ror
int3
int3
int3
int3
movs
add
add
add
add
retf
retf
call
lea
mov
mov
or
add
add
jmp
add
cmp
cmp
add
add
cmp
cmc
sbb
int3
int3
int3
int3
int3
mov
jmp
jl
push
add
add
in
lock
pop
push
daa
mov
inc
fidivr
sub
add
add
jg
and
or
add
add
add
xor
and
out
mov
aas
pop
cmp
cmp
mov
jmp
add
pop
add
add
loope
adc
add
add
mov
pop
ds
xchg
rcr
xor
add
add
lods
jecxz
adc
add
add
add
add
add
or
add
add
arpl
xlat
xchg
sbb
call
add
add
add
int
dec
mov
clc
pusha
sbb
xchg
mov
jmp
push
add
add
jmp
add
add
je
daa
mov
add
add
and
cmp
add
add
or
add
add
sub
add
stos
scas
xchg
xchg
sub
sub
add
add
add
xchg
outs
out
sbb
rol
add
add
add
fdivp
push
and
or
pop
mov
cmp
imul
cs
add
add
add
add
add
dec
shl
out
int
inc
enter
sub
pushf
les
adc
mov
in
add
add
or
add
add
sbb
mov
push
add
add
xor
mov
add
add
add
jo
enter
add
add
mov
test
ins
dec
into
xchg
icebp
sbb
sub
aas
js
cld
mov
mov
or
lods
aad
or
add
add
xchg
push
add
add
retf
test
dec
pop
xchg
cmp
add
add
push
iret
cli
in
in
cmp
adc
add
add
add
add
xchg
shr
mov
out
push
stc
or
add
add
fld
add
add
cmps
mov
mov
mov
xchg
mov
in
ror
or
add
add
mov
test
das
push
add
add
jle
pop
jae
pop
mov
cmp
add
add
add
add
daa
jmp
push
nop
nop
nop
nop
nop
cmc
(bad)
rol
retf
pop
xlat
or
add
add
bound
add
add
add
jge
fld
add
add
add
mov
nop
nop
nop
nop
jmp
mov
fwait
or
add
add
call
add
add
add
shl
cmp
add
lds
dec
movs
dec
sub
jae
push
ins
movs
mov
xor
cmp
int3
int3
int3
(bad)
or
xor
ja
adc
cmp
sbb
fwait
and
add
shl
add
loopne
gs
or
add
add
fcmovnu
xchg
mov
xchg
(bad)
mov
adc
add
add
dec
dec
or
add
add
pop
pop
and
add
add
jmp
out
ins
mov
out
in
xchg
sbb
or
add
add
dec
jg
xlat
ret
or
add
add
add
neg
loopne
jl
sbb
or
inc
stos
add
add
add
dec
(bad)
bound
add
xchg
aam
in
or
cmp
sub
not
lahf
adc
add
add
inc
lods
rol
add
aam
add
add
fld
add
add
cmp
std
mov
rcr
add
stc
add
add
add
add
add
(bad)
pop
es
outs
or
xchg
sub
jmp
and
or
add
add
add
add
mov
push
mov
sbb
inc
or
add
add
test
add
add
in
test
jo
pop
popf
mov
mov
nop
nop
nop
nop
into
icebp
popa
mov
or
add
add
mov
and
add
add
add
add
add
cmp
das
ins
clc
stos
sldt
add
mov
jne
jno
lahf
sahf
dec
jl
sahf
xor
mov
into
call
add
fstp
add
or
add
add
push
ret
sub
out
inc
add
add
add
dec
dec
cwde
xchg
and
adc
mov
popa
hlt
repnz
add
add
pop
xor
out
cwde
and
out
mov
fiadd
add
add
stc
adc
add
add
mov
add
lods
fwait
sub
add
add
and
scas
jmp
mov
in
int
add
(bad)
adc
add
add
hlt
jmp
mov
inc
mov
add
add
in
aas
push
push
jb
cmp
fwait
mov
ficom
sbb
inc
idiv
popa
leave
adc
sub
adc
add
add
(bad)
xor
mov
std
push
mov
pop
int
out
int3
int3
int3
int3
retf
cmp
add
add
mov
add
add
inc
ja
jg
and
add
add
xor
sub
add
add
mov
out
mov
jecxz
sldt
add
mov
push
push
pop
pop
xlat
imul
fadd
add
retf
icebp
das
(bad)
rcl
inc
push
xchg
pop
sahf
mov
in
xor
out
add
add
mov
fnstenv
fs
inc
stc
adc
add
add
jo
mov
mov
jno
and
adc
add
mov
xchg
sub
gs
add
lock
push
cmp
adc
add
add
imul
mov
add
mov
mov
gs
retf
and
add
hlt
into
and
jae
mov
inc
loope
adc
add
add
jae
jge
int3
int3
int3
int3
sbb
and
jnp
addr16
scas
daa
out
pop
inc
ror
and
sbb
mov
daa
dec
mov
rcr
xor
outs
(bad)
or
add
add
int3
int3
int3
int3
push
sldt
add
movs
jnp
cmp
inc
sbb
add
cwde
js
jbe
enter
add
es
out
into
mov
popa
rcl
cdq
ja
sbb
dec
adc
add
add
jge
cmp
jg
dec
sldt
add
or
add
add
repz
push
ret
xchg
xchg
out
push
jmp
and
jbe
loope
aaa
push
sbb
call
pusha
aad
add
add
adc
add
add
cwde
mov
add
sbb
retf
(bad)
icebp
inc
xor
inc
push
sbb
sahf
fnstsw
jbe
imul
lahf
outs
jbe
dec
mov
add
add
add
cli
xchg
out
das
and
dec
bound
int3
and
sub
pop
js
add
add
adc
add
add
test
lock
dec
cmc
pop
add
add
jg
dec
xchg
out
clc
dec
dec
sbb
out
rol
(bad)
aad
add
add
lds
mov
js
add
add
iret
jge
add
add
mov
dec
cdq
jmp
adc
add
add
mov
cwde
mov
jo
adc
add
add
add
add
mov
mov
mov
add
mov
popa
scas
scas
xchg
add
rcl
add
push
mov
aaa
outs
xchg
mov
aad
sti
mov
mov
aam
add
add
jmp
sahf
ror
add
add
scas
sub
jl
popf
cmp
loopne
clc
aad
mov
add
add
xchg
sbb
add
je
idiv
and
imul
add
add
fadd
push
add
add
loopne
cmp
jbe
pop
add
add
add
or
add
add
pop
add
fild
push
shl
add
add
js
das
test
mov
mov
adc
add
add
jmp
jns
xor
dec
test
js
add
add
adc
add
add
add
add
sahf
and
rol
add
add
ds
xchg
fs
pop
ins
fistp
out
aas
jnp
frndint
cs
add
add
push
lds
add
add
jne
cmp
shl
push
push
sub
xor
ret
movs
sldt
add
sbb
sub
inc
jmp
mov
mov
and
pop
sub
loop
add
mov
je
add
add
add
add
add
add
das
inc
sldt
add
sldt
add
nop
nop
nop
nop
nop
jmp
add
repnz
xchg
rol
rcr
add
add
add
add
add
push
fisub
bound
add
add
xchg
add
add
mov
in
fwait
push
push
add
add
je
ret
into
in
mov
add
add
popa
push
test
lds
sldt
add
xchg
out
sldt
add
xchg
add
add
add
add
add
cmp
cs
stos
repz
pop
lahf
in
jbe
xchg
retf
push
add
add
(bad)
xchg
rcr
addr16
add
add
dec
pop
adc
add
add
loop
sub
and
sub
retf
adc
jg
int
mov
add
(bad)
shl
fbld
lods
pop
cld
sbb
popa
push
adc
add
add
add
add
aaa
js
pop
arpl
retf
pop
lods
ret
sub
or
neg
push
xchg
cmps
ds
sbb
sub
sub
sar
or
add
add
add
add
or
add
add
fwait
add
add
add
push
sbb
push
dec
inc
xchg
sub
fidivr
mov
add
add
add
sub
add
and
add
add
idiv
scas
fwait
mov
and
ficom
out
in
sbb
out
add
add
enter
mov
push
rol
add
jmp
xchg
je
test
jle
fdiv
iret
aam
add
add
adc
add
add
add
add
add
add
add
lahf
cmps
mov
call
inc
mov
pop
in
mov
sub
and
mov
inc
ds
adc
add
add
int3
int3
int3
int3
(bad)
call
jecxz
pop
cmc
jo
sub
int3
int3
int3
inc
sub
fisttp
add
mov
rcr
lea
xchg
sub
add
or
add
add
call
inc
sbb
jo
or
add
add
ins
out
bnd
int3
int3
int3
int3
jecxz
xchg
rcr
add
iret
cmp
add
add
adc
add
add
add
add
jg
enter
adc
add
add
add
add
add
add
add
scas
jge
cmp
dec
(bad)
daa
mov
call
dec
call
data16
add
shl
cmp
fwait
xor
rcl
cmp
add
add
push
pushf
mov
cmc
(bad)
rcl
sbb
std
std
retf
mov
adc
and
bound
add
dec
cmp
pop
pop
movs
lahf
xchg
adc
add
add
aad
mov
stc
jns
add
add
add
and
rol
add
xlat
cmp
add
push
push
jbe
data16
cmps
hlt
add
add
add
adc
cmc
xor
add
out
xchg
fdiv
add
add
loope
fwait
add
add
add
out
icebp
and
sub
add
add
movs
inc
mov
adc
add
add
add
add
mov
fs
ror
sub
mov
mov
jp
add
cmp
sbb
xchg
(bad)
out
push
cmp
xchg
(bad)
sub
in
retf
lock
sub
add
add
pusha
pop
or
in
mov
ja
cmp
out
jge
(bad)
push
or
push
and
add
retf
and
shr
add
add
add
js
jmp
fwait
xchg
jg
add
add
add
add
add
inc
(bad)
push
in
or
dec
mov
add
stos
lock
dec
aaa
cmp
movs
adc
add
add
rcl
add
xchg
mov
pop
push
inc
imul
jmp
or
add
add
pop
pop
mov
jns
out
(bad)
leave
ins
dec
lods
mov
ins
add
add
add
push
add
add
aad
(bad)
rcl
(bad)
outs
aas
mov
dec
cmp
dec
pushf
xor
pop
sbb
cmps
mov
or
mov
push
xor
repz
iret
mov
jg
rcl
push
add
sbb
or
add
add
and
add
add
add
add
scas
in
ficomp
cmp
(bad)
mov
add
add
xor
mov
test
add
aad
int
popa
xor
xor
add
sub
fsub
icebp
mul
out
stos
xchg
outs
ficomp
mov
scas
xor
fdivp
cmps
(bad)
xor
jg
arpl
mov
dec
adc
add
add
call
jns
lods
and
sub
and
dec
retf
rcl
sahf
or
add
add
inc
jae
aas
mov
add
add
xchg
and
cwde
aam
daa
inc
add
mov
mov
ror
cdq
pop
aas
test
mov
add
add
fdivr
add
jp
mov
inc
sbb
daa
ja
movs
and
mul
inc
or
mov
jno
mov
pop
(bad)
movs
ss
pop
imul
iret
xchg
adc
add
add
sbb
dec
dec
dec
std
mov
mov
into
xor
add
add
add
add
xchg
jo
int3
int3
int3
int3
int3
sbb
add
add
rcl
imul
je
fcmovnu
fisub
lods
aaa
jne
outs
out
(bad)
pushf
movs
loop
js
dec
push
mov
sub
cmp
push
aad
xor
cmp
dec
or
pop
(bad)
mov
dec
push
mov
pop
fisubr
mov
lock
push
add
add
adc
add
add
jnp
movs
jo
mov
add
ss
xchg
jl
jge
mov
outs
push
add
add
add
test
add
add
dec
and
into
mov
frstor
add
dec
cmp
jl
mov
add
leave
sbb
fwait
sub
mov
cwde
and
adc
add
add
nop
nop
nop
nop
or
add
add
mov
out
retf
out
mov
repnz
xchg
inc
shr
or
add
add
or
add
add
cmp
push
and
or
add
add
iret
hlt
mov
test
dec
jmp
(bad)
inc
sbb
xor
mov
add
add
add
std
inc
sub
shl
add
xchg
out
daa
clc
inc
jo
leave
add
add
add
add
jb
add
add
ins
popf
stos
mov
icebp
jge
ret
mov
bnd
mov
fs
mov
jo
lods
mov
add
add
xchg
adc
add
add
add
add
lock
jb
sbb
jb
out
dec
sbb
push
add
add
jns
test
add
add
add
pop
lock
mov
jbe
add
add
mov
adc
add
add
xor
add
add
add
add
add
add
add
add
add
add
add
cld
dec
cmp
lods
or
add
add
int3
int3
int3
int3
int3
aas
adc
add
add
add
test
clc
fisubr
or
ret
or
add
add
add
sub
add
add
add
push
cli
les
enter
sbb
pop
inc
xor
icebp
(bad)
pop
pop
mov
add
add
aas
popa
jne
add
pop
push
das
scas
das
(bad)
and
add
js
xlat
cmps
les
jnp
shl
shl
rcl
aaa
jnp
fsubr
or
add
add
nop
nop
nop
nop
nop
xchg
add
add
add
sbb
retf
push
repz
ret
outs
or
jae
imul
xor
add
add
sub
enter
add
or
add
add
push
loope
jg
push
dec
stos
jecxz
add
add
push
xchg
add
fstp
lea
inc
sub
jmp
pop
push
add
add
jmp
cmps
rcl
mov
pop
daa
dec
shl
cmps
lahf
sbb
cmp
xor
lahf
adc
add
add
add
add
stos
cli
cmp
scas
dec
repz
add
xlat
int3
int3
int3
int3
int3
imul
add
add
jnp
mov
ja
push
add
add
lahf
cmp
pop
sbb
dec
push
add
add
or
xchg
cld
add
add
add
adc
add
add
cmps
imul
add
add
cmp
sti
imul
mov
adc
add
add
mov
add
add
lea
mov
hlt
push
jbe
cmp
add
xchg
add
add
inc
dec
sub
add
inc
clc
cmp
dec
xchg
pop
nop
nop
nop
nop
nop
cli
sahf
dec
loop
add
add
icebp
jmp
mov
inc
cmps
enter
ja
ds
out
in
ins
jle
push
div
xchg
mov
add
add
xchg
xchg
sub
mov
js
ja
stos
mov
inc
inc
or
sub
cmp
fstp
cmp
mov
add
sub
and
add
add
add
add
stos
pop
mov
jmp
leave
retf
sub
add
push
(bad)
sbb
add
add
jmp
je
push
push
cmps
push
push
int3
pop
pusha
test
loope
add
and
aad
retf
add
mov
xchg
jae
mov
add
add
shl
arpl
jae
add
add
adc
push
add
add
xlat
movs
add
add
add
mov
inc
popf
push
test
add
add
ror
ret
add
add
add
add
add
add
add
add
add
add
add
nop
nop
nop
nop
nop
mov
in
mov
adc
add
add
pop
xor
lods
xor
sbb
add
loopne
push
lea
stc
jbe
sbb
cld
sub
add
add
cld
xor
shl
or
add
add
mov
add
add
add
add
add
ins
aad
add
add
aaa
mov
add
xchg
sub
mul
add
mov
inc
ficomp
mov
adc
add
add
add
add
jns
imul
aam
into
add
add
add
mov
fbld
add
add
int
inc
push
movs
pop
add
add
xor
(bad)
mov
mov
int3
int3
int3
mov
std
add
add
out
and
push
daa
mov
inc
xor
dec
jmp
cmp
add
add
add
add
add
cld
pop
sti
xchg
es
pop
test
out
in
mov
iret
loop
rcl
add
add
push
fmul
xchg
add
add
mov
add
mov
and
shl
pop
sub
adc
sub
mov
gs
or
add
add
fcomp
scas
mov
cmp
add
add
ror
in
fwait
or
add
add
add
add
dec
add
add
add
sbb
scas
add
add
daa
push
nop
nop
nop
nop
nop
jno
adc
add
add
popf
push
aad
add
ret
scas
nop
nop
nop
nop
nop
pop
test
add
add
js
add
add
in
lahf
add
add
add
(bad)
pop
sbb
add
add
mov
add
add
add
add
cmp
add
fnsave
pop
sbb
fistp
or
stos
mov
add
add
xor
add
xchg
shl
shl
nop
nop
nop
add
add
add
pop
(bad)
jbe
out
loope
add
add
xor
retf
push
xor
add
add
sbb
inc
cmp
dec
sahf
sub
inc
push
add
add
cmp
add
add
out
(bad)
out
mov
push
mov
add
dec
pop
out
lock
xlat
outs
push
add
add
pop
dec
jo
inc
or
push
pop
add
add
popf
push
adc
add
add
and
add
add
jns
mov
fisubr
aam
add
add
scas
pusha
cdq
jle
les
(bad)
cmp
or
add
add
add
adc
add
add
lahf
inc
dec
mov
dec
(bad)
rcr
add
addr16
add
add
stos
mov
jbe
jmp
les
pop
hlt
mov
add
add
add
sbb
sub
mov
pop
add
add
aas
cmp
xor
sub
add
jbe
add
add
cld
adc
add
add
in
ret
shl
mov
or
cmp
imul
mov
add
add
add
add
add
hlt
je
(bad)
(bad)
jl
addr16
cs
xchg
cmp
scas
retf
jg
xchg
lea
loopne
js
add
mov
(bad)
mov
stos
jg
div
pop
cmp
add
add
push
jne
cli
shr
retf
add
add
aaa
cli
add
add
add
sub
push
cmc
aaa
inc
test
test
and
jg
jmp
xchg
and
cmp
test
pushf
aaa
ds
cmp
add
add
and
je
call
(bad)
push
cmp
cli
div
push
mov
mov
xchg
rol
loopne
mov
rcl
call
push
lea
add
gs
stos
mov
add
add
repnz
fisub
mov
mov
mov
pop
jno
movs
fcom
add
add
or
add
add
retf
mov
(bad)
shl
adc
add
add
sldt
add
lahf
aam
loope
outs
add
add
lods
or
add
add
rol
add
add
push
test
add
add
add
gs
pop
sahf
fimul
ficomp
add
add
add
std
adc
add
add
push
mov
mov
sub
dec
icebp
or
add
add
fst
mov
dec
sbb
es
mov
int3
int3
int3
int3
int3
sbb
mov
inc
sbb
xchg
inc
js
mov
inc
pop
pop
jae
retf
mov
cs
add
add
add
mov
sti
sub
sldt
add
fiadd
pushf
xchg
es
push
cli
adc
add
add
fcmove
xlat
adc
add
add
ror
add
add
xchg
and
or
shl
push
push
rcl
ins
xchg
stc
cmp
add
add
xchg
push
add
add
and
call
inc
xor
loope
sahf
int
cwde
pop
(bad)
inc
aaa
and
sub
add
add
ret
jmp
adc
add
add
add
mov
jo
pop
or
add
add
int
int
cli
add
add
push
push
ds
jmp
ret
jge
push
rcr
adc
add
add
test
enter
add
add
pop
enter
add
add
shr
idiv
push
pop
or
add
add
pushf
ins
in
dec
jbe
inc
cmp
push
add
add
leave
mov
add
add
fidivr
jle
fldcw
add
add
out
lahf
sub
(bad)
jmp
out
mov
dec
cli
jp
mov
ds
push
and
stos
mov
xchg
push
shl
nop
leave
jnp
add
add
pop
sub
retf
call
icebp
push
add
add
mov
cli
or
add
add
loop
in
and
push
add
add
test
push
sub
inc
jmp
xchg
ret
std
xor
and
aas
scas
mov
int3
int3
int3
int3
int3
(bad)
mov
inc
adc
add
or
or
add
add
add
ror
push
add
add
xor
rol
add
or
add
add
mov
imul
fstp
fcomp
push
cmps
cmps
aaa
mov
add
add
jnp
mov
add
add
push
push
ficomp
daa
pop
sldt
add
xchg
stc
rcr
jne
sub
add
add
repnz
push
pop
sldt
add
das
xchg
mov
add
add
or
add
add
fist
dec
and
add
add
dec
xchg
(bad)
arpl
(bad)
adc
add
add
add
retf
xchg
add
add
add
sbb
mov
loope
outs
or
add
add
xchg
lock
sub
scas
fist
add
add
pop
pop
sbb
nop
nop
nop
nop
nop
dec
in
pop
pop
jp
dec
push
jle
lods
movs
mov
add
add
add
add
stc
sbb
jp
sbb
fsub
cli
aad
outs
vxorps
adc
add
add
and
test
inc
add
add
add
je
sub
xor
pop
add
add
icebp
cmp
mov
sub
jl
stos
lock
adc
add
add
add
add
add
add
in
xchg
popf
jmp
sbb
xchg
jg
xor
add
add
test
xlat
adc
add
add
lea
jg
add
add
add
cmp
sub
mov
js
and
cmp
mov
cmps
jb
jge
mov
test
add
add
add
add
cmp
movs
jl
test
add
add
or
add
add
mov
xor
add
add
add
fcomp
ror
add
jmp
cmc
push
loopne
loope
(bad)
out
ror
inc
cmps
sbb
add
add
sub
gs
lods
lea
fcomp
pushw
in
cmp
xchg
pop
add
add
dec
scas
push
xchg
or
add
add
ficomp
sbb
mov
sub
mov
add
pop
(bad)
inc
call
mov
bound
shl
add
add
fs
sbb
add
add
add
add
add
in
jl
ss
jno
or
add
add
and
(bad)
pop
xlat
ds
add
add
pop
imul
aas
push
mov
and
mov
rcr
push
and
(bad)
cmp
or
add
add
int
add
add
fadd
sahf
bound
lock
sbb
pop
dec
sub
add
add
dec
lds
pop
dec
jp
popa
test
out
ficomp
cmp
test
sbb
je
fistp
xchg
jns
add
add
pop
add
add
pop
sbb
test
adc
add
add
mov
add
add
add
inc
inc
jge
adc
add
add
jecxz
in
out
arpl
add
add
dec
sbb
or
dec
inc
(bad)
or
add
add
inc
mov
sub
pushf
(bad)
xchg
aas
push
mov
inc
cmps
dec
popf
out
pop
scas
popf
xchg
sbb
pop
jns
push
mov
mov
xchg
add
hlt
xchg
add
add
add
add
add
ins
xchg
cmp
sbb
add
add
aad
add
add
mov
add
add
rcr
(bad)
adc
add
add
aad
or
add
add
push
xchg
out
repz
jno
fldenv
imul
add
add
(bad)
int3
int3
int3
int3
int3
push
add
add
shl
retf
push
mov
stos
sub
mov
les
call
xchg
jb
sbb
push
add
add
mov
inc
in
sbb
outs
faddp
sbb
(bad)
mov
(bad)
xchg
lds
sahf
clc
stos
into
sbb
add
add
add
xchg
ret
inc
call
js
mov
inc
ret
sti
out
aad
add
add
outs
or
jg
sub
and
std
and
add
add
lea
add
add
and
add
and
and
sub
add
call
add
add
add
fsubr
inc
push
jge
cmp
out
mov
sbb
dec
xchg
loope
xchg
pusha
and
add
add
les
xor
add
add
frstor
xchg
jns
add
add
push
add
(bad)
mov
loop
pop
add
add
inc
push
cmp
test
call
dec
inc
mov
pop
sub
dec
arpl
popf
ins
pop
add
add
push
mov
imul
sub
outs
je
adc
add
add
pop
xor
scas
mov
jecxz
xchg
xchg
mov
nop
nop
nop
nop
nop
sti
push
in
movs
dec
outs
cmp
add
add
dec
pushf
xor
test
add
add
add
mov
mov
add
add
add
push
popa
push
or
add
add
cmp
jmp
jmp
fild
add
add
jecxz
adc
add
add
sbb
add
jmp
push
cmps
cmps
inc
mov
mov
bound
into
fdivr
add
add
int3
int3
int3
int3
int3
fiadd
daa
pusha
cmps
lahf
shl
pop
cmp
add
add
add
jecxz
in
cmps
ds
push
xchg
mov
and
pop
add
add
xor
lea
add
jno
adc
add
fdivr
imul
add
add
add
cmp
mov
xchg
fcomip
test
aad
mov
jge
add
add
dec
mov
jns
pop
sub
cli
scas
dec
xchg
nop
nop
nop
nop
nop
mov
inc
and
cwde
call
mov
cmps
in
jb
add
add
fistp
call
jae
fidiv
pop
idiv
and
outs
ror
call
cmps
push
adc
add
add
jo
cld
push
dec
and
hlt
push
gs
xor
mov
jge
mov
stos
or
add
add
lea
popa
or
add
add
jae
push
add
add
jb
addr16
sub
sub
ret
xchg
ds
sahf
aam
stc
sbb
add
sti
add
add
or
add
add
sbb
add
add
pop
shr
bound
dec
mov
lods
or
add
add
mov
pop
movs
aas
pop
movs
fistp
inc
ret
mov
ret
jne
dec
push
push
repz
repz
mov
add
pop
bound
add
add
(bad)
call
sbb
add
add
add
and
sub
lock
dec
xor
add
add
test
mov
cmp
loop
sbb
retf
daa
sbb
xchg
push
movs
in
pop
scas
and
sbb
test
or
cs
add
add
add
add
adc
out
add
add
add
jle
cld
add
add
xor
add
pop
or
add
add
add
add
cs
out
sub
add
test
jge
dec
cdq
ins
lock
mov
add
add
movs
cdq
mov
leave
xor
add
add
add
cdq
dec
and
repz
push
jae
mov
fisttp
mov
and
mov
cmp
mov
pop
les
inc
xor
mov
pop
add
add
mov
xor
aas
or
add
add
dec
push
fs
ins
xchg
pop
ins
scas
or
add
add
xor
in
xchg
push
call
push
sbb
hlt
lea
dec
sbb
adc
add
add
fwait
jns
push
mov
add
dec
add
add
add
add
(bad)
fwait
add
add
add
jp
sub
add
add
mov
dec
jg
jmp
mov
stos
bound
add
add
add
retf
std
xchg
sti
pop
test
mov
data16
adc
add
add
mov
sbb
loope
jbe
cmps
pop
xchg
add
popa
jp
lea
add
add
inc
aas
stc
test
add
add
and
jo
add
add
add
fldenv
add
xchg
xor
add
add
sbb
repnz
div
adc
add
add
sbb
add
add
sbb
add
add
add
xor
sbb
pop
mov
jl
scas
test
add
add
push
cmp
cmps
adc
add
add
add
add
mov
add
add
test
xor
add
std
test
icebp
jecxz
in
inc
ficomp
inc
xchg
or
add
add
dec
xlat
push
mul
dec
pop
mov
sldt
add
cmp
sbb
xor
call
sldt
add
fist
jno
xor
and
imul
fwait
add
add
and
xchg
add
add
int
(bad)
adc
push
add
add
inc
je
aas
sbb
scas
xchg
cli
add
add
add
and
cmps
add
add
mov
mov
add
add
pop
add
add
xchg
jno
rcl
add
add
mov
mov
(bad)
and
inc
pushf
sbb
cmp
inc
rcl
inc
add
fiadd
js
js
mov
iret
pop
mov
push
inc
sldt
add
push
hlt
and
mov
ins
mov
add
in
push
add
add
jbe
fild
jb
ins
ins
arpl
add
add
add
mov
add
add
jbe
sub
and
dec
movs
jne
test
inc
dec
out
xor
add
add
add
jmp
pop
push
inc
popf
mov
adc
iret
cwde
sub
into
fnstsw
inc
push
add
add
inc
je
add
add
out
les
sbb
(bad)
in
mov
sbb
xchg
inc
pushf
inc
ja
ret
push
and
add
add
mov
shr
mov
not
icebp
pop
out
push
(bad)
jae
cwde
bound
jae
and
icebp
retf
enter
add
or
out
add
add
ret
xchg
fadd
nop
dec
push
sbb
fdivr
push
xchg
mov
mov
add
test
push
add
add
xchg
ret
pop
and
add
jmp
outs
call
add
add
cld
scas
or
add
add
pop
push
push
mov
dec
dec
push
clc
outs
inc
inc
adc
add
add
bound
dec
into
xchg
imul
or
add
add
inc
aad
mov
leave
sbb
add
repz
pop
jo
dec
ins
fsubr
leave
sldt
add
loope
adc
push
fist
add
add
pop
dec
jb
aaa
sub
jnp
int3
int3
int3
int3
int3
(bad)
sub
dec
daa
(bad)
je
icebp
push
call
and
add
add
push
sbb
mov
lods
add
add
pop
fist
add
add
and
dec
xor
jl
add
nop
nop
nop
nop
nop
pop
outs
mov
add
push
sbb
cli
jecxz
dec
add
add
add
rcr
inc
xchg
add
add
push
add
add
fisttp
add
add
out
loop
std
inc
mov
add
dec
pop
ror
int3
int3
int3
icebp
retf
out
fdivr
inc
std
pop
(bad)
or
add
add
mov
je
ins
icebp
sub
mov
cmp
nop
into
nop
nop
nop
nop
nop
mov
inc
imul
add
shr
add
(bad)
jae
cdq
xor
test
or
xchg
mov
mov
in
mov
and
scas
fcom
into
shl
inc
stos
jno
pushf
dec
mov
add
add
fwait
inc
lahf
in
retf
push
add
add
add
fidivr
add
add
add
lahf
iret
pop
jp
enter
sti
out
cmp
xchg
cs
pop
call
or
add
add
add
add
cmc
xchg
inc
pop
mul
pop
cli
fstp
inc
(bad)
pop
sub
fcomp
xlat
ror
add
add
mov
cmps
das
jbe
hlt
shl
sbb
add
add
retf
jmp
mov
cli
and
jno
mov
add
jbe
add
add
mov
loop
stos
inc
popa
cmps
jge
imul
mov
aas
xor
add
add
add
pop
xor
pop
sbb
add
add
ss
adc
add
add
adc
(bad)
stos
ret
repz
push
mov
sub
(bad)
jle
add
add
push
ds
dec
xor
into
int3
int3
int3
int3
int3
xor
add
add
shl
sub
push
imul
add
add
add
add
cmp
shl
retf
xchg
add
add
add
push
mov
pop
or
add
add
push
dec
(bad)
sar
add
add
pusha
cmps
mov
mov
push
inc
aaa
ficom
mov
cmp
add
add
clc
mov
add
add
push
retf
xchg
cwde
pop
lds
cmp
mov
sbb
pushf
test
shr
lods
jae
cmps
xor
mov
mov
mov
push
add
add
(bad)
pusha
mov
and
iret
sub
gs
xor
sahf
mov
shl
call
add
pop
outs
icebp
jge
cmp
add
add
out
mov
adc
add
add
dec
daa
inc
call
stc
js
jle
inc
jo
out
int3
int3
int3
int3
int3
call
jno
mov
add
add
jns
xchg
int3
int3
int3
int3
int3
or
add
add
add
add
add
cmp
add
int3
int3
int3
int3
int3
and
adc
add
add
mov
mul
mov
adc
add
add
daa
xlat
popa
cmps
add
add
add
scas
fst
add
add
call
call
add
add
add
int3
int3
int3
int3
int3
inc
pushf
sldt
add
das
mov
ror
(bad)
add
add
add
jno
add
add
jmp
das
sldt
add
cmp
aam
add
add
ror
adc
enter
call
test
add
add
add
(bad)
shl
cli
call
add
add
add
mov
mov
add
add
sub
dec
retf
lock
add
add
add
add
mov
add
add
mov
jmp
jp
inc
pop
bound
jl
sub
xor
sub
pop
pushf
adc
cmp
pop
mov
add
add
add
add
pop
dec
sbb
test
mov
repz
add
fwait
or
add
add
add
add
jne
push
jmp
stc
fdiv
jnp
daa
or
add
add
adc
add
add
add
popf
imul
add
add
add
xlat
adc
add
add
pop
in
ds
mov
sub
dec
loopne
jmp
inc
data16
pushf
aas
push
mov
pop
sbb
jmp
mov
xor
sbb
out
scas
stc
pop
xchg
mov
ja
jb
in
pushf
jl
shl
rcl
sar
ds
inc
push
in
or
loope
push
and
nop
nop
nop
nop
shr
add
add
or
add
add
jno
cmp
addr16
pop
stos
mov
add
jno
and
bound
cs
pop
cmp
scas
arpl
pop
mov
jo
(bad)
mov
add
jnp
popf
inc
mov
stc
fiadd
or
add
add
jp
push
outs
xchg
addr16
pop
jae
(bad)
fs
inc
movs
mov
sbb
pop
or
add
add
add
add
gs
ins
push
sub
sub
cmp
(bad)
(bad)
je
idiv
fwait
xlat
(bad)
or
add
add
add
dec
cmc
mov
inc
mov
or
add
add
retf
xchg
mov
jnp
xchg
cli
sbb
add
add
add
sldt
add
push
add
add
cs
in
mov
js
cdq
(bad)
sti
bound
xor
dec
gs
jmp
dec
inc
add
add
add
add
add
aaa
cs
fmul
in
stc
sbb
inc
into
gs
outs
xor
nop
nop
nop
nop
nop
add
add
add
stc
scas
std
mov
mov
cs
cdq
xor
fmul
(bad)
pop
jo
ja
out
movs
xor
sbb
clc
sub
int3
int3
int3
push
arpl
push
(bad)
cmc
sbb
jg
adc
add
add
add
and
add
loop
xor
sbb
add
pop
inc
scas
movs
scas
jecxz
push
sbb
icebp
pop
adc
add
add
adc
add
add
add
add
add
add
add
pop
xchg
add
add
inc
stos
out
pop
or
add
add
add
add
outs
lahf
cmps
jno
pushf
and
pushf
fs
push
or
add
add
sub
add
loopne
bound
fucom
jp
add
add
int3
int3
int3
int3
int3
jmp
popa
sub
int3
int3
int3
int3
int3
sbb
lds
sbb
lds
jmp
and
(bad)
cdq
xor
frstpm(287
adc
cmp
out
cli
sub
or
dec
shl
add
popa
test
mov
out
cmp
lea
xchg
push
in
mov
jns
(bad)
pop
iret
stos
mov
pop
sub
call
add
add
add
add
cmp
and
add
add
retf
cs
mov
fsub
and
mov
cs
into
js
popf
ss
add
mov
jno
in
sahf
ja
bound
xor
add
mov
shl
push
add
add
add
lds
add
add
add
fmul
outs
xchg
add
nop
mov
in
fnop
cli
mov
push
add
add
add
add
add
add
add
xchg
in
stos
test
pop
fisubr
inc
arpl
add
add
mov
xchg
sbb
xchg
into
add
sbb
add
add
add
add
stos
imul
dec
retf
mov
dec
cmp
add
add
mov
retf
add
add
add
add
add
jmp
hlt
addr16
repz
mov
ficom
loop
sbb
add
sbb
jl
pop
call
rcl
add
add
xlat
inc
mov
and
add
add
add
add
add
cmp
sbb
add
dec
ins
jns
push
xor
(bad)
aad
xchg
push
sbb
cld
ds
int3
int3
int3
int3
int3
or
add
add
xchg
std
movs
or
add
add
add
add
add
dec
adc
add
add
pop
pop
retf
xchg
imul
adc
add
add
retf
pop
sub
dec
add
add
add
add
push
mov
or
add
add
mov
cmps
sub
add
sbb
add
int
add
add
xchg
ret
iret
adc
add
add
mov
cmp
mov
add
jg
repnz
pop
icebp
aad
push
push
mov
xchg
(bad)
mov
dec
(bad)
scas
mov
add
add
cmps
mov
mov
sbb
mov
add
add
jp
jmp
int3
int3
int3
int3
int3
ds
add
add
add
call
cdq
mov
imul
push
inc
adc
add
add
lods
pop
mov
add
add
or
imul
jo
add
test
mov
add
add
add
add
add
dec
add
add
popa
ins
outs
and
jo
add
add
add
popa
cmps
jp
lods
dec
dec
mov
add
dec
out
das
sbb
add
add
icebp
iret
pop
mov
aas
mov
mov
and
add
and
fisubr
add
add
repnz
add
add
add
add
adc
add
add
lahf
add
add
mov
adc
outs
sbb
add
in
sbb
add
add
dec
mov
in
add
into
sub
mov
mov
fwait
in
pop
xchg
xlat
mov
ror
add
add
ss
int
add
add
cdq
pop
cmp
sahf
shr
add
add
adc
add
add
out
js
add
add
icebp
mov
mov
dec
scas
pop
sbb
add
pushf
fisttp
mov
add
add
add
sub
in
mov
xor
pusha
test
sbb
in
push
add
add
pop
je
xor
dec
sub
fmul
outs
sbb
add
jae
add
sbb
adc
cli
add
add
add
pop
push
add
add
xlat
ficom
add
add
dec
ret
dec
pushf
ss
call
fmul
add
add
nop
nop
nop
nop
nop
ins
test
adc
add
add
add
sbb
xchg
pop
adc
add
add
lds
add
sti
sub
std
in
xor
add
add
jl
mov
lahf
fs
hlt
fxch
and
rcr
add
add
sub
jecxz
add
add
cmp
cli
(bad)
aam
jmp
adc
cdq
sub
add
sub
add
add
repnz
add
add
xchg
jg
loopne
jl
and
ins
mov
test
ror
repnz
or
add
add
add
add
xor
add
add
add
push
(bad)
leave
lock
out
pop
out
add
add
jle
outs
xchg
fisttp
and
add
cmp
xchg
adc
add
add
add
(bad)
leave
std
hlt
lds
jo
add
das
xchg
cmp
je
cmp
add
add
add
add
add
jae
or
dec
cwde
adc
add
add
add
addr16
dec
push
movs
lods
cmp
mov
add
add
add
mov
ins
add
add
add
mov
add
add
call
pop
fistp
rol
in
(bad)
shr
mov
mov
mov
sub
mov
pop
push
add
adc
stos
mov
mov
sub
add
mov
outs
add
add
jl
scas
stc
shl
jmp
inc
cli
pop
loop
cmps
cdq
repz
into
inc
in
out
rcl
add
add
or
add
add
pop
adc
add
add
cwde
js
inc
add
add
sbb
add
xor
add
add
daa
outs
dec
adc
add
add
call
lea
aam
add
fs
in
pop
ret
jns
nop
nop
nop
nop
mov
add
add
outs
(bad)
sub
icebp
pop
popa
inc
push
add
hlt
lods
outs
add
add
add
xchg
cld
inc
imul
(bad)
movs
jo
ds
imul
ror
add
rcr
cld
push
cmp
sar
sbb
jbe
ds
add
jne
jmp
clc
inc
ficom
add
add
rol
add
add
clc
pop
mov
fld
fsub
add
add
add
ret
pop
movs
xchg
mov
(bad)
call
pop
lea
cmc
mov
xchg
add
add
add
xchg
or
add
add
fwait
mov
ror
out
mov
leave
lods
loopne
fadd
test
jno
adc
add
add
add
add
jmp
lods
test
daa
gs
and
dec
ins
xor
push
ret
ds
or
add
add
(bad)
(bad)
inc
jb
je
adc
add
add
add
xor
xchg
fwait
iret
rcl
dec
sbb
add
adc
add
add
push
scas
aad
rcr
dec
cmp
add
or
add
add
out
fdivr
sbb
inc
mov
int3
int3
int3
int3
int3
push
add
add
(bad)
xlat
jl
ret
ins
pop
cmp
fdiv
aam
xchg
add
add
add
stos
adc
add
add
add
add
jmp
xchg
add
add
rol
add
mov
(bad)
pop
mov
rcr
jg
add
and
jle
sti
out
mov
jle
add
add
fnsave
add
add
add
jae
repz
mov
cmps
lock
add
add
cmps
test
add
cmp
js
mov
pop
leave
dec
jns
gs
push
push
aam
jl
push
ds
or
add
add
out
cmp
add
xchg
shl
adc
add
add
icebp
pop
dec
gs
mov
imul
push
mov
movs
pop
adc
add
add
xor
add
and
mov
popf
retf
out
mov
ins
and
cmp
mov
mov
retf
sldt
add
inc
out
cs
retf
movs
shr
add
or
add
add
aad
iret
push
mov
mov
stos
cmp
add
cmp
and
or
add
add
and
add
add
add
add
push
lds
jb
xchg
or
add
add
cmp
add
add
mov
bound
add
pop
retf
hlt
dec
jnp
lods
sti
arpl
sbb
adc
add
add
int3
int3
int3
int3
mov
clc
cwde
cmps
pop
(bad)
pop
push
add
add
imul
xchg
lock
push
int3
int3
int3
int3
int3
mov
mov
sbb
loopne
fmul
mov
or
ret
cld
fldpi
int
cli
mov
mov
mov
pop
sub
cs
ins
or
add
add
add
cmps
add
add
push
add
add
add
and
xchg
outs
add
pop
cmp
pop
xchg
dec
sub
sbb
rcl
test
(bad)
cmp
add
mov
outs
aam
cmp
mov
add
mov
mov
data16
or
push
addr16
dec
test
ret
xchg
pop
out
sub
jle
popa
add
add
ror
add
add
add
add
add
add
enter
(bad)
xchg
fs
sub
(bad)
cmp
xor
lods
fs
inc
sbb
mov
stc
sbb
retf
sbb
add
aaa
or
adc
add
add
add
add
popf
movs
int3
int3
int3
int3
int3
inc
mov
clc
fistp
cmps
lods
(bad)
out
mov
xchg
(bad)
aaa
jle
cmp
add
add
mov
add
add
add
outs
mov
add
add
in
adc
add
add
add
add
fcmovb
pop
jle
inc
inc
dec
pop
add
add
add
fidiv
hlt
jge
push
add
add
xchg
add
mov
jb
(bad)
mov
arpl
mov
imul
jge
cmc
add
add
mov
cmc
int3
int3
int3
int3
int3
lea
mov
repnz
adc
add
add
cmps
add
add
mov
add
pop
dec
les
add
add
fcomp
mov
push
inc
sbb
add
add
add
movs
cld
jge
push
loop
sbb
add
add
and
jmp
cdq
data16
push
icebp
pop
or
add
add
mov
mov
mov
push
fist
and
movs
arpl
add
add
and
or
in
inc
jg
rcl
mov
jge
rcl
sti
fcmove
push
or
add
add
(bad)
jb
(bad)
inc
test
add
add
and
xor
jg
or
add
add
adc
jg
add
add
and
mov
bound
fimul
cmps
mov
add
add
dec
int3
int3
int3
int3
int3
loopne
lods
adc
add
add
add
add
mov
add
pop
call
jge
push
push
mov
rcl
mov
sbb
add
add
add
add
cmp
jno
add
add
add
add
add
add
into
pop
xor
aam
nop
nop
nop
nop
fs
nop
nop
nop
nop
nop
xlat
jno
xor
inc
xor
into
loope
(bad)
pop
mov
xchg
movs
outs
mov
mov
cmp
fs
add
mov
mov
mov
jge
icebp
aas
nop
nop
nop
nop
nop
jno
ss
pop
cmp
add
push
fidiv
idiv
mov
stos
repz
mov
add
push
and
mov
jae
and
ss
lock
aad
fld
add
add
rol
add
add
pop
add
add
lahf
xor
mov
das
sub
xor
add
add
enter
int3
int3
jmp
sti
add
pop
sbb
(bad)
ja
lods
das
test
add
add
add
add
dec
std
in
mov
xor
xchg
nop
nop
nop
nop
nop
lods
or
add
add
ins
or
add
add
xchg
add
add
sbb
xchg
sbb
xchg
adc
add
add
cmps
(bad)
hlt
popa
mov
jmp
add
add
add
add
add
add
lea
dec
push
cmp
add
inc
sbb
cmp
cmp
inc
mov
test
add
aam
dec
pop
test
adc
add
add
loop
data16
(bad)
push
push
mov
repz
add
add
add
add
push
xor
ja
into
mov
out
jmp
mov
test
add
add
pop
imul
add
add
mov
push
das
gs
jnp
add
add
leave
push
xlat
lock
scas
fcmovu
out
loopne
sub
popf
jmp
ja
(bad)
add
add
add
sbb
nop
nop
nop
in
push
add
add
mov
imul
mov
cld
or
add
add
adc
mov
add
jp
add
add
ss
es
or
or
add
add
add
add
add
outs
add
add
add
ror
add
add
rcr
add
add
pop
adc
add
add
hlt
xor
cmp
add
add
mov
pop
xchg
ins
and
mov
mov
push
ficomp
add
add
loop
add
(bad)
xor
xchg
add
add
add
add
dec
popa
push
in
aam
shl
sldt
add
cmp
sub
xor
loope
stos
out
loop
add
mov
outs
mov
sub
mov
mov
aad
repnz
push
(bad)
xor
fst
add
sub
fstp
(bad)
jp
lock
ss
imul
shl
and
add
sub
add
sbb
daa
mov
fs
lods
rcl
add
add
inc
out
inc
add
add
add
retf
jo
mov
std
add
add
mov
add
add
add
inc
pop
pop
cs
or
add
add
imul
pop
frstor
in
add
add
jmp
xor
(bad)
std
sub
mov
mov
push
push
mov
enter
jecxz
or
add
add
and
bound
shl
add
daa
add
aas
mov
add
(bad)
xor
sbb
jno
push
aam
fidiv
xor
(bad)
cmp
jb
aaa
cld
fmul
retf
and
out
in
sbb
(bad)
add
add
jo
std
add
add
add
pop
iret
movs
mov
add
add
movs
loope
jae
jecxz
lds
inc
sub
cs
popa
cmp
mov
aad
adc
add
add
(bad)
jl
push
sahf
mov
push
ret
and
pop
popf
jnp
ror
scas
xchg
jecxz
in
or
movs
adc
add
add
mov
mov
cmp
add
add
fwait
stos
and
cmp
push
add
add
add
add
pop
sub
add
add
add
add
xlat
mov
test
cwde
cmps
xchg
les
cmp
adc
adc
add
add
add
add
(bad)
repnz
pushf
lock
pop
xchg
stos
test
lahf
pop
rcr
add
add
xor
arpl
push
add
add
mul
mov
cmc
dec
sub
add
add
add
inc
cld
jecxz
pop
mov
out
push
movs
jg
shl
adc
add
add
mov
in
mov
inc
and
movs
ret
mov
mov
add
add
add
add
add
test
add
aad
das
mov
cmps
test
add
add
mov
daa
call
or
fst
outs
jmp
or
add
add
lea
popa
ror
add
add
sbb
mov
add
outs
jne
mov
cdq
std
cmps
and
and
sbb
icebp
(bad)
iret
pop
pop
and
retf
sub
cld
ficomp
and
jp
cmp
fdivr
std
jmp
or
add
add
jecxz
push
push
aaa
inc
mov
ja
daa
inc
mov
lea
leave
shl
sti
adc
add
add
cmc
sahf
pushf
xchg
cli
fstp
adc
add
add
sbb
inc
xor
sti
jbe
sbb
adc
repnz
shl
sbb
add
add
sldt
add
pop
outs
inc
push
jle
bnd
cmps
dec
push
jecxz
arpl
and
je
mov
test
icebp
dec
jno
pop
fld
mov
push
ins
pop
push
pop
bound
icebp
mov
add
add
add
test
scas
inc
xchg
fdiv
iret
mov
sar
aad
lods
and
test
in
push
add
add
xchg
fs
movs
outs
add
add
add
push
add
add
jecxz
rcl
cmp
(bad)
adc
add
add
inc
xchg
xchg
std
dec
xchg
add
add
sti
add
add
add
inc
ds
mov
ret
mov
adc
add
add
dec
lea
add
add
push
sub
cmp
cli
add
add
add
push
iret
pop
fimul
add
add
jge
and
xchg
cs
pop
jne
mov
jne
cwde
neg
add
add
mov
sub
pop
mov
shl
add
add
push
lds
add
je
add
add
cmps
fwait
mov
add
mul
cmp
mov
cmp
add
add
stos
adc
scas
lods
(bad)
cmp
xchg
lods
ins
out
or
add
add
jmp
cmp
sbb
inc
or
add
add
cmp
(bad)
iret
mov
adc
add
add
fwait
into
or
add
add
sbb
and
int
test
xchg
xor
inc
xor
adc
bound
add
aad
fsub
sub
(bad)
daa
xor
shr
rcl
pop
or
add
add
test
les
int3
int3
int3
int3
ins
call
add
add
sbb
iret
leave
shr
cs
jg
lods
mov
scas
arpl
push
add
jmp
cs
adc
add
add
add
add
add
sbb
stos
jle
imul
add
mov
bnd
push
mov
pop
mov
push
adc
add
add
pop
mov
hlt
repz
or
add
add
push
add
add
dec
pop
stc
jne
pop
fwait
pop
out
cdq
mov
in
add
add
stc
dec
push
sub
adc
add
add
lods
int3
int3
int3
int3
int3
xchg
in
sub
lods
cdq
ret
dec
cs
dec
idiv
pop
add
add
adc
add
add
add
add
(bad)
ds
iret
add
add
add
add
sbb
and
inc
mov
or
add
add
inc
(bad)
into
sbb
add
cs
add
add
test
jmp
rol
add
add
push
idiv
jno
jecxz
add
add
and
add
cmp
dec
jle
xchg
sbb
add
sbb
push
xor
sub
mov
int3
int3
int3
int3
sub
fstp
in
(bad)
sahf
mov
cmp
ins
cmc
inc
stc
push
aad
add
add
add
add
and
xor
sbb
dec
add
add
xchg
fcomp
test
nop
nop
nop
nop
scas
and
sub
hlt
sbb
add
in
add
add
shl
add
pop
add
adc
add
add
and
in
xchg
adc
add
add
dec
sbb
sub
cmp
lods
int3
int3
int3
int3
int3
mov
and
add
add
add
add
add
adc
push
add
add
lds
test
inc
ins
jg
mov
inc
fld
add
add
add
and
ret
pushf
ins
jecxz
sbb
sar
hlt
mov
gs
add
add
add
shr
mov
clc
push
add
add
fidivr
shl
add
xchg
or
add
add
adc
sbb
add
enter
loope
inc
jb
mov
inc
daa
enter
dec
cld
nop
nop
nop
nop
nop
arpl
test
add
cli
test
mov
xchg
mov
in
int3
int3
int3
int3
and
cmp
movs
scas
jl
cli
ds
lahf
push
push
test
scas
in
sbb
nop
nop
nop
nop
mov
leave
and
add
add
xor
add
add
(bad)
cwde
pop
addr16
sbb
movs
ins
movs
ins
cmp
add
add
inc
jmp
imul
outs
ins
adc
cmps
out
cwde
(bad)
or
add
add
add
add
ja
jb
xchg
lea
sti
or
add
add
lahf
mov
out
ja
jns
jmp
fistp
rol
add
cdq
sbb
outs
or
add
add
pop
test
add
mov
mov
popf
ja
lahf
aas
ins
mov
push
(bad)
mov
jbe
movs
(bad)
jmp
nop
nop
nop
nop
nop
ret
in
adc
push
add
add
fsub
out
fistp
add
fsub
add
add
add
add
add
jmp
mov
add
ror
add
add
imul
inc
movs
push
xor
or
(bad)
push
movs
adc
(bad)
pop
xlat
das
movs
call
sub
add
cmc
add
add
add
cmp
or
add
add
cmps
dec
mov
(bad)
fs
clc
adc
add
add
mov
repz
add
fsub
cdq
inc
ficom
add
add
in
loopne
jp
xchg
add
inc
push
xor
pop
(bad)
retf
jmp
not
pop
scas
adc
add
add
inc
sbb
add
add
sbb
xor
adc
add
add
popf
cmp
hlt
das
adc
add
add
test
out
outs
xor
out
in
xor
add
retf
das
stos
fcmovne
sbb
neg
in
push
xor
inc
add
add
inc
jmp
jle
cmp
stos
hlt
dec
xchg
mov
lods
pop
jmp
mov
hlt
add
add
add
lock
lock
add
mov
int
retf
rol
add
test
add
add
loop
add
add
or
add
add
jae
pop
(bad)
nop
nop
nop
nop
nop
cmp
add
add
icebp
lds
lock
sub
pop
fld
add
add
pop
ja
xchg
sbb
mov
sbb
jb
into
inc
imul
add
add
xchg
mov
sbb
add
add
stos
and
mov
jp
jl
mov
pop
dec
and
add
add
pop
cdq
and
retf
int3
int3
int3
int3
int3
sldt
add
sbb
add
cli
mov
add
add
jnp
push
add
mov
sar
sbb
(bad)
icebp
mov
cmps
and
add
mov
add
shr
mul
ret
mov
xor
mov
call
int3
int3
int3
int3
int3
into
aad
add
add
dec
sbb
es
mov
add
add
cli
call
(bad)
add
add
jmp
xchg
mov
outs
ficom
shl
xchg
cmp
icebp
dec
pop
retf
int3
int3
int3
cs
fist
xchg
xor
sbb
fisub
push
sbb
mov
inc
xchg
fisub
pop
xor
hlt
dec
ret
(bad)
mov
aas
stos
stos
cmps
out
add
add
add
pop
push
mov
enter
nop
nop
nop
xor
sub
push
dec
aas
add
add
add
push
inc
out
bound
int
or
add
add
add
or
add
add
add
pusha
push
ror
add
add
add
add
add
jp
(bad)
mov
cwde
movs
nop
nop
nop
nop
nop
std
(bad)
lods
jmp
sbb
mov
add
enter
and
add
mov
int
sbb
push
sub
jl
test
(bad)
clc
lds
movs
repnz
add
add
add
ror
ins
aam
inc
mov
icebp
imul
push
call
iret
inc
adc
add
add
add
xchg
movs
sub
in
adc
add
add
xor
ss
mov
add
add
add
xchg
add
add
cmc
xor
add
push
repnz
inc
and
or
movs
iret
and
jno
add
add
add
mov
stos
cs
mov
les
out
pop
das
fist
cmp
std
and
and
push
pop
lock
sub
ja
sahf
dec
push
in
push
inc
lods
cmc
mov
dec
(bad)
or
add
add
add
add
mov
xor
add
add
push
add
add
or
add
add
add
add
cmp
jl
adc
add
add
mov
pop
push
movs
ss
jg
or
add
add
adc
and
out
mov
pop
add
add
dec
push
add
popf
dec
dec
jns
std
outs
call
xchg
pop
daa
cmps
lods
sub
or
add
add
add
add
sub
repz
addr16
add
add
shl
jg
retfw
and
push
cdq
mov
mov
add
xchg
sub
pop
(bad)
pop
leave
cmp
dec
inc
or
add
add
loopne
jmp
test
lock
add
lods
in
lods
daa
arpl
push
bound
cmp
add
add
adc
add
add
sub
pushf
mov
add
add
in
fidiv
xlat
movs
aas
(bad)
ss
aad
iret
xor
cwde
icebp
std
jge
jae
add
in
in
rcr
pop
push
and
add
ret
outs
xor
mov
lods
stos
test
add
add
mov
out
popf
adc
add
add
xor
adc
add
add
mov
sahf
sbb
in
add
int3
int3
int3
int3
int3
(bad)
(bad)
stos
sub
jle
jo
or
add
add
jmp
pop
jg
shl
and
and
dec
jno
adc
ret
movs
repnz
add
push
cli
push
and
mov
add
add
sahf
dec
add
neg
or
add
add
mov
jns
inc
inc
addr16
stc
xchg
ins
pop
cmc
fidiv
add
add
pop
push
cs
mov
ret
jmp
mov
in
jbe
mov
mov
sbb
lock
loop
push
add
add
add
mov
clc
cmps
test
(bad)
mov
cmp
fwait
out
clc
xor
jno
add
and
add
add
xor
(bad)
push
dec
fstp
pop
fimul
fcmovb
jae
pusha
clc
xchg
stos
inc
lea
arpl
(bad)
or
hlt
add
push
add
mov
or
add
add
enter
add
add
sldt
add
pop
mov
sub
out
add
add
add
add
add
ret
inc
or
add
add
dec
add
add
and
out
gs
cmp
clc
jae
add
add
cmp
and
mov
iretw
call
adc
add
add
xchg
xchg
out
icebp
int
pop
push
add
add
add
add
cdq
(bad)
mov
into
in
dec
sub
pop
push
out
(bad)
xchg
add
add
add
add
ins
loope
or
mov
dec
mov
inc
xchg
jmp
push
jecxz
mov
leave
push
pop
stos
sub
movs
fistp
mov
or
add
add
add
add
lods
dec
shl
cmp
mov
mov
int3
int3
jno
ror
cdq
ss
sbb
pusha
add
add
add
dec
dec
ss
mov
xchg
adc
add
add
add
sbb
add
add
add
add
add
arpl
data16
add
add
push
sahf
test
add
add
add
out
clc
jle
imul
sbb
add
add
adc
add
add
cli
xchg
in
jo
sub
xor
lods
sbb
add
stc
outs
bound
add
add
inc
out
xor
out
sbb
enter
dec
bound
mov
jmp
out
inc
and
adc
sub
test
xchg
ret
in
aaa
pushf
jnp
mov
imul
das
sti
loop
int3
int3
int3
int3
int3
call
jo
push
push
out
pop
jecxz
and
xchg
pop
add
add
or
add
add
loope
ins
out
in
test
add
add
add
aad
cmp
into
lahf
add
add
add
dec
cmp
(bad)
sub
add
add
add
aas
add
add
add
xchg
add
add
add
add
or
add
add
mov
mov
cmp
clc
sub
add
mov
add
add
add
icebp
retf
cwde
add
add
add
add
add
pusha
(bad)
in
add
add
push
dec
xor
add
add
std
inc
mov
add
(bad)
xchg
into
mov
jecxz
push
add
mov
or
add
add
add
cmp
dec
mov
add
add
pop
pop
jmp
inc
or
add
add
add
add
sbb
add
add
ds
(bad)
out
xchg
inc
in
rcr
pop
xchg
popa
sub
stos
lods
cdq
xor
adc
mov
mov
cmp
mov
cmp
mov
jp
ror
add
add
add
adc
add
add
mov
scas
fadd
sub
jecxz
cmp
aas
rcr
xchg
sbb
add
rcr
rcr
jnp
lds
add
add
and
pop
sub
dec
sub
out
pop
add
add
sti
adc
add
add
push
add
add
sub
sub
rcr
add
gs
jle
mov
jns
out
retf
jae
add
add
shl
xor
add
add
outs
nop
nop
nop
nop
nop
sar
cwde
cmp
add
xchg
bound
nop
nop
nop
dec
dec
dec
not
mov
mov
daa
lds
loope
jmp
adc
add
add
fwait
int
lods
dec
repz
add
add
add
ret
and
add
add
mov
les
movs
scas
jno
ror
int3
int3
int3
int3
xchg
cdq
fistp
fcom
mov
loopne
dec
frstor
out
add
call
inc
or
add
add
add
add
shl
cmc
out
(bad)
and
add
data16
es
sbb
ins
jnp
stos
xor
mov
mov
push
xchg
and
mov
add
add
jae
add
add
pop
sti
sbb
add
les
fisttp
add
add
cld
xchg
mov
clc
ins
sub
mov
in
mov
push
pop
sub
adc
add
add
add
add
pop
pop
add
add
pop
xchg
mov
shl
adc
sub
sub
cmp
cmc
(bad)
enter
dec
mov
add
test
jecxz
push
mov
lock
push
push
out
ins
or
add
add
fst
pop
movs
or
add
add
mov
fidiv
data16
scas
push
mov
add
add
loope
lock
(bad)
out
stos
mov
(bad)
or
add
add
add
add
add
retf
add
add
fmul
int3
int3
int3
int3
stc
into
push
mov
mov
pop
mov
xor
add
add
xor
mov
inc
gs
int
cmp
into
iret
int
es
adc
add
add
mov
jmp
push
(bad)
inc
add
ret
pop
or
adc
add
add
add
add
imul
mov
add
add
cmp
arpl
dec
inc
pop
adc
leave
xchg
and
int3
int3
int3
int3
pop
fwait
xor
mov
mov
inc
repnz
ins
pushf
(bad)
(bad)
mov
adc
add
add
je
xlat
mov
adc
add
add
lods
sub
mov
fisubr
shl
jbe
imul
leave
std
jb
loopne
inc
cmp
scas
nop
nop
nop
nop
nop
mov
xchg
into
test
pop
std
test
dec
push
jne
call
dec
xchg
imul
mov
add
add
dec
jno
mov
push
add
add
sub
add
fstp
enter
or
mov
sbb
fst
add
add
add
inc
mov
nop
jae
jl
add
xchg
icebp
dec
sub
add
add
in
sub
or
stc
out
mov
mov
daa
jb
push
add
add
push
std
mov
sbb
xchg
jne
push
add
add
call
jg
jb
cmp
jnp
icebp
sbb
add
add
in
sbb
fsubr
and
(bad)
gs
out
jle
jge
mov
inc
ins
cli
jns
aaa
cld
push
jp
imul
aam
outs
jae
sub
sbb
add
jb
sub
jecxz
ins
jns
push
mul
test
add
add
jo
xchg
and
add
add
ds
pop
pop
cmps
sbb
xchg
xchg
mov
cmp
dec
fisub
add
or
add
add
sub
push
gs
movs
imul
add
push
(bad)
jmp
ret
int
int
pusha
inc
cmp
popa
out
add
add
add
clc
cmp
nop
nop
nop
nop
mov
jecxz
cmps
pop
adc
add
add
mov
mov
sbb
add
add
adc
add
add
cli
add
add
out
out
cmp
mov
jb
in
sbb
aad
enter
ja
adc
add
add
mov
repnz
fst
fcomp
dec
inc
shl
cdq
push
mov
hlt
je
cwde
ficom
aaa
xchg
sub
fs
jl
aas
cmps
mov
std
sti
mov
add
add
fld
push
in
addr16
clc
inc
enter
sbb
xor
mov
cmp
ins
sub
fadd
add
add
sldt
add
adc
add
add
fwait
add
dec
sti
inc
dec
sbb
outs
push
jmp
add
add
jne
adc
mov
add
add
add
add
add
add
add
stc
call
movs
out
mov
bound
add
sub
add
xchg
sti
adc
idiv
adc
mov
call
sub
out
loop
mov
fsubr
jbe
dec
sbb
add
add
xchg
out
mov
add
pop
jb
ins
and
stos
xlat
(bad)
or
add
add
aad
mov
xchg
mov
add
fs
mov
sar
jmp
iret
ror
xchg
xchg
(bad)
ss
mov
mov
cdq
mov
and
scas
in
dec
fdiv
add
add
mov
cmps
and
dec
test
and
imul
mov
add
lods
and
mov
dec
push
lahf
mov
(bad)
cmps
loop
out
rol
sldt
add
and
add
add
jp
jnp
xor
pop
cmps
lea
add
(bad)
icebp
and
pop
stc
and
sbb
in
(bad)
rol
iret
in
outs
in
xor
add
add
lds
add
add
call
std
daa
fistp
push
add
sub
add
add
ror
add
add
adc
add
add
into
lea
add
add
(bad)
in
les
out
iret
mov
shl
cmc
fsubr
jp
in
fst
inc
sub
out
loop
ret
add
les
add
add
mov
add
int3
int3
int3
int3
int3
test
adc
add
add
add
add
pop
aas
sub
int
jmp
fsubr
mov
add
add
add
and
add
sub
xor
js
and
js
pop
add
add
mov
mov
add
add
sahf
les
pop
add
add
dec
xor
pop
dec
rol
xchg
inc
sbb
xor
scas
add
add
add
cmc
test
ds
add
add
lock
pop
mov
mov
lods
inc
add
mov
test
add
add
mov
ins
sbb
aad
shl
inc
add
pop
add
add
jb
push
out
push
mov
mov
add
add
out
jp
add
add
push
push
test
dec
cmps
adc
add
add
mov
xor
add
add
mov
cmps
add
add
add
add
add
dec
sub
stc
call
mov
add
add
call
add
add
pop
int
or
add
add
std
cmc
fsubr
mov
hlt
inc
push
add
add
mov
mov
fcomp
add
xchg
add
add
add
inc
pushf
in
add
add
add
jne
out
add
add
inc
div
mov
add
mov
shl
dec
and
add
add
push
arpl
pop
mov
js
inc
div
sahf
mov
stc
add
sbb
xor
nop
nop
nop
nop
pop
les
add
add
mov
scas
sbb
jae
jo
sub
add
out
mov
pop
add
add
pusha
es
nop
nop
nop
nop
stc
inc
add
add
add
xchg
das
xor
inc
mov
push
add
add
sub
add
add
add
add
std
enter
add
add
cmp
enter
mov
add
add
jmp
inc
lahf
cld
pop
xor
mov
hlt
or
add
add
add
(bad)
in
not
movs
leave
cmps
lods
sbb
loopne
lds
add
add
sub
out
xor
mov
js
add
add
movs
jo
add
add
(bad)
call
mov
js
adc
add
add
cs
aam
test
sldt
add
push
adc
add
add
pop
xchg
pop
stc
dec
cmp
add
aad
xor
in
dec
fwait
test
hlt
xor
not
or
add
add
add
add
add
addr16
sahf
cwde
int
push
jecxz
pop
inc
push
or
mov
lahf
dec
in
nop
add
add
mov
mov
(bad)
enter
add
add
mov
sub
and
das
stos
call
jle
dec
mov
repnz
xor
loopne
lds
add
add
sbb
add
cmps
sahf
pop
lods
(bad)
xchg
pop
jnp
jle
mov
cmps
(bad)
pop
xchg
xchg
mov
add
add
sbb
sub
std
push
sbb
add
add
mov
enter
or
add
add
idiv
jae
in
test
pop
add
add
mov
arpl
je
pop
dec
(bad)
pop
or
add
add
add
out
xchg
scas
mov
lods
js
add
add
jge
out
lods
pop
fist
out
add
pop
mov
bound
jge
in
jns
sbb
push
dec
in
push
jp
inc
mov
addr16
mov
jl
repnz
jg
push
jg
add
xchg
mov
add
and
add
movs
sbb
add
add
fwait
mov
jg
retf
out
sbb
mov
outs
mov
mov
or
add
add
add
push
jle
or
add
add
dec
mov
cmp
(bad)
mov
or
add
add
hlt
xor
test
add
rcr
inc
call
pop
push
add
add
repnz
add
and
pop
add
add
sub
dec
push
sbb
loopne
pushf
mov
add
add
imul
add
add
mov
fadd
call
cmp
hlt
jg
sbb
add
add
fstp
adc
add
add
add
add
add
sub
add
add
(bad)
fs
pop
pop
add
add
imul
out
add
add
shl
js
cmp
mov
sbb
aaa
enter
add
mov
daa
xchg
test
add
add
fld
add
sub
inc
xchg
add
add
add
pop
test
iret
push
in
xchg
xor
add
add
mov
add
add
add
add
add
add
loope
out
inc
mov
add
not
sub
add
add
add
popf
add
add
add
cwde
sub
gs
jmp
add
add
out
gs
mov
add
add
add
add
or
add
add
rep
sub
bound
outs
xor
and
test
ja
gs
stos
sbb
retf
pop
scas
scas
aaa
lods
and
mov
shl
add
mov
cmps
xchg
sbb
jne
xchg
xchg
add
lea
cmp
add
add
cdq
pop
movs
jnp
jmp
jmp
outs
inc
cdq
sldt
add
adc
pop
cmp
add
mov
hlt
xchg
mov
and
push
inc
cmp
mov
adc
add
add
leave
call
outs
xor
aam
jge
stos
sub
mov
or
add
add
sbb
pusha
and
xchg
push
retf
aas
outs
xchg
sar
and
call
lods
add
add
and
add
stos
add
add
add
add
push
push
add
push
add
add
out
cmp
xchg
xchg
cld
shl
repz
add
add
daa
jno
aad
mov
imul
add
imul
sar
div
push
(bad)
loop
imul
cld
sub
sbb
scas
and
fs
inc
jp
daa
rol
add
add
mov
inc
push
jecxz
push
push
add
neg
sar
test
xlat
pop
aaa
ins
lock
ja
sti
jl
add
add
add
add
test
push
(bad)
stos
mov
leave
xor
or
(bad)
repz
dec
stos
stos
jge
xchg
ret
outs
xor
xor
bound
fmul
call
jle
shl
dec
ds
cs
into
push
dec
sbb
aas
push
add
add
cli
sti
adc
add
add
es
sti
(bad)
dec
push
xlat
test
mov
mov
add
add
add
mov
loopne
jnp
add
add
and
mov
das
cmc
enter
cmps
dec
add
add
add
add
add
gs
popf
(bad)
push
add
add
mov
xchg
add
sldt
add
xchg
(bad)
adc
add
add
or
add
add
mov
jl
adc
add
add
dec
push
pop
push
cli
jge
mov
pusha
into
adc
add
add
add
add
add
add
or
add
add
mov
ficom
ss
add
add
cmp
adc
add
add
stos
rol
xchg
inc
outs
pop
xor
add
add
sbb
and
push
cmp
add
add
cmp
jo
push
test
nop
nop
nop
nop
nop
pop
push
out
stc
fidivr
xchg
repz
add
add
hlt
adc
add
add
mov
into
add
add
add
cmc
push
cli
stos
fcomp
out
imul
add
out
and
sbb
mul
cmps
ins
xor
push
inc
cmp
test
add
bound
add
add
add
outs
jae
call
aam
out
ins
pop
add
add
push
test
fcom
adc
add
add
adc
jmp
movs
push
pop
repz
jne
mov
add
add
add
mov
dec
outs
push
mov
add
add
add
sub
mov
imul
sub
and
add
add
add
add
xlat
push
jb
add
add
sbb
pop
mov
(bad)
sbb
add
cmp
sbb
clc
imul
scas
aad
inc
and
pop
add
add
add
mov
iret
das
push
add
add
les
stos
in
hlt
dec
xor
sbb
adc
add
add
dec
adc
add
add
mov
xchg
test
add
add
xor
fcom
add
add
aam
movs
xor
adc
add
add
add
add
in
sub
fadd
add
les
inc
pop
sbb
mov
(bad)
xor
add
add
add
add
add
mov
xchg
add
add
sub
imul
mov
sar
dec
ret
call
add
add
mov
nop
nop
nop
nop
mov
out
fwait
xchg
mov
and
jo
jb
xchg
test
jbe
add
daa
or
add
add
add
add
add
call
xchg
add
scas
add
add
add
add
add
sbb
add
or
add
add
add
add
pop
adc
add
add
add
add
add
cmps
movs
pop
hlt
pop
sub
add
add
mov
lahf
mov
mov
pop
sbb
pop
add
add
nop
nop
nop
nop
nop
xchg
xor
into
add
add
add
adc
add
add
xchg
enter
sbb
add
pushf
movs
inc
ss
stc
stos
mov
mov
movs
imul
int
push
test
inc
js
xchg
enter
ret
sub
add
(bad)
xor
add
add
add
stc
inc
rcr
add
add
test
jmp
mov
add
add
add
xor
and
add
add
pop
je
push
sub
adc
add
add
or
mov
adc
add
add
add
add
mov
mov
add
add
dec
les
in
movs
ror
add
add
pop
data16
pop
add
add
mov
movs
scas
inc
test
add
pop
popf
out
add
add
sbb
call
adc
add
add
add
jg
jle
dec
jle
push
popa
test
ins
jg
ds
add
add
add
call
jecxz
jne
jns
(bad)
jecxz
xor
push
sldt
add
jns
mov
add
cmc
lahf
and
mov
and
xor
sbb
les
add
add
mov
bnd
add
add
aad
movs
push
add
add
idiv
mov
iret
rol
add
add
jge
cmp
jp
(bad)
das
scas
pop
bound
ds
jp
lea
cmp
mov
fnstcw
mov
sub
add
outs
add
add
test
add
add
dec
dec
icebp
mov
xchg
dec
mul
cmc
push
jne
loop
not
arpl
adc
stc
das
adc
add
add
adc
add
add
cdq
sub
mov
lea
arpl
adc
add
add
and
repz
add
add
add
jmp
cmp
add
and
stc
xchg
mov
neg
mov
lock
stc
sub
sub
add
ror
ret
movs
mov
jge
inc
and
sub
add
adc
add
add
cmp
add
add
mov
or
add
add
xchg
inc
shl
loop
dec
sar
push
xor
add
ds
pop
nop
nop
nop
nop
nop
inc
fs
int
div
shr
lahf
mov
sbb
ins
leave
fdivr
push
aam
fwait
add
add
add
frstor
push
mov
loop
loop
out
and
adc
push
add
add
mov
ret
jmp
int3
int3
int3
int3
mov
cwde
outs
push
add
add
cmp
add
add
add
add
add
out
mov
ss
call
movs
icebp
or
add
add
dec
mov
add
add
dec
(bad)
lahf
outs
inc
mov
add
add
xchg
and
xchg
ins
retf
pop
(bad)
fmulp
pop
inc
inc
scas
cmp
add
add
or
add
add
add
add
ror
add
add
add
xchg
xor
add
add
jge
lds
push
add
add
or
movs
(bad)
pusha
push
repz
pop
xor
iret
mov
nop
nop
aam
mov
and
sub
add
add
ret
inc
retf
fwait
iret
xchg
mov
into
pop
push
lods
xchg
sub
imul
add
add
lods
add
add
add
mov
pop
sbb
mov
push
add
add
add
add
add
(bad)
cmp
add
add
mov
jmp
add
add
addr16
cmp
push
sar
pop
ret
pop
scas
outs
mov
add
add
add
mov
cld
and
sahf
mov
or
add
add
inc
xchg
jge
lahf
pop
idiv
mov
fisttp
je
mov
add
inc
cmp
sub
in
add
add
mov
add
xor
cmp
js
mov
test
add
add
jae
pop
add
add
fcom
shl
mov
add
add
add
add
add
shr
xlat
fnstenv
cmc
in
nop
nop
nop
nop
cmps
jo
lahf
clc
jecxz
cmp
push
add
add
fcmovnb
ret
(bad)
je
adc
add
add
loop
hlt
add
add
add
outs
lods
out
inc
in
pop
and
adc
ins
push
mov
mov
push
adc
add
add
add
add
jbe
dec
pop
mov
faddp
adc
stc
mov
stos
loope
(bad)
mov
ins
mov
add
add
add
cmp
add
stc
sahf
cmp
add
add
add
add
adc
add
add
inc
sub
scas
nop
nop
nop
nop
nop
sub
sar
ins
cmps
das
sbb
cwde
nop
nop
nop
nop
nop
dec
xor
add
add
xor
push
movs
push
and
jmp
lea
add
add
inc
aaa
pop
add
add
mov
mov
add
add
hlt
retf
push
add
add
aam
push
adc
fidiv
cli
and
add
add
add
add
jno
std
bound
loope
pop
add
add
or
add
add
jp
rol
add
mov
xchg
das
push
movs
mov
inc
scas
mov
or
outs
push
in
repz
adc
add
add
lock
inc
and
aad
add
mov
inc
pop
(bad)
lock
mov
ret
sub
pop
icebp
sbb
and
fst
jae
pop
mov
adc
add
add
cwde
cmp
icebp
cmp
push
pop
das
jns
ror
or
add
add
test
add
fnstcw
mov
and
in
sub
ss
fwait
xchg
or
add
add
inc
cmp
push
add
add
icebp
fnstenv
sti
mov
add
add
sbb
add
add
mov
int3
int3
mov
out
nop
nop
nop
nop
nop
push
outs
outs
enter
cmp
pop
int3
int3
int3
int3
int3
mov
add
shr
movs
add
int3
int3
int3
int3
int3
imul
add
add
test
add
add
add
add
add
sub
fild
(bad)
in
mov
jae
add
add
repz
aad
test
add
add
int3
int3
int3
int3
int3
mov
nop
nop
nop
nop
nop
xor
add
add
(bad)
jbe
xor
add
dec
adc
add
add
pop
mov
xchg
fs
leave
imul
jecxz
lock
gs
fldenv
add
add
jl
(bad)
int3
int3
int3
int3
int3
in
mov
xor
add
push
xchg
ss
cmp
add
add
sbb
adc
imul
add
add
imul
inc
add
cmps
mov
or
add
add
push
inc
and
sbb
call
cmp
mov
sbb
add
out
sub
cmc
add
add
add
add
arpl
add
pop
mov
adc
add
add
add
sbb
add
add
and
mov
cs
cmp
ret
add
aas
ins
cmp
cmc
in
fisubr
cmp
pop
in
sub
(bad)
retf
add
add
add
mov
cwde
push
or
add
add
add
sti
cmps
test
add
add
push
add
and
add
mov
sahf
loope
nop
nop
nop
nop
nop
add
add
add
enter
and
repz
lahf
push
pop
cmc
movs
inc
in
clc
xchg
lahf
cmp
mov
adc
add
add
sldt
add
and
add
cdq
mov
jl
stos
or
outs
addr16
int
shl
and
lods
dec
push
cmp
test
inc
ret
movs
push
add
add
dec
lods
xlat
shr
add
add
add
das
nop
nop
nop
nop
nop
jne
pushf
add
add
add
das
leave
inc
sar
jns
out
or
add
add
fisttp
aas
or
add
add
add
add
mov
lods
push
cmp
call
add
add
add
lea
add
jle
lahf
adc
add
add
push
cmp
jmp
shl
(bad)
mov
fmul
add
add
lahf
mov
or
add
add
jns
add
add
rol
cmp
shl
push
or
add
add
jmp
add
add
add
add
add
aaa
addr16
popa
lods
popa
loope
rcr
pop
add
add
and
leave
or
add
add
add
out
int3
int3
int3
int3
adc
add
add
mov
pop
inc
leave
daa
xchg
scas
hlt
sar
xchg
imul
js
add
or
add
add
add
add
or
add
add
clc
pop
pop
stos
push
clc
mov
mov
add
add
(bad)
ds
add
xchg
jmp
sti
arpl
pop
add
add
pop
test
fsubr
retf
xchg
jecxz
add
add
sbb
add
add
loop
aad
lods
sbb
aaa
ret
pop
lds
cli
loop
pop
cli
pop
xchg
or
add
add
lahf
test
adc
add
add
int3
int3
int3
and
add
inc
jge
and
outs
popf
(bad)
aad
mov
or
add
add
push
jo
sti
sbb
jbe
cmp
pushf
(bad)
les
sbb
cmp
sbb
dec
add
add
out
sti
popf
push
jl
add
add
outs
es
in
pop
inc
and
push
add
add
nop
nop
nop
nop
nop
adc
add
add
bound
jmp
data16
or
add
add
stos
pop
inc
and
add
out
sub
mov
adc
mov
fwait
cmps
jb
mov
js
mov
push
add
add
add
inc
stos
scas
mov
aad
add
add
cmp
shl
retf
(bad)
aaa
enter
fld
add
out
jne
mov
cmps
or
add
add
cli
inc
xor
add
add
dec
popf
mov
add
and
jne
push
push
add
add
call
push
fwait
push
pusha
mov
icebp
cmps
and
adc
add
add
add
add
(bad)
fdivr
shr
shl
mov
xchg
and
add
in
push
add
adc
add
add
add
cmp
cwde
adc
add
add
arpl
add
add
add
pop
outs
cmp
adc
aaa
imul
(bad)
test
mov
add
add
fisttp
add
add
mov
lods
jg
movs
add
add
add
xor
xchg
daa
push
add
add
pop
retf
or
add
add
add
add
ja
adc
mov
test
hlt
lahf
mov
pusha
or
add
add
es
add
add
add
stc
sub
test
add
imul
mov
inc
push
push
or
add
add
stos
inc
scas
aas
pop
pop
mov
add
add
popf
lahf
mov
push
cwde
xor
aam
mov
jge
repnz
data16
nop
nop
nop
inc
outs
xchg
mov
pop
push
add
add
stos
or
add
add
(bad)
int3
int3
int3
int3
int3
adc
add
add
pop
stos
mov
ja
add
add
mov
xor
add
add
add
add
sub
add
add
stos
jns
into
add
add
add
mov
push
movs
lods
xor
add
sbb
add
add
mov
rcl
inc
pop
fnstenv
mov
sbb
ins
in
pop
and
fsub
add
add
pusha
ret
lods
lods
mov
add
add
pop
or
add
add
stos
aad
movs
fst
mov
inc
call
loop
hlt
or
add
add
rcr
mov
outs
in
std
ror
add
add
sbb
cs
lea
xor
add
add
add
xchg
xchg
shr
add
add
or
add
add
rol
push
and
enter
pop
jae
mov
dec
scas
pop
aaa
sub
out
dec
xor
rcr
sti
retf
mov
add
jecxz
or
add
add
add
add
jo
mov
mov
mov
adc
clc
out
fstp
push
add
add
jl
cld
add
add
(bad)
popf
scas
test
test
add
push
sbb
add
in
mov
fnsave
outs
jnp
fcom
add
add
adc
add
add
in
stc
imul
and
jnp
or
add
add
add
add
or
add
add
add
add
add
mov
nop
nop
nop
nop
jmp
mov
pop
pop
addr16
cmp
test
(bad)
iret
xchg
jmp
sldt
add
loope
pusha
ja
cmp
iret
dec
xchg
mov
add
add
mov
jae
add
cmps
out
inc
stos
cmp
add
add
ja
retf
add
add
xchg
out
test
adc
pop
rcr
in
int3
int3
int3
int3
int3
push
xchg
ds
add
add
shl
ds
push
js
dec
xor
mov
test
dec
mov
jo
xchg
cmps
mov
add
and
and
xchg
movs
xchg
sbb
xchg
icebp
sbb
push
cli
cmp
xchg
and
xor
stos
inc
fdiv
add
js
jae
xchg
stos
adc
add
add
out
dec
leave
pop
call
sar
std
scas
bound
add
add
xchg
add
add
clc
dec
inc
xor
or
add
add
adc
add
add
mov
into
sbb
nop
jmp
jae
mov
sub
jae
add
std
div
sub
mov
int3
int3
int3
int3
leave
pop
add
add
fcomp
pop
out
bound
dec
lds
and
sub
adc
add
add
xor
scas
mov
jg
fucomi
push
dec
sub
popf
leave
pop
add
add
xlat
xlat
ja
mov
and
adc
fs
out
addr16
fst
cwde
call
add
add
sbb
add
add
add
add
and
xchg
std
bound
or
add
add
add
add
add
(bad)
fucomip
in
add
add
movs
and
lods
xchg
stc
scas
and
bnd
mov
lock
cmps
es
push
fwait
clc
xor
icebp
ret
add
add
add
mov
in
push
jp
(bad)
cmp
and
xor
mov
inc
xor
xchg
loop
cmp
ins
sub
retf
add
add
push
cs
cmps
adc
sub
mov
js
hlt
(bad)
add
add
xchg
aam
push
rol
add
add
cdq
popa
or
dec
push
mov
jmp
adc
lahf
adc
add
add
and
add
add
outs
add
add
add
mov
jecxz
push
adc
add
add
add
add
aaa
(bad)
jl
add
add
fist
add
add
inc
xchg
push
repnz
arpl
mov
cmps
or
add
add
jne
mov
movs
sub
add
add
add
add
mov
add
add
icebp
add
(bad)
rep
dec
call
pop
add
add
(bad)
xor
data16
add
add
add
sub
and
add
add
mov
nop
nop
nop
nop
nop
mov
inc
mov
add
add
add
sbb
add
movs
test
inc
pushf
sbb
sar
ficomp
fisub
add
add
add
add
add
mov
push
and
add
add
call
nop
nop
nop
push
add
add
sub
into
sub
jmp
xchg
cmp
fs
outs
jecxz
test
add
add
push
out
jno
pop
test
cdq
loop
pop
adc
add
add
bnd
jno
xchg
cmp
add
stos
jne
call
jo
adc
add
add
mov
add
js
rcr
shl
mov
add
jg
xchg
jmp
sub
add
add
xchg
movs
lods
add
add
add
adc
ret
test
add
add
add
fwait
pop
idiv
out
scas
stos
test
loop
pop
add
add
sbb
mov
test
repz
sbb
lock
add
pushf
pop
shl
scas
std
out
push
cmps
inc
mov
sbb
sldt
add
push
movs
add
add
add
es
aaa
lods
(bad)
out
pusha
ficomp
add
add
push
mov
dec
jmp
arpl
jne
push
popa
addr16
add
add
add
dec
lock
ss
sldt
add
xor
shl
add
mov
movs
and
mov
inc
xchg
imul
add
add
push
mov
add
add
ret
xchg
add
add
sbb
push
pop
shl
or
add
add
add
add
jb
aas
lea
jno
mov
inc
(bad)
and
add
add
clc
mov
pop
sbb
sub
and
add
add
fistp
jmp
cmp
dec
sbb
add
push
loopne
add
add
sti
push
mov
or
add
add
mov
outs
in
sbb
dec
or
add
add
loope
rol
add
sub
mov
jge
je
js
add
data16
jo
loopne
mov
dec
add
add
add
daa
adc
add
add
je
out
arpl
push
add
add
add
push
dec
inc
and
add
add
add
rol
or
imul
add
add
or
add
add
hlt
dec
inc
mov
nop
nop
nop
nop
(bad)
loope
mov
dec
push
xlat
mov
add
jg
(bad)
mov
stos
mov
adc
add
add
movs
sub
mov
stc
fs
scas
add
add
ret
fmul
add
add
mov
cdq
retf
rcl
add
add
add
add
add
inc
push
and
stos
aad
add
add
or
add
add
(bad)
mov
add
add
add
fmul
dec
(bad)
fstp
(bad)
lods
fs
adc
add
add
add
add
xchg
movs
cmp
fsubr
sub
add
add
call
jns
in
add
add
add
cs
add
add
add
scas
cmp
add
mov
and
or
add
add
dec
clc
test
(bad)
out
ret
popf
inc
mov
push
imul
int
(bad)
enter
pop
add
add
add
add
add
mov
push
test
add
add
ja
cmp
int3
lods
sub
add
add
mov
add
add
add
add
add
shl
rcr
xor
dec
sahf
mov
ds
nop
nop
nop
nop
jle
xchg
or
add
add
adc
add
add
xchg
adc
add
add
xchg
push
sbb
add
mov
add
(bad)
add
add
lods
push
add
add
add
jmp
add
cmps
call
jae
jbe
xlat
(bad)
cmp
in
dec
cmc
ficomp
add
add
pop
adc
add
add
and
sbb
adc
add
add
jmp
or
add
add
imul
movs
add
add
mov
jecxz
shr
stos
shl
mov
cmp
add
into
sldt
add
xchg
arpl
add
add
sti
test
imul
adc
mov
and
les
test
push
mov
neg
mov
fbstp
add
add
sahf
mov
xchg
xchg
adc
xor
xor
lods
outs
mov
sbb
add
add
sub
add
add
push
in
jbe
adc
add
add
push
xchg
cs
std
aaa
lds
(bad)
xor
das
and
xchg
cmps
or
add
add
push
jo
add
add
(bad)
xchg
ins
or
mov
je
lods
cmp
test
mov
pop
add
add
push
pop
pop
les
add
and
mov
add
add
daa
pop
shl
xor
nop
ins
jecxz
jmp
add
mov
pop
je
addr16
aam
mov
dec
shl
sub
add
pop
jmp
sub
mov
hlt
mov
iret
jge
mov
add
add
scas
sub
dec
das
daa
push
add
add
fild
add
add
pop
outs
sbb
rcr
mov
rcr
jge
imul
sbb
add
add
cmp
mov
xchg
add
pop
cs
add
cmp
add
add
fstp
ins
out
sldt
add
pop
xchg
cmps
push
xor
out
xlat
out
es
leave
jnp
fstp
jmp
fldcw
add
add
push
mov
add
in
mov
add
int3
int3
int3
int3
int3
fisub
cwde
push
or
add
add
push
mov
(bad)
xlat
adc
je
nop
nop
nop
nop
nop
lahf
mov
imul
dec
mov
jnp
lea
imul
or
jne
push
xchg
dec
push
mov
bound
mov
push
test
add
add
xchg
cmp
push
add
add
or
out
icebp
mov
les
or
add
add
loop
sbb
enter
scas
mov
adc
add
add
add
add
mov
(bad)
je
add
add
sahf
call
sahf
aad
cmps
scas
jmp
cli
lds
out
xchg
arpl
jmp
cmp
call
push
add
add
sub
add
add
test
shr
stc
std
stc
cmp
xor
out
add
add
(bad)
lahf
mul
data16
fbstp
mov
add
add
push
and
xchg
dec
cdq
jmp
add
sbb
fcomi
or
add
add
add
add
add
add
jl
ja
popa
dec
sub
add
sub
bound
jne
or
add
add
je
dec
add
add
(bad)
or
add
add
add
add
inc
test
add
bound
aas
mov
fistp
add
add
jl
retf
mov
cmp
hlt
loope
mov
jmp
add
add
add
pop
shr
jnp
adc
add
add
popf
push
mov
sbb
add
add
outs
mov
jp
fsubr
jmp
outs
add
add
add
and
add
add
mov
shr
jg
add
add
scas
icebp
dec
push
sldt
add
aaa
in
cmp
add
shl
ins
sub
jbe
push
aaa
push
mov
sbb
fdiv
nop
nop
nop
nop
nop
cmc
cld
cmp
mov
retf
add
add
add
add
add
adc
add
add
pop
adc
add
add
or
add
add
sldt
add
fs
mov
add
es
jge
sbb
push
add
add
mov
retf
adc
add
add
lock
loop
clc
ror
add
add
add
neg
int
jns
stc
pop
add
add
shl
and
mov
sbb
add
add
jmp
int
fld
add
add
fcmove
int3
int3
int3
int3
sbb
xor
add
scas
or
mov
xchg
ins
shr
cmp
add
add
jb
lds
push
jbe
nop
nop
nop
nop
(bad)
sbb
rcl
mov
mov
xchg
xchg
add
add
or
js
mov
jle
mov
push
push
add
add
jnp
add
add
stos
sub
xor
add
retf
pop
sub
add
add
cs
jae
adc
dec
push
nop
nop
nop
nop
nop
mov
stos
xchg
sldt
add
cli
loope
adc
(bad)
stos
loope
push
arpl
pop
sahf
movs
add
std
inc
int
test
add
neg
cmp
dec
test
add
int
xchg
inc
mov
out
daa
data16
add
add
add
add
lods
in
or
clc
ret
and
sbb
repnz
sbb
es
cmp
cmp
jge
dec
mov
mov
mov
mov
jecxz
shl
mov
fist
nop
nop
nop
nop
nop
(bad)
aad
retf
cli
adc
add
add
add
add
std
fistp
inc
adc
add
add
inc
dec
sub
shl
cmp
add
(bad)
(bad)
icebp
int
repz
push
adc
add
add
fs
shl
and
mov
bound
test
and
imul
sbb
aas
add
add
add
add
add
add
mov
pop
das
dec
ret
xchg
out
outs
(bad)
mov
bound
adc
mov
sar
(bad)
pop
adc
add
add
in
mov
mov
push
lods
call
xchg
add
into
cli
ss
pop
repz
add
add
into
(bad)
mov
inc
push
cs
and
add
cs
dec
sub
add
add
cmps
(bad)
jmp
jg
mov
rol
add
or
add
add
bound
cmc
cdq
(bad)
test
add
dec
cmps
push
jne
add
jae
call
add
add
add
mov
jns
jecxz
pop
add
add
adc
or
add
add
mov
xchg
rcl
sbb
popf
aad
jecxz
daa
repnz
push
sbb
int3
mov
add
add
repnz
retf
add
add
jbe
cld
xchg
adc
add
add
sub
mov
add
dec
dec
imul
or
cmps
sbb
jle
jnp
and
mov
mov
or
add
add
rcl
cmp
ins
pop
add
add
or
adc
add
add
leave
lock
add
add
int
test
mov
nop
sbb
push
inc
aaa
sbb
clc
mov
(bad)
into
push
sti
or
add
add
icebp
add
add
mov
data16
pop
sub
sbb
lods
mov
add
sbb
add
add
pop
call
push
mov
mov
jle
mov
fwait
sub
pop
jbe
and
cmp
test
xchg
fistp
add
add
xor
or
xor
cwde
fst
add
add
lock
ja
leave
rcl
add
add
xchg
call
(bad)
frstor
adc
add
add
jmp
lods
jne
add
add
add
ds
jge
das
cmps
xlat
sbb
or
add
add
xlat
jle
mov
imul
add
add
mov
js
sbb
add
add
cmp
cmp
push
call
sbb
push
add
add
bound
lea
add
add
mov
push
push
cld
jecxz
pop
mov
lds
cmp
scas
mov
adc
add
add
(bad)
mov
out
std
icebp
jl
ja
add
and
mov
data16
add
add
sbb
cwde
cld
fnstenv
mov
ds
loope
or
add
add
add
add
push
add
add
mov
add
dec
movs
mov
add
or
push
add
add
xor
jmp
in
and
(bad)
arpl
xor
aaa
adc
add
add
pop
mov
mov
and
dec
stos
adc
add
add
adc
add
xor
loope
push
sbb
(bad)
fisub
mov
rcl
popf
sbb
fwait
add
add
add
out
(bad)
retf
test
mov
inc
inc
sub
add
jecxz
push
push
inc
add
add
add
loope
movs
inc
imul
sbb
retf
mov
xlat
cmp
push
mov
data16
pop
and
jae
add
add
or
add
add
add
add
cwde
cld
sbb
mov
add
xchg
imul
add
add
daa
sldt
add
sub
pop
jl
push
and
daa
jge
push
add
add
jl
xchg
mov
call
inc
mov
add
add
add
mov
mov
add
add
push
add
add
rol
and
dec
add
add
add
jns
imul
retf
jg
repz
fs
and
add
add
add
add
cmps
jbe
push
or
add
add
ret
sbb
(bad)
push
add
add
add
add
jbe
fld
add
add
popa
xchg
xor
add
xor
stc
mov
add
inc
xor
add
cwde
popa
jl
data16
add
add
sbb
inc
xacquire
fs
jp
add
add
push
fimul
call
mov
pop
(bad)
add
enter
inc
inc
cwde
dec
pop
add
add
frstor
dec
lods
out
cmp
cmps
adc
add
add
ja
inc
je
or
add
add
sbb
dec
ins
mov
loopne
mov
call
data16
add
add
loopne
rcl
sar
cmps
stos
dec
jb
push
add
add
add
add
add
repz
add
add
sbb
add
mov
pop
add
add
add
lds
mov
movs
hlt
sub
mov
push
and
push
mov
xchg
mov
cmp
cmp
xor
push
add
into
mov
add
xor
add
xor
xor
jne
inc
or
add
add
add
icebp
or
pusha
int3
int3
int3
int3
int3
pop
mov
loopne
std
cmp
jmp
int3
int3
int3
int3
xchg
dec
nop
nop
nop
nop
nop
push
mov
add
add
outs
retf
cmps
pop
add
add
in
xchg
jbe
xchg
push
pop
or
add
add
adc
add
add
add
add
(bad)
retf
outs
adc
add
add
je
arpl
test
jmp
add
xchg
jmp
inc
add
add
add
ins
mov
aas
scas
mov
lds
add
add
stos
adc
add
add
add
add
add
xchg
jnp
in
push
add
add
cmp
sar
addr16
stos
jno
push
push
jmp
add
add
xlat
retf
aas
sub
inc
jae
cmp
pop
add
loopne
mov
sub
lds
add
add
jp
fbld
clc
jge
dec
add
add
xor
pushf
(bad)
lods
addr16
adc
add
add
mov
add
dec
mov
inc
sub
jne
push
mov
cmp
test
add
add
scas
push
xor
in
scas
cmp
add
sub
add
add
cmp
sub
fld
add
mov
test
or
add
add
(bad)
fidiv
aad
repz
add
add
int
aaa
cmc
js
mov
add
jne
push
add
nop
nop
nop
nop
nop
cdq
repz
popf
adc
dec
arpl
sbb
(bad)
pop
jle
enter
xchg
jnp
and
pop
mov
sbb
js
or
add
add
jmp
nop
mov
add
dec
call
cmps
mov
sub
int3
jg
xchg
int
fistp
out
jno
arpl
or
sldt
add
mov
inc
std
push
ret
cmp
ja
xor
and
add
add
jns
loopne
sub
inc
outs
inc
xchg
mov
stos
and
or
add
add
inc
pop
ins
jp
es
int
or
add
add
add
add
add
add
pop
jb
cld
cmp
add
push
add
add
ficom
add
cmps
shl
inc
popf
test
in
enter
add
into
add
add
add
mov
(bad)
mov
add
mov
add
add
xor
adc
mov
xor
inc
cmp
add
add
xchg
cdq
mov
add
add
outs
push
and
ins
fnstenv
and
cmp
outs
jbe
stos
ret
sar
pop
int
call
bound
add
add
retf
loopne
and
mov
cdq
add
add
mov
inc
pop
std
mov
cmp
inc
jg
or
add
add
push
push
add
add
scas
pop
add
add
jmp
icebp
mov
push
add
add
add
jo
sbb
jmp
cmc
mov
push
add
add
(bad)
jo
push
(bad)
sahf
add
add
add
xchg
pop
sbb
cmc
jb
pushf
mov
rcr
fwait
jmp
lds
fbstp
sub
inc
clc
jnp
mov
call
jmp
cmp
add
(bad)
dec
xor
pop
add
add
rcl
inc
ret
dec
repz
pop
xchg
data16
add
add
cmp
cld
xor
add
add
scas
inc
push
adc
and
cmps
lods
sldt
add
mov
(bad)
mov
aas
inc
mov
int3
int3
imul
